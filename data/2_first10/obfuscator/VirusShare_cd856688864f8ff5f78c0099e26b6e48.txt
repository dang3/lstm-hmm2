stc
push
mov
bts
mov
call
lea
call
call
add
push
arpl
outsb
push
outsl
inc
insb
imul
add
or
push
add
or
jbe
std
clc
push
add
gs
popa
jbe
inc
imul
add
mov
and
test
mov
cwtl
add
add
push
popa
imul
jo
imul
outsl
jae
push
jne
je
gs
popa
add
add
je
push
outsl
push
imul
fisttps
jmp
clc
add
inc
add
call
xchg
jp
jb
cwtl
fistl
int
and
push
sbb
inc
mov
add
mov
outsl
xchg
inc
fcoms
jns
sti
fs
mov
repnz
fbld
add
ss
insb
mov
or
dec
sub
dec
rorb
and
add
ret
out
sbb
movsb
mov
pop
call
cmp
push
pushl
pushl
lea
jae
push
cmp
mov
lea
ja
not
dec
inc
jmp
and
loope
call
ljmp
ret
pop
xor
mov
inc
pushf
push
fistpll
cwtl
add
push
xor
and
cmp
fwait
aaa
adc
dec
leave
cmpsl
cmp
pusha
lea
jae
call
push
call
xorb
push
jmp
pushf
mov
pushf
mov
movw
lea
jmp
inc
push
leave
sub
pop
adc
jle
flds
insb
shrl
out
adc
dec
ret
popl
mov
xor
adc
push
dec
aam
cmpsl
dec
jl
sti
fprem1
ljmp
pop
ficoms
rcrl
sbb
ljmp
mov
fsubl
call
add
push
outsb
fs
gs
popa
addr16
add
fs
je
jmp
push
call
ja
inc
and
not
movzbw
pushl
pushl
popl
movzbl
pop
movsbw
lea
push
movl
push
mov
push
mov
pushf
pusha
pushl
ret
inc
and
jne
addr16
push
gs
and
jne
and
outsb
outsb
imul
jns
jne
and
jae
gs
cs
jae
sub
jne
insb
outsl
popa
and
and
outsl
insl
and
insl
outsl
jb
and
and
jae
popa
jb
and
jne
and
outsl
addr16
insl
add
add
je
jb
outsl
arpl
fs
js
push
add
test
cmpsl
inc
fdivs
les
xchg
inc
or
arpl
push
in
jmp
fwait
add
bound
movsb
lods
xor
xchg
fs
lea
jl
adc
cld
stos
faddl
movsb
cmp
xor
and
dec
cmpsl
daa
add
psraw
push
bound
push
lods
fs
pushf
mov
into
and
testb
imul
rsm
sbb
test
xchg
inc
xchg
jnp
stos
andl
arpl
movl
sbb
insb
cmp
punpckhwd
es
inc
into
out
out
aas
mov
lea
out
mov
aam
adcl
movsb
mov
mov
sti
inc
ret
add
mov
mov
les
shll
mov
clc
mov
call
aaa
xchg
sub
mov
cmpsl
imul
mov
or
into
sbb
ja
add
scas
jno
lods
mov
add
mov
mov
mov
add
inc
and
and
mov
aad
push
jnp
repz
add
jecxz
mov
aad
movsl
mov
and
mov
jb
and
out
mov
out
push
xchg
movsb
or
mov
dec
push
lock
mov
stos
mov
lods
xor
aaa
cmpsb
outsb
or
bound
ret
add
insb
jecxz
sub
ljmp
adc
or
cmp
mov
fisttpll
xor
inc
jno,pt
mov
mov
aad
adc
mov
mov
repnz
dec
or
push
mov
jmp
inc
xor
stos
mov
or
add
cli
in
adc
adc
sub
sub
mov
insl
cmpsb
cmp
mov
out
push
outsb
out
ja
loop
adc
aaa
dec
jb
inc
mov
adc
out
add
mov
std
mov
or
push
insb
shlb
out
sbb
inc
push
aam
leave
jmp
or
jns
aam
xchg
test
mov
jne
fstl
mov
push
xor
cld
in
jg
push
mov
mov
mov
sub
popf
or
inc
cmp
mov
pop
xor
add
dec
cmp
cmpsl
sbb
iret
sbbl
mov
pop
leave
into
test
shlb
daa
adc
mov
loopne
into
sbb
ss
mov
push
mov
shlb
aaa
xor
jecxz
orb
ret
shll
pusha
cmp
sarb
dec
daa
movsl
enter
and
cli
int
dec
xor
stc
xorl
and
nop
mov
xor
dec
negl
push
mov
inc
ljmp
jg
xor
int3
cmp
andl
imulb
lea
xor
int3
cmp
jno
adc
and
ds
and
hlt
int
aad
xor
cmpsl
or
test
out
mov
inc
mov
and
mov
jns
loope
mov
add
xchg
insb
int
arpl
ret
mov
ret
aad
adc
in
xor
mov
cli
pop
dec
scas
cli
je
loope
fidivrl
add
repz
int3
aam
ja
test
pop
push
ja
dec
les
cvtps2pd
fwait
dec
cmp
inc
les
hlt
cmc
rcll
mov
aad
aad
dec
xchg
mov
mov
loope
cmpsl
sub
pop
and
cmp
mov
push
pop
lahf
add
and
aaa
inc
es
imul
mov
push
insl
jae
aam
bound
lret
loope
sub
mov
nop
inc
or
shl
mov
ljmp
jns
int3
xchg
daa
cmp
mov
xchg
cmpsl
incb
mov
or
ret
or
test
shl
movsl
in
and
ss
outsl
adc
xor
push
cltd
xchg
or
cmpsl
jbe
in
xlat
xlat
cmpsl
pop
loope
ljmp
faddp
aad
xorb
fmull
and
jmp
setae
jb
adc
daa
xchg
xor
loop
sbb
cmpsb
xor
out
daa
subl
cmp
sarl
mov
mov
cmp
jno
bound
mov
mov
xor
jmp
test
shr
stc
sbbl
mov
push
adc
cmp
mov
cmpsl
mov
mov
mov
dec
lods
mov
cmp
add
add
mov
test
add
and
aas
movsb
cltd
jbe
mov
xor
cmp
divl
loopne
daa
add
daa
pop
les
mov
pop
sbbb
out
add
cmp
mov
push
enter
or
sub
lods
scas
ds
and
loopne
push
ffree
sub
ret
add
mov
xchg
mov
stos
rorb
insb
push
cmp
cmp
cmp
xor
ret
int3
fnstsw
push
and
fnstcw
pop
stos
or
mov
sub
stos
xor
loope
imul
add
fisubrl
add
and
popa
cmpsl
push
ss
push
jecxz
clc
add
scas
out
add
js
das
mov
cld
sbb
scas
and
shll
sbbl
jb
shll
xchg
mov
movsb
in
ds
jl
scas
jno
stos
mov
mov
and
cmpsb
mov
in
mov
or
push
or
cs
data16
push
cmpsl
std
loopne
bound
cmpsl
ja
stos
lods
dec
mov
mov
shlb
test
push
mov
and
stos
mov
push
add
adc
stc
into
lret
sbbb
cmp
pusha
pop
cmp
push
ret
and
cmp
fstpl
aas
pop
xchg
cld
and
ja
out
xchg
negl
fildl
repz
push
fsubrs
movsb
ss
cmpsl
fwait
xlat
nop
xchg
push
insb
icebp
bound
xor
aad
scas
aam
jl
je
pop
push
dec
mov
fnstenv
dec
mov
jle
xchg
mov
inc
mov
adc
sub
jo
in
out
jb
xor
cmpsb
ret
subl
add
mov
jg
scas
mov
notl
mov
loop
add
aad
shlb
pop
inc
lods
push
nop
orb
add
adc
sub
outsb
int3
sub
fisttps
mov
shrd
mov
adc
adc
sub
jae
fstps
arpl
mov
mov
aas
mov
outsl
mov
mov
dec
roll
jge
push
pop
mov
cmpsl
push
imul
mov
push
mov
mov
cmp
pop
insb
jo
pop
pusha
mov
or
or
loop
mov
orb
pop
popf
mov
ja
gs
call
mov
ja
call
mov
mov
mov
mov
add
fwait
mov
mov
jb
cli
cli
scas
ja
mov
clc
stos
jbe
loopne
ja
shl
jae
out
testb
mov
iret
xor
jmp
pop
pusha
mov
push
lods
dec
addr16
dec
push
jmp
mov
cmpsl
lods
lds
jo
lret
pushf
cmpsl
das
enter
idiv
inc
jne
and
aaa
and
pop
sbb
ds
popa
and
sbb
adc
lea
ret
adcl
cmpb
aaa
cmc
mov
aaa
adcl
enter
and
adc
cmpsb
out
int
jmp
or
mov
cmpsb
xchg
xor
mov
call
test
in
push
xor
sbb
loopne
mov
test
lods
mov
ret
jmp
or
test
dec
jmp
insl
cmpsb
inc
inc
loope
cmp
jmp
cltd
popa
enter
test
jmp
fwait
and
addr16
test
push
sbb
icebp
dec
aaa
orb
sub
test
lret
in
dec
mov
popa
test
mov
in
adc
mov
sbb
data16
push
fxch
cs
xor
shlb
mov
sub
subb
add
movsb
dec
cwtl
incb
xor
ret
rolb
dec
adc
es
arpl
ret
cmc
xor
xchg
push
enter
and
or
xor
add
imul
pushf
cmp
pop
loopne
mov
sti
jo
in
cmpsb
mov
loope
fldcw
mov
sub
mov
int3
stc
mov
fsts
add
or
push
shlb
es
lods
into
dec
ret
orb
aaa
insl
dec
jg
jle
xchg
inc
jmp
push
out
xor
dec
mulb
cmpsl
cs
inc
dec
fbld
lods
xchg
aaa
sbb
or
imul
add
sub
pop
add
shlb
fsubr
clc
inc
int3
dec
repz
repnz
and
into
dec
dec
cmp
and
cld
and
cmc
xor
dec
outsl
aaa
es
mov
inc
in
mov
mov
shrb
mov
dec
stos
loopne
or
add
iret
sub
inc
sub
and
add
push
mov
cli
or
xor
pop
cmp
mov
test
dec
fisubs
add
addb
repnz
and
fidivrl
mov
dec
cmp
push
xor
adc
push
pop
push
jbe
int
or
fisttps
dec
or
ja
cld
jmp
pop
cmpsb
fcmove
clc
add
mov
mov
mov
cmpl
pop
jbe
mov
pop
out
and
mov
ljmp
or
in
daa
adc
fs
xchg
addr16
enter
pop
pushf
leave
inc
mov
cli
mov
sbb
loop
pushf
into
shlb
ficompl
repz
arpl
and
stos
ret
shlb
add
rcl
lods
int3
xor
pop
movsl
inc
mov
add
pushf
enter
mov
aas
mov
loopne
pop
xchg
out
popl
adc
mov
stos
andl
sub
cld
test
mov
push
inc
push
inc
es
test
cmp
pop
cs
or
comiss
dec
js
mov
ja
sub
add
mov
stos
ret
rcrb
inc
ret
scas
inc
inc
in
ret
out
add
lds
mov
and
inc
push
adcb
int
sub
loopne
outsb
adc
out
cli
push
out
xor
cwtl
enter
popf
jecxz
mov
mov
xchg
cld
aaa
or
sub
sbb
imul
jno
int3
dec
out
andb
ret
jnp
xchg
lret
push
inc
adcb
push
mov
and
or
mov
push
out
hlt
pushf
xlat
stos
push
sahf
test
mov
pop
add
and
outsl
aam
mov
pop
sub
mov
ud1
out
imul
ficoml
int3
inc
fnstenv
mov
imul
pop
cmp
jne
dec
cmp
mov
mov
adc
cmp
repz
mov
ficoms
subl
sub
les
pop
xorl
cmpsl
dec
mov
jecxz
int3
and
or
in
test
shl
outsl
int3
add
shlb
add
push
mov
sub
out
adc
mov
jnp
cmpb
lods
and
gs
dec
int3
mov
mov
outsb
les
fsts
cmp
dec
or
adc
mov
inc
mov
xchg
cli
cld
pop
add
jp
lods
add
mov
aas
popa
mov
cmp
mov
mov
sub
inc
push
test
cmp
mov
or
mov
cld
push
or
test
cmp
adc
lret
or
sub
movsl
enter
loop
jo
nop
inc
scas
cli
mov
sub
repnz
mov
andl
jo
adc
push
inc
arpl
rolb
cmp
and
leave
and
lods
outsb
out
fdivs
add
and
ljmp
dec
mov
aam
xor
movsb
mov
xlat
inc
add
add
push
mov
lret
mov
int
rolb
add
in
sub
push
stos
rorb
mov
jns
loopne
stos
or
cmpsl
mov
sbb
in
lcall
int3
mov
or
enter
or
stos
stc
sub
lds
ud2
fdivrs
fcmovnbe
mov
cmp
mov
gs
and
test
sub
idivb
dec
daa
fisubrs
push
imul
ljmp
xchg
in
adc
mov
mov
jl
gs
xor
push
das
lcall
push
outsb
insb
sbb
into
in
fwait
mov
inc
xor
xlat
dec
daa
cmp
daa
loopne
add
jae
sti
cs
daa
cmc
addr16
icebp
testl
mov
das
vmovntps
add
jge
xchg
mov
mov
arpl
gs
xchg
test
dec
notb
cmp
dec
xor
add
push
lret
mov
jo
push
filds
imul
cmp
jmp
mov
push
add
add
mov
jg
mov
fxch
lret
ljmp
push
test
pop
test
sub
leave
clc
cmpsb
sub
cltd
push
push
jp
rcr
shlb
mov
xchg
xor
cmp
pop
jno
push
loop
sub
out
sub
or
shll
xor
cmp
lds
sbb
xchg
fs
sbb
out
add
lret
pop
mov
adc
mov
dec
adc
jge
sub
lahf
cmc
adc
xchg
in
mov
iret
push
lods
dec
cwtl
dec
cmp
or
xor
pop
cwtl
das
xchg
or
sahf
cld
sarl
push
pop
ret
leave
scas
or
loop
inc
rcrl
mov
cmp
ss
roll
pushf
pop
jp
fcmovne
test
fldpi
add
adc
arpl
xor
shll
or
cmc
jmp
mov
mov
xor
test
jne
in
pop
xor
shr
pop
mov
cmp
arpl
xchg
jb
mov
and
lret
cli
rcrl
in
out
xchg
adc
or
stos
inc
dec
call
and
mov
outsl
es
stos
stos
jecxz
lods
and
imul
imul
inc
and
sbb
cmpsb
pop
inc
shl
in
out
inc
cmp
imul
mov
cmp
imul
imul
add
dec
in
cmpb
or
jl
orl
jbe
mov
negl
addr16
mov
daa
cmp
add
inc
mov
inc
std
mov
cmp
inc
scas
mov
cmp
jns
sub
out
add
mov
insl
sub
mov
movsb
pushl
sbb
mov
sub
or
into
inc
xlat
add
inc
mov
ret
pushf
or
stos
and
adc
dec
and
inc
cmp
or
cmpsb
push
imul
das
addr16
test
mov
in
js
cltd
inc
ss
mov
add
sti
and
stos
lods
mov
movsl
mov
loopne
in
mov
xchg
push
push
in
mov
in
leave
fisubs
add
adc
stos
mov
sbb
loope
in
and
lock
mov
mov
push
test
int3
outsl
and
sbb
add
pop
ds
mov
in
inc
outsl
ffree
je
add
repz
xor
sbb
add
cmp
cmpsl
ret
inc
mov
in
loopne
popa
movsl
iret
cmpsb
cmp
and
sub
mov
lods
out
inc
mov
add
test
lods
mov
daa
pop
jns
mov
push
data16
mov
and
dec
loop
mov
push
xor
jp
mov
add
jb
xor
pusha
cmpsl
inc
cmp
cmpsb
mov
mov
xchg
repz
cmpsl
sti
or
push
dec
movl
sbb
add
in
xchg
sub
orb
pushf
sbb
inc
pop
mov
cmp
or
lock
add
mov
adc
dec
pop
sbb
adcb
fcmovbe
mov
fs
das
push
insb
adc
inc
shrl
or
rorl
add
rorb
mov
flds
out
jne
lcall
stos
xor
dec
loopne
sub
loop
icebp
sub
inc
fcom
les
hlt
push
inc
shlb
sbb
and
lahf
mov
sbb
iret
out
inc
pop
lret
addl
sub
mov
or
dec
outsb
jecxz
cmpsb
and
sti
popf
out
push
push
mov
jb
daa
popa
ds
fnstcw
pop
loop
pop
or
repnz
push
or
jae
mov
andl
out
mov
iret
rolb
in
jecxz
push
fcomp
leave
adc
cmpb
jno
adc
leave
sbbl
push
dec
imul
push
test
and
icebp
cli
add
cmp
repz
lret
das
sbb
leave
int
dec
fsubrp
int
pop
insb
fsubs
ret
sti
les
mov
es
dec
cmp
ficomps
loopne
inc
das
ljmp
lods
daa
movsl
popf
ret
mov
pop
inc
xor
loop
aas
lods
inc
xor
jno
das
imull
rep
pop
fsub
or
popf
addb
sub
movsl
lock
push
sti
rep
push
ret
mov
push
mov
xor
xchg
out
mov
add
pop
cmpsb
sbb
dec
stc
pop
add
fistl
xchg
dec
mov
mov
bound
jo
and
add
je
lea
stos
out
enter
jg
jl
lods
xchg
mov
mov
or
push
mov
jno
sub
sbb
xor
subl
iret
sahf
adc
add
push
imul
sbb
xlat
or
jmp
inc
mov
insl
jae
test
sbb
aaa
mov
test
xchg
ret
ljmp
and
std
mov
dec
or
push
fs
jecxz
and
dec
out
mov
popf
push
pop
dec
loope
and
movsl
rorb
fiaddl
shlb
outsb
jb
cmp
out
add
sub
sub
mov
xchg
lods
ret
roll
add
outsb
sub
add
nop
incb
dec
pop
push
jne
scas
popf
ljmp
scas
jmp
cmp
xchg
bound
add
rorl
cltd
inc
cmpsl
push
lret
icebp
or
jne
xchg
add
mov
ds
mov
pop
sbb
imul
mov
dec
shll
add
mov
arpl
or
mov
andb
rol
push
adc
mov
mov
or
sub
xchg
je,pt
pusha
jmp
mov
pop
push
repnz
pop
out
pop
clc
sbb
mov
mov
jmp
lods
mov
cmpsl
or
dec
repz
aaa
out
nop
mov
mov
cmp
cmc
xchg
dec
xor
mov
out
and
loop
sub
xchg
inc
cmp
jb
stos
out
scas
faddp
into
and
lods
out
fs
inc
mov
nop
cmp
cs
jbe
dec
mov
sub
aad
test
sub
shrb
cmp
cmpl
push
mov
jle
int3
cmp
iret
xlat
or
movsb
mov
adc
or
sub
push
in
adc
inc
sahf
mov
into
aaa
mov
push
gs
jno
aam
dec
jmp
xor
scas
sbb
movsb
xchg
shll
pop
inc
add
mov
scas
pushl
mov
mov
add
pop
fucomi
add
ret
loopne
popa
cmp
mov
ret
stos
shl
and
scas
sbb
add
daa
out
mov
and
aad
mov
mov
imul
out
in
sbb
xchg
ret
jne
in
mov
daa
and
cmpsl
pop
mov
outsl
adc
and
scas
inc
adc
push
xor
or
xor
scas
mov
shlb
leave
enter
xor
lahf
aaa
inc
mov
into
out
add
xlat
dec
dec
mov
cmpb
in
push
pop
in
pop
xchg
mov
dec
mov
shll
pop
lods
lret
xor
leave
testb
mov
mov
xchg
lods
lods
cmp
or
xor
lea
push
pop
xchg
push
inc
fdivs
int3
lret
cmpsl
sti
dec
js
cmpsb
cmpl
das
stos
cltd
cld
mov
shlb
repnz
movsl
push
and
int3
xchg
dec
jge
dec
dec
int3
cmp
mov
cmp
add
add
add
pop
add
jno
lea
lret
out
jns
outsl
xchg
add
mov
pandn
arpl
cmp
mov
pop
sbbb
dec
mov
daa
lret
sub
das
and
cs
push
into
insl
and
mov
sub
sub
lock
cmp
int3
inc
lret
test
call
push
xbegin
push
ret
rolb
cmp
cltd
cli
push
inc
xchg
add
cmpsl
subb
mov
mov
aam
lret
in
sti
bound
add
cmp
stos
cmc
mov
or
add
scas
loope
movsb
in
shrl
mov
repnz
add
scas
cmp
mov
jmp
xor
cmp
enter
inc
mov
out
push
mov
inc
mov
or
cmp
ret
jge
ds
pop
arpl
aas
cmpsl
dec
or
insb
mov
lods
fidivrl
mov
mov
hlt
fstl
clc
inc
mov
iret
adc
or
mov
iret
movsl
jmp
clc
ja
adc
mov
test
lret
inc
movsl
negl
iret
sbb
outsb
add
xchg
xchg
idivb
mov
scas
mov
mov
or
inc
enter
cmp
mov
scas
jl
fnstcw
xor
popa
mov
jbe
xchg
pop
repnz
add
scas
test
add
push
and
subb
mov
cmp
xchg
fistl
and
jmp
mov
cmpl
sbb
clc
dec
xchg
add
ja
int3
dec
mov
inc
xchg
xchg
mov
push
inc
xor
adc
mov
dec
xchg
fpatan
mov
mov
das
rolb
int
sub
popf
sbb
cmpsb
nop
mov
outsl
xlat
pop
push
ret
rcrl
xor
out
mov
mov
leave
testb
mov
hlt
stc
jne
and
aad
cld
cmc
outsl
lods
cmpsb
adc
out
dec
daa
push
in
imul
ljmp
jmp
in
lahf
addb
aas
rclb
sti
xchg
add
or
xchg
mov
jge
push
cs
mov
pop
movsl
mov
mov
dec
jb
mov
dec
cltd
sub
push
dec
fcoms
dec
sti
ret
xor
imulb
push
mov
in
das
lcall
pop
notb
repz
or
and
int3
das
aad
mov
add
ljmp
mov
fcmovu
dec
sbb
clc
sbb
or
in
inc
dec
pushf
jno
adc
or
enter
and
loop
movb
xor
sbb
idivl
shlb
push
out
dec
pop
or
stos
jae
aas
xlat
fdivl
stos
push
push
mov
rcrb
negb
aam
mov
frstor
ljmp
pop
imul
inc
psrad
xor
stc
push
xorb
or
cmp
dec
shl
mov
cmp
xchg
xchg
clc
lods
aas
clc
jmp
cmpsl
call
push
sub
inc
xlat
movsl
call
outsl
push
mov
insb
or
mov
clc
jne
mov
movups
pop
xlat
cmp
mov
loopne
dec
out
popa
shrl
sti
cmp
cmpsl
cmp
and
mov
cmp
sahf
fs
gs
push
subb
test
mov
aaa
test
loopne
mov
adc
mov
in
outsb
mov
mov
mov
push
pop
sub
mov
or
lret
xchg
js,pn
iret
andb
aam
and
imul
aaa
jns
stc
test
sarb
xor
dec
test
dec
jns
dec
fadds
out
xor
addr16
test
mov
mov
movsl
addr16
das
data16
out
pop
das
sti
daa
push
pop
mov
imul
sti
push
xlat
mov
pop
mov
aaa
push
add
ss
mov
pop
or
xchg
mov
cmpsl
jecxz
xor
outsb
mov
sub
mov
jmp
divl
sub
subb
adc
sub
cld
sbb
fs
xor
test
xchg
orb
adc
out
test
pop
adc
fwait
rol
cmp
xchg
mov
and
ret
sbb
mov
iret
stc
aas
das
jb
pop
jnp,pt
adcl
loop
pop
clc
sub
out
popf
popa
sub
xchg
pop
pop
iret
lds
pop
adc
aaa
mov
and
mov
fs
jns
cli
add
mov
inc
dec
lock
aaa
lret
nop
push
decb
imull
dec
pop
cmp
push
or
cs
inc
sbb
scas
scas
mov
and
and
push
and
hlt
mov
dec
pusha
ret
pusha
nop
sarl
shrl
cmpsl
addl
dec
inc
sbb
fsubrs
inc
test
push
addr16
mov
movsb
inc
or
shll
lods
loopne
mov
xor
xchg
pop
jns
or
mov
sbbl
push
test
xchg
dec
out
jo
or
push
cmp
push
xor
xor
sub
shlb
subb
and
stc
push
scas
dec
mov
and
sbb
mov
xor
inc
add
insb
and
aas
sub
rorl
sarb
xor
adcl
lret
loopne
add
xor
or
sub
pop
pop
mov
add
sub
push
dec
adc
scas
add
aad
dec
test
shlb
loope
mulb
sahf
arpl
addl
inc
aaa
bound
or
push
jl
stc
push
leave
push
add
les
dec
nop
inc
adc
bnd
in
hlt
loop
loope
mov
pop
mov
pop
and
cs
push
xchg
fadds
lods
or
add
xor
iret
adc
dec
xchg
cmp
out
or
adc
jae
xor
jge
imul
rcll
loopne
push
push
jmp
dec
fcomp
xor
or
leave
mov
rcll
push
sub
xchg
cmp
mov
mov
rorl
sbb
ja
rolb
cmp
mov
out
sbbb
dec
sarb
rcrb
mov
jae
mov
mov
xor
push
xchg
xchg
or
dec
mov
aam
pop
test
push
enter
push
inc
rcrl
mov
mov
out
subl
movsb
xchg
lods
ljmp
or
add
xchg
pop
mov
pop
jmp
arpl
or
insl
xor
sub
mov
out
pop
shlb
xor
add
sub
cmp
and
dec
add
cld
cmp
jae
sbb
add
inc
in
mov
add
or
push
cmp
popf
test
test
sub
test
popa
lock
fildl
js
add
or
mov
mov
push
dec
jmp
leave
fildll
dec
faddl
mov
cltd
jns
lods
adc
inc
sbb
lock
pop
movsl
mov
jmp
dec
aam
xorl
rclb
ret
cmp
inc
dec
cmp
ss
add
push
fimuls
mov
adcb
mov
mov
and
mulb
dec
movaps
fs
test
sbb
cld
test
push
in
aas
push
cmp
into
and
add
lret
stos
push
xor
imul
nop
cmp
arpl
sahf
xchg
out
pop
sub
mov
xor
mov
mov
test
imul
int
outsl
add
mov
mov
pcmpgtb
test
repnz
je
into
mov
int3
jecxz
jae
mov
adc
es
cmp
or
daa
mov
into
xor
mov
push
cs
in
daa
sub
cmp
fisubrl
lret
dec
fnstenv
push
cwtl
mov
ret
push
mov
scas
inc
jg
sub
mov
movsl
xor
lods
mov
insb
adc
cmpb
jno
cmpsl
xchg
int
imul
sub
es
cmovo
bound
mov
and
jns
daa
daa
cmp
mov
xor
fstpt
xor
sub
adc
test
aaa
and
add
dec
mov
in
andb
imul
or
shll
mov
iret
lea
fs
sub
movsb
pop
xor
int3
sbb
sbbb
in
adc
dec
adc
push
or
subb
add
and
dec
bound
jp
clc
sub
loopne
bound
mov
dec
lds
pop
icebp
outsb
out
call
pop
imul
test
inc
divl
mov
mov
sbb
fcos
fs
imul
push
shl
into
aad
shlb
inc
or
imul
sub
icebp
cltd
dec
cmp
xchg
mov
cwtl
push
iret
and
or
push
pop
dec
sbb
lock
mov
and
ficoml
add
lea
xor
js
xor
cmp
xor
mov
mov
es
xchg
add
or
imul
push
add
out
pop
adc
jecxz
mov
ss
mov
xchg
push
daa
cmp
push
sub
cmp
cmp
mov
jecxz
mov
clc
sub
scas
in
add
lcall
cmp
xchg
das
lock
add
mov
and
fwait
lock
fdivrs
ret
ds
jmp
mov
pop
inc
xor
cmpl
incb
popf
sub
jle
inc
repz
jmp
mov
stc
pop
push
test
lahf
mov
jle
sub
mov
add
cmpsb
mov
pushf
mov
adc
out
rorl
jl
ja
lret
adc
daa
cmpsb
add
or
clc
and
cmpsl
mov
xor
cmp
enter
and
push
gs
enter
rclb
adc
out
and
andb
std
flds
cmp
pop
pop
sub
dec
daa
lods
out
cmp
ds
xorl
es
stc
pop
pop
sub
clc
int3
jno
xchg
popa
mov
aad
add
mov
iret
or
stc
push
mov
inc
arpl
and
arpl
in
pop
dec
mov
or
das
frstor
mov
mov
jae
ret
inc
cmp
sarb
inc
sbbb
std
and
mov
cmp
popa
fldcw
ljmp
mov
xchg
mul
cmpsl
cli
push
pop
gs
dec
loopne
and
mov
cmpb
mov
jle
mov
push
mov
es
aaa
xchg
stos
sub
lods
and
push
xchg
sub
xchg
es
shrb
xor
and
icebp
jae
popf
or
push
outsb
mov
jmp
call
cmpsl
jmp
enter
xchg
sbb
add
in
data16
fmuls
mov
and
jle
cmp
dec
inc
or
in
cs
test
xor
sbb
dec
ljmp
dec
add
or
in
mov
and
adc
xorb
cmp
add
xor
pop
ret
mov
xchg
sti
adc
mov
fimuls
adc
shrb
mov
adc
jle
out
popa
mov
cmp
cmp
movsl
xchg
push
dec
jl
test
sub
adc
push
cmpsl
xor
ficoms
imul
jle
movsl
int3
sarb
pop
dec
out
add
in
shlb
mov
lcall
fiaddl
in
xlat
daa
test
orb
mov
ffree
pop
xor
adc
cld
into
lods
jmp
push
imul
push
les
push
xchg
push
hlt
sbb
ljmp
outsl
shl
or
xlat
lret
push
mov
in
mov
fucomp
cmp
sbb
les
adc
or
pusha
and
lods
add
sti
sbb
and
push
mov
lret
movsl
mov
test
fcompl
orb
dec
test
popf
mov
add
movsb
je
scas
out
ss
loop
jmp
mov
inc
iret
xchg
xor
sbb
and
cmp
jnp
nop
push
popf
outsb
aam
out
jge
xor
lock
or
and
es
ror
or
xchg
mov
push
xor
sub
mov
enter
setb
add
mov
cltd
cwtl
and
lock
cmp
mov
sbb
pop
sar
loopne
xor
aaa
scas
mov
dec
pushf
add
das
mov
ja
or
inc
mov
out
mov
or
push
mov
mov
or
cmp
movsb
data16
int3
addl
imul
mov
mov
ret
rcpps
xor
mov
test
push
xchg
or
add
add
pushf
cltd
inc
push
cmp
add
ret
jns
xor
xor
pop
add
lods
adc
sbb
into
xor
movq
lea
or
mov
stos
xor
cmp
pushf
mov
stos
adc
lret
out
mov
mov
sub
mov
movsb
rcrb
or
clc
mov
xchg
or
out
les
loope
jb
adcb
xchg
lods
sbb
pop
in
inc
mov
pop
xor
mov
movsb
push
add
in
scas
push
dec
sub
scas
cmp
movsb
mov
add
jecxz
rcll
push
ss
pop
sub
adc
mov
pop
sarl
push
mov
push
dec
dec
sub
push
adc
lret
int3
sahf
mov
repz
adc
push
xor
lods
push
loop
ja
mov
dec
xor
loope
push
sbb
cmp
cmp
push
add
fistpl
dec
xor
push
or
xor
outsb
xor
imul
pushf
iret
les
movsb
mov
jbe
es
and
fbld
movsl
movsb
mov
movsl
xor
mov
dec
jnp
cld
iret
mov
fs
xchg
mov
out
jae
inc
jecxz
sub
loopne
push
cwtl
fcoml
push
sbb
lods
or
xor
orl
mov
adc
icebp
mov
addb
cmpsl
jg
push
test
push
arpl
mov
pop
les
or
xchg
add
imul
dec
add
xchg
sbb
mov
jns
cmpsl
ret
movsb
aas
into
push
lods
xchg
inc
add
rcr
push
icebp
xchg
cmc
pop
repnz
sub
andb
cmpsl
insb
dec
ret
pop
aas
add
xor
push
push
add
stc
movsl
fidivs
rol
stos
push
add
pop
out
adc
push
lret
cmp
mov
add
fiadds
jle
cmp
inc
test
cmc
sahf
pop
int
cmpsl
fisubl
fdivrl
clc
add
and
mov
mov
test
ret
pop
fsubl
aaa
in
dec
into
ret
pcmpgtw
and
dec
lock
stos
loop
and
sub
mov
test
test
movl
inc
mov
lods
cmp
rorl
xchg
movsb
mov
andl
mov
shll
aas
mov
add
xor
and
stos
loopne
in
cmpsb
lds
test
cltd
fdivrl
push
sub
test
dec
pushf
out
jnp
sub
add
sbb
jne
int
cmpsl
jnp
mov
out
cld
imul
jne
dec
add
jns
push
loopne
mov
pop
scas
popa
add
or
repz
bnd
add
or
shr
sbb
and
ret
pop
and
mov
hlt
gs
add
xor
inc
and
push
mov
xor
add
aas
rorl
ret
mov
inc
xchg
cmc
cmpsb
int3
jnp
lret
les
push
mov
adcb
jbe
clc
add
mov
pop
jno
mov
bound
sub
sbb
repz
and
ljmp
inc
add
std
std
aam
addb
shlb
adc
fsub
push
or
sbb
loopne
repnz
sub
xor
cmpsl
adcl
iret
arpl
inc
rorl
cmpsb
in
inc
sub
inc
mov
add
fwait
dec
lcall
popf
cmp
shr
add
mov
bound
jb
jne
and
push
sub
jmp
xor
push
adc
cwtl
adc
mov
rorb
sti
outsl
add
movsb
pop
out
stc
in
aaa
jo
insb
xchg
sbb
out
inc
mov
push
mov
xchg
std
aas
in
mov
iret
pop
dec
cmp
push
xchg
sub
mov
mov
roll
mov
push
xorb
nop
mull
jae
aaa
rorb
cmpsb
mov
jmp
mov
push
dec
test
inc
cmpsl
mov
or
pusha
movsl
mov
jnp
cmpb
ljmp
push
add
repz
addl
testb
ret
cmc
adc
mov
mov
out
rep
mov
mov
into
xchg
in
xor
mov
mov
or
stos
les
mov
adcb
test
or
add
dec
pushf
aaa
push
ret
add
mov
mov
cmpsl
decb
das
loop
orl
addb
xor
repz
mov
adc
mov
mov
stc
hlt
lahf
add
dec
outsl
dec
add
xor
jp
ss
sub
mov
pop
push
sbbl
push
or
mov
inc
cmpsl
pop
jo
clc
inc
fsubl
or
cld
and
jns
mov
rcrl
mov
pop
sar
lret
sub
pushf
cltd
push
inc
xchg
jl
pop
andl
push
ds
int
xchg
mov
sbb
or
sahf
push
test
or
popa
repz
mov
mov
bound
loop
sub
out
cli
icebp
stos
mov
jo
daa
in
add
dec
sbb
dec
mov
rcll
leave
adc
or
and
mov
or
mov
or
testb
mov
cmp
int3
mov
pop
cmp
sgdtl
sti
or
pcmpgtw
sub
cmpsl
dec
jb
psubsb
lds
loop
sub
xor
mov
mov
push
mov
mov
xchg
ret
adcl
and
inc
cmc
out
out
into
xchg
jnp
sbb
orb
andb
enter
je
add
mov
add
mov
loope
fcomi
mov
stc
xchg
or
adc
scas
push
and
cwtl
lret
orb
je
popa
xchg
push
mov
mov
jno
add
add
mov
fsubs
dec
enter
sbb
cld
and
inc
repnz
lods
iret
push
iret
les
xchg
pop
lcall
add
jb
mull
loop
adc
dec
orb
andl
cmpsb
in
xchg
scas
js
aas
popa
inc
inc
rol
xor
mov
scas
mov
cmp
rol
negl
mov
cmpsl
sub
dec
xor
and
rcll
adcl
push
push
mov
loop
xchg
cmp
lret
cwtl
add
mov
dec
mov
add
fs
sbbl
cmp
or
jp
mov
sti
jmp
xchg
xorl
imul
sub
ljmp
cmpsl
lahf
and
popa
mov
clc
mov
xor
pop
add
testb
add
jmp
fs
add
add
cmpsl
and
stos
pop
mov
movsb
pcmpeqb
pushf
xor
cwtl
mov
mov
add
add
dec
and
rcrl
sub
sbb
ret
push
popa
dec
aam
outsl
jae
ja
subl
pop
mov
shrb
xchg
cmpsb
jle
xorb
mov
and
inc
movsb
fistpll
mov
das
jo
xor
mov
ljmp
dec
cmp
mov
pop
in
in
sahf
sbb
ss
fwait
cmpsl
fsub
data16
cmp
lods
jnp
into
mov
lret
adc
cmpl
test
stos
push
bound
fidivrl
andl
and
pop
fadd
aad
or
mov
mov
mov
add
es
mov
clc
xchg
or
movsb
cmp
xchg
add
and
enter
xor
outsl
mov
cmp
mov
in
aam
sbb
xor
and
test
inc
arpl
sub
adcl
mov
sbb
cli
lret
andb
js
leave
movsb
ljmp
iret
xchg
pop
idivl
sub
inc
add
cltd
cmp
inc
out
pop
fsubrl
jnp
js
fidivl
in
mov
rcr
xchg
add
mov
aaa
push
mov
es
pusha
pop
mov
xchg
aas
push
xor
aaa
push
aam
add
fwait
xor
and
in
sti
test
sbb
add
pop
xor
sub
arpl
mov
subl
xor
scas
push
dec
sub
lock
fnstenv
pop
jecxz
add
clc
inc
mov
cli
push
adc
pop
and
xchg
movaps
call
nop
pop
cli
push
mov
push
dec
mov
int3
dec
mov
inc
pushf
jmp
ret
jb
cmc
cmp
xor
add
or
push
jne
mov
mov
add
add
call
cmp
cmp
imul
sahf
daa
ljmp
lret
jae
hlt
loopne
ret
repz
clc
xor
mov
out
push
aaa
insl
mov
mov
lret
test
roll
adcl
and
cmp
xor
aaa
int3
jo
loope
xor
mov
mov
and
imul
inc
jecxz
cwtl
xor
inc
mov
cltd
cmp
aas
shrb
adc
mov
int
addb
add
insl
pushf
mov
movups
fsubr
xorb
add
jne
or
andb
add
fimull
push
sarb
push
fisubl
dec
mov
cmp
cmc
cmpl
or
into
imul
ds
sub
ds
movsl
push
jmp
shrb
scas
ret
aam
mov
xorb
cli
imul
or
icebp
mov
rclb
shrb
add
push
or
push
scas
jmp
dec
mov
rclb
add
inc
mov
cmpsl
dec
movsl
pop
dec
mov
mov
les
push
das
insl
stc
or
cmpsb
in
xchg
pushf
jne
add
inc
mov
pop
mov
stos
mov
and
sbb
jecxz
test
xchg
sub
sub
sbb
sub
jmp
sub
ficoms
aaa
outsl
pop
iret
mov
movd
push
test
aaa
pop
and
push
push
sbb
int
or
inc
jno
loop
aam
ja
rcrb
add
add
in
sub
mov
add
push
dec
inc
mulb
and
ret
fistpl
in
pop
fiaddl
loop
jns
mov
add
divl
outsb
push
bound
fcmovne
ss
out
iret
mov
push
xor
and
testb
add
push
jg
andb
lret
pop
clc
imul
mov
lret
pop
repnz
es
shll
iret
lock
cmp
or
push
orl
das
mov
pop
push
das
daa
or
cmp
xlat
xor
xlat
clc
or
adc
and
xor
push
push
add
por
add
mov
sbb
test
sub
mov
loop
cmpsb
cmp
dec
add
mov
mov
gs
aaa
in
dec
ljmp
insb
mov
movsl
adc
shl
or
add
add
xchg
fpatan
cmpl
adcl
mov
jne
push
mov
mov
insl
clc
or
push
lahf
imul
xor
xchg
repz
and
in
xor
mov
out
mov
ret
adcl
test
test
xor
and
or
jnp
fmuls
out
outsl
mov
sbbl
js
stos
les
mov
cmpsl
cmp
in
js
mov
mov
aas
xchg
repz
fiaddl
jg
mov
ds
xor
mov
xchg
xlat
jae
mov
cmpsl
jns
or
jns
mulb
pushf
mov
mov
dec
sub
test
pushf
jae
dec
mov
push
xor
jl
outsl
lods
popa
mov
mov
lock
inc
shlb
rcll
stos
xor
out
sbb
lods
sahf
push
mov
or
push
mul
inc
arpl
enter
pop
popf
mov
sbbb
leave
scas
arpl
mov
jecxz
and
jle
nop
push
add
repz
mov
mov
aas
fsubp
inc
test
scas
fisttpll
dec
repz
jae
cmpsl
adc
xchg
cmpsl
inc
lock
scas
clc
popa
test
xorl
stos
lods
ret
mov
mov
mov
xchg
arpl
xor
das
test
repz
les
rorl
imull
aam
dec
push
inc
adc
pop
mov
mov
stos
mov
dec
out
nop
dec
scas
popa
ror
gs
dec
fcomps
decl
pop
jae
cli
outsb
repz
sarl
and
gs
getsec
fwait
and
pop
xchg
dec
add
aam
mov
xchg
mov
in
push
in
xor
mov
je
xorl
or
add
and
dec
dec
and
imul
mov
in
mov
cmp
sbb
cltd
mull
insb
mov
cmp
add
push
dec
and
sub
inc
xor
inc
jno
es
rorl
dec
shlb
mov
cmp
dec
jp
iret
les
xor
ja
mov
dec
and
mov
subb
xchg
or
in
scas
mov
or
testw
loop
in
clc
subl
push
clc
mov
add
out
adc
call
das
pop
and
outsl
fisttpll
loop
cmpsl
iret
icebp
sbb
xor
pop
leave
and
and
movsb
xor
xchg
sub
sbb
and
jno
mull
loope
xor
imul
or
int
mov
stos
enter
sbb
mov
adc
xor
push
mov
push
dec
frstor
rcl
inc
bnd
daa
mov
jb
ja
mov
xor
cltd
js
pop
adc
movsl
sahf
cwtl
xor
jo
insb
fs
iret
popa
pushf
jl
jmp
xor
jnp
xor
out
popa
mov
push
mov
mov
cmp
pushf
ret
mov
mov
or
imul
inc
into
pusha
sbb
xor
das
addl
aaa
pusha
or
and
mov
adc
push
ss
das
in
mov
pop
push
xchg
bound
add
xor
fwait
add
lret
mov
xor
dec
mov
int
add
das
scas
mov
pop
out
shr
jge
inc
and
pop
and
add
das
stos
dec
sbb
pushf
shlb
add
mov
jne
add
mov
lods
cld
fs
popa
adc
mov
clc
pop
and
mov
outsl
add
mov
push
shlb
adc
mov
out
pusha
insb
dec
es
mov
xchg
mov
fsub
cmpl
mov
repz
arpl
mov
xchg
movsl
outsb
andnps
jae
dec
daa
and
xchg
mov
push
nop
mov
clc
cmc
add
popf
rolw
jne
cltd
iret
in
xchg
adc
lcall
xor
cwtl
into
cltd
gs
dec
fstpt
cmp
imul
xor
inc
testl
loop
lock
ljmp
bswap
xchg
fs
jge
sbb
mov
mov
outsl
mov
mov
bound
mov
xchg
out
arpl
mov
xchg
test
pop
hlt
das
xor
lods
sub
fs
dec
xchg
aaa
xor
lcall
popa
and
icebp
or
pusha
inc
mov
outsl
xor
adc
xchg
arpl
das
hlt
repnz
lret
mov
inc
dec
jge
bound
aad
popf
shll
and
jl
int3
lea
in
jnp
in
dec
iret
pusha
js
jg
stos
and
lods
sub
push
add
rcl
and
test
ret
push
jle
xlat
loope
clc
or
mov
lock
rorl
or
testl
cltd
stos
jmp
out
sub
lcall
xchg
add
or
into
push
stos
loopne
into
imul
jg
lea
add
test
xor
jns,pn
inc
add
sbbl
mov
push
jle
cmp
repz
sti
lods
jo
jl
test
dec
pop
roll
push
mov
arpl
ret
mov
cmp
dec
out
punpcklwd
popa
cmp
lcall
xchg
inc
aam
jg
sbb
scas
subl
adc
lods
testb
test
xor
xor
arpl
test
mov
das
lods
lods
dec
xchg
xlat
dec
add
divl
xchg
flds
pusha
jo
xchg
scas
test
push
mov
aad
mov
lods
and
inc
xchg
xchg
imul
stos
cmp
repnz
pop
jle
es
adc
mov
dec
inc
jae
popa
ja
arpl
mov
imul
xor
stos
js
xchg
pushf
ja
sbb
xchg
lds
push
xchg
and
add
dec
movsb
add
flds
nop
addb
mov
push
stos
push
ret
and
push
add
mov
fistpl
outsb
popa
cltd
dec
adc
sbb
sbb
enter
mov
gs
call
es
arpl
in
lods
inc
inc
inc
cmp
stos
daa
lds
repnz
xchg
mov
jno
xchg
pushf
test
push
in
jnp
cmp
jnp
fldl
aaa
mov
aaa
out
es
mov
jns
in
xor
dec
movsl
cmc
ds
dec
lret
dec
xchg
sbbb
jno
daa
shll
add
sbb
rorl
dec
sbb
inc
mov
inc
push
aas
xchg
jno
jg
repnz
mov
xchg
mov
push
test
incl
les
jg
mov
and
rorl
popa
cmp
ret
xchg
mov
push
arpl
xor
mov
cmp
push
repnz
clc
xor
and
add
xchg
sbb
cld
test
negb
mov
loop,pn
lods
mov
push
mov
ja
mov
movsb
sub
bound
sub
dec
and
add
pop
fldl
add
pushf
ret
in
mov
hlt
ss
jmp
cld
cmp
jmp
repnz
dec
aam
add
mov
cmpsl
out
adc
lret
sbb
sarb
imull
and
cmpsb
shll
loop
loop
mov
das
stc
jno
cmp
jo
pop
imul
and
imul
int3
in
inc
pushf
bound
bnd
addl
arpl
roll
fsubl
xor
fwait
clc
add
test
jno
js
mov
testb
in
mov
push
ss
mov
push
iret
push
mov
out
mov
pop
aam
cld
orb
mov
insl
push
push
shrl
push
adc
das
sub
lods
js
fsubl
idivb
ret
cmp
fstpt
cld
in
insl
cmp
and
pushf
add
scas
fdivrl
stc
xor
and
xor
jecxz
shrb
out
or
outsb
add
mov
test
cli
sub
mov
push
add
dec
mov
jno
test
inc
cmp
xor
jae
xorb
test
jne
mov
andl
push
mov
mov
jno
hlt
imul
fistpll
mov
cmpsl
fldl
mov
imull
ret
dec
repnz
inc
jno
and
xor
jns
decb
mov
movsb
xchg
cmpsb
xor
pop
movsb
push
or
pop
add
xorb
add
sub
nop
testl
jno
imul
cs
test
lods
add
jg
adc
jecxz
cmpsb
clc
fs
and
add
adc
jecxz
xchg
sbb
dec
add
add
xor
aas
lret
xchg
subb
aam
movsb
or
les
push
sub
cmp
clc
movsl
imul
test
pop
mov
imul
andb
std
lret
lods
fimull
jno
movsb
add
mov
cmpsl
enter
adc
and
or
and
dec
push
xchg
xchg
mov
fisttpll
add
lcall
xor
push
aas
ljmp
inc
stos
ja
int3
and
or
xor
mov
mov
xor
loop
rorb
pop
xor
inc
dec
mov
push
add
stos
in
xchg
jp
cmpb
jae
mov
mov
add
dec
adc
ljmp
xorl
out
push
and
addb
jecxz
adc
cmp
xor
insl
loopne
dec
mov
lock
imul
aad
sub
xor
cld
and
lahf
sar
dec
push
int3
inc
adc
mov
inc
dec
mov
out
mov
push
mov
jo
loop
push
mov
ja
cmp
cmp
jmp
mov
in
dec
adc
dec
dec
addb
add
ja
pop
shlb
add
dec
and
jo
mov
mov
ja
dec
pslld
loopne
mov
cwtl
xor
mov
aas
cmpsl
das
mov
shlb
aam
ret
shr
jg
mov
add
fmull
ja
in
xchg
mov
lcall
in
sbb
ds
or
dec
push
popa
mov
mov
lcall
mov
es
xor
and
cmp
add
addr16
add
xor
shlb
inc
and
cmpsl
mov
jbe
cmp
add
and
mov
jle
outsl
add
jo
ret
das
push
sbb
ljmp
push
push
sbbl
aam
cmpsb
push
jnp
push
cmp
dec
xor
mov
rcrb
mov
jmp
adc
movsl
sarb
mov
cmp
add
andl
sub
mov
sub
lock
arpl
ret
ret
mov
add
sub
lock
ret
insl
sub
das
lods
xor
xchg
push
and
cmp
pop
mov
dec
mov
and
mov
mov
pop
xchg
mov
xchg
sbb
xor
push
fsubrs
sbb
test
cmpsl
out
scas
pop
icebp
dec
int3
jl
lcall
jno
int
mov
iret
jb
xor
mov
or
adc
adc
inc
ret
iret
movsb
or
movsl
mov
mov
sub
cli
push
xor
pop
addr16
mov
shlb
jns
dec
xchg
cmp
ret
push
pop
mov
pop
sbb
mov
inc
rcrb
dec
mov
sti
dec
mov
jb
inc
sub
pop
pop
faddl
jae
mov
adc
inc
mov
mov
testb
clc
std
mov
std
jge
dec
jmp
xor
stc
in
sar
cwtl
enter
in
pushf
push
or
out
add
adc
mov
mov
negl
mov
dec
iret
cmp
mov
mov
add
roll
movsb
scas
fdivrl
or
into
mov
aaa
push
shlb
or
rcll
add
or
push
adc
adc
in
sub
and
ds
incb
sahf
rclb
xchg
sbb
mov
ljmp
inc
std
fnstcw
push
dec
sub
jl
or
fwait
cmpsl
std
jns
dec
shll
jmp
mov
sub
in
arpl
mov
pop
inc
int3
insb
jl
fimuls
in
pop
xor
xchg
mov
ret
out
push
and
pushf
xchg
xorb
lea
cli
std
loopne
lret
leave
jg
loope
push
mov
les
pop
rclb
or
orl
adc
mov
lret
pop
in
fidivl
sahf
ljmp
or
enter
cmp
push
rcll
dec
add
sbb
js
mov
int3
sub
in
and
pop
and
adc
lods
aas
jge
and
arpl
mov
xchg
rcrb
out
jnp
xchg
cmpsl
pop
shll
cld
fsubl
push
int
mov
and
imul
testb
mov
sbbl
scas
repnz
xchg
std
aaa
inc
push
push
pop
push
rcrb
data16
shll
jp
pop
mov
mov
cmpl
mov
hlt
in
mov
jno
mov
mov
xchg
pop
mov
movsb
popf
add
jns
push
js
mov
mov
insl
loop
gs
out
enter
jae
add
inc
dec
add
push
in
mov
cmpsl
cmp
aaa
cmp
shl
cmp
push
add
imul
orl
jecxz
jbe
push
sbb
xchg
fmull
dec
dec
push
xor
fcompl
sub
pop
cmpsb
nop
mov
cltd
rcrl
call
ss
add
dec
jle
ret
dec
xchg
int3
movsb
test
insb
mov
clc
cmpxchg
sbb
sbb
dec
sbb
nop
fs
enter
movsl
repnz
pop
subb
out
mov
inc
xor
xor
push
inc
jno
ret
jae
cmpsl
and
lret
cmpsb
fwait
push
ret
testb
hlt
add
cmp
rolb
push
xor
fsts
xchg
dec
jns
cmp
xlat
les
daa
fnstcw
push
or
mov
sbb
mov
pop
pop
mov
bound
pushf
xor
dec
dec
shrb
pop
and
movsl
mov
mov
mov
mov
jno
out
daa
mov
cmpsl
repnz
add
ret
mov
sub
lret
dec
cmp
mov
nop
mov
aaa
jno
sub
xchg
sub
cli
adc
imul
xchg
subl
orl
adcl
mov
rclb
pushf
rorb
add
push
xor
and
ret
insl
mov
stos
jl
mov
cmpsl
jbe
mov
add
into
dec
sub
jmp
fbstp
mov
int3
cmpsb
daa
std
roll
pushf
idivl
popl
lret
mov
push
or
inc
push
sub
add
outsb
jns
stos
pop
in
adc
stc
out
icebp
stos
jmp
mov
dec
aas
loop
mov
or
dec
sar
movsb
scas
andl
sarl
aad
movsb
je
arpl
push
add
inc
aaa
and
int
mov
jnp
fldt
jbe
scas
cmpsl
sbb
push
stos
sub
rolb
test
aad
rorl
cli
pop
mov
sbb
shlb
jl
ljmp
cld
adc
out
mov
sbb
adc
cwtl
lods
mov
cli
arpl
nop
mov
push
leave
pop
popa
xchg
sub
out
imul
das
dec
dec
in
and
push
xchg
mov
or
add
out
adc
mov
add
mov
xor
xor
jmp
inc
jo
lods
movups
mov
mov
xor
rcl
cmp
sub
sbb
mov
push
xchg
pop
orl
mov
or
cwtl
imul
or
or
call
ficompl
stc
int3
in
aas
and
loope
fidivrs
fwait
imul
movsl
push
mov
mov
cs
pop
push
out
lret
incb
ficoml
inc
lods
dec
in
mov
in
sbb
add
or
push
int3
test
mov
ss
rol
ret
pop
xorb
lahf
bound
clc
test
addr16
push
xorl
into
imul
sub
rorl
testb
xchg
out
orb
pushf
mov
add
sub
push
dec
lret
mov
push
lcall
push
andl
mov
mov
jbe
add
pushf
test
mov
mov
mov
and
leave
cmpb
add
arpl
adc
gs
mov
jne
lea
jnp
or
add
cmpsl
pop
dec
arpl
andl
sbb
mov
dec
push
cmpsb
out
addl
test
xchg
mov
add
rorl
mov
sbb
sub
jnp
xchg
inc
xchg
dec
insl
sub
enter
lock
in
das
push
xor
icebp
push
aam
int
mov
mov
dec
pop
and
sub
mov
inc
add
add
push
jns
addb
adc
add
jb
sbb
mov
subb
loope
inc
xor
sub
imul
bound
cmpsl
jge
pop
es
or
mov
repz
or
aaa
add
shl
jg
rcrb
mov
inc
push
aas
mov
outsl
cmpsb
jno
shrl
leave
mov
mov
shr
jge
add
push
mov
mov
xor
dec
push
rolb
inc
push
jns
dec
inc
loope
inc
push
mov
pushf
push
mov
jl
daa
mov
loopne
adc
jbe
mull
adc
dec
xorb
adc
addb
jmp
sub
or
rolb
inc
sub
pop
arpl
and
bound
cmp
inc
outsl
movsb
jp
mov
les
out
scas
movsl
mov
and
dec
mov
or
pushf
aaa
mov
scas
xchg
mov
xchg
mov
jmp
cmc
dec
jmp
aad
in
mov
sub
dec
dec
lea
add
xor
enter
or
jns
pushf
mov
fdivs
scas
es
sub
lea
push
push
jp
enter
xor
mov
repz
dec
or
dec
and
ret
jbe
add
imul
lock
sbb
js
xor
mov
test
jge
hlt
dec
cmpsl
popf
fs
loop
push
inc
xor
mov
stos
add
movsl
xor
and
lods
inc
mov
outsb
int3
lea
mov
xchg
lret
or
cmpsb
add
addb
mov
adc
stos
out
enter
loop
pop
push
and
mov
mov
adcl
hlt
and
sar
fnstenv
xor
iret
xor
inc
in
bound
cmpl
vmovsldup
rcrb
lds
xor
and
fmull
xor
test
shrl
outsl
int3
xchg
sub
sub
cmp
ljmp
jb
std
loopne
enter
add
mov
sbb
scas
push
xchg
std
rolb
cmp
imul
xchg
ds
ret
movsl
ficoml
pop
imul
enter
in
iret
mov
mov
adc
fmuls
lcall
stos
mov
std
mov
mov
rcr
inc
and
mov
jl
ss
mov
mov
clc
sub
scas
add
aam
add
dec
movsl
mov
mov
push
add
lods
or
xchg
mov
dec
dec
add
popa
jnp
dec
add
add
sbb
cmpsl
sbb
add
push
lret
jbe
mov
aam
orl
or
ja
mov
mov
or
mov
aas
das
or
mov
mov
adcb
pop
cmp
aaa
mov
sub
add
mov
mov
add
cmpsb
or
jae
cmp
inc
dec
aad
xlat
int3
sub
add
jmp
inc
fwait
jae
cli
lods
pop
sub
stos
fwait
pop
jo
ret
lret
push
imul
or
add
cmpsb
adc
xorl
cmp
push
add
xchg
outsb
into
pop
adcl
dec
xorb
out
icebp
dec
add
fsubl
das
out
inc
jecxz
mov
xchg
lret
inc
or
lea
mov
adc
adc
inc
ljmp
dec
and
loopne
orb
or
into
or
in
and
mov
add
ja
xor
in
imul
stos
in
jo
sbb
mov
ds
push
cmpsl
scas
outsl
mov
or
pop
insl
inc
xchg
lea
push
fdivrl
paddusw
dec
clc
rcl
adc
rcrb
jecxz
or
cmp
int3
lea
aas
in
cmpsb
ja
mov
imulb
ja
adc
les
adcl
in
mov
imul
daa
mov
decb
add
inc
push
push
mov
or
stos
adc
ljmp
imul
int3
jmp
out
mov
xor
lret
and
mov
mov
sbb
stos
and
test
hlt
jg
push
and
outsl
mov
cmc
out
out
cmpsl
pushf
mov
lcall
imul
and
push
mov
push
cmp
cs
mov
sub
add
imul
sbb
mov
loop
cmpsb
inc
jns
push
stos
mov
pusha
xor
push
scas
add
mov
out
inc
xchg
inc
idiv
jbe
mov
insb
xchg
cmp
xlat
mov
sbb
and
lods
test
mov
clc
pusha
or
cmp
mov
xor
inc
or
andb
mov
pusha
aas
mov
jecxz
arpl
mov
out
addb
outsl
aaa
mov
lahf
mov
mov
mov
mov
and
or
daa
lret
jae
mov
ret
cmp
or
jb
cld
stos
cmpsl
lock
out
sti
int3
mov
mov
push
enter
repnz
ret
mov
add
and
into
mov
xor
push
fidivrs
dec
jmp
mov
inc
mov
cli
negl
add
fisttpl
xchg
dec
lret
lahf
mov
mov
repz
or
mov
jg
lret
dec
or
sbb
loope
add
or
repnz
ret
sub
push
sbb
int
mov
sbb
jmp
lea
stos
lret
push
leave
xchg
aaa
or
xchg
out
shrl
clc
aas
mov
lods
out
cli
xchg
add
fdivs
mov
pop
inc
push
or
cmpl
sub
lret
loopne
aam
inc
arpl
mov
je
adc
sbb
dec
pop
lret
jecxz
xor
or
subb
ss
mov
fdivs
sub
inc
in
repnz
fisubrs
arpl
nopl
push
rorb
and
lock
push
mov
jmp
mov
add
or
xor
jp
test
add
aam
iret
push
out
imul
cmp
or
mov
jmp
cld
in
cmpsb
mov
push
mov
jae
shr
mov
pusha
int3
mov
bnd
popa
add
mov
std
fisubs
testl
mov
ret
push
push
mov
xor
cmpsl
or
orb
ja
push
adc
popa
sbb
pop
mov
loop
sub
push
sub
rorl
mov
aas
test
push
jg
cld
sahf
mov
or
xcrypt-ofb
cmpsl
scas
loopne
out
jecxz
add
pop
pop
xor
sub
into
inc
add
mov
rcrl
adc
aam
shr
das
fldl
push
bound
bound
int
sub
cmp
jae
cmp
je
mov
add
mov
jp
sbb
ret
xor
shll
insb
ret
pop
and
in
mov
ret
jns
pop
mov
and
cmp
adc
pop
aad
xchg
dec
rol
or
mov
sub
fcoml
jae
lods
test
xor
sbb
inc
mov
add
or
lea
push
mov
mov
add
loop
sub
movsb
cmc
ljmp
xorl
sub
or
cs
mov
cmpsl
mov
ss
cli
or
mov
and
add
movl
lock
aam
test
xchg
xor
add
xor
or
add
or
mov
into
sbb
scas
pop
dec
shr
fstpt
push
push
inc
xor
lret
bswap
clc
xor
lea
mov
jl
imul
push
dec
mov
enter
dec
mov
ja
push
scas
repz
jg
fisttpll
lcall
aam
and
adc
add
jecxz
enter
imul
mov
push
sub
dec
leave
pop
dec
push
mov
add
shll
xor
ljmp
fisttpll
les
dec
dec
bound
dec
push
xor
pop
in
in
xor
ljmp
subb
movsb
pop
addr16
ret
ud1
roll
mov
pusha
jmp
jae
lods
addb
imul
inc
push
aas
iret
test
shll
flds
xchg
or
lret
push
mov
jle
lods
mov
add
push
gs
cmpsb
pushf
xchg
jb
ret
ljmp
enter
add
insb
popa
shlb
repnz
add
mov
pop
clc
pop
dec
vfrczpd
mov
movsl
sbbl
pushf
ret
mov
rclb
jno
jg
popa
in
lret
mov
outsl
cmp
jno
or
push
ret
rolb
rcl
and
and
movsl
js
adcb
xchg
rcll
jae
cmpsl
scas
sbb
mov
sbb
push
jbe
inc
xchg
enter
lods
xor
mov
mov
lods
in
shlb
subl
nop
xlat
mov
hlt
stos
imul
add
push
arpl
lcall
and
icebp
setl
mov
in
mov
jb
inc
testb
iret
add
mov
push
popa
rcrb
movsl
xor
add
pop
dec
xchg
cli
fisttps
jp
gs
mov
ret
insb
js
in
shr
ret
mov
add
mov
dec
or
adc
mov
mov
or
das
rclb
out
cwtl
xchg
sti
pusha
dec
xchg
mov
mov
shl
out
aaa
cli
lds
imul
aam
jnp
and
shrl
jno
rclb
loopne
out
ja
fistps
shr
sub
setge
lea
jg
jb
xchg
nop
dec
sub
cs
dec
push
sbbl
dec
add
and
sti
xor
cmp
subl
push
jl
scas
les
cmpsl
xchg
sub
jne
xor
and
out
mov
pusha
sub
pop
dec
rcrl
test
roll
cmp
mov
repnz
sbb
aas
dec
or
mov
add
test
xor
js
fs
stc
mov
je
sarl
rolb
add
lret
rcrb
addb
rclb
xchg
xlat
mov
inc
mov
lret
and
shlb
mov
mov
les
bsf
outsl
loope
dec
roll
mov
orl
add
add
addl
aaa
mov
ret
dec
xor
insl
xor
jl
daa
xor
popa
cmp
jmp
test
dec
xchg
cmp
push
jns
and
ret
lock
fimuls
cmp
xchg
jmp
mov
lret
in
xor
cmpb
mov
mov
push
in
cmpsl
sub
loopne
mov
lds
inc
add
push
movsb
stos
insl
movsl
das
jae
cltd
mov
ljmp
into
ss
mov
jno
jmp
add
push
fdivrs
repz
fidivs
dec
or
push
movsb
or
jbe
mov
pop
cmp
inc
push
jle
lcall
popa
mov
inc
loopne
rorl
imul
and
int3
mov
or
mov
aam
fdivs
mov
int3
sbb
xchg
les
ret
lea
dec
or
inc
pop
outsl
jnp
mov
and
xchg
sbbl
sbb
mov
lea
dec
adc
xchg
sub
xor
lock
fidivrs
and
aam
mov
pop
pusha
test
or
mov
aam
je
mov
fnstsw
shll
bnd
sub
xor
in
cmp
lret
push
cmp
mov
js
jno
ss
dec
in
jg
and
xor
cmp
fwait
dec
add
mov
mov
in
pop
xchg
add
and
and
insb
sbb
rcrb
cmpsb
ljmp
xor
cmp
test
cli
add
lods
xchg
int3
sbb
add
cmp
aad
aas
cmp
cli
imul
hlt
jbe
xor
inc
fs
xorb
push
adc
fidivs
xchg
fnsave
aaa
add
mov
sbbb
sub
aaa
push
xorl
daa
bound
mov
sbb
mov
lret
mov
arpl
test
mov
and
xor
pusha
movsb
bound
push
xchg
inc
outsb
pop
inc
fisttpl
mov
xchg
or
sti
xor
icebp
mov
mov
mov
js
stos
lahf
hlt
les
repz
test
jg
push
jns
std
mov
jp
cmpl
sbb
xchg
or
add
xor
xchg
push
jl
and
mov
xor
lret
ds
mov
mov
sbb
and
in
sbb
shr
jae
push
fisubrs
cmpsl
adc
jno
xorb
add
cmp
fisubs
add
jmp
jmp
mov
jnp
loopne
call
push
mov
incl
push
aad
dec
mov
mov
mov
pop
outsb
arpl
and
mov
ret
push
aaa
cmp
mov
ret
pop
sub
test
repnz
or
nop
cmpsl
add
les
stc
rol
add
add
arpl
mov
arpl
cvtps2pi
ret
push
add
ret
cmpsl
and
or
mov
add
orl
add
lods
push
sub
push
ljmp
sarl
leave
add
sbb
fisttps
int3
push
mov
repz
fcmove
fwait
push
cmp
push
cwtl
stc
test
jmp
inc
mov
pop
push
das
cmp
adc
push
aas
mov
inc
pop
outsb
sub
push
dec
pop
mov
jmp
sbb
in
leave
mov
add
leave
add
mov
out
clc
xlat
sbb
sbb
adc
sub
inc
cmp
insl
aad
hlt
roll
cld
movsl
mov
jae
loopne
imul
lds
subl
or
xchg
andb
pop
xor
arpl
xor
or
fxtract
fadds
repz
scas
mov
shrl
cwtl
scas
push
xlat
cmp
mov
mov
cmp
adc
icebp
mov
inc
sub
scas
or
mov
mov
xor
inc
push
into
dec
sub
leave
mov
mov
addb
daa
push
xchg
daa
pop
dec
ds
sub
or
and
xchg
mov
push
aas
mov
mov
subl
cld
leave
fnsave
pop
outsb
or
cmpsl
scas
cmp
sti
dec
sbbl
pop
insb
repnz
cmpsl
les
les
ret
xchg
mov
or
hlt
adc
loope
popf
adc
mov
dec
fisttpl
test
mov
shrd
add
jnp
push
movl
mov
in
call
jnp
fisubrs
incb
inc
mov
cmpsb
out
gs
inc
notl
cld
cmp
mov
das
cs
imul
sbbb
pop
sbb
inc
mov
add
and
icebp
sub
mov
push
aaa
and
adc
lods
aas
into
inc
bound
fdivrl
jge
sbb
xchg
fs
push
hlt
lcall
mov
add
iret
add
cmp
inc
add
pop
adc
dec
cwtl
push
idiv
jb
loop
cmp
repz
icebp
and
xor
push
pop
inc
andb
pop
testb
adc
repz
xchg
jae
ljmp
sub
movsl
push
xor
movsl
clc
inc
in
jmp
push
out
lea
xchg
lock
xor
sti
cmpsl
xor
nop
add
stc
les
mov
test
sbb
cmpsl
dec
fisttpll
lar
cmp
jbe
mov
jmp
cltd
mov
mov
mov
pop
in
push
aas
jge
pop
lds
filds
les
pop
loope
mov
test
das
inc
mov
mov
loop
sti
ret
ret
inc
fsubs
ret
lea
stos
scas
sar
sub
insl
dec
rol
xor
sub
fwait
push
jecxz
test
mov
xlat
mov
sti
pop
mov
loop
push
push
xchg
scas
pop
xor
sub
std
push
sbb
dec
loop
mov
aaa
or
sarl
into
jp
fidivrl
or
mov
cmpsl
sub
hlt
sub
pushf
test
cwtl
jl
push
stos
sti
in
addb
push
add
sub
ffree
outsb
nopl
out
jge
jle
pusha
and
rcr
mov
and
sub
cmp
daa
fwait
push
mov
xchg
xlat
out
xchg
cmpsb
xor
aaa
lods
test
and
mov
addb
mov
adc
cs
mov
divb
decb
sub
fdivs
dec
xchg
xor
mov
lcall
pushf
mov
les
ds
inc
fildll
and
repz
lock
xor
adc
lahf
fistl
add
inc
aam
mov
mov
aas
add
add
mov
jnp
mov
cs
hlt
arpl
push
out
je
into
arpl
xchg
mov
push
in
leave
popf
cmp
jb
fs
xor
cltd
cmc
fcoml
into
xor
mov
mov
bound
stos
mov
mov
jne
arpl
lods
ret
xchg
xor
xor
stos
bswap
sub
out
or
or
cmpsl
jbe
or
popa
int3
lahf
ret
addb
popa
fld
insl
das
pop
cli
mov
add
fidivs
lods
add
cmp
jmp
dec
pop
add
scas
dec
pop
loope
in
or
cld
cmpsl
and
pop
mov
mov
mov
lods
cmpsl
mov
mov
and
mov
adc
jecxz
mov
add
cmpsl
inc
or
sub
add
shlb
cmpsl
pop
adcl
and
add
mov
adcb
inc
add
cmp
and
mov
mov
cli
mov
push
repnz
cli
rcll
cmpsl
stos
inc
lret
xchg
outsb
lock
pop
cmpb
popf
lret
dec
lea
daa
inc
xor
orb
adc
jge
mov
add
popf
mov
aad
orl
mov
and
dec
adc
mov
mov
clc
or
mov
xor
or
loopne
jno
sbb
and
sahf
pop
adc
cmpsb
ret
inc
sbb
lcall
pop
int
mov
pushf
mov
outsb
std
inc
faddp
dec
out
jecxz
loope
lret
mov
int
inc
mov
adc
jl
pop
and
int3
inc
test
lods
dec
add
subl
mov
cmp
dec
es
repz
mov
push
jle
insb
mov
sub
inc
jb
jg
fsubl
aaa
jge
cld
inc
lcall
pop
mov
cmp
dec
fdivrl
push
in
mov
pop
adc
shlb
or
dec
xor
push
jp
shr
outsl
mov
jbe
or
ret
pusha
ret
or
imul
dec
lret
pop
and
gs
mov
cmpsl
test
inc
adc
or
test
and
jbe
call
sar
mov
out
mov
andb
repnz
jb
stos
ss
or
xchg
dec
xor
inc
stos
lcall
pop
add
mov
xor
sub
fisubl
sub
cmpsl
mov
pushf
and
inc
dec
xchg
mov
cld
sbb
inc
popa
jno
pop
aam
pop
push
ret
xchg
outsl
aad
cmc
mov
lods
mov
stos
jnp
jecxz,pn
push
shrl
mov
xlat
xorb
fs
xchg
jle
gs
xchg
sbbb
outsb
in
inc
shlb
cmpsl
jno
es
sbb
stos
jbe
cmp
xchg
inc
jb
mov
push
pop
rcrl
cmp
mov
lcall
pusha
adc
rcrl
subb
or
jmp
pop
dec
fidivl
fstps
iret
mov
aas
popf
lcall
out
clc
cmp
dec
test
scas
std
cwtl
ljmp
push
lock
and
push
rol
jmp
mov
addr16
stc
add
ret
je
inc
mov
add
mov
iret
or
sbb
mov
and
sti
orb
lcall
lea
add
or
xorl
or
movsb
fnsave
imul
outsl
push
push
cld
das
jne
out
lea
das
lret
int
jp
ret
cmp
test
dec
push
push
mov
pusha
subb
jg
xchg
imul
imul
fsubl
add
mov
add
out
pop
lcall
rorl
adc
int
into
dec
mov
movsb
mov
sti
icebp
xchg
stos
xor
adc
loop
out
dec
push
mov
mov
lahf
push
subl
push
xchg
fistpl
cmp
test
mov
cmpsl
or
movsbl
push
mov
loop
popf
jnp
outsb
in
sbb
xchg
dec
mov
add
add
mov
xchg
test
add
imul
xchg
vcvtdq2pd
loop
mov
mov
add
dec
js
and
mov
cmp
repnz
cmp
lods
faddl
sub
jle
xor
fwait
fs
jb
testl
pop
lock
and
or
sbb
mov
loop
xor
xor
mov
inc
xlat
movsb
jb
mov
jno
addl
jno
mov
lcall
insl
jns
sbb
enter
jecxz
les
nop
jae
mov
into
shll
lock
shrl
repz
out
lods
sub
dec
mov
mov
jne
clc
outsl
inc
mov
push
lret
or
jecxz
lds
dec
inc
lcall
pop
sub
adc
imul
lret
dec
mov
aas
scas
or
inc
add
mov
ds
orb
cld
cmpl
loop
das
ret
mov
mov
sar
out
push
fisubl
xor
push
imul
bound
xor
sahf
dec
push
loope
sub
pop
daa
mov
push
scas
mov
test
test
stos
dec
push
mov
xchg
xchg
std
in
mov
dec
int3
sbbb
sbb
mov
adc
xlat
gs
cmp
jb
movsl
add
xchg
mov
jno
xor
xchg
mov
ret
int3
rcr
xchg
rorl
or
jmp
icebp
pusha
push
add
add
jge
xchg
jecxz
mov
inc
leave
mov
fs
ss
dec
mov
inc
sti
push
or
dec
adc
xor
push
mov
or
push
arpl
jmp
adc
adc
in
mov
sarb
push
adc
inc
sbb
ja
outsb
cmp
shll
push
mov
enter
mov
lret
shrl
xlat
int
adc
dec
imul
addl
mov
orl
stos
and
test
out
fs
mov
enter
xchg
bound
scas
or
mov
jecxz
mov
push
repnz
adc
mov
mov
imul
push
xchg
lahf
dec
lret
mov
lock
out
mov
in
xchg
int
les
inc
sub
mov
test
xor
movsl
pop
out
addl
popf
cmp
sbb
and
les
mov
mov
adc
das
add
fs
adc
lret
jle
pop
dec
pop
push
mov
out
subl
outsb
rolb
xor
adc
inc
stos
and
adc
jne
js
adc
xchg
adc
fs
aad
dec
push
mov
push
mov
dec
aaa
addr16
xchg
bound
rcrb
xchg
sbb
xlat
mov
or
aaa
call
and
mov
sub
testl
ret
test
add
mov
jle
mov
add
push
and
push
mov
bound
movsb
sahf
sub
lds
cmp
lods
ret
fisttpll
inc
loope
or
subb
dec
dec
stc
mov
shl
xlat
jnp
int
lock
mov
fs
fstpl
lea
add
dec
popa
repz
xor
loop
mov
imul
mov
add
and
repnz
mov
ret
and
dec
imul
mov
int3
aas
out
dec
in
ds
dec
mov
mov
add
icebp
add
mov
loop
cmpps
xchg
shlb
pop
inc
shll
shrb
stos
or
rcll
shrb
imul
mov
pop
push
lar
rolb
jo
mov
push
add
dec
push
lret
push
mov
xor
or
xor
mov
push
shrb
mov
andb
xor
or
or
lahf
or
fcomps
inc
xor
xor
xchg
push
lret
add
cmpsl
repz
push
enter
mov
sbb
sbb
and
movsb
movsl
cmpsl
dec
dec
scas
orb
mov
imul
shll
ss
mov
xchg
xor
xchg
mov
shll
rorb
jo
loopne
jge
pop
xor
mov
mov
sbb
lcall
sarl
dec
jb
cmp
inc
popf
xlat
mov
mov
js
adc
loopne
ds
dec
mov
sarb
add
or
arpl
inc
mov
cmp
cld
sarl
dec
jae
push
mov
xchg
jg
out
ret
xchg
sbb
pop
cmp
jmp
cmpl
dec
pop
scas
stos
negb
or
xor
add
iret
fbld
stos
or
dec
addb
cmpsl
cwtl
repz
and
sub
mov
add
add
mov
cmp
dec
xlat
aas
push
js
push
scas
adcb
push
inc
push
movsb
fdivrl
mov
movsb
and
test
cmp
aaa
mov
lock
pop
or
arpl
cmp
outsb
add
xlat
andb
ret
xchg
enter
scas
push
and
hlt
mov
mov
mov
push
jb
mov
imul
lret
in
stos
ret
add
inc
adc
sbb
mov
xchg
or
inc
xlat
push
or
mov
repz
arpl
fbstp
aas
lock
outsb
add
stos
jge
stos
xlat
test
add
xchg
push
shlb
lcall
scas
cmp
xor
std
cmp
pushf
xor
xchg
test
in
mov
loop
xorl
faddl
inc
movsb
and
pop
adc
jmp
filds
sbb
pop
shlb
mov
notl
pop
jmp
sbb
push
imul
sub
mov
or
or
mov
rorl
in
popa
dec
clc
sub
xor
adc
aaa
mov
jmp
sub
push
mov
out
mov
rorl
jns
or
mov
sub
ds
mov
dec
mov
mov
fdivs
mov
out
pop
dec
das
mov
push
cwtl
cmp
or
in
jo
and
faddl
outsb
cmpsb
shr
mov
inc
lods
cmp
xor
jae
cmpb
or
insl
mov
test
cmp
insl
add
ret
push
inc
shll
cmpsl
std
lea
ja
addl
loope
ja
call
in
dec
adc
push
lret
fdivl
jnp
loope
xor
mov
cmp
sub
imul
xor
inc
add
sbb
ss
loop
inc
stos
and
adc
push
dec
jns
push
js
icebp
lret
inc
mov
outsl
mov
mov
ss
ret
pop
pop
notl
mov
mov
ljmp
jl
mov
lcall
push
aad
mov
add
jo
test
in
fstpt
repz
jno
pop
outsl
and
mov
es
leave
lret
aaa
mov
lds
popl
insl
mov
bound
fisubrl
push
or
pop
inc
sbbb
inc
sub
adc
dec
lds
aad
imul
in
out
sub
push
sbb
add
sub
pop
stos
and
or
or
leave
xlat
mov
jbe
imul
or
std
mov
scas
push
add
and
dec
fsubrs
cmpsl
call
cmp
cs
and
jno
push
xchg
mov
call
movb
mov
jp
mov
es
xchg
add
mov
cmpsl
mov
out
inc
mov
mov
xchg
lcall
scas
cmp
push
rorb
inc
ficompl
out
mov
jb
inc
mov
mov
out
add
loop
mov
jnp
scas
dec
or
andb
cmp
imul
outsb
xor
fnstsw
lods
mov
loop
fcom
movsb
repnz
or
lcall
mov
outsl
out
mov
sbb
mov
cmp
shlb
cmpsl
lock
notl
rclb
dec
shll
stos
mov
iret
sbb
mov
mov
movsb
mov
bound
daa
insl
subl
jl
or
add
rclb
push
into
sub
push
decb
data16
clc
pop
ja
andl
enter
xchg
data16
lods
jle
rclb
xor
push
or
pop
test
ret
mov
add
enter
fildll
mov
cmp
mov
xchg
jno
xchg
push
rorl
fisttps
xor
push
add
xor
jnp
and
pop
mov
cmp
sbb
in
push
sbb
shll
cld
mov
mov
mov
mov
adc
mov
mov
mov
xor
int3
jo
mov
and
jp
and
loope
popf
fimuls
mov
popf
mov
dec
leave
cld
mov
lods
lock
loop
pop
or
fistl
lcall
mov
loopne
rcrb
jle
je
in
xchg
arpl
mulb
or
test
jp
in
or
arpl
test
rcl
in
mov
xchg
ljmp
mov
jno
fistpll
testl
cmp
sbbb
in
into
decl
jno
or
xchg
ret
lahf
scas
fsub
pushf
or
or
sti
cwtl
add
rcr
xorb
test
hlt
movsb
fs
loop
cwtl
and
lret
inc
cs
dec
insl
or
xchg
rorb
mov
adcb
and
out
cmpb
jle
daa
sub
jecxz
or
xchg
lret
sub
and
xor
stos
rorb
lods
nop
add
mov
in
mov
outsl
and
scas
fbstp
jmp
lock
scas
mov
scas
lret
or
lds
push
push
lea
and
mov
enter
imul
xor
xchg
mov
xor
lret
mov
ud2
push
adc
push
fidivl
lret
mov
and
pop
pop
and
sub
out
daa
fldcw
stos
jnp
or
pop
cld
mov
int3
inc
mov
fsubrs
loope
jecxz
push
andb
sbb
addl
dec
pop
mov
cmp
or
pushf
cmp
inc
xchg
movsb
dec
and
cmp
cmp
repnz
cmpsb
call
xchg
daa
or
in
mov
add
addb
dec
xchg
out
inc
mov
adc
mov
cmp
rclb
xchg
movsl
mov
cmp
add
cmpsl
iret
xchg
ficomps
jp
les
pop
xorb
stos
stos
mov
mov
jl
cmp
ljmp
inc
outsb
repz
sbb
pop
push
cld
sti
mov
xor
aaa
adc
mov
scas
mov
js
shll
push
movsb
and
sub
dec
aas
subb
lds
fisttpl
mov
mov
push
mov
or
push
mov
fnstsw
aaa
dec
mov
or
sub
int3
out
inc
leave
cmpsl
stc
mov
mov
pop
notl
mov
mov
in
inc
xor
mov
dec
mov
cmpsb
outsb
mov
xchg
fwait
pop
imul
mov
ret
movsb
mov
filds
cmpsl
jbe
les
dec
cmpsb
push
adc
sub
fists
mov
and
sahf
loop
aam
jbe
mov
orl
mov
xchg
push
into
add
xchg
int3
xchg
jmp
cld
adc
jne
cltd
mov
mov
insb
cmp
or
iret
jecxz
aaa
or
icebp
test
mov
cmp
es
mov
jo
enter
ret
clc
shll
or
adc
mov
cmpsb
pusha
jno
and
pop
xchg
loope
xor
das
invd
sbb
sub
xchg
mov
sub
hlt
in
mov
loop
orl
inc
arpl
cmp
mov
das
ret
mov
shlb
xchg
add
andb
add
sub
xchg
fsubrl
fdiv
mov
push
nop
subl
in
out
add
cmovb
aaa
les
sbb
clc
pop
stos
mov
xlat
sub
cmpsl
jo
out
in
outsl
cmpsb
mov
mov
xorb
shrl
ja
out
orl
sbb
xor
push
daa
add
cli
xchg
dec
jecxz
mov
adcl
sub
bswap
loop
mov
in
cmpsl
mov
inc
dec
xchg
outsl
rolb
cld
mov
mov
adc
pop
sub
mov
sub
out
call
inc
fistps
and
mov
xor
push
or
or
sbb
int3
fstpt
bound
mov
sbb
jnp
rorl
dec
cli
sbb
shlb
roll
ret
fnstcw
das
push
push
jmp
repz
cmpsl
repnz
arpl
jo
and
cmp
repz
or
mov
or
test
mov
mull
lret
iret
mov
test
xchg
rcpps
fsubrs
or
rcll
add
ss
testl
popa
pop
cmp
jbe
jne
sarb
mov
test
in
cld
fsubl
andb
cmp
or
bound
lds
mov
or
add
mov
mov
aaa
adc
xorl
xchg
sub
jmp
push
mov
jnp
sub
cmp
mov
cwtl
bound
fs
repnz
setne
cmp
jno
xor
xor
leave
jb
outsl
addps
mov
or
mov
inc
cmpsl
dec
jp
push
cmp
mov
arpl
ds
cmpsl
aas
repz
add
pop
mov
rorb
int3
cmp
add
mov
mov
mov
out
out
cmpsb
cmp
in
push
stos
jle
xchg
fnsave
fstp
mov
aaa
popa
mov
fsubrp
cmc
mov
add
push
int
mov
mov
movsb
xchg
sub
adc
dec
cld
inc
pop
inc
add
loope
sbb
int
pop
mov
mov
enter
push
cmp
mov
cmpsl
add
addr16
in
pop
lret
int
adc
mov
jne
add
mov
out
mov
roll
bound
add
jg
sbb
mov
adc
adcl
add
cmpl
ret
pop
pushf
mov
jmp
fdivrs
or
divl
ret
pop
and
int3
add
dec
aaa
or
sub
lret
dec
dec
fsub
push
pop
int
mov
pop
sbb
sub
push
arpl
add
jmp
sub
popa
shlb
in
jne
xchg
popa
mov
xchg
fadd
xor
sbb
iret
call
pop
or
or
add
dec
jge
add
mov
or
adc
in
pop
pop
repnz
inc
jnp
lods
jmp
push
xchg
daa
es
std
push
mov
and
adc
add
aaa
mov
sub
jl
pop
movsb
das
xchg
sub
int3
mov
imul
dec
ret
or
or
mov
push
jbe
push
movsb
inc
adc
sub
mov
ss
stc
add
andb
mov
pusha
xchg
les
mov
repz
aad
pop
repnz
cmp
mov
outsb
neg
mov
xor
fcmovne
mov
fdiv
sub
fsubrs
ret
test
or
movsl
mov
lods
adc
es
cmp
adc
repz
or
lcall
push
ljmp
dec
jecxz
lea
fldt
mov
clc
mov
mov
cmp
into
mov
or
loope
iret
stc
mov
add
push
call
push
mov
loop
lock
fldenv
cmp
push
dec
addb
inc
gs
adc
andb
mov
xor
xchg
sbb
mov
stos
pop
jecxz
mov
lock
push
ret
sbb
aaa
mov
ss
aaa
and
or
cmp
test
xor
add
test
xchg
dec
cmpsb
mov
push
adc
idiv
fwait
test
mov
cltd
inc
outsb
ss
add
sbb
mov
in
lahf
lea
dec
push
sbb
movsw
xor
movsl
xchg
jmp
mov
cmp
inc
sub
bnd
dec
xchg
mov
xchg
lret
jmp
and
adc
dec
cmpsl
and
mov
and
lock
add
test
mov
mov
scas
notl
push
push
xor
jmp
add
add
xchg
repnz
adc
test
das
push
loopne
lods
mov
stos
xor
jp
adc
mov
mov
lahf
push
leave
mov
add
inc
or
andl
cmpsl
sub
xlat
xchg
add
ret
mov
xor
mov
lea
out
bound
sahf
repz
add
lds
ret
push
and
pop
xor
call
arpl
aaa
dec
push
sbb
pop
arpl
adc
imul
adc
jecxz
loop
mov
lods
arpl
or
shrd
in
jnp
das
mov
xchg
jo
out
call
add
sub
or
add
mov
or
stc
xchg
fcomps
loopne
pop
mov
add
fnclex
mov
adc
shlb
mov
psubusw
mov
push
dec
cld
push
cmpb
insl
mov
out
mov
inc
pop
movsb
cmp
outsl
xor
mov
hlt
orl
fmull
clc
stos
push
mov
cli
stos
mov
or
mov
add
add
fidivl
pop
out
cs
xor
ret
imul
adc
orb
fwait
fwait
push
test
aam
mov
xor
mov
scas
test
popa
mov
aad
ja
cs
test
cmpsl
sbb
out
mov
cmpsb
adc
xor
mov
cld
inc
mov
jae
add
jae
mov
loopne
push
push
xor
rcrl
adc
movsb
fsubr
or
lahf
mov
or
sbb
negb
inc
lcall
inc
pop
lret
mov
push
daa
sbbl
sub
mov
sub
mov
enter
into
sub
xchg
mov
popa
cmpsl
add
inc
cmpsb
mov
or
and
xor
or
xchg
sbb
mov
add
dec
cmp
lret
mov
subl
cmp
and
movb
outsb
and
aaa
jne
shlb
sbb
lret
test
nop
scas
jns
jae
insb
clc
ret
cmp
stos
addl
fsubl
xor
sub
enter
ret
pop
inc
push
and
and
add
sbb
orb
mov
mov
shll
in
test
push
adc
and
sub
int3
mov
lds
int3
mov
fwait
cmp
adcb
cmp
mov
jecxz,pt
movsl
lods
das
gs
lahf
lcall
popa
mov
shll
adc
pusha
stos
mov
push
inc
jge
mov
mov
sbb
fnstenv
cmp
rcr
sub
mov
lds
mov
out
cltd
imul
iret
mov
ds
mov
mov
mov
mov
mov
outsb
stos
loop
jle
inc
dec
out
xor
sub
ljmp
add
or
mov
les
stos
sub
mov
xor
mov
lds
dec
sub
test
dec
les
test
aaa
mov
or
es
clc
andb
outsl
aas
or
mov
sahf
fldcw
and
inc
movsb
fbstp
lods
xlat
rorb
ja
clc
insl
jns
arpl
mov
movsl
dec
repnz
andl
ret
xor
outsb
add
cld
aas
and
rolb
add
aaa
movsl
or
sahf
lock
das
add
mov
mov
xchg
fwait
ret
jae
xor
push
xchg
xchg
mov
hlt
mov
xor
mov
sbb
sub
push
xor
jecxz
xchg
sub
mov
cmp
pop
mov
mov
lret
in
and
dec
data16
mov
cmc
icebp
jmp
or
jno
cs
lods
sahf
popa
es
mov
cmp
sahf
xchg
sub
lods
in
and
orb
adc
and
das
testl
mov
imul
sub
clc
cmpb
dec
stos
outsl
mov
in
jmp
or
mov
in
and
cmpsb
cmp
aaa
add
xor
cmp
fisubrs
dec
jg
mov
pop
adc
js
push
or
mov
aas
and
out
cmpsl
mov
pusha
subl
in
jo
sub
cs
mulb
or
lret
add
ljmp
into
mov
std
xor
mov
imul
movnti
sbb
sub
movsb
or
xor
jnp
aam
int
mov
inc
push
cmp
xchg
loop
cmp
mov
jo
mov
test
or
ret
loop
es
ret
mov
add
filds
or
cmp
push
jae
lods
stos
xchg
das
cmpb
movsb
mov
lret
mov
xor
mov
adc
push
cli
inc
pop
push
loope
testb
les
into
pop
dec
inc
or
lret
into
movsb
adc
rcrb
icebp
mov
clc
test
scas
mov
xor
aam
or
movsl
push
subl
pusha
int3
movsb
mov
add
push
pop
lret
xchg
and
test
lcall
add
fisubrl
lods
mov
cmp
arpl
mov
aam
pop
push
mov
cmp
aam
push
xchg
add
in
clc
and
xorl
dec
and
das
test
push
inc
sub
jne
or
and
aas
rcrl
inc
imul
mov
jp
ficoms
mov
lock
insb
fwait
ret
mov
mov
jno
mov
in
je
or
dec
xor
ja
cs
fcoml
mov
mov
movsl
jb
cs
fs
xor
pop
in
sbb
shlb
jb
or
loop
ds
jge
cmp
stos
add
test
movsb
sbbl
jmp
push
sbb
pushf
mov
in
cltd
fsubp
sahf
pop
jecxz
mov
ds
int
icebp
data16
dec
or
mov
xor
sbb
std
xchg
mov
xchg
mov
adc
subb
hlt
sub
adc
adcl
femms
mov
cmpsl
divb
pop
pop
mov
fiadds
imul
aam
or
jmp
push
ret
das
or
ret
out
mov
out
mov
das
pop
out
clc
mov
sbb
cmpsl
aam
dec
xchg
icebp
das
dec
mov
orb
iret
mov
jg
push
stc
aad
pop
imul
andl
cmpsb
jo
mov
add
xchg
inc
subl
mov
dec
add
inc
xor
aam
dec
lret
pushf
movsl
mov
mov
inc
pop
dec
jne
add
test
andl
int3
loope
sbb
inc
imul
jne
push
mov
cmp
adc
adc
push
lret
addb
mov
outsl
and
in
sub
inc
push
jmp
pop
pop
test
pop
enter
popf
scas
lret
push
dec
xor
outsb
shll
dec
or
sbb
or
orb
adcb
mov
mov
inc
jg
cmpsl
fidivl
add
imul
outsl
and
xchg
pop
pushl
and
cmpsl
mov
cmpsl
pop
jmp
lret
and
mov
lret
int3
inc
mov
adc
mov
ficomps
cmpsl
lds
push
loop
mov
cwtl
cmp
pop
xchg
aas
cs
cmp
mov
push
or
mov
sbbl
sbb
aam
xchg
jecxz
jmp
mov
lock
std
jbe
push
fisubs
aas
push
adc
mov
dec
push
out
mov
cld
inc
adc
dec
ror
mov
stc
add
adc
xchg
mov
adc
cmp
outsl
xor
lods
movb
inc
icebp
add
mov
push
dec
inc
mov
add
mov
cmc
push
lods
inc
dec
push
loop
std
enter
sub
or
orb
cmpb
fmulp
sub
cmp
adc
mov
mov
and
ret
rcrb
std
mov
mul
lret
sbb
int
or
aaa
xor
xlat
and
fs
xchg
sbb
fsubs
dec
and
into
ret
test
sarb
dec
or
xchg
das
dec
subb
stos
mov
mov
lret
clc
mov
xor
ss
iret
movsb
mov
mov
or
mov
roll
lahf
push
mov
pop
loopne
faddl
hlt
and
dec
and
mov
dec
pushl
xchg
lahf
scas
mov
mov
mov
shll
adc
xor
adc
mov
or
xor
ret
cmp
or
mov
cld
mov
or
dec
mov
jno
or
les
inc
insb
movsb
loopne
inc
add
add
loopne
add
icebp
mov
mov
subb
ja
mov
push
aad
sbbb
mov
push
add
loope
pop
cmc
xchg
mov
mov
lods
fdivrs
mov
hlt
mov
aaa
or
sub
add
and
xor
jae
add
jne
enter
jns
cs
cwtl
xor
sti
jmp
xor
ja
push
jecxz
and
outsl
jbe
fisttps
pusha
pop
jge
mov
mov
fsubs
sub
addb
addr16
rcrl
or
popa
mov
pop
mov
dec
jne
mov
cld
push
inc
ljmp
popf
ss
jns
add
add
insb
add
sub
fmulp
iret
push
pushf
insb
addr16
mov
repz
dec
xchg
cmpb
lea
cmp
cmpsb
aas
pop
dec
inc
mov
into
inc
stos
fsubrp
or
mov
es
add
ret
and
mov
cmpl
or
shrb
mov
add
xor
add
sahf
inc
cmp
push
add
mov
aam
sbb
lds
push
cmpsb
and
fistpll
add
nop
in
int
sbb
movntq
fmul
movsb
repnz
subb
jecxz
iret
mov
cmp
sbb
les
fisubl
stos
rcrl
mov
test
mov
sub
dec
ret
push
add
cmpsb
sbb
push
push
xchg
loop
insb
mov
cmp
sti
mov
xchg
andb
adc
cmc
cmovle
mov
insb
xchg
mov
aaa
int3
shll
addr16
mov
mov
cli
in
movb
fldt
dec
jne
sarb
push
mov
mov
mov
mov
mov
push
xchg
dec
pop
inc
dec
mov
scas
sbb
addb
sub
dec
cmpsl
sbb
xor
fldcw
mov
lret
test
push
std
iret
in
mov
xchg
in
jnp
mov
adc
mov
jg
sub
aas
add
push
out
adc
addb
std
movaps
cs
lods
xlat
add
sub
loope
test
push
into
in
jnp
sub
sti
out
pop
mov
xchg
cmpsl
or
je
xchg
dec
iret
ret
sub
xchg
je
jmp
mov
popa
or
imul
roll
xchg
mov
shll
pop
push
fildl
or
out
add
out
pop
jno
ds
mov
test
xchg
or
xor
insl
addb
lret
cmp
xlat
mov
push
push
out
scas
xor
push
push
rcr
das
int3
sbb
test
mov
xchg
jle
inc
lods
jl
mov
xchg
or
jne
jle
decl
sbb
movsl
push
stos
arpl
xor
lret
xor
in
mov
adc
jns
leave
pop
out
mov
ds
jg
sub
je
sti
push
pop
data16
pop
sub
das
mov
mov
adcb
jb
mov
jnp
jae
mov
push
mov
aas
push
cmp
mov
or
and
pop
lock
mov
or
pop
xor
xor
sub
mov
dec
adc
mov
mov
or
aaa
fs
inc
mov
idivl
mov
push
cld
lret
mov
xchg
clc
les
mov
pop
jb
mov
sbb
pop
and
arpl
lods
add
push
cmc
or
pusha
mov
lods
mov
push
sub
mov
adc
test
nop
adc
out
dec
cmpsb
rcl
push
dec
fmul
xchg
icebp
mov
pop
cwtl
sbb
outsl
outsl
movsl
popa
xlat
lods
test
rcrl
cmp
int3
lret
sbb
shll
shll
mov
icebp
cmp
cmpsl
mov
shll
movsb
dec
ret
sahf
jl
mov
inc
and
push
inc
out
sbb
and
ljmp
imul
or
or
outsl
or
jns
andl
aam
jbe
outsl
psraw
ljmp
mov
or
es
dec
cltd
call
lods
insb
insb
cmp
adc
cli
out
fildl
in
int3
xchg
je
popf
loop
push
adc
aaa
push
mov
mov
je
jnp
add
mov
lcall
add
imul
int3
sbb
mov
ret
in
and
push
mov
fimull
mov
jmp
cmp
mov
scas
enter
cmp
dec
inc
js
mov
out
and
shrl
outsb
mov
or
shlb
pop
lods
xchg
or
mov
jne
push
mov
movsb
int3
sub
mov
std
push
push
subb
pop
ret
mov
cmp
setne
xchg
jle
cmpb
pop
pop
lret
or
xchg
or
faddl
inc
jno
repnz
fst
xchg
scas
pop
in
andl
loopne
or
mov
mov
push
addps
cmp
and
cmpsb
cmp
mov
mov
adc
pop
enter
lahf
cmpsb
mov
xor
cmp
scas
mov
add
leave
xor
mov
icebp
push
enter
pop
mov
lds
ret
cli
mov
dec
cmp
and
rorl
lret
std
stos
enter
xchg
out
add
imul
movb
mov
mov
decl
adc
push
jns
pop
jae
push
imul
xchg
or
xor
sbb
out
cmpsb
xor
mov
sub
xchg
sbb
mov
dec
mov
xor
mov
rorb
sbb
jecxz
test
iret
adc
lds
mov
and
cmp
insb
fisubrs
andl
stos
aas
inc
loopne
andl
mov
mov
ror
repz
add
fmull
sahf
bound
out
out
loopne
movb
dec
daa
xor
jp
test
mov
pusha
orl
movsb
enter
dec
mov
dec
les
cmpsl
outsb
mov
aad
lret
mov
sbb
xchg
outsb
ror
push
scas
sbb
ljmp
mov
dec
ljmp
cmpsb
shrb
pop
push
test
push
sbb
mov
mov
out
adc
int3
rolb
and
cmpsb
xor
or
out
repz
out
xor
hlt
push
jecxz
comiss
test
mull
mov
or
pop
imul
mov
aam
ss
sbb
mov
add
push
sbb
and
add
leave
nop
cmpb
scas
cmp
xor
dec
mov
loopne
cmpb
adc
push
iret
xorb
xorb
jle
cmp
addl
mov
mov
pushf
movsb
adc
push
pop
aaa
in
fwait
inc
xor
sbb
fisubl
scas
out
jno
and
mov
movsb
cmc
sahf
jmp
lods
insl
and
mov
xchg
aaa
mov
or
pop
cmp
sub
xlat
fs
mov
call
sub
out
jae
pushf
xor
push
cmpsb
stos
ljmp
mov
dec
nop
inc
iret
pop
orb
ljmp
repnz
jl
jecxz
adc
jb
xor
mov
adc
jge
jo
or
addr16
or
sbb
mov
rclb
cltd
je
cmc
inc
nop
lds
dec
in
loop
xor
in
xchg
pushf
rcrl
cmp
je
or
das
fwait
cli
jl
pop
pop
xor
cmp
cmp
xchg
mov
inc
xchg
xor
xlat
fsubl
in
sbb
subb
leave
popf
mov
loopne
in
jecxz
ret
imul
adc
mov
icebp
in
jo
add
mov
repz
lret
ljmp
mov
mov
xor
push
sbb
add
bound
push
mov
scas
test
aaa
imul
pop
mov
in
test
imull
sub
mov
cli
jl
iret
insb
inc
insb
test
dec
xor
out
push
stos
inc
cmp
mov
or
and
xlat
xorb
add
inc
or
mov
push
mov
popa
daa
cld
push
int
sub
xor
inc
add
loopne
mov
mov
pop
dec
mov
mov
rolb
out
out
mov
or
jmp
xchg
popa
mov
mov
cmpsl
iret
inc
aad
jmp
test
sbb
std
loop
outsl
lea
mov
mov
enter
push
dec
cmp
jge
shll
fisttpll
in
pop
inc
fidivs
fdivs
loope
iret
leave
adc
mov
js
enter
loopne
leave
imul
mov
loopne
mov
test
push
cmpsb
gs
push
cld
icebp
mov
jecxz
cs
cli
ret
jecxz
mov
mov
movsb
ja
and
outsl
xchg
jns
insb
iret
nop
push
ret
into
arpl
jbe
hlt
scas
jno
pushl
mov
add
or
lea
int3
or
mov
ja
and
mov
decl
dec
mov
sti
orb
or
mov
or
dec
xor
mov
loopne
mov
mov
xor
pusha
mov
xor
in
mov
aas
mov
mov
mov
in
or
mov
mov
and
mov
cli
mov
pause
mov
mov
addr16
cmpsl
jmp
fmul
dec
and
push
int3
cltd
xchg
dec
pop
fiaddl
jno
inc
xor
xor
adc
cmc
mov
jecxz
lret
mov
mov
and
lock
push
mov
testb
iret
psrlq
push
cmp
xchg
out
into
hlt
cmp
xchg
outsl
mov
dec
xchg
jecxz
push
sbb
push
xchg
out
out
fadd
mov
shl
sbb
fiadds
imul
vrsqrtss
mov
mov
shrl
scas
aas
imul
cmp
xor
imul
cmpsl
mov
iret
cmp
add
and
lcall
int3
add
in
add
push
inc
or
mov
push
sbb
les
jbe
sub
push
aaa
dec
or
lds
or
mov
push
scas
dec
js
mov
jne
out
fsubrl
pop
and
fistl
ljmp
stos
jmp
mov
or
mov
mov
ss
or
andl
repz
orb
xor
push
test
and
sahf
dec
push
adc
ret
push
xor
xchg
mov
xlat
inc
sahf
add
loopne
mov
jb
pop
scas
cmpl
xchg
mov
add
and
aaa
aad
adcb
jnp
in
test
inc
subb
push
je
test
sbb
andb
shll
lret
mov
cmpsb
mov
loopne
rcrl
mov
scas
xor
pop
rcl
adc
xchg
mov
mov
lods
lea
or
jns
test
clc
mov
inc
popf
inc
stos
das
arpl
push
sbb
add
xor
scas
inc
sub
stos
sbb
dec
loopne
femms
clc
stos
adc
repnz
mov
lret
orps
loope
sub
cmp
iret
cmpsl
inc
fmuls
jns
jnp
out
xlat
ss
adc
jno
cmpsb
xchg
cmp
outsb
jle
adc
stos
lret
mov
add
repz
lret
inc
roll
movsb
or
les
jo
mov
jb
aaa
or
inc
adc
les
je
insb
aaa
or
mov
inc
stos
loope
scas
dec
mov
ljmp
mov
repnz
test
mov
xlat
push
add
adc
sarl
adcl
mov
xchg
cmp
adc
lret
bnd
and
lds
lods
clc
and
ret
mov
sub
adc
ja
out
pop
push
xchg
jl
in
adc
mov
add
cwtl
inc
add
jl
xor
add
mov
fdivrp
adc
jle
xchg
outsl
outsl
in
in
rolb
xchg
scas
ja
add
andb
and
repz
fdivrl
xor
mov
inc
shlb
dec
icebp
pop
stos
stos
mov
orb
loop
or
mull
lret
mov
xor
inc
mov
lods
in
jmp
push
or
lcall
aad
scas
outsl
adc
xor
jecxz
das
ret
xor
out
pcmpeqb
pop
int3
fisttpll
and
cwtl
rol
or
test
cld
popf
xchg
insl
out
enter
mov
test
movsb
push
int
pop
mov
das
in
shlb
cmp
mov
pop
dec
or
add
addl
cmp
hlt
sbb
xchg
jnp
pop
or
lock
pop
cmpsl
mov
push
loopne
cmpsl
mov
cmpsl
iret
lods
mov
or
fcomi
or
and
roll
mov
mov
mov
enter
adc
sub
mov
cmpsl
pop
sub
or
and
pop
repnz
pop
mov
add
mov
outsb
cmp
clc
es
nop
push
ds
mov
cmp
cmpsb
stos
push
add
mov
stos
xor
jnp
mov
stos
push
jno
jg
and
cmp
mov
ret
cltd
sbb
xor
das
pushf
lea
sbb
or
into
mov
add
jmp
popf
das
xchg
mov
cmp
test
sbb
shr
out
hlt
cmp
cmp
add
decb
scas
aaa
fldenv
cmpsl
xlat
loope
or
mov
paddsw
andl
add
insb
push
loop
mov
dec
xor
jmp
xchg
pushf
cs
mov
subl
cmp
xchg
add
jmp
jno
stos
and
cmp
and
add
sbb
xchg
sub
arpl
cmpsl
and
xchg
xchg
pop
cmpsb
repnz
loopne
fmull
mov
xchg
jno
xchg
ljmp
inc
jno
les
cld
test
leave
sub
fs
leave
aam
das
push
das
mov
lods
mov
xchg
and
pusha
movsb
cmpsl
movswl
idiv
sahf
add
pop
adc
cli
shlb
cmpsb
pusha
adc
xchg
lret
xor
mov
addr16
dec
imul
sub
gs
nop
mov
fldenv
add
lret
rorb
lret
jl
mov
pop
popf
loopne
sbb
mov
and
push
nop
mov
mov
sub
stc
cmp
mov
cmpsl
mov
data16
cmpsb
mov
lret
insl
les
add
or
fbld
andl
shlb
mov
in
or
and
add
inc
mov
nop
or
mov
orb
or
lret
rorb
shrb
cmovbe
mov
mov
shlb
mov
xor
add
int3
mov
xor
xor
mov
aaa
mov
xor
loopne
mov
lock
js
inc
xorb
loopne
mov
and
int3
push
dec
and
mov
mov
mov
or
add
mov
dec
mov
mov
or
stos
arpl
out
loopne
mov
mov
rolb
andl
pusha
and
add
add
andb
push
mov
lea
or
mov
int3
or
mov
or
bound
loopne
rorb
mov
mov
mov
xor
xorl
mov
xor
mov
repnz
int3
xor
cmp
mov
push
or
inc
xor
les
xor
jae
outsb
das
lods
cmpsb
adc
inc
add
mov
push
push
mov
cmc
ret
pop
xor
movsb
and
dec
sub
sub
dec
stos
les
jae
xchg
mov
imul
lret
test
fsubr
jge
je
stos
mov
adc
or
jl
imul
mov
jp
mov
mov
push
push
fdiv
xchg
mov
push
mov
mov
in
jnp
pop
push
push
movsb
add
aaa
in
xor
nop
pop
scas
dec
ds
mov
movsl
mov
stos
cmpsl
push
add
cmp
adc
mov
add
daa
inc
mov
rcrl
push
lret
sbb
pop
mov
jge
sbb
aas
insl
push
clc
lods
push
push
ret
xchg
add
mov
lods
test
orb
hlt
scas
leave
push
inc
mov
xchg
fnstsw
out
mov
xorl
in
dec
les
mov
add
and
movl
push
or
sub
jl
test
xor
jns
rol
pop
or
push
push
loop
mov
pusha
imul
xor
and
add
btr
imul
dec
mull
test
jno
mov
sub
jae
inc
enter
or
imul
xchg
xor
shrb
shlb
rclb
lods
mov
in
mov
dec
xor
and
or
imul
cmp
mov
mov
and
cld
xor
xchg
sub
or
xchg
aas
cmp
inc
stos
inc
stc
insb
imul
loop
cld
imul
cld
pop
mov
xor
dec
push
mov
jl
movsl
cmpsl
ljmp
jmp
imul
add
or
jne
insb
mov
dec
shll
push
fimuls
adc
jp
dec
movb
mov
ret
pop
push
mov
xchg
mov
mov
add
xchg
cld
push
loop
xchg
rorb
push
aam
ds
jmp
push
xor
divb
add
outsl
dec
js
sbb
popa
ret
mov
ja
imul
cs
pop
loop
bound
mov
mov
sub
lea
out
dec
inc
sub
mov
mov
mov
mov
int
cmp
cld
push
into
loope
mov
in
mov
cmc
cli
mov
popa
inc
ss
into
or
mov
and
and
das
adcl
insl
sub
sub
sbb
sub
ret
fwait
jne
sbbb
cmp
cs
or
cmpsl
inc
adc
add
adc
test
mov
or
test
pop
add
sahf
shll
add
sbbb
sub
call
adc
shll
mov
les
les
orb
add
gs
test
pushf
add
add
mov
and
dec
in
add
inc
mov
mov
mov
stos
sbb
mov
add
cmpsb
jecxz
mov
mov
inc
adc
mov
outsl
cmp
xor
ljmp
in
imul
dec
rorb
aad
enter
or
nop
mov
add
lods
xor
sahf
push
inc
lret
inc
jbe
cltd
in
inc
xor
dec
mov
cld
scas
or
jmp
outsl
repnz
cmpsl
or
adc
adc
jnp
cmpsl
xor
mov
ljmp
pop
imul
jecxz
or
inc
push
mov
mov
pand
aaa
cmp
adc
cmpsb
mov
and
out
pushw
cld
inc
lea
lds
lahf
pop
stos
sbbl
jae
fwait
push
imul
subb
insb
pop
and
aas
push
dec
cmpsl
pop
repnz
mov
repnz
test
mov
imul
enter
sub
sub
enter
mov
rcll
scas
cmpsl
movsb
mov
or
mov
imul
sahf
or
dec
mov
daa
fldz
adc
mov
cmp
xchg
cmp
cmpsb
mov
add
xor
int3
mov
mov
mov
push
shlb
jne
jl
adc
inc
jnp
outsl
cmpsl
cwtl
mov
fldt
jae
push
mov
cmp
inc
adc
mov
dec
mov
hlt
lret
inc
test
aam
mov
inc
inc
jnp
popl
pop
enter
adc
inc
aad
mov
js
aaa
xor
loop
xchg
mov
cmc
mov
divl
ret
add
push
mov
ja
mov
push
and
in
inc
mov
sbb
jl
and
jmp
test
insb
ror
mov
nop
ret
mov
mov
xlat
add
mov
or
xchg
inc
cltd
or
jecxz
ljmp
xor
push
shll
mov
enter
loope
mov
cmc
mov
sti
int
popa
push
add
jp
imul
out
cmpsl
xchg
orl
repnz
mov
push
cli
add
xchg
mov
imul
pop
lahf
mov
or
movsb
fcompl
push
out
cmp
insb
fiadds
adcl
push
pop
inc
ret
mov
pop
or
jnp
nop
xchg
or
or
mov
or
mov
hlt
fidivl
mov
sarb
sbb
icebp
sub
xchg
fwait
sub
dec
movsl
xchg
imul
push
std
scas
lret
loopne
ret
bnd
and
idivl
mov
mov
sub
fadd
mov
dec
push
shlb
scas
sbb
outsl
and
dec
aad
loope
mulb
dec
stos
sbb
mov
out
xor
push
add
int3
sbb
inc
mov
imul
sub
aaa
xchg
add
xchg
fcoms
outsl
movsb
cmpb
fnsave
mov
xor
add
andb
pop
imul
xor
add
iret
push
mov
int
jb
pop
sbb
mov
inc
int
mov
xor
lret
inc
cld
popa
andl
xchg
mov
push
cli
push
xlat
add
inc
das
loopne
xor
and
inc
imul
out
fdivl
mov
and
add
mov
loop
dec
add
mov
mov
fsubrs
clc
push
add
xor
add
in
xor
jo
jl
shll
cmpb
add
int
rolb
inc
sub
mov
aam
add
stos
ret
mov
mov
fisubs
mov
jne
xor
pop
cmp
dec
fwait
dec
fldt
pop
mov
int3
inc
in
lcall
inc
test
jp
test
mov
push
clc
mov
into
fs
loopne
lcall
data16
in
mov
push
aad
dec
jmp
imul
ds
inc
test
dec
xchg
cli
xchg
add
push
or
punpckhwd
pusha
inc
jb
repz
inc
fildl
ret
fwait
mov
jno
nopl
adc
in
sub
inc
add
test
mov
pushf
push
dec
xlat
repnz
mov
or
imul
in
pusha
jecxz
or
xchg
imul
sbb
std
stos
adc
mov
or
mov
addl
out
fs
repz
add
mov
jb
add
dec
scas
mov
iret
jb
inc
pushf
stos
xlat
xor
xor
lret
icebp
cmpsb
rsm
lret
inc
cli
test
in
sub
sarl
sbbb
mov
repz
pusha
or
mov
push
and
dec
and
out
stos
mul
dec
ret
inc
push
lret
mov
fbstp
inc
fmul
mov
jl
pop
call
sti
and
push
inc
jmp
shr
dec
pop
in
mov
cmpsl
mov
mov
sbb
notl
add
and
pop
add
aam
out
ficompl
lods
fs
stos
push
lahf
pop
add
cmp
insl
roll
inc
push
jae
sub
and
in
push
int
mov
push
or
xchg
loopne
sub
add
mov
xchg
sti
inc
lret
xor
add
hlt
scas
add
mov
aaa
iret
addb
jne
test
mov
fsts
push
jmp
pop
mov
ret
pop
popa
cmpsl
xor
shll
cmpsl
leave
jg
sub
lods
lret
ljmp
pusha
mov
xchg
push
adcb
cld
mov
in
faddl
shrl
lea
mov
popa
andl
jmp
int3
pop
mov
push
sti
mov
sub
addb
lret
xor
repz
or
sub
sub
out
sub
das
stos
mov
jne
hlt
xor
pop
cmp
cmc
push
mov
add
pop
faddl
jecxz
mov
dec
rolb
jnp
pop
mov
imul
lret
nop
jae
mov
push
stos
or
push
push
xorl
sbb
je
ljmp
push
xor
out
out
andl
test
add
adcb
fsubl
popf
adc
sub
add
mov
and
mov
and
jg
add
sar
mov
push
mov
push
cld
ss
dec
shll
xor
movsl
insb
rolb
jne
lahf
and
adc
pusha
ret
repnz
and
shrl
mov
xchg
dec
or
add
cwtl
or
call
push
stos
test
arpl
jnp
pushf
adc
mov
ja
ljmp
imul
dec
stos
inc
push
add
and
pusha
ss
add
adc
push
or
jns
and
popa
mov
mov
mov
je
and
in
ja
ret
aad
xor
pop
or
xchg
dec
test
pop
jno
cmpsl
adc
xor
cs
lret
in
pop
sbb
jmp
sbb
cli
nop
jle
rorl
cmp
decb
lret
incl
mov
dec
add
test
ljmp
or
inc
stos
mov
mov
into
mov
lods
mov
sub
incl
popa
mov
inc
mov
push
jmp
cmpsl
xlat
nop
push
orb
cmpsl
addb
in
fs
fwait
lods
or
add
jo
push
sbb
aad
add
sbb
mov
or
or
cmpsb
or
add
mov
jnp
nopl
jns
inc
das
imul
in
enter
add
and
out
ljmp
add
xchg
inc
add
les
cmp
cld
aaa
jge
ret
xor
cmpsl
and
mov
dec
outsb
cmp
lock
xchg
xchg
add
dec
loopne
ret
sarb
xchg
cmp
bound
push
test
mov
ljmp
andb
test
xor
jo
dec
adc
inc
incl
xor
mov
test
cs
mov
push
popa
sbb
dec
in
call
ljmp
stos
sub
leave
int3
jmp
xchg
shll
add
adc
adc
ljmp
cli
movsb
ret
xchg
sub
fwait
shll
push
push
in
ret
pop
int
daa
into
ljmp
fdiv
inc
cwtl
repnz
mov
lea
jp
push
mov
cmp
push
sub
test
xchg
dec
stc
pop
std
in
mov
into
or
es
cld
movsb
xor
testl
or
xchg
xor
test
or
scas
xor
sub
stc
add
jle
imul
adcb
arpl
mov
xchg
mov
fwait
mov
in
fcoml
sbb
ret
stos
dec
mov
xor
lods
sbbb
rolb
shll
add
fadds
sub
out
int3
dec
mov
test
je
and
daa
ss
lret
mov
inc
out
pusha
pop
clc
call
imul
rorb
pop
push
sti
out
adc
sub
fs
xchg
sbb
xchg
push
sbb
hlt
das
pop
pusha
and
cmpsb
test
out
retw
jle
mov
xchg
sbbb
ret
out
add
incb
mov
loop
add
popf
lcall
jecxz
sahf
stos
jmp
cmpsl
loop
add
iret
icebp
xorl
cs
cltd
xlat
jecxz
sub
xchg
sub
pop
inc
adc
in
mov
xor
xchg
jle
call
mov
inc
xor
inc
lret
pop
test
sub
inc
pop
add
pop
movsb
rcrl
or
xlat
dec
jecxz
mov
addr16
mov
dec
lods
das
xchg
cmp
dec
push
ret
ret
adc
xchg
popl
imul
and
mov
or
sahf
and
dec
adc
add
xchg
add
das
das
ret
into
pop
add
push
jno
ret
pop
stos
dec
add
jl
lock
dec
loop
lock
stc
fwait
mov
sub
inc
mov
jnp
adc
mov
aam
sub
mov
js
fwait
je
mov
fs
out
aam
inc
out
pop
cli
rcll
fbld
push
mov
cs
sahf
cmpsl
pop
cmp
out
aas
push
xor
mov
inc
adc
cmc
inc
fidivrs
arpl
shll
outsl
jg
ret
in
inc
push
leave
mov
sbb
loop
or
scas
pop
sbb
add
xor
pop
sub
jle
mov
dec
mov
les
pop
mov
xchg
cwtl
mov
push
pusha
sub
lret
inc
test
imul
push
add
movsl
inc
xchg
mov
sub
push
shl
pushf
sub
jmp
mov
frstor
in
clc
push
push
mul
icebp
mov
das
inc
xchg
fwait
pop
cld
jns
inc
pop
lds
inc
cmpsl
or
jmp
dec
les
out
bound
cmpb
stc
pop
and
fwait
stos
xor
push
push
lock
jp
xchg
sub
jmp
ss
jae
push
cs
js
test
int3
iret
mov
pushf
pop
cmpsl
and
lret
xor
add
mov
xor
and
iret
scas
add
les
push
rcll
adc
aad
xchg
or
fldz
mov
mov
cmpsl
mov
sarl
out
test
cmpsl
das
dec
es
xor
in
mov
hlt
jmp
pop
aam
pop
pop
xorb
lcall
cltd
es
outsl
aaa
or
lret
add
xor
test
cmpsl
sbb
dec
sarb
fsts
xchg
adcb
fisubrs
add
fistpl
daa
lret
cmpsl
add
data16
mov
test
xor
cmpsb
int3
add
add
mov
dec
setg
mov
jg
pop
cmpsl
dec
mov
shll
mov
aaa
lea
sub
or
or
outsb
rolb
shrl
mov
mov
jae
cmp
mov
lods
lods
movsl
popl
addb
push
out
add
mov
jmp
lret
test
adc
testl
pop
mov
int3
jb
scas
jae
pop
movb
ret
xchg
enter
jmp
xor
and
adc
and
fsts
movsb
fcoml
mov
cs
cmp
mov
mov
ret
pop
dec
dec
jg
hlt
pop
mov
cmp
dec
pop
push
test
jge
dec
lret
ljmp
shll
push
mov
outsb
cwtl
fwait
in
stos
stc
mov
mov
in
addb
mov
stos
xor
sbb
stos
and
xchg
add
fbstp
in
ret
jnp
ret
fadd
ret
cmpsl
imull
cwtl
and
and
xchg
push
subl
out
pop
movl
icebp
enter
icebp
dec
inc
inc
mov
sbb
jmp
sti
inc
sub
int3
mov
cmp
into
and
xchg
add
in
jl
popa
sbb
add
add
mov
fsubl
hlt
in
sbb
and
enter
mov
lods
inc
dec
mov
dec
daa
xor
loope
dec
mov
andl
test
and
jb
int3
pushf
addl
lahf
ret
cmc
mov
xor
jo
or
loop
adc
adc
lea
mov
fchs
inc
mov
mov
mov
mov
cmpsl
mov
mov
addb
popf
push
and
and
jl
out
mov
clc
xor
mov
xorl
mov
add
sub
mov
inc
and
aaa
cmp
mov
or
inc
lods
gs
js
mov
out
or
push
mov
in
mov
cmpsb
push
xor
stos
pop
dec
sti
mov
mov
mov
xchg
ds
inc
or
add
cmpl
mov
jg
cmp
mov
xchg
inc
pusha
push
jg
mov
fstl
mov
sbbb
and
mov
outsl
xchg
jnp
addl
cld
cmpsl
mov
mov
adcb
fcoms
mov
push
jae
subl
movsb
xlat
aad
jns
adc
xchg
andb
push
lods
lret
xor
stos
push
fcomps
jb
test
push
mov
sub
push
out
mov
stc
or
mov
lret
mov
out
clc
shll
push
mov
mov
xchg
push
mov
xchg
je
inc
mov
cwtl
cmp
and
sbb
mov
dec
pusha
mov
loopne
push
add
or
imul
cmp
orb
mov
lods
mov
mov
mov
mov
inc
mov
enter
out
jecxz
or
add
cmpb
and
inc
leave
addb
popa
and
lods
mov
and
add
cmp
add
imul
ret
sbb
test
lods
addb
addb
push
mov
adcb
dec
push
mov
inc
in
inc
loopne
shl
cmp
clc
out
mov
in
cmp
mov
cmpl
lods
mov
inc
mov
pop
add
das
sbb
and
xchg
std
xorl
or
loopne
and
in
push
add
call
push
xchg
lahf
aas
cmpb
out
cmp
cmpsl
mov
or
data16
xchg
fisttps
mov
dec
jns
je
push
adc
adcb
hlt
cmp
jno
repz
je
jnp
movsb
xor
adcl
mov
insl
push
or
es
push
popa
sbb
popa
cmpsl
ds
mov
ljmp
ljmp
push
addb
jge
mov
lods
and
push
sahf
push
lret
test
pop
inc
and
orb
loop
aam
popf
mov
in
fisubrl
in
push
cmpl
jne
int3
add
mov
in
jg
jmp
mov
int
adc
test
out
push
loop
stc
out
xor
enter
das
add
or
pusha
mov
add
scas
cmp
jo
in
stos
sub
cs
adc
xchg
adc
and
sbb
mov
sbb
fcoml
std
jp
xchg
negl
rorl
inc
jmp
lods
scas
or
push
push
rcl
cmpsb
mov
mov
sub
ret
cmpsl
mov
sub
add
sub
loopne
sub
js
add
and
testl
pop
mov
or
pop
mov
and
das
sub
rolb
and
fadds
iret
lret
or
add
scas
sbb
add
test
sahf
out
imul
aaa
pop
movsb
add
xor
ror
cld
cmp
pop
cli
dec
addr16
aas
or
rclb
ss
scas
orl
mov
push
mov
cwtl
mov
sub
rorl
jae,pn
mov
or
outsb
scas
loop
mov
lcall
scas
mov
mov
in
xor
xchg
cmpb
push
loop
in
jno
loope
int3
sbb
mov
into
xor
cwtl
xlat
xchg
stos
push
and
sub
iret
js
scas
jns
mov
mov
xchg
sub
sbb
mov
outsl
jmp
xor
lods
jo
pop
xchg
mov
fwait
pop
mov
xor
push
outsb
movsl
jnp
outsl
arpl
or
push
enter
mov
es
imul
je
mov
fcoml
push
sub
pop
mov
movsl
jb
pop
or
popf
or
or
mov
es
js
jb
add
mov
gs
sbb
scas
test
subl
jo
incl
sub
xchg
imul
addl
sbb
cwtl
loope
mov
inc
ljmp
or
xorl
pop
ljmp
cmp
push
scas
jecxz
pop
jg
loopne
mov
fxch
cs
add
lock
enter
icebp
sub
jmp
cmpsl
mov
mov
scas
mulb
aaa
xor
or
popa
mov
orl
sbb
lahf
arpl
xor
xchg
subl
andl
scas
mov
mov
dec
xchg
out
scas
mov
mov
cmp
pop
or
ja
subb
mov
bsr
add
ret
sub
dec
lods
movsl
in
fsubl
jle
push
inc
mov
push
or
mulb
repz
add
ret
movl
nop
ret
mov
cmp
pop
sub
mov
inc
sbb
imul
popa
fsubr
cmovp
lods
fnstsw
xchg
scas
sbb
and
mov
xlat
les
inc
sarl
jmp
mov
add
adc
ret
syscall
add
clc
les
sub
mov
xor
dec
mov
push
scas
sbb
in
aad
xor
dec
inc
xor
scas
aaa
mov
and
lock
adc
add
and
addr16
into
bound
cmpsb
movsb
faddp
cmp
fs
sub
stos
add
fsubrl
dec
push
dec
aas
fsubr
clc
adc
test
xlat
leave
inc
ret
sub
inc
xchg
lahf
or
and
pop
mov
outsb
mov
daa
loope
sub
cmpl
xchg
lock
add
imul
add
and
sub
subl
add
icebp
inc
fwait
rolb
in
stos
mov
sub
push
aas
push
xchg
fildl
lock
shll
mov
subl
jno
add
imul
xor
orb
xor
xor
cmpl
xorl
subb
xor
pop
divl
mov
fnsave
loopne
lea
push
fdivl
sbb
shrl
mov
ja
jle
inc
push
dec
cli
das
xchg
push
je
bound
inc
dec
les
adc
sahf
test
push
or
lcall
in
jnp
lret
adcl
mov
scas
ficompl
add
push
xor
xchg
in
cmpsl
in
stos
mov
mov
jae
scas
inc
sub
aas
push
aad
xchg
rolb
inc
add
mov
loopne
mov
in
repz
in
lods
loopne
cmp
jecxz
mov
das
out
std
adc
adc
xor
inc
lahf
iret
sub
les
and
cmpl
fs
mov
outsl
cltd
or
fisubl
xor
or
rcll
mov
adc
stos
imul
sbb
sbb
xchg
je
hlt
add
or
movsl
push
addb
cwtl
push
cmc
mov
jmp
in
mov
xorl
in
lret
rorb
mov
int3
out
mov
lea
movsb
addl
das
call
ja
push
jmp
rcll
and
mov
mov
add
daa
movsb
mov
and
scas
jge
fldt
scas
andl
lea
fmuls
adc
push
rcl
sub
aam
aam
orb
test
or
xor
call
cmpsl
xchg
in
js
aaa
imulb
in
stos
push
int3
adc
adc
mov
add
adc
test
mov
int3
rcrl
cmc
dec
rcll
shl
sti
shll
and
mov
sbb
mov
sahf
popf
lret
mov
dec
aas
ret
stos
jmp
push
cmpsl
in
pop
dec
dec
xchg
sub
dec
movsl
cmp
mov
and
inc
and
rcl
adcb
pop
mov
xchg
loopne
rorl
daa
nop
push
enter
shrl
fbld
decb
or
sbb
jge
lret
add
push
adc
add
ret
sarl
sbb
push
popf
adc
shlb
lahf
add
or
fdivs
ret
pop
mov
test
ds
nop
into
sahf
mov
mov
aam
ret
sbb
add
xchg
sarb
jg
inc
xchg
rcrl
ret
mov
mov
out
mov
xlat
aaa
frstor
fwait
out
jle
jns
mov
iret
mov
mov
jmp
xchg
cmp
mov
clc
call
gs
rcrl
dec
cmp
add
push
push
ret
dec
and
int3
jno
jle
push
imul
sub
mov
sub
add
mov
cmp
outsb
push
inc
idivl
shl
and
inc
cmp
mov
movaps
shll
mov
fwait
inc
adc
push
xchg
add
inc
mov
sub
mov
pushf
lret
add
in
roll
mov
fnstenv
call
test
cmpsl
sbb
cmp
push
lahf
xchg
jl
popa
insb
scas
mov
dec
jnp
add
pop
mov
andb
ds
loop
dec
mov
fistl
shlb
sbb
lret
out
and
daa
out
inc
repz
rcll
ret
and
sar
mov
test
repnz
cmp
sbb
push
jae
loop
xor
inc
mov
mov
dec
pushf
inc
push
mov
mov
dec
flds
popf
mov
push
pushf
push
fildll
cmpsl
bound
sub
push
fcoml
push
stos
fidivrl
adc
push
sub
push
pop
hlt
cld
xor
js
pushf
jp
cmpps
push
cmp
cmp
mov
pushf
xchg
repz
pop
or
cmp
lret
mov
test
sahf
mov
xchg
ret
pop
cmp
xchg
jae
mov
mov
mov
fimuls
mov
loopne
mov
int3
jecxz
mov
mov
out
mov
cmp
jo
xchg
sbb
inc
iret
cmpsl
and
ret
inc
cld
and
movsb
shrb
cwtl
pop
dec
cli
shll
rolb
dec
add
xor
je
outsb
sbb
ja
dec
bound
mov
outsb
adc
rcll
fisttps
test
test
dec
push
add
cs
iret
mov
xchg
lock
inc
negb
dec
pop
mov
xor
xor
jb
adc
lods
mov
shlb
push
or
test
outsl
ret
fs
cmpsl
push
push
fsub
popa
pop
shrl
leave
pop
mov
out
clc
xchg
adc
xchg
mov
pushf
push
in
add
or
push
shrl
dec
stc
xor
sub
push
push
sarl
jo
cli
mov
movsb
mov
sub
rolb
push
jb
popl
mov
cmpsl
arpl
outsb
mov
push
repz
xlat
mov
and
sub
push
xchg
lret
jmp
jmp
nop
sub
jp
xchg
mov
outsl
ret
jecxz
push
xchg
arpl
push
cmp
in
jnp
stos
and
lods
cmp
jmp
cs
loopne
mov
mov
and
enter
call
and
repnz
into
sarl
sub
and
shl
jne
mov
cmp
jnp
int3
cmp
add
dec
movsl
add
xor
or
sbb
cld
adc
addl
arpl
cmpsl
fisttpl
or
or
xor
aas
xchg
dec
or
leave
enter
cmp
pop
das
mov
call
mov
je
outsl
xchg
xor
dec
mov
cmp
xor
xchg
insb
sti
cmp
push
adcl
cmpsl
inc
and
push
jl
xchg
ja
xor
mov
mov
xor
add
shll
orl
lret
int3
pop
bound
daa
sub
popf
stos
ss
loopne
imul
and
add
pop
jmp
int
push
lcall
loopne
mov
pusha
push
inc
push
push
inc
mov
xor
xor
mov
rsqrtps
mov
inc
sbb
and
aaa
xor
stos
shr
and
jns
mov
inc
shrl
sbb
mov
xchg
clc
movsb
shr
and
cmpsl
push
inc
sub
dec
cmpl
xchg
icebp
data16
aas
add
xchg
aad
mov
jne
out
hlt
mov
jb
dec
sbb
add
jmp
cmp
push
mov
pop
mov
mov
popf
pop
mov
icebp
jle
stc
enter
shrl
ljmp
and
sub
and
sub
les
jg
enter
pop
leave
sarb
addl
sub
sahf
test
lock
imul
mov
xchg
ud2
mov
shlb
mov
dec
push
mov
sub
in
dec
cmpsb
popa
or
inc
shrl
and
jno
test
insb
mov
adc
dec
outsl
inc
testl
aaa
xchg
iret
xchg
imul
in
mov
adc
stc
mov
out
scas
repnz
xchg
pushf
ret
lock
dec
push
iret
lret
popa
inc
push
scas
push
push
outsl
dec
sbb
in
call
jno
popf
mov
ret
adc
inc
popa
shlb
aam
outsl
loopne
push
icebp
push
push
jmp
sti
test
cltd
cld
push
loopne
jle
stos
dec
lahf
or
fwait
popf
jle
xor
adcb
and
mov
out
stos
imull
inc
inc
mov
ret
movsb
add
ret
pop
xlat
xor
push
in
mov
xchg
fistpl
cmp
loop
pop
loop
fstps
ljmp
jnp
je
ret
xchg
adcl
adc
scas
cmp
jl
shrl
inc
cmpsl
cs
sbb
xor
daa
lret
push
or
loope
roll
mov
or
sbbb
inc
pop
popa
shl
cmp
ret
es
rorl
mov
add
dec
leave
cs
ret
lds
andl
pop
push
hlt
xchg
addr16
push
mov
and
cs
mov
jns
lods
and
xchg
or
add
mov
sbb
lea
bswap
ret
mov
add
xchg
cwtl
mov
adc
orb
insb
xchg
jmp
pop
js
test
cmp
insl
fs
xchg
mov
fldt
mov
mov
stos
mov
mov
pop
movsb
pop
add
call
dec
std
aas
jl
scas
xor
ljmp
ds
mov
add
lods
push
xorl
fbstp
pop
ret
cs
icebp
cmp
pushf
add
lret
add
push
mov
add
pop
push
mov
imul
test
pop
xchg
dec
addb
ljmp
nop
out
gs
push
jnp
daa
fwait
dec
inc
cmpsl
das
mov
push
dec
ret
lret
mov
push
push
aas
subl
ljmp
add
shlb
sub
xchg
aas
pop
mov
inc
add
shll
xchg
popf
es
mov
jmp
xlat
push
dec
xchg
movsb
mov
xchg
push
pushf
sub
lret
push
mov
loopne
dec
lfs
dec
aaa
in
into
loope
push
loop
cmpsl
push
sub
daa
jb
push
inc
mov
into
push
das
adc
nop
repnz
pop
lahf
sbb
sub
aaa
and
mov
mov
ret
jns
out
push
test
and
test
stc
loope
xchg
clc
fwait
jns
push
aam
xlat
roll
divl
fcoms
and
mov
movsb
xchg
cs
push
xor
cmp
stc
arpl
shl
in
cmpsl
cmp
outsb
cmp
test
mov
scas
jl
int
jno
lret
cmp
pusha
pop
ds
cmp
arpl
xchg
cltd
pop
mov
ljmp
push
xor
sub
jae
in
out
xorl
dec
lret
sub
fsubrp
insl
cmp
or
mov
bound
ret
in
jge
jmp
pusha
loope
xchg
ds
int3
sub
cmp
or
mov
sub
mov
shl
xchg
cmp
stc
jl
cli
shrb
lcall
adcl
test
hlt
mov
or
scas
pop
fsts
int3
jnp
scas
jl
push
sub
jg
rcl
call
data16
flds
jp
outsb
xchg
fs
sbb
mov
inc
cmp
sub
pop
mov
gs
xchg
repnz
mov
shl
clc
push
cmp
cmp
xchg
sbbb
in
imul
xchg
ret
add
lret
mov
aas
sahf
roll
sbb
adc
jle
fs
rolb
add
xlat
dec
mov
mov
pop
xchg
mov
push
test
push
shl
fisttpll
clc
mov
aam
cmpsl
or
xchg
jne
sbbb
add
or
mov
sub
sahf
mov
loope
and
and
rorb
sub
ret
pop
sbb
js
sbb
fbld
sub
les
jno
enter
jl
lcall
mov
push
in
stc
xor
and
jnp
hlt
lcall
sbb
pop
push
sub
inc
jne
dec
aas
sbb
pop
cmc
mov
adc
loopne
mov
pop
mov
mov
sarb
aaa
repz
dec
add
insb
inc
gs
xchg
pop
add
rclb
sub
into
stos
push
mov
push
xchg
mov
sarl
in
xor
hlt
jae
cmp
addb
in
stc
aaa
adc
xor
jp
dec
mov
inc
pop
in
jl
pop
cmp
pushf
gs
jmp
mov
ds
pop
cs
dec
adc
xchg
lahf
mov
cmpsl
mov
inc
xorl
fs
xchg
subb
cmp
fsubl
mov
ret
nop
xchg
dec
je
loop
mov
push
push
lds
fimuls
push
inc
insl
adc
adc
sub
inc
or
rcl
sub
in
incb
ljmp
test
popf
fwait
stos
xor
int3
addr16
and
movsb
xchg
mov
outsb
dec
push
or
stos
xor
and
adc
xor
add
push
xor
mov
or
jmp
dec
mov
pop
cltd
sub
mov
dec
out
cltd
xor
sub
std
jl
in
push
mov
jmp
mov
xor
pop
lods
bound
jae
sar
ret
mov
mov
mov
lock
mov
lods
add
and
inc
mov
cmp
and
mov
inc
into
push
dec
or
jmp
aas
xchg
nop
mov
lods
sbb
hlt
mov
add
xchg
jmp
subl
mov
jl
lea
add
in
xchg
add
adc
ret
arpl
mov
scas
dec
outsb
jle
push
adc
aaa
lods
add
mov
mov
mov
cs
xor
das
add
nop
pop
xchg
sub
fldenv
push
xor
es
mov
sbb
xchg
xchg
or
insl
pop
in
enter
fs
mov
aam
add
mov
arpl
out
mov
pop
fst
lock
sbb
mov
out
mov
add
dec
mov
jl
mov
ret
pop
mov
inc
sub
push
adc
and
aam
push
sub
xor
add
jp
adcl
stos
mov
cltd
xchg
push
lret
in
movsb
xor
xchg
ret
mov
addb
or
lret
out
push
and
aas
in
loop
add
ret
les
xor
mov
rorb
sub
addr16
cmpb
mov
stos
enter
pop
pop
out
adc
mov
pop
daa
and
dec
mov
jl
outsb
js
or
mov
mull
push
lret
out
mov
ficoml
outsb
and
addb
leave
sub
xor
add
mov
aaa
sti
cmp
sahf
and
bsr
int3
add
int3
cmpsl
sbb
xchg
pop
int3
inc
xor
mov
call
or
and
mov
sub
lods
gs
ret
les
scas
ds
mov
icebp
or
mov
inc
call
scas
outsl
or
cmpb
aad
out
and
fxch
in
mov
rorl
pop
xor
rcll
push
into
push
jl
cwtl
or
xor
pop
jne
cmpb
xchg
out
andb
mov
in
pop
rorb
int
pop
out
lcall
mov
repnz
push
pop
cmp
into
inc
dec
je
pop
dec
xchg
insb
mov
imulb
sti
sbb
ss
sbb
mov
daa
sbb
mov
lea
adc
sbb
mov
sub
dec
xchg
scas
fwait
adc
inc
mov
daa
and
xor
stos
sub
fmul
bound
adc
jns
xchg
mov
or
adc
jmp
or
lret
add
fsubs
and
xchg
cli
mov
cmp
push
jbe
jmp
fisubrl
stos
push
stos
stos
test
lock
sbb
sub
push
cmp
lret
das
leave
cmp
scas
dec
add
lcall
and
bnd
popa
mov
cmpsl
sub
test
rorb
push
dec
mov
lods
aas
dec
sub
pop
mov
adc
out
lea
adcb
or
dec
fs
into
scas
mov
dec
mov
aad
fdivrl
mov
adc
mov
mov
push
inc
andb
cmp
lahf
mov
rcrl
into
push
and
push
or
loopne
loop
dec
movsb
lret
lret
out
push
in
lret
or
out
out
pop
and
mov
mov
xlat
push
pop
mov
fsubs
mov
aaa
fmull
in
in
push
insl
mov
ficomps
mov
jmp
cld
add
sub
push
adc
push
icebp
mov
jae
das
add
hlt
mov
mov
jo
into
adc
cld
jecxz
dec
cmp
pusha
lds
mov
loop
test
pop
pushf
mov
cwtl
mov
sarb
cmp
push
adc
dec
lret
ljmp
add
fwait
cmpsl
iret
dec
sti
jle
cmpsb
pop
dec
mov
aam
stos
test
lds
mov
push
inc
xor
mov
and
jno
js
out
mov
lret
sbb
iret
imul
mov
push
pop
out
xchg
mov
inc
mov
cltd
mov
test
lret
shl
dec
outsb
fstpl
adc
dec
xchg
jg
aas
xor
clc
inc
sbb
les
in
stc
push
ja
mov
rol
add
xchg
pop
lea
pushl
add
cmp
sub
sub
or
push
push
mov
repnz
push
add
or
jns
movsb
pop
add
inc
mov
fbstp
ja
sub
push
push
sbb
pop
sbbb
xchg
adc
push
ljmp
dec
mov
mov
fadds
out
scas
insl
les
cmpsl
inc
cld
push
dec
mov
pop
das
xor
outsl
inc
mov
mov
fcmove
mov
addb
pop
scas
add
mov
cmpsl
aam
mov
push
rcrb
es
jmp
cmpsb
push
es
inc
mov
and
or
xchg
pop
xor
add
insb
aaa
pushf
fs
mov
popa
popa
or
sbb
push
pop
scas
jb
mov
je
sub
ret
and
out
mov
mov
outsb
rcl
jno
dec
pop
fmul
add
push
aad
and
push
sub
cmpsl
inc
mov
add
sahf
fisttps
push
pop
mov
pop
dec
lds
mov
stos
push
cmpsl
push
scas
jmp
in
add
dec
loope
lods
jmp
rcr
loopne
add
roll
les
cld
loop
mov
adc
xor
adc
pop
outsl
adc
push
jmp
hlt
push
xchg
mov
das
add
addl
sub
and
fistl
xor
sti
dec
mov
pop
dec
js
fs
pop
stos
inc
push
imul
add
orb
in
sub
sub
xchg
divb
outsb
dec
mov
in
mov
push
movsb
and
inc
lods
dec
out
jp
cwtl
mov
cmp
arpl
iret
push
pushf
mov
xchg
push
mov
pop
add
ret
xchg
ds
inc
cmpsb
xor
inc
insl
fdivr
or
mov
xchg
add
cs
movsb
jnp
lret
outsl
mov
enter
sub
sahf
inc
popf
or
xor
int
call
sub
dec
gs
cmp
mov
ja
inc
push
mov
pop
lahf
push
mov
lock
inc
xchg
xchg
inc
xor
pop
movsl
pop
jmp
aad
and
pop
mov
xchg
add
push
pop
push
dec
lock
aaa
push
xchg
aam
pop
clc
ret
add
daa
mov
out
shl
mov
cmpb
gs
loop
rcrl
jecxz
lods
xchg
fsubl
lret
push
inc
add
fdivl
push
cmpsb
adc
pop
dec
inc
adc
sbb
addr16
shrl
outsl
or
push
cld
fsubs
pushf
push
stos
addb
pop
pop
fcmovnb
lret
dec
xor
cwtl
and
mov
ljmp
repz
jp
cmpsb
adc
int
adc
hlt
adcb
lods
stos
cmp
imul
negb
push
push
inc
mov
popa
imul
xchg
cld
xchg
jne
insl
cmpl
mov
cmpsl
in
pop
sti
mov
fbld
pop
sbb
das
xchg
testl
mov
add
out
cli
pusha
loop
std
inc
mov
bound
xchg
popa
bt
sbb
pop
arpl
lds
inc
jnp
push
adcb
inc
mov
jae
dec
repz
rcrb
sbb
sbb
test
pop
dec
shrl
cmpsl
fsubrl
sbb
jnp
rorl
shlb
push
cmpsl
dec
std
sub
inc
sbb
sub
lods
xorl
sbb
add
test
pop
or
add
mov
jmp
test
ljmp
into
xor
xchg
daa
aas
jnp
cmp
movsb
jge
mov
xchg
cmc
aaa
push
movsl
into
cmpsb
scas
repz
int
sahf
push
shlb
sub
inc
add
outsl
popf
sahf
mov
xabort
push
xor
cli
ror
push
aam
imul
lcall
cmp
cmpsl
pop
fdivrl
sbb
cmpsb
jnp
push
ljmp
jae
sbb
ja
ret
mov
mov
lods
iret
lods
lret
adc
mov
cmp
sub
je
adc
lcall
mov
sub
push
enter
xor
rorl
in
cmp
dec
shrl
sub
cmp
and
xchg
and
cmc
mov
movsl
pushf
sbb
jne
sub
pop
cmpsl
mov
pop
ret
sbbl
ret
sbb
xchg
int3
jne
and
ficoml
out
loope
shl
inc
repnz
mov
push
inc
hlt
inc
aad
ror
cmp
insb
lods
jno
das
es
mov
mov
shll
push
mov
scas
mov
in
mov
jb
sub
outsl
popa
dec
inc
xor
xchg
push
stos
jl
outsb
sbb
nop
jae
les
mov
ss
sub
scas
cmp
rorb
jns
lods
cli
bound
ret
xchg
adc
out
dec
in
jno
outsb
test
xor
dec
shrl
lahf
popa
xchg
rorl
shrl
pop
xchg
push
mov
pop
xchg
test
aas
lcall
cmpsl
pop
adc
sbb
in
loop
jno
mov
xchg
xor
add
xor
es
movsb
push
ret
lock
shr
mov
popa
mov
mov
mov
pop
mov
call
push
push
lods
sbb
sarb
std
cmp
or
lea
fucom
xor
das
pop
pop
jle
les
pop
sub
mov
orl
jo
mov
outsl
mov
jecxz
pop
cmp
enter
int3
xor
jecxz
mov
mov
mov
sub
dec
cmp
pop
jnp
out
cmpsl
sub
testl
ret
in
mov
add
std
push
sbbl
shl
outsb
and
inc
xor
jo
shld
in
in
iret
lcall
cmp
ret
push
bound
nop
add
or
fldenv
pushf
cmc
mov
xorl
test
add
in
jmp
adc
lahf
ret
ret
popa
ljmp
ss
addb
jo
fists
adc
cs
pushf
je
aad
cmpl
cmp
lods
inc
jecxz
lea
sub
mov
xchg
cmp
mov
push
mov
jmp
test
jno
or
mov
mov
push
shlb
and
push
addr16
push
stos
jcxz
movsl
inc
shll
or
cmpsb
xor
mov
mov
pop
mov
int3
gs
inc
pop
jge
testb
clc
xchg
push
stos
loop
and
inc
int
add
aad
jmp
and
je
push
popa
stos
add
sub
push
push
xor
loope
std
push
or
iret
mov
lcall
mov
mov
mov
sarb
subb
repnz
mov
cmp
push
push
lcall
sub
scas
mov
or
xor
sub
pop
stos
loop
lret
mov
sbb
sbb
mov
push
mov
adc
mov
cmpsl
mov
bound
and
scas
mov
mov
stc
xor
shlb
or
cmp
pop
adc
jle
push
add
es
push
dec
std
clc
sti
repnz
lea
loop
stos
jle
das
mov
cmpsl
push
lret
xor
pop
jnp
push
jl
inc
mov
xor
sbb
cmp
arpl
rorb
mov
test
jne
push
setl
ret
mov
movsb
mov
in
and
ljmp
mov
inc
and
dec
hlt
leave
adc
jmp
mov
jle
push
jecxz
sub
and
pop
lods
xchg
subb
xchg
mov
ret
mov
mov
adc
cmp
xchg
or
mov
or
mov
adc
lock
mov
jno
aad
fmull
pop
hlt
sub
inc
iret
inc
popf
or
mov
lea
mov
mov
cmpsl
enter
add
xor
jg
das
add
je
fldt
mov
add
cmpsl
cmpl
jge
and
icebp
jne
arpl
mov
push
scas
rol
arpl
jo
mov
fmull
jns
jbe
and
mov
shrl
adc
into
dec
mov
orb
pusha
pop
dec
je
mov
push
add
mov
adc
jne
cwtl
xor
jbe
mov
arpl
push
stos
in
lods
out
pop
aam
int
push
jo
add
push
xor
fsubrl
ja
outsl
imul
pop
aaa
arpl
xor
sahf
loopne
rcrl
int3
and
pop
add
and
push
frstor
pop
rorb
jno
enter
sub
xchg
push
mov
mov
int3
mov
adc
sbb
loopne
or
loop
pop
shll
in
rolb
cmp
imul
mov
test
into
mov
jge
negb
js
std
stos
out
push
or
jae
xor
out
adc
xchg
inc
mov
push
mov
inc
jnp
mov
orb
cld
addl
adc
bound
hlt
mov
jg
lea
das
push
les
pushf
movsl
add
dec
and
and
add
das
lcall
inc
ds
fildl
pop
roll
xchg
cs
decb
xchg
insl
clc
hlt
add
fldcw
push
push
mov
stc
xor
sub
rclb
xchg
lods
cmp
cld
das
imul
inc
fcmovb
int3
xchg
loopne
fcmovnb
xor
push
push
push
loop
inc
mov
push
add
popf
cmp
cmp
outsb
add
fcmove
xchg
movsl
es
mov
pop
sbb
jmp
inc
xchg
xor
sbb
mov
cmpsb
aaa
mov
mov
fnstenv
movsl
pop
sarw
movsl
std
adc
add
fs
jecxz
stc
fs
push
cmp
das
adc
sub
bound
sub
in
ljmp
outsb
xor
rcll
bound
jg
jle
std
add
imul
mov
xorb
add
sbb
pushf
loope
xor
out
sahf
pop
int3
scas
mov
and
push
decl
xchg
scas
xor
repnz
scas
and
fwait
int3
jbe
push
xor
lods
lock
test
je
xchg
push
stos
insl
cmp
cmp
fcomi
andb
add
shll
jae
int3
mov
jp
mov
xor
pop
cmp
add
fmul
andb
jecxz
pop
xchg
mov
testl
pop
inc
repnz
inc
and
cmp
clc
add
push
fldl
add
push
in
dec
mov
xchg
movsb
inc
or
add
clc
cmp
mov
mov
pop
shlb
or
and
mov
imul
cld
xor
into
fldt
dec
bnd
push
sti
jmp
cld
xchg
push
addb
adc
push
and
setae
je
fadd
xorb
mov
mov
jmp
fnstcw
test
cmp
dec
leave
adc
pop
imul
push
pop
into
sbb
cmpsb
sbb
sub
je
aam
mov
mov
adc
dec
icebp
fcoml
out
outsl
inc
xor
jae
fsubs
xor
mov
gs
rorb
dec
jnp
scas
daa
inc
popl
inc
adcb
mov
sbbl
sub
rcr
jge
xchg
lret
stos
imul
testl
or
int3
loope
mov
mov
cmc
mov
mov
xlat
adc
or
rcrb
rclb
sbb
mov
in
add
mov
arpl
jb
push
stos
add
mov
mov
shrd
sub
jg
mov
pop
imull
dec
mov
dec
test
les
loop
and
push
adc
mov
ljmp
dec
aaa
in
les
jecxz
bound
and
or
ror
mov
pop
lret
das
mov
and
dec
cli
andl
mov
cmpsl
xchg
pop
repnz
test
jne
lret
enter
mov
mov
mov
les
cmpsl
sub
ret
lret
mov
add
dec
xchg
ja
add
mov
adc
mov
aas
icebp
fldl
rcl
popa
push
or
mov
mov
mov
or
rorl
shll
leave
stos
fadds
xchg
sub
mov
push
sub
mov
jae
aaa
in
mov
cmpsb
push
scas
push
and
push
lock
lds
add
mov
add
int
popa
shrb
inc
daa
imul
fs
sbb
push
sbb
inc
jno
andl
mov
inc
pop
out
mov
and
jbe
push
or
mov
mov
push
test
out
ret
jecxz
xchg
or
repz
mov
ret
loopne
add
int3
mov
rcrl
push
sub
popf
lret
js
lret
in
push
and
repz
mov
lods
lret
das
cmc
into
cmpl
pop
scas
add
add
xor
push
cmp
lea
daa
rorb
ret
sbb
cld
fldcw
hlt
adc
mov
das
adc
stos
pop
repnz
enter
lds
lret
fwait
cmpsl
pushf
inc
dec
call
ss
mov
xorl
push
dec
add
or
xchg
std
push
imul
mov
fstpt
mov
fucomi
sub
push
mov
subl
xchg
jne
scas
aad
addr16
xor
cmp
or
sti
mov
aas
bound
jl
int3
cmpsb
cltd
out
jp
pop
fdivr
add
add
imul
add
repz
jmp
or
aad
mov
push
aaa
pop
or
mov
in
add
xor
fcmovnb
mov
cmc
lock
orl
dec
ret
fsubrl
arpl
and
andl
push
mov
dec
sbb
mov
imul
mov
lret
xchg
inc
stc
mov
sbb
push
mov
adc
imul
loop
mov
movsb
cmpsl
popf
stc
dec
mov
xlat
fimull
sub
lret
pop
jle
xor
jle
out
pop
lds
out
out
inc
cmpsl
lds
pop
fwait
iret
or
je
std
cmpsl
lcall
cld
xorb
xor
sbb
pop
mov
fstl
ror
xor
add
push
lods
mov
add
shll
stos
or
out
mov
adc
xchg
xor
into
mov
pop
cmpsl
xchg
scas
mov
fidivl
je
lea
sarb
xchg
sbb
out
ret
loopnew
orl
stos
push
sbbl
push
sbb
adc
jecxz
mov
cmp
testl
jno
test
mov
mov
xor
dec
fchs
mov
paddsw
das
mov
je
add
xor
fistpl
stos
xchg
jecxz
xor
push
pop
mov
lahf
inc
adc
mov
popa
cmp
add
mov
pop
mov
insl
xchg
out
xor
int3
aas
scas
shrb
out
dec
int3
in
xchg
mov
dec
cmpl
ret
inc
jg
xor
add
pop
insb
scas
mov
in
mov
or
shlb
mov
pmulhrsw
shlb
inc
mov
popf
les
mov
pop
sbb
test
ret
daa
cmp
mov
xor
std
mov
add
push
test
ss
shll
cmpsl
jl
aas
movsb
lock
imul
fiaddl
fcoms
sarb
aam
dec
xchg
add
bound
push
add
and
inc
hlt
cmp
sbb
mov
scas
pop
mov
movsb
xchg
sub
dec
lods
jnp
repz
dec
cmp
iret
movsl
add
mov
jge
out
or
push
sbb
cmpsb
push
gs
push
cmpsb
addr16
adc
sbb
hlt
inc
inc
xchg
adc
jnp
scas
je
loop
out
sbb
lret
or
xchg
pop
push
add
shrl
push
adc
mov
add
add
sub
movsb
cmpsl
fwait
push
je
jg
popa
ljmp
subl
aam
sub
sbbb
push
mov
xorl
xor
mov
jl
leave
ret
cmpsl
repnz
fs
enter
hlt
aaa
mov
pop
cmp
les
push
inc
mov
mov
mov
int
jmp
dec
rclb
or
lret
stos
xor
mov
and
pop
jo
cld
ret
xor
jno
bt
in
cmpsl
mov
repz
push
das
lock
jae
adc
dec
popf
mov
push
xchg
sbb
xchg
dec
xchg
inc
mov
push
push
mov
mov
mov
ud1
sub
dec
and
and
pop
fsub
roll
rclb
inc
cmp
sub
pop
jle
out
outsl
pop
js
sbb
cli
ljmp
in
cmpsb
mov
test
in
mov
cmpsl
mov
movsl
inc
cs
cmp
mov
fcmovnb
ret
xchg
inc
jns
cmp
xchg
in
xor
and
idiv
jmp
test
mov
mov
mov
scas
sbb
or
shlb
loopne
aaa
mov
cmp
enter
add
in
std
adc
rol
fwait
outsb
xorb
pusha
or
mov
out
inc
inc
adc
dec
dec
arpl
lcall
dec
orl
cmp
bound
mov
and
scas
jb
mov
arpl
and
sub
xchg
jae
push
and
mov
cmc
xlat
pop
and
test
and
cmpsl
outsl
addr16
jae
andb
add
xchg
push
jg
rolb
pushf
cmpsb
in
dec
icebp
mov
das
lcall
in
cld
fcmovnb
mov
data16
xor
cmp
adc
imul
movsb
xor
lret
inc
stos
pop
cmpsb
add
lcall
add
xchg
xchg
and
sbb
testb
repnz
pusha
mov
fidivrl
dec
leave
movsb
scas
mov
pop
mov
mov
loop
sbb
data16
fsubrl
sub
xor
testb
xchg
pop
divb
int3
and
cwtl
pop
mov
sub
out
fmuls
and
cmp
out
xor
cld
repnz
push
lea
ljmp
mov
adc
aas
and
aad
ret
daa
stc
or
jecxz
xor
xor
add
stos
ja
je
ret
mov
mov
mov
mov
mov
repz
cmpb
cmpsb
mov
and
adc
lret
movl
xor
xor
sub
es
mov
fcmovne
mov
int3
mov
sbb
int
push
shlb
in
push
mov
dec
jns
jb
sub
out
ret
adc
test
add
xchg
aas
sti
cs
in
stos
lea
pop
fs
daa
push
mov
stos
cmp
jmp
loop
xor
mov
insb
xchg
int3
push
icebp
xor
out
cmp
push
fstl
out
insl
xchg
mov
push
or
movsl
outsl
jns
aaa
adc
popa
lods
ss
dec
bnd
add
or
xchg
fmull
loopne
ret
call
mov
dec
xor
dec
mulb
sub
and
push
enter
and
push
test
movsb
sub
lods
mov
in
mov
bound
outsl
imul
loope
pop
add
sti
cltd
push
lods
or
dec
inc
fwait
jo
or
mov
or
int3
mov
xor
int3
push
jp
imul
and
ss
outsb
add
add
into
inc
push
cmp
not
loopne
imul
leave
aaa
decb
test
adc
out
rolb
xorb
arpl
stos
cwtl
mov
mov
mov
xor
lods
nop
dec
and
pop
cs
je
lret
push
push
lea
jmp
xor
andb
push
lcall
and
aam
rolb
cmp
cmpl
mov
add
sbb
lods
mov
xorl
ret
cltd
or
shlb
fdivrl
in
jl
mov
mov
dec
mov
je
sti
push
leave
xor
arpl
mov
mov
js
sbbl
jne
in
pop
fadds
flds
aaa
jmp
cmpsb
cmp
in
xor
push
push
jb
push
pusha
cmpsl
xchg
add
in
jmp
aas
insl
and
iret
mov
mov
fmul
xor
mov
mov
jmp
or
pop
xchg
jmp
movsl
repz
cs
outsb
or
mov
mov
mov
je
lods
mov
and
mov
fildl
arpl
lods
xor
cmc
jge
int
imul
cmpsb
pop
pop
cltd
cmpsb
fwait
mov
xchg
mov
test
movsb
mov
cmpsl
out
dec
adc
ret
mov
cmp
xor
rolw
mov
inc
push
loope
cli
into
jecxz
orl
shl
out
xchg
xchg
js
cs
adc
dec
popf
pusha
mov
ret
cmpsl
pop
jno
dec
xchg
mov
xor
in
push
xchg
jmp
pop
pop
mov
into
ss
mov
add
xchg
clc
mov
int
movsl
push
data16
out
stos
fwait
pushf
mov
in
cs
cmpsl
dec
xor
icebp
ss
jp
imul
stos
stc
fnstcw
add
xchg
fsubrs
pop
xor
jecxz
cmpsl
dec
push
mov
into
dec
or
jmp
pop
iret
mov
lods
loop
mov
cmpl
add
rorl
lar
loop
cmpsl
push
cld
cmc
inc
sbb
inc
push
or
loope
cmpsl
or
orb
aaa
mov
cmpsl
mov
mov
je
mov
mov
leave
xor
add
fnstenv
lret
mov
mov
xchg
cmp
sbb
and
and
push
movsl
mov
out
sub
sbb
js
mov
mov
rorl
adc
inc
lahf
nop
add
jb
das
add
mov
push
mov
or
add
int3
aaa
mov
mov
aaa
mov
test
xorl
mov
psadbw
lret
cmp
out
lods
testb
adc
lret
ficompl
sub
push
lods
sub
mov
push
adc
lock
andl
sub
inc
xor
add
iret
mov
out
inc
pop
jmp
lea
sbb
dec
iret
push
xor
popa
mov
add
fidivl
mov
mov
lock
mov
ret
lahf
sbb
push
daa
mov
xchg
xor
jle
jb
rcll
scas
mov
mov
dec
mov
mov
jne
mov
inc
ds
mov
cmp
xor
in
nop
lock
adc
mov
xor
aaa
jmp
mov
mov
inc
stos
cmp
or
mov
and
lret
jmp
fisttpl
dec
or
cld
cmp
aaa
andb
flds
or
jns
adcb
rolb
add
cmp
mov
sub
mov
inc
mov
push
fabs
stc
add
cmp
rorb
pop
cmc
imul
scas
adc
sahf
stos
imul
cmpsl
dec
sub
movsb
call
jnp
push
cmpb
add
pushf
sbb
sbbb
adc
cmpsl
jo
cltd
xor
out
and
ss
jae
mov
lret
iret
jo
leave
cltd
mov
mov
repz
add
xor
das
stos
mov
xchg
jmp
or
add
xchg
jle
lods
js
mov
cld
in
push
lds
pusha
ja
mov
jle
xlat
notl
movsl
gs
push
cmp
lcall
loop
dec
add
stos
xchg
push
jae
adc
cmp
movsb
mov
push
pop
ret
and
adc
mov
inc
push
mov
push
push
or
mov
into
lcall
mov
inc
push
cli
andl
enter
aad
inc
mov
dec
pop
ja
push
mov
pop
into
cs
pop
mov
ret
loope
aas
add
adcl
loop
lods
push
and
or
loope
add
fidivs
int
data16
rolb
aas
mov
push
mov
adc
ds
mov
add
push
lcall
jl
dec
ljmp
cld
testl
ljmp
lret
movsl
push
pop
mov
leave
lret
jmp
dec
ficoml
jle
shrl
xchg
fldt
fcoml
insb
call
popf
sub
jge
pop
push
push
inc
cmc
or
leave
mov
in
int
sbbb
aas
pop
cmpsl
mov
mov
sbbb
pop
outsl
lcall
xor
in
inc
testl
pop
mov
lcall
fs
movhps
fwait
mov
mov
inc
leave
mov
clc
cmpsl
outsb
inc
or
lcall
cwtl
lcall
mov
jmp
dec
pop
std
lods
mov
lods
dec
ss
pushf
adc
fisttpl
inc
mov
ss
or
mov
popa
dec
push
push
les
push
ret
rolb
jp
sti
mov
mov
or
int3
push
outsl
dec
mov
loopne
mov
jae
mov
adc
pusha
test
mov
leave
les
push
fistpll
pop
out
xchg
push
sti
leave
xchg
mov
dec
in
inc
mov
fbld
adc
adc
ret
push
or
into
int
bound
mov
mov
out
pop
inc
out
rcr
cld
adc
pop
ror
mov
cmp
mov
in
mov
push
add
sbb
into
outsl
mov
rorl
mov
dec
imul
orb
shrb
sub
xorl
mov
mov
and
es
xor
dec
ret
add
push
or
mov
outsl
mov
jno
lret
out
pushf
daa
push
push
mov
or
or
sub
cmpsb
jae
cmp
and
aad
adc
add
or
rclb
adc
pop
repnz
mov
xchg
ret
movsb
jle
push
add
mov
add
sti
xchg
cli
ret
pop
dec
mov
mov
mov
in
out
mov
aam
fcmove
cld
mov
xchg
ds
add
adc
xlat
inc
add
mov
push
in
imul
adc
mov
cmc
cmp
movsb
mov
stos
lret
imulb
jns
push
outsl
push
xor
dec
push
fadd
bound
andb
les
in
out
fs
lea
lret
sbb
mov
ret
pop
lret
mov
cmpsb
stos
fildl
aaa
inc
pop
insl
mov
ret
sbb
arpl
mov
mov
aaa
aas
mov
aaa
push
daa
bound
fwait
push
aaa
sbb
push
scas
outsb
repz
sub
adcb
and
inc
ret
into
sub
popf
push
inc
xchg
and
popf
and
arpl
jns
mov
xor
push
arpl
dec
mov
aas
dec
lods
mov
cli
xor
jno
adc
les
inc
adc
jg
test
sub
iret
and
lock
sti
add
bound
mov
jecxz
sbb
lret
lret
add
and
jecxz
ficompl
mov
insl
insb
stos
mov
rorl
xor
stc
and
dec
hlt
or
bound
mov
fs
xchg
mov
outsb
sub
pusha
cld
ret
and
popf
mov
fisttpll
adc
lret
adc
xor
add
hlt
pop
xor
add
pop
xor
mov
and
xor
scas
sub
lods
pusha
imul
lcall
or
push
les
mov
outsl
push
add
pop
push
jb
mov
push
or
repz
cmp
xchg
add
int3
gs
mov
and
scas
cmpsl
sub
mov
cmp
mov
cmpsl
scas
inc
sub
or
inc
fwait
rcrb
cmpsl
out
lds
mov
ret
cvtpi2ps
sub
mov
in
loop
mov
push
dec
mov
orb
xchg
pop
and
push
enter
outsl
cs
inc
stos
add
adc
lods
mov
jecxz
xor
repnz
mov
pop
adc
sbb
cli
fnstenv
pop
outsl
and
mov
lods
adc
mov
cmp
jge
sub
lahf
sbb
testl
jp
mov
int
andnps
xor
dec
shrl
nop
loopne
mov
stos
enter
adc
xorb
in
out
shlb
and
or
lret
push
mov
hlt
mov
cmp
dec
jmp
or
adcl
dec
sub
or
dec
mov
dec
jno
cmp
or
loope
nop
ret
dec
xor
loopne
stos
das
pop
cli
ret
cmp
pop
jns
jb
mov
mul
jbe
xchg
adcl
cmpsb
add
pop
outsb
inc
gs
cmp
add
lods
jle
and
fildl
out
movsl
aad
adc
xchg
jecxz
inc
cmc
mov
fcomps
xchg
sub
cmpsl
adc
sub
or
adc
inc
outsl
push
adc
mov
sbb
mov
fs
mov
cmp
mov
mov
adc
nop
push
or
mov
lret
adc
xor
inc
mov
mov
rcpps
popa
arpl
out
or
or
pop
roll
and
mov
rclb
adc
fildll
insl
ret
or
push
shll
mov
fadds
mov
addb
mov
mov
fs
test
dec
dec
sbb
cs
push
jecxz
or
mov
out
fs
sbb
or
xlat
push
cmp
shr
ret
movl
adc
cli
imul
pop
mov
jns
add
rolb
mov
inc
dec
sbb
out
xlat
or
dec
ret
fwait
pusha
loop
movq
jae
mov
subb
xchg
ret
jp
in
mov
adc
repz
insb
or
cmp
cmp
mov
mov
iret
out
mov
mov
aaa
xchg
mov
inc
rolb
add
dec
mov
cmc
ret
pop
mov
mov
and
mov
repz
cmp
rolb
push
stos
add
mov
mov
outsl
sbb
push
pop
pop
outsb
mov
mov
push
clc
ss
imul
mov
sub
mov
shl
add
ds
les
int3
mov
inc
xchg
addb
sub
dec
in
iret
or
in
fs
or
xchg
ror
dec
cmpsl
push
imul
outsl
jbe
xor
sbbb
push
mov
fcoml
adc
loope
loopne
push
sbb
add
push
rclb
ficoml
dec
ret
int3
mov
fwait
mov
addb
sbb
push
sbb
mov
cmpsl
jmp
and
ljmp
lods
ret
cmpsl
imulb
and
jmp
adc
push
mov
jnp
fnstcw
mov
push
mov
mov
lahf
jae
or
dec
inc
xor
imul
add
movsb
push
loop
and
cld
mov
or
arpl
adc
sbbl
cmpl
add
flds
push
jb
repnz
mov
stc
mov
mov
mov
push
adc
dec
xor
mov
and
push
addb
sbb
xor
mov
shlb
iret
filds
pop
xorl
lret
out
adc
mov
std
fsts
test
cltd
std
lock
lods
add
imul
rolb
sbbb
ret
cmp
push
cld
dec
cmp
jmp
cmp
sti
mov
dec
cmp
mov
stc
add
xlat
stos
stos
and
test
pop
cmp
ja
outsb
push
xor
xor
add
cmpsb
lcall
mov
lea
hlt
cmpsl
adc
jge
push
and
xor
add
sbbl
mov
jno
repz
mov
xor
xchg
mov
lea
mov
mov
jg
or
push
inc
sbb
mov
mov
dec
push
xor
dec
int3
cmc
repnz
fs
xor
fadds
fs
mov
mov
mov
ds
stos
mov
lret
lahf
outsb
mov
aas
stos
repnz
add
out
add
lods
outsb
inc
std
cs
xor
mov
cmovg
js
add
leave
sarb
pop
or
and
dec
and
mov
xchg
and
add
lahf
test
jmp
iret
mov
leave
in
adc
pop
mov
inc
push
pushf
popa
pushw
push
add
and
ja
mov
sbb
cmp
or
jl
cld
add
cmp
mov
mov
mov
mov
mov
mov
or
cmp
jg
loop
pop
adc
inc
and
loopne
cmp
adcb
fnstsw
out
cltd
or
add
cmpsb
decl
xchg
in
daa
inc
mov
fmull
mov
jecxz
lea
inc
imul
pusha
stos
in
xchg
cmpb
cmp
lcall
lret
adc
xor
aas
stos
adc
xchg
mov
push
sbb
adc
outsl
in
popa
add
cmpsl
stos
cmc
pop
andps
nop
xorl
jb
nop
int3
addb
nop
jae
mov
sub
das
aad
popf
clc
pop
xchg
jae
jp
cld
outsl
or
mov
call
cwtl
test
and
add
xchg
outsb
aad
cs
dec
vandps
pop
lea
inc
cmp
and
lcall
clc
jmp
inc
lock
sahf
adc
jecxz
lea
adc
xchg
push
addl
hlt
xor
loop
cwtl
cmp
lock
add
sbb
es
mov
mov
push
dec
xchg
lcall
push
orb
repz
pop
pop
cld
dec
mov
add
mov
std
clc
push
fdivp
pop
sbb
adcb
cwtl
inc
add
pop
loope
or
aas
orl
and
push
jecxz
faddl
mov
dec
lock
add
xchg
out
adc
pop
add
pop
or
mov
mov
cmpsb
add
xor
pusha
xchg
in
push
shlb
shlb
dec
mov
xchg
push
imul
rorb
mov
arpl
gs
sub
xchg
pop
mov
mov
mov
out
rclb
mov
imul
subl
je
push
iret
mov
lret
mov
addb
inc
mov
stos
cmpsl
das
mov
jns
mov
jne
and
outsl
mov
les
push
mov
mov
stos
dec
jecxz
adc
or
xor
fwait
shrl
repnz
insl
lock
jo
out
xchg
mov
adcl
add
push
push
add
cmpsl
fisubs
das
cmp
aas
xor
out
scas
loop
out
rorl
js
push
repnz
ror
out
jno
add
mov
stos
bound
sbb
inc
test
and
cmp
in
and
inc
lds
jbe
jnp
aaa
and
inc
into
in
push
xchg
aas
jno
and
mov
add
mov
fiadds
xchg
and
in
dec
les
aam
lcall
bound
mov
mov
fdivrl
jnp
cmp
dec
sbb
jbe
jae
xor
cmpsl
cltd
or
stos
jp
std
inc
int3
jmp
push
mov
sbbb
lea
mov
fcoms
jg
sub
ljmp
jns
in
addr16
das
test
in
outsb
pop
sbb
movsl
addr16
test
repz
jmp
cmp
clc
push
mov
addr16
cmpsl
insb
testl
dec
adc
lret
out
repnz
adc
xchg
mov
sub
adcb
and
push
les
stos
or
mov
xor
sub
dec
ret
addr16
xor
jnp
rorb
clc
loopne
or
xchg
loop
dec
push
fsub
out
xchg
push
mov
cs
rol
xor
mov
lret
xlat
push
pop
mov
mov
repnz
jmp
decl
imul
xchg
xchg
push
sahf
rorb
fistpl
fildl
cs
push
lcall
imul
lcall
stos
add
pop
mov
fnstenv
mov
out
mov
mov
cmp
sub
sbb
ljmp
or
movb
pop
mov
jecxz
clc
out
imul
hlt
push
mov
push
xchg
and
dec
cmpsl
push
push
jmp
add
xor
mov
js
cmpsl
cwtl
stc
mov
aad
dec
add
clc
mov
bound
sbb
cmp
pushf
shlb
out
std
mov
orl
in
repnz
rclb
out
mov
in
sahf
es
mov
xor
icebp
call
inc
sbb
mov
or
lea
or
and
xor
outsb
push
sbb
push
dec
in
into
push
jmp
mov
mov
lea
loop
mov
ljmp
in
push
cmp
lret
cmpb
mov
lret
cmp
xchg
jl
xor
xchg
repnz
inc
pop
movsb
mov
jnp
xchg
scas
les
xstore-rng
cmpsl
inc
dec
cmp
sub
mov
cmpsl
outsl
in
and
jae
and
jb
ret
cltd
loop
cmpsb
mov
addr16
testb
fisttpl
xchg
push
add
imul
int3
jecxz
dec
sbb
mov
sbb
repnz
rcl
mov
out
cmp
adc
jp
mov
and
test
add
in
mov
push
iret
popw
pop
mov
push
mov
pop
movsb
jp
mov
xor
mov
int3
bound
inc
fcoml
outsl
add
pop
cmp
jmp
lcall
das
adc
push
ss
subb
lcall
outsb
mov
and
pop
sbb
xlat
xchg
push
jne
dec
pushf
addl
add
or
arpl
popf
leave
mov
imul
pushf
and
xchg
xor
ret
mov
sub
dec
rolb
stos
imul
shll
and
or
test
mov
push
inc
shl
push
ss
xchg
scas
test
clc
inc
aaa
mov
dec
xlat
sub
sbb
cli
leave
lods
fwait
mov
mov
loop
fs
mov
lret
incl
mov
dec
push
xchg
stos
xor
roll
stc
imul
mov
outsl
xchg
test
out
cltd
or
jmp
in
dec
iret
push
jmp
mov
mov
outsb
xchg
mov
xor
fwait
add
mov
ja
fs
mulb
sbb
clc
cmc
pushf
fsubrl
orb
push
sub
nop
push
mov
mov
ljmp
ds
push
dec
sahf
sbb
enter
xchg
mov
idivb
push
fwait
cld
sbb
int3
in
pop
xchg
jbe
push
mov
adc
jmp
dec
lret
lock
gs
repnz
inc
ja
and
ds
mov
fcmovne
or
mov
add
aad
inc
je
imul
stc
inc
or
lods
add
xchg
mov
mov
cmpsl
ficompl
cmc
mov
push
mov
clc
cmp
pop
xchg
stos
cld
andl
orb
adcb
repz
push
sbb
leave
pusha
sub
dec
xor
push
mov
dec
int
adc
mov
dec
mov
fldln2
xchg
fldcw
sbb
pusha
xorl
neg
push
push
stos
jne
dec
jmp
mov
xlat
subl
mov
sub
lds
push
mov
shll
cmpsb
fcoml
sub
inc
cld
js
pop
roll
jge
mov
fwait
inc
cmpsl
fidivs
lret
loop
in
das
out
add
sub
cld
lret
incb
subb
jno
sbb
push
jns
adc
cmp
insb
roll
pop
jnp
and
enterw
pop
xor
fs
pop
dec
test
push
pop
lret
add
xchg
mov
cs
sub
rolb
or
push
rcr
mov
ret
daa
adc
add
adc
rorb
and
xlat
rorl
xor
xor
gs
xor
ficompl
dec
movsl
sub
jbe
xchg
pop
inc
jle
pop
pop
mull
mov
stos
pop
xor
or
push
cmp
push
movsb
mov
test
stos
movsl
imul
sbb
and
jg
cmp
jbe
xlat
imul
xor
xor
cmpsb
cli
lods
inc
dec
test
rorl
hlt
dec
test
stos
xorl
xchg
dec
inc
rcl
add
out
scas
push
xchg
rclb
inc
xor
cli
test
pop
dec
push
push
clc
mov
repnz
aaa
jle
movntps
push
lret
mov
mov
fmuls
add
lcall
mov
aam
faddl
inc
push
int
int3
loopne
icebp
inc
sub
sahf
aad
xchg
vmovlps
xorl
xor
in
fistpl
cmp
fidivl
enter
fucom
movsb
repz
aad
adc
mov
cmp
pop
fidivrl
int3
add
js
popa
fwait
test
ja
in
jl
ss
leave
lret
sub
idiv
inc
stos
dec
mov
mov
push
lcall
gs
jp
stos
imul
xor
cli
lods
test
or
fadds
cwtl
push
push
jle
cmp
and
sbbl
in
jecxz
xor
inc
mov
xor
xchg
sbb
sub
rcr
push
inc
add
inc
add
mov
lret
jo
dec
addl
cmp
stos
daa
mov
or
mul
imul
jle
jno
insl
dec
add
dec
xor
pop
movsl
mov
jno
js
faddp
sub
repnz
outsl
stc
add
cmpl
loopne
into
sub
mov
push
stos
mov
pop
sbb
pop
adc
mov
out
int3
mov
add
das
sbb
aaa
lcall
add
cmpsl
add
sbb
sub
outsb
jo
add
popa
jp
add
mov
sub
add
stos
sub
imul
ljmp
mov
mov
cs
jmp
or
add
xor
jmp
pop
dec
xchg
stos
dec
roll
and
shll
repnz
test
mov
jnp
std
lret
into
fwait
fs
sbb
mov
jle
sahf
cmpsl
mov
imul
cmpsl
add
and
mov
and
les
add
pushf
lret
push
ficoms
das
mov
sbb
in
int3
dec
dec
es
dec
dec
pop
repz
adc
lock
pop
lahf
dec
dec
lds
mov
fnstcw
mov
jo
pop
mov
dec
or
popf
mov
aaa
filds
dec
cltd
push
daa
and
das
movsb
push
out
mov
mov
mov
daa
xor
cld
scas
movsb
lods
sbb
stos
and
jmp
dec
mov
inc
jmp
pop
add
jp
push
cmp
sbb
sbb
jle
iret
in
cmp
ja
aas
dec
cmp
dec
pop
mov
into
xorb
xchg
push
or
lea
sti
adc
mov
push
add
lods
mov
leave
aam
push
and
or
add
or
fsubrs
scas
inc
jbe
in
andb
mov
add
int3
mov
cmpsl
stos
fsubs
mov
aaa
out
cmp
loope
shll
lods
cmp
in
push
push
wbinvd
mov
mov
in
jmp
lea
push
push
mov
mov
lret
es
push
xor
dec
xchg
mov
mov
cs
push
adc
rolb
add
sub
xchg
dec
test
push
data16
out
cmpsl
cmp
sub
push
cld
ljmp
or
fiadds
cmpsl
out
dec
or
mov
cmp
mov
inc
and
dec
daa
mov
rorl
movq
adc
gs
je
jecxz
add
mov
aam
enter
dec
rorl
cmpsl
mov
jmp
movsb
pop
pop
movsb
das
je
jp
loop
mov
negl
jmp
mov
mov
ss
shll
jmp
xchg
dec
and
push
or
cmpsl
pop
jg
pop
add
push
cmpsl
jae
xchg
fwait
sti
mov
jbe
xor
cmpsl
orl
scas
fxch
test
sbb
cld
adc
xlat
add
sbb
inc
jecxz,pt
cmp
mov
test
add
and
jbe
ljmp
sub
xor
cld
mov
cmp
sub
cmp
sbb
add
cmp
xchg
jae
ficompl
in
fildll
xor
fs
and
push
nop
mov
xchg
outsb
repnz
gs
inc
mov
xchg
ret
dec
ret
xor
or
repz
cmpb
test
mov
push
test
push
shrl
sub
das
ljmp
adc
lods
cmp
adc
lea
inc
ljmp
jbe
das
inc
fcompl
pop
shlb
iret
pop
adcl
loop
mov
xchg
fs
pop
sub
ss
jl
push
push
loop
out
dec
adcl
aas
jl
push
in
add
pop
daa
dec
gs
sub
cmpsb
sub
shlb
cmp
lea
xor
subb
and
rorb
mov
daa
inc
xor
pop
xchg
outsl
inc
mov
aas
add
mov
test
rolb
push
loop
rolb
ret
xor
int3
data16
add
sarb
push
out
lods
pop
add
add
pushf
mov
jns
lds
sbb
fbstp
scas
rclb
fstps
cmp
pop
into
pop
add
push
dec
stos
mov
sub
mov
mov
mov
out
xor
adc
cmp
rcll
hlt
sub
push
and
jl
shll
lret
mov
enter
pop
mov
ret
pop
add
lock
inc
in
xor
incl
sub
add
xor
ljmp
and
imul
cmpsl
hlt
push
sub
adc
int3
push
sbb
popa
pusha
fs
pop
flds
or
scas
aas
or
push
jecxz
aaa
aad
sbb
ljmp
sub
mov
mov
mov
and
scas
nop
or
mov
push
lret
jne
push
pop
gs
jmp
lea
imul
rcrl
pop
or
xor
lods
inc
shl
mov
subl
mov
jge
inc
mov
imul
in
aaa
xchg
gs
push
js
lret
and
mov
xor
lock
and
jecxz
test
movsb
or
je
or
add
dec
mov
dec
sub
dec
orl
lcall
pop
push
jle
add
xchg
mov
mov
mov
cmpsb
mov
xor
xor
fsub
add
mov
testb
xchg
arpl
adc
sub
sarb
arpl
stos
mov
dec
bound
aas
inc
mov
mov
imul
xchg
push
push
sub
imul
xor
inc
jecxz
xchg
push
cmp
leave
rol
dec
mov
clc
cmpb
xor
mov
xchg
add
mov
xchg
aas
sub
pushf
repz
in
cmpsl
adc
jl,pt
xchg
jmp
addl
push
je
cmpsb
insl
push
jmp
jg
push
fnstenv
jns
xchg
mov
inc
arpl
imul
dec
mov
addr16
scas
sbb
loop
and
pop
aad
lcall
stc
mov
cmp
dec
push
and
or
and
repz
pop
aaa
push
mov
jb
aam
cld
mov
les
jb
arpl
loop
xchg
sbb
xor
das
mov
inc
cwtl
les
sbb
xor
inc
mov
int
stos
iret
lea
add
sub
fwait
xchg
shll
xchg
lods
push
cmp
rol
stos
pop
movsb
and
mov
ror
push
sbb
push
outsb
xor
outsl
xchg
outsb
xchg
add
stos
in
mov
fwait
aas
ja
cmpsl
push
stos
std
xchg
jbe
repnz
lea
jne
inc
sub
cmp
push
stos
into
scas
popf
xor
inc
imul
popl
mov
adc
rclb
movsb
andl
and
pop
inc
and
inc
dec
orb
xchg
cs
mov
out
nop
push
loop
or
lock
cld
mov
add
lea
std
test
in
and
jo
stos
adc
mov
scas
sbb
inc
mov
push
imul
xor
paddusb
jno
mov
cwtl
popa
insl
jb
lret
fldenv
cmpl
and
push
into
or
leave
sub
into
dec
aas
jnp
mov
ret
fdivl
mov
and
sub
jecxz
loop
sub
dec
sti
add
outsl
mov
repnz
sbb
mov
jne
dec
inc
mov
push
mov
mov
jb
scas
clc
push
lahf
jb
repnz
and
test
shlb
cld
jmp
into
pop
xchg
je
mov
popa
int3
inc
push
xor
sub
in
mov
addb
sbb
shll
push
sahf
sbb
cmp
mov
xorb
mov
movsl
sub
loop
xchg
xchg
mov
mov
push
mov
insl
mov
dec
flds
test
lods
je
in
bound
fs
or
leave
mov
das
faddl
faddp
icebp
xchg
jae
in
shrl
xchg
or
adc
push
imul
jg
shlb
add
ret
test
push
push
out
mov
out
xchg
inc
fndisi(8087
adcl
pushf
lcall
jmp
cmp
subl
jmp
into
xchg
divl
andl
xor
push
sti
jo
popf
jae
sahf
mov
jge
mov
aam
xchg
shll
int3
sub
scas
mov
ss
mov
or
pop
or
add
dec
pop
jo
cld
xor
ret
add
loopne
cmp
repz
sbb
dec
roll
add
fwait
lea
lods
mov
andb
push
push
in
push
rcr
add
and
fwait
rorl
dec
cmp
sub
std
iret
call
or
inc
test
or
fisubrs
sub
stos
es
cmc
add
jae
mov
shll
lret
mov
dec
xchg
jmp
jecxz
lret
lock
mov
mov
das
xor
dec
incb
outsl
cmpsl
jnp
or
xchg
popa
mov
mov
jecxz
mov
cli
es
jmp
les
mov
jmp
fs
sub
dec
push
push
or
and
pop
scas
fisttps
add
xchg
sahf
mov
les
add
push
mov
into
outsl
shrb
push
neg
pop
inc
shll
push
pop
mov
mov
fildl
adc
pop
cld
int3
movsl
daa
dec
or
xor
arpl
push
sar
cs
faddp
into
pop
bnd
jmp
rcl
mov
mov
or
push
dec
fs
or
fildl
rolb
sub
jno
jecxz
adc
jmp
jno
dec
dec
cltd
inc
cmp
cmp
pop
icebp
pop
cwtl
stos
stos
xchg
jnp
cmp
cmp
inc
das
and
popa
or
out
mov
jnp
leave
sub
inc
xor
dec
push
add
sahf
cmp
in
insl
inc
rol
sahf
jb
std
divl
stos
das
add
push
fisttpl
in
push
cmp
sti
push
adc
mov
add
fisttpll
js
bound
sbb
cmp
mov
outsl
push
cmp
mov
in
mov
imul
mov
mov
mov
addr16
lock
mov
fists
mov
xor
mov
sbb
adc
push
dec
push
ja
mov
adc
test
add
mov
lret
bound
lock
mov
pushf
pop
ss
xor
mov
push
bnd
out
or
pop
adc
andl
inc
andb
push
in
xor
or
mov
jnp
inc
dec
or
and
scas
movl
jns
test
xchg
cltd
lds
movsb
popa
hlt
testl
fwait
cmpsl
out
fnsave
inc
pop
xchg
das
mov
mov
xor
cmc
sub
out
xchg
les
add
in
inc
xchg
sti
jmp
lea
sbb
or
mov
in
jbe
pop
loope
or
jg
pop
in
jg
loop
xor
inc
aas
jo
sarb
iret
push
rcrl
mov
fs
mov
or
xor
shll
lods
hlt
scas
xor
push
shlb
adcb
mov
and
nop
ror
xorl
ret
mov
dec
inc
push
add
repnz
and
mov
sbb
adc
xorb
jnp
clc
sub
or
fwait
aas
mov
in
push
pop
dec
mov
gs
dec
divb
push
lahf
movsl
inc
push
cmpsl
rcrl
lret
and
movsl
mov
dec
pop
scas
inc
or
mov
jnp
ss
loope
xorb
mov
repnz
pop
adc
jno
jecxz
dec
inc
pop
sub
sbb
mov
jne
pop
push
je
jecxz
sbb
in
sbb
jg
ret
popf
xor
in
add
enter
addl
popa
aam
movsb
jle
xor
mov
xchg
mov
fisttpll
nop
mov
subl
mov
fxtract
cmpsl
pop
xor
lret
mov
cltd
loopne,pn
inc
dec
xchg
cld
mov
pop
rorl
loop
xchg
mov
mov
in
fsubr
or
jo
pop
roll
aaa
scas
adc
repz
xchg
cs
mov
push
sbbl
sub
mov
icebp
je
enter
iret
orb
mov
xchg
xor
mov
push
cmpsl
and
dec
xchg
movsb
pusha
jmp
push
sbbl
adc
xor
orl
out
xchg
in
cmpsb
xor
add
insl
daa
or
jmp
in
mov
nop
pop
stc
mov
popf
fmull
adc
aaa
in
jmp
pop
int
push
outsl
sub
call
and
push
mov
test
lret
lret
pop
cmp
push
out
out
in
stos
outsl
je
sbb
int
outsl
mov
jbe
scas
jg
lret
dec
mov
mov
fs
mov
mov
aas
mov
mov
das
ljmp
cmp
xor
outsl
mov
mov
lods
outsl
aaa
lcall
xlat
mov
push
cmp
sbb
add
testb
cmpsl
shlb
mov
mov
aam
bound
stos
lret
and
add
sbb
mov
fbstp
loop
std
cwtl
jbe
jecxz
popf
addr16
push
dec
mov
cmp
rol
adc
lret
and
cld
mul
jle
ret
push
rorb
pop
push
mov
mov
add
sub
ljmp
sbb
test
cmpsl
pop
add
sub
out
add
add
loopne
mov
push
lds
addr16
and
enter
mov
add
push
stos
mov
push
adcl
ljmp
mov
xchg
into
mov
das
dec
mov
divl
es
jmp
testb
mov
mov
outsl
xchg
mov
jmp
mov
lret
jo
mov
cs
xorl
inc
dec
movb
scas
repz
and
movsb
lock
andb
pop
enter
jecxz
fidivs
xchg
loop
stos
dec
xchg
push
xchg
out
add
jg
mov
lret
xchg
and
enter
xchg
movsl
fdivrl
push
cltd
lods
repnz
movsb
cmpsl
cmpsl
cmc
mov
sub
mov
addl
mov
imul
movsb
add
stos
shrl
and
cmp
je
push
xor
pop
inc
sbb
roll
or
in
mov
outsl
mov
inc
ret
fucomp
mov
jbe
addb
xor
dec
mov
sub
mov
pushf
outsl
aam
mov
adc
lret
jmp
xchg
mov
sub
xor
jns
lret
das
sbb
mov
xchg
stc
clc
gs
mov
popf
addb
push
add
sahf
sub
add
cs
sbb
aaa
push
mov
pop
loop
inc
sbb
std
loope
sarb
daa
cwtl
sub
cmpsl
popa
jne
lret
xchg
mov
push
or
and
or
fcomps
jno
call
std
or
add
xchg
jb
dec
mov
inc
and
xor
ret
sub
or
add
push
xchg
aaa
pop
movaps
and
cmpsl
sbb
cmpsb
pop
sahf
jp
mov
sbb
sub
shrl
inc
fwait
push
mov
mov
mov
xchg
loope
mov
xchg
and
sbb
clc
add
insl
and
xchg
cmpsl
out
or
mov
jbe
shll
in
scas
sub
adc
push
cmc
sbbl
jbe
push
cmpsb
xchg
mov
and
sub
dec
cmpsb
jo
orl
jns
repz
dec
cs
loop
mov
movsb
cmp
or
inc
add
mov
mov
outsb
cmp
fs
jg
jb
xor
pop
jns
insl
cmp
xchg
cld
addr16
adcl
push
push
sub
movsl
cmp
mov
inc
mov
subb
sub
add
add
xor
cmp
jp
and
clc
pop
or
mov
push
inc
mov
in
and
adc
shlb
mov
mov
aam
cltd
bswap
pop
movsl
cld
ss
mov
testl
enter
popa
sub
mov
aad
or
push
add
xor
je
mov
mov
adc
mov
or
mov
xchg
xchg
icebp
dec
and
add
or
insb
scas
roll
testl
out
jno
mov
int3
cmp
and
jns
sahf
inc
lret
push
xorb
mov
add
lods
cmpsl
pop
xor
xchg
pop
mov
nop
or
sbb
and
int
add
mov
inc
xlat
mov
dec
cmpsb
add
popf
fsub
push
scas
sti
stos
outsl
mov
pop
jb
scas
shr
jg
mov
pushf
cmp
mov
xchg
aam
ret
add
orb
lods
aad
or
and
mov
repnz
push
test
xchg
mov
mov
push
jno
es
loop
mov
mov
mov
add
xchg
inc
sbb
cltd
xchg
pop
push
dec
push
mov
dec
adc
push
or
cmpsl
mov
lret
and
add
push
sbbl
push
and
jne
je
fadd
cmpl
lds
jecxz
or
mov
imul
xor
mov
dec
pop
lahf
adc
mov
xorl
mov
xchg
repz
fildl
mov
mov
push
int
jno
cmp
das
mov
adc
fiadds
add
xlat
insb
rclb
cmp
in
inc
pop
shll
push
xchg
es
pushf
rorl
inc
shr
sub
mov
out
fstps
insl
xchg
rorb
jecxz
jno
bnd
scas
pushf
stos
mov
in
mov
inc
sub
or
repz
sahf
lcall
mov
stos
mov
xlat
adc
mov
sbb
shlb
inc
aam
faddl
mov
mov
mov
lahf
pop
jne
insl
push
push
arpl
fildl
and
sbb
pop
aad
stos
inc
xorb
bound
add
arpl
and
cli
and
cld
roll
cmp
out
xor
ret
add
xchg
aas
das
test
ret
dec
arpl
aaa
pusha
sub
arpl
stc
popa
outsb
jl
outsl
gs
repnz
push
mov
loopne
push
xor
add
aam
push
cmp
mov
das
das
mov
aad
mov
addb
hlt
add
and
mov
adc
es
scas
frstor
lock
mov
xor
loop
pushl
mov
mov
rcrb
mov
lret
mov
push
movsb
repz
fimuls
fisubl
lea
sub
mov
movsl
ret
dec
mov
sub
out
mov
mov
mov
push
je
xchg
mov
sub
mov
adc
jl
shrl
insb
and
xchg
mov
cmpsl
ret
lods
mov
push
test
cld
out
jle
addb
imulb
fsubs
cmp
xchg
lahf
sub
push
and
es
js
pop
sub
imul
mov
inc
mov
inc
orb
imul
push
sub
cmpsb
pop
and
out
daa
cmp
test
int3
aaa
push
leave
and
and
jmp
sahf
arpl
mov
inc
rolb
rol
imul
sbb
aas
cld
xor
inc
push
xor
mov
outsl
lret
mov
jb
adc
test
jns
rcll
cmpsl
push
cmpsl
mov
andl
mov
out
mov
add
sbb
xor
mov
pop
sbb
mov
es
mov
movnti
or
je
mov
mov
mov
sbb
shll
cmp
dec
and
lods
loopne
shr
sti
add
ret
pop
push
jne
lods
andb
mov
or
or
insb
mov
out
das
mov
pop
xchg
jecxz
sub
sbb
andl
les
mov
xchg
cmp
mov
xchg
and
and
lods
fsubp
mov
push
jl
lahf
mov
mov
clc
lret
jmp
loop
subl
jbe
sub
dec
scas
popa
insl
mov
mov
rcr
loopne
and
int3
rorl
sahf
cvtps2pi
stos
cltd
sbb
inc
std
cs
or
or
and
ret
daa
cmp
dec
xor
repz
push
lcall
push
dec
sbb
cld
jge
mov
jecxz
iret
mov
sub
xor
iret
or
and
and
popf
inc
and
and
xchg
insb
jecxz
rcrl
sarb
lock
mov
orb
or
mov
lret
mov
gs
inc
cmpsl
jg
mov
mov
scas
or
xor
out
rep
in
mov
add
lret
fadd
add
out
add
cltd
sbb
mov
and
or
mulb
cld
add
outsl
or
pop
loopne
mov
add
push
inc
sbbl
inc
je
mov
xor
shrb
andb
int
pop
ret
dec
gs
test
mov
mov
xchg
mov
pop
mov
xchg
xchg
or
cwtl
in
clc
jmp
movsb
rdtsc
into
mov
loop
shlb
andl
cld
cmp
push
rolb
sub
dec
fisubrl
orb
cli
sub
je
mov
iret
or
rcrl
sti
xor
lea
mov
sbb
cmc
and
bound
lods
inc
and
mov
rolb
pop
lods
and
int3
sti
pop
inc
fincstp
cmp
divb
mov
call
pop
loopne
scas
push
fdivrs
jecxz
lcall
sub
lret
mov
pushf
bound
adc
or
test
cli
pop
push
das
xor
cld
outsb
push
movsl
decb
and
mov
movsl
push
xor
xchg
ret
fidivs
clc
push
or
adc
loop
jle
pop
rcll
fcomps
testl
mov
dec
cmp
arpl
ljmp
jle
in
lock
cmp
mov
lea
adc
cmp
pop
dec
out
mov
adc
sbb
mov
dec
jnp
inc
int
pop
jecxz
or
mov
jmp
leave
stos
lret
in
scas
cmp
push
dec
outsl
out
cs
aaa
addr16
add
sub
jecxz,pn
dec
sub
pop
dec
mov
ljmp
das
lret
xlat
mov
pop
lods
sub
lds
xor
inc
arpl
mov
jmp
ja
addr16
fst
repz
mov
mov
andb
data16
push
pop
add
mov
jne
mov
xchg
mov
jp
mov
and
and
adc
addb
xchg
push
dec
mov
iret
mov
ljmp
cmp
mov
adc
sti
push
and
shrl
leave
insl
jb
mov
mov
mov
es
and
or
adc
test
lods
cltd
mov
add
cmp
ss
punpckhbw
push
or
or
repz
push
lcall
mov
push
push
aad
or
cli
cmp
rcl
add
das
nop
fs
insl
out
fs
data16
int3
int3
jecxz
xchg
pushf
es
add
jmp
in
lret
dec
jnp
or
into
cmp
neg
xor
mov
in
and
mov
adc
cmpsl
hlt
pushf
push
xor
mov
add
mov
add
lea
andb
dec
ljmp
mov
pushf
xchg
dec
mov
mov
call
mov
je
adc
pop
fmuls
add
ds
mov
in
icebp
push
repz
and
sub
jg
mov
sub
aaa
mov
lea
mov
mov
xchg
push
and
sub
cmp
cmpsl
das
sarl
jp
push
pop
fnstenv
test
ds
cmp
cmp
adc
lret
movsb
cmpsl
cmp
and
dec
gs
cmpsb
outsb
mov
lcall
imul
push
mov
or
or
dec
shlb
jecxz
mov
sbb
ds
les
sti
lcall
mov
cmp
sbb
cmp
mov
fisubrs
mov
jo,pn
ret
and
mov
xchg
mov
sub
sub
testl
xor
or
and
ss
dec
repnz
in
sbb
imul
xchg
into
decl
dec
ret
je
and
out
fadd
xor
ret
mov
mov
xor
arpl
movsl
bound
loopne
mov
and
orb
mov
push
jae
orb
imul
xor
inc
sub
addb
roll
add
add
pop
add
push
sbb
insb
cmp
xchg
loopne
das
mov
and
mov
mov
nop
xchg
fimuls
cmpsb
testl
xor
dec
push
aad
push
clc
xor
popa
and
dec
loop
bound
rorl
inc
aas
jno
and
mov
add
dec
and
and
mov
jnp
sub
cli
aas
lds
inc
mov
adc
jmp
mov
mov
ds
imulb
lods
scas
jecxz
mov
xor
push
mov
adc
xchg
add
or
and
dec
cltd
cmpsb
cmp
test
ret
jne
push
pushf
lds
pop
lret
or
in
xor
jecxz
out
cld
or
xor
adc
mov
dec
movsl
iret
push
das
mov
adc
mov
add
mov
sarb
scas
stos
mov
xchg
and
ret
adc
movsl
and
mov
adc
aaa
push
jnp
sbb
shrl
or
inc
jecxz
inc
in
js
fld
loopne
fldenv
and
lret
scas
sbbl
dec
das
scas
cld
sarb
mov
add
lret
mov
in
stos
mov
or
adc
fcom
sbbb
xchg
pop
jbe
stos
leave
outsl
mov
add
outsb
int3
cs
cmpsl
mov
adc
cld
add
call
mov
adc
repz
flds
aam
repz
or
xor
movsb
add
mov
lahf
xchg
mov
xchg
push
or
jb
mov
popa
or
adc
loop
mov
push
nop
stos
out
mov
das
mov
repz
adc
dec
lret
mov
sbb
in
mov
push
mov
imull
pop
hlt
jg
pop
mov
cmp
roll
add
lcall
adc
das
jmp
test
fwait
les
mov
add
popa
ljmp
hlt
int
movsb
out
cli
rolb
repnz
es
icebp
xchg
xorl
sbb
mov
dec
and
push
or
aam
or
lock
ret
jnp
movsb
or
jecxz
push
and
pusha
add
pusha
mov
sbb
loope
and
shrd
sbb
repz
testl
add
xchg
dec
mov
push
adc
add
in
mov
add
cmpsb
add
push
jo
xor
fiadds
or
je
fwait
ret
xorb
ret
mov
push
and
into
orl
insl
bound
push
bswap
loop
pop
mov
les
mov
mov
outsb
mov
mov
pusha
mov
sarl
and
dec
rolb
sub
mov
mov
inc
lea
and
xor
cmpsb
inc
fs
sbb
int
outsb
jnp
push
stc
push
sub
mov
jg
fidivrl
ljmp
dec
loop
imull
fisttpll
xchg
add
fldl
mov
push
mov
rcl
insl
out
fadd
orl
cltd
pushl
cmp
jmp
fsts
adc
loopne
nop
outsl
or
xchg
pop
aas
mov
inc
mov
shlb
rol
xchg
movsl
mov
mov
add
jmp
cmc
inc
inc
pop
mov
mov
pop
test
add
es
pushf
ds
in
and
inc
scas
sub
jmp
les
fstps
push
mov
ret
cli
mov
es
ljmp
mov
mov
xor
inc
add
mov
jne
xchg
add
cmpsl
aaa
push
ljmp
idivb
push
loopne
fwait
sbb
neg
aad
xchg
ljmp
lods
add
sub
xchg
adc
cmp
add
outsb
add
pop
daa
out
movsb
aas
mov
jmp
movsb
stos
sarb
in
ret
shll
mov
mov
xor
out
and
xchg
push
rcrl
add
lret
jg
stos
jl
or
xorl
push
add
sub
jb
frstpm(287
cmp
push
hlt
popl
inc
xor
add
stc
out
xchg
and
sti
repnz
js
mov
jo
xor
sub
mov
inc
pop
add
push
imul
aam
pop
xlat
pop
movsl
lock
mov
inc
jg
enter
jb
sti
adc
mov
bound
int
cmpsb
jo
into
test
lods
sub
inc
mov
pushf
mov
jae
inc
cld
in
push
cmpsb
jge
xchg
sub
and
pop
adc
jns
jg
fidivl
addr16
mov
adc
pop
cltd
xor
xorb
push
and
sub
loopne
mov
add
arpl
lods
pop
inc
lea
push
repz
push
sbb
sub
shlb
dec
hlt
xchg
mov
stos
inc
sub
outsl
xchg
clc
rorb
or
fsubr
pushf
or
je
add
movsl
rol
cmp
add
scas
jb
pop
and
sti
xchg
fdivp
xor
cmp
jp
mov
movsl
pop
leave
cmp
rcl
subb
mov
push
push
mov
faddl
push
fstl
outsl
add
iret
fsubl
stos
mov
fstpt
adc
mov
sbb
adc
jbe
imul
mov
ret
mov
xor
cli
scas
bound
rcl
mov
mov
xor
mov
bound
mov
out
pushf
ret
lret
in
push
js
and
or
or
mov
mov
add
je
or
add
aaa
push
xchg
cmp
enter
in
pusha
cmc
cld
bound
cmp
inc
repnz
and
add
lcall
sbb
xor
testl
je
mov
je
repnz
mov
aam
faddl
aam
aam
jb
sti
push
inc
insl
cmp
xchg
mov
pusha
xchg
decl
lret
roll
push
sub
and
push
mull
das
int
gs
in
repz
in
out
inc
or
add
or
repz
inc
mov
xorb
inc
adc
mov
xor
xchg
stos
or
in
push
mov
cs
xor
mov
mov
dec
in
add
ret
imul
xchg
adc
dec
loop
hlt
mov
aaa
jae
aam
lods
push
cli
dec
shl
fdivl
cmc
and
and
jmp
cmpsl
ljmp
pop
icebp
mov
pop
cmpsl
pop
cmpsl
inc
push
sarb
adc
mov
and
mov
xchg
pop
push
outsb
mov
mov
inc
mov
xchg
je
int
dec
data16
dec
mov
pop
inc
fisttpl
aaa
and
sar
push
dec
pop
jnp
add
or
enter
fdivrs
pop
cmp
in
add
jmp
and
mov
in
jnp
pop
pop
ljmp
mov
push
daa
mov
inc
shl
addr16
adcl
adc
or
and
mov
fwait
in
xor
pop
push
sbb
jmp
sarl
dec
and
icebp
das
in
sbb
or
sub
pushf
xchg
mov
add
pop
addr16
in
mov
popa
add
and
cmpb
adc
rcrl
sbb
fcoml
jecxz
fcompl
add
out
mov
lret
mov
push
int
mov
addb
adcl
sbb
lock
or
push
mov
mov
adc
mov
jno
lock
mov
test
adc
inc
sbb
ret
subl
pop
cmpb
xchg
sbb
inc
jo
movsb
gs
movsb
jbe
inc
xor
movsb
cmpb
or
lods
mov
adcb
xchg
lret
cmpsb
jae
pop
call
dec
inc
dec
loop
fucomi
mov
dec
mov
dec
cltd
sbb
sub
mov
push
stos
xchg
xchg
pushl
imul
cmc
es
push
mov
loop
out
or
outsl
out
rcl
dec
leave
insl
mov
in
in
mov
mov
inc
in
repz
mov
dec
aaa
in
test
movsl
shrb
push
mov
or
add
lahf
jne
jmp
mov
je
out
pop
and
pop
fs
jecxz
sarb
push
mov
movsb
aas
adc
cmc
mov
jns
jne
aaa
out
fs
fdivp
rorb
mov
in
xchg
or
jae
sbb
lret
mov
loop
pusha
cmpb
stos
arpl
pop
rcll
sub
lcall
xchg
push
cltd
cmp
or
fsubr
lea
add
jb
imul
pop
sub
out
sbbb
idivl
cltd
push
push
repnz
mov
push
xchg
je
dec
mov
movsb
ror
mov
mov
mov
xor
adc
lret
stos
mov
aas
mov
inc
inc
dec
aaa
add
adc
std
subl
fwait
add
mov
push
xchg
out
inc
flds
lea
out
cmpsl
mov
jmp
xor
hlt
loope
addr16
fsubl
orb
sbb
imul
xor
jae
pop
outsl
mov
xchg
push
push
outsl
insb
xor
and
jl,pt
aaa
mov
ror
or
fdiv
push
push
js
das
mov
mov
xchg
add
cmpsl
or
push
fisubrs
adc
sarl
cmpsl
dec
mov
call
add
inc
add
and
cmpsl
add
jb
jmp
es
jno
cmpl
std
adc
push
mov
cld
xchg
aam
xor
popa
flds
aas
xorb
popf
out
cli
in
cmpsb
mov
adc
in
jp
cmp
divb
vmread
push
and
cmp
inc
fwait
jp
xor
ljmp
mov
sub
jno
mov
cmpsl
mov
ret
loope
add
or
lds
push
adc
test
push
push
daa
cmpsl
adc
imul
sbb
les
es
and
sub
cs
mov
mov
pop
mov
push
dec
mov
push
je
mov
ret
mov
outsl
int3
push
mov
push
ds
push
adc
orb
fcompl
mov
push
ja
dec
repz
out
test
aam
iret
mov
int
aam
inc
lret
shl
scas
test
adc
xor
pop
and
repz
xor
in
add
sub
loop
arpl
sub
mov
leave
scas
xchg
adc
jne
mov
mov
fdivs
mov
aaa
jb,pn
and
fildll
mov
adc
sub
loope
xchg
mov
ljmp
addl
add
or
loope
mov
movsl
mov
and
in
icebp
jno
sbb
jle
and
repz
fstpl
cmp
mov
jge
aaa
out
repnz
ret
xor
push
xchg
mov
ss
fnstsw
clc
jno
dec
and
daa
inc
std
xchg
test
stc
add
cmp
out
sub
jb
mov
insb
testb
jg
arpl
call
mov
xor
mov
bound
push
jge
mov
xchg
adc
insl
add
inc
mov
mov
adc
aam
rep
aam
cli
mov
mov
xchg
cmc
dec
or
inc
mov
and
iret
cmpsl
fldl
jns
pop
inc
out
xchg
int3
jbe
jecxz
and
and
mov
push
inc
push
sti
mov
popf
cld
adc
adc
xor
lret
add
mov
jnp
cmpsl
dec
inc
xlat
imul
in
mov
bound
mov
lret
xor
mov
add
sbb
ja
leave
sub
fdivl
mov
shlb
mov
cmp
adc
inc
pop
inc
push
jmp
shlb
jae
adc
daa
dec
mov
js
add
jns
add
xor
addl
push
push
jbe
jne
bound
sahf
hlt
sub
dec
mov
test
test
dec
mov
sbb
test
or
cmpsb
pop
push
icebp
mov
or
xor
cmp
leave
xchg
pop
sti
mov
xor
mov
call
enter
imul
mov
out
das
push
and
xchg
les
in
js
cmp
or
mov
lcall
shrl
mov
aam
mov
lea
iret
cli
pop
ret
fadds
pop
scas
mov
rcll
mov
cmpsl
fdiv
lods
jae
ret
fdivl
xor
xor
and
out
popa
inc
in
lahf
mov
das
pop
and
cmp
stos
mov
mov
sti
hlt
push
xor
mov
add
lahf
xchg
cmp
sti
daa
shll
mov
mov
fidivrl
in
in
push
add
dec
loopne
or
mov
adc
sub
in
jmp
xchg
and
dec
lret
out
inc
filds
dec
mov
cmpsl
iret
ret
ret
nop
sbb
loope
mov
inc
mov
or
mov
push
mov
loop
int
je
je
lcall
hlt
cmp
clc
or
fwait
push
outsl
xchg
push
or
arpl
stos
cmp
jp
rorb
packsswb
jns
xchg
adc
movsl
or
sbb
xor
lock
mov
push
dec
shl
sub
mov
pop
jg
xlat
stc
out
add
addb
sbb
loope
or
scas
cli
loop
dec
shl
inc
aaa
xchg
aam
lahf
mov
and
ret
std
cmp
roll
sbb
jecxz
cli
mov
ds
cli
or
sbb
pop
inc
dec
mov
xlat
fidivrl
inc
popa
pop
in
push
mov
jmp
add
aas
cmpsl
fs
das
daa
xchg
pop
mov
dec
iret
push
xor
in
aas
mov
push
push
ret
lods
mov
les
mov
pushf
mov
adc
stos
scas
dec
adcl
subb
xorl
adc
xor
xorl
xor
mov
enter
outsl
cmp
punpckhdq
fldenv
sbb
in
popf
outsl
lods
pushf
adc
and
std
cld
test
fs
mov
cmpsl
out
cmp
dec
arpl
dec
mov
es
cs
add
mov
add
adc
mov
jae
pop
ss
lds
add
and
aam
mov
push
mov
inc
dec
inc
outsl
jne
mov
je
xchg
cwtl
xchg
lcall
sbb
faddl
xchg
inc
adc
out
jecxz
xchg
sar
sub
and
shll
ljmp
cld
nop
sub
jb
push
mov
aad
cmp
mov
push
push
jbe
push
add
popf
pop
lds
fs
rcrb
flds
mov
pop
cmpsl
sub
in
xchg
daa
cmp
cld
push
mov
flds
cmp
and
test
and
cmpsl
pusha
push
and
and
add
jae
jmp
sahf
enter
pop
mov
mov
mov
mov
xor
ret
sub
sarl
in
out
shrb
lahf
xchg
xorb
or
push
cmp
xorb
mov
addb
aaa
out
addb
ljmp
ds
inc
sbb
pop
hlt
and
sbb
mov
inc
cltd
mov
push
push
push
push
sub
fld
cmpsb
int
cs
ret
and
cld
sbb
or
jmp
mov
xor
aaa
dec
or
sahf
andl
ss
cmp
hlt
or
mov
inc
cmpsl
lds
out
adcl
arpl
movl
je,pn
mov
cld
ror
push
add
push
bound
scas
inc
or
ret
jae
push
enter
fidivs
push
push
xchg
shrb
mov
lcall
mov
lods
xor
into
push
mov
push
xor
adc
jne
fnstcw
iret
push
add
xchg
into
shrl
mov
adc
jg
shrl
ret
lret
sbb
scas
and
pop
fwait
mov
and
fstps
dec
sahf
dec
scas
add
and
test
xlat
push
or
adc
pop
movsl
mov
leave
or
or
cmpsl
das
jns
ss
mov
pop
das
cmp
mov
mov
jle
mov
test
jl
mov
mov
xor
push
pop
mov
adcl
push
pop
shl
add
add
rcll
imul
or
out
push
popf
jb
add
lcall
je
cld
in
sti
dec
aaa
dec
fdivrl
mov
mov
repnz
loope
ljmp
push
or
scas
inc
in
and
push
xor
outsb
mov
mov
jmp
mov
adc
dec
pop
lret
test
insb
xorl
fists
mov
mov
sub
lds
adc
push
adc
sub
mov
inc
jmp
xor
lahf
cmpsl
mov
sbb
push
cmp
xor
jp
cmp
cmpsb
movsb
dec
out
cli
orl
clc
add
or
call
push
lods
dec
jle
mov
int
mov
cmpsl
pop
push
mov
gs
or
push
mov
and
fisttpl
loopne
int3
dec
mov
fcom
jmp
cmp
xor
cli
incb
xor
dec
stos
jge
cmp
iret
mov
inc
mov
into
mov
or
ret
shrl
ja
call
cld
cmpsl
sub
dec
movb
or
cmpsl
push
out
mov
add
mov
outsl
pop
mov
sbb
add
roll
mov
dec
movsb
and
cmpsl
pop
lret
add
sbb
popf
or
stos
movsb
dec
iret
push
ljmp
mov
add
aad
mov
push
test
popf
mov
test
dec
aam
aas
adc
dec
mov
ret
lret
push
mov
mov
and
sub
lea
shll
out
in
and
cs
pop
xchg
stc
xor
addb
loop
push
stos
inc
mov
shlb
cmpsl
xchg
iret
out
dec
scas
test
cltd
out
pushf
xor
rcrl
inc
std
iret
addl
call
adc
in
or
lock
inc
mov
add
mov
ret
sub
in
pushf
lcall
shll
push
sbbb
in
outsl
shll
test
int
pop
roll
out
and
jle
adc
or
outsl
shl
add
sub
mov
pop
xor
loopne
in
push
in
mov
fsubrs
xchg
push
outsl
mov
adc
jbe
pusha
in
pop
dec
roll
push
pop
jecxz
dec
in
scas
in
sub
out
stos
and
mov
popa
cmp
pop
pop
xchg
inc
xchg
push
cmp
mov
lret
rcrl
pop
sbb
ss
sub
cli
add
mov
xchg
pop
inc
xchg
out
decl
sub
xchg
jecxz
in
test
adc
clc
aad
or
push
push
and
scas
ret
mov
aaa
int3
mov
in
repz
cmpl
addl
jbe
int
mov
sub
adc
mov
repz
inc
stos
shl
clc
loope
out
dec
mov
sbb
xor
xchg
push
in
rcll
pop
sub
mov
ret
sbb
lret
iret
out
das
xchg
sti
repnz
iret
bound
jp
arpl
push
les
mov
sub
in
cltd
stos
leave
cltd
mov
das
in
fildl
mov
rorl
and
scas
sbb
mov
lcall
testl
lret
shlb
testl
xor
shlb
pop
push
add
dec
popa
xor
imul
adc
mov
jno
xchg
mov
addl
popf
dec
adc
int3
xchg
in
inc
cli
jl
add
aaa
js
js
mov
push
add
add
sbb
mov
retw
cmp
iret
outsl
jno
mov
filds
ljmp
add
imulb
testb
dec
pop
js
fcmovb
cs
adc
imul
push
outsb
mov
ficoml
mov
popf
and
aaa
movhps
andl
loop
sbb
xor
das
push
xchg
call
loop
mov
es
xchg
jle
nop
adc
decb
fcmove
jo
dec
pop
inc
shrl
mov
out
in
iret
out
xchg
sbb
loope
push
mov
mov
or
movsb
gs
test
fisubl
add
jle
pop
adc
cmp
stos
movsb
add
fnstenv
and
cs
mov
enter
orl
xor
mov
popf
or
mov
mov
ljmp
cmp
mov
icebp
mov
jp
and
out
loopne
stos
scas
dec
or
push
inc
or
pop
inc
icebp
cwtl
aaa
ret
xor
mov
xchg
sbb
dec
jno
lods
into
arpl
loop
mov
invd
pop
push
das
dec
and
cli
xchg
popf
push
dec
cmpsl
jmp
stos
fucom
bnd
cmp
scas
rorl
push
fwait
mov
outsl
sub
mov
aaa
mov
mov
in
pop
movl
outsb
push
mov
push
mov
xchg
xor
fs
pop
sbb
mov
fcompl
je
dec
mov
lret
fdivl
add
lea
mov
add
mov
dec
mov
cld
dec
add
dec
pop
subb
inc
push
mov
or
add
data16
jl
add
nop
dec
and
or
push
test
add
jbe
std
clc
mov
decb
mov
aaa
iret
mov
add
pop
add
fs
data16
add
ret
dec
lods
mov
push
andl
jle
test
jmp
push
ja
sarb
cmc
mov
dec
std
out
aas
ret
mov
jbe
mov
orb
test
cmp
push
xchg
das
in
andb
jecxz
mov
loop
lock
cld
dec
out
lret
gs
mov
inc
xor
and
in
mov
add
adc
lds
out
add
adc
xchg
aad
movsb
mov
nop
dec
popa
das
pop
adc
dec
mov
lods
mov
std
add
test
xor
cld
cltd
lods
mov
sbbl
mov
adc
push
loopne
lock
xlat
sub
aaa
or
cmp
pop
inc
sbb
test
or
mov
rolb
or
mov
add
xchg
add
and
mov
xor
inc
push
call
int3
xor
add
cmp
pop
int
adcl
cmp
push
pop
xor
in
xchg
add
jmp
mov
add
pop
sub
nop
dec
cmp
and
cmpsl
out
fisttpl
loopne
push
push
dec
lcall
popf
cli
mov
mov
mov
push
jecxz
gs
pop
aaa
aaa
aas
mov
add
movl
clc
mov
push
or
and
gs
jp
inc
fs
adc
pop
cld
jbe
aad
hlt
adc
xor
jle
cmp
in
xor
stc
pop
icebp
in
cmpsb
add
cmpsl
enter
das
add
cli
mov
xorl
or
repz
adc
popa
popl
std
or
jnp
and
loop
jbe
jb
cmp
xor
repz
sub
in
int3
add
mov
lods
cmp
and
mov
cmp
add
repnz
adc
loop
ljmp
cmpsl
and
mov
mov
fs
gs
xor
in
je
push
add
pop
adc
and
cs
sub
jmp
sub
les
std
stos
imul
push
das
aas
push
lret
sub
in
stos
fs
mov
mov
fmul
pop
sub
sbb
dec
mov
ljmp
shll
jnp
cmp
pop
jge
jmp
pop
aaa
xchg
inc
out
lock
outsl
push
stos
jecxz
je
movsb
push
dec
xchg
addl
dec
xchg
aas
std
fwait
adcb
xor
cld
test
add
gs
outsb
pop
pusha
mov
movsl
pushf
inc
cltd
push
add
je
je
je
inc
adc
mov
sbb
rolb
jle
dec
cmp
sub
ss
insl
cmpsl
push
ret
dec
popa
mov
add
mov
dec
adcl
sub
lods
mov
pusha
lds
and
lret
sbb
sub
mull
push
in
rorl
push
xchg
insb
xlat
shrl
mov
movsb
je
xchg
insl
int
sbb
add
add
mov
lea
pushf
adc
orb
dec
mov
sub
jp
jae
xchg
xor
arpl
ds
out
je
or
lcall
pushf
lock
bnd
les
mov
fstl
ret
xchg
jle
jb
cmc
pushf
xor
loopne
dec
inc
lret
push
in
sub
jno
add
in
repz
xor
cmp
fs
nop
inc
pop
and
mov
aam
lret
push
leave
lds
cs
sti
mov
add
shrl
xchg
bound
out
mov
in
pop
add
je
imul
xchg
sbb
adc
pop
icebp
mov
in
cld
sbbl
pop
cmc
push
push
loopne
cmpsb
jne
fwait
cs
mov
inc
xchg
ljmp
pushf
and
lds
inc
cmc
setns
mov
push
jle
xor
imulb
sti
shrl
loopne
cmpsl
inc
lret
fdivr
inc
loop
aas
cmp
outsb
subl
push
repz
mov
and
sti
cmp
or
movsb
pusha
addb
mov
mov
pop
push
hlt
dec
xor
jp
dec
dec
dec
aad
or
pop
inc
ljmp
mov
dec
das
lock
adc
ss
mov
outsb
pop
jecxz
dec
push
orb
mull
adc
or
jmp
clc
mov
mov
add
jl
xor
add
mov
ret
stos
xor
xchg
mov
dec
push
cmp
in
dec
stos
rorb
cltd
test
flds
mov
scas
repnz
adc
mov
push
insl
mov
mov
inc
or
xor
xor
rorb
divb
loopne
mov
mov
outsb
push
ss
rolb
xchg
jae
sbb
add
xor
inc
in
int3
out
mov
lret
arpl
add
jmp
data16
movsb
movsl
shr
add
lds
jl
ss
out
rorl
inc
popl
pop
scas
cmp
or
orl
mov
mov
aaa
xorb
cmp
fidivs
xchg
out
sti
int
mul
call
les
cmpsl
in
push
mov
dec
stos
sub
push
das
jbe
popf
clc
xlat
into
xchg
mul
pop
roll
ret
lods
mov
mov
and
mov
or
subb
inc
mov
iret
push
into
sbb
mov
dec
mov
mov
aaa
push
xor
fs
xor
push
add
out
mov
mov
inc
push
ret
sbb
aas
popf
dec
gs
leave
xchg
imul
inc
mov
fcoml
js
xor
xor
ljmp
cmpsl
push
dec
xchg
dec
cmc
sbb
push
mov
dec
jno
cmp
repnz
jnp
adc
mov
pushf
sub
movsl
es
ljmp
adc
fbstp
jmp
mov
mov
shrl
adc
push
cmpsb
mov
pop
scas
repnz
mov
jl
push
ljmp
movsl
ds
mov
push
lcall
les
mov
ret
jmp
shrl
stc
jae
ja
mov
mov
inc
mov
mov
fwait
sub
fs
ljmp
data16
cmp
aam
pushf
jne
pushf
pop
jmp
mov
dec
stos
movsl
pop
add
fwait
pushf
popa
mov
mov
lods
jmp
push
add
jnp
outsb
or
xor
sub
pop
push
add
add
movsb
push
addl
mov
or
aaa
ljmp
stc
mov
mov
xchg
in
inc
add
imul
adc
shlb
jo
lods
repz
or
icebp
xor
cmpsb
outsl
popf
stos
mov
testl
sbb
leave
dec
ljmp
dec
mov
cmp
push
in
jecxz
or
dec
cmpsl
mov
xor
mov
jae
add
mov
sub
pop
dec
out
inc
mov
jle
fwait
add
mov
mov
cmpsl
testb
dec
popf
inc
mov
dec
jg
hlt
orl
xor
ds
lock
enter
mov
dec
inc
or
or
mov
bound
xchg
push
add
outsb
inc
or
cmc
push
aaa
mov
sub
mov
or
add
mov
push
dec
ret
mov
sub
and
sahf
sbbb
add
mov
imul
or
jg
or
cmp
sti
adcb
repz
pop
mov
sub
mov
flds
or
in
in
mov
cmpsl
fimull
and
inc
lds
in
sbb
xor
and
sub
dec
mov
inc
cmpsl
ljmp
jne
inc
push
or
mov
stos
sub
cmpsl
xchg
mov
lret
cmpsl
mov
std
dec
dec
inc
xor
or
mov
sub
xor
cmpsb
add
int3
mov
jns
and
stos
jno
fs
outsl
or
mov
out
mov
movsb
adc
in
adc
cmp
cmp
sub
dec
mov
sub
pop
inc
cmp
in
push
add
inc
jge
fwait
mov
aas
std
xor
testb
or
sub
loopne
into
das
sub
sbb
cwtl
adc
cltd
xchg
cmp
inc
loope
push
fs
repnz
mov
test
pushf
lret
or
shlb
push
push
push
and
dec
aad
mov
push
aam
iret
mov
push
push
xor
roll
imul
xorb
lods
rclb
dec
push
aam
sbb
outsl
mov
xor
andb
in
int3
bound
dec
testl
fs
mov
jnp
push
int3
push
sbbb
loope
mov
dec
mov
mov
pop
sub
mov
fnstcw
add
xchg
mov
rorl
orb
mov
mov
dec
js
mov
lret
and
in
ss
ret
dec
in
adc
xchg
shlb
fcomps
cmp
shrl
dec
aas
mov
add
in
in
mov
and
shl
pop
adcl
pop
shr
lods
cmp
mov
dec
push
xchg
mov
mov
int3
mov
xor
dec
push
pop
mov
sbb
mov
out
jp
pop
in
add
addr16
mov
or
lods
aaa
or
les
dec
mov
subb
xchg
lret
mov
dec
sub
lahf
push
fwait
out
pop
outsl
adc
jle
data16
ror
and
pusha
rcl
vaddsubps
xchg
xor
cmpsl
sub
and
fwait
or
push
push
adc
pop
adc
int
imul
xchg
dec
mov
sahf
dec
flds
ret
rsqrtps
mov
iret
jl
repz
sub
movsl
aaa
adc
cltd
test
imul
mov
xor
aaa
decb
lea
xor
jns
dec
jecxz
loop
call
sbb
shlb
gs
cmpsl
mov
adc
mov
lods
and
mov
add
stos
pop
stos
add
cwtl
mov
cld
loopne
pop
cmp
push
mov
xor
or
xchg
mulb
jmp
scas
or
in
xor
scas
xor
sbb
pop
push
imul
addb
popf
jecxz
movsb
enter
inc
or
movsl
xor
mov
or
ret
aam
lret
mov
lea
jmp
clc
sahf
push
mov
push
xorl
ret
loope
add
mov
add
xchg
sti
push
icebp
mov
adc
xchg
into
orb
add
in
testb
shrb
push
inc
gs
and
or
aaa
movsb
loop
and
dec
lahf
mov
mov
cmpsl
das
mov
stos
jmp
or
hlt
shlb
mov
mov
mov
lea
es
lahf
mov
push
rorl
mov
dec
ss
out
sub
test
dec
dec
test
cmp
jae
cwtl
cld
das
ret
xlat
jbe
and
jo
xlat
adc
shlb
outsl
or
cwtl
xchg
mov
mov
inc
jo
jno
or
sbb
inc
xlat
or
outsl
cld
push
mov
push
test
xor
add
mov
lret
mov
jmp
cli
out
out
mov
xchg
mov
xchg
sub
adc
das
arpl
in
cld
in
les
add
or
lret
sbb
cmp
inc
je
lds
xchg
lahf
clc
xor
clc
test
movsl
call
pop
push
adc
mov
xor
lret
arpl
xor
aaa
imul
into
pop
jl
sbb
dec
mov
or
les
add
fldenv
addr16
imul
nop
sbb
pop
mov
dec
sub
mov
sbb
bound
add
mov
lret
cs
out
js
sbb
mov
add
and
pop
adc
imul
and
pop
xchg
or
faddl
orl
dec
mov
jne
push
push
mull
and
scas
in
cltd
and
mov
jle
das
xor
or
mov
sbb
sar
icebp
movsb
lods
dec
fsubl
dec
pop
lods
mov
leave
aaa
adc
cmpsl
xchg
xchg
pushf
out
mov
adc
scas
add
sbb
cld
dec
ljmp
mov
add
mov
dec
mov
lods
mov
shrb
mov
cmp
pop
fadds
scas
jnp
int
jb
mov
or
ficomps
and
mov
insb
scas
pop
cltd
clc
ds
ror
jge
xor
jecxz
movsb
imul
mov
sub
inc
out
jmp
push
pop
inc
shrb
cmp
sbb
push
jg
add
mov
jecxz
movsb
setae
mov
pop
xor
in
push
test
and
sti
push
mov
sbb
inc
ja
adc
lock
cmp
clc
and
xchg
ret
pop
xchg
shl
int3
or
fcmovnu
imul
aam
test
mov
mov
or
data16
push
addr16
xlat
pop
rorb
enter
pop
lods
cmp
jg
mov
push
cmovle
sbb
dec
imulb
hlt
add
pop
mov
or
add
mov
shll
xchg
fistps
xor
rol
sbb
dec
je
pop
aam
xchg
add
add
inc
fisttpll
cmpsl
arpl
push
shrl
sbb
jmp
jno
repz
jecxz
shll
in
out
cli
add
movsb
mov
out
mov
sbb
lret
les
xchg
mov
ja
push
subl
jns
xrelease
lock
stos
add
mov
pop
mov
dec
add
lods
or
mov
jns
xor
add
mov
loope
pusha
or
repz
add
ret
scas
sub
pop
sbb
loopne
lods
xchg
mov
and
in
xor
jge
or
insb
out
mov
aas
mov
pop
lret
cld
js
sub
pop
xchg
xchg
gs
cwtl
repnz
inc
dec
mov
fcoml
lcall
jmp
popf
cmp
stos
push
mov
ss
add
sbb
xchg
out
jnp
inc
sub
in
xor
ja
imul
mov
cmp
inc
add
leave
push
mov
loop
insl
movsb
push
repnz
test
repz
scas
incb
push
mov
popf
andb
test
scas
cmpsl
xchg
sub
mov
ljmp
rorb
add
dec
into
and
inc
lcall
int
loope
jmp
std
ljmp
dec
leave
rclb
into
out
sti
xorb
sbb
mov
jnp
or
iret
lds
mov
in
pop
cmp
sidtl
add
mov
add
cmc
inc
cmp
fimull
int
sub
inc
xchg
rcrl
mov
mov
pop
mov
dec
mov
or
sbb
ret
les
movsb
outsb
out
cmp
xchg
int
dec
xchg
ds
jecxz,pt
ss
jp
mov
adc
xor
stos
lods
lret
mov
jb
xchg
jmp
sbb
xlat
or
movsb
cli
push
loope
andb
shrb
mov
inc
subl
mov
lds
jle
or
shrb
dec
sbb
ja
sub
out
cld
shll
out
cmpsl
mov
clc
in
shl
mov
xchg
and
out
push
push
add
stos
ljmp
ficoml
pop
fcomi
push
push
mov
rclb
and
stos
lret
mov
icebp
pop
es
dec
push
xor
lret
aam
loop
lret
sub
rorb
pop
adc
scas
mov
shrl
mov
dec
sbb
scas
pop
add
insb
sti
adc
lods
mov
cmp
out
sbb
dec
mov
fldcw
mov
cs
pop
adc
xor
and
out
and
data16
loope
pushf
push
or
add
jb
int3
push
and
repnz
clc
push
addl
adc
cld
ja
mov
cmpb
dec
incl
rorl
orb
mov
xchg
lods
mov
lods
dec
add
cmp
lret
es
sbb
mov
ljmp
andb
subl
add
dec
jmp
pop
imul
dec
jl
jnp
paddusw
mov
dec
mov
pop
push
js
ljmp
xor
mov
aaa
subl
out
clc
push
add
push
movsl
je
xchg
das
pop
sbb
cmp
pusha
cltd
in
mov
aaa
inc
or
push
lds
test
pusha
mov
inc
repnz
imul
les
cld
daa
pusha
mov
xor
mov
mov
fsubs
jle
addr16
js
outsb
clc
movsb
inc
shlb
cmp
pushf
fs
pop
shll
inc
xchg
fs
mov
or
stos
or
and
pop
repz
cmpsb
xchg
pop
movsb
adc
add
xor
inc
pop
into
int3
and
std
sub
popf
mov
dec
aas
adcb
push
lods
pop
rcrb
add
mov
subl
lahf
nop
mov
cwtl
cld
rdpmc
jl
loop
sahf
test
xchg
das
les
mov
loopne
int3
jae
xor
sub
pop
push
pusha
add
cmpsl
hlt
push
mov
lret
push
xchg
mov
mov
stos
sub
add
imul
loop
mov
xor
cmp
lock
cmp
aaa
cmp
into
scas
cmp
cmp
mov
mov
jmp
and
inc
or
jbe,pt
daa
sbb
clc
imul
cmpsl
add
push
xchg
jg
push
or
shrb
addr16
stos
mov
sub
jne
or
aaa
sbb
popf
rorl
xchg
push
call
inc
xor
stos
cmpsb
jge
lock
xor
or
fwait
mov
js
mov
or
loope
xor
xchg
ds
or
test
and
test
nop
sub
xor
lret
push
ljmp
dec
ja
ficomps
insl
movhps
push
pop
dec
sbb
mov
ljmp
sub
stc
insb
mov
jno
sbb
cmp
push
push
inc
paddq
outsl
mov
popa
aas
inc
into
sub
stos
cmp
and
xchg
imul
xor
mov
inc
mov
mov
jns
lret
mov
mov
insb
leave
or
inc
inc
mov
xor
xor
sub
or
mov
rorb
and
and
add
cmpsl
push
stos
or
and
cmp
aas
or
lret
in
imul
sahf
ret
mov
add
mov
mov
ja
lcall
call
cmpsl
sub
adc
mov
inc
jg
dec
sahf
lret
cli
movsb
fs
popa
out
cmp
outsl
lcall
and
and
fsub
mov
loop
daa
adc
xchg
sub
push
push
adc
aaa
dec
pusha
pop
in
repz
mov
mov
daa
mov
mov
cmpsb
and
stos
stos
mov
stc
jne
test
faddl
push
imul
pushf
cmp
call
in
adc
outsb
inc
add
pusha
decb
mov
loope
push
loop
jbe
sbb
rclb
fisubl
adc
iret
shlb
inc
out
lret
and
bound
pushf
fistpll
dec
xchg
sbb
cmpsb
sbbb
xorl
mov
inc
push
idivb
mov
dec
mov
int3
dec
out
mov
mov
subb
pop
jns
adc
jo
testb
add
lds
pushl
adc
xchg
mov
add
pop
fsubrl
les
cmpsl
int3
lahf
or
mov
inc
push
add
pop
insl
add
shll
cmpsl
and
out
in
xchg
ds
fidivrl
cmpsl
add
add
das
test
mov
adc
push
es
add
cld
insb
mov
xchg
mov
mov
shrl
jmp
inc
add
mov
scas
in
jle
sbb
mov
mov
call
fistpl
cmp
outsb
test
mov
jb
mov
enter
inc
clc
push
push
xchg
lds
stos
add
gs
jmp
sub
lods
mov
stos
fildl
xor
adcl
lret
sbb
je
inc
dec
mov
ds
push
dec
fcompl
movntq
ret
ret
xchg
add
cmp
mov
orl
lret
lret
mov
lods
outsb
or
sbb
or
mov
inc
jl
mov
lcall
or
daa
inc
addb
adc
arpl
dec
add
ja
dec
in
jno
rorl
rolb
movsb
lcall
and
adc
mov
jecxz
popl
out
xchg
fiaddl
cwtl
rorb
push
dec
mov
scas
mov
mov
and
aas
in
in
add
mov
push
ja
jl
push
cmp
scas
or
lods
dec
in
dec
addl
and
out
andb
mov
ret
cmp
xor
dec
pusha
es
xchg
or
sub
add
stos
jbe
sub
por
xchg
add
ljmp
xchg
leave
loop
popf
repnz
adc
orb
in
fildll
lret
cmp
adc
or
inc
movsl
aaa
adc
stos
add
into
mov
or
int3
and
lds
mov
dec
sbb
sub
xor
or
adc
jle
push
mov
mov
loope
lds
mov
fcomip
shll
ja
stc
das
xor
jno
in
xor
outsl
subb
mov
popf
mov
repz
fisttpll
adc
cltd
push
jbe
les
push
shrl
pushf
fidivs
mov
xchg
push
aam
cmpsl
dec
cmp
clc
xor
dec
cmpsb
js
lods
popa
mov
aaa
jo
testb
std
shll
int3
xchg
lret
adc
xor
cmpsl
outsl
pop
sub
js
loop
sub
xchg
mov
adc
orl
leave
mov
insl
sub
mov
pop
sub
popf
jecxz
or
mov
adc
add
es
jns
repnz
jnp
lahf
cld
pop
nop
daa
je
pop
xor
mov
sbb
add
stos
jo
rorl
dec
or
cltd
mov
mov
loopne
aas
sbb
lret
xchg
inc
cmp
jecxz
cmpl
pop
fwait
add
xor
dec
mov
ret
push
mov
mov
aam
jmp
pop
insb
or
stc
adcb
out
pop
cmp
mov
jnp
mov
stos
ret
mov
mov
dec
dec
int
add
mov
inc
das
xchg
pushl
jg
sti
clc
xor
xchg
xor
jmp
repnz
and
sub
mov
and
pop
aad
sub
popa
movsl
sub
jp
push
roll
add
mov
adcb
fsubl
dec
in
sbb
jp
push
cld
mov
xor
shlb
xchg
jmp
xchg
lds
and
add
push
imul
out
lret
jnp
dec
dec
test
xchg
jmp
mov
mov
lret
bound
mov
dec
sbb
mov
xchg
add
and
sub
add
pop
insb
daa
sbb
add
lret
adc
cs
fistl
pop
ret
daa
inc
add
data16
mov
add
outsb
or
dec
cmp
inc
xchg
mov
mov
lds
lods
cs
clc
xlat
sbb
aam
xchg
jmp
xor
cmpsl
popa
push
cs
dec
pushf
or
push
pop
adc
cmc
fwait
push
fwait
test
das
mov
lock
mov
shll
mov
push
push
or
insl
lock
movsl
push
daa
mov
imul
mov
or
mov
and
cltd
cmpsl
sub
xor
cmp
mov
scas
jge
bound
cs
inc
mov
xchg
hlt
mov
jle
adc
clc
inc
popa
xor
pop
adc
shll
les
xchg
int
mov
and
mov
sub
outsb
sbbb
add
dec
faddl
leave
out
or
push
outsb
enter
lcall
imul
pop
pop
xchg
hlt
int3
add
and
cmpsl
cld
dec
scas
jecxz
sbb
ljmp
and
sub
mov
popa
cmpsl
in
sub
cli
mov
mov
pop
ficompl
adcb
hlt
bswap
int
push
ret
push
xchg
pop
add
mov
mov
notl
iret
ret
dec
mov
out
sbb
icebp
outsb
or
pop
in
in
enter
clc
jle
test
hlt
dec
pushf
mov
cmpl
sub
ret
outsl
lea
mov
stos
out
inc
mov
and
testb
mov
add
shl
jb
pop
dec
add
cld
int3
cmp
mov
xor
adc
test
push
test
inc
xor
push
mov
jbe
inc
out
pop
adcl
shlb
add
mov
lret
xchg
in
dec
adc
push
add
ret
ret
push
pusha
sbb
subb
outsl
add
inc
lods
jmp
xor
inc
mov
out
sti
fcompl
movsb
mov
nop
cli
js
psllq
cmp
lret
mov
repz
int3
lcall
out
mov
inc
mov
fimull
push
int3
adc
mov
inc
jle
adc
movsb
dec
out
or
mov
push
test
inc
aas
inc
mulb
loop
add
push
in
push
test
andb
push
add
mov
mov
ret
inc
in
aam
add
or
je
mov
in
pop
mov
enter
mov
sub
xchg
ret
cltd
sbb
in
xorb
adc
shlb
sub
mov
mov
cmp
bound
nop
lods
mov
test
add
in
sub
ret
loope
jle
mov
stos
scas
popl
les
shlb
lret
fwait
lds
das
or
push
jle
je
or
lods
push
rcll
insb
inc
shlb
inc
ret
ds
jb
js
xlat
mov
hlt
or
cmp
or
add
testl
inc
das
fdivrl
das
scas
iret
movsb
xor
sbb
inc
push
sub
mov
lds
mov
btr
jmp
inc
mov
aad
les
pop
aas
orb
sbb
subb
jle
lret
add
shll
inc
sbb
or
and
popa
mov
mov
push
sub
das
cmp
repnz
and
mov
repnz
and
or
bound
out
ret
and
mov
repz
fldcw
hlt
mov
mov
out
cli
roll
in
das
add
loop
add
jb
shll
push
xor
push
mov
dec
add
mov
mov
cmp
dec
sahf
ror
inc
aam
xorb
add
sub
adc
stc
addb
xor
popl
and
pop
jg
in
test
push
es
testl
dec
xor
push
cmp
in
xorl
jmp
adc
cmp
inc
mov
ret
bound
ljmp
dec
in
das
movsl
mov
fcomps
aas
jns
pop
jae
jle
push
xchg
aaa
jae
add
movsl
in
adc
subb
adc
subb
int3
outsb
loop
or
notb
lret
jl
jne
sbb
mov
cmp
jp
dec
inc
jne
cld
add
pop
insl
xchg
mov
inc
pop
sbb
mov
roll
push
icebp
jge
daa
bound
or
cs
jmp
stos
test
pop
int
jp
pop
out
lea
mov
xor
mov
outsl
orl
xlat
mov
mov
mov
addl
fwait
mov
mov
pushf
repz
sub
test
xor
mov
popa
sbb
push
pushf
dec
xchg
outsl
mov
fs
imul
mov
rcr
icebp
mov
roll
bound
sbb
ret
dec
insb
mov
mov
or
and
dec
xor
cld
sbb
loop
mov
mov
in
lods
addr16
mov
call
subb
push
orb
dec
lret
mov
add
inc
and
pop
mov
push
nop
je
call
cmpsl
push
push
mov
mov
xchg
fstpt
ds
lods
fwait
out
in
mov
testl
mov
jmp
pop
add
cmc
insb
es
dec
out
orb
cmpsl
fdivs
push
jae
je,pn
ret
pop
shrl
movsl
push
push
or
or
lret
lret
lods
mov
xchg
lea
out
cmp
sbb
out
inc
in
xor
push
loope
movsb
out
inc
call
bound
dec
aas
add
mov
fstl
push
in
push
insb
gs
dec
pop
dec
addr16
out
or
test
xor
lret
stc
movsl
push
pop
js
loop
jle
sbb
mov
push
cltd
sbb
shll
cli
push
dec
stos
into
cmpsb
sub
push
mov
ficompl
out
push
shlb
pop
int3
inc
iret
mov
cmpsl
or
mov
mov
mov
les
jp
push
sbb
test
pop
fwait
jmp
and
adcb
sbb
pop
jo
xor
adc
pushf
insb
mov
sbb
jge
push
andb
mov
add
push
cltd
orl
repnz
popl
add
jo
hlt
mov
add
mov
movsb
shl
pushf
pop
clc
jne
ja
pusha
mov
xchg
xchg
add
adc
addb
stc
aas
and
cmpsl
push
aam
or
and
outsb
add
sbb
test
scas
in
xor
add
stos
fs
rcrl
mov
mov
mov
dec
pushf
cwtl
mov
fs
mov
mov
shlb
insb
dec
or
rcrl
mov
sub
mov
or
sbb
hlt
out
sbb
popf
shl
push
add
stos
mov
xor
es
or
dec
out
loop
pop
push
roll
iret
pop
scas
xor
mov
scas
out
sbb
inc
mov
popf
sbb
ret
sub
push
lods
loope
cmpsl
gs
sahf
test
xchg
xor
mov
xor
pop
popf
shll
lock
lahf
sti
mov
dec
add
xor
and
cmc
fucomi
mov
cmpsb
sub
jbe
aad
or
sbb
in
lahf
jns
pop
add
mov
cmp
jmp
mov
cmpsl
mov
dec
out
gs
subb
fcompl
lret
fldl
mov
sub
stc
aaa
adc
jecxz
fcmove
xor
enter
dec
popf
mov
xchg
out
dec
sbb
test
inc
mov
and
test
mov
fidivs
movl
loopne
cmc
stos
aaa
add
xchg
mov
dec
lods
pop
jle
pop
hlt
fdivl
push
out
mov
add
lea
lret
lods
adc
orb
xchg
mov
loope
ret
in
dec
and
insb
pop
mov
mov
aaa
stos
rcll
dec
mov
lret
xchg
add
test
or
mov
mov
test
mov
mov
adc
call
sbb
test
loop
push
jmp
pop
sub
mov
andl
js
inc
leave
mov
repnz
xor
cmp
icebp
cltd
jmp
mov
mov
jmp
sbb
out
or
sbb
out
es
movsl
xchg
clc
mov
sub
xchg
adc
mov
mov
push
imul
pop
or
fldl
add
shr
andb
loopne
sub
adc
dec
jns
pop
mov
test
int3
mov
out
mov
dec
out
cs
cmp
dec
push
mov
imul
rolb
mov
rorb
cld
sbb
ret
loop
les
jg
sbb
mov
and
jl
data16
sti
jmp
push
cmpsl
inc
mov
pop
pop
mov
push
add
xchg
push
fsubl
scas
mov
xchg
std
aad
jae
xor
mov
xchg
xchg
repnz
xor
and
arpl
stos
push
lret
imul
xchg
push
mov
adc
add
mov
js
sub
mov
dec
adc
sbbb
inc
cmp
jbe
mov
scas
imulb
stos
push
aam
lods
dec
sbb
xchg
cwtl
push
outsb
mov
loop
xor
stos
cmp
mov
add
dec
loop
dec
jle
cmp
outsb
xchg
xor
push
aas
outsb
bound
and
repz
mov
bound
inc
subb
rol
dec
data16
dec
xor
int
or
in
fdivrl
jns
data16
negb
add
inc
nop
outsb
out
jmp
pop
add
iret
in
pop
les
mov
out
sub
mov
cmp
push
outsl
xor
xchg
adcb
dec
fcmovbe
inc
xchg
fiaddl
data16
arpl
sbb
insb
popf
add
push
cmp
mov
repz
push
test
sbb
movsb
repz
mov
and
mov
mov
out
and
sbb
jp
pop
jmp
mov
sbb
aam
enter
orl
call
orl
dec
movsl
cltd
sub
dec
xchg
in
jb
popl
mov
jbe
adc
add
das
xchg
lret
fs
std
in
jnp
mov
xchg
sbb
fmuls
xchg
fneni(8087
lods
jle
mov
mov
fucomp
mov
xchg
loop
push
pop
add
in
rclb
cmp
outsl
mov
rcll
mov
push
inc
push
shlb
or
andb
xlat
mov
imul
repz
jne
dec
test
cs
int3
inc
jmp
xor
and
je
lcall
ret
dec
jo
dec
add
stos
mov
sub
jmp
mov
addl
inc
stc
in
imul
adc
mov
insl
out
fldl
es
subl
push
mov
int3
xor
xchg
in
fcoms
jo
ja
lea
xchg
inc
jge
add
jae
lahf
repz
movzbl
ret
orb
arpl
popf
rol
in
sti
mov
bound
jo
in
cld
out
rclb
in
sub
jge
aad
ret
lock
fsubrl
sbb
fdiv
pop
jecxz
jle
dec
movsb
fcmovbe
in
push
xchg
in
sbb
lea
repnz
sub
iret
fistpl
lea
cwtl
xor
mov
sub
ja
std
push
outsl
into
jge
jne
jmp
pushf
mov
jl
mov
outsl
outsl
in
adc
es
xchg
mov
or
je
cmc
cmp
xor
and
mov
ss
les
or
es
pop
pop
mov
repnz
adc
pop
les
dec
lcall
mov
or
lock
jge
outsb
leave
pop
xchg
sub
mov
sbb
add
cmp
movsb
pop
cmpsl
sub
xor
jae
jne
mov
mov
cs
mov
jns
jno
jmp
mov
mov
addl
mov
cmp
pop
xor
cmp
push
add
cmpsb
sub
xchg
in
shlb
push
inc
inc
add
fsubrl
push
sub
test
adc
les
sbb
lea
orb
jns
add
bound
adc
in
cli
imul
mov
xchg
pmaxub
cld
xchg
fsubrl
pop
scas
sbb
cld
mov
mov
mov
jp
dec
das
inc
push
push
leave
cmp
push
mov
mov
xor
mov
mov
int3
or
lock
iret
sarl
mov
mov
xor
mov
and
sbbl
test
loop
jne
ret
aam
sub
or
or
cmpsl
cltd
imul
cmp
or
and
add
fsubrp
iret
mov
mov
movsb
mov
fsub
and
sti
shll
das
and
rorl
add
inc
xor
push
jbe
xchg
sbb
inc
sbb
movsb
jle
sub
lret
popa
stos
add
mov
push
pop
repz
pop
sub
loope
jae
cmpsb
rorl
andl
rolb
icebp
test
cmp
sub
sbb
mov
cmp
ret
cmp
pop
and
ljmp
mov
leave
andb
inc
testb
decl
iret
add
in
sbbl
xor
daa
mov
scas
ljmp
xorb
cs
and
test
add
es
or
bound
clc
or
aam
arpl
notb
xchg
std
stos
movsb
jns
aam
shrb
jbe
add
in
or
or
mov
add
fisubrl
test
xor
sbb
aas
in
sub
in
inc
xchg
add
push
addb
es
movsl
xor
insl
adcb
in
mov
aad
sub
lea
lock
push
pop
lret
loop
add
stos
call
sbb
cld
in
scas
aas
stc
addl
lods
mov
and
push
jne
dec
mov
out
cld
out
sbb
movsl
leave
aam
xchg
out
mov
and
dec
sbb
subb
cli
scas
mov
and
xor
xlat
ds
xor
push
pushf
sbb
dec
add
mov
pop
and
xor
sbb
mov
sbbl
add
sbb
mov
fldenv
mov
inc
lea
cmp
das
inc
inc
out
and
lods
mov
adcl
sahf
push
and
mov
push
and
je
in
xlat
repnz
neg
or
sub
pop
jmp
divb
mov
test
pop
rolb
cmp
enter
mov
in
shll
xchg
jbe
dec
js
int3
popf
jecxz
cwtl
js
je
pop
push
cmp
loopne
add
in
test
xor
int3
cmpl
fmull
push
subb
hlt
dec
jo
mov
test
mov
call
subl
sbb
dec
aad
filds
repnz
aam
lods
push
push
pushf
add
inc
out
jne
ds
and
push
push
imul
inc
jge
jnp
add
mov
mov
mov
fxch
dec
lret
dec
add
push
or
pop
shrl
dec
xchg
jnp
test
pop
sub
aaa
movsb
daa
ljmp
mov
cmp
fwait
fxch
add
shlb
jae
and
xor
or
out
mov
les
fildll
cs
or
and
push
and
pop
out
mov
pop
and
xor
push
dec
test
jno
inc
ret
mov
popa
xor
push
or
lea
add
mov
stos
mov
or
pop
hlt
test
mov
lock
out
add
cltd
sbb
mov
push
cmpsb
inc
adc
imul
xchg
dec
xor
scas
lds
decl
in
pusha
fcoml
fsubl
push
xor
dec
imul
xchg
je
push
pop
les
ret
imul
sub
in
and
popa
dec
test
subl
iret
sub
mov
gs
dec
push
pop
ret
es
stos
movsb
inc
dec
popa
mov
dec
xor
mov
adc
lahf
popa
loope
lods
leave
inc
push
mov
xor
scas
jne
cmp
pop
sub
add
addl
ret
fs
scas
ljmp
mov
das
in
mov
mov
mov
push
push
adc
mov
and
fmull
adc
or
sbb
add
mov
aad
mov
and
ror
addr16
xorb
shrl
ss
add
incb
cmpsb
cmp
cmp
cmpb
mov
jp
inc
inc
push
lods
stc
push
pop
inc
pop
mov
mov
mov
call
push
pop
into
shll
in
sarb
cmpsb
in
mov
dec
add
fdivs
insb
add
sbb
outsl
adc
mov
xchg
pop
rol
cmpsl
lods
pop
push
jl
jb
mov
call
mov
imul
inc
xchg
push
mov
mov
in
jne
outsl
jbe
icebp
jnp
out
sti
fcom
ss
int3
loope
lods
aas
sub
dec
subb
xchg
imul
popf
idivb
movl
dec
inc
sub
and
jb
cmp
xor
ret
adc
mov
mov
push
mov
sub
orb
sub
push
outsl
push
add
dec
adc
mov
or
rcl
push
je
leave
push
push
pop
repnz
les
orb
xchg
negl
and
data16
sbb
pop
loop
inc
repz
into
add
arpl
jecxz
gs
mov
js
iret
add
popa
shrl
std
push
adc
mov
out
xor
insb
sub
aas
fildl
cld
imul
push
or
iret
mov
je
out
pushf
in
sbb
xor
ret
jp
insb
sbb
jmp
xor
movsl
dec
out
je
mull
dec
lea
dec
ret
mov
add
mov
into
shl
mov
pushf
and
fdivrl
arpl
or
scas
aam
test
sub
cld
add
in
in
cmpsb
xchg
sub
out
jnp
inc
sar
lret
adc
ljmp
mov
cmpb
mov
inc
mov
sbb
add
xchg
orb
mov
stos
xor
xor
arpl
test
pop
dec
call
xchg
hlt
mov
push
rcrb
mov
xchg
stos
add
loop
outsl
shrb
cmp
mov
aam
cld
sub
pop
jne
loopne
dec
das
or
push
mov
and
mov
push
repz
sbb
fucomp
in
sbb
xlat
sub
rclb
mov
mov
push
dec
or
fwait
imul
cwtl
dec
fidivs
xchg
cmpsl
std
stos
cmc
and
adc
mov
inc
pushf
fldl
jmp
mov
shlb
sbb
test
push
or
fldcw
in
and
pop
mov
loopne
shll
stos
jno
lods
jle
mov
lods
les
xchg
mov
xchg
mov
push
testb
popa
jb
jmp
into
stos
sub
shl
mov
les
add
pop
loop
inc
lea
decb
mov
dec
sub
mov
stos
sub
xchg
mov
shl
mov
mov
mov
pop
jns
xor
pop
das
and
fcoml
int3
jns
ss
inc
aas
repnz
sbb
pop
mov
orb
add
ficoml
cltd
mov
mov
mov
jp
xchg
xor
sub
popl
push
sbb
out
xor
or
into
mov
outsb
jmp
or
and
add
mull
and
popa
shll
cmp
pop
stc
mov
scas
fdivr
inc
loop
mov
cld
or
push
imul
xlat
sar
hlt
xor
jmp
es
imul
cmpsl
adcl
mov
add
pop
clc
pop
hlt
or
outsl
or
loope
mov
jmp
dec
sub
or
dec
and
mov
in
mov
or
or
mov
xchg
sbb
out
dec
in
xor
jns
xor
add
dec
nop
or
rcrb
dec
add
dec
mov
fucom
cmp
fidivs
dec
outsb
mov
rcrb
rol
push
btr
dec
mov
leave
in
push
hlt
push
mov
movsl
aaa
iret
push
loope
dec
enter
lret
cmp
jl
push
and
mov
adc
xchg
pusha
xchg
pushf
sbb
andb
mov
and
add
mov
mov
mov
or
dec
repz
dec
xor
xor
xchg
repnz
xor
add
xchg
push
fmuls
sbb
nop
sarl
subb
mov
and
cwtl
mov
add
dec
das
sahf
cmpsl
leave
hlt
fs
dec
xchg
mov
push
je
sbb
ljmp
jnp
cmpsb
rcrl
ja
das
aam
xchg
aaa
add
addr16
out
rorb
push
mov
adc
push
arpl
in
aam
fcmovb
in
fdivs
mov
mov
mov
jmp
inc
inc
xchg
adc
in
sub
mov
dec
dec
out
lea
push
add
push
or
mov
push
imul
repz
push
add
add
cmp
or
insb
mov
and
adc
leave
inc
int3
mov
dec
cld
add
add
and
xchg
add
push
fwait
sub
xor
sub
inc
nop
scas
mov
xchg
out
lret
xlat
mov
mov
mov
int
pusha
jo
stos
mov
jmp
jp
repz
mov
jmp
int
push
out
fildll
pop
bound
cmp
mov
or
bswap
scas
push
test
jbe
mov
out
js
sbb
add
leave
das
push
shll
in
cmpsl
xor
or
mov
xchg
das
and
loop
xchg
lods
cmpsb
jecxz
xchg
loop
mov
stc
cwtl
scas
push
inc
jg
and
pop
xchg
cmp
shrb
mov
sbbl
xchg
or
xchg
pusha
fldln2
jnp
pop
mov
cmp
in
xor
and
push
mov
mov
pushf
jnp
push
sbb
cmpsl
jb
fidivl
cmp
dec
jns
mov
aas
push
loope
pop
mov
in
push
mov
cmp
sbb
pop
repnz
into
mov
push
fwait
mov
adc
push
add
jp
xchg
xor
scas
xor
mov
sti
stos
out
xorl
mov
lcall
fnstsw
pop
movl
mov
inc
and
rolb
mov
dec
xor
outsl
sub
outsb
push
dec
lcall
mov
hlt
sahf
mov
outsb
mov
inc
in
out
jns
repnz
mov
sbb
push
sbb
sbb
pusha
xchg
pop
cmpsl
iret
out
dec
or
data16
inc
pop
aas
mov
hlt
repz
rcl
shrl
in
push
mov
mov
push
pop
xor
or
ljmp
mov
shrb
xor
or
xchg
jmp
mov
push
jmp
dec
lods
pop
add
pusha
cli
imul
mov
pop
and
mov
imul
ds
rolb
call
aaa
and
aam
mov
in
xchg
or
pop
jl
adc
mov
test
mov
pop
leave
lods
mov
das
sbb
cmp
jne
push
outsl
pop
adcb
push
add
mov
push
or
sbb
std
inc
iret
wbinvd
loop
and
leave
xor
and
ret
subl
aas
dec
dec
cmp
cmpsl
shlb
inc
add
outsb
rorl
fcoms
xor
faddl
iret
dec
xorl
adc
add
pop
and
mov
shl
lods
pop
xchg
jbe
adc
or
xor
push
decb
popf
lods
shr
dec
lods
stc
pop
jnp
xor
mov
stc
mov
inc
dec
cwtl
movsl
rorl
cmpl
fisubrl
in
fimull
push
stos
and
xor
jne
or
cmpsb
out
pop
jle
dec
mov
xlat
xchg
stos
es
jbe
and
xor
mov
mov
rorl
push
dec
ret
add
call
into
rorl
cli
inc
mov
jno
popf
mov
int3
cld
scas
out
cmovnp
pop
or
dec
and
mov
jbe
je
add
and
out
sbb
add
dec
sbb
mov
lret
or
roll
push
pop
xor
sarl
mov
fldenv
ja
push
xchg
outsb
or
ret
pop
mov
and
je
cmpl
jb
std
mov
popa
adc
sbb
mov
clc
add
sbb
nop
andb
dec
xor
lods
mov
lret
pop
or
mov
xchg
repnz
andl
dec
jge
xor
fwait
mov
adc
ret
sub
or
in
test
scas
mov
cmp
add
fdivl
add
lahf
test
repnz
and
xor
lock
repnz
test
in
in
mov
xor
cmp
ret
xchg
lcall
les
sti
icebp
imul
stos
icebp
mov
mov
sub
xor
sarb
ljmp
jbe
jne
addr16
fnsave
lock
add
xor
imul
lcall
notl
cli
lods
jb
add
mov
mov
add
jo
out
hlt
fcomps
dec
jle
inc
mov
mov
dec
add
cmpl
int3
add
sahf
repnz
inc
mov
push
into
call
gs
cmpsl
mov
ret
xchg
jns
mov
and
stos
adc
shlb
sub
mov
mov
or
jge
arpl
mov
and
mov
into
iret
mov
mov
mov
jge
inc
add
sahf
test
lret
sub
mov
pop
adc
icebp
js
stos
imul
inc
mov
add
xchg
fildl
mov
sahf
push
es
outsl
out
sbb
jp
jmp
fildll
add
and
pop
fucom
mov
jl
push
jmp
and
aaa
mov
sbb
mov
aad
iret
mov
pop
push
xor
add
pop
in
sbb
bound
scas
ret
or
in
imul
sbb
cmp
push
mov
jl
sub
pop
jnp
outsb
movsb
icebp
mov
push
das
mov
vpalignr
jle
push
jmp
orl
ret
scas
mov
cld
push
ds
push
sub
sub
repnz
dec
lds
xor
shlb
and
test
dec
fistpl
sub
push
movsb
xchg
in
es
push
adc
add
and
add
cmp
xlat
in
jns
xorl
xor
xchg
jle
add
jb
mov
repz
popl
ljmp
movsl
insl
push
mov
and
aaa
addb
in
inc
das
pop
cmp
pop
mov
sbb
dec
cmpsl
cli
ss
aaa
ret
sbb
inc
into
ljmp
jne
aaa
dec
or
pop
and
je
es
subl
push
push
mov
cmp
and
inc
push
add
movsl
mov
jnp
xor
lds
push
and
and
subb
out
sub
mov
jecxz
cmpsl
les
push
and
aas
out
outsl
xor
fistpl
or
add
xor
add
mov
mov
rclb
pop
sub
mov
and
shll
mov
lret
adc
mov
mov
fadds
dec
repz
dec
addr16
jns
insl
loopne
sub
icebp
sub
or
mov
mov
mov
mov
cmpsl
xor
cmp
mov
pushf
sar
aaa
orb
pop
cld
sub
das
std
pand
sahf
outsl
clc
imul
xor
mov
addps
mov
and
orb
movsb
dec
or
lahf
or
cmp
cmp
pop
ja
ret
sub
fistps
les
mov
cmpsl
pop
cli
and
lahf
loopne
xchg
repnz
cmpsl
int3
das
pop
inc
sbb
add
pop
ds
das
sbbb
cmpsb
outsb
ds
or
adc
push
add
pop
pop
insb
xor
pop
sub
sub
repz
inc
add
push
push
mov
repz
cmp
movsb
mov
je
xor
jmp
push
mov
outsl
lret
jmp
jnp
aaa
mov
hlt
jae
mov
iret
mov
mov
dec
aaa
lahf
aam
add
fwait
in
mov
bound
mov
scas
push
je
xchg
cmp
shlb
and
iret
adc
lret
add
push
loope
in
mov
push
sbb
pushf
clc
loopne
pushf
and
test
andl
mov
mov
mov
mull
adc
dec
testl
fmul
mull
out
addl
xor
mov
les
push
mov
xor
lret
shlb
negl
inc
lds
inc
add
or
xchg
paddusw
sub
push
cmp
movsb
push
mov
add
push
pop
fstps
xlat
xchg
push
and
inc
push
and
mov
push
add
dec
add
jecxz
iret
xor
add
sbb
out
addl
or
or
or
lahf
fistps
add
jge
mov
xchg
mov
aad
xor
test
in
add
push
outsb
cmp
push
push
lea
rcll
cmp
xor
push
add
mov
subb
jge
mov
icebp
fnstenv
int3
xor
mov
mov
stos
xor
outsl
hlt
call
mov
mov
pop
mov
repnz
stos
jne
adc
out
cmp
es
movsb
vsubpd
inc
or
jge
adc
cmpsb
cmp
add
xor
shll
in
out
ret
mov
cmp
rolb
mov
icebp
pop
pop
repnz
out
mov
lret
dec
lea
sti
sbb
adc
dec
and
insl
mov
pop
or
test
movsl
push
mov
push
and
roll
mov
popa
scas
mov
mov
xor
cs
lds
push
test
clc
and
add
andl
xchg
pop
adc
fbstp
inc
xor
rorl
inc
in
mov
cmpsl
int3
call
fmull
jge
lods
jmp
jo
dec
mov
cmpb
xor
adc
loop
sbb
dec
shrl
pop
andb
repz
mov
add
jmp
xorl
shl
cmp
rorb
mov
dec
adc
jnp
xor
adc
and
into
add
aas
nop
mov
repnz
sub
and
lahf
or
pop
mov
push
imul
es
mov
adc
das
sbb
and
or
das
xorl
cmp
xor
push
mov
mov
js
xchg
inc
repz
sti
shl
sub
sarl
out
cmpb
insb
orb
stos
adc
rcll
mov
movsb
pushf
subb
mov
wrmsr
mov
pop
sbb
popf
cmp
je
orb
in
repnz
sub
out
iret
lret
sub
xchg
mov
ficompl
shlb
jg
dec
and
sub
mov
das
or
stc
xor
cmpsb
xchg
rcrb
imul
fwait
iret
scas
ja
sub
mov
aas
imul
or
test
add
cmpb
movsl
push
pop
addr16
cmpsl
scas
incb
lret
add
jle
fisubrl
sbb
or
cmp
push
es
dec
mov
lea
mov
dec
xor
add
je
test
repnz
add
shll
jns
xchg
cmpsb
lcall
scas
pop
jge
xor
xor
in
pop
js
pushf
loop
rcr
insb
sbb
lea
sbb
jo
stc
lds
add
fdivs
add
ret
jecxz
mov
sahf
ja
into
cwtl
jecxz
xchg
sbb
rorl
in
mov
and
loop
subb
xor
push
inc
ror
pop
or
push
mov
mov
nop
popa
mov
mov
push
stos
cmpsb
test
push
fistpl
icebp
out
push
inc
add
xor
mov
pop
adc
addl
das
adc
adc
stc
mov
andb
fnsave
dec
ds
adc
xchg
gs
mov
les
push
aaa
mov
je
mov
jmp
leave
xor
lods
or
stos
jb
add
add
mov
aad
fiaddl
sub
pushf
mov
mov
mov
add
sub
idivb
aaa
test
push
sub
xchg
fs
rclb
push
and
adc
movb
add
movb
or
gs
mov
cmc
sub
andl
xor
sub
lahf
pusha
icebp
jecxz
mov
ror
int
xchg
out
inc
jnp
cs
add
int3
movsb
fisubrl
mov
add
xlat
lret
xchg
inc
shl
or
or
sub
push
ret
lret
in
push
sbb
cmpsb
mov
imul
lds
ficomps
roll
jge
mov
rcr
loopne
lret
mov
and
cs
das
push
mov
in
cmpsl
lock
sbb
and
add
roll
imul
aam
cmpsl
and
cmp
jecxz
repz
adc
lret
aad
adc
es
mov
fwait
imul
xor
cmp
scas
daa
jae
mov
repz
xor
inc
add
outsl
pop
jno
or
adc
sub
into
stos
outsl
add
jmp
xchg
push
add
inc
std
cmpsl
adcl
mov
out
stos
add
ja
mov
jp
addb
mov
lcall
xorl
or
sub
je
aam
or
mov
movsb
imul
cmpsl
cmp
push
cmp
ret
jle
pop
shl
xor
clc
cmp
cmpsl
mov
ret
or
fs
lahf
lcall
outsl
dec
fldl2t
xlat
mov
mov
add
popa
cmp
push
jnp
aam
cmpsl
ret
mov
add
cmpsl
xchg
adc
mov
adc
cmpsl
les
mov
add
loop
cmpsl
stc
orb
ret
test
adcb
mov
daa
cmp
subb
add
or
ss
inc
cmpsl
pop
scas
mov
and
inc
mov
lret
mov
lahf
xorl
pop
xor
add
stc
add
push
pop
nop
mov
andl
jmp
inc
cmpsl
lret
mov
cld
les
add
add
inc
mov
xor
lret
orb
ret
mov
mov
ja
cmp
iret
dec
push
std
inc
mov
and
mov
mov
std
daa
add
jo
mov
or
or
or
or
or
std
movsb
or
or
or
or
or
or
or
or
cmpsl
xchg
test
fsubs
loopne
lea
sbb
inc
mov
push
rolb
adc
or
les
arpl
jb
or
and
cmpsl
mov
push
lods
loope
lret
add
cmpsl
lods
mov
aas
pushf
dec
xchg
mov
mov
mov
loopne
push
outsb
ret
scas
das
lea
mov
mov
lds
jae
subl
divl
mov
jae
add
shlb
stos
movsb
add
cmpb
inc
mov
jns
cmc
xor
fidivs
jne
adc
jns
testb
rorb
adc
jns
testl
lret
mov
adcb
mov
and
mov
push
or
dec
sub
cmpb
xorb
mov
sub
xor
or
dec
movsb
mov
iret
and
iret
inc
subb
int
xor
mov
cmp
mov
xorb
mov
push
mov
jecxz
sbb
sarl
xchg
stos
or
lret
mov
inc
hlt
cmpsl
fcoml
sub
or
ret
cmc
add
out
sbb
xor
inc
mov
xor
andl
pop
in
or
fnstenv
dec
mov
negb
andl
hlt
add
push
xor
lret
xchg
adc
inc
sub
push
pop
or
dec
pop
fimuls
push
mov
pop
imul
push
cmp
xchg
xchg
xor
jnp
xor
mov
mov
push
shlb
loopne
and
adc
bound
jbe
push
xor
scas
lret
dec
adc
lock
popf
pop
mov
mov
sbb
fcomps
xor
adc
xchg
mov
sbb
incl
lcall
outsl
or
cld
xchg
loopne
inc
mov
pop
stc
clc
mov
bound
lret
fs
xor
repnz
ret
dec
mov
sub
and
push
rcll
addb
jns
repnz
popf
lock
add
pop
mov
lret
add
je
iret
cltd
in
push
mov
xlat
divl
or
in
cmc
lock
rorl
xorl
cwtl
mov
insb
scas
mov
out
gs
dec
cmpsb
and
lret
jmp
out
inc
js
dec
call
enter
push
aas
aad
mov
movsb
clc
iret
jmp
test
mov
inc
out
add
rolb
pop
das
xchg
xlat
inc
fisubl
or
cmp
adc
inc
in
cmpsb
ljmp
notl
mov
add
rol
ja
xchg
cmp
dec
or
cli
enter
push
push
lock
bound
rorl
or
add
mov
repz
sub
xor
aaa
rorb
xlat
mov
mov
in
dec
loopne
pop
clc
xchg
mov
and
ret
xchg
jnp
rorl
loopne
add
mov
mov
outsb
lea
dec
cmpsl
adcl
jmp
stc
sbbb
leave
cmp
or
jp
cmpsl
out
sbb
cmc
iret
je
fldt
in
inc
xchg
shlb
push
mov
mov
add
mov
sarl
aaa
mov
mov
and
push
sbb
add
cmp
rcl
stc
mov
dec
add
jne
out
cmpsl
lods
add
xchg
aad
idivl
mov
xor
and
or
mov
jge
test
in
fdivrl
mov
xchg
in
aas
xor
loope
adc
into
scas
fmull
shll
loop
jmp
test
add
cmpsb
bound
jmp
rolb
int3
cmp
jmp
into
jae
mov
jge
in
adc
outsb
leave
xchg
std
mov
cmpsb
push
daa
xchg
pop
hlt
movsl
push
mov
ret
push
adc
iret
mov
fisubrl
leave
pop
addl
pop
or
add
lods
enter
add
in
sub
ret
mov
mov
sub
push
mov
push
stos
sbb
inc
inc
sub
mov
dec
out
subb
ret
mov
scas
aad
nop
cmpsl
push
addb
or
cmpsl
dec
cmp
dec
imul
in
fidivl
ret
xchg
sub
stos
push
outsl
mov
add
mov
xchg
push
call
inc
mov
dec
mov
adc
sub
shrb
sbb
out
add
sbbb
lods
xor
push
push
out
filds
add
or
mulb
popa
je
dec
movsb
push
cltd
push
dec
jno
and
mulb
mov
jbe
ficompl
movsb
movsl
fcompl
es
add
cld
inc
icebp
aam
push
shr
test
out
cmp
test
mov
fnstenv
adc
leave
adcl
int3
fsubs
mov
xchg
or
cmp
scas
pop
jmp
and
cmpb
jecxz
lcall
or
push
ss
dec
mov
shrb
lods
inc
enter
shll
lock
sbb
popf
nop
dec
outsb
push
cmpsb
mov
testl
and
fs
ss
addr16
xor
subb
adc
or
add
mov
test
and
dec
inc
loop
addr16
daa
out
push
and
rolb
daa
outsl
push
and
or
push
mov
lods
les
sub
stos
cli
ret
mov
dec
mov
movl
mov
aaa
mov
inc
repz
add
movsb
loope
push
inc
inc
add
sub
jnp
pop
mov
add
into
into
pop
xor
xor
push
stos
mov
xchg
add
lods
pop
cmp
mov
cmc
inc
scas
sub
pop
pop
mov
add
sub
jp
jns
pop
add
and
mov
adc
loope
addl
dec
outsl
dec
andnps
pop
aas
mov
xchg
jbe
sti
sti
in
mov
adc
scas
adc
mov
out
adc
push
negw
in
fdivr
sti
push
loop
pop
insl
out
sub
jmp
jae
cmp
lcall
inc
jecxz
ljmp
cmp
loop
aas
sbb
cmp
dec
xlat
mov
adc
fs
aas
ja
sbb
xchg
mov
sub
dec
sbbb
lea
and
cmp
jp
add
pushf
xor
aas
push
push
mov
fsubs
mov
push
push
test
inc
jle
xchg
shrl
push
or
and
mov
mov
add
aad
aas
mov
adc
in
dec
or
add
hlt
mov
aaa
or
setge
aas
orb
xchg
ljmp
repz
rorb
mov
inc
dec
dec
sbb
mulb
test
or
arpl
in
je
mov
das
push
inc
xchg
cmp
fnstsw
pop
stos
int
je
pushf
dec
add
stos
push
cmp
test
push
gs
fbstp
dec
jnp
repnz
addl
aaa
cltd
leave
lods
rcr
xor
vpshld
dec
sarb
imul
cwtl
push
push
or
insb
or
mov
les
or
add
cmp
add
lea
pop
into
inc
sub
imul
scas
dec
js
xchg
mov
stos
add
lret
test
lcall
inc
xorl
dec
mov
jo
or
push
dec
sub
orb
add
inc
rcll
loope
iret
mov
mov
addr16
mov
out
add
dec
add
lea
mov
jb
pop
lea
daa
lds
lret
cwtl
cwtl
mov
gs
push
lea
or
data16
dec
ror
ss
out
dec
sub
lea
shld
outsl
xor
pushf
cmp
cmpsl
mov
mov
add
push
stos
add
imul
leave
fs
orb
xchg
mov
pushf
pop
andb
dec
mov
cltd
mov
int
xchg
sub
mov
ret
in
mov
lods
dec
lea
add
pop
inc
loope
mov
xchg
push
and
inc
adc
xor
mov
mov
add
negb
and
adcl
test
push
push
fbstp
aad
mov
xchg
insb
jb
jbe
adc
repz
mov
testl
int3
rol
orl
xchg
das
shrb
mov
imul
dec
data16
add
mov
xor
leave
lea
lods
ret
lods
mov
imul
mov
lock
cmp
cmp
stos
and
shlb
mov
adc
gs
add
cmpsl
arpl
xor
inc
aas
sbb
sbb
sbb
add
jecxz
icebp
or
lcall
movsl
pushf
shr
pop
testl
push
lret
adc
popf
movsl
pop
xchg
and
mov
dec
push
sub
dec
and
xchg
add
jg
ret
inc
xchg
add
ret
sub
mov
mov
dec
js
lea
jb
movsb
mov
mov
jl
shll
fs
add
jmp
in
pop
popa
aaa
pop
jle
les
js
pop
push
repz
int
orl
xchg
dec
aaa
ja
push
add
sti
dec
cmp
ds
lods
iret
clc
dec
jno
iret
rcrb
shr
ja
aas
imul
repz
inc
dec
mov
mov
push
adc
dec
xchg
fmull
add
xorb
rep
cmp
jne
xlat
jnp
or
scas
sub
cmp
cmpl
xchg
add
in
xor
lods
sbb
std
aam
jbe
xor
ret
in
xor
cwtl
in
add
lret
out
cli
cmpsl
or
mov
mov
or
in
ret
fisubs
sbb
insb
lret
sti
andb
mov
pop
into
test
fst
loopne
xchg
or
dec
mov
inc
add
xor
adc
xorl
push
lret
repnz
mov
imul
push
or
in
sbb
mov
xchg
sub
je
and
add
xor
je
out
out
dec
sub
add
push
orl
popa
jne
mov
lock
or
int3
jge
push
or
mov
push
or
addr16
mov
mov
je
mov
test
fwait
cmpsl
loop
pop
pop
movl
xchg
jl
or
lds
pushf
loop
dec
xor
jecxz
add
push
mov
add
push
ret
sub
ljmp
sub
push
lds
push
int3
pushf
lret
mov
in
cld
scas
mov
xor
repnz
ja
cmp
pop
aas
or
jl
fimull
cltd
mov
popf
mov
or
push
xor
insl
idiv
add
push
and
scas
sub
push
jns
cmp
adc
mov
rol
loope
imul
in
ret
test
push
movsb
lret
in
push
sbbl
aaa
mul
jp
repnz
mov
lahf
xor
ret
push
ret
rcr
add
push
fiadds
cld
add
dec
imul
xor
outsl
adc
or
and
xor
dec
test
pop
ljmp
sbb
xor
lret
movsl
xchg
leave
add
aas
add
fucomip
loop
cmp
nop
mov
or
dec
mov
mov
mov
not
mov
and
add
pop
ret
add
or
das
fisttpl
hlt
ret
and
sub
xor
nop
cmpsb
mov
push
ret
orb
lret
gs
call
dec
out
dec
mov
pop
lcall
xor
mov
sbb
xchg
add
ljmp
fbstp
add
mov
mov
or
dec
mov
or
jp
add
mov
sbb
pop
arpl
jp
nop
cmpsl
movsl
push
sbb
jnp
mov
or
aad
inc
mov
cld
xchg
cli
and
adc
mov
cmp
mov
loopne
pop
pop
mov
shll
imul
sbb
pushf
scas
mov
xor
mov
stos
or
or
cli
jno
es
push
or
sub
inc
push
xorb
and
push
ret
push
pop
add
lods
andb
mov
pop
cmpsb
pop
inc
in
pop
sbb
roll
jecxz
mov
and
cmpsl
xchg
pop
dec
ret
mov
sub
inc
movsb
out
xchg
or
mov
out
and
subb
inc
sbb
call
enter
adcb
jae
addb
rcrl
lea
push
push
push
and
or
push
mov
movsl
adc
cmp
mov
fwait
jae
ret
into
xor
mov
in
cmp
fadds
iret
mov
dec
fwait
and
dec
add
je
add
xor
xlat
fwait
imull
push
fcoms
test
jmp
sbb
ja
push
fldenv
imul
popa
in
pusha
inc
mov
fs
dec
sarb
and
subb
fdivrl
mov
adc
ret
push
jb
push
sti
add
pop
daa
test
cld
sbb
xchg
jecxz
mov
stos
cmc
cltd
dec
imul
or
xchg
data16
pusha
jb
mov
popa
rol
pop
scas
mov
fiaddl
cltd
xchg
outsb
popf
mov
divl
hlt
xchg
imul
scas
repz
inc
xor
fs
andl
fcmovu
in
iret
pop
xor
push
gs
lock
sarl
add
movsb
mov
inc
cmp
fwait
add
jecxz
insl
out
inc
sbb
sbb
xchg
mov
imul
jl
inc
mov
dec
jl
xchg
fsubp
cltd
mov
das
push
mov
adc
leave
sbb
jg
outsl
pop
faddl
pusha
fcmovnu
orl
mov
and
mov
or
aaa
int3
cmpsl
cmp
xchg
adc
add
scas
outsl
dec
adc
add
mov
push
inc
lret
out
add
mov
mov
pushf
adc
or
dec
push
or
in
and
out
cmp
mov
les
lcall
test
sbb
or
push
bound
adc
sahf
loop
fisubl
and
xor
aad
cmpsb
cmp
pop
jbe
mov
adc
aam
out
es
aas
imul
xchg
dec
or
les
sbb
xor
pop
push
mov
sbbb
test
pop
jb
ja
or
sbb
aad
ret
mov
addr16
and
cmc
add
mov
rorb
mov
imul
mov
jecxz
jns
sub
inc
sub
fildl
push
xchg
mov
es
bound
mov
cmpsl
push
push
xor
out
inc
mov
in
sarl
mov
pushf
fmulp
adc
repnz
repz
cmc
repnz
addr16
in
sbb
and
shlb
add
subl
into
ret
cmp
cmp
pusha
sti
jns
fistl
dec
aam
addl
stos
mov
inc
cli
lret
outsl
inc
push
insl
in
xor
cmp
enter
mov
and
lods
mov
xor
mov
jnp
xchg
shr
jl
cmp
pop
adc
push
dec
xchg
std
push
aaa
shrb
dec
inc
idivl
and
lahf
fsts
mov
rsqrtps
clc
or
inc
lret
scas
movsl
cwtl
push
mov
or
xor
pop
push
idivb
imul
in
rcrb
and
das
push
mov
outsb
xor
jo,pn
sbb
jo
inc
cmc
sbbl
nop
aam
push
sbb
dec
int3
sub
mov
push
hlt
mov
hlt
push
xchg
test
or
sub
xlat
pop
jnp
inc
ret
cmp
movsl
das
inc
mov
jl
out
mov
xor
mov
dec
movsb
or
jae
je
cmpsl
inc
dec
cmpsb
jo
popf
jg
ljmp
in
in
inc
jo
loopne
mov
xchg
movsl
xor
roll
mov
cmpsl
pushf
jnp
adcl
cmp
into
lret
cmc
rorb
mov
sbb
jle
push
or
ret
ret
clc
pop
lret
pop
dec
shll
popf
xchg
icebp
cwtl
xor
or
mov
insb
out
and
xchg
shll
add
arpl
mov
arpl
stos
mov
cmpsl
and
or
sarb
add
inc
lret
sbb
lods
out
pop
idiv
aaa
and
inc
shrb
xor
mov
cmpsl
push
mov
cmpsl
pop
cmp
dec
or
loop
sbb
leave
scas
pop
sbb
cld
popa
insl
fwait
vmread
aaa
mull
jecxz
mov
dec
push
xor
movsl
xchg
jno
and
sar
mov
lock
fstps
or
pop
add
add
xlat
xchg
push
jno
and
xchg
mov
mov
ret
lret
jecxz
stos
mov
andl
xor
mov
lcall
add
pusha
sub
int3
outsl
sahf
sub
jae
mov
cli
insl
xor
cmpsl
rcl
lret
add
mov
movsb
lret
scas
mov
stc
scas
mov
add
mov
pop
mov
add
sbb
inc
cmpsl
lods
das
pop
add
or
jp
mov
adc
pop
cmp
out
jae
ret
adc
sub
lods
lret
inc
outsl
in
pop
pop
rcrl
ss
pop
sub
stos
xor
push
fldt
dec
int3
xchg
jne
mov
aaa
and
ds
lds
or
hlt
xor
jle
and
adc
out
sub
adc
pop
mov
add
jp
cmpsb
loop
fisubrl
clc
xor
sbb
daa
fldl
dec
add
adcl
sbb
xor
mov
in
pop
push
lret
dec
negl
outsb
cwtl
pop
insl
mov
in
add
push
xchg
ds
in
mov
sahf
cmp
jmp
mov
adc
or
jns
out
and
add
cmp
int3
pop
mov
or
idiv
jmp
mov
adc
and
aad
sub
dec
push
pop
sub
mov
mov
add
cmc
call
ret
in
mov
dec
mov
add
movsb
in
push
sbbl
movsl
test
mov
fbstp
mov
dec
pop
in
stos
mov
hlt
jp
or
lock
loop
insl
cmp
aaa
mov
add
inc
pcmpgtw
ror
clc
ss
xchg
mov
out
mov
cmpsb
mov
fidivrs
xor
bound
mov
lret
sub
inc
icebp
aam
push
mov
xlat
sbbl
mov
pop
lret
mov
mov
xchg
mov
sar
add
outsb
push
les
adc
fsubrl
sub
inc
jbe
jmp
push
imul
xchg
sbb
cli
lea
aam
repnz
sbb
movsb
mov
cs
mov
cmc
cmpsl
jmp
push
pop
push
xor
test
sbb
push
mov
inc
cmp
mov
mov
rorb
mov
lret
and
lret
mov
ljmp
imul
and
adc
jmp
fsubrl
sbb
lock
jbe
data16
adc
push
icebp
mov
rcll
mov
imul
fwait
or
scas
sub
rcrb
add
enter
cmc
mov
int3
aaa
std
lock
mov
jno
divl
inc
xor
sub
sub
cmp
call
dec
add
xchg
sbb
leave
lcall
mov
or
mov
inc
out
dec
mov
xor
mov
fnstcw
or
inc
sbb
or
ja
or
inc
jmp
subl
mov
inc
shrb
mov
out
sbb
sub
sub
or
push
outsb
dec
shrb
lret
stc
xorl
jo
fiadds
mov
xor
cmp
adc
or
mov
push
pushf
test
mull
pop
dec
jns
cmpsl
xchg
sub
test
in
test
push
jg
lea
sub
xor
movsb
pop
or
mov
sbb
iret
mov
mov
iret
test
lret
int
movsl
mov
shr
imul
mov
and
and
cmpsl
jno
push
cmp
jno
xchg
lret
push
loope
outsl
mov
jne
in
xchg
fcoms
jmp
push
xor
ret
in
or
mov
cmpsl
lret
cltd
cli
outsl
mov
inc
shr
vmread
inc
add
mov
xlat
push
push
mov
mov
jnp
lods
xor
mov
shlb
pop
jmp
xchg
jo
pop
inc
xchg
or
insl
push
jmp
loopne
test
iret
mov
cmpsl
mul
sbb
push
sbb
sahf
test
lods
int3
bound
hlt
sbb
sub
cmp
in
mov
add
xor
cmp
sbb
icebp
loopne
pop
lcall
pop
outsl
push
frstor
adc
pop
xor
or
jge
pop
daa
mov
mov
push
pop
add
mov
mov
fsubrl
fstpt
mov
jge
and
sub
into
inc
mov
xchg
movntps
aaa
add
and
into
in
xor
fs
inc
xor
pop
aad
adc
mov
xchg
imul
push
add
push
dec
fistl
and
sub
push
mov
mov
jg
mov
mov
rorl
and
aad
mov
sahf
data16
pushf
sbb
mov
aas
daa
xor
addl
stos
adc
fcompl
stos
inc
xchg
in
mov
in
out
loop
scas
aas
sbb
push
gs
ret
sti
xor
out
and
mov
cmpsl
and
push
or
in
hlt
pop
adcl
out
js
and
mov
sbb
js
das
dec
fucomp
into
mov
push
cmp
lods
cmpsl
push
sbb
clc
jge
xor
fdivrl
rorl
imul
adc
popa
and
dec
add
mov
pop
in
xor
xchg
push
lret
subb
cli
cmpsl
in
push
pop
xor
and
dec
test
scas
add
xor
sub
xor
mov
jl
mov
cmpb
jno
gs
dec
sbb
into
jecxz
dec
push
imul
fwait
xlat
push
arpl
push
shlb
push
push
outsl
mov
sub
movsb
push
sbbl
xor
cld
mov
mov
cmc
faddp
andl
adc
mov
mov
int3
aad
sub
adc
cmpsl
mov
movsl
iretw
xor
imul
rorl
mov
mov
pop
jnp
mov
scas
xor
rorl
mov
push
ljmp
sbbb
push
mov
inc
sti
bound
lahf
mov
mov
xchg
pop
add
sbb
mov
or
mov
and
aam
fadds
popa
call
mov
xor
xor
push
testl
ror
in
or
cli
sbb
sbb
mov
and
test
xchg
mov
jb
divl
pop
daa
mov
in
or
jmp
mov
into
push
enter
inc
lret
sbb
orl
sbb
sub
stos
rorl
and
loop
cwtl
insl
pop
iret
xlat
cld
or
or
mov
clc
es
push
loop
lods
aaa
jmp
cmp
mov
xchg
lcall
divb
push
shlb
or
push
push
movsb
bound
and
pop
xor
int3
cmpsb
les
sub
mov
repz
lahf
sub
add
not
stos
mov
sub
out
sar
aam
or
rcrl
fsubs
push
mov
repnz
movb
icebp
dec
data16
cmp
stos
xor
mov
add
add
push
inc
popl
jns
loope
or
cmpsl
pop
enter
lea
cmpsl
incl
xor
popa
cmpsl
adc
xor
out
mov
add
pop
mov
and
lods
inc
jmp
gs
shll
adc
loope
outsb
enter
lea
shlb
ret
cmpsl
mov
push
aad
mov
es
or
enter
adc
inc
test
das
mov
stc
mov
cmpsl
pop
sahf
add
sub
das
add
inc
xor
test
pop
cmp
mov
add
aas
fisttps
mov
xchg
adc
sub
sub
fistpll
cmp
fwait
ljmp
fsubrs
jmp
leave
sbb
mov
cltd
je
scas
stc
mov
inc
mov
imul
dec
in
test
jno
repz
lea
addl
fsubrp
sarl
stos
mov
rorl
lret
adc
test
mov
test
mov
add
das
fwait
cmp
inc
jbe
out
pop
ret
outsl
mov
bound
mov
sti
and
je
xchg
add
cld
xchg
lods
pop
cmc
loop
jecxz
sbb
mov
lret
mov
mov
shlb
cmp
xchg
mov
mov
or
sbb
lods
or
dec
lods
push
dec
mov
or
loop
mov
pop
cmp
lea
pop
inc
sbb
mov
lea
inc
inc
mov
push
cmc
or
and
scas
in
pop
dec
inc
or
mov
mov
es
fcmovnu
xchg
lea
add
sub
ret
push
rcll
divl
dec
lahf
xchg
pop
and
jmp
daa
jae
lcall
pop
sbb
inc
aas
xor
dec
xor
rorl
add
imul
mov
andl
repnz
jg
loope
push
dec
mov
lret
mov
loope
enter
mov
xchg
stos
inc
iret
xlat
sub
addb
inc
jp
mov
xchg
push
mov
xchg
and
int
mov
pusha
jle
and
pop
xchg
cmpsl
mov
mov
bound
lea
lock
mov
sub
add
fdivl
cmc
cmp
scas
mov
add
int3
lret
or
pop
inc
repnz
movsl
int3
repz
mov
xchg
jecxz
or
xchg
pop
ss
push
mov
imul
add
mov
fistl
mov
je
jg
inc
loopne
adc
icebp
syscall
vminps
out
test
adc
ljmp
xchg
fcmovnu
xchg
mov
push
cmp
int3
or
mov
cmp
fninit
mov
mov
push
icebp
shrl
dec
fldt
mov
in
or
daa
sarb
out
sbb
pinsrw
push
movsb
adc
push
xchg
jns
ss
into
rol
scas
mov
mov
push
jmp
ds
inc
lret
or
sarb
loope
enter
aam
les
aam
sarb
in
pushf
je
pusha
int3
bnd
xchg
aam
jo
in
bound
frstor
out
rcrb
aaa
loopne
mov
enter
repz
loop
addl
aam
xor
into
or
xor
pop
ja
test
popa
icebp
sub
mov
or
mov
and
clc
orps
or
ret
push
shrl
or
popf
or
jo
xor
movl
jmp
sbb
sub
add
add
mov
mov
xor
iret
negb
lods
push
inc
xchg
cmp
cmp
push
dec
adc
jnp
out
and
fisubrl
push
jno
jmp
and
pop
xchg
aaa
call
sbb
sbb
mov
bound
jmp
pop
test
mov
icebp
das
lret
xchg
cmp
sbb
pop
loope
loop
push
fnstsw
andb
mov
and
xchg
pop
repz
in
push
imul
loop
into
int
repnz
mov
cwtd
in
gs
xor
repz
mov
stos
inc
add
jp
cmpsl
mov
cmp
outsl
mov
mov
xor
fbstp
fnsave
adcb
nop
movsb
repz
or
adc
jne,pt
rcrb
or
push
dec
inc
shlb
mov
mov
ljmp
mov
add
loop
into
lahf
and
fnsave
add
fnstcw
sub
mov
sbb
fadds
fsubp
sub
sbb
lret
adc
xorb
js
jp
fldcw
loop
sub
sbb
sti
or
or
pminsw
in
lds
xchg
mov
scas
xchg
popa
pop
dec
inc
addb
lods
and
imul
fisubl
mov
dec
xor
and
jo
outsb
cmpsl
fcmove
lahf
pop
or
shlb
stos
jo
dec
sbb
dec
fwait
shrl
inc
mov
inc
jecxz
aaa
add
inc
movzbl
testl
js
adc
add
addr16
mov
sbb
jb
subl
fisttpl
fwait
cmpsl
add
fnsave
xchg
mov
outsl
in
inc
push
or
cmp
or
mov
lock
xor
sbb
leave
or
push
xchg
data16
cmpsl
adc
std
sbb
ret
call
enter
andl
into
jnp
movsb
aad
lock
dec
stc
jle
aaa
sbb
lea
jp
idivl
mov
cs
mov
xchg
ret
mov
push
mov
inc
inc
mov
mov
nop
push
xchg
icebp
decl
hlt
add
cmp
cmp
and
dec
add
repz
test
or
inc
and
inc
js
xchg
pop
mov
inc
mov
sbb
insl
sti
lods
push
push
push
pop
adc
popa
jns
int
clc
lret
cmovs
imul
pop
adcb
jmp
into
mov
push
xor
add
pop
inc
mov
out
push
insb
sbbl
stos
mov
scas
mov
push
cmp
mov
out
cld
jge
leave
xchg
and
xchg
and
and
repz
jne
jmp
lods
imul
ds
cmp
xor
adc
push
mov
fldcw
ss
lahf
mov
in
shlb
cmp
inc
in
jecxz
test
cltd
cmc
mov
xlat
push
xchg
xorl
int
scas
mov
arpl
push
mov
arpl
add
adc
mov
int3
sbb
sub
sbb
mov
pop
and
mov
push
popl
pop
mov
xor
or
or
xor
hlt
or
out
cmp
mov
mov
mov
fisubrs
dec
movsb
fidivrs
out
test
mov
add
jbe
jns
fistpl
shlb
rcll
mov
popa
aam
xor
rcrl
or
out
cltd
roll
outsl
lock
stos
push
fwait
or
xor
movsl
mov
xchg
and
out
pop
es
inc
mov
lea
fstl
pushf
xor
dec
repz
aaa
leave
aas
inc
push
pop
pop
cli
dec
push
scas
movl
mov
fwait
mov
test
mov
ror
aaa
les
aaa
xorb
jl
stos
addl
and
out
mul
je
mov
adc
cmp
mov
inc
mov
xchg
and
push
pop
and
fldenv
rol
cmpsl
cmovno
inc
aaa
aaa
mov
mov
lock
mov
add
push
in
outsl
cltd
popa
lret
mov
popa
inc
ret
jb
add
jns
fildl
rcll
inc
xor
insb
mov
lods
clc
aaa
lea
jae
inc
adc
push
je
or
inc
mov
lcall
fmull
xchg
js
ljmp
in
or
and
repz
mov
cmp
or
je
xchg
mov
add
lcall
xor
call
push
pop
sti
mov
cli
inc
push
rcr
pop
jecxz
mov
shrl
sub
test
in
insb
fisubrl
ss
xchg
xor
shll
xor
in
mov
add
cld
sub
jne
ss
mov
lret
xor
add
mov
inc
mov
dec
sbb
imul
push
push
mov
add
xorb
or
test
sub
mov
sysenter
push
push
aaa
pop
mov
push
movsb
jnp
dec
fwait
repz
loop
add
loop
movsb
mov
lret
rorl
aaa
in
stc
ds
sbbl
push
sub
rcll
push
movsb
add
jae
dec
adc
cwtl
push
and
xchg
jle
sub
jnp
mov
jmp
ljmp
movsb
cmpsl
call
xchg
aad
pop
sahf
mov
int
add
ficoms
outsl
stc
loopne
adc
inc
xor
sbb
outsl
mov
je
cmpsl
inc
mov
push
ret
clc
xlat
cld
add
mov
idivl
inc
shl
imul
sbb
ss
mov
cmpsb
cmp
shlb
push
push
shlb
movsl
bound
push
ficomps
inc
sahf
movsb
pop
xor
and
loope
movsl
dec
mov
orb
jle
cmpsl
scas
pushf
sbb
sub
sbb
pop
mov
daa
fistpll
xchg
test
push
pop
mov
pop
je
sbb
cli
xchg
aas
push
lods
enter
icebp
adc
adc
dec
nop
pop
cmp
movsl
inc
push
in
mov
cmpsl
and
out
xor
ss
mov
hlt
les
js
popa
push
cmpsl
push
cld
xchg
xchg
xchg
out
sbb
sbb
adc
data16
mov
mov
es
inc
mov
mov
testl
out
mov
sbb
shrd
lods
enter
orb
push
dec
ret
pop
cmp
repnz
mov
popa
cmpsl
mov
inc
xchg
or
mov
in
movsb
xor
imul
and
outsb
lea
add
jmp
inc
outsl
fisubl
pop
jns
mov
cmp
add
adc
sub
xor
push
sar
pop
sbb
pusha
arpl
out
cli
xchg
or
add
rorl
gs
jmp
pop
mov
cmp
out
pop
mov
adc
clc
lods
sarb
xchg
jp
test
roll
sub
les
arpl
out
imul
out
sbb
push
adc
fwait
das
pop
lock
in
xor
mov
cmpsl
popa
loope
adc
adc
xchg
ja
clc
repnz
push
roll
mov
add
cmp
or
out
mov
cwtl
push
mov
push
xchg
in
nop
sub
xchg
cmp
aaa
sub
shlb
fstl
cs
xchg
lahf
or
mov
cld
fsubp
push
cmpsb
sbb
jb
movsb
ret
dec
aaa
mov
push
out
aad
aas
push
dec
pop
mov
and
inc
das
pop
or
repnz
sub
cld
mov
add
pop
loope
xchg
inc
arpl
and
cmp
mov
les
mov
or
iret
mov
arpl
js
xor
mull
xorb
pop
dec
aam
outsb
push
into
into
or
adc
dec
pusha
xor
outsl
sub
cmpsl
out
sti
jno
scas
jb
sub
addb
gs
and
das
mov
ret
pop
pop
inc
dec
into
mov
test
jnp
imul
shll
sub
fisubrl
inc
ja
fcmovnbe
xor
ret
das
das
adc
cmpsl
stc
xor
pop
and
cmpsl
inc
test
mov
mov
or
scas
arpl
xor
das
out
inc
add
xchg
in
daa
or
lret
sbbl
gs
pop
ss
inc
xchg
das
add
fidivs
fimuls
cmp
shll
cmp
sub
leave
or
dec
inc
sub
or
lret
mov
arpl
repnz
popa
mov
loopne
xor
xchg
ljmp
aaa
or
adcl
mov
adc
sub
mov
mov
cmpsl
and
jno
add
fs
xor
lods
out
pop
btc
push
jl
push
jns
mov
xchg
cs
sub
mov
inc
cmpsl
dec
shll
mov
ret
in
sahf
addb
incl
les
into
shl
loope
pusha
out
add
ss
sbb
push
inc
test
cld
pop
hlt
or
mov
scas
scas
call
ret
in
jg
cmpb
or
sbb
sbb
stc
jne
jmp
adc
sahf
xorb
iret
arpl
pop
xchg
mov
dec
scas
pop
or
sub
mov
ret
push
jne
dec
pop
es
popa
imul
fld
shlb
or
cmpsl
sbb
in
addb
sub
fcomi
lods
outsb
xor
mov
jmp
cmp
mov
pop
andl
xor
fwait
push
mov
insl
loop
popa
cmc
out
cs
push
stc
inc
cmpsb
lcall
icebp
xor
xor
xchg
insl
sar
pop
fnstenv
dec
mov
and
les
test
je
pop
repnz
or
in
inc
push
mov
dec
sub
aad
test
mov
inc
mov
sub
cwtl
outsl
ljmp
repnz
psllw
jl
out
es
or
mov
mov
aaa
xchg
sti
nop
or
aaa
push
push
aaa
repnz
push
add
sbb
push
push
sti
and
jmp
or
sbb
cmp
and
std
pop
test
and
push
test
mov
cmp
sbb
push
lds
cmp
orb
aam
fldt
out
inc
nop
mov
mov
mov
ficompl
sbb
push
push
add
imul
add
or
shl
imul
sub
mov
xchg
das
cmp
lods
push
mul
mov
pop
mul
cmpb
int
pop
or
cmpsl
sub
dec
xor
xchg
mov
jo
jmp
push
pop
mov
or
sbb
dec
adcl
add
mov
push
lods
mov
loope
push
ljmp
adc
and
push
add
sub
rcr
xchg
mov
lds
sbb
lret
jae
orl
and
shlb
xor
stos
fisubrs
inc
cmp
das
out
sarb
jmp
or
loopne
daa
mov
jns
mov
in
ret
negb
mov
cmpb
dec
out
aas
test
mov
sub
mov
les
mov
mov
into
fldl2e
or
xor
rorl
repnz
stos
and
inc
mov
out
push
sti
aas
out
imul
sub
lock
repz
test
les
xchg
nop
sbb
sbb
out
push
rolb
dec
incb
fwait
lea
fcmovnu
mov
movq
push
inc
mov
cmp
ljmp
and
xor
adcl
inc
mov
xor
addl
add
xor
mov
cmp
add
push
rcr
jge
add
sarl
mov
cmpsl
mov
scas
jae
mov
fndisi(8087
out
xchg
cmp
sbb
dec
mov
cmpsl
mov
mov
mov
aas
xchg
ljmp
mov
mov
push
add
stos
cmp
and
sbb
xchg
ds
xor
test
cmpsl
inc
ror
sbb
mov
repz
subb
mov
aas
xorb
call
lret
repz
or
or
dec
outsl
popa
xor
imul
int3
pop
cmpsl
data16
jo
sub
mov
and
xor
dec
ds
in
out
pop
scas
ret
and
out
pop
xchg
or
xchg
lcall
daa
divl
mov
dec
popa
pop
test
and
je
stos
adc
or
jns
dec
fildl
mov
sub
movsl
pop
jbe
and
add
xchg
push
and
ret
add
lock
dec
jmp
in
mov
pop
mov
adc
mov
jg
or
sti
in
ss
jns
mov
pop
cmpsl
mov
movsb
cmpsl
int3
stos
aas
inc
int3
ret
push
adc
push
mov
mov
push
outsb
mov
ret
mov
inc
and
sub
mov
sub
xchg
cmp
mov
pusha
jle
inc
sub
sbb
sub
lea
cld
sahf
call
inc
repnz
push
sbb
loope
cmp
xchg
das
les
mov
or
test
lods
sub
inc
cmpsl
jg
ljmp
pusha
aad
push
sti
xor
hlt
fcompl
push
push
or
lcall
fidivl
add
ljmp
sub
push
xchg
mov
test
add
out
mov
add
add
imul
into
adc
push
xor
popf
pop
clc
sbb
pop
in
outsb
fwait
xor
xchg
or
sahf
add
push
sub
jno
push
jg
push
cmp
mov
lock
roll
adc
mov
push
sbb
dec
test
mov
in
sbb
and
fldl
push
clc
xor
lods
push
aad
dec
call
rolb
sbbb
cmp
in
and
andb
out
fcmovnbe
mov
sub
std
orb
ret
aam
inc
das
aad
mov
pop
sub
dec
mov
insb
mov
adc
mov
lods
aam
inc
or
shl
movsb
in
push
inc
std
mov
dec
jnp
sub
mov
dec
mov
loop
sbb
and
add
xchg
xchg
pop
mov
test
hlt
and
mov
dec
mov
shll
add
or
mov
das
aaa
dec
mov
mov
shll
xchg
hlt
pop
jb
sub
test
bound
sbb
or
cld
loop
rcll
cli
cld
push
orb
rcrl
iret
clc
inc
cmp
ret
jbe
loopne
fs
outsb
inc
cmp
in
lcall
imul
outsb
push
ret
sub
xor
jae
jmp
mov
mov
into
sbb
int3
arpl
orb
add
data16
dec
xorb
into
lret
jp
push
aaa
sub
cmp
stos
jecxz
lods
leave
xor
stos
cmp
add
enter
xorb
stos
add
in
or
enter
xor
in
hlt
add
mov
ffree
mov
cmp
loopne
loopne
insb
ljmp
or
test
lea
loop
dec
mov
dec
push
mov
or
adc
mov
adc
cmp
mov
sbb
lahf
pop
xchg
dec
mov
bound
cmp
or
int
xchg
mov
out
movups
jns
rol
and
in
add
inc
arpl
in
movsb
insb
sbbl
inc
inc
sbb
test
test
mov
or
add
or
into
add
jge
outsb
add
in
fwait
into
push
push
in
or
shrb
movsb
add
cmpl
mov
pop
imul
xorb
mov
sbb
mov
jmp
inc
sbb
push
repz
leave
pusha
push
mov
xor
and
mov
sbb
out
adc
sbb
add
int
xor
mov
addr16
push
xchg
jb
lret
xchg
cmpsl
sbb
inc
mov
imulb
mov
and
mov
fwait
sub
inc
mov
jbe
into
xchg
pop
pop
loopne
push
or
adc
sbb
xchg
ret
pop
adcl
push
jmp
nop
fidivl
fmull
inc
bound
xchg
enter
jg
cmp
jo
ret
into
nop
add
leave
pop
xor
movsl
jg
jnp
dec
mov
cwtl
rorl
hlt
xor
andb
inc
out
mov
and
and
fwait
cmp
fildl
in
jg
sub
cpuid
sub
cmp
into
mov
jno
push
sarb
jae
inc
out
push
vcvtsd2si
mov
out
out
test
mov
or
loopne
push
cmpsb
lods
insb
cmc
dec
leave
fcmovnb
and
subb
lret
xor
loopne
cmp
xchg
mov
sarb
dec
mov
lret
or
jae
sub
xchg
cmp
jle
inc
or
lret
sahf
fwait
or
xor
push
popa
nop
and
lcall
cmp
ret
incb
iret
push
add
push
push
addb
shl
jecxz
btr
ret
mov
repnz
lcall
iret
jl
cmpsl
in
nopl
xlat
and
andb
adc
sub
shll
pop
iret
mov
mov
or
fcompl
jb
dec
movsb
sti
imul
jg
std
push
divb
jg
fnstsw
cmp
push
fidivrl
push
lret
pop
subl
cmpsl
in
leave
pop
xor
fidivrl
repz
inc
pop
jmp
cmp
cltd
add
push
pop
in
mov
mov
ljmp
xchg
fisubl
daa
mov
dec
ss
test
movsb
or
jnp
int3
ja
sub
cwtl
stos
aad
xor
cmp
leave
ds
mov
add
pop
inc
add
sahf
adc
pushf
lret
or
insl
rorl
dec
mov
mov
sub
add
mov
imul
pop
inc
pop
or
dec
jne
andb
xor
iret
xlat
xchg
fnstenv
ja
push
fidivl
add
mov
mov
push
inc
add
ljmp
movsl
mov
or
sarb
add
mov
or
ret
add
push
sti
push
sti
test
out
push
shlb
mov
fidivs
mov
ss
jne
xchg
enter
pop
mov
mov
dec
loopne
adc
repnz
mov
xchg
testb
pop
es
mov
pop
inc
data16
icebp
pop
pop
data16
movsb
or
lods
xor
out
and
and
lods
adc
js
cmp
mov
mov
cli
mov
cs
xor
orb
mov
inc
xlat
insb
push
out
ja
adc
rol
test
xor
jge
jecxz
cmpsl
cmp
sbb
in
mov
fnstcw
jno
mov
dec
clc
test
fdiv
cmp
cwtl
mov
jb
shl
add
movsl
xchg
je
aaa
add
js
cmpsl
int3
cmp
mov
jns
add
test
roll
mov
std
lods
xor
mov
sahf
pop
lods
adc
sub
lds
ficoms
mov
pop
lcall
mov
daa
leave
sbb
adc
scas
das
mov
movsb
dec
inc
aam
scas
cmp
test
mov
cwtl
shlb
push
fnstcw
in
mov
mov
dec
mov
xlat
in
in
test
cwtl
add
sub
mov
daa
test
cli
outsl
or
je
pusha
dec
lret
and
lret
fmull
xor
jo
int3
adc
mov
inc
cmpsl
addr16
mov
or
jmp
push
jmp
mov
je
xchg
shll
ret
int3
or
adc
dec
ret
lret
push
mov
jmp
adcb
shrl
push
sahf
xchg
outsl
add
test
testl
int3
lods
fisubs
mov
pop
insl
xchg
in
das
and
jl
add
mov
dec
ret
cs
scas
mov
orl
push
and
mov
mov
out
sbb
or
add
iret
cwtl
pop
jbe
push
mov
sbb
pushf
outsl
bound
add
dec
jne
dec
int
inc
jg
ds
popf
push
add
pusha
jo
mov
rorl
and
sbb
xchg
jmp
pop
movsl
lret
sub
and
dec
push
hlt
mov
sub
cwtl
xor
mov
mov
int3
pop
repz
neg
pop
ds
xlat
outsl
adc
dec
fwait
xchg
scas
xchg
or
stos
jmp
inc
popf
jne
inc
or
in
stc
iret
add
ret
hlt
je
fdivl
movsb
stos
stos
loop
push
jbe
jge
gs
stos
mov
lahf
adc
imul
jbe
outsl
mov
rcll
pop
or
stos
daa
orb
test
sub
pop
dec
push
and
mov
mov
add
test
int
stos
push
ds
fisttpll
fisubrs
xlat
cmc
cs
arpl
xor
and
lret
add
out
scas
mov
bound
sbb
in
push
xchg
xor
xor
mov
shll
inc
mov
aam
add
les
mov
repz
adc
repnz
jecxz
movsb
dec
cmc
test
or
clc
jnp
xor
enter
loop
inc
lret
add
loop
fwait
out
or
mov
data16
mov
mov
or
cmpl
dec
ds
sub
leave
sahf
or
mov
das
push
pop
add
roll
jl
mov
addr16
mov
ret
movsb
push
out
push
or
mov
pop
push
sarb
pop
jns
push
mov
call
lock
push
push
cmp
in
xchg
ds
cmp
inc
ljmp
add
imul
shl
inc
inc
ud0
arpl
jecxz
jne
adc
ljmp
ficomps
sub
push
push
lahf
or
mov
xorl
int3
sub
sbb
addr16
or
dec
dec
push
jb
lret
mov
cmp
dec
in
add
or
dec
in
or
insl
sti
add
jne
dec
dec
mov
rcrb
lods
ret
in
nop
repz
das
cld
add
stc
cli
out
ds
mov
stc
mov
dec
jne
or
or
movsl
repz
lods
adc
xorb
push
dec
outsb
mov
dec
mov
movsl
or
mov
jmp
mov
repz
cmp
movsl
in
cmp
gs
test
mov
sub
jle
and
lock
or
stos
cld
mov
andb
aam
mov
int
pop
test
xchg
jg
enter
or
loope
sbb
cmp
xchg
je
push
lods
cmpsl
mov
xor
cmp
sub
clc
pop
push
mov
sbb
nop
outsl
xchg
sbb
aaa
jg
in
into
sbb
inc
xchg
xchg
xor
mov
lcall
cmpsb
fnstenv
adc
lret
mov
repz
cmc
mov
pop
sahf
test
jmp
mov
or
aas
vzeroupper
mov
cmpsl
outsl
mov
jns
push
xor
sbb
hlt
lds
imulb
imul
xchg
add
inc
lret
mov
jb
imul
cli
cltd
ret
pop
cmpsl
addr16
mov
addr16
aaa
jnp
mov
pop
mov
jns
jo
push
pop
mov
inc
or
xchg
mov
jae
dec
mov
dec
iret
jo
xor
ds
in
stc
in
mov
xor
sbb
fisttpl
dec
mov
les
lret
or
lahf
push
insl
iret
ds
push
and
stos
mov
mov
loop
hlt
and
mov
outsl
rorb
js
aam
push
mov
dec
jmp
add
cwtl
daa
sti
subl
and
sbb
sub
or
aaa
aad
stos
rorl
nop
sub
xchg
outsl
jle
leave
pop
popf
jg
jecxz
xchg
dec
loope
outsl
inc
xchg
fsubl
push
or
jle
fisubl
mov
sub
xor
psrad
les
bound
xor
cld
sub
in
mov
ds
mov
and
xchg
cmp
sbb
je
inc
xor
popf
xlat
and
std
mov
rorb
fs
cmp
and
or
imulb
dec
in
cmpsl
push
dec
addr16
push
pop
sbb
cwtl
adc
and
inc
popf
addr16
rorb
xor
or
pop
push
pop
mov
mov
pop
orl
rcll
jne
pop
dec
mov
ljmp
mov
std
push
jmp
into
inc
pop
dec
out
sub
hlt
ljmp
mov
roll
xor
sar
stos
xchg
ljmp
add
mov
subl
sbb
xchg
mov
or
mov
dec
in
add
cmpsb
xchg
sub
addb
mov
mov
lock
rol
inc
into
sub
mov
mov
popf
or
and
cmp
cmp
outsl
mov
dec
inc
out
push
sbb
sbb
mov
push
std
sbb
or
push
aaa
out
shrb
add
int
hlt
iret
sub
sub
sbb
push
push
ret
repz
ret
adc
dec
mov
jns
pop
sub
pushf
xor
iret
fiaddl
jae
cmp
cmpsb
popa
xor
mov
or
fidivl
xchg
test
push
jg
jmp
outsl
jnp
scas
xor
jno
inc
punpcklwd
mov
dec
les
or
xchg
cmp
dec
or
sbb
mov
push
loop
lahf
sbb
movsb
jecxz
cmpsl
out
pop
test
daa
and
xor
adc
sarl
dec
dec
dec
add
dec
sub
or
int3
in
sbb
addb
push
jo
outsb
bound
push
mov
jge
shll
das
xor
repnz
fnstenv
ljmp
pop
push
ljmp
test
push
out
push
fimuls
cmpb
outsb
lcall
das
or
data16
and
enter
mov
addl
jmp
adc
or
les
ss
inc
pusha
mov
in
dec
sub
or
jns
fcoms
cmpsl
cltd
lcall
popf
adc
subl
sub
test
mov
jg
dec
xchg
test
cmpsl
cmp
dec
lret
adc
pop
add
mov
imul
push
xor
mov
movsl
mov
scas
adc
mov
cmpsl
outsl
jmp
cmp
xor
sbb
mov
cmc
and
push
cltd
sahf
pusha
xor
adc
pop
push
lahf
mov
das
mov
and
and
add
push
ret
add
stc
andb
pop
xor
scas
push
mov
enter
imul
insb
pop
push
jp
or
imul
lahf
jnp
lods
xor
aas
shll
mov
push
xor
ja
mov
mov
push
pusha
push
inc
and
jmp
or
fs
stos
mov
lret
jnp
mov
mov
add
popa
insb
and
ret
pop
test
dec
pop
rorb
lods
push
ljmp
fiaddl
mov
mov
stos
and
mov
adcl
pop
xchg
fadds
into
push
pusha
out
adc
daa
and
sub
sbb
push
fistpll
adc
gs
mov
jns
push
aad
adc
xchg
popl
xor
mov
push
flds
adcb
rcrb
lret
add
cli
or
dec
js
jne
pop
xchg
mov
scas
adc
pop
pop
sub
mov
cmpsl
test
shrb
inc
xchg
inc
mov
mov
xor
out
push
mov
jmp
sub
push
je
jl
inc
fldt
xor
lret
insl
pop
aad
cmpsb
ret
mov
jmp
jmp
scas
and
or
lods
lcall
dec
jns
stos
andb
lcall
js
add
fsubs
add
dec
imul
lock
mov
sub
mov
or
mov
outsb
dec
andb
push
add
xlat
jno
lea
lods
mov
test
mov
adc
lods
and
cmp
les
sti
sub
ljmp
dec
mov
mov
iret
mov
mov
cmc
push
or
cld
adc
add
vmovq
hlt
fldenv
popl
stos
je
mov
ljmp
push
pop
das
cmp
xchg
cltd
mov
xor
pause
cmp
xchg
movsl
lea
and
shlb
add
or
popl
add
adcl
movsb
hlt
push
pushf
fbld
lods
outsb
pop
adc
sbbb
out
fadd
jecxz
push
subl
or
hlt
testb
cmpsb
jae
aam
daa
fstp
jle
orl
test
jecxz
scas
insl
jge
je
mov
or
roll
jne
lods
sbb
mov
icebp
cs
jl
stc
xchg
jecxz
jp
imul
push
dec
iret
xor
mov
and
sbb
jb
xchg
xor
popa
les
push
scas
or
movsl
sub
push
int
add
dec
xchg
push
sbb
mov
jae
inc
mov
cmpl
rolb
sub
in
mov
jecxz
pop
or
mov
lods
xorb
lods
sub
push
in
xor
mov
pushf
xchg
add
xlat
lods
mov
divl
gs
jl
jnp
loop
adc
jne
adc
jecxz
in
and
add
shlb
in
rol
andl
add
enter
enter
enter
enter
scas
cmpsl
inc
in
adc
loop
popf
sbb
cmpl
sbb
inc
push
jne
inc
cmpsb
jl
dec
add
lea
sbb
cli
lock
adc
mov
cmpsl
mov
xor
sbb
mov
xor
cmp
lock
jl
andl
rorb
imul
pop
push
mov
test
xchg
push
push
imul
xor
mov
add
shrb
inc
xor
lret
clc
mov
sub
add
mov
push
test
loop
test
inc
fs
mov
xor
mov
nop
sub
lods
add
cmpsl
and
inc
cld
js
xor
mov
mov
dec
mov
lret
mov
jecxz
in
mov
cli
or
adc
lret
in
sub
ret
stc
inc
stc
es
and
stos
in
sub
test
add
inc
mov
inc
push
pop
subb
mov
and
gs
pop
out
insb
je
add
test
xchg
xchg
std
movsb
or
mov
push
in
fwait
cmpsb
sub
mov
pop
insl
ljmp
push
mov
jg
push
repnz
jne
mov
shl
cmp
les
add
ljmp
add
xchg
add
testl
cmpsl
mov
mov
push
movsb
lret
push
push
jno
jecxz
inc
popf
scas
cmp
add
xor
add
lret
lds
roll
das
add
aas
inc
aas
dec
sbb
add
imul
mov
in
loopne
jge
lret
out
cld
sub
pop
int
adc
fcompl
push
push
adc
je
xor
ret
fcomps
mov
sub
jae
dec
in
fwait
dec
out
mov
xchg
lret
or
xchg
in
add
rcrb
pop
xchg
stc
scas
sbb
test
movsb
loopne
mov
lods
cltd
xor
or
es
push
rcr
xchg
daa
icebp
push
mov
loop
into
shrb
inc
adc
dec
cli
fwait
cmp
sbb
clc
adc
add
push
cmpsb
out
aam
sub
xchg
mov
sub
popl
or
push
sbb
adc
das
push
dec
add
addl
loope
pop
movlps
hlt
mov
psubb
inc
lret
inc
jp
andb
ljmp
add
int3
in
ret
xchg
sub
and
add
pushf
mov
push
cmpsl
mov
pushf
dec
cmp
mov
daa
sbb
loope
jmp
jecxz
or
bound
shlb
lret
mov
lds
push
mov
lock
inc
in
or
aam
daa
mov
and
push
repnz
in
cmp
adc
lret
dec
jo
push
add
xor
mov
dec
sbb
cmp
mov
outsl
push
mov
rolb
mov
and
jmp
push
imul
lea
or
xor
mov
sbb
dec
imul
cmpsb
shr
fs
jmp
fisubrs
mov
je
loop
pop
sub
insb
stos
rcr
pop
dec
repnz
cmp
push
mov
adc
in
leave
cmp
push
adc
xor
pop
sbb
rep
mov
outsl
sub
call
sti
std
pop
mov
push
js
add
inc
push
incl
mov
pusha
cs
dec
imul
les
dec
cmpsb
push
out
cmp
adc
cmpsl
in
inc
mov
hlt
gs
int3
mov
fistpll
mov
jmp
fst
xorl
arpl
mov
or
iret
shrl
mov
jg
lcall
test
leave
mov
out
or
cmpsb
mov
sbb
adcb
adc
ret
mov
add
xor
mov
sub
xor
data16
add
push
add
and
repz
mov
pop
mov
pop
sbb
inc
and
cmp
out
xor
or
fildl
lret
mov
push
cmpsl
ret
xchg
stc
subb
das
icebp
sbb
pop
jb
movsb
mov
subb
repnz
lret
fsubs
push
add
out
pop
and
jmp
mov
mov
push
sub
idiv
jbe
out
mov
add
fsubrp
add
xor
mov
inc
cmp
jle
lods
xchg
test
fdivrl
cmpl
lods
jae
cmp
xor
inc
jae
loop
ja
hlt
mov
adc
and
pop
sub
push
les
ljmp
movsb
mov
aam
leave
pop
adc
add
icebp
push
dec
xorb
cmp
repz
add
adc
gs
fsubrl
push
mov
xchg
mov
movsb
sti
sbb
call
mov
cld
sub
rclb
xchg
mov
aam
cmp
andb
jl
in
push
sti
scas
cmpsb
aam
push
pop
mov
adc
mov
cmp
pop
mov
dec
push
cmp
rcll
movb
out
add
incl
push
xchg
mov
cmp
mov
or
mov
xor
jle
addb
add
push
cmp
cld
mov
in
fs
mov
cmpsb
pusha
adc
cmpsl
movsl
das
sub
rolb
xchg
ja
imul
in
mov
lahf
and
mov
mov
pop
or
adc
xchg
mov
add
test
mov
cmp
int3
movsb
int3
sub
lret
mov
adc
shrl
xchg
loopne
test
data16
imul
mov
es
pop
mov
in
inc
sbb
fists
push
lods
aas
in
stos
xor
xlat
push
pop
or
lock
pop
mov
xor
pop
mov
mov
hlt
mov
cmp
gs
push
xchg
subl
xor
mov
lea
aaa
sbb
stos
jp
stc
pop
or
mov
vcmpsd
loopne
mov
in
stos
lret
cmp
cmpsl
pop
in
push
push
jno
and
dec
mov
pop
mov
pop
mov
jb
movsl
pushf
sub
mov
jae
aaa
dec
mov
adc
mov
fwait
mov
andnps
jmp
in
sti
adc
addb
in
roll
loopne
cmpb
lret
jae
xchg
outsl
cmp
or
xchg
lret
jecxz
jo
mov
ret
or
in
sbb
lea
leave
jecxz
push
stos
mov
jmp
in
push
and
pop
cmp
pusha
lock
aas
and
sub
add
cmp
xchg
push
and
lret
mov
ds
mov
mov
add
mov
es
mov
lock
sub
inc
sub
mov
cmpsl
mov
or
dec
gs
ds
shll
adc
addl
adcb
in
jne
add
cli
scas
jg
lods
frstor
xor
rorl
iret
vcomiss
adc
xor
push
stc
mov
gs
mov
push
mov
movsl
xor
mov
outsl
jnp
push
push
pop
mov
fistps
xor
xlat
mov
jae
xlat
mov
pop
mov
cmpsl
fsubp
in
sahf
or
xchg
out
jg
jecxz
push
inc
adc
jb
sbb
jb
cli
add
xchg
sbb
jmp
out
jae
xchg
jmp
aas
movsb
sbb
jo
and
in
in
repz
punpcklbw
add
outsl
dec
aam
xor
adc
push
leave
adcl
in
addl
loopne
das
lahf
mov
in
enter
mov
testl
mov
dec
jae
push
mull
int
cmp
mov
adcl
rclb
les
in
sub
lods
jp
add
jge
sub
popf
add
cmpsl
mulb
mov
hlt
aas
subb
hlt
and
loop
mov
sub
lods
call
sub
insb
out
pushf
hlt
jns
add
jmp
imul
sub
fnstsw
cli
dec
mov
push
jg
repnz
inc
inc
stos
xorl
cmpsb
in
out
sub
xor
jmp
mov
daa
mov
dec
jmp
push
jne
or
sbb
pop
push
ss
xchg
sbb
lods
xor
loope
into
xor
mov
negl
data16
rorl
mov
inc
invd
jl
mov
adcl
mov
pusha
adc
cmp
xor
add
es
daa
aaa
pop
cmpsl
scas
loop
add
adc
xchg
inc
dec
fwait
xchg
and
push
aad
xchg
mov
loope
ret
in
jnp
mov
repnz
movsl
in
in
jle
in
test
mov
or
xor
inc
into
xchg
xor
stos
mov
fsubl
xor
cli
test
xorb
sub
andb
inc
jle
shll
lods
cmpsl
sub
mov
or
stc
pop
xchg
and
mov
cmp
add
push
stos
mov
xchg
push
xchg
xor
ret
add
loop
popf
lret
fidivrl
ljmp
lcall
dec
arpl
xchg
out
cli
add
lret
imul
pop
cmp
movsb
jg
inc
rorl
mov
pusha
jmp
mov
cmc
inc
push
or
xchg
and
mov
sbb
mov
je
sbb
sbb
hlt
sub
and
sbb
lea
scas
in
mov
mov
shlb
cmp
roll
scas
sbb
xor
xor
hlt
popa
lock
cmpsl
shll
cli
into
out
lods
cmpsb
loop
lret
test
ret
mov
fdivl
pop
xchg
and
or
push
js
mov
dec
push
xor
sti
xor
jge
arpl
in
out
sbb
je
ret
push
sbb
pop
dec
dec
mov
insl
das
push
jmp
cmp
push
inc
dec
fwait
lods
lods
dec
mov
fisubs
shll
jae
jae
jmp
cmpsl
add
or
incl
mov
inc
pop
or
repz
loope
xor
jmp
rolb
pushf
xchg
inc
aas
cmp
andb
and
inc
ljmp
stc
es
xor
sbb
xorb
into
xchg
loop
in
movsb
xor
stc
inc
xchg
out
repnz
and
lods
xor
cmp
lea
cmpsb
fimull
clc
bound
leave
ljmp
aas
cli
cmpsl
or
xchg
jecxz
test
or
xchg
xorl
jecxz
stos
mov
xor
fbld
scas
loop
pop
inc
xor
or
dec
xchg
xchg
sbb
push
mov
lods
pushl
ss
mov
rorl
mov
clc
lds
xchg
ljmp
mov
jo
sar
out
rol
pop
jne
ror
shl
int
mov
loop
fbld
ss
shr
add
jg
hlt
mov
add
dec
cmpsl
mov
bound
mov
xchg
je
stos
roll
out
out
mov
mov
mov
push
mov
push
rclb
lock
sahf
dec
push
cmpsl
xchg
gs
sahf
loop
mov
inc
mov
jae
jecxz
mov
es
jecxz
jg
or
mov
jmp
push
lret
nop
in
dec
and
xchg
or
cmp
pop
int3
sub
add
fdivr
popa
in
dec
inc
and
repnz
repnz
mov
fiaddl
dec
iret
fisubrs
dec
mov
jmp
or
xchg
mov
inc
aas
insb
mov
cmc
cmpsb
into
xor
ret
push
or
ja
ljmp
jne
shll
scas
jno
data16
fbstp
sarb
add
shrl
push
imul
dec
mov
orl
testl
mov
orb
es
and
std
aaa
pushf
cmpsb
sbb
pop
icebp
ja
subb
ret
pop
mov
xor
out
ja
aas
movsb
add
inc
xchg
jmp
shr
push
ror
xchg
sbb
lret
inc
int3
test
lds
insb
adc
rorl
arpl
dec
rcrl
imul
ljmp
inc
cmp
lea
int3
push
mov
sbb
pop
out
in
push
mov
dec
addb
int3
inc
sub
sbb
popa
ret
inc
loopne
cs
xor
rcrl
shlb
int3
adc
hlt
and
pop
cld
test
arpl
push
bound
add
cld
and
ret
popa
pop
arpl
scas
pop
jp
bound
xchg
mov
stos
inc
and
pusha
shl
les
push
aas
popl
outsb
sar
sbb
inc
sbb
or
dec
mov
leave
lds
jbe
subl
mov
xchg
xchg
add
or
dec
mov
add
lods
push
ja
les
mov
in
test
xchg
popa
lods
push
ret
sahf
pop
add
das
int3
ret
dec
mov
xchg
adc
sbb
es
pop
lea
xchg
mov
mov
jmp
mov
pop
mov
andl
test
mov
in
jle
sub
hlt
aam
push
int3
mov
inc
ret
or
jns
int
sti
loop
push
cmpsb
adc
lcall
and
lcall
adc
in
adcl
add
data16
insl
and
mov
cmp
xchg
rcrb
sbb
outsl
dec
or
xor
lods
mov
xor
popa
movsl
imul
dec
push
add
cmpsb
in
add
xchg
jmp
repz
sti
test
mov
js
test
in
sub
gs
jecxz
mov
out
cmpsb
rorb
mov
rcr
std
or
xor
ret
mov
add
xchg
add
dec
mov
rclb
mov
xor
fdivl
sub
loope
mov
hlt
ffreep
mov
mov
shlb
adc
negl
mov
stos
faddl
cwtl
add
fldcw
xorb
test
dec
pop
lret
cmp
jp
inc
dec
pop
inc
mov
mov
mov
push
or
sub
mov
ljmp
sbb
inc
in
mov
out
fldt
adc
sbb
insl
mov
out
cltd
jp
mov
adc
pushf
mov
roll
push
and
xchg
push
mov
or
dec
filds
or
pop
hlt
jmp
push
sub
dec
mov
push
mov
into
shl
sub
mov
push
or
jo
in
dec
fiadds
bound
sub
xorl
xchg
mov
loop
fisttpll
bound
adc
shlb
test
mov
fisttps
xchg
mov
add
pusha
sar
out
jecxz
mov
les
mov
xchg
shrl
notl
xchg
jmp
movsb
add
mov
mov
jmp
mov
inc
mov
stc
sbb
loope
aad
jg
mov
mov
jnp
inc
in
or
mov
mov
mov
fwait
push
inc
push
jmp
push
mov
aas
addb
out
or
stos
dec
add
cld
mov
and
stos
std
jecxz
mov
push
andb
daa
repnz
shll
adc
lcall
pop
jmp
push
and
fstps
div
dec
pop
outsb
bound
push
lds
and
inc
addb
mov
mov
dec
mov
push
data16
jl
mov
fcmovb
loop
fwait
add
or
adcl
adc
mov
movsb
adc
dec
loopne
or
movsl
pusha
movsb
and
int3
and
sbb
enter
iret
sbb
rorb
in
jmp
and
dec
movsl
cs
xor
cmp
ret
lock
scas
or
les
hlt
mov
ret
pusha
popf
aam
imul
or
xchg
pushf
stos
imul
repz
mov
movsb
sbb
into
push
dec
or
iret
sub
push
jno
pop
imul
dec
popa
bound
lret
daa
in
fldcw
add
jnp
xchg
adc
xchg
jne
call
neg
outsl
repnz
dec
or
pop
mov
jmp
dec
inc
faddl
outsb
cmp
addr16
cmp
xlat
xchg
les
and
sub
cs
out
adc
push
rclb
mov
xor
je
adc
lea
mov
mov
cmc
stos
cmp
sbbl
fldcw
imul
rcrl
add
sbb
and
sub
les
nop
xchg
lods
std
lret
iret
cmp
les
mov
sub
cwtl
lret
xor
mov
mov
mov
xor
int3
in
dec
lods
mov
push
dec
cmpsb
jo
adc
je
add
loop
or
xorl
or
xchg
sub
inc
and
std
lock
outsb
sub
out
dec
push
xor
iret
outsb
jle
and
outsb
ret
mov
or
pop
inc
icebp
repz
dec
dec
sbb
mov
xchg
lods
das
add
push
add
inc
sub
xor
insl
cmp
jg
outsl
fidivl
das
hlt
out
jnp
stos
stos
ret
dec
repz
int3
dec
cltd
add
jns
ljmp
mov
lock
mov
cmpsb
and
pop
out
ds
mov
arpl
cmc
fldcw
pop
sub
arpl
cmp
mov
out
jmp
cmp
adc
push
mov
or
stos
mov
xchg
add
xchg
dec
mov
loop
add
lds
out
lods
or
dec
dec
xchg
int3
or
mov
repnz
movsl
adc
ja
fnstenv
or
mov
iret
jnp
shrb
lcall
stos
aam
flds
dec
xor
pop
mov
mov
push
xor
imul
cmpsl
lods
xor
rcrw
gs
lea
out
sbb
scas
sub
fisubrl
inc
in
mov
das
int3
sahf
sahf
push
push
jnp
ds
les
sbb
push
out
pop
add
inc
lds
mov
or
lods
mov
fsubrl
mov
lret
jge
jl
or
pop
jae
push
adc
xchg
xor
pusha
fwait
rorb
pop
cmp
stos
xchg
popf
movsb
xor
mov
add
jno
aaa
push
mov
sbb
cmp
jge
mov
add
outsl
cld
add
add
and
cmp
push
aad
pop
or
ficomps
lahf
outsl
test
dec
mov
and
adc
hlt
lock
dec
or
leave
movsl
stos
add
push
lds
ljmp
test
std
xchg
shr
xchg
cmpsl
loope
movsb
inc
push
push
add
ljmp
lock
mov
lret
ret
loope
sub
jb
incl
xor
stos
arpl
sarb
and
sarb
mov
popa
fistpll
sub
dec
mov
push
bound
mov
xchg
mov
popa
aas
pop
and
inc
add
popf
movsl
repnz
sub
movsl
xchg
in
or
ds
leave
and
scas
dec
sbb
add
arpl
call
push
stc
lret
push
enter
int3
pop
jmp
jae
sbb
or
shll
inc
aam
cmpsl
and
xchg
sbb
add
in
nop
sub
cwtl
outsl
push
test
lret
addl
sgdtl
add
sub
leave
xor
xor
icebp
and
jo
cli
int3
mov
mov
cltd
testl
imul
loop
dec
add
rorl
xlat
sbb
bound
pop
pop
cmp
subl
adc
repnz
xchg
or
xchg
test
andb
ljmp
push
mov
sbbb
insl
in
push
clc
ret
jge
sbb
stos
mov
mov
xchg
and
pop
pop
sub
stos
cmc
gs
bndldx
xor
repz
bswap
pop
enter
dec
movsl
roll
jo
cmp
in
inc
out
les
mov
divb
xchg
or
and
imul
lea
lds
push
xchg
xor
ljmp
popf
in
in
xor
xor
movsb
sub
clc
ljmp
or
mov
int3
inc
lds
mov
xchg
mov
push
dec
les
xlat
inc
rorl
sahf
adc
dec
mov
add
imul
bound
mov
push
jns
xor
cmp
in
scas
mov
lahf
lods
test
jl
rolb
cmp
gs
movsl
cltd
dec
add
xor
push
arpl
and
addr16
inc
add
push
xchg
clc
inc
clc
lcall
jmp
imul
sub
and
jl
andl
movsl
inc
in
movsl
fcomps
call
inc
shrl
or
inc
das
mov
enter
sub
push
in
sub
mov
stos
stc
ja
push
mov
addr16
xor
fs
and
mov
sub
scas
and
aas
cmp
add
hlt
push
fcoml
xorb
out
or
dec
push
int
stos
push
cld
cmpsl
inc
lcall
or
mov
lock
push
popf
aas
cli
or
push
rclb
xor
das
ljmp
cmpsb
pop
iret
mov
xlat
mov
or
lea
pop
mov
bound
ror
ss
stos
ja
jne
ss
jnp
ljmp
iret
add
loopne
rorl
or
es
hlt
lods
push
jecxz
imul
xchg
or
hlt
cld
push
mov
shrb
cmp
pop
loop
push
notl
cmp
cmpsb
in
mov
push
mov
mov
mov
sar
test
jmp
jns
xorl
les
mov
push
push
aad
icebp
aaa
pop
aas
mov
sub
movsl
xchg
ljmp
mov
or
cld
sahf
iret
repnz
out
mov
outsb
mov
sub
sub
int3
loopne
or
into
ss
mov
fs
xchg
push
mov
add
pusha
jno
int3
test
mov
adc
jmp
pop
pop
push
push
cmpsl
add
popa
mov
mov
std
mov
stos
dec
clc
inc
and
inc
jmp
pop
out
icebp
mov
add
mov
sysexit
xchg
hlt
loope
cld
out
aad
lret
std
add
mov
pushf
sbb
sub
ret
aaa
sarb
mov
stos
pusha
leave
sub
nop
sub
imul
aas
xchg
and
lret
pop
cld
rol
mov
adc
orb
mov
loop
inc
inc
enter
sub
sbb
and
xchg
sbb
push
cmp
jo
add
mov
std
fdiv
shrb
mov
push
in
stos
punpcklwd
in
lea
add
stos
stos
push
shl
outsb
add
and
cmp
or
popa
dec
pop
bound
pop
push
lret
jmp
orl
fildl
or
shrl
lea
jns
inc
nop
outsb
outsb
sbb
into
xorl
sub
out
push
outsb
sub
xor
xchg
push
xor
sub
cmp
mov
xorb
mov
cmpsl
lret
pushfw
sub
pop
push
mov
popa
cltd
mov
jmp
mov
lret
aaa
mov
addb
inc
into
mov
pop
gs
xlat
fdivrs
dec
push
movsl
outsl
inc
sbb
cmp
pop
or
je
cmpsl
test
mov
inc
sti
sub
fcoml
or
test
cmp
lret
mov
mov
lea
out
sbb
xor
pop
rsqrtps
mov
std
pop
repz
cld
movl
dec
subb
push
adc
fidivl
push
xchg
ror
dec
dec
fdivr
cli
fisttps
xchg
cmp
int
inc
iret
sub
and
and
mov
not
das
jnp
subl
es
in
mov
shl
mov
mov
dec
int3
add
mov
or
mov
mov
lret
mov
cwtl
out
or
pop
xlat
daa
add
or
fmul
or
arpl
lods
cmpsl
inc
out
ficoml
test
sahf
dec
cmp
xor
test
cmp
xlat
xchg
test
shrl
add
pop
subb
adc
rcl
lahf
fwait
lock
add
push
in
sub
or
adc
scas
mov
lahf
push
cmp
movsl
ja
lret
mov
nop
outsb
or
mov
insl
lods
mov
stc
dec
movl
cwtl
pop
mov
xor
pusha
add
shr
jnp
adc
mov
mov
pop
push
fsubl
outsl
mov
jns
lret
test
into
or
push
cmp
mov
fistps
dec
cmp
lcall
or
sar
les
adc
bound
lret
add
repz
mov
mov
dec
rorb
les
push
std
push
pop
and
and
stos
cmpsl
shlb
cmp
mov
sub
ret
roll
adc
add
xor
push
inc
movsb
push
out
into
orl
inc
mov
scas
jmp
les
or
mov
les
cmp
pop
push
fidivrs
xchg
in
in
lods
add
js
in
cmp
fldcw
shr
clc
adcb
jne
inc
cmpsl
cmp
xor
das
pop
pop
push
xor
mov
mov
xchg
push
sub
fisttpll
shr
shll
lods
push
daa
jae
ret
mov
add
xor
stos
mulb
cmp
hlt
xor
subl
lods
or
dec
ja
pop
int3
xor
je
adc
fcmovbe
hlt
dec
in
cmpsl
mov
jp
push
inc
adcl
fwait
push
loop
dec
aam
mov
jb
outsb
pop
mov
or
popf
or
sub
fimull
push
ret
addr16
pusha
jne,pn
test
shll
not
and
inc
push
adcb
outsl
push
pushf
mov
push
mov
push
adc
push
mov
jbe
jnp
mov
adc
fisttps
ret
fmuls
fisubrl
daa
sbb
mov
fdivs
or
pop
lcall
mov
add
push
push
into
leave
jb
jae
inc
and
fistpl
pop
sbb
ror
or
movsb
ret
mov
ljmp
in
pushf
pop
cmp
push
mov
adc
jne
mov
repz
ret
test
fldt
fisubrs
insb
decb
sub
insb
ret
pop
shrl
repz
testb
addr16
test
shlb
scas
jmp
mov
cli
cli
mov
mov
mov
xor
mov
shrb
ret
pop
mov
sbb
push
xor
bound
and
or
pop
js
inc
data16
cmc
dec
out
jnp
subb
rolb
popf
push
xor
mov
push
bound
mov
cli
xchg
pop
dec
xchg
das
or
imul
pop
stc
jno
mov
loope
sbb
hlt
xchg
pop
mov
pop
cmp
mov
fninit
pop
cmpsb
mov
imul
and
cmp
cmp
ja
outsb
xor
mov
fsubrp
mov
xlat
stos
lock
sub
imul
in
cld
call
inc
sub
popf
cmp
cmpsb
xor
pop
sub
inc
and
ss
sub
xchg
sub
or
or
or
sbb
lcall
sub
adcl
pop
sub
cwtl
int3
jecxz
add
loopne
les
jne
sbb
mov
lock
jbe
or
mov
jle
mov
jge
jmp
into
jno
adc
imul
orl
inc
push
inc
ret
cld
in
sub
jbe
test
rcll
nop
popa
sbb
dec
push
push
push
sub
mov
mov
xor
das
xchg
sbb
std
aad
cmc
movsb
int3
cld
mov
add
push
loopne
hlt
movl
dec
xor
or
movsb
outsl
movsb
sbb
daa
jae
xor
imul
lock
imul
adc
mov
int3
leave
dec
inc
push
add
adc
sbb
mov
aam
pusha
or
inc
hlt
mov
cltd
hlt
stc
shll
imul
xor
add
rorl
push
pop
jo
and
jmp
fs
mov
xor
push
gs
outsb
pusha
sub
rcll
jmp
push
call
add
sar
mov
shlb
int3
cmp
clc
stos
pop
test
int3
or
leave
jmp
testl
dec
cmpsl
ljmp
push
xchg
push
data16
push
sub
rorl
fiadds
push
das
inc
push
xor
sbb
push
sub
fsubrl
iret
ljmp
mov
cmpsb
jmp
add
or
cmpl
aas
dec
ret
push
jb
ljmp
jg
mov
iret
mov
sbb
fcmovnbe
scas
mov
inc
jg
mov
popa
lds
mov
xchg
add
or
and
in
jp
push
cmp
cmpsl
xchg
aaa
sbb
hlt
cmp
fcmovnbe
and
data16
inc
xor
adc
insb
mov
popf
pushf
jge
inc
imul
mov
dec
aaa
xor
push
adc
lcall
pop
in
adc
repz
add
sarb
sbb
outsl
lds
push
je
lahf
mov
shll
or
loop
cmp
jle
enter
bound
enter
ret
addr16
scas
test
movsb
out
mov
cmp
mov
push
or
inc
lret
in
cmpsl
fdivrl
mov
or
lcall
popa
sbbb
mov
in
repz
push
dec
aaa
insb
pop
jg
cmpsl
cld
std
in
mov
pop
scas
sub
loop
sub
divl
mov
sub
jns
data16
cmpsl
ror
fisubrs
sbb
andb
pop
popa
jns
mov
mov
mov
sahf
mov
jo
pop
and
test
xlat
and
push
lds
and
shrl
mov
shlb
push
ljmp
add
scas
nop
mov
lret
lcall
add
mov
inc
sbb
out
add
mov
stc
add
push
lcall
pop
repz
loopne
aaa
loop
inc
xor
sub
push
stc
inc
inc
lds
add
sub
cmpsl
leave
push
sbbl
jb,pt
sub
cli
in
add
out
test
mov
mov
mov
mov
mov
mov
jle
pop
cmc
out
ret
lds
cmpsl
inc
sub
mov
cmpb
dec
cwtl
push
aaa
in
ljmp
dec
dec
add
dec
lret
loopne
cli
shlb
cmp
ljmp
dec
data16
hlt
std
int
dec
xchg
mov
out
in
and
adcl
lods
inc
jmp
imul
mov
roll
mov
mov
popa
cmp
cmp
jge
das
mov
cltd
dec
adc
aam
lret
test
cmc
push
je
icebp
loopne
lods
mov
jnp
int3
in
add
in
cmovo
cmpsl
cli
loop
push
daa
mov
iret
fsubrl
dec
mov
mov
mov
mov
push
jnp
in
aam
dec
cmp
inc
out
lcall
fwait
inc
ss
push
or
sti
sub
push
and
in
lock
push
jne
push
stos
or
inc
mov
fadd
imul
stos
inc
jp
enter
mov
rorl
mov
cld
in
mov
fistpl
xor
add
lcall
and
and
shr
and
outsl
rcll
rcrl
cmpsl
aas
add
outsb
inc
nop
rcrb
ret
out
inc
dec
outsl
add
lock
fisubrs
cmpsl
cwtl
mov
or
rorb
jno
stos
add
adc
sbb
data16
mov
pop
mov
jae
mov
btc
cmc
lcall
mov
inc
jge
pusha
sbb
pushf
sub
push
mov
cmp
loopne
jl
jmp
sub
test
mov
adc
mov
aaa
and
aas
push
xor
lret
xor
imul
lea
pop
push
dec
out
jg
xchg
negl
das
in
xchg
das
adc
sbb
xor
fisttpl
push
out
jecxz
mov
test
iret
aam
arpl
xor
mov
aad
or
add
ficoms
add
data16
dec
mov
stos
sarb
or
lret
jb
mov
loopne
rorl
stos
adc
sub
icebp
outsl
add
mov
pop
pop
xchg
push
sub
hlt
scas
add
fisttpl
cmpsl
jno
ret
push
xchg
in
fdivl
roll
aaa
pop
in
and
js
add
sub
jl
ja
in
mov
or
out
pop
ret
sarl
xchg
enter
pop
mov
aam
cmpsl
movl
inc
add
push
jns
popa
mov
xchg
cli
dec
pop
sub
jne
push
out
pop
lret
push
sub
adc
pushf
sub
aad
push
jmp
sub
mov
sbb
fsubrl
cld
pop
pushf
imul
pop
or
imul
data16
out
sbb
mov
loopne
mov
je
add
cmpb
pop
mov
andb
push
mov
jns
andl
aaa
idivl
loop
iret
clc
mov
hlt
sub
xlat
shrb
pop
inc
iret
lahf
dec
ret
pusha
push
sbb
test
sbb
outsb
cmp
adcl
mov
stos
repnz
or
in
cmp
jmp
xchg
or
mov
push
int
dec
pusha
lods
or
in
data16
dec
out
loope
adc
mov
aam
fwait
cmovp
mov
push
addb
dec
lea
jns
xchg
push
out
hlt
ret
jmp
jmp
push
cmpsb
scas
aaa
cmpsl
adc
pushf
mov
inc
sbb
push
adc
mov
sbb
aas
ret
add
mov
cltd
and
movsb
stos
sub
stc
ljmp
cmpsl
hlt
cmp
push
mov
leave
in
mov
push
fs
shlb
ret
mov
ret
add
xor
mov
mov
cmpsl
mov
mov
xlat
les
scas
ds
sbb
and
mov
leave
fucomp
xchg
and
cmpsl
and
imul
xchg
jmp
ljmp
popa
or
xor
das
sub
push
sti
ljmp
push
inc
cs
push
sub
lods
mov
push
shr
lock
rol
sbb
xchg
dec
pop
xor
jbe
sbb
mov
movsl
out
mov
sub
xchg
pop
int3
hlt
cmpsl
push
push
roll
mov
in
mov
cs
xor
ds
fs
aas
jecxz
lcall
cmpsl
mov
jbe
pop
ja
dec
sarl
xor
add
ss
fsubl
push
pop
push
cmp
mov
mov
cmpsl
ret
jle
adc
test
jl
imul
pusha
mov
pop
jae
das
mov
adc
in
adc
sarb
or
jae
loop
test
sub
sqrtps
pop
leave
cmpb
jg
and
inc
popa
sub
mov
in
in
lods
mov
or
add
jae
aas
mov
mov
xor
iret
mov
or
jge
or
cmpb
or
pushf
ret
fdivrl
xor
push
cltd
mov
mov
out
mov
aad
sbb
fsubrs
shll
std
leave
sbb
out
inc
adc
sahf
lret
lods
mov
shrl
mov
test
mov
hlt
cs
or
cmpb
or
lock
dec
lea
jno
pop
sbbb
add
sbb
xchg
push
push
ds
lret
jl
cs
mov
cmp
pop
dec
mov
icebp
xor
fnstenv
hlt
xchg
ret
cmc
adc
bound
jg
cltd
and
and
mov
cmp
mov
sti
in
cmp
pop
fnsave
or
mov
insb
addr16
or
mov
sub
aam
movsl
bound
fmuls
aas
lods
inc
mov
push
in
adc
nop
mov
into
enter
sub
repz
jno
into
ret
js
loopne
dec
lret
mov
sti
mov
cmp
sbb
jl
adc
jmp
arpl
in
cmc
sub
pop
test
sbb
mov
mov
mov
sbb
push
aaa
push
mov
add
xchg
fisttpll
adc
add
test
push
sub
lods
xor
mov
rol
dec
cmp
pop
cmp
mov
stos
xorb
ss
adcl
out
sbb
xorl
mov
into
push
add
cmp
ret
push
gs
ret
out
xchg
mov
mov
mov
cmp
popa
push
sub
xchg
jb
xchg
jne
push
hlt
movsl
stos
imul
pop
outsb
je
jno
fsub
dec
insb
stos
iret
insb
lret
xchg
lods
adc
aad
loope
push
xor
mov
outsb
subl
ret
dec
mov
mov
add
xchg
ja
sub
shrl
dec
scas
out
rorb
or
cmpsb
iret
sub
stos
sbb
int3
movsb
push
adc
gs
sub
xchg
fnstsw
dec
jne
dec
pushw
aam
sub
sub
and
popa
fiadds
mov
into
inc
xor
loope
adc
adc
in
imul
leave
test
lods
stos
sbb
mov
cmpb
rcl
rolb
mov
nop
es
cmc
jl
push
cmp
xor
clc
or
mov
and
sahf
out
mov
imul
adc
shrd
fucomip
cli
aaa
push
lret
and
ret
mov
jg
xchg
pop
cmp
jns
stos
lret
dec
push
sub
shrb
pop
in
stos
mov
push
mov
outsl
out
ret
lahf
insl
ljmp
sub
mov
and
mov
dec
data16
mov
pop
jl
cmp
push
jb
aaa
mov
add
xchg
repnz
rcl
xor
cs
push
es
icebp
ret
pop
loop
ret
cmp
xor
sub
or
fimuls
ljmp
dec
mov
mov
mov
rolb
mov
and
pop
sub
xor
and
sarl
sbb
jb
aad
mov
or
icebp
push
lahf
cmp
dec
leave
mov
gs
xor
shlb
shlb
mov
les
push
cli
inc
lret
xor
fnstcw
movsb
lahf
clc
add
xchg
push
ja
xchg
or
lods
dec
xchg
add
or
xchg
cltd
dec
test
mov
imul
and
and
inc
cmp
ljmp
xlat
sub
ds
aad
cmpsl
scas
mov
out
mov
inc
int3
and
pop
shll
rclb
mov
inc
repz
data16
sub
shll
mov
sbb
stos
imul
lahf
stos
pop
adc
seto
filds
decl
lods
out
jl
mov
gs
jecxz
rolb
fldenv
shr
dec
jbe
jns
jae
into
lea
in
xchg
gs
gs
enter
scas
mulb
push
movsb
xchg
sub
out
push
iret
or
dec
sub
and
push
dec
jge
or
imul
mov
mov
fcoms
push
xchg
add
mov
sub
lret
push
mov
mov
mov
lods
sahf
into
cmp
push
ficompl
mov
cmp
add
ja
push
xchg
xor
inc
inc
icebp
rorl
roll
xchg
pop
mov
mov
mov
xchg
aad
dec
clc
imul
rol
mov
imul
adc
mov
rcrl
insb
inc
mov
and
xor
xor
subl
enter
stos
add
les
xchg
and
repz
orl
test
mov
mov
sub
cli
rcll
addl
jecxz
ljmp
add
fwait
pushf
lods
lcall
mov
cmpsl
and
xchg
add
and
add
push
cmp
stos
aam
and
out
inc
push
dec
bound
cli
jle
jno
daa
or
xchg
and
lods
and
aas
inc
add
mov
out
dec
xchg
cmpsl
jb
push
jmp
cmp
rolb
cmp
mov
stos
aaa
cmpsl
lret
jle
sahf
daa
pop
push
enter
stos
xchg
andb
xchg
in
dec
xchg
pop
mov
mov
outsl
movsl
fisttpl
cmp
das
sub
push
daa
adc
jnp
sahf
push
xchg
insl
sarl
xor
jl
adc
add
sbb
test
or
and
in
enter
mov
test
adc
mov
jmp
arpl
pusha
push
mov
ljmp
add
orb
movsb
aam
adc
adc
lret
out
inc
cmp
dec
push
mov
mov
cs
lret
add
cmp
lret
mov
or
xchg
sub
add
shlb
jecxz
movsb
dec
mov
aad
pusha
xchg
lods
add
mov
enter
outsb
push
jnp
and
xor
ret
pop
mov
popa
int
mov
arpl
outsl
and
dec
int
mov
xor
add
push
add
scas
cmpsb
shll
movsl
int3
int3
mov
in
ret
lcall
mov
int
testb
dec
mov
sbb
imul
lock
enter
test
mov
orl
subb
shlb
add
rorl
ret
packsswb
lds
cmp
subb
mov
pushf
cmpsl
or
xor
add
sarb
cmpsb
roll
mov
cmpl
movsl
cltd
aam
shll
cmp
test
push
mov
outsb
cmp
clc
inc
xchg
mov
cmp
adcb
aaa
cli
jae,pn
fidivs
sbb
inc
sbb
mov
fldt
bound
bnd
xchg
xchg
les
leave
and
outsb
sbb
rcrl
std
es
jge
or
xchg
mov
xor
mov
sbbb
icebp
fisttpl
lret
pop
xchg
test
mov
push
imul
fisubl
sbb
or
add
imul
in
mov
jg
les
out
mov
pop
ret
dec
out
sub
data16
jnp
jecxz
das
dec
in
push
stos
repz
cmc
in
mov
cmp
and
out
jecxz
mov
push
call
das
lock
pop
dec
stos
push
addr16
dec
sbbb
testl
rorb
sbb
and
mov
adc
jnp
movsl
subb
xchg
inc
dec
jl
orb
testb
mov
mov
sub
dec
inc
adc
jmp
daa
aad
clc
xchg
gs
and
mov
cltd
mov
add
test
mov
jmp
push
in
pushf
push
and
inc
repnz
or
ja
shll
add
into
mov
daa
cmp
mov
rorb
repz
lret
out
loop
xchg
inc
add
cld
adcb
insb
pop
mov
fs
xchg
jp
shlb
cmpsl
push
xchg
sub
aas
sahf
lret
sbb
clc
jecxz
xor
add
push
mov
hlt
mov
stos
xlat
loop
cmp
fwait
add
je,pt
mov
push
mov
sub
decb
int3
add
int3
push
mov
jl
push
xchg
lahf
popa
xchg
bound
mov
push
push
repnz
je
jno
push
mov
dec
cmpsl
adc
add
sbb
push
out
mov
shll
push
push
ss
add
inc
push
aad
mov
xchg
imul
xor
cmpsl
sub
push
push
mov
andl
xchg
mov
cmpsl
cmpb
jecxz
lret
adc
sti
or
mov
cmp
sbb
pop
lea
mov
jne
mull
or
pop
inc
xchg
mov
xor
mov
das
xchg
fs
imulb
sbbb
into
inc
leave
adc
aaa
mov
into
pop
idiv
fcmove
sahf
gs
adc
sub
fwait
sbb
sbb
in
mov
cmp
pop
cmp
add
and
xor
mov
or
dec
pop
cmp
xor
xchg
sub
mov
jle
sahf
sahf
out
mov
fsubs
mov
push
repz
mov
addr16
sub
sarl
out
movsb
les
pop
add
mov
lods
dec
in
dec
shrb
shr
cmpsb
cmpsb
inc
fsub
les
mov
and
cli
xor
jns
and
jne
add
xchg
loopne
sub
cmp
roll
cmp
pop
in
ficompl
add
rcrb
stos
loope
pushf
push
mov
fisubs
cmpsl
xchg
scas
mov
mov
dec
dec
add
jnp
lods
add
mov
cmpsl
imul
mov
push
or
pop
sub
std
push
fdivr
cs
rol
push
stos
cmpsb
stc
jp
addr16
dec
and
add
cs
sub
mov
jno
rorl
fidivl
stos
repnz
jnp
divb
roll
les
aas
and
out
or
ljmp
xor
sbb
sbb
insb
fwait
mov
stos
loop
subl
dec
movsb
dec
and
sbb
das
push
scas
data16
or
xchg
cmpl
jno
icebp
out
sub
dec
and
and
daa
push
ret
je
in
xor
inc
xchg
cs
jecxz
in
xchg
push
push
dec
mov
clc
push
adcb
mov
mov
daa
sub
fcompl
xchg
in
sbbb
fwait
sub
cld
sub
push
cmp
mov
sub
scas
hlt
je
mov
mov
inc
enter
cs
dec
insl
in
push
ljmp
aas
add
aaa
ret
outsl
icebp
dec
subb
mov
cwtl
push
sbb
rcrl
add
mov
mov
add
movl
and
dec
mov
lret
shl
mov
inc
ret
add
es
test
ret
dec
subb
xchg
lcall
or
daa
stc
and
movsl
push
fadds
or
inc
fmull
lret
nop
gs
fs
movsb
aaa
xor
xchg
aam
add
jnp
mov
inc
shrb
mov
pop
fldt
push
or
jge
jns
test
rolb
push
aam
jecxz
mov
jp
int3
add
mov
mov
insb
repnz
nop
into
out
aas
sub
fldl
js
bound
das
dec
jo
push
sub
mov
imul
inc
out
lret
jns
int3
push
lods
lret
mov
mov
adc
sub
das
sub
loop
sub
or
jmp
je
orb
sarl
push
rolb
call
popa
stos
add
mov
orl
push
mov
andl
push
push
mov
mov
push
or
jo
repnz
push
daa
jp
das
rorl
dec
sti
cmpsl
pusha
lret
popf
das
pop
push
pop
sub
enter
rcr
ret
nop
dec
aaa
push
into
mov
push
xlat
out
adc
cmpb
cmpl
mov
lcall
movsb
leave
add
cmp
sub
rcr
xorl
jmp
cmp
outsb
stos
rcl
notb
mov
jmp
mov
ret
shll
pop
shlb
in
jg
test
mov
push
push
pusha
add
or
pop
mov
stos
mov
push
sahf
mov
xchg
daa
repnz
dec
les
xchg
xchg
loope
cmpsl
mov
out
ljmp
add
push
dec
dec
movb
mov
cmpb
xor
or
shll
mov
vmovhps
les
sahf
pop
adc
and
mov
lock
jge
scas
mov
pop
adcb
mov
mov
cmp
jns
jg
cmpsl
and
xorl
std
sbb
and
inc
shlb
mov
mov
xchg
mov
movsb
imul
mov
sbb
adc
jl
mov
or
aam
mov
shlb
or
cmpsl
aam
or
scas
aas
or
cltd
je
sti
mov
add
xor
mov
sti
rcll
mov
pushf
xor
xor
ds
mov
mov
cld
adc
cmp
enter
ret
aaa
pop
dec
mov
je
push
lcall
loop
add
mov
mov
mov
mov
sbb
outsb
arpl
xor
fstp
scas
and
push
xchg
jb
pop
xor
mov
into
stos
imul
lods
sub
fsubrl
test
mov
out
jo
lea
mov
and
sub
sbb
add
sub
push
push
inc
rcl
or
mov
scas
in
lods
mov
xor
sbb
rcll
sub
push
mov
cmpsl
or
and
mov
and
inc
in
pop
repz
jecxz
in
and
cmpsb
int3
xchg
shr
stc
cmp
dec
aam
mov
int3
fsubrl
in
jg
jnp
mov
mov
xchg
lea
xchg
adc
lahf
mov
xchg
xorl
push
mov
push
ljmp
mov
jae
add
insb
orl
in
orb
xor
push
imul
stos
inc
mov
dec
xor
outsl
xchg
test
fs
int
push
push
push
orl
mov
or
and
jle
movsl
in
sub
jns
xchg
jle
in
adc
test
cmpsl
in
in
mov
rcrb
fstp
loopne
and
pusha
ret
rclb
pop
mov
xor
mov
sti
rcr
iret
jl
pop
sbb
mov
jb
rolb
inc
outsl
or
cmpsl
lcall
xchg
push
sbb
hlt
pushf
jmp
dec
mov
inc
ror
daa
inc
sar
sub
jne
mov
rclb
fs
cmpsb
xchg
xchg
jmp
mov
or
sahf
sbb
cmp
or
mov
clc
xchg
mov
add
pop
xor
dec
jecxz
insl
outsl
or
push
push
xlat
mov
dec
adc
dec
lahf
fwait
mov
movsl
mov
add
adc
adc
add
sar
test
adc
add
xorl
popf
mov
add
and
dec
and
aaa
jecxz
in
pop
testb
subb
test
push
mov
or
push
xorl
outsl
mov
mov
icebp
orl
mov
add
loopne
jg
inc
push
jecxz
push
popl
push
xor
add
arpl
sbb
add
pop
mov
xor
dec
sbb
mov
clc
add
jo
pusha
fidivrl
cli
loopne
lret
jnp
in
movsb
push
xor
cltd
mov
xchg
lcall
mov
call
cwtl
add
pop
imul
ss
pusha
mov
test
pop
inc
xchg
jecxz
in
sarl
dec
mov
lds
scas
mov
xchg
xor
cmpsl
movsl
faddl
shlb
arpl
in
adc
loopne
fwait
sbb
pop
sbb
in
fdiv
iret
jnp
imul
dec
lret
lods
lock
dec
mov
cmp
or
fdiv
movsb
push
dec
inc
das
clc
insl
jo
lret
fstps
ljmp
pop
jo
cmp
mov
mov
pop
arpl
ja
in
mov
or
adc
and
sbbl
sub
fsubrp
add
shlb
adc
sti
rorb
sub
add
shll
mov
mov
int
push
dec
jo
lret
jo
testl
mov
shlb
fxch
mov
or
fcoml
add
add
or
loopne
out
and
pop
mov
jg
loopne
punpckhdq
inc
push
lret
aaa
or
xchg
mov
in
add
inc
mov
ret
and
enter
mov
jne
inc
jecxz
shl
aaa
in
loopne
out
repz
pop
mov
sahf
int3
mov
cmpsl
mov
cltd
loopne
insl
xor
stos
leave
mov
addb
arpl
add
xor
shll
jge
mov
cmpsl
hlt
js
sbb
in
sbbb
sub
aam
xor
or
stos
fsubrp
movsl
cld
flds
leave
sbb
push
or
insl
ljmp
andb
and
or
or
adc
dec
int3
fwait
aam
shlb
or
ret
divb
ja
test
pusha
mov
mov
lock
sbbb
stc
mov
pop
mov
in
addr16
fsubrs
jg
iret
fnstcw
xor
push
in
sub
jns
insl
pushf
or
mov
das
xor
xor
je
jg
fcmovb
adc
pop
and
ret
jbe
or
sti
fnstcw
xor
inc
add
sub
sbb
int3
jg
bound
mov
into
sbb
movsb
loop
cwtl
fcomip
sub
push
iret
mov
mov
fisubrl
movsl
nop
mov
mov
sbb
cmpl
fld
push
pop
int3
popa
mov
xor
pop
test
lret
jmp
jmp
mov
jl
jne
inc
cmpb
out
sbb
mov
int3
lods
in
sub
add
sbbb
out
mov
or
adc
ret
xchg
jecxz
pop
movsb
nop
lcall
pop
mov
push
mov
mov
cmpb
cmp
hlt
mov
ret
test
sbb
xor
loopne
mov
ret
addb
inc
jge
mov
loop
rorl
cld
mov
or
out
aas
shlb
add
cmp
out
sti
adc
cmpsl
adc
jmp
jmp
dec
xor
movsl
cwtl
xchg
pop
or
pop
pusha
mov
jmp
hlt
or
add
incb
pop
rcrb
mov
nopl
popa
andl
out
xchg
lret
dec
lea
xchg
adc
mov
bound
std
xchg
lock
jge
iret
in
shl
mov
pop
mov
inc
cli
ret
into
sbb
pop
xor
push
ret
cmp
loop
and
out
lods
cld
out
cmpsl
clc
fwait
inc
xor
and
mov
mov
mov
inc
mov
add
fwait
mulb
subb
mov
mov
jl
or
inc
rcrl
pusha
mov
xor
lock
or
rorl
in
mov
mov
and
mov
and
jg
cmp
mov
xchg
cmpsb
mov
nop
popa
cmc
repnz
scas
and
stos
inc
orb
push
mov
cmpsl
pop
stos
mov
adc
in
xor
mov
jle
sub
adcb
jle
mov
fldcw
imul
les
or
movsb
xorl
ret
pop
pop
adc
push
movsl
lcall
inc
adc
ret
pop
push
jns
add
int
xchg
push
mov
mov
mov
and
bound
addr16
sub
les
sub
mov
lods
push
mov
lret
mov
or
push
xor
jae
ljmp
mov
addr16
fs
aas
mov
xlat
dec
push
test
push
je
mov
in
sub
nop
das
lcall
push
push
inc
or
shlb
cmp
pop
or
dec
js
push
das
mov
hlt
je
add
adc
add
inc
sbb
mov
out
pop
lock
push
add
mov
insb
inc
lret
mov
popf
cli
sbb
lock
sahf
arpl
xor
xlat
mov
rcrb
push
es
mov
dec
or
je
daa
jecxz
in
int3
xor
rorb
orb
roll
adc
mov
inc
cli
cmp
negl
pop
mov
jnp
test
out
push
cmc
push
mov
ret
fcomps
xorb
lcall
aam
dec
rol
jmp
xchg
fisubrl
cmp
cmc
add
les
aam
lahf
ror
mov
inc
or
sub
dec
inc
mov
or
mov
mov
into
xchg
cmp
push
sbb
mov
xor
inc
mov
int3
movsb
mov
mov
xchg
xchg
stos
and
inc
adcl
cmp
movsb
mov
lret
fs
sbb
lcall
scas
cmp
je
inc
lahf
cmpsb
stos
shlb
out
mov
xchg
mov
mulb
fnsave
stos
mov
sbb
xor
shll
fbstp
push
mov
test
xor
shrl
mov
lea
jnp
mov
xchg
sbb
xchg
xchg
or
bound
mov
into
and
dec
pop
pop
xor
xor
fsubr
lds
test
insb
dec
push
pop
pop
sarb
lods
sahf
adc
loope
aas
xor
imul
mov
iret
or
in
push
or
ret
mov
jns
shrl
inc
add
add
fimull
out
out
int3
in
scas
pop
rorl
lret
rcll
adc
cmp
push
jmp
cmp
inc
push
insb
xor
inc
xchg
rcl
fwait
lods
cmp
fcoml
xchg
jnp
xchg
sbb
or
lods
leave
mov
aam
popa
lret
imul
jno
add
and
mov
cs
jmp
pop
xchg
xor
sub
push
lds
push
mov
mov
ret
rcll
fadd
push
fldenv
sbb
mov
or
mov
xor
in
cmpsl
and
xor
mov
xchg
jge
and
sub
add
orl
dec
ja
jle
lods
movsb
outsb
pop
jbe
lahf
add
sub
xor
mov
mov
loop
mov
scas
sub
inc
fiaddl
insl
into
notl
int
add
push
scas
sub
std
fcmovb
push
cmpl
or
or
adcb
scas
cmpsb
aas
mov
xchg
push
hlt
push
outsb
dec
mov
mov
in
inc
into
or
das
inc
and
iret
leave
or
mov
loope
push
mov
fcmove
dec
hlt
adc
xor
sbb
js
das
push
ret
mov
mov
aam
xor
aam
mov
cld
pop
jl
aam
jnp
mov
mov
je
into
test
sub
cmp
repz
nop
outsl
mov
inc
nop
push
sub
int
sbb
push
sbb
dec
pushf
push
mov
out
cli
lret
mov
and
ja
jo
int
int3
mov
jb
mov
mov
outsl
inc
adc
xor
mov
test
hlt
in
fs
push
js
stos
hlt
in
fistpl
add
lea
hlt
in
mov
mov
mov
mov
adc
add
mov
xor
maskmovq
testl
lds
bound
fsubs
aaa
insb
and
mov
in
int3
xor
aaa
sub
dec
test
jae
movsl
ret
out
in
inc
mov
sahf
pop
pop
cmp
ja
push
ss
or
mov
jns
push
out
sbb
xor
add
cmp
sub
out
xor
in
les
les
mov
or
cmpsl
bound
daa
jp
mov
xchg
daa
cs
bnd
lret
sahf
into
add
sarl
cmp
mov
adc
clc
hlt
es
je
ja
sbb
orb
push
cmp
orb
push
mov
daa
and
ds
shll
insb
fisttps
imull
bound
push
or
dec
mov
nop
dec
stos
repnz
mov
icebp
mov
xor
lock
aas
cs
sbbb
dec
sbb
movl
cmp
push
sbb
cmpb
dec
repnz
adc
jns
and
lcall
ja
shll
cmp
lods
movsb
pop
and
dec
rcrl
and
cmp
popa
jmp
dec
cmp
arpl
inc
movsb
cli
adc
into
jnp
jp
dec
xor
fistps
mov
adc
sbbl
addr16
je
dec
shrl
xchg
repz
lock
adc
es
sub
jnp
and
out
repz
lcall
test
dec
fs
dec
or
or
and
mov
add
jle
pushf
pop
cmp
testb
popa
sbb
pop
je
and
sbbb
xchg
in
out
jnp
adc
xchg
ret
mov
cld
in
imul
fdivl
sbb
cmp
std
fsubl
cmp
nop
sbbb
js
gs
and
mov
pop
mov
mov
shll
dec
mov
push
scas
sbbb
jbe
mov
orb
ljmp
adc
fs
push
jbe
adc
jmp
daa
int3
adc
xchg
lcall
aas
or
mov
sub
fimull
mov
cld
out
mov
adc
stos
sbb
add
mov
cmp
inc
ss
fwait
lret
push
clc
jge,pt
es
je
or
jo
cs
fwait
lret
cmpsl
adc
clc
int3
xor
jmp
jns
dec
dec
imul
mov
mov
cmpsl
das
xor
mov
lods
mov
mov
xchg
faddp
insl
push
int3
das
mov
xor
shrb
outsb
orb
loopne
call
cmp
adcl
incb
sbb
xchg
rorb
add
test
push
lock
out
adc
xchg
mov
out
push
in
adcb
leave
or
push
pop
ds
ret
stos
mov
sar
jl
inc
xor
movsb
scas
in
sarb
mov
cmpl
int3
andb
or
add
popf
int3
mov
mov
or
testb
add
mov
cmp
ret
mov
shlb
ret
mov
aad
add
shl
jmp
sub
jnp
mov
repz
cwtl
out
lods
inc
ret
imul
add
enter
sub
andl
ret
jmp
loopne
shl
scas
ljmp
mov
aad
add
shl
push
scas
xor
cld
jb
lods
popa
int3
jns
mov
inc
adc
cmpsl
cmp
xor
mov
sbb
cmp
sbb
popa
dec
xor
mov
sub
jbe
loop
dec
or
push
shlb
cmp
push
mov
and
jno
cmp
iret
mov
bswap
mov
jae
or
sub
in
jb
or
dec
xorb
into
cmp
mov
mov
push
mov
mov
in
cmp
mov
movb
andl
push
lds
xorl
mov
in
mov
int3
pop
ret
dec
add
aas
dec
dec
mov
mov
xor
into
mov
jae
add
orb
mov
aam
roll
and
push
jmp
mov
push
lcall
add
xor
or
push
test
xchg
mov
movsb
iret
decb
jle
int3
leave
movsb
mov
out
pop
cmc
xlat
bswap
pusha
loop
or
add
mov
cmpsb
int3
add
stc
dec
testl
data16
lods
mov
dec
push
pushf
adc
xor
adc
imul
lock
mov
movsl
add
xchg
es
mull
dec
push
subb
sbb
and
push
test
xchg
aas
inc
xchg
sbb
jl
das
les
add
lret
mov
in
push
adc
push
add
testl
rcll
inc
in
push
push
sahf
jae
movsl
sub
ljmp
xchg
cli
dec
and
jmp
insw
orl
ljmp
xor
stos
pop
int
je
mov
cld
dec
jge
ret
outsb
inc
dec
icebp
cmpsl
inc
lock
mov
push
push
ljmp
lahf
mov
fcoms
add
push
popf
stos
movsb
arpl
lret
inc
cmc
xlat
mov
mov
jecxz
jns
xchg
push
xor
popf
lock
mov
or
clc
add
jne
push
andb
enter
sbb
adcb
lcall
add
cmc
xchg
add
clc
cmp
jge
and
out
xchg
rclb
out
aaa
add
mov
mov
cli
sub
mov
lea
jns
pop
push
hlt
or
push
pop
sarl
lcall
movsb
dec
jbe
jecxz
cmp
fistl
xchg
adcb
jo
fsubrl
jnp
in
mov
inc
nop
dec
mov
xchg
adc
aas
iret
mov
mov
in
cltd
xchg
cmp
xor
popw
push
in
inc
subb
fisubs
jbe
cld
in
inc
xor
and
fs
pop
sbb
pushf
xchg
mov
fisubrl
mov
mov
orl
cmp
dec
mov
rorb
push
mov
fiaddl
mov
or
cmpsb
out
mov
push
xorb
iret
cmp
and
popf
repnz
test
mov
repz
add
dec
push
or
sbb
rol
adc
dec
add
bound
dec
leave
scas
adc
aad
and
stos
loopne
ss
shll
inc
cmpb
aas
jle
cmc
sbb
push
ja
loop
adc
lahf
push
xchg
jl
std
sub
jmp
daa
leave
jl
stos
sub
push
daa
sbb
and
inc
push
pop
test
jo
mov
fdivr
loop
les
xlat
sti
scas
and
inc
dec
mov
xor
in
hlt
lret
push
fistl
jle
int3
push
xchg
popa
fildl
mov
enter
aam
xor
jl
push
push
push
in
ljmp
mov
mov
ret
mov
and
jle
outsl
lods
jnp
fbstp
push
push
mov
clc
mov
mov
add
in
shrb
scas
cmpsl
pusha
negl
cmpsb
movsb
dec
mov
cmpsb
push
and
int3
fmull
jb
push
test
adcl
mov
out
add
sub
stos
popf
clc
hlt
add
ljmp
in
out
add
mov
cmp
sti
cwtl
push
cmp
inc
or
leave
lret
mov
in
lret
shlb
and
mov
adc
jnp
xor
aad
cmpsl
lock
dec
add
dec
in
push
lock
outsl
dec
mov
repz
dec
dec
xorl
xor
mov
in
imul
shlb
push
lods
jl
mov
cmp
mov
cmpsl
aam
xchg
dec
mov
lods
scas
cmpsb
rolb
jae
add
mov
jmp
and
push
xchg
lret
ja
ljmp
clc
jns
adc
sub
mov
jle
dec
stos
mov
cmpsl
lret
sti
sub
xchg
jnp
je
sub
jmp
mov
arpl
iret
sbb
dec
shl
dec
outsl
mov
push
sbb
add
push
shll
imul
cmpsl
cli
aas
pop
mov
aad
clc
aam
daa
repz
lods
jge
cmovp
jnp
push
mov
into
rcrl
push
mov
imul
jge
add
push
jecxz
mov
data16
fs
jb
mov
mov
psraw
jbe
popa
ror
xchg
repz
int3
cld
cmpsl
jne
imul
enter
mov
shr
adc
and
lock
in
or
aas
imul
jmp
adcl
mov
xor
lret
mov
mov
jns
mov
cs
cmp
pmaddwd
mov
mov
mov
adc
xor
sbb
nop
cmc
dec
fs
mov
xor
rorl
out
in
outsb
fs
push
sbb
aaa
outsb
rcll
mov
and
cmpsl
xchg
daa
push
in
mov
mov
aad
xchg
cmpsb
ret
push
xchg
push
add
rcrl
or
shr
sub
and
push
stos
fldl
daa
and
pop
and
xchg
shll
xor
lods
inc
addl
data16
out
jl
dec
sub
loopne
aaa
adc
gs
daa
or
inc
enter
enter
dec
mov
dec
daa
adc
adc
fcmove
repnz
mov
les
inc
xchg
adc
or
aaa
mov
sahf
cld
cmpsl
xor
dec
and
stos
jg
cmp
mov
xchg
and
mov
inc
mov
xchg
loopne
mov
lock
les
xor
dec
cmovs
fistl
jbe
sahf
push
jno
lods
shll
stc
out
mov
mov
fs
into
mov
mov
jg
and
cmpsl
xorb
insl
out
test
push
rolb
rcrb
push
movsl
lret
mov
popa
cmp
dec
nop
sti
dec
ret
add
lret
mov
xor
insb
mov
xchg
dec
pop
mov
xor
pop
cmpsl
loop
push
scas
je
xor
in
and
shll
push
ret
daa
mov
jo
pop
int
imul
inc
dec
rclb
ljmp
es
adc
sub
and
pop
subb
pop
dec
xchg
ret
xchg
fdiv
jp
rorl
push
pop
daa
into
ljmp
shrl
cmpsl
mov
ret
xor
enter
or
push
ds
cmpsl
stos
test
sbb
in
xor
sbb
and
mov
int3
push
push
hlt
je
pushf
xor
pop
inc
repnz
sar
push
mov
add
adc
imul
or
rolb
push
add
and
inc
outsb
addb
mov
mov
int3
mov
xchg
mov
mov
push
loopne
or
push
rorb
or
adc
jl
outsl
repz
mov
or
loopne
or
mov
psrlw
adc
mov
mov
in
orb
mov
push
shl
mov
shll
or
pop
mov
out
mov
gs
or
mov
clc
sub
add
mov
lahf
leave
ds
mov
inc
jbe
and
dec
aam
push
xchg
outsb
add
xor
stc
and
orl
orl
and
or
lea
outsl
lret
cltd
nop
add
mull
dec
in
insb
in
icebp
xchg
inc
inc
aaa
or
mov
push
push
add
or
roll
lea
add
btr
and
jo
mov
stos
mov
cmpsl
getsec
shrb
jne
fwait
jmp
mov
test
mov
xchg
mov
xchg
lods
outsb
je
stc
rol
pop
push
add
cmpsl
pop
and
clc
rcll
ljmp
or
or
mov
sub
fs
repz
aaa
xor
inc
add
roll
push
sub
dec
ror
mov
je
stos
sbb
pop
inc
in
aaa
aad
pop
lret
shrl
jne
ficoms
inc
cmc
and
in
cmp
xor
mov
xlat
outsl
pop
sub
sbb
clc
lcall
pop
jmp
xor
ret
lock
dec
fcmovb
mov
add
mov
mov
mov
inc
ss
imul
subb
addb
arpl
pop
mov
cmpsl
std
fistl
sahf
inc
add
movsb
dec
hlt
dec
sbb
pop
xchg
pusha
cmpsb
adc
xchg
negb
push
push
mov
dec
or
inc
push
les
rolb
into
xor
mov
rorb
xor
xor
sbb
push
add
pop
mov
add
repz
je
add
push
dec
andb
mov
and
mov
bnd
inc
mov
les
xchg
fs
das
dec
test
push
in
xchg
sbb
lea
add
and
scas
add
mov
sar
lds
popa
mov
jns
imul
pop
jecxz
jecxz
jo
insb
enter
mov
sbb
add
pop
jnp
outsb
mov
test
and
sbb
xchg
std
into
lods
pushf
rorb
xchg
daa
outsb
mov
push
inc
int3
scas
cmp
mov
xsha256
cmpsb
push
and
or
in
repnz
es
stos
xchg
cmpsl
pop
in
scas
scas
jnp
adc
lcall
mov
jecxz
push
add
rorl
xlat
cmp
movsb
rdpmc
lret
mov
sbb
jg
sub
adc
hlt
mov
cmpsl
pop
ftst
sub
mov
sub
sahf
mov
add
xchg
int3
nop
cmp
mov
mov
fstps
test
mov
and
jmp
push
jl
dec
and
cmpsl
cmp
sbb
mov
mov
lret
sbb
inc
dec
mov
leave
lret
cmp
or
inc
add
std
xor
dec
fadd
mov
dec
xchg
and
mov
xlat
sub
sbb
and
addr16
cwtl
fisubs
inc
jmp
xor
mulb
les
mov
ret
inc
cmpsl
jmp
arpl
dec
repnz
push
mov
dec
mov
je
sbb
dec
insl
cwtl
or
jecxz
in
stos
arpl
xchg
mov
mov
mov
jle
iret
ljmp
aam
imul
xlat
iret
insb
out
std
rcrb
adc
enter
pushl
xor
imul
dec
lock
pop
mov
loope
movsl
xor
mov
std
stos
pop
mov
dec
mov
lock
ret
das
mov
sub
push
repnz
sub
jo
cmpsb
adc
mov
push
mov
jl
test
adc
or
cld
and
fdivl
rcrl
cmc
xor
or
cmp
movsl
cmp
in
push
inc
sbbb
sahf
mov
out
cli
sbb
or
rcrl
jecxz
mov
cmpsl
jmp
mov
add
out
ja
shll
sub
pushf
dec
inc
xlat
xchg
inc
inc
ja
scas
fbstp
std
or
repz
adc
outsl
sub
in
in
pop
fmuls
or
les
xchg
xor
mov
push
mov
imul
and
dec
iret
or
out
cmpsl
mov
lret
mov
mov
add
pop
xor
pop
xchg
mov
add
repz
xchg
lret
mov
xchg
mov
inc
xchg
mov
add
inc
push
ret
nop
outsl
xor
push
sub
push
in
add
sub
inc
xchg
xchg
orl
sub
jmp
sarl
inc
mov
stos
push
ss
cmp
xchg
ljmp
sub
jae
fnstenv
js
cmpsl
aad
jl,pn
inc
arpl
outsl
icebp
cmp
xchg
out
ret
popf
cmpsb
xchg
inc
dec
fldenv
jmp
jnp
sbbl
in
push
push
and
loop
cmpsb
js
shl
add
shll
or
push
scas
int3
jne
pop
aad
xor
aam
jae
testl
mov
xor
movsb
jae
fnsave
mov
dec
push
xor
loope
dec
pop
lods
mov
loopne
ror
rorb
mov
aam
rcrb
mov
popa
xlat
sub
lret
add
imul
sarl
sbb
adcb
dec
mov
out
jns
fiaddl
inc
cmp
mov
inc
push
andb
shl
xor
in
aam
out
push
mov
leave
xor
mov
jns
cmpsl
and
or
lret
pop
xor
shrb
fnsave
mov
dec
mov
pusha
loop
xchg
push
icebp
or
add
movsl
jle
cmc
add
sbb
add
mov
or
push
fmuls
ror
fsts
in
pop
aaa
mov
adc
add
xor
dec
decb
pop
push
movsl
ret
cli
jecxz
into
dec
int3
mov
dec
mov
mov
sbb
gs
or
add
inc
popa
out
xchg
adc
lcall
pop
pop
jne
ljmp
fisubrl
xor
jg
dec
lea
dec
fs
ds
dec
inc
lea
push
pop
jno
sbb
cld
jns
sbb
inc
xchg
mov
sub
pop
jmp
shr
pop
in
push
adcl
or
hlt
push
repnz
push
lock
dec
loopne
iret
xor
cmp
lret
jmp
and
cld
xor
les
jb
sub
roll
adc
das
pop
out
adc
add
ss
into
lods
add
mov
xchg
mul
sub
int3
xlat
repz
add
je
inc
jbe
cmp
mov
pop
push
add
out
aaa
pop
mov
testl
dec
mov
out
jecxz
out
pop
and
or
mov
iret
add
popf
inc
adc
xchg
push
sbb
cmpsb
jno
jmp
lahf
pop
loopne
pop
cmpsl
mov
sub
scas
or
jno
andb
test
jecxz
pop
sub
mov
sub
cwtl
or
enter
fnsave
loop
push
flds
push
sti
xchg
subl
xor
mov
shlb
iret
fs
out
repz
or
mov
outsl
insl
mov
jno
in
inc
dec
popf
les
jl
aaa
int3
aas
push
in
adc
jne
adc
push
push
ljmp
push
mov
imul
pop
loop
pop
jmp
push
or
les
sbb
or
fwait
mov
adcl
xor
int
mov
sub
xor
es
cmc
pop
les
out
in
ror
mov
or
add
cmpsl
mov
cmpb
lret
loop
clc
inc
sbb
cmp
and
and
cmpsl
subb
loop,pt
popa
rolb
cmp
outsl
popf
jmp
iret
iret
sub
dec
mov
push
sarl
mov
xor
mov
adc
vcvtss2si
dec
mov
in
adc
stos
xchg
adc
andb
aaa
inc
std
in
pop
rcrl
arpl
push
inc
scas
shl
mov
call
inc
insl
lea
sub
jno
sbbl
testl
push
jae
xlat
aam
int3
js
dec
sub
mov
xor
jmp
xchg
aad
pop
mov
sub
lds
xlat
mov
cmovp
loope
jbe
mov
rol
sub
cltd
jb
add
hlt
mov
add
loopew
loop
push
or
ficomps
repnz
fstpl
mov
jnp
lods
mov
push
andb
mov
mov
leave
movsl
rcl
mov
test
out
mov
das
pop
movsb
lahf
cwtl
sbb
xor
fildll
aaa
add
mov
enter
add
movsl
loope
push
sub
addr16
mov
and
mull
xor
ja
sub
xorb
je
jo
adc
dec
push
call
test
insl
mov
arpl
or
xorb
out
inc
mov
lfs
mov
sub
add
and
nop
movsl
push
mov
lock
sub
push
gs
mov
loopne
or
mov
dec
jmp
and
and
imul
jbe
xor
lahf
add
hlt
inc
sbbb
mov
clc
mov
aam
push
in
inc
imul
cmp
inc
push
add
inc
stc
das
xlat
lea
mov
fs
jno
jle
out
push
es
ss
jmp
out
pop
sbb
rolb
repz
mov
mov
imul
gs
out
xchg
fsubrl
in
fsubrl
add
scas
int3
out
movsb
xchg
mov
adcb
imul
aad
jmp
mov
sub
test
dec
arpl
xorl
sub
xchg
gs
loope
xlat
inc
adc
clc
mov
or
fdivrl
pop
aaa
mov
lods
hlt
movsb
imul
dec
mov
sub
push
cmp
mov
mov
in
out
ss
add
les
fcompl
push
push
arpl
add
or
ret
bound
in
je
xor
sub
xor
fldcw
fistpll
dec
jbe
jnp
aam
out
mov
in
mov
mov
loopne
lret
pop
pop
arpl
jae
and
or
push
rep
outsl
das
rcr
push
adc
nop
jl
sbb
in
mov
es
popa
test
xor
ds
mov
pop
lods
lret
loope
lea
loope
mov
mov
fwait
mov
xchg
sub
dec
test
dec
add
stc
jne
addl
inc
inc
dec
inc
add
xlat
ret
mov
inc
bound
pxor
mov
mov
adc
mov
inc
movsl
adc
aas
scas
push
lret
xchg
and
adc
lret
mov
mov
adc
outsb
scas
inc
dec
mov
or
loop
std
addb
loopne
cs
and
dec
clc
mov
mov
dec
imul
cmp
or
sub
push
test
adc
mov
arpl
inc
add
push
xor
jecxz
sub
push
xor
push
dec
cmp
and
push
out
xchg
pushf
adc
xor
iret
inc
jecxz
cmp
pop
push
or
xchg
leave
sub
mov
jno
dec
lcall
xor
cmpsb
mov
add
pop
xorb
cmp
jnp
dec
mov
ret
push
jno
mov
jne
ret
aam
cmpsb
rcll
rclb
mov
inc
and
cmpsb
lds
std
fstps
int3
mov
mull
mov
cmc
mov
jbe
pop
mov
aaa
arpl
enter
add
subl
retw
lock
fcmove
fwait
sarl
call
into
sbb
cmp
or
test
sub
gs
int
outsl
aas
add
and
sub
xor
fs
pop
cmp
int
or
lahf
mov
sbb
xor
xchg
mov
popa
pop
xchg
cmpl
sahf
add
add
mov
leave
in
aaa
lcall
xchg
mov
mov
addl
inc
mov
jns
xchg
lret
xlat
sbb
cmp
sub
out
sub
sub
popf
mov
ss
stos
lret
test
push
push
rolb
pop
mov
in
or
jg
rcrl
popa
pop
cmp
mov
cmp
daa
cmp
cmpsl
dec
push
out
sub
es
push
sbb
push
vmovsd
cmp
and
xor
sub
pushf
mov
hlt
in
mov
shl
pop
inc
repz
mov
je
xchg
shll
stos
sub
inc
mov
in
dec
andb
orb
mov
shlb
mov
lret
xchg
sub
push
or
pop
add
xchg
push
adc
aaa
sub
das
adcb
mov
mov
cltd
inc
decb
push
ret
inc
stos
mov
daa
push
fst
lea
push
mov
mov
loopne
divl
lock
push
jno
xchg
enter
ret
push
outsb
mov
xchg
sbb
xchg
rol
add
fwait
and
sbb
sbb
pop
sbb
xchg
mov
xor
ja
repnz
mov
pop
cmpl
mov
mov
inc
xor
loopne
pop
shll
pop
jne
sbb
fwait
jle
rcl
test
push
cmp
mov
push
mov
sub
test
movsb
bound
sti
push
cli
cli
ja
push
fdivl
les
xor
xor
xchg
mov
in
dec
xchg
mov
push
push
movsb
mov
ja
sub
jl
stos
mov
lret
loope
out
pop
inc
add
sahf
adc
xchg
adc
and
loop
push
push
rorl
subl
jns
pop
les
js
cld
xchg
jno
and
cmc
mov
pushf
bound
mov
rcll
loop
movsl
pop
ljmp
clc
test
leave
ds
push
inc
or
in
add
aas
adc
test
lods
pop
cmp
push
je
push
cmp
movsb
lahf
inc
repz
sub
rcrb
mov
xchg
rol
add
int3
stos
inc
or
in
in
push
inc
xchg
push
pop
hlt
xchg
add
frstor
popf
les
fmul
cld
mov
ss
lods
or
xchg
jae
or
aam
cmp
div
js
out
out
faddp
xchg
xchg
cmp
popf
int
sub
jne
test
or
adc
lret
push
stos
pop
mov
sub
pop
push
cltd
add
push
lahf
add
rolb
inc
xor
push
push
mov
stos
jo
push
aaa
ret
aad
shrl
enter
lret
mov
das
push
jle
shrl
jbe
cli
inc
int3
xchg
mov
xchg
cmp
rcl
pop
mov
xchg
faddl
jne
ja
dec
inc
push
ss
adc
cwtl
lea
and
shl
xor
ficoml
mov
sbb
adc
pop
lret
cld
bsr
dec
mov
sub
push
fmuls
xor
or
dec
mov
cld
sub
ljmp
or
mov
jmp
push
dec
arpl
jno
andb
ja
sub
or
ret
fdivrs
mov
add
pop
pop
sbb
montmul
cmpsb
out
mov
addl
mov
push
mov
lods
or
cmpsl
les
fistps
cmp
push
es
int
outsb
out
cltd
xor
add
out
adc
and
xor
rcrl
jae
test
into
xorb
mov
cmpsb
popf
xchg
lcall
jle
cmp
mov
inc
and
inc
cmpsb
sti
int
cmpsl
push
fdivrp
push
rcrl
aaa
leave
sti
add
subb
pop
adc
add
mov
push
cltd
add
dec
and
sbb
or
mov
lods
popa
pop
or
popa
jle
mov
fimuls
bound
loopne
inc
lret
jb
outsb
icebp
jmp
in
aam
jnp
dec
ljmp
sbb
dec
or
rcll
dec
mov
ret
arpl
bound
aaa
rorl
xor
dec
cmp
fidivrl
or
rcll
dec
add
loope
push
arpl
mov
mov
or
sub
and
cmp
vpmullw
cmpsl
xlat
insb
mov
je
ja
mov
lahf
cli
pop
in
mov
inc
je
fldl
mov
aaa
push
jmp
frstor
and
and
sub
mov
les
push
pop
rolb
iret
cmp
cmpsl
xchg
mov
int3
xchg
sbb
mov
cli
push
fcomi
push
jl
cmp
idiv
mov
push
jo
outsl
inc
cmp
rcll
ffree
jmp
rolb
inc
add
jg
sbb
add
jp
mov
lret
lcall
jne
int
fdivrl
add
adc
push
dec
pushf
mov
adc
lret
ret
pop
jne
movhps
imul
bound
jl
add
test
jecxz
addr16
ja
cmc
push
push
std
inc
jne
lahf
cmp
pop
fwait
leave
pop
jbe
adc
pop
aaa
add
mov
sub
jl
push
mov
out
dec
xchg
addb
ss
std
sub
gs
fimuls
inc
popa
cmpsl
push
mov
add
xor
aaa
ljmp
jb
stos
lret
rorb
push
daa
jb
mov
jno
div
mov
jmp
aaa
xchg
popa
or
push
out
mov
je
and
ljmp
push
fidivrs
add
add
cmpsl
push
sbb
jns
or
add
sbb
sub
mov
jae
cmp
aaa
adc
mov
xor
sahf
imul
add
minps
pop
xor
ret
push
lds
shlb
mov
int
div
fs
bound
mov
push
xchg
pop
lods
aad
iret
xor
popf
dec
inc
mov
xchg
fcmovnu
mov
mov
xchg
jge,pn
in
add
push
mov
pop
test
int3
stos
adc
mov
ja
jb
inc
in
dec
out
call
or
lret
lret
jmp
fmuls
mov
je
dec
inc
in
push
fisubl
mov
shrb
push
adc
mov
leave
inc
inc
xchg
add
es
xor
inc
popa
mov
inc
in
lds
stc
insb
add
push
rcll
cmpsb
or
or
and
mov
aad
adc
push
aas
xor
mov
dec
jmp
jb
and
mov
xchg
mov
jp
cmpsb
stos
stos
xchg
jne
insb
inc
data16
lds
inc
int3
divb
mov
lret
xor
xchg
stos
shlb
add
dec
mov
jns
mov
popf
out
cmp
or
cli
ljmp
adc
in
and
inc
xor
pushf
and
add
mov
mov
scas
adc
mov
cmp
rol
xchg
inc
sub
and
imul
test
insl
add
inc
in
dec
out
out
mov
imul
scas
adcl
adc
sbb
add
addb
add
scas
aaa
pop
xchg
sub
mov
in
xor
aad
mov
mov
push
cmpsb
adc
sub
add
pop
mov
shll
jp
out
mov
sahf
daa
loop
and
mov
sbb
mov
fs
xchg
mov
ljmp
dec
jbe
jbe
dec
mov
xor
ret
in
push
das
pushf
call
and
adc
xor
lods
add
mov
inc
fdivr
shlb
push
mov
or
cmpsb
stos
xchg
xchg
jl
scas
push
lret
scas
lea
int3
mov
mulb
or
stos
adc
xchg
daa
sbb
jl
scas
inc
test
push
jb
gs
sub
imul
mov
rolb
push
lods
xor
push
xor
mov
cwtl
sbb
cli
xor
jb
mov
in
stos
or
int3
mov
cmpsb
mov
bound
cld
inc
and
in
jnp
xor
je
ss
push
adc
sti
ret
push
outsb
ljmp
stos
xchg
xchg
icebp
cmp
add
lods
les
pop
aad
nop
outsl
dec
mov
xchg
mov
mov
mov
xchg
cld
jmp
cmp
rclb
inc
mov
mov
sbb
or
imul
cmp
lods
mov
cmc
mov
and
xor
es
add
push
cmp
cmc
sbb
loop
popa
imul
add
xorl
cs
test
sbb
push
cmp
lret
xor
adc
sarb
sub
jl
cmpsl
test
add
fcompl
iret
cmp
movsb
out
xchg
push
jecxz
or
int3
add
js
sbb
faddl
sub
in
in
jbe
xchg
mov
lcall
pop
imul
incb
pop
rcrl
adc
inc
sbb
mov
loope
mov
inc
ljmp
mov
icebp
arpl
jno
push
addr16
or
mov
shrl
cmc
imul
and
sahf
push
mov
pop
andb
jns
test
fcompl
sub
das
adc
je
mov
repnz
mov
repnz
push
jmp
cmp
repnz
les
push
xchg
flds
xchg
outsl
stos
repnz
ljmp
push
ljmp
or
or
clc
lods
cmp
iret
repz
mov
inc
jl
fwait
loope
fdivr
xor
enter
mov
pop
inc
int3
pusha
inc
inc
mov
jno
mov
mov
mov
adc
lcall
and
mov
pusha
out
stc
idivl
xorl
sub
in
inc
push
jae
xchg
pop
cwtl
cld
shrl
mov
and
ret
clc
xlat
and
mov
and
push
dec
mov
cmp
xor
pop
fistpll
cmp
stos
push
cmp
dec
xchg
xchg
push
xchg
sbb
iret
jb
in
mov
mov
lret
cmp
mov
cmp
push
jb
lea
xchg
cs
cli
sti
out
adc
mov
push
pop
enter
rcrl
mov
dec
ret
sub
mov
aam
and
sub
jl
negb
pop
cli
setg
add
jb
xor
pop
cmpsl
and
or
mov
ljmp
sbbb
das
imul
loop
test
in
add
dec
movsb
orl
xor
and
sti
jmp
adc
or
add
xchg
pop
add
push
stos
cmp
push
in
lds
loop
and
adc
lret
jl
mov
mov
xor
add
dec
shl
test
stos
aaa
addl
icebp
cmc
mov
mov
stos
je
mov
rcr
jne
sahf
xorb
mov
xlat
mov
dec
add
sub
out
jg
fs
fcmove
std
cmp
mov
pop
fwait
add
cmpsl
cmp
xchg
rolb
aam
mov
inc
stos
fstpt
nop
jle
jne
sbbb
mov
jae
dec
jb
movsb
sbb
add
pushf
push
cmp
cmpsl
bound
mov
out
mov
outsb
mov
icebp
ljmp
loope
hlt
loop
dec
jbe
mov
aas
scas
outsb
outsb
sub
sarl
dec
popa
in
aam
imul
cli
mov
mov
int3
add
aam
fcmovnbe
sub
or
mov
mov
inc
xchg
mov
inc
bound
ja
xor
or
mov
loop
je
notl
mov
xor
jnp
and
push
mov
pop
xor
lret
data16
fwait
cmpsl
incl
orl
push
cmpsl
mov
outsl
pop
xchg
sbb
or
dec
push
out
aam
sub
and
repz
xor
notl
rsqrtps
into
cwtl
call
mov
dec
or
and
xor
jmp
jg
xchg
xor
sub
push
jle
aaa
lock
shr
ret
mov
in
add
xor
xchg
outsl
loop
or
pop
mov
pop
jecxz,pn
inc
fadds
mov
or
das
mov
push
movsl
jae
add
scas
in
adc
mov
cmp
inc
add
dec
adc
ficomps
divl
mov
mov
hlt
out
in
or
aas
and
add
xchg
jmp
xchg
mov
xor
hlt
loopne
lods
mov
pop
ficomps
mov
xchg
add
cmp
sub
outsb
fwait
rorl
fidivrl
out
mov
fldenv
sbb
fnstsw
push
pop
nop
dec
cmp
lea
and
lock
aas
lds
pop
popa
mull
out
xor
fwait
mov
into
jno
fldt
inc
push
add
lcall
imul
pop
stos
push
mov
or
stos
lret
in
sub
push
mov
mov
jne
clc
popa
push
or
dec
dec
and
dec
in
lret
lret
stos
lahf
push
pop
or
mov
aad
cmp
daa
mov
stos
ljmp
and
xlat
xor
push
inc
out
sbb
xor
aad
lock
int3
decb
lret
outsb
mov
rorb
sub
ret
add
adc
mov
lret
pop
repz
andb
mov
imul
push
mov
pop
mov
pop
lret
mov
js
aam
add
dec
pop
and
mov
les
andl
adc
mov
xchg
in
test
adc
addb
iret
sbb
in
outsl
mov
andb
in
mov
sbb
cs
int3
cmp
jne
push
dec
hlt
xchg
mov
std
cmp
shrl
push
shr
add
mov
adc
inc
cwtl
mov
iret
cwtl
xchg
mov
mov
das
mov
sub
das
adc
ret
inc
fmull
xchg
insb
repz
sub
or
aaa
add
add
adc
push
orl
test
fiaddl
lods
jge
jnp
movsl
xchg
jge
inc
cmpsl
add
sbbl
pop
fadds
dec
ja
mov
jl
xor
xor
mov
sbb
pop
dec
jne
add
adc
xchg
das
and
dec
in
leave
int
sbb
xchg
sbb
test
cltd
xchg
movsl
sub
dec
add
and
das
dec
add
enter
add
inc
shlb
pop
stos
mov
mov
dec
add
pop
lea
lods
xor
inc
add
mov
sub
rolb
jecxz
ds
push
mov
or
pop
add
add
dec
insl
cmp
mov
in
mov
pop
scas
inc
test
subb
shll
imul
inc
rolb
xor
adc
xorb
mov
repz
std
sbb
fsubs
jno
and
std
mov
ret
outsb
adc
mov
orl
bound
push
inc
mov
cmp
jb
popa
mov
lcall
mov
ret
dec
mov
cmp
mov
flds
mov
mov
fs
in
mov
in
sbbb
sub
xchg
and
dec
ljmp
inc
pop
movsl
jo
push
inc
sbb
mov
mov
loopne
popl
hlt
call
scas
mov
shll
jl
adc
jecxz
subb
loop
sub
mov
pop
repz
mov
mov
repz
test
adcb
stos
shrb
mov
in
or
out
shrl
mov
mov
in
out
xor
dec
popl
xchg
int
imul
jno
int3
roll
in
cmovno
xor
inc
insl
jbe
insb
repnz
mov
cmpsb
insb
sbb
mov
movsl
jg
into
mov
rcll
mov
xor
xchg
mov
inc
ss
adc
mov
pop
jb
cmpsl
jp
add
testl
in
push
fcoml
xchg
dec
cmp
addb
mov
js
cmp
mov
push
lret
stos
sbb
mov
in
push
repz
adc
lcall
mov
xor
and
mov
dec
mov
mov
add
fs
push
pushf
fwait
icebp
dec
cmpl
push
xor
cmp
mov
cmpsl
int3
stos
in
insl
xchg
movsl
sub
outsb
and
pop
rolb
dec
pop
cmp
mov
cmp
in
fidivl
dec
mov
addl
ret
sarl
push
mov
sub
fdivs
mov
out
ret
push
mov
or
lret
cld
stos
jae
push
xor
sbb
call
sahf
add
xchg
push
jl
ljmp
std
add
ds
inc
dec
mov
scas
mov
pusha
out
ss
xchg
arpl
add
lret
pop
mov
jae
cld
xchg
and
out
sbb
mov
push
aaa
xchg
cmp
bound
and
inc
lock
or
pushf
lcall
stc
sub
iret
dec
dec
mov
bound
inc
sub
cmp
xor
pop
mov
jecxz
jg
outsb
daa
xor
mov
jmp
fildll
sarb
lret
push
jnp
mov
pop
dec
cld
into
inc
add
decl
adc
xor
shlb
mov
incl
lods
mov
inc
cmp
add
mov
mov
add
pop
inc
ljmp
sbb
mov
jge
or
xchg
push
unpckhps
lock
arpl
outsl
in
sarl
stos
lock
mov
mov
dec
inc
mov
xchg
inc
arpl
and
stos
test
push
ljmp
outsl
mov
and
ljmp
add
mov
pop
cmp
out
jnp
or
and
fcmovb
mov
jecxz
inc
and
inc
mov
out
mov
xor
xor
xlat
mov
test
xor
lret
ss
xchg
add
mov
cwtl
dec
shlb
clc
aaa
add
into
adc
xlat
cmp
xchg
ret
cmp
fwait
push
jbe
dec
clc
andb
add
int3
aas
xchg
add
xor
xchg
inc
loopne
cmpsl
dec
xchg
mov
or
cmpb
imul
push
getsec
pushf
mov
movsl
jecxz
push
jbe
push
inc
js
adc
jl
lret
loope
mov
in
movsl
dec
push
add
xchg
std
xor
jecxz
and
adc
in
mov
stos
cmpsl
out
xchg
jno
das
and
sub
mov
cmpsl
das
imul
cmpsb
mov
mov
adc
scas
or
rorl
mov
mov
mov
push
sbb
add
orl
add
ret
mov
stc
mov
cmpl
xchg
mov
stos
sbb
popf
rorb
imul
xor
mov
lods
add
mov
ds
jno
ret
stos
aad
add
addb
or
movsb
jb
les
fs
mov
loop
aaa
jg
sub
ret
je
adc
add
add
sub
clc
jmp
cmpsb
ljmp
push
loop
sbb
cmc
jle
or
push
cmpsl
movsl
cs
divl
pop
scas
mov
jl
push
xchg
jge
mov
or
jle
rcrl
stos
sub
sbb
push
mov
repz
add
dec
jl
mov
cltd
inc
aaa
sahf
test
add
pop
pushf
cli
les
inc
cmpsb
adc
and
push
mov
jne
jb
pop
or
xchg
xor
pop
hlt
fwait
and
popa
push
sbb
test
lret
in
ds
out
dec
andb
jmp
divl
je
repz
outsb
outsl
mov
push
aas
mov
imul
sub
or
popf
cmp
add
add
sahf
aas
outsb
repnz
pop
loop
add
xor
scas
mull
sbb
xchg
or
pop
shll
out
aaa
push
jg
push
incb
push
stos
test
mov
lock
pushf
and
fists
or
add
cmp
out
ljmp
mov
lret
sbbl
push
hlt
data16
ja
pop
or
push
pushf
pushf
jmp
int3
mov
mov
lods
icebp
shl
add
repz
call
rcr
mov
dec
lea
mov
cmpsl
mov
mov
add
ret
xorl
adc
inc
jmp
dec
ljmp
loop
stos
add
fwait
imul
add
push
and
pop
xor
cmp
in
punpckhdq
inc
adc
and
mov
dec
bound
or
test
in
mov
fildl
mov
aaa
lea
or
imul
imul
dec
orb
push
addl
arpl
into
dec
add
and
jmp
je
jno
fimuls
or
repnz
adc
mov
push
add
shll
rclb
mov
jnp
dec
stos
cmp
inc
mov
clc
mov
cmp
or
leave
cmp
pop
or
jecxz
in
mov
cmp
sbb
pop
dec
dec
and
loopne
lods
and
adc
cmpsb
pop
push
or
sub
lahf
xlat
push
cmp
mov
fsubs
mov
sub
or
in
sahf
aam
mov
sbb
cmp
jmp
dec
orb
adc
dec
push
jmp
xchg
fsubs
fmull
dec
push
ljmp
push
out
dec
std
mov
mov
cmpsb
inc
std
rorb
mov
sbb
pop
rorl
in
fisubrs
mov
subl
and
pop
out
mov
inc
stos
out
mov
das
aaa
add
into
push
mov
push
xor
pop
stos
sub
mov
pop
iret
cmpsl
sub
ficoms
inc
jp
add
inc
xor
repz
xor
jno
mov
push
jbe
push
in
mov
mov
jne
insl
and
pop
neg
jae
xorb
dec
ja
sub
push
inc
push
popl
aam
xlat
xchg
fsubrl
les
pop
notb
bswap
or
dec
inc
pop
xorl
xchg
mov
hlt
repz
cld
sarl
in
and
mov
push
btr
lods
mov
sub
add
aam
jno
add
addl
add
test
mov
andl
aas
sub
mov
inc
orl
add
adc
insl
xchg
add
push
push
ror
and
mov
pop
dec
push
lea
movq
pop
int3
push
inc
loopne
lcall
insl
cmp
les
in
imul
xor
dec
jns
je
fs
xchg
jle
in
repz
dec
mov
mov
sub
inc
test
repz
aam
movl
push
push
mov
add
mov
add
mov
movb
inc
cli
out
lea
pop
push
xorl
mov
lods
mov
cmpsb
jmp
mov
sbbl
ljmp
pop
jne
and
and
mov
mov
add
jb
outsb
xchg
dec
rorb
rcll
loopne
push
in
jecxz
sbb
xchg
addb
je
mov
pop
ret
fimull
mov
and
mov
sub
and
sbb
xor
xor
push
and
xchg
pop
dec
pop
subl
outsl
ror
pop
repz
add
ljmp
jle
loopne
pop
imul
push
mov
cwtl
in
mov
cld
lret
js
xor
push
inc
out
stos
lret
push
jo
cli
les
out
cltd
inc
test
push
dec
dec
mov
dec
cltd
cwtl
or
xor
jecxz
push
jns
sub
sub
or
popa
cli
push
mov
stos
sbb
push
daa
int3
imul
in
imul
lea
push
incl
outsl
jb
repnz
pop
mov
inc
mov
orl
cmp
cmpb
push
scas
pusha
bound
push
add
push
je
subl
leave
lods
test
xchg
mov
jecxz
push
add
enter
cltd
shrb
out
repz
jle
fldt
sub
cmp
arpl
out
adc
testl
inc
push
jmp
into
add
xlat
mov
imul
cmpsb
mov
add
lods
jl
int3
push
dec
cmp
adc
dec
mov
add
cmpsl
pusha
bound
mov
fistps
gs
push
into
ret
or
aam
inc
pop
bound
jmp
push
andb
mov
bound
mov
scas
imul
mov
int3
in
add
jae
roll
mov
sub
scas
subl
mov
mov
test
mov
and
cmp
cs
xor
mov
jmp
scas
mov
or
into
cltd
repz
stos
mov
inc
mov
inc
or
xor
cmc
jo
cmpsl
loop
pop
sub
add
imulb
repnz
add
xlat
je
fcmovnbe
mov
hlt
je
mov
aaa
fsubl
cmp
fcmovnb
and
mov
scas
or
mov
shll
andb
add
and
arpl
andl
mov
mov
fisubl
scas
test
xlat
and
ret
fwait
xchg
bound
or
fnstsw
mov
jae
test
mov
cmpsb
or
jne
mov
mov
data16
jno
data16
inc
jns
or
push
bound
xorl
pop
xchg
mov
sbb
lar
mov
or
sub
xchg
add
push
rcl
xchg
push
push
jne
into
out
mov
jae
les
stos
adc
sti
aam
shll
jmp
jbe
dec
in
scas
inc
pusha
mov
mov
xor
dec
int3
fsubr
add
and
add
push
gs
jbe
outsb
mov
shrb
popa
scas
repnz
outsl
jmp
xchg
mov
popa
adc
int3
in
subb
dec
xchg
cmp
adc
scas
in
add
inc
rolb
andb
adc
int
andb
xchg
fucomip
cld
jmp
xor
rdpmc
mov
out
mov
cli
arpl
mov
jp
fistl
int
dec
jbe
push
scas
scas
outsb
add
adc
bound
and
lock
pop
mov
jmp
scas
sub
les
in
or
mov
test
dec
dec
mov
add
mov
or
popf
out
iret
add
out
dec
adc
jmp
add
mov
popf
psrlq
outsl
mov
repnz
imul
cmpsl
and
mov
adc
push
xor
fistl
sbb
pop
cmc
mov
int3
ret
les
sub
or
pop
mov
movsb
jb
sub
sub
popl
push
rorb
fucomi
sti
xor
mov
adc
incb
addr16
or
sbb
mov
xor
out
mov
push
fnstsw
stos
movsb
or
xor
mov
adc
mov
push
cld
pop
loop
aam
in
popa
xor
cmp
clc
int3
dec
leave
shl
rol
cwtl
mov
lods
stos
imul
mov
fiadds
adc
mov
mov
push
mov
shll
sub
aad
mov
dec
stos
int3
xchg
xchg
out
aaa
push
mov
fsubs
dec
ret
xor
xchg
shlb
pushf
sbb
dec
xor
in
sub
mov
jb
jbe
add
and
cwtl
lcall
xchg
subl
mov
jo
mov
dec
dec
dec
movsl
push
lret
jp
mov
add
dec
and
dec
fdivrp
and
lock
jl
out
sub
or
xchg
cmp
arpl
out
repz
mov
addl
add
cmpsl
mov
mov
jmp
mov
xchg
lcall
add
loopne
push
out
jmp
std
shll
add
adc
rcl
out
and
popl
sub
xchg
jmp
mov
movsb
scas
rcrb
and
mov
push
cltd
push
mov
shrb
jmp
push
and
dec
shrb
jecxz
jne
mov
dec
sub
lds
loopne
or
in
xchg
arpl
adc
mov
icebp
pop
push
fsubr
jmp
jo
pop
rorl
mov
lea
mov
xchg
xor
jmp
lret
imul
push
inc
mov
or
dec
movsb
rolb
xchg
xorb
stos
xor
xchg
add
mov
jbe
repnz
pusha
mov
outsb
push
and
lds
adc
int
fwait
jbe
icebp
into
pop
jnp
jmp
lret
add
jne
jl
inc
add
jmp
jmp
cmp
lea
lahf
mov
sub
sub
mov
sbb
std
das
ret
loop
xchg
push
jbe
mov
mov
jecxz
cmpsl
adc
repnz
mov
popa
push
lahf
inc
outsb
shll
lods
adc
lods
mov
pusha
xorb
mov
xchg
insb
subl
push
cmp
adcb
mov
mov
inc
mov
lahf
adcb
cmpsl
and
mov
adc
mov
dec
dec
insb
lret
mov
mov
sbb
adc
cltd
mov
movsb
mov
rcrl
or
cltd
mov
bound
mov
mov
jnp
add
add
add
jl
xor
push
inc
mov
cmp
ss
xor
fwait
xor
mov
mov
fidivrs
pop
enter
adc
fcmovu
ret
lods
test
jb
sbbb
xchg
shlb
sbb
dec
pop
scas
xchg
mov
mov
je
add
lret
bound
mov
shll
mov
mov
jecxz
mov
inc
inc
sbb
lods
push
popf
mov
xor
leave
mov
cmp
push
movsl
xchg
mov
inc
insl
es
iret
xlat
sbb
cs
dec
outsb
mov
jb
aad
mov
int3
mov
subl
movsl
cmp
jecxz
mov
shrl
add
jo
jmp
loopne
stc
test
rcll
popa
push
lret
dec
cs
outsb
insb
jmp
or
je
aaa
mov
dec
push
push
xchg
daa
xor
add
adc
daa
daa
xor
add
mov
test
mov
adc
mov
dec
pop
les
es
pusha
mov
mov
popf
fisubrl
push
push
test
in
sbb
jae
aam
leave
jge
sbb
jns
loope
inc
jecxz
dec
add
out
or
lret
shl
daa
movsl
daa
push
shll
and
std
lret
ljmp
mov
outsl
mov
fistl
out
pop
mov
pop
dec
testl
fwait
arpl
xchg
imul
inc
fwait
xchg
mov
ret
dec
add
mov
addl
mov
andl
icebp
jmp
push
xor
cmpsl
push
outsb
mov
push
push
ret
movsl
fidivs
mov
jmp
mov
hlt
push
ljmp
movsb
sub
iret
data16
add
stos
into
mov
sub
leave
testb
jns
in
icebp
in
outsl
je
mov
or
int
add
sub
jne
push
add
xlat
popa
push
inc
push
orps
movhps
sub
aam
add
dec
mov
fldt
cmpsl
push
cmp
scas
sub
rcll
xor
dec
mov
ja
cltd
add
lods
mov
xchg
jmp
or
xchg
mov
lock
xchg
sbb
or
jns
ret
mov
sbb
pop
jne
mov
push
add
dec
stos
mov
pop
mov
enter
xchg
xor
inc
adc
dec
lret
mov
xor
out
mov
in
push
push
out
inc
pop
cmp
sbb
xchg
cmp
in
cwtl
and
mov
in
add
jmp
pop
jg
sub
or
pop
inc
sub
cld
jmp
xlat
cmp
mov
mov
or
inc
pop
or
jecxz
xor
xchg
rol
movsb
mov
jp
push
sahf
aaa
lock
push
cmpsl
repz
in
mov
cld
roll
push
inc
xor
out
lcall
or
push
je
xor
xchg
aad
jns
lret
mov
add
orb
dec
int
pop
jmp
adc
addr16
and
enter
in
xchg
pop
mov
notb
bound
fwait
or
push
in
dec
jl
jne
mov
fucom
shll
pushf
lret
push
gs
inc
testb
add
sti
mov
test
cwtl
arpl
nop
ds
push
xor
data16
stos
arpl
xor
jo
aaa
pusha
arpl
movsb
cltd
mov
sub
pop
mov
push
xor
pop
jne
dec
mov
mov
fistpl
pop
aad
popl
adc
or
mov
adc
jg
push
xchg
dec
cmp
mov
or
sub
imul
push
stc
xor
test
jmp
sti
mov
outsl
aaa
addb
fsubrl
fdivrs
mov
leave
fsubrl
scas
nop
popa
push
ret
mov
loop
movsb
xchg
mov
ret
inc
pop
rclb
icebp
mov
add
adc
loope
stc
push
mov
gs
test
dec
push
mov
mov
dec
in
dec
xor
cmp
adc
sbb
sub
std
ljmp
test
out
stos
subb
lret
cmpsl
js
jecxz
and
xchg
sub
mov
and
je
popf
and
xchg
jne
xchg
jmp
shlb
daa
dec
add
dec
pop
xbegin
push
dec
mov
or
and
fdivl
scas
jecxz
sub
mov
mov
lret
add
inc
adc
and
rolb
jl
orb
pop
xchg
inc
scas
out
in
xchg
rcll
push
adc
loopne
jne
das
orb
dec
xchg
push
or
rcll
push
xchg
jle
xor
not
ret
xor
aad
fbstp
xor
into
imul
add
test
cmp
das
dec
jmp
clc
pop
lock
mov
dec
jae,pt
push
mov
inc
jbe
out
movsl
sub
hlt
pop
add
pushf
dec
sti
add
mulb
lcall
xchg
xor
pusha
jne
insl
mov
out
cmpsl
xchg
mov
jae
or
mov
in
stos
dec
out
fwait
or
lock
sub
fneni(8087
clc
and
xor
inc
add
in
sbb
ficompl
add
call
jne
aad
pop
sbb
inc
std
lahf
cmpsl
lds
mov
add
or
ljmp
add
sbb
jns
jb
xrelease
out
pop
call
lret
test
push
in
mov
push
mov
orb
rcrb
incb
and
inc
test
or
mov
adc
lods
imul
inc
dec
or
mov
or
sti
mov
leave
loope
xchg
pop
lahf
xor
aad
mov
stos
sti
pop
ljmp
sbbb
test
ret
popf
add
xchg
sub
or
shrl
and
xor
and
subl
pop
scas
adc
or
movsl
sbb
mov
mov
test
lret
or
jl
jae
sbbl
adc
rcrl
cmc
mov
data16
mov
sbb
pop
sbb
cltd
loop
ficoml
mov
push
or
push
or
mov
adc
js
or
aam
dec
aad
push
lcall
xchg
lcall
stos
outsb
int3
into
imul
add
inc
sbbb
lret
cmp
aaa
pop
stc
mov
sbb
mov
arpl
divl
add
jge
es
data16
cmp
jge
cmpb
movsb
xor
int3
movsb
repnz
push
adc
fimuls
mov
push
add
or
adc
divl
clc
pop
xlat
inc
add
repz
ss
xor
lock
ljmp
loopne
pop
pushf
mov
aaa
les
mov
jb
mov
or
adc
out
mov
mov
sub
push
mov
fmul
adc
dec
xchg
cmp
loop
inc
and
movsl
adcl
jo
mov
aad
mov
cwtl
mov
cmp
mov
inc
stc
fisubl
in
hlt
test
lods
ficoml
cmpsl
orb
add
jbe
sbb
mov
sbb
int3
mov
lret
addr16
mov
in
jp
lods
fisttpll
in
and
xchg
popf
dec
mov
popf
cs
adc
xorl
add
subl
loope
in
pop
movsb
and
dec
outsb
sti
ret
scas
bound
and
jg
stos
add
mov
xor
pop
add
das
dec
mov
xchg
int3
pop
lret
dec
xchg
ret
sahf
add
bsr
jmp
icebp
in
lods
int3
cmpb
les
sub
aad
add
jp
or
loop
lods
out
inc
jae
or
outsl
sbb
cmp
adc
mov
repz
cmp
xor
orb
andb
sbb
nop
movb
aas
xlat
shll
ror
inc
mov
subb
jo
lea
jge
popa
out
adc
xchg
add
stos
adc
pop
cmp
or
cmpb
and
fdivl
sub
xor
lods
sub
daa
mov
xchg
jl
dec
stos
xchg
into
mov
hlt
js
or
ret
ss
stos
cmp
fs
and
push
push
xchg
shrl
push
xor
cmp
and
sbbl
ret
cmpsl
pop
sub
xchg
fildll
rorl
test
mov
or
into
mov
mov
xchg
or
cmpsl
xor
movsb
xchg
cmp
inc
fdiv
shll
imul
dec
les
push
lods
dec
or
adc
push
subl
mov
jbe
leave
stos
inc
cld
test
sbb
dec
or
or
cmp
jecxz
sarl
jo,pn
dec
dec
jmp
mov
dec
and
loopne
mov
lret
lret
add
add
adcb
xor
jbe
lret
mov
jae
adc
push
in
jno
loope
std
mov
mov
adc
push
mov
je
jp
mov
rorb
inc
mov
cmpb
mov
bound
mov
fldl
cli
mov
stos
mov
lret
mov
jb
sub
mov
aas
jg
xor
push
into
jge
xor
push
aaa
int
or
ret
adc
pop
stos
ror
aaa
dec
jecxz
seto
dec
push
xchg
notl
jle
push
mov
cmpsl
sbb
push
test
jb
xor
cmp
imul
inc
jae
sbb
jg
sarl
inc
popf
insl
fmull
lret
fsubrs
xor
mov
iret
aaa
imul
add
pop
stos
ja
lret
adc
icebp
sti
xor
push
adc
mov
and
or
mov
jo
or
mov
sub
mov
test
inc
scas
pushf
mov
test
in
push
dec
rorb
cld
pushf
je
mov
movswl
sub
jmp
sbb
adc
cmc
fstps
ret
mov
pop
push
fistpl
jmp
aas
push
push
das
int
outsl
xchg
out
aaa
xor
jmp
aad
in
mov
mov
iret
pusha
lahf
mov
xchg
pushl
cmpsl
outsl
push
add
addb
orb
xchg
mov
lcall
mov
int3
xchg
jecxz
adc
jo
js
sbb
mov
or
or
push
mov
xchg
jl
ficoms
dec
loop
into
lea
out
rolb
les
xchg
and
test
add
push
mov
xchg
pushf
mov
enter
call
out
lret
jmp
movsl
lock
jl
addl
cmp
lods
ret
xor
push
push
cld
mov
lcall
cmp
cmpsb
jle
adc
jnp
push
mov
jecxz
lea
ret
jg
add
mov
or
shl
adc
xchg
pop
out
mov
mov
mov
mov
lret
push
rorb
mov
test
lret
mov
in
jne
cmp
mov
add
icebp
and
stos
or
sarb
inc
hlt
leave
push
jb
push
or
or
movsb
out
sbb
push
cmp
cli
ljmp
xor
xchg
mov
lock
and
inc
fbld
mov
sub
inc
cmpsb
orb
mov
push
add
xchg
imul
je
mov
stos
addr16
je
das
cs
cmpsl
add
add
push
jne
lods
mov
cs
xchg
loop
xchg
outsb
int3
xor
repz
out
callw
mov
inc
icebp
push
out
mov
xlat
les
insb
je
dec
push
cmp
or
lods
push
shl
add
iret
stos
rolb
cltd
inc
je
sub
mov
pop
lea
test
pushf
jge
inc
cmpb
int
out
or
jnp
and
mov
iret
or
xchg
push
push
lods
outsl
aam
shr
pop
dec
ret
fadds
in
mov
dec
jnp
fcmovne
rorl
adcl
sub
cmp
pop
sub
rcll
roll
mov
fidivrl
dec
aas
adcb
mov
fldenv
mov
mov
dec
fadds
or
and
fldt
jae
incb
jmp
adc
lea
mov
aad
ja
push
ljmp
in
in
pop
sub
and
push
sbb
in
lds
aam
out
movsl
sub
mov
push
or
jle
sub
add
pop
aaa
inc
xchg
cmpsl
arpl
lret
push
into
bound
mov
adc
pop
xor
jg
cmp
mov
cld
das
mov
lock
or
mov
loop
mov
hlt
cltd
pop
je
mov
mov
loop
jp
or
loope
shl
sarb
imul
push
repz
sub
lods
mov
out
pop
sar
xor
in
xchg
jae
pop
movl
xchg
sub
mov
lret
leave
inc
push
push
inc
xchg
or
imul
punpcklwd
jb
jne
pop
add
cli
sbbb
jns
inc
scas
enter
dec
cltd
roll
repz
add
push
sbb
neg
test
sub
mov
das
dec
movsl
int3
cltd
int3
or
sbb
xor
and
in
jg
xlat
or
pop
sbb
int
outsl
out
pop
or
and
push
enter
scas
negl
cwtl
pusha
or
popf
ss
in
in
push
ret
pop
mov
call
push
or
popa
lods
dec
mov
repnz
lods
cmpsl
lods
mov
stos
es
mov
subl
add
stc
pop
or
movsl
jo
pop
int
mov
dec
movsl
rorb
push
inc
imul
push
xchg
and
xchg
andl
aam
insb
push
push
testl
add
and
mov
lret
push
inc
fmulp
dec
inc
cmpb
je
cli
sub
mov
jecxz
ds
sbb
out
ret
mov
jnp
mov
mov
les
mov
in
orl
mov
add
mov
pop
sub
loop
and
pushf
mov
arpl
in
stos
gs
add
repz
and
hlt
lret
sbbb
mov
outsl
fptan
sub
sub
in
cmp
orl
push
jmp
mov
lret
addl
sahf
shr
add
mov
mov
jge
outsl
lcall
mov
adc
pop
and
mov
adcb
jp
mov
mov
jmp
push
push
lahf
adc
or
inc
std
into
jo
cmp
aam
loopne
out
iret
lock
sbb
in
setnp
mov
push
roll
cmp
pop
orl
sbbb
test
outsb
adc
sub
hlt
mov
dec
jle
add
imul
cmpb
jae
fistps
and
mov
dec
fwait
sub
xchg
jg
cld
popf
ret
mov
or
or
les
ja
andb
mov
push
add
gs
sbb
adc
jnp
lods
push
adc
sarb
gs
mov
into
xchg
or
int3
std
dec
cmc
lods
out
clc
xchg
rolb
mov
xchg
mov
or
popl
ret
add
dec
or
mov
cmp
mov
sub
cmpsl
push
mov
or
sub
xchg
jmp
add
mov
add
les
hlt
out
sub
push
add
mov
or
lods
push
sub
jg
add
push
stos
popa
jnp
je
fwait
mov
mov
xorb
dec
lret
add
mov
daa
dec
in
lods
or
movsl
insb
jo
sarb
or
push
cmp
pushf
or
repnz
bound
in
subb
bnd
popa
xchg
cmp
rorb
lods
pop
cmp
sub
repnz
adc
test
jae
into
sahf
or
mov
addb
into
add
daa
lds
out
dec
int3
roll
icebp
mov
xchg
iret
ljmp
leave
in
nop
enter
hlt
imul
dec
lret
jnp
rcrl
push
add
cmc
cltd
mov
xchg
mov
outsl
mov
outsb
fisubrl
pop
fistl
jbe
je
sub
mov
cmpl
jle
jno
xchg
das
jmp
test
adc
lret
xor
jmp
ss
cld
sbb
test
outsl
in
mov
xor
idivl
cmp
jb
lds
fcmovnbe
test
and
add
fs
stc
lods
xlat
jb
dec
xchg
outsb
mov
and
pop
sbb
lods
mov
xchg
fmul
adc
das
test
mov
adc
cld
repnz
dec
sub
and
and
pusha
aam
push
xor
inc
aad
xchg
jnp
hlt
ret
jecxz
inc
inc
jmp
push
sbb
lds
lret
xor
fcoms
dec
popf
sub
frstor
cmp
fdivrl
leave
xor
xchg
leave
cs
lock
xchg
mov
xor
jmp
inc
stos
into
or
sbb
nop
subb
jno
xor
mov
add
das
or
fisttpl
lret
mov
mov
sub
shll
lahf
verr
sub
aad
xor
push
dec
rdtsc
jae
xor
adc
adc
xchg
enter
mov
jmp
loop
or
dec
jb
xlat
mov
and
fidivl
xchg
jcxz
xlat
icebp
xor
lret
jmp
push
sarb
push
int3
out
mov
inc
pmullw
bound
cld
leave
xchg
dec
jmp
fsubrs
ficompl
jae
in
add
mull
mov
lcall
xor
outsb
push
sarl
enter
imul
mov
add
lds
mov
pop
aam
mov
shlb
adc
add
nop
sub
sub
es
stos
add
sub
xor
sbbl
imul
cmpsl
lds
imul
mov
jnp
add
sub
enter
test
nop
mov
les
adc
out
sbb
and
and
sbb
xor
xchg
hlt
mov
pop
rcll
sub
aaa
pop
pop
and
iret
rorl
lods
xor
in
or
mov
fwait
xor
lea
rol
mov
addl
mov
roll
test
xchg
adc
xchg
push
daa
pop
add
xchg
lods
inc
xor
fidivrs
lods
and
popa
in
rorl
les
xor
pushl
push
enter
xchg
imul
mov
loope
or
std
lods
xlat
dec
pop
ja
push
sub
sub
repnz
es
push
pop
lahf
dec
cmp
popa
jge
mov
ret
dec
sub
push
mov
adc
mov
sbb
cmp
dec
xchg
adc
add
test
mov
mov
adc
mov
pop
inc
cmc
aam
pushf
in
mov
push
es
daa
punpckhdq
cmc
iret
je
cmp
xchg
inc
fcmovne
push
lock
call
xor
orb
lock
fsubl
je
and
mov
jge
shll
rol
dec
int3
outsb
sbb
sub
add
cmpsb
xchg
xchg
paddusb
adc
mov
mov
pusha
jmp
lock
or
cld
or
test
out
push
dec
testb
xchg
imul
std
repnz
inc
mov
mov
mov
das
sub
dec
imul
cmp
jmp
mov
sub
or
push
xorb
jno
jge
ret
les
mov
add
mov
push
shll
add
ret
fldt
or
push
mov
adc
push
int3
xchg
mov
jbe
mov
mov
add
push
dec
cld
inc
cmp
in
sti
test
or
dec
xchg
pop
and
subb
adc
cld
xchg
lds
bound
sub
rorl
or
faddl
dec
outsl
scas
add
mov
into
pushf
aaa
push
loop
das
and
pop
mov
out
cmpsl
hlt
es
je
xchg
mov
mov
mov
into
lea
push
push
das
repnz
adc
ret
mov
pop
js
adc
scas
rorl
sbb
loop
fld
mov
mov
inc
in
rcrl
ja
outsb
mov
lcall
int3
add
xor
lea
mov
pop
push
ja
imul
mov
mov
mov
xor
mov
stos
add
xor
mov
outsb
add
jne
or
mov
ret
push
xor
imul
sbbb
mov
out
daa
pusha
lea
add
sbb
cmp
mov
sbb
mov
loopne
cmc
shll
mov
mov
inc
sbb
xor
jbe
xchg
mov
arpl
daa
xor
pop
jl
cmp
push
or
popa
stos
add
sub
jg
xor
jl
cmc
lds
fldt
mov
pusha
mov
clc
adc
fistl
push
fwait
adc
push
sbb
shl
jmp
mov
xor
outsl
clc
bound
push
movntps
inc
adc
repnz
xchg
add
mov
lock
lods
lds
mov
fwait
test
sar
xor
xor
ja
pop
inc
div
sub
in
jbe
adc
add
push
adc
mov
add
jbe
test
or
loope
mov
mov
jns
repz
clc
xor
bound
adc
adc
inc
add
xor
sub
xor
jg
and
push
test
pushf
inc
mov
or
rcll
pop
and
dec
xchg
push
stc
jnp
dec
int3
xchg
in
je
add
xrelease
mov
xor
cli
bound
out
mov
or
in
jns
mov
outsb
xor
mov
lsl
ja
ret
cmpsb
mov
inc
in
xor
insb
sbb
pop
add
fstl
push
imul
mov
cmp
jle
mov
ljmp
scas
movq
add
jmp
insb
in
pop
adc
jg
fistps
aam
cmp
jge
arpl
mov
xchg
inc
mov
sbb
loope
sarl
cwtl
popf
out
rorb
cwtl
and
mov
rcrl
les
das
js
sub
add
mov
mov
rorl
ret
repz
dec
push
push
loop
cmpsl
daa
js
lods
ret
orb
dec
sub
call
arpl
stos
je
shlb
pop
sub
dec
inc
ficompl
adc
lds
adc
inc
mov
add
sahf
aaa
mov
or
mov
add
pop
add
xor
xor
and
jmp
idivl
enter
repz
xor
in
xchg
shrl
std
push
dec
adc
mul
enter
add
ss
inc
ret
xchg
aas
push
pop
add
cmpsl
out
mov
xor
jmp
outsl
adc
sti
dec
out
mov
mov
jbe,pn
test
arpl
xor
push
sbb
push
insb
push
adc
shr
cmpsl
dec
xchg
icebp
sub
adcl
jg
adc
pop
in
orb
and
xchg
fs
sbb
inc
mov
or
loopne
and
in
cmpsl
je
mov
addr16
ds
fldt
mov
push
shlb
out
je
stos
lcall
movsb
jecxz
lods
shr
and
cmp
insb
outsb
in
test
xchg
aaa
sbb
in
jmp
jecxz
std
fdivl
and
lock
or
xchg
mulb
sbb
or
repz
aad
add
faddl
loope
insb
dec
adc
sub
dec
and
fwait
pushf
cmp
jae
insb
jle
mov
jl
and
aad
push
xor
add
push
inc
das
ja
fbstp
add
bound
fwait
add
add
jno
sub
sbb
lret
mov
mov
adcl
in
in
jl
ret
dec
add
test
xor
dec
std
mov
jae
mov
sbb
sbb
or
das
jl
out
das
add
daa
sbb
cmp
mov
sub
push
add
or
outsl
push
cld
jb
pushf
xor
or
or
add
jo
push
mov
jne
jg
jl
sti
pop
inc
sbb
gs
pushf
dec
clc
xor
mov
push
mov
jae
adc
lea
mov
xchg
xor
and
leave
sub
ljmp
bound
insb
xchg
adc
or
sub
in
push
inc
or
aaa
or
adc
lods
mov
pop
mov
loop
or
je
adc
mov
sub
sub
dec
xor
lea
notl
popf
jno
les
cmp
cmp
adc
enter
push
mov
in
add
xchg
xorl
hlt
out
cmpsb
sub
repz
cltd
hlt
xchg
movb
jg
inc
stc
subb
mov
cmpsb
jge
mov
rcl
js
into
pop
or
push
in
jnp
orb
in
dec
repz
leave
je
xlat
sbb
lock
test
mov
in
sub
outsb
insb
or
in
push
xchg
pop
xchg
or
lock
movsb
andl
push
dec
or
lods
jb
ja
into
mov
dec
xlat
ret
inc
iret
add
push
mov
fs
xchg
clc
rorl
xor
test
in
inc
mov
push
bound
add
inc
sub
movsl
add
lret
clc
xor
test
add
push
js
aad
pop
push
movsl
push
mov
cmp
loopne
fcomps
inc
jl
lret
in
mov
dec
ljmp
hlt
jecxz
xor
push
and
rcrb
adc
outsl
cli
cmp
lods
jp
jmp
xlat
hlt
lods
outsb
psrad
sub
mov
in
jp
dec
out
xor
das
push
xorb
loop
popa
sarb
fnstenv
dec
or
mov
out
loopne
or
gs
mov
dec
push
sbb
jns
lret
jns
add
adc
imul
push
pop
ds
mov
adc
cli
loope
jmp
fnstsw
jmp
sbb
push
push
mov
cmp
fnstcw
mov
xor
push
adc
or
mov
subb
stc
inc
lret
push
push
add
push
mov
cmp
push
dec
popf
xchg
test
std
scas
or
adc
les
imul
xchg
in
rorb
lahf
insb
xchg
divl
xchg
add
clc
test
shr
in
xor
xor
mov
lods
jle
test
xchg
cli
hlt
ret
test
and
enter
addr16
xor
imul
mov
gs
andb
andb
adc
int3
daa
or
nop
xor
jb
push
lret
jle
add
out
ret
mov
lds
mov
in
inc
testl
shrl
mov
mov
or
lret
jb
in
xchg
add
mov
in
shll
insl
xor
inc
jae
pushf
rclb
pop
nop
jb
cld
mov
cmp
adcb
inc
xor
push
inc
push
hlt
test
mov
add
sarb
sbb
sarb
sub
pop
sarl
sub
xor
lahf
cmp
push
push
fdivs
emms
sbb
push
mov
xchg
shlb
aas
lock
in
mov
or
scas
cmp
loop
rorl
sub
jg
cmp
loope
push
jbe
adcl
mov
outsl
jnp
leave
add
xchg
aam
push
push
mov
push
add
std
lock
insb
xor
and
loope
cmpsl
ret
clc
std
and
cmpsl
mov
pop
jbe
or
pop
xchg
push
js
mov
dec
sbb
add
int3
add
cmp
frstor
lds
jp
pop
leave
es
call
repz
es
inc
sbb
dec
stos
pop
mov
or
mov
xor
push
sar
stos
movl
xor
cmpsl
outsb
and
or
lcall
or
pop
or
lock
inc
lret
cli
xchg
jb
test
add
mov
loopne
mov
daa
popf
out
outsl
mov
scas
add
sub
pop
scas
jg
pop
inc
inc
dec
push
inc
xchg
mov
sti
sub
xorb
sub
sub
lea
sti
shrl
lock
pop
jbe
into
std
pop
fisubs
add
push
in
add
or
mov
mov
xor
sbb
outsl
js
cmp
decb
mov
jbe
sub
int
negl
mov
cmpsl
in
sar
inc
and
push
mov
imul
andl
shrb
jne
inc
stos
out
mov
cli
inc
mov
subl
ljmp
push
xchg
roll
loope
jno
xor
adc
lods
mov
movsb
inc
dec
mov
cmp
cmc
lods
dec
mov
clc
sub
leave
fists
ficompl
push
daa
dec
lret
loop
lcall
xchg
shl
cmpsb
jecxz
jno
xlat
inc
mov
mov
cli
sub
aas
mov
repnz
neg
mov
out
jecxz
xchg
test
sub
loope
lods
in
sti
rorl
call
jmp
sub
fwait
xor
mov
insl
in
pushf
push
dec
fcmovb
mov
push
repz
mov
xor
sbb
movsb
in
loopne
in
sub
rorl
sub
add
ror
bt
daa
test
fidivl
popa
mov
and
inc
inc
mov
cmpb
dec
xlat
sub
lcall
imul
imul
dec
imul
add
add
xor
add
push
cmp
das
jne
std
dec
pusha
nop
pushf
iret
push
and
stos
push
dec
mov
cmpsl
dec
push
dec
notb
adc
out
out
mov
outsl
gs
and
mov
std
sub
and
mov
stc
shll
repnz
cli
scas
shll
mov
cmpsl
push
mov
mov
insl
add
outsl
pop
dec
sbb
mov
cmpsl
mov
mov
mov
xchg
stos
push
mov
mov
cmpsl
adc
sub
mov
cmpsl
repz
outsl
jecxz
sbb
or
cmp
js
lock
mov
lret
add
xor
jl
push
mov
jl
ret
pop
or
andb
mov
call
mov
dec
in
fimull
aad
or
xchg
adc
pop
mov
stos
cmpsl
push
pushf
inc
outsl
mov
ss
mov
fldt
xchg
or
mov
lcall
in
and
out
daa
lea
int
fimull
and
add
leave
pop
das
ja
daa
add
and
xchg
mov
xchg
cmp
add
sti
fsubrl
xchg
push
mov
jno
xor
adc
sbb
lcall
sbb
pop
loop
lock
jge
pop
add
or
inc
mov
sbb
inc
add
xchg
adc
mov
imul
jno
in
xor
jno
push
test
arpl
mov
ficoml
mov
or
lret
push
into
xchg
outsb
push
xchg
jecxz
xorb
mov
int3
cs
mov
mov
movsw
mov
pop
jp
cwtl
imulb
ret
imul
jne
push
dec
xor
setb
add
inc
jecxz
sarl
repnz
sbb
sub
push
subb
xchg
add
pop
pop
cmp
je
or
push
sbb
dec
icebp
or
inc
bound
pop
pop
sbb
xchg
fsubr
jae
adc
push
rorl
les
leave
lods
xchg
shlb
mov
or
mov
inc
or
lret
enter
lock
mov
adc
add
sub
lock
or
pop
aad
lret
int3
pop
test
jmp
test
add
loop
inc
adc
sub
fnstcw
iret
loop
mov
or
xor
popf
and
push
cli
ror
ja
scas
dec
or
inc
iret
xor
es
or
jecxz
fnsave
fs
jmp
mov
pop
and
push
jle
xchg
movsb
push
ja
push
clc
xchg
movsl
lcall
sbb
aaa
in
daa
bound
clc
lock
mov
push
inc
cmp
adc
sub
xchg
fildll
push
in
push
jno
mov
sbb
rcl
enter
xor
mov
arpl
mul
sbb
xchg
test
mov
sub
cmp
scas
xchg
daa
call
and
jae
orl
and
int
mov
xchg
sbb
out
dec
fldenv
mov
jae
loopne
loop
sub
out
cwtl
leave
sub
mov
test
inc
lods
push
mov
or
stos
inc
pop
xor
rorl
add
movsl
ja
inc
and
bound
es
dec
fdivr
jl
sbb
push
xchg
sbb
pushf
adc
mov
sbb
lret
xchg
insb
sub
inc
sub
mov
and
push
aam
loop
dec
fdiv
mov
push
xchg
cmpsb
hlt
leave
out
mov
icebp
pop
jnp
add
lock
daa
hlt
fmull
and
push
or
or
cld
std
into
pop
inc
jg
xlat
and
push
push
sub
inc
mov
fs
push
les
lock
ret
lret
rolb
cmp
and
lods
sbb
sbb
cltd
jo
std
mov
or
adc
mov
aaa
xor
sub
mov
cmp
xor
jb
nop
clc
mov
idiv
fldt
ja
into
mov
out
cli
or
pop
inc
fldcw
pop
cld
insl
lahf
push
cmpsb
xchg
push
stc
mov
xchg
shlb
stos
fadds
sub
mov
sbb
adc
mov
mov
loopne
fnsave
mov
dec
mov
add
mov
xlat
sub
mov
sbb
cmpsl
xor
jno
cmpsl
and
add
mov
add
aam
orl
mov
ss
mov
punpckhdq
mov
jb
push
pop
icebp
icebp
lods
popa
mov
push
lock
push
cmp
push
pop
and
fwait
and
out
lods
es
sbb
mov
or
cmp
out
mov
gs
mov
jae
adcl
clc
mov
imul
daa
lcall
daa
ljmp
jecxz
sbb
outsl
mov
shr
gs
sub
add
fidivrl
dec
adc
lea
xchg
movsb
mov
mov
leave
add
inc
pop
jl
push
sub
les
in
cld
scas
ljmp
out
inc
jo
or
rorb
in
movsl
das
test
push
inc
cld
or
xchg
call
imul
repz
aam
ljmp
in
scas
andb
outsb
pop
xchg
sbb
ret
pop
cmp
xchg
fsubrp
or
jns
fsubrp
nop
mov
mov
add
or
jmp
jo
idivl
mov
adc
bound
cmpl
in
sbb
scas
das
inc
jg
lods
je
sbb
jae
ja
mov
loopw
std
jle
mov
mov
jmp
lock
sub
cld
sub
inc
dec
mov
sub
test
or
mov
jmp
mov
outsl
adcb
adc
pop
movsb
movl
movsl
push
lock
xor
sarb
add
mov
push
mov
push
add
sbb
rorb
inc
mov
js
sbb
sti
jo
pop
mov
sbb
scas
out
mov
add
pop
mov
xor
adc
push
int
mov
into
sub
or
sbbl
mov
popa
je
sub
cmp
ret
jno
sahf
cmpsl
mov
aas
add
mov
das
push
cmp
sbb
cmp
in
lret
mov
or
xchg
pop
scas
or
bound
pop
mov
push
sub
mov
mov
fs
leave
sbb
sub
mov
or
adc
das
adc
cmp
inc
adc
dec
imul
fcoms
lret
add
cli
push
mov
push
andb
mov
push
test
out
subb
mov
xchg
xlat
xchg
cmp
cmp
mov
out
and
orb
in
outsl
cli
nop
dec
adc
push
imul
popf
in
lret
dec
std
or
add
jnp
ljmp
jns
jp
add
stos
fldenv
in
mov
push
leave
add
mov
roll
fiaddl
push
mov
outsl
mov
arpl
scas
cmp
cmp
out
cli
imul
lahf
dec
popa
xchg
in
jp
jno
nop
xor
and
dec
push
pop
mov
cmp
mov
xchg
mov
xchg
in
loop
movsb
lods
mov
push
je
mov
mov
fs
lcall
rorb
cwtl
cmp
call
je
xorb
in
movsb
je
les
pop
lret
mov
out
test
sbb
xor
jmp
add
bnd
adc
xlat
push
xchg
lea
inc
sti
ds
and
lret
sahf
int
mov
jle
add
xchg
xor
je
pop
iret
ret
out
jecxz
push
cld
and
push
mov
mov
dec
or
testb
iret
stc
js
loope
xorb
sub
repz
dec
test
sbb
shll
pop
add
add
sub
fs
cmp
sub
or
dec
movsb
push
mov
int3
cmpsl
jns
pop
mov
lock
ret
and
xor
fidivl
dec
fistps
lea
rorl
repz
push
sarb
xchg
out
add
add
cli
int
mov
sub
mov
rol
fsub
add
mov
orl
test
scas
or
mov
into
movsb
mov
loope
and
insl
shrb
push
mov
shrb
jg
jecxz
or
lods
orl
addb
or
daa
xor
add
jne
jmp
inc
dec
or
test
dec
xor
cmp
add
js
jb
out
jmp
add
rcll
push
sbb
or
and
incb
addl
dec
aam
movsl
dec
xchg
ror
mov
bound
out
stos
adcb
cs
fildl
cs
mov
xorb
inc
arpl
inc
xchg
jmp
xchg
xchg
xor
jmp
adc
add
or
loop
iret
xchg
add
les
and
les
sbb
pushf
movsb
xor
mov
or
test
xlat
loop
movsb
outsl
aaa
aaa
xchg
xor
loop
add
adc
dec
xor
cld
dec
mov
dec
sbb
pushf
movb
xchg
scas
mov
jle
fsubrs
cmp
in
xor
mov
jmp
outsl
mov
add
fucomi
inc
jecxz
rclb
dec
lods
rcr
mov
xor
loope
dec
punpckhwd
xlat
sub
imul
inc
jo
outsl
mov
push
push
out
mov
ljmp
nop
shll
repnz
int3
mov
pop
mov
ret
cwtl
test
aaa
push
dec
les
insl
insb
daa
dec
sbb
xchg
frstor
insl
xor
lds
xchg
sub
push
fdivl
fisttpll
ss
data16
mov
mov
es
xor
cwtl
cmpsl
pop
roll
pushf
data16
rcl
add
sub
test
fsubs
add
add
xchg
in
or
add
mov
push
lret
addb
orb
mov
dec
dec
mov
ret
xlat
jmp
and
std
mov
sub
les
jae
jbe
cmp
mov
sar
ja
into
mov
sbb
addb
add
pop
or
dec
cmp
adc
outsl
cmp
stos
mov
loope
sarl
mov
push
mov
cmpsb
cmp
out
mov
mov
or
pusha
popa
push
enter
lods
mov
adc
xor
mov
push
adc
pop
lret
data16
pop
shll
negl
and
adc
cltd
bound
dec
push
fcmovb
out
cmpsb
and
xlat
sahf
push
in
sub
repz
mov
mov
and
jno
in
aad
lahf
in
aam
loop
stos
inc
testb
std
bound
add
out
jl
mov
or
popf
xchg
sahf
dec
pop
iret
popa
sbb
and
add
icebp
das
les
xor
cmp
in
sub
sbbb
cmpsb
mov
mov
or
adc
mov
fsubrl
les
fisttpl
je
mov
mov
loope
test
jnp
add
inc
and
mov
mov
sbb
movsb
and
fildl
loope
dec
push
stos
fcoml
mov
stos
mov
push
fistps
lods
mov
add
roll
cmc
loopne
xlat
scas
les
cmpsl
in
sbb
inc
xchg
xor
xor
stos
add
in
adc
repnz
mov
dec
mov
lret
retw
cmpsb
mov
adc
outsl
or
lds
lahf
shll
jnp
lea
flds
repnz
mov
rolb
into
add
loop
movsl
push
push
scas
dec
rorb
orl
out
add
pop
cld
addb
out
dec
or
ret
jb
xchg
repz
xor
push
push
mov
mov
inc
stc
out
or
js
mov
repz
decl
fisttpl
inc
xchg
loope
dec
shll
dec
pushf
xchg
or
xlat
adc
movsb
jecxz
jmp
cmpb
sub
mov
add
mov
fimuls
imul
pop
les
push
cs
xchg
and
cld
inc
add
mov
pop
cmp
andb
dec
nop
pop
mov
out
mov
cmpsl
mov
sub
sarb
adcl
cmp
iret
loopne
data16
push
push
cmp
mov
mov
pop
stos
in
test
mov
es
xchg
das
aad
repnz
mov
add
sub
ret
leave
jmp
dec
dec
cmpb
fimuls
dec
jmp
push
movsl
push
in
sbb
fidivrs
lds
and
outsb
sbb
call
and
adc
out
test
jmp
pushf
cltd
or
push
movsl
fwait
jno
movsb
sub
js
lret
xor
arpl
in
rorl
leave
push
mov
xor
add
in
sub
jne
lret
outsl
je
ja
xchg
lret
add
dec
fistl
popa
mov
jno
mov
lods
rorl
and
inc
lret
jp
aaa
add
push
mov
mov
addb
mov
mov
and
std
or
xchg
or
xor
hlt
push
lret
or
aad
popa
sub
lods
movsb
bound
nop
idivl
mov
pmaxsw
lahf
popa
in
hlt
lock
loop,pn
push
ret
in
push
sahf
fcomi
fnstenv
lods
xchg
xchg
std
xchg
sub
mov
decl
inc
fsubl
mov
in
push
adc
ss
inc
test
iret
out
imul
inc
addb
add
scas
xchg
notl
push
fwait
mov
xor
lret
push
or
mov
sub
xchg
inc
jg
jae
xor
ret
pop
lahf
push
ja
loope
xorb
ret
mov
cmp
inc
mov
mov
mov
pop
loop
pop
fwait
popf
negb
mov
mov
js
sahf
test
push
and
inc
mov
mov
in
jns
xchg
pop
fwait
xorl
sbb
lret
jno
push
shlb
mov
ljmp
xchg
movsb
mov
add
jp
pusha
lea
ret
imul
loop
das
jle
dec
or
xchg
js
xchg
jnp
mov
adc
xchg
rol
jl
pop
xor
sbb
aaa
xchg
loop
cmp
sub
mov
mov
stos
lcall
adc
mov
lock
in
lea
dec
ljmp
in
ja
ret
lret
arpl
sbb
das
in
mov
mov
inc
fs
xchg
pop
bound
adc
lea
mov
sub
cmp
sbb
in
push
mov
or
dec
test
add
out
in
aam
out
sar
movsb
mov
scas
les
outsl
and
lock
push
pop
rol
push
add
inc
dec
insl
loope
add
mov
mov
mov
subb
das
sar
pop
lds
ljmp
ret
repnz
subb
mov
dec
pop
aam
loop
movsb
cmp
mov
add
mov
mov
and
and
nop
jecxz
ljmp
std
jmp
jg
aaa
xrelease
mov
in
lods
pusha
adc
lods
inc
pop
pop
test
cmp
loope
add
cmpsl
and
sti
fisttps
mov
js
lds
and
das
cmp
and
or
hlt
sbb
cmpsb
mov
pop
mov
inc
xor
mov
push
lods
mov
jae
mov
add
stc
cmc
lods
push
lcall
and
push
aam
ficoms
push
out
pop
fsts
out
jnp
outsl
xchg
add
cld
xor
jne
ror
stc
xchg
cs
arpl
out
test
mov
arpl
or
pusha
shll
xorb
mov
xor
jl
mov
lock
and
mov
xor
loopne
or
divb
jle
rorl
mov
into
ficompl
in
cs
out
add
jae
lods
pop
repnz
fs
icebp
fs
leave
js
bound
scas
mov
dec
inc
sub
pop
shrb
paddsw
iret
push
out
adc
rcrl
push
xchg
or
mov
insb
loopne
jo
dec
je
pop
int3
add
and
inc
inc
aaa
xchg
mov
in
fsub
and
and
cmpsl
and
ja
movsb
loop
xchg
add
add
mov
pop
sbb
adc
xchg
mov
dec
mov
dec
inc
or
mov
pop
repnz
insb
dec
out
lods
add
bound
lea
sub
cmp
test
cmp
push
mov
dec
mov
dec
jge
pop
in
xchg
add
repz
sarl
sti
pop
and
mov
std
mov
push
lahf
cmpsl
ds
bound
mov
ret
into
ds
clc
lcall
pop
mov
jge
add
aam
xor
in
xor
cmp
adc
loop
sbb
xchg
mov
faddl
add
not
or
adc
push
ficompl
sub
lods
sbb
stos
nop
ret
mov
out
mov
ret
xchg
sub
test
les
or
cmp
mov
faddl
mov
enter
xchg
adc
divl
adc
adcb
lret
adc
enter
sbb
mov
out
js
jl
xchg
push
shr
idivl
sbb
cmpsb
movsb
mov
inc
orb
mov
dec
cmp
xor
sarb
nop
or
fildl
sbb
scas
aam
sbb
jl
mov
or
cs
shrl
or
in
fldt
lods
push
xor
ret
fs
outsl
push
cltd
xchg
ss
in
mov
lfs
je
cmp
mov
cmc
sbb
xchg
sahf
call
xor
in
pusha
fcoml
mov
bound
cli
sar
addl
inc
mov
mov
les
out
add
js
out
in
fcomps
xorb
adc
and
xchg
mov
jnp
jl
pushf
jo
inc
pop
je
push
in
inc
fistpl
push
mov
imul
jnp
push
enter
mov
loopne
sub
add
mov
mov
jp
jmp
mov
pop
xchg
mov
rcrl
into
ljmp
pop
and
inc
fwait
ljmp
mov
pop
outsb
fwait
loop
gs
jb
sub
jno
add
sbb
call
pop
mov
repnz
cmp
mov
lods
mov
test
jns,pn
stc
mov
jno
repnz
xchg
add
inc
les
aaa
js
hlt
mov
mov
inc
sub
repz
fnstsw
bound
push
xor
xorb
or
inc
sub
push
cmpl
in
mov
mov
test
mov
jne
ret
das
and
push
sub
push
loop
pusha
outsb
mov
shll
push
aaa
push
cmp
sbb
mov
mov
in
inc
dec
std
shll
mov
in
sub
push
cltd
dec
add
xlat
loope
add
push
pop
pop
imul
and
adc
lock
fnstsw
hlt
xlat
add
xchg
es
dec
je
jno
mov
dec
add
add
inc
mov
imul
mov
and
insl
cmp
cmp
js
inc
xchg
shlb
stos
popf
cld
les
imul
push
not
push
cli
insl
inc
jbe
and
js
push
cld
stc
mov
sub
scas
mov
inc
mov
inc
mov
daa
xchg
je
mov
pushf
push
imul
je
mov
into
adc
add
cmp
mov
stos
aam
gs
sti
jbe
dec
out
xlat
add
jae
or
leave
or
leave
add
adc
repnz
pop
xor
jb
rclb
repz
scas
dec
insb
mov
int
push
loopne
mov
or
sarb
in
insb
bound
sub
sbb
jmp
push
les
or
arpl
jae
dec
movsl
movsl
push
sar
inc
xor
xor
dec
out
xlat
mov
and
sub
or
xor
add
pop
cmp
out
mov
mov
std
vmovdqu
aaa
shll
ss
ja
pop
imul
mov
inc
bound
out
mov
into
jecxz
mov
dec
adc
sub
jp
cmpsb
xchg
jns
xorl
loop
and
pop
pop
in
int3
insb
add
ljmp
sbb
popl
cmp
mov
push
incb
movsb
jno
in
dec
mov
adc
fistps
ja
xor
inc
or
aas
xlat
mov
mov
jp
mov
popa
bound
jne
cmp
mov
lock
xorl
dec
pop
or
mov
and
and
add
or
fisubs
and
stos
pop
rorl
pop
mov
and
adc
ficoms
ljmp
mov
das
mov
pusha
imul
xchg
arpl
aad
insb
push
add
movl
sub
or
pop
rcrb
je
imul
push
mov
in
pop
jns
andl
pop
test
adc
mov
jecxz
sub
iret
xorl
out
cmp
test
fcmovu
sbbl
flds
push
loop
fildl
cli
push
lods
lock
add
push
jp
js
in
pop
push
add
pop
adc
orb
lcall
mov
push
cmpsb
lret
dec
xchg
cld
addl
jnp
cmp
mov
adc
out
movsb
pop
je
xchg
nop
insb
lea
adc
mov
xor
mov
repnz
push
dec
jno
jns
shl
int3
push
mov
out
lds
shl
popf
push
mov
lods
lret
inc
ret
push
sbb
into
lods
lret
add
shll
scas
inc
in
stos
xor
aam
in
movsl
adc
jl
and
sbb
hlt
mov
mov
push
shrb
jnp
rclb
push
inc
push
out
lods
shr
mov
sarb
cli
sub
outsb
cmpsb
sarb
xchg
adc
je
xchg
jno
push
lds
push
scas
lods
xorl
movsl
add
gs
subb
addb
push
int3
push
clc
andl
shlb
mov
xor
push
mov
pop
daa
icebp
aas
adc
mov
push
movsl
xchg
gs
mov
in
cmp
adc
std
mov
rclb
lret
ret
jnp
stc
or
fildll
dec
and
or
mov
mov
dec
pop
je
shlb
outsb
pop
andb
dec
xor
mov
sbb
xor
shll
int3
testb
out
sbb
andl
cmp
pop
pop
iret
adc
movsl
sbb
bound
sbb
add
xchg
xchg
inc
fistl
sbb
mov
out
inc
adc
into
testb
into
sub
fwait
or
sub
push
or
outsb
xlat
lds
jl
xchg
sahf
aaa
mov
mov
add
movsb
cli
jb
mov
push
xchg
movsl
stos
inc
mov
inc
mov
cmp
push
jmp
out
in
cmpsb
xlat
add
push
test
add
or
shld
cmpsl
insb
sbb
aaa
adcb
ret
push
mov
test
in
in
stos
adc
cmpsl
les
es
push
push
ret
dec
push
mov
mov
push
dec
or
test
inc
jno
add
pop
sub
add
stos
scas
pop
mov
push
mov
pop
add
shrl
adc
pop
mov
add
in
sbb
repnz
fldt
xchg
mov
into
sub
addr16
mov
mov
xlat
add
pop
imul
cmp
xchg
adc
xchg
fisubrl
sub
out
repnz
imul
pop
jne
pop
sbbb
mov
dec
mov
xlat
or
sbb
mov
mov
push
int3
fists
out
push
idivb
test
movsb
cltd
mov
xchg
test
mov
mov
pop
ljmp
rclb
cmpsl
add
push
int
imul
shlb
push
mov
mov
add
fsts
dec
pushf
stos
out
push
jmp
add
cli
push
or
mov
pop
lock
int
push
lods
test
mov
fcmovne
jg
imul
loope
out
jle
pop
les
jmp
or
or
adc
xlat
and
popl
cltd
mov
lret
mov
lods
lds
mov
cmpsb
loopne
in
cmp
sahf
aam
pusha
fxch
test
jnp
out
xchg
pop
shrb
jo
add
fidivrs
in
repz
jmp
sbb
scas
jecxz
je
dec
mov
or
jge
mov
dec
sub
cltd
scas
pand
mov
push
or
mov
out
inc
xchg
cmp
mov
add
lret
and
arpl
cmp
or
sti
shl
movsl
mov
lods
daa
lods
push
jne
dec
testb
call
xor
mov
sub
ret
sbb
mov
or
das
add
xchg
aam
mov
das
pop
add
les
mov
fistps
or
iret
out
mov
out
popf
cmc
sbb
int
push
subb
mov
mov
sub
mov
sub
push
cmp
mov
or
ds
push
add
aad
jb
pushf
and
int
movb
jne
iret
mov
push
mov
je
out
push
or
scas
dec
aas
divb
cs
pop
in
fldcw
outsl
push
gs
les
lods
in
jp
mov
xor
and
mov
ds
cmp
outsl
inc
adc
mov
daa
and
mov
mov
push
stos
mov
or
loopne
clc
stos
aad
jne
inc
xor
out
adc
push
adc
lods
xlat
je
dec
dec
jp
xchg
and
adc
xchg
fs
pushf
je
mov
ftst
stos
push
in
les
test
push
sbb
cmpb
adc
mov
jns
lahf
leave
xchg
hlt
fidivrl
in
xchg
in
mov
inc
xchg
aad
mov
jmp
mov
adc
fistps
xor
movsb
mov
fisubrl
outsl
jbe
fisubs
mov
in
lock
lret
inc
std
lcall
push
xchg
push
push
jg
outsl
subb
movsb
mov
xchg
sbb
xlat
or
and
pushf
pop
mov
dec
xchg
lods
xor
push
mov
jo
jb
pop
cmp
push
add
in
and
jg
inc
jmp
adc
cli
sub
mov
xchg
outsl
stc
mov
sahf
lret
xorl
mov
inc
cmp
jnp
adc
or
or
pop
leave
mov
xchg
add
faddl
cmp
mov
sub
mov
jl
mov
int3
pop
movsl
add
push
in
pushf
in
mov
mov
push
xchg
aam
dec
add
pop
xor
sti
xor
add
arpl
mov
sub
inc
pusha
jecxz
movsb
mov
dec
sub
push
add
aas
inc
xor
mov
ret
loop
mov
icebp
mov
add
add
stos
insb
ret
pop
dec
out
adc
dec
mov
addr16
push
mov
pop
shr
mov
scas
fdivp
aas
jp
sub
cmpsb
lods
addr16
push
inc
xchg
add
sbb
lods
sti
jmp
popa
jb
pop
jle
shl
xor
add
vpsrlq
jb
jne
or
mov
push
or
mov
mov
lock
shl
mov
je
mov
sub
mov
or
dec
sub
stos
cmp
mov
add
jl
jg
mov
in
inc
bound
add
push
ja
push
or
add
arpl
mov
adc
test
rcrb
adc
dec
push
push
test
pop
bound
push
outsl
mov
je
lods
aaa
stc
or
or
mov
shll
xchg
dec
mov
cmpsb
xor
push
jmp
jmp
outsl
xchg
inc
jno
jecxz
mov
mov
sbb
cmpsl
stc
xchg
inc
adc
fdivrl
idivb
cld
mov
dec
test
sti
iret
jecxz
and
fidivrs
fldcw
sbb
addb
pop
ljmp
mov
sbb
and
sahf
jb
jge
scas
ljmp
out
es
sub
dec
loop
pop
adc
jne
adc
add
inc
movsl
mov
and
cmp
sti
dec
push
popf
movb
push
fmulp
mov
sub
scas
push
in
jg
dec
cwtl
adc
adc
pop
push
dec
sbb
aam
aad
jle
pushf
mov
sbb
jp
inc
ret
jle
aad
fcom
add
out
fisubrl
in
or
scas
and
int3
fisttps
add
add
repz
jnp
iret
mov
mov
cmpb
popa
xchg
ja
jge
rorb
nop
pop
add
lods
mov
mov
jbe
dec
or
movsl
jae
adcl
test
cmp
out
fwait
mov
mov
mov
sbb
mov
xor
enter
mov
ja
add
enter
fsubl
inc
push
imul
out
or
jmp
xor
xchg
lds
or
arpl
idiv
or
lods
dec
mov
lahf
lcall
mov
in
stc
jnp
in
mov
mov
mov
in
pushf
lods
fisubl
addr16
lret
add
mov
xor
sbbb
or
push
repnz
insl
adc
int3
mov
mov
pop
into
adc
or
cmp
stos
xor
aaa
mov
cmpl
xchg
int3
cli
push
or
clc
inc
movzbl
xlat
ja
cmp
jns
pop
out
into
pushf
imul
push
or
mov
lret
mov
aad
mov
mov
scas
and
pop
mov
fadds
in
das
lds
mov
dec
gs
int
jne
lret
push
int
int3
push
imul
loop
jns
mov
mov
jns
enter
sub
add
shlb
stos
ret
rcr
or
and
rcll
xor
mov
jmp
mov
das
or
sub
repz
mov
or
mov
mov
stos
pop
pop
xchg
pop
dec
xor
or
push
bound
outsl
fs
out
sbb
cmp
mov
sub
roll
cmp
call
dec
push
push
out
in
or
mov
xchg
out
or
outsb
cmp
mov
xor
fbld
fs
sbb
int
or
inc
mov
mov
xchg
fwait
int3
add
xchg
ljmp
lea
add
add
cmp
andl
in
xchg
add
je
pop
insb
push
iret
les
repz
out
or
mov
sub
pop
scas
add
mov
ret
imul
sbb
mov
bound
les
or
mov
addl
dec
or
add
or
repz
push
jmp
add
fs
inc
int
cmpsb
bound
fxch
xchg
ljmp
mov
push
sbb
scas
push
push
mov
mov
cmp
cmpsb
aam
push
repz
push
ss
mov
dec
adc
rcrb
mov
pop
jne
pop
lret
stc
jns
push
ja
xchg
and
inc
xchg
orb
or
mov
or
xor
sarl
popa
inc
mov
push
insb
mov
popf
or
cmovl
ret
sbb
cmpsb
pop
jl
jl
inc
mov
mov
fistpl
mov
aaa
mov
push
inc
ret
jnp
xor
cmpsl
ret
sbb
shrb
rolb
push
add
push
or
cmp
inc
pushf
xchg
sbb
pop
sbb
mov
add
mov
andb
loope
xchg
subw
enter
movsl
ret
inc
out
sbb
mov
das
xor
dec
mov
out
sbb
pop
mov
inc
add
cmp
mov
or
testl
std
filds
xlat
inc
out
push
cmpsb
popa
xlat
add
mov
movsl
jae
mov
jne
dec
leave
rorl
orl
andb
inc
outsb
and
xor
cltd
icebp
insl
xchg
es
pushf
xorb
xlat
mov
jecxz
andb
test
in
adcl
orl
daa
jecxz
les
mov
xlat
cmp
sub
adc
pop
ret
mov
xlat
lret
sub
scas
call
inc
insb
jno
icebp
mov
push
add
cltd
or
sbb
leave
inc
outsb
pop
jbe
je
sbbl
pop
mov
jp
in
sarb
add
push
loopne
sub
xchg
jo
loop
cmpl
add
jecxz
add
inc
out
shrl
enter
xor
popa
rcl
addb
pop
int3
shrl
pop
pop
pushf
out
int3
hlt
push
cmp
aas
sub
mov
faddl
rorb
aaa
idiv
mov
loop
or
push
enter
fmull
adc
push
dec
adc
inc
add
in
or
jmp
pop
out
add
adc
mov
ret
dec
add
push
mov
push
and
and
inc
sub
cmp
das
and
and
push
inc
iret
mov
or
movsl
andb
inc
ret
or
dec
mov
gs
clc
and
mov
adc
mov
out
pop
js
pop
enter
cmp
cwtl
adc
dec
push
fsts
scas
sahf
and
cmpb
xor
cmp
ss
data16
xor
pop
mov
je
pop
cmpsl
ss
stos
cmp
or
loope
mov
ds
stos
fisttps
dec
icebp
jge
ja
lret
jmp
bnd
xchg
xor
add
sub
lcall
sub
jl
shlb
cmpsl
arpl
xor
or
push
adc
xchg
ret
rol
pop
add
cwtl
sar
lcall
jns
mov
inc
stos
arpl
push
mov
lret
loope
loope
clc
pop
fisttps
xor
out
lahf
movsl
insl
lahf
testl
pushf
insb
sub
das
dec
lea
iret
push
cmpsb
mov
shlb
mov
dec
pop
ds
enter
or
aam
addb
orb
ja
dec
or
jno
imul
stos
mov
test
stos
mov
mov
xor
pop
xor
stos
mov
jmp
int3
mov
orb
outsl
mov
xlat
adcl
repz
mov
push
addb
jg
roll
inc
ds
push
lods
aam
rcll
mov
inc
clc
mov
inc
in
mov
mov
jne
scas
fs
xchg
mov
add
ret
inc
inc
mov
rcll
aam
out
mov
int
jg
inc
sarl
jae
jo
ret
addr16
pop
add
or
jno
xchg
paddw
fwait
and
mov
shlb
aad
inc
fs
mov
sub
dec
xor
rcll
xor
clc
jp
pop
push
add
and
inc
cwtl
add
jecxz
fisubs
xchg
xchg
js
iret
cli
ret
lcall
dec
loope
stc
adc
and
xchg
inc
data16
or
sub
mov
pop
and
or
sbb
xchg
dec
lret
xchg
andl
adc
or
mov
testl
or
mov
sub
lds
and
out
cmpsb
mov
mov
mov
mov
loop
lret
sub
jecxz
pop
sub
movaps
dec
mov
xorb
jne
insb
aad
ret
mov
adc
inc
sbb
or
punpckldq
push
xchg
and
out
into
sub
push
iret
into
mov
inc
sbbb
inc
in
add
jge
sub
sti
cmp
mov
inc
lds
add
inc
fcmovnb
adc
int3
fcmovu
fadd
lods
scas
fwait
clc
xchg
xor
push
add
xchg
loope
sub
xorl
je
xlat
mov
xlat
in
rcrb
xor
inc
lar
test
arpl
xchg
or
fldenv
hlt
and
xor
fisttpl
cwtl
repnz
mov
clc
add
jns
xchg
add
cs
mov
popf
shll
push
fists
jne
mov
roll
xor
jp
mov
lods
mov
in
push
add
outsl
jecxz
mov
jb
lds
add
mov
add
scas
or
fwait
scas
iret
das
out
out
add
push
xor
or
mov
jo
lock
dec
icebp
jmp
push
je
cld
xchg
int
dec
mov
cs
xchg
mov
push
orl
dec
aam
push
jmp
mov
xorb
stos
xchg
inc
scas
mov
mov
inc
mov
data16
cltd
mov
mov
mov
mov
mov
mov
or
mov
enter
mov
movsl
js
fildl
add
dec
fwait
xchg
fstpt
add
ss
cmpb
stos
add
mov
mov
fadds
jmp
jbe
mov
and
dec
cwtl
test
or
pop
inc
sub
pop
add
fsubl
lods
adc
sbb
mov
lock
mov
sub
outsl
xor
dec
push
mov
mov
pop
leave
push
test
and
call
loope
cli
mov
xor
push
addl
add
cmp
cltd
push
inc
cs
das
add
mov
and
adcb
jae
mov
xchg
mov
loop
sbb
outsl
inc
pop
lods
shll
jmp
lcall
and
pop
or
dec
jnp
sbb
es
test
std
loop
rclb
pop
mov
fildl
aad
or
rcl
fistps
add
enter
dec
nop
xor
addl
dec
inc
and
int
push
sbbb
fisttps
outsl
lret
loopne
aas
leave
lahf
or
fdivs
sub
dec
dec
pushl
and
test
scas
dec
mov
popa
cmpsl
dec
in
add
inc
movsb
imul
and
cmpsl
int3
lea
ja
addb
push
or
cmpb
imul
out
add
mov
lahf
inc
inc
cs
mov
and
imul
push
or
mov
leave
sub
mov
mov
xor
inc
loope
mov
cmpb
cmp
ja
cs
mov
cmp
xorl
mov
test
add
xor
adc
insb
cmp
pop
lea
mov
mov
loope
and
dec
mov
ret
add
orl
push
shl
cmpsl
push
leave
popa
movsl
dec
inc
shrl
cmp
mov
mov
icebp
adc
fwait
or
and
insb
mov
inc
arpl
aad
in
inc
xchg
sub
into
out
jecxz
test
cwtl
push
push
mov
xchg
push
mov
add
movsb
xchg
cwtl
mov
sbb
jne
push
adc
aaa
jo
ret
sti
inc
addb
out
pop
xchg
jnp
fimull
pop
pushf
push
in
sub
aaa
arpl
out
mov
inc
adc
pop
divl
cli
pop
add
and
cmpsb
inc
jg
or
inc
hlt
outsb
hlt
or
adcl
ss
add
aad
fxch
mov
mov
and
mov
lods
pop
mov
mov
mov
push
popf
daa
xor
fsubrs
mov
mov
movsl
add
lods
mov
cmpsb
test
xor
dec
addr16
xchg
in
jo
das
sbb
les
outsb
or
jmp
bound
dec
lret
fs
ja
insb
jno
pop
cmp
addb
pop
cmp
and
cmpsb
fisttpll
mov
addl
adc
add
xchg
popl
mov
dec
mov
mov
and
outsb
ret
push
mov
xor
mov
fcmovb
inc
jo
popa
mov
lods
les
mov
inc
inc
addr16
adc
cmp
xor
mov
push
out
jl
repnz
lret
decl
cmp
cld
pop
sub
or
pushw
pop
mov
xchg
or
pop
inc
aas
aad
push
pshufw
pop
outsl
lds
pop
jecxz
fcoms
add
loop
out
push
cld
add
lret
scas
mov
push
cli
inc
jmp
xchg
xchg
movsl
sti
mov
ret
add
incb
outsl
imul
pop
getsec
stos
push
lahf
int
pushf
cmpb
cmpb
xor
mov
ljmp
shl
sub
orl
push
push
cmp
xor
mov
fsts
and
mov
sar
pushf
push
mov
imul
cmpsb
pop
add
imul
xchg
ret
aad
hlt
mov
xor
xchg
in
movsb
push
inc
out
pop
lret
arpl
ret
mov
cli
inc
dec
adc
dec
cmp
cli
decb
repnz
out
xlat
mov
and
dec
outsl
cmc
inc
loop
jp
jnp
mov
loope
pop
std
xor
imul
pushl
add
cmp
scas
cld
and
rorl
addr16
mov
mov
mov
outsl
push
cltd
jecxz
pop
mov
aaa
push
push
jnp
test
les
das
out
sub
add
in
push
mov
iret
arpl
pushf
mov
cld
jbe
and
add
xor
into
stos
ja
inc
or
or
and
dec
aas
bnd
aas
stos
stc
bound
add
push
icebp
xchg
add
movd
loop
pop
dec
in
dec
add
subl
add
xchg
dec
movsl
and
popa
dec
adcb
lret
imul
mov
sub
fildl
push
push
jecxz
mov
shrb
decb
aas
mov
aaa
inc
cmpsl
cmc
dec
ret
in
repz
mov
ret
lock
test
mov
stos
loop
lret
mov
cld
add
movsb
out
mov
push
and
lods
stos
xor
popl
test
or
stos
test
aaa
cmp
add
testl
mov
int
les
cmpsl
push
inc
jl
mull
and
lahf
inc
dec
mov
xor
pop
or
xchg
inc
in
lea
jne
dec
mov
lret
movsb
cmp
scas
mov
sub
mov
andl
adc
movsl
mov
fs
cmpsb
dec
ret
add
mov
shll
mov
xchg
popa
lahf
xor
mov
mov
and
nop
mov
les
jnp
push
and
adc
je
sub
cmpsl
lret
dec
test
pushf
lahf
in
mov
xchg
xor
push
mov
xor
mov
pop
xor
or
ret
adc
push
enter
ja
fs
adc
add
jb
cmp
dec
daa
or
sub
in
fwait
rdmsr
sub
imul
shl
or
loopne
lods
imul
or
fsts
push
cmp
cmpsl
mov
mov
sub
ss
inc
in
stc
sbb
xor
mov
mov
mov
mov
ficompl
popa
xor
sbb
mov
sbb
test
dec
or
cmp
adc
ds
ds
cli
xchg
dec
aaa
push
dec
xchg
iret
dec
mov
fmul
ss
dec
mov
test
lcall
je
les
sbb
lcall
pop
mov
pop
mov
or
push
add
scas
mov
jle
dec
or
jae
xchg
pop
or
push
stos
out
lock
ss
movl
aaa
xor
inc
mov
vsubsd
mov
outsl
push
xor
mov
sbb
jno
sub
lahf
pop
imul
add
call
loope
dec
pushf
aam
dec
xor
cltd
add
cltd
push
mov
arpl
jae
test
lret
cmpsl
mov
cmpsl
movsb
push
pop
insb
mov
pop
out
sbb
jne
push
add
sbb
iret
movsl
add
push
ds
mov
push
mov
cmpsl
scas
xor
push
stos
or
cmp
cwtl
add
faddp
push
ljmp
incb
bound
lea
adc
pop
inc
ja
xorb
cmp
out
and
imul
push
das
push
mov
add
push
inc
or
pop
cltd
jl
cltd
add
add
jno
mov
add
mov
add
mov
xor
jne
mov
add
adc
push
mov
ljmp
mov
xchg
popa
or
pop
xchg
pop
xlat
sub
ret
inc
in
xchg
fst
inc
aas
mov
mov
mov
cmpsb
inc
dec
dec
lret
js
movl
mov
mov
cmpsl
das
mov
dec
or
pop
loopne
popl
enter
aaa
rolb
gs
dec
xchg
add
and
or
outsb
xchg
lock
mov
inc
cmp
ja
rep
aad
lret
add
daa
xor
jl
sti
mov
test
es
cs
out
lret
andl
mov
cld
add
dec
sbbb
adc
stos
xorl
out
cltd
popa
mov
call
outsl
in
lods
bound
lods
data16
das
cltd
mov
mov
xchg
xor
pushf
push
arpl
and
dec
loop
sbb
xchg
mov
sbb
cmpsb
push
xlat
adc
mov
mov
in
push
sbb
dec
cld
adc
aas
mov
or
ljmp
push
shrl
dec
and
xlat
xorb
bound
mov
inc
imul
lods
mov
mov
jl
xchg
jmp
orl
and
xchg
out
sti
sub
or
aas
jmp
add
or
or
jbe
mov
sub
xor
xor
faddl
cld
addl
mov
or
jae
or
bound
pop
sbb
cmp
add
mov
inc
cmpsl
sbb
stos
xor
jnp
pop
movsb
clc
test
mov
fsubp
mov
cmpb
int
imul
ret
cmpsl
jg
js
sub
cmpb
cs
shlb
pop
fadds
loopne
out
or
mov
xor
cmpsl
dec
inc
dec
or
mov
xor
in
inc
or
jle
add
leave
mov
mov
sub
loopne
mov
sbbl
pop
js
sti
sbb
outsb
call
and
add
mov
pop
js
cmpsl
and
out
fwait
or
cmp
jne
cmpsl
xor
inc
mov
enter
lods
pop
lods
xchg
xor
or
outsb
adc
dec
and
ds
adc
jl
jbe
movsl
lret
aam
shl
dec
add
cli
xchg
mov
and
pop
cmp
xor
ljmp
mov
hlt
sbb
push
cld
xchg
mov
or
in
fisubl
addl
fimuls
das
add
ret
cmp
jbe
dec
mov
insl
fstl
subl
xor
add
mov
pop
stos
adc
test
push
movsb
push
xor
push
nop
in
dec
add
inc
inc
int3
sub
cs
fsub
and
mov
mov
or
out
add
or
xchg
dec
popa
pop
cvtdq2ps
mov
cmpsl
mov
xor
rcr
and
mov
std
mov
jle
lcall
pop
sbb
orl
ljmp
mov
push
adcl
or
sbb
inc
jno
test
dec
xchg
xchg
jns
cmpb
mov
cs
test
cld
dec
inc
cmp
aam
or
movsb
ret
lea
rorb
mov
mov
mov
mov
int
in
mov
testb
shll
mov
arpl
aaa
ds
push
adc
movb
mov
mov
ljmp
add
or
cmpsb
and
ss
xchg
dec
mov
mov
add
pop
cli
loopne
pop
ss
jmp
cmpsb
pop
cmp
in
sub
mov
sbb
cld
pop
add
repnz
mov
xor
add
mov
cmpsb
cmp
aam
add
test
popa
add
push
sub
cmpsl
lret
fmulp
loop
imul
dec
pop
cmp
mov
mov
mov
push
fcompl
movsb
jp
cmpsl
inc
ficoml
xchg
rolb
sbbl
push
adc
inc
bound
iret
add
cmp
add
ja
enter
mov
shrl
add
push
push
jp
mov
xchg
dec
push
fwait
testl
mov
lret
sbb
dec
lret
mov
pop
xchg
shrl
push
fisttps
jo
mov
sahf
orl
ret
mov
adc
jecxz
insb
fsubrl
dec
imul
out
in
fnsave
push
jne
xlat
push
mov
leave
or
pushf
mov
dec
pop
imul
xchg
push
mov
into
xor
add
mov
les
sub
xchg
pusha
adc
add
mov
rolb
iret
mov
pop
dec
and
add
cwtl
insb
mov
pop
xor
mov
dec
sub
sbb
or
into
decb
fcmovnu
or
movsl
pop
xchg
add
mov
or
sahf
cli
inc
mov
sub
in
je
sahf
iret
lret
lods
xlat
or
loop
nop
push
iret
push
loope
xchg
add
cmpsl
cmp
cmpsb
fisttpl
data16
push
ret
ret
and
and
in
sbb
jp
pop
cld
sub
cmp
rorb
fs
out
lahf
setl
aas
loopne
xchg
enter
stos
fisubrl
or
mov
outsl
mov
imul
and
bound
pop
sbb
pop
dec
shrl
aas
imul
mov
shlb
popf
mov
mov
pushf
ret
ds
cmp
xchg
sbb
pop
xor
out
cld
out
push
adc
mov
inc
add
shlb
rol
les
imul
or
pop
test
stos
iret
int
cmp
add
cmpsb
mov
dec
mov
enter
insl
add
mov
repnz
push
lods
sub
mov
pusha
fildll
out
lock
mov
outsl
pop
pop
pop
pop
cld
cmpsb
sub
dec
mov
stos
les
mov
adc
sub
icebp
pop
or
or
mov
mov
and
aaa
xchg
out
mov
les
mov
pop
jne
stos
mov
inc
gs
movsb
push
mov
xor
pop
imul
enter
outsb
mov
rorb
ret
cld
pushf
push
add
mov
dec
mov
les
xchg
addb
dec
data16
push
scas
fdecstp
aas
adc
pop
cmp
loop
or
rcl
lds
iret
add
lret
in
mov
aas
sub
jg
shll
daa
les
cmp
add
cmp
out
sub
inc
cmp
mov
stos
or
gs
mov
in
add
pop
sbb
xchg
cmpsb
jl
cmp
adcl
xor
cmpl
inc
mov
mov
and
mov
testb
insl
sub
bound
stos
add
fdivrs
xchg
movsb
add
stc
sub
mov
daa
dec
imul
cmpsl
lds
cmpsb
xor
adc
and
mov
jge
mov
add
pop
push
dec
dec
lods
lret
jle
mov
fldl
int3
movsb
hlt
mov
in
mov
push
jmp
xchg
add
dec
inc
sbb
in
clc
popf
mov
xor
std
test
arpl
pop
pushf
mov
cmp
fnstenv
push
or
loop
movsb
ljmp
sbb
mov
inc
inc
add
xor
add
shlb
imul
rorl
clc
icebp
push
lret
js
push
outsb
scas
test
lea
aaa
or
call
in
push
bts
inc
sub
lods
and
pop
push
jnp
pop
mov
out
les
je
fidivl
hlt
sub
loop
push
xor
scas
lea
mov
jmp
je
lahf
addb
xchg
sbb
sub
jle
inc
xor
ljmp
mov
add
popa
add
jnp
inc
pusha
mov
and
adc
mov
sbb
test
push
inc
mov
jmp
fisttpll
mov
pop
mov
cmp
sub
sub
sbb
popa
cld
xor
out
push
lret
imul
jge
jp
in
cmpsl
je
add
jns
dec
cld
mov
enter
or
outsl
movsb
subb
mov
dec
jno
inc
mov
sub
movsb
xor
ret
repz
sub
xorb
mov
sub
rorb
fdivl
mov
insb
fimull
andb
shl
adcl
cmp
xchg
mov
mov
mov
or
sbb
mov
in
add
inc
sub
pop
pop
mov
lods
mov
shrl
fs
aas
dec
and
push
in
aam
mov
int
sbb
or
cs
push
mov
cmp
cmp
push
inc
cld
push
or
test
ret
adcl
and
pop
mov
push
and
inc
xor
scas
ret
das
xchg
and
jecxz
mov
les
sti
shrb
push
aaa
pop
cmc
loop
out
and
mov
sub
loopne
push
ja
push
ret
mov
nop
mov
cmpb
outsl
xchg
mov
mov
or
in
in
mov
cmpsl
or
cs
push
mov
add
or
fcomps
lods
jecxz
mov
nop
cwtl
inc
roll
xor
ljmp
jl
rclb
test
lret
int3
lock
and
adc
les
and
adc
and
push
mov
mov
or
dec
dec
aad
insl
mov
cmp
movsl
call
add
roll
xchg
inc
andb
iret
sahf
push
mov
sbbb
push
dec
or
mov
mov
mov
mov
hlt
movsb
and
fidivrl
or
add
daa
ret
jl
mov
addb
inc
xor
xchg
jmp
negl
xor
mov
and
shlb
scas
sbb
int3
jecxz
mov
or
in
cmp
test
mov
sub
pop
outsl
in
add
in
fsubrs
sub
in
xchg
cmp
and
das
enter
ror
das
jp
movsl
rcl
sub
roll
bound
sbb
outsl
ja
fwait
or
and
outsl
cwtl
mov
imul
lret
mov
in
loopne
or
and
int3
mov
jp
lock
add
or
outsb
adc
adcl
pop
push
pop
cli
add
cmpsl
incl
pop
mov
mov
xor
mov
adc
repz
add
xor
testl
pop
or
mov
in
xlat
rcll
icebp
jl
ljmp
or
inc
pop
xchg
push
loopne
aam
mov
scas
arpl
jecxz
arpl
mov
cltd
das
dec
mov
mov
jb
aam
jmp
push
add
or
and
sbb
stos
ja
jmp
jbe
mov
xor
pop
bound
clc
or
adc
cmp
mov
movsl
xor
aaa
pusha
dec
mov
push
popl
shlb
xor
cmpsl
lods
in
ljmp
jb
mov
aad
in
fsubr
push
push
mov
or
lret
xor
add
repnz
push
je
rcrl
lods
iret
add
outsl
push
fsubs
cltd
push
mov
mov
shl
aaa
xchg
cmovp
enter
xchg
aas
push
add
cli
je
aaa
mov
mov
ljmp
addr16
cmpsb
es
cmpsl
enter
sub
ljmp
cmp
sub
inc
add
int3
jge
fs
pop
mov
cltd
in
jmp
xor
jmp
cld
inc
xchg
mov
daa
jnp
cmpsl
out
mov
loop
int3
or
xchg
mov
xchg
jle
cli
subb
sbb
push
sub
repnz
push
adc
ljmp
jl
and
mov
jbe
push
pop
les
add
orb
in
aaa
movsb
sub
and
xchg
aaa
cwtl
jecxz
mov
add
stos
lret
push
mov
in
mov
or
add
push
add
xchg
movsl
pop
xor
mov
sbb
loope
xchg
mov
test
int
and
adcb
and
stos
cmpsl
es
mov
orl
scas
xorl
outsl
xlat
das
inc
xor
pop
mov
xchg
in
mov
xchg
cmp
push
cmp
aas
sahf
int3
xor
mov
outsb
mov
aaa
mov
mov
mov
push
xor
testl
in
add
in
lret
aam
imul
daa
mov
aas
rorl
movsl
dec
lret
cmpsb
pop
add
repnz
mov
or
mov
jecxz
aam
lret
lret
ds
xor
push
mov
dec
sub
pop
loop
fwait
in
jb
inc
xor
mov
mov
mov
lret
and
sub
ret
mul
lret
adc
jb
cli
in
mov
fisubl
std
dec
push
lea
push
fsubr
adc
jmp
or
andl
aaa
jno
mov
das
jmp
lcall
mov
aaa
dec
cli
in
add
push
mov
xor
push
cli
xor
int3
xor
cmp
mov
shr
mov
xchg
sub
roll
or
repz
mov
ret
xor
lcall
xchg
movsb
adc
pop
in
add
movsl
and
lds
int3
addl
push
ret
clc
rclb
ret
mov
scas
fld
bound
pop
aaa
mov
dec
xlat
xlat
gs
push
adc
lret
fs
jae
sbb
cmp
movl
xor
mov
popa
xchg
out
ret
and
mov
les
sub
das
pop
dec
popa
mov
push
les
mov
jb
shrb
lea
push
lods
xor
xor
movl
shrl
movsb
rclb
and
mov
cmpsl
xorb
xchg
cmp
testb
in
cmc
pop
pop
jl
push
cmc
sub
mov
fdivrp
xor
mov
push
dec
lcall
fistps
add
or
add
xchg
lock
mulb
stc
es
hlt
jb
mov
jae
add
push
ljmp
inc
jp
repz
or
daa
mov
imul
mov
xchg
push
cmp
add
jecxz
xor
mov
xor
xor
mov
mov
jno
sar
fistl
je
into
mov
jno
test
jb
xor
xchg
mov
sub
loope
scas
fwait
popa
xchg
or
add
xchg
jmp
xchg
mov
cs
push
sbb
xor
movsl
push
jo
dec
dec
jne
xor
jle
cmpb
in
fwait
test
aas
ret
es
int3
and
ljmp
mov
push
pop
orl
dec
fisttpl
aam
cmp
pop
fs
jae
lods
adcb
out
add
sarl
nop
or
adc
ret
in
cmpsl
iret
loopne
cmp
or
andb
lret
mov
ret
cwtl
add
je
or
or
rol
add
mov
sbb
out
aam
enter
push
mov
aaa
cmp
subl
mov
daa
fisttpl
add
or
adc
or
dec
les
mov
sahf
mov
leave
add
andb
fwait
stos
sbbl
lahf
xchg
push
add
inc
aam
pop
aas
cltd
xchg
stos
jnp,pn
inc
int
inc
push
roll
mov
xchg
sar
mov
cmpsl
push
xor
rorl
jmp
ficomps
mov
idiv
ret
pop
push
mov
aaa
mov
dec
dec
cmp
xor
push
and
mov
mov
xor
mov
mov
mov
mov
daa
xor
loopne
daa
ds
mov
adc
mov
cmpsb
xor
mov
mov
ds
adc
cmp
movsl
mov
ret
int3
mov
dec
shll
test
les
sub
subb
adc
xchg
nopl
lret
or
adc
shl
add
out
je
mov
shll
ret
cmpsb
ljmp
mov
mov
int3
aam
and
xor
test
scas
fldcw
outsl
mov
pop
dec
sti
sub
int3
or
movsb
cmpsl
lds
les
leave
xchg
std
pop
mov
cmpsl
loope
scas
mov
arpl
pop
icebp
movsb
push
and
shrl
pop
stos
adc
pop
adc
sbb
xlat
and
add
jnp
jmp
xchg
xchg
sbb
pop
je
inc
movsl
cmpsl
ret
mov
or
daa
ret
xor
dec
ds
cmp
jl
adc
cmp
rorl
andb
jns
in
mov
and
cmpsl
pop
int
xchg
ret
in
bound
mov
push
or
cmpsl
das
shl
add
ret
cmpsl
ja
cmp
inc
cld
cmpsl
and
test
sub
cmpsl
pop
orl
cmpsl
cli
xor
mov
sbb
out
jns
inc
cmp
lret
jle
mov
lods
sbbb
jb
add
lods
mov
outsl
and
mov
mov
mov
inc
add
or
aas
pop
mov
add
loop
add
int3
push
adcb
xchg
jb
icebp
in
mov
enter
cmp
or
mov
or
mov
sub
in
and
add
dec
ret
cmpb
lret
jno
fwait
mov
imul
pushf
inc
rcll
leave
add
pop
inc
jnp
scas
jecxz
sub
rolb
lret
rol
popf
dec
es
in
daa
inc
repz
cmpl
inc
cmpsl
cmp
scas
jmp
fidivs
sbb
jns
mov
adc
out
mov
mov
push
adc
sub
adc
push
adc
mov
enter
daa
scas
mov
jmp
outsl
loopne
loope
jge
jp
loop
in
insl
or
subl
andl
arpl
or
pop
cmp
lock
ret
mov
add
in
mov
loopne
xlat
inc
xchg
sbb
xchg
insb
daa
repz
hlt
mov
mov
push
jle
jno
add
push
jb
dec
mulb
mov
popf
push
cmp
sbbl
mov
xor
mov
or
outsl
fstps
mov
mov
cmp
add
movsl
cmp
xor
mov
lods
les
pop
scas
pop
jl
sbb
fs
mov
adc
jmp
mov
xchg
addb
lds
into
dec
test
cmp
push
sub
adc
xor
fstps
push
lahf
or
cmp
mov
cmpsl
pop
aad
jno
jle
lret
pushf
xchg
dec
mov
xlat
test
and
dec
jnp
push
or
sub
pop
add
or
fwait
dec
xchg
out
and
lret
ret
popf
out
mov
cli
lods
test
jle
lods
sub
daa
jns
incl
sbb
lahf
jns
add
xchg
cld
daa
fldcw
icebp
push
mov
push
js
mov
inc
or
fwait
xor
cltd
pop
cmc
or
adc
mov
popl
dec
sahf
mov
jp
push
out
jns
fidivrl
mov
xchg
or
call
jb
addl
push
mov
adc
movsl
push
cmp
and
add
pop
arpl
out
mov
pushl
ja
add
jne
adc
shl
cmp
int
stos
inc
movsl
and
xchg
sub
sub
adc
cmp
std
lea
adc
mov
pop
ja
das
push
ljmp
pop
inc
insl
xor
adc
cmp
or
fdiv
and
push
sti
xchg
inc
fsubrl
movsb
out
sub
cwtl
out
sbb
lret
or
xchg
inc
push
cmp
data16
cmp
das
cmpsl
push
popf
fcomip
rcl
xor
fildll
negl
fst
add
sbbb
xor
sbb
dec
sub
dec
xchg
loopne
pusha
xor
into
add
dec
rcrl
xchg
loope
ret
in
test
push
mov
mov
repz
test
sti
mov
jle
lret
add
push
add
repz
mov
loopne
in
mov
pop
xor
stc
adc
mov
jb
lret
loop
sbb
mov
or
push
dec
out
sbb
das
imul
lds
and
xchg
loop
stos
decb
lcall
jmp
fs
aam
lahf
filds
hlt
xor
or
fisttpl
jecxz
or
mov
and
cmp
push
sbb
mov
movsl
adc
out
jmp
adc
stos
sbb
decb
movsl
cmc
xchg
out
inc
sub
cs
lods
ss
sub
popl
fistpll
or
test
aaa
add
xor
or
jne
dec
mov
aaa
lahf
cmp
inc
out
loope
bound
xor
inc
shlb
mov
xchg
sahf
sbb
aaa
idivl
fcomp
xor
arpl
mov
and
sbb
mov
sub
outsb
add
mov
dec
sarl
inc
push
and
in
mov
mov
lahf
cmpsl
jno
mov
repnz
push
rolb
ret
add
cmpsl
scas
jg
mov
cmpsb
mov
enter
adcl
pop
mov
dec
mov
jb
sbb
mov
aad
cld
movsl
cmpsl
xlat
xor
inc
enter
dec
nop
hlt
xchg
ret
pop
rcll
jnp,pn
fimull
pop
test
inc
pop
inc
test
stos
mov
movsl
lock
or
pop
sbb
nop
mov
push
add
jae
xor
add
add
add
cli
adcb
loop
std
cmp
mov
in
fxtract
sub
outsb
pop
and
ljmp
in
std
lea
cs
sbb
scas
adc
pusha
adc
shll
sbbl
cld
jnp
mov
idivl
pop
xor
push
cld
lret
jecxz
les
fistl
pop
imul
les
push
mov
int
and
js
push
cld
in
test
xor
mov
push
lods
and
stos
mov
push
sbb
lret
dec
and
push
cltd
imul
jmp
orl
mov
aaa
and
xchg
mov
mov
sbb
mov
stos
iret
push
leave
or
testb
stos
icebp
repnz
adc
cmp
sbb
pop
add
rorl
popl
sub
or
inc
clc
dec
dec
jle
aam
add
and
dec
lods
xor
test
push
pop
stos
roll
cli
aad
or
movsl
pushf
mov
bound
sbb
or
mov
add
rorl
or
jecxz
push
mov
shrb
shr
sbb
pushf
xchg
and
pop
mov
xorl
loope
sbb
je
scas
or
add
loope
popa
xchg
je
clc
js
popa
in
mov
or
mov
icebp
call
arpl
inc
sbb
pushf
xchg
sbb
xchg
mov
decb
sub
insl
in
cs
js
dec
out
rclb
push
push
xchg
push
cmp
mov
push
push
lahf
lcall
bound
ficoml
mov
es
dec
movsb
daa
imul
ljmp
add
jae
mov
ljmp
les
pop
inc
shr
movl
in
test
out
or
lcall
out
add
pop
fcompl
push
pop
xorb
outsl
int3
les
add
jmp
sbb
outsb
sbb
shlb
inc
dec
inc
lret
int3
add
mov
pop
sub
out
popf
xchg
nop
add
xorl
andl
xchg
inc
out
incl
out
lret
add
pop
xor
int3
jnp
jp
xchg
mov
push
test
cmp
int3
adc
je
add
lods
ljmp
divl
outsb
xchg
cmp
dec
dec
cmc
mov
dec
mov
dec
jl
push
push
shlb
inc
push
mov
jecxz
shrl
sbb
dec
fldcw
cmp
sbb
fucomp
xchg
inc
movsl
lcall
or
clc
aas
leave
cwtl
lahf
loopne
pop
leave
lods
les
in
lods
xorl
fs
sbb
mov
out
sub
and
aad
push
mov
or
jecxz
bound
jae
adc
add
pop
ret
push
lods
add
or
pop
ret
aaa
inc
negl
notl
fcmovu
outsl
arpl
out
adc
mov
stos
push
and
mov
mov
jge
push
les
push
dec
hlt
cltd
shl
lret
aam
mov
mov
fisttps
pop
imulb
je
xor
out
push
aam
int
gs
xor
push
and
xchg
xchg
inc
push
lock
mov
sti
cld
repnz
sub
hlt
inc
dec
call
hlt
ljmp
rcr
xor
into
inc
andb
or
add
out
repnz
xor
mov
push
int
std
lods
fldenv
push
xor
mov
push
push
adc
push
andl
imul
jbe,pt
add
pop
xor
mov
and
in
sub
xor
lret
push
and
mov
and
adc
jo
inc
imul
xlat
xchg
in
loope
imul
push
or
adc
pop
sub
das
ljmp
sub
rclb
jns
ret
jne
das
inc
mov
push
enter
fcmovne
out
mov
in
outsb
js
cmp
popa
pop
movsl
push
cld
sub
imul
jno
test
mov
dec
shll
out
cmp
cmpsl
xlat
lret
loopne
movsb
imul
popa
and
cmp
inc
jle
in
jnp
gs
or
imul
cli
imul
inc
add
push
ja
in
int3
sub
xchg
inc
mov
nop
mulb
xchg
sub
inc
inc
std
or
jg
scas
add
inc
rolb
into
or
push
cmp
movsl
les
loop
dec
ljmp
cmpsl
jbe
adc
shrl
pusha
jmp
repz
xor
sub
cld
push
sub
dec
lods
in
pop
push
and
mov
jae
lahf
imul
rorl
sub
xchg
cmpl
xchg
mov
jnp
fs
fs
cmpsl
das
lods
sarb
mov
add
cld
push
push
in
loop
cwtl
pop
pop
push
sbb
addb
mov
inc
xor
mov
daa
push
pop
shl
push
lea
dec
sbb
cli
xchg
pop
ds
ficoms
sbb
sub
mov
sub
leave
sarl
cmpsl
hlt
add
adc
mov
aam
push
xchg
pop
and
lcall
xor
arpl
push
or
mov
sti
pop
cmc
cmpsl
xchg
out
mov
push
xor
data16
int3
in
add
push
or
xchg
subb
inc
mov
imul
lock
ja
imul
shlb
dec
fisubl
xor
inc
mov
addb
mov
lock
sub
xlat
sbb
call
add
mov
xor
adc
arpl
push
je
pop
fisubrs
jp
roll
imul
xchg
fs
push
xorb
test
add
push
xor
std
icebp
push
fucomip
push
ret
aas
mov
aaa
add
lock
cmpsl
scas
lock
pop
jbe
fildl
xchg
mov
int
lret
sti
hlt
add
and
xchg
outsl
push
loop
stc
ret
or
add
cmc
or
xorl
into
sbb
add
leave
add
outsb
xchg
mov
cmp
nop
cmp
in
dec
xchg
shl
scas
dec
rorl
js
clc
pop
dec
rcll
frstor
sub
push
shll
enter
jns
fs
loope
insl
sbb
jecxz
movsb
test
inc
divl
stos
ljmp
add
jecxz
and
test
aaa
popf
mov
test
pop
aaa
pop
sbb
das
mov
enter
lret
rolb
sub
loop
mov
pop
test
dec
add
push
fwait
or
into
or
lods
or
mov
jmp
outsl
out
push
sub
scas
dec
lods
in
js
adc
cmp
xor
xorl
jp
outsb
fwait
hlt
in
out
mov
jo
cmp
testb
in
jp
out
inc
std
cmc
push
and
scas
xchg
or
inc
outsb
xchg
mov
add
inc
test
sub
faddp
pop
sub
pop
jl
mov
les
int3
jecxz
or
insl
and
xor
push
aaa
movsl
ss
xor
push
and
outsb
cmc
leave
mov
ret
imul
popa
push
cmpsl
lret
aaa
in
fwait
popf
fnstenv
adc
loopne
mov
loope
nop
test
out
push
in
dec
mov
mov
or
push
xor
mov
mov
add
dec
and
xchg
cmp
jle
test
mov
loope
out
rorl
stos
cmp
push
fnstenv
js
fistpl
mov
loopne
pcmpeqd
pusha
dec
cli
mov
fiadds
mov
cmpsb
dec
or
aas
cld
aaa
push
hlt
scas
push
fdivr
push
pop
insb
jbe
insb
ret
cmp
push
out
pop
nop
scas
inc
lahf
mov
mov
cmp
mov
push
push
ja
sbb
xor
or
xchg
pop
xor
ficompl
pop
mov
movsb
dec
lret
jge
fldl
and
fs
dec
lock
jp
dec
or
adc
sub
mov
xor
xchg
ss
sbbl
mov
je
mov
mov
repnz
fildl
adc
mov
adc
sub
or
data16
inc
mov
push
insb
push
shlb
inc
sahf
xor
dec
xchg
push
fwait
jmp
mov
pop
cmpsl
add
in
jns
adc
xor
int
sub
or
add
ds
rolb
ja
dec
je
pop
bound
arpl
mov
adc
add
push
cs
push
or
add
xor
orl
or
call
aaa
insb
push
inc
add
pop
cs
xor
lret
cltd
imul
int
scas
in
or
ljmp
dec
ret
mov
add
xchg
imul
mov
mov
jmp
ljmp
stos
mov
out
or
add
shlb
mov
jo
push
inc
ret
xor
rcll
mov
dec
or
in
gs
mov
jo
ss
rcll
repnz
add
lret
outsb
and
movsb
fsubrl
jae
rcl
pop
mov
lcall
test
pop
pop
in
mov
cli
in
sbb
dec
je
lea
sti
cmp
or
add
add
dec
in
inc
xor
push
fxch
std
jl
mov
mov
bound
ss
adc
test
ljmp
or
cld
gs
out
je
sub
cli
out
dec
scas
inc
and
inc
xor
or
leave
xchg
repz
mov
cmc
xchg
lret
xor
in
into
sbb
rorl
nop
mov
push
ficoms
or
jne
cmp
push
dec
push
lret
push
and
sub
call
push
loopne
cmpsl
push
lock
es
aaa
adc
enter
pop
rclb
or
enter
gs
aad
pushf
decl
and
stos
daa
fistpl
clc
jl
adc
or
lods
or
jmp
mov
lock
mov
inc
sbb
aas
pop
push
pop
scas
sbb
mov
cmp
insb
nop
dec
and
in
sahf
dec
in
loope
jp
sub
sbb
aas
mov
xchg
jmp
outsb
xor
inc
popa
lahf
xchg
loope
mov
sub
and
adc
push
into
cltd
adc
adc
mov
js
mov
push
clc
sub
xor
jle
sbb
subl
movsb
aaa
addr16
pop
xor
mov
js
out
add
sub
dec
lret
sbb
insl
ret
and
ret
outsl
xorl
rcl
or
jae
push
lret
into
lret
or
out
aaa
mov
sti
bswap
pop
or
and
orl
ljmp
js
ds
pop
inc
cmp
add
and
pop
inc
cmc
test
jg
pop
jmp
add
inc
mov
mov
fs
push
add
add
mov
jg
push
std
aam
outsb
add
cmp
data16
sbb
sbbb
cmpsl
movsl
and
dec
shlb
xor
mov
mov
scas
cmp
ret
je
mov
push
adc
dec
outsl
mov
lock
das
mov
lret
cmpsl
xchg
and
xor
imul
icebp
scas
mov
lods
inc
repnz
iret
pop
sti
add
mov
pop
xor
push
shl
jmp
dec
or
xor
sbb
sbb
xorb
mov
in
hlt
jae
ret
in
inc
movsb
jl
mov
cltd
mov
repnz
cmp
movsl
in
call
pop
push
das
inc
add
and
cmp
mov
add
xor
add
mov
mov
mov
cmp
enter
fcomp
mov
push
rcr
cmp
push
cmp
mov
scas
pushf
jmp
xchg
dec
ljmp
inc
in
xchg
iret
mov
jle
or
cmp
in
outsb
add
into
push
and
cmpl
ret
outsb
push
lcall
lods
or
push
rclb
std
cmpsl
repz
lods
movsb
mov
into
out
add
pusha
push
imul
or
push
lea
into
repnz
das
inc
cmp
cmp
cwtl
mov
sbb
in
jl
lods
ffreep
sbb
or
xor
push
rcrb
loope
sub
dec
lods
icebp
or
adc
pop
rolb
add
shll
adc
cmpsb
xor
sub
inc
mov
fadds
les
lcall
xlat
sbb
out
pushf
or
push
pop
ss
jp
movsb
add
gs
or
addr16
jl
xchg
jmp
and
and
rol
imul
xchg
and
dec
out
sbb
or
imul
jge
pop
mov
test
push
mov
out
fldt
mov
pushf
mov
mov
add
popa
push
cltd
xor
push
mov
fsts
sub
and
add
mov
and
das
out
xchg
addr16
add
pop
mov
jmp
insl
std
popa
stos
mov
notl
loope
push
shlb
dec
iret
outsl
add
jno
sub
sbb
mov
adc
xchg
push
int3
xchg
cmp
cmp
insl
mov
xor
in
inc
lret
xchg
in
or
fistps
xor
das
lods
pop
lock
adc
mov
xor
or
pop
das
add
jl
aam
daa
lahf
mov
jmp
in
adc
jns
loop
cs
push
and
cld
mov
movsb
add
mov
out
mov
and
and
and
mov
push
adc
inc
cmpb
xchg
adc
cli
sub
lods
pop
jle
lret
rorl
test
ret
cwtl
push
repnz
add
jle
jo
je
inc
cmp
xor
popf
ljmp
out
lds
in
mov
mov
stos
and
in
dec
xor
cld
jmp
lods
push
jb
in
pop
push
jae
sysenter
ret
sbb
repz
push
out
aaa
rclb
mov
sysret
out
ficoms
push
inc
nop
lods
jl
cmpb
xor
and
aad
repnz
dec
or
ljmp
xchg
adc
inc
ds
jecxz
sarl
imul
add
outsl
subl
test
push
or
jno
movb
mov
xorb
push
adcb
jecxz
push
inc
mov
test
cmp
mov
mov
pop
mov
in
call
aam
insb
mov
pop
fdivl
mov
lds
cmp
xchg
cwtl
jp
test
add
and
movsl
mov
or
cmp
hlt
popf
push
adc
xor
repz
lret
popa
xor
mov
mov
pop
aas
adc
fistl
mov
adc
test
jnp
cli
int
adc
add
jl
mov
xchg
arpl
inc
jne
cld
mov
lret
adc
jns
push
fcomi
mov
scas
lods
xorl
sub
pusha
lea
xor
mov
lea
lock
fucom
popf
mov
mov
popa
cld
out
sub
mov
or
mov
loopne
repnz
pop
push
lret
mov
push
loopne
out
inc
push
repnz
imulb
cltd
sbb
stos
ja
imul
push
fwait
xorb
mov
inc
push
fisubrs
cmp
xor
mov
xor
push
jns
fiadds
ret
es
je
aaa
pop
outsl
test
sub
add
xchg
push
test
in
repz
into
test
stos
in
mov
lret
xor
ret
dec
sti
imul
fnstenv
btc
push
jg
xchg
das
daa
data16
jmp
xchg
out
subl
adc
mov
cmp
ret
mov
mov
test
imul
xchg
je
jae
xor
cmp
add
inc
mov
mov
fdivs
mov
mov
mov
cmc
xlat
add
outsl
pop
pop
mov
mov
xchg
xor
inc
and
mov
cmp
lret
aaa
or
testl
hlt
ret
fsubl
pop
mul
mov
pop
dec
pop
mov
push
test
push
inc
adc
cmp
adc
sub
lea
sub
fucomip
xchg
xor
fists
stos
cwtl
lods
inc
xor
mov
sub
push
dec
ret
das
jecxz
pop
dec
mov
lods
adc
out
push
mov
push
inc
jmp
pop
dec
rcll
push
mov
lock
cmp
add
in
mov
shl
mov
xor
dec
xchg
cmp
xchg
add
in
inc
inc
lock
mov
push
xchg
sti
xlat
adc
push
push
orb
mov
lea
lea
push
xchg
pop
pop
rcll
mov
out
pop
adcb
xchg
add
mov
in
orb
je
sub
testb
daa
rcrb
inc
je
aam
sbb
loop
mov
out
xor
div
and
imul
es
sub
movsl
push
aas
loopne
sarl
decb
das
add
mov
orb
push
repz
jg
add
lret
ljmp
out
mov
xor
inc
test
ret
stos
pop
mov
inc
bound
and
lods
shll
mov
and
jmp
pop
mov
out
push
sub
xor
lret
orb
ret
add
sbb
fbld
mov
das
cmpsb
mov
imul
lods
adc
ds
lret
fsub
add
pop
enter
dec
stos
mov
xchg
mov
andl
jp
dec
sti
or
lret
enter
cmp
cmp
adc
leave
lea
repz
inc
je
stos
pop
lea
lret
out
jmp
lods
xchg
pop
or
orl
in
push
xchg
dec
jl
es
loopne
push
scas
outsl
pop
xor
or
fcmovnb
notl
sub
imul
loopne
mov
push
test
idiv
test
mov
stc
push
add
inc
jne
jle
sahf
ret
dec
mov
push
out
pop
popf
addr16
outsl
mov
cli
jp
sbb
psrad
inc
push
jmp
rcl
aad
jns
mov
cmpsl
or
mov
mov
or
loopne
jb
adc
int3
pop
mov
mov
xor
and
cs
in
mov
fildll
jb
mov
xor
xlat
or
sub
cmpsl
cmp
jmp
ljmp
aam
add
aam
jle
xor
push
dec
mov
mov
in
in
scas
mov
leave
mov
inc
or
data16
push
jmp
cmp
cmp
in
data16
push
les
xlat
hlt
pop
pop
frstor
jle
lcall
out
repz
mov
mov
push
add
adc
and
loop
mov
shlb
aad
add
fisubl
mov
lret
out
jo
loop
test
fcmovb
negl
subl
add
mov
fwait
in
pop
xchg
add
dec
or
ret
je
lods
jl
xor
dec
jb
cmpsl
in
fwait
mov
repnz
loop
cmp
push
dec
and
jnp
mov
push
sub
pop
or
cmpsl
pop
mov
xchg
and
mov
jp
cmp
adc
arpl
pop
mov
jecxz
xchg
inc
cs
push
cld
in
jns
mov
xor
or
mov
add
pop
jmp
icebp
int
lea
adc
ja
sub
loop
xchg
mov
jmp
gs
jmp
mov
in
sbb
aas
add
mov
ret
sarb
add
push
aaa
in
jge
nop
mov
jne
sub
loop
and
nop
cmp
add
mov
nop
cmp
sarb
iret
mov
or
js
or
xorb
add
dec
cmpsb
mov
movsl
mov
std
or
xor
fisttps
add
inc
in
cmpl
mov
out
sub
loop
subl
rolb
pshufw
lods
inc
rol
dec
inc
les
orb
addl
shr
insb
jge
ret
sarl
das
das
in
mov
cmpsl
mov
add
xchg
mov
mov
add
out
lret
push
pusha
push
add
xchg
dec
mov
daa
xor
dec
nop
adc
jmp
inc
ja
and
push
jae
aad
stc
popf
inc
out
sub
lcall
mov
lret
mov
testb
icebp
xchg
divl
std
push
jg
aam
mov
mov
lcall
dec
mov
popa
aam
cmp
addr16
insl
aas
popa
push
fstps
fsubrl
cmp
mov
mov
sbb
lds
mov
inc
ror
faddl
mov
xor
cmp
outsl
aaa
fisubrs
daa
into
cmp
jns
out
add
push
mov
repz
inc
xlat
jo
je
cmpsb
and
xorb
pop
imul
lret
aam
sbb
adc
xor
ljmp
fiaddl
es
mov
xor
dec
sub
mov
sub
mov
sahf
xor
mov
lods
jmp
out
pop
cli
inc
adc
rorl
jnp
xchg
test
arpl
push
mov
dec
pop
and
push
leave
sbb
aad
sbb
push
mov
jl
xchg
cmp
repnz
jle
sbb
inc
xor
xor
in
pop
add
les
xor
inc
push
jg
mov
push
cli
jmp
orb
call
jnp
shl
adc
xchg
andb
cmpsl
insb
pop
popf
scas
popf
inc
push
pop
fbld
das
jg
inc
in
or
cmpsl
vaesenc
shl
xchg
lea
and
and
add
cli
data16
fisubl
xor
or
outsl
sbb
and
negb
out
and
movsl
xchg
pop
xchg
inc
lret
aaa
push
cli
stos
leave
or
mov
das
cmp
sub
loopne
or
dec
mov
ljmp
fisubrs
iret
lret
rcll
clc
std
lds
inc
rol
adc
imulb
xchg
out
insb
adc
xor
mov
movsb
aaa
wbinvd
aaa
inc
sub
jl
stos
fidivl
movsb
or
sbb
lods
orb
insb
mov
cmpsl
sub
cwtl
mov
mov
adc
jae
dec
or
mov
mov
push
sahf
mov
xchg
mov
dec
mov
add
out
jl
ret
call
outsb
inc
mov
cmpsl
push
jecxz
filds
adc
fisubrs
mov
sbb
mov
mov
cmp
cld
cmpsl
cld
pop
jnp
or
outsb
add
adc
leave
or
imul
mov
push
inc
and
jle
inc
add
aad
pushf
sbb
out
add
or
or
dec
push
cmp
data16
jno
pop
scas
xor
add
movsb
mov
add
or
push
dec
test
fisttps
mov
hlt
scas
or
das
movsl
sbb
mov
aaa
mov
inc
mov
std
pushf
mov
xchg
xchg
cmpsb
dec
pop
lods
lret
aam
and
add
fst
dec
inc
xchg
pop
mov
xlat
out
mov
mov
cld
jb
ret
jae
cmp
and
ljmp
inc
hlt
mov
jns
sub
fwait
sbbb
fsubl
add
or
and
cmpsl
xchg
add
test
and
in
pop
cmp
jg
mov
in
stos
nop
and
jg
push
ja
dec
xchg
dec
push
fxch
iret
frstpm(287
clc
les
pop
mov
dec
imul
cmp
test
xor
mov
cmp
pusha
in
outsb
pushf
inc
test
js
mov
xor
jns
dec
xlat
mov
in
outsb
mov
fwait
add
and
adc
sub
and
aas
lea
mov
out
sub
mov
dec
push
push
mov
outsb
push
xorb
shll
imul
jge
adcl
mov
xorl
lds
hlt
sbb
push
leave
pushf
pop
push
mov
adc
mov
sub
sub
mov
popa
dec
add
lret
loop
imul
jl
flds
jno
movsb
repz
jecxz
push
mov
mov
xchg
das
in
aaa
or
loop
repnz
or
das
push
arpl
mov
pop
mov
lret
or
mov
sti
or
cmpsb
mov
fmuls
mov
cli
xchg
or
push
xor
or
push
jge
nop
loop
std
gs
lret
xchg
imul
addr16
cld
imul
orl
xor
jl
popa
or
icebp
dec
popa
je
cmp
push
fscale
enter
or
lret
ror
movsb
orb
cmpsl
push
nop
inc
rcll
fwait
mul
adc
dec
mov
loope
pcmpgtb
or
sarb
addb
rcrb
adc
adc
add
cmp
push
mov
mov
dec
aaa
test
add
and
ficomps
mov
or
mov
ljmp
adc
cmp
lea
xor
inc
pop
lods
jns
cs
mov
aam
adc
gs
or
movsl
rorl
inc
push
test
adc
xchg
outsl
loope
sub
sarl
inc
jmp
subl
sub
mov
lret
mov
sub
fidivl
jge
push
pop
rol
imul
push
pop
fidivrl
cs
addb
mov
pusha
add
out
mov
push
shll
sub
pop
lods
adc
ficomps
jp
mov
ds
push
daa
lahf
sbb
xchg
sahf
pop
adc
xchg
add
out
pop
mov
leave
out
mov
enter
inc
mov
inc
mull
loope
xor
adc
sub
movsb
data16
adc
sahf
gs
mov
das
inc
xchg
jecxz
mov
mov
mov
mov
mov
int3
fsubs
std
cwtl
mov
inc
xor
in
jae
cwtl
push
xor
ljmp
movsb
out
sub
ret
cmpsl
and
imul
xchg
stos
movsb
xor
or
pop
rorb
mov
or
jmp
in
and
mov
enter
sti
aam
cmpsl
dec
inc
xchg
or
je
or
orb
dec
jae
mov
loopne
je
xchg
mov
ret
leave
or
pop
fisttpll
cmpsl
jne
fs
xlat
cmpsb
sahf
push
xchg
popa
sbb
inc
sub
dec
addl
in
jecxz
mov
mov
inc
mov
add
and
lods
cmp
call
inc
das
adc
data16
push
and
cmc
clc
das
push
cmpl
mov
xor
lods
or
mov
pop
cld
cmp
call
add
loope
sub
push
adc
and
push
dec
mov
jns
aad
inc
and
mov
mov
aas
jl
fdivp
aas
les
ret
loopne
ret
lea
ret
retw
xor
mov
into
xchg
lds
adcb
lret
mov
mov
adc
sbb
xchg
mov
sub
fcmove
pop
les
clc
and
jb
aas
ret
cmp
dec
add
add
subb
pop
xor
lods
sar
push
mov
rcrl
mov
cltd
cmp
int3
and
pop
mov
inc
out
iret
orb
das
jns
shrb
iret
xchg
repz
stos
sbb
sub
aam
orl
movsb
aas
mov
inc
push
pop
cltd
dec
sub
repnz
cmpb
adc
ret
xchg
notl
cmc
cmp
sub
add
or
in
adc
or
shrl
shr
jns
xchg
and
pushf
or
in
xchg
mov
sbb
mov
out
mov
or
add
dec
stc
sbb
cmp
mov
cmp
scas
mov
lods
cld
or
jae
jle
sti
inc
ret
scas
fsubl
lcall
and
aad
add
xchg
lods
mov
out
push
dec
push
iret
cmp
rcrb
insl
in
push
shlb
shr
arpl
fs
mov
mov
sub
mov
ljmp
enter
popa
aas
ret
mov
jl
inc
dec
jmp
lods
cwtl
sarl
push
ja
jecxz
bound
int
in
mov
repnz
mov
insb
or
dec
mov
xor
jle
cmpsl
inc
adc
xchg
or
jmp
push
in
dec
push
sahf
cs
sar
cs
jnp
jmp
cmp
add
mov
dec
repnz
aad
jae
ljmp
div
adc
ja
out
and
push
ror
ljmp
jno
pop
push
mov
adc
dec
adc
xchg
mov
add
stos
aad
aaa
cmp
mov
add
stc
ror
jmp
jne
xchg
push
cmp
bnd
repnz
sbb
lcall
ljmp
sub
in
xor
push
mov
stos
test
test
or
int3
cmp
sub
mov
data16
inc
mov
jmp
inc
nop
xor
fmuls
cmc
jmp
cmpsl
movsb
movsl
lock
dec
insl
ret
call
cmp
and
aam
inc
repz
inc
sub
mov
push
clc
jl
mov
es
lods
daa
movsl
inc
jmp
enter
jb
xchg
jmp
jno
lahf
xchg
push
pop
inc
pop
movsb
in
imul
jle
cltd
pop
jbe
lods
and
sbb
fwait
xchg
adc
insb
aaa
out
add
mov
ficoms
or
enter
xor
adc
out
adc
sarl
add
scas
adc
sbb
stc
gs
dec
inc
mov
xor
lea
mov
out
or
push
sysenter
arpl
pop
int3
and
sbb
dec
xchg
stc
mov
mov
stos
dec
adc
int3
dec
adc
aas
stos
sub
mull
dec
mov
mov
mov
mov
pop
pushf
mov
nop
popl
movsb
and
into
ret
add
and
das
cmpsl
mov
pop
push
out
cld
pop
add
sbb
out
adc
outsl
rorl
add
or
mov
pop
adc
mov
add
xor
movsb
lock
stos
out
unpckhps
push
and
in
mov
pop
cmp
cmp
jne
cmp
push
icebp
dec
jl
pop
mov
sub
push
out
mov
bound
movsb
dec
dec
mov
fwait
imul
js
mov
pop
dec
movsl
push
sbb
loopne
lret
test
bound
je
mov
jecxz
int3
loop
jg
xchg
sti
jo
stos
sub
mov
dec
or
xlat
add
mov
mov
and
dec
js
loop
dec
or
enter
jno
jecxz
int3
jle
addr16
jae
lock
xor
push
push
cmpsl
push
and
enter
xor
movsb
ljmp
or
xor
sub
lock
push
ss
loop
shl
cmp
jno
roll
or
sahf
fldt
icebp
dec
xchg
fcmovnb
cmpsl
xor
xchg
movsb
mov
inc
cld
cld
out
sbb
push
pop
arpl
fisttpl
mov
clc
pushf
sete
cli
sub
cltd
pop
jb
mov
jge
push
cmpsl
add
out
add
jle
jae
adc
shr
ljmp
fldl
aaa
xor
mov
lods
pushf
shl
hlt
inc
push
mov
ja
xor
push
mov
clc
or
or
mov
push
scas
jmp
mov
mov
sub
cli
movsb
lcall
sub
incb
outsl
data16
xor
inc
sbb
jae
sub
lret
mov
push
stos
or
xchg
or
push
incb
lret
mov
sub
imul
add
ret
stos
or
cmpsl
fs
and
out
cltd
stos
loop
add
insb
pusha
add
mov
cmp
ret
dec
xchg
stos
lret
stos
pop
data16
je
out
iret
jae
ret
or
adcl
xchg
mov
bsr
mov
add
ja
add
mov
inc
rorl
xor
jmp
test
xchg
fmulp
mov
loop
aaa
and
xchg
das
add
push
nop
or
rcrb
mov
add
fcoms
out
cmp
pop
leave
mov
ljmp
jmp
add
aam
mov
inc
imul
and
js
adc
movsb
add
fstpt
jbe
push
shrl
dec
cmp
sub
cmpsl
loope
pushf
pop
add
push
leave
andb
mov
aaa
aam
mov
inc
cmp
mov
orb
shll
std
mov
pcmpgtb
jno
or
pop
int
lret
fwait
cmpsl
out
cmc
out
lods
bound
mov
mov
xor
scas
movsl
inc
das
dec
xlat
or
hlt
pop
lods
jmp
mov
in
imul
jno
cli
xchg
out
mov
out
ror
lret
imul
mov
add
imul
add
stos
mull
adc
movsb
gs
test
xor
idiv
sti
pop
jecxz
ljmp
cmc
mov
xor
adc
sbb
out
xor
loopne
xchg
mov
and
ljmp
push
fadds
stos
shlb
insl
aaa
mov
sbb
cwtl
inc
mov
out
leave
or
push
mov
or
xor
jg
rolb
out
or
sub
movsb
cmpsl
fyl2x
out
jb
aaa
mov
cmc
xchg
bound
sub
test
imul
lret
add
mov
sub
ficompl
xchg
rclb
cmp
or
push
cmp
imul
mov
sub
dec
cli
in
xor
push
insb
int
jge
pop
je
sub
push
mov
addr16
bound
scas
scas
imul
push
sbbb
aaa
les
jno
adc
jae
cld
adc
cmp
test
aaa
cltd
add
ljmp
cld
mov
in
andl
mov
dec
or
push
sahf
pop
xor
test
sub
movsl
xchg
cmp
aaa
xor
shrl
loopne
test
and
push
test
mov
or
sub
inc
insl
dec
jmp
add
mov
imul
cmpsb
cmpsl
cld
jb
jmp
arpl
mov
xchg
lret
mov
stos
in
out
movsl
std
lock
subb
iret
mov
or
push
cmp
or
addl
outsl
and
fst
cmp
cmpl
inc
shl
push
inc
or
adc
add
daa
dec
add
aaa
adc
stos
mov
mov
cmpsl
xchg
push
or
and
int
and
push
popf
lahf
or
mov
or
les
push
jecxz
cld
pop
jp
xchg
xchg
sti
push
clc
xorl
les
int
ret
fldenv
jl
push
pop
push
pop
scas
test
mov
add
sarb
cmpsl
outsl
sbb
pop
push
stos
shll
sbb
sbb
xchg
stos
mov
sbbb
rcr
cmpsl
gs
mov
gs
pushl
adc
adc
pop
jg
testl
push
dec
push
cmp
add
outsb
out
pusha
dec
inc
mov
lods
cld
and
aam
pop
or
loop
shll
decl
push
sub
or
imul
sbb
pop
mov
adc
nop
ret
mov
hlt
fdivp
mov
xlat
jnp
and
rcl
inc
xchg
mov
fcmovnbe
cli
scas
je
jecxz
ffree
mov
xchg
push
xorl
mov
into
orb
cmp
loopne
orb
rorb
mov
loopne
xor
fs
push
into
fimuls
add
mov
or
aaa
into
mov
in
or
mov
imul
inc
add
sub
lds
jle
arpl
loop
mov
daa
push
jl
cmpsb
cmp
loope
movsb
aas
mov
push
pop
comiss
dec
imulb
addr16
stos
dec
jecxz
inc
mov
mov
cs
xor
jmp
cmpsl
push
mov
ja
pop
ss
mov
push
and
or
cs
sub
lcall
and
cld
adc
scas
imul
dec
fldenv
rolb
and
dec
xorl
xor
fstpl
mov
mov
scas
lea
scas
outsl
fmuls
popa
ljmp
push
jnp
int3
test
pop
sbb
imul
lock
outsl
call
lcall
testl
mov
fcmovne
in
in
xlat
mov
aad
pop
enter
ss
mov
xor
and
push
jne
stc
les
addl
lds
stos
rol
insb
stos
cmp
fcmovbe
sbbl
rorl
movsb
mov
lcall
das
stc
loope
xchg
cmp
lods
and
adc
sub
mov
pop
test
jo
lret
das
cltd
stos
lods
das
jae
jno
jae
imul
xchg
pop
mov
dec
int3
loop
sub
push
or
push
mov
inc
or
cmp
int3
test
out
jle
or
mov
mov
sub
fldcw
dec
sub
pop
pop
out
inc
pop
mov
cmc
cmc
into
jmp
push
xor
ret
push
popf
call
loop
mov
push
aas
cmp
movb
cmpsl
popf
repnz
cld
push
shlb
add
dec
daa
mov
data16
je
xchg
int
pop
out
rolb
cmc
andl
dec
ror
ret
fstpl
arpl
mov
or
aaa
add
mov
and
pushf
and
xor
mov
xchg
mov
repz
mov
pop
daa
mov
cmp
mov
out
push
subl
mov
mov
mov
sub
mov
dec
imul
mov
dec
sub
push
aam
adc
push
cmp
imul
mov
leave
cmp
sbb
jge
push
jmp
or
xchg
cld
js
test
or
test
push
clc
xor
out
lret
inc
mov
daa
stos
add
shll
lock
and
and
out
cmp
mov
or
push
xor
stos
xorl
mov
adc
scas
shlb
pusha
or
lret
mov
fiaddl
dec
out
mov
cmp
and
bound
aas
int3
aam
cmp
xchg
ljmp
jmp
leave
add
mov
or
mov
pop
dec
xchg
adc
imul
out
pushf
mov
or
sub
out
les
decb
xchg
mov
mov
jmp
outsb
jnp
gs
inc
mov
and
adc
push
mov
dec
mov
mov
cs
orb
mov
mov
cmp
mov
cltd
cmpsl
pop
pushf
add
pop
or
js
rorb
adc
je
adc
outsl
loope
mov
xchg
mov
mov
jp
dec
or
in
cmpsl
test
ja
inc
ror
jnp
mov
inc
mov
mov
es
sahf
mov
inc
mov
aas
pop
mov
je
addl
in
popf
aaa
dec
in
sbb
cs
aad
xchg
in
push
mov
rorb
fiaddl
push
inc
cmp
jecxz
cmp
out
es
lret
cmp
outsl
cmp
push
add
adc
or
mov
adc
mov
push
scas
cmp
add
xor
add
stos
dec
jp
jbe
sub
cli
adc
sbb
scas
outsb
push
sub
inc
ljmp
fwait
jno
or
xchg
js
notl
xchg
pop
or
push
push
mov
xorb
or
jg
add
ret
jle
aaa
repnz
xor
add
cmpsb
clc
cmp
push
mov
mov
mov
push
shl
add
jg
mov
sbb
mov
push
xlat
imul
stos
mov
mov
xor
and
cld
loope
in
pop
cmp
ss
mov
xchg
enter
cmpl
ret
pop
lcall
or
fsub
dec
and
fisttpl
sti
imul
aas
iret
and
cmpsl
jg
adc
xchg
mov
push
icebp
jb
pop
ja
subb
or
xor
xor
pop
mov
fcomps
addl
mov
fistl
push
xchg
cli
sti
in
aaa
pushf
call
xor
cmp
mov
hlt
imul
lret
add
push
pop
outsb
movsb
clc
push
add
stos
or
cmp
scas
testb
mov
or
inc
fsubs
lods
cmpb
xchg
and
pop
mov
jp
push
or
xchg
mov
xor
xor
jle
or
cmp
push
test
or
or
mov
lods
jno
jp
or
xor
jnp
movsb
pop
cmp
fcompl
cli
adc
add
or
cmpsl
mov
dec
ret
cmp
push
mov
cmp
mov
ss
ss
dec
movsb
add
xor
sbb
repnz
push
out
pop
fs
test
jge
jmp
xor
es
lret
rorb
xor
call
mov
andl
subl
lds
or
mov
and
out
sub
mov
lods
xlat
mov
xor
or
imul
cld
push
adc
std
clc
lret
test
popa
xchg
mov
std
out
mov
out
pop
mov
inc
in
push
sbb
int3
mov
mov
cmp
mov
sti
dec
in
arpl
mov
andb
mov
mov
stos
sub
movsb
xchg
jbe
fiadds
dec
aam
sub
cwtl
not
jecxz
enter
or
and
mov
lret
and
push
and
push
jns
adc
insl
cmp
rolb
mov
mov
dec
test
inc
pop
xor
push
fnstenv
je
mov
cs
pop
jl
ja
fcomi
mov
push
or
jns
and
pushf
lock
xchg
rol
lcall
jge
mov
shll
and
xchg
inc
or
stc
maxps
insb
mov
sahf
leave
insl
fucomp
icebp
and
dec
mov
std
clc
mov
fildl
mov
rorl
mov
mov
ja
mov
dec
sarl
subb
cmp
in
inc
cmp
mov
mov
cmpsb
xchg
add
sbb
cltd
mov
pop
lret
mov
orl
xchg
push
cmpsb
add
mov
jo
int3
out
fmul
cmpsl
mov
inc
or
aaa
mov
pusha
imul
mov
jle
rorb
cmpsl
inc
sub
imul
int
mov
inc
mov
push
mov
jnp
repnz
cs
jne
icebp
mov
test
mov
addb
push
jmp
out
lret
mov
dec
and
inc
or
jmp
pop
push
sub
outsl
mov
adc
add
or
lods
dec
data16
lea
cltd
mov
mull
dec
and
push
std
movsb
loop
jle
mov
mov
lea
mov
mov
sti
test
bound
testl
and
dec
dec
pushf
jno
inc
cmpsl
daa
xchg
jmp
xchg
cmpsb
xchg
int3
and
pushf
and
sbb
aaa
outsb
add
push
std
xchg
movsb
enter
mov
and
push
fimull
cmpsl
xchg
mov
shrl
cmp
dec
in
sbb
clc
xchg
sti
jecxz
lret
mov
aad
ss
loop
je
adc
xchg
push
jbe
and
xor
mov
push
pop
mov
into
js
mov
xor
inc
sub
inc
add
sbb
push
xchg
insl
push
gs
hlt
stos
out
daa
cmp
inc
push
testl
wbinvd
scas
xlat
ret
push
stos
pop
lret
loopne
movsb
mov
out
mov
stos
mov
repz
int3
push
orb
mov
lahf
push
inc
mov
add
data16
and
inc
mov
inc
test
pushf
and
cmpsw
popa
inc
movsb
fnstenv
or
jp
cld
lods
imul
inc
xor
repz
or
mov
lret
lahf
aaa
mov
cmpsl
inc
shll
es
cmp
mov
xor
ret
or
pop
int
lahf
stos
mov
sub
fildl
mov
mov
mov
aaa
adcb
xor
imul
or
cmp
xor
sub
push
imul
orb
add
ret
popf
fisubl
iret
xor
pop
jecxz
xor
adc
inc
test
or
icebp
or
dec
dec
imul
add
sbb
cmc
in
sbbl
or
gs
in
addb
mov
sub
cmpsb
rol
imul
jecxz
xchg
jmp
bound
fsubrp
ret
scas
imul
imul
inc
mov
ljmp
add
cmpb
lret
mov
or
out
pop
imul
cs
call
jbe
aaa
sub
mov
sbbl
push
cld
repnz
or
stos
pop
cli
icebp
jmp
add
lds
or
xor
or
mov
popa
xlat
shlb
mov
cmp
loopne
xor
cmp
mov
shlb
or
clc
out
testl
icebp
mov
imull
xorl
cmpsl
cmp
cmp
xor
into
int3
aad
outsl
add
mov
ret
xor
inc
clc
xchg
lea
inc
inc
and
shll
cmpb
popa
repz
mov
mov
aaa
aad
jb
jp
add
arpl
vcvtpd2dqy
mov
mov
cli
or
mov
mov
loopne
xchg
loopne
daa
das
or
aaa
clc
and
test
add
std
repnz
popa
mov
jnp
mov
lods
inc
jg
xchg
test
imul
test
adc
sub
addl
inc
mov
stos
ljmp
push
or
and
xchg
mov
sbb
pop
fdivrl
jmp
push
push
scas
scas
sub
aaa
xorl
movsb
adc
inc
das
sub
cli
andb
push
adc
pop
ss
loop
ret
es
mov
add
lock
xor
mov
ret
mov
leave
out
cltd
xchg
jmp
and
add
movsb
jo
adc
mov
push
inc
imul
arpl
cli
ljmp
inc
push
cld
lret
shrl
and
es
popa
leave
pop
outsl
insl
push
ljmp
mov
in
bound
push
cli
lds
fisubrl
pushf
adc
mov
testl
data16
xchg
jnp
xor
push
mov
xlat
addl
aad
add
push
inc
sbb
mov
add
mov
inc
mov
xor
popa
add
and
in
sub
and
sub
and
aas
sbb
inc
jmp
sub
fmull
push
fsts
mov
mov
xchg
add
push
clc
decb
ret
repz
dec
pop
and
clc
dec
sahf
mov
xor
lret
mov
cmp
mov
xor
lahf
scas
stos
imul
pop
lcall
sub
jns
xor
daa
push
mov
adc
cmpsb
enter
and
imul
cmpsl
pop
lcall
clc
and
daa
mov
pop
inc
addb
jno
push
fildl
mov
push
xchg
xrelease
lcall
or
subb
imul
dec
sub
or
cmp
in
jge
xchg
adc
pusha
loop
loope
cmp
mov
rcll
lcall
mov
rorb
dec
nop
push
xor
mov
mov
add
lret
dec
sub
cltd
sbb
jge
xor
lahf
insl
das
into
fiadds
cli
add
les
inc
subl
xor
or
or
cmpsl
gs
jns
clc
inc
and
add
jl
movsb
push
dec
sbbb
je
or
jp
add
and
jg
das
or
mov
mov
stc
ret
sahf
mov
mov
sub
push
push
mov
add
adc
movsb
loope
stos
int
or
or
xchg
fs
pop
mov
xchg
sub
lret
orb
in
lea
adcb
xchg
inc
mov
push
xchg
sbb
add
add
aaa
repnz
stc
mov
jecxz
js
aaa
or
mov
xchg
pop
out
repnz
das
shl
inc
mov
mov
ret
js
pop
loop
sbb
jno
push
ljmp
in
pop
jmp
add
sub
dec
ret
add
icebp
fcmovu
je
mov
pop
mov
fcmovnu
sbb
sbb
jg
mov
lds
dec
icebp
pop
xchg
loope,pt
out
decb
test
jge
push
pop
and
push
in
mov
rorl
into
cld
dec
jecxz
mov
arpl
mov
xor
mov
inc
mov
mov
fwait
xchg
test
das
sub
mov
mov
fwait
and
pop
les
xor
leave
pop
mov
in
mov
lds
mov
inc
out
cmp
jmp
inc
mull
loopne
mov
js
aad
in
xorb
repnz
jns
sbbl
aam
pop
mov
repnz
sbb
fbstp
mov
sbb
xchg
mov
xorl
mov
push
adc
out
mov
pop
push
fnstenv
cs
ljmp
inc
ret
jbe
adc
lret
into
dec
lret
jge
repz
mov
inc
hlt
cmpsl
adc
and
mov
inc
xchg
in
mov
lcall
mov
push
popf
addl
arpl
mov
push
aaa
cltd
shr
shlb
out
outsl
shrl
add
jle
mov
loop
add
out
dec
popa
xchg
cmp
out
xor
dec
cmp
sbb
movsl
xchg
les
jge
push
push
jno
mov
mov
lea
and
sbb
cmpsb
inc
mov
add
push
lods
xchg
inc
pop
leave
sbb
outsb
ret
push
pop
jg
sub
hlt
jne
push
or
sbbb
jl
cli
iret
xchg
and
cmp
sub
lods
shll
jbe
gs
dec
repnz
cmp
push
test
dec
cmp
cmpsl
sbbl
pop
das
mov
cmp
mov
xchg
addl
jae
icebp
mov
and
add
sti
scas
jns
in
divb
sub
sahf
and
dec
and
lcall
lea
push
scas
push
fdivrs
inc
cmpb
daa
push
stos
jno
push
mov
rcll
add
or
or
je
mov
sub
push
movsl
or
cmpsb
lock
push
rorl
out
mov
or
lods
test
dec
or
or
sub
scas
into
out
xor
pop
dec
push
outsb
add
out
mov
xor
mov
pop
scas
movsl
popa
xchg
sub
add
mov
adc
pop
mov
je
push
ss
cld
xchg
xor
mov
addl
mov
mov
outsb
and
jg
mov
shll
imul
jl
pop
test
or
dec
rolb
xchg
add
cmp
out
dec
jle
stc
mov
or
cmp
add
popa
push
mov
fwait
jmp
test
or
int3
add
cs
or
mov
ret
orb
mov
or
ds
hlt
cmpsl
xchg
push
scas
jnp
loope
xchg
stos
data16
mov
and
mov
mov
faddl
cmpsl
sbb
mov
adc
mov
xor
adc
push
js
jbe
and
aam
loopne
inc
leave
imul
and
imul
aaa
push
loope
xor
xchg
dec
nopl
cld
adc
inc
insb
cmpsl
mov
xchg
mov
je
pop
ja
ret
push
add
sub
and
inc
arpl
in
imul
out
sbbb
add
in
fs
sbb
in
in
pop
push
leave
pop
orl
xor
add
mov
mov
cmc
adcl
lock
in
adc
je
xor
jnp
xchg
cvtdq2ps
imul
repnz
out
add
inc
pushf
jmp
sbb
jecxz
sub
jo
pop
or
pop
mov
mov
inc
loopne
out
stos
mov
pusha
cs
sbb
mov
jmp
int3
add
mov
push
decl
mov
pop
mov
inc
adc
fsts
addl
or
dec
push
and
adc
xorb
mov
mull
hlt
lods
stc
jecxz
push
stos
rolb
add
stos
ret
mov
dec
stos
add
push
mov
stos
repnz
testb
push
adc
push
out
dec
push
sub
ret
push
arpl
adc
mov
das
nop
shll
call
mov
mov
sbb
aam
mov
push
stos
sub
in
arpl
mov
sub
xchg
xchg
arpl
xchg
lock
addl
xor
popf
push
mov
nop
mov
ljmp
std
mov
cli
push
or
testb
daa
in
in
push
les
xor
or
int
cwtl
aam
mov
shll
pop
and
xor
pop
mov
in
mov
cmp
int3
rcll
outsl
add
imul
iret
sub
sbb
rclb
mov
ret
jecxz
arpl
mov
xchg
sarb
xchg
cmpsl
inc
shl
push
movsb
cmp
movsl
mov
push
int
mov
and
ljmp
xchg
fs
add
dec
xchg
xor
push
mov
cs
xor
mov
imul
out
mov
pop
sbb
imul
dec
dec
sub
add
je
xlat
ljmp
sub
fs
dec
jl
add
outsb
les
outsb
push
bound
sub
pop
pushf
lods
dec
iret
push
dec
or
mov
add
jnp
int3
add
add
push
add
hlt
dec
or
in
bound
pop
fldenv
xchg
mov
fs
push
xchg
mov
int3
fdivl
dec
xchg
mov
sbb
sub
mov
sbb
stos
mov
in
cmpsb
push
or
outsb
or
cmp
ret
popf
jo
repz
mov
popa
and
in
push
xor
push
pop
inc
push
jae
pushf
mov
fs
js
stos
and
inc
jg
int3
xchg
stos
add
jmp
sbb
add
loop
ret
pushf
inc
adc
ja
xchg
dec
stc
dec
das
push
cmpsb
jne
mov
push
mov
cld
in
call
scas
loopne
outsb
xchg
inc
cmp
and
outsl
push
imul
mov
out
mov
push
inc
lods
sub
mov
xchg
invd
mov
xor
fdivs
or
mov
bound
lock
inc
mov
mov
sbb
mov
or
inc
shlb
jle
mov
sbb
mov
out
ret
es
int3
sbb
mov
cmp
int3
pushf
mov
stos
jl
lock
mov
mov
sub
or
lret
orb
xorl
outsb
mov
int3
jae
frstor
mov
xor
cmc
jae
mov
stos
mov
adc
les
mov
popf
inc
inc
inc
xor
jmp
psrad
dec
loop
leave
pop
insb
push
in
xchg
push
inc
rcll
stos
ljmp
ja
add
push
mov
frstor
inc
ljmp
das
add
push
sbb
in
pushf
sub
sbb
rcll
mov
adc
repz
test
xchg
in
xor
ret
insl
cmpsb
or
or
push
icebp
shl
dec
cmc
daa
insb
fcmovu
and
adc
and
mov
mov
lods
mov
iret
sub
xor
mov
or
fwait
cmpsl
sarl
sub
mov
je
sub
lods
shll
je
mov
xchg
and
inc
out
dec
jo
mov
inc
mov
add
or
ljmp
mov
repnz
fldl
into
xor
outsb
inc
cltd
pop
pop
ss
xchg
popf
subb
fdivl
pop
sbb
dec
add
std
mov
rcrl
ficomps
push
fcmovne
out
nop
sbb
aaa
push
orb
xlat
cltd
out
pop
out
leave
rcrl
mov
cmp
dec
shl
push
aad
mov
adc
scas
mov
push
mov
cmp
sti
enter
mov
aaa
jl
inc
or
mov
or
and
mov
push
mov
cs
fisubl
mov
xchg
pop
pusha
addb
pop
or
or
movsl
repz
push
mov
les
bswap
push
hlt
movb
les
bound
loopne
aaa
and
ja
icebp
jbe
ds
into
aam
pop
xchg
out
out
das
subl
cld
mull
mov
fildl
mov
iret
add
addb
dec
jle
xor
dec
fidivrl
ss
inc
orb
add
push
sbb
sub
pushf
dec
iret
jle
and
dec
inc
sub
dec
inc
add
imul
cmpb
int
cltd
xchg
insb
andb
lods
sub
repnz
inc
movsb
loopne
les
lods
test
mov
add
mov
sbb
in
or
aad
jnp
push
inc
das
cmpsb
xchg
movl
imul
or
gs
in
xchg
ja
add
insl
flds
addr16
in
out
push
in
popa
mov
cmpsl
and
lahf
pop
xchg
inc
bound
cmpsl
call
stos
popa
inc
push
sub
mov
fmul
add
jg
in
xor
or
ljmp
test
or
fdivr
xchg
xorl
and
aad
sub
or
pop
cwtl
outsb
dec
testb
addb
pop
jg
bound
sbb
push
add
add
movsl
aam
push
shl
cmp
xor
add
rol
cmc
es
hlt
in
sub
or
xor
dec
jno
xchg
cmp
mov
std
mov
je
add
popf
shrb
test
pop
rcrb
and
cli
out
lret
and
or
pop
scas
xchg
pop
imul
mov
aaa
rcrb
clc
dec
xor
jmp
orl
mov
mov
test
inc
es
js
jecxz
pop
test
xchg
sbb
mov
mov
aad
inc
sub
and
push
push
repnz
fsubs
loopne
into
inc
inc
pop
or
popa
cs
xlat
sbb
adc
cmpsl
push
out
sub
push
jbe
addr16
arpl
add
in
data16
lds
pop
fs
outsb
out
movsl
fs
adc
out
in
push
sub
xorl
in
mov
or
jne
or
add
data16
jbe
cmp
sti
push
add
scas
les
push
std
mov
out
jns
fucom
inc
out
sbb
sbb
pop
insl
rclb
lea
xchg
or
aas
insl
jmp
xchg
add
sub
aas
and
ds
inc
scas
add
mov
test
xor
icebp
sbb
out
repz
mov
bound
jg
mov
xchg
les
test
fwait
aas
scas
push
loop
scas
mov
push
fs
scas
and
dec
repz
aad
and
int3
clc
insl
cmc
sbb
repnz
stos
stos
in
jmp
push
sbbl
push
dec
dec
sbb
adc
sbb
in
scas
mov
sbb
or
fildl
lahf
pop
pop
ret
jp
inc
lods
push
scas
xor
das
std
and
jecxz
aam
jb
imul
repnz
movsb
das
in
cs
enter
mov
add
repnz
ja
cmp
in
pop
js
fmulp
pop
shll
mov
xor
xlat
add
mov
sub
xchg
or
mov
jno
mov
xchg
xorl
std
push
popf
mov
add
movsb
sbb
loope
int3
mov
ljmp
sub
push
or
adc
mov
pop
aaa
push
mov
mov
aam
cmpsl
in
std
lea
lret
mov
or
adc
mov
mov
dec
or
push
push
and
xchg
out
or
loop
loope
mov
sbb
int
jno
imul
sbb
lock
sub
lret
lahf
jmp
mov
mov
fisttpl
rcll
mov
sub
cld
ret
inc
push
jnp
movsl
inc
stc
in
cmpb
lretw
rorb
lahf
bound
in
push
adc
adc
mov
in
mov
xor
jmp
pop
mov
insb
pop
addb
xor
mov
inc
les
xlat
mov
dec
test
dec
es
outsl
add
push
daa
xor
adcl
xorb
jge
add
in
lcall
add
ret
xchg
js
push
or
xor
add
push
jmp
fwait
ljmp
cmp
inc
mov
dec
dec
mull
xchg
dec
pop
and
rcll
sub
into
and
in
jle
inc
orl
in
xor
in
xchg
cmpsb
dec
cs
bound
mov
lea
push
mov
mov
popf
ds
in
sub
pop
lods
into
push
push
and
cmp
insl
out
mov
hlt
rorb
fiadds
dec
dec
xchg
mov
inc
jno
jae
scas
lods
jns
out
popl
inc
xor
daa
mov
ljmp
cmp
repnz
mov
push
add
jne
and
pop
mov
repz
cld
cmpsl
ljmp
iret
add
imul
pop
aas
add
mov
add
cmpsl
push
mov
push
or
sub
or
mov
repnz
jnp
in
dec
xor
jp
add
mov
jno
decb
aam
cmp
xor
push
aam
outsl
adc
jmp
or
repnz
and
jl
push
mov
insb
add
cmp
adc
and
mov
je
and
jo
out
xchg
add
mov
fdivrl
mov
fs
ficoml
rcrb
or
in
and
fsubr
cs
cmp
mov
jbe
and
hlt
pop
push
cwtl
cld
rclb
mov
addl
aam
push
cld
es
cmp
in
aas
sub
jg
mov
sub
repz
cmp
in
mov
cmp
sar
sbb
aaa
lret
mov
inc
add
aam
xor
out
xchg
aam
insl
xchg
imul
mov
into
push
out
dec
js
mov
fcomps
shrb
ret
inc
and
or
ret
cltd
test
icebp
inc
mov
pop
int3
loop
outsl
and
xor
add
in
inc
dec
in
pop
imul
mov
push
cmp
lock
ret
lds
push
sub
pop
bound
movsl
divl
add
mov
push
aaa
dec
nop
lock
imul
jae
ljmp
repnz
pop
push
cli
lods
pop
ljmp
fwait
orb
or
shlb
mov
addr16
pushf
aas
cmp
inc
pop
testl
xorb
ss
rol
and
inc
mov
lock
xchg
filds
mov
ret
push
gs
ret
out
xchg
mov
mov
mov
cmp
loop
sub
test
push
mov
shll
mov
jnp
scas
add
xchg
add
mov
lcall
cmc
and
popf
dec
jecxz
fadds
mov
je
lret
jmp
in
dec
mov
inc
mov
xchg
fs
mov
movsl
stos
lods
outsb
lret
clc
sbb
push
addr16
sbb
das
xor
cs
xor
or
sub
movsb
xor
outsb
mov
aam
mov
std
and
fidivrs
and
out
xor
sbb
xor
rcl
loope
mov
mov
es
ljmp
dec
adc
add
mov
cmpsl
arpl
outsl
leave
pop
cmpsb
inc
xchg
dec
mov
or
push
enter
pop
ret
or
mov
sarb
mov
inc
aas
cmp
fildl
cmp
fildl
insb
cli
add
sbb
pushf
mov
sub
cmp
ja
sti
mov
dec
add
add
mov
jo
xorl
push
pop
or
push
cwtl
pop
dec
cmp
mov
sub
inc
repnz
into
push
push
out
xor
mov
shll
cmp
xchg
scas
out
add
roll
or
hlt
mov
in
dec
cs
pop
shl
loop
and
mov
stos
xor
sub
add
daa
xor
jle
xlat
movsl
or
xor
sbb
or
mov
push
lcall
decb
or
lahf
push
into
filds
in
jb
int3
lds
into
dec
mov
or
add
out
int3
mov
mov
gs
xor
in
xor
ljmp
mov
les
xor
lds
cmpsl
cwtl
push
jne
loop
pop
adc
jl
add
or
xchg
hlt
or
aad
xchg
lret
mov
das
lds
jae
or
test
test
imul
stos
or
lea
les
scas
and
lcall
fldl
sahf
xchg
shrb
into
inc
shrb
int3
outsb
sti
rorl
in
adc
mov
mov
clc
hlt
lea
out
inc
jg
adc
push
icebp
cmp
das
mov
decl
pop
out
jl
mov
push
push
enter
add
jg
or
jg
incb
push
and
jae
es
or
stos
fistl
adc
pop
fldenv
int3
flds
mov
jle
xor
jb
imul
xor
and
pop
mov
or
rsm
test
lods
adc
aas
dec
mov
fcoms
mov
xchg
pop
imul
mov
jmp
mov
cld
movsl
xor
and
ret
pop
xchg
sahf
cltd
add
push
fimull
xor
adc
pop
lcall
xlat
das
insl
lea
enter
inc
push
das
add
mov
out
xor
jne
aaa
iret
xchg
lock
xlat
xor
loopne
mov
cli
sub
orb
add
bound
and
adc
or
rorl
bound
push
enter
xchg
filds
and
mov
mov
clc
add
shlb
shl
movsb
jl
scas
mov
shlb
xchg
add
add
push
dec
xor
mov
xor
ret
pop
repz
test
sub
rorl
push
mov
shll
andb
in
add
int
mov
movsb
push
fadd
mov
js
xlat
mov
jb
mov
cld
add
sub
adc
test
inc
shlb
add
xor
rorl
shll
stos
leave
or
repnz
and
and
popa
xchg
add
xchg
subl
outsb
dec
ret
in
gs
jl
movsb
les
loopne
shl
rcr
mov
add
std
jmp
fnsave
dec
rcrl
jle
aam
pop
mov
dec
rorl
addr16
in
jge
lret
dec
or
outsl
lret
in
dec
or
sti
in
mov
push
lret
test
mov
fstpt
push
xor
fsubs
push
test
add
push
cmpsl
xchg
out
mov
fdivs
pop
mov
mov
adc
push
in
mov
test
inc
lret
push
xchg
arpl
mov
xor
stc
test
loop
sbb
push
jo
inc
movb
mov
add
addb
repz
sub
fdivl
fsubs
subb
jo
mov
xor
adc
cmp
mov
push
les
movsb
mov
jb
cmc
lock
mov
ret
test
and
jae
xor
repz
mov
fs
inc
mov
fidivl
mov
mov
sub
lods
shll
repz
and
sub
lds
cmpl
fists
xchg
call
jl
int
mov
xor
test
push
add
in
pop
jno
mov
loopne
lcall
stc
rcl
mov
sti
ret
mov
in
sti
dec
xor
arpl
xchg
mov
sbb
rorl
ret
mov
and
dec
or
rorb
xchg
add
scas
pop
mov
mov
add
mov
lret
out
dec
inc
mov
mov
in
faddl
sahf
movsb
cli
mov
add
fs
imul
repz
out
jmp
shr
push
inc
inc
fdivl
inc
je
mov
or
out
push
dec
lea
mov
sbb
or
imul
mov
in
fnstcw
in
dec
xor
stos
ret
add
mov
popl
popa
lret
stos
ucomiss
out
inc
mov
out
mov
jle
mulb
iret
fwait
setp
inc
xchg
mov
and
dec
cltd
push
mov
ret
cld
les
mov
or
cmp
lret
dec
inc
or
and
movsb
cwtl
xchg
or
mov
mov
mov
pop
movsl
loop
cli
push
and
sub
in
mov
ja
orb
pusha
mov
orl
mov
cmp
push
mov
push
dec
sbb
test
dec
insb
push
push
in
mov
orl
mov
ret
mov
xor
in
pop
mov
sbb
pop
add
lea
sub
and
pusha
or
mov
jl
cld
or
daa
int
dec
push
mov
sti
xor
mov
je
stos
outsl
popa
add
and
mov
loope
sbb
ret
sub
aaa
out
push
ret
mov
movsb
sti
inc
clc
lods
add
sti
cmpsb
clc
jae
and
repnz
lods
add
ret
fidivrl
xchg
fisttpl
mov
testb
mov
out
cli
mov
mov
add
cmpb
cli
cmpsl
out
je
mov
std
push
jne
pop
dec
lcall
cmp
test
sub
xor
mov
sub
loope
mov
aaa
sbb
add
inc
mov
pop
xchg
add
mov
testl
movsb
std
cmp
xor
mov
push
js
pop
sbbl
movsb
dec
mov
setns
cmpl
cli
shll
sbb
cld
push
ss
xchg
push
pop
popf
push
xchg
add
mov
xor
rol
push
and
jle
mov
arpl
popa
pop
inc
dec
ret
cld
ret
or
push
add
test
inc
jp
or
xchg
lahf
stc
into
mov
aaa
push
mov
cld
notl
inc
filds
aaa
lds
aad
rolb
xor
lods
jo
jne
je
mov
inc
ret
mov
fstpt
sti
outsb
test
je
into
fdivp
in
scas
push
pop
add
mov
push
fadd
mov
add
xor
cmpl
dec
mov
idivl
mov
mov
dec
aad
lock
pop
outsb
cmp
xor
add
pop
cmpsb
pop
rcrb
mov
or
insl
mov
pop
mov
idivl
out
xchg
add
push
jae
in
add
push
adc
jns
cmp
add
pop
stos
fstps
add
leave
shl
xor
lods
pop
loop
sub
cmp
or
fidivs
cli
stos
push
bound
jae
jne
stos
mov
push
in
je
push
cmp
xor
les
xor
push
add
and
testb
sbb
aas
dec
xchg
loope
shr
in
or
iret
inc
rcrb
fildl
into
sarb
xchg
and
xor
rcll
and
push
shlb
mov
add
push
imul
xlat
mov
shll
mov
or
jp
and
inc
mov
xor
jae
inc
out
push
mov
pushf
mov
sbb
andl
movsb
pushl
cs
or
xor
or
lcall
sbb
enter
push
ret
push
scas
dec
xchg
sbb
jno
pop
add
imul
into
sbb
xor
push
add
sub
fcoms
fsts
pop
addl
jg
jno
mov
cld
ret
or
fnstsw
adc
rorl
int3
fcomps
lods
lea
icebp
mov
aas
je
out
cld
das
dec
mov
incl
add
pushf
arpl
dec
in
mov
cld
dec
pushf
push
pop
shlb
inc
xrelease
daa
jmp
sub
sahf
xor
les
add
in
mov
xchg
cmpsl
cld
div
cmp
inc
mov
pop
in
push
push
jno
sbb
aad
inc
ss
add
test
xchg
mov
pop
jl
shll
pushf
enter
push
add
push
jmp
mov
xchg
xor
cmpsb
dec
mov
in
and
jno
pop
cmp
push
idivl
or
or
cmp
xorl
adc
and
sub
fsts
fcoml
loope
add
lds
arpl
rorl
mov
push
add
shl
fidivs
xor
arpl
subb
add
into
jecxz
in
pop
mov
in
fstpl
or
inc
mov
shlb
int3
push
xor
ret
mov
testl
lds
out
scas
inc
stos
ja
jns
bound
and
adc
mov
orl
mov
add
cmpl
movsl
push
test
aaa
shr
add
sbb
inc
and
jl
andb
and
jo
les
out
add
fsubs
lods
pop
xchg
aas
loop
test
sbb
ljmp
jge
popa
push
mov
jns
loop
xchg
es
push
ret
and
mov
jecxz
sub
icebp
adc
popf
loopne
test
jp
push
or
xlat
or
ret
rorl
fs
mov
mov
sbb
arpl
in
xor
sub
push
adcl
jno
mov
fbld
fisttpll
daa
cltd
mov
and
push
and
scas
inc
adcb
inc
fcompl
mov
les
cld
add
cmp
sbbl
push
leave
sbb
push
ret
cmp
lahf
mov
mov
mov
and
push
js
orb
mov
cmpsb
inc
add
enter
push
jnp
adc
sub
xchg
inc
cmp
mov
xchg
or
sahf
int3
movsb
dec
add
arpl
outsb
mov
xchg
sbb
repz
jnp
mov
dec
and
ret
jb
cld
xor
in
imul
subb
xor
fs
and
pusha
push
xor
movsb
cmp
pusha
and
sub
test
lret
ljmp
cmpsb
out
dec
scas
lods
add
and
or
insb
mov
test
imul
stc
push
add
mov
bound
jbe
addl
mov
xchg
sti
mov
inc
xor
pop
pushf
sbb
mov
add
in
and
dec
dec
movsb
cmp
movsl
and
push
rorb
adcl
mov
jbe
cmpsb
pop
push
ret
xor
inc
addl
or
mov
cmpsb
rorb
lock
cmp
mov
sbb
cltd
popa
add
xlat
jle
es
int3
jne
xchg
and
dec
and
xorl
loopne
getsec
ja
fcmovnu
negl
pop
dec
xchg
inc
lret
push
pop
jno
cmp
fildll
cmp
xor
add
jne
jmp
mov
sbb
and
dec
sbb
mov
lret
jle
dec
adc
push
cmovns
out
lods
adc
pop
movsb
mov
jmp
ljmp
mov
mov
scas
and
shll
inc
shlb
ret
shlb
hlt
notl
test
movsb
rorb
pop
inc
dec
daa
pop
repz
xor
cmp
mov
xor
cmpsb
fistpl
iret
fsubp
loopne
lds
jecxz
adc
sub
daa
adc
out
push
mov
cmp
mov
aas
cmc
lock
pop
xor
sub
pop
out
mov
ret
adc
and
add
add
lods
and
arpl
es
in
pop
das
lea
sbb
sbb
push
out
or
add
inc
hlt
ds
subl
ret
cmp
fisubrs
aaa
mov
aaa
pop
push
xchg
adc
enter
mov
addl
lds
rcrb
dec
or
negl
ficoms
test
ret
xor
xorb
leave
jmp
inc
inc
loop
add
test
aam
push
jno
jo
roll
cmpsl
call
xor
jp
xor
ss
cmp
out
mov
nopl
lret
pop
orb
lock
push
out
sbb
push
loope
push
data16
dec
out
rorb
jo
stos
fildll
sbbl
ljmp
dec
out
ljmp
faddl
dec
xor
inc
jl
out
dec
and
and
mov
cmp
mov
add
mov
push
sub
jae
fs
shr
loopne
mov
mov
enter
aad
int3
repz
addb
stos
ja
jno
sbbb
cmpsl
stos
icebp
lret
in
sbb
andb
pop
xchg
sbb
push
stc
mov
sub
out
rclb
pop
add
or
adc
movsl
push
sub
push
bound
sub
ret
xchg
aad
movsb
cmp
mov
repz
les
xor
scas
shrl
mov
enter
aam
iret
add
das
lret
cmp
popa
test
sbb
fsubl
ds
or
int
cmpb
test
dec
sti
mov
cmp
or
cmpsl
mov
mov
lcall
or
push
push
inc
popf
jge
jmp
int3
les
in
sub
xor
mov
push
and
inc
js
inc
and
stos
xchg
out
ret
test
mov
or
jns
pushf
nop
mov
sub
mov
int3
cmp
mov
xorb
mov
xor
popa
ret
dec
jl
rol
xchg
add
jae
mov
lods
add
and
movsb
jns
fwait
sub
sub
cmpsl
mov
loope
and
mov
hlt
in
iret
pop
stc
hlt
mov
je
js
push
js
mov
push
cmpsb
inc
push
mov
dec
add
rclb
or
pop
out
mov
cmpsl
iret
sbb
inc
add
and
lods
xchg
gs
in
jb
cs
aas
xorl
cmp
mov
mov
mov
add
mov
xlat
adc
jge
int3
mov
jbe
stc
xlat
das
fs
inc
sub
adc
cmp
dec
mov
lcall
imul
cmpsb
inc
lret
stos
mov
addr16
repnz
cmc
sbb
scas
push
cmpsb
pop
sahf
les
mov
ja
iret
orb
punpckhbw
bound
and
aas
and
sar
inc
cmp
add
call
clc
div
arpl
lea
add
mov
xchg
bound
push
testb
je
lods
xchg
inc
jno
dec
std
divb
aas
imul
inc
add
ja
ss
outsl
push
push
jg
dec
lret
xchg
mov
cmpsl
xchg
mov
sub
jecxz
mov
faddl
es
adc
xchg
cmpsl
call
repz
and
shlb
xor
jne
pop
mov
or
bound
mov
hlt
jge
adc
adc
push
xor
rorb
xor
into
test
cmp
xchg
jnp
dec
sti
test
adc
sub
orl
gs
and
mov
es
and
add
stos
aaa
inc
mov
pop
jno
test
dec
cmovge
repnz
stos
xor
negl
fwait
adc
dec
push
lcall
outsb
aad
cmp
and
nop
mov
mov
lret
dec
mov
cmpsb
notl
adc
push
outsl
ret
popa
or
or
adc
or
mov
mov
mov
cmp
incb
add
bound
add
pop
mov
outsb
shll
subb
andl
je
lds
and
or
inc
fnsave
addb
xor
cmp
sub
xlat
mov
jg
adc
mov
es
inc
orl
mov
pop
sub
ret
push
dec
orl
xchg
pop
or
jno
mov
cli
jmp
ret
repz
mov
xor
cmp
aas
adc
xor
imul
push
cmpsb
aas
fdivp
outsl
lahf
pop
addr16
inc
mov
xorb
sbb
mov
jge
stos
ljmp
loopne
cmpsl
xchg
dec
stos
addb
lcall
je
or
cmpsb
or
int3
lahf
dec
mov
or
rorl
jmp
sub
dec
or
iret
mov
mov
add
prefetchwt1
or
sahf
rcl
and
and
mov
aad
jecxz
add
push
mov
or
pop
rcll
xor
xchg
or
rcll
add
out
xorb
cmpsl
lods
or
in
and
jg
scas
mov
xchg
lds
popa
dec
sbb
or
int
pop
psraw
stos
xchg
mov
cmpsl
lret
add
rorl
xor
adc
stc
out
sbb
xor
dec
mov
dec
mov
dec
shl
and
scas
push
shll
and
sahf
fbstp
xchg
mov
shl
or
push
stc
lahf
push
jmp
xchg
mov
outsb
add
cs
in
adc
bound
movsb
add
push
push
popa
dec
xchg
push
mov
mov
ffreep
ret
inc
out
in
mov
lods
sub
mov
loop
rorl
sbb
mov
lock
dec
aad
jl
push
out
popa
xchg
mov
push
lods
stos
push
push
movsb
cmp
mov
ficoms
jmp
dec
aas
jno
ret
jae
dec
sbb
mov
cmpsl
andb
shll
add
inc
int
dec
in
arpl
xchg
jne
xchg
ret
mov
shll
xor
lods
je
push
mov
and
xchg
add
bound
fisubrs
arpl
jnp
lcall
jg
mov
cwtl
cmpsl
mov
push
dec
test
mov
aam
call
not
insl
mov
cmpsl
add
fsubrp
scas
xchg
popl
add
xchg
lea
dec
adc
das
lea
add
test
push
push
les
inc
mov
push
and
add
mov
add
outsl
add
xor
xor
outsb
xor
pop
out
cltd
push
pop
sub
hlt
xor
cli
mov
xor
add
addb
add
sbb
arpl
push
mov
inc
sbb
cmpsl
outsb
xchg
mov
movsl
or
mov
jbe
divl
push
cmpl
cmp
and
cld
mov
pop
and
mov
aam
cmp
xlat
sub
arpl
pusha
mov
adc
adc
dec
imul
bound
adc
loop
mov
mov
shll
mov
xchg
jg
movsl
push
add
aad
cmpsl
xchg
mov
ds
mov
ret
jne
mov
and
inc
dec
sub
mov
push
mov
mov
or
jo
pop
mov
push
roll
xchg
mov
andb
in
into
push
inc
or
js
pop
pushl
jae
fwait
sar
inc
dec
xchg
fwait
xor
pop
cmp
fldt
movsl
xor
aaa
movsl
xorl
mov
push
push
lods
cmpsb
xchg
fsubr
push
hlt
or
xor
pushf
roll
inc
stc
inc
push
mov
pop
lret
je
jbe
in
add
cmp
movsb
jl
in
mov
mov
stos
outsl
mov
mov
hlt
shl
cmp
das
xchg
mul
inc
xchg
mov
test
lcall
out
and
add
push
mov
dec
xchg
vmovd
lahf
movsb
push
fiadds
cmc
and
sub
iret
pop
lret
sbb
aad
cwtl
and
push
mov
push
inc
popa
loop
stos
mul
mov
popa
lea
aaa
aam
je
xor
std
push
inc
sbb
sub
out
dec
xchg
andb
jl
das
mov
jmp
push
enter
mov
push
loop
jecxz
cmp
lret
mov
pop
push
dec
inc
repz
xor
inc
and
mov
test
add
or
adc
dec
xrelease
xor
jmp
cwtl
aas
mov
idiv
jns
lods
inc
cmpsl
pop
xchg
mov
or
cld
adc
push
stos
pop
sbb
stos
inc
enter
mov
cli
cwtl
add
stos
pop
pop
lods
ret
mov
int
enter
sbb
mov
fcomp
mov
mov
sar
jne
movsb
rorb
dec
imul
outsl
sub
mov
dec
mov
addl
lret
stos
adc
leave
ffree
sub
sbb
push
add
sbb
cmp
scas
xchg
push
inc
test
lea
jecxz
or
push
mov
mov
xor
sbb
inc
das
mov
and
lret
jle
bound
mov
or
jp
mov
mov
pop
stos
aam
in
and
xchg
loopne
sub
ss
das
inc
inc
mov
mov
enter
imul
cmp
insb
enter
decb
mov
jno
xor
aas
rolb
push
mov
dec
pcmpeqw
imul
push
mov
leave
jmp
cmpsl
lock
outsb
sub
jecxz
mov
pop
outsl
mov
cmpsl
cmp
mov
lret
sub
imul
bound
rolb
pop
cmp
ret
fcompl
int3
push
adc
or
sahf
cs
mov
push
orl
aam
les
push
dec
cmp
xor
push
movsb
sub
daa
popf
fcmovnb
daa
test
into
dec
add
dec
mov
andl
dec
cmp
mov
or
xchg
sbb
inc
fnsave
testl
mov
mov
cmp
push
xchg
imul
scas
jmp
push
lods
sti
ret
push
inc
fidivrl
add
lods
jle
xor
sbb
mov
cmp
push
test
inc
int
cmpsb
int
push
stos
out
aaa
lret
mov
dec
mov
rol
mov
pushf
mov
dec
pusha
cmpsl
jecxz
sahf
dec
test
add
dec
sbb
mov
mov
es
fimull
add
jl
cld
ret
inc
shr
mov
loop
out
cli
mov
les
xor
jns
cmp
test
xchg
cs
ret
test
dec
cld
sub
or
arpl
xchg
sub
movsl
and
mov
bound
sbbb
loope
loopne
int3
push
add
mov
hlt
and
lret
or
jge
iret
push
andl
push
add
loope
bound
movsb
and
lcall
mov
or
sub
mov
cmpsl
pop
dec
fdiv
shl
mov
push
test
or
xchg
mov
cmp
es
adc
adc
xor
insl
push
or
mov
cmp
in
fdivr
or
ljmp
adc
aaa
push
imul
cmp
mov
notb
jmp
xor
lret
and
cmpsb
test
or
loop
mov
add
lret
inc
push
les
jle
pop
push
lahf
inc
or
cmp
and
adcb
pop
lock
rcrb
mov
mov
cmpsb
out
js
int3
arpl
mov
arpl
shld
arpl
xchg
adc
das
hlt
fsubs
add
je
jge
and
xor
push
addl
mov
aam
xchg
mov
mov
imul
and
into
add
add
in
outsb
jae
lret
mov
fcoms
pop
sarl
mov
enter
mov
add
std
cmpb
ds
xchg
jae
add
and
cmpsl
cmp
push
ss
and
int
aam
push
outsb
mov
in
out
xchg
mov
movsb
pop
sbbb
xchg
jl
add
push
test
sub
mov
add
lcall
push
mov
arpl
scas
das
mov
icebp
lods
jns
cs
xchg
push
mov
push
sub
pop
in
movsb
add
mov
in
fsubrl
mov
mov
icebp
jl
xchg
inc
ljmp
movsb
jae
push
daa
mov
dec
adc
xchg
dec
movsl
shrb
lret
xor
cmp
into
mov
or
and
xchg
stos
ja
or
lock
and
addb
pusha
mov
add
arpl
adc
popa
xchg
sbb
in
cmpsb
xor
sub
inc
add
add
mov
bound
mov
or
or
push
inc
into
push
add
mov
xor
push
mull
stos
or
enter
pop
or
dec
or
adc
cmp
ret
add
mov
and
sub
cmpb
adc
sarl
inc
cld
in
sub
add
in
cmpsb
mov
xor
push
fdivp
shl
xor
sbb
inc
mov
shll
push
or
cmpsl
and
jge
add
outsb
adc
mov
imul
mov
out
and
xor
mov
add
pop
cmp
andb
ja
xor
sar
int
aas
add
shr
push
ljmp
jb
sbb
movsl
sbb
xor
subl
and
jae
mov
aam
insl
add
negl
and
dec
mov
add
stos
jae
sub
testl
divb
mov
repnz
add
dec
pop
nop
pop
int3
xor
inc
fisubrl
xor
fisubrl
mov
leave
flds
outsl
add
call
ret
int
push
imul
add
mov
mov
addb
add
pusha
ds
push
xor
xor
bound
ret
subl
push
cli
scas
cld
dec
inc
adc
adc
inc
movsb
adc
jp
mov
aaa
cmp
sbb
dec
pop
add
xor
out
mov
je
xlat
push
add
xchg
lret
sahf
dec
in
sub
sbbb
dec
mov
cmpsb
cmpsb
xorl
lods
cmp
xlat
mov
mov
sub
loop
mov
iret
jae
inc
aam
dec
adc
push
add
xor
testb
push
mov
add
push
add
int
jne
cmp
and
mov
repnz
sbb
test
push
idivl
or
sub
test
push
mov
or
push
int3
mov
push
mov
into
adc
fsubrl
andl
mov
sbb
sbbb
dec
ljmp
ret
mov
or
sbb
addb
data16
out
inc
les
cmp
int3
jl
sbb
pop
sub
dec
xchg
popf
addr16
mov
stos
mov
stos
popa
scas
cwtl
sub
and
xchg
sbb
shl
cmpl
mov
mov
lea
adc
dec
mov
dec
add
dec
add
jge
out
cli
push
shlb
pop
jmp
adc
loope
into
jbe
inc
sub
dec
push
jnp
or
mov
jbe
dec
in
sub
add
mov
scas
loopne
add
pop
shlb
adc
and
mov
mov
arpl
hlt
movsl
mov
or
jae
jp
mov
jns
sahf
test
mov
push
lock
mov
inc
or
lret
mov
xor
aam
das
test
shl
adc
sub
push
addr16
sarl
loopne
cmp
shrl
inc
add
add
hlt
testl
push
je
jg
jmp
stos
dec
dec
movsb
fwait
push
push
mov
mov
xor
inc
ja
push
xor
push
dec
sbb
add
dec
dec
mov
lret
jne
add
sahf
stos
mov
bound
or
bound
les
dec
jo
cmp
sbb
xorl
xchg
lret
imulb
sbb
sahf
stos
mov
in
fldenv
movsl
outsb
mov
ljmp
shl
je
psubsw
jne
outsb
aaa
pop
sbb
ds
ds
inc
mov
xor
daa
repz
jl
xchg
adc
dec
popl
out
aam
xor
leave
jae
cmp
cmovae
orl
iret
sbb
push
pop
jo
sub
mov
mov
xor
mov
xor
jae
xor
out
fistps
add
ret
mov
invd
into
mov
bswap
mov
jo
jo
sbb
cmpsl
inc
jae
bound
aaa
imul
add
add
cs
xchg
repnz
in
sbb
dec
pop
push
jae
add
mov
pop
mov
repz
or
sub
test
sbb
stos
xor
adc
or
sbb
mov
push
inc
push
stos
push
mov
and
or
ret
inc
mov
rclb
sub
das
mov
fimull
inc
shrb
fldcw
rcrl
aaa
or
mov
or
inc
add
loopne
jns
ret
pop
mov
sub
xor
filds
call
shll
cmp
fwait
js
fwait
daa
pop
ljmp
std
sub
dec
ljmp
les
loopne
jle
sub
push
in
fs
dec
add
cs
or
lods
push
gs
mov
mov
cmpsl
sbb
mov
cmpsl
in
rcll
mov
clc
aaa
or
sbb
xor
and
cmpsl
pop
shll
ret
dec
dec
add
or
push
scas
adc
mov
ret
out
in
xor
pop
sarb
or
mov
leave
movswl
push
xor
mov
push
rcll
or
out
mov
mov
mov
xorb
or
mov
lret
mov
popf
popa
jecxz
test
add
xchg
mov
xor
outsl
insb
incl
add
push
sub
xchg
mov
mov
dec
jp
fadds
mov
into
loope
or
xchg
push
cmp
lds
mov
cs
mov
fdivr
inc
clc
inc
daa
adc
xlat
cltd
cwtl
stos
add
outsl
dec
jmp
jnp
mov
in
inc
rcll
sub
call
sbb
cmp
movsb
adc
lods
inc
mov
popa
push
dec
les
push
enter
ss
pop
lods
cwtl
imul
and
arpl
fidivs
iret
sub
dec
cmpsl
aaa
sub
lret
stos
pushf
xor
push
out
es
lods
andl
and
fistps
mov
popa
xor
jb
popa
repz
in
testl
jb
mov
xor
enter
imul
loopne
int3
repnz
ret
jp,pn
push
add
popf
xchg
mov
insb
daa
lods
push
push
mov
cmp
push
or
xor
lret
mov
movsl
inc
adc
lock
bound
sahf
lock
fwait
test
inc
add
cli
shll
aas
inc
push
loope
dec
mov
enter
mov
and
mov
xchg
shll
loop
andb
xlat
cltd
hlt
push
lret
xor
mov
xor
adcb
iret
mov
push
cmc
cs
imul
orb
push
lea
cmpsb
cmp
outsb
imul
sbb
push
mov
or
das
sbb
insl
cmpsb
jnp
xchg
mov
and
les
mov
add
or
sub
fisttpl
cmp
lods
mov
int
xchg
mov
pop
aas
cs
ja
or
pop
push
icebp
xchg
inc
es
mov
rep
in
imul
mov
mov
cmp
xor
xor
cmpl
imull
xchg
inc
mov
mov
mov
jmp
add
lcall
mov
loop
xor
jp
popa
mov
in
sub
aam
cmp
scas
negb
scas
mov
or
out
jl
dec
out
addr16
or
rorb
mov
rep
sub
lods
sar
aas
mov
mov
subl
push
lods
xchg
aas
mov
cmpsb
mov
imul
or
incb
iret
shlb
mov
mov
cmp
das
ret
pop
push
out
fisttpl
es
lock
shlb
loopne
sub
pop
jmp
cltd
loop
sbbl
mul
ljmp
movb
sarl
sti
push
mov
cmpsl
push
dec
add
rclb
scas
add
dec
mov
mov
sbb
inc
dec
test
rorl
dec
into
filds
shr
or
add
dec
cwtl
cmp
mov
loopne
loope
xchg
jmp
enter
jmp
gs
mov
cmp
push
push
and
out
cwtl
fs
icebp
add
dec
jmp
mov
mov
push
mov
push
add
inc
or
or
sbb
cmc
mov
pop
cmc
loop
rcrb
in
and
mov
daa
pop
sbb
lret
add
lods
mov
xchg
cmpsl
dec
jp
add
out
pop
enter
lea
scas
pop
dec
jo
add
pop
xlat
mov
and
add
pop
and
sub
aad
sub
dec
mov
faddl
or
mov
stos
add
popa
jle
out
push
das
mov
icebp
mov
jne
mov
push
xor
mov
pop
sahf
inc
sbb
sub
mov
push
and
std
insb
stos
sub
ss
add
cs
push
enter
xor
pop
push
cwtl
movsb
jo
shlb
or
pop
out
loope
insl
mov
dec
push
dec
mov
ret
mov
sub
or
int3
loope
cmp
lods
insl
or
ret
subb
cmp
push
cmp
mov
or
cmpsl
xchg
inc
ds
mov
fistpl
inc
lcall
pushf
mov
or
mov
in
cmp
dec
addb
pusha
push
push
jmp
adc
mov
sbb
mov
repnz
dec
push
and
shld
cs
loope
rorb
mov
pusha
jns
dec
inc
sbb
cmpsb
rcll
rorb
mov
mov
aas
mov
inc
fsubrl
jp
push
or
movsl
pop
aas
jmp
sub
movsl
out
push
dec
dec
in
in
lret
and
sub
and
and
sub
mov
jb
dec
cmp
mov
xor
ds
jb
xlat
mov
xor
or
outsb
jl
mov
push
or
push
movsb
aas
rcll
pop
mov
xchg
mov
fucom
adc
or
mov
mov
cmp
sbb
jmp
insl
mov
adc
in
or
mov
sub
testl
aas
mov
xor
aas
mov
and
gs
mov
mov
jae
mov
lret
int
cs
sub
or
xor
sbb
cld
idivb
mov
mov
and
lods
rorb
cmpsl
adc
pop
dec
and
push
or
out
push
cmpsb
and
mov
hlt
cmpsl
xorl
add
js
das
adc
xor
xchg
lds
out
dec
push
mov
cmp
imul
in
mul
jg
pushf
or
pushf
pushl
push
jne
xchg
subb
xchg
mov
scas
cmpsl
xor
test
aas
jne
mov
push
icebp
cmpb
lods
push
and
dec
xchg
xchg
in
mov
fs
out
call
addb
scas
bound
cbtw
inc
inc
in
sub
aaa
leave
popf
ret
pop
add
das
xor
xor
xchg
loope
imul
or
mov
gs
dec
mov
outsl
ret
daa
or
sub
cmp
or
inc
xor
cmpsl
dec
aad
ret
mov
push
lret
mov
test
ljmp
dec
or
lea
add
clc
xorb
dec
inc
xchg
ja
mov
add
fldcw
int3
jnp
stos
push
rcrl
imul
mov
jns
addb
add
fsts
pop
mov
jecxz
pcmpgtb
pop
xchg
test
add
cmp
mov
fs
dec
pusha
scas
dec
mov
push
fists
push
pop
mov
inc
int3
cmp
mov
xorb
push
das
cmpsl
cmp
mov
ljmp
sub
dec
les
bound
je
testl
mov
inc
xchg
mov
lret
xchg
clc
addb
cs
mov
xchg
scas
mov
add
push
daa
out
mov
lret
xchg
fucomp
dec
mov
jb
push
andb
movsb
fmull
sub
jbe
movsl
sti
and
pushf
jecxz
mov
jecxz
inc
cmp
das
add
dec
sub
add
jecxz
pushf
mov
cmc
push
aaa
data16
das
jl
movsb
in
dec
lret
clc
lret
or
jb
stos
daa
jbe
int
fwait
iret
aam
out
addl
xorb
subl
push
div
cmp
outsl
mov
jnp
hlt
or
es
aam
hlt
xchg
and
sub
fs
pop
xchg
test
dec
out
aaa
xchg
in
or
add
sbb
out
push
cmpb
in
jae
daa
dec
inc
pop
test
shl
mov
or
pop
jae
aaa
ja
push
mov
add
or
mov
outsl
push
push
mov
adcb
inc
sahf
lods
mov
pop
mov
popa
les
int3
mov
inc
int
daa
cmpsl
mov
ljmp
cmp
mov
sbb
mov
subb
and
movsl
mov
sbb
add
xor
lret
xchg
sub
mov
loopne
or
into
scas
rol
outsb
mov
in
outsb
pusha
adc
outsb
mov
ljmp
enter
xor
loop
ds
dec
mov
fcmovb
inc
mov
mov
xor
std
push
sbb
cld
mov
mov
test
outsl
or
adc
lock
repnz
imul
stos
call
push
inc
int3
jnp
push
imul
mov
jp
jae
cld
push
mov
cmp
push
stos
sti
clc
inc
in
mov
push
push
sbb
out
mov
sahf
xor
fdivp
shlb
das
mov
push
sub
roll
and
mov
dec
mov
push
imul
mov
stos
jp
add
push
test
adc
adc
pop
inc
pusha
orb
int3
sub
in
or
mov
movb
cmpsl
inc
jnp
xor
add
add
cmp
adc
addl
aad
sarb
sbb
add
jne
test
jae
mov
stc
inc
dec
gs
jge
ret
lret
push
in
xchg
add
sbb
cmc
push
inc
dec
adc
push
add
mov
ret
sub
sbb
or
jge
jmp
aam
test
xchg
pop
movsb
mov
dec
roll
inc
ret
repnz
pop
add
jmp
pop
addb
xchg
fwait
in
adcl
das
pop
sbb
adc
loop
push
stos
add
je
mov
adc
ret
xchg
mov
cld
or
pop
rcll
mov
in
push
push
dec
lock
imul
mov
into
pop
lret
adc
xchg
shrb
andl
lock
jnp
pop
push
shrl
jns
rorb
ljmp
int3
leave
not
inc
loope
popa
mov
and
cmp
lea
repz
clc
xchg
ficompl
pop
mov
jecxz
ljmp
mov
imul
xlat
fs
imulb
dec
adc
imul
js
enter
orl
sbb
sbb
adc
iret
jmp
push
pop
cmp
pushf
cmpsl
jo
push
pop
fnstsw
dec
imul
ss
sbb
xor
andl
jg
cld
pop
test
jecxz
lds
imul
stos
into
int
jl
cli
and
cld
bound
ljmp
jecxz
cmpsb
sbb
jge
aaa
gs
lock
mov
addb
xchg
jns
jmp
and
pop
xor
push
and
push
cmpsl
xlat
movsl
shlb
fucomp
fs
add
fwait
push
mov
pmaxub
inc
fwait
sbb
inc
jecxz
and
dec
mov
mov
add
inc
sti
fidivl
lea
cltd
cmp
sub
lds
pop
or
xchg
mov
and
lods
mov
jge
cmp
movsl
push
mov
cmpl
ret
pop
lods
adcl
lcall
mov
scas
cmpsl
mov
roll
les
push
mov
dec
out
mov
and
xlat
add
cmp
mov
sub
cmpsl
push
mov
push
push
rol
add
les
or
xorl
repnz
xchg
sub
mov
inc
imul
sub
dec
nop
ret
xchg
orb
push
cmpsl
shll
push
jmp
xor
mov
aas
mov
xor
outsb
movsb
mov
das
test
lea
jp
and
jecxz
mov
loop
aam
lret
popa
out
das
orb
push
es
jl
xor
mov
push
sbb
pop
push
push
xchg
scas
mov
sbb
xor
daa
adc
xor
adc
xchg
mov
fcmovnbe
in
jne
popa
sbb
sbbl
sbbb
mov
loope
data16
popf
cli
mov
dec
jecxz
popf
das
jmp
fisubrs
adcl
xchg
inc
popf
out
mov
pop
test
loopne
sub
xchg
cmpsb
sti
inc
cs
mov
jno
ret
or
xor
mov
rcl
fs
xor
jmp
movb
push
rorb
stos
lock
add
add
sub
jle
mov
add
sub
dec
andl
test
enter
scas
es
mov
mov
pop
scas
mov
addl
into
movsl
or
stos
pushf
cltd
sbb
adcl
stos
gs
ret
mov
xor
cmovae
and
aaa
into
clc
mov
xor
mov
roll
imul
and
mov
repz
int
push
pop
lcall
popa
mov
xor
mov
pop
orl
and
repnz
das
inc
xchg
cld
add
enter
mov
popl
das
sbb
cmp
rclb
add
xchg
or
mov
mov
repnz
subl
mov
das
stc
out
sub
inc
mov
mov
cmpb
push
sti
inc
mov
in
jnp
cmc
dec
adc
aas
stos
aas
sub
movsl
sbb
addr16
stos
jbe
test
xor
lret
xor
sti
cmp
cmpsl
call
mov
dec
inc
sarb
mov
subl
loope
hlt
sbb
cmpsb
ljmp
lret
and
shrd
dec
lcall
mov
pop
or
pop
js
shlb
test
punpckhdq
mov
jge
lea
insl
mov
and
outsb
or
mov
leave
xor
inc
mov
into
shl
insb
lods
in
lret
cmc
dec
sub
cmpl
test
cmpsl
mov
subl
cmp
xor
pusha
push
jae
sbb
jbe
mov
mov
jmp
shrl
mov
cli
sub
btc
cmpsl
orb
hlt
cltd
add
inc
sbb
inc
adcb
push
inc
outsl
pop
lods
jnp
cmp
jle
fdivrl
hlt
sub
repnz
adc
repz
inc
mov
add
dec
icebp
int3
sbb
sub
and
adc
pop
sti
sahf
mov
jmp
mov
pop
xor
insl
lock
xlat
loop
repz
sbb
mov
jmp
pop
inc
out
je
stos
imul
dec
insb
add
mov
adc
mov
and
cmp
clc
inc
mov
xor
je
xchg
pushf
in
inc
insl
sbb
cmpsb
in
mov
xor
xchg
adc
or
adc
in
mov
test
pop
aaa
roll
jo
add
or
cmp
mov
mov
imul
aam
stos
orb
xchg
mov
or
add
in
fwait
inc
xor
pop
dec
aam
sbb
dec
xorb
inc
mov
or
scas
inc
dec
or
pop
ret
add
cmpsl
pop
in
xchg
mov
fs
test
mov
int3
xor
mov
incl
dec
scas
or
cwtl
jne
out
pop
sahf
push
stos
shrl
shrb
and
mov
xlat
hlt
jne
cmpsl
mov
jecxz
jne
imul
cmp
shlb
xchg
sbb
int3
xor
or
cmp
mov
ljmp
adcb
insb
testb
and
push
test
test
xchg
push
push
movhps
xchg
jl
jge
outsl
dec
cmp
inc
jae
dec
pop
jnp
adc
jge,pn
push
mov
in
in
inc
inc
push
mov
clc
add
or
imul
das
lods
dec
adc
or
rorl
cmp
xchg
fsubp
andb
mov
lods
lret
das
lods
outsb
xchg
es
or
cmpsb
jg
addb
jnp
pop
lahf
xchg
leave
mov
ljmp
in
cld
lods
sub
lea
mov
push
aaa
jne
adc
int
out
das
mov
cmpsl
xchg
rol
cmp
cmpb
hlt
cmpsl
adc
sbb
push
push
mov
inc
inc
pop
arpl
dec
dec
cmpsb
scas
dec
mov
add
scas
daa
lods
pusha
dec
inc
aaa
cs
dec
in
pop
cmc
push
lret
push
leave
push
ret
dec
jno
cwtl
adc
daa
hlt
out
xor
add
cmpsl
fdivl
jae
push
ljmp
pop
push
pop
frstor
lcall
lock
add
mov
jmp
cs
push
scas
mov
pop
les
ds
xchg
mov
dec
push
insb
in
add
mov
insb
lahf
rclb
lahf
inc
cmpsb
jmp
xchg
or
divb
lods
and
xor
inc
lods
mov
dec
xlat
dec
push
jns
push
push
mov
sti
movsl
or
dec
outsb
jbe
call
mov
popa
mov
sbb
and
xor
in
ja
or
push
mov
lret
es
inc
ss
mov
lret
lods
add
stos
jmp
xor
xchg
sub
xor
repnz
and
mov
mov
int3
jb
push
lock
mov
into
aam
mov
ds
mov
testl
cltd
push
and
add
aaa
out
push
cmc
shrl
dec
mov
push
push
maskmovq
testl
jge
mov
test
movb
and
addb
add
add
pop
shrl
dec
fsubs
and
mov
cltd
add
mov
loope
mov
push
cld
mov
fsub
xor
ja
out
sbb
out
les
jecxz
rcl
add
andl
or
mov
cmp
mov
lcall
push
push
or
mov
outsb
femms
mov
inc
xchg
insl
push
xor
in
test
mov
das
mov
xor
mov
mov
jo
xor
mov
test
sub
sub
add
dec
push
inc
push
iret
aas
add
mov
cmp
jnp
cs
in
sbb
mov
add
cmp
add
pop
idivl
mov
cmp
lahf
inc
dec
xchg
pop
mov
pop
or
scas
mov
dec
and
or
cwtl
push
es
pmaxsw
loope
cmp
or
daa
test
sub
lock
lret
movsb
jo
or
paddsw
rcrl
add
xor
je
lret
xchg
fcompl
add
loopne
inc
and
pop
inc
cmp
mov
int
sbb
inc
out
dec
shll
adc
fwait
pop
orb
cmp
mov
out
pop
mov
call
movb
aas
in
dec
push
cmpsl
mov
mov
outsb
pop
mov
cmpsl
arpl
sub
popf
ret
push
daa
xchg
sub
xlat
aas
and
pop
add
dec
inc
fcoml
sub
xchg
inc
dec
add
loopne
repz
popf
inc
mov
clc
outsb
lret
addr16
lcall
imul
push
arpl
loope
jae
stc
mov
sub
mov
loop
inc
ret
and
ret
mov
dec
leave
orb
enter
in
test
cwtl
lret
mov
jp
jg
pop
or
insb
add
lea
xorb
dec
sbb
lret
and
ret
cld
orb
adc
in
fxch
mov
ret
dec
add
movsl
cmp
scas
stos
sub
into
dec
or
mov
push
xchg
push
push
les
xchg
adcb
push
pop
dec
daa
pop
jae
or
xor
sub
add
les
inc
in
sbb
daa
push
ljmp
sbb
je
ss
xor
jp
call
add
in
andl
jo
sar
lods
mov
mov
and
xor
cmp
scas
pop
movsl
jmp
push
mov
in
xchg
dec
in
or
xchg
dec
jnp
adc
or
hlt
adc
jb
xor
test
jge
pop
cmpsl
or
add
cmp
cli
jae
movsl
adc
cmc
add
pushf
loopne
or
sub
or
loop
and
test
add
sbb
inc
pop
arpl
hlt
cmpsb
mov
out
mov
nop
push
sti
sbb
cmp
push
aad
imul
sbb
inc
cmp
or
lret
xchg
pop
aaa
jg
or
popf
or
sbb
add
adc
jae
aaa
in
cmp
pop
mov
xchg
shrl
and
xchg
lea
push
adc
jb
xchg
call
inc
cmpsl
test
aas
test
daa
mov
xchg
mov
xor
test
xor
mov
out
cmp
stc
xorb
mov
push
and
mov
push
xchg
push
pop
es
movsb
jo
outsb
mov
jle
insl
lahf
iret
inc
jmp
insb
std
push
sub
add
adc
and
jno
or
jne
sub
maskmovq
pop
mov
add
mov
jbe
cmp
mov
je
xchg
jnp
push
dec
dec
cmpsl
sbb
les
push
sub
add
pop
test
test
fildl
push
mov
mov
xchg
push
mov
jge
ja
mov
xor
sbb
mov
into
addl
sub
or
add
pop
xchg
mov
push
push
pop
ret
stc
fisttps
mov
push
dec
jne
out
sub
int3
sub
orl
pop
outsb
mov
or
mov
mov
inc
roll
sahf
mov
test
cmpsl
enter
xor
loop
push
sub
icebp
and
push
sub
insb
test
mov
jle
xor
lods
sub
inc
andl
daa
aad
icebp
lods
dec
fwait
mov
je
pop
xchg
jecxz
push
imul
inc
adc
dec
xor
jae
pusha
outsb
jmp
imul
push
das
cmpsb
sbb
lods
stos
cli
xchg
es
mov
sub
cltd
roll
sub
xor
lret
mov
add
shrl
jo
pop
gs
mov
mov
in
ja
int
xor
les
cmpsl
inc
dec
test
jecxz
es
aam
jns
jl
stc
sub
sbb
test
xcrypt-ctr
cmpsl
pop
enter
dec
cmp
xor
clc
inc
out
pusha
add
jne
push
push
ud0
das
arpl
or
add
xor
jo
cmpl
ds
das
data16
in
frstor
stc
xchg
jo
ljmp
mov
mov
aad
gs
scas
xchg
out
test
jne
sub
stos
push
nop
ret
lcall
and
mulb
ror
neg
loope
fwait
xor
cmpsl
inc
push
or
mov
fsubr
cld
mov
mov
lods
cli
pop
dec
mov
insb
xlat
lret
inc
sbb
dec
andl
mov
nop
or
lods
pop
dec
sbb
adc
and
sbbb
mov
cmp
add
mov
xor
ret
add
pushf
cld
ret
mov
or
aas
mov
lea
in
sbb
dec
dec
enter
sbb
movsl
mov
add
movsb
dec
lea
dec
sbb
xchg
gs
or
stc
scas
or
loop
adc
and
popl
adc
mov
pop
movsb
jae
xor
mov
lds
test
pop
mov
fwait
xorl
or
mov
cmpsl
js
push
and
inc
xchg
fst
or
cmpsb
xchg
aaa
lea
fdivl
addl
or
movsb
out
push
lret
adc
adc
push
xchg
xchg
aam
sub
xlat
inc
dec
cmc
jae
leave
shl
lds
iret
adcb
inc
sub
xor
mov
and
sbb
scas
mov
xchg
loopne
testl
jbe
pop
add
test
fadd
mov
jmp
test
mov
mov
stos
mov
sti
mov
sbb
sahf
add
orl
mov
xchg
idiv
push
mov
mov
xchg
jnp
inc
leave
movsl
dec
aas
jbe
add
aaa
clc
imul
mov
leave
cmpsl
aad
movsb
mov
push
push
loop
ds
xchg
mov
or
into
cmp
arpl
push
in
es
dec
inc
cmc
fwait
rorl
cmpsl
and
lea
lea
or
scas
push
shll
pushf
add
aam
rorb
mov
xchg
inc
xor
pop
scas
movsl
add
movsb
sbb
push
or
mov
subb
movsb
aaa
imul
xor
aam
push
xor
mov
push
and
xor
sti
mov
or
loop
sbb
pop
daa
les
out
xchg
rol
xchg
xor
cld
sub
cmp
sbb
inc
xor
xchg
mov
addr16
movb
add
mov
movsb
pop
lahf
sub
jnp
sub
stc
add
sub
std
or
push
pop
xor
test
addl
mov
xor
ret
cmpsl
dec
mov
test
xor
xchg
sub
mov
jg
andl
mov
push
xor
push
inc
and
and
imul
mov
loop
sbb
cmp
push
gs
push
sbb
cmpsl
xor
adc
jae
inc
lret
push
inc
and
mov
imul
jge
les
arpl
lea
insb
ret
xor
outsl
mov
insl
cmpsl
mov
cmpsl
imul
mov
lds
mov
xor
jne
lea
inc
rolb
dec
addl
test
inc
mov
ret
add
cmp
outsb
scas
aaa
ss
or
jo
mov
push
push
in
mov
cld
add
jno
std
sub
xor
mov
mov
or
adc
push
jb
adc
movsl
mov
or
push
dec
mov
push
inc
aam
sub
mov
sub
push
cmp
sbb
mov
dec
out
addb
mov
pop
ret
pop
push
and
pop
dec
push
mov
mov
or
stos
sbb
gs
out
and
mov
pop
movsb
lea
jl
dec
mov
jo
sub
cmp
ja
mov
mov
ds
lods
inc
and
mov
fs
or
cmpb
or
aaa
je
add
popa
pop
nop
jecxz
aaa
or
or
in
add
ds
repz
adc
pop
jb
adc
sbbb
gs
les
scas
cmpsl
jne
xchg
int
xor
cmc
mov
sbb
movl
push
mov
adc
repz
pop
inc
mov
mov
stos
cmp
xchg
xchg
mov
sti
aam
inc
pop
mov
test
inc
mov
or
in
inc
cmpsl
insl
mov
push
movsl
enter
or
push
add
and
lcall
testl
lcall
adc
inc
pop
inc
jg
lret
cs
adc
jb
in
js
push
js
adc
xchg
clc
sbb
cld
repnz
scas
mov
test
pop
ret
dec
pop
inc
push
add
lods
sbbl
mov
xchg
es
push
sbb
jne
in
sub
mov
mov
jae
jno
cld
inc
fsubr
or
pop
push
xor
xchg
repnz
mov
mov
lods
inc
enter
push
dec
cmp
movb
inc
cli
lock
pop
testl
mov
lea
mov
and
movsl
xchg
bound
in
cmp
cmp
adcl
inc
cmp
jae
adc
int3
mov
fcmovne
daa
lret
mov
sub
ja
inc
mov
mov
mov
dec
xchg
xlat
add
and
push
jge
fisttpll
or
xor
pushf
add
outsb
fwait
add
dec
rolb
mov
push
xorb
nop
mov
push
cmpb
outsl
subb
mov
sub
lods
in
int3
enter
mov
and
cmp
cmpsl
pop
fisubrs
mov
es
pop
mov
adc
xchg
es
outsl
xor
inc
or
xor
xchg
xchg
jg
adc
cmp
mov
movsl
fnstcw
pop
push
test
and
xor
lret
jne
insl
aam
subl
rolb
lea
lock
sub
lods
and
or
mov
mov
push
cmp
push
addr16
inc
mov
or
mov
xchg
jmp
sub
mov
xchg
pop
dec
cmp
icebp
es
xor
add
sub
mov
insb
aas
js
sub
pop
int3
out
push
add
push
mov
add
mov
fildl
jmp
xchg
jecxz
subb
push
pusha
or
mov
andl
or
aaa
push
cld
push
sbb
stos
jb
mov
push
add
jecxz
aam
mov
imul
mov
add
rcl
add
cmpb
add
push
imull
lds
add
jae
cltd
xor
ja
jmp
repz
shrb
mov
add
cmpb
enter
mov
sub
and
out
push
jle
loopne
in
movl
out
test
imul
inc
xchg
iret
sub
dec
mov
dec
les
daa
dec
iret
rcl
xchg
cmpsl
popf
adc
in
mov
lea
xchg
mov
in
int3
loop
ja
daa
mov
inc
rclb
pop
shrb
ret
push
aaa
in
mov
jg
in
jb
mov
loopne
push
adc
iret
js
repz
icebp
shl
sub
xor
loopne
pop
fwait
mov
xchg
test
inc
mov
dec
imul
push
mov
rorb
pop
push
and
nop
xor
push
stos
pop
and
push
sub
int3
and
and
sub
push
mov
idivb
and
data16
add
testl
and
jl
stc
jecxz
movsb
push
dec
outsb
xorb
mov
push
mov
pop
cwtl
cli
incb
jmp
adc
js
mov
repz
sahf
xorl
int3
rcrl
mov
sarl
mov
pop
sub
cmpsl
gs
mov
sbb
jp
shlb
mov
imul
les
out
add
or
mov
inc
xor
iret
mov
pop
aad
jle
cmpsb
adc
lret
dec
lds
orb
or
insl
out
sahf
mov
les
adc
lock
jmp
cmpl
jb
mov
je
and
stos
or
mov
lods
mov
push
ret
iret
push
cld
cmc
sbb
mov
repz
cmp
cmp
test
mov
add
fsubr
clc
ds
outsl
daa
mov
cmpsb
aam
fdivrl
sbb
jb
mov
xor
pushf
dec
rorl
push
divb
outsb
repnz
sub
cmp
pop
into
adcl
xor
je
lods
shrb
mov
loope
dec
mov
adc
fs
dec
adc
push
mov
mov
sarl
pop
outsl
push
ret
xorl
xchg
imul
lods
fcoml
jp
popf
add
jecxz
movsl
and
in
or
jp
in
flds
xchg
inc
ds
mov
imul
int3
mov
jg
mov
xor
mov
or
ret
xchg
mov
and
int3
cmc
xchg
cld
mov
stc
inc
fwait
jmp
sarb
mov
fsubrl
fs
add
je
jmp
dec
or
fidivrs
dec
xor
pop
mov
aaa
das
ljmp
into
bswap
in
sti
lods
cmp
scas
fs
or
push
sub
lsl
daa
push
hlt
pop
mov
rcl
sub
pop
repnz
in
add
mov
sub
cmp
cltd
xor
je
outsb
in
sub
testb
stos
lea
xor
addr16
cwtl
mov
pusha
add
inc
lret
or
dec
aad
mov
xor
jnp
fdivs
ret
jae
mov
xor
ljmp
sub
rolb
sub
inc
subl
int3
push
xchg
loope
or
mov
xor
push
add
jbe
inc
sbb
mov
add
pusha
cli
dec
in
mov
xor
int3
sub
dec
or
mov
sub
stos
cltd
insl
sbbb
cmpsb
xorl
pop
gs
or
outsb
in
popa
fs
or
scas
mov
repz
sbb
cmp
sbb
jl
add
inc
adc
mov
subb
push
mov
push
push
lret
sarb
cmpsb
pushf
xchg
scas
lds
cmpl
imul
xlat
imul
pop
or
adc
inc
ja
ret
ficompl
add
push
into
in
js
jge
loope
cmpl
push
inc
lods
lods
add
cmp
inc
add
je
outsb
aas
es
test
fcomi
pop
and
rsqrtps
das
xchg
lret
aad
out
sbb
cld
stos
stc
mov
jp
cmpsl
cs
mov
add
and
xchg
leave
hlt
mov
add
mov
leave
lods
push
mov
inc
push
popf
pop
js
mov
push
pop
sub
ds
add
popf
into
lret
sbb
mov
sti
bound
outsl
cmp
jnp
xor
iret
movsl
inc
dec
cld
lcall
stc
rol
cli
outsb
mov
mov
mov
js
cmp
or
fists
or
negl
push
push
lock
jle
push
test
inc
xor
mov
xchg
aaa
cmpsl
mov
sar
test
stos
cmp
aas
dec
leave
add
cli
fidivrl
push
lcall
lret
dec
mov
mov
in
dec
dec
mov
ret
mov
mov
and
lods
testl
mull
push
repz
scas
xor
ret
jne
in
gs
xchg
jne
fisubs
inc
and
aam
mov
ret
add
dec
mov
cmpsl
test
sub
fisttps
push
mov
mov
lret
ret
push
xchg
jne
add
mov
mov
pop
adc
xor
out
mov
mov
push
cmp
xor
add
inc
mov
mov
bound
scas
xor
mov
and
xchg
inc
repz
inc
adc
pop
ret
pusha
test
xchg
dec
imul
and
fmull
scas
gs
mov
jnp
cli
cmp
push
popa
popf
cmp
ja
lcall
rcrl
mov
arpl
in
cltd
jl
xchg
mov
add
mov
sub
shlb
subl
pushw
pop
orl
push
inc
loope
add
ja
movsl
xchg
push
jmp
lret
inc
mov
lret
add
shll
loopne
addr16
cmpsl
cmp
mov
movsl
jo
mov
cmp
and
sub
and
add
cltd
jns
jno
sub
adc
rclb
out
faddl
inc
pop
xor
and
and
shrl
rorb
shlb
cld
test
fcoml
mov
and
flds
mov
inc
jge
add
cmp
mov
lods
pop
mov
loop
pop
or
lret
in
sbb
and
add
xchg
into
test
or
inc
mov
mov
mov
jp
xchg
push
arpl
gs
dec
andb
stc
jg
jl
sbbb
mov
mov
pushf
dec
pop
push
or
test
es
outsl
cmp
xor
cmpsb
in
push
pop
test
mov
mov
push
mov
or
push
sbb
cli
inc
or
int
xor
pushf
loop
insb
or
cmpsb
or
jno
test
xchg
push
enter
loop
inc
mov
sbb
outsl
int
fsubrs
fsubrl
add
out
fstpt
gs
mov
adcb
sbb
or
push
inc
rol
sub
xor
push
testb
testl
out
mov
sub
roll
xor
inc
xchg
add
je
ret
add
push
jecxz
mov
add
cmpsl
lods
nop
jmp
lcall
fisttpl
sub
pop
and
scas
bound
sbb
jb
mov
dec
mov
lock
sub
adc
add
andb
aas
add
dec
andl
jecxz
cmpb
push
imul
dec
inc
cmp
movl
jmp
push
stos
push
mov
fwait
imul
loop
xchg
inc
xchg
stc
arpl
or
adc
jae
hlt
test
lods
mov
mov
stos
xchg
adcl
enter
push
aam
out
shll
mov
xchg
push
cwtl
scas
xor
dec
ror
mov
push
or
cld
clc
jg
repnz
ljmp
mov
fisttpll
mov
scas
rclb
repnz
nop
stos
and
fldcw
or
leave
sar
mov
hlt
sbb
sub
add
mov
jge
jp
arpl
mov
leave
ret
aas
push
lds
cmp
pop
sub
cmp
ljmp
inc
jl
xor
xor
movsl
int3
xchg
sub
pusha
xor
xor
fs
push
outsl
xlat
loop
mov
pusha
and
push
sbb
inc
addb
jmp
mov
add
sbb
lods
cmpsl
mov
push
fwait
xchg
jbe
mov
jge
mov
sub
cmp
movsb
xchg
jecxz,pt
add
repz
shlb
fnstsw
testl
mov
and
fiadds
mov
jmp
ljmp
mov
repz
cmpsb
scas
add
das
push
mov
push
out
in
cmp
js
xchg
divl
es
push
ffreep
add
push
repz
outsb
xor
std
or
sarb
and
mov
sub
pop
fistpl
mov
jae
ss
or
dec
push
ja
dec
pop
mov
mov
xor
dec
aaa
mov
mov
dec
repz
adc
push
mov
pop
inc
repnz
xor
in
or
mov
and
or
add
mov
stos
push
stos
rolb
mov
sti
sub
pop
addr16
push
filds
pop
xchg
mov
outsb
jg
fs
fsubs
mull
test
cmpsl
stc
cmp
invd
jl
jo
shll
cs
jmp
cmpsl
mov
idivb
xchg
mov
int3
cmp
loopne
in
jne
add
xchg
test
lcall
aaa
int3
leave
sbb
and
ret
xchg
jmp
mov
cmp
xchg
shll
out
xchg
test
lea
gs
lret
andb
repnz
adc
cmp
mov
call
decb
sarb
test
mov
decb
pop
aaa
mov
cwtl
and
mov
iret
xchg
sub
push
xor
cs
push
in
jecxz
xchg
jp
dec
xor
icebp
bound
es
repnz
and
dec
lret
ljmp
outsb
sahf
push
sarb
jbe
xchg
mov
dec
pop
mov
movsl
add
push
or
push
xchg
lea
sub
lcall
or
scas
and
xchg
scas
repnz
mov
aam
add
icebp
or
mov
cs
arpl
nop
jl
or
cmpsl
pushf
mov
repz
in
push
bound
ljmp
inc
push
iret
xchg
add
sub
push
mov
lods
xchg
add
add
js
jnp
mov
fistpl
or
pop
jecxz
movsl
fsubrs
out
scas
clc
mov
das
xchg
fsubs
mov
lods
adc
std
adc
pop
clc
movb
mov
jmp
or
adc
add
and
mov
ficompl
xchg
push
push
addr16
push
scas
loope
pop
push
jbe
sbbb
sarb
test
mov
adc
sahf
dec
mov
mov
mov
ljmp
aas
xor
or
ja
leave
and
int3
jnp
mov
mov
mov
sbb
push
jo
sub
test
and
mov
sahf
mov
xchg
neg
jno
scas
aas
stos
xchg
or
mov
scas
ja
shr
jecxz
inc
std
fs
arpl
pop
cltd
js
jmp
mov
mov
push
pop
mov
or
pop
inc
stos
mov
inc
mov
addb
loopne
sub
ret
cmp
dec
sub
cmp
int3
sub
fisttpl
or
mov
xor
clc
adc
sarb
shrb
ret
jl
or
addl
jne
outsl
les
andl
mov
cmp
xchg
fildll
mov
cmp
hlt
sbb
cmp
daa
bound
imul
xchg
mov
das
bound
ljmp
outsb
dec
shll
push
insl
adc
bound
repnz
ja
sub
and
mov
aad
bound
addl
in
pop
add
lret
shl
adc
div
ljmp
clc
push
repz
ret
mov
add
or
test
jne
xchg
outsb
js
clc
inc
addl
sub
xchg
lods
movsl
test
js
aas
add
icebp
dec
mov
lds
mov
mull
sbbb
xor
shlb
cmpsl
sti
in
es
jl
insl
mov
leave
and
or
cmp
or
cmp
cmp
and
lret
pop
and
inc
iret
lods
mov
dec
ret
out
aas
int
testl
mov
ficomps
es
push
add
jbe
lret
mov
loop
dec
clc
and
scas
lcall
push
inc
mov
rolb
add
push
and
sbb
stos
hlt
lahf
mov
je
or
fisttpl
xor
inc
jno
repnz
sbb
cmp
mov
jecxz
dec
cli
add
adc
adcb
xchg
mov
bound
ss
ret
jb
adc
mov
clc
jmp
dec
pop
ja
stos
test
or
mov
pop
push
popf
out
adc
mov
bound
enter
lret
cmp
xor
sbb
das
jmp
ror
push
pushf
dec
mov
cmp
shll
stc
out
fmull
mov
cmpsl
loop,pn
mov
mov
add
cltd
int3
mov
dec
push
mov
repz
std
stos
ja
popa
xor
into
mov
xor
pusha
push
mov
cmp
xchg
push
jg,pt
int3
mul
std
or
push
or
xor
aaa
mov
mov
pop
push
fildl
addb
dec
ljmp
addb
dec
push
cmp
cmpsl
mov
mov
cli
dec
repz
mov
mov
sbb
mov
fdivrl
inc
xor
mov
insb
rcrl
add
cmc
mov
sar
das
or
push
dec
lret
daa
xor
mov
xor
add
mov
push
dec
pusha
cmp
sub
je
dec
fnstcw
mov
adcl
push
and
jmp
inc
dec
ret
mov
sub
mov
ss
test
mov
stos
cmpsl
in
cmp
pushf
out
insb
push
mov
dec
insb
xchg
sub
jns
bound
mov
shr
mov
out
ret
mov
ljmp
inc
sti
loop
dec
push
mov
loop
pop
shrl
pop
or
and
cltd
clc
pushf
push
movsl
and
pop
push
add
mov
ss
cmp
mov
or
mov
sbb
pop
jb
xlat
or
mov
mov
or
in
and
and
adc
pop
xor
arpl
imul
fldenv
cmpsl
cmp
add
filds
gs
repz
or
cmpsl
imul
out
adc
pop
mov
ja
and
mov
push
pop
outsb
movb
sbb
add
mov
jae
call
inc
and
xchg
js
mov
pop
outsl
inc
add
pop
add
jno
add
dec
or
sub
dec
xor
jle
aam
orb
jecxz
mov
mov
stos
push
outsl
shrb
arpl
into
mov
pop
test
movsb
ret
sub
pop
mov
adc
decl
popl
mov
loopne
inc
xor
psllq
loope
mov
dec
popa
fildll
aam
cltd
cs
pop
repnz
jl
dec
bsf
mov
fs
xor
cmp
arpl
cmpsl
pop
inc
loope
cmpsl
jle
insb
fdivrl
aaa
jb
add
jle
mov
pop
stos
idivb
test
popa
cmp
and
inc
and
add
add
add
pop
cmpsl
fs
xor
mov
fbstp
rcll
xchg
lds
ret
ja
das
pop
fisubrl
xchg
push
pop
dec
and
sbbb
pop
sub
rolb
push
push
jb
mov
insl
ljmp
repnz
mov
adc
push
push
insb
or
andl
rol
push
mov
inc
addl
inc
ljmp
sub
test
loope
xchg
inc
loop
es
xchg
andl
ret
mov
stos
icebp
sub
cmp
outsl
adc
lods
adc
add
cmp
mov
fdivs
ret
sub
scas
stos
mov
in
add
inc
dec
ret
mov
pop
pop
mov
mov
cmc
jg
imul
cli
fstps
pop
add
sbb
fwait
fs
repz
add
popf
int
ljmp
add
dec
push
shl
adc
push
cmp
shlb
int
push
rcrb
push
sub
int3
mov
loopne
jecxz
and
xor
xchg
mov
pop
or
jecxz
xchg
push
nop
cmp
aas
mov
inc
aam
dec
mov
pushf
roll
mov
rcll
jle
xlat
inc
push
fs
cmp
inc
adc
push
call
add
push
sub
adc
in
add
pop
shll
fistl
addb
mov
roll
icebp
mov
in
out
push
push
push
push
sbb
es
add
ljmp
pop
xor
out
int3
ds
jecxz
repz
ja
cli
mov
lcall
adcl
cmc
dec
mov
mov
cmp
jecxz
and
jecxz
ret
sub
mov
and
mov
xlat
fildl
in
aam
inc
jo
loope
lret
mov
stc
jle
or
in
jbe
add
ret
xorb
repz
or
mov
mov
lea
inc
sub
xor
loope
sbb
cmpsl
cmp
fildl
mull
xchg
aas
rorb
out
in
in
je
in
outsb
mov
mov
push
popa
rorb
into
imul
push
das
adc
lcall
or
imul
xor
mov
in
nop
fdiv
aaa
xchg
cmpsl
push
call
add
jne
mov
mov
add
add
xor
idivl
xchg
dec
loop
push
pop
out
outsl
outsl
insl
jns
rorl
shrl
cmp
pop
fscale
or
and
jo
sub
int
jns
lret
loopne
subb
cmova
das
cmp
mov
push
repz
cli
xchg
jae
rorb
icebp
push
xor
jnp
subl
int
movsl
fsubr
cmc
push
insl
mov
sub
jae
adc
jae
aad
ds
mov
loope
mov
cmp
mov
aaa
andl
cmpsb
insl
rcl
fisttpll
push
movsl
jo
mov
jae
into
mov
cmp
jo
mov
sbb
mov
xor
and
jl
jns
scas
test
cli
sbb
push
jmp
shrb
xchg
xchg
mov
pop
mov
push
dec
imul
iret
add
orb
popa
and
fcoml
loope
loopne
mov
dec
shl
and
pop
xor
andb
pop
ja
sub
xchg
lcall
adc
push
mov
xor
xchg
fs
mov
scas
xorb
add
or
in
mov
je
filds
jg
xchg
mov
sti
sbb
shl
scas
add
mov
pop
cmpsb
pop
jne
xchg
push
outsl
sbb
xchg
clc
inc
xorl
mov
dec
sub
int
rorb
xchg
inc
loop
in
cltd
int3
push
les
push
push
pushf
adc
outsb
mov
fs
pop
xchg
aaa
add
mov
in
mov
mov
add
outsb
mov
sahf
test
clc
mov
mov
add
adc
and
xor
add
ret
pushf
aaa
adc
mov
jg
xchg
repnz
mov
add
xlat
xchg
lret
mov
lret
andl
xor
mov
cli
loopne
jmp
inc
in
xchg
les
dec
sbb
pop
loop
dec
mov
or
jge
mov
adc
bound
xor
dec
loop
add
dec
xchg
or
dec
cmpsl
lea
adc
xchg
push
orb
xorb
add
leave
popf
insl
ret
std
sub
sbb
lock
insl
inc
addb
xchg
lretw
out
push
add
xchg
and
lods
jecxz
aas
sub
mov
out
jns
add
movsb
scas
xchg
xchg
inc
aam
pushf
push
les
jmp
xchg
test
or
dec
push
mov
inc
ss
push
in
jne
scas
mov
xchg
je
sub
push
cmc
ljmp
addl
sbb
scas
sbb
jecxz
push
pop
mov
data16
or
clc
lahf
dec
xlat
popl
adc
pop
mov
rcr
aas
cwtl
call
in
mov
mov
push
stos
mov
shl
aas
ret
mov
das
lcall
dec
push
push
mov
popf
mov
rclb
shl
out
mov
outsb
movq
icebp
test
out
fsubrl
mov
gs
mov
add
xor
push
out
insb
cli
imul
outsb
mov
inc
les
sub
int3
or
sbb
ja
sub
jns
mov
sbb
ja
outsb
push
test
lock
scas
aas
xchg
push
outsb
incb
movsb
scas
addr16
test
lret
lcall
movsl
rorl
gs
jg
mov
xorl
jo
xchg
xchg
xor
rorl
jns
dec
inc
cmp
movsl
ljmp
data16
sbb
and
push
popa
and
sbbl
scas
sub
faddl
and
movsl
cmp
pushf
xchg
adc
or
mov
sbbb
push
ret
jnp
mov
mov
dec
test
aam
ljmp
xchg
add
mov
incl
scas
adc
cmpsb
inc
add
gs
jae
inc
or
sub
sbb
mov
xor
sbb
mov
push
add
pusha
movsl
mov
roll
push
or
fwait
xchg
leave
add
dec
in
movsl
jecxz
push
lock
mov
mov
xor
std
ss
lods
add
cmp
push
cli
sub
aaa
add
dec
add
andb
rorl
iret
fiaddl
mov
bound
lods
cmpsb
lcall
addr16
in
testb
or
orl
test
icebp
xchg
jnp
jae
stc
jp
xchg
xor
stos
gs
push
and
add
mov
ret
aad
stos
addl
rorl
mov
mov
cld
subl
mov
add
mov
rcll
adc
jne
out
fs
inc
mov
ret
fisttpll
push
sti
fnsave
andb
fsubl
in
fisubrl
mov
mov
push
push
add
jmp
lds
sqrtps
jno
rcrl
std
mov
xchg
movl
pop
jnp
mov
inc
push
mov
insb
mov
es
mov
ds
cmp
imul
ret
jnp
sbb
cmp
push
stos
push
lret
cli
in
data16
push
xor
imul
lea
or
str
mov
daa
push
int
aaa
mov
es
sub
sub
shrb
mov
adc
shl
scas
ret
clc
rol
mov
mov
or
adc
daa
aaa
in
ret
inc
pop
stos
jecxz
xchg
push
xor
lods
lfs
jge
and
cmpsb
adc
mov
sub
sub
movsl
jno
cmpsb
adc
or
mov
mov
pop
mov
int3
imul
aas
cwtl
cmovae
je
xor
iret
mov
pop
jmp
data16
push
stos
push
orb
in
or
mov
cmp
sarl
ret
mov
add
or
xchg
aas
mov
aas
mov
aas
jo
dec
xorb
or
hlt
mov
iret
xorb
add
pop
mov
push
mov
jmp
and
mov
jnp
movsb
lods
add
jb
xchg
sti
sbb
mov
ss
and
mov
insb
adc
stos
repz
test
daa
imul
vcvtdq2pd
jo
call
insl
xor
push
cmp
data16
fnstcw
clc
cmpsl
pop
jne
ja
lods
xor
mov
bound
and
xchg
xor
jo
mov
das
adcl
or
test
cs
add
push
sub
xchg
mov
jecxz
mov
pop
stos
adc
sahf
cmp
jne
add
push
les
inc
dec
push
add
adc
cltd
inc
cmp
testb
testb
jmp
scas
mulb
in
cld
add
mov
inc
bound
pop
mov
bound
pusha
and
add
mov
mul
sbb
pop
aam
cmpsl
sub
fdivrs
inc
addr16
shrb
cs
dec
adc
mov
or
stos
dec
sub
or
aam
rolb
lods
and
stos
adcl
fcomps
cli
fwait
mov
stc
outsb
xor
lret
movsl
cs
pop
pop
and
imul
or
jno
popf
mov
adc
add
push
xchg
and
cs
push
loop
iret
inc
shll
add
cli
mov
mov
and
gs
add
cmc
popa
or
add
or
stos
add
loope
movl
dec
sub
enter
cmp
repnz
imul
icebp
es
into
xchg
imul
scas
add
xchg
movsb
inc
stos
xchg
cwtl
and
and
mov
push
xchg
push
jmp
int3
pushf
mov
in
add
inc
data16
ss
dec
in
cmp
orl
cmc
push
fdivrl
cmp
inc
in
js
adc
cld
scas
inc
mov
mov
movsb
arpl
xor
push
stos
aam
inc
add
incb
sub
push
jnp
xor
lret
rolb
inc
mov
shr
cli
or
mov
ret
arpl
out
pop
aas
jnp,pn
dec
lock
or
mov
mov
imul
es
jbe
popa
ficomps
pop
mov
push
pusha
dec
int
and
imul
mov
jns
imul
pop
repnz
insb
in
fmuls
and
xor
mov
bound
test
cmpsl
dec
stos
inc
ret
mov
icebp
push
lahf
fcmove
xor
dec
outsb
and
das
lret
push
ret
fwait
lcall
daa
das
in
add
rorb
xlat
add
adc
xor
adc
js
xchg
loopne
stos
add
push
add
repnz
xor
test
and
xchg
lock
rorb
xor
out
mov
xor
or
jo
insl
hlt
push
jae
out
mov
or
push
mov
lds
cmc
les
orb
leave
cmp
or
lret
lods
hlt
movsl
fsubl
xchg
jno
int3
and
push
cs
sub
lods
sti
xlat
ljmp
push
xchg
cld
bound
cmpsb
mov
orb
dec
and
add
in
mov
inc
fdivrs
push
addr16
ror
push
adc
outsb
sbb
mov
sub
sub
aam
rcrl
cmp
mov
and
outsl
roll
mov
sub
mov
mov
std
mov
and
inc
and
pushf
or
push
add
mov
imul
mov
aam
mov
xor
dec
pushf
andl
pop
mov
push
lods
jae
shlb
mulb
sub
fcoml
movsl
ret
mov
test
sbb
push
lock
cld
cld
add
pusha
jnp
scas
dec
and
lret
adc
lock
add
xor
imulb
frstor
mov
bound
out
out
mov
lret
sub
stos
aaa
mov
test
outsb
shlb
inc
int3
add
les
add
mov
add
testl
jnp
arpl
aad
or
pushf
mov
jp
cmp
cmp
push
test
testl
dec
mov
mov
add
add
ret
aas
jbe
xchg
pusha
shll
sub
pop
fdivrl
pop
fldl
loop
ret
int3
fldenv
sub
fcmovnu
stos
loop
push
inc
jecxz
mov
cwtl
orb
ret
sbb
add
fwait
cmpsb
mov
add
test
out
mov
aam
fmul
movsb
push
add
stos
addl
arpl
dec
and
jecxz
push
sbb
mov
xchg
int3
and
lea
push
fdivrs
fsubrs
daa
movb
mov
cmp
inc
in
cmp
push
mov
mov
mov
mov
and
std
andnps
pop
test
test
imul
adc
cmpsl
cmpsl
cmp
dec
jl
xchg
adc
aad
xchg
pop
mov
add
xchg
sub
jnp
xor
mul
cmpsl
xor
nop
outsl
movsb
jmp
adc
out
popl
in
mov
fldl
sub
mov
sub
bound
xchg
adc
mov
mov
adcl
adc
sub
xor
ljmp
mov
mov
loop
subb
test
jmp
mov
gs
movsb
mov
addr16
mov
jbe
cli
ja
mov
add
in
outsb
xchg
aas
sbb
enter
mov
push
mov
mov
push
xchg
xor
xchg
xchg
dec
and
pop
cmp
sbb
mov
subl
outsl
repz
xlat
cmpsl
movsb
jno
pusha
push
add
dec
jge
pop
inc
and
mov
push
cmpsb
rolb
test
repnz
xchg
pop
mov
clc
out
pop
in
xorl
xchg
mov
xchg
repz
xchg
mov
or
dec
and
hlt
test
push
outsb
mov
pusha
xchg
or
mov
fs
out
cmc
movsl
call
sbb
and
add
adc
lock
and
bound
and
cmpl
or
loop
pop
mov
out
push
mov
mov
add
in
lods
add
mov
add
arpl
aas
test
rcrb
and
enter
mov
mov
jg
sub
or
stos
rclb
cld
push
inc
movsl
adc
stos
movsb
lods
stos
mov
repnz
in
push
sbb
push
add
and
and
dec
inc
jnp
sub
pop
push
call
outsb
dec
mov
cld
pop
mov
mov
add
lods
out
sub
push
fsubrp
sub
dec
imul
inc
movsb
dec
push
push
mov
lahf
xchg
loop
sahf
mov
loopne
mov
in
cwtl
add
and
orl
adc
fstpt
pop
imull
test
lcall
popa
sub
sbb
sahf
xchg
stc
push
or
jmp
mov
push
rolb
and
xor
rclb
loopne
popa
xchg
pop
mov
daa
or
icebp
push
or
push
xor
shl
inc
jp
or
into
mov
sub
mov
mulb
data16
ja
ret
test
sbb
mov
popa
ret
mov
mov
gs
xor
jb
inc
xchg
push
shll
jp
loopne
xchg
mov
add
or
and
mov
test
leave
ret
cmc
aam
testb
enter
adc
add
add
faddl
jle
int3
jmp
jnp
sbb
call
xchg
pop
gs
xchg
mov
aas
dec
inc
int
stos
push
inc
push
mov
mov
adcb
xor
push
cld
cmp
inc
outsl
jne
adc
lahf
mov
out
mov
test
pop
mov
in
shll
push
push
outsl
jnp
dec
add
push
in
orb
push
leave
in
shrl
push
scas
sub
loopne
mov
mov
add
mov
insl
loope
lcall
ror
movsb
pop
mov
pop
add
add
push
jbe
jae
stos
xchg
mov
jmp
xor
stos
leave
daa
xchg
clc
out
mov
enter
hlt
sub
jmp
mov
aaa
inc
daa
lds
ret
sub
mov
enter
push
mov
scas
mov
xor
sub
mov
cmpsl
ret
adc
stos
mov
push
and
mov
xchg
cmp
repnz
mov
jecxz
dec
jle
xchg
outsl
arpl
out
lods
or
rol
mov
add
mov
bound
pop
adc
repnz
fadd
mov
pop
and
test
in
add
and
stos
popa
sbb
xlat
outsb
mov
mov
int3
outsl
andb
in
xchg
std
nop
es
ljmp
push
sarl
xor
mov
cmpsb
adc
mov
shrl
loopne
aaa
dec
mov
aam
cmp
xchg
add
paddd
subb
in
and
shlb
inc
clc
loope
cmpsl
mov
or
shll
mov
mov
mov
arpl
mov
bound
pop
fldcw
lcall
fisttpl
or
aaa
arpl
stc
int3
cmp
sbb
in
pop
in
push
mov
in
int3
movsl
mov
cmp
cmpsl
xor
xchg
cltd
add
lock
sbb
mov
cs
add
push
push
xchg
inc
roll
xor
fimull
bound
push
lods
or
mov
sbb
repz
and
enter
xchg
lret
mov
in
cwtl
loope
adc
enter
jmp
xchg
imul
aaa
and
xchg
push
mov
cli
int3
pop
adc
xchg
sarb
pop
xchg
pop
out
subl
xor
xchg
jnp
into
lods
loop
ss
popa
mov
adc
mov
pop
mov
out
ror
mov
mov
ljmp
leave
andl
mov
xchg
mov
xchg
cmp
test
call
dec
xchg
imul
mov
pop
mov
das
scas
dec
pop
dec
sarb
dec
mov
dec
inc
ja
or
jmp
xlat
push
xchg
js
iret
xchg
sahf
adc
faddl
cmpsl
push
xchg
pop
jmp
inc
sub
je
jbe
jne
cs
enter
test
cmp
sbb
push
hlt
loopne
inc
orl
mov
pop
or
mov
xchg
sub
lret
notl
push
imul
ja
push
lret
dec
repz
push
ja
imul
mov
or
mov
add
jl
js
loopne
and
add
push
jnp
push
in
cmp
and
mov
jmp
dec
cmp
and
shll
or
aam
hlt
out
pop
sahf
iret
mov
jnp
or
jnp
cmc
push
mov
xorl
xor
add
sub
dec
push
mov
mov
or
xchg
mov
mov
stc
and
xchg
mov
adc
add
in
xchg
loope
or
mov
sahf
sbb
mov
enter
rorl
dec
sub
scas
jnp
add
scas
push
das
pop
enter
xlat
sub
mov
pop
cli
mov
movsb
cmpsb
add
pop
shll
or
dec
movsl
shlb
inc
add
stos
les
lahf
add
xchg
add
lods
repz
and
xchg
out
ljmp
test
adc
imul
pushf
mov
push
inc
fistl
or
ret
push
test
aaa
lea
cmpsl
movsl
lcall
movsb
cmpsl
nop
mov
int3
stos
dec
mov
mov
repz
push
sbb
push
add
dec
mov
stos
cmpsl
mov
iret
aad
mov
int
push
and
mov
cmp
imul
dec
ds
mov
cmp
leave
adc
mov
lret
jl
sbb
das
scas
lods
sub
pop
insl
loope
fwait
xchg
and
add
jo
dec
jl
aaa
mov
pop
sbb
arpl
imul
sub
fistpl
insb
cwtl
enter
add
dec
add
push
xchg
ret
and
int3
movsl
xchg
and
adc
pop
cmc
jle
pop
jne
jecxz
shll
mov
and
sub
or
add
jnp
es
push
ja
xchg
and
and
mov
and
push
push
and
inc
lea
mov
cmp
outsb
in
cmpb
rolb
xchg
sbb
jb
iret
ficoms
pop
movb
gs
movsl
mov
mov
mov
outsl
inc
ret
inc
loop
cltd
mov
sbb
mov
add
daa
aas
das
add
push
outsl
cmp
mov
out
lods
xchg
push
daa
in
sub
popf
ret
jbe
imul
and
sub
or
or
pop
je
dec
fcmove
xchg
mov
cmp
mov
lods
mov
imul
pop
jno
imul
ret
ds
or
xchg
bound
dec
ljmp
cmpl
mov
fnstsw
andb
xchg
fldcw
inc
add
mov
xor
dec
push
adc
mov
mov
bound
mov
scas
mov
addl
scas
cmp
push
xorl
adc
mov
or
or
or
jne
mov
mov
ds
test
mov
cmp
shll
inc
mov
orb
add
cmp
mov
shlb
and
insb
popa
das
stos
mov
andb
mov
or
mov
testl
push
aad
ss
push
mov
in
pop
inc
cmpsb
cmpl
adc
xchg
rorb
lret
sbbb
xor
push
fwait
dec
inc
mov
bound
xor
pushf
int
out
add
jnp
push
repz
ds
into
das
mov
mov
or
xchg
cli
test
pop
outsb
js
popa
jnp
test
mov
dec
es
cs
lret
push
ljmp
add
xchg
mov
int3
arpl
lods
cltd
xor
adc
lock
push
and
mov
pop
je
repz
mov
in
jns
popa
mull
into
cld
fstpl
xchg
cld
mov
mov
xor
add
iret
movsb
lods
add
push
and
les
movsb
and
jmp
pusha
int
fdivrl
and
test
pandn
pusha
loope
jmp
cld
jno
push
in
pushf
add
push
shlb
fwait
push
and
int3
adc
andl
addl
shl
cltd
push
cmp
ljmp
push
mov
fistps
inc
int
push
lret
imul
sub
imul
fsubrs
cltd
stc
cwtl
mov
nop
pop
ljmp
adc
dec
in
imul
addr16
mov
jmp
push
inc
jmp
bound
mov
mov
test
fprem
in
inc
in
loop
pop
mov
lea
jp
cwtl
mov
loop
add
outsb
popa
pop
movsl
outsl
inc
aas
aam
outsl
lret
pop
xor
insl
lods
out
pop
imul
andb
mov
ljmp
jecxz
xchg
cmp
mov
push
fnstcw
call
or
dec
sbb
leave
sahf
scas
mov
repnz
ljmp
popa
push
pop
sahf
rol
cmpsl
das
adc
inc
sub
and
cmp
xchg
and
push
stos
out
and
cs
cmpsl
and
sub
das
test
add
sbb
or
rolb
or
mov
test
mov
outsl
dec
and
push
stos
daa
ret
sbb
scas
testl
add
mov
in
fiaddl
scas
sub
sahf
rcll
dec
dec
add
loop
push
mov
mov
in
test
imul
push
pop
push
nop
inc
mov
xor
mov
pop
popa
jae
cld
dec
fsubrl
lods
push
and
inc
outsl
add
inc
mov
mov
xlat
loopne
inc
popf
and
xchg
movsb
pusha
add
add
mov
cwtl
dec
add
aas
inc
pop
outsb
lahf
push
and
cmp
mov
mov
outsb
and
push
lret
clc
ffree
jae
dec
rorl
lods
inc
stos
sub
enter
les
mov
jns
mov
pop
movsl
sbb
movsl
mov
pop
or
out
pop
and
mov
adc
pushf
iret
push
rorl
jb
incb
cmpsl
jae
mov
lret
cmp
cld
imul
es
shrl
jnp
movsb
dec
push
and
cmpsb
testb
adcl
mov
xchg
ret
inc
dec
mov
fildll
mov
in
lods
fwait
push
int3
mov
push
bound
and
scas
shll
stos
sti
mov
or
mov
in
sub
xchg
and
jle
xor
mov
mov
push
pop
hlt
mov
loopne
fwait
lock
or
repnz
repz
add
sub
pop
inc
iret
daa
push
fnstsw
ret
push
aad
push
mov
push
sahf
test
mov
sub
or
cli
push
xor
pop
gs
jge
int3
imul
sti
sbb
cmp
and
xchg
movsl
mov
cs
rcr
enter
lret
inc
adc
insl
push
push
push
shll
xor
insb
push
lea
mov
xchg
push
mov
dec
mov
clc
and
stc
sbb
adc
loopne
cli
jno
or
int3
in
icebp
jl
clc
mov
and
scas
mov
lret
lods
fstps
sbb
pop
rorl
xchg
int3
fisttpll
das
sub
lret
in
into
packuswb
outsl
mov
bound
jge
and
repz
ret
imul
xchg
in
dec
jmp
jbe
add
or
sub
push
clc
pop
dec
mov
repz
push
into
adc
xor
int3
pushf
mov
mov
out
pop
add
cmc
and
test
fstl
inc
jg
add
out
and
out
push
inc
scas
outsl
or
imul
fistl
adc
test
mov
ret
lret
repz
or
mov
and
mov
xorl
pusha
call
push
ljmp
movsb
jmp
mov
aaa
cs
in
push
sbb
in
fbld
jg
pop
ja
mov
bound
fwait
rol
clc
add
into
jecxz
dec
jle
scas
ja
mov
sbb
push
cld
xor
add
insl
in
push
ret
ret
dec
movsl
data16
in
push
and
xor
sti
jne
and
jb
xor
pusha
dec
std
inc
mov
jns
imul
sub
mov
mov
jmp
rcrb
aam
xchg
mov
adc
loope
movsb
add
in
aam
mov
les
mov
mov
movsb
mov
ja
and
xchg
gs
and
in
lock
sbb
xlat
imul
sub
mov
adc
pop
mov
xchg
add
imul
inc
jne
sub
rcll
sub
adc
dec
sub
and
shl
sahf
vmovq
and
xor
mov
mov
es
es
cmp
mulb
mov
inc
add
cs
adcl
lods
pushf
ret
add
lret
pop
mov
into
outsl
jmp
push
aam
test
lret
pop
mov
and
mov
add
enter
ret
mov
xorl
push
stos
sbb
dec
inc
cmpsb
jecxz
aaa
cs
mov
mov
xchg
das
sarb
mov
jge
pop
cmpsl
xchg
ret
xchg
add
cmp
push
sub
repz
push
mov
in
cld
and
xor
dec
mov
and
daa
dec
fidivrl
hlt
push
or
push
jo
pop
push
mov
mov
fwait
xor
popf
mov
das
repz
in
sbb
pslld
mov
push
divb
sub
insb
loop
pushf
pushl
das
push
and
enter
nop
pop
push
cmpsl
jp
icebp
jge
xor
sbb
mov
nop
cli
mov
xchg
xchg
aad
cld
pop
fisubl
jnp
push
orl
in
lret
int3
mov
or
xchg
add
les
popf
or
lahf
les
mov
push
adc
dec
pop
jecxz
xor
in
xchg
jp
xor
sbb
xor
es
dec
jg
loop
cmpb
outsb
das
add
add
and
lea
shlb
cmp
int3
rcl
and
aas
in
mov
popa
adc
and
in
insb
pushf
mov
ret
int3
orl
shl
sti
sbb
cmp
lcall
addl
mov
into
inc
cmp
rclb
xor
mov
mov
and
inc
adc
repz
mov
cmpb
ljmp
xchg
ret
inc
push
rcr
in
out
mov
lods
mov
les
mov
dec
mov
push
mov
in
lret
imul
cmove
ret
inc
dec
pusha
push
or
lss
popl
cmp
xchg
mov
cld
movsb
xor
xor
and
shlb
dec
fsubrl
orb
xchg
xor
push
sub
movsb
sbb
stos
dec
inc
adc
pop
cmp
xor
aad
sub
andb
pusha
jae
test
loop
and
adc
cmp
adc
mov
push
ret
into
cmpsl
sbbl
jb
notl
sti
lcall
xor
mov
xchg
fldt
dec
adc
xor
adc
sbb
mov
testl
lahf
fcmovne
adc
fs
imul
bswap
adc
fsub
mov
jno
movsb
cmp
movsb
je
mov
stos
add
fistl
adc
pusha
in
jo
jno
ljmp
mov
xor
mov
roll
mov
push
cs
sub
insb
add
cmp
inc
mov
xchg
and
cmp
dec
out
imull
jge
adcl
stos
mov
in
daa
aam
xchg
jp
fisttpl
mov
cmpsb
xor
mov
ficoms
arpl
shlb
sbb
cli
arpl
jge
push
clc
je
dec
cmpsl
aad
push
xchg
nop
out
xor
add
adc
and
or
cmpsb
ret
je
rolb
test
andl
andl
adc
jl
push
cmp
cltd
cmpsl
adc
movsl
stos
mov
adc
insb
test
testl
push
shrl
xor
push
sbb
movsb
sbb
pusha
jae
sub
in
mov
aad
in
pop
out
push
dec
mov
arpl
cmpsb
xor
out
dec
int3
bound
movsb
inc
add
popf
shr
jae
je
shrl
sbb
xor
out
mov
lods
add
mov
ret
add
and
add
dec
test
lods
loop
inc
mov
outsl
mov
add
imul
mov
or
push
xor
mov
addb
scas
addl
cmpsb
pop
negl
addb
mov
test
orb
js
pop
adc
dec
aaa
mov
inc
roll
xchg
or
mov
add
add
inc
ja
mov
arpl
cwtl
jbe
daa
lods
stos
insl
push
lea
les
fdivs
loop
ja
sarb
push
addb
aaa
aad
dec
movsb
scas
lods
bound
xchg
and
addb
pop
xor
mov
cld
adc
mov
cmp
ret
add
rolb
hlt
andl
and
imul
andl
movsb
les
popa
mov
lods
hlt
sub
mov
int3
in
jecxz
lcall
ds
pop
sbb
xchg
xchg
ret
xchg
mov
cmp
orb
push
xorb
dec
sub
add
push
orl
stos
hlt
addl
adc
jae
inc
sub
xor
arpl
repz
gs
pop
out
push
stos
pusha
sub
loop
or
adc
or
bnd
lods
and
imul
adc
cld
leave
inc
push
or
inc
push
les
das
mov
inc
fs
add
xor
inc
outsl
xor
mov
cmpsl
mov
xchg
sub
pop
rclb
jns
adcb
jmp
loop
add
sub
addr16
jae
dec
or
in
ret
or
jne
shll
ss
ljmp
pop
icebp
jns
jmp
lods
in
jge
mov
testb
sub
movsb
mov
inc
hlt
es
add
sbbl
in
xchg
jle
dec
mov
stos
jo
int3
lea
xor
bnd
add
rclb
mov
in
pushf
lods
mov
outsb
ret
fimull
clc
scas
push
loopne
jnp
in
hlt
mov
fldt
add
push
cmpsl
aad
rcrb
jb
fildl
inc
sbb
mov
addr16
jmp
enter
jl
shrl
mov
rcl
iret
les
lea
push
je
sbb
loope
aas
jns
adc
mov
pop
cmpsb
fidivl
push
enter
lock
cmp
mov
lds
lret
jae
stc
cmpsl
popa
lahf
dec
gs
add
and
shl
push
test
aam
xchg
mov
sbb
sbb
add
and
jle
jbe
iret
mov
xorb
mov
scas
nop
mov
mov
and
popf
sub
dec
mov
jp
and
popf
pusha
dec
lods
pop
int
in
lret
ret
sahf
ret
mov
loopne
or
dec
pop
addb
sub
cmp
xchg
shl
mov
add
adc
cmpl
scas
mov
push
in
mov
sbb
pop
fcmovnb
inc
sbb
jae
or
push
add
push
in
shlb
mov
mov
add
push
daa
xlat
or
out
dec
shl
cmpl
mov
cld
mov
lcall
rol
jnp
or
decb
adc
mov
pop
ret
rclb
ror
dec
xor
mov
cmpb
mov
xchg
jbe
add
scas
ljmp
mov
adc
addr16
sub
scas
imul
cmpb
or
stos
fsubs
outsl
gs
jg
push
ret
or
mov
stos
lret
xorb
subl
push
ret
add
ret
dec
fisubl
or
stos
mov
mov
jecxz
lods
inc
xorl
adcl
out
jnp
mov
pushf
adc
pop
lret
sbb
in
xchg
sbb
loop
sub
pop
or
int
push
subb
xlat
int
popa
scas
or
add
or
jae
decb
xor
sbb
ret
mov
gs
sbb
jp
jp
sbb
into
mov
das
add
test
lea
in
lcall
stos
mov
jne
jbe
mov
jmp
lret
cld
sub
rclb
sbb
icebp
loope
orb
push
mov
in
loop
xchg
inc
inc
mov
xchg
fstl
aad
sbb
and
stos
rorb
and
mov
adc
xchg
pop
rcrb
or
lea
mov
mov
test
sub
inc
push
dec
jl
xchg
xor
sub
xor
xor
xchg
pushf
fcoml
andl
mov
add
fwait
mov
xor
inc
and
mov
je
imul
mov
stos
int3
lahf
mov
iret
hlt
lahf
lds
mov
add
fwait
inc
aam
leave
push
test
jno
insl
xor
xor
mov
inc
xchg
or
add
or
cmp
mov
mov
inc
pop
les
loopne
xor
mov
inc
add
movsl
pop
rorl
inc
mov
dec
cld
in
bound
rol
popa
addl
and
in
les
int3
rol
aas
mov
inc
cmpsl
js
and
test
nop
and
imul
mov
mov
imulb
sub
mov
rcr
sbb
or
push
rcl
lods
jne
mov
mov
mov
mov
insl
add
int
xchg
iret
insb
push
in
aaa
mov
or
in
push
push
cmpsb
gs
xchg
sbb
out
repnz
add
dec
pop
fnstenv
mov
aam
sub
push
sub
xchg
outsl
or
pushf
and
fdiv
out
int
inc
push
mov
stos
dec
movsb
daa
sbb
mov
sbb
push
push
mov
mov
sbb
orl
xor
push
add
mov
test
shll
negb
shrb
aad
add
inc
shlb
mov
sub
fmull
mov
jle
cmp
cmc
arpl
push
xorb
mov
je
jecxz
dec
sbb
orl
aaa
mov
ja
mov
loop
mov
loope
stos
in
cmp
in
lea
add
jp
outsb
sub
mov
lods
mov
or
out
ret
ljmp
or
and
inc
cmpsb
leave
mov
stos
clc
bound
shl
icebp
in
lock
sub
jmp
aas
or
arpl
dec
cmpsl
xchg
cltd
push
xchg
inc
filds
and
mov
stos
xor
inc
ret
outsb
pushf
push
and
pop
xor
jae
mov
ds
jmp
lock
stc
inc
push
and
jmp
and
mov
out
cmc
shlb
push
inc
test
inc
cmp
aas
sbb
filds
xchg
inc
fs
pushf
lods
sub
popa
loope
cmpsl
rol
addr16
jno
loope
push
add
sub
mov
loop
xchg
bound
mov
out
adc
call
and
mov
loop
imul
in
cwtl
ret
mov
scas
xchg
rorl
loopne
xchg
cmpsb
in
mul
cwtl
and
cmpsb
imul
sub
pop
xor
and
mov
and
outsb
pop
jge
cmpb
lock
rolb
xorl
push
xchg
fildll
adc
xchg
push
loop
and
mov
fisttps
xchg
push
mov
and
sti
pop
mov
cmp
dec
sub
push
addl
and
pop
push
mov
mov
ret
fbstp
lea
scas
xor
mov
popf
mov
push
xchg
fxch
jmp
push
cmp
push
dec
test
adc
and
pop
inc
xor
xchg
aas
arpl
nop
and
jne
mov
sub
xchg
add
xor
push
xchg
inc
orl
xor
dec
das
add
in
mov
and
sub
inc
xchg
insl
mov
lea
push
movsb
cmpsl
repz
mov
inc
gs
xor
gs
stos
imulb
jb
out
add
mov
mov
jle
testl
mov
mov
ljmp
cs
push
lahf
das
out
lds
push
stos
pop
or
jg
dec
fsubrs
push
inc
lahf
outsb
push
scas
in
lods
sti
stos
cmpsl
sub
jmp
mov
pop
and
mov
aaa
mov
sub
lea
cmpl
push
into
mov
push
stos
dec
popa
mov
in
mov
push
inc
jnp
cwtl
push
imul
ffree
or
out
xlat
pop
jno
push
cmc
mov
mov
mov
and
push
dec
subb
movsb
sub
subb
inc
jmp
and
fisubs
test
xor
add
cmp
pop
add
outsb
ret
insl
mov
add
sbb
sti
mul
jne
fsts
push
and
lock
lcall
cmp
xchg
dec
lret
aad
dec
imul
push
add
dec
push
and
mov
fwait
lea
mov
test
mov
push
jne
in
xor
hlt
cmp
mov
imul
je
or
mov
test
jmp
and
push
mov
repnz
rcll
xchg
in
or
testl
xorb
shrb
xor
cld
lods
movsb
mov
leave
in
leave
movsl
or
mov
mov
cmpsb
adc
xor
mov
inc
outsb
ret
repz
and
xor
sub
daa
rorb
inc
gs
scas
xchg
add
lret
out
sbb
mov
scas
into
and
ja
mov
add
xchg
nop
popf
push
pop
orl
iret
les
xlat
or
cltd
or
outsl
ret
xchg
dec
add
pop
pop
inc
push
scas
in
inc
or
cmovs
jo
add
mov
fs
inc
push
jmp
mov
out
fistl
inc
xchg
push
test
jg
add
push
xor
js
shrb
movsb
gs
mov
mov
xor
incb
cmpsl
dec
jecxz
mov
testb
adc
mov
mov
fs
adc
pushf
mov
inc
stos
daa
xchg
pop
pop
pop
in
cli
ret
lods
push
cli
xor
pushf
sarb
ret
jne
aaa
dec
cmp
out
loope
rep
dec
adc
mov
inc
fldenv
cmp
xor
in
inc
adc
insl
jae
lret
jg
lret
mov
cmpsb
add
sbb
movsb
sbb
in
push
push
test
xor
jp
js
push
stc
mov
jbe
repz
mov
and
in
hlt
in
and
adc
cmpl
jne
mov
pop
vmovups
dec
push
lcall
int3
inc
aaa
jg
fsubrl
mov
ja
cmovae
push
pushf
xchg
loopne
mov
cmc
inc
and
mov
push
mov
fs
insb
xchg
add
sub
and
push
dec
shlb
inc
popf
push
pop
int3
mov
rcll
xchg
ds
int3
fwait
push
cmpb
xchg
mov
dec
dec
test
mov
add
pop
sub
or
jg
or
inc
daa
inc
cmpsl
pop
mov
add
ret
cmp
mov
mov
jo
and
dec
inc
dec
arpl
jne
stos
pop
inc
int3
cmp
mov
xor
add
mov
fistpl
cmp
dec
cmp
sub
lds
mov
dec
and
and
pop
lcall
dec
test
addl
adc
mov
es
sub
sub
xor
mov
mov
xor
add
push
in
push
js
cmp
rclb
std
mov
mov
test
pop
adc
fcomps
adc
mov
sbbl
add
out
mov
xor
outsl
jns
sub
and
pop
lock
ret
adc
js
adc
pop
insl
inc
pusha
insb
mov
fcoml
int
loop
push
inc
stc
cmp
pop
int3
in
mov
sbbl
movsb
mov
cmpb
adc
dec
sub
cmc
inc
and
mov
xchg
cmpsl
lret
mov
shr
add
and
sub
loopne
xchg
add
test
mov
ret
es
iret
xchg
dec
push
pop
push
add
xor
movsb
cmp
insb
cmp
mov
cmpsl
cs
sbb
xchg
lret
xor
js
xor
jno
mov
adc
dec
out
idiv
aaa
gs
xchg
pop
add
mov
jecxz
lods
sub
push
or
stos
imul
push
inc
xor
push
test
pop
mov
int
mov
test
loopne
aaa
int3
xlat
movsb
std
xchg
adc
lea
repnz
or
cmp
pop
enter
adc
pop
and
pop
pop
mov
lods
stos
lcall
in
and
mov
sbbb
outsl
or
popa
nop
and
in
iret
add
in
sti
dec
sti
sub
sar
fidivrl
stos
loop
mov
hlt
stos
push
jl
shrl
sub
dec
addr16
or
add
les
sti
jl
push
or
lret
jmp
add
mov
push
scas
lea
popl
cmp
xchg
mov
jae
cmp
adc
in
push
dec
jecxz
mov
add
mov
mov
mov
test
dec
in
pop
shrb
popa
mov
fwait
sbbb
add
add
cld
push
dec
addl
adc
in
push
mov
mov
pop
imul
addb
xchg
xchg
mov
push
orb
xchg
xchg
in
shll
adc
popa
ljmp
bound
and
repz
cwtl
arpl
xor
inc
adc
rcpps
out
push
movsb
push
les
fwait
mov
shlb
pop
jmp
or
pop
dec
in
dec
mov
ds
rclb
mov
fisubl
loopne
xchg
clc
push
mov
push
cs
iret
sub
jl
mov
popa
xchg
nop
aaa
out
dec
test
add
loopne
addb
mov
cmpsl
and
hlt
sbb
pop
lret
push
test
xchg
stos
add
insb
test
sub
mov
mov
and
aam
imul
loopne
add
popf
pusha
inc
addl
imul
pop
jge
mov
mov
adc
sub
in
aam
or
addl
lcall
cmp
mov
and
lahf
and
dec
jb
clc
pusha
popa
sbb
sub
add
aad
mov
addr16
mov
mov
ja
add
mov
pop
arpl
dec
mov
lods
push
ljmp
call
cltd
mov
dec
fs
or
mov
lods
push
xor
pop
std
add
ss
fadd
xchg
cli
das
stos
xchg
inc
in
inc
mov
dec
movsb
add
inc
test
mov
inc
int3
ret
add
aam
mov
loop
scas
enter
ret
loopne
mov
call
adc
or
push
fmull
cmp
xor
xchg
add
jne
pop
add
stos
mov
fldl
pop
testl
test
mov
cli
cli
and
xchg
andb
mov
sarb
mov
aam
mov
xor
mov
dec
add
jg
add
pop
or
mov
data16
sbb
clc
repnz
dec
jecxz
daa
xorl
mov
fs
jns
mov
sarb
jle
dec
lahf
cmp
xor
loop
pop
scas
mov
decb
cs
in
imul
xchg
call
push
add
lods
and
nop
popa
push
mov
out
xchg
in
clc
xchg
fsubrs
cli
repz
xchg
and
mov
ret
and
mov
in
pusha
out
fdivl
or
imul
push
cmp
movsl
sbb
les
cwtl
push
push
mov
ret
sbb
lock
xchg
or
loope
mov
inc
jp
repz
mov
jecxz
ret
cld
push
popa
or
jle
mov
add
or
xor
data16
xor
in
stos
add
outsl
shll
and
cmp
xorb
lar
and
push
mov
aas
sbb
mov
xor
xchg
orb
or
cmpsl
xchg
in
sub
jge
push
ja
add
lods
stc
lcall
add
mov
mov
cmp
aas
sbb
xor
cmp
add
in
cmpsb
repz
push
popa
inc
test
inc
cwtl
and
pusha
scas
mov
jge
out
xchg
ficompl
add
iret
inc
mov
call
bound
jecxz
cmpxchg
mov
outsl
push
add
push
push
mov
sahf
or
ret
inc
call
movsl
adc
mov
mov
lds
mov
shll
xor
sub
sub
inc
xchg
add
dec
bnd
enter
rclb
ja
inc
fwait
xchg
push
sub
or
out
dec
jl
jmp
pop
cmp
js
push
add
jecxz
mov
dec
xchg
push
mov
or
dec
mov
dec
psrad
testl
xchg
or
cmp
mov
jl
mov
ret
or
or
xchg
sub
or
dec
inc
loope
cltd
clc
jmp
mov
or
sub
in
ds
imul
data16
cltd
cs
mov
jne
sub
xchg
jmp
or
ret
xchg
icebp
loope
or
stos
or
xlat
testl
and
xor
push
cli
mov
mov
push
sub
mov
add
mov
lea
outsl
jo
bnd
insl
das
push
cmc
or
sub
mov
cmpsl
mov
push
pop
inc
arpl
cmpsl
leave
or
or
orl
hlt
sbb
mov
mov
mov
push
jno
movsb
loope
pop
jmp
repnz
mov
add
repz
pusha
rorl
rcll
out
xor
xchg
ja
sti
or
sarb
ret
and
sbb
cmc
sub
inc
xchg
pop
adc
cmpsl
xorl
mov
add
inc
dec
jge
mov
bound
mov
and
mov
mov
jne
inc
mov
sub
adc
frstor
and
rcr
jne
gs
mov
push
shll
aam
pop
cmc
xor
stos
mov
mov
xor
rolb
cmp
mov
subb
je
call
xor
pmaxsw
pop
inc
mov
push
vmread
cld
aam
and
rcrb
push
xor
mov
sbbl
mov
jecxz
pop
add
cltd
push
data16
imul
cwtl
xlat
das
mov
mov
sub
and
mov
add
bound
xor
xchg
mov
mov
fnstenv
gs
ret
test
mov
xchg
jg
sub
sarl
cmpl
add
nop
inc
xor
jns
mov
adc
out
lahf
and
das
add
xchg
or
mov
cltd
xor
rolb
push
push
test
es
mov
pop
fmuls
cmpsl
sub
pushf
mov
xor
roll
or
sahf
pop
add
jne
pushf
loop
cmpsl
xor
fcmovnb
and
cmpsl
aam
pushf
stc
inc
or
mov
insl
lret
repz
mov
scas
cmpsl
int
mov
btcl
add
and
mov
xor
add
push
mov
repz
ljmp
lret
mov
or
outsl
push
fwait
ss
sti
jae
jmp
xchg
adc
inc
push
aas
mov
mov
xor
and
ljmp
lret
repz
add
fwait
add
ds
add
mov
int3
aas
mov
mov
mov
lret
or
ljmp
cmp
shlb
aas
mov
jo
inc
inc
inc
dec
cmpb
aas
scas
aas
mov
ret
mov
xor
mov
lock
push
lret
mov
or
push
jp
aas
stc
mov
inc
fiaddl
clc
lea
aas
mov
mov
xor
ljmp
push
lret
repz
roll
aas
mov
popf
ds
add
xor
int3
aas
mov
push
mov
sub
mov
adc
int3
in
in
or
lock
shl
mov
mov
ds
sbb
xchg
and
loope
cmpsl
sbb
mov
out
add
cmpsl
lock
xor
and
orb
add
int3
or
mov
pop
orl
int
push
or
imul
push
ret
or
xchg
mov
test
sti
fs
pop
fs
push
mov
xlat
fs
in
xor
int3
fs
cs
mov
adc
outsl
mov
movsl
jae
mov
mov
and
or
push
push
int
les
bound
pop
lock
cmpsl
jecxz
out
mov
xor
inc
out
out
or
arpl
inc
and
inc
sub
shl
loop
fmull
dec
mov
add
dec
iret
dec
test
mov
mov
cwtl
movsb
and
mov
loopne
int3
bound
add
addr16
cmc
xchg
xchg
arpl
movb
add
dec
or
mov
or
mov
and
daa
fisttpl
popa
mov
jmp
lret
mov
mov
pushf
mov
clc
aam
das
mov
mov
aas
scas
add
xchg
les
cmpb
movsb
push
daa
sub
repnz
ret
loope
inc
push
aam
or
cmpsb
inc
leave
ret
ja
mov
pop
arpl
pop
xor
shlb
fsubs
mov
icebp
or
loop
mov
cmpsl
and
aaa
mov
mov
jbe
fildl
test
ror
mov
orl
inc
mov
mov
mov
sub
add
xor
xlat
mov
es
popa
mov
jecxz
adc
mov
je
dec
ret
mov
mov
rcl
enter
and
jmp
mov
incb
rolb
fwait
std
push
into
push
sub
stos
dec
cmpsl
jb
aam
mov
inc
out
inc
cs
push
add
jbe
jns
andb
mov
in
xchg
or
mov
addb
mov
xchg
movsl
test
mov
out
mov
ret
imul
in
ret
inc
cmpsl
jp
inc
jmp
pop
cmp
push
xlat
sbb
or
mov
leave
fstl
push
lahf
mov
sahf
sub
jbe
cmp
pushf
and
xor
mov
inc
fs
ret
add
or
pop
pop
in
dec
inc
mov
and
sub
in
jbe
daa
xchg
lcall
les
nop
nop
outsb
rorl
adcl
fidivrs
inc
adc
sbb
cmpsl
mov
jns
imul
cmp
pushf
inc
pop
std
jae
nop
cli
xorl
mov
add
outsb
add
xor
clc
rcrb
filds
movsb
bound
pushf
movsl
and
xchg
add
test
or
adc
sub
pop
shll
outsb
into
push
clc
adc
dec
lcall
and
repz
ret
push
lock
sbb
lea
insl
lret
cmpsl
sub
cmp
repz
sub
outsl
dec
imul
mov
xor
xchg
insb
fwait
mov
mov
sbb
cmpsl
mov
and
mov
xchg
cs
daa
jne
ret
pop
push
mov
mov
into
jnp
push
cmc
mov
mov
insb
js
pop
pop
lret
sub
enter
cld
inc
or
add
add
jns
add
outsl
jno
fldenv
dec
scas
add
data16
adc
out
mov
in
cmpsb
push
add
lcall
aaa
lahf
in
mov
mov
jmp
imul
out
in
rcrb
inc
lods
and
add
xor
dec
rcr
outsb
sbb
out
and
or
movsl
sbb
cwtl
pushf
pop
xorb
jl
lds
mov
push
xor
lods
add
sub
add
mov
pop
dec
cmpsw
cld
xor
push
sbb
dec
loop
xchg
pushf
add
out
jl
roll
in
sbb
xchg
sub
daa
pop
fucomip
jne
mov
roll
es
mov
imul
mov
lret
cmp
loopne
sarl
aad
pop
and
fs
insb
inc
mov
push
and
add
aam
cmp
mov
popa
imul
xchg
jle
add
js
mul
mov
test
imul
jle
sub
xor
sbb
dec
nop
sbb
imul
and
ret
adcl
mov
imul
push
sbb
add
pusha
xchg
je
call
ficoms
xor
fdivl
dec
int
add
cmp
dec
dec
test
das
push
mov
add
xor
stos
popf
lock
and
sub
lret
sahf
xchg
dec
sub
mov
xor
push
enter
loope
cmpsl
ret
mov
outsb
or
mov
pop
outsl
mov
xchg
mov
push
in
lods
mov
sar
and
ljmp
pushf
inc
inc
hlt
push
jmp
icebp
in
in
enter
dec
sub
jl
and
ss
inc
dec
lods
add
pusha
pusha
xchg
mov
mov
pop
jmp
jnp
es
sahf
push
scas
push
cmp
lds
add
cmp
xchg
outsb
push
cmpsb
push
rcrb
and
imul
dec
jb
jb
fistps
and
lea
pop
inc
scas
adc
pop
xchg
add
pop
in
add
cmp
outsl
mov
pop
js
jl
push
mov
or
jne
out
mov
push
sub
pop
fwait
sbb
daa
sub
dec
adc
inc
and
add
xor
cld
xchg
sbb
ljmp
dec
lods
add
int3
iret
push
pop
sbb
push
das
add
stc
fs
mov
lret
jle
and
fs
das
imul
pop
cmpsb
xlat
imul
xchg
pop
movl
adc
mov
mov
mov
out
aas
pushf
cmpsl
pop
xor
mov
or
cmpsb
cmp
dec
adc
call
xchg
push
dec
xor
xchg
mov
pushl
loopne
icebp
push
outsb
inc
mov
push
lds
inc
andl
mov
cmpsb
andb
add
adc
xor
xor
int
mov
push
push
xor
push
dec
xchg
fbld
xchg
loop
inc
add
gs
pushf
cs
arpl
lret
movsl
jl
lea
mov
mov
jle
inc
das
popf
adc
dec
inc
mov
jl
mov
outsb
push
cmpsl
cmc
bound
ret
push
sub
mov
push
je
cli
adc
cli
ljmp
lret
ret
add
add
cmp
mov
movsl
icebp
mov
mov
sub
cmpsb
sbb
jnp
jl
pop
imulb
ja
lret
mov
jmp
push
xorb
hlt
add
pop
ja
shrl
shrb
pusha
sub
imul
repz
fbstp
and
xchg
dec
add
pop
ret
rorb
xchg
add
subb
inc
arpl
fmull
mov
pop
dec
ljmp
add
jne
cmp
inc
cmp
outsb
dec
jns
in
cmpsl
or
mov
daa
inc
scas
add
adcl
inc
gs
jecxz
les
sbb
ljmp
pop
xor
mov
int
xchg
lahf
orb
or
pop
cmp
sub
sbb
inc
xor
and
insb
cwtl
sub
xor
cmpsl
lock
int3
aad
xorl
adc
cmpb
scas
scas
dec
xchg
adc
adc
popf
dec
add
stos
sar
inc
xchg
adc
cmp
shlb
jecxz
movsb
pop
jno
jle
push
push
mov
add
icebp
rcll
pop
pop
iret
sub
mov
in
mov
shll
add
insb
ficompl
bound
xchg
mov
popf
lret
mov
repz
out
pop
test
iret
xor
add
int
adcl
add
cmp
xor
xchg
adcl
daa
cld
scas
aad
dec
cli
das
mov
inc
jmp
je
add
jl
xchg
arpl
sub
dec
xchg
or
push
int
cmpsl
popa
dec
xor
mov
lods
fisttps
das
lret
pop
push
mov
xchg
pop
or
xchg
je
fldl
mov
cli
fmull
imul
jae
xor
aad
mov
movsb
mov
sbb
lret
sbb
inc
mov
inc
jne
stos
xchg
pushf
pop
jns
or
clc
mov
add
add
or
enter
lea
add
mov
aaa
out
stc
sub
xor
hlt
andb
outsb
into
fidivs
add
sti
fcmovnu
cld
je
mov
and
rorb
sub
mov
add
not
xorb
mov
scas
fisttpl
push
fimull
les
sub
test
sbb
addr16
mov
xor
cmpsl
lret
orl
mov
ds
test
cmpsb
out
insl
shlb
pop
inc
test
mov
jo
mov
icebp
and
in
and
push
pop
pop
mov
lahf
jo
ljmp
inc
pop
add
xrelease
mov
push
or
test
int
dec
inc
sbb
sbb
bound
inc
aam
inc
inc
sbb
addr16
dec
jnp
jbe
rorl
dec
mov
push
in
xchg
push
fwait
test
adc
and
lret
xor
in
fisubl
movsl
movsb
mov
sbb
fnsave
sub
scas
mov
cmp
ret
cmp
cmpsl
mov
lods
sbb
mov
loopne
out
lds
mov
or
int
mov
dec
mov
daa
inc
and
mov
mov
ucomiss
jbe
xchg
dec
cli
cli
clc
cmp
mov
inc
in
repz
int3
mov
mov
mov
or
fisttpl
xor
andb
mov
and
ds
movsb
jmp
call
outsb
ss
push
adc
add
xchg
loope
mov
aad
mov
sbb
mov
xor
andb
push
mov
pop
sub
shl
inc
jge
and
ljmp
imulb
jg
or
lds
outsb
dec
xor
orl
mov
in
sbb
lahf
or
and
loope
out
dec
in
jg
sub
pushl
mov
jl
idivb
lret
enter
fiaddl
sub
psraw
jg
out
pop
mov
mov
into
sub
add
loope
add
or
in
mov
adc
ds
adc
iret
shlb
imul
push
push
mov
push
sbb
test
out
in
mov
cltd
sahf
ss
sbb
daa
push
mov
cmp
xchg
push
mov
jnp
inc
and
fisubs
cmc
sarl
bound
mov
in
xlat
dec
and
mov
lret
pop
or
jb
mov
xchg
cmpsb
loop
sub
and
sbb
popf
cmp
in
xlat
dec
sbb
jg
ljmp
stos
out
iret
orl
ret
xorl
add
sti
jecxz
ss
add
fldcw
mov
fisubrl
jns
test
sub
pop
fcompl
mov
adc
xchg
das
and
xchg
inc
xor
mov
xchg
fadds
push
and
in
push
add
add
adc
mov
aam
pushf
lods
jmp
mov
push
xchg
adc
cmpsl
lods
imul
faddl
bound
push
mov
movsb
sub
icebp
insb
cmpsl
ret
stos
movsl
out
aaa
ret
or
add
sub
adc
jnp
gs
or
mov
in
fsub
add
xchg
mov
jne
xor
jmp
in
jnp
push
or
popf
lock
or
in
add
or
sub
and
iret
lret
mov
xor
inc
inc
test
xor
andl
ror
leave
dec
sub
push
push
jecxz
scas
fidivl
adc
and
out
push
add
das
faddl
data16
in
inc
js
les
fcmovbe
inc
lods
in
jns
mov
jp
add
jl
mov
xchg
mov
fwait
lcall
std
or
add
push
dec
icebp
shrl
jmp
and
std
sub
cmp
jp
cmp
dec
outsl
add
push
sbb
sub
out
cmp
xchg
lret
mov
add
pop
and
dec
push
jge
push
add
mov
iret
subb
fcompl
arpl
cmp
inc
rorb
mov
jle
and
lods
pop
and
dec
mov
xor
sub
daa
or
add
rcll
lret
lock
mov
xchg
in
add
jg
movsb
mov
mov
ljmp
out
in
or
mov
int
mov
stc
mov
aas
jecxz
es
add
mov
add
mov
xor
xlat
test
mov
jge
loop
add
gs
xchg
shll
or
js
or
mov
push
sbb
rorb
dec
lcall
in
and
mov
jecxz
addl
outsb
ja
pop
sub
sub
pop
out
outsb
stos
push
dec
lret
add
leave
call
or
hlt
cs
mov
popa
xchg
fsubs
add
jmp
and
mov
dec
filds
mov
mov
or
inc
iret
shlb
inc
adcl
loopne
lods
fs
das
mov
sub
and
testb
mov
inc
mov
and
fisubrs
cli
xchg
mov
rorb
add
mov
inc
cmpsl
fidivrs
fwait
mov
jle
fsubs
test
sub
add
lea
and
shll
dec
jg
pop
xor
mov
xor
xor
or
adc
loop
mov
sub
mov
push
in
lds
shlb
cli
in
fidivrs
pop
in
jecxz
bound
lods
jecxz
xor
mov
out
add
test
stos
test
fidivrs
and
pop
divl
sbbb
fcmovu
add
add
lds
jg
jnp
fs
dec
xchg
push
insb
je
pop
dec
leave
int
and
lret
pushf
shlb
test
add
push
out
ja
push
sbb
nop
jecxz
lea
loopne
mov
sbb
mov
jecxz
fdivr
push
and
push
lods
jno
adc
push
lock
shll
aaa
cli
inc
cmc
fmul
push
movsl
in
fst
jl
pop
roll
xor
push
xor
mov
add
rolb
divb
fdivrl
push
scas
test
scas
adc
adc
jnp
fidivrs
jle
xchg
mov
xor
push
xchg
scas
ret
and
mov
lret
push
cmp
pop
dec
repz
mov
stos
inc
jecxz
ret
dec
mov
add
push
cmpsb
popf
fimull
into
and
fstp
inc
or
jo
dec
cmp
in
and
inc
fadd
pop
sarl
shll
push
int3
add
mov
add
mov
cld
loop
mov
sarb
sub
pop
clc
xor
pop
ret
dec
movsb
jecxz
cmp
clflush
rcll
dec
xorb
andb
faddp
mov
sub
mov
jne
subb
dec
jg
push
popa
dec
add
leave
jle
in
and
sahf
xor
jl
mov
cld
dec
sbb
jb
pushf
mov
mov
dec
leave
sub
cmpl
lret
pusha
popl
pop
arpl
add
xorl
repz
mov
mov
in
in
or
imul
mov
bound
inc
pop
mov
cmpsb
repz
inc
push
cmp
sbb
and
cs
sbb
add
movsl
or
push
ja
add
inc
add
mov
jo
int
cmp
daa
xchg
repz
in
icebp
mov
std
xchg
dec
mov
movsb
push
in
mov
std
cs
mov
add
ja
pushf
pop
clc
add
inc
gs
das
add
push
mov
popa
out
stos
shl
xchg
addr16
out
bound
xchg
ds
and
in
or
push
inc
or
test
jb
in
cmp
or
push
push
in
adc
or
jns
insb
mov
push
test
daa
xor
mov
orb
pusha
or
movsb
mov
xor
cpuid
add
inc
cwtl
push
pop
stos
shll
push
mov
sub
movsb
movsl
je
testl
mov
add
repz
mov
test
add
mov
add
mov
in
inc
push
or
shl
lods
or
mov
and
ja
xchg
fbld
mov
xor
push
mov
mov
push
push
or
xor
cld
xor
test
ror
movsl
imul
xchg
es
bound
push
int
mov
or
jmp
or
lret
or
xchg
push
or
lahf
xchg
push
loopne
push
cmp
sub
dec
push
imul
sysexit
inc
cmc
stos
inc
mov
decb
mov
inc
fbld
adcb
adcl
in
jp
adc
data16
xchg
jmp
xchg
stc
jmp
pop
jg
dec
or
jle
and
cwtl
cmp
andl
addr16
ret
enter
cmp
andl
nop
jg
outsb
mov
out
pushf
mov
xchg
mov
cmpb
sub
fsubrs
out
cs
fidivs
pop
push
int3
iret
push
cli
sub
jnp
adc
pop
aas
in
sarl
push
mov
daa
ret
das
push
call
cmp
addl
mov
sub
mov
mov
pop
or
in
dec
add
outsb
ficoms
in
inc
ffree
dec
cs
bound
lret
loopne
cmp
rcrl
aam
sbb
cmp
sbb
jnp
mov
in
movsl
xchg
loope
adc
imul
sbb
add
pop
ret
in
int3
outsl
xchg
jl
add
cmp
push
xor
push
cltd
in
scas
or
int3
out
add
mov
and
in
adcb
or
in
lret
mov
push
adc
jmp
cmp
mov
cmpsb
insb
cmp
std
jecxz
lods
xchg
pop
or
stos
in
or
mov
push
lock
and
mov
pop
add
mov
adc
je
cwtl
push
push
push
les
and
xchg
mov
fucom
jp
or
and
addl
or
lea
add
mov
in
lret
mov
std
std
xor
scas
pop
xor
or
mov
push
repz
mov
sti
in
lods
xorb
ret
add
bound
insl
xchg
bound
scas
imul
addr16
mov
lret
mov
xchg
mov
clc
out
fdivl
outsl
movsl
imul
outsb
sub
out
mov
mov
add
dec
mov
jge
mov
mov
lea
aaa
popa
ret
push
popa
add
test
and
mov
fs
out
dec
ljmp
pop
add
orl
sbb
and
cmc
jp
in
mov
lds
cmpsb
add
jp
fwait
xor
shrl
mov
outsb
fstl
lea
jmp
icebp
int3
stos
faddp
lea
idivb
dec
mov
dec
movsl
xchg
push
mov
cmp
mov
sub
xchg
push
sub
mov
and
push
movsl
idiv
loopne
dec
inc
mov
in
ss
shll
or
pusha
mov
push
movsb
test
or
aaa
add
jle
pop
icebp
insb
cmp
ja
dec
xchg
data16
mov
addr16
add
les
jmp
cmp
push
hlt
push
lret
sbb
movsb
enter
fnstsw
push
mov
movsl
mov
pop
xor
mov
push
fwait
je
dec
mov
and
rcll
std
rcl
or
lods
push
lahf
inc
pop
enter
and
add
sub
xchg
add
insl
hlt
in
mov
movsl
call
push
inc
loop
add
add
xchg
cmp
mov
loop
das
dec
xchg
or
xchg
test
call
xchg
out
lcall
mov
push
inc
into
pusha
xchg
mov
jno
das
int3
pop
mov
lods
push
or
mov
mov
mov
mov
test
arpl
mov
mov
rep
pop
sub
jp
in
lfs
or
test
sub
xchg
movsb
in
repz
or
addr16
cs
mov
xchg
int3
sub
movsl
mov
inc
push
sbb
pop
mov
add
in
out
push
cmpsl
pop
pushf
push
aam
xchg
je
gs
mov
xor
cmp
dec
mov
in
das
in
es
leave
add
out
ds
call
ljmp
cld
xchg
loop
sub
mov
xchg
cmp
inc
xor
cld
lods
pop
mov
mov
popa
xchg
dec
scas
aad
movaps
jae
sub
adc
mov
mov
test
push
xor
sbb
test
mov
in
rcr
xchg
xchg
lcall
cmpsb
adc
movsb
int
ret
mov
int3
cmp
jae
and
repz
notl
enter
outsl
mov
rcll
inc
mov
inc
mov
aas
lahf
sub
addr16
out
xchg
es
push
popf
xor
inc
scas
push
ss
add
cmp
jp
xchg
mov
and
aam
or
push
jnp
mov
mov
pop
nop
mov
mov
orb
sbb
ret
shr
xchg
jae
cmp
jae
popa
xchg
push
es
cmp
out
imul
xorb
cs
mov
addl
dec
or
pusha
xor
pop
arpl
adc
push
lods
pop
imul
stos
fsubs
sub
inc
mov
fwait
lods
movsl
cmp
pop
stc
stos
adc
ret
in
bound
pop
ret
ja
fldcw
mov
add
or
lock
lods
mov
sti
hlt
rol
les
addl
mov
mov
push
push
and
stos
cmp
xchg
outsb
jl
fwait
add
fmull
lods
mov
adc
or
movsl
andb
and
inc
in
aad
scas
insb
movsb
lret
xor
mov
cmp
ret
andb
and
ljmp
addb
mov
out
in
movsb
or
fistl
jge
lea
jmp
pop
push
leave
stos
mov
insb
fdivrs
pop
xchg
idiv
lahf
sub
sub
dec
push
inc
mov
push
rorl
adc
push
jnp
push
rcrb
jno
outsb
push
mov
es
loop
ljmp
ljmp
ss
rolb
inc
add
ja
hlt
lock
andl
lods
popf
add
clc
repnz
ljmp
sbb
mov
rcll
push
mov
aas
outsl
rolb
jns
push
mov
ja
into
xchg
mov
les
jbe
mov
stos
inc
mov
pop
sbb
cmp
js
xchg
pop
sub
mov
aad
mov
les
pusha
add
mov
test
dec
inc
test
cmpsb
add
mov
scas
pop
leave
je
jp
mov
or
ffreep
scas
or
ret
cmpsl
pusha
mov
test
xor
mov
in
out
in
dec
xorl
out
mov
popa
aam
fisubl
pop
sub
fisubrs
cmp
pop
pusha
shrb
mov
cmc
cmpsl
mov
pop
push
dec
adc
mov
in
inc
aam
movsl
nop
loopne
psllw
cmpsl
and
shlb
mov
inc
and
nop
push
jns
jbe
std
clc
mov
mov
or
cmp
mov
lahf
imul
stc
push
mov
aam
enter
inc
or
mov
jo
mov
roll
iret
push
mov
rorl
imul
sub
fs
dec
aad
push
aam
insb
ds
loop
clc
mov
sub
lods
movsb
movsb
pop
cmp
xchg
pop
movsb
shrl
xor
xchg
std
and
mov
iret
dec
sub
cmp
mov
rolb
jnp
out
mov
stos
shll
or
xorl
int
sub
or
sub
andb
inc
addl
add
fidivs
or
fcoml
lret
mov
dec
xor
mov
cmpsl
inc
fistl
test
mov
filds
sbb
mov
inc
xchg
out
cli
roll
and
or
xchg
loop
popf
lds
rclb
inc
loope
xchg
mov
pop
scas
lret
or
das
add
sub
outsl
sbb
jp
jecxz
daa
rorb
cmp
mov
adc
std
mov
xor
rcrl
dec
inc
dec
and
push
sub
je
aas
pushf
mov
ret
inc
sti
test
sub
aam
fnsave
mov
xchg
push
push
out
loope
ret
negl
push
cmpsl
push
sub
fisubl
mov
mov
insl
jle
mov
clc
xchg
sub
out
push
movsb
stos
inc
aas
and
xchg
addb
les
ret
jbe
fadd
out
sbb
pop
cmpsb
into
add
cmp
dec
push
mov
jmp
sahf
push
lods
ret
out
sub
inc
insl
leave
test
xor
adc
dec
lea
add
inc
dec
jmp
mov
xchg
and
in
int
cmp
popa
cmpsl
dec
into
sbb
push
xchg
push
cwtl
out
aad
cmpsl
lret
ret
xchg
sbb
adc
movsl
fdiv
and
inc
or
and
xor
mov
fs
or
stc
subb
movsl
xchg
push
rcll
and
andl
or
jne
mov
add
add
xchg
cmpsl
clc
movsb
mov
scas
xchg
bound
pop
movsl
adc
xor
mov
enter
out
mov
add
ds
out
into
dec
add
mov
mov
jmp
push
ja
xchg
add
sub
inc
imul
or
xor
mov
clc
jmp
sbb
mov
jbe
lods
mov
scas
stos
and
sub
inc
ljmp
mov
add
ja
push
hlt
lahf
mov
test
rclb
outsl
movsb
xchg
add
add
pushf
dec
mov
adc
mov
mov
in
movsb
in
in
add
scas
icebp
mov
dec
addl
and
loop
dec
and
imul
jae
pop
dec
daa
cmpsl
insb
mov
mov
jno
loopne
enter
jne
dec
and
arpl
dec
das
loope
or
stos
ljmp
dec
data16
mov
les
push
insl
ja
cmp
scas
in
das
dec
out
cld
mov
hlt
or
and
push
inc
push
cmove
xor
pusha
dec
push
andb
add
push
cmpsl
int
roll
pcmpgtb
loop
popf
ja
sti
jg
daa
add
cmpsl
insl
cli
lahf
mov
test
push
xor
subb
mov
je
insl
pushf
mov
fsubrl
jmp
inc
mov
and
xchg
loop
movsl
test
movsb
add
jecxz
outsl
sub
push
jno
or
xor
iret
ret
push
add
push
gs
cmpsl
jns
xchg
bound
sbb
fcompl
cmpl
ficomps
movsb
loope
andl
push
mov
iretw
and
out
and
inc
clc
or
mov
out
mov
enter
cld
hlt
cmp
add
imul
rcr
pusha
mov
rclb
sbb
mov
push
push
mov
enter
test
mov
je
scas
in
testl
scas
ret
pop
add
pop
fnstenv
inc
mov
mov
movsb
adc
iret
pop
lret
xchg
stos
mov
fs
mov
jecxz
int3
js
addr16
stc
mov
dec
sbb
jge
push
mov
dec
ret
daa
cmpsl
arpl
xor
in
imul
adc
movsl
mov
xchg
cmp
stos
mov
out
fcmovnu
ret
mov
mov
mov
add
pop
imul
xchg
fstps
enter
xchg
push
test
jmp
jecxz
arpl
loopne
push
in
mov
dec
lock
mov
jg
mov
lcall
and
addr16
jne
lret
daa
push
or
inc
fisttps
mov
cmp
cmpb
push
hlt
lahf
cmp
xchg
sub
lods
bsf
fimuls
pop
jo
mov
pop
add
repz
cmp
xchg
ja
mov
mov
xor
mov
fsubs
mov
jns
test
mov
push
out
into
ja
imul
ret
cmp
push
inc
mov
scas
inc
cmp
neg
dec
scas
in
ret
add
data16
das
fdivrl
flds
mov
out
out
mov
das
imul
sub
repz
inc
xlat
shl
xor
add
popa
int
ret
fldl
push
test
mov
iret
ss
cmc
dec
pop
or
stos
and
in
mov
inc
dec
mov
int
dec
aad
loopne
mov
mov
cmpsb
out
xchg
out
rorb
mov
into
ret
adc
aas
andl
inc
mov
inc
mov
xchg
mov
sub
push
mov
push
adc
in
cmp
jae
add
out
push
test
or
mov
ljmp
push
mov
xchg
and
movsb
ficomps
movsb
sti
out
xchg
test
cmp
hlt
cmp
incb
ret
xchg
mov
add
jl
fnstcw
sub
insb
jne
fstpt
inc
xor
pmuludq
lods
arpl
push
sub
dec
les
sahf
jb
push
and
aaa
in
add
scas
jb
bound
pop
je
ret
xlat
sub
xchg
imul
fs
xor
mov
dec
mov
es
lods
movsb
dec
cmc
loop
mov
cmpsl
mov
mov
jecxz
shrb
mov
adc
in
loop
xor
pop
imul
xchg
outsb
cmc
pop
cmpsl
push
daa
push
and
xor
lret
xchg
lret
or
das
xor
cmp
push
or
mov
popa
mov
mov
mov
lea
ja
scas
or
hlt
add
or
dec
adc
les
ds
xchg
cli
into
ret
sub
das
stc
stc
jb
ret
jne
inc
push
insl
imul
push
and
jae
or
inc
push
aaa
mov
jo,pn
sub
mov
fnstenv
mov
dec
idivb
les
and
cmp
mov
sahf
and
push
daa
mov
mov
jl
jp
js
fs
ljmp
sbb
fisubrs
sub
out
sbb
das
and
aaa
jecxz
xchg
and
scas
mov
nop
les
lcall
mov
loop
cmpxchg
and
mov
mov
and
adc
mov
jecxz
out
mov
pop
dec
lret
pop
xorl
push
mov
push
rorl
ror
rorb
cmp
or
xchg
and
test
mov
loopne
in
xor
iret
mov
test
movsl
mov
push
dec
movl
rorl
jmp
sub
mov
mov
inc
subb
mov
leave
add
adcl
inc
inc
jae
jge
cmpsl
xchg
push
xchg
push
fisubrl
dec
pop
adc
repz
xor
dec
jmp
bound
imul
ficoml
cmp
xchg
out
mov
inc
cmpsb
out
out
lods
xchg
sti
das
cld
and
mov
add
jl
mov
cmp
mov
xchg
movsb
add
push
ret
dec
inc
inc
stos
addr16
mov
das
ljmp
push
in
outsl
stos
aas
xor
bound
je
mov
leave
mov
sub
fadd
mov
inc
or
xor
add
mov
push
ja
add
xor
lods
mov
mov
mov
loopne
and
fistl
call
mov
sbb
jmp
or
mov
in
mov
dec
cmp
or
subl
xchg
mov
std
mov
add
les
not
jae
mov
dec
push
mov
mov
std
popa
xchg
jnp
mov
dec
rorl
jbe
nop
or
xor
fcmovnbe
orb
scas
push
dec
fstpl
mov
pop
pop
into
mov
add
dec
out
ud1
sub
mov
test
jmp
cld
push
les
jno
ss
in
pop
nop
sub
cmpsb
push
push
and
into
mov
les
jecxz
lods
or
pop
in
cmpsl
push
push
mov
shll
sub
cmpsb
pop
invd
daa
dec
jle
out
mov
add
lods
les
aam
movsb
xor
or
dec
ficompl
fstps
rol
mov
mov
pop
int
pop
cmpb
jne
int3
ret
test
faddl
in
insb
push
inc
or
rorb
sarl
adc
movsl
cmpsl
or
movsb
popf
shlb
int3
stc
and
pusha
mov
movsb
mov
push
les
xor
out
dec
cmp
test
push
scas
out
dec
lret
push
stos
movsl
lock
mov
xchg
add
ja
ret
fs
out
add
mov
fmuls
adc
in
pushf
pop
test
jecxz
out
xchg
enter
sbb
sti
mov
mov
mov
das
sbb
aaa
mov
or
cmpsb
push
push
mov
scas
mov
and
lea
dec
push
push
and
inc
into
pop
mov
xor
lods
fucomp
fbstp
jne
dec
je
in
pop
out
mov
mov
insl
xor
arpl
in
pop
add
lret
dec
mov
push
ret
loop
mov
stos
xchg
xor
loopne
push
cmp
push
call
and
cmpsl
and
cmpsb
shrb
push
into
xor
sub
push
adc
cmpb
cmp
xchg
inc
in
fadds
xchg
dec
orl
roll
inc
sub
call
clts
out
or
clc
rcl
rolb
xorb
jle
adc
mov
arpl
pop
loopne
xor
mov
pop
jmp
xor
stos
push
pushf
lods
incb
lods
add
add
jl
fmuls
pop
aam
mov
cmp
iret
imul
ljmp
popf
sbb
jle
mov
movsb
gs
push
adc
pop
negl
out
cmc
push
iret
das
daa
ljmp
dec
jge
sti
ss
test
bound
or
jmp
adc
std
mov
mov
adc
ret
incl
and
cmpsl
lahf
fcoms
sahf
push
jmp
push
outsl
mov
pop
mov
in
mov
push
cmpsb
or
dec
add
outsl
jns
xchg
cs
mov
sub
adc
push
addb
mov
push
in
mov
inc
inc
sti
xor
gs
ds
sbb
dec
ret
add
sub
cmpl
or
fs
sbb
mov
sbb
out
add
xor
cmp
fwait
mov
sbb
xchg
mov
lea
push
dec
mov
inc
nop
sbbl
push
mov
push
das
out
cltd
lods
std
dec
iret
popf
mov
repnz
jbe
and
cs
test
xor
jp
aam
mov
testl
lret
shlb
jns
jne
mov
jbe
int3
xor
jb
cs
xor
adcl
call
or
adc
loopne
enter
mov
sbb
movsl
dec
jns
cmc
jns
imul
mov
jb
stc
pop
das
xor
aas
test
pop
lea
pop
in
pop
cmp
lea
dec
mov
push
xor
mov
rol
icebp
aad
push
js
ja
and
xchg
sbb
pop
mov
bnd
outsb
ss
popa
xchg
jmp
push
and
or
das
rcl
sbb
or
icebp
dec
xor
cmpsl
jecxz
inc
outsb
mov
call
ljmp
mov
repnz
pop
addr16
fcmove
sbb
mov
repz
fsubl
push
dec
cld
mov
aaa
mov
jg
push
sub
pop
mov
mov
jmp
clc
mov
mov
dec
ja
mov
cmc
rclb
popf
or
push
push
cmp
lret
jno
pop
ss
loopne
xor
mov
adc
repnz
pop
ja
das
push
movsl
inc
idivl
pop
stos
mov
lcall
ss
or
sub
in
movsb
cmp
jnp
mov
subb
test
repz
or
inc
test
xorb
ljmp
mov
ret
popf
inc
fs
dec
repnz
stos
loop
mov
ljmp
rolb
xchg
sahf
movl
xor
push
xor
pminsw
adc
jae
push
lret
arpl
movsb
inc
mov
repz
jnp
mov
push
pop
leave
mov
ret
push
add
scas
test
sbb
add
movsl
mov
in
in
adc
xchg
fwait
and
or
shlb
jecxz
scas
in
add
shl
pusha
stos
lods
cmp
xchg
subl
bnd
ret
xchg
jae
in
xchg
out
ds
cltd
test
stos
cmp
and
xlat
and
push
mov
div
or
popa
adc
or
pop
mov
add
pop
dec
cmp
fildll
sbb
roll
xchg
hlt
xchg
imul
sub
xor
mov
les
ficoms
xchg
outsl
dec
mov
xor
pusha
or
int3
push
sbb
jne
stos
mov
and
iret
xchg
pause
add
jmp
add
bound
lret
sbb
mov
adc
or
idivl
xchg
pop
inc
mov
fildl
mov
mov
add
jle
lods
adcb
add
js
cmp
icebp
push
push
add
mov
aas
xchg
xor
mov
int3
or
mov
fdivrl
jb
ljmp
jae
daa
push
andb
sbb
aad
scas
popa
cmpsb
jg
mov
mov
arpl
add
mov
mov
mov
out
push
cmp
pop
xor
sbb
adc
loop
xor
inc
imul
jnp
in
addr16
movsl
mov
add
test
aam
div
imul
add
data16
sub
enter
jge
add
cmpsl
ja
xchg
subl
into
pop
arpl
mov
das
imul
or
shll
andb
xchg
fdivs
push
mov
mov
xlat
enter
push
rolb
add
inc
inc
clc
add
cmpsb
xchg
mov
mov
mov
adc
daa
shrd
lds
ret
iret
arpl
orl
or
das
and
and
push
xor
pop
cmpsl
add
js
sub
mov
fistps
sbb
pusha
xchg
mov
mov
pop
jp
dec
aam
call
inc
xchg
inc
sub
xor
stos
ljmp
nop
outsl
fcoms
jle
nop
adc
mov
fiadds
lods
xor
mov
movsl
pop
pushf
mov
and
xchg
dec
or
pop
jne
inc
dec
adc
stos
add
inc
seta
and
rcl
jecxz
dec
push
fcoms
mov
stos
pop
cmpsl
rorb
push
adc
xor
push
and
cmp
in
in
sbb
mov
ror
bound
insl
add
jecxz
ljmp
jae
jecxz,pn
xor
inc
scas
movsl
dec
rorl
mov
mov
test
cmp
push
ret
lods
mov
xor
in
in
cmpsl
mov
jmp
or
cwtl
bound
xor
push
xchg
add
pop
lds
push
and
pop
js
das
arpl
add
outsl
dec
lds
sbb
data16
outsl
mov
jns
pop
inc
xor
sub
push
into
lods
cltd
pop
add
insb
push
add
sbb
hlt
add
cltd
mov
rorl
mov
and
cmpsl
or
fisubrs
cmpsl
repnz
in
mov
dec
mov
das
aam
sub
and
add
add
movsb
leave
nop
mov
dec
mov
xchg
dec
gs
rolb
imul
xor
in
ret
jmp
nop
aad
add
sbb
sub
xchg
sub
in
insb
sbb
insb
pop
add
xor
popf
cmp
mov
sub
add
inc
add
jecxz
orb
dec
dec
lret
mov
clc
aaa
mov
push
subl
push
dec
repnz
push
popa
xor
out
push
pop
push
sarl
dec
leave
pop
iret
dec
mov
jmp
nop
add
mov
xor
dec
dec
or
adc
mul
inc
fistl
push
cmpsb
mov
add
xchg
out
jnp
ja
jne
cli
xchg
dec
cmpl
xlat
fildl
mov
pop
mov
or
pushf
xor
and
mov
in
aaa
dec
sub
sub
mov
outsl
in
mov
xchg
loopne
clc
or
pop
mov
outsb
clc
adc
xchg
iret
rorb
sbb
push
popf
mov
out
xlat
sti
ret
sarb
or
xchg
xlat
loopne
pop
push
data16
lea
lods
add
push
repnz
stos
cmp
adc
bound
add
cmpb
leave
loop
insl
cmpl
jbe
imull
mov
inc
ss
mov
push
and
sub
out
loop
into
loope
ret
xchg
add
and
or
movsb
mov
sub
in
push
rcrb
mov
or
adcl
and
ret
inc
push
cmp
add
dec
sbb
mov
xchg
ds
pop
sub
xchg
les
xchg
xchg
out
mov
jb
sti
ret
or
xchg
mov
inc
loope
cmp
mov
mov
bound
sbb
push
movsl
mov
cmp
je
push
push
sar
out
or
xor
gs
les
iret
push
lret
das
outsb
int3
push
add
jno
lea
push
bound
push
pop
andl
xor
jmp
int3
push
add
mov
add
rcll
push
lahf
lret
dec
jae
ret
xchg
jmp
fsubrl
cli
dec
dec
test
in
inc
inc
fsubl
arpl
add
xor
das
xor
adc
add
hlt
in
sub
adc
mov
arpl
cld
in
out
movsb
into
lds
aas
hlt
out
and
in
sbb
cmpb
test
orb
in
in
je
xchg
arpl
loope
ror
cltd
mov
scas
add
icebp
arpl
in
in
in
push
andl
popa
ja,pt
decl
pop
out
mov
mov
mov
sub
int3
cmp
inc
lret
mov
aad
and
jb
stos
and
add
and
in
cld
xor
andl
loop
dec
aaa
jns
lret
cmc
cmp
lret
test
bound
or
or
xor
cli
jo
push
add
insl
cmpsb
mov
jo
call
cmp
push
lret
movsb
cmpsl
push
adc
mov
mov
sbb
mov
jo
test
xor
mov
nop
mov
out
shll
rclb
popa
mov
inc
shlb
mov
ret
in
ljmp
xor
pop
leave
mov
clc
ret
imul
add
addl
jecxz
jae
pop
outsb
pop
adc
mov
mov
and
in
adc
hlt
test
sbb
mulb
in
orb
addl
andb
mov
xor
xchg
fcmove
jl
into
cs
cli
int3
jns
sbb
mov
mov
add
jns
icebp
scas
sbb
jle
mov
mov
movsb
loopne
sbb
fwait
in
pop
push
or
hlt
xchg
sub
and
sbb
add
stos
dec
xchg
dec
pop
dec
jecxz
imul
loopne
add
lock
fwait
std
jg
mov
std
insl
les
ret
pop
mov
movsl
add
jae
pop
leave
mov
push
stos
push
inc
jecxz
call
or
jmp
push
scas
dec
mov
mov
pop
inc
sbbb
aam
out
sti
xchg
mov
mov
adc
push
mov
ja
jno
add
mov
popa
cmp
cs
inc
hlt
iret
cmp
add
sub
dec
dec
pusha
test
mov
push
ret
rorl
lods
stos
add
rorl
push
add
popf
jmp
test
sbb
imulb
imul
movsb
ret
sbb
pop
mov
add
repz
lock
mov
xchg
jp
rcpps
mov
add
push
xchg
inc
daa
xchg
leave
dec
test
sub
add
push
mov
xchg
movsl
mov
fcoml
push
addb
push
hlt
mov
xchg
cmp
call
lea
rorl
push
inc
roll
rolb
outsl
or
cmp
dec
andb
mov
sti
das
pop
xor
pop
dec
scas
mov
jmp
fucomip
xchg
add
out
jnp
fistpll
mov
out
xor
jmp
mov
mov
loope
cmpsl
jecxz
cli
arpl
imull
sub
or
mov
mov
test
or
movsb
sub
cld
add
add
incl
adc
mov
xchg
fsubrs
jmp
fwait
movsl
aad
jl
test
arpl
mov
and
inc
pop
fwait
test
in
sbb
ja
mov
xchg
cmp
pop
xchg
inc
inc
popf
xorl
pop
out
popa
cs
out
gs
pop
adc
lock
jmp
and
dec
lods
test
mov
fsubrl
ret
inc
lret
or
repz
jmp
mov
ficoms
test
mov
add
and
subb
adc
out
xor
sbb
in
shrb
and
cmp
add
adcb
pusha
push
popa
iret
dec
scas
jmp
adcb
adc
in
arpl
lret
mov
mov
in
xchg
cmp
fdivl
xorb
and
leave
add
addr16
dec
arpl
std
inc
add
pop
and
dec
movsl
pop
pushf
push
xor
push
and
scas
mov
mov
shlb
hlt
dec
dec
orl
into
das
fstps
je
push
pop
xor
ljmp
insb
mov
negl
dec
lcall
movsb
jnp
inc
mov
push
sbb
pusha
dec
mov
mov
xor
lods
mov
leave
mov
mov
xchg
rcll
push
xorl
and
sahf
movsb
mov
mov
movsl
ret
cmpsl
and
negl
je
or
add
imul
test
push
push
add
outsb
and
push
push
cmpsl
in
add
or
add
mov
sub
decb
roll
out
cld
ss
loopne
rcl
enter
or
cmpsl
int3
inc
mov
mov
fadd
jecxz
sbb
add
icebp
ret
fnstcw
mov
testl
das
aas
xchg
sbb
or
dec
xchg
mov
sub
psrlq
add
xchg
mov
and
hlt
push
jle
test
jecxz
mov
cmp
adc
arpl
and
stc
faddl
push
add
shrl
stos
mov
jecxz
sbb
icebp
mov
ret
jg
mov
adc
mov
incl
mov
inc
jge
lcall
jecxz
add
arpl
movsl
sbb
cmp
enter
stos
lea
mov
jmp
jge
mov
imul
jecxz
and
sbb
push
mov
shr
sbbl
sub
insl
fnsetpm(287
mov
mov
lret
add
xor
push
mov
outsb
popf
mov
andb
mov
xor
repnz
fadd
add
add
dec
push
adc
xor
aad
mov
mov
push
mov
pop
mov
mov
mov
xchg
icebp
sub
out
dec
loopne
add
bound
add
and
loop
scas
add
in
xchg
sarb
aaa
stos
push
sub
cli
iret
sbb
mov
bound
inc
sub
shr
ds
pop
sub
sub
jp
call
pop
or
ds
outsl
push
cli
dec
adc
pop
ss
in
movsb
int
push
sub
dec
sahf
fucomi
sbbb
stos
mov
call
rorb
sub
shll
loop
push
sub
mov
sar
jne
mov
cmpsl
mov
add
repz
scas
pop
sbb
push
xorb
fisttpll
lock
popa
mov
fcmove
mull
inc
out
arpl
sbb
sbb
adc
cltd
fimull
ret
or
pusha
push
push
sbb
pop
sub
aam
imul
daa
stos
mov
out
adc
test
mov
and
test
test
or
mov
jge
fwait
mov
lods
or
mov
push
and
add
and
stos
mov
mov
dec
jae
out
insb
fisttpl
movsb
xor
jg
aas
xchg
fwait
jmp
imul
inc
rclb
scas
mov
rcrl
xor
or
les
cmpsl
push
mov
cmpsb
sbb
mov
mov
es
dec
cli
shr
xorb
je
and
pop
mov
or
pusha
push
adc
jmp
mov
test
lods
adc
arpl
int
push
xchg
adc
fimull
clc
mov
out
xor
push
mov
and
cli
ret
ficomps
adc
xor
xlat
mov
in
cmpsb
xor
add
jle
repnz
and
shl
int
cs
cmc
mov
rol
addl
call
push
scas
adc
loop
inc
push
push
jecxz
ficomps
add
xchg
leave
or
mov
mov
mov
test
inc
lods
and
or
das
hlt
fldenv
hlt
inc
xchg
jo
das
loopne
inc
movsb
mov
xchg
daa
mov
xchg
mov
dec
lahf
shl
inc
movsl
das
iret
inc
sbb
repnz
jl
sbb
sarl
and
sub
sarb
aaa
mov
mov
cmp
movsb
mov
pop
mov
scas
test
loope
popf
rcrl
je
in
push
push
shlb
bound
ud2
mov
pop
stc
mov
push
mov
xchg
or
sub
xlat
roll
jnp
xor
mov
movsb
mov
mov
push
or
xor
add
popf
cltd
pop
add
int
lret
arpl
lcall
inc
ret
push
mov
mov
push
cli
das
dec
sbb
mov
push
into
jo
inc
push
dec
mov
add
mov
test
mov
sti
cmc
adc
pop
jl
stos
mov
lret
mov
jns
lea
out
fcoml
je
add
jge
ret
lods
test
popf
bound
xor
fs
pop
or
int3
and
add
loop
pop
jae
pop
lea
adc
fldt
push
test
repnz
mov
out
jmp
lods
int3
and
inc
ss
add
addl
je
out
sbb
subb
xchg
push
mov
cmp
push
cli
dec
es
xchg
dec
sub
outsb
dec
xchg
fiadds
sub
aas
jecxz
aad
mov
scas
sti
test
mov
lahf
ja
xchg
int3
add
and
smsw
cmp
jecxz
cwtl
mov
inc
neg
scas
lods
ret
repnz
repnz
in
call
daa
subb
or
dec
mov
and
icebp
ret
mov
mov
sub
mov
add
add
cmp
sub
daa
addb
dec
data16
or
sbb
sub
fidivrl
cltd
stc
adc
lock
pop
iret
pop
lods
push
loopne
les
insw
test
jmp
inc
jb
inc
adc
orl
mov
push
ja
fildll
popf
dec
cs
cmp
or
fidivs
ds
cmp
xlat
cli
xchg
sub
push
mov
repz
and
imul
mul
pushf
gs
sbb
dec
es
sbb
imul
fcmovb
out
xor
cmpsb
jb
push
push
jnp
add
add
leave
xor
enter
scas
mov
mov
movl
mov
mov
in
test
inc
sub
ljmp
cli
sub
mov
inc
subl
into
add
out
xchg
add
rcl
movsb
and
enter
adc
xchg
add
in
mov
or
into
stc
mov
and
cwtl
or
jno
jmp
mov
mov
hlt
scas
adc
mov
mov
js
xchg
lahf
scas
fsubrs
xor
rcrb
inc
push
inc
iret
lods
cmp
xor
aam
jle
bound
fsub
jg
dec
fwait
scas
pop
stos
jnp
mov
push
push
pop
sub
and
sbb
sarb
xchg
fs
insb
aaa
mov
js
mov
xchg
cmp
mov
mov
cld
mov
adc
xchg
dec
insb
jg
lret
fcomps
popf
mov
mov
inc
dec
xchg
je
jmp
fmuls
daa
dec
add
mov
mov
gs
jae
add
mov
lea
shr
xchg
mov
add
push
stos
insb
setbe
repz
push
loop
and
adc
lds
fisttpl
adc
idivb
lret
into
enterw
mov
stos
pop
cmpl
mov
or
xchg
ret
inc
jae
ret
test
aam
xchg
add
inc
cmpsl
adc
push
sub
arpl
xchg
pusha
fisubs
loop
push
inc
sbb
add
or
ljmp
int
add
or
faddl
rcrb
dec
loopne,pn
mov
adcb
lret
mov
adc
in
sbb
and
lods
cmpl
push
dec
shl
xchg
cmp
fiadds
int
push
and
in
sti
mul
fidivrl
xchg
mov
movsl
stos
das
ret
xchg
cmp
sub
cltd
push
jns
in
sti
popa
xor
add
sbb
jb
popa
adc
adc
xchg
cmp
adc
int3
cmpsl
add
mov
rep
sahf
test
pusha
jecxz
and
sbb
cli
pop
mov
sbb
cli
fcmovu
add
mov
dec
cltd
xchg
int
jecxz
rorl
and
out
sbb
mov
enter
jmp
mov
cld
dec
in
add
dec
mov
loop
ljmp
imul
push
cmpsb
pop
cwtl
add
push
pop
cmp
sahf
test
push
les
sbb
jl
mov
mov
jb
std
or
in
push
jge
mov
mov
add
in
mov
sbb
fdivr
cli
outsl
lret
and
cmpsl
add
xchg
fs
cs
cmpb
sub
mov
in
ret
push
fstl
add
jno
mov
jl
repnz
mov
sub
cmp
pop
xcrypt-ecb
cmpsl
mov
shl
rolb
test
xchg
mov
les
xchg
dec
and
push
inc
pop
fcomps
out
xchg
and
mov
add
ja
sbb
cmc
mov
cmp
movsl
sbb
out
mov
mov
iret
xchg
mov
sarl
add
pop
loopne
test
mov
mov
push
cmp
popf
rcr
and
jbe
lcall
inc
mov
bound
subb
subb
ret
leave
sbbl
push
cmpsb
mov
mov
mov
in
in
fldt
ficoms
cmp
cmp
mov
imul
sbb
add
int3
cmpsl
enter
test
push
in
insb
push
dec
mov
test
jnp
or
push
jmp
dec
push
dec
in
mov
daa
and
into
push
in
inc
lock
inc
test
insb
inc
test
loopw
and
dec
cmpsl
cs
inc
leave
mov
mov
add
mov
and
dec
mov
iret
push
stc
lock
je
popf
mov
adc
mov
and
adc
clc
mov
adc
repz
test
fwait
jecxz
add
ret
fidivrl
sub
repz
xchg
mov
mov
xor
in
fsubrl
xlat
mov
orb
mov
xchg
xchg
in
mov
pushf
push
es
or
addl
test
mov
push
aaa
in
and
daa
mov
mov
and
aas
push
lcall
aam
jmp
sub
jmp
push
lods
jl
xchg
dec
dec
ret
add
mov
loopne
xor
aam
mov
rsqrtps
add
pop
andl
shrl
inc
pop
adc
in
pop
in
sbb
adc
pop
pop
insb
jnp
jg
xchg
mov
repz
push
xorl
decb
lods
cwtl
dec
test
jle,pt
mov
test
roll
pusha
ljmp
mov
test
movl
mov
les
add
setae
in
jle
mov
iret
push
popf
scas
add
and
add
mov
andl
mov
fstpl
inc
xor
dec
les
and
push
mov
mov
jecxz
xor
ja
inc
dec
je
test
outsl
ficoml
out
and
arpl
icebp
out
xor
insb
cmp
jle
mov
xor
sub
lods
or
pop
out
es
pop
and
das
sbb
adc
adc
enter
sub
jnp
push
sub
push
mov
inc
imul
clc
add
addr16
shl
scas
scas
jb
jo
lret
dec
sti
addb
pop
clc
cwtl
sbb
or
pop
xchg
jmp
jecxz
inc
inc
inc
xorb
daa
roll
flds
outsl
add
jns
push
sbb
aam
je
outsb
jb
mov
jecxz
loopne
xchg
push
mov
popf
mov
push
sub
popa
dec
xorb
add
aam
lods
dec
imul
mov
outsl
sub
pusha
aam
adc
rcll
and
shlb
loop
testb
fistl
pushf
lods
xor
add
add
sub
repz
xorb
into
or
cmp
or
je
push
les
dec
xor
inc
or
cmpsb
ds
insl
add
call
sahf
add
and
push
adc
cmp
jnp
lock
sub
adc
mov
pop
fs
in
sbb
leave
lret
popf
sub
sub
hlt
sub
push
mov
shr
sbb
mov
call
sub
sarl
rolb
and
xor
or
xchg
inc
lods
loop
mov
jnp
movsl
mul
jno
push
pop
cmp
imul
mov
lret
outsl
imul
xor
or
sbb
xrelease
mov
xor
mov
or
iret
sarl
dec
mov
mov
mov
repnz
add
movsl
push
mov
mov
daa
movsb
xor
scas
mov
mov
movsb
sbb
adc
cmpsl
iret
push
adc
leave
aad
push
andb
mov
inc
cmpsl
int3
push
imul
inc
aas
mov
sub
fmul
pop
insl
divb
jge
aaa
jmp
lock
cmp
flds
sub
dec
pop
arpl
mov
xor
addl
rcl
jo
dec
loopne
xchg
inc
fsubrs
fwait
shll
stos
ljmp
and
flds
mov
cmpsb
shlb
loop
mov
mov
push
mov
ret
mov
imul
aad
dec
and
push
and
mov
add
push
sub
or
out
loop
out
adc
mov
jle
or
inc
pop
xor
add
insl
xor
push
mov
aad
mov
in
lods
out
fisubl
lret
cmpsl
jg
jmp
mov
sbb
lods
movsl
std
daa
lret
out
loopne
dec
push
shr
in
shrl
fdivrl
andb
call
test
xor
mov
jbe
cmp
lcall
dec
ret
jo
dec
inc
xchg
in
and
movsl
mulb
out
add
int3
cmc
rcr
jmp
enter
dec
sub
sub
iret
sbb
lcall
inc
pop
pushf
lods
filds
or
addb
shll
and
mov
cmpsl
ret
dec
sbb
jmp
xchg
in
cli
push
out
aas
inc
fwait
std
loop
push
outsl
scas
js
or
and
in
fs
arpl
cld
adc
scas
adc
bound
xlat
sub
or
sahf
ret
fistl
xor
das
lret
inc
stc
mov
andl
cli
sub
dec
cmpsb
cmpsl
jle
sub
and
pop
push
push
mov
xor
in
mov
inc
das
adc
dec
std
mov
shld
xor
fists
mov
loop
xor
sbb
xor
int3
or
sub
mov
xchg
sub
and
xchg
dec
shrl
test
enter
dec
sub
xor
outsl
int
notl
lcall
hlt
les
mov
jns
repnz
out
mov
and
mov
out
inc
push
jp
ljmp
push
add
inc
or
dec
out
test
in
mov
scas
or
cmp
sbb
gs
mov
or
dec
inc
mov
mov
iret
mov
jnp
add
pop
push
stos
mov
jl
orb
daa
dec
shl
lahf
jae
dec
cmp
pop
or
cmp
hlt
ds
xchg
lret
dec
xchg
mov
in
sbb
jns
jecxz
pop
or
push
xchg
loopne
shlb
nop
stos
or
add
insl
mov
in
or
das
iret
inc
rorl
stos
mov
adc
or
mov
fs
or
testb
arpl
movsl
dec
sbb
in
cmc
shlb
push
mov
arpl
dec
sub
xchg
dec
fucomp
scas
sub
add
lea
fsubrs
scas
rcr
testl
jno
adc
cs
or
andl
dec
imul
loopne
xchg
add
repz
or
lret
in
inc
cs
andb
dec
test
pop
dec
enter
andl
rcll
add
cmpsl
xchg
xor
mov
aad
ljmp
inc
dec
dec
mov
pop
loop
mov
dec
push
in
push
or
xor
test
lcall
inc
mov
xor
mov
and
xchg
fcmovb
mov
dec
sub
lea
pop
add
ficoml
or
pop
dec
andb
lret
or
int3
xchg
xchg
dec
jl
xchg
adc
xor
inc
add
and
fistpll
mov
fistpl
jbe
xor
dec
dec
sti
and
or
daa
subb
cmp
push
pop
push
add
test
sbb
and
pop
dec
fisubs
xorb
dec
in
jmp
scas
das
jp
add
push
push
lahf
cs
loop
ret
dec
rcrb
and
add
add
inc
dec
jge
and
pop
xchg
iret
pop
aas
add
jnp
dec
imul
arpl
lods
aaa
roll
push
or
mov
mov
sbb
popf
push
fimull
mov
xchg
xlat
lret
sbb
adcb
dec
xor
popa
mov
stos
rorb
es
sbb
sub
shl
push
sbb
int
sub
jae
or
or
testl
sbb
inc
mov
stos
mov
repz
dec
cltd
mov
cmpsb
push
pop
cmp
and
mov
mov
int3
sbb
imul
mov
xor
cmpb
jae
xchg
roll
sbb
xchg
and
add
movsb
bnd
or
mov
mov
mov
dec
fs
dec
subb
ret
repnz
pusha
andl
mov
mov
imulb
bound
xchg
int
or
inc
inc
pop
cmp
sbb
ljmp
xor
mov
or
arpl
loop
add
mov
mov
jne
fiaddl
lds
adc
cld
add
mov
mov
xor
mov
push
rolb
mov
sub
testl
cmpl
insb
enter
lahf
jecxz
push
icebp
pop
mov
inc
mov
les
fwait
test
xchg
mov
xchg
popf
mov
inc
sbb
call
push
inc
jmp
stos
xchg
ret
inc
push
aas
sbb
jae
push
pop
pop
inc
sub
scas
les
xor
sub
add
jno
push
ljmp
aas
dec
mov
adcb
ret
scas
dec
sub
push
cli
test
lea
push
cmp
mov
push
add
stos
mov
xchg
xor
sbb
in
cmpsl
dec
and
mov
aam
dec
lea
or
shrl
lock
adc
sbb
fisttps
push
adcl
fsub
xchg
cld
and
xlat
out
mov
xchg
xor
lret
and
mov
mov
idivb
xor
sbb
lock
rolb
pushf
xor
in
mov
fldl
mov
pushf
cmp
inc
xchg
fildl
and
push
cmp
pop
mov
ror
jl
ja
gs
jae
nop
mov
sub
nop
arpl
daa
pop
loopne
out
mov
outsb
jmp
mov
daa
mov
cmp
repz
add
mov
subl
bound
adcb
mov
dec
fmuls
sub
sub
iret
push
in
addb
lret
shlb
mov
sbbb
test
sbb
or
arpl
push
loop
sub
lea
imul
dec
movsl
lock
pop
in
pop
inc
aaa
dec
outsb
les
mov
jo
push
push
in
mov
push
pop
cmpps
push
mov
xchg
sub
pusha
outsl
mov
mov
or
dec
mov
repnz
fwait
ss
subl
movsb
adc
sbb
add
cltd
or
loope
jns
mov
outsl
sub
mov
jp
iret
les
push
xor
xchg
aas
pushf
add
fisttpll
fwait
adc
test
sbb
xchg
xor
insl
pusha
loopne
cmp
movsb
xchg
cmpsb
lods
je
push
shl
adc
lea
sbb
inc
jns
ret
lods
dec
push
mov
popf
lods
cmp
test
iret
addl
insb
xchg
sub
outsb
imul
xorl
mov
mov
mov
mov
sti
pop
sub
loop
lret
xchg
cmp
int3
int
inc
add
inc
outsl
fcomp
mov
mov
scas
je
cmp
mov
inc
stos
daa
jmp
push
shl
adc
mov
cmpsb
fsubs
jno
addr16
xchg
mov
push
cmp
lret
jae
dec
lea
xchg
stos
jg
mov
sub
xor
xchg
mov
inc
fadd
sbbb
push
add
push
mov
xlat
mov
lret
int3
cmpsl
mov
cld
pop
dec
xchg
push
mov
sub
addb
mov
mov
sub
push
bound
jecxz
adcl
lcall
mov
and
mov
inc
mov
and
push
aas
movsl
cmpsb
pop
cmp
dec
daa
das
inc
fucomi
iret
jmp
test
mov
sbbb
outsl
xchg
and
mov
or
addl
push
roll
faddl
xor
push
push
icebp
shrl
pop
jns
hlt
mov
repnz
gs
ja
and
mov
push
add
sub
mov
mov
mov
mov
fcoml
test
cmp
xchg
push
mov
and
shlb
repnz
mov
mov
pop
or
add
xchg
add
fisttpll
mov
dec
pop
add
aas
enter
leave
pusha
fwait
lds
cmpsb
jl
sbb
mov
xchg
es
out
outsb
sbb
cmp
xchg
xchg
adc
xlat
loope
shll
dec
pop
shrb
add
ret
daa
int3
jmp
stos
sti
int3
mov
ror
movsl
push
mov
dec
ror
sarl
add
andl
jae
or
mov
xor
adcb
icebp
cmp
mov
lock
pop
enter
imull
ror
ja
mov
cmpsl
pop
clc
pop
cld
mov
cli
cmp
int
flds
mov
sub
dec
push
pop
lea
movsb
adc
sahf
sbb
fmul
fs
in
add
sub
ja
mov
or
dec
mov
bound
ror
ret
pop
ja
ret
movsb
mov
fldcw
aaa
mov
sahf
lods
in
movb
cmp
loop
enter
inc
or
cmpl
pop
inc
mov
das
fcompl
cmpsb
xchg
je
mov
mov
int3
ljmp
and
or
push
push
push
loop
clc
adc
addl
xchg
sbb
das
xchg
sbb
xor
rorl
cmpsl
aaa
dec
jmp
sbbl
enter
sbb
in
pushl
aaa
mov
push
mov
rcl
cmp
and
mov
movsb
xor
jb
daa
mov
jne
je
test
inc
iret
pop
icebp
ljmp
sbb
or
outsb
rorl
aad
push
adc
dec
mov
push
mov
fs
or
sub
xchg
fcompl
in
mov
mov
pcmpeqb
mov
sbb
test
scas
sub
xor
pop
pop
and
clc
rcl
shl
add
jmp
mov
sub
aam
cs
gs
fs
test
and
add
nop
movsl
int
inc
jecxz
scas
loope
mov
pushf
add
fwait
cmpsl
xor
movsb
in
jnp
ret
std
mov
adc
adc
jmp
mov
in
out
or
push
add
sub
outsl
ljmp
testb
out
je
stos
cmpsb
cmc
movsb
jecxz
push
push
cmp
and
cld
xor
outsb
or
xchg
or
xchg
push
jae
nop
sbb
mov
cmp
rorl
inc
rcrb
in
jnp
cmp
mov
xor
mov
sbb
movsl
mov
ja
xor
jmp
sbb
jno
dec
pop
cmp
cs
mov
repnz
aam
mov
mov
xor
aam
inc
je
jnp
or
xchg
cmp
push
les
cmp
sbb
inc
sbb
sbb
and
jne
or
adc
lock
push
xor
dec
idivb
xor
mov
jmp
jle
jno
idiv
jmp
pop
dec
mov
movsl
test
out
jne
push
orb
div
mov
adc
orb
andl
mov
add
sub
push
mov
add
ret
push
rorl
cld
sub
aaa
add
imul
add
ret
cmp
fld
jp
out
cmp
push
xor
mov
loopne
add
or
add
sarb
cmc
sub
inc
int3
mov
inc
sub
aad
sub
inc
movsl
imul
js
stos
imul
pop
rolb
lea
jne
xlat
scas
inc
pop
jmp
mov
xchg
add
lcall
loope
iret
jecxz
mov
sbb
cmp
lea
mov
mov
inc
subl
mov
sar
add
xor
lret
inc
pop
mov
addl
ret
fsubs
sbb
sub
mov
movsb
xor
lea
jo
outsl
and
cld
std
sub
data16
int3
adc
adc
cmp
and
xchg
fildl
mov
lret
std
cli
or
add
bound
jo,pt
jecxz
aas
loop
add
push
jns
jl
or
out
popl
test
inc
jmp
inc
push
rcrl
fwait
cmpsl
jmp
scas
sbb
xchg
cmpsb
incb
cmc
cmc
and
fcompl
popf
in
jmp
sub
mov
inc
aad
sahf
mov
mov
je
repnz
cli
lret
mov
in
add
clc
lret
sub
sub
xchg
gs
push
loopne
div
pop
divl
ret
dec
pop
outsb
leave
sbb
xchg
pop
mov
xor
push
or
mov
mov
inc
repz
icebp
fcmove
inc
repnz
add
and
mov
in
fsubrl
fadd
daa
clc
or
sbb
dec
sub
daa
or
jmp
mov
inc
lea
sub
mov
mov
subl
and
add
cmp
mov
addl
mov
cmpsl
call
add
clts
dec
ds
inc
sbb
and
cmpsb
neg
test
sbb
scas
rorl
adc
stos
mov
jae
push
sti
nop
fisttpll
mov
andb
inc
je
dec
out
sbb
fst
sbb
adc
mov
out
mov
ret
lods
cmp
outsl
mov
insb
int3
adcb
and
mov
add
incl
ret
adc
adc
push
dec
leave
add
cmp
lock
imul
scas
push
add
dec
out
addr16
inc
das
imul
sbb
movsb
cmp
mov
popl
loop
mov
sub
ds
emms
jmp
pop
in
pop
xor
loop
sbb
cmpl
das
in
hlt
popf
add
dec
das
sbb
test
mov
add
adc
push
imul
dec
xor
xchg
imul
inc
sbb
adcl
loop
push
cmp
pop
cmp
and
movsl
sub
adc
into
xor
xchg
push
dec
dec
imul
mov
add
sbb
lds
jp
ret
sbb
icebp
sahf
push
push
xorl
mov
mov
cmp
pop
test
cld
mov
lods
dec
les
xchg
mov
vscatterdps
shlb
mov
inc
push
xlat
sbb
dec
lret
add
cmpsl
mov
ret
push
cmpsl
fcomip
lcall
stos
jmp
fdivrp
bound
xchg
or
insb
lock
and
inc
ret
add
mov
inc
das
add
jnp
dec
int3
loopne
add
je
mov
scas
mov
test
mov
ret
mov
mov
scas
loopne
jns
xchg
and
movsl
xorl
fisubrl
cs
mov
adc
in
fcmovu
adc
dec
scas
test
add
mov
mov
cmpsl
clc
nop
movl
fs
sarl
push
add
adc
aas
mov
outsb
mov
add
subl
mov
fisubs
mov
pop
shl
scas
cld
ret
mov
mov
jb
stos
or
sbb
loopne
xor
sub
jmp
jo
repz
lret
xor
mov
arpl
stos
mov
test
xor
test
pop
pop
nop
adc
xchg
inc
aas
push
sbb
add
jmp
cmp
cmpsl
stos
or
jecxz
test
or
add
roll
mov
popa
cmpsl
pop
movsb
repnz
aaa
pop
xchg
cmpsb
cs
jno
and
inc
pusha
dec
mov
push
outsb
negl
nop
ret
ret
movsb
push
cmp
stc
mov
push
add
push
mov
xor
ret
pop
and
jmp
sbb
and
push
ret
add
xchg
mov
add
neg
adc
push
xchg
pop
call
into
lods
jne
inc
cmpsl
or
add
hlt
jl
bound
cmp
jp
sub
or
shrb
cli
sbb
movsb
enter
in
into
test
mov
jmp
jnp
call
pushf
lahf
orb
rorb
into
dec
adcl
mov
sub
add
cmp
repz
jmp
jmp
sahf
and
push
mov
lds
push
sub
ret
arpl
es
and
shll
add
xor
cmpsl
loop
insb
pcmpgtw
or
roll
add
jle
orb
mov
psubw
xor
cmpb
ljmp
sbb
cs
lahf
in
sbbb
insl
pop
out
and
and
xor
lahf
es
mov
repnz
adc
out
xor
add
or
out
sti
iret
mov
imul
repnz
adc
shll
and
out
cli
dec
fsubl
stos
mov
and
addb
pop
push
outsl
jg
jp
xchg
cmp
or
inc
imul
add
in
lods
cmc
es
loope
leave
ror
or
push
xchg
fwait
imul
imull
subb
cmp
xchg
repnz
push
loopne
shll
sub
add
int
jecxz
rclb
imul
dec
sub
in
xchg
imul
lret
jno
jae
sahf
add
mov
mov
mov
and
cmpsl
and
iret
xor
pop
lahf
xchg
mov
ret
shl
addl
pop
mov
aas
fwait
ret
call
push
dec
mov
ret
mov
xchg
in
mov
push
mov
rep
or
sbbb
mov
pop
push
push
xlat
mov
pop
mov
lahf
fmuls
jecxz
ja
loopne
push
shrb
and
inc
lods
jbe
cmp
lret
and
inc
imul
inc
cmpsl
adc
push
loop
push
cmpsb
in
in
mov
imulb
daa
push
ja
mov
jmp
add
mov
mov
mov
mov
subb
rclb
imul
push
subl
clc
xchg
mov
andb
or
adc
xor
das
arpl
frstor
cmpsb
int
add
stos
xchg
aas
mov
cld
movsl
dec
movsb
ret
retw
push
subb
mov
pusha
in
dec
mov
add
shl
ljmp
dec
xchg
pop
jno
push
rclb
adc
and
mov
adc
aad
and
stos
leave
dec
movsl
jmp
jmp
jae
lret
out
dec
lods
imul
test
cli
xchg
adc
stos
add
xor
adc
jno
dec
fists
xchg
scas
inc
jecxz
sub
pop
push
filds
into
sbb
add
xor
pop
insl
and
inc
or
jecxz
bound
cmp
sub
movsl
jle
pop
push
clc
in
popa
sahf
sbb
mov
add
hlt
movsb
xchg
mov
and
inc
lock
sub
das
xchg
jns
sub
cli
xchg
bound
cli
mov
pushf
mov
jb
inc
sbb
mov
mov
xor
fldl
xor
push
enter
ret
xor
or
xchg
mov
rol
mov
mov
mov
aaa
movsl
shrb
pop
jnp
cmpsl
fptan
das
dec
mov
mov
xor
push
cmp
sbb
sub
xchg
sub
nop
adc
or
jns
mov
mov
js
ret
push
roll
mov
sbb
mov
mov
mov
jnp
inc
cwtl
or
pop
lods
mov
mov
popf
jbe
add
stos
xlat
dec
and
mov
fs
push
rcll
pop
andb
push
mov
sbb
xor
adc
cmp
add
add
pop
data16
or
test
out
xchg
stos
jnp
jp
lret
movsb
out
dec
and
aaa
and
adc
call
aaa
je
lds
xchg
pusha
cmpsl
push
clc
es
movsl
pop
rcr
or
lods
lcall
mov
insb
xchg
nop
pop
arpl
adc
in
test
je
rcr
or
imul
sbb
xchg
jmp
push
in
lds
je
jg
das
xchg
sub
enter
popa
mov
sub
xchg
push
dec
push
cli
nop
test
rclb
cltd
shll
jno
and
mov
jecxz
sbb
jmp
inc
xor
fiadds
cmp
inc
aaa
fisubrl
loop
mov
repnz
push
test
loopne
push
mov
int3
adc
imul
xor
outsb
xchg
in
push
fwait
xlat
stos
add
or
jl
xchg
shrl
push
andb
add
mov
cld
dec
jbe
inc
mov
mov
aad
jge
mov
push
rcl
shlb
mov
rclb
jae
leave
enter
sti
mov
push
adc
les
xchg
cmpsl
call
outsl
jle
js
or
xchg
inc
mov
fldl
repz
in
cs
fildll
jge
ret
pusha
dec
loopne
movsl
push
dec
and
rolb
and
in
sbb
pusha
sti
repnz
inc
xchg
xor
cld
push
es
sbb
mov
ficomps
not
cli
mov
aam
stos
fcmovbe
cli
sub
push
sbb
jbe
lret
movsb
mov
push
in
mov
push
inc
jmp
in
adc
add
mov
push
adc
das
out
mov
adcb
mov
in
mov
mov
dec
int3
add
cwtl
shll
xor
cmpsb
cmpsl
ljmp
or
insb
adc
mov
in
sub
and
xorb
mov
sub
adc
repz
xchg
in
add
mov
repnz
enter
sub
mov
inc
ljmp
and
adc
js
sub
dec
inc
jp
dec
sbbb
inc
mov
adc
fisubrl
arpl
movsb
mov
in
lahf
rcrb
cmp
ljmp
inc
nop
push
sub
test
das
and
shll
jp
sub
xor
ret
dec
aas
addr16
xchg
push
xchg
rclb
or
movsb
push
add
fsubl
pop
add
hlt
frstor
outsl
or
adc
jge
and
test
cli
loope
xorb
je
add
sarb
sahf
xor
stos
xor
cmp
mov
imul
dec
into
scas
pusha
loope
dec
mov
xorb
sbb
jns,pt
jg
mov
dec
fistpl
pop
leave
dec
xchg
adc
fwait
sub
cmp
push
ficompl
fs
dec
or
and
add
mov
mov
or
sbb
andb
fstpl
cmp
loop
filds
push
sbb
je
push
pop
push
int
push
stos
cli
mov
sbb
jle
and
push
dec
xorb
dec
cmpsl
ficompl
inc
cmc
fsubs
icebp
push
and
shll
sbb
dec
add
xchg
fmull
push
out
push
inc
sbb
add
rorb
inc
mov
mov
mov
addb
divb
lahf
add
mov
push
aam
cmpsb
loopne
add
call
jne
or
ljmp
gs
pop
and
dec
mov
pop
test
cmp
leave
rcll
xor
and
or
push
loope
fbld
mov
push
hlt
push
sbb
jecxz
mov
nop
shr
adcl
fisttpl
sub
testl
gs
pop
mov
rcr
pop
inc
daa
push
sti
xor
lea
lret
outsb
sbb
out
fcoml
add
cmpb
arpl
mov
xor
mov
andb
mov
mov
cmp
mov
pop
sbb
arpl
lcall
sub
dec
push
cmp
xchg
and
ljmp
in
in
cmp
and
stos
movsl
cmpsl
add
and
jl
ret
jecxz
insl
mov
rcrl
and
dec
xchg
nop
mov
pop
mov
and
repnz
dec
add
xor
and
or
jnp
addl
sarl
add
cmp
or
scas
and
stc
loopne
jae
dec
lds
add
aad
adc
aaa
xor
pop
popa
out
push
adc
pop
ret
out
mov
add
test
sti
cwtl
xchg
outsl
stos
pushf
ss
pop
lcall
imul
xor
xor
jp
inc
push
xor
add
lods
mov
test
hlt
mov
cltd
lds
lock
scas
mov
mov
rcr
fiaddl
dec
and
ljmp
stos
jl
mov
and
sub
seta
jp
and
dec
movsl
ss
data16
idivl
insl
shl
out
or
mov
aas
test
loop
ds
sti
ret
test
scas
cmc
aam
pop
fucomp
sub
push
xchg
out
gs
inc
cmp
int
dec
cmp
jo
and
sbb
xor
dec
push
or
cmp
push
mov
divl
ljmp
enter
ljmp
mov
sub
and
jmp
jb
or
add
xor
jecxz
fstps
pop
repz
xor
push
stos
repz
mov
cmp
das
xchg
jne
inc
dec
mov
repnz
shlb
insb
push
arpl
movsb
dec
dec
stos
imul
in
mov
and
insb
cmpsl
xor
mov
jns
mov
dec
push
jle
pop
stos
push
add
int
pop
jecxz
orb
and
add
lret
mov
xchg
insb
xchg
ret
dec
xor
shrl
fisubl
out
dec
rorb
sub
cmpsb
mov
jmp
push
outsl
mov
pop
inc
mov
push
arpl
aaa
scas
mov
mov
sub
fldenv
and
loopne
jecxz
out
mov
aam
cmpsb
movsb
ja
xchg
imul
in
push
cmpsb
add
dec
lahf
sar
pop
pushf
repnz
rol
xlat
dec
xchg
scas
ret
and
pop
push
lds
stos
lock
aad
mov
xor
jne
dec
in
iret
push
cld
lods
jnp
aas
inc
ret
ljmp
cmp
popa
xor
cmpsl
push
mov
xor
mov
std
enter
jae
sub
dec
xor
lret
add
adcl
dec
push
mov
push
xlat
adc
phsubd
mov
rcr
push
or
xor
dec
push
jmp
out
xor
xor
mov
dec
xchg
repz
adc
xor
dec
mulb
or
sub
mov
lea
push
pop
shll
cmpsl
loop
jno
mov
inc
mov
and
pop
mov
and
xor
pushf
movsl
out
lock
xchg
add
xor
xor
les
pop
push
insl
pop
jmp
leave
push
cmpsb
mov
ljmp
pop
addr16
xchg
fdivl
pop
daa
push
mov
push
dec
mov
into
loop
add
hlt
push
xlat
or
arpl
xchg
movsb
jno
cmpsl
xchg
push
adc
popa
push
jno
mov
mov
adc
cmp
dec
or
mov
mov
xchg
dec
push
inc
xorl
repnz
mov
ljmp
mov
xor
mov
dec
or
bound
cmp
cmp
mov
pushf
test
mov
imul
shlb
ljmp
xchg
ret
and
mov
ret
xchg
jmp
xchg
out
mov
add
mov
mov
test
mov
cmp
pop
sub
fimuls
pop
and
add
mov
ret
and
bound
dec
mov
push
mov
arpl
in
push
loop
sti
mov
sub
call
in
dec
xchg
mov
out
push
dec
dec
or
out
ss
xor
in
adc
inc
sbb
jbe
div
and
jl
sbb
sti
test
bound
int3
adc
shrb
outsl
pop
mov
daa
cld
sbbb
jno
loop
push
jge
out
daa
gs
je
das
adc
jg
orl
jnp
mull
std
push
fwait
inc
shlb
cwtl
mov
loope
push
cmp
jne
sub
scas
call
and
loopne
push
sbb
push
call
jne
mov
repnz
jl
mov
out
xor
xchg
subb
in
sbb
shl
cld
dec
jmp
cmp
inc
ljmp
mov
xor
test
xor
add
fidivl
into
sub
push
sahf
std
or
ror
jb
pop
cmpsb
aam
mov
addb
mov
xor
sarb
xchg
imul
mov
adcl
cmp
int3
xor
jnp
imull
or
mov
inc
jg
dec
push
test
jae
cmp
cmpsl
into
jo
sub
daa
jbe
push
mov
in
adc
dec
or
cli
bound
add
add
xchg
mov
inc
subb
negl
xor
sub
fidivs
int3
out
lret
mov
push
cs
arpl
insb
aas
mov
scas
outsl
push
cmp
pop
fstps
jae
cmp
add
fucomi
ret
fs
jl
inc
push
and
inc
addb
movsl
stos
xor
pop
mov
cmpsl
addr16
xchg
and
test
dec
or
ljmp
stos
std
pop
dec
in
ljmp
pop
jne
mov
ret
imulb
push
mov
iret
sbb
dec
push
adcl
cs
xchg
in
ss
fs
and
loop
mov
out
mov
dec
imul
ljmp
adc
flds
out
movsb
mov
les
sub
inc
add
add
pinsrw
je
jge
enter
pushf
adc
cmpsl
test
dec
pop
push
add
push
mov
mov
xor
fisttpll
cmp
xchg
and
sub
addr16
lret
mov
mov
and
das
push
imul
mov
sub
insb
pop
inc
and
inc
pop
ds
orl
fs
and
scas
mov
ret
pushf
rclb
xor
out
push
clc
fadds
adc
repz
dec
dec
mov
mov
mov
or
outsl
out
movsl
ret
dec
lods
fisttpll
adc
shrb
std
ret
xor
pushf
cmpsl
fsubrp
inc
aad
push
popa
lcall
shll
aas
add
adc
xchg
xor
negb
notb
clc
test
xchg
insb
es
dec
push
arpl
jnp
push
dec
shll
mov
add
jecxz
add
fdivl
insb
iret
dec
stos
pusha
mov
mov
mov
mov
xor
in
not
cmpsb
and
and
shl
mov
cli
add
stos
mov
or
lods
push
dec
shll
fucom
rorl
push
adc
and
leave
jne
or
cmpsb
push
les
insb
xchg
push
sbb
and
sub
ds
mov
shl
subb
aaa
popa
popf
movsl
mov
jg
enter
add
loope
inc
dec
xchg
xor
xor
and
dec
dec
mov
inc
in
push
ret
int3
push
ret
stos
movsl
mov
and
imul
dec
or
jmp
xor
sbb
push
aam
movsb
mov
loop
or
lret
gs
repz
popa
mov
dec
add
repnz
aas
shll
scas
jne
in
and
int3
push
mov
clc
push
mov
sub
cmp
jmp
insb
imul
int
adc
fidivrs
gs
xchg
jns
aam
xchg
ljmp
add
fs
or
xchg
lea
outsl
push
cmp
mov
aam
lds
inc
decl
popf
lds
add
xor
adc
fcoml
push
in
das
scas
mov
or
mov
sbb
loop
ror
repnz
cmp
leave
mov
hlt
mov
push
xchg
mov
cmp
dec
cmp
mov
push
xor
leave
cmpsl
push
dec
or
ret
les
mov
ficoms
iret
or
xchg
or
rorb
or
inc
lea
dec
mov
ret
hlt
mov
fstl
rorb
shrl
add
call
and
jmp
cs
das
cmpsl
push
stos
mov
push
addr16
mov
iret
rcll
push
mov
mov
or
mov
or
dec
mov
or
sbb
pop
mov
push
iret
inc
add
jnp
addr16
and
fs
popf
divb
xlat
xchg
ja
hlt
daa
lea
push
aas
cmp
add
test
or
or
or
add
addb
xor
ret
mov
fs
mov
cmpsl
mov
push
jae
mov
jne
mov
stos
rcrl
cmp
repnz
xor
inc
mov
sub
in
aam
xor
push
fldenv
xor
repz
mov
stos
lock
jmp
ljmp
mov
cmp
add
das
mov
pop
cmp
mov
imul
fisubs
xchg
or
sar
fs
test
pushf
xchg
jnp
cmpsl
mov
add
xchg
imull
imul
adc
rclb
jbe
mov
push
ret
sar
xchg
add
push
inc
cmp
fs
aas
push
jl
mov
outsb
adc
sub
mov
pop
out
mov
mov
add
lods
movsb
fadds
addl
or
cmp
push
sbb
popa
loope
ja
xchg
or
ds
stos
push
push
call
loop
imul
stos
int3
out
pop
sub
repz
cmpsb
mov
sbb
jecxz
pop
mov
mov
cmpsl
out
mov
jge
mov
test
adc
daa
clc
rcl
push
sub
test
xchg
outsb
sub
fxch
in
mull
shlb
pop
shll
or
mov
sub
bound
pop
outsb
mov
fsubl
sarb
cmp
imul
pop
jecxz
mov
jno
aaa
mov
mov
test
lret
or
das
lods
dec
stos
xchg
adc
int3
adc
sbb
rorl
jmp
test
leave
cmpsb
xor
mov
gs
push
movsb
nop
xchg
xchg
out
push
daa
ljmp
or
jmp
stos
stos
mov
xchg
cli
sete
loop
jnp
adc
push
cmpsb
xor
cmpsl
mov
dec
mov
or
shrd
stos
dec
pop
xor
jnp
and
mov
loop
rorl
cmp
lret
mov
lods
pop
add
jns
clc
repnz
popf
push
push
or
in
mov
and
inc
ja
inc
pop
int3
push
jo
lret
stc
shrd
movsb
lods
je
xor
lret
lahf
rol
jbe
es
leave
cwtl
les
mov
mov
dec
push
cmp
and
xor
popaw
adc
fmul
jmp
adc
outsl
mov
add
xor
xor
fists
das
ret
cmc
xchg
arpl
mov
outsb
pop
jns
das
imul
cmp
adc
add
lock
outsb
push
out
aaa
mov
xchg
add
mov
mov
addr16
rorl
mov
xchg
lock
rcl
imul
std
mov
inc
daa
outsl
fldenv
aaa
inc
movsl
mov
popf
mov
gs
xor
daa
push
mov
mov
adc
sbb
or
mov
into
dec
xor
add
cmp
cwtl
sbb
jmp
xchg
adc
jnp
repz
movsb
popa
lret
mov
push
das
cld
movsl
cmp
or
inc
outsl
movsl
mov
jns
in
gs
das
aam
out
cmpsb
and
cmpb
mov
orb
test
cwtl
mov
rorl
cmp
xchg
mov
cmp
or
lods
mov
lods
int3
test
jno
jge
xor
dec
xor
add
cmpsl
pop
ss
mov
dec
or
mov
aas
inc
ljmp
aaa
add
es
xchg
cmp
push
fistpl
test
xchg
js
jmp
mov
xor
movaps
push
mov
sub
add
insl
mull
cmc
cmp
mov
in
cltd
adc
xchg
adc
sbb
pop
jecxz
test
shrl
lods
add
adc
stos
sub
rorb
outsb
lcall
mov
pop
jp
cmc
aas
jge
add
and
decb
aad
aam
xor
pop
mov
inc
push
shrb
or
mov
cld
sbbl
movsl
mov
jecxz
leave
xor
roll
ret
das
ds
in
lret
add
mov
mov
mov
nop
addr16
jb
lcall
push
cld
jns
call
lods
mov
dec
jne
push
mov
orb
arpl
fidivrl
and
add
dec
cmp
cmp
jno
lds
push
or
jl
xchg
leave
xor
arpl
neg
push
xchg
repnz
pop
adc
out
pop
lods
leave
push
int3
jbe
rcr
aas
jno
xchg
add
shrl
fstpt
pop
aam
bound
outsl
and
imulb
xchg
in
dec
add
add
into
adc
je
xor
cmp
and
dec
daa
mov
dec
inc
jns
xacquire
mov
cmp
movsb
stos
add
cmp
pushf
in
outsb
dec
out
mov
mov
push
repnz
mov
dec
xchg
cs
mov
das
xchg
andb
xchg
icebp
hlt
cmp
jo
lcall
push
xor
imul
or
sub
inc
out
decl
rolb
dec
sbb
and
repnz
add
cmpsl
iret
jmp
int3
cli
ret
mov
and
mov
mov
sahf
pop
loop
pop
mov
sbb
je
ret
stos
fldl
mov
add
mov
orb
mov
push
imul
xor
push
cmpsl
enter
cmpsb
sub
ret
mov
push
les
fisttpl
xchg
shl
dec
dec
fisttpll
cmp
scas
xchg
insb
popf
push
mov
icebp
xor
inc
dec
mov
mov
xchg
add
out
ror
or
rcll
outsl
movaps
inc
xor
push
push
roll
cmp
inc
dec
ret
jns
aas
dec
jno
sub
mov
mov
push
or
lock
jnp
cmpsl
mov
outsl
sub
push
stos
incb
push
xor
dec
jp
ljmp
sub
or
fidivs
mov
fdecstp
xchg
and
and
sbb
ret
add
imul
ret
and
dec
jl
ljmp
cmp
jno
push
fstpt
push
loop
shlb
je,pn
or
sbb
imul
push
cmp
into
cmpsb
andb
mov
imul
sbb
or
add
in
lock
cli
mov
pushf
jmp
mov
into
stos
inc
stos
fstpt
mov
ret
mov
cmpsl
jns
xorl
lahf
clc
call
add
cmpsb
incl
jno
mov
jp
xchg
add
mov
cmp
add
mull
repz
xor
xor
cmpsb
rorb
rorb
mov
pop
int3
out
jecxz
nop
and
sarl
mov
test
mov
jg
ja
or
lahf
mov
push
adc
mov
jecxz
pushf
cmp
xchg
cli
stc
orb
test
sub
mov
push
gs
jmp
notb
outsb
add
and
rcll
call
jno
icebp
push
cmp
ret
sub
xor
xor
add
and
popa
mov
lods
fimull
ss
test
arpl
or
insb
xchg
ljmp
insb
arpl
mov
data16
aaa
jecxz
test
fsubrl
outsb
shrb
shll
mov
jmp
loopne
xrelease
ret
mov
xlat
in
int
ja
iret
cmpb
dec
push
xor
add
cmp
iret
jae
in
popf
in
xchg
push
repz
orl
xchg
loopne
test
cmpsl
xchg
lret
hlt
and
cld
add
in
mov
divb
push
push
in
in
subl
jmp
orb
es
push
subl
movsb
or
ss
pop
cmp
mul
jp
xor
sti
pop
std
mov
inc
leave
shr
mov
cld
or
or
xchg
and
push
jbe
push
sbb
subl
das
les
mov
ja
mov
fbld
jb
call
dec
sub
in
lahf
push
push
or
mov
out
xor
aam
aad
roll
xor
fs
je
out
or
loope
out
cmp
popf
les
adc
dec
lret
jl
mov
inc
movl
mulb
subb
mov
int3
inc
stos
mov
mov
dec
fwait
jmp
inc
mov
and
cmpsl
add
fistpl
sbb
insb
push
inc
mov
xchg
imul
cmp
mov
adc
in
test
mov
or
cmp
jno
pushf
cmp
mov
ljmp
xor
cmp
inc
or
mov
xor
mov
jmp
or
jns
movsl
jl
cmp
add
shll
xchg
bound
repnz
add
icebp
imul
mov
ret
cmpsl
inc
mov
scas
mov
jb
mov
mov
ljmp
sbb
pop
cmp
add
add
mov
cmpsb
fmuls
cltd
sti
pop
inc
ja
add
fists
mov
or
fwait
inc
xchg
out
popf
mov
or
jp
stos
cs
rolb
mov
push
inc
push
aaa
ss
int3
mov
push
dec
dec
test
das
inc
scas
enter
sub
inc
jp
push
lds
xchg
sub
jecxz
dec
into
jecxz
inc
sti
jmp
xchg
popl
or
js
aas
imul
push
push
sbb
inc
adc
hlt
das
jge
sbb
push
mov
shrl
test
dec
adc
mov
outsl
pop
daa
xor
and
ja
mov
aaa
xor
mov
cmp
push
dec
aam
jbe
mov
into
xor
inc
pop
mov
sbbb
ret
test
mov
lret
ret
enter
pop
icebp
add
or
jl
add
xor
xchg
xor
mov
mov
mov
inc
mov
out
iret
out
fdivrp
xor
fistl
dec
push
inc
sbb
jnp
cmc
fisttps
int
int
cwtl
int
outsl
mov
outsb
cmp
lock
and
outsl
stos
mull
and
mov
and
dec
mov
or
jno
out
push
xchg
outsl
xor
shlb
sub
jg
xor
and
icebp
pop
cmp
sbb
loopne
sbb
xor
xchg
cwtl
ss
dec
orl
push
imul
cmpsl
push
push
imul
adcl
cmp
aam
fisttpl
xchg
arpl
xor
jle
sti
push
and
int3
lods
add
push
cmp
push
mov
shl
pop
fisubrl
pop
cmp
in
mov
add
push
jnp
mov
lds
add
fsubrs
push
jecxz
cmpsb
adc
dec
pop
lcall
push
scas
push
xchg
testl
pop
cmp
paddq
fistpl
ss
and
inc
add
les
aas
mov
mov
mov
out
addr16
rorb
inc
mov
xchg
xchg
inc
xchg
sbbl
es
loop
mov
lds
mov
repnz
mov
or
shr
sub
cmp
sub
xchg
mov
cmp
jmp
addr16
dec
mov
push
insb
pop
cld
arpl
scas
pop
adc
ret
in
sbb
jo
and
les
stos
leave
in
decl
shl
aad
repnz
lods
jne
das
test
inc
push
mul
or
mov
sbbb
dec
xor
mov
addl
in
push
adc
xor
push
outsb
cmp
insb
loope
imul
lret
xchg
pop
das
cmpsl
pop
ss
dec
sub
mov
leave
imul
mov
jmp
xchg
out
mov
jbe
fistpl
orb
pop
push
cmp
and
roll
outsb
jl
pop
sub
bound
pop
mov
sub
subb
push
xchg
out
stc
xor
mov
xchg
mov
das
mov
mov
inc
pop
mov
xlat
cmp
xchg
ss
mov
je
ss
lds
push
enter
mulb
imul
pop
scas
adc
mov
and
dec
lds
fildl
sbb
cmpsl
mov
mov
lods
inc
fcmovb
jg
fcomip
insb
stos
adc
ret
aad
mov
xchg
adc
cmp
jae
fistl
mov
adc
fs
orb
push
std
jbe
and
sub
cwtl
sbb
std
mull
je
movsb
xor
hlt
aad
test
outsb
jne
bnd
lods
andl
push
leave
out
sti
mov
shr
int
lcall
dec
cmp
repz
inc
pop
lods
pop
or
or
sbb
pop
ss
std
sqrtss
jp
lret
mov
arpl
imul
and
jne
dec
pop
stos
push
sbb
add
jmp
shrb
sarl
and
jp
xor
mov
clc
jp
mov
movsl
cmpsl
popa
hlt
xlat
lods
insl
push
pop
ja
cmc
add
jbe
adcl
adc
cmpsl
test
mov
daa
into
rorl
add
enter
mov
js
xlat
mov
and
gs
sar
aaa
out
cmp
bound
ret
fnstsw
push
shrb
dec
out
arpl
getsec
cmp
pop
push
sbb
mov
mov
loop
subl
lods
mov
scas
push
lea
call
push
cmp
and
jo
xor
daa
lock
lret
inc
xor
fsubr
call
fldt
xlat
orb
xorl
out
and
outsb
loop
rcrl
shr
push
push
call
mov
sub
loop
in
add
dec
fs
push
clc
jbe
add
cmp
jmp
ja
inc
rclb
imul
in
xchg
sub
cwtl
scas
inc
test
int
pop
push
iret
mov
ret
fisttpll
and
int
and
xchg
in
jnp
adc
mov
push
daa
in
test
sub
fldt
ret
icebp
xlat
pop
imul
popf
enter
stos
jecxz
psrlw
test
out
mov
add
fs
sub
inc
lret
jl
sbb
daa
mov
and
and
int3
push
add
xchg
subb
fcmovnu
jle
and
fsubs
add
test
fistps
in
out
outsb
sub
push
inc
mov
std
xor
sbb
inc
and
popa
xor
fisttpll
push
outsl
dec
inc
push
out
scas
cmp
shrb
das
sub
sub
sbb
lcall
dec
repnz
push
int
xor
outsl
and
mov
sub
mull
test
xor
jmp
loope
xor
lock
mov
or
icebp
in
rorb
cs
adc
sub
pop
loop
cmpsl
shrb
cmp
dec
mov
addr16
dec
push
es
adc
je
adc
inc
sub
cmovg
shrb
add
xchg
repnz
mov
stos
fwait
orb
adc
clc
push
add
lret
xor
lahf
sub
cmc
pop
jp
adc
mov
pop
das
test
adc
loopne
or
xchg
cmp
xchg
fstpt
mov
or
imul
and
mov
lcall
rcrl
pop
jmp
arpl
iret
inc
xorl
repz
fs
dec
xor
sub
mov
jne
mov
fisttpl
dec
emms
sub
aas
add
cmp
jns
ret
cmpsl
mov
mov
lds
das
jl
sub
and
jns
xor
push
inc
mov
mov
cli
cmpb
inc
sbb
lds
push
mov
mov
push
cld
sub
cmp
inc
sub
fcmovb
push
lea
sub
je
shlb
fisubl
in
cmpb
xchg
lds
adc
movsl
push
ss
ret
xchg
xor
add
and
mov
out
inc
mull
daa
add
add
mov
movsl
jnp
or
das
mov
mov
fnstenv
sub
add
mov
cltd
xchg
hlt
lock
push
mov
in
sbb
ja
lcall
mov
xor
sub
inc
mov
jmp
jno
dec
mov
in
lcall
add
outsb
jle
jmp
cmp
gs
push
mov
and
in
popl
cmp
nop
jno
std
mov
aad
and
xor
push
mov
mov
inc
fdivr
aas
mov
cmp
ret
clc
mov
push
xor
push
xor
mov
sbb
mov
lret
dec
outsl
je
imul
sub
enter
inc
ljmp
pop
bound
les
inc
sub
mov
sbb
inc
mov
outsl
cmp
adc
and
pop
xlat
scas
inc
fiadds
cs
into
dec
jnp
dec
push
ja
ret
dec
adc
mov
cmpsb
xchg
pop
stos
mov
inc
xorl
pop
pop
pop
out
xchg
mov
cmp
xor
lcall
pusha
insb
add
and
mov
lods
imul
xchg
sub
add
mov
jno
xchg
mov
scas
cmpsl
sub
cs
ja
lret
push
push
adc
subb
out
scas
out
push
mov
aas
lahf
out
jne
ret
xlat
or
mov
shlb
add
addr16
adc
hlt
mov
lret
jno
ss
push
sbb
adcl
ja
pop
lahf
popa
push
hlt
and
jns
scas
adc
movd
sar
push
and
push
addl
daa
push
push
xorb
mov
xchg
or
add
fsubrs
lods
loopne
mov
adc
leave
adc
loope
cmpsl
mov
pop
add
imul
movsl
adc
and
ljmp
adc
push
adcl
sbb
and
les
xchg
or
add
inc
addl
or
call
push
mov
lcall
add
adc
jne
push
lahf
arpl
cmp
fs
cmpsl
pop
addr16
repnz
cli
push
cmpsl
xchg
idivl
or
divl
add
sarb
out
out
popa
xor
push
sbb
fildl
cmpsl
mov
mov
inc
loope
sub
xchg
stos
aam
mov
sbb
orb
mov
orb
imul
xor
test
sahf
fs
cmpsl
shll
mov
leave
xor
les
mov
shlb
stc
jg
or
lods
aas
cs
xchg
and
mov
nop
xor
jecxz
mov
add
insb
mov
add
test
mov
popa
shll
shlb
add
mov
or
pop
movsl
cmpsl
in
mov
push
addb
sub
loop
loop
lods
ljmp
sbb
and
subb
or
dec
jle
cmpb
orb
notb
push
and
pushf
add
mov
push
cmpsl
loopne
and
shrl
std
shl
mov
inc
movsl
add
in
jg
mov
and
cli
mulb
jle
ret
insb
cli
mov
decl
mov
out
jae
pop
std
lret
fyl2x
sub
rcrb
fbstp
pop
or
lods
or
xchg
dec
mov
les
cmp
loop
dec
pop
data16
dec
aas
test
insl
mov
aad
roll
imul
out
mov
lock
mov
or
into
pop
or
lock
lea
or
push
or
inc
inc
gs
in
stc
adc
popa
cmp
xor
iret
xchg
out
lcall
push
fisubs
sub
cmp
popf
div
jmp
mov
xor
or
mov
push
in
andb
leave
mov
sbb
out
test
lea
mov
lea
dec
cmp
xacquire
out
mov
cmpsl
faddl
mull
scas
pushf
nop
repz
es
iret
xor
sbb
mov
pop
push
mov
push
lret
or
and
bound
or
xchg
or
push
pop
xchg
loop
flds
out
mov
repnz
loopne
ret
outsl
add
notl
add
leave
shll
and
mov
inc
leave
in
push
leave
ret
lods
cs
sarl
xchg
jle
sub
xchg
mov
add
inc
loopne
mov
cmp
lea
repz
loopne
jge
mov
aas
cmpb
pop
add
cli
push
inc
mov
adcl
lret
or
sub
in
icebp
cmc
enter
stos
pop
aaa
sti
push
mov
or
fs
pop
pop
fwait
pop
out
adc
movsl
xchg
ret
das
jecxz
jp
repnz
push
inc
test
scas
outsb
pop
add
xchg
faddl
stos
enter
lock
mov
fldcw
or
mov
sub
bound
js
and
es
mov
je
sbb
movsb
adc
bswap
xor
inc
outsb
dec
fcomps
ret
lahf
and
add
call
dec
outsb
sbb
sbb
ds
pmuludq
rclb
xor
adc
xor
jle
ss
adc
mov
lea
nop
push
mov
int
mul
inc
roll
pop
push
out
jecxz
lds
imul
xor
xchg
imul
jo
mov
and
movsl
xor
and
cltd
out
imul
add
or
pop
clc
int
mov
adc
xchg
xchg
cmpsl
jne
inc
mov
cmp
imul
xor
roll
movsl
ljmp
bound
lahf
lods
dec
das
and
ret
shr
push
dec
add
push
aaa
xchg
xchg
insb
into
dec
test
mov
pushf
push
dec
or
cmpb
lds
push
jb
rcll
push
out
enter
sbb
mov
pop
in
sub
add
jg
push
mov
add
push
inc
lret
imul
ja
push
ret
ror
lds
inc
add
push
mov
mov
stos
xor
fwait
mov
mov
addl
mov
cmp
mov
ret
and
add
mov
jl
ret
cs
adcb
int3
push
outsb
cmp
setle
loope
subl
lret
shr
stc
lret
gs
enter
cs
movsb
push
fadds
pop
sub
add
movsb
pop
bound
fsubrs
dec
rol
ljmp
in
dec
sbb
lds
je
cmp
addr16
sbb
in
cmpsb
jle
rolb
push
fsubs
into
push
inc
or
lea
xchg
push
insb
inc
sbb
xchg
cmpsb
adc
mov
sub
scas
pop
ds
jp
cmc
xchg
dec
mov
cs
jl
sub
inc
xchg
mov
mov
test
jns
addl
add
cmpl
stc
fs
repnz
shrl
js
imul
jmp
outsl
and
je
or
sbb
lods
enter
xor
xor
mov
nop
ljmp
orb
outsb
or
jg
xlat
dec
enter
mov
xor
add
pop
xchg
loope
push
adc
mov
cld
add
adc
and
lods
mov
cmp
xor
push
jns
mov
or
int
in
jecxz
js
out
xlat
dec
pusha
repnz
dec
sub
pushf
push
sub
pusha
scas
add
push
add
fs
mov
leave
dec
sbbl
push
pop
and
ror
add
movsl
xchg
xchg
stos
sub
jmp
fcomps
scas
in
and
das
cli
sub
push
or
repnz
stos
inc
ret
fwait
mov
push
dec
lock
or
movsl
mov
cld
arpl
das
pop
dec
adc
mov
cmpsl
popa
hlt
cltd
fs
pop
xchg
scas
cmp
cmpsb
cmp
lds
iret
fmulp
cmpsb
dec
mov
fs
mov
subb
and
test
ret
lret
push
rcl
cmp
pop
aas
mov
cmp
inc
xchg
inc
inc
ret
sub
cwtl
dec
and
mov
pop
repnz
jle
xchg
cmpsl
or
add
add
mov
orb
cmpsl
std
push
sbb
jg
scas
dec
shr
andb
dec
mov
mov
rcll
mov
jecxz
cmp
add
adcb
sub
xchg
fiadds
outsb
inc
sbb
dec
xor
jle
lahf
shl
test
mov
add
out
and
stos
push
sub
and
add
stc
push
xchg
dec
adc
pop
adc
xchg
js
push
in
stos
mov
pop
std
push
inc
cmp
outsb
cmp
mov
out
xor
shr
loopne
or
xchg
and
loop
or
jns
js
mov
mov
pop
ss
dec
movb
repz
ret
lods
xor
repnz
std
push
push
insl
int3
add
adcb
sub
xchg
add
dec
andb
cmpsb
jecxz
lock
out
ljmp
mov
xor
cmp
es
fildll
ja
test
gs
sub
mov
dec
or
pop
aad
mov
or
sti
out
jmp
xor
dec
and
lret
add
flds
mov
push
das
idivl
aad
sub
fs
js
mov
dec
jecxz
cmpsl
pop
mov
xor
adc
call
sub
xchg
pop
por
pop
aaa
pop
cmpsb
shrb
add
jo
mov
jbe
ljmp
stc
out
inc
xchg
add
and
push
lret
insb
loope
mov
sbb
sbb
or
inc
xchg
sub
bound
out
mov
push
xchg
popa
mov
shll
aam
fs
or
mov
inc
cmpl
mov
push
out
inc
psrad
lods
insb
stos
or
ret
jno
mov
pop
mov
mov
lods
rcrl
out
adc
aad
cs
pushf
aam
out
inc
dec
lods
mov
bound
mov
pop
xchg
aad
popf
dec
call
fsubs
mov
cmp
push
sub
dec
dec
ljmp
sub
sub
inc
and
ljmp
les
mov
iret
dec
sahf
testl
inc
addl
or
pop
jle
enter
outsb
cmpsl
and
xchg
push
cmp
jmp
xor
sbb
mov
sbb
jae
mov
jp
xchg
cmp
push
aad
sbb
ret
xchg
jb
mov
jne
xchg
adc
adc
xchg
lock
data16
cmp
or
bound
repnz
test
movsb
rol
ror
fldenv
inc
lock
mov
outsl
sbbl
add
sbb
mov
cmpsl
mov
push
and
xchg
or
fdivrl
ljmp
mov
shrb
mov
xchg
gs
add
mov
push
fsubr
movsl
pop
rclb
cmpsb
xor
out
out
shr
push
add
fldl
jmp
sub
pusha
sbb
push
jno
cmp
aaa
js
jnp
inc
inc
cli
xor
dec
jnp
inc
jno
sbb
push
ret
out
data16
repnz
out
jecxz
imul
out
into
push
loopne
push
mov
movsb
mov
popa
cmpsl
iret
mulb
add
mov
mov
fisttpl
xchg
daa
test
mov
jl
lret
or
dec
aam
out
ja
xchg
daa
xorl
out
pushf
fistps
add
mov
ret
scas
push
pop
xor
sub
fbld
data16
popf
add
pushf
xor
lret
jl,pn
mov
mov
cmc
sbb
ret
adcb
sbbb
xchg
or
xor
das
ja
jno
test
std
add
stc
jge
jno
push
dec
mov
inc
lret
xorb
cld
adc
sub
in
out
dec
mov
movsl
xchg
inc
fistpl
bound
add
xor
xchg
lods
mov
dec
jne,pn
or
jmp
jae
adc
mulb
xchg
popf
cmp
mov
push
push
mov
bound
movsl
pushf
aam
orb
xchg
mov
mov
iret
nop
lods
aas
mov
mov
pop
add
lods
addb
cmp
pop
mov
push
dec
mov
push
je
mov
and
dec
aam
or
xor
shlb
lods
add
inc
pushf
mov
cmpsl
xchg
mov
stos
sub
push
sbbl
pop
mov
lret
fidivrs
mov
jp
add
and
scas
popa
iret
push
pop
in
dec
mulb
es
xchg
sub
dec
pop
imul
mov
mov
xor
dec
or
nop
dec
mov
mov
sbb
jne
cld
sbb
jns
sbbl
cli
dec
pop
stos
push
mov
mov
pop
sub
push
popa
and
shl
pop
sarl
push
cmp
jo
movb
lds
lret
push
add
or
cmpsb
jnp
mov
sub
adc
jp
mov
lret
lods
cmc
mov
jg
cmp
jne
inc
jge
cmpsl
pop
movsb
xchg
stos
sub
dec
divl
push
lods
lock
inc
xor
daa
hlt
dec
mov
or
mov
lock
inc
sarl
push
jnp
dec
mov
cmp
adc
ja
mov
jo
or
mov
lret
or
add
jl
in
loop
jge
arpl
inc
push
int3
push
outsl
adc
outsl
jecxz
fisubrs
xor
fcomi
pushf
les
dec
repnz
push
call
xchg
mull
dec
cmc
dec
mov
loopne
pop
pop
push
mov
mov
out
mov
int
and
mov
jae
jns
cmp
lods
repz
or
push
pop
cmp
bound
fisubrs
mov
add
lea
popf
add
xchg
and
jo
sbb
mov
sarb
xor
push
push
fnsave
and
sbb
and
mov
pop
cmp
dec
inc
add
fnstsw
mov
shlb
mov
arpl
outsb
into
jae
ret
flds
push
dec
push
testl
je
sub
sbb
popl
sub
or
and
jbe
push
loopne
dec
data16
cs
in
push
ds
lret
mov
scas
in
jecxz
bound
dec
fsubrl
aaa
lock
insl
cmpl
mov
roll
pop
add
xchg
mov
jl
scas
xchg
jns
movsl
sbb
adc
scas
pop
repnz
mov
and
push
jnp
add
inc
mov
cli
fwait
lock
adc
imul
dec
lods
cwtl
stos
test
loop
out
dec
pop
pop
roll
cmp
cmp
xchg
inc
dec
mov
stos
hlt
inc
lret
adc
inc
lods
nop
and
ljmp
jno
inc
aad
das
xchg
cmp
sahf
lret
lock
pop
cmc
pusha
mov
mov
movsl
repz
orl
lods
ret
mov
mov
ret
jecxz
mov
or
dec
adc
cmpsl
fidivl
cmp
add
fildl
push
dec
jae
insb
loope
add
mov
or
ss
test
clc
bound
fs
dec
in
test
sbb
stc
pop
insb
daa
mov
push
inc
aas
es
fidivrs
test
push
dec
loope
stc
in
out
push
mov
xchg
je
lods
out
loop
jo
lods
fisubl
fimull
mov
sti
aam
scas
push
dec
pop
out
add
in
pop
push
push
adc
test
pop
push
mov
sbb
add
add
add
add
fcoms
fs
mov
mov
add
jg
inc
es
mov
xor
or
imul
add
xor
push
adc
movsb
in
mov
push
sbb
mov
xchg
cld
scas
out
rolb
lret
or
cmpsl
mov
pusha
ucomiss
inc
nop
shl
xchg
call
sbbl
shlb
xchg
push
mov
test
ficomps
sub
pop
cmp
loopne
jns
orl
inc
sub
insb
mov
and
cld
push
hlt
hlt
jno
jo
jmp
orb
add
push
xor
ficoml
das
xor
sbbb
test
mov
push
and
jle
jb
hlt
dec
add
mov
out
sbb
push
dec
mov
sbb
cmpsb
push
adc
ljmp
je
insl
mov
out
rorb
sbb
or
add
iret
pop
lods
or
jg
jecxz
or
enter
mov
lds
out
loop
andb
add
imul
in
movsl
mov
ret
roll
stos
scas
roll
fisubrl
mov
mov
xlat
dec
arpl
sub
mov
mov
lods
push
sarb
pop
popf
idivl
and
js
push
mov
dec
cmp
adc
ljmp
jle
jnp
loop
mov
mov
add
pop
mov
ret
rclb
xchg
mov
xor
xchg
jmp
mov
iret
lds
addb
scas
inc
xor
loope
mov
je
repnz
out
repz
jecxz
bound
push
jns
es
sbb
mov
cli
xorl
jmp
jecxz
fmull
mov
les
orb
imul
popf
push
jle
cmp
sub
mov
fnsave
push
neg
xchg
addr16
sbb
sbb
shl
jle
add
nop
rorl
arpl
lretw
lcall
cs
jno
int3
movsb
fisubrs
mov
mov
inc
dec
add
roll
ret
out
fisttpl
xchg
sub
stos
cmp
or
cltd
cs
pop
lret
dec
in
icebp
jmp
dec
add
add
fwait
insl
das
mov
mov
dec
movsl
cmp
jb
orb
scas
xchg
push
rdmsr
insl
fldt
in
and
arpl
shl
imul
loop
push
mov
addr16
int
lods
push
and
push
fwait
int
mov
repz
jne
mov
push
add
enter
inc
jg
movsl
mov
lods
jmp
insl
aaa
push
mov
dec
std
sub
push
mov
or
pop
xorl
in
mov
jne
mov
pop
out
mov
ljmp
adc
push
out
cmpsb
dec
sub
push
or
shrl
dec
push
xlat
and
je
dec
pop
push
dec
mov
xor
push
push
mov
mov
test
add
lret
rcll
xor
xchg
push
sbb
loopne
mov
push
push
cmp
lods
jge
pop
stos
push
aam
and
test
fiadds
xorb
push
gs
mov
ja
aaa
lret
in
sub
in
mov
fwait
jecxz
fs
xor
bound
dec
cmp
bound
les
cmpps
pop
mov
lea
add
enter
mov
jecxz
add
lock
in
push
sbb
aas
cmpsb
fiadds
bound
cld
xor
fidivs
jg
testl
sbbb
add
mov
cwtl
les
out
sub
icebp
fildl
cld
lods
andl
cmpsl
push
dec
push
rcr
movsl
ja
inc
shl
in
xor
fcomp
dec
dec
pop
mov
sarl
int
inc
xchg
mov
mov
jns
aas
adc
std
hlt
mov
scas
addl
mov
mov
fcom
xchg
jecxz
mov
mov
sbb
add
loopne
xchg
jo
test
les
iret
fcoms
cltd
ret
repz
jnp
push
pop
jp
rcl
enter
pop
insl
je
xor
out
mov
inc
add
xor
mov
fildl
stos
call
fsubl
cmp
fsubrs
jns
pushf
mov
or
cmpsl
jno
out
jmp
or
orl
add
push
pop
sub
jns
sbb
cltd
jmp
cmpsl
sti
shl
sbb
cmp
inc
ffreep
and
aaa
in
cmovno
sub
sub
jecxz
dec
mov
push
in
jae
sub
mov
or
call
lods
mov
lcall
mov
into
jns
mov
adc
lret
aaa
jnp
loopne
push
mov
xor
inc
fstps
notb
pop
fmuls
dec
rorl
imul
push
cltd
push
aam
in
add
lcall
ret
lcall
mov
test
sub
mov
push
inc
adc
and
int
sub
ficoms
pop
mov
or
xor
mov
pop
scas
xor
fucomp
nop
hlt
mov
mov
and
cmp
xor
push
ja
sbb
loopne
movsl
jmp
lahf
cmp
ljmp
clc
adc
loopne
das
fidivl
cmpsl
lret
aaa
scas
shl
mov
aas
cmp
pop
or
cmp
in
sahf
lea
cs
mov
pop
lds
scas
bound
fs
int3
mov
daa
imul
jae
stos
and
xor
jno
fnstcw
add
insl
xchg
jae
lcall
imul
cmp
sub
xchg
inc
loope
lods
jb
mov
jbe
popf
in
inc
test
mov
mov
cs
lds
cltd
mov
iret
sub
pop
fcmovnbe
fld
fildll
lret
mov
bound
cmp
or
pop
lret
cmp
nop
sub
pop
lret
loop
fdiv
rcr
gs
andb
mov
mov
xchg
int3
and
mov
sahf
sbb
sbb
mov
aas
es
gs
outsl
dec
divl
or
inc
cmpsl
mov
loopne
cli
jae
ret
rorl
ja
or
xlat
imul
loopne
stos
outsl
jecxz
and
xor
frstor
sub
xchg
gs
push
dec
or
add
int
pop
mov
pop
outsb
push
mov
mul
repz
dec
jnp
inc
aas
add
test
cmp
divb
mov
and
pop
shr
orb
cli
out
in
stos
mov
adc
inc
cmp
mov
gs
jge
jecxz
or
inc
xchg
or
push
bound
outsb
xchg
int3
lock
out
dec
cmp
push
dec
add
sahf
and
inc
lods
mov
mov
mov
scas
mov
fldl
cli
mov
dec
sbb
enter
adc
push
pop
sti
lods
lea
add
bound
cmpsl
mov
pop
mov
popa
mov
add
and
imul
divb
pop
fnstcw
or
mov
pop
jge
in
inc
mov
stos
cmpb
mov
popa
inc
mov
aaa
mov
add
fadd
lcall
ret
mov
cmp
lret
loop
andb
clc
mov
mov
pop
int3
fs
bound
mov
movsl
in
mov
xor
xchg
cmpsb
mull
mov
in
lods
mov
enter
inc
emms
cmp
rclb
sbb
mov
dec
push
and
shlb
into
and
pop
inc
stc
out
mov
leave
lds
mov
je
addl
filds
test
xor
adc
xor
adc
mov
mov
sbb
bound
popf
nop
cmpsb
jecxz
cmpsl
mov
daa
out
rorl
pop
loopne
and
fisubs
push
add
pavgb
inc
icebp
xor
push
clc
xor
popa
add
movsb
dec
cli
mov
adc
js
inc
shll
and
dec
add
out
mov
mov
out
adc
in
mov
cmpsl
lock
jb
cli
test
std
cmpb
hlt
inc
in
sarl
in
adcl
or
inc
mov
and
pusha
jo
dec
xorb
inc
xor
lret
dec
adcb
cmpb
mov
pop
ja
ret
mov
loopne
mov
dec
in
cmc
push
je
imul
lea
jmp
mov
mov
out
in
outsl
inc
mov
sti
xchg
adc
mov
adcb
je
adcl
inc
mov
outsb
mov
leave
ret
jnp
push
xlat
repz
sahf
pop
pop
outsl
or
addb
aad
icebp
xor
enter
mov
pusha
movsl
jecxz
jb
scas
adc
hlt
aas
and
jbe
sub
mov
jae
inc
inc
addr16
in
sbb
jno
inc
addb
pop
xchg
xchg
pusha
pop
xchg
ja
gs
outsb
rolb
dec
sahf
test
adc
out
mov
test
pop
out
and
cmp
into
push
push
mov
mov
mov
in
iret
mov
jne
pop
cmp
inc
movsl
scas
cmp
fcoml
movsb
adc
lods
pop
shll
test
incl
mov
adc
lret
xor
and
or
js
int3
ret
mov
in
test
cmp
add
xchg
push
inc
cwtl
and
mov
mov
sub
mov
push
and
jle
out
inc
xlat
in
jg
sub
jmp
pop
test
imul
mov
rolb
push
int3
mov
movsb
add
cmpsl
ss
pop
movsb
xchg
dec
sbb
xchg
bswap
stos
sub
jmp
mov
lods
push
jb
cld
mov
xor
pop
adc
xchg
jmp
dec
push
pop
nop
sub
movsb
pop
push
ret
xor
lret
add
ljmp
sub
sbb
sub
scas
cmp
mov
push
xor
pushf
pop
fldenv
and
scas
in
sbb
lock
mov
or
jne
aam
je
imul
mov
cld
lahf
jno
jecxz
dec
add
ret
in
sbb
rdmsr
movsb
fwait
idivl
sti
add
fs
movsl
enter
jnp
add
ret
imul
and
dec
mov
mov
ljmp
les
inc
nop
mov
movsl
xchg
push
push
jmp
lret
js
jle
xchg
sbb
out
mov
xchg
subb
scas
and
movsl
cmp
mov
jmp
les
or
in
dec
faddl
jae
fwait
push
mov
mov
and
mov
mov
inc
out
fcompl
fiadds
sarl
repz
lds
xor
or
ja
das
fcoml
xchg
mov
out
sub
sub
cmc
adc
jecxz
gs
cli
xchg
jle
cmc
subl
sbb
lods
push
pop
and
pushf
decl
cmpsb
or
mov
add
sub
and
mov
popa
and
push
aad
add
jmp
sarl
aad
adc
pop
outsl
fs
mov
lcall
out
add
stos
test
dec
pop
icebp
xor
jl
outsb
jns
lcall
sub
pop
sub
int
out
and
sbb
mov
jge
ret
jg
stos
ficoml
fwait
adc
jb
xor
sbb
pop
popa
xchg
inc
jle
xor
or
cmp
fldcw
xchg
dec
mov
lock
cmp
adcb
leave
mov
sbb
jge
lahf
and
rcrb
lock
sbb
aaa
lret
ljmp
insl
ljmp
outsl
xor
pop
push
cli
lcall
jg
imul
mov
sub
in
bound
cwtl
data16
gs
popf
adc
mov
sub
inc
sub
fnstcw
loop
pop
jecxz,pn
stos
add
adc
mov
std
gs
mov
out
faddl
add
ljmp
sbb
xor
rcrl
mov
stc
into
ret
test
sbb
lret
cmp
dec
push
or
pop
int3
xor
or
and
and
stos
push
inc
xor
ret
mov
add
mov
cli
dec
add
fildl
test
push
or
pop
cld
inc
stos
loop
loop
xchg
popl
cli
iret
cmp
or
insl
mov
lahf
pop
xor
bnd
dec
sbb
mov
pop
sub
jmp
add
filds
cmp
adcb
loopne
mov
fildl
sbb
test
sbb
cld
push
pop
pop
add
xchg
push
outsb
aas
pop
rorb
inc
rolb
inc
scas
dec
mov
in
adc
mov
push
adc
adc
test
movsl
add
in
sbbb
xchg
lret
ss
push
push
daa
xchg
outsb
subl
shlb
mov
aaa
inc
add
add
test
pop
inc
xor
mov
lcall
mov
dec
adcb
cltd
pop
mov
movsb
xor
arpl
lods
xor
sbb
mov
or
loop
aaa
jno
mov
imul
lods
enter
jne
jae
dec
pop
add
fiadds
stos
vunpckhps
je
jno
xchg
xchg
das
mov
xchg
mov
adc
and
xor
mov
cmpsl
xchg
dec
mov
sub
sub
aas
sbb
pop
enter
addr16
rorb
mov
and
test
mov
mov
mov
mov
sbb
movsl
push
fwait
repz
addl
dec
cmp
xchg
clc
sbb
test
repz
aaa
pop
das
aas
sub
xchg
cmp
in
fwait
outsl
jmp
jae
fsubrl
xchg
inc
stos
inc
out
loope
mov
pop
inc
fildll
out
in
cmc
inc
push
pusha
cmpsl
call
cltd
mov
inc
fs
lds
subb
xor
outsb
dec
ljmp
and
fstl
dec
mov
and
sub
pushf
xor
xchg
cmp
in
jnp
jnp
xor
ret
jne
xor
xchg
sub
jnp
jns
xchg
or
je
leave
cmpsb
and
push
jno
outsl
mov
aas
les
cmc
mov
jns
adc
xchg
push
outsb
in
daa
lds
sbb
out
ljmp
movsb
add
push
pop
fwait
jp
aaa
cld
sbb
push
or
pop
sbb
cmpsl
xor
add
fwait
and
or
aas
loop
cmpsl
inc
xchg
sub
mov
pop
add
int
rcrl
addr16
lret
inc
add
in
push
inc
aam
mov
aad
jmp
scas
or
sarb
jecxz
cltd
inc
and
push
ret
xchg
insl
fists
sub
imul
loop
mov
shll
jmp
add
lcall
arpl
dec
cmp
mov
sbb
adc
fs
out
mov
inc
mov
add
push
push
push
ret
adc
cmpsl
inc
xor
jmp
mov
in
rcrl
cmpsb
and
mov
pop
cs
jae
jmp
cs
movsl
adc
movaps
shll
loop
test
jge
adcl
dec
sub
inc
cmp
mov
lahf
jmp
shll
fildll
cmpsl
subb
popa
push
push
mov
xchg
ljmp
mov
aaa
mov
mov
lods
imul
push
mov
repnz
mov
ljmp
xlat
shr
fs
cmpsl
setl
inc
ljmp
and
mov
es
cli
cmp
scas
dec
fwait
add
loopne
push
in
pop
ds
stos
imul
das
cld
js
push
dec
inc
or
outsl
xchg
pushf
sbb
sub
xor
cmpsb
es
addb
dec
dec
mov
stos
sbb
pushf
scas
inc
add
aas
add
lock
mov
loop
loopne
xor
dec
mov
mov
lcall
js
outsb
jns
mov
mov
outsl
jge
jo
pop
mov
xor
and
sub
repz
sub
add
or
inc
xor
das
push
lods
imul
mov
jmp
bound
xor
into
add
adc
mov
mov
inc
nop
subl
outsl
push
xor
aam
loope
cmp
in
mov
faddl
adc
adc
mov
lret
nop
or
addr16
inc
push
mov
rclb
push
dec
rol
add
jb
scas
dec
xor
jnp
insb
imul
imul
andl
imul
addl
out
in
and
cmpsl
dec
jns
inc
popa
xchg
push
cmp
jecxz
add
aaa
sub
mov
pop
jo
cmp
insb
adc
int3
adc
cmp
int
add
scas
lea
mov
mov
les
sub
push
inc
cmp
lahf
or
imul
movsb
adcb
cmpsl
sub
lcall
add
hlt
add
test
pop
fbstp
lea
rcrb
cmpsl
sahf
dec
lret
mov
out
inc
iret
out
inc
add
mov
jne
sbb
das
into
ret
incl
jecxz
out
scas
xlat
cld
nop
add
pop
mov
xor
mov
rolb
add
nop
push
adc
adcb
sub
mov
push
xor
test
orb
sub
xor
push
ret
dec
inc
inc
xchg
mov
mov
mov
aad
in
and
bound
or
mov
std
es
adc
in
in
cwtl
push
out
cs
cmp
push
sahf
insl
sbb
jne,pn
xchg
cmpsb
pop
xor
sbb
movsb
lock
in
or
pop
inc
jno
jne
mov
sub
clc
adc
enter
scas
cmp
shrl
sub
cmp
in
sub
inc
testl
lock
cmc
notb
mov
xchg
shlb
sub
icebp
xor
in
iret
es
popa
shll
icebp
mov
addl
xchg
cld
ljmp
and
xchg
lock
shll
imul
cmpsl
push
shl
fimull
addr16
psubw
push
imul
cmp
mov
jno
out
and
mov
add
ret
cmp
lods
mov
aas
loop
mov
or
inc
lock
mov
outsl
lds
adc
imul
inc
sbb
pop
fildl
popa
movsl
clc
call
mov
sub
xchg
cmp
pop
pop
adc
push
shr
cmc
lock
mov
pop
mov
add
push
sub
jecxz
mov
push
xlat
lahf
xor
sarl
and
adc
in
aas
push
ljmp
pop
addr16
scas
mov
jno
xchg
push
xchg
daa
loop
mov
ret
add
adc
pop
out
lea
outsb
add
roll
add
and
mov
and
xchg
jae
shll
movsb
push
imul
ret
or
cli
fistpl
aad
inc
daa
test
sbbl
insb
call
jge
sub
daa
loopne
and
xor
and
xchg
mov
stos
ljmp
mov
rclb
fdivrl
xor
loop
mov
rol
scas
lods
out
xchg
jbe
ljmp
ljmp
test
xstore-rng
cmpsl
inc
dec
pop
or
sbb
dec
push
mov
outsb
push
cmpsb
pop
xor
push
icebp
icebp
test
pop
mov
jo
jp
push
cmpsl
xlat
push
ljmp
imul
sahf
ja
dec
and
das
xor
shlb
push
jbe
test
mov
lcall
fiaddl
cmp
and
add
movsl
lret
shrl
lahf
loope
out
mov
ss
bound
popf
or
ja
filds
bound
pop
das
mov
ljmp
add
dec
add
mov
stos
dec
mov
lret
enter
iret
sbb
sub
dec
push
sub
and
mov
ret
testb
mov
stos
pop
fistl
adcb
push
or
sub
adc
jmp
inc
sub
inc
mov
aaa
test
loopne
fisubl
mov
loop
mov
sub
shll
ss
les
xorb
rclb
mov
sub
in
std
mov
into
hlt
subb
fstpl
mov
fwait
xchg
mov
push
ss
jbe
or
inc
adc
mov
adc
test
flds
mov
fmull
sub
popa
inc
pop
loope
std
ficoml
je
outsb
jbe
jns
ja
mov
jecxz
xchg
mov
enter
in
push
or
mov
mov
pop
mov
push
adc
adc
out
add
push
cmpsl
xor
scas
hlt
pusha
sti
testb
mov
xor
xor
aas
fldcw
inc
pushl
imul
mov
sub
jecxz
push
inc
arpl
fists
mov
cld
fld
cmpsl
rcrl
data16
out
mov
insb
roll
or
push
sub
icebp
dec
pusha
pop
ret
jmp
xor
pop
test
push
into
imull
push
cmp
int3
rcrl
push
xor
loop
arpl
jb
mov
dec
cld
mov
imul
rorb
pop
jge
loop
ds
cld
out
popa
mov
jge
in
xor
lahf
int3
mov
in
push
cmp
enter
mov
adc
inc
fsubr
sbb
inc
mov
add
in
pop
dec
imul
dec
inc
push
arpl
mov
fistpl
push
push
mov
cmpsl
push
add
xchg
dec
or
mov
sub
sub
into
adc
lret
sub
mov
cmc
into
add
js
enter
movsl
aam
test
lret
pop
iret
mov
or
push
shl
movsb
xor
dec
stos
aad
xchg
cmpsl
andb
cmp
mov
sub
orl
and
mov
pop
shlb
jecxz
push
xor
ljmp
mov
xor
push
xor
aaa
dec
push
jb
xor
push
mov
clc
lcall
aas
aaa
adc
pop
dec
adc
add
adc
jb
jo
data16
cmpsl
sub
jg
push
imul
cli
test
cwtl
mov
fsubs
rorl
xorl
push
cmpsl
push
xchg
out
jl
icebp
pop
stos
lcall
push
nop
inc
or
rcrb
dec
push
int3
sub
loopne
shll
repz
addr16
cmp
icebp
les
dec
int
dec
mov
outsb
push
lret
mov
imul
sub
add
cld
jl
and
mov
pop
xor
push
stos
jmp
xchg
cltd
push
pop
lret
loopne
dec
pop
insb
dec
ds
sub
cmc
sbb
add
jecxz
ss
fbstp
data16
fbld
inc
push
dec
pop
sub
mov
ficoml
fs
stc
push
insb
imul
scas
addb
out
mov
jmp
mov
sbb
rorb
dec
cs
out
orl
pop
out
movsl
inc
cmp
cmpsl
dec
inc
sbb
sbb
mov
or
ficomps
rolb
mov
out
das
push
adc
push
pop
add
cmp
repz
mov
mov
or
sub
repz
pusha
ret
mov
mov
xchg
rorb
xchg
lods
push
xchg
aam
sub
adc
pop
xorb
xor
popa
mov
test
push
inc
mov
mov
xchg
das
add
arpl
mov
nop
lea
leave
or
loop
cs
jns
pusha
add
xor
sub
jae
cmpb
push
shl
adc
ret
jp
xchg
mov
xchg
clc
ret
cmp
repz
ret
mov
mov
movl
or
popa
in
sarb
mov
shlb
dec
add
dec
mov
dec
sub
adc
add
lea
fsubrl
mov
mov
add
loope
and
inc
mov
mov
rorb
inc
adcl
aas
xor
dec
int3
das
out
orl
ret
mov
int
and
xlat
dec
dec
and
in
sub
outsl
lret
pop
outsl
push
icebp
inc
mov
mov
fcmovbe
mov
jecxz
fmuls
ds
adc
into
mov
mov
jl
mov
mov
dec
ffree
loop
push
sahf
add
or
or
pushf
and
inc
adcl
sub
lahf
jg
stos
paddusw
push
lret
into
adc
jno
mov
in
push
jnp
xor
push
mov
push
loopne
add
icebp
sarl
xchg
cmpb
xorb
dec
loopne
mov
xchg
xor
sub
repz
ret
dec
adcl
mov
call
les
xchg
int3
mov
jmp
sbb
test
aam
jl
mov
es
incb
icebp
dec
lahf
pop
movsl
mov
bound
mov
or
sub
or
aad
xor
or
or
scas
scas
sub
movl
dec
scas
repz
cmpb
cwtl
mov
push
xchg
sub
xlat
ret
mov
jns
das
in
movsl
add
jp
cmpb
mov
shl
inc
in
mov
jb
inc
fisubs
popa
out
stos
stos
cli
shr
pop
jb
sub
fisubrs
inc
adcb
mov
movsb
mov
push
and
cmpb
push
sub
xchg
or
push
es
sbb
xor
sub
mov
outsb
xor
ret
popf
mov
enter
or
lahf
arpl
mov
xor
add
mov
in
inc
rorl
mov
movsl
mov
or
xorb
lahf
mov
inc
jno
mov
enter
cmp
add
mov
repnz
addl
addb
sbbb
or
mov
and
dec
pop
in
andb
xor
jne
in
jb
dec
insl
ds
pmaxub
or
fdivl
addl
divb
add
outsb
sbb
shrb
lods
inc
mov
stos
cmp
mov
adcl
btc
and
mov
lock
out
into
xchg
ret
mov
jecxz
ljmp
cmc
inc
sbb
movsb
mov
jne
int3
mov
cltd
and
and
jo
test
cs
mov
stos
or
test
adcb
fiadds
add
imul
stos
adc
cltd
jns
mov
neg
lds
pop
add
adc
inc
pop
add
jecxz
jmp
cmp
inc
neg
ret
cltd
dec
dec
icebp
jp
adc
pop
pop
sub
or
enter
mov
ljmp
cmpsl
mov
addr16
jo
scas
rorl
shl
push
cli
or
jmp
clc
push
test
sbb
cmp
sbbb
pusha
fildll
or
daa
in
xchg
sbb
sub
loope
repz
mov
fstps
in
dec
mov
mov
adc
xor
push
mov
xor
sbb
push
jp
dec
push
iret
andl
sahf
push
es
push
mov
std
xchg
mov
into
cs
aad
iret
clc
mov
inc
or
pop
mov
inc
pop
lret
jge
testb
cmpsl
movsl
adc
ficoms
ss
jecxz
jnp
dec
push
outsl
add
mov
sbbb
sub
jbe
mov
push
pop
and
fistpl
mov
addr16
loope
xchg
add
jge
loop
mov
andl
adc
andb
fdivrl
fdivr
movb
ljmp
ljmp
dec
out
push
jno
mov
negb
call
and
dec
outsb
lcall
pusha
in
pop
pushf
in
jp
or
shl
outsl
leave
call
cmp
in
je
xor
test
jbe
out
sub
gs
mov
repz
orl
repz
cmp
add
pop
std
loop
push
sub
dec
fstl
notb
mov
addb
add
and
imul
mov
pop
movb
cwtl
sarl
push
dec
scas
xor
mov
pop
jb
push
adc
sbbl
xchg
pop
std
sbb
inc
push
jg
imul
add
inc
sub
into
mov
mov
neg
dec
jge
xchg
adc
ljmp
and
setne
dec
xchg
push
lahf
jne
or
stc
add
mov
cmp
hlt
ret
sub
into
jnp
loop
xor
testl
out
addl
pop
lods
lret
mov
fldcw
int
fcompl
inc
sub
incl
lods
inc
or
add
bound
ret
rolb
xor
sbb
adc
cmp
xchg
add
mov
inc
sysret
imul
sti
pushf
xchg
cmp
pop
subb
rcl
mov
stos
or
data16
sub
pop
or
scas
mov
inc
ja
outsl
popa
ja
mov
aam
mov
scas
push
fisubrs
xchg
cs
mov
adc
fnsave
loop
fsub
xchg
mov
stos
mov
andb
push
std
xchg
arpl
add
insl
fisttps
mov
pop
cld
lahf
fisubrl
or
adc
aas
imul
push
pop
xchg
mov
push
adcb
lods
adc
daa
cs
sbb
jmp
xchg
lret
movsl
filds
lods
dec
push
inc
mov
nop
sub
and
add
cltd
adc
dec
testl
xlat
dec
mov
imul
or
xchg
leave
lods
aas
and
out
nop
mov
ret
fistpl
cmp
and
iret
and
mov
add
stos
das
bound
stc
test
aad
bound
mov
xor
cli
lods
adc
add
outsb
add
aad
or
xor
ljmp
mov
sbb
fcmovnbe
mov
jo
sub
jle
cmp
mov
cmp
divl
adc
mov
inc
test
ret
or
rolb
repz
ds
jp
loop
jne
add
mov
cmp
xor
jae
ljmp
xchg
or
cs
enter
cli
mov
lret
mov
aam
arpl
addb
cli
inc
mov
negb
ret
ljmp
mov
xchg
cmp
das
jb
int
jecxz
fwait
or
inc
cwtl
lret
mov
mov
add
dec
cmpb
mov
xor
lods
and
dec
int3
cmp
cmp
push
jnp
int3
pushf
mov
int
jb
mov
fisubs
out
pop
mov
decb
mov
shrl
adc
cmpsl
mov
sub
mov
cld
scas
mov
xor
pop
mov
ret
dec
movl
jge
push
sti
jecxz
xor
cmp
cmp
adc
lds
cmpsl
or
push
icebp
setno
jecxz
repz
inc
call
cmp
mov
mov
cmpsl
outsb
mov
jne
sbb
ds
mov
cli
dec
mov
ror
xchg
loopne
push
or
sbb
lea
pop
pop
fs
addl
mov
ss
mov
and
lret
mov
inc
mov
xchg
or
and
fnstsw
and
ret
les
daa
or
cmp
add
push
enter
daa
xchg
test
and
test
mov
mov
in
push
adc
mov
bound
test
adc
jmp
cli
bound
add
or
add
mov
test
add
rcrl
jmp
push
push
inc
aad
jg
mov
cs
mov
movsl
push
out
addr16
cmp
bound
jnp
add
pop
dec
xor
mov
lret
sbb
jge
lcall
add
int3
movsb
addr16
ret
add
ret
bound
outsl
mov
leave
ljmp
nop
test
movsb
jmp
adc
cwtl
mov
mov
mov
cmp
sbb
orl
jecxz
sub
aas
je
adc
xor
inc
and
psadbw
out
ds
ds
orb
in
int
addb
shrb
mov
xor
ret
leave
or
dec
lcall
or
push
mov
mov
int3
lret
in
and
push
or
imul
lret
lods
dec
fldl
out
inc
jp
cmpl
lret
push
jg
movsb
add
mov
sbbb
jo
adc
mov
adc
dec
ja
je
in
insl
outsl
data16
subl
mov
jmp
mov
dec
adc
inc
add
jmp
or
out
mov
adc
mov
mov
cmpsl
arpl
fwait
cmpsb
pop
insl
ror
js
mov
mov
adc
jbe
lods
cmpl
lea
sub
mov
xor
or
sub
add
cld
sub
pop
mov
mov
inc
cmpsl
rol
repnz
jno
add
mov
add
bound
aaa
mov
mov
mov
and
les
jmp
fidivrs
ss
lods
jg
aaa
dec
sahf
cwtl
or
add
cli
lret
and
mov
les
popf
add
jo
imul
dec
and
push
inc
insb
push
pushf
andl
jns
mov
add
push
movsl
stc
outsl
mov
test
mov
fwait
push
or
cmp
lods
dec
mov
into
sub
add
les
lret
mov
inc
or
int
stos
mov
jp
cmpb
mov
xchg
sub
and
add
mov
mov
stos
push
xor
mov
rclb
ds
mov
add
es
icebp
cld
in
mov
stos
sub
movsl
xlat
cmp
shl
or
add
inc
outsb
jo
and
push
mov
or
xchg
inc
ljmp
mov
ret
imul
lock
aaa
ret
and
sarl
xchg
into
xchg
aad
fstpt
sub
and
cld
mov
dec
fs
mov
mov
mov
jb
mov
mov
mov
pop
dec
xchg
cmc
add
inc
jl
sar
mov
orb
in
mov
enter
and
mov
add
and
das
in
loopne
add
inc
das
push
adcb
shlb
in
nop
mov
mov
xor
outsl
add
mov
jmp
mov
mov
repz
push
mov
and
ret
or
mov
pusha
or
pop
add
mov
out
mov
or
dec
mov
xor
xchg
sub
aas
sbb
mov
xor
fcmovne
cmpxchg8b
sub
or
fmulp
jo
sbb
or
aad
jg
loope
jo
mov
inc
or
push
and
and
cli
jl
jb
push
sbb
scas
jg
in
cld
jns
mov
cmpsl
lcall
nop
cmp
mov
or
sub
pushf
add
mov
mov
dec
stos
das
andl
fimuls
sub
xor
mov
sub
sahf
hlt
sub
jl
mov
mov
cltd
daa
inc
and
pop
add
test
dec
xor
sarb
mov
mov
outsb
sub
fbstp
jne
push
pop
add
cli
and
std
push
or
sub
lcall
mov
mov
mov
xor
pop
loope
jne
mov
test
in
lods
into
jo
mov
sti
das
cmpsb
push
fistps
repz
out
gs
xorl
add
scas
cmpsl
subl
add
mov
repnz
jo
loope
fisubs
lret
dec
pop
cmp
cmp
mov
xor
hlt
ljmp
xor
xor
add
shlb
movsl
iret
sub
pop
or
sahf
stos
pop
mov
mov
inc
and
movsl
lock
lock
xor
leave
les
xchg
xor
roll
inc
add
pusha
repz
shlb
adc
xor
pop
subb
andb
and
sub
jno
repnz
das
jge
add
ds
jle
scas
push
arpl
or
cltd
test
cmp
call
xchg
mov
jge
sub
mov
in
mov
call
mov
add
or
or
xorb
in
add
shll
add
sarl
add
data16
mov
repnz
lock
mov
out
mov
jb
outsb
ret
daa
xchg
sar
mov
add
fs
ret
inc
cmpsl
in
ret
and
arpl
jae
adc
or
movsb
mov
dec
or
scas
imull
push
or
or
mov
and
mov
push
jecxz
xor
testb
dec
in
jl
outsl
cmp
mov
jle
jo
test
das
pop
inc
sub
jb
mov
mov
popf
mov
lret
dec
dec
das
xor
xor
andb
mov
lret
and
ljmp
sub
enter
and
stos
jns
add
sub
mov
loop
loop
rolb
or
lahf
rcrb
scas
dec
or
iret
clc
pop
ret
mov
mov
mov
repnz
add
popa
in
loope
fmuls
lods
pop
in
sbb
cmp
or
xchg
addr16
scas
sbb
sub
sbbl
sbb
xor
mov
jmp
lods
mov
dec
cmpsb
mov
xor
imul
or
pop
lahf
or
jmp
push
bound
sbb
mov
hlt
das
mov
dec
ds
roll
arpl
roll
pop
addb
ret
and
mov
mov
orl
add
inc
repz
out
inc
add
push
adc
lcall
sbb
pop
sbb
jmp
mov
jno
gs
push
cmp
es
and
mov
pop
lahf
inc
mov
fsts
in
sub
dec
or
rclb
cmp
push
lea
je
and
xchg
in
mov
adc
or
add
aas
mov
fs
lods
mov
jo
pushf
sub
addl
sub
add
icebp
pop
test
pop
movsb
push
rclb
dec
shll
andb
lods
add
inc
ror
add
push
out
mov
stos
cmp
dec
xchg
inc
and
xchg
jns
inc
inc
mov
push
mov
dec
mov
out
es
movsl
add
ror
fs
sub
bound
mov
out
xchg
lds
lret
popa
xchg
addb
cmpsl
je
loopne
lods
adcb
xchg
mov
or
fs
adc
jle
cs
nop
mov
and
enter
test
sarb
hlt
out
test
jecxz
mov
or
and
mov
sub
inc
sbb
outsb
punpcklwd
or
imul
dec
pop
sbb
pop
mov
lods
stos
or
cmp
cmp
or
test
ret
push
subl
push
push
lret
mov
or
outsb
arpl
or
aaa
pop
loope
andl
mov
mov
outsl
jae
cmp
enter
mov
mov
xchg
adc
push
jl
jp
push
iret
mov
lea
aad
cs
lea
xchg
mov
mov
and
js
sbbl
les
xchg
ror
sbb
sub
shlb
out
ret
adc
inc
imul
roll
or
out
push
jecxz
fnsave
sbb
mov
cwtl
rorb
pusha
or
add
rorb
sub
mov
push
sarl
push
cmp
test
dec
subb
lret
inc
and
bswap
jb
or
lods
loopne
pusha
adc
push
imulb
mov
mov
fsub
shll
insl
lods
cmpsl
cld
xchg
cmc
outsl
ss
dec
and
or
stos
push
in
lahf
inc
movl
cli
push
mov
stos
test
cmp
jnp
testl
mov
into
add
xchg
in
pop
dec
mov
mov
bound
xor
push
push
imul
and
mov
jmp
imul
testl
sub
rcrl
cmp
enter
fnstcw
sbb
movsl
inc
push
mov
sub
push
cmpsl
cmp
pushf
mov
pushf
stos
rorb
inc
sbb
xchg
jae
loop
pop
push
jge
cmp
mov
push
push
ds
xor
imul
xor
xor
mov
out
or
sbb
inc
scas
jns
inc
cmp
add
mov
cmp
mov
or
js
add
push
sbb
jne
cmpb
shrl
fsubl
pop
dec
jno
gs
or
or
in
out
repz
fisttps
sub
jnp
das
mov
sbb
pop
outsb
mov
cmpsl
mov
pop
dec
cmc
lahf
mov
mov
add
out
std
outsl
outsl
and
push
dec
and
fisttps
pushf
mov
lret
xor
clc
cmc
dec
sbb
loope
xorb
sar
mov
sub
mov
xor
xor
jns
sub
cmp
imul
js
or
out
push
nop
mov
mov
xor
and
gs
cmpsl
daa
add
mov
push
and
xor
fs
iret
idiv
cmp
orl
xchg
loop
es
mov
push
cmp
push
cwtl
cmpsl
fsub
pop
fmul
mov
mov
clc
add
jo
mov
xlat
inc
enter
mov
xor
add
push
out
adcl
xor
sub
jmp
shll
in
mov
pop
fcmovnb
sub
fwait
cmp
pop
add
mov
dec
add
dec
lahf
sbb
shl
mov
push
cli
sub
sahf
dec
scas
xchg
adc
stos
outsl
jl
bts
pop
add
sub
dec
test
inc
cs
aad
ret
xchg
lods
ret
xor
fs
add
scas
adc
ds
cmp
in
dec
mov
xchg
je
call
cmp
pop
aaa
sbbl
adc
xchg
lret
adc
xchg
or
xor
jae
mov
lods
adc
mov
push
sub
stos
rorb
loop
int
xor
ljmp
mov
xchg
mov
cmp
shll
repz
xor
hlt
bound
mov
loop
stc
pop
mov
lods
arpl
test
xchg
pop
push
mov
jb
and
mov
test
xor
mov
cli
mov
xchg
outsl
push
int3
fnop
add
dec
std
mulb
add
fwait
rcll
mov
frstor
test
xor
dec
cmp
xor
xchg
int3
mov
push
das
push
movsl
xor
popa
sbbb
or
roll
sub
ret
push
std
jne
ss
pop
adc
xor
fwait
es
jo
fsubr
push
addl
xor
clc
das
cmp
in
xchg
push
adc
mov
inc
ret
inc
ret
fadds
pop
sbb
shlb
das
in
dec
add
mov
rclb
pop
mov
mov
mov
inc
fwait
decl
dec
cmp
sub
mov
es
xor
xchg
idiv
xchg
lea
xchg
testl
mov
mov
push
js
jb
mov
rcrl
sbb
cmp
fnstsw
outsb
sub
push
lea
dec
jmp
call
adc
stos
inc
cmp
push
add
add
in
sbb
movsb
bound
dec
xorb
mov
mov
pop
flds
pusha
jge
inc
les
repnz
scas
dec
inc
enter
ret
movl
lret
dec
cmpsb
stos
cmpsl
mov
sahf
hlt
adc
test
mov
mov
shll
pop
jno
pop
push
jecxz
out
popf
das
sarb
jmp
sarl
dec
mov
cmp
pop
subl
scas
lods
xchg
xchg
cmp
and
dec
push
ret
out
xchg
mov
or
in
lcall
cmpsb
push
pop
in
pushl
mov
movsl
inc
adc
es
iret
jl
cmp
fadds
lds
push
cmpsb
adcb
lcall
jg
je
push
stos
mov
stos
cmp
movsb
lret
cmp
lods
push
inc
xor
testl
add
cmp
mov
mov
cmp
jbe
push
ljmp
out
aas
scas
out
pushf
inc
cmp
les
andl
stc
cld
addl
and
xchg
push
addr16
push
jp
sub
mov
lods
sub
andl
cmp
mov
mov
dec
daa
cmpsl
dec
lods
adc
pop
mov
icebp
jg
cmpsl
xchg
push
xchg
les
adc
lret
lea
gs
cmpsb
lea
mov
adc
mov
xor
sbb
nop
and
les
cmpsl
jb
cmp
mov
les
cmpsl
aad
cmp
mov
inc
mov
das
add
xor
ja
or
je
mov
cmp
mov
fstpt
xchg
add
adc
cmpsb
xchg
lret
sbb
sbb
repz
mov
fmull
and
in
jmp
cwtl
lret
push
mov
mov
push
addb
pop
add
out
mov
mov
movsb
xchg
push
test
outsl
dec
pop
orl
mov
jb
lea
xlat
push
test
adc
sub
orl
xchg
mov
lret
mov
add
xchg
add
ret
mov
aaa
dec
or
pop
adc
xor
xchg
sub
adc
or
push
pop
jne
pusha
mov
add
dec
ret
inc
lods
int3
and
test
sarl
dec
dec
jecxz
pushf
pop
call
lret
push
dec
mov
mov
test
fwait
ja
push
jbe
repz
mov
xchg
fcomps
add
repz
movsb
int3
or
push
cltd
fnstcw
push
mov
mov
mov
mov
xchg
rcl
adc
adc
inc
aas
push
les
sbbl
add
adc
xor
stos
call
mov
lret
outsl
jge
aam
mov
ljmp
pop
js
mov
inc
add
jnp
js
lret
xor
sub
call
iret
lcall
es
sti
push
xor
sbb
mov
push
jb
or
sti
sbb
adc
mov
gs
push
lea
xor
mov
jns
xchg
pop
out
movsl
xor
ja
cld
scas
jns
cmpl
push
imul
jmp
faddl
mov
xor
jecxz
adc
or
sbb
ret
pop
je
rcll
out
add
std
enter
cmp
lret
jne
xlat
cmp
mov
or
ret
cmp
xor
xchg
pop
jecxz
fildll
adc
sbb
mov
loope
dec
xchg
loope
inc
shrl
add
and
add
sub
sub
cmp
mov
fs
lea
bound
add
mov
inc
loopne
add
movsb
cmc
mov
jnp
cmp
iret
insl
cmp
mov
hlt
subl
push
add
popa
add
sbb
mov
ret
cmpsl
test
into
push
ret
push
add
cmpsl
in
cltd
mov
push
and
int3
push
inc
fdivs
push
jle
sahf
das
rcrl
in
addb
js
andb
in
js
jnp
gs
add
mov
lods
loopne
daa
shrb
xor
testl
dec
mov
add
pop
dec
cmpsb
shll
hlt
mov
fmull
jmp
cmp
push
subb
cmpsl
arpl
push
cmc
pop
fwait
loopne,pn
addb
ret
xorb
push
jge
mov
pop
sub
mov
mov
rcll
pusha
cmp
mov
jecxz
pop
outsl
pop
pusha
lods
inc
movsb
fxch
daa
int
pop
mov
xchg
sbb
add
cmp
sub
pop
rorb
cmpsl
pop
ret
bound
jle
fldenv
cmp
xchg
jne
mov
cmpb
xchg
xchg
addl
push
jnp
cmpb
xor
shrb
jecxz
xchg
fsubrl
fmull
jg
adcb
inc
mov
xchg
subl
ss
ret
imul
call
in
nop
ret
ss
cld
mov
xorb
mov
pop
nop
pop
jo
dec
dec
add
lcall
cmp
xchg
movsl
mov
dec
ffreep
outsb
das
or
cmp
ljmp
movsl
popa
mov
adc
in
ja
mul
mov
setnp
mov
mov
mov
sub
xchg
ret
add
jmp
mov
sub
mov
add
mov
cmpsl
or
add
pop
sub
mov
jecxz
cmpsl
pop
pop
cmp
mov
sub
adc
testl
cld
pop
dec
ret
xchg
lret
mov
sub
xchg
and
pop
shll
jl
pop
call
gs
rcl
out
call
lods
stos
daa
add
add
cmpsb
lods
movsl
aam
in
jp
rorb
int3
and
mov
movsl
fldenv
andb
xchg
sbbb
add
testl
pop
in
lret
loopne
sbb
mov
add
mov
adc
and
mov
ss
xor
inc
inc
xchg
mov
add
mov
inc
lods
push
ljmp
mov
scas
inc
mov
add
lock
mov
jmp
add
mov
jnp
push
jecxz
jg
hlt
mov
or
lcall
mov
stos
fucomi
shll
push
scas
add
hlt
sti
imul
add
sbbb
fs
repnz
mov
cli
jmp
adc
push
push
shll
addl
adc
inc
mov
stc
loope
cli
fsubl
loopne
sti
insb
or
and
sbb
jp
xchg
insl
movsl
dec
lock
add
loope
aam
mov
fs
pop
lgs
jmp
dec
mov
dec
ja
jl
mov
int
leave
push
test
xchg
out
ret
xchg
xchg
fadds
add
pushf
mov
push
fwait
pop
les
jmp
outsb
cmpsl
outsl
loope
push
push
xor
push
mov
inc
and
mov
pop
test
and
xchg
scas
cmp
xor
ljmp
insb
jp
push
cld
cmp
ja
adc
mov
mov
filds
ffreep
dec
xor
or
movsl
xor
int3
int
lahf
sahf
cmp
xchg
dec
insb
mov
into
je
into
inc
je
push
jecxz
mov
and
xor
cmpsl
sub
mov
lods
push
mov
lds
add
test
xor
adc
test
movsb
dec
movsb
xchg
cwtl
sti
jecxz
xchg
pop
or
adc
ret
xor
adc
cwtl
addr16
pusha
push
mov
sbb
and
movsb
xchg
jnp
mov
jno
or
push
in
pushf
pop
dec
push
bound
and
aaa
lods
cmpsl
dec
das
xchg
sbb
pop
sbb
shl
and
das
js
outsl
xchg
stos
adc
ja
dec
xor
rcll
dec
orb
and
leave
iret
sbb
adc
mov
cmpsl
into
movsl
jecxz
mov
jbe
mov
mov
or
mov
jmp
addl
adc
dec
push
pop
call
jae
mov
inc
mov
mov
data16
mov
ret
mov
sub
fwait
mov
shlb
pop
subl
jmp
mov
mov
int3
js
or
adc
mov
faddl
imul
cmpsb
lret
mov
dec
mov
andl
adc
fildl
push
sarb
add
into
data16
mov
inc
stos
push
popa
mov
add
push
scas
mov
mov
jnp
mov
mov
les
outsl
xor
push
aas
pusha
xor
and
jne
ljmp
pop
push
add
sti
mov
sbb
jge
cs
mov
xor
mov
dec
push
jb
push
pop
sahf
out
sub
pop
je
aam
negl
insl
clc
push
sbb
int3
mov
daa
mov
mov
mov
movsl
and
rolb
mov
subl
add
inc
in
mov
scas
sbb
mov
out
pushf
mov
and
scas
out
sbbl
test
fnsave
sub
mov
decb
xchg
mov
add
mov
icebp
mov
daa
or
mov
push
cmpsl
push
add
mov
mov
int3
and
mov
dec
or
mov
mov
addl
dec
iret
push
cmpsb
mov
lds
shl
mov
movsl
mov
repnz
xor
mov
xchg
cmc
cmp
orl
cmpsb
xor
leave
dec
xchg
sbbb
pusha
jecxz
mov
lods
subl
movl
mov
xor
mov
fisttps
xchg
sbb
push
jo
clc
int3
mov
sub
mov
scas
dec
mov
mov
mov
mov
mov
in
and
mov
mov
mov
jl
fisttps
ds
inc
or
and
fadd
dec
decl
mov
xor
xor
daa
push
mov
lret
test
movl
lcall
mov
mov
mov
xchg
mov
mov
mov
dec
mov
pop
addb
in
ds
outsw
fnstsw
push
mov
mov
jecxz
mov
dec
mov
mov
inc
inc
call
sub
ret
mov
cmpsl
sub
js
orl
mov
mov
mov
push
outsl
pop
sub
les
adcl
mov
ret
jo
cmc
loope
mov
mov
shll
punpcklwd
orb
push
cmp
nop
rol
push
dec
int3
movsl
loopne
mov
pusha
mov
mov
stos
rorb
mov
inc
mov
mov
pop
cmpl
and
cmp
test
mov
inc
mov
std
lods
int3
mov
or
daa
mov
out
mov
stos
mov
das
jne
add
loopne
cmpsl
mov
mov
das
jb
and
mov
mov
imul
inc
add
popa
mov
scas
subb
mov
sub
add
lock
or
and
lret
inc
ret
rorb
test
and
imul
jecxz
out
mov
popa
mov
or
mov
mov
imul
ljmp
hlt
mov
movsl
mov
xorps
addl
mov
fs
int3
push
mov
xchg
mov
sbb
mov
mov
mov
stos
mov
or
jo
xorb
je
int3
mov
pop
mov
add
orl
cmpsb
lods
movsl
ja
mov
inc
jecxz
xor
call
xor
repz
cmpxchg
js
or
movsl
cmpsb
mov
mov
into
mov
aas
mov
xor
xorl
sbbb
repz
jno
stos
mov
mov
addr16
xchg
mov
xorb
out
aam
int3
orl
dec
xor
loopne
jae
out
pop
mov
pop
mov
dec
jae
xor
mov
shrb
lds
sub
mov
dec
movsl
add
xorl
leave
mov
dec
push
push
pusha
jecxz
add
loopne
mov
and
aam
mov
das
inc
mov
mov
stos
mov
cmp
add
adc
lea
movsb
mov
dec
dec
lds
scas
pop
or
int3
mov
or
int3
mov
dec
or
rorb
or
rolb
int3
mov
mov
aam
mov
xor
les
mov
stos
or
mov
stos
xor
xor
loopne,pt
in
mov
xor
test
xor
mov
or
div
mov
xor
mov
cmpb
mov
andb
mov
cs
mov
mov
int3
orl
aas
cmp
loopne
inc
cmp
mov
xor
mulb
cmpb
push
outsl
cmpsl
clc
dec
loopne
push
add
mov
push
push
xorb
adcb
mov
stos
andl
lret
mov
jge
inc
int3
push
mov
sub
lea
cmpb
int3
andb
add
or
jne
int3
xor
ror
int3
mov
fildl
inc
add
or
inc
mov
scas
or
lea
mov
add
cmp
enter
mov
sub
lods
and
cmpsl
adc
adc
lcall
or
fsubs
mov
mov
adc
leave
das
add
mov
mov
push
xorl
push
repz
cmp
cmpl
mov
test
lea
add
mov
mov
outsb
dec
add
mov
mov
dec
es
int3
mov
inc
fnstenv
loope
mov
and
xor
cmpb
cmpb
or
cmp
sarb
int
pop
pop
sub
jp
dec
jmp
gs
xchg
ret
lds
test
flds
andb
push
mov
insb
xchg
fwait
xor
pushf
cmpl
popf
jae
inc
mov
inc
loopne
rclb
loopne
clc
adc
imul
pop
shrb
xor
test
or
sar
test
pusha
mov
xchg
adc
jecxz
mov
dec
aas
dec
sub
int3
aaa
inc
ret
pusha
sti
sub
xchg
cli
cmp
scas
fadds
imul
fildll
lods
cmp
and
fimull
orl
es
jmp
testb
int3
inc
xchg
insl
inc
data16
ret
lds
mov
std
mov
jecxz
outsb
dec
push
mov
fsubs
dec
movsl
mov
push
cmp
cltd
cmp
imul
push
push
pop
add
push
sahf
adc
push
fldl
sarl
mov
mov
stos
les
push
mov
sbb
push
outsb
mov
mov
shll
in
or
repnz
inc
mov
mov
test
mov
lret
or
iret
mov
mov
dec
mov
pop
mov
nop
cmpsb
iret
pop
xorl
mov
sbb
test
cmpsl
cmpsb
mov
popa
pop
orb
lea
pop
inc
mov
sub
sub
mov
mov
movsl
loope
mov
cmp
add
vmread
sbbb
insl
imul
pusha
mov
dec
push
jne
push
mov
out
dec
push
or
jecxz
adc
ss
adc
jmp
in
cmp
jmp
mov
push
sbb
aas
nop
int3
inc
sarb
aam
jle
ret
cmpsb
mov
xorb
cmpsl
es
lret
add
cmpsl
xor
dec
mov
cmp
mov
int3
mov
ret
pop
push
mov
cmpsl
stc
mov
test
inc
push
lret
in
push
orl
mov
test
pop
adc
in
pop
and
scas
jecxz
cmpxchg
xor
bts
mov
dec
push
add
mov
lock
add
xor
mov
push
cmp
ret
jecxz
aaa
jno
mov
loop
leave
xor
mov
or
adc
vcvtps2pd
dec
and
jae
mov
mov
mov
aad
mov
xor
mov
mov
and
dec
jg
arpl
aas
ffreep
aaa
dec
push
insl
mov
cwtl
js
mov
and
int3
sub
jecxz
jns
jmp
inc
or
int3
iret
stc
je
or
add
mov
mov
das
cmpsb
add
subl
mov
rorb
mov
mov
cmc
mov
popa
jae
jbe
jno
xor
mov
pop
mov
sti
cmc
rolb
and
mov
mov
cmpb
sub
lret
inc
mov
and
movsl
mov
popa
adcl
mov
xorb
addr16
test
popa
fmulp
mov
int
cmp
mov
ret
movsl
mov
lret
cmc
mov
cmp
add
out
pop
repnz
clc
pop
and
sbb
mov
pop
ror
jae
mov
add
dec
mov
cmp
or
push
daa
cmp
mov
addb
adcb
add
fs
push
pop
test
mov
out
pushf
sti
mov
inc
mov
int3
mov
mov
adc
jb
daa
push
orb
ret
lcall
ss
inc
and
mov
lods
subb
in
icebp
mov
or
test
and
test
mov
cs
adcb
orb
jo
mov
mov
in
aad
stos
mov
xor
pop
mov
dec
pop
mov
mov
dec
fnstenv
inc
push
cmpsl
mov
mov
add
lea
mov
mov
int3
js
les
xor
cmpb
cmpsb
mov
cmpb
movsl
les
das
mov
packssdw
popa
shlb
push
or
subl
int3
mov
test
pop
jno
xor
je
mov
xor
xchg
inc
lret
inc
xor
mov
mov
popl
aaa
aaa
shl
mov
push
jae
cmp
fs
rorb
pop
inc
int3
mov
cli
jecxz
cmp
or
int3
or
jecxz
mov
rclb
ficoms
cld
sbb
mov
int
push
pop
add
sahf
cld
cmp
push
int3
xor
ds
push
fxch
xor
jno
push
xchg
add
sbb
sahf
idivl
push
push
xchg
xor
sbbb
cld
cmp
sbb
push
sahf
ret
push
mov
cld
in
ss
sub
mov
mov
int3
mov
call
and
andb
ret
mov
daa
cmp
jb
mov
iret
or
inc
testb
mov
or
jp
mov
int
xorb
inc
push
cmpb
mov
bnd
mov
push
mov
xor
push
add
cld
add
pop
mov
dec
cmp
xor
jle
mov
or
sub
lret
dec
inc
fistps
mov
shl
lahf
inc
fs
mov
or
mov
cld
mov
in
subl
jmp
test
and
mov
pop
pop
mov
dec
sbb
out
int3
add
sbb
sbb
xor
sub
push
mov
sub
test
fs
xor
popl
rorb
adc
mov
mov
cmc
adc
dec
sarb
andb
subl
fs
mov
mov
jo
in
xchg
mov
lods
mov
inc
outsb
rep
loop
cmp
pavgw
mov
mov
sub
andl
mov
xor
mov
mov
sbb
or
ret
cmp
and
dec
movsb
lods
xchg
jo
mov
and
cvtdq2ps
jecxz
cmp
bt
dec
push
sub
xor
aad
rcrl
sbb
pop
nop
xchg
int3
inc
popf
push
mov
ret
fimull
lret
inc
nop
imul
loop
or
ret
xor
scas
bsr
inc
aas
mov
jb
mov
scas
mov
cmp
mov
test
subl
dec
mov
or
dec
or
mov
int3
dec
inc
jno
push
inc
orb
sarl
adc
repz
xchg
mov
mov
mov
cmpsl
inc
adc
lock
lock
inc
fstps
and
mov
and
xor
or
dec
dec
movsl
jecxz
mov
js
insl
cmp
repz
test
mov
cmpsb
xor
decb
rorb
xorb
scas
inc
cs
test
jne
mov
mov
gs
push
inc
orb
cmpb
loopne
push
jl
mov
dec
in
jo
cmp
mov
cmpsl
mov
xchg
scas
mov
adcb
movsl
sub
add
mov
cmpl
int3
xchg
in
mov
mov
cmp
mov
and
int3
push
das
and
test
mov
andb
mov
cmpsl
bound
loop
scas
cmovnp
cmpb
mov
subl
adcb
dec
jne
jno
mov
mov
shlb
mov
add
jecxz
xor
cs
jmp
mov
cmp
lods
sub
xchg
mov
addb
sub
orl
test
push
mov
xchg
inc
mov
mov
sarb
mov
pop
sub
addb
aaa
fcmovnbe
mov
jb
pop
mov
xor
mov
cmpsb
sub
mov
mov
inc
rorl
rorl
mov
hlt
aad
inc
outsb
cmp
mov
in
fidivrl
jp
dec
mov
mov
test
test
jg
pop
addb
std
xor
jb
xor
xorb
xor
mov
mov
in
dec
mov
mov
scas
adc
inc
mov
lods
dec
mov
mov
ret
lret
das
arpl
mov
jg
test
jb
mov
inc
xor
btr
ja
ljmp
mov
jno
push
add
xor
mov
faddl
mov
push
mov
mov
hlt
inc
movb
push
mov
mov
adc
lret
les
sahf
into
cmp
mov
popa
xor
fimull
or
enter
and
cmpb
add
xorl
dec
cmp
add
mov
rorb
mov
mov
test
imulb
sbb
sub
cmp
orl
mov
and
test
fstpt
mov
mov
mov
push
sar
sbbb
mov
sub
mov
popf
das
or
adc
loopne
stos
cmp
and
cmp
fadds
cmp
mov
orl
sub
mov
fcoms
insb
lcall
adc
nop
fbld
xor
popl
clc
dec
adc
ficoml
inc
shrl
xor
nop
jb
mov
inc
shll
mov
dec
xor
sbb
nop
adc
rclb
subb
inc
les
test
adc
mov
add
push
mov
les
push
and
mov
stc
hlt
inc
push
cwtl
int
test
js
xchg
jecxz
push
fnstenv
cmpsl
rorb
push
jp
add
test
sti
cld
mov
adcl
mov
and
std
shr
lds
jb
mov
les
mov
xorb
loop
mov
and
mov
popa
mov
xchg
xor
aaa
out
or
mov
pop
stos
sbb
int3
or
mov
test
cmp
enter
xorb
jne
subb
add
xchg
test
inc
push
lods
aaa
hlt
imul
in
xchg
loopne
adc
inc
sub
cld
cmp
das
movsl
inc
inc
call
xchg
shl
mov
daa
dec
test
mov
imul
jecxz
ljmp
in
test
lock
add
xor
lret
cmpb
mov
add
dec
add
cmp
les
add
sbb
lods
mulb
mov
mov
push
fmul
inc
pop
daa
movsl
push
mov
fsub
out
adc
add
mov
cmpb
test
out
mov
xor
mov
xchg
mov
cmpl
mov
ds
ljmp
mov
sub
jge
or
push
cld
lods
aam
mov
loopne
into
dec
test
addl
jecxz
adc
enter
adcl
lcall
adc
mov
mov
loope
sbb
and
out
mov
es
mov
add
xor
mov
cltd
inc
push
mov
fadds
inc
jecxz
cmp
sti
cmp
es
outsl
lods
sbb
mov
dec
mov
shlb
push
in
mov
sbb
subl
push
addl
mov
jb
xchg
lea
mov
ret
mov
int3
mov
pop
xor
addl
pop
sub
mov
pop
addb
cmpsb
ret
fisttpll
stos
daa
mov
iret
mov
pop
xor
inc
int3
mov
pop
leave
mov
push
shlb
adc
inc
mov
dec
mov
repz
mov
cmpl
adc
jnp
jecxz
rolb
leave
mov
sub
push
icebp
iret
inc
or
pop
pusha
sbb
or
iret
popa
cmpl
mov
jae
jbe
out
mov
jo
fcoms
cltd
mov
mov
pushf
pop
cmpb
aas
xchg
rcl
adc
orl
bnd
xchg
jecxz
xor
push
fs
add
mov
cmp
mov
mov
jmp
mov
mov
mov
jne
shl
add
inc
pop
lret
mov
lcall
jbe
test
jb
sbb
sub
cld
sbb
sbb
pop
js
adc
rolb
test
ja
inc
mov
mov
mov
add
fs
and
mov
mov
andb
clc
add
repz
xorb
pop
addl
lret
jecxz
test
lea
jl
dec
mov
add
es
orb
test
movsl
dec
fisubrl
jae
mov
cmpsl
push
mov
mov
pop
clc
rcll
out
scas
in
imul
into
in
pop
loopne
xor
lret
mov
xlat
dec
test
mov
movsl
mov
xlat
mov
dec
xchg
lods
push
mov
cmpsb
or
iret
lea
mov
lret
mov
inc
ds
mov
push
mov
dec
mov
into
xorl
gs
imul
lret
mov
or
mov
lock
sti
orb
mov
jle
pop
mov
mov
or
xor
jbe
xor
das
loopne
insl
dec
mov
mov
aaa
mov
dec
loop
cmpb
dec
mov
mov
test
push
and
mov
ds
mov
mov
gs
hlt
inc
add
or
mov
subl
cmpsb
mov
cmp
in
cmp
dec
fidivrl
int3
addb
mov
aaa
xorb
mov
data16
int
mov
or
cltd
and
cs
adc
mov
cs
popa
addl
and
jmp
dec
mov
mov
jmp
imul
loop
or
mov
xor
mov
mov
lock
mov
or
jnp
xor
jmp
insl
mov
cmc
xor
rorb
push
sub
sarb
and
mov
mov
into
cld
in
mov
mull
jno
cmpl
test
or
and
cmpsl
and
or
lock
mov
adcb
add
roll
mov
ja
mov
out
data16
test
in
sti
int3
mov
sbb
cmp
hlt
push
and
lock
addl
mov
cwtl
loop
cmpsl
rolb
ja
into
push
cs
mov
mov
daa
or
lret
lahf
add
mov
outsl
test
mov
add
movsl
mov
or
mov
stos
mov
add
loope
mov
xlat
rcl
js
add
fstpt
sub
xor
insb
loop
test
aam
std
and
clc
icebp
mov
jg
mov
add
mov
icebp
push
sub
add
clc
sarb
mov
and
xor
or
cmp
les
xor
int3
add
int3
adc
mov
adcl
int3
mov
cmp
in
movsl
popf
push
lret
orl
jns
loopne
cld
or
int3
mov
and
mov
daa
jle
inc
fsubs
mulb
add
scas
cmc
mov
loope
cmpb
stos
mov
roll
rorb
addb
pushf
xlat
mov
int3
into
pop
mov
add
inc
mov
add
dec
cmp
push
jp
adcl
int3
lea
pop
xchg
push
out
mov
push
lret
cmpsb
std
mov
pop
mov
sub
mov
jo
repnz
inc
imul
mov
or
sub
push
repz
movsl
sbb
xor
mov
pop
adc
or
or
in
inc
or
xor
inc
insl
add
or
xchg
aam
lods
ret
sub
xchg
aaa
jne
lcall
or
sbb
push
stos
out
dec
lret
or
cmpsl
es
fisttpll
fisubrl
mov
mov
cmc
sahf
xor
mov
add
cs
lods
cld
sti
mov
dec
aaa
push
dec
int3
mov
lea
sti
roll
addl
add
inc
lods
pop
mov
aaa
shlb
mov
ret
or
mov
push
or
cwtl
cmp
mov
mov
or
push
shrb
mov
lock
out
pop
mov
cmp
xor
rol
int3
mov
leave
mov
add
xchg
push
inc
ret
add
push
xchg
jmp
sti
mov
push
nop
shl
and
mov
cmpsl
xchg
or
mov
push
insl
ffreep
add
test
mov
fistpll
cmpsl
and
gs
es
bound
sub
imul
sub
add
xchg
pusha
dec
test
xchg
mov
mov
xor
pop
mov
cmp
sbb
sub
ss
xor
mov
shlb
mov
shll
xchg
insb
lea
jno
lcall
rolb
add
cmp
enter
mov
pop
mov
popa
std
or
mov
mov
outsl
mov
andl
out
push
add
orb
idiv
mov
mov
pusha
dec
push
mov
add
rclb
rorb
mov
mov
cld
addl
mov
inc
inc
scas
cmp
or
and
and
mov
fists
addl
cmp
push
jl
dec
inc
std
fldl
jmp
jg
add
repnz
int3
je
movsb
sub
test
mov
adc
aaa
out
mov
imul
sub
xor
mov
cmp
push
mov
mov
les
push
mov
stos
js
inc
xor
mov
add
test
ds
mov
sti
xor
cmpsb
mov
xchg
int3
mov
das
push
add
jae
mov
add
addl
pop
xor
addl
popl
cmpsl
push
or
movsb
mov
or
xor
pop
andl
testl
orl
cmp
xchg
add
push
repnz
mov
fwait
daa
icebp
xor
push
shll
mov
mov
sub
aaa
jmp
repnz
sti
xor
into
pop
dec
pop
loop
jnp
dec
pop
fstl
pop
inc
jbe
xchg
mov
and
das
inc
push
inc
xchg
call
and
fs
cld
and
inc
sub
xchg
push
jno
add
aas
loop
rcrb
mov
mov
xchg
mov
mov
outsl
mov
mov
add
mov
mov
mov
push
mov
jl
cmpsl
and
sub
mov
mov
into
or
add
inc
test
sub
cmp
mov
mov
dec
into
mov
cmpl
and
lsl
loop
out
mov
cs
and
mov
fiaddl
pop
setl
test
sub
cld
sbb
test
xor
lea
je
cmc
push
pusha
add
pushf
movw
movb
pushl
lea
jmp
jmp
add
inc
jb
popa
je
push
outsl
jne
fs
arpl
outsb
add
mov
or
jmp
pushf
lea
ja
bt
push
call
bt
add
jmp
mov
xor
not
mov
cmc
mov
cmc
movsbw
mov
shr
sbb
test
sub
mov
adc
clc
jge
sub
jmp
pusha
mov
push
lea
jg
mov
pusha
lea
jmp
add
inc
outsb
fs
popa
add
add
outsl
bound
push
imul
dec
lock
xchg
out
add
or
insb
push
ljmp
aam
stos
loope
bound
xchg
stos
scas
mov
jbe
stos
xchg
xor
sti
ss
xor
test
pop
in
cmp
dec
je
jp
adc
call
adc
sub
bound
mov
ljmp
xor
or
iret
jo
in
mov
add
je
outsb
jne
push
popa
jb
inc
imul
outsb
jae
setnp
mov
stc
bt
bt
and
jmp
add
inc
gs
outsl
arpl
add
jle
or
add
ja
jbe
dec
jne
push
gs
je
xor
mov
inc
cmp
push
stos
enter
jmp
cli
cmp
stos
int3
clc
jecxz
or
xor
jns
pop
shl
call
mov
inc
push
stos
stos
sbb
sbb
sbb
push
or
xor
push
lcall
test
pop
add
sar
neg
rcr
mov
call
dec
pushf
lea
jne
pusha
pushf
pushf
lea
jmp
call
add
inc
jb
gs
imul
add
ja
jbe
dec
jne
push
jb
je
add
aaa
sti
scas
add
pop
mov
cwtl
push
mov
xchg
daa
lahf
stos
mov
xchg
pushf
inc
sbb
cmp
inc
sub
xor
rcrb
std
mov
pop
ds
jp
js
xchg
sbb
xor
scas
aam
or
adc
sets
mov
add
test
sbb
aad
jecxz
xchg
sub
add
dec
insb
gs
outsb
imul
imul
jb
cmc
bt
cmp
test
pusha
pushf
mov
lea
je
push
and
pusha
lea
jmp
add
push
gs
gs
jae
inc
popa
jo
jne
add
add
je
gs
inc
outsl
insb
outsl
jb
rcr
mov
test
and
jae
bt
bt
test
add
pusha
test
add
pusha
dec
mov
call
call
add
dec
outsb
jbe
insb
imul
je
pushf
sub
call
add
inc
gs
outsb
jne
je
insl
dec
inc
add
rclb
or
inc
sub
add
jb
insb
insb
push
imul
add
add
je
jb
arpl
arpl
add
jb
jne
insb
inc
jb
add
add
je
imul
bound
gs
add
add
add
add
add
jmp
add
int
add
sbb
add
add
add
out
add
into
sbb
sbbl
add
add
add
sbb
add
add
add
add
add
or
add
sbb
xchg
sbb
add
add
add
push
push
add
sbb
mov
add
add
add
add
rcrb
dec
sbb
add
add
add
je
sbb
add
add
add
add
add
sbb
add
add
add
add
add
inc
sbb
add
push
sbb
add
add
add
aam
add
push
sbb
add
add
add
add
push
sbb
add
add
add
adc
add
add
add
add
add
sbb
add
sbb
popf
pop
sbb
add
add
add
push
add
sbb
lods
pop
sbb
add
add
add
push
sbb
add
add
add
add
add
push
push
add
sbb
leave
pop
sbb
add
add
add
aad
add
or
jb
mov
cmp
outsb
jmp
add
xor
stos
xchg
std
jns
pusha
int3
icebp
inc
fwait
stc
sahf
int3
int
dec
and
push
mov
or
add
push
stos
push
lea
jmp
jl
inc
cmpsl
pop
mov
mov
jnp
in
jb
sbb
push
std
add
fmul
arpl
cmpsb
lahf
xchg
xchg
mov
setnp
aas
cmpsl
inc
iret
and
stos
fwait
mov
mov
std
mov
rcl
inc
ds
aam
fwait
pop
loop
mov
push
jbe
cmp
lret
push
divps
test
add
dec
gs
popa
addr16
outsl
js
add
cmp
mov
xor
lret
es
add
sub
push
mov
hlt
push
mov
int
test
repz
sub
cmp
xchg
pop
mov
inc
lea
stos
psrld
mov
mov
adc
sbb
out
scas
imul
movzbw
mov
movsbw
xchg
lea
jnp
pop
not
pop
jmp
add
add
add
push
gs
popa
outsb
fs
gs
outsl
jne
je
add
inc
imul
outsl
dec
outsl
arpl
inc
imul
push
fstl
xchg
test
fwait
add
jecxz
push
out
data16
pop
ja
in
mov
inc
out
push
out
xchg
mov
pop
xor
xchg
stos
mov
popa
push
cmp
mov
les
sarl
add
fs
imul
xlat
pop
mov
popa
movsb
addr16
out
bound
inc
mov
int3
in
call
xor
sarb
push
mov
aas
hlt
pop
mov
inc
and
shl
daa
dec
and
mov
scas
pop
jns
add
or
std
cmp
enter
cli
hlt
push
pop
push
lcall
xchg
dec
addl
stos
test
xor
sbb
ljmp
test
dec
mov
xchg
mov
pop
push
mov
adc
jge
xor
lret
mov
out
and
cmp
adc
enter
xlat
jnp
ret
fldcw
fidivl
jl
push
add
imull
mov
test
push
and
in
inc
nop
pushf
jl
lcall
insl
mov
jo
dec
xor
pushf
pop
xchg
and
js
mov
shll
mov
cmp
sarl
push
cmp
adc
aaa
mov
xchg
pop
mov
mov
pop
bound
aaa
pop
stos
xchg
imul
stc
dec
test
sbb
sar
cmpsl
jb
add
je
imul
outsb
addr16
add
idivb
adc
cmp
fiadds
ljmp
adc
ja
pop
nop
rcr
fmul
das
and
cmp
cld
cmp
xchg
lahf
dec
push
pop
outsl
stos
xchg
push
mov
mov
insl
jno
in
dec
xor
cli
push
inc
ja
and
push
scas
sub
sarl
sahf
popa
ja
rcrl
or
add
subl
add
call
push
call
scas
inc
pop
movsb
push
add
je
inc
add
movzwl
not
pusha
mov
cmp
jmp
or
mov
jmp
push
lea
call
pushf
lea
jae
stc
pushf
clc
xor
pushf
jmp
add
push
je
imul
add
push
gs
gs
jae
push
gs
popa
jo
outsl
jb
add
add
je
gs
arpl
popa
jo
add
mov
jno
and
jo
add
push
arpl
jae
bound
push
and
insb
das
addl
jecxz
jmp
xchg
mov
dec
jecxz
mov
sti
dec
das
repnz
inc
lcall
xchg
imul
icebp
adc
lret
dec
mov
cmp
adc
icebp
mov
jl
out
xchg
lret
ja
call
lods
add
rcrl
jecxz
pop
daa
add
jo
aam
int3
jle
rcrl
inc
and
into
dec
ss
pop
add
jbe
add
je
outsb
jne
je
insl
inc
outsl
jne
je
imul
dec
ret
sbb
int
aam
cmpsb
fldt
jne
jge
loop
mov
mov
mov
je
cmp
pop
mov
fwait
jle
push
sarl
fwait
sbb
push
vmptrld
dec
jno
jo
inc
push
jns
lea
push
in
xor
js
in
jmp
xchg
bound
inc
dec
data16
mov
xor
mov
enter
pusha
and
cmp
jae
push
mov
jmp
shlb
dec
jns
sub
xor
lret
aam
pop
movnti
sbb
pop
fdivl
adc
adc
mov
push
or
dec
insb
xor
jns
push
xor
hlt
pop
scas
mov
hlt
jmp
inc
and
jmp
ss
cmp
addl
dec
fldcw
mov
sbb
in
loop
mov
mov
cmp
sbb
outsl
xchg
mov
pusha
add
jne
push
push
xor
aad
cmp
hlt
sub
ja
jnp
stos
out
out
sbb
lods
and
nop
shll
insl
daa
cmp
xchg
mov
and
pop
loop
xor
mov
fisubl
fisubrs
add
push
gs
arpl
add
je
gs
je
je
add
add
jo
jns
insb
imul
add
stc
test
shr
clc
bt
jmp
jmp
pushf
jmp
add
inc
outsl
insl
jo
jb
push
je
imul
inc
js
insb
jne
gs
insb
imul
in
stos
inc
xchg
inc
fisubrl
lcall
stos
icebp
sub
mov
adcb
cld
test
fcoms
pop
jecxz
sub
seto
mov
ljmp
roll
in
xchg
xchg
cmp
adc
sub
icebp
lods
stc
jmp
add
push
gs
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
adc
adc
pop
add
adc
rol
add
test
bt
jmp
mov
add
mov
aaa
dec
das
xlat
repz
mov
pop
sbb
xchg
psubusb
cmp
adc
and
lret
scas
ret
adc
lds
jle
lods
cmpsl
adc
mov
xor
push
sbb
cmpsb
pop
xchg
mov
push
call
pop
movb
mov
bswap
movzbw
pusha
push
mov
pushf
push
pushf
pushl
ret
call
add
push
popa
imul
je
jo
gs
bound
arpl
lods
call
shr
inc
call
add
ja
jo
imul
add
insb
outsl
arpl
imul
addr16
insb
outsl
jae
dec
gs
add
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
jne
jb
outsb
je
jb
arpl
jae
call
add
push
gs
popa
jae
inc
jb
outsl
jb
add
inc
gs
imul
imul
jns
add
fs
jae
mov
pusha
mov
call
stos
mov
mov
jmp
xchg
into
and
aaa
lcall
push
stos
roll
jo
ds
mov
fnstsw
dec
xchg
pushf
popa
imul
sbb
pop
push
lcall
inc
and
add
outsb
lods
cltd
sub
test
in
imul
mov
in
ror
push
movsbw
and
movsbw
bts
push
xchg
mov
sar
push
cmc
bsr
xadd
push
cwtl
cwtl
rcr
push
clc
push
bsr
lea
shld
pusha
btr
mov
test
test
call
add
inc
gs
gs
jo
popa
je
inc
add
mov
shll
rclb
xchg
fcomps
mov
inc
xor
std
leave
arpl
ja
or
inc
xlat
sub
xor
and
lcall
add
jle
push
clc
popf
mov
fldt
adc
data16
xorb
add
std
xchg
mov
sub
cltd
mov
xchg
push
push
dec
notb
dec
sub
and
stos
mov
cmp
and
scas
lret
test
popa
jl
stos
mov
inc
or
lock
mov
pushf
call
pusha
jmp
add
push
gs
je
dec
popa
outsb
fs
add
add
popa
insb
gs
imul
je
js
inc
rol
mov
stc
sbb
sub
cmp
or
pushf
shr
pushl
mov
jmp
push
call
stos
mov
call
movsl
sub
pop
test
sub
and
pushf
xor
sbbl
mov
fwait
divl
sbb
jb
add
je
imul
arpl
fs
call
pushf
adc
pushf
call
add
inc
gs
je
imul
push
add
add
je
jb
arpl
fs
jae
add
adc
sti
pop
jae
into
jle
xchg
mov
mov
mov
cwtl
int
repz
clc
add
lds
pop
imul
mulb
cmp
add
inc
gs
push
dec
outsb
outsw
add
add
imul
jae
addr16
add
add
imul
inc
add
popf
push
call
rolb
dec
outsb
data16
popa
je
push
arpl
add
je
gs
popa
addr16
imul
gs
imul
je
js
jb
in
sub
push
xchg
scas
xchg
lock
mov
test
sahf
xchg
aas
repz
fwait
sub
add
push
dec
push
lods
out
mov
inc
insb
sti
cs
dec
test
mov
mov
test
sub
dec
push
imulb
jg
lods
imul
das
shlb
pop
pop
pop
push
dec
mov
lods
mov
adc
sub
jmp
pop
test
mov
daa
cltd
pusha
in
cmpsl
add
inc
gs
jne
dec
outsb
jne
jmp
add
inc
gs
jne
jb
outsb
je
bound
arpl
aaa
popl
cmc
push
cmp
movb
call
stc
stc
mov
add
cmp
pusha
stc
mov
btr
sub
xchg
shld
rcl
mov
mov
pushf
lea
mov
clc
cmpsb
pusha
lea
jne
jmp
add
inc
popa
insb
insb
push
imul
outsl
arpl
lea
call
clc
call
add
inc
gs
gs
inc
imul
add
pushl
pusha
pushf
lea
jmp
addr16
cltd
in
jo
aaa
sub
xor
int
stos
mov
xchg
cmp
xchg
push
push
int
pop
dec
les
sub
lods
ret
pushf
adc
hlt
std
jle
sbb
lahf
mov
stos
xor
mov
cmpsb
mov
dec
push
mov
mov
or
shll
idivb
bound
and
push
stos
lea
pop
mov
mov
jb
jns
and
scas
pop
sets
add
sti
clc
add
jnp
out
jnp
popf
dec
mov
mov
push
gs
fs
imul
add
add
and
pusha
mov
test
or
mov
cmp
repnz
pusha
pushl
jmp
add
inc
outsb
fs
popa
je
add
add
push
imul
pusha
clc
add
call
and
mov
xchg
mov
adc
fdivl
and
push
stos
push
mov
push
inc
pop
push
mov
pop
data16
or
xorl
xchg
cwtl
pop
cmp
subl
mov
fdivp
std
data16
push
add
dec
int3
mov
ds
loop
adc
mov
daa
in
adc
cld
out
psubq
ret
xchg
adc
cld
push
mov
sub
icebp
or
int
cmp
shrb
pop
shl
jmp
mov
xchg
xchg
int
sub
fcompl
fidivl
mov
adc
jecxz
aas
sbb
test
mov
dec
push
pop
xor
or
pop
int3
notb
ss
std
mov
sbb
xlat
inc
jp
inc
clc
mov
cli
fnsave
sub
pop
lock
mov
or
or
shrl
cli
sahf
push
sbb
sti
dec
in
sub
push
pop
lock
repnz
cmp
sbb
xchg
test
fimull
arpl
cmp
stos
dec
arpl
xchg
cld
clc
inc
stos
jge
and
push
mov
add
test
jp,pt
adc
pop
ffreep
gs
rcr
pop
mov
sub
jnp
loopne
adc
stos
cmpsb
mov
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
lea
je
movsbw
inc
mov
movzbw
bsf
shl
mov
pushf
stc
pushf
add
cmp
mov
mov
cmc
test
test
push
lea
je
cmc
bt
add
mov
rol
mov
bts
mov
dec
mov
cmc
jb
test
pushf
lea
je
bsr
rol
add
jle
and
clc
btc
mov
stc
call
add
push
gs
dec
inc
imul
imul
mov
or
lea
jae
rcl
xor
mov
not
push
mov
bts
sbb
btr
btc
mov
cmp
mov
cmc
call
add
inc
imul
push
gs
imul
outsb
add
pop
jmp
scas
pusha
pusha
pushf
pushl
lea
jne
bts
mov
stc
shrd
sub
inc
mov
jmp
in
sbb
xlat
hlt
es
icebp
add
inc
sbb
add
call
add
pop
sbb
add
push
add
fistpl
mov
sbb
add
adc
add
pop
sbb
add
add
add
add
xorb
add
orb
addb
add
adc
add
adc
add
sub
add
pop
sbb
add
call
sbb
add
and
add
hlt
es
fcompl
adc
into
lock
xor
add
add
add
pop
sbb
add
or
add
and
sbb
ret
pop
sbb
add
xor
add
icebp
add
jmp
sbb
add
es
or
add
bound
add
and
add
pop
sbb
add
ficompl
mov
sbb
mov
sbb
dec
sub
sbb
jnp
es
dec
sbb
add
and
add
mov
sbb
scas
in
sbb
in
add
add
add
add
push
add
inc
sbb
add
enter
les
lahf
xlat
sbb
fwait
in
add
daa
sbb
add
add
add
sbb
add
push
sbb
add
lds
or
es
lds
cwtl
repnz
sbb
add
sbb
adc
add
push
sbb
add
fcompl
fcmove
sbb
je
push
add
add
push
sbb
add
bound
add
sbb
add
mov
sbb
add
push
sbb
add
add
cld
sbb
add
inc
sbb
add
loop
add
sub
sbb
add
loope
add
dec
sbb
add
push
push
add
in
add
sbb
add
sub
sbb
add
sbb
mov
sbb
add
mov
sbb
sub
add
out
add
add
add
dec
sbb
add
sbb
add
and
add
sbb
add
add
ds
add
fistpl
movsb
loopne
add
add
add
mov
sbb
add
sub
add
call
sbb
stc
mov
sbb
add
dec
sbb
add
sbb
add
mov
add
es
add
inc
sbb
add
add
leave
sbb
mov
enter
dec
sbb
add
dec
sbb
add
sti
sbb
add
adc
add
sub
push
add
out
add
sbb
add
sbb
xchg
add
push
sbb
add
ficomps
es
adc
add
add
sbb
add
or
add
push
add
add
and
sbb
add
call
add
aad
add
add
add
dec
sbb
add
add
sbb
sub
push
add
sbb
add
sbb
add
ret
sbb
sbb
sbb
jge
sbb
std
fcomps
enter
loopne
sbb
add
sbb
add
enter
mov
add
in
sbb
or
add
mov
add
or
add
mov
es
add
add
sbb
cmpsl
sub
add
sub
add
loop
add
enter
ret
sbb
or
add
sbb
add
inc
sbb
add
add
add
icebp
es
jmp
add
dec
sbb
add
sbb
in
sbb
mov
sbb
loopne
es
hlt
add
push
add
enter
clc
es
sbb
add
mov
push
add
mov
push
add
sbb
add
lret
sbb
loopne
es
fistpl
dec
and
add
fistps
push
mov
sbb
add
ret
sbb
fmull
add
add
inc
sbb
add
call
sbb
add
sbb
add
or
add
pop
sbb
add
ljmp
int
add
sbb
add
push
sbb
add
push
add
loop
add
add
add
or
add
sbb
jp
sbb
movsl
dec
sbb
add
and
add
add
sub
push
add
arpl
add
add
jmp
add
enter
sbb
shlb
and
sbb
xlat
in
es
add
add
clc
es
cmc
add
rcrl
jmp
add
in
sbb
daa
lock
xor
add
xor
add
dec
sbb
add
sbb
add
mov
add
sbb
repnz
sbb
or
add
sbb
add
jecxz
add
sbb
add
lret
sbb
mov
sbb
cmp
sbb
test
sbb
add
lock
loop
add
out
add
pop
sbb
add
add
add
sbb
mov
es
out
add
out
add
add
add
add
add
push
add
in
add
add
add
sbb
test
sbb
add
add
add
add
add
sbb
add
adc
sbb
shlb
add
add
es
add
add
add
out
add
sbb
add
add
add
inc
sbb
add
sbb
arpl
es
pop
sbb
add
mov
sbb
add
sbb
add
add
adc
add
sbb
add
or
add
add
add
or
add
adc
add
or
add
sldt
andb
add
mov
add
adcb
add
movsl
add
addb
add
push
es
subb
sbb
add
add
addb
add
mov
add
sbb
add
add
add
sbb
add
add
push
call
mov
jmp
fildl
stos
xchg
adcl
push
dec
jns
stos
ss
shl
xor
mulb
inc
and
lret
add
jo
outsb
fs
outsb
jne
add
test
fwait
sub
add
incl
fldln2
xor
mov
pusha
mov
cld
xor
adc
fisubrs
push
push
sbb
repnz
push
enter
aaa
push
jle
into
jecxz
cmc
out
imul
stos
aaa
dec
fstl
imul
lods
scas
jg
add
outsb
pop
and
pop
adc
mov
xchg
mov
pop
dec
imull
out
mov
sbbl
mov
shr
cmpsb
jge
lods
jmp
push
mov
mov
dec
sub
mov
pop
lret
lahf
shll
cmp
jo
cmpsb
popf
pop
sahf
adc
jns
cmp
push
sub
lock
pop
subb
mov
enter
shlb
aaa
sbb
add
pushf
ret
lahf
inc
test
xor
or
pop
inc
test
outsl
sub
lods
inc
cmp
jmp
lds
push
mov
fwait
inc
cwtl
sti
mov
inc
pop
pop
aad
mov
and
cmpl
arpl
sub
push
jmp
sti
ret
push
stos
jle
subl
nop
scas
out
dec
addr16
sbb
add
pop
cmp
test
roll
adc
enter
xor
insb
dec
xor
enter
xchg
mov
mov
stos
inc
stos
mov
mov
lea
pop
mov
into
or
push
sets
xchg
clc
add
ret
inc
subl
pop
jecxz
cli
add
add
inc
gs
insb
popa
jae
dec
bound
arpl
add
insl
jo
jb
push
je
imul
mov
fs
jae
shr
adc
rcr
pushf
mov
adc
movzbl
test
xchg
mov
btc
shr
mov
test
sub
stc
jmp
add
push
gs
arpl
insb
gs
add
push
cmp
test
jmp
lea
jne
cmp
movzwl
rcl
shl
mov
push
pushf
add
movb
mov
stc
pusha
clc
stc
test
movw
lea
je
call
cmp
pushf
pusha
jmp
lea
je
pushf
pushf
pushl
push
lea
jmp
pusha
das
repnz
int
mov
fwait
maskmovq
ret
stos
sub
clc
push
loopne
stos
jl
test
xchg
dec
lock
jp
test
adc
xchg
or
mov
pop
jecxz
pusha
ja
jbe
jl
fs
add
divl
aas
loope
xor
fsub
stc
mov
add
adc
lds
cwtl
mov
dec
and
add
clc
add
and
insb
lahf
ffreep
stos
rcrb
add
dec
jae
outsl
outsl
insl
gs
pushf
lea
je
push
mov
movb
lea
jmp
pop
dec
cld
jo
inc
sti
mov
and
pop
cmp
fs
mov
push
xchg
sub
fidivrl
das
xor
mov
lods
cmpsl
sbbb
cmpsb
adc
popf
stos
xor
jecxz
dec
sub
in
pop
mov
out
cltd
xor
scas
pop
jno
outsb
mov
cmp
xor
cmp
mov
cmp
sub
push
pop
fidivl
mov
cmpl
addr16
jge
les
dec
jne
andb
outsw
adc
pop
sub
xor
push
aad
unpcklps
lret
pop
mov
rolb
and
jmp
pop
push
into
sub
ret
adc
cmp
fs
fistpll
push
mov
push
add
jl
sbbl
ret
dec
pop
xor
and
sub
repnz
movb
pushf
lea
jne
movsbl
jmp
add
insl
imul
insl
push
je
jo
add
inc
gs
je
gs
push
outsl
fs
addl
mov
add
clc
xchg
test
mov
pusha
stc
clc
mov
pusha
jmp
movl
pushf
mov
pusha
pushl
ret
movb
movw
lea
jle
jb
pusha
clc
cmp
call
lea
je
ror
add
clc
jmp
pop
call
add
stc
mov
cmp
stc
test
call
add
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
outsl
arpl
add
adc
add
fdivrs
or
mov
add
sar
sub
jmp
add
insl
imul
gs
jb
dec
gs
fs
add
inc
gs
outsb
jne
clc
shr
cmp
pushf
pushf
cmpl
movb
push
lea
je
not
mov
btr
sub
bts
shr
btr
jmp
push
call
roll
add
je
imul
inc
js
inc
js
add
inc
insb
outsl
bound
push
gs
insb
insb
outsl
arpl
add
seto
bts
bswap
jmp
add
inc
gs
arpl
gs
imul
mov
call
call
add
inc
gs
jb
jns
jne
jae
jb
mov
cmc
call
add
inc
gs
jns
inc
outsl
insb
outsl
jb
jb
jae
add
int3
jp
call
adc
cmp
adc
clc
lret
mov
pop
jb
cld
lret
xor
pop
aad
iret
rcll
mov
stos
jecxz
or
push
sub
leave
inc
mov
xchg
in
cltd
in
add
inc
outsb
popa
bound
outsb
jne
je
insl
add
pushl
dec
inc
neg
xor
stc
xchg
rcr
rol
btr
mov
cmc
xor
mov
cmp
mov
test
mov
xor
mov
call
cmpl
lea
jne
je
inc
ror
mov
not
shl
shl
and
sub
bsf
call
add
push
jb
je
inc
imul
add
stc
add
jmp
pushf
movw
add
call
add
inc
jne
insb
imul
outsb
fs
add
add
popa
jo
gs
insb
insb
outsl
arpl
add
inc
outsl
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
out
shrd
xor
mov
je
movzbw
pop
pusha
call
pusha
pushf
call
add
push
je
gs
push
shld
rcl
btr
mov
shl
btr
mov
rol
and
ror
ror
mov
pushf
cmpsb
pushf
push
pushl
call
mov
pop
mov
jmp
jmp
add
push
gs
arpl
insb
insb
push
popa
outsb
addr16
adc
xlat
jp
xor
cmp
std
inc
inc
dec
or
mov
mov
sub
or
loope
call
mov
push
cmp
add
adc
mov
or
cmpsl
xchg
call
adc
mov
cmpsl
inc
dec
inc
ret
cltd
sbb
xchg
xor
stos
cmp
lds
pop
mov
ret
out
in
popa
xchg
sbb
mov
mov
jbe
inc
pop
mov
inc
cmp
call
and
add
gs
insb
addr16
je
insl
add
add
gs
jne
add
test
add
add
ret
xor
clc
test
call
movb
lea
je
stc
cmp
push
movb
pushf
lea
je
call
add
push
jb
je
push
jb
jbe
je
push
jb
imul
imul
add
clc
bt
sub
cmc
cmp
push
push
lea
je
lea
test
shr
pusha
mov
bt
test
jmp
call
add
in
mov
std
das
jnp
les
in
in
sbb
fisubl
lcall
imul
and
push
pop
fs
aad
dec
or
orl
jae
jo
mov
jb
stc
lods
loopne
aaa
stos
sub
add
popf
les
stos
fwait
sub
and
add
push
inc
out
sbb
mov
add
inc
outsb
fs
outsl
arpl
add
inc
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
add
arpl
outsb
jne
je
insl
add
add
addr16
jo
outsb
push
je
jb
addr16
outsb
dec
dec
outsl
arpl
jns
gs
add
dec
gs
popa
addr16
gs
jmp
cmp
shr
movb
movl
jmp
add
inc
outsl
push
popa
jae
dec
gs
inc
jb
gs
ret
mov
or
add
bsr
btr
bt
bts
add
shr
jmp
lea
jae
pushf
lea
jne
call
add
inc
gs
imul
js
inc
add
add
popa
insl
gs
arpl
dec
inc
inc
push
push
xor
cs
insb
add
or
or
stc
xor
pushf
pushf
pushf
lea
call
push
pusha
pushf
lea
jae
push
mov
jmp
add
inc
gs
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
repnz
jp
push
sbb
add
adc
gs
jns
je
insl
dec
outsb
jne
bt
cmc
stc
push
cmc
or
push
lea
je
cmp
mov
dec
mov
pushf
xor
clc
shr
stc
pusha
call
lret
fdivrs
ret
sub
xchg
cwtl
mov
push
stos
xchg
divl
push
xchg
push
mov
nop
aam
btr
mov
notb
pusha
cmpsl
call
pushf
cmp
add
popa
insb
inc
insb
insb
outsl
arpl
add
inc
outsl
insl
bound
gs
outsb
add
sti
clc
dec
mov
bt
cmc
cmpb
jmp
lea
jb
cmc
cmp
stc
cmp
call
add
inc
outsb
fs
popa
imul
and
imul
and
test
and
add
jmp
cmc
ror
jmp
add
inc
gs
insb
addr16
je
insb
dec
inc
add
bt
pushl
popl
call
call
movb
test
stc
test
movb
lea
je
pushf
pushl
pushf
pushf
mov
pushf
cmp
cmp
stc
add
bt
add
push
push
pusha
lea
jmp
add
inc
gs
gs
popa
addr16
add
add
je
imul
push
gs
je
gs
push
outsl
fs
add
je
outsb
jne
je
insl
inc
imul
add
insb
gs
imul
jae
gs
push
imul
inc
cmp
jbe
dec
addl
stos
cmp
lret
cs
mov
pop
aad
xor
dec
pop
push
cmp
inc
mov
hlt
mov
mov
pushf
data16
je
mov
add
dec
adc
or
push
mov
jmp
add
push
popa
je
insb
je
push
call
inc
cmp
lret
loopne
testl
or
aam
cmp
aas
clc
jae
jecxz
mov
dec
push
sbb
add
xchg
stos
dec
std
and
addr16
push
in
ret
daa
push
test
pop
outsl
push
sti
in
aaa
push
mov
in
pop
rclb
mov
stos
push
popa
fs
cmp
xchg
dec
mov
push
fs
out
lcall
dec
and
lcall
call
sub
call
dec
mov
xor
mov
adc
test
stos
xor
aad
push
stos
bound
push
or
movsb
xchg
gs
das
sub
ud2
aaa
ret
add
je
imul
dec
jb
inc
js
pusha
call
push
call
in
xor
mov
call
add
insb
jae
jb
popa
je
add
stc
sub
cmc
movb
repnz
pusha
lea
je
jne
btc
test
rcr
mov
add
btc
stc
sub
neg
dec
cmc
mov
cmc
pushf
test
mov
sub
push
stc
cmc
pushl
popl
cmp
cmp
pushl
lea
ja
cmc
sub
inc
neg
add
neg
pushf
bswap
mov
test
mov
pushf
push
cmp
stc
repnz
pusha
call
add
push
gs
gs
jae
inc
inc
add
inc
push
xor
cs
insb
add
mov
add
imul
outsl
jne
arpl
push
xchg
xchg
mov
mov
mov
sbb
mov
mov
jne
xchg
sub
dec
jne
cmp
push
out
test
es
xchg
in
cmpsl
mov
ja
cld
jnp
xchg
cmp
std
out
lahf
je
out
bnd
xor
mov
fadds
xor
add
arpl
fcmovu
push
inc
divb
stos
xor
mov
in
push
mov
mov
jl
sub
add
sub
cmp
incl
add
fs
je
imul
inc
imul
add
mov
lea
jmp
mov
pusha
movzbw
mov
call
call
add
inc
push
inc
outsl
insb
outsl
jb
add
add
jae
insl
gs
push
add
nop
ret
pushf
popw
push
bt
call
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
mov
add
loopne
aaa
dec
push
push
or
push
pop
insb
push
das
mov
es
jmp
and
and
push
and
add
fnstsw
jbe
out
inc
mov
or
stos
aaa
adc
aam
popf
adc
mov
jb
pop
xor
mov
adc
int3
cs
cmp
or
jne
mov
mov
and
xor
das
push
jnp
loop
lret
stos
mov
ja
das
loop
mov
cmp
mov
faddp
adc
ficoml
xor
shrb
adc
pop
xchg
dec
dec
shrb
cmpsb
imul
andl
cld
lds
stos
adc
hlt
sub
push
adc
xchg
push
sbb
das
xchg
sti
xor
movsb
dec
adc
push
xorb
shlb
jge
in
adc
jae
sbb
sti
xor
and
ret
pop
stos
out
lret
mov
nop
movsl
lods
and
js
push
push
stos
nop
test
pop
aas
sarb
pusha
add
cmc
scas
mov
xor
push
or
in
push
and
jbe
add
inc
imul
add
mov
pusha
movsbl
mov
mov
lea
pusha
mov
push
movl
pusha
mov
call
ljmp
rolb
fisttpll
ds
dec
stos
lret
push
repnz
dec
jge
addr16
cmp
and
mov
mov
test
mov
push
es
lret
mov
sbb
shl
sti
insb
add
push
adc
fs
mov
push
pop
arpl
dec
xor
xchg
aaa
popa
int
mov
fsubr
dec
push
ss
adc
fsubs
leave
jp
add
add
je
jne
inc
add
test
push
jmp
add
inc
gs
jns
je
insl
push
imul
imul
imul
inc
outsl
jb
popa
je
add
add
jo
imul
arpl
fucomip
rcll
add
pushf
lea
ja
pusha
inc
dec
pushl
inc
rcr
ror
xchg
pusha
xchg
mov
sar
or
neg
mov
call
lea
call
pushf
pushf
pushl
lea
jae
push
call
add
inc
gs
imul
add
add
jne
fs
arpl
add
jbe
dec
jne
push
jb
jo
jb
dec
gs
fs
clc
cmp
test
pushl
lea
je
cmp
cmp
cmp
pusha
add
mov
pushf
pushf
mov
lea
jmp
dec
rclb
sub
loop
jecxz
lea
stc
or
push
hlt
fsts
imul
test
cmp
inc
lret
push
stos
pop
popa
aam
lods
dec
jg
and
lods
xchg
push
xlat
enter
into
aad
dec
and
push
or
out
jae
push
mov
push
call
mov
jns
xchg
div
clc
cmpsb
sub
aas
lahf
adc
cli
movsb
fldcw
adc
stos
notl
jnp
xor
add
inc
jb
popa
je
push
outsl
insb
imul
add
dec
imul
scas
or
call
fsubr
repnz
add
jnp
lcall
pop
jb
adc
cmp
mov
xchg
enter
inc
sub
cli
cmp
icebp
adc
sbb
sub
dec
in
jb
xor
sub
icebp
sub
mov
stos
aaa
pusha
out
cmp
xor
inc
jo
pushf
mov
je
int3
aam
push
shrb
ret
je
mov
bound
add
lret
or
add
int3
das
jge
enter
scas
adc
inc
sub
xchg
push
test
fs
add
ja
pop
inc
mov
loopne
dec
mov
ja
pcmpeqb
bound
lahf
jle
in
std
icebp
lret
xchg
into
jmp
arpl
cmp
rolb
je
leave
xchg
jnp
push
xlat
dec
stos
xor
imul
adc
inc
dec
out
jecxz
lret
lcall
inc
add
or
inc
insb
call
xchg
leave
sbb
es
or
scas
bswap
xchg
inc
sbb
xor
fs
jmp
and
aam
sahf
fidivl
stos
out
rcr
xchg
in
cmp
movl
idiv
sbb
jmp
int
push
inc
xor
lock
in
je
sbb
in
cld
mov
push
in
pop
xchg
mov
pop
into
add
call
stos
and
stos
and
mov
mov
pop
pop
and
jno
add
int
dec
cmovo
out
insb
movsl
stos
inc
lea
xchg
mov
cmpsl
xchg
push
and
das
inc
push
lahf
xor
sbb
xchg
icebp
jmp
mov
pop
stos
xor
mov
imul
loop
enter
inc
arpl
ljmp
lea
call
jmp
jmp
pushf
push
lea
call
clc
push
cmp
push
pushf
lea
jae
call
pusha
mov
mov
lea
jne
mov
call
push
dec
dec
dec
dec
cs
insb
add
add
jbe
dec
jne
push
popa
jne
gs
je
add
leave
mov
pushf
lea
jmp
add
inc
gs
imul
mov
sets
not
mov
jmp
inc
jecxz
mov
mov
xchg
jns
add
xchg
jp
sub
cli
aad
xlat
pop
lret
xchg
jmp
push
insb
push
rcrl
and
xchg
push
and
cmpsb
push
or
int3
inc
mov
fstps
cmc
imul
cmp
fisubrl
mov
jg
dec
sti
div
rclb
jbe
xor
mov
dec
movsl
nop
jnp
inc
mov
loope
and
les
lods
push
sbb
push
sub
jb
pop
xchg
add
dec
inc
dec
popa
jo
je
imul
decl
add
adc
or
push
not
mov
movb
movw
lea
jmp
add
inc
jae
popa
jo
add
add
inc
imul
jae
popa
addr16
add
test
pop
dec
or
call
pushf
lea
je
push
pushf
clc
movw
cmp
pushf
lea
je
push
jmp
add
dec
jae
arpl
jo
jns
roll
std
arpl
cmp
ljmp
cmpsb
add
add
in
xor
sub
push
aaa
mov
xchg
dec
js
sbb
adc
addb
shll
mov
add
adc
pop
add
sbb
xchg
mov
nop
mov
mov
cli
pop
jbe
aad
inc
pusha
ret
movsl
sub
ret
add
xor
xor
and
cltd
pop
test
cmp
and
pop
xorb
les
mov
movsb
and
shll
xor
in
test
sub
jnp
incl
loope
mov
push
fs
lods
inc
or
fnstsw
call
jmp
mov
or
icebp
pusha
loopne
fisubl
and
mov
test
lret
jnp
push
in
loopne
mov
popa
xor
shl
pop
mov
jae
cmpsl
xchg
ret
les
add
sti
mov
xchg
lcall
hlt
pop
std
outsb
mov
aam
mov
sub
es
add
jp
xchg
mov
rorb
ret
add
mov
add
mov
xchg
mov
cmpsl
mov
daa
scas
pusha
cwtl
inc
xchg
pop
lods
mov
and
out
ja
repnz
ret
arpl
mov
mov
ret
mov
add
imul
add
pop
or
repz
sub
lret
stc
mov
adc
xchg
sub
add
es
outsl
sbb
and
push
dec
or
adc
ljmp
lret
rolb
int3
push
mov
pop
sti
xchg
out
repnz
add
shrb
mov
jle
bound
xor
or
or
ja
xchg
mov
jno
cld
fidivrl
mov
xor
mov
push
sbb
mov
leave
xor
inc
sbb
push
inc
cwtl
or
shrb
or
pop
fnsave
mov
mov
lock
pushf
mov
je
cmp
inc
sub
mov
cld
add
ret
mov
fs
jns
jno
inc
xchg
add
or
inc
or
ja
add
rorb
mov
hlt
daa
mov
test
xchg
ja
fsubrl
xor
xchg
jno
gs
jnp
movsl
mov
add
push
xorl
pop
aad
stc
mov
ljmp
into
fmull
jge
mov
ret
clc
popa
add
sti
jno
or
and
int
mov
imul
add
cmpsl
jmp
iret
pusha
ja
sub
pop
sbb
push
or
orb
add
call
push
mov
dec
sub
js
and
jnp
out
jecxz
out
cli
jns
movsl
mov
cmpl
mov
or
mov
mov
lock
jp
push
mov
shll
or
mov
rolb
mov
ja
mov
aas
imul
outsb
sbb
loop
cmp
add
gs
je
sbb
cmc
adc
ss
mov
or
in
cwtl
pop
push
cmpsl
adc
jo
das
dec
int
cli
or
sub
cmp
loop
ret
mov
xor
cmp
sidtl
test
lds
mov
mov
arpl
fs
add
cli
pop
inc
or
add
les
mov
sub
mov
mov
lret
mov
cwtl
lds
popa
std
orb
add
clc
dec
mov
inc
ja
cmp
mov
mov
lock
or
inc
mov
test
mov
adc
sub
lds
loopne
and
mov
out
push
inc
mov
test
stc
mov
mov
popa
fs
dec
push
mov
shll
cmp
test
js
mov
les
movsl
sbb
jae
out
test
scas
loop
inc
cmpb
sbb
sub
imul
sbb
lds
sysret
and
or
xchg
mov
jp
out
es
std
push
aas
or
sbb
or
mov
bound
cmpsl
or
mov
xlat
cmp
xchg
and
push
mov
stos
arpl
sbb
out
movsb
les
cmp
add
mov
mov
cmc
mov
rcl
cmp
push
lcall
jecxz
imul
sbb
mov
fnstenv
pop
and
mov
outsb
mov
imul
cmpl
sbb
mov
ds
mov
pushf
push
jno
outsl
and
fidivrl
mov
and
pandn
xchg
aam
stos
add
or
dec
mov
cwtl
shlb
mov
andl
mov
jo
aam
stos
add
movsb
xchg
cmc
mov
dec
stc
mov
test
stos
out
rclb
in
sti
ss
mov
dec
jp
dec
xlat
jo
push
fbld
repz
loop
mov
jno
jae
paddb
xchg
rcrl
aaa
mov
or
test
jecxz
enter
jecxz
sub
andl
mov
fcoms
push
roll
mov
mov
mov
sti
sub
fildl
arpl
adc
incb
out
push
add
mov
mov
js
rclb
gs
je
xchg
hlt
mov
addr16
addr16
scas
mov
jecxz
ret
hlt
xlat
stc
or
mov
scas
shrl
push
andb
mov
pop
xor
inc
or
dec
js
repnz
lock
rolb
cmp
sub
xchg
cld
mov
faddl
mov
cmpsl
jbe
faddl
pop
imul
add
mov
scas
adc
jae
inc
jno
bound
pop
push
mov
mov
xor
sbb
cmpsl
pop
lret
push
shl
loopne
lea
mov
fidivl
dec
dec
push
jae
lret
lea
hlt
cmp
bound
out
cmp
subb
out
jo
xor
mov
xor
mov
push
sahf
ret
adc
lock
test
incl
push
je
mov
jae
loope
fists
push
mov
cmc
addl
add
mov
sub
sub
dec
add
xor
mov
ljmp
lret
aad
push
mov
sahf
xor
mov
out
add
subl
test
cmpsb
addb
sahf
sbb
cli
inc
mov
xchg
js
fidivrs
jnp
mov
dec
or
cmc
loope
insl
into
inc
js
jns
and
subl
jl
gs
aad
mov
rcl
or
rorl
stos
mov
lcall
sub
int3
in
add
sub
sahf
mov
mov
insl
mov
loopne
fsub
inc
mov
movsl
cmpsl
mov
insl
mov
mov
push
or
mov
cmp
test
inc
xor
sbb
inc
outsl
imul
cwtl
ja
dec
out
les
inc
sub
dec
ja
xchg
mov
xchg
or
xchg
sbb
fsubr
xor
jmp
mov
es
inc
clc
fmuls
mov
into
adc
rorb
sti
mov
enter
sbb
and
cmp
inc
push
fs
sub
mov
fs
fadd
mov
movsl
fiadds
mov
xchg
mov
pushf
inc
xchg
es
mov
mov
adc
movsb
push
jge
movsb
pop
adc
mov
ljmp
xchg
pusha
fstl
ja
notl
mov
js
rol
outsl
jecxz
cmp
hlt
in
loope
das
aam
mov
fdivs
xorl
push
rorb
insb
shld
leave
repz
rorl
sbb
cwtl
xorl
sbb
inc
jb
gs
dec
jnp
dec
xor
mov
fmul
mov
jl
sub
mov
pop
jno
jmp
xchg
xchg
jl
xchg
test
cmp
and
repz
test
or
aam
insb
outsb
mov
xchg
test
pop
les
pop
and
das
mov
xchg
add
mov
add
and
dec
aam
sbb
arpl
mov
roll
xchg
mov
pop
push
xchg
clc
out
cli
daa
rcrb
into
xor
adc
and
pminsw
and
xlat
and
jl
js
cltd
mov
xor
in
dec
lock
jecxz
mov
out
sub
adc
stos
inc
mov
or
push
or
push
ret
loop
mov
out
pop
adc
aam
fs
xchg
adc
ljmp
jmp
mov
xor
in
jl
lods
or
lods
movsb
fstpt
cli
fistl
xchg
stos
fsubr
and
enter
pushf
jmp
mov
outsl
fimuls
std
ret
push
lret
out
fadds
sahf
fs
push
jmp
lahf
and
call
incl
cmpsb
dec
sti
aam
sub
sub
xor
pusha
cmp
add
stos
lret
out
and
inc
mov
movb
add
adc
jmp
dec
aam
xor
mov
sub
movsl
dec
xlat
adc
inc
mull
mov
pop
mov
orl
mov
mov
mov
mov
cmp
dec
push
add
or
inc
bound
sarl
mov
movlps
xor
enter
notb
subb
add
jl
xchg
lods
aaa
loop
xchg
andb
adc
mov
sbb
dec
jmp
jp
testb
das
lret
test
testb
mov
idivb
cmp
leave
test
cmp
ss
jp
cmpb
cmp
sbb
or
dec
pop
jb
and
pushf
ret
mov
int3
and
bound
in
and
xchg
xor
dec
mov
cmp
es
mov
test
movsl
enter
push
adc
jecxz
sbb
add
insl
dec
mov
mov
clc
std
cmpsl
mov
aaa
lret
lret
sbb
cmpsl
out
xchg
aad
es
jae
nop
out
ficoml
movd
xor
push
lret
xchg
or
add
jns
mov
sub
ljmp
inc
out
test
sub
fs
inc
push
jnp
scas
into
xor
iret
cld
movsl
add
loopne
mov
or
mov
push
popf
lret
pusha
cmp
adc
out
jmp
jb
add
mov
cmp
mov
outsl
jle
repnz
or
bnd
inc
inc
lret
pop
mov
push
loop
xadd
xor
jecxz
mov
dec
mov
adcb
inc
xor
das
aam
dec
mov
jb
add
jge
xlat
les
mov
mov
fsts
mov
fmull
xor
and
ds
loope,pt
imul
rcl
dec
inc
mov
push
sub
xchg
inc
mov
cli
std
xchg
les
or
and
sbb
out
call
lahf
xchg
pop
inc
xor
mov
inc
movsb
pushf
cmp
scas
std
push
lret
adcl
ret
mov
cmp
movsb
mov
scas
cmpsl
lods
mov
je
gs
repz
push
out
cmp
out
addb
cmp
cmp
jl
lds
cmpsl
xor
movsl
js
add
shrb
mov
aam
xor
fs
lcall
inc
outsb
rcr
mov
inc
jp
cltd
lods
cmp
nop
sti
lods
cmp
xlat
or
xor
popa
sbb
xchg
test
push
in
inc
movsl
stos
mov
mov
fmull
es
sbb
ja
lock
jae
out
cli
call
test
lret
in
cmp
dec
mov
outsl
stos
sub
mov
jl
pop
pop
xor
out
dec
jae
scas
cmpsl
sbb
pusha
sti
mov
pop
iret
test
lret
push
cltd
add
gs
sbb
lods
add
push
mov
subb
adc
enter
int
dec
mov
jne
cltd
inc
mov
ds
push
test
movl
inc
pop
cli
mov
fsts
aad
daa
and
add
mov
aaa
xchg
push
push
mov
fsubs
dec
mov
cmp
rolb
insl
mov
movsb
cmpsl
cltd
dec
inc
movups
inc
jno
in
mov
or
xchg
ret
test
pop
das
fisttps
mov
push
adc
aas
ret
movsl
outsl
lcall
push
push
ret
out
pusha
sbbl
rolb
out
dec
pop
incl
in
mov
sbb
hlt
in
rcrb
cmpsl
mov
sub
push
and
sub
dec
fsubs
lret
lods
push
push
mov
fdivr
cmpl
lahf
mov
cmpsb
push
push
jmp
in
scas
fisubrl
mov
sub
and
xchg
push
adcb
mov
mov
test
std
push
in
mov
ret
dec
cli
sti
mov
in
pop
sar
cmpl
adc
xlat
mov
and
cwtl
cmp
shrl
cmpsl
fldl
cmpsb
mov
lea
xchg
in
or
xor
rclb
fisttpl
mul
push
bound
lea
outsb
imul
push
xor
sub
add
add
cmpsl
enter
mov
insl
loop
sahf
fsubl
sbb
adc
test
dec
cli
inc
push
sbbl
add
mov
movsb
fsubs
fistpl
sbb
int
xchg
lret
out
cwtl
mov
test
and
popa
mov
or
mov
cmp
movsl
sub
pop
fsubs
loopne
pop
xchg
addl
aas
sahf
jl
add
dec
xor
xchg
and
mov
cmpsl
test
addr16
lods
dec
stc
dec
mov
cmp
dec
xor
jmp
je
lock
or
dec
add
xchg
test
fnsave
push
punpckldq
mov
fcoml
mov
add
sub
push
and
dec
loop
imul
nop
clc
stos
mov
shll
or
mov
jecxz
fsubl
xor
push
mov
jp
outsb
loopne
mov
push
cmc
jmp
outsl
cmp
or
js
mov
jmp
sbb
hlt
lods
in
out
inc
rsm
lds
or
ss
scas
movsl
push
mov
nop
cli
jno
daa
mov
add
mov
mov
clc
lods
loop
out
xor
xorl
sbb
das
adc
xlat
arpl
xor
mull
mov
shll
in
lock
cmp
lret
sub
xor
xchg
adcb
enter
fistpl
jne
popl
push
mov
dec
push
bound
icebp
adc
mov
test
or
jbe
pop
test
xor
lcall
aaa
dec
cli
mov
nop
xchg
fidivrl
xchg
gs
jecxz
scas
les
xchg
ror
inc
or
fcmovnbe
xor
sub
mov
cmc
iret
cmp
pop
push
sbb
test
cmpsl
pop
in
lods
or
jecxz
imul
mov
les
pop
add
or
fadd
lret
jbe
mov
pop
mov
fldenv
ja
adc
xor
jl
inc
add
mov
enter
scas
inc
add
mov
fs
movsb
push
js
cmp
mov
orb
pop
xorb
mov
sub
aas
pop
mov
mov
jmp
cmp
aam
inc
xchg
mov
push
rclb
cmpsl
jg
aaa
jmp
inc
ret
jne
add
outsl
sub
mov
gs
pushf
hlt
add
mov
sbb
arpl
out
jecxz
mov
ds
fbld
cli
lds
pushf
scas
and
mov
or
stos
jmp
movsb
movsb
xor
xchg
andl
xchg
adc
lods
lock
mov
add
aam
jg
pop
mov
add
or
repnz
les
hlt
and
maxps
movsb
cld
repz
jno
xor
adc
movsb
xchg
mov
mov
xor
xor
jl
add
mov
mov
xchg
mov
xor
cmpl
xor
test
lods
cmovbe
cmpl
mov
mov
aas
je
add
ds
aas
xchg
mov
addb
dec
xchg
mov
icebp
aas
xor
ret
mov
lods
out
pop
push
mov
mov
mov
insb
xor
xorl
mov
ds
xor
test
mov
mov
inc
jno
pop
andb
xor
aas
xor
xorl
ret
mov
mov
fs
push
mov
cmpsl
push
xor
mov
out
sahf
xor
add
repz
mov
cmpl
ds
mov
mov
fdiv
nop
test
mov
lea
or
xor
add
xor
dec
cmpsl
cmp
xor
mov
mov
lock
ret
mov
mov
cmp
dec
adc
add
xor
xchg
mov
mov
or
cmpb
xor
mov
dec
xor
mov
or
mov
aaa
icebp
mov
aas
sub
aas
mov
mov
cmp
mov
aas
or
rcll
imul
or
add
jl
pop
movsb
out
sub
bound
stos
cmpsb
pop
dec
lds
or
cmp
test
mov
je
lea
xor
mov
mov
pop
lea
jmp
outsl
jge
std
les
mov
push
add
pop
mov
inc
test
cs
jnp
ljmp
sti
gs
mov
call
jecxz
push
or
out
add
out
popa
lret
push
mov
xchg
andl
es
push
pop
mov
adc
scas
mov
pop
pop
mov
popf
cmc
lods
xor
ja
pop
pop
imul
mov
fs
repnz
les
inc
and
outsb
mov
outsl
sti
aam
cmpsl
push
pop
fisttps
or
iret
inc
ret
test
pop
dec
dec
movsl
repnz
cld
lret
cmp
inc
ret
cmp
lods
mov
inc
js
add
fmulp
lods
xchg
repz
sbb
add
sub
out
scas
inc
inc
in
cwtl
xor
test
rcrl
adc
ja
sti
cs
push
cmpsl
or
insl
cmp
mov
jg
and
mov
dec
mov
jl
inc
into
dec
xor
ffreep
mov
cmp
orl
dec
jecxz
ss
subb
or
daa
xchg
mov
rorl
or
push
xchg
mov
vmread
xlat
mov
dec
mov
leave
mov
dec
cmpsl
push
mov
sub
mov
ljmp
mov
mov
enter
and
inc
mov
adc
and
scas
ljmp
lea
jmp
in
pop
lods
ret
in
add
loop
cmp
push
jb
lret
andl
outsl
pusha
pop
les
add
aam
addb
xor
mov
mov
fidivs
inc
mov
xchg
mov
mov
ss
fnstsw
mov
ret
rcrb
pop
jo
in
dec
repz
xor
mov
mov
std
ja
push
or
in
repz
push
shrl
push
mulb
sahf
add
imul
or
repz
sbb
xlat
pushf
cmpsl
cmp
loop
out
mov
outsb
les
mov
mov
insb
mov
or
les
lds
jmp
sbb
add
scas
or
mov
lods
dec
mov
mov
sti
mov
outsb
inc
andb
lds
scas
sahf
cmc
fsubl
push
and
cli
sub
inc
lret
mov
loop
arpl
out
mov
cli
clc
movsl
fimuls
mov
mov
in
les
mov
jne
mov
add
cmp
jae
mov
aas
in
cmpsl
pop
mov
popa
arpl
mov
stos
shl
inc
xchg
sbb
mov
bound
pop
shr
out
dec
xchg
sub
aaa
or
add
cmpsl
outsl
arpl
push
imul
or
hlt
jmp
icebp
cld
pop
scas
mov
roll
nop
mov
push
cmp
es
push
out
pop
inc
aas
lea
add
mov
bnd
hlt
nop
js
adc
jae
pop
mov
pushf
cmpsb
fcomps
js
or
andb
bound
cmp
cmpsl
xchg
aas
jmp
rcll
imul
fsubrp
and
xor
mov
outsb
xorl
sbb
mov
cmpsb
or
sub
imul
icebp
jns
cmpsl
mov
or
sti
fs
sbb
mov
adc
scas
mov
inc
out
push
test
mov
cmpsl
add
std
lret
dec
dec
or
sub
mov
xchg
mov
ret
cmp
icebp
test
adc
movsb
or
in
xor
imul
mov
cmc
movsl
bound
xor
stos
dec
push
popa
add
scas
in
in
adc
dec
adc
stos
test
push
fwait
xor
push
pop
xor
lahf
pop
mull
dec
lret
xor
xchg
add
outsl
push
mov
xor
aaa
sti
cmpsl
sub
and
xor
outsb
jmp
fstpt
inc
lds
pop
or
cmpsl
dec
out
sti
cmpsb
mov
repnz
xor
call
roll
dec
hlt
mov
movsl
test
scas
cmp
cmpsl
popa
mov
cmpsl
mov
bswap
dec
xor
les
push
inc
inc
mov
cmpsb
jns
incb
clc
push
test
ljmp
xor
inc
gs
test
cmovne
mov
push
ss
jb
aas
adc
mov
sbb
adc
pusha
cltd
test
adc
add
mov
mov
fildll
decb
popa
fwait
dec
inc
xchg
movb
mov
sub
pop
jle
fucomp
movsb
fiaddl
push
cli
pop
in
lea
dec
repz
push
mov
sub
shlb
orl
add
adc
jecxz
out
dec
int
or
mov
ljmp
loop
mov
add
fldl
enter
pushf
pusha
out
sbbl
scas
imul
cmpsl
or
xor
in
or
jge
jle
adc
mov
lret
hlt
sub
cs
cmpsl
dec
xchg
addr16
int
mov
add
mov
outsb
movsb
aam
aad
pop
xor
lds
dec
pop
iret
mov
das
pop
pop
cld
fisubs
push
mov
dec
mov
lret
push
dec
es
aas
cmp
sahf
movl
mov
xchg
dec
and
ds
add
inc
arpl
addr16
sub
or
inc
pop
mov
inc
add
repnz
pop
stos
mov
mov
addr16
mov
jmp
adc
les
out
jo
mov
addl
dec
mov
mov
inc
aad
bswap
movsl
cli
jne
cmp
adc
xchg
or
push
xor
stc
mov
sub
int
aad
mov
pop
mov
adc
and
xor
cmp
jae
cmpsl
push
xor
scas
movsb
popf
outsl
in
cmpl
add
adc
mov
cmp
pop
lods
or
add
scas
int
mov
stc
mov
test
and
xchg
pusha
int3
inc
cwtl
sub
lret
pop
mov
ljmpw
ret
cltd
and
repz
aad
nop
adc
das
andb
out
cmp
mov
jge
ret
aas
movsl
lret
cmpsl
and
mov
mov
enter
and
popa
inc
inc
add
scas
pop
cmp
repnz
pushf
ds
sarl
adc
mov
je
sbb
and
add
jle
sub
jecxz
jne
mov
pop
push
vpaddq
popa
insb
mov
xor
daa
fistpl
adc
insl
out
jno
mov
xor
adc
lret
sbbb
mov
fisubs
das
and
cli
inc
or
repz
cmpsl
xor
idivl
inc
add
fnstenv
iret
adc
out
lahf
mov
les
cmpsl
je
jno
sti
scas
ret
pop
inc
mov
sub
cmpsl
jmp
ret
cmp
ds
out
mov
or
jno
iret
sti
repz
rclb
sbbl
mov
addb
jmp
cli
and
or
lret
mov
mov
pushf
mov
jl
xchg
xchg
or
test
test
pop
orl
std
sub
xor
mov
test
cmpsl
adc
in
jecxz
lds
mov
jae
hlt
cmc
xchg
add
aam
ljmp
dec
or
cmp
outsl
testb
test
cmp
loop
aaa
movsl
int
in
or
aas
xchg
mov
xor
test
fs
test
push
adc
or
mov
lds
clc
jmp
fstps
cmpsl
mov
mov
push
enter
aad
and
sbb
xor
mov
into
ror
les
into
xlat
cmp
test
das
mov
pushf
push
iret
add
stc
lret
sub
scas
lret
push
rolb
test
shll
mov
mov
sbb
repnz
jno
iret
rorl
lea
stos
mov
push
pop
fmull
gs
lret
sub
inc
mov
imul
ss
adc
pop
aaa
lret
adc
cmp
adc
push
nop
mov
fstpl
xor
shll
push
adc
or
xchg
mov
sbb
add
pop
rcrl
xchg
pop
jo
scas
cwtl
arpl
mov
lahf
inc
sbb
cwtl
cmpsb
loopne
mov
jbe
xor
sahf
je
mov
movb
outsb
mov
cmpsl
cmp
pop
pop
in
shll
bound
xor
dec
or
or
and
lahf
ret
mov
jbe
sbb
or
iret
adc
adc
adc
insl
out
add
xorl
mov
jmp
out
sbbl
out
mov
mov
mov
adc
inc
mov
sub
movsl
mov
xchg
arpl
inc
pushf
out
das
test
aas
sbb
inc
scas
and
mov
add
in
ds
pushf
das
lahf
sahf
jle
pop
insb
les
mov
scas
or
mov
lret
addl
lods
test
jle
in
pusha
les
ret
cwtl
xchg
rolb
sub
int
sub
cmp
ret
data16
mov
imul
add
cmpsb
mull
nop
xor
inc
test
rolb
add
es
les
aam
test
arpl
fstpt
sar
daa
inc
dec
mov
jne
xchg
stos
or
das
aaa
inc
adc
movsb
call
daa
adc
test
insb
jmp
leave
push
mov
enter
movsl
xchg
orb
fwait
addl
mov
add
insl
jl
mov
pop
rol
add
jae
rolb
cmp
arpl
aad
pusha
cmp
push
inc
aad
sbb
rolb
pop
iret
and
inc
jns
movsl
adc
jl
xchg
mov
jmp
or
mov
mov
inc
mov
call
sub
insl
xchg
add
push
cmpsb
mov
pushf
cmp
xchg
mov
and
insl
das
jnp
cmc
sbb
lea
sub
add
mov
mov
add
cmp
xchg
inc
and
pop
subl
or
xchg
mov
mov
test
dec
fcoml
subb
add
fsubrp
nop
mov
rcl
inc
inc
loop
add
mov
mov
cmp
inc
mov
sub
hlt
inc
rcl
add
in
push
mov
mov
test
in
pop
mov
stos
and
mov
mov
shlb
repz
and
mov
mov
xor
lods
xor
add
loop
lret
inc
dec
xor
fiaddl
std
insb
das
mov
inc
loop
inc
dec
mov
or
mov
dec
shlb
enter
fildl
or
lahf
inc
xchg
repnz
inc
cmp
adc
fimuls
outsl
cs
inc
or
shrl
stos
clc
cmpsb
adc
add
add
sub
cmp
sub
push
in
or
jmp
movsb
loop
cmc
and
mov
mov
flds
dec
add
loope
add
or
mov
mov
das
call
test
sub
das
add
xor
xchg
psubsw
into
and
sbb
test
sbb
xchg
setl
add
and
test
dec
andb
push
out
in
or
loop
lret
jnp
mov
add
or
sarl
inc
mov
call
and
outsb
push
int3
add
mov
leave
std
gs
mov
mov
test
xor
inc
mov
addr16
insb
add
aad
mov
sti
ja
xor
mov
andl
or
arpl
inc
add
movsl
mov
bound
dec
into
mov
lods
sub
js
enter
arpl
in
rorb
mov
test
push
out
mov
daa
cltd
cmpsl
inc
arpl
insl
push
lea
inc
mov
scas
pusha
lods
out
xor
imul
movsb
add
cltd
test
add
add
inc
gs
insb
popa
jae
dec
popa
insl
gs
add
xor
cs
insb
add
outsb
push
sti
incl
add
ja
gs
inc
add
add
imul
jb
jo
jb
dec
gs
fs
push
call
push
cmp
inc
and
xchg
lea
call
clc
pushf
stc
cmp
push
lea
jle
pusha
pushf
lea
jae
cmc
jmp
add
push
gs
jbe
outsb
je
mov
mov
pusha
mov
pusha
pushf
lea
jmp
jmp
inc
inc
dec
xor
cs
insb
add
add
gs
je
push
arpl
outsb
dec
outsb
imul
fisubl
stos
ret
xor
call
pop
stc
pop
pusha
adcl
mov
loope,pt
mov
out
xchg
sub
int3
rclb
daa
mov
in
add
repz
shl
stc
in
xor
popf
data16
cmp
das
aam
mov
cmpsb
sti
add
ret
movl
les
icebp
std
add
mov
xchg
cmp
xor
out
cld
inc
rcrb
test
or
sub
loop
imul
xchg
ljmp
jne
js
and
mov
loope
xchg
sub
xchg
jno
adc
adc
bound
jo
shlb
sbb
orb
aas
dec
xor
mov
and
sbb
dec
mov
xor
xchg
mov
repnz
pop
mov
rcrl
repnz
mov
push
jmp
jmp
insb
sbb
jge
fs
pop
popa
movsl
int
jle
sbb
mov
ret
sbb
shlb
push
jmp
ss
cli
mov
cltd
scas
inc
gs
sub
sub
mull
cli
sahf
dec
mov
out
pop
jecxz
add
mov
je
jl
pop
push
inc
pusha
add
inc
stos
xor
lahf
xchg
xor
rorb
inc
xorb
movsb
test
mov
xchg
cmpl
loop
sub
mov
and
shrl
add
mov
clc
shld
rol
mov
clc
movb
cmp
push
pushf
mov
lea
jbe
not
shl
adc
mov
and
adc
add
bts
mov
jmp
add
inc
jb
popa
je
inc
inc
inc
add
out
neg
mov
call
hlt
inc
mov
cs
call
stos
jg
repz
add
movsb
xor
or
mov
andl
mov
stos
ss
gs
xchg
push
and
jl
add
shlb
xchg
loopne
push
mov
int3
dec
cmp
push
inc
les
xchg
pop
adc
mov
push
popf
aad
jmp
xchg
fidivrs
or
imul
dec
jecxz
pop
outsb
mov
pop
cmp
mov
sbb
lock
stos
jle
add
jae
mov
xchg
in
pop
hlt
psubq
pop
pop
mul
push
outsb
jle
and
ficomps
leave
movsl
ljmp
xor
jno
clc
pusha
adc
or
jnp
les
clc
lcall
aam
jecxz
jnp
xor
cmp
scas
mov
stos
xor
or
mov
aam
sbb
or
movsl
mov
add
xchg
out
mov
subl
dec
imul
sub
mov
pop
cmpsb
lret
inc
roll
add
addr16
jo
outsb
dec
gs
js
add
popa
sbb
sahf
testl
jg
or
add
inc
jb
add
add
outsl
bound
dec
outsl
arpl
add
dec
jae
imul
jae
bound
pushf
lea
jne
pushf
mov
pusha
push
mov
call
add
push
imul
jb
je
arpl
xchg
fmuls
xorl
rorl
test
mov
sub
push
lea
push
xchg
sbb
fnsave
mov
idivl
stos
bound
jae
stos
leave
lods
fwait
loop
push
nop
lods
fistl
xorl
mov
mov
lds
sets
imul
xchg
loop
call
shrb
and
imul
xchg
add
shr
sub
not
jmp
add
inc
gs
imul
je
js
mov
mov
xchg
vandpd
push
dec
mov
iret
andl
jl
in
and
push
push
sti
mov
or
fsubrs
popf
loopne
jae
inc
subl
fstps
xchg
test
in
xor
in
dec
imul
dec
mov
jb
push
call
lds
int3
enter
movsl
xor
pushf
call
pusha
sub
bt
clc
test
add
add
push
movl
lea
jmp
cmp
mov
shr
mov
pushf
mov
stc
push
push
cmp
mov
test
stc
push
stc
pushf
mov
cmp
clc
clc
test
call
add
inc
gs
outsl
insb
jns
imul
add
inc
jb
popa
je
push
gs
popa
jo
outsl
jb
inc
add
jmp
add
hlt
es
icebp
add
inc
sbb
add
call
add
pop
sbb
add
push
add
fistpl
mov
sbb
add
adc
add
pop
sbb
add
add
add
add
xorb
add
orb
addb
add
adc
add
adc
add
sub
add
pop
sbb
add
call
sbb
add
and
add
hlt
es
fcompl
adc
into
lock
xor
add
add
add
pop
sbb
add
or
add
and
sbb
ret
pop
sbb
add
xor
add
icebp
add
jmp
sbb
add
es
or
add
bound
add
and
add
pop
sbb
add
ficompl
mov
sbb
mov
sbb
dec
sub
sbb
jnp
es
dec
sbb
add
and
add
mov
sbb
scas
in
sbb
in
add
add
add
add
push
add
inc
sbb
add
enter
les
lahf
xlat
sbb
fwait
in
add
daa
sbb
add
add
add
sbb
add
push
sbb
add
lds
or
es
lds
cwtl
repnz
sbb
add
sbb
adc
add
push
sbb
add
fcompl
fcmove
sbb
je
push
add
add
push
sbb
add
bound
add
sbb
add
mov
sbb
add
push
sbb
add
add
cld
sbb
add
inc
sbb
add
loop
add
sub
sbb
add
loope
add
dec
sbb
add
push
push
add
in
add
sbb
add
sub
sbb
add
sbb
mov
sbb
add
mov
sbb
sub
add
out
add
add
add
dec
sbb
add
sbb
add
and
add
sbb
add
add
ds
add
fistpl
movsb
loopne
add
add
add
mov
sbb
add
sub
add
call
sbb
stc
mov
sbb
add
dec
sbb
add
sbb
add
mov
add
es
add
inc
sbb
add
add
leave
sbb
mov
enter
dec
sbb
add
dec
sbb
add
sti
sbb
add
adc
add
sub
push
add
out
add
sbb
add
sbb
xchg
add
push
sbb
add
ficomps
es
adc
add
add
sbb
add
or
add
push
add
add
and
sbb
add
call
add
aad
add
add
add
dec
sbb
add
add
sbb
sub
push
add
sbb
add
sbb
add
ret
sbb
sbb
sbb
jge
sbb
std
fcomps
enter
loopne
sbb
add
sbb
add
enter
mov
add
in
sbb
or
add
mov
add
or
add
mov
es
add
add
sbb
cmpsl
sub
add
sub
add
loop
add
enter
ret
sbb
or
add
sbb
add
inc
sbb
add
add
add
icebp
es
jmp
add
dec
sbb
add
sbb
in
sbb
mov
sbb
loopne
es
hlt
add
push
add
enter
clc
es
sbb
add
mov
push
add
mov
push
add
sbb
add
lret
sbb
loopne
es
fistpl
dec
and
add
fistps
push
mov
sbb
add
ret
sbb
fmull
add
add
inc
sbb
add
call
sbb
add
sbb
add
or
add
pop
sbb
add
ljmp
int
add
sbb
add
push
sbb
add
push
add
loop
add
add
add
or
add
sbb
jp
sbb
movsl
dec
sbb
add
and
add
add
sub
push
add
arpl
add
add
jmp
add
enter
sbb
shlb
and
sbb
xlat
in
es
add
add
clc
es
cmc
add
rcrl
jmp
add
in
sbb
daa
lock
xor
add
xor
add
dec
sbb
add
sbb
add
mov
add
sbb
repnz
sbb
or
add
sbb
add
jecxz
add
sbb
add
lret
sbb
mov
sbb
cmp
sbb
test
sbb
add
lock
loop
add
out
add
pop
sbb
add
add
add
sbb
mov
es
out
add
out
add
add
add
add
add
push
add
in
add
add
add
sbb
test
sbb
add
add
add
add
add
sbb
add
adc
sbb
shlb
add
add
es
add
add
add
out
add
sbb
add
add
add
inc
sbb
add
sbb
arpl
es
pop
sbb
add
mov
sbb
add
sbb
add
add
adc
add
sbb
add
or
add
add
add
or
add
adc
add
or
add
sldt
andb
add
mov
add
adcb
add
movsl
add
addb
add
push
es
subb
sbb
add
add
addb
add
mov
add
sbb
add
add
add
sbb
add
add
add
inc
dec
push
dec
inc
inc
jb
insl
push
jb
addr16
inc
add
repz
mov
fadd
push
inc
test
and
sbb
jo
cmp
or
jo
test
mov
jno
mov
aas
jnp
jb
mov
insl
mov
repnz
repz
btc
and
push
ja
dec
out
pop
add
mov
add
inc
insb
outsl
bound
inc
jb
add
add
je
outsb
jne
je
je
add
add
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
dec
gs
jo
jb
popa
je
add
icebp
dec
ja
scas
clc
or
cmpsb
shr
adc
add
push
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
repz
pushf
jmp
lods
repnz
dec
sub
adc
in
popl
out
dec
cs
cmp
fildl
out
leave
test
repnz
ret
out
popa
mov
fnstenv
insb
cmp
dec
xor
mov
cmp
mov
test
addr16
push
cltd
xor
cmp
push
mov
lods
and
jb
dec
loopne
scas
jge
jge
and
fs
test
mov
jle
dec
repnz
inc
stos
xchg
call
push
fdiv
test
int3
mov
pop
lods
xchg
out
mov
mov
xor
fsubrs
mov
sbb
imul
jge
sbb
leave
jo
mov
out
push
outsb
mov
sub
fnstcw
stos
push
jo
mov
sbb
jnp
xor
cmp
add
xor
and
jno
jns
and
ds
xchg
in
testl
vmulps
pop
xor
mov
sti
mov
mov
xor
sbb
pusha
add
jmp
decb
shl
pop
jle
cld
mov
mov
lret
sub
xor
pusha
movsb
lods
cld
inc
ja
movsl
les
jp
sub
add
fistl
test
fldcw
or
movb
insl
xor
in
cltd
shll
and
fisubrs
pusha
pushf
aaa
add
push
call
in
inc
add
push
gs
imul
push
popa
jbe
inc
inc
add
sbbl
add
scas
ret
out
repnz
sbb
outsb
stos
xchg
pop
pushf
sbb
push
mov
not
jge
in
mov
jb
dec
jmp
push
and
pusha
imul
fsubs
mov
add
inc
js
je
jb
arpl
jae
add
inc
imul
je
imul
aas
adc
jle
inc
pop
adc
push
xor
in
xchg
orl
push
adc
leave
jo
add
fs
fmul
cmp
mov
rclb
dec
imul
xchg
cmp
push
jb
and
ljmp
dec
enter
push
push
mov
jecxz
pop
push
and
stos
xor
inc
mov
testb
pop
or
mov
js
dec
mov
aas
ljmp
dec
cld
or
out
or
mulb
inc
cmp
mov
mov
arpl
inc
fcomps
daa
jmp
repnz
int3
stos
dec
or
scas
int
stos
jae
push
jecxz
stos
aas
pop
xchg
sub
dec
aam
insb
andl
clc
add
js
lods
jle
or
push
call
dec
inc
jmp
add
inc
outsb
popa
bound
imul
add
jb
popa
je
gs
popa
addr16
add
add
popa
jo
gs
jb
jns
add
inc
gs
je
arpl
bound
arpl
xor
add
repnz
decl
sarb
mov
push
lea
jae
test
call
lea
ja
sete
jmp
inc
xchg
in
mov
aam
mov
push
mov
in
vcvttpd2dqx
pop
jl
shrb
test
dec
aaa
fbstp
fidivrs
test
push
cmp
fsubl
mov
xor
push
in
imul
outsl
test
mov
push
lcall
mov
adcl
pop
js
iret
jp
lcall
pop
idivl
int3
lret
adc
jmp
pusha
in
fbstp
int
hlt
aaa
fwait
cs
xor
test
nop
ja
xchg
mov
and
test
push
test
je
call
pop
push
sbb
or
sbb
stos
ss
and
jmp
repnz
or
adc
in
sbb
xchg
xor
sub
or
inc
cmp
mov
rcll
push
jb
add
arpl
rorl
inc
pushf
stos
out
cltd
xor
scas
cmpsl
adcb
xor
popf
lcall
jno
or
in
sbb
cmp
push
andl
mov
aam
insl
push
xor
ret
and
shr
cmc
pusha
cmp
pushf
push
lea
je
stc
cmp
pushf
cmp
mov
lea
je
pushf
pushf
pushf
jmp
add
insb
jae
jb
insl
jo
add
add
jo
je
push
popa
addr16
add
in
add
shl
bts
cmp
add
and
dec
mov
clc
cmp
shr
call
add
push
push
js
arpl
gs
add
add
je
imul
outsl
outsl
imul
add
fucomip
lret
incl
add
je
imul
js
dec
outsb
addr16
inc
add
add
jb
arpl
outsl
jne
gs
jbe
outsb
je
add
push
outsb
jb
imul
popa
jae
inc
add
inc
mov
or
loop
pop
pop
inc
jecxz
movsbw
shr
mov
pusha
push
jmp
add
push
gs
outsl
jb
inc
inc
add
test
sub
rorb
lea
pop
bswap
movsbl
lea
bswap
pop
push
push
jmp
push
lcall
mov
dec
lock
cld
clc
sub
ljmp
aad
pop
sahf
outsb
rcrl
inc
jb
or
mov
mov
rcrl
ss
push
fldl2t
cmpsl
xor
add
add
inc
popa
fs
outsl
fs
je
add
fnstenv
ja
pop
cld
or
xor
daa
lock
roll
fidivs
push
leave
pushf
adc
das
sub
outsb
scas
push
rorb
cmpsb
push
and
sub
lahf
mov
push
mov
pop
gs
stc
hlt
push
jmp
jmp
add
push
gs
jb
outsl
jb
outsl
fs
out
rolb
sub
stc
clc
mov
jmp
mov
js
xorb
mov
jno
fcomi
xchg
stos
fmulp
aaa
push
push
ja
dec
push
xchg
aas
ret
repnz
imul
cmpsb
fldl
inc
pop
imul
stos
cmp
mov
fidivs
xor
inc
or
ficoms
sbb
test
push
call
hlt
sbb
mov
out
arpl
lea
jae
add
cmc
mov
or
mov
pushf
rcl
mov
movw
jmp
lea
je
lea
pushf
inc
bt
add
inc
sub
neg
shrd
mov
lea
jno
cmp
cmc
je
add
cmp
stc
stc
bt
mov
btc
mov
mov
jmp
pop
fimull
jmp
leavew
popa
es
sub
push
lods
mov
inc
icebp
sub
jge
xchg
adc
jecxz
shll
int
adc
rcrl
test
cmpsb
ljmp
outsl
std
xchg
mov
scas
mov
pop
fisubrl
icebp
mov
jg
pop
out
scas
mov
dec
and
jo
pop
shlb
addl
xchg
mov
pushf
jmp
not
mov
jmp
lea
je
call
cmc
inc
movzbl
mov
test
cmp
push
test
jmp
add
insb
jae
jb
outsb
push
add
test
fldl
add
push
add
add
movw
lea
je
pusha
lea
jmp
add
dec
gs
jo
imul
jb
popa
je
inc
dec
inc
imul
and
push
pushf
pushf
pushf
pushl
ret
push
call
inc
int
int
add
inc
jb
ja
imul
jl
push
aam
jnp
xorb
loopne
adc
pop
or
ret
imul
and
mov
inc
push
mov
lcall
add
xchg
mov
aad
sbb
add
xchg
stos
and
or
dec
std
mov
je
adc
rolb
push
int3
bound
xlat
jb
leave
test
sti
outsb
rol
sub
mov
jmp
das
out
push
ret
add
jns
mov
pop
ret
xchg
xor
out
push
rcrl
arpl
je
jo
outsb
inc
imul
add
cmp
jmp
add
inc
gs
popa
jo
jne
add
and
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
mov
lcall
mov
or
fisubrl
mov
inc
mov
jno
stos
xor
jge
lcall
xchg
aaa
xlat
xchg
mov
daa
or
cwtl
mov
mov
mov
pop
fstpt
add
addr16
fwait
cmc
or
int
and
stos
cmp
call
aam
add
inc
gs
jne
jae
jb
outsl
jae
add
mov
out
lahf
add
sbb
mov
ja
sahf
add
dec
roll
inc
pop
leave
mov
xchg
or
adc
push
sbb
addr16
nop
outsb
lods
js
test
popf
addr16
xchg
or
or
ret
xor
jl
mov
fdiv
ret
add
dec
insb
gs
jae
jne
jb
outsb
je
insb
imul
add
or
and
out
ljmp
sub
jne
fcmovne
or
push
push
push
addl
pushl
push
pushf
pushf
lea
jmp
add
dec
outsl
jbe
push
imul
fs
jne
setbe
shl
xadd
call
add
inc
gs
arpl
insb
insb
push
popa
outsb
add
add
outsb
inc
insb
imul
add
add
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
and
pop
sbb
and
or
stos
out
jo
or
stos
sti
sub
jno
addr16
fdivrs
jbe
enter
nop
mulb
cld
mov
stos
sbb
in
mov
addr16
dec
mov
xchg
leave
insb
movsb
test
push
outsb
icebp
sbb
aam
testl
cltd
mov
push
int3
addr16
pop
dec
inc
and
fs
pop
mov
bt
repnz
mov
push
pushf
lea
jne
pushf
pushf
pushl
lea
jmp
push
pusha
call
add
inc
imul
add
les
dec
gs
jo
insb
insb
outsl
arpl
add
inc
dec
push
dec
inc
inc
jb
insl
push
je
imul
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
cmp
mov
pusha
movl
lea
je
clc
cmp
call
stc
clc
pushf
cmpb
call
add
push
gs
outsl
insb
jns
imul
add
inc
gs
gs
inc
inc
add
add
imul
push
jb
jo
jb
jns
add
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
push
mov
bound
pop
cld
stos
xor
push
sbb
lret
sbb
shr
pop
notb
rcrl
push
ljmp
inc
adc
inc
push
sbb
jae
dec
gs
popa
addr16
add
mov
push
push
mov
or
stos
fstpt
cltd
pop
sub
mov
xchg
or
popf
enter
xchg
inc
mov
pop
cmp
ds
cli
sbb
lahf
je
insb
add
das
stos
and
sbb
or
push
lahf
stos
movsl
mov
pusha
mov
adc
subb
xor
pop
stc
sahf
pop
jl
popf
add
subl
inc
popa
sub
movsl
test
push
xchg
cmpsl
mov
outsb
arpl
stos
fstpl
sbb
addr16
mov
push
aaa
stos
xchg
sub
ja
into
sub
outsl
add
inc
imul
inc
imul
imul
outsb
outsl
ja
gs
popa
addr16
add
pusha
sub
jmp
popa
push
jp
xor
pop
pop
and
enter
shrl
jg
adc
lods
das
mov
in
loop
cmpsl
xor
lahf
jmp
mov
jbe
adc
test
lret
outsl
cwtl
data16
jmp
pop
stos
xor
push
jne
sub
je
fchs
or
pop
adc
jg
inc
push
int
xlat
xchg
push
mov
arpl
push
pop
push
and
imul
ja
shll
push
mov
ret
adcl
imul
cwtl
mov
add
mov
ljmp
std
sbb
or
rolb
and
adc
xlat
fcoml
cwtl
or
stos
xor
push
and
push
push
shrb
es
mov
mov
cmpsb
dec
hlt
jne
push
adc
nop
jge
push
cmp
mov
dec
and
imul
inc
stc
cltd
into
cwtl
out
lret
mov
push
add
mov
and
nop
rcr
fisubrs
test
sarl
ljmp
icebp
jns
scas
adc
xorb
dec
pop
cmpl
frstor
xchg
xchg
lret
popa
or
popa
xchg
mov
stos
xor
cmp
stos
xchg
or
lods
clc
aas
cmp
scas
jnp
add
bt
cmc
cmp
pushf
pushf
jmp
lea
je
or
mov
jmp
lea
jae
cmc
cmp
call
add
inc
jb
popa
je
inc
dec
inc
push
arpl
outsb
add
jl
and
movl
mov
and
shlb
scas
int
fdivl
jmp
gs
int
movsb
fcomps
arpl
jmp
xchg
cmp
or
out
cmp
pop
das
push
push
mov
mov
mov
popa
cwtl
cmpsl
pop
pop
mov
or
pop
add
fs
mov
pop
cmp
arpl
mov
subl
adc
pop
mov
mov
sub
shr
test
clc
add
pop
shlb
dec
adc
jbe
mov
add
inc
gs
dec
push
xor
add
push
gs
imul
outsl
jb
push
bt
ror
pushf
call
stc
pushf
mov
movl
pushf
call
xorb
push
mov
ret
push
imul
shlb
xchg
sub
mov
cltd
xchg
outsl
jo
mov
leave
lock
mov
in
daa
push
repz
dec
int
xor
mov
aam
mov
mov
jnp
jno
js
into
popa
xchg
fmul
das
add
stos
pusha
fcoms
fwait
testw
outsb
hlt
ret
add
push
and
data16
sahf
cli
push
aas
pushf
xchg
jp
push
jle
fisubrl
out
sbb
pop
jecxz
arpl
and
stc
xchg
xchg
jp
jg
mov
jnp
adc
jne
insb
ja
add
je
outsb
fs
inc
imul
je
jle
add
xor
pusha
jmp
add
inc
imul
outsl
ja
js
add
clc
imul
mov
addb
mov
repz
jmp
inc
xchg
sub
rcrl
pusha
iret
popa
pop
jl
fsubrs
mov
in
arpl
xlat
nop
mov
sbb
shrl
jo
xchg
in
mov
push
adc
push
bound
das
xor
cmp
jne
insl
push
mov
addb
jne
mov
pop
out
jmp
and
icebp
push
or
mov
jecxz
inc
ljmp
movsb
mov
adc
loop
pop
pop
and
xchg
pop
fstps
pop
jl
xchg
xor
rcrl
fimuls
sarl
push
cmp
inc
fstpl
fisubs
test
add
push
gs
popa
insb
jne
add
aas
sbb
add
add
add
add
add
xor
add
add
add
add
xor
push
xor
iret
mov
data16
fsubrs
push
mov
icebp
pushf
fidivl
scas
aad
imul
sbb
jp
pop
lods
ret
insb
jecxz
cmp
and
push
pop
cli
addr16
mov
jg
aad
out
jmp
inc
add
adc
add
enter
inc
addr16
xor
push
jl
pop
orb
insb
imul
je
divl
stc
adc
ja
mov
cmpsb
sbb
push
lods
or
shrl
jb
xor
push
push
adc
xor
rep
cmp
mov
outsl
mov
test
xchg
jno
dec
sbb
in
and
dec
mov
jecxz
xchg
inc
gs
push
or
std
rclb
mov
jmp
movsb
mov
jb
outsl
leave
or
mov
or
ret
dec
cmc
jge,pt
fldcw
aam
jp
scas
test
xor
ret
xchg
mov
xchg
aaa
adc
and
dec
push
push
mov
mov
popf
rcl
xorl
pop
mov
mov
dec
daa
lret
rclb
jmp
movsb
mov
push
pop
outsb
mov
faddp
mov
cld
push
adc
xor
adc
sub
div
jp
int
pop
das
int
dec
sbb
testb
ja
mov
mov
pop
aad
sbb
adc
popf
and
fnstenv
sbb
bound
pushf
addl
adc
aad
jmp
movsb
stc
or
dec
cwtl
cmp
es
dec
cltd
mov
mov
sbb
insl
popa
mov
push
xchg
sub
pushf
pop
cmp
cmp
xor
mov
lret
jle
sub
xor
xor
int
push
mov
xchg
stc
jp
push
fwait
cmpsb
or
adc
mov
fdivr
out
int
cmc
cmp
arpl
ja
incl
xchg
arpl
jo
push
hlt
outsl
or
sbb
pop
imulb
cmp
xlat
sub
pop
mov
and
adc
jno
imul
fmul
in
or
ret
and
inc
inc
pop
pop
or
cmp
test
sub
sub
xchg
dec
fwait
pop
aas
int3
xor
mov
loope
ljmp
testl
xchg
lods
and
sbb
pop
in
lods
fstpt
add
mov
pop
movsb
addr16
in
je
scas
cmp
add
cmp
loope
aam
movl
pop
nop
imul
pushl
or
xchg
xchg
mov
cmpsb
ds
jp
fistps
cli
xchg
and
js
xor
lcall
and
fidivl
mov
sbb
hlt
stc
fisubl
cli
push
sti
ret
xchg
mov
mov
fildll
push
push
mov
outsb
fldt
jecxz
out
push
mov
std
mov
daa
or
jg
into
mov
mov
inc
sbb
push
shr
or
mov
push
dec
cmpsl
repnz
or
dec
mov
inc
xchg
mov
xor
nop
push
jecxz
flds
loop
int
sbb
mov
jmp
jge
inc
sub
cmp
mov
fs
xlat
into
insb
xchg
aaa
add
pop
in
loop
notl
sti
sbb
lcall
or
or
ret
jno
imul
mov
les
fisubs
xor
inc
aam
lcall
idiv
sbbl
loopne
out
popf
push
lcall
aam
xchg
mov
movsl
jo
mov
xlat
fimull
or
sbb
or
insl
pop
icebp
outsl
xor
ds
sbb
ss
sbb
pop
cmc
inc
mov
je
add
cmp
sbb
dec
push
sub
lods
hlt
fdiv
in
loop
lods
cmp
push
fsub
cwtl
xor
sub
or
pop
pusha
fcomps
icebp
dec
mov
jp
rclb
dec
loopne
sub
leave
and
lods
mov
out
cwtl
mov
lds
sub
inc
mov
mov
out
scas
pop
jp
into
enter
scas
int3
cmp
lds
and
sbb
cmc
cmpsl
insl
repz
pop
jmp
out
add
push
push
xor
loope
jl
lock
stos
pop
inc
mov
in
repz
xor
jge
add
push
neg
push
loop
testl
repz
cmp
popl
movsb
cmpsb
jmp
or
or
pop
and
or
jge
mov
mov
arpl
ret
lock
pop
cmc
jl
pop
pop
mov
mov
icebp
aaa
shl
ror
and
lds
xchg
outsl
popf
xor
fcoms
sbb
sbbl
mov
les
jg
aas
cmp
xchg
inc
or
dec
mov
sub
loop
inc
jle
dec
popf
jb
fidivs
or
outsb
xchg
ljmp
mov
pop
mov
jnp
add
mov
movsl
push
je
jb
in
jbe
sub
xchg
pop
outsb
ret
mov
mov
scas
js
push
push
arpl
cmp
cli
push
fs
es
gs
enter
inc
jne
dec
cmpl
fadd
popa
push
inc
enter
xlat
sbb
test
into
mov
mov
mov
outsl
movsl
jmp
pop
xor
outsl
mov
ret
pushf
movsl
dec
push
sbb
scas
mov
gs
in
adc
mov
pop
mov
daa
push
push
sub
in
mov
rcrl
int
push
popl
push
lahf
mov
in
or
mov
mov
inc
push
fucomp
pop
jne
into
ficomps
lods
negb
cmpsl
and
mov
push
sub
leave
adc
sub
ja
sbb
dec
stos
movsb
cmpsl
pop
aad
xor
add
add
push
data16
xchg
lcall
int3
mov
mov
in
xchg
popf
xor
add
cmp
js
mov
xor
mov
xchg
ljmp
inc
stos
rorb
push
lds
je
gs
test
mov
daa
ficomps
cmpsl
cli
imul
clc
or
cmp
std
fisttpl
pop
testl
cmp
ss
xchg
popa
add
in
scas
pop
lock
pop
shrb
jle
pop
les
xor
mov
data16
cmp
fs
push
jle
pop
pop
cmp
inc
adc
sub
fcompl
and
pushf
enter
std
mov
push
movsb
in
outsl
adc
loopne
lock
add
call
inc
fwait
das
jns
add
outsb
dec
dec
sub
xchg
dec
pop
repz
cli
mov
cmp
cmp
fisttpl
xchg
or
int
mov
inc
lea
add
mov
xor
xor
push
jne
popa
cwtl
xor
inc
outsb
jne
cmp
in
loope
and
xorb
rolb
lock
sub
xor
cli
xchg
std
test
arpl
add
xor
mov
or
dec
into
shlb
pop
notl
out
cs
xchg
clc
dec
sbb
or
xor
jl
mov
sbb
subb
mov
ss
push
cmp
mov
cmp
or
cmp
inc
adc
loop
jecxz
push
xchg
jg
mov
dec
add
pop
inc
inc
ds
jae
in
and
mov
inc
repnz
fsts
add
xchg
pop
sti
dec
inc
into
popa
sbb
mov
flds
dec
addr16
adc
das
adc
scas
fwait
pusha
sub
cmc
dec
xor
in
sar
cmp
js
pop
mov
lods
fabs
mov
imul
popa
test
jp
push
clc
sbb
xchg
sbb
and
out
or
insl
cmpsl
hlt
and
mov
and
or
xor
rcrb
das
test
push
mov
mov
loop
shll
and
xchg
push
mov
xor
cwtl
fmul
loop
xor
rcrl
xor
leave
mov
adc
leave
push
sbb
mov
mov
and
punpcklwd
dec
add
es
out
gs
push
adc
jp
mov
inc
cmp
lahf
addb
add
sbb
mov
addr16
jae
shll
test
aam
sub
dec
aaa
jp
mov
loop
jno
es
add
outsb
or
rcl
and
xchg
or
adc
pusha
pop
sbb
push
lods
jb
cmp
sbb
dec
pop
xor
ds
addl
rcll
mov
lds
lahf
and
aas
push
cld
mov
addr16
fsubrs
xlat
add
or
jo
les
mov
mov
push
dec
adc
fnstsw
sbb
out
inc
inc
and
loop
adc
mov
xchg
pop
cltd
idivl
addb
out
repnz
inc
fnstenv
test
ret
cltd
jg
addr16
mov
jg
pop
jg
aas
dec
push
loop
lds
or
xchg
in
cmp
jnp
push
cltd
frstor
jo
jge
xorl
inc
scas
les
xlat
test
arpl
pop
es
sub
out
rcr
rcl
rol
pop
cmp
adc
fcoms
fisubrs
ffree
push
pushf
or
jp
addr16
xchg
sub
jecxz
fs
pop
add
outsb
in
rclb
pop
inc
sahf
mov
and
imul
fwait
jnp
lock
sbb
cmp
ds
mov
in
sbb
mov
push
imul
rcrb
mov
lods
mov
nop
arpl
pop
popf
lods
cmp
fidivs
in
ja
iret
push
adc
inc
fadds
fadd
mov
fstl
or
jb
scas
sahf
jle
into
mov
cltd
pushf
push
data16
jo
pop
mov
loopne
mov
lcall
cld
popl
movsl
outsb
add
mov
lret
dec
movsb
in
push
mov
fnstcw
mov
nop
mov
cmpsl
jge
mov
lret
cmpsl
out
mov
dec
cmp
cmc
sbb
sbb
xor
push
sub
aad
jo
popf
push
popa
cmpsl
jb
or
add
sub
adc
cltd
loopne
mov
push
push
popa
mov
out
jecxz
sub
lea
pop
push
in
insl
cmp
mov
xchg
jmp
lahf
cmc
and
mov
mov
inc
gs
gs
dec
outsb
jne
add
inc
gs
jne
insb
push
popa
je
dec
popa
insl
gs
add
add
je
insb
imul
inc
popa
je
add
xchg
sarb
or
mov
pushf
test
repnz
mov
pushf
lea
jne
pusha
pusha
lea
jmp
add
insl
imul
jae
je
lea
jne
test
test
movzwl
clc
mov
pushf
stc
add
movl
pusha
clc
mov
call
push
pop
std
adc
mov
pop
mov
or
hlt
jmp
int3
pop
mov
xchg
sub
fidivrl
testb
mov
mov
addr16
stos
xor
movsb
fnstenv
mov
insb
mov
xor
mov
into
adc
inc
mov
dec
dec
pop
pop
test
pop
test
iret
test
add
mov
lret
testl
inc
lea
pop
or
mov
add
es
cmp
loopne
idivb
xor
fwait
orl
enter
mov
pop
out
insb
scas
idivb
nop
in
fnstcw
jmp
or
ss
jle
jle
out
mov
ljmp
xchg
incb
ret
cs
jo
mov
mov
mov
inc
xchg
lea
push
mov
mov
jnp
pusha
pushl
test
pushl
movb
push
lea
je
pushf
push
pushf
mov
movsbl
adc
aad
mov
test
clc
test
pushl
jmp
add
push
gs
outsl
jbe
push
jb
jo
add
int3
and
or
add
pop
lock
addr16
xchg
aas
xchg
fidivs
loope
imul
fs
je
jne
mov
pop
push
pop
jmp
push
lea
jae
pusha
cmp
jmp
add
inc
gs
outsl
jo
imul
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
add
je
dec
inc
imul
push
dec
dec
dec
cs
push
push
add
or
or
pop
movsl
sbb
push
repz
stos
adcl
into
jae
rcrb
addr16
mov
fucomi
repnz
inc
xor
fisubs
out
push
leave
cltd
iret
jmp
xor
push
mov
icebp
mov
cmpsb
adc
cmc
jp
lahf
push
inc
jne
jge
jge
pop
sbb
sub
pop
mov
inc
inc
insb
or
in
fsub
jmp
inc
js
push
mov
int3
xor
stos
imul
lods
dec
sbb
jno
push
pop
sub
es
sbb
mov
xchg
into
push
icebp
add
push
gs
imul
gs
add
inc
gs
outsl
arpl
push
imul
lcall
adc
into
mov
jne
dec
test
dec
push
sbb
out
add
pop
orl
xor
xor
xor
cmpsb
movsl
aas
cmc
pop
fidivrl
or
stos
xor
push
add
mov
ret
jnp,pn
adc
in
add
xchg
mov
enter
cmpsb
pop
mov
push
jmp
scas
pop
push
lret
xchg
push
add
xchg
je
stos
imul
mov
adc
or
stc
in
fildll
ja
pop
mov
call
fmul
mov
jge
and
movsl
mov
fdivrs
call
cmpsb
stos
xor
push
rolb
popf
mov
or
push
push
cmc
scas
pop
jne
es
add
out
das
aaa
iret
sbb
jbe
cs
xchg
jbe
int
push
icebp
cmc
scas
pop
mov
inc
out
iret
je
stos
mov
jge
xchg
pushf
gs
fists
xor
push
pop
adc
add
enter
incb
test
nop
dec
or
sub
sarb
push
xor
testb
sahf
and
into
inc
or
add
ret
scas
sbb
mov
jae
or
loopne
stc
call
add
inc
gs
imul
je
cmp
push
mov
sub
pusha
rep
mov
call
bswap
pushf
pusha
mov
pushf
pushl
ret
sbb
lods
aas
and
mov
xor
dec
inc
fidivl
sbb
mov
into
xor
dec
xchg
cmc
mov
sub
rclb
fidivrl
daa
adc
xchg
pop
icebp
scas
xor
in
or
insl
movsl
lods
stos
loopne
xchg
and
bound
xlat
cmp
jae
sub
fs
sets
sub
mov
or
mov
xlat
push
sub
mov
iret
addl
iret
jecxz
jne
sahf
subl
popf
and
popa
pusha
mov
sub
cli
inc
loope
adc
adc
push
lds
stos
xor
rorb
mov
sbb
shrb
mov
dec
notl
cmp
ret
pop
xor
mov
mov
add
mov
fstl
fcomi
and
leave
or
mov
xlat
mov
dec
mov
out
add
fxch
test
adc
lock
rcr
bound
fisubs
jmp
xchg
push
pop
pusha
sub
adc
mov
rolb
iret
ljmp
push
inc
hlt
out
insl
icebp
xor
sub
xchg
mov
or
loope
cltd
loope,pt
ret
pop
sub
shl
add
icebp
enter
xchg
mov
inc
jno
mov
adc
sub
or
push
xchg
int3
jmp
push
xchg
stos
scas
xchg
stos
xor
dec
jno
imul
popf
fcom
ficoml
ret
int
pop
in
fs
imul
cs
cli
shrl
xor
cs
insb
add
sbbl
push
mov
shll
pushf
call
add
dec
gs
jo
jb
add
repz
ljmp
push
or
jbe
or
and
mov
je
outsb
push
gs
js
gs
imul
gs
arpl
fs
xor
cs
insb
add
int3
xchg
call
call
dec
test
bt
stc
push
shl
lea
jbe
seta
lods
stc
ror
pushf
clc
xor
pusha
cmp
add
jle
cmp
add
call
mov
rol
movzbl
xadd
cmc
mov
or
jmp
add
inc
jb
popa
je
inc
imul
mov
jb
sahf
mov
add
divl
add
inc
gs
gs
inc
insb
addr16
popa
bound
gs
add
mov
add
add
sub
lea
je
push
lea
jmp
push
call
or
add
fs
ja
imul
add
gs
insb
jne
push
bound
jb
add
add
gs
je
push
popa
insb
gs
add
add
je
jae
jb
gs
jne
je
inc
dec
inc
add
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
add
je
jne
jb
outsb
je
imul
jns
add
out
push
inc
sbb
lahf
mov
or
insl
stos
lahf
add
imul
xchg
mov
push
ret
mov
scas
cmc
dec
dec
in
pusha
cmpsb
movsb
shlb
cmp
stos
xor
stos
movsb
mov
inc
fwait
ja
std
enter
adc
lea
pusha
jmp
pusha
pushf
jmp
push
call
mov
cmp
clc
dec
mov
ljmp
subb
test
call
mov
mov
into
das
loope
jg
popa
popf
test
fwait
outsb
iret
aam
cmp
push
xchg
dec
iret
mov
and
stos
xor
inc
jb
cmpl
lcall
xchg
stc
push
ret
test
push
mov
loopne
loop
mov
mov
test
cmp
andl
adc
or
or
mov
lahf
mov
xchg
push
mov
fstps
lret
call
and
sub
pop
lret
out
data16
lods
js
pop
xor
xchg
in
and
xchg
pop
cli
stos
aaa
addr16
out
inc
shrb
popa
or
arpl
lret
push
mov
xchg
aaa
stos
and
outsl
sbb
test
add
arpl
adc
mov
dec
cmp
popf
test
push
add
test
xchg
fsubrs
stos
dec
lock
fildll
jl
sarl
mov
xorl
ret
cli
loope
pop
add
mov
rorl
subb
dec
jo
xor
or
sbb
adc
dec
lea
call
pusha
push
push
adc
pushf
movb
push
lea
jae
jmp
mov
pushf
push
lea
jmp
add
inc
gs
imul
addr16
js
add
push
popa
imul
insb
gs
bound
arpl
add
insb
arpl
imul
fcoms
xor
mov
bts
mov
jle
pushf
stc
add
pushf
mov
lea
pushf
lea
jmp
add
inc
fs
jae
push
imul
arpl
add
add
jb
outsb
inc
add
add
je
imul
call
push
call
mov
cmp
leave
bt
pushl
popl
jmp
pushf
call
push
push
lea
ja
stc
add
sub
btc
pushf
sub
add
push
cmp
mov
xor
pusha
inc
add
mov
bt
stc
stc
pusha
repnz
mov
lea
jne
pushf
pushf
mov
push
lea
jmp
cmp
call
call
call
pushl
mov
pushl
call
push
call
clc
add
inc
outsb
fs
imul
aas
add
jg
pmuludq
pop
mov
xchg
adc
xchg
jae
push
mov
sbb
push
test
mov
push
xor
in
in
sbb
mov
inc
or
mov
lods
je
or
push
call
xor
and
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
add
lea
xor
lret
inc
or
and
mov
mov
out
mov
push
inc
pop
scas
or
or
es
add
jle
xor
inc
into
stos
dec
test
xor
leave
aam
fs
pop
sets
jg
and
clc
add
and
adc
sbb
imul
jge
add
je
jne
jb
outsb
je
push
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
push
call
cmp
mov
lea
ja
rcl
sbb
sbb
sub
ror
add
cmp
movzbw
mov
dec
ror
pushf
call
aaa
cmp
mov
js
dec
bound
scas
stos
std
push
cmpsb
stos
mov
add
in
aas
movsl
out
or
dec
stos
push
cmpl
icebp
js
jno
fildl
stos
cmp
mov
stos
cmp
sub
cltd
enter
test
in
or
aaa
arpl
xchg
jmp
add
inc
outsb
jne
inc
imul
gs
imul
add
push
imul
outsl
arpl
ret
aad
push
xchg
in
or
jecxz
fmulp
in
push
les
mov
add
les
dec
fldenv
mov
fiadds
add
gs
je
inc
outsl
outsb
je
outsb
imul
pushf
lea
je
push
pushl
pushf
lea
jmp
push
call
icebp
cmpsb
hlt
fcoml
add
je
jne
jb
outsb
je
push
dec
add
enter
cld
stos
or
adc
add
push
gs
jne
jae
jb
add
inc
jb
popa
je
inc
arpl
insb
gs
je
jb
popa
bound
add
pushf
jo
push
jmp
cmp
mov
stos
jnp
bound
popa
cmpsb
mov
dec
mov
in
add
out
dec
fmuls
les
sub
add
cmp
lods
movsl
mov
xchg
xchg
add
jbe
cs
sbb
push
icebp
cmp
cwtl
or
daa
pop
or
or
mov
shl
mov
ja
scas
adc
loopne
loopne
xchg
and
cmc
dec
lods
mov
loope
push
cltd
arpl
shll
sbb
subl
std
aam
addr16
dec
aaa
rclb
jecxz
push
dec
xor
sub
test
pop
ss
das
fldcw
movsl
mov
shrl
dec
out
sbb
inc
dec
lcall
push
and
adc
cli
or
jo
adc
insl
jo
sub
ja
test
add
pop
int3
mov
dec
xor
shrl
rclb
lods
aaa
and
mov
nop
cmp
iret
scas
inc
clc
adc
push
dec
nop
add
lret
imul
lret
aad
jno
rcrb
sar
test
pop
stos
pusha
movb
movb
push
lea
jmp
add
inc
jb
popa
je
dec
arpl
inc
jb
insl
push
gs
jne
arpl
js
push
add
add
rcl
shl
mov
pusha
mov
test
test
repnz
pushl
call
add
push
gs
insb
imul
inc
popa
je
add
test
mov
call
lea
jae
cmc
pusha
jmp
add
dec
popa
jo
imul
imul
incl
add
call
lea
call
push
test
cmp
pusha
lea
jae
cmp
stc
cmp
jmp
sub
pusha
stc
call
stos
pushf
push
pushl
pusha
lea
jmp
add
push
jns
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
xor
pushf
adc
pushf
pusha
lea
jae
pushf
lea
jne
pushf
call
jmp
insl
inc
fwait
mov
mov
stos
xor
xor
lea
stos
xchg
and
xchg
outsb
repz
lret
ja
lahf
rcrl
mov
mov
negb
adc
dec
movl
fstl
mov
gs
pop
or
pop
inc
loope
xchg
nop
test
pop
jae
cmp
xor
or
push
jno,pt
mov
dec
xchg
mov
bnd
std
mov
outsl
and
sub
popf
insl
imul
cmpb
or
xorb
mov
push
in
fldenv
fistps
cmpsb
push
call
lcall
pop
mov
movl
jmp
pop
popa
xor
or
shr
or
aam
roll
adc
jne
mov
test
mov
push
mov
xchg
add
test
push
jl
clc
test
add
cmp
sub
sarl
stos
pop
ds
xor
aam
ja
sub
jecxz
push
cld
jecxz
add
inc
gs
outsl
jb
addr16
jne
fs
imul
push
mov
mov
mov
outsb
adc
cmpb
rorb
mov
stos
xchg
or
lret
xlat
shrb
inc
gs
pop
xchg
jne
or
inc
xchg
sub
xchg
dec
adc
push
rcr
sub
test
cli
pop
sub
xchg
divb
shrb
dec
xor
sahf
and
out
lret
push
mov
and
fcomps
test
pop
and
rol
testb
sahf
test
or
ret
xchg
sbb
sub
xor
add
pop
jl
mov
mov
out
fsubs
lret
xchg
jno
sub
dec
out
add
inc
outsl
inc
jb
gs
outsb
jne
gs
imul
jae
add
dec
jne
je
inc
jns
gs
outsl
push
imul
jmp
add
inc
jb
popa
je
push
popa
je
gs
inc
jb
jae
add
test
mov
or
adc
mov
sbb
stos
lcall
pop
sbb
cmp
popf
mov
jo
inc
push
test
in
mov
push
jnp
push
xorl
out
mov
icebp
jbe
sub
pop
adc
pop
stos
cwtl
sahf
inc
and
iret
push
inc
orl
pop
mov
cwtl
mov
dec
jno
xor
insb
add
cmpsb
cmpsl
adc
jmp
add
sar
rorb
add
out
xor
mov
fwait
xchg
cltd
jge
je
pop
outsb
inc
and
or
and
sub
rolb
mov
dec
aad
stos
xor
enter
dec
xchg
adc
push
add
mov
inc
mov
push
xor
sbb
add
ja
jbe
dec
jne
inc
insb
outsl
jae
add
sub
xor
sbb
push
call
and
mov
pushl
push
js
lahf
or
dec
hlt
sets
cwtl
mov
dec
clc
add
jle
jle
rcrb
add
inc
mov
xor
lods
and
sub
stos
xchg
adc
insl
cmp
or
push
rclb
mov
xchg
jle
inc
dec
mov
add
jo
push
arpl
add
lea
call
mov
or
inc
test
dec
add
aaa
and
mov
fldl
iret
sbb
sbb
mov
dec
jo
dec
mov
mov
outsl
insb
gs
cs
insb
add
mov
call
mulb
lods
sub
jb
mov
sbbl
jbe
inc
jb
je
arpl
push
arpl
outsb
add
test
incl
add
gs
je
inc
imul
or
sbb
mov
bt
xor
push
stc
jmp
add
push
gs
gs
popa
insb
jne
inc
js
add
add
je
imul
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
outsl
jne
incl
add
je
imul
outsb
addr16
add
jb
ja
inc
rorl
sub
add
inc
insb
outsl
jae
push
jb
outsb
je
jb
add
inc
gs
jb
jo
add
add
inc
gs
jo
arpl
insb
inc
outsl
insb
fs
popa
je
inc
add
push
inc
or
mov
xchg
ss
mov
scas
arpl
loopne
xchg
imul
add
lret
clc
or
and
repz
mov
fists
sbb
or
in
leave
fimuls
enter
or
cld
pop
sub
outsl
stos
xor
pop
movsb
stc
jg
push
push
inc
jo
not
cmpsl
cld
jg
dec
xchg
cld
adc
in
shrb
outsb
mov
ret
ljmp
jge
sub
into
andb
movlps
mov
sbb
bound
loopne
xchg
sub
inc
inc
sub
push
cmc
jmp
outsb
mov
pop
test
popa
test
push
cmpl
repz
call
add
pop
mov
or
jg
or
xchg
ret
aaa
mov
or
pop
ljmp
cmc
lds
inc
cmpsb
leave
movsl
mov
adc
add
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
pusha
stc
bt
ror
call
cmc
add
stc
call
mov
lea
btr
btc
shrd
sub
rol
pushl
cmc
neg
lea
sub
cmc
clc
cmc
call
lea
jae
pushf
pusha
lea
jne
push
mov
stos
push
movw
push
lea
jmp
inc
and
inc
cmp
popa
in
dec
aad
mov
mov
mov
int3
or
test
dec
mov
rclb
ds
mov
mov
loope
xor
cmp
dec
test
mov
addr16
mov
sbb
inc
xchg
xor
cs
movsb
adc
xor
out
add
mov
dec
lock
pop
movsb
nop
mov
pop
stos
cs
push
imul
dec
pop
aad
adc
fildll
xchg
int3
pop
mov
jbe
add
sub
xor
dec
shlb
popf
movsb
mov
or
mov
dec
sbb
push
loop
xor
cmp
xchg
xchg
or
mov
mov
popf
rcll
in
inc
int3
lods
pop
fists
mov
sti
pop
mov
mov
clc
pop
push
pop
fcmovne
gs
inc
jae
xchg
test
imul
ljmp
or
xchg
or
lock
lods
stos
jge
adc
ja
mov
cmp
mov
loop
or
ljmp
ds
add
add
fs
insl
popa
addr16
add
call
add
addb
call
add
dec
outsl
popa
fs
arpl
inc
add
add
popa
jns
outsl
jne
fs
add
jecxz
clc
ror
cmc
pusha
xor
bt
pushf
bt
cmp
add
cmc
movw
ror
cld
pushw
popfw
mov
inc
jmp
lea
je
clc
jmp
push
call
push
pop
jmp
fs
jae
pushf
pusha
lea
jmp
das
imulb
fidivs
addr16
stos
loop
loope
into
pop
jecxz
stos
sub
cmc
and
out
stos
xchg
lfs
and
in
mov
pushf
lea
ja
call
lea
je
pushf
call
add
ja
jbe
dec
jne
inc
gs
jne
inc
gs
add
ret
push
xor
bt
add
movb
rcr
ror
ror
pusha
push
stos
lea
jge
not
mov
pushf
movb
lea
call
push
call
xchg
push
imul
iret
mulb
jbe
popf
std
stos
jg
inc
ss
ljmp
fdivrs
pop
lret
rclb
lods
scas
cmp
dec
ljmp
stos
xor
mov
sub
cmp
mov
inc
or
dec
adc
sbbl
add
cmp
fdivrl
or
popf
or
pop
dec
gs
je
js
mov
adc
scas
mov
pop
push
movsl
push
inc
push
add
enter
cmpsb
sub
shll
cmp
mov
ljmp
jmp
dec
sbb
imul
jns
push
xchg
loopne
sbb
cmp
fstl
repnz
or
xor
stos
xor
mov
mov
or
adc
cmp
xor
and
push
insl
addr16
cmp
push
sbb
aam
sub
fmuls
js
pop
test
adc
jmp
add
leave
mov
mov
ljmp
mov
test
jnp
nop
stos
jge
pop
mov
dec
js
mov
sub
mov
hlt
dec
mov
jnp
push
imul
outsl
ja
outsl
jae
cmc
stc
cmp
mov
jmp
add
inc
push
dec
push
je
gs
insl
inc
gs
jb
insl
add
add
je
insb
imul
scas
pusha
pushf
jmp
cmp
stc
jge
adc
loope
stos
xchg
cltd
pop
jmp
or
add
push
add
sbb
loopne
fdiv
sbb
jb
dec
cmp
pusha
inc
pop
ja
xchg
jecxz
cwtl
sti
bound
dec
in
add
inc
insb
jne
push
inc
jne
data16
add
jmp
incl
add
gs
insb
pop
dec
outsl
je
data16
arpl
inc
add
add
gs
outsb
imul
add
add
call
xor
call
arpl
or
movsb
test
add
pop
xchg
jb
sbb
scas
dec
ja
fistpll
stos
test
ja
sub
lods
adc
push
call
sahf
cmp
insb
imul
je
add
inc
popa
insb
insb
dec
gs
dec
outsl
outsl
imul
add
push
insb
jae
insb
insb
outsl
arpl
mov
add
sub
cmp
stos
js
xchg
es
mov
mov
mov
jbe
mov
ret
mov
cwtl
cmp
inc
cmc
clc
add
adc
mov
out
dec
pop
dec
lret
enter
add
je
jb
jb
je
arpl
push
arpl
outsb
add
dec
dec
loopne
cmp
and
push
add
mov
popl
mov
cmpl
mov
daa
call
cmp
xchg
push
adc
pop
shrl
pop
sbb
and
adcl
mov
enter
bound
cmpsb
sbb
iret
jne
out
dec
test
cmp
mov
stc
adc
jnp
sub
es
push
aad
xor
out
je
stos
imul
std
dec
jo
mov
dec
aas
nop
mov
xchg
lret
mov
pushf
rol
pop
stos
mov
ss
pop
mov
ds
xor
aaa
jle
mov
arpl
jbe
int
das
pop
lds
mov
push
shrb
loope
or
cltd
les
fdivs
mov
push
shll
jp
je
test
mov
or
mov
gs
cld
xor
scas
pop
push
rcll
and
arpl
leave
dec
and
pop
arpl
test
xchg
sar
int3
sbb
insl
inc
dec
insb
add
dec
push
ret
movsl
xor
push
sub
daa
imul
fdivrs
in
sbb
mov
and
add
je
arpl
jo
jns
add
inc
gs
inc
push
add
fimuls
pop
iret
mov
add
push
pop
and
lea
jmp
jno
pop
mov
test
push
cmp
movsl
and
push
xor
dec
test
jb
mov
mov
into
jno
test
sbb
test
fsubr
mov
lods
or
subb
add
or
jns
jge
jae
sbb
insb
imul
inc
insb
outsl
bound
inc
imul
inc
add
adc
or
cmp
jmp
pushl
popl
stc
pushf
cmp
pushf
jmp
add
push
gs
jne
jb
push
popa
insb
jne
inc
add
adc
fs
je
test
lea
rcl
bsr
mov
cmp
dec
shrd
shr
mov
cmp
cmc
test
stc
xor
bt
jmp
xor
jmp
jle
mov
push
scas
jp
aas
jns
aas
ficompl
sub
insb
cmpsb
fs
iret
jnp
sub
das
cwtl
outsb
inc
xchg
and
sub
out
mov
fnstcw
mov
sti
leave
inc
cld
fldenv
out
mov
add
outsb
out
mov
out
adc
cmp
xlat
push
sbb
push
fwait
sbb
mov
jo
jb
rclb
leave
in
cmpl
add
mov
call
sarl
aas
stos
mov
push
or
push
xchg
dec
pusha
mov
cmp
or
imul
sbb
lret
mov
cwtl
pop
aam
jg
loopne
xor
mov
xchg
or
loopne
mov
push
mull
pop
xchg
insb
mov
lea
je
pushf
push
btr
dec
add
jmp
push
call
xor
sbb
or
je
je
add
bt
test
cmp
jmp
movl
call
xor
nop
jecxz
jmp
add
in
mov
pop
mov
xlat
xor
pop
pop
and
bound
movsl
add
les
mov
pop
scas
out
xchg
sti
mov
mov
push
and
lds
jno
sets
cmc
fldcw
clc
add
cmpsb
xchg
sbb
fdivs
jno
and
lea
je
jmp
bt
pushf
cmp
jmp
and
pushf
lea
jmp
mov
test
test
mov
cmp
test
pushf
lea
je
stc
lea
and
pushf
add
bswap
shr
mov
lea
or
movzbw
movsbw
rcr
mov
adc
bsr
mov
call
mov
movb
pusha
pushf
pushl
ret
pusha
mov
lea
je
xadd
mov
sar
add
dec
rcr
cmc
shrd
mov
cmp
pusha
test
bt
test
mov
pusha
jmp
cmp
jmp
add
dec
outsl
arpl
push
gs
insb
insb
outsl
arpl
add
push
je
push
outsb
ja
outsb
add
push
mov
lea
push
jmp
add
inc
gs
gs
dec
bound
arpl
add
cmc
cmp
mov
cmp
test
mov
stc
stc
cmp
pusha
mov
push
lea
jbe
movsbl
mov
dec
bsf
add
xor
sub
bsr
sar
mov
cmc
cmc
call
add
push
gs
outsb
jne
mov
pusha
jmp
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
add
inc
imul
jne
arpl
add
jmp
jmp
cmp
pushf
jmp
dec
aaa
sbb
xchg
adc
call
stos
ds
dec
add
lds
cmp
call
pop
gs
push
sets
jno
outsl
push
fprem
add
mov
ss
push
cs
bound
je
popa
jo
outsl
fs
add
outsb
jae
popa
je
dec
gs
popa
addr16
js
adc
out
scas
mov
or
mov
int
pop
adc
mov
adc
jge
push
jnp
cmp
jns
add
leave
add
nop
imul
dec
sbb
mov
repnz
aas
add
test
and
xchg
sbbb
out
mov
addl
pop
in
dec
inc
test
add
xchg
scas
outsl
lods
sub
sub
lods
cmc
pop
inc
mov
sti
int3
mov
lds
mov
mov
pop
int
inc
dec
roll
mov
adc
and
mov
clc
frstor
or
mov
lea
je
pushf
movb
push
lea
jmp
add
dec
insl
popa
addr16
imul
je
outsl
jns
add
inc
jb
ja
je
je
inc
add
nop
jecxz
dec
mov
mov
popf
inc
out
jnp
sbb
aaa
lret
xchg
pop
or
ret
orb
insl
pop
arpl
dec
inc
push
rcl
add
pop
sub
xchg
test
fistpll
out
cs
add
push
insb
gs
cmp
bt
add
call
add
inc
push
js
inc
add
add
addr16
jb
popa
je
dec
gs
js
add
add
je
insb
imul
stos
mov
mov
jge
add
mov
sbb
cwtl
xor
and
imul
test
cmp
xchg
dec
cltd
push
lahf
stos
data16
aam
jmp
mov
jp
push
mov
dec
inc
inc
ret
mov
pop
pop
dec
adc
loope
pop
xchg
mov
inc
ljmp
shrb
call
test
sbbl
stos
imul
adc
mov
or
or
add
jo
adc
lcall
lea
call
push
push
lea
jns
jae
cmp
stc
push
xor
jmp
bt
movl
test
movb
call
cmc
add
bt
stc
pusha
movb
cmp
pusha
push
movl
lea
jb
push
pushf
clc
cmc
cmp
push
lea
jae
xor
pushf
xadd
cmc
mov
shr
add
ror
mov
ror
pusha
mov
cmp
xor
push
pushf
test
stc
repnz
call
push
call
lods
addb
inc
imul
add
inc
insb
outsl
jae
inc
insb
imul
add
inc
push
xchg
push
push
jle
sbb
inc
in
xlat
jbe
xchg
mov
ja
out
out
mov
fldcw
dec
push
in
dec
push
ljmp
lret
push
push
sub
wrmsr
repz
pusha
cmp
lret
jmp
cmpsl
mov
or
xlat
ja
mov
movhps
or
mov
xorb
xor
push
or
lret
in
mov
scas
jmp
imul
imul
pushf
sub
loopne
imulb
call
pop
inc
cmp
dec
and
pop
aaa
inc
outsb
rorl
mov
iret
std
xor
rolb
xor
negb
pusha
adc
xor
jbe
lret
rorl
dec
sub
mov
movsb
fadd
fadd
fs
mov
hlt
icebp
xor
mov
jae
add
and
faddl
or
and
and
mov
add
inc
cs
cmp
rorl
pushf
mov
cmp
je
sbb
jp
bound
jp
fdivl
bound
xor
dec
pop
lea
out
insl
mov
mov
push
add
imul
inc
lds
arpl
inc
outsl
fsubrl
outsb
cmpsb
leave
inc
mov
fs
and
pop
and
in
add
add
sbb
aad
mov
icebp
pop
pop
cmp
add
adc
xchg
mov
out
in
roll
dec
xchg
gs
sub
push
add
out
mov
mov
sbb
add
add
test
pop
sbb
and
add
arpl
popa
fcoml
mov
xchg
mov
pop
pop
int
sahf
inc
mov
out
add
mov
mov
enter
arpl
cmpsl
jge
jo
jl
mov
add
gs
inc
aas
bound
in
shlb
repnz
mov
cmpsb
or
push
mov
movsl
and
in
mov
mov
ja
dec
cmpsb
pop
in
push
lods
mov
cmp
adc
jno
out
mov
push
popa
mov
mov
pop
xchg
mov
inc
dec
mov
mov
and
and
xchg
les
cld
adc
mov
shl
cmp
ret
rol
jns
mov
and
and
lods
ds
and
xchg
mov
sar
cmp
mov
in
adc
jle
jae
leave
cmpsb
je
frstor
clc
mov
aaa
pop
mov
loop
jae
out
aad
lds
inc
add
frstor
cwtl
dec
cmp
fs
outsl
adc
mov
bound
movsb
adc
sbb
cmp
or
ljmp
cmp
inc
aam
mov
xor
out
mov
jg
lds
xchg
insl
push
add
ljmp
mov
ds
jmp
addr16
test
adc
aam
and
mov
mov
das
add
xchg
mov
jge
cli
int3
ja
mov
loop
in
add
add
mov
add
xchg
mov
jb
pop
in
les
mov
jecxz
mov
mov
mov
mov
add
repz
jns
mov
pop
xor
test
add
rorl
cmc
es
nop
sbbb
scas
test
jns
mov
clc
movsl
fbstp
sbbl
xor
out
cmp
sbbl
mov
movsb
and
cli
add
faddl
inc
xchg
pushf
mov
in
add
bound
shll
or
xchg
sub
fmuls
xor
in
mov
in
inc
popa
mov
inc
loop
add
ret
cmpsb
push
jno
fwait
ret
sahf
out
arpl
pusha
sbb
or
mov
je
xor
pusha
cs
ja
dec
inc
arpl
test
cmp
mov
imul
add
jno
fnstenvs
xor
movsb
xchg
xchg
pop
mov
and
mov
xchg
ret
repz
jae
in
orb
xor
jp
mov
mov
jecxz
adc
inc
xorb
cmpsb
add
jecxz
inc
lahf
and
aam
or
xchg
daa
aam
inc
xorb
xchg
fs
mov
bound
xor
pop
aam
ds
fsubs
in
sub
adc
cli
inc
aam
sbb
cmpsb
push
cmpsb
sbb
cmp
add
jnp
mov
mov
and
xlat
or
orb
ret
in
vpunpckhbw
mov
mov
sbb
movsl
add
fwait
xchg
imulb
xor
cmp
int
test
jno
movsb
mov
xorb
dec
les
mov
gs
mov
jb
mov
push
pop
imul
insb
int
mov
bound
les
seta
jecxz
ret
shll
pushf
add
pop
sbbl
and
add
and
orl
scas
inc
test
gs
aaa
inc
mov
aam
cmp
cmpsb
and
add
in
or
inc
and
mov
push
xor
aad
xor
pusha
jnp
lcall
aam
inc
arpl
mov
pop
add
mov
add
mov
cli
les
and
mov
or
loop
jecxz
mov
mov
xor
inc
inc
andb
add
fs
insb
faddl
clc
in
jle
fiaddl
clc
mov
andb
cmp
jl
mov
out
cmp
and
mov
inc
or
jl
inc
inc
mov
lock
ss
vpandn
jno
add
inc
andb
xor
popa
xor
and
and
cmpsb
insl
and
and
mov
mov
add
sbb
pop
inc
pop
mov
jecxz
les
and
push
xor
insl
adc
jb
push
pop
in
and
orl
and
cmp
mov
mov
adc
testl
add
mov
jno
jae
mov
mov
mov
stos
fwait
mov
and
mov
mov
movsl
xlat
dec
test
jg
loop
in
inc
fbld
ret
es
add
add
mov
mov
hlt
xor
inc
push
cli
movntps
arpl
cmp
inc
mov
mov
jecxz
sbb
cmp
cmp
add
int3
js
popl
les
mov
scas
xchg
mov
out
fisubl
mov
ret
pop
mov
out
imul
out
and
les
mov
adc
cmpsb
add
hlt
cmp
mov
jle
mov
ret
dec
arpl
sub
jp
cmp
cmp
jg
add
cmpl
mov
mov
in
mov
das
mov
sar
and
scas
sbb
cld
inc
inc
enter
mov
and
inc
test
xchg
push
lock
mov
test
arpl
or
mov
clc
cmp
or
mov
mov
cli
mov
jno
aas
repnz
pop
stos
mov
jo
mov
mov
jg
fadd
lods
cmp
fs
add
pushf
mov
pushf
sub
je
mov
ret
int
mov
and
or
test
sbb
xchg
movsl
stc
in
aas
test
and
clc
mov
jecxz
movsb
xorl
xor
arpl
ret
and
movsb
add
loope
lret
in
mov
xor
or
xor
xor
repz
push
mov
rorl
mov
inc
arpl
out
repz
loop
loop
inc
xor
jecxz
mov
fiadds
cmp
mov
lret
mov
jno
ret
lret
aas
mov
jnp
push
and
mov
fwait
cmpsb
add
mov
push
mov
fwait
mov
mov
fs
roll
nop
fwait
or
mov
add
add
or
push
mov
and
push
les
or
xchg
repz
js
jp
lock
xor
or
bound
rcll
hlt
mov
mov
mov
mov
test
inc
sbb
movsl
mov
cmc
bound
in
test
inc
out
in
movsb
cmpsl
or
and
dec
adc
jo
dec
jle
out
add
cwtl
out
or
push
movsb
jne
mov
mov
mov
scas
andl
inc
fs
test
inc
in
les
in
add
in
lock
out
xchg
arpl
daa
std
aam
in
mov
movsb
negb
test
lea
dec
movsb
mov
jno
pop
and
gs
mov
push
jle
inc
clc
inc
lret
shll
cmp
add
mov
cld
mov
xchg
inc
cmpsb
roll
lret
rolb
clc
les
or
js
and
or
cmpsb
test
orb
addl
mov
fs
pop
in
mov
mov
jmp
test
and
cwtl
fs
incb
mov
xchg
movsb
in
loop
in
and
mov
ret
movsb
sub
mov
lods
and
push
add
add
outsl
mov
repnz
inc
add
mov
gs
test
aas
fs
int
xchg
popa
clc
popa
test
call
mov
inc
mov
lea
mov
stos
add
mov
mov
inc
stos
movsb
les
mov
mov
es
inc
and
rolw
dec
pop
add
mov
and
mov
or
xlat
popa
dec
in
icebp
movsb
cmp
sbb
inc
insb
xchg
jle
lock
inc
inc
mov
gs
xor
or
aas
arpl
and
inc
fwait
test
sbb
pusha
test
les
and
mov
les
fs
mov
inc
les
mov
test
jecxz
movsb
repnz
roll
mov
les
add
mov
mov
ja
ret
mov
xor
add
pushf
es
in
out
gs
inc
aas
mov
addr16
inc
cmp
lds
jecxz
xor
ret
mov
lea
test
mov
mov
popa
lock
mov
add
mov
outsl
mov
jp
dec
add
add
mov
xchg
arpl
mov
xor
stos
ret
xor
mov
sbb
jecxz
and
stos
mov
and
das
xchg
test
add
push
aam
dec
and
inc
mov
add
push
push
xchg
dec
cmpsb
je
aad
mov
mov
fs
or
inc
das
inc
test
mov
bound
push
in
mov
xchg
cmp
int3
add
movsb
inc
andb
arpl
ret
xlat
movsb
pop
mov
add
mov
aam
scas
out
mov
mov
test
lds
movsl
repnz
out
movsb
sti
arpl
fs
xchg
add
ss
fiaddl
mov
mov
out
mov
mov
fs
movsb
roll
mov
jae
ret
push
in
adc
popf
mov
jge
mov
and
mov
fsubp
jb
pop
xorb
and
popaw
adc
mov
or
add
fs
mov
movsl
cltd
and
inc
jnp
aas
jecxz
aam
inc
cmpsl
add
or
add
lea
mov
fs
xchg
push
lock
mov
inc
movsb
andb
dec
movsl
or
xchg
add
addr16
add
inc
inc
test
mov
fimull
gs
mov
hlt
sub
arpl
lret
sbb
fsubs
fmull
mov
aaa
inc
je
lods
or
mov
je
mov
or
dec
ret
out
push
movsb
xchg
bound
movsb
incl
mov
and
xor
andl
test
push
movsl
add
add
or
out
test
vmwrite
push
add
push
ret
movsl
mov
popa
ret
popa
jo
ret
fisubs
jo
lahf
jecxz
mov
aaa
mov
mov
dec
and
or
add
xchg
lret
stos
mov
mov
sub
mov
iret
pop
cmp
loope
dec
jecxz
inc
bound
ja
sub
dec
add
bound
and
and
hlt
mov
lods
adcb
pusha
outsl
movsb
shlb
ret
ret
fsubl
cli
push
clc
jl
mov
mov
add
inc
and
add
mov
mov
in
es
sub
arpl
pop
cmp
mov
pop
and
adc
jae
dec
in
add
xor
adc
repz
mov
and
push
inc
in
fiaddl
jne
mov
mov
add
movsl
loop
xor
js
sti
ret
jg
in
mov
inc
ret
inc
and
mov
mov
mov
dec
or
jnp
ja
mov
or
push
mov
insl
cmpsb
dec
fmul
and
xchg
mov
or
cmpsl
loope
mov
add
int
inc
mov
dec
les
rorb
in
mov
mov
dec
push
jle
mov
vpunpcklbw
sub
xchg
fs
pusha
mull
arpl
mov
sti
sar
jb
ret
jp
cmp
stc
bound
daa
mov
cmp
and
hlt
jg
or
dec
adc
in
daa
ljmp
add
ret
pop
mov
std
sti
lods
jne
lret
pop
xor
jbe
mov
insl
mov
mov
cli
mov
or
cmp
or
mov
mov
inc
mov
fldcw
loop
and
add
mov
or
fdivrl
mov
in
ret
mov
xor
aad
cmpsl
jno
mov
mov
add
lcall
pusha
and
mov
mov
aad
mov
mov
iret
movsb
push
xor
mov
xchg
mov
fsubr
pinsrw
pushf
ret
dec
and
mov
push
scas
jno
daa
xor
pop
jl
mov
rolb
cmp
mov
les
mov
movsl
lds
jo
mov
mov
leave
or
lcall
mov
or
add
mov
or
inc
mov
cmc
call
cmpsl
repz
mov
push
rorl
xchg
xor
cmc
xor
aam
inc
or
cs
jae
nop
sub
leave
movsb
test
push
cmp
mov
xchg
adc
arpl
jmp
push
shlb
and
pusha
jae
add
out
sub
mov
aaa
mov
mov
jl
cmpsb
and
les
mov
cwtl
lock
pop
mov
stos
shl
clc
daa
adc
push
orb
xchg
inc
lock
sbb
lock
inc
loopne
bts
mov
test
fs
clc
bound
aas
cmp
scas
cmp
or
push
arpl
mov
je
stos
mov
or
shll
fs
mov
mov
mov
aas
jmp
int3
mov
adc
cli
mov
mov
mov
sar
mov
or
push
adc
repnz
inc
les
xor
mov
ss
lds
xor
push
in
sub
mov
or
mov
lret
lds
outsl
mov
push
pushf
dec
mov
inc
jne
jecxz
aas
mov
mov
scas
mov
and
push
ds
stos
xor
dec
xor
pop
addb
adc
inc
mov
xor
cmp
ja
rol
or
lcall
icebp
out
pusha
stos
xor
mov
mov
rorb
mov
jp
scas
sub
psubw
sahf
fcomps
sub
add
add
inc
pop
test
jecxz
inc
or
or
xlat
es
into
mov
and
shll
scas
bound
adc
mov
mov
mov
and
les
adc
cmp
mov
mov
dec
cmp
shll
in
push
andb
rolb
xor
or
add
mov
scas
movsb
add
mov
imul
mov
ja
mov
dec
push
stos
add
push
sub
sbbl
movsb
sub
imulb
or
orl
daa
dec
cmp
mov
jne
je
adc
ret
xorb
or
mov
xor
les
adc
mov
mov
sbb
ret
jge
andl
sbbb
addl
push
push
bound
pusha
shrb
movsb
jg
repnz
mov
insb
xor
movsb
in
or
movsb
lahf
add
add
mov
jecxz
loope
in
or
inc
add
push
dec
stos
aaa
mov
add
gs
pop
add
movsl
adcb
mov
add
mov
mov
out
test
shlb
or
add
or
mov
inc
mov
int3
pusha
shlb
mov
add
addl
lret
add
xchg
xor
mov
mov
inc
mov
in
pusha
movsb
lods
lock
adc
in
shl
andl
cmpb
mov
pushf
rcll
sbb
movsb
fnsave
xor
scas
arpl
add
fisttpl
repnz
mov
mov
cli
mov
in
push
adc
ret
in
xchg
ja
andb
adc
mov
stos
arpl
shll
add
lds
add
out
push
movsb
push
xorb
ret
adcb
push
ffree
add
sub
prefetchw
je
adc
or
pcmpgtw
pop
bound
adcl
push
mov
enter
or
test
mov
shrb
aas
movsb
sub
movsb
push
fnstsw
cmp
dec
jl
xor
mov
jmp
mov
mov
mov
xchg
jge
orb
decb
mov
sbb
clc
into
add
loop
stc
les
in
jb
arpl
repnz
movsb
lea
and
cld
mov
enter
xor
movsb
js
iret
movsb
jnp
adc
and
repz
add
orb
loopne
jo
out
mov
orb
adc
fiaddl
repnz
mov
mov
sbb
mov
sub
test
test
inc
mov
cmpb
mov
push
jle
pop
aam
mov
pop
adc
jg
repz
lahf
test
movsb
decb
mov
sti
pop
jge
ret
lods
adc
jecxz
push
andb
adc
out
push
out
addl
dec
stos
mov
in
and
cwtl
and
mov
aam
add
mov
push
imul
mov
scas
ret
mov
add
mov
add
fisttps
or
add
push
mov
mov
lock
movsb
push
dec
add
mov
movsb
adc
mov
add
adc
adc
imul
stc
add
int3
roll
add
mov
in
mov
xchg
adc
add
mov
into
pop
loope
sbb
int3
popa
andl
and
rolb
inc
ret
mov
mov
sahf
and
outsl
mov
jmp
cmp
mov
inc
cmp
add
push
stos
cmpsb
iret
scas
xchg
roll
mov
mov
int3
add
jmp
daa
insb
xor
mov
js
mov
pop
das
mov
movsl
cmp
jmp
mov
cmpsb
mov
cmc
dec
jmp
push
stc
inc
cmpsl
arpl
mov
aaa
or
push
popf
in
mov
pmaxub
mov
push
dec
push
mov
cld
cmpl
stos
adc
cmp
bound
mov
pop
mov
les
mov
in
mov
les
bound
dec
mov
push
arpl
mov
adc
xchg
push
mov
mov
fwait
push
scas
cld
sahf
mov
mov
imul
fcmovnbe
add
jle
jle
pop
xor
vprotb
in
arpl
int
inc
adc
mov
mov
jg
push
arpl
and
mov
cmpb
sbb
inc
adc
arpl
mov
lahf
ficoml
adc
xchg
arpl
and
repz
sbb
lcall
popf
inc
arpl
je
scas
lods
cmc
paddsw
xchg
mov
mov
push
jmp
loopne
loopne
loopne
insb
or
xchg
aad
test
inc
sbb
bound
in
pop
dec
std
andb
inc
arpl
and
mov
idivl
test
arpl
push
popa
arpl
arpl
mov
andl
js
or
jae
adc
lods
dec
xor
pop
xor
ss
mov
inc
mov
push
mov
mov
aas
mov
inc
xor
xor
lea
mov
sub
xorl
mov
orb
mov
xor
mov
pop
xchg
mov
cmp
push
popa
lret
mov
inc
frstor
fadds
add
movsl
outsl
sti
arpl
add
push
in
lds
sub
stc
je
push
mov
add
std
stos
cmpsb
movsb
mov
gs
mov
stc
lret
and
stc
or
or
mov
mov
out
mov
mov
push
mov
add
mov
aaa
mov
daa
sbb
inc
add
cmpsb
notb
shlb
push
sarb
scas
xor
add
scas
aad
push
iret
or
mov
xor
add
sub
inc
mov
imull
inc
mov
jecxz
aam
xchg
sub
ja
mov
lret
xor
mov
inc
testb
out
outsl
mov
arpl
and
ret
xor
or
loopne
or
adc
inc
mov
rorb
or
dec
shl
jecxz
xchg
aaa
or
or
xor
stc
lods
popa
mov
mov
sti
imul
push
mov
imul
dec
subb
xchg
xor
mov
mov
cmp
scas
ret
sub
aaa
xor
mov
cmpl
arpl
inc
ja
sti
mov
push
enter
add
xor
or
xor
rol
lret
or
lods
jecxz
ret
daa
addl
mov
inc
jo
orb
int3
fldenv
mov
lret
ret
mov
and
mov
mov
jno
imulb
or
add
sub
mov
jbe
mov
mov
push
stos
or
repnz
sub
dec
mov
call
cmpl
les
ljmp
xchg
or
jg
dec
jp
or
cmp
aam
push
push
fldt
in
aam
add
xchg
into
and
test
dec
push
push
rcl
lret
add
mov
mov
xchg
lea
aam
adc
add
popf
fsub
jmp
and
addb
xlat
xor
int
out
out
loop
orb
add
pop
aaa
pop
dec
jnp
daa
mov
xor
mov
xchg
push
mov
fimull
mov
mov
jb
in
and
push
stos
shrb
daa
in
push
imul
pop
push
mov
xlat
mov
out
rorl
les
jns
ljmp
xor
inc
fstpt
add
jmp
sarl
or
mov
aaa
or
xchg
dec
xchg
mov
ret
push
loop
mov
in
sub
sbb
add
add
xor
mov
or
clc
mov
add
xchg
add
loop
push
aaa
lret
add
mov
mov
aas
stos
xchg
push
pop
addl
lods
test
jb
orl
cmp
subb
push
add
fisttps
stos
loope
insl
mov
cmp
ss
pop
cmpsl
adc
int3
arpl
loop
cmpsl
mov
jae
mov
sub
jne
add
adc
ljmp
adc
vaddpd
jb
or
mov
inc
int
dec
push
and
repnz
mov
and
xor
mov
sub
or
imul
xor
or
sub
adc
dec
or
lahf
xor
sti
stos
aam
flds
add
data16
add
scas
aaa
xor
cmp
adc
sub
sub
xchg
dec
cmp
xor
scas
and
ret
out
xor
xchg
mov
and
dec
sub
mov
mov
mov
hlt
aaa
xchg
or
into
addr16
and
out
popa
mov
mov
jmp
rorb
addr16
stos
add
imul
xchg
adc
xlat
mov
pop
add
adc
sub
mov
mov
xor
shll
ret
sub
sbb
aas
mov
cmp
mov
mov
test
mov
or
test
and
stos
ret
xor
cmp
sub
add
lret
xchg
and
cmc
outsl
repnz
mov
dec
mov
mov
push
xor
in
and
mov
xor
test
jecxz
bound
push
add
popa
repnz
mov
dec
add
lcall
push
mov
jb
ud2
lret
es
or
mov
mov
jno
jbe
int3
lret
les
push
sbbb
or
int3
int
stos
outsb
or
cmp
cmpsl
mov
dec
fcompl
mov
aaa
ljmp
sub
or
sub
xlat
aas
xorb
mov
push
aas
loop
cld
repnz
pop
repz
outsb
aas
lea
push
pand
lods
out
jmp
lret
sub
adc
push
mov
aas
dec
stc
xor
mov
jno
xor
lret
mov
fnstsw
mov
fldl
mov
push
fisubrl
daa
movsb
mov
test
xchg
rorl
cmc
loop
jne
ss
dec
add
mov
cmp
pop
mov
push
mov
cmp
ret
dec
mov
xor
adc
scas
out
cmpsb
mov
sarb
cmpsb
out
mov
or
cmpsb
leave
adc
movsb
add
faddl
add
ret
ljmp
xchg
adc
push
cmp
mov
sarl
and
jge
xor
es
xor
cmp
repz
mov
sub
push
mov
xchg
test
add
xchg
and
outsl
mov
ss
movsb
cmp
and
xchg
or
lret
push
jecxz
push
mov
lds
pop
pop
and
sti
dec
ds
mov
cmp
inc
popa
stos
dec
lea
mov
jns
lea
add
adc
mov
hlt
mov
inc
int
jb
addl
cmp
or
jo
mov
inc
mov
aas
mov
or
inc
and
orl
push
add
fwait
push
xchg
inc
mov
lea
mov
les
rcl
fcoml
aaa
sti
sub
ss
pop
or
jae
xor
dec
sub
orb
dec
dec
mov
mov
cmp
mov
fs
enter
in
mov
mov
fwait
cmp
rorl
push
dec
and
fs
leave
jmp
cmpsb
insl
mov
ss
adc
data16
cs
push
or
out
jmp
or
push
add
lret
rorl
aaa
mov
out
cmp
mov
add
cmp
xlat
mov
mov
movb
orb
add
lret
mov
cmpsl
mov
mov
sti
jle
cmp
iret
xor
add
mov
ss
dec
iret
pop
push
or
enter
mov
mov
or
adc
and
lret
stos
mov
mov
xchg
mov
mov
test
je
lea
movsb
call
aaa
cmp
push
push
mov
xchg
mov
ss
mov
push
lods
add
dec
std
or
push
xorl
adc
xchg
push
mov
arpl
cld
mov
add
das
stos
push
subb
pusha
or
sub
loopne
pusha
add
pop
dec
fwait
cmc
cld
dec
xchg
adc
iret
pop
outsl
scas
mov
aas
mov
inc
add
xor
mov
aaa
addb
mov
xor
inc
rol
cmp
orb
icebp
insb
pusha
stos
mov
test
push
cmpsl
ss
stos
aad
mov
mov
add
dec
movsl
inc
xor
fs
icebp
movsb
addl
hlt
test
mov
jbe
xor
loop
int3
mov
mov
inc
enter
mov
mov
mov
mov
or
lret
mov
cmp
mov
xchg
aas
std
mov
aam
xchg
leave
ret
aas
mov
js
pop
call
ss
pop
xor
mov
mov
int
pop
mov
push
inc
or
mov
xor
mov
jmp
xlat
pop
or
or
rorb
push
stos
unpckhps
inc
ret
in
add
mov
lret
xor
add
add
dec
push
and
imul
test
shrl
mov
lock
enter
jle
hlt
or
mov
ds
dec
jecxz
call
flds
pusha
pop
fwait
mov
xchg
aas
enter
scas
or
int
outsl
push
scas
movsb
dec
orl
dec
mov
aam
mov
push
aas
mov
or
xor
ret
xorl
rclb
mov
punpckhdq
fmull
cmp
icebp
pop
jl
mov
push
or
lds
cmpsl
jnp
xchg
shll
inc
add
dec
in
stos
jns
std
push
mov
pusha
pop
mov
shrl
jae
mov
out
ljmp
roll
mov
dec
pusha
push
test
ret
into
adc
and
dec
movsb
incb
cmp
outsl
std
mov
jnp
ret
aas
movsb
inc
pop
mov
jle
stos
mov
into
dec
mov
cmp
cmpb
lock
loop
mov
inc
cld
cmp
ret
mov
inc
push
cld
mov
movsl
xlat
out
push
gs
inc
ja
mov
ret
mov
xlat
mov
and
out
or
or
stc
fidivrs
or
mov
cmpl
icebp
mov
mov
ljmp
in
push
popa
je
mov
insb
pop
inc
dec
iret
mov
inc
xchg
stos
or
adc
inc
stos
testl
ret
repz
dec
cld
daa
mov
inc
mov
add
rolb
add
mov
ss
push
cmp
ja
jno
andl
aas
or
adc
xorb
and
das
mov
ret
jne
or
or
stc
fbld
and
into
inc
inc
xor
or
stc
or
repnz
dec
int3
shrl
pop
arpl
icebp
jb
mov
mov
xor
mov
test
gs
aas
jne
cmp
mov
gs
scas
or
push
or
lds
or
incb
sbbb
inc
add
xor
in
dec
and
ss
or
dec
imul
jl
test
js
jo
push
sub
xchg
cwtd
sub
hlt
imul
push
pop
pop
push
pushf
inc
xchg
sub
dec
mov
inc
fnstcw
jmp
pop
jge
int3
jno
and
ds
repnz
out
mov
je
inc
sub
push
fisubrs
pop
mov
gs
mov
push
mov
pushf
inc
lea
jmp
leave
sbb
xchg
stc
cmp
fmuls
pop
jge
dec
shl
cmp
adc
pop
dec
clc
adc
daa
fldcw
xchg
fcomi
lret
cmp
push
or
pop
jne
stos
out
add
jbe
dec
into
dec
pop
rcrb
js
aaa
and
jne
mov
sub
mov
lods
or
xchg
mov
rol
or
sbb
inc
push
xchg
in
sarb
loop
pop
lea
jne
and
test
bswap
mov
lea
sub
shl
rol
rol
sbb
mov
stc
jmp
pushl
lea
jae
mov
xchg
mov
inc
call
push
call
and
rcll
roll
ljmp
lods
stos
shll
mov
sbb
add
ret
mov
add
adc
pminsw
insl
add
stos
pop
and
and
jg
gs
pusha
add
ret
daa
jo
sub
mov
push
stos
inc
daa
repz
jns
pop
or
cmp
addr16
movsl
xor
loopne
or
test
mov
clc
in
insl
sub
sub
jmp
icebp
mov
test
cli
fdivp
push
aad
pop
inc
das
lods
dec
call
ljmp
cmp
shlb
add
pushf
or
cmp
pop
sub
dec
movsl
js
les
mov
mov
jle
and
and
push
sbb
jae
adcl
mov
cwtl
or
clc
add
cmp
pusha
mov
ljmp
push
adc
add
dec
jae
arpl
imul
je
jns
je
insl
push
popa
insb
gs
gs
outsb
je
imul
gs
gs
popa
addr16
outsl
jae
add
inc
insb
outsl
jae
dec
popa
outsb
fs
add
xchg
shlb
jnp
outsl
dec
int
mov
mov
cmp
mov
mov
pushf
int
daa
mov
test
popl
jae
mov
jbe
mov
int3
mov
iret
mov
xorb
orb
dec
orb
movsb
pop
shlb
aam
mov
cld
mov
mov
sub
in
out
adcl
lea
iret
outsb
xor
loop
and
les
xchg
int3
mov
mov
shlb
mov
adc
cmp
dec
popl
pop
andb
add
inc
mov
and
movsl
arpl
dec
inc
movsb
cmpsb
mov
jno
ret
xchg
inc
inc
sub
mov
xor
mov
in
jecxz
test
jnp
pop
cwtl
addl
pop
out
sub
stc
addb
popf
jge
mov
jp
aam
jnp
mov
cmp
mov
into
addb
mov
cld
pop
jnp
clc
mov
push
mov
mov
sti
inc
jl
pop
cmp
fdivrp
jp
push
jns
js
pop
jnp
das
push
mov
cmpb
add
sti
fiadds
pushf
xchg
mov
mov
call
xlat
push
jbe
or
xorb
push
mov
push
idiv
push
aaa
push
stc
inc
pop
dec
xlat
ss
cmpb
nop
std
add
xchg
xchg
sbb
and
jne
add
aaa
out
sar
daa
mov
jp
in
orb
xor
jne
fwait
lds
and
adc
mov
cmc
test
popf
cmp
mov
and
mov
add
mov
rorl
xorl
push
dec
or
fnstcw
inc
push
daa
xchg
xchg
data16
mov
sti
lds
dec
imul
scas
xchg
test
int
int3
add
add
cmpl
sub
mov
pop
cmp
mov
cmpl
and
add
int
dec
xchg
add
cmpsl
adc
jne
xchg
pop
xorb
lcall
shlb
add
cmp
and
cmp
movsb
cmp
fidivrl
in
mov
push
mov
out
mov
pop
mov
lret
push
or
and
gs
add
add
mov
sbbl
outsb
or
inc
pop
mov
or
test
add
xchg
ss
or
addl
add
movsb
add
jmp
movsl
jl
push
out
stos
dec
or
add
pop
jecxz
clc
inc
adc
xchg
sub
ss
or
out
add
mov
xor
add
or
add
lds
or
mov
roll
mov
xchg
lret
cmp
dec
mov
rorl
das
inc
adc
mov
aaa
stos
ljmp
push
repnz
inc
xchg
outsb
xor
scas
aad
xor
cmp
jle
mov
cmp
and
or
xchg
test
scas
xchg
push
lahf
adc
pop
adc
mov
mov
or
lds
adc
sbb
jbe
cs
out
imul
mov
mov
js
clc
inc
pop
mov
into
aaa
jne
fildl
pop
mov
add
mov
in
or
add
les
out
addl
bound
sub
orl
adcl
andnps
imul
inc
push
iret
mov
mov
addl
add
inc
or
cmpsl
and
adc
popl
arpl
add
out
mov
xor
movsl
xchg
xchg
cwtl
xchg
sbb
cmc
and
and
cs
and
pop
jmp
xor
les
rol
stc
xor
loope
inc
or
cmp
add
mov
out
and
idiv
add
insb
add
inc
sbb
or
daa
loope
and
add
jmp
xlat
inc
shrb
mov
sti
les
jae
pop
push
mov
add
les
cli
nop
test
mov
lret
mov
add
jg
sub
mov
mov
sub
xchg
cmp
add
cmpl
lea
or
xorb
jmp
sbb
les
cmpl
out
jne
jle
ljmp
clc
testl
cwtl
and
mov
jl
or
andb
cmpsb
fcmovnb
js
inc
mov
mov
lahf
xor
movsb
sub
push
adc
imul
inc
mov
ljmpw
stos
or
notb
or
out
mov
das
in
add
gs
xchg
mov
xchg
add
mov
lds
xchg
mov
xchg
loopne
cmp
in
mov
ss
imul
int3
enter
cmpsb
mov
lret
mov
mov
xorb
mov
xor
stos
movsb
xor
ljmp
or
mov
mov
ss
into
dec
jbe
add
sub
lcall
and
sub
imul
jmp
dec
jbe
ret
movsb
fwait
lds
fcomp
fbstp
pop
cmp
push
push
test
sbb
cmp
mov
mov
mov
pushf
and
xchg
popl
cmpl
test
mov
lcall
jns
or
and
aaa
mov
inc
mov
cmp
mov
fwait
add
add
outsl
gs
fwait
lea
and
jge
pop
mov
popf
mov
icebp
cmc
jns
cmp
ret
fstpl
cmpb
lods
dec
inc
orb
jl
int
cmp
mov
sbb
mov
sub
sahf
ret
mov
mov
rdpmc
mov
pop
add
mov
std
xchg
jge
pop
popf
cmp
cld
repnz
mov
mov
fmuls
movnti
scas
mov
cld
pop
out
add
add
push
ljmp
or
sbb
lcall
bound
scas
pop
iret
mov
testl
xor
dec
iret
mov
push
xchg
call
push
adc
sub
shrb
das
mov
mov
mov
int3
sub
or
stc
mov
ret
pop
jno
add
das
jg
rol
lods
orb
into
jne
push
mov
jbe
call
fdiv
dec
mov
addr16
and
xor
test
ss
jp
andl
test
pop
lcall
push
or
or
sub
ss
ret
imul
add
not
inc
pop
cld
rolb
or
mov
push
xchg
mov
movsb
cmp
jns
sahf
cmp
cmpsb
mov
mov
jge
bound
sbb
out
mov
movsl
mov
inc
hlt
mov
add
hlt
add
dec
mov
inc
ret
jnp
jge
rolb
fistpll
loope
ret
cli
xor
stos
add
frstor
jns
jo
lret
orb
dec
mov
iret
ficomps
mov
sbb
stc
cmp
scas
ret
lea
push
insl
add
lea
clc
iret
mov
les
jbe
push
pop
jmp
push
jne
inc
lods
jne
add
cmp
sub
sub
or
push
sub
inc
fs
ret
mov
outsb
pop
dec
scas
leave
sbbb
add
mov
sarl
jg
and
cld
lea
cmp
inc
mov
add
sbb
popf
insl
lods
enter
cmp
push
std
les
sbb
mov
adc
daa
daa
lds
push
outsb
and
int3
mov
mov
out
xor
movsl
mov
lret
xchg
clc
xchg
adc
test
add
mov
xor
inc
mov
cmovb
lea
lret
lea
sbb
push
ret
sub
inc
jl
pusha
sti
xchg
mov
push
mov
inc
int3
xor
enter
repz
and
pop
outsl
jmp
addb
push
ja
dec
stos
mov
dec
xorl
or
lea
cmp
nop
or
add
cli
int3
shl
xchg
daa
and
pushf
int
sub
cmp
leave
mov
add
lret
fs
iret
add
das
xchg
or
les
bound
cmp
push
dec
and
imul
pop
pop
add
or
pop
adc
dec
xor
and
push
xor
mov
mov
mov
mov
sub
push
nop
call
mov
fadd
cltd
mov
xor
movsb
add
iret
inc
jge
mov
insl
jb
mov
movsb
ja
push
add
popa
mov
inc
xor
or
mov
arpl
mull
mov
cmp
push
andb
mov
imul
test
fsubrl
jmp
test
or
and
insl
mov
mov
adc
popa
bts
jbe
subb
lods
movsl
add
pop
fstpt
mov
xor
and
repnz
jle
repz
iret
dec
clc
cmp
es
ds
xor
into
sti
insb
xor
testb
push
mov
adc
and
idivb
dec
add
dec
inc
cmpl
fildl
mov
inc
lret
subb
rdtsc
xadd
xorl
xor
xor
hlt
add
and
xorl
cmp
jge
add
xchg
push
orb
add
dec
in
sub
dec
jnp
cld
mov
jbe
push
notb
sbb
stc
or
mov
mov
mov
lods
enter
jp
mov
xor
cmp
xor
mov
shlb
rol
xchg
repz
mov
hlt
shlb
add
shll
adc
push
imul
jb
add
mov
pop
cmp
inc
rcll
and
les
sarb
add
cmovae
xor
xorl
ret
mov
or
mov
and
xor
inc
mov
xorb
ret
shl
shlb
add
cmovno
or
orl
shl
rorb
add
cmovo
or
orb
rorb
sub
cli
comiss
add
outsl
adc
ret
scas
mov
sub
cld
femms
or
subl
movsl
rorb
outsb
shll
mov
or
out
sarl
mov
or
insl
sarl
call
mov
notl
mov
notb
add
add
bound
add
les
inc
lods
dec
test
call
push
jne
ss
insl
ss
xor
and
comiss
roll
test
scas
shrb
dec
mov
mov
or
repnz
enter
cmc
test
push
andl
mov
lret
les
mov
mov
pop
les
mov
rcl
lret
inc
loope
in
pop
push
xor
pop
inc
repz
les
addl
mov
faddp
sub
mov
dec
push
sbb
int
or
push
aas
les
inc
xorb
out
lods
outsb
add
rclb
bound
insl
mov
add
mov
ret
add
cmpl
call
mov
mov
ret
popa
roll
rol
mov
add
add
xor
stos
add
cmp
mov
les
pop
mov
les
andb
pop
loopne
andb
les
aas
orl
daa
iret
mov
lds
xchg
add
pop
mov
cs
pop
or
les
sbb
mov
cs
in
into
inc
sub
inc
lods
les
mov
push
xor
cs
dec
mov
subb
mov
mov
dec
mov
mov
push
out
push
cld
or
out
les
sub
mov
les
fsubrl
sti
pop
ret
and
insl
les
and
add
inc
repz
les
les
dec
xor
push
loopne
cld
lods
mov
inc
int3
pop
loopne
in
jmp
lea
inc
enter
mov
or
subl
andl
adc
mov
add
insl
imul
and
dec
stos
sub
mov
or
outsb
les
and
mov
out
loopne
ret
or
mov
dec
push
aaa
pusha
and
and
mov
pop
inc
xor
iret
inc
jnp
stos
ss
sbb
mov
ffreep
sub
shl
inc
popa
in
or
into
sub
mov
mov
xorb
les
jmp
aad
rcll
add
sub
ret
scas
push
mov
mov
les
rsqrtps
cs
add
mov
lock
aaa
out
subl
xor
jnp
cs
stos
pop
jmp
mov
mov
pop
sti
add
xorl
xchg
ds
ljmp
and
nop
les
das
and
stc
cmp
bound
mov
out
mov
orl
mulb
xchg
shlb
push
outsb
fdivs
dec
inc
mov
aad
add
xor
mov
pop
les
aaa
dec
and
mov
cmp
lock
ror
les
rolb
les
mov
mov
sbb
cmc
lret
mov
xchg
and
rol
loopne
inc
push
mov
or
out
mov
mov
les
and
insl
dec
int3
or
mov
lds
roll
mov
adc
into
into
repz
mov
pop
ret
loope
les
rcrl
xorl
ss
adc
mov
rolb
cmpb
cmp
mov
je
dec
push
out
and
out
mov
mov
inc
or
jle
in
scas
outsl
sub
dec
mov
lds
bound
divb
and
mov
out
bswap
icebp
push
mov
sub
mov
xor
inc
imul
repz
daa
adc
addl
add
addl
nop
and
les
aas
mov
or
dec
xor
pop
addb
ret
rcrb
mov
fisttps
mov
out
pop
shrb
scas
daa
outsl
or
and
xor
lahf
fisubl
fisubs
pop
std
je
insl
les
mov
pop
add
loope
xor
add
sbb
cmpl
lds
cmp
mov
sbbl
jge
outsb
or
scas
and
adc
dec
mov
dec
insl
mov
into
mov
sub
and
andb
out
add
loopne
daa
sub
add
les
mov
pop
mov
add
jg
imul
outsb
int3
scas
mov
pop
call
rol
mov
and
mov
sti
fiadds
cmp
pop
lds
orb
mov
mov
sub
cmp
out
lret
mov
les
sbb
inc
mov
les
dec
les
cli
mov
fisubrs
lds
popf
xorb
scas
and
stc
jge
dec
outsl
decb
dec
xor
jbe
xor
les
push
in
sbb
les
or
mov
incb
mov
shlb
aad
add
daa
iret
mov
aaa
into
arpl
mov
sub
aam
test
cmpl
and
mov
out
in
add
and
shl
rcrl
ffreep
lds
fmuls
clc
and
daa
loopne
mov
pop
xorb
les
or
dec
push
inc
and
push
cmpsl
orl
out
pop
xchg
mov
mov
lods
inc
mov
jmp
orl
bswap
lods
into
add
andl
imul
inc
loopne
xchg
shlb
mov
mov
or
les
adc
into
into
sub
lret
mov
pop
ret
inc
loope
movsl
xor
orb
push
in
push
loopne
mov
test
mov
aaa
push
xor
push
mov
mov
and
shrb
jae
mov
or
mov
inc
mov
pop
shl
loopne
lcall
movsb
jne
pop
les
aam
clc
in
pusha
lret
les
or
les
loope
lea
les
mov
aam
xchg
mov
mov
loopne
dec
add
push
and
int3
mov
int3
aam
add
lods
les
add
nop
loop
push
mov
mov
out
and
and
inc
test
dec
mov
pop
or
add
and
repz
mov
or
les
mov
mov
aam
add
lahf
loopne
fchs
jecxz
and
inc
push
into
add
inc
out
les
stos
inc
scas
mov
outsl
and
shlb
dec
and
aam
sti
and
sub
mov
les
dec
jg
iret
lret
les
aam
inc
orb
and
into
adc
loop
mov
aam
push
mov
insl
out
xor
dec
insl
loopne
or
pusha
and
aam
popf
add
dec
in
outsb
add
and
aaa
shl
mov
pop
les
adcl
mov
lds
sub
adc
insl
pminub
or
lods
lret
add
les
and
les
shr
aam
sbb
add
add
and
pinsrw
ror
loopne
ret
mov
orl
into
int3
lods
cmp
out
in
subb
mov
andl
les
sub
jle
or
jb,pn
into
sub
add
xor
movsb
aam
insl
bound
mov
push
and
and
add
push
in
mov
outsb
add
sub
mov
mov
cs
add
or
xor
mov
xor
loop
loopne
dec
mov
cmp
or
insb
bound
test
and
add
inc
add
or
pop
orb
and
loope
mov
data16
scas
and
jp
xorb
xor
addl
test
aam
insl
ret
jae
xor
outsb
pushf
cld
out
call
xor
gs
ds
cmpsb
ljmp
jae
je
push
jae
rorl
mov
cmpsl
ret
outsb
popl
aaa
and
and
dec
cmpl
mov
mov
sub
mov
inc
mov
iret
and
shl
outsb
mov
push
loop
or
scas
ret
sub
mov
repnz
pusha
jl
iret
add
stos
into
addr16
loop
mov
cltd
subb
or
insl
sbb
cmp
mov
mov
into
inc
add
jecxz,pt
and
out
out
daa
ja
mov
movd
mov
inc
outsl
sbb
bound
and
xor
nop
mov
lea
in
mov
mov
mov
cmp
lods
cmp
loope,pt
lea
movsl
and
in
mov
mov
es
les
arpl
xor
scas
lock
jno
test
popf
mov
mov
or
inc
scas
leave
jbe
test
outsl
add
lret
dec
ljmp
ret
outsb
cmp
pushf
mov
shrl
repnz
add
lcall
test
jl
subb
gs
jmp
lods
xor
fldenv
jle
jno
and
andl
cmp
mov
mov
inc
iret
inc
loope
ret
in
clc
add
pop
outsl
mov
and
mov
stos
js
sub
andl
dec
decb
mov
dec
mov
mov
add
lds
rol
jg
arpl
fcomip
jmp
andb
shl
mov
jbe
bound
sarl
leave
mov
mov
loope
jae
repnz
and
and
mov
mov
repnz
stos
scas
ja
inc
aam
loope
rolb
addb
xor
cmpsl
sub
lods
xor
mov
clc
dec
cmpsl
mov
cs
mov
add
sub
mov
cld
bnd
xor
cmc
mov
ret
add
ret
outsl
mov
out
cli
cmpsl
and
das
pushf
leave
sbb
fldt
xor
xchg
ds
add
cmpsl
dec
movsb
add
mov
cmp
add
int3
mov
or
inc
jg
mov
enter
divl
cmp
mov
mov
inc
addb
mov
stc
mov
push
xor
or
scas
cmpsb
into
cli
lahf
mov
cmp
add
mov
cmp
mov
aam
mov
mov
xorl
aam
out
cmp
jge
rorl
js
mov
add
and
enter
stos
test
and
insl
out
clc
mov
rol
fcmovnbe
in
addr16
xor
andl
mov
push
add
ret
in
cmpl
mov
mov
mov
cmp
ret
cli
xor
dec
mov
lret
subl
inc
lds
andl
and
push
adc
out
movb
iret
cmpb
dec
cmpsb
ret
loop
dec
jo
xor
mov
hlt
ret
out
lods
add
pop
cmp
outsb
scas
mov
pop
movsb
xor
int3
std
and
stc
adc
xlat
add
ret
les
cmpsl
and
test
les
into
pushf
out
cmp
js
pusha
loop
ret
cmpsl
xor
aam
popl
mov
mov
loopne
or
xor
xchg
aam
or
and
jmp
mov
andl
xorl
aam
and
dec
cmp
mov
out
mov
jne
lar
iret
icebp
dec
add
ss
aaa
mov
push
leave
test
xor
or
cmp
cld
daa
mov
and
sub
and
out
mov
inc
movsb
iret
adc
insl
and
add
mov
outsl
fmuls
aam
repnz
cld
inc
clc
inc
inc
cmpsb
bound
xor
sub
cmpsb
sysenter
mov
mov
in
fs
mov
push
cmpl
aam
xorb
je
subb
jle
aaa
and
or
add
ret
repnz
stos
std
adcl
cmp
and
shrl
pop
jge
and
sub
add
jmp
loope
xchg
into
jp
hlt
movsl
movsl
cli
lret
dec
into
test
cmpb
faddp
mov
add
mov
jno
or
idivl
dec
push
mov
int3
pop
lock
adc
lret
mov
lock
hlt
jae
and
subl
mov
dec
stc
ret
jne
add
mov
add
clc
in
fwait
sarl
dec
inc
mov
mov
mov
sub
mov
or
rol
orb
mov
cli
mov
mov
jno
lock
jo
xor
mov
mov
or
xor
arpl
adc
movsl
lret
ss
mov
insb
cmc
cltd
mov
inc
cmp
inc
scas
ret
mov
dec
mov
daa
shll
movsl
dec
lock
jge
dec
sub
mov
into
mov
lods
les
or
lcall
mov
daa
bound
and
xchg
cs
sub
mov
add
repz
icebp
jge
out
xor
icebp
rorb
adc
mov
iret
dec
xor
and
add
out
stos
mov
mov
push
mov
adcl
cmpb
outsl
out
mov
xor
into
leave
xlat
or
mov
mov
mov
cmp
stc
ret
mov
jg
testb
dec
add
mov
mov
or
dec
loop
loope
mov
add
jae
subb
loop
popa
jp
jno
inc
push
adc
sbb
cld
cmpb
ljmp
jg
aam
jmp
loop
ret
or
psrld
iret
xor
hlt
inc
xchg
outsb
jo
lret
mov
repnz
test
dec
xchg
cli
rol
icebp
adc
jnp
mov
jno
mov
icebp
in
in
mov
xor
add
inc
xor
cmp
sti
push
mov
repz
jno
add
and
mov
cmp
mov
xor
sub
and
mov
ret
xor
cs
inc
outsl
icebp
dec
scas
hlt
mov
jle
xchg
aam
mov
mov
fimuls
add
out
jle
xor
xor
pop
cli
mov
mov
pusha
add
dec
sub
jecxz
jecxz
lret
sti
out
pop
add
inc
mov
imulb
jno
mov
cld
out
int3
inc
enter
jecxz
mov
xor
scas
cli
dec
jne
scas
into
out
add
and
xor
add
jge
bound
xor
mov
in
bound
lods
or
xchg
aas
ret
lret
cmp
jno
imul
sub
shlb
sub
leave
movsb
and
jns
into
and
add
mov
xor
jae
mov
popa
cmp
mov
cmpl
add
mov
iret
mov
shlb
mov
rorb
enter
mull
ret
in
cmc
cld
movaps
cmpsl
lcall
pop
inc
and
cmc
fisttpl
inc
or
mov
add
mov
stc
or
xor
xor
push
push
mov
into
daa
add
sub
aas
mov
into
dec
dec
into
mov
mov
xor
pusha
in
pop
cmpsb
ds
lcall
fnsave
out
mov
dec
shll
jmp
xor
ret
mov
mov
mov
dec
cli
inc
movsl
loop
mov
dec
add
shrl
mov
orb
add
mov
and
and
mov
je
adc
mov
lret
outsl
repz
ret
jbe
movsl
icebp
dec
aam
popa
mov
stos
mov
add
or
cmp
xor
scas
lock
or
outsl
shl
sarl
aas
ja
xchg
lock
popa
pusha
xor
movsl
aas
aam
mov
cmovae
mov
fidivrs
cs
jle
mov
push
loop
mov
ja
add
fbstp
jge
ds
out
mov
xor
addl
aam
cld
jg
pop
push
mov
addr16
pop
movswl
cmpsb
hlt
mov
movsl
inc
mov
loope
sbbl
fwait
decb
or
bound
aaa
jge
mov
and
push
div
lock
jb
mov
or
mov
sbb
fwait
dec
jbe
mov
and
mov
lock
daa
addl
movsb
mov
sarb
fildl
inc
scas
jp
or
scas
or
cld
dec
inc
sub
mov
aas
mov
inc
add
into
mov
stos
add
ss
lods
sub
sbb
pop
xor
mov
test
loopne
push
popl
sub
lret
or
mov
roll
mov
ret
mov
aas
inc
sbb
clc
jg
stc
out
cmp
lret
into
jle
inc
sbb
cli
paddw
js
xlat
jmp
mov
loopne
mov
mov
xor
data16
sarb
cs
movsl
mov
aam
bnd
mul
into
testl
sarb
cmp
mov
sbbl
jmp
out
orl
mov
dec
xor
loop
mov
sti
mov
mov
sarl
and
cmp
push
xor
scas
pop
inc
iret
roll
enter
sub
or
mov
cmp
add
mov
ds
sub
clc
mov
mov
and
sub
mov
or
scas
inc
push
push
xor
sbb
div
xchg
push
orl
testb
scas
jae
gs
pop
mov
jo
inc
push
int3
mov
mov
sub
hlt
mov
dec
scas
jmp
ret
inc
cmp
inc
bound
dec
jge
rorl
jecxz
in
lea
pop
push
adc
push
mov
aas
cmp
out
mov
fnstsw
sti
mov
in
dec
stos
mov
mov
out
cmc
push
mov
mov
fwait
mov
fmuls
fisttpll
jmp
and
es
iret
add
jbe
xor
mov
ss
mov
lea
add
cmc
and
sub
icebp
dec
leave
mov
jg
std
xchg
ret
sti
mov
shlb
add
pusha
cmpsb
loop
mov
icebp
push
and
jno
mov
jb
mov
aaa
mov
repnz
sbb
inc
loopne
xor
mov
divl
mov
flds
mov
xor
jecxz
mov
add
jnp
ja
mov
hlt
mov
cmp
mov
inc
mov
xor
mov
out
mov
dec
mov
or
jae
cmpb
inc
mov
shl
dec
cmp
scas
fcoml
mov
push
and
lret
shll
jno
xor
xor
filds
ret
loopne
jns
mov
cmp
and
mov
mov
gs
inc
mov
movsb
add
in
xor
loope
ret
inc
pop
mov
push
movsb
push
and
pushf
dec
and
movsb
mov
or
stos
add
mov
jge
lods
or
pop
fwait
mov
repnz
dec
fs
lret
mov
les
clc
jg
rep
mov
sbb
mov
fwait
lea
ret
roll
push
xor
xor
dec
es
mov
data16
retw
dec
mov
loop
dec
ret
jecxz
mov
into
lret
jle
lret
and
and
subb
inc
iret
sub
fcomip
jae
loopne
mov
shlb
or
js
shl
lods
int
loop
imull
lea
mov
addb
inc
cmp
push
or
cmp
push
ja
je
aas
xor
bound
roll
mov
orb
inc
dec
xor
or
ret
stos
jle
xor
lock
fs
cmp
and
je
dec
jecxz
or
aam
jb
fadds
add
cmp
push
int3
mov
aaa
das
mov
xchg
sub
jg
hlt
cmp
jbe
cld
scas
mov
cmp
mov
inc
pop
mov
cmp
cmp
test
mov
push
enter
xchg
cmp
icebp
orl
scas
jl
ss
and
and
mov
imul
dec
cmp
xor
loop
and
and
cmc
insl
pop
mov
aas
xor
das
ret
andb
ret
cmp
and
orl
mov
pop
into
mov
scas
mov
dec
lods
cmpsb
jns
enter
mov
js
adc
mov
mov
add
push
mov
cmp
mov
loop
xor
test
and
mov
punpcklwd
add
cmp
sbbl
movsl
dec
mov
repz
xor
mov
mov
sub
arpl
rorb
test
xor
icebp
ss
sti
fisttps
or
mov
dec
aas
shll
mov
mov
or
cmpsl
jmp
and
jb
das
lret
cmovno
dec
sub
mov
repnz
out
out
xorb
add
leave
fs
int3
cmp
mov
inc
mov
inc
icebp
cld
cmp
jl
jge
das
adc
and
addb
adc
lret
pop
idivl
xor
sbb
lret
aas
stos
jae
andl
mov
jg
mov
jecxz
cmp
xor
pushf
dec
and
mov
push
push
ss
xor
add
lret
ret
and
mov
jg
testl
cmp
lock
lods
stos
mov
jmp
iret
outsb
mov
js
dec
loop
or
cmp
cld
stc
dec
les
pop
mov
mov
cld
int
mov
cmp
movsl
or
stos
and
pop
or
mov
fcomps
das
cmp
xor
xchg
clc
dec
mov
cmp
enter
fimuls
xor
icebp
shlb
add
pop
cmp
decl
or
aam
and
inc
fwait
gs
dec
stos
add
notb
data16
stc
mov
shll
dec
push
mov
sti
ds
add
xchg
jns
jmp
push
or
enter
cld
mov
or
cmp
dec
mov
add
xor
out
inc
xor
dec
push
ds
jne
mov
outsb
stc
aam
mov
mov
je
xor
enter
and
das
aaa
inc
cmp
jb
lret
das
icebp
xor
sub
push
cltd
aam
cmp
pop
scas
inc
roll
mov
cmp
xchg
dec
mov
mov
out
cmpsl
and
sub
dec
jge
icebp
inc
sub
std
pusha
and
leave
jge
pop
mov
mov
loop
push
add
out
mov
jno
or
icebp
push
mov
mov
iret
jg
add
cmp
cmpsl
repnz
aas
aas
mov
dec
ljmp
movsl
or
int3
mov
push
push
cmp
mov
or
mov
std
inc
fsubrs
into
add
lock
cmp
outsb
aas
adc
fdivr
and
mov
or
les
rol
mov
std
in
aas
aam
outsb
loopne
shll
mov
jge
mov
loopne
add
mov
cmpsl
xlat
cmp
lret
jae
orl
repz
xor
xor
fsubs
mov
jns
mov
or
dec
scas
out
testl
addr16
or
mov
cmp
cli
add
jo
xor
mov
mov
mov
cs
dec
sti
or
dec
mov
xor
mov
xor
or
push
data16
jp
mov
jecxz
mov
and
jle
xchg
dec
inc
pop
add
inc
cltd
and
and
and
or
pop
jmp
sbbl
das
orb
xor
inc
dec
mov
or
mov
pusha
mov
and
dec
inc
in
mov
add
lds
pop
mov
sbb
popa
add
and
and
das
and
lcall
cs
ret
sarb
fildll
loop
push
inc
std
loope
push
and
mov
mov
das
loopne
filds
aas
loope
subl
lret
fsubs
stos
mov
sbb
push
clc
std
lods
inc
and
insl
popa
sub
fdiv
pop
and
test
add
push
pushf
mov
scas
std
popa
lcall
rol
mov
dec
mov
add
xchg
dec
leave
stos
fdivs
repz
or
insl
and
mov
cmc
inc
incl
sarl
xchg
add
and
and
add
ja
loopne
leave
and
subb
cmc
add
addb
into
sub
dec
das
movsl
xor
and
fs
xor
mov
inc
and
into
sahf
and
or
scas
inc
dec
dec
and
mov
sub
jno
mov
push
orl
or
add
mov
les
add
dec
lock
loope
ret
ds
add
cs
or
sbb
movb
sarb
mov
js
repz
pusha
or
or
cmpl
hlt
inc
add
repz
or
pop
jl
add
or
and
and
andb
mov
jns
divl
mov
cmp
mov
inc
push
and
jns
jno
push
xor
inc
push
mov
shl
repz
addb
roll
sub
sbbb
mov
testl
sarb
mov
loopne
addb
pop
mov
xchg
roll
sub
std
push
addl
and
inc
sub
adc
mulb
inc
xchg
mov
scas
addl
jne
mov
add
pop
mov
mov
sub
or
dec
mov
aas
cmp
inc
test
mov
mov
pop
sub
add
lret
push
mov
out
in
push
cmp
outsl
cmp
push
cwtl
incl
lret
movsl
in
ret
loopne
jns
addb
arpl
mov
outsl
shll
ds
inc
add
out
cmc
jnp
and
or
lea
and
and
add
insl
daa
and
cmp
scas
inc
in
inc
scas
add
popa
push
pop
jg
insl
xor
add
shl
test
dec
adc
sub
and
and
jnp
and
xor
jno
dec
fnstsw
in
pop
and
lods
inc
test
push
adc
ret
inc
add
or
insl
loop
xor
inc
test
xorl
incl
push
mov
movb
add
loopne
and
inc
inc
loopne
outsl
testb
mov
cli
add
add
dec
test
scas
and
sti
iret
loopne
lds
or
add
inc
loop
out
out
cmp
dec
and
je
lahf
std
cli
iret
cmp
or
hlt
mov
outsl
add
sub
add
shll
ja
sti
add
pop
add
cmp
dec
mov
pop
loopne
lods
lods
inc
out
cmp
add
aas
xor
lcall
aas
inc
mov
repz
xor
stc
push
add
loope
icebp
repz
xor
hlt
btrl
rorl
scas
mov
jno
jo
paddsw
push
mov
scas
cmpb
or
outsl
xchg
outsl
sub
add
dec
jmp
mov
cmp
aas
mulb
ljmp
lcall
dec
out
xor
aam
cltd
daa
mov
lock
cs
inc
or
aaa
xor
popl
mov
ret
dec
ret
mov
or
inc
inc
lea
xchg
and
inc
orb
mov
mov
jno
pop
test
es
xor
jo
ds
int3
and
outsb
sar
in
xor
or
sub
cmp
inc
into
cmp
mov
or
xor
ret
jno
lret
add
sbbl
cmpsb
sbb
dec
cmp
cmp
pop
mov
scas
dec
adc
popl
cmc
imul
roll
int
andb
xchg
mov
clc
push
orb
enter
add
jns
orb
add
cmp
push
add
inc
push
cmpsb
out
ror
das
icebp
jo
roll
lret
jecxz
xorb
lret
outsl
call
orl
cs
push
mov
pop
xor
mov
outsl
rorb
insl
scas
aas
push
mov
and
mov
inc
cmp
mov
loopne
and
popa
ret
or
into
repz
or
dec
ret
sub
les
add
sti
pop
jmp
mov
fildl
xor
inc
idivb
mov
push
pop
xchg
add
inc
inc
insb
loope
aad
xor
jae
push
mov
int3
mov
add
xor
sar
rorb
mov
lret
fisttps
lret
jns
sub
dec
dec
pop
xor
test
orb
jae
repz
jne
or
xchg
cld
push
dec
test
loop
xor
loope
jmp
test
push
stos
jnp
js
sbb
pop
jne
add
and
cmp
adc
imulb
adc
out
adc
xchg
mov
shl
shl
mov
shl
ret
xchg
mov
sysexit
mov
shlb
push
or
jmp
push
jg
lds
add
mov
push
movsb
fimull
test
nop
cmp
mov
lods
adc
mov
cs
fsubrl
outsb
push
cwtl
and
add
insb
sahf
inc
lcall
mov
sbb
mov
lock
xorb
cmp
aas
inc
hlt
mov
je
sbb
cmp
add
dec
pop
cmp
cmp
xor
dec
addb
mov
mov
adcl
mov
pushf
add
stos
or
mov
sbb
add
jae
fucompp
mov
dec
fidivrs
xor
ljmp
xor
cmp
mov
ljmp
mov
mov
rorl
mov
popl
jae
mov
cmpsb
cmpsl
sarl
mov
sarb
cmp
mov
mov
sarb
mov
mov
mov
mov
mov
cmp
mov
add
push
les
mov
sarb
aas
shll
ret
xor
rorb
or
add
and
mov
lea
paddsb
dec
or
shrl
mov
shrb
rorb
mov
stos
ret
ljmp
or
shrl
test
lods
jb
adc
inc
aad
jp
cmp
mov
shl
ret
xor
rclb
inc
mov
add
outsb
mov
rol
mov
shlb
add
cmp
out
shlb
daa
push
jl
out
les
push
mov
mov
xor
ljmp
scas
into
ret
sbbb
lods
loopne
lea
sub
out
shrb
cmp
add
sub
cld
jo
fsubrs
mov
xchg
mov
xchg
add
and
add
scas
lods
adc
mov
sub
jb
into
mov
pop
subb
ret
jns
jp
jnp
jl
jge
jle
jg
repz
mov
dec
lods
sub
or
ljmp
daa
push
dec
lods
sub
or
jmp
lret
shrb
testb
add
jb
add
jb
lods
nop
and
lea
cs
cmp
add
imul
and
leave
insl
and
pop
pusha
addr16
hlt
lret
rorl
jge
xor
popa
push
dec
arpl
aad
inc
mov
push
arpl
loop
fisttps
popf
cmp
or
xor
and
adc
xchg
int
mov
push
fsubs
pushf
jne
call
push
adcb
testb
mov
mov
mov
and
mov
adc
imul
aaa
in
test
jnp
sbb
stc
jbe
mov
mov
add
mov
mov
mov
mov
and
jnp
in
ret
cmpsb
xor
movsl
mov
or
roll
xor
and
shlb
ret
cmpsb
mov
mov
inc
sarl
mov
or
cmpsl
sarb
shlb
mov
daa
ret
cwtl
mov
clc
shlb
fmuls
mov
mov
sarb
daa
aad
pop
or
cmp
aas
ret
xor
stc
shlb
rcr
or
jnp
mov
cmp
rcrl
mov
or
ss
mov
rcrb
mov
cmp
rcrl
cmpb
rcr
mov
sbb
mov
jnp
mov
shll
ret
or
inc
mov
or
mov
sbb
orb
andb
popf
ret
std
mov
rcr
sarb
ret
jge
rcrb
orl
mov
mov
shlb
in
and
pushf
cmp
xchg
or
pusha
js
pop
cmp
movsl
and
mov
clc
inc
outsl
mov
cli
hlt
xor
out
outsl
fcompl
mov
cli
in
mov
inc
fidivrs
cmp
cmpsl
xor
sbb
movsb
fldl
xchg
in
inc
xchg
cltd
int3
int
mov
pop
pop
jns
pop
or
fwait
cwtl
repnz
int3
subb
sbb
xchg
mov
mov
test
bound
mov
xor
pop
cli
ret
push
sbb
les
sbb
dec
mov
mov
mov
adc
ljmp
mov
jge
xor
aaa
xorb
xlat
inc
test
mov
repz
mov
movsb
sub
mov
add
outsl
sbb
repz
sub
dec
pop
andb
jl
mov
cmp
mov
in
aas
push
adc
mov
paddw
push
add
into
mov
inc
mov
add
stc
mov
dec
or
cmc
stc
mov
aas
push
lret
push
xor
mov
add
xchg
out
cmp
int3
adc
add
idiv
mov
mov
aas
xlat
orb
and
dec
mov
dec
xor
inc
out
daa
lods
mov
daa
and
lret
lock
mov
jo
sarb
test
insb
sbb
or
cmp
mov
pop
ficomps
lods
dec
dec
xchg
dec
mov
fwait
or
add
mov
aas
ljmp
sub
add
mov
movsb
mov
roll
xorb
jo
add
jbe
and
xor
dec
out
les
movsl
mov
add
shll
xor
xor
pop
rorl
and
mov
rclb
dec
sbb
inc
mov
pop
sbb
std
add
daa
fwait
test
add
lock
imul
sbb
ret
mov
sbb
inc
cmp
dec
mov
dec
push
lods
inc
ds
out
les
jl
jns
mov
ret
sahf
jnp
lret
repnz
inc
mov
lods
ret
aas
jge
push
or
subb
inc
addr16
mov
pop
jmp
lret
sbb
cmp
cmp
mov
add
xchg
sub
mov
fildl
enter
pop
popf
lea
add
sbb
or
popf
popf
xor
sarb
stos
repnz
hlt
fnstsw
sbb
mov
pop
mov
mov
xor
mov
jl
mov
ss
add
add
das
jns
fnsave
daa
push
and
mov
call
mov
and
pop
outsl
fistpl
fsubr
movsb
emms
push
clc
jne
stos
mov
mov
or
stos
dec
cld
leave
filds
inc
mov
cmp
movsl
cs
mov
das
xchg
sbb
xor
jp
sbb
dec
cmpsl
cmp
inc
std
std
sub
lcall
mov
or
xor
add
sub
arpl
and
inc
in
ja
cli
mov
mov
sbb
hlt
pop
mov
jnp
sbb
and
cmp
in
fcomps
int
add
jge
add
movsl
cmp
cli
sahf
mov
dec
xor
jae
add
sub
dec
punpckhbw
enter
mov
ud2
mov
or
pop
fwait
mov
mov
sbb
int3
fwait
inc
cld
orl
pop
sub
dec
cmp
mov
push
and
fcmovnb
push
mov
push
pop
mov
mov
or
outsb
sub
or
mov
push
cs
xor
cmp
addl
mov
mov
lret
jb
fidivrs
movsl
aam
aaa
sti
cmpsb
cmpl
add
mov
and
iret
mov
sub
mov
and
dec
mov
mov
jae,pn
mov
xchg
hlt
mov
addl
nop
or
mov
sti
ret
incb
fcoml
mov
cmp
mov
mov
mov
inc
mov
loop
jb
or
mov
std
orb
cmpb
add
adcb
cmpb
shl
les
cmpb
std
mov
cmpl
sbbl
jge
repz
cmp
sbb
xor
mov
cltd
mov
scas
mov
push
jns
mov
mov
subl
dec
mov
xor
cmp
sbb
mov
subb
add
sahf
mov
mov
shlb
cmp
std
stc
mov
arpl
test
xor
call
mov
mov
sbb
or
xor
scas
outsb
push
outsb
ss
mov
sub
lds
adc
xor
add
mov
mov
xchg
mov
inc
mov
or
mov
ja
cmp
mov
shll
loopne,pt
mov
mov
xorl
mov
add
mov
add
xor
rorl
fisttpl
repz
ret
or
adcl
mov
add
mov
mov
mov
mov
mov
xor
shll
add
adc
mov
rolb
shll
daa
push
test
aas
cs
mov
mov
mov
or
shld
mov
mov
add
scas
mov
mov
inc
out
sub
or
lods
popa
jnp
loop
sbb
dec
dec
les
test
dec
lds
add
cmp
aas
int
ljmp
push
mov
lahf
in
xor
mov
push
cli
mov
mov
or
inc
ss
scas
xor
jp
and
loop
push
jle
sti
jl
inc
cmc
cld
pop
popf
out
cmpsl
in
sahf
ja,pt
jno
addr16
mov
push
mov
ja
cmp
cmp
arpl
pop
addr16
ds
out
jl
inc
sahf
cmp
mov
inc
jp
dec
sbb
jge
popf
mov
ljmp
jl
scas
cmp
mov
dec
mov
sbb
popf
std
adc
push
cmpsb
mov
scas
shlb
aad
jb
ja
xlat
movsl
ljmp
or
cmp
pop
sbb
movsl
scas
pop
mov
scas
ret
lods
or
int3
faddp
jl
cmp
mov
dec
ret
mov
mov
cmc
push
mov
ss
enter
notb
xchg
xor
and
add
xlat
ret
sub
pushf
or
xorb
sbbb
int3
lcall
cmp
arpl
add
adc
add
sbb
adcb
push
mov
rcrl
cmp
sbb
and
stos
ret
add
cmp
pop
lahf
jo
xchg
mov
add
inc
or
jle
push
mov
cmp
lock
inc
mov
mov
out
inc
push
shl
mov
int3
lods
mov
sub
ret
jns
shll
bound
cmpl
lock
xchg
sbb
hlt
lea
xor
daa
and
scas
xor
xchg
jg
sbb
lds
jge
div
cmpsb
dec
sub
or
pop
pop
push
fwait
sub
sbb
nop
repnz
leave
or
ret
ret
lret
inc
in
mov
and
lea
sarb
mov
pop
pushf
jns
jnp
lret
fsubr
mov
aaa
aas
jp
in
ja
ret
dec
in
ss
addb
or
dec
mov
mov
dec
ret
pop
out
sbb
sub
mov
popl
mov
cmp
dec
xorb
xor
mov
cmp
sbb
cli
clc
loope
mov
cli
or
ret
repnz
pop
or
adc
cmp
pop
dec
pop
test
or
mov
mov
sbb
cmp
xor
cmp
cmpsl
dec
cli
addl
fwait
out
mov
daa
pushf
sbb
add
pop
mov
gs
jle
xorb
add
test
cmc
les
push
mov
repnz
aaa
repz
ja
xor
sbbb
test
cmp
int3
or
in
mov
es
ja
jge
sub
jge
dec
daa
mov
xor
aas
add
ffreep
js
daa
insl
mov
mov
dec
xchg
sub
xor
dec
out
dec
ds
xor
mov
or
out
lahf
lret
in
mov
mov
pop
jo
lods
xor
int
xor
es
inc
cmp
cld
or
jle
out
std
mov
and
sub
cmpsb
scas
jns
das
sahf
push
mov
lods
cmc
stos
cmp
sub
mov
in
sti
daa
pop
rorb
stos
movsl
ret
mov
mov
int
or
cwtl
adc
aad
xor
xorl
adc
push
inc
or
mov
aaa
std
cmp
xchg
enter
loope
jecxz
ljmp
jb
popa
lahf
cmp
pusha
xlat
call
ja
subb
fdivrs
mov
push
jl
jmp
hlt
orb
or
movsl
rclb
mov
push
addr16
jge
cmp
inc
testb
jmp
outsl
cmp
inc
or
movsl
sbb
and
scas
mov
das
xchg
int3
cmp
cmp
pop
ret
es
add
or
inc
pop
add
mov
xor
pop
mov
cmp
or
add
or
or
dec
or
xorl
and
mov
xor
mov
sahf
mov
mov
mov
mov
mov
repz
mov
rolb
jp
cmp
mov
xor
add
mov
mov
pop
add
cmp
cmp
mov
xor
mov
andb
mov
mov
scas
cmpxchg
pop
mov
mov
dec
mov
lret
inc
aaa
add
cld
or
mov
mov
mov
mov
cmp
xor
ds
mov
mov
mov
aad
mov
ljmp
mov
cmp
sbb
mov
mov
mov
inc
or
or
outsl
mov
mov
push
mov
pop
in
shlb
out
mov
xor
mov
imul
cmp
lds
shlb
xor
add
aaa
cmpsl
mov
xchg
mov
scas
movl
mov
cmp
push
mov
mov
mov
call
mov
mov
push
mov
cwtl
or
add
sahf
mov
push
les
mov
mov
int3
es
mov
sub
mov
adc
mov
or
cmp
xor
add
mov
or
mov
pop
mov
enter
mov
or
mov
mov
mov
add
mov
mov
sub
add
and
push
mov
push
orb
jno
test
mov
dec
mov
mov
scas
add
pop
cmp
lea
movsb
add
into
mov
gs
add
dec
movsl
fnstsw
cmpsl
mov
lret
xchg
mov
mov
ja
mov
orl
or
add
add
mov
mov
cmp
mov
mov
mov
lea
scas
mov
lret
add
mov
add
mov
out
jnp
cmp
mov
mov
mov
data16
ja
mov
mov
cmp
xor
xor
les
mov
popa
out
xor
mov
mov
cmp
je
mov
roll
shrl
jl
dec
cmp
lret
add
mov
or
jb
andl
mov
or
add
mov
cmp
add
dec
lret
mov
jmp
xor
enter
lahf
rolb
add
mov
mov
aas
rorb
lret
add
aam
add
cmp
cpuid
addb
es
in
cmp
adc
rorb
rorb
andl
xor
mov
add
ds
mov
or
mov
andl
mov
mov
dec
cmp
cmp
lock
fwait
push
mov
mov
mov
mov
or
and
adc
mov
xor
mov
mov
int3
movsb
push
jb
sub
insb
or
or
test
lret
mov
sahf
movl
repz
popf
jle
pop
in
cwtl
or
fwait
ljmp
leave
mov
push
jbe
and
or
add
idivb
xchg
mov
fwait
inc
sbb
iret
jns
mov
sbb
cmpsl
jge
fcompl
mov
sub
jmp
pop
or
aas
std
adcb
sub
aaa
in
xorl
push
jb
sbb
and
cmp
mov
mov
cld
xor
es
fwait
lock
mov
mov
insl
loopw
lret
mov
sti
or
subb
subb
mov
stos
or
orb
inc
xor
lea
mov
jge
cmp
and
pop
fbld
push
sbb
clc
sbb
popf
xorl
cmp
pop
pop
pop
addb
in
cmp
ret
mov
push
cmp
outsb
arpl
aam
xchg
cmpsb
jle
add
jp
mov
inc
out
sbb
sbbb
push
out
arpl
push
inc
inc
pop
mov
pop
jnp
aas
hlt
movl
pop
jcxz
pop
push
cmp
mov
fmull
movsl
int3
fcoml
inc
pop
cmp
or
or
or
mov
mov
pushf
add
std
orb
add
andb
scas
dec
insb
sbb
or
sbb
into
in
xchg
or
cmp
aaa
addr16
and
mov
sbb
std
sbb
out
mov
jnp
mov
xor
sbb
int3
and
add
dec
mov
movsl
sub
sbb
out
into
mov
imul
and
lret
repnz
daa
mov
icebp
int3
aam
ja
inc
jno
lea
mov
repz
or
lfence
mov
js
fstps
add
jbe
fisubrs
in
popf
pusha
daa
rcr
mov
lret
pop
mov
rcr
pop
loope
test
shll
ret
add
lret
scas
das
adc
or
jo
rcr
out
iret
lods
out
lret
pop
ljmp
out
fildll
cvtps2pi
mov
jg
jmp
ficomps
pop
mov
add
and
sti
repz
xchg
inc
orb
std
jnp
pop
pop
cmpl
cmp
push
rcr
clc
cmp
mov
sti
cmp
andb
cwtl
decl
flds
dec
sti
fisubs
int3
mov
mov
sbb
pusha
loope
lahf
leave
cmp
leave
int3
ljmp
sbb
pop
imul
pop
lahf
cmp
dec
lods
adc
fidivs
push
cmp
nop
xchg
mov
xchg
xor
cmp
sbb
add
scas
fisubrl
mov
mov
push
cmc
out
cmp
xor
push
test
push
sub
mov
or
ret
dec
sbb
inc
mov
pop
nop
or
or
xlat
or
filds
inc
scas
or
push
jle
xchg
fmulp
sbb
sbb
or
sub
pop
pop
rorl
jle
stos
jae
add
call
inc
jmp
scas
pop
xor
add
cmp
pop
xor
arpl
sbb
pop
cmc
jae
and
testb
mov
sbb
gs
mov
inc
xor
jo
pop
stc
mov
lock
aas
fimuls
cwtl
jp
mull
adc
inc
xorb
btc
fnstcw
jle
cli
ret
addl
les
xlat
or
or
push
shrb
mov
in
or
push
imul
inc
mov
or
mov
std
mov
adc
adc
or
or
cmpb
lret
shr
mov
mov
mov
in
psubw
cmp
dec
mov
jle
stc
aaa
and
jne
cli
mov
dec
and
into
mov
sbb
arpl
pusha
mov
lret
setge
fcompl
push
scas
mov
or
add
lods
cmp
mov
xor
movsb
or
lret
roll
prefetchw
xor
out
test
fcompl
jge
dec
sbb
icebp
or
or
jns
sub
mov
sti
xchg
notl
imul
xor
lcall
dec
aaa
das
fidivrs
mov
mov
cmp
mov
push
lods
cmpsb
mov
or
or
inc
std
pop
hlt
dec
scas
and
in
fidivl
adc
loopne
aaa
lret
or
mov
lcall
jge
test
push
mov
aad
or
mov
adc
mov
xchg
xlat
mov
xchg
cmp
or
cmp
int
pop
xchg
mov
punpcklwd
ficoms
lds
add
sbbb
cwtl
pop
out
pop
cmc
ljmp
mov
dec
add
ja
inc
cmpsl
jnp
loopne
scas
dec
push
cmp
sub
enter
sbb
sub
mov
std
add
pop
push
clc
loope
cmp
push
fs
outsb
mov
stos
jns
pop
fs
mov
movsl
ja
xlat
mov
jno
repnz
adc
cmpsl
cmp
pop
mov
fildl
mov
enter
lea
jg
fsts
lret
cmpsb
repnz
orb
xchg
and
sbb
out
mov
lods
repz
xor
cmp
or
sbb
mov
inc
lret
push
addl
stc
dec
outsl
imul
or
andl
ja
in
mov
inc
int3
add
mov
jns
mov
ret
mov
ret
iret
and
cld
std
fsubs
int3
std
fsubs
dec
mov
mov
mov
jno
add
cmp
lock
les
jns
or
sbb
mov
or
xor
jnp
pop
stos
xor
mov
lcall
outsl
cmp
dec
cmp
and
or
int
leave
mov
adc
cli
adc
mov
xchg
scas
lret
dec
cmp
mov
adc
dec
sbb
cmp
lret
xor
mov
mov
clc
and
mov
cmp
ds
push
push
in
jl
das
dec
aas
xor
add
sbb
test
andnps
aas
or
scas
stc
pop
aaa
jno
xor
das
xor
mov
shld
getsec
mov
mov
dec
int3
sbb
int3
or
shlb
into
jg
cmpsb
cli
cmp
sbb
loopne
aaa
push
xchg
ljmp
xor
mov
add
push
ljmp
and
pop
je
fs
aam
jnp
cmc
outsl
leave
add
in
cmpsl
icebp
fisubs
jae
fildl
int
or
mov
dec
pop
or
xchg
jl
and
fwait
pop
stc
fdivrs
pusha
cli
fs
mov
aaa
mov
icebp
xor
je
or
push
or
inc
repnz
dec
xor
stc
fnsave
adc
push
mov
pop
mov
mov
sub
les
xor
lahf
lea
or
das
ja
cmpsb
testb
test
in
addb
sbbb
cmpsl
dec
ljmp
mov
sbb
mov
lcall
pusha
mov
jp
and
fsubrl
sarb
xlat
ret
sub
loop
paddusw
mov
mov
stc
mov
out
lcall
int
int
into
mov
hlt
repnz
or
jbe
push
andb
sarb
and
add
xor
decb
mov
push
jns
cmpb
push
xor
ret
mov
mov
sub
dec
jne
movsl
sbb
sahf
mov
in
cmp
pop
xor
mov
push
mov
jecxz
fisubrl
movsb
outsb
shlb
testb
jnp
xor
sti
jp
jecxz
pop
repz
lret
mov
loop
jno
mov
dec
imulb
test
or
test
shll
lret
cmp
pop
in
lock
push
mov
in
prefetch
repz
push
mov
adc
cmp
push
scas
int
fs
pop
out
ret
pop
popf
out
outsl
sbb
loop
stos
and
pop
stc
outsl
mov
mov
mov
enter
ss
mov
mov
orl
jmp
fidivrl
add
enter
mov
sub
stos
stc
lods
lret
subb
jle
jmp
lods
outsl
stos
xor
sub
sbbl
shlb
hlt
sahf
cmp
inc
lahf
es
ret
scas
xor
xchg
scas
push
inc
jecxz
pop
cmp
sub
fimull
xor
cmp
inc
mov
mov
divl
rorl
out
addl
xchg
and
xlat
dec
add
or
bnd
ret
test
push
loopne
sbb
sahf
sub
inc
scas
scas
clc
into
mov
jnp
dec
out
jns
cmp
sub
adc
sahf
mov
mov
xor
sbb
ret
fldl
ds
cmpb
fstps
enter
and
xor
mov
xor
jne
mov
push
mov
test
or
or
sbb
outsb
mov
mov
imul
scas
in
inc
mov
lock
inc
dec
dec
mov
jge
fbstp
stos
stc
and
aam
xor
cmp
mov
sub
xchg
leave
mov
les
js
mov
pop
orl
mov
inc
mov
xchg
outsb
test
pop
cwtl
pop
xchg
cmp
add
pop
adc
lret
push
nop
xlat
loopne
stos
add
push
std
ret
pop
ror
cmp
jecxz
add
lods
cmp
jns
xorb
cmpb
int3
lret
out
roll
iret
out
adc
mov
movsb
adc
cmp
subl
mov
pop
xchg
movsb
mov
and
test
leave
and
orl
cmc
push
int3
or
add
data16
out
sub
mov
stos
dec
mov
sbbl
subl
and
jo
hlt
add
mov
or
loopne
jecxz
stc
dec
mov
cmp
and
or
ret
xchg
mov
leave
inc
cmc
test
add
jns
mov
xor
ret
add
or
jns
aas
imul
or
aad
sti
inc
bswap
stos
cmp
jmp
inc
lods
xlat
ja
push
repnz
mov
dec
sub
mov
inc
stos
cld
das
or
pop
cmc
jns
mov
mov
jg
mov
add
mov
jl
nop
gs
mov
fsubrl
aam
repz
dec
pop
shl
mov
rorb
inc
or
hlt
add
mov
add
and
lods
loopne
out
iret
cwtl
xchg
mov
or
or
int3
mov
hlt
sbb
inc
mov
nop
inc
popf
mov
adc
fisubs
into
into
mov
mov
xchg
xor
dec
lcall
xor
jp
es
push
rcll
pushf
icebp
cmp
xor
leave
imul
mov
daa
pop
mov
mov
mov
xor
aaa
popf
subb
mov
lret
sub
jno
mov
pop
mov
pop
out
dec
sarb
sbb
cmp
movsl
lcall
mov
orl
xor
and
dec
mov
aaa
push
jbe
loop
mov
or
je
repz
dec
xor
add
sub
outsb
or
into
add
scas
dec
stos
xor
push
es
fsubrs
mov
and
inc
pop
fstpl
jg
nop
mov
imul
dec
jecxz
popa
enter
lret
stos
dec
mov
shlb
fwait
call
inc
loope
add
cmp
or
fsubrs
mov
mov
mov
sub
fwait
cld
aaa
ret
loopne
push
or
int3
sti
cmp
cld
dec
fwait
movsl
xchg
jne
dec
xchg
les
or
inc
lret
int3
ror
lret
pop
testb
jecxz
les
xlat
test
test
mov
sbb
jmp
mov
inc
ret
sbb
lods
jl
mov
imul
or
aas
lret
jno
or
idivb
pusha
mov
push
int3
arpl
add
outsb
sub
mov
out
clc
pop
ss
ret
fdivl
dec
mov
ret
mov
std
mov
xor
mov
or
cmp
add
jg
push
cmp
mov
cmp
std
pop
or
mov
inc
mov
sbb
test
push
and
fdivs
lret
shrb
cmc
xor
scas
ret
imul
out
dec
lcall
std
clc
shl
jnp
jge
mov
das
cmp
pop
pop
test
test
sub
or
andb
leave
imulb
xchg
into
dec
dec
or
xor
pop
stos
lods
xchg
stos
int
cli
rclb
cmp
in
int3
mov
fsubr
pop
sub
pop
add
add
fdivs
add
outsb
daa
fsubrl
pop
inc
mov
test
pop
sbb
sbb
mov
mulb
les
cld
ds
mov
ret
cmp
cmp
mov
jl
lret
test
or
inc
int3
dec
jbe
dec
mov
cmp
lock
mov
xor
mov
push
mov
fidivs
test
adc
fistps
scas
inc
inc
mov
addr16
cmpsl
or
test
aaa
sub
adc
lret
clc
mov
js
cmp
jns
repz
push
sub
stos
mov
lcall
mov
mov
and
inc
mov
or
jae
andb
test
xchg
sbb
cmpb
data16
mov
addr16
je
pop
jae
orl
shrd
mov
inc
sub
pop
sub
pop
nop
cmpsb
mov
leave
add
out
push
out
mov
sub
rcrb
mov
lret
int3
mov
ljmp
mov
or
or
lret
sub
xlat
scas
xor
mov
add
test
lods
dec
dec
stos
jl
dec
dec
pop
sub
fisttps
or
mov
jmp
das
bnd
dec
pop
push
into
shrl
jmp
mov
bswap
js
push
les
xchg
xlat
xor
cmp
int3
mov
sub
mov
mov
xor
sub
mov
fldcw
xor
aaa
inc
pop
adc
sub
dec
cli
jnp
stos
inc
cwtl
loop
push
lods
enter
mov
xchg
or
aaa
aaa
or
ds
mov
add
inc
xlat
test
adcl
fidivl
push
inc
xor
adc
popa
mov
ja
cmp
scas
mov
cmp
sbb
lods
js
mov
xchg
jbe
mov
icebp
or
mov
or
scas
pop
mov
add
adc
add
mov
xchg
repnz
jl
lret
ret
test
hlt
addr16
lea
mov
jmp
hlt
hlt
sbb
and
jg
enter
jne
push
pop
jl
pop
addr16
mov
scas
cmp
adc
lods
mov
mov
cmp
test
pop
pop
add
ss
mov
mov
mov
jbe
mov
jo
popa
pushf
push
inc
lahf
mov
push
or
cmp
push
dec
ret
xchg
fildl
or
mov
mov
jg
add
or
jle
int3
lcall
xor
mov
decl
daa
cs
mov
xor
pop
clc
sar
push
xor
or
int3
xor
jecxz
repnz
lea
xlat
out
lret
mov
mov
mov
pop
xchg
mov
stos
aad
mov
or
or
mov
jge
daa
call
mov
sbb
andb
fldenv
adc
mov
or
lcall
iret
mov
lret
cmp
fwait
out
popf
jns
cmpl
and
mov
frstpm(287
xchg
data16
xor
lret
cmpsl
sbb
jbe
daa
or
cli
repnz
push
mov
es
stos
xchg
bound
jbe
xor
xlat
and
add
jbe
sarl
dec
into
addr16
jns
ret
inc
cs
icebp
pop
lret
fisttpl
xor
int3
aam
int3
dec
aaa
aaa
aaa
and
inc
pop
pop
ds
loop
lods
sbb
enter
fnstsw
cmp
push
jo
adc
inc
pop
int
and
mov
jo
rol
mov
ret
ret
jge
loop
add
mov
add
xchg
mov
lods
pop
scas
lahf
xor
fisubs
cld
invd
add
aad
filds
imul
insb
mov
call
inc
popa
mov
push
inc
lret
mov
jg
or
int
loop
mov
xor
push
ljmp
cs
xor
loopne
das
js
sub
roll
adc
aas
mov
sbbb
das
je
and
jne
cmp
cmpsl
and
into
push
mov
dec
or
sub
dec
je
sub
inc
mov
enter
push
andb
mov
testb
leave
pop
add
lahf
push
add
in
dec
xchg
ud1
inc
jp
lods
or
jo
rcrl
leave
movsl
ds
add
ljmp
or
decl
xchg
mov
loopne
xchg
out
std
mov
sub
or
aaa
rcl
ret
inc
pop
int
imul
add
repnz
stos
inc
mov
mov
imul
addb
lea
test
cmp
xchg
push
mov
orb
cld
sbb
or
les
cs
jnp
jg
inc
in
out
mov
stos
lret
stos
inc
scas
iret
lock
mov
aaa
js
add
and
inc
cmpsb
shlb
cmp
mov
xor
mov
mov
rorl
or
fistpl
addb
imul
dec
dec
cmp
ja
std
xor
mov
mov
sbb
adc
mov
add
mov
js
icebp
movaps
cmp
sub
ret
stos
xchg
insb
mov
xchg
addb
test
sahf
test
call
cmp
stos
add
add
add
dec
mov
xorb
dec
cs
in
push
cmp
mov
pop
call
test
lea
sub
or
andl
imul
sti
jne
cmp
mov
or
das
or
push
or
or
adc
andb
mov
mov
mov
popa
mov
xor
mov
xchg
fs
mov
push
ja
insl
add
sub
test
cld
in
rolb
fwait
outsl
push
aad
xor
rcrb
lret
mov
mov
add
push
das
pushf
sahf
sbb
enter
shll
mov
gs
cmpl
lret
orb
xchg
ror
xor
aaa
mov
ja
bound
mov
cmp
xorb
mov
cmpb
jb
add
in
divb
shrl
add
xchg
jg
imul
mov
add
or
add
mov
out
shlb
mulb
lods
aaa
add
jb
mov
xor
cmp
mov
xor
lods
add
xorb
xor
or
stos
mov
testb
mov
subl
or
in
lret
dec
test
loopne
shl
mov
jecxz
enter
imul
shl
mov
lea
leave
test
xor
in
jb
cmc
loopne
sarb
mov
iret
lods
cmp
repz
shlb
testb
cmp
daa
jne
dec
rorl
shlb
dec
daa
testb
add
imul
jb
dec
loopne
shlb
mov
dec
lods
cmp
loope
imul
sarb
inc
daa
jb
dec
lods
and
test
test
scas
lods
cld
pusha
loopne
shlb
not
lods
lods
add
adc
test
xor
jb
lods
loopne
daa
xlat
imulb
lods
roll
stos
jb
out
sub
and
push
add
push
daa
das
idiv
lods
and
push
jb
sub
out
sub
and
shrb
stc
lds
jb,pn
std
loopne
rclb
sub
in
xorl
jb
out
loopne
daa
call
and
in
orb
loope
imul
daa
in
idivb
imul
jecxz
xchg
imul
lods
gs
loopne
mov
and
jb
insl
loopne
daa
pop
imulb
jle
arpl
adc
imul
out
lods
pusha
add
rclb
insb
daa
js
push
jb
outsb
loopne
shlb
adc
push
fs
test
fsub
shrb
and
adc
ficoml
faddp
pusha
out
insb
rcr
and
adc
rcll
fld
frstor
lds
pop
and
adc
inc
adc
push
lds
mov
and
adc
pop
adc
inc
lds
mov
out
insb
daa
pushf
adc
nop
lds
imul
add
fwait
lds
imul
and
adc
sbb
pop
imul
adc
and
adc
add
imul
push
insb
rclb
and
adc
sbb
rolb
and
loop
clc
cmp
aam
popa
mov
mov
sub
mov
or
mov
lret
ret
or
dec
sub
mov
mulb
arpl
inc
enter
mov
add
mov
int3
and
cld
data16
jne
jb
ret
insb
xor
movsb
ret
arpl
insb
sub
in
cmp
cli
xor
dec
mov
mov
mov
in
leave
shll
xor
mov
dec
adc
or
push
add
mov
mov
fimull
cmpl
out
jne
mov
insb
sub
mov
insb
mov
insb
and
sub
mov
imul
dec
push
lea
addl
mov
adc
inc
sub
dec
or
mov
mov
ljmp
or
push
mov
mov
pop
orl
push
push
push
xchg
sbb
cmpsl
call
lds
aas
out
mov
push
aaa
or
subl
test
push
mov
dec
mov
sub
xor
cli
fldcw
push
loopne
jge
xchg
push
cmc
or
or
ljmp
mov
xor
aad
cmp
or
int3
push
xor
cmpsb
push
push
enter
push
mov
sub
es
mov
mov
enter
mov
xor
sub
test
mov
stc
pop
pop
mov
mov
xchg
mov
inc
and
mov
sub
add
les
push
sub
sub
mov
push
mov
int3
hlt
ljmp
fs
xchg
add
mov
mov
mov
fistps
addb
std
fidivs
insb
mov
jns
mov
ljmp
pop
mov
mov
xor
mov
xlat
mov
into
or
out
and
lock
nop
inc
nop
xorb
cmp
push
or
xor
pop
push
test
int
cltd
pusha
in
mov
andb
aaa
xor
add
movsb
or
aam
push
jbe
rorb
cmp
or
sbb
insl
bound
bound
cmpsl
lea
fbld
or
rorl
jecxz
mov
jns
sti
pop
cmc
push
cmpsl
cwtl
push
repnz
jne
rcrb
inc
or
lret
or
sbb
dec
push
iret
rcrl
dec
scas
adc
mov
mov
rorl
testb
lods
add
sti
mov
xsavec
imulb
lods
mov
or
mov
loop
inc
leave
mov
mov
mov
jb
jl
cli
lods
int
dec
sub
lods
andb
sbbb
call
repnz
imul
pop
call
add
jp
add
and
mov
mov
push
aaa
aas
jnp
rolb
cmpb
mov
out
lret
adc
shlb
push
mov
add
shll
xchg
mov
aam
lea
ja
int
in
cmp
sub
mov
andl
inc
mov
cmc
add
int3
sub
dec
xchg
push
mov
xorb
fiaddl
adc
mov
jne
mov
dec
dec
sub
xor
adcb
mov
loope
or
dec
pop
cmpsb
leave
mov
aad
mov
push
aam
lea
dec
mov
xorb
mov
subb
loop
repnz
ljmp
mov
les
iret
jp
pop
inc
push
cmpsl
push
adc
loopne
cmpsl
mov
dec
push
xor
mov
sahf
clc
fistl
mov
jl
cld
fidivrs
pop
cmpsl
mov
out
and
mov
fisubs
andb
pand
sub
mov
and
push
mov
xchg
mov
arpl
add
movsb
hlt
mov
adc
ja
push
aaa
popa
adc
inc
in
mov
mov
subl
repz
or
imul
insb
jne
in
and
dec
mov
push
imul
mov
imul
mov
icebp
dec
sub
mov
lods
dec
imul
addl
add
adc
movsb
mov
insb
loope
dec
scas
in
jecxz
mov
or
cmp
mov
sarb
ret
mov
xor
or
or
mov
or
or
rorl
orb
cmpsb
mov
cmp
cmp
mov
stos
inc
call
aaa
add
and
inc
push
cltd
dec
sarb
cmp
jbe
loopne
sub
add
or
ljmp
add
and
mov
mov
or
jg
ljmp
cmpl
jle
ljmp
aam
sti
hlt
xorb
divb
rorl
jo
adc
mov
or
mov
jp
rcrb
cmp
les
cmp
stos
aas
test
mov
aad
mov
aas
and
pop
aam
mov
in
mov
mov
daa
adc
movsl
aam
aas
subl
pop
mov
lods
sarb
lock
xor
and
cmpsl
mov
rcrb
stc
testb
push
or
mov
scas
je
int
push
and
mov
push
jae
adc
mov
xchg
divb
loop
pop
sbb
mov
das
xorb
add
xlat
xor
lock
jb
movb
xabort
aas
shlb
orl
movsww
mov
mov
rorl
mov
cmpsb
clc
mov
jns
imul
movsb
mov
ret
xchg
test
pop
sbb
push
ja
fisubrs
add
mov
gs
inc
push
mov
in
mov
mov
add
add
les
mov
mov
lock
sub
fucomi
int3
or
dec
sbbl
add
push
inc
lret
imul
scas
or
mov
loop
shll
mov
shlb
rolb
bound
roll
mov
pop
pop
cld
cmpps
and
add
cmpsb
jecxz
cmpsl
ret
mov
shlb
ret
mov
shlb
rcl
ret
mov
imul
clc
outsl
push
adc
pop
imul
fisttpl
out
add
nop
ret
jne
mov
mov
add
les
cmpl
addr16
xor
inc
mov
push
shl
ret
jg
ds
sarb
shll
ret
inc
mov
shr
push
hlt
shl
ret
jp
clc
mov
data16
dec
in
leave
mov
shlb
jg
lahf
pop
sar
ret
or
or
lret
shrb
jbe
jb
lock
xchg
into
xchg
and
shl
adc
sarl
jns
out
fwait
cmp
cmpsb
out
mov
xor
movsb
pushf
cmp
ret
xorb
add
stc
lds
mov
addb
dec
push
rolb
movsb
popa
cmpsl
mov
hlt
jmp
mov
jmp
movsb
cmp
or
xor
cmpsb
lods
cld
push
movsb
sub
stos
or
xor
pusha
lret
mov
mov
daa
in
repz
mov
mov
adc
cmp
inc
movb
ljmp
sbb
int3
add
or
cli
jle
addl
sub
pmaddwd
unpckhps
lcall
sub
sti
push
aaa
add
sub
out
add
add
unpcklps
xor
pop
ret
mov
mov
clc
mov
adcl
xor
push
mov
and
jno
inc
popl
mov
sbb
loope
int3
or
jp
cld
lcall
pop
mov
mov
xlat
test
shll
mov
jno
push
in
inc
arpl
push
scas
push
jo
lds
or
aam
adc
hlt
fstpl
mov
jg
add
stos
pusha
mov
mov
xor
mov
imul
mov
xchg
sub
push
arpl
mov
test
xchg
in
rolb
scas
outsb
xor
popa
jmp
pop
cmp
mov
pop
cmp
lret
cmc
push
sbb
push
cmp
test
inc
jg
mov
cwtl
nop
dec
dec
and
mov
fisttpl
daa
pop
xchg
lods
in
arpl
sbb
cmpsl
xchg
jo
sub
add
jg
rolb
xor
fiaddl
mov
rol
cltd
pop
call
arpl
mov
test
xchg
adc
add
das
push
test
cmp
xor
ret
sbb
cmpsb
leave
aaa
test
sbb
adc
xchg
xor
test
mov
sbb
loopne
imul
ds
pop
pop
data16
arpl
pop
insl
jae
mov
movsb
cmc
inc
pop
xor
pop
cmpsb
cld
inc
clc
jp
test
mov
cmpsb
outsb
or
xor
xor
mov
in
in
push
or
icebp
push
cmpsb
js
test
xor
sbb
cmpsb
pavgb
clc
cmp
in
scas
test
cmc
xchg
je
ljmp
data16
inc
jl
push
and
pop
lods
mov
out
dec
mov
shlb
cmp
xor
dec
mov
xchg
inc
test
loopne
adc
xchg
sub
in
mov
scas
test
hlt
add
mov
cmp
fisubs
movsl
jnp
xor
int3
arpl
push
insl
test
add
loopne
into
test
mov
lods
jg
jl
mov
mov
pop
into
clc
test
adc
test
das
stos
daa
cs
in
push
jle
xchg
mov
aas
mov
cmpsl
jnp
inc
jo
mov
imul
xchg
rolb
inc
movsb
adc
inc
xor
or
jp
mov
mov
fsubl
pop
and
jg
les
insb
arpl
aas
imul
adc
mov
aad
jae
shr
cmp
xchg
xchg
aam
sub
add
and
add
and
loope
mov
jo
mov
subb
or
jne
cmp
and
mov
xchg
xchg
hlt
nop
push
and
loope
or
mov
cmp
mov
das
aad
cmp
cmc
or
xchg
sub
dec
hlt
dec
adc
or
xor
je
int3
iret
add
mov
cs
daa
ds
jmp
ds
inc
mov
pop
adc
stos
insb
repnz
dec
or
push
loop
lds
add
imulb
stos
add
loop
outsl
or
add
std
dec
push
mov
sub
jb
xlat
inc
stos
adc
cmp
mov
repz
ret
shrl
outsl
out
add
cmpsl
imul
mov
push
sub
or
xchg
lea
cmp
out
shlb
testl
xchg
popa
jmp
mov
fmull
insb
fimull
dec
in
xchg
clc
mov
outsl
adc
dec
rorl
scas
mov
push
cmc
int
roll
fmull
call
mov
outsl
dec
in
lea
cs
leave
push
lea
cmp
scas
push
mov
pop
orl
xchg
or
sub
imulb
and
add
mov
adc
or
pop
notl
imul
ror
in
lret
pop
mov
push
into
data16
fbld
and
stos
in
int3
push
push
mov
stos
mov
mov
pop
mov
das
imul
mov
lods
les
cwtl
mov
add
cld
push
ja
lret
subb
push
orb
out
jne
lret
repnz
jmp
daa
adc
ret
and
xor
xor
jp
jmp
push
call
lods
jno
lea
jnp
pushf
lea
je
shr
rol
stc
mov
clc
ror
dec
push
mov
pusha
add
jmp
add
inc
gs
jb
jns
imul
out
add
pushl
popl
pusha
bt
jmp
add
insb
jae
jb
jo
inc
add
das
and
outsb
bound
pop
std
rcll
int3
out
xchg
pop
mov
shrb
insl
sbb
fisttpll
je
and
ret
and
arpl
dec
dec
test
add
stos
xor
cli
or
jmp
inc
stos
cmp
cmpsb
ds
rcrl
lahf
scas
loope
sub
jmp
adc
adc
js
pop
lret
rolb
popf
imul
push
and
push
ror
bound
neg
insb
xor
mov
and
test
xchg
or
mov
mov
cs
add
jae
jnp
leave
push
into
test
lret
in
dec
ss
stc
mov
xchg
or
insb
lock
js
fisttps
and
sub
sbb
pop
pusha
icebp
push
dec
mov
es
and
shlb
lret
outsl
les
fs
push
xor
push
fwait
sti
push
cs
push
xor
or
imul
dec
cmp
movsl
stos
jl
add
jb
pop
fs
xchg
sahf
push
add
outsl
ja
imul
xor
jmp
and
aaa
or
rorl
or
jl
xor
shr
loopne
enter
idiv
dec
inc
movsb
pop
cltd
push
ljmp
adcb
sbb
pusha
sbb
or
scas
xor
mov
decl
pop
xlat
pushf
ljmp
sub
mov
clc
mov
loope
or
mov
shlb
jb
stos
add
inc
rolb
stos
xor
adc
and
jns
repz
or
lea
pop
adc
xor
loope
push
add
ljmp
push
mov
pusha
add
push
imul
popa
jae
inc
add
xor
decl
xchg
ret
inc
inc
call
push
cmp
call
jmp
add
inc
jb
popa
je
inc
jbe
outsb
je
add
add
xor
jmp
jmp
dec
push
push
inc
push
xor
cs
insb
add
je
jo
dec
and
cmp
jl
pushf
cmpb
pushf
jmp
add
inc
gs
outsl
fs
gs
imul
add
add
fs
je
push
imul
fs
jne
push
lea
jmp
add
dec
data16
je
arpl
jg
add
call
cmp
mov
lea
je
or
mov
adc
mov
cmp
clc
pusha
bt
add
pushf
pusha
mov
or
lea
mov
shld
mov
adc
sar
dec
mov
sbb
movzbl
mov
add
jmp
push
call
mov
lea
je
pushf
sub
jbe
push
stc
test
jmp
mov
jmp
and
bound
frstor
dec
mov
mov
push
mov
pop
xlat
mov
jae
xor
xor
pushf
inc
mov
pop
adc
aas
fmuls
iret
mov
or
and
loop
cli
fs
pop
in
cmp
lret
ds
shrl
xchg
mov
mov
addr16
xchg
lods
ss
sub
sbb
inc
pushf
add
dec
ljmp
pop
subb
insl
cmp
sbb
mov
xor
cmp
inc
xor
fistpl
or
orb
cmpsb
insl
mov
ja
outsb
stos
xor
call
ljmp
dec
push
mov
jmp
sarb
inc
push
dec
xor
cs
insb
add
add
je
imul
add
push
pusha
add
push
pushf
pushl
lea
jmp
add
inc
insb
outsl
bound
dec
popa
outsb
fs
add
inc
and
inc
leave
in
shll
adc
stos
xor
xchg
pop
cltd
jno
iret
mov
add
or
add
jbe
push
outsl
inc
js
add
dec
push
je
inc
push
add
int
incl
add
data16
je
imul
dec
jb
inc
js
jne
pusha
mov
push
lea
jmp
mov
fstps
mov
lods
bound
data16
cmc
cmc
inc
aad
pop
lcall
push
jno
jbe
inc
hlt
in
outsb
sbb
or
seta
clc
add
cmp
lds
loop
jns
add
inc
pop
add
inc
gs
popa
jae
inc
jb
outsl
jb
stc
movw
sub
sub
bt
pushf
cmp
jmp
add
inc
jb
popa
je
dec
outsb
jne
clc
add
cmc
cmp
bt
xor
stc
stc
cmp
bt
cmp
call
test
sub
pusha
repnz
pushf
jmp
rcr
dec
mov
pushf
cmp
test
jmp
pushf
pushl
mov
cwtl
lea
jmp
push
pusha
pushl
lea
jne
and
mov
pusha
sbb
pusha
shrd
sub
sar
dec
add
lea
clc
jmp
add
push
imul
insb
insb
outsl
arpl
stc
pushf
sub
bt
cmc
pushf
cmp
pushl
popl
stc
bt
jmp
push
movw
jmp
push
mov
push
pushl
lea
jmp
fs
cmp
inc
xchg
outsb
xorl
xchg
aad
cwtl
sub
mov
insb
out
inc
or
cmp
out
int
roll
stos
xor
int
pop
mov
cwtl
lods
inc
es
in
bound
stos
imul
cltd
lds
mov
outsl
jae
push
push
dec
gs
popa
addr16
add
add
popa
jo
je
imul
push
mov
pusha
pushf
lea
je
bt
push
mov
lea
aam
push
btc
bsr
mov
test
cmc
test
mov
jmp
add
inc
gs
imul
inc
add
test
decl
xchg
rol
add
stos
mulb
mov
test
sub
sbb
adc
neg
bsr
mov
bt
push
bt
pushf
sub
mov
movw
pushl
popl
jmp
add
fidivrl
movsb
sub
pop
xor
pop
sub
jb
mov
jo
sub
incl
mov
je
add
notb
or
or
aad
or
je
gs
imul
or
lea
ja
call
add
dec
imul
add
mov
mov
pushl
pushl
ret
xchg
pusha
jmp
add
push
je
inc
jb
popa
je
inc
outsl
arpl
insb
gs
outsb
dec
dec
outsl
arpl
jns
gs
add
inc
outsl
arpl
outsb
je
jb
jo
jb
imul
inc
jb
ja
outsl
arpl
push
arpl
add
gs
je
push
outsb
add
add
gs
inc
jb
je
arpl
push
arpl
outsb
add
sbb
sub
bt
jmp
pusha
lea
call
pushf
pusha
lea
jmp
add
inc
gs
jns
inc
outsl
insb
outsl
jb
xchg
rcll
sub
aad
push
ljmp
xchg
sub
les
das
xchg
sbb
mov
push
repz
scas
sbb
mov
xchg
jb
mov
and
cltd
dec
gs
inc
jmp
sbb
in
stos
out
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
jns
jae
das
add
sahf
cmp
call
add
inc
gs
popa
jb
outsb
je
push
lea
jb
push
pusha
pusha
pushl
ret
push
pushf
pusha
push
add
stc
cmc
add
pushf
pushl
lea
jmp
add
inc
push
dec
push
je
gs
insl
dec
outsb
outsw
inc
add
mov
cmpsl
ljmp
ljmp
mov
add
adc
je
jmp
js
lret
je
in
pop
pop
push
lds
and
or
ss
psrld
call
enter
fcoms
sti
push
pop
sti
or
pushf
fiadds
add
add
pop
mov
pop
and
mov
call
pop
mov
movzbl
bswap
pop
pushf
pushl
mov
bswap
pop
pusha
pushl
ret
add
inc
insb
imul
arpl
outsb
add
arpl
pop
xor
pop
sub
jecxz
or
xor
insl
stos
mov
pop
xchg
sub
mov
mov
lds
stos
dec
test
push
ljmp
xchg
sub
int
lea
mov
mov
lret
daa
loop
test
rorl
jne
movzbl
pusha
lea
mov
movzbw
lea
movzbl
push
mov
jmp
push
call
mov
gs
gs
imul
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
int3
jp
call
std
scas
add
mov
mov
sar
adc
xor
xchg
jg
mov
sbb
imul
sti
cli
out
rcr
push
fsts
int
push
or
cli
lock
aas
rcrl
loop
fsts
mov
mov
add
inc
jb
popa
je
dec
dec
outsl
arpl
jns
gs
outsb
dec
inc
insb
outsl
bound
add
popa
fdivr
jmp
fsubrs
cld
nop
jecxz
lcall
stos
mov
gs
sub
adc
push
jecxz
cmp
pushf
addr16
fiadds
lret
in
loopne
jae
dec
push
stos
xor
loopne
sub
add
enter
sbb
inc
dec
movsb
and
pop
jg
push
jae
dec
mov
jbe
int3
jge
and
mov
xor
scas
leave
je
dec
mov
add
gs
je
inc
imul
imul
jb
insl
inc
add
adc
call
inc
pop
mov
lds
add
je
insb
popa
jae
dec
outsb
outsw
inc
add
ret
clc
clc
cmc
pusha
xchg
jmp
add
dec
jae
popa
fs
jb
je
push
je
add
add
popa
jns
je
imul
inc
push
je
dec
push
add
add
je
outsl
jb
addr16
jne
fs
imul
fs
jne
pusha
mov
lea
jmp
add
dec
jae
imul
popa
bound
add
ret
incl
add
fs
push
dec
jne
je
inc
jns
add
fs
je
pusha
mov
lea
je
add
or
mov
btc
sub
jmp
icebp
push
es
lods
jo
daa
dec
mov
mov
stos
scas
loopne
xor
mov
roll
sbb
cmp
jo
cltd
arpl
xorl
stos
sub
inc
cmp
sti
icebp
out
xchg
bound
push
je
cmp
stos
pop
pop
and
out
mov
mov
dec
adcl
mov
cmpsl
loop
add
insl
imul
insl
dec
jne
add
jns
or
pusha
pushf
jmp
jmp
lea
movzbw
movw
mov
pushl
xchg
lea
mov
xchg
lea
mov
mov
not
mov
pushf
pushl
pushl
ret
add
inc
jb
ja
fs
leave
jge
jmp
add
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
xor
lea
call
pushf
adc
push
jmp
add
push
gs
dec
push
xor
push
call
cmp
repnz
lea
jbe
or
sub
btr
clc
mov
lea
add
lea
movsbw
sbb
mov
mov
stc
jmp
cmc
test
mov
jmp
push
mov
lea
jae
push
cmc
xor
movb
mov
pushf
push
lea
call
jmp
push
push
lea
je
stc
add
call
inc
pusha
call
inc
push
dec
inc
dec
dec
xor
cs
insb
add
test
cmp
jmp
test
pusha
shr
cmc
push
cmp
movw
call
pushl
cmp
push
jmp
add
inc
insb
outsl
bound
inc
gs
je
insl
dec
popa
insl
gs
add
add
je
insb
imul
je
push
call
jle
push
call
out
test
push
call
or
pop
pop
adc
sub
rclb
push
arpl
xor
shl
inc
cmp
fcmovnbe
shl
push
cltd
add
sub
cmp
xchg
es
stos
nop
dec
jbe
mov
xchg
dec
rcl
xchg
or
cmp
add
pop
push
leave
cld
jmp
lcall
lock
inc
xchg
push
add
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
imul
ret
sub
push
pop
cmp
or
inc
add
xchg
into
mov
push
imul
mov
decl
cltd
pop
mov
add
loopne
xchg
xchg
stc
loopne
xchg
and
mov
push
imul
outsl
insl
push
outsl
imul
add
gs
je
inc
insb
insb
imul
outsb
add
mov
repnz
out
mov
add
in
inc
inc
mov
scas
addb
ret
jns
add
mov
int
mov
or
cmp
aaa
jle
lock
aaa
cmc
lods
mov
or
dec
into
jb
or
rcll
mov
shll
icebp
into
mov
jns
cmpsl
shlb
ret
mov
leave
emms
mov
or
mov
jp
std
ret
mov
xor
xor
rorl
lret
movsl
aas
shll
mov
cmp
iret
xor
sub
mov
shlb
mov
cld
ret
ds
push
add
fidivs
xor
mov
sbbb
shlb
xor
jge
cld
mov
shlb
jnp
mov
or
dec
movzwl
mov
aas
cmp
out
movsl
addb
rol
iret
dec
ror
ret
mov
xor
or
sarl
mov
mov
rorb
mov
jno
aas
paddd
or
ss
mov
mov
testb
cmp
mov
aas
mov
xor
jbe
or
ud2
add
cmp
mov
shlb
aaa
rorl
ret
mov
rolb
andb
or
jl
cmp
mov
or
mov
int
dec
jno
fsubl
ret
lock
shlb
shlb
rorl
ret
iret
mov
rolb
andb
sarb
ret
xor
mov
int
xor
sti
mov
xor
andl
mov
loop
jecxz
adc
shlb
shlb
shll
jno
pop
mov
mov
gs
dec
dec
lock
mov
rorb
or
lea
andb
mov
shl
mov
shl
ret
dec
mov
or
in
fisubl
sar
ret
mov
shlb
mov
int3
ret
dec
mov
mov
cmp
decl
mov
mov
mov
or
mov
add
sbb
data16
stos
mov
addr16
xor
ror
or
roll
jp
cmpsl
mov
cmp
or
shll
jns
rol
ret
and
mov
inc
jg
xor
dec
or
rol
ret
orl
cmp
cmp
jge
shl
ret
xor
rorb
mov
roll
andb
cmp
jp
sarl
ret
repnz
shlb
or
leave
rorl
ret
dec
mov
rol
and
shlb
ret
mov
xor
mov
mov
mov
ror
ret
push
mov
fcmovnb
clc
or
sarl
shll
es
decb
shlb
shlb
in
scas
ret
rol
lret
shll
loop
shlb
lahf
and
mov
aaa
add
mov
mov
sahf
psrld
rolb
in
or
rorb
les
mov
lea
mov
rorb
push
rol
ret
and
mov
jg
xor
test
add
clc
mov
adc
inc
or
ja
lods
mov
cmpsl
mov
inc
pcmpgtd
or
xchg
and
mov
shl
outsl
out
shrl
punpckhwd
leave
or
or
sub
dec
punpckhbw
enter
rcll
ja
pop
mov
or
jbe
push
mov
or
jne
adc
shl
xchg
xor
push
ret
adc
mov
aam
hlt
or
divps
pop
or
xchg
sub
and
dec
or
sub
xlat
ret
push
mov
push
sarb
roll
cmp
and
dec
or
rcll
ret
rorl
popf
or
js
es
sbbl
mov
or
not
xor
xchg
paddd
mov
movsb
jl
inc
ret
push
mov
push
xor
inc
movsb
adcl
xlat
add
shlb
test
out
or
shll
mov
mov
out
into
insb
ljmp
xor
push
imulb
push
xchg
sbb
dec
xlat
jle
bound
add
ss
loope
test
mov
pop
push
inc
orl
push
mov
inc
repnz
sti
adc
stos
xchg
mov
ror
add
push
or
lods
mov
jnp
inc
push
sbb
and
mov
cmp
adc
stos
inc
xor
push
mull
in
push
in
lods
inc
pusha
in
push
xchg
add
inc
mov
inc
mov
outsb
lret
push
shl
das
push
ljmp
dec
cmovo
dec
jbe
add
jnp
not
or
subb
mov
pop
stc
shl
stc
clc
adc
lret
xchg
mov
push
cmp
ja
sub
arpl
call
lret
stos
mov
inc
push
adc
inc
roll
xchg
int3
es
outsl
mov
pop
sub
testb
pop
pop
nop
int3
adc
mov
xor
xor
call
or
and
nop
cmp
int3
subb
xor
aam
or
cmpsl
in
push
pop
scas
out
add
pushf
out
movsb
pop
or
sahf
int
gs
into
add
iret
lcall
adc
push
aad
enter
add
or
adc
jmp
push
mov
fstpt
ret
jecxz
and
imul
rcll
add
or
or
jne
sti
sbb
and
mov
sarl
pop
dec
rcrl
jg
dec
inc
nop
das
imul
jbe
push
push
scas
push
dec
rolb
stos
bound
push
mov
pusha
mov
aad
bound
repz
xlat
cmc
scas
mov
xor
jmp
or
or
mov
add
and
andl
shrl
lods
movsb
and
mov
out
mov
add
subl
sbb
cmp
les
in
mov
inc
sub
ret
movsb
daa
or
sbb
sub
in
addb
pushf
mov
shl
lea
or
mov
add
mov
fimull
mov
or
loopne
cmp
pop
mov
aas
stos
les
or
add
aam
pop
loopne
and
pop
mov
mov
mov
into
in
out
or
sub
dec
add
test
push
or
or
pop
sahf
std
fwait
mov
addr16
clc
mov
adc
add
mov
mov
mov
xor
mov
mov
mov
mov
xorl
add
nop
mov
test
mov
mov
mov
aad
mov
mov
mov
fsubrl
inc
lea
dec
jle
xor
enter
fcmovb
sbb
les
int3
mov
jp,pt
cmp
jl
push
mov
cmp
insl
dec
in
scas
lea
sub
sbb
pop
and
lea
jb
pop
pop
sbb
scas
mov
mov
mov
ja
insl
xor
in
mov
inc
mov
add
pushf
and
jg
cmp
lods
lods
ja
jo
lea
insl
dec
cld
pop
int3
imul
jp
sub
mov
int3
mov
clc
cs
jnp
and
cmp
lods
or
out
in
in
jnp
pop
clc
daa
mov
xorb
cmp
cli
dec
push
sarl
cmp
add
int3
scas
movsb
sbb
vmwrite
mov
mov
and
cld
stos
sbbb
adc
xor
mov
or
xchg
flds
fadds
jno
cmpsb
mov
mov
add
jecxz
cltd
adc
movsb
inc
dec
stos
dec
mov
popl
pop
jne
int
mov
and
aaa
xchg
stos
mov
sbb
js
add
push
mov
or
inc
mov
int
enter
imul
loopne
mov
insl
mov
mov
stc
jmp
movsb
add
in
mov
addb
push
lds
or
add
lds
or
movsb
push
push
and
dec
in
xchg
movsb
adc
out
inc
jecxz
clc
movsl
adc
mov
and
push
xor
xor
in
mov
mov
aaa
xlat
mov
sbb
nop
sbb
inc
in
push
mov
movsb
pop
or
lret
ljmp
xor
loopne
hlt
sbb
ljmp
or
fsubp
sbb
mov
test
xorps
bound
imul
add
push
cmc
stos
je
int3
and
xchg
pop
out
pop
call
jge
cmp
pop
mov
mov
inc
testb
jbe
add
ret
add
jecxz
add
xor
aam
fidivrs
mov
xchg
push
out
lea
lea
xchg
testl
std
add
ss
mov
push
inc
or
or
and
daa
movsl
outsb
mov
mov
mov
inc
ljmp
sub
sbb
cmpsl
mov
les
push
push
xor
mov
les
stc
fmull
xor
xor
and
repnz
je
mov
stos
orl
mov
mov
mov
push
mov
mov
stos
les
not
cmc
xchg
dec
mov
cmp
mov
ljmp
daa
cmp
fdivr
jl
nop
std
bound
pop
mov
xchg
fldl
ficomps
mov
cmp
mov
jg
mov
imul
mov
fisubl
mov
movsl
test
movsb
or
andb
repnz
call
xor
cmc
push
and
pushf
inc
or
cmpsb
push
push
aaa
add
and
ret
ud2
pop
dec
cmpsb
lret
cld
les
and
add
loopne
and
iret
or
dec
movsl
int
add
insl
arpl
subb
stos
shl
rorb
addl
call
rorb
inc
mov
stos
add
jecxz
scas
int
lret
test
pop
add
subb
jmp
xor
mov
sub
lea
andl
arpl
in
scas
ja
das
cli
lds
mov
dec
mov
movsb
lret
add
mov
or
mov
mov
push
dec
testb
xchg
pop
add
movsb
rorl
dec
scas
shlb
mov
push
aad
push
mov
mov
rorb
mov
mov
call
into
mov
push
ss
ret
add
push
mov
pop
movsb
sbb
mov
test
push
add
orl
test
xor
cmp
iret
xorb
xor
xchg
and
add
stos
rcr
lret
mov
movsb
xchg
or
adcl
inc
adc
mov
xchg
cmp
in
add
mov
xchg
or
stos
cmpsl
aad
rcll
dec
xor
and
lds
mov
push
add
shll
xchg
repz
outsl
add
es
adcb
fnstsw
sbb
mov
lahf
ror
and
dec
vcvttss2si
loope
arpl
or
dec
out
cld
addl
stos
imul
loope
pop
outsl
mov
pop
mov
push
out
ret
int3
or
mov
or
hlt
adc
jae
shr
jno
mov
movsb
xor
loop
in
and
daa
ret
adcb
mov
jbe
insb
frstor
pop
mov
out
mov
in
add
mov
test
pop
mov
aas
push
mov
out
dec
cmpsb
add
andb
mov
addb
jmp
mov
shlb
push
lea
mov
leave
mov
bound
js
mov
mov
std
dec
in
imul
arpl
mov
mov
ja
add
xchg
fildl
lds
xor
and
pop
adc
cld
xchg
fsub
loopne
push
mov
cmpsl
dec
out
inc
mov
inc
xchg
push
ja
movsb
pop
xchg
inc
mov
arpl
mov
jb
int3
sbb
addr16
mov
imul
ret
ljmp
out
loope
cmpsl
imul
push
gs
push
add
jmp
jno
scas
leave
xor
icebp
fisttpll
sbb
inc
lret
lea
ljmp
dec
mov
das
jae
mov
mov
mov
enter
es
mov
ss
test
bound
fbld
fsubrl
loop
mov
mov
xchg
and
mov
lods
lea
mov
add
nop
mov
shr
inc
andl
outsl
sbbl
mov
inc
jecxz
and
add
pop
add
mov
sub
fadd
push
push
lods
and
je
add
addl
adcb
jbe
ljmp
in
lock
add
in
xchg
mov
sub
adc
push
fwait
les
mov
jo
dec
stos
movsb
xor
ret
les
rcl
lret
mov
aam
loop
in
cmpsl
pop
fs
stc
cld
aas
push
xrelease
adcl
add
push
mov
imul
dec
push
das
outsl
sub
xchg
push
mov
xor
or
xorl
inc
fbstp
negb
and
xorl
pop
pop
add
xchg
add
mov
test
rorb
jo
mov
outsl
dec
and
cmpsl
out
inc
add
bound
pushf
cld
leave
xor
rolb
iret
cmpsl
loop
arpl
in
shll
adc
sub
daa
add
cmpl
ds
jg
mov
rcl
dec
mov
sub
aad
and
lock
lods
add
inc
mov
and
and
in
cmpsb
mul
mov
xchg
fcoml
loopne
inc
dec
scas
mov
mov
add
adc
add
cltd
jmp
pop
cmp
aam
push
inc
cmovae
and
mov
iret
in
mov
jae
add
cmp
popf
or
adcl
cmpsl
jnp
adc
sbb
sub
mov
cmp
rorb
pushf
enter
stos
mov
xor
fimull
mov
int3
pushf
repnz
xchg
mov
idiv
roll
aaa
aam
imul
insl
xchg
mull
and
push
xor
in
dec
ret
jo
jmp
sbbb
and
testl
jnp
lods
pushf
pop
xchg
inc
bound
idiv
xchg
add
pop
and
mov
arpl
sahf
and
inc
test
add
enter
orl
sub
mov
mov
pop
arpl
fmul
fwait
lods
mov
cmc
xchg
daa
mov
jns
push
cmpsl
ss
inc
push
adc
daa
les
mov
in
and
scas
dec
aas
cmpsb
push
stos
jae
orb
ret
pushf
push
pop
mov
pop
rorb
mov
xchg
sub
mov
test
mov
scas
push
dec
mov
lea
push
mov
addr16
dec
ss
and
add
les
xorb
xchg
xorl
sti
xchg
xor
xchg
ret
push
mov
test
xchg
add
mov
addl
mov
paddq
into
aam
divl
dec
xor
in
or
push
add
or
and
adcl
in
sbb
into
dec
repnz
jecxz
mov
or
ret
jp
std
fadd
fmull
mov
aas
cmp
pop
mov
sub
mov
jecxz
mov
xor
add
test
mov
in
aam
std
or
iret
bound
mov
xor
mov
inc
inc
rorb
popa
imul
rorl
mov
or
mov
sbb
adc
and
sysenter
adc
orl
fistpl
shrl
fistpll
xchg
mov
xchg
and
arpl
rorb
sbb
cli
sbb
adc
pushf
xor
mul
clc
add
cmpsl
rol
dec
and
iret
dec
mov
lahf
mov
mov
cwtl
cmp
das
xchg
sub
repz
in
pushf
xor
movsb
imul
fs
movsl
xchg
sahf
mov
dec
mov
or
in
xchg
int3
hlt
mov
xor
int3
and
pushf
cmp
sub
incl
push
and
mov
add
scas
xchg
jl
in
mov
fldt
cmpsl
daa
mov
add
inc
lock
lods
push
or
movsb
psubsw
jl
pcmpeqw
mov
lods
mov
and
rorb
add
cmp
lahf
dec
mov
shlb
or
fnstenv
lods
xchg
cmp
xor
repnz
and
cmpsl
popa
dec
je
mov
mov
cmp
push
nop
mov
sarl
icebp
or
xchg
mov
clc
add
sbb
movsb
into
mov
mov
xor
and
mov
mov
shl
or
mov
add
cli
mov
andl
adc
add
dec
add
fimull
inc
repz
mov
add
das
imul
lods
scas
int
in
lret
ds
ret
mov
repz
mov
xorl
adc
cmpsl
in
mov
or
ja
rolb
xchg
push
orl
and
in
or
cmpl
les
jae
dec
or
fucomi
xchg
insb
pushf
movsb
dec
das
int3
mov
and
daa
inc
or
cld
xchg
mov
andl
out
cli
movsb
mov
test
jmp
lods
xor
mov
jnp
inc
or
ret
jmp
xchg
sarb
repz
xchg
or
int
call
ljmp
mov
cs
add
xor
bound
adc
mov
and
sub
maskmovq
cmp
cs
fisttpl
cli
xor
ret
fists
pop
mov
mov
lock
mov
xchg
xor
scas
fldln2
test
add
mov
rcrb
add
popa
ja
inc
adcb
adcl
out
jnp
xorl
and
ss
or
in
xchg
pop
mov
mov
xorb
int
dec
mov
sub
xor
cmp
orl
add
mov
pushf
dec
xchg
call
jae
push
xor
sbb
ret
mov
lods
and
test
mov
xlat
mov
jecxz
or
repz
popf
sub
test
mov
test
lret
mov
ja
lea
mov
fdiv
rol
mov
cmp
adcb
ret
cmpsl
adc
mov
xchg
cmpsl
and
subl
mov
fadd
xchg
pop
mov
scas
cmp
dec
and
jnp
movsb
mov
les
dec
cmpb
jecxz
mov
jle
cmp
ljmp
hlt
push
cwtl
lods
mov
xor
or
xor
mov
adc
push
dec
xorb
inc
mov
testl
cmp
sub
roll
stos
xorb
outsl
push
sub
mov
xchg
loop
mov
loope
stos
in
mov
ret
jle
xor
int3
subb
lds
xchg
pusha
inc
mov
aas
dec
and
out
ret
ljmp
pushl
xor
cmpl
cmpsl
mov
pop
mov
cmovae
jmp
lods
cmpsb
add
aam
enter
popf
mov
cmpsl
xchg
push
sbb
mov
mov
aad
iret
lret
movl
dec
loope
add
add
nop
into
shlb
xchg
hlt
mov
shlb
dec
push
ret
ja
mov
jo
cli
mov
rolb
sbb
sbb
add
adc
add
mov
inc
negl
pop
jne
ret
pop
and
imul
hlt
lods
add
mov
scas
xchg
in
sbb
xchg
lods
sahf
add
inc
or
movsb
xchg
dec
in
add
push
enter
iret
lods
mov
cmpsl
addl
test
inc
mov
test
aas
jmp
sbb
leave
mov
sub
lods
sub
cmp
test
pop
mov
addr16
stos
jno
scas
cld
mov
dec
scas
add
cwtl
and
rcrb
aam
xor
rep
in
into
dec
mov
call
aaa
mov
and
add
pop
and
mov
ret
cmp
inc
lcall
xchg
xor
adc
imul
dec
mov
cmpsb
int3
call
xchg
mov
mov
filds
popa
clc
jge
mov
sub
rolb
add
pusha
leave
push
loop
xchg
je
add
scas
aad
insl
loop
and
xor
outsb
sub
shll
jns
xor
or
in
xor
stos
jl
xlat
cmp
mov
push
xorb
loop
or
jecxz
sbb
vmaxps
cmp
into
jmp
insl
xchg
repz
push
jecxz
icebp
jbe
xlat
mov
mov
daa
or
imul
les
mov
and
pop
je
rol
sbb
dec
mov
cltd
mov
sarl
nop
xchg
dec
sub
dec
or
js
aas
mov
jg
add
mov
push
mov
lret
orb
ret
and
push
imul
aam
xchg
xorl
shll
fs
push
push
in
je
adc
out
cmpsb
or
sub
mov
pusha
movsb
lods
xchg
push
daa
in
sub
aaa
sub
popa
add
lret
mov
out
sub
es
jmp
scas
pop
lods
je
dec
mov
daa
xchg
mov
jmp
pushf
adcb
in
mov
lods
mov
clc
xlat
icebp
add
cmpsl
movsl
fwait
add
rorl
or
push
add
loopne
pop
add
mov
dec
testl
outsl
fmull
pusha
iret
and
inc
xchg
push
pop
mov
add
cld
fs
sbb
repnz
lret
stc
pusha
pop
push
gs
idivl
sub
mov
inc
push
test
adc
mov
inc
out
in
pop
cmp
xlat
fwait
rolb
mov
mov
sub
out
inc
ljmp
andb
scas
jno
subl
ret
mov
mov
jecxz
cmp
push
and
push
inc
rcpps
xchg
daa
das
and
dec
mov
jmp
or
dec
ja
mov
xor
add
popa
add
xor
xor
and
mov
add
add
in
lret
scas
roll
mov
cwtl
and
out
mov
mov
insl
push
jae
out
pop
inc
rsm
leave
push
pop
cmpb
cmp
les
pop
mov
addb
push
cs
xchg
out
movsl
mov
mov
xor
cmpsb
dec
stos
sub
int
jg
push
pop
or
aas
pop
pusha
loope
add
mov
syscall
fmull
ffreep
rep
lods
xor
in
andb
xchg
fs
lea
jl
adc
cld
stos
faddl
movsb
cmp
xor
and
loopne
daa
rcrl
bound
pop
push
aad
test
add
xor
and
pushf
add
in
mov
imul
xchg
rcrl
js
testl
test
adc
outsl
add
xorb
sbb
stc
mov
mov
push
jne
ret
or
in
adc
add
orb
aaa
into
mov
cmp
lea
pushf
add
fs
das
push
dec
xor
mull
fistl
cmp
push
mov
in
and
dec
leave
mov
adcl
gs
mov
push
cltd
mov
sbb
mov
lods
lea
mov
sub
xchg
imul
mov
leave
cmpsl
mov
mov
loope
mov
das
stos
mov
fdivr
adcb
push
push
cmpsl
xchg
bound
xchg
mov
push
add
mov
sub
fnstcw
pop
and
or
js
xor
mov
inc
mov
jle
mov
mov
faddl
add
lret
jo
push
repz
pop
test
movsb
push
loope
jl
test
in
sbb
mov
cmpl
mov
stos
mov
les
add
jcxz
addl
add
fdivl
add
arpl
mov
icebp
out
jge
aad
data16
nop
cli
or
xchg
xchg
int3
sub
fists
lret
int
mov
push
or
orb
lret
or
sub
mov
popf
or
lahf
fcmovnb
xchg
outsl
aam
cmpsl
sar
push
xor
int
stos
push
adcb
or
xchg
scas
dec
hlt
sbb
or
das
mov
leave
and
shlb
rorb
cs
shr
xor
pop
popa
jo
and
loopne
movsb
pushf
mov
ret
clc
andl
imulb
sbb
fsubrl
cmpb
shll
push
and
mov
or
inc
xchg
push
inc
mov
and
xor
es
xchg
movsb
jnp
and
push
int3
inc
xorb
push
sub
in
arpl
adc
cmp
out
lods
mov
fldenv
sbb
xchg
repz
add
notl
push
mov
shl
jb
xchg
mov
imul
inc
mov
pusha
pop
subb
int3
and
mov
mov
int3
xchg
cmp
adc
ja
mov
inc
xchg
add
push
dec
shlb
dec
les
xchg
add
xchg
lods
lds
sahf
or
mov
push
lret
mov
test
loop
ret
cmc
adc
or
push
xchg
mov
mov
mov
ret
cmpsl
orl
lock
sub
and
in
fs
mov
hlt
enter
sbb
stos
add
xchg
clc
lds
pop
add
sqrtps
sbb
and
xchg
push
and
dec
mov
push
mov
xchg
mov
mov
mov
cmp
mov
repz
arpl
movsb
jle
aad
les
ret
jnp
fildll
cmp
add
out
push
lock
inc
arpl
push
mov
cmovnp
xor
mov
or
or
rorl
mov
jb
shl
adc
shlb
popa
mov
cmpsb
xor
shlb
cmpsl
and
xor
movsl
add
mov
mov
mov
or
dec
push
mov
test
rol
aas
inc
stc
mov
xor
lods
repnz
daa
enter
outsb
addb
dec
cmpsb
fbstp
orb
ja
mov
repnz
loope
mov
push
in
jge
ror
xorb
aaa
inc
push
xor
iret
xor
add
scas
push
push
cmovnp
stos
or
lock
cmp
and
insb
xor
add
rolb
xor
addb
or
std
stos
mov
call
lea
xor
mov
subb
add
mov
adcb
sti
adc
lods
add
gs
lret
movsl
rolb
or
push
adc
mov
or
push
jne
mov
cmp
outsb
xchg
xchg
and
repz
and
test
push
mov
sub
les
pop
add
inc
jge
outsl
adc
les
aas
movsb
es
pop
xor
adc
mov
fmull
xor
ret
cmp
insb
or
std
and
mov
int3
addl
add
lods
inc
push
xchg
popa
ljmp
mov
dec
movsb
dec
xor
add
fbld
shrl
and
xchg
add
xchg
cmp
fnsave
popa
jl
and
outsl
jecxz
mov
mov
xchg
mov
aaa
sbb
mov
and
insl
in
push
popa
xchg
dec
ret
hlt
movsl
data16
push
and
xor
sti
jne
and
das
xchg
int3
adc
nop
repz
jl
cltd
aam
sub
jbe
cwtl
mov
mov
mov
aam
xchg
mov
adc
loope
movsb
add
in
aam
mov
adc
outsl
cmpsl
leave
inc
xchg
stc
add
movsb
sbb
pop
in
add
les
sbb
lock
sbb
imul
mov
push
jns
fucomp
movsb
les
add
pushf
cltd
jl
dec
aaa
inc
or
repz
mov
add
loop
ret
and
fstps
fidivl
fistpl
and
inc
jecxz
mov
cwtl
orb
cs
sbb
imulb
hlt
or
fwait
mov
lds
sbb
jnp
cld
add
fdivrs
push
push
add
jecxz
lcall
stos
inc
fdivrs
mov
jmp
int3
and
loop
xor
pushf
cmp
outsl
mov
cmpsl
subb
cmp
inc
mov
or
int
fs
arpl
comiss
imul
ljmp
movsb
cmpsb
sub
lea
leave
add
ret
add
hlt
popa
push
cmpsb
in
xchg
add
test
icebp
cltd
pop
mov
lock
ja
insl
fsub
rcrb
xchg
mov
push
xchg
adc
loope
cld
sbb
inc
lock
cwtl
dec
cli
fxch
dec
add
in
pop
fs
sbb
popa
fcmovne
loop
adc
syscall
or
mov
sub
das
sub
jnp
xlat
aam
ret
add
and
push
movsb
xorl
fdivrs
int
mov
leave
dec
push
fucomip
add
jo
push
movsb
clc
ds
xchg
das
and
push
cmp
jo
mov
shll
and
and
xor
pusha
push
add
es
sgdtl
pusha
out
mov
in
push
mulb
xchg
mov
gs
lret
xor
das
mov
lods
fsubrs
dec
out
aad
faddl
test
sbb
fildl
les
or
inc
stos
dec
fdivrl
addr16
pushf
add
sub
add
fs
fsub
add
xchg
mov
mull
lods
in
mov
adcb
xchg
sti
lcall
add
or
sub
and
iret
lret
mov
xor
inc
inc
test
xchg
int3
sub
dec
jmp
ror
leave
dec
sub
push
push
test
push
scas
fidivl
lret
xchg
pop
negl
pushf
fsubs
faddl
test
dec
in
js
les
fidivl
jns
dec
pushf
stc
xor
nop
jl
les
sbbl
std
or
add
aas
icebp
or
mov
cmp
cmp
leave
adc
stos
repnz
add
pusha
mov
sub
cmpsb
inc
and
stc
bound
cmp
or
ss
add
pop
inc
xor
cltd
lret
mov
xchg
add
xor
mov
push
orb
xchg
js
mov
jge
bt
jle
adcl
pop
hlt
dec
xor
std
jae
out
xor
popa
mov
rorb
mov
arpl
test
or
add
jnp
or
xchg
insl
and
or
add
jg
mov
ljmp
out
orl
bound
int
out
or
mov
jecxz
insb
inc
mov
cmpsl
mov
add
imul
mov
jge
jbe
xchg
jg
cli
out
gs
cmp
pop
mov
out
pushf
mov
or
mov
arpl
iret
das
mov
mov
and
loopne
sub
push
addl
xlat
xchg
ljmp
mov
test
add
aaa
or
or
xchg
cs
and
jl
xchg
fsubs
ret
xchg
mov
cwtl
les
xchg
xlat
gs
mov
mov
push
xchg
mov
loopne
test
jecxz
push
cmp
and
testb
mov
in
xor
and
mov
xchg
sub
xchg
and
add
mov
inc
cmpsl
mov
cltd
in
xor
stc
pusha
test
xchg
in
fildll
lea
adc
out
shll
xchg
jg
iret
sti
dec
in
and
and
and
in
popf
xor
or
imul
dec
mov
lods
sub
js
dec
stos
bound
scas
in
or
in
mov
in
fmul
test
mov
xor
mov
add
test
add
push
and
xor
sbbb
and
fsubrs
scas
add
xchg
mov
out
dec
pusha
dec
mov
push
fs
xchg
inc
insb
je
pop
mov
and
add
out
cmp
clc
out
test
adc
bound
push
cmc
hlt
dec
mov
push
and
push
lods
jno
adc
push
lock
shll
aaa
cli
inc
cmc
cmp
mov
flds
cmpl
jecxz
xor
mov
sti
mov
jne
stos
stos
sarb
jo
aaa
mov
inc
jecxz
scas
loop
and
movsl
xchg
fldcw
jnp
or
jp
lcall
sbb
xor
scas
xchg
mov
push
dec
mov
xchg
shlb
xchg
jle
dec
jae
mov
mov
ret
mov
jp
cmpsb
fimull
mov
into
and
mov
inc
jnp
push
aad
xchg
dec
loop
in
and
jae
roll
arpl
das
and
adcl
push
mov
lahf
jbe
fwait
dec
add
mov
rorl
mov
ficoms
mov
int3
shrl
xor
and
fdivrs
out
xor
nop
and
cmpsb
xor
mov
xorb
pop
mov
add
in
lcall
cld
push
dec
clc
rolb
je
push
and
shrb
jnp
jmp
loopne
imul
pushf
or
adc
leave
mov
mov
xchg
ds
add
lret
repnz
test
jae
pop
fcomps
xchg
xorl
mov
xor
gs
jg
jno
aas
test
adc
adc
mov
sub
je
and
bound
mov
cmpsb
sub
enter
mov
mov
sbb
and
push
das
sbb
les
xchg
nop
push
push
lret
jbe
ret
mov
out
jo
jae
ds
rep
dec
in
jg
add
xor
push
in
ret
std
mov
cli
mov
push
ds
orl
add
outsb
jl
and
sbb
xor
aam
add
cmc
mov
push
pop
mov
or
and
imul
in
cmpsb
push
inc
mov
ret
push
stos
nop
xorl
add
and
inc
shl
mov
sub
dec
adc
call
or
sti
dec
inc
shll
inc
frstor
popf
adc
xchg
inc
mov
loopne
fcmove
sub
into
mov
jo
aam
out
das
xor
xchg
and
incb
sub
gs
pushf
jne
and
mov
inc
push
or
mov
arpl
out
add
pop
xchg
iret
cld
imull
ret
cmp
aam
mov
xor
lret
nop
adc
nop
push
push
sub
subb
fcoml
andb
or
incl
mov
ret
or
xchg
ljmp
add
fwait
shr
jl
push
loope
mov
insb
add
lods
mov
in
sub
je
cld
mov
bound
or
das
jmp
roll
xor
in
or
in
push
xor
xchg
and
xchg
cltd
outsl
push
clc
mov
fdivrs
jne
xor
addl
roll
int3
mov
aas
adcl
push
cmp
ret
xor
mov
add
lret
mov
in
in
lods
xorl
add
insl
xchg
mov
scas
cld
imul
addr16
in
out
stos
or
flds
and
mov
out
fcompl
inc
cld
dec
pop
movsl
add
xor
imul
dec
mov
bound
movsb
xorb
insb
hlt
add
push
popa
cld
es
ja
inc
add
or
cltd
mov
mov
xchg
jl
test
xchg
clc
je
ljmp
out
jnp
cmc
cmpsl
fwait
gs
std
add
xchg
ret
bound
mov
lods
add
jne
ljmp
fwait
cmp
sbb
idivb
popa
dec
inc
sbb
or
xchg
out
xchg
arpl
pushf
xor
mov
mov
and
idivl
ja
rcl
mov
mov
jg
push
movsl
idiv
aas
dec
xor
jg
mov
das
rorl
and
cli
and
das
adc
inc
inc
xor
add
jge
cmp
out
dec
xchg
push
lcall
cmpw
les
les
xor
sti
hlt
push
lcall
mov
fstp
xlat
xchg
inc
or
movsl
dec
cmpsl
xor
push
xlat
fldenv
mov
sub
and
shrl
shll
lods
mov
xchg
inc
push
xchg
fdivrl
mov
jns
lret
or
lret
in
mov
movsl
and
in
xchg
add
dec
mov
add
fwait
repz
in
add
or
fidivl
dec
mov
stos
test
xchg
xor
test
jmp
jne
stc
jne
dec
lcall
mov
std
ljmp
popf
jle
mov
jecxz
push
shl
mov
mov
jo
aam
push
add
sti
mov
arpl
xchg
mov
cli
sub
cmp
xchg
in
mov
aam
les
addl
mov
mov
fsubs
dec
xchg
mov
fbstp
scas
xchg
dec
lods
sub
hlt
daa
mov
and
and
int3
out
push
cmpsl
pop
pushf
push
aam
xchg
je
gs
mov
aam
repz
out
add
mov
mov
dec
das
in
faddl
pop
mov
cmp
out
jae
mov
mov
cld
xchg
xchg
sub
cmpsb
mov
cmpsb
popw
mov
lret
lods
fidivrl
xchg
pand
cs
aam
sqrtps
adc
xor
mov
pop
int
sub
mov
jnp
mov
outsb
ret
jns
jb
iret
xor
mov
nop
test
shrb
add
ds
add
stc
enter
shlb
ret
pushf
subl
in
jmp
xor
sahf
cmc
mov
sub
and
add
cmc
jo
outsl
call
mov
mov
sub
mov
xchg
rcll
and
into
sub
push
jecxz
dec
out
test
pushf
insb
scas
stc
xor
push
repz
xchg
add
push
ss
icebp
dec
in
mov
mov
inc
popl
jnp
or
roll
add
mov
xor
clc
cmp
and
cmp
out
cli
mov
ret
xor
stos
arpl
sub
aas
shrb
or
pop
lret
test
dec
adc
stos
dec
pop
ret
adcl
imul
aas
lcall
cs
xor
fadd
mov
adc
arpl
repz
adc
in
lods
into
pop
leave
iret
ret
in
imul
bound
repnz
xchg
inc
push
inc
xor
pop
idiv
adcl
mov
pushf
adc
sbb
movsl
xchg
aaa
add
cmp
das
jmp
nop
mov
mov
dec
mov
add
xchg
add
mov
mov
add
fimull
scas
and
push
add
aam
xchg
xor
scas
aaa
xchg
and
xlat
lods
push
adc
stos
loop
lret
push
xorl
mov
gs
sub
jns
movsb
shr
inc
or
jg
xchg
add
mov
into
int
mov
pop
shll
add
inc
hlt
add
push
mov
push
jno
aaa
je
xchg
and
push
jne
adc
sub
clc
xchg
lods
outsb
or
subl
pop
sub
cmpsl
push
add
sub
sarl
cmp
mov
test
push
add
in
xchg
loope
or
push
mov
je
and
divl
add
jo
sub
outsb
push
shrl
fwait
outsl
fwait
scas
mov
addl
lret
cmp
cmpsb
push
cmpsl
adc
insb
push
dec
adc
mov
ljmp
jno
mov
push
lods
and
ja
add
mov
test
test
sahf
lods
push
add
jmp
repnz
stos
rolb
lcall
adcl
js
sbb
lcall
insl
cmc
pop
cmpsl
mov
adc
movsl
lods
cmp
mov
ret
daa
in
sbb
xor
dec
hlt
roll
loope
sti
inc
lsl
movsb
sbb
pop
dec
inc
xchg
outsl
dec
in
sub
ret
pop
mov
icebp
stc
xchg
enter
or
mov
mov
repnz
movsl
lods
test
gs
and
out
mov
out
mov
jns
dec
inc
cltd
imul
nop
sub
ret
pop
mulb
std
and
dec
mov
cmp
jmp
inc
inc
sbb
daa
mov
xor
adcl
push
cmp
mov
xor
jns
icebp
mov
outsb
push
mov
or
lret
cmp
mov
inc
inc
push
inc
mov
mov
cld
jne
cmp
cmp
stos
mov
lods
pop
dec
hlt
mov
adc
gs
dec
pop
lret
aam
call
xchg
add
lret
cmp
cmpl
mov
test
testb
xchg
jae
and
xor
xchg
or
adc
sub
addl
xor
subb
sbb
call
or
add
push
loopne
out
and
push
out
mov
lret
hlt
add
mov
test
scas
repz
and
pop
pop
cmpb
push
add
dec
or
xor
push
loop
mov
adc
cmc
adc
lock
andb
scas
imul
lret
xchg
sub
jnp
xor
mul
cmpsl
push
fsts
sub
inc
loop
cltd
movsl
cmp
ret
in
fnsave
dec
xchg
sub
jno
stos
cmpsl
adcl
shl
sub
bound
push
loopne
or
rclb
jg
xchg
jo
mov
mov
push
dec
out
fcoms
mov
les
xchg
add
movsl
test
or
movsb
stos
mov
cmp
mov
sub
add
cmp
jmp
stos
mov
dec
sub
dec
test
scas
fisttps
icebp
inc
das
xchg
and
xorl
fcmove
jecxz
jne
xor
aam
mov
mov
sbb
lret
andl
fadd
push
mov
adc
dec
mov
xchg
mov
push
inc
mov
mov
lret
and
incl
add
les
loopne
add
fistpll
mov
jmp
mov
adc
out
mov
xor
mov
mov
mov
push
mov
mov
add
add
add
jmp
mov
mov
xor
add
idivl
mov
fisubs
loop
out
mov
lahf
jbe
cmpb
in
or
xor
shlb
cmp
cmp
sbb
mov
adc
mov
repz
mov
xchg
or
rcrl
sbb
int
cmpsl
dec
ret
mov
test
out
out
sbb
adc
mov
lods
add
cli
mov
arpl
mov
lods
fidivrl
cld
movsb
push
ja
scas
int3
xchg
lods
xchg
call
mov
orl
mov
mov
icebp
fdivl
inc
xor
or
jg
pop
subl
dec
xlat
test
bound
push
clc
lret
dec
mov
enter
dec
bound
jns
ret
xchg
mov
popa
in
lea
or
mov
ljmp
xor
pushf
movsl
in
mov
push
dec
mov
mov
imul
lods
or
sbb
fadds
scas
jae
bound
arpl
xchg
sub
xchg
sub
sub
into
xchg
int3
and
add
sub
ret
sbb
scas
int
mov
mov
fisubrl
pusha
cmpl
mov
cmc
shlb
loop
xor
jb
push
mov
sbbb
fildl
nop
imul
mov
pop
faddl
dec
sbb
mov
xchg
hlt
arpl
dec
inc
movsl
and
inc
xchg
cmp
movsl
shlb
mov
push
lods
and
ret
xchg
rcr
in
lss
sti
and
shll
mov
xchg
adc
jmp
ret
cmp
jne
or
cmpb
and
push
cmpsb
stos
movb
into
test
and
addr16
jne
les
inc
sti
inc
mov
dec
int3
add
fwait
mov
xchg
cmpsl
movsb
das
mov
adcl
mov
mov
lcall
or
fcmovb
push
cltd
and
repnz
add
aaa
xor
or
addr16
testb
stos
adc
test
icebp
xchg
jnp
dec
jmp
mov
jae
rep
push
push
addb
or
ret
or
or
add
jne
jne
out
cmp
pop
smsw
stc
aas
into
int
lock
sub
dec
imul
rolb
sbb
aaa
fsubs
lods
sub
jecxz
shrd
loopne
xchg
mov
test
out
xor
call
es
jle
jnp
leave
dec
adc
test
mov
daa
ljmp
loopne
rol
fcomp
lcall
inc
shll
movsb
push
out
enter
testb
mov
sarb
jg
xor
cmp
ret
mov
xlat
mov
iret
rorl
mov
or
idiv
xlat
mov
enter
mov
jb
sarl
mov
add
cmovl
jbe
je
shll
mov
mov
gs
cwtl
push
int
lods
mov
mov
jl
std
ljmp
or
lret
lods
mov
mov
aad
addb
out
and
orl
xor
cli
ret
pushf
cmpsl
stos
dec
imul
inc
or
lods
dec
push
ret
dec
mov
lea
ret
mov
or
sub
push
sub
negb
jle
adc
insb
ret
mov
mov
or
ret
push
sub
mov
xchg
mov
call
ss
adc
sbb
xor
lea
aaa
insl
mov
xchg
mov
mulb
mov
dec
xor
jg
imul
cltd
shll
xchg
dec
ja
std
outsb
hlt
arpl
clc
scas
lods
cmp
daa
mov
sahf
sahf
aaa
xchg
js
xor
sbb
ja
mov
aaa
rcrl
orl
lds
imul
sti
arpl
shr
cmp
pop
cmpl
nop
pop
or
push
inc
and
jl
and
pop
and
int3
sahf
dec
push
or
push
lea
sbb
push
xor
test
push
ja
cld
sbb
pop
xchg
cwtl
aad
lahf
in
stos
das
outsl
sti
fidivs
int
ja
dec
jle
mov
stc
lret
push
js
mov
rol
scas
popa
sub
into
mov
int
pop
lods
dec
fmull
lods
fcomps
stc
adc
into
mov
add
mov
add
adc
adc
or
repnz
jno
mov
push
cmp
sbb
inc
sbb
add
into
push
out
aas
inc
or
aas
mov
imul
mov
and
push
fnstcw
jno
aaa
in
subb
jns
mov
outsb
xor
bound
xor
insl
mov
push
dec
push
jne
add
sarl
jecxz
ljmp
pop
adcb
push
mov
xorb
scas
xlat
pop
ret
mov
mov
dec
push
hlt
xchg
push
dec
xor
lret
sub
mov
mov
mov
xchg
or
mov
loop
bound
sub
dec
ret
or
dec
imul
or
ret
sub
push
jg
mov
add
lods
add
das
cltd
out
lods
mov
sub
repz
repz
cmp
fistpl
in
ja
test
add
jae
mov
sti
scas
mov
test
mov
inc
rorl
sub
ret
jmp
ljmp
mov
push
or
aaa
mov
dec
popl
les
ret
add
jmp
lret
or
lret
ret
sbb
dec
dec
pop
push
mov
lret
xchg
jmp
inc
les
jbe
jl
movsb
icebp
nop
js
push
xchg
cmp
test
sub
js
ss
mov
push
dec
sub
or
out
or
ret
imull
in
xlat
push
lea
pop
cli
rolb
divl
or
xchg
popa
jbe
les
or
adc
mov
add
and
adc
or
stos
fwait
sub
loope
mov
pop
std
mov
xchg
stos
xchg
cli
ljmp
aas
mov
lock
stos
push
dec
dec
jns,pt
cmp
aaa
push
bswap
shr
aaa
and
andb
adc
dec
inc
or
mov
lret
outsl
test
or
out
sbb
add
in
neg
repnz
aaa
xlat
mov
push
mov
xor
sarl
mov
jno
jmp
pop
das
pop
sahf
in
rorl
and
or
aaa
mov
push
sub
js
inc
mov
outsb
aas
xor
int
jbe
add
std
add
dec
pop
rorl
pop
fisttpl
inc
jnp
xlat
add
mov
mov
and
jge
loop
les
jbe
hlt
adc
add
ret
sbb
cmpl
jo
lret
push
pop
adcb
adc
dec
fdivrl
mov
jl
mov
inc
sbb
push
jp
aaa
jno
rorl
mov
lret
repnz
dec
mov
in
outsb
les
adc
les
movsb
sub
mov
cmp
shrl
jmp
dec
mov
jp
jle
rorb
sub
ret
pop
mov
in
mov
out
mov
mov
int3
movsb
lock
cmp
test
mov
roll
cmpl
loopne
loop
mov
mov
scas
add
out
orl
ret
mov
ljmp
gs
push
aam
shlb
sub
shl
ret
mov
mov
or
cltd
roll
mov
cmovg
mov
jb
mov
mov
ret
fsub
faddl
fsubl
mov
pushf
sbbl
add
out
pop
outsl
and
pop
fidivs
ss
icebp
sbb
das
mov
push
jb
sub
inc
cli
xchg
in
stos
enter
sub
int3
adcb
mov
sub
repnz
jecxz
pop
cld
out
mov
jmp
leave
ljmp
sub
or
adc
and
add
sub
and
daa
aad
cmpl
js
inc
stos
push
clc
ljmp
xchg
leave
das
pop
fadd
add
xchg
xlat
rol
ret
pop
xlat
mov
pop
lods
pusha
xchg
dec
mov
inc
inc
sub
dec
clc
mov
int3
add
xchg
adc
mov
gs
fmull
stos
sub
xor
mov
ljmp
xchg
fsubp
sbb
daa
mov
push
pushf
insl
mov
orb
mov
mov
fnstsw
jb
lock
addb
int3
push
rol
xor
inc
add
mov
mov
andb
mov
shlb
adc
add
mov
add
mov
pmullw
or
and
roll
lea
ret
je
and
jge
test
movsb
data16
and
jecxz
add
roll
add
rclb
xorl
mov
rcl
repnz
insl
pushl
les
loopne
aas
in
mov
aad
mov
sbb
aam
mov
je
cmp
stc
scas
andb
rolb
loopne
sarb
sbb
daa
ljmp
jmp
rol
scas
stos
and
mov
into
mov
mov
shrl
sti
add
add
cmpsb
lods
push
iret
movsb
push
fldl
add
and
loope
inc
ljmp
add
orl
ret
arpl
mov
jecxz
ljmp
mov
addb
mov
andl
sti
mov
ljmp
jg
ljmp
mov
add
neg
ds
or
aam
scas
hlt
adc
sti
xor
xor
sti
shlb
pop
lods
sbb
subb
andl
test
mov
jns
fisttps
out
popa
nop
shrb
push
les
hlt
les
inc
or
push
or
in
or
in
xor
movsl
mov
mov
cmp
shlb
cmpsl
shll
ret
cmp
cmp
xor
mov
xor
mov
xor
xor
rorb
or
jg
or
or
or
mov
rolb
movsl
aaa
in
shlb
movsb
adcl
repz
enter
dec
cmp
mov
cld
cmpsb
movb
or
or
jle
sbb
adc
mov
ror
shlb
cmp
xchg
mov
dec
mov
or
adc
setp
outsb
shlb
movsb
push
imul
inc
mov
inc
mov
mov
xchg
movsb
test
ds
shll
dec
addb
sbb
cmp
mov
scas
cmpsl
sbb
cmpsb
mov
clc
fst
or
push
lret
fsubrl
dec
cmp
ja
dec
xorl
movsb
cmp
xor
mov
add
lret
pop
cmp
xor
inc
jbe
pop
push
repnz
add
mov
inc
lea
and
or
push
and
test
xchg
xor
cmp
push
jg
jl
mov
add
adc
movsb
xor
xor
xor
push
inc
push
shll
scas
imul
sub
jnp
xchg
adc
xlat
enter
pop
ror
rsm
dec
stc
jecxz
rorb
xchg
or
ret
and
inc
test
sub
dec
movsb
into
cmpsb
xor
ds
or
xorl
scas
add
iret
mov
or
dec
into
or
std
add
cld
cmp
sub
in
call
out
sub
inc
into
imul
mov
push
cwtl
insl
fsts
xor
out
xchg
mov
aas
scas
es
ja,pt
or
xor
jne
gs
int3
and
or
lods
int3
jae
roll
call
aaa
adcb
or
push
repnz
mov
scas
mov
fdivl
icebp
out
mov
orb
mov
repnz
cmp
push
lret
push
jbe
cmp
sub
cmp
repz
orb
inc
les
sub
arpl
mov
in
xor
mov
and
les
mov
movsb
mov
mov
lahf
les
adc
addl
add
adcb
mov
mov
and
cmpb
and
sub
in
orb
daa
scas
mov
mov
mov
xchg
out
jnp
mov
mov
movsb
imul
cmovg
in
dec
xor
adc
add
shrb
in
cmc
shll
or
out
pop
sbb
out
mov
rorl
mov
pop
sbb
pop
stos
pop
mov
mov
pop
pop
mov
pop
addr16
es
movsl
fsubs
mov
dec
test
insb
mov
push
insb
negb
insb
movb
add
jb
sbb
push
xchg
jb
call
cltd
pushf
clc
lcall
ret
daa
andb
and
xlat
and
and
and
and
and
lods
sub
jbe
jne
aam
jae
mov
push
insb
pop
insb
fldcw
cmpsb
insb
gs
inc
inc
arpl
dec
jb
sbb
adc
sbb
sbb
sbb
lds
add
add
xchg
rclb
lcall
roll
mov
es
cmpsb
adc
fisubs
add
mov
insb
in
call
dec
cmp
sbb
or
sub
dec
mov
insb
out
lods
in
and
ret
or
sub
dec
cld
inc
arpl
in
in
lea
ja
jne
pop
mov
dec
cmpsl
xchg
inc
xchg
insb
lret
daa
push
cmpsl
gs
iret
ljmp
int
lret
bound
sbb
rcrb
rcrl
rcrb
ficomps
mov
sbb
sbb
pushf
in
scas
xchg
dec
nop
or
rcrl
data16
add
xorl
mov
jne
je
jae
int3
fisttps
sahf
lds
dec
and
and
lods
out
add
lods
in
or
sub
dec
je
xchg
insb
mov
or
popf
or
sub
dec
daa
inc
push
sub
clc
sbb
add
inc
dec
mov
sbb
pop
add
stos
jo
sub
dec
jnp
movsl
inc
ret
lods
mov
sbb
adc
sbb
sbb
pop
sbb
mov
int
xchg
pusha
nop
scas
sahf
out
cmc
lret
xor
je
je
je
je
je
je
add
in
scas
push
imul
jo
inc
mov
jo
ds
adc
adc
adc
orl
das
imul
adc
pop
aas
pop
mov
pop
test
and
fildl
fmuls
mov
or
mov
xor
and
and
repnz
xor
mov
or
je
je
je
je
je
je
je
je
je
add
insb
adcb
jo
inc
jg
jl
stos
sub
cmpsb
cmc
and
mov
jbe
push
and
jo
inc
rclb
adc
adc
and
and
movsl
cmc
int3
xor
je
je
je
je
je
je
je
je
je
sub
insb
sbb
or
out
les
outsl
or
jg
add
sbb
add
int
push
mov
inc
lea
sbb
push
pop
xchg
pop
jg
sub
fstpt
fstps
or
sysexit
push
jne
mov
cmc
in
xor
je
je
je
je
add
sub
mov
sub
je
je
je
je
add
and
adc
imul
sub
daa
fldcw
in
and
into
ret
stos
ret
pusha
adc
pop
sub
out
daa
mov
xor
jle
sahf
push
cli
and
jno
mov
lods
or
in
or
dec
shrl
add
int
in
inc
inc
les
lret
fmul
enter
jae
out
add
in
xlat
or
sub
dec
push
insb
jl
cmpsb
ret
add
cmpl
push
imul
mov
ss
push
adc
adc
adc
adc
push
int3
or
dec
clc
mov
or
push
adc
sbb
daa
push
push
and
adc
xchg
xchg
out
stos
mov
inc
orl
imulb
mov
or
add
ljmp
inc
inc
out
ret
mov
outsl
mov
push
fs
ss
cmp
cmp
mov
orb
cmp
test
dec
daa
icebp
adc
add
push
add
add
inc
push
adc
aaa
sbb
out
xor
mov
rorl
mov
out
gs
movsl
mov
shll
je
je
je
je
je
je
je
je
je
sub
mov
insb
cmp
cmp
cmp
daa
insb
cmpsl
insb
es
cmpsb
push
and
mov
xor
xor
xor
je
stos
push
cwtl
lds
aaa
dec
or
and
repnz
dec
movsb
xchg
jns
sti
adc
push
clc
lods
pop
mov
ljmp
lods
sbb
ds
cmp
pop
cmp
movsb
sbb
mov
push
push
mov
std
and
out
int
and
jle
jnp
popf
dec
insl
mov
sbb
xchg
xchg
inc
jmp
out
xchg
mov
ja
sub
mov
sbb
stos
arpl
stc
faddl
mov
gs
mov
jb
inc
movsb
xor
inc
sahf
fcmovnu
jg
lock
xchg
in
mov
out
fwait
int3
dec
pop
mov
int3
ret
xchg
dec
insb
dec
mov
mov
jne
push
call
push
rolb
not
mov
pushw
xor
push
leave
add
aaa
mov
enter
adc
mov
xchg
jns
loopne
sbb
mov
xor
ljmp
into
jge
mov
out
xor
xchg
scas
fdivrs
outsb
into
and
dec
mov
xor
paddd
push
enter
xchg
and
fldl
push
ja
lods
cmpsl
adcl
sbb
cld
dec
mov
fidivrs
sbb
lock
mov
movsb
fldl
push
pop
jns
adc
arpl
cwtl
cmp
dec
sbb
jns
dec
test
ljmp
cmp
cmp
mov
push
dec
test
rcll
mov
push
xchg
xorl
xor
push
xlat
sahf
lea
gs
xchg
addb
in
fstpl
push
clc
out
outsb
push
xorb
out
sub
or
jmp
jb
mov
lret
lds
xor
cmpsb
sbb
sub
add
shlb
cmpl
push
loopne
jle
mov
cs
insl
jle
cmp
inc
pushf
repnz
imul
mov
xchg
ss
push
mov
das
cmovno
sbb
pop
jle
es
mov
jecxz
jle
data16
or
dec
in
in
and
jae
out
mov
rolb
mov
mov
bound
xor
xorb
push
jbe
mov
mov
into
mov
arpl
andb
clc
jbe
dec
rorb
inc
jo
dec
mov
cld
cmc
mov
scas
pop
ud2
or
dec
add
mov
mov
mov
fwait
mov
jmp
loopne
mov
out
xor
ljmp
test
xorb
mov
inc
orl
subb
cld
xchg
orb
out
add
adc
pmaddwd
movb
dec
in
mov
mov
xorb
mov
icebp
mov
add
mov
mov
rorb
ret
push
mov
or
mov
mov
pop
mov
addb
add
lea
int
mov
mov
or
cmp
mov
sti
loopne
add
fdivl
mov
mov
movsl
mov
inc
orb
mov
rorb
shll
mov
les
js
das
push
xchg
mov
ret
cmpsl
mov
ret
loop
mov
mov
rorb
ret
and
add
mov
into
scas
mov
aaa
cmpsb
mov
movsb
mov
xor
mov
pop
shrl
mov
mov
mov
dec
adc
addr16
mov
mov
out
pusha
push
cmpsl
mov
movsl
mov
mov
mov
out
pusha
mov
and
adc
mov
mov
mov
out
pusha
mov
fldenv
in
ret
out
pusha
rolb
in
mov
bound
out
pusha
mov
and
adc
mov
hlt
mov
inc
and
daa
jecxz
mov
mov
and
adc
mov
mov
mov
out
pusha
mov
and
adc
mov
rcr
jecxz
fildl
adc
ljmp
mov
cmp
jecxz
daa
stos
into
cmp
stos
in
movsb
xor
mov
out
pop
xor
xchg
orl
add
sbb
movsl
leave
addb
ds
mov
add
movsb
cld
lea
or
imul
andl
les
xorl
loopne
inc
cld
mov
or
movsl
andl
cmpb
mov
jge
orb
mov
mov
enter
addl
or
mov
xor
add
xorb
cmc
icebp
addb
andb
or
andl
mov
rolb
sbbb
mov
paddq
dec
xorb
orb
push
mov
subl
cmp
cmpl
arpl
inc
or
cmp
add
sbb
dec
in
xor
mov
sbb
pusha
loopne
daa
or
ljmp
or
mov
jecxz
push
pushf
mov
mov
dec
and
das
or
and
xor
lods
ds
stos
or
into
pop
aaa
ret
jp
lret
ja
cmp
xorb
or
ljmp
sub
and
popl
lret
mov
out
hlt
sub
test
leave
cmp
inc
and
outsb
stos
jg
or
cmp
jg
sub
push
in
sub
daa
std
push
sbb
push
fldl
fdivs
inc
mov
pop
inc
sub
pop
insb
mov
mov
in
jecxz
add
add
orb
jo
jg
and
fdivrl
sbbb
mov
test
addr16
mov
mov
add
mov
inc
push
test
jb
push
cmp
out
sub
sub
dec
or
jnp
xchg
lods
xchg
mov
les
inc
imul
movsb
push
sbb
pop
in
js
xchg
popf
lds
insb
fnsave
pop
dec
movsb
fists
sub
cmpb
xor
mov
push
dec
clc
repnz
xor
mov
dec
js
xor
test
add
jge
movsl
xchg
aad
inc
push
insb
adc
cltd
inc
mov
mov
xor
ss
adcb
test
mov
sub
movsb
xor
or
cmp
int3
test
adc
movsb
daa
pop
lret
cmp
xchg
test
xor
jae
pop
adc
ljmp
sbb
jno
je
test
ds
fcoms
mov
cmpsb
cmpsb
mov
mov
stos
mov
lock
push
xor
dec
mov
inc
adc
cltd
and
popa
js
jmp
pop
pop
aas
mov
ljmp
test
sub
adc
pushf
test
or
repz
xor
xor
and
in
xor
sub
out
add
leave
cli
pusha
adc
fs
fstps
decl
cmpsb
and
cmp
hlt
or
mov
test
jbe
mov
outsl
xchg
jae
push
xchg
mov
leave
adc
cmp
popa
arpl
xchg
lret
or
loopne
cmpsl
dec
xor
xchg
xchg
popl
into
sahf
jb
or
aam
mov
mov
inc
mov
out
fldt
sub
jo
loop
cmpsl
ficompl
test
push
or
lret
aad
push
popl
cmp
push
test
shll
mov
test
call
mov
test
mov
and
xor
js
xchg
jecxz
sub
push
pop
mov
nop
arpl
rclb
aam
mov
mov
inc
xor
in
xor
scas
test
shlb
xchg
sub
stc
cmp
mov
mov
ficoms
sbb
repz
fdivl
push
dec
fwait
add
lret
faddl
bound
jb
sub
mov
hlt
call
test
mov
jae
mov
in
or
scas
xchg
add
test
xlat
fdivr
lock
repz
inc
movsb
xchg
mov
call
in
push
sub
sbb
jb
arpl
mov
test
inc
xor
inc
outsb
movsb
pop
add
mov
or
cmp
test
or
mov
mov
in
rol
movd
hlt
jno
popf
mov
mov
scas
xor
cmc
xor
or
cmp
dec
cmp
and
jo
inc
scas
fwait
add
push
or
inc
mov
aas
fs
cmp
movsb
cli
repz
inc
pop
fsts
rolb
jae
mov
jnp
in
cli
daa
inc
test
push
xlat
jge
dec
int3
outsb
add
jae
mov
push
mov
or
lret
sbb
in
mov
fnsave
paddd
mov
mov
push
ficoml
sub
pextrw
push
test
jbe
stos
fisubrs
cs
sbb
out
mov
bound
fldenv
jl
in
pop
ret
mov
loopne
hlt
pop
fdivp
mov
or
movsb
sub
xchg
pop
jecxz
cmpsb
mov
inc
sti
jns
push
es
adc
arpl
test
xchg
pop
ds
inc
inc
xchg
dec
arpl
fcompl
push
and
aaa
lods
stc
mov
mov
mov
cmpsb
mov
xchg
stc
xlat
fxch
out
or
out
dec
mov
inc
pop
insb
jg
jmp
mov
mov
test
add
dec
pusha
xor
movsb
cs
in
xlat
sub
test
das
fildll
cld
sar
movsb
mov
lods
aam
mov
mov
jno
sbb
mov
dec
outsb
push
inc
lds
repnz
lods
fcomps
rol
add
or
and
or
call
test
jl
sub
xchg
dec
test
hlt
bts
mov
test
lcall
pop
sbb
xchg
mov
sub
dec
push
pushl
dec
call
das
mov
push
and
push
loope
dec
xchg
nop
sahf
into
push
popa
inc
xlat
cli
in
sub
mov
fstl
fsubr
test
cli
xchg
lahf
arpl
inc
sub
aad
pop
test
sti
xchg
leave
test
lret
and
jg
loopne
jo
ret
aaa
addr16
or
pop
mov
cmpsl
jge
into
cwtl
jb
pop
movb
filds
add
jge
push
and
pop
xchg
test
into
or
push
lock
xchg
sub
aam
cmpsl
pop
test
push
out
test
popa
adc
pop
test
test
leave
in
repz
xor
dec
mov
xchg
insl
cmpsl
test
adc
scas
lea
test
loope
inc
rcrl
insl
inc
mov
shlb
aad
lcall
jge
popa
push
iret
imul
xor
pop
aas
notb
pop
outsb
dec
test
lods
sbb
sti
push
hlt
shll
pop
lock
ljmp
in
pop
movsb
je
xchg
shll
pop
cmpsb
mov
daa
mov
inc
cmp
fildll
lds
and
xchg
incb
mov
sbb
test
xchg
push
sub
mov
test
add
and
int
adc
testb
add
in
mov
push
outsb
cltd
mov
push
in
xor
sub
ljmp
jecxz
sub
test
out
icebp
fcomps
les
pop
adc
add
cli
inc
mov
test
jne
movsl
push
into
lahf
test
jnp
int3
call
lret
daa
inc
test
cmpsl
bound
mov
cld
push
movsb
inc
add
push
dec
fldl
fcompl
jns
icebp
xchg
add
inc
cltd
jmp
sbbb
push
fisttps
xchg
movsb
inc
nop
mov
loopne
rolb
repz
dec
or
xor
mov
out
add
bound
gs
add
in
xchg
in
pop
jae
arpl
or
pop
imul
arpl
arpl
cmpl
outsl
test
jns
pop
xchg
gs
sub
out
lret
ror
lods
jp
out
mov
arpl
and
push
mov
sub
test
pusha
scas
mov
inc
jbe
inc
mov
or
pop
inc
cmc
test
mov
shl
fsubs
arpl
repnz
lret
loop
xchg
les
test
scas
ds
push
mov
cmpsb
and
xchg
inc
aas
test
lock
and
dec
or
flds
arpl
xchg
movsl
cmpsb
test
fsubp
push
mov
mov
mul
test
shll
cwtl
test
xchg
push
shl
cli
adc
lock
sbb
mov
fsubl
push
mov
cli
inc
inc
test
dec
aam
imul
jge
dec
pop
jne
cmp
sbb
and
pop
lods
daa
sbb
jnp
test
cmp
xchg
test
xorl
in
pop
pop
imul
and
inc
inc
fwait
movsl
jmp
xchg
pushl
stos
xor
xor
fldl
dec
xlat
mov
xchg
mov
mov
call
jbe
stos
dec
in
and
neg
lret
call
mov
add
xor
add
push
inc
movsl
cmp
adc
fstpt
or
std
rol
jnp
sahf
js
mov
scas
fldenv
jnp
aam
clc
xchg
sub
inc
adc
imul
mov
mov
mov
inc
mov
rep
lods
sbb
jp
cmpsl
mov
cwtl
adc
xor
jnp
test
sbb
xorb
loop
rorl
lret
xchg
outsl
int3
pushf
ja
imul
adc
ss
mov
sbb
push
cmpsb
pusha
inc
adc
repnz
pop
cld
inc
mov
push
mov
and
sbb
ja
xor
shll
pop
popa
rorl
test
test
push
not
inc
shlb
mov
mov
sti
add
push
sbb
mov
jno
xor
push
and
ret
test
dec
jae
out
xor
dec
pop
or
loopne
in
mov
mov
mov
mov
in
xor
mov
wrmsr
sbb
ret
add
faddp
add
mov
and
xchg
and
icebp
dec
push
mov
cltd
adc
std
stc
inc
mov
gs
jne
mov
loopne
cmpsl
cmp
xor
repnz
xor
icebp
xchg
push
in
push
scas
push
mov
mov
pop
jg
push
mov
pop
sbb
mov
popf
test
inc
mov
adc
add
loopne
pushaw
cmp
fstl
and
lret
jmp
jns
into
add
repnz
xchg
xor
in
lods
jl
inc
fnstcw
lods
lea
xor
or
or
and
shll
clc
movsb
cmpsl
fwait
orl
int3
mov
pop
clc
icebp
cmpb
sub
add
shl
pop
add
pop
in
or
mov
call
sbb
cmpsl
inc
sarl
or
mov
jbe
mov
push
or
das
and
fprem
inc
mov
int3
scas
cmp
test
leave
mov
adc
dec
xchg
stos
test
mov
imul
mov
mov
sahf
and
xchg
arpl
jle
inc
fdivrp
adc
cmp
js
add
cwtl
test
cs
cli
cmpsl
xchg
arpl
movsl
gs
dec
mov
fidivrl
fsubl
inc
loop
and
pop
jno
and
pop
sbb
test
mov
or
adc
mov
add
mov
repz
jbe
add
or
ficoms
mov
test
or
inc
insl
push
gs
les
and
loop
xor
in
push
ret
jb
lea
pusha
aam
loope
xorl
mov
test
jl
mov
test
xchg
mov
jne
add
into
mov
and
cmp
mov
or
fldl
xor
sbb
in
test
loop
int
imul
jecxz
push
and
test
iret
and
in
add
push
aaa
shrl
stos
test
mov
cmp
scas
test
mov
or
bound
jb
jge
outsb
cmp
adc
push
icebp
cmp
mov
lea
mov
or
popf
add
push
ret
ljmp
mov
push
mov
mov
insb
js
mov
inc
in
lahf
iret
jmp
mov
leave
mov
mov
fisubrs
test
push
loopne
test
mov
push
adc
cltd
clc
xchg
push
pop
jae
xchg
fmul
insl
add
mov
sbb
dec
mov
enter
xor
cmpsl
lahf
test
sbb
add
loopne
jle
mov
lds
loope
xchg
arpl
jnp
cmc
mov
rcrl
mov
les
add
popl
das
loopne
jl
pop
daa
or
push
mov
push
dec
test
loop
mov
jmp
pusha
mov
gs
or
shl
jae
mov
push
cwtl
jecxz
push
jmp
in
and
pop
in
popf
arpl
push
aad
imul
bound
mov
inc
repz
mov
dec
add
test
leavew
faddl
and
xor
mov
andl
and
pop
out
mov
in
adc
inc
jno
addr16
cmp
push
hlt
shr
sbb
shl
inc
lods
push
mov
or
push
and
cmpsl
and
das
jns
enter
or
cmpsb
arpl
jg
push
inc
mov
jae
xchg
push
cmpb
shlb
icebp
xor
fisttpll
jae
mov
cltd
loop
mov
test
sbb
push
or
push
xor
sbb
add
inc
lds
xor
cli
ret
cli
sbb
push
mov
outsb
movsl
pop
inc
rolb
ficoml
imul
call
test
loop
roll
pop
sub
dec
add
push
stos
cmp
in
cmp
cltd
test
nop
clc
sti
ss
stos
aam
mov
adc
mov
push
popf
insl
and
stc
sub
mov
xchg
sbb
inc
dec
movl
test
je
test
mov
mov
or
sbb
inc
mov
add
mulb
or
test
fsubrs
mov
dec
add
and
dec
outsb
sbb
or
pop
lahf
out
hlt
ret
sub
test
and
mov
ss
dec
xor
ja
jp
stos
repnz
sbb
mov
mov
mov
mov
movsb
sbb
jl
mov
movsl
test
mov
sbb
test
negb
jecxz
rorb
mov
jb
in
imul
sub
aam
movsl
jle
xchg
movl
jb
xchg
dec
jg
pushf
ret
test
in
andb
cli
cltd
aas
scas
xchg
les
cmpsl
inc
movsl
mov
sub
push
clc
xchg
xor
xchg
mov
popa
cmpxchg8b
dec
add
xchg
arpl
mov
push
or
aas
hlt
add
gs
lret
sbb
xlat
repnz
adc
das
fiadds
or
fstl
paddsb
cmp
lods
addr16
xor
mov
push
xlat
aaa
pop
outsl
fsubrs
ss
xorb
push
or
es
cld
jecxz
loope
imul
ss
and
add
jo
push
mov
mov
cmp
sub
ret
clc
jnp
add
mov
and
add
add
dec
mov
lret
or
sub
sub
lret
into
xorb
ja
jmp
push
stos
icebp
adc
jo
dec
imul
je
in
aad
ret
mov
ret
inc
xor
mov
cmpb
cmpsl
fs
cmc
push
hlt
arpl
shrl
jnp
in
ja
mov
mov
add
mov
cmc
mov
ljmp
mov
mov
dec
or
out
mov
or
pop
push
test
stos
in
sub
jne
or
xor
es
cli
xchg
sbb
push
clc
sub
je
jns
in
cltd
mov
fcomps
jb
push
lahf
push
test
out
and
das
test
dec
mov
movsb
mov
mov
xor
pusha
loop
add
pop
push
xor
mov
shll
addr16
mov
hlt
test
sub
mov
cmpps
xor
sarl
inc
leave
mov
jne
add
xchg
mov
jge
jae
imul
or
ret
cld
fbstp
mov
mov
push
jg
and
xchg
leave
outsl
push
push
push
xchg
push
xchg
ljmp
stos
gs
jecxz
lds
popa
mov
testb
and
ss
movsl
inc
add
xor
pusha
cmpsb
dec
imul
pop
ret
adc
daa
leave
shlb
dec
jb
cmp
repnz
test
arpl
pop
or
xor
mov
lods
mov
and
and
mov
sarl
out
mov
aas
mov
xchg
add
movsl
les
mov
enter
lea
movl
mov
out
sub
dec
test
pop
cmp
mov
ja
int3
arpl
fisubl
data16
cmp
stc
xchg
lret
and
out
pop
out
testl
out
clc
push
lds
or
jecxz
jge
cmpsb
faddp
loop
jae
jmp
ret
sbb
bound
push
or
xchg
test
mov
dec
decb
out
insb
cld
loopne
lods
lcall
add
mov
fstps
loop
call
xor
movsl
dec
pushf
shlb
adc
pop
pop
and
push
test
sub
dec
push
test
call
leave
arpl
adcb
inc
popf
test
or
fwait
lcall
or
sub
mov
loop
lret
test
mov
mov
testb
dec
or
mov
in
xor
test
and
imul
sub
inc
adc
jecxz
pop
pusha
pushf
ret
sub
cwtl
xor
test
add
jmp
xchg
lret
jl
inc
xchg
dec
scas
mov
mov
stc
imul
aaa
fcmovnbe
stos
mov
mov
pop
sub
imul
dec
popa
lret
ret
mov
idivl
push
sbb
test
jle
sub
fists
les
pop
mov
arpl
mov
subl
mov
scas
cmc
jecxz
mov
dec
mov
rclb
sbb
ret
cwtl
aam
lods
sub
sahf
out
clc
xchg
scas
dec
out
hlt
cli
in
test
leave
add
imul
stos
clc
test
test
shlb
xchg
negb
outsb
jo
xchg
cmp
ds
fwait
cmc
mov
lods
mov
in
cmp
pop
xchg
inc
mov
out
xor
leave
and
sahf
imul
test
loopne
test
gs
mov
fstps
dec
cli
stc
test
and
aam
pop
xchg
pop
or
mov
in
jecxz
push
lds
test
lods
pop
test
fsubr
call
test
rol
ret
jp
dec
movsb
and
in
ja
adc
cltd
stc
inc
add
jg
mov
out
movsb
ret
push
fisubl
pop
cmpsl
pop
imul
bound
adc
push
mov
cmp
jl
cltd
lcall
add
mov
test
push
jle
sbb
cwtl
push
cltd
xchg
scas
or
mov
xchg
mov
push
and
xchg
push
test
bound
mov
mov
into
push
xor
push
mov
inc
leave
fldl
test
pushf
push
push
icebp
pop
out
cli
test
movsb
or
or
push
sub
push
movsb
sub
sub
push
rolb
mov
loop
lret
not
xor
loope
movsb
rolw
sub
mov
cmc
adc
fmuls
dec
inc
mov
fs
hlt
jno
or
nop
rcrb
mov
test
adc
test
les
sub
push
push
dec
cmp
mov
cli
dec
push
push
and
cwtl
test
and
cld
popf
arpl
adc
mov
and
xchg
stc
mov
mov
movsb
outsl
add
in
push
cmc
and
mov
jl
cwtl
int3
in
push
fwait
stos
cmpsb
jge
cmc
sub
jmp
push
sbb
js
mov
sub
test
clc
or
sbb
sahf
jp
sbb
inc
pop
sub
div
or
test
sub
and
cli
push
mov
movsl
push
cmp
mov
sub
inc
xchg
test
mov
pop
mov
clc
movsl
test
ret
jb
cmpsl
fs
mov
mov
pop
mov
push
xor
add
mov
mov
ds
or
mov
pop
sbb
in
sub
test
stos
mov
loope
into
test
test
arpl
jg
mov
mov
cmpsb
out
add
add
pop
dec
cmpsb
and
mov
movsb
outsb
jge
cmp
repz
jns
ret
add
mov
cmp
and
lods
push
jb
sahf
mov
dec
add
inc
mov
lret
adc
jecxz
aas
fdivl
in
dec
es
insl
in
int
xchg
or
add
push
ret
jg
addr16
arpl
pop
test
mov
xor
in
push
aaa
sbb
or
xor
xor
sbb
cwtl
push
xchg
cmpsb
inc
les
push
test
ret
jmp
push
jge
cmpsb
popa
dec
imul
pushf
mov
out
test
push
aaa
insb
stos
lock
arpl
outsb
push
and
out
test
mov
or
sub
mov
fdivrs
mov
and
inc
js
jns
adc
adc
jecxz
mov
xor
or
push
arpl
mov
mov
mov
loop
xchg
stc
arpl
adc
icebp
lcall
test
cmp
pop
rcr
js
lahf
and
push
mov
scas
test
out
ret
dec
sub
test
mov
js
addb
sub
sub
sahf
les
sbb
lret
xchg
cli
jl
inc
movsb
fdivs
lret
adc
pop
movsb
aam
xchg
and
jl
mov
jnp
add
mov
add
or
sbb
xor
push
mov
insb
adc
inc
mov
mov
fsubl
ja
call
sub
lds
jae
test
sbb
jecxz
add
cmp
push
test
ret
or
mov
sbb
and
and
int
pop
rol
fsubl
dec
mov
mov
jb
mov
std
je
test
sbb
aaa
fcomps
test
in
jns
fstps
push
test
sub
fcmovnb
test
movsl
stos
cmc
push
adc
into
inc
loop
outsb
mov
pop
inc
cmpsl
adc
arpl
das
decb
mov
mov
aas
dec
cmp
popf
mov
loop
ret
dec
or
or
movsb
mov
mov
xchg
in
or
movsb
xor
fidivl
inc
arpl
xchg
mov
out
mov
fwait
jae
lea
jns
mov
popf
mov
xchg
jecxz
jne
test
adc
bound
fldt
mov
lret
stos
ss
mov
or
es
nop
test
pop
jecxz
sub
lret
xchg
or
shlb
pop
daa
lods
mov
shl
aad
and
or
test
inc
fdivrl
dec
test
add
cmp
daa
test
loop
je
cmc
jle
ret
mov
adc
push
mov
aas
xor
shl
add
into
dec
loop
fprem1
js
and
dec
mov
ss
bound
sti
cli
jg
pop
bound
dec
mov
adc
cmp
pushf
loope
dec
sub
mov
test
lret
test
cltd
xchg
xor
sub
push
imul
sub
push
cmp
test
lods
jnp
sti
cmp
icebp
test
xor
mov
popl
and
shlb
aad
testb
jb
js
inc
dec
int3
and
adc
mov
subb
or
inc
test
lods
mov
fs
test
das
xor
push
in
sub
push
pop
sbb
test
dec
jp
jmp
test
insb
test
inc
cmpsl
lret
mov
sbb
movsb
mov
mov
mov
in
push
cltd
loop
dec
mov
cmpsb
xor
and
in
inc
enter
cwtl
pushf
mov
mov
xchg
cmp
jbe
movsb
movsl
mov
sbb
test
xchg
out
sbb
xor
mov
cmp
pop
xor
fnstsw
mov
inc
xchg
arpl
cmpb
popa
shlb
push
in
das
xchg
outsl
std
pop
cmpsb
test
cli
add
mov
cmp
mov
add
jbe
hlt
test
mov
sbb
test
test
cmp
cmp
fisttpl
cmp
pushf
inc
push
ficoml
sbb
lods
insl
rolb
push
stos
xchg
sbb
gs
pop
and
into
mov
icebp
outsl
xlat
inc
inc
xor
loop
stos
jno
hlt
cltd
mov
mov
aad
bound
test
ret
add
clc
xchg
add
mov
jp
mov
dec
cltd
mov
test
xchg
ret
dec
dec
mov
sub
test
mov
xchg
push
sub
add
repz
add
sub
in
sub
lret
cmp
or
rcr
and
inc
mov
fmull
xor
test
push
dec
test
cltd
cwtl
insb
mov
add
test
or
in
cmc
sub
or
mov
sahf
pop
in
pop
jg
out
aam
es
push
and
fwait
dec
xor
mov
js
fcmovnu
cltd
adc
pusha
jmp
cmp
bound
jae
pop
stos
lds
mov
test
mov
test
lods
cmp
les
mov
adc
mov
in
pusha
fadd
aas
sub
mov
popf
dec
imul
lea
push
fnstcw
mov
lods
bound
in
aad
sub
mov
pop
push
scas
loop
sub
in
cmp
mov
mov
test
sbb
mov
fcomi
xchg
jg
insl
mov
pop
mov
fildl
xchg
dec
outsb
test
sub
aam
cmpsl
push
movsb
mov
jg
cmp
mov
sub
movsb
notl
test
add
mov
sbb
test
push
pop
mov
dec
cmc
xor
test
scas
sbb
add
test
rorb
add
lret
xlat
jb
fs
inc
push
aam
push
mov
mov
ljmp
test
lock
pop
cmpsb
fisubl
fsqrt
pop
mov
pop
mov
imul
or
xchg
sub
push
arpl
pop
loopne
mov
test
test
mov
mov
pusha
mov
aaa
decb
mov
sub
lods
enter
mov
dec
add
mov
aaa
test
cltd
stos
cmpsb
or
lock
cmpsb
adc
sub
xchg
test
cmp
or
pop
mov
or
mov
mov
hlt
jl
mov
in
pop
arpl
lds
inc
test
fimuls
xchg
mov
loopne
arpl
test
loope
mov
lcall
xor
jns
adc
push
out
push
push
fwait
and
cmp
adc
jecxz
movl
cmp
nop
push
xchg
push
psrlq
or
incl
std
test
sbb
add
sahf
or
xchg
xor
push
mov
add
sub
cli
xor
test
mov
dec
sbb
cwtl
and
es
test
scas
mov
iret
enter
pop
push
mov
loope
adc
mov
out
arpl
mov
or
xchg
inc
mov
in
out
or
arpl
xor
test
fwait
pop
hlt
and
rolb
xchg
cmp
outsl
mov
mov
jecxz
ja
fildl
in
loope
popl
mov
push
arpl
in
push
cmpsl
sbb
test
daa
bndstx
and
fiadds
cmp
movsb
or
add
idivb
ret
in
insb
cltd
and
mov
xchg
adc
sahf
mov
jle
loop
jecxz
test
sub
lret
int3
or
bound
daa
pop
negl
in
loop
mov
xchg
idivl
in
mov
test
mov
or
in
inc
jbe
jno
fldenv
and
fildl
scas
cmpsb
int
mov
mov
in
push
mov
dec
fiaddl
xchg
movsb
pop
test
inc
icebp
mov
or
fists
gs
call
mov
mov
ret
cld
mov
sti
mov
xchg
mov
test
jnp
add
ret
fdivs
push
mov
push
mov
mov
mov
dec
xchg
mov
push
test
imul
sbb
lahf
jnp
out
push
xchg
add
lock
pop
cli
jb
aaa
test
test
push
nop
sub
out
movsl
js
loopne
lret
pop
iret
xchg
arpl
xor
test
push
ds
repnz
inc
ljmp
popf
les
adc
or
pushf
mov
xchg
mov
std
pop
test
lock
insb
sub
jle
push
inc
jbe
das
test
cmp
or
ds
mov
mov
adc
es
mov
dec
jmp
push
inc
test
pop
sarl
push
je
adc
aaa
jmp
mov
sbbb
fnsave
or
enter
out
stos
sub
xor
mulb
mov
xchg
movsb
jecxz
popf
data16
mov
jno
adc
pusha
inc
xchg
xor
pop
sub
pop
loop
jp
sub
pop
xlat
cltd
fwait
and
sbb
int3
pop
mov
les
fdivs
enter
arpl
xchg
sbb
lock
mov
push
jecxz
and
fwait
jae
jbe
cld
xor
loop
mov
stos
add
arpl
and
cmp
xchg
movsb
sub
mov
andl
xorl
negl
cmpsb
xchg
jl
jg
cmpl
mov
jecxz
pop
or
pop
test
lret
push
popf
popa
push
jl
sbb
mov
mov
test
cli
cld
pop
in
jnp
test
or
nop
int3
or
lock
aaa
push
popf
sbb
sbb
mov
stc
jae
adc
or
mov
cld
in
lahf
fwait
arpl
fisttps
call
sar
stos
inc
mov
test
test
in
in
std
icebp
push
or
mov
je
ja
dec
jo
inc
ret
sub
loope
sarl
pop
js
inc
add
xchg
cmc
scas
cwtl
rolb
mov
imul
inc
sub
sub
test
sub
lea
ss
out
and
add
mov
inc
push
and
mov
pop
and
sub
sarl
fsubrl
or
mov
cltd
mov
adc
int
movsl
xchg
addl
cmp
pushf
dec
orl
mov
ja
test
ret
sub
mov
add
call
cmp
test
cmp
outsl
out
add
dec
or
loop
sub
into
in
dec
jne
and
dec
movsb
sub
lret
and
test
inc
jbe
mov
nop
test
test
aam
bound
gs
test
and
sbb
sub
test
pop
pop
dec
push
aam
test
jb
ror
cmpl
in
insb
sub
cwtl
and
aam
insb
cmp
jnp
clc
sbb
es
push
adc
cli
xor
sub
test
or
mov
dec
mov
or
xchg
pusha
add
test
les
test
negb
cltd
and
aad
mov
mov
insl
dec
test
add
lret
or
in
jg
fiaddl
in
jecxz
mov
push
aas
insl
js
movsl
leave
jo
push
scas
push
test
adc
sbb
in
xchg
and
inc
xor
jno
scas
lahf
adc
jg
out
or
pop
fs
arpl
sub
mov
mov
bound
loope
jmp
or
stc
xchg
test
mov
popf
subl
into
into
inc
cmpsb
lret
int3
pushf
pop
scas
addr16
or
bound
mov
mov
lahf
fisttpll
test
not
jp
or
xor
jl
or
jge
bound
mov
and
sub
inc
dec
push
or
orl
shrl
js
xchg
jle
aas
add
scas
test
pop
mov
jecxz
lcall
ja
sbb
test
jmp
sbb
aad
test
sub
lds
xchg
inc
xorb
shlb
or
test
fcoms
dec
xor
decb
popf
xor
push
in
jl
inc
sbb
daa
add
pusha
in
fmull
cld
cwtl
nop
jecxz
imul
pop
or
scas
mov
jbe
xor
nop
bound
arpl
mov
data16
push
push
xchg
dec
rolb
pop
fcmovnbe
test
push
enter
pop
mov
mov
movsb
hlt
jnp
stos
fsub
fwait
xchg
test
popa
or
cltd
sbb
fisttpl
sub
and
cmc
clc
bound
sub
and
emms
and
test
add
hlt
dec
or
fldcw
out
inc
daa
sub
int
sub
dec
roll
test
dec
iret
xor
sub
cmpsb
test
mov
ja
into
sub
test
pop
mov
pusha
daa
mov
bound
fucomi
xchg
mov
dec
test
int
lret
cmc
ret
std
xchg
and
loop
in
leave
mov
jnp
push
test
pusha
add
int
cmp
iret
lret
push
xchg
js
xor
cmpsl
aad
inc
pop
mov
fwait
arpl
xor
arpl
lahf
test
dec
xlat
cmp
inc
popf
imul
pop
cwtl
mov
xchg
sub
loop
test
sti
sahf
mov
cld
xchg
out
or
dec
push
and
movsb
mov
jmp
add
sbb
insl
push
popf
in
sub
adc
xchg
mov
fimull
call
fwait
arpl
rol
aad
mov
mov
mov
fdivl
sub
mov
inc
icebp
movsb
jg
mov
pop
and
fldpi
test
daa
nop
push
test
in
or
out
or
mov
push
sub
loop
movsb
mov
pop
pop
push
jo
mov
imul
adc
mov
mov
xor
mov
cmpsb
mov
je
mov
inc
cli
dec
loopne
xlat
popf
mov
cmpsb
xchg
push
movsl
fs
adc
fadds
lock
sahf
out
jecxz
adc
aaa
sub
test
jbe
mov
sbb
movsl
es
adc
lret
stos
mov
dec
fs
sarl
movb
rorb
and
fmull
movsb
cmp
shlb
adc
sbb
cmpsl
mov
in
xchg
aaa
leave
das
pop
sbb
dec
pushf
hlt
adc
outsl
outsb
adc
gs
cmp
mov
pop
in
mov
jl
cmp
mov
mov
mov
clc
int3
xchg
test
mov
sub
pop
lods
and
punpckhbw
mov
fidivl
sahf
popa
into
xor
ss
push
dec
adc
rolb
aad
call
movsl
clc
pop
mov
dec
xor
or
mov
adcb
and
push
out
in
dec
int
movsl
push
pop
out
inc
out
jecxz
nop
fmulp
js
lods
mov
clc
pop
jno
mov
push
sub
and
fisubs
ss
loop
imul
pushf
mov
add
mov
inc
push
jb
mov
and
ss
xor
test
sbb
fcomp
pusha
and
mov
in
push
pop
dec
jb
mov
stos
scas
into
fwait
push
pop
mov
outsl
pop
test
test
ds
lret
push
iret
push
mov
jecxz
mov
push
jo
test
aam
in
les
adc
mov
hlt
mov
insb
jmp
cs
lods
iret
pop
and
rcr
test
mov
jecxz
xchg
push
mov
mov
roll
adc
mov
int3
mov
arpl
push
stos
stos
mov
into
fistps
cmpsl
lret
addr16
mov
xor
xchg
dec
sbb
inc
test
sbbb
test
jno
out
test
pop
or
nop
fistpll
je
add
movsl
lock
pop
mov
out
test
or
mov
int
xchg
jo
test
out
cmpsb
jnp
test
push
mov
add
cmc
test
lock
ret
insl
pop
mov
test
xchg
jns
enter
test
inc
rorl
test
repnz
fwait
and
push
mov
cmp
inc
sbb
shlb
sub
test
pusha
test
popa
test
mov
adc
push
rcrl
mov
pusha
or
test
inc
into
int
mov
mov
cwtl
test
rcll
test
cmp
imul
mov
push
jnp
inc
and
mov
lcall
test
cmp
jl
sahf
test
dec
ret
fisttpl
mov
rolb
sbb
les
cmp
push
mov
aaa
test
sbb
mov
pop
pop
test
divb
xchg
ret
xor
mov
adc
mov
pushf
cld
mov
fildll
int
fildl
das
mov
data16
or
cwtl
cmpsb
or
mov
or
nop
jo
les
push
out
mov
ror
ds
scas
and
test
sbb
arpl
xchg
jno
loop
idivl
or
add
test
ret
loopne
movsb
ss
repnz
mov
add
mov
cs
repz
or
fists
ret
adc
or
sbb
out
jge
mov
outsb
push
imul
push
sarl
cmp
cmp
xchg
ljmp
xorl
test
cmp
cmp
and
sub
test
loope
test
rol
fwait
xor
xchg
dec
mov
out
cltd
stos
test
cwtl
fwait
push
jb
sub
mov
add
or
mov
icebp
adc
test
or
ret
inc
test
cwtl
xchg
ja
xchg
test
jno
jge
push
jbe
test
cmp
fisubrs
xchg
jmp
add
sbb
sub
sbb
stos
dec
mov
int3
sti
pop
mov
or
push
repz
push
dec
bound
dec
xchg
test
ret
les
xchg
adc
in
mov
pop
xor
rol
or
mov
push
cmp
inc
mov
mov
sti
arpl
pop
dec
and
popa
shl
test
mov
test
arpl
push
test
sub
roll
push
popf
test
cld
sbb
imull
mov
fsubs
repnz
scas
jno
mov
cli
cwtl
sub
imul
dec
mov
addr16
ds
repnz
jno
dec
sbb
mov
mov
push
ret
lret
hlt
push
xor
pop
and
dec
rcrl
jo
push
lods
test
stos
es
test
sahf
enter
int3
loopne
mov
repnz
pop
test
and
dec
gs
test
sbb
fidivrs
rol
mov
test
mov
rolb
sbb
testl
sbb
rolb
sub
push
test
divb
test
ss
mov
add
jg
mov
pop
stos
pop
inc
xchg
dec
inc
adc
orl
in
outsb
mov
cmpsl
sbb
test
loope
cmp
mov
dec
mov
inc
in
test
test
xchg
lret
and
or
aaa
sub
xchg
ret
into
mov
sub
mov
aam
xor
das
iret
cmc
adc
fisubrl
mov
ret
jle
and
movsb
sbb
bound
lds
jle
pop
test
or
cmp
sbb
test
int
lret
and
pop
jnp
push
test
arpl
in
stc
andl
sbb
test
sbb
xchg
aaa
lcall
mov
mov
pop
sub
and
insl
call
push
pushf
push
in
mov
cli
mov
cmp
les
push
mov
aam
push
mov
es
es
inc
sub
addr16
cmpsl
jp
ja
jno
sub
sub
ja
test
jnp
cltd
jl
sub
cmp
pop
sahf
mov
sbb
xor
ja
test
fiadds
add
adc
mov
test
loope
inc
sub
sti
adc
push
mov
lea
or
cmp
sbb
or
fs
pop
push
mov
clc
scas
xor
movsl
test
stos
ljmp
icebp
mov
xor
jecxz
roll
jne
test
dec
into
pushf
xor
sti
mov
jp
sub
push
sub
mov
mov
outsb
jge
cs
pop
add
popf
add
pop
lahf
test
popa
push
shrl
dec
mov
repnz
fs
or
loopne
jbe
or
int3
movsb
lret
inc
nop
mov
mov
mov
push
in
in
push
and
ss
mov
mov
jnp
mov
ja
push
or
inc
test
cmc
adc
mov
xor
into
hlt
add
mov
in
pop
test
push
mov
adc
lcall
mov
lret
test
lahf
sub
repz
push
jne
push
mov
fnstcw
dec
pushf
sbb
jle
cs
hlt
dec
les
scas
mov
mov
decl
sti
push
lret
jnp
mov
test
fsubl
xor
push
fildl
pushf
mov
dec
xor
mov
push
pop
lret
cltd
test
pop
sbb
inc
repnz
test
xchg
test
popf
iret
dec
pop
hlt
pop
in
push
push
movsb
std
push
shlb
inc
mov
test
or
test
dec
outsl
loope
add
test
js
sbb
rcll
add
add
adc
mov
cwtl
mov
pop
arpl
mov
push
stos
lods
jo
mov
jnp
xchg
aaa
xchg
bound
movsb
icebp
mov
xorb
sbb
clc
mov
loope
adc
movsb
jo
dec
insb
mov
or
mov
jae
adc
outsb
fistl
sub
fsubl
xchg
push
mov
push
sub
cmp
test
addr16
lods
test
adc
stc
mov
jb
inc
lcall
mov
test
lret
jmp
fistpl
fsubl
pop
sub
cmp
test
lods
push
test
je
cli
popa
xor
mov
xor
or
xchg
mov
cmpsb
test
fmull
xchg
cwtl
arpl
outsl
les
adc
mov
int3
jb
mov
rolb
aas
arpl
rcrl
arpl
pop
add
adc
shrl
lds
cmp
inc
jno
fsubrs
push
mov
mov
les
lods
in
arpl
in
mov
daa
xchg
aad
mov
mov
dec
sbb
stc
sub
fmuls
and
pusha
test
push
jg
mov
or
sti
bound
into
xorb
or
push
and
and
xchg
icebp
loope
test
pop
and
fwait
out
mov
test
inc
int3
stos
push
push
loope
pusha
mov
call
mov
push
rorl
test
pop
lret
arpl
mov
jecxz
dec
imul
xchg
jne
test
inc
push
cmpsb
popf
icebp
test
add
push
test
adc
cs
mov
shlb
dec
xor
lods
imul
int3
faddl
dec
mov
jnp
icebp
pusha
fwait
loopne
mov
cmpsl
movb
std
sbb
bound
xor
jns
sub
in
cmp
movsl
jle
test
test
sub
pop
jo
dec
dec
jp
adc
popf
xchg
insb
test
inc
in
movsl
test
lods
jbe
test
shll
mov
or
divl
pop
dec
add
call
test
mov
lret
xor
into
xchg
scas
cmp
pusha
push
mov
test
test
push
pop
mov
push
loopne
inc
push
push
insl
rcrb
in
mov
std
dec
or
movsl
repz
mov
clc
mov
jne
gs
arpl
mov
out
mov
movsb
movsb
sub
sub
movsl
lods
sbb
push
test
mov
cmp
sub
pushf
jo
bound
movl
lret
test
xchg
inc
repz
push
loope
add
pop
test
push
push
and
mov
xor
pop
xchg
cmc
push
clc
or
cmp
or
cmp
sbb
aam
clc
bound
inc
sbb
arpl
and
adc
push
rclb
cmpsl
mov
cwtl
dec
ret
test
xor
into
aas
outsb
dec
pop
test
or
mov
xor
dec
into
jo
push
test
mov
sub
and
aas
test
loope
test
je
outsb
jb
push
cmp
test
popa
cmpl
add
jmp
inc
mov
incb
fnstenv
in
push
add
out
pop
fsubrs
dec
lcall
int3
pop
sub
mov
cwtl
movsb
and
inc
sub
insb
jbe
inc
les
cmc
sub
icebp
mov
addr16
xchg
test
pop
lea
mov
test
sub
ss
sbb
mov
pop
adc
mov
jo
into
lret
mov
cltd
sub
sbb
mov
loop
sub
jns
clc
test
sti
lods
nop
sbb
test
add
or
xchg
mov
repz
lret
test
push
addr16
mov
dec
lods
mov
mov
and
jmp
call
test
orb
and
cmp
imul
pop
mov
and
test
xchg
das
xchg
out
sub
or
dec
test
movsb
mov
pop
lods
or
xchg
nop
dec
rclb
push
das
aas
mov
bound
test
jb
outsb
xor
sub
cld
xchg
ja
mov
je
loope
loope
push
jns
dec
sahf
and
mov
test
sub
cmc
lcall
test
sub
stos
sub
push
or
fiaddl
and
adc
out
pusha
mov
dec
adc
sub
pmulhw
dec
mov
jns
pop
push
aas
test
test
int3
filds
arpl
cmp
in
into
or
xor
push
adc
movsb
mov
cwtl
das
mov
repnz
pop
or
rolb
cwtl
icebp
js
int
clc
test
pusha
in
xchg
inc
pop
repz
mov
push
out
lret
xor
push
mov
dec
and
mov
mov
mov
xor
in
xchg
push
and
sbb
sub
cmp
test
mov
cli
test
jae
mov
out
sub
xor
and
mov
stos
test
add
push
and
mov
adc
lods
pop
test
lock
lods
negl
mov
push
call
and
dec
bound
sbb
adc
mov
cmp
cmp
gs
dec
pop
pop
scas
bound
mov
stos
ret
and
lret
pushf
jg
sub
jge
fwait
mov
nopl
hlt
pop
xchg
mov
jno
mov
cmp
and
mov
xor
push
mov
js
test
fsub
aas
test
add
sbb
adc
lea
mov
shlb
dec
sarl
mov
jb
add
xor
push
lock
leave
in
pushl
push
outsb
lods
inc
sbb
int3
cmp
or
adc
mov
mov
pop
pop
sub
mov
rorl
push
jno
inc
xor
push
cmpsl
lods
mov
and
xchg
test
push
push
and
pushf
bound
push
stc
push
mov
incl
stos
dec
out
mov
mov
xlat
mov
sub
inc
cmp
test
adc
mov
hlt
mov
mov
mov
rcr
inc
cmp
aad
test
jg
sarb
out
pop
cld
adc
jecxz
cmpsb
lret
ss
pop
push
push
adc
neg
adc
lcall
test
push
jnp
in
mov
fs
addr16
scas
movsb
xor
aaa
adc
xor
ja
rorl
dec
daa
lea
adc
cmpsl
movsb
dec
jecxz
push
nop
xchg
sti
aas
cmpb
fsubl
cmpsl
cwtl
popa
je
cmp
xchg
mov
sbb
test
push
in
leave
movsb
pop
mov
bound
and
jb
insb
fwait
push
or
adc
iret
cwtl
stos
xchg
fistpll
addb
pushf
test
ret
ret
nop
dec
cltd
push
mov
jp
hlt
push
pop
cmp
aad
arpl
and
arpl
xchg
xlat
icebp
bound
push
adcl
pusha
aaa
mul
hlt
aam
scas
add
adc
push
cld
ss
outsl
jbe
sbbb
outsl
dec
dec
mov
mov
and
and
fisttps
pop
in
int
repz
ja
push
xchg
sub
cmp
pop
sbb
int3
jnp
in
pop
mov
lret
fldt
gs
push
mov
call
jecxz
dec
fwait
sbb
movsb
mov
sbb
fwait
adc
add
pop
loope
jge
xchg
push
jb
movsb
inc
xchg
mov
outsb
dec
push
and
sbb
sahf
lret
pop
cmp
mov
mov
push
int
clc
adc
and
jecxz
leave
movsb
or
mov
daa
xor
loope
push
pop
push
es
in
outsb
inc
cmp
pop
mov
mov
test
add
inc
in
outsl
cmpsb
xor
add
ret
je
in
mov
lret
sub
movsb
sbb
xchg
cmp
pop
in
and
cld
int
ret
mov
daa
sbb
mov
dec
cmpsb
outsl
lods
sub
enter
lret
fwait
add
sbb
mov
cltd
daa
sbb
adc
or
fwait
test
mov
popf
and
jne
mov
pop
push
add
pop
inc
cwtl
mov
cmovle
add
push
mov
mov
imul
movsb
or
mov
cwtl
mov
fnstenv
dec
insb
xchg
xchg
test
daa
jns
xor
sbb
loop
int
rclb
lret
pop
jno
mov
cmc
arpl
and
test
nop
jl
movsb
sbb
incb
push
test
movsb
sbb
loopne
mov
lock
mov
nopl
pop
sbb
clc
lcall
cmpsl
mov
xchg
into
pop
out
mov
cli
mov
ficoml
mov
add
sbb
jmp
cld
popf
stc
iret
addb
fnsave
test
jmp
dec
arpl
xor
into
xlat
aad
jae
test
lock
dec
sbb
addr16
pop
mov
and
arpl
jo
cmpsb
incl
mov
adc
adc
mov
adc
sbb
jecxz
test
andb
adc
les
mov
jecxz
mov
push
bound
leave
mov
pop
push
fwait
andb
mov
push
popa
bound
test
sbb
lods
test
sbb
std
mov
dec
inc
les
int3
push
dec
fcomip
clc
test
push
arpl
test
sub
ret
push
sbb
loope
mov
mov
xchg
repz
mov
ljmp
mov
inc
dec
scas
test
inc
add
inc
daa
inc
nop
mov
add
mov
push
mov
or
cwtl
popf
jae
mov
sbb
in
jmp
fwait
aas
loop
out
add
cld
xor
mov
jo
xor
and
pop
nop
xchg
sbb
adcb
mov
add
aas
call
mov
test
add
xchg
lea
sbb
mov
enter
mov
adc
and
lock
mov
or
jge
arpl
mov
sub
cld
push
xchg
xchg
sbb
cwtl
adc
and
mov
cmp
test
fisttpll
adc
cmp
mov
mov
les
mov
and
jle
pop
test
addl
sub
test
xchg
lcall
cwtl
xor
dec
adcb
leave
mov
cmpsl
test
shr
dec
mov
data16
mov
daa
movsb
imul
cmpsb
mov
test
into
inc
aam
pushf
cli
ja
jecxz
jg
leave
mov
cmp
dec
add
mov
mov
mov
rolb
in
mov
adc
les
sbb
pop
xlat
mov
int3
push
or
push
push
sub
xor
out
xchg
mov
fcom
test
inc
cmp
xchg
sbb
loope
test
pop
pop
stos
push
add
sbb
test
mov
test
xor
in
jae
push
fdivrl
mov
ds
js
movsb
daa
and
mov
dec
mov
sub
and
mov
shll
fsub
sarb
or
inc
test
xor
push
push
popf
xor
pushf
dec
mov
hlt
icebp
out
daa
stos
outsl
in
int
mov
fdivr
insb
out
fists
pushf
jno
add
inc
xor
out
sahf
sub
loope
sbb
pop
mov
dec
imul
jge
mov
arpl
popf
push
jne
mov
jp
push
mov
and
cmp
sbb
test
mov
cwtl
add
popa
loopne
cmpsl
stos
test
mov
mov
push
loope
testb
pop
jne
cmpl
or
dec
add
push
mov
les
lret
xchg
cmp
cltd
mov
icebp
mov
mov
es
inc
mov
lods
pushf
jb
lea
dec
outsb
insl
in
movsb
add
repnz
int3
mov
pop
adc
jl
sub
xchg
jb
pop
inc
adc
insb
mov
xchg
sbb
sahf
jo
popf
mov
pop
je
arpl
mov
iret
shlb
inc
xor
cmp
insb
outsb
mov
adc
dec
mov
and
repz
dec
outsl
js
pop
ja
jp
xchg
fs
push
lahf
arpl
nop
popf
arpl
andl
in
repnz
stos
mov
adc
insb
test
mov
fdivp
pop
jl
inc
int
test
loop
test
cs
mov
subl
arpl
xor
or
repnz
adc
sbbl
pop
mov
pop
sub
add
test
dec
push
dec
movsb
sbb
sbb
sbb
and
cld
test
sub
arpl
in
push
dec
xchg
mov
test
in
dec
jnp
jge
mov
sbb
sub
es
add
cmp
fwait
outsl
sub
imul
aaa
add
lock
and
add
adc
in
ds
loope
arpl
cmp
mov
cwtl
int3
lods
sbb
cmp
pop
test
dec
int
add
lret
push
xlat
or
fwait
out
arpl
sub
and
test
out
adc
xchg
lock
lret
arpl
adc
enter
mov
xor
insb
ljmp
lock
mov
or
jecxz
stos
mov
and
lds
dec
out
mov
bound
test
cmp
or
aad
outsb
mov
das
push
or
pop
dec
lock
dec
mov
mov
xchg
fsubs
mov
jl
faddl
cmpsl
lret
cmp
push
nop
mov
sub
test
std
clc
repz
xor
test
and
into
push
jbe
sub
imul
cmp
popf
arpl
push
pushf
and
mov
dec
sbb
xchg
hlt
movsl
imul
loopne
cmpsl
repz
je
cld
xor
sub
jecxz
inc
push
outsb
pop
daa
roll
mov
cvttps2pi
outsl
insb
inc
in
in
sbb
test
cmp
adc
fwait
sub
sbb
in
fcompl
sub
inc
mov
or
cmp
insb
daa
cmp
mov
pop
mulb
adc
mulb
cld
mov
and
lock
push
test
push
ror
mov
xchg
jecxz
or
mov
mov
push
imul
xchg
sbb
lcall
jg
ret
add
cwtl
test
lcall
cmpsl
pushf
pop
outsb
jo
data16
ss
stc
mov
popf
daa
arpl
jno
inc
cs
fldt
loopne
jmp
gs
test
jle
lds
lock
imul
xchg
lods
sbb
daa
sbb
ja
jle
pop
inc
mov
fistpll
xchg
or
fldl
popl
in
test
and
in
xor
test
cmp
popa
push
dec
fisttpl
roll
inc
test
jl
mov
mov
ja
mov
popa
sbb
pop
movsb
cmp
xchg
ds
mov
and
mov
arpl
cmpsb
stc
add
jbe
fidivrs
fdivrs
adc
xchg
mov
or
cmp
sbb
mov
bnd
jno
and
cmpsl
or
std
xor
movsb
or
sub
pop
lret
xchg
repz
mov
cmpsl
cli
push
insb
cwtl
outsb
adc
mov
or
bound
icebp
mov
push
mov
in
xor
push
data16
mov
inc
cmp
stos
add
push
call
or
loope
cmp
cmc
push
fldenv
sub
test
test
dec
dec
lds
insb
pop
aad
popa
mov
pushf
test
arpl
test
bound
loop
sar
aad
test
jnp
pushf
pop
insb
rcr
jl
mov
xchg
ja
pop
aam
pop
xchg
mov
and
insb
pop
test
mov
inc
lret
cltd
test
rcll
aaa
cwtl
fisubrs
add
fisttpl
hlt
ja
inc
inc
roll
lods
arpl
mov
dec
int
insb
mov
outsb
mov
leave
push
aad
sub
loope
fisubrs
fdivrp
pop
ret
adc
jbe
mov
sub
cmp
popa
push
cmp
les
adc
int
dec
xor
pushf
in
test
dec
lcall
xchg
les
test
pop
and
scas
ror
bnd
fs
ficomps
cmp
sbb
cmp
popf
lfs
inc
sub
xlat
or
out
test
andl
mov
mov
das
or
aaa
rorb
mov
inc
xchg
sarl
fldcw
inc
lea
mov
shrl
dec
pusha
stos
test
mov
popf
push
mov
mov
xchg
movsl
test
stos
and
repz
push
enter
and
cmp
sahf
sub
daa
aam
mov
push
adc
cmpsb
test
jns
clc
aad
mov
je
cld
cmpsb
mov
arpl
push
test
aad
ret
xchg
test
loop
dec
stc
sahf
push
pop
movsb
cmp
lods
cmc
test
dec
test
int
push
arpl
mov
test
ja
or
push
loopne
push
or
jne
jle
pop
push
pusha
pushf
mov
stc
add
popa
test
cmp
int
add
test
push
pop
daa
mov
arpl
pop
xchg
std
sti
movsb
repnz
loopne
dec
cmc
add
sbb
pop
add
inc
jne
and
mov
xchg
mov
test
loope
movsb
cmp
test
cmpsb
pop
pop
test
mov
cmpsl
ret
add
push
adc
sahf
jb
or
bound
pop
or
neg
test
rolb
pushf
adc
pusha
aad
pusha
mov
sbb
outsb
dec
stos
inc
loope
add
movsl
arpl
test
popa
ret
dec
ss
aad
inc
pop
loope
repz
popa
movsb
xor
into
les
clc
test
mov
popf
popa
aaa
arpl
push
rclb
ss
test
cltd
sbb
and
mov
stc
jle
fisubs
adc
ret
ja
test
jmp
loop
pusha
hlt
lret
sbb
in
xchg
jp
xchg
fsubs
test
adc
sub
jl
inc
fld1
xor
das
bound
jno
addb
ret
sub
outsb
push
add
or
mov
ja
test
push
cli
sub
sub
inc
or
mull
mov
mov
test
pop
call
pop
adc
movsb
cmpsb
and
cmp
push
js
icebp
rolb
push
sti
lret
pusha
mov
sbb
test
out
pop
imull
bound
cld
hlt
arpl
test
xlat
leave
jne
ret
push
push
dec
cltd
xchg
movb
test
fisttpll
out
filds
sub
mov
pop
test
jno
fildl
scas
and
rclb
cmp
and
push
out
stos
sti
dec
fldenv
mov
push
mov
call
fistps
repnz
and
mov
pop
xchg
add
and
ret
mov
jle
ss
fisttpll
daa
cltd
sbb
mov
mov
add
test
test
cmp
and
adcl
bound
js
mov
test
es
stos
or
lds
movsb
mov
cmc
daa
lcall
jge
popf
test
cli
ret
js
sub
xchg
dec
orb
mov
pop
ss
shrb
jp
pop
std
aad
lret
mov
and
push
pop
test
loope
pop
dec
xor
pop
mov
sub
or
push
out
xchg
sti
filds
pop
mov
out
test
xchg
and
mov
push
test
mov
clc
adc
mov
xor
sub
roll
loope
int3
test
inc
shrb
add
mov
sbb
scas
movsb
das
add
mov
inc
out
jnp
loop
mov
in
lds
adc
test
sub
test
aad
sbb
shrb
pop
addr16
cmp
add
inc
shr
mov
aas
test
jge
daa
pusha
test
and
dec
inc
fwait
add
js
lahf
sbbl
adc
out
testb
test
or
test
std
test
sarb
push
test
lret
jb
push
add
sbb
notl
pop
mov
addb
outsb
push
mov
bound
mulb
data16
push
clc
mov
push
in
test
pop
stos
cmp
and
push
lock
sbb
push
cltd
aad
mov
icebp
and
and
jbe
stos
or
int
jo
orb
arpl
sub
in
push
xchg
push
test
xlat
sub
xchg
test
int
mov
test
subb
mov
loop
ret
and
push
xor
xchg
and
test
mov
mov
test
dec
dec
lret
mov
cmp
sahf
out
and
xchg
std
cltd
test
xchg
dec
es
pop
and
call
jno
sbbb
dec
aam
aad
add
mov
fcomip
xchg
lock
jl
mov
add
push
mov
clc
lock
shlb
xchg
movsb
add
lahf
aaa
mov
mov
gs
jb
mull
jmp
mov
test
hlt
cmp
mov
fidivrl
in
and
test
std
and
pop
movsb
dec
leave
scas
outsb
in
push
fnstsw
pop
xor
hlt
movsb
xchg
dec
dec
test
sbb
cwtl
pop
fcmovnb
test
divb
dec
add
cltd
add
or
push
xchg
mov
test
jg
adc
push
lock
shlb
popl
test
test
jp
cli
mov
mov
jecxz
sti
add
inc
rcr
mov
sub
sbb
push
jbe
and
mov
jb
test
mov
jo
inc
nop
test
mov
jg
sbb
scas
xchg
test
fdivrl
dec
insb
inc
dec
sub
mov
sbb
lcall
dec
mov
sub
test
je
mov
jp
dec
movsl
sub
pop
mov
mov
test
call
pop
pusha
xchg
cltd
rcl
das
jp
stos
and
sub
sbb
lea
pop
mov
repz
sub
loope
add
mov
mov
pop
inc
push
outsb
test
pushf
ficoms
xor
lods
test
push
daa
pop
xchg
in
jecxz
fst
scas
mov
jmp
mov
mov
and
cli
sti
loop
mov
mov
test
xor
test
pushf
fcoms
jae
lret
inc
cmp
mov
data16
mov
xchg
dec
push
xchg
pop
jecxz
push
mov
jns
test
xor
test
fmul
call
dec
fwait
inc
mov
cmp
push
into
xor
dec
test
mov
test
sbb
lret
cs
cmp
test
gs
mov
cltd
hlt
add
jge
inc
bound
ljmp
test
jae
push
cmp
mov
sbb
test
push
xor
and
mov
pop
jmp
les
xchg
or
mov
lret
popf
loope
nop
mov
in
cwtl
push
pop
in
movsl
fisubs
mov
push
sbb
loop
in
cmpsb
inc
pusha
xchg
or
cmp
test
lret
pop
orb
gs
mov
test
icebp
ja
mov
sti
sbb
inc
ljmp
popa
mov
xchg
mov
test
adc
mov
jge
test
in
incb
mov
arpl
sub
push
lahf
mov
into
push
fildl
mov
fucomip
pop
cli
lds
data16
cmp
leave
inc
add
push
int3
cmp
fmuls
jl
push
cmp
das
mov
pushf
sbb
mov
xor
popf
sbb
jl
mov
xor
int3
cltd
cwtl
lahf
cltd
mov
add
and
jp
sarb
and
scas
jae
mov
lds
arpl
mov
test
pop
into
fisttpl
dec
imul
dec
test
leave
push
adc
inc
pushf
cwtl
popa
mov
lds
xchg
or
xchg
cmpsb
dec
jge
bound
ud0
in
loope
fmull
mov
inc
jbe
jne
dec
in
arpl
add
negb
mov
arpl
test
sub
les
mov
scas
sysret
clc
mov
sbb
fistpll
add
lret
jne
adc
pop
sbb
mov
int
out
test
pop
inc
mov
mov
dec
cwtl
fwait
movsb
inc
gs
jo
mov
out
pop
mov
movsl
inc
lret
or
jb
push
jecxz
leave
cld
inc
ror
mov
dec
inc
mov
clc
in
mov
dec
sub
aam
mov
mov
push
and
add
add
mov
test
in
pusha
scas
jecxz
mov
mov
loope
int3
enter
and
cmpsl
mov
in
das
cmp
fidivrs
test
out
int3
cwtl
mov
and
pop
mov
jl
mov
pop
das
cltd
notb
movsb
dec
mov
and
cmp
dec
iret
call
test
test
shll
jnp
test
push
fdivs
push
mov
test
inc
test
sbb
xchg
mov
sub
cmpsl
push
pop
sub
call
lahf
jmp
or
xlat
cmp
into
cli
mov
movsb
jnp
fwait
fs
jb
divl
jecxz
mov
xchg
test
push
mov
and
mov
in
fstpt
stc
mov
in
in
sbb
les
test
mov
fstl
imul
mov
test
cmp
inc
sub
cmp
add
jmp
or
sub
movsb
add
ret
enter
sbb
test
js
ss
jnp
shll
mov
movsb
outsb
mov
in
inc
mov
mov
mov
jne
pop
insl
sub
cmpsb
ljmp
pop
das
rcll
jb
dec
aad
cmp
int
lock
push
xchg
sbb
mov
movsb
repz
insl
xor
cmp
sub
push
sbb
sti
mov
lock
push
sub
nop
sub
inc
mov
cwtl
xchg
mov
pop
sbb
roll
dec
cmp
add
pop
pop
dec
push
cltd
mov
cmp
gs
cmp
and
mov
inc
cli
addb
and
movsb
popf
mov
mov
lret
add
mov
push
pusha
dec
loope
mov
xor
jae
mov
mov
lahf
add
mov
xlat
mov
test
cmp
lret
hlt
lock
mov
mov
sbb
add
out
outsb
sbb
test
into
aas
xchg
pop
dec
push
test
xor
xchg
in
test
fldt
mov
sub
decl
and
inc
fiaddl
daa
push
add
xor
xlat
out
addb
sbb
fucomi
push
roll
dec
jne
ja
jns
aas
push
jmp
movsb
pop
lea
jb
pop
add
test
loope
and
movl
cmp
add
test
test
jno
or
pop
nop
cwtl
bound
mov
ret
mov
andb
push
cld
jp
stos
xchg
sbb
test
sti
mov
test
inc
or
pop
je
gs
cld
fwait
adc
inc
jp
out
test
and
fistl
hlt
xor
ret
icebp
xor
pushf
sarb
out
in
or
fwait
mov
sub
stos
add
call
test
dec
sbb
add
fmull
popa
test
sub
ljmp
imul
fimuls
xor
in
xchg
ss
or
ret
ret
aam
cmp
rolb
fiaddl
cltd
fldl
nop
popa
fdivrs
sub
xchg
mov
call
cmp
rolb
jge
movsb
insb
xchg
and
add
mov
dec
cmpsl
and
int3
cmp
mov
sub
popa
roll
icebp
xchg
loope
and
test
clc
ja
es
scas
push
xor
sbb
idivb
xlat
dec
mov
xor
pop
and
or
lea
leave
icebp
loope
sub
lods
and
pop
fcmovbe
inc
xchg
pop
les
call
mov
lcall
ds
ja
roll
mov
and
jecxz
test
dec
dec
jnp
dec
push
mov
sub
shrb
fldenv
icebp
mov
sbb
movsl
test
ret
inc
lahf
bound
mov
pusha
push
sbb
imulb
and
adc
pop
orl
xor
cmp
into
test
pop
push
hlt
std
and
in
test
add
adc
sub
mov
cltd
and
popf
lods
stc
xlat
test
mov
iret
lea
test
test
stc
pop
fwait
lods
lret
test
les
sub
lods
mov
sbb
pusha
in
iret
xchg
test
inc
fwait
xchg
lods
jns
movsl
mov
inc
popf
out
jl
inc
dec
outsb
add
jb
pop
ss
lret
sub
std
test
mov
das
mov
test
jl
loope
bound
push
pushf
mov
int3
in
aad
cmovge
test
loope
in
int
mov
xchg
mov
test
es
lahf
lods
pop
test
sub
sbbl
or
jns
push
movsb
aam
sarb
fcoml
shlb
mov
mov
sbb
pop
xor
mov
and
shlb
in
push
mov
sub
movsl
pop
mov
mov
loop
ja
arpl
je
mov
out
cltd
sbb
mov
mov
cmp
pop
loopne
out
fnstenv
mov
mov
movsb
lds
xchg
popf
leave
jge
cli
jo
pop
xor
icebp
xchg
rorb
inc
mov
loopne
loop
xchg
test
inc
ror
imul
dec
scas
adc
test
mov
sub
xchg
test
jb
out
dec
push
add
xchg
int3
out
or
mov
fwait
rclb
arpl
or
mov
push
call
ret
arpl
out
mov
arpl
mov
jno
jnp
lock
pop
nop
add
into
xor
sbb
test
lret
push
jg
test
sbb
repnz
add
fidivrs
push
mov
stc
test
test
test
sub
scas
test
dec
sub
mov
ret
test
xchg
jno
pop
mov
mov
sbb
and
pop
dec
jo
out
sub
je
fists
xor
or
jg
aas
test
mov
pop
lea
sub
sub
daa
sub
in
jmp
roll
movsb
dec
insl
lds
xor
mov
pop
in
rcl
daa
jne
mov
jp
div
cmpsl
xchg
mov
sahf
mov
inc
cli
jno
xor
les
push
dec
cmp
jnp
mov
cmpsl
mov
add
fsubr
pop
pop
mov
push
adc
mov
pop
out
jb
mov
lcall
loop
repnz
or
add
xor
jae
out
sub
jp
fwait
loopne
mov
inc
inc
inc
mov
mov
or
mov
mov
mov
jb
xor
test
test
sub
add
incb
jbe
es
nop
sbb
test
mov
das
inc
test
cli
call
addr16
addl
sbb
imul
std
addr16
out
sti
push
pop
test
mov
sti
push
cmpsb
fadds
inc
aas
jo
sbb
mov
inc
dec
push
test
fcompl
test
enter
test
popa
pushf
cli
jbe
movsb
dec
cmpsl
je
ret
cmp
push
call
test
mov
not
test
fs
int3
jmp
adc
jne
in
dec
movsl
jmp
mov
dec
ret
sbb
add
push
test
mov
aas
mov
pushf
and
test
add
addr16
jp
cmp
lahf
push
push
mov
movsb
aas
push
sbb
mov
test
shr
dec
and
dec
mov
aam
das
insb
test
pop
imul
sbb
and
and
or
cmp
add
int
fwait
jnp
mov
int3
fisubrs
movsb
jmp
daa
iret
mov
cli
mov
enter
test
xchg
push
loop
or
sub
mov
loopne
xchg
cmpsl
repnz
arpl
scas
and
pop
test
aad
leave
ja
rorb
inc
push
stc
jbe
or
int3
lahf
test
sbb
cmpb
test
ljmp
test
xchg
lret
push
test
sbb
mov
mov
rolb
icebp
test
dec
cmp
sbb
jnp
test
sub
gs
fisubrs
inc
in
and
enter
jne
push
push
movsb
ret
jns
xor
and
mov
sub
flds
ja
js
cmp
insl
cmp
mov
arpl
mov
outsb
adcl
test
push
or
not
in
and
pop
sbb
fmulp
push
mov
movsb
mul
cmp
xor
cmpl
sbb
pushf
dec
pop
mov
jp
jle
fmulp
jl
pop
loope
jne
pushf
sub
or
test
cmp
dec
lods
sub
pop
movsb
stc
pop
repz
cmp
insb
inc
sub
mov
test
xlat
xchg
sbb
sub
mov
test
notb
nop
add
cmc
jmp
roll
or
or
sub
jecxz
movsb
fdivrl
adc
mov
scas
and
ret
adc
pop
in
fistpl
mov
in
test
cmp
mov
mov
add
mov
sub
inc
aam
xor
push
test
sbb
mov
lret
imul
stos
test
js
iret
jmp
lret
fwait
jae
mov
hlt
test
cmp
mov
fdiv
lods
or
arpl
mov
popa
sbb
push
lods
cmp
in
test
mov
dec
pop
fiaddl
repz
sub
ja
popa
mov
push
pusha
scas
pop
lret
shll
les
test
sub
and
int3
cmc
sub
clc
mov
mov
push
sub
mov
int
pushf
aaa
cmpsb
aam
dec
mov
sub
repnz
mov
mov
imul
cmp
sub
xchg
dec
hlt
loope
jnp
dec
mov
push
cmp
rclb
test
inc
add
testl
cmpsb
dec
lret
mov
or
pop
in
push
stos
cmp
mov
xor
sub
data16
lods
arpl
cmp
or
test
lret
repz
and
sub
cmp
sub
push
jnp
sub
jp
stos
lcall
in
ja
sti
incl
rolb
imull
jae
or
or
lret
clc
jnp
inc
in
jmp
mov
pop
mov
xor
mov
roll
aaa
out
test
outsb
mov
sbb
daa
adc
xor
stos
je
arpl
inc
sub
mov
inc
push
pop
jle
mov
pop
ja
std
test
sub
pop
and
arpl
mov
test
je
incl
ret
cs
mov
and
cmpsl
mov
push
inc
or
push
jb
outsb
shrb
andb
cmp
ja
cs
push
pusha
mov
mov
jmp
dec
filds
cs
inc
or
popf
out
mov
push
xchg
movsb
lahf
subl
bound
popa
inc
cmpsb
sarb
inc
pop
arpl
jp
jo
mov
test
bound
pusha
jecxz
in
clc
aas
mov
in
and
mov
fidivl
push
mov
add
shll
outsb
and
lcall
je
popa
or
sti
pop
ret
arpl
test
inc
adcb
mov
and
adc
pop
jns
aam
xor
movb
sbb
jle
mov
jns
mov
add
and
or
or
cmpsl
popa
shl
xor
xor
push
out
lock
sbb
out
add
lock
inc
leave
mov
enter
cmp
repnz
or
int
bound
xor
xchg
mov
cmp
data16
rcrl
mov
gs
movsb
leave
pushf
pop
push
dec
sub
or
arpl
mov
fwait
cltd
adc
jbe
arpl
lods
mov
add
push
in
int3
jp
pusha
stc
mov
hlt
ljmp
dec
cli
lret
test
shlb
mov
dec
adc
mov
mov
fs
adc
dec
ss
add
pusha
xchg
icebp
dec
jp
sub
mov
daa
xor
rcr
test
xchg
ss
sbb
lret
lods
pushf
dec
push
mov
cmpsb
lcall
push
fldl
test
testb
xor
ja
dec
in
mov
cmp
and
push
test
int
jmp
test
sti
mov
test
and
ss
test
jmp
call
cmc
stos
jle
test
xorl
or
data16
pop
daa
add
lcall
arpl
shll
scas
movsl
push
or
dec
sub
jnp
xchg
lret
in
jno
cwtl
jge
mov
xor
and
mov
pop
mov
repz
mov
bound
cmp
dec
and
addr16
int
in
mov
mov
aaa
push
je
xor
xor
mov
mov
pop
js
sbb
adc
test
lea
mov
or
pop
sub
jmp
int3
arpl
lcall
repnz
les
aas
aaa
mov
dec
popa
cmp
cltd
sarb
mov
mov
fcmovne
mov
add
jno
xchg
lods
mov
sbb
pop
pmaxub
outsb
imul
jnp
movsb
data16
cmpsl
xor
dec
mov
push
daa
mov
or
test
push
mov
inc
scas
push
fcompl
mov
movsb
sub
outsl
cmpsb
adcl
push
in
arpl
stos
lods
push
cwtl
push
xchg
addb
mov
movsl
test
xchg
sub
cs
int3
imul
push
out
bound
js
test
xor
test
sbb
dec
test
or
in
cwtl
add
aam
mov
lcall
adc
xor
test
xchg
sub
arpl
mov
pop
icebp
mov
sub
sbbl
xchg
icebp
into
test
popa
sbb
sbb
call
cwtl
loope
movsl
cmpsb
ja
xor
cmpsl
das
ret
movsb
mov
dec
clc
mov
jmp
insl
cld
std
xchg
data16
ret
insb
test
test
pushf
add
sub
xchg
adc
adc
inc
imul
sub
xchg
sub
mov
mov
inc
jmp
mov
loope
movsb
dec
mov
in
jl
nop
sbb
lret
mov
test
repz
mov
test
jecxz
cmpsb
lret
mov
je
pusha
pop
push
shld
int3
sub
pop
and
sbb
fwait
addr16
pop
mov
cmp
fisubl
in
lahf
gs
jle
cmc
in
ds
push
add
mov
or
test
inc
xor
cmp
scas
aam
add
sbb
mov
adc
mov
outsb
mov
sbb
lods
pop
push
xchg
jo
inc
mov
fadds
es
scas
test
popf
mov
lds
les
and
es
and
pop
mov
sub
mov
push
lods
push
mov
lret
test
sub
pop
inc
adc
dec
iret
aam
es
jnp
xchg
mov
loope
push
repz
mov
aad
mov
pop
call
xchg
andb
test
pop
lock
test
and
mov
daa
enter
stos
pushf
fs
test
or
jle
pusha
addl
lock
sub
mov
test
rcrb
jle
add
xchg
xchg
aas
mov
dec
nop
fwait
test
mov
add
sbb
jle
xchg
fs
adc
int
mov
sbb
sub
inc
pop
mov
sbb
inc
lret
mov
xor
pushf
loop
test
je
popf
inc
pop
out
mov
inc
xlat
lahf
mov
jp
mov
mov
arpl
push
pushf
pop
test
aas
mov
jo
jle
cwtl
sbb
adc
test
add
js
add
cmp
loop
aas
push
pushl
out
call
sub
fisttpl
adc
dec
push
repz
dec
mov
incb
push
jnp
pop
xor
insl
nop
cmp
sub
mov
popf
faddp
cmpsl
in
sub
test
repnz
jl
xchg
mov
and
popa
sahf
mov
jp
bound
pop
mov
imul
push
mov
gs
test
cmp
push
pushf
adc
push
test
fcompl
test
das
mov
dec
fcom
gs
je
cmpsb
mov
cmpsl
push
test
sahf
push
int
xchg
rclb
and
pushf
lods
mov
in
sub
mov
sbb
lret
add
ret
push
xchg
xor
jo
adc
dec
in
pushf
lea
cmp
test
mov
add
dec
fcoms
arpl
xlat
movb
insl
dec
arpl
test
cmp
pushf
jle
adc
dec
test
mov
js
fwait
scas
and
daa
cmp
sub
sbb
push
addb
adc
ja
push
cmpsl
jge
outsl
aaa
mov
test
and
movsb
inc
mov
cmpsb
jp
insb
test
sbb
mov
inc
imul
or
dec
loopne
lcall
dec
fidivrs
jb
fisttpl
test
xor
rorl
inc
rcrl
add
and
push
or
mov
mov
scas
push
mov
sti
sub
enter
aad
adc
push
sbb
and
call
dec
mov
ror
arpl
movsb
push
js
push
xchg
aad
notb
bound
mov
cmp
dec
push
xchg
mov
pop
mov
out
test
ret
xchg
sub
dec
cmpsl
jge
pop
mov
test
addr16
adc
and
pop
fwait
pop
add
adc
pushf
lods
loopne
cmp
iret
sub
mov
icebp
testb
fistps
test
push
push
sub
jnp
xchg
sub
pop
and
es
cld
inc
add
int3
cmp
and
sub
into
test
xchg
movsl
adc
in
push
aad
cwtl
inc
loope
stos
inc
mov
mov
aad
repnz
test
dec
mov
mov
adc
sbb
sbb
mov
test
xor
and
mov
pop
xor
test
dec
nop
xchg
movsb
mov
es
in
inc
jle
xchg
mov
mov
test
sub
nop
adc
lock
in
icebp
insl
inc
outsl
push
mov
inc
push
lret
sub
jle
mov
jmp
mov
cli
fcompl
xchg
sbb
hlt
test
jl
push
or
sahf
mov
mov
fadds
pop
lcall
test
xchg
pop
mov
cwtl
popa
mov
fnstcw
mov
stc
aad
repnz
test
lock
cmp
mov
movsb
push
enter
or
je
sbb
cmp
out
idiv
or
xor
mov
fcmovne
andb
jecxz
movsb
insl
push
mov
out
das
mov
mov
test
and
shll
enter
mov
mov
es
out
add
mov
push
push
scas
pop
test
fisubl
inc
mov
in
push
push
stos
xor
inc
push
out
xchg
fsts
adc
cmp
int
mov
sub
int
dec
adc
xchg
clc
in
pop
loop
push
xchg
add
inc
fildll
in
stos
adc
clc
pop
bound
and
lahf
push
cmpsb
fidivrs
push
sub
mov
fsubrs
mov
cmp
popa
mov
cli
mov
jecxz
outsb
sub
push
jmp
or
stc
test
mov
and
inc
aam
add
adc
fwait
cmp
mov
fadd
fsubr
pop
repz
mov
lock
orl
es
mov
xchg
mov
fwait
pop
dec
mov
test
cwtl
push
jnp
jg
frstor
arpl
repnz
or
mov
inc
repz
or
movsb
arpl
xor
xchg
dec
adc
in
sbb
arpl
push
or
mov
pushf
xchg
sbb
mov
mov
pop
and
inc
and
inc
mov
xor
loop
mov
pop
push
or
mov
add
test
ret
adc
test
test
andl
enter
cmpsb
push
mov
push
flds
mov
fwait
mov
adc
adc
mov
mov
cmp
push
dec
jp
dec
push
push
xchg
mov
dec
fucomip
sub
aam
xor
and
xchg
cmpsl
jl
xchg
push
push
bound
inc
sub
fwait
jns
mov
movsb
aas
sub
shrl
addb
push
loop
pop
mov
test
xchg
repnz
iret
rorb
sbb
sbb
fsubl
cmp
rolb
loopew
das
lock
gs
test
inc
push
loopne
aad
mov
sti
popa
adc
stos
push
or
sub
push
arpl
jae
mov
mov
popl
pop
cmp
push
jp
mov
dec
mov
repz
cmp
test
shlb
cmp
test
jg
enter
pop
arpl
test
mov
lret
mov
pop
mov
arpl
cld
mov
icebp
mov
int
jne
pop
and
xlat
popf
bound
test
adc
mov
push
mov
cltd
scas
and
movsb
pushf
xlat
xchg
bound
push
sarl
cli
arpl
jno
push
sbb
add
and
iret
pop
sub
data16
in
fistpl
push
jecxz
mov
test
lock
push
xchg
lahf
dec
push
lret
popf
shlb
dec
loope
mov
test
jle
push
mov
or
movsb
mov
dec
mov
test
aas
dec
inc
test
inc
mov
test
cmp
mov
mov
mov
fiaddl
loope
push
sbb
sti
xchg
sub
jle
xlat
cmc
in
stos
xor
inc
mov
mov
mov
insb
xchg
hlt
pop
repnz
jnp
mov
push
add
and
push
sub
test
sahf
cmp
shll
cmp
dec
stos
arpl
xchg
lret
mov
xchg
inc
or
cmp
movsb
nop
ds
cmc
bound
insb
mov
lret
test
sbb
movsb
adc
mov
ja
in
mov
sbb
push
cltd
cmpsl
int
ljmp
stc
or
sbb
inc
and
out
movsl
jge
cld
lret
cli
pushf
inc
fs
dec
cwtl
mov
lret
rcrb
and
outsl
push
and
les
outsl
insl
mov
push
stos
adc
fiaddl
popf
dec
stc
pusha
push
pop
inc
mov
lahf
orl
xor
aam
push
dec
mov
mov
adc
cmp
imul
cld
clc
and
mov
dec
jecxz
jo
cwtl
dec
cmp
iret
addr16
lods
jge
mov
out
idiv
ja
pop
cli
test
sub
andb
mov
cld
in
add
jno
mov
cmp
test
add
adc
mov
sub
mov
xor
xor
movsb
popf
mov
mov
pop
fwait
in
dec
cwtl
pop
jae
mov
jecxz
sbb
xchg
or
add
loope
jl
push
test
inc
push
test
mov
loope
int3
mov
test
mov
jnp
or
xchg
test
mov
sbb
popa
jns
mov
bound
shrl
xor
dec
adc
fbld
mov
jns
rclb
mov
fs
push
or
mov
mov
int3
xor
test
add
test
inc
ss
dec
imul
in
mov
insl
lock
arpl
xor
mov
in
sub
add
add
push
test
cwtl
xor
in
push
jmp
mov
pop
sub
lea
sbb
mov
mov
test
mov
adc
enter
pop
mov
test
jbe
push
mov
or
sti
jmp
test
jmp
test
mov
loope
push
and
or
sbb
push
or
cmp
popf
clc
push
mov
aad
mov
push
fs
jae
imul
lret
push
mov
ror
inc
jecxz
dec
test
mov
push
cli
scas
das
ret
or
repnz
int
push
jp
fwait
out
push
fcos
adc
cmp
jbe
in
mov
gs
enter
out
je
andl
mov
lahf
sbb
bound
repz
in
out
xchg
mov
push
in
das
repnz
pop
adc
mov
pushf
jae
lds
push
xor
addb
push
mov
mov
sbb
test
add
cmp
and
test
std
stos
inc
pop
sbb
repnz
jno
cmp
mov
jbe
or
negl
dec
lret
mov
aam
test
insb
sbb
xchg
ret
mov
or
mov
mov
and
pop
cmp
pop
push
jl
les
mov
je
sbb
add
test
xchg
jg
outsl
dec
lret
mov
add
cmp
jle
mov
cmpsl
stos
test
test
mov
xor
sub
mov
xor
out
dec
xchg
fucomi
outsl
test
push
mov
daa
gs
lods
pop
pop
jo
insb
mov
or
or
sub
sbb
push
xchg
adc
xchg
lods
inc
cwtl
aad
repnz
mov
push
mov
mov
jg
std
movl
test
pop
int3
imul
fcoms
stos
test
xor
inc
xor
arpl
subb
int3
and
push
or
mov
testl
cmpsb
cmc
push
xchg
fstps
sub
mov
gs
inc
sub
adc
pusha
add
das
mov
mov
push
aas
mov
cmp
or
mov
bound
loope
decb
arpl
stos
repnz
fidivrs
mov
jecxz
sbb
addl
dec
inc
daa
mov
add
mov
sbb
ja
cmp
stos
lcall
sbb
mov
cltd
and
imul
mov
test
push
adc
mov
scas
or
pop
movsb
leave
and
and
mov
int
sub
icebp
pop
pop
cmp
mov
mov
fwait
mov
adc
add
hlt
shlb
sub
mov
pop
and
dec
sub
xlat
sahf
out
or
mov
mov
sbb
mov
sub
es
in
lahf
mov
and
push
mov
lret
ret
fsqrt
cld
and
mov
pop
ret
sbb
adc
mov
jb
mov
and
scas
sbb
or
icebp
push
fadds
cmp
aam
cltd
in
cmp
scas
mov
and
pop
fsubrs
test
lahf
cwtl
fcmove
test
es
in
test
push
and
test
pop
pushl
jle
pushf
sub
les
push
sbb
mov
arpl
add
es
or
ret
pop
fisttps
daa
mov
or
test
pop
ret
sbb
jge
test
xchg
or
inc
pop
cmp
fadds
cltd
jnp
sub
in
test
iret
push
test
jmp
cmp
jge
test
sbb
adc
out
testb
mov
inc
sbb
sub
mov
mov
pop
pop
testb
inc
sti
pop
dec
mov
mov
mulb
mov
sbb
out
xchg
test
lahf
pop
sti
xor
les
or
xor
fstpl
push
pop
lret
mov
xchg
push
adc
sbb
and
inc
fst
xchg
sbb
int3
pop
test
push
call
icebp
jbe
inc
pop
test
jns
sahf
inc
pop
test
push
mov
out
mov
test
lahf
repnz
or
movsb
or
fimull
in
xorb
pop
mov
or
movsl
testl
insl
push
outsb
sbb
in
xchg
fwait
movsb
fwait
xorl
sbb
cmp
bound
mov
bound
mov
mov
test
mov
cli
mov
outsl
test
sub
xorb
cmpsl
jnp
and
fiadds
dec
mov
adc
test
test
shll
lods
push
mov
sub
xor
int3
insb
cwtl
mov
std
xchg
inc
ret
test
jp
in
mov
push
into
mov
jl
jg
rcrb
out
mov
scas
bound
xorl
cmp
or
push
xor
mov
test
push
xchg
inc
mov
pop
test
ja
in
fiaddl
fnstcw
dec
in
in
fstl
pop
pusha
push
add
dec
movsb
add
pop
or
lcall
insb
or
pop
dec
push
mov
cmp
mov
popf
sbb
outsb
xor
in
and
mov
sbb
dec
mov
fwait
test
jnp
test
xchg
les
mov
test
roll
mov
lahf
dec
dec
inc
int3
fiaddl
aas
test
movsb
out
jl
sub
pushf
and
jo
in
test
cmp
movsl
les
test
cmp
out
and
out
scas
adc
cmp
jb
and
test
cmpb
int
filds
dec
and
test
adc
cmp
repz
fsubrl
popa
inc
xor
test
es
js
pop
pop
or
test
pushf
jns
adc
mov
lahf
push
mov
and
and
addr16
fs
xchg
add
jno
hlt
cmp
outsb
mov
test
push
sub
mov
jecxz
faddl
dec
pusha
enter
push
xor
into
mov
test
outsb
out
pushf
mov
and
xchg
test
iret
out
mov
test
push
push
cmpsb
lret
push
sahf
push
mov
imul
mov
in
popf
mov
repz
mov
icebp
sub
clc
or
xorb
mov
pop
test
cltd
orb
test
mov
test
gs
outsb
push
pushf
popa
test
cmp
push
add
jbe
outsb
test
pop
cwtl
sub
cmp
or
in
mov
repz
inc
loope
cmp
dec
push
xor
test
or
leave
mov
push
mov
or
dec
test
and
mov
shlb
cs
add
mov
imul
inc
scas
xchg
out
test
pop
add
test
mov
xor
xchg
in
fiaddl
pop
test
xchg
je,pn
in
push
test
cmpsb
dec
sbb
push
or
xchg
les
bound
cwtl
test
stc
adc
cmp
mov
pop
testb
loop
je
test
enter
out
rclb
arpl
mov
and
dec
and
bnd
pop
fists
mov
mov
mov
adc
pop
in
loope
mov
lods
cld
mov
pop
arpl
mov
aad
lahf
test
mov
sub
stc
icebp
in
lret
sub
sub
stos
or
and
les
push
mov
add
cmp
arpl
dec
pop
dec
push
subb
mov
loopne
mov
push
jne
push
int3
mov
test
daa
subb
jl
mov
lds
xor
mov
test
cmp
add
dec
or
mov
cmp
div
mov
mov
add
cmp
adc
jns
dec
push
inc
imul
test
mov
pusha
or
pop
arpl
negl
push
mov
outsb
inc
sahf
xor
lahf
cmp
test
cmc
pop
fucom
sub
dec
cltd
iret
test
mov
test
int3
into
testl
sub
sub
nop
pop
test
les
lret
mov
je
mov
outsl
sub
mov
pushf
adc
cmp
fldenv
in
rolb
lret
mov
in
aaa
inc
sub
or
jle
mov
int3
push
inc
out
adc
mov
out
ss
test
hlt
pushf
in
add
jnp
lahf
ret
xlat
mov
mov
mov
lds
decb
xchg
inc
icebp
das
in
jb
sbb
mov
pop
int
fldl
es
mov
mov
xchg
scas
enter
into
test
and
es
movsb
add
and
cmp
adc
cli
test
imul
jecxz
push
push
test
or
shll
filds
inc
xor
xchg
addl
pushf
fcmovbe
sub
pop
pop
mov
cwtl
adc
repz
mov
adc
mov
dec
test
xchg
fnstcw
jg
fistl
test
pop
repnz
ficomps
scas
lret
dec
xchg
mov
outsb
push
in
outsl
push
iret
xor
dec
es
xchg
stc
scas
test
xor
adc
or
sub
dec
add
fldcw
loop
imul
sub
bound
loopne
sahf
mov
xchg
cmp
test
lahf
jmp
imul
pushf
xor
mov
decb
sub
jg
test
push
push
dec
add
cmp
test
repnz
enter
int
mov
inc
cmpsb
nop
fstps
jecxz
cmp
add
xlat
push
dec
loop
mov
insb
and
imul
mov
push
lcall
int
jecxz
mov
jbe
cs
lret
mov
lock
mov
bound
cli
fistps
shll
xor
test
cmc
add
sti
test
test
dec
lcall
fstps
xchg
jbe
or
lret
out
lds
inc
cld
movsb
outsb
movsl
inc
mov
push
pop
mov
xchg
ljmp
mov
inc
sbb
inc
adc
aad
sysenter
les
xchg
lahf
test
xor
roll
cltd
or
xchg
inc
ret
cs
cmp
popa
jae
shlb
dec
lahf
xchg
in
mov
cld
insb
shlb
add
lcall
xchg
mov
mov
shrl
xlat
mov
sahf
mov
dec
out
cwtl
jnp
out
test
mov
mov
test
cli
and
in
test
pop
shll
mov
mov
test
mov
dec
and
test
fistpll
push
test
leave
lods
and
sub
into
mov
lcall
and
stos
std
push
mov
cmpsb
adc
test
xchg
repz
push
or
mov
in
or
mov
test
push
test
xor
loope
mull
arpl
xchg
out
mov
movsb
popa
out
cld
dec
dec
and
pop
xor
cmc
aam
jne
xor
loopne
xor
mov
nop
leave
inc
mov
xchg
mov
test
mov
lcall
stos
and
push
mov
test
mov
les
pop
mov
dec
inc
add
cmpsl
push
test
int3
add
push
and
mov
jp
enter
or
pop
stos
fisttps
test
jmp
test
movsb
inc
leave
xchg
pushf
xchg
out
int
mov
mov
or
mov
mov
jmp
xchg
mov
rorl
dec
test
ja
pop
test
repnz
faddp
test
add
bndldx
inc
pop
push
jp
insb
xchg
movsb
in
cmpsl
cmp
mov
test
sub
mov
mov
pop
mov
lds
dec
test
insl
and
clc
aaa
in
sub
mov
sbb
in
es
dec
add
mov
sub
orl
xchg
mov
adc
lds
xlat
jle
int3
enter
test
test
test
xchg
icebp
lcall
das
shlb
dec
in
repnz
sbb
mov
imul
xchg
cmpsb
sar
mov
movsl
decb
lahf
lret
movsb
push
dec
push
cmpsl
add
les
sarb
xor
mov
test
cmp
dec
movsb
cmp
nop
iret
movsl
lock
insb
xchg
insl
test
inc
push
adc
xorb
jae
test
into
lret
test
or
in
mov
stos
mov
fstpl
int3
in
lcall
leave
and
adc
mov
and
mov
leave
push
push
xchg
pushf
xchg
in
insb
xchg
test
dec
les
sub
outsl
lret
pop
dec
sbb
clc
stos
test
sti
push
push
cwtl
and
cmpsb
cmp
outsl
push
lcall
pop
mul
and
cmp
add
inc
mov
and
popa
fwait
mov
mov
movsb
sub
lret
testb
loop
cli
insb
push
inc
or
mov
lret
dec
inc
adc
push
sub
xchg
test
loope
movsb
bound
xchg
cwtl
mov
inc
arpl
or
xchg
fsubl
test
dec
sbb
repnz
movsb
inc
xchg
push
sbb
push
outsb
into
mov
adc
lahf
dec
xor
loop
add
dec
incl
sub
mov
xchg
dec
xchg
mov
mov
and
pop
test
subb
mov
jns,pt
sbb
mov
sbb
es
aad
in
xchg
xor
enter
dec
test
push
cmc
in
pop
fidivrs
rcll
orl
lcall
add
in
and
test
jne
mov
and
daa
enter
cmpsl
cmp
pop
xchg
lods
mov
sub
sti
jl
mov
adc
fnstenv
insl
bound
inc
jbe
push
inc
lret
dec
mull
bound
aad
dec
pop
mov
sbb
sub
jp
lcall
lods
dec
xlat
outsb
aam
pop
mov
cmp
inc
repnz
ret
mov
add
cmp
push
test
adc
pop
leave
push
loop
lods
and
test
movsb
insb
push
mov
test
sbb
sub
pop
xor
jmp
sub
test
jbe
push
push
clc
loope
test
and
lcall
cs
xlat
loop
repnz
test
jge
dec
das
icebp
inc
mov
xchg
test
push
loope
and
enter
xchg
fimuls
mov
sbb
sub
sub
out
cmp
test
test
enter
pusha
push
pop
mov
pop
lods
test
les
test
into
pushf
ds
mov
outsb
mov
inc
cwtl
push
les
push
mov
test
mov
sbb
cld
jp
mov
sub
lcall
push
stos
inc
inc
seto
push
sub
fs
mov
in
loope
loop
movsl
jb
push
push
sbb
jmp
mov
rorb
mov
in
jae
bound
cmp
out
push
xchg
test
dec
mov
addl
es
stc
xor
and
xchg
test
inc
sub
cli
les
shl
popa
push
adc
mov
push
out
ljmp
dec
push
test
xor
cmp
adc
out
mov
nop
mov
inc
push
mov
shll
sarb
fs
test
fidivrl
push
sub
jl
xchg
aas
push
test
imull
cmp
ds
mov
mov
lret
cmc
mov
ljmp
cmpsb
test
repnz
roll
dec
orl
outsl
mov
cwtl
mov
pop
fs
cmc
push
stc
xchg
ljmp
push
dec
sub
repnz
cwtl
addr16
in
fstps
test
test
sub
setnp
cmc
ss
mov
test
mov
std
sbb
add
dec
jne
test
notb
pop
pop
sub
loope
push
add
adc
test
push
push
xor
dec
sahf
jb
inc
jp
repnz
adc
and
call
jmp
sbb
js
push
jno
pop
pop
testb
jnp
adc
in
mov
mov
jmp
data16
jmp
xor
inc
jp
repnz
hlt
test
sbb
das
pushf
ret
in
test
push
orl
stos
out
scas
cs
xchg
test
test
lret
push
loop
push
out
and
lahf
add
cmp
inc
jmp
insb
out
fldenv
jbe
dec
inc
test
imul
int
cld
add
in
cmp
pop
in
push
jns
movsl
fucomp
je
or
test
push
add
out
out
mov
sahf
dec
test
clc
pop
mov
sbb
test
xchg
jp
xchg
xchg
test
lcall
movsb
lock
dec
lcall
push
outsb
test
inc
push
outsl
sub
loopne
test
jae
mull
and
push
push
sbbl
or
enter
repz
test
push
xchg
testb
call
loopne
xchg
and
or
nop
fldenv
out
push
shrb
aaa
test
push
lcall
test
dec
test
mov
pop
pop
test
sub
fwait
int
add
mov
mov
lea
sbb
xchg
pop
clc
out
test
fdivrs
add
pop
add
push
in
out
mov
scas
jo
pop
pushl
pop
cmp
xchg
or
push
push
mov
repz
mov
test
sub
incb
out
ljmp
inc
test
and
mov
in
and
aam
pop
roll
cli
xchg
mov
mov
dec
out
into
movsb
in
cmpsl
xchg
jmp
fsubrl
insb
popf
lret
xchg
test
mov
stos
cmp
insb
add
repz
fldenv
mov
xchg
xor
inc
push
fwait
ret
cmp
jae
pop
dec
jbe
sub
aam
sbb
out
and
jmp
out
bound
jecxz
mov
rcrb
inc
xchg
adc
in
test
imull
dec
loope
out
pop
mov
cltd
or
and
mov
push
cmp
sahf
stos
mov
mov
push
dec
cmp
dec
movsb
inc
or
or
loop
inc
cmp
call
jmp
push
loope
lds
enter
cmp
out
mov
xlat
dec
mov
mov
xchg
cltd
shll
in
in
xchg
xchg
pop
mov
push
mov
roll
flds
loope
mov
pop
xchg
test
jno
sahf
test
sti
inc
dec
fucomp
daa
inc
and
scas
push
js
pop
xchg
test
dec
es
insl
pop
test
push
ret
fnstcw
mov
leave
movsl
and
test
push
testb
lcall
push
mov
push
xor
or
jmp
push
jle
inc
mov
mov
fisubrs
push
push
xor
dec
hlt
out
mov
mov
cmp
loopne
mov
or
jge
loop
test
sti
jbe
clc
test
cwtl
mov
test
jae
xor
shlb
mov
lea
das
stc
mov
outsl
lods
lret
in
sbb
push
int3
loope
cltd
stos
cmc
xlat
xchg
call
mov
test
dec
jp
push
popa
mov
aas
sbb
xor
jle
sub
test
imul
dec
lock
sbb
cltd
rcll
enter
fldcw
imul
push
ret
test
mov
sub
out
fucomip
dec
test
pop
mov
mov
and
nop
test
insb
xor
loop
and
pop
dec
xor
stos
lods
test
mov
xchg
push
outsb
add
ljmp
or
stos
sbb
mov
in
test
dec
ret
xchg
jb
test
lret
push
loopne
inc
mov
rolb
hlt
imul
int3
repz
pop
mov
stc
popa
lcall
popf
cmp
push
es
test
mov
push
test
lret
mov
sub
pop
ret
in
mov
mov
fsubrl
leave
loope
ljmp
fwait
in
and
mov
into
enter
cmp
inc
inc
cmpsl
mov
dec
cwtl
push
test
sbb
dec
or
xchg
mov
call
sbb
pop
rcrl
das
pop
call
lret
lahf
pop
mov
lcall
daa
and
lret
push
lcall
jno
xchg
inc
outsb
movb
aad
and
test
pop
test
xor
push
jne
and
and
outsb
jmp
pop
push
mov
inc
test
test
ret
sub
sub
ret
cwtl
data16
loope
cmp
lds
cmp
test
xorb
in
fnstcw
in
mov
jno
bound
leave
and
adc
out
cmp
pop
mov
test
push
imul
mov
push
cmp
sbb
test
cli
mov
pop
add
test
out
dec
sub
mov
bound
pop
out
sub
cmp
aaa
aam
arpl
or
sbb
xchg
xchg
rcrl
clc
test
jge
dec
and
sbb
test
cli
and
dec
inc
or
lret
mov
push
inc
lds
das
xor
push
test
mov
sti
aaa
insb
stc
cmp
inc
and
sbb
loope
cwtl
bound
call
stc
icebp
mov
fmuls
addr16
and
stos
dec
outsb
cmc
subb
xor
cltd
in
test
enter
pop
inc
data16
pop
mov
push
xor
push
bnd
inc
xchg
push
adc
jmp
lcall
inc
xor
jmp
in
push
loopne
es
mov
mov
jl
sbb
repnz
or
mov
iret
pop
int3
mov
test
push
in
test
mov
jp
pop
fdivp
xchg
les
out
rclb
or
iret
ds
test
dec
test
lds
dec
icebp
clc
mov
inc
jecxz
mov
cmp
cltd
xor
xchg
dec
dec
dec
addl
jbe
mov
inc
adc
in
cmpsb
pop
sbb
cmpsb
mov
jnp
push
test
fildl
test
inc
stos
add
fsubs
imul
loop
test
loope
test
xchg
jne
push
xchg
test
add
int3
inc
add
sub
push
bound
fwait
repnz
push
mov
jp
sub
xchg
sub
jg
mov
arpl
scas
sahf
xchg
mov
jns
sbb
subb
xor
into
push
aam
jmp
leave
test
inc
imul
dec
pop
pop
add
jmp
push
call
insl
sti
inc
dec
inc
test
cmc
ljmp
cmp
daa
adc
movsb
out
or
push
pop
or
mov
cli
lret
test
in
aaa
ja
scas
out
and
icebp
enter
add
js
sbb
psrlq
test
in
or
in
leave
sahf
dec
sbb
test
insb
xchg
xchg
mov
sub
and
movsl
stos
out
mov
xor
mov
insb
into
lahf
movsl
mov
dec
mov
sub
cli
test
ja
pushf
test
xchg
xor
dec
push
mov
test
test
in
xchg
mov
loopne
mov
inc
scas
and
test
or
in
adc
shl
in
movsl
insb
pushf
in
test
int3
test
xor
mov
sahf
adc
push
test
mov
int
push
test
xchg
cwtl
mov
mov
test
sub
lahf
movsb
xchg
es
daa
insl
pop
add
popa
loopne
out
shr
bound
sub
jle
test
or
test
jmp
push
test
xchg
adc
stos
cmp
test
shlb
pop
mov
mov
insb
xchg
mov
inc
dec
test
and
jb
into
mov
test
or
int3
test
mov
ljmp
sbb
mov
xchg
fwait
push
pop
push
and
clc
in
daa
push
test
jmp
cwtl
cld
pop
incl
outsb
sub
inc
mov
lcall
test
inc
sar
repnz
mov
sbb
roll
mov
cli
fs
sub
jp
mov
mov
xor
adc
jns
test
lret
cmpsb
je
mov
testb
cmp
pop
gs
int
arpl
cmc
test
mov
test
pusha
sub
jge
inc
mov
adc
cmp
mov
pushf
test
mov
mov
movsl
rorl
shlb
jbe
mov
pop
push
and
inc
out
sahf
in
lds
popa
pushf
and
or
jge
rolb
cmp
jmp
sub
clc
add
push
and
mov
or
dec
sub
ss
push
push
jp
test
in
inc
mov
test
test
push
mov
xor
xchg
in
sbbb
rcrl
mov
jmp
out
mov
loopne,pn
test
gs
pushf
fists
dec
test
sub
xor
rcrb
lods
pop
add
fldt
test
out
in
pop
sti
jmp
or
xlat
mov
out
sbb
hlt
popa
lods
cmp
test
cwtl
sub
xlat
gs
jmp
inc
clc
or
repnz
addr16
jbe
xor
mov
aad
xchg
mov
dec
das
iret
pop
test
jno
sub
add
movsb
les
cli
xchg
dec
test
inc
ret
xor
imul
pop
pop
cmp
iret
test
shr
dec
cli
mov
test
mov
push
and
push
mov
fcomps
out
cmp
inc
lcall
lods
enter
adc
mov
andl
test
sub
mov
jmp
dec
out
scas
cmp
push
lcall
xchg
xchg
outsb
dec
adc
imul
push
dec
test
aam
inc
jmp
or
jbe
xor
cmp
sub
das
les
sahf
movsl
push
pop
and
test
jae
xor
stos
std
test
jp
mov
in
mov
inc
lods
outsb
push
arpl
jae
push
jl
andl
ja
loopne
call
lds
cs
jmp
lods
jbe
not
arpl
sti
lea
pop
jecxz
dec
mov
in
jmp
popa
mov
arpl
nop
cmpsl
repz
jnp
pusha
sub
lods
repnz
cli
mov
mov
fdivs
daa
mov
or
ficompl
je
aam
movsb
inc
xor
dec
jge
out
add
adc
test
sub
test
pop
fwait
inc
jae
cmp
inc
test
fstps
inc
and
inc
lret
push
dec
push
mov
add
fisttpll
test
sub
fiadds
and
and
lret
adc
jmp
stos
aam
nop
inc
mov
out
jl
push
mov
sbb
jecxz
push
push
adc
xor
inc
imul
inc
adc
jecxz
lret
dec
gs
push
dec
sub
lods
jle
or
test
ljmp
fmull
int3
les
arpl
xlat
jns
fadds
add
mov
rcrb
lcall
jp
clc
xchg
mov
cld
call
js
sbb
cli
loopne
pop
xchg
mov
loop
bound
test
inc
push
test
mov
bound
and
xchg
mov
adc
mov
adc
sbb
fadds
jbe
ja
lret
subb
cmp
xchg
xor
test
sub
cwtl
rolb
lcall
es
adc
mov
lods
aaa
cmc
and
jp
cmp
dec
mov
sahf
pop
xor
bound
fs
mov
shlb
adc
jne
cli
addr16
xchg
add
es
adc
leave
test
mov
mov
test
dec
js
lea
add
sti
sbb
imul
das
arpl
mov
cli
sub
iret
call
inc
xchg
pop
adc
popf
cmc
cli
test
pop
fdivl
test
adc
mov
loopne
out
mov
mov
and
fwait
ss
mov
sub
testb
std
push
test
mov
adc
cmp
sbb
push
negb
test
inc
and
test
pushf
ret
test
ror
lret
sub
cmp
pop
out
mov
test
mov
repnz
pop
movsl
sbb
decb
sbb
stos
pushf
and
ret
cmp
cltd
fidivrl
loopne
jmp
jg
mov
or
lds
subb
aaa
or
sbb
mov
or
push
test
cmp
test
or
test
arpl
dec
lods
jb
aam
aaa
enter
shrb
mov
pop
mov
push
sbb
mov
push
rolb
cmp
mov
test
cli
movsl
xor
push
pop
in
fs
test
add
push
mov
movsl
dec
cli
pop
je
repnz
sbb
lret
dec
sbb
mov
add
pop
loop
sti
pop
and
je
out
test
dec
cld
lods
insb
pop
mov
mov
push
sbb
fwait
test
push
push
movsb
mov
mov
outsb
pop
and
in
mov
mov
lcall
sbb
mov
cmpsl
push
andl
xchg
or
stos
test
sti
mov
xchg
mov
or
jo
fstpt
mov
test
ja
push
pop
dec
sub
dec
sbb
ret
idivb
and
sub
xchg
test
stos
sbb
jp
icebp
dec
mov
and
sub
mov
loopne
pop
dec
inc
mov
js
push
lea
test
cs
inc
cmpsb
out
add
sub
idiv
add
sub
addb
xor
inc
pop
pop
push
test
test
jmp
test
fidivs
ja
jle
scas
es
mov
test
pushf
dec
pop
lret
test
addl
xchg
ss
pop
cli
cmp
mov
adc
push
pop
and
test
adcb
push
xchg
stos
inc
movsb
sub
mov
push
insb
push
or
sbb
test
dec
jecxz
xlat
cmp
sub
push
xor
cmp
cmp
pushf
test
lret
fwait
shr
cwtl
test
cmp
push
test
repnz
xchg
jb
xchg
pop
mov
jp
jecxz
adcl
or
xor
pop
lods
xchg
imul
les
test
mov
jmp
into
and
test
inc
test
xchg
or
jp
insb
mulb
cwtl
test
ss
dec
test
push
cmc
fcmovnb
adc
test
loop
and
gs
dec
test
push
xor
xchg
roll
rorb
scas
mov
cmp
xchg
test
mov
ja
add
fcomip
fmuls
je
push
add
push
fs
cmc
lret
ret
jmp
dec
add
fwait
pop
imul
arpl
movsb
mov
cwtl
movsl
and
into
shl
lods
inc
xchg
ficoml
out
movsb
cmc
sbb
mov
or
insl
jmp
push
push
jae
push
pop
int
add
adc
test
xor
sbb
sbbl
sub
test
subl
ja
sub
pop
xchg
into
test
shlb
ljmp
pop
out
fsts
sbb
shrb
call
mov
test
movsb
jge
fsub
scas
cmp
pop
pop
and
mov
push
mov
push
push
roll
pop
mov
shrb
shl
cli
cmp
ret
push
test
loop
ret
push
dec
pusha
sbbl
mov
inc
mov
pop
jo
aas
jbe
inc
push
enter
test
pop
test
adc
sbb
cmc
sub
dec
stc
mov
adcb
xchg
jmp
mov
imul
push
cmc
fldcw
arpl
cltd
sub
nop
pop
cmp
pop
push
call
adc
out
movsb
test
cmp
push
aad
cmp
enter
dec
pop
mov
in
or
mov
dec
aas
dec
int3
or
add
test
inc
loopne
mov
dec
cld
mov
sbb
int3
int
mov
jge
pop
fcompp
jb
movsb
or
enter
je
test
out
push
jecxz
fisubs
add
dec
mov
xchg
mov
cwtl
aad
ret
xchg
inc
in
pop
bound
or
int
sub
pop
ljmp
pushf
pop
lret
cmpsb
mov
icebp
fmul
test
test
imul
jb
fwait
xchg
pop
in
sti
imul
scas
adc
cli
mov
out
add
test
test
adc
adc
outsb
mov
mov
bound
mov
dec
push
and
cltd
mov
test
bound
push
call
test
leave
jg
stos
add
xchg
sub
outsl
xchg
mov
and
movsb
loopne
add
lahf
and
enter
mov
in
movsl
test
addb
das
mov
lret
xchg
sub
push
testb
arpl
scas
out
aad
bound
lea
mov
and
sti
dec
dec
cwtl
push
test
fs
dec
or
jno
stos
cmp
lahf
test
xchg
xchg
inc
jmp
mov
je
cmp
pop
or
and
ds
ret
test
ret
ljmp
pop
std
enter
fwait
push
jns
hlt
test
daa
enter
xor
test
pop
aaa
mov
leave
mov
je
test
xchg
push
fbld
pushf
cltd
not
int3
dec
test
sub
and
sbb
push
fucomi
sub
cmpsb
sahf
cltd
scas
dec
push
aas
ret
mov
pop
loope
adc
and
in
stos
idivb
or
mov
jae
gs
mov
fbstp
mov
arpl
cmpsb
and
mov
pusha
iret
fisubrl
mov
mov
ds
pop
in
pop
fs
stos
test
xchg
mov
jecxz
and
test
mov
fldcw
popa
dec
inc
pusha
je
stos
mov
rorl
adc
aas
popf
mov
xchg
test
mov
push
jmp
jb
push
and
call
std
push
jle
sub
movsb
fsts
mov
cmpsl
leave
test
imulb
ja
mov
ret
dec
add
inc
jb
jmp
test
std
fptan
inc
idivb
jb
hlt
bound
ret
shrl
mov
lcall
pop
pop
cmpsb
dec
pusha
xchg
mov
dec
dec
fwait
mov
nop
cmc
fbld
xchg
out
or
sub
loopne
mov
jne
aad
push
or
outsb
xlat
cmpsl
std
sbb
cmc
add
test
push
fwait
cmpsl
mov
and
cmp
sbbl
sub
pop
test
in
jne
aam
jb
and
movsl
inc
xchg
mov
enter
jbe
xchg
mov
sbbl
push
mov
mov
bound
test
clc
stc
aas
lock
ret
jp
mov
gs
jl
add
push
mov
test
sub
push
cwtl
frstor
cmp
jp
pop
mov
mov
stc
test
cmpsb
bnd
sahf
jne
jb
and
test
mov
sub
xchg
add
mov
lods
sahf
mov
cmp
mov
in
cmp
out
test
loopne
mov
xor
dec
test
mov
sub
xchg
jle
xchg
bound
adc
dec
in
pop
ja
sahf
jge
push
lods
test
pop
dec
pushf
sbb
mov
dec
aas
mov
leave
cmp
hlt
aad
mov
mov
fdivs
popa
sbb
push
mov
mov
jns
aad
in
ds
xor
mov
loope
cmpsb
dec
in
mov
int
cld
xchg
mov
sbb
into
sub
jp
push
adc
jge
xchg
dec
xchg
loopne
mov
test
mov
test
cwtl
fsts
lret
jbe
or
test
lods
jg,pt
mov
cli
xchg
dec
sub
adcl
lret
js
lds
repnz
pop
mov
mov
popf
nop
test
and
push
lea
les
xchg
test
or
mov
call
test
push
test
jno
lcall
ja
sub
fwait
and
aad
add
sbb
lock
popl
sahf
mov
sub
testl
fildll
mov
shll
or
cmp
test
xchg
lcall
into
aas
test
sbb
loopne
mov
cli
and
jne
subb
sbb
test
lods
pop
incl
mov
aas
icebp
js
clc
cld
mov
dec
fs
out
jmp
xor
xchg
and
or
insl
cmpl
add
fildl
cmpsl
testl
test
sub
ss
clc
into
xor
enter
mov
xchg
test
roll
xchg
pop
test
stos
push
mov
out
jne
movsb
dec
xchg
dec
dec
fwait
jnp
pushf
mov
xor
arpl
subps
lds
pop
xchg
dec
out
pop
je
xchg
push
mov
mov
pop
sub
addr16
test
push
adc
add
mov
mov
in
shrl
add
mov
cld
mov
in
cmpsl
int3
jl
mov
push
scas
jmp
push
cltd
mov
loope
mov
ljmp
jg
mov
clc
sub
nop
int
or
test
cli
xchg
sub
inc
imul
xor
inc
sbb
mov
test
dec
xchg
adcb
inc
int3
and
fldenv
pushf
pop
jo
shrl
inc
add
xor
mov
test
sbb
cmpsb
test
mov
je
and
std
test
pop
fwait
cmp
das
or
stc
jl
test
loopne
mov
push
inc
lock
test
out
out
test
outsb
sbb
negb
daa
cli
pusha
jp
cmp
es
inc
push
into
cmp
adc
jnp
neg
mov
and
and
inc
test
insb
test
mov
lret
mov
add
popa
mov
test
ret
call
mov
mov
or
out
add
push
je
les
xchg
or
pop
pushf
pop
test
test
push
push
dec
test
je
fdivr
adcl
dec
inc
cmc
fldl
bound
dec
mov
outsb
lret
aaa
je
mov
xchg
mov
sahf
test
clc
lcall
add
icebp
call
mov
mov
dec
std
test
mov
jno
mov
arpl
test
addr16
inc
pop
mov
test
jne
or
mov
pop
push
test
sbb
divb
sub
dec
or
test
nop
out
pushf
dec
test
lahf
and
out
cmpsl
push
pusha
lret
cmc
lds
or
fsubs
test
mov
imulb
jb
mov
and
js
popa
dec
xchg
cwtl
xor
test
movsl
in
jnp
xor
mov
movsl
in
xchg
cmpb
les
cwtl
loope
test
xor
pop
in
and
sbb
jp
dec
lret
pop
sub
xlat
jp
jbe
outsb
push
and
test
pop
push
inc
test
lea
pop
mov
test
jp
push
bound
pop
cmp
in
int
sub
subl
movsl
pop
xchg
jae
addb
push
cmp
pushf
test
cwtl
in
cmc
out
add
test
xor
iret
test
and
dec
jne
sub
cmp
repnz
and
test
inc
pop
xor
test
xchg
sbb
lret
ljmp
shlb
sbb
adc
test
dec
dec
test
pusha
cmpsb
test
out
mov
pusha
jbe
pop
xchg
mov
mov
mov
dec
les
pop
out
xorb
test
std
pop
or
inc
daa
or
pop
mov
pop
or
inc
enter
shlb
lods
push
test
outsb
jo
mov
arpl
or
in
push
inc
push
jo
push
test
inc
mov
lahf
pushf
test
pop
xchg
in
cld
xlat
test
push
and
bound
and
test
jmp
and
test
cld
negb
mov
add
push
movsb
loope
pop
xor
sbb
cmp
mov
bound
loopne
cwtl
mov
mov
cmpsb
and
sub
xchg
adc
popf
shlb
dec
sbb
mov
mov
inc
mov
xlat
or
lcall
aad
test
jne
orb
inc
insl
test
jmp
jns
inc
push
or
arpl
int3
pushf
cmp
bound
mov
lea
enter
stc
in
sub
pop
adc
or
jecxz
and
xor
sti
test
dec
jmp
fisubrl
data16
fldcw
inc
lret
cli
sub
test
pop
cmp
test
outsb
outsl
jbe
xor
cmpsl
mov
sub
cmc
test
pop
loopne
lcall
stos
aaa
xchg
add
inc
mov
sub
xchg
mov
in
fdivr
sbb
xchg
fisubs
jne
inc
leave
out
push
mov
inc
or
mov
xchg
pop
or
sbb
movl
pusha
movsb
cmp
xchg
pushf
dec
pop
cmpl
jbe
push
ja
into
inc
mov
shr
xchg
int3
andl
gs
jp
bound
outsb
les
xchg
dec
mov
xor
out
cmpsb
cmp
arpl
xchg
loopne
mov
sti
loop
dec
mov
movsb
loopne
clc
and
push
mov
or
push
test
stos
sbb
in
test
push
lret
lods
lods
push
test
rcrl
xor
push
push
movsb
pop
xchg
pop
jge
mov
cmp
loopne
cmpsb
pop
fs
test
lret
ja
lahf
aas
test
popf
push
lods
pop
fsubs
test
out
lods
lcall
and
pop
add
icebp
nop
ja
xor
mov
pusha
test
into
sub
cwtl
push
lret
cmp
data16
adc
test
mov
clc
leave
repnz
add
iret
push
lret
xchg
rorl
mov
test
pop
cmp
cmp
xchg
and
mov
mov
ja
rcrb
jns
rcl
clc
icebp
cmp
add
mov
ds
pop
test
in
test
pop
into
xor
arpl
outsb
movsb
push
movsb
or
iret
add
repz
test
int3
jne
sbb
movsb
cmp
call
cli
cmp
outsb
jecxz
ret
daa
sbb
ret
mov
xchg
pop
mov
loop
mov
inc
out
pop
fs
add
jl
test
scas
int3
inc
popa
pop
mov
test
arpl
stos
add
in
cs
and
pop
and
andb
add
movsb
outsb
pop
popa
aaa
xor
in
aad
push
sub
mov
ret
cwtl
adc
nop
arpl
lcall
cltd
incb
mov
xchg
cmc
add
mov
lcall
adc
pop
sbbb
lret
std
add
xor
jbe
mov
arpl
cld
xchg
stos
add
test
inc
dec
cltd
gs
inc
xchg
stc
cmp
sub
mov
pop
test
lea
and
aam
sbb
jle
cmpsl
jecxz
test
jb
in
xor
push
mov
mov
loop
pop
aad
test
add
ficoms
test
iret
mov
loope
adc
int
xor
adc
in
mov
sub
cmp
nop
and
clc
test
jge
pop
jecxz
inc
mov
test
or
test
sbb
jle,pt
and
addr16
pop
cmp
out
jp
inc
stos
loopne
in
xor
cld
cmpsl
decb
adc
arpl
lcall
test
cltd
ror
ficompl
mov
xor
mov
call
or
test
je
pop
jmp
xor
cmpsb
jge
das
int
stc
repnz
int3
in
inc
movsl
push
push
mov
test
sti
sub
outsl
in
pusha
mov
test
scas
and
mov
test
jmp
dec
push
data16
movsb
push
cmp
xchg
popa
inc
push
mov
ret
mov
adc
test
out
mov
xor
aad
xchg
dec
jl
and
into
and
add
push
mov
std
add
mov
adc
jmp
pop
dec
dec
xchg
sub
lock
or
push
pusha
movsb
in
in
clc
ret
leave
mov
mov
xor
inc
dec
aas
sub
arpl
pop
and
int3
or
mov
add
pop
or
sub
cs
fbstp
movsb
test
push
lcall
lods
jmp
add
movsl
mov
ss
stos
lcall
xchg
xor
lahf
imul
and
jno
jge
icebp
inc
sbb
dec
daa
mov
test
push
inc
stos
test
mov
add
test
jl
push
mov
ret
test
xor
movsb
or
push
dec
pop
mov
dec
sub
lds
pop
sub
es
arpl
stc
push
pop
mov
test
and
mov
test
mov
mulb
dec
test
xor
loop
rclb
pop
mov
dec
daa
cltd
xchg
and
out
hlt
jecxz
pop
jne
test
mov
xchg
test
xchg
mov
in
out
jmp
jo
cmpsb
push
test
xchg
sub
add
mov
add
loop
cltd
sub
flds
cmp
aaa
push
xchg
into
push
test
rcrl
loope
lret
repnz
mov
fstps
out
ret
shl
add
dec
adc
mov
mov
push
into
dec
test
mov
pop
testb
sub
stc
jmp
push
ds
int
add
dec
add
gs
inc
stos
adc
fwait
and
bnd
call
cmpsl
jle
cs
push
sub
test
inc
or
aas
pushw
push
push
bound
dec
jns
jmp
dec
mov
hlt
inc
and
test
jl
pusha
jmp
cmpsb
mov
dec
xchg
test
sbb
incb
mov
mov
cmp
cs
sbb
jmp
test
or
test
enter
out
leave
test
std
rolb
ret
inc
and
jmp
clc
xor
pusha
test
xor
cmp
push
push
jecxz
cmpsl
lret
and
mov
gs
sahf
dec
aad
mov
test
scas
and
mov
les
das
fcomps
mov
fwait
cmp
cli
in
lret
fnstenv
ret
sti
mov
mov
xchg
and
add
movsb
jnp
out
outsl
rol
mov
sub
mov
addr16
test
bound
sub
mov
push
pop
xchg
xchg
mov
lret
sbb
fisttpl
jb
in
xor
andl
xchg
test
xchg
or
mov
add
sub
stos
mov
inc
mov
mov
insb
repz
test
lcall
add
pop
mov
xor
xlat
inc
mov
mov
test
fxch
xchg
or
test
push
pop
insb
mov
jg
add
pop
loop
cmpsl
dec
test
inc
push
lock
add
xor
mov
fcomps
add
sbb
cmc
sub
inc
jmp
repz
sub
or
push
pop
pop
inc
test
pop
cmp
push
test
cwtl
in
mov
or
dec
sti
cs
xchg
sub
jnp
pop
adc
jp
fstp
aas
mov
and
test
pop
addr16
cmp
dec
push
test
dec
pop
mov
mov
xchg
stc
lcall
lds
push
cmpsb
pop
and
das
jecxz
scas
aam
test
jle
movl
into
inc
sbb
dec
int
pop
test
in
lret
jmp
xor
sbb
scas
pop
pop
push
sbb
mov
jp
xchg
mov
shl
kaddd
xor
mov
call
push
lahf
xchg
sti
jb,pt
idiv
mov
jl
leave
push
test
pop
sub
sub
cld
test
push
xor
sarl
inc
jecxz
js
out
test
and
inc
lcall
test
pop
cld
ret
mov
mov
rclb
test
pop
push
dec
lret
push
xlat
hlt
test
stc
ret
lret
iret
and
xor
mov
arpl
cltd
xchg
rolb
xor
pop
and
xchg
xchg
call
or
repnz
sub
scas
test
ror
push
mov
add
test
sub
mov
or
in
dec
bound
adc
jno
mov
dec
xchg
mov
push
xchg
clc
test
leave
shl
mov
xor
mov
dec
pop
testl
xchg
mov
sbb
cmp
mov
test
pop
add
jmp
cli
clc
popa
xchg
shlb
js
cmpsl
scas
testl
insl
jl
and
mov
lods
stc
lret
jge
mov
adc
fildll
adc
test
adc
pop
adc
jno
mov
pop
sbb
in
push
test
mov
pop
neg
mov
pop
mov
or
dec
imul
sub
iret
mov
int3
cltd
cli
sub
pop
movsb
in
in
dec
and
cmpsl
sub
arpl
rep
sub
hlt
arpl
idivl
xor
adc
or
sub
in
fldcw
movb
push
push
dec
xchg
js
cmc
setns
dec
test
shll
shll
and
inc
cmp
adc
test
lret
xor
test
stc
repnz
ret
xchg
inc
jle
enter
ret
sbb
and
testb
add
lcall
shl
jnp
mov
sub
jg
push
mov
xchg
movsb
test
push
pop
sbb
pushf
je
pusha
ja
add
pop
and
inc
cltd
dec
mov
mov
xor
xchg
dec
in
jno
inc
inc
mov
rclb
add
stos
push
addr16
test
jb
and
loope
test
or
dec
enter
int3
test
inc
inc
clc
add
test
push
cwtl
movsl
xchg
push
cmovp
test
mov
inc
push
sbb
and
sub
or
push
sbb
mov
inc
sub
pop
xchg
inc
add
mov
cmp
movsb
cmp
test
jp
daa
nop
pusha
push
or
inc
out
cltd
cmp
push
dec
out
mov
fsubrs
jbe
push
xchg
mov
sar
dec
mov
xchg
test
testb
adc
lds
mov
ret
scas
bound
cmc
rolb
pusha
sbb
movsb
aad
fs
bound
leave
add
sub
lret
add
pop
jl
sub
xchg
mov
cmp
dec
lods
fwait
imul
xchg
test
fs
pusha
ret
iret
in
xchg
test
xor
test
xchg
cltd
rclb
push
dec
bound
lods
cmpsl
and
and
ret
and
sbb
ret
cmp
jb
cld
test
adc
test
outsb
dec
mov
cmp
mov
fiadds
push
push
icebp
jmp
aas
mov
cmpsb
mov
or
loopne
jne
and
stos
lods
popa
test
nop
shrl
adc
hlt
sub
test
lahf
jmp
arpl
pop
adcb
lods
bound
jb
lods
mov
cmp
mov
outsb
inc
push
sbb
movsl
xchg
clc
mov
lret
jmp
shll
and
pusha
popa
out
ljmp
cs
sub
into
dec
movsb
add
lea
jle
fstpt
xchg
mov
das
test
or
mov
lock
cwtl
movsb
xor
sbb
idivb
cltd
icebp
js
jno
inc
hlt
bound
jae
repnz
je
je
mov
inc
test
mov
mov
inc
sub
adc
test
mov
ds
insb
jns
bound
adcb
rcr
push
jmp
test
mull
mov
test
sub
pop
rorl
cmp
mov
push
or
sbb
mov
jecxz
xor
aaa
mov
mov
jp
enter
lods
es
icebp
rolb
shrl
push
inc
sbb
test
adc
popl
dec
sub
scas
xor
add
ljmp
test
out
testb
or
loop
andb
cltd
cmp
push
inc
fidivrl
cmp
xchg
push
in
sbb
icebp
jmp
in
mov
xchg
js
es
test
loop
movsl
mov
cmp
inc
mov
test
shrb
inc
cmc
stos
cmpsb
dec
je
adc
sub
in
add
mov
push
pop
int3
cmpsb
adc
cltd
xchg
outsb
stos
jl
mov
std
int
idivb
pop
stos
push
mov
test
dec
mov
lahf
inc
test
test
cmpsl
out
fucomp
pop
cmpsb
daa
insl
test
dec
std
xchg
test
jnp
sub
stos
test
divl
test
int
addr16
sub
xchg
test
mov
enter
inc
jne
arpl
cmp
mov
inc
test
mov
mov
xchg
mov
mov
mov
xor
mov
and
sarl
test
mov
cmpsl
test
push
inc
mov
mov
arpl
and
cmp
mov
movsl
dec
xor
test
xchg
sub
pop
sub
and
dec
fldcw
aaa
aam
int3
test
cs
sub
dec
test
mov
push
and
mov
ds
test
cs
jb
dec
and
cmp
les
outsl
mov
test
pop
jl
popa
mov
push
sbb
shll
ja
data16
pop
movsl
sbb
repz
dec
movsb
push
mov
ljmp
mov
mov
jmp
push
incl
dec
notb
mov
cmp
xchg
not
test
mov
cmc
mov
mov
xor
and
inc
andb
push
mov
andb
divb
mov
mov
adc
jp
int
movsl
cmp
sub
dec
incb
xchg
jb
test
push
test
push
dec
imul
fmul
xchg
push
jnp
add
loope
jl
mov
lcall
jbe
jo
out
test
push
repnz
imul
gs
lds
sub
add
sbb
fcoml
lods
test
dec
hlt
arpl
test
mov
mov
outsb
mov
push
in
and
jo
out
hlt
call
xor
cmp
jae
cmp
in
pushf
repz
inc
and
mov
test
aaa
into
xor
mov
rorb
cmp
sub
cmc
push
xchg
loopne
mov
fiaddl
add
xchg
inc
cmp
sbb
insb
inc
push
sub
cvttps2pi
test
imul
xor
jbe
cmp
movl
lret
sbb
addps
test
pusha
mov
pop
jp
pop
movsb
int3
mov
mov
and
fstpl
xchg
mov
xchg
jge
test
xor
push
insb
or
cs
mul
push
incb
jae
mov
testl
fstpt
rolb
orl
mov
and
jp
mov
fdivrs
inc
int
test
lret
xchg
imul
sbb
jae
mov
dec
lcall
push
arpl
addb
test
fcmovb
add
xlat
or
and
ret
mov
adc
pushw
out
test
cltd
jnp
or
mov
rclb
cmpsb
fiaddl
and
ss
jp
add
pop
setg
adc
xor
outsl
cmp
test
movsb
jecxz
jne
pop
mov
push
and
cwtl
jns
lock
xor
inc
add
xchg
test
xchg
ret
inc
ja
xlat
fcmove
jb
jmp
or
leave
inc
mov
cs
and
mov
test
jnp
lcall
out
test
jl
int3
lret
leave
iret
enter
mov
int
pop
mov
dec
add
push
xchg
repnz
test
cmp
leave
stos
jne
inc
test
out
jle
sbb
aam
sub
and
iret
push
movsl
mov
imul
dec
test
xchg
ret
stos
pop
popa
sbb
bound
pop
clc
push
and
jecxz
fadd
add
call
mov
and
inc
cld
test
aas
jmp
test
jle
sub
frstor
std
push
daa
jmp
test
ret
dec
push
test
int
insb
mov
mov
push
loop
sti
mov
inc
push
rorl
push
xor
in
call
mov
fs
inc
cmp
mov
pop
xor
cmc
sbb
idivb
test
mov
jae
test
dec
inc
sub
mov
mov
cmp
imul
xlat
outsb
sbb
test
aad
ja
push
jle
xor
je
fcmovne
sub
sub
test
loop
mov
sub
les
mov
push
sub
lret
jp
xchg
mov
inc
enter
stos
mul
or
or
pushf
and
in
jmp
cmp
loopne
mov
cli
out
push
and
movsl
mov
lods
lret
test
xor
adc
cli
test
clc
xchg
testb
loopne
testb
or
and
dec
test
rorb
pop
or
shll
out
mov
inc
mov
test
xor
pop
pushf
test
mov
mov
stos
test
dec
testl
out
pushf
imul
or
faddl
dec
ret
test
in
adc
int
out
test
mov
dec
adcl
rclb
cmc
sub
enter
push
call
and
mov
iret
cmpsb
mov
jne
aad
cmpsl
jmp
cs
cmp
ret
mov
aas
sub
test
imul
ds
enter
jp,pn
lods
mov
push
xchg
mov
push
pop
mov
xchg
cltd
dec
test
imulb
test
mov
cmpsb
imul
fprem
icebp
mov
in
fistps
cmp
cmp
inc
test
and
mov
je
movsl
cmc
test
mov
js
cld
in
bound
leave
test
mov
sbb
test
adc
add
inc
addl
test
xor
pop
out
lret
iret
test
or
xchg
test
xchg
in
test
out
insb
stos
test
push
adc
sub
xor
jb
cmpsl
cmp
shll
add
or
lods
xchg
mov
mov
test
and
movsl
dec
mov
sub
cs
test
cmp
xchg
test
xor
dec
test
sbb
movsb
dec
push
ja
xchg
lcall
sub
test
fcomps
or
mov
outsb
das
cmp
je
mov
in
push
dec
dec
mov
cltd
ret
mov
shl
or
dec
mov
push
arpl
lret
icebp
iret
pop
lock
enter
loop
test
dec
pushf
or
add
movsb
add
sub
in
lods
xchg
cmp
js
push
mov
bnd
mov
sub
test
mov
xchg
sub
aas
xor
or
enter
pop
xchg
xor
test
dec
test
add
mov
jmp
stos
test
and
ja
js
pop
and
test
shrl
dec
dec
xor
or
dec
test
push
or
test
mov
es
daa
fmuls
mov
mov
xchg
popa
movsb
test
push
stos
insb
aad
test
fldcw
add
dec
scas
inc
test
mov
mov
in
xor
push
mov
flds
lcall
les
daa
jmp
adc
mulb
push
adc
lcall
insl
sub
sub
mov
sub
push
in
mov
adc
push
mov
mov
rolb
test
mov
inc
xor
lods
test
shll
cli
cmpl
and
dec
pop
es
adc
push
stos
jnp
push
fldenv
jp
mov
repnz
js
addr16
movsl
xchg
push
mov
repz
sarb
xor
pop
jb
test
push
bound
out
int3
filds
push
mov
mov
lret
sub
insb
cs
notb
add
hlt
jge
pop
std
fwait
xor
jb
sarl
pop
in
sbbl
mov
mov
mov
test
stc
and
test
addr16
push
mov
iret
and
mov
sbb
ret
jnp
test
inc
stos
dec
clc
je
aas
mov
test
adc
and
sub
xchg
xor
repnz
push
push
xchg
sbb
mov
aas
push
and
jecxz
sbb
clc
test
push
jno
ret
sarb
leave
arpl
das
in
pop
dec
cmpsb
mov
or
add
enter
test
dec
mov
imul
sub
or
push
xor
or
out
out
adc
repnz
repz
std
dec
stos
ja
movsb
les
in
mov
mov
cli
mov
add
fldcw
dec
inc
in
add
pushf
cmp
mov
cmpb
int
or
rclb
cmpsb
test
lcall
aas
test
sub
movsb
pop
shlb
pusha
cmp
in
xchg
dec
ss
roll
loopne
adc
sbb
xor
leave
dec
mov
hlt
in
into
pop
push
dec
lods
cmovbe
les
or
sbb
pop
push
into
movsb
test
out
cmp
cld
mov
dec
sarl
and
idivb
bound
aam
rcrl
test
add
xchg
sub
cmovo
jge
fwait
mov
and
movsb
push
fidivrl
data16
out
or
inc
dec
dec
push
sub
push
divb
pop
pop
les
test
pushf
mov
inc
in
jae
and
mov
sub
mov
xor
or
scas
test
cld
jl
test
push
sbb
sti
xchg
int
fcomps
push
xlat
test
enter
ds
mov
aad
dec
mov
cwtl
cld
cli
jnp
cmpb
adc
mov
pop
movsb
mov
test
fiaddl
stos
jne
add
mov
test
std
pushf
mov
lock
pop
cltd
or
mov
mov
pop
push
xlat
sub
test
push
jle
mov
test
adc
mov
adc
stos
testb
enter
adc
sub
mov
shll
lds
pop
sbb
test
dec
movl
push
leave
test
cld
sbb
sub
xchg
sbb
data16
sub
adc
mov
iret
pop
sub
stos
test
pop
aas
jecxz
fbld
cmpsl
test
or
dec
mov
xor
adc
pop
dec
mov
cmp
out
cmp
out
cs
push
faddl
test
cmp
lods
jnp
and
or
cmpsb
sub
mov
inc
xor
push
loop
cs
clc
movsb
loopne
popa
mov
pop
imul
push
fwait
or
test
and
sbb
shll
push
icebp
sub
xchg
push
jae
fdivs
xor
sbb
mov
mov
dec
pop
push
clc
in
test
imul
lret
into
loope
push
aad
daa
enter
mov
in
stos
jb
jmp
xor
mov
pop
test
daa
inc
enter
test
sahf
loop
mov
push
add
into
insb
test
stos
enter
pusha
leave
in
sbb
sbb
push
stc
xchg
test
add
js
push
mov
outsl
sbb
and
test
test
loop
cmp
fcmovbe
lret
lret
or
test
mov
add
dec
push
test
add
dec
inc
cli
xchg
mov
push
stos
mov
lret
mov
popa
xor
addr16
test
repz
push
pop
rorb
mov
iret
into
test
jmp
adc
push
dec
mov
aaa
loopne
push
pop
xor
and
or
adc
sub
or
adc
out
sbb
push
std
test
mov
pop
cmc
pop
movsl
outsl
test
fldpi
add
repz
test
loop
ss
xchg
sub
test
jno
std
test
mov
test
cmpsl
jo
push
scas
or
push
push
int
push
test
cmc
mov
xor
ret
push
mov
test
fs
xor
test
jnp
js
out
or
stc
in
jmp
movsl
cld
mov
test
leave
outsb
or
test
mov
mov
lret
push
arpl
adc
mov
mov
in
aad
sti
in
sub
sub
jns
mov
mov
push
ret
jge
mov
nop
xor
arpl
mov
ljmp
in
cmp
or
mov
pop
mov
push
pop
sbb
push
xor
mov
push
jae
loope
movsb
dec
push
adc
xor
stc
test
or
xor
out
mov
xor
roll
add
test
xchg
push
push
sbb
mov
loope
xchg
mov
sub
mov
dec
testl
xchg
test
adc
dec
test
loop
and
mov
stc
sbb
clc
stos
in
test
sub
rolb
ret
push
in
xchg
pop
or
or
add
and
mov
cld
test
sbb
in
mov
test
cltd
shlb
cmp
pushf
add
pop
adc
and
mov
lret
xchg
lret
pop
fld
insb
pusha
mov
cli
mov
pop
test
shlb
xor
in
std
sbb
loop
aas
int3
cmc
bound
cltd
push
cmp
mov
nop
sbb
shll
rolb
sub
sbb
std
inc
fwait
sub
pushf
ja
push
mov
cmp
inc
test
aas
fs
inc
xor
pop
pop
iret
add
sub
mov
xor
sbb
sub
push
mov
clc
dec
adc
pop
test
dec
out
int3
lods
imull
test
icebp
xchg
mov
test
stos
test
add
sbb
test
repz
idiv
call
mov
pop
sub
bound
movsb
push
lcall
mov
test
and
negb
fbstp
xchg
int
clc
mov
mov
je
or
inc
jg
shr
inc
add
sub
and
push
jle
in
incb
sbb
test
and
xor
pop
push
jbe
int
mov
loope
lcall
mov
test
xor
and
cltd
nop
and
rolb
sub
and
pop
fildl
int3
or
mov
loope
mov
cmp
xor
test
cld
push
mulb
lods
cltd
test
sbb
leave
mov
in
inc
adc
daa
and
ss
addr16
inc
mov
sub
xor
es
cli
mov
call
aam
lahf
mov
iret
mov
fisttpl
sbb
jne
clc
test
or
pop
and
xor
inc
mov
jle
das
pop
mov
std
push
sbb
mov
add
cmp
test
xchg
mov
mov
inc
pusha
test
arpl
mov
cld
sub
roll
inc
cmp
mov
out
stos
mov
bound
pop
push
jnp
stc
push
loop
sub
shrb
jp
lret
test
sub
and
push
xchg
pop
jo
movsl
mov
sbb
jnp
hlt
jmp
lahf
iret
inc
mov
loope
js
pop
loop
cltd
out
xor
xchg
adc
icebp
push
inc
fistps
mov
lea
test
fwait
imul
test
sub
test
jno
push
test
cmpsl
into
mov
mov
sub
dec
in
fsubl
test
cld
push
test
push
clc
mov
cltd
jg
fdivrl
mov
lahf
sahf
mov
xchg
test
mov
mov
push
test
les
das
sbb
jmp
insb
lea
jno
dec
cmp
sti
test
idiv
mov
ja
in
and
mov
mov
xchg
cmc
orl
out
fnstsw
xchg
jl
jo
fiadds
lcall
out
hlt
push
mov
arpl
cmp
mov
xchg
fmulp
cmp
sbb
filds
negl
test
xchg
and
mov
cwtl
pop
outsb
daa
in
bound
imul
add
je
negb
push
insl
stos
lds
inc
inc
daa
xor
in
pop
bound
movsb
add
sub
loop
sub
dec
mov
add
test
enter
insb
test
daa
mov
inc
adc
outsb
fmul
pop
jmp
add
stos
hlt
ja
bound
xchg
test
adc
movsb
test
push
ret
mov
sub
rol
pop
cmpl
or
xor
or
fidivrl
jmp
push
mov
test
shr
loop
push
mov
push
imull
dec
popf
roll
adc
dec
mov
mov
outsb
jl
fcompl
leave
adc
stos
inc
dec
adc
repz
sub
dec
pop
bswap
mov
int3
push
push
pop
test
adc
sti
test
rolb
test
sub
in
and
sub
test
add
lea
jbe
test
fdivp
push
sub
fistpll
sub
test
lret
xchg
sbb
movsb
push
stc
jmp
lock
insb
pop
iret
mov
and
jns
loop
test
pop
mov
add
imul
test
cmp
in
dec
or
enter
bound
fnstcw
shr
mov
cmpsb
test
dec
enter
movsb
movsl
cli
sahf
xchg
test
mov
rcr
xchg
dec
test
int
fiaddl
std
mov
push
push
fwait
jle
stos
enter
xchg
mov
sti
cli
mov
mov
xlat
xor
or
in
fnstcw
push
inc
cmpsl
mov
inc
jnp
clc
xchg
add
divl
test
push
rclb
mov
add
test
icebp
mov
inc
or
stos
out
or
sti
xchg
popf
inc
jge
test
or
pushf
and
cs
cmp
mov
test
pop
out
jg
adc
inc
xor
add
bound
test
mov
idivb
test
xchg
daa
mov
inc
pop
jo
inc
cmpsl
loope
or
push
or
mov
add
mov
ljmp
orl
jo
adc
dec
sub
mov
andl
das
mov
les
test
sub
push
icebp
into
mov
in
stos
jnp
and
xchg
test
pop
cltd
movsb
ret
push
test
inc
and
cmovp
movsb
jae
xlat
sbb
stos
add
dec
cwtl
adc
add
test
test
stos
cld
mov
adc
sub
jle
xor
mov
pop
test
icebp
add
mov
pop
xor
cltd
pop
xchg
ret
bound
movsb
and
adc
fstps
inc
adc
mov
dec
cmp
test
inc
dec
push
test
aaa
adc
fwait
xchg
aad
test
sub
pop
sbbl
iret
cmp
push
test
ljmp
sti
into
test
xchg
mov
xor
inc
and
adc
lds
sbb
daa
inc
in
ret
scas
stos
xchg
fxch
jl
cmp
les
movsl
jo
bound
push
test
mov
test
cmp
test
pop
pop
sub
xchg
sub
in
testb
xchg
and
push
xor
or
xor
dec
push
outsb
in
lods
dec
cmp
das
cmpsb
test
xchg
jae
xor
pop
test
cmp
push
or
xchg
xchg
push
mov
mov
lods
pop
push
call
dec
movsb
mov
cmp
rolb
jmp
push
inc
pop
or
mov
dec
js
fcmovne
stc
mov
loop
cmp
mov
lahf
jl
cmp
mov
pop
sbb
test
pop
and
sbb
jp
int3
mov
and
and
stc
or
sbb
mov
in
imul
scas
leave
mov
push
cld
pop
adc
xor
mov
mov
fldcw
mov
lds
enter
mov
lahf
xchg
pop
add
sbb
xchg
push
mov
jbe
fcoml
add
push
mulb
mov
and
adc
idivl
mov
out
ja
jbe
xchg
out
xchg
outsb
inc
mov
jb
mov
mov
and
sub
xchg
fstpl
pop
pop
mov
leave
or
enter
test
aam
flds
imulb
call
dec
movsb
xchg
out
ret
or
shl
cld
pop
divb
and
repnz
and
incl
cmp
cltd
call
test
mov
repz
mov
jecxz
in
dec
gs
bound
mov
dec
test
xchg
dec
ret
add
jo
pusha
testb
repz
aaa
stc
in
popl
mov
or
aad
test
xchg
pop
mulps
test
jmp
mov
inc
xchg
dec
push
push
in
mov
inc
in
jae
sbb
movsl
mov
cmpsl
data16
iret
fistpll
and
enter
ja
inc
bound
jns
sub
mov
xchg
insb
test
scas
cmpsb
sahf
mov
test
fdivrl
cmp
push
inc
enter
mov
test
pop
dec
and
bound
sbb
out
out
mov
shrb
add
cmpsb
xchg
cltd
or
int
jo
jne
aaa
mov
ljmp
icebp
or
and
sbb
stos
js
push
inc
mov
dec
adc
xchg
arpl
or
stos
sbb
add
mov
mov
movsb
popaw
add
daa
test
xchg
ds
int
mov
out
lds
in
je
test
and
jecxz
popf
loop
test
and
in
mov
xchg
movsb
lods
fmuls
or
test
push
cld
jg
daa
or
movsb
lret
loop
dec
hlt
and
popf
xchg
inc
les
scas
ss
insl
sahf
fmul
adc
sbb
test
sub
fwait
stc
and
ret
mov
int
outsl
test
lret
pop
cmp
sub
les
sub
sbb
ja
fldt
mov
enter
sti
mov
test
rcll
arpl
scas
stos
push
push
and
mov
sbb
arpl
mov
int3
sub
bound
xchg
loop
mov
pop
jmp
add
pop
mov
outsb
inc
sub
jmp
dec
imul
dec
cwtl
xor
pop
int3
dec
nop
mov
shll
test
pop
jmp
test
or
mov
andl
fiaddl
das
shll
xchg
test
jmp
stos
test
nop
jne
mov
mov
data16
out
mov
loop
sub
dec
sub
aaa
jae
mov
jo
stos
test
aas
jg
test
mov
jmp
fs
mov
outsb
and
pusha
cli
jno
sti
lret
add
movsl
jb
rorl
loope
insl
mov
nop
push
mov
push
pushf
or
sub
sub
jae
in
cmp
negl
insb
shrl
mov
push
sbb
outsl
pop
loop
mov
sub
xchg
test
xchg
jl
iret
test
call
out
inc
test
into
or
setns
pop
or
les
loope
push
xchg
daa
je
mov
insb
push
aam
js
pushf
lods
in
frstor
test
xchg
inc
mov
mov
and
push
insb
sbb
out
leave
xchg
imul
outsb
sub
inc
jecxz
xchg
mov
adc
sahf
test
push
mov
aas
push
loop
push
xchg
pop
xor
lret
sbb
mov
cmpsb
xchg
movsl
mov
lds
lea
dec
test
mov
sub
jno
xchg
mov
sub
cmp
jl
aaa
data16
loop
scas
xchg
in
leave
mov
pop
in
pushf
cmc
sub
movsb
ss
cmpsl
insb
fisubl
adc
sbbl
insl
std
pop
lret
xchg
mov
pop
test
xchg
cmp
dec
add
test
fimull
add
dec
dec
mov
pop
repnz
flds
push
mov
lret
push
mov
lcall
fwait
test
adcl
sub
cmp
dec
push
test
or
xchg
add
test
jecxz
xrelease
stos
and
push
and
jmp
dec
sub
sbb
and
or
pushl
mov
dec
lahf
push
and
int
sahf
test
or
mov
dec
xchg
leave
add
loopne
idiv
test
popf
pushf
mov
xor
pop
pusha
jecxz
call
push
shlb
inc
and
pop
pop
les
xchg
test
pop
cmp
flds
push
mov
add
sbb
subb
test
inc
xchg
adc
test
mov
pop
xchg
or
sahf
nop
or
sbb
bound
pop
mov
and
or
test
add
leave
cli
test
ja
sbb
test
cmp
sbb
jae
push
add
jecxz
dec
cmp
stos
ret
add
pop
jg
dec
test
jae
xchg
test
jbe
inc
cld
sub
cltd
mov
testb
fnsave
leave
clc
test
clc
into
add
push
sub
sbb
add
dec
mov
dec
test
pop
and
dec
jnp
test
rclb
lret
xor
cmp
insl
pop
push
test
sbb
sub
fiadds
leave
scas
imul
dec
sti
push
mov
push
cmc
ret
sbb
lret
xchg
movsl
test
and
adc
ja
inc
xchg
outsb
jp
push
jp
pushf
xor
mov
xchg
test
or
aad
scas
pop
cli
jmp
cmp
test
sti
loop
das
mov
test
and
addr16
les
dec
and
arpl
pop
loope
pop
and
adcl
loop
ja
aas
enter
stos
mov
into
int3
cli
arpl
aad
push
mov
or
cwtl
icebp
insb
js
and
adc
mov
cmc
inc
in
cmp
jb
fadds
lock
mov
adc
aad
push
call
test
add
pop
xchg
dec
test
subb
mov
idivb
mov
cmp
pop
lea
sbb
test
enter
sbb
mov
dec
cmc
sub
mov
pop
add
jecxz
test
push
outsb
cmpsl
jb
in
test
leave
mov
test
cmc
shrl
mov
pop
xlat
daa
movsb
mov
lcall
push
test
lret
gs
in
shl
pushf
out
mov
aad
movsb
imul
pop
adc
cmp
sahf
movsb
mov
dec
cli
inc
add
mov
out
pop
mov
xchg
test
test
lret
mov
fnstsw
or
popf
test
insl
dec
mov
xchg
out
in
mov
mov
movsb
pop
in
cli
jle
fs
mov
lods
xchg
jl
imull
mov
pop
mov
cmc
push
test
jno
movsb
push
jb
arpl
and
out
cmp
mov
sub
mov
or
xor
dec
test
jecxz
mov
sbb
xchg
leave
movsl
xor
test
flds
stc
test
das
lock
push
bound
pop
into
pop
and
add
sbb
push
daa
mov
in
mov
pushaw
and
mov
imulb
shrl
jge
push
test
pop
scas
test
leave
imul
cmc
test
aaa
mov
hlt
test
roll
sub
test
jne
push
push
daa
test
leave
stos
adcb
in
lea
cmp
dec
mov
loop
pop
movsl
push
mov
lret
ds
test
inc
ss
fucom
pusha
push
add
and
mov
xlat
ret
pop
out
add
add
es
test
mov
rcrb
bound
in
sbb
in
mov
fadds
repz
test
push
orl
or
xor
ljmp
stos
xor
clc
popf
dec
sub
in
fistl
mov
inc
lahf
test
stos
lcall
mov
mov
inc
scas
in
stc
bound
aam
jb
flds
push
xor
dec
sbb
pusha
inc
aam
push
loope
push
sub
rorb
xor
shll
lods
test
roll
add
test
ds
inc
mov
aad
in
das
loopne
add
cmp
outsb
mov
test
push
stos
movups
sub
inc
test
lret
loop
cli
jecxz
mov
int
mov
cmpsb
movsl
shl
int
mov
iret
stos
mov
sbb
sbb
mov
pop
inc
add
arpl
mov
test
xchg
fcoms
inc
push
dec
mov
xorb
dec
test
loop
rcrl
test
gs
add
ja
push
sarl
sbb
mov
cmc
mov
mov
jecxz
mov
xchg
lods
adc
sub
in
mov
in
lcall
or
icebp
ficoml
mov
call
pandn
pusha
xchg
test
loope
mov
mov
stos
mov
and
sub
mov
fnstsw
and
push
daa
xlat
test
cld
scas
addr16
sahf
xor
pusha
stos
mov
movsb
mov
dec
and
scas
xor
test
sub
imul
pop
cmp
insl
rolb
test
mov
movsb
cmp
lcall
test
out
popf
fldenv
push
and
test
std
or
pop
movsb
cmp
inc
sub
add
pushf
jge
jl
mov
cltd
sub
test
test
stc
les
aaa
mov
push
and
push
push
cmpsb
mov
loopw
mov
faddl
xchg
jmp
data16
mov
sbb
push
bound
mov
imul
loop
sbb
mov
jecxz
fidivrs
sub
test
cltd
stos
cmp
in
push
loope
xchg
loopne
cmp
mov
fists
ror
and
push
pop
in
add
mov
sbb
iret
cmp
mov
leave
lods
sbb
test
mov
dec
shrb
adc
push
push
mov
inc
loop
decb
sub
mov
fidivl
cmp
cwtl
pop
pusha
test
popa
cmp
fs
mov
int3
in
inc
sub
fs
daa
push
inc
cmp
mov
test
les
cmpsl
xchg
lea
inc
je
in
ja
nop
mov
jo
outsl
pop
mov
sbb
rcll
sub
call
and
mov
lock
dec
popa
fsubr
push
stos
cwtl
shll
repz
mov
or
dec
lcall
push
sub
pushf
fisttps
clc
in
insb
test
push
cli
dec
in
aaa
xchg
cmp
cmpsb
lcall
int3
call
dec
rcrb
in
push
cmp
inc
jmp
nop
mov
xchg
push
in
add
push
ss
cld
outsb
testb
test
mov
roll
mov
into
test
dec
add
pusha
pop
cmp
add
push
xchg
add
push
pop
mov
test
loope
lods
or
jmp
orb
cmp
pusha
add
xor
jae
push
aaa
and
push
jl
pop
mov
xor
and
jbe
scas
fisubrs
movaps
push
movsl
jg
mov
mov
mov
push
mov
xchg
cmp
popl
test
jl
arpl
mov
mov
sbb
test
int3
ret
jmp
stc
lods
push
test
jb
or
and
test
mov
inc
inc
cmc
addr16
mov
cltd
in
inc
outsb
jne
out
mov
mov
ljmp
and
popf
xchg
mov
call
xor
dec
out
test
sub
dec
pop
sub
adc
add
or
pop
pop
les
lods
test
out
psadbw
in
arpl
lcall
or
jb
in
jmp
test
push
test
mov
cmpsb
test
mov
leave
ljmp
xor
jo
push
test
pop
stos
mov
jecxz
test
and
sub
mov
and
sub
xchg
sub
xchg
push
push
and
orb
push
ja
push
xchg
inc
jb
inc
pop
mov
movsb
movsl
xchg
inc
mov
call
dec
xor
fptan
arpl
cli
or
xlat
pop
cmpsl
je
ret
mul
push
sbb
and
int3
inc
push
movsl
dec
sub
iret
sbb
mov
inc
shll
and
sub
les
out
dec
sub
or
mov
cmpsb
jo
je
pop
cmpsb
rolb
repnz
mov
add
and
loopne
out
fwait
cmp
movsb
jle
insl
fcmove
mov
lods
andb
push
test
jnp
mov
arpl
movsb
push
pop
pop
lods
adc
cmp
test
flds
test
pop
loop
repz
add
loopne
int3
test
hlt
cld
cmp
mov
pop
sub
add
mov
test
mov
mov
int3
popw
jp
es
inc
ret
dec
jb
shlb
jl
sbb
inc
popa
sub
and
mov
lock
or
inc
xlat
std
mov
hlt
out
sub
add
sub
insb
bound
cmp
pusha
gs
loopne
lahf
mov
test
add
cmp
sub
in
test
pop
movsl
mov
test
and
std
test
adcb
test
rcll
xchg
test
addl
add
fnsave
fimuls
call
movsb
repnz
testb
mov
fsubl
fwait
test
dec
xor
mov
inc
imul
mov
repnz
adc
les
movsb
dec
ja
xchg
cwtl
imul
shlb
push
xchg
push
std
cmp
jno
sub
pop
popa
test
sub
jmp
add
dec
mov
or
shl
cmp
js
icebp
xor
arpl
mov
xchg
test
jne
dec
int3
inc
and
cwtl
push
jno
jo
ret
icebp
sbb
lret
test
repnz
push
imul
movsl
push
cs
mov
inc
pop
cli
test
sub
leave
popa
xchg
test
sbb
cmp
inc
call
mov
pusha
test
push
lds
gs
jg
out
arpl
mov
cld
leave
push
insb
lret
test
jne
pop
arpl
mov
mov
test
stos
loopne
insb
es
xor
add
add
out
mov
int3
dec
test
pop
sbb
push
insl
das
test
sub
mov
in
lock
int3
scas
test
jl
push
test
dec
clc
test
xlat
dec
push
and
ss
push
mov
scas
clc
xor
test
stos
in
push
cld
mov
mov
mov
loope
testb
lahf
and
hlt
xchg
sbb
test
push
repnz
inc
sub
fs
movsb
cmc
mov
pushf
cmp
test
jb
pop
or
or
test
xor
cwtl
cli
dec
test
push
dec
push
push
sub
fistps
jne
in
mov
fsubl
les
mov
push
sub
push
push
test
add
bound
dec
jp
stos
mov
movsb
jnp
add
insb
cmpsb
test
aas
xor
cmpsb
fiadds
cmp
test
out
push
inc
test
popa
mov
test
mov
xor
test
inc
xlat
lods
movsb
or
pop
dec
dec
push
sub
icebp
mov
mov
cmovle
call
sarl
out
inc
and
mov
add
mov
and
sti
jp
call
repnz
inc
cmp
enter
mov
cld
and
sbb
adc
jo
imul
sub
pop
adc
inc
inc
test
mov
sub
nop
outsb
loop
add
pop
mov
inc
arpl
xchg
pop
mov
nop
dec
cltd
jle
cmp
cmp
out
loope
push
test
ret
test
adc
cli
test
add
outsl
test
icebp
loope
or
push
mov
inc
shll
mov
push
inc
repz
sbb
popa
and
movsl
mov
out
inc
movsl
decl
aas
test
push
add
xor
xchg
movsb
jge
xchg
call
pop
int3
xor
lret
sbbl
test
stc
lahf
bound
mov
ret
adc
pushf
mov
jge
rorl
lcall
rolb
test
pop
pushf
fwait
in
ss
add
test
jb
and
sub
shll
icebp
mov
pop
pop
fildl
mov
sub
movsb
cmp
in
pop
aad
jecxz
mov
cli
call
push
in
pop
dec
dec
arpl
jmp
cwtl
cmp
xor
inc
jge
xchg
mov
and
mov
je
daa
pop
roll
xchg
roll
pop
ja
and
test
loop
movsb
add
jae
sub
jle
mov
das
stc
xchg
inc
mov
shr
and
inc
cmp
movsl
or
pusha
mov
fistpl
push
adc
xchg
pusha
inc
loope
mov
mov
test
cmp
or
bound
xchg
push
jmp
fisubl
lods
jae
sbb
push
mov
icebp
in
inc
and
jmp
repnz
cmp
dec
test
mov
arpl
sbb
imul
or
test
inc
push
lret
xor
popa
inc
push
bound
nop
test
mov
adc
cmp
test
jnp
and
jge
push
test
out
and
aaa
leave
repz
out
push
mov
bound
test
hlt
jmp
sub
sahf
adc
adc
jl
sub
cmp
movsb
flds
and
inc
cmp
mulb
sbb
cmpsb
push
cwtl
test
cltd
adc
sub
rolb
sub
sbb
pushf
mov
push
test
std
out
cmovnp
movsb
cmp
pop
pop
or
mov
dec
mov
ret
roll
sbb
mov
aad
mov
stos
jnp
cld
mov
push
mov
cmp
push
xchg
repnz
mov
mov
leave
sub
mov
add
sbbb
dec
or
adc
test
mov
push
icebp
int3
mov
pop
xor
cmp
mov
xchg
inc
add
shrl
sub
mov
sarl
shrb
pusha
in
sub
add
bound
inc
rcrb
inc
xchg
je
cmp
mov
lcall
test
jge
sbb
xchg
mov
ljmp
mov
nop
int
jge
sarw
inc
leave
cli
dec
xchg
cmp
or
into
test
out
arpl
and
out
pushf
pop
mov
dec
les
mov
mov
mov
imul
or
pusha
jl
and
ja
sbb
sub
rcl
fsub
enter
mov
mov
and
mov
sbb
adc
psubw
sbb
xor
aam
or
jmp
inc
push
lret
push
xchg
jo
lcall
cwtl
mov
test
repnz
mov
mov
lcall
fisubrs
arpl
mov
test
mov
clc
bound
cli
mov
test
mov
mov
pop
out
cwtl
jecxz
sbb
mov
sbb
stos
je
jge
loopne
ss
push
mov
test
pop
aas
sub
lahf
into
mov
movsb
test
dec
adc
test
xchg
adc
add
hlt
cli
ja
pop
mov
pop
cmp
test
jmp
nop
adc
push
lret
jl
jp
dec
test
push
cmp
pop
test
pop
cltd
outsb
stos
loop
mov
push
nop
sbb
jb
and
mov
in
dec
push
xlat
cltd
lret
xchg
pushf
fisubl
test
dec
lods
in
cmp
notl
test
shlb
dec
push
scas
scas
ret
inc
into
movsl
les
daa
jne
test
push
inc
ret
or
test
lea
fidivs
stos
jo
push
aam
sarb
testb
dec
mov
in
xchg
jmp
les
shl
adc
inc
pop
sbb
cmpsl
stos
scas
and
cmp
cltd
hlt
cmc
and
mov
pop
jbe
sbb
inc
and
addr16
jg
sub
pop
or
cld
dec
in
inc
add
shrl
test
jnp
jl
xchg
arpl
dec
inc
mov
fidivrl
jmp
mov
sbb
push
lcall
cwtl
xor
test
inc
sbb
insb
push
xchg
lea
bound
and
lret
xor
out
jecxz
shrb
inc
mov
xchg
test
inc
cs
add
mov
movsb
adc
cwtl
mov
mov
and
out
ret
dec
sub
arpl
loope
cmpb
stos
bound
aas
nop
mov
push
mov
dec
sub
dec
fs
mov
roll
mov
adc
xor
and
les
testb
mov
cmp
in
out
rolb
and
sub
xchg
test
test
add
in
sbb
dec
scas
mov
add
cmpsl
dec
in
test
ds
inc
or
jecxz
adc
les
fimull
add
test
mov
movsb
sub
inc
fsts
test
pushf
stos
lahf
add
jne
int3
xor
sbb
jae
fildl
mov
mov
aas
inc
test
sub
call
hlt
sarl
in
dec
jmp
cwtl
call
arpl
test
mov
pop
xor
mov
jne
loop
lcall
lret
fs
mov
xchg
test
jge
in
mov
pusha
in
sub
add
pop
mov
push
pusha
and
scas
mov
mov
jo
jno
inc
or
mov
lcall
pop
test
shll
test
loop
jno
xchg
inc
lret
popa
and
mov
inc
mov
mov
push
mov
jmp
pop
dec
in
mov
fwait
mov
mov
imul
pop
dec
daa
mov
inc
push
mov
xor
mov
xchg
pop
inc
cmpsl
pop
pop
fldl
pop
test
inc
cmp
lret
cltd
push
sub
call
sbb
sub
daa
mov
imul
mov
push
test
icebp
sub
jg
mov
lock
and
loope
mov
subb
out
mov
test
test
xor
test
aaa
out
test
imul
jno
adc
push
mov
inc
stos
mov
jmp
test
add
cs
jecxz
test
cmp
inc
dec
adc
int
test
dec
inc
movsb
addr16
int3
loop
add
fs
stos
cwtl
dec
push
or
in
cltd
movsl
pop
ljmp
scas
fisubl
bound
sub
sbb
mov
mov
sub
pusha
mov
cmovo
xchg
or
sbb
jl
sbb
add
mov
inc
lea
fldt
ljmp
jnp
or
xchg
test
xor
shll
jo
imul
out
lcall
dec
add
sub
mov
sbb
push
ret
cmp
ja
xchg
mov
bound
mov
jo
sub
test
or
sub
or
cmpsl
out
mov
inc
pop
mov
in
mov
sbb
bound
mov
add
test
jne
xchg
cmpsb
mov
pop
test
filds
add
jle
std
dec
push
pop
push
mov
ja
xchg
test
ret
mov
shll
test
cmpsb
inc
test
mov
mov
sbb
test
pop
mov
aaa
les
dec
push
hlt
sub
std
arpl
lret
stc
sbb
mov
dec
xchg
cs
mov
leave
mov
add
loop
dec
or
mov
mov
cltd
int
push
jb
ret
dec
repnz
scas
push
jnp
test
jp
loope
stos
arpl
cmp
test
cltd
int
add
cmpsb
dec
cli
sub
mov
inc
test
push
jmp
addl
sub
in
int
in
mov
pop
fadds
inc
mov
cmpb
imul
and
aam
dec
jp
outsb
andl
test
xor
inc
dec
pop
xor
orb
xor
cmpsl
dec
mov
push
push
and
xchg
loope
movl
mov
xor
test
das
lds
in
or
jne
pop
test
daa
in
shr
xchg
test
mov
js
mov
test
sbb
ljmp
mov
or
pop
mov
cli
loopne
iret
je
push
sbb
xchg
sbb
imul
pop
test
pushf
dec
sbb
loope
test
pop
dec
fdivrs
test
cld
mov
add
or
fwait
mov
cwtl
jno
pushf
fdivrs
mov
test
icebp
jnp
testb
fnstcw
jle
inc
inc
movsb
mov
or
rclb
sbb
inc
lds
rcrb
divl
in
mov
and
shlb
test
xchg
cli
enter
mov
inc
mov
lods
mov
stos
xchg
xor
je
xchg
sub
leave
push
in
cmp
movsl
push
xchg
test
int3
std
fadd
jmp
in
imul
push
push
mov
mov
inc
sub
push
sub
pushf
mov
adc
fxch
sti
pop
push
and
jns
test
xor
pop
push
movb
hlt
filds
mov
insb
sub
inc
or
mov
push
cmpsl
inc
xchg
dec
xlat
jecxz
test
out
test
mulb
and
sbbb
sub
xor
sub
in
orl
inc
xlat
mov
in
inc
add
push
jp
xchg
inc
out
push
xor
mov
inc
sbb
pop
stos
mov
cltd
movaps
arpl
xchg
dec
sbb
stc
sub
push
pop
lret
and
push
or
shr
test
inc
cmpsb
sub
mov
mov
cmp
sub
data16
arpl
and
sti
orl
push
jecxz
xchg
imul
mov
inc
adc
aad
add
ret
xor
movsl
test
inc
inc
mov
sbb
xor
rolb
xlat
push
aam
stos
sub
cmp
icebp
repnz
arpl
xor
add
jns
test
je,pn
test
cmp
push
push
pop
adc
jecxz
movsl
jge
and
push
enter
test
push
adc
les
mov
cmp
xor
jmp
xchg
shrb
pop
clc
mov
inc
dec
movsb
out
sub
add
test
mov
or
mov
xchg
sbb
sub
js
int3
test
ss
imulb
inc
mov
sbb
xchg
movsb
inc
cmp
test
jp
sbb
xor
insb
dec
pop
adc
jecxz
mov
rorl
pop
daa
icebp
test
cmp
pop
or
test
push
push
cmp
imul
loope
movsb
jns
test
sbb
mov
add
mov
lock
push
or
push
add
popa
mov
leave
jle
xor
xchg
clc
int3
test
pusha
and
adc
mov
push
cs
test
push
leave
cld
sahf
dec
lret
lret
fwait
cmpsb
mov
sbb
bound
ficomps
sub
movsb
lret
push
pop
sub
adc
test
dec
in
sbb
movsl
test
fwait
cwtd
enter
and
pushf
mov
imulb
xchg
stc
je
jns
aas
or
icebp
lret
cmc
test
in
mov
lea
std
jl
test
daa
aas
push
test
push
jne
dec
push
imul
mov
lahf
jns
adc
test
jne
test
imul
insb
pop
sbb
lret
fwait
aam
imul
cmpsb
mov
stos
cli
and
pop
dec
dec
sub
in
jo
std
mov
sub
in
movsl
dec
lock
sbb
inc
movsb
sub
push
loop
lods
mov
push
jecxz
inc
je
push
jp
or
and
test
jnp
sbb
jmp
fildl
in
faddl
shrl
gs
movsb
inc
xor
outsb
sub
cmp
test
in
xchg
pop
mov
insb
lret
cmp
repnz
xor
scas
inc
int3
mov
xchg
mov
lahf
mov
pop
or
fwait
jns
jle
sub
mov
js
mov
inc
push
iret
add
fwait
xchg
int
jl
out
out
push
icebp
inc
pusha
test
jmp
mov
push
imul
mov
pop
mov
sarl
pop
push
inc
sub
push
int
pop
ret
test
pop
xchg
ja
dec
insb
lret
jnp
sahf
cmp
loope
push
nop
arpl
mov
mov
mov
adc
jmp
aas
cmp
cld
into
movsb
dec
clc
nop
loope
not
cmpb
or
fucomip
and
pop
std
jne
jmp
test
sub
unpckhps
lds
in
movsb
inc
aad
mov
addr16
dec
test
pop
mov
and
nop
sub
or
xchg
ret
mov
loopne
decb
popf
add
jnp
leave
push
insb
test
adc
sub
fcomps
cmp
dec
inc
jmp
test
sub
mov
movsl
scas
test
jnp
xlat
cmpsb
mov
test
sbb
sub
imul
pop
jmp
ror
dec
test
jo
imul
xchg
cld
int
outsl
dec
sbb
les
jae
xor
fildl
dec
test
movsl
out
cltd
mov
lock
add
les
test
mov
cwtl
popf
sbb
pusha
xchg
cmp
mov
push
out
insb
mov
jo
xchg
in
inc
push
push
subl
test
jnp
cmc
nop
daa
and
test
fidivrs
xchg
test
std
int3
ljmp
hlt
sbb
xor
sbb
int3
jns
push
test
push
movsl
push
in
and
popl
sbb
in
mov
cmp
sub
add
push
jns
inc
das
lcall
dec
and
sbb
push
mov
dec
inc
cwtl
mov
imul
int
mov
xor
mov
cmp
iret
sbb
cmpsl
mov
sbb
push
fwait
nop
add
jecxz
jmp
lahf
sbb
cltd
fcompl
test
jne
cwtl
add
iret
imul
lods
mov
adc
and
test
sbb
ret
xchg
nop
test
jecxz
xchg
iret
adc
xchg
jmp
shl
pop
loop
sbb
fisttpl
dec
cmpsb
dec
movl
xchg
pop
mov
rclb
xchg
dec
in
and
test
test
fs
cmpsl
jnp
loope
in
enter
xlat
mov
jl
or
add
in
lret
sub
or
xlat
out
out
pushf
call
mov
lcall
mov
daa
sub
xchg
nop
insb
daa
dec
test
jne
mov
ret
push
push
test
add
lock
inc
inc
in
lret
sbbl
imul
mov
aam
mov
scas
mov
mov
test
push
lock
push
test
lds
cmpsb
outsb
dec
pushf
ljmp
cmp
xchg
xchg
pushf
mov
sub
jne
and
inc
jp
lret
cwtl
push
inc
call
lods
mov
test
xchg
mov
arpl
jmp
xchg
movsb
mov
mov
mov
jb
pop
cld
ror
lcall
pop
jnp,pn
loopne
dec
dec
xchg
movsb
fs
inc
sbb
lock
and
pop
mov
test
jle
cmp
xor
add
pop
sbb
scas
push
out
outsl
popf
mov
movsb
das
daa
mov
or
dec
push
test
rcll
or
rolb
iret
rcll
test
js
stos
cmc
popf
sub
xchg
das
dec
and
or
rcll
and
mov
bound
dec
adc
bound
push
test
push
and
test
arpl
xchg
mov
sete
mov
fs
or
mov
or
ficomps
sbb
iret
push
add
cmpsb
jae
bound
or
cmp
mov
cli
dec
lcall
es
ljmp
mov
mov
stos
lret
aas
cli
cmpsb
test
lret
sub
mov
xor
push
outsb
gs
push
sub
lret
fmuls
std
outsl
mov
clc
cs
test
addr16
push
movsb
jne
xor
mov
xor
and
test
stos
sbb
mov
and
ss
and
js
test
inc
mulb
sti
mov
stos
les
sbb
mov
pop
test
aaa
xor
dec
mov
mov
sub
test
jno
fcomp
ds
outsb
mov
and
popa
lds
cmpsb
sub
stos
pop
sbb
sbb
mov
jmp
push
jbe
test
xor
push
pop
test
and
inc
icebp
xor
test
inc
dec
fimuls
dec
sub
pop
add
or
pushf
daa
xchg
xchg
imul
adc
ss
xor
push
add
mov
mov
push
inc
sub
test
jmp
test
xor
test
sbbl
xor
mov
push
fisttpll
dec
mov
mov
or
push
imul
cmp
push
mov
mov
enter
cmpsl
clc
and
or
push
mov
and
cmp
ret
sub
jae
sub
adc
mov
push
sbb
cltd
cmp
pusha
cmp
mov
xor
xchg
push
add
into
mov
bound
imul
sub
push
stos
inc
xchg
adc
ja
sub
inc
jmp
cltd
bound
stc
pushf
sub
or
jb
test
test
push
movsb
mov
pushf
cmp
rolb
pop
fmuls
fcmovu
mov
sbb
dec
popa
jl
out
test
je
loop
stos
lods
cmpsb
pusha
mov
insb
xchg
in
and
test
and
xchg
mov
bound
pop
pop
in
jne
test
jle
out
mov
jno
test
stos
arpl
in
inc
cs
dec
sub
inc
cmp
dec
movsb
xor
or
into
nop
rorl
push
lcall
jb
shlb
and
sub
sbb
inc
mov
pop
call
sbb
ja
dec
mov
push
push
cli
jg
je
pusha
mov
jl
xor
jne
push
in
addr16
pop
outsb
ja
test
cmp
sub
pop
cmp
movsb
pop
push
lret
mov
movb
xchg
pop
mov
cmpsl
or
jecxz
dec
data16
data16
and
sahf
inc
mov
cmp
sbb
fimull
test
in
lcall
mov
in
jnp
push
mov
loop
test
mov
push
lcall
xor
aad
add
arpl
pop
xor
pop
push
bnd
mull
out
je
rorl
dec
jns
xor
lods
pop
aam
jecxz
lcall
xchg
push
clc
mov
xor
lret
inc
push
pop
les
push
or
mov
test
mov
ret
inc
in
test
stc
movsb
jg
out
rcl
cmp
sub
lods
cmp
jg
outsb
or
push
jb
fisubl
orl
and
push
movsb
cli
adc
sbb
clc
mov
dec
pop
mov
cmp
shlb
inc
mov
mov
inc
or
test
call
xorl
jns
sbb
xchg
or
adc
mov
push
std
lods
xorl
cmpsl
dec
cmp
mov
lea
hlt
mov
das
xchg
test
jbe
add
mov
xor
sbb
sahf
add
or
lret
fidivrs
push
repz
pop
or
ror
push
push
adc
jp
arpl
mov
cwtl
and
mov
test
mov
pop
addr16
gs
sub
clc
dec
pop
mov
add
cmp
or
dec
mov
movsb
sub
push
and
sbb
push
mov
je
mov
lahf
jno
fidivrs
mov
pop
xor
xchg
mov
adcl
xchg
xchg
stc
inc
or
sti
test
sbb
stos
cltd
enter
add
pop
testl
shr
mov
sub
loop
cmp
bound
or
std
out
test
jge
inc
arpl
test
xchg
or
test
jns
test
pushf
dec
add
inc
std
ss
repz
inc
mov
shl
into
movsb
add
faddl
pop
dec
mov
and
or
rcll
mov
sub
jno
subl
sub
lcall
jecxz
bound
mov
mov
loope
sub
sub
and
les
xor
test
stos
push
sub
push
adc
mov
xor
test
fsts
incb
xchg
mov
adc
push
sbb
sub
out
call
lods
leave
mov
bound
ja
mov
inc
xchg
push
mov
mov
test
sub
cmc
dec
sub
jp,pn
cmpsl
je
fildl
push
test
test
sub
cmp
das
testb
push
stos
inc
leave
cmp
cmp
cmc
imul
out
jle
aad
stc
add
dec
jecxz
fmuls
sub
fldpi
jns
ss
aam
out
jp
xchg
cwtl
jns
test
das
stos
mov
mov
ret
mov
jmp
and
scas
mov
xchg
mov
cltd
push
test
ds
xor
fisubl
jp
jns
or
shll
mov
arpl
movsb
push
cmp
mov
and
pop
test
arpl
sbb
bound
xchg
mov
inc
movsb
std
aas
xchg
push
dec
add
cltd
xchg
inc
lds
and
lret
jg
test
mov
push
add
shlb
fidivrs
in
pusha
lahf
movsb
in
jp
jl
cmc
cmp
pop
test
insl
push
pop
shll
test
add
cmpsb
movsl
jnp
test
push
fwait
adc
inc
and
test
lret
subb
push
test
sbb
push
test
mov
lahf
push
sub
add
clc
push
adc
icebp
mov
test
push
ficoms
xchg
inc
and
xchg
mov
mov
iret
dec
sbbb
ds
imul
jecxz
jl
fcomip
mov
cltd
je
test
rclb
push
mov
lret
divb
mov
mov
dec
pushf
insb
test
fld
or
cmp
test
sti
out
jnp
pop
adc
test
and
push
sti
jb
inc
inc
push
orb
in
data16
or
jno
jbe
xchg
insb
cmc
inc
jb
lret
lcall
cwtl
mov
movsb
lds
lea
push
sahf
test
adc
inc
ja
jge
test
stos
and
cli
outsb
cmp
leave
adc
sub
adc
fsubl
push
pop
pusha
adc
xlat
test
sbb
and
aam
jb
call
inc
adc
mov
and
mov
adc
xor
outsb
lods
inc
mov
call
inc
popf
test
lret
jo
push
and
imul
mov
cmp
jp
fdivl
test
mov
fisubs
dec
pop
test
ret
jg
push
or
push
dec
push
mov
mov
test
out
xchg
test
aam
pusha
test
push
fwait
adc
int
lret
test
fdivr
adc
test
lds
sub
sbb
in
xor
imul
jnp
push
mov
test
pop
inc
xchg
and
cltd
lret
cmp
pop
bound
push
in
sbb
jp
fbstp
test
push
stos
bound
cwtl
and
test
sub
mov
push
bound
pushw
add
addr16
push
mov
imul
inc
push
jns
test
sbb
outsb
mov
cmpsb
iret
test
int
push
cld
cmp
sub
xchg
bound
repz
in
stos
outsb
xor
cmp
push
test
pop
loope
or
cmp
sbb
sub
test
lret
pushf
xchg
lret
push
sti
sub
int3
movsb
pop
cltd
or
imul
sbb
lret
or
loope
push
inc
mov
lcall
aaa
mov
pop
in
cmp
mov
push
test
push
dec
lret
in
stos
dec
push
ret
int3
mov
stc
pop
xchg
outsb
leave
nop
xchg
mov
int3
arpl
fwait
add
sbb
mov
outsb
std
les
test
or
mul
inc
push
pushf
sub
dec
test
or
jne
dec
test
push
cmpl
loop
mov
jl
adc
xchg
lods
fwait
in
cmp
test
inc
cwtl
clc
push
in
in
out
lret
cmpsl
cld
or
pop
sub
inc
lahf
cmpsb
scas
arpl
lret
mov
test
sbb
and
mov
xchg
add
mov
sub
test
push
hlt
ficompl
call
add
pop
mov
mov
out
stos
inc
or
mov
test
repnz
xchg
rcrb
inc
mov
rclb
dec
cmp
inc
movsb
push
jo
push
test
or
inc
inc
xor
movsb
xchg
jmp
into
jno
jge
es
pop
js
test
imul
or
mov
cli
mov
dec
test
ljmp
fdivl
inc
push
mov
test
je
insb
mov
cwtl
xor
and
mov
push
out
shlb
mov
mov
movl
repnz
inc
test
add
movsl
pop
mov
into
mov
sub
test
call
mov
sbb
sarb
add
data16
bound
pop
loope
test
pop
mov
icebp
std
dec
out
bound
adcl
push
or
out
fnstcw
daa
or
sbb
push
sub
mov
cmpsl
in
rclb
cltd
cmc
shl
inc
add
push
rcll
push
nop
mov
mov
scas
int3
jp
xchg
cli
xchg
test
sub
mov
dec
jo
mov
loopne
mov
test
mov
pop
inc
or
subl
insl
dec
sbb
inc
push
test
imul
pop
sub
or
test
out
xchg
mov
in
pop
mov
pop
sahf
mov
and
cltd
outsb
loope
bound
push
mov
idivb
xchg
pop
mov
xchg
jp
popf
mov
les
fldenv
pusha
push
mov
stc
jle
mov
pusha
and
cmp
test
fsts
pop
xor
loope
mov
leave
push
push
rep
aas
mov
arpl
call
fstps
pop
loop
test
test
jae
repz
adc
leave
and
lcall
test
cmc
adc
xor
int
cli
adc
cwtl
lds
cmovnp
adc
or
xchg
les
mov
mov
pop
or
dec
in
decl
adc
call
adc
sub
das
mov
imul
jp
or
pop
cmp
test
or
push
mov
sub
testb
jnp
and
lret
jmp
sti
pop
test
xchg
rolb
ljmp
adc
and
mov
popa
dec
or
sub
mov
dec
test
push
push
addr16
in
in
dec
mov
mov
mov
pushf
mov
popa
mov
mov
mov
orb
cwtl
aam
test
in
test
cmpsl
inc
cli
aaa
roll
mov
out
rep
cwtl
test
inc
rolb
xor
ret
out
push
mov
lods
xchg
test
push
pop
push
test
cmp
daa
pop
out
int3
test
cltd
push
jp
dec
cli
in
push
inc
xchg
aad
mov
pop
test
loop
add
add
test
mov
movsl
das
jge
movsb
stos
lods
dec
inc
adc
mov
pop
or
leave
arpl
imul
test
lods
int
push
les
mov
sub
test
push
leave
lods
mov
aas
adc
dec
cmpsb
lret
cltd
push
mov
fsts
sub
test
xchg
out
jb
pop
lds
sub
adc
pop
inc
pusha
pushf
mov
xor
not
nop
jecxz
cmp
inc
mov
sarl
dec
idivl
cmpsl
test
jne
pop
fdivrs
sbb
stc
pushf
cltd
test
mov
push
and
mov
xchg
mov
rcrl
or
cmp
inc
push
and
sbb
mov
sub
jge
push
inc
popf
push
dec
test
lret
add
je
loope
pop
and
cmp
cmc
fsincos
mul
jle
cmovnp
arpl
push
mov
add
test
push
sub
in
movsl
mov
mov
out
and
aas
daa
sub
loope
mov
and
pusha
insb
lds
mov
xchg
dec
stc
lea
data16
ss
pop
repz
add
push
adc
cld
sub
inc
pop
test
cmp
push
outsb
out
shll
jno
mov
xorl
dec
or
mov
push
or
sbb
bound
mov
mov
out
out
rcrb
jle
sbb
test
xchg
mov
push
scas
fwait
mov
inc
insb
notb
cwtl
mov
adc
ljmp
pop
test
mov
mov
inc
cmpsl
lods
dec
mov
mov
test
lfs
and
dec
test
int
outsb
out
test
push
imul
push
jmp
dec
push
cld
adc
add
lret
xchg
dec
test
jge
adc
cmp
mov
mov
stos
test
or
add
xchg
bound
int3
sbb
test
lcall
cmp
adc
jle
mov
pusha
test
mov
push
inc
cmpsl
sub
out
fcmovb
xor
jae
jge
test
mov
ret
push
cmpsl
xor
and
or
in
xor
dec
cltd
cmpsl
rorl
mov
enter
add
lcall
cmc
xor
jecxz
insl
ret
int3
outsb
inc
ficoml
xlat
test
rol
push
addb
lds
pop
out
sub
mov
test
imul
mov
leave
or
jecxz
xchg
and
mov
test
aad
inc
mov
push
mov
mov
mov
pop
pop
cli
mov
lods
jmp
adc
shrl
mov
popf
test
or
xor
pop
test
stc
into
test
inc
push
in
test
ljmp
xchg
inc
pusha
data16
mov
imul
sub
enter
push
cmpsl
test
and
dec
and
jbe
iretw
sub
pop
mov
jo
cmpsl
xor
and
jbe
fs
cmp
leave
test
ret
in
inc
pop
mov
imul
and
xchg
pop
push
jg
lret
sti
movsb
fwait
out
pop
mov
push
lock
pop
ja
lods
dec
mov
test
loop
into
inc
fdiv
aad
test
xor
mov
dec
lahf
push
pop
add
mov
test
stos
sub
into
sbb
imul
adc
xchg
test
es
pushf
outsb
arpl
dec
test
idivb
sub
enter
mov
inc
dec
push
sub
sub
test
call
adc
test
xor
push
test
cwtl
jge
jmp
cmp
adc
loopne
mov
sub
imul
fwait
insb
add
push
push
das
decl
in
test
and
mov
test
sahf
xor
fstpl
xor
int
and
xchg
cmp
in
test
cmpsb
repz
movsl
mov
adcl
jge
loop
inc
faddl
mov
popa
xchg
push
mov
out
mov
inc
mov
movsb
sub
fidivrl
push
and
stos
push
pop
mov
pop
add
negl
arpl
popf
jmp
lret
xchg
into
inc
mov
orb
loop
mov
hlt
arpl
punpckhdq
jecxz
lret
sub
pop
pop
icebp
dec
lods
addl
mov
loop
add
test
into
insl
data16
sub
shr
sub
popf
test
cmp
stos
jmp
test
mov
lret
out
test
fidivs
cmpsl
in
stos
push
mov
xchg
or
mov
cli
inc
popf
fldcw
lcall
jp
jecxz
lods
mov
enter
adc
leave
or
cmp
or
je
lret
testl
inc
in
movsb
movsb
lret
insb
movsl
test
test
fimuls
shlb
push
leave
sub
test
divl
push
test
ficompl
repnz
lcall
repz
xor
test
lcall
std
push
push
xchg
test
outsl
jb
leave
loop
bound
movsb
loopne
lods
push
testl
xchg
jo
pushl
arpl
sub
mov
test
and
mov
pop
adc
or
inc
loopne
cltd
mov
popl
fimull
xor
push
loop
test
xchg
arpl
cmp
stos
test
cmp
mov
out
adcl
test
inc
loop
dec
mov
mov
inc
test
test
sbbb
test
mov
sub
mov
lahf
mov
mov
out
mov
adc
std
test
call
les
and
test
ljmp
jae
dec
mov
adc
test
xor
inc
imul
or
jecxz
and
aas
sub
lret
mov
cmpsl
test
dec
pop
sar
and
pusha
mov
fwait
cli
mov
jecxz
inc
sbb
mov
stos
xor
out
mov
ss
bound
addb
in
lds
cmp
mov
mov
sub
adc
enter
inc
insb
test
sub
jecxz
das
lds
jecxz
out
movsb
cmpsl
xchg
pop
stc
loop
pop
mov
clc
add
or
jp
cmp
and
xchg
aaa
loop
cmpsb
pop
rolb
push
loopne
xchg
pushf
cmc
xchg
adc
mov
outsl
int
push
std
dec
mov
les
or
test
inc
jg
test
movsl
popf
lcall
inc
pop
mov
lods
sub
jne
push
and
test
iret
fidivrl
cmpsl
test
cmp
cltd
mov
add
lret
jnp
test
aad
clc
pop
jne
and
cmpsl
mov
je
sub
jle
shll
cli
dec
or
ret
jge
sub
sbb
sub
aam
or
cmpsl
lahf
cmp
fisttps
test
pop
xchg
push
sub
jp
in
xchg
add
insb
test
sar
lea
outsb
test
lods
cmp
xor
adc
movsb
lods
in
andb
inc
aas
mov
adcl
pop
roll
pop
mov
arpl
xchg
inc
jnp
push
js
mov
add
test
jmp
dec
faddl
push
test
std
les
pop
sahf
out
xchg
pop
nop
test
push
adc
inc
push
test
pushf
pcmpgtd
movsl
lcall
add
inc
cmp
xchg
mov
in
dec
xchg
mov
push
das
test
out
mov
cmp
xor
and
ret
mov
jnp
lcall
jmp
push
test
adc
dec
xchg
movsb
test
pop
leave
mov
push
out
shl
sbb
pop
and
movsb
incl
jl
dec
mov
sub
insb
inc
out
and
add
or
lods
dec
pushf
es
popf
lds
sbb
pop
test
dec
adc
jmp
jecxz
mov
pop
push
pop
sub
pop
sbb
jae
rolb
adc
mov
gs
mov
bound
mov
insb
dec
xor
movzbl
xor
cmp
arpl
cmp
cltd
mov
bound
stc
hlt
bound
ja
inc
loop
stos
dec
or
lret
test
mov
jmp
test
push
ficoml
fadds
daa
in
adc
lret
test
and
pop
test
push
es
lods
push
aam
fstl
fisubl
add
xchg
and
sbb
lret
test
das
mov
xor
les
xor
mov
test
outsb
lret
sub
jl
mov
in
hlt
and
dec
pop
push
xchg
out
arpl
and
add
dec
sub
mov
stos
test
ficomps
push
cmp
cld
xchg
test
test
xor
mov
mov
lods
rcrl
daa
arpl
xorl
leave
test
dec
push
mov
or
in
sbb
std
js
add
jno
ret
test
daa
lock
xor
mov
lods
cmp
xchg
xchg
cmpsb
int
iret
lds
sbbb
test
mov
adc
hlt
jno
daa
repz
pop
cmp
add
mov
push
mov
test
xchg
pop
rcrl
sbb
inc
jg
or
and
data16
dec
arpl
mov
mov
repnz
les
fsin
sbb
or
shl
dec
lea
inc
fcmove
dec
in
loopne
adc
push
xor
inc
sbb
leave
dec
filds
mov
out
lahf
mov
xchg
lea
mov
test
mov
sub
dec
incl
je
mov
mov
leave
test
es
test
push
pop
sbb
fbld
fnstenv
rcll
dec
outsb
pop
push
xor
cmp
mov
adc
cmpsl
dec
mov
testl
sbb
fs
ja
cmpl
add
clc
cmp
mov
push
inc
or
mov
jecxz
cmpsl
stc
test
std
sbb
test
mov
mov
cmp
bound
stos
or
pusha
mov
add
sub
shlb
xor
aad
in
inc
fstps
add
add
xlat
test
mov
inc
cwtl
xchg
mov
ss
dec
mov
scas
insb
add
or
inc
sbb
xchg
xchg
lock
mov
test
inc
xor
sbb
gs
out
test
push
aas
imul
dec
test
clc
xor
sub
lock
and
enter
ret
xchg
les
or
js
test
test
jo
call
test
xchg
push
stos
mov
adc
add
idivb
rolb
sahf
loope
mov
cmp
dec
jmp
ja
push
dec
addb
push
sub
lods
xchg
mov
xchg
test
adc
lcall
loopne
xchg
push
orb
js
cmp
sub
mov
jmp
xor
dec
inc
lcall
sub
test
iret
jbe
lret
incl
pop
push
divl
stos
cmpsl
ja
test
sub
test
xor
inc
test
shlb
jg
test
imul
xchg
dec
adc
add
jmp
icebp
decl
sub
test
mov
jmp
int
jl
imul
adc
push
inc
xor
test
jge
das
pop
sahf
and
pop
enter
adc
js
sub
inc
mov
arpl
repnz
hlt
lea
aas
test
inc
outsb
mov
xor
data16
sbb
cmp
lea
test
xchg
daa
push
test
inc
lret
push
or
jecxz
or
imul
lcall
in
inc
out
inc
inc
mov
sahf
dec
and
into
xlat
xchg
add
nop
loopne
sarb
xor
cwtl
bound
repz
les
das
test
xchg
sub
in
adc
push
insb
test
push
push
dec
int
adc
mov
cmpsl
lret
cmpsb
pop
dec
enter
mov
xor
shll
sub
sbb
mov
jp
push
test
mov
fdivrs
mov
dec
bound
movsb
aam
jmp
ljmp
mov
or
arpl
test
sbb
stos
test
es
add
test
test
jae
adc
pop
cli
sub
test
mov
dec
subl
mov
ss
addl
dec
lret
fcmovne
pop
add
imul
test
and
call
int
fbld
ss
or
out
aas
ljmp
imul
mov
add
jge
xorb
popa
add
push
inc
and
sbb
pop
sbb
jle
stos
sub
test
mov
in
jmp
int
dec
xchg
cmp
call
rclb
int
popa
sbb
push
arpl
xor
mov
xlat
hlt
mov
inc
mov
movl
cli
orb
cmp
jmp
or
pop
aas
cmp
stos
test
adc
out
jmp
scas
cli
aaa
push
test
stc
mov
movsb
pushf
xorl
enter
mov
xchg
test
lds
jecxz
dec
leave
mov
xchg
inc
test
loopne
mov
mov
test
dec
lds
test
clc
sbb
push
andnps
addr16
lods
int
jae
test
sbb
repz
push
pop
jns
ret
out
xchg
or
movsb
adc
mov
pop
movsb
cltd
mov
jo
push
in
stc
xchg
movsl
push
dec
sahf
test
loopne
leave
xchg
fdivl
mov
jnp
sbb
dec
mov
dec
call
xchg
aaa
cmp
add
push
test
xchg
push
cmp
mov
test
aam
lcall
mov
dec
enter
bound
fiaddl
test
in
cmpsb
xchg
inc
pop
hlt
or
rcll
call
test
imul
test
hlt
sub
cmp
pop
dec
inc
xor
es
test
lret
arpl
mov
addl
cmp
scas
jecxz
in
mov
inc
push
xchg
sub
fnop
cmp
movsb
mov
cmp
xchg
push
xchg
adc
ror
cli
xchg
cmpsb
push
test
and
pop
xchg
lahf
test
mov
inc
test
lahf
test
jp
push
test
push
int3
leave
fwait
sbb
push
lret
test
ret
or
jecxz
mov
push
hlt
jmp
in
out
lcall
pop
addl
xchg
lret
xor
loop
in
push
inc
push
push
mov
pushf
hlt
stc
xchg
dec
test
loope
sub
fxch
dec
xchg
mov
push
imul
test
mov
loopne
or
mov
lods
das
and
jns
in
dec
popa
movsb
xor
add
sbb
or
insb
cmp
adc
test
dec
shlb
test
xchg
in
sti
push
sub
xor
add
addr16
mov
mov
loop
push
imul
or
sbb
jnp
test
in
loop
dec
or
arpl
sub
or
pop
xchg
sub
xor
mov
pop
orb
cmp
mov
inc
fidivrl
dec
pop
pop
loop
cmp
or
xchg
test
jne
das
into
in
je
imul
dec
je
les
pop
mov
test
dec
dec
push
aam
cmp
jne
xor
adcl
aad
mov
mov
adc
xchg
xor
jb
gs
push
mov
test
inc
xchg
or
test
and
cmp
test
mov
insb
roll
push
sub
or
ljmp
add
movsb
mov
ljmp
ss
push
mov
and
test
rclb
int
xor
outsl
add
lea
int3
rorb
inc
mov
sub
test
fisubrl
cld
jecxz
setge
sbb
xor
jb
and
sub
xchg
lret
cmp
jbe
in
push
sub
popaw
test
sbb
xor
fisubrs
xor
mov
push
push
mov
bound
imul
inc
push
add
hlt
pop
jg
mov
sbb
dec
arpl
hlt
scas
stos
mov
popa
loop
cmp
jbe
or
pushf
decb
iret
movsb
daa
sbb
and
aaa
test
cmp
adc
push
in
hlt
outsb
pushf
push
into
lret
mov
test
cmp
push
test
lret
lret
mov
cmp
outsb
xchg
sub
sub
lcall
and
test
fildl
lahf
or
sub
test
cli
inc
push
push
xchg
mov
bound
lock
insl
mov
test
and
or
pop
push
add
mov
inc
pop
push
mov
mov
inc
cmc
test
jmp
lods
mov
divb
xchg
shrl
push
test
rcrb
jecxz
cmc
adc
test
movsb
mov
lods
stc
mov
mov
into
pop
sub
repnz
scas
rclb
xchg
lahf
movsl
test
test
outsl
mov
out
fldenv
sub
or
mov
in
inc
jb
lds
xchg
js
clc
lahf
mov
in
mov
cmp
fs
out
inc
pop
push
popa
jmp
and
dec
test
cmpsl
inc
pop
les
movsb
lock
out
in
push
xor
push
mov
test
jns
les
and
xchg
test
leave
lcall
scas
push
dec
movsl
sub
pushf
test
jnp
popa
cmpsb
pop
jp
push
or
mov
dec
fiaddl
sub
test
jbe
movsb
xor
or
push
test
cli
loopne
push
data16
sbb
mov
cmpsb
clc
mov
pushf
push
mov
enter
adc
xchg
pop
mov
inc
js
enter
cmc
mov
mov
ficoml
inc
test
xor
lret
mov
add
dec
ja
test
inc
leave
outsl
xchg
sub
pop
sbb
jle
and
mov
fiaddl
loop
mov
inc
nop
and
cwtl
and
ljmp
sbb
testb
stos
mov
roll
push
ja
test
add
jle
add
or
adc
mov
lahf
push
movsb
or
adc
aaa
popf
mov
int
cmp
aas
bound
push
les
push
push
test
loopne
cltd
mov
fldl
pusha
test
adc
arpl
xor
xchg
push
cmpsl
lret
inc
xor
mov
popf
mov
dec
and
mov
push
mov
xchg
dec
testb
jle
test
lcall
enter
xor
jbe
test
jle
dec
inc
stos
pop
in
sbb
fcomps
bound
xchg
enter
data16
mov
mov
xor
push
mov
gs
out
roll
mov
clc
in
pop
sahf
in
add
ja
mov
repz
push
test
int
adcl
mov
shll
dec
test
or
test
sbb
pop
cwtl
jle
xchg
arpl
push
sahf
data16
test
std
xor
popf
jmp
or
stc
mov
pop
mov
mov
push
test
lds
cmpsb
es
or
testb
add
sub
rorb
dec
push
mov
mov
imul
mov
sbb
lahf
dec
or
jle
adc
inc
push
arpl
leave
pop
mov
pop
fildl
ja
movsl
test
lock
pop
fldcw
in
xor
cmp
push
jmp
test
mov
sub
push
pop
sub
inc
cmpsl
xchg
movsb
test
push
roll
test
outsb
or
push
addb
adc
test
push
test
out
add
push
push
or
test
leave
xchg
popa
jne
test
adc
pushf
sbb
mov
bound
mov
arpl
lahf
sti
add
sahf
sub
cvttps2pi
push
popa
or
lret
add
int3
mov
add
in
or
push
loope
dec
pop
xchg
or
outsl
sub
push
sub
jecxz
int
scas
jmp
sub
and
shll
or
cmpsl
mov
mov
mov
mov
push
aam
test
mov
sti
test
mov
addr16
push
sbb
negl
mov
out
xchg
mov
xchg
dec
scas
arpl
mov
enter
out
xchg
ja
aad
inc
clc
xor
int
dec
out
pop
mov
sbbl
out
test
mov
loope
out
je
int
ret
xchg
fcmovnbe
dec
into
jb
cwtl
pop
dec
test
add
sti
mov
sbb
xchg
pop
insl
jbe
push
xor
pop
cmp
inc
fisubrl
mov
popa
fisttpll
sub
jae
ss
arpl
cli
inc
xchg
stos
xchg
imul
mov
test
test
das
movsl
test
pop
jae
push
aas
xchg
aaa
notb
nop
add
repnz
dec
out
mov
test
out
les
dec
and
test
or
and
popa
push
sti
pushf
test
icebp
lods
cltd
pop
movsb
sub
mov
add
and
push
push
je
arpl
in
cmc
or
rorb
sub
es
jle
sbb
cwtl
loopne
sub
add
fmuls
adc
in
xchg
test
xchg
xchg
lret
add
imul
mov
xchg
scas
outsb
test
ja
sbbl
repnz
lret
test
push
sbb
inc
les
stc
es
test
movsb
xchg
test
repnz
jp
mov
cmpsb
test
or
mov
lods
jb
movsb
push
and
mov
clc
incb
cmc
imul
lret
orb
in
std
inc
jg
cs
leave
jns
sbb
out
xchg
sti
and
or
iret
mov
add
xchg
push
test
ja
push
fs
inc
jo
cld
fidivrl
jo
adc
out
out
mov
push
and
pushf
lret
jp
adc
jb
mov
add
sub
mov
inc
pop
dec
lcall
pusha
mov
mov
and
fwait
test
into
stos
adc
jle
lock
ret
bound
cmp
xchg
jl
jecxz
fistpl
inc
pop
mov
cmp
mov
sub
inc
jo
int
xor
jae
jns
stc
xchg
xchg
movsb
inc
sub
cltd
pop
enter
fadd
lock
popf
test
xlat
aas
test
adc
test
mov
jo
push
push
or
bound
dec
or
les
out
or
incb
dec
cltd
pop
dec
outsb
std
jno
aaa
leave
mov
add
adc
inc
lret
cmpsb
ja
loop
mov
int
xor
andb
stos
mov
lret
cmp
cmp
sub
mov
inc
dec
mov
divl
rcrb
inc
ja
xchg
test
test
lret
mov
and
sub
mov
add
jg
sub
pop
xlat
insl
push
mov
xor
or
cwtl
call
rolb
mov
jnp
and
pop
add
fildll
imul
mov
test
xor
cmp
test
mov
push
arpl
imul
inc
push
ret
ss
cmp
pop
mov
and
mov
dec
cmpsb
bound
mov
addl
push
les
sub
sahf
mov
rclb
je
or
pushf
dec
lods
mov
mov
sbb
xor
test
push
cltd
mov
add
pushf
cmc
sbb
mov
mov
test
lret
inc
cmpsb
mov
and
arpl
jg
imul
sub
push
mov
dec
hlt
xor
and
pushf
mov
clc
cltd
pusha
shrb
xchg
or
rcrl
xchg
mov
jbe
out
nop
mov
mov
mov
or
test
push
int3
cltd
jns
cmp
call
sbb
leave
dec
push
test
sub
les
jne
dec
xor
enter
sbb
sub
dec
adc
sbb
cmp
push
jl
xor
test
or
test
pop
adc
pusha
adc
test
and
add
fdivr
mov
cli
cmp
test
xchg
loope
ret
pop
push
scas
test
add
in
pusha
mov
lods
mov
test
lds
and
adc
mov
sti
fdivl
lcall
das
inc
stc
mov
mov
dec
mov
in
jge
mov
loope
sete
addr16
sub
inc
test
ds
cmp
pushf
shr
mov
movsl
dec
in
stc
mov
fwait
mov
mov
sub
ljmp
or
orl
bound
xor
test
adc
mov
test
push
int
pusha
mov
arpl
scas
dec
jb
test
cmc
xchg
pop
push
lea
test
inc
dec
pop
test
mov
retw
dec
mov
inc
add
test
mov
jno
dec
pop
loop
jo
xchg
enter
cld
and
movsb
xor
dec
js
xlat
stos
inc
into
and
in
or
mov
out
mov
dec
and
nop
movsl
sbb
imul
gs
shr
clc
in
test
lds
jp
cld
adc
test
repz
and
xchg
test
xchg
stc
dec
inc
ds
cmp
and
les
mov
test
lret
stos
sbb
test
out
fcomp
lods
enter
arpl
dec
and
sti
mov
popa
jmp
pop
mov
insl
outsb
into
jecxz
sbb
sub
push
xchg
inc
inc
enter
xchg
ljmp
mov
xor
arpl
mov
into
cmp
xchg
push
and
jecxz
bound
fldl
mov
int
lcall
dec
cli
test
pop
pop
jecxz
mov
sarb
mov
lods
add
inc
xchg
mov
into
sub
push
ljmp
jl
jle
vmovlps
sbb
inc
push
push
cmc
test
pmulhw
loop
and
test
fisubs
mov
mov
movsb
xor
mov
mov
mov
or
test
std
mov
pop
mov
movsl
mov
xchg
test
mov
pop
jmp
mov
cmpsb
cmp
cmp
sahf
dec
jnp
mov
mov
mov
test
and
xor
inc
rcrl
mov
out
arpl
ds
cmp
jecxz
fwait
jle
movsl
cmpsl
popa
lret
icebp
mov
insl
test
dec
mov
cmp
test
jmp
adc
subb
pushl
ds
dec
ljmp
mov
daa
rorb
jge
jnp
and
test
mov
sub
xchg
xchg
and
xor
pushf
jnp
xor
in
sbbl
mov
test
aad
sarb
loopne
jle
data16
stos
fmul
lret
dec
mov
push
sbb
inc
mov
xor
aaa
lahf
inc
jnp
push
xchg
mov
mov
ljmp
pop
bound
test
flds
incb
push
mov
dec
idivl
idiv
test
fidivl
icebp
mov
call
pushf
pop
test
xor
test
hlt
test
loope
sub
sbb
insl
dec
mov
test
loop
dec
mov
rolb
inc
popl
sti
push
inc
sbb
test
adc
imul
out
movsb
xor
sbb
or
nop
or
js
arpl
adc
mull
leave
sbb
mov
enter
sbb
mov
push
fnstcw
outsb
xchg
in
pop
dec
bound
pop
rorl
test
pop
dec
dec
push
orb
int
push
cmp
sub
add
test
in
jp
xor
adc
in
sub
mov
lds
mov
add
out
sbb
cld
andb
in
insl
cmp
test
dec
int
mov
mov
movb
or
pop
imul
inc
in
xor
scas
lods
sub
es
xchg
movsb
add
pop
mov
test
loope
rolb
imul
neg
sub
call
cmp
jge
add
int
test
sbb
insb
xor
xchg
into
movsl
testb
es
test
popa
sub
rcrl
or
xchg
movsb
pop
and
push
mov
stc
lcall
push
sbb
inc
cmpsb
mov
addr16
stc
add
cmpsl
cli
test
ret
mov
pusha
mov
push
leave
dec
push
pop
test
sbb
test
push
sub
add
jl
mov
sub
pop
inc
pop
movsb
test
stos
cmp
test
enter
cmc
inc
or
cmpsb
leave
xor
cmp
sbb
and
dec
test
sbb
sar
sub
sub
xor
push
lods
addl
sbb
addr16
aas
cld
cltd
fsts
leave
test
bound
out
adc
in
out
ret
test
icebp
jp
pop
jbe
cmp
push
leave
idivb
movsb
iret
fidivl
fdivrs
and
mov
test
dec
lock
pusha
mov
and
outsb
xchg
mov
mov
test
pop
arpl
mov
pop
push
mov
addb
cltd
sub
outsb
cmp
or
and
cmpsl
xchg
or
les
fcoms
or
fdivrp
dec
test
dec
daa
xchg
ja
mov
push
sub
les
xor
jns
push
xchg
xchg
and
mov
cwtl
jmp
test
cs
data16
test
aaa
push
mov
dec
mov
pop
cs
dec
lods
jnp
mov
out
mov
movsb
adc
rolb
repnz
subb
movsl
xchg
test
test
xchg
pop
sub
jmp
les
jp
fisttps
stos
mov
movsb
mov
push
push
adc
mov
sti
mov
in
pop
mov
fcmovnb
stc
jno
cmpsb
hlt
mov
mov
fsub
sti
sbb
sbb
inc
mov
adc
stos
add
xchg
jb
leave
mov
add
jno
test
pop
xchg
out
insl
xor
sbb
leave
test
xchg
mov
in
push
jge
sub
enter
xchg
sbbl
xor
sti
push
daa
jae
jle
fidivs
shll
lea
in
jne
add
loop
cmc
push
movsl
test
rorl
clc
fwait
mov
mov
mov
out
es
mov
les
mov
ret
mov
movsb
or
cmpl
test
aaa
lret
lds
int
test
dec
jp
test
mov
jns
mov
push
cmp
test
into
jmp
fwait
test
mov
cwtl
dec
test
xchg
bts
or
mov
into
arpl
scas
rcrl
push
iret
xchg
dec
lods
popf
arpl
clc
imul
leave
sub
jo
lods
stos
insb
into
sbb
lcall
in
int3
out
test
aaa
cmp
sub
mov
test
das
fs
test
enter
lret
jecxz
aad
sahf
dec
rolb
pop
leave
cli
dec
jmp
mov
or
cmp
sub
aad
and
test
std
test
lea
cmpsb
call
outsb
xchg
push
mov
or
test
dec
aam
push
cmp
pop
jo
mov
mov
movsb
jmp
movsl
xor
inc
loop
mov
lcall
and
les
mov
mov
adcb
aaa
les
ret
roll
test
or
jecxz
and
insl
test
sbb
popf
insb
or
mov
cltd
sahf
mov
mov
add
adc
dec
insb
incl
mov
push
fdivrl
sti
ret
jle
fildl
adc
cmp
test
ror
stc
pop
sti
rep
std
fdivl
mov
mov
jl
leave
ret
cld
test
bound
sbb
xor
pop
loop
clc
cld
bound
pop
inc
ret
mov
push
lahf
pushf
pop
push
mov
push
sub
xchg
outsb
mov
test
popa
jmp
rol
test
mov
test
xor
movsl
test
jns
shl
imul
dec
cmp
mov
popa
scas
push
cmpsb
and
xor
lret
cwtl
shrl
enter
xor
mov
and
movb
iret
outsl
test
stos
adc
lods
pop
test
fcompl
test
xchg
shll
inc
movsb
xor
jbe
push
test
pushf
das
in
ss
bound
jle
jg
push
incl
xor
test
aaa
cmp
ja
mov
lret
rorl
push
test
outsl
or
xchg
xchg
nop
int3
and
lahf
push
sub
lret
pop
cltd
or
lret
rclb
fs
cmp
cmpsb
push
iret
test
dec
sti
add
adc
shl
mov
fsubrl
jnp
rolb
insb
test
into
dec
fs
test
xlat
lds
sub
in
ret
mov
test
imul
test
pop
push
addl
incb
or
ret
or
out
insb
int
dec
test
xor
pushf
test
ret
xor
daa
cmpsl
arpl
movsl
cli
cmp
cmpsb
sub
rolb
stc
mov
loop
jg
dec
test
loope
test
test
outsl
call
test
testb
cmp
test
push
and
or
mov
leave
push
dec
xchg
jbe
cmp
mov
xchg
dec
ror
cmpsb
cltd
test
xor
cmc
mov
and
sub
and
mov
mov
push
mov
xor
sahf
aas
adc
lret
sbb
mov
cmp
ret
je
repnz
mov
mov
aad
cli
inc
testl
jb
push
inc
mov
test
adc
bound
lret
je
rorb
xlat
adc
dec
int3
mov
fnsave
test
sub
sti
cmc
test
xchg
rolb
nop
cwtl
lret
mov
iret
add
pop
sub
inc
mov
ret
aam
les
lea
clc
pop
jle
addr16
adc
stos
mov
shlb
in
cwtl
aad
push
test
test
sub
sti
icebp
xchg
hlt
fnstenv
loopne
and
mov
push
stc
test
push
test
daa
pop
outsb
cmc
lret
or
dec
xchg
inc
lret
inc
mov
int3
push
cltd
jl
xor
setae
test
mov
stc
call
test
add
sti
les
test
mov
jb
gs
jbe
push
push
in
cmp
add
pop
mov
jge
sub
test
inc
imul
lods
je
add
bound
es
or
pop
add
inc
movsb
lock
lds
and
repnz
pop
pop
mov
inc
loope
inc
mov
xchg
xor
jae
int
lds
test
movsb
daa
pop
rclb
and
lea
and
stc
pop
fldcw
test
jne
xchg
test
mov
rclb
xchg
out
arpl
mov
pusha
jle
je
sbb
cmpsl
cltd
add
ja
pushf
scas
inc
mov
jecxz
mov
test
inc
rol
bound
sub
test
pop
mov
cli
insb
lret
and
test
sbb
mov
js
les
cmp
test
ljmp
pushf
sarl
das
sbb
xchg
mov
inc
test
add
fmuls
cmp
mov
or
and
adc
and
dec
pop
fisttps
test
loope,pn
mov
dec
sbb
cmpsl
cld
repz
xchg
test
stos
and
test
jae
adcb
popf
xchg
dec
or
sbb
add
ja
aas
out
mov
mov
movsl
leave
jge
jecxz
rorb
sti
adc
adc
fldcw
inc
add
test
cmpsb
mov
mov
movsl
inc
add
into
mov
push
std
imul
xchg
add
pop
aam
test
punpckhwd
sbb
add
inc
xor
inc
in
mov
daa
dec
test
nop
cli
sub
push
pop
mov
mov
xchg
cmc
inc
arpl
jl
sbb
imul
push
lea
test
sbb
shl
pop
in
cmpsl
test
push
dec
sbb
pop
cmp
mov
mov
push
adc
inc
lret
movsb
xor
mov
xor
bound
inc
fidivrl
mov
imul
inc
mov
and
jmp
or
int
inc
add
jge
test
and
fiadds
test
flds
mov
movsl
sub
xorb
cmpsb
sub
mov
xor
cs
test
lock
fwait
imul
rcr
push
push
test
mov
pop
or
lret
sar
pop
in
jp
add
mov
icebp
sarl
lods
sub
mov
and
rcrb
adc
les
mov
or
in
lahf
mov
test
divb
dec
and
aad
das
fmul
nop
outsb
xor
fcomps
into
cmp
sbb
test
push
mov
cmp
pop
test
dec
push
pop
js
and
movsl
pop
jl
stos
inc
int
test
add
test
pop
mov
push
gs
jo
ror
nop
cmc
bound
and
push
arpl
push
add
inc
push
aad
jne
test
int
and
icebp
cmp
sub
cmpsb
test
pop
pop
clc
test
ja
cld
pop
in
addb
popa
in
test
sahf
or
mov
pop
test
ret
jb
mov
test
jge
lock
mov
xlat
dec
push
sub
dec
bound
loope
pop
icebp
test
ja
test
pop
jle
stos
xlat
jmp
sarb
arpl
or
mov
test
rcrb
mov
jp
fcmove
in
mov
test
xchg
xchg
jbe
inc
lods
dec
pop
and
inc
dec
sub
clc
mov
outsb
mov
push
movb
dec
mov
repnz
imulb
test
call
pusha
mov
in
gs
mov
inc
sub
jecxz
imul
mov
add
push
movsb
loop
or
pop
cmpsl
in
mov
in
jmp
xor
mov
inc
int3
mov
into
aaa
push
inc
fwait
and
mov
shlb
test
repz
data16
or
lods
cpuid
xchg
xlat
bound
aaa
dec
test
push
lods
sahf
adc
mov
add
and
push
sbb
dec
test
stos
clc
lock
mov
mov
ret
je
dec
mov
subl
and
test
pop
xchg
mov
aam
cmp
mov
dec
rolb
sub
sub
cmp
sub
scas
loopne
or
testb
repz
sbb
lods
pushf
arpl
mov
movb
lcall
dec
jmp
rolb
mov
movsl
push
cmpsb
clc
push
int
and
ja
ss
pop
or
inc
sub
in
loopne
or
sub
test
xchg
xchg
test
adc
mov
rcrb
pop
mov
arpl
lcallw
cmp
cmc
xchg
movsb
fwait
and
scas
out
test
fsubp
nop
dec
jcxz
test
int3
inc
dec
push
fldcw
fcomp
insl
sbb
setne
bound
ficomps
push
lds
add
fwait
nop
in
bound
mov
pushf
mov
test
mov
dec
test
stos
push
jnp
pop
jecxz
lods
dec
ficompl
cmp
or
into
test
mov
int3
insb
or
in
fisubrl
mov
movsl
cltd
and
imul
test
xchg
sub
fldcw
inc
lret
gs
ret
test
cli
jle
aaa
and
adc
mov
movsb
add
dec
and
mov
pushf
dec
fs
pop
movsb
or
clc
and
mov
loopne
mov
jmp
in
adc
aaa
pop
jmp
das
sysexit
mov
test
or
les
outsb
ret
adc
dec
cwtl
cmpsl
imul
bound
jbe
nop
pop
mov
jl
clc
lcall
jne
inc
sti
add
and
xchg
and
lcall
jle
mov
xor
jp
and
ret
inc
in
xchg
out
jbe
leave
movsl
and
out
lds
dec
adc
leave
mov
add
das
mov
test
sahf
call
shl
mov
inc
arpl
or
cli
mov
icebp
dec
jge
rep
pushf
lcall
ljmp
outsb
sbb
adc
and
leave
xchg
ret
jl
lods
mov
test
pop
sub
test
xchg
mov
adc
je
jmp
in
clc
sbb
into
rorb
mov
adc
push
pop
mov
addr16
jl
adc
rolb
cmpsb
lds
outsb
mov
outsl
int3
std
dec
test
push
cwtl
call
flds
data16
out
sti
dec
xor
sbb
inc
mov
and
mov
popa
js
daa
sub
mov
in
inc
cmc
stos
lcall
mov
shrb
cmp
das
bound
sti
push
add
lcall
jecxz
and
mov
mov
xchg
out
jo
shll
dec
adc
and
mov
pop
repz
mov
mov
and
movsb
jb
ss
cmp
repnz
pusha
or
pop
and
mov
push
xor
inc
and
stos
pop
cmpsl
test
sub
mov
loop
sub
repz
mov
orb
xchg
xchg
push
in
mov
pop
xchg
movsb
mov
push
enter
mov
push
add
test
rol
xlat
je
test
cli
mov
add
push
stos
fildll
lcall
mov
add
outsl
andl
sbb
and
inc
leave
scas
lea
cmp
mulb
dec
sbb
loopne
sbb
and
cmc
in
pusha
pop
and
sbb
mov
or
daa
push
loopne
cmpsb
mull
dec
pusha
rorb
sub
loop
dec
adc
pop
cmp
jl
mov
mov
das
rclb
inc
add
push
rolb
daa
into
inc
push
mov
mov
pop
fisttps
inc
fs
in
mov
adc
pop
push
test
and
push
jo
jne
mov
ja
sub
sub
or
insb
mov
daa
les
cmp
test
sub
test
stos
fwait
inc
sub
add
jge
fucomi
fisttps
test
test
fiaddl
bnd
movsb
sbb
mov
push
xor
sub
dec
mov
mov
fcmovne
cmp
jg
mov
xchg
aas
in
add
dec
sti
cmp
sbb
ret
pusha
jb
aaa
mov
call
test
mov
push
lret
cld
xchg
lret
mov
int
jg,pn
jbe
out
pusha
test
leave
jne
xchg
jo
int
jnp
call
arpl
xchg
mov
dec
mov
cld
stc
jb
add
scas
lods
in
in
clc
add
sbb
test
and
int3
repz
adc
mov
lods
mov
bound
pushf
dec
sub
test
insl
adc
and
ja
mov
test
jecxz
and
arpl
lea
ljmp
push
dec
dec
sbb
test
cmc
push
jle
dec
jo
xor
aad
inc
cltd
les
test
lret
enter
imul
cmpsl
sahf
test
mull
or
ret
xor
stc
in
test
hlt
int
dec
test
xorl
daa
in
out
movsl
push
and
jge
cltd
xchg
mov
jl
mov
negb
add
enter
push
adc
rolb
add
xor
in
fidivrs
mov
mov
xor
test
mov
out
push
pop
test
add
mov
cmp
cmp
sbb
sub
les
and
mov
dec
push
xchg
dec
out
test
mov
test
sbb
test
jmp
dec
xchg
lds
andb
dec
addr16
pusha
add
jmp
or
in
mov
lahf
icebp
call
xor
insl
scas
sbb
pop
lahf
xor
pop
popa
lcall
int
or
aad
andb
add
dec
push
mov
mov
sbb
in
sub
aaa
out
orl
test
jmp
xchg
cmp
jbe
dec
pushf
sbb
into
mov
fs
int
or
movsl
hlt
subb
mov
sub
dec
fisttps
test
adc
and
daa
sub
and
iret
cmp
movsb
xor
jg
int3
imul
or
xor
add
imul
test
sub
sbb
mov
and
cmp
int
int3
mov
lret
test
dec
stos
jne
or
lcall
je
out
addl
cmp
mov
iret
mov
test
push
insb
pop
and
cwtl
bound
into
xchg
mov
dec
push
aam
mov
mov
inc
pop
lea
cmpsb
xchg
mov
test
out
mov
mov
test
movsb
cmp
mov
repnz
mov
outsl
pushf
cmp
rorb
jbe
icebp
test
inc
sti
call
jle
mov
sbb
cli
stc
test
add
shrb
mov
test
lock
test
or
cli
mov
jo
cmpsb
into
push
es
pusha
push
xor
xchg
test
lret
pushf
inc
scas
inc
test
in
sub
ljmp
jl
arpl
movsl
cmc
sub
sub
iret
cli
aad
mov
or
fwait
test
into
out
arpl
lcall
mov
test
lds
xchg
loope
xor
pusha
push
inc
and
mov
sub
mov
mov
inc
notl
cmp
dec
lds
mov
mov
mov
test
cmp
sub
push
insb
sarb
fldenv
pop
push
test
push
sub
sub
mov
fwait
test
lahf
xor
push
lcall
mov
ds
test
inc
xchg
inc
mov
repnz
fidivl
mov
sbb
in
inc
dec
mov
mov
mov
mov
cli
je
stos
mov
adc
aad
cmc
or
mov
pop
push
jg
mov
mov
pusha
xchg
mov
sub
movsb
mov
pop
in
push
xchg
pop
mov
fstpl
les
dec
imul
push
xchg
bound
sub
xchg
sbb
mov
push
lcall
dec
js
stos
test
test
inc
push
movsb
leave
fcomip
xor
add
mov
in
xor
cmp
mov
dec
jmp
je
jg
dec
inc
dec
int3
je
test
fstpt
push
test
lea
mov
mov
test
addr16
dec
test
inc
mov
mov
test
push
add
mov
or
arpl
push
test
dec
mov
push
fstl
sub
add
insb
dec
jmp
test
repnz
sub
fwait
inc
aam
test
in
push
inc
push
dec
sub
sub
sahf
sub
mov
pop
bound
andb
push
test
cli
jg
les
sub
dec
or
rcl
mov
jb
adc
enter
mov
test
adc
and
movsb
xor
pop
notb
sbb
mov
test
dec
and
lret
movsb
loop
daa
push
add
fsubp
stos
xchg
sbb
jp
mov
mov
push
cmpsl
stc
xchg
out
cmpsb
nop
in
pop
mov
stos
popl
vmovaps
push
mov
push
call
test
cwtl
stos
push
loop
sub
push
jl
xchg
and
jae
xor
push
lret
push
movsb
mov
aaa
sbb
int3
cli
les
sbb
test
lea
sub
mov
fidivrl
movsl
pop
test
inc
xchg
rolb
or
test
roll
insb
push
test
sbb
test
cmp
inc
sbb
in
and
adc
inc
movsl
movsb
mov
push
or
cmp
arpl
mov
nop
sbb
adc
mov
test
daa
pop
add
or
fwait
xchg
mov
sub
andb
in
cwtl
out
enter
test
sub
mov
popa
testb
orb
sub
notl
sub
adc
mov
xor
jp
pop
cmpsb
into
loopne
mov
iret
out
sub
ret
test
es
inc
cmp
inc
or
mov
out
adc
in
mov
cmpsl
sbb
dec
and
shr
je
pop
pop
or
pushf
adc
arpl
mov
ss
cltd
mov
arpl
xchg
mov
mov
mov
add
mov
cmc
pushf
push
pop
test
sbb
add
xlat
in
outsb
jg
loopne
in
mov
daa
sub
add
pushf
lahf
push
sti
and
jge
jl
iret
mov
js
push
lret
sbb
inc
rol
pusha
addl
data16
inc
pop
jb
insb
jle
pop
add
xchg
dec
test
ss
push
mov
jae
test
mov
sar
loope
ret
pop
and
xlat
out
test
mov
cli
xchg
test
out
sub
fiaddl
pop
fists
ja
test
push
idivl
add
outsb
loop
lret
sub
int3
in
dec
mov
mov
test
or
and
dec
inc
inc
outsb
pusha
cmpsl
ja
lods
js
and
cmp
mov
les
das
andl
push
call
dec
sub
shll
mov
test
sub
and
sub
fnstcw
add
aad
pushf
mov
cmpsl
andl
sub
pop
and
ds
pop
test
mov
cmp
clc
jmp
test
push
test
lea
je
jns
jmp
insl
dec
fmull
in
mov
test
jg
mov
mov
ljmp
movsl
loop
cmc
push
outsb
push
stos
cmp
test
leave
xchg
mov
ljmp
mov
aad
test
xor
bound
cmp
aad
sub
add
mov
mov
pop
mov
and
or
push
push
pushf
xchg
ljmp
movsb
push
xor
cwtl
jb
es
test
fimull
ret
clc
in
leave
xor
movsb
subl
adc
push
fs
jbe
mov
cmc
loop
mov
fmuls
movsl
mov
call
xor
or
jae
icebp
pop
inc
xchg
jmp
loope
xchg
outsl
and
pusha
cmp
fists
push
test
mov
test
push
jmp
push
test
cwtl
push
lret
leave
popa
shlb
sbb
test
and
clc
and
inc
lcall
test
or
jns
and
cmpl
testl
call
fcmovne
mulb
ds
test
bound
xchg
mov
int
xchg
sbb
or
cmc
stc
repnz
ror
push
fldenv
enter
jg
add
jbe
xchg
inc
add
shl
sbb
loop
mov
fwait
cwtl
stc
aam
pop
lea
icebp
fldenv
adc
das
test
loop
mov
jns
dec
pop
xchg
roll
rcrl
aam
stc
xchg
movsl
aaa
imul
sub
xchg
ja
jg
and
or
dec
sbb
adc
daa
aad
jmp
and
xchg
and
jge
decb
test
dec
or
jnp
lods
das
fiadds
xchg
repnz
test
out
addl
movsb
jne
xchg
mov
jns
test
test
mov
rcrl
pusha
lahf
in
pop
test
push
lods
out
pop
enter
xchg
jge
stc
testb
jns
arpl
add
das
dec
jnp
pop
cmp
aas
outsb
cmpsb
or
lods
push
or
mov
push
stos
data16
cli
mov
fs
call
daa
sub
jmp
ficompl
jg
push
stc
test
sub
std
inc
ds
test
push
repnz
or
test
push
aam
cmp
add
inc
lods
mov
pop
int
xlat
test
cli
xchg
enter
cmp
sbb
and
ror
into
sub
test
inc
sbb
push
arpl
outsb
fcoml
mov
dec
jb
ret
roll
enter
movsb
test
cmp
insl
les
test
push
sbb
loope
loop
xlat
movsb
ret
lret
inc
jbe
insb
cmpsb
popf
lods
es
add
or
dec
inc
xor
test
lahf
sbb
push
push
bound
test
push
or
dec
mov
call
adc
mov
dec
pop
add
jns
sub
iret
inc
out
pop
outsl
sti
test
aad
fnstsw
pop
outsb
bound
test
or
sub
mov
arpl
test
enter
outsl
mov
and
sub
bound
test
ljmp
lcall
dec
mov
std
test
pusha
bound
shr
lods
pop
cltd
test
int3
call
inc
jle
sub
jecxz
xor
xor
push
pop
inc
ret
rorb
sbb
mov
sub
jecxz
stc
stos
cli
out
mov
divl
push
mov
lods
and
lret
pop
push
mov
test
inc
and
and
enter
push
push
mov
jbe
fisttpl
inc
mov
popa
popf
cmp
and
xor
sbb
jecxz
dec
sbb
test
jg
and
dec
pavgb
adc
mov
and
arpl
pop
mov
icebp
imul
dec
pop
or
sbb
test
aam
xchg
movsl
xlat
mov
or
test
enter
scas
and
sbb
mov
bound
push
push
popa
inc
mov
xor
xor
addl
pop
icebp
neg
inc
mov
add
mov
fsubs
pop
lods
imul
lcall
dec
sub
mov
pop
shll
mov
push
sti
in
jecxz
dec
or
call
push
ja
test
adc
sbb
cmp
mov
and
mov
cs
rorb
jo
push
insb
jb
outsb
sub
clc
in
cmc
push
out
div
adc
gs
jo
in
push
out
and
imulb
mov
xchg
movsb
mov
mov
dec
inc
xor
aaa
mov
xchg
sub
sbb
dec
scas
in
add
mov
ds
xchg
jo
out
push
inc
xchg
cmpsl
jmp
aad
movsl
cmp
test
jb
push
test
sbb
pop
shrb
mov
ret
lret
fsubl
test
pop
bound
es
mov
cmp
pop
out
add
push
int
xchg
push
in
loop
int3
dec
adc
mov
pop
cmp
xchg
pusha
fisubrl
bound
jne
mov
cmpl
xor
mov
nop
lret
adc
sbb
push
shll
dec
clc
enter
dec
fistpl
add
sub
mov
arpl
cmp
fsts
push
push
movsl
test
lds
xor
mov
jns
adc
xchg
dec
test
loop
pop
xchg
arpl
cmp
xchg
push
rclb
mov
out
cmpsl
lods
filds
in
inc
aas
xchg
dec
mov
adc
push
in
dec
dec
test
enter
mov
pop
xchg
inc
mov
xor
dec
test
aam
jnp
xchg
pusha
test
test
sbb
stos
cwtl
test
push
jb
and
movsb
sbb
mov
lea
xlat
cmp
sub
test
xchg
and
mov
mov
clc
cli
movsb
jb
fisubrs
cmp
mov
mov
leave
es
lahf
addb
push
test
xchg
divl
pop
test
push
or
adc
sub
xchg
push
movsl
idivb
dec
pushf
test
insb
fwait
data16
cli
daa
sub
or
add
std
test
jle
in
movb
loop
les
mov
pop
mov
pusha
or
dec
mov
int
add
fimull
jg
adc
cmp
lods
ret
xor
loop
sbb
fld1
pop
dec
and
out
or
mov
lret
les
lods
fistpll
sub
push
test
addb
jle
sbb
shl
negl
loopne
orb
push
xchg
add
repnz
push
xor
mov
add
xchg
dec
xchg
test
ficoms
repnz
lret
lahf
call
sbb
mov
xchg
push
inc
addr16
or
inc
test
adc
lcall
iret
add
fstl
stos
test
push
inc
mov
adc
or
ds
inc
fimull
cs
in
mov
mov
mov
data16
cmc
shll
or
mov
int3
and
and
stos
fistpll
cmp
cwtl
push
mov
inc
int3
or
test
ljmp
push
xor
daa
inc
test
sbb
test
sub
jns
cli
stos
test
sub
aaa
fwait
sub
mov
pushf
push
in
pop
bound
jecxz
outsb
test
test
sahf
cmp
das
and
jp
test
lods
xor
orb
lcall
vpshuflw
into
arpl
jmp
pop
ja
push
inc
xchg
test
hlt
push
movsb
rclb
fildl
mov
add
pop
ja
pop
outsl
test
xorl
shll
mov
xchg
dec
js
daa
and
push
mov
test
jecxz
sub
out
mov
jmp
arpl
mov
pushf
pop
jb
lret
mov
cli
lock
movsl
pop
xchg
shlb
pop
xlat
dec
mov
adc
les
stos
lcall
imul
out
mov
xchg
rol
test
mov
and
jne
sub
mov
jmp
jl
add
jbe
fisttps
or
or
jno
xlat
test
enter
insb
and
call
mov
lret
pushf
test
scas
mov
mov
mov
sarb
aad
xchg
int
enter
mov
outsl
mov
mov
sbbb
std
inc
inc
stos
lret
mov
add
and
mov
mov
xor
pop
sub
xor
and
inc
daa
inc
into
hlt
mov
inc
push
ja
test
ret
je
cli
inc
out
enter
jp
pop
mov
daa
movsb
push
inc
mov
fisubrl
and
xor
bound
xor
inc
mov
mov
sub
shll
and
jns
jl
daa
aaa
inc
dec
sub
idivl
push
mov
push
mov
sub
and
in
das
je
xor
mov
test
jmp
inc
pop
cmpsb
scas
mov
dec
mov
cmp
add
pop
sub
idivl
cmp
lret
fldt
fwait
scas
jnp
es
test
xchg
mov
cmc
das
jp
inc
shrl
xchg
mov
pop
sarl
xchg
pop
test
xor
dec
test
sub
daa
mov
insl
or
add
adc
or
popa
inc
dec
inc
lcall
imul
xor
add
mov
fld
pop
adc
push
push
fmull
mov
and
movsl
and
lcall
cmc
xchg
pusha
test
fsubs
loopne
nop
mov
test
movsb
pop
sbb
mov
cmp
fwait
adc
jge
pop
outsb
mov
pop
das
mov
xchg
loope
jns
daa
ret
sbb
adc
inc
stc
outsb
test
mov
sbb
add
lahf
xchg
nop
sarb
mov
aas
mov
sbb
test
sub
test
ret
loope
dec
int
xor
adc
dec
add
movsb
data16
pushf
mov
leave
sbb
iret
jg
mov
cmpsl
pop
mov
dec
data16
stos
mov
iret
test
inc
xor
or
test
add
not
push
test
outsb
sbb
lret
fwait
dec
jmp
dec
sub
and
cs
push
test
sti
int3
addb
rcll
test
out
cltd
pop
mov
call
mov
loope
mov
test
xor
dec
adc
test
add
out
xchg
dec
test
push
les
fisttpl
ljmp
cmc
and
insl
mov
mov
sbb
lods
fwait
cld
out
push
inc
test
pop
or
clc
hlt
in
mov
mov
mov
or
xor
jbe
test
data16
inc
cmp
mov
ljmp
mov
xor
mov
xlat
call
jecxz
sti
mov
cmp
cmpsb
sub
mov
loop
cmp
inc
fistps
mov
div
mov
test
mov
jmp
jle
fdivrs
ljmp
xor
movb
add
push
andb
pop
mov
push
mov
cs
fsubr
test
in
xor
test
xor
test
bound
les
lods
mov
xchg
fcoms
jnp
mov
dec
test
mov
and
int
mov
sub
mov
sbb
negb
call
test
mov
mov
iret
add
xchg
cmp
mov
stc
xor
mov
cmpsb
jle
test
iret
xchg
das
mov
out
scas
std
mov
push
cmc
or
adc
leave
and
adc
mov
sub
inc
mov
addl
adc
arpl
add
lahf
xchg
mov
jecxz
enter
xchg
cli
sub
movsb
dec
lahf
add
dec
jp
adc
stos
dec
mov
mov
cmp
cmpsl
ja
outsb
or
loope
pop
in
sub
mov
test
rcrl
movsl
int3
mov
lods
cmp
in
divl
sub
fstpl
mov
xchg
test
imul
xchg
scas
lahf
jns
insb
jecxz
xchg
and
pusha
jp
shlb
xchg
inc
cmp
rolb
mov
test
jle
lret
push
jne
inc
movsb
xor
loope
push
cmp
dec
int3
push
pop
jns
mov
sbb
mov
inc
pop
loop
mov
xor
cmp
scas
test
nop
mov
sbb
push
in
testb
loope
mov
jnp
jge
pop
inc
test
push
pop
movsb
jbe
sub
lea
cmp
test
push
loop
mov
jbe
test
jl
inc
out
mov
pushf
mov
shl
sbb
mov
push
test
dec
ret
mov
add
mov
into
cli
je
mov
and
test
dec
ret
negb
ss
pop
test
mov
and
into
je
sub
adc
mov
xorb
shl
dec
pop
jl,pt
out
test
in
aam
test
jnp
cwtl
fwait
sbb
mov
dec
jp
incb
outsl
inc
push
pop
int3
ret
in
cld
mov
add
test
in
fiaddl
and
loop
mov
and
inc
enter
stc
cmpsl
push
test
mov
sub
mov
daa
bound
test
push
jae
pop
mov
cmpsl
push
clc
jne
test
mov
test
out
stos
bound
mov
loopne
adc
cmp
xor
jbe
inc
and
dec
je
aas
xchg
test
xchg
inc
sbb
scas
test
cmp
mov
shll
sub
xchg
test
xorl
inc
xor
in
push
cmp
movsl
insb
test
test
xchg
stc
cmpl
pop
push
mov
push
bound
les
and
xor
movsb
xor
add
movsb
mov
out
les
dec
movsb
clc
je
enter
daa
shll
sub
push
insb
icebp
rorb
test
push
outsb
xor
test
and
sub
fs
es
and
pop
fisttpl
mov
int
hlt
inc
xchg
dec
mov
test
add
movsl
test
scas
lods
add
popa
xor
push
into
test
mov
push
in
fisttpl
add
mov
mov
or
or
lds
test
out
clc
or
and
cs
dec
lret
mov
dec
pusha
test
repnz
je
int
cmp
xchg
mov
and
mov
out
sub
pop
mov
out
stc
mov
scas
cmp
data16
movsb
dec
andb
xchg
xchg
test
sbb
or
jg
stc
lcall
or
sub
insb
mov
lds
int
sub
dec
call
sub
and
test
mov
push
sub
testl
mov
inc
xchg
test
pop
jge
add
inc
sbb
fs
jl
iret
or
cmp
in
test
add
test
xchg
les
sub
cmp
cmpl
clc
gs
push
sub
test
dec
insb
cmp
xchg
push
inc
mov
loope
int
ficoml
daa
push
out
inc
scas
test
cs
pop
call
inc
jnp
push
test
jbe
out
test
repz
cmp
imul
dec
fwait
jle
cltd
mov
jmp
loop
hlt
int
cld
cs
fprem1
xchg
xor
arpl
testb
xchg
test
and
mull
adc
insb
test
adc
ret
lds
cs
dec
mov
mov
movsb
or
test
call
jge
lcall
cmp
cmc
ret
xchg
cli
in
jns
cmpsb
mov
cmp
dec
movsb
int
add
dec
xor
and
mov
lret
cmpsb
test
adc
mov
mov
mov
inc
mov
mov
fildl
mov
cs
xchg
scas
aaa
inc
jecxz
cmc
mov
xor
faddl
arpl
jp
or
or
loop
xchg
push
testl
adc
and
pop
inc
mov
sub
cmp
in
jb
cmpsb
daa
and
fdecstp
fildl
or
int3
inc
jecxz
inc
fnstsw
bound
xchg
cmc
outsb
addb
mov
xor
mov
inc
test
jg
loopne
cltd
popa
arpl
inc
outsl
imul
push
in
outsb
jg
mov
mov
adc
and
jae
push
xorl
mov
xchg
cmp
sub
arpl
adc
and
dec
cwtl
or
add
test
fcmovbe
test
inc
xchg
stos
popl
adc
jl
daa
lds
pushf
adc
cmp
aas
cmp
jnp
je
leave
bound
movsl
mov
ret
sbb
cmp
loop
rol
add
mov
lret
test
lcall
mov
mov
test
add
fidivrs
lea
mov
push
jecxz
stos
mov
xchg
pop
out
fstl
testb
in
loop
sbb
negl
mov
and
test
mov
xchg
jns
mov
xchg
or
adc
in
mov
test
mov
test
das
mov
mov
stc
ror
sbb
inc
fidivs
dec
mov
mov
jne
push
sub
inc
adc
arpl
int
mov
mov
xchg
inc
jp
sub
xchg
and
mov
push
test
jae
pop
sub
int
cli
mov
mov
clc
test
loop
fidivrs
data16
mov
adc
mov
aam
rorl
lahf
test
xchg
decb
adc
mov
jae
jmp
or
cmc
cmp
mov
out
ds
sahf
fiadds
stc
fsubrs
cmp
pop
cltd
and
xchg
jl
mov
cmp
or
push
add
mov
into
fwait
jne
xchg
gs
mov
mov
xchg
mov
lock
sub
test
jmp
mov
jl
nop
dec
pop
stc
imul
mov
push
jp
insb
push
jmp
hlt
cld
sub
xchg
cltd
test
lods
test
push
rorl
sbb
push
sbb
mov
test
dec
inc
mov
push
jle
aam
test
and
dec
cmpsl
bound
je
inc
dec
add
sbb
inc
dec
mov
cmp
jae
mov
and
and
out
pop
sub
jo
or
bound
sbb
and
xchg
pop
jg
push
lds
loope
pusha
cli
inc
push
mov
aas
push
pushf
mov
sub
data16
push
fs
ljmp
aas
jle
negb
mov
mov
sub
mov
cmp
inc
fwait
aam
inc
test
pop
mov
aad
inc
mov
dec
mov
push
and
pop
sbb
test
insb
sub
clc
xor
sbb
sub
push
test
in
pop
iret
out
mov
and
mov
cmp
test
bound
mov
mov
lods
aam
xor
adc
enter
or
or
add
or
mov
jb
cwtl
test
sub
mov
test
mov
and
or
mov
dec
std
arpl
movsb
loope
outsb
cmp
test
inc
sub
bound
sub
fwait
pop
test
dec
push
dec
addr16
test
mov
mov
push
lock
lea
lret
mov
push
aas
testb
pop
movsl
and
cltd
jp,pn
aad
mov
mov
dec
insl
mov
mov
dec
movsb
cmp
jp
pusha
mov
nop
test
pop
mov
std
or
leave
pusha
test
ja
fwait
hlt
ficoml
lret
test
push
push
sti
les
incb
or
xor
imulb
mov
ja
test
push
inc
sub
int
sbb
dec
call
jnp
cmpsb
sbb
push
test
bound
subb
push
addr16
out
mov
test
push
add
dec
std
mov
mov
ljmp
hlt
mov
js
sbb
es
test
mov
inc
or
mov
ljmp
int
and
cmpl
dec
pop
push
cmpsl
inc
movsb
mov
jns
cltd
ds
or
fs
xor
pushf
jp
test
lahf
jbe
scas
sbb
sbb
push
std
and
adc
push
add
xchg
int3
subl
movsb
add
mov
cmp
pop
movsb
mov
ret
xor
repnz
adc
push
mov
in
fwait
add
and
je
stos
enter
cmp
cltd
sahf
jmp
pusha
push
sbb
mov
and
aad
xchg
and
test
lods
leave
xchg
bound
push
xlat
cltd
xor
inc
dec
sub
test
push
add
test
cwtl
mov
jo
dec
xchg
dec
dec
sbb
jns
mov
dec
movb
loop
in
or
pop
jbe
jl
enter
pop
sub
mov
test
xchg
daa
sahf
sub
fisubl
fs
pop
mov
hlt
sbb
sub
inc
xchg
cmpsl
test
test
rcrl
pop
sub
pop
cmp
ja
inc
lock
cmp
dec
sti
lds
std
push
xchg
cwtl
js
popa
mov
aas
in
and
push
stos
cmc
test
xchg
push
jno
cmpsl
pop
push
addl
insb
fistps
jnp
lcall
sbb
loopne
and
aam
xchg
dec
test
pinsrw
out
mov
stos
jns
cli
dec
enter
lods
cmp
inc
and
flds
xchg
cmpl
in
fwait
inc
cwtl
or
mov
std
test
jp
push
pushf
push
add
jae
ss
lret
and
int3
sub
inc
and
xor
aas
sahf
push
test
sub
xchg
test
ss
jbe
add
push
aas
and
xchg
sub
cmp
fsubs
cmp
daa
loope
arpl
icebp
fsts
addr16
movsb
lods
pop
subb
aaa
mov
xchg
pop
test
ja
arpl
mov
fs
jg
insb
jp
and
and
jge
test
add
inc
arpl
ljmp
sub
push
in
cs
push
jne
add
test
push
mov
mov
cmpb
adc
push
add
mov
cmc
mov
sub
nop
push
inc
into
pop
test
ljmp
test
adc
shrl
mov
jge
inc
cmp
dec
adc
test
gs
movsb
sbb
adc
test
cmp
icebp
xchg
lahf
test
or
fiadds
dec
jecxz
add
cmp
mov
lahf
sub
push
subb
test
int
add
insb
test
data16
jmp
arpl
in
jae
lret
sahf
sarb
fildl
cwtl
cltd
push
jne
test
jecxz
jae
adc
repnz
rorb
lcall
xchg
mov
test
fisubrs
popa
es
int
arpl
and
mov
xchg
loopne
mov
mov
mov
out
pop
xor
negb
mov
mov
enter
jle
fs
xchg
mov
and
ljmp
test
mov
push
aad
add
push
mov
lds
mov
or
test
ret
in
pusha
sub
cli
in
imul
mov
les
mov
mov
sbb
dec
cmc
or
lret
cmp
jl
lds
fcoml
jne
add
mov
fistpll
push
jnp
and
push
lcall
mull
je
popa
scas
push
mov
cld
xchg
neg
test
fildl
pop
xor
arpl
shlb
ja
jp
pop
test
sbb
test
cmp
push
test
adc
mov
sbb
rorl
xchg
movsl
das
pushf
pop
out
add
cs
pop
add
in
sahf
jg
xchg
addb
test
sarl
lret
push
add
mov
pop
cwtl
xchg
arpl
xchg
int3
adc
add
mov
das
jmp
movsb
cld
adc
test
mov
int
and
mov
pushf
lds
jno
xor
std
insl
jecxz
and
xchg
mov
movsb
test
or
cmp
int
and
add
adc
test
in
lret
and
push
add
jecxz
test
ret
dec
cmc
or
loope
leave
push
test
scas
push
mov
push
sbbl
inc
xchg
add
sub
pop
test
cmpsb
loop
jmp
lahf
dec
cmp
test
push
sbb
lea
lds
push
xor
push
jecxz
and
orl
xor
je
in
das
test
inc
sub
rclb
mov
test
add
test
scas
inc
daa
xlat
pusha
mov
data16
dec
lods
insb
test
shrl
mov
daa
mov
in
dec
imul
stos
jl
rcl
sbb
popf
test
lds
or
sahf
mov
movsl
or
into
test
in
cmp
je
sub
and
mov
mov
adc
or
dec
jmp
pop
push
cwtl
daa
clc
scas
movsb
jb
popa
dec
xor
pop
mov
mov
test
push
push
lds
cmp
scas
mov
ja
pop
pop
inc
cmp
jle
push
jnp
test
test
push
mov
test
cmc
dec
xchg
test
or
clc
pop
fmuls
and
sahf
lret
cmc
aam
in
mov
xchg
dec
lods
addr16
aam
mov
daa
call
shl
xchg
scas
movsb
and
lret
add
pusha
sub
pushf
leave
movq
test
into
std
xchg
xor
pop
or
out
sub
and
and
jns
push
loop
mov
push
pop
cs
lahf
inc
mov
mov
xchg
mov
test
dec
mov
test
adc
les
lret
push
test
sub
lret
jns
push
or
add
lcall
inc
jg
fwait
lods
mov
pop
in
lret
xchg
in
fcompl
repnz
aam
movsb
stos
xchg
push
sbb
cltd
xor
jle
mov
in
jle
test
loop
mov
les
push
mov
mov
mov
inc
test
in
dec
pop
sub
inc
or
xchg
sub
cmpsb
sbb
inc
mov
cmp
mov
addb
or
dec
cli
mov
test
dec
rcr
dec
xchg
addr16
scas
mov
push
jne
test
dec
ret
cli
sbb
mov
and
jns
test
daa
enter
arpl
sbb
push
movsb
push
pop
xor
sub
add
mov
dec
in
add
test
cmp
rep
push
inc
stc
int
mov
test
data16
pop
push
addb
adc
in
shrb
cmp
adc
mov
fs
mov
cmpsb
lahf
inc
sub
or
adc
mov
pushf
std
dec
mov
gs
push
jbe
jmp
mov
orl
test
inc
mov
inc
insb
xor
jns
cwtl
test
mov
in
stc
push
loopne
fidivrl
repnz
repz
loop
lock
sub
mov
mov
fwait
ret
sub
xor
stos
lret
pop
fs
sar
push
push
mov
adc
insb
cwtl
mov
scas
shrl
pop
lahf
faddl
ja
jb
dec
leave
in
mov
pop
es
mov
push
imul
daa
push
call
cltd
cmp
fdivrl
sub
dec
test
adc
pop
push
ret
sub
xchg
dec
pusha
push
in
cwtl
xchg
loopne
out
cmpsl
mov
adc
jo
test
pop
rorl
lret
test
loopne
stos
add
orb
push
mov
jp
lods
dec
pop
mov
les
or
and
andb
dec
shrl
push
mov
dec
and
and
mov
movsb
inc
test
sub
lods
cmpsb
pushf
popa
inc
sbb
add
jno
mov
xchg
sbb
call
les
loop
cmp
or
pop
es
lahf
cmp
dec
test
add
call
ja
test
push
mov
test
data16
push
call
and
adc
push
cli
sbbb
jl
addl
sahf
enter
adc
sti
arpl
test
push
sbb
mov
or
and
test
mov
inc
test
notb
out
andl
test
mov
adc
pop
mov
call
dec
mov
jg
cmp
incb
push
cmp
out
mov
test
xchg
leave
mov
mov
adc
push
pusha
mov
jns
xchg
or
insl
in
mov
adc
xlat
clc
out
es
jo
aam
mov
fistpl
lcall
movsl
and
lock
dec
out
popf
aam
loope
dec
and
hlt
mov
add
je
ljmp
pop
push
mov
and
sbb
mov
xchg
cmp
xchg
inc
jmp
shl
in
das
and
pop
cmpsb
pop
mov
test
out
xor
arpl
daa
add
and
mov
mov
dec
mov
xchg
sahf
test
push
sub
les
sarl
mov
test
rclb
dec
stos
fildl
mov
pushf
or
icebp
or
fwait
js
cmpsl
test
ljmp
icebp
lods
movsb
shl
pushf
test
push
mov
sbb
into
xchg
out
mov
lret
and
add
call
mov
pop
mov
mov
fldenv
pushw
lock
adc
test
jg
cltd
fcomps
push
je
cs
out
cmpsb
sbb
pop
jmp
iret
pusha
fisubrs
jae
int3
gs
mov
aam
les
sahf
mov
loope
test
push
dec
mov
add
lret
fwait
mov
fisttps
push
sub
dec
pop
and
add
sbb
test
imul
fstl
test
cwtl
nop
jae
sub
je
adc
push
jmp
mov
jo
ret
test
arpl
lahf
lretw
inc
jmp
mov
mov
arpl
or
scas
lods
add
jle
fs
add
cs
xor
pop
or
mov
ja
sbb
stos
lcall
out
arpl
shll
incb
daa
mov
xor
test
xor
pop
xchg
fadds
push
pop
in
in
mov
mov
add
stos
jl
xchg
cmp
mov
cmp
inc
xor
push
cwtl
mov
sbb
or
inc
pushf
pop
aas
stos
mov
loop
jp
pop
push
mov
test
sbb
outsb
daa
jno
cmc
cmpsb
lds
test
fucom
push
or
inc
test
loope
repnz
add
xchg
movsl
test
insb
stos
jb
or
in
nop
enter
mov
xor
cwtl
int3
sub
scas
hlt
adc
movsb
push
clc
xor
cmp
mov
xor
pmulhuw
inc
xor
pop
clc
mov
mov
lea
das
add
ret
js
sbb
cld
imul
push
add
insb
or
cmp
sbb
outsl
mov
inc
lock
mov
movsb
leave
and
mov
movsb
mov
ret
push
cltd
inc
cli
les
enter
cmp
popa
or
arpl
movsl
sbb
mov
test
inc
sub
mov
mov
mov
push
test
push
popf
inc
imul
inc
xor
addb
xchg
test
pop
sub
cmc
cmp
fiadds
jbe
mov
aad
adc
push
add
dec
fnstenv
xor
nop
cmp
cmc
repnz
sbb
push
stc
inc
mov
das
icebp
inc
xchg
lret
mov
add
cmp
jp
out
in
inc
es
xor
cmp
jne
jg
adc
xor
les
es
fwait
arpl
mov
cmp
push
pop
nop
mov
imul
pop
push
or
int3
jge
cmp
fisttpl
mov
aad
sub
arpl
lcall
cmp
fwait
mov
test
xor
test
and
mov
out
jbe
mov
add
ljmp
js
cld
cmpsl
roll
xchg
or
test
lcall
mov
cld
jnp
pop
icebp
lods
jae
adc
loope
push
fistpl
iret
xchg
stc
mov
mov
add
xor
arpl
lcall
into
cmpb
test
pop
repz
or
les
or
hlt
mov
xchg
and
xorl
pop
add
fs
daa
dec
sbb
sub
xchg
cmpsl
mov
test
repnz
push
test
mov
sub
fld
xchg
test
mov
inc
sub
pop
dec
dec
fiadds
std
addb
cmpsl
push
sub
lcall
movsb
or
lret
cwtl
sbb
xchg
ficoml
dec
clc
in
cltd
sarb
sub
pop
test
aaa
or
test
je
adc
fdivrp
fst
stos
enter
leave
insb
sub
mov
hlt
sbb
test
icebp
dec
xor
das
lret
lea
pop
push
test
ret
push
popf
test
stos
xor
mov
test
sbb
and
test
push
fistpll
int
fsubrl
push
fwait
adc
cmc
mov
jnp
test
fidivs
movd
nop
and
test
xchg
push
mov
sahf
xchg
cmpsl
dec
out
and
test
mov
push
pop
out
add
push
test
or
call
loopne
nop
fldt
imul
lret
bound
pop
mov
movsb
test
test
pop
dec
push
mov
icebp
test
jmp
cmp
dec
adc
sbb
mov
pop
push
adc
test
cltd
stos
lret
je
inc
test
mov
xor
arpl
pusha
fcomps
scas
jbe
cmpb
sub
xchg
dec
dec
inc
inc
mov
cli
mov
mov
out
xchg
icebp
or
gs
hlt
cmc
out
cwtl
push
setbe
int
or
add
mov
xor
jb
les
cmp
sbb
test
or
flds
push
test
sbb
adc
xlat
jbe
and
cmp
xsavec
pop
in
push
test
sbb
and
shlb
into
and
repz
pop
pop
in
xchg
jbe
mov
or
dec
frstor
add
insl
test
mov
xor
sbb
in
rcrl
xor
push
jo
orl
fmull
sub
xchg
cmp
sbb
ret
sub
dec
test
icebp
testl
adc
data16
sub
leave
and
jo
clc
test
in
mov
mov
xchg
movsl
fistpl
pushf
and
enter
mov
movsb
popa
xchg
sbb
push
shl
pop
push
ds
mov
test
pusha
inc
jnp
push
and
test
lret
dec
cli
mov
or
push
in
xchg
jo
int
sbb
test
adc
arpl
mov
push
insl
mov
mov
insb
sbb
dec
sbb
leave
mov
mov
lret
clc
test
and
mov
jecxz
bound
enter
scas
push
mov
dec
adc
test
movsl
jae
je
mov
xor
mov
xchg
mov
sub
ficompl
movsb
sub
movsl
mov
and
and
cmp
jbe
lock
push
mov
sbb
adc
push
test
js
test
cmp
aam
lea
and
mov
inc
mov
mov
test
cs
dec
mov
and
cmc
xchg
inc
popf
push
mov
sub
or
mov
test
jbe
inc
push
adc
or
mov
mov
out
testl
lock
out
mov
inc
inc
jecxz
pushf
pushf
test
stos
lahf
cmpsl
mov
jne
xchg
ss
xchg
cmp
dec
and
sbb
data16
pop
and
adc
mov
notb
push
xor
je
test
jp
test
mov
mov
push
pop
into
lods
dec
test
cmpsb
cmc
cmp
pop
mov
xchg
pop
xchg
insb
pusha
into
pop
in
sub
and
movsl
std
dec
fisubl
mov
push
loope
hlt
adc
arpl
mov
jnp
pushf
push
arpl
dec
adc
jne
mov
js
xor
out
adc
arpl
mov
std
mov
mov
xor
and
das
rolw
fsubrl
add
std
and
test
ja
mov
test
jno
pop
in
movl
inc
shlb
cli
push
mov
pop
sbb
mov
or
mov
push
fnstcw
addl
push
inc
mov
add
test
js
in
sarl
pop
das
adc
xchg
shr
test
dec
test
aam
sub
dec
and
insl
int3
mov
or
sub
scas
das
enter
mov
and
jne
and
sbb
mov
cmc
and
pop
mov
aas
dec
mov
bound
sbb
popa
or
push
and
pop
loope
push
cmp
jecxz
subl
sbb
mov
test
pop
cli
in
je
test
pxor
add
test
sbb
scas
popf
mov
addl
cwtl
sti
test
bound
push
pusha
jnp
dec
movsb
xor
cmp
test
mov
les
test
fstpl
aad
out
push
shrb
push
or
or
and
neg
test
lret
arpl
push
ret
aaa
xor
test
sahf
daa
loopne
mov
enter
mov
lds
add
aad
mov
mov
and
sub
jecxz,pn
test
xchg
sub
pushf
mov
dec
inc
mov
leave
jns
pop
ret
dec
mov
dec
test
lock
ret
loope
pop
push
cmp
pop
cmp
dec
add
es
test
lret
fiaddl
movsb
sbb
sub
loop
into
push
add
loope
cmp
mov
xchg
in
cltd
or
cmp
mov
insb
pop
enter
loop
add
cmp
jbe
mov
jp
xchg
inc
or
shrb
cmp
mov
jb
int
xchg
enter
mov
or
mov
pop
cwtl
test
jg
lods
clc
test
push
jge
std
pop
sub
push
dec
in
xchg
in
pusha
jnp
jmp
test
shrl
stc
fildl
in
in
test
rcl
cmc
dec
xchg
sub
xor
and
ret
mov
cmc
ret
in
add
leave
imul
not
std
aaa
enter
pop
add
cs
dec
daa
xor
xor
mov
jae
fisubl
pop
sbb
mov
jmp
test
mov
ja
outsb
lcall
or
inc
shlb
mov
test
sbb
lea
xchg
push
jl
test
inc
popf
mov
jge
ja
pop
hlt
lods
xchg
dec
xchg
jg
faddl
push
dec
cmpsl
les
cmpsl
into
enter
pop
or
cmp
icebp
in
popf
inc
mov
arpl
jecxz
into
mov
imul
das
dec
adc
test
mov
inc
jne
adc
out
les
mov
xor
push
in
lret
mov
fisubl
mov
mov
sbb
add
pushf
lcall
bound
pop
push
pop
test
roll
in
std
in
test
lret
xorb
sub
add
les
movsb
sbb
lds
test
jp
int3
xchg
dec
in
sbb
cmp
adc
inc
add
jl
mov
stos
inc
dec
test
push
les
dec
hlt
sub
sahf
xchg
shl
cmp
in
fisttpll
js
mov
xchg
cmpsl
jg
movsl
jmp
jmp
cwtl
into
mov
jl
sbb
repnz
pop
jecxz
shl
movsb
inc
fisubrs
and
cwtl
and
aas
test
call
pop
popa
and
ja
mov
fcmovnb
flds
push
loop
push
adc
shl
jae
cwtl
jle
rcll
sub
add
outsl
mov
enter
in
leave
iret
and
testb
int
pop
mov
loope
mov
lea
sub
in
pop
xor
or
mov
test
mov
xor
mov
test
lret
cld
inc
loopne
mov
test
lret
xor
mov
push
xchg
outsb
cmpsb
inc
dec
xchg
insb
test
out
add
inc
cmpsl
sub
jmp
aaa
push
test
mov
cmpsl
bound
inc
cld
movsl
lcall
adcl
icebp
fisubl
in
sahf
dec
arpl
cmp
mov
std
jno
test
and
andl
cmpsb
cwtl
test
jns
cld
push
popa
fdivr
and
stc
sbbb
das
int3
test
hlt
addl
into
lods
lret
aas
sbb
stc
jno
and
sbb
push
or
bound
xchg
jp
add
pushf
int3
xchg
into
int
mov
jb
mov
lcall
and
push
xor
ror
mov
ret
push
sub
test
ljmp
sub
inc
push
and
imul
out
adc
popf
bound
xchg
jnp
add
fnstsw
sub
and
mov
push
inc
in
sbb
cli
mov
xchg
add
aam
xor
inc
mov
push
and
adc
out
imul
jbe
test
cmp
sub
sbbl
and
jmp
outsl
mov
stos
mov
mov
or
cld
ja
mov
testl
xchg
mov
in
lea
add
xchg
in
xchg
xchg
subl
ret
in
test
dec
xor
test
cmp
lds
mov
xor
push
adc
mov
out
dec
xchg
mov
mov
add
inc
lods
jecxz
mov
xchg
test
dec
dec
mov
xlat
add
lods
jne
mov
icebp
out
in
or
mov
push
jecxz
cmc
lea
rorb
lods
cmp
int
bound
loopne
add
xchg
lods
dec
mov
push
pusha
xlat
add
or
dec
test
sub
pop
aad
cltd
aas
test
and
add
test
lcall
inc
xor
xchg
mov
or
outsb
adc
mov
pop
adc
add
loope
pop
fnstenv
test
fistps
pop
arpl
cli
xor
mov
mov
pop
stos
mov
movsl
rcrb
or
cmp
dec
in
and
cmp
in
test
test
in
daa
jb
xor
lods
jecxz
std
movsb
lret
mov
xchg
iret
mov
mov
das
or
push
test
fmul
rol
mov
movsb
push
popf
sbb
dec
sbb
aas
test
ss
cld
sub
movnti
ret
addl
fwait
movsl
testb
test
pop
pop
xchg
or
movsb
loop
enter
push
cmp
pop
test
xchg
lds
cmc
xor
rclb
test
loope
arpl
ja
and
outsb
mov
lret
pusha
sub
test
pop
jmp
jo
push
jbe
push
push
daa
mov
push
jp
hlt
repz
clc
dec
test
xchg
test
pop
mov
pop
pop
loope
cmc
sbb
jb
int
pop
sahf
push
inc
add
movsb
data16
test
pop
sbb
cmp
add
mov
clc
insl
js
inc
push
mov
sub
dec
sti
lcall
loope
test
sbb
outsb
and
arpl
push
inc
into
push
shrb
sub
scas
xchg
movmskps
dec
test
dec
sbb
in
mov
and
pop
les
ja
stc
sbbl
je
test
jmp
jnp
cmc
insl
jl
ja
dec
test
pop
xchg
stc
arpl
les
mov
test
into
aaa
loop
hlt
add
std
add
lods
and
mov
fwait
cltd
pop
sub
inc
jns
test
mov
xor
or
add
in
test
icebp
movsb
ds
push
xlat
sub
cmpsb
jecxz
test
mov
pop
inc
enter
test
sub
sbb
sbb
cmpsl
push
pop
test
adc
pop
test
lods
arpl
test
bound
sub
bound
dec
mov
aas
jo
mov
sti
lret
inc
or
ljmp
sub
in
in
aaa
cs
inc
mov
std
cmpsb
out
jne
push
mov
daa
or
leave
dec
cs
mov
mov
xchg
mov
sbb
jbe
adc
mov
arpl
mov
mov
fiaddl
scas
test
pop
inc
push
adc
sbb
xchg
ja
mov
dec
pop
inc
test
mov
in
movsl
push
arpl
cli
xchg
xor
arpl
aad
xchg
and
mov
stos
dec
jne
jl
or
test
popa
sub
sub
sbb
negb
xor
js
sbb
cmpl
and
pop
test
enter
push
in
test
ret
dec
xchg
xchg
addl
fistpl
sti
out
cmp
mov
cmp
addr16
pusha
mov
push
mov
movsl
out
loope
push
lds
cmc
xor
add
cmp
and
ds
sbb
divb
outsb
sbb
loopne
jbe
test
jno
stos
sub
fs
fwait
push
enter
sbb
fcmovb
jo
mov
ret
mov
lret
and
test
icebp
lds
repz
dec
or
int
push
push
iret
scas
cld
popa
arpl
cmp
mov
leave
test
cli
cmp
in
clc
xchg
sub
dec
test
pop
dec
xor
lea
movsb
add
cmp
cmpsb
test
les
stos
jne
add
sti
pop
loopne
adc
in
mov
pop
pop
or
iret
test
fnstcw
enter
js
rolb
insb
aad
in
repz
mov
dec
xor
mov
or
shll
push
jns
hlt
mov
mov
inc
sbb
mov
testb
push
test
jecxz
outsb
sbbb
lret
call
mov
mov
and
roll
fldenv
test
pop
loope
test
push
loop
push
sbb
push
test
add
inc
inc
push
shlb
ss
and
push
in
int3
sbb
cmc
in
pop
mov
adc
add
or
pusha
sub
push
loop
pusha
hlt
pop
jecxz
pop
add
sub
movsb
lcall
sbb
mov
test
mov
dec
dec
imul
out
in
push
pop
fidivl
sbbl
jmp
and
cmpsl
lods
int3
jmp
test
jp
mov
lret
sbb
pop
inc
out
push
int
mov
mov
out
es
dec
pop
fldl
test
dec
mov
mov
clc
lcall
movsl
sbb
icebp
sub
cmc
and
test
out
neg
test
mov
inc
and
icebp
or
cltd
add
mov
stos
fimull
ret
pop
cmp
and
sbb
arpl
mov
imul
push
push
mov
or
mov
lret
push
ljmp
adc
and
ss
dec
call
jno
fstl
rcrl
sub
dec
push
mov
lahf
mov
sub
test
leave
and
pop
fstpt
mov
cmp
inc
and
sub
aas
push
pop
clc
adc
arpl
and
je
decl
lcall
mov
add
dec
or
outsl
or
fs
adc
test
and
mov
rcrl
pop
clc
in
test
mov
mov
test
mov
andb
or
sub
xlat
sub
mov
test
inc
out
add
fs
movsl
test
inc
mov
bound
xor
and
push
shll
rcll
or
movsb
lds
push
cmp
es
or
inc
imul
lcall
pusha
xchg
mov
cmp
sub
xchg
cmp
clc
cmc
lods
push
mov
lret
xchg
mov
test
sub
faddl
xlat
adc
inc
push
push
insb
dec
pop
mov
lock
sbb
pop
xchg
int
mov
or
bound
test
xchg
shll
xchg
insb
pusha
data16
sbb
test
and
les
popl
clc
mov
ror
inc
xlat
sahf
sbb
mov
sbb
push
out
fs
test
das
dec
pop
arpl
cmp
in
mov
pop
loopne
or
sub
loop
inc
inc
outsl
push
loope
lods
movsl
inc
pop
jno
mov
push
sbb
test
sub
sti
lods
push
mov
mov
xchg
icebp
mov
mov
test
push
cmp
mov
jmp
mov
mov
popa
xor
sahf
jb
mov
mov
push
or
repnz
inc
mov
cmp
into
xor
cmp
in
out
inc
xor
mov
mov
jg
or
call
outsb
dec
arpl
inc
push
mov
add
js
lods
lods
sbbl
test
loope
cmp
push
test
sub
sbb
mov
xchg
test
arpl
sub
int
test
mov
test
sbb
push
loope
fxtract
mov
movsb
les
or
jmp
jmp
add
mov
pop
pusha
shl
mov
or
mov
dec
lcall
pushf
jecxz
and
inc
test
push
cmovo
fs
add
mov
inc
cli
loopne
test
stos
jnp
hlt
scas
test
or
push
out
jae
xchg
mov
cmpsb
stc
arpl
sub
adc
test
out
inc
ja
fildl
lahf
data16
stos
push
mov
imul
mov
inc
mov
inc
dec
mov
daa
mov
dec
lods
xor
arpl
mov
in
mov
add
jmp
xlat
push
sbb
adc
out
cld
rcrl
in
lock
stos
fisubrs
dec
test
lahf
fisttpl
inc
fidivl
inc
mov
icebp
imul
add
ja
mov
test
pop
loop
test
std
push
call
test
ss
adc
jge
mov
push
in
ja
test
sbb
mov
call
sbb
notb
xchg
jns
mov
mov
push
cmp
insb
loopne
aas
lcall
cmp
sub
adc
inc
fnstcw
test
movsb
pop
pop
dec
mov
adc
mov
dec
insb
orb
sub
lret
in
addr16
fisubrl
add
sbb
and
xchg
fidivrl
jns
test
dec
imul
test
xchg
add
test
push
leave
outsb
xchg
std
in
and
fldz
out
inc
jnp
mov
test
cmp
cmp
and
inc
xchg
mov
call
cmp
out
jecxz
pusha
sub
test
xchg
in
shlb
push
xchg
cmp
arpl
rep
jge
mov
clc
mov
jnp
xor
inc
mov
inc
in
or
pop
sub
push
add
jmp
sub
test
jbe
cmc
rorb
dec
fistl
mov
ficompl
push
mulb
xor
lods
jbe
adc
fwait
test
dec
in
push
shr
test
in
xchg
cmp
outsb
dec
sarl
mov
cs
lret
sbb
inc
or
test
mov
pop
pop
imul
push
cwtl
in
in
orb
or
fsubr
lret
push
jo
test
test
push
das
jmp
hlt
push
or
adc
in
out
sti
push
xlat
test
inc
xor
jecxz
or
sbb
mov
mov
cmp
mov
ret
add
test
or
sbb
movsl
orl
cli
in
subb
lods
fldcw
adc
leave
sub
push
push
dec
mov
mov
daa
movsl
movsb
das
cmp
test
and
jmp
mov
sbb
fnsave
lahf
inc
ja
inc
cmc
xor
dec
pushf
dec
fldenv
out
addr16
imul
out
mov
aam
mov
mov
cwtl
cmp
lods
movsb
or
stc
and
loope
pushf
mul
das
dec
es
shlb
mov
pop
cmp
xchg
jnp
test
ds
insl
arpl
pop
pop
inc
cmp
xchg
cmp
sbb
jb
or
mov
mov
das
sbb
jo
adc
mov
fildl
jp
dec
inc
or
test
js
popa
or
ja
not
out
xor
cmp
test
in
inc
ss
aaa
mov
cmpsb
into
inc
and
testl
add
in
in
mov
movsb
iret
into
aad
mov
adc
mov
test
int
movl
cs
xlat
adc
mov
test
call
dec
xor
orb
call
sub
and
sbb
mov
les
jmp
test
sahf
mov
fwait
testl
adcl
cmc
jge
cmovae
sub
mov
mov
push
ret
sahf
mov
movsl
mov
adc
adc
fcoml
cli
mov
test
xor
cwtl
adc
mov
push
sub
enter
inc
pop
daa
and
adc
add
mov
mov
les
aas
fildl
int
test
push
sub
loopne
mov
ret
aaa
xor
xchg
fisttps
xchg
bound
mov
pop
xchg
sahf
mov
in
enter
testb
or
mov
in
in
and
mov
cmc
ljmp
xchg
adcb
adc
dec
lock
jns
cli
idivb
ret
dec
popa
mov
cmp
test
fsubrs
sub
stos
adc
cmp
lret
ja
shll
imul
sahf
out
inc
ret
mov
mov
cmp
and
push
mov
inc
out
into
dec
mov
sbb
mov
scas
jecxz
inc
fwait
adc
test
dec
and
into
and
test
loopne
cwtl
shll
pusha
push
cmp
add
out
mov
stos
inc
add
and
shll
test
push
clc
xchg
test
or
or
mov
icebp
lret
sub
leave
pop
bound
test
test
fildll
test
cmp
lds
xchg
and
outsb
xor
fidivl
mov
test
cmp
xor
mov
mov
ljmp
mov
dec
adc
mov
dec
fldenv
cmp
dec
mov
test
enter
or
add
lock
dec
jge
movsb
add
daa
sti
pop
test
sub
cwtl
add
ds
je
hlt
and
inc
dec
mov
data16
inc
mov
arpl
adc
lock
mov
pushf
xchg
mov
mov
bound
add
leave
lods
lcall
movsb
jle
add
test
jp
push
mov
test
sbb
mov
movsb
dec
cli
sub
dec
adc
mov
add
push
test
pop
mov
les
and
test
push
sub
fstl
mov
test
push
loop
adcl
insb
sub
rclb
test
into
and
pop
out
movsl
or
push
adc
arpl
subb
dec
movsb
or
daa
sar
mov
jge
mov
pop
dec
xchg
sub
xor
xchg
movb
add
fisubs
aas
iret
test
cmp
or
loope
add
std
stos
mov
ret
mov
in
sbb
cmpsl
outsb
xor
fcomi
and
cltd
bound
jge
push
dec
jecxz
mov
movsl
ret
push
loopne
movsl
popf
daa
test
dec
or
in
mov
ds
in
jecxz
stos
or
test
mov
sbb
cwtl
fsts
test
daa
into
xlat
int
fldl
jo
in
push
xor
mov
cltd
jl
and
mov
pop
push
shll
cmp
mov
stos
int3
aas
pop
sub
in
mov
test
push
adc
test
inc
mov
adc
jmp
int
test
inc
test
loop
fsubrp
xor
dec
jbe
not
hlt
in
scas
mov
dec
or
lods
sub
lret
mov
arpl
mov
imul
push
sub
cmpsb
mov
sub
mov
dec
test
jle
bound
ret
arpl
mov
sub
and
xchg
inc
xchg
inc
fwait
jmp
loopne
loop
dec
sub
jmp
cmp
outsl
test
and
add
mov
cmp
in
inc
call
push
bound
dec
testb
dec
or
push
adc
stc
icebp
jne
dec
mov
or
dec
push
cmpsl
inc
inc
pop
push
test
loope
or
lods
in
test
inc
adc
adc
mov
mov
hlt
test
mov
test
adc
fsubs
mov
push
lret
test
cmp
js
sbb
cmp
lcall
mov
cwtl
pusha
mov
out
test
jbe
and
jmp
int
mov
popa
cmp
add
icebp
test
cmp
jnp
xor
mov
jmp
mov
daa
ja
test
or
rcl
cltd
mov
dec
cmpsl
jne
movsb
stos
xchg
fdivrs
decb
pop
out
xlat
jecxz
arpl
test
and
mov
mov
les
push
jg
add
testb
push
les
mov
mov
pop
loope
leave
out
pop
scas
xchg
std
add
add
jb
test
dec
insb
cmpsb
dec
rorb
xchg
sbb
jg
test
mov
leave
ja
sbb
test
movsb
jp
test
xchg
xor
test
sbb
test
cmp
cli
lock
and
mov
push
mov
mov
xchg
pop
lods
out
lcall
xor
add
adc
xchg
push
xor
lods
test
push
in
std
je
jge
mov
mov
mov
stos
insb
rcr
inc
lret
test
mov
in
sub
test
jno
scas
test
jmp
in
sub
inc
mov
test
fsubr
xchg
inc
shrb
mov
movsl
out
test
out
mov
enter
test
hlt
or
and
test
mov
fwait
mov
push
xchg
xchg
mov
test
cli
dec
in
mov
add
mov
and
dec
in
jg
jl
in
in
les
lret
out
add
cwtl
dec
xor
mov
sbb
scas
mov
xchg
pop
pop
orb
rcrb
fdivrl
pop
popf
push
or
push
movsl
and
test
loope
arpl
or
push
jnp
mov
stos
call
cmp
ret
dec
shl
xchg
aad
out
jle
mov
or
add
dec
test
mov
icebp
movsl
addb
fbld
hlt
shll
movsl
movsl
ss
sub
xor
xchg
mov
ficomps
pusha
or
stos
jno
insl
or
cli
es
dec
shl
mov
test
push
gs
test
dec
js
jb
inc
int3
movsb
dec
or
out
adc
push
mov
das
add
dec
roll
test
push
mov
cmp
push
pop
in
test
inc
loope
xchg
inc
pop
cmp
shrl
and
test
adc
icebp
sub
shrl
in
mov
arpl
mov
xchg
inc
test
xchg
fimull
test
mov
cmpb
stos
loop
mov
test
add
mov
ret
cmp
jnp
jmp
pusha
mov
sti
mov
mov
jne
and
test
mov
jmp
sti
push
push
adc
inc
int3
rorl
fst
movsb
mov
pop
leave
insb
mov
cmpsb
jbe
dec
pop
push
cwtl
lcall
clc
ds
inc
xchg
inc
or
mov
inc
push
pop
inc
data16
outsb
cmp
push
test
xchg
jnp
sub
lahf
sbb
jo
mov
ret
adc
push
dec
test
inc
sbb
pop
pop
mov
sbb
dec
or
test
sbb
dec
xchg
mov
bound
idivl
sub
push
sbb
fisubs
test
aam
test
sub
xchg
cmp
loope
lret
fwait
mov
arpl
sub
cmp
fldl
push
mov
int
xlat
inc
out
dec
sbb
test
arpl
mov
dec
or
stc
xor
inc
pop
push
test
js
pop
mov
fwait
test
idivb
jb
stc
mov
cltd
pop
pop
stos
in
out
sub
lret
add
test
adc
mov
out
out
in
inc
mov
xchg
mov
test
inc
jbe
es
sub
pop
dec
fiaddl
leave
cs
test
dec
and
std
cwtl
mov
in
jmp
mov
inc
and
test
cli
mov
mov
in
dec
xchg
mov
mov
ret
or
stos
mov
test
test
dec
jg
inc
pop
dec
mov
jecxz
fdiv
in
xor
mov
loop
filds
lcall
pop
rcr
mov
test
jmp
jb
pop
bound
inc
jle
jnp
movsb
inc
ja
xchg
xor
and
and
xchg
in
xchg
int
addl
jg
dec
movsb
fiaddl
push
loop
lods
rcll
addr16
daa
outsb
lcall
cmpsl
lcall
movsb
mov
lret
push
arpl
and
mov
lcall
int
dec
hlt
push
push
pop
cmc
jbe
dec
sbb
lret
test
sub
cltd
loopne
push
in
push
enter
jle
xchg
adc
leave
pusha
push
cwtl
data16
lods
dec
cmpsl
jecxz
mov
dec
negb
mov
test
jne
in
add
xchg
stos
idiv
out
test
dec
push
je
sub
in
ljmp
push
sub
cmp
lock
lret
scas
test
lea
test
xchg
and
mov
jg
dec
sub
mov
js
jge
inc
sub
lds
andps
xchg
adc
test
lcall
in
stc
push
xchg
or
mov
adc
enter
pop
cmpsl
jle
addl
into
fxch
mov
enter
jmp
cmp
ljmp
push
and
test
outsb
pop
test
dec
add
dec
lret
les
mov
pop
pop
enter
in
in
leave
pushf
pop
cmp
or
lcall
cli
insb
bound
pop
or
nop
and
sub
push
call
lret
je
leave
or
sar
and
movsb
xchg
ja
scas
dec
cmp
in
dec
mov
mov
jb
mov
les
in
outsw
in
arpl
or
out
or
icebp
loop
lds
jmp
rclb
push
daa
xchg
out
movsb
mov
leave
sbb
into
sbb
stos
adc
adc
adc
movsl
mov
sar
push
push
mov
sub
mov
xchg
or
cmp
dec
andb
mov
test
pop
xchg
andl
xchg
lret
mov
pushf
xchg
stc
push
adc
push
cwtl
test
jg
addb
lret
push
clc
inc
imul
jmp
scas
mov
inc
adc
clc
mov
sub
out
fs
or
jl
bound
pop
movb
mulb
xor
mov
push
test
xchg
in
mov
sbb
inc
push
mov
and
test
fdivs
ficoms
test
dec
imul
sbb
sbb
test
push
or
xor
or
mov
adc
cmpsl
xor
xchg
andb
cmp
jle
test
push
mov
in
arpl
scas
sub
int
xor
add
and
mov
shrl
test
sub
inc
push
test
lds
mov
sbb
inc
test
lcall
fdivs
add
push
inc
cmp
sahf
not
test
dec
sbb
test
ficompl
push
fstl
iret
push
test
imul
test
xchg
adc
mov
test
add
add
push
scas
movsb
mov
outsb
pop
mov
adc
mov
mov
test
dec
jmp
push
cli
icebp
imul
mov
mov
push
test
lahf
xchg
lock
mov
sub
pop
dec
mov
push
add
cli
xor
push
lea
data16
fwait
mov
dec
scas
roll
nop
lret
fincstp
cmpsl
pop
mov
lcall
pop
arpl
movl
mull
mov
mov
ficoml
push
leave
or
rdtsc
sbbb
stos
aaa
filds
cmp
jne
mov
andl
inc
bound
pop
aam
sti
mov
push
test
hlt
int3
mov
test
adc
in
lods
scas
and
xchg
int
mov
jmp
testl
out
pop
repnz
xchg
test
jecxz
cmc
int
cltd
test
xchg
addr16
push
arpl
pop
sbb
mov
add
adc
mov
test
int
add
dec
popf
test
movsl
mov
cmpsl
dec
and
cmp
mov
rclb
in
ds
test
out
call
test
jp
dec
adc
lret
aad
push
in
dec
cli
imulb
or
in
jae
cmpsl
out
bound
cltd
mov
cmpb
mov
popa
mov
sub
fcmovnu
pop
test
hlt
daa
fadd
in
mov
cmp
test
pop
xchg
xor
test
adc
in
test
sub
cli
sub
test
rclb
test
or
sub
xor
repz
lret
push
dec
movsb
shll
call
cmp
movb
add
test
push
stos
das
test
cli
cmc
push
add
test
call
or
fnstenv
sbb
push
enter
xchg
push
imul
dec
int
in
in
fs
cmpsl
mov
stc
jae
sbb
mov
lcall
lahf
pop
filds
mov
sub
or
inc
mov
les
jp
jns
inc
mov
scas
out
sub
pushf
shlb
dec
mov
pop
shl
mov
inc
jle
cs
push
inc
sub
xorb
sbb
call
mov
rcr
mov
leave
inc
push
xchg
dec
testb
call
pusha
xchg
mov
aaa
rclb
jl
bound
test
inc
or
sub
push
cmp
out
bound
jnp
pushf
xchg
out
sub
test
stos
mov
ja
test
jmp
data16
icebp
cmp
testl
mov
xor
mov
loop
daa
lds
int3
ret
mov
outsl
or
jb
dec
lds
test
cmp
dec
test
lcall
rclb
sbb
inc
and
xchg
sbb
shrb
in
dec
aaa
and
fildl
cmp
lret
jb
mov
gs
pop
and
cmp
imul
into
clc
or
xor
mov
mov
scas
push
int
dec
shr
in
mov
lds
es
xchg
xchg
leave
lea
and
sub
cli
leave
lcall
push
mov
push
clc
daa
adc
fadds
sub
mov
movsl
jle
xchg
in
clc
movsb
mov
mov
lcall
repnz
test
bound
cwtl
fisubl
lea
jmp
mov
mov
icebp
test
add
fldl
or
imul
movsb
cmpsl
push
push
movsb
clc
add
pop
jae
dec
mov
dec
arpl
add
xlat
mov
xchg
xchg
push
int3
orb
js
cwtl
mov
inc
xlat
test
lcall
lret
gs
add
pop
add
bound
insl
jge
dec
into
test
out
pop
or
sbb
inc
sub
mov
and
mov
dec
lret
ret
cmpb
imul
std
test
lds
ss
push
negb
and
adc
nop
out
push
cmpsb
mov
dec
notb
push
pushf
xor
hlt
dec
mov
xchg
or
cmp
into
cmp
stc
mov
mov
shl
push
or
sti
out
bound
mov
inc
xchg
test
loop
xor
cmp
xlat
arpl
mov
in
loope
icebp
fnstenv
mov
mov
mov
mov
jmp
adc
and
das
aas
lods
mov
mov
test
stc
lds
insb
pusha
xlat
mov
test
imul
leave
cmp
data16
cltd
int3
mov
test
push
dec
sub
test
jge
lds
sahf
jle
int
or
in
test
cmp
cltd
add
dec
and
fadd
mov
jecxz
adc
or
enter
lods
inc
sti
movsb
cmp
pop
dec
bswap
daa
and
clc
arpl
mov
mov
push
mov
test
add
pop
sbb
out
test
push
jae
test
daa
or
imul
enter
lods
fimull
sub
push
testl
fcmovne
imul
mov
mov
test
out
jg,pn
les
jp
add
xor
divl
call
fistl
add
ret
push
insb
scas
pop
test
mov
jo
push
bound
mov
jle
test
je
jmp
dec
ret
jp
sarl
fwait
test
push
jnp
test
jmp
push
push
sbb
and
leave
sub
xor
jne
test
insb
repnz
sbb
sub
arpl
lret
cwtl
sub
jecxz
mov
cmp
push
mov
mov
push
loopne
jmp
movsl
bnd
jmp
test
dec
call
bound
adc
xchg
jmp
pop
dec
ficompl
aam
xor
movsl
aas
xchg
inc
dec
adc
sbb
dec
jne
mov
fiadds
pop
or
test
dec
mov
mov
sbb
pusha
out
neg
mov
sbb
xchg
inc
pop
ret
mov
scas
movsl
arpl
or
sub
stc
pop
shl
mov
pop
and
add
inc
mov
mov
leave
xchg
adcl
mov
pop
push
cli
lahf
dec
xchg
cld
hlt
jmp
xchg
cmp
stos
xlat
xor
ret
lret
loop
sbb
mov
lret
rcll
lret
out
mov
or
bound
test
loop
dec
and
in
div
test
enter
sbb
ret
cmp
loop
sbb
or
mov
sub
xchg
test
pop
dec
mulb
and
lods
mov
sbb
loop
xchg
add
xor
sub
mov
dec
imul
movsl
leave
add
and
movb
arpl
jno
jnp
sahf
cmp
and
ss
mov
movsl
ret
les
cmc
mov
test
jmp
xor
test
jnp
into
lahf
int3
popf
inc
cmpsb
xchg
test
xor
sub
xchg
int3
pushf
cli
movsl
mulb
mov
push
jo
test
jbe
xchg
jp
les
mov
jge
xchg
outsl
push
mov
test
mov
dec
test
loop
movsl
movsb
out
loopne
adc
dec
pop
roll
mov
jmp
test
sub
xor
aaa
xchg
push
or
mov
arpl
in
mov
cmp
lods
sub
lahf
test
push
decl
add
jl
push
mov
rorl
xchg
sahf
mov
sbb
stc
test
data16
leave
jge
testl
lea
xchg
ss
dec
mov
mov
es
jecxz
sti
sbb
pop
std
adc
lret
push
sarb
cmpsl
cmp
mul
test
jnp
or
bound
ja
in
fstp
test
pop
dec
or
mov
nop
test
dec
test
inc
pop
push
shrl
sbb
mov
stos
add
xor
dec
mov
mov
in
arpl
mov
sbb
jo
jmp
add
popa
cmp
pop
hlt
jge
mov
int
fcmovnbe
jmp
scas
adc
std
sarb
fisubrl
jns
and
test
fwait
push
test
mov
stc
test
insb
loopne
pushf
mov
lds
mov
les
xchg
addb
xchg
arpl
add
test
xchg
insb
sbb
int3
in
mov
dec
push
mov
lcall
repnz
das
jae
scas
mov
imull
clc
lock
shll
std
jp
movsl
mov
mov
test
rorl
cmp
bound
dec
xor
dec
inc
loop
sbb
fnsetpm(287
lods
add
or
imul
mov
dec
sub
adc
inc
push
or
cmp
ds
testl
je
dec
mov
jbe
ss
cmpsl
push
dec
xor
test
cltd
jmp
sbb
or
mov
jb
into
push
push
mov
push
jmp
xchg
out
mov
imul
in
push
inc
shll
movb
pusha
mov
dec
mov
jge
lret
imulb
push
in
stc
adc
cltd
test
stos
fadds
add
pusha
lea
jecxz
out
push
test
xor
cld
test
cmp
xor
js
dec
and
sub
lret
jg
lret
test
insl
mov
loope
ja
outsl
int
pop
xor
or
xchg
dec
scas
int
inc
or
pop
out
scas
push
mov
xor
lret
lcall
push
pop
repz
repnz
mov
leave
outsb
and
lret
sub
test
mov
xchg
adc
sbb
pop
aaa
test
addr16
test
cld
lods
pop
in
jg
mov
xor
in
test
push
push
test
mov
jne
pop
cmc
testb
ret
mov
pop
sub
stos
push
push
int3
push
lcall
roll
inc
test
sbb
xchg
cltd
int3
cmp
leave
jmp
lret
mov
fwait
mov
test
mov
lods
cltd
mov
xlat
aas
pusha
sub
lea
test
stos
mov
orb
push
and
dec
mov
jmp
xchg
mov
or
insb
rolb
inc
xchg
add
ja
xor
mov
cli
loopne
add
pusha
ret
mov
sbb
pop
jbe
test
jo
gs
pop
dec
lods
fsubrs
sbb
out
fcoml
movsb
cld
in
aaa
inc
mov
push
test
cwtl
subb
fstpl
add
sub
mov
or
dec
out
lds
incl
jp
test
in
bound
add
mov
mov
stos
and
fsubrs
inc
add
pop
cmp
bound
movsb
xchg
jl
sbb
adc
inc
jp
das
mul
xor
test
adc
jp
test
mov
ljmp
dec
cwtl
mov
test
xlat
in
rorb
addb
add
xchg
in
mov
mov
cwtl
test
pusha
test
push
and
mov
popa
rolb
sbb
jmp
inc
mov
pop
ret
divb
ret
test
movsl
lcall
or
negb
dec
bound
xor
ret
lods
sub
in
xchg
lcall
pop
sarl
add
int
jbe
outsl
arpl
mov
jnp
std
xchg
stos
clc
mov
pop
push
inc
in
test
xchg
xchg
test
loopne
cmc
push
mov
aad
xchg
mov
out
movsb
arpl
out
call
loope
mov
lret
adc
cmp
into
je
insl
dec
xchg
int
enter
mov
xchg
mov
sbb
mov
and
lcall
in
cmp
pop
or
cmc
test
sbb
cmp
add
icebp
lods
movsl
xor
inc
in
shrb
and
call
push
mov
xchg
stos
insl
in
into
hlt
and
stc
and
jge
sub
mov
ffree
cmp
shl
inc
mov
mov
cmpsl
je
test
sbb
mov
mov
mov
ja
sbb
int
test
pushf
in
and
jecxz
sub
scas
pop
mov
test
cltd
xchg
mov
shl
or
xchg
sbb
clc
lcall
and
adc
lahf
xchg
push
or
test
add
xor
inc
sbb
sub
xchg
test
push
jle
xchg
addr16
das
arpl
test
adcl
mov
hlt
test
mov
adc
pusha
test
les
jecxz
loop
hlt
mov
xor
dec
push
xlat
movsl
jp
cmp
inc
pop
stos
adc
sub
movsb
ljmp
xchg
xchg
icebp
cltd
dec
fstp
les
sub
sub
test
sub
ret
in
je
arpl
fs
ret
pop
mov
int
test
push
and
xchg
jmp
nop
call
add
and
mov
or
jl
xchg
jno
mov
stos
push
or
orb
mov
jbe
pushl
lds
ss
xchg
or
dec
pusha
jns
mov
or
je
test
mov
jg
dec
and
mov
pop
inc
sub
int3
adc
ret
push
popf
cltd
movsb
dec
sarb
pop
test
and
cmc
jp
dec
push
leave
jne
mov
pusha
adc
or
inc
divb
adc
push
mull
mov
pop
mov
inc
jg
nop
mov
inc
iret
or
test
int3
dec
scas
test
cs
ret
test
cmp
std
test
mov
and
clc
ret
pushf
push
dec
mov
xchg
shll
arpl
push
cmp
jmp
imul
or
inc
xor
pop
movsb
mov
xchg
add
mov
sub
lds
push
lods
scas
call
pop
mov
push
test
cmp
mov
lds
movsb
pop
mov
testl
pushw
in
add
pop
fistps
dec
outsl
mov
fcompl
clc
xchg
fwait
insb
mov
xchg
dec
test
sbb
cmpsl
sbb
test
lcall
test
mov
xchg
pop
mov
out
clc
mov
in
mov
int
mov
addb
mov
int
cmpsb
test
mov
cwtl
popa
test
dec
lds
out
test
lods
icebp
sub
out
cmpsb
mov
addr16
std
stos
lock
in
jmp
fmull
dec
jmp
sbb
test
shr
pop
les
mov
das
out
dec
mov
xchg
scas
and
ss
sub
inc
pushf
pop
push
mov
xor
test
dec
pminsw
jb
sub
lret
dec
jge
iret
rcr
xor
cmp
jns
imul
ret
push
into
icebp
jmp
pop
test
mov
push
movsb
das
push
xor
and
pop
movsb
daa
lcall
mov
int
xchg
out
push
sub
sbb
cmp
arpl
xchg
or
mov
jmp
roll
ds
xchg
testb
ret
xlat
js
mov
cmp
sub
xchg
or
loop
mov
pop
loop
or
in
sbbl
cltd
out
mov
jb
jmp
or
inc
and
xchg
stos
out
push
testb
cmc
xchg
arpl
xor
sub
dec
dec
mov
repz
lret
and
mov
call
loop
dec
js
jmp
and
ja
bound
sarl
ljmp
imul
call
mov
aaa
and
imul
cmpsb
jns
movsb
lds
data16
dec
test
jb
mov
or
insl
les
dec
xor
cltd
push
dec
pop
rcl
ret
lcall
mov
test
dec
hlt
push
test
mov
inc
or
scas
test
out
repnz
aam
sub
test
jecxz
out
adc
cmp
fildl
cmpsl
or
inc
divb
ret
xor
out
inc
sub
and
adcl
cmpsb
outsb
push
lds
add
cmp
sub
into
test
xchg
ret
jnp
test
jp
aam
fwait
push
push
stos
aam
call
movsl
fnstenv
inc
cs
inc
mov
in
mov
mov
call
mov
test
lock
jno
ds
in
cmp
lea
into
xchg
pushf
pop
cli
lea
test
dec
test
ret
aas
jmp
aam
add
int3
mov
mov
fwait
xchg
imul
dec
pop
cmp
test
or
inc
cmp
leave
cmp
test
dec
mov
repz
push
cmp
mov
testb
adc
mov
ss
adc
ret
sbb
sbb
test
test
fcompl
int3
or
in
push
jo
sub
mov
dec
dec
es
lcall
push
or
mov
inc
test
leave
jb
nop
out
lahf
in
xchg
mov
dec
movsl
hlt
xlat
test
in
cwtl
dec
push
pop
test
mov
ret
xor
popa
inc
test
ret
xor
push
mov
cmp
pop
lds
loop
jle
xor
mov
fsubrs
lret
mov
out
enter
xchg
test
sub
push
popa
icebp
jbe
or
pop
test
out
rorb
lds
adc
push
jmp
inc
lret
loop
mov
inc
ficoml
dec
pop
int
sbb
inc
push
mov
out
js
mov
in
mov
mov
fisubl
lahf
nop
popf
leave
test
cmp
mov
test
cli
push
fcmovnbe
cmp
test
pushf
dec
loop
xor
mov
idivb
dec
dec
jno
rcrb
mov
push
mov
test
sahf
push
xchg
je
and
adc
push
or
jb
clc
push
dec
movsl
mov
scas
and
xchg
mov
push
mov
test
fistps
push
in
test
lret
add
sub
pop
add
movsb
adc
imul
loope
sbb
sbb
push
pusha
sub
sbb
scas
pushf
push
jge
sub
add
and
aas
sbb
iret
mov
pop
push
test
mov
js
push
cld
test
outsb
icebp
jle
faddp
pusha
push
xchg
mov
inc
aas
pop
loopne
pop
lahf
je
cmp
xchg
or
pop
xchg
jge
mov
mov
cmp
js
das
test
mov
jg
jecxz
mov
cltd
push
scas
addr16
xchg
scas
cmc
pop
leave
out
lret
stc
lcall
test
mov
cmpl
das
addr16
int3
sub
mov
or
and
test
scas
sbb
test
test
pop
inc
sbb
fsub
add
movsb
jns
add
jae
add
loopne
mov
cli
and
adc
sahf
lds
test
add
inc
adc
push
test
es
jbe
or
dec
test
sub
into
test
jno
test
cmpb
add
pop
sub
idivb
arpl
push
or
and
test
pop
inc
push
test
pop
lds
stc
sti
in
arpl
test
adc
push
movsb
out
mov
mov
loop
loopne
sub
bound
inc
mov
mov
cld
cmp
aad
mov
rcll
fstpt
and
inc
pop
mov
or
notb
inc
ljmp
mov
sub
jmp
test
push
int3
lcall
inc
mov
enter
fiadds
jno
mov
std
ds
jmp
xchg
adc
sbb
pushf
mov
test
inc
cld
je
test
pop
lods
cmpsb
icebp
mov
test
jmp
sub
mov
into
mov
cmp
sahf
icebp
and
cmp
mov
movsb
xchg
pop
mov
imul
test
flds
jbe
aad
sbb
xchg
lea
push
inc
push
int3
in
and
ja
dec
cmpsl
push
mov
test
sub
adc
out
pop
xor
adc
test
xchg
pop
sub
dec
jb
test
sbb
jmp
test
lahf
xor
dec
aad
test
fs
or
xor
test
loopne
mov
inc
sti
pusha
mov
push
mov
jne
xor
mov
in
jle
lcall
popa
pop
in
loop
xor
test
inc
lds
mov
jns
pop
not
fwait
or
insl
push
lods
outsb
add
push
push
sbb
test
cmp
inc
cli
enter
jb
aad
xchg
lret
push
sahf
repnz
in
cli
mov
mov
sub
mov
add
dec
mov
test
leave
in
lods
pop
shlb
je
fcmovb
insl
cli
sub
mov
jecxz
fwait
lahf
mov
jecxz
lods
jns
test
dec
pop
adc
cli
mov
cld
dec
add
fidivs
push
clc
shlb
push
std
mov
sti
test
xor
dec
mov
les
leave
icebp
outsb
shlb
and
cmp
fnsave
dec
outsl
bound
cmpsb
adc
mov
daa
xchg
mov
pop
stc
sbb
lock
mov
and
sub
mov
adc
insl
movsb
fildl
pop
jae
mov
cmp
test
ret
mov
jne
xor
test
jecxz
loope
popa
in
add
incl
mov
xlat
movsb
pop
adc
int
shll
out
cwtl
dec
stos
xchg
mov
add
outsl
clc
mov
mov
fcmovnbe
mov
aam
push
mov
dec
pop
test
push
push
jmp
test
jp
test
hlt
fwait
or
cmp
and
mov
xchg
mov
mov
into
inc
mov
pop
negb
dec
pop
xlat
test
push
cmp
push
inc
cmp
inc
in
sbb
mov
ficoms
sub
test
jns
ret
dec
arpl
sbb
mov
leave
cmp
mov
jg
mov
mov
sar
adc
test
pop
add
into
or
movsl
push
mov
jae
xchg
cmc
in
int
arpl
test
sbb
cmp
negb
cmp
in
test
out
sahf
in
ret
out
int3
test
xchg
sub
mov
arpl
loopne
mov
fadds
test
jae
inc
sub
push
xor
xchg
mov
out
test
xchg
fnsave
cmp
test
jle
xor
test
enter
inc
mov
ljmp
lods
addr16
push
sbb
push
mov
xor
push
mov
mov
xchg
cld
fstps
jecxz
scas
test
push
xchg
out
test
mov
es
scas
push
sub
test
jge
leave
lcall
cli
push
mov
test
push
xchg
mov
xchg
pop
lret
insb
push
adc
and
jl
mov
pusha
inc
lds
pop
test
and
mov
push
test
lods
cmp
pop
daa
flds
sub
dec
mov
inc
pop
mov
int3
mov
jns
cmpsl
sbb
xchg
xchg
mov
andb
cld
lcall
es
ficoml
sbb
andb
scas
cmpsb
mov
int
and
pusha
mov
pushf
jbe
loope
out
fiaddl
divb
pusha
shrb
xchg
or
adc
aad
sub
mov
loop
lret
bound
sahf
leave
in
xchg
enter
cmpsb
je
hlt
arpl
mov
cmp
jecxz
fnstsw
test
push
mov
test
sahf
pop
pushf
adc
cld
push
pop
xchg
mov
fsubrl
test
pop
mov
leave
dec
mov
ret
add
inc
cmp
xchg
clc
jns
or
jmp
dec
test
out
sub
out
loopne
xchg
mov
bound
arpl
test
mov
cwtl
rcrl
sti
lds
test
dec
cs
dec
stos
jno
rorl
pushf
sub
add
push
aaa
test
sub
or
adc
divb
dec
dec
test
fidivrl
cmp
dec
insb
test
push
lods
dec
mov
orb
test
outsb
sub
and
xchg
test
jecxz
sub
test
mov
aas
pushf
imul
sbb
scas
lcall
arpl
mov
lods
enter
js
xchg
cmp
pop
sub
ds
mov
push
inc
arpl
mov
xchg
inc
call
xchg
mov
jo
cmp
sub
adc
mov
call
cltd
addr16
jns
push
test
in
cmp
test
pop
adc
fstps
test
xor
gs
pop
pop
mov
mov
les
aam
ret
test
loopne
int
fldenv
and
leave
add
lock
incb
jecxz
sub
int3
sti
gs
jbe
les
or
jno
shrl
loope
test
pushf
xor
add
dec
xchg
test
cmp
bound
jp
ja
push
cmpsb
test
outsl
std
sti
sub
jns
mov
xor
lods
lcall
je
xor
add
jno
scas
xor
and
lds
inc
movsb
jle
push
repz
fs
cmp
cs
inc
sbb
shlb
test
and
jp
jb
pop
lods
aaa
or
cmp
dec
dec
pop
and
pusha
inc
addl
int3
daa
cmp
test
andb
inc
dec
mul
cld
pop
mov
ds
testb
xchg
les
ja
jno
push
cmpsb
lret
mov
iret
test
inc
dec
out
mov
and
mov
je
push
test
and
inc
push
cmp
xor
ret
test
push
dec
incb
cmp
aad
jle
clc
sahf
mov
mov
mov
arpl
clc
pop
rol
mov
ficompl
cmpsl
loop
pop
movsl
xchg
dec
fs
push
cmpb
sbb
lods
push
lds
fwait
test
imul
andl
lock
test
pop
pusha
fs
cmovnp
mov
push
negb
enter
mov
aas
sub
out
ficoml
xor
loop
inc
jle
test
nop
movsb
mov
pop
lock
dec
dec
es
incl
mov
and
aaa
test
adc
test
movsl
push
or
scas
inc
jle
sub
dec
xlat
fwait
mov
push
std
repnz
loop
lea
into
test
loope
fstpl
stos
push
in
ror
test
out
test
or
xor
imul
test
subb
arpl
imul
sub
mov
in
cmc
and
jnp
mov
out
mov
fidivrs
jb
pop
je
arpl
add
xchg
cmp
cmpsl
inc
pop
jmp
mov
lcall
xlat
mov
xchg
sub
fld
jge
loop
es
mov
cmp
test
or
push
loopne
fldl
stos
mov
test
icebp
sub
jnp
je
add
ljmp
mov
mov
dec
sbb
cmp
ja
bound
mov
add
xchg
pop
in
adc
sub
fwait
mov
adc
mov
sbb
pop
test
inc
pop
add
aaa
testb
jl
test
push
cwtl
and
pop
into
test
lea
mov
mov
lcall
cmp
int3
jmp
ss
call
lds
je
test
cmp
test
mov
addb
sub
mov
jecxz
inc
or
push
pushf
add
sub
lock
push
mov
test
jmp
loope
test
insb
xor
mov
in
sub
test
outsb
xchg
data16
iret
test
inc
jle
fimull
jne
test
sbb
cmpsl
dec
cmpsb
xor
jl
sub
movzbl
test
adc
xchg
or
fsubl
addl
int
inc
pop
cmpsb
mov
inc
and
imul
and
filds
jns
int
sahf
inc
mov
js
mov
inc
test
sub
push
clc
jae
xor
addb
jmp
adc
pop
movsl
xor
mov
cmp
sub
sub
fwait
adc
in
pushf
test
ret
lahf
mov
test
and
dec
mov
je,pt
jecxz
xchg
mov
mov
dec
and
leave
test
in
sub
cmp
sbb
les
mov
push
mov
inc
mov
mov
arpl
into
xor
mov
add
sbb
xchg
in
fwait
mov
adc
mov
out
cltd
sub
aaa
mov
outsb
mov
lods
xchg
mov
or
jae
add
adcl
inc
test
bound
test
xor
push
sbb
adc
iret
adc
call
fdiv
jg
mov
andb
jl
jge
xlat
adc
xchg
roll
sti
push
test
fcmovbe
pop
jle
test
cmp
xor
adc
pop
in
pushf
data16
push
cmp
out
inc
cld
out
mov
mov
dec
sti
dec
sub
xchg
sbb
and
ret
test
mov
cmp
sub
adc
jo
dec
lahf
adc
or
test
sub
nop
test
xchg
and
xchg
ret
sar
mov
test
pop
inc
lcall
pushf
inc
icebp
imul
xchg
mov
mov
pushf
push
cli
ficoms
jns
xor
sub
or
inc
test
inc
arpl
sbb
mov
arpl
icebp
sbb
dec
jl
sub
push
push
xor
test
dec
loop
shl
test
jecxz
enter
jns
or
std
sub
frstor
cld
sbb
push
loopne
mov
loop
into
dec
jl
mov
lcall
pusha
xchg
sub
lret
mov
jecxz
insb
fnstcw
sbb
xor
fwait
repnz
mov
cmc
das
sub
test
jp
xor
les
pushf
xchg
cmpsl
adc
push
pop
mov
ret
pop
push
jecxz
lea
aam
push
scas
xchg
cltd
mov
or
test
std
and
pop
sbb
test
inc
mov
jg
ja
scas
jge
mov
test
xchg
and
ja
std
test
adc
call
outsb
fldenv
repnz
lahf
add
cltd
std
xchg
loope
mov
jo
xor
add
xor
fwait
xchg
jl
enter
mov
xchg
mov
clc
outsb
pop
sbb
movsb
flds
push
out
pop
add
xor
cmp
mov
pop
cwtl
inc
mov
incl
lret
arpl
dec
cmp
clc
shlb
xor
pop
push
rcll
push
or
add
arpl
jecxz
dec
outsl
mov
inc
ja
call
adc
movsb
jge
push
xor
sbb
cmp
and
es
add
arpl
popa
mov
fsubl
mov
fwait
sbb
test
sub
xor
xchg
xlat
mov
cmp
xchg
or
mov
inc
push
test
in
cmpb
movsb
lret
mov
push
cmp
test
stos
and
mov
in
mov
mov
push
mov
add
mov
or
loope
mov
sub
ja
mov
mov
int
arpl
mov
out
enter
inc
std
cli
push
mov
imul
add
adc
xchg
pop
inc
cmp
sub
mov
test
mov
jle
test
ror
inc
stc
cmp
int
xchg
mov
int
dec
test
loop
inc
sub
stos
cmpb
push
in
popf
and
mov
push
mov
and
bound
icebp
test
mov
ror
clc
mov
cmpsl
sti
adc
addl
and
fdivl
xchg
test
jge
mov
push
in
test
aam
cmp
leave
inc
cmc
test
xor
sahf
xor
test
popa
push
mov
or
lret
mov
std
test
mul
pop
inc
repnz
sub
cvtps2pd
outsl
pop
rorl
hlt
andb
inc
arpl
jle
sub
push
in
clc
or
ss
or
test
fs
inc
xchg
mov
aaa
filds
int3
mov
cs
inc
test
jle
stos
ja
lods
inc
push
adc
xchg
popf
cli
out
ss
jo
xor
mov
in
test
fs
sahf
mov
push
les
js
imull
mov
lret
mov
cmp
popa
test
push
out
sbb
loop
arpl
mov
mov
adc
mov
aam
stc
inc
cltd
mov
cs
mov
cmp
enter
or
lds
test
inc
mov
lret
pop
cltd
stc
sti
and
ret
pop
push
push
mov
loop
out
xchg
test
cmp
dec
addb
and
test
movsb
jg
dec
stos
xor
sbb
lcall
cmp
into
push
add
add
stos
test
inc
imul
sub
test
sbbb
xchg
jne
test
xchg
nop
cmp
test
xchg
push
cld
push
mov
add
dec
mov
loopne
test
loop
out
jmp
inc
sbb
sub
xchg
xchg
add
call
dec
test
sahf
mov
cld
xchg
dec
aaa
push
mov
xchg
leave
test
adc
and
cwtl
iret
mov
inc
clc
sub
sbb
mov
loope
xchg
push
and
dec
test
and
clc
push
test
sbb
mov
add
repnz
xchg
aam
mov
pop
arpl
jne
enter
into
and
pop
mov
dec
outsl
and
inc
in
sbb
pop
mov
lds
mov
or
cmp
mov
hlt
inc
dec
ds
arpl
cmp
loopne
ret
adc
test
fisttps
pop
cmpsl
jmp
pop
cmp
push
mov
lcall
mov
loope
call
dec
test
pop
push
cld
push
rolb
or
test
lea
or
add
out
leave
fidivrl
mov
push
or
fsub
std
mov
cmp
cmc
push
jb
lahf
data16
movsl
pushf
int
mov
daa
insb
mov
arpl
inc
int3
lret
xchg
xchg
scas
movsb
sbb
pop
cltd
push
cmpsb
out
in
dec
add
aaa
mov
adc
test
jl
clc
lods
idivb
add
pop
inc
mov
test
sahf
outsl
xchg
jb
test
push
mov
test
fcoml
push
mull
enter
aaa
cmp
jmp
int3
xchg
insb
test
les
xor
int
test
mov
or
and
pop
test
rol
lret
xchg
cmp
test
cmp
icebp
pusha
add
cli
fwait
subl
es
sub
ficoml
cld
test
push
jb
test
or
or
mov
iret
inc
push
or
dec
lret
adc
mov
test
nopl
push
insb
push
je
call
push
ret
out
test
sub
test
jge
test
mov
mov
cmpsb
test
test
lea
call
rcrb
addb
inc
cmpsb
and
cs
xchg
test
je
push
dec
es
mov
mov
mov
cmc
dec
sub
pushf
test
cmpsl
and
push
sbb
mov
add
mov
inc
mov
xor
insb
add
ficompl
or
jle
or
sar
popa
mov
ljmp
test
xchg
mov
pop
sub
fdivrl
cmc
mov
test
pop
cmp
pushl
movsl
dec
test
push
fstps
test
mov
dec
push
fs
filds
outsl
mov
mov
push
jnp
repnz
push
push
or
test
sub
test
bound
dec
test
push
push
fnstenv
les
push
test
test
jmp
fdivrs
sbb
negb
arpl
notl
mov
popa
sarl
inc
ja
mov
ret
mov
sbb
fdivs
xchg
rolb
pop
add
mov
mov
xchg
jle
mov
cmp
test
into
out
test
repz
or
pop
sub
jecxz
test
int
sbb
mov
push
cmp
test
and
adc
cmc
inc
push
in
cmp
lret
test
jmp
sub
inc
je
pop
mov
insb
cmpsb
cwtd
faddl
mov
test
lock
xchg
mov
push
aad
dec
shll
or
or
movsl
xchg
xchg
push
xor
daa
sub
add
cmp
push
jp
cltd
insb
inc
aas
jecxz
push
pop
mov
or
cmc
dec
test
and
scas
or
mov
arpl
fwait
jp
xchg
cltd
in
and
sbb
inc
in
es
inc
pop
xlat
test
lret
add
sub
mov
xorb
sub
mov
fst
test
cwtl
dec
call
mov
mov
inc
mov
and
xor
sbb
mov
test
mov
dec
les
push
mov
lret
pop
cs
sbb
adc
movsl
out
sbb
xor
mov
stos
sbb
cmp
seta
movsb
adc
pushf
into
mov
dec
std
adc
and
jl
mov
cmpsl
loop
test
testb
dec
test
sub
popl
inc
ja
iret
and
arpl
mov
jg
add
mov
lcall
sub
movsb
stc
cli
test
sub
dec
test
popf
xor
push
mov
mov
dec
mov
les
adc
pop
popf
push
inc
and
in
test
idivl
xchg
gs
aaa
mov
test
int
je
fidivrs
mov
cmp
sub
scas
loopne
les
pusha
mov
nop
sbb
jo
repnz
lods
leave
lret
loop
js
movsb
imul
cmp
rolb
in
test
jle
cmp
in
arpl
mov
out
ljmp
cmpsl
mov
fld
mov
cmpsb
dec
or
inc
test
push
pop
mov
push
cltd
mov
rorb
mov
xchg
jb
inc
stc
arpl
mov
mov
in
mov
inc
mov
push
notl
and
arpl
lods
lds
dec
mov
dec
cltd
cmpsl
fdivs
or
aad
test
pop
pop
out
test
rorl
mov
pusha
testl
cmp
movsb
and
mov
lcall
mov
add
arpl
cmp
adc
test
mov
cld
test
or
mov
cmpl
xor
jb
enter
test
pop
ja
cmp
fmull
mov
adc
icebp
in
je
jno
inc
clc
test
leave
int
popa
push
add
dec
pop
inc
fisubrs
rcrb
pop
leave
arpl
push
jp
or
test
sbb
add
sti
fdivr
rcrb
dec
test
push
adc
test
inc
fs
pop
call
out
stc
fidivrl
push
pop
sub
sar
lcall
bound
stos
enter
jl
test
cld
fdecstp
jns
arpl
inc
shrl
and
cltd
pop
fistps
test
outsb
sub
push
jmp
or
jle
xchg
sub
sbb
lcall
cmp
adc
adc
sbb
mov
inc
stos
mov
jo
test
aas
dec
add
test
ficomps
jge
daa
jbe
mov
mov
dec
lcall
mov
enter
mov
test
mov
sub
sbb
cmpsl
inc
lcall
outsl
ja
xor
test
idivl
int
mov
xchg
xor
add
dec
fs
sbb
xor
outsb
pop
test
dec
repz
sub
jno
lret
jbe
inc
xchg
cs
pop
dec
push
mov
sub
jmp
inc
push
and
and
fisttpl
test
or
ja
loope
repz
inc
inc
pop
mov
outsb
les
sub
js
dec
pushf
or
and
hlt
sarl
dec
xchg
out
cs
mov
sbb
bound
imul
inc
cli
psllw
test
jnp
out
xlat
movsb
xorl
mov
jmp
mov
cmp
hlt
test
dec
shrl
mov
rolb
mov
cld
enter
test
adc
adc
or
loop
lret
mov
rcll
test
push
out
movsl
cmpsl
cmpsl
jg
adc
cmp
lds
jp
lods
int
jne
sub
ret
movsl
and
ja
test
xorb
cmp
cmp
mov
dec
test
pop
lds
movsl
or
sti
adc
mov
push
dec
sbb
roll
dec
xor
jecxz
cmpsl
push
ja
add
ret
cmp
sbb
setg
test
xchg
test
sbb
stos
in
push
cmp
sub
ret
movsb
imul
add
xor
in
lds
mov
bound
sub
int
or
jmp
and
adc
test
push
lds
lock
lea
cmp
xchg
dec
xchg
test
push
mov
imul
cli
rorl
popa
mov
test
pop
mov
dec
dec
sbb
jmp
jl
push
pusha
dec
dec
push
xor
stc
add
push
mov
daa
fcmovne
insb
push
and
lods
mov
cmpsb
inc
dec
mov
mov
stos
mov
test
andl
test
add
pop
dec
stc
lods
fnstenv
mov
push
into
push
mov
inc
pop
test
cmp
sbb
mov
mov
inc
js
xor
lods
adc
testb
mov
imul
push
mov
push
das
outsl
repz
cmpsb
mov
lock
cwtl
mov
sub
movsb
popa
repz
cmc
cli
push
mov
pop
out
xlat
lods
setb
test
testl
test
aas
mov
add
pusha
ret
and
push
adc
inc
inc
hlt
ret
mov
iret
stos
sbb
dec
inc
xchg
testb
cmc
test
dec
pop
and
or
test
mov
negb
test
mov
inc
aad
push
mov
inc
je
test
pop
sbb
xor
test
lcall
mov
in
xchg
sub
pop
lret
cli
lahf
xor
sahf
and
icebp
push
adc
bound
popa
out
ja
mov
iret
xchg
sbb
sarb
lcall
cmp
jl
or
int3
pop
pop
xchg
les
imul
or
sbb
sbb
jle
mov
test
sub
jmp
and
sub
fmull
sarb
stc
aam
popa
icebp
andl
test
xor
xchg
and
mov
cs
cmpsb
mov
repz
negb
jecxz
and
jp
test
mov
out
mov
inc
stc
add
cli
jecxz
shrl
push
push
push
jnp
or
lcall
cmpsl
cmp
mov
fwait
xchg
sub
push
mov
cmpsb
sub
aaa
iret
ret
push
in
mov
cltd
jmp
sti
pop
cmpsb
lret
jg
enter
adc
xorl
stos
adc
push
test
aaa
mov
mov
sub
mov
stc
cmp
sti
adc
test
adcl
test
sub
icebp
sub
clc
movsb
xchg
inc
fisttpll
mov
sub
sbb
jmp
and
loop
jo
mov
and
fimuls
mov
jg
dec
cmp
mov
push
jle
cwtl
push
inc
imul
sub
shll
pop
stos
inc
xchg
xor
or
movsb
xor
xor
arpl
jp
sbb
pushf
inc
in
mov
mov
push
mov
and
pop
add
and
nop
jp
les
and
or
movsl
hlt
xchg
popf
subb
xchg
and
cmc
inc
leave
test
sahf
push
push
and
fwait
pop
jecxz
sub
or
sbb
test
andb
dec
mov
sti
mov
addr16
dec
and
test
es
sub
xor
pop
dec
xor
cmp
movsb
push
test
adc
dec
lods
outsb
in
inc
ja
pop
and
test
fcompl
sub
lret
cmp
sbb
cmp
daa
int3
test
in
int
xchg
and
out
jns
sbb
call
mov
pop
sub
jle
sub
cmc
inc
ret
cltd
out
sbb
int3
pushf
inc
imul
ficoms
test
ficompl
and
std
mov
daa
arpl
pusha
mov
mov
add
mov
push
push
push
xchg
out
test
xor
pop
dec
add
push
movsl
mov
repz
mov
xor
sbb
sub
push
lret
lcall
jae
add
xor
das
sub
xchg
inc
popa
push
leave
adc
stc
test
lea
data16
cmpl
lret
lds
test
movsb
pusha
test
add
push
mov
add
lret
sub
ss
adc
lcall
mov
test
mov
xor
adc
mov
je
sub
jne
push
out
and
mov
pop
jo
and
test
adc
push
mov
pop
add
lret
mov
les
push
aas
cmp
mov
lret
xchg
je
mov
xchg
data16
lcall
call
mov
popa
dec
test
dec
shr
mov
mov
mov
push
stos
stc
add
and
enter
add
test
movsb
jg
cmp
fiadds
cltd
or
aas
mov
in
add
js
mov
mov
test
push
sub
cltd
leave
stc
test
imul
lods
mov
mov
xorb
xchg
cwtl
out
mov
fldenv
mov
cmp
nop
ja
repnz
cld
mov
in
mov
test
xlat
fwait
dec
loop
pop
test
fstps
lea
test
jb
pop
test
sub
loopne
mov
outsb
inc
add
mov
lahf
jecxz
popa
mov
mov
pop
les
test
dec
ss
mov
movsb
fsub
pop
push
dec
test
imul
sub
mov
push
aad
ret
arpl
in
jb
inc
inc
dec
jle
mov
and
das
and
fidivrl
push
mov
into
addb
cwtl
test
sbb
test
bound
inc
dec
xchg
xor
in
pusha
test
mov
bound
mov
ds
scas
lock
mov
add
sbb
lea
add
test
adc
jmp
jecxz
mov
inc
and
test
sub
jl
movsb
pop
mov
in
mov
dec
test
lods
scas
lret
xchg
cli
sub
data16
push
fs
popf
xlat
scas
and
lcall
cmpsb
scas
or
inc
pushf
out
inc
xchg
mov
popf
jmp
cmp
fxch
shrb
test
dec
jnp
stos
jno
test
jg
lret
xchg
mov
xchg
test
addr16
test
mov
push
icebp
mov
or
and
lcall
and
sub
dec
push
call
or
xchg
lds
mov
insb
loope
aad
mov
sub
or
fwait
movsb
les
enter
mov
test
outsb
mov
mov
cwtl
arpl
xorl
mov
mov
popa
imul
push
lock
les
pushf
inc
test
mov
stos
pop
mov
or
arpl
pop
push
mov
imull
rcrl
nop
test
sub
jmp
int3
and
inc
lcall
cmp
movsb
hlt
stos
mov
loope
in
nop
cmp
rolb
push
sub
sub
lea
out
add
les
pushf
and
lds
in
mov
xor
mov
bound
test
jb
ss
mov
clc
mov
stos
clc
hlt
stos
cltd
xchg
pop
arpl
aaa
movb
and
jb
jnp
lahf
cli
test
xchg
fwait
bound
cmp
mov
mov
test
mov
sub
gs
xchg
mov
ss
movsb
cmpsb
sahf
addb
loope
arpl
mov
push
mov
cmp
scas
inc
movl
fs
and
mov
test
test
je
push
mov
movsb
sar
mov
insl
xor
pop
aad
mov
inc
mov
dec
les
adc
arpl
mov
test
lret
orl
pop
test
ror
outsb
lret
mov
pop
cmp
pop
sbb
bound
sbb
test
sbb
rclb
leave
mov
sub
fildl
sbb
mov
push
arpl
out
dec
arpl
test
lret
les
mov
stos
icebp
jl
mov
ljmp
mov
test
fwait
xchg
call
test
push
mov
push
insb
test
out
and
adc
xchg
push
mov
cli
imul
les
cwtl
push
dec
lret
leave
rcrl
arpl
out
xor
test
sti
imul
out
mov
jnp
inc
dec
cmpsl
bound
xchg
xlat
sti
mov
popa
insl
mov
incb
lcall
mov
mov
cmp
lret
sub
lcall
js
xorl
sub
cmpsb
ja
inc
adc
je
stc
or
xchg
test
stos
cli
int3
mov
add
leave
test
aaa
xor
and
cltd
mov
sub
mov
or
popa
mov
mov
pushf
pop
lods
xchg
movsb
dec
xor
scas
push
mov
mov
lret
out
enter
mov
ljmp
ret
cld
data16
test
movsl
notb
push
jg
adc
sub
ret
jl
pop
sub
push
mov
stc
jmp
in
lods
call
push
sub
in
inc
in
sbb
lds
test
iret
push
test
popa
push
hlt
adc
test
inc
cltd
lods
sub
loope
clc
push
in
shrb
lcall
mov
or
test
cmp
stc
jnp
mov
pop
mov
mov
push
loop
sub
enter
push
repnz
add
xchg
bsr
enter
pop
mov
sub
jns
jne
insl
xchg
stos
cld
enter
dec
test
jmp
int
insl
and
or
jecxz
xchg
lods
jns
loope
cwtl
test
aad
pusha
sub
pusha
dec
mov
sub
mov
mov
xchg
mov
adc
dec
sub
inc
into
add
daa
sbb
pop
inc
aas
fldt
mov
pop
ljmp
xchg
sbb
into
and
test
xchg
pop
mov
loope
test
mov
inc
aaa
push
rcl
stos
add
mov
or
mov
mov
cmpsl
test
loope
dec
inc
xchg
imulb
lret
mov
cmpsl
or
sbb
cmp
mov
movsl
mov
mov
adc
pop
jnp
mov
dec
push
cltd
mov
xchg
inc
test
clc
xchg
mov
cmp
jmp
and
leave
ds
mov
test
xor
sbb
mov
ja
jle
xor
dec
and
test
out
inc
push
push
inc
cmp
cltd
test
xchg
dec
ja
jg
aam
cmp
mov
rolb
push
test
rcrb
in
push
pop
test
lret
mov
and
in
pushf
ljmp
mov
stos
add
and
pop
jg
test
cli
mov
in
push
or
divb
push
jo
cmp
movsb
xchg
dec
out
lret
insl
test
mov
inc
shll
test
sub
push
test
xchg
iret
fbld
sbb
adc
daa
fwait
test
pop
push
pop
fstpt
pop
nop
loope
test
jae
call
push
and
incl
adc
mov
arpl
mov
ret
lahf
pop
test
js
mov
lcall
push
insl
in
fidivrl
and
out
test
sbb
cmp
pushf
out
dec
test
fnstenv
lret
sub
bound
cmc
sbb
mov
decb
mov
pop
in
test
ja
push
cmp
xchg
test
jmp
sbb
or
test
push
dec
inc
ficoml
fwait
sbb
push
jmp
inc
push
into
test
and
lahf
rol
jnp
xchg
push
inc
mov
or
push
test
mov
filds
sbb
cli
adcb
lock
cmp
mov
lea
test
test
xor
imul
es
test
int
pusha
test
or
popa
movsb
xor
sarb
pop
sub
imul
dec
xor
test
rorl
dec
xchg
and
mov
leave
jno
mov
ds
sbb
push
pop
cmpsb
sub
addb
aas
sub
cmp
mov
jl
xor
jnp
sbb
mov
xchg
cmpsb
ja
std
rcl
pop
mov
mov
push
test
out
inc
fnstcw
and
insb
jns
arpl
call
stc
lahf
jecxz
and
ret
scas
jmp
mov
movsb
xchg
mov
shlb
test
xor
lods
lret
and
or
mov
ret
push
jne
pusha
insb
sbb
not
iret
fwait
jmp
pop
arpl
sbb
mov
dec
add
pop
test
bswap
test
mov
test
mov
or
pop
mov
scas
loop
test
call
mov
imul
mov
mov
test
cltd
dec
pop
xor
filds
add
flds
inc
in
test
pop
or
shll
xchg
push
mov
gs
cmp
cmp
test
loopne
and
pop
fadd
mov
push
dec
imul
mov
xchg
je
popa
lea
stc
rorb
mov
in
out
or
sub
xchg
outsb
cmc
xchg
test
and
mov
xchg
icebp
ret
sub
test
loope
pop
scas
addr16
sub
jmp
test
xor
stos
popf
jbe
push
sub
mov
pop
test
loop
test
adc
push
arpl
sbb
jae
mov
hlt
ret
cmp
adc
cmpsb
cmpsl
test
out
xchg
jle
inc
out
or
loop
in
mov
mov
fisttps
mov
cmp
test
xor
adc
xor
addr16
cmpsl
push
mov
inc
in
push
lahf
sahf
movsl
push
test
jp
daa
mulb
imul
mov
fisttps
enter
test
push
test
insb
daa
adc
xchg
icebp
repnz
bound
mov
dec
call
inc
in
mov
pop
outsb
das
aad
test
dec
dec
mov
cmp
mov
lds
inc
mov
test
inc
jle
cld
push
pop
js
fildl
popf
lcall
imul
cli
sbb
mov
dec
test
push
jecxz
loop
mov
mov
mov
arpl
les
popf
ja
in
out
xchg
test
jge
cli
add
movsb
xchg
mov
pop
mov
mov
mov
ret
sbb
loope
jecxz
mov
jmp
int3
arpl
test
mov
pop
sub
dec
jl
xor
sbb
cmp
lahf
imull
shl
mov
xorb
inc
stos
mov
stc
xchg
push
les
movsl
adc
add
mov
jge
sub
cmp
xchg
aas
hlt
xchg
mov
out
cmc
lds
adc
mov
mov
mov
add
pop
test
popa
jmp
lret
insb
cmpsl
jp
sub
xchg
ret
xchg
dec
xlat
sbb
xchg
in
push
test
pmuludq
test
jno
mov
push
jae
stos
inc
jbe
pop
insb
leave
xchg
mov
fstp
push
popf
repnz
test
in
jp
test
loopne
mov
lds
inc
mov
test
movsl
lahf
popa
cmp
jo
jne
test
sahf
pushf
jmp
test
sbb
enter
adc
ret
lcall
dec
test
mov
test
sub
adc
mov
test
ror
or
mull
and
adc
pop
jmp
cmp
repz
icebp
scas
sub
ret
notl
bound
test
cli
stos
mov
bnd
bound
ror
mov
xchg
mov
push
test
mov
enter
arpl
adc
scas
jnp
les
jb
test
andl
xchg
int3
clc
pushf
in
or
cmp
movsb
scas
iret
or
orb
mov
mov
int3
jp
inc
pushf
in
leave
xchg
in
repnz
mov
sbb
sub
sbb
aad
mov
mov
nop
lret
mov
mov
add
out
and
mov
dec
mov
and
sti
mov
and
in
into
mov
je
mov
movsb
pop
mov
lea
sbbb
bound
inc
cmp
test
negl
xchg
std
outsl
test
test
adc
test
push
xchg
cmp
rorl
add
dec
data16
test
pop
aad
dec
push
clc
out
test
test
orl
int3
icebp
jns
mov
mov
pop
mov
test
mov
out
arpl
mov
popa
dec
std
aas
jecxz
fdivs
test
xchg
inc
enter
test
add
mov
ljmp
insb
pop
test
jle
test
movsl
add
cmp
xchg
mov
cmp
movsb
repnz
xchg
jl
mov
add
das
xor
jae
out
jge
push
dec
lods
in
test
imul
or
jp
adc
lret
adc
in
sbb
mov
and
push
dec
jo
paddsw
test
xchg
cmpsl
pop
test
or
cmp
jnp
in
or
cmp
dec
lcall
sbb
orl
mov
pop
push
aaa
pop
mov
test
loop
pop
pop
aas
imul
imul
dec
bound
jne
pop
or
scas
sbb
jecxz
pop
jecxz,pt
sbb
add
test
sub
dec
lahf
popl
cmpsl
jns
leave
sub
popa
sub
lcall
movsb
faddl
or
push
and
xor
dec
xchg
push
add
cld
sub
lret
pop
jge
mov
jl
in
xchg
mov
inc
lcall
mov
dec
sub
sub
pop
call
test
and
shrb
push
test
test
and
ja
fcmovnu
sub
mov
test
int
jecxz,pn
lahf
cmp
les
xchg
adc
clc
cwtl
sbb
add
arpl
push
and
lret
stos
test
mov
sub
orb
jge
jno
cmp
ljmp
in
push
addr16
in
inc
mov
out
in
mov
mov
test
pop
insl
mov
jne
and
test
cli
inc
inc
bound
xchg
test
test
aad
jecxz
push
pop
in
mov
push
fiaddl
in
xchg
jne
test
test
js
imul
and
decl
jns
sub
add
rcrl
stos
test
lret
cmp
fbstp
jp
test
xabort
test
cmp
sub
in
dec
add
push
xor
sub
push
sub
or
pop
and
mov
lods
sub
test
scas
scas
jnp
cltd
in
xchg
dec
push
and
arpl
inc
push
mov
shrl
lret
call
or
push
inc
push
pop
mov
inc
inc
shl
dec
lret
dec
fs
test
pop
mov
push
incb
sbb
mov
jno
sub
mov
sub
bound
push
jns
adc
lret
arpl
mov
add
test
jns
arpl
enter
mov
sti
test
mov
add
movsl
sbb
idivl
lcall
shrl
jge
push
pop
sbb
out
in
int
sub
mov
jmp
inc
jnp
shll
lock
jne
jbe
sbb
and
cmp
rcll
add
dec
jne
push
mov
int3
pop
testb
test
and
repnz
ja
xor
fnstcw
dec
aad
inc
test
mov
or
idivb
and
negb
test
sub
sarl
sahf
push
test
xchg
inc
mov
pop
adc
movsl
mov
xchg
test
icebp
or
pusha
test
jp
lret
test
sahf
or
xchg
nop
sbb
mov
add
cmpsb
jp
mov
test
mov
fnstcw
xchg
xor
cmp
test
test
sub
inc
movsb
fcompl
sbb
add
test
loope
into
inc
xlat
xor
les
fnstcw
jae
test
sub
jno
or
lret
mov
lds
and
movsb
fldl
aas
jp
pop
xor
shll
mov
outsb
outsb
mov
inc
pop
and
cmp
lahf
xchg
mov
pop
movsl
adc
cs
movsl
jmp
sub
mov
cli
mov
shl
push
adc
xchg
rcr
pop
mov
cmp
push
pop
ds
lea
repnz
xlat
daa
push
insb
test
and
lret
test
xchg
xchg
js
test
jnp
mov
xor
out
shlb
bound
jb
dec
cld
test
xor
push
add
insb
adc
pop
mov
inc
jecxz
xor
add
xchg
and
stc
mov
dec
mov
test
insb
xchg
mov
mov
push
sbb
mov
in
dec
aaa
xchg
loopne
mov
int
test
dec
jp
mov
testb
flds
push
clc
movsl
adcb
inc
sar
int
cmpsl
xchg
lds
push
mov
mov
test
xor
mov
cmp
mov
push
push
push
and
jp
mov
mov
ret
or
movsb
stos
rolb
icebp
sbb
or
xchg
pop
clc
lcall
movsl
and
hlt
xchg
decb
dec
push
sbb
pop
bound
mov
icebp
fsubr
test
mov
loop
pop
enter
xchg
outsl
sub
les
lahf
mov
test
or
xchg
fs
inc
in
neg
mov
dec
shll
mov
outsb
cmpsl
sub
pushf
and
dec
cld
repz
mov
jg
das
test
aaa
mov
pop
popa
dec
adc
xor
into
ljmp
cmp
sbb
jg
subb
push
dec
cs
mov
mov
test
lds
pop
pop
pushf
frstor
sbb
call
std
test
lret
test
test
mov
mov
push
test
ret
push
inc
test
out
les
int3
pop
xchg
or
cmpsb
jns
mov
ja
movsb
or
stos
cmp
lods
lcall
daa
xchg
bound
ja
repnz
xchg
jecxz
cmp
pop
adc
mov
mov
leave
add
sub
mov
arpl
mov
stos
out
mov
filds
roll
mov
push
arpl
add
mov
xchg
lods
out
push
bound
movsb
inc
mov
add
jae
jbe
test
mov
mov
test
enter
loopne
cwtl
not
stos
movsb
jno
movsl
jp
xor
ret
pop
movsb
jns
orb
les
xor
stos
andb
out
in
mov
and
dec
rcll
mov
hlt
push
test
dec
push
fwait
cld
mov
dec
icebp
int3
movsb
jp
jbe
pushf
xlat
or
sbb
and
mov
test
pop
loop
movsb
sub
shlb
mov
test
xchg
inc
loopne
enter
jo
inc
cmc
je
addl
loop
mov
ret
rcrb
test
pop
loope
jae
loop
test
dec
mov
repnz
test
adc
cmp
in
enter
aad
inc
mov
test
and
test
nop
mov
add
and
mov
pop
in
mul
pop
mov
xchg
add
cli
test
mov
inc
sub
fsin
cmp
bound
xor
loopne
addb
daa
out
xchg
mov
test
push
mov
xchg
test
lods
cltd
adc
or
mov
fiaddl
mov
push
jo
or
jmp
xchg
shr
mov
imul
out
in
test
leave
adc
jecxz
cli
or
in
jmp
stos
lods
jno
and
jge
pop
add
dec
pop
shrb
shrl
les
leave
xchg
cmp
lret
sub
fdivl
mov
and
mov
call
jmp
pop
jmp
xor
mov
cmpsl
mov
test
data16
test
sub
sahf
in
fsub
and
pop
insl
xchg
ret
int
in
jbe
mov
add
push
mov
cli
push
or
ja
push
and
xchg
test
out
inc
jecxz
xor
ret
mov
jb
push
jp
mov
mov
push
bound
dec
enter
test
pushf
dec
out
mov
sbbb
push
test
dec
cs
dec
clc
test
pop
andl
sbb
cwtl
jne
pop
inc
dec
jae
mov
mov
sub
pop
ret
xchg
clc
in
cmp
and
sbb
cmc
jns
mov
cmp
adc
clc
mov
cmp
ret
insb
cmc
lock
scas
ja
test
sub
or
mov
ret
jne
mov
sahf
test
mov
cli
sbb
sbb
test
mov
test
or
in
test
int
or
push
test
dec
push
fcmovb
call
pop
adc
mov
test
xchg
arpl
or
cli
negl
out
stos
pop
fnstenv
in
stos
movsl
mov
lret
xor
enter
mov
sub
jne
xor
test
out
loop
xchg
test
call
int
pushf
push
mov
test
push
ret
int3
xor
pusha
lds
pushf
in
arpl
inc
cmp
sbb
mov
mov
mov
and
or
mov
pop
cmp
stc
pop
mov
int
or
cltd
in
inc
negb
rol
ja
in
push
push
aaa
icebp
jae
nop
fidivrs
dec
mov
fldenv
adc
sub
data16
cmp
inc
mov
test
cli
in
divb
dec
mov
aam
push
mov
sbb
lds
dec
mov
xchg
cmp
pop
cli
popf
repz
mov
lea
in
or
mov
roll
fdivrl
test
mov
shll
repz
jge
or
je
mov
pushf
test
mov
bound
mov
mov
dec
ret
arpl
cmpsb
pop
xor
mov
and
adc
cmp
lret
int3
inc
sub
cmp
ror
push
leave
loope
ret
enter
jle
mov
loop
icebp
sub
mov
cltd
sub
bound
sbb
and
mov
pop
push
push
arpl
mov
mov
repz
aaa
jmp
mov
mov
test
mov
xor
inc
imul
repnz
mov
outsb
and
test
mov
pop
jbe
mov
sbb
push
dec
arpl
pushf
mov
and
test
xlat
push
leave
pop
push
inc
xchg
insl
test
sub
je
enter
pop
shrl
mov
lret
inc
repnz
jmp
mov
mov
orl
mov
jo
test
inc
test
mov
mov
cmc
test
dec
cld
sub
xchg
loopne
adc
rcll
jb
sarl
cli
lahf
mov
mov
mov
loopne
fbld
jmp
push
ja
out
lods
test
xchg
enter
test
xor
mov
mov
in
lods
lret
ss
xor
clc
bound
sub
sub
test
or
push
inc
cmpsb
test
sarl
lea
xchg
push
mov
mov
lret
test
ffree
test
dec
mov
in
call
fmulp
and
out
adc
and
dec
xor
dec
inc
or
mov
mov
test
cmp
mov
fnstsw
and
and
push
sti
pop
mulb
cmc
test
adc
jbe
repnz
insb
or
dec
push
xchg
test
jmp
dec
iret
in
loop
loopne
popa
outsl
mov
fwait
roll
jecxz
iret
add
dec
repz
inc
and
rcl
jmp
xor
test
xorl
ljmp
push
dec
test
test
sbb
test
push
shll
and
sbb
leave
loopne
jmp
arpl
inc
and
insl
mov
shll
add
int3
and
mov
push
int
fwait
push
test
push
out
test
push
int
test
fnstenv
sarl
mov
dec
sub
sub
jmp
lds
pop
ds
test
jbe
and
test
jmp
dec
movsb
pop
and
push
stos
sub
lds
arpl
addb
test
xor
mov
and
bnd
add
pushf
jg
out
cmp
test
lcall
test
lods
mov
xchg
add
xchg
test
cmpsl
add
pusha
inc
mov
test
cmp
test
testb
mov
mov
rol
cmpsb
repz
in
aad
mov
mov
jmp
jae
outsl
mov
push
and
jbe
in
test
jns
in
sub
out
dec
test
push
sbb
push
leave
sub
pop
ret
jge,pt
mov
imul
js
fs
into
movsb
xchg
fld
and
cmp
add
pop
xchg
jge
pop
xor
xchg
ret
test
xlat
dec
inc
cmpsb
stos
test
xor
int3
test
add
test
xor
or
fst
xor
std
mov
sbb
dec
test
cmp
cmp
and
dec
sub
test
lret
loop
into
dec
arpl
ds
xor
cmp
test
shrl
jge
mov
pop
iret
loope
mov
xchg
movsb
inc
in
inc
pop
bound
sbb
cmp
xor
test
jns
je
adcb
sbb
adc
jb
in
mov
dec
das
lcall
xchg
cmp
and
xchg
stc
test
xor
test
pop
push
rcrl
inc
jecxz
icebp
lret
pusha
jge
or
movsb
cwtl
punpckhbw
insl
addl
jb
or
cmpsb
pop
cltd
xchg
test
sti
and
mov
bound
mov
jne
fsubp
test
cli
push
mov
ljmp
pop
mov
flds
mov
xor
mov
sarb
push
cld
loop
iret
cmpsb
popf
aam
in
push
sti
test
mov
cs
jb
bound
push
push
rclb
sub
push
in
add
adc
test
cmp
int
mov
jmp
dec
or
cmp
test
fdivl
jmp
mov
sub
xor
test
icebp
imul
xor
rolb
add
xor
dec
lahf
popa
test
cmp
leave
sahf
cli
pushf
mov
test
pusha
push
adc
js
test
rcl
test
dec
aad
jne
les
popf
push
inc
mov
sub
cmpsl
scas
add
dec
clc
mov
cli
incb
push
lods
xchg
jecxz
push
mov
mov
mov
in
adc
push
dec
mov
xchg
inc
and
divb
or
pop
cmp
or
dec
xchg
mov
test
orb
adc
mov
test
daa
push
idivb
mov
mov
inc
xchg
test
jmp
cwtl
fbstp
test
fstl
fsubl
sbb
xchg
mov
sbb
movsb
jns
rcl
or
movsl
cwtl
mov
fsubrl
lret
mov
insb
imul
test
cmp
jl
adc
enter
adc
push
pop
xchg
mov
and
xchg
xchg
push
sub
arpl
mov
xor
xchg
dec
xchg
outsb
fdiv
aad
inc
xchg
mul
jle
jb
testl
in
jl
sbb
fnstcw
lds
stos
in
dec
xor
mov
or
loopne
dec
jecxz
mov
cmp
test
inc
sub
movsl
notb
push
mov
jo
or
arpl
shll
in
xor
cs
je
sahf
and
in
push
pop
out
call
addl
xor
fwait
les
in
mov
mov
mov
inc
shlb
jbe
mov
pop
arpl
sti
cmp
test
xchg
stos
xchg
cmp
inc
bound
dec
mov
aam
jge
lret
cmp
mov
in
jg
ret
mov
mov
sbb
dec
testb
es
wrmsr
xor
mov
push
sub
pop
and
sbb
xor
mov
test
leave
adc
fwait
dec
or
sbb
mov
push
fs
pop
popf
jmp
scas
test
mov
iret
mov
cmp
test
sbb
push
push
shrb
or
jne
dec
loop
jno
lahf
mov
call
jbe
inc
mov
sub
cpuid
dec
shlb
rorb
cmp
fnstenv
test
std
in
rorb
and
les
fisubl
lret
xchg
and
pop
jl
aam
jp
sar
daa
xchg
push
in
adc
sub
les
inc
cmp
test
sub
mov
push
dec
inc
add
add
sub
sbb
jnp
outsl
adc
cmp
lods
mov
out
push
arpl
jp
or
inc
test
or
testl
inc
fld
xchg
fcomps
lret
pushf
lods
imul
jecxz
cli
or
mov
mov
mov
xchg
fs
test
lods
inc
ds
cmp
outsb
mov
mov
xor
push
fadds
adc
lahf
mov
mov
and
test
jge
sbb
call
cmpb
xor
jo
mov
daa
andl
outsb
bound
jp
push
and
test
adc
test
push
shrb
dec
loop
dec
dec
test
mov
and
cwtl
adcb
jmp
dec
inc
test
and
xor
add
cmp
xchg
xchg
mov
ret
mov
and
bound
daa
gs
movsl
or
push
mov
xor
test
movsb
inc
lcall
inc
lret
jecxz
sub
not
scas
push
inc
xchg
call
cmp
xor
fwait
add
adc
or
test
and
movsl
pop
ret
test
and
mov
shrl
jbe
aam
in
ss
out
push
or
js
sub
lods
mov
jo
lock
pushf
mov
stos
dec
mov
and
outsb
cmp
ret
inc
mov
push
imul
les
and
add
je
test
stos
ret
setbe
loop
test
hlt
xchg
or
pop
mov
jb
jne
test
lock
enter
and
ds
cmc
mov
adc
xor
xchg
bound
aad
arpl
fists
cmpsb
cltd
daa
pop
enter
xchg
adc
cli
mov
cwtl
inc
test
inc
and
dec
xchg
popf
arpl
out
cmpsl
clc
cmpsb
and
in
mov
lret
jb
or
push
inc
mov
popa
lea
add
or
mov
idiv
or
fidivl
jp
xor
add
fimuls
mov
out
mov
xor
outsb
jecxz
inc
pop
add
add
inc
dec
test
and
and
push
mov
insb
mov
jl
rcrl
shrb
xlat
dec
test
dec
pushf
pop
dec
in
or
test
jge
ret
jg
cmp
xchg
dec
test
test
xchg
sub
sbb
in
hlt
xor
cmp
mov
fmuls
mov
mov
dec
xor
test
jae
push
mov
or
cmp
mov
push
dec
jbe
out
iret
test
jns
xchg
enter
test
jl
cli
mov
jb
fimuls
test
push
test
mov
jmp
outsb
sub
mov
mov
pushf
and
and
jecxz
mov
lret
adc
pop
sbb
cltd
test
mov
cwtl
int
fadds
stos
mov
adc
test
movsl
out
in
dec
enter
pop
ja
push
dec
mov
test
ret
or
sub
jno
je
push
cmp
lret
ficoml
and
cli
xlat
mov
dec
fisttps
dec
push
test
inc
xchg
in
cmp
test
cmp
add
test
test
jge
mov
xchg
subb
xchg
test
push
and
test
push
outsb
mov
loope
int3
loop
test
leave
sbb
dec
rcr
inc
movsl
subl
out
arpl
mov
inc
stos
lret
ret
mov
cmpsl
adc
leave
and
in
xchg
mov
mov
xchg
int
test
xchg
arpl
mov
push
adc
cmpsl
lods
test
add
test
sbbl
inc
test
mov
dec
incw
fucompp
mov
cli
add
xchg
xor
and
test
and
sub
pop
or
mov
lret
cmpsb
dec
lret
mov
into
pushf
cmp
int
sub
dec
jbe
test
pop
jecxz
gs
adc
and
fidivrl
sub
test
sub
push
add
xor
mov
mov
loopne
iret
test
sub
cmc
in
push
mov
and
inc
es
xlat
lock
mov
push
sbb
ret
test
inc
and
cmp
lret
jns
aas
outsl
cmpsb
popf
mov
dec
dec
test
xchg
negb
andb
aaa
test
and
xor
dec
or
test
push
or
mov
xchg
and
ret
mov
test
jno
fsub
stos
test
in
cmpl
fwait
mov
stc
sbb
and
xor
add
jp
scas
mov
mov
pop
into
das
mov
movsl
iret
test
sbb
cli
mov
dec
mov
test
sub
cmp
jle
sbb
repz
mov
xor
in
dec
mov
repz
pop
jae
xchg
ret
and
dec
stos
mov
pusha
fs
mov
cmpb
dec
int
push
jo
cltd
test
cmpsl
test
imul
cmp
bound
jecxz
mov
loop
fstps
jns
cmpsl
stc
pusha
outsl
sbb
fadd
cmp
or
and
inc
das
bound
int
leave
add
movsb
popa
push
mov
test
sbb
pusha
test
cmp
adcb
add
cwtl
shl
sti
add
sbb
test
cwtl
or
inc
dec
ret
jb
mov
test
ficoml
mov
test
rol
sub
push
test
loope
lods
test
lds
mov
enter
icebp
test
and
test
hlt
cmp
data16
test
mov
fiaddl
push
add
fsubl
add
out
pop
test
sbb
jg
inc
sbb
push
scas
jnp
repnz
aam
inc
mov
int3
jecxz
adc
aam
clc
test
movsb
or
jg
test
enter
cli
lock
jne
test
sub
inc
ret
shll
leave
or
divl
jle
sub
cmp
cmp
orl
subb
mov
pusha
fcoms
outsb
les
push
sbb
loope
jecxz
cmp
add
addl
test
cmp
push
test
sub
fwait
popl
pop
test
pop
push
outsl
loope
movsl
test
xor
into
test
jecxz
and
pushf
jmp
adcb
sbb
dec
cmpb
in
lahf
xchg
test
stos
mov
mov
mov
negl
test
fwait
outsb
in
push
loope
xlat
cwtl
sub
test
movsl
jmp
add
jae
gs
stos
fwait
insb
jne
mov
les
divb
mov
cmp
std
sbb
test
mov
cwtl
das
test
push
adc
dec
mov
and
movsl
pop
int3
test
decb
and
mov
jo
cli
jg
mov
mov
pop
div
mov
dec
xchg
enter
scas
lcall
sub
mov
xor
mov
dec
sahf
mov
mov
aad
cmp
stos
pushf
inc
test
call
arpl
in
fwait
js
cltd
xchg
pop
xchg
test
lods
insl
leave
scas
testb
je
sub
push
lahf
pushf
pop
in
pop
and
cmpsb
jno
xchg
xchg
int3
mov
test
inc
adc
cmp
rolb
movsb
or
test
sbb
lcall
xchg
jmp
mov
sbb
dec
pop
sbb
mov
or
add
nop
loop
xor
xor
jl
ror
test
popa
push
cmp
xor
adc
ret
dec
mov
outsb
adc
imul
in
cld
daa
stos
dec
in
std
jle
fnclex
cwtl
sbb
pop
or
test
dec
mov
xor
rcrl
mov
test
adc
inc
push
test
or
dec
movsb
rcrb
cmpsl
mov
pusha
arpl
sub
xchg
call
dec
cli
or
into
aad
in
fwait
cmp
push
cmpsb
xor
jne
dec
and
test
fisubs
ja
fs
push
pushf
outsb
mov
shll
add
scas
mov
or
mov
fisubl
sub
pop
call
pusha
add
cmpb
pusha
push
jb
test
data16
push
jne
jp
loop
dec
sbbb
dec
add
aaa
fimuls
add
push
aam
les
inc
or
push
pop
es
imul
in
dec
clc
data16
lock
bound
pop
push
adc
dec
ficompl
lret
jge
add
clc
inc
adc
cmp
push
mov
adc
add
daa
movsl
test
sbb
xor
mov
or
sub
push
fidivl
pop
outsb
rclb
test
xor
dec
jmp
adcb
push
jecxz
or
out
push
hlt
jmp
mov
push
out
xchg
dec
sub
roll
adc
leave
sub
ficoms
cli
mov
adc
hlt
es
jp
inc
jmp
outsb
and
mov
cmp
inc
cmc
adc
inc
inc
and
subb
mov
mov
and
add
arpl
jb
dec
addb
aad
mov
imul
and
mov
in
cmpsb
shr
adc
mov
dec
dec
cltd
push
fwait
xchg
add
jmp
arpl
adc
subl
pop
lret
mov
dec
loop
in
sbb
stc
movsl
mov
clc
int3
test
xor
in
lds
and
push
leave
dec
mov
mov
push
xchg
aas
scas
out
jb
test
dec
fdivrl
js
sub
mov
and
pop
test
lahf
out
sbb
or
icebp
fnstcw
movsb
mov
lret
mov
xor
test
rcll
or
xchg
pop
mov
xor
xchg
pop
insb
xor
mov
cmpsb
jne
mov
jg
sbb
push
xor
push
in
fcmovu
inc
and
fnstenv
clc
faddl
cmp
test
pop
bound
add
lods
cwtl
in
and
mov
add
out
dec
mov
push
pushf
mov
or
test
dec
dec
mov
nop
test
hlt
sub
leave
mov
push
data16
or
add
sub
mov
mov
inc
xchg
not
test
fimull
sub
dec
in
insb
pop
shlb
mov
test
and
mov
cmp
xor
or
dec
test
sbb
or
add
aad
push
xchg
stos
and
test
icebp
and
ja
test
stos
test
aas
sub
test
fildll
movsb
cmc
mov
sub
mov
inc
or
inc
das
stc
pop
arpl
mov
pop
or
adc
test
push
mov
pop
lret
movsb
ja
xchg
rclb
mov
mov
cmpsb
scas
or
enter
mov
and
cmp
sbb
sub
sbb
mov
lret
and
adc
mov
and
bound
inc
test
rcr
jl
push
add
push
cmpsb
inc
dec
jmp
outsl
decl
xchg
dec
xor
test
inc
fwait
dec
test
sar
add
enter
mov
mov
and
out
test
fldl
ret
mov
test
cmp
sub
xchg
ja
popa
dec
sarb
and
bound
xor
ret
push
adc
popa
insb
sub
add
inc
push
idivb
in
rclb
lods
es
addb
mov
fistl
dec
addb
int
test
out
testb
sbb
cmp
sbb
cmpsb
dec
scas
test
push
inc
mov
jnp
push
aas
sub
out
mov
mov
popa
sbb
ror
inc
xchg
fidivl
test
mov
add
push
sub
dec
or
lret
insb
add
mov
sti
popf
cmp
xchg
xchg
in
fbstp
sbb
mov
les
filds
mov
loop
mov
jmp
test
fildll
or
into
jo
leave
dec
aam
inc
test
orl
into
jne
das
cmpsl
addr16
arpl
cmpsl
ss
and
mov
pushf
adc
test
jecxz
leave
mov
lea
mov
int
mov
add
inc
cltd
aam
mov
lea
dec
mov
add
or
mov
in
test
mov
test
inc
jmp
test
movsl
or
leave
mov
pop
in
mov
mov
mov
dec
popa
enter
cwtl
sub
ret
mov
sub
jo
add
dec
jg
mov
repnz
xchg
rolb
cltd
in
or
mov
sub
and
and
dec
test
lds
add
scas
mul
leave
jb
ficoms
popf
test
push
mov
cmp
or
cmp
mov
fstpl
daa
int
jle
sub
fwait
mov
cwtl
stos
and
mov
and
mov
jp
mov
and
or
mov
scas
dec
cmc
push
jp
pop
test
cmp
add
pusha
cwtl
jne
dec
insb
out
pop
add
dec
push
test
xchg
mov
cli
and
mov
test
sub
test
mov
lcall
enter
push
or
int
pop
dec
test
cmp
add
rorb
insl
dec
movsb
mov
inc
push
xorb
test
mov
or
jno
test
jecxz
fwait
test
sub
add
arpl
dec
mov
shrl
jle
cli
cmc
loope
and
jns
mov
lret
mov
push
xor
or
not
add
pop
lahf
call
jp
sub
test
mov
bound
sub
xchg
fldl
add
test
adc
mov
in
cmp
cltd
mov
sub
fdivs
push
cmpsl
sub
sbb
inc
inc
faddl
xlat
jg
and
movsl
mov
test
test
mov
mov
and
push
test
lods
pop
call
test
test
filds
lret
fcmovb
shlb
sbb
movsb
mov
xor
lds
mov
neg
pop
xchg
inc
sub
repnz
data16
xchg
pop
mov
test
or
mov
sub
xlat
test
cmp
inc
fwait
jle
pop
mov
testl
jbe
xchg
or
push
fadds
test
pop
and
sub
sub
sbb
shrl
into
arpl
xor
notl
sahf
test
lds
and
mov
cli
or
sbb
and
imul
cmpsl
int
xchg
push
dec
pop
and
lock
gs
mov
jno
arpl
int
ldmxcsr
mov
les
shlb
sub
pushf
sub
mov
push
push
cwtl
mov
cmp
test
or
mov
add
mov
scas
test
out
filds
inc
je
add
adc
mov
test
jl
push
gs
lods
mov
dec
mov
notb
and
nop
test
mov
lea
repz
cmp
inc
test
cmc
sti
sub
sub
in
addr16
cmp
test
loope
sub
sbb
xchg
pop
dec
adc
test
enter
push
xchg
cmp
fsubs
int
test
jp
cli
or
stc
test
sbb
add
pop
dec
jg
pop
in
jmp
mov
pop
xchg
test
repnz
xchg
icebp
push
cmp
rclb
test
cmpsb
adc
push
xchg
test
adc
test
sbb
test
pop
mov
test
cmc
cmpsl
adc
lret
test
push
xchg
dec
push
ss
js
mov
popf
mov
jb
pop
xlat
push
in
xchg
pop
test
xchg
test
std
ja
ret
data16
adc
sub
adc
movsl
xchg
aad
outsl
pop
xor
test
lcall
mov
inc
test
jae
cmc
and
mov
out
lock
push
add
test
in
and
pop
pusha
cmpsl
mov
test
mov
sub
xor
xlat
sub
mov
mov
or
mov
and
les
xchg
xchg
cmp
stos
int
or
mov
mov
adc
push
jp
or
jb
imulb
scas
xchg
mov
dec
mov
jl
and
stos
mov
mov
test
xchg
shrl
sub
mov
repz
pop
arpl
test
cli
lea
lods
push
adc
jo
mov
test
fwait
in
pop
loope
into
xchg
loop
push
stos
mov
xchg
ret
stos
and
cli
int
test
lds
int
add
jl
test
jmp
mov
jp
test
push
jb
mov
cmpsb
mov
imul
test
lds
lea
ret
dec
mov
xor
xchg
test
xchg
sub
sti
push
pop
xor
mov
mulb
mov
mov
mov
and
dec
pop
insb
pushl
mov
test
inc
push
movsb
xchg
js
leave
in
cmpl
test
lods
pop
mov
test
xchg
push
push
bound
pop
sub
or
test
inc
std
push
mov
js
mov
test
inc
sub
shrl
test
xchg
inc
shlb
movsb
insb
and
es
dec
bound
inc
and
test
leave
fimull
ds
push
add
dec
in
stos
push
push
test
xchg
add
sti
popa
mov
test
jmp
xchg
push
ljmp
lods
test
dec
pop
dec
pushf
inc
addb
lret
mov
pop
xor
shll
mov
mov
test
jp
inc
in
mov
test
out
pushl
ror
and
mov
test
and
cmpsl
scas
inc
pushf
mov
pop
test
movsb
xchg
xor
push
inc
mov
pushf
sub
dec
jb
dec
test
xor
cmpsb
push
test
push
cmp
movsb
mov
enter
scas
cmpsb
push
mov
rol
fimull
iret
xchg
pop
test
xchg
movsb
addb
lcall
movsl
mov
in
lret
mov
adc
jp
loop
and
jecxz
mov
inc
mov
das
movsb
jbe
test
pop
pop
and
inc
loope
xorb
add
sub
mov
inc
mov
mov
adc
pop
inc
fisubs
ficoml
outsl
lds
lock
adc
mov
std
in
insb
test
mov
fmull
hlt
test
pop
shrb
lea
arpl
cmpsb
fnstcw
arpl
mov
add
xor
test
sub
cmpsl
mov
mov
inc
insl
push
mov
inc
pop
stos
outsb
leave
jnp
cltd
test
dec
imul
movsb
cmpsb
add
outsb
mov
lock
ret
or
fldenv
mov
cmpsb
dec
in
sbb
adc
mov
sbb
pop
orb
hlt
pop
ret
test
test
cmp
ljmp
inc
mov
mov
mov
test
fists
cmp
inc
adc
push
inc
test
lret
in
popf
sub
imul
mov
fcomps
mov
ret
int3
mov
imulb
adc
mov
sbb
or
test
mov
pop
xchg
out
test
add
mov
xor
cmp
sbb
jl
or
add
arpl
cld
push
mov
or
and
add
fists
and
jp
adc
cwtl
jb
aaa
mov
sub
adc
int3
inc
out
shrl
cwtl
test
movsb
and
jne
pop
dec
idivb
pushf
mov
mov
pcmpgtw
fisubrl
sub
lret
jnp
mov
adcb
movsb
mov
pop
pop
fsubl
xchg
fdivr
movsl
out
push
call
test
jbe
pop
and
test
clc
rcrl
or
aas
sub
inc
dec
shl
int3
push
cmp
sbb
mov
aad
push
inc
test
jb
sub
cmc
popf
mov
cli
mov
movsb
gs
sub
xchg
sbb
sub
inc
in
and
push
push
test
test
mov
popf
arpl
jns
mov
mov
cmove
inc
das
mov
dec
popa
pop
xor
mov
test
iret
pop
cmp
mov
cmp
das
lcall
push
add
push
mov
test
shll
test
pop
int
arpl
out
fiadds
dec
inc
push
data16
loop
or
push
cmp
ss
arpl
jnp
std
cmp
mov
fwait
test
mov
stc
int
push
bound
or
cltd
mov
test
neg
cmp
pop
dec
movsb
stos
mov
dec
jecxz
push
pop
call
sbb
inc
or
test
mov
mov
cmpsb
inc
repz
ffreep
xchg
cs
les
lods
push
into
inc
and
lods
adc
push
arpl
inc
fnsave
imul
test
fwait
dec
jb
test
xor
enter
test
test
int3
aad
mov
rol
movsl
pop
in
sub
mov
and
lret
ret
test
shrb
test
ja
mov
sbb
test
add
jmp
lds
push
xchg
es
test
cmp
or
lea
push
mov
out
adc
push
test
cmc
fiaddl
xchg
dec
lret
mov
dec
push
shll
test
jnp
clc
stc
pop
test
mov
test
leave
push
xchg
dec
imul
fucomi
data16
inc
sbbb
cwtl
push
jmp
dec
scas
fldcw
ret
test
inc
call
jge
adc
repz
jbe
test
js
add
lret
cwtl
pop
stc
imul
daa
fs
data16
xor
and
in
fldenv
inc
les
mov
cwtl
mov
pop
or
push
and
inc
and
inc
fcomps
mov
lods
and
pop
loope
sub
mov
cltd
or
in
mov
enter
adc
aad
mov
mov
lods
fiadds
fucomip
out
enter
jb
mov
dec
jecxz
mov
pop
insb
sbb
or
dec
test
lds
mov
jae
dec
jg
lods
inc
ss
test
inc
push
add
insb
test
xchg
mov
cmp
clc
hlt
in
jnp
jbe
sub
ds
pop
arpl
scas
push
mov
dec
ja
push
jle
inc
test
inc
mov
jo
inc
mov
dec
orl
pop
test
roll
test
push
dec
adc
hlt
mov
and
sti
inc
leave
xor
test
je
imul
lods
enter
into
fs
test
jne
jle
filds
inc
lret
mov
xchg
sub
xchg
insb
sub
xor
adc
dec
pop
mov
push
sbb
mov
lcall
lahf
push
xchg
test
movsl
xchg
lock
or
popf
and
mov
into
mov
lahf
sti
andb
adc
or
pushf
pop
mov
mov
and
test
outsb
push
xor
xchg
int
push
sub
and
jmp
dec
add
test
mov
sbb
pop
test
push
std
out
test
push
sub
test
mov
call
test
in
add
or
pop
movsb
or
dec
fdiv
loope
mov
push
sub
dec
cmpsl
jns
icebp
addb
xor
add
stc
ret
dec
xchg
enter
imul
test
xor
jae
adc
sbb
bound
cmp
loop
xchg
arpl
pop
and
mov
push
add
arpl
adc
xor
shll
sub
add
xor
inc
mov
sbb
xor
ret
leave
mov
and
fwait
and
xor
push
jecxz
clc
xchg
ss
mov
pop
lods
bound
or
dec
xchg
lahf
dec
cld
test
test
fisubrs
sub
inc
flds
rcrb
movsb
in
pushf
pop
sub
test
jl
test
lods
out
in
jmp
pushf
int3
test
rclb
pop
outsb
enter
test
jno
stos
pop
xor
test
into
push
popf
test
push
adc
or
xor
stos
aas
shrl
jae
call
decb
lock
fs
in
add
jge
fldcw
movsb
addr16
push
and
inc
test
outsl
insl
popa
jle
push
test
sbb
adc
je
in
dec
xor
xor
adc
mov
je
or
outsb
daa
fcoml
mov
or
pusha
jl
pop
mov
es
ret
test
idiv
mov
jne
test
cld
push
push
in
insb
jp
mov
test
fdivrp
sahf
pop
lret
fsub
test
clc
rorl
fwait
pop
xchg
test
fldenv
jmp
enter
jnp
dec
jg
sahf
sbb
je
mov
pop
test
js
add
test
test
out
popa
inc
in
pushf
out
jle
mov
inc
aam
add
bound
cmp
dec
test
clc
mov
test
leave
sahf
jp
mov
outsl
mov
adc
and
push
dec
inc
pop
mov
dec
and
call
fildl
sbb
jle
pop
jbe
and
xor
lods
sub
icebp
mov
jno
mov
pop
push
push
fdivrl
movsb
ds
adc
cmp
and
test
mov
test
mov
add
out
bound
push
push
adc
dec
test
dec
incb
inc
out
lahf
and
sbb
xchg
lret
sahf
sub
push
je
mov
push
test
lcall
cmc
cmp
ret
jo
pop
pop
mov
lahf
dec
xor
or
je
and
test
inc
sbb
cltd
mov
sbb
push
arpl
mov
dec
sub
roll
int3
stos
subl
bound
cmp
and
push
daa
test
dec
mov
test
cmc
add
idivb
jne
test
sub
int3
mov
test
sbbl
outsb
out
test
sahf
push
aaa
xor
in
push
mov
xchg
and
mov
pop
enter
movsl
cmpsb
in
xchg
sbb
mov
movsb
popf
cmp
push
mov
mov
xchg
enter
inc
test
fwait
and
cltd
lods
shrl
daa
cmpsl
jbe
clc
mov
push
iret
mov
bound
test
lods
jmp
jae
in
std
mov
test
sbb
movsb
out
mov
or
inc
adc
and
and
int3
adc
fimull
sbb
mov
in
adc
jmp
dec
aam
dec
sub
stc
arpl
das
lcall
test
jbe
loop
mov
insb
dec
inc
pushl
push
push
imul
in
loop
adc
call
bound
cmp
jp
mov
sbb
test
add
inc
repnz
mov
in
aam
jns
leave
jnp
mul
push
cmc
xchg
enter
aas
repz
pop
jo
test
imul
inc
xchg
mov
dec
jl
insl
mov
jecxz
xor
mov
test
aaa
mov
xchg
ss
xchg
push
inc
mov
imulb
cmc
incl
lea
je
push
mov
cwtl
gs
mov
imull
xchg
fdivl
inc
mov
pop
jmp
gs
mov
push
and
lahf
mov
test
add
stos
jno
mov
push
es
push
test
adc
push
mov
jae
xor
xchg
ret
cwtl
mov
mov
jmp
es
sub
push
jecxz,pn
inc
or
mov
dec
mov
in
mov
outsl
pop
fnstcw
mov
sub
dec
test
fmul
loop
addb
cltd
rcr
and
fimuls
mov
ret
imul
sarl
xor
fadd
icebp
imul
iret
pop
dec
jecxz
int
mov
leave
mov
test
out
ja
out
mov
fs
sbb
test
jmp
mov
test
stc
push
popf
dec
bound
int
mov
call
arpl
ret
xchg
cmpsb
in
or
push
mov
inc
mov
movsb
dec
mov
mov
pop
dec
mov
imul
xor
in
jmp
pushf
out
xchg
mov
lcall
sti
test
test
jbe
imul
and
and
repnz
cmc
rcrl
sub
adc
movsb
sub
jno
aaa
mov
arpl
pop
jmp
add
movsb
jp
xlat
jne
mov
cmp
lods
test
and
stc
movsl
pushf
inc
call
push
lret
lods
mov
fdivr
adc
out
add
into
test
and
fs
xor
mov
and
xchg
sahf
mov
fildl
movsl
dec
inc
mov
xchg
or
add
mov
sub
mov
test
loop
mov
sti
orl
in
ret
mov
mov
int3
jge
movsl
test
fwait
cmc
sub
loop
mov
shrb
jmp
push
leave
bound
mov
mov
mov
and
fdivrl
repz
lahf
or
movsl
lret
xchg
andb
test
jbe
outsl
sbb
popa
popf
xchg
fisubrl
sub
enter
jmp
test
xchg
mov
clc
stc
testb
enter
push
mov
test
sbb
jnp
adc
inc
lahf
lret
adc
sub
inc
cmp
mov
inc
insl
xchg
adc
sub
test
and
cmpsl
adc
test
jle
inc
stos
push
cld
push
mov
or
dec
bound
lods
xchg
loop
mov
xor
pushf
mov
jmp
sub
cltd
cmpsb
movsb
loop
movsb
xchg
xchg
roll
jbe
cmp
adc
pushf
bound
push
paddd
testb
and
jae
mov
mov
mov
mov
push
mov
or
lcall
out
lods
dec
and
xor
cwtl
cmpsb
or
mov
orl
enter
push
or
mov
ficoms
ds
xor
mov
shr
test
sub
or
daa
arpl
mov
clc
mov
push
mov
cmpsb
outsb
or
in
cmp
adc
mov
mov
je
xorb
repz
jb
pop
add
cmpsb
test
and
in
dec
fwait
movsl
test
and
jne
test
sub
fscale
cmpsl
jg
arpl
jns
and
loope
jmp
push
cld
mov
shl
push
or
test
test
add
fldt
mov
pop
loope
dec
adc
inc
nop
mov
bound
addl
fs
test
adc
add
test
mov
pop
test
popa
dec
push
ret
hlt
test
xor
shlw
jno
sub
xchg
test
jp
cmp
test
clc
popl
inc
pop
dec
test
dec
enter
lods
cmc
test
xchg
idiv
pop
stos
add
xor
lret
dec
pushf
sti
movsl
in
inc
test
and
mov
popf
jb
test
cltd
pop
cmp
push
call
mov
es
sub
js
jp
inc
test
fsubr
fxch
mov
sub
stc
aam
imul
cwtl
mov
mov
add
lods
leave
iret
test
xor
add
sbb
push
cmpsl
test
jmp
cmpb
dec
sbb
fcom
sbb
test
pop
add
and
sub
mov
push
in
pushf
pop
rcll
mov
add
fwait
mov
test
pop
imul
lcall
dec
test
aas
imul
mov
cmp
test
adc
ficoml
loopne
test
std
mov
or
adc
mov
test
dec
out
sti
cmp
cli
test
bound
xchg
add
js
bnd
add
dec
sub
and
xchg
in
mov
mov
sahf
iret
aaa
push
shrl
lcall
add
dec
imul
mov
insb
inc
add
pop
not
lods
or
adc
adc
mov
pop
pop
or
aaa
imul
test
mov
push
push
cmp
dec
jp
pop
xchg
pushf
inc
fldl
roll
xchg
adc
in
js
pushf
int
mov
fsubrl
xchg
pushf
shll
cwtl
jg
pop
fnstenv
arpl
icebp
mov
adc
mov
and
bound
mov
das
ret
lcall
testl
fwait
data16
test
inc
aaa
lahf
jmp
and
in
pusha
add
daa
std
test
mov
jp
push
out
test
cmp
test
arpl
ss
int
xchg
test
and
mov
mov
std
xchg
test
int3
push
mov
dec
xchg
movsl
push
test
push
jle
jbe
das
test
mov
pop
loop
icebp
sub
and
mov
mov
int
mov
pop
leave
dec
jmp
dec
cmp
mov
sub
test
lods
adc
and
test
mov
loop
pop
dec
insl
jle
add
lods
pusha
sub
mov
test
sub
or
popa
sub
cld
test
mov
test
xor
mov
cmp
jle
pop
push
arpl
sbb
test
xchg
clc
adc
or
test
stc
xor
lret
sub
loope
inc
movsb
pop
xchg
mov
in
cwtl
imul
cmp
sbb
lock
or
aam
int
sbb
pop
mov
and
cmc
mov
mov
fiaddl
sti
push
cltd
lods
pop
sarl
jns
test
jmp
in
fwait
jnp
xchg
xor
or
test
xadd
sub
mov
aaa
pop
jp
pop
aas
addl
push
xlat
test
ss
pushf
stos
loop
inc
dec
xor
in
enter
fsubs
sub
push
inc
cwtl
pop
push
dec
aas
test
pop
push
adc
test
les
push
or
sbb
insb
ja
dec
push
add
xchg
mov
mov
dec
and
testb
lret
jbe
xor
xor
push
dec
adc
inc
leave
xchg
jnp
cli
daa
pop
test
int3
dec
stos
imul
in
test
fstl
cmc
insl
in
fidivs
ret
push
flds
scas
sahf
inc
mov
jnp
xchg
arpl
mov
or
test
loop
add
and
stc
xor
rcl
int3
cltd
pop
shlb
jbe
mov
push
xchg
push
jmp
insb
dec
sbb
test
dec
jmp
mov
lock
mov
add
push
sbb
jl
pop
push
pop
fcomip
add
xchg
test
mov
adc
pop
add
xor
divl
mov
sub
and
in
cli
inc
arpl
orb
test
sti
and
js
mov
rcl
adc
sub
test
movsb
mov
sbb
subb
adcb
scas
pushf
cwtl
push
mov
sbb
add
jp
adc
inc
popf
mov
in
mov
test
test
push
mov
sub
fadds
sub
test
imul
rcrl
jae
les
pop
adc
mov
jle
or
cmp
scas
ret
or
jg
push
jecxz
mov
dec
cmp
in
pop
outsl
xchg
adc
xor
fisubs
xor
dec
xchg
int3
test
pushl
jle
test
lcall
lods
ds
pop
iret
push
out
xchg
test
dec
jecxz
mov
mov
movsb
icebp
fimuls
sub
shl
mov
test
jl
mov
test
or
movsb
je
and
mov
inc
test
addr16
dec
fdivrl
in
sub
xchg
cwtl
test
xor
test
jl
add
leave
mov
mov
sub
push
rorb
or
test
lods
addl
test
cmp
push
test
mov
mov
cmpsl
arpl
mov
ja
pop
dec
mov
aaa
test
into
pop
arpl
xor
addr16
dec
aam
adc
push
xchg
push
jnp
std
aas
cmp
push
add
lds
clc
dec
aaa
cmc
and
inc
push
ret
xchg
mov
fs
shr
dec
pop
or
daa
jnp
pushf
addr16
lret
inc
lcall
fwait
mov
stos
push
mov
int
mov
mov
int3
test
leavew
cli
jecxz
jmp
dec
mov
mov
dec
test
xchg
sbb
mov
push
loope
mov
push
fisubl
shlb
int
xchg
sbb
mov
pop
stos
jo
cvtpi2ps
mov
pop
daa
stc
loopne
push
jns
in
push
lds
out
dec
addr16
sub
sar
xor
lahf
mov
adc
in
outsb
fnstsw
stc
mov
add
test
ss
ljmp
test
cmp
push
add
shll
testl
adc
sbb
sub
mov
dec
mov
movsb
dec
rcrl
daa
testl
sbb
stos
test
pop
bound
and
fimull
test
ds
not
xchg
das
loop
loop
add
in
test
sarb
js
mov
jnp
mov
stos
ds
pop
sbb
leave
dec
test
roll
push
jmp
fs
sub
or
arpl
and
aam
fdivrl
jl
test
cmp
jno
sub
call
shll
xor
and
test
pushf
sbb
popa
add
arpl
inc
stc
xchg
inc
mov
test
and
mov
and
test
or
sbb
and
add
leave
das
stc
jl
daa
and
test
fiadds
int3
insb
das
gs
cmp
inc
cltd
push
sub
pushf
dec
inc
cmc
sub
add
leave
test
pushf
pop
ret
mov
sti
data16
cmp
or
test
jge
or
sbb
or
test
std
push
inc
je
sub
add
repnz
scas
cmp
jecxz
pop
sbb
xor
mov
push
sub
mov
out
or
jge
dec
jo
mov
mov
movl
mov
sub
negb
pop
push
pushf
and
outsl
add
or
push
mov
roll
insl
loope
mov
add
jg
push
sub
repz
jbe
pop
sub
test
xchg
rorb
dec
addl
push
lahf
movsb
sub
or
sbb
test
mov
les
test
jae
mov
sub
dec
test
mov
repnz
sub
jnp
mov
test
cmp
js
pop
jmp
movl
loope
fisubl
and
mov
jns
push
fnstsw
mov
inc
jmp
sub
inc
shll
pop
es
test
dec
fildll
dec
lcall
testl
lret
test
lods
jae
test
sarl
jns
popf
repz
mov
cmp
add
mov
cmp
test
mul
sbb
mov
sub
data16
mov
jle
movsb
mov
std
mov
icebp
movsb
dec
sub
and
lods
inc
test
mov
sub
test
aam
rcrb
fldenv
and
push
lea
inc
sbbb
or
xchg
push
mov
lret
push
xchg
xor
enter
cmpsl
repnz
xor
into
lea
cmp
fbld
imul
dec
sub
pop
stc
jns
arpl
in
enter
jne
dec
xchg
push
push
hlt
test
cmp
test
test
leave
out
iret
test
pop
jo
jns
imul
xor
sti
and
test
shl
cltd
in
mov
dec
jbe
icebp
in
sub
add
adc
mov
icebp
std
in
lahf
insb
adc
adc
push
leave
adc
xchg
cmc
std
sub
inc
xchg
add
bound
je
adc
lahf
mov
adc
cmp
cmp
jae
test
mov
arpl
inc
lcall
testb
inc
xchg
in
out
dec
into
fdivp
jb
pusha
shll
sbb
dec
jp
cmp
je
out
outsb
and
shll
jbe
inc
or
mov
test
mov
cmpsl
data16
mov
xor
clc
lods
push
test
stos
lret
push
neg
fldenv
in
test
push
enter
fwait
mov
xor
lds
test
pop
sbb
movl
lcall
add
gs
arpl
jle
ljmp
sbb
scas
pop
lret
ss
lret
xor
in
clc
sti
pminub
test
jp
push
or
data16
mov
adc
mov
sbb
mov
jp
fists
addr16
fisttpll
xchg
and
nop
sub
dec
xor
jg
mov
ss
mov
mov
js
in
lock
fs
mov
stos
test
lods
push
sub
and
push
lds
dec
lock
scas
adc
dec
mov
mov
add
out
aad
mov
inc
xchg
int
xlat
test
ds
or
mov
sbb
sub
out
cld
outsb
push
iret
mov
add
jnp
pop
mov
dec
ss
mov
and
in
or
stos
loope
leave
ds
cmp
test
fimull
mov
clc
rclb
adc
filds
mov
test
idivl
push
hlt
and
test
or
sbbl
call
shrb
int
mov
dec
dec
push
shll
in
sub
add
cmc
cwtl
inc
iret
cltd
cmp
mov
jnp
mov
movsb
dec
push
jp
fisttpll
test
sbb
xor
cmp
xchg
push
add
or
jmp
inc
cmp
fisubrl
loope
lret
loop
push
es
mov
lret
push
jns
jmp
add
sub
xlat
enter
xchg
test
mov
es
xor
adc
and
mov
push
push
mov
testl
in
movsb
movsl
call
add
rcr
test
imul
push
addr16
test
sub
test
fistps
fnstenv
mov
push
jb
push
mov
loop
testl
dec
xor
call
jno
or
cmpsl
scas
cmp
cltd
sub
pop
xchg
or
sub
test
fwait
outsl
jg
pop
or
sub
adc
out
push
movsb
popf
das
pop
lahf
pop
std
daa
fistl
shrl
faddp
cmc
sub
xchg
test
aas
pop
mov
into
pop
adc
mov
sbb
bound
push
in
idivb
sub
out
outsl
movsb
dec
cld
ficompl
mov
je
dec
cld
scas
ret
insb
leave
sub
mov
mov
xchg
fbld
bound
cmc
fnstcw
mov
test
ja
std
arpl
fcomi
mov
hlt
or
mov
mov
stos
dec
mov
insb
test
dec
fcos
dec
sub
jmp
jecxz
dec
pushf
push
test
lret
arpl
movsl
cmp
pop
cmp
iret
push
push
and
jl
lcall
jle
add
cmp
mov
inc
int3
stos
add
icebp
adc
sbb
mov
jp
jb
test
stc
or
popa
pushf
arpl
mov
xchg
into
shl
bound
ret
jne
add
out
je
fwait
lret
insb
fdivrl
mov
or
push
add
int
mov
xor
test
out
lea
data16
cmc
xchg
arpl
int
sub
mov
push
lods
and
ss
jns
mov
push
fldl
addb
test
outsb
aam
arpl
stos
pop
fldln2
fcomps
sub
cmp
je
test
lcall
lcall
mov
cmc
cli
test
enter
cmp
pop
pop
inc
mov
and
popl
jns
lret
xchg
push
stos
fldl
inc
lret
push
add
xor
pop
out
or
es
repnz
and
test
sbb
dec
push
mov
out
daa
xor
and
out
mov
enter
inc
jecxz
and
sbb
imul
adc
loopne
xor
and
test
sbb
test
xchg
rcr
dec
inc
dec
mov
mov
test
cmc
mov
add
sbb
pslld
decb
push
inc
dec
test
jns
dec
clc
lcall
dec
and
test
into
add
movsb
mov
pop
pop
dec
pop
shlb
sbb
test
cli
inc
push
imul
mov
jmp
jns
ret
test
fcmovnb
adc
lret
sbb
mov
or
push
jnp
sub
cs
and
dec
or
loopne
cmp
mov
test
pop
jp
out
movsb
add
fstpt
adc
jle
test
loop
jl
pop
or
fsts
scas
dec
addr16
addl
push
cmpsl
inc
adc
push
pop
and
andl
mov
scas
jecxz
xlat
add
inc
test
outsb
sahf
ja
into
jbe
test
mov
orl
aaa
sub
xor
out
fstpl
insb
mov
adc
loop
sarb
xchg
cltd
imul
test
mov
inc
pop
test
lcall
test
and
cmpsl
leave
push
test
scas
pop
stos
test
inc
sbb
sub
mov
xchg
sub
aas
and
adc
mov
pop
and
out
sub
lahf
jbe
in
lcall
aad
lea
hlt
fwait
cltd
enter
mov
xchg
mov
inc
arpl
mov
out
dec
test
test
dec
sahf
rcrl
test
dec
cmpsb
jp
adc
je
push
pop
ss
inc
xor
push
mov
xchg
jecxz
test
add
in
int
test
test
cwtl
rcl
pop
std
pop
sub
mov
sbb
xchg
jge
fwait
arpl
xorl
push
sarb
dec
arpl
mov
test
lds
sub
mov
cmp
test
xchg
mov
test
cmp
ret
push
sub
sahf
mov
out
loopne
adc
out
xor
call
mov
pop
xchg
test
adc
jns
jp
dec
ret
test
hlt
out
in
loope
sub
push
pop
shr
mov
popa
and
out
mov
cmp
jecxz
test
andb
xchg
fstpt
push
test
push
pop
add
nop
mov
xor
push
inc
shlb
outsb
in
dec
jl
in
add
testl
sub
ja
insb
fs
movsb
adc
inc
rolb
and
mov
cli
cmp
pop
and
icebp
add
pop
test
or
insb
das
and
pop
xlat
es
sub
adc
int3
mov
movaps
sub
test
pop
or
mov
je
shl
loope
jp
test
ljmp
dec
dec
cmp
in
test
test
push
jmp
das
negb
inc
cld
and
mov
mov
std
jmp
fistl
jp
pop
test
test
cmp
dec
es
in
sub
jp
pop
add
dec
cmpb
arpl
cmpsb
ja
and
test
out
inc
jbe
sbb
dec
mov
cmpsl
into
cmpsl
push
mov
enter
cmp
test
es
dec
dec
sub
jl
jp
add
das
sbb
cmp
test
sbb
lret
and
pop
xchg
movsb
aaa
cmp
pop
ja
stos
mov
sbb
divl
adc
sbb
mov
ja
inc
add
fs
rcrb
xor
jge
test
dec
inc
leave
push
cmp
jno
adc
jnp
rcrl
add
push
add
xchg
cmp
testl
pop
dec
or
mov
inc
popf
out
mov
movsb
dec
jle
fldenv
pop
sbb
test
div
shlb
jl
gs
mov
idivb
sbb
rcl
pop
mov
ficomps
xorb
dec
mov
lods
bound
cmpsl
mov
mov
scas
in
dec
cmp
lret
sub
aas
mov
mov
ss
test
add
insb
mov
movsb
out
xor
mov
int
out
clc
xchg
inc
push
test
dec
outsb
leave
cmpsb
xor
mov
or
stc
loope
cmc
je
test
cmpsl
imul
out
outsl
sub
andl
push
mov
arpl
popa
xor
dec
adc
jb
lea
lret
movsb
jmp
pusha
and
fdivr
adc
push
sub
push
pop
and
xchg
cmp
lds
mov
packsswb
pop
std
xchg
mov
test
add
add
ret
mov
in
popa
movsb
lret
out
push
jmp
sbb
inc
fiaddl
cwtl
jp
dec
mov
mov
pop
out
mov
testl
mov
rorb
push
push
dec
pusha
iret
repz
inc
jp
int3
push
les
mov
test
lcall
in
test
fwait
mov
in
stos
push
inc
dec
test
and
daa
into
sub
out
popa
dec
or
mov
test
inc
aas
ja
sub
mov
xchg
mov
or
test
xchg
jne
dec
clc
or
roll
lret
cmp
test
xlat
xchg
cld
test
push
fwait
push
lahf
test
cmp
xor
movsl
mov
fadds
or
xchg
add
sub
xchg
aam
or
pop
sarl
test
movsb
mov
filds
clc
push
stos
test
imul
pop
mov
test
push
or
in
mov
dec
sub
sub
out
jp
xchg
cmp
inc
mov
icebp
sbb
movsl
pop
or
adc
sbb
dec
test
mov
movsb
inc
mov
add
cmp
lea
movsb
sub
jnp
pushf
mov
orb
cmp
mov
les
inc
mov
ret
popa
adc
push
std
mov
inc
int3
mov
pop
js
cs
inc
or
push
xchg
xor
aas
dec
movsl
rorl
pop
rclb
cmp
mov
test
cmp
rorb
in
dec
test
lahf
bound
insl
out
mov
add
bound
push
mov
test
mov
icebp
sti
and
mov
mov
daa
jnp
push
test
mov
adc
mov
push
test
mov
fld
lods
enter
mov
xchg
sub
mov
fs
mov
cmp
mov
flds
test
dec
and
dec
adc
cmp
push
and
daa
enter
cmc
lcall
imul
js
and
xchg
test
out
dec
loopne
test
or
cs
dec
sub
mov
pop
mov
xor
lods
aaa
cmpsb
lds
test
ds
sub
mov
test
mov
dec
jb
and
mov
scas
pop
adc
mov
stc
xchg
push
bound
xor
inc
lds
movsb
sub
xor
pop
enter
push
pop
push
gs
jne
popa
in
mov
add
jbe
pop
mov
popa
add
dec
xor
mov
jne
outsb
mov
dec
insl
xchg
popa
add
dec
xor
sub
and
cs
sbb
loop
inc
lcall
sahf
push
fdivrs
mov
and
out
jge
mov
lds
lcall
test
push
jno
and
movsl
test
mov
mov
xchg
or
sbb
lcall
popf
stos
repnz
xchg
test
test
xchg
or
bnd
test
scas
jmp
sbb
outsl
ja
lahf
pop
inc
sub
adc
fidivl
mov
ret
mov
bound
mov
les
out
jp
xchg
mov
push
cmpsl
dec
lcall
lods
xlat
adc
cli
test
clc
fsubl
insb
daa
pop
movsb
loop
dec
lock
in
xor
adc
mov
cltd
pusha
dec
enter
lea
sub
sbb
out
mov
or
mov
test
sti
add
mov
pushf
bound
inc
sbb
rolb
stos
pop
sub
shl
jle
xor
in
mov
cwtl
mov
cmpsb
xchg
test
test
js
cli
jp
sub
cmp
mov
inc
insl
ret
pop
jl
push
xlat
lahf
movsl
add
jne
xor
test
fisubrl
stc
icebp
xchg
test
in
jo
cmp
dec
insb
adc
mov
jle
test
sbb
int
push
clc
dec
test
test
cmp
lcall
mov
sbb
mov
jb
lret
test
dec
xorb
movsb
test
mov
mov
mov
dec
jmp
adc
add
bound
orb
mov
scas
mov
and
mulb
mov
movsl
in
dec
sub
inc
push
mov
aad
cmp
test
or
iret
je
dec
clc
add
pushf
jg
mov
test
test
dec
or
movl
mov
test
out
mov
cs
testl
push
sub
rorl
test
icebp
jmp
and
mov
cmpsl
push
push
cld
flds
daa
mov
xor
ret
ja
out
dec
or
sbb
fistl
cmp
bound
or
add
les
ja
mov
xchg
xchg
cmp
loop
xor
xchg
xor
lods
aaa
test
iret
dec
das
push
push
int
add
int
jne
stc
loop
xchg
leave
enter
lcall
pusha
mov
outsl
adc
jb
leave
mov
stc
dec
std
mov
test
enter
lcall
clc
jle
nop
pop
fildll
int3
dec
mov
aaa
jns
test
jae
test
add
arpl
or
lea
outsb
test
mov
cmp
arpl
jecxz
pop
mov
xor
and
jg
mov
fld
sbb
push
test
mov
ja
or
sahf
mov
loope
test
jae
pusha
out
adc
jns
mov
repz
sbb
fwait
mov
test
and
jmp
mov
imul
sbb
push
lret
mov
call
popa
mov
inc
mov
inc
int
andb
mov
xor
aaa
pop
out
push
arpl
ret
inc
mov
das
push
mov
ds
mov
sub
imul
ficoms
mov
cltd
push
push
lret
mov
arpl
jmp
pop
jbe
test
outsb
ret
decb
mov
mov
pop
and
mov
das
push
fistps
push
rorb
repnz
mov
xchg
ss
divb
mov
ljmp
pop
dec
sti
test
sub
mov
push
mov
mov
out
cmc
orb
loop
test
jecxz
in
aad
mov
xchg
adc
cli
dec
loop
inc
and
xchg
out
lock
jnp
sub
les
clc
mov
addr16
add
nop
ror
mov
fimull
mul
or
test
jge
sbb
pop
push
xchg
pushl
aam
jmp
cmpsl
mov
cmp
jl
andb
xchg
mov
dec
xlat
sarb
test
mov
adc
test
mov
mov
sub
lret
movsb
mov
test
or
sti
das
shlb
cmp
fadd
rcrb
inc
add
mov
aam
push
xchg
xchg
dec
push
pop
adc
fwait
push
pop
mov
fcomps
add
pop
inc
fildll
and
test
or
jae
cmp
outsl
add
test
inc
sub
jmp
mov
mov
aad
and
adc
in
popa
add
sbb
ja
fwait
je
leave
pop
sub
inc
push
cmp
mov
add
or
jg
in
rcll
ret
cmpsl
mov
or
faddl
shl
test
stos
and
mov
ljmp
je
mov
pop
fwait
roll
int3
pop
movsb
fmull
adc
add
fimuls
leave
out
ret
jl
push
pop
bound
sbb
xchg
or
mov
xlat
xchg
loop
test
push
inc
js
loopne
cmp
mov
mov
mov
test
xor
and
xchg
or
cmp
test
loopne
dec
mov
add
or
fstps
int3
cbtw
adc
aam
lret
fs
xchg
inc
test
dec
mov
rcl
and
push
aas
into
frstor
mov
test
cmpsb
push
enter
inc
aad
test
je
rep
stc
and
xchg
sbb
xor
pop
int3
cmc
push
leave
sbb
in
jo,pn
mov
aam
cltd
mov
pop
gs
lret
and
fisubrl
test
movl
add
xor
jl
les
cmp
push
leave
dec
fistpll
test
iret
or
push
test
pop
mov
sbb
imul
cmpsl
push
and
in
jp
popf
jnp
mov
jns
push
mov
mov
or
movsb
std
bound
test
jb
mov
mov
inc
rolb
test
adc
cmp
lret
mov
enter
push
add
mov
test
test
insl
imul
mov
mov
push
fsub
enter
mov
push
or
push
ret
loopne
push
cmp
movsb
mov
bound
lcall
fsts
xor
stos
cmp
movsl
test
inc
mov
stc
aaa
jmp
cmpl
sbb
in
mov
cltd
ret
inc
jp
daa
mov
arpl
clc
push
jns
cmp
test
fisubl
xchg
stos
xchg
loope
pop
ret
sub
popa
subl
push
cwtl
adc
push
ds
lods
test
jp
push
dec
rolb
fdivr
mov
out
lret
jmp
push
enter
notb
inc
pop
xor
pop
xchg
sti
arpl
fnstcw
add
icebp
loope
addl
and
xchg
jge
mov
push
in
ret
push
sbb
dec
movb
in
add
push
sbbb
outsl
test
mov
mov
arpl
mov
mov
pusha
xchg
mov
mov
mov
imul
or
stc
pop
test
test
into
mov
xchg
push
adc
test
sub
pop
test
push
hlt
cld
enter
mov
scas
cmc
movsb
push
lcall
mov
sub
pop
cli
sti
test
adc
jecxz
test
mov
into
dec
cwtl
lahf
les
jle
sub
cmp
mov
mov
in
mov
test
fldt
aad
cltd
mov
sbb
xchg
push
mov
xchg
repnz
call
leave
mov
in
push
test
mov
les
fwait
pushf
dec
sub
movsb
fdivrl
es
movsb
into
xchg
or
std
cmp
movsl
test
pop
icebp
cmp
jae
xchg
xor
or
scas
or
fidivrl
pop
jg
testb
xchg
or
cmp
jns
lret
icebp
andb
pop
mov
mov
mov
daa
cltd
jle
jae
into
enter
cmpb
jno
test
dec
inc
movsb
test
mov
mov
jo
adc
movsl
loope
test
push
mov
mov
adc
icebp
test
inc
ja
inc
push
es
test
ret
js
mov
xchg
and
mov
stos
add
mov
out
lret
in
mov
test
loope
mov
jns
test
fnstenv
int
mov
push
loopne
jmp
jmp
dec
lods
dec
mov
mov
cmp
jp
inc
test
push
jo
pop
push
mov
jne
test
enter
sub
jnp
daa
sub
adc
jl
test
push
not
rcll
sub
pop
mov
add
inc
cmc
lahf
outsb
ror
test
out
and
lds
pop
out
mov
mov
ljmp
push
stos
arpl
shrb
push
xchg
into
mov
in
jne
dec
inc
ret
mov
outsb
dec
mov
into
ss
stc
das
inc
lret
push
in
leave
mov
cmp
inc
lcall
or
sub
test
xor
mull
dec
cs
test
mov
mov
and
inc
sbb
arpl
dec
add
mov
cmp
sarb
das
cmpsl
push
adc
test
leave
cmp
cld
lret
pusha
dec
add
cld
lcall
cmc
jl
data16
ss
inc
adc
insb
orl
inc
out
les
dec
sbb
and
mov
hlt
push
fsin
dec
test
or
push
enter
popa
dec
mov
mov
mov
mov
subb
mov
push
cltd
loop
mov
push
pushaw
push
xor
pop
std
mov
pop
and
test
jnp
add
jge,pt
mov
enter
or
pop
popa
das
pop
andb
movsl
inc
sub
fistps
bound
mov
cld
cmp
and
or
ljmp
inc
jp
fxch
clc
dec
fwait
push
fcomp
insb
and
test
mov
or
or
andps
ret
movsb
adc
aam
std
aaa
cmp
filds
sti
add
or
insl
dec
test
jp
pushf
test
or
rcr
ja
rclb
test
push
cmp
pop
mov
inc
push
push
test
ja
and
cmpsl
sbb
and
lea
test
mov
sub
and
sub
mov
mov
or
clc
andl
test
lret
out
push
loope
shll
inc
dec
cltd
mov
icebp
mov
repz
jnp
jp
and
pop
mov
pushf
mov
pop
faddp
mov
movl
and
test
adc
data16
movsb
jmp
cli
mov
xchg
xor
fiaddl
sbb
in
movsb
data16
jl
lret
cltd
sbb
mov
mov
adc
mov
out
test
into
push
jbe
clc
pop
and
iret
mov
test
jb
push
mov
pop
xor
and
fldl
aad
lea
and
inc
test
sub
lahf
movsl
in
jb
dec
test
inc
push
call
js
test
ljmp
out
movsl
pop
adc
popa
and
stc
ror
mov
mov
shlb
xor
lret
test
test
cmp
mov
ret
xor
pusha
test
stc
add
add
push
cmp
mov
out
push
je
aas
pop
xor
inc
or
sbb
xchg
sub
push
push
inc
pushf
test
push
test
xor
test
mov
jecxz
adc
scas
cmp
jg
shrb
lahf
mov
jae
push
in
outsl
ss
popf
test
cmp
mov
cli
dec
mov
aam
xor
pop
mov
pop
test
pop
xor
roll
push
mov
fldl
adc
inc
mov
int
adc
jmp
and
or
dec
lea
or
test
push
ret
hlt
and
bound
mov
pop
inc
sbbl
outsb
imul
movsb
mov
push
loope
sub
mov
sub
mov
cmp
test
addl
stos
inc
inc
push
push
bound
cli
test
mov
in
and
out
sbb
test
pop
mov
test
xor
test
cmp
out
outsl
sbb
xchg
in
inc
into
or
fwait
dec
jg
mov
pop
sbb
imul
test
mov
les
or
imul
mov
stc
dec
icebp
daa
test
add
mov
pop
es
test
ficoms
shrb
int3
mov
xchg
test
sub
icebp
bound
or
xchg
sbb
cmpsb
pop
in
out
arpl
mov
test
pop
cltd
and
mov
data16
sub
mov
dec
clc
mov
mov
pop
cwtl
xorb
test
imul
scas
mov
testb
test
inc
stc
xchg
in
inc
jbe
loop
pop
push
xchg
hlt
jo
push
pop
mov
add
arpl
ljmp
scas
and
test
and
cmpsl
loopne
movsb
mov
inc
and
push
mov
test
dec
bound
pushf
sbb
mov
fsubl
sub
mov
imul
jns
mov
xor
or
mov
and
movsb
add
cmp
fs
sbb
cmp
and
inc
cld
xchg
jle
xchg
pushf
jbe
fsubs
sar
cmc
and
jle
pusha
movsb
cli
fnstcw
data16
inc
loope
push
into
and
cltd
sub
test
ds
pop
test
mov
mov
cmp
sbb
ss
and
bound
fsubrs
cmpsb
mov
jl
and
fiaddl
movsl
popa
out
movsb
jns
popf
mov
cwtl
mov
test
lds
dec
mov
jne
jg
call
cltd
sbb
in
in
pop
in
mov
pop
mov
sbb
push
test
or
test
cmp
add
cmp
pusha
loopne
push
aad
inc
jp
cmpsb
sub
fsts
sbb
inc
test
pop
push
or
jmp
pop
test
nop
pop
sbb
pop
xchg
roll
adc
in
xor
push
mov
test
adc
push
push
leave
mov
sbb
and
mov
ja
mov
adc
stos
roll
sub
xchg
or
dec
push
loop
pop
dec
mov
leave
pop
test
pop
mov
in
sbb
mov
push
lret
xchg
in
xchg
mov
and
mov
mov
mov
repz
xor
mov
test
push
dec
mov
arpl
inc
js,pn
pop
ss
int
xchg
adc
inc
movsb
das
cmp
mov
adc
fcom
movsl
cltd
and
test
daa
sbb
inc
pop
test
add
push
mov
out
xchg
xor
sarl
dec
ss
aam
fistpl
mov
iret
cmp
cmp
add
jp
adc
mov
lret
nop
cltd
les
out
pop
mov
xor
cmc
jp
stos
inc
ret
inc
shr
cmp
test
rolb
dec
mov
les
jo
push
adc
pop
stc
or
orb
push
cmp
test
pop
jmp
mov
mov
dec
mov
pop
mov
pop
jecxz
in
out
add
popf
push
and
push
mov
mov
shll
sbb
and
loop
mov
enter
add
add
ss
dec
xlat
push
sub
movsl
movsb
sub
mov
lret
popl
stc
lods
mov
and
test
pop
or
mov
in
and
inc
dec
scas
xchg
test
push
stc
dec
aam
js
arpl
push
sbb
rorl
or
xchg
gs
std
push
test
mov
xchg
xchg
and
aaa
mov
add
test
jmp
add
in
inc
outsl
in
andl
xlat
std
mov
test
pop
jle
pusha
cmpsb
mul
mov
cmc
and
sub
aam
sar
jne
outsl
mov
test
lcall
arpl
xchg
cmp
ljmp
sbb
mov
xchg
stos
ds
xchg
mulb
xor
cmc
pusha
out
cld
test
dec
mov
lcall
test
repnz
shl
lds
lcall
es
ds
cmpsl
int3
call
insl
push
inc
aaa
fwait
stos
sbbl
mov
cld
mov
xlat
push
testb
adc
fldenv
test
xor
sub
inc
sbb
mov
in
xor
dec
pop
mov
cmp
test
cmp
mov
jo
and
popl
inc
fildl
push
xor
cmpsl
or
bound
int
push
fdivrp
lds
fwait
test
xchg
into
push
mov
in
xchg
test
mov
arpl
sub
inc
fiadds
mov
fldenv
movsb
out
sarb
test
push
jne
gs
inc
push
push
pop
mov
out
fninit
mov
in
test
fadds
sarl
or
test
pop
leave
sub
mov
pop
cltd
push
imul
mov
pop
test
ret
rcrl
int3
lea
iret
push
mov
xor
int3
or
je
xchg
mov
loopne
arpl
loop
add
or
xor
sub
dec
cmpsb
out
faddl
pop
pop
out
movsb
or
xchg
xchg
mov
jnp
ret
adc
iret
test
mov
dec
pop
aas
dec
push
dec
inc
test
add
add
xchg
push
and
and
jl
xor
sbb
pusha
test
xchg
sub
xor
test
mov
inc
dec
lcall
cmp
push
mov
insl
test
push
test
pop
mov
dec
mov
and
mov
dec
test
mov
dec
mov
pop
nop
sub
int3
iret
xchg
les
in
and
lahf
mov
cmp
pushf
testl
lea
loop
test
test
pusha
ficomps
adc
mov
arpl
sbb
push
mov
int
push
add
stos
dec
and
out
lret
or
test
adc
xor
mov
and
dec
mov
pop
test
out
rclb
mov
fstl
pushf
pop
movsl
pop
arpl
mov
push
sub
test
lcall
in
ret
rol
divl
testb
test
test
imul
arpl
pushf
push
mov
cmp
stos
test
lock
nop
lret
or
outsl
pop
stc
je
and
sub
push
loopne
in
lret
test
xlat
pusha
mov
and
repnz
sarb
fisttpll
insb
cmc
inc
inc
pop
psrlq
sub
shll
out
xchg
xor
mov
inc
xorl
jl
lret
testb
ret
dec
into
dec
fisttpl
scas
mov
test
pop
push
movsb
fwait
cmp
imul
xchg
push
daa
test
xchg
lcall
mov
gs
insb
or
pop
mov
mov
dec
into
test
leave
lret
jg
outsb
arpl
test
int
movsb
dec
mov
popf
or
bound
inc
std
mov
cwtl
cli
lods
addb
mov
scas
mov
mov
popf
or
fcomps
test
aam
mov
inc
push
testb
pop
sub
push
repz
movsw
test
jb
out
and
push
fstp
push
sub
dec
push
mov
lret
jp
in
ds
pusha
sub
mov
jl
test
xchg
cmp
mov
jle
push
movsl
mov
pop
leave
clc
jmp
loop
test
cmp
sub
add
fiaddl
xor
or
stos
arpl
mov
or
test
jnp
in
and
lock
test
jmp
arpl
les
mov
arpl
idiv
xor
lds
mov
xchg
test
dec
or
mov
test
jmp
lea
mov
loopne
xchg
mov
lret
xchg
xchg
mov
mov
leave
hlt
std
sub
cld
mov
iret
xor
mov
mov
arpl
push
enter
ja
jge
and
fs
out
aaa
add
test
cmp
sub
dec
dec
andb
jno
dec
out
test
loop
pop
test
and
xchg
gs
sbb
pushf
mov
in
in
sarl
push
movsb
xchg
ds
outsb
mov
dec
mov
ljmp
push
xchg
bound
push
daa
jb
jo
mov
out
out
sub
inc
ja
xchg
sub
test
push
outsb
jnp,pt
inc
test
push
imul
mov
int3
ret
inc
or
lret
pusha
adc
outsl
mov
xchg
into
xchg
arpl
mov
sbb
mov
push
test
loopne
hlt
les
and
sbb
cltd
adc
test
nop
push
lret
adc
test
mov
mov
dec
and
cmc
gs
and
jl
push
test
dec
mov
jb
jne
pop
push
dec
inc
push
imul
pop
movsl
stos
adc
jnp
repz
in
in
dec
test
cmpsb
add
pop
xlat
test
mov
int3
inc
sbb
movlps
mov
or
mov
mov
movsb
xchg
repnz
cmp
cmp
mov
pop
sub
mov
lds
loope
ret
fdivrl
pop
pop
sbb
out
pop
lds
cmp
jp
enter
xchg
insb
mov
inc
insl
or
psllq
test
jmp
ja
push
pop
sub
lret
test
fdivs
sbb
dec
test
in
mov
mov
test
out
into
lret
or
out
fnstenv
scas
or
movsb
adc
sub
rdpmc
shll
test
popa
jae
negl
int
jo
loop,pn
or
inc
movsl
sub
pop
inc
test
xchg
test
pop
arpl
inc
aad
hlt
or
xlat
test
pop
lahf
jg
lret
pop
js
imul
jle
test
cmpsl
stos
loope
mov
add
mov
push
in
cmp
fwait
mov
nop
cmpb
cs
push
cmpsb
add
bound
mov
and
in
rcl
sbb
in
lahf
mov
stos
into
mov
ds
shrl
test
stos
es
cmpsl
insl
nop
test
loop
ss
stc
or
lds
out
test
cli
loope
sub
pop
out
xchg
push
clc
lcall
xchg
movsb
mov
testl
inc
push
call
dec
mov
test
rol
push
loope
push
test
ret
dec
xchg
or
sub
jp
lret
cld
sahf
sub
cli
nop
cwtl
es
test
pop
push
scas
mov
mov
sub
mov
add
sbb
int3
inc
std
fmuls
xchg
fnstenv
leave
test
call
pop
cmp
and
fsts
mov
adc
jae
std
add
cwtl
sub
rorb
push
test
inc
mov
push
into
clc
movsl
arpl
outsb
lcall
insl
in
dec
pop
aaa
cltd
pop
mov
inc
sbb
rolb
arpl
movsb
sub
jb
in
subb
xchg
lcall
test
sbb
test
or
test
sbb
inc
sub
sbb
mov
push
inc
cld
dec
pop
outsb
and
cmp
test
stc
fsqrt
mov
or
stos
test
lret
shll
sti
sub
out
dec
movsb
ljmp
mov
test
inc
cli
jbe
cmp
mov
or
pushf
leave
repnz
and
test
mov
inc
inc
test
mov
mov
sub
fistps
pop
xchg
test
adc
push
push
and
test
lcall
jg
int3
push
mov
in
push
test
pop
rcl
lods
or
int
and
dec
inc
pop
in
cmp
inc
sub
xchg
pop
call
xchg
cwtl
cld
test
dec
and
cmc
and
push
int3
test
call
outsl
ret
mov
push
test
mov
mov
ret
sub
out
in
clc
mov
dec
pop
fwait
in
lret
mov
mov
mov
and
pop
repz
adc
lret
or
movsl
xchg
xlat
test
in
or
ss
test
add
pop
sub
test
lahf
cwtl
faddl
push
push
inc
mov
pop
test
notb
mov
sub
data16
or
jae
test
or
pop
and
arpl
out
xor
in
inc
mov
test
loopne
jecxz
les
mov
cmpsb
ret
movsb
test
mov
repz
in
xchg
test
cmp
xchg
inc
and
dec
inc
test
test
push
xchg
xor
loop
xchg
test
inc
add
popf
mov
adc
in
test
lahf
lds
mov
bound
test
pop
sbb
xchg
flds
sub
cmpsl
imul
in
cld
inc
fnstcw
test
mov
test
test
dec
pop
stos
lahf
mov
cmp
sbb
test
dec
jecxz
stos
sbb
dec
mov
sub
ja
mov
or
in
test
mov
lds
dec
ret
and
jle
xchg
ret
popa
leave
add
mov
shl
pushf
out
ds
dec
test
jg
cmpsl
lret
sbb
fwait
dec
lock
lret
adc
fcmovnb
popa
cmp
int
xor
lock
outsl
mov
test
dec
xor
mov
mov
dec
lds
push
xor
sub
stc
add
in
lret
jbe
and
cltd
mov
lret
mov
and
cmc
arpl
mov
and
pop
inc
mov
daa
pushf
ja
pop
mov
movsl
push
or
arpl
pop
mov
inc
and
inc
fsin
or
test
dec
pop
xchg
test
movsl
adc
or
xchg
cmpsb
pop
mov
daa
xchg
fsubrl
leave
inc
xlat
jecxz
jnp
and
stos
cld
cmpsb
sub
or
dec
loop
out
jecxz
inc
cmp
fnstenv
push
bound
add
pop
mov
arpl
lcall
arpl
je
test
sub
lods
roll
push
icebp
arpl
and
jo
mov
sbb
mov
pop
mov
test
dec
jmp
xchg
xor
xchg
mov
test
push
dec
push
mulb
sub
and
jns
push
mov
or
inc
imul
xchg
daa
push
jge
pop
adc
add
and
adc
test
sub
jmp
das
lcall
aaa
mov
test
out
out
and
push
into
stos
jge
lock
test
sub
bound
jl
outsl
test
lcall
pushf
shlb
mov
addl
sub
into
sbb
test
sub
test
and
ljmp
pushf
fidivs
cmp
push
test
pop
cmp
repnz
jo
lret
ja
adc
or
outsb
popa
fiaddl
inc
test
test
clc
dec
mov
ds
arpl
jb
imull
jo
dec
cwtl
mov
add
inc
pop
cmc
je
idivb
test
lret
jmp
sub
arpl
add
cmp
aam
push
adc
and
dec
test
arpl
cmpsl
sti
divb
adc
test
jmp
out
test
fs
add
rcll
mov
popf
pop
popa
in
and
and
roll
test
movsl
movl
call
inc
lock
pop
movsb
pop
sbb
dec
xor
fcomps
mov
cmc
icebp
jle
fcoml
mov
dec
es
jns
jne
lahf
pop
shrb
mov
xchg
lret
or
and
mov
mov
fadds
xchg
cmp
loop
lret
les
mov
and
jge
push
outsb
bound
repnz
cli
cmpsb
push
test
xchg
sub
jnp
das
sbb
cli
dec
pop
test
or
fadds
lock
out
in
shrl
mov
into
xchg
bound
cmc
test
mov
mov
test
andl
mov
adc
mov
inc
enter
in
aaa
xchg
repnz
sbb
hlt
cwtl
sbb
push
mov
out
rcrb
stos
sub
cwtl
fwait
pop
mov
in
les
xchg
mov
xor
and
push
xchg
dec
in
xchg
and
mov
mov
inc
rolb
cmc
test
out
mov
mov
dec
cltd
pop
in
test
mov
push
bound
das
jbe
imul
cli
test
in
sub
pusha
or
daa
test
movsl
cs
test
stc
sahf
nop
loopne
jne
test
cmpsl
pop
incb
mov
pop
jecxz
ret
ja
jns
arpl
mov
repz
popa
divb
pop
dec
pop
inc
lret
test
mov
adc
sahf
mov
pop
insb
dec
or
jp
push
in
lods
xchg
pop
lahf
jp
push
test
jnp
jmp
test
cwtl
fiadds
adc
mov
and
dec
mov
flds
outsb
push
jbe
loope
mov
test
dec
aaa
mov
sbb
push
stos
mov
and
lcall
sub
or
arpl
push
in
pop
dec
mov
pop
std
xor
pushf
adc
aam
pusha
lods
inc
mov
mov
ds
sbb
mov
mov
std
mov
mov
add
push
mov
sbb
xlat
mov
addr16
les
imull
xchg
sbb
or
sbb
repz
loopne
lcall
hlt
test
fcomp
test
mov
pushf
or
stos
mov
or
test
jb
test
out
lods
xchg
sbb
xchg
jnp
sub
ja
and
out
mov
leave
adc
bound
add
shl
idiv
pop
dec
mov
test
dec
mov
xor
mov
test
addr16
inc
int
sub
test
pop
jbe
ficoms
mov
test
cmpb
pusha
incb
movsb
lahf
add
movsl
popf
sbb
mov
into
es
das
inc
mov
mov
push
lods
or
xchg
cmpsb
je
mov
test
pop
adc
nop
pushf
push
jecxz
das
loop
test
jnp
push
es
add
rorb
sub
mov
push
pop
push
xchg
out
ja
xor
cmp
xor
imul
insb
arpl
test
sbb
xchg
sub
fadd
in
movsb
int
cli
mov
and
das
bound
adc
aaa
popf
mov
and
test
cmp
adc
push
inc
pusha
cld
push
imul
insb
mov
sub
loope
pushf
test
add
inc
cld
pop
lfs
test
fsub
daa
sub
call
outsb
imul
in
hlt
xorb
add
mov
aad
push
test
ret
mov
push
adc
test
into
int3
mov
jnp
mov
movsb
ja
or
sub
int
in
dec
out
mov
xchg
mov
push
mov
les
dec
mov
jbe
sub
mov
adcl
movsb
cld
cmpsl
into
xchg
dec
push
pop
mov
add
test
test
mov
imul
test
mov
xchg
inc
cmc
bound
mov
stos
flds
cltd
ret
mov
pop
out
sub
add
jg
stos
adc
movsb
or
sub
loope
cli
push
leave
bound
xlat
or
push
enter
mov
and
xchg
mov
mov
jmp
mov
fstpt
add
stos
pop
out
or
or
mov
hlt
jle
cli
mov
leave
or
scas
adc
sbb
jge
movsb
bound
or
in
movsl
sub
dec
loop
mov
rcll
lcall
xor
int3
sub
adc
andb
adc
popf
test
adc
sahf
test
xchg
repnz
mov
push
cld
lods
and
lahf
jae
call
cmp
jmp
or
push
push
adc
test
std
jb
ret
push
xor
aaa
cs
mov
push
cld
test
loope
inc
in
mov
test
xlat
ja
jecxz
ss
test
xor
push
test
loopne
fistpl
ret
sahf
aam
xchg
mov
xchg
push
mov
shrb
cmc
fs
inc
mov
mov
add
loop
mov
dec
push
dec
daa
dec
test
jle
ret
lahf
movsb
xchg
pop
movsb
jns
fistpll
cmp
dec
mov
mov
jno
or
inc
mov
bound
insl
test
scas
lret
mov
xchg
test
and
mov
adc
loop
cmp
data16
popl
scas
fs
div
sbb
shrb
or
pop
push
and
and
rclb
mov
xchg
test
out
repnz
jnp
js
call
movsb
scas
fwait
mulb
push
jne
and
or
test
sub
insb
or
lahf
mov
sbb
jmp
mov
xchg
test
mov
in
dec
pop
imul
icebp
mov
push
and
dec
arpl
jb
jmp
pop
scas
int
out
movsb
mov
enter
gs
add
dec
jle
test
frstor
fldcw
lcall
out
test
cmpsl
mov
int3
fidivs
cld
loope
mov
movsb
push
cmp
cltd
and
add
dec
mov
test
pop
or
test
leave
sub
rolb
ret
mov
push
dec
ja
test
stos
lea
loopne
int
test
int3
push
test
jg
lcall
xor
test
out
lods
test
dec
mov
pop
cltd
xchg
es
mov
adc
addr16
xchg
lcall
mov
cmp
mov
pop
sub
divl
mov
inc
jne
test
fsub
dec
ret
filds
aam
bound
divb
roll
dec
mov
mov
xchg
xchg
outsl
lcall
push
cli
xor
jo
cmp
adc
test
add
xchg
xchg
test
push
or
lods
rcrl
mov
bound
or
inc
int3
mov
sub
cmpsl
lret
dec
addr16
fs
imulb
inc
sti
aas
out
fimuls
std
dec
sahf
sbb
jp
sub
call
mov
push
add
test
cmpsb
sbb
mov
sti
out
test
incb
inc
dec
test
add
call
jp
adc
mov
cmp
add
mov
and
pop
add
mov
sbb
notb
dec
lret
lock
pop
mov
mov
test
leave
cli
sub
dec
test
das
push
out
test
push
mov
arpl
mov
add
push
mov
pushf
jle
bound
mov
into
enter
aaa
test
mov
xchg
mov
inc
das
sti
je
and
adc
xchg
cld
xlat
jecxz
mov
test
scas
dec
push
in
mov
mov
or
and
adc
push
mov
stos
sbb
xchg
inc
sub
movsl
std
mov
fistpll
cmpsl
movsb
iret
xchg
cwtl
lds
jge
cmpsb
pop
es
cmp
mov
inc
test
std
push
movsb
mov
mov
rcll
mov
push
dec
jb,pt
aas
mov
sub
push
mov
mov
xor
leave
lea
mov
fiaddl
mov
inc
push
test
pusha
popa
frstor
icebp
test
aam
xchg
test
idivb
test
mov
adc
mov
jl
sti
test
xchg
cltd
sub
or
imul
das
out
test
mov
test
fldenv
test
fwait
iret
mov
lret
mov
mov
test
push
sub
dec
imul
lds
into
pusha
pop
xor
dec
pop
inc
sbb
out
fldl
jne
fbld
xchg
dec
cmp
test
rol
mov
divl
lods
test
bound
jge
pinsrw
testb
ds
popa
test
iret
call
cmp
mov
pop
fwait
sbb
les
arpl
mov
inc
push
test
scas
repnz
enter
in
fidivs
xchg
dec
out
and
insl
mov
jns
inc
cli
jecxz
test
ficompl
repz
and
sti
xor
jne
inc
push
int
inc
mov
ror
clc
clc
push
or
jecxz
addr16
jecxz
xchg
inc
daa
sti
ret
rorl
pop
test
sub
jne
test
bound
adc
mov
push
test
lock
jmp
sahf
movsb
jmp
addr16
aas
cltd
mov
arpl
loop
dec
jb
xchg
mov
enter
mov
mov
test
enter
pop
notb
lahf
xor
and
cmpsl
loop
aam
sbb
xchg
shl
mov
int3
ret
or
test
ret
scas
xor
add
jnp
inc
fwait
mov
int3
mov
pop
sbb
mov
test
and
dec
cli
sbb
sarl
or
pop
mov
int3
shll
popa
push
movsb
fstpt
lods
movsl
ficoml
js
int
jo
dec
pop
dec
pop
lds
test
mov
enter
cmp
and
or
jl
mov
stos
mov
repz
les
mov
xchg
and
fs
fisubs
sub
push
and
jecxz
les
data16
mov
dec
mov
sbb
push
push
mov
dec
or
test
inc
stos
inc
neg
test
jl
sub
jp
test
movsb
mov
add
les
jmp
xchg
in
dec
test
jp
lock
xchg
nop
pop
ja
in
psubw
jns
cmpsb
dec
test
xchg
pop
addb
adc
mov
stc
jb
mov
loop
mov
cmpsl
in
xchg
adc
int
jb
xchg
push
addl
fldl
or
pop
jns
iret
push
mov
orb
test
push
inc
xchg
mov
dec
ja
lret
or
and
in
pop
pop
xor
cmpsl
movsl
and
pop
mov
cmc
cld
and
loope
mov
cmpl
shrl
push
pushf
inc
jae
mov
mov
dec
lahf
jns
jbe
in
in
mov
dec
cmpsb
iret
bound
and
lds
mov
arpl
mov
test
movl
xchg
insb
dec
add
cmc
fists
aad
cld
jae
in
aam
mov
adc
adc
clc
xchg
arpl
das
sbbb
lret
and
aaa
jp
add
and
mov
xor
test
push
push
mov
popa
test
cmp
and
lcall
les
mov
and
or
daa
push
sbb
inc
pushf
xchg
test
outsl
jle
lods
test
dec
test
xor
leave
mov
sbb
addr16
sub
or
enter
jle
push
mov
sub
mov
sub
sub
adc
push
aam
lea
clc
movsl
inc
lcall
jp
shll
sahf
sub
push
push
mov
mov
enter
push
ja
cmp
inc
push
sahf
lock
mov
inc
mov
das
test
icebp
leave
sahf
mov
clc
mov
ja
test
and
test
out
and
test
stos
mov
add
jbe
sub
mov
cli
out
and
fcompl
dec
movsb
ret
rcll
adc
loopne
test
or
xor
jg
xchg
test
cmpsl
je
ficompl
in
loope
insb
call
mov
push
addr16
test
mov
in
push
dec
push
sub
cltd
lcall
fdivl
aad
push
or
mov
das
xchg
lret
in
pop
mov
inc
lret
or
push
outsb
fiadds
xor
repnz
mov
loopne
mov
in
pop
pushl
jo
aad
pop
lds
cmpsb
jl
dec
addr16
mov
data16
test
pop
incl
lds
push
push
cmpb
dec
or
in
enter
mov
jle
sub
int
mov
push
aam
test
and
int3
es
je
mov
test
xchg
mov
dec
lods
cmc
in
enter
xchg
pop
bound
cld
movsb
cmpsl
loope
bound
pop
or
sarb
cmp
stos
jae
arpl
mov
and
pusha
jnp
shll
shrd
push
cmp
mov
data16
pop
clc
into
out
les
xlat
push
sarb
fidivrl
cmc
xorl
subb
jo
fcom
test
dec
inc
stc
aad
sbb
lds
push
arpl
repz
movsb
cmc
test
or
and
test
push
clc
rolb
insb
and
pushf
daa
jne
bound
xchg
or
shl
mov
test
pop
clc
popf
lcall
movsl
xchg
dec
add
bound
sbb
fwait
sub
pop
popf
add
cmpsl
and
adc
dec
mov
or
xchg
testl
popa
test
sbb
mov
xchg
popa
test
clc
lea
push
jb
push
test
std
fwait
stos
movsb
pop
test
sub
call
push
in
arpl
sbb
add
test
pop
pushf
lock
add
in
in
pusha
sub
in
test
mov
and
cwtl
mov
pop
test
clc
push
adc
xor
dec
xchg
adc
pop
inc
lret
fistpl
lods
cmp
iret
sbb
push
inc
lods
cli
test
ja
sub
stos
xor
push
into
fisttpl
ja
sbb
add
lahf
in
ficompl
test
cld
sbb
fsub
xchg
stos
enter
and
stc
test
jbe
pop
push
jae
pushf
enter
lahf
push
mov
test
pop
sub
cli
enter
test
push
rcll
movsb
mov
aaa
arpl
pop
adc
cmp
ret
dec
or
adc
xchg
sub
dec
ficompl
rolb
pop
xchg
test
popfw
mov
test
jecxz
leave
or
idivb
sub
test
dec
out
cmc
clc
test
pop
mov
out
or
and
loop
std
xchg
mulb
push
or
movsb
jecxz
in
pop
stos
cmp
and
push
adc
mov
pop
test
cwtl
lds
icebp
jns
mov
daa
xchg
std
lret
xchg
test
cmc
cmp
inc
ja
arpl
pop
pop
pusha
pop
sbb
mov
inc
jle
dec
lock
and
pop
outsb
leave
mov
dec
int3
cld
test
xchg
test
mov
inc
xlat
xchg
sahf
test
pop
mov
push
insb
lods
loope
test
int3
call
movsb
nop
divl
xchg
cwtl
and
roll
push
pop
mov
int3
sub
mull
mov
imul
movl
fdivs
mov
inc
dec
add
adc
mov
pop
test
test
mov
roll
cltd
or
mov
or
roll
jmp
and
cmpsl
sbb
lret
cli
pop
mov
test
cmp
dec
pusha
arpl
adc
cmpsb
pop
movsl
xchg
sbb
loopne
std
sub
out
enter
adc
test
push
xchg
in
sub
sub
ret
xor
test
into
mov
test
std
pop
fsub
sbb
ja
xor
cmp
mov
test
stos
loope
inc
mov
mov
mov
pop
arpl
movsb
add
daa
sub
movsb
test
mov
mov
test
icebp
pop
incb
sbb
int
lret
or
sahf
sbb
pop
inc
in
inc
enter
mov
push
dec
xor
cwtl
mov
mov
mov
outsb
scas
daa
mov
sbb
xor
jecxz
xchg
test
test
popa
jmp
pushf
xchg
jns
xchg
jno
test
jae
and
xchg
jb
dec
test
sbb
pop
push
int3
scas
int
stos
cmp
repz
sub
addr16
add
shll
pop
sub
mov
aam
lahf
mov
loope
int
mov
dec
xor
xor
xor
test
shrb
mov
add
and
xchg
push
outsl
ret
test
mov
pop
test
int3
dec
rolb
sub
xor
je
xchg
clc
xchg
aam
pop
daa
push
mov
test
jnp
jecxz
lcall
sub
enter
inc
stos
pop
es
test
jo
xor
mov
and
shll
fwait
inc
add
test
cltd
xlat
pop
ja
adc
lods
gs
push
xor
pop
test
push
mov
leave
add
pusha
mov
push
fwait
or
cmpsb
cmp
mov
lcall
fsubrl
mov
mov
enter
push
xor
push
loop
or
outsl
test
cmp
arpl
aam
cltd
inc
in
lahf
fidivrl
sahf
roll
push
loopne
inc
movsb
pop
mov
sub
stc
in
arpl
addb
jmp
lcall
es
jecxz
nop
out
xchg
push
dec
inc
iret
jp
add
cli
mov
aam
jo
mov
mov
add
add
adc
jbe
xor
mov
dec
test
insl
xor
pusha
push
adc
adc
sub
test
xchg
and
jmp
mov
int3
push
dec
mov
jecxz
push
sub
les
pop
mov
xchg
stos
mov
add
adc
negl
stos
lods
push
push
jle
loope
mov
or
jecxz
sti
test
lods
mov
imul
lahf
push
add
cltd
cmp
sub
les
aad
adc
mov
bound
mov
adc
incl
rorb
mov
stos
dec
lret
and
xchg
pop
stc
xchg
out
leave
aaa
test
inc
loope
pop
icebp
add
lcall
or
push
push
popa
mov
movsl
scas
adc
lret
cmp
sub
fadds
cli
popf
mov
adc
ss
add
push
fistpll
popa
mov
loop
sti
jmp
sbb
orl
adc
xchg
and
mov
test
xchg
sbb
adc
mov
mov
pop
and
sbb
mov
mov
in
sub
movsl
inc
jns
movsb
mov
jne
aad
mov
int
cmp
test
xor
jmp
cmc
loopne
cmp
xchg
jb
and
pop
sub
adc
iret
adc
dec
and
lods
in
cltd
adc
cli
pushf
mov
popf
add
push
clc
push
stos
mov
and
bound
into
dec
repz
repnz
jmp
pop
xchg
push
mov
test
dec
mov
push
test
jle
push
or
xchg
test
cltd
les
or
in
push
test
adc
aaa
adc
insb
adc
mov
push
les
imul
mov
jo
test
xchg
ja
mov
pop
jns
and
test
es
mov
xchg
pusha
push
in
pop
fcoml
out
mov
mov
sub
mov
or
xchg
outsl
jb
incl
fcoms
inc
pop
and
pop
mov
jle
out
fnstenv
xchg
lcall
dec
test
or
pusha
punpckhbw
mov
icebp
inc
push
mov
pop
sub
jmp
cmp
xchg
arpl
xchg
in
or
push
inc
mov
das
mov
jmp
clc
mov
jle
shll
das
les
scas
push
mov
inc
movsb
int3
cmp
cld
imull
and
bound
lret
movsl
cmp
lds
test
rol
sub
mov
enter
movsl
adc
jb
or
pop
or
sbb
repz
sub
or
or
xchg
mov
cmp
add
sbb
inc
js
sbb
mov
add
idiv
rolb
mov
popf
enter
jae
cmp
leave
xchg
sub
bound
or
test
xchg
sub
cli
aam
clc
add
test
andl
scas
and
mov
stc
loope
mov
lds
add
push
jl
mov
in
shl
sub
dec
xchg
dec
test
stc
push
jp
into
aas
out
or
adc
test
test
mov
mov
scas
test
shl
jle
fistl
icebp
arpl
xor
jns
orb
jne
add
fs
pop
inc
add
in
mov
imulb
cmpsl
out
lea
push
data16
pushf
xor
mov
popf
test
or
cmp
lods
xlat
jmp
repz
and
adc
icebp
mov
inc
xor
mov
leave
fcmovne
add
pop
and
in
mov
xchg
pop
xor
outsb
test
das
jbe
push
shll
insb
add
mov
fwait
cld
in
inc
pop
test
lods
inc
je
jmp
jle
mov
aas
popf
shll
mov
outsb
add
jecxz
aad
pop
pop
iret
mov
jno
inc
mov
xor
icebp
dec
push
mov
test
and
push
jmp
ja
mov
sub
outsb
insb
mov
hlt
dec
lods
les
test
jmp
pop
dec
test
inc
rclb
dec
test
xchg
lret
fsubs
sbb
orl
inc
leave
stc
movsb
imul
inc
cmpsl
push
dec
add
shll
xchg
mov
jecxz
xchg
jmp
mov
mov
mov
sub
call
fsts
lock
mov
pop
push
mov
arpl
sbb
jle
cmp
xlat
repz
mov
test
cmp
xor
rcr
daa
lds
nop
fimull
cwtl
mov
cmp
pop
test
mov
fisubl
je
mov
mov
test
xchg
adcb
sub
test
loop
lea
push
pop
mov
jecxz
xor
out
fs
scas
test
inc
push
cmpsb
sti
movsl
inc
mov
jne
mov
das
roll
test
push
or
fstl
lods
ret
sarl
mov
mov
dec
mov
test
shll
cld
jns,pn
leave
push
xchg
mov
cmp
xchg
pop
test
and
test
jg
lds
in
in
pop
mov
in
stos
rorl
cmp
inc
lahf
push
testb
lods
cwtl
inc
push
outsb
xchg
mov
xor
scas
pop
leave
lahf
push
cld
mov
sub
test
std
orb
enter
mov
in
and
leave
fsqrt
aam
ja
and
mov
and
and
fcomi
push
in
ds
dec
imul
stos
mov
out
and
adc
xchg
pop
xor
xlat
sub
cwtl
xor
loope
sub
aam
push
cmp
add
xchg
xchg
enter
mov
insb
icebp
inc
xor
stos
out
test
cltd
jecxz
jb
inc
mov
add
or
incb
stos
lcall
test
imul
rcrb
jno
mov
je
popa
cmp
movsb
inc
sub
push
cmpsl
int3
lret
movsb
dec
add
dec
aas
inc
and
leave
cli
bnd
jmp
or
mov
lahf
mov
shl
lcall
and
movsl
loope
cmpsl
loop
xor
pusha
jbe
jecxz
out
mov
ljmp
sub
ja
js
and
inc
push
icebp
sbb
insl
sub
and
imul
cwtl
addr16
repz
loop
test
in
int3
roll
outsl
es
jae
fs
insb
dec
test
mov
sbb
lret
add
xlat
mov
mov
mov
push
in
or
xor
push
test
enter
je
cmp
cmp
inc
int3
mov
and
pop
jbe
dec
xchg
in
push
std
sub
shl
dec
test
inc
lret
jbe
cltd
pop
movsb
bound
and
stos
bound
inc
pop
rorb
pop
dec
jle
inc
pop
data16
aad
leave
lock
lcall
enter
adc
jl
cld
insb
clc
sub
cmpsl
test
or
dec
cmp
arpl
push
mov
mov
dec
add
cld
or
or
test
push
hlt
push
test
je
icebp
xorb
dec
scas
shl
stos
loope
fmull
mov
imul
jnp
dec
cli
xor
xor
rol
sbb
inc
scas
jae
jo
push
add
fwait
add
sti
push
mov
ret
idivl
mov
decl
dec
les
popf
andl
test
mov
mov
imul
in
daa
mov
jmp
mov
in
in
or
sub
sbb
inc
pop
mov
lods
movsb
xchg
cmp
jae
fwait
enter
test
data16
pop
test
out
mov
or
test
lahf
call
lds
maxps
add
movsb
cltd
int3
loope
jb
enter
in
dec
inc
and
sub
cwtl
sub
pop
fld
pop
xchg
arpl
movsl
xor
or
inc
jge
notb
movsl
push
pop
mov
adc
test
call
stos
inc
pop
lcall
into
xchg
inc
mov
test
inc
out
add
mov
cmpsl
jecxz
outsb
ds
daa
lods
ss
mov
pop
mov
xchg
loop
pop
dec
ds
xor
popf
pushf
cmpsb
or
into
dec
jecxz
leave
test
pop
sbb
stos
xchg
push
hlt
mov
loop
mov
inc
test
xchg
push
test
add
push
out
loop
iret
test
add
sbb
or
sbb
and
cmp
mov
les
sub
cltd
jg
push
mov
arpl
jge
mov
fadds
mov
inc
cmp
dec
cli
outsl
incl
fwait
mov
arpl
test
mov
notl
mov
loop
cmc
jecxz
addr16
sbb
xchg
adc
mov
xor
out
lea
stos
dec
setnp
and
pop
mov
add
rclb
pop
cmp
test
sub
pop
test
stos
dec
int
mov
sbb
sub
push
and
test
add
push
fnstenv
jbe
std
xor
mov
enter
cmp
insb
xorb
jb
add
push
bound
movsl
sub
sbb
fstpt
test
in
pop
test
test
xor
add
sub
test
push
add
push
out
and
lea
pop
sub
cmpsl
lock
add
popf
int3
leave
test
pop
movb
es
jmp
mov
dec
out
pop
inc
mov
cli
jle
add
negl
jle
fs
imulb
xchg
push
adc
test
mov
xor
mov
imul
fistps
push
dec
rorb
test
add
test
test
push
sbb
mov
push
test
in
fwait
xor
inc
je
test
dec
inc
and
xchg
test
aad
inc
inc
loopne
orl
mov
ds
pusha
and
pop
mov
rclb
test
leave
popl
mov
xchg
xor
test
outsb
or
bound
mov
in
mov
test
imul
xchg
test
pushf
rorb
sub
mov
jp
jmp
bound
mov
sub
fnstcw
adc
data16
add
xor
dec
mov
clc
mov
out
jge
iret
push
rcl
and
sbb
jg
jle
cmp
lret
loope
sbb
out
lcall
std
lock
scas
and
ret
lret
push
dec
loop
xchg
test
cmp
shr
enter
mov
xlat
movsb
icebp
insb
jecxz
call
mov
fstps
clc
int3
lret
push
stos
jb
das
mov
adc
mov
loopne
test
lret
push
test
imul
lds
dec
jp
cwtl
inc
sbb
in
push
lret
dec
jecxz
push
mov
test
mov
int
cmp
in
cltd
and
jmp
push
lret
inc
inc
adc
sbb
jl
add
test
int3
sbb
jo
enter
pop
ret
lods
add
bound
test
insb
mov
mov
out
lds
push
jmp
ret
int3
inc
cmp
test
pop
cli
dec
sub
test
loop
insl
arpl
lret
add
mov
fwait
bound
push
pop
bound
movsb
es
pop
test
pop
push
scas
or
test
sub
aad
jle
and
mov
cmp
movsb
ret
ret
xchg
cltd
adc
mov
jg
adc
jbe
mov
loope
ja
in
roll
mov
sub
dec
out
ret
mov
cmpsb
test
lods
pop
mov
dec
adc
in
add
xor
test
xchg
jne
xor
and
test
mov
dec
mov
popf
xor
daa
inc
push
test
jno
mov
das
enter
test
cli
mov
fsts
negl
push
packuswb
test
cli
in
lret
stos
sbb
xchg
fwait
and
push
test
or
mov
mov
test
enter
sub
xchg
mov
cmp
test
dec
cld
fildll
and
lods
sub
fiadds
dec
pop
fstl
cmpsb
loope
xchg
mov
cmpsb
mov
test
xor
mov
insb
les
xchg
pop
loop
sahf
cmp
cld
jmp
cli
pop
mov
pop
xchg
in
dec
push
lods
fists
dec
test
inc
sub
cmp
xchg
fwait
sbb
lret
test
push
mov
testl
or
inc
in
xchg
fadd
sbbb
repz
sub
rclb
xlat
insb
mov
ja
scas
jmp
test
notl
or
in
pop
lcall
push
push
or
jle
dec
xchg
dec
xor
daa
test
adc
jge
xchg
add
loopne
scas
jne
xchg
fiaddl
mov
push
test
add
mov
lds
loopne
jp
mov
push
test
lret
xchg
or
movsl
sarl
jg
adc
jnp
mov
movsb
dec
and
cmp
hlt
daa
adc
mov
out
testb
add
test
es
or
ror
testb
sub
test
repnz
in
pop
push
test
mov
pop
aaa
insb
dec
inc
loop
call
jp
adcl
test
mov
mov
cli
lahf
cmp
xor
test
pop
into
mov
test
mov
add
hlt
mov
lds
push
pop
pusha
mov
push
mov
push
mov
bound
mov
cltd
stos
fdivl
lahf
sub
jge
fwait
or
cmpsb
mov
in
andl
stos
adc
mov
fwait
jmp
out
call
pushf
roll
mov
jp
sub
mov
leave
rorb
and
pop
jmp
test
mov
test
out
dec
mov
mov
test
cmpsl
ja
test
or
je
test
test
pushf
inc
in
jns
int3
dec
fstl
mov
daa
aaa
ret
add
lret
test
fs
iret
xchg
ret
std
jo
ds
test
push
stc
cmp
cwtl
push
mov
cmp
arpl
ja
movsl
test
ret
hlt
shl
xchg
test
enter
pop
pop
int
and
bound
int3
pushf
sub
jecxz
mov
push
arpl
mov
pop
inc
jl
push
or
or
rclb
push
adc
mov
cmp
sbb
adc
in
sub
loop
int3
mov
dec
cltd
call
add
and
sbb
cmp
push
imul
mov
xchg
fsts
das
add
sub
rolb
mov
lret
inc
arpl
mov
test
pop
adc
dec
enter
fadds
cmp
nop
mov
sub
push
fldt
movsb
jo
ljmp
sbb
lahf
pop
into
dec
int3
push
push
leave
mov
cmpsl
js
cmpl
rcr
dec
xor
adc
int
test
sub
push
inc
add
arpl
xchg
mov
data16
add
jb
mov
cmc
sbb
dec
addr16
movsb
pop
in
das
add
push
xchg
loopne
adc
adc
mov
mov
and
sbb
dec
inc
lds
insb
cmp
mov
repz
popf
pop
test
jns
jl
fucomi
cmp
imul
out
sbb
adc
movl
dec
sbb
add
rclb
test
test
popf
bound
insb
or
out
icebp
or
adc
pop
sub
test
in
mov
repz
cmp
sub
je
icebp
jno
xchg
int3
test
std
or
test
in
imul
mov
aaa
adc
in
es
test
adc
mov
sbb
test
call
inc
mov
mov
mov
and
icebp
or
outsb
dec
add
test
xor
sarb
pop
shrl
jb
call
loopne
pop
or
int3
aam
dec
push
mov
loop
pushf
cmp
outsl
jne
loopew
repz
mov
mov
sub
inc
xor
ds
pushf
jno
faddl
test
movsb
punpcklwd
movl
jp
movsb
xor
test
clc
cli
push
cltd
test
iret
fisubl
pop
popa
test
jbe
outsl
sbb
cmpsb
sub
add
mov
in
sbb
lods
js
mov
test
inc
or
inc
or
stos
je
xor
xchg
jnp
mov
xchg
sub
imul
test
or
push
jl
ret
and
lods
pop
mov
in
push
ljmp
movsb
mov
and
adc
xchg
je
leave
inc
imull
pusha
or
addr16
lcall
popa
and
fisubrl
mull
xchg
pop
sti
mov
cwtl
push
inc
stc
add
mov
in
pop
out
mov
pop
test
jle
push
pop
aaa
inc
push
add
nop
outsl
shlb
sti
add
into
faddl
lds
call
sub
and
in
mov
sbb
aas
test
and
xor
je
fsubl
push
test
xchg
cwtl
dec
mov
or
jle
adc
ljmp
cmp
loop
lcall
ret
out
mov
ss
push
addl
addr16
sub
lods
jecxz
sub
jmp
pop
out
pop
enter
xchg
xor
dec
jb
insb
loopne
popf
and
in
xchg
dec
fldenv
js
sti
dec
pop
mov
push
jns
and
inc
xchg
test
xchg
in
shrb
mov
call
mov
arpl
into
adc
mov
bound
xchg
mov
enter
test
cmpsb
in
fldcw
or
inc
mov
mov
test
pop
inc
or
iret
xchg
sbb
push
addb
popf
in
mov
mov
xchg
aam
stos
test
mov
das
das
dec
cmp
cwtl
aam
xor
clc
test
int
adc
mov
mov
arpl
out
loopne
cmpsl
cmc
test
pop
jmp
movsb
xchg
scas
sub
in
and
pusha
int
jae
test
cli
fcompl
cmpsl
popf
pop
out
test
add
enter
inc
in
mov
movsl
mov
cld
xor
inc
sbb
dec
lea
mov
in
jmp
in
cmp
fisttpl
test
insb
fmull
push
xor
daa
mov
jbe
test
xchg
fwait
mov
aaa
arpl
ds
aas
inc
movsb
movsl
fdivrs
lcall
int3
pop
ja
xchg
test
test
sub
scas
push
xor
lcall
push
mov
fchs
xlat
lock
incb
mov
lret
push
insb
add
aas
mov
ret
nop
into
fistl
cs
test
jbe
jp
ret
and
lds
mov
pop
ret
add
mov
sbb
out
test
loopne
cmp
push
pushf
stc
mov
arpl
jb
int3
mov
cmp
sub
jbe
sbb
mov
add
imul
test
ret
xchg
sub
int3
lds
mov
xchg
and
outsb
push
mov
xchg
insb
out
popf
adc
mov
ret
or
mov
loop
adc
and
push
test
cltd
or
rclb
test
sub
cli
lods
nop
roll
xor
add
lcall
push
sub
dec
and
cli
lcall
mov
and
dec
mov
test
test
or
pop
rolb
sub
test
andnps
mul
out
mov
cmpsl
mov
xor
test
call
pop
mov
push
push
mov
in
fdivl
mov
test
lret
loope
lcall
aam
fwait
test
sahf
pop
addl
lods
ss
inc
add
ret
mov
inc
and
movl
inc
mov
test
push
mov
sub
dec
xor
test
mov
test
int
es
out
push
test
orl
xlat
arpl
mov
test
cmpb
insl
mov
ret
pop
adc
int
jo
sub
lcall
cli
testb
push
fdivr
fisubl
push
mov
mov
fwait
dec
mov
and
and
ja
mov
es
movsb
les
dec
mov
incb
push
mov
push
sub
test
dec
imul
loopne
out
jmp
movsb
cmp
loop
fstl
jmp
mov
push
adc
test
jp
xor
xchg
pop
xchg
xchg
mov
les
clc
stos
add
push
jecxz
scas
cmp
in
pop
out
inc
and
in
cltd
test
adc
push
and
mov
jno
sbb
or
mov
and
fldcw
test
xchg
jmp
mov
in
mov
rcl
mov
mov
out
lds
dec
and
nop
push
mov
mov
adc
int
negb
and
dec
or
mov
sbb
xchg
xchg
scas
gs
test
fnstenv
out
push
and
cmp
not
lods
loopne
pop
lods
or
data16
push
inc
out
imul
rcll
dec
bound
push
shlb
mov
pop
adc
into
bound
jle
mov
test
push
cmp
les
imul
adc
adc
mov
jecxz
es
inc
sub
jp
subb
or
fistpll
cwtl
daa
xor
fwait
push
or
cld
mulb
mov
pop
popa
mov
pusha
data16
test
dec
in
pop
push
or
bound
add
out
arpl
jo
dec
gs
cmp
push
dec
stos
sub
movsl
aad
jns
idivl
lret
test
into
addr16
mov
arpl
rcrb
mov
mov
js
test
mov
jmp
clc
cmp
jae
mov
dec
cmp
test
fsubl
test
lret
jg
mov
mov
push
call
mov
bound
addr16
inc
stc
test
les
fildl
xlat
sbb
test
mov
jle
dec
and
mov
into
test
mov
flds
das
movsb
push
test
mov
adc
mov
mov
loope
mov
xchg
or
enter
cli
inc
clc
xchg
xor
push
push
fadds
repz
enter
push
dec
cmp
pop
js
rorb
push
jmp
xchg
leave
in
xchg
stos
shll
scas
dec
sub
test
jge
and
pop
stos
cltd
sub
lcall
and
icebp
cmp
es
in
adc
mov
push
jae
bound
test
cs
imulb
fsts
ret
inc
int
cli
ret
mov
dec
jo
dec
scas
add
dec
jecxz
xchg
mov
out
ja
bound
adc
test
in
pop
jbe
push
xor
subl
sti
mov
scas
mov
es
fstps
test
test
xchg
mov
repz
or
jnp
clc
int3
test
imul
push
cmp
xchg
add
mulb
mov
pusha
jbe
std
mov
cmp
xor
mov
mov
cld
clc
pop
test
pop
mov
cwtl
mov
ja
daa
dec
stos
jmp
xchg
lcall
xchg
and
test
sub
loope
lds
out
mov
and
int
lock
inc
mov
fisttpl
cmpsb
sub
sbb
inc
dec
bound
lods
xchg
cltd
out
xchg
outsl
cmp
mov
test
clc
cmc
push
sub
out
fisttps
test
adc
insb
int
sub
dec
repnz
scas
ja
leave
mov
fldl
mov
and
cli
push
rolb
mov
imul
loop
mov
mov
test
pushf
repnz
cs
test
jmp
stos
test
adc
jecxz
xlat
mov
mov
in
xchg
outsl
test
sub
jecxz
pop
test
test
sub
inc
ficoml
dec
jmp
xchg
cmpsb
test
xchg
sahf
mov
mov
push
movsl
push
fisubl
push
mov
paddsw
sub
fmul
mov
cmp
das
sub
cld
sub
push
arpl
xchg
lds
jg
pusha
std
enter
sbb
mov
call
inc
insb
ja
bound
mov
inc
mov
leave
dec
int3
add
push
test
insb
test
ret
jae
xchg
add
flds
arpl
mov
mov
inc
or
sbb
pushf
sbb
int
mov
in
fcoml
std
mov
out
repnz
stc
aas
push
incl
inc
cltd
inc
mov
and
nop
pusha
test
cli
mov
inc
mov
out
xchg
shr
test
push
xor
clc
es
test
push
fwait
out
fs
inc
push
mov
sub
jecxz
ljmp
popa
xor
repnz
lahf
or
stos
enter
and
mov
cmc
mov
bound
jae
mov
test
jg
inc
cli
xchg
popf
dec
xchg
and
mov
or
dec
push
jecxz
sub
jp
testb
std
mov
mov
and
loopne
mov
push
cmpsb
mov
test
mov
mov
pushw
addb
dec
cmp
xchg
mov
push
insl
dec
fwait
xor
test
push
lcall
xchg
lret
data16
fdivs
insb
movsl
pop
test
fisubs
test
xor
dec
loope
inc
pop
and
jp
mov
popa
rcrl
sub
xchg
xchg
test
pushf
xchg
add
ja
fsubs
sarb
movsl
sub
test
enter
rorl
xchg
arpl
cwtl
addr16
or
fsts
inc
es
mov
fwait
test
xor
test
mov
loop
mov
loopne
mov
ds
test
add
jecxz
call
out
push
pop
and
subb
in
loopne
out
dec
sbb
cmp
clc
cli
in
enter
pop
in
and
pop
stc
ret
mov
mov
fidivl
stos
mov
and
out
out
lods
jno
fadds
and
repz
iret
dec
mov
mov
enter
pop
add
xchg
dec
rcrl
inc
roll
xorb
outsl
es
enter
nop
in
mov
jecxz
test
cmp
enter
arpl
jne
push
mov
test
pop
loop
leave
stos
and
je
xchg
rcrl
mov
mov
xchg
test
daa
stc
test
xlat
ret
inc
insl
and
stos
outsl
mov
inc
mov
movsb
loopne
ret
or
shl
push
je
dec
mov
ret
and
pop
arpl
add
jnp
test
push
lret
inc
test
ret
cmc
imul
adc
dec
inc
dec
mov
enter
stos
outsl
mov
jl
test
mov
js
and
test
or
xchg
rorl
scas
mov
mov
push
jp
cld
test
push
loope
add
das
int3
inc
adc
cmp
mov
adc
push
test
loop
cwtl
leave
ja
jecxz
or
aam
stos
out
test
cmp
mov
clc
jmp
test
inc
divb
imul
scas
xchg
adc
adcl
mov
jp
popf
cmp
pop
test
fdivrl
dec
loop
jno
ret
xchg
bound
imul
mov
movsb
push
add
fiaddl
ja
fnsetpm(287
mov
int
jmp
xchg
test
dec
mov
nop
sub
test
and
test
ja
pushf
rorl
lcall
and
test
mov
arpl
stos
out
jecxz
orb
inc
and
or
jge
jo
movsl
movsb
jnp
push
pop
dec
out
andl
dec
jo,pn
stc
repnz
pushf
test
call
std
addb
fsubl
xchg
cmp
jbe
mov
xor
mov
imul
xchg
mov
inc
dec
mov
movsl
xchg
in
insl
jl
sbb
mov
mov
dec
in
movsl
adc
sub
and
mov
sbb
sub
dec
pusha
inc
or
mov
imul
push
lcall
jmp
negb
or
cmovbe
xchg
mov
cmpsb
mov
pusha
inc
jp
and
hlt
push
mov
push
push
or
xor
lret
mov
cmpsb
imul
in
clc
in
stos
ljmp
in
jmp
sub
inc
test
jle
test
mov
aas
add
xor
push
dec
pop
test
sub
popa
arpl
xor
div
rolb
inc
sub
lods
addr16
push
test
cmp
mov
jmp
lock
test
push
cmpsl
fwait
arpl
push
into
xchg
in
outsl
popf
cmp
aas
loopne
jp
mov
xor
in
loop
xchg
arpl
mov
push
clc
lcall
mov
iret
jecxz
mov
rolb
mov
mov
bound
dec
push
test
and
test
sbb
adc
push
test
out
stos
lret
test
shl
clc
fsts
jp
mov
cmc
icebp
negb
enter
test
xor
mov
in
mov
mov
test
neg
loop
cmpsb
or
sbb
stos
cli
gs
je
sbb
xchg
push
into
jns
movsl
scas
xor
or
in
test
or
lret
cmp
mov
arpl
test
push
in
cwtl
cmp
aad
jecxz
sub
and
xchg
add
inc
sbb
lret
dec
fdiv
movsb
cmpsl
push
push
cmp
test
dec
leave
insb
sti
ficoml
push
xchg
sub
xchg
jle
shrl
inc
mov
shlb
in
mov
xchg
cltd
inc
jns
les
mov
in
data16
xor
arpl
cmpsl
ljmp
rol
outsl
enter
mov
test
cmpsb
shl
pop
sarl
mov
dec
scas
cli
fisubs
movsb
fsts
into
daa
pop
cltd
add
mov
sbb
ret
pop
aad
inc
inc
pop
imul
lcall
cmp
sub
push
push
arpl
mov
popa
testl
sub
orb
inc
xchg
push
mov
sbb
sahf
mov
mov
sub
jnp
in
outsl
or
icebp
jg
test
std
stc
mov
test
testl
es
ret
loop
dec
popa
mov
pop
or
sbb
call
test
lds
xchg
dec
xor
mov
pop
cmp
popa
sahf
shr
lahf
xchg
sub
stos
fucomip
test
mov
fs
movl
in
ret
xchg
push
pop
sti
arpl
call
or
and
out
test
ja
sahf
cmp
decl
nop
mov
push
into
pop
out
lock
outsb
fbld
push
jp
lods
xchg
mov
repz
scas
pop
push
fmull
into
daa
out
jbe
or
or
add
cmp
cmpsl
jecxz
cmp
clc
pushf
mov
jo
mov
xchg
jg
xor
ret
idivl
outsl
test
jecxz
loop
inc
xchg
nop
popf
push
pop
mov
shlb
xchg
out
xchg
mov
test
dec
cltd
push
in
outsb
fisubl
in
movsb
inc
xchg
cmpsl
push
arpl
xor
imul
fadds
mov
mov
arpl
pop
mov
xchg
out
inc
adc
dec
movsb
xlat
cmpsl
and
fcomip
adc
cli
push
mov
and
lret
leave
movsb
mov
xchg
or
sub
lock
push
aam
stc
cmpsb
cmp
enter
mov
mov
xchg
pushf
mov
sub
loopne
jge
mov
sub
xor
push
jecxz
inc
sub
mov
pop
cltd
je
out
arpl
or
inc
stc
mov
sbb
inc
pushf
and
or
in
push
mov
sub
test
sbb
das
inc
cmc
inc
in
repnz
cmp
test
dec
push
lret
cmc
mov
or
test
jmp
out
xchg
pusha
push
jae
push
test
sarl
or
adc
in
test
or
mov
cltd
mov
jmp
and
testb
ret
iret
orb
xlat
outsb
cs
push
int3
push
mov
add
xor
sub
mov
sahf
xchg
filds
mov
pop
dec
mov
aaa
insb
mov
fs
aam
arpl
pop
adc
rcr
jecxz
xchg
push
in
jb
mov
sbb
sub
sub
lcall
aas
pop
mov
mov
testl
test
lret
pop
cltd
loop
pop
jp
cmpsb
mov
out
out
repnz
lret
ds
mov
call
xor
cltd
and
repnz
test
cmp
mov
dec
mull
and
dec
jle
ret
sub
add
ds
cmpsl
mov
mov
mov
int
test
xchg
dec
in
cld
or
mov
mov
out
bound
divb
test
pushf
mov
jp
sbb
xchg
push
nop
out
fistl
mov
lret
call
test
scas
add
add
pop
ds
dec
pop
push
das
into
stos
mov
or
mov
sub
dec
mov
push
mov
cld
movsb
in
sub
pop
mov
pusha
jg
xor
divb
mov
jge
sbb
cld
sub
cld
mov
inc
add
imul
rol
push
lret
push
scas
mov
sbb
test
loope
xorl
pop
dec
ja
and
jp
fsubrs
cmp
stc
jnp
and
aad
mov
inc
lcall
cs
sub
stos
or
jp
gs
pushf
jno
sub
into
in
lahf
mov
mov
or
dec
bound
dec
mov
cli
mov
out
aam
jmp
cmp
outsl
lcall
insb
and
cltd
inc
mov
push
jns
loop
test
mov
aas
stc
test
dec
sbb
int
xor
arpl
ljmp
iret
test
imul
ds
mov
arpl
movsb
cmpsl
scas
and
stc
test
insb
sbb
and
jmp
cmc
mov
or
scas
xchg
test
sub
mov
mov
stos
jecxz
mov
sahf
les
sub
inc
sbbl
inc
sub
xor
mov
pop
stc
cmp
cwtl
stos
and
and
arpl
adc
movsb
call
and
test
mov
cmp
sub
mov
pop
cltd
ss
test
stos
imul
je
adc
lahf
movsb
out
pop
aaa
push
mov
call
insb
rolb
sub
cltd
mov
imul
dec
das
test
xchg
mov
out
test
leave
inc
inc
test
dec
xchg
test
push
jl
and
test
ja
das
mov
lret
and
cmc
push
mov
test
add
movsb
cs
fwait
pushf
push
pop
sub
sub
pop
mov
push
in
test
in
imul
mov
int3
das
adc
pop
inc
and
push
arpl
daa
push
testb
int3
dec
pop
sbb
mov
cs
fisubl
or
xor
add
pop
enter
lahf
addb
scas
imul
ret
dec
and
inc
and
daa
imull
addr16
movsl
lcall
mov
sar
cs
test
push
sub
pusha
loope
push
mov
cwtl
sub
lds
jnp
test
inc
lods
movsb
cld
dec
std
pop
mov
jge
test
push
jg
sub
cltd
cmp
mov
dec
in
imul
mov
mov
jnp
movsb
aam
lds
cmp
int
cmc
test
je
mov
and
movsl
add
ljmp
in
aaa
xchg
int
fistps
lds
and
sub
imul
dec
mov
cmp
lds
sbb
push
inc
mov
iret
andb
mov
test
push
dec
in
jp
jne
xorl
cs
xchg
xchg
mov
lds
sbb
loope
scas
pop
xchg
xor
addr16
iret
test
or
add
lods
inc
and
xchg
in
xchg
or
push
cmp
movsb
pop
fiaddl
jae
dec
and
sbb
inc
inc
enter
add
jle
xchg
pop
jecxz
mov
xorl
cmc
sbb
push
jmp
test
cs
cmp
imul
movsb
xor
enter
mov
xchg
jecxz
pop
orb
loop
gs
out
scas
mov
leave
lea
out
mov
repnz
fildl
jmp
cmp
sarl
mov
ficompl
orl
ja
jns
pop
test
or
xchg
dec
mov
call
rclb
mov
aas
testb
and
ljmp
icebp
test
xchg
jle
imul
mov
ja
add
mov
and
mov
mov
mov
test
dec
fs
test
adc
and
push
mov
mov
xchg
in
dec
sub
cli
sub
mov
xchg
enter
les
and
cmovg
incb
fldl
dec
jnp
sub
ja
push
dec
icebp
test
inc
movl
je
dec
repnz
rcl
cmp
into
ret
std
xor
fsub
mov
mov
mov
mov
aaa
test
cli
jne
mov
test
out
add
aam
mov
push
mov
mov
orps
jmp
and
test
out
adc
testl
test
int
cltd
xchg
cmpl
jecxz
or
sti
out
insb
fwait
mov
popa
ds
lahf
test
jo
jne
jecxz
imul
pop
dec
test
int
cli
test
sbb
arpl
mov
sbb
lods
mov
mov
in
xchg
inc
inc
and
mov
cld
movsb
lock
stos
xchg
adc
mov
ja
clc
add
cmp
push
or
test
inc
add
arpl
data16
aam
ljmp
xor
aad
test
jb
xchg
adc
test
xchg
xlat
mov
jno
test
and
inc
insl
sbb
and
mov
mov
mov
xchg
lds
pusha
in
mov
mov
test
ja
sub
xchg
enter
test
loop
jl
in
push
mov
jbe
int
fidivrs
in
loop
inc
mov
push
stos
xchg
bound
push
cmp
dec
test
jo
xchg
xchg
out
lds
enter
pop
mov
movsl
dec
bound
mov
or
lds
pop
push
or
movl
dec
movsl
mov
mov
xchg
pushf
pop
test
bnd
loop
dec
test
fcmovnb
mov
imul
and
bound
test
pop
out
bound
in
and
or
int3
pusha
in
mov
mov
fdivs
xor
rorl
or
jecxz
inc
icebp
test
xor
test
and
int
push
xchg
lret
and
test
cmp
fisttps
stos
test
push
mov
icebp
fbstp
das
test
repnz
out
sbb
xchg
sub
arpl
cli
inc
add
pop
das
out
inc
outsl
cmpsl
lret
pusha
lcall
pop
int3
jb
xor
loope
test
push
and
cwtl
test
call
add
pusha
fstps
mov
mov
push
movsb
mov
push
lods
mov
mov
bound
mov
out
pusha
movsl
sub
sti
int3
hlt
adc
xchg
dec
test
subl
daa
je
sbb
mov
stos
loop
fs
mov
js
push
fwait
xor
mov
iret
imul
dec
testl
jae
cmp
mov
xor
test
mov
xor
push
jp
jbe
jl
cmc
sub
mov
test
testb
lcall
fadds
clc
mov
pavgw
xlat
xchg
jbe
inc
in
mov
mov
loop
xor
xchg
test
jle
stos
aas
xchg
xor
and
add
dec
mov
jno
pusha
xorl
test
test
sub
test
clc
adc
dec
mov
test
ret
bound
pushw
inc
adc
stos
bound
add
pop
dec
cmp
jecxz
enter
sbb
loope
les
xor
mov
pop
jmp
stos
cmp
mov
test
stc
xlat
adc
jae
dec
mov
pusha
test
xchg
push
inc
dec
andb
sub
ret
pop
inc
and
add
arpl
out
int
adc
test
lret
out
clc
fptan
test
aaa
xchg
movb
adcb
mov
mov
mov
out
adc
push
add
xchg
jnp
int3
adc
inc
arpl
mov
int
inc
repnz
add
call
mov
jle
jp
arpl
pushf
sbbl
inc
test
clc
xor
fwait
jnp
jle
and
mov
xor
test
sbbb
sbb
jne
leave
movsb
mov
imul
mov
ljmp
test
jbe
test
xchg
mov
aad
pusha
shrb
or
mov
pop
pusha
test
pop
inc
imul
les
mov
dec
jecxz
mov
inc
mov
mov
ss
ja
and
add
test
leave
dec
pushf
out
mov
sub
test
lret
jp
sub
dec
mov
add
lock
nop
inc
mov
iret
or
sbb
pop
call
mov
lret
sbb
test
icebp
xchg
es
jecxz
dec
xlat
sahf
inc
sti
arpl
or
jmp
int3
mov
sti
and
push
repnz
jmp
fwait
inc
jmp
lds
testl
scas
mov
sub
test
inc
lds
sti
test
arpl
in
inc
hlt
je
pop
dec
jg
arpl
sub
int3
pop
jmp
fs
out
daa
sbb
lret
pop
movsl
pop
test
std
outsb
push
and
mov
pop
push
test
inc
sub
testl
test
fimull
mov
les
stos
sub
inc
in
push
pop
test
xor
dec
jb
test
stos
sub
call
dec
mov
push
lret
int3
inc
jp
call
aaa
inc
dec
lcall
test
add
mov
roll
subl
test
loop
xchg
fidivl
aad
movsb
cmp
leave
cmpsb
adc
test
mov
bound
loop
aas
arpl
mov
enter
outsb
mov
notb
and
lret
sub
and
test
lea
cltd
cli
inc
nop
and
lret
out
popf
mov
sbb
repnz
pop
outsb
imul
out
mov
fadds
push
or
arpl
popa
jmp
aaa
adc
sbbb
bound
cli
xchg
mov
cmpsb
xor
add
in
push
es
test
test
mov
enter
repz
in
imul
popf
fistpl
cld
jmp
and
adc
xor
xchg
clc
mov
ja
test
dec
cmpsl
adc
push
dec
test
es
loope
pop
mov
sbb
mov
int3
jns
mov
xchg
pushf
pop
inc
and
dec
rorb
push
xchg
test
fwait
lret
push
sbb
ficomps
xor
cmpsb
mov
xchg
in
sub
mov
in
fdivl
subb
daa
lods
lock
test
cmpsb
inc
ja
test
push
flds
in
lcall
sub
imul
mov
rclb
test
sub
pop
mov
mov
les
sub
lret
mov
fstl
and
int3
call
push
dec
cmp
xor
xchg
xlat
mov
sarl
mov
mov
inc
popf
mov
cli
cwtl
adc
xchg
inc
inc
mov
mov
sbb
add
mov
sbb
cmc
subb
push
sbb
mov
divb
inc
sub
into
sub
mov
sub
push
lods
sbb
xchg
xor
and
cmp
lock
xchg
call
in
jnp
jmp
rorl
test
mov
mov
cmp
test
shlb
xor
xchg
stos
test
fmul
and
test
rcrb
dec
cmp
test
loop
push
xor
dec
in
dec
mov
ret
inc
pop
xor
test
mov
sub
add
cld
test
xchg
adc
sub
push
jb
add
popa
adc
int
adc
xorb
xchg
xorb
sub
repnz
mov
jecxz
jmp
mov
test
daa
xlat
icebp
xchg
cltd
arpl
push
jmp
xchg
loope
inc
xor
lods
sahf
ja
test
into
and
imul
mov
xchg
push
xchg
jne
fldt
xor
pop
dec
add
mov
jle
xor
mov
inc
lods
push
mov
adc
arpl
movsb
lcall
cmp
pop
test
imul
sub
mov
mov
cli
int
mov
mov
jmp
sub
faddl
xor
mov
outsb
lods
push
rolb
xor
in
pop
bound
enter
gs
push
pop
push
test
jns
clc
arpl
shll
push
shlb
sti
jb
add
pop
mov
loopne
cwtl
les
xor
xchg
inc
frstor
lods
jecxz
pusha
jb
pop
nop
les
xchg
shr
mov
mov
inc
add
faddl
repnz
and
xchg
and
mov
movsl
ja
fldcw
jno
test
or
cwtl
test
pop
clc
aam
es
inc
decl
lods
imul
mov
mov
push
pop
sub
fisubl
adc
arpl
mov
lret
mov
test
push
lret
push
in
cmpsl
pop
in
mov
stos
mov
mov
inc
outsb
int3
sbb
leave
fadds
pop
inc
mov
test
lret
leave
dec
stos
sub
mov
pop
and
xchg
push
xlat
mov
and
out
xchg
xor
in
dec
mov
mov
xor
outsb
jmp
pushf
inc
cmpsl
add
inc
xor
inc
push
fucom
aam
pop
mov
dec
test
mov
lea
and
or
inc
ret
test
test
mov
lock
imul
xor
add
je
in
mov
test
xor
loop
cltd
sub
test
pusha
clc
pushf
sbb
cld
int3
push
sti
jbe
add
test
in
fcomps
imull
loope
hlt
push
mov
clc
cmp
idivb
test
mov
sub
dec
out
test
push
arpl
stc
push
arpl
xchg
test
sbb
or
xchg
adc
cmp
dec
mov
jecxz
and
xor
icebp
sub
mov
xor
arpl
in
sub
mov
mov
add
cmp
loop
ja
inc
dec
xor
test
sbb
xchg
jmp
inc
hlt
pushf
mov
loope
insb
lea
jmp
shrb
imulb
movsl
dec
inc
push
cmp
test
outsb
sub
sub
shrl
cmp
fmull
test
and
test
jp
loope
push
push
sub
pusha
mov
sub
hlt
pop
popa
shlb
jp
test
andb
dec
pushf
xchg
xor
test
dec
push
or
ja
jg
add
sahf
inc
popa
mov
cmp
cld
push
push
je
xchg
mov
pop
dec
xlat
outsb
test
push
imul
xchg
ret
add
insl
bound
pushf
test
mov
repnz
mov
stos
popf
cmp
and
jl
or
test
lods
mov
mov
adc
fcmovnb
dec
arpl
nop
jnp
push
push
test
lds
pushf
test
push
cmc
cli
pop
inc
dec
dec
test
adc
jle
dec
inc
push
fcmovnb
or
mov
lahf
mov
sub
out
xchg
arpl
stos
in
mov
mov
test
mov
sub
test
hlt
dec
and
sbb
mov
les
cmp
xchg
aaa
pop
jb
mov
cs
dec
pop
test
std
jg
push
popf
xchg
pushf
test
cltd
lcall
inc
lret
jae
sbb
test
hlt
xchg
sub
xor
jno
pop
sbb
orb
stos
daa
addr16
inc
and
mov
mov
movsb
dec
mov
xor
push
addb
mov
test
or
dec
pop
sub
int
pop
and
ret
mov
imul
or
sub
ja
movsb
dec
sub
mov
int3
in
lahf
and
adc
cmc
jmp
mov
leave
daa
lret
imul
jg
sub
cmp
pusha
pop
aaa
movsb
out
mov
and
mov
lods
mov
xchg
je
pushf
inc
lret
mov
xchg
push
jmpw
pop
test
mov
mov
mov
movsl
jp
stos
test
nop
push
arpl
popa
dec
mov
push
mov
in
pop
mov
add
int
dec
nop
push
incb
push
out
daa
in
cmp
js
dec
mov
ret
dec
lods
scas
es
mov
testb
test
jb
int3
mov
in
lret
nop
or
add
fs
arpl
repnz
mov
sbb
lock
mov
xchg
push
enter
test
loop
push
popf
xchg
pop
test
pop
push
loope
and
lock
xchg
and
sub
mov
data16
out
pop
outsl
and
mov
int3
shld
pusha
les
adc
in
pop
lock
aad
insl
sbb
fidivl
pop
movsl
daa
test
loop
dec
jp
movsb
adc
fwait
push
dec
or
cmp
je
idivl
xor
enter
cmp
out
mov
mov
rclb
lahf
adc
and
cmp
test
pop
push
movsb
xchg
xor
sub
test
lahf
pop
cltd
pop
vmovntps
popw
pop
dec
cmp
gs
add
cmp
sbb
movsb
push
arpl
jp
pop
lret
mov
mov
in
cmp
jne
fstps
dec
jo
aaa
movsb
mov
scas
cli
mov
mov
xor
jns
jbe
pop
inc
xor
mov
ja
cmp
cltd
pop
pusha
mov
pop
cld
xchg
in
adc
into
das
push
test
xchg
and
push
ror
test
aam
dec
sub
jb
je
iret
dec
imul
ret
adc
arpl
inc
mov
sub
push
pop
xor
jp
popa
ret
enter
dec
sbb
fwait
sarb
add
out
xchg
dec
mov
addb
xor
movsl
icebp
insb
pop
arpl
adc
xchg
sub
daa
imul
test
out
inc
adc
or
movsb
and
or
cmc
cmpsb
mov
mov
pop
adc
testb
fisubs
or
movsl
les
or
jle
mov
out
mov
in
add
mov
cmp
mov
outsb
jl
cltd
daa
mov
packsswb
sbb
add
test
fstl
test
push
leave
out
jmp
enter
popa
mov
sub
idivb
and
cmc
push
inc
xchg
bound
jp
sub
adc
lcall
sub
test
aaa
cli
gs
inc
push
sbb
test
test
int
cmp
pop
fbld
test
shrl
inc
add
dec
out
dec
movsb
sbb
inc
mov
pop
mov
stos
jge
mov
cmp
bound
or
push
push
add
stos
inc
lret
aad
inc
mov
cmp
test
cltd
sub
inc
cmc
arpl
mov
and
test
mov
test
mov
xlat
lcall
test
xchg
lods
jb
mov
std
mov
and
push
test
sub
or
xor
xor
xchg
enter
jp
jnp
pop
pusha
and
mov
jne
fucom
jg
adc
in
lret
dec
sti
jmp
inc
dec
push
mov
or
cmpsb
loop
cmp
movaps
movsb
sub
mov
pop
jp
cmpsb
add
je
in
int3
test
aad
lret
sub
add
push
jo
les
fstpt
cmpl
stos
and
in
or
jecxz
xor
push
add
int
mov
push
pop
in
out
push
or
mov
ja
fwait
mov
push
lret
sub
test
or
mov
mov
jne
mov
lretw
inc
xchg
and
xchg
sbb
sub
mov
push
or
sub
mov
stc
xor
mov
sub
mov
jns
pop
push
bound
pop
mov
lea
mov
inc
test
arpl
sub
mov
jge
mov
mov
fucomp
test
sub
or
int
mov
cmp
mov
test
push
mov
test
cltd
popa
lahf
vpacksswb
loop
fs
and
push
mov
gs
mov
addb
dec
and
push
cmpsl
int3
out
inc
insl
push
or
sub
cwtl
pop
mov
test
icebp
push
sbb
mov
je
mov
bnd
fld
mov
ja
or
loope
or
mov
call
test
sbb
mov
arpl
mov
int3
xor
in
pop
pop
cmpb
and
loope
adc
push
mov
dec
adc
jecxz
and
add
loope
test
pop
and
pop
sub
mov
sarb
test
xchg
mov
cmp
inc
or
stos
mov
pop
out
mov
dec
inc
add
aaa
lock
sub
js
inc
ret
mov
popa
mov
test
ret
mov
and
inc
xchg
call
fs
test
dec
adc
or
or
or
insb
into
jecxz
loopne
lcall
and
out
aad
test
and
and
into
adc
test
sub
lret
test
in
divl
js
pop
xchg
xchg
test
jae
xchg
negb
test
into
cltd
sub
jmp
clc
fdivrl
iret
stos
cmp
loope
into
mov
pop
clc
jecxz
outsb
push
xchg
xchg
add
test
jmp
cmp
movsl
addl
dec
xor
les
mov
ljmp
cmp
push
leave
mov
mov
push
mov
cmp
into
test
repnz
out
mov
aas
sub
mov
test
fstpt
jo
out
test
pushf
inc
pop
add
fs
inc
or
dec
clc
jno
and
xchg
mov
les
sub
xchg
or
ret
clc
xor
test
mov
lahf
xchg
leave
movsb
lret
xor
xchg
out
test
cli
xchg
imul
or
mov
adc
cmpsl
aad
xchg
sub
jge
lods
call
xor
pushf
push
mov
and
fildll
ret
pop
test
and
adc
mov
mov
test
sub
jecxz
enter
aas
sbb
xchg
fxsave
jnp
sub
jmp
cmp
xor
and
sarl
push
fiadds
jp
arpl
sbbl
lret
out
movsb
adc
or
les
test
push
mov
push
inc
stc
outsb
in
fcmovne
sbb
xor
add
shll
push
cmp
cltd
test
adc
pop
jne
out
ret
test
inc
mov
push
and
stos
incl
je
xchg
mov
add
fucom
in
ret
pop
pop
mov
sub
arpl
enter
loop
and
insl
pop
repz
adc
or
jp
mov
xor
mov
out
movsl
outsb
es
test
stc
fisttpl
je
movsb
sbb
inc
mov
inc
outsl
jmp
mov
movsl
cmp
test
push
dec
dec
das
in
int3
push
push
and
mov
lods
inc
aad
and
mov
push
cld
int
out
push
or
inc
test
test
jbe
test
dec
in
xchg
test
pop
icebp
mov
cli
inc
pop
lea
test
push
mov
add
mov
and
cli
lret
sbb
and
ficompl
mov
repnz
jb
add
stos
mov
push
pusha
adcb
push
push
inc
test
mov
pop
insb
in
popl
test
stos
xchg
int
sbb
iret
jbe
xor
mov
mov
test
push
sahf
fstpl
mov
push
shlb
xor
push
xchg
pop
test
loopne
jno
notb
xchg
test
bound
movsl
mov
push
test
push
repz
mov
mov
movsb
sahf
mov
mov
and
inc
jno
adc
xchg
out
mov
and
push
aad
cmpl
jmp
ja
clc
mov
in
and
cmp
push
mov
rol
jbe
push
xchg
idivl
stc
lcall
imul
push
sbbl
mov
test
jg
and
loop
incb
mov
and
sbb
push
std
clc
dec
push
hlt
in
mov
xor
cld
lret
jecxz
call
mov
cli
test
push
xchg
pushf
dec
sub
cmc
sub
movsl
jae
ja
call
lret
test
mov
fcompp
sub
test
pop
or
adc
and
mov
push
bound
subb
jo
hlt
add
dec
mov
push
ja
xchg
push
mov
dec
pop
addr16
push
mov
fwait
lcall
std
push
leave
dec
jmp
test
sub
cmp
cltd
and
ss
out
je
popf
cmp
dec
in
loopne
out
dec
jp
flds
scas
loop
jle
incl
leave
arpl
adcb
test
fstps
mov
bound
add
clc
movsb
jecxz
lods
push
push
mov
das
mov
dec
dec
mov
add
loop
sahf
test
push
movsb
fdivrs
and
add
add
andl
adc
mov
cmp
lds
mov
jno
clc
loopne
mov
clc
adc
fdivr
jecxz
pop
lcall
inc
outsb
lahf
sbb
ret
mov
mov
cld
insl
or
lds
xchg
pop
jp
gs
in
in
mov
mov
outsb
test
arpl
sub
and
inc
sti
in
in
loop
hlt
cmc
mov
pop
pusha
and
adc
sbb
mov
mov
mov
test
jns
insl
xchg
lcall
mov
lret
jne
mov
sbb
shrb
jno
test
jl
sub
dec
inc
test
jns
pop
mov
adc
out
out
test
and
pusha
sbb
out
sti
adc
test
je,pn
sbbb
data16
stos
mov
sbb
xor
push
or
scas
sbb
jbe
mov
push
xchg
adc
les
and
sbb
cltd
shlb
mov
call
mov
sbb
fwait
cld
mov
cmp
shl
into
mov
pop
mov
fwait
and
xchg
mov
mov
das
lcall
neg
or
inc
xchg
test
push
cmp
test
addr16
sub
mov
xor
test
pop
fiadds
test
adc
pop
push
pop
adc
cmc
es
aad
inc
stos
xlat
fidivrl
stc
test
fdiv
lret
mov
add
sub
sub
mov
and
lcall
int3
fidivrl
xor
dec
int
dec
cmpps
out
or
add
test
mov
mov
ret
data16
sub
inc
in
or
pop
loope
mov
rcll
fwait
test
mov
add
pop
cld
adc
ret
into
xchg
xor
fisubrs
xchg
mov
adc
gs
int3
sub
pop
xor
cli
dec
sub
ljmp
inc
js
or
xorl
push
int
int3
jo
cmp
xchg
leave
sub
mov
lret
xor
nop
les
sahf
pop
sarl
pop
mov
loope
movsb
add
dec
popa
xchg
pop
imul
inc
dec
inc
cwtl
cld
xor
test
mov
or
lret
mov
lods
pop
test
jne
frstor
sub
sbb
mov
add
int3
or
xlat
bound
lret
test
aaa
xchg
in
test
aas
fcmovne
ret
sub
shl
test
jo
mov
mov
sub
gs
rclb
das
jecxz
mov
sub
dec
imul
jecxz
test
xor
adc
or
jnp
and
add
lret
dec
inc
out
inc
test
cli
clc
nop
push
sub
test
dec
popa
shrb
sub
push
mov
clc
out
fs
insb
cltd
xchg
adc
cmp
inc
push
mov
lret
fcompl
test
pushf
ret
lret
pusha
push
xor
testb
cli
sbb
add
jb
sahf
mov
fmull
out
cmpsb
and
push
xor
arpl
pop
mov
and
icebp
sub
divb
mov
cli
push
sub
test
jecxz
xchg
and
xor
push
bound
and
int
icebp
xlat
cmpsb
out
popf
test
lret
test
pop
inc
aas
or
mov
fistpl
hlt
daa
xchg
lods
dec
fwait
jno
or
fs
adc
and
adc
push
mov
dec
or
leave
and
in
aas
mov
test
jp
add
cmp
clc
test
jmp
mov
cli
call
mov
adc
lds
bound
pop
dec
push
test
xchg
push
test
clc
mov
movsb
cmp
les
in
adcl
adc
in
push
and
out
idivb
dec
dec
mov
scas
test
xor
movsb
sahf
lds
cmp
jecxz
scas
loop
xchg
add
mov
bnd
sahf
sub
jo
mov
mov
dec
sub
test
sbb
jmp
mov
cltd
mov
lret
dec
or
add
sti
mov
popf
dec
testb
mov
add
test
sahf
daa
cmpl
push
test
push
pop
push
loop
and
push
xchg
xor
mov
movsl
lods
mov
mov
test
adc
lret
or
add
test
sbb
add
cmc
lret
jmp
fsts
testb
fwait
push
test
cmp
jmp
outsb
inc
pop
mov
dec
push
mov
fimull
in
enter
push
mov
sub
fldl
dec
mov
xor
push
and
dec
aaa
sub
mov
jns
jle
mov
xchg
mov
test
jecxz
loopw
pop
cmpsl
test
fs
xchg
out
sbb
in
test
xor
lods
orb
cmp
mov
pop
adc
or
xchg
dec
lcall
shrl
test
xchg
inc
repnz
xor
das
out
mov
insb
inc
push
lret
mov
movsl
jae
mov
test
pop
sub
dec
bound
shll
test
mov
mov
jbe
daa
inc
cmp
in
sub
jae
pop
mov
sub
fwait
cwtl
pop
in
aaa
leave
add
jle
icebp
jmp
popa
inc
add
pop
push
push
test
jne
jge
cmp
lock
push
movsl
xchg
test
inc
pop
loope
jp
sub
inc
xor
idivb
test
ficoml
stos
enter
test
cmp
jo
mov
das
push
scas
test
or
rep
pop
inc
jp
sub
sahf
fdivs
jle
cmc
sub
int
stos
test
add
xor
mov
lcall
mov
inc
dec
inc
mov
aam
dec
cwtl
outsb
addb
push
lret
fcomps
sub
xchg
lea
test
mov
add
lcall
imul
pop
push
test
or
xchg
popf
push
test
jge
and
push
push
dec
sub
xchg
in
in
cwtl
call
shrb
test
enter
xor
pop
stc
mov
mov
fiaddl
mov
push
xchg
lcall
xchg
xchg
mov
sahf
insb
jo
pop
arpl
dec
jae
das
mov
sub
enter
outsl
in
fwait
stc
cmp
test
push
mov
adc
mov
or
roll
test
push
xor
xlat
repnz
movsb
add
dec
fstps
mov
movsb
mov
fstl
bound
mov
dec
jg
sahf
xchg
sub
dec
imul
dec
sbbb
loop
sub
arpl
stos
mov
mov
add
pop
sub
dec
and
dec
xchg
jmp
jbe
aaa
xchg
sbb
mov
leave
shlb
jl
sub
add
and
xor
cmpsb
ja
daa
mov
jns
and
shll
test
in
or
xchg
push
movsb
sub
test
inc
sub
sahf
mov
cld
sti
mov
dec
mov
jle
sbbl
mov
fs
test
js
xor
mov
sti
sbb
jl
add
inc
out
bound
cltd
inc
mov
lahf
adc
test
push
in
test
push
shlb
xor
cmc
orl
push
jle
jmp
ss
shl
dec
jnp
lods
dec
push
sub
mov
adc
cwtl
xchg
clc
mov
repz
bound
dec
cmp
test
dec
je
test
icebp
imulb
push
movsb
jb
lds
lods
sub
mov
sbb
js
rcr
push
outsb
inc
push
test
stc
add
test
jbe
jo
mov
test
popa
xlat
jp
and
test
dec
cld
or
jle
add
cmpsb
mov
lahf
push
out
arpl
out
out
mov
ja
pop
dec
xor
insl
movsb
in
cmp
icebp
push
in
cmc
push
lods
and
mov
cli
insl
dec
bound
test
mov
arpl
out
rorl
iret
cmp
pop
ret
sbb
cmpsl
mov
in
mov
test
push
xchg
inc
out
cmc
clc
movsb
out
xchg
jo
cwtl
and
adc
or
mov
mov
mov
lods
jge
push
test
or
mov
xchg
clc
mov
inc
test
int
stos
test
int3
cltd
loopne
dec
or
test
sbb
pushf
in
addr16
push
in
mov
mov
rorl
test
mov
scas
imul
adc
hlt
pop
clc
push
imul
pushf
jmp
test
push
jb
mov
test
les
mov
mov
out
sti
ficomps
add
adc
mov
sbb
mov
bound
xchg
mov
pop
fldcw
push
test
cmp
or
test
xchg
push
out
mov
pushfw
mov
ret
jb
das
in
cmp
mov
mov
in
sbb
loopne
js
in
pop
pop
idivb
fisubs
test
xchg
and
sub
cmp
pusha
popf
int
or
test
cs
loope
pop
pop
xor
lret
rcrb
sub
addb
dec
inc
test
jp
sbb
ret
mov
sbb
jae
cli
sbb
jmp
pop
add
int3
lcall
clc
orl
test
repnz
cmpsb
mov
push
adc
lds
jno
and
test
notb
fsubl
in
mov
call
dec
xchg
lahf
push
lret
push
outsb
cmp
out
and
mov
nop
in
out
mov
cld
sti
mov
aas
dec
in
adc
jp
movsb
in
inc
and
sub
loop
arpl
xor
outsl
test
loope
imul
icebp
test
push
mull
mov
je
jecxz
outsb
out
clc
and
mov
test
or
add
popa
movl
test
push
arpl
or
pop
int3
cwtl
cmp
test
shr
ja
mov
xchg
push
add
cmp
cmc
mov
arpl
iret
adc
pop
push
test
and
loop
adc
xor
test
into
aas
adc
test
push
stos
sub
cmp
dec
mov
cmp
xor
inc
lahf
xchg
test
adc
push
cmp
cwtl
inc
dec
test
sbb
dec
lret
cmpsl
in
call
std
xchg
jp
enter
aaa
cli
sbb
sub
sbb
adc
gs
test
mov
mov
arpl
inc
cmp
sbb
int3
cwtl
mov
and
test
shll
pop
sub
and
mov
fisubl
dec
ret
mov
call
xchg
sub
mov
data16
pop
xchg
mov
xor
or
les
rolb
negl
enter
das
xchg
loop
ja
movl
and
pushf
mov
stos
mov
idiv
leave
and
test
jl
cli
dec
pop
incb
in
xchg
loopne
jp
leave
test
jecxz
loop
pop
ss
scas
adc
test
repnz
pop
out
push
lcall
test
and
jae
test
add
mov
daa
mov
test
std
lds
in
and
sub
jne
push
pop
aaa
inc
cwtl
cmpxchg
push
dec
add
inc
cmc
cs
testl
scas
sbb
pusha
inc
xor
icebp
out
sti
popa
or
iret
test
ret
ret
sub
test
dec
call
xchg
sahf
and
pop
fs
or
pop
cmp
in
loope
jmp
cs
mov
lods
lret
jle
pop
push
ret
out
xchg
lret
mov
scas
pop
test
icebp
sbb
orl
aad
test
mov
nop
dec
shl
inc
add
jo
pop
add
test
pop
jne
test
or
arpl
ljmp
push
jg
test
subb
test
lock
test
loop
dec
fnstsw
push
ss
push
or
test
dec
ja
jecxz
addr16
ret
push
icebp
add
lret
arpl
lock
xchg
in
stc
nop
mov
loop
sbb
jl
mov
cmp
test
cmp
jp
aaa
imul
cmp
sub
sub
test
cltd
sub
xchg
call
mov
fistps
cmp
inc
in
popw
test
push
inc
test
sub
fwait
add
sub
xor
insb
in
xchg
sarb
mov
stc
cmp
sbb
test
shll
or
and
stos
in
jge
movsb
inc
out
or
repnz
mov
pushf
mov
arpl
test
insl
popa
cmpsb
sub
sbb
scas
mov
xchg
dec
lahf
rolb
clc
ror
aam
mov
xorb
jle
or
test
test
movsb
shrl
adc
sub
insl
cwtl
sbb
cli
mov
and
push
out
repz
mov
sub
lock
mov
xchg
icebp
cmpsl
sbb
add
adc
jecxz
pop
cli
lea
push
push
xchg
mov
das
mov
ret
sub
adc
stos
xacquire
jmp
sbb
in
mov
test
mov
mov
mov
stos
cmp
xor
loope
movsb
sbb
xor
lock
and
push
mov
and
hlt
jbe
jno
inc
cmp
dec
test
ja
test
inc
cmc
push
push
test
aaa
cmpsl
lea
xchg
jb
cmp
test
push
loope
jns
hlt
dec
inc
dec
jle
sub
cmc
test
xor
icebp
inc
lret
and
push
sub
jb
sti
cmp
outsl
lods
loopne
fnstsw
mov
fnstenv
adc
sti
cmp
movsl
enter
add
pop
mov
fldenv
mov
mov
inc
and
jle
dec
sbb
mov
mov
mov
ja
sub
das
xor
mov
or
xchg
xchg
or
cld
test
ficomps
inc
cmpsl
dec
dec
clc
divb
pop
scas
xorb
iret
cmpsb
aas
and
jg
dec
movsb
sub
cmp
mov
mov
scas
lret
cmp
inc
pop
sbb
bound
jnp
cwtl
mov
jo
dec
push
xchg
test
inc
test
dec
cli
test
js
jle
push
push
repz
test
dec
add
das
mov
cltd
mov
shl
cli
add
dec
dec
sub
push
test
mov
movsl
cmpsl
in
scas
shl
adcl
bound
push
out
mov
push
out
insl
arpl
fstps
test
adc
xchg
fbld
xchg
fisttpll
sbb
les
inc
add
insb
sti
test
lahf
icebp
xchg
push
mov
push
jmp
mov
lds
jbe
arpl
mov
les
push
sub
jb
mov
adc
mov
xchg
cmc
mov
sub
sbb
lods
inc
mov
test
jnp
jbe
mov
xor
jl
xchg
mov
pusha
inc
mov
or
and
pop
test
out
or
sub
stos
nop
cli
or
outsb
divb
test
xchg
pop
fnstsw
pushw
nop
push
pop
cltd
sub
mov
mov
hlt
add
addr16
in
cmc
das
dec
add
xor
pushf
loop
add
sbb
std
or
sub
in
add
shl
mulb
and
in
or
add
int3
and
and
pop
in
popf
pop
cmp
push
std
mov
xchg
or
stos
test
lret
mov
pop
dec
test
in
lret
mov
pop
loopne
mov
test
pop
jecxz
xor
mov
inc
xchg
and
test
or
subl
jecxz
pop
push
arpl
test
jmp
mov
test
lds
jg
pop
in
testl
out
xchg
ds
sti
enter
lea
cmp
cmpsb
loope
and
cmp
adc
xchg
fbstp
test
jle
inc
lcall
jno
loopne
mov
cs
arpl
rclb
mov
inc
ds
pop
mov
in
popa
mov
sub
jmp
insb
mov
in
push
fimull
movsb
xchg
mov
mov
enter
pop
pop
in
jmp
data16
jg
xchg
jl
dec
xor
shrl
fwait
or
and
sti
popa
push
adc
cmc
fmull
bound
push
sub
xchg
mov
lock
test
pushw
pop
sub
fwait
and
clc
adc
cmc
pop
enter
loop
scas
test
pusha
inc
dec
lcall
jbe
push
and
sub
enter
test
and
mov
aam
enter
mov
push
fldl
test
inc
les
and
cmc
psubsw
mov
mov
iret
in
push
pop
fs
mov
sub
xchg
mov
imul
test
jmp
mov
pusha
mov
ret
lcall
movsl
imul
dec
add
ss
ret
popf
arpl
inc
movb
mul
test
push
arpl
add
lods
outsl
inc
jecxz
jp
stos
popf
jne
adc
inc
sub
shl
cmp
jmp
and
mov
mov
loopne
test
pop
xor
and
jbe
lods
mov
mov
or
aaa
test
imul
inc
test
enter
repz
hlt
mov
fdiv
cltd
push
cmp
dec
test
ret
pop
jl
sahf
push
fcomp
repnz
movsl
or
jmp
and
push
add
es
sbb
inc
mov
mov
mov
pusha
mov
je
dec
movsl
test
pop
dec
fidivs
xchg
jp
shrl
sub
addb
out
mov
and
lea
stos
test
jnp
push
out
inc
and
xchg
mov
movsl
fwait
jmp
movsb
lds
out
ret
or
mov
mov
movsb
xchg
fwait
pop
icebp
pop
or
cli
dec
test
xchg
mov
pop
test
mov
mov
xchg
in
pushl
mov
pop
sbb
test
imul
test
popa
fists
push
std
lret
icebp
shlb
in
test
cmpsb
sub
push
test
mov
rorl
sti
cld
sub
xchg
sbb
dec
test
xchg
cmp
mov
js
int
adc
mov
or
mov
pop
dec
and
adc
test
jnp
cmpsb
push
test
mov
mov
loop
je
test
xchg
push
loopne
push
imul
cwtl
add
add
outsb
aas
xchg
adc
cmpsb
mov
test
int3
sub
fiaddl
sub
mov
mov
inc
jno
arpl
lcall
mov
sub
dec
xchg
pop
push
test
jnp
mov
testl
mov
push
ljmp
jmp
popa
seta
jns
test
and
test
inc
mov
xor
and
movsb
xchg
movsl
or
jecxz
in
jge
test
fcmovbe
in
in
movsl
sti
test
out
sahf
jge
lret
or
inc
sub
aad
cmpsl
push
pop
sub
shlb
movsb
dec
data16
test
mov
and
pop
xchg
jno
test
cmp
adc
aam
and
push
sbb
mov
outsl
test
dec
cmpsl
sub
stos
jecxz
pop
test
movsb
inc
or
sbb
bound
sub
int
adc
movsb
dec
repnz
out
cmpsl
test
inc
lds
pop
and
mov
stos
push
push
in
pop
test
jbe
adc
inc
rolb
int
test
mov
mov
out
sarl
lods
mov
in
jp
push
or
mov
adc
jbe
in
push
fldenv
lret
cmpsl
push
mov
mov
cmp
cmpb
insb
and
dec
jle
push
imulb
stos
in
dec
jecxz
sbb
sub
aam
dec
movsb
mov
jp
js
test
int
outsb
test
push
mov
pop
cli
and
mov
fbstp
fcoml
shrl
adc
imul
dec
test
fbstp
test
fstpt
fisubl
test
testl
add
jne
dec
test
movsl
adc
xchg
subb
test
or
sbb
clc
cmpsl
test
lds
outsb
data16
jecxz
adc
sbb
jg
test
out
movsb
sbb
les
or
inc
arpl
push
ja
int3
bound
cmc
pusha
test
mov
fwait
es
adc
inc
jb
mov
in
sub
sti
loope
decb
and
and
mov
mov
arpl
mov
cld
mov
test
pushf
mov
test
pop
mov
add
pop
ret
add
sbb
sbb
icebp
mov
in
dec
dec
add
scas
call
push
push
insb
adc
push
cmpsb
and
jo
test
sti
shll
mov
jae
aam
out
repz
mov
into
mov
pop
push
cmp
shll
adcb
mov
jbe
cwtl
sub
mov
test
sbb
dec
cmc
out
adc
test
fidivrl
mov
mov
lds
nop
call
or
test
pushf
fsubrl
repnz
and
inc
icebp
adc
jle
pop
ror
test
inc
jg
sbb
mov
dec
or
cmc
loopne
into
xchg
sub
and
cmp
insb
mov
negb
mov
test
inc
fstpl
jae
push
dec
pop
mov
and
mov
cmc
ja
sub
inc
lea
lods
dec
imul
push
test
mov
mov
push
push
jb
mov
shll
mov
test
add
rcll
inc
mov
dec
in
jno
icebp
test
inc
dec
sub
pop
sbb
bound
inc
sar
mov
xchg
pusha
mov
loopne
cmpsb
arpl
xor
push
sarl
movsb
pop
sub
repnz
push
test
js
lods
icebp
mov
std
push
mov
xchg
insb
cli
lret
mov
test
scas
test
in
and
push
fwait
shlb
inc
test
cmp
repnz
or
fcmovb
push
dec
rolb
les
dec
std
notb
clc
sbb
jmp
test
xor
jnp
imul
cmpsb
lret
pop
sub
test
movsb
adc
loope
cmc
fldcw
jne
mov
xchg
lods
pop
movsl
subb
mulb
lea
out
lahf
lea
and
fnsave
arpl
xor
xchg
jmp
iret
add
pop
lea
lret
testl
pop
inc
test
xchg
insl
test
lahf
int
icebp
cmp
cmpsl
dec
mov
in
and
push
or
ss
not
cltd
test
mov
lcall
push
sub
xor
mov
mov
sub
test
push
or
xchg
dec
ja
std
mov
testb
test
dec
lret
xchg
les
or
insl
push
mov
xchg
enter
fnstenv
gs
xor
test
sub
or
mov
arpl
leave
or
xor
test
mov
test
test
adc
mov
cmpsl
test
pop
stc
in
jle
das
dec
mov
mov
dec
ret
lea
loopne
and
add
jp
mov
push
loope
stc
sub
nop
jl
and
sbb
cmpsb
cmp
cmpl
cli
fs
stos
test
mov
test
adc
push
jns
or
pusha
arpl
cmp
mov
test
lcall
mov
mov
popf
sahf
fpatan
test
insb
add
dec
cwtl
imull
add
push
mov
test
or
test
cmpsb
sub
mov
jl
sub
lods
xchg
outsb
test
pop
jbe
pop
sub
mov
sub
movsl
icebp
push
push
insl
fmulp
je
scas
in
test
xchg
bound
mov
leave
sub
test
mov
sbb
inc
and
xor
popa
jge
adc
jb
cmpsl
sbb
dec
push
cmc
and
loop
arpl
lret
test
out
pop
ret
in
out
sub
pusha
sbb
pop
cmp
incb
lret
mulb
test
notb
sbb
inc
sti
jb
test
mov
and
test
aam
push
sbb
test
pop
push
adc
jge
adc
lahf
jle
test
enter
in
lret
xchg
xchg
lods
or
test
jl
lds
cltd
push
xchg
pop
hlt
mov
test
jmp
sbb
push
cmp
mov
cs
cmc
adc
dec
mov
sbb
pop
mov
mov
pop
mov
cltd
lock
pushf
xchg
add
push
xchg
jae
cmpsl
add
jo
sbb
adc
test
and
dec
imul
adc
in
jmp
leave
nop
scas
mov
push
outsb
jo
mov
pushf
les
sti
jne
dec
and
sbb
push
bound
leave
lcall
fs
fistpll
outsb
pop
mov
inc
and
xorb
into
popf
test
fwait
shr
cli
xor
xchg
jo
lcall
inc
mov
movsb
or
leave
and
mov
fdiv
jp
stos
and
lahf
xchg
test
daa
add
push
jns
fstl
aam
cmp
addb
push
bound
cmp
add
enter
push
inc
adc
xchg
loop
cmp
adc
dec
addr16
push
pop
fisttpl
test
imul
rcll
mov
xchg
arpl
cmpsb
lds
dec
test
loop
jnp
cmpl
call
xchg
enter
mov
mov
test
pop
stos
adc
shrl
dec
dec
sahf
mov
cli
cld
call
out
sbb
aaa
sub
mov
imulb
fnstcw
int3
inc
sbb
out
mov
clc
push
push
dec
adc
jbe
call
sarl
je
mov
movl
xor
loope
pushf
add
xchg
mov
lahf
push
or
arpl
mov
xor
arpl
sub
mov
jmp
clc
jecxz
out
and
je
pop
movsl
cs
dec
sbb
orb
sub
jle
popa
arpl
cmp
pop
scas
mov
out
mov
mov
stos
test
cmpsl
jle
imul
xchg
test
rorl
imul
movsl
loop
testl
popl
andl
or
xchg
scas
arpl
mov
mov
mov
shll
test
adc
arpl
add
test
lcall
test
and
add
imul
sub
js
sahf
shl
jbe
test
cli
jo
mov
mov
test
pop
mov
movsl
jle
test
xchg
lret
push
test
cmp
pop
pop
push
movsb
leave
cltd
shrl
lret
mov
and
test
xor
mov
lods
jl
inc
push
cmp
sbb
xorb
push
scas
and
lock
xor
mov
mov
outsb
rcrb
push
leave
mov
and
sub
and
sar
in
sbb
mov
nop
pop
push
mov
test
testb
arpl
out
stos
test
ficompl
pushf
xorl
mov
inc
insb
ret
dec
mov
or
mov
add
hlt
test
es
xor
test
mov
negb
test
push
test
jo
push
xchg
test
cmp
test
mov
es
test
addr16
sbb
cltd
xchg
ffreep
and
inc
add
and
xor
lods
clc
cs
mov
test
dec
hlt
cmp
test
pop
in
xchg
daa
popl
adc
idivl
hlt
sub
cld
in
test
and
inc
in
jo
test
loopne
test
jmp
movsl
inc
clc
sbb
sub
sbb
rcrb
test
jbe
test
xor
mov
movsl
test
sbb
and
mov
int
dec
mov
inc
xchg
movsb
push
fdivl
sarb
loop
scas
test
sbb
cld
inc
outsl
pop
jge
adc
daa
movsb
sub
mov
cmp
adcl
leave
test
mov
insb
stc
push
dec
aaa
popf
stc
test
movsl
test
ss
sub
mov
les
lds
repz
in
test
jae
fcoml
push
sbb
and
lods
out
orb
int3
or
mov
adc
add
test
enter
rorl
and
outsl
pushf
rorb
leave
hlt
test
loope
cmp
xchg
test
xchg
ret
mov
jae
inc
push
es
pusha
mov
test
adc
adc
ret
inc
inc
mov
sub
mov
sub
test
stc
out
sbb
std
mov
dec
fwait
mov
incb
push
loopne
lahf
xchg
pop
mov
mov
testl
xor
in
sbb
repnz
enter
dec
push
xlat
icebp
mov
out
imul
enter
cmp
adc
mov
test
int
sub
js
jnp
sub
and
xchg
popf
test
xor
cmp
lock
mov
daa
sub
cmp
xchg
arpl
pushf
sbb
jmp
lret
mov
sub
mov
lahf
pop
test
popa
adc
jae
mov
arpl
daa
stos
push
sub
fcmove
pop
cmp
test
cli
aam
ja
insb
test
out
testl
gs
fdivrs
insl
test
mov
test
add
mov
sub
mov
ljmp
loopne
sahf
mov
mov
imul
xchg
movsl
arpl
push
jecxz
mov
inc
imul
mov
lret
xor
sti
cltd
test
sbb
or
lcall
flds
test
push
jb
push
dec
pushf
inc
test
ss
sbb
sub
aaa
fsubrs
cwtl
test
cmp
and
jmp
les
inc
fxch
xor
lds
cmp
test
pop
pop
test
icebp
lret
popf
cmpsb
mov
insb
cwtl
xchg
test
cmp
fmulp
shlb
shrl
ftst
adc
fdivrs
mov
cmp
push
push
and
out
or
jb
dec
movl
inc
mov
jecxz
xor
es
pop
sub
sarl
and
fsub
push
std
lcall
test
repnz
sub
test
dec
cltd
cli
les
pop
in
loope
and
test
xchg
jle
jl
cli
jno
lcall
cmp
lret
lods
or
cli
sub
mov
and
int
mov
mov
and
ficoms
test
stos
imul
test
pop
inc
inc
mov
in
gs
adc
lds
pushw
movsl
mov
mov
cltd
test
adc
mov
fwait
push
test
in
outsb
lret
test
ficomps
cmp
xchg
int
fwait
loope
test
repnz
add
out
clc
mov
sbb
test
les
int3
sbbl
sub
push
inc
add
mov
push
mov
ja
repnz
inc
sbb
mov
inc
lods
xchg
sbbb
test
es
in
mov
bound
pop
test
test
or
push
lcall
in
cmp
test
dec
ret
jae
adc
test
pushf
fiadds
loop
fwait
push
test
mov
loope
adc
aam
mov
out
lret
and
or
int3
in
das
cmp
or
ficoms
bound
add
jp
std
movsb
jmp
out
sub
test
subb
data16
dec
test
les
inc
mov
sub
sbb
inc
enter
fiaddl
imul
test
sub
les
sar
ror
ficompl
adc
mov
mov
mov
or
sbb
popf
or
test
test
or
outsl
test
fwait
jecxz
test
xor
mov
jp
in
test
leave
inc
push
push
test
data16
icebp
fwait
ss
cmp
dec
add
sarl
test
jp
push
test
test
adc
movsl
bound
cmc
sub
mov
push
jge
loope
pop
push
popa
push
mov
add
dec
test
daa
xor
aad
stos
jno
icebp
sbb
jl
in
or
test
pop
test
enter
jne
inc
fs
cmp
and
arpl
dec
or
jb
pop
add
cld
test
test
js
sbb
cwtl
mov
push
bound
mov
inc
sbb
mov
inc
xchg
or
scas
les
mov
xor
cmp
inc
in
std
jmp
mov
enter
int
pop
push
mov
xlat
mov
jp
movsb
pop
popa
out
cwtl
cmp
mov
lds
test
push
decl
dec
mov
movsb
mov
test
adc
test
clc
leave
es
out
nop
mov
fwait
test
stc
push
aam
sub
inc
test
mov
arpl
mov
ret
xchg
sahf
inc
mov
ret
lcall
pushf
bound
ja
lret
and
sub
mov
movsb
sbb
or
jmp
notb
mov
movsb
xchg
into
jp
nop
sub
fadds
mov
jnp
push
test
and
sbb
mov
aaa
push
test
dec
push
pushf
test
loope
mov
test
or
cmpsl
adc
jbe
flds
push
cmp
sbb
pop
mov
push
cmc
or
cmp
repnz
jne
sbb
jmp
std
test
push
bound
enter
sbb
stc
cmp
xor
or
mov
jno
nop
inc
xchg
mov
test
lcall
dec
adc
out
mov
ret
out
jmp
mov
jno
ljmp
cld
rol
iret
je
test
mov
in
dec
clc
xchg
fucomi
rol
dec
rep
xchg
or
lods
in
and
inc
dec
mov
mov
or
xor
add
push
stos
mov
cltd
or
mov
xacquire
test
sub
sbb
dec
aam
sbb
inc
xchg
cltd
cmp
jecxz
lahf
inc
push
test
push
mov
push
cwtl
sarl
test
xchg
loope
pop
cmc
mov
pop
enter
lret
or
test
dec
out
test
jbe
cmp
test
pushf
mov
jo
test
std
bound
scas
xchg
test
jge
faddl
push
jle
and
arpl
push
mov
jbe
ret
test
or
mov
imul
mov
lock
lret
sub
rolb
faddl
test
insl
pop
aas
sub
out
sub
cld
in
cmp
shl
push
daa
or
push
jmp
into
sub
ds
pop
iret
lea
test
mov
push
dec
test
ret
and
xchg
xchg
jmp
mov
test
enter
push
inc
popf
jo
inc
test
inc
mov
lcall
sbb
jne
arpl
inc
lret
mov
in
push
mov
sub
imul
test
pop
enter
xor
lret
sub
test
insb
stc
sub
jl
fs
xchg
sbb
movsb
shrl
leave
cmp
shl
test
mov
hlt
lods
dec
pop
scas
jecxz
mov
addb
cmp
test
inc
jbe
test
or
add
pop
pop
inc
loop
sbb
les
in
cltd
mov
int3
test
ja
movb
dec
in
mov
dec
push
fisttps
in
cmp
js
push
imulb
jb
mov
mov
push
xor
test
sub
mov
mov
test
jnp
sbb
mov
sub
jle
enter
xlat
sub
xchg
mov
fidivrl
sub
fxch
push
add
dec
fsubl
mov
pop
push
push
outsl
jl
mov
mov
lods
pop
sub
roll
mov
lret
mov
sbb
dec
in
leave
mov
xchg
clc
int3
and
sbb
sub
push
test
cmc
dec
loope
mov
movsb
lret
cwtl
cltd
mov
pop
xchg
mov
loopne
xor
ds
movsb
rcrb
mov
icebp
test
negb
mov
jne
xchg
add
push
push
xchg
jo
inc
outsl
cmpsb
movsb
in
test
movsb
aam
or
mulb
inc
and
in
add
mov
jp
mov
mov
test
adc
out
ja
xchg
sub
test
push
div
mov
mov
mov
pop
add
std
jne
arpl
inc
loop
mov
xchg
loope
je
test
shlb
and
andb
pop
clc
or
mov
jle
lock
cs
ljmp
add
sbb
or
sarl
das
push
cmp
lock
in
enter
pop
mov
or
ds
das
shlb
test
xchg
add
mov
popa
lods
cld
cmp
add
cwtl
push
stos
fmull
inc
mull
add
push
mov
mov
rorb
and
inc
lcall
dec
outsb
pop
pop
aad
popa
in
dec
sahf
test
or
cmc
div
sbb
mov
test
dec
inc
push
sbb
and
into
lods
xor
cmp
rcrb
pop
xor
push
xchg
nop
push
int3
stc
out
outsl
test
mov
loopne
inc
sub
pop
sub
std
adc
pop
test
addl
call
cmp
cli
mov
sahf
jo
push
push
pop
xchg
movsb
divl
or
test
sti
mov
cmp
test
jp
dec
push
mov
clc
int
and
push
sub
test
dec
xor
loop
mov
ss
nop
mov
mov
test
je
xchg
dec
clc
subl
neg
bound
xor
test
int3
jb
mov
arpl
jo
scas
sbb
inc
or
pop
flds
cmp
lea
sbbb
test
fldt
push
sub
jne
movsl
lcall
sub
movsl
fiaddl
mov
xchg
test
outsb
lret
sub
aad
lcall
push
mov
xchg
pusha
lret
pop
and
add
cmp
cmpsb
sahf
test
xor
sub
xchg
xchg
mov
mov
sub
outsl
incb
roll
pop
lods
mov
and
cmp
fsubrs
cmp
lds
mulb
in
aaa
sub
inc
pop
push
push
popa
loop
pop
movsb
imulb
xchg
mov
flds
scas
push
pushf
jbe
mov
xchg
es
test
or
jns
cld
cwtl
test
std
pushf
idiv
ds
xchg
test
xchg
insb
xchg
jmp
push
jecxz
cmpsb
jae
test
mov
ret
cld
test
in
dec
loop
xor
pushf
test
or
xor
push
in
int
jae
mov
mov
cwtl
cmp
mov
add
mov
scas
cmp
insb
mov
test
mov
sbbl
inc
xchg
fstpt
push
test
mov
cmp
push
adc
test
outsb
xor
int
cltd
mov
xorb
sti
mov
in
lret
cwtl
pop
cmpb
jbe
xlat
mov
xor
cmpl
sub
mov
out
outsb
std
cltd
mov
add
in
test
lret
mov
test
fxch
pushf
or
push
dec
or
inc
pop
xchg
push
push
mov
roll
fucomp
add
pop
or
mov
jp
lret
out
arpl
rcl
sarb
lods
into
enter
test
sub
shrb
pop
bound
xor
insb
out
or
test
int3
sbb
ds
adc
shrl
jge
mov
sbb
out
add
fisttpll
mov
es
das
test
outsl
push
cmp
jae
jle
mov
fmuls
aas
mov
arpl
mov
shl
sahf
lret
push
cli
arpl
divb
mov
push
or
sbb
int3
imul
test
dec
lods
mov
test
icebp
jp
fwait
mov
test
mov
mov
sub
fisubrl
mov
dec
sbb
test
or
sub
movsl
or
dec
jp
mov
mov
adc
mov
mov
loope
lds
shll
xorl
mov
clc
pop
jo
sbb
push
test
imul
xor
into
inc
dec
movsb
out
jmp
lahf
loopne
and
add
sub
bound
mov
hlt
xchg
mov
dec
repz
clc
adc
dec
mov
mov
mov
lods
ret
sbb
test
scas
dec
pop
pop
sub
test
loopne
sub
movsb
jecxz
and
fsubrs
pushf
pushf
mov
stos
mov
dec
lahf
mov
aas
sub
mov
in
lret
push
jns
outsb
push
jae
mov
movsb
inc
dec
xchg
mov
add
js
dec
dec
cmp
icebp
test
pop
mov
in
and
ret
out
push
stos
mov
subl
sub
push
incl
adc
lret
test
shrb
or
jb
stos
cs
push
sub
xchg
cmc
xor
inc
mov
push
push
cmpsb
testb
push
loop
adc
push
jae
sbb
adc
out
rol
decb
sbb
stos
popf
in
leave
test
sub
dec
enter
repnz
mov
jbe
ret
cs
sub
and
cmpsl
jl
mov
scas
push
mov
and
push
stos
movsb
dec
inc
ljmp
in
mov
mov
mov
and
push
js
push
shll
fxch
mov
jecxz
fwait
push
not
test
rolb
test
loop
jo
int3
shlb
mov
mov
outsb
in
push
ljmp
loopne
xchg
fstpl
rorl
jbe
cmp
xchg
outsl
sahf
inc
pusha
mov
test
leave
cmp
pop
sahf
pusha
mov
dec
push
and
jg
adc
xchg
aam
lods
jnp
faddl
rorl
lea
jmp
mov
cmpps
ja
jmp
xlat
test
adc
jp
xchg
aaa
test
in
xor
and
test
in
lcall
test
pop
cmp
clc
jl
fistpl
ret
push
lods
push
lret
test
lcall
movsb
dec
pop
push
stc
cltd
push
push
and
fsubs
sahf
mov
mov
push
sub
in
pop
and
movsb
int
lea
mov
ret
add
dec
aam
push
fbstp
fs
sbb
rcr
test
mov
adc
mov
cli
test
xor
enter
push
cmp
inc
pop
mov
and
icebp
arpl
test
mov
test
and
sub
pop
xchg
push
add
mov
mov
sub
stc
insb
pop
icebp
push
pop
mov
ror
sbb
adc
das
dec
cltd
test
push
mov
popa
dec
mov
add
stos
xor
shl
fisttpll
push
and
jno
arpl
inc
push
mov
pop
or
test
pop
insb
cmp
cmp
mov
bound
add
out
repz
pop
mov
mov
fisubl
ss
in
rorl
and
enter
pusha
mov
je
sbb
in
inc
mov
and
dec
mov
imul
dec
mov
inc
sbb
or
shlb
lods
sub
lods
icebp
test
ror
pop
arpl
or
dec
jp
test
enter
xchg
test
jno
lret
mov
or
xchg
push
pop
scas
xchg
mov
cli
add
popf
dec
mov
mov
push
xchg
mov
pusha
lds
push
dec
test
push
clc
sbb
test
mov
add
mov
ret
dec
mov
fcompl
and
fstp
das
outsb
fwait
test
pop
testb
push
cmp
out
incl
dec
mov
sbbl
popf
mov
scas
les
std
dec
in
xchg
mov
cli
mov
and
mov
test
cmp
sub
dec
xchg
stos
gs
test
mov
movsl
test
and
mov
dec
sbbl
dec
dec
xchg
clc
jp
mov
mov
ret
ss
xor
movsb
mov
mov
push
mov
scas
pushf
popa
loope
push
add
fnsave
ret
cmpsl
cmp
push
push
push
add
xor
or
add
rol
jne
and
inc
test
fwait
xchg
fmuls
sub
ja
sbb
push
ljmp
adc
rcll
push
jae
mov
pushf
cmpb
dec
or
imul
mov
or
or
mov
loop
pop
mov
lds
adc
loope
mov
test
ror
ret
rcrl
out
lret
loop
mov
aaa
jge
clc
cmp
sub
mov
ja
xchg
les
lds
mov
pusha
cmp
push
ret
cmp
inc
cli
jle
xor
test
aad
loop
icebp
mov
scas
adc
sbb
or
das
test
aam
pusha
jge
mov
test
xor
mov
xchg
lcall
roll
sbb
inc
in
xchg
adc
in
mov
insl
adc
adc
arpl
pop
mov
mov
fs
inc
movsb
jmp
test
mov
fwait
adc
in
push
inc
or
leave
cmp
cli
mov
test
mov
insb
cmp
clc
pop
or
mov
dec
in
or
push
xor
test
dec
pop
push
in
mov
fwait
mov
mov
jmp
or
sbb
sub
leave
jns
mov
cmp
adc
inc
cmc
test
sub
test
push
mov
mov
fwait
pop
ja
mov
or
xor
sub
sbb
xchg
movsl
repnz
in
sbbl
mov
outsl
test
test
ficompl
dec
xchg
add
pop
mov
jmp
into
mov
cltd
add
push
or
pop
icebp
xor
mov
push
test
loopne
push
pop
push
inc
sbb
inc
cmp
mov
xor
in
adcb
inc
push
in
mov
in
inc
jp
mov
test
mov
cltd
xor
mov
or
mov
test
push
xor
test
out
and
mov
inc
dec
ret
jns
enter
test
and
sub
clc
test
xchg
stos
test
lcall
inc
mov
icebp
in
fcmovnb
lods
mov
mov
sti
fildll
mov
jle
movsb
add
and
loope
insb
mov
loop
and
push
mov
or
aas
bound
lods
stos
dec
mov
xchg
test
and
cli
loop
mov
les
bound
fmul
add
popa
mov
lds
lret
push
sti
lods
fldcw
test
stos
movsl
xor
enter
lahf
jmp
cwtl
test
fwait
repnz
push
adc
test
push
ret
sub
xchg
mov
cli
test
orb
inc
jne
out
aam
pop
scas
sub
clc
cli
arpl
into
das
pop
in
mov
jne
xchg
jecxz
cmp
mov
daa
jmp
fstps
push
dec
arpl
sbb
jb
test
lods
aas
ss
pop
notl
lret
jge
mov
cmc
bound
dec
sub
dec
addr16
xchg
mov
inc
jns
out
push
test
mov
lcall
test
jb
lds
dec
pusha
cmp
add
push
ficomps
push
dec
inc
lock
test
dec
les
mov
mov
out
test
jb
inc
hlt
fs
mov
jl
xchg
dec
mov
pop
testb
movsb
dec
shl
dec
mov
out
movsl
xchg
mov
mov
push
sub
in
divb
insl
or
dec
movsb
js
xchg
xchg
cltd
ss
mov
jl
movsb
mov
or
cmpsb
pop
push
adc
test
fldcw
popa
pusha
test
das
shl
mov
int
mov
loope
loop
mov
test
hlt
mov
push
test
lods
mov
jg
out
dec
outsb
and
test
inc
xchg
lds
shrl
loopne
cli
jmp
movsb
iret
or
in
test
cmp
sub
fmull
sbb
push
cld
add
cmp
test
stc
in
test
and
and
cwtl
loope
xchg
repnz
sub
mov
test
push
mov
out
push
pop
push
and
mov
inc
insb
xchg
mov
mov
arpl
lret
enter
hlt
push
jl
inc
sub
jbe
mov
xchg
or
add
stc
fcompl
xor
cmp
mov
xchg
es
or
push
mov
mov
mov
rclb
jp
xchg
add
je
jo
arpl
mov
sub
inc
imul
pop
pop
lret
cld
push
and
aam
jne
arpl
lret
and
xchg
xchg
pop
jle
and
mov
test
push
notl
xchg
inc
popf
jmp
cmp
mov
gs
adc
aas
mov
mov
test
test
daa
sbb
imul
sbb
movsb
inc
sub
dec
dec
and
mov
pop
inc
fcomps
in
jne
xor
mov
out
jmp
stc
mov
in
test
dec
jecxz
arpl
mov
sub
movsl
mov
and
xlat
in
sbb
push
push
mov
jecxz
rorl
popf
stos
test
push
ja
add
push
test
frstor
jmp
into
int
test
inc
aaa
movsb
push
mov
pushf
pop
fwait
inc
mov
jo
xor
cwtl
sub
inc
mov
push
test
out
add
mov
out
jl
push
push
test
sbb
arpl
arpl
test
into
test
push
pop
xor
xor
xchg
mov
sbb
jge
mov
loopne
in
movsl
fcomps
jnp
mov
mov
sbb
ret
test
jbe
mov
push
mov
cli
pop
xchg
clc
test
shlb
test
sbb
and
pusha
test
push
mov
pusha
xor
sub
xor
lcall
lret
std
pop
jo
test
pop
push
test
imulb
xchg
test
inc
lods
hlt
push
dec
into
push
popf
test
push
cli
lcall
add
push
jmp
jmp
imul
or
sub
and
fisubs
aas
push
mov
in
rcrl
xchg
mov
test
mov
bound
mov
lds
add
or
dec
mov
add
ja
test
pop
ss
sub
test
pushf
inc
rolb
add
fmul
fldenv
mov
dec
dec
xchg
ret
leave
enter
xchg
cltd
xchg
stc
sub
mulb
vpsubusb
xor
mov
imul
hlt
test
mov
dec
cli
incb
sub
xchg
or
pop
testb
cmpsl
lea
dec
jle
pushf
mov
xchg
mov
test
mov
test
jp
lods
add
mov
sub
jg
repnz
ja
ss
jp
aaa
les
cmp
push
test
mov
movsb
test
push
icebp
or
jmp
sbb
inc
popf
in
stos
fidivl
xchg
sub
clc
mov
hlt
testl
and
loopne
ret
sbb
add
jno
sar
movsb
lds
push
call
xor
test
int3
inc
pop
cmp
icebp
xchg
jmp
ror
push
or
adc
and
outsl
test
lock
lds
addr16
test
mov
cld
adcb
test
sbb
push
aam
sub
ss
rorb
jne
test
nop
push
gs
icebp
lret
cltd
test
xchg
mov
xor
pop
das
cltd
in
mov
mov
test
adc
test
aad
and
and
out
or
jmp
mov
call
test
frstor
sbb
cwtl
adc
jmp
je
inc
cmpsb
sbb
jo
sbb
mov
idiv
cwtl
les
jecxz
cmp
insb
mov
scas
adc
sub
ret
mov
push
mov
aam
sub
cmp
incb
mov
sub
dec
jg
bound
test
ja
leave
mov
dec
mov
vsubss
test
fsubrs
bound
jmp
push
push
test
mov
test
add
test
icebp
or
shlb
push
in
and
stos
cmp
mov
push
addr16
movsb
sub
jle
cmpsb
sub
dec
hlt
and
faddl
mov
or
xor
int3
mov
adc
cli
test
test
jo
dec
idivb
test
inc
cld
pop
dec
jecxz
test
clc
or
test
into
mov
repnz
fimull
movsb
jae
aaa
sub
pop
mov
xorb
test
push
or
cmp
out
mov
lcall
leave
loop
outsl
xchg
out
in
in
pop
mov
fsubs
enter
sbb
lods
or
sar
in
cmc
lcall
push
arpl
aad
jle
or
lret
cmp
daa
sub
mov
jge
pop
add
mov
hlt
inc
int
and
adc
or
push
xchg
inc
fdivrs
push
clc
xchg
repnz
fnsave
xor
pop
hlt
and
sahf
insl
sub
outsb
sub
lcall
and
aad
std
mov
fwait
mov
jne
mov
adc
mov
test
int3
divl
test
jl
fildl
xlat
adc
test
push
scas
dec
pop
cwtl
icebp
movsb
cmp
jp
into
test
test
insl
stos
dec
dec
loopnew
cmpsb
clc
pushf
push
push
inc
rolb
mov
loope
les
out
leave
mov
test
ret
out
mov
cmc
test
push
mov
xor
rcrb
in
out
stos
cltd
dec
mov
outsb
repnz
and
andl
or
jmp
mov
dec
sub
inc
clc
int
imul
das
lock
sub
mov
push
movsb
dec
jecxz
ja
icebp
push
daa
cli
push
mov
or
sub
xchg
mov
loope
sub
push
jp
mov
in
es
push
test
stc
xor
jmp
into
inc
mov
popa
sbb
leave
call
mov
loope
in
lock
xor
jb
lods
sbbb
test
adc
push
test
bound
dec
mov
bound
test
xchg
push
push
dec
test
xchg
dec
test
add
and
xchg
xchg
pop
cmp
mov
mov
inc
lock
push
sub
bound
test
loope
sbb
dec
cmpsb
std
test
jle
jbe
pushf
loop
mov
sbb
test
dec
shll
test
bound
or
and
sti
xor
xchg
das
mov
cmpsb
jle
test
ret
fwait
sarb
mov
setns
int
notb
test
clc
das
leave
outsl
cmp
test
inc
sbb
lret
lods
xchg
cli
out
icebp
arpl
mov
lods
mov
js
fwait
mov
out
test
nop
dec
test
mov
ds
mov
push
ja
loop
pusha
xor
inc
mov
xlat
imul
adc
mov
pop
xchg
dec
test
call
movsl
cmc
or
iret
mov
lods
clc
cmp
sub
push
ljmp
sub
xor
filds
sbb
andl
int3
xchg
jp
xchg
lret
adc
enter
imul
into
jns
and
xor
test
adcl
add
test
or
jecxz
int
fistpll
fiadds
lret
mov
push
mov
clc
xchg
lods
push
movsl
add
jge
repnz
and
mov
test
adc
test
mov
mov
push
jmp
sub
dec
jb
xchg
test
mov
cmp
or
enter
xor
ds
aaa
arpl
decb
mov
in
and
sbb
aaa
test
jle
cmp
cmc
mov
test
mov
push
bound
inc
mul
mov
dec
stos
cmp
test
adc
test
or
push
sbb
in
test
loope
add
mov
in
lret
test
aas
dec
cmp
das
out
push
cmp
idivl
movsb
push
mov
xor
mov
push
test
mov
fiaddl
pop
inc
aaa
arpl
xlat
mov
lods
mov
je
test
xchg
push
xor
or
and
inc
addb
add
mov
xchg
out
add
mov
enter
aaa
xchg
cwtl
xchg
mov
in
loopne
xchg
popa
and
pop
in
addr16
cmpsb
jns
sbb
ja
mov
sub
dec
sbb
orb
sti
push
mov
push
xor
cld
or
loopne
test
mov
fistpl
push
hlt
call
jb
aaa
cltd
dec
test
fisubl
mov
or
mov
pop
push
test
mov
pop
bound
arpl
loopne
mov
mov
pop
adc
stos
push
stc
in
std
xor
jb
adc
pop
mov
cmp
jns
adc
dec
inc
mov
cmp
xchg
and
loopne
je
or
sub
test
pop
lret
cmp
push
add
mov
cld
add
and
lds
cmp
adc
test
leave
dec
lahf
lea
into
iret
sub
mov
ret
cli
insl
cmc
test
pop
test
pextrw
dec
mov
lcall
mov
test
and
movsb
xlat
mov
push
mov
sbb
test
inc
in
xor
test
and
xlat
sub
rorl
fidivl
pop
mov
dec
and
pop
mov
adc
in
sbb
and
ffree
ficompl
test
sbb
leave
jg
cmp
sub
jnp
inc
pop
or
sti
pop
and
test
dec
popf
jae
push
mov
clc
les
leave
adc
stos
popa
test
jnp
pop
enterw
arpl
mov
test
aad
mov
addr16
mov
jns
out
pop
pushf
jle
xor
mov
add
sbb
mov
cmpsb
in
sbb
clc
stos
je
test
daa
test
fsubrs
inc
stc
lods
adc
dec
je
test
pushf
cmovle
mov
push
pusha
ret
outsb
pop
test
push
loopne
leave
inc
dec
aad
lcall
int
xchg
ret
test
push
clc
movsb
xor
jmp
jp
loop
stos
or
test
xchg
ror
lods
popa
pop
test
stos
sbb
xchg
or
fidivs
movsb
cmc
test
cmpsl
and
test
jnp
fildl
mov
out
loop
or
fsubrs
fdivrl
sub
les
lds
jo
push
and
mov
push
pop
out
fdivr
call
test
mov
jle
xor
jg
es
pushf
std
xorb
mov
movsb
push
fwait
out
mov
fidivrl
popa
cmc
mov
lcall
cld
push
push
call
mov
cmp
out
test
xchg
pushf
sub
call
cli
add
xchg
and
out
jmp
dec
jp
mov
lret
sub
cmp
xchg
pop
pop
cmc
movsb
cwtl
push
jecxz
ficoml
xchg
ljmp
mov
arpl
fwait
aad
test
mov
in
idiv
fcmove
jmp
stc
dec
push
movsb
push
dec
ret
popf
inc
sub
pop
shrb
jmp
ja
pop
test
push
daa
sbb
arpl
and
push
xchg
push
mov
in
jns
sub
adc
fldenv
push
out
test
in
inc
mov
imul
mov
test
pop
dec
and
arpl
bound
sub
clc
xor
std
mov
pop
xchg
test
xchg
jecxz
rclb
fs
jp
mov
mov
sub
fdivr
jbe
jecxz
mov
mov
dec
faddl
dec
sti
pop
mov
or
xchg
test
enter
cmpsl
or
int
jo
lods
and
or
leave
and
fldt
lea
or
test
jnp
shlb
xchg
lods
push
minps
push
inc
es
test
mov
movsb
gs
push
and
roll
or
sub
imul
std
int
test
into
pop
mov
ss
in
push
test
aaa
roll
or
test
cmpsl
adc
test
arpl
pop
aam
pop
loope
mov
fwait
repnz
int3
fisttps
mov
pop
cwtl
mov
leave
lret
mov
sbb
push
pop
xor
pusha
movsl
dec
idivl
cli
xor
and
mov
aad
mov
test
push
push
lods
cmp
int3
sub
mov
mov
cltd
test
jmp
cmp
lahf
mov
loopne
in
fisttpl
mov
mov
and
les
cmp
inc
test
xchg
xor
pushf
mov
cmp
xchg
and
js
test
movsb
popa
clc
pop
insb
pop
test
sub
adc
pop
stos
mov
pop
test
dec
mov
test
cmp
mov
test
orl
les
test
aad
cmc
or
pushf
pop
inc
subb
xchg
push
sub
dec
test
loopne
test
aaa
pop
sub
cmpsl
xchg
shll
test
fstps
ret
push
test
fiadds
pop
test
test
nop
add
jno
test
jnp
cmpsl
cmp
mov
xchg
ljmp
test
xor
dec
pop
test
cmpsl
inc
icebp
ss
test
or
sub
pop
in
mov
xlat
test
mov
mov
test
mov
ja
test
fisubrl
adc
lret
out
movsb
sbb
inc
pop
xchg
xchg
addb
sbbl
in
dec
test
imul
xor
pop
in
add
out
pushf
mov
adc
push
mov
ret
xchg
mov
test
pop
xchg
jmp
and
clc
out
mov
mov
mov
test
xchg
mov
sub
xor
out
mov
mov
cmpsl
xchg
xor
cmpsl
nop
data16
mov
loop
call
aam
je
in
mov
mov
orl
sub
rorl
jl
sub
xorb
mov
fsts
pushf
test
cmpsb
xor
lods
and
loop
mov
or
icebp
push
mov
repz
call
les
int3
pop
ret
push
icebp
mov
sbb
leave
mov
push
cmp
and
inc
add
mov
pop
adc
test
cmc
cmp
jg
sub
mov
jle
mov
cmpsl
test
clc
or
mov
push
jns
test
push
lcall
outsb
mov
fndisi(8087
xchg
test
mov
pop
icebp
test
popa
insl
cmp
pushw
mov
dec
mov
movsb
xor
mov
stos
lock
or
inc
pop
fwait
test
inc
mov
test
mov
adc
mov
sub
mov
dec
cld
in
mov
pop
mov
cltd
movsb
cmp
sub
dec
mov
addr16
leave
in
or
lahf
test
movsl
mov
inc
push
sub
dec
dec
daa
mov
adc
mov
gs
mov
ds
lcall
lretw
cld
scas
test
pop
mov
pop
out
mov
test
sub
test
jl
das
push
and
test
daa
loope
movsb
push
xchg
leave
test
inc
js
loopne
cmpsl
test
lods
mov
movl
mov
in
mov
sbbl
idivb
or
test
fsts
jb
call
adc
pop
mov
mov
test
leave
sub
stos
aam
push
sbb
sarl
not
or
hlt
cmpsb
adcl
out
adc
and
je
mov
adc
inc
mov
mov
pop
sub
or
mov
mov
fdiv
iret
clc
in
jne
mov
movsb
push
adc
daa
aaa
lods
bound
cwtl
fidivrs
movsl
sub
lea
aaa
push
mov
cli
xor
cld
dec
jle
cltd
test
mov
jl
sbb
adc
pop
daa
mov
std
aam
shll
push
arpl
mov
mulb
pop
test
sub
test
pop
bound
orl
movsl
cli
imul
in
inc
popf
push
jecxz
out
loope
cltd
pop
mov
movsb
imul
mov
mov
fnstenv
mov
test
mov
pop
pop
test
cltd
out
inc
arpl
push
test
inc
push
lret
push
lods
test
mov
loope
in
mov
test
adc
sub
repz
push
jp
mov
or
stos
inc
add
push
shl
jne
bound
out
mov
clc
rcrl
in
adc
insb
ret
add
and
mov
jl
test
loope
call
mov
or
inc
clc
cwtl
stc
push
dec
lea
test
xchg
ljmp
add
movsl
sahf
add
popa
pusha
dec
jp
lods
sub
pop
andl
push
pop
adc
decb
xchg
cmpsb
les
push
shlb
pushf
gs
pop
dec
stos
orb
add
pushf
aad
movsb
jnp
ret
cltd
cmp
push
clc
mov
ret
mov
bnd
aam
jne
jmp
mov
ds
test
in
inc
push
imulb
sarl
jle
fimull
push
jmp
dec
loop
das
cmp
pushf
movb
xor
dec
clc
mov
test
test
hlt
adc
in
fwait
mov
sub
test
adc
sub
data16
push
das
arpl
push
mov
mov
jecxz,pt
sbb
adc
test
pop
jbe
shl
cmpsl
mov
test
pop
cmp
in
cmp
nop
dec
movsl
sahf
sub
xor
xchg
jmp
mov
sti
leave
and
or
roll
mov
shlb
push
stos
insb
into
dec
lret
inc
push
sbb
add
push
fdivrs
scas
inc
xchg
inc
and
outsl
in
div
mov
in
pop
xor
orb
fnstenv
enter
adc
xchg
or
dec
roll
stos
mov
jp
sub
outsb
fidivrl
and
int
movsl
lods
push
cmp
loope
int
xor
pop
fldcw
mov
mov
popf
arpl
xlat
jl
adc
test
lahf
dec
pop
popa
xchg
fnsetpm(287
test
test
out
sbbb
pop
clc
std
pop
mov
rclb
cmp
jecxz
jnp
fwait
mov
mov
sbb
cld
push
mov
adc
push
test
mov
dec
in
loopne
movsb
int
cwtl
lcall
int
ja
std
fwait
xor
pop
and
and
test
shll
loop
test
cmp
jnp
addl
mov
push
bound
loopne
cli
pusha
jmp
jecxz
mov
pop
mov
mov
arpl
and
and
and
mov
test
add
and
test
mov
jmp
xor
adc
mov
aaa
or
pop
arpl
adc
mov
fbstp
xchg
xchg
add
mov
enter
pop
fadd
pusha
cld
xlat
hlt
aaa
std
mov
rolb
and
stos
dec
imul
pop
mov
data16
sbbb
test
cmpb
test
sbb
rcrb
arpl
xlat
xchg
or
mov
sahf
sbb
movsb
pop
mov
xor
bound
test
pusha
hlt
icebp
jecxz
lods
pop
test
sbb
cwtl
dec
lret
test
lds
add
mulb
cwtl
wbinvd
push
sub
pop
stc
push
jmp
int3
imul
imul
int
mov
dec
xor
mov
sub
clc
adcl
mov
into
jmp
scas
shl
arpl
outsb
mov
cmc
add
xor
inc
jp
sbb
out
loopne
enter
stc
push
movsb
inc
test
or
mov
fiadds
enter
and
push
loop
jns
sub
std
dec
cld
sub
cli
fcom
stos
or
bound
leave
cwtl
call
mov
pop
outsl
mov
mov
add
inc
dec
ret
and
test
clc
test
adc
xchg
daa
test
and
add
sub
cmp
mov
mov
add
jb
lahf
mov
clc
movsb
inc
sbb
jge
mov
mov
das
testb
inc
movsb
cmp
insb
out
cld
clc
aaa
cmp
test
fld
jp
pushf
jmp
and
push
inc
mov
into
enter
add
bound
push
dec
mov
pusha
les
mov
jl
jp
sbb
push
arpl
in
bound
sub
push
or
test
push
cmp
adc
sbb
ja
push
icebp
inc
cmpsl
test
loopne
mov
cmpsb
insl
sub
or
push
xchg
xor
inc
and
enter
popf
mov
fldl
jno
mov
and
cmp
in
pop
lea
pop
ucomiss
test
insb
inc
int3
or
shlb
fs
xor
bound
cmp
leave
fsubr
push
test
inc
xchg
xchg
sbbb
cmp
mov
in
aaa
add
inc
xchg
mov
fcmovne
int3
push
mov
or
sub
out
xchg
cmp
das
dec
pusha
and
pop
lods
movsb
andl
outsl
mov
dec
test
mov
jge
aaa
repnz
cld
sti
xchg
jle
mov
push
idiv
lock
xchg
sarb
loope
xlat
fwait
jbe
ja
and
inc
lock
push
inc
arpl
mov
dec
mov
test
cmp
xor
and
mov
test
sub
das
push
jbe
mov
mov
test
and
fs
cmpsl
sub
xchg
mov
dec
xchg
mov
xchg
cmp
testb
pop
lcall
int
adc
iret
mov
xchg
jae
fimuls
dec
ret
mov
les
rcrl
addl
mov
popa
aas
or
test
mov
and
sub
enter
xchg
sbb
xchg
test
push
mov
icebp
and
lcall
xchg
or
test
add
jns
test
pcmpeqw
jecxz
cs
cltd
xchg
pusha
popf
and
lcall
mov
push
mov
push
neg
mov
cmp
shll
test
sbb
adc
dec
test
jbe
mov
addr16
test
mov
movsl
and
orl
test
jge
pop
aaa
xchg
inc
adc
inc
sar
jecxz
stc
test
flds
and
imul
mov
xchg
and
mov
add
xchg
rep
mov
test
mov
addl
sbb
sub
sub
bound
test
sarl
dec
push
loop
nop
icebp
mov
or
pop
in
into
cld
mov
cmpsl
xchg
lcall
and
repnz
sbb
xorl
pop
and
sbb
int
in
mull
xchg
pop
test
cld
jp
test
push
lahf
pop
test
fcmovnu
lods
mov
xor
cmp
or
add
sbb
addr16
test
or
push
test
loope
pop
test
icebp
jmp
out
cs
push
mov
shll
into
pop
mov
mov
lds
pusha
gs
arpl
sub
shlb
and
fdivrl
test
pop
cmp
adc
rcrb
pop
pop
xchg
aas
loop
cmpsb
push
or
mov
js
sbb
xor
push
test
and
insl
xor
js
dec
cltd
sub
test
cmc
cmpl
sub
xor
push
or
test
mov
push
enter
pop
mov
or
lret
sbb
in
mov
xlat
xchg
adc
or
movswl
test
imul
mov
inc
dec
add
push
into
mov
pop
mov
lods
fsubs
cmp
add
push
sub
mov
inc
jb
jae
test
int3
xchg
daa
sub
mov
xchg
xor
and
mov
sbb
dec
js
stc
flds
sbb
pushl
mov
fwait
hlt
pop
imull
rorb
push
push
lea
cmp
inc
or
pop
stos
mov
mov
pop
or
mov
fidivrl
fdivs
add
or
test
lea
sbb
xchg
insb
mov
push
and
loop
fisubrl
loope
bound
sub
loope
in
cld
cwtl
in
adc
pusha
pop
and
cli
in
dec
sub
test
lret
repnz
and
in
cmp
fidivrs
inc
xor
test
popf
add
idiv
test
mov
and
adc
enter
test
pop
dec
adc
in
cmp
nop
jne
fwait
movsl
push
sub
addb
add
dec
sbb
adc
lahf
test
mov
xchg
pusha
stc
jb
mov
insb
pop
nop
sub
fwait
jmp
cmpsl
les
les
leave
mov
sub
popa
mov
clc
dec
jp
push
loopne
addb
or
pusha
adc
test
inc
lahf
add
lret
incb
or
call
and
sub
mov
decb
subl
adc
lret
xchg
mov
test
inc
jmp
mov
enter
dec
mov
sahf
test
nop
pop
or
test
pop
mov
aad
dec
lods
leave
sub
test
outsb
insl
int3
mov
sti
mov
jnp
push
sbb
sub
test
add
hlt
test
or
and
outsw
or
test
push
imul
test
mov
sbb
sub
sbb
cmc
push
test
jp
fbld
daa
sti
mov
xchg
jne
test
mov
add
imul
pusha
test
jecxz
mov
sub
test
aad
jbe
pop
pop
ret
dec
lods
loope
movsb
or
cmp
test
add
xchg
in
mov
sub
scas
mov
arpl
adc
sahf
mov
mov
jle
adc
insb
jl
test
adc
loop
test
test
test
enter
shll
bound
fiaddl
sahf
in
fsubs
dec
jmp
jne
rorl
and
mov
cmpl
rclb
or
in
lret
jecxz
push
sti
sub
int3
mov
lahf
sahf
imul
ds
xor
push
js
in
sub
mov
sbb
stc
data16
mov
inc
insb
arpl
sub
or
ret
hlt
lret
pushf
test
sti
movsb
inc
and
loopne
sbb
and
in
mov
xor
push
mov
add
movsb
stos
xchg
loopne
ja
and
mov
xchg
cmc
adc
mov
and
sub
push
aad
xor
sti
test
addb
adc
out
jne
movsb
test
fdivrp
mov
in
jmp
test
jne
cmp
inc
xor
enter
in
cmpsb
mov
cli
mov
sub
xor
mov
sbb
dec
sub
lret
cmc
xor
std
sub
sub
pop
negb
mov
mov
inc
movsl
sub
ret
adc
and
pop
je
push
mov
add
pushf
insb
sub
push
dec
push
push
push
mov
in
fadds
sub
test
jb
push
arpl
jecxz
test
pop
hlt
sbb
cmc
push
loope
dec
movb
dec
in
into
mov
add
xchg
rcrl
test
fwait
push
lock
std
dec
movsb
test
call
enter
mov
loopne
jecxz
scas
test
lret
and
mov
add
movsb
mov
cmpsl
sub
mov
fwait
je
in
test
push
int3
sub
mov
jno
or
incb
mov
test
imul
repnz
mov
sbb
out
test
cli
int3
mov
int
jbe
sub
cmp
out
jge
mov
cmpsl
and
lock
ror
mov
and
les
add
out
xchg
into
enter
stos
xchg
sub
test
popa
test
pushf
xchg
jp
mov
mov
stc
test
sbb
dec
popa
sub
mov
mov
adc
test
stos
jbe
ficoml
test
sbb
push
pushf
frstor
scas
adc
fcmovbe
mov
pop
xchg
and
movsl
popa
cli
sub
into
pop
cmp
mov
push
ja
xchg
sbbb
test
pop
lods
pushf
test
ja
test
imul
xor
test
rcrl
les
push
stos
jmp
mov
inc
popf
test
pusha
idivb
inc
jbe
jno
xor
pop
fsub
cmpsl
push
test
xor
xor
in
int3
movsl
jo
or
sub
mov
enter
sub
inc
sub
test
pushf
cmp
pop
in
push
test
stc
lcall
dec
mov
jne
cmpsb
test
cmpsl
clc
push
sub
js
ss
test
and
or
imul
cmp
cld
mov
inc
lahf
sub
xor
sarl
in
test
xchg
imul
test
aas
push
loope
leave
inc
cmp
mov
mov
test
sub
or
clc
lods
cli
in
add
test
and
sbb
stc
inc
imul
and
mov
std
jg
test
scas
cmp
cmp
je
mov
lods
aas
or
and
out
sub
stos
dec
loopne
lret
mov
fstps
test
fwait
iret
pop
push
xchg
clc
in
cmp
cmpb
shl
mov
pop
test
xchg
pushf
mov
in
dec
push
pop
repz
fs
and
and
jmp
mov
push
mov
popl
sub
and
test
mov
enter
xchg
mov
xlat
loopne
in
jle
mov
mov
insb
cmp
or
int3
test
sub
sbb
rolb
dec
daa
cs
ja
jb
mov
cmp
jns
dec
dec
inc
sub
cmc
cmc
fistps
movsb
dec
rorb
out
jae
cmc
mov
sub
movb
lret
popa
push
push
jecxz
sub
repnz
in
fidivrs
je
pop
or
test
fbstp
and
orl
push
test
mov
mov
sbb
mov
cltd
outsl
fsubr
pusha
pop
popf
dec
or
mov
mov
test
mov
gs
test
xchg
dec
sbb
sub
test
js
das
movsl
lods
dec
test
sub
imul
sbb
arpl
mov
ret
dec
jg
test
push
iret
dec
jle
and
les
int3
xchg
pop
sahf
fwait
test
mov
xor
test
xor
or
aam
imul
rorb
pop
and
push
pop
jle
sub
xor
mov
stc
sbb
or
xchg
stos
mov
or
xchg
test
pushf
inc
sub
in
out
popa
in
out
lea
test
mov
das
stos
rolb
call
push
xor
jno
fsubp
out
mov
cmp
in
xchg
push
xor
out
pop
add
xchg
andl
and
mov
fnstenv
mov
insb
fisubrl
push
push
mov
mov
xchg
sub
sbbb
xorb
icebp
test
pop
test
test
stc
into
push
mov
movsb
lret
pop
push
adc
fsubl
fimull
cld
test
or
add
test
jg
das
or
mov
mov
lcall
push
sbb
shr
xor
sarb
fnstsw
enter
xchg
mov
lds
mov
sti
test
adcl
xor
push
lods
pop
stos
sub
push
shr
mov
cmc
hlt
mov
dec
add
fadds
dec
xor
test
pop
test
push
xor
or
test
push
and
pushf
inc
out
sarb
cmp
cmp
test
xchg
add
pusha
aaa
in
test
faddl
lahf
in
cmpsl
dec
test
int3
xchg
repnz
push
loope
test
arpl
cwtl
sahf
mov
mov
sbb
icebp
mul
sbb
push
loop
sub
sub
or
ja
call
imul
xlat
inc
test
gs
leave
popa
sub
mov
push
jbe
sub
xchg
flds
dec
test
stos
bound
std
jl
or
das
int
inc
into
cwtl
bound
icebp
in
xchg
leave
pop
adc
jae
xor
rcrb
sbb
cltd
and
subb
ja
mov
mov
in
test
sub
out
ljmp
lds
xchg
jns
test
rcll
lds
add
dec
bound
jb
loop
idivb
outsl
ja
enter
dec
mov
sub
mov
xor
test
insl
push
inc
push
sbb
mov
mov
pop
jns
fldl
jne
mov
out
sarl
test
xlat
dec
pop
ret
fsubs
mov
out
cmpsl
xchg
ljmp
sbb
test
test
and
or
aam
hlt
inc
mulb
cmpsl
xor
lcall
sub
mov
sbb
popa
int3
jl
test
or
mov
jo
and
into
in
mov
js
xor
xchg
in
test
push
pop
ds
adc
sbb
push
gs
les
xchg
sub
out
test
pop
push
ja
or
test
mov
iret
pop
stc
mov
mov
std
enter
push
test
rolb
pop
ficoml
inc
andl
test
sub
jne
mov
bound
push
pop
mov
test
int3
aam
jb
dec
xchg
fwait
test
mov
movsb
jbe
hlt
lds
jp
pop
cmp
push
test
sarl
xchg
xchg
movsb
sub
mov
inc
adc
mov
jmp
xchg
test
icebp
mov
hlt
dec
bound
mov
cmp
test
ja
inc
xor
mov
cltd
out
mov
lret
inc
cmpsb
xor
int3
push
cmpsl
cmpsl
push
fidivl
mov
mov
inc
movsb
dec
mov
cmp
mov
mov
bound
mov
push
mov
mov
and
xchg
dec
repnz
arpl
mov
imul
mov
lcall
xchg
test
xor
test
jge
stos
les
fimull
pop
and
push
sbb
mov
ljmp
repnz
into
xor
call
jl
ds
push
ja
mov
mov
insl
bound
aaa
scas
mov
pusha
or
dec
lds
mov
add
jbe
lock
test
outsb
movl
xchg
dec
mov
test
stos
jmp
movsl
cmp
mov
and
in
test
sbbl
push
add
mov
xlat
icebp
int3
mov
iret
repnz
add
loope
fimuls
test
cmp
popl
ret
or
mov
faddl
dec
push
stc
mov
lret
pop
sub
int3
lcall
inc
mov
and
shl
lret
mov
test
inc
ret
dec
cwtl
jae
les
xor
subl
add
test
out
jmp
mov
std
adc
test
or
pop
movsb
out
inc
cld
out
mov
leave
sbb
dec
cld
pop
sub
or
jmp
push
inc
mov
xchg
xchg
test
insl
dec
repnz
arpl
test
roll
loopne
pop
mov
test
push
in
sub
mov
push
dec
jb
sbb
push
sti
daa
jmp
push
push
and
jnp
test
pop
cmp
jb
cmp
sub
push
push
push
cmpl
lahf
xchg
jmp
negb
testb
sbb
cmc
mov
and
mov
fnstenv
je
mov
clc
insl
test
aaa
icebp
push
xchg
push
pusha
dec
sub
mov
or
adc
fs
test
jmp
mov
push
mov
mull
mov
pop
call
stc
ret
aas
push
test
and
cmp
jae
ds
test
or
and
test
add
pusha
dec
mov
js
mov
cmpsl
mov
cli
inc
arpl
loopne
ja
or
enter
push
xor
arpl
repnz
sahf
adc
push
insb
lods
push
mov
loope
jp
bound
sub
mov
cltd
pop
cmp
test
xor
push
adc
in
dec
mov
ret
and
in
lret
outsb
inc
mov
inc
pushf
pusha
push
or
push
add
sub
mov
test
icebp
out
xchg
scas
scas
stc
mov
js
das
and
adc
test
in
stos
out
es
mov
into
popf
int3
or
popl
xor
jbe
mov
dec
test
call
test
shlb
jg
test
cld
shll
adc
outsl
dec
cmpsb
push
test
sbb
push
lods
jne
sbb
faddp
dec
dec
mov
mov
int3
push
mov
lods
mov
in
sahf
ficomps
cmpsl
push
mov
xchg
add
leave
loop
subb
mov
popa
jns
loopne
xchg
loope
jno
sbb
fisttps
jecxz
add
inc
push
clc
ds
mov
or
shl
cmpsl
mov
pop
jb
test
push
sbb
leave
ret
pushf
sub
int3
aad
mov
lcall
das
inc
in
bound
roll
sbb
mov
mov
out
mov
pusha
ret
or
test
test
cld
pop
adc
inc
sarl
mov
cmp
jg
int3
test
cbtw
cs
into
push
mov
mov
ret
sbb
iret
negb
cmp
cwtl
mov
sub
ret
sbb
add
cmp
dec
test
cmc
outsl
test
mov
fs
incb
cmp
outsb
dec
iret
pop
test
clc
fcmovb
mov
stc
test
test
sbbl
jne
xor
push
cwtl
test
loop
jle
les
jno
and
mov
push
ss
push
mov
daa
jno
mov
xchg
aad
test
out
mov
int3
jp
lret
test
imul
sahf
push
sbb
test
add
test
xchg
arpl
mov
push
inc
das
test
std
rcrb
call
fdivl
int3
cmp
push
fisttpl
or
fsubl
movsl
add
cmpsb
lea
into
out
sub
xor
sti
xchg
cmp
mov
sahf
adc
mov
les
mov
mov
jne
pop
add
cmpsl
cmp
test
enter
or
mov
pop
inc
adc
xor
or
mov
mov
cmpsl
inc
test
sub
sub
leave
dec
popa
cltd
pop
stos
movsb
pop
sbb
sbb
xchg
int
sahf
test
jmp
ss
jb
fisttps
loope
fidivrl
mov
icebp
cs
xchg
in
mov
test
lock
push
data16
imul
or
pop
test
sbb
test
mov
jecxz
push
cld
push
dec
xrelease
js
or
and
movsl
inc
xchg
cmc
jmp
pop
jp
test
test
out
push
repnz
leave
cld
test
jmp
pop
stos
jbe
lret
sub
inc
cmp
sbb
inc
aaa
add
cmc
xchg
in
or
shl
mov
push
outsl
test
lds
mov
lcall
xchg
sub
sbb
inc
mov
mov
push
xor
cmpsl
sbb
js
adc
xor
test
and
mov
lret
int
inc
mov
test
xor
jo
test
cltd
mov
test
pop
rclb
sub
and
rcll
cmp
cmpsl
dec
mov
les
xchg
xchg
loop
inc
lahf
xchg
arpl
in
and
sub
adc
mov
shrl
fistpl
dec
sarl
lret
inc
bound
lea
mov
mov
test
push
xchg
cwtl
rcl
insb
mov
sub
hlt
test
fnstsw
mov
sub
lret
arpl
dec
arpl
pushl
push
rcrl
push
int
jmp
rclb
or
xchg
sub
push
fistps
push
cltd
aam
inc
ret
pop
xchg
xorb
and
xor
inc
push
dec
jp
dec
push
jns
push
shlb
repnz
test
aaa
jae
jl
popa
push
dec
xlat
fiaddl
mov
call
push
into
data16
pushf
xchg
sarl
cmp
in
xor
enter
pop
test
mov
sub
and
xchg
sub
mov
subb
pop
xbegin
xchg
int3
mov
cmpsl
test
lahf
loop
leave
ljmp
movsb
push
push
sub
inc
sbb
mull
test
adc
les
das
jns
arpl
fisubrl
jl
mov
test
xchg
pop
and
repnz
pushf
pop
lods
mov
and
push
test
rcrb
faddl
sbb
popa
fdivp
icebp
mov
test
inc
stos
xor
std
addb
ss
test
lahf
or
xchg
xlat
sub
jmp
ja
out
mov
and
push
lea
das
cli
xor
popa
fxch
mov
call
inc
mov
mov
cltd
mov
add
test
sbbl
test
clc
fdecstp
mov
mov
mov
cwtl
icebp
mov
iret
test
leave
mov
outsb
cld
mov
jne
test
jo
test
dec
into
adc
mov
fisubrl
lcall
shl
sub
test
arpl
jo
in
add
test
xor
push
mov
push
imul
movsl
lcall
cmp
jno
xor
out
jecxz,pn
dec
test
iret
fmulp
pusha
lea
mov
xchg
mov
out
mov
addb
sub
pop
gs
sti
out
xchg
ds
inc
popa
mov
test
scas
inc
jle
ret
fdivrl
jns
sahf
ljmp
jmp
stos
inc
mov
clc
lods
loop
push
add
cltd
cli
xchg
fiaddl
iret
jge
in
arpl
orb
add
add
mov
hlt
out
test
out
lods
mov
lret
adc
pop
test
xor
push
xor
jg
mov
cli
stos
rcll
inc
adc
js
fmull
mov
adcl
jns
testl
sub
les
xchg
into
movsb
pop
lret
shlb
shl
xor
ret
xchg
pop
mov
dec
mov
insb
test
cmp
push
lea
adc
leave
mulps
mov
int
rorl
xchg
out
test
clc
jns
and
outsb
jl
push
in
aam
adc
jmp
in
test
idivl
xchg
mov
mov
mov
cmp
lret
test
lret
xor
mov
xchg
icebp
fld
int3
sub
out
mov
in
aam
dec
push
test
ret
in
test
pusha
das
lds
popf
mov
mov
sbb
cmpsl
div
clc
test
jmp
cmp
inc
bound
loopne
jnp
fwait
push
cmp
mov
lea
jmp
bound
std
jnp
mov
adc
movsb
and
or
mov
adc
andb
lcall
scas
jo
test
dec
test
mov
loop
bnd
adc
mov
test
cwtl
add
jae
test
cmp
xor
mov
push
dec
xor
push
aas
sub
test
test
xchg
lds
nop
and
push
push
add
out
mov
push
pop
orb
test
sub
das
loop
rorl
sbb
and
lcall
fcmovu
push
push
movsb
fstps
add
in
lret
dec
test
aaa
repz
and
pop
or
sub
orb
cli
bound
xorl
jg
pop
push
les
jno
sbb
movsb
cmp
pop
sub
xchg
out
add
and
jmp
sub
mov
test
mov
in
mov
and
test
inc
mov
test
inc
jbe
push
cmpsb
inc
mov
push
int
sub
and
iret
add
adc
cmp
sub
dec
adcl
dec
inc
daa
sahf
repz
stos
in
push
lret
enter
xchg
fnstsw
dec
adc
adc
lret
loop
pusha
cli
adc
dec
sbb
push
iret
out
or
sub
push
mov
out
roll
mov
test
test
jne
or
jns
test
leave
sub
mov
push
mov
sti
and
xchg
adc
adc
mov
mov
sbb
out
lret
sub
lcall
or
les
cmpsl
cmp
fnstsw
test
sub
test
dec
inc
pop
cmpsb
shll
sub
es
dec
mov
lods
jle
adc
cltd
xchg
test
and
in
jmp
push
mov
test
out
xchg
xchg
sahf
xor
push
pop
movsb
and
lds
test
add
enter
aam
lcall
daa
popa
inc
sbbl
dec
jmp
xchg
es
test
jl
pop
sbb
arpl
jecxz
mov
mov
test
sbb
rclb
push
sbb
push
pop
sbbb
and
mov
mov
lods
lret
aas
arpl
stos
mov
clc
sub
lock
pop
and
xor
jmp
repz
loop
out
idiv
test
dec
xor
test
cltd
cmp
jmp
test
loopne
or
arpl
jge
xchg
movsb
mov
cltd
jp
pop
mov
loop
mov
dec
int
pusha
fisttpll
jb
pop
sub
jmp
mov
sbb
arpl
mov
test
push
in
out
inc
pushf
test
sub
scas
mov
cmpb
pop
cmpsl
test
jl
loope
fsubrs
mov
fisttps
in
mov
mov
push
je
cmc
aas
push
pop
mov
fadds
in
cld
xchg
leave
push
mov
mov
in
clc
jcxz
lret
mov
fdivrl
xor
pop
and
add
mov
nop
jmp
dec
dec
sub
xor
ret
lret
mov
ffreep
test
rorl
enter
push
mov
in
dec
jae
sub
test
dec
sbb
test
stc
sub
lods
mov
cmp
mov
movsb
sub
call
test
or
out
test
mov
jge
movsb
dec
push
xchg
clc
pop
jmp
test
xchg
lret
sub
movsb
stc
xchg
test
outsb
insb
adc
into
test
sbbl
xlat
mov
pop
push
mov
mov
movsb
jne
les
jmp
roll
push
fimull
mov
mov
mov
test
push
mov
data16
adc
jo
pop
xlat
imul
lret
out
add
mov
stc
ja
testl
arpl
ret
test
pop
push
and
mov
aad
mov
ficoml
cld
test
or
inc
es
inc
and
sbb
sbb
fwait
test
fldenv
lds
push
test
adc
push
shlb
dec
aad
mov
lds
les
mov
or
pop
test
incb
mov
ljmp
das
idivb
mov
dec
mov
push
test
cmp
jno
push
lods
fld
test
movsl
stc
call
sub
dec
loop
test
cmp
inc
test
xor
bound
notb
inc
inc
adc
push
cmp
outsl
sbb
mov
ss
lcall
jns
jne
es
jl
pop
lret
test
aaa
and
or
mov
sbb
mov
and
testb
loopne
ret
mov
xor
int3
ljmp
inc
mov
jmp
dec
out
cli
pop
and
mov
jne
test
int3
cmp
lods
dec
js
mov
and
test
push
mov
in
out
mov
lock
add
fdivl
sub
pop
and
les
dec
daa
push
dec
sbb
cmp
sub
mov
or
pop
test
jmp
mov
dec
jle
or
test
loope
sbb
popf
dec
push
jg
add
in
lea
cmpsb
scas
shrb
sub
or
dec
cmp
sub
cmp
inc
sbb
pop
mov
roll
lret
daa
popl
xor
jne
test
stos
mov
bound
push
lret
or
je
loop
mov
les
clc
cmp
sbb
loope
and
xchg
ret
pop
pusha
mov
outsb
mov
movsb
mov
daa
stc
sub
cmpsl
out
and
add
cmp
lret
xchg
cmp
fisubs
je
and
mov
aad
mov
aas
and
in
xchg
mov
mov
rcrl
jns
pop
xchg
int
fstpl
pop
push
in
mulb
mov
stc
test
xor
aad
and
cld
xchg
pop
sub
lcall
sub
or
cmp
jle
push
imul
lahf
xchg
mov
mov
and
stos
cmp
push
test
aaa
mov
inc
hlt
subl
shll
enter
fisubrl
sub
or
test
icebp
imul
and
fs
test
fwait
mov
adc
fldt
mov
jmp
xorl
sub
sub
and
mov
test
pop
add
fildl
sub
dec
cmpsb
es
ficoml
test
pop
jl
jge
cmp
mov
out
add
rcl
repnz
jno
rorl
cmpsl
mov
popa
scas
cmpsl
push
mov
stos
mov
clc
test
xor
icebp
sbb
mov
mov
test
cmc
movsl
or
push
cwtl
movsb
rorl
ja
ljmp
add
fs
test
in
push
shl
jl
dec
cmp
jmp
dec
cltd
test
fmul
sbb
mov
cmp
repnz
stc
imul
mov
and
dec
insb
rorl
mov
add
mov
frstor
arpl
test
jb
repz
dec
lret
mov
mov
loop
test
loopne
jmp
clc
clc
and
mov
rolb
int
push
mov
pop
adc
sub
nop
out
inc
dec
xrelease
mov
dec
mov
aam
jo
mov
add
or
test
int
insb
lods
cwtl
adc
dec
xchg
test
std
xchg
insb
scas
push
jo
xchg
xor
dec
test
xchg
mov
mov
sub
hlt
cs
mov
add
inc
clc
sub
mov
sub
ficoml
movsb
lret
and
and
out
or
xor
push
rol
fnstcw
cmp
adc
mov
fmul
cmp
out
test
mov
mov
fisttpl
test
adc
addr16
mov
and
nopl
sub
jno
fisubrl
jle
inc
movsb
std
testl
test
aad
stos
push
adc
jne
cmp
lea
sub
mov
xchg
add
mov
test
cmp
push
int
test
dec
inc
or
mov
dec
test
add
loope
mov
mov
dec
in
out
mov
mov
mov
cltd
mov
dec
fwait
mov
pop
xchg
call
mov
sbb
jae
pushf
clc
aad
inc
sahf
out
test
push
xor
dec
mov
cmpsb
dec
jp
lcall
leave
movsl
pop
and
test
mov
pop
mov
lds
mov
xor
mov
icebp
test
clc
test
add
adc
adc
sub
or
inc
das
inc
add
test
sbb
push
test
adc
and
dec
test
sub
shlb
mulb
inc
xchg
ret
fs
mov
rcrl
pop
sbb
in
fnstenv
into
sbb
push
inc
mov
enter
arpl
jp
jmp
pop
or
int3
push
test
out
ljmp
outsb
std
inc
mov
xchg
inc
mov
enter
jno
pusha
add
pop
push
test
adc
mov
cmpsl
adc
mov
test
jl
sub
inc
lret
test
jmp
and
push
cltd
sbb
test
insb
cmp
cmp
xor
push
add
test
cltd
cwtl
xor
jmp
fs
test
sahf
pop
loopne
push
outsb
stos
test
push
sub
movsb
pop
aam
data16
mov
sbb
dec
imul
orb
rol
jle
xchg
dec
movsl
mov
sbb
imul
lret
mov
pop
jecxz
push
daa
loope
pop
or
test
test
adc
test
fildll
test
movl
mov
cmp
push
push
aam
test
mov
lret
mov
jno
dec
sub
adc
jmp
fisubrl
xor
test
mov
xor
insb
pop
or
pop
mov
imul
incb
arpl
adc
jmp
insb
sub
andb
jg
dec
outsl
jle
scas
movsb
outsb
enter
es
jecxz
or
lret
add
mov
xchg
jle
test
jmp
test
ja
daa
push
and
mov
pop
mov
push
cmp
cmpsb
inc
arpl
mov
into
shl
mov
sub
xor
pop
xchg
mov
and
mov
int
movsl
mov
test
sub
and
ret
jle
in
repnz
lods
push
cs
pusha
inc
fbld
mov
pushf
jmp
arpl
push
mov
xchg
mov
mov
cmp
dec
fistpl
mov
xlat
ror
test
push
cmp
jo
stos
loop
sbb
pop
fstpl
adc
mov
pop
push
cwtl
sahf
mov
xchg
clc
popf
inc
out
mov
cmpb
cltd
mov
push
enter
sahf
xor
out
jecxz
adc
stos
roll
xchg
push
popa
leave
lock
cltd
lret
out
add
xlat
mov
arpl
jle
xchg
xchg
mov
mov
pop
int
cmpsl
xchg
test
sub
int3
ficompl
test
cmp
fdivrs
stc
out
test
xor
xor
mov
in
test
test
ja
cwtl
jb
shlb
pop
and
popa
sub
hlt
test
cwtl
dec
stc
es
pop
test
inc
and
out
adc
orl
imul
and
das
shlw
test
aas
scas
std
sbb
add
test
arpl
add
fdivr
fisubrs
daa
sbb
pop
dec
mov
and
cmp
push
jno
mov
cltd
loope
int3
sub
cld
mov
pop
insb
push
dec
lods
test
inc
inc
data16
xor
repnz
movb
test
imul
fimull
insl
test
dec
test
pop
push
test
int3
dec
mov
mov
mov
dec
incl
pop
arpl
dec
xor
in
mov
cmp
insl
in
push
cmpsl
in
cltd
int
sub
lea
pop
fnstcw
sub
popf
or
push
mov
leave
pop
mov
fcoms
mov
test
xorl
lock
loopne
sub
jecxz
cmpsl
push
or
dec
sub
sub
daa
imulb
push
mov
adc
cwtl
insb
cli
test
mov
pmulhuw
xchg
mov
daa
cmpsl
mov
xchg
mov
loop
sbb
ja
fidivl
lret
and
and
shll
jns
cmpsb
popf
pop
aaa
test
jg
test
clc
cli
lea
jle
or
mov
or
push
daa
jne
jb
lret
jbe
in
rcl
clc
ficompl
in
fld
mov
mov
enter
fists
dec
scas
mov
test
dec
and
pop
mov
push
in
test
icebp
push
lahf
pop
xchg
pop
int3
popf
push
xor
call
xchg
bound
aam
test
mov
cmpsb
sub
and
push
mov
sub
add
addb
adc
int
mov
decb
or
inc
sbb
test
shr
leave
fcmove
mov
fwait
sbb
xchg
jnp
imul
aaa
xor
push
test
mov
jge
xchg
movsl
sbb
cld
xchg
push
xchg
popa
call
ja
sbb
jmp
imul
enter
test
inc
bound
fcoml
xchg
out
test
jle
loope
movsb
jmp
adc
lods
push
out
cmpsb
inc
pop
jp
outsl
mov
xlat
jns
jecxz
mov
or
sub
shlb
rcrb
pop
or
mov
xchg
dec
and
int3
xchg
cmpsb
in
push
and
test
scas
pusha
mov
dec
lahf
pop
fcoml
dec
out
mov
loop
cmp
mov
mov
aad
push
xor
and
in
pop
jo
pop
fidivrl
add
imul
pop
es
insb
add
mov
data16
es
inc
push
test
or
out
sub
add
cmp
scas
outsl
pusha
mov
cld
or
fs
mov
lret
jnp
filds
loopne
push
in
loop
scas
mov
inc
jne
mov
test
in
push
int3
sub
shl
in
or
dec
mov
jb
xchg
xchg
lds
test
jg
push
test
popa
stc
js
jle
test
rclb
add
pop
in
jmp
inc
aam
or
mov
cmp
mov
jl
inc
mov
setp
in
or
mov
inc
add
sub
add
test
push
clc
cmp
call
lods
rol
sbb
xchg
xor
test
and
scas
jae
in
push
mov
leave
test
sub
dec
mov
in
cmc
mov
in
mov
mov
mov
scas
mov
test
lret
test
repnz
test
out
pop
cmp
pop
xlat
test
push
adc
test
into
sub
cmp
xchg
test
jp
addl
xor
and
test
sahf
inc
int3
xchg
adc
movsb
loopne
lret
xchg
mulb
ja
inc
aad
lcall
call
es
sub
data16
mov
xchg
scas
test
push
push
test
outsl
in
fists
das
jg
rol
ja
xor
sti
mov
push
icebp
imul
cltd
jns
push
std
and
popa
in
test
push
mov
sbb
test
adc
sub
xchg
dec
sbb
mov
test
or
outsb
or
out
test
push
xchg
cmc
testb
test
sub
xor
push
test
popf
jmp
dec
mov
cmpsb
add
sub
dec
loopne
ret
sti
lea
sbb
xlat
cmp
loop
jg
add
lahf
test
ror
outsl
ret
pop
insb
cs
int3
lea
push
lods
clc
pop
subb
lahf
dec
jp
out
mov
pop
cmpsb
test
sub
mov
mov
jle
test
cmp
and
dec
xor
cmp
loop
xchg
xor
sbb
mov
test
rep
data16
jl
test
jnp
jmp
ret
mov
test
lcall
ficoml
mov
pop
cmp
test
push
lods
js
adc
or
xchg
sbbl
test
decb
jp
jmp
sub
xor
fimull
out
bound
add
ret
pop
test
out
dec
sub
lods
test
jo
jmp
in
enter
sarl
arpl
mov
inc
insb
cmp
jmp
and
sbb
pop
or
test
mov
iret
and
aad
mov
fistps
inc
mov
pop
and
sbb
test
lock
mov
dec
and
repnz
xchg
inc
out
les
idiv
and
adc
bound
stos
jmp
test
inc
dec
mov
in
rclb
imul
enter
test
insb
dec
and
scas
sub
imul
subb
test
aad
xor
mov
mov
lcall
xchg
pop
mov
in
xor
ret
ffreep
test
and
in
and
sbb
mov
mov
mov
xor
rcrb
ret
mov
or
daa
pop
push
dec
jle
jbe
xchg
lret
and
out
dec
dec
test
enter
dec
test
or
add
jmp
inc
cltd
insb
sbb
adc
and
pop
dec
mov
fadds
or
les
mov
fstpl
test
dec
jae
adc
into
sbb
inc
test
dec
fdivrs
push
in
lea
pop
notb
mov
inc
cmp
cli
or
scas
movsl
cmp
test
repnz
cmc
jne
test
movsl
sbb
sub
sub
dec
cmpsl
cmp
inc
pop
bound
sbb
sahf
movsb
lds
push
add
jecxz
cmpsb
int3
inc
mov
lret
xchg
pushf
lret
lcall
test
dec
imul
jnp
dec
test
xor
mov
shll
xchg
cmpsl
div
in
jb
push
pop
xchg
movsl
push
iret
in
lds
data16
test
dec
mov
ss
and
loop
out
fiaddl
arpl
and
and
and
ret
xchg
pop
and
adc
sub
inc
push
pushf
inc
sub
and
sbb
xor
push
mov
mov
fwait
das
shl
add
mov
jl,pt
andb
fwait
mov
sahf
movsb
dec
xchg
pop
push
fidivs
repz
mov
sub
pusha
cmp
sub
cli
add
cwtl
std
arpl
mov
ret
mov
lods
mov
cmp
inc
pop
xchg
fisubs
bound
iret
or
arpl
cmpsl
fbstp
leave
les
pop
add
jb
cwtl
out
mov
jecxz
bound
into
mov
dec
jnp
in
sbb
in
stos
jle
or
pop
fwait
aam
pop
call
mov
fidivl
lret
push
int
xor
xchg
or
movsb
lret
dec
ret
cmpsl
imul
mov
clc
je
divb
xlat
lret
movaps
test
xor
sub
cli
insb
mov
bound
adc
inc
fwait
lods
adc
test
inc
push
xchg
jmp
dec
xor
repnz
pop
test
sbb
or
push
jmp
jns
xchg
andl
xor
test
jecxz
stos
pop
mov
pusha
test
iret
jle
test
fimuls
std
jl
xor
add
mov
outsl
adc
or
cmpsb
xchg
pop
and
aas
test
xchg
stos
jp
leave
dec
xchg
push
and
fldt
push
or
sbb
shll
inc
test
push
lret
dec
cmp
test
pop
rolb
xor
test
nop
out
fs
sub
fadd
xor
or
and
cwtl
mov
out
test
cs
movsl
sbb
test
adc
inc
jmp
leave
jp
fwait
or
daa
sub
dec
fisttpl
mov
sub
and
movsb
repnz
enter
jne
test
imulb
cmp
cwtl
out
and
test
iret
negl
cltd
jns
rclb
lret
jnp
or
mov
cli
jb
mov
ror
and
test
xchg
mov
jno
mov
cmp
mov
test
scas
in
push
pusha
fld
add
xchg
mov
mov
mov
movsl
push
add
dec
rclb
cmp
hlt
and
js
int3
pop
mov
rcl
sbbb
pop
aam
dec
dec
add
lcall
inc
or
icebp
mov
pop
lcall
fidivrl
popa
push
cli
add
pop
push
pop
popf
adc
cwtl
sub
pop
xchg
xchg
test
push
pop
xor
ret
cmp
std
pop
add
bound
int3
or
mov
mov
mov
pushfw
xorl
add
dec
leave
lret
pop
cwtl
jne
test
sub
adc
mov
sbb
mov
mov
ret
test
clc
aad
push
inc
cmp
dec
in
or
mov
test
cli
sub
pusha
sbbl
mov
sub
mov
aam
outsb
test
or
inc
mov
rorb
test
and
pop
xor
inc
push
lds
test
dec
insb
push
mov
adc
mov
ja
add
data16
inc
mov
clc
test
sbb
xor
enter
std
jmp
fdivs
push
dec
lret
mov
outsl
clc
jp
inc
xchg
test
scas
dec
iret
mov
cld
lods
mov
insl
mov
ret
mov
stos
inc
nop
insb
cli
movsb
xor
imulb
xor
and
jmp
push
jo
notl
les
jg
out
mov
dec
loopne
addr16
test
inc
sub
xchg
les
aaa
pushf
out
mov
mov
rcl
add
arpl
cwtl
jae
cmpsb
push
pop
adc
add
pop
test
data16
orl
and
lcall
and
and
into
mov
mov
subb
imulb
or
imul
pop
aad
cwtl
clc
pop
stos
cltd
xor
aaa
mov
xor
sbb
cmc
dec
or
pop
cmp
shl
jle
and
jno
mov
call
dec
test
jmp
adc
add
push
out
scas
lock
pop
dec
mov
imul
test
mov
push
cmp
inc
andl
scas
loopne
dec
push
lds
sub
test
push
sahf
mov
push
add
stos
push
outsl
in
cmc
mov
movsb
mov
jp
mov
test
in
xchg
popl
jle
movsl
test
enter
jmp
test
mov
sahf
add
jg
fbld
cmp
mov
sbb
les
enter
mov
jbe
xchg
dec
sarb
movsl
clc
es
and
enter
mov
je
xor
lds
mov
scas
jno
mov
dec
xchg
mov
inc
aad
inc
inc
ret
mov
xor
pop
or
cli
push
pop
test
cmp
sub
icebp
loop
test
add
xor
lret
cmp
test
imulb
adc
push
adc
and
push
dec
outsb
addl
lret
push
jg
sbb
jbe
ljmp
daa
cmp
in
push
lcall
and
mov
test
imull
ret
fistps
in
mov
test
xchg
xchg
inc
and
xchg
inc
ja
and
mov
lds
xor
mov
sbb
cltd
dec
sbb
xchg
in
jg
cmp
inc
loope
movsl
mov
test
lods
or
inc
xchg
or
jne
pop
add
add
cmp
in
fidivs
push
pop
imul
movsb
inc
fcoml
movsl
test
arpl
movl
xchg
testb
adc
or
test
push
leave
xor
aam
dec
sahf
fs
sbb
mov
or
mov
sbb
xor
test
aad
mov
addl
in
xchg
out
cmpsl
movsb
jecxz
xchg
out
sbb
test
xlat
lcall
mov
xchg
inc
int3
test
jl
and
movsb
mov
sbb
das
jecxz
dec
cli
jns
lret
iret
dec
cmp
push
push
inc
cmp
mov
test
addb
xor
mov
mov
dec
cmpsb
popa
dec
les
gs
fmuls
add
test
aad
mov
dec
mov
mov
test
xor
push
jmp
lods
in
pop
pop
cmpsl
testl
les
sub
mov
lods
not
test
mov
test
lcall
pushf
mov
das
pop
test
imul
xchg
mov
sbb
sbb
insl
testl
movsb
lods
enter
mov
or
mov
push
loopne
xchg
xchg
cli
push
dec
jbe
popl
push
or
test
push
std
mov
jge
mov
loopne
stos
sarb
js
cli
push
xchg
test
and
lds
xor
xchg
or
les
lock
add
xchg
sbb
subl
pop
cmp
cmp
add
jb
mov
xchg
dec
pop
lds
or
ds
loope
mov
test
dec
xor
dec
sub
jmp
mov
mov
xchg
test
sbbl
add
mov
push
fdivl
dec
pop
jmp
add
mov
mov
push
arpl
daa
roll
leavew
push
xor
pop
test
cli
cltd
pop
into
pop
lahf
push
mov
in
xorb
cmpl
in
sahf
dec
sbb
pop
daa
test
xor
and
mov
iret
dec
mov
dec
mov
test
sbb
cmp
cli
cmc
flds
shl
stc
mov
out
mov
add
push
and
and
mov
push
outsb
dec
and
pop
sub
adc
negb
jle
mov
cmp
fnsave
fldcw
and
sub
pop
push
jp
test
mov
push
mov
cmp
jg
inc
shll
xchg
pop
shlb
cmp
push
push
and
sti
movq
test
jo
lcall
or
or
rcll
push
mov
fs
dec
jno
cmpsl
imul
sbb
mov
lahf
cltd
clc
sub
mov
jecxz
sub
xchg
sbb
fldl
cmp
push
test
mov
arpl
lret
jle
in
mov
or
push
jle
add
add
cmp
add
mov
jp
ret
dec
call
or
sub
rcr
sti
clc
and
adc
popa
test
pop
pop
repnz
iret
in
sbb
fcom
loop
mov
lahf
repnz
xor
lea
test
lret
mov
outsb
mov
add
and
cmp
repnz
sub
stos
int
pop
dec
inc
xor
adc
aad
and
xchg
in
nop
and
sbb
mov
sub
mov
test
loopne
push
xor
mov
rcll
mov
iret
add
xchg
jg
aaa
fldenv
sub
movsb
lds
inc
sbb
pop
test
xchg
or
std
dec
inc
orb
test
out
fsts
insb
mov
mov
sbb
test
mov
inc
mov
xor
mov
or
loopne
lret
mov
imul
gs
mov
ret
pushf
jle
and
icebp
push
jp
jl
sub
add
push
sub
sbb
add
lea
or
roll
push
faddp
mov
bound
jno
lret
sub
subb
xchg
xor
cli
test
inc
lds
test
pop
rcr
insb
aas
movsb
lock
test
pop
jl
stc
mov
in
push
add
jns
call
inc
test
iret
daa
dec
and
add
push
xchg
sub
fiaddl
repz
push
xchg
lds
andb
mov
clc
and
sbb
and
daa
pop
inc
scas
test
loopne
mov
jl
sbb
sub
aam
xlat
clc
test
fmull
adc
jne
dec
fists
imul
leave
cltd
xchg
push
scas
hlt
mov
adc
mov
jecxz
out
dec
stos
cli
inc
xor
mov
add
lods
push
sub
xor
and
cmp
jb
cli
push
push
mov
push
cltd
mov
enter
test
out
mov
scas
outsl
jle
inc
aam
test
loop
cmp
push
jecxz
dec
sarl
test
subl
arpl
pop
xchg
adc
sub
cmc
pop
mov
jb
or
and
jle
mov
shr
leave
dec
jecxz
mov
scas
adc
ret
lcall
push
inc
loop
pop
dec
movsb
lods
lds
sub
pop
push
test
and
movsb
rol
sbb
mov
mov
pop
mov
pop
cltd
inc
dec
repnz
js
outsb
aas
nop
movsb
stos
mov
sub
xchg
xchg
mov
in
idivl
add
mov
outsb
je
imul
or
lcall
enter
addl
cltd
xchg
mov
mov
out
dec
test
movsb
int
in
ret
ds
les
icebp
daa
es
test
dec
push
data16
sarb
lret
test
push
push
test
mov
add
pop
movsl
loopne
bound
out
pop
mov
mov
test
jp
xchg
lret
out
xchg
pusha
pop
pushf
in
mov
js
clc
out
imul
fs
sbbb
imul
xchg
sub
xchg
pop
lret
aad
pop
xchg
pusha
lea
test
nop
cmp
aam
fwait
cli
test
loop
leave
inc
enter
pop
shlb
cmp
test
in
dec
dec
int3
mov
sbbb
mov
clc
rol
insb
test
and
js
and
out
das
pop
cmp
ds
mov
dec
nop
test
xor
push
test
fwait
andb
add
cli
out
out
arpl
add
orb
xlat
andl
inc
xchg
repnz
in
cmc
and
adc
xchg
cld
xchg
dec
jnp
jl
test
rcrl
mov
dec
aam
int3
cmpsl
mov
or
and
add
imul
jbe
enter
mov
les
mov
push
int3
jo
dec
and
cwtl
push
nop
out
and
push
test
mov
outsl
and
add
mov
dec
daa
push
mov
test
sub
inc
movsb
or
pop
jg
rclb
testl
and
add
sbb
xchg
sub
cmp
inc
test
dec
mov
int3
test
xor
mov
xchg
push
test
outsb
loope
and
pop
or
mov
mov
lods
add
lcall
add
addr16
arpl
mov
outsb
sbb
sar
inc
jge
pushf
mov
xor
pop
mov
add
sub
cmpsl
mov
cmp
mov
rorb
jne
xchg
jbe
dec
mov
mov
jae,pt
sbb
add
sbb
jmp
test
adcl
movsb
sbb
mov
push
test
incb
test
call
xor
test
dec
jmp
ret
jle
clc
pop
bound
dec
in
clc
mov
loop
orl
lret
fstpl
xor
movsb
dec
and
sub
dec
mov
insl
test
push
fnstcw
test
mov
outsb
sti
sub
movl
mov
cmp
xchg
fisubrl
push
imul
jmp
daa
test
add
xchg
and
xor
daa
adc
lds
jne
movaps
and
sub
add
or
mov
mov
xchg
push
xor
movsb
int3
pop
lret
movsl
movsl
cmpsb
jl
pop
outsl
inc
es
fdivr
pushf
inc
std
mov
xchg
stc
add
push
dec
and
sub
xchg
push
xchg
dec
push
in
xchg
test
subl
push
dec
inc
add
test
outsb
or
xor
lcallw
test
enter
movsb
mov
mov
mov
adc
or
cmpsl
inc
sub
xchg
daa
cwtl
int3
test
jbe
jl
insl
test
dec
sub
in
lcall
pop
icebp
incb
xor
adc
mov
insl
add
movsl
lea
test
push
mov
pusha
mov
mov
outsb
clc
xor
sub
enter
pop
and
stc
test
shlw
rclb
and
inc
jp
test
sub
cmp
adc
mov
xor
xchg
in
test
cltd
mov
icebp
push
test
mov
ret
and
jle
cmc
xchg
fsts
sub
and
movsb
xor
hlt
shl
shll
call
testb
cmc
insl
inc
cmp
pop
and
loopne
mov
mov
clc
movsb
int3
pop
shrl
jmp
test
aas
jle
push
xchg
mov
in
xor
inc
decb
ret
cmp
scas
pop
test
mov
mov
inc
arpl
dec
cmp
inc
pop
leave
test
sarl
stos
cmpsl
insl
inc
jno
test
mov
in
test
cmp
negl
and
jnp
negb
test
or
ljmp
in
leave
jmp
xorb
pop
lea
test
mov
mov
xor
and
mov
or
test
sub
mov
in
outsb
pop
dec
sub
or
out
pushf
test
sarl
push
push
test
push
out
dec
sub
movsb
xchg
std
sbb
je
mov
cltd
sbb
sbb
pusha
xchg
sub
adc
push
in
loopne
test
fcomp
pop
or
mov
xor
cmp
movsl
mov
sbb
xor
pop
sub
test
orl
sbb
xor
jmp
test
fcomip
cmc
out
pop
test
out
lcall
mov
iret
sbb
enter
xchg
sub
dec
xchg
sbb
loop
notb
ss
and
push
jle
sbb
xchg
push
fadd
sub
pop
test
rcrl
test
lock
in
xor
adc
into
test
sub
mov
test
cmpsl
lea
les
jle
mov
push
fbld
test
cwtl
push
icebp
lds
mov
les
orb
lds
and
les
xor
sbb
xor
outsb
mov
and
jo
in
sub
test
in
test
xchg
cwtl
out
jae
mov
mov
lea
lcall
mov
sbb
out
call
aas
mov
pop
loop
sub
test
shlb
mov
popf
stos
or
jb
or
mov
sbb
and
jecxz
test
xor
adc
cmp
icebp
dec
cltd
xor
mov
test
or
ja
repz
enter
xchg
inc
loopne
bound
lods
stos
test
test
mov
xlat
movsl
mulb
mov
movsb
in
mov
js
imul
mov
enter
movsl
dec
popa
sub
sti
test
or
jno
movsl
mov
pop
xchg
movsb
xor
stc
pop
in
aad
cmpb
test
dec
stos
inc
push
push
clc
into
test
inc
pop
int
mov
jne
push
cmp
ja
and
aam
flds
xchg
test
cmp
test
jle
dec
sub
pop
into
and
flds
cmpsb
in
cli
popa
sub
stos
movsb
pop
add
xchg
arpl
push
aad
popf
dec
arpl
repnz
sbb
mov
mov
or
and
test
clc
sbb
test
subl
movsb
jnp
clc
mov
fadds
testl
pusha
je
arpl
mov
pop
dec
sub
fmul
mov
inc
mov
test
dec
and
inc
dec
popf
and
pusha
mov
jno
push
dec
push
jne
outsb
or
call
lret
mov
sub
adc
fiadds
adcb
pop
arpl
xor
mov
fdivl
adc
test
jp
adc
loopne
xchg
mov
push
mov
orl
push
test
add
int
pop
or
add
sbb
aam
lahf
idivb
subb
addl
or
test
and
ret
nop
int
outsl
mov
xchg
loopne
add
mov
test
pop
sbb
xor
mov
ds
test
aam
js
cmp
mov
bound
jg
int3
filds
dec
pop
std
test
leave
cmp
test
cmc
and
mov
dec
xorl
xor
and
mov
sub
insb
and
sub
test
int
lret
aad
test
push
mov
mov
cmp
pmulhuw
test
jbe,pt
rol
mov
sub
jno
cmp
test
sbb
scas
jne
mov
cmp
push
test
inc
jno
xchg
mov
mov
fcoml
push
test
icebp
test
mov
push
push
arpl
repz
pop
loopne
or
dec
fdivs
or
add
dec
sbb
ds
sarb
pushfw
neg
cmp
ret
test
subl
inc
jb
xor
adc
imulb
cmp
sub
sbb
xchg
dec
push
movsb
test
inc
add
sub
xchg
cmpsl
fwait
mov
aad
movsb
bound
sbbb
inc
in
mov
and
sti
mov
imul
or
sbb
xor
mov
bound
and
adc
inc
add
mov
sub
sbb
data16
pop
cltd
add
cmp
pop
testb
rorl
call
jp
mov
pop
mov
mov
and
test
jmp
push
jecxz
add
cs
in
add
aam
cmc
daa
mov
and
push
add
icebp
dec
jo
mov
test
xchg
lcall
into
movsb
icebp
cmp
bound
or
push
mov
arpl
mov
or
insb
jp
movsb
xchg
sub
les
pop
pushf
add
sub
lds
lods
orb
pop
push
pop
mov
test
dec
and
stos
stc
ljmp
cwtl
mov
aas
mov
pop
sub
lds
push
mov
cmp
loope
insb
push
out
sbb
mov
dec
mov
adc
dec
in
mov
xor
test
int3
out
inc
lret
outsl
pop
jp
jo
pop
or
enter
lea
outsb
lcall
repnz
push
push
test
cmc
ret
lods
lret
push
aad
test
jecxz
test
cmp
push
test
cmp
in
into
adc
cmp
test
call
dec
test
insb
lret
std
xchg
fistl
sub
cmpsb
lret
xor
dec
clc
gs
shrb
and
test
shrl
scas
push
das
sbb
dec
mov
movsb
sub
sub
mov
imul
sub
mov
jae
fndisi(8087
push
inc
test
push
scas
testl
inc
inc
lahf
sahf
test
pop
xchg
je
push
mov
fmuls
test
rcll
cmp
mov
push
add
sbb
dec
lret
lcall
lds
cli
ficoms
sub
test
lea
sub
push
cltd
xchg
stos
test
scas
loop
xchg
bound
inc
push
das
lock
and
test
and
add
scas
xchg
xchg
cmp
stos
mov
jge
add
cmp
pop
test
push
mov
xor
adc
pushf
lods
mov
dec
adc
mov
fs
push
call
pop
or
dec
aaa
inc
and
out
xor
or
in
cld
xchg
test
mov
adc
subl
pop
lds
push
in
test
aam
in
popa
push
mov
shll
dec
cwtl
sti
inc
sbb
stc
xchg
sub
xor
add
shl
icebp
lret
leave
mov
stos
mov
popa
xchg
into
bound
lcall
addl
movsl
or
ds
xchg
ja
fisubrs
outsl
imul
test
sbb
sarl
out
aam
jmp
sub
insl
test
rolb
push
mov
lret
xor
sbb
or
in
loope
orb
or
clc
pop
adc
rclb
xor
mov
push
and
test
inc
cwtl
aad
std
jp
sbb
cmp
addb
mov
jbe
cli
ja
jge
pop
addr16
cs
jecxz
popa
mov
cmpsb
es
test
xchg
mov
test
adc
test
roll
jmp
ret
adc
jnp
cwtl
fwait
movsl
sti
add
pop
add
rolb
cli
dec
jno
jns
popa
adc
test
int3
dec
clc
mov
jge
sub
cmp
inc
jnp
jo
je
jp
outsb
fildl
and
or
xchg
mov
xor
mov
jle
sub
test
mov
into
add
push
cmp
adc
int
testb
push
sub
mov
inc
pop
xor
movsl
dec
inc
and
fwait
adc
add
fst
ret
mov
xchg
in
in
movsl
cmp
icebp
test
repnz
and
scas
push
jmp
mov
ficomps
ljmp
jb
test
fldenv
test
and
fs
js
test
mov
adc
mov
lods
int3
imul
test
pop
outsb
sub
test
jle
xchg
inc
jne
in
sbb
shrb
cmp
xchg
lds
mov
out
sub
jecxz
cmpsl
pop
adc
test
mov
ret
and
stc
test
dec
loopne
jmp
mov
test
cltd
push
test
ret
adc
aaa
jmp
jp
movsl
cmp
xor
leave
imul
imulb
mov
leave
nop
lret
push
jnp
dec
test
cld
in
test
and
test
pushf
imul
push
xor
mov
daa
out
and
sarl
dec
lods
dec
ja
push
test
xor
xor
mov
cmpl
sbbl
mov
loope
pop
enter
mov
outsb
lods
or
mov
test
adc
push
mov
mov
lahf
xchg
test
andl
arpl
xchg
notl
mov
dec
test
sbb
mov
xchg
test
fcomps
dec
pop
sbb
ret
mov
inc
loop
adc
imul
mov
idivb
test
test
and
cmp
test
sbb
ljmp
insb
and
scas
cltd
push
inc
jp
push
nop
in
or
pop
fwait
dec
movsb
sub
mov
cmp
mov
iret
and
test
fwait
lods
test
sub
movsl
inc
jns
and
test
clc
sbb
fidivrl
sarl
les
in
xchg
mov
sbb
test
mov
dec
add
mov
adc
sbb
test
pop
sbb
dec
xor
and
test
sub
xchg
aas
rolb
xchg
jg
test
std
mov
mov
movsb
jnp
dec
lret
sar
in
aam
mov
mov
out
adc
jbe
mov
add
lahf
lds
sbb
les
out
test
xor
repnz
test
pop
push
in
or
addb
or
fwait
mov
mov
stos
out
test
enter
inc
pop
test
scas
pop
fldenv
arpl
bound
or
mov
xor
mov
push
sub
inc
jo
test
jb
pop
push
fmuls
arpl
pop
cmpsl
mov
push
insb
dec
cmpsb
test
push
rolb
jl
sub
pop
and
mov
cltd
mov
andl
xchg
mulb
bound
dec
sbb
pop
jo
test
xorl
icebp
rcrb
sarb
test
sub
dec
sub
mov
sbb
in
cmpl
adc
std
lcall
adc
sub
mov
loop
cmpsb
fldl
dec
cmp
cmpsb
adc
test
mov
ds
fwait
int
dec
xchg
add
ret
push
pop
mov
pop
mov
inc
stos
jnp
mov
sub
enter
or
and
or
push
adc
sub
inc
cwtl
cmpsl
out
mov
xchg
test
jge
inc
xchg
cs
sub
mov
jp
sbb
es
dec
fsts
mov
test
lret
scas
subb
pop
test
clc
call
mov
mov
lea
dec
rcll
cmp
and
jp
mov
lcall
sbb
pop
mov
test
xor
test
xchg
push
and
sub
jecxz
xor
movsb
ds
rolb
mov
daa
xchg
adc
or
addr16
out
cmp
hlt
sub
ds
dec
dec
bound
loop
test
test
lds
sub
xlat
cmc
xchg
adc
or
dec
dec
adc
cli
sbb
out
or
lea
or
arpl
mov
push
test
stos
movsb
cmc
xchg
hlt
push
and
push
adc
push
daa
sbb
jecxz
adc
cmc
pop
cld
adcb
jg
jb
frstor
cmp
dec
cmp
lds
in
and
push
ret
mov
push
sbb
stos
decl
mov
icebp
ret
cwtl
test
scas
test
mov
inc
mov
imul
test
sub
cmp
add
inc
movsb
jnp
mov
daa
inc
sub
inc
js
cmc
xor
adc
adc
jno
outsl
lret
dec
mov
test
enter
mov
ja
xchg
arpl
add
mov
mov
cmc
and
push
xlat
nop
dec
mov
inc
clc
shll
dec
test
pushf
cmp
mov
sbb
sbb
cltd
mov
jmp
pop
mov
jbe
sub
adc
xchg
rorb
test
in
sbb
mov
cmp
arpl
and
shr
push
aam
push
sub
pop
orb
test
insl
adc
and
mov
aam
aad
test
sub
inc
idivl
lods
test
or
fsubs
test
pushf
pop
jecxz
test
iret
jns
cltd
les
sbb
bound
dec
mov
cmp
popa
daa
sub
test
or
stc
or
rol
bound
rolb
ljmp
sub
das
stc
push
fidivrl
pusha
int
mov
mov
arpl
mov
sub
cmpsl
inc
or
push
jns
mov
mov
pop
mov
xor
insb
dec
dec
stos
sbb
test
add
test
cmp
mov
push
cmpsl
test
pop
xchg
out
or
pop
in
call
stc
cwtl
and
dec
imul
loopne
mov
ja
lahf
mov
inc
test
repnz
or
cmp
xchg
cmp
sbb
int
mov
test
fwait
loop
clc
add
iret
loop
notl
and
movsb
jae
es
lret
fimull
cmpsb
cmp
in
and
ret
sub
pop
pushf
std
jne
arpl
xor
roll
xchg
mov
addr16
mov
pop
dec
or
dec
out
cmp
test
test
cltd
push
testb
dec
outsl
out
test
addl
sbb
inc
mov
scas
jb
jl
sbb
xchg
into
dec
pop
test
jbe
inc
loop
dec
jecxz
inc
jns
js
int
mov
mov
sub
xor
addl
or
push
test
addr16
cmp
mov
cltd
inc
popf
lock
cmpsb
test
sbb
dec
push
jg
sti
loop
push
cmp
test
xchg
rcrl
mov
mov
or
enter
leave
cmp
push
data16
jp
test
mov
jmp
enter
push
mov
sub
sti
and
sub
shlb
mov
aas
adc
test
lret
lods
push
push
orb
mov
cmpsl
xor
loopne
imul
aaa
test
add
adc
push
int3
cmp
xchg
movsl
test
test
shl
mov
pop
mov
cmpl
sbb
out
add
mov
pusha
insb
clc
aas
push
inc
stos
push
mov
mov
and
vcmpss
daa
mov
push
test
imul
test
mov
int3
fs
jecxz
in
pusha
pop
cmpsb
repnz
test
dec
sahf
pop
add
xchg
int
and
xchg
sub
sahf
enter
je
cli
test
dec
out
pop
insb
fld
insl
jmp
sub
lds
clc
clc
bound
lret
lods
pushf
mov
mov
int
lods
and
ds
xchg
dec
test
cmp
aad
sarl
sub
sar
sub
xor
popa
sbb
in
cli
mov
inc
cltd
ljmp
ret
movsb
jo
sub
cmp
push
movsl
mov
test
pop
stos
aad
into
jmp
jp
push
test
arpl
xchg
loopne
cmpsl
aaa
jecxz
gs
div
inc
stos
cwtl
test
xchg
and
mov
jbe
test
push
cmp
jg
int
mov
push
addl
filds
and
lea
mov
jne
std
mov
and
inc
xchg
aam
mov
aas
sub
sub
test
mov
icebp
dec
mov
fwait
pop
std
lret
int3
test
out
in
rcrl
mov
test
fsts
scas
and
popl
add
mov
test
mov
mov
add
push
dec
inc
jl
test
popa
std
idivl
sub
pop
add
addr16
inc
leave
ret
xor
push
mov
das
push
test
out
mov
out
xchg
lds
loop
clc
mov
and
testb
rclb
push
xchg
loop
xor
and
push
pop
xchg
mov
xchg
cmp
movsb
xchg
dec
mov
mov
sub
pop
push
mov
jmp
pop
clc
lcall
fcmovb
xchg
mov
mov
mov
std
cmp
mov
data16
clc
ret
and
notl
js
or
mov
inc
pop
int
je
or
mov
clc
filds
shll
test
sbb
xor
pop
mov
mov
cwtl
and
in
cmp
out
cmpsl
mov
test
je
daa
shl
icebp
test
mov
testb
and
pusha
daa
xchg
movsb
mov
xchg
ret
sbb
shr
xor
out
push
test
sub
inc
addl
xor
out
fldenv
pop
arpl
xor
lret
test
push
sarl
push
add
and
sub
stos
sbb
pop
insb
mov
test
xor
test
mov
test
dec
mov
sbb
int
pop
fcmovnbe
push
mov
arpl
lds
mov
adc
and
cmp
andb
inc
test
out
pop
or
jl
cli
shlb
cmp
test
or
mov
clc
dec
cmc
jne
pop
test
fwait
mov
faddl
shrb
leave
dec
add
mov
mov
data16
bound
xor
sbb
mov
subl
test
aam
pop
out
mov
mov
ret
xor
test
xor
lea
inc
pop
adc
mov
mov
insb
fmull
daa
enter
pop
and
roll
loopne
outsb
mov
inc
loop
push
add
jl
into
test
adc
testl
stos
cmp
fwait
imul
scas
pop
sti
test
in
test
int3
fisubs
fcomi
sbb
mov
xor
cmp
jle
pushw
xchg
xor
mov
cmp
and
jns
xorb
int3
mov
add
sub
push
mov
sbb
mov
loopne
and
lahf
lea
jo
in
cs
and
ret
or
repnz
leave
xchg
pop
inc
rolb
and
lcall
insb
test
cmp
mov
hlt
fmul
lret
test
xchg
iret
in
movsb
sti
rorb
mov
divb
and
fstps
inc
sub
mov
mov
sub
test
push
in
mov
inc
dec
push
test
sub
sub
cmp
popf
add
leave
test
into
pop
cli
test
mov
sub
fistps
outsl
push
or
or
movsb
cmp
repz
mov
jle
sbb
and
pushf
sub
mov
and
sbb
pop
sar
fsubl
jnp
daa
insb
pop
repz
test
add
cmp
test
cmp
and
inc
mov
push
ja
push
and
xchg
in
inc
dec
mov
or
and
sti
add
mov
test
call
sahf
add
xchg
dec
mov
and
test
mov
testb
call
add
cmc
or
into
std
pop
xlat
mov
inc
push
movsl
imul
mov
test
nop
sbb
test
das
ret
sbb
fistps
test
ret
pop
scas
push
pop
xchg
mov
or
sub
repz
test
scas
sub
test
push
out
fwait
xor
loope
sub
test
sti
jecxz
bound
fidivrl
loopne
inc
pop
lods
push
and
xchg
in
out
and
loop
and
test
sub
sbb
sbb
adcb
ja
add
stos
fidivl
mov
pop
test
test
pop
popa
inc
xor
sub
mov
mov
inc
call
or
or
mov
aas
imul
cmp
jp
pop
loop
movsb
adc
or
or
arpl
inc
cmp
ret
mov
mov
cmp
mov
dec
inc
dec
jge
or
sub
fisubs
cmp
fisttps
outsb
mov
movsb
clc
cmpsl
lret
das
sbbb
add
dec
inc
and
push
dec
movsl
cmp
push
sbb
enter
jno
jmp
pushl
fldcw
mov
lahf
in
sbb
jecxz
dec
sahf
insb
pop
adc
push
jno
adc
test
int
cmc
and
in
sub
push
add
cltd
cld
mov
mov
leave
loope
fdecstp
imul
lret
stc
dec
test
xchg
xor
pusha
clc
mov
mov
mov
into
inc
in
xor
mov
inc
push
dec
sub
and
in
loop
xchg
or
xchg
sub
dec
cli
mov
loope
push
xchg
test
fdivrl
sub
cmp
bound
loopne
push
inc
sub
dec
mov
mov
std
test
jecxz
in
sub
mov
inc
addr16
in
cld
mov
push
mov
imul
xchg
movsb
roll
push
or
cmp
and
cmpsl
sub
mov
sbb
cwtl
mov
mov
stos
jbe
xor
add
fisubrs
and
test
push
call
inc
and
push
pushf
test
test
jae
bound
stc
cmp
mov
movsl
cmp
loop
dec
test
mov
pop
enter
mov
sbb
ret
sub
mov
mov
test
lds
jns
jae
lcall
push
test
add
stos
in
xchg
cld
lret
mov
dec
adc
push
cmc
test
andl
mov
and
gs
mov
mov
add
inc
sub
fadd
in
sub
test
mov
and
push
sbb
pop
push
mov
cmp
lods
xor
and
mov
bound
push
mov
xchg
lock
loop
out
xchg
lcall
mov
sahf
mov
dec
jne
addl
jle
test
test
jl
enter
push
adc
and
movsl
cmc
push
cmc
ret
aad
insl
popa
cmp
xor
nop
sbb
inc
insb
add
call
outsl
hlt
add
lret
js
movsb
icebp
std
xchg
jae
jns
mov
out
pushl
inc
int
sub
cmp
mov
testl
jmp
stos
push
pop
xor
lret
mov
jo
fcmovnb
je
and
pushf
mov
or
dec
sti
xchg
bound
xor
sub
shlb
mov
les
push
mov
mov
es
inc
cmp
cld
test
and
sub
cmpsl
daa
add
pop
dec
int3
test
hlt
dec
movsl
xor
test
push
pop
dec
add
dec
arpl
sbb
sub
cmp
popa
lret
xchg
fisttpl
jmp
mov
jns
add
loope
dec
in
add
mov
scas
mov
popf
cmp
push
into
clc
push
or
sbb
jp
xchg
in
lret
cld
sbb
enter
mov
test
push
dec
cmp
mov
push
jb
sbb
test
mov
add
sti
imul
shll
repz
movsl
out
dec
mov
lret
jle
inc
and
data16
jo
jg
sub
daa
xor
std
test
insl
decl
xlat
insb
mov
iret
push
jne
into
jnp
loope
nop
bound
pop
test
out
rcll
inc
cld
mov
pop
int
test
test
scas
mov
mov
cmpsb
adc
xor
xchg
xor
mov
push
shr
test
sub
jmp
test
push
test
jne
test
leave
pop
int3
or
adc
sbbl
mov
movb
cwtl
ret
pop
test
mov
arpl
and
adc
test
or
hlt
cltd
ss
xor
dec
jns
nop
bound
bound
mov
stc
xchg
xchg
test
mov
orb
movsb
and
in
dec
mov
cli
pop
shr
test
lea
inc
out
pop
movsl
test
int
int3
arpl
pop
inc
sub
stos
dec
ret
sbb
ror
enter
ret
roll
ret
stc
nop
mov
sub
sbb
cwtl
lds
loop
lcall
mov
sbb
sets
subb
mov
pop
idivb
cltd
cld
mov
mov
dec
sbb
mov
test
test
sbb
mov
mov
lret
cmpsb
push
in
fs
cmp
mov
and
lods
jo
or
adc
xchg
mov
cmc
test
mov
push
les
leave
mov
das
arpl
enter
sar
and
push
fnsave
sub
adc
adc
adc
test
stos
les
test
mov
ret
call
in
jnp
inc
test
jbe
jns
or
faddl
mov
cmpsl
movsb
mov
cmp
pop
inc
mov
pop
test
cmp
leave
add
hlt
addl
test
mov
call
in
push
jbe
xchg
xchg
sbb
movsl
bound
testb
dec
stos
testl
loop
xchg
cwtl
push
mov
test
dec
in
in
rol
sbb
test
fistpl
out
test
fnstcw
mov
pop
addr16
loop
xor
sbb
aad
enter
jae
mov
test
dec
out
sub
inc
mov
xor
mov
insb
mov
rcrb
shll
adc
xor
xor
mov
xchg
pop
jecxz
mov
inc
cmc
and
rorb
enter
es
dec
shl
pop
call
inc
mov
test
xchg
sbb
jnp
and
nop
lret
sbb
jecxz
test
popf
adc
cmp
hlt
insb
adc
popf
mov
test
icebp
mov
test
out
adc
mov
xchg
sub
xchg
test
ds
mov
sub
rol
mov
add
femms
push
dec
movsb
and
or
pop
or
shrb
dec
push
imul
jmp
cwtl
cmc
mov
jo
outsb
lock
sub
mov
and
cli
leave
inc
xchg
test
test
dec
shll
lds
pop
push
test
sarb
sbb
andb
mov
or
mov
icebp
pop
loop
xchg
arpl
lea
enter
dec
sbb
mov
outsl
push
nop
pop
loop
int
jge
test
int3
sbb
mov
repz
add
test
ljmp
ret
mov
test
lret
xchg
pop
pusha
cmpsl
ja
test
fimull
cmpsb
sub
mov
fwait
or
aad
mov
sahf
in
bound
push
aam
mov
mov
loop
dec
or
mov
out
stc
sub
push
aaa
test
shl
arpl
test
push
mov
test
dec
mov
cltd
test
sbb
cmp
pop
add
pop
add
sub
test
lret
imulb
mov
mov
adc
ret
cmp
jp
stos
aaa
or
sub
push
add
js
mov
dec
and
jp
fdivr
out
inc
pop
mov
fcompl
aam
mov
pop
mov
cmp
dec
test
jns
lock
repnz
mov
les
push
or
sub
in
test
jnp
test
stos
pop
test
sub
jae
mov
or
test
out
or
mov
mov
cmp
fld
push
popa
cmp
sbb
mov
inc
cli
inc
pop
pop
push
fsubr
jl
push
sub
pop
jno
push
cli
xchg
dec
jecxz
sbb
aaa
mov
test
cmp
mov
mov
inc
scas
cltd
and
loopne
jle
movb
jo
push
movsw
sbb
jnp
ss
lods
popa
shl
jmp
loop
dec
inc
adc
sub
sbb
pop
mov
test
adcb
sub
or
pop
sbb
cltd
shlb
cmc
sbb
stos
enter
push
shrl
lret
cs
test
cli
adc
test
push
stos
mov
arpl
les
insl
xor
cmp
mov
iret
popl
pop
mov
push
cmp
xchg
mov
test
test
pop
dec
xchg
or
in
lret
mov
xchg
or
lcall
stos
jbe
arpl
mov
scas
dec
add
pushf
out
test
jo
sub
cltd
cmp
pusha
add
mov
int
hlt
pop
lret
push
xchg
push
mov
pop
mov
addr16
lods
stos
shl
jle
ds
aad
cmp
jmp
stos
or
mov
mov
and
outsl
mov
lea
xor
test
mov
mov
mov
stos
inc
pop
dec
adc
xchg
fstps
mov
mov
test
and
clc
jp
cmp
pop
mov
and
test
loop
and
test
mov
adc
jmp
test
nop
sub
cmc
mov
pop
loop
lods
add
orb
dec
movsb
loopne
and
or
sbb
mov
test
cmpsl
scas
or
inc
ret
test
pop
je
jp
in
test
bound
cmc
dec
test
mov
push
mov
fwait
xchg
add
xchg
and
loope
lahf
cmpsl
adc
cltd
les
test
push
push
cmp
movsl
dec
test
movsl
xor
sub
icebp
cmpsl
lods
aam
and
or
mov
test
popa
dec
push
call
and
jns
fsts
pop
and
jmp
mov
xchg
jb
cmp
sbb
inc
lcall
inc
fstl
test
mov
test
das
mov
loop
movsb
add
add
sbb
les
mov
nop
dec
out
or
fimull
enter
pop
dec
movsb
pop
mov
imul
test
shll
xchg
xchg
pop
sbb
pop
divl
test
inc
popa
test
repnz
push
jns
pusha
push
mov
push
and
addl
inc
cmpsl
stos
scas
bound
in
mov
sahf
or
inc
test
xor
push
or
adc
test
loope
pop
cmp
sbb
jge
cli
movsb
cltd
push
push
add
test
xor
fimull
jmp
mov
aaa
repnz
adc
xchg
es
mov
adc
cli
shlb
leave
dec
cltd
lcall
push
movsb
pusha
inc
mov
mov
test
mov
and
xorl
lret
loop
push
inc
mov
dec
inc
mov
pop
test
insb
test
push
cmp
inc
out
jecxz
xor
jae
pop
int
stc
test
pushf
mov
sarb
jmp
test
daa
bound
sbb
movsb
stos
jmp
cwtl
mov
xchg
pop
fldln2
les
out
fistpll
dec
lcall
and
test
outsb
jmp
mov
pushf
test
fcompl
daa
shrl
mov
jnp
test
insb
push
out
mov
push
cmpsb
adc
add
movsb
popa
sub
cmp
sub
xor
inc
xor
pop
adc
movsl
js
test
mov
pop
test
loopne
or
mov
std
scas
clc
iret
mov
negl
xchg
adc
sbb
test
subl
bound
jo
push
mov
out
mov
mov
push
cmc
arpl
mov
test
into
push
pop
movsl
or
test
iret
enter
lret
out
shrb
test
add
arpl
rcrb
mov
cmc
mov
jecxz
jp
cmp
inc
cld
sub
mov
stos
mov
lret
inc
pop
rolb
enter
jecxz
ja
lcall
xchg
cltd
xchg
je
call
mov
data16
and
and
dec
mov
test
and
mov
in
lahf
in
sbbb
pop
sub
adc
ja
and
fstpt
jmp
xor
test
ret
pop
or
and
lahf
cmp
aad
lea
mov
fmuls
mov
test
clc
or
movsl
adc
xor
mov
rolb
mov
test
sub
mov
pmaxsw
push
add
mov
test
loopne
leave
add
movsb
fwait
fs
cli
icebp
xor
mov
imul
dec
shlb
mov
movsl
mov
inc
repnz
addb
or
jp
and
jnp
loope
xchg
sbb
insb
cmp
dec
push
movsb
cmp
xor
sub
sub
push
cmpsl
dec
sahf
loop
int3
pop
test
ja
fwait
test
cld
mov
lret
sub
mov
ret
jge
movsb
data16
icebp
sti
scas
movsl
sub
clc
xor
mov
test
push
xchg
popf
or
aam
mov
rorb
les
cltd
in
sbb
xchg
js
and
test
insb
jne
movsb
movsl
inc
cwtl
ja
mov
test
repnz
and
and
or
test
movsb
push
sub
inc
mov
mov
mov
lcall
sub
aas
pop
jge
movsb
mov
scas
sbb
xor
cs
daa
pop
inc
xlat
sbb
test
add
xor
test
xchg
mov
jge
xchg
or
je
dec
lea
sbb
enter
mov
lods
inc
in
dec
cs
jae
adc
adc
mov
aas
xchg
fsubl
test
arpl
pusha
inc
outsb
inc
test
mov
fstl
sbb
mov
movsb
push
mov
test
inc
sbb
sub
mov
fbld
test
push
push
in
loope
jbe
sti
and
adc
sbb
cmp
loopne
cmpsb
sbb
and
mov
in
jb
enter
repnz
pop
push
aas
test
sub
dec
insl
push
cli
inc
mov
xchg
andb
cmpsb
test
aam
mov
or
adc
shr
sub
mov
xchg
and
shl
mov
mov
sbb
js
and
xorb
fdivrl
daa
xchg
jb
dec
movsb
lds
adc
push
push
and
insb
lods
stos
jle
ret
ret
pop
mov
in
rolb
xchg
xchg
lahf
inc
inc
test
xchg
sub
insl
mov
sub
lret
sbb
mov
fadd
insl
push
sbb
movsl
int
and
movsb
out
test
pop
adc
stos
jo
mov
test
jp
cld
cmc
or
jge
jmp
xchg
je
jmp
test
test
sub
fistpl
mov
mov
cmp
jno
xor
test
push
repnz
mov
loop
test
sub
and
inc
xchg
xor
movsl
lcall
repnz
ja
cld
mov
orl
or
mov
mov
jecxz
int
shrb
push
lods
or
mov
aam
mov
or
push
jecxz
jmp
push
test
je
faddl
fwait
int
push
sub
cmp
out
mov
xlat
movsl
cwtl
test
lcall
test
shlb
add
popa
mov
xchg
stos
dec
mov
out
xor
and
add
pop
add
or
pop
dec
ja
fildl
insl
test
jno
and
inc
rcll
stos
push
jp
xchg
in
les
lahf
out
loope
in
loopw
and
mov
ret
lods
repnz
sub
in
mov
push
fnstcw
out
insl
push
lods
xor
adc
rcl
arpl
mov
fcompl
bound
mov
test
sub
cmp
popa
movsl
mov
in
push
adc
fwait
sbb
jo
pop
nop
stos
push
test
jge
push
imull
cmp
in
aaa
std
and
ret
inc
inc
xchg
popf
int3
test
enter
andb
lret
mov
mov
insb
add
clc
inc
test
test
and
mov
add
sahf
dec
push
rcll
pop
cmp
mov
cmpl
pop
cmp
lds
test
dec
mov
pushf
inc
cmc
mov
mov
add
hlt
mov
enter
add
lea
jl
inc
test
push
psllw
and
jnp
jmp
inc
sbb
jb
cmp
test
les
loopne
fstpt
cltd
mov
orb
jmp
sar
pop
mov
mov
test
mov
adc
test
leave
lds
or
push
sub
fwait
test
clc
pusha
mov
mov
test
or
pusha
sti
dec
jae
sbb
aas
push
mov
jg
pushf
jecxz
push
push
xchg
movsl
push
call
sbb
repnz
dec
lret
pop
push
aaa
arpl
push
inc
aam
fdivr
cmp
jno
inc
mulb
mov
push
inc
and
test
add
mov
test
int
dec
lods
pop
aam
mov
test
subl
pop
jp
pop
mov
sub
mov
or
test
inc
lds
or
sti
test
pop
jae
int
and
pop
fnsave
jno
sbb
mov
push
fs
inc
shl
sbb
pop
movsb
addr16
insb
sub
or
mov
lods
sbb
push
stc
ret
lret
inc
and
and
pop
mov
sbbl
dec
dec
shlb
add
adc
add
mov
movsb
scas
push
hlt
imull
and
adc
mov
ja
xchg
xor
jg
in
call
cmpsb
push
and
or
cld
pmaxub
test
and
or
les
xor
cmp
sub
inc
mov
sbb
in
dec
mov
xchg
int3
xor
test
dec
test
enter
in
pusha
test
and
add
mov
mov
shr
pop
mov
jb
pop
lods
mov
jl
sub
lods
call
test
mov
loop
sub
test
stos
dec
js
inc
icebp
in
mov
xor
mov
and
adc
or
movsl
cli
lods
cmc
add
stos
cmpsl
sub
lcall
imul
lds
mov
test
add
addr16
scas
adc
bound
sub
mov
pop
test
mov
xchg
je
ret
lds
loopw
xchg
inc
sub
in
adcb
sub
aaa
mov
ja
sub
cli
popf
dec
test
jle
add
into
ret
pusha
rclb
rcrl
inc
mov
addr16
cs
movsb
inc
fdivrl
mov
dec
arpl
stos
clc
pop
mov
mov
push
jne
leave
dec
pusha
out
jmp
adc
cmp
arpl
lods
lods
pop
inc
icebp
cmp
mov
mov
xor
mov
mov
and
scas
test
stos
movsl
add
push
inc
movsb
jecxz
pop
cwtl
push
jge
mov
in
cmp
sbb
jecxz
fsubl
mov
jbe
inc
cmc
repnz
arpl
imul
pop
sbb
test
push
push
cltd
adc
cs
push
popf
ss
dec
addb
and
ja
cmpsl
or
mov
mov
mov
or
inc
sbb
call
shrb
testb
sub
jns
or
cs
test
push
pop
or
movsb
adc
cmp
xchg
mov
stos
mov
mov
mov
push
sbb
stc
mov
xchg
jae
mov
fwait
arpl
mov
jns
daa
mov
jo
rolb
mov
cmc
stos
cmp
cmp
inc
push
pop
cmp
imul
mov
insb
inc
mov
push
in
sub
mov
test
mull
cwtl
and
jae
jo
xchg
iret
pminsw
dec
lret
fimuls
stc
add
inc
xlat
or
hlt
jnp
fsubrs
les
js
clc
mov
mov
es
xlat
sub
aam
dec
out
lahf
add
test
xchg
push
call
call
leave
pop
insb
stos
vmovss
scas
test
popf
sbb
dec
ret
aaa
adc
xchg
inc
jl
std
sub
sbb
addr16
stc
repnz
or
lret
xchg
in
stos
int
imul
xlat
bound
jb
dec
test
jecxz
xchg
in
push
fidivl
dec
flds
mov
xor
jbe
cli
and
add
inc
cmp
test
xchg
add
jne
or
sub
and
or
mov
push
xchg
adc
and
push
and
loope
fisubrs
pop
xor
test
cs
mov
jne
push
popa
insb
or
cli
test
mov
dec
inc
popf
cmpsb
mov
pushf
xor
test
or
jecxz
scas
incb
test
push
jmp
or
push
push
jae
test
outsl
je
std
das
ret
lret
dec
jo
adc
int3
repnz
cld
xor
add
add
add
into
in
or
sbb
mov
test
mov
rcr
test
sbb
test
vcvtps2dq
jmp
dec
cmp
test
xor
lods
pushf
lds
test
ds
mov
cli
mov
jp
xor
pusha
mov
sbb
clc
stc
lock
loope
push
cmp
test
jbe
mov
cmpsb
push
test
into
mov
icebp
mov
sub
fcoms
les
test
lea
xor
idivb
cmpb
test
movsl
bound
test
xor
push
out
sti
push
test
ja
inc
mov
dec
mov
test
jmp
cld
push
outsb
cmpb
push
jle
cmp
add
ja
stc
pop
aam
rcrb
imul
cmp
outsl
mov
push
stc
sbb
jns
test
mov
xor
fwait
bound
test
filds
push
mov
dec
mov
push
mov
mov
js
test
xchg
xor
push
bound
aas
xchg
push
mov
jbe
in
movsb
cmp
loop
stc
mov
xor
fnstenv
stc
outsb
mov
mov
scas
inc
and
sub
xor
push
jmp
fadds
xchg
xor
lret
test
lahf
jg
jns
add
test
jno
ss
shl
lret
test
ljmp
andb
lods
sbb
test
rorb
or
jae
cmpl
test
fwait
pop
inc
inc
popa
push
cmp
jnp
bound
ja
mov
inc
cmpsb
mov
cmpsl
orl
mov
out
int
or
push
test
shll
pushf
mov
int3
call
cmp
mov
push
jo
jae
mov
call
mov
and
test
sbb
dec
mov
hlt
test
addr16
aaa
and
cmp
or
test
call
jne
test
xor
test
mov
or
daa
pushf
or
or
test
mov
push
inc
test
imul
icebp
and
test
dec
nop
insb
in
mov
je
and
xchg
xchg
mov
add
jbe
divb
mov
xorb
andl
mov
bswap
sbb
xchg
dec
push
std
and
pop
cld
enter
jle
into
outsl
bound
loope
sub
movsb
aad
subl
push
insb
sub
xchg
mov
test
mov
fbstp
jb
jecxz
cmp
dec
fldenv
mov
movsb
pop
mov
xor
into
movsb
xor
jl
push
fidivl
cmp
sub
mov
jp
fmull
fisubrs
ja
mov
push
mov
arpl
je
mov
andb
repz
and
in
pop
xchg
lds
test
push
lret
pop
dec
jne
int
leave
dec
gs
mov
fsubl
bound
sahf
fsub
add
test
mov
test
leave
pushf
lret
jne
sbb
stc
aas
mov
pop
ss
ret
cs
xchg
cmc
lret
mov
mov
push
lds
les
pop
test
xchg
adc
xchg
add
es
adc
arpl
mov
bnd
roll
les
outsl
cmp
dec
test
xor
inc
daa
ret
jns
pop
std
bound
mov
push
test
fiaddl
pushf
inc
pop
or
rep
decl
xchg
adc
andl
inc
mov
push
movl
cli
ljmp
btr
out
cmp
inc
cmc
adc
mov
shll
add
rcrl
pop
imul
jne
enter
int
mov
add
repnz
pop
test
adc
aad
test
idivb
negl
xchg
scas
jmp
test
adc
jo
or
mov
mov
xlat
out
or
sub
xchg
dec
rorb
and
mov
inc
xor
cmp
repnz
int3
add
mul
out
iret
lods
mov
test
pop
jb
rorl
adc
jbe
dec
arpl
mov
loopne
dec
inc
cmp
ret
fs
arpl
pop
mov
jecxz
fwait
adc
sti
jns
or
adc
clc
and
dec
and
jne
es
popa
sahf
inc
pop
or
incb
xor
leave
add
test
pop
insb
cltd
int
jo
dec
adc
push
cmp
aas
aam
or
add
mov
sti
pushf
pop
push
call
xchg
mov
xchg
test
les
fcoms
test
test
dec
jecxz
insb
aam
out
movsl
lahf
test
lcall
test
push
mov
mov
sub
and
mov
cwtl
sub
add
push
pop
xchg
mov
sbb
les
cmp
shlb
cmpsb
daa
fmuls
mov
push
in
lods
loopne
inc
jb
sbb
xchg
mov
insl
icebp
cmpsb
je
test
aas
or
lret
pop
enter
add
lods
cmc
aas
das
lcall
jecxz
or
scas
clc
sub
in
sbb
loop
mov
lret
cld
dec
test
xchg
fnstsw
jle
sub
cmpsl
fwait
and
xchg
jne
xlat
xchg
stos
test
cmc
mov
test
xchg
push
dec
lock
lret
xor
add
iret
sub
jo
int
jns
cmpsb
cwtl
pop
xchg
out
in
rclb
xchg
test
pushf
sarl
jle
jg
lea
push
mov
xor
rcll
sbb
push
insl
cli
movsb
jns
mov
int3
cmp
les
xor
cmp
stc
mov
arpl
adc
xchg
dec
mov
pop
out
dec
inc
movsl
mov
pop
out
fidivs
shll
or
insb
loop
adc
xchg
jmp
jmp
in
cmp
loopne
outsl
sbb
les
sbb
in
adc
inc
loope
test
lret
cmp
jp
mov
lods
dec
pop
inc
bound
loopne
fstps
dec
test
lret
add
inc
xchg
jnp
insb
test
push
leave
push
nop
and
test
sbb
pop
test
cli
outsb
dec
aas
pop
and
inc
notb
cmpsb
mov
mov
fdiv
outsb
sub
popf
pop
test
aaa
mov
mov
mov
cmp
jae
cmc
jne
sub
mov
and
push
or
fs
or
sbb
mov
into
jo
frstor
call
test
push
jle
sbb
xor
test
insb
outsb
xchg
push
push
fs
mov
call
outsl
pop
test
or
xlat
cltd
mov
pop
sub
popf
mov
mov
push
ljmp
jbe
and
loope
or
jb
divl
push
test
mov
mov
out
inc
loop
and
mov
test
sbb
push
xchg
test
dec
iret
or
xchg
in
adc
sub
xchg
icebp
xor
inc
sbb
idivb
int
push
in
and
mov
pop
pop
xor
lahf
loop
mov
push
fwait
leave
lret
in
mov
in
push
sahf
push
idivl
mov
push
or
mov
xor
mov
leave
pop
dec
lret
jle
mov
pop
mov
lea
stos
jle
dec
add
nop
jne
test
sar
mov
or
cmp
mov
inc
cmp
xchg
mov
test
cmp
sub
loop
test
xor
or
sbb
gs
into
movsb
xor
test
lods
cltd
dec
mov
arpl
andl
pop
pusha
xchg
dec
cs
aam
xlat
shr
mov
lcall
movsl
xor
sbb
test
rorb
aaa
jp
mov
test
bound
xor
fisttpl
loope
cmc
pop
mov
shl
mov
sahf
inc
adc
mov
dec
rcrl
jbe
push
jp
aaa
test
xor
int
pop
fucomi
icebp
fisttps
jle
repz
fsubrs
ljmp
adc
mov
out
test
outsb
leave
out
pop
lret
pop
adc
xchg
mov
or
sub
icebp
sub
mov
jne
mov
mov
jbe
out
sub
mov
inc
or
inc
fs
in
jns
dec
push
movsl
ja
shrl
dec
and
and
jmp
mov
and
data16
inc
sub
enter
test
sub
sub
xchg
subb
dec
push
pop
fidivl
test
push
into
jnp
and
sub
dec
clc
lret
ret
lret
sub
enter
jp
leavew
testb
gs
mov
test
push
sub
adc
cmp
push
adc
inc
arpl
sbb
inc
test
test
dec
sar
clc
in
pop
lcall
data16
mov
pop
test
mov
bound
mov
lcall
cli
out
lahf
incb
enter
or
cmp
sbb
push
int
jl
sbb
outsb
test
xchg
push
xchg
sub
bound
fmull
ficoml
rcl
test
jb
xor
test
sub
or
pop
loope
push
sti
push
mov
das
jnp
in
lret
mov
pop
fistpll
cmp
xchg
neg
ss
jo
and
data16
stc
lret
jg
and
repnz
jo
nop
dec
or
mov
aas
test
mov
daa
mov
lret
inc
mov
mov
mov
test
jle
dec
lock
xchg
je
adc
fs
inc
add
test
pop
movsl
loop
pop
jae
negb
std
or
data16
fildl
push
dec
push
pop
jo
movsb
jg
sbb
es
dec
arpl
andb
mov
test
dec
es
push
sub
sbb
jmp
pop
xchg
or
dec
jge
hlt
loope
insb
popf
cmp
fs
push
dec
add
pop
out
mov
int3
add
mov
stos
dec
das
pop
sub
aad
inc
arpl
dec
arpl
sub
push
cmpsb
cmp
sub
sub
repnz
pushf
inc
lds
jo
negl
test
faddl
mov
add
test
mov
mov
mov
inc
dec
cmpsl
mov
movsl
lahf
xchg
mov
jno
movsb
ja
sarl
and
les
mov
xchg
xlat
test
leave
cli
nop
pop
dec
and
sub
je
cmp
mov
das
inc
sti
addr16
cmc
into
push
and
out
ficoms
movsb
xchg
jne
subl
movsb
data16
and
mov
xchg
add
xor
imul
pop
and
jb
test
jbe
add
in
cli
adc
leave
pop
loop
icebp
mov
or
xchg
cmp
mov
test
sub
pop
clc
adc
inc
xor
call
sbb
xchg
mov
pop
test
or
cmpsb
sbb
test
jns
cltd
stos
fimull
dec
hlt
cmp
adc
xlat
test
lods
and
or
cli
ja
ds
or
cmpsb
mov
jae
pusha
cltd
test
enter
sahf
pushf
mov
mov
push
int
shll
out
push
inc
lahf
xchg
les
sub
std
jmp
or
sbb
push
cmp
xor
insb
imul
mov
sub
inc
cmpsl
adc
xchg
mov
jp
leave
pop
mov
ror
in
in
inc
pop
sbb
xchg
push
cltd
inc
cld
lret
loope
bound
popa
mov
push
push
or
add
push
dec
lock
sbb
cmp
cld
lods
push
fmull
mov
pushf
int3
mov
mov
test
aas
lret
enter
insb
test
sbb
xor
loop
pusha
jne
incb
test
cli
add
push
inc
sub
or
pop
movsl
test
jecxz
insb
aam
mov
mov
adc
push
addb
out
ror
jl
scas
test
or
test
addr16
jb
test
test
inc
lds
movsb
jge
jecxz
repnz
mov
clc
xchg
mov
add
int
lcall
pusha
out
daa
cmp
add
test
pop
mov
int
add
jno
scas
mov
push
test
inc
pop
fdivrl
call
dec
sub
add
dec
test
call
rcr
test
mov
mov
and
mov
xor
or
mov
add
adc
je
into
inc
xchg
mov
out
mov
push
mov
push
test
cld
fwait
rclb
xchg
jb
add
dec
aas
test
adc
stos
test
imul
mov
adc
loope
mov
pop
dec
ds
std
test
jmp
pop
sbb
in
test
lret
mov
push
xor
inc
out
mov
insb
push
dec
and
imul
test
mov
mov
xchg
int
dec
pop
test
daa
push
insb
sub
arpl
and
fs
test
lds
jno
cmpsl
out
cs
xchg
mov
sbb
and
test
push
inc
daa
or
mov
fmul
mov
mov
pushf
idivb
movsl
mov
push
inc
loop
mov
xor
push
mov
jne
imul
and
leave
push
lods
xchg
in
push
sbb
dec
rcrb
mov
out
es
outsl
push
mov
jp
fidivrs
shlb
test
dec
pop
pop
test
adc
push
in
cmp
xor
jge
push
lea
test
add
xchg
xchg
jecxz
icebp
movsb
add
pop
mov
push
fmull
push
decb
lds
mov
arpl
sbb
test
dec
fmuls
jbe
and
jne
dec
stos
and
inc
lret
movsl
aam
das
stc
mov
test
inc
mov
push
test
stc
lock
cmp
xchg
rol
xchg
add
pop
clc
test
xor
mov
iret
stos
outsl
inc
mov
arpl
pop
xchg
mov
mov
fs
insl
mov
fiaddl
sti
jne
arpl
mov
loop
dec
and
enter
push
mul
out
lcall
jb
stc
dec
sbb
mov
mov
in
add
cltd
psubsb
sub
sub
xchg
aas
imul
cs
lcall
mov
stos
pop
ljmp
test
cmp
testb
sub
mov
jl
enter
pop
push
push
cs
mov
add
es
pop
jecxz
fistl
jmp
jge
inc
orb
js
mov
nop
mov
xor
adc
scas
xor
jg
dec
lods
test
jo
ja
cltd
inc
inc
ss
push
sahf
test
sub
inc
xchg
cmpsl
mov
pop
test
mov
add
dec
testb
in
pusha
fiadds
test
rorb
sub
and
and
cmp
jb
push
loopne
jle
push
stos
inc
lret
dec
lods
test
adc
mov
aas
sub
inc
jne
arpl
push
leave
lds
xor
stc
lods
push
hlt
and
dec
push
test
test
in
fadds
mov
bound
test
jp
sub
movsl
rolb
push
leave
movsb
inc
lcall
dec
cwtl
mov
pop
orl
inc
data16
lret
test
pop
pushf
dec
das
sub
dec
fldenv
cmp
adc
movsb
leave
and
lds
rorb
and
mov
icebp
cmp
test
ljmp
fidivrl
mov
sub
xchg
decl
mov
ret
lret
sub
daa
sbb
aad
inc
dec
mov
inc
dec
pop
in
cmp
xchg
inc
loop
mov
shll
test
and
mov
test
in
mov
jmp
stos
fxch
mov
test
mov
cmc
push
push
pop
push
in
ds
pushf
mov
sub
enter
pop
mov
imul
dec
mov
add
inc
out
ja
adc
xor
test
sub
test
aad
sub
les
and
dec
xrelease
pop
cmp
das
mov
sarl
pop
out
dec
or
movsb
mov
pop
jne
mov
idiv
arpl
xor
les
fcoms
xor
pusha
mov
test
mov
dec
flds
pushf
mov
and
mov
popa
es
or
outsl
and
test
cs
fimull
pop
sub
and
das
sub
mov
add
push
test
cmp
lds
aam
add
jb
test
jmp
xchg
insb
mov
fs
test
dec
push
rcl
sub
xor
mov
std
push
mov
int3
mov
mov
test
adc
bound
sbb
fisubs
test
jge
js
test
push
lds
test
jmp
xor
jno
stos
dec
mov
add
test
ja
ljmp
inc
test
lds
mov
ds
cmp
and
lcall
cmpsb
hlt
jmp
dec
mov
sbb
testl
xchg
inc
mov
or
xor
in
sub
std
pop
mov
jmp
add
sub
jne
fbld
les
test
les
jge
dec
mov
xor
mov
or
enter
add
idivl
and
sbb
or
dec
lret
and
mov
in
js
and
and
pop
in
bound
popa
cmp
test
inc
push
pop
fmuls
sub
pop
mov
lret
jnp
cmp
js
or
jmp
pop
push
pop
or
test
push
mov
enter
mov
fiadds
fbstp
in
das
mov
insb
sub
pop
adc
push
test
test
repz
xor
push
sub
std
addr16
test
notl
test
mov
into
sbb
mov
test
out
lods
jbe
mov
xchg
adc
or
inc
fisttpl
or
cwtl
xchg
jae
sub
shll
pop
icebp
test
push
push
dec
xchg
push
inc
mov
push
imul
movsb
or
cmc
and
adc
mov
mov
inc
test
ret
mov
in
movsl
leave
arpl
or
cmp
call
testb
xchg
cld
xchg
fnstenv
test
inc
xor
fsubrs
test
mov
test
adc
or
lds
aad
in
mov
ss
or
movsb
fisubl
cmp
outsb
test
sub
xor
arpl
sbb
mov
bswap
and
inc
add
jl
jecxz
xchg
in
mov
jne
mov
test
pop
iret
adcl
test
sub
fwait
dec
jg
or
jp
ror
cmp
mov
pop
add
xrelease
cld
adc
lock
stc
and
test
filds
test
lea
or
leave
test
adc
fisubl
cmpsl
sbb
faddl
adc
movsl
mov
cli
inc
aaa
or
test
inc
repz
pop
pop
test
cs
cwtl
test
or
leave
cmp
mov
add
inc
cmpsl
mov
mov
jns
ret
cs
sub
lds
stos
mov
in
and
xchg
enter
test
in
push
cmp
into
in
int3
notb
lock
not
imul
push
push
mov
sbb
aaa
mov
in
mov
lock
testb
rolb
jns
test
pushf
arpl
dec
test
adc
pop
test
xchg
xchg
loope
push
mov
dec
neg
add
popl
push
test
mov
jl
mov
aaa
cmp
push
inc
es
xchg
push
test
inc
sub
xor
add
push
jbe
loop
cmpsl
bound
mov
lods
fstps
sub
jne
pop
pop
hlt
sbb
ret
test
dec
fucomip
test
adc
stos
shl
cmpsl
jns
scas
push
arpl
lock
test
rcrb
test
jbe
sbbl
or
push
cmp
xchg
pop
adc
stos
inc
enter
adcb
insl
inc
dec
insb
push
jecxz
mov
mov
mov
cmpl
mov
movsl
ret
mov
pop
or
outsl
sbb
xchg
test
test
add
insl
mov
test
pushf
std
mov
pop
or
adc
dec
inc
jecxz
fiaddl
xchg
xchg
mov
dec
xorb
test
xchg
out
mov
pusha
mov
push
xchg
stc
xor
jp
inc
or
push
push
dec
mov
mov
fimull
mov
mov
xor
scas
push
out
mov
lods
test
mov
dec
lret
movsb
or
jp
pop
xchg
test
test
jle
fcmovnbe
sub
fdivp
cmp
int
mov
dec
xor
adc
fisubl
shll
je
mov
divb
cld
pushf
frstor
jb
lods
ficompl
in
fstpt
lds
ret
flds
jl
xor
adc
sub
fwait
aam
lea
mov
sti
sub
aam
and
mov
dec
and
test
std
dec
popa
dec
repz
mov
xchg
xor
cs
test
sub
xor
cmp
insl
or
jnp
test
push
pop
cmp
add
addb
dec
dec
movsb
scas
inc
call
mov
test
rcl
add
push
sub
negl
in
test
and
ljmp
iret
cltd
test
mov
lcall
data16
loope
xchg
test
push
sahf
cmp
mov
mov
dec
add
add
stc
mov
mov
shrl
dec
xchg
mov
movsb
pushf
int3
cld
or
fstpt
clc
lret
arpl
popa
repnz
jnp
movl
mov
cli
test
jo
and
outsl
bnd
sbb
or
add
push
out
fwait
stos
jo
test
mov
out
jne
cmpsb
imul
flds
mov
ss
mov
lock
xor
mov
incl
pushf
rorb
and
pop
adc
ret
mov
enter
dec
scas
decb
lock
inc
xor
loop
pop
fistps
mov
cwtl
nop
mov
add
enter
sbb
mov
repz
movsl
call
test
sahf
pop
push
sbb
inc
enter
mov
mov
ja
mov
jecxz
scas
push
test
icebp
lock
dec
mov
xchg
jge
inc
xor
pop
xor
mov
mov
jmp
push
sbb
in
stc
mov
sub
pop
cli
test
mov
and
lcall
sub
mov
mov
jnp
in
lcall
pop
push
sub
pop
pop
push
or
mov
out
bsr
movsb
ror
cmp
fabs
cwtl
cmpsl
xchg
arpl
fisttpll
fwait
sahf
lcall
xlat
test
cmp
test
and
lret
mov
repnz
mov
dec
push
and
sub
cmp
xor
mov
xor
mov
outsb
and
and
ja
test
xor
insb
mov
mov
sub
mov
jno
and
lock
fs
mov
stc
flds
mov
test
xchg
stos
mov
mov
xor
xor
popa
pop
adcb
arpl
or
repnz
sbb
fldcw
inc
cmp
add
pop
adc
test
ret
pop
cmp
push
cmp
movsl
call
jb
xchg
push
repz
mov
push
arpl
daa
mov
mov
cltd
push
fbstp
add
xor
das
push
in
xchg
mov
call
mov
adc
and
mov
or
sbb
xchg
mov
out
and
movsb
dec
pop
loop
bound
jae
test
mov
xor
or
and
int3
or
test
cli
xchg
scas
inc
dec
movsb
lcall
cmp
popl
mov
iret
out
mov
les
out
mov
insb
test
push
sub
test
movsl
cld
bound
cmpsb
lret
sub
and
addl
jl
or
aas
int3
xor
ja
test
push
leave
icebp
je
test
mov
lcall
movsl
scas
mov
cmpb
aam
test
cmp
and
les
test
push
pop
dec
repnz
cmp
sub
test
xor
xor
in
insl
sbb
add
test
movsb
test
sbb
stos
or
lds
loop
mov
cmp
cmp
xchg
mov
and
cmc
lods
pop
push
xchg
pop
mov
lea
je
out
test
or
mov
test
and
ret
sbb
test
mov
popa
test
insb
and
cmp
push
pop
pusha
add
adc
jle
or
pop
ret
test
sbb
push
and
and
pusha
mov
sub
inc
daa
cmp
fdivl
lahf
test
arpl
sub
sub
ret
aaa
test
mov
xor
inc
inc
jb
lds
push
test
imul
cmp
or
mov
test
in
pop
xorl
push
adc
or
cli
sbb
sarb
xchg
stc
fcmovnbe
push
test
mov
cmp
test
imul
xchg
es
shll
mov
test
xor
inc
add
popa
test
and
dec
scas
mov
push
adc
xchg
jmp
outsb
mov
dec
data16
mov
mov
mov
push
test
je
cmp
or
xchg
les
lret
inc
std
push
imul
and
ja
mov
out
ds
mov
add
or
mov
push
inc
inc
out
mov
jae
into
pop
mov
test
xchg
cwtl
pop
sbb
cmp
xor
cmp
dec
sbb
fs
adc
sub
jno
add
xor
cmpsl
mov
push
mov
loop
cmp
test
in
imul
add
adc
mov
int
testl
and
rorb
push
adc
fwait
lcall
xor
test
mov
hlt
popa
sbb
inc
roll
clc
stc
outsl
sbb
push
out
sarl
xchg
cmp
cmpsb
mov
pop
in
dec
pop
mov
std
dec
test
popfw
cmp
imul
cmpsb
and
in
jp
lds
ja
test
addr16
mov
pop
adc
adc
pop
outsb
test
fnstcw
xor
sti
arpl
push
lahf
mov
xor
inc
movsb
and
mov
sub
pop
cmc
fwait
or
in
xor
cmp
mov
les
ja
test
shrl
and
xchg
cmp
loopne
jmp
dec
cmpsb
or
inc
adc
mov
xchg
das
sahf
inc
push
xchg
bound
imul
lret
fsts
fwait
cmp
movsb
adc
inc
adc
loope
test
adcl
ss
ret
fucom
mov
sarl
in
dec
outsl
cwtl
mov
inc
loop
and
mov
shll
push
insb
sub
push
jb
in
repnz
fistpl
mov
push
lcall
inc
cmp
aad
int3
mov
cmp
or
test
pop
icebp
sub
in
aaa
inc
cmp
jo
sti
push
leave
mov
scas
test
xorb
jae
mov
lcall
cmp
fwait
test
jmp
mov
push
and
subb
std
test
or
lret
inc
adc
lahf
sub
fldenv
sub
push
insb
test
into
mov
fdiv
mov
jns
lret
call
lods
test
or
aas
pop
cmp
add
and
test
mov
pop
movsb
push
inc
push
cmpsb
dec
shlb
sub
mov
lds
aas
pop
test
pushl
dec
ja
and
scas
cmp
jmp
push
enter
xchg
div
aaa
lea
fildll
fnstsw
sub
add
jecxz
out
inc
cld
test
ja
sub
pop
arpl
andb
inc
arpl
aas
pop
push
dec
sahf
mov
orl
aad
jb
test
mov
cmc
add
push
test
and
xlat
jmp
dec
aam
mov
mull
test
inc
jmp
ret
test
jne
lea
mov
enter
test
je
bound
cwtl
jle
mov
mov
or
aaa
sub
leave
inc
push
dec
stc
decl
cld
jmp
stos
cmp
arpl
bound
sbb
sub
std
test
dec
mov
sub
test
mov
jmp
in
leave
push
stc
sub
lret
mov
mov
cli
sub
jbe
aas
mov
pop
mov
fs
shlb
xchg
cmpsb
add
sub
int
and
mov
test
cmp
ret
mov
arpl
fcomps
fimull
in
mov
jecxz
icebp
into
lea
imul
pop
test
add
test
outsl
and
test
int
push
cs
dec
lods
movsb
loopne
xchg
movsl
out
test
test
aad
gs
inc
jbe
mov
pop
dec
mov
in
test
jbe
jg
cmp
or
fiaddl
les
and
pop
imul
mov
lea
jg
out
push
test
nop
and
jecxz
push
cwtl
sub
jl
insl
cmp
adc
cs
mov
mul
mov
insb
fldl
mov
mov
jns
test
xor
push
mov
xchg
arpl
roll
sbb
adcb
test
sbb
push
aaa
pop
mov
ret
jnp
lret
mov
cltd
xchg
pusha
ljmp
jmp
mov
test
sti
cmpsl
jb
mov
push
test
lock
sub
xor
sub
xor
nop
xor
sub
push
dec
xchg
push
out
bound
in
mov
arpl
test
jecxz
jmp
fldcw
mov
test
cmc
xor
xchg
lcall
cmp
pop
sub
in
lods
add
mov
xlat
mov
push
adc
pop
or
push
clc
andb
sub
divb
add
repnz
or
push
xchg
mov
jbe
roll
jnp
sbb
test
fisubrl
xchg
test
shll
push
test
mov
mov
mov
xchg
enter
dec
scas
xchg
mov
sbb
sub
sub
pushf
dec
pop
mov
jle
test
lds
push
in
icebp
arpl
test
jae
aas
jg
add
lods
xor
add
fistps
pop
bound
or
loope
and
xor
jg
imul
dec
mov
sub
les
xor
mov
in
pop
sbb
lods
push
sti
jb
add
and
and
test
inc
push
cmp
test
mov
sbb
add
fstl
dec
cmpb
into
daa
rcrl
mov
push
lret
mov
decl
insl
shll
pop
and
dec
mov
jp
cmpsb
mov
sub
add
jl
xchg
mov
inc
mov
jne
jb
in
mov
mov
push
xor
push
test
xchg
popa
inc
xchg
cmp
ljmp
mov
sbb
in
jg
pusha
loopne
pushf
mov
push
xor
push
test
adc
add
mov
fnstenv
leave
mov
aas
fisubl
movsb
mov
rorb
adc
bound
mov
mov
xor
push
test
adc
sub
mov
pop
xchg
sub
in
test
push
ret
dec
lahf
adc
inc
xor
adc
dec
mov
adc
jg
test
shll
xor
mov
xlat
jecxz
in
pop
test
and
cmp
adc
rorl
pop
add
and
cli
sub
mov
jno
sub
mov
cltd
pop
out
leave
dec
arpl
cmp
shlb
lret
cmpsl
mov
test
or
mov
pop
repz
sub
mov
and
inc
xor
leave
test
adc
xchg
mov
push
hlt
movsl
test
iret
aas
xor
jae
mov
js
sub
push
sbb
mov
jg
dec
inc
xchg
xchg
sbb
addr16
xchg
out
mov
into
mov
jb
push
mov
push
dec
cltd
and
test
inc
fs
push
push
mov
jns
aas
repnz
and
mov
popf
rclb
sbb
dec
cmp
pop
test
enter
call
movsb
inc
push
mov
movsb
lods
lahf
daa
sarl
mov
shl
pop
daa
jno
test
bound
movsb
popa
inc
jge
cmpb
subb
inc
push
sub
imul
test
in
popf
nop
lret
cmp
das
mov
arpl
subb
cwtl
xchg
test
xlat
cmp
stc
movsb
push
test
mov
pop
jmp
ja
mov
leave
test
mov
and
or
int
or
daa
loopne
stos
cmpsl
movsb
jecxz
test
or
or
pop
push
movsb
out
mov
enter
pop
cmp
mov
mov
jo
lods
mov
dec
es
sbb
clc
pop
sub
pusha
mov
in
cmp
movsb
mov
lds
fwait
dec
inc
pop
inc
mov
mov
xor
aad
test
rcll
inc
movl
in
mov
or
lret
push
push
pop
adc
push
and
cmp
fwait
bound
sub
pop
notb
dec
push
pop
outsb
dec
sub
test
sub
test
add
lds
and
es
ret
adc
inc
out
mov
mov
and
mov
sub
repz
lahf
add
inc
lds
jmp
pop
lret
xchg
stos
jbe
cwtl
out
push
jmp
loopne
mov
in
scas
cld
stc
sub
test
mov
test
pop
xchg
jle
fdivrs
in
sbb
push
jp
pushf
js
test
dec
fldenv
adc
cwtl
mov
std
inc
test
jmp
jns
test
adc
ss
dec
cmp
and
test
ficomps
movsb
and
popf
repz
sti
insb
jecxz
jl
test
cmp
mov
gs
cmpl
fimull
and
mov
dec
dec
dec
inc
scas
in
test
negb
xchg
mov
mov
cld
push
mov
test
stos
and
ljmp
ljmp
iret
inc
mov
mov
or
jmp
push
dec
out
mov
and
sub
test
xor
addr16
mov
test
inc
adc
leave
pop
pop
movsl
sbb
imul
sahf
and
shlb
sub
inc
xchg
test
jecxz
ret
test
xchg
push
jno
insl
movsb
imul
fcmovb
mov
mov
rcll
daa
sub
fistl
mov
cmc
add
subps
sub
dec
std
fmul
adc
mov
push
xchg
sub
fnstcw
xor
or
push
aad
test
pop
add
mov
test
icebp
testl
iret
data16
ret
dec
mov
pop
test
jno
test
je
imul
inc
push
test
jmp
ret
sbb
sbb
push
ffree
jae
mov
repnz
movsb
fidivl
cmpsl
negb
test
pusha
fmulp
or
jecxz
sub
jnp
jp
test
addr16
bnd
push
sub
dec
or
xor
int3
xchg
cmp
imul
idiv
lahf
xchg
test
pop
leave
push
clc
push
hlt
mov
mov
xor
mov
add
test
aam
mov
leave
test
enter
xchg
test
push
jmp
test
jno
int3
test
dec
call
popf
loope
test
test
sub
ficompl
fsts
fcmovnb
scas
cmp
dec
inc
je
adc
mov
and
inc
mov
mov
subb
test
xchg
push
mov
les
dec
outsl
jmp
icebp
mov
enter
sub
mov
pop
das
into
mov
jbe
pop
inc
mov
mov
test
sbb
in
fcmovnb
test
gs
loopne
xchg
sub
test
sar
stos
into
test
popf
fcmovnb
adc
test
mov
cwtl
push
pop
mov
pop
mov
jmp
sti
dec
pop
fstpl
rorl
xchg
andl
mov
hlt
inc
mov
ret
lds
icebp
into
enter
jbe
daa
or
and
movsl
test
xor
sbb
dec
out
dec
xchg
flds
es
lds
loopne
push
xchg
out
push
lods
stc
loope
lahf
test
add
daa
fnstcw
sub
dec
test
dec
clc
mov
jb
jmp
dec
in
sbb
loopne
cmp
test
xor
arpl
rclb
arpl
test
dec
mov
test
daa
pop
sub
or
test
repnz
mov
das
add
sub
sbb
test
rolb
push
lds
pop
add
popa
jnp
cwtl
shll
movsb
test
mov
push
mov
test
adc
sbb
testl
bound
mov
jb
fists
cmc
inc
aad
mov
test
jo
aaa
in
pop
test
xor
pop
jbe
push
jmp
inc
ret
mov
cmpsl
xor
and
lods
std
mov
arpl
bound
repnz
sub
mov
js
jae
sbb
xchg
in
push
dec
mov
enter
inc
jmp
mov
dec
in
into
mov
pushf
ja
add
mov
or
repnz
in
adc
mov
or
cmp
xchg
pushf
mov
in
push
mov
jg
adc
insb
out
cmpsl
or
outsb
lcall
mov
mov
test
pop
fdivrl
cmc
push
mov
aas
add
pop
test
iret
sbb
mov
sbb
jmp
and
sbb
test
push
mov
stos
inc
cld
inc
scas
idivl
insb
les
adc
mov
test
sub
popf
dec
test
cli
and
lods
inc
in
leave
mov
fisubl
shl
jno
cli
sub
movsl
pop
and
js
mov
popf
or
test
ljmp
test
std
jg
sub
test
out
cmp
aas
movsl
mov
adc
push
ret
cmp
popf
imul
daa
lret
sbb
xchg
sbb
push
in
sub
cltd
aam
ja
sub
rolb
testl
xor
cli
mov
std
stos
scas
jmp
bound
mov
rcrb
cmp
rcrb
mov
and
cwtl
xor
push
sbb
in
jp
jmp
ja
and
test
scas
sar
div
out
test
add
dec
add
lret
test
sbb
cltd
xchg
bound
fists
pop
mov
mov
lret
leave
push
loope
sub
inc
sub
fstp
inc
pop
je
mov
mov
xorl
dec
or
fsubp
add
inc
imul
pop
arpl
dec
lods
loop
inc
push
lcall
out
hlt
repz
push
and
mov
int3
rorl
mov
test
mov
mov
adc
sbb
movd
test
ficompl
inc
test
loop
push
and
sbb
addr16
pop
mov
ss
and
mov
leave
xchg
fmuls
notb
inc
jmp
loope
mov
sub
jle
mov
pop
or
mov
test
mov
leave
cmc
inc
sub
jg
aad
add
je
dec
mov
gs
pop
loopne
jmp
std
fs
pop
gs
out
repz
bound
stc
clc
mov
and
in
adc
push
shlb
cmpsl
sub
or
jns
push
xchg
lret
inc
arpl
loope
test
call
or
sub
pop
aad
out
jmp
je
mov
xor
adc
jnp
push
push
les
addl
dec
and
lret
mov
and
loop
inc
rorl
movsb
jo
inc
sbb
fnstsw
mov
and
jne
add
ljmp
enter
or
mov
mov
add
ficomps
inc
mov
dec
sub
dec
lret
insl
push
mov
fcmovne
incb
mov
jnp
std
jmp
test
xlat
inc
cmpsl
mov
sub
in
test
jge
and
jns
test
int
dec
xor
test
sub
imul
mov
cli
fsubs
lods
movsb
negb
push
xor
sub
pop
xchg
imul
dec
sbb
pop
loope
scas
ja
cmpsb
movsl
mov
pop
or
ror
mov
inc
cmp
repnz
or
jp
add
bswap
mov
test
mov
push
fidivrs
inc
pop
mov
test
adc
mov
aad
mov
mov
dec
shrl
test
leave
cli
adc
inc
jbe
pop
fcmovbe
mov
and
lods
cs
insb
jl
imul
or
push
mov
sbb
add
cmpsl
jmp
mov
faddl
popf
jns
test
repz
jne
inc
imulb
movsl
lahf
add
adc
out
lds
mov
vpmacsdql
mov
push
enter
shlb
add
je
mov
mov
xchg
and
popf
mov
icebp
xchg
test
lods
in
std
inc
jmp
jp
lcall
mov
mov
fidivrs
movsb
pop
lret
push
cmp
and
in
movsb
int3
mov
test
fsts
imul
pop
cltd
movsb
mov
adc
and
cmp
stos
test
fisubs
test
or
loop
mov
pop
and
lret
sub
bound
sub
cmp
xchg
test
popa
arpl
mov
test
clc
ficoms
sub
cmp
jo
mov
pop
xchg
dec
sub
mov
mov
fldl
xchg
testb
fisubl
mov
mov
sub
jbe
jg
cltd
mull
add
lock
js
xor
push
mov
loopne
mov
sub
lcall
imul
push
push
add
movsl
aas
test
out
push
ja
ss
mov
mov
data16
cmc
xor
sbb
arpl
ror
xor
test
movsb
sbb
pop
in
fisubl
mov
sbb
outsb
cltd
cmp
mov
mov
test
ret
xchg
fdivs
mov
pop
inc
mov
xchg
or
aam
and
ss
test
cltd
dec
cmp
lret
vmwrite
mov
push
jo
adc
inc
mov
mov
fcoms
fisubs
test
adc
pop
dec
push
and
mov
fsubs
jnp
sbb
inc
pop
test
lods
push
int
stos
dec
daa
sub
sub
stos
jb
dec
xor
repnz
dec
test
pushf
and
test
jno
std
fsincos
lret
cmp
xor
inc
cmp
mov
outsl
cmpsl
cli
and
pop
andl
stc
xor
js
test
pop
mov
call
xor
inc
sub
in
imul
mov
mov
add
xor
stos
inc
push
push
push
inc
cmp
test
add
lcall
repnz
pop
test
cmp
or
push
adc
or
cmp
movsb
lret
orb
xor
test
mov
cld
dec
push
pushf
test
dec
push
or
test
repnz
adc
pop
add
add
stc
das
push
cmp
push
test
inc
or
dec
pusha
clc
das
push
mov
push
popf
jp
adc
and
es
repnz
push
sub
iret
pop
jg
xchg
and
pop
shlb
sub
test
mov
imul
in
cmpb
clc
pop
push
test
sahf
sub
rol
test
test
push
es
movsb
jle
push
loope
cltd
enter
mov
pop
test
repnz
cld
les
adc
xlat
lods
mov
sbb
lahf
xchg
mov
fsubrp
mov
js
divps
sub
cmp
fldl
mov
ret
adc
test
mov
call
test
cmp
cmp
sub
pop
roll
test
rclb
add
mov
xor
and
inc
movsb
push
icebp
mov
fwait
dec
or
jnp
jmp
xor
lcall
int3
leave
or
mov
inc
mov
jne
dec
test
mov
jmp
fldenv
lds
gs
sub
popa
and
mov
push
in
mov
cmp
xlat
test
xchg
push
lods
fwait
adc
aad
xchg
mov
xchg
xchg
test
xchg
sbb
sbb
adc
mov
inc
test
pop
pop
ret
stos
push
int3
test
xor
mov
leave
movsb
pushf
pop
mov
movsl
jl
mov
sub
test
in
call
test
mov
imulb
push
push
mov
loope
push
aam
ret
cmpsb
pop
sbb
test
jbe
pop
movsl
push
test
mov
popa
nop
test
mov
add
std
daa
test
fsubs
ret
scas
sub
inc
lret
mov
inc
sub
mov
ffreep
jle
test
xor
mov
cmp
inc
mov
sub
add
loop
sbb
fsubs
cmp
mov
sbb
dec
test
je
ret
jge
test
out
push
and
inc
in
dec
mov
pop
stos
notb
in
fisubrl
jmp
lcall
sbb
sub
stc
push
adc
arpl
sub
ret
pop
rcll
mov
clc
dec
test
add
fdivp
push
xor
test
pop
pop
sbb
imul
and
dec
and
sahf
push
push
test
fwait
pushf
inc
pop
mov
push
es
xchg
test
popf
fsubs
mov
push
jmp
faddl
add
out
lods
sbb
daa
jo
pushf
lock
adc
mov
les
int3
testl
je
in
clc
lcall
dec
adc
aaa
mov
cmp
xchg
test
xor
ret
push
mov
mov
mov
and
mov
xchg
out
add
test
or
xchg
pusha
insb
test
rorb
fimull
cmpsb
test
push
pop
icebp
push
mov
andb
xchg
fsts
inc
and
mov
inc
inc
push
or
mov
out
or
push
and
mov
imul
xor
pop
test
and
test
jl
mov
test
mov
inc
jbe
lret
jmp
add
insl
aaa
idiv
mov
xor
sub
jae
sub
dec
stos
movsb
jmp
out
or
in
cmpsb
or
jl
outsb
cmc
repnz
mov
fdivrs
sbb
xchg
mov
orl
jecxz
fcoms
out
inc
xor
shl
loope
cmpsl
mov
push
cmp
lods
pop
outsb
add
xchg
cmp
lds
dec
cmpsb
push
jae
sub
mov
out
out
test
cld
jle
cmpsl
push
mov
sub
outsb
enter
pop
imulb
cli
leave
daa
xor
adc
test
pop
add
or
jbe
int3
mov
sbb
dec
loope
lahf
in
jns
xchg
mov
test
fcmovu
push
mov
movsb
je
sub
mov
mov
cld
pop
lahf
xchg
or
mov
fsin
test
mov
inc
enter
mov
push
lret
cwtl
rclb
scas
push
hlt
cmp
pop
jecxz
cld
sub
mov
cmpsb
xchg
in
je
loope
les
mov
and
push
arpl
mov
inc
les
mov
adc
loopne
out
test
lods
sub
lahf
adc
in
pop
aad
push
or
adc
fmulp
cli
adc
mov
insl
xor
incl
push
mov
test
mov
lods
test
loopne
es
clc
shr
out
fwait
pop
lret
les
lds
popa
loopne
sbbl
testb
lods
les
push
sahf
lahf
je
cmpsb
rolb
sti
mov
mov
pop
lahf
test
test
jmp
in
cmp
mov
int3
dec
out
inc
mov
pushf
inc
movb
inc
cmp
and
push
ret
mov
test
dec
inc
imul
xchg
movsb
sub
cmp
test
mov
test
xor
test
test
mov
test
lds
sbb
scas
ss
in
sub
pop
iret
or
and
mov
pusha
lods
mov
mov
jne
xchg
adc
inc
add
pop
xor
popf
mov
xchg
pop
testl
cmp
es
aaa
lods
popa
push
test
jbe
ds
pop
test
jle
jp
jmp
mov
bound
in
std
imul
out
out
test
mov
loop
or
inc
test
lock
test
out
clc
sbb
push
test
test
cli
mov
stos
movsb
mov
sbb
stos
negb
imul
pushf
mov
cmpsl
dec
stc
test
mov
xchg
movsb
xchg
stos
dec
inc
mov
ret
cmp
into
fmul
mov
adc
xchg
mov
dec
insb
or
cld
lods
xchg
jns
jecxz
sbb
jl
xchg
or
lret
inc
repz
addl
cmp
call
add
movsb
icebp
or
pop
loopne
jecxz
cmpsb
sub
mov
push
sbb
loope
mov
inc
rolb
xchg
leave
add
push
or
dec
jl
push
stos
test
sbb
xor
push
sbb
mov
enter
out
imull
repz
xor
scas
scas
popf
adc
xor
add
sbb
mov
and
mov
arpl
fisubl
outsb
xchg
sbbb
out
sub
leave
ljmp
out
test
lahf
icebp
out
sub
jne
inc
xor
or
xor
and
orl
xor
insl
jmp
add
mov
mov
cmp
xlat
cmp
test
xchg
addl
xchg
sub
addr16
addb
pop
jg
addb
push
mov
cmpsl
inc
mov
mov
in
mov
test
cld
insb
pop
inc
test
inc
push
std
test
adc
icebp
notl
arpl
js
cmp
test
and
outsl
inc
jle
mov
or
js
sbb
movsb
sbb
sub
daa
mov
add
and
and
mov
xor
jp
mov
adc
mov
movsb
and
or
mov
adc
dec
pop
inc
dec
inc
xchg
in
popa
test
mov
pop
test
int
pop
andb
je
inc
push
push
jo
push
cs
jno
mov
stc
mov
add
pushf
fadds
xchg
test
in
add
sbb
bound
mov
push
lods
mov
push
mov
push
sbb
jmp
in
mov
xchg
cwtl
daa
leave
lret
xchg
mov
call
loop
arpl
adc
xor
bound
ja
cmp
push
dec
add
fcomp
sub
push
mov
out
dec
cmpsb
pop
test
and
lea
mov
leave
test
pusha
cmpsl
sbb
jae
int
nop
xor
jle
in
rorb
push
lea
push
sti
jno
mov
movsb
mov
pushl
jg
add
mov
mov
mov
out
fistpll
jno
in
mov
push
movsb
jle
push
repz
imul
pop
cmp
pop
sub
repnz
loop
fstpt
pushf
dec
push
mov
jmp
and
in
cli
fs
lods
stc
mov
cltd
fisubs
scas
mov
jmp
cmpsb
jae
test
fmul
dec
push
test
dec
mov
add
cli
mov
sub
incl
xchg
mov
jne
cwtl
push
pop
pop
test
jbe
push
lret
test
inc
dec
xor
popa
add
sbb
and
loope
adc
test
je
and
aam
pop
test
out
ss
sbb
sub
adc
rcrl
nop
add
cmp
sub
test
int3
mov
inc
stc
xchg
test
roll
sub
shld
add
sub
adc
orl
mov
popf
mov
out
andl
test
sbb
dec
cmp
adc
lret
or
insl
mov
sbb
scas
aad
dec
cld
or
cli
les
xchg
loop
mov
leave
jp
pop
cltd
xor
aaa
add
sahf
test
jnp
out
shrb
stos
xchg
dec
pop
sbb
daa
inc
enter
dec
mov
and
mov
xchg
mov
arpl
mov
in
or
arpl
inc
pop
popa
sarb
xor
lret
movsb
or
repnz
cmp
cmpsl
mov
push
dec
dec
dec
test
leave
sbb
test
repz
cmp
aaa
movsl
push
mov
test
jp
dec
inc
test
or
rcrb
ret
dec
mov
dec
mov
pop
add
fdivl
mov
cmp
stos
sub
fcmovnbe
xor
cmp
mov
sub
mov
repnz
movsl
out
push
or
sbb
add
aaa
pop
test
mov
pop
inc
dec
push
les
sarb
mov
insb
cli
mov
lods
inc
test
push
push
test
dec
mov
popf
or
cmp
loop
adc
test
jecxz
cmp
in
cmp
push
or
in
test
imul
loopne
mov
mov
scas
js
flds
inc
in
out
xor
dec
cld
adc
xchg
aam
movsl
mov
mov
pushf
xchg
adc
cwtl
sub
mov
pop
dec
or
stc
mov
push
sub
and
mov
or
and
push
mov
mov
movsb
fildll
sbb
ftst
push
xchg
mov
fisubrl
shrl
mov
jo
adc
mov
jp
lds
dec
lret
mov
mull
test
in
xchg
loop
repnz
and
xchg
mov
in
cmp
sub
mov
test
xchg
incl
mov
mov
push
pop
ret
test
dec
xchg
clc
cli
shrl
mov
icebp
mov
test
jb
loopne
mov
test
inc
fbstp
cmpsb
inc
sbb
pop
mov
aam
sbb
adc
sbb
mov
movsb
mov
cmp
stc
sub
shl
jne
push
mov
in
push
xor
test
and
pop
cmpsb
sub
jbe
gs
mov
xor
xchg
dec
jb
nop
dec
lret
sbb
xlat
push
mov
enter
stos
mov
ret
xchg
test
ret
mov
aam
loope
rcrb
xchg
ret
dec
cmp
mov
mov
shl
mov
mov
mov
and
ficoml
lea
loopne
inc
lds
jmp
dec
jo
mov
push
inc
push
popf
fnsave
sahf
fiadds
dec
cmpb
test
dec
pop
loope
xorl
int3
test
mov
pop
cmp
les
pop
roll
lret
movsb
inc
sub
jmp
iret
or
mov
fbld
push
and
cmp
lcall
mov
les
cmp
loope
pop
lods
jecxz
mov
sub
test
add
lahf
gs
fldl
xchg
xchg
lea
push
hlt
pop
loope
in
mov
movsl
xchg
movsb
mov
bound
fidivs
jp
pop
adc
dec
test
jno
into
insb
in
stos
fisubs
and
test
mov
imulb
dec
xchg
test
sub
push
cmp
ret
xchg
inc
or
sub
orl
cltd
xchg
inc
scas
test
es
push
push
lds
test
jecxz
push
test
notb
ror
arpl
stos
xlat
mov
cwtl
pop
roll
cltd
lret
cmp
test
mov
int3
test
sbb
popa
dec
popf
pushf
or
cmp
loop
aas
in
add
add
test
xor
insl
fadds
test
iret
pushw
adc
je
movsb
cld
leave
add
imul
fisttpl
push
mov
orb
call
dec
cmp
mov
sub
cmp
pop
test
cwtl
vmovaps
mov
dec
add
mov
lcall
cmp
movups
movsl
fdivr
push
mov
push
jge
enter
test
or
adc
cmp
loopne
sub
and
jge
test
fld
adc
cld
and
lea
bound
sub
mov
pop
push
test
test
fcomps
mov
shll
push
or
push
mov
push
cmpsb
dec
popa
movsb
mov
xor
adcb
add
rcl
in
cmc
dec
adc
ror
mov
pop
les
leave
dec
call
in
mov
inc
test
enter
sbb
xchg
mov
test
and
xor
test
sahf
mov
inc
push
dec
imul
add
jp
sub
test
dec
out
and
cmc
test
sub
add
xor
mov
mov
std
ja
and
test
lahf
pop
bound
sub
mov
testb
xchg
cmp
cltd
bound
mov
inc
pop
pop
push
aaa
mov
inc
arpl
addr16
rol
scas
pop
mov
inc
inc
fwait
data16
ret
sub
loop
in
movsb
lods
rcrl
aaa
pushl
sub
dec
jp
xor
add
mov
or
mov
test
pop
out
mov
ja
mov
sub
test
cli
lret
xchg
mov
jno
negl
pop
test
mov
lds
pushf
inc
push
pop
jl
test
sbb
int3
cmp
fsub
je
or
pushf
pop
movsl
loopne
jecxz
clc
int
mov
mov
hlt
sbb
mov
or
icebp
pop
mov
sub
dec
outsb
int3
imul
and
mov
lods
add
dec
push
mov
loop
movsl
mov
xor
pop
mov
into
icebp
dec
adc
test
or
sahf
push
and
mov
or
js
jo
loopne
test
push
inc
ja
pop
mov
test
test
mov
and
jp,pn
sub
pop
adc
pop
mov
mov
sbb
push
mov
jmp
sbb
cmpl
and
mov
inc
mov
loope
pop
xchg
mov
sub
stos
fdivrs
xor
mov
sub
imul
fdivr
in
dec
dec
push
in
mov
fwait
mov
push
imul
test
loop
add
lcall
pusha
jnp
je
jecxz
mov
testl
arpl
mov
out
gs
xor
test
mov
mov
bound
push
pop
lock
js
ret
fiaddl
push
xor
arpl
das
mov
mov
jmp
sbb
ret
test
dec
sbb
cmp
fldl2t
lds
add
mov
test
and
movsb
je
aaa
faddl
push
add
cwtl
mov
mov
pop
push
sub
test
xor
mov
adc
mov
test
push
inc
loope
out
pop
xor
sub
cmc
xor
mov
arpl
aad
inc
mov
add
rorl
jl
jmp
xor
jns
dec
test
lcall
mov
mov
movsb
mov
daa
push
xor
jp
push
test
std
sbb
inc
mov
imul
stc
test
loopne
arpl
pop
push
pushf
test
out
jb
int3
cmc
mov
sub
bound
adc
jmp
jl
mov
cltd
popf
cmpsl
ficoms
rol
scas
in
mov
outsb
mov
clc
test
and
test
mov
jmp
push
push
mov
xchg
ja
and
mov
mov
fldcw
pop
jecxz
loopne
addb
xor
in
xchg
xor
or
xchg
pusha
fs
sbb
inc
mov
ficoml
dec
and
xchg
test
aaa
pop
cmc
and
ret
sahf
hlt
mov
sub
test
mov
out
dec
flds
sarb
xlat
lret
push
test
imulb
jo
dec
mov
outsb
test
loop
jno
mov
imul
rcr
xchg
jno
cld
push
push
pop
insb
in
shlb
shll
cmc
mov
sbb
xchg
sub
enter
adc
mov
push
mov
scas
push
push
roll
pop
in
out
inc
or
clc
mov
or
jns
sub
test
cmc
loope
fnstcw
es
xchg
ljmp
mov
int
test
test
rol
mov
dec
test
repnz
popf
dec
jne
dec
out
test
rcl
sbb
nop
lcall
jo
loope
rcll
xor
xor
imul
sahf
dec
mov
inc
insb
mov
xchg
lahf
popf
aas
cld
jp
repnz
xor
or
cmp
sub
sbb
icebp
into
cmpsb
roll
mov
pop
movsb
sahf
push
mov
xchg
cs
cmp
mov
inc
shl
dec
pop
push
mov
cmpsl
cli
cmc
sbb
int3
test
mov
loop
inc
push
test
in
jecxz
pop
or
hlt
insb
inc
pop
xchg
jmp
mov
and
out
decb
js
sbb
ret
mov
repnz
jns
mulb
add
enter
cmpsb
and
mov
jb
mov
lret
xchg
jmp
dec
insl
test
xlat
add
push
mov
and
add
push
test
inc
add
in
mov
mov
mov
dec
pop
movsb
popf
add
sub
or
mov
mov
ret
mov
test
sub
lret
arpl
pop
pushl
add
ljmp
xor
xchg
test
xchg
mov
stc
test
cli
mov
lds
stos
pop
mov
sbb
inc
mov
dec
jns
addl
stos
test
mov
push
mov
sub
push
test
pop
mov
lret
test
jmp
loop
push
cmp
popa
test
pop
test
sub
jp
mov
add
mov
test
lahf
xchg
xor
test
dec
push
sub
xchg
fdivrp
mov
adc
ss
test
iret
mov
icebp
fnstenv
cmc
in
sbb
mov
movsb
ds
mov
test
cmc
leavew
or
pop
imull
lret
lret
movsb
pop
inc
push
fs
pusha
cltd
daa
dec
or
xchg
fldl
inc
iret
dec
cs
test
add
pusha
shlb
ret
push
and
mov
mov
dec
scas
orl
test
pop
cs
scas
push
in
movsb
jnp
xor
push
arpl
inc
mov
outsl
xor
jge
mov
aam
ret
mov
mov
lea
and
dec
push
aam
push
in
cmp
test
jmp
lret
ret
or
and
mov
leave
dec
inc
mov
dec
gs
cmp
sub
addr16
test
adc
jne
movsb
sahf
leave
sub
mov
adcl
adc
mov
movsb
pop
sub
ds
adc
sbb
sub
xor
je
jecxz
dec
push
ret
jnp
and
sub
cmc
test
ret
mov
mull
int3
test
mov
and
pop
dec
inc
bswap
jmp
jns,pt
sbb
mov
mov
mov
adc
ret
loopne
mov
movsb
dec
arpl
cmp
push
rcrb
dec
add
je
in
ret
dec
and
and
bound
leave
xchg
test
lods
mov
xchg
xor
leave
and
cmpsb
mov
xchg
mov
pop
jmp
xor
dec
dec
mov
into
loopne
mov
testb
gs
std
jl
test
lock
xchg
rcll
jns
add
pop
test
test
nop
and
lahf
test
xchg
lcall
loop
arpl
jge
fstl
mov
imul
cld
scas
test
fs
mov
jo
inc
push
lahf
loopne
jecxz
cmp
sbb
addb
and
push
adc
jns
adcb
xchg
daa
test
pop
jmp
int3
test
jo
and
clc
cmp
sti
mov
in
es
mov
xchg
test
cmc
sti
stc
inc
imul
out
jno
mov
mov
test
mov
movsl
jne
test
sub
push
lahf
push
lds
repnz
push
mov
sub
jbe
dec
nop
cmpsl
pop
mov
ljmp
push
xchg
jmp
push
pushf
rorb
test
ret
ljmp
in
clc
mov
mov
jp
test
sub
call
lret
and
aaa
outsl
mov
test
fwait
leave
inc
icebp
add
lret
fmull
push
or
mov
test
movb
sbb
pop
sbbb
in
fwait
jmp
test
lret
add
adc
test
mov
fistpl
sbb
mov
mov
loop
clc
les
and
out
or
fnsave
test
push
pop
rcrl
pop
inc
and
ss
es
add
pop
arpl
enter
push
mov
aaa
out
cmp
ficompl
mov
test
cmc
test
sbb
rcll
out
test
out
cmp
pusha
loop
and
or
inc
mov
dec
inc
xchg
mov
mov
test
push
push
xlat
dec
data16
or
mov
push
mov
in
mull
pop
inc
fdivr
fnstcw
push
mov
push
cmp
mov
push
cmp
or
loop
jbe
cli
movsl
test
pop
pushf
cwtl
arpl
mov
push
adc
pop
fstps
test
inc
and
fidivl
add
xorb
cmpsl
xchg
jo
mov
test
ror
jge
and
fildl
dec
js
inc
inc
mov
pop
mov
xchg
ret
in
mov
jnp
bound
lret
jge
sarl
mov
mov
negl
cs
mov
jnp
push
add
push
je
cld
and
mov
sub
mov
xchg
pop
test
popa
dec
cmc
das
movsl
xchg
adc
add
sub
int
mov
pop
mov
push
test
mov
jge
loope
pushf
lahf
xchg
int3
dec
aam
push
add
mov
mov
das
sbb
cmp
cld
inc
loope
mov
test
icebp
and
xchg
inc
pop
xor
leave
jmp
les
sbb
push
mov
mov
clc
inc
sub
fisttps
in
mov
push
mov
test
mov
pop
mov
int
repnz
sahf
testb
leave
arpl
mov
mov
inc
xchg
std
out
mov
jecxz
lods
ljmp
sub
xor
repnz
fcoms
jle
and
and
aas
test
cmc
or
cli
insb
outsb
push
cmp
arpl
sub
test
push
pop
enter
cmpsl
mov
fisttpl
push
mov
stos
push
leave
vpunpcklqdq
push
inc
add
out
push
lds
dec
mov
pushf
and
mov
testb
mov
bound
enter
mov
bound
dec
jno
ds
lds
nop
arpl
pop
add
and
rcrl
xor
xlat
hlt
test
add
gs
insb
pop
fs
outsb
cltd
inc
sub
mov
inc
or
rorl
pop
test
xchg
cltd
xchg
and
inc
dec
lods
lcall
xor
push
out
mov
jns
adc
movsl
lret
in
test
pop
sbb
imulb
les
in
lods
mov
in
es
test
in
roll
mov
and
test
aaa
or
fisttps
or
test
stos
pop
cmp
enter
aad
and
sbb
sbb
fcomps
dec
pushf
test
faddl
addb
jne
mov
out
or
mov
sub
movsl
mov
test
or
push
rcr
add
jno
pop
cmpb
clc
push
sub
jne
sub
daa
aaa
xor
fbstp
mov
decl
cli
loop
sahf
sub
mov
xchg
cmc
mov
dec
jmp
test
push
ret
test
fmulp
xor
xchg
cwtl
testl
mov
cmpsl
xor
test
push
and
xchg
test
lods
or
cmp
cmpsb
test
lock
fiaddl
cmp
imul
test
cltd
and
inc
ret
cmc
lret
stc
scas
test
mov
xchg
push
dec
test
cmp
jmp
dec
mov
jmp
stos
aas
or
xchg
dec
lcall
mov
lods
cmp
xor
insb
daa
test
mov
mov
test
test
in
sub
ds
test
imull
test
push
cmp
mov
shll
popf
test
dec
sub
out
xor
shl
pop
test
clc
jb
adcl
mov
test
pop
fbstp
std
in
xchg
mov
cmp
fildl
mov
in
aam
xchg
popf
xor
add
loopne
mov
test
sub
int
xor
push
sub
outsb
dec
xor
xor
test
out
ds
popf
lods
test
adc
push
pop
cmp
in
xchg
icebp
xchg
out
test
mov
das
test
cwtl
sbb
test
rclb
test
sub
aad
cmp
notb
jb
mov
dec
bound
arpl
cmpsb
jb,pt
ret
out
xchg
in
push
sti
xor
inc
xor
notl
sbb
test
push
pushf
test
sbb
int3
movsb
cmp
push
shrl
mov
and
es
punpckldq
jbe
loop
imul
cmp
inc
sub
sub
sbb
adc
cli
or
ljmp
aaa
int
push
cltd
mov
decl
fwait
or
test
repnz
test
mulb
lcall
sar
mov
lret
test
xchg
jmp
mov
rclb
stos
test
in
lcall
fcomi
sub
test
sub
call
ret
inc
cli
movsb
xor
mov
addr16
mov
sbb
lret
lds
in
mov
test
xchg
push
ret
fwait
test
jp
lock
mov
jp
scas
mov
cmp
or
mov
mov
pop
adc
lods
xor
dec
scas
mov
mov
push
cli
or
lret
pop
adcl
or
fidivrl
js
jne
les
mov
jo
in
pop
or
mov
test
and
adc
cmp
test
sbb
jns
mov
mov
jp
sub
add
adc
or
and
push
adc
push
or
pop
pop
xchg
movsb
jge
outsl
hlt
adc
aad
cwtl
gs
movsb
pop
cs
xchg
and
mov
dec
test
call
lahf
dec
adc
test
mov
push
movsl
into
jne
mov
movsb
in
sub
lret
mov
movsl
gs
mov
mov
lcall
lods
mov
inc
mov
out
lret
or
fstl
lcall
mov
jae
xor
sbb
mov
push
out
in
push
in
insb
push
in
cmp
mov
sub
pop
cmp
mov
movsb
cmp
test
rcrb
xor
fwait
add
push
adc
test
jae
out
push
dec
test
mov
mov
mov
push
push
or
mov
or
rolb
fwait
dec
jl
xchg
ret
inc
mov
mov
in
cmpb
and
jle
sbb
out
pusha
lret
fsts
inc
pushf
cmp
adc
push
jp
pop
xor
movsb
cmp
loope
lret
or
aam
test
aaa
loop
stos
enter
sbb
jb
mov
or
xchg
lahf
test
xchg
shrb
data16
loop
dec
push
mov
or
dec
sarb
fiadds
sbb
movsb
lcall
mov
mov
fiadds
xchg
and
xchg
lcall
mov
jmp
fisubl
and
imul
add
repnz
pop
mov
aaa
dec
rcl
test
stc
out
hlt
test
cmpsb
and
sbb
xchg
test
leave
push
lcall
bound
mov
pop
dec
dec
push
test
push
dec
sub
and
add
sub
divb
arpl
xor
mov
mov
aas
test
mov
enter
xor
cwtl
pusha
movb
jno
test
fisttps
or
loop
mov
adc
stc
sbb
xchg
loopne
out
dec
dec
dec
cmpsl
ret
test
push
das
pop
int
cmp
ret
fnstenv
adc
mov
mov
push
les
jmp
dec
inc
cs
mov
mov
pop
sub
aaa
shrl
inc
leave
in
pusha
cmp
mov
pop
es
inc
loope
dec
test
cmp
cwtl
int3
dec
cli
stos
mov
test
xlat
lret
out
xchg
cli
dec
pop
mulb
and
mov
aad
test
xor
test
jae
xchg
gs
orl
test
mov
notl
push
mov
sub
push
loop
jns
cs
lret
bound
hlt
mov
xchg
std
enter
sub
test
jge
mov
in
cmp
loop
loopne
test
mov
inc
dec
movsb
lahf
xor
test
sub
xchg
outsb
mov
in
dec
stos
rcrl
pop
push
mov
in
test
push
xor
and
insb
into
test
push
rolb
test
push
icebp
lret
in
test
mov
test
jbe
or
jb
movsl
jnp
mov
rcrb
add
cmp
mov
imul
sahf
test
fistl
mov
insb
push
adc
idiv
cltd
loop
mov
push
xor
jle
xor
sahf
push
ss
int3
lahf
cmp
les
test
int
enter
std
into
rorl
dec
nop
out
add
test
xchg
shl
enter
mov
and
adc
add
lret
mov
test
aaa
in
xor
test
shll
popa
mov
shll
out
push
inc
mov
sub
movsl
clc
add
cli
bound
les
mov
lret
cmc
lock
mov
outsb
out
pusha
lcall
subl
xchg
loope
cmp
cltd
in
es
dec
jne
or
mov
bnd
mov
mov
test
sub
out
in
into
test
jmp
dec
cli
in
xor
xchg
add
insb
jb
cmp
test
movsl
ret
rcll
loopne
cmc
pop
inc
adc
xchg
mov
push
negb
test
mov
dec
pop
test
dec
daa
fwait
lea
icebp
sub
out
add
ficomps
mov
sbb
pusha
popf
data16
mov
push
movsb
stc
add
mov
dec
test
hlt
bound
test
dec
enter
out
add
mov
cmp
mov
rol
sub
imul
sub
ds
sbb
inc
push
arpl
sahf
dec
scas
test
cli
sti
stc
cmpb
mov
bound
imul
test
insl
divb
cmp
loop
mov
aaa
adc
fiadds
lods
and
clc
and
or
lret
sub
test
lret
test
jnp
jg
std
dec
sbb
lret
test
add
cs
push
hlt
and
mov
cmp
adc
out
movsb
call
pushf
pop
and
sti
test
lods
clc
out
xchg
dec
popa
pusha
add
out
add
mov
pop
arpl
insb
das
xchg
mov
mov
test
push
xchg
testb
test
xchg
repnz
adc
stc
test
test
ror
xchg
cmpsb
mov
leave
rorb
jbe
push
je
call
cmpsb
into
out
xchg
mov
adc
push
fldenv
rolb
cmp
rcrl
popa
pop
cmpsl
sbb
jnp
and
fadds
jns
push
test
addl
fwait
sub
and
fldenv
les
or
sahf
fbstp
in
mov
push
pushw
or
and
sarl
mov
test
ja
mov
pop
mov
sahf
out
cmc
dec
je
bound
mov
test
sbb
jnp
rcrb
pusha
daa
pop
sbb
jmp
mov
inc
psubsb
aad
pop
mov
inc
push
xorb
mov
jno
jle
sbb
mov
and
mov
dec
rorb
cli
sbb
testb
hlt
inc
or
cmpsb
movsb
scas
cwtl
daa
push
xchg
or
mov
aam
loope
xchg
push
int
std
dec
dec
movsb
bound
test
and
xor
test
inc
sbb
or
ja
push
aas
test
mov
imul
push
dec
aas
cmp
imul
cmp
sub
rolb
dec
loope
lods
xor
mov
push
fs
dec
popf
test
add
arpl
outsl
or
or
adc
push
shl
cmp
mov
mov
les
notb
arpl
ret
mov
jecxz
or
lea
push
fisttpl
test
out
pop
es
insl
add
pusha
outsl
adc
xchg
inc
and
andb
out
iret
je
shl
scas
adc
les
popf
dec
fstpl
test
push
rclb
testl
lock
xor
dec
repnz
ss
bound
push
inc
cmp
es
call
push
outsb
lods
out
mov
cmpsb
dec
leave
mov
rcll
mov
and
gs
pop
push
stc
dec
test
jp
or
test
mov
mov
arpl
out
push
addr16
test
mov
les
movsl
mov
test
mov
or
movsb
jae
insl
movsl
fcmovne
es
mov
jno
inc
mov
filds
sbb
scas
out
mov
mov
ret
notb
and
mov
call
cwtl
mov
test
xor
jno
adc
sub
xchg
inc
popf
in
and
out
push
loop
mov
lcall
mov
xor
in
pop
mov
call
adc
sbb
test
scas
lock
mov
int3
sbb
sub
test
test
and
jmp
xchg
insb
mov
test
andb
lcall
cmp
and
mull
call
adc
in
mov
test
int3
fsubr
push
add
and
mov
push
popf
push
mov
es
in
pop
xchg
push
sub
mov
insl
mov
flds
mov
or
sub
testb
xchg
es
movsb
mov
mov
test
movsl
in
int
out
cmp
pop
ljmp
vsubss
inc
inc
push
inc
js
test
cs
cltd
mov
xchg
ss
ret
xchg
ja
cmc
flds
and
pop
in
inc
lret
lahf
mov
sti
in
mov
les
xor
lcall
pop
movsb
fcoms
repz
mov
cmpsb
sub
test
add
fcmovnb
pop
pop
movsb
int
sub
jp
cmpsl
mov
sub
mov
inc
lods
pop
add
mov
dec
hlt
sbb
sub
pop
inc
gs
push
cld
push
mov
popl
push
xchg
add
in
dec
fs
fcmovb
mov
arpl
sarb
mov
dec
add
clc
push
rolb
inc
dec
jnp
mov
xchg
aaa
cmpl
test
das
push
in
push
pushf
outsb
adc
sbb
imul
pop
aaa
inc
or
jecxz
lcall
and
stos
inc
test
lret
testb
ror
adc
xor
repnz
test
xchg
xchg
cmp
xchg
cli
pop
clc
and
push
test
fidivs
pop
cmp
sti
sbb
leave
pop
test
lret
or
idivb
imul
pop
std
inc
leave
popa
inc
push
das
test
cltd
lods
in
sbbl
jge
mov
jmp
sub
xchg
adc
mov
jbe
enter
xchg
test
daa
cmp
dec
push
in
or
adc
ja
popf
pop
jbe
scas
test
cltd
cmp
add
call
or
mov
in
test
sub
clc
lcall
shl
xor
lret
cmp
in
das
adc
dec
mov
xchg
xchg
add
enter
fsts
mov
sub
mov
in
negl
mov
pushf
cmp
test
xchg
lcall
ret
ds
stc
fisttps
data16
mov
mov
mov
dec
push
xchg
in
mov
mov
mov
pushfw
inc
daa
in
mov
add
fnstenv
pop
test
mov
push
test
mov
cmpsb
stos
test
and
test
jb
adc
mov
sbb
lock
test
jbe
test
out
call
dec
test
movzbl
add
inc
sbb
dec
sub
test
clc
int
xchg
jge
daa
dec
cli
xor
jne
test
dec
cmpsb
sub
dec
aam
xchg
inc
cmpsl
test
shrl
xor
lret
test
out
xchg
dec
and
dec
movsb
cmc
sub
test
mov
es
cmpsl
sub
push
fnstsw
out
inc
sub
jbe
inc
sub
jne
push
data16
arpl
dec
lds
cltd
testl
mov
test
mov
pmulhw
test
jmp
cmpsl
ret
out
movsb
add
or
fidivrl
add
inc
push
pop
sbb
test
popa
fnstcw
aaa
test
movntps
clc
pop
inc
rclb
inc
aad
jne
test
mov
sahf
or
lret
sub
stc
shlb
jmp
mov
test
mov
loop
test
repnz
aas
test
repz
test
mov
ds
mov
cld
push
stc
in
into
test
jecxz
cli
jp
fists
movsl
dec
jae
mov
mov
push
out
sbb
mov
lds
movsb
add
test
xchg
test
enter
xor
mov
add
adc
popf
enter
roll
loop
push
mov
and
jmp
inc
cld
jecxz
leave
test
arpl
in
sub
inc
jbe
jmp
push
lret
les
testb
jg
fistpl
xchg
adc
test
pusha
pop
insb
inc
push
mov
das
jp
jo
aas
in
leave
add
jbe
pop
jl
sbbl
sub
in
fnstenv
mov
mov
mov
aaa
xchg
out
test
les
in
dec
out
lret
pop
in
mov
insb
xor
test
fwait
test
xchg
mov
xor
insb
ljmp
int
dec
imul
dec
cmp
push
sub
test
test
mov
dec
in
out
mov
test
xchg
sahf
xchg
or
popf
mov
mov
pushf
shr
lret
mov
test
ret
in
mov
xchg
xchg
test
into
int3
fldt
sbb
mov
insb
jmp
mov
in
dec
cli
nop
fwait
adc
lret
pushf
orb
mov
imulb
mov
or
test
jle
mov
ja
test
push
test
pusha
popa
xchg
xor
jne
test
sbb
test
inc
sub
popa
add
add
es
jle
mov
jbe
leave
testb
cs
inc
divl
les
loopne
or
test
lds
pop
popa
dec
loop
out
xlat
adc
cs
xchg
adc
mov
in
sub
mov
ss
inc
lods
or
test
sub
notl
push
daa
sbb
adc
push
or
fst
test
xchg
icebp
test
and
xchg
std
or
arpl
test
test
stos
add
cli
cmp
shll
push
or
std
jnp
add
sub
pusha
jecxz
or
mov
fs
cmp
lret
jp
push
in
dec
je
sub
mov
inc
dec
mov
or
push
fiaddl
add
dec
je
jle
sub
das
cmp
rclb
xor
loop
in
lret
neg
popa
lahf
push
daa
in
pop
push
shlb
or
sbb
arpl
mov
and
lcall
or
outsb
insl
repnz
dec
mov
jns
xchg
into
sbb
push
loopne
test
mov
popf
xor
sub
xchg
arpl
and
sti
mov
cmc
ret
dec
adc
lret
inc
xor
leave
test
pop
test
jmp
mov
jl
sbb
cmp
pop
test
xchg
or
sbb
clc
lock
dec
xor
enter
pushf
stos
rolb
mov
lcall
and
push
cld
stos
idivb
stc
test
leave
cli
test
inc
sbb
test
dec
into
jp
clc
test
sub
sbb
popa
mov
sub
and
ret
push
stos
sbb
test
push
xlat
or
mov
aaa
xor
push
cmp
out
mov
test
std
push
dec
aaa
push
mov
jae
xchg
jg
mov
and
dec
add
inc
cmp
call
xchg
and
mov
lods
jp
neg
lods
cltd
mov
pop
sbb
cmp
or
pop
ret
cli
mov
pusha
lcall
adc
out
negb
cld
in
inc
aam
cmpl
adc
jl
push
jecxz
fists
test
mov
jecxz
lret
in
les
dec
int
mov
sti
test
mov
test
dec
and
mov
test
xchg
xchg
xchg
fisttps
loopne
pop
pop
pop
ds
xchg
mov
mov
movsb
cltd
xchg
pop
sub
add
test
push
loop
fs
test
stos
orl
mov
inc
stos
int3
test
cwtl
mov
cmpsl
daa
push
pop
fwait
addr16
repnz
mov
push
std
test
das
jo
fnsave
push
mov
or
jmp
test
ret
test
jb
out
les
pop
pop
cmp
and
leave
test
mov
ret
call
test
cwtl
ror
sbb
xchg
mov
sbb
movsl
jmp
add
pop
nop
mov
dec
imul
call
data16
xchg
mov
lods
jnp
sbb
mov
cmp
dec
sub
and
sbb
and
lds
inc
xor
insb
mov
scas
xor
push
or
jb
mov
data16
lds
les
cmc
dec
loope
mov
add
cmp
mov
adc
or
push
test
lock
mov
lcall
test
xchg
repnz
add
adc
sub
orl
jl
popa
test
lds
jge
push
cmpl
push
add
popf
cmc
xchg
bnd
lds
mov
push
or
movsl
sbb
cmpb
rorl
jae
mov
ss
xor
sub
or
mov
rclb
scas
jecxz
pop
push
jb
inc
dec
mov
push
test
xor
movsb
cli
xor
mov
lret
popa
xchg
fnstcw
andl
fadds
dec
and
add
jge
loop
sahf
imul
cwtl
sbb
test
cltd
icebp
imul
inc
insb
sbb
add
add
and
scas
inc
call
inc
daa
sarb
inc
in
mov
inc
mov
and
inc
dec
jbe
jb
gs
pop
test
rcl
lock
es
xchg
popf
repnz
sbb
and
bound
aaa
sub
arpl
dec
add
test
or
mov
dec
bound
cmp
mov
or
sbb
enter
cli
cmp
popf
in
in
inc
push
mov
int3
xchg
cli
dec
movsb
pop
push
cwtl
mov
or
push
add
out
xchg
lods
loopne
pop
imul
cmc
dec
inc
cmp
push
and
adc
sub
mov
movsb
mov
cli
and
cmp
in
push
mov
nop
das
mov
test
popa
xor
xor
aas
and
ret
test
sbb
test
insb
clc
test
jb
dec
es
pop
mov
cltd
mov
pop
popa
pushf
test
xchg
dec
dec
lea
jp
out
dec
lds
push
xchg
cmp
push
jne
lock
cmp
incb
loope
sbb
and
mov
sbb
xchg
mov
lea
or
jg
out
mov
sbb
adc
movb
dec
hlt
std
xor
mov
and
ficoms
jg
pop
test
xchg
mov
ja
andb
int3
mov
mov
sub
les
daa
mov
jne
ret
mov
mov
push
call
test
out
dec
dec
leave
in
in
test
jmp
xchg
jne
mov
mov
frstor
dec
je
repz
test
push
leave
pop
jns
dec
andl
test
adc
and
loop
rcl
leave
outsb
and
cmpsl
sub
push
outsb
fldt
cli
jp
lahf
shl
test
addr16
int3
pop
into
test
xchg
sahf
test
aad
cmpsb
inc
and
dec
call
mov
xchg
les
jp
sbb
dec
push
xchg
test
mov
jecxz
and
in
lcall
xchg
xor
xor
out
xor
test
out
mov
cltd
jbe
sti
pusha
mov
mov
insb
lods
or
push
test
repz
clc
loope
mov
sbb
and
test
xchg
imul
xor
dec
push
ret
ss
push
pushf
not
push
sbb
into
lds
or
call
mov
ret
fisttps
std
cmp
xchg
test
mov
xlat
mov
lcall
xchg
adc
cmpb
idivb
movsb
push
lret
sahf
mov
xchg
mov
stos
fwait
mov
xor
or
shrb
stos
idivb
xor
pop
fdivr
pusha
faddl
and
pop
dec
push
mov
movsb
sbb
movsb
test
mov
mov
rdtsc
sub
adc
cmpl
mov
add
inc
aam
lret
scas
and
jl
fldcw
movsb
sub
push
ret
mov
inc
test
nop
cwtl
push
dec
xchg
int3
test
push
mov
stc
lahf
jns
mov
cmpsb
pusha
test
repz
test
aad
cld
jo
jle
cmpb
xor
push
cmc
lret
push
movsb
pop
movsl
dec
jle
mov
bound
or
test
pop
mov
dec
int3
movsb
popf
pop
inc
adc
mov
cltd
and
dec
lods
mov
and
dec
test
stos
dec
faddl
lret
fwait
mov
repnz
xchg
int3
test
xchg
loop
das
bound
jg
lahf
loope
test
movsb
push
adc
pop
cmpsl
andb
mov
jno
mov
mov
sub
xchg
movsb
jne
dec
aad
push
fsubs
mov
fistpl
das
arpl
mov
test
test
push
stos
test
clc
mov
dec
adc
dec
test
mov
arpl
or
movsb
adc
pop
xchg
subl
imul
std
push
push
lahf
out
lods
xchg
adc
aam
or
jecxz
testl
sarb
xchg
loopne
push
test
cmp
inc
xor
and
scas
mov
fnsave
jle
stos
mov
add
push
dec
sub
iret
mov
mov
jmp
lcall
mov
dec
out
test
cmp
and
imul
stos
loopne
mov
mov
std
les
mov
dec
loop
or
fiaddl
cltd
and
test
push
jmp
pop
pop
adc
or
mov
xchg
sbb
mov
nop
cld
sub
testb
and
leave
andl
sub
into
xchg
repnz
test
addb
test
ret
mov
jne
lret
jns
dec
jbe
idivb
push
ljmp
xchg
dec
inc
test
jb
minps
mov
test
push
iret
addl
jb
clc
movsl
imul
push
mov
ret
or
incl
clc
cltd
xchg
ds
rolb
push
pop
dec
jno
gs
jl
loop
mov
stos
or
or
test
xchg
jae
stc
mov
pushf
mov
cmpsb
loope
dec
xadd
cltd
inc
pop
xor
sbb
push
rorl
mov
adc
in
test
addb
jecxz
test
outsb
or
mov
cmp
jb
shl
test
sbb
leave
mov
pop
jb
mov
jmp
jne
adc
lds
daa
sub
loopne
push
mov
mov
test
lret
pop
ja
negb
mov
adc
and
dec
xor
xor
mov
je
int
push
jne
data16
or
add
out
and
lcall
ret
sub
cli
fsubs
nop
sbb
loope
lahf
test
push
add
sbb
shrb
movsl
push
negb
inc
mov
push
dec
mov
mov
es
iret
pop
cmc
push
pop
or
and
mov
movhps
xor
je
addr16
cmp
pop
sub
shll
xchg
dec
in
test
cmpsb
in
test
sbb
adc
sti
push
mov
cmp
or
mov
ds
in
jbe
cmpsb
and
lahf
mov
mov
stos
or
fdivl
inc
mov
test
dec
xor
pop
mov
nop
cs
flds
sub
lods
mov
mov
lahf
mov
cmc
scas
sub
lea
jecxz
mov
mov
dec
inc
mov
adc
outsb
pusha
stos
push
dec
adc
repnz
cmpsb
mov
lds
mov
rol
divb
loop
jecxz
adc
stos
dec
ds
les
mov
pop
dec
pop
movsl
jmp
nop
xlat
cld
les
test
or
fcomp
mov
or
sbb
scas
test
into
push
stos
imul
and
dec
mov
test
mov
fldenv
test
mov
xchg
mov
and
jp
cmp
bound
test
sbb
loope
sub
mov
xchg
xchg
enter
notl
test
lcall
xor
into
fwait
mov
or
test
pushf
movsb
or
push
pop
sbb
shlb
lret
aam
cmpsb
ret
out
mov
xor
fld
fbld
jecxz
mov
ja
sbb
dec
push
test
sbb
icebp
aam
adc
cmp
frstor
lahf
or
lret
xchg
mov
xor
scas
mov
bound
mov
jno
push
sub
cwtl
jne
mov
push
in
push
lods
test
xor
lds
lret
test
adc
jl
shll
or
test
xlat
lods
mov
sti
daa
push
addl
xchg
inc
or
adc
test
inc
add
dec
sub
test
sbb
dec
sub
mov
sub
or
lds
adc
push
cs
mov
int
sub
xor
rcll
in
inc
movsb
addr16
arpl
lds
aas
rcrl
pushf
push
lret
cltd
fimull
ja
test
dec
iret
or
inc
in
inc
push
cli
int3
push
cwtl
rcrl
cmpsl
mov
and
cmp
mov
dec
jmp
pop
dec
lcall
shlb
mov
sbb
mov
jge
jns
mov
xchg
andl
roll
jmp
popa
xchg
test
cmp
insl
push
into
cmp
xor
int3
add
mov
mov
loop
dec
xchg
jnp
jmp
shr
dec
mov
out
inc
ret
inc
repnz
jae
pop
call
out
push
xor
in
outsl
pop
push
add
and
and
test
iret
cmp
mov
ss
fld
stos
fimull
push
cmp
out
mov
pop
or
pop
and
mov
sbb
sbb
test
pop
test
insl
or
dec
test
movsl
sbb
das
mov
outsb
arpl
mov
imul
sub
out
inc
sbb
dec
add
fwait
or
std
mov
aas
xchg
inc
test
les
xchg
sub
les
push
imul
mov
pop
lret
sub
push
inc
and
cmp
int
test
push
xchg
cmc
test
paddd
out
cltd
test
jb
out
cmc
jge
push
mov
test
xchg
xchg
in
fs
add
push
test
jp
mov
loop
test
movsl
push
mov
mov
movsb
push
fnstenv
mov
dec
outsb
xor
mov
loop
lret
or
and
orl
pop
test
mov
ret
test
data16
jmp
cmc
and
adc
pop
sti
das
xchg
sbb
test
lret
outsb
push
jno
and
int3
cwtl
js
imul
cmpsb
nop
jecxz
sub
stc
in
lret
jbe
cli
sub
mov
mov
aaa
push
orl
jo
decb
cld
and
test
les
mov
cmpsb
inc
mov
in
cmp
stos
push
adc
mov
or
mov
push
add
imulb
rol
inc
push
test
aaa
lcall
bound
cltd
sbb
fisubl
test
inc
push
subl
pusha
cld
rolb
and
mov
jnp
aam
je
iret
cmpsl
adc
sub
aad
ja
push
jmp
roll
lcall
movsb
sub
in
iret
sub
test
pop
dec
movsl
movsl
insb
je
add
jb
mov
in
test
xor
out
or
sbb
lahf
mov
inc
shrl
or
xor
dec
daa
inc
fwait
add
mov
and
add
stos
or
loop
popf
adc
test
jmp
loopne
or
add
test
sbb
push
add
lret
jl
sub
ret
mov
push
fst
cmc
test
dec
adc
xchg
and
mov
rol
and
lods
fnstsw
movsb
mov
push
or
cs
cld
enter
xor
loop
les
test
sub
lahf
je
test
fs
cmp
mul
jl
dec
test
imul
dec
rclb
jge
fdivr
sub
arpl
lret
xor
into
push
cmpsl
sbb
dec
pop
jecxz
stos
sbb
loop
mov
cmpsb
mov
mov
into
test
sbb
xchg
test
test
cmp
sbbb
sbb
mov
daa
mov
test
enter
xchg
testl
push
out
mov
test
push
dec
push
cmc
sub
inc
xor
or
cwtl
test
aas
pop
in
adc
pop
shll
push
or
adcb
popf
leave
xchg
push
addb
movsb
mov
push
mov
cmp
inc
mov
push
mov
shll
add
mov
scas
fsts
mov
sub
test
sub
jb
fiadds
and
mov
loopne
or
iret
cmpsl
fwait
movl
lret
or
aam
imul
push
mov
pusha
mov
arpl
test
leave
and
or
iret
inc
imul
dec
dec
in
dec
dec
add
aam
sbb
or
mov
aad
mov
xchg
aas
sub
cmp
test
mov
mov
lds
inc
push
stc
call
pop
test
add
je
inc
movsb
loop
dec
push
dec
mov
sub
push
xor
jecxz
and
imul
add
mov
pop
mov
test
jecxz
les
push
push
cmp
mov
sbb
inc
test
stos
jno
pop
and
popa
push
push
pop
inc
add
mov
xchg
aaa
test
push
bound
jb
adc
add
loope
pop
test
push
mov
cwtl
inc
fiaddl
mov
test
icebp
or
xor
mov
adc
dec
into
dec
sahf
add
mov
mov
test
sbb
cmp
xchg
xchg
xor
lret
test
mov
dec
and
daa
add
stc
mov
test
enter
adc
je
test
ja
dec
test
jb
enter
test
fldt
test
push
dec
xchg
or
jecxz
popa
ret
sub
mov
adc
add
pusha
fsubl
cmp
das
test
xor
test
stos
outsb
rclb
push
imul
jle
repnz
inc
sub
jge
mov
test
sbbl
repz
mov
adc
adc
push
xchg
push
cli
jbe
add
inc
mov
sub
push
xchg
movsl
mul
jecxz
mov
inc
or
movsb
mov
xchg
mov
movsl
in
cwtl
repnz
push
jge
stos
jbe
test
mov
shl
std
or
inc
bound
or
xchg
inc
xchg
mov
xchg
cmp
test
and
movsl
mov
push
clc
test
ficoml
push
loopne
cmp
test
add
outsl
cmp
movsb
pslld
lds
dec
mov
mov
cmp
inc
fs
test
pop
mov
test
repnz
test
and
test
fistpl
call
pop
arpl
mov
mov
test
sbbb
adc
bound
sub
mov
in
incb
into
cs
mov
push
or
pushf
stos
int3
pop
dec
inc
and
add
sbb
dec
mov
cli
cmpsb
jp
int3
cmpsb
and
mov
bound
test
imul
test
setle
pusha
jae
mov
dec
inc
sbb
or
pushf
mov
stos
cmp
mov
fldenv
xor
mov
in
jecxz
inc
out
in
cmpsb
std
fdiv
in
jle
test
mov
cwtl
test
in
cmp
les
stc
shrl
add
fistps
cmp
and
push
aam
add
mov
adc
cmp
pop
int3
inc
das
xorb
test
pop
arpl
ds
icebp
lret
inc
push
ja
test
dec
push
pusha
in
lds
rorl
repnz
mov
cmp
pop
mov
lods
inc
xchg
or
movsb
cwtl
test
testb
lcall
in
pop
dec
push
shrb
movsl
pushf
clc
add
fildll
insb
and
mov
add
test
in
stos
dec
push
xor
jno
jecxz
xchg
vfrczss
mov
test
andl
int3
mov
mov
imul
icebp
jl
insb
into
test
sar
mov
test
add
mov
jge
and
out
push
sub
mov
int
pushf
les
adc
push
into
test
aam
xchg
adc
ljmpw
test
push
test
and
mov
test
fistl
dec
sub
push
push
andl
std
mov
loope
mov
mov
lock
in
fimuls
xchg
sahf
adc
loop
adc
dec
push
mov
arpl
cld
mov
int3
in
sbb
fst
sub
xor
and
ret
mov
mov
sub
mov
outsl
mov
cmp
test
and
lcall
sub
sbb
mov
cmpsl
mov
add
int3
mov
scas
mov
sahf
lret
mov
pusha
ja
loope
jnp
daa
xor
or
arpl
or
lret
mov
cmc
lcall
ja
mov
lods
rol
xor
daa
test
mov
std
sbb
xchg
mulb
arpl
push
out
out
xlat
mov
mov
pop
in
ja
dec
movsl
mov
sub
test
jmp
mov
test
xchg
aad
and
int
stos
lcall
xlat
test
mov
push
out
out
test
frstor
imul
sar
xchg
leave
lahf
mov
es
mov
insb
jle
in
jb
xchg
out
xchg
add
mov
test
pop
sub
mov
es
xlat
mov
call
aas
adc
mov
fxch
mov
fists
lds
mov
cmpsb
sub
add
sub
sbb
test
adc
pop
mov
cli
xchg
jnp
xchg
call
mov
push
fstpl
push
lret
out
push
fs
sahf
jns
and
les
sbb
pop
sub
mov
cmpsl
push
mov
mov
and
lret
test
test
int
push
inc
xchg
mov
in
add
mov
repnz
les
push
in
fs
push
push
test
push
xor
jmp
pop
es
lods
mov
mov
test
pushf
xchg
test
jne
test
xchg
clc
in
les
test
lret
add
shl
sub
lret
jecxz
nop
sub
pusha
int3
mov
jae
decb
je
xchg
clc
fisubl
lcall
movsl
test
jmp
ror
flds
std
push
mov
mov
or
out
and
cwtl
lret
add
mov
xchg
fcmovnbe
pop
add
insl
fisubrs
sbb
pop
mov
dec
repz
add
cmp
mov
sub
and
pusha
and
movsl
mov
dec
push
test
pop
lret
push
movsb
mov
rcll
enter
mov
sahf
mov
andb
inc
loop
mov
xor
dec
add
in
decb
cmp
mov
cld
mov
push
loopne
repz
mov
cmp
add
xor
test
mov
idiv
pusha
dec
aas
outsb
and
lods
push
push
xor
add
push
into
fdivr
loop
cmp
mov
data16
out
idivl
inc
insl
popl
mov
sub
test
mov
inc
and
push
enter
mov
sub
arpl
sbb
xchg
adc
test
push
sub
iret
mov
jmp
xchg
dec
pushf
xchg
mov
mov
push
and
pop
clc
inc
leave
scas
mov
mov
mov
dec
out
test
leave
cwtl
test
inc
mov
out
add
sub
sub
pop
gs
and
loope
push
cmpsl
mov
jecxz
sbb
cmpsl
bound
leave
movb
imul
inc
sbb
orb
sbb
test
inc
repnz
push
shl
hlt
fsts
mov
pop
xchg
insb
dec
cmp
push
dec
mov
in
in
insb
and
inc
pusha
xchg
and
sub
fwait
mov
notl
sarl
sub
shll
inc
dec
in
in
pop
mov
mov
int3
fld
xchg
and
dec
inc
or
leave
xor
push
pop
insb
repz
test
jo
pushf
es
subl
rcr
sub
or
cmp
pop
sub
sub
into
mov
shrb
enter
iret
es
test
mov
ljmp
add
cli
cmc
sub
lea
lret
test
loope
js
adcl
push
mov
aas
cmpsb
xchg
lahf
loop
jecxz
bound
std
dec
outsb
stc
inc
sub
lret
jae
clc
push
mov
mov
in
inc
inc
insb
and
test
xor
stos
test
aaa
add
jecxz
pushf
out
or
mov
fdivrs
inc
cmpsl
mov
test
test
sbb
dec
idivl
xchg
es
outsb
lcall
or
mov
nop
pop
lret
push
cld
test
sbb
dec
mov
cwtl
xor
test
xor
dec
sub
daa
cmp
xchg
popa
add
xor
cmpsb
cli
pop
push
mov
mov
scas
jmp
bound
push
and
das
or
cs
flds
in
scas
sbb
mov
js
mov
roll
push
pop
bound
jmp
test
daa
enter
jle
mov
inc
jge
andb
adc
sahf
pop
mov
jne
xchg
imul
test
in
scas
pop
test
or
pop
xchg
mov
lds
test
mov
push
pop
jno
test
jmp
test
mov
je
std
test
stos
cwtl
push
lds
xchg
push
cmp
das
test
mov
sub
mov
stos
push
leave
push
sub
nop
mov
and
mov
cli
test
bound
mov
pop
leave
xor
sub
xchg
pusha
imul
and
icebp
lcall
adc
dec
and
xchg
test
nop
stos
xchg
lock
rdpmc
test
lds
sbb
stos
mov
movsl
mov
insb
add
sub
or
push
fisttpl
popa
enter
or
inc
dec
add
or
arpl
sub
jmp
movsb
repnz
xchg
call
xchg
pop
pushf
add
iret
mov
lds
mov
adc
arpl
pushf
insb
cmpsb
mov
mov
movsb
dec
in
data16
fcomps
cmp
das
test
pushf
mov
lds
fildll
sahf
mov
arpl
dec
mov
mov
mov
inc
or
and
pushf
in
movsb
cwtl
in
sahf
inc
lock
cmp
add
dec
or
roll
out
adc
mov
shr
xor
clc
xchg
or
inc
test
jecxz
test
repnz
xchg
mov
dec
movsl
fistpl
mov
xor
mov
push
test
cmp
cmp
mov
test
mov
aam
daa
mov
dec
inc
mov
test
mov
je
mov
outsb
pushf
dec
dec
jbe
int3
loopne
nop
xchg
lods
cmp
fwait
test
in
shl
pop
pop
sbb
imul
pushf
icebp
in
mov
ret
adc
mov
push
test
xchg
iret
mov
push
push
js
mov
xchg
std
mov
int3
test
xchg
call
test
lret
test
sub
xlat
cmp
in
movsl
das
sbb
mov
vaddpd
imul
dec
loope
out
test
sbb
or
sbb
mov
aad
mov
pop
dec
mov
mov
outsb
xchg
in
icebp
dec
push
and
cmc
mov
xor
test
loopne
out
mov
jmp
xchg
mov
jge
mov
mov
fisubrs
lods
push
imul
sahf
sub
insb
or
arpl
mov
mov
rorb
pushf
xor
and
test
in
mov
mov
adc
clc
in
xchg
dec
cmpb
adcl
sbb
and
stc
bound
mov
xchg
mov
sub
mov
push
inc
in
push
cli
cmpsb
mov
test
mov
pop
test
ja
in
xor
arpl
mov
pop
ss
mov
jle
repnz
movsb
xor
movsl
mov
mov
dec
and
arpl
cltd
jo
inc
mov
test
mov
mov
cmc
push
test
push
popa
push
adc
sbb
mov
insb
sub
shll
ss
lcall
sub
pop
test
dec
jns
addb
xchg
xlat
push
add
sub
leave
aam
es
in
pusha
lcall
cmpb
adc
rcrl
cmp
cmp
mov
add
test
in
mov
lds
jmp
mov
mov
loop
and
xchg
dec
pop
sbb
inc
popa
dec
repz
out
ret
mov
xchg
les
inc
xchg
mov
xchg
loopne
or
or
scas
xor
out
cmpsb
divb
mov
loope
test
arpl
push
test
add
std
mov
adc
call
test
inc
mov
or
inc
inc
pop
jmp
pop
test
or
xchg
cmp
lds
in
dec
mov
shr
xchg
mov
movsl
add
jno
mov
clc
sub
test
fldcw
in
xor
test
shrb
dec
jge
jnp
in
push
xchg
xchg
orb
push
call
add
mov
sbb
test
aad
jb
sub
xor
xchg
push
test
enter
gs
data16
mov
test
push
pop
cltd
loop
in
loopne
shl
adc
lods
mov
push
inc
sub
mov
les
mov
inc
push
cli
cltd
roll
stc
dec
test
imul
mov
arpl
loop
ja
es
mov
cltd
cli
adc
adc
xor
jnp
lds
mov
sahf
mov
stos
adc
test
push
mov
xor
mov
add
rorb
or
push
add
popa
mov
shll
adc
mov
bound
test
es
sbb
scas
sub
int
jl
mov
xchg
dec
sub
insl
test
add
lret
test
adc
fldl
mov
ss
repz
pop
out
mov
lods
orb
push
sbb
ss
jp
mov
aas
fldenv
push
hlt
inc
pop
and
mov
cld
test
add
iret
into
leave
mov
out
xchg
les
add
repnz
jmp
xchg
push
jp
gs
xchg
dec
inc
sti
add
in
dec
sub
mov
inc
jp
pushf
leave
lret
pop
je
test
mov
push
and
aas
lret
fidivs
aam
in
cwtl
pop
bound
repnz
test
mov
dec
add
sub
repz
in
push
pop
mov
xchg
cmpsb
stos
notb
mov
inc
lcall
mov
push
sub
or
dec
in
in
leave
add
cmc
cmpsb
sbb
mov
sub
insb
or
cli
mov
int
test
insb
je
test
inc
and
cmp
and
test
jmp
pop
dec
mov
arpl
icebp
addr16
dec
fldenv
test
add
dec
ret
in
mov
std
pop
out
pop
or
mov
mov
sbb
test
sbb
fwait
and
and
das
jge
test
scas
sbb
vcvtdq2pd
pop
cltd
addb
test
data16
jo
jbe
test
xor
xor
das
mov
bound
pop
mov
fmuls
mov
fisubrl
and
pop
clc
test
push
popa
ret
inc
cmc
add
inc
pusha
and
in
mov
jl
mov
in
pop
mov
test
test
test
das
bound
add
mov
in
pop
test
lcall
test
jl
mov
bound
dec
mov
cwtl
push
movsb
cmp
repz
enter
test
sbb
dec
mov
jl
mov
mov
push
mov
hlt
jmp
int
test
pop
mov
xchg
in
out
mov
or
test
gs
adc
outsl
test
pop
call
je
mov
mov
insb
gs
or
or
loopne
jbe
dec
ljmp
lret
mov
mov
mov
add
sub
in
je
repnz
rorb
test
int
popf
stos
test
test
push
fwait
mov
imul
data16
jge
cmc
stos
test
arpl
sbb
cmp
mov
sbb
xchg
test
leave
sub
and
cmp
adc
and
ficoml
sub
mov
fcmovnb
and
inc
push
aaa
lret
dec
add
fnstcw
xchg
xchg
ret
stos
je
idivb
xor
test
in
gs
rorb
mov
andl
jbe
add
out
test
mov
rcr
cmp
adc
sub
ja
mov
mov
xchg
lcall
test
ret
fadds
mov
dec
inc
ss
xor
hlt
lods
mov
pusha
out
rcrl
sbb
xchg
test
mov
xchg
test
mov
lret
fsqrt
add
xchg
inc
xor
add
test
jne
test
jnp
stos
roll
xchg
fcmovnb
push
test
or
icebp
clc
add
jae
mov
or
mov
sub
or
arpl
mov
xor
mov
sub
mov
test
dec
rclb
or
xchg
pop
inc
sub
inc
popa
pop
mov
push
adc
push
cmpsb
rcll
and
andl
mov
cmpsb
aas
xchg
out
sub
ret
mov
inc
test
int
imul
pop
test
xchg
cli
cmp
xchg
inc
stos
xor
mov
cmpsl
and
dec
mov
sub
in
push
out
xor
loop
negl
test
xchg
xchg
sahf
mov
popf
xchg
test
inc
jae
test
in
rclb
aad
daa
dec
cmp
movsb
rcrl
cli
pop
cwtl
inc
adc
mov
pop
lret
push
and
mov
clc
in
test
lcall
test
ljmp
cmp
add
aas
and
test
pop
fdivp
roll
jle
in
ret
insb
adc
mov
outsb
test
mov
dec
fistpl
pusha
bound
ret
jb
adc
inc
pop
arpl
mov
xorb
sbb
pop
out
and
add
imul
push
iret
push
pusha
in
or
jge
enter
arpl
decb
mov
fwait
mov
sbb
jle
insb
test
pop
hlt
in
cltd
pushf
or
cmc
movsl
push
stos
xor
jle
jge
test
dec
jo
add
sahf
pop
lret
and
test
enter
dec
test
fwait
jecxz
inc
popa
stos
test
sbb
pop
cmp
shr
mov
test
test
lcall
mov
test
xchg
push
add
lret
jmp
cmp
mov
bound
mov
movsl
mov
mov
mov
in
movsl
fs
test
cmp
dec
inc
mov
test
and
shlb
mov
jne
mov
in
adc
ss
inc
pop
icebp
pop
loope
xorb
lock
pop
dec
push
sub
pop
sub
testl
sub
jmp
push
test
cmp
iret
add
xchg
cwtl
test
addr16
imull
xlat
dec
out
push
mov
inc
xor
iret
test
jge
xchg
rcrl
add
pop
add
xchg
xlat
int3
pop
xor
loopne
dec
cmpsl
stos
or
ja
add
aad
jmp
and
pop
test
adcb
movsb
aas
ja
lds
push
in
sbb
xchg
loop
ss
cmc
negb
mov
aad
test
and
out
in
loop
inc
adc
sub
xor
and
test
or
icebp
fldl
dec
repnz
and
and
leave
ja
dec
pop
int
cmp
loop
fidivs
aaa
int
mov
in
int
lcall
les
jo
test
sbb
shll
xor
test
inc
mov
loope
jmp
pop
movsb
jge
inc
stos
in
idivb
adc
xchg
or
xor
popa
fnstcw
mov
cmp
test
in
fildl
xchg
das
adc
shll
push
movsl
mull
pop
movsl
sub
xor
loopne
in
cmp
test
shlb
cmp
movsb
icebp
jmp
imul
lcall
mov
pusha
js
xchg
in
sub
pop
cmpsl
or
push
pmuludq
loope
cmp
pop
test
mov
adc
pop
in
mov
call
or
ljmp
mov
add
sub
jle
bound
test
xchg
dec
mov
jg
sbb
cld
pop
jnp
add
or
inc
dec
rcll
inc
sbb
jae
push
fidivrs
pop
test
jmp
enter
xchg
cmp
xchg
jg
divl
outsb
idivb
push
push
adc
les
icebp
mov
iret
test
fxch
mov
int
testb
ljmp
stos
or
test
negb
test
les
adc
pop
rcrl
movsb
push
imul
mov
test
icebp
jnp
test
out
ss
sbb
sarb
pop
test
imul
int
sahf
pop
mov
mov
mov
cli
sub
xchg
test
ss
out
dec
sbb
in
adc
jg
add
stos
jp
cmc
mov
jae
sub
cmpsb
cld
xchg
push
ret
in
mov
test
sbb
into
test
mov
push
jp
add
ret
loope
fsubrs
cltd
mov
in
cwtl
sub
out
add
xor
loopne
push
iret
inc
dec
jmp
mov
mov
inc
rcrl
lret
scas
test
lea
fwait
push
push
loop
mov
test
fldenv
mov
push
cwtl
mov
andl
test
and
in
xchg
test
xchg
add
cltd
mov
cmp
xor
lods
jnp
loop
outsb
dec
test
pop
sbb
xor
xchg
int
push
test
push
scas
and
shrl
movsb
push
lods
pop
sub
mov
mov
out
mov
fimull
test
inc
pop
push
es
jge
test
add
gs
sbb
mov
jmp
or
dec
mov
push
mov
add
test
mov
adc
mov
pushaw
mov
mov
test
cmp
lods
sbb
add
inc
imul
pop
or
test
inc
loopne
mov
test
xchg
push
ret
pop
and
sub
pop
mov
test
out
lods
inc
fadd
dec
test
mov
dec
test
mov
jmp
push
or
rsm
jmp
test
cs
mov
js
pop
popf
sub
out
inc
loop
sub
sbb
add
shll
test
mov
dec
test
cmp
push
mov
dec
lods
xchg
mov
xchg
mov
test
ljmp
lock
lahf
sub
and
push
cld
or
lods
mov
mov
test
dec
shr
inc
sub
je
imul
jl
mov
mov
and
dec
adc
xor
jp
test
lcall
inc
dec
out
inc
dec
sub
lahf
sbb
xor
dec
pop
fimull
lret
or
hlt
sub
arpl
cld
mov
dec
cmpsb
mov
repnz
les
addr16
imul
test
or
arpl
das
sub
adc
jecxz
pushf
adc
mov
fxch
cwtl
push
mov
sbb
adc
sub
inc
bound
filds
arpl
test
dec
stos
pop
test
pusha
adc
loopne
test
mov
filds
mov
outsb
call
cmpsl
xor
loope
imul
out
jne
test
loopne
cli
sub
cld
xor
addr16
push
popf
sub
divb
test
test
popf
lods
sar
mov
cmpsb
sbb
and
cli
mov
es
mov
popf
loopne
out
dec
push
jae
jl
or
mov
adc
in
lock
enter
test
or
or
mov
lret
dec
add
pop
test
negl
or
mov
test
jp
mov
cmpsb
xchg
arpl
les
test
mov
adc
and
sbb
sub
cmp
out
cmp
sahf
pushf
mov
dec
sub
in
sub
adc
movsb
aas
sbb
mov
jmp
or
jnp
sbb
push
movsb
pushf
or
ds
adc
mov
and
cmc
sqrtps
int3
loop
icebp
xchg
cli
test
sub
imul
shll
sub
test
fbstp
cwtl
jecxz
push
js
test
dec
pop
sahf
fisubl
sub
inc
dec
and
test
outsb
ret
leave
stos
adc
out
add
jmp
inc
repz
pop
xchg
dec
push
jmp
cmp
sub
lea
pop
fbstp
test
push
mov
rcl
adc
loop
mov
add
ja
lods
inc
cmpsl
cmp
and
sub
jo
lret
js
mov
mov
je
aad
stos
int3
sbb
mov
adc
dec
mov
in
push
xchg
and
es
or
xchg
test
mov
dec
movsb
jno
push
push
xor
add
mov
hlt
mov
les
test
daa
pop
xor
push
or
loop
inc
repz
mov
adc
push
stos
adc
es
aad
xchg
lock
push
xchg
loop
inc
cli
pop
xor
cmp
repz
mov
data16
adc
cmp
test
les
test
xchg
icebp
adc
and
mov
movsl
cmp
pushf
test
mov
adc
call
push
cmp
loop
test
cltd
leave
lds
pop
add
aaa
lahf
push
in
mov
xor
divl
repz
push
dec
pop
push
in
into
inc
pop
jecxz
leave
pop
jg
jmp
scas
mov
sahf
mov
lds
add
adc
in
xchg
sbb
arpl
inc
sbb
mov
test
jecxz
mov
and
cld
out
cmpsl
loope
push
add
jmp
mov
and
xor
addl
sbb
xor
cmp
bound
push
xor
mov
test
mov
xor
and
shll
repnz
dec
xchg
mov
xor
xchg
sahf
movsb
mov
push
pushf
cmpsl
in
inc
lods
sti
negb
fscale
sub
int3
out
jmp
add
mov
mov
dec
push
xor
sub
fldt
mov
test
or
test
test
add
bnd
or
in
in
or
and
or
pop
pop
je
call
jge
xchg
cmp
aaa
mov
mov
cld
call
mov
lret
fucomip
je
in
cmp
dec
sub
sahf
out
xor
sub
test
and
in
into
cmc
cmp
ficoml
pusha
in
push
loopne
push
lea
scas
adc
repnz
mov
in
pusha
call
aaa
mov
cmpsl
mov
test
xor
xor
popa
cli
in
into
in
cwtl
xlat
loopne
xchg
xchg
xchg
and
inc
and
jl
lcall
test
cld
dec
push
dec
pop
push
aaa
movsb
shlb
pop
mov
test
mov
test
jae
adc
dec
or
pand
jp
repnz
or
aas
sub
cmp
int
and
cmp
inc
xor
pop
enter
inc
popf
lret
pusha
repz
mov
ret
data16
add
int
push
cmpsl
pop
and
daa
cmp
loopne
or
mov
inc
adc
mov
mov
nop
flds
mov
mov
out
test
call
pop
sub
les
mov
inc
mov
mov
in
clc
dec
mov
ss
in
fiadds
pop
mov
cmp
or
arpl
xchg
push
sbb
cltd
pushf
loope
nop
cmpsb
push
sti
mov
xchg
test
sub
sub
int
xor
or
mov
push
cmp
mov
mov
test
inc
rol
push
mov
xor
mov
mov
mov
repnz
enter
scas
ja
lea
shlb
loope
cwtl
cli
lahf
stc
inc
push
lret
inc
xorl
out
push
inc
shlb
int
dec
lret
inc
cmp
jne
inc
bound
and
pusha
test
lods
ficoml
dec
jp
sub
lret
jmp
shrl
daa
daa
mov
movsb
loop
rcrl
add
mov
test
in
int3
mov
mov
test
adc
cmp
cmp
test
sub
dec
xchg
xchg
repnz
rcrl
bound
jmp
pushf
ja
pop
mov
pop
adc
jg
ds
ret
icebp
or
adc
test
xchg
xor
push
enter
test
push
or
inc
cli
fsubrs
cwtl
push
gs
adc
sbb
leave
sub
lcall
loopne
pusha
or
lods
repnz
insb
xchg
movsl
push
xor
in
mov
and
mov
inc
jl
cwtl
fstps
imul
dec
test
cmc
mov
mov
mov
adc
les
out
test
push
add
movsb
test
sbb
pop
fwait
jne
test
lds
push
and
test
xor
push
shrd
test
ret
sub
movsl
jne
pop
in
cltd
ljmp
mov
inc
test
xchg
imul
rorl
pop
shll
movsl
inc
mov
into
and
icebp
movsb
sub
aas
inc
and
cli
test
sub
dec
fdiv
xlat
fnstenv
call
dec
push
mov
xor
rorl
jbe
dec
sub
popf
in
mov
test
dec
sub
repnz
mov
pushf
mov
xor
addr16
xor
test
or
mov
xchg
or
arpl
xor
inc
sub
xor
test
xor
dec
xchg
pop
test
pop
sbb
mov
mov
cld
inc
mov
add
add
dec
xchg
adc
sbb
cmpsb
pusha
mov
fwait
in
retw
test
leave
cld
test
repz
and
xor
bound
sub
sbb
xchg
push
out
cmp
push
sahf
in
loope
sub
push
mov
jbe
lret
jl
push
cli
int3
repz
out
mov
mov
repz
dec
add
mov
into
mov
sub
or
lret
inc
cmpsb
pusha
lcall
andl
ret
xchg
cwtl
mov
sbb
inc
jge
test
aas
xchg
test
mov
les
inc
int3
in
test
lods
cli
scas
imul
arpl
push
stc
out
rorb
sarb
cmc
or
jnp
mov
add
test
jbe
cli
push
sub
lret
and
cwtl
pop
adc
int3
dec
jge
movsb
mov
or
xor
push
mov
jo
sub
mov
sbbl
loope
push
mov
mov
out
bound
jecxz
call
mov
into
sub
mov
mov
inc
pop
mov
scas
data16
hlt
addr16
push
mov
or
inc
push
jbe
and
push
dec
imul
pop
mov
orb
cwtl
loopne
fs
clc
dec
into
dec
mov
jnp
cmpsl
lds
leave
sahf
mov
cmp
jb
xor
or
sar
cltd
arpl
inc
mov
mov
call
or
test
add
ret
add
movsb
sbb
cli
mov
mov
icebp
sahf
movsl
xor
sbb
adc
xchg
test
stc
leave
pushl
push
shll
dec
and
add
jecxz
fldt
shl
add
xchg
ficompl
leave
jns
mov
mov
push
in
adc
xchg
mov
dec
xchg
arpl
xlat
push
test
mov
jbe
bound
sbb
cli
mov
test
dec
test
xor
xchg
mov
push
bound
repz
cmp
aad
pusha
and
xor
loope
mov
ficoml
mov
insb
and
pop
push
es
xchg
lret
jmp
in
test
cli
testb
mov
sub
lock
aad
pop
cmpsb
mov
mov
stc
mov
ftst
mov
xchg
idivl
xchg
and
orb
or
or
mov
test
mov
add
mov
lcall
aad
scas
out
adc
jo
test
dec
and
movsb
in
push
cmpsb
mov
fnstsw
ret
sub
xchg
push
mov
les
dec
push
jae
cmp
mov
das
mov
sbb
jle
add
lock
movsb
pusha
test
js
sbbb
test
push
lock
jecxz
cmp
test
sbb
into
mov
es
cmpsl
test
fcos
jno
push
push
sub
scas
xor
lcall
push
dec
arpl
mov
out
jg
or
or
out
test
stos
jle
arpl
mov
mov
mov
shrl
and
sub
or
gs
lret
mov
dec
test
pop
adc
rcrb
test
cmp
jne
test
mov
test
test
ret
jl
enter
xchg
xor
sbb
cmp
cld
push
push
sub
pop
or
mov
mov
cmp
sub
mov
call
xchg
and
push
bound
das
jecxz
fidivrs
xchg
add
push
jnp
adc
xchg
pop
sahf
and
test
and
mov
add
xchg
test
lahf
jle
clc
arpl
lcall
test
lods
xchg
pop
inc
pop
jbe
rcll
data16
adc
cmp
lret
mov
xchg
bound
pop
lret
inc
cmpsb
jb
mov
scas
mov
out
test
jmp
push
mov
pop
out
mov
fcomi
movswl
pusha
test
pop
int3
jo
lahf
les
mov
mov
cmp
sbb
pop
jns
lret
test
stos
jbe
mov
mov
fldenv
or
es
test
sub
jae
push
xor
clc
push
test
call
out
inc
cmp
push
sar
mov
pusha
sbb
iret
dec
test
mov
sub
test
mul
and
jmp
dec
cmp
in
into
mov
lock
jne
or
test
clc
sbb
dec
dec
popa
test
fimull
pushf
and
lods
mov
test
mov
dec
in
xchg
jbe
jmp
mov
add
push
dec
pop
mov
lret
inc
out
mov
pop
or
push
or
es
jns
call
leave
and
mov
imul
orl
sub
cmpsl
jo
mov
mov
cmpsb
loopne
pushf
xchg
incb
push
sti
jle
xchg
dec
mov
mov
test
insb
jne
pop
pop
push
xor
pusha
sub
mov
or
test
inc
sub
inc
pushf
push
gs
lcall
pop
pusha
test
mov
loop
lahf
popa
test
mov
enter
cmp
add
out
int3
ss
ja
adc
xchg
int
pop
arpl
bound
cmpsb
inc
out
mov
or
xchg
push
dec
mov
test
add
test
xor
mov
lret
cmpsl
insb
out
add
test
les
and
sbb
cwtl
jae
test
dec
xor
jns
pop
adc
cwtl
push
or
and
out
lahf
mov
jbe
negb
ret
and
adc
inc
test
xor
push
test
or
xor
ror
mov
cmp
or
and
loope
arpl
or
push
mov
mov
mov
ljmp
push
imul
mov
test
leave
cmp
cmc
insb
popa
test
sbb
mov
mov
mov
pop
push
cmp
push
in
mov
sub
cmpsb
shlb
enter
xor
inc
js
push
test
push
mov
mov
sbb
mov
fs
sub
inc
pop
addb
push
cmp
sbb
pop
dec
popf
test
adc
lret
test
jge
xchg
test
cmp
mov
sbb
dec
jno
in
sub
inc
pop
mov
inc
sahf
lcall
pop
sub
test
mov
lret
pop
test
test
rolb
movsl
stos
pop
pushf
mov
pop
jg
decl
sbb
and
mov
jae
xor
incb
mov
lcall
jecxz
dec
jp
aam
data16
and
jmp
mov
mov
roll
cmpsb
xchg
mov
mov
aad
test
inc
je
mov
and
sbb
xchg
or
cmc
jp
mov
ja
and
jne
les
push
mov
clc
ret
fistl
in
stos
jne
cmp
xor
push
inc
jbe
lds
dec
ret
or
fdivp
fs
sbb
arpl
jmp
call
test
push
mov
adc
mov
mov
popa
or
fldl
mulb
test
jmp
add
mov
or
inc
jecxz
or
jge
push
jnp
ja
mov
dec
arpl
ret
cmpsl
sbb
fnstenv
cmp
mov
xchg
add
and
test
sub
and
inc
fucomi
out
or
mov
pop
dec
aam
sbb
and
bound
xchg
inc
push
lods
aas
into
syscall
dec
sbb
or
flds
or
cmpsb
mov
adc
mov
sub
fcompl
stos
movsb
push
cli
dec
out
fs
mov
pop
test
fsubp
cmp
imul
test
cmp
sub
test
fisubrl
pop
rcll
test
cltd
sbb
scas
or
in
sub
cli
loop
mov
test
cltd
push
arpl
dec
mov
mov
clc
inc
test
jge
shl
xchg
xchg
lcall
jmp
cmp
sub
cmc
sub
and
push
lock
imul
inc
daa
mov
sub
pusha
or
test
pop
mov
push
xchg
lea
xchg
pop
test
jns
push
sbb
sbb
test
cltd
movsl
pushf
add
into
std
stos
or
int
add
inc
sub
push
stc
clc
in
ss
test
adc
test
push
rcrb
mov
repz
lock
loopne
dec
or
daa
pop
test
xchg
in
and
imul
mul
test
mov
movsb
pop
xchg
sbb
mov
cli
test
repnz
and
or
inc
add
sub
aad
test
pusha
add
xor
inc
movsb
cmp
fnstenv
push
pushf
test
leave
mov
pop
dec
lea
imul
rcll
jg
cltd
mov
xor
pop
movsl
std
das
test
push
bound
inc
cmp
xor
sbbb
sahf
jecxz
pop
popa
subb
pop
adc
test
bound
or
jmp
out
stc
lods
loop
push
test
movsb
out
push
packssdw
and
mov
cwtl
mov
les
fdivr
test
xchg
lret
pop
fisubrl
xchg
orb
popa
and
mov
inc
dec
fisubrl
icebp
sbbl
imul
sub
leave
xor
sbbb
inc
mov
test
and
clc
xchg
dec
lret
popf
push
mov
popa
inc
xor
push
or
test
cmp
mov
dec
mov
in
ja
outsb
mov
lahf
push
xor
ret
bound
sbb
int3
fs
test
push
jmp
test
mov
cltd
sbb
pop
data16
mov
push
lcall
pop
jle
mov
repnz
ret
test
xchg
aad
mov
sbb
push
mov
mov
mov
push
mov
and
sub
fnstcw
mov
es
divl
dec
test
xchg
dec
and
test
nop
inc
jecxz
jecxz,pt
dec
mov
adc
dec
in
test
sbb
pop
outsb
adc
dec
into
subb
add
adc
sub
sbb
push
mov
test
pop
dec
sahf
jle
mov
mov
add
inc
jno
ror
test
dec
es
mov
sbb
loop
push
sti
test
loopne
out
xor
stos
icebp
mov
mov
sbb
cmp
xor
and
mov
mov
shlb
arpl
into
mov
imul
incl
mov
xchg
adc
mov
dec
pop
std
stos
test
mov
rolb
test
and
in
rcl
test
dec
and
pushf
mov
aam
arpl
mov
xor
fidivs
mov
out
add
mov
mov
dec
mov
or
dec
arpl
test
data16
mov
outsl
lds
loope
jb
nop
mov
xchg
adc
mov
add
sub
push
push
rcrb
in
xor
jecxz
rcr
and
mov
or
mov
leave
test
loop
rorb
scas
and
movsb
dec
call
push
testl
imul
pop
test
andl
cmp
push
adc
dec
test
sbb
inc
or
cmp
cmp
test
mov
movsl
pop
mov
dec
or
cmp
and
es
in
ja
cs
inc
icebp
test
movsl
sbb
orl
data16
insl
mov
sub
xchg
mov
dec
xchg
cmp
sarl
xchg
test
lcall
jmp
in
das
mov
fwait
cmpsl
scas
pushf
mov
test
icebp
shlb
and
adc
popa
in
cltd
and
loope
or
add
in
test
mov
fldcw
and
lods
cmp
test
xor
sub
scas
mov
bound
popf
jmp
inc
subb
mov
popa
xchg
mov
add
imul
or
push
iret
sbb
dec
inc
imul
in
mov
test
adc
and
cld
in
pop
dec
cmc
jmp
mov
cmpsb
test
xchg
ja
sahf
push
pop
jecxz
sub
mov
clc
rorl
dec
addr16
rolb
or
dec
sub
ret
inc
jb
int
cmp
xchg
mov
sbb
sbb
test
popf
mov
mov
imul
pop
enter
inc
add
dec
stos
inc
and
pop
xchg
xor
mov
insl
daa
push
cmpsb
pushf
test
lods
fisttps
inc
dec
daa
sbb
jae
js
mov
xchg
sub
xor
lret
or
push
sbb
mov
cs
mov
flds
add
jg
fiadds
lret
pusha
mov
js
cmp
jbe
imul
aam
jg
and
sbb
lret
mov
or
testl
xchg
pop
jge
hlt
or
sahf
jo
movb
jle
mov
dec
jge
push
dec
mov
cwtl
dec
sub
out
cltd
cli
outsb
and
pop
into
sub
jns
mov
inc
aas
iret
jecxz
enter
movsl
add
pop
pop
inc
adc
test
insb
lds
loopne
or
sbb
mov
int
add
out
pop
cld
aam
inc
loop
loope,pn
movsl
and
mov
int3
pop
popa
add
sub
aas
xor
mov
movsl
std
test
cmp
mov
fdivs
imul
xchg
inc
xchg
mov
xchg
jg
mov
jne
test
inc
push
mov
outsl
add
mov
test
int
xlat
pusha
push
and
scas
mov
mov
cmp
mov
push
daa
add
add
and
jecxz
imul
call
push
add
mov
mov
lret
push
ret
xor
ret
addr16
clc
mov
cmp
jne
in
xor
sbb
push
mov
fwait
mov
xchg
pushf
fidivl
cli
test
loope
sub
jmp
or
sbb
enter
rorb
jo
add
push
test
ret
pop
pusha
pop
fcmovnu
int
cmovle
mov
lcall
mov
test
shl
rorb
fidivrl
push
enter
test
ja
add
inc
add
pop
mov
mov
in
jmp
cmp
mov
iret
jae,pn
push
push
out
pop
lcall
jmp
cmp
mov
aad
pop
incl
push
cli
or
lds
fcmovnu
jne
xchg
mov
test
imul
pop
test
add
out
loopne
cli
mov
lds
outsl
les
jno
repnz
mov
mov
mov
shrb
pop
mov
jno
cltd
je
add
or
push
mov
sbb
push
lea
mov
inc
sbb
test
mov
push
dec
cltd
stos
les
mov
and
add
out
test
rclb
js
cli
adc
xchg
cmpsl
sub
xchg
push
es
test
scas
xchg
cmp
sub
mov
addb
ret
leave
and
std
ret
cmp
test
mul
imul
jne
xchg
sbb
shrb
xor
test
push
lcall
jbe
and
jnp
inc
leave
inc
test
int
push
in
hlt
sub
stos
mov
sub
jle
sub
les
pop
xor
push
sbb
test
repz
cwtl
mov
in
or
pop
loopne
pop
dec
stos
outsb
int
and
test
push
repnz
push
into
mov
xchg
mov
pushf
cmpsb
imul
popf
sarl
movl
mov
outsb
lods
cmpsb
shlb
imul
out
pop
andl
sahf
push
lds
or
push
inc
xchg
fisubrl
mov
dec
imul
addr16
out
cmp
stos
jae
mov
mov
pop
mov
cmp
icebp
xchg
call
push
inc
jb
add
mov
enter
adc
pop
pop
cmpsl
or
mov
inc
cld
ds
cmpsl
and
enter
outsb
sub
inc
in
and
incb
or
pop
test
fistpl
sbb
sbb
mov
mov
pop
test
ja
leave
add
pop
scas
ret
adc
test
lds
sbb
cmp
ljmp
or
test
in
pop
mov
int3
ret
das
cmp
mov
test
icebp
loopne
mov
sbb
rcll
loopne
in
dec
test
xchg
or
pop
pusha
pop
test
out
jnp
arpl
int3
cltd
mov
xorb
xor
in
hlt
scas
dec
mov
inc
bound
push
xchg
aas
movsb
test
aaa
sub
sub
notl
inc
mov
clac
and
cltd
fs
xchg
adc
xchg
jae
and
push
fdivrp
add
add
sbb
jmp
mov
loope
movsl
lea
aam
pop
mov
lea
inc
xchg
mov
jg,pn
mov
pop
test
pop
mov
jp
jbe
inc
clc
icebp
imul
bound
pop
subb
dec
jb
pop
xchg
neg
jp
lods
test
into
mov
ret
push
add
bound
insb
sub
adc
xchg
in
clc
mov
lea
test
addr16
and
fildll
test
sahf
rcll
push
xchg
inc
lret
lcall
test
or
cmp
stos
test
and
sub
lret
cmc
pop
arpl
scas
es
test
clc
cmovp
sub
mov
into
mov
xchg
cmp
push
cmp
mov
fstpt
pushf
flds
dec
mov
sti
test
mov
add
movsb
out
ret
ret
sbbl
stc
test
xchg
sbb
xchg
pushf
loopne
cmp
shrl
stos
pop
mov
xchg
test
push
sub
in
and
adc
test
add
dec
outsb
fucomip
lret
xchg
cmp
jnp
and
xchg
cmp
es
mov
lea
pop
cld
adc
add
das
lds
xchg
mov
push
stos
pusha
leave
and
pop
jae
mov
jmp
xor
jg
xchg
leave
lcall
inc
dec
xchg
fisttps
jne
mov
jle
xchg
movsb
cmp
std
insl
xchg
adc
and
xchg
sub
xor
test
xchg
les
test
pushf
and
lea
mov
inc
filds
jb
fadd
aad
push
cmpsl
and
imul
mov
inc
or
adc
jl
or
cwtl
stc
jo
std
push
mov
adc
test
sti
pushf
xchg
xchg
hlt
push
cmpsl
inc
stos
movb
pop
in
lock
or
test
sbb
xchg
std
or
sbb
test
cmp
mov
stc
xchg
fwait
test
and
pushf
arpl
mov
mov
std
movsb
pop
adc
testb
pop
sub
test
pop
inc
dec
inc
shrb
xchg
mov
stos
arpl
mov
jmp
movsb
and
in
aad
rorb
jnp
cmpsl
cmp
enter
inc
mov
xor
and
or
adc
push
mov
add
packsswb
jb
pop
lods
mov
or
daa
in
cltd
mov
test
nop
inc
aad
mov
inc
xor
inc
lea
das
mov
imul
test
fdivr
sbb
jno
xor
scas
sbb
fsubrs
jg
or
in
test
mov
adc
test
mov
arpl
push
jns
repz
mov
push
sub
dec
arpl
addr16
jae
sub
push
test
mov
or
cli
nop
sarl
loop
out
add
mov
jb
js
test
sub
arpl
jmp
repz
test
adc
and
sbb
cmp
enter
or
push
fsts
stos
push
jo
and
jmp
lods
mov
mov
dec
and
inc
or
pop
ud1
adc
push
jp
aad
clc
inc
or
test
cmp
push
fiaddl
jbe
sub
push
insb
mov
fadd
push
jo
mov
out
scas
lds
adc
arpl
push
cmp
aas
insl
dec
mov
dec
inc
enter
push
negb
and
and
nop
dec
addr16
mov
pop
mov
or
test
mov
jmp
mov
xlat
pop
nop
sbb
jecxz
mov
push
aaa
test
push
call
mov
mov
pop
or
jnp
int
lcall
or
aad
xchg
add
sub
stos
mov
fmuls
dec
cmp
test
pop
mov
inc
mov
pop
fld
jg
test
clc
loopne
outsl
jae
in
cmp
scas
lcall
push
fists
sbb
repnz
aaa
push
enter
adc
cmpsl
and
xor
test
out
mov
jne
test
mov
outsb
mov
inc
movsl
xchg
dec
stos
mov
into
lds
in
out
ds
test
call
jmp
pop
loop
add
test
sbb
lea
lods
pop
out
call
mov
movsb
imull
in
dec
push
mov
or
mov
mov
add
loope
cltd
andl
sub
xchg
cmp
flds
lock
inc
rcrb
and
clc
xchg
bound
roll
fcomip
scas
test
jae
incb
fldt
call
jge
and
shll
repnz
loopne
or
pop
xor
arpl
mov
xor
mov
xor
adc
lock
pop
mov
test
jb
lret
pop
mov
arpl
push
xchg
xor
mov
mul
lahf
jmp
mov
mov
adc
cs
dec
jg
mov
movsb
jae,pt
outsb
adc
mov
mov
test
inc
xchg
cmp
mov
test
or
lahf
sarb
movsb
lret
cmpsb
sbb
movsl
insb
jecxz
mov
cmpb
ljmp
test
mov
int3
test
jge
divb
lahf
in
loope
test
mov
lret
test
xchg
xchg
call
test
or
mov
lods
xor
mov
sub
bound
add
call
loop
mov
push
xchg
shlb
inc
cmp
in
jns
enter
jbe
xchg
inc
lret
mov
or
adc
cli
mov
out
jl
mov
lahf
dec
dec
in
xchg
or
cs
sahf
scas
dec
test
sbb
imul
loop
mov
cmc
dec
lret
stc
jbe
in
fs
or
movsb
ret
pop
inc
push
mov
in
xor
pop
aaa
xchg
test
mov
iret
test
jecxz
in
test
fistl
mov
aaa
sub
push
lahf
xchg
and
jbe
nop
test
cmpsb
xchg
jmp
mov
lods
pusha
xor
clc
aam
mov
orb
test
cli
pop
xchg
jmp
jbe
pop
je
int3
mov
mov
mov
cmp
dec
and
jbe
int3
mov
pop
in
and
push
dec
cs
adcl
fiaddl
xlat
lcall
sbb
clc
aaa
sbb
sbb
push
xchg
lcall
lods
arpl
mov
in
pop
stc
mov
les
movsb
xchg
or
fucomip
mov
ficoml
fisubrl
scas
ljmp
push
lds
pop
xor
lea
xchg
dec
fistps
in
mov
mov
add
mov
mov
lcall
ret
xchg
out
loope
lds
jmp
lods
test
mov
mov
xor
mov
push
in
test
inc
jl
xor
xchg
jp
in
jecxz
or
xchg
test
stos
and
nop
and
adc
jecxz
xchg
push
cwtl
int3
mov
dec
idiv
pop
xor
mov
dec
sbb
data16
ret
mov
jmp
ljmp
scas
repnz
test
sahf
lret
int3
loop
test
pop
popf
cld
pop
dec
add
lods
add
cmpsl
pop
stos
int
or
jecxz
fildl
les
lea
push
jl
test
aaa
mov
mov
mov
popf
jbe
inc
push
insl
mov
out
movsb
dec
add
icebp
xlat
mov
test
mov
add
test
sbb
pop
mov
insb
cmc
jmp
fsubrs
bound
gs
and
lea
les
sti
mov
lret
push
test
jl
xchg
cmpsl
pop
test
or
cwtl
jge
pop
pusha
scas
mov
inc
lods
mov
adc
sbb
shrl
imul
popa
out
jle
aad
cli
mov
andl
movsb
dec
push
daa
cmp
xchg
les
in
inc
mov
cmp
push
test
xor
in
xchg
xchg
cmp
lret
popa
pop
test
mov
into
push
sbb
incb
data16
test
lret
stc
loop
xchg
test
idiv
scas
negl
xchg
fsubs
sub
sti
mov
jl
dec
out
lret
pop
mov
lea
dec
out
fwait
in
inc
pop
adc
and
push
dec
popf
ljmp
popa
jle
mov
les
test
jg
out
push
push
test
jecxz
test
sbb
or
inc
test
test
push
movsb
fwait
mov
lret
cmp
xlat
test
xchg
cmc
pop
mov
test
data16
mov
out
mov
movsb
mov
popf
lcall
rcrb
cmp
xor
sub
mov
movsb
movsb
mov
loope
les
or
mov
xor
ja
test
iret
dec
fiadds
dec
ja
test
inc
mov
jmp
bound
in
cmp
push
mov
test
mov
mov
xchg
call
xchg
imul
mov
pop
xchg
mov
inc
mov
pushw
call
out
add
lds
dec
xchg
fidivrl
repnz
push
test
ja
insb
bound
ficoml
add
mov
loope
jnp
inc
mov
inc
sbb
lahf
push
out
jb
add
test
ja
and
add
lahf
push
pushf
xor
adc
dec
in
test
jge
fisubrl
jns
lret
lcall
stos
je
push
jecxz
mov
cltd
mov
sub
lds
std
frstor
stos
stos
and
test
xchg
les
pop
pushf
lock
mov
or
stos
and
scas
adc
or
pop
mov
in
out
cmc
push
fiaddl
fsubrl
and
bound
cs
loope
xchg
test
cmc
xchg
gs
mov
int3
adc
les
ffree
outsl
arpl
jmp
stos
xchg
dec
movsl
mov
or
inc
incb
test
ss
xchg
repz
out
in
dec
movsb
cmp
rclb
mov
push
sbbl
inc
lret
jne
mov
cmp
pop
arpl
jmp
push
dec
pop
sbb
add
das
test
mov
jnp
cmp
test
jae
dec
test
push
sbb
mov
outsl
test
mov
inc
ret
test
sbb
test
inc
mov
test
fstps
fisttpl
jno
adc
mov
and
xchg
xchg
test
mov
cmc
stc
mov
mov
inc
or
pop
dec
in
mov
test
repnz
dec
in
mov
mov
rcll
or
es
popf
dec
push
test
insl
and
pop
push
jne
dec
jns
and
xor
mov
push
add
enter
aaa
test
pop
sbb
arpl
sti
push
test
subl
aas
ja
mov
add
sub
enter
dec
icebp
ja
xlat
hlt
mov
inc
movsl
bound
leave
pop
sub
mov
stos
lcall
int3
orl
adc
loope
lret
testb
xor
push
fdivl
dec
test
pop
ja
loop
insl
int3
test
ret
in
movsl
fsqrt
sbb
add
xor
dec
xchg
loopne
mov
adc
jmp
dec
and
in
dec
push
xlat
ja
movsl
rcrb
fadds
pop
pushf
mov
sti
or
scas
stc
adc
and
push
push
lods
sub
test
imul
add
sbb
and
lds
mov
adc
xor
inc
sbb
filds
mov
or
imul
sbb
adc
aaa
and
fwait
pop
dec
and
jmp
mov
in
fnstcw
aaa
jb
test
push
fs
test
dec
adcl
bound
mov
test
pop
rorl
jno
sbb
out
fcomi
in
or
dec
or
loop
push
and
test
inc
mov
lds
int
push
add
dec
je
jns
shrl
and
cmp
out
test
inc
lahf
lds
out
dec
pop
push
into
in
shl
call
test
mov
dec
or
cli
shll
cmpb
inc
mov
dec
mov
test
pop
popa
xchg
sub
lods
fld
ret
xor
stos
popf
mov
mov
not
or
stos
imul
mov
outsl
cmpsl
out
in
push
bound
mov
clc
mov
repnz
lret
test
mov
inc
lahf
test
cmp
icebp
test
ret
out
int
inc
and
push
test
dec
xchg
dec
pop
or
out
das
cmp
add
fprem
push
mov
push
jnp
xor
cmpsb
mov
fbld
inc
lcall
mov
int3
xchg
cli
test
repnz
test
or
mov
les
dec
into
push
dec
mov
dec
xor
mov
insb
std
test
lods
out
sbb
fiaddl
inc
notb
add
into
adc
jl
mov
pop
test
repnz
mov
test
cmp
test
call
mov
lret
out
test
fisubrs
mov
add
or
and
sbb
lods
test
lock
push
mov
xor
cmp
inc
mov
push
push
arpl
push
out
mov
lcall
lods
rol
fists
mov
add
pusha
repz
mov
jl
pop
sub
xchg
in
mov
das
mov
push
call
lea
stos
rcll
out
test
sbb
popf
mov
cmp
dec
or
js
daa
int
outsb
and
xor
cmp
xchg
mov
test
mov
stos
clc
int3
test
xor
test
sub
test
daa
inc
or
mov
loop
cmp
dec
lret
mov
mov
jle
pop
adcb
addb
lcall
push
test
cmpsl
push
icebp
test
mov
lcall
mov
int
movsl
mov
pop
ret
inc
cmp
mov
lock
shll
mov
outsb
push
dec
fnstcw
arpl
sub
mov
mov
les
cmpsl
mov
xchg
leave
mov
stos
and
or
cmp
dec
add
data16
push
cmp
stc
rolb
into
das
movb
inc
test
cld
inc
test
popa
lds
shll
je
pushf
inc
push
ret
mov
aam
adc
in
pop
mov
add
adc
or
adc
xchg
insl
lret
negb
daa
stos
bound
mov
xchg
jne
test
mov
or
les
lock
jecxz
test
pushf
es
mov
bound
pop
xchg
jne
aaa
in
pop
cmp
arpl
cmp
test
cmpsl
lock
mov
mov
lods
faddp
loop
lcall
int3
mov
repz
pop
test
rcrl
fs
out
lcall
sahf
lahf
xchg
jp
test
rcr
leave
pop
xchg
dec
inc
xchg
xchg
ds
pushl
xchg
pop
mov
sbb
cld
sbb
into
test
loope
ja
hlt
aas
mov
push
ljmp
aam
push
pop
repnz
ret
sahf
mov
test
andb
loop
adc
mov
inc
or
test
lds
pop
scas
mull
push
cmp
test
in
enter
test
jae
inc
xor
cmc
aas
repz
or
jbe
inc
imul
shrl
mov
aam
rcll
loope
lock
inc
sub
sbbl
sbb
inc
xor
pusha
shll
cmpsl
test
inc
imul
das
mov
sub
mov
daa
arpl
test
xor
push
arpl
mov
fidivl
dec
mov
push
test
ljmp
pop
in
add
cmp
test
loopne
pushf
jmp
ret
jp
pop
testb
inc
xchg
aam
rcl
mov
fwait
jmp
jbe
movsl
jecxz
ds
pop
push
jle
dec
push
shrb
les
test
rorl
mov
mov
rolb
int3
sub
jae
adc
lret
test
negb
and
xlat
push
inc
cli
or
test
ljmp
xchg
repnz
xchg
test
jge
adc
lcall
mov
mov
filds
dec
add
mov
repnz
movsl
mov
ret
mov
mov
test
mov
movsl
loop
fsts
and
mov
xchg
adcb
or
jecxz
add
and
sahf
call
test
data16
push
insb
push
pop
add
jecxz
mov
push
bound
movsb
cmc
or
sub
add
dec
and
dec
lcall
xchg
jmp
or
in
test
insl
jl
ret
mov
mov
fdivrs
mov
divl
cwtl
xchg
mov
mov
xchg
cmp
lock
loop
cmp
jp
mov
xor
test
xchg
sbb
test
or
loop
dec
mov
stc
xchg
test
ja
into
push
inc
sbb
shll
loope
test
dec
ja
sbb
clc
fcomps
mov
jnp
xchg
into
bound
insb
adc
pop
pop
inc
pop
sub
add
cs
adc
insl
adc
inc
xor
fcoml
dec
mov
push
add
inc
testb
data16
or
fstp
clc
sbb
add
pop
lods
sbb
je
sti
rorb
orb
lds
cmp
inc
test
mov
xchg
mov
mov
mov
incb
fimull
and
add
dec
hlt
mov
rcll
mov
lds
push
push
xor
jl
sbb
xor
inc
clc
adc
pop
in
fabs
and
lret
adc
xor
adc
sbb
xchg
test
sti
inc
adc
lret
lcall
call
fdivrl
test
jbe
and
xor
cltd
mov
adc
dec
test
ja
dec
test
inc
cli
mov
mov
mov
test
loopne
push
movsb
push
pop
out
xchg
pop
sub
push
mov
cmpl
les
adc
mov
inc
xor
adc
pusha
push
lahf
clc
mov
dec
test
xor
inc
add
push
sbb
xchg
popa
stos
ftst
test
lret
icebp
xchg
mov
jle
test
or
scas
mov
push
test
pushf
insb
mov
pop
xor
sub
movl
test
test
enter
cwtl
and
test
ljmp
mov
xchg
mov
outsl
test
push
and
movsl
test
lea
jns
mov
movsb
or
test
lcall
cmp
js
shlb
in
mov
xchg
push
addb
repz
xor
lods
scas
and
rol
and
lds
mov
stc
fwait
cmp
loope
and
movsb
fsubr
cltd
lret
les
rorb
leave
aaa
xchg
mov
mov
and
sbb
movsb
xchg
jnp
imul
leave
test
repnz
and
add
xchg
int
sub
mov
mov
shr
inc
ret
test
jp
dec
arpl
push
ljmp
cwtl
push
fxch
test
xchg
lds
cli
sbb
pop
xchg
pusha
push
test
lret
mov
test
movsl
push
in
jb
ss
cmc
mov
pushf
mov
lcall
test
jl
pop
sbb
mov
shl
stc
mov
test
dec
sub
out
les
dec
aaa
and
loope
loop
mov
sbb
dec
sub
test
push
xchg
imul
mov
or
xchg
aam
adc
sbb
rorl
mov
cmp
outsl
aaa
enter
test
add
jbe
loop
fildll
xchg
bound
les
pop
jle
jo
lods
or
cmp
jae
fldt
movsl
and
xor
arpl
push
icebp
add
jnp
inc
cs
and
jge
lds
test
movsl
sub
lret
out
push
test
or
mov
int3
sbb
xor
imul
sub
test
inc
xchg
test
je
int
sbbb
loop
addr16
dec
movsl
cmp
in
xchg
mov
mov
test
mov
ja
pop
decb
int3
movsb
cld
movsb
mov
mov
push
rcll
mov
jns
pop
out
les
clc
mov
leave
test
dec
dec
cmpsl
repnz
je
test
stos
dec
cltd
xchg
sbb
add
clc
mov
stos
or
pop
mov
jecxz
idiv
xchg
mov
je
cmp
movlps
pop
test
push
inc
xchg
push
sub
test
inc
imull
cmp
scas
fisubs
cmpsb
mov
mov
movsl
or
js
mov
loope
sbb
ljmp
mov
test
inc
pop
dec
mulps
or
repnz
aas
xchg
adc
jg
xchg
mov
mov
inc
test
fbstp
cltd
ret
stos
jecxz
and
jne
cmp
sbb
test
dec
rclb
adc
movsl
and
cmp
sbb
test
sti
orl
mov
xchg
pop
shll
inc
mov
bound
push
addl
stc
xor
test
stos
sub
mov
nop
test
inc
ret
mov
push
out
fcmovnb
add
scas
stos
fscale
incb
jns
or
dec
aad
pop
push
sub
xchg
std
movsl
push
fwait
test
mov
sti
test
dec
adc
into
lods
mov
cmpsb
vcmpeq_usps
or
dec
test
and
cmc
adc
test
int
mov
imul
test
stos
or
xor
in
adc
dec
jb
push
or
test
mov
push
loopne
push
add
aaa
cmp
lods
in
mov
sub
movsl
test
sbb
ret
loopne
dec
rcll
mov
lcall
jl
push
cwtl
xchg
test
shr
sbb
push
andl
adc
xor
dec
arpl
pop
push
ja
arpl
dec
aas
sbb
lret
sbb
fs
and
lcall
push
enter
mov
daa
bound
sub
xchg
mov
mov
mov
orb
add
add
pushf
xor
mov
jo
test
adc
jmp
cltd
xor
mov
loope
out
xchg
leave
fbstp
xchg
jecxz
enter
adc
xchg
xchg
movsl
sub
stos
je
test
in
loop
xor
test
insl
add
adc
icebp
test
xor
sub
inc
add
lock
dec
xor
enter
xor
mov
cmp
mov
nop
adc
push
mov
pop
jle
adc
stos
ret
xchg
out
mov
fbld
add
fdivl
loop
sbb
test
das
or
out
and
stos
pop
loopne
fdivs
mov
mov
into
test
in
mov
cmp
fwait
lods
or
test
jmp
mov
and
dec
pusha
xor
rolb
test
xor
and
jecxz
lret
sub
xor
sub
pop
daa
mov
sub
mov
lock
xchg
jbe
lea
fidivrs
pop
test
cmp
je
popf
dec
rolb
in
arpl
das
enter
dec
movsl
fwait
and
fldcw
xchg
dec
jmp
int3
pop
dec
jl
sbb
int
sub
mov
jne
push
and
roll
inc
fwait
jae
bound
insl
sbb
test
ljmp
test
repnz
lock
adc
mov
iret
test
pushf
mov
test
sub
into
fsub
and
fidivs
cmp
mov
mov
cmp
cmp
xchg
test
movsb
cli
clc
leave
repnz
or
cwtl
in
xchg
sub
mov
pop
repz
mov
pop
out
lea
or
push
mov
test
out
inc
mov
scas
out
scas
pop
mov
movsb
dec
pop
or
dec
pop
cmp
test
cwtl
sbb
or
lcall
mov
xchg
std
and
cltd
adcb
into
or
cmp
and
mov
sub
cld
outsl
dec
pushf
mov
je
sbb
mov
stos
test
push
clc
test
lods
stos
dec
or
test
pop
push
enter
and
into
xor
ffree
ret
test
in
mov
repz
cmp
push
xor
xchg
inc
in
push
dec
test
data16
pop
jo
test
jbe
mov
or
test
pop
stos
xchg
dec
call
ljmp
test
aas
aad
les
mov
lret
repnz
xchg
mov
fwait
dec
jo
repnz
mov
ret
lods
leave
cmp
add
mov
sahf
inc
subl
mov
sub
dec
ret
mov
movsb
popf
cld
xchg
aam
test
pop
push
adc
add
and
shll
sahf
icebp
test
stc
test
leave
test
jmp
or
fs
rorb
in
sub
int3
xor
movsl
dec
and
movsb
sbb
dec
cmpb
inc
push
xchg
mov
aaa
mov
cmp
mov
xchg
sub
dec
mov
dec
arpl
mov
jmp
lret
mov
orb
les
mov
mov
lahf
test
enter
and
and
xchg
les
insl
ss
mov
push
jae
jns
pop
xchg
mov
lret
xor
vmulps
mov
mov
or
out
imul
mov
hlt
call
sub
rclb
fstpt
mov
cmc
test
lahf
xchg
out
mov
icebp
xchg
addr16
lods
adc
leave
push
sub
mov
arpl
inc
test
jmp
sub
arpl
inc
bound
pusha
xchg
out
orl
test
decb
in
in
push
pushf
addb
pop
or
add
and
addr16
jge
repnz
and
enter
inc
in
xchg
sbb
push
mov
push
mov
mov
and
xchg
jecxz
ret
inc
xor
pop
xchg
in
loope
fs
sbb
lea
scas
test
adcl
movsb
jp
lods
pop
and
arpl
in
lea
insl
test
dec
inc
clc
data16
jno
or
negb
pop
loop
adc
pop
jae
test
and
dec
test
aas
push
repz
push
nop
dec
lret
sbb
shlb
test
xchg
jne
in
test
xchg
dec
loop
ljmp
lcall
push
leave
inc
push
adc
push
pusha
xor
push
cmpsl
jb
test
mov
test
mov
loopne
std
cld
sbbb
mov
int3
xchg
popf
mov
dec
stos
loope
gs
xchg
test
xchg
leave
lds
rclb
or
addr16
popa
cltd
or
scas
add
test
sub
pop
hlt
sbb
push
mov
and
test
xchg
jecxz
test
inc
sub
inc
jmp
repz
pusha
pop
arpl
add
std
mov
push
test
jle
aas
test
and
data16
lods
push
pop
ljmp
je
fldcw
in
xorb
leave
int3
mov
iret
fistl
cmp
cmpsb
xor
mov
out
movsl
test
push
jbe
pop
imul
adcb
sub
sbb
shll
clc
add
xchg
aam
jmp
inc
pop
mov
sub
insb
ja
fwait
xchg
xchg
jp
add
push
test
loope
data16
mov
sahf
xor
test
jmp
or
out
xchg
incb
lods
scas
test
dec
test
sbb
in
cld
test
mov
jge
out
test
pop
sub
movsl
jecxz
mov
in
repz
push
test
ljmp
bound
pop
jmp
cmpsl
dec
mov
sahf
mov
out
leave
push
fidivrl
imul
sbb
test
mov
in
bound
jb
cltd
sahf
push
xchg
enter
mov
cld
push
in
test
inc
mov
push
dec
jae
and
pop
xchg
mov
lock
xchg
mov
mov
inc
xchg
lret
mov
sbb
gs
test
fwait
and
test
imul
cs
or
xor
dec
and
mov
das
test
ret
repnz
cli
cmp
ret
in
push
jl
movsb
hlt
mov
jae
test
sti
fwait
into
dec
push
int
add
push
dec
mov
ss
mov
mov
and
rcrb
lods
add
adc
adc
and
jae
enter
out
xlat
test
in
xchg
jl
popf
test
int3
test
or
dec
xchg
sub
addl
push
cli
and
xchg
sub
or
fdivrl
pop
cmp
adc
out
pop
inc
mov
movsb
ja
enter
push
dec
test
adc
push
imul
push
hlt
test
enter
rcll
test
xor
ret
rorl
outsb
movsb
pop
jl
xchg
sub
ja
and
jbe
test
cmp
repnz
jg
inc
add
dec
rolb
test
shrb
aad
xor
insl
bound
sub
push
mov
inc
out
mov
call
out
loopne
xchg
test
adc
dec
xchg
dec
jns
test
mov
divl
int
or
dec
test
lret
mov
mov
jg
fcmovnb
icebp
test
fs
loope
bound
test
lret
movsb
jle
dec
mov
sub
pop
jbe
test
fbstp
or
test
pusha
bound
rorl
dec
mov
scas
movsb
js
sub
push
pop
mov
test
push
faddl
in
and
mov
or
adc
stc
insb
fcmovne
rcl
and
icebp
jnp
out
xchg
pop
adc
test
sub
adc
test
add
test
shl
insl
push
or
inc
lret
mov
test
sub
xchg
lds
pop
push
ret
pushf
push
cld
adc
ss
inc
jle
dec
mov
in
test
xchg
aaa
sub
test
stc
lret
loope
xor
mov
pop
cwtl
sub
mov
arpl
test
mov
test
pop
push
pop
push
movsl
mov
loop
test
mov
test
in
and
roll
push
in
rolb
and
test
icebp
jnp
mov
andb
push
mov
movb
loopne
mov
add
popa
subb
shrl
sbb
lret
inc
mov
inc
jg
lcall
cltd
test
xchg
xchg
and
push
dec
test
stos
mov
xor
cmpsl
je
imulb
push
test
popf
mov
loopne
add
cwtl
inc
and
xchg
xchg
jne
movsb
dec
test
stos
ss
lcall
pop
in
imul
out
jg
pushf
addb
aaa
filds
inc
cmp
sahf
cmp
mov
xchg
inc
ret
sbb
ret
xchg
call
jmp
adc
mov
repz
mov
loopne
mov
enter
xchg
cwtl
scas
push
call
stos
out
in
movsl
test
xchg
mov
popa
test
rcr
aad
fs
test
jp
sti
push
and
outsb
inc
dec
push
cmpsl
dec
xchg
push
inc
inc
dec
mov
mov
xchg
call
pop
fsub
loop
pop
sbb
mov
dec
test
les
inc
int3
sbb
mov
cmp
dec
js
fs
add
xchg
inc
sub
das
push
jecxz
in
test
adc
adc
test
pop
push
mov
jo
sbb
test
lcall
inc
push
in
dec
mov
lods
push
xor
fcomp
xchg
sbb
mov
dec
mov
mov
test
fdivrs
insl
push
pop
loope
ss
dec
or
xchg
pop
movsb
lods
sub
mov
std
push
mov
mov
mov
out
inc
sub
and
pop
repnz
jg
test
push
sbb
mov
lret
iret
push
rclb
shlb
lock
mov
test
or
cmp
stos
pop
lret
push
lret
test
lahf
and
ljmp
mov
mov
or
xchg
in
cmp
test
rcrl
mov
and
lea
test
or
popf
insb
push
movsb
clc
leave
add
ror
stc
int3
popa
ret
in
mov
jmp
lock
shlb
dec
movsb
lret
outsb
xchg
lcall
cmp
fdivr
cwtl
push
lds
loope
xor
test
and
pop
aaa
xor
test
pushl
sub
dec
ret
loopne
sub
mov
lds
xchg
dec
mov
mov
push
clc
lcall
cmpsb
cmp
popa
test
mov
mov
iret
pop
push
pop
add
dec
jle
incl
jns
xor
sbb
leave
imul
test
dec
mov
cmc
adc
insb
mov
test
xchg
push
jle
es
idivb
pop
lods
jl
mov
mov
and
mov
mov
dec
add
sets
out
xor
mov
jmp
sub
mov
add
test
push
dec
ret
shl
mov
push
in
sub
push
bound
pop
sbb
repnz
ds
add
and
jp
testb
jmp
imul
outsl
xchg
je
add
jmp
lcall
stos
enter
and
cmpsl
icebp
test
xor
loop
loope
push
lcall
movsb
pushf
xchg
mov
push
dec
jbe
lds
or
add
sub
inc
lcall
sub
or
jle
and
jb
adc
arpl
xchg
lret
inc
and
push
test
xor
jne
mov
in
jno
jae
cmp
loop
or
fbld
lret
push
test
jecxz
jnp
dec
xchg
jae
daa
shr
or
loopne
negl
lea
aad
sbb
push
mov
push
inc
pop
mov
ss
in
cmp
jg
push
into
xchg
mulb
ds
mov
shlb
cld
iret
test
xchg
jmp
pop
mov
test
scas
rorl
sahf
sub
jbe
cmp
sub
ja
or
push
add
inc
and
bound
div
mov
adc
dec
std
mov
cwtl
xlat
cli
leave
test
mov
sbb
dec
sti
test
shl
ret
int
or
loopne
xchg
cli
jmp
xor
push
icebp
test
dec
dec
pop
test
cli
es
mov
loope
fstpl
lods
test
fisubrs
add
ja
inc
dec
cmp
fistpll
dec
test
sbb
outsl
push
mov
xor
lcallw
ja
or
jo
arpl
ret
mov
inc
out
test
mov
jge
jecxz
mov
xchg
mov
mov
adc
test
in
scas
outsb
jp
cltd
mov
mov
and
roll
and
test
pop
ds
sbb
aas
test
in
mov
test
jne
shll
pop
test
stos
cwtl
push
inc
fistps
out
mov
fsts
xchg
cltd
jne
movsb
add
sub
adc
test
shrb
mov
mov
jo
fldt
ljmp
and
hlt
add
mov
dec
stos
sbb
mov
lahf
cmc
clc
push
mov
outsl
std
enter
mov
daa
mov
pop
or
lds
mov
repnz
popa
dec
mov
cmpsl
ret
sub
test
clc
sahf
nop
test
add
jle
mov
jecxz
mov
enter
mov
in
sub
cli
mov
mov
in
movsb
pop
iret
cmp
or
mov
inc
test
imul
arpl
popa
mov
test
sbb
jae
pop
push
inc
loop
push
cs
mov
enter
test
dec
int
test
xchg
rcrl
inc
ljmp
dec
shrl
and
sub
repnz
imul
add
into
ss
cli
and
in
call
sub
xchg
into
mov
add
leave
lret
test
stc
xchg
call
enter
mov
lods
pop
leave
mov
imul
les
xchg
and
insl
sahf
fildl
dec
enter
mov
and
mov
testb
ficoml
repnz
das
daa
vpshlw
ret
into
or
push
test
push
arpl
loopne
enter
hlt
jp
outsl
mov
sub
imul
mov
or
mov
dec
stos
test
js
insl
jmp
test
pop
iret
push
mov
or
inc
and
mov
loop
je
test
sub
cmp
sbb
ljmp
pop
adc
sub
lret
testb
cmpsb
push
test
orb
in
sti
and
xchg
mov
inc
push
test
mov
mov
cmp
test
mov
test
subl
or
push
mov
adc
in
or
pop
bound
xchg
shlb
notb
ficoml
or
xchg
add
test
movsl
and
mov
imul
cmp
jo
clc
xor
jmp
cmpsb
loop
adc
mov
flds
mov
stos
ja
subb
push
or
mov
lcall
in
push
adc
movsb
or
and
mov
cmp
cmp
xchg
pop
ljmp
int3
arpl
in
pop
push
push
push
negb
fstpl
inc
enter
pop
in
call
jmp
xchg
out
int
shlb
sub
pusha
push
test
and
test
cwtl
movsl
lret
mov
sbb
dec
test
or
pushf
inc
les
mov
sbb
add
hlt
push
bound
imul
adc
les
xor
inc
or
mov
insb
inc
loopne
mov
test
stc
jne
fstp
daa
inc
push
jb
aam
icebp
sub
dec
sbb
pop
sub
fstps
jnp
pop
bt
mov
clc
subb
ja
aad
test
insb
cmp
stos
test
adc
cld
push
in
or
arpl
push
and
lret
mov
in
dec
int
fmull
sbb
pop
ret
addb
popf
dec
pop
xchg
mov
test
or
jge
cmp
outsl
in
cli
int
mov
mov
ja
movsb
add
in
xor
fwait
cmp
int
repnz
popa
loope
loop
push
mov
lahf
lock
adc
push
mov
xor
xchg
add
stos
mov
aas
test
fstpl
test
ret
jp
stos
push
and
loop
or
insl
mov
lea
mov
ja
jb
lods
stos
into
test
xlat
cltd
or
adc
test
stc
je
subb
arpl
daa
pop
or
test
inc
sub
les
push
mov
mov
dec
repnz
filds
lods
sub
iret
dec
stos
test
push
les
out
repnz
test
rcrb
into
sbb
jecxz
mov
add
mov
test
lds
jg
das
add
dec
jecxz
aad
adc
test
sub
sbb
in
ret
and
loope
xor
adc
icebp
sbbl
mov
clc
std
mov
cld
int
or
sbb
lret
add
out
loopne
and
xor
sub
mov
imulb
inc
mov
cltd
dec
xchg
mov
xchg
push
flds
out
mov
rcrb
aam
test
inc
int
sahf
xchg
dec
enter
lret
ret
or
pop
loope
inc
mov
jge
push
ds
mov
jecxz
test
scas
mov
aaa
lods
clc
test
mov
sahf
aam
test
out
call
addl
xor
pop
enter
xor
outsb
std
add
mov
lahf
cmp
movsl
or
jnp
stos
mov
fbld
inc
or
leave
test
in
movsl
addb
daa
push
test
neg
leave
adc
dec
cmpsl
int
jge
repz
sbb
add
mov
movsb
jp
mov
pop
daa
push
xchg
test
insb
or
test
fwait
cli
mov
inc
cmp
test
jns
leave
pop
imul
cmp
jecxz
in
stos
inc
aad
and
mov
movsl
iret
xchg
test
add
test
cld
and
test
loop
and
jle
daa
test
sub
push
insb
movsl
xor
clc
inc
pop
push
jecxz
sbb
orb
jmp
insl
xor
inc
test
aaa
das
lcall
and
pop
sub
test
outsl
cmp
jle
xchg
mov
ret
jnp
test
push
sarl
xor
lret
xchg
int3
test
imul
repz
inc
pop
sbb
lret
mov
les
inc
xchg
or
out
movsl
adc
les
push
test
dec
jmp
lahf
or
push
test
nop
add
cmp
int3
dec
inc
test
inc
pusha
push
cwtl
push
fsubr
jae
jecxz
mov
dec
inc
icebp
repnz
xor
aaa
movsb
jge
and
push
mov
mov
int3
lret
pop
sar
enter
fadds
js
aam
movsb
dec
mov
jne
push
inc
dec
push
adc
dec
lcall
inc
push
insb
cld
and
pop
or
and
pop
lods
mov
mov
mov
mov
cs
mov
dec
bound
enter
sub
jbe
dec
loop
call
movsb
stos
outsb
rcrl
sbb
stos
lock
test
test
repz
out
les
popa
xchg
and
fsubl
pop
aaa
test
inc
sti
loopne
push
cli
xchg
test
lds
test
mov
js
mov
cmp
dec
push
or
pop
insb
mov
in
mov
cmp
jl
loope
xor
jg
push
cmp
or
outsb
aas
ds
sub
push
call
in
cmp
shll
lcall
mov
jbe
adc
in
stos
iret
flds
cmp
into
xor
test
push
mov
and
jg
inc
test
sti
mov
mov
mov
bound
pop
out
sbb
lds
inc
outsl
xchg
test
das
dec
mov
add
adc
sarb
cmp
test
dec
divl
stos
inc
dec
sub
lods
sbb
cs
fs
test
xchg
push
inc
pop
and
mov
bound
jae
dec
add
xor
mov
movsb
int
dec
loope
mov
cmpsl
xchg
mov
movsb
sbb
std
bound
loop
mov
or
fsubrs
call
int3
mov
and
and
aad
test
pop
mov
testb
pop
or
test
aad
sbb
cmc
sbb
cmp
mov
mov
mov
inc
fisttpl
cli
mov
shrl
push
loopne
fldenv
stos
mov
dec
push
and
daa
dec
test
jecxz
jbe
sub
lods
or
dec
mov
ds
pop
imul
in
sbb
loope
sub
js
ficompl
inc
cmp
loope
mov
push
mov
imul
out
or
clc
xchg
or
fiadds
jge
movsb
mov
inc
and
out
sbb
addl
aaa
cmp
sahf
mov
jno
xchg
pop
les
fsubr
fprem
mov
mov
push
xor
das
aas
sub
xor
add
fidivs
test
lcall
rorb
hlt
cmp
aas
or
pop
jns
push
fistpll
dec
mov
loope
mov
ja
cmp
fdivrl
mov
cmpsl
push
cmp
pop
push
xchg
test
sub
mov
mov
stos
xorb
test
enter
inc
xor
decl
push
jmp
test
sub
push
mov
jecxz
imul
inc
sub
xchg
lret
pop
fmuls
scas
clc
cmp
jle
test
inc
out
dec
xchg
mov
dec
mov
mov
mov
out
test
xchg
adc
lret
fidivrl
mov
test
mov
in
dec
add
jo
pop
fsubl
int
dec
test
lods
mov
test
or
std
adc
push
push
test
or
aad
fsubs
xchg
and
cmp
and
lret
mov
sbb
outsb
xchg
lret
pop
les
pop
fs
test
leave
dec
push
ja
test
dec
jnp
addr16
jae
xchg
jg
inc
fistps
push
xchg
mov
dec
lcall
or
mov
test
mov
das
mov
outsb
dec
xor
sbbb
dec
adc
sbb
adc
jb
mov
dec
jno
push
lock
dec
jmp
mov
xchg
push
pop
into
jg
jle
jmp
test
xchg
orl
test
push
sbb
gs
es
test
mov
push
test
jno
test
and
jmp
not
jecxz
incl
jmp
sub
adc
add
sbb
jle
orl
cwtl
movsl
mov
mov
addr16
test
test
mov
fbld
dec
popa
cmpsl
stos
nop
or
call
mov
mov
cmp
xor
xor
arpl
adc
mov
out
fucomip
test
lret
daa
sbb
lea
and
test
cmpl
mov
jmp
jns
adc
inc
and
xchg
xchg
aas
xlat
mov
fbstp
fstp
movsb
loope
out
sbb
test
icebp
shrb
std
inc
in
add
mov
add
lds
and
push
dec
in
test
dec
lret
inc
fstl
sti
mov
test
jge
cmp
iret
pop
lcall
int3
cwtl
push
aam
mov
mov
xabort
es
xchg
mov
xchg
jg
dec
jne
xor
mov
test
mov
inc
out
arpl
int3
and
sti
mov
xorb
sub
out
add
dec
enter
cmp
mov
insl
xchg
xchg
push
cltd
mov
sub
int
cmpsb
adc
mov
adc
test
fs
scas
movsb
mov
sub
call
test
cmpsb
sbb
cmp
stos
fs
sub
std
imul
lret
push
js
andl
cld
fstpt
dec
test
cwtl
loop
test
or
xchg
inc
add
mov
ror
inc
stos
dec
shlb
or
test
cmp
mov
in
adcb
mov
popa
xchg
ja
fidivrl
test
test
mov
xchg
test
out
jmp
rorl
cmc
test
xchg
testb
adc
jle
and
dec
mov
xchg
mov
loopne
out
test
dec
and
daa
pop
mov
loop
fldt
test
in
lds
lret
add
or
xchg
xor
test
imul
stc
test
addr16
mov
xchg
xor
test
cltd
xchg
jg
in
popa
inc
test
add
jbe
arpl
push
repnz
std
dec
and
test
mov
and
cwtl
loope
adc
stc
int
leave
scas
inc
icebp
jnp
mov
and
dec
out
lret
rolb
test
out
xlat
cmpsb
insl
add
sar
int
sbb
pusha
fs
and
pop
adc
lahf
mov
mov
dec
repnz
test
shrl
arpl
test
adc
arpl
lcall
test
sbb
cli
sbb
xchg
xor
in
ss
add
fwait
dec
jg
and
sbb
test
or
dec
ss
pop
test
pusha
inc
in
subb
jle
push
dec
imul
movsl
and
test
dec
and
mov
or
loopne
mov
xchg
push
pop
loope
out
pop
xor
and
sahf
call
fimull
movsb
xor
and
adc
adc
sub
mov
xchg
or
in
add
mov
lcall
in
dec
cmp
mov
insb
sub
cmp
or
push
fistpll
sub
cmp
int
mov
push
jle
pop
push
lahf
mov
sbb
flds
add
test
pop
adcl
lds
cs
movsb
mov
dec
es
cmc
movb
xorb
push
push
jb
xor
insb
cmpb
iret
sbb
cmp
and
hlt
push
and
add
xchg
cld
rorb
mov
addr16
ror
push
out
sub
jbe
test
mov
xor
in
inc
pop
aad
xchg
mov
ja
js
jno
aaa
mov
fwait
pop
test
mov
in
dec
into
es
out
push
aaa
mov
icebp
vpshufhw
movsl
jno
in
ljmp
fmulp
mov
icebp
data16
stc
cmp
dec
add
xchg
stos
scas
test
pop
cmpl
jge
fildl
movsl
mov
pop
push
mov
aad
ret
test
repnz
ss
mov
jo
mov
filds
cmpl
ficomps
rorl
loope
mov
add
ret
test
mov
or
and
adc
mov
ret
aas
bound
push
enter
test
push
pop
mov
sbb
icebp
sbb
mov
inc
test
mov
mov
mov
out
popa
xchg
and
test
push
loop
test
pop
jl
movsb
mov
xlat
inc
and
jg
xchg
test
inc
test
sub
pop
aas
loope
cli
and
les
or
adc
xchg
test
mov
cli
push
pop
mov
adc
test
imul
mov
pop
mov
stos
lahf
cmpsb
xchg
push
mov
and
arpl
mov
jbe
dec
ja
mov
fnstenv
test
test
mov
adc
mov
out
push
jb
push
jbe
sbb
cmp
fimuls
mov
pusha
or
inc
imul
arpl
scas
cli
sub
ret
mov
shrb
dec
cmp
mov
in
fldln2
out
push
mov
mov
test
xchg
fldcw
or
repz
lods
cwtl
lcall
inc
sahf
negb
xchg
push
pop
lret
aaa
jne
clc
adc
jl
shll
mov
bound
dec
inc
sub
nop
mov
test
cltd
pop
dec
sub
sub
test
xchg
popf
push
dec
cmpsl
je
ror
and
push
outsb
dec
cmp
jle
sti
sbb
sub
lahf
bound
jns
rclb
inc
sbb
cmp
lds
mov
mov
fs
dec
push
rcrb
popa
inc
loop
movsb
ds
jmp
test
xor
loop
arpl
mov
roll
cltd
sub
mov
icebp
movsl
sub
sub
pop
test
insl
ja
into
push
clc
test
mov
bound
mov
test
push
scas
in
mov
rcr
mov
xchg
inc
cmp
iret
mov
test
dec
idiv
test
cltd
push
pop
cmp
jb
or
xor
mov
push
outsb
sti
xchg
cli
push
in
rorl
dec
sub
aad
test
testl
adc
mov
test
mov
xchg
test
fld
sub
jge
les
cmpsl
movsb
xor
mov
hlt
test
rorb
fisubrs
repz
pop
push
mov
jnp
rolb
int3
xchg
push
or
test
inc
mov
cmp
add
inc
ret
fwait
jbe
test
lret
push
push
ret
mov
lahf
pop
mov
test
adc
out
pop
test
std
mov
xchg
lods
ret
mov
bound
out
and
fsubs
mov
mov
addb
push
adc
xchg
lds
lret
in
movsl
loopne
scas
inc
push
push
test
or
test
test
mov
gs
xchg
xor
push
pop
movsb
cltd
into
test
cmc
les
sbb
push
mov
loop
test
dec
and
test
in
cmp
stc
sub
xchg
jmp
xchg
lahf
test
dec
jne
test
dec
repnz
stos
inc
pop
xor
hlt
lods
mov
xchg
int3
cmp
roll
mov
mov
pop
out
test
int3
xor
test
enter
call
stc
out
mov
pop
mov
cltd
and
test
push
and
dec
adc
and
xchg
test
jae
lods
jecxz
hlt
adc
insb
sub
test
xchg
cmp
test
popa
jmp
insb
push
popl
push
sbb
or
lcall
jmp
outsb
out
sub
test
stos
andl
int
mov
xchg
sahf
int3
or
push
xchg
test
aad
fwait
int
add
pop
mov
jp
mov
je
push
jmp
iret
or
clc
popa
test
icebp
sahf
cmp
lret
out
xchg
push
mov
aaa
add
push
adc
enter
lret
mov
mov
imul
stc
lea
test
lods
sbb
jns
jl
imul
and
sbb
add
mov
lods
pop
inc
or
mov
mov
pop
adc
sbb
jno
mov
loopne
xchg
test
cmpsb
pop
cwtl
aam
mov
fildl
jns
push
repnz
sbb
xchg
arpl
and
mov
addl
adc
popf
pop
iret
mov
sub
call
out
in
lods
test
xchg
cmp
cs
das
pusha
out
icebp
mov
jle
sbb
push
mov
mov
outsb
xor
sub
inc
or
test
enter
negb
test
and
mov
int
pusha
inc
movsl
ret
push
dec
sahf
or
fisttps
mov
cli
and
inc
test
xchg
loopne
fstl
xor
cmp
cmp
push
xchg
jl
jbe
test
sub
xchg
arpl
loope
cmp
test
sbb
adc
les
test
in
mov
test
ret
cltd
push
adc
scas
jmp
sub
out
inc
je
mov
push
and
test
mov
mov
stc
inc
fildll
cli
xlat
dec
sbb
dec
jle
mov
loop
popf
lret
stos
push
pop
ss
test
loope
bound
test
inc
dec
sbb
mov
test
inc
mov
loope
adc
jno
sbb
sub
insl
arpl
test
imul
cld
loope
push
orl
jbe
jbe
jmp
stos
mov
pop
test
fs
fwait
jp
shl
sub
jnp
popa
sub
add
dec
push
sbb
loope
jbe
jecxz
push
dec
std
test
mov
and
in
test
sbbl
push
mov
jecxz
push
mov
sub
in
mov
aam
adc
std
fwait
cli
jmp
cltd
inc
test
dec
subb
popa
out
mov
test
sbb
pop
lcall
aam
mov
mov
jg
sbb
dec
adc
in
jns
mov
test
pop
dec
push
stos
mov
lret
jns
in
sub
test
jp
pop
dec
popf
add
movsb
into
sbb
sbb
push
inc
test
jb
insl
adc
and
divb
repz
cwtl
jle
sbb
in
sbb
dec
cli
mov
test
subb
mov
mov
fisubs
lahf
mov
mov
mov
test
add
mov
mov
jecxz
add
xchg
aas
test
xor
fmuls
pushf
cmc
call
mov
test
test
add
push
mov
xchg
lea
sbb
lcall
int3
sub
in
test
lret
call
ret
add
lea
pop
xchg
out
cmpsb
test
mov
push
int3
mov
vpsubb
test
push
mov
in
jmp
fwait
test
dec
sub
push
int
test
test
lds
incb
push
and
adc
dec
sbb
push
icebp
fwait
cs
ja
cmp
in
adc
lret
add
mov
enter
xchg
test
adc
bound
std
jl
add
or
popa
shr
dec
xchg
adc
cmc
push
and
cmp
iret
and
mov
imul
std
mov
adc
in
pushl
push
decb
jo
lea
adc
cmp
pop
xchg
in
sub
pop
dec
cmp
fdivl
stos
mov
push
mov
push
xchg
mov
shlb
jmp
cmpsb
ret
inc
sbb
and
pushw
sub
insb
mov
pushf
xchg
outsb
mov
test
and
flds
aaa
and
mov
inc
test
xor
sti
insb
or
adc
fcmovu
pushf
fs
mov
pop
out
movsb
pop
sub
stc
test
fs
jo
in
jmp
lds
pop
sub
xor
rcrl
movb
test
icebp
inc
or
mov
sbb
mov
pop
jge
push
in
add
jo
popa
xchg
mov
mov
pushf
mov
mov
in
cli
cmpsl
xor
rolb
inc
movsb
mov
adc
inc
mov
loop
jle
fldcw
mov
push
xchg
outsb
mov
test
jo
pop
leave
lret
test
ss
fs
inc
inc
and
mov
test
stos
xchg
push
enter
leave
fstps
subl
dec
inc
mov
mov
mov
push
mov
sti
dec
dec
push
lods
add
test
or
sbb
rcr
and
xor
outsl
out
into
cli
dec
data16
lahf
sbb
clc
icebp
lds
imul
and
pop
addl
aaa
xor
adc
das
jecxz
mov
inc
arpl
in
loop
mov
xchg
rcrb
sub
mov
jnp
dec
cmc
mov
and
leave
test
xchg
andb
push
out
adc
movsb
push
push
xchg
xchg
shll
adc
clc
mov
sarl
pop
jle
and
sbb
jb
jl
test
pusha
repnz
test
dec
cmp
fwait
add
mov
ret
cwtl
or
aaa
dec
jle
cmp
or
lods
xchg
cmp
sbb
test
push
aad
and
and
mov
test
jecxz
cli
pop
sbb
aam
jo
clc
lea
jmp
mov
mov
pop
mov
movsb
das
or
sarb
mov
out
push
outsb
pop
stc
cmp
mov
mov
push
inc
mov
test
test
popa
xchg
lret
outsb
loop
mul
cmp
xchg
mov
arpl
mov
mov
push
push
mov
popa
cmp
mov
mov
les
lea
ljmp
xorb
jbe
and
cmp
sbb
mov
mov
lret
pusha
out
testb
sub
add
mov
stos
dec
pop
cmp
movsl
pushf
test
pop
lahf
cli
int
jo
stos
or
test
push
in
jmp
mov
or
mov
add
test
cs
flds
imul
ret
pusha
push
jge
mov
push
enter
test
and
xor
jns
pop
mov
mov
test
inc
mov
fs
mov
scas
and
fwait
cltd
out
pop
mov
popl
test
pop
lcall
and
out
mov
mov
cmc
fisubs
jo
addl
jl
sub
popa
push
aad
mov
loop
or
les
lds
mov
loopne
das
flds
cmpsl
roll
xchg
out
enter
test
cwtl
stos
or
test
imul
and
mov
orb
sbb
incb
push
ret
ds
mov
test
hlt
dec
or
adc
cli
test
stos
cltd
inc
test
push
inc
ret
mov
or
in
fisubrl
testb
mov
and
frstor
insb
test
xor
mov
adc
adc
push
hlt
pop
push
test
xlat
mov
inc
adc
stos
out
movsb
stc
iret
sbb
cmp
xchg
imul
cli
aam
mov
in
cmpsl
mov
in
lcall
xchg
sbb
inc
arpl
inc
mov
test
cwtl
rcll
test
add
cmp
cmp
sarb
xchg
into
xor
test
leave
neg
test
andb
mov
test
push
mov
lods
mov
sub
jne
pop
adc
scas
or
xor
or
pusha
loope
jmp
jne
loop
pop
push
inc
les
test
test
sub
sub
lods
out
inc
inc
pop
movl
clc
xor
inc
sbb
lret
leave
pop
mov
daa
lds
push
movsl
and
xchg
jbe
mov
xchg
pop
dec
aad
outsl
inc
test
loope
das
inc
in
btc
test
ja
lahf
add
mov
repz
bound
sub
mov
punpckhbw
movsb
push
mov
shll
mov
bound
inc
mov
rolb
push
xchg
add
mov
arpl
mov
xchg
pusha
bound
lcall
cmpsb
mov
test
or
testb
dec
jno
lds
push
fwait
arpl
and
sbb
mov
scas
sarl
xchg
cltd
mov
cli
dec
ret
test
div
xchg
cmp
adc
xor
dec
test
lret
lahf
push
pop
push
xor
jecxz
cmp
and
rorb
movsl
cmc
inc
mov
mov
and
dec
leave
cmp
inc
dec
xorl
insl
into
xchg
sahf
mov
fsubs
mov
dec
cmpsl
add
sbb
push
sbb
out
push
clc
loop
add
lret
jo
arpl
fmull
mov
cmp
lds
sub
dec
jp
inc
mov
addr16
test
shrl
hlt
push
and
mov
out
test
push
test
jmp
stos
pop
loope
lock
inc
testb
sbb
bound
test
cmp
xchg
out
es
movsb
call
xchg
sub
sbb
test
and
cli
jne
xchg
adc
mov
insb
push
mov
and
test
add
int3
pop
arpl
stos
cli
adc
popf
or
jne
dec
cltd
movsb
data16
lods
or
out
test
sbb
test
mov
cltd
imul
dec
inc
inc
push
mov
jnp
adc
jg
mov
adc
test
and
lods
xchg
dec
push
and
sar
shrl
test
in
iret
lds
mov
jmp
outsl
loop
lods
add
and
xor
inc
sbb
cmpsl
jmp
idivb
leave
mov
cmp
sub
or
mov
mov
arpl
jge
mov
sti
in
sbb
lds
pop
test
mov
addl
icebp
fld
test
push
dec
lds
push
inc
das
xchg
sub
and
or
or
add
mov
repnz
stc
mov
sub
les
daa
ficompl
and
ds
es
pop
dec
sub
adc
cmpsl
or
and
test
testb
into
movsb
cmp
xor
mov
arpl
jge
or
xchg
filds
enter
push
xor
movsb
or
push
into
test
mov
lcall
cmpsb
jl
sbb
sahf
xor
rol
or
js
lds
test
mov
push
pop
adc
adc
mov
and
xchg
push
jl
jbe
lahf
movsl
enter
dec
push
mov
js
xchg
lret
arpl
mov
ficompl
push
leave
mov
cmpb
dec
jle
and
bound
dec
mov
xor
mov
test
jle
dec
shrb
movsb
inc
mov
lcall
mov
test
mov
fstl
xchg
aaa
add
arpl
lcall
mov
or
push
inc
mov
pop
sub
out
mov
mov
dec
scas
test
stc
dec
sbb
cmp
lea
dec
push
mulb
mov
stos
call
test
xor
inc
test
je
daa
and
mov
mov
in
fwait
xorb
lahf
adc
sbb
in
into
dec
sarb
cmpsl
jmp
movsl
mov
test
cmp
adc
mov
test
das
adc
test
lret
cwtl
sub
push
and
out
push
ret
sarl
cmp
push
push
lret
mov
lcall
xrelease
call
xorb
dec
mov
xchg
and
and
mov
dec
test
not
mov
inc
dec
jecxz
fldcw
pop
mov
push
pop
adc
inc
shrl
pop
or
jbe
adc
faddl
jnp
mov
sar
pushf
mov
inc
dec
aam
test
ret
sbb
dec
inc
cmc
test
xlat
fstps
push
sbb
inc
adcl
or
inc
and
insb
jae
jle
sub
test
pop
sahf
pusha
cwtl
mov
xchg
mov
outsb
clc
sbb
mov
test
push
jo
into
sbb
push
arpl
addr16
out
test
jmp
push
xchg
mov
imul
arpl
lcall
aad
test
ror
xchg
cmp
in
test
ja
push
test
arpl
push
jo
test
outsb
fwait
mov
arpl
push
icebp
pop
mov
in
mov
insl
int3
push
mov
lods
test
dec
mov
test
adc
ljmp
les
xchg
mov
mov
dec
dec
pusha
xlat
or
dec
mov
les
insb
sti
scas
jmp
test
cld
int3
arpl
out
test
inc
divb
cli
add
push
dec
sub
test
push
xor
outsb
sub
cli
push
add
sub
ret
jmp
add
lea
add
lcall
jge
popl
data16
test
sbb
cli
cwtl
mov
mov
bound
mov
mov
data16
mov
cwtl
inc
addb
push
push
test
xchg
bound
ss
mov
and
movsb
adc
sbb
lds
inc
inc
test
xchg
les
aam
pop
bt
icebp
mov
cmc
cld
test
lcall
sub
hlt
mov
mov
lret
adc
icebp
das
fisubs
test
mov
insb
xor
scas
cmp
std
or
push
jmp
fisttpl
repnz
pop
test
sbb
movsb
test
or
mov
fldcw
in
test
std
push
popl
mov
and
lds
sub
cmc
push
cmp
adc
jle
or
fcomps
sub
jp
mov
enter
insb
mov
scas
js
push
into
les
sbbb
mov
clc
movsb
xchg
in
mov
cmpsl
sub
test
stos
push
mov
subb
test
push
xor
sub
rcll
test
adc
insl
mov
orl
mov
sbb
dec
das
push
sub
xor
lret
xchg
scas
loope
test
and
aad
insb
push
pop
rcr
inc
adc
in
mov
add
test
sti
push
cwtl
test
adc
loope
lret
inc
test
scas
addr16
hlt
cmp
mov
lret
pop
lods
inc
test
mov
lcall
dec
mov
stos
adc
mov
xchg
mov
adc
and
mov
imul
movsl
movsb
lods
xchg
mov
mov
cltd
pushf
test
push
pop
sub
inc
arpl
push
cmc
mov
dec
test
rorb
aam
das
sahf
adc
xchg
adcl
loopne
mov
xor
test
neg
les
pop
pushf
adc
dec
mov
mov
test
xchg
xchg
dec
leave
jae
mov
push
xchg
outsb
movsb
jne
ja
sub
mov
adc
mov
add
fstpt
fidivl
jae
in
pop
push
testl
sbb
push
test
int3
mov
mov
test
dec
and
mov
jmp
xchg
mov
pop
test
dec
inc
dec
push
movsl
test
or
or
cltd
scas
test
push
mov
push
aad
test
addr16
jbe
int
inc
lret
loopne
ds
fadds
sbb
fdivrs
and
mov
fs
inc
push
jbe
push
out
inc
xchg
vpacksswb
test
and
incl
mov
out
mov
cwtl
sub
mov
bound
pmaxsw
push
cmp
stos
mov
mov
ret
loop
inc
dec
push
pop
movsb
cli
lret
popa
xchg
dec
adc
pushf
shr
and
dec
dec
test
inc
cli
int3
fs
sub
push
inc
sub
insb
fcom
mov
outsb
pop
add
int3
mulb
cltd
loop
aas
in
xchg
fdiv
push
push
add
add
xlat
enter
mov
negb
call
pop
pop
mov
dec
pop
add
jecxz
and
idiv
int
jbe
mov
adc
add
loop
mov
lret
inc
inc
sbb
clc
fs
sub
add
and
test
fwait
xchg
imul
aam
insb
push
jno
out
ret
inc
sbb
sub
jne
fisttpl
dec
cmp
sbb
mov
jecxz
test
clc
leave
fisttpl
lahf
ret
fwait
jl
xlat
test
cmp
shll
dec
test
add
jge
leave
jb
and
jo
nop
dec
test
inc
jecxz
lods
inc
adc
std
xchg
roll
mov
test
loopne
fstpt
cmp
bound
leave
test
push
xchg
push
push
outsb
test
jae
fmull
fstps
test
xchg
mov
test
adc
jne
jge
scas
clc
testl
pop
fmul
test
out
xlat
mov
addr16
stc
pop
rcl
sub
shll
sahf
test
test
movsl
fchs
or
cmp
and
add
push
mov
ror
out
in
push
or
aas
into
mov
sub
dec
push
sub
add
daa
sbb
mov
insb
sahf
xchg
test
mov
test
cmp
jbe
push
adc
aaa
pop
cmp
pushf
add
nop
sub
mov
int
xchg
mov
fnstenv
test
mov
lds
add
test
pusha
dec
inc
jbe
decb
into
mov
mov
mov
test
mov
fimull
movsl
movb
pop
fldcw
dec
xor
loope
int3
push
mov
add
mov
dec
cmp
shlb
mov
xlat
clc
lcall
inc
dec
pusha
incb
cld
test
shl
test
mov
xchg
test
sahf
mov
loop
inc
roll
inc
inc
and
divb
push
push
aad
mov
popl
xchg
mov
test
cmpsl
mov
pop
test
adc
sti
outsb
js
pop
mov
test
gs
ret
test
icebp
es
mov
flds
push
inc
es
or
cwtl
fisubrl
test
push
lock
or
inc
mov
int
stc
stos
cmp
add
dec
mov
dec
pop
mov
mov
lea
lret
pop
jmp
cmp
add
mov
push
sbb
sub
push
dec
in
in
sub
mov
call
mov
bound
xchg
stos
dec
add
fldcw
sub
mov
xchg
test
pop
lret
jmp
push
inc
mov
cmpsb
shrl
mov
ret
xor
mov
sub
std
insl
xchg
jecxz
push
test
add
in
test
add
movlps
mov
lea
andl
adc
outsl
or
aam
cmp
xchg
sub
pop
mov
sbb
lcall
dec
and
repnz
push
insb
xchg
or
js
mov
int3
cmp
pop
mov
test
shll
cld
cmc
lods
roll
or
ret
test
ret
jecxz
cmp
int3
inc
lret
push
cltd
dec
data16
movsb
test
fadds
mov
lods
dec
and
lcall
sub
cs
mov
mov
push
js
pusha
jo
add
mov
push
dec
push
pop
loop
rcll
or
mov
mov
or
stos
inc
enter
in
and
test
movsl
pop
sub
cmp
orb
xchg
fst
in
test
stos
jo
int3
cmp
xchg
test
decl
daa
and
in
loope,pt
mov
cltd
insl
dec
and
test
cli
loopne
les
jnp
mov
movsb
dec
scas
adc
nop
fistpll
add
repnz
push
jl
data16
test
loopne
test
ja
cwtl
fxch
jg
test
rcrb
shl
jmp
mov
xor
in
sub
int
sub
outsb
fwait
add
out
xchg
insb
mov
mov
push
add
les
es
in
ret
dec
xchg
shrb
test
sub
xor
int
xor
sbb
test
mov
sub
lret
test
lcall
test
xchg
sub
and
clts
test
jne
icebp
lock
xor
test
dec
mov
stos
movsb
mov
pop
mov
out
lret
lahf
es
mov
xchg
sub
arpl
sub
dec
cli
sahf
in
jmp
das
movsl
test
push
pop
xor
cmp
jne
xor
adcb
inc
hlt
or
pop
push
fs
jmp
xchg
fs
mov
test
mov
pop
test
test
or
popf
in
out
mov
mov
inc
fildl
mov
int3
test
adc
test
rorl
neg
and
lcall
adc
mov
divb
rolb
mov
mov
js
fdivl
clc
mov
decl
mov
dec
mov
sub
popa
or
testb
test
ficoms
pop
loope
test
sbb
insl
decb
cli
movsl
lret
int
mov
fxch
push
jbe
test
out
dec
sub
xchg
push
int
mov
filds
lret
cmp
int
sub
jne
lds
test
out
arpl
es
test
fs
push
in
ret
cld
push
adc
arpl
mov
jnp
test
popf
bound
and
movsb
mov
mov
cmp
xchg
push
and
xor
lods
pop
xchg
mov
mov
shl
pop
xchg
push
mov
mov
jle
and
or
and
dec
jp
fdivrl
jmp
stos
test
orb
aas
pop
and
out
js
movsb
fs
xchg
push
mov
adc
stc
int
cmp
fistpll
fiaddl
adc
add
dec
ret
add
repnz
test
xlat
mov
inc
mov
cli
fabs
test
mov
jp
arpl
xor
imul
and
ds
pop
mov
movsb
jns
xor
cmpsb
inc
pop
clc
pop
test
clc
adcl
adc
xor
xchg
aam
es
test
aad
dec
jl
pop
scas
dec
leave
push
mov
mov
sbb
int3
lea
xchg
xchg
testb
mov
jb
push
jle
bound
leave
cmp
daa
adc
shlb
push
xor
pop
mov
mov
xchg
cmpsl
mov
push
repnz
nop
notb
scas
dec
mov
sahf
test
enter
ret
and
fsubrp
int3
or
fimull
mov
test
push
in
adc
movsb
inc
lock
stos
jecxz
cmpsl
psubb
mov
inc
test
adc
sahf
test
cmp
jb
fildll
lcall
cmp
test
outsl
jmp
pop
call
pop
enter
arpl
dec
sbb
std
lea
rorl
push
clc
xor
in
push
adc
mov
dec
enter
mov
test
es
gs
mov
cmp
les
dec
mov
out
in
std
inc
stos
mov
push
xchg
jae
lock
cmc
mov
adc
push
test
pop
jl
iret
into
push
test
pop
sbb
inc
test
rcrb
test
rcl
push
jno
and
mov
repnz
dec
cs
lds
pushf
jmp
pop
mov
pop
test
cmp
call
sbb
popf
test
cwtl
adc
test
ljmp
in
cmp
cwtl
dec
mov
dec
mov
mov
xor
mov
icebp
test
mov
sbb
mov
mov
bound
add
outsb
adc
arpl
test
or
test
fsubrs
xor
pop
cmp
int3
and
mov
sahf
into
mov
enter
movsb
movsb
xchg
dec
in
push
add
out
test
mov
xor
push
in
push
sti
rorl
dec
fsub
mov
add
dec
test
mull
arpl
mov
mov
mov
jge
or
jmp
out
cmp
sub
inc
push
mov
out
adc
and
mov
sbb
movsl
mov
cmp
adc
sub
mov
mov
sub
mov
imul
loop
jmp
push
xor
mov
aas
adc
stc
pushf
inc
jmp
push
add
jnp
mov
les
cmp
push
test
push
imul
xchg
hlt
dec
or
bound
fs
or
int
push
mov
movl
test
sbb
xor
testb
bound
push
or
push
pop
test
and
test
push
jbe
out
ss
andb
inc
test
stos
xchg
sbb
sub
and
mov
aaa
loop
arpl
mov
and
xchg
movsb
cltd
das
fsub
jg
jae
dec
movsb
fadds
movsl
mov
mov
or
pop
cli
testl
adc
mov
inc
push
popa
fldt
gs
and
dec
cmp
fidivl
inc
inc
loopne
lret
cs
pop
test
lds
mov
jb
testb
push
and
cmp
icebp
les
inc
aas
add
mull
cmp
mov
mov
imulb
dec
repz
fwait
addl
mov
adc
xchg
or
inc
aam
sbb
lret
movsl
push
or
test
xor
mov
test
nop
or
cs
data16
mov
cmp
xchg
xchg
arpl
inc
xchg
test
sub
sbb
call
mov
outsl
test
mov
and
push
pusha
icebp
jg
pop
cmc
nop
dec
arpl
out
test
popf
movsl
jo
add
test
push
shll
fcompl
pushf
add
test
scas
loopne
test
adc
sub
mov
mov
and
xchg
or
dec
test
cwtl
xchg
test
push
inc
and
dec
pop
test
mov
jmp
add
cmpsb
cmp
inc
sbb
mov
andb
daa
imul
push
call
push
repnz
test
scas
push
sub
sub
jo
test
ficomps
pop
add
adc
mov
sahf
fs
je
lcall
scas
gs
add
cmpl
out
test
pushf
ja
push
push
push
es
loop
sti
pusha
lcall
mov
sbb
inc
or
test
stc
arpl
andl
cmp
push
movl
adc
xor
arpl
pop
das
test
xchg
adc
dec
adc
leave
or
icebp
movsb
jo
pop
inc
jne
es
or
and
push
loope
xor
movsb
icebp
jo
mov
sub
mov
dec
mov
ds
hlt
push
mov
xor
jl
test
jecxz
mov
fsub
push
lret
cmp
in
dec
and
je
mov
es
test
push
daa
push
test
ret
dec
mov
add
cmp
push
out
dec
test
mov
jo
sub
insl
push
jg
icebp
movsb
sbb
pop
rcll
mov
dec
test
jp
imul
movsb
test
jle
sub
test
jns
mov
mov
xchg
test
sub
aas
sub
loopne
test
jnp
fnsave
je
or
imul
int3
cmpsl
pop
push
or
test
jns
push
mov
test
ficoms
call
dec
std
repnz
rcll
pop
mov
shlb
xchg
stos
test
test
popa
push
sti
xor
addb
mov
push
mov
std
mov
adc
lods
mov
es
stos
jne
popa
xorps
and
inc
sbb
xchg
adc
call
cmp
lcall
dec
out
dec
sbbb
test
add
fadds
sub
xchg
ret
int
push
or
dec
test
mov
bound
mov
arpl
mov
sub
adc
push
les
shlb
push
sbb
int3
into
jle
xchg
mov
sub
ja
ret
and
bound
xor
cmpsl
aas
pop
arpl
push
into
ja
ret
or
dec
jp
push
ds
mov
lcall
dec
pop
repz
bound
lock
push
or
pop
mov
sbb
xadd
test
daa
add
data16
jl
xchg
cmpsb
inc
lret
test
cmp
or
push
popa
cmp
cmp
ljmp
push
mov
and
mov
and
pop
jae
xor
fistpl
add
push
jnp
in
and
arpl
cli
pop
add
mov
ret
sub
enter
repz
mov
jo
movsb
sbb
mov
mov
test
mov
lcall
pop
cwtl
lock
sahf
fiadds
and
out
xchg
test
test
fcomps
pop
xor
adc
popa
test
lcall
and
test
popf
jmp
test
or
mov
test
loope
xor
int
jo
adc
push
mov
mov
pop
test
adc
gs
test
and
mov
mov
test
add
daa
flds
and
sub
lcall
imul
insb
adc
loopne
outsb
test
cltd
xchg
push
scas
xor
push
bound
mov
mov
xor
sbb
outsl
mov
mov
in
pop
test
cmp
sbb
jne
test
push
lahf
or
jmp
in
test
gs
dec
repz
mov
mov
ret
mov
test
mov
mov
das
std
adc
nop
and
enter
mov
iret
bound
sar
mov
movsb
int
sub
jne
add
inc
in
and
mov
popa
clc
or
xor
cmp
pop
push
enter
jns
test
lcall
mov
mov
mov
dec
sahf
mov
and
mov
test
dec
es
loope
sub
sbb
mov
mov
fnsave
mov
stc
lods
loopne
fisubrl
popa
mov
xchg
rclb
jge
mov
cmc
insb
test
sbb
test
in
add
pop
ret
outsl
mov
sbb
dec
mov
cmp
enter
xor
movsb
stc
jb
mov
lret
and
inc
and
mov
test
vpacksswb
test
inc
fdiv
jne
movsb
test
xchg
and
mov
or
test
int
lret
push
xchg
mov
loope
push
mov
shll
test
clc
std
bound
push
add
test
jbe
add
mov
flds
sub
mov
pop
mov
cmp
movsb
fnstenv
add
test
sbb
pop
lcall
test
cwtl
aaa
cltd
or
inc
test
orl
outsl
rclb
lock
pop
mov
jae
mov
rcrb
fstpt
in
and
mov
jnp
adc
inc
mov
negb
iret
std
mov
or
or
sbb
mov
jge
daa
xchg
test
inc
mov
mov
sub
popa
flds
mov
test
sbb
mov
test
push
xor
test
xor
pop
xlat
test
pop
jnp
les
push
test
lds
pusha
or
mov
push
push
stos
inc
cltd
iret
dec
push
mov
dec
mov
loope
pop
fists
push
mov
cli
mov
push
test
add
popf
nop
inc
sub
inc
and
add
push
mov
fxch
rolb
ja
test
jl
enter
cltd
fnstenv
jmp
dec
pushf
mov
cld
and
rcl
lahf
gs
mov
les
cmp
cmpsb
iret
testb
jl
jb
sbb
push
stos
xlat
sub
popf
fwait
xchg
mov
push
ror
and
call
fiadds
lds
cmc
nop
arpl
dec
mov
fs
inc
or
xchg
cmpsl
clc
pop
dec
jb
arpl
es
subb
fldcw
add
in
push
xchg
aaa
push
mov
cmpsl
push
clc
bound
xchg
ja
pop
movsb
into
mov
jns
pop
mov
mov
test
aam
incl
das
mov
in
and
popf
outsb
mov
arpl
int
adc
cmpsb
fnstenv
je
test
mov
ds
and
cltd
mov
lret
mov
push
add
adc
xchg
lock
fisubrs
test
int3
xchg
jge
xchg
mov
mov
sbb
test
pop
js
ja
xlat
out
jns
cmp
jne
test
pop
subl
xchg
test
sub
int
movsb
sbb
mov
and
pop
push
mov
add
push
push
sub
shrl
pusha
shrb
popf
imul
rcll
sbb
test
and
loopne
popf
sub
mov
mov
jmp
cmp
out
in
sar
dec
xor
cwtl
std
cmp
lret
test
cmc
iret
push
inc
cltd
les
mov
inc
jbe
outsb
xchg
test
icebp
lds
add
test
mov
dec
push
sub
dec
stc
push
test
cld
or
arpl
testl
inc
push
xlat
call
push
sbb
aam
test
jge
mov
test
push
mov
pop
flds
and
enter
mov
cmpsb
insb
mov
adc
scas
xchg
jp
dec
ret
sub
out
into
test
push
test
sub
test
mov
pop
cmp
ja
sub
mov
jno
push
data16
inc
inc
fwait
movlps
mov
lea
jle
jnp
test
imul
test
push
cmp
sbb
dec
test
sub
pop
in
jge
cli
scas
and
cmc
cmp
xacquire
test
dec
mov
sub
xor
or
sbb
cmp
in
xor
lcall
aaa
mov
pop
sub
push
incb
fisubrl
test
dec
jecxz
into
push
fistl
jae
cmp
int
stc
hlt
test
push
push
pushf
pop
dec
xor
mov
cli
mov
ds
sbbb
xchg
adc
mov
and
push
lea
jb
push
pop
mov
xchg
add
ljmp
sub
mov
push
call
mov
and
es
jb
mov
push
into
jecxz
and
test
fidivl
jbe
cmc
push
inc
pop
sbb
loop
sbb
push
mov
mov
sti
sbb
xchg
fmul
test
add
add
mov
shr
daa
inc
cwtl
pusha
sbb
lds
dec
fmul
cmpsb
sbb
xor
inc
mov
sti
mov
xchg
sub
test
sub
cmp
push
mov
iret
inc
lahf
dec
movsl
notl
xor
or
pop
sbb
fstpl
cli
dec
test
loop
sbb
push
test
cmc
test
pop
xchg
movsl
inc
enter
lahf
bound
lcall
jbe
cmp
pop
mov
xor
icebp
cmp
in
xchg
in
dec
cmp
leave
mov
cmp
xchg
pop
xchg
push
lods
push
aam
out
lea
test
imul
mov
sbb
mov
sub
and
jne
jp
jns
mov
test
cmp
or
and
sub
int
or
test
mov
aad
lret
mov
in
sarl
das
insb
xor
jne
adc
fwait
sub
inc
clc
xchg
dec
mov
in
test
fdecstp
movsl
in
fisubrl
xor
jecxz
cltd
test
or
jb
cmp
inc
popa
xchg
sti
xlat
xchg
clc
xchg
addl
push
mov
sbb
fsubl
and
xchg
test
inc
mov
inc
inc
cmp
test
adc
jbe
push
xchg
lods
test
dec
or
pmulhw
imul
jmp
enter
lret
mov
in
cmp
mov
mov
nop
subps
andl
call
mov
test
sub
xor
sbb
push
xchg
sub
mov
testb
push
cmp
xchg
mov
or
lret
jp
dec
imul
daa
test
subb
je
inc
and
cmp
rcll
inc
dec
data16
sub
push
dec
test
add
or
mov
cmp
arpl
xlat
movsl
or
imul
repnz
mov
bound
arpl
mov
je
movlps
test
int
loope
mul
mov
cmp
xchg
fldenv
test
fwait
inc
out
int
test
and
test
sbbl
push
or
mov
and
inc
outsb
mov
cld
fisubl
xchg
mov
fnsetpm(287
xor
sbb
pop
mov
push
popf
lcall
adc
lods
dec
stos
add
test
cmp
bound
or
test
push
leave
sub
adc
push
ret
add
aad
int3
mov
push
jle
dec
xor
insb
test
jbe
and
js
add
pushf
dec
sbb
ja
cli
mov
test
pop
jbe
test
stos
xor
sub
cli
mov
enter
sbb
mov
insl
rol
test
cld
dec
sbb
push
or
lods
xor
test
jb
fsubrs
in
test
mov
movb
loopne
test
add
xchg
xchg
pusha
sub
cmp
test
or
jbe
inc
in
xor
sub
test
or
test
jno
test
xchg
test
xchg
mov
movsb
pop
mov
jecxz
cmp
test
ret
inc
lret
negb
push
insb
xchg
je
jmp
fwait
push
cmpl
xor
arpl
shr
and
or
sbbb
lods
pop
push
fildll
mov
das
sub
mov
nop
pop
mov
movsl
stos
push
andl
lods
add
adc
inc
xor
add
inc
adc
and
adc
clc
ror
mov
sbb
enter
test
push
testb
aam
inc
outsl
call
test
lcall
into
xor
xor
mov
jp
shrl
inc
stos
inc
mov
stc
test
xchg
dec
mov
or
idivb
sahf
sub
or
mov
test
cmp
aad
test
push
sub
pop
jge
in
test
lods
cld
into
push
pop
mov
test
mov
or
sahf
xlat
jp
mov
out
inc
dec
and
movsl
pop
ficompl
call
adc
and
lea
out
jmp
out
or
les
lahf
sub
lds
mov
push
mov
test
or
rclb
test
cmp
into
test
pop
or
movsb
pop
movsl
sub
xchg
sbb
push
shlb
stc
sub
test
je
subb
call
xchg
push
test
or
mov
test
ja
and
or
inc
testb
mov
enter
movl
cltd
mov
les
ret
push
dec
pop
stos
mov
jne
push
test
push
fwait
pusha
and
test
inc
cwtl
jmp
dec
test
pop
sbb
inc
mov
mov
lret
inc
arpl
bound
test
mov
sahf
mov
xchg
lds
in
lret
test
lcall
mov
sbb
push
movsl
lret
sbb
test
out
sub
and
pop
test
imul
pop
mov
test
lcall
test
enter
pop
mov
test
jno
gs
xchg
pop
fs
arpl
mov
fnstcw
daa
icebp
test
leave
xchg
xchg
inc
lret
test
pop
adc
mov
bound
dec
or
xchg
test
sub
loopne
movsb
mov
jo
data16
xchg
sub
loopne
jbe
mov
test
mov
lret
xchg
and
and
dec
mov
sbb
arpl
jb
sub
nop
xchg
test
push
or
mov
push
mov
clc
cmpsl
ja
test
and
jno
loop
push
mov
out
fistpll
test
cwtl
clc
test
test
test
test
dec
mov
inc
xor
lea
mov
in
jg
xchg
xchg
out
mov
mov
push
cmpsb
or
es
inc
ja
test
push
ret
aaa
xor
push
imul
mov
mov
sub
test
fwait
je,pt
dec
cmp
jb
sarl
xchg
movsl
sub
add
mov
lods
loop
and
cmp
inc
xchg
mov
call
dec
push
stc
and
shrb
ja
mov
movsb
cs
fs
in
lret
sub
push
mov
test
dec
notb
data16
mov
gs
jp
add
pop
ret
aas
minps
xlat
sub
mov
fcmovnu
cmp
pop
hlt
test
stos
pop
xor
jbe
push
movsb
inc
mov
test
inc
mov
test
or
loopne
incl
scas
pop
xchg
jae
repz
push
cmpsb
aas
test
jns
push
les
dec
mov
ret
mov
cmp
repnz
popa
test
dec
repz
adc
ret
and
daa
lcall
test
pop
lods
dec
dec
fstl
jnp
pop
push
sahf
aad
sbb
fbstp
lret
test
pop
stc
jp
shlb
mov
clc
push
bound
in
aad
and
data16
sub
enter
and
xor
test
xchg
ja
pop
lods
inc
adc
test
stos
push
cltd
test
pop
sbb
arpl
bound
or
arpl
sub
sbb
lcall
hlt
cltd
cmp
xchg
aam
lahf
and
mov
out
or
cmp
and
adc
call
xchg
movsl
lret
inc
ret
push
mov
addb
cmp
test
and
lods
arpl
scas
mov
add
fadds
and
test
inc
mov
movb
lods
imul
xchg
sahf
pop
andl
mov
mov
adc
and
mov
fcmovbe
sub
test
inc
ss
jno
in
mov
out
pop
test
rcrb
test
xchg
cs
mov
mov
arpl
jne
adc
dec
xchg
popf
jbe
nop
gs
mov
test
sbb
test
neg
icebp
movsl
jb
cmc
mov
test
cmp
and
mov
fadds
xor
cwtl
cmovae
xor
lods
insb
rolw
xchg
lds
test
inc
das
add
decl
mov
mov
and
cld
dec
bound
add
add
cmp
test
dec
pop
addr16
inc
aaa
aad
sbb
sub
notl
dec
sbb
mov
stos
jbe
mov
repnz
loop
xlat
sbb
xchg
dec
jl
jns,pn
jne
test
inc
fcoms
push
test
xchg
in
pop
bound
mov
pop
push
imul
push
pop
mul
adc
pusha
pop
sub
adc
dec
shrl
ljmp
sbb
cmpsb
test
xchg
arpl
add
and
xlat
inc
cmp
js
mov
sahf
pop
dec
push
xor
inc
inc
push
dec
dec
sub
pop
mov
test
xor
out
loop
xor
add
and
mov
xchg
mov
enter
stc
add
pop
inc
test
jnp
test
cmp
test
push
cmp
mov
test
or
dec
jle
or
loope
les
movsl
pop
or
out
test
dec
pop
fsubs
and
xchg
shlb
test
aam
icebp
fs
movsb
push
jb
cld
dec
jg
mov
push
pop
adc
arpl
or
dec
ret
cmp
sahf
test
outsl
dec
jne
jno
inc
lds
ljmp
mov
mov
bound
xor
cmpb
add
cmc
cmpsb
jle
mulb
and
pop
sub
fs
cmp
jecxz
subb
inc
rclb
adc
movsb
mov
pop
dec
and
sarb
xor
test
scas
xor
test
dec
or
into
mov
dec
test
pushf
gs
xchg
adc
jns
push
inc
stos
test
aam
push
xor
and
pop
popa
fstps
inc
pop
xor
pop
lock
xor
mov
out
outsl
inc
cmp
fisubs
mov
mov
mov
int
test
sbb
repnz
ret
arpl
mov
sarb
loope
mov
or
mov
or
test
mov
lock
sub
call
xor
and
fists
movsb
pop
repz
shll
mov
stos
test
loope
mov
jae
jle
rcrl
aad
mov
out
aam
test
movsl
push
jg
movsb
dec
test
mov
sub
cwtl
jl
cmpsb
ret
or
enter
nop
loopne
dec
and
test
mov
test
push
mov
inc
mov
inc
lock
mov
or
dec
test
or
cmpsb
outsb
aam
sbb
sahf
jo
and
insb
icebp
test
inc
inc
mov
cwtl
mov
cmpsb
inc
stc
pop
stos
jg
imul
jmp
data16
sbb
jle
pop
out
bound
dec
xor
mov
fidivrs
and
adc
push
test
push
lret
loop
std
test
mov
test
test
jp
sbb
enter
imul
inc
testb
outsl
scas
cmc
add
push
mov
or
addr16
ret
lret
pop
mov
pop
test
lds
in
and
mov
and
mov
nop
data16
in
push
cmp
mov
sub
push
jp
sub
jo
cmp
push
xlat
push
mov
arpl
lcall
rcrl
adc
push
sbb
sub
xor
fldcw
leave
mov
divb
test
push
cmp
lods
test
xchg
adc
into
clc
movsb
push
scas
shll
mov
lock
leave
andl
inc
arpl
push
pop
xlat
add
and
inc
popa
mov
xchg
loop
mov
rorl
push
inc
sub
inc
push
outsb
div
arpl
and
jne
fldl
dec
dec
xchg
test
ja
xchg
js
jl
sbb
jbe
adc
test
nop
lret
xor
xorb
lcall
and
arpl
cmc
mov
aaa
stc
pop
push
dec
test
orb
imul
test
std
mov
leave
jns
sub
xchg
push
test
in
hlt
cmp
dec
pop
es
arpl
negl
test
cmp
aad
aas
xor
add
daa
out
mov
inc
cmpsb
mov
mov
loopne
lds
test
adc
dec
xchg
cwtl
sbb
lcall
mov
adc
cli
jmp
mov
inc
scas
call
iret
stc
clc
ret
jle
sub
aaa
test
push
sbbb
sub
pop
aas
pop
lock
jbe
fwait
adc
push
test
inc
push
cmp
dec
add
ret
pop
jecxz
mov
cltd
test
jns
add
test
test
mov
jg
push
add
xorl
inc
lods
add
pop
out
inc
pop
test
scas
pop
cmp
test
clc
nop
popf
xchg
mov
mov
lret
cmc
fstpt
pop
test
push
mov
test
sbb
dec
test
sbb
nop
test
sbb
test
mov
fnstcw
inc
lret
daa
int
shlb
imul
rorl
call
mov
aas
xchg
inc
divl
xchg
dec
dec
pushf
mov
fsubp
fisubrl
and
mov
jle
popf
movsb
xchg
cwtl
rorb
pop
dec
inc
shlb
fstps
jns
repnz
insb
ret
dec
xchg
lds
andl
leave
push
roll
jle
test
adc
addl
sub
fdivl
xchg
push
dec
addr16
test
and
cs
insb
test
movb
dec
out
filds
push
test
cmp
test
sbb
test
fwait
enter
xor
mov
imul
dec
pop
or
jecxz
mov
jno
inc
cmpsb
inc
pop
push
pusha
mov
mov
cmp
cmpsb
dec
stos
inc
test
mov
imul
push
in
mov
out
mov
mov
lret
repz
jnp
test
ret
jg
call
test
cmp
cmp
push
push
iret
add
lret
in
in
sbb
lcall
divl
test
test
pop
and
sub
jl
add
test
aad
mov
jecxz
mov
outsb
jo
inc
rcr
add
das
lret
notb
test
call
xchg
push
and
outsl
add
xchg
ret
shrl
mulb
xchg
scas
fnstenv
sbb
in
sbb
lds
xchg
in
push
or
or
mov
test
aad
movsb
imul
cli
mov
xchg
cli
movsb
pop
add
xor
mov
int
mov
fwait
test
and
lea
into
test
inc
cmp
test
dec
sbb
ret
and
xor
mov
int
sbb
xchg
in
mov
lret
dec
ficoml
adc
inc
and
pop
daa
loope
dec
lcall
or
jno
or
movsb
pusha
js
and
test
inc
push
add
std
insb
adc
sbb
push
nop
sbb
loopne
stos
test
aas
cli
or
rcrl
inc
iret
and
push
arpl
and
adc
ja
sub
cli
fadd
out
mov
pop
test
pusha
lcall
cltd
mov
jmp
adc
imul
inc
cld
sbb
mov
and
inc
dec
lret
addl
mov
test
sti
test
lahf
adc
dec
aas
pusha
test
sub
mov
sub
daa
sahf
arpl
faddl
mov
in
push
xchg
inc
iret
imul
fs
jns
and
sub
lret
xchg
xchg
jl
vaddsubpd
test
mov
add
fs
test
out
stos
hlt
sub
test
sbb
pop
mov
test
dec
push
mov
adc
pop
mov
test
pop
mov
push
test
or
addb
mov
test
in
insb
xor
pop
outsb
lahf
xchg
mov
push
sarb
sahf
test
dec
and
xor
mov
test
call
dec
mov
pop
fadds
test
or
loop
or
sub
xor
push
sbb
das
sbb
imul
sti
test
sub
mov
leave
pop
push
test
pop
cmp
repz
inc
mov
or
xchg
sub
aad
mov
adc
gs
jle
into
test
push
sub
or
xor
push
sub
rclb
dec
mov
pushf
loopne
repz
loop
cmpsb
mov
inc
movsl
out
or
test
xor
test
sub
cmp
scas
sar
sub
dec
adc
test
iret
xchg
dec
loop
push
or
test
or
es
mov
data16
into
gs
sub
dec
inc
mov
push
cltd
xor
in
stos
xchg
xchg
add
push
test
fstps
inc
sub
inc
jl
or
in
mov
pop
dec
jg
movsb
mov
sub
and
ds
cwtl
cltd
fldenv
cmpsb
int3
adc
xor
test
gs
adc
cmpsl
mov
andb
sbb
pop
mov
and
add
mov
mov
int3
pop
cltd
jmp
outsb
je
sbb
and
push
mov
movsl
loop
inc
xor
les
dec
movsb
outsb
std
leave
pop
loope
fldenv
xchg
enter
lods
idivl
aad
xchg
push
mov
mov
test
cli
cwtl
add
test
inc
daa
enter
dec
adc
jb
or
mov
jo
loop
popa
mov
das
test
sbb
ss
test
jle
add
ret
fimull
mov
and
cmpsb
loopne
test
cld
cmpsl
push
les
and
add
test
ficompl
and
sbb
xchg
xor
clc
dec
les
dec
aad
jnp
adcl
dec
into
shlb
test
ja
outsl
mov
add
push
mov
cmpsl
test
cmp
jecxz
and
mov
push
test
push
jl
rcl
test
sti
leave
mov
fiaddl
test
push
or
fmulp
cmpsb
mov
mov
imul
pop
xchg
je
fwait
lcall
lret
pop
aas
cmc
cmpsb
sub
push
mov
out
test
leave
dec
lods
push
test
je
mull
push
test
fstps
sbb
inc
mov
pushf
mov
cmp
mov
jle
mov
mov
mov
push
mov
test
test
and
dec
outsb
pop
movb
fisubrl
xlat
pusha
dec
or
test
movb
and
mov
push
push
mov
mov
adc
mov
mov
dec
dec
test
ret
arpl
pop
or
jl
xlat
xor
insb
test
lods
repnz
loope
insb
stc
push
dec
rep
sub
dec
adc
leave
mov
movsb
mov
xchg
js
jle
test
pop
rcr
stc
das
and
pusha
test
into
aad
enter
aad
movsb
dec
test
push
xor
mov
test
or
and
jnp
dec
outsl
test
js
mov
adc
pop
sti
add
movsb
outsb
cmp
in
sub
mov
mov
in
adc
or
push
nop
or
push
pop
lea
int
push
sub
test
jecxz
push
adc
enter
aaa
mov
incl
lret
push
int
dec
mov
and
adc
push
into
and
sbb
cmp
testl
and
jmp
clc
xchg
test
shlb
sub
iret
mov
sub
sbb
test
xor
mov
les
inc
movsb
insl
lcall
andb
add
lods
loopne
imul
xchg
in
mov
adc
mov
push
loop
jg
inc
xchg
mov
pushw
sub
stos
loope
xor
cmp
push
into
lods
test
and
mov
daa
stc
add
pop
test
fildll
dec
push
test
sti
push
push
mov
divb
pushf
pop
inc
mov
jnp
call
outsb
pusha
jns
sbb
clc
mov
jl
arpl
mov
or
dec
add
js
pop
pop
push
cmpsb
xchg
sub
test
faddl
and
loopne
jae
sbb
pushw
test
xchg
push
mov
popf
mov
adc
dec
jmp
cli
pop
bound
scas
xchg
mov
sub
mov
movsb
mov
mov
push
dec
iret
int
mov
test
and
movsb
shll
push
rorb
in
mov
mov
movsb
pop
fwait
movsl
and
mov
aas
test
rorl
clc
inc
inc
and
jle
adc
sub
adc
lock
push
test
mov
mov
in
add
jge
add
test
xbegin
cmpl
ror
loop
adc
mov
ss
test
mov
jl
adc
in
pop
and
sbb
xor
mov
cmpsl
xchg
cld
test
loope
cmpl
jbe
jl
xor
and
test
mov
loopne
enter
scas
shlb
xchg
push
xor
movsl
and
xchg
cli
call
pop
data16
mov
out
push
movsb
es
fmulp
idivb
cmp
test
xchg
out
mov
je
orb
add
fs
jle
mov
cmp
cld
dec
fst
push
test
outsl
push
sub
dec
ret
xchg
lret
sub
repnz
push
bound
lds
pop
or
stos
mov
jl
inc
pop
ja
mov
sub
lahf
adc
test
pop
mov
stos
and
push
test
push
imul
xor
addb
into
xchg
pop
dec
fbstp
test
and
out
bound
or
les
sbb
inc
fldenv
js
test
arpl
lcall
push
dec
cmp
mov
push
jo
stos
mov
arpl
test
and
cmpsl
test
shlb
jp
test
das
inc
dec
pop
test
daa
mov
dec
cmc
or
std
insb
scas
pop
movsl
test
ret
loope
sarb
jb
xchg
jp
test
in
add
and
push
lea
sarb
push
mov
cmp
in
imul
push
insb
ret
jbe
dec
sti
and
or
cmpsb
movsl
mov
loope
lds
test
fsubs
push
xchg
and
test
add
mov
cmc
test
mov
rcl
xchg
scas
mov
and
vandps
mov
rcrb
lcall
adc
int
and
test
dec
sub
inc
test
mov
inc
push
loopne
outsb
add
dec
xchg
test
je
jno
xlat
mov
arpl
or
scas
xchg
xor
and
add
dec
pushf
test
push
call
test
inc
and
cmp
cmc
cli
mull
insb
mov
cmp
adc
out
lods
fadds
ror
pop
addl
fs
and
jp
pop
nop
clc
fdivrl
test
aas
test
test
push
daa
out
div
test
rcrl
int
popf
push
xchg
aad
test
enter
std
stos
sti
xor
and
xchg
mov
int
rcll
dec
mov
aam
sub
pop
test
flds
jae
shl
and
xor
mov
sub
xlat
or
rcrl
test
mov
cmc
in
inc
arpl
cmpsb
inc
in
xlat
mov
lds
test
rcll
adc
out
stos
ficoml
push
or
cmp
inc
sub
nop
add
push
cmp
test
cltd
cmp
ret
push
jbe
push
stos
loope
xchg
adc
popl
sub
test
sbbl
incb
js
jp
sbb
cli
sub
pop
inc
in
dec
pop
popf
mov
loope
inc
cmp
push
cmc
arpl
pop
or
test
add
nop
test
aas
push
xchg
dec
mov
movsb
int
push
dec
xchg
sbb
cmp
pop
arpl
shl
scas
or
test
out
mov
fstl
fcompl
xchg
insb
shlb
mov
and
testl
adc
push
test
data16
jecxz
repnz
in
push
mov
sub
bound
dec
xor
sbb
movsb
push
xor
sbb
imulb
inc
jmp
jp
test
jno
sub
xor
mov
pop
out
xchg
cltd
test
imul
in
test
cmp
push
movsb
push
lods
inc
test
les
pop
cmp
sub
jle
dec
in
mov
sti
inc
insb
mov
mov
arpl
mov
outsb
push
loopne
out
decb
leave
add
cwtl
and
dec
jg
lahf
mov
in
mov
cmp
lods
xchg
mov
test
aas
sbb
cltd
mov
xchg
sbb
out
int
stos
mov
push
mov
in
fcomps
lock
xchg
js
mov
ret
addb
pushf
dec
lahf
jns
aad
in
xchg
in
leave
push
out
inc
cwtl
roll
call
sahf
mov
clc
bnd
mov
jne
and
sub
lret
inc
mov
test
lcall
das
test
je
inc
dec
hlt
mov
mov
in
test
push
and
inc
sub
pop
sub
push
xor
dec
lahf
in
push
dec
xchg
push
call
arpl
fcom
test
xchg
and
dec
lock
ds
les
jg
mov
push
test
divl
test
cmp
enter
bound
enter
sbb
xor
sub
mov
add
mov
cld
lret
pop
mov
pop
dec
in
and
mov
rorl
dec
int
lods
add
pop
std
or
mov
add
jle
ljmp
pop
add
jne
repnz
or
test
inc
pop
jle
rcrb
jecxz
flds
add
add
mov
int
pop
mov
push
and
mov
test
arpl
sti
sbb
sbb
test
lods
test
mov
movsb
jbe
push
idivl
mov
test
push
pop
decb
mov
fdivrs
inc
test
testl
mov
in
movsb
xchg
in
enter
orl
fidivrs
sub
push
addb
idivb
mov
push
cmp
je
mov
cmp
rcrl
pop
adc
push
push
push
mov
mov
dec
push
adc
pushf
pop
fists
inc
pop
or
in
xor
sbb
test
ret
mov
add
add
jmp
or
sub
int
mov
or
addb
mov
push
adc
roll
or
mov
out
mov
mov
mov
shlb
xchg
dec
movsl
andb
sub
scas
mov
test
mul
add
std
fs
sbbb
inc
dec
test
shrw
addl
xchg
or
and
mov
outsl
jbe
xchg
mov
cmpb
sahf
clc
movsl
imul
test
test
mov
in
mov
inc
xor
push
inc
imul
or
arpl
pop
idiv
mov
in
enter
sbb
push
pop
mov
mov
jns
mov
stos
mov
inc
adc
xchg
adc
mov
test
insl
vxorps
test
shll
cltd
repz
mov
dec
sti
loop
test
int3
push
dec
pop
test
xor
lcall
cltd
xchg
dec
push
pop
mov
movsb
in
push
nop
mov
arpl
mov
xor
in
sbb
je
cmc
xor
xor
mov
sbb
and
test
pop
andl
push
into
in
xchg
xchg
cltd
pusha
cmpsl
scas
sbb
mov
test
jecxz
xorb
fs
daa
dec
test
daa
mov
pop
les
imul
fisttpll
loop
test
add
insb
and
test
lahf
adcb
jnp
mov
lret
test
adc
fwait
add
popl
inc
xor
mov
repnz
fsts
pop
fistpl
popa
adc
stos
xor
lahf
jbe
int3
js
add
pop
jmp
les
or
repnz
sbb
add
test
add
adcl
test
inc
rcr
xor
jb
movsb
les
mov
xchg
mov
and
test
mov
xor
pushf
mov
xor
test
sti
repnz
shrl
jmp
ja
mov
mov
inc
aam
cmp
jp
push
fst
jo
test
xchg
fnstcw
test
loop
add
sub
inc
and
inc
into
xor
xchg
bswap
outsb
test
std
cwtl
sub
dec
dec
xor
mov
les
cld
popf
ja
pusha
mov
fstl
lods
mov
dec
cld
fiaddl
cmp
cmp
and
inc
mov
and
fcmove
mov
push
sub
stos
enter
dec
shl
xchg
mov
roll
fstl
ret
xor
jns
roll
daa
inc
movsb
movsb
jge
sub
out
arpl
mov
frstor
dec
sahf
test
lret
jb
push
push
dec
test
jbe
aam
xchg
mov
test
sbbb
jmp
jbe
sahf
and
mov
lds
sub
inc
test
cli
test
adc
enter
xor
mov
in
push
cltd
inc
and
mov
mov
lds
ja
sub
out
inc
shrl
sahf
or
ret
into
pusha
mov
cltd
sbb
in
lcall
sub
pop
in
cmpsb
cmc
cmp
cmp
cmc
insb
push
push
test
pop
mov
dec
mov
andl
sub
mov
dec
cmp
jl
in
and
arpl
scas
adc
cmp
xchg
mov
inc
ror
lcall
test
jmp
lcall
mov
aad
cmp
push
and
imul
mov
sbb
in
mov
inc
cltd
and
jp
adc
xchg
out
push
push
mov
sbb
aad
xorb
notb
fiaddl
xchg
sub
mov
pusha
mov
push
xor
addr16
push
pop
pop
test
jo
push
or
lds
int3
movsl
mov
cmp
dec
mov
arpl
xor
inc
pop
mov
cltd
test
sti
push
push
mov
fwait
xor
loop
cmp
mov
mov
push
mov
dec
aas
cmp
add
push
movb
aaa
inc
ss
mov
and
mov
add
jl
pusha
iret
cwtl
mov
push
imul
mov
aam
pop
mov
jne
rolb
push
or
out
lock
mov
lret
loopne
cltd
loop
lahf
jge
mov
movsb
ljmp
subb
jno
stos
xor
arpl
fucom
add
enter
inc
rorl
test
daa
lret
out
test
jno
jo
pop
adc
jbe
add
mov
push
mov
iret
cli
xor
xchg
pop
jns
sbbb
mov
lds
mov
xchg
test
out
jp
push
in
cmp
mov
pop
movsb
or
fildl
sub
test
dec
inc
push
ds
cwtl
mov
sub
pushf
iret
jae
mov
or
and
mov
or
daa
movsb
push
popa
imul
into
fildl
dec
sahf
test
sbb
push
mov
testl
cmp
pushf
lahf
dec
out
cltd
mov
es
xchg
mov
test
sbb
mov
out
mov
push
sar
mov
and
test
mov
xchg
push
aam
jecxz
lods
in
dec
push
lock
add
ds
sbb
outsb
test
aas
repz
test
adc
test
mov
mov
loop
ja
jae
test
mov
inc
test
out
out
add
dec
jns
or
dec
mov
incb
addr16
test
adc
mov
mov
test
mov
push
mov
mov
mov
cmpsl
cmc
sbb
test
lods
test
sbbb
in
mov
enter
dec
movsl
pop
jl
or
test
xor
aas
inc
sub
mov
and
movsb
mov
fldl2t
test
lods
inc
aas
add
xor
adc
jmp
in
sbb
fistps
loop
loope
lea
push
rolb
fildll
loopne
xchg
pop
cmp
mov
lods
mov
sbb
mov
loopne
push
cltd
out
test
dec
out
test
sub
lret
sti
test
dec
add
lcall
dec
in
jmp
inc
mov
push
cli
xchg
add
jne
and
ret
fidivs
fmuls
loope
and
je
int
into
add
xchg
jmp
pop
or
loop
pop
clc
mov
dec
jecxz
xor
cltd
popf
push
add
aad
imul
or
mov
or
lds
xchg
and
mov
aam
fmuls
or
xor
pusha
ja
enter
sbb
sbb
shrl
mov
dec
data16
xlat
insl
arpl
xchg
sbb
adc
sbbb
mov
and
inc
jp
mov
cmc
or
enter
das
cmp
adc
in
xchg
clc
push
cmpsb
jecxz
stc
lcall
dec
and
data16
sub
adc
arpl
in
movsb
stc
jg
in
negl
fadd
test
sahf
adc
testb
test
out
xor
enter
xchg
sub
adc
xchg
push
dec
test
sbb
test
sbb
into
dec
test
aaa
jbe
add
in
clc
lcall
flds
adc
xchg
call
mov
test
xor
je
test
xor
shlb
repnz
test
sub
bswap
jns
mov
mov
sub
dec
xchg
out
xor
sub
xchg
out
pop
adc
adc
stos
sub
inc
mov
xchg
leave
sub
push
ret
les
test
mov
movsl
jecxz
int
js
movsb
jg
sbb
sbb
cwtl
pop
cmp
dec
popf
jmp
lcall
loope
rorl
or
out
mov
test
dec
or
out
lret
loopne
in
push
pop
mov
cwtl
aas
outsb
mov
cli
mov
sub
aad
test
enter
add
jb
in
sub
jo
mov
adc
push
cmp
pop
enter
mov
xlat
imul
cmp
fnstsw
fldt
ds
in
std
pop
lods
xor
jp
sbb
lret
xchg
push
add
mov
add
sub
test
popa
add
mov
les
lcall
dec
xchg
lds
je
jecxz
cmc
test
adc
inc
or
lods
and
lea
test
push
aas
std
test
dec
mov
mov
mov
xor
test
mov
push
xchg
test
rclb
cmp
cmp
loop
add
lahf
shlb
cmp
jg
mov
ret
dec
in
int
mov
aaa
or
jnp
stos
in
cmp
cli
cmp
pop
test
or
popl
pop
test
imul
xchg
push
jbe
lock
fxch
test
cmp
test
aam
jge
pop
test
mov
jne
test
scas
push
leave
pop
sti
push
enter
xchg
push
les
fcomps
or
xchg
adc
xchg
cmp
sti
cmpsb
sub
inc
sub
jl
mov
adc
in
lods
mov
mov
jecxz
pop
fldl
stos
pushf
inc
arpl
mov
movsl
addr16
pop
add
xchg
xchg
das
stc
test
jp
fsts
xor
test
lret
mov
mov
test
pop
mov
and
cwtl
push
adc
in
incb
sbb
pop
add
test
outsb
popf
leave
movb
fsts
in
cltd
sub
push
loop
addr16
jl
sbb
mov
xor
push
mov
pop
sub
mov
movsl
sub
in
push
jl
cwtl
pop
pushf
fwait
test
xor
addl
out
movsb
inc
inc
jae
xchg
fdivp
daa
dec
and
jnp
movsb
pop
cltd
jne,pt
and
sub
xor
jecxz
stc
aad
into
test
outsb
sub
jb
sbb
movsl
in
or
pop
cmpsl
stos
int
les
lods
int3
addl
call
data16
insb
push
pop
aas
xchg
mov
cmpsb
cmp
in
push
push
mov
shll
out
push
and
test
daa
add
test
dec
ljmp
rclb
pop
pop
pop
mov
test
lock
insl
mov
movsb
hlt
dec
jns
loopne
sbb
mov
in
adcb
mov
dec
sub
cmp
mov
test
jo
inc
cmp
adc
mov
lret
test
dec
in
mov
lock
mov
daa
inc
and
mov
insb
xor
pop
mov
cli
test
sbb
sub
add
hlt
fcoms
sub
xlat
sub
loope
mov
push
test
cmpsb
or
cmp
dec
push
test
popa
xor
jmp
inc
fdiv
jp
jne
adc
cltd
xchg
outsb
sbb
sbb
ret
dec
inc
mov
adc
cltd
pop
jne
bts
and
aam
xor
push
bound
add
shlb
psrlq
ljmp
dec
xor
xor
add
enter
cmp
rolb
les
mov
aaa
test
cmp
arpl
mov
pushf
sbb
test
js
movsl
fdivrl
fucom
test
mov
cmpsb
mov
mov
inc
fwait
xchg
fdivrl
repnz
into
push
dec
pop
mov
cmp
fwait
xor
jle
lods
and
dec
sub
arpl
cltd
test
mov
outsb
dec
int3
fwait
sbb
push
jb
push
arpl
bound
popa
movsb
test
pop
mov
add
mov
mov
jae
sub
int3
push
test
jmp
outsb
loop
xor
gs
cmpsb
in
test
pop
enter
jmp
sti
sub
fmulp
cmp
or
xor
shll
shlb
rolb
mov
fildl
insb
stos
testl
ficoml
or
test
cmp
ret
lods
push
xor
and
sub
rcll
mov
lcall
bound
stos
and
mov
cld
scas
in
shl
mov
or
movsl
out
lret
insb
jecxz
inc
cmpsl
mov
or
cltd
cmpsb
movsl
push
dec
test
push
rclb
arpl
bound
dec
test
mov
outsb
or
stos
inc
lret
mov
out
rcr
test
neg
mov
cmp
xchg
scas
push
mov
mov
packsswb
popa
aam
test
sbb
mov
fptan
xor
ret
and
fs
outsb
call
push
and
decb
sub
ja
test
or
rolb
dec
adc
test
clc
lods
mov
jb
js
cmpsl
test
cmp
add
xchg
dec
test
jle
ljmp
shlb
push
mov
and
stc
test
aam
mov
sbb
adc
mov
aam
jns
test
test
lods
xchg
test
lock
dec
xor
mov
mov
push
mov
enter
xchg
pop
out
pop
sbb
in
inc
push
arpl
xchg
mov
loopne
mov
clc
imul
fistpll
pushf
repnz
xor
mov
mov
sub
test
lahf
pop
mov
xlat
mov
inc
xchg
test
or
adc
test
mov
stc
mov
mov
test
inc
ret
mov
xor
pop
test
sbb
in
movsb
nop
xchg
loop
sahf
outsb
test
ja
rcr
nop
xchg
clc
inc
or
xor
sub
cmpl
xor
lods
lds
xorl
mov
aam
adc
jl
int3
push
xor
pop
popa
pushf
inc
test
dec
mov
movsl
jb
flds
sbb
repz
jne
jp
inc
out
out
cmpl
adc
cmp
test
or
sbb
rcr
mov
jp
std
dec
mov
sahf
ret
and
aam
dec
in
lods
test
mov
xchg
dec
je
test
test
test
arpl
test
ja
inc
hlt
je
inc
insl
jl
loop
test
in
mov
mov
not
out
jne
bound
decb
cwtl
mov
mov
mov
test
test
loopne
and
test
ss
inc
or
cmp
lea
int
jno
mov
xchg
fs
mov
orl
mov
aaa
test
push
sub
out
shlb
fiaddl
sub
test
jbe
cmc
in
subl
test
lds
xchg
test
fldenv
dec
ja
imulb
test
repnz
pop
test
out
push
adc
xor
sbb
mov
shrl
xlat
xor
test
fs
enter
test
add
hlt
and
jecxz
mov
mov
pop
jecxz
jbe
call
push
jp
leave
daa
test
lret
lds
mov
test
pop
movb
and
test
push
bound
arpl
inc
es
xorb
inc
test
ret
fsubl
lock
mov
sbb
test
out
xlat
inc
ss
ret
xor
mov
roll
cmp
in
cltd
shll
std
test
pop
pop
add
adc
push
pop
into
arpl
test
inc
and
sub
cld
mov
dec
or
mov
or
or
cmpsb
mov
xchg
push
ret
in
mov
jmp
rorb
jbe
mov
push
pop
sub
test
loop
mov
repnz
movsl
mov
pop
pop
test
mov
mov
into
test
sarb
test
clc
test
mov
dec
pop
inc
add
test
repnz
push
add
dec
stc
push
mov
mov
test
dec
ret
fwait
movsb
cli
enter
mov
inc
adc
test
into
jl
in
shl
mov
cltd
fsubrs
out
lods
ret
cmpsb
aam
test
hlt
inc
jns
mov
adc
bound
sar
mov
test
lret
sbb
sarl
out
in
sub
setp
sub
mov
cli
mov
test
ret
or
fs
jae
enter
cmpsb
pop
dec
insb
pusha
mov
inc
sbb
mov
mov
push
inc
cs
pop
push
pop
pop
out
or
out
test
test
movsb
add
jle
push
or
test
lds
test
adc
inc
jmp
xchg
mov
rclb
fbstp
test
cli
mov
xchg
push
test
pop
stos
xchg
push
sub
das
test
fistpll
movsb
jmp
inc
jnp
ss
ret
nop
loopne
negb
push
movsl
arpl
mov
fbld
dec
xchg
es
test
notb
gs
test
jae
loop
mull
ret
add
jmp
mov
sbb
fbld
fnstsw
mov
dec
adc
jg
popf
inc
adc
fadds
andb
pop
jne
pop
mov
or
shll
xor
sub
push
xchg
sbb
insl
lret
ror
test
mov
clc
test
push
fldl
cmp
dec
mov
and
in
imul
mov
dec
lcall
sub
mov
mov
jge
test
xor
test
and
push
jb
mov
es
mov
add
cmpsl
jae
call
test
scas
cwtl
into
jne
loop
arpl
mov
aaa
cmc
shrb
sub
rcll
sub
aaa
push
push
testl
cmp
or
cmp
mov
mov
repnz
push
icebp
stos
fiadds
xchg
fldl2e
arpl
pop
loopne
xchg
idivb
add
hlt
cmp
js
mov
daa
mov
cmp
in
dec
filds
push
mov
ljmp
pusha
xor
lods
jnp
aas
pop
jecxz
test
adc
cltd
test
or
jo
push
std
mov
ds
mov
mov
divb
and
mov
cld
pop
dec
mov
test
or
pushf
fldt
sub
lods
adc
inc
adc
das
movsb
stc
arpl
mov
sub
fnstcw
or
push
sbb
pop
xor
adc
sub
or
ficompl
push
test
out
cmp
mov
xchg
jecxz
xchg
mov
add
sbb
jl
push
bound
aam
leave
dec
cmp
lds
cmc
cmpsb
mov
fstpl
test
stos
cmp
jne
push
test
testl
in
movsb
mov
xchg
scas
inc
mov
pop
mov
and
loope
mov
test
into
push
in
dec
or
push
mov
andl
movb
stos
jo
test
dec
out
and
cmp
xlat
lds
pop
push
mov
xchg
mov
push
test
test
leave
lock
push
test
inc
sub
rclb
enter
or
out
test
xchg
add
xchg
sbb
enter
sbb
test
inc
sub
mov
pop
test
cmp
sub
scas
dec
lcall
hlt
xor
sbb
dec
cmp
outsl
test
mov
insb
sub
shlb
jae
test
mov
inc
loop
dec
test
mov
mov
push
jecxz
inc
dec
cmp
gs
lcall
sub
cmp
test
jne
add
jl
jge
test
xchg
xchg
shll
xor
mov
arpl
mov
test
sub
xchg
lcall
cmp
test
sbb
mov
jl
rolb
mov
add
data16
mov
fidivl
xor
enter
adc
add
cmp
add
adc
fmuls
or
jle
lea
ret
mov
xchg
test
sub
and
aad
filds
ja
arpl
mov
pop
xor
test
std
lret
loopne
stos
hlt
arpl
repz
test
cmc
outsl
xchg
les
enter
es
or
aam
cmp
movsb
mov
dec
mov
inc
test
and
arpl
test
sub
fdivs
cs
filds
add
mov
adc
movsb
pop
setne
in
sbbb
jg
outsl
jle
mov
dec
loope
out
sti
xor
test
push
shrb
mov
popl
aas
sub
mov
mulb
jno
int
aad
in
mov
roll
xchg
mov
insb
xor
xchg
dec
fs
cltd
jle
testb
inc
sbb
or
sub
mov
loopne
test
cwtl
adc
test
dec
cld
ss
cmp
aas
xor
movsl
mov
test
dec
movsb
lcall
insl
data16
xchg
push
dec
xor
inc
cmp
leave
in
push
adc
ret
lret
into
bound
push
stos
push
pop
loop
mov
test
mov
push
sbb
lods
insb
lea
mov
test
pop
inc
outsb
icebp
std
or
xchg
adc
out
inc
pop
rcrl
rcl
icebp
xor
test
dec
std
cmp
cmp
pop
aas
sbbl
lds
mov
clc
xor
dec
test
add
test
pop
test
jno
inc
mov
cmpsb
jns
test
std
aas
adc
arpl
sub
or
stc
in
mov
push
jecxz
push
xchg
sbb
sahf
movsl
stos
les
push
cmp
lret
mov
pop
sbb
lds
test
test
loop
data16
cmpsl
testb
mov
cli
test
cltd
sub
xor
test
outsb
add
imul
mov
cltd
les
mov
enter
push
es
insb
test
and
in
test
push
lds
test
pop
lock
cmp
add
incb
mov
loopne
mov
arpl
mov
ds
fistps
or
or
xchg
mov
scas
cmpsb
loop
and
test
push
xchg
and
das
jo
call
mov
test
bnd
std
xchg
clc
int3
inc
jmp
cld
mov
pusha
popf
dec
pop
in
jle
mov
jno
xor
int3
sbbl
cmp
adc
clc
dec
mov
mov
mov
cmp
and
int
rcrl
mov
xchg
test
inc
dec
sbb
xchg
mov
stos
lcall
and
cmp
sahf
sub
and
test
jp
push
dec
les
push
and
jecxz
addl
xor
test
mov
push
inc
test
cwtl
sub
cmp
in
ror
movsb
ret
mov
mov
movl
dec
sub
and
movsb
loope
jbe
inc
mov
test
lcall
test
cli
into
push
outsl
lret
in
xchg
test
test
xor
in
adc
sub
mov
sub
mov
les
jge
mov
xlat
adc
mov
test
mov
movsb
mov
cmp
or
in
lods
pop
mov
ret
inc
mov
lcall
push
pop
imul
cmp
gs
xchg
in
imul
adcl
inc
sti
popa
sub
and
loop
adc
jge
adc
lret
inc
sub
xor
std
dec
push
arpl
data16
mov
jg
shlb
jmp
xchg
jp
mov
inc
mov
aaa
setbe
xchg
in
dec
pop
mov
movsb
insb
das
xorl
mov
loope
inc
mov
mov
push
and
jp
xchg
jnp
mov
test
imul
push
add
mov
imul
xor
scas
lea
mov
add
stc
int3
pop
test
pop
sbb
sbb
push
arpl
inc
xor
adc
loopne
sub
test
stc
adc
push
es
shrl
pop
test
mov
int
sub
test
push
xchg
inc
push
or
icebp
mov
ret
pushfw
test
in
mov
out
mov
pop
dec
shlb
mov
test
inc
sub
fisttps
and
push
in
mov
pop
mov
mov
ss
fwait
cmp
test
sub
mov
mov
pop
mov
test
jmp
loope
pop
movsl
test
sub
rclb
sti
dec
push
push
jg
fs
inc
popa
jecxz
incb
mov
sbb
dec
xor
mov
movsl
test
and
ret
sub
addr16
test
sub
mov
movsl
popf
inc
lds
repnz
sbb
and
cmpsb
or
jge
lret
mov
pop
dec
lods
xchg
adc
in
mov
xchg
fucomi
sbb
test
mov
push
ja
mov
cmp
arpl
push
lods
int
jmp
imul
shll
loope
int3
xchg
or
push
dec
pop
inc
dec
arpl
or
jno
lods
sub
int
fldenv
add
add
setno
icebp
stc
pop
add
mov
jle
mov
cmpsb
and
inc
jne
ret
mov
loopne
push
sbb
and
sbb
sub
scas
aam
xchg
and
inc
ds
push
insb
mov
test
mov
jnp
out
mov
dec
and
push
lock
cltd
fcompl
and
xchg
in
leave
add
mulb
sub
inc
xchg
mov
test
cmc
lret
test
movsb
push
addb
adc
arpl
test
and
cwtl
push
test
xchg
test
pusha
mov
cmp
mov
push
mov
insb
ds
hlt
inc
pop
cmp
test
orb
fsubs
and
mov
fwait
cmpsb
sub
mov
je
adcl
cwtl
stc
out
stos
js
addr16
inc
adc
inc
or
ret
shl
add
test
xchg
sbb
sbb
test
inc
int3
ret
mov
or
adc
rclb
and
mov
test
cmp
enter
push
push
mov
fnstenv
add
mul
sarb
or
and
sub
xchg
dec
cmpsb
add
test
dec
stc
call
mov
insb
pusha
in
movsb
cmc
or
ss
mov
rcrl
rcrb
push
sbb
mov
clc
mov
das
xlat
test
out
mov
pushf
fiaddl
std
push
test
or
cmp
adc
xchg
cmpb
loopne
lock
pushf
fisubs
lret
xchg
dec
push
sbb
jbe
cmp
loopne
push
mov
lret
sbb
pop
movsb
mov
and
mov
add
jbe
inc
mov
sahf
pop
fadds
mov
shll
pop
mov
mov
jo
or
dec
lock
push
test
jnp
lds
popa
dec
add
cmp
int
or
adc
daa
xlat
test
pop
mov
dec
or
stos
imul
ss
ja
out
les
mov
hlt
adc
cmc
xlat
xor
int
sahf
jl
and
add
mov
call
sbb
cld
mov
ret
push
xchg
test
test
cmp
rcl
push
adc
xor
xchg
pop
ds
test
jp
int3
les
test
push
mov
ja
loope
cwtl
lds
mov
frstor
dec
xchg
movsl
push
loop
pop
in
notb
sbb
movsb
orl
daa
add
cs
cmpsb
mov
pusha
out
cld
mov
lret
nop
movsb
add
and
fs
adcl
test
scas
mov
mov
mov
mov
pop
xchg
cs
into
loope
adc
mov
cld
adc
test
sub
movsl
jg
arpl
icebp
push
mov
shrb
pop
pusha
cltd
not
outsb
mov
or
testb
test
divl
sti
test
xor
outsb
sbb
mov
push
adc
push
and
in
test
jecxz
icebp
fldt
pop
push
test
adc
add
mov
dec
loopne
aam
adc
imul
dec
dec
and
jbe
adc
push
repz
clc
xchg
dec
and
mov
mov
mov
test
ss
and
bound
aas
stc
stos
out
push
adc
mov
inc
jns
push
ds
bound
xor
add
cmp
xlat
mov
test
and
jp
bound
lahf
test
lcall
daa
jl
in
jge
imul
lcall
dec
aad
xchg
xchg
test
or
ja
add
dec
shrb
jp
xor
jae
imul
mov
sub
fs
and
dec
jno
in
push
cmp
mov
gs
hlt
fcompl
sti
dec
xor
rolb
fwait
add
xchg
inc
mov
cmpsb
push
test
fnstenv
test
jp
sbb
push
ret
jle
loopne
es
movsb
xor
repnz
mov
cmpsl
in
pusha
test
jl
imulb
add
xor
inc
cmp
inc
pop
cmpsb
movups
mov
lds
push
aad
test
and
pop
push
test
sahf
mov
sbb
and
xchg
call
mov
ljmp
and
push
gs
xor
pop
aam
orl
mov
pusha
push
or
jmp
arpl
push
jns
xchg
cltd
push
cmpsb
inc
lret
dec
jg
and
pop
fcoml
cmpsb
fisubrl
inc
pushf
jne
xor
cltd
test
out
jae
mov
and
xchg
ret
test
lea
test
and
loopne
jns
xlat
dec
pushf
outsl
or
test
sub
les
add
fwait
mov
dec
stos
jne
jb
jns
mull
incl
sbb
inc
test
push
add
push
jle
aam
pushf
js
xor
xor
test
inc
xchg
jnp
or
loope
xchg
mov
mov
test
xchg
shrl
adc
sub
jp
or
xor
stc
xchg
pushf
pop
aaa
xorl
adc
test
push
mov
in
cmp
bound
pop
mov
jp
je
cmp
pop
pop
test
xchg
subl
add
push
rclb
orb
and
test
mov
int
push
in
rcl
xchg
and
and
push
cs
jmp
in
mov
aam
cltd
xor
push
mov
imul
das
fsubrs
orb
and
cmp
push
mov
mov
mov
out
inc
jno
sbb
mov
loopew
std
jnp
ret
pop
bound
bound
test
clc
and
lea
fnstsw
mov
call
movsl
add
int3
sbb
dec
inc
lret
and
shlb
test
inc
stos
push
test
mov
mov
dec
push
loop
popa
mov
arpl
test
mov
push
movsb
push
dec
loop
mov
mov
pushf
push
in
mov
sbb
or
pop
jecxz
jle
mov
insb
sbb
jb
and
addr16
test
test
push
mov
xchg
call
push
xchg
jle
test
dec
xchg
jne
push
mov
test
adc
jg
bound
mov
add
stos
pop
into
das
and
movsl
loop
out
test
xor
roll
test
push
dec
lea
outsl
xchg
jb
pop
loope
aam
je
sub
pushf
jmp
icebp
not
int3
pop
das
xchg
xchg
mov
mov
test
call
push
test
rclb
sub
divb
les
add
dec
cmp
jns
or
addb
mov
add
pop
outsb
adc
sub
stos
out
in
jb
add
xchg
jns
mov
test
xor
int
je
imul
fidivrs
mov
mov
mov
or
mov
dec
and
cmc
jo
mov
sti
lock
icebp
pop
test
fists
test
or
hlt
cli
in
cmp
test
sbb
bound
ret
into
test
adc
je
or
dec
mov
ret
xchg
sub
out
repnz
jne
inc
xor
mov
andl
xlat
mov
fdiv
decb
lds
adc
mov
push
clc
dec
test
mov
daa
add
lea
test
icebp
je
test
jecxz
lret
push
mov
fstpt
es
jbe
mov
test
mov
adc
bound
mov
movsb
and
xor
add
jo
push
and
cwtl
mov
ret
add
dec
push
dec
test
rolb
push
enter
int3
mov
cwtl
and
test
and
in
mov
mov
loope
push
addb
mov
out
cli
lods
pop
and
sub
lret
jno
les
inc
test
push
fwait
pop
mov
negb
inc
test
mov
andb
insb
in
fcoml
ja
cmp
inc
js
movb
test
fisubs
imul
dec
mov
ficoml
or
push
xchg
xor
fwait
mov
test
cwtl
pop
inc
xchg
lahf
test
icebp
addr16
pop
lret
movsb
push
stc
cltd
mov
sub
inc
enter
mov
je
sub
mov
xor
shlb
push
mov
mov
shl
sub
mov
cli
mov
or
jmp
test
insb
adc
sub
scas
in
cld
pop
aas
mov
xchg
sub
pusha
cwtl
xchg
mov
test
loop
jecxz
pop
test
sub
or
push
inc
xchg
cmp
mov
pop
mov
mov
mov
mov
cmp
fwait
out
and
mov
mov
jecxz
test
in
out
test
mov
out
xor
ljmp
mov
popf
mov
xor
dec
test
jmp
lret
or
adc
sbbb
insb
dec
sub
movsb
popa
lods
outsb
mov
xor
test
or
rolb
push
in
jecxz
leave
mov
das
popf
inc
xchg
pop
fimuls
inc
in
mov
fs
push
xor
gs
add
test
clc
cmp
shr
xchg
test
push
dec
test
dec
loope
jmp
pop
into
in
add
movsb
fstpl
ds
addb
jnp,pn
test
bound
cli
test
popf
daa
and
js
mov
aam
dec
test
lock
pop
loop
pop
xchg
inc
push
push
jmp
pop
lea
test
xchg
sub
clc
test
mov
or
add
lcall
and
imul
das
sbb
inc
pop
test
mov
pop
enter
ret
push
test
pop
mov
push
sti
nop
clc
mov
aas
fadd
jmp
jecxz
cmp
lret
lcall
cmp
sahf
xlat
sub
jl
mov
mov
sbb
mov
arpl
arpl
les
loope
test
or
out
test
sub
incb
into
cmp
orb
mov
icebp
cmpsb
jae
mov
mov
xchg
mov
rcll
push
das
int
mov
test
leave
shl
cmc
lcall
and
subb
sbb
jmp
fimull
cltd
inc
pop
push
scas
add
out
bound
xchg
jns
or
sub
lret
jmp
adc
andl
bound
xchg
or
stos
xchg
lods
mul
and
orl
add
pusha
enter
sbb
jno
sahf
push
fiadds
call
add
or
test
inc
sbb
sti
inc
push
movsl
mov
push
inc
leave
je
mov
lods
pop
mov
bound
sbb
mov
fidivrs
adc
adc
inc
stos
sti
cltd
into
sbb
pop
test
out
mov
daa
cli
sub
cmp
jl
mov
test
sbb
jb
dec
test
inc
shlb
pop
outsl
sbb
rcr
sub
test
cmpsl
push
jle
pop
test
idivb
roll
push
inc
icebp
gs
arpl
pop
push
pop
push
xor
mov
arpl
mov
loopne
or
mov
testb
push
mov
or
test
out
jp
xchg
insb
test
or
jns
push
test
test
jnp
mov
test
jge
nop
sbb
out
popl
popa
mov
mov
in
push
fptan
dec
cmpsl
loopne
pop
test
mov
mov
aad
test
clc
push
push
dec
and
movsl
frstor
sub
jns
inc
outsb
mov
mov
lcall
dec
pop
sbb
ss
dec
test
movsb
cld
test
outsb
test
jne
nopl
int
movsb
imul
fcompl
mov
out
test
mov
js
test
cmpb
es
xchg
and
loopne
mov
sahf
aas
mov
out
pop
test
divb
popa
pop
push
fstps
sbb
lcall
push
xchg
xor
bound
jle
mov
jne
cmpsb
adc
bound
push
or
cmpsl
and
fmulp
ret
dec
mov
movsl
pusha
sbb
inc
push
scas
push
cmp
daa
out
push
scas
in
aas
lea
add
cltd
outsb
adc
in
lods
jo
loop
mov
aam
movsb
data16
lret
hlt
push
test
lock
mov
inc
movsb
ja
or
push
or
shl
adcl
dec
lock
bound
aam
mov
pop
and
js
cli
sub
test
pop
imul
pop
test
into
xorl
test
fildl
push
add
in
push
aas
testb
lea
test
repz
lea
pop
xchg
jl
push
add
xchg
dec
movl
inc
ret
outsb
int
test
test
sbb
mov
arpl
jae
dec
xchg
test
or
xor
mov
stos
and
jp
mov
clc
mov
test
cmp
push
test
lcall
xchg
and
aaa
stc
sbb
into
test
scas
cltd
jbe
test
push
dec
cli
jo
int3
push
loopne
test
mov
lret
or
cli
push
jb
lret
fsubrs
cs
mov
pushf
pusha
jp
loop
mov
cmpsl
sbb
cmp
lret
dec
fscale
jmp
mov
test
or
clc
in
mov
incb
lcall
cmp
xchg
mov
loopne
cli
in
push
mov
in
pop
add
mov
mov
pop
mov
leave
pop
sbb
test
fwait
jne
insl
movsl
imul
test
xlat
push
lds
sarl
arpl
sti
clc
pop
mov
sahf
test
adc
aam
cs
push
ljmp
test
loope
xchg
adc
out
adc
push
mov
push
add
icebp
arpl
cmp
testb
pusha
sbb
mov
outsl
mov
inc
lahf
test
scas
adc
pop
pushf
loope
fwait
mov
inc
in
jp
push
xchg
sbb
mov
sub
xchg
or
mov
out
and
pop
inc
or
movsb
cmp
loopne
mov
flds
and
ficoml
cld
push
sti
and
daa
pop
aas
or
test
andb
adc
pop
mov
push
imul
scas
gs
clc
cmpsb
sbb
inc
std
xor
push
fcoml
ret
in
mov
mov
mov
incl
mov
mov
inc
mov
call
icebp
mov
jo
dec
test
mov
sub
dec
xor
cwtl
mov
pop
inc
push
cmp
lret
test
leave
loope
test
sub
cmp
nop
cmpsb
jecxz
sbb
dec
ret
icebp
and
lea
lret
sub
mov
jge
stos
mov
movsb
iret
xchg
inc
test
mov
jecxz
les
mov
or
mov
movsl
into
sub
push
ret
out
in
cmp
xlat
jbe
imul
cli
test
pop
jmp
stc
or
test
jns
sub
test
lahf
dec
out
shll
movsb
data16
lret
jns
testb
aaa
cli
out
xchg
inc
lahf
rolb
dec
addb
dec
pop
and
cmp
adc
test
sub
add
sub
jb
fdivl
je
cmpb
mov
mov
in
push
test
mov
sub
arpl
inc
mov
cmpsb
lds
repz
pusha
mov
dec
aaa
faddl
and
dec
mov
test
rorb
pusha
inc
add
cli
sub
in
add
dec
sub
xchg
adc
clc
mov
loopne
or
sub
mov
pop
push
jl
mov
lcall
scas
cmp
mov
xchg
sahf
dec
jmp
test
jle
lcall
push
add
test
arpl
stos
test
ss
cs
test
sbb
test
cmpsb
push
mov
push
mov
dec
out
mov
mov
mov
dec
test
repz
les
ret
and
test
jbe
cmc
stos
push
adc
mov
xor
lds
loope
cmp
imul
xchg
pop
mov
cltd
out
or
cmovp
dec
insb
adc
leave
sbbb
jo
arpl
mov
in
lock
dec
and
dec
out
lds
inc
pusha
popa
test
test
mov
xchg
movsb
xchg
popa
mov
pop
and
sbb
out
test
jo
inc
dec
pushf
jbe
jmp
pop
mov
cmp
push
cli
adc
dec
test
mov
movl
push
bound
pop
inc
dec
and
imulb
bound
std
mov
test
test
insl
call
jne
pop
or
jecxz
test
dec
xchg
imul
dec
adc
lods
rcrb
lcall
loop
mov
in
dec
es
mov
inc
sub
jnp
mov
cmp
push
int3
test
push
out
pusha
in
out
inc
lahf
xchg
jne
out
movsb
sahf
push
add
push
bound
add
stc
imul
mov
arpl
out
ret
enter
pop
mov
mov
or
or
in
dec
lret
pop
testl
push
dec
sub
adc
lea
xchg
jmp
xor
fsub
xor
push
ret
movsl
cwtl
adc
cmc
mov
test
jmp
pop
dec
xor
test
inc
and
ljmp
rorl
inc
sub
push
adc
push
aaa
je
fisttps
notl
cs
pushf
pusha
flds
sub
js
ret
cmp
loop
inc
add
sbb
in
mov
bound
mov
xor
test
fnstenv
add
sti
test
int
cwtl
enter
test
shrb
pop
test
cs
pop
pusha
sbb
jle
test
ret
push
add
adc
scas
arpl
pop
sbb
or
adc
int3
sbb
mov
stos
cwtl
push
test
jl
arpl
xor
test
lret
test
push
push
dec
test
lods
loop
in
mov
es
mov
mov
repz
lock
popa
repnz
sub
daa
cmp
push
loopne
pop
test
dec
dec
inc
jmp
loope
in
cltd
mov
ror
test
test
inc
stc
pop
test
xchg
lcall
lahf
adc
jmp
cmp
push
mov
xchg
cmpsl
rol
mov
mov
mov
xlat
mov
lret
icebp
or
mov
test
mov
push
addr16
test
mov
dec
test
inc
jmp
rcrb
push
cmp
inc
and
adc
ret
mov
aaa
int3
cmp
and
test
fstl
jns
and
adc
icebp
ja
push
imul
cli
inc
mov
mov
mov
pop
data16
stos
adc
sbb
repnz
out
inc
aam
enter
inc
mov
mov
xlat
mov
xor
aad
in
lret
mov
in
xlat
add
mov
or
and
xchg
test
jmp
in
test
bound
into
icebp
test
in
mov
sbb
mov
xor
mov
lret
pushf
movsb
imul
xor
sub
mov
pop
dec
outsb
in
or
lret
scas
sub
std
jnp
fisttpl
mov
mov
pop
lods
test
cmp
pop
popa
mov
ds
xchg
lods
sub
sbb
test
int3
jbe
mull
sub
pop
imul
push
or
sbb
iret
fildl
ret
add
bound
sub
xchg
sbbb
movsl
rolb
cli
ja
jl
lcall
popa
dec
aam
lahf
aam
test
or
xor
cmpsb
adc
testl
loope
push
nop
sub
mov
test
pop
bound
jnp
inc
test
leave
loope
lret
push
mov
test
and
push
subb
test
mov
test
cmp
addr16
dec
pushf
test
mov
xchg
test
std
lahf
dec
mov
test
mov
test
xor
xor
push
sub
pusha
outsl
xchg
aas
jne
push
xor
push
icebp
jmp
lcall
std
into
sub
pop
test
xchg
push
insb
mov
mov
ret
or
jmp
push
test
into
or
xchg
icebp
lret
xchg
bound
je
sbb
push
hlt
test
notb
mull
insl
movsl
push
test
or
aad
test
dec
dec
mov
bound
stos
push
pop
repz
clc
ret
and
in
sub
das
in
dec
cmp
mov
les
lock
or
mov
pop
sbb
fnsave
subb
xor
into
in
cmpsb
test
imul
jno
sub
mov
mov
stos
loope
gs
jmp
cmc
lods
test
cwtl
sub
les
stc
push
pop
sub
ret
pop
out
fcomi
mov
jb
add
mov
sub
test
cmpsl
lret
sub
loop
xchg
mov
jmp
or
add
cltd
mov
mov
imul
cmp
andl
je
adc
mov
xor
test
dec
test
in
into
pop
stc
sbb
outsb
leave
push
in
popf
dec
inc
mov
out
jge
bound
or
gs
lcall
push
imul
not
sub
cmp
jmp
xor
rcrb
lds
test
imul
pushf
push
pop
mov
push
dec
sub
test
adc
or
or
ret
sub
mov
cmpsb
insb
jg
clc
test
icebp
xor
les
lret
int3
mov
mov
mov
mov
jecxz
in
call
lods
daa
insb
push
roll
in
test
or
inc
cmpsl
or
test
insb
popa
and
test
and
mov
stos
in
test
mov
icebp
mov
jmp
push
cwtl
popa
cmc
bound
arpl
icebp
mov
stos
cltd
mov
shll
xchg
std
imul
cmpsb
or
sub
pmovmskb
push
test
pop
call
sbb
loop
push
mov
bound
fwait
sbb
mov
insb
mov
adc
test
cmc
inc
call
outsl
xor
adc
sarl
cli
push
sub
add
sub
cltd
jbe
sub
test
nop
mov
test
int3
xor
in
fstps
imul
in
fcoml
mov
jns
andb
test
imulb
into
mov
jp
aad
fsubrl
pop
in
nop
and
jmp
pusha
loop
jmp
repnz
pop
cmpsl
bound
in
stc
movsl
movsb
add
or
mov
cmpsb
xor
bound
lods
fstps
lret
add
stos
push
sbb
sbb
lcall
in
leave
les
int3
data16
test
mov
push
bound
sub
test
pushl
jmp
push
mov
das
popf
pop
insl
mov
test
lea
push
inc
orb
ret
push
gs
or
test
add
lret
popf
mov
in
push
inc
leave
jne
rorb
or
lea
mov
test
insl
adc
jne
cld
jp
pop
cwtl
xchg
fwait
sub
xorb
popf
in
lods
ljmp
mov
test
pushf
in
jno
adc
sbb
dec
rcrb
dec
jle
pushf
inc
jb
pop
imul
mov
dec
cltd
mov
jae
sti
int3
mov
repz
mov
sti
adc
push
lcall
das
inc
pushf
mov
cmpsl
xor
in
mov
push
insb
jmp
lods
cmp
sub
mov
test
imul
push
mov
xchg
dec
add
adc
lret
sbb
leave
in
ljmp
jecxz
arpl
or
inc
adc
cmpsl
inc
dec
stos
adc
xchg
int
data16
or
sub
mov
adc
mov
dec
xchg
repz
in
lret
arpl
xchg
shlb
pop
xor
in
pop
push
stos
push
mov
mov
test
mov
sub
dec
mov
test
lret
imul
lret
enter
outsb
inc
scas
xor
mov
arpl
cltd
add
daa
out
into
test
dec
cmc
inc
test
sahf
test
sbb
test
repnz
pop
sub
rol
mov
lret
jae
arpl
imull
lcall
push
xchg
enter
fisubrl
enter
mov
inc
cmp
repz
jmp
or
sbb
popf
in
sbb
mov
aam
repnz
bound
lods
mov
loop
xor
clc
ds
shrl
int3
enter
stc
ds
imul
inc
cmp
inc
lods
mov
insb
outsl
addl
les
test
faddl
xchg
inc
test
sbb
movsb
test
push
shl
mov
sbb
bound
outsb
test
test
test
sbb
fisubl
cmp
sub
rcrb
scas
sbb
stos
bound
mov
fcompl
cmpsb
sub
xchg
mov
and
push
sbbl
or
push
mov
jmp
cs
loope
dec
movsb
stc
mov
push
mov
lods
fwait
push
stos
jl
arpl
bound
jno
ret
aad
mov
addl
test
mov
mov
fisubl
inc
push
and
ret
lcall
shrl
xor
ret
repnz
push
push
add
popa
sbb
movsb
out
ficoms
add
fldl
mov
and
cmc
outsb
sub
js
adc
leave
lea
or
test
cmpsb
xchg
pop
sbb
cmp
push
test
jno
xchg
adc
inc
xor
sub
pushl
mov
mov
sub
add
es
cmp
mov
bound
jmp
fildl
ljmp
sbb
mov
scas
test
or
repz
mov
dec
int3
je
mov
dec
push
sub
in
lret
mov
cwtl
sbb
push
aam
js
in
es
pusha
or
mov
jp
or
aad
movsb
push
cs
pushf
add
mov
loop
insb
sub
cmp
cmp
xchg
into
cltd
sti
mov
sbb
cmpsb
mov
test
std
xchg
in
cmpsb
mov
data16
push
test
lret
hlt
aad
repnz
fists
imul
or
cmpsb
int
and
test
mov
into
sub
sub
mov
shll
inc
icebp
sbb
cmpsb
das
test
mov
inc
scas
cwtl
cmp
xor
test
mov
dec
jbe
cmpsl
add
mov
and
lods
popa
movsl
push
lret
xchg
cmc
popf
dec
mov
pop
movsb
imul
pop
pushf
test
icebp
cltd
jns
inc
int
jecxz
cmp
push
dec
push
test
call
cltd
pop
popl
pop
les
cmp
sub
push
mov
je
xchg
mov
loop
pop
jecxz
or
push
loope
pusha
mov
mov
lds
push
daa
fs
sub
popf
and
mov
xor
jl
ret
or
bnd
sbbb
es
test
leave
std
mov
clc
adc
ret
cmp
jae
aaa
test
into
and
sub
test
mov
int
push
mov
pop
xchg
sub
push
mov
notl
fdivrl
adc
mov
sub
add
stos
dec
aaa
xchg
add
push
dec
sbb
imul
mov
test
andl
push
icebp
mov
mov
jge
jb
sbb
mov
js
int3
mov
jae
sbb
mov
into
test
addl
push
iret
data16
mov
fiadds
test
pop
in
xor
xor
push
push
mov
test
xor
or
sbbb
mov
adc
test
mulb
pusha
push
xor
push
test
addb
or
mov
test
sub
jnp
subl
sbb
jns
jle
cwtl
jne
jmp
xchg
test
push
mov
jl
xchg
pop
mov
mov
and
aad
jg
xchg
loop
xchg
inc
push
mov
add
test
push
and
fnsave
adc
test
push
in
addl
into
scas
test
mov
cltd
test
sbb
fwait
sahf
into
inc
inc
mov
ds
mov
lcall
add
mov
sbb
movsl
or
in
pop
test
out
pop
bswap
loope
test
mov
stos
or
fwait
aam
xor
xorl
xchg
mov
ret
sub
data16
repnz
inc
shl
sahf
test
push
jp
pusha
lods
imul
jne
adc
scas
nop
push
test
dec
fidivs
movl
push
sbbb
outsb
xor
push
fs
enter
jno
push
push
pushf
mov
add
sbb
lds
or
fidivs
insb
sub
push
pop
inc
cwtl
lret
mov
or
imul
jg
sub
ror
loopne
ja
int
test
nop
jmp
dec
test
add
push
and
mov
cmp
pop
lret
insb
or
ljmp
dec
jbe
test
in
pop
imul
and
push
sub
mov
jbe
iret
mov
test
arpl
mov
test
cmp
push
pop
jbe
test
add
mov
cmp
sbb
je
sub
mov
movsb
clc
loope
cmp
aad
mov
sub
stc
in
movsb
xchg
imul
movsl
xor
test
cmp
adc
jecxz
test
or
cwtl
xor
test
inc
jnp
push
out
lds
bound
jae
popa
repnz
bound
test
inc
loop
loope
test
fiaddl
xchg
mov
in
adc
inc
adc
pop
mov
or
lea
ror
sbb
xor
sub
mov
add
lds
jmp
fisubrl
push
ret
xor
int3
rolb
sbb
arpl
scas
lods
ljmp
test
test
loop
dec
mov
mov
cmp
lcall
fucomip
leave
test
test
and
jmp
add
sub
pushf
test
fnclex
insb
mov
in
push
cmpsb
bound
push
mov
icebp
mov
cld
adc
lret
push
arpl
into
stc
stos
les
cmp
nop
jmp
mov
inc
into
add
mov
mov
sbb
movsb
rolb
xlat
in
sub
int3
adc
popl
sub
inc
lret
les
xor
dec
fs
mov
push
fldenv
lods
mov
jp
dec
cmpsl
and
xor
xchg
loope
test
sub
lock
popa
inc
or
push
mov
sub
je
in
mov
sbb
das
imul
mov
jle
mov
sbb
fwait
pop
popa
lods
jp
ret
out
shll
shlb
sar
call
inc
mov
mov
or
cmpsb
xchg
dec
movsb
mov
in
mov
sub
mov
push
mov
xchg
cmp
iret
stos
inc
daa
stos
loope
movsl
cmpsb
aad
jle
mov
test
mov
jecxz
xchg
outsl
sbb
jle
int3
adc
lret
mov
popa
dec
in
mov
insb
mov
xchg
add
push
mov
sbb
mov
push
cltd
dec
lret
pop
loope
sbb
inc
imul
mov
data16
or
lret
push
mov
push
stos
cwtl
push
arpl
sub
xchg
je
addb
pushf
repnz
rcrl
mov
adc
pusha
sub
dec
les
pushf
fmull
into
xorb
dec
in
test
stos
cmp
add
mov
pop
jle
jecxz
ljmp
jb
lea
loop
orb
jnp
dec
outsb
repz
xor
call
or
mov
das
adc
mov
and
divb
aam
arpl
lds
insb
mov
mov
sub
or
and
in
subb
pushw
shlb
in
rep
xchg
lcall
rcll
or
mov
pop
cltd
xor
mov
loop
bound
mov
insb
push
jo
mov
into
sbb
pop
mov
push
imul
loopne
mov
divl
pushf
into
in
outsb
arpl
mov
mov
mov
cmp
fildl
xchg
in
popl
decb
jp
cs
pusha
dec
mov
daa
sbb
mov
xor
adc
xchg
icebp
outsl
cwtl
sbb
in
clc
pop
subb
push
push
test
dec
pop
xchg
bound
pop
sub
push
xchg
mov
dec
test
sub
fcoms
test
imul
mov
lret
cld
lret
call
and
xor
jg
test
mov
mov
movsb
xchg
adc
in
cmp
mov
enter
data16
sub
faddl
add
sub
stc
push
mov
int3
adc
inc
lds
dec
je
push
mov
jbe
test
ljmp
movsb
js
test
into
jecxz
xchg
cmpsl
sbb
shl
fiaddl
xchg
aam
test
xor
adc
jmp
bound
mov
test
lret
lods
aaa
lret
dec
subl
xor
xor
mov
in
inc
test
ss
dec
mov
push
test
dec
pop
or
adc
xchg
mov
pushf
xchg
clc
ret
adc
test
add
mov
adc
in
cli
mov
dec
mov
xchg
nop
test
popa
mov
push
cli
movsb
add
imul
jmp
inc
repz
ljmp
add
or
adc
pop
ljmp
hlt
jbe
imul
daa
xor
jne
mov
cli
cld
lods
jbe
in
pushf
das
mov
arpl
sbb
mov
test
popf
jp
fldt
pusha
sub
cs
insb
dec
lods
mov
inc
test
jb
jae
mov
movsb
sub
push
and
cltd
test
pop
adc
mov
pop
cmp
and
or
adc
xor
xchg
sbb
mov
mov
mulb
dec
pop
test
imul
cmpsb
push
int3
pop
in
jl
call
test
lret
xor
test
ljmp
push
lea
and
pusha
dec
popf
xor
mov
add
aad
mov
outsb
test
mov
test
pop
repnz
mov
dec
insb
dec
loope
sub
push
mov
je
inc
push
mov
repnz
mov
fimuls
push
or
mov
sbbb
mov
and
cltd
mov
pushf
jp
sti
xor
and
inc
stos
daa
mov
adc
pop
movl
mov
mov
test
test
or
pop
imul
cvtdq2ps
fcomp
ljmp
push
popf
mov
test
adc
pop
or
sub
cmpsl
int3
aam
jmp
xchg
cmc
test
xchg
cmp
sbb
gs
movsl
push
movsl
stos
mov
lret
test
lea
adc
xchg
test
or
popa
mov
leave
movsb
cmpsb
loop
or
test
cmpsl
push
lret
outsb
notl
sbb
testb
inc
or
bound
mov
pop
outsb
bound
cmpsl
mov
stc
mov
test
insb
jl
rcll
sub
stos
testl
movsb
arpl
push
pushf
adc
test
xor
xchg
xor
mov
jne
add
cmp
push
orb
les
push
or
mov
and
pop
sbb
jae
outsb
outsl
jmp
sbb
test
movsl
mov
bound
idiv
add
arpl
lds
dec
pushf
cmp
test
pop
into
jmp
mov
and
dec
test
add
push
pushf
or
push
sub
sub
dec
sub
mov
jle
test
mov
sub
jbe
mov
fisttpl
xchg
adc
add
mov
sbb
bound
fcomps
mov
or
cmp
and
push
pushf
and
inc
add
inc
mov
iret
xchg
cltd
or
pop
and
push
add
jl
mov
adc
mov
negb
or
mov
addr16
mov
cwtl
jbe
int3
ljmp
push
mov
sub
jecxz
rcl
popa
imul
cmpsb
mov
stos
xor
push
add
jle
test
jecxz
jmp
cs
or
push
adc
ljmp
dec
xor
test
ljmp
nop
sbb
cltd
in
pop
mov
daa
jmp
test
and
les
pop
into
arpl
mov
jp
mov
or
test
push
jno
xor
cmp
mov
adc
fldcw
sub
mov
mov
test
adc
pop
xchg
in
sub
fdivrl
mov
dec
push
pusha
xor
cwtl
lcall
mov
int3
adc
push
lcall
push
mov
repnz
sbb
pop
test
cmp
lods
test
mov
shlb
orb
pushf
orl
mov
dec
xor
test
cwtl
mov
jmp
inc
and
push
xchg
sub
fildl
repnz
test
mov
cmp
imul
dec
mov
sub
hlt
push
arpl
adc
jno
mov
jmp
icebp
cmp
imul
mov
in
insb
inc
sbb
loop
and
mov
popa
lods
pop
mov
push
mov
aas
xchg
bound
sub
mov
test
adc
movsb
test
push
inc
sbb
imull
arpl
outsb
push
and
mov
out
mov
in
push
icebp
into
push
jl
dec
shl
test
pop
and
dec
mov
lret
dec
loope
inc
aaa
or
test
or
rcr
jmp
push
stos
fisubl
out
sbb
mov
mov
dec
leave
pop
push
pusha
jl
mov
xor
jecxz
jbe
je
test
xchg
cmpsb
pop
add
outsl
pop
les
mov
cltd
push
mov
adcb
push
cmp
pop
movsb
mov
jl
lea
cwtl
inc
mov
insb
or
xchg
xor
mov
outsb
pop
mov
push
add
jmp
or
push
lret
cwtl
inc
sub
push
add
or
mov
test
ljmp
mov
test
add
stos
test
push
add
adcl
in
les
outsb
sub
push
pop
shrb
mov
cmp
sub
dec
rcrb
lret
subl
sub
xor
add
test
mov
dec
stos
xor
test
stos
loope
xor
jmp
lods
inc
xor
or
dec
sub
inc
test
lods
jb
mov
test
out
pusha
popf
mov
add
jmp
pop
cmpsl
cld
cmp
push
mov
test
repz
add
std
push
fbld
dec
hlt
xchg
dec
pop
inc
sti
int3
cmp
cld
movsl
mov
dec
inc
jo
arpl
icebp
clc
ret
lock
test
mov
inc
jb
in
or
mov
pop
sub
inc
pop
push
mov
cmpsb
xchg
jecxz
sbbb
mov
sub
or
shufps
enter
push
cwtl
je
test
xor
add
pop
movsb
lea
scas
int
cmpsb
je
cmpsl
fadd
push
test
jmp
test
sub
cmpb
push
and
loope
insb
add
outsl
adc
test
xchg
mov
cmc
sub
cwtl
shll
sub
adc
cmp
jp
push
xchg
jecxz
sbb
dec
gs
popf
pusha
cmp
mov
pop
fcomps
rol
ljmp
sbb
dec
in
mov
mov
int3
les
or
mov
dec
cmp
ret
xchg
pop
pop
mov
movb
lret
push
mov
call
js
int
pop
test
xchg
pop
mov
mov
sub
sub
or
pushf
add
test
xchg
inc
push
xchg
add
ret
inc
mov
cmpsl
test
test
push
xchg
push
movl
cwtl
inc
je
push
and
and
ljmp
call
or
pop
pushf
and
in
dec
outsl
inc
insb
test
cmp
xchg
lret
in
cltd
xchg
sbb
lods
test
fcoml
leave
shrb
shr
fmul
adc
mov
out
movsb
or
leave
adc
mov
inc
shll
lret
mov
xor
jl
aad
mov
sub
dec
call
lods
loope
dec
stos
push
in
lcall
lret
cmpsb
xchg
test
push
dec
pop
mov
jae
leave
add
lcall
test
push
xor
pop
stos
test
dec
stos
fisttpl
sbb
jecxz
sti
test
test
lret
dec
mov
stc
lret
stos
fmull
fwait
mov
popa
xchg
sub
adcl
lret
jle
lods
imul
mov
lock
jmp
stos
les
loope
or
loopne
addl
enter
hlt
pop
dec
imul
jle
stos
mov
inc
lods
inc
call
mov
push
out
cltd
test
cmpsb
and
adc
sub
dec
shrl
mov
push
push
or
mov
movsl
repnz
int3
jmp
mov
movsl
sub
add
sub
outsb
lock
mov
in
int3
insl
pop
loope
mov
fisubs
pusha
dec
adc
test
pop
les
ret
mov
lret
xchg
pop
out
sbb
cltd
xchg
test
dec
fnstenv
mov
test
xchg
movsb
dec
in
repnz
xor
mov
fwait
adc
adc
mov
mov
xor
mov
cli
nop
in
les
and
sti
shrl
int3
jecxz
xor
lret
loope
lret
push
mov
push
pusha
pusha
out
or
sbb
fcoms
int3
and
mov
push
mov
out
mov
and
test
stos
pop
notl
gs
test
loope
rcl
popa
in
jns
sbb
cltd
and
mov
lret
into
cld
imul
aam
mov
cmp
dec
test
or
pop
in
pop
jbe
test
insb
cli
sub
test
inc
lcall
subb
aad
adc
mov
cmpsb
push
inc
ds
sub
mov
loopne
cmpsl
in
jp
jmp
mov
loop
pop
inc
sub
jl
cld
enter
dec
fmull
mov
sub
pusha
mov
adc
movsb
push
pop
lods
movsl
test
push
cmpsl
mov
aad
and
push
jae
mov
push
test
clc
push
inc
jno
out
push
aad
sbb
scas
mov
pop
stos
fld
test
xchg
out
cmp
dec
lret
pushf
lods
test
mov
jbe
mov
jne
test
test
jl
repnz
push
sahf
push
mov
scas
push
or
mov
hlt
pop
push
pop
cmp
and
outsb
shlb
jl
fsubl
sub
mov
jl
popf
pop
leave
in
add
sbb
and
pushf
test
test
sub
cli
jmp
mov
mov
loop
test
jbe
dec
arpl
vmovups
mov
addl
dec
movsb
in
add
mov
xchg
out
test
sub
dec
test
jne
js
sarb
int3
loopne
jns
inc
gs
in
movsb
xchg
push
or
test
out
negb
push
bound
jbe
cmpsl
test
das
ja
gs
enter
loop
test
mov
out
leave
out
test
in
mov
arpl
mov
adc
test
adc
push
inc
mov
test
mov
popa
int3
bound
mov
fs
adc
loopne
jmp
jns
dec
mov
in
clc
out
cmc
sub
or
cli
test
fcmovbe
mov
lret
and
pop
sbb
cli
fsubr
pop
mov
outsb
in
mov
mov
mov
dec
lret
loope
int3
pop
cltd
sub
inc
shl
jmp
mov
push
test
aas
inc
sbb
lahf
out
clc
push
pop
mov
add
movsb
mov
or
mov
dec
arpl
lret
mov
dec
lret
push
loop
cltd
inc
test
inc
arpl
pushf
dec
mov
fldenv
pop
xor
iret
pop
mov
and
sarb
test
out
mov
aam
dec
inc
mov
fstpt
les
push
mov
push
pusha
ret
jg
inc
xchg
push
and
jmp
mov
fwait
sub
xor
add
in
pop
cmpsl
loop
cs
add
jle
push
mov
xchg
fwait
cmp
inc
leave
mov
mov
fadds
sub
xorl
mov
test
ss
sbb
sub
xlat
ja
push
jae
push
mov
gs
xor
fildl
mov
sub
xchg
mov
or
cld
adc
and
xchg
xor
imul
push
outsl
adc
popl
mov
or
push
mov
ljmp
mov
mov
mov
jp
adc
test
sbb
subb
lods
testl
movsb
aaa
js
insb
push
mov
lcall
popa
and
stos
out
into
dec
lea
ss
mov
in
push
xchg
shrl
test
enter
lret
mov
outsb
aam
stos
mov
test
push
jg
jmp
push
mov
mov
nop
test
jbe
add
mov
ficoms
pop
push
dec
adc
mov
and
add
sub
out
cs
sbbb
sbb
sub
pop
or
mov
xor
dec
jns
pop
jg
inc
jge
sti
adcb
aam
in
dec
and
popa
add
or
incl
adc
push
mov
imul
xlat
mulb
test
ljmp
mov
pop
add
and
cmp
inc
arpl
push
jl
pushf
je
xchg
pushf
xchg
andb
lcall
or
xlat
test
bound
inc
imulb
mov
test
sub
push
mov
mov
lcall
xchg
test
sub
movsl
test
mov
icebp
lret
mov
jle
and
mov
or
mov
test
adc
test
jno
aam
xchg
xchg
jp
pop
push
pushf
dec
push
std
mov
sti
cld
test
loope
jbe
sub
ret
lret
jb
sbb
out
adc
xor
jbe
and
test
xor
pushf
jns
sub
test
into
xor
test
test
fsubrs
lret
je
ss
adc
std
jno
and
sub
inc
ljmp
mov
mov
iret
fwait
repz
imul
mov
jne
test
fisttpl
ficompl
lret
sub
lret
mov
iret
test
ja
repnz
leave
or
movsb
test
mov
cltd
mov
imul
sti
jp
jbe
mov
sub
fcomps
movsl
out
test
repz
push
filds
outsl
adc
in
push
fiadds
inc
jecxz
dec
inc
mov
xor
fs
inc
out
sub
cmp
adc
pusha
jb
mov
push
in
test
test
jmp
cmp
icebp
insb
arpl
mov
sbb
movsb
jp
dec
in
jne
xchg
xchg
add
arpl
cmpsl
mull
sub
jecxz
fsubl
sbb
daa
repz
inc
mov
jb
jbe
mov
iret
mov
sub
inc
add
mov
lret
mov
dec
sub
xor
pop
add
test
xchg
cld
cmp
push
sbb
sub
movsb
pop
sbb
stos
jbe
test
mov
ja
mov
imul
test
addr16
dec
test
in
inc
fiaddl
jae
sub
pop
mov
lock
lcall
pop
mov
or
cwtl
adc
xchg
inc
loope
and
popa
insb
sbb
pop
dec
sbbb
andl
xor
sbb
cmp
movsb
leave
and
pop
sub
pop
add
lea
adc
or
mov
sbb
pop
fcomps
jne
aaa
jp
ljmp
jnp
js
fcoml
pop
cwtl
dec
mov
push
sub
movsb
pop
push
dec
ja
and
dec
test
xor
test
mov
mull
cmp
fstpt
mov
movl
addl
inc
ljmp
js
dec
test
fildl
pop
and
fdiv
cmp
test
push
in
pop
js
cmpsl
mov
imul
dec
aad
mov
test
pop
les
push
rolb
xlat
and
adc
xorb
inc
fsts
ja
jnp
pop
movsb
fdiv
jmp
mov
mov
cmp
dec
pop
int3
aam
lret
sbb
mov
pop
test
add
arpl
ja
dec
jmp
cmp
sbb
mov
filds
mov
jle
in
movsb
pop
shll
repz
test
sbb
stos
mov
mov
cmpsb
inc
push
test
xor
test
add
in
pop
add
or
mov
pushf
pop
pop
mov
sub
mov
mov
add
dec
jae
cmp
jo
push
addr16
pop
rcll
pop
sub
ja
int3
jae
dec
sub
mov
mov
jb
pop
sbb
rolb
cmc
dec
mov
mov
pusha
jnp
ret
stc
xchg
dec
and
ds
cmpsl
imul
inc
out
fstpt
pushf
jae
jge
push
mov
push
es
inc
fcmovnb
cmp
fwait
xchg
pop
in
arpl
push
adc
int3
pop
or
bound
mov
push
rclb
and
mov
push
pushf
dec
call
arpl
fdivr
xchg
aaa
fldt
mov
imul
lahf
lock
mov
xor
mov
mov
push
es
mov
fs
movsb
lcall
outsb
mov
shll
test
mov
add
add
sbbb
add
movsb
lahf
sub
fnstcw
out
pop
ror
mov
pop
in
mov
cmpsb
in
clc
and
dec
out
or
inc
int
movsb
pop
push
movsl
xchg
and
xlat
or
jmp
inc
lret
fldl
cmp
in
sbb
cmp
mov
lcall
repnz
out
in
cmp
ss
loop
addr16
jne
mov
shld
scas
xchg
pop
nop
in
arpl
jle
dec
pop
ja
push
sbb
outsl
fiadds
in
xor
mov
mov
loop
pushfw
test
xchg
mov
inc
bound
and
fstpl
sbb
fldenvs
jg
addl
test
add
test
inc
xchg
lock
push
lods
test
mov
andl
lcall
mov
addb
add
in
jae
faddl
sub
test
cmpsl
pop
jns
mov
add
mov
test
adc
sbb
sub
cmp
push
adc
test
stos
cmc
xchg
jge
jecxz
ret
xchg
faddl
loopne
sub
add
jb
jno
cli
loop
pop
xor
rcll
inc
xchg
inc
lods
add
popf
fmuls
int
out
mov
mov
pop
and
adc
lret
mov
add
and
jecxz
push
or
pop
ja
test
mov
dec
pop
or
jl
test
scas
add
mov
test
sbb
test
ret
test
cmpsb
jle
push
test
int3
aam
decl
pop
xlat
loope
iret
filds
and
test
mov
iret
hlt
test
addr16
aam
adc
mov
lret
mov
test
cs
xchg
arpl
imul
push
ljmp
pop
test
cmp
fadds
test
ds
lods
lock
mov
test
mov
cmc
imul
dec
jecxz
sbb
jl
mov
ljmp
aam
inc
ret
test
mov
stos
test
add
inc
test
xchg
sbb
mov
test
lcall
xchg
or
sbb
test
int
adc
lahf
test
mov
mov
lods
test
scas
mov
sub
sub
aad
jae
arpl
dec
in
jbe
dec
adc
ret
fcmovb
mov
bound
lods
insl
mov
in
cmp
test
fnsave
mov
pop
xor
arpl
test
push
sbb
int
dec
mov
push
std
icebp
mov
cmp
push
push
fists
xchg
test
dec
sub
cmp
jge
sbb
gs
test
dec
fsts
cmp
jne
stos
bound
mov
inc
test
mov
dec
mov
sub
add
xchg
xor
pop
xchg
jl
cs
adc
jp
bnd
adc
das
sub
xchg
out
jns
and
into
push
mov
cmp
mov
movsl
sub
inc
sub
mov
sbb
mov
jmp
testb
push
adc
pusha
mov
lret
dec
ret
test
aam
repz
dec
xlat
aaa
pop
jg
mov
mov
mov
xchg
dec
mov
mov
xlat
les
sub
xchg
fcmovnbe
test
adc
push
test
clc
inc
and
in
movsb
jmp
inc
arpl
xchg
push
test
adc
pop
test
bound
and
stos
sbb
testb
pop
out
mov
sub
test
test
in
hlt
out
cmp
and
loopne
pop
iret
sub
mov
bound
sbb
cmp
mov
testb
sub
and
sarl
inc
stc
pop
mov
adc
loop
mov
out
jecxz
pop
adc
test
mov
repz
adc
xor
rol
mov
mov
adc
dec
push
cli
or
pop
mov
test
sbb
negl
insb
stos
inc
xchg
dec
gs
ret
adc
arpl
jnp
pop
pop
dec
mov
mov
test
or
mov
dec
mov
mov
mov
lea
imul
test
scas
mov
test
add
sub
in
push
loop
es
add
adc
fsts
mov
inc
inc
test
sub
popa
inc
mov
pushf
add
mov
xor
and
dec
lcall
std
aaa
sub
mov
or
movsb
cli
add
inc
mov
mov
sti
stc
clc
cltd
out
fs
cmc
push
test
shl
outsb
sbb
test
repnz
cmp
cli
dec
add
in
arpl
sbb
or
inc
mov
inc
cmp
lock
cmp
push
jp
push
fwait
sub
testb
dec
cmp
cmp
sbb
mov
test
or
test
dec
mov
jge
pusha
stos
test
push
dec
in
dec
pop
add
jmp
insb
cli
jl
mov
inc
test
xchg
mov
hlt
loope
test
pushf
mov
into
xchg
adc
movsb
pop
rol
pop
sub
xor
push
mov
add
inc
test
jnp
lret
jp
test
adc
lods
imul
xor
xor
xor
and
or
stos
xchg
adc
xchg
jl
add
pusha
mov
or
mov
jecxz
in
and
cmp
add
mov
jl
je
fistps
mov
imul
mov
shll
cmp
shlb
push
sbb
push
jnp
or
movsb
xor
test
fstps
outsb
fiaddl
jp
mov
imul
adc
xchg
repnz
ret
sub
bswap
mov
or
adc
adc
hlt
xchg
loopne
gs
mov
cmp
lret
add
bound
jb
andb
stos
popa
and
in
ret
fidivl
rorb
jp
mov
xchg
cmp
add
mov
jnp
dec
inc
mov
and
add
out
test
daa
jl
in
incb
add
test
in
pop
jne
xchg
bnd
mov
mov
loop
test
mov
sub
pop
aas
movsb
dec
iret
add
xchg
cld
cmp
enter
lret
inc
xchg
jns
out
test
sbb
test
rclb
int3
cltd
xchg
mov
arpl
add
fldl
jb
sarb
test
push
rcrb
out
or
in
in
adc
mov
push
test
loop
cltd
dec
out
enter
lcall
insb
bound
pop
sbb
sbb
sbb
sbb
pushf
ret
inc
sub
cli
pop
in
mov
cltd
mov
adc
inc
fnstenv
popa
sbb
sub
dec
leave
sub
imul
adc
adc
mov
fs
add
push
cmp
jmp
xor
fiaddl
test
adc
dec
push
outsb
test
cltd
pop
cltd
adc
cltd
lret
lcall
push
cmc
and
mov
leave
arpl
out
dec
adc
push
imul
push
cmp
scas
or
movb
fmulp
hlt
mov
insl
sbb
sbb
dec
test
jno
aad
lods
flds
mov
in
mov
test
cli
ljmp
ret
sub
xchg
inc
imul
mov
push
push
out
test
insl
pop
add
in
jns
fisubrs
in
lods
push
and
test
cmp
cmp
mov
repnz
fidivrl
cmpsb
sbb
test
jns
popa
inc
mov
jge
or
xchg
and
test
ljmp
mov
pop
xchg
in
mov
sbb
pushf
lcall
sub
out
or
push
loopne
add
xchg
arpl
sub
sahf
fisubl
arpl
and
or
test
dec
into
ds
jmp
cli
inc
stos
and
in
push
mov
dec
cmp
in
mov
push
jl
push
cli
push
sub
jne
arpl
mov
mov
or
and
in
lret
and
test
outsb
inc
bound
push
stos
push
in
jl
test
or
xchg
xor
mov
mov
stos
inc
in
jge
in
sbb
cld
xor
je
loope
scas
arpl
cmpsb
push
ret
and
sub
arpl
and
scas
les
and
bound
pop
fidivs
push
adc
mov
or
daa
loop
test
clc
enter
mov
mov
and
inc
xor
loopne
jbe
in
shrl
lret
sahf
dec
mov
and
mov
lret
xchg
jb
nop
loop
sub
cmp
pop
mov
mov
in
xchg
shll
or
pusha
pop
fucompp
std
or
mov
mov
rorb
push
loopne
aas
jb
dec
imul
in
mov
and
and
push
sbb
and
mov
inc
mov
mov
mov
andb
jmp
movhps
outsb
cwtl
mov
ret
xor
rcrb
cltd
inc
in
sar
dec
test
bound
mov
cmp
ret
cli
arpl
es
pusha
loop
leave
jl
bound
loope
int3
dec
cli
cltd
mov
cld
mov
add
loop
jl
jle
lcall
aam
xchg
in
icebp
inc
std
mov
rcrb
inc
sub
mov
mov
ret
fisubl
nop
insl
sbb
jns
data16
jge
mov
pop
mov
and
mov
ss
je
mov
and
cmp
test
in
loop
mov
or
xor
mov
push
jbe
js
movsb
dec
arpl
push
cmp
movsb
mov
fisubl
sbb
xor
test
jbe
sub
jnp
dec
adc
sbb
mov
push
insl
in
xchg
test
sbb
movb
add
adc
andb
xchg
ja
movsb
dec
jmp
add
lret
dec
repnz
xchg
fcomi
jns
add
push
mov
push
xchg
jno
mov
add
dec
push
jbe
test
mov
neg
mov
ret
roll
sub
xrelease
or
inc
orl
lret
jle
test
sbb
mov
push
mov
adc
leave
lret
call
ds
push
lcall
or
jbe
lods
lahf
or
cmpsb
in
cmc
lret
stc
test
clc
sahf
cwtl
es
inc
andl
add
test
and
loop
sbb
or
ud1
xor
mov
sub
inc
aam
xor
dec
movsb
inc
lret
cld
or
sahf
rorl
icebp
mov
shl
mov
hlt
jns
lock
int3
dec
mov
loop
and
adc
sbb
mov
jo
scas
mov
movsb
push
dec
sub
push
inc
aad
mov
test
ss
xor
jb
add
mov
cmpsb
pop
mov
sub
aaa
pop
or
mov
mov
fs
dec
seto
fadd
or
mov
ret
xchg
or
mov
scas
in
int3
add
push
lea
sbb
xor
adc
gs
ficomps
push
test
ret
push
movsb
dec
movsb
xchg
inc
dec
xor
push
dec
or
sub
mov
loope
pop
fs
jl
test
and
dec
mov
test
je
jo
cli
lods
ret
movsb
test
ret
push
and
xchg
sbb
sbb
cmp
cwtl
xchg
fsubrl
push
lret
mov
xor
mov
sbb
outsb
rorb
mov
addl
cltd
bound
insb
clc
int3
ret
test
add
mov
fidivrl
lcall
test
push
cmp
push
shrb
fcompl
dec
push
jle
add
add
out
or
cld
push
mov
les
pop
icebp
test
in
out
pop
or
cli
fwait
mov
fcmovbe
push
lahf
testb
ret
push
negl
out
cmc
lock
xchg
in
sti
mov
mov
jp
lret
sbb
repz
aam
pop
incl
sub
push
sbb
ret
or
test
mov
cs
in
xchg
inc
pop
addr16
cmpsl
push
xor
and
fdivrp
push
dec
pushf
shll
loope
push
out
or
mov
push
lcall
cmp
outsb
enter
popa
xor
mov
mov
mov
stos
movb
and
or
lahf
mov
pop
outsb
cmp
mov
xor
and
pusha
out
mov
ds
pop
mov
or
xchg
imul
mov
jno
add
arpl
movsl
cmp
outsl
sub
movsl
ret
hlt
xchg
sub
mov
adc
cli
pop
rol
daa
adc
xchg
pop
ret
dec
lret
ja
icebp
jecxz
inc
inc
movsb
sbb
and
inc
test
mov
jae
and
daa
cld
fcmovb
xchg
stos
or
in
push
and
mov
jmp
test
outsb
mov
scas
and
fistpl
push
cld
ror
mov
ret
and
movsb
mov
xor
jbe
mov
fucomip
mov
xor
pusha
mov
aad
shll
pusha
push
jns
movsb
mov
outsb
pop
xor
mov
jp
mov
icebp
mov
xor
inc
cmp
nop
aam
leave
out
mov
cmpsl
adc
test
mov
js
mov
ja
loop
aaa
out
rclb
subb
pop
clc
and
out
clc
jle
pushf
test
lcall
push
sbb
cmpl
cmpsb
xchg
sahf
call
fisubrs
ret
scas
into
fisttpl
mov
mov
repnz
popf
jne
call
test
mov
mov
and
les
mov
ficompl
mov
push
ret
call
and
test
push
cmp
lcall
mov
inc
push
mov
das
xor
add
clc
aam
push
push
mov
mov
paddd
test
cwtl
xchg
and
aaa
cli
shlb
in
cmp
push
nop
mov
push
xor
iret
ss
inc
bound
call
aam
ficomps
outsb
int3
sbbb
movsb
dec
sbb
push
mov
call
stos
push
adcb
dec
out
mov
les
or
in
jle
add
or
fcoms
ficoml
xchg
mov
orb
daa
jb
jle
mov
cmp
outsb
pop
test
movsb
add
bsf
dec
dec
scas
test
xchg
dec
or
negb
lock
mov
jns
andl
sbb
sbb
dec
orl
movsl
les
pop
fisubrs
inc
mov
sbb
xchg
movsb
inc
lcall
sbb
test
mov
jmp
xor
mov
in
in
sub
sub
lret
and
cld
test
inc
popf
xor
sbb
inc
xchg
jmp
into
rcrb
cli
mov
pushf
dec
jp
test
mov
popf
call
out
jmp
add
idivb
adc
push
or
mov
leave
stc
orb
mov
mov
testb
int
or
adc
cmp
pop
shlb
cld
cmp
xchg
lcall
dec
jno
or
decb
or
push
mov
xchg
xchg
repnz
cmpsb
or
xchg
outsb
ljmp
and
adc
jecxz
out
es
pushf
xor
xchg
jl
mov
dec
xchg
xor
mov
test
or
imul
movsb
mov
cmpsl
xchg
into
daa
add
jb
push
clc
ljmp
sbb
push
fldcw
into
mov
shlb
adc
pop
divb
pop
jp
sub
cmc
sbbb
arpl
stos
mov
jp
testl
pop
mov
sub
xchg
test
repnz
or
ret
stos
add
or
pop
movsb
js
popa
sti
movsb
insb
lcall
cmp
xchg
mov
test
and
jle
out
dec
mov
push
cli
test
jnp
out
fiaddl
and
dec
jno
add
cmpsl
push
lret
jecxz
sbb
pop
test
repnz
cmp
out
stc
xor
mov
pusha
in
test
hlt
fldt
in
inc
out
mov
adc
cmp
mov
loop
mov
ljmp
mov
push
jmp
fmul
test
cmp
addr16
data16
cmp
cmp
les
and
ret
fwait
and
loop
sbb
adc
pop
mov
inc
sub
imul
pop
push
stos
add
dec
mov
mulb
scas
push
test
fsubp
mov
jle
pop
mov
xor
insb
mov
je
aaa
divb
in
aaa
add
loope
loop
add
push
mov
and
lahf
pushf
ret
arpl
xor
inc
and
pop
jae
dec
dec
xor
inc
mov
aad
xchg
sahf
push
test
add
pusha
movsb
data16
out
imul
pop
sub
lods
aam
imul
cmpsb
or
loop
outsb
or
and
mov
out
sbb
jle
mov
sbb
cli
ret
test
add
in
jno
nop
mov
add
imul
divb
lcall
mov
pop
inc
and
je
shl
push
push
stos
adc
adc
sub
push
add
or
in
jns
pushf
call
ret
and
mov
sub
adc
stc
sub
jecxz
xor
inc
fwait
mov
adc
push
pop
mov
test
lret
cmovle
test
pop
add
jmp
call
movsb
cmpsl
stos
pushf
popa
divl
inc
or
dec
sub
rcll
sub
push
mov
push
sub
insb
test
or
cmp
or
add
bound
cmp
lcall
iret
cmp
in
lret
roll
daa
lahf
fisubl
adc
sbb
ja
inc
jmp
sbb
testl
faddl
gs
or
push
and
adc
ret
sbb
test
scas
sub
fwait
sub
mov
rol
movsb
xchg
xor
jmp
ljmp
inc
inc
xlat
stos
push
mov
cmp
cmpsb
test
enter
gs
or
jge
test
adc
addr16
or
sub
mov
test
ss
popa
into
dec
push
and
xor
pop
out
xor
push
sbb
bound
fsts
das
or
push
test
jp
push
inc
and
cmp
iret
dec
mov
movsb
cmp
lods
cmp
sub
dec
mov
sub
jb
loope
mov
or
movl
mov
test
lahf
mov
mov
test
loope
iret
daa
faddl
jbe
jecxz
xchg
fldcw
inc
or
xor
test
fwait
adc
jno
test
fldenv
arpl
mov
out
test
pop
stc
lret
pop
cmpsb
inc
dec
fwait
arpl
add
loope
sub
mov
fsubl
sarb
jmp
push
test
lret
loopew
mov
inc
pop
push
mov
xor
mov
rorl
jb
cmp
fs
js
fcoml
divb
inc
mov
xor
mov
test
test
xchg
leave
dec
mov
mov
fsubp
xchg
inc
rcrb
lcall
ficoml
mov
addl
or
jb
mov
test
push
stos
and
stc
icebp
push
mov
cmp
dec
xchg
or
call
test
push
lods
scas
xor
idivb
pop
in
and
idivl
mov
loope
hlt
and
aam
xchg
pop
add
les
in
test
inc
mov
hlt
test
int3
xchg
cmp
stos
fwait
sub
mov
imulb
test
lds
xor
pop
mov
sub
outsb
sbb
arpl
add
cmp
sbb
pop
adc
leave
add
push
inc
xchg
xchg
xchg
inc
dec
mov
sti
cmpsb
jle
call
xor
inc
sub
sub
dec
or
inc
sbb
sarl
sbbb
mov
adc
and
xor
push
inc
shl
dec
lcall
mov
jb
in
mov
or
ficomps
sbb
test
mov
pop
test
jb
push
xor
lods
pushf
ret
xchg
sbb
movsb
out
sahf
inc
push
fsubs
mov
lret
in
jecxz
mov
dec
inc
xor
or
jnp
jb
fwait
push
lods
ret
idivb
pop
sbb
jne
les
dec
int
adc
ljmp
mov
add
testl
inc
shrl
fstps
out
jl
repnz
xchg
sbb
cmpsb
test
jo
lds
call
or
test
orl
and
adc
xchg
push
call
flds
fs
adc
xchg
or
insb
sahf
iret
mov
negl
negb
inc
test
sub
roll
or
aas
rol
jbe
lret
data16
push
xchg
inc
int3
sbb
mov
add
lcall
pop
lods
in
clc
stos
mov
sub
add
mov
and
in
sub
out
fnstsw
xchg
and
test
movsb
in
std
push
sub
or
stos
sbb
or
hlt
icebp
call
push
test
cmp
stc
push
repz
lock
loopne
cmc
adc
sbb
adc
mov
push
stos
inc
or
mov
jae
inc
fxch
test
loopne
sar
in
js
test
xchg
shll
add
out
loop
das
int
pop
add
mov
and
xchg
add
mov
out
stos
xchg
popa
or
jecxz
stos
mov
sbb
ret
mov
sub
mov
mov
test
loop
dec
pop
loope
iret
test
xchg
jl
and
adc
ret
mov
fsub
cmpsl
xchg
push
movsb
dec
mov
fwait
in
je
jp
cmpsl
or
push
data16
push
inc
lahf
rolb
testl
call
aaa
inc
ret
dec
and
mov
sbb
cmp
pop
dec
je
lods
and
sar
ret
dec
mov
jl
movsb
sub
or
add
imulb
lret
arpl
push
dec
xchg
mov
fs
and
sbb
add
jbe
adc
pop
sub
push
pop
push
jmp
mov
out
sub
add
adc
mov
sti
inc
sahf
cmp
cli
pusha
xor
ss
and
enter
icebp
xor
and
xchg
xchg
and
mov
pushf
pop
lahf
cmp
add
pop
test
or
or
ss
ret
jecxz
inc
imul
xchg
test
dec
roll
push
aad
jl
inc
and
pop
imul
shrl
jns
dec
stc
pushf
add
lcall
out
xorl
xchg
call
insb
pop
lods
cwtl
add
in
arpl
cwtl
add
inc
sbbb
movsb
jmp
dec
insb
daa
mov
cli
in
sahf
jbe
sub
test
idivl
xor
test
inc
out
mov
pop
and
repnz
jns
mov
add
cmp
mov
aas
or
and
pop
les
fcompl
pushf
jmp
testb
sub
jl
push
add
push
jae
or
push
mov
test
add
movsl
stos
cs
push
test
mov
scas
xchg
test
xchg
push
pusha
test
cmp
out
test
jno
ret
mov
xchg
sti
pop
push
lcall
add
pushf
fldenv
mov
mov
sub
in
jl
adc
dec
into
std
mov
xchg
and
lahf
outsl
sbb
sub
test
xchg
push
pop
and
je
xchg
jl
test
push
push
adc
movsb
dec
aam
and
sbb
adc
dec
lret
sbb
jecxz
adc
adc
test
push
and
adc
or
sbb
cmp
sbb
js
insb
mov
cld
push
sub
and
movsb
test
push
sti
cmpsb
cmp
or
sbb
mov
and
jl
cmpsl
ret
cmc
add
test
hlt
push
lret
cltd
test
je
push
cmp
jp
jno
push
sub
inc
mov
sbb
lret
js
inc
and
dec
xchg
test
jp
test
rcrl
cmp
repz
fidivrl
cmp
movsb
int3
sub
scas
lock
insb
sbb
sub
adc
mov
push
or
jl
sbb
test
lcall
test
cmp
cmp
or
test
lret
outsb
ret
insb
xchg
push
and
arpl
pop
out
fstpt
or
sub
pop
adc
dec
shll
test
je
enter
out
in
fwait
mov
mulb
lea
xor
sbb
stos
mov
mov
jns
sar
add
test
pushf
repz
fsubrs
iret
inc
std
mov
or
shll
idivl
adc
dec
sbb
and
mov
test
pop
cmc
cmp
inc
xor
ret
add
dec
bound
mov
test
mov
xchg
push
sub
add
sub
fidivrl
lods
pop
loopne
inc
adc
sarl
mov
inc
mov
dec
jp
cmp
lods
cwtl
pop
sbb
jno
arpl
mov
out
xor
pop
test
pop
aam
out
push
cmp
pop
cli
fidivl
dec
insb
sbbl
mov
adc
mov
mov
and
pop
iret
sbb
pop
jmp
cltd
xor
xchg
enter
sub
push
xchg
mov
test
les
sub
jbe
jns
stc
xchg
daa
jecxz
cmc
xor
sub
jnp
fsubrs
movsb
cmpsb
mov
cmp
decb
fwait
sub
mov
push
jne
shlb
sbb
test
cmp
lret
sub
mov
stos
test
dec
jno
test
jl
movsb
test
mov
mulb
jle
test
mov
cmc
cmc
jecxz
inc
lcall
mov
jl
hlt
push
adc
and
fiaddl
ret
pop
movb
testb
mov
and
or
ret
loope
subb
stc
mov
add
jp
adc
add
stos
dec
hlt
test
mov
sbb
pusha
and
int3
mov
xchg
outsb
mov
sub
test
arpl
test
jecxz
in
jb
adc
push
push
xchg
or
cmp
sub
jecxz
popa
xchg
xchg
xchg
sub
stc
test
dec
sub
cmc
into
movsb
loop
and
or
pushf
pop
test
sbb
loop
jb
test
jne
push
mov
mov
jnp
roll
sahf
mov
push
sbb
or
call
jbe
and
out
adc
daa
or
into
xor
jecxz
adc
lods
adc
mov
insb
cmp
or
mov
dec
sti
pop
popa
fidivrl
dec
sub
adc
jbe
loope
or
mov
dec
test
out
int
movsb
or
rorl
push
cli
xor
mov
inc
out
mov
push
xchg
mov
mov
mov
cmp
test
xchg
ret
test
je
cmc
add
dec
ljmp
mov
xchg
rclb
arpl
shl
cmp
inc
jb
dec
cmp
dec
add
pop
out
cmp
mov
ret
daa
mov
adc
mov
movsb
add
mov
mov
arpl
test
jmp
sub
inc
sub
negl
or
adc
add
popa
cli
mov
bswap
mov
adc
and
lret
call
xor
sub
mov
xchg
mov
mov
pushf
sbb
cs
incb
jb
test
and
cs
mov
push
or
and
cli
push
mov
movsl
push
arpl
and
xchg
cltd
add
and
cmp
mov
push
or
mov
test
imul
aam
das
testb
sub
lret
stos
sar
js
dec
in
push
lcall
jl
test
pop
adc
inc
in
fwait
mov
sbb
xchg
mov
ret
mov
lods
sbb
cmp
bound
movsb
mov
jp
push
aam
test
cmpsb
repnz
push
sti
enter
mov
stos
push
mov
fimull
test
in
xchg
jb
inc
inc
mov
arpl
stc
sub
rcl
sbb
test
mov
add
push
idivl
out
mov
imul
pop
mov
jp
stos
sbb
mov
xchg
test
cltd
pop
in
in
incb
and
arpl
inc
push
sub
mov
xor
pop
test
mov
scas
test
stos
sbb
cmp
fsubl
repnz
or
call
loopne
lods
cmp
mov
sbb
jle
test
dec
mov
in
adc
mov
inc
ficompl
mov
mov
jns
add
or
xor
arpl
mov
adc
insb
arpl
adc
mov
cmpsb
add
jecxz
test
imul
inc
pop
clc
test
jp
shll
int3
movsb
push
push
add
movsb
lcall
cli
mov
leave
xor
inc
jb
push
test
cmp
inc
dec
mov
test
sti
push
out
or
sub
stc
push
arpl
inc
jecxz
and
test
in
adc
or
loop
push
mov
mov
and
clc
mov
mov
sbb
je
and
jns
in
xchg
cmp
jb
jae
insb
mov
mov
mov
xor
into
sub
test
jb
push
lahf
jae
push
test
roll
jns
fsqrt
test
stc
cmp
xchg
jle
sbb
adc
dec
in
enterw
pop
xchg
test
inc
lcall
adc
int
xchg
xor
mov
test
lret
add
add
pop
movsb
loope
xchg
jp
insb
and
ja
clc
sbb
dec
mov
pop
pop
xor
cltd
mov
std
test
in
or
mov
arpl
sbb
rorb
out
and
and
cli
movsb
inc
pop
fwait
fs
test
loopne
outsb
push
push
jb
jecxz
or
ss
icebp
cmp
cmp
jle
int3
arpl
xchg
push
popa
push
mov
sbb
cmp
mov
cli
movb
fiaddl
enter
shll
xchg
mov
test
addb
dec
les
test
add
fstps
notb
movsb
jnp
push
and
test
mov
cmp
popa
bound
sbb
sti
pop
dec
hlt
jecxz
test
repnz
test
mov
push
call
jns
xchg
aas
pop
push
dec
aam
sbb
addb
cmc
xor
test
xchg
mov
xchg
lret
dec
imul
add
repnz
sub
test
and
ficoml
idivb
xchg
mov
mov
pusha
or
aam
push
lcall
add
inc
test
pop
dec
loopne
incb
xor
adc
sub
mov
test
push
icebp
xor
arpl
sbb
sti
and
mov
and
inc
in
in
mov
and
mov
sbb
mov
pop
dec
pushf
and
hlt
adc
sub
loop
ret
in
faddl
into
add
int3
dec
inc
xchg
and
pop
into
outsb
lcall
dec
dec
adc
or
mov
les
and
jnp
subb
int
jae
sub
aas
jle
ljmp
stos
inc
mov
lods
inc
in
sub
call
adc
ficoml
or
fcompl
and
subb
pushf
jle
test
xchg
and
adc
test
dec
ret
mov
sub
mov
insb
pop
sub
and
jl
into
dec
repz
mov
mov
rorb
ja
jno
xor
sbb
mov
xor
xor
jle
bswap
in
push
add
xchg
push
aam
push
leave
xorl
test
mov
cmp
in
dec
lods
sbb
pusha
movsl
pop
cwtl
xchg
test
dec
push
mov
arpl
pop
xor
pushl
mov
cli
stos
mov
in
xlat
orb
sti
push
fisttpl
es
scas
in
pushf
sar
and
mov
ljmp
movsb
and
lret
cli
pop
pusha
cmp
testb
push
outsb
fmull
sbb
inc
gs
mov
xchg
adc
fadds
cmpsl
inc
pop
mov
jns
mov
and
fisubrl
sub
pop
call
inc
xor
pop
cmpsb
lods
push
push
xchg
mov
test
mov
pop
xchg
enter
push
sub
ficomps
cmc
dec
pushf
jno
les
mov
mov
inc
movsb
or
xchg
rcl
xchg
cmp
pinsrw
sub
mov
arpl
aaa
inc
outsb
inc
pop
dec
mov
clc
ja
mov
insb
add
mov
mov
in
push
outsb
cmc
clc
mov
mov
push
mov
insl
pushf
sbb
mov
out
pop
mov
rclb
scas
and
loop
pushf
ficomps
xor
xchg
pop
or
cmc
fisubl
cmp
cli
sub
loop
and
je
les
push
test
cli
insb
push
data16
mov
out
sbb
fwait
dec
lret
sub
je
js
insb
xor
mov
inc
mov
test
popa
mov
xchg
imul
dec
cmp
sahf
test
fiaddl
das
into
rolb
out
in
mov
sbb
mov
lret
stos
test
or
push
mov
in
les
jo
push
mov
add
sub
aad
pusha
fdivr
dec
inc
stc
stos
sbb
test
jbe
cli
xchg
loopne
mov
or
jge
cmpsl
les
aas
test
std
sub
inc
pusha
lcall
cltd
std
cmpsb
push
add
fldt
dec
push
sarl
inc
test
jns
sub
push
mov
test
sub
dec
pop
xchg
sbb
lds
out
sbb
mov
xchg
push
push
mov
lock
mov
daa
pop
jp
test
cmp
and
cli
dec
mov
test
lret
je
jp
and
in
mov
xor
int
mov
stos
int3
fiadds
test
cld
fs
test
data16
repnz
leave
jp
or
cs
fwait
and
sahf
mov
int3
aas
add
in
in
icebp
out
mov
inc
lea
mov
push
loope
mov
js
out
aad
fs
les
xchg
sbb
outsb
mov
ficoms
int
sub
adc
mov
data16
mov
or
cmp
fs
pushf
cli
mov
int3
out
cmc
xchg
push
mov
mov
and
adc
in
dec
nop
mov
xor
aas
mov
fs
adc
inc
loope
or
imul
addr16
sarl
les
fsts
xchg
dec
xor
mov
icebp
movsb
ficomps
icebp
sub
and
mov
test
jp
mov
fwait
or
xchg
sub
xchg
mov
push
std
push
movsl
ljmp
mov
rcrl
xchg
loop
cli
test
rcrb
ret
outsb
inc
xchg
sbb
cwtl
jg
mov
out
and
lret
add
jnp
test
sub
xchg
in
add
int
movsb
sub
repnz
ret
xchg
mov
inc
aas
cmp
push
jb
xor
or
loop
mov
aam
xchg
test
jp
ljmp
aas
daa
les
movsb
mov
notl
mov
pop
pushf
mov
pop
std
ret
fsubl
arpl
jle
lock
xor
gs
jl
inc
add
cli
mov
les
pop
and
movsb
pop
stc
push
xchg
dec
mov
push
mov
fisubs
add
xor
addr16
mov
sub
sub
xor
jp
xor
cltd
test
imul
cmp
cli
inc
movsl
popa
cltd
test
ss
and
out
dec
movsb
roll
and
shlb
pop
pop
adc
mov
jge
jmp
add
cmpsl
in
test
and
push
sbb
test
add
movsb
mov
mov
push
sbb
pop
shl
bound
jp
xchg
mov
dec
xor
mov
mov
in
fsubp
movsb
mov
xchg
ret
cmpsb
cmc
jle
test
addr16
mulb
incb
sbb
xor
mov
sub
test
mov
pushf
dec
lds
fiaddl
pop
jge
in
sti
or
pop
loope
mov
mov
cmpsb
ja
cmp
sbb
add
push
repnz
and
jns
xchg
dec
out
inc
test
arpl
pop
push
out
mov
enter
push
mov
jb
stc
or
neg
test
inc
cwtl
add
movsb
dec
cltd
rcll
in
ljmp
dec
movsb
add
in
xchg
sahf
cmp
and
pop
cld
mov
hlt
ss
into
lret
test
pop
fdivl
data16
jbe
mov
mov
andb
push
xor
adc
and
jp
imul
mov
imul
enter
mov
jo
pop
shll
xor
cmpsb
sbb
adc
pop
rol
fs
scas
mov
push
add
push
and
push
mov
addr16
push
cmova
add
sub
mov
iret
test
dec
add
test
test
ljmp
rorl
push
int3
mov
inc
pushf
and
push
insl
mov
test
push
mov
pop
cmpsb
adc
clc
jnp
pop
lods
adc
mov
xchg
les
jle
lret
adc
push
and
add
push
adc
push
or
mov
pop
add
lcall
lret
test
bound
or
adc
stos
mov
aam
nop
sub
test
imulb
movsl
jl
mov
aad
inc
leave
dec
push
movsb
dec
jmp
jno
fldenv
sbb
and
adc
mov
pop
sbb
enter
xchg
cltd
mov
test
test
fcoml
call
cmc
sub
int3
outsl
push
pop
sahf
mov
pushf
fiaddl
cli
ljmp
mov
or
insb
lret
push
mov
test
pop
add
test
or
add
movsl
insb
test
sub
push
test
cmpsl
shr
out
xchg
jl
pop
sbb
outsl
shr
sub
sub
mov
mov
inc
testl
out
in
cltd
leave
adc
inc
cmp
mov
pop
or
or
test
mov
addr16
nop
and
inc
test
mov
int3
sbb
leave
mov
bound
cltd
imul
add
stos
add
sarb
mov
test
dec
and
sbb
movsl
mov
lret
bound
mov
jl
dec
and
movsb
insb
cmp
sub
in
inc
mov
dec
imul
mov
xchg
push
pop
adc
lcall
sti
mov
and
insb
sbb
sbb
sbb
sbb
repnz
mov
cmp
mov
icebp
lret
cmp
or
mov
xchg
mul
enter
cltd
sbb
bound
int
stc
fs
icebp
fs
mov
and
fcoms
mov
or
add
lods
test
hlt
and
xor
fnsave
pop
scas
lea
cmp
aad
mov
and
sbb
leave
fnstsw
and
fwait
cmp
mov
lret
je
insb
mov
cmp
jo
and
push
and
popa
movsb
mov
xchg
fidivrl
cltd
add
jno
in
mov
dec
sub
jne
lahf
adc
jecxz
sub
outsb
xor
add
fiadds
push
fisubl
mov
test
rcr
ret
cwtl
test
pop
std
adc
test
aas
cmp
mov
pop
shrb
lock
cli
shll
in
stos
fdiv
sbb
cmp
scas
push
mov
sbb
divb
xor
xchg
cmc
mov
aam
je
adc
int3
add
add
mov
cmp
inc
test
push
sub
and
push
in
sub
shl
stc
push
int
shll
mov
xchg
test
lahf
push
loope
and
pusha
dec
repz
dec
mov
data16
test
pop
je
pop
shrl
dec
test
out
cmc
and
in
inc
and
mov
inc
mov
xchg
xchg
dec
test
push
rcrb
jp
sahf
aam
fimuls
add
jb
or
test
pushf
dec
dec
mov
scas
arpl
push
mov
mov
mov
xor
mov
mov
shll
imul
sub
adc
stos
jp
imul
lret
or
or
cld
jno
lods
add
mov
test
and
push
enter
push
jne
or
cmpsl
aad
mov
fadds
push
sub
and
movsb
mov
sub
mov
and
sbb
bound
sub
fistps
pusha
cltd
pop
fistpl
mov
cld
mov
add
jg
dec
bound
push
or
insb
enter
cld
sbb
pop
inc
bound
ja
mov
test
add
pop
sbb
bound
cltd
cld
mull
and
flds
pop
out
imul
xor
xor
sub
es
adc
cltd
fnstcw
ss
subl
mov
test
jmp
pop
add
adc
cs
lods
and
sbb
das
adc
repz
out
sti
inc
fs
arpl
pop
cltd
ret
mov
mull
jmp
lret
insl
pusha
lahf
bound
sbb
sbb
fwait
out
cmp
sbb
ret
arpl
inc
push
jmp
add
push
lcall
cltd
mov
and
sbb
mov
mov
fs
test
aaa
pop
aam
push
fcoms
lret
sub
inc
bound
test
je
fcomps
dec
and
andl
test
leave
shlb
es
movsb
repz
jp
andb
lds
sub
test
lods
adc
or
in
mov
and
or
fdivl
jl
cmpsl
stos
push
data16
test
push
push
sbbb
fdivrl
mov
fidivl
cmc
pop
mov
dec
push
xor
arpl
sarb
subb
mov
xchg
sbb
test
ret
mov
in
inc
and
sahf
adc
movsb
xchg
test
lods
mov
dec
lret
aam
in
ljmp
push
lret
fiaddl
cmp
movsb
lea
dec
mov
mov
testb
dec
dec
inc
push
out
mov
sub
mov
sbb
add
mov
jbe
lret
push
pop
aaa
test
popf
xor
js
or
cli
and
mov
test
into
mov
lahf
sti
test
ret
pop
lret
imul
ss
xor
and
mov
movsb
pop
pop
loope
stc
pusha
inc
mov
aas
mov
outsl
repnz
pop
pop
std
addr16
in
adc
pusha
andl
es
in
jp
lcall
test
mov
mov
cli
pop
inc
loope
adc
mov
arpl
fistl
bound
sub
xor
mov
shrl
mov
mov
dec
pop
out
mov
das
imul
xchg
pop
mov
aas
push
inc
adc
test
out
sti
inc
add
test
pushf
jmp
test
or
test
mov
inc
stos
leave
pushf
rolb
sub
cmp
mov
jbe
enter
mov
add
test
cld
mov
in
or
jl
sub
xchg
and
subb
arpl
jno
ret
jmp
rcrb
mov
ret
push
pop
add
mov
mov
ret
push
mov
int3
loope
pop
pop
mov
dec
movsb
enter
xor
push
mov
test
stos
out
xchg
inc
mov
push
and
lret
inc
test
cwtl
out
test
jl
sbb
pop
movsb
push
push
cmp
jp
dec
sub
repz
mov
cld
mov
sub
incb
cmp
add
repnz
stos
mov
xor
mov
ret
scas
nopl
jbe
lcall
xchg
push
sbb
xor
sub
cmp
push
jp
in
repnz
shlb
sub
xor
js
mov
pop
insl
test
mov
xor
inc
sub
out
mov
jnp
lret
or
mov
movsb
addl
pop
out
cmpb
fisubrl
cmpsb
cli
xor
repz
decl
outsb
ret
movsb
xor
daa
xchg
sub
pop
test
sub
push
xchg
pushf
adc
add
xchg
cmp
cwtl
jmp
loope
xchg
xchg
scas
ret
leave
imul
jecxz
bound
sarl
les
test
cmp
in
arpl
and
lds
test
dec
inc
cltd
xchg
dec
in
push
sub
imul
in
sbb
xlat
push
mov
lret
test
xchg
adc
mov
insb
hlt
fwait
pusha
fs
imul
push
movsb
cmp
cmp
into
rcrl
cs
arpl
and
mov
int3
pop
imul
aad
in
fnstenv
ljmp
pop
scas
sahf
add
xor
nop
inc
jecxz
inc
lea
mov
mov
pusha
mov
adc
hlt
mov
xchg
ja
dec
mov
sub
cli
push
int
lret
mov
mov
push
sbb
jmp
test
or
cmp
test
and
imul
loop
or
mov
mov
dec
push
push
outsl
or
loope
arpl
adc
sub
xchg
cld
jl
das
adc
xor
into
sub
fcomi
push
xor
bound
outsl
jp
call
inc
cmpsl
lods
test
dec
mov
or
es
push
cltd
jmp
push
lods
in
imul
jge
mov
or
mov
dec
out
loop
into
addb
loop
scas
shll
outsb
enter
sbb
lret
dec
push
imul
inc
or
aad
je
pusha
pop
lcall
mov
loop
lods
sub
bound
jmp
daa
imul
movsb
or
into
sub
cmp
int
in
arpl
and
sub
or
in
mov
cltd
sub
push
sbb
leave
xchg
mov
or
test
lret
in
sbb
test
or
lock
test
insb
test
sahf
mov
les
stos
sub
mov
and
andb
cmp
fdivrl
mov
mov
lahf
imul
loope
popa
stc
jecxz
sbb
jnp
test
pop
call
lea
fwait
push
stos
popf
shlb
push
cmc
mov
jnp
movsb
or
cli
xchg
mov
leave
fisubrl
mov
adc
pushf
sub
push
xor
add
mov
stos
outsb
mov
lahf
ret
in
movsb
xlat
lcall
push
imul
fwait
inc
jbe
or
sub
add
xchg
dec
test
cs
adc
insl
out
ret
mov
bnd
test
lret
sub
dec
sub
stos
xchg
jbe
mulb
test
sahf
shrl
popf
in
cmpsb
xchg
push
mov
xchg
fwait
test
push
sbb
dec
cmp
dec
aam
sti
stos
push
jnp
js
inc
sbb
pop
pop
leave
mov
in
cmp
mov
hlt
cltd
movsb
dec
insb
lock
pop
outsb
pushf
lcall
jae
cld
scas
xor
test
mov
sti
xor
inc
lcall
shr
aaa
cmpsl
fdiv
cld
out
loop
sbb
dec
imul
jp
sbb
push
mov
sbbl
inc
or
sbb
push
loop
iret
fstps
dec
mov
call
mov
lods
mov
dec
sub
or
sbb
mov
sbb
pop
outsl
stos
aas
xchg
loope
cltd
dec
cltd
imul
mov
and
pop
addr16
in
pop
test
adc
mov
rcll
fs
cld
xchg
push
xor
dec
leave
enter
or
out
mov
insb
imulb
adc
cmp
mov
lcall
mov
sbb
in
je
stos
mov
and
sub
mov
mov
pop
or
ss
scas
jmp
ret
cli
dec
and
add
pop
and
and
mov
insb
enter
aaa
loop
mov
dec
mov
arpl
idivb
cmp
bound
cmp
pop
jns
push
sub
add
adc
cmc
daa
fwait
les
ja
scas
mov
in
shlb
lcall
push
sub
cld
fwait
sbb
adc
cltd
mov
leave
rcll
pop
test
stc
and
cli
mov
sub
ja
repz
pusha
xor
dec
mov
add
jns
loop
testb
mov
les
stos
das
xchg
dec
mov
les
push
and
daa
mov
push
mov
or
or
shl
dec
jbe
mov
sbb
mov
cltd
fistl
mov
mov
loop
arpl
xlat
mov
out
stos
mov
mov
and
cmc
inc
cmpsb
jmp
je
fwait
add
cmp
mov
lock
lcall
test
sub
mov
mov
or
jns
adc
dec
jbe
sbb
mov
cmp
and
fcomi
fwait
test
cwtl
sbb
stc
fsts
test
dec
jl
push
mov
out
icebp
clc
mov
inc
lret
int3
xor
repz
pop
inc
mov
jp
pop
cld
test
bts
leave
push
mov
shl
and
inc
cld
dec
pushf
movsb
sub
mov
jo
sbb
insb
ljmp
imul
mov
inc
stos
dec
popaw
imul
sbb
push
bound
xchg
or
mov
dec
push
aas
or
jbe
insb
stc
mov
push
mov
or
sbb
scas
xor
mov
cmp
les
push
push
nop
scas
lods
jbe
mov
movsb
mov
orb
add
cmp
loopne
xchg
jmp
sub
cld
cld
popf
leave
mov
fisttpl
jmp
inc
pop
push
roll
cmpsl
leave
lret
test
push
test
mov
in
xchg
stos
jbe
sbb
cli
in
or
mov
mov
sbb
push
jns
cmp
stc
int3
imul
mov
sbb
insb
adc
fsts
movsl
add
mov
mov
pop
xor
loop
cmp
or
insl
mov
mov
or
adcb
and
popf
mov
lcall
in
push
imul
jbe
inc
or
sbb
aas
xor
push
or
ret
cltd
dec
jbe
push
test
lret
lds
or
fwait
in
jle
dec
inc
mov
lods
push
jne
test
sbb
leave
dec
fmuls
movsb
pushf
dec
xchg
mov
test
and
sub
mov
lcall
frstor
push
jge
xlat
fsub
test
dec
jmp
test
repnz
les
mov
fsubr
outsl
mov
testb
push
or
stos
or
mov
dec
test
mov
and
test
mov
pop
scas
imul
xlat
iret
rolb
push
sub
call
mov
dec
test
lods
in
xor
push
ret
fldt
pop
dec
mov
sbb
pushl
insb
add
roll
ficompl
in
xor
pop
jo
mov
fcomps
test
repnz
jnp
iret
add
test
loopne
mulb
ljmp
sub
bound
ret
movsb
subl
movb
dec
cmc
mov
stos
mov
push
scas
cltd
fimull
mov
loope
int3
fiadds
cmp
clc
lahf
mov
pop
test
mov
hlt
test
jae
add
addr16
push
push
push
mulb
fs
test
aam
cmp
and
push
xor
arpl
sahf
dec
push
mov
jb
lcall
pop
mov
dec
in
iret
sub
push
test
cmp
or
mov
adc
sbb
in
or
arpl
popf
test
or
xchg
mov
mov
mov
loope
jp
sahf
cmp
test
mov
fwait
push
fcmovb
test
in
sub
add
mov
sbb
cmp
jmp
adc
fs
jecxz
jo
push
and
push
push
inc
push
in
test
lahf
andl
xchg
loopne
ljmp
fsubrl
jb
fisubrl
dec
mov
pop
adc
pop
mov
in
inc
mov
popa
lret
and
mov
leave
xchg
pusha
lcall
lahf
sub
push
test
mov
icebp
int3
xor
mov
xchg
jmp
sbb
jnp
jo
and
and
loope
push
lret
sub
mov
sbb
adc
test
cli
push
arpl
fs
jmp
test
sbb
test
sub
xor
movsb
ss
test
ficompl
js
test
inc
mov
sbb
mov
in
jl
and
test
xchg
insl
adc
jl
cwtl
jo
test
in
pop
into
cld
mov
lret
ret
test
xchg
dec
dec
cld
inc
ret
xchg
arpl
dec
mov
mov
mov
xchg
sbb
test
lods
and
pop
fmul
subl
cs
or
sbb
ret
mov
mov
sbbl
adcb
or
xchg
inc
in
movsb
and
lret
test
test
arpl
cmp
mov
outsl
aad
fs
xchg
lock
and
test
loope
loopne
lret
test
fs
inc
pop
xor
in
test
push
pop
dec
sti
cmp
mov
jbe
sub
pop
in
xchg
cmp
out
mov
pop
and
and
scas
js
mov
jmp
loope
jge
jecxz
sub
pop
pop
push
push
cmp
push
fisttpl
cs
push
mov
addl
mov
sub
inc
push
test
xor
test
incl
dec
or
or
shrb
mov
or
stos
sub
out
push
xchg
mov
cmp
jmp
mov
push
mov
jp
je
scas
pop
mov
ds
mov
xchg
sub
adc
cmp
lea
imul
fucomip
sbb
xchg
mov
jbe
xchg
sub
xlat
arpl
pop
pushf
insb
xchg
cs
sub
addr16
adc
loop
mov
sbb
sub
inc
loope
xchg
int3
mov
add
cs
mov
mov
dec
ror
and
adc
lock
fnsetpm(287
adc
sub
shlb
je
das
loop
mov
xor
flds
popa
mov
leave
push
arpl
mov
add
xchg
adc
mov
incb
pop
push
sub
popa
test
fcompl
pop
out
xor
test
xchg
adc
stc
sbb
mov
jmp
int3
jp
jbe
pushf
xor
stos
lret
inc
inc
dec
imul
dec
mov
push
or
and
mov
fistpl
jb
fsubrs
inc
fnstcw
out
inc
xchg
or
mov
pop
test
lret
mov
stc
sub
mov
sbb
in
inc
and
cmp
es
daa
loope
hlt
in
sub
pop
sbb
fistps
and
pop
pop
jmp
sub
inc
test
xchg
push
insb
dec
sbb
lahf
pop
leave
mov
les
fistpl
xor
mov
std
shrl
push
jmp
test
movsl
cld
push
scas
mov
and
lods
je
dec
in
pop
fstps
loope
scas
cmp
mov
jns
sbb
test
mov
mov
filds
dec
lahf
rolb
in
sub
out
test
aas
mov
jnp
aaa
jb
data16
lcall
call
out
subb
dec
enter
fcmove
xchg
jns
sub
push
test
xchg
aam
call
pop
cwtl
sbb
inc
orb
mov
repz
jge
std
mov
test
sub
xchg
scas
test
daa
ret
in
movsb
cmc
imul
stos
sub
pusha
shlb
mov
sub
mov
test
mov
adc
pushf
or
xor
cmp
js
lret
fs
test
outsb
xchg
gs
adc
test
dec
mov
push
jns
pop
mov
leave
ds
sbb
cmp
jae
pusha
cli
test
je
repnz
int3
test
pop
mov
jmp
push
stc
movsb
push
dec
out
es
mov
sub
and
ret
mov
dec
mov
or
cmpsb
data16
or
ret
adcb
orl
sub
add
test
adc
ss
mov
and
mov
fisttpl
mov
adc
lcall
mov
mov
jbe
test
mov
sub
mov
add
mov
lcall
sub
movsb
mov
push
arpl
aas
out
test
test
dec
in
jecxz
mov
inc
daa
pop
lea
pop
lds
push
sti
lret
xor
and
test
pop
lcall
sub
push
sbb
stc
mov
cli
arpl
jb
nop
push
je
mov
mov
enter
adc
adc
test
sub
arpl
adc
or
addb
and
pop
imul
add
test
xchg
data16
sbb
loope
test
movsb
sub
inc
test
cmpl
flds
sbb
test
sub
push
test
arpl
xor
mov
mov
adc
orl
push
xor
pushf
cmpsb
dec
ret
lahf
movsb
sub
mov
inc
mov
dec
jne
cmp
fldt
std
sbb
jbe
mov
outsl
inc
adc
sub
mov
bound
test
dec
inc
mov
jmp
test
fs
bound
adc
stos
jo
and
or
add
lds
fldpi
adc
inc
loop
shr
mov
dec
sbb
cmp
jo
hlt
in
dec
inc
mov
sbb
fwait
push
call
sub
test
popa
stos
cmp
and
movsb
add
subl
cli
mov
cltd
dec
iret
pop
sub
sti
test
mov
or
inc
add
sbb
xor
mov
test
cli
fdivr
pop
cmp
fsubrl
add
mov
loop
jb
bound
mov
cmc
bound
and
pop
adc
leave
jmp
mov
add
jge
test
push
bound
popl
push
mov
adc
and
cwtl
jmp
in
int3
test
sub
lds
mov
sbb
and
and
test
push
stos
dec
cmp
test
repz
xchg
out
dec
push
in
jne
test
mov
stc
mov
das
mov
xchg
sarb
fs
inc
mov
pop
sbb
cmp
push
xchg
imul
and
lds
push
xor
mov
adc
fbld
mov
mov
leave
dec
loop
sbb
adc
jge
fnstcw
test
fcoml
mov
pop
dec
dec
repz
cmp
es
pop
iret
mov
stos
jae
mov
fsubs
cmp
mov
adc
test
xchg
sbb
push
sbb
iret
js
test
fnstenv
repz
xchg
pop
test
lcall
out
shll
icebp
loope
mov
shlb
sub
cmpsb
ljmp
or
pop
lahf
adc
jmp
mov
aad
jge
outsl
fldcw
sub
jmp
test
imul
cs
ds
cmpsl
mov
out
inc
mov
inc
enter
mov
leave
in
out
inc
add
clc
test
and
sbb
lea
push
in
xchg
das
or
xchg
lds
lret
testb
push
cmpsb
stos
arpl
adc
gs
test
sbb
xchg
cmpsb
cmc
data16
insb
jp
sbb
test
pop
push
cld
das
test
pop
cmp
add
sub
loop
sbb
sti
aam
add
ss
gs
sub
adc
test
scas
hlt
andb
arpl
pop
cmp
push
rolb
mov
or
mov
mov
loopne
test
int3
xchg
pop
out
inc
das
pop
jnp
ret
dec
cmp
add
cmp
imulb
xlat
lods
cmpsb
push
outsb
dec
or
mov
lcall
stos
mov
or
arpl
or
test
jb
movsb
push
or
or
lds
cmp
ja
xor
pusha
sbb
mov
mov
negb
or
jmp
test
ss
insb
lods
mov
dec
xchg
and
or
fnstenv
sahf
ror
mov
test
repz
stc
in
dec
adc
jne
int
and
dec
popa
in
popf
stos
sub
dec
pop
fs
inc
adc
mov
mov
aam
dec
insb
mov
test
mov
out
test
cmpsl
mov
add
add
inc
imul
popf
mov
loop
lret
cmp
faddl
cltd
mov
push
xchg
add
jns
test
outsl
mov
stc
and
xchg
sbb
jnp
cld
les
shlb
stc
hlt
pop
aam
int
fdivrl
inc
pop
test
jmp
mov
test
cmp
push
bound
pop
fchs
repz
fwait
or
test
test
sar
movsl
pop
test
lret
bound
xchg
or
mov
test
adc
xchg
adc
imul
stos
dec
imul
dec
lods
je
adc
or
cmp
iret
sbb
mov
test
insb
lret
in
jns
cmc
sub
rcll
mov
mov
sbb
mov
shll
pusha
mov
jno
cmp
bound
mov
xchg
xorb
xchg
sbb
dec
jle
cld
testb
and
xor
cli
daa
sbbb
test
mov
jmp
cmpsl
jno
dec
cmp
xchg
sbb
andl
adc
pop
mov
add
mov
and
mov
cmpsl
mov
mov
aam
jmp
inc
dec
test
ljmp
add
add
sbb
xchg
sbb
int
adc
mov
dec
mov
clc
iret
gs
ret
mov
cmpsl
add
in
iret
mov
mov
movsb
leave
fs
push
sub
sbb
dec
outsb
pop
inc
mov
test
stc
lcall
dec
mov
test
mov
sbb
push
xor
inc
fstpl
mov
jmp
out
push
xchg
das
test
and
add
and
cmp
xor
pushf
mov
cli
adc
jns
in
data16
cli
or
mov
inc
add
fistl
sbb
mov
test
push
push
inc
mov
cmp
cld
stos
aaa
jecxz
adc
xlat
and
xchg
lods
jge
adc
sbb
call
orb
push
and
mov
test
jns
test
or
jmp
push
flds
inc
cltd
xchg
jmp
and
push
jno
sub
mov
test
adc
lahf
test
in
xor
jno
fucomip
xchg
cmp
cmpsl
pop
test
mov
mul
and
jne
dec
lods
dec
dec
fcmove
push
sti
test
jb
push
lods
test
mov
lahf
pop
sub
test
decl
icebp
into
insb
xchg
test
popa
mov
sbb
or
sub
adc
hlt
fbstp
in
insl
sub
push
jbe
mov
in
and
xchg
rclb
mov
addb
jne
cmpsb
mov
movl
test
sub
cmp
xor
xchg
loope
cmp
mov
test
xor
fldenv
mov
mov
data16
jne
mov
sub
pop
xchg
dec
sti
imul
mov
movsb
xchg
add
lock
sbb
mov
push
pop
mov
and
push
mov
cmp
or
test
cli
dec
divb
inc
ret
fwait
mov
test
ret
notb
dec
aad
in
sbb
push
iret
xchg
push
pushf
nop
stc
cwtl
xor
add
icebp
test
jbe
in
or
aad
js
and
add
xor
mov
loop
jecxz
icebp
bound
into
xchg
mov
or
and
test
xor
outsb
arpl
sbb
in
add
fsubrl
pop
test
mov
mov
test
push
mov
sbb
mov
mov
push
add
leave
sbbl
test
ror
fsub
fwait
test
cmpsl
pop
add
dec
cltd
test
add
in
lcall
cltd
test
pop
mov
es
fs
sarb
ds
and
scas
mov
jb
mov
or
push
mov
mul
jl
cmp
outsl
dec
adc
lds
test
cwtl
sub
jb
and
push
insb
push
in
testl
fdivs
das
mov
pop
mov
jmp
flds
mov
nop
cwtl
stos
movsb
pusha
dec
and
insb
mov
xor
fists
dec
cmp
test
pop
test
test
cmp
xchg
push
lock
test
add
repnz
xor
arpl
jg
ficompl
push
mov
add
dec
add
inc
insb
dec
es
daa
lret
xchg
fisubl
xchg
push
loope
adc
in
or
sbb
pop
jae
in
mov
mov
rclb
xlat
sbb
jbe
jnp
push
ficoml
mov
adc
inc
cld
push
rolb
mov
mov
fnstcw
dec
lock
cmpsb
test
out
movsl
or
and
test
pushf
mov
mov
dec
movsl
push
leave
cmp
mov
in
sub
test
and
cmp
jnp
call
mov
dec
cmp
cltd
sub
xchg
push
cmc
mov
repnz
movsb
movsb
sbb
stos
and
test
jmp
inc
mov
int
test
xor
inc
xor
ret
sbb
aaa
push
popa
test
mov
push
jne
fxch
fidivrl
fwait
stos
mov
sbb
int
mov
bound
jle
jecxz
xor
mov
test
loope
movsb
cmpsl
popa
mov
xchg
and
outsl
test
mov
outsb
xchg
fmul
test
stos
filds
mov
fcompl
add
and
jle
mov
cmp
or
add
pop
mov
movsb
lea
test
mov
out
movsl
aam
mov
into
test
or
cltd
add
xor
pop
lret
in
xor
add
mov
dec
fldt
sub
push
jno
mov
test
out
cli
mov
es
movsb
jge
es
jne
cwtl
es
xor
xchg
sub
test
add
std
shl
or
and
jge
sub
in
sarl
movsb
std
aaa
jno
mov
or
inc
pop
test
in
rcrb
pop
add
pop
std
rcll
mov
js
adc
imul
cmpsb
inc
cmp
pusha
xlat
xchg
test
in
and
lcall
leave
mov
push
jns
xchg
bound
clc
sbb
sbb
rcll
jl
mov
xchg
test
adc
and
test
mov
sti
dec
arpl
outsl
and
sbb
test
mov
dec
cmp
cmc
jns
movsb
enter
mov
push
movsb
mov
cwtl
pop
cmp
arpl
adc
orl
cmpsb
test
addl
push
stos
xchg
incl
fsubl
cwtl
adc
notl
xorb
sbb
sbb
pop
sub
loope
sar
test
jecxz
adc
push
push
movsb
mov
mov
adc
test
and
mov
adc
sbb
jge
pushf
gs
cltd
and
push
dec
cmc
mov
inc
jmp
in
andb
movsl
pop
inc
enter
dec
adc
or
cmp
int3
xor
dec
xchg
adc
test
pop
rorl
clc
shlb
jecxz
jno
sbb
jl
lock
and
loope
dec
in
jnp
sbb
mov
lods
inc
jmp
fcmovb
ficoml
cwtl
bound
pop
pop
cmp
xchg
enter
repnz
add
sbb
xorl
cwtl
cmp
test
test
pop
fdivrs
push
call
jecxz
test
dec
lret
dec
push
in
test
xor
sub
aam
xor
xchg
sbb
or
xor
loope
lds
aam
cmp
lea
xchg
jae
cltd
cmp
dec
pop
lcall
xchg
arpl
cmp
push
jno
add
test
lret
mov
dec
or
inc
and
mov
add
jmp
bound
cmpsl
rorl
js
in
fiaddl
fwait
sub
call
cmp
push
or
fnstenv
outsb
or
in
mov
movsb
jne
xor
pop
adc
daa
lret
cli
lea
mov
out
loop
shl
in
in
cs
dec
in
jg
sub
or
cmc
mov
sbb
das
sub
jge
out
inc
fwait
adc
addb
cld
wbinvd
scas
cmp
xchg
cmp
aam
arpl
aas
mov
test
sub
test
and
fldln2
test
stc
popf
icebp
test
incl
sub
push
and
dec
lahf
cltd
test
and
sbb
add
iret
push
icebp
data16
cmpsl
addb
and
or
stc
dec
xor
xor
aas
jae
adc
pop
cmpsb
jmp
fsubl
mov
adc
xchg
outsb
mov
fimuls
enter
mov
push
mov
or
mov
adcb
xor
and
lret
insb
cltd
pop
and
pop
out
lcall
mov
cmp
dec
in
movsb
jecxz
or
fldenv
cwtl
je
cmpb
lods
into
loop
int3
jg
adc
fcmovnu
push
push
dec
mov
sbb
and
inc
cmc
cltd
mov
jmp
in
push
pop
jmp
int
sbb
or
inc
test
cmp
sbb
sub
add
lret
adc
sbb
sub
das
out
ljmp
or
mov
add
mov
test
icebp
dec
push
or
stos
add
fldcw
jb
arpl
cmp
pop
push
mov
fst
test
xor
in
insl
mov
test
cltd
adc
repz
dec
test
sti
lods
push
lret
lret
mov
ss
mov
sbb
fcmove
cmp
test
shl
push
add
mov
test
ret
sti
subl
scas
sbb
dec
sbb
stc
inc
test
mov
sbb
jle
xor
in
xor
jmp
stos
pop
bound
leave
pop
mov
scas
fmuls
call
loope
sub
arpl
repnz
mov
stc
dec
mov
push
mov
cmp
pop
test
test
in
mov
mov
pusha
movsb
jmp
fidivrs
and
int
scas
cmp
sub
pop
jecxz
test
iret
mov
test
cmpsl
shrl
cmp
and
push
out
mov
popa
hlt
scas
adc
xor
arpl
inc
sarl
xor
cltd
pop
lods
enter
cmp
mov
stos
adc
adc
insb
sub
push
test
pop
lret
pop
dec
jmp
mov
or
mov
xchg
sub
push
and
dec
mov
lods
sub
jbe
leave
push
stos
in
lret
lcall
inc
push
pop
outsl
lds
and
mov
in
mov
cmp
dec
mov
ljmp
mov
mov
inc
in
enter
fwait
mov
test
insb
lret
pop
sbb
jp
mov
cld
jbe
les
mov
popf
pusha
outsb
xchg
push
sbb
mov
mov
cmp
loop
inc
in
loope
outsl
fisttpll
mov
pop
cmp
iret
subl
sub
inc
mov
cmp
rolb
xchg
test
push
sbb
cmp
xor
mov
lcall
push
adc
adc
xchg
outsl
mov
lret
jnp
xorl
xor
mov
mov
mov
cmp
jb
mov
mov
fucomp
push
imul
loopne
sbb
test
cmp
lret
add
xchg
in
in
pusha
cmp
push
and
aad
and
jbe
movsb
and
cmc
mov
mov
leave
les
int3
loop
xlat
lds
cmpsb
ret
lret
add
fs
cmp
push
and
and
test
lret
add
push
dec
jl
jl
mov
sbb
arpl
ljmp
scas
outsb
xchg
sbb
mov
test
ljmp
lea
xorb
xor
aam
into
jl
xor
mov
jg
sub
sbb
repz
je
sahf
rcll
mov
xor
mov
mov
mov
in
in
arpl
cmpsb
xchg
mov
pop
xchg
mov
test
add
cmp
cmpb
mov
cmp
xchg
inc
clc
inc
test
mov
movl
mov
mov
out
addl
add
mov
mov
orb
cmpb
adc
pop
mov
shlb
repz
mov
mov
mov
mov
xchg
pop
xor
sti
push
fmuls
cmp
push
pop
mov
test
lcall
and
jmp
or
loop
pop
cltd
cmp
pushf
and
or
lds
push
and
in
arpl
sub
jmp
call
movsb
or
sahf
cltd
xchg
popa
adc
and
dec
bound
cli
adcb
sub
dec
hlt
and
bound
push
sbb
cmp
shrl
test
stos
add
mov
loop
xchg
xchg
out
test
pop
mov
test
mov
mov
ja
adc
or
stc
test
lods
push
lret
xchg
mov
ret
cmp
test
sbb
jecxz
fidivrl
cmpsb
push
xor
jnp
pop
push
push
icebp
aas
gs
popfw
mov
faddl
popa
inc
pop
test
jmp
sub
mov
in
fs
lods
sub
or
movsb
xchg
mov
cmp
dec
int3
test
or
mov
inc
sbb
push
les
ds
nop
movsl
adc
xchg
sub
in
or
sbb
or
sub
test
sbb
jle
push
pop
push
test
jns
test
xor
and
sub
leave
fistpl
fbld
adc
inc
or
jne
push
jbe
or
jge
rol
loop
fwait
inc
test
stos
xchg
icebp
les
test
arpl
jbe
push
and
cmp
sub
mov
jmp
mov
test
rol
test
jmp
loope
mov
cwtl
adc
test
repz
fwait
test
or
aad
xchg
stc
cmc
sub
cmp
inc
gs
xchg
sbb
int3
mov
sbb
mov
add
pop
test
loopne
leave
and
jecxz
sub
inc
mov
mov
sbb
or
addr16
je
test
insl
loop
testb
pop
cmp
js
inc
mov
subb
dec
xor
dec
in
sbb
and
jecxz
cmc
mov
mov
and
in
inc
cmp
test
enter
loope
scas
test
cwtl
or
test
mov
and
add
fistpl
inc
clc
push
cmc
imul
mov
pushf
dec
push
daa
push
test
fmuls
mov
mov
jne
gs
jmp
sub
xchg
push
add
mov
mov
leave
out
in
jno
in
dec
test
sbb
cmp
scas
lret
test
in
dec
mov
and
fiadds
movsb
or
into
repz
js,pn
test
fcmovne
imul
decl
jne
movsb
push
leave
or
insb
shll
arpl
jge
mov
test
icebp
lds
test
add
shrb
push
pop
test
fsubl
shrl
mov
in
sub
mov
insl
dec
mulb
fildl
imul
imul
sbb
push
pop
xchg
leave
xchg
arpl
mov
push
sub
in
pusha
in
push
mov
xchg
dec
xor
mov
dec
sub
popf
adc
test
repnz
hlt
xchg
fisubl
fmul
mov
and
lcall
mov
fwait
pop
inc
sti
xchg
pop
mov
mov
cmp
or
sbb
divb
in
or
sbb
pusha
cmp
sub
psubsw
movsl
adc
jp
sti
sbb
sarb
mov
stos
dec
les
push
or
sti
cmpsb
xchg
mov
cmpsb
mov
sbb
push
in
lcall
or
cltd
in
xchg
pop
add
mov
lret
adc
in
into
ret
push
mov
or
aas
dec
pop
push
pop
jbe
lcall
test
xchg
lret
in
pop
mov
add
and
or
adc
es
mov
gs
ret
push
mov
jl
adc
stos
pop
in
fdivl
lret
in
lret
loopne
pushf
mov
vmovaps
aaa
test
insb
sub
test
pop
enter
cli
test
and
pop
mov
cmp
lret
aas
imul
jmp
dec
adc
add
push
mov
mov
addb
add
in
icebp
add
cmp
test
call
ret
fnstenv
cmp
inc
mov
or
in
imul
push
insb
adc
in
mov
addr16
mov
test
add
leave
rclb
cmp
jns
push
sub
lret
mov
jl
arpl
cmp
push
mov
mov
out
adcl
imul
mov
jbe
add
in
mov
movsb
ljmp
mov
sbb
in
cli
or
cmpsl
mov
add
scas
hlt
sbbb
inc
cmp
push
out
movsb
notb
sbb
aam
sti
mov
jecxz
push
add
testl
repz
lcall
cmpl
cs
push
insl
mov
in
pop
mov
sub
fidivrl
push
push
dec
out
fisttpl
out
sti
js
js
js
cld
xor
enter
inc
push
lret
sbb
add
test
lods
jle
gs
gs
jge
arpl
push
push
add
dec
push
push
mov
add
fxtract
mov
mov
arpl
mov
sub
leave
stos
shll
je
push
cmpb
mulb
cmp
sbb
xchg
jae
and
test
lret
dec
ret
inc
adc
fisttpll
and
push
leave
push
mov
enter
sbb
movsl
adc
ret
adc
ret
jae
jmp
and
adc
bound
cltd
movsb
shlb
push
fs
ret
lret
or
mov
and
sbb
leave
xchg
sbb
sbb
cmpsb
xor
mov
leave
and
xor
cltd
mov
shrl
repnz
div
loope
popf
test
bound
cltd
xchg
add
test
repnz
test
push
lods
inc
sub
in
data16
xchg
test
ret
sub
adc
arpl
sbb
faddl
leave
cmpsb
sub
fisubl
call
cmp
jmp
cmpsl
cwtl
addl
mov
mov
mov
in
push
mov
xlat
cwtl
add
lods
and
sub
test
mov
adc
in
jbe
ja
or
push
sub
and
aam
arpl
in
movsb
imul
insb
push
xlat
mov
sub
jns
sahf
mov
cld
scas
sti
and
imul
dec
sub
xchg
sbb
mov
cmp
nop
sub
xchg
mov
lret
and
fucomip
mov
or
test
mov
push
fcmove
add
xor
ret
je
cltd
mov
push
jle
mov
or
test
into
test
mov
loop
in
adc
push
pusha
mov
lods
jb
mov
leave
or
sub
mov
inc
jns
insb
dec
loop
test
int3
lret
xchg
mov
sub
mov
and
sub
push
insb
test
mov
xor
testl
repz
jecxz
icebp
jmp
test
dec
dec
js
xchg
jne
sub
cmpsl
push
pop
movsb
add
std
xor
aad
test
in
repnz
cmp
mov
mov
cltd
addr16
aas
in
cmpsb
in
mov
mov
xchg
andl
popf
test
dec
xchg
mov
inc
push
mov
fildll
loope
es
xor
movsb
mov
push
in
push
sti
movsb
mov
adc
pop
mov
addl
adc
addl
repnz
test
sbbl
test
call
leave
in
or
loope
adc
mov
test
mov
sahf
test
and
xchg
and
mov
je
js
test
cld
ficomps
xor
ret
or
and
pop
test
sbb
test
cmp
es
inc
jno
idivl
and
push
mov
popl
out
mov
adc
aad
ret
test
jmp
sbb
clc
pop
jno
loopne
test
add
pop
rclb
xlat
out
sub
sub
adc
jne
jo
xchg
cmpsl
scas
cmpsb
mov
sahf
inc
pop
mov
popa
pop
out
jecxz
arpl
pushf
mov
test
jmp
stc
or
xchg
in
fwait
mov
inc
adc
xlat
and
cltd
out
in
add
xor
in
js
test
mov
mov
xchg
arpl
adc
in
inc
xor
mov
cmpsl
sub
and
jle
xchg
test
cltd
mov
leave
repnz
imul
inc
mov
sbb
ja
mov
insl
lea
frstor
mov
addl
push
in
jmp
daa
mov
mov
popf
pop
test
mov
out
test
and
adc
imul
aam
aaa
jb
subb
adc
mov
adc
mov
pop
xor
sbb
and
arpl
mov
cltd
ret
sub
rolb
repz
imul
movsl
dec
xchg
xor
pop
push
mov
bound
icebp
test
add
xchg
jo
pop
andl
lcall
xchg
mov
shl
xchg
movsl
and
bound
test
mov
ja
xchg
fstpl
lods
pop
push
cmpsb
xchg
and
cmc
sbb
cmp
decl
pmulhw
xor
fsubs
aas
sub
dec
insb
push
or
testl
bound
out
sub
das
test
pusha
mov
jecxz
adc
adc
mov
mov
push
mov
popa
mov
xchg
rolb
xor
mov
mov
addb
jno
test
stos
and
shr
imul
and
insl
test
lret
sub
pusha
cli
cmpsl
movsb
aad
push
fdiv
mov
test
pop
inc
dec
dec
push
add
fimull
cmp
pop
aas
dec
sti
add
sub
and
inc
ret
push
jne
cmc
insl
enter
loopne
test
push
sub
or
pushf
lret
mov
test
jbe
dec
popf
adc
leave
xor
fidivrs
sub
sub
mov
xchg
int
lcall
mov
inc
dec
rcll
dec
jb
sub
push
jns
in
pop
jmp
mov
xchg
rcl
push
pop
push
xor
test
inc
aaa
jecxz
or
cmp
outsb
lds
repnz
and
or
insl
cmp
lock
push
mov
popa
cwtl
loope
sbb
stos
mov
icebp
mov
popf
or
gs
cmp
mov
pop
adc
stc
ficompl
loop
jecxz
and
mov
js
push
mov
mov
mov
pusha
test
cmc
inc
loopne
jle
movsb
sub
mov
xchg
insb
test
cmpl
xor
test
jae
dec
dec
out
test
test
ret
adc
push
cmp
in
mov
sub
dec
leave
mov
add
test
pop
test
pushf
int
ret
test
scas
jbe
push
push
lds
sub
sahf
scas
sti
sbb
mov
int
push
inc
or
notl
or
sbb
shrb
mov
mov
lcall
ljmp
cwtl
jbe
push
pop
sub
arpl
xchg
sbb
mov
arpl
push
mov
xor
push
bound
adc
es
movsl
jle
mov
xchg
pop
mov
pushf
cmpsl
cmpsb
push
mov
mov
pop
ja
std
cwtl
ret
mov
mov
pusha
add
mov
in
nop
mov
sub
xor
mov
test
test
cmp
cmpsl
mov
xchg
adc
enter
xor
inc
outsb
and
in
out
in
notb
xor
push
jbe
sub
lret
outsb
push
pusha
xchg
mov
adc
add
and
repz
sti
loop
lock
mov
mov
inc
mov
cmpsl
enter
inc
mov
lcall
daa
xor
lds
fsubl
shlb
es
jnp
cmpsl
cmp
hlt
imul
std
mov
adc
prefetch
adc
mov
cld
mov
mov
or
mov
add
xchg
or
fidivl
jae
pushf
aam
in
xor
insb
xor
jb
neg
insb
icebp
push
test
add
mov
ret
mov
inc
pop
mov
test
dec
pop
add
push
es
test
mov
rolb
repnz
push
pop
sbb
clc
xor
out
jg
addb
test
fsubl
pop
cmp
adc
pop
out
inc
push
enter
clc
pop
add
sbb
in
or
outsl
scas
push
cmp
cmp
aas
add
mov
sti
dec
lret
sub
test
bound
test
ljmp
add
movb
push
xor
add
add
outsl
addr16
cmp
lods
push
mov
rorb
test
jns
test
xor
fwait
pop
sti
or
fcoml
jo
xor
imul
fcoms
push
loop
mov
sarl
adc
lods
xor
and
ret
lds
cld
stos
xor
inc
add
dec
pusha
stos
lods
int3
mov
push
dec
test
mov
or
mov
movsb
mov
xchg
jp
cmp
es
daa
aaa
orl
arpl
or
test
ljmp
out
mov
ficoms
gs
out
bound
sub
hlt
and
xchg
stc
jnp
xchg
bound
and
mov
adc
leave
in
xchg
cmc
je
push
icebp
mov
movsb
mov
add
mov
nop
xchg
mov
dec
les
ret
movsl
addb
pop
ja
movl
cmp
cmpsl
pushf
mov
adc
push
aam
not
lcall
lods
cmpsl
xorb
pusha
fidivl
movsl
jp
iret
xlat
ret
add
test
int3
jp
push
cmp
pop
in
mov
test
push
packssdw
or
int3
push
ss
or
mov
lods
mov
adc
xlat
add
movsb
sbb
xlat
xchg
xor
imulb
adc
sbb
pop
xchg
lods
loopne
ss
subl
inc
dec
fstpl
das
jg
stos
push
mov
adc
ss
jnp
pop
addl
popf
ret
les
cld
rclb
mov
or
fwait
add
enter
xchg
sti
add
mov
xor
int3
inc
sbb
sar
lcall
movsl
aam
adc
mov
movsb
add
mov
push
pop
out
xor
xor
lea
mov
mov
mov
mov
addl
daa
rcll
adc
and
adc
cmovb
mov
sbb
daa
mov
xchg
mov
mov
inc
test
mov
add
cmc
outsl
adc
ljmp
jge
push
cli
xchg
mov
inc
jmp
push
mov
aad
xchg
in
pop
cmpsl
dec
sub
mov
fwait
mov
sbb
or
add
test
insl
push
lock
es
in
xor
leave
push
cmpsb
sbb
in
jno
sbb
cmp
lahf
loope
xchg
mov
or
mov
mov
lock
adc
pop
mov
push
pop
ljmp
movsb
stc
in
xlat
xor
popa
fldl
xchg
mov
out
std
push
mov
popa
sub
jno
iret
sbb
popf
and
out
into
mov
mov
jecxz
loop
jp
push
jns
push
xchg
mov
dec
mov
lahf
xchg
gs
cmp
insl
jl
rolb
dec
les
inc
ja
ss
ljmp
addb
test
inc
dec
test
repnz
add
xor
push
ror
cmp
dec
mov
push
mov
cli
stos
jb
cmp
aas
pop
adc
pusha
and
mov
insl
test
sbb
fs
mov
in
push
mov
sbb
mov
lret
dec
pop
cmpsl
jno
dec
test
ljmp
mov
test
and
scas
shlb
pushf
jne
add
mov
jns
lods
test
adc
push
pop
add
sub
pusha
int3
shlb
add
test
test
rcrb
clc
mov
mov
stos
lahf
or
mov
mov
bound
push
inc
xor
mov
lods
jle
movhps
ret
bound
imul
scas
cli
pop
leave
movsb
lcall
dec
movsb
adc
imul
ljmp
enter
jbe
shr
mov
aaa
test
lcall
test
cli
ret
hlt
int3
mov
test
adc
fldenv
push
mov
and
rcrb
push
ss
and
push
lcall
lods
mov
mov
outsb
and
les
mov
pop
cmp
and
test
adc
std
jae
sahf
icebp
in
xor
stos
push
gs
cld
test
sub
dec
test
lds
jmp
and
pop
shll
inc
cmpsb
dec
push
inc
pop
flds
popa
push
pop
mov
mov
push
cmpsb
jmp
test
sub
aaa
and
cltd
ret
sahf
push
dec
cld
out
movsb
jo
pop
push
sbb
push
cmp
test
sbb
jno
outsl
test
insl
mov
add
jbe
test
jno
fs
mov
mov
stos
into
loope
mov
push
xor
xor
insl
movsl
les
pop
ret
or
pop
sbb
inc
aad
push
dec
xor
xor
test
cmpsl
push
and
ficomps
adc
xchg
in
push
inc
push
out
adc
push
dec
cmp
pavgb
je
mov
mov
mov
adc
mov
or
test
ds
jno
mov
test
std
in
icebp
cli
lret
add
es
adc
nop
and
mov
cmp
pop
test
scas
push
aad
in
ds
iret
push
movsl
dec
adc
add
mov
push
mov
cmp
repz
dec
mov
cmp
cmp
or
push
dec
mov
cmova
xor
adc
cli
inc
adc
sub
xorl
lods
cmpsl
inc
and
dec
xor
dec
inc
ret
movsb
and
test
in
addl
mov
dec
call
jecxz
pushfw
inc
inc
bound
orl
mov
out
addl
cmp
lea
mov
cmpl
js
adc
loopne
fimull
cmp
in
mov
cmp
mov
xorb
cmp
movsb
adc
xorl
andb
jle
addb
sbbb
mov
or
cmp
sub
hlt
adc
mov
imul
roll
xor
mov
xor
jae
jnp
lods
rorb
sub
movsl
push
lods
mov
scas
cmp
dec
subl
movsb
nop
outsl
movsb
pushf
mov
bnd
sarl
pop
je
xchg
cld
pusha
jle
jge
scas
mov
movsb
add
mov
lret
pop
xor
into
xor
and
cmp
jo
sbb
stos
insb
addl
inc
dec
mov
pop
cmp
jb
ljmp
addb
or
sti
daa
xor
xorl
lahf
xor
push
inc
or
or
cmp
lret
mov
movsbl
pop
stos
sub
sbbl
call
or
jbe
add
inc
mov
sti
subb
and
or
scas
test
push
rol
xlat
add
push
adcb
iret
sbb
adc
or
xor
aaa
mov
repnz
push
orl
stos
adc
in
repz
roll
mov
stos
mov
mov
sbbl
ja
orb
lcall
les
aas
movsl
push
adc
and
fs
movsl
sub
or
iret
mov
mov
jge
add
add
orl
pop
ds
sub
inc
inc
add
mov
or
jns
call
in
add
aam
lds
rolb
outsb
mov
or
lds
ljmp
jnp
mov
mov
stos
cmp
aad
int
cmp
test
setg
push
jo
dec
and
repnz
stos
adcl
icebp
int3
movsb
add
jno
jecxz
mov
xor
and
sbb
mov
mov
pop
aam
ret
cmp
xlat
fidivrs
aaa
dec
mov
mov
shlb
mov
fsts
orb
pop
cmp
dec
ret
mov
mov
adc
aaa
sarb
rolb
into
aad
sbbb
jae
xchg
lods
mov
movsl
test
mov
or
fmull
mov
sbb
and
cmp
mov
ds
repnz
mov
js
out
lcall
xchg
fdivs
cmpsb
fs
out
and
rorb
xchg
iret
in
and
or
mov
mov
or
mov
lock
and
cmpl
push
popf
les
cmp
lret
stos
and
mov
es
dec
fdivrs
xchg
mov
mov
aam
mov
stos
mov
cld
xor
jp
lods
adc
xchg
dec
scas
ror
aad
add
ljmp
adc
lods
lcall
cmp
xchg
jmp
pop
dec
ds
stos
stos
mov
aas
cli
mov
mov
xchg
or
and
mov
cs
scas
dec
add
test
mov
push
test
xor
in
andb
xor
and
repnz
je
je
outsb
std
ja
subl
mov
mov
lret
mov
push
std
fisubrl
pop
mov
mov
aas
cmp
repnz
stos
jg
andb
aas
and
fninit
mov
fisttpl
dec
je
mov
test
xchg
mov
jnp
mov
dec
aas
add
das
js
ret
fs
or
fiaddl
out
cli
mov
mov
and
add
mov
nop
maxps
add
sti
dec
lahf
mov
push
jmp
cmp
add
mov
push
pmulhuw
xor
or
or
and
clc
loopne
cmp
shrl
inc
and
dec
arpl
mov
xchg
xchg
or
mov
loope
xor
mov
xlat
push
jno
dec
ret
call
push
pusha
ret
cmpsl
ljmp
or
ja
xlat
je
fs
xorl
mov
test
idivb
jne
xchg
roll
fxam
mov
lret
mov
test
aaa
ss
sbb
jl
mov
xchg
jl
lea
jmp
lods
mov
cmp
dec
popa
cld
or
add
mulb
lret
and
insb
int3
mov
test
ljmp
test
cli
cmp
enter
or
repnz
clc
sbb
stos
test
or
dec
jge
movsb
ret
mov
cmpsl
sarl
xor
pop
dec
add
ljmp
imul
jo
cmp
aad
dec
test
pop
in
mov
stos
xlat
xchg
mov
test
cs
sbb
popf
sub
dec
scas
inc
test
inc
stc
and
test
jle
pushf
or
adc
lahf
lcall
cmpb
das
pop
lahf
mov
adc
adc
ja
sub
xchg
pop
test
fwait
inc
push
or
push
aas
xchg
aam
leave
enter
fstpt
or
xchg
cmc
mov
test
cmp
push
xlat
test
sbb
pusha
mov
push
in
sub
ja
mov
jmp
and
inc
lcall
ja
in
lret
cli
pusha
xor
test
xchg
imul
pop
aad
js
test
call
int3
cli
fstps
ja
scas
loop
test
mov
cmp
sub
and
test
outsb
subb
incb
enter
jns
mov
mov
inc
in
mov
sbb
mov
mov
mov
call
filds
and
decb
test
imul
sub
test
cmp
cltd
jl
adc
add
jmp
sahf
les
xlat
adc
test
cli
dec
jge
lahf
sti
and
push
cltd
or
mov
pminsw
pop
test
loope
dec
or
mov
dec
adc
cmp
addr16
mov
iret
xor
push
pop
shr
bound
or
lret
test
call
lret
stos
sbb
and
icebp
bound
fidivrl
arpl
clc
cmpsb
mov
out
ja
push
xchg
in
xchg
mov
mov
test
or
inc
add
xchg
lock
push
test
and
cmpsl
lcall
sbb
sub
inc
cmp
ja
cmpsb
pop
movsb
or
sbb
sbb
movsb
pop
addr16
cld
push
xchg
cmp
and
cmc
cmc
xor
arpl
out
lcall
pushf
dec
mov
aas
or
sbb
mov
imul
lock
out
mov
test
sub
sbb
in
lcall
scas
leave
sbb
pop
stc
ja
aaa
repnz
fists
inc
dec
out
imul
test
rcll
push
test
push
or
loope
addb
fwait
xchg
subb
push
jmp
imul
jecxz
test
adcl
mov
or
arpl
xchg
or
sbb
cmpsb
pop
aas
subb
push
dec
push
push
movsl
rolb
xchg
movsb
imul
adc
cs
dec
ja
test
or
pop
push
enter
cltd
arpl
push
add
mov
mull
aam
jmp
std
inc
iret
mov
jae
test
cwtl
in
imul
jnp
pop
out
lahf
xor
daa
xor
mov
test
int3
mov
dec
add
scas
sbb
cmpsb
pop
dec
mov
sbb
vpunpckhwd
loopne
xor
sbb
test
cmp
cwtl
and
mov
test
dec
lahf
loopne
dec
in
mov
loop
mov
call
in
leave
test
pushf
pusha
icebp
lret
loop
dec
cs
lods
cmpb
in
jmp
rolb
fmuls
scas
cld
js
mov
mov
les
test
inc
sub
dec
mov
dec
sbb
aam
xchg
ljmp
sahf
or
push
lret
stc
mov
test
xor
int3
dec
lds
in
out
and
je
hlt
add
clc
shrb
xchg
dec
xchg
push
push
sbb
mov
jmp
out
ret
cmp
dec
mov
pusha
sub
cltd
daa
mov
push
xchg
xchg
movsb
movsl
jecxz
test
ljmp
cmp
addl
and
cmovnp
xor
sbb
imul
jmp
sub
addl
dec
xor
imul
lahf
sbb
adc
test
stc
push
push
test
decb
ret
out
andl
testb
xchg
inc
test
faddp
paddsw
mov
cli
lcall
ja
out
test
in
imul
int
xor
int3
ss
into
test
daa
loop
out
jp
in
ja
mov
inc
test
mov
popa
xor
sub
jnp
in
mov
xchg
jmp
jbe
lret
xor
test
andb
sub
jecxz
dec
lret
adc
stos
pusha
ja
cli
cmp
test
dec
mov
sub
enter
xor
testb
leave
loop
popa
jne
mov
inc
lcall
in
mov
xchg
sub
dec
jne
mov
mov
test
sti
call
dec
in
push
or
lods
mov
pop
jmp
mov
enter
adc
int3
add
xor
test
mov
lret
popa
push
add
mov
sbb
mov
jl
and
mov
idiv
arpl
loop
and
int3
add
sub
test
sub
inc
in
cld
daa
insb
mov
adc
sbb
enter
std
sbb
movsb
cltd
pop
sub
leave
stc
mov
ljmp
int3
cld
test
leave
sbb
cmp
pushf
fldenv
mov
mov
fadd
ds
cli
in
daa
arpl
inc
dec
and
in
sub
dec
leave
sbb
sub
outsb
sub
inc
dec
mov
inc
mov
mov
ficomps
dec
push
cmp
mov
pop
mov
mov
jl
stc
mov
inc
in
sub
dec
jp
cmp
mov
adc
and
fildl
or
push
dec
pushf
stos
int
sub
cmc
cld
xor
enter
jge
int3
mov
pop
pop
pop
xchg
ret
pop
mov
sub
lea
jmp
sub
add
inc
jp
test
mov
xchg
jecxz
fildl
adc
mov
cmc
sbb
inc
mov
dec
ljmp
cmp
push
pop
xor
cmp
or
int3
ficomps
aaa
test
inc
mov
jne
leave
lret
test
ja
cmp
loopne
or
mov
sub
adc
xchg
arpl
ja
push
pusha
mov
cli
popa
out
repnz
sahf
test
sbb
sbb
push
jmp
repz
daa
jecxz
test
sahf
roll
xor
ja
hlt
inc
xchg
nop
mov
test
adc
test
out
pop
mov
loopne
incb
enter
dec
xor
push
fildl
adc
cld
sub
and
dec
cmp
imul
addl
incb
mov
sbb
roll
jmp
insb
adc
sbb
in
and
pushf
aad
andb
cmp
jl
loop
or
repnz
mov
lods
jecxz
idiv
ja
dec
pop
icebp
fwait
mov
je
les
pop
or
test
cld
jns
pop
sub
mov
les
int3
leave
push
sub
cli
ret
loop
out
adc
and
test
scas
cmp
test
push
jbe
lcall
add
fimuls
jne
daa
lret
xor
lods
mov
jbe
mov
push
push
jmp
test
clc
into
stos
pusha
loope
loop
insb
ret
ror
mov
mov
cwtl
fs
sbb
mov
test
jae
lods
push
pop
pop
mov
mov
dec
in
addr16
mov
mov
dec
and
pusha
js
push
and
jmp
xchg
mov
mov
jae
mov
out
and
bound
imul
fimull
test
stos
test
push
in
mov
xchg
push
test
dec
mov
pushf
test
jmp
movl
or
xlat
push
push
int3
cltd
sbb
add
cmpsl
push
ret
mov
test
sbb
mov
in
cmp
sub
xchg
shlb
and
fidivrl
mov
das
inc
cld
pop
or
cs
pushf
test
hlt
iret
into
test
and
sahf
adc
dec
scas
add
test
ja
jl
or
test
insl
popf
push
das
test
popa
and
pop
test
or
xchg
mov
inc
fisttpl
dec
int3
sub
clc
aam
int
mov
sarb
cltd
mov
test
roll
add
movsl
bound
clc
nop
cli
int3
mov
imul
cmp
out
mov
test
mov
adc
push
in
jecxz
cmpsb
insb
dec
jge
pop
mov
fiaddl
cmc
dec
mov
cli
mov
mov
push
stos
xchg
mov
std
insb
mov
test
insl
mov
xchg
bound
or
addr16
out
xchg
test
sub
outsb
test
and
mov
ljmp
xchg
nop
cmpl
comiss
sahf
jo
and
mov
mov
and
test
jns
jl
enter
test
xchg
push
movsl
out
loop
imul
je
lods
push
test
call
push
imul
imul
sub
test
pop
or
xchg
filds
aaa
xor
out
test
fwait
jecxz
dec
sbb
test
mov
in
test
addr16
sbb
addr16
test
and
or
push
into
ljmp
call
scas
sti
mov
lcall
in
test
cli
push
shrl
addb
imul
xlat
ljmp
adc
lret
mov
push
lcall
test
cwtl
shlb
jns
sub
int3
scas
xchg
cmc
inc
test
test
in
loope
dec
gs
flds
adc
mov
cli
cmp
lock
dec
or
ljmp
test
push
shll
test
fisubrl
outsb
es
test
enter
dec
out
testb
lock
xchg
call
pop
pop
divb
jmp
rolb
sub
les
mov
loop
jp
pusha
push
cmp
imul
mov
int
xchg
jbe
clc
lods
dec
pushl
mov
test
bound
jecxz
pop
test
adc
or
dec
mov
jo
test
push
and
insb
repnz
test
mov
sub
aam
xchg
fsubrs
dec
lcall
jbe
pop
or
test
xchg
out
xchg
mul
jecxz
jl
sub
lea
cld
and
imul
mov
adc
insb
inc
mov
fmull
inc
into
or
sbb
cwtl
in
lods
lahf
js
arpl
and
xchg
shl
dec
xchg
int
pusha
adc
mov
pop
loopne
fidivrs
test
shlb
ja
dec
xor
sahf
jl
aam
out
mov
test
test
aam
mov
enter
jg
int
out
xchg
test
inc
cli
andb
and
es
sarl
ja
adc
mov
iret
xchg
pop
call
add
clc
mov
add
adc
into
test
test
inc
push
dec
int
addb
lods
dec
test
and
and
lret
xor
std
in
loop
inc
push
pop
in
push
push
daa
and
add
fldl
jne
and
scas
repz
test
enter
cwtl
ss
test
repnz
mov
test
or
add
dec
mov
xchg
js
test
int3
jg
and
ljmp
lock
clc
test
mov
je
test
push
mov
movsb
enter
in
scas
imul
inc
ja
arpl
mov
xadd
push
shl
mov
adc
xchg
mov
sub
popf
test
inc
sahf
and
xchg
cmp
rolb
lcall
test
pop
sti
test
and
outsl
cmpsl
stc
cmp
jmp
adc
stos
adc
xchg
or
or
push
jecxz
or
in
push
mov
sbb
jmp
and
fbstp
push
cmp
push
inc
mov
push
cmp
mov
test
adc
push
sbb
aad
sub
jnp
test
std
bnd
jge
or
sbb
cmp
popf
bound
lcall
cmp
xchg
sbb
jl
mov
cli
xor
sti
test
mov
hlt
and
pop
sub
inc
mov
test
ror
pushf
test
stc
repz
ja
xchg
adc
fists
mov
les
sbb
orl
sbb
movsl
dec
testb
pop
out
into
lea
mov
or
push
jmp
jl
mov
rcll
daa
push
test
loop
dec
nop
push
in
daa
mov
inc
jmp
xchg
sub
cmpsl
jne
sbb
inc
stos
push
js
mov
or
push
fisttpl
sub
push
push
mov
or
stos
roll
or
sbb
mov
lods
lods
stos
jmp
movsb
or
int3
bnd
cmp
enter
jge
push
and
xchg
movsb
or
idivl
mov
lods
push
jge
out
mov
in
cmc
push
xchg
inc
test
sbb
xchg
mov
or
pop
leave
push
push
ljmp
lahf
ss
dec
jl
and
or
mov
push
cmp
jl
xchg
and
test
sub
inc
int3
pop
pop
sub
sbb
sbb
sbb
stos
dec
out
js
mov
mov
push
add
mulb
bound
out
mov
inc
ja
pop
test
sub
sub
mov
imul
cli
hlt
xor
mov
push
dec
test
adc
clc
mov
dec
movsl
cmpsb
push
cmp
in
lea
in
mov
dec
aaa
ret
repz
aas
test
insl
imul
mov
xchg
movsb
jno
out
pop
pushf
insl
mov
ror
mov
imul
dec
mov
test
sahf
xchg
test
sub
gs
test
pushf
sub
test
sbb
lahf
adc
into
xlat
mov
imul
jp
scas
popa
repz
nop
movsb
out
in
enter
std
jmp
lahf
aas
jbe
push
bound
jnp
test
mov
loopne
mov
jbe
lret
push
roll
test
mov
pop
test
fsubp
adc
gs
test
xlat
dec
dec
test
sbb
movsb
pop
jmp
inc
mov
insl
sub
mov
mov
or
cmp
ret
xorl
lret
push
inc
jecxz
daa
imul
mov
test
lds
push
jecxz
and
movsb
lcall
in
cmp
cmpl
jmp
sub
xchg
inc
and
clc
cmp
pop
jbe
xchg
leave
imul
pop
test
popf
test
imul
test
ja
repz
jmp
pusha
lods
lcall
imul
push
dec
or
mov
push
cmp
test
lds
dec
arpl
lea
sldt
test
test
jge
test
int3
cmp
and
mov
out
in
dec
sar
lret
jle
insl
dec
push
daa
enter
mov
mov
adc
into
xchg
lret
test
inc
push
sbb
lea
inc
bnd
sahf
mov
lret
mov
jnp
int3
bound
ret
ljmp
or
inc
inc
dec
mov
push
sbb
sti
lds
mov
pop
jle
push
add
sbb
jmp
pop
test
stc
push
fbld
xor
push
push
mov
jge
aaa
imulb
bswap
add
mov
add
xlat
and
stos
ret
test
inc
das
dec
mov
mov
ds
je
movsl
and
fdivrs
ror
aas
pop
xorb
push
addr16
and
lods
push
sub
jle,pn
arpl
dec
jb
mov
pop
add
push
cltd
call
sbb
mov
mov
loop
ret
sub
or
out
ljmp
cmc
inc
push
cmp
test
loop
fs
movsb
dec
xchg
es
aas
xlat
enter
les
lods
mov
pushf
sbb
cmp
ficoml
or
mov
lock
lret
mov
ja
test
fstl
jg
sbb
dec
mov
test
out
testb
in
loopne
xchg
jl
mov
jecxz
notl
lahf
mov
ss
out
mov
adc
rorl
int
sbb
addr16
dec
shlb
jo
mov
cmp
jmp
cltd
std
add
and
test
mov
add
mov
and
fs
cwtl
add
mov
imul
dec
in
test
mov
loope
add
sub
sbb
xor
mov
test
push
add
xlat
and
call
rorl
movsl
les
inc
inc
sub
test
iret
pop
lret
cmpsb
test
lods
sbb
ja
stos
fs
test
adc
and
iret
pop
sub
mov
sbb
ja
jecxz
jne
push
shll
jmp
cmp
adc
ja
pop
scas
xchg
aam
jecxz
cmp
inc
bound
sti
test
notb
les
adc
push
test
push
pop
int3
add
mov
test
lcall
sbb
sub
das
sub
xchg
lret
pushf
divb
aas
inc
sbb
pushf
dec
or
mov
addr16
test
in
add
pop
fwait
test
mov
jne
int
imul
int3
cwtl
test
pushf
fs
and
div
test
cmp
test
adc
and
out
mov
test
movsb
cmpsb
mov
add
loop
mov
test
pop
hlt
adc
rcrb
andb
jecxz
lock
add
dec
cmp
addr16
mov
inc
test
ret
xchg
jl
mov
test
imul
mov
ret
dec
shr
mov
cld
bound
test
loopne
push
cmpsb
les
test
aaa
movsb
pop
dec
sti
sub
fwait
arpl
jmp
mov
and
iret
cmc
es
int
or
dec
xchg
lcall
cmp
xchg
jno
test
inc
xchg
push
dec
and
add
mov
mov
cmpsb
popa
pop
insl
test
mov
rorl
daa
loopne
xor
cmp
xlat
ret
les
and
cmpsb
lcall
xor
mov
adc
inc
sub
jp
push
mov
dec
scas
notb
mov
in
sub
mov
std
test
insl
mov
test
dec
mov
cld
ret
out
test
iret
jns
cmp
dec
cmp
mov
mov
test
adc
sub
adc
mov
fwait
xchg
test
in
mov
jecxz
jo
fs
call
mov
sti
pop
enter
dec
jmp
leave
aad
jge
cld
out
test
pop
mov
inc
fimull
outsl
into
rolb
repnz
out
ja
movsb
add
jl
lea
jo
aaa
in
xchg
adc
lds
test
or
inc
stc
test
mov
arpl
loope
pop
mov
push
lock
test
jle
push
cmp
sub
push
test
sub
orb
enter
push
mov
inc
adc
loop
mov
aas
push
pop
mov
dec
inc
jo
mov
push
movsb
sub
mov
xlat
test
rorl
pop
pop
test
mov
test
into
jne
test
leave
inc
dec
mov
loope
push
mov
adc
popa
sbb
add
stos
out
call
ret
sbb
xchg
test
push
sbb
enter
test
shl
add
xchg
sbb
push
arpl
jle
pop
pop
sahf
push
mov
bound
mov
sbbb
clc
dec
test
xchg
imul
sbb
pusha
mov
mov
ss
test
push
pop
int3
data16
and
enter
test
test
imul
cmp
push
jmp
mov
in
fsubl
int3
aad
jo
pusha
pop
mov
jp
shlb
or
ljmp
test
sub
cld
shll
int3
mov
cmpsb
adc
pop
xor
pop
add
pop
call
and
stc
ret
jge
push
addb
cmc
filds
test
sbb
outsb
les
lds
pop
stos
xor
addr16
mov
imul
and
test
mov
ds
add
mov
sub
test
xchg
aas
insb
inc
in
ret
test
imulb
and
test
jae
movsb
sti
shrl
scas
xor
cmpsb
dec
out
test
adc
hlt
jne
pop
lahf
test
jl
add
pop
and
imul
test
test
push
ja
mull
xchg
test
dec
je
xor
flds
cmp
leave
cmc
sub
push
nop
test
test
pop
mov
roll
iret
mov
das
repnz
jle
sub
dec
test
jecxz
lahf
and
leave
pop
pusha
xor
push
push
xchg
movl
sub
xor
test
fdecstp
aas
out
mov
pop
test
nop
out
mov
es
fs
jp
push
push
adc
push
ljmp
call
filds
or
push
test
push
dec
xchg
pop
scas
adc
or
leave
test
negl
mov
sbb
mov
not
xchg
mov
mov
adc
rcll
push
cmp
stos
dec
and
adc
loop
mov
lret
jecxz
jae
pop
sbb
shrl
mov
dec
mov
arpl
mov
pop
arpl
xlat
aad
xchg
ffreep
lret
sub
pop
push
mov
pop
int
mov
mov
test
dec
loope
sbb
and
dec
mov
mov
test
add
les
jl
jnp
xchg
scas
fsubrs
pusha
xor
sbb
test
nop
in
scas
jp
test
add
mov
gs
dec
out
jge
test
repnz
loope
test
jmp
jg
test
pop
jmp
shlb
clc
js
test
add
cmp
ss
dec
arpl
test
push
or
mov
mov
add
pop
fsubr
std
jecxz
and
fisttpl
adc
cmp
mov
aaa
and
mov
ret
in
popf
jmp
mov
lds
rorl
pop
cmp
in
mov
ljmp
fistps
push
pop
xor
out
pop
mov
scas
movsl
mov
lods
dec
faddl
int3
cwtl
fwait
bound
and
xor
jmp
js
test
test
xchg
mov
outsb
add
test
ljmp
dec
xor
mov
loopne
fstl
mov
inc
pop
xchg
bound
test
xchg
insb
add
lock
leave
sub
pop
test
fcmovb
cmpsb
mov
lcall
test
mov
sub
ljmp
jne
or
inc
pushf
mov
js
aad
test
ja
push
pop
data16
fadd
jg
ficoms
inc
cmpl
dec
or
rcrb
std
inc
xchg
loop
jge
xchg
or
movsb
test
enter
test
test
int3
xchg
test
leave
jmp
inc
je
test
imul
inc
mov
add
pop
std
mov
in
mov
or
imul
rolb
iret
xchg
test
int
lahf
fisttps
ds
push
push
out
nop
jg
xor
or
add
pop
lret
aad
test
into
sbb
out
test
jne
xchg
test
std
jb
sub
insl
mov
repz
pop
mov
test
test
mov
outsl
bound
or
dec
data16
ret
testl
cmp
testb
add
test
aad
test
out
xor
lea
repnz
sbb
mov
in
jg
loop
loopne
test
xchg
dec
cmp
inc
ljmp
shl
daa
pop
pmulhuw
push
sbb
mov
xchg
fsubl
inc
jge
push
adc
in
mov
neg
adc
inc
cmp
out
xchg
arpl
xor
mov
in
or
push
icebp
mov
outsl
inc
adc
mov
xchg
dec
sub
out
test
in
in
push
cs
orl
mov
aam
xchg
js
cld
popa
ror
mov
repz
push
in
fstpl
test
pop
jle
pusha
adc
test
into
and
je
inc
mov
movsl
pop
arpl
xor
pop
jbe
jge
decl
ja
insl
les
mov
push
fstpl
jecxz
sub
xchg
fwait
sti
js,pt
bound
aad
testb
sub
mov
mov
mov
int
loop
sbb
and
out
arpl
inc
ljmp
cmp
test
xchg
imul
cmp
test
xchg
xchg
xchg
pushf
ljmp
test
mov
inc
mov
jns
push
cmc
sbb
aam
inc
xchg
mov
fsubs
dec
decb
jp
dec
cmp
test
rorl
mov
mov
xchg
test
test
sbb
sub
dec
and
mov
or
test
repnz
data16
imul
sahf
cltd
push
fildl
jo
movb
lahf
lret
test
cmc
test
pusha
sub
or
faddl
xor
sti
mov
test
xchg
xchg
lahf
pop
xor
cmp
movsl
cmp
nop
sbb
pop
pop
pop
repnz
dec
push
daa
adc
jmp
and
shll
lret
ljmp
movsb
cmp
bnd
or
arpl
or
cmc
sub
adc
arpl
sub
ret
mov
fwait
test
xchg
dec
sbb
loopne
adc
push
xor
test
xchg
jno
xchg
inc
imul
js
addr16
sahf
dec
test
cmpsb
xor
outsl
mov
inc
jns
rorb
ret
dec
loop
mov
in
cmp
inc
scas
inc
test
inc
cmp
movsl
mov
in
outsb
inc
out
test
lret
add
arpl
mov
mov
test
repz
mov
iret
jecxz
and
test
sub
or
lock
jne
jg
inc
or
jae
xchg
sub
outsb
inc
test
pusha
mov
mov
fidivrs
test
movsb
in
sbb
xorl
cmp
arpl
and
dec
in
test
cmpsl
or
xor
shl
test
int3
pop
bound
mov
fiadds
sti
movsl
loop
jae
cli
and
sub
jmp
push
mov
filds
jne
adc
insl
sub
icebp
inc
dec
outsl
cltd
test
test
inc
test
mov
cwtl
les
pushf
ficompl
jno
mov
push
mov
dec
test
mov
pop
sub
jbe
xchg
fcmovbe
jmp
push
arpl
xlat
arpl
mov
mov
loop
test
stos
pop
mov
cmpb
mov
pop
inc
inc
test
fwait
divl
es
cmp
aas
test
in
push
jp
and
cmp
dec
sbb
and
movsb
cmc
dec
jae
push
mov
jmp
popf
inc
and
movb
loopne
test
pop
dec
mov
outsb
ljmp
and
insl
mov
inc
pusha
test
in
sub
test
in
push
ljmp
in
stos
test
das
negl
pop
mov
jg
cld
mov
arpl
pusha
lahf
mov
mov
pushf
lret
cltd
dec
pop
loop
repz
loopne
push
or
in
dec
xchg
pop
iret
inc
test
pusha
out
rorb
sbb
fistpll
sub
mov
test
dec
dec
jnp
roll
test
xchg
pop
mov
xchg
inc
or
dec
jp
in
mov
add
cmp
popf
lods
xor
push
out
in
adc
aas
imul
adc
cmp
jmp
movsl
test
xor
test
pop
out
aaa
xorb
test
mov
lcall
loopne
push
test
hlt
jge
mov
inc
in
cmpl
inc
test
addb
jmp
inc
test
pop
scas
or
xor
cld
jecxz
or
pop
xor
mov
test
push
icebp
sbb
mov
and
and
mov
test
mov
filds
mov
sub
and
mov
and
arpl
sarb
imul
sbb
ret
test
test
cmp
sahf
pop
test
push
adc
push
and
test
cmpsl
fisubs
cmpl
inc
ja
insl
sbb
xchg
mov
mov
sbb
call
fcompl
imul
decb
test
lahf
push
outsb
leave
push
sub
sahf
aad
pop
mov
nop
imul
ja
test
icebp
xchg
popa
sbb
pop
or
sub
inc
dec
push
mov
popf
pushf
mov
adc
out
testb
mov
ljmp
mov
mov
movsb
xchg
jmp
cmp
lahf
sub
jne
movsb
testb
mov
fsubp
jg
scas
lods
sbb
test
jb
idiv
sub
jmp
fimull
mov
push
jp
ja
and
repz
mov
mov
mov
ds
jns
test
jo
sub
add
or
or
fcoml
cli
mov
inc
sbb
cmp
out
sbb
push
lret
push
test
mov
nop
movsb
lods
in
movsl
mov
std
dec
mov
stos
dec
aas
sti
ljmp
inc
add
mov
in
cmp
mov
addr16
and
test
aad
sbb
ds
push
pushf
adc
add
in
in
fistpll
mov
cs
dec
pop
arpl
test
mov
or
xor
or
test
mov
cmp
in
scas
pop
test
add
jae
outsb
sahf
test
push
ljmp
sub
psrad
shll
jns
jmp
insl
mov
aam
push
or
cmp
pop
test
adc
jmp
repnz
sub
loope
test
jmp
addb
aad
pop
ror
test
in
les
addr16
push
pop
pushf
mov
insb
out
test
xchg
bnd
mov
lods
jmp
dec
ljmp
mov
mov
lcall
xchg
adc
sahf
fisubs
test
fsubr
jecxz
imul
out
inc
subl
test
movsl
orl
stc
mov
sub
jmp
movsl
inc
mov
in
cmp
test
jmp
rolb
push
sbb
ljmp
sub
mov
leave
push
into
test
xor
scas
add
pop
call
and
loopne
iret
jge
popa
push
pop
xchg
movsb
in
push
jecxz
and
test
add
icebp
arpl
push
pop
lret
insl
ror
out
sbb
mov
bound
mov
push
sbb
loop
ficoml
test
packuswb
lcall
inc
push
or
test
dec
jmp
jns
cli
lret
faddl
jae
pushf
mov
in
fucomp
mov
inc
or
jp
xchg
dec
mov
test
repz
mov
arpl
mov
sub
mov
cli
and
jae
cmp
sbb
movsb
pop
cmp
jns
mov
xor
push
test
sti
cmc
jae
xor
add
mov
clc
cld
mov
out
in
lahf
mov
test
insb
stc
or
dec
push
ljmp
loopne
scas
test
push
xor
lret
pop
bound
dec
xlat
lcall
test
jle
adc
int3
add
cltd
mov
test
pop
outsb
test
arpl
test
jmp
xor
lcall
lea
sub
sub
ja
in
aaa
js
xorl
sub
xor
rcrl
push
or
mov
inc
pop
cmp
xchg
test
cmpsb
sub
mov
push
mov
bound
xor
mov
test
or
push
mov
cmpsl
popf
push
ljmp
std
test
xor
sbb
sub
xor
mov
test
mov
arpl
test
loopne
cwtl
lcall
push
and
lock
stos
mov
movsb
sub
stc
in
addb
mov
mov
test
dec
cltd
dec
lods
pop
test
xchg
cld
loop
fcmovb
jecxz
imul
icebp
hlt
jmp
mov
test
pushl
out
mov
mov
mov
imull
test
leave
inc
sbb
add
xor
mov
push
push
test
xchg
jle,pt
sub
mov
ljmp
int3
cmpsb
fsubrl
jecxz
fisttpl
and
iret
mov
push
mov
xchg
into
mov
in
sub
js
mov
aas
jns
movsl
je
test
loopne
icebp
int3
inc
sbb
negb
cmp
call
stos
lret
sub
push
pop
and
or
repnz
push
adc
das
rcl
sbb
inc
sahf
cmpsb
test
mov
jmp
into
jecxz
mov
insb
rcr
fiadds
inc
or
xor
ljmpw
adc
test
cli
sub
lock
sahf
int3
jge
fnstsw
into
pop
push
or
or
bound
mov
mov
movsb
sub
or
daa
pop
pop
mov
mov
pop
cmp
jp
repnz
iret
test
loop
mov
mov
test
and
jmp
mov
mov
test
loopne
mov
incb
xchg
dec
testb
mov
mov
arpl
mov
cld
outsl
bound
jp
movsl
xorb
inc
incl
dec
imul
push
ljmp
pop
aad
test
mov
push
shll
sahf
mov
scas
push
test
dec
jge
bndstx
ljmp
das
in
cmpsl
lods
xchg
push
adc
jg
ret
test
dec
mov
ss
ret
insl
push
nop
cltd
movsb
mov
mov
xchg
jno
push
out
movsl
add
nop
add
mov
and
lcall
cmp
fadd
inc
mov
test
or
mov
mov
mov
bound
cmpsb
add
addb
jmp
xchg
jge
fnstcw
aam
push
pop
mov
mov
or
add
into
test
sbb
and
pop
dec
and
xchg
jecxz
mov
test
push
ljmp
arpl
popf
mov
int
outsb
imul
sub
mov
test
sahf
popa
jp
jge
inc
in
pop
insl
leave
push
out
lcall
jmp
sbb
sbb
pop
sti
test
sub
repz
out
test
int3
xchg
out
xor
popa
test
cmpsl
dec
test
stc
jno
imul
push
dec
jnp
mov
je
and
add
test
sub
std
xchg
jns
popa
test
xor
out
les
in
scas
repnz
dec
sar
cmpsl
andb
nop
data16
mov
sbb
push
pop
subb
cmpsb
add
test
enter
testl
scas
jmp
push
test
xchg
sti
into
and
mov
pop
mov
lods
pop
std
jmp
inc
mov
loop
or
xor
dec
mov
add
jno
cwtl
mov
rol
in
mov
mov
mulb
sub
mov
shr
test
pop
push
pusha
enter
test
jbe
testl
mov
xlat
mov
ljmp
or
xchg
cmpsl
xor
mov
test
push
ret
aad
test
adcl
mov
lods
jmp
mov
sbb
xor
push
jmp
insl
fwait
repnz
inc
or
dec
mov
mov
decl
mov
jg
cmp
test
push
jnp
cli
out
aad
test
ds
or
repz
ficoms
jb
cmpl
cmpsl
mov
lods
loope
inc
fs
cli
inc
jg
add
adc
push
jecxz
mov
nop
shrl
cmp
int
cmpsl
inc
fadds
and
adc
mov
xor
mov
bound
lret
xor
xor
push
sub
outsl
add
push
mov
mov
jp
jmp
and
imul
dec
sbb
inc
test
push
bound
push
dec
mov
jge
movsb
inc
fimull
test
cmp
jge
push
loop
test
jae
dec
fs
movsb
xchg
mov
xchg
int3
cli
push
test
or
repnz
xlat
sarl
jecxz
xchg
dec
test
inc
xor
cwtl
jp
and
mov
cmp
daa
or
jge
aad
aas
mov
call
cltd
dec
cmpl
mov
mov
xorb
out
inc
fmull
cmp
loopne
push
arpl
mov
test
nop
and
jle
leave
sbb
fidivl
andb
out
sbb
mov
inc
pop
and
cmpsl
mov
test
sahf
cmp
cmp
lds
sbb
test
imul
cmpl
add
sub
adcb
rcll
jle
outsb
test
sub
test
xchg
ljmp
and
sti
loope
mov
ret
test
imul
nop
and
icebp
bnd
cmp
cmp
sbb
inc
inc
in
dec
inc
test
or
aad
jmp
ret
xchg
mov
lcall
lods
sahf
imulb
jns
or
and
xchg
testl
sbb
inc
add
xchg
stos
in
pushf
das
xchg
jge
sbb
cmp
dec
into
xor
adcl
out
daa
sub
xor
ja
pop
sti
xchg
mov
xor
add
mov
inc
data16
sub
fsubl
popa
add
mov
sbb
pop
or
andl
dec
loop
imul
lcall
fdivs
jb,pn
test
bound
xor
dec
sbb
dec
loop
mov
push
fidivs
or
mov
cmp
add
add
xchg
fbld
or
dec
or
mov
aas
fnsave
sahf
sub
repnz
jmp
int3
scas
xor
sub
sbb
push
test
shrd
dec
add
mov
sbb
pop
lds
mov
rolb
popa
or
test
shlb
in
jb
pop
enter
mov
cld
mov
xorb
in
mov
mov
lods
cmp
repnz
stc
pop
or
jae
je
mov
mov
xchg
test
iret
inc
subb
lret
stos
test
jns
jecxz
aas
xchg
sbb
inc
xor
or
push
fsts
or
je
dec
arpl
jg
bound
imul
jno
enter
sbb
mov
mov
in
int3
lds
loop
mov
aad
test
pop
dec
lods
bound
test
and
mov
test
je
gs
or
out
movsb
xchg
mov
mov
sti
jno
dec
fbstp
inc
xchg
sbb
mov
adc
jb
aas
test
fldl
push
push
bound
pusha
stc
jmp
leave
aaa
outsb
pop
mov
mov
or
repnz
and
jmp
mov
insb
popa
ljmp
dec
daa
ja
in
pop
rorb
jbe
mov
leave
dec
mov
in
icebp
ret
popa
test
int3
sahf
mov
lahf
pop
jns
jg
dec
test
sbb
cltd
jecxz
hlt
push
lea
test
push
repnz
cmc
bound
imul
outsb
push
test
test
aaa
mov
in
add
decl
ljmp
shrb
push
push
jg
or
outsb
push
insl
cmc
or
sbb
cmpsl
jbe
fnstcw
int3
mov
jecxz
xlat
test
or
je
insb
sub
or
jp
sbb
sub
sahf
arpl
and
jae
sti
adc
mov
cmp
popa
jno
test
mov
test
fisttpl
ljmp
mov
add
jns
sahf
lods
jl
sbb
cmpsl
sbb
int3
mov
jmp
mov
mov
mov
decl
test
cmp
pop
je
filds
xchg
dec
test
pop
dec
or
stos
enter
pop
xor
push
cmp
test
add
cmp
roll
inc
cmp
mov
add
adc
scas
popa
test
pop
test
test
adc
insl
test
out
outsb
sub
sub
mov
roll
xchg
cmpsb
adc
push
xchg
cmp
es
sti
ljmp
ret
test
sbb
push
loopne
in
test
adc
movsb
adcl
popf
test
fwait
pop
mov
cmpsl
je
push
mov
pop
daa
pop
lods
cmp
and
cmpsb
mov
cmp
jecxz
push
mov
out
push
adc
sarl
xor
sub
inc
mov
sub
dec
pop
xor
test
fsubp
mov
jno
adc
add
das
mov
mov
mov
xchg
into
mov
xchg
adc
mov
nop
mov
ljmp
jns
sub
mov
mov
mov
push
das
mov
mov
int3
mov
clc
cmp
mov
je
xchg
mov
arpl
stos
in
mov
test
loop
fimuls
jae
xchg
and
mov
test
push
cmp
imul
mov
insb
les
xchg
fidivs
imul
mov
lret
test
adc
mov
test
sbb
leave
ljmp
in
add
dec
push
cli
loop
test
mov
in
imul
es
add
adc
psubq
test
sbb
aad
cltd
or
or
lret
dec
inc
loope
adc
movsl
out
test
push
ja
sub
xchg
lret
push
cmp
ret
xor
movsb
lcall
daa
adc
repz
cmpsb
xchg
addl
out
ljmp
or
loopne
and
cltd
xlat
xchg
dec
push
mov
sbb
out
in
mov
test
pop
mov
sbb
mov
and
loop
decb
test
push
dec
and
jmp
mov
test
mov
shl
sbb
pop
call
mov
and
stos
inc
jl
mov
cmpsb
xchg
int
orb
daa
imul
insb
cwtl
rorb
mov
and
movsb
lahf
xchg
js
daa
mov
xchg
data16
dec
jae
mov
add
push
movsb
pop
test
push
mov
pop
test
inc
sbb
in
add
mov
push
cltd
lea
mov
push
movsb
mov
jnp
mov
adc
ret
test
xchg
outsb
mov
lret
jg
lds
or
push
mov
movsl
sbb
jnp
test
xor
inc
cmpsb
aaa
ds
inc
pop
add
mov
jecxz
mov
stos
pushf
push
push
in
lods
pop
or
mov
sbb
les
sbb
movsb
xlat
mov
mov
in
cmp
sbb
mov
dec
hlt
mov
jge
jmp
xchg
add
test
add
stos
sbb
mov
arpl
cmp
clc
mov
dec
mov
mov
leave
aad
test
xor
sub
movsb
clc
nop
rcll
cmp
cwtl
mov
insl
adc
test
pop
inc
arpl
mov
sbb
lods
pop
pop
push
push
cmp
addl
les
mov
mov
aad
test
incl
mov
movl
fwait
loop
mov
xchg
les
pop
sti
mov
sub
leave
aad
xchg
lods
lret
test
rorl
sti
test
mov
imul
insb
dec
pop
pop
mov
and
int
cmc
mov
cmp
addr16
dec
sbb
mov
test
mov
dec
xchg
and
xchg
std
sbb
pop
test
dec
lods
mov
xchg
xchg
loop
mov
lds
mov
mov
add
cmc
testl
and
flds
imul
mov
lds
test
hlt
into
and
adc
mov
inc
sarl
test
stos
xor
dec
jne
test
inc
pop
xor
movsb
cmpsb
icebp
xchg
lret
test
mov
mov
sti
test
cmp
fsubl
ljmp
mov
test
popf
mov
xchg
pop
insb
adc
sub
sti
adc
xorb
stc
gs
arpl
mov
mov
cmp
insl
or
mov
mov
je
aam
lret
sub
mov
jns
imulb
jb
in
or
orl
jmp
inc
ret
jmp
daa
xchg
test
or
mov
push
test
insl
test
mov
daa
call
imul
fwait
push
andb
mov
repz
out
mov
je
fsubrs
loop
test
in
sub
dec
repz
push
or
mov
pop
test
aaa
imul
lcall
mov
test
cmp
push
jae
stos
push
je
in
jg
lcall
adcb
aaa
jo
cld
movsl
add
pop
mov
mov
inc
or
cli
or
shll
lahf
and
or
mov
add
test
xor
orb
fstpl
cld
test
lret
je
out
les
mov
data16
fisttpll
jl
lds
and
or
movsb
cmp
das
mov
pop
cmpb
dec
ljmp
mov
cmpsl
hlt
loope
popa
insb
mov
mov
jmp
mov
mov
jmp
jo
std
adc
jnp
xchg
enter
dec
mov
outsb
test
and
inc
das
pop
mov
mov
lret
push
xchg
push
jae
jmp
std
add
sbb
pop
sarb
dec
stos
mov
nop
enter
push
sbb
lods
test
test
arpl
xlat
mov
mov
xchg
cmp
xchg
add
and
or
bound
pop
aam
cmp
mov
movsb
lcall
daa
popf
and
test
dec
popl
jbe
rol
sbb
out
movsb
mov
repz
xor
test
mov
push
jmp
sahf
mov
lret
push
push
aad
mov
in
xchg
lods
mov
std
and
test
pop
add
sub
xchg
mov
repz
cmp
mov
hlt
ljmp
out
sub
push
mov
test
xchg
test
sahf
xchg
rcrl
stos
aad
outsl
cwtl
cmc
pop
sbb
xor
push
mov
shr
mov
out
sub
popl
and
int3
in
fnsave
hlt
push
nop
mov
push
repz
lock
arpl
cmp
lcall
mov
lea
in
sbb
into
xor
jecxz
ljmp
xchg
add
dec
in
dec
test
repz
aas
cmpsb
or
dec
mov
mov
ss
test
out
push
xchg
test
xchg
movb
out
jmp
int
add
sbb
mov
pop
outsl
lea
test
bound
jns
les
sub
push
cli
js
shl
jbe
test
inc
jmp
int3
ss
test
sub
aad
xor
mov
in
push
adc
test
mov
mov
mov
mov
test
mov
cmc
mov
cli
xchg
test
repz
ljmp
add
lcall
cmc
in
insb
mov
xchg
test
dec
xor
lods
sahf
test
out
or
and
movsl
pop
fdivs
push
mov
mov
in
daa
testb
repnz
jge
mov
pop
es
in
mov
or
movsl
inc
je
movsb
loopne
std
cmpsl
daa
add
loope
cmp
push
pushf
daa
in
inc
push
jge
shlb
orl
lods
int3
ficomps
insb
les
or
out
fcmovnb
lods
or
rorl
cli
shlb
and
xor
and
test
adcl
inc
out
add
xchg
imul
ds
push
mov
fsub
out
test
mov
addr16
adc
and
push
pop
mov
jg
test
mov
cmpsb
pop
mov
test
dec
xchg
cmc
bound
cmp
in
aas
outsb
cmp
test
es
cmp
jno
fmull
jae
ljmp
pop
repnz
ja
push
fldcw
mov
mov
ljmp
lods
xor
cltd
mull
lahf
or
sbb
movsb
arpl
incb
xor
daa
mov
in
mov
mov
cmp
lcall
mov
dec
jne
sub
movsb
out
js
mov
push
or
jmp
cwtl
loop
inc
mov
test
shrb
mov
inc
pop
mov
pop
test
test
stos
sbb
cmp
std
test
jmp
sbb
add
cld
and
mov
push
xor
fisubs
test
jb
divb
sbb
pop
push
icebp
fcomps
and
sub
and
and
js
movsb
xor
push
dec
mov
stos
adc
mov
jmp
test
imul
mov
test
jecxz
add
and
test
inc
movsb
aas
mov
adc
adc
mov
in
and
push
sbb
popf
jbe
imul
mov
test
pop
aaa
push
mov
frstor
ljmp
imulb
in
insl
inc
ja
jg
sbb
mov
or
sbb
mov
mov
xor
insb
iret
test
add
divb
xor
test
adc
pop
dec
cmp
jbe
subl
sub
pushf
fidivrl
imull
mov
xchg
xchg
pop
loopne
mov
faddl
jle
movsb
lret
jecxz
out
and
ds
mov
test
xchg
and
inc
lds
mov
adc
test
ja
mov
inc
outsb
add
test
sbb
sbb
out
adc
mov
mov
xchg
pop
or
movsb
iret
or
out
adc
nop
test
std
movb
xchg
sti
test
ja
xor
in
ret
adc
call
out
lret
test
in
jmp
mov
les
mov
loop,pn
incl
or
out
aad
or
les
pop
insl
fsts
add
push
sub
rcll
xor
cmp
cmp
mov
mov
adc
mov
mov
test
nop
push
cltd
out
adc
inc
cwtl
test
push
jmp
pop
cmp
jno
andb
mov
pop
inc
and
movsb
and
jne
xor
int3
hlt
push
imul
call
xchg
jmp
test
mov
mov
into
jle
mov
mov
add
mov
mov
test
dec
push
inc
into
cmp
ret
jne
test
push
in
adcl
aas
jb
mov
fwait
rcl
data16
mov
iret
stos
xlat
jnp
jae
stos
inc
cwtl
in
pop
pop
push
out
mov
jmp
mov
push
mov
aam
test
lods
mov
sahf
add
mov
push
mov
stos
mov
mov
and
mov
test
aad
sub
cmpsl
vmread
insl
sahf
adc
jle
or
or
imul
pop
test
loop
pop
mov
jl
scas
jmp
dec
pop
mov
sub
xchg
cmp
movsb
lds
dec
pop
mov
addb
xor
fucomi
add
cmc
out
jb
pop
or
jecxz
leave
sbb
js
daa
mov
pop
bound
stos
loop
mov
sbb
cs
jno
dec
mov
sub
aad
test
aaa
dec
or
add
movsl
mov
sbb
ret
pop
cld
fisubrl
sbb
stos
movsb
loopne
iret
les
xor
xchg
lods
pop
je
mov
out
rorl
jbe
push
test
pop
pop
ss
mov
addr16
je
push
insl
test
xchg
sarb
ret
test
into
xor
fucomip
call
into
mov
mov
or
imul
xor
hlt
out
test
aad
mov
lahf
in
cmpsl
mov
sarb
mov
int3
pop
mov
test
or
test
mov
push
test
in
sub
jbe
inc
test
es
test
sub
test
iret
push
ret
sbb
call
popa
mov
out
jbe
mov
into
mov
fistpl
test
or
ljmp
testl
js
xchg
test
jae
enter
in
inc
adc
mov
cmp
mov
sahf
xlat
int
push
in
jmp
pop
nop
fistpll
ja
mov
mov
dec
mov
mov
mov
cs
pop
fs
aas
cmp
mov
arpl
stc
pop
loop
and
add
insb
jmp
xchg
mov
cmpsb
jp
push
mov
fldl
outsl
out
mov
imul
sub
inc
incl
jo
cld
test
pop
xor
push
leave
ljmp
mov
jno
iret
fisubs
pop
inc
je
mov
fildl
loop
sbbb
mov
test
xchg
test
xor
call
lea
or
out
and
cwtl
cmpsb
add
jne
std
mov
pop
mov
and
dec
sub
cmp
pop
rcll
mov
mov
jl
pop
dec
adc
int3
and
push
inc
xor
mov
mov
mov
clc
into
cmpb
test
out
out
xchg
or
pop
mov
stos
sub
cltd
cwtl
scas
jecxz
aam
or
shrb
sti
sub
mov
push
leave
pop
and
js
psubsb
xchg
lea
mov
lock
popf
mov
std
mov
jmp
sbb
bound
aaa
cmpsl
cmp
mov
sbb
jns
int
adc
movsb
dec
cmpsl
data16
adc
push
push
arpl
ljmp
aaa
jmp
push
stos
fwait
and
popf
daa
mov
cmc
arpl
outsb
push
jg
div
mov
and
xor
aad
nop
pushl
test
xor
mov
into
xchg
ljmp
jecxz
movsl
mov
js
shlb
mov
mov
adc
mov
xor
test
int
sub
test
sahf
inc
inc
cmp
outsl
test
push
mov
cmp
jo
cli
cmp
cs
pop
pop
inc
mov
dec
mov
mov
or
pop
mov
pushf
orb
jg
pop
in
leave
aas
mov
movsb
lret
je
pop
mov
insl
xor
leave
movsb
clc
les
sub
test
scas
add
imul
test
out
or
cmp
push
xor
pop
xchg
test
mov
jbe
test
jo
test
pop
xor
test
pop
pop
mov
push
jne
mov
call
xchg
jmp
out
ljmp
pusha
dec
cmpsl
mov
inc
mov
popf
arpl
inc
jo
inc
mov
out
mov
shl
xchg
in
ret
test
iret
movsl
pop
adc
mov
xchg
popa
out
test
inc
clc
mov
lcall
cs
fdivrl
inc
or
sbb
inc
insl
cmp
dec
les
add
je
jl
jmp
pop
or
jno
xchg
test
test
jmp
inc
test
scas
in
movsb
test
or
push
inc
or
movsb
inc
jp
sbb
mov
adcb
xchg
fwait
add
mov
inc
add
sarl
stc
aad
les
jp
in
test
xchg
test
adc
lret
test
mov
std
in
inc
mov
ljmp
and
lahf
arpl
jg
or
ret
fiaddl
inc
inc
dec
aas
mov
and
mov
test
xor
sub
outsl
sub
or
out
test
ljmp
imul
ret
mov
int
pop
mov
jae
sbb
in
add
movsl
push
push
mov
stos
punpcklwd
test
sbb
fsubrl
loopne
sub
out
adc
test
push
scas
sahf
icebp
fldl
adc
push
xchg
adc
daa
imul
in
push
mov
dec
test
jmp
pop
ljmp
xchg
xor
std
inc
push
cld
xor
lret
repz
rol
xor
rcl
popa
int
cmc
test
mov
icebp
imul
sub
mov
mov
sub
mov
lods
sbb
popa
pop
inc
test
push
mov
lds
cld
out
push
pushf
loope
sbb
xchg
mov
iret
or
mov
imull
in
xor
orb
movl
jp
dec
sbb
and
test
jle
lods
fidivl
test
fldl
mov
mov
mov
ljmp
push
and
mov
sub
dec
movsl
popl
push
mov
mov
jg
and
and
push
mov
int3
pmaddwd
pusha
testl
push
jmp
in
iret
and
sahf
jecxz,pn
jne
pop
test
push
sti
rcll
cmp
mov
fcmovnb
test
incb
cli
adc
fs
and
scas
jle
pop
lea
and
enter
aam
gs
xor
push
sub
aaa
ljmp
iret
enter
lret
test
cs
jmp
les
and
jae
xchg
mov
inc
cmp
cmp
push
cmp
or
sbb
and
sub
pop
or
or
cltd
mov
adc
movsl
add
test
leave
pop
ljmp
out
mov
mov
inc
push
test
pop
xchg
in
xor
jne
add
ljmp
mov
pop
cmp
out
popf
xchg
pop
inc
mov
sub
data16
fldl
xor
test
jmp
push
mov
cltd
test
movsl
add
mov
stos
test
lea
ret
dec
test
imul
jnp
sub
aad
movsb
or
out
mov
rorl
push
es
mov
fmul
pop
in
mov
mov
xor
cs
imul
leave
imul
adc
mov
addb
test
repz
mov
fs
stos
in
popf
xchg
lds
xchg
lret
cmp
test
call
sahf
pushf
cmc
mov
out
movsb
push
lahf
enter
and
mov
stos
imul
mov
or
pop
pop
outsl
xchg
xor
aad
mov
sbbb
mov
insb
xchg
jo
test
pop
cmp
es
out
xchg
mov
test
test
xchg
ljmp
lods
sbb
push
frstor
popf
test
rolb
out
cmp
in
mov
test
addr16
fmulp
insb
testb
and
sbb
dec
adc
mov
mov
cld
inc
loop
jmp
cmpsb
out
bound
dec
push
cwtl
mov
je
cmp
pusha
adc
or
aam
stc
outsb
jbe
jp
mov
inc
sti
xorl
jne
insl
pop
test
jge
xor
or
add
or
mov
outsl
mov
add
icebp
jmp
std
nop
out
hlt
mov
fistl
test
xchg
mov
repnz
ljmp
mov
loope
test
in
scas
jmp
test
rcll
aas
dec
sub
xchg
arpl
add
inc
mov
fs
push
sbb
rolb
test
adc
ljmp
in
dec
andb
int3
or
mov
fdiv
fisubs
addl
mov
pop
xchg
test
pop
pop
aad
test
push
push
sahf
out
movsb
sbb
loop
mov
daa
inc
mul
or
mov
loop
inc
add
cwtl
adc
mov
pop
fcom
scas
pop
mov
fisubs
cmp
bound
aas
insb
adc
test
cmp
in
sub
leave
fucomip
mov
jo
dec
stc
mov
movsb
inc
dec
das
mov
mov
sbb
adc
cmpsb
shlb
push
cwtl
imul
xor
test
subb
shr
movsb
leave
jecxz
aam
cmp
sbb
fiaddl
cmpsb
sbb
mov
test
or
in
mov
test
xchg
mov
xor
dec
cmc
loop
sti
scas
lar
xor
adc
in
pop
mov
pop
gs
stos
and
push
popa
movsb
xor
insl
mov
jmp
inc
push
jmp
jge
push
test
xchg
cmp
call
pop
xchg
in
xchg
xor
add
sahf
sbb
test
inc
pop
lods
outsb
xchg
test
sbb
test
mov
ljmp
jae
pop
xorb
sub
es
shr
cli
pop
test
and
arpl
sti
or
dec
add
rcll
mov
daa
outsl
inc
gs
repnz
rorb
imul
cmp
mov
xchg
push
xchg
sub
lds
or
test
in
jmp
loopne
into
xor
aad
pop
mov
mov
sbb
sbb
mov
test
inc
lock
out
or
aad
movsb
push
shl
pop
mov
loope
fimuls
hlt
add
add
movb
les
jmp
shlb
out
mov
jno
popa
lret
test
push
sbb
ficoms
test
scas
gs
test
test
sbb
out
dec
fistpl
sub
add
ljmp
push
mov
xchg
outsb
je
movsb
sbb
mov
jmp
adc
movsl
daa
mov
xor
jb
mov
add
jmp
test
push
aad
in
inc
imul
lcall
out
xor
test
jmp
std
sbb
jmp
mov
das
and
cmp
inc
jae
mov
cs
dec
fistps
test
adc
sub
mov
out
in
loop
test
int3
pop
lret
cmc
das
test
stos
out
mov
mov
test
cwtl
dec
loope
inc
shlb
mov
jae
jmp
test
ljmp
xor
fsin
xchg
test
je
inc
test
push
inc
push
pusha
sub
xor
test
icebp
test
push
test
mov
or
xorl
mov
jne
sub
test
leave
imul
mov
adcl
push
bound
jae
lret
lods
mov
mov
or
mov
ds
test
sub
aad
test
stc
inc
inc
std
jg
or
cmp
adc
test
mov
mov
ret
out
aam
lea
dec
gs
data16
mov
movsb
jmp
icebp
in
std
daa
dec
and
dec
repnz
mov
ljmp
add
mov
mov
repnz
mov
test
xor
add
mov
test
jae
imul
xchg
leave
out
popa
fbld
popa
xor
stc
sbb
pop
arpl
sub
cmp
cmp
jp
cmp
ljmp
dec
dec
test
inc
adc
sahf
sub
push
sub
rorb
daa
stc
mov
lcall
cwtl
fsubl
out
jo
fstpl
mov
out
xchg
mov
shll
insl
and
or
loope
ljmp
aaa
and
push
dec
mov
push
mov
sub
mov
and
into
cmp
adc
and
add
and
test
loop
aad
shlb
psubb
outsb
pop
sub
into
mov
mov
add
cltd
loop
jmp
jecxz
sub
bound
sbb
sbb
pop
test
push
arpl
mov
test
icebp
insl
or
dec
out
or
cli
mov
call
sbb
test
xor
dec
inc
test
pop
or
fidivl
push
bnd
bound
out
mov
add
xchg
mov
push
adc
jecxz
pop
xor
mov
test
push
mov
movsb
cmpl
roll
flds
inc
cmp
fildl
xchg
sarl
test
cltd
mov
int
test
ret
inc
les
mov
sub
popl
mov
test
outsb
hlt
inc
sub
dec
inc
test
in
ds
push
mov
cmpl
insl
cmc
and
pop
inc
add
orl
ds
out
xlat
test
nop
cmpb
mov
sub
lods
lret
out
js
pop
mov
shlb
ljmp
daa
cmpsl
popa
xor
mov
or
decl
push
add
decb
cwtl
xor
add
fsubr
cltd
lcall
jbe
mov
mov
sub
mov
sbb
rol
pusha
test
inc
sub
mov
test
test
in
xchg
ret
lock
add
add
adc
fnstsw
xor
mov
inc
jb
push
mov
mov
std
mov
ljmp
add
and
sbb
test
jl
cmp
xor
test
pusha
jmp
jae
ljmpw
sbb
test
jecxz
dec
xchg
mov
xchg
gs
test
ret
pusha
or
dec
or
lock
fcomps
imul
test
stos
shr
or
pushf
test
orl
in
xorl
mov
bound
cmp
test
lea
add
dec
mov
pop
mov
add
insb
or
popa
jg
mov
test
shrb
inc
lcall
mov
add
mov
cmp
arpl
mov
push
fwait
mov
test
or
mov
ljmp
test
cmpsl
inc
clc
mov
aas
jne
xor
jae
ljmp
fcompl
or
xchg
and
ffree
jb
or
test
push
inc
sub
add
jnp
add
rorb
les
mov
push
and
repz
xor
mov
aaa
pusha
and
arpl
ss
xor
fbld
call
arpl
lcall
jmp
aad
insb
mov
add
sub
mov
mov
imul
mov
ss
xlat
mov
test
cs
and
mov
push
sti
inc
push
les
mov
out
or
enter
cmpsl
testl
xchg
pop
stc
mov
jg
in
repnz
cmp
test
sub
cli
dec
mov
cmp
xor
xchg
leave
mov
stos
into
dec
test
pusha
jno
sbb
je
in
mov
add
xor
mov
pusha
insb
in
fiadds
mov
pop
pop
stos
push
jbe
dec
int
test
xlat
cmpsb
mov
leave
sti
mov
mov
addr16
or
and
insb
lods
xor
fwait
lret
fldcw
dec
in
add
sub
mov
test
js
adc
mov
sbb
idivl
mov
enter
mov
cmpsl
lods
fbstp
test
test
stos
fs
popf
lea
xlat
decb
push
pop
xor
adc
cmp
ljmp
out
out
add
mov
mov
test
scas
or
sbb
push
arpl
xor
jecxz
or
mov
and
dec
insl
cmp
bound
or
cwtl
inc
loop
pop
mov
jne
adcl
adc
in
cmpsb
mov
test
pushf
pop
push
imul
ljmp
cmpsl
xor
pop
lea
mov
out
push
outsb
inc
jo
leave
insb
add
arpl
js
test
inc
push
mov
jecxz
dec
scas
test
and
out
mov
cmpsl
jb
add
mov
jl
xlat
andl
mov
int
pop
test
addr16
or
dec
mov
or
stos
out
bound
scas
sbb
aas
mov
inc
or
adc
out
test
xor
frstor
mov
daa
addr16
dec
sbb
xor
cmpsb
pushf
je
test
aas
mov
jae
add
test
and
rolb
lods
push
decl
inc
js
mov
cmp
dec
fs
jb
push
mov
out
sarb
sahf
bswap
pop
sub
ret
loope
std
lret
mov
imulb
in
rclb
sbb
hlt
mov
mov
fimull
pop
in
mov
cmp
xchg
in
and
test
xchg
pop
fmull
push
and
les
mov
jp
into
push
pop
ja
lods
mov
dec
loop
pop
add
fs
adc
pop
sub
and
mov
jae
movsb
cmc
daa
inc
adc
sub
test
adc
and
sahf
mov
repz
ljmp
in
add
xchg
jno
mov
push
sti
and
lods
cmp
jmp
push
or
cwtl
int3
in
xchg
insb
cmpsl
out
bound
mov
movsb
filds
sbb
mov
rorl
dec
in
jg
jb
inc
fists
das
popf
popa
inc
and
addr16
std
inc
cmp
test
mov
ljmp
mov
xchg
hlt
stc
test
jo
ja
insb
inc
add
shll
inc
test
cmp
aad
sahf
sbb
dec
adc
adc
loop
inc
inc
test
cmp
incb
test
jmp
ret
fisubrl
mov
pop
test
call
lea
or
mov
xchg
in
adc
int
dec
mov
and
js
mov
in
push
pushf
pop
mov
hlt
pop
push
fwait
loopne
xor
pop
nop
dec
push
sub
push
mov
mov
ret
push
test
inc
pop
scas
pop
or
dec
push
test
mov
test
sti
xchg
inc
rcrb
decl
inc
or
xchg
lret
mov
mov
and
push
dec
inc
hlt
mov
fs
and
pop
ret
inc
lea
test
iret
push
inc
scas
sub
pop
cmp
sti
dec
popa
out
mov
sbb
stos
addb
jne
test
inc
into
and
dec
call
fiaddl
mov
mov
jle
fsubrp
mov
jge
movsl
pop
lods
adc
movsb
mov
aas
scas
pop
es
pop
cmp
aad
test
jecxz
push
xorb
cs
push
cmp
movsb
insl
les
inc
push
int3
push
sbb
daa
test
sahf
dec
cmp
add
jo
ja,pn
jmp
mov
fs
dec
pop
dec
lret
les
icebp
into
mov
jmp
data16
lds
dec
push
pop
mov
push
xchg
test
psraw
push
push
jmp
dec
pop
mov
inc
inc
imulb
mov
negl
mov
pop
incb
mov
mov
cmp
cmp
mov
mov
aaa
and
sbb
test
shr
inc
add
cmp
mov
data16
stc
sub
mov
sub
sbb
or
outsl
mov
test
add
cmp
out
mulb
dec
mov
xchg
std
test
mov
push
mov
mov
mov
test
outsb
xchg
fldz
jno
test
int
test
cmp
xor
bswap
inc
shr
fwait
mov
push
test
lods
fsubs
mov
out
xor
imul
add
in
mov
mov
test
sbb
mov
push
push
mov
sub
or
mov
mov
test
lock
mov
jp
outsb
scas
je
adc
test
inc
jnp
sti
sub
add
subb
cltd
mov
jge
in
ret
inc
gs
repnz
insb
mov
mov
sub
enter
xchg
push
sub
test
imul
push
out
push
ljmp
mov
inc
loope
fisttpll
cld
popa
jns
adcb
lock
sub
in
sub
shlb
jmp
das
fistl
clc
push
mov
xchg
push
cmpb
inc
stc
jmp
mov
add
mov
rorb
roll
cmpsl
ret
in
test
ds
ljmp
cmp
mov
aas
sbb
xchg
test
mov
pop
into
xor
test
pop
cld
stos
rep
ljmp
push
xchg
daa
outsl
mov
mov
mov
and
dec
aad
mov
loop
pop
das
or
cmp
repnz
push
mov
push
or
mov
fbstp
mov
insb
jb
mov
mov
sub
pop
lcall
pop
call
xor
jmp
lea
test
xchg
jae
mov
test
jb
push
cmc
or
jo
cmpsb
jnp
mov
test
repnz
outsb
int
test
ljmp
test
adc
lret
add
jb
xchg
lcall
jmp
sbb
int3
movsb
jecxz
jnp
lret
jbe
and
pmulhuw
mov
mov
push
jmp
rorb
stc
mov
aas
mov
out
in
mov
lds
mov
test
cmpsb
out
lods
jbe
sub
movsb
or
jg
addr16
test
add
xorl
movsl
adc
xchg
fsubrl
and
addr16
mov
test
sub
mov
lods
adc
movsb
mov
inc
in
ds
fdivl
xorb
mov
test
int3
mul
in
ss
inc
test
ljmp
or
xchg
mov
jae
dec
inc
push
aad
test
mov
ret
pop
data16
movsb
call
dec
lea
test
sbb
adc
cmc
inc
add
test
adc
sub
in
add
xlat
add
sahf
das
test
imul
addb
test
in
aas
sbb
xchg
add
jae
add
ljmp
or
mov
sbb
push
and
adc
push
fmul
daa
data16
sub
mov
sub
mov
test
stos
and
test
cld
lods
dec
sub
outsl
push
das
and
add
ja
outsb
out
arpl
orb
mov
loop
dec
add
filds
jle
mov
mov
xchg
into
mov
jns
in
xor
mov
aaa
mov
test
fcmovb
xchg
mov
popa
push
inc
jmp
and
loopne
lds
mov
jmp
inc
addr16
inc
popa
pop
push
mov
aam
mov
mov
mov
mov
mov
aam
or
fsubrs
aad
test
sbb
xchg
add
xchg
inc
mov
xchg
cmc
int
mov
ret
or
lahf
jg
test
incb
enter
in
mov
xchg
sub
test
dec
ljmp
push
out
sbb
sbb
stos
test
aas
pop
pop
ret
lret
inc
fs
push
call
aad
test
add
adc
dec
adc
and
mov
movsl
test
pop
adc
daa
mov
jbe
test
dec
leave
ljmp
mov
mov
test
add
aas
cwtl
xor
mov
sti
xchg
mov
pop
jge
mov
into
test
mov
push
xor
in
xchg
pop
inc
hlt
or
pop
aaa
mov
test
nop
jb
test
jecxz
mov
or
push
sar
sbb
pop
push
mov
insl
or
shl
push
test
jns
negl
adcb
xor
cmp
imulb
in
movsl
mov
cli
add
sbb
push
mov
mov
pop
stos
enter
or
xchg
test
mov
call
mov
mov
mov
loopne
xchg
mov
aam
incb
mov
xchg
and
daa
int
test
hlt
repz
push
test
in
jns
xchg
lret
iret
roll
ret
test
repnz
test
orl
in
jmp
mov
cmc
adc
cmp
push
mov
pop
or
in
mov
orb
out
cmp
outsl
and
xchg
sub
test
daa
fwait
inc
mov
incb
mov
in
out
fucomi
fs
pop
lock
xchg
roll
insb
xchg
and
pop
out
adc
xor
mov
test
xchg
shlb
lea
xchg
ret
dec
test
iret
sbb
mov
andl
and
jns
icebp
js
pop
push
lret
aaa
nop
push
fldcw
outsl
mov
sbb
push
arpl
loopne
fnsave
test
jno
mov
lret
popf
xchg
sub
aaa
rorl
pusha
test
inc
js
push
mov
movsb
inc
imul
out
clc
pop
daa
addb
loop
in
fldt
pop
adc
ret
add
cmpsl
lods
mov
movsb
daa
pop
and
stos
in
lods
test
xchg
dec
xchg
movsb
lcall
mov
or
add
inc
sbb
test
mov
testb
push
adc
cmpsl
mov
test
fistps
test
xchg
adc
mov
xchg
nop
enter
ror
xor
xchg
icebp
mov
ffree
cmpsl
shlb
popa
in
aad
push
test
xor
adc
mov
inc
sahf
hlt
mov
jp
jne
jbe
movl
fildl
inc
lods
lea
decb
movsb
xor
pop
ljmp
inc
push
test
sub
and
push
insb
pop
jl
xor
and
test
and
push
add
jmp
mov
mov
test
cmp
jmp
mov
hlt
inc
arpl
and
iret
pop
movsb
push
mov
mov
adc
shr
mulb
insb
int3
imul
inc
and
push
jl
pop
les
mov
add
jmp
test
pop
jmp
pop
loopne
mov
test
test
or
dec
mov
jl
add
aas
jmp
jp
aam
ljmp
ret
dec
test
lds
shll
or
fcoml
test
xchg
aaa
movsb
cmp
imul
popf
test
dec
mov
imul
ret
insb
pop
test
jae
mov
addb
mov
push
or
push
mov
rcrl
mov
js
and
cmp
xchg
mov
insl
cmp
cwtl
mov
imul
test
xchg
xchg
inc
mov
imul
cmp
movsb
xchg
push
or
sub
test
js
xor
mov
test
mov
mov
test
cmc
mov
cmp
cld
enter
jmp
xor
sub
ljmp
jmp
xor
or
lods
out
pop
dec
cld
sahf
dec
into
jno
roll
jl
adc
mov
sub
mov
mov
push
jle
mov
jp
sbb
xchg
scas
ss
imul
test
cmp
inc
out
movsb
push
lock
add
shll
aaa
sbb
xor
lret
testb
ret
orl
xchg
mov
or
imul
shlb
scas
andb
movsb
fdivr
insb
dec
pop
sbb
daa
jnp
mov
ret
xor
or
int
test
aaa
and
mov
pusha
sub
push
test
out
das
rol
nopl
ret
xor
xchg
stc
inc
jo
sbb
pop
data16
push
jbe
bound
adcb
cmp
mov
fwait
test
in
mov
add
test
orb
les
shl
call
test
and
movsl
pop
test
leave
or
popf
mov
shr
sbb
and
loopne
mov
adc
or
jg
call
sub
enter
inc
xor
movsb
lcall
mov
sub
dec
aam
lret
dec
mov
stc
movsb
pop
jnp
xor
test
test
addb
imul
lret
mov
aaa
mov
mov
arpl
sub
negl
xor
add
add
test
xchg
test
mov
cmpsb
test
or
sbb
test
add
ret
sarl
pushf
push
jg
scas
mov
adc
out
enter
xchg
inc
pop
mov
pop
out
js
sub
or
bound
scas
mov
andb
dec
testb
in
cmp
call
rcll
xor
loopne
in
inc
test
mov
lret
movsb
sbb
sub
jge
mov
rolb
sbb
xchg
jmp
bound
out
cmp
push
adc
roll
test
xor
icebp
pop
dec
push
xchg
fwait
test
sub
and
jge
dec
pop
repz
test
inc
loop
les
test
or
pop
lret
repnz
bound
dec
fiadds
outsl
add
xchg
sub
adc
les
adc
incl
enter
mov
cs
mov
mov
mov
inc
loop
sbb
pop
sub
mov
inc
je
test
sub
popa
cli
pop
test
add
test
ret
mov
testb
add
inc
and
arpl
mov
dec
mov
push
setg
test
movb
or
fcompl
sub
test
mov
sbb
int3
cmp
repnz
shr
movsb
cmp
fsubl
fnsave
test
push
sbb
pusha
cmp
aas
test
repz
gs
out
rol
not
lret
cmp
movsl
in
daa
push
outsl
test
in
jp
cmp
loopne
cmpsb
mov
clc
mov
xchg
pop
test
pop
stos
xchg
mov
call
xlat
out
test
xchg
sarb
xor
or
test
inc
shr
pop
bound
mov
sbb
movsb
test
out
inc
rorl
movsl
xor
leave
enter
testb
push
rcr
in
mov
push
jmp
and
push
lret
loop
mov
andb
cwtl
xchg
mov
mov
adc
xor
sbb
imul
leave
jb
cli
test
dec
popf
cltd
repz
ljmp
sbb
daa
cmpsl
and
pop
adcb
dec
mov
add
push
lods
movsl
mov
in
sahf
movsb
popa
mov
mov
jnp
pop
inc
loop
push
mov
repz
xor
cmpsb
dec
dec
cmp
out
stos
lock
int
cltd
and
add
jle
imul
sub
mov
adc
and
mov
dec
adc
mov
dec
push
call
jle
pop
test
addr16
test
ss
imul
push
test
ljmp
mov
push
jp
inc
pusha
lods
xchg
mov
push
push
stc
xchg
test
jne
jp
jmp
test
fstpt
mov
pop
xchg
push
pushf
cltd
mov
in
in
or
mov
enter
jo
and
stc
ret
mov
test
cmpb
movsbl
ja
and
adc
inc
jmp
jg
xchg
aad
dec
xchg
test
mov
pop
ret
xchg
sub
cmpb
xor
enter
sahf
xor
inc
jecxz
dec
inc
mov
or
daa
jge
mov
lods
mov
inc
int
aas
stos
cld
test
jmp
cmp
in
mov
fwait
test
test
and
and
cli
cmpsl
add
dec
arpl
mov
add
and
test
mov
lods
testb
test
pop
or
cmpsb
mov
ja
sub
sub
adc
push
orb
shl
sub
pop
cmp
test
fwait
rolb
cld
mov
pop
or
es
dec
out
push
pop
mov
movb
jns
xchg
or
sti
mov
test
enter
in
cmc
and
inc
ss
and
repnz
inc
push
loop
fsubrs
mov
test
cmp
or
cmc
jne
test
jnp
sahf
test
in
inc
sti
test
mov
enter
sub
negl
mov
lea
sub
dec
mov
or
adc
dec
test
imul
sbb
sub
lods
mov
sbb
outsl
rorl
cmp
ja
sbb
out
add
pop
sti
scas
movsb
or
push
and
fs
enter
jecxz
out
arpl
aad
test
xchg
pop
repz
in
stc
mov
stos
in
pop
lods
imul
or
mov
mov
cmc
std
mov
neg
pop
mov
xor
inc
aas
xorb
jmp
test
mov
jmp
aam
push
mov
cmp
add
pop
movb
cmp
xchg
dec
shlb
mov
ljmp
inc
adc
adc
arpl
mov
les
xchg
jle
mov
frstor
out
dec
test
iret
xchg
repnz
xor
scas
test
pop
lds
jmp
add
xchg
clc
popa
ret
incl
pop
inc
idivl
dec
lret
les
movsb
mov
in
mov
dec
test
call
arpl
mov
xor
or
jne
push
push
add
enter
lcall
test
jns
add
ds
les
adc
test
rcr
test
xchg
pop
stos
add
mov
lea
push
fwait
into
in
cmpsb
in
inc
lret
int3
mov
xor
push
outsb
test
repnz
aad
xor
jmp
insb
mov
clc
cmpsl
test
pop
out
movsl
add
xchg
or
mov
sti
ret
mov
movsl
rcrb
jp
mov
in
stos
or
in
stc
out
jmp
mov
aam
test
sbb
sbb
jp
fisttps
adc
dec
fwait
test
repnz
add
mov
mov
adcl
lret
sub
jne
adc
out
les
pop
fs
mov
mov
test
push
sub
out
arpl
pop
pop
or
xchg
std
mov
pop
sahf
mov
leave
sub
stc
xchg
or
pop
test
bound
out
dec
insl
movsl
sbb
fists
mov
or
and
aaa
leave
test
sbb
or
adc
mov
test
or
or
jo
icebp
fiadds
xchg
inc
mov
xor
jp
imul
push
pop
inc
xchg
cmp
sbb
cwtl
ds
test
fsubrs
jl
lds
arpl
out
test
mov
sahf
test
ss
repnz
xor
hlt
sub
out
ret
cltd
test
push
std
push
js
mov
lods
mov
jle
cmpsb
adc
pop
andl
mov
shr
dec
inc
sub
jb
mov
add
jno
test
xor
mov
test
sub
cmp
test
rorb
js
sub
lcall
xor
test
test
xchg
shll
mov
mov
push
add
add
pop
fnstcw
ret
mov
push
outsl
into
mov
adc
in
jmp
inc
pop
movsl
mov
mov
es
aad
test
xchg
xchg
shrl
dec
insb
out
les
test
fstpl
mov
stos
cmpsb
cmpsl
xor
movsb
arpl
push
andb
aad
mov
mov
adc
sahf
push
inc
mov
arpl
push
sbb
mov
shr
test
arpl
pop
into
push
and
je
inc
int
mov
pop
push
outsb
testb
popa
adc
fdivrs
in
dec
jle
enter
jae
mov
push
lret
pop
imul
mov
rol
dec
mov
cmp
sub
sahf
adc
lea
shll
out
test
pop
stos
mov
pop
sbb
cmp
fcompl
shr
lret
push
mov
push
or
cmp
test
inc
mov
dec
pop
mov
rorl
leave
movsb
add
mov
xorb
test
mov
arpl
lret
and
add
mov
mov
jbe
and
jmp
stos
adc
mov
push
jle
aad
test
mov
mov
lods
and
mov
pop
les
mov
aas
les
fs
jg
xor
fnstenv
push
test
fidivrl
aas
repnz
mov
xor
jns
scas
pusha
mov
sti
outsl
adc
jne
cmp
pop
test
push
push
pop
cltd
and
shlb
inc
or
mov
mov
mov
test
vcvtsd2si
pop
in
sbb
sub
sbb
mov
ss
lods
jge
mull
insl
cltd
test
cmpsl
add
mov
dec
and
add
mov
insb
push
ss
mov
outsb
inc
jbe
and
sbb
out
movsb
cmp
je,pt
adc
test
sub
repnz
test
jmp
mov
lods
pop
and
negb
int
jmp
jno
aad
cmp
lock
dec
jge
cmp
mov
pop
xor
popa
adc
iret
aam
int3
mov
pop
fiaddl
jmp
fistl
fldl
out
test
jbe
test
pusha
mov
xlat
in
call
dec
movsb
sub
gs
add
lods
and
and
ret
out
pop
adcb
fadds
inc
cmpsb
inc
loopne
and
or
mov
out
aam
iret
or
outsb
test
inc
inc
dec
aad
test
cmp
xor
inc
sbb
xor
enter
outsl
in
jbe
mov
mov
test
rcrl
leave
imul
push
mov
test
pop
cmp
mov
xor
fwait
stos
jmp
add
jl
stos
test
xor
push
in
add
outsl
xor
jg
fists
cmpsl
xchg
cmp
test
lcall
test
out
and
push
push
test
stos
pusha
dec
ret
test
data16
test
jge
hlt
lds
xchg
flds
out
test
loop
stos
or
and
cmpsb
mov
jnp
scas
cmpsb
dec
addr16
sub
test
cmp
xor
cmc
fsubs
pop
test
pop
out
jl
out
addl
pusha
iret
test
or
jg
xchg
stc
cmc
test
fimuls
inc
push
arpl
push
push
sub
js
add
sti
je
out
mov
sub
pop
and
outsl
jg
and
ss
ja
sbb
mov
js
arpl
lock
or
fcmovnb
sar
mov
mov
int3
jo
jge
push
test
mov
xor
xchg
mov
mov
xor
mov
ljmp
xchg
dec
in
or
push
loope
dec
dec
out
or
xor
push
jbe
lock
aaa
test
xchg
ljmp
mov
jmp
shlb
push
xchg
test
movsb
out
inc
test
daa
lods
mov
mov
lret
out
and
jle
dec
and
test
pop
push
and
aam
mov
dec
pop
popf
bound
mov
fimull
movsl
xchg
out
mov
mov
les
add
or
test
loopne
mov
adc
cmc
and
add
jmp
shlb
popf
flds
push
sbb
cmp
test
hlt
and
jmp
in
mov
rcr
cmp
test
mov
mov
popa
stos
sbb
xchg
jae
test
push
in
add
dec
popf
hlt
xorb
lods
stos
and
in
aas
sahf
loope
test
add
ss
in
out
popf
sar
or
out
mov
jg
inc
fs
sbb
test
stos
call
gs
mov
or
icebp
insb
sbb
out
mov
sub
out
test
ss
sbb
test
fsubrs
jns
sbb
inc
daa
or
xchg
lahf
xor
jae
lock
inc
inc
aad
out
test
addr16
leave
das
int3
mov
sub
sahf
push
inc
mov
mov
fdivrl
movsl
mov
mov
push
sub
iret
stos
push
cmpl
jns
mov
test
fcoms
sub
in
xor
xchg
outsl
add
xchg
sbb
dec
test
xlat
clc
push
jnp
in
insb
rcrb
mov
dec
nop
mov
push
mov
sbb
mov
loopne
repnz
xor
add
add
jmp
gs
in
pop
out
xchg
aad
test
push
push
in
lcall
lret
mov
lcall
fildl
data16
out
sub
mov
ljmp
fadds
jle
mov
inc
cld
fidivl
test
push
pop
sub
jmp
gs
inc
ja
jge
test
mov
test
in
into
jg
js
cs
and
mov
sub
pushf
clc
test
or
incl
movsl
jb
ja
jp
add
imul
mov
mov
mov
sbb
sbbb
addr16
dec
mov
pop
xor
test
sub
arpl
in
inc
jns
mov
add
mov
jecxz
adc
mov
loope
sub
in
pop
rclb
movsl
mov
test
jno
jmp
test
and
stos
outsl
mov
sahf
inc
ja
je
push
mov
xor
stos
les
mov
xor
pop
xchg
stos
test
jmp
fcompl
add
jmp
mov
xor
test
xor
sbb
test
push
pop
lret
add
in
out
and
inc
stos
test
aas
mov
in
add
leave
push
jb
and
push
mov
incb
dec
cmp
ljmp
call
mov
out
test
pop
cltd
inc
add
push
incb
lds
dec
inc
mov
lea
mov
jmp
test
shll
push
lods
fstpl
notb
outsb
addl
incb
pop
jmp
bound
mov
test
lock
out
ljmp
rorb
aad
inc
shll
and
daa
in
dec
adc
mov
cld
stos
push
sahf
sbb
pop
mov
sub
add
ljmp
push
mov
mov
cmp
mov
cmp
jo
out
ret
enter
mov
inc
sub
aas
test
sahf
xchg
pop
out
test
repz
rolb
test
and
stos
mov
clc
test
sub
mov
imul
xor
clc
repz
daa
cltd
js
mov
cmp
pop
jle
in
repnz
insb
scas
inc
neg
pop
test
mov
shll
jge
inc
enter
cwtl
push
out
and
je
test
mov
push
mov
pop
call
test
ljmp
push
test
ret
out
movsb
shr
movsb
cmovne
into
loop
fnsave
std
insl
mov
pop
cmpsb
ficoms
mov
in
sub
and
fimull
pop
cwtl
xchg
sbb
lods
mov
js
push
int3
ret
mov
nop
aad
lcall
inc
lods
xor
dec
dec
mov
test
dec
jno
mov
cltd
mov
repnz
imul
push
in
and
xchg
mov
and
cmc
fcoms
mov
in
sub
repnz
push
lods
test
jne,pt
insb
cmp
rol
rclb
mov
repnz
rorl
add
ror
bound
test
out
fsubr
mov
arpl
sbb
ret
test
movlps
jne
mov
popf
cmp
cmpsb
pusha
stos
pop
loop
cli
xor
cmp
movsl
test
adc
jb
or
pop
mov
test
insb
outsb
xchg
outsl
inc
js
bound
pop
dec
mov
push
aam
push
cmpsb
scas
out
arpl
sub
mov
in
popa
adc
adc
mov
xchg
inc
inc
mov
scas
sub
or
aaa
mov
xchg
negb
push
sbb
loopne
orl
out
mov
ds
imull
ljmp
test
clc
and
mov
push
test
idivl
push
pop
lahf
push
pop
outsb
imul
cmp
test
int3
cmpsl
decb
jmp
mov
sub
loop
pop
xchg
nop
dec
xor
mov
sub
test
orb
and
mov
arpl
lods
arpl
popa
pushf
test
in
push
cmp
jmp
cmp
mov
iret
notb
fwait
aad
mov
jle
out
ja
sub
rolb
pop
sub
mov
and
stc
push
imul
gs
inc
insb
pop
dec
jo
in
frstor
cmc
orl
dec
test
test
in
sbb
jge
adc
std
loop
test
pop
call
stos
sahf
ljmp
push
pusha
pop
mov
aaa
test
es
dec
inc
stc
test
push
push
mov
movl
push
ja
sahf
lahf
lea
pop
dec
loop
testl
push
test
into
or
add
dec
test
dec
lahf
mov
inc
nop
sbb
pushf
adcb
clc
xchg
adc
test
xlat
stos
lcall
inc
je
add
jb
test
mov
or
das
addr16
stos
add
imul
rol
cmpsl
mov
xchg
test
stc
add
cmp
test
xchg
dec
shr
lds
mov
test
pop
sbb
jo
in
sahf
dec
xor
dec
mov
add
sbb
jl
push
loop
shrb
xchg
stos
cmc
dec
inc
pusha
ljmp
pop
sbb
or
sar
mov
int
arpl
imul
sti
inc
sbbb
push
mov
test
sbb
outsb
or
xchg
test
daa
ljmp
dec
or
mov
aam
lods
xor
cltd
jmp
mov
sti
push
lods
js
test
test
enter
mov
mov
in
clc
fs
add
xor
rcll
cwtl
dec
jecxz
std
inc
or
dec
test
lret
cli
movsb
mov
adc
jnp
pop
iret
sub
daa
sar
test
cwtl
stos
sub
xchg
push
in
imul
dec
cwtl
test
pop
pop
inc
repz
mov
xor
repnz
icebp
in
mov
fiaddl
push
imul
iret
in
test
inc
inc
mov
xchg
pop
jb
push
xor
fucom
fcmovnbe
mov
repnz
adc
test
mov
test
adc
xor
repnz
push
jmp
xor
pop
xchg
out
aaa
test
add
mov
jb
jmp
test
enter
mov
stos
arpl
jmp
sbb
or
bound
stos
pop
ret
pushf
out
repz
test
mov
test
popa
in
iret
rolb
test
pop
vmovupd
test
testb
loope
sahf
xor
in
pop
inc
add
mov
lret
test
loop
icebp
test
pop
into
ljmp
push
sub
lods
or
test
add
ss
add
das
fwait
inc
daa
mov
test
xchg
push
insb
rolb
pop
xor
outsb
jmp
enter
pusha
aaa
test
jb
ja
mov
xchg
test
fstpt
movsb
shl
mov
mov
ljmp
leave
xchg
imul
or
test
mov
arpl
add
mov
mov
movsl
mov
in
out
pop
push
ss
push
mov
add
lea
and
sbb
les
xchg
or
out
mov
aam
or
cmp
dec
inc
les
push
jp
sahf
scas
xor
mov
jns
ljmp
mov
mov
test
sub
mov
test
repnz
push
test
cld
sub
es
mov
flds
push
aas
sub
xchg
xchg
aad
pop
movsb
bound
sub
enter
pop
cmp
out
inc
les
mov
hlt
iret
decl
sub
add
neg
pop
mov
cmpsl
movsb
testl
dec
cltd
stos
jno
sub
movsb
jge
push
sahf
test
sti
into
and
adcb
mov
sahf
decb
sub
sub
out
gs
fidivrs
lds
push
out
sbb
rol
adc
sub
pop
scas
in
fs
mov
cmpsl
mov
or
and
hlt
jle
inc
adc
aam
sbb
cmp
in
dec
cld
test
or
dec
adc
aad
in
mov
loopne
sbb
and
inc
jmp
out
xor
mov
mov
inc
test
sub
cmp
test
push
ds
test
out
sbb
mov
test
insb
xlat
hlt
divl
lods
fsubr
call
jecxz
add
in
push
pop
test
or
adc
cwtl
iret
fcompl
test
adc
sahf
rclb
sub
mov
sub
div
fidivrl
adc
nop
cmp
loope
push
jecxz
cmc
xchg
cmpsb
test
dec
mov
in
test
add
xor
fsubl
jnp
and
hlt
nop
test
shrb
add
adc
lods
push
cmp
or
and
jne
filds
inc
pop
add
jle
mov
jae
orb
dec
xor
rclb
mov
lret
cli
jbe
test
sbb
mov
or
lock
xchg
and
cmp
sbb
or
push
mov
arpl
pop
int3
test
insb
stc
out
repnz
adcl
rolb
hlt
loop
negb
aam
xchg
xchg
jg
mov
lahf
leave
les
in
fwait
or
les
adc
out
test
jp
jae
mov
xor
lds
int3
mov
inc
bound
add
add
arpl
test
clc
inc
pusha
test
xchg
inc
lcall
pop
jge
iret
sub
imull
add
cmc
hlt
in
aad
test
rorb
test
cmpsb
ja
arpl
sbb
stc
test
mov
dec
test
scas
sahf
cmpsb
inc
incb
divl
dec
lock
push
ljmp
nop
jnp
mov
jmp
repnz
test
cmpl
mov
and
mov
ljmp
test
push
sbb
jae
in
insb
xor
sbb
adc
ret
mov
inc
pusha
bound
data16
and
es
in
subl
sbb
insb
imul
idivl
mov
push
enter
clc
jl
cmp
sub
in
cli
daa
pop
dec
in
rorb
movsb
mov
jg
push
les
cmpsb
rcll
loopne
xlat
mov
or
lcall
inc
movsb
dec
icebp
push
test
mov
test
xchg
lahf
xchg
aam
or
fwait
mov
and
mov
fnsave
loopne
ret
cmp
int3
or
xchg
pop
mov
jmp
psubw
adc
hlt
add
add
mov
pop
loop
bnd
test
xchg
xchg
pushf
inc
cld
or
pop
mov
in
mov
aad
movsb
lret
jbe
daa
lods
mov
inc
arpl
sahf
lea
and
js
pop
sbb
lahf
loopne
xor
inc
je
leave
es
movl
inc
test
or
cmp
pop
lcall
xchg
mov
test
adc
js
push
push
dec
add
rolb
sub
pop
mov
xchg
and
pop
orb
movsl
inc
or
pop
pop
std
mov
pop
lahf
xchg
sub
xchg
push
shrb
int
aad
test
adc
dec
or
mov
loop
xor
mov
xchg
sbb
inc
mov
outsl
fbld
jl
iret
dec
fdivrs
xchg
sbb
out
mov
mov
mov
repz
cmc
jg
dec
and
sbb
xchg
orb
pop
call
fwait
jno
inc
pop
test
mov
fnsave
jae
popa
in
adc
aas
inc
sbb
mov
jb
fistpl
test
arpl
push
popa
fstpt
sub
test
inc
faddl
test
mov
pop
dec
inc
jbe
dec
sbb
mov
xchg
in
push
push
dec
test
cmpsl
xchg
les
scas
call
shrl
mov
jmp
sbb
sbb
loope
bound
ret
das
enter
test
leave
aaa
scas
repnz
or
mov
test
ja
inc
bswap
pop
movsl
test
push
mov
movsb
and
insb
mov
notl
pop
jg
mov
xor
pop
xchg
fcmovu
mov
les
lods
sbb
and
pop
cs
add
int
add
mov
sub
test
sahf
jb
jne
jl
and
outsb
mov
test
jnp
sub
insl
ret
or
lds
adcb
js
inc
in
jg
inc
sti
inc
push
mov
test
ja
cmp
dec
nop
mov
icebp
sub
mov
mov
mov
hlt
add
bound
and
sub
add
dec
repnz
movsl
pop
test
popa
push
movsb
inc
jg,pt
mov
and
mov
sub
xor
test
movsb
mov
add
jb
imul
test
add
xchg
cwtl
xor
addl
ljmp
imul
mov
repz
sarl
test
pop
jmp
cmp
pop
adc
sbb
lahf
test
repnz
testl
mov
aaa
ljmp
mov
fadds
leave
fiadds
les
or
test
and
add
in
fs
add
test
out
test
cmc
pusha
jmp
rcrl
sbb
incl
pop
mov
test
test
mov
push
daa
dec
insl
roll
test
cmpsl
push
add
adc
test
gs
addr16
shrb
inc
aaa
pop
mov
cmp
mov
xor
xchg
xor
scas
push
test
loop
jno
movsb
mov
jge
push
or
jl
int3
dec
pushf
popa
insb
hlt
rolb
stos
inc
add
orb
test
out
push
shl
dec
test
shl
dec
ljmp
jmp
stos
sbb
sub
imul
out
test
pop
jge
bound
arpl
pop
add
xchg
mov
mov
andl
jl
dec
test
push
imul
add
adc
add
dec
idivb
mov
enter
push
test
std
inc
jmp
lea
xchg
add
push
clc
cmpsb
xor
and
jno
sbb
mov
fidivrl
cmpsb
xor
ljmp
pop
rorl
inc
mov
bound
ja
sub
loope
movsb
loopne
test
jae
xchg
xor
mov
test
push
int
test
pop
sub
test
push
in
adc
out
push
mov
stos
insb
setle
fistpl
roll
repz
dec
or
in
mov
mov
gs
pop
test
fiadds
add
mov
test
jns
shlb
test
out
lahf
dec
test
lret
or
jp
frstor
cwtl
in
mov
inc
pop
arpl
shlb
sbb
test
inc
mov
or
cmc
imul
aas
stos
push
xchg
adc
jne
push
mov
mov
test
mov
imul
nop
test
sbb
mov
pushf
sbb
fldl
mov
ljmp
test
movsb
xor
push
and
cmc
movsl
inc
xchg
leave
push
mov
call
cmp
movsb
mov
sub
rcrl
push
jg
daa
add
cmc
mov
pop
pop
sub
test
bound
push
jb
cmp
sub
inc
or
aaa
add
ficompl
add
test
stos
jecxz
mov
test
test
dec
dec
loopne
xor
test
mov
adc
mov
mov
mov
rcll
mov
sbb
int3
pop
mov
repz
and
push
cmpsb
les
dec
pop
jecxz
inc
test
cwtl
ljmp
sub
test
or
aad
mov
cltd
add
ret
fstp
inc
test
in
addl
cltd
test
sub
in
push
dec
mov
pop
xchg
inc
les
sub
jecxz
xchg
std
or
stc
mov
xor
in
loope
mov
jmp
test
pop
mov
cli
out
insl
in
mov
test
or
sbb
je
test
mov
out
loopne
out
and
ret
out
push
cmp
xchg
dec
sbb
shlb
movsb
shrl
sub
lahf
mov
push
outsb
push
in
out
cld
test
bound
pop
enter
les
mov
mov
loop
mov
xor
test
insb
sarb
test
sbb
or
pop
and
mov
sbb
js
cs
adc
addr16
xchg
mov
add
clc
mov
xor
jbe
mov
inc
out
mov
in
mov
cwtl
inc
dec
xor
les
int
cmp
cmp
test
adc
pop
push
cmp
in
into
loopne
push
test
ljmp
mov
push
push
mov
mov
add
loop
sub
add
jl
or
flds
popf
pusha
stos
lods
fbstp
push
jg
test
cmp
mov
gs
repz
mov
jnp
je
in
test
decb
cmpsb
arpl
mov
add
mov
sub
imull
mov
lods
lods
pop
sti
sub
or
test
pop
push
cmp
pop
xchg
inc
daa
int
shrl
cmp
jne
inc
cmpb
mov
dec
or
xchg
cmpsl
mov
cmc
ret
aad
jle
inc
test
fs
cld
mov
mov
roll
movsb
sbb
push
lret
stos
inc
add
and
frstor
xor
ja
jbe
daa
ret
arpl
insb
adc
rcl
andb
xchg
test
test
out
movsl
test
lods
roll
dec
xchg
push
mov
test
add
push
les
jp
jb
nop
mov
test
cmp
test
sbb
pop
neg
fldt
mov
mov
mov
xchg
sbb
pop
xor
test
lea
cltd
test
xlat
xchg
iret
cmpsb
fsts
imul
xchg
or
insb
jo
and
pop
cmc
or
sbb
sbbb
leave
outsl
in
cmp
jbe
inc
test
and
xchg
and
in
pop
sub
test
mov
dec
movsb
jno
aad
mov
in
dec
cmpsb
adc
icebp
rolb
jl
in
inc
push
cmp
test
mov
pop
dec
jle
inc
test
inc
loop
add
jmp
sub
ss
sahf
shlb
dec
outsb
in
in
pop
xchg
cli
and
adc
sub
sbb
xchg
hlt
jb
stos
xchg
imul
xchg
push
loope
out
sub
jp
cwtl
dec
test
mov
and
test
loope
test
es
lret
dec
shlb
sbb
mov
enter
int3
ret
hlt
pop
je
in
inc
mov
cmp
cmp
pop
pop
out
test
cmp
and
int
sarl
cld
lahf
popl
and
test
and
test
test
gs
ljmp
cmp
mov
xor
jbe
xchg
addb
lret
pop
or
cmpsl
test
cs
aad
and
outsb
test
rcl
loop
test
dec
pop
cli
in
inc
add
xchg
popa
test
mov
rolb
shrb
mov
jmp
or
xchg
mov
insl
pop
adc
lret
in
aad
test
cli
push
pop
sub
cmp
mov
cmp
mov
movsb
mov
mov
mov
mov
loopne
push
cmpsb
out
testb
test
xlat
addr16
in
jmp
sbb
mov
inc
mull
lcall
mov
out
sti
bound
std
sub
mov
jle
add
push
jge
inc
test
sbb
cmp
mov
jp
pop
cmp
daa
in
ss
test
ret
sbb
mov
arpl
je
fwait
aas
mov
xchg
bound
mov
test
cmp
xor
xor
bound
mov
lds
adc
push
inc
bnd
or
adc
bound
mov
ret
divb
test
sbb
ljmp
out
sbb
mov
rorb
xor
js
daa
arpl
push
test
or
xlat
test
aam
sbb
lock
loop
mov
imulb
jg
push
les
test
cwtl
in
mov
sbb
scas
mov
hlt
and
mov
mov
jnp
add
ficoms
faddl
add
shlb
xorb
inc
and
je
mulb
movl
andl
popf
xchg
inc
movsl
mov
adc
inc
out
push
lret
and
dec
test
iret
xchg
mov
es
scas
aad
test
sbb
push
push
imul
xor
movsb
xor
inc
into
sbb
out
sahf
pop
mov
mov
testl
lds
xorb
loop
inc
pop
jo
mov
jns
movsb
fildl
or
cmp
dec
loope
adc
xchg
xchg
xorb
je
mov
test
outsl
insb
shl
cmp
push
mov
pop
or
leave
dec
in
sub
stos
pop
ljmp
pop
std
push
test
out
test
sahf
iret
icebp
mov
or
movsb
xchg
insb
out
enter
mov
jecxz
leave
xchg
cmp
and
fisubrs
fcompl
out
jecxz
sbb
jb
popa
sub
addr16
jae
lret
inc
mov
mov
jmp
jg
ljmp
test
cmpsb
loopne
rorb
fs
dec
call
mov
ja
mov
add
test
lret
lods
leave
test
insb
adc
popa
or
cmpsb
mov
int
mov
jb
xchg
mov
xchg
mov
popa
mov
jg
scas
sub
pop
xchg
frstor
fs
fld
mov
in
jne
stos
into
or
in
jg
jle
shr
pop
sub
sbb
push
jns
sub
ljmp
mov
xchg
push
test
mov
jge
les
in
mov
xchg
mov
mov
popa
cmp
movsl
fsubrl
mov
out
les
incb
jg
mov
shll
ja
mov
sub
jne
movsb
mov
sar
ret
js
mov
mov
ss
test
jmp
pushf
xor
mov
mov
xchg
pop
in
xor
addb
adc
inc
inc
sahf
mov
movsl
mov
inc
cmpsb
fstpt
ljmp
and
cmpsl
test
movsb
xchg
push
sub
iret
aam
sahf
std
cltd
call
mov
mov
ljmp
ret
movsb
sbb
repnz
and
xchg
or
mov
mov
xlat
stos
jmp
jmp
jb
pop
mov
movsb
lret
push
xor
and
out
movsb
jge
jae
lods
add
xor
out
dec
out
adc
sub
jo
mov
jle
fadds
xor
aad
pop
xchg
push
in
adc
test
lcall
mov
outsl
fs
xchg
frstor
andl
test
test
in
inc
mov
cmpsb
int3
test
mov
pop
add
stos
test
call
out
test
add
out
lods
dec
std
mov
pop
les
shrb
mov
faddl
pusha
test
insl
and
les
outsl
mov
xchg
in
subb
shl
mov
les
mov
out
add
repnz
stc
mov
test
mov
sub
sti
mov
mov
aaa
lahf
in
ret
xchg
test
scas
mov
inc
pop
lods
mov
xchg
mov
test
stos
mov
testb
lret
sbb
adc
test
neg
or
xor
mov
jp
mov
in
mov
test
lods
sbb
cwtl
sbb
popa
mov
mov
cmp
frstor
push
test
inc
sub
sbb
adc
fnsave
sar
test
push
and
out
sub
mov
scas
cmp
mov
inc
mov
movsb
scas
sbb
mov
lock
xchg
mov
imul
shll
cmp
xor
sub
dec
pop
mov
repnz
popa
sbb
loop
jae
mov
and
repnz
mov
in
add
insl
jno
test
sbb
inc
out
lea
push
ret
cmpsb
mov
test
loop
mov
dec
pop
cli
adc
aaa
or
sarl
aam
add
sarl
test
xlat
mov
sbb
mov
test
std
xor
fcomps
jnp
loope
push
into
aam
stc
daa
mov
in
sahf
clc
js
xchg
adc
inc
push
xchg
les
adc
bound
inc
or
xchg
loop
popf
incb
xchg
arpl
popa
notb
test
cld
scas
mov
xchg
gs
clc
xchg
ljmp
xchg
lret
sahf
add
or
test
scas
nop
and
out
test
or
dec
shlb
mov
into
in
ja
pop
inc
test
mov
inc
test
jbe
jmp
cwtl
aas
mov
mov
orl
sbb
rcrb
lcall
lods
bound
hlt
mov
cmpb
js
test
xchg
jp
push
inc
or
dec
into
stos
jmp
es
add
pushl
lock
daa
test
add
mov
in
negb
mov
lea
cltd
push
repnz
test
cmpsb
cmpsl
imul
out
test
pop
ficoms
jno
test
insb
mov
add
mov
or
fnstenv
sub
dec
out
lahf
pop
sbb
adc
and
mov
jmp
notl
ljmp
xor
nop
gs
mov
aad
test
mov
test
lret
jae
mov
push
xchg
jno
dec
sbb
movsb
pop
xchg
mov
imul
repnz
test
jge
lods
sbb
push
or
mov
les
mov
pop
arpl
jae
out
pusha
cmp
addl
inc
cmp
test
push
xor
xchg
popa
xor
dec
test
inc
test
pushf
dec
sti
mov
into
insl
inc
push
shl
scas
rolb
test
mov
lods
test
sarl
inc
stos
push
jo
pusha
mov
test
out
jno
push
aas
scas
out
movsb
mov
inc
pusha
daa
int
test
dec
ret
lods
fstpt
outsb
arpl
pop
cmp
daa
in
test
jo
fildl
hlt
test
mov
and
xor
push
mov
idiv
jecxz
test
sub
jns
ljmp
adc
add
aam
mov
sbb
jle
das
sti
mov
cs
movsl
icebp
add
test
push
jmp
mov
insb
pushf
imulb
addr16
adc
xchg
punpcklwd
out
mov
addr16
and
xchg
mov
jae
jb
sahf
pop
ljmp
sbb
mov
inc
pop
xchg
les
mov
in
repnz
test
xor
xchg
mov
dec
add
jnp
pop
andb
pop
popa
pop
mov
adc
and
push
test
mov
test
mov
mov
scas
jl
ds
or
sbb
pop
dec
pop
dec
or
jnp
fwait
test
fldenv
sbb
lahf
int3
xchg
sahf
iret
sub
xor
aam
test
push
mov
ljmp
mov
push
je
test
aaa
add
sub
test
mov
insb
in
xor
mov
movsb
pop
arpl
pop
sub
mov
jnp
cmp
in
and
add
out
mov
and
xchg
inc
pop
mov
test
mov
lds
add
clc
imul
jbe
out
cwtl
test
mov
adc
test
loopne
xchg
and
clc
xor
dec
jnp
in
cld
cmp
cmp
cmc
rorb
repnz
push
xlat
cmp
add
aad
clc
test
cmc
push
out
and
sarl
ds
or
dec
inc
aad
out
dec
xchg
fstl
sub
mov
mov
mov
test
test
sub
or
in
imul
mov
sub
arpl
lcall
mov
ljmp
ds
mov
push
mov
cmp
mov
xchg
aaa
loopne
push
test
mov
aas
hlt
and
test
mov
call
mov
mov
test
repz
popa
jp
add
fs
iret
mov
mov
test
jb
cmp
push
aaa
hlt
test
pop
mov
popa
out
test
jecxz
jge
stos
fsubp
mov
test
sub
dec
test
fistl
shr
mov
sub
push
movsb
or
push
test
jp
fadd
jb
arpl
aaa
decb
imul
in
jg
insl
fiaddl
jmp
sub
or
cmpsb
pop
ds
pop
pop
das
jecxz
cmp
ret
mov
repnz
popl
inc
test
das
out
arpl
sbb
add
out
xor
push
out
test
xor
or
push
loop
mov
test
sub
mov
cmp
mov
xchg
int3
adc
roll
repz
cmp
sbb
add
aam
shl
or
out
rcrb
bound
sub
arpl
xchg
mov
mov
clc
aam
repnz
mov
lcall
test
mov
jmp
test
pop
push
xchg
jns
aad
test
fpatan
push
ret
mov
outsb
cmp
data16
addr16
xchg
sub
jmp
pop
in
fimull
adc
jp
gs
test
cmpsl
arpl
cmp
pop
mov
bound
cmp
pop
cmpsl
test
cmp
out
sbb
push
lea
mulb
inc
mov
or
popa
ret
addb
gs
test
mov
imul
mov
inc
aaa
arpl
xchg
xacquire
imul
dec
dec
add
sbb
cmc
or
mov
cli
or
mov
loopne
rorl
mov
fnstsw
mov
rcrb
test
jge
mov
mov
out
dec
cmp
xchg
arpl
add
test
pop
push
xchg
sub
arpl
adcl
xor
test
mov
mov
pop
ljmp
test
test
mov
fyl2xp1
push
mov
pop
push
sub
inc
sub
andb
cs
rcll
cwtl
cmp
scas
sub
mov
add
test
mov
push
mov
in
sub
xlat
mov
and
pop
cmc
jns
test
and
mov
jo
xlat
test
push
cmp
mov
test
dec
jp
xchg
lods
hlt
movsb
stc
in
repnz
ret
or
test
jle
es
xor
out
cld
out
test
fwait
xchg
test
xchg
sub
arpl
dec
pop
push
cmpsb
shlb
adc
sub
inc
xor
mov
jo
leave
pusha
outsb
cmp
mov
fwait
adc
xlat
jb
cmpsb
mov
sub
test
and
test
dec
test
stos
push
mov
test
bound
scas
sub
mov
mov
jmp
mov
sbb
or
cmp
addb
bound
ljmp
push
movsl
fildl
stos
xor
pop
mov
jne
or
lds
in
adc
decb
xlat
mov
loopne
insb
add
or
cmpl
aas
cmpsb
test
xchg
popa
xor
ljmp
fst
mov
or
insb
jg
ret
xchg
test
addr16
rol
popa
test
mov
rcr
or
pop
dec
ss
mov
dec
mov
mov
xchg
outsl
popa
arpl
push
cmc
jecxz
jno
out
adcb
test
jmp
lret
inc
jne
xlat
gs
test
js
cmpsb
xor
push
les
fistpl
cmp
sub
add
shrl
or
cs
ja
cmc
mov
sahf
test
test
and
inc
push
mov
shr
movsl
les
cs
pushf
or
call
out
push
rcl
test
je
xor
cmp
cwtl
inc
xchg
dec
movsb
js
ljmp
cmc
fwait
add
cmp
loopne
lahf
lds
cmpsl
aam
inc
iret
mov
loop
mov
lods
jmp
jle
movsb
mov
sbb
rcr
mov
mov
ja
test
scas
sub
xor
and
adc
outsl
test
adc
aas
xchg
cmp
ret
imul
test
push
int3
mov
pop
cli
adc
pusha
loope
fildl
cmpsb
mov
insl
inc
les
rorl
out
ss
pushf
cmp
add
or
add
mov
sahf
rorl
jg
ret
jns
ret
sub
test
out
pop
jg
addl
out
mov
xchg
test
insb
int3
pop
add
sub
mov
cmp
nop/reserved
movsb
ss
nop
subb
out
in
mov
cmpsl
aaa
mov
clc
xchg
fstl
hlt
dec
adc
daa
repnz
test
mov
ret
mov
int3
scas
mov
mov
imul
enter
sbb
int3
inc
mov
mov
or
add
cwtl
aas
fwait
icebp
pusha
sub
daa
or
outsb
in
test
and
mov
adcl
test
test
adc
pop
dec
cmpsl
jge
icebp
xor
in
jb
inc
imul
adc
cld
out
xchg
add
test
xchg
pop
lcall
dec
lret
es
ret
and
loope
test
jg
push
pushf
sub
xadd
loop
jp
ss
les
jno
xchg
repnz
popa
and
cmc
mov
push
mov
popf
test
aad
pop
aad
xchg
lds
sbb
xor
mov
movsl
test
stos
mov
test
cmp
mov
notb
fcomp
scas
adc
lea
sub
cmpsl
sahf
test
jo
cmpsb
movsl
jb
add
xchg
icebp
dec
ffree
inc
or
popa
push
dec
in
xchg
leave
cmp
push
sbb
mov
rolb
in
add
aaa
add
dec
iret
or
xchg
xchg
test
push
adc
lods
sub
push
jnp
arpl
mov
les
js
mov
add
and
test
push
ret
adc
test
mov
in
aaa
or
xchg
mov
or
pop
loope
and
dec
push
sti
jp
mov
sub
pop
negl
sbb
add
xchg
mov
cmp
sub
mov
dec
jb
inc
mov
insb
push
fldcw
sbb
pop
dec
lcall
jl
in
je
add
or
cld
xor
test
and
push
ja
inc
test
jo
jmp
outsl
inc
or
into
lock
or
jp
cmpsb
mov
and
xchg
insl
sbb
test
mov
adc
mov
push
sti
jle
and
stos
test
aaa
xor
mov
mov
dec
or
sti
mov
dec
xor
push
shll
nop
mov
mov
sbb
popa
xlat
sahf
test
lret
loope
cmp
fwait
dec
push
xor
cmp
leave
lods
mov
adc
sar
xchg
rep
test
add
clc
mov
test
pop
mov
sub
lods
mov
gs
jecxz
test
orb
inc
sbb
adc
movsb
je
xor
int
mov
jge
fs
test
add
aam
insl
movb
xchg
lock
push
mov
adc
push
xchg
scas
test
mov
test
repz
mov
test
sbb
jno
fstl
lcall
into
mov
lock
sahf
rolb
fisubrl
mov
or
adc
sbb
inc
push
push
push
jne
mov
out
mov
mov
sti
mov
aam
lods
out
mov
cmpsl
ss
cld
mov
add
fsub
lods
sbb
pop
jbe
sbb
das
repnz
and
in
sub
sub
pop
add
inc
xchg
in
lret
bound
orl
push
push
dec
pop
test
jge
dec
xchg
mov
mov
dec
test
pop
inc
add
dec
and
pop
test
aaa
adcb
add
nop
push
mov
fistpll
fiadds
and
xor
xchg
test
mov
and
push
mov
sbb
sbb
add
ss
imul
and
vmovaps
in
js
jg
jnp
das
loopne
les
shr
cmpsl
mov
lds
test
cmovle
push
dec
cltd
lret
ds
xchg
ja
sub
popa
inc
cmp
jmp
aam
xchg
movsl
fdivrl
arpl
push
subb
and
loop
fsub
push
xchg
xor
push
test
enter
mov
push
or
cmpsb
inc
test
test
std
in
or
pop
adc
fxch
adc
popf
aaa
and
and
scas
mov
dec
stc
cmp
aam
aad
fwait
dec
sub
test
stos
pop
inc
iret
lock
xchg
add
mov
cmp
shrb
fwait
jp
xorl
mov
out
cmp
jbe
mov
push
fs
movsb
pop
mov
gs
and
test
cli
jl
fsubrs
dec
ds
pop
fsubr
out
inc
xor
push
je
test
dec
in
and
testl
and
mov
sti
je
lret
sbb
mov
test
ret
jge
mov
lods
int
cmp
insl
stc
movsl
push
mov
cmp
packuswb
gs
inc
imul
lcall
sub
bound
lret
mov
lds
scas
fldenv
inc
daa
jl
add
cmovp
push
stos
push
mov
aad
test
fildl
pop
pop
movsl
les
in
add
pushf
out
push
lds
mov
mov
mov
mov
bound
add
cmc
add
aam
gs
sbb
or
movl
mov
movsl
mov
test
sbb
jp
or
sahf
sub
int
fnsave
mov
push
adc
popl
mov
movsb
ds
call
in
push
daa
shrb
das
add
faddl
jg
sbb
push
test
notb
dec
inc
sub
sbb
jae
out
shrb
test
cmc
divl
adc
testb
les
xchg
or
stos
or
mov
jae
pop
add
stos
repz
hlt
mov
addb
add
mov
es
add
xor
bound
jge
sub
fsubl
and
cmp
into
test
lcall
dec
add
mov
add
mov
les
imulb
pop
sub
fdivs
mov
or
mov
push
xlat
divb
les
xor
and
mov
sti
adc
movsb
push
lds
xor
aam
xchg
dec
xchg
pop
adc
in
mov
ja
or
inc
arpl
es
mov
mov
dec
addr16
es
sbb
addl
jbe
xor
test
repz
xor
mov
xlat
mov
aas
inc
test
out
push
movb
ja
test
mov
lea
sbbl
xchg
clc
add
bound
cli
test
mov
mov
shrl
mov
aas
les
xlat
sti
pop
lret
jp
jl
mov
lcall
and
push
out
test
pusha
in
in
loope
lea
or
mov
inc
test
std
mov
jbe
mov
push
movsb
cltd
sti
gs
inc
xchg
xlat
xorb
loop
or
mov
rclb
pop
sub
bound
lcall
out
mov
add
mov
xor
mov
xor
les
cmpsl
je
movsb
sub
loop
jmp
ret
aam
aad
push
sbb
fdivrs
dec
orb
test
cli
push
cmc
movsl
or
pop
xchg
jecxz
mov
add
in
mov
scas
mov
dec
add
in
fwait
push
mov
push
or
repnz
pop
test
mov
xchg
lds
repz
sub
pop
pop
inc
inc
mov
push
ds
scas
aas
popf
arpl
rclb
dec
xor
mov
cmp
repnz
xor
jg
mov
sbbb
test
in
or
test
mov
sub
push
addl
cs
cltd
jl
sbb
popf
or
and
int
xchg
out
ret
adcl
push
mov
bound
gs
mov
and
push
dec
iret
adc
out
cs
push
in
cs
push
fldt
add
in
push
mov
add
test
adc
sub
arpl
scas
add
andl
cmc
xchg
les
or
mov
repz
pop
cmpsl
adc
push
movsl
or
mov
adc
es
and
int3
xor
or
lock
je
cmp
fstps
mov
cwtl
dec
movsb
paddd
xor
jge
mov
pop
inc
cld
mov
mov
and
cmp
out
dec
inc
jne
and
mov
mov
movsl
cmp
push
fbstp
and
push
cmpsl
ljmp
pushf
js
testl
add
movsb
test
or
mov
xchg
mov
cmpsl
movsl
inc
into
in
push
mov
shlb
push
pop
fbstp
rcll
add
aas
xchg
test
sbb
pusha
push
arpl
notl
jns
dec
sbb
xor
test
lea
or
pop
cmp
pop
icebp
dec
lahf
mov
mov
in
sahf
cwtl
push
mov
test
sbb
mov
test
add
adc
dec
lock
xchg
or
adc
sub
les
mov
subb
mov
nop
stos
mov
lea
dec
cs
ret
jne
mov
fs
pop
mov
inc
mul
inc
cmpsb
arpl
shr
dec
xlat
jb
and
aam
xchg
dec
xor
mov
bound
les
enter
xlat
cmp
test
push
shr
sbb
xchg
mov
icebp
or
dec
sub
pop
adc
test
sub
pop
jecxz
mov
mov
loope
adc
pop
mov
shrl
sub
xor
daa
sub
addr16
jo
stos
inc
mov
push
aaa
cld
out
mov
xor
ror
test
sub
xor
popa
jecxz
repz
repnz
rorl
pop
dec
jnp
sub
fldt
fs
inc
mov
mov
push
pop
xchg
sahf
mov
xchg
add
test
sbb
mov
pop
mov
jne
test
mov
shl
aaa
sub
insb
sahf
out
mov
psadbw
leave
test
sbb
iret
jo
inc
and
mov
arpl
mov
lea
sbb
add
ja
bound
push
test
test
fsubrl
jo
and
cmpsb
cmp
push
jmp
repnz
pop
mov
aas
into
mov
loopne
xchg
pop
jmp
ds
jne
test
mov
inc
jno
test
pop
ret
xor
jg
stos
and
push
mov
jecxz
test
sub
pop
pop
sub
adc
jb
les
cmp
test
dec
jno
dec
pop
cmp
sub
push
lea
add
adc
call
xorb
or
in
sub
fwait
sbb
mov
std
xchg
cmpsl
jne
mov
ss
rcl
add
or
mov
add
and
insb
movsl
dec
mov
cmpsb
dec
cmpsl
xor
xor
aaa
adc
scas
inc
adc
mov
lock
bound
sub
push
pop
add
ja
bound
loope
cmpsl
fisubrl
mov
gs
cmp
add
push
cmpsl
mov
inc
pop
and
xlat
lds
mov
fwait
add
movsb
iret
clc
jg
sub
push
adcb
jbe
mov
test
adcb
sub
xchg
ret
nop
pop
adc
clc
inc
adc
mov
test
push
jecxz
adc
test
rol
stos
popa
aas
inc
add
mov
frstor
xor
add
insl
jo
sbb
mov
fmul
faddl
and
fdivl
or
subb
in
pop
popf
sub
cmpsl
lret
test
je
addr16
mov
jmp
mov
lret
test
sbb
in
xorb
insb
sarl
mov
mov
pop
mov
test
lret
movl
inc
test
imul
push
sub
cmpsb
and
xor
sbb
test
leave
push
jne,pn
in
aad
mov
xchg
inc
or
into
mov
adc
jmp
cld
xchg
jo
adc
imul
add
outsb
out
fs
adc
test
mov
and
mulb
movsl
mov
lret
scas
jbe
fcomip
test
int3
loope
cwtl
xor
xor
add
ss
mov
insb
insl
jnp
stos
mov
push
popa
sub
addr16
movsb
in
arpl
mov
xchg
test
dec
dec
dec
movsb
xor
arpl
inc
test
rsqrtps
sahf
lcall
lds
lock
rolb
imul
fiaddl
pop
filds
pusha
test
and
lahf
jbe
mov
in
mov
jb
roll
les
and
popa
inc
mov
xor
aas
cli
in
and
pop
scas
mov
imul
popf
test
mov
push
and
addr16
stos
pop
mov
cs
ljmp
test
aas
fnsave
mov
notl
popf
outsl
test
jg
dec
cltd
mov
or
scas
sbb
mov
mov
movsb
out
cmp
cmp
dec
mov
sahf
fstps
mov
inc
and
xchg
orl
ss
inc
jp
mov
dec
test
faddl
jecxz
in
stos
mov
in
jge
fisubl
repnz
add
outsb
add
push
or
leave
adc
mov
pop
aaa
mov
adc
lahf
jno
mov
cs
dec
das
shll
fsubs
test
rorl
ret
inc
push
add
dec
jo
mov
dec
mov
lret
adc
test
repz
jb
pop
mov
aaa
loopne
aas
rcll
mov
pop
sub
sbb
cmp
fldt
sbb
jecxz
jbe
icebp
xor
test
add
and
or
push
loopne
cltd
add
jbe
and
push
mov
stos
push
push
subb
mov
lret
adc
ljmp
jno
pop
rorl
aam
push
bound
mov
mov
imul
repz
cmpsb
lcall
push
xlat
aaa
jg
pop
aaa
movsl
cmpsl
sbb
add
fnstenv
xchg
stos
addr16
aam
cmp
add
fs
lds
ljmp
cld
mov
adc
and
dec
or
jae
mov
and
add
jp
inc
pop
add
add
push
add
fimull
test
and
stos
ja
cmpsb
mov
add
mov
lds
ljmp
mov
dec
adc
mov
sub
add
cmc
orb
push
test
cs
iret
imul
cltd
xor
sahf
test
mov
mul
aaa
hlt
push
adc
push
mov
mov
fidivl
les
jnp
pop
xorb
mov
femms
add
test
mov
push
cld
popaw
and
test
sbb
dec
jmp
pop
or
test
xchg
idivl
sub
lock
sbb
pop
mov
mov
test
dec
inc
gs
mov
mov
or
repz
test
movb
xor
sbb
sbb
sub
sbb
jle
sbb
addb
sbb
push
dec
psubusw
dec
add
push
xchg
mov
xor
mov
arpl
insl
movsb
repz
push
shrl
fisubl
mov
push
fistps
mov
loope
adc
test
out
xchg
test
into
icebp
sahf
call
test
xorl
imul
test
test
div
lods
outsb
cli
test
add
pop
sub
inc
cwtl
test
cmpl
addl
cmc
mov
mov
fdivrl
call
enter
scas
jmp
push
out
mov
mov
inc
or
adc
aad
popa
sub
jge
cmpsl
inc
mov
out
mov
mov
lret
std
loope
and
mov
out
insb
repz
movsb
jg
or
push
adcb
iret
push
inc
inc
sbbb
nop
test
add
mov
mov
adc
add
mov
movsl
xor
lret
sti
or
aas
pop
jl
inc
nop
and
xorw
or
mov
inc
test
imul
mov
or
sub
mov
in
iret
jp
add
test
mov
aaa
icebp
dec
test
in
imul
sbb
xchg
insb
mov
es
leave
into
test
test
int3
addr16
pop
inc
insb
pop
jns
loope
pop
les
cs
scas
fsub
test
cltd
sahf
in
aam
jnp
fdivrs
movsl
inc
xchg
cmp
mov
adc
fistps
ret
xchg
dec
pop
xor
mov
mov
shll
mov
std
push
push
daa
xchg
test
push
cmpsb
enter
pop
out
test
out
push
in
bound
jns
je
mov
dec
mov
test
mov
mov
imul
add
popa
mov
icebp
lcall
test
dec
push
movsb
in
jns
outsl
dec
mov
pop
in
incb
push
push
in
arpl
pop
mov
jbe
sbb
cli
pop
add
mov
or
xchg
pop
clc
or
data16
inc
std
sub
arpl
rol
andl
jae
lds
test
push
inc
insl
pop
das
cltd
test
xor
add
rcrb
push
sbb
xchg
mov
sub
fistps
cmpsb
mov
bound
xor
iret
sahf
mov
test
mov
dec
movsl
mov
ja
pop
in
in
push
repnz
mov
lea
lods
mov
mov
test
inc
daa
in
les
jmp
push
cmp
fmuls
leave
shlb
xchg
lcall
cmp
outsl
dec
hlt
test
pop
gs
inc
test
mov
addb
pop
pop
test
setns
ds
adc
mov
lcall
daa
je
add
xchg
xor
or
dec
add
push
ljmp
lret
mov
cli
and
jnp
inc
xor
test
sbb
and
movsl
adc
jno
movsb
aad
adc
pop
hlt
mov
sub
xor
pop
movsb
or
ja
icebp
daa
test
xor
sub
test
stc
dec
sbb
dec
add
dec
fbstp
jbe
fsts
mov
rol
aam
test
mov
inc
adc
cmp
fcmovnb
cmpsb
sub
xchg
scas
les
popa
lret
xchg
je
pop
in
xorb
cmpsb
mov
int
and
xchg
call
aam
dec
inc
lcall
inc
je
mov
mov
inc
das
pushl
repz
in
sbb
sbb
out
xor
pop
and
xchg
fwait
xor
mov
inc
shlb
mov
stc
mov
cmp
out
pop
cmp
popl
out
test
cs
rcrl
je
test
cmp
loopne
sub
pop
xchg
fisttps
pop
cmp
mov
adcb
daa
xchg
mov
fsub
sub
je
test
pop
fcomip
mov
xlat
test
cs
data16
xchg
movsb
notl
enter
cld
or
xchg
xlat
std
test
pop
pop
aad
mov
cwtl
mov
fsubrp
test
fadds
pop
lret
push
test
hlt
xchg
sti
adc
arpl
xor
mov
inc
shll
xor
insl
cmpl
xor
in
jae
in
dec
dec
mov
jle
mov
andb
lock
push
xchg
jns,pn
xor
daa
pop
outsb
pop
sub
cli
out
dec
rcrb
loope
add
xor
aas
aaa
dec
sub
out
test
and
clc
mov
push
mov
ja
scas
stos
mov
mov
arpl
ss
mov
sbb
adc
test
sbb
jae
inc
jmp
aas
inc
dec
enter
test
push
lods
lret
test
fisubl
lock
rcll
adc
insb
pushaw
jg
mov
push
cmp
fcompl
and
cwtl
inc
rcrb
mov
js
pop
xchg
and
mov
popa
adc
xchg
test
mov
imul
inc
cmc
xor
cmp
arpl
test
je
cmpsb
les
scas
ja
test
adc
mov
dec
mov
mov
test
sbb
jle
cmp
fbstp
cld
mov
dec
cmpsb
test
ficoms
mov
aam
inc
jae
inc
inc
insl
inc
stos
and
and
cltd
or
mov
movsl
stc
scas
lods
test
into
in
dec
test
xchg
or
xlat
sti
inc
test
ja
dec
test
jg
cmp
test
adc
xor
mov
test
xor
pop
psubsw
call
jge
push
xor
enter
pushf
movsb
xchg
int3
dec
sbb
clc
test
push
movb
sub
pop
dec
mov
mov
icebp
scas
test
dec
and
mov
test
sbb
mov
inc
arpl
adcl
nop
xor
mov
data16
in
fldcw
pop
scas
mov
push
daa
andb
push
or
add
mov
mov
inc
mov
and
fidivrs
fldl2t
push
mov
or
sbb
lock
lahf
push
jbe
xchg
movsbl
mov
call
idivb
pop
mov
xor
loope
popf
lret
in
inc
pop
pop
pop
sarl
out
cli
pop
and
test
rol
hlt
js
cmp
and
add
ljmp
arpl
mov
xor
jnp
pop
jmp
cmp
dec
sti
in
imul
icebp
xor
adc
lds
jg
rcr
incl
test
add
sbb
ficoml
pavgb
dec
mov
aad
movsl
xor
test
xchg
popa
cmpsl
test
outsb
mov
subl
cmpsb
call
ss
xor
add
mov
jae
mov
iret
mov
test
aaa
ljmp
test
sbb
or
addb
or
inc
test
outsb
in
inc
mov
mov
mov
sbb
test
sar
out
or
and
test
loop
test
push
xor
mov
daa
pop
pop
push
stos
movsb
daa
dec
cmp
jmp
cmpsl
xor
test
dec
addr16
adc
adc
cmp
test
es
and
cmp
clc
xchg
xor
stos
dec
adc
stos
xchg
arpl
or
cmpsl
cmpsb
je
and
rclb
jecxz
pushf
stos
fisttpl
or
mov
test
xchg
arpl
test
push
int3
jne
xor
call
fildl
test
int
enter
js
lock
mov
repz
fildll
loope
xlat
xchg
jp
mov
xchg
mov
jle
das
mov
inc
dec
xchg
jb
sahf
shrb
in
inc
negb
mov
test
adc
es
shll
jb
cmp
mov
adc
pusha
repz
test
cmp
cmpsl
jnp
imul
lret
test
and
and
mov
fistpll
sub
enter
test
adc
inc
ss
cwtl
xor
ret
mov
shll
arpl
and
mov
stc
pop
mov
or
test
mov
fiadds
dec
push
xlat
and
pop
adc
cmpsl
mov
mov
jo
jp
jge
insb
lret
add
mov
andb
rorb
rolb
repz
test
mov
inc
arpl
sub
add
mov
ficompl
jecxz
cmp
test
lahf
into
inc
addb
dec
mov
mov
test
sbb
shr
inc
in
or
test
pop
flds
ret
add
xchg
fcoml
or
test
xchg
mov
sub
sbb
fisubl
pop
mov
cmpl
mov
jecxz
jg
jo
fbstp
jle
movsl
add
les
adc
lret
lds
mov
jle
cld
aam
arpl
sub
mov
out
pop
dec
jb
addb
test
push
mov
test
mov
pop
in
out
xchg
test
mov
sub
in
mov
mov
cmp
test
into
addb
push
mov
insb
test
inc
in
push
mov
xlat
mov
adc
test
stc
aam
add
xchg
mov
cli
mov
das
xor
dec
push
out
rorb
mov
movsb
xor
inc
and
push
cmp
pop
decl
mov
xor
inc
cmp
ljmp
xor
int3
int3
adc
popa
mov
test
shlb
loopne
icebp
mov
fdiv
pop
or
movsb
orl
fs
loopne
mov
cmp
bound
in
mov
mov
adc
pop
ss
arpl
add
test
mov
in
jle
cmpsl
pop
clc
add
nop
dec
movsl
fisttpl
ds
scas
adc
mov
addr16
sub
fwait
pop
imul
out
lret
shlb
lcall
movsl
test
sbb
xchg
xchg
pusha
sub
pop
test
sbb
std
in
and
imul
mull
stos
and
in
push
or
mov
loop
cmp
movsl
mov
cli
loope
outsb
adc
or
movsb
ret
pushf
movsb
mov
push
and
test
je
dec
inc
imul
cmc
std
jnp
mov
test
sbb
inc
arpl
pop
or
hlt
jge
add
mov
jp
out
imul
xlat
roll
sti
mov
mov
or
outsl
mov
fdivs
int3
inc
call
ja
je
in
mov
leave
mov
add
hlt
aam
add
xor
xor
in
sub
mov
movsb
xchg
daa
notb
clc
mov
sbb
sub
mov
sarl
or
push
adc
mov
repnz
pop
mov
test
cli
shr
insb
mov
fidivs
sub
je
inc
es
inc
sbb
sub
test
or
and
jnp
lods
test
xchg
dec
movsb
sbbl
test
mov
jo
fildll
xor
and
sti
pusha
fdiv
mov
in
lcall
fcoml
bound
and
lahf
mov
jecxz
mov
xor
movsl
sbb
jle
pop
shrl
add
scas
cltd
inc
push
mov
push
lods
pop
stos
push
or
and
movsb
inc
and
cmp
daa
cmpsl
pusha
cmp
test
jns
jo
mov
idivl
sub
cmp
add
test
xchg
test
in
mov
setb
and
movsb
and
jmp
xchg
inc
push
xor
adc
stc
dec
insb
xor
aam
les
cmpsb
mov
jecxz
cmp
pop
test
xchg
pop
sahf
test
mov
data16
test
je
repz
dec
movsb
andb
ss
or
ret
les
xchg
lods
loope
orl
add
add
mov
loopne
cwtl
push
cmp
xor
orl
call
and
or
negl
jbe
leave
test
push
mov
xorb
pop
call
pop
add
aam
add
arpl
mov
ljmp
sbbb
int
cs
fstl
or
mov
xchg
jmp
aad
pop
bnd
jmp
movsl
push
mov
mov
mov
mov
sahf
and
dec
mov
sarl
xchg
movsl
fstpt
test
mov
test
aas
loop
in
cmp
mov
mov
inc
popf
lock
jl
and
and
mov
xchg
xchg
push
push
mov
test
and
ret
test
in
jnp
push
inc
stc
test
sub
mov
ret
add
jmp
pop
pop
mov
icebp
push
ret
arpl
mov
adc
add
test
ljmp
mov
push
loop
push
add
in
lret
notl
xor
sarb
inc
jmp
fstpl
fidivs
icebp
imul
pop
je
mov
imul
cmp
mov
inc
test
outsb
sbb
stc
leave
xor
pop
movsb
int
es
or
iret
loope
xor
cmpsl
mov
mov
mov
dec
add
xor
and
les
or
popa
mov
cwtl
lock
test
gs
out
divb
inc
mov
mov
adc
leave
dec
cmp
sahf
lea
cmp
pop
lahf
subb
cwtl
arpl
test
pop
and
mov
jecxz
xor
mov
pop
pop
add
xchg
dec
mov
pusha
mov
sub
pop
inc
lcall
aaa
mov
add
add
jle
push
inc
loop
mov
dec
push
orb
insb
mov
shll
mov
and
add
jl
lret
or
js
subl
lea
lds
lahf
jb
mov
outsb
jne
iret
test
sbb
bound
scas
dec
mov
ss
adc
lods
mov
cmp
xchg
test
sub
cmc
in
enter
pop
mov
push
in
cli
popf
icebp
sbb
les
pop
and
int
loope
sub
jecxz
bound
xchg
test
push
push
inc
sbb
sbb
stc
int3
jbe
mov
and
popf
cwtl
test
leave
sub
or
out
test
and
repz
inc
cmp
test
push
jp
jmp
sbb
insl
mov
sarl
add
mov
scas
shrb
mov
mov
cli
mov
lock
inc
mov
push
shlb
mov
gs
shll
test
cmc
xchg
enter
sub
gs
jbe
xchg
loop
bound
mov
test
in
cld
cmp
arpl
lret
data16
cmpsl
xlat
ret
adc
mov
movsb
mov
sti
push
daa
pop
mov
aaa
jp
push
adc
scas
adc
movsb
jmp
iret
ficompl
cli
pop
adc
sbb
fcoml
cmp
mov
mov
imul
dec
scas
ficoms
test
mov
nop
and
movsb
lahf
jae
into
mov
sahf
test
repnz
xchg
fiadds
cmpsl
jmp
lret
mov
jae
fstpt
int
mov
test
pop
es
movsb
jmp
sub
mov
ret
inc
dec
pop
xchg
mov
sbb
mov
test
sbb
inc
test
cmpsl
jg
push
xchg
loopne
in
adc
mov
xchg
test
add
test
out
pop
mov
xchg
test
outsb
sbb
cmpsl
pop
stc
test
xor
enter
pushf
jmp
xchg
sbb
mov
test
mov
int
jmp
lcall
test
xor
test
sub
rcrl
test
out
mov
and
xor
mov
arpl
mov
mov
pop
lods
imul
test
ljmp
mov
stos
inc
out
test
mov
xor
sbb
mov
mov
test
xor
insb
or
pop
test
rorl
jnp
loop,pt
push
jb
jp
test
imul
test
dec
lods
loop
and
fadds
int3
adc
dec
orb
jle
ret
or
xchg
je
xchg
xchg
jl
test
sub
cmpsl
test
mov
test
sub
mov
stc
out
test
je
xchg
test
add
xor
ja
lret
sbb
sub
mov
jmp
or
addr16
xor
outsl
mov
inc
repnz
inc
mov
inc
test
mov
imul
push
test
pop
ss
push
clc
test
sub
push
mov
sub
adc
ret
or
adc
mov
loopne
jg
imul
test
dec
in
xlat
test
ret
das
adc
cli
arpl
dec
call
sub
mov
or
push
and
adc
stos
test
and
adc
fldenv
mov
ret
pop
imul
out
adc
jmp
filds
jmp
sub
insb
fcomi
mov
or
pop
test
and
sbb
cmpsl
test
bound
popf
dec
mov
cli
push
pop
test
scas
les
push
out
insb
movsb
pop
pop
mov
cwtl
mov
add
jnp
test
pusha
push
adc
call
leave
arpl
sbb
push
fisubrl
xchg
sub
test
stos
rorl
fcoms
stos
test
hlt
imul
jbe
repnz
and
jae
cltd
test
sub
jecxz
out
dec
sahf
push
adc
and
pmaxub
xor
fsubrs
addr16
dec
and
mov
jmp
test
add
fdiv
test
nop
sub
mov
add
sahf
stos
jg
loope
mov
sbb
dec
inc
or
jecxz
in
ja
ds
mov
repnz
adc
sahf
mov
xchg
pop
jmp
inc
addr16
cmc
mov
scas
test
daa
imul
lcall
or
stos
es
rol
out
push
int
lods
mov
xchg
clc
and
mov
cmp
cmp
test
addr16
cli
repnz
bound
lods
sbb
sub
into
adc
mov
daa
xchg
test
xchg
sub
movsb
arpl
jge
inc
xchg
scas
call
sbb
test
out
and
fwait
adc
and
test
call
iret
pop
push
enter
xlat
mov
and
lock
les
adc
fiaddl
mov
negb
pushf
leave
xchg
push
in
jp
xor
xchg
mov
test
scas
stc
scas
test
es
out
dec
mov
and
push
mov
xor
mov
mov
dec
sti
mov
mov
call
adc
xlat
xchg
sub
push
bound
test
mov
and
arpl
imul
cmpsb
adc
std
test
mov
cltd
in
sub
mov
lcall
add
sahf
out
cmp
mov
mov
and
push
mov
jmp
xchg
adc
jmp
fildl
fbld
add
mov
sbbb
movsb
into
fsubl
and
mov
test
pop
popa
xchg
lret
lcall
mov
mov
test
sbb
and
cld
sub
sub
adc
movsl
dec
xor
lcall
test
mov
lock
stc
xchg
test
test
stos
cmp
ret
xor
mov
adc
in
rorl
mov
pop
into
arpl
adc
sbb
out
cmp
mov
flds
shrb
in
repnz
mov
xor
sub
add
xchg
jns
fists
orl
jbe
mov
and
pushf
mulb
fldt
xor
out
out
mov
test
fidivrs
fadds
sbb
test
pop
stos
arpl
cwtl
adc
add
aad
leave
mov
movsb
push
test
ficoms
mov
hlt
adc
inc
out
call
mov
sub
xor
test
insb
shrl
fst
inc
stos
cld
or
sbb
mov
hlt
stc
into
aas
lcall
jmp
xchg
sbb
inc
mov
fmul
in
dec
xchg
cmc
iret
stos
mov
ljmp
mov
test
mov
sub
dec
xchg
insb
adc
mov
mov
shl
sbb
repz
lahf
cmpsb
iret
in
test
cmpsl
clc
and
test
sub
dec
into
mov
test
sti
arpl
dec
jge
mov
ds
mov
in
mov
lcall
xor
xchg
pop
loop
aam
or
scas
es
sub
mov
in
mov
jnp
xor
sahf
test
dec
popf
lahf
jecxz
xchg
sub
cmpsl
sub
loop
movsb
jmp
mov
mov
sub
lcall
test
leave
test
imul
mov
les
test
pop
aaa
cmp
testb
add
stc
loop
pop
shll
mov
mov
push
movsl
popf
inc
add
xchg
lahf
mov
and
test
cld
repnz
cmpl
and
sbbb
add
sahf
xchg
test
mov
fwait
xchg
stos
xchg
test
out
or
leave
xorl
push
pop
sbb
mov
test
xor
inc
test
adc
pop
ret
in
mov
in
mov
mov
call
or
cmc
fwait
mov
lcall
test
dec
ljmp
add
fistpl
test
sub
test
into
lods
xchg
lret
inc
test
sbb
mov
and
jmp
cld
test
and
stos
test
lods
pop
mov
or
cmpsl
cmp
mov
jp
imul
imul
cltd
push
mov
mov
int3
test
adc
test
pop
subl
xchg
int
mov
test
xchg
stos
test
xchg
add
in
dec
and
fld
sub
mov
xchg
mov
call
arpl
stc
mov
mov
pop
pop
or
les
icebp
mov
sbb
and
std
int3
sbb
pushl
fiaddl
ror
cmp
arpl
xor
les
pop
jmp
sarl
jg
sub
add
repz
mov
pop
loop
fldcw
inc
ljmp
out
mov
cmp
test
ljmp
test
dec
mov
icebp
test
mov
jb
test
inc
mov
sub
jo
shrl
or
or
sbbb
or
sub
mov
mov
cmpsl
mov
loop
loop
sbb
stos
filds
shll
test
add
sub
lret
addb
pusha
mov
test
sbb
clc
jecxz
xchg
mov
roll
test
sub
call
in
sarl
pop
jp
je
push
in
xchg
ror
test
mov
mov
jmp
xorb
add
fisttps
sub
bound
arpl
mov
mov
lret
fistl
inc
stos
ljmp
mov
bound
cmpsl
mov
jg
loop
imulb
push
adc
test
mov
int
cmpsb
inc
test
mov
mov
out
test
movsb
repnz
lahf
scas
in
xchg
out
inc
sub
mov
loop
jg
rcll
sub
xchg
and
pop
mov
test
incb
dec
mov
dec
jecxz
mov
push
out
or
mov
sbb
and
push
setb
mov
test
jmp
daa
cmp
cs
stc
rcrl
or
movsb
mov
xor
pop
arpl
loop
xchg
insl
test
add
idivb
jmp
addr16
xchg
push
mov
and
inc
push
push
xchg
loop
pop
push
sub
xor
test
sbb
mov
incl
pop
cmp
in
test
test
pop
cmp
out
pop
add
imul
hlt
je
add
addr16
test
shll
mov
jmp
iret
ljmp
cmp
test
or
int3
mov
xchg
imul
cs
adc
loope
inc
into
adc
shrl
test
or
movsb
jns
mov
test
mov
adc
ret
cld
out
push
mov
out
jnp
test
cmpsl
test
ficoml
test
repnz
add
into
pushf
in
dec
cmp
movnti
test
jmp
test
insb
mov
pop
add
xchg
jnp
push
in
mov
stos
test
xchg
dec
cmp
into
sub
nop
test
hlt
dec
lods
shll
push
test
loopne
loope
fstl
imul
test
sub
lods
cmp
ds
jae
mov
lret
stos
sbb
xchg
xchg
arpl
dec
cmpsb
xchg
ljmp
xor
es
mov
cmp
dec
mov
daa
loopne
stos
mov
mov
xlat
or
mov
aad
push
push
mov
pop
xchg
add
xchg
and
and
test
sarb
repnz
push
icebp
and
pusha
and
jne
movsb
jae
imul
fildll
mov
lea
outsl
ljmp
adc
mov
and
or
ljmp
stos
lods
mov
push
jg
jb
lods
arpl
insb
mov
push
mov
das
bound
mov
ret
test
addb
out
test
add
imul
lods
into
loope
mov
lcall
dec
jmp
mov
jae
mov
inc
lcall
push
jl
jecxz
push
fldt
xchg
xchg
out
sbb
mov
aas
test
lahf
cmp
adc
sahf
test
popf
xchg
fwait
test
js
dec
mov
mov
bound
cwtl
add
mov
xchg
sub
stc
outsl
filds
lcall
call
xor
adc
pushf
pop
mov
dec
test
sahf
or
mov
pop
test
movsb
xchg
xor
imul
xlat
mov
mov
sar
lods
fwait
mov
cmpsb
push
mov
mov
mov
movsl
xchg
sarb
sbb
fs
mov
shll
dec
xchg
pushf
jnp
stos
in
mov
adc
mov
popf
jno
in
cli
mov
int3
push
cmp
mov
sbb
inc
cli
jecxz
out
mov
ret
test
shll
xor
push
test
int3
loop
into
push
imul
inc
in
or
mov
add
cmp
and
leave
int3
loop
xchg
and
jns
inc
in
cmp
cmpsl
cmpsb
adc
push
or
jns
cmp
test
adc
xchg
gs
shrd
xchg
xor
add
mov
jg
mov
imul
mov
xor
mov
sub
insb
test
xor
cmpsb
test
jl
pop
push
jmp
xchg
add
loop
nop
test
div
sbbl
rcr
mov
and
cmp
xchg
cwtl
push
cmpsb
cmp
out
test
sarl
imul
or
leave
mov
xor
mov
xor
ret
and
out
pop
in
mov
test
arpl
loop
or
testb
test
adc
lea
jp
lcall
xchg
xchg
loope
add
arpl
test
mov
fisubs
bnd
clc
and
sbb
sub
sub
pop
mov
jp
out
add
dec
les
cmp
xchg
cmp
test
popw
inc
in
enter
and
mov
roll
push
dec
inc
repnz
imul
in
jmp
ja
adc
cltd
arpl
nop
fwait
cmpl
push
push
mov
ret
add
mov
int
xchg
rcrl
lret
arpl
movsb
pushf
nop
jmp
sbb
xchg
lock
arpl
jb
xchg
test
inc
loope
pop
push
ret
xchg
test
jmp
fnstenv
and
addb
mov
test
adc
hlt
mov
dec
mov
sbb
pop
cltd
push
mov
mov
stos
pop
repz
jecxz
in
and
mov
in
sub
addr16
test
cli
xor
sub
xor
pop
cmp
inc
test
sub
popf
sti
es
add
in
or
pop
xlat
cmpsb
cmpsl
das
lods
test
stc
mov
loop
lds
push
out
and
das
jb
inc
pop
pop
imul
push
push
loope
pushf
outsl
test
sbb
insb
test
scas
inc
lret
test
jmp
rorb
mov
int3
aad
mov
in
adc
test
mov
test
arpl
or
jne,pn
movsb
fsubr
jno
movsb
dec
and
xchg
add
popa
push
scas
pop
test
mov
test
add
incb
mov
jb
rorb
lret
mov
movsb
test
dec
sub
test
js
mov
xchg
mov
and
add
xchg
ret
insb
sbb
cmp
loop
stos
loope
pop
mov
shlb
add
mov
test
arpl
scas
mov
lods
inc
cmp
ficompl
idivb
push
and
mov
cmpsl
movsb
in
loop
outsl
stos
mov
data16
imul
adc
test
push
enter
ja
in
pop
clc
push
xlat
cli
push
mov
add
and
xchg
rcr
sbb
es
xchg
test
sbb
fwait
or
cmp
imul
push
dec
ret
sbb
or
mov
jl
push
test
cmc
mov
stc
mov
aas
pop
insb
stos
aaa
les
outsl
fs
movsb
xor
daa
inc
loope
imul
enter
outsb
cwtl
dec
mov
push
cmp
jle
lock
xor
pop
loop
movsb
fstps
jl
lret
jns
test
sar
test
in
cmpsb
sbb
mov
jo
arpl
mov
jecxz
mov
and
out
adc
push
push
test
into
mov
mov
dec
pop
and
test
jbe
pop
inc
les
lahf
adc
test
out
mov
insb
pop
test
xchg
in
push
fwait
test
cwtd
iret
xor
dec
test
cs
jl
shll
xchg
cmpsb
mov
test
inc
sub
dec
mov
icebp
idivb
inc
loop
test
cmpsb
jbe
add
es
xchg
pop
sub
rol
mov
mov
into
loopne
fimull
test
fdivl
addr16
sub
xor
cmc
ja
push
cmp
push
xor
mov
std
sub
pop
jg
out
inc
pop
movsl
xor
xchg
in
imul
inc
mov
test
data16
sub
test
jbe
ret
sub
adc
sub
icebp
adc
sahf
aaa
adc
mov
jp
mov
cmovns
test
stc
push
lret
loope
fisubrl
xchg
insb
dec
imul
jbe
xchg
pop
mov
sbb
or
or
test
inc
rolb
pop
in
mov
test
loop
lret
sub
vmovntpd
xchg
cmpsb
sbb
push
or
xchg
sbb
bound
mov
mov
xor
mov
imul
and
mov
jp
jge
test
add
fwait
lretw
mov
sub
sti
mov
jge
push
jg
fistpl
mov
movsb
test
test
vpmulhw
pop
test
sub
cmc
pop
arpl
in
sahf
cli
test
dec
into
and
scas
cmpsl
mov
sbb
imulb
pop
xor
xchg
roll
sbb
stos
xor
mov
push
in
mov
scas
adc
mov
cmp
dec
ficompl
mov
imul
xchg
mov
in
loope
mov
mov
add
cmp
aas
in
sub
rcrl
loop
xchg
lret
lret
repz
adc
out
mov
in
mov
push
mov
dec
jg
scas
test
mov
out
test
pop
lahf
idiv
outsb
sub
test
mov
cmp
lcall
test
movsb
push
loopne
in
sbb
testb
mov
cwtl
jp
int3
add
loopne
mov
movsb
lret
stos
jns
mov
xchg
rol
movsb
push
notl
cmp
mov
fwait
enter
cmp
adc
mov
lcall
lds
fmuls
ja
mov
dec
sub
mov
in
test
sbb
or
mov
pop
cmp
roll
lret
and
adc
mov
popa
xor
xor
push
movsb
pop
xchg
push
sbb
inc
fs
mov
mov
lods
test
dec
adc
lock
dec
pop
sub
into
test
int3
data16
mov
hlt
das
aam
sub
mov
xchg
movsb
dec
hlt
push
out
cmpsb
mov
hlt
cltd
mov
test
cli
lods
push
jmp
mov
nop
out
hlt
and
pop
test
imul
and
lock
out
dec
cwtl
sahf
mov
mov
pop
xchg
push
jo
test
sub
nop
fistl
mov
dec
test
pop
lods
pop
lret
and
push
ss
int3
int
jmp
mov
pop
scas
or
lret
movsb
xor
or
imul
test
xchg
fisubs
inc
in
popa
lods
es
pushf
dec
push
mov
lea
and
jge
cmpsl
out
mov
sub
xchg
fildll
add
mov
xor
or
and
xlat
add
pop
lock
jle
push
int
mov
dec
clc
les
mov
and
in
sub
jl
adc
sub
lea
dec
clc
dec
fsubr
dec
jmp
ds
fadd
pop
adc
in
rolb
mov
roll
into
sbb
pop
test
inc
mov
fs
loop
push
add
arpl
shrb
mov
cmpsl
xor
xor
call
dec
aaa
movsl
cmp
ret
call
xor
sub
in
mov
insb
and
ret
test
lcall
sbb
sbb
leave
inc
adc
pop
pop
xchg
test
in
in
push
nop
lret
mov
fldl
stos
leave
ret
add
jg
arpl
mov
fstpl
or
adc
push
je
pop
iret
arpl
dec
or
int
pop
or
in
in
cli
lea
into
andl
test
inc
or
mov
jle
shll
or
mov
dec
mov
nop
pushf
fstpt
pop
test
cmp
mov
arpl
stos
add
inc
leave
lret
inc
dec
fbstp
push
inc
sahf
inc
add
int
aaa
mov
xchg
mov
mov
sub
out
stos
mov
adcl
cli
sahf
imul
jp
out
lods
mov
sbb
jp
lods
out
ds
mov
xchg
pop
adc
pusha
cmc
nop
or
mov
sub
shl
leave
mov
insb
pop
sbbb
add
push
stos
sub
arpl
and
xchg
cmpsl
add
xor
mov
mov
and
inc
fcoml
jns
iret
push
jbe
push
and
or
insb
imul
or
push
and
lods
inc
jb
and
inc
mov
daa
sahf
in
cmpb
fldl
addr16
xor
or
clc
les
mov
push
jl
shl
sub
xchg
nop
sbb
fcomip
or
sub
mov
cmpsl
sahf
and
lea
mov
push
les
movl
cs
arpl
dec
cmpsl
addb
xchg
andl
jnp
inc
xchg
jae
and
sti
test
inc
add
sbb
sbb
mov
cmc
mov
sbb
fidivrl
cmp
xchg
or
sub
incl
repnz
sbb
and
mov
inc
in
mov
aad
dec
std
loope
mov
arpl
sbb
mov
or
pop
xor
in
test
idiv
nop
xchg
add
int
loope
cmp
mov
xchg
pushf
mov
jns
dec
faddl
mov
sub
sbb
clc
mov
in
push
sbb
push
movsb
test
leave
push
lods
mov
test
jae
fmull
or
ret
test
movsb
test
aas
dec
dec
and
nopl
jp
mov
cli
test
ret
lret
pop
bound
mov
adc
pop
test
cmp
in
test
dec
out
xor
iret
sub
pop
cmp
in
mov
sbb
sarb
add
and
dec
inc
cs
roll
ret
loope
and
test
sub
mov
insb
push
lret
fdivl
fadds
cli
mov
in
arpl
mov
stos
ret
sarb
rcrb
cmp
pop
sbb
xor
fs
les
icebp
dec
pop
mov
arpl
flds
test
insb
fildl
test
sub
add
test
inc
cmp
bswap
test
xchg
ret
push
aaa
dec
pop
and
mov
jns
jp
sub
adc
add
mov
dec
jp
cmp
test
cmpsl
rcr
ret
push
xchg
bound
mov
loope
push
mov
mov
aad
xor
test
jbe
cltd
cwtl
lds
mulb
dec
pop
bound
aam
dec
xchg
int3
xor
mov
popf
test
mov
push
lret
xchg
inc
pop
mov
dec
sub
pop
mov
leave
mov
add
mov
movsb
adcb
outsb
dec
xchg
test
or
sti
mov
cmp
dec
test
adc
sub
sbb
repnz
jle
stc
inc
flds
inc
in
ret
sub
int3
and
push
arpl
push
bound
cmc
mov
xchg
xor
mov
test
jmp
movsb
subl
mov
xchg
mov
or
mov
jp
cltd
sti
cli
mov
xchg
bound
popa
negb
jp
cmp
or
add
xor
mov
test
loop
scas
cmp
ret
jmp
or
std
je
and
push
addr16
shlb
fwait
call
jbe
insb
in
movsl
ja
out
mov
repnz
test
lret
mov
in
push
cmp
aad
mov
ret
jns
test
add
push
mov
xchg
mov
inc
pop
adc
mov
sbb
out
test
stos
and
js
sbb
jbe
xchg
pusha
mov
leave
int3
cmp
popa
push
dec
bound
pop
test
test
xor
xchg
dec
adc
loope
movsb
scas
mov
mov
pop
test
push
popf
cmp
lcall
xchg
aas
enter
dec
imul
jne
jp
pop
push
and
cmp
int3
loope
addr16
and
pop
mov
lods
lret
or
xchg
mov
lock
test
push
loop
mov
xor
jmp
add
stc
imul
movsb
leave
out
lret
and
inc
out
les
mov
aad
xchg
sub
mov
scas
sbb
insb
bound
lods
test
icebp
mov
jbe
stos
jmp
mov
cmp
push
mov
jno
sbb
rcrb
cmp
sbb
mov
pusha
in
push
nop
mov
lcall
mov
fsubs
xor
lock
test
cmp
rcl
inc
ficomps
mov
sbb
mov
jbe
xchg
jp
mov
rclb
lcall
test
mov
es
dec
lret
mov
test
cmp
stos
insb
stos
and
aad
lods
ret
mov
add
dec
mov
lret
jns
jl
out
and
xor
dec
dec
ljmp
sbb
add
adcl
pop
loope
dec
push
or
mov
in
mov
in
adc
addr16
out
arpl
or
insb
hlt
inc
sbb
dec
lods
test
mov
cmp
inc
sbb
pusha
push
in
std
or
aam
pop
in
mov
test
lds
mov
icebp
test
test
iret
mov
mov
jne
aam
xor
and
into
xor
jmp
int
popf
leave
jl
nop
aas
adc
cmc
loope
outsl
add
shll
dec
cmp
scas
test
pop
adc
ja
mov
lock
test
jbe
mov
or
pusha
inc
cmp
aaa
mov
dec
and
lcall
mov
push
inc
mov
xor
test
xor
cmp
jp
mov
inc
mov
adc
pushf
mov
push
mov
test
rcll
enter
cld
cmc
pop
andl
mov
xchg
imul
fcompl
ret
loopne
push
dec
mov
and
xor
sub
imul
and
push
in
or
sub
icebp
lcall
leave
movsb
movsl
or
movsb
into
dec
jmp
cmp
mov
lods
test
pushf
icebp
movsb
loope
or
inc
fisttps
clc
test
xor
jno
pop
test
xchg
jb
loope
or
push
arpl
in
dec
mov
jmp
mov
test
repz
jnp
inc
pop
cmpsl
fldl
test
bound
inc
mov
insb
das
in
sub
in
cmpsl
icebp
add
mov
pusha
mov
test
test
mov
push
aaa
push
test
in
leave
push
dec
idiv
mov
adc
call
test
push
jne
or
subb
cwtl
aas
push
fistpl
int3
mov
fwait
pop
mov
xchg
pop
cmpsb
mov
mov
xchg
push
pop
lret
sub
out
push
out
pushf
dec
in
and
or
cmp
inc
fisubl
xchg
lcall
int3
mov
fsubrl
mulb
gs
mov
dec
scas
push
sub
inc
icebp
stos
andb
jbe
stos
push
movsb
inc
mov
enter
mull
xchg
xchg
in
into
and
pusha
test
add
dec
and
adc
mov
test
lret
popa
pop
xchg
rcr
iret
inc
loop
insb
ret
mov
or
test
in
or
mov
sub
and
mov
fwait
mov
jbe
in
push
repnz
mov
cltd
or
cli
mov
xor
ja
jns
jp
mov
sub
and
popa
dec
push
mov
test
into
repz
lret
cld
jge
das
dec
pop
test
sbb
push
jbe
jl
or
push
pop
fdivrl
jne
dec
add
mov
push
test
call
sbb
jb
sbb
mov
outsb
test
fwait
jecxz
xchg
add
push
lods
add
lret
das
in
cltd
bound
mov
mov
jns
scas
or
test
xchg
jp
test
imul
sbb
dec
sbb
das
cltd
sbb
pop
sub
enter
jns
xor
lock
mov
mov
lret
push
test
xchg
loope
xchg
movsb
dec
and
leave
push
pop
xor
test
out
push
in
mov
test
mov
lock
int
movsb
or
cmp
dec
push
or
test
icebp
out
adc
dec
stos
mov
adc
or
int
movsb
mov
rcrl
nop
enter
jno
push
imul
mov
aam
pop
fmull
mov
stos
out
repz
shrl
mov
imul
or
mov
test
sar
scas
nop
inc
loop
stc
lods
push
test
fwait
xchg
sbb
dec
je
fsub
aad
inc
mov
jbe
cli
imul
inc
lods
mov
inc
and
popa
adc
iret
leave
or
lcall
push
ljmp
adcl
inc
pop
std
jge
loop
filds
adc
mov
jle
test
sbb
pop
xor
test
rolb
cltd
add
sub
out
jns
fcomp
push
cmp
push
or
pop
mov
ret
lods
lods
xchg
pop
test
les
in
fstps
sub
cmpsl
push
lret
imull
cmp
dec
xor
clc
test
sbb
cmp
test
dec
add
mov
test
iret
and
ret
pop
and
cmp
push
repz
jle
pushf
dec
test
in
push
cmp
mov
lret
dec
jp
test
out
lock
mov
xchg
dec
sbb
cmc
push
imul
cltd
mov
mov
pop
sub
push
mov
cmc
or
orb
pop
icebp
mov
xor
mov
gs
add
xchg
mov
mov
testb
dec
xor
and
ret
popa
or
fdivl
je
out
test
sub
jp
shl
movsb
frstor
and
stc
add
push
add
sub
jmp
sbb
inc
repnz
sbb
jl
or
pop
lods
imul
add
jl
inc
mov
test
xchg
cmp
mov
stc
mov
test
push
push
mov
loop
and
dec
cmc
mov
dec
xchg
or
cld
add
cmp
test
pop
rolb
push
arpl
mov
fsubr
cld
add
sbb
in
adc
imulb
ja
pushf
test
in
stos
in
test
nop
inc
mov
mov
sub
push
and
popa
rorl
mov
sub
clc
xchg
xor
or
mov
cmp
test
lcall
add
pop
and
pop
dec
cld
push
test
insl
mov
mov
cmp
decb
test
jno
sbb
movsb
cmpsb
xchg
mov
sub
dec
test
test
pop
push
test
mov
adc
dec
cli
add
xchg
pop
sbb
leave
incl
push
push
icebp
mov
cmp
pushf
jecxz
mov
jge
inc
sub
in
jae
inc
jmp
jno
jne
movsb
push
sub
lds
in
xchg
leave
mov
scas
mov
xchg
ret
lret
pushf
mov
mov
push
mov
sub
xchg
inc
test
ficompl
push
xchg
call
cltd
add
mov
imul
or
push
sub
sub
jl
std
mul
movsb
and
shlb
pop
int3
cmp
jb
dec
pusha
xor
push
test
adc
arpl
repnz
leave
stos
orb
mov
fs
inc
dec
pop
push
incb
xor
ret
jbe
jp
xchg
in
in
faddl
ret
dec
mov
mov
sub
fisubl
popa
xor
and
push
pop
movsb
cmp
lods
fwait
sbb
inc
imul
and
mov
xor
dec
sub
repnz
or
leave
push
pop
stos
jno
test
sub
jecxz
mov
arpl
inc
imul
test
xchg
inc
xor
jp
mov
les
or
or
vcmpps
adcl
es
shrb
push
mov
test
cltd
or
test
clc
lahf
lock
stc
test
mov
leave
movsb
jo
push
or
jmp
cli
test
fcmovu
cmp
mov
inc
ret
add
dec
test
in
and
mov
push
testb
shll
test
lds
pusha
inc
sbb
in
cmp
movsl
les
arpl
jmp
ficoml
ret
lret
xchg
adc
aam
bound
loope
test
dec
jno
movsb
out
or
pop
push
fdivl
sub
mov
sub
imul
mov
jnp
pusha
lret
mov
icebp
cmpsl
dec
mov
mov
clc
test
push
enter
xchg
push
xchg
xlat
mov
mov
fs
orl
mov
push
arpl
xchg
push
scas
popa
xor
mov
movsb
and
imul
test
pop
fistpll
inc
repnz
out
pop
cmp
clc
test
movsb
lcall
aas
jae
call
inc
adcl
bound
cmpsl
mov
jae
test
cmpsb
shl
pop
sub
mov
mov
decl
sub
daa
push
in
cwtl
ss
mov
mov
mov
mov
sbb
adc
cmp
xchg
test
jge
outsl
xchg
or
scas
test
mov
je
jbe
lods
enter
js
lock
sti
test
mov
je
test
mov
mov
and
jno
loop
pop
sahf
fsubs
out
mov
cmpsb
cld
inc
xchg
xchg
insb
or
pop
test
lcall
xchg
mov
mov
xor
mov
adc
jmp
and
sahf
sub
les
in
push
mov
xor
jbe
or
rorb
sahf
mov
push
mov
test
xchg
xchg
out
das
in
cmp
push
dec
or
push
les
mov
rorb
test
mov
inc
testl
mov
test
mov
cmpsb
push
pop
sub
mov
mov
ret
sti
gs
das
icebp
test
in
dec
rcll
movsl
cmpsb
clc
or
sbb
mov
test
mov
and
xchg
mov
pop
sbb
cmp
adc
mov
lahf
das
out
test
es
xor
inc
ret
lcall
test
in
xchg
dec
test
sbbb
out
stos
pop
shl
add
test
mov
cwtl
inc
addr16
cmp
out
and
std
mov
in
and
mov
je
and
ds
cltd
inc
jae
cmp
rolb
mov
test
notl
gs
jnp
movsb
and
adc
cmc
add
or
mov
or
bound
movsb
in
jmp
out
out
hlt
push
or
arpl
pop
mov
addb
ljmp
sbb
test
push
movsb
popf
movzbl
xchg
mov
xlat
push
sub
cmp
mov
sub
testl
shl
jmp
mov
outsb
xorb
xchg
and
mov
or
pusha
fwait
or
cli
jecxz
inc
mov
and
sbb
mov
int
test
je
mov
and
in
mov
aad
test
lock
pop
mov
mov
cmc
insl
lret
test
clc
xchg
xor
inc
and
sub
inc
out
cwtl
or
int
test
sub
test
shll
movhps
dec
mov
jle
add
std
xor
pop
pop
stc
sbb
movsb
fnsave
dec
sub
mov
push
and
dec
test
xlat
mov
push
test
divb
or
add
mov
cwtl
dec
clc
pop
add
jae
ja
lcall
jecxz
mov
in
xorl
mov
xchg
lahf
sysexit
popf
cmp
aaa
test
push
add
and
xor
jbe
jne
daa
ret
mov
dec
mov
mov
popa
jmp
mov
inc
inc
sti
add
addl
or
sub
cltd
out
lock
gs
mov
icebp
jb
fiadds
sub
in
mov
mov
and
enter
jae
les
and
xor
or
fstpl
adc
setns
lds
dec
cmc
xchg
mov
xchg
xchg
rorl
movsb
fadd
imul
jbe
test
call
int
mov
imul
xchg
jbe
in
mov
outsl
fisttpl
insl
sbb
mov
dec
in
icebp
test
test
mov
sbb
xor
mov
jl
lea
out
adc
mov
add
mov
fnstsw
mov
inc
pop
dec
or
movsb
ret
adc
jl
lds
push
std
xor
sub
imul
notb
test
into
add
add
mov
movsb
es
fmul
jmp
mov
aas
out
mov
fs
and
adc
into
shrl
push
add
gs
scas
xor
cli
cmpsl
data16
mov
push
sahf
and
add
dec
call
rorl
or
mov
mov
adc
pop
int
inc
arpl
and
repnz
or
add
js
inc
sub
jl
sbb
push
mov
pusha
xchg
jle
adc
pop
hlt
xchg
jmp
pushf
lea
test
sbb
test
push
scas
xchg
test
clc
ret
mov
ret
dec
js
pop
nop
test
lds
pop
or
xor
cmpsl
push
xchg
jge
mov
ffreep
inc
pusha
mov
dec
test
out
mov
mov
and
ljmp
adc
dec
dec
stos
mov
sub
mov
movsl
repz
cmc
mov
push
inc
xor
jle
leave
lock
in
stos
and
out
sbb
mov
sbb
and
jo
and
mov
add
mov
jge
clc
incl
in
push
in
push
dec
mov
int3
movsb
and
test
push
test
or
add
shrl
test
pop
lods
in
leave
pusha
xor
jne
xchg
lds
ret
and
jecxz
test
ss
mov
stc
flds
mov
int3
jmp
pop
inc
mov
loopne
cld
sbb
mov
aaa
pop
cmp
push
mov
adc
fisttps
fsubl
mov
push
inc
adc
sarb
jbe
sbb
inc
test
push
addr16
and
mov
mov
sub
push
test
jle
mov
orl
jns
je
mov
aad
test
xor
sub
inc
adc
fisttps
scas
sbb
and
out
sub
inc
mov
xchg
cld
imul
les
adc
push
lock
xor
push
sub
jge
outsl
xchg
inc
das
outsb
cli
or
mov
dec
mov
lea
jmp
jbe
test
push
mov
pushf
adc
cmpsl
neg
test
inc
test
outsb
test
sbb
clc
jg
mov
out
fisubrl
leave
pop
bound
in
repnz
in
loope
push
add
sbb
out
in
adc
lods
add
add
and
stc
js
sahf
lret
std
jp
add
lea
dec
ja
ja
add
cmp
popa
out
and
mov
xor
sbb
sub
test
add
xchg
movb
xor
mov
cmp
and
sbb
es
out
movsb
lock
pop
cmpsl
repz
fists
jle
inc
mov
aas
xor
inc
in
fs
jnp
loop
popa
insb
test
imul
aaa
test
popf
adc
sar
popa
movsb
and
mov
sub
and
xchg
arpl
inc
dec
mov
call
cmpsb
cmpsl
enter
clc
cwtl
fs
sahf
jecxz
mov
xchg
push
and
data16
xacquire
jno,pt
test
lret
pop
sub
arpl
add
mov
push
add
dec
jae
push
emms
dec
push
push
adc
inc
pop
mov
xchg
and
in
mov
sar
fs
jmp
outsl
in
pusha
adc
and
lods
sbb
pop
ss
and
call
add
dec
xchg
jmp
xor
mov
jg
sbb
adc
jp
sub
inc
repnz
xor
fiaddl
dec
jmp
fstpl
shl
cmpsb
sbb
add
sbb
mov
lcall
xor
outsl
sti
outsb
daa
cmp
cs
mov
test
mov
inc
pop
xchg
in
scas
shll
dec
outsl
test
sahf
sbb
mov
xor
repz
cli
xchg
test
cld
test
pop
dec
addr16
movl
pop
mov
sbb
sub
jp
cmc
cmp
jae
adcb
fnsave
cmpsl
xor
test
jl
mov
xor
and
nop
fcomi
mov
fmull
adc
adc
notb
xchg
ja
xor
push
lcall
or
ror
xlat
mov
leave
test
fcoms
test
movsb
sub
push
push
mov
inc
jge
das
push
mov
push
test
jo
outsl
push
cvtdq2ps
test
testb
rcl
push
add
repz
pop
lods
aaa
mov
mov
fildl
call
push
or
out
pop
rcll
and
int
mov
stos
ror
mov
movsl
into
add
xchg
test
sub
rclb
push
cmpsb
jge
dec
or
mov
mov
mov
addr16
cmp
test
push
bound
mov
testb
dec
mov
cmp
shlb
xchg
std
pop
or
test
push
mov
negb
test
bound
xor
jbe
stos
jge
imul
push
stos
popf
sarl
cmpb
insb
cmp
fsubrs
loop
and
test
pop
andb
dec
push
xor
add
xchg
xor
push
out
or
or
fstpt
lret
adc
mov
cld
aas
sbb
or
data16
call
popf
xchg
rcll
jmp
mov
clc
mov
fcmovnb
in
out
jne
enter
cmpb
fwait
push
pop
aam
lods
out
pop
loopne
push
xor
das
and
xor
ret
xor
cmp
mov
mov
or
into
sub
jbe
add
scas
outsb
aas
xor
pop
sbb
mov
ljmp
pushf
test
xchg
outsl
pop
es
mov
nop
jp
mov
and
and
adc
inc
jp
sarl
inc
mov
outsl
faddl
test
mov
mov
fidivrs
mov
add
loopne
mov
test
std
mov
xchg
movsb
inc
lock
cld
cltd
cmp
jg
test
in
outsl
loop
and
lret
mov
fs
dec
xchg
adc
in
lock
xlat
test
xor
mov
sti
out
in
add
mov
pop
pop
scas
into
mov
jnp
or
mov
test
test
pop
mov
jp
lods
fdivs
jmp
push
xor
scas
cltd
test
or
xor
xor
test
jo
pop
test
iret
mov
or
test
lcall
in
inc
mov
sbb
outsb
outsl
or
movsb
push
sbb
xor
data16
mov
movsb
and
sub
call
ljmp
push
je
xor
movsb
sub
push
mov
xchg
mov
mov
in
fists
add
mov
test
enter
rol
insb
adc
add
add
inc
lds
arpl
mov
aas
pop
enter
pop
and
mov
inc
les
adcl
les
scas
pop
inc
cmpsl
aas
sbb
xchg
roll
gs
shll
pop
outsb
inc
std
xchg
bound
daa
or
mov
adc
mov
les
add
cmp
lea
xor
ds
cmp
sbb
jge
pop
adc
mov
and
aam
mov
jle
fidivrl
xchg
and
in
cld
out
mov
std
icebp
adc
decl
repz
int
arpl
shr
sahf
test
mov
add
aaa
test
imul
mov
jbe
cmc
ss
test
cmp
mov
movsb
loope
aad
imul
idivl
jmp
jle
add
ret
icebp
js
mov
or
in
jbe
fst
test
mov
dec
lret
fbstp
jle
nop
arpl
mov
cmpsb
push
cmp
cmp
mov
jne
pop
test
cmp
mov
in
out
lahf
gs
mov
and
sbb
jno
dec
sbb
inc
push
mov
test
push
rcl
inc
xchg
subl
in
xchg
xor
mov
mov
mov
fidivs
insl
mov
testb
add
pop
fildl
pop
mov
sbb
and
test
or
adc
fstl
mov
icebp
inc
imulb
push
ss
push
std
into
fists
test
and
push
fs
movsb
add
adc
or
test
fmul
or
lahf
mov
dec
mov
popa
add
fdiv
lea
aaa
jb
data16
test
test
movsl
inc
and
mov
xchg
pop
movsl
mov
insb
dec
pop
cs
jo
test
popf
fiaddl
xchg
arpl
daa
or
push
rolb
fwait
mov
in
movsb
shl
pop
or
notl
dec
aas
xchg
sub
and
jne
loop
dec
test
mov
mov
mov
stos
mov
xchg
je
jecxz
add
cmpsl
push
ret
in
fmul
arpl
shll
insb
and
inc
cmpsl
xchg
mov
xadd
repnz
adc
cmpsb
dec
and
push
cwtl
jbe
push
es
fld
pop
jp
sti
or
movsb
inc
mov
insb
call
push
lahf
dec
pop
pusha
pop
mov
mov
cmpsl
pop
and
lahf
sahf
addb
ss
jle
push
aas
shrb
or
add
sbb
pop
jmp
test
cmp
inc
inc
int3
xchg
mov
pop
mov
loopne
gs
adc
jmp
adc
popf
jg
or
pop
lret
mov
rcr
sbb
inc
adc
cmp
sub
addr16
imul
or
fsubs
and
mov
and
leave
loop
cltd
test
repz
mov
and
inc
mov
inc
sub
ret
pop
add
rclb
lcall
rcrl
mov
ja
lret
shrb
movsb
nop
lcall
add
call
xchg
pop
inc
mov
mov
xchg
lds
pop
inc
and
fldcw
mov
test
lret
mov
adc
aas
add
shrl
mov
mov
mov
add
jp
push
mov
xchg
xchg
add
cmpsl
lds
xchg
push
mov
hlt
add
scas
sbb
mov
lcall
cwtl
cltd
scas
movsb
dec
add
xchg
sbb
outsb
lds
pop
out
scas
and
out
pop
ja
sbb
sub
xorl
in
push
sub
mov
sbb
popf
test
test
ficoml
test
and
aaa
adc
test
fildll
test
les
adc
fwait
inc
inc
or
xor
mov
repz
push
call
jg
jns
mov
lret
jp
jae
mov
call
cmp
mov
mov
xchg
daa
in
inc
cwtl
adcb
xchg
test
sbb
jmp
mov
imul
pop
mov
jns
in
mov
inc
daa
fimuls
mov
test
lret
sahf
das
iret
jge
mov
inc
cmp
mov
mov
push
cmpl
mov
ljmp
icebp
test
in
loopne
cld
inc
dec
cld
pushf
mov
mov
jno
and
fcomip
call
sub
arpl
jnp
das
mov
cmc
add
cmp
and
xchg
mov
rcl
adc
mov
test
test
inc
aaa
test
mov
cmpsb
and
jecxz
in
cmp
das
mov
and
test
lods
adc
sbb
push
jno
and
mov
mov
jne
insb
inc
inc
sub
add
test
scas
nop
roll
stos
sub
test
int
xor
xlat
mov
push
in
jl
push
cltd
movsb
jbe
lcall
jmp
add
adc
clc
dec
mov
mov
sub
cmpsl
lret
push
ss
ds
das
lock
out
inc
xchg
dec
xchg
loop
inc
mov
and
movsb
adcl
test
insl
push
sahf
fcom
or
inc
xchg
data16
adc
les
bound
mov
mov
out
push
add
mov
push
movsb
addb
sbb
fincstp
lock
je
adc
xor
mov
add
dec
inc
mov
hlt
es
xchg
mov
jno
fwait
sub
or
mov
sub
sbb
jne
test
sbb
cli
push
or
shlb
push
and
cmp
pop
js
xchg
inc
xor
pop
pusha
movsl
cmp
mov
pop
aaa
into
shll
xchg
mov
scas
test
pop
xchg
cmp
add
aam
subl
and
outsl
xor
or
gs
std
cmc
stos
lock
mov
adc
add
lahf
pcmpgtd
jge
jnp
sbb
rolb
jg
jne
cmp
or
loopne
je
test
out
xchg
lea
stc
mov
pop
mov
out
adc
push
dec
fistpll
dec
bound
pop
cltd
lea
bound
push
sub
int3
or
sub
push
stos
mov
dec
jne
insl
adc
loop
push
xor
lea
mov
lock
enter
sti
add
in
fisubl
scas
lret
sub
xchg
shlb
xchg
mov
stos
decl
inc
pop
dec
mov
test
mov
cmp
movsl
lds
mov
pop
or
stos
xchg
popa
fistps
cmp
mov
fwait
mov
xchg
repnz
fsubl
sbb
or
mov
fs
movsb
nop
les
mov
add
test
inc
sbb
sti
jecxz
cld
imulb
test
pushl
pop
cmp
adc
movsb
lret
and
sbb
fisttpl
jne
out
icebp
test
data16
inc
sub
jg
mov
insl
sub
test
add
dec
test
addr16
sbb
je
lock
movsl
mov
inc
lahf
sti
fsubp
fstpl
out
repnz
inc
adc
ret
mov
ret
inc
not
hlt
sbbl
int
movsb
dec
or
cmpsl
pop
repz
out
out
cmp
int
pusha
out
xchg
ss
outsl
xor
inc
movl
gs
data16
xchg
imul
or
js
out
fdivs
dec
movsb
outsb
add
jae
inc
cld
push
add
push
imul
adc
scas
add
movsb
or
inc
das
test
lods
cmp
add
loopne
and
xorb
dec
orl
xchg
aaa
mov
inc
jmp
scas
in
stos
fildl
mov
aaa
xor
popa
mov
or
adc
shlb
jno
xchg
scas
in
pop
cmp
andl
xor
inc
subb
scas
popa
movsb
jg
mov
xor
push
cs
sahf
sub
mov
ja,pn
adcb
loop
mov
dec
pop
adc
xchg
gs
add
mov
notl
fst
inc
ljmp
mov
mov
ret
dec
loop
imul
xchg
jecxz
xchg
pushf
in
lods
fs
adc
cmc
mov
daa
cld
aas
fsubl
jns
add
add
mov
mov
mov
cmpsl
aaa
shll
cld
push
ss
aam
and
cli
dec
push
mov
mov
push
dec
cmp
insl
inc
push
fisubs
mov
xor
inc
mov
in
add
and
into
imul
daa
lcall
cmp
add
sti
cmpsl
mov
mov
nop
dec
insb
incb
jns
outsl
lock
push
or
xchg
mov
movsl
inc
popa
popf
cmp
pop
xchg
cmpsl
shrl
add
dec
pop
dec
jmp
sub
dec
inc
cmp
mov
inc
loopne
or
xchg
cmc
arpl
xor
in
pop
and
xor
je
mov
jno
dec
test
pop
xlat
test
inc
movsl
mov
sub
mov
popl
mov
int3
test
sahf
mov
pop
xorb
pop
sarl
pop
mov
mov
std
cltd
jecxz
popf
push
mov
adc
push
push
mov
addr16
arpl
or
pop
adc
add
sbb
mov
cmp
ss
adc
pop
jmp
pushl
mov
jae
add
mov
std
xchg
dec
ret
loope
mov
out
movsb
lea
sub
test
mov
repz
xor
cmc
notb
movsb
xchg
js
leave
add
popa
jbe
lret
and
pop
inc
popl
fadd
test
rcrl
repz
sahf
lock
test
mov
rep
pushf
inc
adc
int
mov
imul
loopne
or
mov
jl
push
into
hlt
inc
sbb
sahf
push
lcall
and
and
popa
mov
jmp
es
mov
dec
push
scas
pop
dec
or
fwait
in
and
fwait
les
lods
xlat
mov
stos
pushf
push
cwtl
loop
cmp
jle
out
roll
jo
jbe
lcall
or
mov
cmp
cs
cmp
test
mov
mov
arpl
mov
cmp
loope
or
orb
push
stos
test
inc
mov
jle
mov
push
mov
add
movsb
mov
fdivs
lds
sbb
test
sub
divps
jecxz
movsb
mov
pop
mov
ss
push
addr16
mov
sahf
stos
cmp
js
push
sbb
test
xchg
jle
push
imul
dec
lods
mov
fnsetpm(287
xor
lahf
cmpl
movsb
test
jge
fcoml
add
push
cld
mov
inc
fldl
imul
adc
mov
mov
lcall
repz
fiadds
scas
mov
nop
push
loop
bound
xchg
jmp
stos
xor
jg
push
xchg
ja
outsl
pop
test
sbb
lods
shl
or
mov
pop
xchg
inc
dec
ja
in
iret
push
aam
lods
pushf
fstpt
ret
dec
lods
je
inc
out
add
test
push
rorl
push
bound
pop
mov
ret
mov
pop
pop
pop
test
mov
pop
cmp
daa
mov
xor
shlb
cltd
jle
movsb
cmpsl
jge
pop
sub
and
in
and
mov
sbb
xor
shrb
jo
xor
dec
les
sbb
jmp
int3
jno
mov
xchg
imul
lret
icebp
test
mov
and
inc
in
jg
mov
lds
mov
std
lods
mov
push
push
pop
jp
dec
and
test
add
adc
ret
xchg
mov
dec
mov
lret
into
sbbl
pop
mov
mov
fimull
sti
adc
mov
mov
dec
decb
test
xor
scas
mov
aam
inc
jp
movsb
orl
xlat
dec
ret
fsubr
mov
sbb
mov
push
popa
xchg
jb
movsb
leave
popf
leave
movsb
and
nop
or
cmp
add
jns
stc
add
sbb
pop
fs
lds
jo
lods
xor
enter
jno
movsb
mov
sbb
lock
int
cli
and
adc
xchg
dec
and
aad
or
movsl
dec
cli
fwait
cmp
or
insb
bound
aaa
aam
cmpsl
int3
fimuls
inc
lea
pop
xchg
adc
imul
jne
mov
jecxz
xchg
xor
data16
outsb
mov
test
test
in
inc
xchg
hlt
out
fsubl
add
lock
mov
bound
and
in
or
ret
nop
mov
mov
inc
jb
test
and
add
andl
in
adc
mov
aad
test
incb
jmp
ds
mov
push
loopne
repnz
outsb
stos
aam
lahf
popa
jae
mov
dec
sbb
lret
mov
push
jb
test
mov
mov
out
mov
mov
pop
mov
and
in
jg
xor
mov
adc
pop
jmp
movsb
dec
pop
mov
mov
daa
push
fcomp
cmp
out
lret
fstl
out
mov
test
loope
jae
cld
add
mov
add
cmc
xchg
aas
stos
jmp
dec
out
mov
shrl
pmaxsw
or
mov
movsb
out
mov
insl
cwtl
mov
push
dec
imul
mov
test
push
ds
cmpsb
test
jle
cmp
mov
mov
pop
repnz
jmp
shlb
clc
mov
dec
arpl
test
inc
mov
lds
lahf
aas
lea
je
int3
jno
scas
dec
in
push
stos
jbe
jne
dec
call
xor
aam
mov
push
or
adc
sti
sbbl
into
out
daa
xor
int
xchg
setns
cmc
insl
test
dec
insb
cmp
xchg
call
fbld
xchg
fdivrl
jbe
cmp
lahf
test
or
fld
das
fwait
out
add
mov
test
inc
sbb
stc
test
adc
test
lds
icebp
les
inc
and
rcll
loope
jmp
ss
movsb
sarl
dec
mov
pusha
mov
cmp
gs
shll
repz
aam
cmpsl
pop
ficoms
jae
fists
add
movsb
add
or
pusha
lret
sarl
aad
add
out
lret
mov
sub
lds
icebp
sub
mov
stos
test
dec
fstps
mov
mov
add
push
clc
test
negb
test
je
pop
sbb
inc
test
mov
sub
jno
sub
or
xchg
cmpsl
sub
add
mov
lock
mov
ja
repnz
sahf
add
arpl
pusha
mov
mov
jns
movsl
mov
imul
push
dec
and
lret
push
inc
mov
inc
idivb
jbe
scas
and
push
adc
mov
mov
lret
jb
and
mov
sub
jecxz
xchg
adc
jmp
push
or
les
mov
or
pop
sbb
xchg
movsl
fnsave
adc
mov
scas
fdiv
addr16
das
xorb
sbb
iret
ja
aam
loop
push
les
jmp
inc
inc
jo
ljmp
popf
int3
mov
mov
repz
and
imulb
ds
mov
scas
add
pop
mov
out
or
inc
nop
push
insl
test
adc
adc
bound
push
mov
movsb
sub
adcl
sbb
je
movsb
popa
or
and
inc
xchg
xchg
lods
int
mov
test
test
test
out
js
stos
push
sub
pop
mov
add
push
loope
movsb
jg
movsb
inc
inc
fisttpl
push
inc
jle
idivb
popa
aad
lret
out
in
test
pop
inc
mov
add
cmpsl
sub
les
rorl
add
xchg
xchg
and
fiaddl
and
in
test
cmp
and
fidivs
mov
sub
fxch
movlps
les
xchg
jl
mov
push
mov
test
xchg
sahf
inc
test
mov
scas
mov
stc
and
xor
mov
mov
movsb
fcmovb
push
pop
popf
dec
jno
sahf
mov
fs
adc
mov
test
mov
sti
test
sbb
les
jnp
stos
outsl
fstpt
inc
adc
lds
test
repnz
mov
hlt
sbb
out
push
xchg
or
in
test
mov
ret
cmp
inc
daa
mov
mov
mov
mov
mov
xorb
fstpt
test
mov
shlb
mov
fwait
aas
sbb
out
xchg
mov
push
test
xor
test
rcrl
sbb
mov
dec
cmp
ret
in
popf
jns
xor
dec
mov
push
sbb
daa
pop
test
ja
xlat
push
mov
outsb
fidivl
xchg
ficomps
test
call
mull
fidivrs
andl
mov
rorl
dec
in
insb
mov
test
and
jmp
aas
add
stc
popf
adc
or
cmpsb
movsb
repz
ss
clc
ret
mov
xor
test
and
fcmovne
jmp
test
push
mov
inc
pusha
fisttps
icebp
test
cmpsb
xlat
insb
stos
test
mov
jnp
bound
repnz
xchg
fucomip
push
mov
das
jnp
inc
mov
shlb
mov
xor
or
xchg
test
push
cmpsb
cmc
sbb
dec
movsb
push
jnp
stos
jg
pop
or
test
ss
into
test
sbb
dec
inc
jnp
sti
data16
stos
cmp
arpl
pusha
lds
ja
arpl
fiadds
popl
or
imul
imull
mov
repz
adc
fildl
nop
not
test
pop
popf
imul
ss
pop
and
xor
test
mov
mov
mov
sahf
pop
add
push
add
mov
fldenv
rcll
daa
cmp
jge
mov
sbb
mov
lret
sbb
fldenv
fcompl
jmp
lods
movsb
stos
push
adc
fmuls
mov
clc
imul
shll
or
je
jmp
xchg
mov
cmp
jnp,pn
stos
mov
lret
mov
add
sub
test
outsb
rolb
pop
adc
notl
or
inc
xor
scas
cmp
test
xor
xor
adc
stc
nop
inc
test
push
cmpsb
daa
mov
test
mov
in
or
dec
jnp
xchg
jl
test
enter
sbb
shlb
sbb
test
push
push
in
sub
leave
test
stos
out
mov
aam
les
call
cmpsl
jmp
test
dec
lret
add
cmp
mov
arpl
mov
or
pusha
test
pop
bound
xchg
pop
mov
mov
push
outsl
scas
mov
js
add
add
xor
icebp
rol
hlt
pop
inc
push
arpl
rolb
or
sbb
pop
daa
push
and
movsb
aas
test
cmp
leave
cmp
mov
ds
sbb
in
cltd
popf
cs
loopne
int3
outsl
js
mov
sub
xchg
mov
dec
mov
mov
lds
mov
fcompl
popf
iret
test
inc
test
pop
imul
roll
pop
fistl
jb
mov
xchg
hlt
add
jmp
push
imul
add
pusha
or
mov
inc
dec
cmpl
mov
sub
fcmovbe
mov
int3
mov
sbb
fidivrs
bound
testl
mov
rcll
mov
cmpsl
popa
test
inc
pusha
test
and
xor
push
dec
cmc
in
arpl
mov
cmpsb
stos
orb
lea
out
jmp
push
test
sti
test
pop
popf
lahf
xor
and
xor
rorl
outsl
add
push
arpl
fistps
fmull
mov
psrld
mov
mov
repz
shll
in
in
dec
inc
jo
mov
test
pop
out
test
mov
add
imul
add
xchg
jbe
out
cltd
push
mov
dec
mov
add
mov
movsl
test
orl
data16
mov
adc
ds
fisttps
push
mov
cmp
cmp
mov
mov
xor
fwait
inc
push
test
shl
shld
test
dec
mov
add
jb
push
daa
loope
and
cmp
dec
das
jmp
adc
inc
mov
mov
nop
cmpb
mov
or
mov
daa
xchg
outsb
test
push
xor
and
hlt
test
mov
test
jb
or
mov
inc
cmp
inc
fptan
sbb
insb
test
jbe
pop
popf
fwait
xchg
mov
cmpsb
mov
mov
xchg
lcall
in
pop
mov
mov
mov
mov
call
jl
add
adc
and
test
xchg
sub
test
insl
in
mov
sbb
sub
sub
push
mov
test
jnp
stos
xor
mov
test
pushf
sbb
or
pop
bound
add
jnp
mov
and
mov
sahf
fisubl
inc
mov
arpl
outsl
jecxz
imul
sbb
aad
mov
fnclex
fisttps
jp
mov
sarl
test
mov
pop
test
loopne
shr
mov
adc
test
jnp
jb
push
or
mov
repnz
push
hlt
adc
int
push
test
in
xor
pusha
cs
outsl
xchg
stos
adc
call
test
bound
lret
cli
aas
arpl
mov
cmp
inc
push
adcl
or
scas
mov
rorl
test
fimull
rol
hlt
sub
insl
push
add
jae
or
arpl
or
lds
repz
ss
cmp
test
insb
push
rolb
aam
xchg
mov
test
ja
mov
mov
mov
mov
mov
sub
int
push
mov
inc
test
imul
xor
dec
mov
cmp
mov
and
adc
pop
movsb
loop
sbb
or
push
test
out
mov
sahf
test
push
mov
xchg
inc
test
pop
inc
stos
sub
xor
movsb
shlb
adc
adcb
movsb
adc
cli
cmpsl
pop
push
loop
popf
xrelease
shll
lahf
sbb
mov
mov
mov
adc
leave
cmpsb
cmpsl
popl
xchg
pop
arpl
mov
xor
scas
xor
pop
std
xchg
test
mov
test
cwtl
shr
das
jmp
inc
movsb
xchg
or
leave
aas
adcl
mov
push
call
mov
push
mov
mov
sub
push
lahf
cmp
je
push
pushf
pop
push
mov
mov
cld
aas
sub
loop
bound
lcall
sub
jb
dec
add
call
das
movsb
mov
andl
mov
test
xchg
test
addb
adc
loop
xchg
inc
cmpb
cmp
sub
mov
mov
mov
iret
loopne
shrb
test
movsl
mov
scas
cmp
test
daa
mov
push
popa
cli
lahf
fiadds
insb
outsb
and
mov
test
fldenv
shll
push
xor
mov
xchg
into
hlt
lods
mov
rcll
lret
icebp
fstps
jmp
divb
xchg
sbb
jnp
cmp
daa
cmp
imul
sbb
ja
mov
lcall
sub
pop
push
or
cmp
jne
mov
test
imul
test
in
push
test
adc
ror
test
into
sbb
jge
sbb
adc
addb
and
movsb
push
out
sbbl
roll
insb
fidivrl
sbb
xchg
jmp
stos
bound
mov
jnp
xor
cmpsl
in
test
xchg
shr
jl
fiadds
stos
scas
fiaddl
jmp
in
jns
pusha
insl
mov
sbb
adc
movsb
ret
cmp
sbb
test
pushf
mov
push
das
lods
pusha
nop
mov
sub
shlb
push
dec
inc
or
and
mov
nop
push
lcall
mov
test
mov
test
pop
cmp
mov
mov
push
stos
sahf
cld
mov
gs
cli
sbb
or
cmp
push
scas
mov
imul
rolb
lods
xchg
fwait
bound
repnz
test
dec
hlt
jns
movsb
test
lock
les
cld
cmc
sub
je
test
imull
dec
stos
fs
aam
cmp
test
and
jecxz
mov
pop
jnp
push
fwait
cmp
out
test
push
cmc
popf
mov
adc
jle
in
test
push
das
daa
pusha
add
mov
out
xchg
add
arpl
jl
popf
or
and
icebp
inc
hlt
jo
dec
mov
pop
dec
mov
fldenv
sarl
andb
sub
mov
andl
andb
mov
add
dec
test
pusha
cwtl
jl
movsb
dec
into
xor
clc
xchg
inc
xchg
pop
sbb
stos
cmp
mov
aad
icebp
shll
mov
test
sbb
and
sahf
scas
cmpsb
test
mov
push
hlt
popf
rcrb
test
lods
shll
test
aam
and
bound
insb
sub
jl
std
sub
imul
jle
sub
int
mov
xor
hlt
stos
icebp
movsb
in
aad
xor
aas
mov
and
arpl
lcall
imul
sbb
push
jnp
dec
fstpt
movsb
mov
lcall
stos
cmc
adc
push
test
xor
mov
cltd
dec
add
sub
or
dec
imul
xor
or
xor
inc
push
add
test
neg
das
xlat
pusha
mov
xchg
arpl
jp
mov
daa
push
test
imul
bound
pop
cs
test
xchg
addl
lahf
mov
add
hlt
mov
insb
dec
jecxz
push
mov
shld
sbb
clc
lret
mov
push
mov
popf
push
sbb
add
cs
test
pusha
call
test
nop
je
push
insl
rorb
loopne
call
jmp
mov
arpl
insb
enter
adc
mov
sub
mov
je
push
mov
jp
test
addr16
xor
leave
mov
iret
push
popa
jne
stos
test
dec
repnz
cs
inc
jmp
adc
mov
xlat
dec
sahf
loopne
scas
and
jmp
pop
add
add
xor
scas
fidivl
and
ror
test
subl
fnstenv
call
test
pop
pop
daa
xor
push
mov
test
jmp
dec
insb
fimuls
mov
repnz
mov
icebp
insb
sbb
mov
mov
idivb
and
fistpll
mov
lods
mov
test
fimull
repnz
test
jecxz
jmp
cmp
stos
std
sbb
out
sbb
add
mov
add
stos
jb
testl
daa
mov
loope
test
leave
fdivp
test
inc
adc
into
mov
mov
xor
mov
adc
xor
cmp
call
mov
mov
lret
je
test
stos
mov
ja
dec
testb
popf
pop
lods
mov
xchg
fs
mov
mov
push
adc
and
in
test
mov
lcall
lods
jnp
test
insl
mov
mov
and
out
or
arpl
mov
mov
stc
jnp
sbb
cmp
outsb
mov
dec
cmp
test
sub
mov
mov
mov
sbb
aam
in
ss
push
movsb
dec
push
and
jp
ret
xchg
mov
cmp
lea
pushf
sahf
test
aad
ret
xchg
push
mov
test
mov
mov
orb
int3
inc
push
sbb
rcrb
aam
out
inc
pop
imul
xor
jae
aam
cmp
std
mov
ljmp
add
rclb
push
test
adc
movsb
stc
mov
in
icebp
mov
mov
xchg
pop
out
add
inc
mov
pop
cmpb
dec
mov
adc
cmpsb
movsb
shll
cmp
test
mov
mov
and
fsubl
mov
scas
pop
testl
out
mov
sub
test
mov
cli
das
test
cmp
test
add
imul
and
js
jb
mov
in
sbb
cmp
cwtl
mov
iret
arpl
pop
es
mov
popl
push
and
test
arpl
mov
jb
mov
mov
in
mov
sub
arpl
mov
test
rcrb
push
adc
je
dec
and
out
ljmp
ja
mov
dec
xchg
cmp
mov
cmc
dec
div
popl
sub
adcb
sbb
or
add
xchg
xor
or
xor
movsb
test
push
shl
adc
movsb
arpl
jp,pn
sub
mov
stos
lea
add
lods
mov
jle
sahf
test
fwait
pop
insb
adc
in
sub
decl
test
cmp
pop
arpl
sbb
icebp
xchg
sub
or
cmp
sub
adc
xor
das
test
mov
dec
sbb
mov
mov
jle
into
pop
ds
jnp
sti
jg
jne
aam
and
ret
int
xor
xlat
data16
jb
sub
mov
add
mov
gs
inc
lea
in
enter
pop
sbb
mov
test
jb
decl
push
std
add
testl
fimull
incb
inc
adc
cltd
add
divl
int
in
sbb
dec
mov
loopne
les
sub
inc
pop
add
aas
mov
test
shl
stos
cmc
les
cmpl
out
add
lret
add
insl
inc
jecxz
testl
mov
mov
mov
inc
and
cmpb
adc
mov
pop
xor
lods
in
test
pop
sub
push
das
mov
test
imul
test
push
cmp
adc
fildl
xchg
xchg
mov
cmc
lds
inc
and
or
movb
sub
mov
fidivl
jo
jle
mov
popf
mov
adc
cwtl
pop
dec
mov
loopne
movsl
test
aas
sbb
push
and
xor
pop
mov
les
fisttps
stos
mov
cwtl
xchg
mov
je
jecxz,pn
cmp
cmp
xor
adc
pop
sub
test
xchg
decb
lock
test
mov
dec
jne
leave
in
loope
sub
imulb
fidivl
dec
pop
imul
and
jnp
add
sub
outsb
rol
dec
sbb
test
pusha
dec
xor
in
adc
das
mov
mov
int3
xlat
and
ficompl
stos
test
mov
mov
jl
mov
mov
popa
mov
mov
adc
mov
test
mov
mov
pop
push
repnz
movsb
lcall
cmpsl
pop
cmc
arpl
sub
push
sbb
in
mov
test
mov
roll
insb
sbb
loop
test
mov
aaa
and
test
rorb
loope
mov
orb
mov
pop
xchg
gs
mov
outsl
test
scas
mov
testb
stos
loope
imul
jnp
and
xlat
cmp
and
sub
add
cld
mov
cmp
nop
lret
inc
push
jmp
lea
inc
test
scas
aad
inc
faddl
pop
into
push
pop
movsb
imul
daa
jnp
mov
cmp
mov
std
dec
lods
data16
add
mov
cmc
ret
loope
add
jne
test
int
mulb
sub
icebp
stc
mov
pushf
and
mov
js
mov
cmp
sahf
test
mov
xchg
sbb
aaa
dec
jo
sub
stos
icebp
fninit
arpl
and
test
in
les
daa
sbb
sbb
movsb
and
and
fisubs
mov
cmp
cwtl
pop
insb
mov
pop
sub
sbb
adc
test
sub
pop
stos
loopne
adc
dec
and
xlat
notb
dec
or
outsb
mov
jecxz
loope
insl
test
stos
inc
cmpsb
push
push
jnp
mov
adc
jmp
sti
cwtl
push
stos
mov
fdivr
mov
xchg
ror
jle
in
in
test
mov
scas
flds
into
in
add
ret
push
icebp
test
jmp
hlt
sarb
aam
mov
fcomps
in
cmp
imul
out
fwait
mov
pop
sub
insb
jp
arpl
mov
sbb
stos
and
mov
lret
mov
fwait
push
and
into
test
mov
sub
mov
shrl
das
test
mov
cmpsb
push
or
test
aaa
ljmp
add
roll
lret
sbb
sub
pop
sub
push
shrb
ficoms
ret
sbb
scas
aas
mov
cltd
cmp
mov
mov
daa
pop
not
mov
mov
mov
call
mov
cmpsb
sahf
fiaddl
out
and
test
or
ds
ja
sub
test
jmp
cmp
popl
repnz
fbld
or
cmp
nop
inc
mov
dec
outsl
and
mov
sbb
push
dec
mov
aas
lods
mov
pop
bound
leave
lods
mov
sbb
test
idivl
pop
ret
sub
sub
aam
and
fidivl
ret
stos
aam
lret
imul
stos
imul
fldcw
mov
insb
scas
in
int
sbb
test
sub
movsb
test
and
ret
mov
nop
mov
pop
mov
mov
and
and
xchg
and
subl
add
test
sbb
idivb
xor
mov
test
push
test
fsubrp
xor
and
test
mov
fisubl
add
mov
out
cmc
mov
sbb
inc
test
xor
push
addb
in
pop
test
insb
inc
sbb
mov
mov
test
add
iret
dec
xlat
mov
nop
test
push
popf
pop
add
mov
bound
sub
mov
fsubs
ja
xlat
pop
in
cmp
pushf
mov
test
and
dec
aas
add
cmp
jnp
stos
lcall
mov
jp
cmpsb
daa
out
test
xor
push
sahf
pop
lods
mul
mov
test
stos
mov
in
lea
mov
lret
sub
lcall
dec
mov
data16
popa
imul
movsb
mov
cmp
iret
icebp
sbb
in
jno
inc
in
mov
nop
ret
sbb
mov
faddl
push
mov
mov
div
cmpsb
and
mov
fdiv
push
mov
stos
shll
inc
movsb
sub
loopne
mov
stos
daa
int3
insb
mov
pop
sbb
pop
sbb
xchg
pop
jl
addb
pop
loop
in
insl
fnstcw
and
ficoms
sbb
mov
push
andb
andl
mov
xor
mov
les
sahf
mov
pop
roll
mov
dec
pop
aad
jb
outsb
lcall
test
in
mov
jae
dec
retw
push
repnz
push
mov
test
aaa
and
inc
mov
and
mov
mov
popa
into
pop
test
cmp
sbb
aam
jae
lret
cmp
fiadds
mov
es
std
dec
push
out
xchg
add
stos
and
mov
adc
cmp
mov
lods
daa
clc
pushf
sarb
ret
jmp
push
in
movsb
dec
jle
loopne
cmp
subl
xor
mov
sbb
mov
std
and
cmc
arpl
subb
inc
nop
icebp
test
fadds
mull
jecxz
das
fmull
mov
push
test
loopne
mov
test
loop
hlt
mov
mov
out
mov
mov
addl
and
test
dec
call
jp
sub
loopne
lods
add
std
push
lods
cwtl
lods
ficompl
gs
push
test
jne
sbb
ss
arpl
loope
test
repnz
cmc
ljmp
jg
jp
aas
mov
lods
insb
rorl
cmp
inc
jl
scas
pop
lods
or
into
les
jnp
mov
adc
add
stos
test
dec
push
mov
lcall
push
test
ret
test
sub
loopne
insb
in
das
daa
sbb
jecxz
mov
dec
cmp
cmp
mov
sti
xchg
dec
test
push
insb
or
mov
xor
push
inc
mov
xor
sbb
enter
mov
icebp
jp
ljmp
xchg
add
mov
cmp
stos
dec
ret
nop
pop
cmp
test
jb
scas
xor
xor
push
mov
insb
incb
shll
movsb
into
lret
or
xor
in
mov
insb
mov
stos
dec
movsb
sbb
stos
fistpl
enter
adc
fiaddl
test
pop
aad
test
out
sbb
cmc
add
xchg
sahf
lods
test
aas
sbb
test
fdivr
test
int
or
add
dec
lret
test
sbb
and
lahf
xor
xor
and
test
mov
js
mov
mov
pop
rorl
and
inc
dec
mov
ljmp
sbb
nop
pop
cmp
xchg
in
xchg
cmp
sub
rorb
sbb
stc
pop
in
pop
popa
or
int
dec
dec
std
adc
arpl
xchg
shlb
movsl
mov
push
dec
jmp
stos
mov
das
enter
mov
dec
mov
lahf
fistl
icebp
mov
test
fwait
test
inc
jb
pushf
and
pop
pop
cmp
add
or
test
sub
and
int
stos
push
push
sub
test
ret
mov
mov
ret
cli
test
in
jno
testl
and
imul
mov
and
mov
test
cmc
in
jo
mov
lods
dec
loop
movsb
int
divb
daa
sub
arpl
sti
and
and
subb
mov
mov
test
or
jle
jne
mov
aam
mov
daa
test
cld
mov
mov
sub
and
push
sarl
sbb
dec
xor
bound
movsb
pop
mov
icebp
xor
test
mov
xchg
in
cmpsb
xchg
imul
mov
jnp
push
fwait
xor
out
movsb
push
push
stos
dec
stos
add
fsubl
mov
sarb
sub
mov
insl
or
cmp
loopne
shrl
mov
cmc
stos
mov
pusha
mov
sub
in
div
xchg
jle
mov
adc
mov
inc
es
mov
mul
add
testb
in
nop
out
mov
lods
mov
inc
jnp
or
lret
or
ret
scas
sub
xlat
stos
in
cmpsl
cmp
and
loopne
loope
and
lcall
pop
arpl
cmpsl
insb
mov
hlt
sahf
xor
xor
dec
jb
jle
cmp
test
arpl
adc
lret
inc
mov
inc
mov
test
push
ret
mov
inc
mov
cmpsb
xorb
mov
or
stos
fdivrl
add
loopnew
test
adcl
bound
or
shll
add
push
dec
cmp
mov
sbb
into
mov
push
xor
inc
pop
xor
push
fildl
cmpsb
mov
aad
test
and
nop
jns
test
jae
push
test
stos
fsqrt
lea
fwait
mov
movhps
shlb
mov
mov
movsb
xchg
in
out
sarl
sbb
pushf
jg
jmp
pop
push
cmp
daa
cmc
out
test
adc
scas
bound
pop
push
ja
xor
xor
into
stos
ja
test
adc
xorb
mov
cmp
test
mov
lcall
sub
out
or
and
out
push
in
sub
inc
out
mov
test
popf
mov
add
sahf
sbb
ja
add
jae
mov
stc
test
or
testl
stos
test
jne
rorl
mov
mov
sub
mov
mov
std
adc
test
test
loop
test
push
and
sub
test
loop
mov
test
test
add
nop
and
inc
pop
lfs
jle
mov
test
pop
xor
xor
das
test
popa
mov
mov
cmp
xor
repz
out
test
outsl
lret
mov
xchg
movsl
mov
jmp
or
lock
fadd
cmp
leave
fsts
pop
and
sub
test
test
pop
push
scas
sub
in
gs
dec
insl
aam
or
shlb
xchg
loope
cli
shl
in
jno
les
fs
inc
mov
rorb
sub
xor
das
test
dec
insb
dec
sti
mov
pusha
cmp
fiaddl
push
test
fisttpl
mov
sahf
data16
sub
or
pop
mov
xchg
icebp
test
loopne
mov
imul
jecxz
pop
mov
in
imul
dec
fbld
imull
fcomps
sub
stos
test
lods
mov
or
push
push
mov
stos
pop
pushf
fwait
push
mov
fdivl
lcall
mov
push
jl
lods
xor
inc
pop
inc
loope
out
test
or
mov
stos
icebp
jge
fcmovne
mov
add
mov
arpl
cmp
push
pop
cmpsl
arpl
jno
movsb
or
movsl
mov
sub
dec
arpl
je
mov
dec
test
or
cwtl
sub
test
cmpsb
xchg
jge
test
ret
ja
xchg
movsb
jmp
test
lods
int3
xchg
jns
out
test
xchg
and
or
mov
or
arpl
mov
movsb
aad
inc
jae
fidivl
shr
loop
mov
into
and
repnz
jge
adc
inc
stos
mov
add
sbb
fists
cmpsl
add
cmp
out
hlt
daa
mov
push
test
add
inc
mov
sbb
pop
adc
cmpsb
test
push
inc
pushf
test
stc
mov
lods
mov
push
testb
pushf
mov
cmp
xor
cmp
sbb
shll
das
movsb
stc
insb
jmp
or
cmp
xor
mov
test
jle
pop
and
bound
mov
cmpsb
enter
lods
mov
int
test
dec
dec
stos
xchg
or
jp
mov
movsb
push
mov
in
sub
enter
or
dec
push
pop
lds
adc
mov
arpl
out
int
jecxz
mov
pop
mov
mov
cmp
mov
jmp
mov
jns
mov
mov
sub
lods
test
repz
push
push
test
ja
xlat
fs
ret
add
xor
je
xor
test
mov
mov
mov
adc
fdiv
jmp
ljmp
rcll
push
pop
inc
lcall
je
in
out
cmp
arpl
cld
scas
cmp
mov
xchg
shr
adc
jp
sbb
icebp
stc
hlt
test
sbb
cmp
test
add
mov
mov
add
in
aas
lcall
shlb
stos
jmp
leave
and
and
mov
push
sarb
std
sbb
mov
in
mov
test
lods
insb
adc
push
pushf
dec
cmp
ss
test
imul
sub
mov
test
cmp
sub
fwait
test
stos
jno
mov
test
mov
dec
loope
xchg
dec
push
push
sbb
test
sub
mov
test
mov
sub
imul
fdivrp
xorb
inc
mov
push
sub
jecxz
rclb
push
mov
xor
mov
xor
mov
xchg
bound
out
mov
mov
xchg
movsb
pop
cmp
push
mov
je
inc
test
imul
stc
or
sub
cwtl
popa
loope
pop
ret
hlt
pusha
outsl
mov
loop
test
sub
fcmovb
ss
dec
mov
mov
cmc
shl
test
loop
std
test
enter
cmp
rep
lock
mov
or
loopne
lret
mov
cmp
cmp
imul
enter
xchg
shrb
into
mov
hlt
or
call
mov
fildl
movsb
iret
repnz
scas
icebp
push
and
test
push
xlat
in
pop
icebp
xchg
addr16
repnz
cmp
and
test
sbb
dec
mov
jecxz
mov
nop
ret
or
sbb
pop
test
les
outsb
test
sahf
dec
test
mov
push
roll
andl
xlat
test
ret
test
repnz
dec
and
les
sbb
mov
and
in
dec
stos
or
in
pop
mov
test
xchg
mov
inc
mov
fwait
push
sbb
and
inc
mov
and
loope
mov
mov
xchg
js
cmp
pop
mov
pop
jnp
jle
and
push
cmpsl
lret
pop
and
lods
cltd
add
out
popf
movsb
lods
push
mov
fidivrs
mov
mov
pushaw
push
out
mov
and
enter
push
push
lahf
test
in
test
dec
sub
jl
fcomps
xorl
test
jnp
cmpb
push
movsb
xor
xor
mov
cmp
pushf
jle
xchg
adc
test
sub
insb
in
enter
out
inc
mov
test
mov
add
imul
jl
mov
jne
test
sub
pminub
cmp
mov
cmp
sbbl
movsl
movl
insb
xchg
mov
test
enter
mov
pop
rcll
jne
sub
cmc
mov
xchg
inc
mov
lret
mov
mov
and
cmp
mov
mov
test
rcrb
xor
inc
pushf
and
imul
xchg
lcall
test
add
dec
sub
jmp
jp
cwtl
add
mov
test
pop
fxch
add
mov
sbb
dec
shlb
enter
divb
jb
ret
push
mov
ja
in
int3
cmpsl
ror
fsub
in
mov
dec
mov
fwait
loop
mov
stos
or
orb
inc
xlat
mov
repnz
test
or
dec
xchg
loope
jle
testb
dec
test
cmpsb
fadds
add
in
cltd
stos
stc
mov
and
and
mov
mov
hlt
cs
lcall
stos
sbb
mov
mov
sbb
into
xchg
imul
test
ds
je
addr16
hlt
scas
mul
jb
ret
lret
fwait
clc
dec
ret
cmpb
aam
rcr
cmp
dec
test
loop
int
and
les
jecxz
in
mov
cmp
mov
test
mov
mov
test
jl
xor
mov
fldcw
pop
stc
mov
jle
arpl
push
sbb
shrb
call
mov
dec
mov
and
out
ja
cmp
jl
test
enter
or
stos
leave
xor
mov
test
mov
inc
push
mov
jno
femms
sub
dec
insb
and
and
mov
sahf
inc
mov
les
ja
xchg
lods
push
testb
and
pusha
test
arpl
mov
mov
jp
and
lods
sub
jle
orl
data16
ljmp
jmp
jecxz
and
cmp
push
stos
test
cli
sub
lods
sbb
jl
adc
test
xor
cli
mov
test
and
dec
xchg
xchg
fisubrl
test
gs
insb
cmp
test
cmp
pop
outsb
cmp
faddl
mov
lret
outsl
pop
push
movl
add
mov
je
mov
push
arpl
xchg
scas
loop
dec
pop
test
enter
pop
push
xor
insb
fnstcw
arpl
adc
xchg
mov
xchg
mov
jmp
add
and
pop
lock
inc
movsl
jecxz
test
sub
aad
fisubl
in
sub
test
adc
test
jle
push
xchg
dec
test
cmp
lcall
mov
mov
cmp
sub
bound
cmpsl
inc
dec
mov
mov
push
cli
fisubrl
test
arpl
or
out
test
stos
or
xor
pop
jns
leave
loopne
sub
cmp
imul
rorl
cmp
pop
test
pop
cwtl
mov
adc
ds
cmc
test
rcrl
add
jp
in
push
xchg
jl
push
icebp
test
mov
arpl
cmp
lds
mov
sbb
xor
push
push
sub
popf
test
sub
bound
cmp
jmp
subb
adc
or
lret
bound
loop
test
dec
push
lods
movsb
xor
sub
cmp
jl
cmp
andl
cld
push
jbe
mov
mov
fs
sub
mov
and
test
pop
pop
sbb
test
xchg
add
test
cltd
xchg
loope
sub
add
sub
mov
insl
mov
mov
test
jb
inc
mov
cld
nop
cmpsb
mov
pusha
mov
sub
pop
test
and
jns
sub
or
pop
stos
lock
in
daa
fwait
mov
rorl
imul
sbbb
stos
lret
jno
mov
inc
jmp
out
mov
je
cmp
inc
or
push
clc
stos
mov
stos
test
sub
or
mov
sub
roll
adc
dec
mov
lcall
or
mov
hlt
int3
lret
into
sub
inc
sub
in
test
sahf
arpl
movsb
cmc
lcall
mov
test
add
mov
lcall
adc
fiaddl
stos
mov
mov
mov
jno
xchg
nop
mov
pop
stos
add
shrb
dec
test
icebp
mov
add
les
xor
push
mov
test
stos
in
stc
adc
mov
and
jmp
arpl
test
mov
insb
test
xor
lods
add
sub
cmpl
jp
gs
test
xor
xlat
pop
sub
mov
or
mov
adc
add
mov
cli
bound
mov
pop
fildl
call
stos
ret
adc
test
iret
mov
mov
or
sub
and
push
adc
push
test
dec
pop
cmp
sbb
cli
fisubs
test
fwait
mov
test
add
sbb
test
imul
incl
imul
pcmpeqd
test
jle
loope
ret
and
mov
dec
into
ljmp
repnz
test
loop
push
mov
pushf
and
pop
sbb
aad
daa
test
dec
mov
adc
test
aas
shll
jb
cmp
in
add
arpl
inc
popf
fimull
test
mov
mov
into
loopne
in
xchg
inc
pushf
test
sub
rorl
mov
jl
test
std
adc
jns
dec
pop
mov
push
mov
push
cmp
and
test
cwtl
mov
adc
in
pop
jecxz
sbb
stos
xor
leave
mov
fdivl
mov
lds
mov
dec
test
insb
dec
test
add
das
fisttpl
mov
jno
inc
es
mov
bound
sub
mov
inc
into
mov
cmp
mov
test
lods
sub
inc
shrb
test
jp
pushf
jno
mov
into
inc
lahf
and
aaa
sarl
jbe
add
fcompl
mov
test
not
adc
fistpl
push
mov
mov
cmpsb
xchg
fwait
out
xor
arpl
into
loope
mov
pop
dec
test
add
sbb
sbb
inc
repnz
bnd
mov
insb
test
lahf
push
leave
ja
dec
jne
test
gs
push
lea
add
nop
mov
icebp
das
into
xor
cmp
call
test
lods
inc
dec
fnclex
mov
add
jns
outsb
mov
mov
or
hlt
out
pushf
push
dec
fcoml
and
adc
rclb
inc
incb
cmp
test
jl
and
movsb
stos
push
adc
lods
test
mov
and
imul
pop
push
mov
mov
sbb
test
insb
mov
sub
and
pop
mov
rcl
adc
mov
mov
mov
sti
push
les
jecxz
test
adc
test
inc
hlt
das
dec
add
and
test
mov
jp
cmp
addl
bound
imul
jnp,pn
stos
mov
mov
xor
repz
lret
test
jg
popa
test
or
aad
push
jle
pop
test
movb
xchg
test
in
mov
iret
in
inc
lcall
inc
pop
and
push
inc
mov
mov
test
cmp
in
sarb
pop
xorb
cmpsb
test
xor
fiaddl
push
or
and
imul
test
setnp
xchg
push
mov
inc
in
out
xor
fs
pop
mov
rcrb
stos
inc
mov
xchg
cmp
bound
xor
or
test
out
push
pop
outsl
cltd
sbb
and
cmc
insb
adc
pushw
pop
mov
mov
test
mov
shll
daa
mov
clc
dec
dec
mov
scas
test
inc
nop
jnp
cltd
mov
inc
mov
mov
dec
mov
test
xor
mov
push
ljmp
ret
cmpsb
dec
push
test
movaps
mov
mov
outsb
loop
mov
pusha
push
pusha
or
mov
popa
inc
pop
es
test
or
ja
dec
jmp
xchg
xchg
and
push
movsl
test
sbb
jae
addb
faddl
pushf
insb
je
mov
jle
push
rclb
fcmovne
in
repnz
mov
xor
dec
adc
inc
andb
xchg
sub
mov
mov
test
or
inc
icebp
add
je
mov
inc
sbbl
push
mov
nop
push
test
aad
and
std
es
test
out
cmpsb
sub
push
pushf
xchg
icebp
cltd
test
sub
in
pop
inc
mov
int
cwtl
and
rorl
inc
mov
jecxz
std
pop
mov
xor
roll
inc
mov
push
dec
pop
test
je
and
testl
in
mov
call
inc
fsubrl
inc
mov
push
jb
xor
sbb
mov
in
mov
sbb
out
mov
pop
add
xlat
popl
hlt
push
and
pop
repnz
leave
fcomps
aam
xor
popf
mov
xor
test
jo
les
stos
jecxz
test
fldt
lea
das
aas
jae
pop
sahf
outsb
mov
push
add
mov
push
pop
jne
add
and
mov
sarl
mov
mov
cli
and
dec
mov
cmp
sti
xchg
pushf
ss
add
roll
in
lods
adc
mov
insb
das
mov
mov
and
jne
lcall
or
or
mov
mov
pop
pop
pop
pop
mov
test
sbb
arpl
test
push
loop
or
scas
test
and
cmp
test
sbb
arpl
stos
mov
jb
cmp
mov
daa
mov
int
adc
and
bound
xchg
leave
adc
test
lret
pushf
xchg
imul
adc
or
insl
es
fwait
shlb
adc
push
add
cltd
mov
lods
movsb
enter
or
orb
mov
test
mov
daa
jbe
loop
inc
xchg
dec
mov
aad
in
adc
cmpsb
pop
fstpt
movsb
stc
int3
mov
xchg
jns
and
mov
push
scas
int
mov
shll
mov
add
out
mov
test
sbb
cld
lods
sub
stos
sbb
mov
sbb
add
jle
sub
out
mov
mov
nop
push
dec
sbb
test
adcw
mov
test
or
test
add
jp
rcrl
adc
negb
movsb
loop
pop
imul
pop
cmp
xchg
xchg
push
insb
aam
call
mov
jmp
es
cmpsl
inc
test
gs
push
aam
pushf
movsb
push
in
xchg
adc
mov
je
sbb
enter
pop
int
insb
xor
xor
dec
inc
cmp
je
push
adc
mov
cmp
push
pushf
jl
pop
cmp
sbb
xchg
stos
mov
mov
sub
les
data16
test
pop
jbe
test
add
scas
leave
mov
mov
hlt
movsb
sub
jecxz
mov
mov
mov
lret
ja
stos
cmp
je
sbb
xchg
jp
test
fildll
push
divl
repnz
mov
mov
loopne
clc
add
cmp
push
and
or
cmpsb
jmp
test
pop
cli
sub
negb
pop
sbb
xchg
ss
repnz
pop
add
pop
adc
cli
jmp
sbb
test
dec
cmp
and
popf
sbb
mov
pop
sbb
int3
xchg
cmp
pop
and
or
or
cld
xor
movsb
data16
pop
test
repnz
rorl
push
shl
mov
in
lret
lea
icebp
add
fcomps
test
mov
dec
sub
jnp
enter
adc
dec
mov
arpl
mov
test
in
rorl
mov
repz
cli
les
pop
mov
cwtl
cmpl
mov
das
lock
movsb
dec
outsl
mov
mov
inc
mov
adc
jmp
mov
dec
stos
icebp
inc
dec
jo
xchg
test
jmp
out
mov
aas
test
rorl
dec
hlt
cmpsb
mov
cmc
cmp
cld
mov
cmp
movsb
lret
mov
fisttpl
into
jl
mov
cmpsl
imul
test
cmc
dec
icebp
jnp
stos
xchg
mov
and
and
test
int
or
and
and
jns
mov
cmpb
outsl
mov
cmpsl
mov
enter
jl
mov
mov
imul
testl
xor
mov
pop
in
sub
addb
jmp
into
pushf
aas
jbe
test
pop
mov
mov
cmpl
lods
xor
test
dec
roll
fsts
test
or
xchg
shl
int
repnz
xor
imul
bound
inc
mov
movsb
nop
test
sbb
data16
enter
or
mov
movsb
pop
push
fstpl
xchg
jne
test
icebp
adc
push
xchg
xchg
test
std
ss
push
jge
out
add
mov
jno
mov
in
ffreep
xchg
jb
insb
rcr
mov
scas
in
dec
mov
stc
cmpsb
lret
cli
ret
out
arpl
mov
inc
loopne
fbld
aaa
mov
fcomi
clc
arpl
jns
pop
cmp
mov
mov
jl
jbe
dec
movsb
push
stos
rclb
mov
inc
xchg
or
push
cmp
test
fisubl
pop
cli
add
popf
test
fcoms
xchg
pushf
lds
mov
imul
mov
dec
loopne
test
xchg
stos
fadds
out
loope
add
mov
mov
bound
jmp
mov
pop
mov
and
mov
mov
addb
mov
cmpsl
test
bnd
enter
or
divb
rcrb
and
push
mov
jle
or
push
pushf
and
test
mov
pop
in
dec
cmp
rolb
ljmp
sbb
test
pop
xchg
sbb
pop
loopne
mov
push
icebp
test
cmc
hlt
insb
mov
mov
sti
int
dec
adc
mov
filds
cli
jns
sub
icebp
lcall
movsb
pop
nop
int3
cwtl
push
mov
mov
cmp
add
mov
jno
jmp
mov
out
fdiv
pusha
inc
loopne
mov
lds
ror
mov
push
test
lods
jecxz
sbb
fcomps
mov
mov
ret
pop
push
jl
gs
push
fiaddl
iret
lahf
incl
sbbb
adc
in
cs
into
cltd
sub
fwait
icebp
jp
ret
xchg
daa
mov
and
jns
jne
mov
sbb
cld
cmp
mov
sub
sub
jecxz
mov
or
test
mov
lods
aas
int
bound
insb
and
sbb
mov
inc
lcall
add
mov
or
repnz
mov
hlt
and
xchg
mov
loop
pushf
mov
push
mov
test
or
pop
jae
test
jb
or
bound
repnz
mov
hlt
je
movsb
mov
test
nop
pushf
test
mov
test
pop
popa
icebp
sub
xor
insb
inc
pop
rcrb
sub
test
jecxz
cmp
test
xor
add
rcr
sbb
fisttpl
and
daa
lcall
lds
insb
add
das
dec
hlt
jns
jl
mov
test
popa
push
cmpl
inc
testb
test
add
sbb
sarl
pop
das
jg
in
xchg
and
test
inc
jns
push
push
nop
add
dec
fwait
mov
sub
in
mov
fs
dec
adc
imul
inc
push
fs
popa
mov
outsl
test
jmp
test
sbb
xchg
ret
test
shlb
push
incb
call
mov
sbb
cmc
stos
les
loop
add
xchg
sub
scas
test
push
pop
fwait
cmp
ret
push
shld
fiadds
jmp
test
scas
stos
pop
dec
stos
pop
dec
mov
test
test
aas
push
shl
dec
pushf
test
mov
xchg
xchg
leave
test
daa
out
push
dec
mov
test
sub
or
in
dec
in
roll
movsb
test
aad
mov
pop
int
sub
cmpsl
sub
lods
leave
out
mov
arpl
mov
mov
xor
bound
xchg
mov
mov
inc
mov
mov
movsb
shr
push
xchg
or
xor
imul
cltd
jmp
inc
andl
icebp
in
or
xchg
or
fcmove
hlt
cmpb
push
mov
push
cld
cmp
xchg
hlt
mov
test
or
cmp
sub
in
rcr
cmp
fiaddl
mov
jmp
xchg
add
mov
mov
push
jmp
mov
and
and
pop
or
dec
add
arpl
xchg
rcrb
mov
pop
ja
lret
je
and
lods
addl
push
mov
sub
or
jmp
into
pop
xchg
test
es
jbe
sbb
inc
mov
jns
mov
mov
lds
jl
les
pop
push
mov
inc
sbb
push
bnd
hlt
mov
dec
jae
and
jle
fdivrl
pushf
je
scas
mov
jnp
push
add
test
insb
cltd
loopne
pop
jmp
inc
mov
aam
mov
xchg
and
sbb
icebp
sbb
and
or
scas
or
out
push
sub
mov
mov
shlb
add
stos
add
fadds
sbb
sbb
dec
mov
mov
and
xor
icebp
and
adc
andl
jmp
int
push
xchg
inc
movsl
mov
sub
shll
sub
mov
or
leave
into
pop
jnp
jns
loop
sbb
sahf
in
hlt
sbb
imul
push
and
add
add
mov
and
roll
cmp
adc
push
rolb
jp
sbb
dec
mov
dec
movsb
popf
pop
xor
and
hlt
test
sbb
rcrl
jg
testb
outsb
xchg
test
lea
add
imul
call
dec
push
icebp
imul
lcall
xchg
repnz
shrb
jecxz
test
adc
sbb
adc
or
inc
into
or
and
neg
mov
inc
cmp
mov
mov
jle
mov
daa
mov
sub
pop
paddw
test
rolb
out
lods
scas
test
or
fnstcw
cmp
sbb
xor
test
xor
dec
cld
rorl
movsb
mov
inc
mov
mul
rcll
push
add
jnp
cmp
inc
inc
or
int3
insb
add
pop
xchg
push
rcrb
testl
add
mov
xor
sub
test
popa
push
test
lods
mov
imul
jo
mov
arpl
xor
and
insb
xchg
pop
cld
mov
push
sti
or
and
stos
and
sahf
andb
xor
fistpl
imul
cwtl
arpl
adc
sub
sub
testb
mov
lods
jge
enter
adcl
mov
sub
sbb
icebp
imul
arpl
sub
xor
mov
adc
repnz
mov
test
mov
mov
dec
rcl
mov
mull
adc
and
les
mov
movsb
sahf
jnp
add
lods
xchg
in
cmp
cld
mov
mov
rcll
divb
mov
adc
enter
dec
int3
insl
test
repnz
lods
incl
sbb
xorb
and
test
jnp
dec
test
and
rcrb
mov
inc
mov
dec
jmp
inc
adc
aas
test
push
ja
xor
cld
fwait
jge
pop
pop
push
or
cmp
mov
mov
test
and
ljmp
out
adc
scas
jnp
add
mov
push
mov
add
push
and
mov
mov
adc
in
push
cmc
test
xlat
mov
jb
adc
outsb
and
or
arpl
pop
and
pop
push
sbb
adc
xchg
push
mov
mov
mov
push
add
jl
sub
test
in
push
cmc
pop
movsb
mov
lret
pop
inc
cwtl
movsb
subb
fistps
arpl
out
sti
xchg
mov
test
lods
mov
andl
xor
sbb
in
push
sub
mov
nop
test
inc
add
xchg
stos
mov
inc
out
bound
cs
and
mov
mov
sub
cmpsb
add
mov
shl
test
stos
repnz
fiadds
idivl
les
movsb
mov
pushf
jb
sbb
jno
cwtl
adcb
sti
fwait
or
rolb
mov
iret
repz
push
insb
repnz
aas
test
enter
jecxz
cmp
pop
pop
mov
and
adc
loope
jle
lahf
sbb
mov
pop
test
leave
fnstenv
icebp
das
jl
fistpl
mov
test
imull
aaa
cmp
pop
jbe
sub
xchg
sbb
xchg
xor
mov
sbb
push
xchg
cli
and
loope
icebp
xor
iret
push
fstpt
jne
jnp
mov
cltd
sti
mov
xchg
xor
ss
adc
xor
sbb
mov
or
test
movsb
jne
mov
jle,pn
cld
testb
jp
or
inc
adc
inc
dec
cli
cmpsb
dec
push
into
pop
sub
addr16
int3
push
adc
lret
fprem1
fdivl
jmp
mov
or
test
mov
push
xchg
test
lods
mov
jb
sub
in
fisubl
addr16
movsl
xor
insb
test
dec
push
cli
test
incl
xor
movsb
aaa
sub
xchg
add
mov
jne
test
push
negb
jl
mov
insw
nop
repnz
aaa
sbb
test
mov
sub
dec
jb
insb
ja
mov
test
cmc
or
mov
mov
or
sbb
add
dec
cmc
add
xor
xor
xchg
movsb
xchg
cmp
jmp
xlat
test
and
sbb
mov
arpl
hlt
dec
dec
push
fidivrl
xor
scas
out
ss
pop
enter
iret
push
sub
push
in
jbe
sbb
mov
or
in
ja
xchg
bound
aad
and
or
sub
sbb
in
arpl
rclb
cmpsb
ja
inc
arpl
jmp
and
sub
or
adc
mov
fisubrl
mov
add
lret
rorl
lret
mov
adc
sub
sbb
testl
xchg
imul
cmpsb
adc
das
push
inc
lahf
lods
jmp
and
sbb
ret
dec
ja
push
dec
out
testl
daa
test
xchg
sbb
das
int3
inc
mov
addr16
aas
push
or
mov
cmp
inc
pop
jbe
jns
mov
cmpsl
popa
rclb
mov
out
roll
xchg
clc
jb
mov
jnp
movsb
mov
mov
mov
daa
jbe
stos
cmp
test
rclb
lods
jecxz
pop
mov
inc
pop
inc
test
cmp
and
pop
out
mov
adc
fimull
aas
push
sti
es
xlat
mov
cli
incb
jle
dec
test
or
fcmovbe
sub
lods
stos
jp
mov
add
jmp
cmp
add
and
mov
mov
stos
jecxz
pop
pop
mov
mov
cli
movsb
enter
or
cmp
arpl
mov
in
mov
data16
push
fisttpl
loop
fildl
fidivs
mov
mov
xor
or
cmp
mov
ja
lods
xor
jne
test
test
dec
mov
test
fldenv
jo
jp
mov
pop
insb
mov
sub
data16
lcall
xchg
leave
and
mov
mov
inc
push
sahf
pusha
loop
mov
pop
cli
dec
in
fidivl
stos
test
push
mov
xor
pop
sbb
movsb
jns
push
sbbl
stos
inc
and
push
test
jmp
jl
pop
imul
mov
dec
dec
out
test
jne
adc
je
test
cmp
fmull
test
aas
xchg
test
ret
flds
aad
push
data16
rcrb
test
jb
test
push
cmpb
test
inc
push
leave
movsb
adc
arpl
or
inc
push
mov
movsb
adc
jp
mov
mov
andl
stos
rcrl
fnstenv
push
cwtl
pop
dec
jnp
jle
xchg
mov
mov
mov
jne
test
stos
jns
mov
sub
cmpsl
in
dec
pop
arpl
andl
insb
pushf
mov
cli
pop
sub
cmp
lcall
dec
push
adc
mov
cltd
push
sbb
dec
in
fidivrl
enter
test
xor
cmp
sti
test
das
int3
insb
sub
test
cmp
jecxz
mov
sbb
mov
fistl
sub
lds
pop
mov
cld
stos
subl
stos
cmp
mov
stc
in
negl
sbb
cmpsb
bound
pop
cld
cmp
jae
test
pop
loopne
fwait
mov
push
test
cmp
in
cmp
push
sub
int
jp
in
fistl
sub
fsubrl
and
in
fidivrl
add
and
loopne
and
dec
test
jp
sub
cmp
and
mov
subb
mov
sbb
push
cmp
das
stc
mov
arpl
scas
sti
jle
xchg
shll
sbb
sbb
in
sbb
jb
cmp
dec
mov
decb
pop
add
jnp
addr16
ja
test
pop
push
jns
insb
cmp
sub
mov
mov
cltd
cld
xor
aas
out
or
jecxz
jmp
sbb
mov
mov
je
test
lods
xchg
stos
lcall
sub
int
add
mov
push
pop
mov
movsb
andb
cmp
adc
mov
in
pop
jp
and
mov
jl
mov
std
shlb
stos
inc
and
idiv
dec
icebp
es
popa
sub
pop
cmp
sub
dec
outsb
pushf
clc
cmp
mov
test
add
test
jl
lods
xor
dec
cmp
jmp
pop
sbb
arpl
les
imul
leave
mov
jnp
test
iret
cmp
dec
adc
test
ljmp
sub
mov
mov
pop
mov
cmpsb
fwait
jno
faddl
xor
imul
bound
add
inc
movsb
jnp
pop
mov
mov
lcall
mov
inc
cmp
pop
mov
mov
xchg
cli
icebp
add
mov
lods
leave
cmp
push
test
or
lods
je
test
rcrb
mov
pop
test
pop
sbb
or
lods
mov
ret
das
pop
and
jb
pop
pushf
dec
push
jl
cmpsl
arpl
and
popf
sub
cmpsl
adc
mov
mov
fmull
jnp
lods
cmp
jns
mov
inc
mov
mov
push
sbb
mov
jmp
int
idivb
or
lcall
mov
insb
test
pop
test
loop
bound
movsb
imul
mov
xchg
and
arpl
pop
loop
add
movsb
les
roll
push
dec
movl
jp
jle
lods
xchg
cmp
xchg
mov
and
shll
pop
mov
cmc
arpl
sbb
popf
xor
fsubl
in
cmp
rcr
bound
jl
push
xor
mov
cli
dec
xor
jo
shrl
add
hlt
mov
cmp
mov
test
mov
inc
inc
int3
dec
mov
sub
mov
sbb
ret
push
pop
int
sbb
push
and
btcl
sbb
mov
test
jecxz
sub
sbb
lret
in
imul
adc
sub
jns
mov
jb
imul
adc
testl
mov
movsb
jp
inc
outsb
push
mov
out
movsb
mov
test
mov
xchg
inc
cmp
or
in
adc
pop
adc
mov
in
add
es
test
sbb
fwait
test
loope
push
jmp
dec
inc
jl
aam
mov
dec
push
mov
push
push
and
xchg
add
fmul
test
add
mov
add
cmp
or
shrl
mov
addb
mov
fstpt
mov
cmp
mov
test
les
jp
andl
xor
imul
mov
jp
xor
loop
imul
xchg
hlt
imul
cltd
test
push
test
and
sbb
pusha
jmp
test
xchg
or
push
in
mov
mov
sbb
add
roll
pushf
popf
pop
inc
pop
in
dec
stos
sbb
mov
gs
mov
imul
or
adc
jae
icebp
test
test
stos
popf
test
pop
or
cs
cmpsb
pusha
xchg
and
sbb
xor
sbb
stos
test
jae
dec
movsb
or
xor
add
in
push
mov
mov
cmpsb
or
sbb
xlat
addb
mov
sti
dec
push
imul
lret
and
mov
int
sub
or
test
jmp
xchg
cli
xor
and
and
stos
pop
fisttpl
add
mov
aad
jne
and
lods
das
jmp
dec
aad
test
cmp
stos
pop
stos
xor
shl
test
lods
jo
test
je
cmp
ja
pop
jp
mov
pushf
test
enter
adc
xor
pusha
test
push
inc
arpl
and
jno
dec
sub
add
xorl
roll
jmp
test
dec
cmp
idiv
test
mov
jp
cmp
add
test
push
fs
sbb
lret
imul
xor
sbb
lcall
sub
dec
pushf
mov
js
mov
add
push
xor
and
in
cmp
in
pop
mov
push
mov
shrl
inc
pop
xchg
ret
ljmp
xchg
add
cli
mov
shll
mov
test
jns
sbb
test
aam
push
push
add
sub
ret
lods
sbb
rorl
mov
lods
sti
imul
movsb
and
pop
add
stc
addb
daa
arpl
dec
or
mov
mov
bnd
cli
mov
mov
int
int3
test
pop
arpl
test
sbb
jp
sub
push
pop
pop
test
aam
push
fwait
push
xchg
imul
int3
push
pop
mov
cmc
stos
or
mov
push
fcompl
sti
adc
dec
aam
push
cmp
pop
bound
sbb
mov
xchg
fildl
jns
inc
stc
xor
and
movsb
and
out
jmp
push
test
push
sbb
mov
flds
pop
add
sbb
shr
in
sub
mov
test
push
cmp
mov
fcmove
pop
sub
pusha
push
cld
dec
mov
dec
test
sbb
cmp
sub
movsb
in
or
cmp
xor
cmp
mov
mov
mov
into
lods
dec
faddl
rcrl
incl
sub
push
repnz
mov
shl
sbb
pop
jns
std
fimull
test
push
pop
pop
xchg
arpl
arpl
pop
test
pusha
mov
push
cmp
and
and
xor
ljmp
sti
cmp
jnp
in
lret
loope
movsl
imul
pop
xor
fstpl
aas
inc
add
jecxz
leave
jbe
xorl
ss
xor
mov
mov
repz
ficompl
cmp
lret
aam
mov
add
sti
or
fmull
or
sub
insb
inc
cmpsb
cmp
popa
sbb
jp
and
mov
cmp
dec
faddl
movsb
lods
pusha
test
arpl
adc
int3
fs
jb
mov
mov
sub
cmp
test
mov
test
mov
rorb
lods
stc
push
ja
pop
movsb
mov
mov
jb
ljmp
hlt
sub
dec
dec
xor
inc
nop
add
sbb
and
fisttpl
adc
pop
imulb
sbb
pushf
movsb
fstps
in
and
dec
jne
adc
dec
cmp
test
or
pop
fsubr
pop
sbb
faddl
fwait
lcall
mov
adc
repnz
test
sub
dec
das
cli
lods
dec
cmp
arpl
cltd
in
ficoml
pushf
out
dec
xchg
pop
aas
in
jns
fidivrl
mov
imul
stos
leave
mov
lcall
jno,pn
pop
cmp
jp
es
cmc
pusha
inc
stc
sbb
cmp
test
aad
xor
mov
test
test
adc
test
jne
sbb
cmp
test
leave
sub
iret
test
bound
test
jb
xchg
or
or
sbb
push
test
ret
loop
repz
sarl
or
test
fmull
ljmp
mov
xor
and
test
dec
test
sub
mov
cmc
arpl
mov
test
cmp
mov
insb
mov
mov
jnp
fidivrl
cltd
sbb
enter
flds
mov
xor
outsb
arpl
mov
jp
sub
stc
xchg
insb
f2xm1
pushf
push
jb
fcompl
or
mov
stc
mov
stos
and
mov
mov
cmp
ja
or
jne
dec
mov
lcall
pop
or
incb
cmp
jmp
jnp
mov
andb
stc
je
iret
sbb
fnstenv
dec
xchg
outsl
daa
movsb
and
xor
cmp
or
and
add
xor
mov
cltd
mov
cwtl
imul
sub
add
cltd
movsb
push
stc
adc
sbb
mov
test
sub
nop
mov
pop
mov
scas
jmp
es
xor
mov
dec
dec
cmc
jp
frndint
and
xor
arpl
mov
mov
das
repnz
cmpsl
and
or
push
in
adc
sub
nop
mov
inc
int3
or
sbb
xchg
test
adc
jecxz
pushf
adc
in
mov
push
sti
inc
or
mov
xchg
arpl
pop
shll
mov
arpl
lods
mov
scas
mov
mov
mov
and
insb
test
fisubrl
arpl
das
mov
fsubrl
int3
pop
aaa
hlt
int3
sahf
mov
and
mov
lods
jmp
stc
cltd
mov
cld
jl
insb
jne
lret
dec
mov
and
inc
test
movsl
xchg
test
fcompl
sub
sti
xchg
in
sub
les
sbb
aam
cld
std
fwait
mov
dec
in
sbb
adc
mov
jno
push
sub
leave
cmp
fwait
dec
mov
enter
mov
test
mov
arpl
sub
inc
mov
je
int3
test
push
sti
lcall
mov
mov
cli
test
daa
pushf
sbb
mov
adc
in
or
int3
int
mov
ud1
xchg
repz
sbb
and
mov
cmp
test
dec
sbb
inc
test
pop
cltd
and
ja
sub
mov
mov
dec
das
or
arpl
or
cmp
and
in
jp
or
mov
in
sbb
mov
mov
fwait
scas
sub
pop
jecxz
jbe
loop
pop
cltd
jecxz
cmp
push
fdiv
sti
mov
test
into
sbb
popf
test
sbb
int
pop
sbbb
adc
test
cltd
cmp
cmp
jnp
test
sbb
and
jecxz
adc
imul
test
adc
fld
fucomi
fsubrl
sub
imul
and
mov
mov
insb
adc
inc
pop
test
pop
sub
icebp
sbb
rcr
xchg
xchg
pushf
mov
mov
stos
test
mov
jle
xchg
jb
push
or
or
les
fnsetpm(287
out
lods
jmp
and
mov
xchg
xchg
ja
mov
mov
insb
loope
cmp
cmp
add
test
xchg
mov
mov
gs
lods
cmp
arpl
pop
jmp
fwait
andb
mov
fsubl
sub
mov
mov
jae
loop
arpl
and
and
je
insb
cmp
test
pop
into
dec
xchg
mov
mov
mov
aas
mov
fisubs
xchg
imul
stc
in
push
aas
mov
mov
pop
jb
xchg
sti
mov
fsubl
cltd
inc
les
inc
in
pop
mov
sub
fs
gs
mov
xchg
aaa
inc
das
stos
jp
pop
vmwrite
ficoml
arpl
add
outsb
leave
mov
loope
or
test
test
add
movsb
imul
pusha
jne
push
test
test
dec
dec
sub
aad
push
movsb
mov
mov
mov
mov
cltd
test
data16
and
mov
mov
jl
push
push
add
mov
test
pusha
or
leave
sbb
cmp
imull
imul
adc
fadd
pushf
mov
and
movsl
mov
leave
sub
mov
inc
pop
insb
mov
xchg
sub
in
arpl
lret
dec
lods
cwtl
std
cmc
mov
and
cmpsb
es
jmp
mov
rcrb
enter
add
idivb
mov
js
arpl
rcrb
mov
sbbl
movsb
lcall
cmp
add
int3
into
cli
sbb
xor
in
int
insb
and
shlb
ja
stos
stc
mov
sub
mov
popa
dec
leave
addb
or
or
iret
sbb
pop
or
stc
fisttpl
enter
pop
dec
aaa
sub
add
sti
loop
cmpsb
stos
test
mov
iret
sbb
les
inc
add
push
incb
or
add
and
dec
stos
lcall
dec
add
insb
mov
mov
cmp
dec
cmp
aas
mov
std
jnp
sub
cltd
sub
mov
test
inc
sarl
pop
pop
imul
jne
test
stos
push
stos
popa
mov
jmp
dec
pop
sub
inc
jb
lret
dec
pushf
fxch
inc
push
bound
mov
jl
mov
sbb
sub
mov
leave
lods
mov
mov
add
lahf
pop
pop
inc
mov
push
es
stos
pop
pushf
jmp
xor
sbb
jae
test
dec
mov
lock
mov
leave
bound
inc
mov
inc
sub
xchg
in
loop
ret
mov
jns
push
inc
stos
arpl
int3
test
ret
test
or
pushf
sbb
mov
sub
sbb
in
scas
sub
inc
fistpl
or
fbstp
popa
lods
imul
push
cltd
and
pop
xor
dec
sbb
ret
js
add
test
sub
add
xor
test
leave
push
mov
xchg
mov
xchg
inc
shrb
icebp
cmp
mov
test
addl
test
jae
daa
adc
jnp
ja
mov
push
out
bound
fcoms
push
mov
push
test
sbb
enter
out
jne
test
cltd
lret
js
push
outsl
orl
rcrl
in
clc
imul
bound
mov
addr16
out
fcmovu
insb
stos
out
jp
dec
mov
pusha
jno
inc
sbb
push
add
mull
and
ljmp
dec
add
arpl
mov
arpl
cmp
jl
and
and
movsb
push
cmc
pop
or
lcall
add
sbb
dec
mov
lret
push
roll
jle
repz
add
repz
cmp
inc
stc
mov
data16
add
add
push
pop
mov
in
or
mov
mov
mov
mov
adc
popa
pusha
daa
add
movsb
or
push
jo
and
xor
add
testl
jns
mov
lods
jnp
cmp
jne
repz
mov
pop
icebp
pop
jp
mov
adc
or
jecxz
frstor
add
into
repnz
ja
xor
ds
mov
dec
mov
add
push
cmp
sbb
shrb
ret
xchg
popa
fwait
or
int
mov
xchg
movsb
pop
repnz
fs
adc
stc
push
xchg
fwait
cld
mov
hlt
test
push
in
inc
stos
addr16
jo
in
cmp
sbb
push
or
icebp
pushf
leave
in
loope
arpl
pop
mov
cld
int
add
add
push
inc
leave
orb
jae
testl
jns,pt
cmp
in
stc
and
test
ficoml
adcl
mov
dec
dec
or
pop
mov
es
aaa
mov
test
sbb
sub
addr16
fisttpl
test
jo
jns
adc
cmpsb
pop
adc
or
daa
or
test
das
stos
aam
in
das
stc
xchg
xor
mov
adc
arpl
sbb
dec
shll
repnz
lret
arpl
orb
cwtl
jp
adc
pop
int
bnd
mov
dec
subl
jno
inc
push
jae
dec
int3
enter
mov
pop
push
movsb
pop
test
cmp
insb
cmp
jecxz
out
aam
aam
mov
add
push
add
stos
mov
ljmp
add
lcall
xor
or
sti
cmc
push
xchg
jne
jecxz
jmp
test
mov
jle
popa
xchg
shl
cmc
sbbl
pushf
mov
aam
and
mov
out
mov
hlt
jge
jnp
test
pop
sar
test
jns
and
add
mov
adc
ja
cli
inc
mov
lcall
inc
pushf
jnp
pop
jmp
ret
xor
jns
and
jl
dec
std
arpl
or
aas
and
addr16
inc
dec
movsl
movsb
arpl
add
mov
add
pop
xchg
cmc
mov
inc
mov
and
test
or
sbb
repz
lret
mov
hlt
add
dec
aam
shl
test
je
jl
jbe
lea
xchg
iret
adc
pop
push
out
mov
test
pop
push
rcl
pop
push
adc
clc
ret
leave
add
out
pusha
pop
xor
addr16
inc
insb
inc
cmp
and
cmpsl
mov
xchg
mov
test
mov
andb
test
pop
mov
or
imul
lcall
sbb
mov
mov
lods
mov
push
inc
cs
icebp
push
les
sbb
divl
jb
movsb
inc
push
lcall
test
sub
les
ret
test
int
jnp
arpl
xchg
fstpt
mov
les
loope
fisttpl
mov
jnp
popa
sbb
int
outsb
mov
out
pushaw
fldcw
mov
cmpsb
jp
iret
stos
push
test
movsb
insb
or
jb
mov
test
sub
aam
shll
jl
movsb
movsb
test
jno
test
test
inc
inc
and
stos
mov
mov
fistps
cmp
xchg
movsb
arpl
mov
cltd
test
inc
popa
and
test
mov
mov
lret
mov
test
mov
inc
movsb
sbb
jno
out
xchg
aas
sub
les
jne
arpl
and
out
dec
pop
into
inc
sub
hlt
add
add
inc
pushf
mov
shrl
inc
enter
test
mov
jle
adc
imul
test
fnstcw
push
arpl
jno
dec
jmp
mov
mov
sub
dec
lock
lret
jl
sub
jne
test
jns
leave
push
stc
mov
sti
mov
xorl
mov
pop
pusha
sub
arpl
or
push
mov
test
cmpb
pop
sub
ja
adc
sbb
subl
mov
and
mov
dec
sbb
test
xor
data16
je
fwait
add
dec
std
mov
test
xor
push
jns
cld
push
sub
sbb
dec
mov
arpl
adc
in
dec
pop
fmull
sarb
add
jmp
sbb
addr16
cs
dec
mov
int3
scas
jae
mov
subl
ss
mov
jp
dec
add
repnz
negb
daa
test
imul
gs
or
push
jecxz
sub
les
and
xor
daa
lcall
sub
and
mov
mov
enter
ja
add
xor
jp
cmp
pop
adc
movsb
cltd
add
fwait
cmpsl
jo
xor
cld
xor
mov
test
jmp
push
ja
sbb
test
cmpb
sub
push
dec
inc
pop
and
cli
fdivr
rcrb
add
cmp
push
cmp
dec
test
cmp
test
bound
test
cmp
in
dec
repz
add
mov
std
cltd
hlt
and
bound
mov
out
shrb
lahf
loop
test
xchg
mov
xchg
in
mov
bound
test
and
je
mov
test
enter
ret
jmp
sbb
mov
roll
mov
and
add
mov
and
fidivl
inc
jl
push
jmp
push
xor
shl
jb
enter
and
pushf
push
into
add
arpl
aaa
and
jb
stc
mov
xchg
lret
add
mov
mov
mov
pop
mov
mov
add
je,pt
daa
sbb
mov
leave
mov
out
jno
mov
movsb
or
aas
aaa
repnz
ret
pusha
loop
add
mov
test
sbb
cld
mov
insb
movsb
test
or
int3
notl
fsubr
and
cmp
mov
and
stos
jo
loope
cmp
mov
std
movsb
test
rcl
dec
sbb
dec
xor
jge
inc
imul
adc
add
mov
mov
fldcw
test
popa
rcll
xchg
aaa
loope
cwtl
xor
in
rolb
clc
jp
inc
insl
dec
test
cmp
stos
mov
xor
add
sbb
push
test
mov
cmc
cmpsb
cltd
and
enter
out
inc
inc
fimull
mov
imul
les
arpl
scas
sub
mov
pop
mov
mov
arpl
shrd
mov
test
mov
arpl
test
jns
push
xchg
test
sub
mov
pop
cmc
mov
jne
daa
movaps
insb
jmp
fdivrs
cmpl
movsb
add
push
daa
xor
xlat
adc
xor
test
inc
int3
imul
sub
lret
pop
lret
jns
insb
sub
adc
lcall
mov
xchg
repz
leave
mov
mov
sub
jmp
xchg
pop
xchg
adc
pop
ja
sub
insb
sub
jmp
xchg
mov
sub
sub
sub
or
jp
popf
imul
or
shll
adc
mov
pop
test
lret
push
fnstcw
jge
sub
test
outsl
int3
dec
int
cli
call
arpl
cmp
mov
add
incl
jno
pop
mov
neg
pop
loop
es
test
mov
test
loope
xchg
mov
mov
jne
inc
add
adc
inc
adc
mov
adc
adc
adc
adc
adc
add
xor
add
adc
adc
adc
mov
jecxz
xchg
je
je
je
je
je
je
je
je
je
je
je
je
je
je
test
mov
xchg
add
repnz
and
xor
inc
adc
xor
fwait
lret
sub
or
test
push
jge
stos
push
add
jmp
jo
ljmp
mov
xchg
test
ficompl
or
cmp
aad
lods
mov
or
test
lds
xor
cli
cmpsl
push
adc
and
pop
mull
imul
xorl
xchg
xor
sbb
in
xor
cmp
mov
cmpsb
scas
cltd
mov
aaa
iret
test
dec
adc
adc
cltd
jns
bound
frstor
bound
test
sbb
push
push
leave
and
mov
bound
dec
sbb
and
sbb
xchg
adc
add
jne
addb
bound
mov
divb
pusha
lds
dec
push
mov
and
mov
mov
lds
mov
cld
push
add
movsl
mov
mov
mov
enter
lds
mov
jecxz
dec
jne
push
into
jne
fs
mov
pop
add
lods
arpl
popa
cmpb
push
js
mov
push
add
lds
std
test
xchg
test
cmpsl
and
fcoms
scas
popf
push
shlb
fildll
push
push
pusha
or
popf
mov
out
test
mov
inc
out
leave
mov
sub
fimull
icebp
add
xlat
cli
ret
push
mov
and
cld
mov
mov
lahf
cmp
andb
cli
leave
nop
mov
xchg
adc
push
shrb
jns
mov
outsb
or
pop
ss
out
sbb
push
es
mov
push
jmp
aas
jo
imulb
sub
add
sub
out
jns
dec
lea
inc
sbb
sbb
mov
and
cmpl
les
jo
xor
call
mov
mov
xor
scas
xor
movsb
aam
fcom
int3
mov
mov
iret
or
and
push
shll
adc
adc
xchg
movsl
cmpl
and
dec
stos
and
lcall
hlt
push
out
push
and
mov
or
jnp
mov
int
xlat
dec
push
fbstp
adc
fcompl
cmpsb
lock
mov
rcr
inc
test
arpl
test
push
jmp
test
adc
sbb
pop
loop
and
repz
arpl
les
mov
mov
sub
test
arpl
aas
rcr
mov
inc
xor
inc
sti
arpl
shlb
test
adc
fdivs
cmp
cmp
mov
popa
sarb
xchg
aas
gs
adc
xchg
xchg
xchg
sub
hlt
pop
ret
fwait
push
add
mov
mov
xlat
cmpsl
mov
repnz
or
out
clc
sbb
mov
mov
lea
imul
in
lods
pop
add
fstpt
jb
and
inc
test
adc
mov
mov
test
mov
adc
sub
or
mov
nop
aad
mov
jne
loop
jle
cmpsb
push
ret
xlat
or
xchg
les
mov
dec
jbe
mov
inc
nop
or
xor
xchg
scas
mov
pusha
or
adc
mov
ja
sbb
lods
adc
add
xchg
std
jmp
movsb
inc
mov
cmp
adc
fnstcw
inc
clc
movsl
mov
test
je
xor
push
adc
cmp
sub
dec
pop
shrl
mov
orb
and
mov
imul
in
xchg
push
fwait
add
inc
ja
jnp
test
xor
fs
loope
and
fists
test
mov
sbbb
std
add
fsts
inc
xor
repnz
cmp
sbb
or
test
dec
enter
bound
mov
sub
loopne
std
sbb
test
dec
mov
and
subb
mov
jmp
sub
adc
pop
dec
gs
mov
and
movl
pop
movsb
cli
fdiv
js
xchg
inc
repnz
mov
jmp
pop
pop
repz
push
lea
mov
sbbl
and
pusha
cmpsl
push
ja
jns
cld
inc
cmpsl
int3
sbb
fists
dec
sub
dec
dec
test
mov
inc
cmp
sbbl
add
imul
adc
xor
stos
add
pop
inc
fcomi
out
xchg
adcb
adc
mov
movsb
test
push
push
add
lods
jmp
movsb
fcomi
in
sbb
xor
and
aam
les
dec
hlt
fdivrl
cmpsl
jae
pop
xor
icebp
lods
xchg
jnp
data16
aam
fs
cltd
xchg
iret
cmpsl
mov
hlt
es
in
lret
cmp
call
out
cmp
sub
mov
jp
push
inc
out
mov
xchg
pop
orl
inc
dec
xchg
push
pop
mov
cli
or
movsb
xchg
sbbl
mov
inc
jl
jnp
int3
mov
enter
sbb
adc
sbb
shl
mov
pushf
push
pop
out
push
ss
mov
test
mov
adc
inc
mov
xchg
push
mull
cld
das
outsl
xor
add
cmpsl
test
out
out
test
adc
pop
mov
test
push
mov
mov
movsb
inc
sbb
jnp
sar
scas
sbb
call
ret
cmc
add
pop
xor
mov
es
adc
ret
xor
mov
movsl
iret
fadds
mov
dec
nop
mov
int3
push
mov
jne
cmp
in
sub
xchg
pop
push
adc
cmpsl
mov
sub
das
push
jecxz
push
push
iret
arpl
cmpsb
cmp
outsl
scas
xchg
lea
inc
movsl
aas
mov
outsb
shll
movsb
xchg
sbb
and
test
add
inc
lea
movsl
nopl
mulb
lea
dec
add
push
dec
push
sbbb
out
pop
rolb
dec
dec
dec
dec
cmc
xor
rol
xor
int3
in
lock
test
fs
lods
pop
cmp
pop
rcrl
cmpsb
mov
gs
in
lcall
jo
adc
test
bound
pop
out
mov
mov
scas
test
push
cmpl
cmp
fld
push
xchg
xchg
mov
or
mov
mov
cmpsl
jge,pt
add
inc
mov
dec
mov
inc
test
ds
push
mov
popl
pop
fs
movsb
leave
dec
sub
xchg
jns
and
mov
sub
mov
xchg
test
enter
mov
push
push
imul
mov
lods
or
out
iret
pop
mov
push
xchg
mov
jae
shl
cs
xchg
call
mov
xor
fdivrs
inc
jns
addl
fs
mov
roll
jne
movsb
push
pop
inc
jae
loopne
dec
mov
scas
pop
xchg
je
or
push
mov
pop
outsb
mov
lock
push
add
sahf
cs
cmpsb
inc
mov
inc
scas
test
movsb
cwtl
jb
jl
lcall
in
fnsave
add
lret
dec
push
xor
aam
lods
std
scas
push
push
and
cli
and
psrlq
dec
arpl
stos
cmp
xor
pop
xchg
sbb
push
push
xorb
or
leave
lods
adc
fwait
movsb
xchg
out
mov
fldenv
fildl
aas
sbb
mov
add
adc
mov
movsl
pop
pop
lret
cmp
jg
mov
inc
and
addl
mov
int
iret
lret
dec
call
adcl
mov
inc
or
xlat
xor
cmp
xchg
daa
xchg
les
push
pusha
jo
mov
popa
mov
inc
mov
mov
mov
jb
add
inc
adc
mov
dec
popf
mov
jge
das
mov
mov
cld
add
pop
sbb
jmp
mov
adc
repnz
xorl
and
mov
cmp
dec
push
test
jmp
mov
pop
mov
sub
fiadds
test
dec
cmc
xchg
cmp
addl
push
call
les
loop
pop
mov
cmc
test
les
pop
bound
mov
js
loopne
mov
test
nop
call
jge
xor
inc
mov
sbb
lret
add
xor
js
cmp
push
cmp
in
arpl
push
pop
in
add
mov
icebp
mov
test
in
sti
inc
popl
sub
xchg
orl
mov
fcmovne
xor
jb
out
add
xchg
gs
jae
and
cltd
inc
lods
scas
mov
push
pop
add
push
mov
fs
test
lds
mov
xor
cmp
mov
aad
jb
fs
fsubr
lds
mov
js
jle
cmp
test
mov
stos
mov
jae
enter
fwait
jmp
leave
jnp
lea
mov
mov
or
sbb
pop
and
add
pop
cmp
pop
test
inc
aas
jne
mov
das
ja
push
imul
in
pop
shlb
sbb
into
ss
test
adc
dec
int3
insb
or
sbb
lahf
fidivl
xchg
test
int
add
in
or
mov
xor
dec
push
xorb
mov
test
imul
pop
dec
push
mov
in
sbb
in
lea
or
filds
cmpb
pop
out
cwtl
outsl
arpl
mov
mov
inc
dec
ds
inc
sbb
in
stos
fdivrl
sub
push
or
int
mov
arpl
or
cs
mov
lock
cltd
jb
pop
sbb
xlat
sarb
dec
gs
test
js
jne
jmp
push
push
mov
test
mov
push
pop
push
dec
or
jno
test
pusha
imul
jns
mov
adc
jno
push
jbe
inc
cmpsb
call
cmc
shrb
addb
int3
dec
test
xchg
loop
shlb
lcall
xchg
rolb
dec
lret
mov
jge
xor
adcb
xchg
mov
sbb
int3
test
xchg
xor
push
push
push
and
movsb
jle
ret
mov
movswl
sub
test
dec
push
cli
or
test
push
add
fsubrp
ret
dec
mov
lea
mov
dec
lds
aaa
sbbb
test
or
add
lods
int3
aad
sub
pushf
push
sbb
popa
test
mov
xor
and
outsb
scas
xchg
jae
shll
loop
adc
fmull
mov
cmp
lret
add
leave
jmp
mov
cmpsl
or
gs
mov
mov
lret
or
sbbl
mov
adc
adc
fldl
call
add
mov
fchs
test
mov
out
das
push
movsb
icebp
mov
cs
jb
inc
xchg
lods
test
fmull
mov
mov
call
sbb
scas
cmp
cli
fldenv
mov
fs
test
aas
mov
xor
test
loop
or
jnp
pop
insb
mov
mov
pop
fwait
mov
nop
push
jbe
lods
jns
movsb
cmpsl
pop
cmpb
arpl
xchg
mov
sbb
add
mov
pop
fdivs
mov
arpl
pop
test
lods
mov
adc
dec
xchg
mov
jmp
mov
jo
xor
add
ret
xchg
xor
testb
sbb
push
aaa
incl
sbb
inc
fnstcw
xlat
xchg
xor
and
jo
idiv
or
mov
mov
mov
jb
movsb
jmp
scas
sub
push
cli
xor
push
push
in
add
lahf
xchg
mov
xchg
pop
fsubrs
sbb
or
bound
fwait
enter
inc
sbb
or
aam
cmp
dec
and
mov
pop
sbb
test
push
sbb
mov
push
test
cltd
test
mov
adc
adc
adc
movsb
imul
mov
fcmovb
xchg
lds
movsl
jns
cld
in
or
add
ret
add
test
jb
gs
es
mov
loop
sbb
sti
test
bound
push
cld
enter
rcrl
inc
sbb
sbb
sbb
testb
add
mov
push
sub
rorl
mulb
sarb
dec
test
inc
and
jno
or
mov
adc
jmp
rcrl
add
or
mov
jp
push
pop
jo
fistl
test
notb
jecxz
fdivrl
sbbl
pusha
xchg
enter
sbb
lcall
fninit
mov
dec
and
in
pusha
jno
cmp
sub
jmp
loop
jnp
sbb
push
and
in
jno
enter
stos
sbb
movsl
loop
dec
test
add
in
pushf
pop
mov
inc
pusha
pop
sbb
lret
add
mov
out
mov
movsb
adc
add
pushf
sbb
inc
xchg
and
inc
fs
test
push
leave
or
mov
pushf
and
pop
add
add
addr16
jnp
test
xor
dec
rcrb
pop
imulb
mov
and
pusha
enter
push
insb
dec
xor
jmp
jp
fwait
arpl
test
mov
cltd
test
xchg
enter
sbb
leave
mov
adc
mov
lods
loop
sbb
or
hlt
push
sbb
push
mov
mov
inc
insb
xor
mov
bound
jno
and
or
rcrb
fwait
into
and
stos
stc
cmp
repnz
js
stos
imul
and
jecxz
lods
mov
mov
fnstcw
push
repz
cmp
sbb
lcall
mov
cmp
insb
mov
imul
mov
add
loop
xor
mov
cltd
les
imul
fs
mov
repz
arpl
cmc
mov
clc
divb
xor
jo
leave
hlt
push
test
bound
in
or
mov
in
adc
negl
stc
mov
push
dec
bound
cltd
lcall
or
lret
and
adc
jne
inc
mov
push
stos
movsb
or
mov
mov
add
fcoml
adc
and
adc
or
movsb
push
stos
mov
dec
imul
ret
enter
roll
ja
negb
lods
push
xor
mov
cmp
xchg
sub
data16
inc
push
inc
mov
xchg
cltd
out
flds
mov
mov
mov
ret
jle
mov
and
xchg
jl
push
and
test
push
cli
push
dec
adc
or
lea
out
pop
sbb
lcall
inc
jnp
adc
bound
popa
dec
lret
lcall
bound
scas
and
sbb
adc
adc
adc
insb
mov
sbb
sbb
sbb
sbb
xor
xchg
enter
sbb
ret
gs
gs
repnz
push
movsl
jns
push
cmp
adc
jp
scas
test
xchg
inc
loope
in
add
inc
test
cmc
sbb
aas
int
adc
sbb
sbb
sbb
push
push
and
sub
jbe
xchg
cmp
xor
add
cmp
xor
imul
adc
inc
sbb
sbb
cli
and
data16
mov
jle
dec
mov
jb
fidivs
xor
add
inc
and
jo
out
fs
dec
and
data16
les
cmove
fsubs
repz
fs
fs
mov
push
xor
scas
mov
fbstp
call
sbb
aas
dec
in
clc
sahf
jb
test
push
bound
lds
fadds
pop
pop
fs
popa
push
lcall
push
stc
andb
pushf
rcrb
test
mov
jo
ret
test
dec
pusha
cli
jno
inc
gs
xchg
in
in
daa
add
adc
sbb
iret
test
xchg
imul
test
mov
int
adc
jp
adc
mov
jae
repz
addr16
inc
and
sbb
cmpsl
and
lods
test
inc
dec
insl
fldt
push
rclb
test
xchg
cmc
inc
mov
adc
and
inc
in
fidivrs
mov
mov
test
popa
dec
rolb
pushf
aaa
popf
mov
dec
jge
mov
incl
fnsetpm(287
test
les
pop
dec
sbb
fs
out
push
test
push
add
push
cli
inc
and
adc
test
push
pop
ret
xor
and
jo
inc
incb
add
lds
cmc
lods
sbb
loopne
push
out
jmp
add
fs
sub
dec
test
outsb
aas
fldl
aad
mov
dec
scas
leave
test
jno
lods
mov
add
lock
and
adc
mov
cmp
aam
jne,pn
cli
xor
in
inc
cmp
and
neg
adc
inc
out
pop
and
popa
test
cltd
into
sub
aas
adc
incb
andb
mov
dec
pushf
and
lds
jo
xchg
jmp
push
or
inc
xor
sub
mov
mov
push
lea
loope
sti
and
outsb
push
xchg
jmp
jb
and
mov
jl
adc
out
test
xchg
out
insl
aad
jne
push
mov
add
inc
xchg
pusha
mov
and
add
add
xchg
xor
test
repnz
mov
fisubrl
movsb
sub
ja
repz
jne
dec
or
lds
cmc
adc
push
cmp
call
mov
and
pushf
lcall
push
fdivs
mov
loope
sub
movsl
or
shl
push
adc
dec
test
add
pop
push
mov
pushf
xor
std
push
arpl
ficoms
jp
test
aas
aad
test
inc
out
xor
and
data16
adc
dec
mov
in
dec
mov
imulb
test
push
test
imul
jbe
enter
and
mov
test
in
fisttpl
movsb
lahf
mov
lcall
outsb
lods
sub
push
mov
pop
int3
test
or
inc
xor
mov
mov
adc
lods
sahf
inc
sub
lcall
test
mov
loope
movsl
int3
test
sbb
push
mov
xor
jbe
pop
dec
xchg
cmpsb
cmp
test
jmp
sbb
stos
mov
mov
mov
mov
dec
scas
sarb
test
insl
ficoms
fsubr
out
mov
sub
sti
mov
imul
aad
pushf
lods
fisubrs
daa
sub
movsl
push
cmp
stos
rorl
add
push
lods
insl
cmp
imul
sub
arpl
stos
imul
sub
out
mov
leave
dec
test
sti
cmc
cmp
push
in
push
pop
cli
dec
aad
ffree
sub
jmp
ds
or
push
stos
andl
test
adc
insb
inc
add
cwtl
in
testl
mov
adc
mov
jae
and
mov
jg
pop
xor
test
cmp
insb
mov
mov
adc
shll
xor
orl
mov
mov
push
bound
test
sbb
test
hlt
aam
xor
xchg
fisubrl
loope
xlat
push
xchg
in
stos
jg
jae
outsl
cmpb
arpl
mov
cmp
sbb
lret
js
fsubp
hlt
test
cmp
pusha
push
testb
repnz
arpl
add
xlat
jmp
adc
sahf
std
cmpsl
inc
sub
popf
call
add
sub
cmp
insb
sbb
mov
xor
adc
scas
inc
mov
gs
inc
inc
and
dec
xor
movsb
imul
mov
and
xchg
bound
mov
in
bound
test
adc
cs
bound
dec
cmc
jb
cmp
movsb
cmp
or
daa
push
push
and
dec
push
pop
mov
incb
mov
xchg
cmpb
clc
data16
push
sbb
divb
testb
test
push
inc
mov
outsb
enter
loop
test
mov
lods
movsb
mov
add
fucom
pop
mov
cmp
imul
fildll
addr16
scas
icebp
sub
in
pop
bound
jae
movsb
mov
xlat
mov
add
dec
lods
xor
mov
dec
sub
and
dec
arpl
push
mov
out
test
out
test
mov
in
test
jne
fabs
test
shl
sar
shll
mov
mov
ja
test
sub
jmp
mov
fidivs
andb
mov
outsb
mov
test
sub
jge
mov
addl
test
stc
adc
test
add
mov
std
cmpsb
and
jae
push
fadd
imul
push
push
in
dec
add
enter
cmp
pop
or
ljmp
sbb
test
jne
dec
or
leave
mov
pop
and
or
dec
add
cmp
pushf
adc
aam
incl
imul
pop
mov
lds
lods
out
test
pop
mov
test
jbe
or
sar
test
mov
int
out
out
movsl
cmpsb
pop
mov
mov
sbb
lret
test
xor
rorl
xchg
dec
test
aam
lods
faddl
lds
jno
mov
repnz
jae
dec
leave
xchg
bnd
in
sub
movsb
xlat
jle
ret
dec
movsl
test
loop
lret
add
fdivl
rcr
fcmovnbe
mov
mov
in
jp
mov
cltd
sub
push
push
jmp
test
mov
push
test
imul
cmpsl
adc
dec
lcall
mov
mov
inc
jb
mov
ret
xor
fnsave
loop
lock
gs
ljmp
push
pushl
out
mov
lret
mov
cmpsl
mov
inc
xlat
arpl
lods
movsb
pop
mov
test
outsl
push
dec
xchg
dec
andb
shll
outsl
jp
and
je
test
lret
mov
repz
dec
sub
mov
mov
dec
mov
cmpsb
jge
xor
lret
data16
lock
push
adc
push
xor
arpl
fstpl
insb
push
test
sbb
or
out
stos
inc
jb
fld
arpl
mov
adc
or
ljmp
loope
xlat
pop
rcrl
mov
xor
sbb
sbb
andl
add
loopne
pusha
in
popl
cmc
ljmp
std
sub
sub
inc
push
pop
in
or
add
fimuls
insl
sbb
inc
xchg
dec
test
jno
test
aam
rcr
pop
mov
stos
mov
repz
in
fstl
push
push
test
negb
cmc
aad
inc
jns
xchg
mov
int3
inc
shlb
sub
icebp
mov
mov
nop
lcall
inc
out
lock
test
cmc
jmp
shrl
jmp
test
mov
fdivrs
nop
bound
test
add
and
and
pop
cmp
sub
sbb
ret
jmp
sbb
inc
xchg
rcrl
int3
fisubl
and
movsb
lcall
mov
cmp
pop
mov
xchg
dec
data16
mov
sbb
ret
mov
fidivrl
lret
cmpsl
lods
orb
xor
inc
out
mov
rolb
test
das
mov
stos
loope
fcoml
and
arpl
out
les
js
cmpsb
inc
in
stc
idivl
inc
test
repz
test
aad
mov
sti
mov
scas
xlat
stc
aas
test
loope
xchg
lcall
jge
cltd
test
sub
test
lahf
mov
cmpb
jp
mov
pusha
ret
mov
sbb
popl
icebp
outsl
sub
sub
jno
fiadds
lods
sub
test
xchg
fistpll
mov
insb
mov
imul
push
cmp
test
iret
add
add
fwait
push
lods
outsb
xor
sub
or
testl
xchg
imul
daa
adc
daa
add
mov
or
inc
mov
mov
mov
subb
test
jp
sub
mov
test
rcrb
test
lret
inc
xchg
test
loope
sbb
mov
mov
pop
sti
xchg
pop
scas
leave
jp
loop
test
sub
mov
rolb
dec
mov
test
jbe
insb
fidivrl
leave
adc
cwtl
test
mov
jbe
ja
and
xchg
add
lret
sub
ja
test
mov
mov
xrelease
fsubrp
adc
mov
pop
jns
inc
popf
test
test
out
mov
sbbb
mov
in
ficoms
cmc
and
test
test
rorb
add
pop
pushf
jb
xchg
lret
ljmp
pop
xorl
imul
pusha
test
test
jnp
test
mov
or
aam
fwait
test
mov
xchg
sub
mov
mov
pusha
in
shlb
dec
push
insb
test
inc
test
dec
ss
mov
or
jbe
pop
xchg
jno
and
pop
pop
leave
and
jp
add
cmp
or
fsubr
push
xchg
mov
in
mov
cmpsl
xorb
jecxz
popa
js
ret
push
test
cmp
jns
push
adc
lods
pop
shll
pop
mov
test
xor
jnp
test
cs
pusha
sti
lret
mov
dec
push
mov
inc
add
arpl
nop
loopne
xchg
lret
and
and
jg
jns
in
push
repz
test
dec
push
mov
pop
pop
push
push
call
push
cmpsb
es
adc
insb
sahf
outsl
adc
pop
sbb
adc
mov
cmp
lcall
icebp
andb
xchg
movsl
iret
movsb
int
fwait
add
adc
jmp
arpl
pop
mov
repnz
test
or
fistpl
test
xor
or
pop
push
test
ljmp
xchg
lcall
sbb
scas
mov
jne
mov
insl
inc
int
pop
in
sarl
mov
sbb
jno
push
mov
enter
jp
incb
mov
add
popa
fs
mov
xor
adc
or
mov
cmp
test
test
push
lods
mov
test
testb
cmc
and
and
test
fsubrs
pop
test
jb
mov
clc
in
es
jno
inc
add
xchg
clc
pop
test
ljmp
or
test
idiv
and
cs
addb
lret
jecxz
cmpsb
push
inc
inc
out
or
fbld
add
and
mov
and
rcrb
dec
jb
addr16
push
andb
dec
pusha
dec
aam
sbb
add
push
int3
push
cmp
pop
in
movsb
pop
mov
and
andb
pushf
pop
lahf
mov
faddl
ffreep
pop
fwait
movsb
mov
ret
and
jne
dec
and
push
loop
xchg
aam
lret
movsb
addb
add
addl
lret
repz
mov
movsb
hlt
int3
xchg
mov
cs
and
enter
imul
push
jecxz
lea
add
stos
or
push
add
cmp
mov
iret
fwait
push
adc
sub
add
in
in
xchg
mov
inc
out
mov
call
mov
test
xor
cli
pusha
mov
arpl
stos
pushf
lock
pop
in
test
and
aam
xlat
cmpsb
sub
out
inc
sbb
mov
addr16
test
cmp
xchg
sub
mov
jns
negl
test
aas
ret
in
hlt
push
jbe
mov
lret
mov
cmp
or
push
mov
enter
add
mov
pop
sbb
jne
pop
inc
test
pushf
xchg
outsb
test
pop
xchg
fcmovne
jmp
je
or
ret
inc
jns
test
int3
mov
test
or
fildl
loope
inc
insb
orb
and
pusha
scas
push
inc
lahf
and
mov
test
test
data16
hlt
arpl
psraw
sub
cs
fs
ja
sbb
sub
ret
pop
and
jmp
mov
sahf
test
cmp
mov
push
and
push
bound
mov
jns
lea
jl
test
and
fldl
stos
sbb
mov
int
scas
adc
sub
lea
jle
add
xor
cmp
push
test
xchg
pop
jne
les
movsl
mov
int
jo
jno
mov
popa
add
add
mov
test
sahf
pop
cwtl
and
jne
fs
cmp
imul
inc
arpl
mov
out
add
mov
sub
jnp
and
sub
in
in
mov
dec
or
inc
jb
xchg
inc
mov
out
jnp
test
lea
cmp
pop
or
dec
shrl
mov
bound
jb
pop
dec
dec
lea
insl
std
adc
push
pop
push
mov
cmp
and
lea
mov
xchg
je
jae
pop
adc
mov
negb
test
jb
mov
inc
xchg
bound
mov
test
jo
sub
pop
dec
movsb
sub
arpl
and
inc
mov
push
inc
test
xchg
scas
sarb
mov
mov
xor
in
ds
mov
xchg
add
xchg
inc
mov
fbstp
cmp
icebp
arpl
stc
mov
lsl
ret
lcall
mov
enter
test
scas
sub
test
sub
insl
test
mov
mov
repnz
das
dec
std
pop
push
mov
mov
test
push
pop
jno
push
rcrl
mov
cltd
dec
test
sbb
cmp
xchg
arpl
testb
mov
lea
test
data16
outsl
iret
test
push
add
daa
std
addps
test
jl
pop
test
jle
leave
lret
lea
jne
mov
imul
mov
and
sub
push
or
jecxz
or
adc
test
dec
xor
cmp
aas
cmpsb
jo
fiaddl
and
add
cmp
xchg
pusha
mov
aaa
roll
add
lret
loop
and
push
mov
lahf
push
or
inc
idivb
xchg
xchg
mov
mov
cltd
mov
and
pop
insb
in
pop
bound
xor
bound
lret
in
xor
mov
lock
sbb
jg
push
sbb
mov
pop
call
icebp
and
in
cltd
mov
sbb
leave
scas
push
adc
adc
insb
jbe
sbb
sbb
sbb
sbb
pop
jp
xchg
push
dec
mov
inc
xchg
cmp
mov
int3
lret
cli
push
daa
test
lods
jmp
pusha
in
shrl
mov
sub
xchg
inc
loop
adc
test
testb
lcall
int3
test
add
push
or
xor
and
xor
mov
rolb
push
xor
inc
push
xchg
insb
mov
jmp
sbb
push
xchg
pop
adc
arpl
divb
fnstsw
cmpsl
popa
inc
and
fdivrl
lods
data16
cmc
jb
pop
jle
enter
mov
dec
in
xchg
mov
mov
gs
out
repz
test
in
dec
xchg
add
xchg
dec
push
mov
jne
jge
mov
cli
mov
lret
scas
lcall
movb
cmp
movsl
sub
or
in
sub
inc
push
das
cmp
lods
dec
xchg
mov
mov
jae
shr
test
stos
sub
lret
dec
add
movl
repz
subl
cmpsl
filds
xchg
iret
fildl
insl
xchg
mov
push
cld
int3
test
sbb
jne
or
out
cmp
dec
incb
push
movsb
int
xchg
or
xchg
cmp
int3
test
xlat
jnp
insb
pop
inc
test
loopne
jmp
mov
in
stc
in
and
mov
push
dec
pop
pushw
xchg
test
es
into
test
aad
sub
or
rcll
push
push
mov
lret
test
dec
jne
mov
xchg
xchg
cld
pop
mov
pmullw
mov
fwait
or
into
and
dec
movsb
fsubs
xchg
or
cmp
sub
and
loop
sub
arpl
mov
jbe
test
lret
xchg
adc
gs
mov
testl
filds
and
pushf
add
xor
or
xorl
test
dec
ret
lods
inc
pop
out
test
or
and
lea
js
xor
mov
test
inc
jp
sub
or
scas
test
mov
sub
cltd
lods
andl
mov
jmp
pop
push
add
in
mov
push
aam
mov
push
xor
sub
enter
mull
mov
xchg
jnp
test
sub
repnz
mov
cli
sub
movsb
insl
and
or
fsubl
roll
cltd
addr16
test
int3
aad
xor
push
leave
gs
fisttps
xorb
add
mov
mov
idivl
sub
insb
mov
test
mov
dec
stc
test
fwait
xor
leave
aad
sub
mov
test
adc
mov
fidivl
dec
xchg
pop
mov
sub
jns
outsl
and
pop
cmp
mov
shll
pop
cmp
lret
test
sub
test
push
pop
dec
lcall
cli
push
popa
mov
int
dec
insl
lods
jecxz
xchg
jecxz
mov
scas
movsl
sub
aaa
or
mov
out
imul
sub
stos
mov
pushf
mov
mov
mov
pop
mov
push
mov
xchg
arpl
mov
jne
test
and
ficoms
add
adc
mov
pop
mov
out
ret
mov
test
in
in
fcoml
dec
sbb
pop
cmpsb
test
pusha
pop
jmp
test
jmp
cmp
pop
jns
jecxz
mov
mov
mov
pop
sbb
test
lock
imul
imul
dec
ja
test
enter
mov
sbb
in
insl
pusha
sub
fisttpl
es
push
or
pop
sub
or
sbb
lret
ljmp
leave
into
or
div
mov
es
mov
jecxz
movsb
cmp
je
das
in
mov
jno
mov
es
push
stos
ja
sub
xor
mov
mov
mov
jae
clc
mov
repnz
sbb
mov
jl
push
test
shrb
jbe
cmc
xor
pop
mov
cmc
push
test
in
sub
insb
mov
lods
cmp
es
xchg
test
pop
cmpsl
stos
jne
add
inc
push
es
xor
enter
dec
maxps
test
loop
pop
test
sub
mov
out
popaw
test
xchg
lock
lods
ret
lods
push
jmp
arpl
aad
lods
mov
mov
mov
sub
push
cmp
cmp
mov
pop
out
test
stos
mov
xchg
push
ljmp
out
loope
or
stos
dec
test
dec
test
in
cmp
loope
sbb
mov
push
test
rorb
test
or
dec
lods
loop
stos
pop
pop
out
sub
test
mov
or
mov
sub
mov
mov
outsl
test
loop
aam
jecxz
in
push
push
test
test
out
lcall
les
bound
imul
rolb
lcall
gs
xor
add
cmpb
inc
xchg
out
call
xor
mov
xchg
movsb
fs
sub
mov
cmc
ljmp
outsl
mov
jg
test
arpl
repz
cmp
mov
mov
inc
xchg
pop
js
or
repnz
or
daa
sub
test
cmc
nop
mov
xchg
ficoml
lods
test
cs
dec
inc
xor
test
sub
xor
mov
lret
adc
push
mov
sbb
pusha
adc
push
mov
pop
pushf
lret
pop
dec
cmpsb
push
mov
lcall
jno
push
fcompl
cmp
in
iret
cld
daa
leave
push
js
stos
bound
inc
mov
push
jbe
add
ja
test
dec
clc
mov
and
add
test
into
imulb
enter
lret
fsubrs
cmpsb
dec
pop
pop
sub
loope
int3
cmp
mov
xor
outsl
dec
and
test
jbe
jno
movsl
or
scas
sbb
inc
test
sub
cmp
push
mov
sbb
mov
pop
mov
mov
test
fwait
rorb
and
xchg
sahf
iret
repz
pop
mov
imul
xchg
cmpsl
mov
int3
out
push
jne
mov
mov
test
fists
test
push
je
or
popa
inc
in
sub
mov
cltd
lret
add
loop
test
sub
cmpsl
xchg
and
jle
imulb
test
lret
push
jecxz
cmp
mov
cmp
scas
mov
iret
inc
dec
pop
test
xchg
dec
xchg
clc
stos
test
jmp
mov
pop
out
pusha
xor
cwtl
in
mov
xchg
mov
enter
dec
ret
in
aas
test
add
test
in
inc
or
rol
inc
sub
pushf
negb
push
mov
jp
mov
inc
mov
mov
ja
and
movsb
mov
leave
lret
test
adc
sbb
stos
and
int3
push
inc
mov
popa
xchg
or
test
fbstp
rolb
dec
dec
and
mov
sub
aam
cwtl
add
enter
pushf
xchg
cmp
mov
and
call
dec
inc
cmp
test
push
or
shlb
mov
cmp
push
movsb
or
leave
cltd
and
jb
fcmovne
loop
sub
and
sub
mov
int
mov
inc
fdivrs
inc
leave
aas
add
mov
filds
ss
out
in
decl
sbb
faddl
mov
test
xor
or
shlb
dec
mov
popa
mov
leave
mov
jmp
mov
add
jecxz
pop
cmpsb
mov
lods
das
inc
test
stos
mov
or
addb
jmp
imul
dec
cmp
popf
xchg
sbb
push
loop
sub
aad
sub
pop
mov
inc
inc
push
mov
int
jns
pop
xchg
or
movsl
cwtl
push
mov
enter
aad
aas
mov
xlat
inc
outsl
xchg
fwait
dec
and
mov
fsubs
mov
add
shl
and
dec
sub
test
stos
cmp
dec
enter
dec
sbb
fadds
or
iret
add
popf
scas
fs
jns
adc
in
sub
lock
enter
adc
clc
test
aad
mov
cmc
sub
mov
je
add
push
repz
std
push
test
inc
sub
mov
repnz
jecxz
stos
test
fadd
mov
stos
popa
mov
jmp
loope
push
mov
mov
inc
mov
jae
mov
push
ficoms
push
mov
rcr
movsb
adc
mov
push
cmpsl
mov
adc
push
rcrb
mov
mov
or
add
dec
push
cmpsb
lcall
or
outsb
pop
add
inc
pop
mov
imul
dec
mov
dec
data16
mov
ret
lcall
xchg
das
jmp
mov
or
sbb
and
sbb
mov
stos
sub
inc
insb
cltd
mov
and
out
mov
and
and
test
neg
outsl
not
add
xchg
test
and
mov
testl
jbe
push
sbb
shll
test
int
jno
pushf
rclb
sbb
fsubl
lock
rolb
mov
jmp
repz
adc
jb
jecxz
arpl
or
fs
test
mov
and
loop
test
cmp
and
in
imul
sub
sbb
mov
xchg
lcall
and
pop
jp
inc
xchg
sub
into
ret
bound
push
mov
mul
xchg
adc
cltd
scas
jmp
test
je
shl
pand
aam
inc
mov
cmp
lahf
faddl
pop
movsb
arpl
jg
cld
ljmp
sti
dec
pop
les
js
test
sbb
xor
test
dec
mov
test
ret
sbb
and
movsb
pop
mov
mov
test
dec
xor
jne
in
popf
inc
push
push
sbb
inc
aam
test
add
mov
test
aad
inc
ja
fs
push
js
mov
movsb
lahf
cmp
iret
inc
jb
mov
and
mov
fcoms
cmpsb
mov
mov
dec
cmpb
add
jbe
test
xchg
fisubrs
pop
push
out
aas
cmpsl
sbb
rorl
les
add
mov
mov
jo
mov
movsl
test
add
dec
movsb
xchg
sub
and
cmp
cmc
pop
test
arpl
out
out
pusha
iret
xchg
mov
inc
pop
cmpsl
test
aad
test
roll
mov
mov
lahf
dec
rcll
mov
xchg
push
ror
int
test
cwtl
dec
daa
movsl
int3
pusha
pop
into
mov
adc
jae
inc
sbb
cmpsl
xchg
js
sub
test
mov
push
mov
inc
or
push
test
xlat
scas
inc
test
arpl
in
pushf
inc
cmp
sub
insl
sbb
das
movsb
ret
incb
push
test
mov
lret
jecxz
dec
int
mov
mov
test
sub
xchg
incb
xchg
xchg
dec
dec
stos
mov
lret
test
mov
lods
int
test
lahf
or
test
jbe
rep
out
lret
test
mov
outsl
dec
lret
mov
xchg
jecxz
out
stc
xor
addr16
stos
in
mov
testb
outsb
movsl
js
insb
test
mov
mov
adc
adc
pop
add
stos
push
cld
test
lods
insl
daa
lret
mov
fs
adc
add
adc
cmp
inc
sub
repnz
test
loop
mov
mov
xor
imul
jmp
mov
out
bound
popf
mov
sub
push
popa
adcl
sbb
outsb
mov
jecxz
or
movsb
imul
jns
out
cmp
in
add
orb
sbb
cltd
cmpsb
lret
lret
pop
mov
cwtl
fistl
stos
stc
pop
call
jge
inc
sbb
or
mov
sub
lret
mov
in
lahf
orb
mov
xchg
inc
or
mov
mov
and
or
adc
sti
push
imul
ret
shl
or
jle
bound
or
jb
add
xchg
lock
mov
inc
icebp
cmpsb
and
push
in
or
test
lock
je
jp
mov
les
or
orb
sub
pushf
stos
lods
mov
lods
fmuls
in
mov
imul
pusha
hlt
xchg
inc
ljmp
or
mov
les
imul
mov
xchg
dec
xor
mov
nop
test
imul
test
subb
sbb
in
mov
clc
mov
push
insb
dec
jne
ret
jo
jnp
nop
pop
mov
push
mov
dec
in
mov
sbb
mov
arpl
mov
jmp
bound
mov
test
cwtl
arpl
adc
sub
xchg
loop
mov
test
mov
jecxz
sbb
mov
add
and
jmp
push
mov
cmpsl
popf
mov
or
loop
push
and
mov
lods
push
inc
int
popf
jo
test
sub
sub
fwait
mov
popf
mov
push
push
lock
les
dec
mov
pop
je
or
dec
or
nop
adc
inc
adc
mov
lds
das
ljmp
dec
push
cmpsl
push
mov
test
in
dec
push
test
xchg
inc
jmp
mov
jle
xchg
mov
movsb
clc
imul
or
mov
dec
sub
movsb
pop
push
in
arpl
dec
cmp
movsb
jmp
sbb
loop
mov
test
movsb
xchg
pop
sub
xchg
insl
in
imul
data16
inc
mov
sub
lods
pop
stos
mov
ds
cmpb
xor
or
leave
or
in
sub
lods
lcall
mov
xchg
test
imul
cmp
push
adc
es
mov
lock
addb
or
sub
test
popa
mov
dec
insb
mov
arpl
cmp
or
or
jbe
stos
jl
cmc
push
arpl
mov
mov
in
mov
cmc
mov
stc
dec
stos
push
add
sbb
ljmp
pop
mov
into
daa
add
loop
in
xchg
stos
push
mov
ret
dec
rorl
add
or
xchg
outsb
sub
subb
mov
or
mov
push
cmp
test
movsb
in
and
mov
or
movsb
lcall
sbb
test
xor
xchg
sub
sub
dec
into
in
lahf
cmp
mov
stos
or
std
in
out
push
int3
or
adc
lds
mov
loop
dec
dec
fistl
test
add
icebp
cmc
test
flds
xlat
popa
test
xor
pop
test
or
ljmp
xchg
pop
mov
and
ss
out
mov
or
test
not
xchg
sti
in
lods
lret
adc
push
and
ret
mov
cmc
sbb
lcall
jp
sub
arpl
adc
jae
xchg
leave
pop
les
jp
lcall
push
push
test
bound
int
ja
sub
test
jmp
lcall
xor
mov
mov
in
cs
mov
or
mov
loope
aad
pop
movsb
cwtl
pop
stc
push
jns
sbb
rol
cmp
stc
sbb
xchg
or
arpl
iret
dec
sub
or
push
test
popa
insb
notb
push
test
sub
mov
mov
test
add
decl
movsb
lcall
fwait
mov
jbe
jae
fwait
mov
inc
rorl
imul
push
mov
add
push
insb
into
das
mov
sbb
cld
int3
jmp
stos
adcb
jno
cmp
dec
mov
aas
cmp
cmp
stos
sbb
mov
sti
dec
jmp
je
outsb
movsl
into
les
sub
fldcw
or
mov
stos
jge
movsl
fsubs
int3
jmp
imul
inc
orb
mov
sub
sbb
loope
mov
xchg
push
cmp
imul
aad
lcall
sub
pop
dec
cmp
xor
dec
sbb
push
push
sub
mov
mov
bound
jns
or
jmp
ss
push
pop
sbb
ror
sub
jns
lods
daa
insb
dec
nop
idivb
fwait
sbb
pop
dec
and
sub
push
adc
mov
test
sbb
sahf
push
stos
pop
xchg
arpl
jb
xchg
data16
add
sub
pop
outsb
push
out
inc
cltd
lods
sbb
dec
and
jle
sbb
pop
mov
push
out
push
arpl
mov
mov
push
orl
xchg
push
test
pop
test
or
inc
test
shr
sbbl
jl
pop
imulb
adc
scas
lret
lea
mov
test
rolb
lods
push
pop
test
or
pop
mov
ljmp
dec
mov
arpl
mov
or
aam
jge
fucomi
aas
push
ljmp
into
imul
mov
out
test
sbb
fldenv
sub
out
xor
mov
jnp
mov
js
das
in
into
push
dec
movsl
or
push
jmp
xchg
inc
daa
pop
sbb
mov
addb
in
int
push
stos
mov
push
jecxz
les
add
sub
and
dec
fildl
adc
push
xchg
repz
test
lcall
sub
adc
mov
and
inc
mov
aad
push
sahf
stc
sar
int3
test
fwait
repnz
cmp
bound
pop
in
fnstcw
pushf
sub
dec
movsl
push
lds
sbb
mov
lret
inc
test
call
dec
test
sbb
cwtl
mov
daa
test
fwait
mov
jmp
test
mov
pop
sti
lret
push
mov
test
out
inc
xchg
pop
pushl
in
imul
or
xchg
test
cltd
out
call
mov
mov
xchg
mov
jmp
loop
into
sub
sbb
jno
mov
out
pop
mov
cwtl
jecxz
xor
jg
sbb
cmp
hlt
int3
mov
cmp
sub
cld
inc
movsb
cld
jnp
push
lods
js
dec
and
icebp
gs
add
loop
mov
pop
int3
sub
push
out
inc
cwtl
insb
or
repz
test
leave
fwait
test
or
out
push
call
loopne
daa
cwtl
bound
adc
lods
sbb
inc
add
jecxz
lahf
daa
mov
sub
xchg
test
lret
push
lcall
pop
jmp
and
inc
sub
jo
pop
jb
into
dec
test
aam
sub
stos
out
ret
arpl
cmpsb
mov
mov
imul
shrb
in
mov
mov
push
imul
inc
sub
mov
mov
sbb
mov
mov
leave
mov
lock
lret
cld
xchg
loope
jl
outsb
mov
pop
test
jmp
test
cmp
and
sbb
xchg
loope
adc
rolb
xchg
ja
shrl
push
sbb
icebp
and
mov
aam
test
and
push
inc
test
nop
jl
cmc
xor
xchg
mov
jbe
mov
outsb
sub
lret
imul
sub
in
jmp
mov
and
hlt
in
insb
lret
pop
xchg
mov
sub
add
mov
stos
sahf
cmp
dec
jae
std
jge
repnz
mov
and
add
or
in
mov
inc
popa
add
mov
lahf
sbb
lock
push
test
push
xchg
mov
test
in
mov
sarl
push
imul
mov
push
test
mov
test
jg
xchg
int
fidivs
test
xchg
pop
ret
mov
jmp
xor
mov
push
push
and
mov
lea
popf
pop
sbbl
insb
sbb
mov
mov
roll
cli
jbe
cmpsl
sbb
mov
test
and
subb
int3
xor
push
cli
push
in
mov
lods
dec
ret
in
mov
and
imul
sub
mov
ljmp
cwtl
arpl
push
in
dec
add
pop
push
outsb
insb
test
or
dec
add
push
mov
sub
roll
pusha
mov
pop
in
mov
and
xlat
out
mov
jmp
xchg
in
bound
lods
jp
mov
mov
sub
mov
test
dec
shl
aaa
or
insb
mov
dec
sarl
push
outsl
test
dec
imul
jb
cwtl
or
nop
add
and
fs
and
rcrl
cmp
ljmp
ret
jmp
int
dec
or
jb
popa
sub
sbb
inc
push
int
fwait
inc
cltd
insb
bound
push
inc
mov
lahf
in
int
icebp
aam
cmp
repnz
sub
jb
lods
mov
jmp
imul
test
cmovl
insb
push
cwtl
lcall
mov
imul
sub
mov
adc
xchg
xchg
inc
test
sub
daa
mov
adc
mov
sbb
aam
sub
daa
aam
popf
add
push
mov
jbe
test
or
enter
test
push
inc
sti
cmp
inc
sub
int3
test
sbb
sub
push
xchg
decb
sbb
xor
push
pop
shrl
popl
fcmovb
data16
or
xor
sbbl
push
fisubs
loope
jo
test
enter
pop
leave
rolb
mov
xchg
arpl
hlt
leave
xlat
and
call
mov
int
leave
jmp
lods
in
loope
movsb
jmp
stos
cmpsl
int
test
mov
push
cmp
popa
dec
sub
xchg
test
cmp
sub
and
test
cmp
push
mov
sar
test
sub
push
movsb
fimuls
cld
jg
and
mov
hlt
negb
add
mov
movsl
ds
xor
stos
mov
mov
sub
shll
pop
fcmovnb
stos
fs
push
jns
mov
push
mov
jmp
bound
ja
orb
aad
test
mov
in
mov
stos
jne
sti
mov
scas
cmp
mov
test
mov
lods
lock
mov
sub
jnp
test
sub
movsb
cmp
sub
cmp
cmp
das
sub
mov
lret
mov
into
iret
mov
leave
inc
mov
fld
int
or
nop
mov
rcr
dec
dec
or
aad
test
pop
pop
dec
dec
or
push
mov
or
sbb
inc
dec
aad
test
mov
movsb
mov
xchg
xchg
xlat
out
out
in
in
movsb
mov
mov
call
mov
mov
and
jb
jae
xor
pop
inc
push
push
data16
es
and
je
jno
xor
push
push
aad
test
and
ret
addb
shl
divl
movb
xchg
adcb
mov
lds
add
adc
xor
pop
inc
inc
fs
add
adc
adc
xor
repnz
iret
mov
test
les
test
xor
jnp
scas
lcall
or
jno
fildl
mov
sub
fidivrl
ss
mov
inc
jmp
mov
jbe
leave
test
xlat
test
add
into
jmp
jne
stos
in
mov
shll
push
sub
imul
repnz
int3
popa
ret
mov
pusha
lds
popf
test
ss
mov
add
in
or
test
imul
ljmp
fdivrl
mov
lock
or
testb
mov
jbe
inc
cmp
cmpb
add
adc
test
push
xchg
insb
leave
mov
in
push
arpl
push
in
push
test
hlt
mov
ret
leave
les
sub
xor
ljmp
inc
push
aas
mov
mov
arpl
mov
push
fwait
push
movsb
mov
pop
cltd
cmpsl
mov
je
test
sub
scas
xchg
dec
addr16
inc
test
sub
faddl
mov
sub
adc
lret
in
int
in
xchg
mov
sbb
mov
jl
jecxz
push
mov
movsb
repnz
inc
test
movsl
sarb
jne
jl
xor
mov
and
mulb
pop
test
fwait
je
outsb
aam
movl
sub
lret
lods
movsb
jno,pt
dec
pop
mov
pop
cmpb
inc
imul
stos
fucomi
arpl
sub
mov
jle
mov
or
push
mov
pop
lds
mov
decl
or
inc
int
leave
add
in
xchg
sbb
dec
mov
add
xchg
mov
mov
sub
lcall
imul
or
test
mov
in
imul
daa
in
std
leave
jecxz
push
popf
lods
ret
mov
idivb
mov
dec
sub
pop
jnp
mov
in
test
sub
xor
rolb
pop
sbb
test
stos
xchg
orb
xchg
jmp
loope
test
int
int3
inc
adc
int
jbe
mov
pop
lret
add
cmp
sub
mov
in
fimull
test
cmp
lret
lret
sub
pop
ljmp
add
ds
mov
push
mov
imul
jmp
dec
into
int3
jb
mov
fmull
mov
in
sub
test
mov
xlat
movsl
scas
int
mov
mov
mov
push
pop
pusha
cmpsb
test
mov
add
xlat
jmp
dec
mov
jge
bound
arpl
repz
xor
nop
cmpl
mov
and
push
mov
jmp
or
fisttpl
lea
pusha
loop
and
jno
or
jnp
sub
push
pop
testl
xchg
ret
pusha
sub
test
enter
jnp
add
int
mov
xchg
cmpsb
dec
mov
jmp
xchg
push
sub
xchg
sbb
add
test
lret
lret
dec
pop
inc
jecxz
or
mov
pop
jnp
cmp
fwait
sbb
lahf
outsl
les
dec
mov
cli
cld
and
sti
jp
jns
aam
mov
mov
loop
add
jecxz
and
add
pusha
jmp
ret
ret
inc
pushf
jl
xor
add
inc
xchg
xchg
jecxz
adc
scas
sbb
jp
rcrb
and
repz
jno
lods
aam
xor
aaa
ljmp
imul
push
dec
daa
xlat
idivb
inc
or
mov
mov
jbe
test
add
dec
inc
sub
clc
in
data16
gs
pop
popa
cmpsb
inc
adc
outsb
or
insl
mov
sub
mov
into
inc
jecxz
dec
push
pop
negb
adc
mov
nop
and
sbb
mov
pop
fisttpll
mov
std
jle
jge
test
mov
cmp
dec
push
dec
sub
imul
stos
lcall
mov
pop
sbb
ret
fiaddl
int3
inc
lret
or
mov
or
dec
dec
mov
out
movsb
mov
stc
cld
sti
cmp
daa
cmp
add
jl
mov
xchg
arpl
mov
push
push
adc
pop
test
xchg
inc
movsb
inc
inc
push
add
pushf
fadd
mulb
enter
mov
ss
add
mov
test
out
aad
movsb
daa
es
cmpsb
mov
cmpsl
loop
loope
jecxz
and
ret
mov
xchg
xchg
xchg
inc
xchg
push
push
ljmp
rolb
ret
ret
add
daa
add
add
fs
adcb
test
repz
mov
xor
je
mov
out
in
loopne
sub
outsb
insl
pusha
outsl
scas
andb
dec
scas
sahf
adc
mov
pop
push
sbb
fldl
rorb
or
dec
dec
inc
dec
or
lea
cmp
jle,pt
jo
mov
adc
rclb
jmp
sub
sub
xchg
push
mov
push
adc
push
pop
xlat
loop
andb
and
mov
movsb
jecxz
arpl
sub
das
daa
pusha
mov
scas
lcall
loopne
or
pop
mov
fcompl
aad
test
movb
out
movsb
fadds
push
daa
adc
in
push
adc
xchg
push
mov
push
adc
sahf
test
bound
adc
lahf
pop
pop
inc
or
mov
or
mov
aad
movsb
jbe
cmc
xor
mov
mov
dec
les
ret
inc
and
add
les
fwait
fs
add
or
mov
int
dec
lea
jno
cli
cmp
jp
mov
cld
cmp
jl
in
cmp
out
mov
and
movsl
clc
daa
mov
mov
cmpsl
repnz
jno
mov
xor
mov
cmp
cmp
mov
jo
jg,pt
test
dec
popa
pop
loope
pushf
pop
inc
faddl
xchg
jb
iret
add
lcall
icebp
popf
out
daa
push
leave
mov
lahf
mov
test
pop
push
and
stc
mov
popf
dec
sub
mov
in
sbb
xchg
sub
stos
jne
test
push
lock
or
push
and
xchg
xchg
stc
or
jne
cwtl
mov
xor
or
shl
pushf
pushf
sub
popf
mov
push
jmp
mov
icebp
ret
addl
sbb
adc
push
shlb
movsb
jge
in
or
adc
mov
inc
mov
dec
test
pusha
cmp
xchg
xchg
add
test
aaa
push
mov
dec
lds
adc
sub
add
jmp
test
mov
pop
xlat
pop
sub
aad
jnp
arpl
push
sbb
test
and
test
jae
das
in
and
sahf
fnstsw
mov
cmp
push
divb
xor
test
fildl
sbb
mov
test
xor
test
cmp
ret
and
mov
test
and
sbb
shr
mov
leave
dec
test
pushf
or
pop
mov
add
es
inc
fsubs
loopne,pn
or
jns
test
dec
dec
sbb
xor
xchg
pop
test
ss
insl
bound
xchg
lret
lret
mov
mov
sub
stc
pop
test
sbb
mov
lcall
and
ret
inc
dec
inc
mov
push
testl
sub
mov
test
out
push
cmp
xchg
push
inc
jl
stos
adc
test
ljmp
mov
xchg
faddl
aaa
inc
xchg
mov
mov
in
ljmp
ss
xchg
mov
nop
mov
stc
dec
arpl
inc
and
adc
inc
sub
aad
sub
sub
jg
cwtl
test
cmp
and
sbb
mov
negl
sub
hlt
dec
notb
or
repnz
into
and
je
arpl
lret
mov
push
xchg
cmp
dec
mov
test
add
sub
ljmp
pushf
adc
mov
xchg
lods
add
and
mov
mov
popa
sahf
cmc
data16
scas
sub
cld
add
in
mov
mov
test
sbb
add
fwait
ljmp
cs
inc
or
adc
push
int3
sbb
imul
test
cmp
ret
test
mov
xchg
loop
sub
int
xchg
test
ljmp
mov
mov
test
adc
xor
test
loopne
jbe
dec
sub
xchg
dec
les
mov
mov
test
push
mov
test
arpl
out
test
and
xor
jo
add
inc
adc
lcall
and
insl
outsl
pushf
daa
mov
in
mov
gs
mov
mov
mov
test
daa
mov
imul
test
mov
mov
int
lret
mov
jecxz
test
pop
popa
sbb
aad
jns
pop
mov
rorl
or
enter
add
sti
shll
sbb
mov
jg
mov
in
mov
pop
roll
lods
test
pusha
push
sub
arpl
ds
test
in
pop
mov
fdivrs
movsb
leave
add
or
jo
shr
imul
inc
outsb
sbb
ljmp
mov
loopne
adc
shlb
add
inc
sti
cld
je
mov
mov
loop
sub
adc
xchg
movsb
and
fmull
inc
out
les
adc
fldcw
fadd
xor
xor
test
sbb
adc
cmp
gs
xor
imul
mov
cwtl
cmp
sahf
mov
in
in
mov
test
mov
dec
test
lea
hlt
and
mov
test
mov
push
into
pop
stos
cs
test
arpl
ljmp
loopne
mov
out
mov
mov
mov
or
add
mov
mov
mov
push
push
add
test
cs
dec
adc
push
mov
ret
mov
test
out
mov
adc
imul
cmc
push
fnsave
mov
mov
add
adc
or
sub
mov
xor
ja
fadds
ret
test
das
mov
sbb
xchg
sub
jbe
pop
xor
mov
outsb
ret
adc
bound
dec
inc
and
dec
test
fidivs
mov
xchg
cmp
popa
sbbl
test
pop
xchg
aaa
dec
jns
cmp
les
and
cmp
repnz
mov
adc
test
or
jb
scas
mov
mov
jne
sbb
mov
data16
lea
dec
int
je
push
pop
dec
and
sbb
cs
mov
sub
mov
dec
test
sbb
sub
or
push
dec
mov
stc
adc
inc
lods
enter
mov
leave
outsl
push
loop
and
inc
movsb
xchg
aam
clc
inc
lret
out
mov
cmp
cmpsl
test
faddl
out
jnp
xor
sbb
enter
xchg
mov
mov
out
icebp
lcall
sbb
sub
and
push
test
sbb
pop
sbb
fwait
inc
sbb
dec
enter
jl
lods
and
outsb
insb
lcall
adc
test
test
les
mov
jmp
daa
add
cmp
sbb
mov
pop
jmp
test
jge
sub
lds
sub
and
movsl
iret
xorb
and
inc
loope
mov
and
bound
imul
movsb
mov
dec
sahf
mov
movl
stos
fstl
jmp
and
xlat
and
aad
test
movsl
cli
sub
mov
es
or
test
mov
imul
jno
pop
loope
pushf
sub
movsb
lret
push
or
jae
daa
bound
dec
xchg
sub
pop
in
mov
das
sbb
or
add
cltd
inc
dec
enter
add
call
in
mov
rorl
lret
push
push
lcall
mov
pop
rcll
fwait
and
dec
cld
pop
or
dec
movsl
cltd
shl
in
and
jmp
mov
and
push
cwtl
sub
adc
push
sub
dec
in
loope
mov
push
sub
push
xchg
popa
bound
mov
mov
cmp
adc
push
dec
test
std
cli
jmp
push
pop
leave
add
call
enter
mov
pop
test
pop
xor
cmc
mov
aad
jns
add
outsb
in
mov
push
lods
jp
pushf
mov
and
xchg
mov
jp
add
inc
popa
shll
data16
push
lea
and
adc
pop
in
test
movsl
mov
call
xlat
cmpsb
pusha
mov
in
push
cwtl
push
adc
into
cli
cmp
adc
out
test
push
cmp
lock
xlat
fmull
adc
aaa
in
rcrl
cmpsb
inc
mov
fsub
push
sbb
test
aam
or
pop
in
test
mov
dec
xlat
or
int3
cmpb
push
dec
in
ror
pop
test
push
cmp
xchg
loopne
ret
sub
mov
push
cmp
lret
idivb
jge
dec
ljmp
mov
adcb
pop
movsb
cli
push
mov
cmp
add
jl
fdivl
adc
inc
in
arpl
jp
stos
lret
push
dec
and
lods
cs
push
in
aas
mov
test
jecxz
test
push
sbb
bound
inc
popa
xchg
in
test
jg
sub
or
add
sahf
jecxz
sub
push
cmp
arpl
mov
dec
mov
lret
mov
mov
stc
mov
sub
sbb
push
mov
sub
sbb
imul
test
leave
mov
scas
icebp
or
mov
mov
mov
in
imul
cmpsb
dec
mov
shlb
sub
add
adc
mov
or
bound
push
sbb
adc
mov
in
inc
mov
dec
test
sbb
test
mov
dec
test
and
inc
bound
sub
popf
or
mov
push
sub
inc
sbb
leave
add
xchg
mov
lret
movsb
scas
inc
jp
mov
xor
jmp
lcall
sub
mov
xchg
adc
add
pop
cmp
scas
rcrb
ret
test
lods
cli
cmc
movsl
outsl
jns
xchg
orb
test
cltd
mov
test
out
movsb
in
fwait
psrlw
xchg
jb
dec
addb
cmpsl
xchg
lds
loop
lods
test
or
icebp
mov
cmpsb
sub
and
mov
jge
sub
jecxz
idivl
jne
sub
or
shll
outsl
in
jno
jns
cltd
loopne
sbb
xchg
repz
stos
and
dec
jnp
xchg
outsb
mov
popw
cmp
fistps
lea
cwtl
cmpl
je
test
dec
fldt
xchg
push
sub
jp
lcall
sub
lods
xor
idivb
leave
stc
jb
or
push
loop
test
sahf
cld
cmc
cmp
sub
test
loop
rcrl
ret
les
cmpsl
cmp
mov
les
pop
mov
inc
xchg
and
lods
mov
xor
test
dec
stos
loope
aad
mov
push
mov
test
xor
out
int3
movsl
mov
les
inc
mov
jno
mov
mov
ret
in
aam
sbb
lock
in
inc
xchg
ret
mov
nop
aas
lret
dec
fstps
insb
mov
push
add
xlat
pusha
or
pushf
int3
mov
xor
cmp
or
lea
lcall
xlat
loop
sbb
test
push
stos
push
call
cld
ret
add
test
lret
xchg
cmp
and
xchg
push
dec
cmp
xor
pushf
sub
xchg
scas
dec
test
decb
popf
test
mov
lret
js
xor
sahf
mov
pop
inc
lcall
mov
lock
sub
loope
xchg
fldenv
add
sbb
mov
arpl
test
or
movsb
jo
bound
test
jecxz
out
mov
stos
inc
int3
push
bswap
lods
cmc
out
adc
cmp
das
dec
lret
push
jmp
xor
test
test
sbb
pop
imul
movsb
lcall
and
mov
xchg
test
stos
insb
pop
fnstcw
pop
movaps
add
adc
test
sub
daa
push
fwait
cli
dec
inc
or
pop
mov
leave
sub
mov
imul
or
out
in
mov
aam
js
mov
lret
pop
test
mov
daa
push
ds
push
outsb
and
pop
mov
jl
mov
mov
aam
inc
jmp
mov
clc
xchg
mov
add
dec
arpl
sub
into
addb
lret
ljmp
loop
and
ret
loopne
cwtl
sbb
bound
xchg
mov
sahf
test
fnstcw
movsb
cmp
xchg
lret
popa
data16
insb
xchg
mov
test
aad
and
sub
mov
xchg
inc
int3
dec
out
sbb
popa
jge
push
in
push
xor
mov
repnz
xchg
adc
dec
jne
mov
call
sub
cmc
jecxz
mov
dec
mov
pop
sub
es
or
cmp
dec
xchg
add
or
sahf
test
adc
lret
cmp
push
cmc
dec
sub
leave
aas
lea
push
aad
test
sbb
and
iret
add
xchg
decb
loop,pn
add
jge
push
movsb
sub
pushf
jnp
into
popf
mov
test
pop
imul
loope
cmp
sbb
and
mov
inc
xor
and
cltd
imul
insb
enter
dec
cmpsb
lret
jp
jne
jno
sarb
dec
mov
mov
sbb
add
out
xchg
iret
movsb
mov
xchg
pop
idiv
push
mov
sbb
das
rorl
adc
push
push
test
repz
int
mov
dec
mov
loope
sbb
dec
sbb
faddl
lret
in
in
and
lret
adc
mov
pop
mov
xchg
in
cltd
in
mov
jmp
sub
repnz
or
mov
mov
in
test
inc
arpl
gs
dec
fdivrl
insb
pushf
cmp
add
into
push
sub
and
or
jno
in
test
scas
ljmp
pop
enter
push
sub
test
pop
stos
enter
out
insl
mov
mov
in
xchg
mov
mov
fnstenv
lea
test
test
nop
mov
filds
loope
dec
push
mov
test
sub
stos
test
ljmp
adc
pop
cmp
mov
xor
xchg
scas
and
stos
scas
mov
cmpsl
in
test
cltd
mov
jns
push
cmp
test
and
jecxz
out
jb
movsb
ror
fisubrl
jg
clc
lret
xchg
int
in
sbb
aad
in
and
push
mov
scas
push
ret
cli
flds
push
int3
cmc
out
test
xchg
aas
das
inc
cmpsb
shrl
dec
or
sub
cmpsl
lods
mov
mov
sub
leave
xchg
cs
pushf
movsb
mov
std
int
fisttpl
inc
sub
push
dec
leave
bound
jg
dec
mov
loope
sub
xorb
mov
popa
jge
adc
xor
fnstsw
in
and
sub
mov
fiaddl
imul
in
in
pop
leave
test
and
sbbb
popf
sahf
int
ds
xor
stos
stos
dec
pusha
xor
push
mov
sub
cli
int3
inc
cmp
nop
sub
mov
adc
into
insl
lods
imul
push
das
push
mov
lret
enter
test
jp
in
add
or
pop
jle
or
loopne
test
lret
mov
pop
repnz
popa
movsb
enter
sbb
cli
int
cmp
in
in
out
inc
mov
sub
push
cltd
pop
and
sbb
mov
vmovd
mov
mov
ret
movsb
lret
xchg
into
daa
push
imul
ss
aad
test
daa
dec
mov
cmp
inc
cltd
dec
xchg
mov
ret
mov
lods
adc
leave
pop
je
pusha
and
mov
and
push
push
jbe
hlt
fmul
movsb
sub
dec
cmp
push
icebp
dec
jp
leave
popf
imul
test
shll
cmc
sahf
cmp
fs
and
movsb
fsts
sub
lods
in
pop
cs
jne
test
and
or
mov
aas
mov
adc
test
mov
enter
addr16
inc
push
mov
test
in
xchg
adc
sub
arpl
or
push
sub
push
or
mov
test
mov
dec
push
test
sub
sub
mov
and
xor
in
fnstsw
test
inc
sbb
fisttpl
loope
sarl
frstor
rolb
test
cli
dec
ficoml
imul
mov
movsb
jle
sahf
pop
mov
imul
jne
sbb
lahf
push
mov
and
mov
hlt
insb
pusha
shl
aam
add
leave
mov
test
adc
les
dec
insl
dec
stos
mov
cmp
movsb
cmp
punpcklbw
and
mov
loope
clc
test
add
rorl
shrl
cltd
xor
add
dec
adc
lods
test
inc
call
jecxz
lods
shl
loopne
incb
mov
in
dec
jecxz
xchg
push
push
pop
mov
inc
in
dec
outsl
mov
fisubs
test
jae
les
dec
and
pop
iret
pop
mov
inc
movsb
xor
shll
mov
std
and
scas
and
loop
mov
mov
jbe
lcall
mov
call
lret
std
lea
test
mov
dec
add
faddl
mov
ljmp
popa
divl
jg
mov
xchg
jmp
sbb
cmp
mov
jp
adc
jmp
jge
sbb
mov
dec
and
add
push
clc
jns
cmc
push
les
in
pop
or
xorb
xor
mov
mov
pop
add
fcmove
add
sub
xor
ret
lods
adc
sbb
test
xchg
add
or
jnp
xorb
cld
mov
jns
push
and
sub
pop
or
roll
dec
mov
loope
push
cltd
in
lea
aad
je
or
enter
fdivrl
or
mov
mov
mov
ret
xchg
xchg
jecxz
test
sub
lret
or
nop
sub
mov
or
out
test
push
lock
fwait
or
imul
mov
fbld
test
mov
insb
xchg
push
lds
mov
es
inc
fidivl
mov
or
aam
test
or
arpl
jb
loopne
push
mov
sub
pop
push
outsl
add
adc
cli
mov
add
mov
and
mov
and
add
mov
test
rcl
iret
test
lds
pop
pop
sbb
in
sbb
mov
jl
jecxz
xchg
test
pop
iret
pushf
test
push
flds
pop
push
ja
mov
outsb
push
icebp
test
cmc
nop
xchg
or
jmp
scas
sub
add
cmp
mov
dec
mov
test
orb
ret
sub
in
movsl
and
imul
mov
xchg
int3
loop
int
lcall
out
movsb
push
test
fsubl
imul
sahf
pop
xchg
movsb
pushf
jns
ljmp
mov
and
dec
jb
sub
mov
call
sub
lock
and
mov
int
repz
test
sbb
leave
loop
sbbl
int3
imulb
into
pop
sub
stc
sub
pop
orb
outsb
sub
xor
dec
xchg
ret
bound
jbe
xor
call
pop
pop
mov
insb
push
std
sbb
out
inc
les
mov
stos
mov
bound
jb
jecxz
es
leave
mov
stos
pushf
push
jmp
sub
add
insb
mov
sub
mov
mov
push
arpl
mov
insb
fidivl
outsb
test
xchg
cmpsb
pop
xchg
leave
jecxz
jmp
dec
mov
lret
adc
sbb
icebp
in
sub
jmp
jbe
sub
sbb
cmp
dec
jno
add
popf
add
int3
pop
mov
jno
jmp
daa
xor
mov
dec
jmp
or
fldt
mov
add
inc
sub
pop
cmpsl
dec
cmpsl
mov
and
daa
movsb
or
dec
jo
in
dec
add
das
mov
xchg
imul
stos
stc
or
aad
lret
imul
out
push
leave
mov
imul
dec
fwait
inc
cmp
in
sbb
mov
lods
je
mov
pop
mov
mov
dec
adc
push
test
stc
jbe
pop
pop
imul
adc
aad
jmp
test
shl
insb
orb
or
or
inc
sub
mov
push
add
in
or
loope
mov
cmpsb
out
in
arpl
ss
ret
jmp
lods
xchg
xchg
lret
cld
or
sub
dec
ljmp
add
mov
jmp
nop
ret
mov
ss
or
loop
push
and
das
test
xchg
test
imul
mov
int3
xchg
inc
int
sbb
pop
test
sbb
sbbb
mov
cmpsb
shll
dec
into
lock
mov
stos
movsb
imul
xchg
mov
mov
xchg
push
sbb
call
hlt
data16
or
cmpsb
push
push
or
add
clc
stos
inc
test
scas
test
mov
cmp
test
cmp
stos
push
popf
jp
in
mov
stc
mov
or
mov
mov
mov
subb
sub
loop
stos
rcll
and
cmp
or
inc
sub
mov
sub
dec
in
frstor
rorb
xlat
sub
push
imul
je
lret
dec
dec
push
push
pop
xor
leave
out
arpl
repz
or
dec
stc
test
pop
mov
test
sbbl
std
test
dec
imul
mov
or
sub
cmp
ljmp
imul
mov
decb
pusha
imul
sub
push
cmp
sub
clc
ret
movsl
xorl
mov
sbb
cmp
jb
or
ljmp
cli
out
lret
or
xor
add
ljmp
or
insb
mov
imul
mov
es
push
or
movsb
mov
test
test
fwait
mov
dec
mov
push
sbb
mov
mov
dec
or
cmp
insl
mov
lret
int3
mov
les
jmp
sbb
dec
in
sub
stos
pop
mov
bound
dec
sub
xchg
call
mov
test
test
outsl
addr16
loop
movsb
sub
add
ret
mov
test
fisubrs
sub
lret
xor
stos
dec
lock
dec
test
add
into
sub
xchg
dec
jp
dec
test
jecxz
dec
call
xchg
dec
lret
or
mov
enter
push
pop
mov
jnp
andb
mov
rorb
popf
inc
or
jns
movsb
or
mov
insb
and
cmp
sub
mov
fwait
and
jmp
jp
daa
test
fdivrp
jecxz
lret
popf
inc
dec
pusha
jl
adc
inc
sub
mov
dec
mov
in
mov
sub
jge
push
test
mov
mov
mov
and
insl
mov
cmp
lock
xchg
iret
enter
imul
movsb
cmp
bound
and
lret
or
into
xchg
jmp
stos
mov
imul
ret
mov
movsl
jbe
or
in
rcrb
enter
mov
sub
in
jp
imul
sub
insb
or
jae
iret
cmp
cmp
push
ds
pop
fwait
repz
dec
push
stos
xor
mov
iret
je
imul
out
mov
dec
js
pop
pop
adc
pop
movsb
in
les
mov
lock
mov
or
test
es
push
push
testl
sti
sbb
in
js
sbb
fnsave
lret
out
test
lock
sub
fwait
hlt
dec
dec
jmp
or
push
bound
dec
lret
sub
pusha
mov
cli
enter
ret
imul
movsb
dec
mov
cmp
ret
lcall
sahf
test
cmpsb
mov
stc
or
test
push
sub
mov
mov
xchg
shlb
arpl
lods
test
mov
xor
repz
ss
aaa
or
or
add
sub
gs
movsb
mov
mov
dec
ret
into
xor
or
lret
stos
jle
mov
insb
or
leave
addl
xorb
sbb
xchg
mov
push
int
outsb
xchg
dec
and
mov
mov
sbb
fsubrl
imul
in
xchg
adc
sub
and
stos
jmp
or
pushl
mov
or
loop
outsb
imul
sub
mov
bound
lret
fs
sub
pop
loope
mov
test
clc
mov
sub
stc
mov
cltd
xchg
dec
arpl
mov
mov
test
dec
mov
popf
out
jbe
test
pop
ss
sbb
das
mov
mov
lods
in
rcrb
add
mov
lods
mov
push
push
ljmp
out
mov
cwtl
or
iret
dec
pushf
jg
or
xchg
aam
in
push
insl
imul
mov
lods
push
mov
inc
mov
imul
inc
imul
cmp
sub
mov
shll
lret
jo
bound
dec
and
scas
test
lret
ret
idivb
pop
call
or
outsl
sbb
fadd
sub
sub
enter
cs
fwait
push
leave
xchg
hlt
inc
add
or
fs
insb
fisttpll
push
inc
or
les
in
aaa
sub
fwait
movsb
stos
mov
and
leave
mov
dec
add
loope
sbb
add
jmp
lret
or
pop
xor
outsb
movsb
test
xchg
mov
cmp
sarb
sti
out
bound
mov
adc
in
inc
mov
lcall
pop
fwait
dec
push
mov
inc
mov
test
int3
test
and
sub
insl
dec
insb
movsb
sbb
sub
dec
and
outsl
mov
dec
jle
xchg
push
mov
ret
lahf
or
xor
test
adc
insb
aaa
ficoml
into
sbb
bound
arpl
movb
push
push
add
sub
insb
sbb
adc
sbb
cmp
pop
sbb
or
mov
imul
push
pusha
dec
pop
or
push
mov
push
test
cmp
dec
ljmp
jns
xlat
repnz
insb
jg
cwtl
add
enter
jmp
imul
and
lods
mov
les
das
in
xor
sahf
repnz
inc
add
subb
les
sbbl
jae
mov
add
ss
adc
subb
xor
andl
xchg
or
mov
xchg
ss
mov
adc
cmovnp
and
mov
cs
testl
lcall
imul
bound
test
lret
test
mov
stos
dec
mov
test
cmp
xchg
inc
int
sub
mov
or
mov
in
lret
dec
sbb
insb
jge
jge
jne
dec
push
jmp
mov
imul
stc
fimuls
jmpw
cmpsl
or
pop
imulb
push
loop
int3
xor
pop
mov
sub
in
call
mov
xchg
inc
jl
xchg
cmp
push
or
push
sub
xor
mov
testb
data16
jmp
xor
jb
lahf
fsubs
andb
stos
out
sbb
bound
pop
pusha
dec
enter
dec
imul
sbb
cmc
in
shl
test
adc
inc
fiadds
inc
ljmp
or
jns
and
mov
adc
and
or
mov
cmp
loop
jmp
rcrl
cmpsb
imul
iret
cmp
inc
sub
aaa
jecxz
arpl
mov
pushf
cmc
enter
pop
xchg
pop
fdivr
out
test
adc
sarl
add
shr
or
and
pop
push
loopne
push
dec
mov
xor
and
test
aas
add
lods
mov
and
xor
jne
fxtract
mov
les
fwait
movsb
sub
xchg
dec
aaa
movsb
jmp
inc
leave
scas
cmp
sub
mov
test
ljmp
dec
sub
stos
pop
mov
imul
fistps
jno
imul
in
push
loop
or
insb
nop
mov
stc
ds
dec
jbe
test
push
mov
pop
out
and
lret
in
xor
or
jle
mov
cltd
and
sub
mov
mov
mov
cmp
fldl
sub
in
in
add
mov
cmp
mov
imul
pop
or
xlat
xchg
sub
js
cmp
test
push
lods
test
out
pop
int3
push
fld
hlt
and
mov
sub
stos
xor
sub
cmc
mov
shrb
insb
sbb
test
dec
dec
sub
pop
and
cli
int3
mov
mov
test
ljmp
dec
fwait
or
les
sahf
pop
sub
or
js
lahf
push
addr16
inc
mov
inc
test
adc
in
pop
dec
bnd
loop
add
add
xor
pop
xchg
test
lods
mov
movsb
xchg
adc
and
fwait
lds
sbb
adc
outsl
arpl
insb
cwtl
inc
lret
out
lcall
lea
test
inc
enter
imul
mov
push
sub
xor
sbb
lahf
insb
mov
mov
jmp
cmp
in
test
and
mov
jno
sbb
xlat
shrb
test
popa
dec
les
les
std
mov
outsb
pop
test
pusha
dec
xor
and
mov
lret
pusha
mov
decl
pop
jg
aam
loope
mov
dec
cwtl
jbe
out
aad
or
or
stos
pop
pop
sub
cmp
xchg
dec
fwait
mov
pop
test
mov
test
lcall
test
pop
jle
and
shlb
adc
fs
stc
adc
dec
arpl
in
pop
pop
mov
pop
std
cwtl
sub
xor
cmp
int3
mov
andb
push
or
aas
out
test
sbb
shll
mov
adc
mov
stos
call
lahf
mov
outsb
sub
pushf
mov
or
xchg
mov
and
leave
mov
subl
push
mov
dec
sbb
inc
jb
jp
and
stos
leave
ret
or
out
dec
bound
xchg
dec
dec
outsb
call
dec
out
iret
push
jnp
cltd
scas
test
roll
call
push
inc
mov
in
cld
imul
jecxz
out
pusha
inc
lret
mov
inc
jae
int
sub
lcall
add
subl
push
cmp
sbb
or
das
jnp
lret
js
fwait
insl
test
inc
mov
es
mov
xchg
les
mov
xchg
mov
ja
adc
push
cmpsl
and
leave
push
bound
jbe
inc
sbb
push
sbb
adc
sbb
push
jb
in
jle
clc
push
stos
push
or
mov
jno
jmp
or
arpl
mov
mov
cmpsl
les
xchg
inc
mov
inc
mov
in
aam
les
orl
sbb
add
orl
jp
sahf
mov
cmp
add
dec
sarb
xchg
push
dec
or
inc
pop
adc
add
mov
xor
pusha
or
inc
mov
popf
cmpb
aad
imul
xor
sub
jnp
sbb
jl
nop
dec
lods
mov
cmc
imul
subb
jmp
and
mov
aas
aad
gs
popa
adc
pusha
lcall
test
inc
stc
adc
or
pop
mov
and
hlt
aaa
aam
les
subb
sub
pop
push
mov
test
leave
add
or
sahf
jae
mov
and
pusha
dec
push
mov
lret
add
xor
or
popa
mov
arpl
mov
in
cmpsl
sub
outsl
movsl
pusha
insl
int3
push
lods
jae
mov
pushf
add
outsb
or
mov
in
les
imul
popl
clc
arpl
int
inc
push
in
push
imul
clc
mov
push
test
lcall
push
sub
adc
and
xor
fildll
mov
fsubp
pop
lods
stos
ret
mov
pushf
jmp
or
push
jmp
pop
mov
ss
arpl
stos
xchg
dec
push
or
in
leave
outsb
mov
cmp
dec
dec
pop
and
das
imul
xor
lret
mov
scas
hlt
pusha
popf
lret
xchg
lret
mov
test
or
or
xor
xchg
xor
jo
imul
loope
push
mov
jl
les
mov
and
in
xlat
mov
pop
insb
or
inc
sub
fdivr
xchg
sub
sbb
test
scas
adc
jo
outsl
jne
movsb
int3
in
xor
stos
iret
mov
sub
test
xchg
loop
dec
mov
ljmp
addr16
push
lcall
js
sub
mov
jl
xor
movsl
mov
push
aad
cmp
or
mov
jecxz
loop
test
sub
and
in
js
sub
lret
dec
shll
aam
push
stos
mov
enter
pusha
lcall
cltd
loop
xor
sub
dec
sub
ds
stos
mov
pusha
push
xchg
shrl
in
and
data16
xlat
sub
mov
inc
test
int
stos
sbb
push
dec
leave
adc
test
scas
ret
mov
les
dec
stos
xor
xchg
mov
inc
scas
in
jbe
test
sbb
or
sbb
lcall
push
in
fistl
das
dec
arpl
cld
stos
outsl
inc
aas
push
jmp
lcall
in
lret
cmp
outsb
test
sub
lods
ret
dec
lahf
sub
mov
jns
stos
test
shrb
and
ljmp
and
outsb
in
push
repnz
cli
repnz
mov
jo
pusha
or
mov
leave
aam
mov
test
jbe
sub
jae
popf
sbb
cld
mov
js
xchg
xor
pusha
mov
sub
mov
or
in
cmp
ret
insb
test
dec
mov
or
mov
lock
js
cmp
inc
xor
mov
rcrl
hlt
sbb
sub
hlt
mov
jmp
jge
mov
cwtl
or
out
test
mov
out
arpl
cmpsb
jecxz
insb
rcl
dec
je
test
lods
fadds
or
ret
sahf
pop
push
test
out
mov
and
jae
ret
and
stos
fwait
pop
test
adc
enter
leave
dec
jmp
sbb
lods
clc
mov
sarl
test
imul
divl
test
aad
and
sbbl
push
mov
lret
lret
aad
pop
sub
mov
sub
fidivrl
and
sar
dec
xlat
dec
mov
les
xchg
xchg
mov
int
cld
dec
pop
xlat
jb
mov
dec
test
cmpsl
push
pushf
into
mov
inc
mov
in
adcb
cmpb
aam
test
mov
imul
mov
ljmp
sub
ret
icebp
mov
lcall
cmp
mov
mov
inc
push
testl
mov
mov
lea
xor
xchg
push
sbb
mov
dec
dec
adc
inc
mov
inc
xchg
sub
in
cmp
xlat
or
sub
scas
test
lret
mov
jmp
icebp
push
mov
in
dec
lret
test
outsb
int3
xchg
xchg
rcr
fcmovne
mov
lret
es
cmp
imul
ror
les
cli
mov
pop
pop
sub
leave
lds
insl
mov
sub
adc
popf
and
outsb
inc
mov
xor
movsb
adc
sbb
or
cmpsl
push
mov
faddp
sub
and
mov
jmp
push
mov
lods
icebp
enter
jmp
pop
mov
mov
push
imul
stos
cmp
cmpsl
repnz
sbb
sbb
lds
into
push
test
xchg
mov
stos
jge
int3
out
les
dec
sbb
xchg
mov
cmp
mov
aad
in
insb
adc
cmc
inc
mov
and
mov
push
sub
arpl
dec
mov
scas
sub
jle
sahf
bound
icebp
mov
jbe
in
pop
cmp
lret
sbb
test
ljmp
add
mov
arpl
mov
mov
imul
movsb
je
sub
into
pusha
arpl
add
imul
test
adc
push
in
sbb
stos
push
dec
sub
insb
mov
popf
imul
cmc
add
jmp
push
or
inc
or
or
shlb
mov
int
outsb
imul
or
and
mov
push
mov
leave
out
test
fwait
iret
dec
hlt
jmp
lret
pop
mov
in
in
popf
int3
xchg
inc
dec
popa
or
and
and
sti
into
mov
jecxz
sub
arpl
xor
lods
sub
mov
bound
mov
bound
add
adc
hlt
test
or
test
roll
fiadds
mov
bndstx
test
mov
cmp
mov
mov
stos
outsb
mov
inc
out
loop
repnz
xor
jle
fwait
test
xor
sub
dec
adc
mov
pushf
mov
pop
add
jmp
mov
jl
sub
sub
lret
mov
mov
in
pop
dec
xchg
imul
outsb
lret
mov
and
sbb
add
and
push
movsl
int3
loop
mov
pop
dec
enter
stos
stos
inc
fsubs
mov
xor
adc
dec
sbb
scas
inc
dec
mov
aas
in
int
ljmp
lods
inc
arpl
jmp
push
mov
int3
orb
xchg
xchg
mov
test
ret
lret
push
fst
xchg
or
leave
call
fcoms
fsubrl
fs
and
mov
sbb
aad
add
mov
leave
test
jbe
or
add
leave
mov
bound
lret
xchg
dec
mov
mov
or
out
divb
subl
arpl
outsb
jmp
mov
idiv
xchg
mov
cmc
xor
or
pop
test
jge
ret
in
sbb
leave
in
xor
push
daa
sub
mov
stc
insb
pusha
cli
and
mov
jmp
cmp
cmp
mov
cmp
push
fistpl
mov
es
in
arpl
or
cmp
jb
pop
mov
test
rcrl
movsb
mov
mov
imul
cmp
and
in
test
cld
push
int3
leave
mov
inc
pop
add
hlt
xchg
cmp
stc
enter
sbb
dec
pop
mov
xor
in
fisubrs
mov
ret
mov
fisubrs
sub
sbb
or
sub
fmul
cli
not
dec
xchg
dec
push
lods
in
ficompl
xchg
ret
leave
jecxz
inc
lret
cmp
test
test
or
or
imul
mov
xor
stc
lock
jae
dec
in
xchg
dec
test
fcoml
or
test
xlat
pop
shl
into
jbe
fisttpll
in
test
fisttps
dec
or
inc
cmp
lock
or
out
jno
mov
imul
sub
leave
mov
in
mov
imul
jo
movsl
lcall
cmpsb
or
jmp
adc
imul
mov
test
pop
mov
or
arpl
mov
nop
and
loop
sub
cmpsb
or
dec
mov
mov
sbb
daa
cld
xor
cmp
push
mov
or
nop
push
imul
pusha
cmp
mov
aad
mov
into
xchg
jno
sub
ljmp
sbb
sbb
loop
or
pop
sbb
and
dec
stos
arpl
or
fs
adc
sti
xor
imul
stos
dec
lock
inc
mov
inc
xorb
fst
fcomps
lret
mov
mov
inc
imul
xchg
sub
jne
lcall
aad
std
sub
das
sub
leave
in
popf
cmp
pop
fsubl
movb
out
cmpl
mov
lret
int3
dec
mov
hlt
dec
sbb
outsl
test
out
cli
mov
push
sub
add
sub
adc
xchg
fisubrl
mov
mov
ret
sbb
and
or
xorb
repnz
ljmp
imul
push
loope
pop
addr16
xchg
push
idiv
mov
mov
jp
insb
mov
test
or
aad
inc
outsl
ret
jmp
arpl
bswap
push
mov
jmp
dec
sub
and
in
lret
mov
cld
ss
pop
in
cmc
stos
mov
lret
cld
arpl
int
mov
mov
or
xchg
stc
jbe
clc
sbb
or
ljmp
xor
ret
cmc
lret
loopne
sub
les
imul
in
sahf
pop
ljmp
sub
lret
test
xlat
pop
dec
sbb
pop
aas
mov
mov
ja
lahf
mov
lods
sub
push
mov
loope
lds
imul
or
mov
dec
mov
loop
mov
out
xorb
jb
ljmp
cmp
cmpsb
cltd
cwtl
push
test
rolb
pop
insl
sub
adc
arpl
aaa
hlt
fidivrs
pop
sub
cmp
mov
lahf
mov
sub
mov
test
inc
xor
repnz
xor
inc
test
jle
pushf
test
sahf
test
test
push
outsl
arpl
or
mov
add
push
mov
cmp
mov
insl
imul
inc
and
cld
vmovdqa
mov
ret
popa
test
jne
scas
push
sbb
outsl
int
stos
arpl
arpl
mov
mov
jle
bound
adc
xchg
jae
test
std
je
inc
jbe
lcall
ret
test
mov
and
bound
push
cmc
sbb
popa
ret
cld
test
cmp
mov
or
test
inc
arpl
inc
push
ljmp
fwait
stc
and
push
psubusb
in
adc
iret
loopne
mov
enter
mov
mov
movsb
push
sub
pop
into
in
jmp
in
cwtl
cld
mov
sti
sub
scas
sbb
aaa
cmc
mov
sti
sbb
jmp
or
mov
sbb
data16
pop
cltd
inc
mov
repnz
or
sbb
rcrl
pusha
enter
sbb
sbb
sbb
push
ret
mov
negl
jecxz
test
xlat
insb
fs
test
test
test
insb
fisubrl
or
sub
test
sbb
cltd
arpl
jb
divb
cmp
mov
inc
jae
leave
sti
gs
sbb
push
push
cld
pop
mov
xor
in
cmp
cmp
and
sbb
popf
test
add
dec
push
sbb
negb
pop
mov
popa
lret
cmp
xchg
test
inc
sbb
pavgw
push
dec
xchg
jmp
and
sbb
jl
stos
mov
jp
push
pop
push
mov
push
mov
jecxz
test
mov
int3
mov
test
enter
add
lcall
mov
and
push
jno
cmp
jmp
cmpsb
loop
jnp
mov
mov
jno
push
aad
mov
push
pusha
cltd
bound
repz
sbb
cs
mov
insb
pop
stos
and
add
mov
pop
xchg
mov
add
add
pushf
xchg
lea
and
xchg
orb
cli
movsb
and
jnp
inc
les
lret
sbb
adc
adc
adc
adc
xchg
xor
mov
xchg
es
imul
mov
mov
pusha
push
jle
push
outsb
es
jle
in
test
mov
sti
gs
test
lret
je
test
and
lcall
cmp
jbe
shrl
test
in
pop
or
jnp
mov
sbb
hlt
cmc
lods
test
xor
cmp
jns
rorl
adc
testl
jnp
movb
fsts
pcmpeqb
les
aaa
sbb
sahf
movsb
stos
les
jmp
pop
and
jl
lret
cltd
add
ljmp
out
push
lods
xchg
inc
test
rcll
cmp
lods
arpl
mov
inc
imulb
and
cmp
push
shlb
repnz
jle
cs
mov
xchg
arpl
lds
inc
test
xchg
stos
dec
aas
xchg
pusha
test
test
jle
aam
mov
sahf
and
in
cld
in
icebp
push
xchg
add
xor
aas
movsb
cmp
xchg
jg
daa
fxch
in
dec
enter
mov
mov
subb
sti
ljmp
xchg
insl
sbb
jl
inc
pop
test
inc
inc
mov
mov
je
fildll
or
jne
xchg
test
cltd
aas
adc
push
test
fmul
clc
jno
test
ret
mov
mov
test
cmp
pand
sarl
les
or
notl
push
icebp
movsl
cli
xor
insb
std
ljmp
imul
test
sub
in
sub
sahf
push
push
in
test
lods
adcb
mov
cmpsb
sbb
fucomip
jle
xchg
test
inc
jnp
mov
rolb
aaa
imulb
inc
xlat
or
ljmp
leave
adc
test
cltd
xor
test
imul
clc
ja
testb
dec
arpl
push
push
data16
or
jge
inc
jl
inc
xor
insl
andb
outsb
cmp
test
inc
mov
test
and
rcrl
notl
js
ret
jmp
lahf
sti
rolb
inc
mov
aam
lcall
bound
cmp
mov
or
jg,pt
ljmp
pushf
test
lea
or
loop
stos
jno
mov
pop
test
mov
test
and
popf
mov
xorl
mov
js
sahf
arpl
aam
fimuls
and
fcomi
ja
mov
test
xchg
push
mov
nop
mov
push
in
push
mov
jg
inc
scas
mov
test
jmp
dec
adc
ljmp
test
dec
sub
loop
outsl
mov
fxrstor
lcall
test
jb
cmc
push
mov
and
dec
in
sub
aam
xrelease
jecxz
mov
subb
movsb
cli
ja
pop
out
push
daa
xor
mov
and
or
mov
inc
outsb
jae
dec
jno
mov
lret
cmpsb
adc
xchg
inc
mov
test
pop
test
in
fwait
test
xchg
mov
scas
test
lea
sub
fimuls
lret
aad
test
je
test
sub
fwait
dec
mov
pushf
or
test
addl
lret
pop
inc
aam
sbb
mov
dec
loop
sub
jmp
xor
test
mov
test
aas
cmp
test
in
mov
pusha
cmp
and
setae
inc
mov
test
dec
sub
test
clc
bound
lods
and
or
sahf
cwtl
or
orb
dec
jp
test
and
test
cmp
xchg
mov
test
fprem1
incb
insb
in
ljmp
lds
cmpsl
scas
and
inc
push
mov
xchg
popf
shll
test
or
outsb
test
mov
stos
test
test
repnz
sahf
arpl
mov
imul
sbb
jno
add
ficomps
test
enter
bnd
mov
push
ret
cli
lret
sub
cvttps2pi
xchg
movsb
addr16
mov
arpl
rcrb
mov
ret
mov
jg
sahf
xor
xchg
stc
test
push
ret
bound
test
subl
adc
movsb
out
mov
push
push
testb
je
xlat
popa
pop
lret
cltd
mov
test
dec
jge
jecxz
push
repnz
jg
fdivr
test
cwtl
or
test
dec
cs
cld
in
jmp
test
adc
mov
enter
test
xchg
data16
in
jge
xchg
movsl
test
ss
outsl
dec
mov
jmp
insl
clc
scas
push
mov
jbe
sahf
imul
push
in
je
cld
fisubl
mov
inc
ret
mov
mov
cmp
pop
out
test
cmp
incb
or
in
je
dec
and
xchg
std
movsb
dec
stc
mov
testl
test
cmc
jmp
and
in
addr16
pop
xor
or
inc
push
push
out
movsb
sub
push
push
mov
rolb
ret
test
pop
sbb
rolb
loope
jb
sub
cmp
or
imul
xchg
push
or
test
mov
int
inc
pop
int3
mov
shl
outsb
push
dec
or
icebp
shll
push
mov
push
test
pop
adc
insl
nop
test
add
jg
loope
fldcw
xchg
movsl
cwtl
sbb
popf
bound
mov
test
into
cli
arpl
mov
test
cs
shl
rol
test
stos
mov
xchg
sti
adc
test
sub
or
or
movsb
movsb
pop
test
sub
sbb
outsb
add
bound
mov
arpl
mov
bound
dec
fistpll
fnstenv
jl
out
jne
inc
rcrl
and
mov
mov
and
push
outsl
int
fildl
xchg
fnstsw
test
ljmp
bound
jle
hlt
mov
cld
cmp
sahf
loop
test
jno
imul
cmp
stos
lods
jmp
iret
fldl
adc
xchg
ljmp
mov
insb
test
bound
push
add
mov
int
lret
mov
inc
jo
loopne
nop
and
mov
test
xor
jo
je
in
mov
outsb
nop
test
stos
xor
mov
sub
xchg
mov
pop
adc
leave
and
dec
fsts
arpl
cli
sahf
mov
or
push
inc
test
jmp
fwait
jno
ljmp
fmuls
cmovns
fdivl
cli
test
in
bound
ljmp
jle
inc
imul
adcb
dec
clc
sub
test
lret
push
or
test
and
insb
ret
lods
aaa
mov
cmp
les
insl
mov
jnp
test
cmpsb
repnz
and
mov
push
or
test
shrl
xchg
lods
in
scas
test
test
mov
and
out
rcrb
inc
sub
lret
decb
xlat
pop
mov
add
ret
cmp
stos
ljmp
xchg
test
addb
push
movsb
movsb
jnp
fimuls
cmp
add
lea
inc
in
sbb
mov
xlat
jbe
cmp
mov
ljmp
inc
call
sbb
mov
jnp
movsl
adc
sub
and
sub
adc
popf
dec
mov
roll
shrl
xchg
push
test
mov
jmp
mov
cwtl
mov
mov
mov
test
inc
mov
and
test
daa
or
lods
mov
mov
or
mov
in
mov
sti
sub
add
shll
rclb
test
xor
pusha
repz
aad
test
iret
pop
scas
jae
jb
test
fsubs
test
sub
mov
dec
jle
je
lret
mov
movsb
stos
cmp
xchg
enter
inc
das
stc
mov
pop
fdivl
daa
mov
and
test
adcl
push
cli
mov
adc
sahf
xchg
and
cli
jnp
int
ljmp
xor
and
pusha
out
insl
pop
sub
xchg
ss
test
dec
scas
add
sub
out
test
clc
mov
call
test
lcall
lods
test
mov
jmp
and
test
sbb
cltd
test
mov
inc
in
test
je
cmpb
mov
scas
shll
out
jae
test
cmp
mov
inc
ret
mov
cmc
or
test
push
cmpsl
cltd
pushaw
mov
clc
popa
movsb
add
aam
adcb
dec
test
xchg
sbb
out
cmp
cmovnp
dec
mov
dec
mov
jb
std
pop
movsb
movsl
lcall
adcb
mov
push
mov
mov
fnstsw
in
movsb
cmp
adc
pop
add
cmp
test
mov
cld
test
loope
mov
rcrl
test
cmp
push
cmc
arpl
aam
jg
sbb
in
test
insl
loope
imul
mov
mov
int
mov
loopne
xor
bsf
mov
mov
or
mov
jl
sahf
popa
push
xchg
addl
jnp
fs
sbb
and
jmp
insl
and
dec
cmp
adc
mov
sub
inc
cmp
test
fisubl
aam
in
imul
sub
gs
test
lcall
in
daa
pop
adc
sahf
jge
sbb
cmp
push
fsubl
lods
rclb
jns
push
dec
movsb
mov
or
out
cmpsl
fimull
test
and
jmp
aad
push
fcomps
imul
push
xor
test
pop
lods
sub
sbb
aas
ds
popa
mov
dec
sahf
mov
stos
pop
imul
ljmp
xchg
sub
jecxz
or
mov
test
sti
imul
stos
out
gs
cmc
dec
ficoms
mov
xlat
out
lret
in
fimull
mov
pop
xchg
sbb
popa
xchg
inc
je
movsb
pop
pop
js
inc
rcrl
ja
cli
and
xchg
test
ljmp
pusha
adc
adc
les
movsl
mov
ss
in
test
fsub
iret
out
enter
jmp
jl
mov
xchg
dec
pop
test
xlat
outsl
sbb
jmp
fisttpll
mov
inc
sahf
pop
lods
sbb
xor
imul
cld
add
jb
xorl
fcmovnb
and
adc
movsl
mov
test
push
sbb
popa
loopne
sahf
test
in
js
dec
jecxz
faddl
adc
sti
sbb
imul
shlb
pop
inc
daa
insb
and
ret
jno
pop
push
call
testl
lret
jmp
xor
loopne
cmpsl
sbb
sbb
test
mov
loop
cmpsb
mov
adc
les
and
stos
xchg
lds
test
xlat
add
addb
subb
cmp
sahf
push
or
aaa
ds
dec
in
test
mov
cmp
xchg
jbe
inc
lds
movl
test
push
lahf
ss
or
jo
bound
lea
and
adc
mov
pusha
adc
cmp
mov
xor
repz
mov
jecxz
and
pusha
loopne
test
push
loope
in
jecxz
mov
imul
add
stos
mov
pushf
arpl
lea
adc
xor
insb
movups
xchg
pusha
push
and
leave
clc
daa
jbe
test
mov
push
imul
movsl
push
addr16
in
mov
jp
loopne
mov
lds
sarb
push
notl
test
movaps
imul
sbb
repnz
dec
adc
push
mov
ljmp
test
shl
test
mov
ljmp
test
test
in
test
mov
cld
xchg
pop
aad
push
add
loop
div
jmp
mov
mov
dec
mov
pop
loope
inc
dec
or
fildl
mov
scas
adc
push
mov
inc
mov
push
loop
shll
xor
test
das
and
fcoml
xchg
cmp
or
mov
popa
jns
and
fs
loopne
inc
xchg
sub
das
test
outsb
subl
mov
fwait
aad
xlat
addb
push
test
bnd
xchg
mov
pushf
movsb
dec
pusha
psubusb
out
aad
popf
mov
js
pop
adc
sbb
les
inc
mov
ljmp
mov
inc
test
pop
xlat
push
push
test
loop
mov
mov
test
mov
jmpw
loopne
jns
cs
push
push
test
outsb
ljmp
stos
inc
mov
ficoms
movsb
sbb
and
dec
xlat
xorb
movsb
sbb
in
lods
push
sub
mov
jmp
out
mov
ds
test
out
les
je
lea
sbb
fbstp
vmovddup
and
push
xchg
loope
aam
mov
mov
mov
jns
movsb
loop
lods
mov
jl
mov
sbb
inc
pop
enter
test
loopne
lods
sbb
pusha
mov
adc
or
pop
emms
add
cmpsl
arpl
je
ljmp
imul
rol
xchg
jle
test
jecxz
dec
call
xchg
out
jb
cli
rorb
xor
xor
cmp
mov
movsb
or
outsb
xchg
dec
test
shrb
add
fldt
test
add
aas
test
bnd
orl
pop
mov
arpl
ret
mov
jae
faddl
dec
cmp
jno
fnstenv
lods
out
push
mov
fsubl
rorl
cwtl
mov
hlt
fistpll
pop
lea
stc
dec
adc
jne
inc
jmp
mov
int3
in
test
sub
in
mov
sbb
xor
clc
fiaddl
ds
icebp
out
lea
pusha
inc
push
mov
dec
inc
cmp
mov
cmpsl
nop
mov
xor
in
pop
fwait
mov
scas
call
inc
jecxz
pop
mov
leave
in
jno
cmp
inc
mov
cmp
mov
call
mov
adc
in
adcl
or
sti
xor
aad
test
xor
lods
cwtl
push
scas
out
movsb
mov
outsl
sub
add
mov
es
into
pusha
sbb
test
repnz
cld
movsl
test
imul
jmp
testb
and
js
test
enter
test
aas
jmp
fdivrs
mov
lods
lret
add
sbb
test
imul
ds
cmp
lcall
mov
push
jns
mov
out
pop
movsb
add
mov
fistl
or
lahf
lea
xor
sti
sbb
mov
lds
adc
int
arpl
out
les
cmpb
stc
pop
dec
or
leave
pop
test
fsubrp
lods
sub
dec
or
test
mov
adc
movsb
test
fwait
cmp
sbb
push
xor
test
jbe
or
test
repz
aam
inc
xchg
test
xor
cmp
test
push
cs
cmpsl
test
dec
mov
psllw
sbb
imul
out
mov
test
enter
and
pop
mov
pop
jmp
inc
sbb
or
jne
xor
inc
dec
stos
test
repnz
jmp
frstor
test
xor
gs
pop
loopne
jp
mov
lods
ljmp
mov
push
sbbl
inc
out
enter
into
mov
mov
mov
or
jno
js
sub
dec
test
leave
arpl
sti
mov
icebp
adc
repnz
pop
stos
mov
cmpsb
es
cs
cmp
cmp
mov
push
test
std
mov
nop
enter
es
test
add
test
ljmp
jmp
and
test
lods
imul
popa
andl
fs
xchg
clc
arpl
mov
out
push
add
mov
test
jle
push
or
les
test
mov
sti
pop
ljmp
ja
cmpb
into
mov
out
jp
aam
int3
cmc
aaa
dec
ljmp
outsb
push
sbb
daa
cwtl
mov
std
in
in
fcompp
ja
sti
insl
mov
ret
mov
movsb
mov
mov
cwtl
out
fisubs
stos
mov
outsl
fdivs
mov
cmpsb
dec
inc
in
test
dec
jo
mov
jp
clc
dec
out
jmp
add
or
test
addr16
out
inc
jbe
xlat
cwtl
std
add
jnp
testl
js
sbb
pop
test
adc
ja
roll
test
inc
mov
test
imul
sahf
rcr
pop
inc
jmp
test
int3
ljmp
test
mov
lahf
fisttpll
test
inc
cld
xchg
or
repnz
add
lds
jnp
repz
fstpt
adc
mov
push
jecxz
lahf
incl
addr16
pop
icebp
xor
test
sub
add
test
sbb
subl
pop
cmp
adc
arpl
mov
mov
pusha
in
jp
pushf
cmp
loop
loopne
push
push
pop
imul
xchg
outsl
fisttps
mov
test
out
mov
test
ljmp
cmp
repnz
test
in
test
shrd
lods
test
mov
out
dec
sbb
sub
push
cmp
test
adc
push
cmp
in
movsb
cs
lods
daa
add
test
jbe
pop
mov
rcl
xchg
mov
cs
mov
xchg
or
inc
imul
and
aad
test
jae
test
pop
repnz
or
or
movsb
sbb
mov
mov
out
outsb
stc
dec
sub
daa
lea
lods
shlb
jmp
je
and
push
aaa
iret
bnd
pop
movsb
mov
bound
pop
jmp
movsb
cmp
xchg
jl
mov
test
inc
mov
or
xchg
test
aam
arpl
shlb
xchg
add
pusha
popl
mov
mov
test
push
add
push
scas
mov
movsb
xor
dec
movb
push
movntps
test
aad
xlat
out
in
sub
xor
loope
dec
ljmp
clc
std
test
mov
in
add
test
jp
fwait
dec
insl
ret
cli
test
pusha
sahf
add
jmp
outsl
pop
test
mov
les
into
out
add
jne
sub
in
mov
lods
xor
jge
add
jne
ss
lret
mov
push
add
add
xchg
xchg
xchg
iret
lds
mov
cltd
or
xor
adc
and
mov
push
loop
andb
mov
sbb
test
dec
mov
outsl
shr
sbb
repnz
test
inc
mov
mov
lcall
gs
in
popa
test
and
out
pusha
mov
push
test
divb
ljmp
mov
insb
test
cmpsl
cli
sub
test
sahf
loop
pusha
mov
fdivrs
jmp
aam
push
movsb
fimull
or
iret
es
lea
add
mov
inc
and
push
jmp
mov
jne
add
gs
cmpsb
mov
xor
mov
xchg
cmc
minps
mov
push
lock
out
jp
or
xchg
jl
out
lea
mov
jmp
mov
mov
out
and
sbb
sti
xchg
scas
inc
jp
cmp
icebp
or
sub
mov
imul
incb
mov
sbb
popa
loop
sub
test
sahf
icebp
lret
shr
out
lock
in
test
mov
jge
imul
pop
mov
sub
adc
mov
dec
sbb
mov
cmpsl
imul
adc
or
test
loop
xor
loope
inc
test
imul
xor
jne
test
ljmp
mov
int
or
cmp
mov
test
or
das
test
sub
mov
mov
int3
push
iret
ljmp
dec
jae
adc
flds
sti
mov
adc
mov
outsl
cmpl
pop
repnz
test
movsl
push
xor
test
xchg
dec
test
pop
dec
scas
shrl
imul
aad
push
push
jns
jecxz
data16
jge
sbb
test
push
push
test
into
les
ljmp
mov
add
cwtl
jp
fdiv
mov
dec
lahf
mov
or
test
aaa
mov
out
push
les
jb
rolb
scas
push
test
jnp
lcall
sbb
dec
test
xor
cmpsb
sahf
test
lret
push
sub
shlb
mov
in
cmc
inc
arpl
lret
jno
mov
call
add
decb
test
out
movsl
fdiv
push
fldl
in
sub
xor
dec
test
mov
shrb
cmpsl
pop
dec
rclb
mov
std
aas
psubb
movsl
cmc
mov
xor
mov
ljmp
jnp
dec
ret
int3
inc
sbb
cmp
test
dec
into
inc
test
xor
xor
ljmp
mov
fbld
out
mov
lret
loope
pop
test
nop
push
pop
mov
repnz
pop
popa
xchg
test
push
pushf
stc
jbe
mov
int3
cwtl
into
xchg
mov
lret
jecxz
cmp
inc
test
mov
mull
and
aad
shll
sbb
std
movsb
ret
mov
push
xchg
mov
test
popa
into
loopne
cs
movsb
and
or
xor
mov
loope
push
movsb
filds
inc
out
test
jmp
sbb
outsb
movsb
pop
inc
adc
subb
movsb
lock
loopne
mov
dec
xchg
and
test
movsl
cmpsl
jmp
testb
push
or
mov
xor
imul
cmpl
mov
out
les
mov
mov
cmpsb
push
loop
cs
and
test
stos
movsb
cltd
aad
fs
aaa
adc
ljmp
jmp
rolb
add
test
adc
in
mov
pop
ljmp
test
sarb
in
cmpsb
in
test
push
inc
xchg
test
lahf
repnz
sti
test
icebp
ljmp
stos
test
mov
roll
js
cmp
mov
movsl
repz
adc
mov
add
mov
jge
mov
ss
mov
and
scas
sbb
mov
mov
movl
mov
and
fs
mov
mov
callw
inc
pusha
insb
push
stos
cmpsb
jo
mov
pop
and
adc
in
cmovp
pop
mov
shr
mov
outsl
jecxz
pop
add
cmpsl
and
test
int
rolb
repnz
in
dec
or
andl
movsl
dec
mov
jmp
scas
jae
mov
in
mov
inc
dec
dec
mov
fsub
mov
in
xchg
insb
and
sub
outsb
test
xlat
ss
ja
mov
jno
cmpsl
cmp
movsb
mov
mov
pop
jae
mov
mov
popf
stos
ljmp
loopne
cli
jmp
pop
movsb
mov
mov
test
or
arpl
adc
fs
jmp
stc
roll
mov
mov
test
mov
leave
test
arpl
ljmp
lahf
mov
out
push
int3
or
mov
xchg
js
ljmp
push
dec
popf
test
imul
pushl
in
fwait
cmp
mov
test
js
add
out
test
loop
mov
lods
repnz
pop
push
and
test
into
pop
call
test
in
or
mov
out
push
mov
ds
push
nop
mov
cli
lods
arpl
clc
es
push
inc
fsub
test
and
fwait
cmpsb
sub
enter
dec
add
mov
hlt
cmpb
lods
test
add
iret
mov
insb
es
xchg
mov
mov
test
cs
push
mov
adcb
fimuls
in
adcb
jno
push
enter
mov
movsb
out
test
popf
mov
jle
dec
ret
sysexit
xor
jae
jecxz
shlb
mov
cmp
imul
mov
in
in
arpl
xor
call
push
test
jns
inc
out
cmc
and
testb
out
mov
les
inc
mov
mov
js
test
lahf
inc
or
jl
test
dec
test
repnz
xor
lea
jmp
and
mov
add
into
xor
test
rorl
push
jg
cld
mov
test
xchg
push
add
shlb
push
inc
mov
loop
test
or
testl
std
jno
add
mov
test
insb
test
and
or
mov
in
cmpl
aaa
lds
dec
sub
test
push
and
fwait
cmp
ja
xor
jns
mov
decl
jmp
into
aam
hlt
fimuls
out
and
sub
sbb
ljmp
inc
shll
mov
enter
out
aad
push
add
pop
and
jp
and
mov
test
mov
popf
arpl
imul
jns
lret
test
lret
test
mov
inc
pop
stos
inc
in
popf
imul
sti
push
or
sbbl
test
inc
dec
cmpsl
aam
int3
testl
cmp
ljmp
jae
mov
cmc
add
xor
push
aam
out
mov
test
and
lahf
mov
sbb
fld
mov
dec
daa
inc
cltd
inc
xchg
test
sti
ret
pop
aad
adc
or
mov
loop
fstps
addr16
jns
adc
mov
in
inc
test
icebp
out
push
push
cltd
add
mov
aam
testl
ret
xor
test
xchg
insl
out
cli
test
ljmp
sub
fsubr
mov
test
adc
push
test
mov
test
ljmp
sbb
aaa
popf
shl
jne
fimull
mov
popa
jo
test
stc
fldcw
testb
ljmp
aaa
daa
inc
and
notb
and
pop
test
pushf
inc
popf
ljmp
mov
xchg
inc
cs
dec
mov
mov
arpl
adc
ret
out
bound
sub
cmp
push
fsubrl
fistpll
jmp
or
xchg
pop
test
and
adc
test
mov
mov
cmpsb
movsb
cli
adc
jg
mov
das
push
sti
popa
test
mov
out
inc
std
pop
mov
cmpsl
ud0
lret
test
xor
push
mov
push
movsb
rorb
insb
inc
movsb
je
push
sub
daa
mov
and
adc
mov
test
in
cmp
sub
cld
aam
arpl
and
test
mov
outsl
jge
aad
test
mov
xor
jo
mov
jl
in
bound
loope
adc
mov
mov
cmpsb
mov
add
ret
mov
les
shlb
mov
mov
movsb
mov
scas
pop
cmpsl
movsl
mov
cmp
sbb
popa
jl
sbb
icebp
test
sub
lret
js
ret
les
mov
and
test
jg
lahf
push
roll
dec
test
scas
ret
jl
imul
add
cmpsl
and
stos
mov
roll
imul
sbb
movsb
je
call
mov
loope
adc
sahf
imull
scas
add
xchg
inc
mov
repz
mov
outsl
pop
rcl
xchg
mov
xlat
cli
cmp
mov
into
test
ss
test
adc
mov
rolb
inc
dec
or
inc
jae
lods
insb
scas
push
in
test
js
xor
xchg
movsl
mov
mov
jle
mov
add
pushf
dec
push
hlt
mov
clc
cmp
pop
push
mov
outsb
pop
jnp
xchg
das
aaa
xchg
popl
push
imul
jno
insb
push
test
movsl
imul
jns
js
aad
add
cmp
fdivrl
movsb
sbb
in
in
je
jns
push
add
mov
movsb
mov
xor
mov
pop
xchg
add
mov
test
add
add
cltd
data16
cmp
jb
roll
cmp
push
adc
inc
mov
inc
cmpsl
add
add
and
mov
int
insb
and
ja
adc
add
pop
mov
pop
push
cld
aaa
out
xchg
arpl
mov
jmp
inc
add
ds
add
in
adc
and
test
sbb
push
mov
in
xchg
rcr
addb
lods
clc
mov
test
fistl
sub
mov
mov
test
int
push
out
dec
xchg
cmp
mov
pop
nop
loop
lods
lfs
out
cmp
rolb
jp
clc
inc
arpl
test
insb
std
in
std
jb
push
rcll
cmp
sub
lcall
fsubs
nop
leave
mov
ljmp
sbb
mov
test
loopne
and
inc
mov
test
xchg
sub
test
mov
out
shrl
jg
dec
xor
push
jge
arpl
and
pop
test
sbb
lret
xlat
mov
inc
pop
test
in
loop
cmovs
push
lidtl
out
push
andl
inc
sbb
inc
add
lret
add
sbb
dec
pop
pop
cmp
jbe
xchg
ret
mov
jl
lds
add
sbb
ja
xor
and
bound
push
cli
cmp
mov
cmpsb
dec
add
mov
adc
test
adc
not
xor
ljmp
loopne
test
sbb
out
xor
add
jp
ret
dec
sub
push
test
in
adc
mov
mov
push
sbb
aad
pop
testb
leave
ficoml
arpl
sub
dec
mov
test
clc
jecxz
incb
je
dec
sbb
fistpll
arpl
mov
frstor
adc
and
aam
sub
inc
dec
mov
jno
nop
mov
xchg
stos
jno
push
testb
inc
out
mov
push
push
mov
push
mov
cmp
xlat
js
inc
repz
arpl
cltd
push
andb
shll
mov
mov
and
jno
movsl
inc
dec
mov
push
mov
test
ja
js
out
std
fcompl
int
mov
xor
stos
push
sub
push
inc
push
mov
leave
sarl
dec
repnz
or
aaa
les
fmull
test
or
sub
jb
test
fwait
mov
test
lcall
mov
inc
es
pushf
xor
dec
in
jno
mov
mov
jno
adc
rcrl
repz
icebp
mov
xchg
xsha1
cmpsb
mov
fldenv
push
clc
xchg
aam
fiadds
loopne
cltd
movsb
dec
sub
lcall
adc
adc
mov
cltd
cmc
pop
test
movaps
dec
xor
fadds
xchg
fiadds
test
aas
push
mov
inc
adc
mov
test
jecxz
jns
std
stos
xor
mov
jmp
inc
cmpsl
mov
shll
mov
daa
ror
orb
and
mov
imul
mov
adc
imulb
bound
inc
ja
outsl
hlt
cmpsl
pop
add
movsb
inc
movsb
stos
push
std
sub
mul
jp
dec
mov
xchg
enter
bound
int
xor
mov
add
std
int3
xchg
xor
push
arpl
movsl
xor
loop
mov
mov
xor
mov
jmp
or
adc
lea
jp
mov
or
mov
jmp
lret
popf
sub
push
xchg
pop
test
arpl
fdivs
je
arpl
xchg
and
popf
mov
pop
imul
inc
scas
mov
andb
xor
and
and
mov
push
outsl
insl
push
inc
cmpsb
int
out
test
jle
jge
mov
inc
test
mov
ss
cmpsb
dec
jno
cmp
dec
pop
sub
adc
in
test
mov
xor
add
mov
outsl
test
orl
pusha
std
xor
push
pop
test
rorl
sbb
and
repnz
adc
jge
cmp
xlat
popa
popa
add
scas
xor
jp
add
fwait
xor
andl
add
or
mov
jp
rcl
imul
andl
mov
or
rcll
or
push
mov
fdivs
cld
add
test
push
das
addl
cmpsl
lea
lock
fsub
or
call
xor
mov
and
or
adc
popf
ret
mov
leave
das
pop
lret
lods
sub
adc
stos
stos
test
mov
gs
into
subb
mov
shll
popa
xor
cwtl
in
dec
cmpsb
mov
lret
sub
mov
in
fisubs
shr
in
cmpsb
andl
test
pop
loop
rolb
arpl
addl
into
test
in
testl
test
sbb
and
cltd
test
ds
cs
adc
add
test
pusha
adc
cltd
lock
fmul
pop
inc
addr16
movsb
xlat
test
and
add
ljmp
sub
mov
jns
insl
xchg
adc
das
jle
nop
aaa
rcr
sbb
stos
sti
mov
jae
les
ret
testl
jge
push
push
test
leave
in
sub
fdivp
in
push
fld
push
shrl
mov
or
sbbb
sub
test
bnd
scas
mov
xchg
int3
and
icebp
xchg
mov
push
mov
fadd
dec
mov
imul
cmp
movsb
cwtl
mov
ret
test
sbb
xchg
cmpsl
or
movsb
fistpl
int3
push
ss
out
mov
xor
popl
jmp
arpl
jae
loop
push
pop
loopne
jmp
aad
inc
mov
imul
test
stos
stos
xchg
lea
add
push
das
xor
push
cmp
dec
setg
mov
xor
and
xor
inc
in
sahf
nop
into
mov
or
lds
leave
inc
or
dec
repz
mov
and
mov
inc
xchg
dec
xor
lds
jno
mov
xchg
rcrl
push
orb
adc
and
aad
nopl
mov
ljmp
ret
sub
mov
sub
mov
push
roll
inc
xchg
jmp
movsl
xchg
les
jnp
cs
cmpsb
stos
les
and
dec
sub
insl
shl
or
outsl
ljmp
mov
and
sub
mov
add
xor
outsl
and
sahf
add
data16
xchg
mov
fdivr
addl
in
jns
leave
add
mov
outsl
jbe
sbb
cli
sub
mov
push
ds
repz
test
xchg
xor
in
mov
push
lds
rcrb
mov
test
adc
scas
mov
test
xlat
cmpsb
pusha
es
sub
mov
addr16
lock
test
lods
bound
push
out
repnz
les
outsl
jb
test
or
mov
pop
push
fmull
pusha
inc
lods
addr16
mov
cs
pop
mov
ljmp
push
mov
fldln2
or
int
add
lea
pusha
cli
push
or
cmpsl
sbb
filds
mov
lods
out
cmpsb
inc
mov
aad
shrb
mov
test
mov
or
lods
jne
test
inc
push
repnz
cli
es
or
pop
jne
call
push
xor
es
dec
lahf
cmpsb
das
or
aaa
ret
xor
mov
jae
dec
adc
xchg
xor
aas
add
out
hlt
pop
mov
xor
mov
jbe
bound
add
rorb
mov
mov
xlat
push
and
sbb
lods
aaa
cwtl
jp
std
push
aad
jnp
adc
lea
push
or
aas
push
pop
out
dec
enter
pop
push
outsl
inc
xlat
inc
outsl
dec
jle
jg
test
inc
and
mov
sub
popf
xlat
or
sti
rclb
mov
aad
mov
add
ror
aam
mov
add
repnz
dec
mov
push
push
pusha
xor
cli
mov
popf
add
idivb
xchg
jae
leave
test
mov
and
inc
push
add
test
fdivrs
arpl
xchg
clc
icebp
test
mov
fcoml
sarb
add
push
inc
and
sbbb
push
cmp
push
jecxz
insb
mov
adc
lock
push
cmpsl
stc
test
inc
mov
sbb
fsubl
ror
test
sub
test
inc
in
out
ret
add
mov
int3
in
mov
and
sbb
ljmp
or
add
movsb
push
sub
in
fadd
and
cmpsb
pop
or
or
mov
cmpsl
stc
test
dec
cli
pop
sub
fwait
test
mov
inc
jae
lods
fs
fcom
sub
mov
data16
ja
int
pusha
js
mov
clc
nop
dec
orb
xor
cmpb
lea
enter
imul
stos
lods
push
test
xor
add
add
xchg
dec
ret
test
pop
cmp
fwait
movl
sbb
les
pop
cli
int
cwtl
mov
stos
sub
test
pusha
dec
pushf
ds
or
lea
xor
mov
pop
mov
fcoml
fs
out
repnz
lock
dec
add
test
adc
aaa
push
jp
push
sbb
test
push
punpcklbw
sub
jbe
ret
cli
pop
ja
adc
es
fs
xor
ja
add
fadd
cmp
xor
sahf
mov
mov
mov
xorb
mov
insl
gs
inc
jle
pop
jae
cmp
xchg
pop
shl
mov
mov
dec
or
test
mov
xor
test
inc
add
adc
adc
mov
roll
in
test
cltd
or
int
and
icebp
test
test
dec
loop
pusha
mov
sbb
repz
pushf
int3
sub
movsb
adc
lahf
xor
add
cmc
xor
fwait
test
in
mov
test
pop
xchg
inc
adc
aad
test
cmc
xor
mov
movsb
mov
test
out
jo
mov
add
lea
test
mov
jnp
cmpb
orb
inc
test
ljmp
mov
enter
push
push
mov
repnz
pop
add
add
inc
mov
iret
call
out
mov
push
cld
ljmp
ss
cmp
outsl
mov
cld
lret
push
aaa
test
jno
sub
or
and
icebp
pop
in
sub
jo
xor
lods
sub
sbb
adc
mov
jecxz
movsl
cmpsl
leave
dec
test
add
jl
int
movsb
or
es
pop
pusha
aam
mov
aaa
and
ss
dec
mov
lea
imul
xchg
bnd
cmp
dec
add
jle
adc
cmpsl
icebp
cmp
mov
lahf
or
mov
nop
fdivs
mov
out
stc
sbb
in
adc
pop
test
mov
fisttps
loope
or
mov
adc
loop
add
mov
movsb
enter
fwait
fs
and
stos
sahf
inc
cmp
iret
vunpckhps
in
push
add
out
lods
insl
xchg
mov
lcall
ror
repnz
inc
mov
mov
dec
xor
loop
out
mov
mov
or
sub
fidivrl
dec
test
fists
movsb
cmpsl
loopne
sub
pop
pop
pop
push
es
push
js
divl
sbb
int3
cmp
bound
sub
faddl
sbb
test
sub
int3
adc
inc
test
jmp
test
adc
or
mov
push
insb
mov
test
sub
cli
movsb
addb
cmc
lock
lret
xchg
enter
jmp
push
push
test
xlat
imul
sbb
push
mov
pop
leave
mov
pop
adc
or
lret
mov
inc
xchg
test
enter
jno
insl
test
inc
pop
orb
xchg
pusha
jae
shl
mov
cmpsb
pmaddwd
mov
lea
out
dec
push
dec
sahf
jae
push
pop
outsl
and
incb
rolb
out
daa
movsb
sbb
pop
imull
push
popf
cmpsb
or
dec
pop
movsb
mov
inc
mov
mov
sub
andl
lahf
and
pushf
jle
test
imul
or
dec
ret
fwait
xor
cmp
popf
or
add
out
lods
dec
test
cld
rorl
mov
insb
loopne
mov
add
pop
dec
jno
mov
pushf
scas
cli
test
sarl
movsb
mov
subl
dec
mov
lea
shll
jb
xchg
or
xchg
and
mov
push
test
imul
dec
addl
aaa
adc
aad
and
mov
mov
out
pop
push
jbe
popa
sbb
sarb
sbb
das
fwait
test
mov
test
arpl
mov
jp
xchg
pop
or
incl
es
adc
adc
push
mov
xor
test
into
and
movsb
jl
cmp
rcl
add
sti
push
and
jnp
les
mov
mov
out
mov
dec
mov
orl
xchg
xor
ds
lods
das
test
or
cmc
jnp
or
adc
add
pop
in
add
out
mov
jb
mov
and
scas
ss
push
outsb
mov
mov
mov
aam
and
out
add
popf
fldt
les
xor
gs
mov
movsb
daa
lea
or
add
test
bound
lods
cmp
mov
xchg
fcomip
mov
mov
push
xchg
adc
mov
and
pusha
mov
je
pop
cmp
mov
test
and
sub
stc
cmpl
test
xor
movsb
fdivrl
sbb
mov
sub
popa
std
ss
in
pop
js
pop
mov
movsl
sbb
cli
pushf
in
add
mov
mov
dec
sub
test
lcall
arpl
sbb
je
pusha
push
sbb
iret
ljmp
pop
jp
in
hlt
jecxz
movsb
scas
pop
mov
enter
aas
iret
subb
aaa
xchg
test
add
movsl
and
pusha
loop
leave
mov
sub
mov
push
mov
mov
inc
daa
sub
scas
lock
lahf
cmp
test
loop
push
jb
mov
mov
and
push
add
test
push
xchg
test
outsl
stos
arpl
cld
adc
dec
shl
movsb
sub
movsl
sbb
and
test
add
mov
mov
sub
repz
filds
mov
popa
add
insb
lods
sbb
xchg
aad
cmp
mov
push
test
adc
add
out
add
adc
xor
aad
testb
sbb
test
jae
sbb
mov
inc
repnz
dec
in
mov
jmp
sub
mov
notb
test
lret
mov
xor
test
add
loope
mov
idivb
test
xlat
clc
es
inc
mov
outsl
cmp
aad
inc
pop
add
jmp
fsubrl
jnp
in
and
pop
xor
rcll
das
jb
mov
inc
and
mov
cmpsl
add
pop
pop
push
sub
inc
mov
scas
cli
jecxz
xchg
jb
inc
repz
adc
dec
lods
test
movsb
imul
pushf
mov
adc
push
in
pop
mov
fimull
mov
loop
and
scas
out
test
test
push
jo
or
outsb
lds
jns
adc
arpl
sbb
out
ret
lret
adc
orb
inc
test
and
pop
or
xchg
xadd
test
or
outsb
pop
or
inc
inc
in
push
lret
scas
or
mov
insb
dec
dec
add
cltd
in
fcompl
inc
and
dec
and
add
pop
shll
jbe
addr16
fcmovne
std
int
arpl
push
inc
cmpsl
mov
xchg
inc
mov
dec
jecxz
and
sub
clc
arpl
mov
push
xchg
pop
test
mov
cmp
int3
mov
test
cli
out
mov
push
or
lods
mov
mov
test
inc
jg
aam
out
into
and
dec
lods
std
add
cmpsb
negl
mov
inc
add
lea
lds
fwait
cld
jb
lds
push
leave
pop
nop
pop
jae
out
in
inc
rolb
xchg
and
imul
mov
int3
xor
scas
pusha
pop
sbb
repz
fists
subb
lds
in
sub
test
pop
test
jae
test
mov
or
sahf
mov
adc
pop
adc
and
fidivrs
add
mov
jg
test
jne
mov
mov
lea
dec
daa
in
mov
jg
enter
popfw
pop
add
or
cmpsl
ja
xor
test
imul
stos
pop
push
mov
sbb
and
nop
lret
push
rclb
lods
xchg
bound
sbbl
mov
fwait
or
or
mov
sub
aaa
jmp
lcall
je
arpl
dec
adc
aam
daa
push
data16
test
js
cli
push
push
and
jp
int
les
shlb
push
bnd
je
subb
push
xchg
jg
add
push
mov
or
mov
inc
int
arpl
mov
nop
repz
cmp
mov
cmpsl
enter
test
xor
or
in
test
xchg
cmp
lahf
test
add
bound
fidivs
addb
popf
aad
dec
push
xor
and
movl
sub
mov
shlb
out
mov
repnz
sub
dec
loop
in
jno
mov
mov
imul
in
mov
mov
data16
add
adc
fmull
mov
mov
inc
push
pop
add
cmp
and
sti
adc
inc
movlps
aas
sbb
jne
sbb
and
mov
enter
pcmpeqb
scas
mov
rcrb
push
cmpsl
jns
bound
xlat
or
push
pop
gs
gs
shlb
add
mov
ljmp
cmp
add
or
add
stos
das
lea
stos
sbb
mov
aam
cltd
js
ljmp
push
popw
adc
std
mov
cmpsl
outsl
out
cmp
adc
sub
xchg
test
cmpsl
clc
repnz
loope
shrl
sbb
cmp
push
vmovddup
jae
mov
outsl
sbb
sbb
jno
xchg
clc
std
cli
xchg
pushf
xchg
iret
fwait
xor
test
outsb
inc
imul
icebp
push
loope
add
test
jg
lods
in
add
aaa
pop
dec
pop
and
movsb
mov
mov
inc
jle
mov
jp
xchg
push
pop
cmpsb
test
push
aaa
mov
dec
into
mov
test
inc
push
and
dec
arpl
push
pop
movsl
mov
pop
cmp
movsb
test
fldt
mov
mov
fdivrl
mov
inc
pushf
dec
mov
mov
les
mov
repnz
in
call
mov
inc
in
popa
cmc
mov
xor
jae
orb
out
inc
mov
inc
push
xorb
movsl
add
or
cli
mov
int3
addl
das
daa
push
movsb
adc
fisubl
mov
or
add
pop
adc
mov
push
mov
inc
jbe
dec
mov
sbb
lcall
test
addr16
adc
fnsave
mov
insb
sbb
test
sub
or
mov
xor
xchg
gs
cmp
out
lods
and
mov
and
mov
lahf
inc
mov
lret
pop
adc
cwtl
fisubl
scas
popf
jno
xchg
rclb
fucom
xchg
push
inc
mov
stos
jne
out
mov
loope
mov
subl
cmp
dec
xlat
pop
mov
jmp
jno
add
mov
cmp
inc
les
movsl
pop
cmpl
and
adc
lods
inc
xlat
loop
push
jl
mov
adc
out
test
call
test
scas
icebp
sbb
adc
leave
arpl
out
inc
sub
pop
xchg
mov
mov
loope
iret
push
mov
and
or
xchg
test
xchg
push
test
adc
test
push
sbb
push
or
jg
push
aam
lahf
imul
mov
or
inc
inc
scas
test
icebp
daa
mov
and
loope
dec
lods
pop
insb
add
mov
cmpsb
aad
jle
sbb
pop
sbb
mov
divl
jmp
mov
dec
fildl
dec
xor
call
shl
clc
add
mov
ret
xchg
out
nop
mov
cwtl
mov
add
arpl
cld
adc
mov
inc
mov
int3
add
test
adc
xor
incl
mov
mov
or
lods
sbb
inc
sub
fistpll
jo
pop
test
orb
inc
daa
dec
ret
hlt
xor
push
push
and
jp
faddl
and
xor
push
lea
xchg
dec
int3
call
xor
sti
test
add
outsb
xchg
add
mov
push
and
mov
dec
or
hlt
add
inc
repnz
push
iret
test
mov
push
mov
fldcw
mov
xchg
repz
add
and
sbb
arpl
ret
fdivp
mov
addl
push
loop
ss
cmpsb
dec
adc
or
cmp
clc
xchg
push
inc
mov
cmc
les
pushf
out
inc
test
sub
push
xor
into
es
movsl
fstpl
les
lds
mov
add
roll
pop
or
orl
mov
inc
pusha
ljmp
pop
jae
dec
fsubrl
pop
imul
scas
scas
cltd
mov
add
sbb
cmp
movsl
mov
push
jl
pop
sbb
push
lret
inc
xor
jge
dec
pushf
jl
push
mov
cmp
roll
xor
lea
or
sub
push
push
or
fwait
arpl
notb
push
push
sub
mov
orl
lahf
scas
leave
outsb
sbb
mov
mov
mov
cld
sbb
mov
dec
xlat
je
call
push
hlt
mov
dec
jnp
jp
fistl
arpl
mov
test
es
sub
in
push
xchg
dec
push
inc
cmpsl
fwait
out
inc
add
fistpll
xor
or
add
std
shrb
add
mov
mov
jp
test
bnd
test
dec
ja
outsb
and
test
arpl
inc
stos
lahf
mov
stos
aaa
scas
mov
test
subb
test
push
stos
xor
movsl
clc
sub
pop
test
inc
mov
pop
je
test
push
add
fildl
xchg
adc
roll
mov
fwait
out
movsb
cmpsb
push
fistpll
jne
sbb
inc
inc
and
and
dec
movsl
sub
push
mov
and
cs
int
gs
sbb
test
shll
mov
mov
into
in
and
aam
pop
fnsave
sarl
std
insl
xlat
gs
dec
test
push
inc
xor
test
lods
xchg
mov
sahf
or
xchg
in
pop
inc
cmp
xor
in
sahf
icebp
and
mov
nop
in
and
mov
sub
in
lods
leave
into
je
test
subl
das
mov
incl
movsl
lea
jge
mov
pop
cmp
int
jg
dec
test
xlat
xor
dec
stc
mov
cmpsl
ljmp
testl
imul
lods
adc
ficoml
jb
lcall
lcall
or
in
xor
xchg
xchg
mov
add
in
test
filds
mov
shrb
arpl
enter
mov
bound
in
adc
rolb
xchg
aas
xchg
movsb
jle
scas
loop
mov
cmp
mov
dec
push
mov
mov
lsl
scas
mov
mov
aaa
mov
cmp
leave
adc
dec
mov
and
roll
fcomi
leave
sahf
arpl
ja
gs
sti
mov
push
fs
repnz
jge
cmpsl
pop
in
sub
int3
jbe
mov
movsb
inc
scas
jnp
in
pushf
mov
push
ja
test
mov
xchg
mov
test
dec
mov
cmp
test
mov
pop
adc
or
push
test
xchg
lds
test
gs
adc
mov
add
add
pop
and
repz
aam
iret
mov
dec
pop
loop
or
mov
add
mov
pushf
lods
fistl
push
scas
sbb
mov
push
stos
dec
rcrb
xchg
adc
add
mov
in
test
pushl
jmp
daa
cwtl
test
push
xor
jne
lret
mov
push
les
outsb
lds
mov
xchg
popf
cmc
test
push
sahf
data16
push
movsb
push
and
mov
or
mov
mov
mov
andb
pop
decb
adc
sbb
adc
test
dec
je
popl
shl
movsb
mov
xchg
adc
out
jmp
loop
in
push
mov
and
cmpl
jno
mov
mov
outsb
xor
mov
movsl
sbb
pop
test
shll
or
lret
xchg
out
add
pop
sub
pop
mov
test
push
mov
pop
cwtl
fcomps
jae
jbe
inc
mov
xor
test
mov
lret
sub
cmp
xchg
push
clc
in
jle
sbb
shlb
into
jmp
test
adc
ret
popf
sub
sbb
call
ficoms
adcl
imul
or
xchg
push
int3
scas
test
sbb
add
aaa
jmp
test
pusha
fxtract
or
cmp
bound
xor
aam
aas
sub
test
arpl
testl
test
ffree
in
loop
mov
inc
test
sub
pop
test
xchg
jnp
adc
pushf
jbe
dec
mov
mov
add
test
inc
mov
sti
in
push
pop
pop
dec
out
gs
xor
imul
testb
inc
pushl
mov
dec
cmp
mov
mov
mov
mov
in
test
xorl
dec
bnd
mov
fwait
mov
divb
sbb
cli
jecxz
lret
test
pop
daa
test
jno
imul
ret
mov
jmp
inc
jns
ja
test
popa
ljmp
mov
mov
clc
in
loop
in
xchg
adc
and
test
lcall
lret
jns
test
cmp
imul
pop
mov
pop
repz
xchg
test
add
fnstcw
jb
and
pop
sbb
popf
pop
pushf
movsb
outsl
xor
mov
and
cwtl
fisubrl
pusha
cmpsl
mov
mov
hlt
sbb
xor
filds
cmp
pop
nop
mov
cmp
test
jno
add
xor
xchg
lahf
and
test
or
push
std
clc
arpl
inc
fs
sbb
popf
mov
int
cld
fwait
sub
lret
pop
pop
int3
and
andl
add
fs
stc
mov
xchg
pop
aam
gs
cmc
test
xlat
ja
out
notl
or
push
jne
dec
outsl
mov
in
ja
jae
or
push
movl
stc
cld
movsb
sub
xchg
push
pop
pop
add
mov
shrb
sbb
add
inc
xor
movb
pop
scas
dec
aam
addb
push
loop
xorb
and
and
inc
ret
data16
aam
lea
ret
aas
data16
and
aas
addl
xor
insl
adc
into
xor
adc
lcall
cmp
xchg
mov
add
cmpsl
scas
test
das
cmpsb
mov
xor
std
jno
inc
sahf
mov
push
lds
aaa
mov
aaa
loope
add
mov
jae
adc
mov
xor
or
lods
fucomip
fsubl
test
mov
inc
jae
dec
mov
adc
pusha
aad
fisttps
mov
incb
lcall
cwtl
adc
int
popa
daa
lock
pop
mov
push
dec
adc
sub
push
pop
out
add
pop
mov
or
pusha
int
movsb
xchg
dec
outsl
mov
mov
push
mov
and
xchg
enter
xchg
push
pop
cmpsb
sahf
cld
add
jle
test
sarl
mov
push
sbb
testl
movsl
cli
sub
shlb
sbb
test
in
js
lods
rcrl
inc
mov
jno
sbbb
xor
movsb
cmpsl
sub
mov
ret
test
add
insb
test
jmp
cmp
loopne
mov
mov
inc
ret
adc
hlt
leave
bound
xor
dec
leave
cli
adc
icebp
je
mov
push
testl
mov
leave
dec
adc
arpl
addr16
push
movsb
mov
pop
pushf
or
cmpsl
gs
mov
stos
shl
mov
sti
cs
dec
jmp
xlat
xor
lock
daa
jbe
je
xchg
and
les
test
mov
or
mov
jae
cmpsl
in
mov
inc
mov
pop
loopne
mov
int3
movsb
xor
jmp
mov
repnz
test
push
movsl
xchg
ret
out
rclb
push
mov
dec
push
sbb
or
cld
push
mov
mov
mov
in
and
cmpsb
jns
cwtl
rolb
fldlg2
stc
push
cmp
pop
fldcw
cmpsl
cmp
adc
in
test
cmc
fisttpll
or
lds
xor
sub
cwtl
testb
and
add
gs
adc
dec
mov
xchg
push
push
int
mov
or
mov
test
mov
popf
push
bound
into
xchg
jbe
or
inc
and
push
test
cmpl
push
xor
sub
pop
dec
jmp
aam
sahf
in
add
jmp
push
jge
test
dec
notl
jecxz
popf
xchg
cmp
mov
or
inc
xchg
jmp
fs
mov
mov
xchg
inc
mov
mov
mov
pop
outsl
cmp
mov
cmpsl
jmp
shr
daa
aad
gs
add
fs
or
test
sub
sub
sti
mov
lods
in
xchg
dec
test
cmp
push
arpl
test
stc
adc
and
inc
sbb
inc
movsl
mov
fstp
pusha
xadd
test
scas
dec
mov
lds
sub
popa
push
mov
outsl
mov
out
xlat
aad
out
add
insl
rcrl
add
and
lahf
out
pop
push
das
roll
mov
scas
add
packsswb
xchg
mov
push
movsb
cs
scas
adc
mov
test
inc
xor
mov
mov
shrl
sub
cmpsl
add
out
imul
mov
push
mov
or
out
mov
pop
xchg
outsl
mov
sbb
pop
stos
xchg
test
imul
inc
mov
gs
cmpsl
sub
sti
xchg
mov
repz
xchg
stos
mov
aad
sub
rcrl
insb
cmpsl
jl
and
subl
mov
movsb
fcmovb
shrl
cmpsb
cli
pop
bound
mov
mov
ret
push
jecxz
xchg
and
sbb
mov
test
lahf
fnstsw
mov
or
jbe
xchg
dec
int
repz
addb
movntq
out
jae
popa
out
sbb
xor
test
daa
bound
rorl
pop
add
lcall
cmp
dec
int3
mov
outsl
vpsllw
int3
jnp
mov
jecxz
lods
sub
xchg
aad
add
cmp
fdivp
arpl
xor
test
mov
pop
popf
pop
arpl
jge
xchg
loop
push
movsl
cltd
jae
and
fbld
mov
arpl
cs
sub
test
or
loopne
push
jne
and
outsb
mov
mov
inc
imul
dec
lret
dec
icebp
mov
pop
jo
loope
test
mov
mov
and
daa
test
roll
pop
stos
int
jmp
aam
mov
data16
popa
xchg
stos
jb
lret
test
scas
xor
push
iret
or
pop
pusha
sbb
inc
inc
leave
mov
daa
inc
jnp
or
add
imul
addr16
sahf
mov
pop
jns
test
xchg
stos
jge
mov
cld
out
andb
mov
xchg
test
dec
fisubrs
clc
imul
repz
jo
pop
xor
enter
mov
hlt
push
mov
lods
push
adc
mov
cmp
jge
sub
mov
mov
or
mov
adc
mov
xor
loope
pop
mov
fdecstp
dec
shr
addl
push
es
add
push
jne
mov
test
xchg
mov
adc
arpl
mov
jne
mov
repz
sahf
pop
adc
nop
adc
arpl
daa
and
push
cmc
mov
in
test
sbb
test
mov
andb
and
add
pop
test
aas
lods
arpl
movsb
adc
xchg
xchg
loop
mov
sbb
imul
test
mov
lahf
in
inc
mov
bound
std
lods
ucomiss
inc
mov
jmp
ja
mov
test
push
test
cmc
fildl
cld
inc
mov
inc
sbb
adc
insl
clc
mov
dec
js
ljmp
sahf
enter
push
inc
and
inc
and
jl
adcb
jg
test
push
nop
and
fwait
cltd
lcall
pushf
ds
adc
mov
outsl
cmp
rcrb
movsb
ds
mov
cwtl
sahf
pop
sub
movsb
push
adc
mov
add
adc
push
test
mov
roll
inc
int3
cld
test
inc
lods
gs
sub
mov
in
and
push
test
mov
add
int
mov
jp
cmpsb
iret
lcall
mov
inc
fmull
adc
idivl
sarb
push
push
sahf
adc
or
test
dec
rorl
push
jae
test
or
test
and
sbb
adcb
into
push
inc
dec
adc
test
jge
arpl
mov
cld
dec
adc
mov
and
xor
fidivs
loop
lods
test
mov
inc
dec
push
adc
pop
inc
dec
sbb
jmp
lds
test
push
jns
cmpsl
filds
cmp
hlt
ja
inc
adc
cmp
push
inc
aam
add
arpl
in
es
mov
push
and
dec
loope
std
jg
stos
loopne
or
les
test
dec
mov
mov
inc
insl
adcb
lcall
repnz
call
sub
out
movsl
jmp
iret
lea
ds
dec
les
cli
lock
adc
adc
test
test
xchg
jne
imul
cmp
mov
int3
out
push
mov
and
aam
mov
mov
jae
sbb
arpl
adc
stos
in
or
cli
push
xor
ss
out
pop
push
test
repnz
mov
mov
repz
test
fists
jb
add
in
sbb
sub
mov
mov
cmpsl
push
sahf
cmp
xor
aaa
xor
push
push
cmpsw
mov
sbb
lcall
pop
cwtl
pop
dec
mov
cwtl
cmc
xchg
std
fdivrl
xchg
xchg
add
movsl
xchg
cmc
addl
xchg
call
xchg
jmp
aas
xchg
push
add
dec
add
mov
subb
xchg
pop
addb
insb
iret
nop
jp
fucomi
fsubs
and
add
cmp
cmpsl
dec
movsl
mov
pushf
mull
sbb
mov
inc
loope
fldcw
inc
cmp
addr16
loopne
push
nop
aam
or
push
adc
out
shrl
test
or
mov
adc
push
mov
or
add
in
divb
cmc
rcrl
xchg
xlat
cli
andb
push
or
sub
jle
aad
outsb
fwait
dec
dec
dec
scas
rcrl
int3
lahf
adc
push
add
stos
repz
jno
push
xchg
cmp
sbb
sarb
ds
scas
test
stos
mov
arpl
popa
mul
mov
mov
psrlw
push
push
inc
ret
mov
or
test
clc
or
fdivs
pop
inc
mov
mov
mov
test
rol
mov
daa
inc
test
xorb
out
test
ret
test
dec
mov
mov
pop
sub
jle
cs
sarb
cld
inc
orb
ds
inc
popa
int3
push
mov
mov
xchg
cmp
lods
inc
mov
xor
ja
das
xor
pop
movsl
adc
xor
dec
pop
jbe
mull
pop
test
xorb
dec
add
fdivr
mov
push
jmp
cmpsl
test
adc
adcb
fistpll
pop
sub
lods
add
pop
outsl
mov
pop
push
pop
out
leave
test
addb
test
mov
test
lret
out
jns
inc
ficompl
xor
dec
fwait
inc
mov
sub
enter
pop
mov
mov
divl
inc
or
pusha
push
dec
pop
jns
mov
dec
push
jl
add
bound
ds
add
add
movsb
mov
shll
sbb
jle
adc
fs
add
mov
xchg
or
movsb
sahf
jne
xor
jno
ficompl
out
xchg
and
pop
int3
bound
jp
outsb
add
mov
cld
adc
iret
jbe
add
or
mov
or
mov
flds
loope
cmpsl
call
pop
pop
push
dec
decb
bound
or
mov
lds
jb
fistl
ljmp
jle
sbb
fwait
out
cmc
adc
test
push
xchg
pop
in
or
cmp
adc
lock
cs
inc
movsb
push
mov
loope
mov
call
rolb
je
daa
test
adc
mov
lret
sbb
psubusb
pop
dec
cmp
arpl
mov
add
stc
push
and
je
add
imul
popa
andl
or
mov
lea
loop
jmp
in
inc
pop
cmp
add
das
mov
mov
push
lock
mov
test
sbb
ja
xchg
cmpsl
xlat
sbb
lods
sbb
cmp
xchg
jmp
cmp
repnz
imul
push
dec
sbb
das
and
mov
cs
xor
repnz
cld
mov
adcb
fbld
andb
cmpsl
mov
xor
out
es
mov
notb
add
push
shrl
adc
lahf
pop
mov
fs
outsb
movsl
cmc
test
out
aas
pop
daa
test
mov
jecxz
push
test
ds
adc
je
cmp
in
ficoms
inc
test
push
sub
test
push
inc
add
cltd
push
lock
or
popf
jecxz
test
repz
jg
xor
push
into
or
add
lret
mov
in
or
jmp
pop
in
cwtl
jb
test
pushf
pop
sbb
or
dec
cltd
xchg
icebp
adc
in
and
sbb
push
stos
push
roll
adc
test
or
out
jle
outsl
je
in
in
mov
dec
jecxz
scas
arpl
push
xor
test
mov
or
pop
nop
add
das
xor
mov
adc
xchg
adc
cmp
dec
jbe
fimull
andb
push
lcall
scas
cmpb
mov
sub
push
sub
or
call
xor
add
and
movsb
sbb
mov
not
fwait
xchg
mov
popf
xchg
es
adc
cltd
jae
mov
and
int
cmpsb
jbe
popf
das
push
out
notl
cmp
test
hlt
rorl
add
les
imul
mov
or
xchg
jbe
xchg
sahf
xchg
dec
in
mov
xor
mov
sub
in
mov
test
jb
je
test
ret
out
mov
jmp
mov
or
js
lea
test
and
xor
sbb
leave
cld
fadds
mov
add
jnp
test
mov
das
push
int3
int3
scas
stc
adc
add
xor
add
mov
mov
or
faddl
lock
pop
xor
ds
pop
add
arpl
shll
push
mov
push
lahf
pusha
aas
push
inc
imul
or
dec
cmp
inc
mov
mov
mov
ljmp
cmp
es
movsb
mov
and
adc
lds
sub
lods
jne
test
mov
les
mov
xchg
roll
filds
dec
or
test
and
xchg
mov
es
cmc
add
push
pop
popf
psubsw
call
cmpsb
mov
movsb
nop
inc
jae
mov
sbb
sarb
insb
dec
sbb
adc
test
xchg
lcall
out
jp
test
pop
dec
mulb
clc
aas
cltd
icebp
stos
cmpsb
xchg
in
pop
jg
xor
daa
test
pop
loop
push
rcrb
xchg
packsswb
mov
add
into
sub
cmovs
mov
add
pop
loopne
ljmp
push
mov
dec
clc
popa
mov
inc
lret
test
inc
dec
xchg
xor
aas
test
pop
in
outsl
jb
jno
or
xchg
lea
icebp
pop
rol
mov
jmp
mov
movsl
and
pop
lcall
mov
insl
mov
sbb
test
jo
pop
loopne
and
sub
dec
fs
pop
inc
loop
ss
shrl
in
popf
pop
loopne
push
std
or
sub
adc
adc
test
dec
inc
jnp
xchg
pop
mov
inc
insl
lods
and
ds
scas
jg
push
mov
adc
pop
scas
test
xchg
out
popa
and
fcoms
push
imull
ret
push
test
daa
shl
out
and
test
mov
and
mov
outsl
mov
test
xchg
cwtl
mov
adc
push
push
push
repnz
dec
loop
pop
repnz
call
daa
fimuls
fimull
jbe
mov
in
icebp
adc
adc
xor
orb
ja
pop
mov
aad
cmp
pusha
cmpsb
adc
mov
cld
stos
into
fidivrl
add
xlat
icebp
stos
cmp
paddusb
or
out
inc
je
fs
push
mov
inc
mov
xchg
enter
ret
xlat
mov
or
daa
mov
pop
ljmp
sub
and
jbe
mov
inc
movhlps
cmpl
insb
xorb
or
psrad
pop
outsl
sub
jo
and
sar
aad
or
and
test
xchg
add
mov
fimull
cmp
xor
int3
xor
outsb
ss
in
jmp
loopne
loop
sarl
repnz
jns
jne
or
adc
push
test
cmpsb
cmp
inc
movsl
mov
mov
xor
mov
mov
push
mov
loop
jns
cmpsb
fiaddl
aaa
push
pushf
orl
les
jns
dec
nop
fnsave
dec
mov
fsubrl
cmp
test
inc
loope
adc
mov
dec
add
ljmp
xchg
int
or
test
mov
sub
jp
jbe
xchg
xor
and
xor
and
and
ret
dec
sti
mov
add
mov
in
jp
cli
pop
mov
adc
inc
xchg
test
mov
push
imul
cmp
and
in
push
mov
xchg
pop
inc
lea
test
add
test
lret
ror
cwtl
in
test
xchg
mov
jae
rclb
and
test
mov
fsubs
aad
dec
and
xor
push
pop
scas
addr16
inc
andb
stos
std
clc
mov
mov
push
pop
sbb
aaa
fs
gs
out
outsl
movsl
lds
cmpl
cmpsl
pop
pop
mov
mov
lea
or
shr
mov
rcrl
mov
call
test
cmpsl
data16
hlt
movsl
scas
fcmovne
sub
ss
andb
int3
and
int
xchg
je
ss
jne
mov
push
ja
enter
jp
pop
jecxz
roll
js
test
or
andl
rorl
nop
mov
movsb
das
divb
testl
dec
jns
or
xor
pushf
data16
adc
mov
or
test
bound
in
add
ljmp
jp
xlat
xchg
mov
pop
mov
fsub
mov
mov
jecxz
xor
or
scas
dec
inc
sbb
lds
jge
jmp
pusha
jbe
cmpsl
sub
es
xchg
cmp
sub
cmc
in
push
pop
sub
arpl
cmpsb
aam
repz
outsl
jb
addr16
shl
hlt
arpl
rcrl
push
lcall
inc
test
xor
jmp
xor
xorb
test
pop
orb
push
out
clc
mov
xlat
test
sub
inc
cltd
sarb
mov
adc
mov
test
jo
mov
fistpl
dec
cld
movsb
push
inc
lods
cmpb
dec
test
xchg
shlb
pop
inc
jmp
mov
aas
mov
sbb
cmp
int
or
mov
mov
bound
xor
orb
adc
insb
push
xor
lods
test
add
data16
sbb
movsb
scas
stos
inc
xor
sbb
and
lahf
mov
jno
jp
cwtl
pop
xchg
inc
or
inc
push
adc
outsl
leave
call
popa
cmc
mov
mov
jl
gs
adc
add
les
and
dec
fcomi
mov
add
mov
pushf
sub
jns
es
lods
aad
out
test
jbe
or
mov
movsl
bound
sub
jmp
sbb
or
subb
mov
mov
sbb
test
je
clc
xor
loope
cld
cmp
mov
aad
add
outsb
jmp
push
push
fs
pop
les
add
subb
sbb
pop
jg
fcompl
mov
movsl
movsl
inc
and
arpl
lods
sub
dec
dec
jmp
push
jg,pn
sub
std
ds
push
insb
adc
shlb
mov
mov
test
sub
push
adc
mov
adc
mov
bound
xchg
or
add
sbb
mov
jg
dec
test
adc
in
push
and
mov
and
bound
loop
mov
imul
mov
inc
cltd
adc
lds
movsl
cmp
dec
icebp
mov
outsb
lods
inc
jp
filds
movsb
and
cmc
scas
pop
jl
punpcklbw
test
ja
shll
repz
inc
stos
mov
sbb
xchg
and
imul
jns
popf
adc
push
sbb
fisttpl
test
bnd
cmp
mov
fstpt
push
outsb
aaa
fidivl
test
rol
pop
popa
je
test
and
push
xlat
inc
aam
dec
movsb
lret
insb
pmulhuw
sub
arpl
adc
mov
inc
test
jp
in
outsb
inc
or
es
sub
mov
adc
inc
into
add
cmp
clc
std
imul
sbb
dec
imul
jmp
pop
scas
notb
arpl
sub
pop
and
and
adc
js
sub
jns
out
mov
jecxz
add
ret
jne
stc
aaa
or
pop
pop
iret
test
inc
adc
add
push
jnp
cmpsb
sub
jp
arpl
leave
adc
cmp
dec
mov
mov
out
shl
mov
movsb
mov
jp
cmp
mov
imul
test
jns
aad
mov
test
loope
rcll
mov
and
scas
cli
call
push
or
jp
jmp
repz
loop
ficomps
mov
sub
cmp
dec
in
outsl
test
push
xchg
mov
pushf
lret
add
repz
mov
es
ljmp
mov
inc
pop
out
mov
mov
rcr
xchg
and
daa
out
cmpsl
jno
or
push
pushf
dec
mov
test
fidivrs
add
imul
call
dec
jns
repz
mov
out
xor
enter
and
cld
movsb
jl
int
pop
cmp
cmpsl
adc
mov
mov
add
or
dec
aam
adc
pushf
mov
and
inc
mov
nop
imul
test
add
mov
xor
loopne
mov
lods
xchg
inc
cltd
fnsave
pop
outsb
adc
jge
movsb
lock
inc
leave
in
ds
inc
xorb
xlat
mov
and
in
movsb
lcall
push
cmpsb
test
daa
add
in
and
push
into
xchg
cmp
inc
call
mov
push
arpl
or
mov
inc
inc
insl
shll
dec
or
repz
sub
lcall
in
clc
adc
cmp
pop
jmp
xchg
mov
mov
dec
jns
in
xor
outsl
mov
mov
mov
inc
xor
test
sti
adc
andb
out
fadds
movsb
mov
dec
lret
shlb
addr16
sbb
fdivrs
in
push
xor
insl
and
sub
adc
mov
jecxz
push
icebp
roll
les
nop
push
inc
call
shlb
mov
push
fs
inc
movb
dec
mov
into
test
sarb
les
push
mov
test
xor
adc
pop
jns
jmp
les
ljmp
mov
mov
test
shll
jmp
andb
push
add
and
std
lds
xchg
xor
add
insb
iret
loop
dec
dec
sub
cmp
mov
mov
cwtl
mov
cmp
inc
outsl
xchg
scas
test
jb
sub
xlat
and
dec
cs
insl
fldenv
mov
test
sbb
les
adc
ds
test
js
or
sbb
movsl
in
imul
add
or
adc
jbe
mov
arpl
sub
fcmovnbe
cmp
add
adc
jmp
ss
mov
add
out
jecxz
aad
sbb
stc
fucomi
pop
mov
sub
cmc
sbb
leave
pop
insb
mov
sahf
cmp
xlat
and
mov
and
push
mov
pop
or
inc
xor
sbb
mov
mov
test
in
jp
adc
jecxz
jnp
movsb
test
jne
mov
push
mov
loope
adc
test
ficoms
test
add
sub
pusha
ljmp
out
push
jecxz
bound
test
int
and
insl
fsubr
test
mov
es
frstor
lods
iret
rorl
ljmp
sub
fcmovnb
test
enter
sub
dec
jecxz
repnz
bound
xor
sbb
je
fstpt
mov
inc
ficoml
lea
jo
mov
xlat
test
rcrb
jecxz
dec
xor
mov
pop
stos
call
test
xor
test
popf
mov
sub
test
int3
dec
jns
jge
nop
mov
push
cmc
ret
lock
mov
push
inc
mov
test
js
inc
movsb
out
in
xor
into
push
jp
inc
imulb
aam
incl
cmp
sti
pop
xor
mov
lahf
loop
ljmp
mov
shrl
iret
lds
mov
adc
jmp
mov
xor
rcll
mov
orb
push
xor
js
bound
xchg
bound
insb
push
mov
rcll
rorl
fs
dec
dec
jg
mov
scas
inc
cmpsl
xchg
mov
subl
fst
bound
std
mov
test
dec
movsb
mov
add
xlat
int3
inc
in
mov
xlat
aaa
xchg
int3
ret
mov
ja
jae
pop
loop
pop
push
add
xchg
xchg
in
or
dec
aad
push
test
add
xchg
adc
jl
loop
mov
out
test
andb
and
test
xlat
test
sub
push
test
adc
inc
les
add
shlb
mov
cli
cmp
mov
mov
fisubl
mov
std
movl
scas
dec
mov
test
test
add
cmp
jg
sub
adc
in
sahf
aas
jle
mov
mov
inc
adc
test
out
mov
mov
mov
dec
and
or
pop
test
mov
sub
jnp
inc
test
push
movsl
xlat
xorl
ja
or
jp
arpl
iret
stc
xchg
mov
fs
or
fcmovu
push
xchg
or
mov
cmc
mov
orb
sahf
pusha
dec
mov
pop
push
lds
jge
outsb
aaa
ss
in
adc
mov
and
rcrb
mov
xor
dec
mov
ljmp
ror
repnz
and
mov
scas
xchg
in
aad
imul
mov
lret
lods
xchg
mov
inc
pop
push
nop
mov
inc
pop
fs
jg
out
dec
loope
mov
shlb
in
out
xchg
in
test
fisubs
mov
jmp
movsb
pop
arpl
lret
mov
ror
jmp
inc
dec
dec
test
js
inc
add
fldcw
mov
movsl
mov
in
arpl
and
sti
sbb
add
std
test
add
test
pop
mov
pop
enter
mov
pusha
shrl
cmpsb
mov
mov
and
jle
mov
scas
mov
jge
cmp
imul
test
pop
mov
imul
adc
dec
adc
xchg
arpl
sti
pop
mov
xor
lds
or
jno
xchg
test
jl
fsub
add
inc
test
ficomps
dec
adc
and
into
xor
aad
dec
pop
clc
in
jno
add
lods
or
jns
push
cmp
add
out
xchg
subb
lds
aad
movsb
inc
es
adc
and
dec
pop
mov
rclb
mov
sbb
inc
push
mov
test
jno
lret
mov
test
pop
sarl
pop
cmp
dec
pushf
or
test
outsb
insl
mov
mov
idivb
pop
out
adc
in
enter
rclb
mov
cmpsl
stc
inc
add
push
lret
mov
mov
test
fildll
testb
test
mov
push
mov
and
sbb
sahf
mov
xchg
adc
stc
or
xchg
test
jnp
push
repz
icebp
mulb
and
loop
in
xchg
and
test
xchg
or
test
xchg
push
adc
and
das
bound
imul
aas
inc
sub
add
adc
cmp
adc
mov
jmp
ds
or
mov
test
pushf
sahf
sub
movsb
loope
lea
push
push
mov
outsl
dec
dec
jne
add
imul
test
les
mov
into
fcoml
sbb
dec
popa
mov
clc
mov
push
ds
stc
icebp
shl
lret
dec
push
or
or
test
cmp
mov
inc
test
xor
pop
or
mov
test
adc
add
hlt
cmp
cli
sahf
push
insb
js
mov
dec
pop
dec
pop
int
jne
xchg
mov
popa
hlt
and
loop
add
or
xor
and
andl
pop
sbb
sub
sysret
mov
test
push
in
cs
mov
setle
or
test
loope
mov
test
push
ds
pop
scas
add
cld
fisttpll
test
mov
cltd
lods
fld
mov
out
cmpsl
jbe
hlt
mov
xor
pop
mov
cmp
outsb
mov
mov
jecxz
test
sub
fwait
out
cmc
sbb
in
sbb
aas
mov
pusha
mov
or
inc
lea
les
fwait
lret
test
shl
clc
jecxz
js
jns
daa
mov
les
ljmp
out
dec
test
jle
adc
fs
arpl
scas
add
loopne
inc
out
mov
fxtract
fcompl
mov
sbb
xchg
cld
adc
pop
cmp
xchg
call
mov
arpl
xor
mov
in
test
add
test
lahf
add
les
lods
mov
xor
scas
inc
cltd
mov
lea
inc
cmp
test
in
scas
ss
add
sub
fiaddl
into
cmp
mov
inc
rcrl
into
loope
mov
xchg
or
xchg
xchg
loop
or
jl
push
or
cmp
or
std
mov
mov
cmp
or
or
mov
ja
mov
cmp
dec
notb
mov
dec
or
in
push
in
sbb
adc
mov
push
xchg
adc
sub
mov
shlb
cmp
cmp
cmpsb
scas
mov
inc
mov
xchg
sbb
sub
mov
xchg
pop
les
dec
lock
lret
loop
flds
loope
add
fwait
loope
mov
pushf
mov
mov
inc
add
nop
sub
mov
mov
or
aam
jecxz
inc
lret
lock
mov
lcall
mov
mov
mov
mov
mov
dec
xchg
loop
out
or
filds
mov
jne
or
in
jp
ret
movsb
cmp
and
add
repz
add
jno
add
sub
add
cmpsl
xor
push
les
xor
into
imul
sti
call
push
cmpsb
adc
inc
stos
ret
add
mov
fidivrl
jecxz
in
and
add
cmp
pop
push
cmp
cli
mov
and
mov
aad
add
movsl
mov
inc
mov
mov
iret
lret
sbb
rclb
xor
mov
orl
cmp
test
sub
loopne
sbb
aad
sub
ret
das
dec
inc
adc
mov
inc
xor
xlat
push
test
xor
mov
rorl
cli
mov
les
int
mov
pushf
and
lods
roll
add
push
imull
inc
cmp
ljmp
inc
add
push
sub
ret
mov
sub
mov
shll
outsl
mov
int3
add
or
hlt
lea
pop
xchg
call
inc
adc
cmp
xchg
pop
mov
mov
mov
insl
xchg
inc
push
mov
loopne
out
pop
test
dec
idivl
xor
ss
jne
stos
add
xor
adc
fistps
push
mov
or
mov
addr16
nop
addl
lea
gs
sbb
sub
in
inc
movsl
or
ds
in
mov
xchg
les
ds
ja
or
repnz
mov
rolb
jns
mov
mov
or
in
mov
mov
insb
mov
lret
add
xchg
inc
push
xchg
mov
fldcw
inc
cmp
add
dec
mov
icebp
lret
arpl
lds
in
roll
add
mov
js
ret
or
fsub
ret
daa
movntq
pop
xchg
add
out
popa
outsl
arpl
cmp
mov
in
xor
cmp
or
jo
lods
jmp
dec
inc
mov
pop
lea
add
movsb
adc
inc
mov
roll
rcr
repz
aas
sub
mov
jb
or
cmpsl
pop
jmp
fldenv
lock
cmpsb
rol
stos
outsl
pusha
mov
xor
mov
lds
push
mov
dec
popf
cld
mov
fnsetpm(287
scas
loope
mov
lock
adc
int3
aam
fwait
test
repz
and
mov
add
inc
gs
push
out
mov
test
mov
bound
add
push
jae
std
outsb
inc
cld
dec
mov
lods
mov
repnz
insb
mov
cwtl
push
mov
mov
dec
andb
std
sub
push
ds
cmp
sarl
insl
ja
mov
add
mov
cmp
jne
xorl
mov
xor
loopne
mov
out
mov
sub
mov
add
imul
mov
repnz
aas
mov
cmpsl
jns
add
iret
cmp
push
rcl
cmpsl
stos
shlb
cmp
xorl
insl
dec
inc
pusha
sar
insl
xor
xor
in
adc
sub
mov
xor
mov
addb
repz
mov
jns
or
sub
push
test
pusha
shll
push
mov
icebp
or
mov
frstor
dec
mov
sub
stos
bound
pop
mov
xchg
add
cmpb
shrb
mov
mov
inc
inc
jle
pop
insl
in
fisttpl
andb
pop
cmpsl
xchg
mov
mov
popf
mov
or
pushf
add
shrl
mov
aam
or
push
bound
mov
mov
or
jbe
pop
je
mov
pop
sti
mov
adcb
dec
inc
mov
cmp
and
dec
pusha
shl
in
xor
xor
imul
jnp
icebp
nop
mov
out
mov
in
fmul
mov
mov
imul
insb
add
add
mov
aaa
dec
inc
and
in
inc
or
cmpsl
je
fsts
out
cmp
mov
das
mov
sbbl
jp
jae
mov
mov
mov
mov
outsl
cmpsl
flds
dec
ja
sub
adc
mov
mov
sub
cmp
fnstsw
mov
aaa
mov
popa
pop
mov
mov
fisttpl
ret
dec
rorb
pop
push
jno
loop
add
sub
pop
test
inc
xchg
or
imul
fcompl
mov
push
pushf
mov
adcl
rcrb
and
mov
jno
in
lret
xchg
scas
jecxz
sbb
outsb
mov
add
sbb
call
fimuls
stos
mov
test
subl
mov
sub
and
cmpsb
int3
mov
daa
xor
inc
sbb
fisttpl
push
loope
lcall
mov
sub
push
cli
mov
mov
scas
ja
jp
sbb
mov
dec
push
inc
adc
dec
inc
dec
aad
addl
add
movsl
mov
dec
mov
stc
arpl
sub
cmpsb
bound
jb
fsubs
push
arpl
les
scas
pop
or
cmc
push
mov
popf
shl
jnp
das
popf
ret
push
sbb
mov
push
pop
push
mov
aam
jp
arpl
mov
sti
addl
lods
xchg
mov
mov
scas
cld
sub
adcl
in
cli
sbb
cld
xchg
das
outsl
insb
hlt
insb
test
add
sub
in
lock
mov
arpl
xor
jb
lea
fs
inc
ret
mov
push
pop
pop
or
mov
repnz
out
cmp
mov
std
lret
das
rolb
mov
sub
mov
lahf
cmp
cmpsl
mov
cltd
xor
cli
ret
inc
enter
mov
ss
adcl
ljmp
into
xlat
lock
add
mov
pop
jmp
lock
loop
xor
out
scas
rol
mov
aaa
jns
les
jecxz
ret
int3
mov
enter
loope
or
push
test
stos
fsubrl
stos
mov
mov
rcrb
daa
roll
ljmp
lods
xor
dec
inc
inc
jmp
add
jl
lret
mov
adc
fisubrl
jp
lds
mov
xor
push
add
ds
lods
loop
xchg
xchg
xor
xor
add
jo
or
mov
lods
and
sbb
mov
aas
inc
filds
mov
mov
mov
roll
pminsw
fidivrl
cmpsl
push
push
sahf
int3
xor
repnz
sbb
xchg
shl
pop
xor
arpl
cmpsl
repnz
cmp
mov
fldt
cmp
mov
insb
pop
aam
push
and
mov
inc
mov
popa
bnd
ret
sbb
sti
xchg
cld
and
inc
sbb
cmp
or
mov
add
or
push
jae
fs
xchg
mov
inc
sbb
lss
icebp
lahf
mov
fldl
sbb
dec
or
pusha
movsl
sub
arpl
gs
pop
arpl
pop
fwait
call
loop
rclb
add
add
mov
mov
int
rorl
in
imul
mov
inc
loop
subb
dec
call
pop
test
xchg
mov
pop
std
addr16
mov
cmc
out
nop
into
iret
icebp
push
and
nop
cmp
mov
stos
add
sub
stos
vcmpps
mov
ja
push
in
adc
mov
mov
les
cli
std
gs
subl
dec
roll
hlt
xchg
cmpb
and
mov
lea
adc
aam
cmp
addb
hlt
movsl
fldenv
mov
dec
xor
dec
xchg
jo
call
xchg
mov
add
sub
mulb
xchg
or
daa
add
fcmovnb
push
adc
add
outsl
xchg
cmpb
inc
push
push
popa
out
stos
fildl
jns
aad
mov
and
jge
ret
sub
cmp
adc
sti
xchg
insb
push
jmp
in
hlt
in
addb
in
lret
xchg
jne
daa
mov
cmp
jns
mov
les
jns
out
les
insl
push
fnstenv
jecxz
icebp
aaa
fadds
icebp
pop
or
les
mov
aas
testl
xor
ret
jl
sub
xorl
sub
mov
movsl
lret
cmpsl
test
sub
testl
pop
and
fxch
sti
lea
cmpsl
addr16
pop
iret
mov
mov
inc
mov
fidivrl
gs
mov
xorl
sbb
data16
add
add
aam
cmpsl
xchg
inc
mov
mov
sub
popa
repnz
adc
sbb
add
aam
pushf
push
pop
daa
lcall
loop,pt
les
mov
shll
mov
arpl
and
jns
adc
xor
test
cmc
jg
add
inc
pop
bound
cmp
inc
or
xchg
outsb
stos
xor
lock
rorb
xchg
outsb
or
mov
mov
or
or
cli
lds
jo
push
add
mov
pushf
pushl
jecxz
sbb
fldt
dec
add
aad
pop
cmp
sbb
cmp
nop
and
outsl
arpl
push
fistl
inc
inc
out
dec
jmp
push
xchg
pop
call
test
mov
add
daa
push
cli
lods
inc
mov
and
or
mov
or
ljmp
das
add
ja
fiaddl
xor
fwait
inc
jb
movsl
out
stc
outsl
addr16
fwait
add
xor
mov
ljmp
daa
ds
mov
in
les
jle
adc
ret
pop
and
mov
mov
notb
aas
repz
cs
lods
stc
imul
mov
daa
sub
stos
jnp
add
mov
movsb
and
fstp
jg
sbb
inc
xchg
mov
cmp
add
movl
and
loope
stos
popf
jmp
mov
cmp
fcomip
lods
stos
or
hlt
jo
ret
mov
xlat
cld
hlt
les
sarl
mov
pop
dec
cwtl
xor
pop
inc
xor
nop
outsl
add
aam
stc
push
jb
jmp
cli
clc
fists
jl
les
xchg
fsubl
fistps
mov
cli
scas
xchg
das
outsb
mov
bound
sub
aam
add
cmp
data16
mov
mov
sti
cltd
aaa
inc
xchg
ret
and
and
or
sub
mov
jae
arpl
loop
add
jo
les
fidivrs
or
add
xchg
mov
xchg
cs
cmpb
and
daa
sub
xchg
pushf
loop
lcall
popa
cs
and
in
mov
mov
mov
or
jb
or
cld
icebp
jmp
jp
scas
inc
test
jno
mov
std
mov
js
sbb
sti
rcr
in
push
aas
and
shll
push
dec
paddb
repnz
push
add
jae
fists
shrb
fxch
jmp
xor
rorb
cld
inc
scas
or
movsl
lret
in
fs
mov
mov
movsb
push
mov
mov
xor
jle
fcompl
push
addl
inc
outsl
xor
xor
lods
sbb
jl
fldcw
faddl
dec
pop
sub
xorb
icebp
push
stos
js
mov
lahf
add
fisubl
sbbb
leave
mov
call
pop
fmull
jecxz
pop
mov
mov
adc
or
lcall
cmp
fadds
sar
dec
add
jae
add
in
outsl
jns
insb
insl
pushf
push
add
sbb
xor
mov
fs
xchg
adc
or
push
jl
aas
sub
xchg
add
fwait
ss
add
call
xlat
mov
les
and
xchg
aas
mov
aaa
jb
mov
xor
lret
add
ret
rorb
dec
test
push
je
loope
std
daa
add
mov
add
cmpb
xchg
mov
adc
addb
jg
mov
movsb
imul
fisubl
cld
fbld
lods
shrb
enter
hlt
stc
inc
cwtl
int3
subl
les
lods
out
into
inc
addb
leave
push
stos
loopne
les
mov
sub
dec
jno
or
enter
xor
sbbb
clc
std
scas
scas
fiadds
stos
mov
fdivrp
repnz
test
add
call
pop
dec
mov
jae
xchg
or
cwtl
insb
xorl
andl
ja
rolb
xor
xor
mov
filds
aas
outsl
xor
outsl
xor
test
add
jnp
or
mov
xorb
push
sub
inc
push
cmpsl
stos
lar
orl
ror
hlt
mov
add
data16
loopne
pusha
int3
ud2
testl
rolb
add
xor
add
mov
mov
xor
mov
test
sbb
out
mov
testb
test
xor
imul
lea
mov
or
rorb
fistl
out
mov
xlat
add
mov
push
or
or
emms
cmp
pop
test
mov
adc
dec
mov
mov
stos
add
xor
test
xor
mov
mov
mov
xor
mov
mov
cmpb
dec
or
mov
in
mov
mov
stos
das
or
add
ret
mov
shlb
mov
xchg
mov
mov
mov
mov
test
sarl
xor
mov
mov
xchg
mov
roll
cmp
test
scas
out
cmp
shlb
loop
rcll
mov
hlt
movsl
dec
stc
stos
js
daa
pop
jecxz
add
mov
pop
mov
sarl
add
jmp
sub
xor
out
scas
mov
out
inc
mov
mov
jns
jg
push
xor
lret
and
ds
push
mov
shrl
add
cmpsl
mov
xor
xor
nop
insl
in
mov
mov
pop
adc
push
or
jecxz
mov
add
mov
aad
aam
inc
fimuls
or
xchg
and
or
xchg
xor
cmc
dec
xor
pop
imul
movl
and
fs
cmpsl
sub
arpl
inc
and
in
mov
cld
jmp
cmp
mov
push
add
and
cmp
push
loopne
mov
fs
mov
clc
mov
xor
cli
sbb
mov
mov
sbb
lods
adc
aas
stc
mov
shrb
rolb
sahf
clc
pop
or
jl
leave
xchg
sub
stos
out
add
es
push
lahf
jle
ds
dec
or
shll
ja
lock
add
xchg
or
add
jl
mov
jo
shll
movsb
stos
mov
ds
hlt
das
mov
xchg
mov
pop
and
xchg
enter
xchg
push
jge
cmp
iret
movsb
cmpsl
ljmp
sar
test
cld
adc
les
mov
dec
push
adc
sbb
mov
aas
jo
jno
cmpsb
lret
mov
mov
out
jge
fldl
mov
scas
mov
mov
mov
or
sub
int3
movlhps
fwait
mov
pop
insl
mov
lcall
jmp
and
inc
mov
push
cmpsl
jmp
movsb
xor
in
gs
lea
xchg
mov
iret
add
mov
ficomps
andl
sub
mov
aas
and
xchg
mov
mov
jbe
add
inc
lods
int
lock
xchg
dec
adc
inc
loop
jl
xor
sarl
stos
push
loop
in
movsb
movsl
or
in
andb
or
mov
mov
jo
ret
movl
pushf
cwtl
xchg
push
ljmp
cmp
add
mov
adc
sub
test
mov
in
xor
xor
cli
divl
inc
ret
aas
pop
int3
cmp
pop
jno
xor
bound
stos
sub
into
inc
xor
cmp
mov
movsb
sbb
fistps
pop
and
xor
ljmp
loopne
inc
outsl
push
cltd
jo
rorl
ret
repz
lods
aad
pop
mov
cmpsl
cltd
dec
pop
mov
pop
shlb
mov
cli
mov
mov
cmpsl
pop
inc
push
xchg
ja
decb
xor
mov
lcall
xor
cltd
cmpsl
cmp
into
mov
xchg
pop
push
imul
mov
xchg
es
jbe
icebp
fcom
lret
push
subl
xchg
sub
out
nop
loop
rorb
roll
sub
cwtl
mov
cmpsl
mov
repnz
sub
push
pop
test
mov
xchg
call
xor
xchg
cmpsl
sbb
dec
stos
ss
add
ss
pop
xchg
jno
das
fxch
xor
test
mov
lcall
dec
dec
ror
sti
mov
fnsetpm(287
inc
jns
js
mov
out
mov
es
or
dec
dec
pop
add
test
ret
out
mov
and
mov
push
pop
dec
inc
insl
cmpsb
dec
cli
adc
imul
xor
xchg
aas
xchg
jp
cmp
sbb
add
rdrand
aad
cs
pop
dec
adc
fwait
mov
test
mov
sbb
cld
das
cmp
dec
jno
pop
fld
mov
cwtl
in
movsb
in
adc
xor
xor
scas
cltd
or
imul
lcall
cmp
adc
sub
cmpsl
jnp
out
xchg
cmp
stc
inc
dec
or
repnz
dec
addl
mov
adc
into
stos
rcl
cmpsl
dec
out
push
dec
lret
repz
mov
daa
shrb
or
mov
push
cmpsb
aam
hlt
push
outsl
mov
mull
cmpsl
jne
std
fidivs
out
xor
mov
add
mov
mov
cmpsb
bswap
jbe
push
dec
fld
loopne
shll
xchg
inc
orb
pop
sbb
xchg
outsb
and
adc
andb
mov
fdivrp
inc
lahf
pop
xor
outsb
test
or
in
inc
mov
xchg
bswap
roll
xor
add
push
ret
das
or
lods
mov
les
jmp
mov
xor
sbb
jbe
cmp
push
pop
mov
mov
mov
push
lods
or
pop
in
fcmovbe
cmp
sbb
mov
mov
jp
fdivs
lds
inc
cld
push
pop
mov
sub
aam
outsl
push
icebp
or
movl
inc
mov
mov
icebp
aas
movsb
xchg
add
push
addl
sbbb
mov
xchg
dec
mov
iret
or
push
leave
adc
je
push
fcmovne
lds
pop
mov
lret
mov
mov
es
and
cmp
test
fdivl
mov
xor
cltd
jmp
out
mov
push
rolb
cmp
xchg
imul
mov
jmp
sti
outsl
enter
out
cmpsl
pop
popl
fistps
push
jmp
pushf
xor
bound
pop
mov
mov
pop
cmp
loop
mov
xor
andl
xor
rcrl
add
mov
inc
or
sahf
inc
cmpsl
flds
cmp
sub
lds
fdivs
or
inc
movl
cwtl
data16
cmp
loope
mov
mov
mov
shll
gs
xor
stos
int
mov
cs
cmp
and
add
inc
mov
cld
push
movsb
sub
mov
mov
and
inc
and
or
test
sbb
pop
mov
add
sahf
lret
arpl
add
add
fisubrs
adc
pop
xchg
dec
cmp
or
faddl
add
and
fsubs
outsb
adc
mov
mov
mov
mov
add
into
mov
sub
enter
push
mov
mov
cld
mov
js
mov
cmp
cmp
xlat
and
pusha
pop
lahf
inc
mov
nop
das
in
mov
mov
add
data16
push
ret
sbb
sbb
fwait
aad
inc
jmp
lods
arpl
push
jg
mov
dec
roll
pusha
adc
sbb
cwtl
movsl
fs
pop
and
clc
mov
test
repnz
pop
in
in
add
sub
pushf
cwtl
movsb
xchg
mov
lods
in
aam
inc
mov
les
rcll
inc
bound
push
mov
push
out
mov
push
push
stos
imul
lahf
mov
lea
sub
add
push
lods
adc
cld
cmpsl
add
cmpsl
adc
xchg
push
push
or
cltd
sbb
lods
in
push
shll
roll
pop
pop
mov
xor
mov
add
loope
mov
cmp
lods
dec
add
inc
sahf
mov
mov
or
dec
add
add
and
fisubs
push
mov
push
push
xchg
mov
mov
pop
mov
or
lock
jb
cli
cmpsl
xchg
inc
in
stos
or
xchg
inc
xorl
sub
xchg
add
cmp
xchg
jmp
xor
jbe
or
lods
or
add
les
in
aas
dec
pop
ljmp
dec
scas
jae
cmpsl
mov
add
mov
loope
push
or
push
imul
cld
fmull
mov
dec
and
xor
jb
fidivl
dec
mov
mov
jecxz
mov
in
addb
add
cmp
movsb
add
and
add
inc
inc
xchg
inc
pusha
xchg
inc
mov
clc
cmp
rcrb
jecxz
xor
into
mov
xchg
movsl
cmc
ja
lahf
les
popa
popf
push
mov
mov
aaa
sub
push
arpl
inc
or
cmp
xchg
sbb
cmp
inc
pop
imul
dec
and
jmp
gs
cmp
aas
pop
subl
stc
in
iret
ljmp
pop
mov
push
idivb
iret
mov
sub
les
mov
or
jb
push
bswap
lcall
andb
adc
arpl
add
loopne
xchg
stos
push
in
and
xchg
jg
je
rcrb
mov
mov
dec
add
popa
cmpsl
sbb
pop
mov
je
in
stos
xlat
or
in
add
pop
xchg
push
pop
movsb
arpl
push
mov
imul
xor
cmpsb
sahf
addb
sti
test
in
imul
mov
mov
dec
arpl
xor
loop
mov
xorb
ret
xor
pop
test
imul
popf
movsb
jecxz
jnp
popa
ror
add
mov
loop
push
cmpl
test
add
stos
mov
push
dec
fimuls
jecxz
cmpsb
sti
mov
sarb
into
sarl
es
push
jp
cs
xchg
jge
pop
aam
push
divb
ss
inc
sub
xlat
or
icebp
int
or
das
xchg
adc
scas
ja
or
or
insl
lret
push
mov
lret
mov
loop
loope
add
movsl
aad
addb
call
add
rcll
push
dec
add
lea
cmp
cmp
adc
push
ss
jecxz
dec
jp
shrl
push
jnp
inc
push
pop
in
mov
mov
test
add
mov
out
inc
aam
icebp
xchg
fsubl
movsb
xchg
repnz
into
push
das
addb
orl
imul
mov
mov
or
das
rolb
mov
mov
imul
mov
orb
push
mov
adc
es
push
cmp
inc
mov
xor
or
add
mov
mov
mov
add
mov
push
lea
movsb
les
arpl
add
mov
mov
mov
mov
les
in
shll
add
addl
clc
ret
clc
jecxz
add
and
inc
clc
clc
xorb
mov
fnsave
mov
lods
lret
add
sub
mov
repz
jne
or
fdivrl
pop
insb
jecxz
adc
add
imul
xchg
arpl
fcoml
rep
mov
cmpsl
fldl
rolb
add
addl
imul
aam
sub
mov
pushf
andb
push
and
sub
mov
frstor
ret
decl
out
mov
arpl
lahf
xchg
cmp
loopne,pt
in
mov
jne
test
fcomi
add
in
mov
pop
shll
shrl
inc
test
and
add
das
sti
movsb
add
xchg
inc
adcl
jno
les
lcall
movsb
int
xchg
bound
jb
inc
ja
je
inc
movsb
sub
pushf
xchg
lds
aam
ss
xchg
push
out
adcb
inc
std
mov
fmul
sarw
dec
out
fwait
in
repz
ss
sbb
lods
xorb
iret
mov
xorb
jo
add
lret
jno
mov
jnp
mov
xor
stos
int3
jno
fs
dec
sub
mov
fsubs
stos
jmp
andl
jne
ret
mov
mov
mov
adc
std
xor
in
jge
clc
subl
add
mov
in
movsb
xor
imul
inc
xor
in
repz
and
mov
mov
mov
scas
jl
popa
lds
dec
mov
enter
lds
fs
or
shlb
jno
fstpt
repz
mov
mov
jae
loope
repnz
adc
cs
fwait
outsl
cwtl
add
or
or
or
dec
bound
xor
in
ret
fiaddl
jno
push
out
pushf
addr16
or
jb
in
mov
add
aam
pushf
lcall
mov
sbb
inc
dec
cmpsl
imul
popf
das
inc
in
hlt
lcall
int
mov
push
push
push
xchg
inc
push
mov
cwtl
testl
je
int
xorl
aam
addl
adc
mov
jmp
stos
xchg
mov
and
std
fs
mov
ret
hlt
or
mov
inc
orl
ret
fstpl
mov
sub
mov
mov
or
or
dec
push
in
mov
scas
adcl
pop
outsl
cmpsl
scas
clc
cli
mov
shrb
popf
or
ljmp
add
add
dec
xchg
fs
testb
and
xchg
sbb
jno
xor
fbld
and
scas
daa
cltd
mov
adcb
repz
clc
bound
mov
test
jmp
in
je
dec
aam
inc
mov
lret
or
sub
adc
out
dec
mov
lods
jno
in
jmp
arpl
in
mov
jecxz
loop
popa
jnp
nop
bsf
sti
inc
loop
bound
xchg
aaa
bound
jb
mov
or
pop
lret
pop
in
out
scas
cli
xchg
shrb
mov
dec
mov
stos
fisttps
xor
sarb
mov
cmp
nop
out
rcll
sub
scas
xchg
ret
sub
sub
frstor
jbe
aas
repz
mov
mov
pop
add
repnz
sbb
mov
imul
lods
mov
bound
in
jmp
xor
mov
cmpsl
lods
mov
scas
xor
sub
jecxz
out
xchg
loop
and
pop
jo
mov
push
mov
xchg
xor
add
sbb
xor
sbb
jb
pop
dec
or
movntq
dec
mov
stos
nop
aas
test
mov
pop
fwait
and
add
roll
and
jns
dec
cld
mov
cmpl
jno
add
jns
mov
mov
rorl
pushf
inc
sub
dec
out
into
cmp
ret
icebp
mov
sti
mov
repz
dec
adcl
scas
lret
mov
mov
xchg
in
jne
xchg
add
not
adc
dec
push
inc
mov
scas
cmp
inc
fmull
clc
adc
xor
cld
xor
jg
shrl
stos
jnp
jecxz
fsubl
imul
xchg
mov
aad
loopne
aam
in
lcall
in
pop
clts
loope
out
loope
in
movsb
add
cld
iret
mov
clc
add
mov
ljmp
stos
push
mov
rcll
cltd
dec
xor
push
xor
xchg
inc
jae
fldenv
adc
stos
mov
jnp
mov
mov
lea
cld
mov
mov
ret
mov
cmp
lock
sbb
mov
jp
add
in
fdivl
hlt
lahf
push
jle
imul
lea
add
add
addb
push
pop
aaa
addr16
sti
mov
test
fwait
sarb
xlat
testl
pop
sahf
mov
mov
or
inc
jle
push
pushf
lret
lea
stos
lea
dec
mov
out
pop
add
fs
aas
das
movsb
cli
and
jge
sub
add
add
add
pop
push
mov
add
push
push
sub
jge
or
ret
imul
jbe
or
add
inc
mov
or
call
mov
inc
sub
push
mov
add
into
inc
bound
test
push
stos
or
jno
xor
loop
pop
push
ss
inc
push
sarb
xor
lea
or
inc
sub
xorb
mov
shll
sub
mov
sti
mov
aaa
aad
jl
ja
imulb
subb
or
dec
mov
shll
shrb
jnp
jmp
enter
mov
in
pop
cmc
mov
faddl
mov
fcmovnu
xor
test
dec
roll
aas
pop
aaa
sub
orb
mov
mov
call
xorb
scas
not
stc
xchg
dec
les
inc
ss
mov
inc
add
push
inc
hlt
and
sub
dec
mov
adc
in
mov
out
stc
push
add
aad
xchg
sub
or
sub
xor
sbb
push
incl
imul
mov
cwtl
mov
cld
sub
int
mov
leave
outsb
push
sti
ja
jecxz
mov
xchg
enter
mov
mov
add
and
outsb
fnsave
xchg
mov
inc
xchg
decl
xor
mov
pusha
fidivl
mov
push
xchg
mov
ss
sti
mov
mov
loopne
or
adc
pop
iret
inc
mov
dec
push
ja
add
popa
or
jo
jno
iret
iret
ret
mov
call
xor
lret
xlat
int
lds
mov
ss
mov
push
iret
into
leave
imul
pop
outsb
sbb
lods
lea
insb
aas
andl
int
clc
inc
add
jp
mov
sbb
jl
std
mov
sbb
mov
lret
dec
jp
ljmp
in
mov
in
sub
xchg
rclb
jns
sti
dec
arpl
fnstcw
lcall
push
aam
jo,pt
mov
xlat
mov
sbbb
pop
push
subb
push
or
orb
jecxz
mov
jne
ds
call
rcl
repz
adc
jae
pop
adc
mov
sbb
frstor
xchg
xor
mov
aas
push
cmp
mov
std
mov
mov
mov
jnp
pop
clc
loop
int
adc
mov
into
out
push
mov
cltd
mov
push
add
in
call
je
lahf
pop
xchg
call
inc
pop
fldt
sub
push
loop
xchg
aad
push
inc
lods
or
iret
add
enter
insb
fistpl
scas
insl
inc
add
mov
andb
call
xlat
aas
inc
mov
dec
xchg
mov
nop
sub
lret
fidivl
leave
inc
pop
xor
mov
divb
mov
pop
push
testl
xchg
or
mov
fstpt
cli
pop
fsubl
sbb
add
cmp
inc
mov
lret
pushf
ljmp
add
mov
pop
sbb
sbb
mov
mov
popf
out
jnp
fwait
and
pop
nop
fcomip
test
cli
popf
ror
lock
mov
test
fcomps
in
cltd
cmp
gs
movsl
mov
test
xchg
sti
cmp
mov
xchg
mov
and
rclb
int3
jbe
popf
push
stc
or
add
jns
add
std
fwait
and
fnstsw
into
xor
das
stc
arpl
mov
int3
sub
cmp
cld
sbb
cmp
fmulp
sbbb
in
push
sahf
xchg
pop
inc
mov
push
setbe
mov
nop
cmpb
fwait
lds
jne
lock
xchg
lret
mov
jl
xchg
mov
adc
aas
inc
add
cmp
cli
clc
icebp
lea
pop
fnsave
cld
inc
pop
mov
sbb
mov
cmp
cmp
addr16
xor
cmpsb
or
mov
lds
jl
repz
cmp
inc
mov
ds
movsl
pushf
jge
or
sbb
jnp
pusha
fiadds
fsubl
mov
sti
pop
xorl
pop
aad
aas
xor
sbb
mov
int
sbb
inc
sbb
loopne
nop
sub
out
daa
mov
pop
rorb
mov
ret
flds
sbb
out
lods
int3
add
mov
arpl
cli
cmp
sbb
pop
ja
not
cmp
inc
movsl
imul
xor
stos
cltd
loopne
pusha
fisubl
and
add
movsl
inc
lods
ret
das
push
pop
or
and
test
push
lock
faddl
aaa
push
push
xlat
mov
movsl
jns
ret
jbe
out
mov
dec
in
mov
push
std
pop
or
loope
mov
mov
jno
inc
mov
mov
ss
rcr
cmp
xor
cmp
adcb
fildl
jne
push
in
popa
jae
aaa
xlat
xchg
icebp
lds
mov
adc
andl
and
jo
bound
cmp
adc
or
push
sahf
and
dec
push
bound
insl
add
sub
pop
xor
pop
adc
jle
and
xchg
imull
push
mov
notb
or
jne
add
pop
cmpsb
push
shrb
js
lds
imul
dec
push
xchg
cmpsl
dec
mov
dec
inc
sub
test
mov
adc
enter
rol
pop
or
sub
and
clc
stos
aaa
sahf
addb
xchg
int3
orb
scas
pop
add
xor
rolb
ljmp
test
dec
sub
and
out
sbb
int3
sbb
and
pop
sub
or
out
test
lods
lods
int3
mov
jp
dec
mov
cmp
and
loop
pop
sbb
in
arpl
inc
les
call
dec
dec
sbb
hlt
sub
push
int3
adc
mov
mov
repnz
popf
push
arpl
divb
dec
mov
mov
cmp
mov
stos
sub
repnz
mov
push
sarl
mov
mov
push
dec
arpl
lcall
data16
xchg
cmpsl
inc
stos
pop
cwtl
andl
add
pop
dec
cmp
add
dec
sub
inc
lret
loopne
push
xor
inc
jg
mov
xor
cmp
data16
pop
fnstsw
xlat
xlat
lret
ret
xchg
ror
ds
adc
xor
insl
and
or
xlat
sbb
mov
punpckhdq
or
daa
mov
cmc
dec
push
cmpb
scas
cltd
or
sbb
repnz
out
xchg
call
stc
movlps
loop
push
movsl
jno
xor
rclb
xchg
and
push
lcall
pop
test
dec
out
ljmp
stos
mov
lock
stos
lret
add
fsubr
lods
inc
pop
add
mov
inc
mov
xchg
lret
push
repz
movnti
sub
dec
dec
sqrtps
cmpsl
rolb
fimull
mov
aam
sub
cmp
sub
loop
lret
sar
mov
dec
lret
std
sbb
aaa
xor
fwait
pop
stos
push
leave
or
out
jmp
int
in
sub
leave
pop
shl
fnsave
or
int3
dec
icebp
mov
cld
ret
and
call
sub
int3
and
mull
mov
cmpsl
das
mov
mov
or
pop
cmovb
roll
ret
out
lods
xchg
and
sbb
pop
outsb
ss
jbe
repnz
mov
ret
dec
lock
mov
popf
lgs
in
jmp
scas
lea
add
jp
inc
loopne
mov
add
arpl
das
inc
ss
sub
sbb
lock
rolb
lods
pop
cmp
lods
cmc
add
mov
les
out
out
mov
or
mov
mov
movsb
inc
jge
and
inc
int
les
mov
mov
movsb
orb
sub
or
xchg
mov
shrb
rolb
add
mov
leave
push
push
cld
arpl
push
inc
cmp
shlb
mov
ret
loop
repz
and
cmp
out
pushf
jge
andb
ja
mov
dec
push
cmp
into
add
out
jmp
aas
aad
xlat
cli
addl
lret
scas
daa
test
add
in
add
outsl
pop
mov
pop
and
out
add
mov
mov
xorl
xchg
mov
mov
pop
subl
in
int3
xor
xorl
out
add
inc
push
and
jge
xchg
das
cmc
cli
movsb
lds
add
insl
mov
cmpsb
jmp
leave
inc
fcompl
addb
addl
inc
divb
add
mov
les
jmp
mov
and
or
lods
cmp
lea
les
xchg
jp
aaa
dec
andl
dec
xor
dec
das
inc
add
dec
jecxz
test
mov
addl
mov
mov
dec
adcb
shr
add
in
mov
or
and
xchg
movsl
mov
jmp
out
pop
sub
stos
stos
loopne
sbb
ret
test
and
mov
mov
fisubs
jecxz
sub
pop
sub
mov
les
popf
nop
or
dec
add
adc
arpl
jmp
sbb
in
in
filds
mov
push
push
add
sub
notb
test
imul
push
mov
sbbl
mov
add
dec
xor
mov
or
mov
dec
movsl
fistpll
mov
shll
in
mov
add
mov
inc
stos
test
cmc
mov
fldt
shrl
inc
xchg
stos
fld1
repnz
dec
mov
cmp
aas
aad
inc
fdivr
or
mov
mov
repz
dec
nop
mov
mov
gs
leave
mov
nop
lea
mov
movsl
out
mov
shlb
and
xor
scas
fisttps
cmpl
and
loopne
insb
inc
inc
mov
push
dec
bound
and
pushl
xor
cmp
mov
stos
fstpl
inc
or
mov
into
jle
mov
xor
mov
or
add
shrb
sub
cmp
subb
or
pushf
call
movb
mov
in
das
int3
mov
mov
or
add
lods
repz
cmp
push
enterw
jb
mov
fnstcw
loop
loope
jg
pop
cli
in
ljmp
or
mov
rorl
or
cmp
leave
dec
hlt
fs
mov
and
fadd
insb
mov
xor
mov
ja
subb
mov
push
mov
xor
mov
test
or
mov
dec
and
xorb
stc
jecxz
adc
push
popa
in
lret
sub
inc
call
in
mov
jmp
add
lret
jnp
mov
dec
andl
ss
mov
loopne
pusha
orl
xchg
sub
shrb
test
andb
mov
sbb
mov
mov
lea
xchg
mov
aad
and
or
stos
scas
inc
mov
dec
js
jl
rcrb
enter
mov
ljmp
sbb
insl
jecxz
popa
inc
and
fcmovne
fisubs
ljmp
mov
jb
xchg
jo
js
or
arpl
movsl
xchg
push
jle
movsb
in
cs
arpl
inc
movsb
movb
addl
jns
mov
sbb
scas
jbe
xchg
in
andb
adcb
xchg
inc
xchg
or
and
cmp
fs
neg
mov
andl
dec
adcl
push
mov
mov
outsl
pop
jne
cmpsl
lods
and
insl
insl
pushf
add
and
xchg
pop
xorb
mov
movsb
mov
and
pop
and
je
sahf
add
arpl
xor
jo
sub
cwtl
scas
lock
les
mov
cmc
or
in
lcall
out
mov
lret
xchg
fidivrl
sub
aam
mov
cld
mov
mov
cmpb
addb
fxch
into
iret
and
out
mov
mov
mov
pop
int3
or
fcoms
arpl
in
loop
iret
aam
cmp
mov
cmp
mov
sbb
clc
orb
pusha
adc
movsl
jmp
push
lahf
or
loope
mov
mov
stos
adc
movsb
or
lcall
stos
mov
inc
cmc
cmpsl
jb
and
test
fs
mov
mov
in
jnp
pop
inc
dec
inc
in
adcb
xor
xor
sub
sbb
ret
push
mov
addl
stos
cmpl
push
mov
mov
cli
enter
cmpb
sub
notb
adc
hlt
push
and
and
cmp
sbb
insl
mov
mov
xchg
mov
jmp
add
lds
add
iret
dec
out
jge
mov
push
out
mov
inc
jcxz
into
dec
mov
or
mov
sti
pop
add
cli
popf
ficomps
mov
lcall
inc
scas
arpl
jns
in
jp
js
and
sbb
jbe
fdivrs
cmp
cmp
enter
cld
roll
shll
leave
sub
sbb
sbb
push
pop
pop
cmp
and
cmpsl
sbb
mov
mov
or
lahf
push
xor
insl
andb
jp
outsb
lahf
cltd
imul
push
add
movsl
into
mov
les
adc
aas
mov
mov
cmp
sbb
jp
lcall
jns
mov
inc
test
jp
pushf
and
sarl
ret
dec
jmp
addr16
sti
fidivrs
or
sub
push
jmp
push
jb
in
add
or
icebp
add
inc
subps
pop
lret
out
clc
fcompl
shl
mov
and
rcll
dec
cmp
in
add
mov
ret
in
mov
insb
out
mov
rorb
and
cmp
push
jae
cmpsb
movsb
and
inc
fxch
stos
mov
mov
inc
andb
add
movsb
fsubl
mov
test
mov
mov
push
out
dec
mov
insl
test
out
lret
scas
dec
dec
mov
mov
dec
xor
sbb
mov
testl
mov
ficomps
lret
mov
mov
xor
rorb
xor
mov
mov
jno
mulb
push
inc
or
sbb
push
jl
in
xor
mov
pusha
and
xor
mov
dec
clc
ljmp
loop
and
sub
pop
lcall
test
xor
lcall
loop
negl
jo
pop
jno
mov
hlt
flds
xchg
ficoml
add
leave
mov
addb
popf
add
out
xor
mov
sbb
add
loop
mov
das
cmc
xchg
test
stos
cmp
outsb
ret
pop
out
fildll
das
mov
fwait
ret
lock
push
or
das
loop
ljmp
ljmp
ss
xchg
mov
mov
fwait
xchg
aas
dec
movsb
into
repnz
sbb
pop
xchg
mov
dec
aas
std
cld
movsb
inc
shr
out
xchg
stos
dec
fdivs
adc
and
lret
aas
and
rcrl
jne
scas
mov
push
and
sbb
test
int
mov
cmp
inc
fbstp
mov
cmpsb
adc
mov
mov
cmp
cli
div
pop
jecxz
adc
xchg
sub
mov
arpl
inc
movsb
in
cli
mov
push
aas
lods
add
sub
rorb
xor
add
dec
push
shl
test
push
jns
mov
xor
jnp
mov
cwtl
ds
stos
arpl
jl
or
ret
ljmp
jb
mov
sbb
mov
mov
les
push
adc
or
push
repnz
into
fnstcw
mov
clc
rolb
mov
sub
add
pop
stos
iret
mov
scas
jno,pt
dec
fnstsw
mov
pop
outsb
xchg
ss
pop
int
insl
jg
mov
lea
mov
in
ret
xchg
sub
mov
xchg
loop
dec
mov
cmp
sarl
jle
scas
into
or
popa
sbb
pop
inc
int
scas
inc
xchg
and
cli
stos
xchg
and
subb
push
and
jmp
xor
mov
stos
addb
cmc
xchg
pop
xchg
in
mov
mov
mov
push
xchg
inc
sbb
lret
push
cli
push
hlt
jo
mov
inc
scas
nop
rcrb
add
fsubl
mov
repnz
lods
xlat
rorl
jg
inc
jl
mov
mov
scas
stos
jp
mov
mov
jb
loopne
xor
aas
andl
aad
addl
scas
jecxz
jnp
jno
or
lods
fyl2x
les
xchg
in
mov
mov
mov
mov
dec
xor
orb
mov
cmp
dec
ljmp
sbb
int3
clc
mov
jecxz
xor
mov
shll
mov
mov
orb
sub
mov
scas
imul
dec
mov
outsb
mov
add
xor
cmpb
and
or
mov
or
mov
cmpb
add
aad
repz
push
mov
or
ret
adc
add
mov
sbb
orb
add
mov
mov
cmpb
jne
mov
mov
mov
adc
ret
insb
cs
mov
jecxz
mov
mov
inc
xlat
int3
ja
mov
and
xchg
mov
and
in
andl
xor
andb
jecxz
mov
jne
cmp
xor
mov
and
adc
mov
mov
mov
mov
lea
orb
dec
test
mov
sbb
popa
or
dec
and
mov
adc
inc
xorb
cwtl
cmpsb
push
scas
les
clc
mov
mov
push
adc
sub
pop
and
insb
out
mov
cmpsl
add
sti
scas
lea
mov
pusha
mov
push
lods
shlb
lds
mov
mov
scas
adc
mov
shl
cmp
mov
and
xor
mov
andb
mov
addl
loopne
daa
orb
add
cmpsb
mov
cwtl
outsb
push
dec
cmpsb
ret
dec
mov
mov
in
rcr
mov
mov
dec
cmp
xor
mov
mov
pop
mov
jbe
cmpb
mov
orb
cld
mov
orl
scas
aas
mov
dec
addb
dec
insb
jecxz
lock
pop
lea
repz
cld
mov
lods
dec
mov
mov
mov
push
mov
cmpsb
sub
cmpsb
orb
mov
pop
mov
mov
das
mov
and
scas
mov
mov
mov
mov
pusha
mov
xor
mov
pop
add
movsl
mov
bound
fiadds
adc
subb
or
mov
imul
orb
fimuls
or
or
mov
mov
lret
loop
mov
dec
mov
mov
mov
frstor
jp
leave
xor
mov
cmpsb
mov
jl
push
mov
imul
addb
ret
sbb
mov
mov
mov
jmp
dec
mov
mov
cld
mov
lods
je
or
mov
or
fcmovu
loopne
fdivrs
mov
mov
fdivs
mov
mov
cmpb
mov
orb
mov
sbb
test
mov
mov
aad
int
scas
imulb
dec
cmc
mov
mov
sarl
mov
mov
mov
xor
xor
xchg
sbb
xchg
mov
mov
out
je
outsl
lahf
imul
push
je
addb
rolb
mov
mov
mov
xchg
push
mov
rolb
pop
bound
inc
mov
movsb
mov
movsl
outsb
lods
pop
popa
movsl
xorl
lods
cmp
xor
in
arpl
mov
mov
sbb
les
les
les
les
sbb
add
shll
scas
add
ret
fwait
femms
test
ja
movsb
outsl
fsubp
mov
cld
movsb
dec
cmp
mov
cmp
mov
sahf
xorb
fdivl
mov
jne
mov
xchg
mov
sahf
aas
or
ds
mov
cwtl
imul
push
push
cmp
mov
inc
orl
int3
lods
ds
lods
inc
xor
scas
arpl
add
mov
push
ja
scas
mov
mov
fimull
mov
mov
lods
push
gs
sarb
cmpsb
push
stos
ss
cmp
aaa
loop
mov
mov
or
cmp
lods
je
mov
lods
push
mov
int3
mov
sub
sub
subb
jae
cmpsb
adc
mov
add
into
mov
add
stos
mov
pop
movsl
cmpsb
int3
push
xor
mov
daa
mov
mov
inc
jnp
dec
cwtl
xorl
icebp
fsubrp
in
bound
into
scas
ret
add
mov
cmpsb
icebp
ret
fdivs
add
mov
xorl
mov
mov
lea
add
movsb
cs
push
mov
out
clc
mov
lea
mov
cmpsb
jne
das
mov
or
inc
mov
leave
int3
pop
nop
add
dec
or
loopne
or
mov
dec
aaa
jle
mov
mov
mov
int3
sahf
xorb
xor
jp
jae
popa
mov
mov
add
inc
aaa
push
xorl
mov
clc
mov
les
out
mov
vmwrite
xorl
ror
push
hlt
subb
push
cmpsb
mov
mov
pop
movsl
daa
dec
cmpl
mov
sbb
push
mov
adc
popl
mov
cmpb
imul
outsl
cmpsl
mov
pop
popa
mov
jecxz
mov
mov
nop
mov
xorb
dec
jb
cmp
popf
in
mov
mov
adc
mov
cmpsb
ljmp
jns
nop
mov
xchg
pop
mov
mov
stos
cmpsl
xchg
insl
test
dec
mov
fisttpll
addl
mov
jg
aam
mov
inc
add
mov
arpl
add
mov
shll
mov
int3
mov
mov
mov
int3
push
call
aas
addl
mov
mov
repz
and
push
mov
mov
add
cmp
mov
lock
mov
mov
cmp
mov
inc
fsub
addl
test
cmp
adc
in
mov
mov
mov
cmp
lods
in
mov
mov
jbe
mov
int3
jno
orb
mov
outsl
pop
adc
mov
sub
push
mov
in
mov
int
sub
jae
xchg
mov
mov
cmpb
mov
mov
mov
adc
mov
xor
subb
aas
sbb
add
mov
sub
mov
mov
jmp
mov
sbb
gs
sbbb
rorl
mov
cli
adc
ds
fmull
push
ljmp
or
movsl
jge
mov
lea
mov
mov
addr16
lret
sahf
andb
hlt
sub
inc
mov
cmp
pop
out
mov
jne
mov
sbb
or
mov
mov
mov
mov
fsubr
push
jmp
cmpsb
mov
and
jp
rcll
push
sub
lsl
mov
orb
push
jnp
adcl
test
mov
clc
mov
cli
push
mov
lods
mov
add
mov
decb
xchg
aas
sub
mov
daa
mov
lret
scas
dec
mov
shrb
sub
mov
std
imul
mov
out
dec
sarb
mov
mov
orb
rorb
add
in
mov
mov
imul
jo
js
cmpsb
add
lahf
cmpl
or
mov
or
out
int3
pop
icebp
roll
sbb
inc
in
lahf
inc
adc
jns
bound
mov
ficompl
lret
mov
cmpsb
jne
mov
add
mov
push
mov
inc
sub
push
pop
jnp
insl
xor
es
inc
mov
or
aas
insb
fstpl
rorb
test
add
call
xchg
add
fdiv
xor
aad
sbbb
mov
mov
aas
add
xchg
aas
mov
inc
sub
repz
mov
inc
mov
orb
mov
enter
mov
add
mov
cli
lods
mov
jge
mov
fmuls
dec
add
cmpsb
mov
adc
mov
mov
mov
daa
cmc
mov
mov
andl
test
jecxz
mov
dec
cmpb
jmp
cmp
cmp
cmp
mov
pop
mov
xor
cld
stos
or
xor
or
es
fmull
ret
fmuls
dec
or
lret
xor
test
sti
in
mov
jne
orb
mov
or
mov
cmpsb
mov
loopne
adcb
fmuls
xor
inc
shlb
or
sbb
mov
hlt
ljmp
push
mov
cld
mov
push
cmpsb
mov
xor
mov
mov
loop
xor
sbb
jne
mov
xor
mov
ret
jne
fistpl
shll
shrb
iret
enter
inc
stos
and
iret
cmp
ror
shr
xorps
aas
addr16
mov
out
ret
in
mov
into
pusha
mov
sub
rorl
outsb
mov
lahf
cmp
mov
lahf
inc
mov
mov
in
mov
fmuls
movsb
mov
movsl
cmpsb
sarl
xorb
adc
int3
jmp
stos
inc
into
nop
sarb
and
enter
sbb
jecxz
je
mov
or
enter
in
ret
or
andb
add
lea
mov
jge
or
jb
jge
mov
aaa
lea
sbb
mov
insb
push
test
fimuls
push
sub
jle
pop
and
push
enter
mov
mov
popf
sbbb
xchg
cmc
stos
fadds
cmpb
add
or
in
pushf
out
xchg
cmpsb
add
mov
cmp
xchg
in
sahf
test
cmpb
add
loopne
loop
lcall
mov
mov
xor
nop
call
push
adc
mov
cmp
test
mov
mov
cmp
test
cmpsl
addl
cltd
outsl
pop
popa
sbb
aas
aaa
xor
lahf
xchg
xchg
test
pop
pop
adc
cld
into
test
inc
jp
movsb
fsubrl
sub
hlt
int3
incb
aam
fiadds
sar
test
dec
inc
js
fsubs
and
enter
jle
jo
shrb
push
push
sub
sti
int
in
jnp
mov
and
inc
repz
std
test
jae
jge
shrl
sub
iret
out
test
dec
addr16
jns
mov
and
div
test
jg
jno
roll
test
test
inc
test
xchg
rep
push
sub
bound
add
or
aaa
test
out
mov
outsl
sub
cmpsl
rorl
sub
dec
sub
movsl
fcmovb
mov
mov
jnp
mov
scas
mov
dec
cmpsb
mov
mov
xlat
stc
lods
mov
mov
mul
mov
and
mov
push
loopne
xchg
aas
mov
shl
mov
adc
jmp
out
cmpsb
mov
rorl
movsb
lea
adc
or
cmp
sub
inc
add
mov
mov
sub
cmp
enter
loope
lock
lahf
and
xor
mov
and
jns
xor
dec
aas
add
mov
stos
cs
aam
mov
xor
mov
into
fmuls
add
decl
dec
lea
stc
stos
inc
mov
sub
push
mov
mov
leave
sub
subb
fdivrs
mov
sub
cmpsb
mov
mov
mov
and
xor
es
test
fnstenv
inc
xor
out
mov
sub
dec
rorb
rorb
dec
mov
loopne
enter
mov
outsl
mov
mov
loopne
fmuls
fdivl
outsb
mov
cmpsl
mov
mov
int
add
lods
push
xchg
xchg
mov
mov
sbb
int
jecxz
jae
xor
adc
sahf
adcl
cmpsb
popa
orl
mov
js
mov
mov
les
test
dec
mov
subb
sub
mov
daa
dec
sub
dec
xor
sbb
mov
add
jnp
enter
lock
mov
dec
sbb
mov
mov
sarl
or
jecxz
mov
fnsave
es
sahf
push
fwait
mov
cmpsl
mov
jge
xchg
dec
cmp
ds
mov
mov
mov
mov
fsubl
and
cmp
sbb
scas
scas
pusha
mov
adc
ret
mov
scas
jecxz
mov
out
add
mov
mov
ffree
orb
bound
mov
adc
movsb
pop
mov
fnstenv
inc
mov
mov
mov
xor
pusha
mov
icebp
jno
les
xorb
cmpsb
test
mov
mov
mov
test
xor
cmp
aas
aaa
daa
test
xor
cmp
add
or
push
ds
xor
cmp
xor
test
hlt
int3
cld
shl
clc
test
repnz
mul
test
repz
sti
iret
push
out
shl
stc
int
cmc
in
inc
jae
jnp
jg
test
dec
jns
jge
test
dec
jp
jle
data16
dec
js
jl
test
test
test
movb
xlat
movl
and
pop
das
pop
push
inc
test
push
sub
pop
push
inc
test
push
sub
pop
push
inc
test
push
sub
pop
push
inc
test
xchg
in
pushf
loopne
call
ljmp
jecxz
jmp
out
lahf
xchg
xchg
popf
xchg
test
pop
pop
pop
test
imul
test
push
outsb
push
push
push
movsb
pusha
adc
insb
sbb
dec
test
mov
mov
mov
xor
add
test
cmp
aaa
aas
daa
or
orl
mov
mov
cmpsl
lea
or
cmp
or
es
test
movsb
lods
aam
mov
mov
test
and
push
pop
and
test
das
push
pop
inc
sub
mov
test
xlat
ffreep
lods
aad
ffree
and
push
pop
and
test
cs
pop
inc
sub
test
int3
hlt
cld
ret
repnz
ror
clc
into
testb
inc
dec
test
dec
ja
addr16
jne
jge
ret
lret
repz
ror
icebp
stc
iret
idiv
out
cmc
test
in
dec
jb
inc
dec
test
dec
jbe
dec
je
jl
in
xchg
pushf
loop
test
cwtl
out
xchg
test
sbb
test
sbb
pop
pop
insl
adc
jmp
fwait
loope
test
xchg
xchg
test
sbb
test
sbb
push
push
insb
adc
sbb
mov
mov
mov
movsb
mov
stos
test
aam
rolb
into
int3
lret
hlt
repnz
cld
cli
clc
out
loop
test
in
ljmp
sahf
pushf
lcall
or
xor
aas
test
and
das
test
push
push
pop
test
pop
inc
inc
inc
inc
dec
test
dec
ja
jae
jg
jge
jns
arpl
test
imul
test
addl
mov
mov
mov
cmpsl
movsl
mov
stos
test
filds
ret
ror
int
leave
div
repz
incl
jecxz
out
test
jmp
xchg
xchg
xchg
xchg
lahf
test
add
push
test
or
xor
xor
test
cmp
and
and
test
sub
push
push
pop
test
inc
inc
inc
inc
dec
test
jbe
jb
jle
jl
js
bound
test
push
adc
adc
les
sbb
add
xor
cmp
mov
mov
movsb
orl
cmpsb
mov
scas
dec
into
inc
cli
adc
mov
and
subb
sbb
lods
or
mov
or
imul
sub
lods
and
and
xlat
in
add
xor
xchg
xorl
xlat
adcl
test
stos
or
xor
push
xor
stos
sub
mov
lret
mov
or
cmpsl
popl
jecxz
cltd
das
cltd
pop
jmp
jo
cmc
popa
or
cmpl
or
shrl
ret
add
sub
xor
add
test
arpl
enter
mul
lods
mov
mov
mov
cs
and
add
arpl
jne
or
insl
push
dec
stos
lea
jle
mov
aaa
popf
or
pop
mov
inc
push
xacquire
fs
out
inc
mov
mov
push
test
inc
data16
stos
mov
push
test
and
call
aaa
jo
mov
inc
arpl
mov
pop
mov
test
or
pop
xor
je
arpl
mov
mov
aaa
sbbb
mov
test
xchg
jl
push
cmp
push
stos
pop
out
test
push
lcall
mov
test
fistl
push
movsb
add
ss
call
mov
mov
adc
test
lods
mov
pop
lock
test
or
cmp
jmp
push
test
cli
xchg
pop
ret
pop
in
out
test
mov
int3
jns
popf
cltd
arpl
mov
sbb
sbb
jns
test
ds
dec
int
js
divb
mov
cmp
dec
rcll
std
sbb
pop
mov
test
flds
jnp
jecxz
adc
outsb
test
and
ja
mov
cmp
inc
cltd
movsb
cmp
cli
mov
iret
sbbb
push
fisubs
inc
pop
daa
sbb
out
cmp
mov
lds
mov
fsub
popf
and
adc
dec
push
adcl
test
shlb
xchg
dec
enter
mov
pushf
mov
inc
test
and
cmp
jnp
mov
sbb
xchg
test
frstor
and
arpl
mov
movsb
cmp
jp
cs
xchg
test
clc
mov
sbb
sbb
cmp
jns
testl
mov
test
mov
add
push
pop
or
and
mov
les
and
jae
add
sahf
push
push
and
fstl
daa
test
inc
jecxz
js
mov
sub
sarb
sbb
popa
sub
test
dec
in
or
ss
test
sahf
sbb
icebp
add
push
in
cli
fidivs
out
adc
cltd
add
jecxz
cwtl
xor
push
and
test
push
add
xchg
outsl
jle
ret
arpl
jo
push
or
test
inc
fs
test
sub
add
mov
dec
mov
test
cmp
lcall
cmp
pop
pop
inc
push
sbb
lds
cmp
mov
xorb
test
cld
mov
push
pop
popf
aad
imul
test
dec
decb
movsb
or
ret
push
gs
in
mov
inc
add
loopne
mov
test
jl
dec
xor
xchg
ja
mov
push
das
test
mov
push
adc
imul
fldl
rolb
std
pop
adc
test
leave
cmp
sahf
or
add
cld
scas
sbb
push
and
js
mov
out
test
nop
notl
xchg
push
les
inc
mov
xchg
inc
arpl
loop
test
hlt
lret
sbb
test
cmc
mov
xchg
test
jb
repnz
jl
inc
sbb
mov
cmpsb
lcall
movsl
sahf
pop
mov
xchg
stc
pusha
test
jl
jmp
fcoms
sbb
je
mov
bound
in
inc
ja
or
movsb
mov
xlat
jle
enter
xchg
test
pop
ss
mov
test
mov
cli
and
or
in
test
test
pop
add
imul
lret
testl
sbb
movsl
cmp
test
popf
js
sbb
imul
pop
cmp
cld
or
sti
mov
sahf
ljmp
dec
mov
pop
scas
imul
loopne
cmc
ja
or
loope
sub
out
test
iret
insl
jl
cmp
pushf
mov
and
push
push
les
push
stos
test
inc
lea
and
das
add
sbb
and
fildl
test
bound
mov
test
push
mov
not
pop
out
mov
subb
lea
adc
xor
pop
add
or
jg
ljmp
dec
popa
mov
cmp
jg
shr
in
ljmp
xchg
or
jle
or
sbb
movsb
add
les
adc
add
and
mov
movsb
jmp
dec
push
lret
and
daa
mov
or
fsubrl
xchg
pop
mov
lsl
or
add
orb
mov
dec
mov
daa
iret
cmp
cmp
inc
imul
sarb
out
ljmp
add
iret
dec
sti
cmp
adc
orl
dec
lahf
unpckhps
xor
fiaddl
push
xor
fdecstp
mov
ljmp
int3
mov
leave
mov
orl
push
iret
xor
rorb
cmpl
roll
ljmp
int3
ss
mov
shll
add
adc
sbb
nop
int
enter
shufps
lea
inc
enter
mov
or
mov
andl
aad
test
jae
sub
jle
enter
ret
xorl
pop
mov
jecxz
ffreep
je
adc
jl
daa
rol
shll
mov
lea
lret
es
or
mov
jb
into
int3
stos
cmpsl
or
stos
xchg
aam
add
repnz
jg
in
movsb
scas
mov
inc
or
es
orb
outsl
pop
outsl
orb
outsl
and
mov
mov
add
or
mov
fisubrs
pop
mov
iret
nop
scas
xor
xlat
ljmp
dec
sbb
inc
adc
sbb
scas
mov
mov
mov
mov
mov
xchg
fst
jl
push
rorb
add
gs
rcrb
or
lds
mov
btc
push
or
rol
mov
mov
mov
out
jb
sbb
mov
inc
sbb
out
ret
pop
mov
fs
sbb
push
mov
push
mov
subl
mov
movsl
loopne
mov
mov
scas
movsl
xchg
rorb
orb
inc
in
cbtw
out
mov
mov
xchg
mov
movsb
pop
xor
add
xorl
je
dec
push
jmp
rcl
andb
popa
mov
mov
fcmovne
imul
dec
sub
push
cld
aaa
mov
nop
aaa
aam
imul
sub
mov
xlat
je
adc
sbb
pusha
mov
jne
cmp
sub
xorb
xchg
ret
mov
adcb
or
repz
cmpsl
xchg
or
cmpl
add
mov
pop
mov
in
xor
ja
mov
mov
out
pop
xorl
lds
mov
inc
outsb
mov
add
add
mov
loope
pop
mov
movsb
or
loope
lods
sbb
cmp
scas
and
inc
outsb
mov
dec
pop
loopne
daa
inc
or
adc
ds
and
cmp
or
sbbb
dec
loope
mov
mov
out
rol
ret
fimull
jbe
mov
je
movsl
orb
imul
sbb
mov
push
aaa
lret
mov
jg
fchs
rcll
test
ss
test
in
outsl
and
or
ret
and
inc
mov
lcall
xorl
shl
sub
lds
sub
scas
les
fwait
adc
popf
inc
sbbb
sbb
xlat
sub
push
js
mov
out
push
into
sbbb
ss
or
arpl
mov
jge
cmp
sbb
push
repnz
add
aaa
push
int
sub
cld
xor
mov
dec
aam
xor
outsl
add
stos
stos
in
in
das
sbbb
xor
xchg
mov
push
mov
dec
or
xchg
daa
ss
aad
mov
mov
in
cmpsl
aas
cmp
mov
add
add
lea
mov
lret
nop
mov
or
sbbb
mov
adcb
enter
ffreep
sti
mov
xor
int3
push
xor
dec
or
xor
xor
jp
adc
int3
mov
clc
outsb
jecxz
cmp
clc
mov
mov
int
and
loop
ret
add
adcl
cmp
sbb
inc
mov
cltd
stos
popa
mov
ret
sbb
add
mov
jecxz
orl
into
gs
adc
dec
loope
lock
rcl
jecxz
mov
adc
or
aam
daa
pop
mov
dec
andb
int3
icebp
out
cmpxchg
mov
lods
lea
dec
cmpsl
mov
scas
or
mov
xorl
cmpsb
int
pop
push
sahf
or
into
xorb
sti
or
aas
testb
imul
lods
xor
neg
adc
push
mov
cmpsb
sub
aam
mov
out
movsb
jnp
in
inc
fnstcw
xor
jnp
and
or
mov
push
mov
mov
add
sti
popl
lods
mov
mov
cmpsl
fs
mov
lods
fadds
jmp
mov
or
subb
out
bound
pusha
push
mov
shll
xorb
inc
pop
pop
test
xchg
or
sbb
ret
mov
cmpsb
cmp
into
fistl
mov
dec
cld
push
clc
lds
or
jae
fucomi
mov
lret
xor
or
push
lahf
mov
cmpsb
inc
int3
into
loopne
rorb
xchg
loope
jmp
in
mov
or
cmp
mov
xor
mov
imul
sub
rcrb
aad
pop
les
cmp
repnz
das
orb
or
mov
mov
mov
mov
push
into
mov
mov
mov
mov
mov
xlat
jne
adc
mov
sbb
dec
test
dec
sti
mov
or
add
dec
mov
adc
adc
out
rcl
addr16
insl
mov
rcl
sahf
pop
cmp
sbb
adc
xchg
mov
sub
or
repnz
dec
mov
les
mov
es
inc
ljmp
je
or
add
adcb
sub
jecxz
fiaddl
daa
mov
cmpsl
xor
icebp
mov
inc
subb
mov
dec
and
aad
sarl
or
mov
xchg
or
ds
int3
pop
push
aas
lock
xchg
mov
jbe
xchg
mov
mov
and
scas
mov
jb
dec
push
or
cs
fistps
dec
mov
jl
scas
orl
fisttpll
in
or
divb
cwtl
insl
mov
ret
mov
mov
or
lods
lock
push
cmp
add
sub
mov
mov
sub
or
jecxz
cmpb
sarl
outsb
mov
xor
mov
arpl
mov
xor
cmc
mov
mov
add
rcrl
sub
cmp
mov
lahf
subb
mov
mov
ds
into
pop
fnstenv
shlb
jb
mov
cmp
sub
mov
mov
mov
mov
adc
rorl
mov
inc
lahf
clc
cmpb
sahf
cmp
adc
mov
enter
adc
mov
lret
mov
mov
mov
mov
int
cmpb
mov
cmp
loop
jae
in
in
ficoms
mov
ret
add
mov
shlb
loope
mov
shl
mov
mov
mov
xor
cld
and
or
movsb
mov
sti
lods
mov
rcl
mov
sarb
pop
xlat
bswap
add
mov
lea
test
mov
sahf
aas
lods
scas
xchg
addr16
mov
into
dec
addb
mov
mov
rol
xorb
subb
sbb
mov
xor
push
aas
out
movsb
scas
add
pop
jecxz
xchg
cmp
pop
jecxz
shll
mov
enter
xor
popf
fimuls
sub
scas
stos
bnd
mov
mov
or
dec
ror
addr16
into
mov
lea
mov
aaa
mov
ss
push
lret
lcall
sarb
into
mov
popf
scas
ss
mov
ja
xorb
insl
push
enter
je
orl
add
stos
dec
or
mov
mov
xchg
xchg
test
mov
pop
mov
or
cmpsl
sbb
scas
mov
jb
adc
mov
push
inc
add
push
mov
adc
popf
or
mov
int3
cmp
sbb
jbe
add
dec
push
lea
ds
cmpsl
and
das
xchg
mov
jno
mov
mov
push
shll
jp
rorb
push
icebp
adc
cwtl
subl
xchg
mov
in
movsb
xor
pop
mov
adc
es
sahf
orb
mov
jp
mov
jl
in
inc
cmp
add
mov
rol
lea
sub
rorb
mov
xorl
mov
sarl
mov
mov
stos
mov
lods
cld
xchg
inc
mov
js
adc
mov
in
or
subb
sarb
in
aam
mov
rolb
add
mov
adc
aad
scas
mov
cli
shlb
push
movsb
lods
mov
movzwl
xor
mov
out
xor
lea
mov
orb
mov
sub
mov
pop
orb
addb
sub
push
mov
mov
pop
add
subl
pushf
xor
imul
mov
rcl
mov
mov
lods
mov
add
lret
xchg
add
daa
aaa
aas
sti
mov
mov
out
sbb
add
jae
xor
nop
mov
mov
into
mov
or
xor
or
add
loope
mov
imul
add
add
push
jmp
fidivl
mov
mov
mov
xlat
call
push
or
xchg
add
jno
outsl
push
sti
mov
mov
ljmp
into
pop
fsubrs
push
repnz
push
enter
and
xor
jae
xchg
into
in
rcll
mov
cmpsb
xor
inc
ljmp
lret
jle
rolb
inc
out
into
xor
dec
outsl
cmp
mov
flds
ja
lods
aas
mov
ds
mov
mov
orl
cmp
cmpl
stos
aaa
loop
pusha
mov
rcrb
test
mov
or
stos
mov
xor
les
mov
cmpsl
int3
popa
push
xchg
aad
hlt
mov
mov
sahf
cmpsl
xor
fistpll
test
jb
shlb
shrb
jne
das
into
inc
sub
adc
xchg
ret
add
jbe
add
add
dec
ljmp
adc
gs
push
enter
dec
and
xchg
push
aaa
imul
xlat
or
je
mov
lret
shlb
shr
xchg
mov
and
adc
sbb
push
jmp
mov
daa
into
push
add
imul
fs
push
mov
sub
out
or
loopne
jmp
addr16
test
push
pop
insl
jmp
inc
sub
popa
gs
or
and
mov
rorb
lods
pop
test
or
xor
sbb
xor
sub
inc
movsl
xchg
xlat
mov
lods
push
xor
mov
add
or
and
sub
push
int3
pop
jecxz
xor
or
or
add
add
addl
nop
push
or
insl
push
add
adc
scas
mov
mov
mov
mov
or
cmpsl
shrb
clc
dec
in
mov
lea
jecxz
xchg
aaa
mov
mov
mov
ja
mov
dec
cmpsl
ror
stc
mov
add
cmpsb
or
in
push
xor
pushl
push
lahf
movsb
call
sub
outsb
lods
add
dec
xor
xchg
lret
xor
in
int
adc
inc
and
in
lea
pop
in
mov
jo
lds
subl
lahf
fidivl
add
inc
jecxz
ljmp
mov
push
dec
out
xor
lret
jbe
jmp
mov
imul
in
pop
in
mov
jmp
mov
mov
orb
pop
daa
lret
or
or
jo
testl
xor
mov
xchg
jg
or
push
cmpsl
in
enter
ret
sub
push
adcl
or
lea
and
inc
add
pop
add
incb
jl,pn
push
int3
lods
push
mov
imul
or
inc
lret
aam
negb
mov
out
cmp
ljmp
mov
lret
cmp
and
lods
dec
ret
ret
dec
mov
rol
xorb
xlat
iret
lahf
adc
ret
mov
mov
push
xor
inc
mov
cld
je
cld
pop
ja
ss
adc
push
mov
out
pop
lea
sub
mov
loop
dec
mov
push
xor
es
lret
or
dec
out
pop
std
outsb
arpl
or
jb
out
scas
lods
movsl
jp
mov
sahf
sub
xchg
pop
mov
jno
dec
lea
lret
arpl
aaa
aaa
push
ror
mov
insl
adc
push
jae
es
repnz
cmp
pop
cmpl
and
movsb
mov
jge
cmc
cli
int3
call
or
or
dec
push
lea
mov
mov
xchg
rorb
stos
ja
xchg
sbb
imul
mov
and
iret
imul
dec
jle
mov
stc
lret
push
pop
out
lret
ret
sub
in
or
out
jp
mov
pop
clc
sbbb
lret
cli
mov
adcl
or
outsl
xchg
adc
cwtl
enter
add
cmp
jo
out
cmp
cmpsb
insb
adc
sub
lock
fisttpl
xor
push
jmp
lock
lret
mov
cmpsb
dec
adc
add
jbe
scas
xchg
sub
sbb
mov
xchg
enter
aaa
dec
subb
mov
addb
mov
fdivl
fisttpll
pop
adcb
test
into
or
outsb
or
jmp
or
xchg
pop
subl
jge
pop
scas
mov
adc
xlat
movsl
bound
aas
add
movsb
sub
les
xorb
nop
xorl
inc
xor
orl
inc
scas
psllw
jb
cmc
shll
mov
test
cmp
movsb
cld
dec
in
in
add
sub
and
mov
mov
test
xor
mov
mov
mov
in
mov
mov
in
sub
or
push
bound
mov
dec
into
and
test
pop
lea
lock
mov
test
mov
mov
mov
fildl
aad
adc
inc
rcll
xor
push
or
incb
jl
sti
iret
jl
pop
scas
sub
stc
sbb
in
shlb
push
stos
in
mov
mov
dec
lods
mov
lret
mov
jmp
mov
data16
mov
mov
sbb
adcb
add
in
gs
mov
pusha
mov
add
jno
fidivrs
mov
and
arpl
loopne
fwait
cmp
sbb
xor
lods
mov
imul
add
repz
dec
push
or
dec
in
dec
mov
or
and
and
jecxz
mov
sarl
test
out
dec
sbb
dec
mov
inc
rclb
jge
imul
inc
lds
loopne
pop
add
fisubs
push
jp
pop
out
add
test
fincstp
int
loopne
mov
ret
pop
or
sbb
pusha
test
or
inc
orb
sub
pop
mov
add
iret
mov
lds
loopne
mov
xorb
or
jge
cmp
xchg
mov
mov
rorl
mov
jmp
push
adc
daa
inc
stos
add
fs
jae
mov
ret
mov
pop
jle
int3
mov
int3
inc
pop
pop
ret
xor
push
xchg
cmpb
call
test
inc
int3
ficompl
les
xorb
xor
fs
xor
cmpsl
orl
in
out
pusha
mov
and
adc
and
lds
mov
out
pusha
mov
and
adc
and
lds
mov
mov
out
pusha
mov
and
adc
popa
insb
mov
mov
mov
int
int3
addl
out
pusha
mov
and
adc
inc
insb
out
arpl
pop
or
cmp
lds
or
inc
and
mov
pop
outsb
jb
cmp
mov
les
mov
mov
mov
xor
orb
jg
ljmp
clc
mov
aam
mov
add
push
mov
or
mov
dec
addl
in
subb
addb
lea
mov
push
les
mov
add
scas
jbe
mov
mov
je
cmpsl
mov
bound
mov
addb
mov
mov
adc
scas
mov
fnstenv
and
mov
mov
mov
mov
out
out
or
jne
mov
mov
or
mov
sarb
mov
mov
mov
cmpsb
add
orl
adc
dec
mov
andl
or
mov
scas
mov
out
dec
aam
cmpsb
or
mov
cmpsl
bound
add
mov
mov
nop
mov
mov
adc
in
or
in
mov
lea
das
and
out
pop
cmpsb
mov
orl
or
movsl
mov
dec
imul
or
mov
push
mov
mov
or
mov
xor
roll
mov
outsb
ret
clc
mov
mov
or
aaa
mov
inc
or
add
cmpsb
mov
decl
daa
ret
or
push
mov
cmpsl
or
mov
sbb
mov
dec
mov
or
call
cmpsl
cld
subl
mov
mov
loopne
cmpsl
or
mov
js
mov
mov
icebp
mov
pop
mov
inc
ret
mov
or
mov
or
or
or
aaa
mov
loopne
cmpsl
or
mov
sti
movsl
mov
mov
or
es
inc
aas
mov
roll
rorl
mov
dec
mov
mov
dec
mov
mov
cmp
mov
mov
mov
mov
movsl
push
clc
orb
add
xchg
sbbl
andl
mov
add
dec
iret
mov
mov
cmpsl
into
add
imul
mov
test
cmpb
mov
shll
push
pusha
mov
mov
mov
mov
mov
orl
andb
mov
aaa
mov
dec
popa
pop
add
mov
mov
stc
les
mov
aad
fldenv
and
mov
stc
mov
mov
cmpsb
or
or
dec
test
insl
aad
inc
mov
scas
add
test
mov
pop
mov
adc
mov
and
mov
mov
orl
or
mov
sti
mov
out
dec
aam
mov
add
push
loopne
cmpsl
or
mov
nop
test
lea
mov
lods
adc
add
sub
lods
mov
add
mov
lods
mov
or
mov
movsl
mov
rorl
mov
push
in
mov
xor
cmpsb
add
pop
add
scas
cmpsl
mov
mov
sahf
mov
sarl
jl
jne
cmpsb
cmpsb
mov
cmpsb
imul
andb
xor
mov
mov
scas
mov
mov
jns
mov
mov
mov
sarb
mov
shld
test
mov
add
lret
dec
test
or
mov
ret
or
mov
subl
mov
out
add
mov
pop
add
scas
mov
push
pop
mov
mov
cmpsl
sti
cmpsb
mov
dec
and
xor
orb
cmpsb
sub
cmpsl
cld
lea
or
push
xor
loope
mov
mov
add
mov
mov
add
in
mov
mov
dec
popl
insb
sub
in
leave
insb
aad
xor
mov
sti
mov
mov
mov
mov
jb
cmp
aam
mov
mov
and
cmp
mov
add
je
mov
bound
mov
add
and
sarl
or
lods
lret
push
mov
pop
mov
mov
add
mov
imul
or
mov
clc
movsl
dec
mov
or
mov
mov
mov
int3
adc
scas
mov
cmp
mov
mov
scas
add
cmpsl
int3
int3
pop
add
aad
or
roll
mov
adc
pop
mov
mov
mov
mov
sarl
mov
cmp
add
push
mov
cmpsl
ret
rcl
movsl
or
mov
insb
orb
mov
inc
mov
mov
cs
gs
cmpsl
rorl
mov
mov
mov
lahf
shlb
mov
or
cs
test
sub
fiadds
jg
dec
mov
sub
mov
add
out
add
mov
mov
mov
aad
add
movsb
mov
orb
or
imul
sub
les
mov
das
clc
xor
mov
mov
mov
loope
orb
insl
rolb
mov
mov
dec
jbe
imul
mov
mov
mov
mov
cltd
jl
movsb
mov
out
mov
cmpsb
imul
jae
sub
cwtl
pop
call
mov
add
mov
mov
pop
pop
addl
adc
mov
xor
orl
insl
mov
mov
sub
jb
out
mov
test
xchg
mov
or
mov
daa
mov
push
scas
mov
xchg
xor
and
insl
add
out
out
xchg
sbbl
xchg
cmp
aam
adc
push
jg
ljmp
popf
rolb
push
loopne
aad
jmp
loopne
mov
test
addl
loopne
mov
mov
mov
shll
cmp
jp
inc
mov
cmp
mov
jmp
mov
mov
dec
or
mov
lea
addl
scas
mov
mov
fimuls
and
add
roll
mov
mov
mov
mov
sbb
mov
ljmp
jle
mov
cmp
cmpsl
mov
sub
mov
or
jb
xor
rorb
add
movsb
scas
jmp
jbe
in
aad
xor
lock
pop
adcl
sbbl
mov
cmpsl
mov
mov
mov
dec
rorl
clc
ss
mov
xor
stos
subl
sti
testl
cmp
push
mov
jecxz
aaa
imul
lods
mov
mov
sarb
cmpsb
repz
push
clc
adcb
addl
inc
lea
mov
in
shrl
dec
jg
mov
pop
mov
mov
ds
shlb
ret
push
mov
inc
mov
in
mov
sub
cmpb
leave
stos
out
addl
jmp
add
mov
lea
in
mov
imul
mov
lcall
mov
mov
loop
lea
sub
cmpsl
mov
mov
adcb
repz
mov
lret
inc
movsl
mov
mov
ljmp
orl
cmc
sub
mov
mov
out
insl
mov
out
insl
mov
mov
orl
cmp
mov
mov
mov
mov
shlb
out
movsb
inc
mov
into
cmpl
imulb
test
sub
subl
adc
roll
jb
add
ret
mov
mov
test
loopne
xor
cmpsl
js
mov
dec
mov
sub
mov
hlt
imull
dec
mov
orb
test
enter
mov
fnsave
jne
aaa
mov
loopne
shlb
inc
cmp
xchg
ja
aaa
mov
rolb
or
roll
mov
jnp
add
mov
rorl
inc
invd
mov
test
shll
ret
mov
shl
rolb
mov
inc
popa
sar
rolb
ret
add
add
mov
rolb
rolb
ret
pusha
mov
fistpll
xorl
mov
mov
mov
aaa
jnp
out
mov
jnp
inc
cmp
inc
clc
loopne
cmpsb
loopne
fs
add
shll
mov
or
mov
xor
sbb
mov
mov
sbb
sbb
sbb
sbb
mov
in
cld
xorl
clc
scas
psubb
clc
scas
dec
clc
scas
or
scas
idiv
push
mov
jae
jb
mov
dec
test
std
lea
ds
pop
or
orl
lea
push
xlat
mov
add
leave
das
jg
cmp
and
mov
test
push
cld
cmpsb
jbe
mov
mov
push
jg
in
and
rorb
mov
push
adc
jmp
repz
mov
decb
mov
mov
add
mov
shl
push
jo
pop
xorl
inc
mov
mov
dec
mov
popa
imul
jmp
lgs
into
addl
mov
inc
mov
ss
xor
test
rolb
icebp
and
pop
clc
test
lea
ret
loop
lcall
rcrb
jo
or
jo
mov
xor
mov
xor
cmp
mov
mov
mov
xchg
daa
jno
subl
dec
loopne
rcrb
sbb
loop
mov
pop
mov
mov
pop
mov
dec
into
subl
mov
clc
in
cmp
push
into
pop
cmovae
popf
or
ficompl
mov
cmpsb
mov
orl
repnz
or
lea
das
cmp
loopne
shlb
sti
push
mov
cmc
xchg
imul
jb
mov
cmpsl
cld
orl
mov
test
test
mov
cmpsb
add
mov
jns
xorb
mov
mov
cmpsb
aad
add
mov
test
cmp
mov
sub
test
mov
cmpsl
mov
xchg
ljmp
mov
pop
loopne
pusha
cmp
iret
mov
mov
test
xchg
cld
enter
mov
mov
mov
cmpsb
pop
mov
mov
mov
lcall
cmpsb
mov
test
sbb
cmp
mov
mov
mov
xor
loop
int3
lock
xor
test
jne
sub
orl
add
mov
repz
jns
mov
movsb
mov
mov
jo
imulb
mov
inc
push
sub
clc
adc
loop
call
pop
jp
cmc
pop
mov
mov
jo
das
pop
test
lea
pop
mov
mov
adcb
mov
push
inc
mov
push
inc
ret
test
incb
mov
movsb
push
inc
mov
mov
mov
fwait
dec
rol
orl
out
rorl
mov
xchg
cmpsl
inc
mov
add
push
mov
cmpsl
and
testb
mov
scas
cmpsb
mov
movsl
ljmp
xchg
mov
mov
aad
out
outsl
sbb
mov
jb
ret
push
mov
sti
mov
aaa
xchg
divb
imul
mov
mov
mov
fistpl
or
out
and
xorl
lea
jp
cmc
imul
ret
mov
les
cmc
sub
inc
mov
hlt
fwait
int3
jecxz
dec
xlat
fmuls
xlat
push
pmaddwd
mov
push
cld
mov
and
mov
popa
orl
sti
mov
pop
lahf
rorl
adcl
push
cmpsl
lea
mov
movsl
push
xor
mov
sub
movsb
pop
call
mov
inc
sbb
aaa
mov
shlb
mov
cmp
daa
mov
mov
mov
loop
xor
test
xchg
xchg
movsl
or
fmuls
lea
xorb
xchg
dec
ret
repz
mov
xorb
mov
popa
mov
rorl
scas
xchg
add
ss
mov
xchg
mov
jae
ja
mov
xor
pop
xchg
ja
mov
xor
mov
scas
js
or
cmpsb
jo
loopne
add
add
sbb
mov
xorb
mov
lods
mov
or
enter
mov
mov
sbb
cmpsb
jo
loopne
shl
inc
loopne,pt
sbb
inc
pop
loopne
mov
xadd
lds
lsl
dec
xadd
or
iret
cmovnp
push
or
rcll
ret
testb
or
outsl
mov
cmp
je
cmpl
sbb
addl
mov
dec
or
dec
or
dec
or
dec
or
dec
or
dec
or
dec
or
dec
or
dec
or
dec
or
dec
or
dec
or
dec
or
dec
or
dec
or
dec
or
lret
cwtl
test
mov
loope
inc
dec
loopne
scas
out
cmpsl
inc
or
inc
imul
loopne
test
mov
mov
les
mov
mov
lahf
pop
jge
movb
cltd
mov
xorl
nop
mov
aam
mov
shlb
mov
cmpsl
cmp
adc
mov
mov
cmpsb
shlb
mov
xor
mov
or
mov
xor
sahf
mov
loopne
lret
sub
inc
mov
inc
xchg
loopne
je
inc
shl
inc
xor
inc
adc
inc
jmp
inc
pop
loopne
mov
push
jns
mov
rorl
jg
out
les
inc
sub
mov
inc
lods
outsb
inc
mov
mov
mov
xchg
xor
cmp
mov
inc
mov
lods
orb
pop
mov
add
mov
aaa
mov
mov
inc
movsl
push
mov
push
clc
xorb
cmp
mov
decb
or
cmpl
shrb
adc
mov
xor
mov
mov
in
mov
mov
test
mov
cmp
dec
push
or
in
mov
js
mov
insl
mov
loopne
aad
add
adcb
xorl
daa
mov
mov
mov
ljmp
orb
orl
in
add
cmp
lret
rorb
xchg
lods
test
mov
mov
jp
out
mov
test
jle
imul
test
mov
mov
scas
cwtl
mov
adcl
mov
loopne
shl
shlb
test
adc
mov
les
cmpsl
popa
divb
mov
in
mov
mov
test
mov
mov
addb
push
scas
les
mov
shlb
xor
fcmovbe
mov
xchg
mov
sbb
mov
repnz
mov
ret
mov
std
dec
aas
lods
mov
aad
jecxz
mov
out
add
jg
addr16
mov
mov
mov
pop
or
inc
mov
lfs
mov
fcomip
fisubl
mov
cmpb
int3
cmc
fsubrs
inc
mov
icebp
mov
das
lea
cmc
add
pop
movsb
add
leave
shlb
cmpl
addb
cmp
arpl
mov
das
mov
test
daa
mov
mov
mov
les
movsl
push
mov
shll
mov
cmp
mov
popf
in
mov
mov
scas
mov
aaa
mov
mov
push
cmp
sarb
or
dec
jb
dec
mov
cmp
loop
xchg
mov
jo
imulb
mov
add
or
scas
mov
mov
push
mov
mov
xchg
jb
dec
incb
sbb
insl
xor
loope
mov
ret
mov
mov
mov
stc
mov
push
mov
pushf
fnstsw
jb
popf
les
cmpsb
mov
mov
test
daa
mov
dec
mov
add
sbb
test
pop
add
or
test
mov
cmpsl
lret
incb
xor
mov
cmpb
mov
push
fwait
popa
or
cmpb
mov
mov
mov
clc
or
subb
push
and
xchg
cmp
cmpsl
sbb
ret
or
jmp
sbbl
out
sbbl
sbb
xor
movb
dec
or
dec
cmp
movb
adcl
jp
loopne
aad
and
adc
test
clc
mov
bound
rorb
shlb
mov
mov
loopne
jb
lea
mov
subl
xorl
out
lea
mov
lods
movsb
ret
mov
mov
sarb
out
fnsave
adc
mov
mov
lea
dec
xor
mov
aad
add
push
inc
mov
mov
mov
js
mov
inc
addr16
add
in
and
add
arpl
loope
xorb
pop
popf
pop
mov
mov
mov
leave
testb
shlb
idivb
lods
std
or
mov
push
cmp
adc
push
cmp
adc
jae
rclb
shlb
rclb
shlb
rcl
mov
mov
pop
mov
xorl
mov
sbb
mov
mov
mov
ds
shll
mov
mov
mov
loopne
rorb
stos
test
jbe
inc
mov
mov
aaa
mov
nop
lods
jle
fst
add
mov
mov
loopne
xor
mov
xchg
sbb
leave
mov
rorl
clc
fidivrs
clc
adc
push
mov
mov
push
daa
mov
mov
mov
jb
mov
loopne
sarb
repnz
mov
xor
ljmp
je
test
movb
dec
lods
test
mov
mov
in
test
push
pop
mov
mov
cmp
mov
adc
aad
jmp
jecxz
mov
fwait
imul
test
mov
mov
pop
push
cmpsb
xchg
mov
cmp
or
dec
or
test
enter
orl
or
subl
adcl
mov
dec
mov
xchg
clc
scas
jno
shlb
rcrb
mov
cmpsl
daa
xchg
lea
xor
lea
xchg
mov
jno
mov
add
aam
xlat
add
cmp
rep
mov
push
mov
lea
idivb
test
cmp
adc
mov
mov
mov
daa
mov
jbe
mov
mov
mov
sarb
cmpsl
push
inc
mov
jp
mov
push
xchg
mov
addl
mov
out
roll
rorb
mov
mov
ret
movsb
xchg
mov
and
movsl
insl
sarb
adc
mov
ss
imul
mov
mov
adc
cmpl
mov
outsb
cltd
mov
in
add
jno
lret
xor
shlb
cmp
mov
sub
lock
sub
sti
cmpsb
cmpsb
daa
movsl
push
test
icebp
jne
scas
addl
rol
ret
lea
popl
movsl
cmpsl
leave
mov
mov
push
mov
orl
or
or
decb
mov
sarb
cmp
jle
ljmp
test
lea
adcb
orl
or
daa
mov
mov
mov
xor
aad
add
adc
mov
test
xor
push
mov
movsl
imul
addl
addb
orb
mov
shlb
addl
mov
mov
adc
cmpsb
dec
sti
test
xor
pop
mov
pop
mov
jns
mov
mov
mov
cmp
daa
mov
mov
mov
mov
mov
addb
syscall
xor
mov
or
shlb
mov
xor
movl
mov
ret
and
clc
adc
movsl
cmp
movsb
out
xor
adcl
adc
cmp
stos
call
mov
adc
out
push
mov
mov
mov
mov
mov
mov
imul
test
mov
mov
adc
mov
scas
mov
mov
mov
jb
rcll
cmpsb
adc
and
xor
xchg
pop
paddq
popa
sub
rorl
clc
rcr
mov
aaa
jmp
mov
test
stos
rcr
imul
shlb
adc
cld
icebp
insl
add
mov
out
insl
mov
out
insl
mov
out
insl
mov
add
cmp
push
mov
dec
and
cmp
cmpl
jns
push
mov
dec
les
cmp
mov
or
xchg
mov
push
scas
mov
daa
mov
loopne
mov
out
insl
mov
out
insl
mov
add
add
andb
pop
je
ds
push
insl
and
aad
leave
mov
cmpxchg
add
xorb
movsl
pop
movsb
add
in
mov
jo
orl
or
mov
mov
mov
shlb
mov
mov
or
js
cmp
mov
adc
add
lea
mov
daa
push
test
mov
movsb
or
jbe
imul
adcl
lret
test
add
test
xchg
lea
mov
cli
sub
mov
cmpsl
insl
mov
xchg
daa
lea
mov
mov
lock
js
add
mov
mov
outsb
lock
bound
ret
mov
lock
mov
lock
jns
mov
shl
rcl
test
fstpt
clc
cmp
push
push
mov
mov
out
inc
sub
mov
das
mov
rol
in
dec
shlb
ret
mov
nop
pop
push
push
mov
repz
and
dec
loop
add
test
out
popl
test
sub
xor
xorb
mov
pop
fs
pop
rep
cmp
jb
mov
jb
in
stos
pop
movsl
js
push
mov
mov
sub
test
pop
decb
fidivl
movsb
fdivrl
mov
mov
and
roll
flds
cmp
mov
mov
inc
sarb
mov
adc
cmp
out
cmpsb
lea
sub
cmpl
mov
clc
pop
insl
add
movsl
mov
xorl
cmp
dec
push
mov
aas
idivb
mov
mov
pop
mov
lea
cltd
clc
mov
scas
mov
pusha
cmp
scas
or
mov
mov
dec
mov
and
mov
mov
dec
mov
rorl
popa
mov
out
lods
cmpsb
movb
es
imul
cmp
xchg
mov
mov
mov
loopne
shl
mov
lahf
clc
mov
movsb
inc
mov
sbbb
mov
icebp
test
mov
es
dec
mov
lea
mov
mov
xchg
test
mov
cli
insb
mov
mov
pop
or
mov
pop
in
xorb
in
out
pop
mov
cmp
lds
mov
sbbb
mov
lcall
mov
fidivrs
or
fdiv
lds
jg
xchg
dec
mov
mov
adc
mov
jo
jle
mov
test
mov
sahf
mov
aaa
mov
cmpsl
push
daa
ds
dec
push
clc
cmp
push
lea
movsb
mov
daa
movsl
mov
lock
repz
gs
mov
mov
ljmp
movsb
repnz
mov
mov
mov
into
mov
iret
or
adcb
rcll
mov
lret
fisubrs
dec
mov
adc
push
xorl
mov
xor
sbb
roll
roll
notb
jb
xchg
loopne
shlb
cwtl
daa
mov
fidivrs
pop
sbb
or
arpl
cmp
ss
mov
mov
fcomps
mov
jbe
mov
clc
mov
mov
out
insl
xor
cmpsl
bound
mov
imul
add
mov
mov
lds
lea
subl
mov
jnp
jb
mov
andb
mov
mov
mov
loope
cmpsl
aad
leave
fwait
and
subb
mov
pop
flds
add
lret
mov
mov
mov
jecxz
cmp
jb
xorb
fmull
push
pusha
mov
call
add
sub
mov
loopne
shlb
aad
test
push
jno
test
jbe
and
insb
adc
loope
aas
mov
or
xlat
or
xchg
insb
shrl
jmp
and
cli
ffreep
pop
test
push
mov
nop
jecxz
stos
test
insb
daa
andb
int
inc
jae
pop
mov
jl
int3
movsb
loopne
xchg
xor
mov
std
daa
call
fisubl
add
xchg
push
clc
jno
dec
scas
test
ret
orb
xlat
push
movsl
push
in
ja
add
popa
inc
xchg
sub
sub
aad
leave
dec
in
arpl
adcb
in
adc
mov
dec
or
test
fpatan
add
into
pop
pop
imul
mov
test
mov
cmpsl
in
pop
int3
in
sbb
xor
aas
test
sub
test
add
stos
test
ret
movsl
flds
push
and
xchg
stc
lahf
test
data16
jmp
jns
int3
in
push
fistpll
add
loopne
cmp
mov
ret
shlb
mov
mov
out
mov
cmp
mov
daa
pop
aam
mov
ret
jns
add
mov
int
rorl
loop
shrb
mov
jb
je
cmc
lods
or
jb
mov
rorl
mov
mov
out
icebp
mov
or
shll
ret
fld
dec
xor
rorb
leave
or
shl
ret
jo
sbb
std
sarb
xor
xor
mov
or
movsl
fistpll
shlb
cmp
xor
add
mov
aaa
mov
cld
sarb
imul
cmp
mov
sbbb
dec
mov
testb
or
cmpsl
shll
mov
or
dec
shlb
ret
cmp
sarb
out
mov
sbb
rol
cmovl
mov
xor
jg
decb
out
add
mov
mov
jbe
mov
jno
aas
sar
cmp
shll
ret
add
aaa
fsubs
mov
testb
repnz
inc
or
movsl
cmp
cmpsl
mov
aas
lss
or
mov
shlb
sarb
mov
xor
xor
rorb
or
add
ret
jl
cmp
or
or
mov
orl
cmpsb
sarl
shl
icebp
xor
je
jbe
dec
mov
rorb
mov
mov
mov
shl
shlb
jne
ja
mov
xchg
mov
pop
stos
add
mov
xor
ret
shlb
mov
psrad
les
bound
movsb
in
into
mov
jno
pop
aam
mov
enter
mov
je
jo
lcall
dec
ja
mov
rorl
or
lea
fs
shlb
ret
mov
xor
test
rorl
ret
add
in
andl
sti
sarb
ret
mov
or
xor
out
andl
sarb
icebp
shll
mov
mov
or
roll
ret
mov
shlb
cmp
shll
lret
mov
add
andb
cmpsl
jns
cmp
pshufw
or
shrb
add
mov
sar
sarb
mov
jbe
dec
cmovp
inc
or
sar
ret
jge
aas
shl
shl
xor
or
mov
sbb
data16
les
mov
shlb
repz
getsec
mov
rorb
rorb
rcl
mov
ud1
mov
mov
mov
mov
mov
lret
rorb
adc
clc
mov
mov
andb
pop
add
out
sbb
inc
jnp
or
scas
jnp
js
movsl
or
scas
ret
rol
ret
lret
mov
shl
mov
mov
and
mov
ja
or
mov
pop
mov
movsb
or
sbbb
xchg
push
xlat
into
fildl
inc
shlb
dec
enter
rorb
aam
ret
jno
lea
mov
rorb
dec
or
rcl
loop
and
push
insl
mov
data16
sti
or
xlat
mov
ss
test
cmp
dec
test
mov
imul
shlb
test
or
leave
sub
lcall
in
je
mov
sbb
ljmp
es
inc
sub
out
fadds
mov
in
loop
mov
jns
rolb
outsb
insb
cmp
icebp
lcall
push
mov
movsb
jb
mov
push
fdivp
adc
and
and
int3
mov
mov
fstp
fadds
bound
add
shll
femms
jg
fmulp
sahf
adc
movsb
lret
subl
mov
push
xchg
sub
sbb
inc
xchg
leave
pop
add
mov
test
lret
mov
cltd
xor
inc
stos
add
rep
sbb
jns
or
frstor
inc
sbb
movl
popf
stos
mov
aaa
xchg
cmp
inc
test
add
scas
xor
add
mov
insl
cmp
mov
mov
dec
mov
into
ret
repz
lret
jb
orb
das
and
sbb
arpl
inc
lock
daa
jb
inc
pop
xchg
sub
mov
call
ud0
xchg
mov
inc
faddl
cmp
movsb
sub
popf
inc
jae
pop
filds
test
xor
inc
enter
jae
out
mov
add
sti
lds
cmp
lret
punpckhdq
mov
inc
xor
test
orb
mov
dec
insb
jns
inc
push
in
jmp
stos
jp
pop
cmp
mov
xor
in
fwait
mov
add
pop
lea
and
jno
mov
push
test
scas
pop
adc
sar
mov
add
jmp
xorb
pop
sbb
repz
jmp
movsb
pop
xchg
xchg
mov
seto
data16
stos
sti
mov
mov
pop
inc
data16
and
sub
xchg
int
mov
push
into
mov
jo
push
pop
xlat
dec
test
or
rcrl
xchg
addb
imul
push
mov
add
mov
je
mov
test
ret
popf
mov
iret
rorl
cmc
nop
addl
pusha
int
sub
pop
mov
jmp
mov
imul
js
gs
ret
xchg
sub
adc
dec
ss
inc
mov
mov
mov
jg
inc
fbld
test
mov
test
and
xor
mov
test
es
andl
test
xchg
xor
repnz
adc
into
sub
cld
xchg
in
add
test
cmp
cld
xor
ret
mov
dec
test
mul
mov
inc
and
inc
dec
xchg
or
jl
jmp
out
pop
out
daa
mov
jb
pop
inc
in
test
add
fstpt
in
addr16
movsb
xor
out
hlt
mov
cmpsb
cmp
mov
sbb
inc
ja
fnsave
aam
xchg
sbb
gs
test
mov
sbb
dec
dec
sahf
xor
mov
and
test
loope
dec
add
mov
aam
cmpsl
xor
and
scas
xchg
int
out
or
in
mov
mov
scas
aaa
mov
inc
les
iret
fcoml
stc
mov
cmpsl
sub
les
sub
in
test
in
cmpsl
jns
cmc
fwait
dec
mov
les
pop
mov
call
sub
in
mov
push
shll
aam
fisubs
or
sub
xor
xchg
mov
test
mov
fucom
mov
jmp
in
sbb
inc
sbb
mov
sub
lods
adc
js
push
lret
mov
hlt
mov
dec
ljmp
and
mov
dec
div
pop
mov
test
clc
cwtl
imul
mov
inc
fsubrs
adc
cmp
mov
sub
or
test
mov
cmc
out
fstps
mov
add
test
push
add
outsl
fwait
jbe
mov
add
iret
hlt
push
inc
mov
xchg
xchg
and
pusha
ret
and
les
cltd
mov
mov
xchg
sbb
arpl
lahf
movsb
add
fdivs
inc
pusha
test
mov
jnp
test
inc
jns
negb
or
stos
xor
or
in
fsubs
call
mov
out
mov
mov
xor
lock
pop
movsb
mov
and
pop
or
test
push
add
mov
fldl
hlt
mov
xlat
cmp
mov
cmpsb
mov
pusha
test
out
sti
hlt
pop
sub
loopne
loop
mov
push
shll
add
lods
popa
pop
mov
mov
scas
sub
sbb
test
loope
inc
ss
add
adc
in
mov
mov
out
xor
or
les
pop
xlat
lea
mov
xchg
xor
sbb
dec
repz
in
inc
lods
bound
or
pop
mov
movsl
stc
fadds
movsb
lock
stos
shrb
addl
xchg
jne
ljmp
mov
cmp
insb
jl
movsb
xor
jno
sub
stos
or
jge
mov
movsb
enter
mov
push
in
mov
mov
mov
pushf
enter
cwtl
outsb
bound
mov
lret
mov
jg
mov
inc
sub
mov
loope
ds
cmc
outsb
sbb
movsb
cs
sti
cmp
xor
mov
bound
mov
cltd
rcrb
testl
jp
in
xchg
adc
ret
jg
dec
pop
sub
inc
cmc
dec
les
gs
lock
pop
mov
fnstsw
iret
test
ret
lret
add
push
movb
adc
in
out
addr16
stos
push
push
icebp
test
aas
lcall
out
mov
mov
into
mov
lods
push
iret
arpl
cld
hlt
dec
and
inc
mov
lds
insb
les
aam
jne
test
test
or
add
test
test
std
popf
sbb
call
or
mov
push
pmulhuw
repnz
mov
scas
jo
xor
pushf
iret
mov
addr16
inc
xchg
test
ret
dec
movsb
insb
mov
mov
test
decb
outsb
mov
mov
jl
andb
pop
imul
sbb
int3
imul
cmpsb
xchg
mov
mov
test
sbb
jecxz
adc
outsb
xor
andb
cmp
and
xchg
dec
pop
jo
sub
test
inc
lea
add
pop
and
sahf
std
mov
sbb
sti
sub
xchg
push
inc
rorb
in
cmp
pop
sub
push
fldl
out
movsb
cmpsl
xchg
int3
test
xor
lock
sbb
popa
sub
sub
mov
pop
add
jl
test
mov
push
and
inc
pop
idivb
rclb
loopne
inc
mov
sub
and
cwtl
sti
mov
sub
xor
cmpb
mov
mov
test
sub
sbb
ljmp
int3
loopne
cmp
jns
add
dec
add
leave
inc
iret
rcrb
mov
lea
call
mov
mov
add
adc
shlb
mov
xchg
mov
mov
lea
cmp
in
xorb
push
in
dec
inc
mov
test
stos
dec
js
in
lea
mov
lret
dec
jle
cmp
movsb
outsb
repz
test
jecxz
inc
jne
and
xchg
pop
mov
cmp
add
inc
sbb
hlt
fsubl
pop
mov
bound
test
mov
arpl
movlps
jl
mov
fs
fsts
push
out
lfs
outsb
xchg
ss
mov
sbb
cmpsl
inc
mov
mov
dec
pop
pop
shrl
mov
in
xlat
dec
inc
outsl
push
push
roll
idiv
stos
out
mov
pop
mov
rcl
cmpsb
cwtl
dec
fnstcw
and
in
fildl
mov
push
pop
inc
fistps
inc
mov
jne
addr16
or
mov
mov
cs
test
fldcw
lahf
and
loopne
cmpsl
jmp
popa
cmpsb
sbb
inc
pop
lahf
ss
out
jb
mov
loop
test
xchg
push
iret
sub
or
movsl
movsb
push
mov
or
test
inc
test
outsb
ret
adc
fists
insb
aas
and
mov
out
cmp
mov
outsl
insl
mov
test
jne
rol
mov
lret
sbb
pop
mov
and
inc
and
mov
and
mov
test
scas
add
sbb
fidivs
ss
data16
test
dec
aam
gs
inc
xchg
int
test
int3
adc
arpl
mov
clc
pop
inc
je
adc
push
lcall
mov
movsb
add
insb
mov
pop
inc
mov
test
jae
mov
inc
cmpsb
bound
or
test
add
movsb
xchg
dec
pop
xor
mov
mov
test
das
sub
rcr
adc
cmpsl
xchg
repz
sub
fs
add
push
jbe
push
cld
cmp
lock
arpl
cwtl
add
or
or
mov
dec
and
sub
jbe
cmp
push
test
adc
hlt
nop
cmc
and
push
dec
pop
js
mov
push
test
xchg
je
lret
call
pop
fwait
pop
inc
pop
inc
mov
mov
mov
mov
push
mov
clc
test
jbe
pop
adc
sub
or
rolb
adc
mov
arpl
cmp
es
mov
mov
test
arpl
test
inc
hlt
lcall
xor
loope
lret
sub
inc
mov
movsb
sbb
add
scas
inc
movsl
cmp
aam
pop
dec
gs
inc
mov
inc
mov
in
rol
and
sbb
mov
aaa
and
gs
or
mov
pop
lds
mov
test
and
mov
or
mov
mov
pushf
and
lret
addb
mov
ja
adc
adc
or
mov
test
push
sub
test
dec
mov
inc
cmp
push
add
sub
mov
icebp
mov
scas
sub
popa
sbb
faddl
add
pop
add
push
lods
mov
frstor
ss
loopne
sti
xor
repz
pop
xchg
jns
andb
shll
test
adcb
subb
mov
jge
mov
jecxz
movsb
add
arpl
push
mov
xor
add
in
pop
fcoml
jmp
orb
push
test
in
pop
es
mov
sbb
mov
mov
mov
aam
out
test
adc
test
sbb
inc
sbb
lcall
fst
pop
and
mov
lds
mov
and
sbb
movsb
fisttpll
inc
inc
mov
les
lret
or
imul
pushf
push
push
enter
jmp
jg
or
mov
test
out
xor
insb
jmp
cmpsb
iret
pop
and
push
inc
fidivrs
test
cmp
xchg
stc
mov
dec
xchg
cmpsl
repnz
movsl
rcr
stos
daa
cmc
mov
test
adc
cmp
int
fnsave
sub
subl
sub
push
icebp
mov
push
fiaddl
or
jg
int3
test
shr
sti
mov
pop
out
dec
sbb
fwait
ss
test
int3
test
mov
add
push
and
test
jge
js
fisttpll
scas
daa
stos
lods
xor
mov
sub
test
loopne
iret
pop
add
addb
mov
dec
test
je
pusha
mov
pushl
and
dec
cli
aad
mov
mov
inc
into
das
stos
cmp
out
test
jo
pop
arpl
test
mov
ret
pop
test
repz
clc
mov
test
movsb
movsb
cwtl
jns
fadds
pop
test
mov
cld
jl
jbe
test
movsl
outsl
mul
lahf
insb
or
sub
cmp
arpl
cmc
push
rcrb
rcrl
test
pushf
imul
mov
add
inc
ja
or
hlt
insl
loope
add
aad
sahf
mov
and
nopl
push
ljmp
insl
sbb
inc
hlt
inc
dec
fsubs
pop
jo
aas
sbb
lods
ds
les
jg
movl
mov
je
test
push
and
mov
scas
ret
xchg
lea
in
loop
cmp
mov
movsb
popa
inc
adc
jae
mov
bound
xchg
test
enter
adc
mov
mov
test
mov
sbb
cli
inc
mov
mov
xor
repnz
loopne
jnp
xor
orl
and
aas
inc
add
cli
mov
aaa
and
insb
and
stc
inc
mov
xor
dec
and
add
add
call
faddl
movsb
xchg
addl
cmp
or
inc
hlt
mov
mov
push
xlat
stos
aaa
jl
inc
or
inc
lcall
sub
lods
inc
rcll
test
inc
jne
jno
lods
mov
rcrl
mov
icebp
jge
ret
mov
mov
pusha
cmp
pop
cld
cmp
inc
pushf
mov
in
in
scas
cmp
adc
loope
pop
test
xor
dec
lods
dec
push
push
mov
ret
test
popa
in
xchg
aam
mov
cmp
adc
rol
xor
pusha
test
cmp
cmp
xchg
pop
in
dec
aad
mov
jb
mov
sub
adc
arpl
add
mov
rcrl
and
sub
jne
loop
test
sbb
jecxz
movsb
xchg
clc
and
popa
mov
out
mov
push
mov
and
adcl
cld
sub
lock
dec
shlb
les
fwait
shll
pop
test
xchg
sahf
inc
addl
mov
divl
sahf
or
adc
add
sub
xchg
mov
or
gs
test
mov
cmp
add
test
or
int3
push
sarb
test
cmc
mov
inc
and
hlt
lret
mov
push
pop
sub
mov
mov
mov
icebp
out
xlat
xor
pop
cmp
adc
lcall
mov
ja
add
loop
roll
addr16
sahf
mov
lahf
fwait
loope
inc
movsb
mov
dec
or
inc
cmp
cmp
in
hlt
jno,pt
int
xor
dec
test
test
lcall
daa
xor
and
mov
push
mov
jecxz
outsl
repz
divb
xchg
test
arpl
movnti
cmc
push
dec
cmp
pusha
loop
pop
loope
cmpl
je
push
stos
dec
test
sbb
inc
psubb
inc
in
or
out
xchg
or
test
pusha
divb
aad
adc
jbe
loop
in
mov
fdivrl
mov
sub
test
push
push
sbb
in
orl
ret
ret
je
inc
movsl
mov
test
mov
xor
add
and
sbb
dec
sbb
inc
lea
imul
xor
in
mov
aaa
add
pusha
inc
ds
pushf
dec
dec
cmpsb
les
dec
add
nop
push
jbe
icebp
inc
xchg
or
cmp
mov
mov
xchg
aam
jae
pop
inc
pop
sub
stos
clc
or
aad
test
or
aam
test
daa
add
push
lcall
push
outsl
fdivrs
sti
insb
cmp
in
in
push
cmp
pop
test
out
sbb
mov
mov
adc
gs
lret
sub
loope
add
xlat
test
add
test
adc
decl
pop
mov
sbb
sti
test
test
adc
mov
jne
inc
mov
lea
xchg
aam
scas
popa
mov
mov
test
lods
mov
xchg
addr16
shrl
mov
pop
dec
and
cmp
mov
inc
pop
xor
aaa
or
add
shll
mov
test
sbb
dec
push
or
hlt
rcrb
pop
inc
cwtl
lock
and
scas
lahf
test
sub
out
push
test
push
loopne
outsb
test
dec
or
test
in
cmp
inc
fiadds
mov
mov
mov
lret
mov
les
adc
sti
stos
mov
gs
or
adc
sub
testb
test
outsb
into
sbbb
push
data16
inc
sahf
adc
pop
inc
push
inc
xlat
test
mov
add
arpl
sub
lods
push
fidivrl
scas
mov
call
mov
xchg
test
incl
or
sbb
push
xor
movsb
pop
cmp
xor
jmp
fucomip
outsl
movsl
nop
cmp
imul
mov
pop
inc
cmc
pop
ret
cmc
mov
mov
test
arpl
test
test
sbb
jp
cmpsb
ljmp
loop
pop
mov
enter
insb
dec
fidivl
arpl
add
fstpt
or
mov
or
lcall
inc
mov
mov
mov
insb
and
addl
dec
rcll
movsb
repnz
popa
hlt
adcb
test
ss
xor
test
icebp
mov
int
jne
test
sbb
inc
dec
decb
test
mov
and
out
aas
popa
pop
xchg
inc
add
test
cmp
inc
cmp
test
cmp
adc
xchg
dec
cs
mov
ss
test
pop
cs
cld
and
jns
jl
es
adc
sub
push
movb
pop
xor
test
scas
and
je
roll
lods
ljmp
sub
lcall
sub
in
and
ret
test
cmp
pop
stos
rorb
cmp
test
out
outsl
ret
std
mov
push
mov
pop
stos
add
enter
test
cmp
sub
inc
out
pop
pop
les
adc
ret
addl
movsb
mov
das
notb
in
test
shll
mov
mov
stos
push
in
mov
ret
push
mov
movsb
lods
cmp
test
mov
add
and
add
mov
loop
fucom
test
or
out
movl
clc
test
pop
andl
stos
nop
shrb
or
mov
xlat
test
push
add
inc
sub
mov
lock
pop
int3
mov
pusha
cld
mov
push
ret
push
jle
std
cmp
mov
ds
test
rcr
adc
shlb
inc
in
mov
out
mov
movsb
test
hlt
loopne
pop
add
mov
or
mov
jecxz
mov
gs
test
pop
xchg
mov
imul
mov
fmull
jge
lds
mov
out
cmp
icebp
test
jg
xor
mov
mov
xor
mov
std
lock
movsb
or
dec
aaa
mov
and
jecxz
fwait
ljmp
and
adc
add
adc
mov
fstl
in
je
loop
aam
jnp
fdivrs
push
dec
arpl
mov
and
mov
pop
jmp
mov
xor
pop
or
inc
push
push
push
stc
test
faddl
mov
push
movsb
xor
in
mov
push
mov
add
adc
dec
add
cld
into
adc
fildl
sbbb
mov
sahf
in
jecxz
or
sbb
shlb
mulb
in
sub
fwait
add
jne
mov
push
cmpsl
mov
test
test
push
lods
lret
xchg
test
fisubl
cli
stos
cwtl
popf
add
xlat
cmp
add
mov
int3
pop
push
sbb
loop
addr16
test
mov
push
mov
mov
popf
mov
test
arpl
mov
inc
icebp
lret
test
ret
inc
mov
js
mov
xchg
in
jne
or
fnsave
inc
mov
aam
inc
pop
int3
repz
mov
jnp
inc
jae
push
test
xorb
ljmp
mov
les
mov
add
mov
movsl
lret
cmp
xchg
jae
cmp
sti
or
loop
lsl
mov
daa
push
ds
cmp
push
add
sbb
test
push
mov
aas
nop
add
call
mov
aaa
sub
scas
mov
dec
cwtl
and
in
ret
push
enter
or
sbb
fistpll
movsl
sub
inc
add
cmpl
xchg
sub
js
shll
test
jno
test
movsb
and
dec
cmpsb
ja
rclb
imul
test
jnp
push
stos
aam
or
aaa
push
jp
mov
js
std
icebp
je
int
imul
pusha
and
adc
dec
sahf
subl
and
iret
das
sub
cmp
stos
add
mov
addr16
pop
add
push
testl
movsb
mov
call
push
icebp
inc
incb
int
je
mov
jle
mov
lods
in
inc
sbb
mov
rorb
les
xchg
pop
mov
ret
inc
test
mov
add
xchg
pop
sub
lds
andb
in
test
sbb
mov
dec
ficomps
aas
sub
mov
xchg
pop
push
push
fs
movsl
shr
inc
push
leave
inc
cmp
mov
cmc
orl
or
dec
out
arpl
dec
jno
aam
cmp
jo
mov
cmpsb
insb
mov
add
push
lret
push
movsb
and
mov
fs
je
les
mov
movsl
cmpsb
add
pop
push
adc
mov
test
das
cs
and
jecxz
jmp
sub
sbbb
movsl
icebp
addb
push
pushf
mov
push
cmpl
jbe
xchg
jp
push
test
pop
cmp
in
dec
sahf
or
and
test
stos
int3
lret
mov
push
es
add
outsl
arpl
clc
loop
sub
pop
fwait
loopne
mov
push
shl
mov
test
inc
inc
push
adc
pop
adc
in
mov
mov
push
in
hlt
jne
test
xchg
or
les
insb
mov
divb
in
cwtl
mov
hlt
test
jo
jp
pop
inc
icebp
mov
insl
arpl
adc
sbb
bound
or
inc
push
loop
sub
addb
inc
push
cld
xchg
sub
adc
jno
popa
sub
xor
test
lods
dec
and
or
cli
pop
inc
and
push
add
out
sub
and
in
test
inc
jno
inc
popa
cmp
hlt
test
cmp
out
add
nop
je
or
cmpb
loopne
pop
lods
insl
cli
test
adc
push
repz
in
pop
int
cmpsb
loope
popf
mov
movsb
add
daa
jno
dec
jl
pop
cmp
add
loopne
test
leave
clc
cmpsl
imull
lret
test
int
cli
in
les
arpl
loope
sub
inc
loopne
dec
sarb
or
mov
jne
pop
out
in
into
lea
cmp
add
cli
pop
aam
cs
mov
cmpsb
in
cmp
inc
mov
aas
mov
sub
mov
repz
rclb
inc
and
bswap
in
test
das
imul
test
ljmp
and
aaa
pop
xchg
or
jle
pop
and
mov
xchg
js
cltd
inc
mov
jmp
je
clc
and
mov
ss
js
xchg
fistps
movsl
shlb
add
xlat
shrl
inc
xchg
xor
push
mov
out
repnz
stos
mov
fsubrl
arpl
push
mov
push
lret
mov
mov
les
test
cmp
pop
test
sarb
lea
mov
cld
aad
call
sub
mul
mov
jae
lds
inc
jge
ljmp
pushf
cld
cmp
inc
test
shlb
inc
je
mov
arpl
subl
mov
sub
cmp
mov
movsl
mov
hlt
add
fadds
cmp
cmp
test
outsl
or
push
xchg
test
mov
and
les
faddl
add
mov
movsb
jmp
inc
std
pop
push
test
or
mov
jge
xor
mov
das
in
mov
movsl
inc
stos
inc
sub
in
adc
enter
mov
lds
jg
hlt
test
mov
in
push
ficomps
loop
mov
fidivl
inc
les
lcall
mov
test
jbe
sbbb
mov
movsl
mov
jae
test
nop
sub
dec
aaa
inc
pop
mov
cmp
or
in
xor
pop
stc
jp
add
and
jne
or
in
mov
cwtl
loop
mov
in
xor
mov
and
in
mov
cltd
out
ds
mov
inc
lock
fildl
push
lea
in
divb
ds
enter
adc
test
mov
xlat
and
arpl
cmpsl
test
stc
mov
push
icebp
mov
add
jb
test
and
push
les
into
sbb
jle
gs
cmpsb
test
stos
inc
movsb
std
cli
dec
test
pop
fsubr
data16
lea
mov
aam
inc
popa
test
jmp
xchg
test
xchg
dec
mov
mov
fsubrl
nop
push
fwait
pop
mov
stos
outsl
test
xchg
mov
xor
add
mov
dec
dec
inc
add
push
jecxz
mov
arpl
xlat
mov
in
rcr
cmc
movsl
ror
cmpsb
xchg
push
dec
decl
enter
sbb
cmp
mov
ljmp
mov
lret
test
mov
pop
pop
mov
lcall
aad
idivb
dec
arpl
lret
js
xchg
test
test
add
pop
mov
test
and
and
add
add
or
lock
mov
test
enter
fcmovnbe
mov
cmc
jg
cltd
loopne
cmp
mov
stos
shr
out
movsb
sub
test
add
je
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
add
fs
imul
add
cmc
cmc
cmpsb
jmp
mov
lcall
movl
xchg
ret
mov
repz
shrl
push
sbb
cmc
xchg
stos
and
in
mov
loop
in
pushf
push
jle
sbb
sbbb
adc
repnz
dec
xchg
pop
push
add
inc
gs
jns
je
insl
dec
gs
imul
test
sub
mov
pushf
jmp
btr
bsr
movzbw
mov
pushf
sub
pusha
pushf
rep
bswap
pop
mov
mov
lea
jmp
push
call
push
ljmp
dec
dec
xor
cs
insb
add
jmp
add
inc
insb
outsl
bound
inc
gs
gs
inc
je
insl
add
fs
ja
pushf
sub
test
bts
movzbw
lea
add
ror
mov
call
add
push
gs
arpl
insb
insb
push
outsl
jae
add
push
je
outsb
push
arpl
scas
bound
call
and
xor
add
je
jb
arpl
jae
gs
jo
push
call
loopne
sub
jns
stc
push
cmp
test
push
pusha
pusha
or
call
shr
clc
ror
dec
add
mov
shrd
add
bsr
shrd
add
add
add
cmp
push
mov
test
pushf
shr
stc
cmp
push
lea
je
clc
stc
cmc
stc
cmp
push
lea
je
pushf
add
jg
clc
cmp
cmp
push
pusha
pushf
call
push
call
sbb
dec
jb
push
cmp
pushf
call
push
call
fdivs
fs
call
push
pushf
adc
pushf
lea
call
push
pushl
lea
jnp
jb
pusha
pusha
pushf
mov
pushl
ret
pop
pushf
push
call
mov
add
inc
gs
inc
dec
inc
push
add
test
aad
call
fs
jmp
call
clc
cmp
call
clc
pusha
cmc
add
pusha
bt
cmp
call
add
push
outsb
push
imul
outsl
outsl
imul
into
faddl
push
das
jle
sub
cmpsb
or
add
mov
mov
inc
test
push
jecxz
mov
pop
inc
adc
vpaddusw
mov
jp
ror
push
call
add
dec
jae
popa
fs
gs
fs
je
add
add
arpl
insb
add
add
je
imul
addr16
js
add
inc
insb
outsl
bound
inc
fs
je
insl
inc
add
add
sar
enter
idiv
push
call
aad
xor
cmp
jbe
cmp
jae
sti
inc
mov
mov
mov
xchg
and
daa
fcmovbe
rol
adc
shr
cli
push
in
push
mov
movsl
rorb
stos
sub
cltd
push
repnz
popa
cmp
enter
pop
sti
inc
les
add
sub
sbb
lcall
test
sbb
ds
jecxz
dec
adc
inc
jb
popa
je
push
push
add
jns
jae
mov
add
push
imul
add
add
je
outsl
jns
arpl
add
dec
and
lods
xor
mov
xchg
orl
mov
push
fisttps
or
mov
sub
mov
jns
in
stc
pusha
in
inc
pop
push
fs
cmc
lret
repnz
js
sub
jmp
pinsrw
fsubrl
out
outsl
sarl
mov
pop
pop
adc
fildl
add
jbe
dec
jne
push
outsb
jo
gs
jb
dec
gs
fs
test
clc
jmp
add
inc
outsl
push
gs
imul
popa
jae
dec
bound
arpl
lcall
mov
sbb
mov
iret
cmp
xchg
dec
fsubrs
fwait
addr16
shrb
adc
and
mov
cmp
cltd
mov
inc
imul
mov
sar
femms
and
cld
adcb
push
out
daa
rcll
daa
add
out
add
jbe
dec
jne
dec
jo
outsb
add
push
call
mov
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
je
gs
inc
js
outsb
je
outsl
imul
pushf
rep
movsbw
mov
pushf
pushf
lea
jmp
add
push
gs
imul
outsl
arpl
jae
repnz
pushf
push
lea
jne
adc
bsf
or
shl
mov
rcl
adc
and
sub
lea
bts
sbb
sbb
mov
call
inc
rcl
sbb
xchg
lahf
lea
mov
and
mov
test
cmp
push
pusha
xchg
bts
rcr
push
mov
pushf
test
sub
mov
pushf
movw
rep
movsbw
call
add
push
gs
imul
add
or
push
cli
incl
add
je
gs
inc
outsl
insb
outsl
jb
add
dec
outsl
popa
fs
gs
jne
arpl
add
inc
gs
jns
je
insl
inc
imul
jns
add
add
je
imul
js
inc
add
leave
xchg
jmp
add
inc
gs
outsl
insb
jne
gs
outsb
outsw
jb
popa
je
outsl
outsb
inc
add
add
je
imul
outsb
je
js
dec
gs
jo
fs
inc
jge
decl
sbb
gs
lea
jmp
pushf
lods
pusha
cmc
not
pushl
ror
sub
sar
xor
dec
add
adc
add
mov
rcr
ror
jmp
push
call
jbe
pop
cmc
mov
ja
mov
add
dec
std
pop
jg
add
gs
je
dec
arpl
inc
jb
insl
push
gs
jne
arpl
add
dec
outsb
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
jmp
add
dec
jae
push
push
call
or
mov
shlb
adc
lcall
add
je
jb
jo
add
add
je
jb
arpl
jae
gs
imul
movl
xor
lea
jmp
call
add
inc
jb
popa
je
push
arpl
outsb
add
cmc
jmp
add
inc
outsl
push
popa
jae
dec
gs
inc
insb
insb
outsl
arpl
add
inc
insb
outsl
bound
inc
insb
popa
addr16
xchg
adc
jp
repnz
mov
inc
enter
xor
lock
stos
xchg
xchg
xchg
addr16
sbb
mov
push
stc
jmp
inc
mov
pusha
or
mov
in
inc
fcmovnbe
fmull
or
ja
stc
mov
les
cmp
stos
sub
sub
mov
and
mov
sub
ret
add
push
gs
popa
jb
outsb
je
add
inc
gs
arpl
insb
insb
push
outsl
jae
nop
mov
push
add
aad
stos
mov
les
rcl
push
in
jg
add
push
scas
add
rclb
nop
and
push
pushf
or
and
inc
push
jmp
add
mov
pusha
lea
jne
jmp
push
jbe
popf
mov
cwtl
pop
pusha
je
cmp
repz
xor
stos
roll
in
jmp
mov
cmp
push
add
xchg
testl
stos
sub
pop
pop
xor
mov
push
in
mov
cmp
sub
nop
sub
rcrl
lods
cmc
pushf
clc
ror
call
add
inc
gs
imul
outsl
jb
push
call
mov
not
setnp
bswap
pop
jmp
add
inc
jb
popa
je
push
imul
inc
add
call
lea
je
pushf
pushf
pushl
lea
jmp
lea
je
pusha
pusha
mov
mov
lea
jmp
pusha
lea
jb
bt
stc
test
push
cmp
movb
pushf
pusha
mov
lea
jae
shl
mov
dec
movzbw
mov
xor
adc
mov
cmc
cmc
cmc
test
xor
call
add
push
arpl
gs
imul
inc
js
inc
js
scas
and
mov
fstl
cwtl
stos
repz
push
mov
jnp
mov
add
movsl
xchg
and
xchg
jnp
jns
je
cmp
pushf
addl
scas
movsl
jo
sbb
add
js
dec
js
sub
lret
cwtl
mov
sub
xor
mov
sub
les
dec
add
push
gs
jne
jae
jb
outsl
jae
add
inc
js
push
gs
dec
jne
inc
add
call
pusha
jmp
push
call
in
loope
add
inc
gs
jb
imul
imul
jmp
pushf
jmp
pushf
pushf
jmp
add
push
imul
outsl
insl
push
outsl
imul
cmpsb
lret
in
sti
packsswb
and
stos
xchg
imul
mov
cwtl
xor
sbb
cmp
mov
xchg
and
int3
es
hlt
stc
add
push
bound
jg
xor
xchg
leave
add
cmp
call
push
movsl
shll
mov
sarb
dec
pmullw
cmp
pop
dec
add
cli
dec
cmp
and
add
pop
mov
cmpsl
cltd
mov
test
inc
into
mov
clc
xor
test
push
pushf
add
call
lea
jo
stc
ror
jmp
push
xchg
neg
mov
cmp
bt
sub
jle
cmp
sub
pusha
jmp
add
inc
gs
gs
je
jo
imul
cmp
je
cmp
jnp
out
stos
orl
gs
or
mov
push
mov
ret
test
sti
into
imul
mov
sbb
adc
dec
test
push
push
mov
fs
jne
pushf
movzwl
add
bt
movzbw
btc
mov
push
add
stc
cmp
mov
clc
mov
test
call
call
lea
jne
push
pushl
jmp
add
inc
gs
bound
arpl
add
inc
gs
je
imul
inc
add
add
outsb
push
jb
outsb
je
jb
add
add
jb
insl
jo
inc
add
pop
iret
shlb
ja
jg
out
or
mov
xor
xchg
jmp
notl
orl
lea
push
ljmp
pushf
push
adc
movsl
ljmp
pop
mov
or
pop
lea
jp
cmp
push
mov
movsb
xchg
fistpll
xchg
sub
mov
loop
push
addl
xchg
test
into
and
ret
jmp
std
mov
add
je
popa
jo
jne
add
add
fs
jne
jae
jb
add
mov
jb
hlt
push
add
insl
mov
push
call
push
cmp
jb
ja
arpl
inc
js
add
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
inc
add
xor
xor
fs
insb
add
add
push
gs
js
gs
imul
gs
add
inc
push
jo
jb
add
inc
and
pop
loope
add
inc
and
movb
pushl
ret
add
mov
inc
call
out
or
pop
and
and
lods
mov
pop
ds
addl
out
test
sub
mov
mov
movsb
add
push
into
mov
dec
sbb
lret
and
dec
int
xor
sbb
testl
daa
std
jnp
fidivrl
cmpl
in
fsubrl
fs
aaa
lock
in
pop
jl
hlt
fsubs
imul
ja
jg
lcall
in
xchg
jl
xchg
je
test
pop
add
sub
push
jmp
subl
fmuls
aad
cli
enter
shl
or
inc
or
fstp
add
push
gs
insb
imul
je
add
add
popa
jb
push
popa
add
add
je
gs
dec
gs
imul
and
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
and
jae
push
movb
push
lea
je
test
jmp
call
add
inc
gs
popa
jo
outsl
fs
add
je
push
dec
outsl
arpl
add
add
imul
add
dec
outsl
arpl
imul
add
pushf
movb
add
mov
pushl
lea
jmp
cld
and
jp
sarb
cmpsb
and
lcall
and
sub
push
outsb
je
jmp
out
dec
lret
js
cmp
inc
sahf
sub
push
negl
jnp
xchg
sbb
mov
loopw
addr16
popa
mov
push
loope
insl
rolb
xchg
xchg
or
mov
stc
jecxz
mov
ror
mov
mov
mov
mov
lods
clc
cmc
ror
movb
xor
movw
clc
call
add
push
insb
jae
gs
popa
insb
jne
add
add
je
imul
add
inc
outsl
push
imul
jae
popa
addr16
imul
insl
imul
insl
inc
insb
outsl
jae
add
add
je
arpl
gs
imul
add
je
imul
dec
jb
inc
js
lea
ja
cmp
shr
clc
cmp
pusha
lea
je
cmp
call
lea
jae
stc
stc
sub
push
pushf
lea
call
pushf
lea
jae
bt
cmp
push
test
sub
pushf
call
jg
push
pushf
mov
lea
jne
shr
mov
bsf
sub
sbb
mov
mov
stc
sub
test
call
add
inc
gs
imul
pushl
rep
pop
pop
mov
mov
pushf
lea
jmp
add
dec
outsl
arpl
inc
jb
add
push
fcmovu
xchg
cmc
sbb
cs
dec
xor
xchg
dec
std
mov
stos
mov
mov
pop
and
shl
out
jmp
jo
dec
jae
adc
lret
lahf
hlt
and
enter
jecxz
lcall
stos
sub
xor
cwtl
test
and
stc
push
jg
mov
jl
add
push
dec
pop
adc
jnp
rolb
mov
push
fndisi(8087
popa
adc
jle
push
ret
enter
and
ja
sbb
jle
xor
out
push
lods
sub
cld
jo
fisttpll
shlb
mov
fidivrs
mov
dec
test
ss
fucom
iret
xor
mov
mov
sub
mov
cld
xlat
sub
sahf
jecxz
adc
or
fwait
jl
mov
cld
inc
adc
push
push
add
push
popa
bound
fs
gs
dec
jne
inc
add
push
push
idiv
push
call
lahf
or
test
test
jmp
leave
sub
push
mov
or
push
mov
pusha
sub
inc
cmp
cmp
add
adc
pop
xor
hlt
lcall
add
jle
je
idiv
loopne
ja
sahf
outsb
sarl
xor
sub
outsl
bound
push
outsb
insb
outsl
arpl
pusha
push
pushl
ret
movl
push
lea
ja
bt
call
add
push
imul
shlb
leave
dec
popa
xor
ficompl
sahf
stos
mov
add
xor
lcall
pop
cmc
pushf
sub
and
mov
test
psrad
sbbl
std
sub
pop
cwtl
xor
loope
arpl
sub
mov
js
add
jb
jo
outsb
inc
add
add
imul
push
gs
popa
jb
add
add
je
outsl
jns
outsb
jne
adc
call
dec
scas
and
fsub
xchg
cmpsb
stos
aam
scas
cmpsl
add
push
enter
or
cmpsb
xor
incb
mov
or
clc
pop
or
xor
loopne
mov
stos
sub
fists
adcl
add
jg
daa
xchg
pop
fnstenv
push
call
jmp
mov
push
call
cmp
and
and
dec
xor
out
ss
and
in
jecxz
lret
mov
jg
cmc
lret
loope
idivb
shlb
pop
push
scas
pusha
and
push
adc
enter
je
jb
inc
outsl
arpl
push
call
notb
rcl
pusha
push
clc
add
bt
pushf
pushf
cmp
add
push
pushf
mov
jmp
add
inc
gs
imul
inc
js
inc
js
jae
bt
cmc
jmp
add
insl
imul
insl
dec
jo
outsb
add
fisttpll
idiv
inc
pushf
inc
setge
mov
inc
bt
xchg
shld
mov
cmp
test
mov
push
call
dec
movsb
cmpsl
fucomi
arpl
ljmp
and
cmp
and
cmp
lret
push
mov
mulb
stos
sub
loop
loopne
jecxz
add
shrb
push
and
out
xchg
sbb
jbe
mov
push
xor
ret
jbe
ds
lcall
movsb
ss
testb
cs
aam
dec
dec
adc
jmp
jns
and
jns
jae
repnz
cmp
in
mov
pop
and
push
pop
movsl
popf
inc
inc
les
into
lods
repnz
rclb
icebp
inc
lret
test
sub
push
push
test
das
dec
aaa
bound
and
xchg
ja
fldln2
mov
push
jo
pop
mov
inc
popa
jns
das
adcb
loope
mov
dec
cmpsl
adc
adc
in
mov
in
icebp
js
xor
dec
push
stos
sub
jns
inc
xor
mov
pushf
enter
sub
add
mov
xchg
aad
popa
lea
jg
push
add
dec
jne
inc
imul
incl
add
je
je
dec
popa
outsb
fs
gs
push
and
stos
xor
or
in
and
stos
and
mull
xchg
add
cmc
mov
dec
mov
and
sbb
lea
jne
adc
xor
push
aad
pop
rol
mov
shl
shl
setne
add
dec
rcr
mov
test
test
pusha
pushf
lea
je
test
pushf
push
sub
stc
test
cmp
pushf
lea
ja
pushf
bt
imul
call
add
inc
gs
imul
popa
arpl
outsb
je
add
inc
jno
popa
insb
push
arpl
fs
jo
pusha
lea
jne
pusha
lea
jmp
sahf
pop
shlb
cmp
mov
in
rclb
out
loop
sti
int3
xchg
ret
mov
loopne
mov
sub
stos
xchg
popa
aam
pop
cmpsl
adc
ljmp
shll
cmp
add
and
test
pop
inc
add
lds
cmp
fisttpl
xchg
push
es
xor
mov
call
xor
xor
push
call
fildl
add
je
gs
arpl
imul
mov
cmp
stc
xor
lea
pusha
pusha
mov
movb
inc
lea
push
jmp
add
push
gs
arpl
push
arpl
fs
je
bt
btr
lea
neg
mov
pusha
sub
bt
lea
cmc
shr
stc
mov
test
add
xor
shl
inc
add
cmc
shld
bts
mov
call
mov
btr
lea
mov
movzbl
call
pushl
pushf
mov
lea
jp
pusha
pushf
movb
pushf
popl
jmp
mov
mov
movw
movb
movl
mov
lea
jmp
seto
dec
pop
pop
bsr
bswap
mov
jmp
jmp
mov
pusha
call
call
mov
mov
pushf
movb
mov
lea
jmp
adc
ror
ror
mov
pushf
call
mov
call
not
mov
jmp
pusha
pushf
pushf
popl
pushf
jmp
ror
push
rol
push
jmp
not
pushf
popl
mov
btr
ror
mov
pushf
cmc
mov
push
mov
not
lea
mov
btr
not
movl
bt
bswap
pushf
mov
push
stc
rol
test
jmp
cmc
rol
pushf
clc
stc
xor
pushf
pushf
lea
jmp
call
push
pushl
jmp
pop
mov
pushf
mov
lea
mov
jmp
js
push
mov
mov
pushf
movb
mov
lea
jmp
shl
clc
mov
clc
push
cmc
add
lea
jge
pusha
movl
mov
pushl
lea
jmp
mov
pusha
mov
jmp
pusha
push
mov
mov
mov
pushf
lea
jmp
pushl
pushf
mov
pushf
lea
jmp
xchg
movzbw
bswap
mov
movzbw
push
mov
movzbl
pushf
lea
cmc
bts
push
cmc
push
ror
push
movsbw
pushf
clc
mov
pusha
lea
movzbw
pushl
movl
lea
jns
clc
push
bts
mov
pusha
rol
pusha
stc
mov
xor
push
pushf
mov
lea
jmp
mov
pushf
mov
rcr
clc
rcl
push
not
movzbw
push
bts
stc
lea
push
pushf
mov
cmc
pushf
push
rol
cmp
xor
pushf
lea
jmp
cmp
jmp
xchg
aad
stc
mov
test
bt
mov
jmp
call
bswap
mov
movsbl
pushf
popl
cmc
push
movsbl
pusha
mov
bts
rcl
mov
cmc
rcl
mov
call
pushf
pusha
mov
push
pusha
mov
mov
pop
mov
jmp
push
rep
xchg
shl
shld
shld
mov
inc
mov
mov
call
mov
pushf
movsbw
mov
mov
movzbw
lea
pusha
pushf
mov
pushf
pushf
pushf
popl
rol
movzbl
bt
mov
movzbw
mov
call
pusha
bswap
pushf
pushl
pushf
dec
pushf
push
add
stc
bt
pushl
sub
call
xchg
pushl
mov
not
mov
mov
lea
pop
mov
lea
call
pusha
pushl
popl
pushl
pushf
lea
jmp
btr
bts
rcl
stc
movzbl
bsf
test
xor
jmp
aad
movzbl
mov
or
pushf
dec
mov
push
movb
clc
not
pushf
not
jmp
btc
mov
pop
lea
bts
rcr
mov
movsbw
pushf
movl
pushf
clc
bt
mov
jmp
not
mov
clc
bt
test
sub
pushf
shl
jmp
call
rol
bt
call
aam
and
clc
sar
mov
jmp
jmp
xor
pusha
movb
pushf
pushl
lea
jmp
mov
stc
clc
rol
call
adc
shr
neg
dec
add
rcr
cmc
not
pushf
rcl
rol
call
xor
pushf
push
lea
jmp
pusha
pushf
call
shr
mov
stc
sub
jmp
not
movzbw
movl
rcl
mov
jmp
mov
bt
not
mov
shr
rcr
dec
cmp
mov
bt
cmp
pusha
bt
sub
jmp
push
divl
jmp
movsbw
seto
test
pusha
neg
pusha
rcr
ror
bsf
movsbw
inc
neg
and
bt
sub
shl
bt
bsr
mov
and
jmp
jmp
shl
shrd
btc
mov
btc
pushf
dec
and
mov
pushf
cmp
pushf
not
cmp
cmp
not
stc
call
bt
clc
bt
shl
pusha
jmp
pusha
jmp
clc
rol
clc
stc
cmp
pusha
xor
mov
lea
jmp
add
test
call
push
cld
pushf
pushl
pusha
push
rep
call
jg
pushf
pushf
popl
push
movb
movb
jmp
pushf
popl
rcl
push
rcl
mov
mov
bswap
push
rcl
push
jmp
sub
lea
jae
push
pushf
mov
pusha
pushf
push
lea
jmp
shl
bswap
bsr
bswap
mov
cmc
sbb
mov
stc
call
bsr
bsf
movzbw
setbe
mov
add
not
mov
push
clc
cmp
stc
sub
clc
cmp
shr
push
mov
call
xor
clc
cmc
movw
movl
bswap
cmc
clc
bt
add
jmp
push
push
add
movw
jmp
jmp
jmp
call
call
not
mov
movsbw
lea
mov
movb
pushl
ret
pusha
jmp
mov
lea
pusha
call
jmp
jmp
call
push
call
add
pushl
test
stc
bt
shld
pushl
mov
jmp
neg
push
jmp
push
mov
jmp
movsbw
movw
mov
push
pop
pushl
mov
bswap
pushf
popl
pushl
clc
bts
mov
rcr
movzbl
movzbw
mov
stc
movsbw
mov
rol
mov
movl
rcl
movl
clc
push
mov
stc
bt
pushl
rol
jmp
xor
push
lea
jmp
pushf
clc
test
sub
jmp
mov
mov
pusha
jmp
push
pushf
push
mov
pusha
jmp
mov
pusha
pushl
call
std
jmp
call
mov
clc
shl
pusha
pushf
call
btr
mov
not
pop
bts
mov
cmc
push
mov
push
pusha
movl
movzbw
movsbw
mov
stc
rol
call
mov
movb
pusha
pushf
pushf
lea
jmp
inc
rcl
add
movzbw
mov
jbe
mov
pushf
sub
add
jne
shl
jmp
jmp
jnp
pushf
pushf
mov
mov
pushf
xchg
lea
mov
mov
movsbw
jmp
pusha
pushl
popl
push
lea
jmp
pushf
popl
pushf
pushf
pushl
popl
pushf
lea
jmp
aas
push
shl
pusha
mov
inc
sar
pop
clc
mov
pushf
add
pusha
mov
mov
pushf
mov
push
mov
mov
pushl
lea
jmp
pushf
pushl
popl
mov
pushl
lea
jmp
pushf
rol
cmc
pushl
clc
xor
movb
pushf
lea
jmp
push
mov
movsbw
mov
lea
mov
mov
pushf
popl
rol
ror
rcr
rcl
mov
rol
rcl
mov
push
mov
bswap
mov
bswap
bt
mov
pushl
btr
rol
movl
bswap
jmp
mov
call
pushl
mov
pushf
mov
pushl
ret
mov
not
pushf
popl
rol
jmp
bswap
movl
pop
movsbw
ror
mov
clc
call
bswap
aaa
inc
neg
mov
shl
mov
dec
mov
push
pushf
test
push
add
pusha
pushf
mov
push
push
lea
jmp
mov
movsbl
push
pushf
pushf
mov
movzbw
movsbw
jmp
mov
bt
pushl
mov
rcl
push
bt
mov
pushf
stc
pushf
mov
jmp
test
cmc
test
add
test
cmc
cmc
xor
pushf
neg
pushf
lea
mov
dec
bt
push
clc
movb
rol
movb
xor
cmc
sub
jno
pusha
cwtl
call
xchg
pusha
lea
pusha
pushf
mov
pushf
push
mov
jmp
call
jmp
movw
xor
pushf
mov
cmc
cmc
xor
stc
pusha
call
pushf
mov
pusha
call
call
jne
mov
jmp
cmc
ror
mov
movsbw
clc
movl
rcr
mov
push
mov
rol
pushf
jmp
clc
xor
cmp
test
neg
push
pushf
movw
dec
clc
cmc
pushl
rol
pusha
stc
xor
jmp
pushf
mov
push
movb
mov
push
pushf
lea
jmp
lea
dec
pushf
sete
xor
sar
xor
not
movzbl
neg
lea
ror
add
bsf
movzbl
shl
bt
mov
pusha
bswap
cmp
pushl
push
add
test
call
pushf
mov
pushl
jmp
pushl
popl
pusha
pushl
mov
mov
lea
jmp
mov
pushf
movw
lea
jmp
clc
mov
rol
mov
not
call
pusha
movb
mov
pusha
push
pushf
xchg
pop
push
mov
movsbw
call
lea
pop
push
mov
movzbl
pushf
pushf
popl
movzbl
jmp
jmp
movl
cmp
sub
call
pushf
mov
movzbl
movzbw
mov
lea
pushf
mov
movl
mov
call
lea
jnp
pushf
pushf
popl
call
bswap
mov
sbb
mov
cmp
test
bt
pushl
popf
push
push
pushf
push
lea
jmp
movsbw
lea
mov
call
pusha
rol
cmc
mov
cmc
xor
pushl
push
push
lea
jmp
rol
mov
shl
mov
bt
sub
push
shl
pushf
call
clc
sub
push
mov
pushl
push
pushf
mov
lea
jmp
call
push
pusha
mov
pushf
pushl
lea
jmp
call
bt
xor
pushf
mov
pushf
lea
jmp
dec
neg
neg
rcl
mov
stc
test
xor
clc
rol
jmp
pushf
pusha
mov
not
movsbw
xchg
not
pop
movzbw
pop
mov
movsbl
setg
mov
pushf
movzbw
not
pushl
pushf
popl
not
xchg
rol
mov
stc
call
push
pushf
bswap
mov
mov
not
call
pushf
mov
mov
push
pusha
push
lea
jmp
inc
dec
notl
test
shrd
clc
jmp
xchg
pop
bswap
pushf
mov
call
push
pushf
popl
call
pushf
pushl
mov
pushl
lea
jmp
mov
push
pushf
call
pushf
popl
call
pushf
call
mov
movw
lea
jmp
push
mov
movb
movw
call
pushf
xchg
bswap
pushf
mov
not
movw
mov
push
call
mov
movzbw
pushf
mov
movzbl
bswap
call
pushf
mov
pushf
pushl
lea
jmp
rcr
mov
bt
pushf
pushf
rol
cmc
call
call
pushl
popf
mov
pushf
mov
lea
jmp
not
push
bswap
mov
not
bswap
pushf
rcr
push
movsbl
mov
rol
pusha
push
mov
jmp
pusha
dec
mov
cmc
sub
sub
jo
push
clc
cmc
add
push
call
stc
add
mov
call
stc
rol
test
cmc
push
xor
pushf
pushf
lea
jmp
btc
sbb
pushf
xadd
mov
sbb
bsr
shld
mov
bsr
shrd
mov
neg
movsbw
shl
pushl
popf
call
lea
jno
test
cwtl
pushf
cmc
sub
pusha
pushf
mov
pushf
pushf
mov
lea
jmp
pusha
jmp
sbb
or
shl
mov
inc
test
clc
mov
test
sub
jmp
cmc
neg
jmp
xor
cmp
movl
xor
bt
stc
cmc
add
call
push
push
pushl
popl
pushf
push
lea
jmp
pushf
dec
cmc
cmp
bt
bt
add
jmp
pushf
mov
pushl
popl
pushl
lea
jmp
mov
pushf
call
test
add
clc
cmc
push
test
add
pushf
call
jmp
push
call
jmp
stc
jmp
mov
call
jmp
sub
sbb
clc
stc
mov
call
pusha
jmp
stc
bt
pushf
xor
pushl
mov
pushf
movb
lea
jmp
bswap
rol
mov
movsbw
pop
bt
rcl
movl
ror
mov
movzbw
mov
bt
jmp
clc
clc
cwtl
push
sub
pusha
mov
pushf
lea
jmp
pusha
pushl
popl
push
lea
jmp
call
pusha
mov
movb
mov
mov
lea
jmp
add
call
pushl
popl
push
pusha
mov
movb
lea
jmp
call
push
cmp
mov
ror
mov
pushf
pusha
call
rcr
movzbl
mov
ja
pusha
pushf
push
rol
pushf
cmp
test
cmc
xor
push
lea
jmp
pushl
popl
pushl
pushf
push
lea
jmp
xchg
lea
mov
movsbw
mov
pop
pusha
movzbw
pop
pushf
popl
bswap
pushf
pop
mov
stc
mov
stc
bswap
mov
movw
movzbw
pop
bts
mov
bt
mov
pushf
movl
pusha
mov
call
clc
stc
cmp
pushl
bt
pusha
add
mov
test
pushl
popf
pushf
pushl
pushf
pushf
lea
jmp
call
mov
jmp
and
pusha
mov
mov
mov
jmp
lea
mov
pushf
popl
btc
clc
bswap
bts
mov
bswap
bswap
push
pushf
mov
ror
stc
pushf
mov
lea
pop
mov
pop
ror
movzbw
bts
movl
rcl
bts
mov
call
pusha
pushl
mov
call
call
push
movb
lea
ja
rcl
bts
mov
bt
or
lea
bsf
sub
aaa
aas
movzbl
cwtl
lea
bswap
clc
and
ror
not
bsf
sub
not
mov
push
mov
movzbl
bswap
pushf
popl
lea
not
cld
push
not
mov
pushf
lea
lea
movw
mov
pusha
mov
lea
ja
cld
std
std
cld
call
mov
pushf
mov
pusha
pushf
movb
pushf
popl
pushf
call
xor
push
movl
push
lea
jmp
pushf
call
mov
push
pushf
pushl
ret
mov
movl
rcl
mov
clc
jmp
mov
movb
lea
jmp
push
call
ror
sbb
btr
bsr
xor
bsf
movsbw
bsf
dec
dec
sbb
shl
btc
rcl
xor
lea
add
not
neg
add
add
shl
btr
bt
pusha
movzbl
shld
pop
bts
adc
mov
stc
push
clc
cmp
bswap
cmp
add
cmc
pushf
pushf
movb
xor
pushf
cmc
bswap
test
cmc
add
jmp
pusha
pushl
bswap
pushf
call
push
add
push
call
pushf
mov
mov
lea
jmp
jmp
pushf
pushf
popl
jmp
mov
pushf
pushf
mov
mov
lea
jmp
mov
mov
jmp
shld
rdtsc
mov
add
shl
neg
mov
pushf
mov
bt
mov
jmp
mov
push
pushl
popl
movb
pushf
pushf
lea
jmp
mov
jl
pushf
xchg
call
call
jmp
mov
pop
bswap
movzbl
movsbw
pushf
popl
not
pushf
rol
mov
rcr
pushf
pusha
mov
mov
mov
mov
bt
mov
pushl
not
pushf
stc
movl
stc
mov
pushl
clc
rol
bt
xor
pushf
pushf
mov
mov
lea
jmp
mov
not
pushf
mov
not
push
pushf
popl
pushl
movzbl
jmp
shl
stc
push
jmp
cmc
mov
bt
add
movw
lea
jmp
call
call
push
pusha
pushf
xchg
movl
bswap
not
pop
mov
movsbl
mov
not
pushf
pop
lea
pushf
popl
pop
pusha
rol
rcr
mov
stc
clc
btc
stc
mov
push
cmc
rcl
mov
rcl
mov
btc
mov
pusha
btc
rcr
movl
btr
ror
movsbw
lea
mov
mov
rol
call
movsbw
mov
lea
movsbw
mov
pushf
pushf
popl
pop
rcr
call
xor
clc
call
pusha
seto
setl
mov
mov
push
call
call
jmp
shrd
jmp
pushl
mov
mov
pusha
pushf
movb
lea
jmp
call
movb
pushf
popl
jmp
cbtw
clc
movzww
push
cmc
test
push
xchg
clc
clc
jmp
pop
movl
clc
mov
call
mov
pushf
mov
pushf
jmp
clc
clc
btr
mov
pushf
call
mov
pushl
call
xor
movb
movb
lea
jmp
call
push
pushl
popl
pushl
pushl
lea
jmp
not
xor
movzbw
test
btc
btr
mov
pushf
pushf
cmc
add
pushf
dec
jmp
sar
rol
mov
rcl
add
setl
or
mov
cmc
sub
call
je
push
sbb
pop
push
sbb
push
push
sbb
pop
push
sbb
dec
push
sbb
dec
push
sbb
pop
push
sbb
mov
sbb
pop
push
sbb
mov
sbb
mov
sbb
cmp
push
sbb
dec
push
sbb
mov
sbb
inc
push
sbb
push
push
sbb
pop
push
sbb
pop
push
sbb
push
push
sbb
inc
push
sbb
cmp
push
sbb
aas
push
sbb
dec
push
sbb
dec
push
sbb
dec
push
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
push
push
sbb
dec
push
sbb
inc
push
sbb
inc
push
sbb
dec
push
sbb
dec
push
sbb
mov
sbb
push
push
sbb
dec
push
sbb
mov
sbb
cmp
dec
mov
sbb
mov
sbb
mov
sbb
mov
sbb
mov
sbb
inc
push
sbb
dec
push
sbb
push
push
sbb
cmp
inc
inc
push
sbb
mov
sbb
push
push
sbb
mov
sbb
inc
push
sbb
push
push
sbb
aas
push
sbb
inc
push
sbb
mov
sbb
mov
sbb
dec
push
sbb
cmp
sbb
push
push
sbb
push
push
sbb
pop
push
sbb
inc
push
sbb
dec
push
sbb
dec
push
sbb
dec
push
sbb
push
push
sbb
mov
sbb
dec
push
sbb
push
push
sbb
push
push
sbb
inc
push
sbb
inc
push
sbb
inc
push
sbb
mov
sbb
push
push
sbb
dec
push
sbb
cmp
mov
cmp
sbb
push
push
sbb
inc
push
sbb
push
push
sbb
mov
sbb
dec
push
sbb
push
push
sbb
aas
push
sbb
mov
sbb
mov
sbb
mov
sbb
pop
push
sbb
mov
push
sbb
push
push
sbb
push
push
sbb
dec
push
sbb
dec
push
sbb
mov
sbb
push
push
sbb
push
push
sbb
pop
push
sbb
cmp
sbb
dec
push
sbb
push
push
sbb
dec
push
sbb
push
push
sbb
push
push
sbb
push
push
sbb
pop
push
sbb
cmp
push
sbb
mov
sbb
inc
push
sbb
push
push
sbb
push
push
sbb
mov
sbb
cmp
jne
push
sbb
inc
push
sbb
mov
sbb
mov
sbb
inc
push
sbb
inc
push
sbb
dec
push
sbb
push
push
sbb
push
push
sbb
push
push
sbb
dec
push
sbb
dec
push
sbb
pop
push
sbb
dec
push
sbb
inc
push
sbb
push
push
sbb
push
push
sbb
dec
push
sbb
pop
push
sbb
cmp
sbb
pop
push
sbb
mov
sbb
dec
push
sbb
dec
push
sbb
aas
push
sbb
mov
sbb
cmp
push
sbb
push
push
sbb
mov
sbb
mov
sbb
aas
push
sbb
push
push
sbb
cmp
imul
sbb
pop
push
sbb
mov
sbb
mov
sbb
pop
push
sbb
push
push
sbb
cmp
push
sbb
dec
push
sbb
mov
sbb
cmp
outsb
pop
push
sbb
dec
push
sbb
cmp
lock
push
sbb
cmp
sbb
mov
push
sbb
mov
sbb
cmp
push
sbb
push
push
sbb
mov
sbb
mov
push
sbb
inc
push
sbb
dec
push
sbb
inc
push
sbb
mov
sbb
inc
push
sbb
mov
sbb
mov
sbb
push
push
sbb
dec
push
sbb
dec
push
sbb
push
push
sbb
push
push
sbb
dec
push
sbb
dec
push
sbb
dec
push
sbb
pop
push
sbb
pop
push
sbb
dec
push
sbb
dec
push
sbb
pop
push
sbb
push
push
sbb
dec
push
sbb
pop
push
sbb
push
push
sbb
mov
sbb
inc
push
sbb
cmp
lock
push
sbb
push
push
sbb
pop
push
sbb
dec
push
sbb
mov
push
sbb
push
push
sbb
mov
sbb
pop
push
sbb
mov
sbb
mov
sbb
push
push
sbb
mov
sbb
cmp
sbb
pop
push
sbb
pop
push
sbb
push
push
sbb
dec
push
sbb
dec
push
sbb
pop
push
sbb
inc
push
sbb
cmp
sbb
mov
sbb
aas
push
sbb
cmp
mov
push
sbb
dec
push
sbb
push
push
sbb
inc
push
sbb
mov
sbb
mov
sbb
dec
push
sbb
inc
push
sbb
mov
sbb
inc
push
sbb
inc
push
sbb
dec
push
sbb
mov
sbb
pop
push
sbb
mov
sbb
inc
push
sbb
mov
sbb
mov
sbb
push
push
sbb
mov
sbb
mov
sbb
pushf
pusha
mov
pushl
mov
xchg
not
movsbw
jmp
pushf
popl
pushf
lea
jg
push
pushf
pushl
popl
push
lea
jmp
pushf
pusha
mov
call
push
jmp
mov
pushl
pushf
popl
jmp
pushf
push
mov
lea
jnp
pusha
mov
pusha
push
movb
lea
jmp
sub
neg
setae
ror
sbb
ror
ror
btc
neg
rcr
rol
bsr
rol
sub
pusha
and
shl
mov
call
clc
mov
call
pushf
popl
pusha
pushl
jmp
pushf
pushf
popl
pushf
pushl
popl
movb
pushf
mov
lea
jmp
and
movzbl
cmc
xor
call
shl
cmp
mov
rol
pushf
mov
stc
clc
cmp
movb
add
call
inc
xor
das
shr
mov
bswap
mov
call
mov
call
jmp
pushf
push
dec
clc
pushl
mov
stc
ror
jmp
xchg
call
pushf
pushf
popl
pushf
call
shr
push
call
movb
pushl
pushl
popl
push
mov
lea
jmp
mov
bswap
lea
call
setnp
lahf
not
pushf
mov
jmp
setno
lahf
mov
jl
push
pushf
push
mov
pusha
call
rcr
mov
mov
jmp
jmp
xor
movw
pushf
mov
pushf
lea
jmp
movsbw
mov
movw
movzbw
pusha
not
mov
movsbl
pop
pushf
popl
rcl
ror
movsbw
jmp
pushf
pushf
mov
jmp
push
mov
pusha
lea
jmp
pop
call
pusha
movb
mov
jmp
pushf
popl
pushf
pushf
pushl
popl
push
lea
jmp
push
pushf
mov
mov
mov
push
lea
jmp
call
rol
pusha
push
movb
xor
movl
lea
jmp
stc
xor
clc
xor
add
jle
add
clc
pushf
xor
pushf
jmp
pushl
mov
push
pushf
movw
pushl
lea
jmp
push
pushf
lea
jl
pushf
mov
call
mov
push
lea
jmp
bsf
push
setb
shrd
mov
neg
add
setle
not
mov
jmp
mov
push
push
push
lea
jmp
mov
push
lea
jmp
clc
sub
movb
mov
mov
lea
jmp
pusha
call
mov
call
not
lahf
push
mov
mov
movsbw
call
movsbw
lea
rol
push
stc
push
mov
pushf
mov
pusha
pusha
rol
pushf
bt
stc
xor
push
mov
mov
pushf
lea
jmp
sub
clc
stc
and
pusha
push
pushf
jmp
sbb
lea
bswap
pusha
mov
btr
sub
not
mov
cmc
push
pusha
call
jmp
add
setae
bsf
sar
movzbl
and
push
pusha
add
shl
sar
test
lea
adc
push
shl
rol
not
shld
call
push
sub
stc
ror
push
movb
jmp
sub
stc
stc
pusha
and
call
movsbw
push
pushf
movzbw
pushf
popl
call
push
rol
stc
jmp
mov
pushf
call
aaa
cwtl
lea
call
mov
pusha
mov
pushf
lea
jmp
stc
bsf
rdtsc
bts
mov
std
pop
bt
and
aaa
push
mov
pop
sub
jne
std
xadd
pop
and
neg
shld
adc
pop
push
rol
shrd
mov
clc
not
pop
pushl
popf
setne
pusha
not
call
call
movzbw
pop
lea
mov
pusha
movw
not
xchg
mov
lea
movsbw
mov
push
pushl
pushl
ret
rol
dec
dec
ror
inc
cmp
not
push
sub
ror
dec
call
push
mov
pushl
pushf
jmp
movsbw
pop
movsbw
mov
rol
not
pop
mov
stc
movl
pop
mov
push
pushf
pushf
pushf
rol
movb
cmc
cmc
jmp
clc
neg
pushf
cmc
push
bt
ror
test
cmp
call
pop
mov
movzbl
mov
pop
lea
pushf
movsbl
movl
ror
rcr
call
mov
test
sub
jmp
call
movl
mov
bswap
add
js
stc
add
clc
add
call
movsbw
not
pushf
popl
pushl
bts
mov
bswap
pusha
bswap
pushl
mov
stc
mov
not
clc
mov
lea
movsbw
call
mov
push
pusha
pushf
lea
jmp
push
inc
movzbw
lea
seto
not
pushl
ror
movzbl
pusha
ror
pop
push
lea
bt
bswap
bts
xadd
and
xchg
lea
and
shld
sar
xadd
sub
btr
adc
add
mov
rol
mov
movsbw
add
xchg
dec
bsf
mov
pushf
sets
bsf
dec
shld
push
add
add
jl
movzbw
rol
neg
add
add
rcl
call
stc
add
call
lea
rdtsc
push
stc
sub
mov
jmp
call
lea
jle
pushf
pushf
popl
pushf
pushf
movb
movb
pushl
popl
push
movb
pusha
mov
lea
jmp
clc
cwtl
test
cmp
bt
sub
push
pushf
call
rol
bt
add
mov
jmp
not
rcr
btc
mov
setb
add
jg
setnp
pusha
mov
mov
mov
movb
pusha
pushl
lea
jmp
mov
pushf
popl
mov
pusha
push
pushl
popl
pushf
lea
jmp
movl
jmp
push
add
pushf
lea
jo
pushf
call
pushf
popl
clc
lea
jmp
inc
clc
btr
mov
stc
bswap
push
add
stc
jmp
cmc
pusha
stc
shr
pusha
mov
call
pushf
mov
jmp
pushl
popl
pushf
lea
jmp
mov
movb
mov
movb
mov
lea
jmp
movb
mov
mov
mov
push
push
movb
lea
jmp
mov
call
rcl
mov
clc
mov
bt
mov
btr
jmp
mov
pushf
mov
lea
jmp
push
add
mov
jmp
btr
mov
pushf
stc
test
stc
xchg
call
jmp
rol
call
jmp
add
pusha
pushf
dec
clc
clc
pushf
xor
stc
jmp
bt
clc
pusha
movzbl
mov
pushf
add
clc
not
stc
neg
clc
ror
bt
cmc
pusha
lea
clc
push
stc
test
sub
push
test
add
test
bt
mov
bt
push
bt
clc
sub
jmp
clc
aam
pusha
mov
movw
add
pushf
jmp
mov
jmp
pusha
lea
push
dec
cmc
rol
cmp
cmc
xor
test
cmc
jmp
cmc
rol
pusha
mov
pushf
test
xor
movb
pushf
pushl
lea
jmp
push
pushf
popl
pushf
pushl
popl
pusha
pushl
lea
jmp
xor
pushf
lea
jmp
stc
pushf
push
xor
mov
pushf
push
movb
lea
jmp
ror
mov
pushf
add
jmp
push
pusha
pushf
popl
pushf
push
push
pushl
popl
mov
lea
jmp
mov
pushf
clc
rol
cmc
bt
xor
movb
movw
mov
lea
jmp
xor
pushf
push
lea
jmp
xor
stc
stc
stc
cbtw
call
pusha
sub
pushf
pushl
movl
call
aam
shrd
sbb
inc
mov
pusha
call
clc
neg
cmc
ror
bswap
mov
rcl
sub
bsr
bt
add
push
inc
btc
inc
mov
cmp
add
push
pushf
movb
jmp
mov
pusha
clc
add
pushf
movb
pushl
lea
jmp
mov
pushf
pushf
popl
pusha
movl
pushl
pushl
popl
pushf
movb
lea
jmp
pushf
push
pushf
mov
mov
call
and
xor
mov
clc
mov
clc
pushf
push
jmp
pusha
lea
jno
push
movzbw
pushf
movzbw
pusha
pushf
popl
pusha
bt
mov
not
bts
mov
lea
clc
rcl
mov
bts
clc
mov
pushf
bswap
movl
lea
call
pushf
popl
jmp
call
not
mov
pop
ror
ror
sar
xor
call
pushf
dec
pusha
pushf
dec
cmp
not
clc
sub
clc
cmp
stc
xor
jmp
sub
cmc
movl
ror
test
call
push
pusha
mov
pusha
pushf
mov
pushf
call
pushf
movb
add
pushf
call
call
push
rol
push
pushf
movl
pushf
mov
mov
bt
jmp
call
pushf
pushf
mov
call
cwtl
test
push
sub
movl
mov
pushf
mov
push
pusha
lea
jmp
xor
aad
test
lahf
mov
rol
mov
cmc
test
push
push
add
jmp
jmp
call
movw
pushf
popl
pushf
pushf
movb
movw
pushl
popl
pushf
movw
lea
jmp
mov
movzbw
call
bts
mov
setno
rol
setnp
mov
pushf
movl
rol
rcl
bt
mov
bts
mov
rcr
rol
bt
xor
lea
push
call
push
pushl
popl
mov
lea
jmp
mov
call
stc
mov
call
test
test
sub
lea
jno
pushf
mov
push
push
lea
jmp
mov
pushl
mov
pusha
mov
pushf
lea
jmp
sub
mov
mov
pushf
movb
movb
lea
jmp
