mov
repz
xchg
imul
mov
mov
inc
popf
cmp
mov
and
or
popa
jecxz
xor
mov
sub
adc
adc
inc
mov
dec
gs
ret
lea
outsb
hlt
mov
dec
jp
xor
jecxz
sahf
fwait
push
mov
test
ss
and
add
jmp
scas
cltd
mov
int
nop
adcb
inc
fcompl
cmp
clc
aaa
jmp
jbe
pop
jle
inc
enter
mov
jg
repz
sbbl
and
sbb
cmpsb
push
pushf
fdivs
xchg
mov
clc
pop
mov
inc
push
lods
jmp
mov
call
mov
insb
outsb
out
pop
pop
dec
pushf
push
shr
movsb
sarl
shll
data16
in
insl
mov
inc
xor
pop
mov
and
mov
adc
psubusw
sub
jl
sub
cltd
in
add
punpcklwd
loope
add
std
sub
mov
xor
icebp
add
les
and
adc
xor
bnd
cld
outsl
movsl
cmpb
jnp
outsl
mov
add
fiadds
ljmp
test
push
xchg
mov
stc
pop
dec
mov
adc
jno
push
inc
bound
sbb
popf
adc
out
das
cli
add
js
cld
scas
and
in
icebp
movsl
rolb
repz
stos
nop
jne
popf
fidivl
stos
or
and
mov
and
pop
enter
xchg
fists
cltd
jnp
popf
sbb
xlat
je
int3
dec
clc
orl
mov
lock
add
mov
jno
pop
inc
insb
pop
ljmp
js
sbb
add
sub
sbb
dec
test
out
aad
cmp
in
inc
ss
sub
arpl
pop
outsb
add
mov
jnp
pop
test
cmpsb
sub
adcb
iret
push
repz
xchg
imul
adc
cltd
sub
ret
mov
popa
xor
and
enter
adc
add
jno
pop
test
sbb
push
add
inc
ret
and
adc
lock
movsb
jns
test
jp
shl
sub
scas
or
mov
push
jecxz
stc
js
int3
pusha
inc
in
pusha
in
lret
jae
sub
fs
adc
push
jno
ficoms
pop
mov
xor
lret
icebp
les
mov
repz
dec
loop
xlat
jno
xchg
push
cli
sahf
gs
sar
int
jp
test
jmp
idiv
and
adcb
lret
in
movsl
shr
iret
xchg
and
repz
dec
sub
insl
stc
cltd
outsb
jl,pt
pushl
and
jns
loop
jnp
repz
sti
cltd
push
add
in
clc
loope
mov
jnp
pushf
into
jb
adc
rcll
inc
lret
pop
fdivs
clc
push
adc
jmp
sub
dec
loop
pop
xor
out
jl
mov
adc
repz
inc
es
mov
fstpt
movsb
jecxz
aam
xor
stc
cwtl
imul
or
out
in
jmp
mov
xor
sbb
in
jle
sub
pop
mov
in
test
pushf
push
pop
mov
fs
sbb
repnz
jle
push
test
and
mov
and
and
xchg
mov
jns
inc
jmp
ds
lock
test
sbb
cmp
inc
movl
ficomps
adc
add
mov
pop
leave
jp
mov
xchg
iret
popa
cmp
out
cmp
repz
push
push
ljmp
xchg
sti
xor
repnz
sbb
icebp
pop
lock
push
inc
adc
stos
lcall
out
cli
jae
cmp
jl
in
les
jo
fsub
sbb
leave
add
call
stos
add
pusha
arpl
xor
sahf
inc
fidivs
inc
or
push
mov
sbb
sbb
cli
ljmp
insl
add
xchg
sarb
repnz
sbb
ds
pop
test
cmp
inc
and
sbb
cmp
lea
adc
dec
pop
adc
xorl
push
pop
out
add
pop
in
xchg
cmp
sub
stos
in
mov
imul
js
cld
pop
dec
mov
addl
cli
jb
lods
lea
push
push
nop
and
fadd
cmp
mov
les
mov
je
mov
mov
pop
add
add
jg
sub
cmp
mov
pop
push
cmp
icebp
pushf
push
dec
std
push
ds
inc
lods
fnsave
shll
push
es
xchg
or
int
cmp
cld
jp
aaa
dec
test
arpl
add
sbb
into
add
xchg
negl
jle
jns
loopne
xchg
lcall
sub
aas
pop
mov
pusha
outsl
out
push
mov
enter
xchg
repnz
xchg
xor
xchg
jb
mov
dec
mov
adc
mov
sbb
js
out
lahf
xor
cli
inc
inc
cmp
ja
mov
es
repnz
push
fimull
je
mov
pop
cmc
pop
rorl
cbtw
cmpsb
pop
jmp
lea
ja
int
mov
pop
ret
andb
cmpb
fs
cmp
lret
addb
insl
sti
mov
test
pop
pop
sub
repz
fists
mov
sub
adcl
xorb
inc
aad
rorb
test
xorb
cmc
jle
cmp
mov
adc
fistps
mov
shr
shrl
cmpb
leave
xchg
imul
xor
out
repnz
cmp
sahf
mov
mov
aas
push
pop
adc
pop
jnp
test
inc
fisttpll
mov
mov
xchg
bsf
ljmp
mov
les
cmc
mov
xor
mov
js
xor
mov
push
sub
mov
sub
sbb
loope
cmc
stos
iret
push
xor
pop
pusha
test
jecxz
jecxz
add
dec
ljmp
lds
aam
mull
dec
push
into
in
mov
jle
cli
dec
add
mov
pop
mov
pop
cs
mov
lahf
outsb
ds
push
dec
lcall
dec
fwait
test
das
rorl
lret
jmp
jae
test
in
and
pop
out
cltd
das
jge
xchg
hlt
icebp
sahf
ds
test
dec
in
sub
movsl
lcall
les
repnz
cs
in
xchg
mov
inc
mov
mov
cmp
or
fmull
into
push
lret
mov
cmp
sbb
stc
xlat
pusha
fdivrs
push
dec
add
mov
sbb
divl
mov
pop
or
xchg
out
cmpsl
sar
and
xchg
lcall
jmp
push
adc
xlat
subl
push
or
adc
adc
je
scas
pop
test
shr
mov
repnz
pop
loope
stos
icebp
movsl
ljmp
cmp
add
xor
dec
in
mov
push
pop
ljmp
mov
push
mov
sub
push
pop
jns
loope
daa
xchg
pop
rcl
andl
sti
push
xchg
test
or
sub
and
aam
sbb
sub
and
insb
ret
arpl
pop
ss
or
into
mov
in
mov
inc
xchg
insl
mov
scas
int
xchg
je
push
mov
mov
and
mov
fs
xchg
clc
mov
data16
cs
push
fiadds
sarl
pop
das
mov
xchg
or
mov
stos
mov
rcrb
out
mov
pop
jo
xchg
jmp
cmp
mov
lds
out
adc
dec
hlt
push
and
add
pop
cwtl
or
and
xchg
std
inc
imul
push
cmpsl
jecxz
inc
mov
mov
mov
mov
out
pop
xchg
jge
mov
pusha
lret
enter
xchg
loopne
jl
sar
outsb
mov
push
imul
addb
ja
and
mov
pop
out
mov
push
dec
cli
add
xor
push
or
test
jo
std
jmp
push
mov
push
push
adc
cmp
fisttpll
pusha
fcoms
add
lret
adc
out
es
xchg
lahf
icebp
cwtl
xchg
mov
not
and
out
dec
mov
pushf
inc
std
cs
je
inc
push
imul
mov
or
adc
cltd
push
ret
pop
outsb
push
adc
stc
es
aad
mov
adc
jp
aas
out
cmp
mov
pop
test
aam
insl
das
xor
mov
outsb
add
ret
gs
ret
psllw
js
rolb
push
adc
cmp
fsubrl
inc
fcompl
dec
clc
das
sub
pop
mov
popf
lock
xlat
mov
add
sub
loope
in
adc
scas
imul
xchg
lock
hlt
int3
jmp
push
and
stc
or
and
pop
test
inc
and
insb
insb
ds
cmp
adc
jecxz
cld
lret
xor
int
jge
and
cltd
insb
int
loop
add
cmp
in
cs
nop
xchg
cmp
jecxz
mov
jnp
mov
shrl
sub
mov
jle
jmp
popf
mov
dec
cltd
mov
adc
xor
or
fldl2e
test
push
jb
or
xor
sub
cld
xchg
test
mov
data16
pop
mov
push
xchg
faddl
jmp
addr16
xchg
sub
pusha
pop
mov
call
dec
ffreep
inc
out
pusha
inc
jp
sub
jae
out
mov
pop
inc
loopne
fimull
push
popf
fucomp
xchg
jmp
xor
into
out
scas
push
adc
movsl
add
lret
push
cmpb
or
mov
aaa
ss
inc
test
mov
popf
push
add
mov
rorb
cmp
mov
or
and
jns
rol
mov
out
and
adc
xrelease
insl
lock
sub
stos
aaa
xchg
mov
xchg
je
cld
dec
inc
leave
pop
and
ss
out
inc
jne
or
loopne
sbb
es
or
pop
into
icebp
stc
or
lahf
push
push
dec
lods
push
mov
pop
adc
lea
out
jg
mov
push
aas
push
cmp
xchg
insb
jo
and
test
mov
pop
mov
les
fbstp
das
cmp
dec
lret
mov
filds
out
push
stos
mov
shll
pusha
pusha
pop
dec
mov
dec
jae
fdivrs
in
mov
sbb
scas
fdivs
adc
scas
jecxz
cmp
stos
add
addb
lds
outsl
mov
rcll
xchg
fnstenv
mov
out
xlat
cld
xchg
xchg
lret
mov
js
lahf
inc
in
push
lret
sub
xor
movsb
pusha
xor
mov
cmp
dec
sbb
insb
jle
and
enter
ret
sbb
lea
mov
jg
xchg
fs
and
sbb
mov
js
add
sbb
inc
adc
mov
adc
mov
pop
mov
enter
das
push
xchg
mov
mov
or
and
cmp
sbb
add
outsb
dec
cmpsb
mov
ljmp
push
enter
mov
out
push
sbbl
rorl
dec
sub
mov
mov
data16
lods
in
leave
dec
push
ret
bound
sti
test
iret
sub
je
and
mov
pop
cmp
loopne
dec
push
adc
dec
mov
cmp
and
dec
add
mov
cwtl
jbe
aas
jmp
hlt
dec
stos
push
push
into
cltd
js
lods
stc
lods
dec
mov
mov
ja
icebp
shll
sbb
or
jmp
js
sahf
cmpsl
imul
pop
lods
stc
hlt
insb
xor
filds
in
fsubp
pusha
pop
mov
sub
mov
mov
imul
xor
push
xchg
dec
inc
lahf
cmp
and
xchg
push
icebp
dec
clc
insl
lahf
or
add
dec
int3
lcall
sbb
cbtw
pop
xchg
scas
std
push
inc
sarb
mov
shl
xor
and
pop
outsb
outsl
mov
ljmp
in
pop
std
lods
xor
jno
ja
ffree
movsb
xor
stos
shl
pop
lock
and
testb
out
or
adcb
adc
sbb
xor
cmp
jbe
cmp
hlt
aam
mov
ret
dec
xchg
je
andb
sub
mov
jbe
sarb
xchg
adc
je
add
enter
ljmp
jmp
clc
ss
sub
xchg
int
xlat
icebp
ja
dec
cmc
es
or
mov
shr
aaa
ficomps
mov
test
sahf
fsts
jne
sub
lea
lahf
or
les
push
int
jmp
addr16
rcrl
lahf
xor
sub
sub
adc
push
sub
adc
mov
stos
outsb
inc
into
test
mov
jns
clc
xor
mov
je
jmp
xchg
xlat
xor
or
in
sbb
push
jo
mov
movl
lahf
daa
lds
add
paddusb
gs
lahf
fdivl
popa
adc
fucom
in
mov
and
jl
stc
fcoms
iret
mov
push
repnz
sbb
test
imulb
xchg
pop
shlb
pop
jg
adc
or
dec
inc
inc
les
add
in
cld
mov
pop
popa
ficompl
fidivrs
imul
rorb
xor
push
test
xor
sub
adc
and
mov
imull
xor
inc
insb
lods
ss
xor
and
jnp
lahf
notb
mov
pushf
xor
xor
add
inc
imul
fdivl
add
pop
bound
xchg
add
lret
push
lea
xchg
cli
scas
push
mov
call
adc
dec
or
add
fldl
in
push
insb
push
shr
fucomp
cmc
jb
jne
cmp
inc
adc
sub
sub
push
jl
xor
inc
divb
jmp
xor
jg
out
jns
loopne
fs
push
xchg
dec
fmul
pmulhw
out
jo
or
dec
aas
testb
fdivr
pop
xor
sti
and
push
adc
push
mov
add
mov
repnz
lahf
out
pop
adc
xchg
das
imul
jno
mov
ds
pop
aad
xor
xor
and
sbb
xchg
in
xchg
sub
mov
push
ja
dec
xchg
xlat
cld
pop
adc
popf
mov
insl
cmp
lahf
lock
xor
pop
cmp
sub
loope
mov
into
jae
inc
mov
adc
sbbb
cli
pop
cmp
push
ffree
and
lods
fidivrl
fdivrl
and
rclb
cltd
pop
aad
pop
xchg
cmp
stc
fidivrs
and
xchg
adc
enter
jecxz
push
dec
lcall
pop
daa
push
pop
stc
outsb
dec
mov
xchg
mov
bnd
jp
sbb
mov
cmc
ds
mov
imul
es
pop
setl
fimuls
mov
lcall
shr
outsb
mov
add
lock
dec
push
in
fdivrs
jg
mov
or
sbb
lods
xchg
adc
rcrl
pop
js
push
push
xchg
mov
xor
nop
push
mov
push
frstor
mov
movsb
lods
dec
or
div
sub
ljmp
inc
sbb
pop
data16
jbe
inc
pop
cmp
popa
clc
test
mov
push
loop
cltd
cvtps2pd
subb
les
cwtl
lcall
fdivs
dec
pop
xchg
xchg
xchg
das
adc
std
push
lret
lcall
pop
push
jmp
xchg
scas
lods
lods
mov
insl
and
lcall
pop
dec
outsl
ficoms
dec
insl
pushf
cmpl
insl
arpl
test
cltd
lahf
movsb
test
sub
aaa
hlt
hlt
lea
das
sti
dec
psrlw
mov
adc
andl
pop
insb
push
js,pt
mov
sub
cmpsb
inc
mov
push
and
dec
and
call
fs
sub
mov
mov
in
addr16
fcoms
push
lret
pop
stos
push
stos
adc
lods
jno
push
xchg
scas
hlt
cmpl
daa
cmc
dec
jne
inc
lcall
mov
jne
loop
mov
mov
inc
idiv
sti
sub
lret
jl
sbb
mov
push
shrb
jmp
inc
add
cmp
push
cmp
lea
gs
cmp
add
add
hlt
aas
mov
insb
test
hlt
inc
pop
mov
inc
out
xchg
decb
jl
lcall
outsb
dec
loopne
sub
and
mov
clc
cltd
inc
jmp
xchg
ljmp
pop
shlb
push
mov
cmp
sti
lcall
inc
into
insl
jmp
xor
gs
dec
cwtl
lods
adc
xorb
and
or
ss
out
stos
xchg
std
pop
mov
pushl
pop
push
sbb
dec
push
sbb
in
es
add
adc
mov
cmpsb
addr16
inc
test
xor
addr16
mov
dec
cmpsl
out
dec
icebp
push
sub
into
xchg
lods
xor
push
mov
cmpsl
scas
pop
dec
stos
lea
mov
lds
jbe
xor
add
pushf
fldt
jno
xor
outsb
pop
or
mov
xorl
push
das
insl
pop
xorb
lgs
repz
loopne
cmp
fcom
ret
xchg
fs
or
call
inc
fstl
shrb
push
xlat
mov
lock
and
imul
sbb
push
fcoms
sub
stc
add
xor
orb
push
jb
xchg
ja
dec
dec
add
jo
data16
or
movsb
pop
scas
adc
cltd
data16
adc
fs
shll
add
movsb
pop
std
lahf
shlb
mov
sti
push
jg
push
arpl
mov
lds
or
sbb
cli
inc
or
dec
push
cmpsb
mov
xchg
dec
jne
pushf
into
lret
fwait
movsl
popf
inc
popf
mov
iret
mov
jae
call
into
fsubl
lods
fstpt
mov
repz
push
outsb
pusha
repnz
add
jl
cmp
or
gs
scas
cmp
push
hlt
movsl
sub
or
push
sbb
in
xor
push
lods
xor
testl
jp
jbe
lds
push
mov
stc
inc
jne
mov
jae
ja
adc
fwait
mov
xchg
in
in
xchg
xlat
cmp
push
test
cltd
inc
lds
out
aas
xchg
pop
ret
popw
inc
jo
push
cmp
dec
mov
or
push
lret
sbb
ret
stc
jg
and
lds
pop
adc
jg
sbbb
subl
add
mov
cmpsl
sti
pop
xchg
mov
adc
lods
test
jne
popa
repz
or
jmp
jmp
inc
outsb
ljmp
scas
popa
mov
jb
pop
cmp
dec
pop
in
sub
imul
push
filds
mov
outsb
mov
ja
xor
sti
mov
aaa
adc
and
mov
nop
sub
add
inc
dec
adc
int3
mov
push
movsb
add
js
mov
add
imul
lods
cmp
push
cli
xchg
adc
out
mov
jp
jnp
jns
dec
pop
inc
push
lods
into
js
push
pop
dec
pop
fdivp
lcall
xchg
inc
imul
mov
cmp
jmp
xchg
add
addr16
loopne
pop
pop
outsb
leave
arpl
add
jl
stos
mul
out
daa
cwtl
mov
push
cmp
dec
sub
fcompl
dec
xchg
cmp
pop
jge
xchg
adc
repz
sub
mov
mov
mov
add
imul
jne
andb
fimull
mov
movsl
push
ja
pop
lcall
cli
sbb
call
test
mov
inc
add
cmp
and
mov
xchg
and
cmp
cmpsb
ret
leave
daa
sarb
dec
std
out
sbb
or
cmc
mov
lcall
sbb
or
pop
loop
add
es
cmp
mov
pop
adc
jmp
and
ret
loop
iret
push
inc
mov
mov
or
push
lock
sub
movsb
outsb
aad
adc
aad
mov
test
cmpsb
push
stos
xchg
and
mov
lea
lcall
mov
ret
cmc
mov
mov
mov
lret
adc
pop
ja
std
flds
mov
ret
xchg
lods
rcll
aaa
adcb
adc
push
clc
mov
adc
out
scas
fisubrs
push
loop
jo
cmp
lcall
xor
push
sub
sub
incb
or
int3
pop
sub
dec
dec
push
sbb
movsl
sbb
add
jle
punpckldq
jo
jle
out
rorb
sbb
mov
xchg
cmpsb
or
lret
mov
iret
imul
adc
imul
inc
mov
sbb
add
and
push
enter
insb
dec
inc
sub
outsl
insl
jmp
pop
dec
lret
scas
repnz
les
cmpsl
std
stc
cmpsl
divb
jbe
jg
xchg
or
js
push
add
cmp
xchg
dec
pop
test
fsubl
sahf
inc
les
or
test
adc
ja
notb
jmp
cmp
data16
fidivs
mov
or
jle
int
cmp
movsl
jnp
pop
dec
push
mov
repnz
cmp
insb
add
xchg
jno
mov
mov
mov
xchg
pop
push
push
and
and
outsb
nop
test
inc
push
cltd
dec
xor
repnz
xchg
rcrl
push
cltd
rol
and
sub
in
xor
and
scas
mov
bound
mov
pop
iret
sub
push
aam
xor
nop
bound
lock
ret
sub
jmp
ret
dec
sbb
sub
adc
callw
gs
test
loopne
aaa
push
repnz
push
xor
movsb
pop
lcall
pop
sbb
dec
jbe
pop
out
add
jmp
add
out
jge
inc
dec
inc
mov
repnz
je
cmpsl
push
push
mov
shlb
movsb
pusha
jb
pop
ret
cld
leave
adc
pop
push
fisubl
lock
or
out
or
or
adc
or
mov
iret
jle
mov
xchg
fwait
pop
lods
addr16
ljmpw
mov
xchg
jne
pop
mov
hlt
add
xchg
hlt
pop
adc
jp
les
xor
ret
les
cmp
mov
daa
adc
popa
mov
lcall
pop
or
sahf
leave
outsl
add
xchg
dec
dec
inc
sahf
jbe
je
sbbl
incl
repz
iret
xchg
in
outsb
enter
movsl
imul
add
cmp
mov
mov
je
push
loope
out
xchg
and
fdivs
aad
jnp
sub
xchg
mov
add
jmp
dec
mov
int3
data16
fisttpll
push
mov
pusha
outsl
cmp
imul
mov
jno
in
xor
mov
mov
jmp
repnz
push
adc
repz
jl
push
mov
rcrl
aad
sub
js
loopne
movsl
mov
add
dec
ficoml
test
les
sub
sti
or
inc
out
std
ret
jecxz
sbb
cmpsl
cld
data16
mull
pcmpgtw
ss
jno
pop
jae
lds
xor
sbb
fcom
out
mov
mov
inc
sti
scas
inc
popf
and
dec
lods
dec
cmp
test
orps
out
rep
pop
pop
and
scas
int
sub
test
xor
bound
test
push
adc
subb
mov
jbe
cmpsl
fs
jnp
dec
push
cmpl
int
push
xchg
cwtl
bound
shr
outsl
loopne
hlt
test
rcr
pop
outsl
out
push
sub
jo
mov
jns
inc
sarb
cmp
adc
jl
test
pushf
mov
pop
out
xor
sti
sarb
movsb
pop
aaa
push
adc
push
xchg
scas
cmp
rorb
out
dec
lcall
xor
aam
sahf
call
adc
jmp
mov
cwtl
insl
adc
add
xchg
icebp
icebp
mov
ds
xchg
inc
pop
jmp
in
xor
mov
iret
xor
mov
xor
push
cmp
cmp
test
push
imul
cmp
xor
dec
sub
call
push
add
in
les
push
sbb
lcall
out
mov
and
pop
or
sbb
rcrb
jecxz
int3
mov
mov
es
xchg
push
mov
faddp
mov
leave
pop
push
pop
push
lcall
sbb
bound
stc
loopne
lods
push
jmp
mov
test
roll
xchg
push
or
jae
ss
leave
loop
pop
push
lock
sbb
sbb
data16
and
jg
push
repnz
dec
das
popa
push
mov
dec
cli
int3
mov
scas
inc
pushf
repnz
call
xorb
cmpsl
insl
or
sub
int3
and
jae
adc
aad
iret
das
jne
sbb
cmp
cmc
cmpsl
push
cli
popa
clc
jno
add
test
loopne
in
inc
test
xchg
mov
mov
add
dec
push
xchg
insl
xor
loope
stos
add
arpl
mov
push
arpl
sbb
pushl
lods
ljmp
sbb
stc
mov
ja
or
sbb
jmp
cld
popa
jns
test
and
and
ret
scas
jge
xchg
push
adc
loopne
and
mov
ret
fs
test
dec
out
push
leave
fadds
stos
add
push
add
sub
lcall
lahf
sub
call
push
in
or
xchg
jbe
orb
ljmp
mov
cmpsl
int
mov
inc
cwtl
pop
lods
cmc
cwtl
into
xchg
adc
cmp
mov
lret
enter
or
sub
outsl
lahf
fisubs
aam
imul
in
inc
cmc
fists
out
stos
lock
fcoml
sbb
insb
test
pop
add
add
dec
sbb
fwait
pop
pop
xor
sbb
shll
out
add
or
add
dec
cmpsb
rclb
aad
xor
sub
inc
and
mov
sub
ret
lahf
out
repz
inc
and
lds
xchg
sub
leave
xchg
push
lods
das
in
cmp
out
negl
push
pop
lock
jl
ljmp
cli
mov
pop
sbb
push
adc
rorl
pop
popf
cli
int
pop
inc
xlat
test
loop
pop
cmp
stc
out
stc
fnclex
push
mov
cli
shlb
and
pusha
mov
push
test
mov
and
ret
and
dec
push
sbb
push
fnstenv
cmp
pushf
mov
out
jae
adc
and
mov
push
dec
mov
dec
out
push
pop
dec
push
rorb
mov
setb
mov
push
daa
cmc
out
cld
sbb
shll
push
add
shl
movsb
mov
sub
hlt
inc
repnz
sbb
repz
lcall
test
sahf
dec
imul
es
xor
rcll
jne
jae
adc
cmpsl
dec
lea
jp
sbb
fwait
jbe
sbb
loop
popl
scas
jnp
int
testb
pop
xor
mov
push
sti
outsb
gs
mov
es
stc
push
addr16
pop
popa
pop
jae
ss
mov
int
movsl
jne
ja
movsb
scas
adc
stos
jg
xor
add
scas
inc
test
test
jecxz
push
add
mov
ds
inc
xchg
rcll
imul
cmpsl
adc
lcall
pop
je
dec
movsb
fldt
push
jae
dec
lock
dec
divl
arpl
and
jne
incb
push
mov
rcrl
pop
lret
outsl
fs
sbb
sbb
push
aaa
or
xlat
cmp
dec
cmpl
xor
cmpl
repnz
mov
into
sub
mov
push
jl
cmpsl
mov
fnstsw
shlb
sbb
jecxz
cmpsb
cmc
sub
jb
inc
mov
mov
shl
inc
insl
add
xor
mov
sub
mov
popf
movsb
sbb
fnstcw
out
in
sti
xor
lahf
pop
xlat
aaa
movsl
ja
lds
test
std
add
into
mov
adc
push
insb
out
and
pop
in
imul
mov
inc
mov
pop
out
xor
pop
in
loop
jb
adc
shr
loop
sub
addr16
push
lods
sub
aaa
xchg
imul
pop
dec
mov
pop
push
xor
test
add
mov
lods
mov
sbb
fisttpl
add
push
std
daa
es
test
adc
sbb
lret
push
cs
icebp
andb
sar
lock
xchg
xchg
fldcw
pop
cld
imul
daa
push
push
inc
xor
popf
pop
mov
movl
sub
cli
jl
shrl
lea
jmp
sbb
mov
cs
adc
inc
out
add
js
adc
adc
imul
push
stos
adc
shrb
call
push
xchg
pop
shll
xorb
or
inc
adc
or
test
xor
aad
fimuls
orb
inc
hlt
cwtl
pop
iret
lcall
or
clc
inc
js
ja
incb
daa
test
movsb
testl
aam
stc
jns
push
pop
inc
mov
mov
roll
xlat
cmc
out
cld
mov
cmp
mov
mov
lds
jp
cltd
adc
or
das
idivb
sbb
aad
mov
fsts
lea
and
ja
pop
xor
pop
mov
jl
add
or
int3
iret
fs
cmp
cwtl
mov
cli
mov
sti
int3
mov
arpl
cmpsl
in
inc
sbb
xorl
scas
mov
mov
test
xchg
push
ret
xchg
das
mov
orl
fimuls
loop
pop
enter
fcoms
jp
pop
cmp
out
out
aaa
mov
pop
xor
pop
loopne
stos
adc
inc
xor
push
mov
addl
mov
adc
jmp
inc
add
orl
mov
cmp
and
les
rolb
lods
inc
loope
arpl
fidivs
pusha
push
lods
into
pop
sub
mov
push
test
push
fisttpll
pop
hlt
jecxz
sti
mov
push
adc
push
incl
divl
inc
xchg
add
incl
out
mov
xchg
scas
je
fistps
pusha
jecxz
mov
or
sub
xchg
mov
mov
adcb
ds
lret
iret
push
add
fimuls
xchg
inc
mov
pop
jne
inc
mov
adc
sbb
xor
xlat
xchg
pop
jno
jae
and
ret
mov
outsl
loope
test
loope
stos
cltd
clc
test
popf
xchg
test
lahf
arpl
sub
cmc
fldenv
mov
xchg
push
push
inc
mov
insb
and
pop
mov
sbb
mov
hlt
or
push
add
mov
fidivl
fdivp
outsl
paddq
daa
adc
xchg
xchg
inc
das
cmpsb
xchg
fldenv
rol
dec
adc
enter
xlat
jecxz,pn
adc
push
xchg
cwtl
fstl
cmp
mov
outsb
xor
mov
push
mov
mov
add
mov
jnp
dec
pop
shrl
lock
loopne
int
add
nop
test
or
ja
je
pop
xchg
lock
jmp
sbb
iret
push
jecxz
loopne
push
shlb
into
lds
lods
xlat
aam
lret
fldt
inc
testl
outsl
pop
sub
push
and
adc
icebp
aam
sub
and
iret
dec
lock
push
jno
push
inc
shl
push
push
stc
push
inc
scas
fadds
aad
cmp
pop
je
jge
cmc
in
std
and
shl
repnz
ret
push
ja
cmp
sbb
lock
mov
lods
push
dec
nop
stos
les
sbb
mov
jp
cmp
movsl
jp
int3
adc
leave
inc
sbb
dec
ret
cmp
mov
imul
jle
je
pop
loop
shrl
dec
gs
mov
sub
xor
ja
xchg
jo
dec
scas
push
mov
imul
mov
sbbl
insl
adc
push
loope
ret
mov
lock
lods
outsb
adc
mov
and
stos
add
sub
jnp
push
roll
and
test
mov
inc
jmp
mov
add
out
or
push
inc
and
mov
push
add
std
adc
into
scas
dec
movsl
lods
and
cli
pop
and
fidivrs
std
fildl
stos
je
dec
lock
xor
fs
scas
loopne
ficompl
clc
jno
xchg
jno
sbb
cs
cmpsb
loop
bound
mov
sahf
fcmovnbe
mov
pop
sub
inc
push
int3
in
jae
negb
in
or
mov
mov
inc
das
cmpsl
xchg
enter
add
sarl
xchg
xor
mov
pop
push
dec
xchg
and
enter
inc
sub
dec
adcl
pop
lea
dec
dec
jecxz
sub
rolb
sbb
push
out
test
filds
adc
cmp
xor
nop
push
cmp
pop
add
dec
loop
push
loope
leave
jl
sti
cmpsb
negb
pop
sahf
push
push
push
mov
inc
rol
sbb
pop
pop
jno
mov
lret
dec
and
pop
mov
sbb
dec
cli
cmp
cltd
test
xor
jo
in
addr16
pop
mov
cmpsb
xchg
sub
or
push
aad
or
sub
fidivs
bound
sub
mov
or
mov
and
fcoml
ja
aaa
mov
das
out
mov
mov
cmp
adc
fwait
cmp
xchg
add
and
mov
jbe
inc
adc
outsl
ljmp
mov
mov
pop
fwait
or
mov
das
or
mov
popf
push
not
jns
pop
dec
mov
adc
int3
test
cmp
icebp
xlat
pop
jge
adc
sbb
push
push
sar
dec
mov
andl
std
imul
pop
pop
mov
mov
pusha
mov
addr16
repz
sub
fcoms
or
mov
dec
outsl
fcmove
dec
dec
xchg
push
idivb
aam
mov
push
adc
push
les
in
dec
sar
cmpsl
neg
jge
push
jb
push
add
daa
sti
sub
das
lods
push
jne
pop
psubusw
popa
lds
mov
push
xchg
fmull
xchg
cmp
movsl
pop
cli
and
insl
scas
pop
push
nop
adc
orb
push
jl
imul
pop
popf
icebp
loop
xchg
xchg
dec
test
xchg
cmpsb
pop
dec
jb
out
gs
cwtl
mov
mov
jne
data16
outsb
mov
int
repz
adc
jo
jo
sahf
out
pop
mov
mov
push
scas
int3
out
pop
mov
mov
into
jp
cwtl
data16
std
xor
aad
and
imull
mov
pop
iret
into
stos
fs
mov
xor
les
cwtl
mov
pop
addr16
adcl
adc
pop
pop
xor
dec
pop
fsubs
pop
or
rol
sbb
test
adc
jae
mov
and
mov
jnp
pusha
mov
xlat
jp
jo
das
xchg
xorl
addl
in
mov
aas
daa
mov
inc
outsb
lret
fdivs
aas
pmaxub
push
mov
jmp
inc
dec
cmc
jl
dec
xchg
js
dec
ds
repz
xchg
repnz
or
sarb
xor
push
mov
cmc
mov
push
fdivrs
es
or
movsl
mov
mov
sub
test
adc
lock
lret
inc
enter
inc
add
pop
pop
jmp
shr
dec
loopne
insl
jns
testl
lds
sbb
add
inc
xor
out
lds
jb
fs
pop
add
push
ffree
jge
push
sbbb
stc
add
insb
movsl
push
movsb
aad
pop
or
cmp
test
lret
sub
or
sub
aam
ret
mov
jbe
or
mov
adc
out
rcll
fstl
jbe
test
cs
push
mov
xchg
xchg
in
jae
mov
jo
mov
scas
cmpb
mov
loopne
das
ret
cltd
dec
ret
faddl
std
push
xlat
pop
mov
xor
daa
mov
or
pop
mov
outsl
or
jge
hlt
sti
add
or
xchg
cwtl
insl
insb
ljmp
cmpsl
test
cmp
push
pop
imul
push
mull
repnz
jg
adc
imul
xchg
cmp
or
add
rclb
and
mov
fcmovne
sub
inc
fisubs
dec
adc
lahf
insb
push
pushf
sbb
lret
jecxz
pop
and
and
dec
and
cmpsl
push
testb
push
in
arpl
sti
or
outsb
adc
xchg
push
inc
outsb
cmp
out
sarl
lret
add
mov
sbb
mov
mov
aad
xor
fnstsw
xchg
iret
xchg
mov
mov
mov
and
xor
rcll
push
push
cld
sti
push
outsb
in
adc
sub
outsl
mov
mov
into
subl
mov
xor
mov
add
lahf
gs
add
pop
pop
jno
fisttpl
mov
pop
clc
stc
mul
shr
mov
ss
dec
or
pop
xor
or
inc
test
sti
bound
xchg
cmpsb
sub
push
stos
test
jmp
stc
scas
cwtl
fwait
push
sub
dec
adc
xor
mov
out
mov
fiaddl
push
xorl
js
mov
push
add
fldl
bound
sbb
or
enter
iret
les
mov
or
dec
ja
fstpt
inc
xchg
jmp
pop
pop
bswap
xor
jnp
jnp,pn
inc
popf
push
cmp
mov
scas
jl
movsb
jo
xchg
jo
mov
out
dec
inc
bound
xor
mov
jecxz
dec
or
popa
imul
enter
movsl
xchg
mov
pop
xchg
call
jne
push
out
add
ss
jge
push
lock
xor
ja
dec
fisttpll
dec
inc
dec
daa
out
mov
js
sbb
jb
dec
addr16
and
ss
or
test
shl
orb
add
lock
ljmp
push
ret
out
into
mov
pusha
call
push
sub
xor
sbb
xchg
sbb
push
popa
adc
pop
adc
add
out
sub
mov
sub
bound
sbb
xchg
pop
ja
pop
add
in
inc
cltd
sbb
je
add
and
add
imul
sbb
dec
scas
pop
test
in
mov
xor
jmp
rorb
push
xor
out
faddl
call
addr16
shrb
cwtl
mov
or
jb
call
ja
out
addr16
stos
or
mov
outsb
jae
movsb
mov
push
and
inc
loop
outsb
cmp
push
mov
mov
mov
xchg
sysenter
in
pop
mov
mov
insl
xor
insb
or
mov
mul
pop
dec
jae
cs
insl
cmp
add
sub
sbb
out
pop
pop
cmp
jo
jle
jp
mov
mov
xlat
dec
adc
sbb
add
lds
or
cmp
test
test
sarb
popf
imul
addr16
jecxz
shlb
fs
leave
add
gs
sti
jb
pop
or
cmp
sub
ficoms
idiv
mov
dec
adc
xlat
cmp
shl
dec
popa
pop
sbb
adc
repz
lea
add
jno
jp
lods
scas
pop
clc
test
test
mov
rorb
int
ja
mov
pop
or
int
mov
test
add
outsl
sub
xchg
adc
pop
ret
cmp
and
mov
jno
in
sahf
sbb
mov
push
pop
xchg
lret
shr
imul
jns
dec
xchg
xchg
pop
lock
in
sub
sarl
divl
mov
xchg
and
xchg
sti
imul
lret
cltd
ss
pop
jg
sbb
nopl
inc
addr16
xchg
xchg
ret
std
movsb
aaa
add
pop
fbld
repz
and
mov
bound
xchg
mov
jo
fdivrs
lea
push
dec
xchg
mov
and
int3
inc
not
rorl
mov
xor
cmpb
lods
sahf
push
rol
mov
movsl
lock
lret
lahf
xchg
push
inc
call
mul
xchg
hlt
and
xchg
lret
ljmp
mov
push
movsb
pop
inc
or
inc
push
pop
adc
fwait
xchg
daa
out
or
xor
cltd
outsl
data16
xlat
jo
and
push
mov
testl
cmp
and
ret
test
pop
fwait
aas
daa
rol
cmpsl
pop
lahf
shrl
aam
arpl
xor
xor
mov
and
sub
inc
fldl
daa
dec
jge
ret
rclb
ljmp
fs
test
out
and
inc
ret
test
mov
js
test
out
mov
cmpsl
lds
jl
sbb
or
jmpw
movsb
push
lcall
jne
sub
add
cs
test
insb
pop
shrb
inc
out
iret
xor
pop
inc
cmpsb
test
lock
lods
jp
or
inc
stos
xchg
in
sbb
clc
frstor
jecxz
adc
push
repz
stc
xchg
insl
lods
rorb
repz
dec
incb
push
scas
sub
aad
stos
adc
sbb
scas
cld
outsb
xor
ds
xchg
xor
xor
add
leave
das
pop
out
fisttps
imull
cmp
nop
addl
or
push
or
test
add
mov
mov
push
in
xchg
mov
js
pop
pop
pushf
inc
jnp
dec
mov
in
mov
test
adc
insl
push
dec
loopne
dec
cld
movsl
push
pushf
shlb
xor
popa
cmc
pop
xchg
std
mov
pop
shl
jge
inc
push
mov
mov
test
sbb
icebp
adc
or
mov
daa
pop
jno
into
and
test
aad
in
mov
sub
loopne
repnz
popf
mov
fidivl
sbb
cmp
repz
pusha
in
xchg
adc
mov
je
insl
or
jl
movsl
cmp
fucom
in
add
fsubrs
ds
push
push
xchg
dec
loopne
adc
call
loope
add
testb
mov
and
and
dec
xor
mov
add
pop
jp
int3
cltd
nop
aam
adc
incl
mov
jl
fidivs
arpl
jg
roll
ds
pop
inc
and
push
loopne
cld
mov
pushf
outsb
adc
mov
sbb
mov
cmp
insb
xchg
adc
je
lock
aam
add
xor
bnd
iret
push
in
cmp
lcall
insl
jae
push
add
push
inc
das
fisubs
test
aad
movsl
pop
les
mov
aaa
std
scas
inc
add
ja
and
push
fwait
ja
add
aaa
or
add
jl
stos
aam
pop
pop
lods
dec
jg
inc
cmp
add
xchg
fs
es
jne
sub
mov
arpl
shl
out
or
roll
or
jmp
sbb
or
dec
andb
imul
aaa
adcl
cmp
dec
pop
int
pusha
test
mov
push
dec
push
mov
cmpsl
sbb
movsl
fdivrs
jbe
les
mov
inc
jne
push
sbb
imul
jmp
insl
mov
xchg
cmp
add
rcrl
sbb
lret
repnz
loop
dec
push
push
fwait
dec
fimull
js
in
addr16
jno
cmp
xchg
xchg
inc
rcll
sub
xor
xor
push
pusha
jg
dec
and
std
add
jbe
jg
xchg
js
test
sub
sub
and
sbb
inc
lea
sarl
aas
push
cwtl
xor
pop
sahf
stc
xor
jl
iret
dec
jno
mov
mov
into
repz
cmpsb
outsb
scas
jb
inc
xchg
cmp
jae
stos
int3
jae
lods
dec
sub
stc
mov
mov
repz
repnz
cwtl
data16
iret
lahf
cwtl
test
lcall
xlat
inc
shl
pop
sbb
iret
add
cmp
xchg
cmpps
lods
and
sahf
push
sbb
xor
adc
ds
jae
dec
mov
jno
clc
popf
cmc
aam
xlat
cmp
pop
popf
push
mov
add
or
fbld
mov
dec
adc
out
bound
mov
and
test
fstpt
ficomps
pop
pop
push
daa
es
jne
jmp
test
popa
push
stos
scas
sub
push
mov
in
pop
mov
test
cld
adc
leave
enter
std
test
push
jmp
cmp
jb
mov
sub
and
push
call
inc
sarb
xchg
xchg
inc
movsb
mov
push
ja
test
jnp
adc
add
inc
test
inc
xor
sub
cltd
icebp
out
repz
mov
and
push
insb
in
int
inc
cmp
dec
lret
insb
ljmp
jb
out
xor
sub
jno
into
push
sahf
push
mov
popf
int
pop
iret
cmc
jnp
cmpsl
xor
int3
std
push
das
scas
loop
push
mov
movsl
pop
add
xchg
push
aas
xchg
pop
clc
dec
jae
loope
hlt
inc
data16
adc
jl
cmp
cwtl
sbb
test
aad
and
sbb
jmp
lahf
jo
in
add
add
inc
pop
lea
mov
xor
push
jns
je
sub
hlt
pop
or
flds
nop
and
mov
cld
pusha
and
pop
mov
mov
mov
dec
sbb
xor
ss
inc
das
jae
jg
ss
fldt
add
or
aad
mov
jecxz
lds
jbe
lods
fistpll
sarl
shll
or
mov
in
das
or
fucomi
jle
adcb
mov
jg
and
sbb
fcmovne
xor
push
mov
jmp
push
mov
sbb
movsl
cmpsb
lahf
in
or
bound
ds
cwtl
push
or
jne
or
adc
mov
jle
mov
int
enter
mov
dec
ficomps
repnz
daa
jne
and
mov
data16
adc
add
and
stos
push
push
or
mov
mov
call
fadds
mov
cmpsl
pop
xor
add
sbb
jae
xor
jbe
or
mov
aaa
ficoms
adc
roll
inc
sub
sti
sub
icebp
test
clc
jb
cmp
mov
push
fwait
xor
int
push
dec
clc
and
add
adc
scas
or
cmc
cmp
jl
add
imul
test
cltd
mov
cmp
aas
iret
jbe
arpl
mov
push
and
int
jp
mov
outsb
xchg
dec
lods
xchg
jmp
jae
sbb
stos
out
cmp
jne
jl
mov
popl
lahf
dec
jb
sbb
mov
test
add
inc
xor
xchg
jo
sar
stc
push
imull
pop
lods
hlt
mov
dec
or
mov
xor
dec
lock
pop
adc
add
mov
fstpt
inc
into
push
hlt
push
test
pop
lods
insb
xchg
xchg
hlt
repnz
repz
or
sub
popa
shlb
ss
pop
popf
jae
lods
jno
inc
in
lods
mov
inc
pusha
cmp
or
and
loopne
imul
push
clc
ficomps
sti
cmp
jo
icebp
cmc
push
xorl
sub
sub
popf
sarl
mov
mov
lahf
mov
and
inc
adc
ljmp
fsts
cmpsb
loopne
bound
jnp
pop
aaa
fmulp
lock
lods
dec
imul
lea
xchg
inc
fwait
and
pop
xchg
xor
add
mov
sti
int3
popa
pop
sub
adc
mov
addl
inc
insl
std
xchg
inc
cmpsl
test
mov
into
sub
idivb
daa
popf
adcb
in
cltd
xchg
pop
xchg
push
cmp
test
pop
iret
adc
xor
dec
push
xor
es
scas
mov
xchg
scas
cmc
sbb
incl
in
pop
xchg
mov
inc
jecxz
test
std
push
sti
in
jl
outsl
adc
aam
xlat
pop
jbe
xchg
pop
mov
cmpl
dec
mov
sub
hlt
iret
and
xor
jmp
mov
jbe
mov
scas
icebp
mov
lea
fnstcw
push
insb
push
and
and
outsl
stos
sub
daa
cld
fiaddl
out
and
in
imull
das
hlt
outsb
and
inc
cmp
and
ret
dec
push
dec
sbb
js
push
lods
push
rcrl
mov
dec
stos
push
loop
push
adc
mov
in
xlat
push
cmp
mov
push
sti
inc
push
inc
sub
test
adc
movsb
xor
popa
movsl
mov
hlt
push
dec
sub
dec
or
and
cwtl
sub
stos
add
push
lret
and
mov
xchg
sti
sahf
ljmp
push
inc
out
je
rcr
outsl
pop
or
mov
cmp
test
lret
mov
mov
xor
adc
imul
jecxz
fildll
push
mov
aam
imul
push
dec
push
mov
das
add
aam
push
sbb
or
movb
lds
or
insl
sub
push
mov
roll
stc
or
mov
mov
dec
pop
lret
in
pop
ds
cmp
out
sbb
pop
adc
mov
adc
inc
and
mov
or
mov
nop
dec
loope
pop
iret
lds
fidivl
sub
cmp
jle
push
mov
and
cmp
xor
or
ljmp
cs
sahf
test
ret
cmc
mov
xorl
out
jp
ja
sbb
add
lcall
push
dec
cltd
adc
jg
hlt
fists
in
push
mov
mov
push
jg
jb
mov
add
pop
sbb
aas
fimull
sahf
xor
fwait
sub
jo
xor
pop
dec
and
mov
cwtl
mull
fstl
cld
adc
ljmp
rcll
out
leave
ret
stos
outsb
dec
push
pop
or
add
push
insb
mov
pushf
cmc
xor
addr16
xchg
insb
rcll
pop
adc
adc
fcoml
insl
push
xlat
jnp
scas
gs
sahf
dec
cwtl
inc
mov
adc
dec
pop
xlat
mov
ss
xor
cmp
lock
jnp
aaa
sahf
add
push
sub
push
cltd
and
es
aas
mov
popl
hlt
add
out
repz
sahf
into
dec
xor
fdivrp
mov
cmpsb
ljmp
mov
popf
mov
int3
lcall
repz
stc
xor
sbb
and
cmp
lock
xor
xor
cs
into
adc
scas
pop
mov
movsl
mov
mov
push
and
pusha
push
sahf
adc
push
adc
mov
cmpsb
fiaddl
xchg
dec
scas
bound
xor
mov
orb
int3
ljmp
in
addl
repz
faddl
fisttpl
sahf
add
inc
das
adcb
sarl
cmp
in
repz
mov
sub
mov
inc
pop
inc
enter
fldenv
push
test
inc
pop
shll
jno
pop
jg
loope
lock
movsb
xchg
xchg
arpl
mov
mov
sbb
ja
pop
xor
mov
je,pn
sbb
push
enter
cmpsl
and
std
cmp
push
mov
dec
sbb
imul
inc
je
data16
xorb
lock
jmp
or
dec
into
or
loop
out
ja
imul
inc
fwait
mov
mov
icebp
mov
adc
fcmovne
push
or
mov
dec
mov
mov
fstl
add
xchg
enter
jno
lret
or
mov
dec
or
adc
sub
outsl
adc
test
adc
lcall
ljmp
js
lds
dec
repnz
movsb
xor
sub
pop
nop
bound
lahf
xchg
mov
dec
push
in
push
mov
cmp
out
push
insl
dec
jge
jmp
cmp
lahf
lcall
lock
and
in
sub
mov
cmp
lods
inc
and
lods
scas
negl
push
sbb
dec
and
push
jle
sahf
xor
pushw
popf
iret
mov
jecxz
xlat
pop
mov
cmp
mov
push
frstor
mov
stos
jl
mov
jne
mov
rclb
sbb
xorb
mov
insb
mov
or
in
sub
fdivrs
cmpl
and
xchg
jp
repnz
mov
jae
es
pushf
xor
cwtl
inc
pop
and
leave
or
mov
mov
inc
mov
push
push
fs
or
in
dec
cmp
xor
adc
test
cltd
sbb
loopne
outsb
adc
lds
mov
cmp
imul
pextrw
test
bound
pusha
sbbb
repz
cmpl
xchg
sub
pop
push
xchg
sbb
mov
lret
cmp
lahf
lods
popw
add
adc
sbb
mov
fimull
ja
xchg
or
andb
cmp
arpl
loope
jnp
jp
push
sbb
jns
fimuls
sti
jbe
adc
pop
cmp
push
add
mov
nop
lock
ror
sbb
add
dec
inc
iret
out
test
add
sti
sbb
xchg
mov
xor
cmpsb
nop
cli
mov
test
push
loope
sbb
repz
push
adc
pop
lahf
gs
orb
sub
pop
sub
mov
cmp
push
rcr
clc
mov
hlt
adcl
pop
inc
mov
cmp
push
into
lea
icebp
jo
mov
scas
mov
aad
jnp
sub
sbb
jne
inc
push
insl
mov
lahf
negl
adc
add
jb
push
jo
ja
out
fldenv
pop
pusha
pusha
and
cmc
rcl
jp
xchg
arpl
dec
ret
stos
fistps
jo
test
xchg
pop
xor
xchg
mov
test
mov
adc
in
push
or
lods
in
sbb
movsb
jecxz
xor
mov
js
pop
mov
leave
clc
outsb
pop
xor
dec
jg
pop
pop
subb
daa
jo
xor
stc
rorb
in
jmp
xor
and
lock
mov
scas
popf
inc
mov
flds
mov
out
dec
rol
adc
jae
cld
std
mov
aas
xchg
adcb
scas
mov
inc
adc
outsb
daa
jne
fistps
rcrb
pop
xor
in
xchg
hlt
call
sbb
addb
mov
psrlw
pushw
sub
jg
ret
cmp
sti
xchg
adc
mov
aaa
inc
fidivrs
aas
add
adcb
ss
leave
jae
in
push
pop
out
mov
inc
push
xchg
pop
or
cltd
inc
andl
add
xchg
xchg
pop
arpl
outsl
loope
enter
lods
xor
fucom
push
adc
arpl
mulb
inc
fmul
add
cs
sub
fmul
adc
test
jle
outsb
mov
cwtl
dec
jecxz
pusha
sub
or
adc
jne
push
lea
or
inc
scas
addr16
add
jge
add
mov
push
inc
repnz
cwtl
movsb
pop
jmp
cld
fidivrl
jnp
lods
mov
loope
rclb
jo
mov
push
addr16
enter
cmp
inc
cmp
jne
jbe
int
fs
jmp
dec
xchg
fisttpll
cmpsl
adc
inc
xchg
pop
pop
in
repnz
cli
and
xchg
pop
sub
push
decl
push
pushl
test
or
pusha
xor
pop
enter
into
jle
rcll
jne
sbb
incl
je
test
test
neg
mov
pop
daa
cmp
mov
sbb
fwait
xor
addr16
icebp
lret
subb
jnp
cmp
xchg
fs
jmp
lahf
mov
mov
fsubl
push
mov
fidivrl
push
test
pop
fcompl
and
leave
inc
cmp
adc
out
test
les
movb
repnz
shlb
xlat
popf
gs
in
jg
cmp
in
jge
lods
mov
fiadds
repz
inc
sti
fcomip
sub
pop
ret
clc
rolb
ljmp
sub
push
mulb
mov
xchg
mov
mov
in
sbb
setbe
add
jecxz
in
mov
and
jne
insl
loop
xchg
loopne
clc
aam
fsubrl
xchg
jle
cmp
jns
mov
mov
mov
hlt
sbb
xchg
aas
jmp
lods
sub
negb
addl
popa
adc
cmp
xchg
push
stc
add
stos
pop
push
sbb
mov
fsubrp
stos
cli
lea
pushf
ficomps
scas
in
push
arpl
lock
jae
push
sub
sbb
jne
arpl
push
pop
pop
aas
sub
push
sub
push
addl
mov
mov
xchg
push
out
fisttps
xchg
mov
push
mov
push
xor
in
nop
rcr
jle
and
popa
test
mov
rcll
and
sub
hlt
cmpl
test
fldl
insl
gs
outsb
imul
mov
hlt
jno
pop
daa
mov
repnz
dec
and
lods
jg
cmp
jae
fwait
dec
test
out
push
push
pop
xchg
ficoml
adc
add
cmp
pop
mov
adc
push
dec
nop
ret
lds
sbb
fwait
mov
jle
cmp
aam
std
mov
aam
fs
shll
popa
mov
mov
push
test
or
cmp
cmc
shlb
and
int3
pop
pop
jmp
test
xchg
fldenv
icebp
ret
daa
mov
out
subl
in
pop
dec
push
inc
mov
ljmp
daa
jns
fldl
divl
add
popa
ljmp
insl
jmp
mov
rolb
jge
setne
nop
or
pop
pop
add
jne
inc
in
cmp
inc
pop
xchg
adc
mov
push
aas
scas
imul
sub
sub
xchg
mov
decb
mov
mov
or
repnz
jo
sbb
icebp
es
clc
ficomps
adc
lock
xchg
mov
call
pop
mov
call
aas
into
js
add
pop
inc
cmp
inc
insl
add
sbb
mov
das
ljmp
lea
imul
out
jno
xchg
cli
popf
fdivrs
and
mov
fwait
sub
sbb
daa
dec
or
jg
enter
fs
cmpsl
push
daa
adc
jle
push
mov
xor
stc
aas
pop
fnsave
call
pushf
sub
add
das
iret
dec
ret
inc
stos
lret
mov
pop
imul
dec
out
sbb
and
xor
out
mov
gs
mov
leave
lret
aam
in
jne
jae
sti
arpl
push
adc
shrb
popa
sarb
call
or
xchg
push
pop
icebp
pushf
dec
clc
iret
and
nop
arpl
mov
mov
fnsave
sub
fbstp
cmc
clc
jae
inc
dec
scas
mul
nop
popa
push
daa
xor
sub
dec
or
ret
cltd
lahf
add
and
aas
inc
jge
xor
scas
icebp
int
add
adc
add
lcall
leave
shr
xchg
or
xlat
inc
add
push
mov
test
leave
es
sti
lods
dec
mov
sub
or
outsl
push
xchg
fstp
inc
pop
mov
fdivrs
push
jmp
mov
arpl
addr16
fcompl
leave
shrb
xchg
mov
jl
pop
push
pushf
flds
outsb
push
inc
and
das
pop
sbb
or
push
rolb
aad
ret
xor
cmpl
mov
mov
test
arpl
or
push
pop
adc
or
cs
mov
lcall
xor
inc
adc
cmp
cmp
lret
ss
in
fucompp
and
inc
mov
jp
insl
inc
xchg
sub
jle
std
cmp
js
mov
adc
lock
bound
and
popf
ljmp
push
inc
popa
ret
add
int
mov
mov
cmp
shll
or
cs
ret
push
test
sar
test
or
jl
icebp
xchg
mov
xor
loop
ret
pop
aad
outsb
dec
insl
movsl
test
aaa
fisttps
mov
popa
cld
mov
cmp
fsubrp
or
insb
cmc
adc
or
xchg
out
dec
iret
sub
xlat
jno
pop
or
push
push
pop
mov
loope
cmp
movsb
xchg
repz
fidivrl
sahf
in
xchg
fsubrs
xchg
inc
cmc
add
and
pop
cmpsl
je
jmp
mov
je
out
mov
call
hlt
call
mov
jns
push
inc
dec
mov
pop
in
popf
push
addb
mov
dec
xchg
popa
jge
fistpll
out
cvttps2pi
bound
lock
add
addr16
shr
push
sbbl
cmp
push
cmp
sarb
add
xor
cmp
test
in
sub
jmp
cmp
loop
mov
xchg
enter
fs
fimuls
adc
add
xchg
or
repz
sub
lahf
stos
jl
push
and
xchg
or
cmp
iret
je
cld
sub
fdivrs
pop
mov
mov
mov
in
cmp
sti
xor
sbbl
popf
scas
sti
push
loope
push
in
cld
rorb
stos
pusha
inc
loope
adc
adc
fs
sahf
add
stc
jb
fsubl
loop
dec
call
or
insl
outsb
cmp
mov
ds
popf
nop
movsl
mov
notb
xlat
std
sbb
sub
cmp
pop
insl
dec
stos
cmpsb
cmpsl
jae
lahf
cld
shlb
scas
pop
stos
dec
push
loop
scas
push
or
sbb
out
xchg
pop
push
pop
dec
cmp
lahf
inc
xor
fmuls
dec
xchg
and
arpl
je
test
aam
push
push
sbbl
sbb
testl
daa
popa
jns
mov
xchg
push
shll
dec
pop
xchg
adc
cmc
lea
imul
mov
inc
stos
mov
out
pop
ret
and
pusha
je
dec
cmp
push
scas
fcompl
mov
lahf
add
jg
ja
jge
sub
adc
inc
fistps
test
or
std
mov
aaa
mov
sbb
sarl
cmpsb
or
inc
jne
popa
dec
jg
adc
xchg
xchg
cwtl
add
call
pop
popf
call
xchg
mov
out
xchg
adc
insl
test
mov
in
xor
jge
sub
movsb
or
cmp
aam
mov
jge
imul
push
jo
add
inc
sub
out
sahf
xor
int
pop
popa
outsb
call
mov
fcoms
add
sbb
and
dec
loopne
adc
icebp
and
fsubs
mov
aad
mov
mov
and
in
adc
sbb
sahf
lea
inc
xchg
mov
out
pop
lret
mov
pushf
fildll
notl
jecxz
dec
in
out
inc
sbb
jb
mov
push
sbb
and
inc
mov
mov
pop
sub
pop
pop
pop
add
or
jmp
clc
xor
jns
jl
imul
insl
ficoms
inc
xchg
cmp
or
test
arpl
add
fwait
sbb
xorb
jo
cwtl
pop
ljmp
lret
outsb
aaa
lds
pop
aam
in
fidivl
mov
xchg
mov
cmc
and
clc
pop
insl
xchg
cltd
adc
inc
fdivs
jl
or
mov
and
adc
enter
xlat
jno
ja
jmp
test
cld
cli
fildll
mov
adc
je
std
sbb
inc
fsubs
inc
inc
aas
popf
hlt
cmpb
pop
inc
loope
fimull
adc
xchg
pusha
xchg
inc
lret
push
mov
pop
mov
movsl
in
mov
imul
das
inc
add
movsl
cld
xor
mov
xchg
lahf
aas
push
int3
movl
push
adc
dec
push
aam
cwtl
ja
mull
adc
dec
movsb
xor
out
adc
push
pop
js
mov
sbb
pop
out
add
cmp
push
stc
dec
or
push
fs
jmp
dec
and
test
ficompl
cmp
jge
jbe
stos
clc
mov
enter
pop
or
stos
sub
xchg
and
lcall
outsb
sub
xchg
adc
jmp
dec
inc
sti
mov
test
xchg
leave
xchg
mov
pop
xor
int3
cli
jne
push
pop
push
mov
std
mov
sahf
xchg
subl
arpl
push
push
repz
inc
pop
insl
or
test
push
xchg
imul
jne
pusha
decl
fsubl
cs
scas
mov
xchg
mov
or
mov
rclb
xlat
sti
popf
xchg
mov
push
adcl
push
outsb
loop
xor
pop
aad
lcall
cmp
xchg
mov
js
sub
icebp
push
pop
dec
cmp
xor
or
pop
xchg
jae
ja
inc
mov
ss
add
mov
out
xchg
mov
cmp
sahf
aam
mov
pushf
xchg
mov
push
pop
cmp
call
fwait
adc
pop
sub
ret
daa
push
insl
lods
shr
cmp
xchg
jne
push
ror
fisttpl
pusha
pop
mov
push
clc
repnz
call
repz
mov
in
hlt
mov
jge
cwtl
stos
mov
sbbl
aas
repnz
adc
in
add
inc
adc
pop
pop
fdivs
jmp
sarl
dec
push
xchg
push
es
pop
jnp
daa
ljmp
mov
jo
dec
push
mov
cmp
ds
dec
push
pop
mov
insl
inc
pop
xor
adc
inc
stos
dec
inc
jg
jle
dec
out
mov
in
mov
fnstsw
cmc
popf
sbb
cmp
or
cmpb
pop
cmp
sub
inc
test
or
icebp
adc
arpl
add
or
test
cmc
cld
testl
lock
or
inc
cltd
xchg
aad
or
test
inc
push
push
test
sbb
aas
inc
mov
xchg
add
fndisi(8087
outsb
mov
mov
cld
xor
mov
in
call
push
cmc
popf
push
and
push
andl
sar
fdivl
je
or
sub
ljmp
dec
cli
int
jns
pop
repz
fistps
inc
xchg
movsb
sub
mov
out
inc
inc
dec
in
jp
test
jo
popa
push
shr
adcl
mov
pop
movsb
jae
pop
divb
cmp
jnp
push
out
out
cmpsb
shrb
imul
xor
sub
sub
jmp
mov
idiv
push
lock
xchg
jmp
adcb
jge
into
mov
loope
push
mov
adc
lahf
sbb
divl
jge
xchg
push
jbe
push
scas
inc
jbe
xor
imul
xchg
shll
and
ds
in
insl
fdivs
pop
mov
and
fidivrl
mov
sbb
adc
les
fucomi
mov
bound
int3
xchg
xlat
fs
mov
adc
gs
ret
lods
iret
adc
cltd
int3
scas
sub
fstps
aas
in
cmp
xor
mov
cli
adc
aas
iret
test
cmp
out
jmp
daa
pop
sub
add
or
call
fwait
mov
push
negb
pop
and
jge
sbb
cmp
pop
stos
xchg
sarl
lahf
fldcw
into
mov
push
jb
jl
cmp
mov
jnp
in
add
fldl
cli
mov
xor
loope
pop
sub
rorl
xor
sbb
shlb
dec
jae
fstpl
add
andl
dec
dec
mov
test
xchg
mov
in
pop
iret
aas
out
call
test
scas
inc
scas
lods
mov
inc
arpl
aam
push
in
sahf
push
ret
mov
mov
jae
imul
mov
fcoml
lret
pop
cltd
lahf
dec
sub
dec
test
add
add
sbbl
xor
inc
sbb
mov
jnp
jg
cmpsl
adc
into
inc
push
mov
xchg
sub
xchg
pop
and
mov
cli
clc
push
clc
imul
or
sub
sbb
incb
xor
scas
loopne
aaa
mov
std
jae
push
int3
shr
jae
pop
xchg
jl
sbb
cmp
inc
aam
jbe
aam
add
imul
out
xor
stc
fildl
adc
jno
xchg
mov
sub
arpl
push
ret
or
dec
push
insb
cwtl
scas
es
dec
sub
gs
test
mov
int3
std
xor
mov
mov
pop
cmp
mov
lea
add
enter
inc
xchg
sbb
and
dec
mov
je
jge
cmp
adc
cmpsl
add
ret
cmpsb
scas
or
or
das
xor
or
add
ror
pop
loopne
jmp
mov
test
mov
mov
mov
push
rol
push
out
flds
rcr
sbb
aam
dec
dec
aas
test
popl
movsl
stos
push
mov
stos
arpl
shrb
xchg
cmp
je
inc
shl
inc
dec
scas
sub
inc
pop
mov
fwait
and
cmpsl
mov
in
add
adc
clc
push
dec
mov
pop
sti
in
mov
sub
mov
xchg
mov
push
adc
mov
lahf
lock
lea
jb
adc
adc
stos
pop
in
in
adc
cmp
dec
mov
movsl
stc
xchg
iret
cs
jp
leave
test
in
or
bound
xchg
push
lods
adc
aaa
test
cmpsl
push
pop
arpl
jmp
mov
mov
insl
pushl
decl
push
inc
dec
mov
shlb
stc
mov
inc
inc
cwtl
jmp
sti
std
stos
jbe
push
mov
sti
fwait
cmpsl
mov
fidivl
adc
fxam
pop
ficoml
mov
push
sub
ret
xchg
cmpsl
cwtl
icebp
outsb
pop
leave
mov
std
or
fisubs
add
mov
and
xlat
shlb
lahf
push
sbb
xor
jle
sbb
ss
or
push
push
pop
shll
lret
push
fwait
push
adc
jno
shrl
add
int
shll
in
repz
xchg
sahf
dec
popa
test
in
imul
inc
push
cli
push
xor
jno
movsb
adc
pop
cmpsb
and
adc
sahf
dec
sub
sbb
mov
das
push
inc
mov
cmpsb
adc
mov
pop
imul
and
mov
cmpsl
movsb
fisubs
sbb
repnz
shll
pop
sbb
cmp
mov
movsl
daa
inc
stc
xchg
xchg
std
mov
cmp
pop
inc
testb
sbb
cwtl
in
je
push
ret
fisttpl
clc
ror
xor
out
adcb
cs
idiv
ljmp
pop
scas
push
inc
out
push
popf
test
call
test
stc
adc
aam
dec
ret
sbb
fsubr
and
and
hlt
dec
sbb
pushf
rcrl
cmp
pop
xchg
jmp
repz
fbld
sbb
out
push
lret
fdiv
sbb
movsl
out
mov
es
andl
push
jle
in
aad
or
pushf
aam
cmp
mov
ret
lcall
lea
pushf
lret
push
mov
inc
jno
sub
lods
adc
mov
jnp
ret
mov
cmp
mov
mov
mov
or
enter
lahf
mov
scas
fwait
mov
pop
mov
sbb
pop
aaa
or
inc
xor
adc
dec
inc
bound
and
pop
stos
data16
out
lods
bswap
aas
cmp
outsl
fwait
cmp
adc
out
mov
daa
icebp
lret
stc
stos
in
mov
mov
adc
mov
jl
sbb
clc
stos
iret
mov
pop
ret
and
ret
les
sbb
mov
gs
dec
add
cmp
loopne
mov
pop
push
pop
cs
jle
loop
pop
fistpll
jge
lock
addl
inc
sub
mov
pop
out
mov
and
out
and
jno
test
mov
sub
nop
orb
jmp
lret
xor
push
lret
xchg
jnp
shr
jle
ds
sub
aas
mov
jmp
adc
insl
push
dec
stos
push
out
cmp
pop
xor
rcr
sub
bound
stos
popf
inc
xchg
mov
not
jnp
outsb
pushf
xchg
popa
adc
int3
cmp
paddw
in
out
out
cld
xor
out
adc
cmp
outsb
lods
mov
push
mov
sarl
sub
pop
push
in
and
cltd
jbe
fidivrs
mov
push
sbb
push
daa
fmuls
scas
lret
idiv
cmp
js
imul
sti
aad
jl
inc
ljmp
sahf
xchg
lret
icebp
push
insb
and
inc
mov
adc
js
lahf
repz
clc
lahf
dec
repz
sub
ror
jmp
fwait
iret
sub
dec
fwait
imul
movsl
adc
pusha
rorb
sub
mov
notb
cmc
mov
test
rorl
adc
mov
xchg
push
xchg
js
dec
pop
add
jge
mov
mov
mov
cs
lahf
xor
cmp
xor
mov
dec
xchg
loop
cmp
les
add
push
pusha
mov
and
mov
fstps
in
aaa
cmpb
cld
inc
adc
jno
sub
sbb
loope
sub
imul
aam
adc
repz
fdivl
cmp
jno
test
nop
jl
xchg
push
pop
clc
test
mov
into
fmuls
or
lahf
push
aaa
inc
pop
cmp
bound
test
fldcw
sbb
mov
fwait
inc
mov
cmp
aad
fnstenv
lret
rcr
xchg
xor
stos
jle
and
inc
push
jmp
mov
jb
stc
stos
jg
or
add
xchg
dec
notb
rcrl
xchg
pusha
mov
jle
adcb
mov
cmpsb
mul
cs
inc
xchg
fsubrl
test
adc
stc
cltd
out
jo
lret
mov
cwtl
or
mov
clc
cmp
clc
repz
and
popf
pushf
xchg
mov
sbb
dec
adc
jl
fstpt
sarl
cwtl
rorl
sbbl
cmpsl
push
cmp
cltd
mov
or
sub
lcall
xchg
inc
loop
and
sbb
adc
mov
test
mov
xor
ds
sub
add
loopne
mov
push
stos
push
and
push
mov
jmp
dec
popf
inc
dec
sbb
xchg
add
jns
mov
jne
and
cmp
mov
and
mov
and
cmp
xlat
into
mov
add
out
orb
ret
sbb
shlb
mov
scas
mov
stos
pop
mov
or
loope
push
add
jno
cmp
loopne
jb
or
push
inc
xor
push
lret
sub
imul
dec
push
sub
nop
sbb
push
imull
and
pop
add
add
add
push
mov
std
mov
in
xchg
mov
addr16
xor
sbb
mov
inc
pop
and
xchg
pusha
subl
sub
mulb
sub
mov
mov
pushf
inc
or
or
xorl
test
shl
mov
fidivl
scas
inc
je
mov
mov
sti
or
out
add
inc
jae
xchg
hlt
xchg
xchg
jb
popa
sub
xor
nop
jge
adc
xchg
add
ljmp
fst
mov
lods
or
add
push
push
jp
out
int3
test
outsb
sbb
ja
movsl
jl
adc
iret
xchg
icebp
les
ja
mov
mul
pop
loop
leave
scas
mov
adc
jmp
mov
jo
ret
mov
gs
jl
imul
sub
daa
repnz
mov
ljmp
cld
stc
pop
pop
adc
dec
ja
and
ret
jp
cwtl
xchg
je
stos
mov
mov
sbb
jo
dec
pop
sub
dec
and
sbbl
xlat
pushf
mull
out
xchg
data16
dec
mov
sub
out
sbb
cmpsl
adc
out
sbb
shr
inc
xor
pcmpeqb
leave
mov
jge
sub
xor
cmpsl
into
push
mov
fisttpl
lds
push
xchg
and
jo
or
pop
movsb
jb
mov
test
inc
sub
sahf
xor
push
sbb
out
rclb
jmp
sahf
aad
dec
xchg
das
mov
adc
lods
dec
fwait
ret
das
js
mov
cld
adc
nop
sbb
andl
push
adc
je
test
adc
pushf
call
push
cmc
mov
mov
imul
test
popa
push
pushf
xchg
push
test
dec
lock
cmp
enter
lret
sub
cmpsl
sub
js
cmp
jecxz
out
lret
push
push
jge
sub
in
roll
shll
fmul
in
or
sbbb
cmp
addr16
push
push
addb
leave
notl
push
shl
popa
jge
jmp
xrelease
push
jns
addb
jp
fsts
test
and
jge
mov
add
std
fstpl
movsb
jne
loopne
enter
jmp
push
xor
mov
cmp
xor
jg
sbb
sub
mov
into
xchg
insb
lahf
jecxz
pop
gs
adc
adcl
sub
jbe
jno
xor
fwait
es
or
sub
xor
cmp
cmp
inc
cmpsl
mov
inc
jno
or
mov
pop
clc
ljmp
jo
mov
and
enter
negl
addb
fadds
lcall
pop
mov
dec
xor
daa
int3
in
leave
pop
icebp
add
adc
addl
or
inc
pop
and
lds
pop
jno
loop
testl
ljmp
sub
cmpsb
mov
push
push
int3
jb
cmc
fdivs
lods
stos
push
and
in
and
pop
sub
push
aaa
mov
test
or
mov
push
std
lods
int
dec
sbbl
aaa
orb
push
sub
ss
scas
andb
es
lea
sbb
xchg
shll
push
sbb
dec
aas
xchg
cmpsb
dec
pusha
ss
inc
push
cmp
loop
mov
sbb
adc
andb
fidivs
jnp
rcrl
mul
add
dec
js
xor
inc
xchg
mov
dec
fsubrs
mov
outsl
push
fsubl
mov
pop
cmp
std
add
inc
cmc
inc
movb
in
xor
jmp
push
adc
adc
push
stos
pushf
cs
repnz
inc
fildll
lds
orl
and
int3
bound
mov
add
mov
push
or
test
ljmp
mov
dec
loop
adc
nop
testb
lds
pop
mov
or
inc
call
insb
pop
lret
pusha
add
loope
xchg
jge
xchg
ja
jle
dec
fwait
arpl
and
cmp
pop
mov
xchg
or
add
adc
push
jl
jge
cmp
pop
fisttps
bound
cmpb
mov
adc
inc
or
add
pushl
pop
adc
icebp
dec
jecxz
mov
jb
mov
jp
inc
ds
je
add
f2xm1
in
jle
ret
add
les
aaa
rcrl
push
repz
mov
lea
jg
out
jne
fdivrs
jge
jp
je
scas
cs
pop
xor
xchg
aam
sbb
stos
pop
xor
iret
inc
roll
mov
and
into
test
mov
test
mov
lock
sub
mov
cmp
mov
push
inc
push
mov
adc
pop
push
sub
mov
popa
mov
jae
clc
inc
addl
shl
jae
xchg
ss
ja
iret
jae
cld
lds
pushf
insb
pop
ljmp
mov
xchg
popa
insb
dec
stc
jmp
xlat
inc
loop
cltd
and
or
sbb
jb
test
jnp
shlb
lds
or
jae
pop
xchg
sahf
xlat
pop
subl
scas
rol
into
ljmp
imul
iret
cld
cmp
sub
push
cmp
or
fidivrl
mov
fcmovnbe
out
push
imul
or
xchg
jecxz
mov
aas
inc
out
sbb
popa
dec
jmp
mov
dec
pop
out
dec
mov
fcoms
add
mov
adcb
jmp
aam
or
ds
cltd
push
jge
out
repz
das
add
sub
mov
pop
mov
xlat
push
mov
jno
je
mov
push
int
xor
cltd
sub
jnp
inc
jg
daa
xor
cli
inc
xchg
adc
inc
cli
jne
cmp
xchg
insb
aas
mov
or
xor
sub
xor
or
pop
lods
xchg
pop
aaa
imull
sub
stos
mov
lret
dec
or
popf
xchg
jl
test
fnsave
mov
adc
sub
pop
sarb
movsb
mov
aad
add
roll
xchg
je
xor
call
inc
mov
inc
or
out
or
xor
insb
jmp
test
pop
fidivrl
lods
xor
mov
jle
pushw
rorl
adc
mov
stc
fsubrp
sub
mov
pop
and
js
cmc
push
repnz
test
or
push
add
orl
enter
mov
cmp
stc
add
test
adc
push
cltd
mov
mov
addr16
push
inc
add
hlt
rcrb
lods
xchg
into
orl
add
call
into
insl
xor
xorl
out
outsb
push
sbb
add
int3
sbb
sti
mov
mov
sub
pop
aam
sbb
imul
ss
cmp
xor
pop
lods
push
xchg
and
into
xor
xchg
lcall
pusha
ja
aam
xlat
aad
dec
pop
sub
shrb
pop
push
jmp
in
mov
ds
jge
sub
or
test
pop
xchg
and
push
scas
loope
test
jae
leave
or
popa
xchg
inc
out
mov
push
leave
push
fildll
pop
rcrl
outsl
ds
push
dec
and
cmp
jecxz
mov
cmpsl
xchg
sub
sbb
push
jb
sbb
push
mov
mov
pop
inc
inc
sub
push
inc
aad
mov
repnz
sti
into
add
pop
in
cmpsb
sbb
outsl
and
mov
out
daa
pop
mov
inc
shl
push
push
mov
loop
mov
jle
popf
or
pop
sbb
fcmovnbe
clc
dec
sbb
inc
sbb
js
pop
sub
mov
push
out
lods
add
fcmovnu
mov
inc
sbb
stc
leave
jp
scas
jno
mov
clc
mov
pop
xchg
out
je
xchg
mov
xchg
cmp
jne
in
cmp
pop
mov
or
int
adc
and
push
mov
xchg
js
xchg
mov
shll
testl
jl
shlb
inc
inc
lock
sub
testb
and
mov
lret
aam
pusha
sti
fsubs
add
mov
adc
inc
test
movl
icebp
dec
push
sub
pop
and
add
fs
popf
and
sub
xor
repz
test
mov
shrb
aad
xchg
jp
inc
mov
sbb
xor
or
test
in
dec
aaa
shl
lock
adc
mov
out
mov
cli
push
pop
cmp
mov
xchg
leave
loopne
in
jecxz
fldt
adc
loope
sbb
push
sub
xchg
and
mov
xchg
sub
add
adc
and
dec
subl
pop
adc
call
jge
cld
ljmp
nop
cld
repnz
faddl
xchg
test
dec
imul
call
lcall
inc
vmovdqu
je
scas
bnd
dec
movsl
inc
pop
out
aaa
sbb
jo
in
and
lret
loop
inc
scas
push
mov
sbbl
mov
test
mov
push
leavew
rolb
movsb
sub
loope
pop
push
inc
mov
fcompl
test
js,pn
sti
and
hlt
adc
mov
repnz
mov
xchg
sbb
push
sbb
push
mov
dec
push
mov
cmp
movsl
lods
push
dec
orl
sub
cld
inc
arpl
out
or
pushf
fchs
sbb
sbb
or
fcomip
stos
pusha
lods
testb
testl
and
dec
outsb
fucomip
outsl
movsb
xchg
lcall
lcall
dec
out
sbb
loop
or
inc
inc
loope
mov
xchg
call
adc
xor
xor
xchg
fidivrl
push
inc
or
and
xchg
cld
adc
fwait
test
push
scas
in
mov
jb
add
fwait
rcl
jmp
fidivrl
push
push
jns
loope
cmpsl
rcl
ja
or
packssdw
and
push
mov
loope
frstor
and
adc
rcl
rorb
or
sub
push
or
xor
mov
or
cmp
add
mov
test
scas
cltd
xchg
sub
push
or
inc
lcall
cmc
add
push
cmp
clc
jns
inc
rcr
jb
sub
mov
xchg
jge
xchg
or
push
scas
sbb
push
xchg
adc
adc
out
and
fadds
addr16
movsb
shll
pop
sub
xchg
mov
mov
sarb
imul
inc
sub
mov
insb
sbb
mov
ds
dec
outsl
add
sub
les
jl
out
cmpsl
into
or
out
sarl
push
xor
out
data16
xchg
andl
cmp
push
in
sub
xlat
inc
xor
loopne
pop
out
jmp
negb
and
shlb
mov
push
xor
mov
roll
pop
rcl
lea
inc
or
in
ret
xchg
inc
dec
fcomps
popf
mov
sti
orb
fsts
sbb
xor
out
pop
out
pushf
jecxz
pop
rcll
sub
idiv
pop
xor
dec
lahf
push
iret
es
sbb
xchg
in
cltd
jmp
aam
sbb
or
ljmp
es
inc
cli
out
jecxz
jno
cmpsw
pop
cmc
ljmp
std
xchg
or
pushf
popl
fistl
data16
jle
lods
and
cmpsb
sbb
ss
dec
in
pop
test
outsl
out
mov
or
push
and
push
mov
jno
mov
pop
mov
pusha
xor
test
inc
dec
add
push
lds
lret
mov
loop
dec
sbb
ja
mov
cmpsl
push
sub
mov
pop
sbb
rcll
das
lods
xchg
pop
push
in
cmp
ret
pop
jno
jp
sbb
jbe
call
vpsrld
jl
cmpsb
and
dec
xlat
sub
mov
xorl
cmp
cmpsb
rcl
lahf
pop
addr16
cld
dec
jns
shll
pop
sbb
fsubs
dec
sbb
popa
xchg
jmp
ljmp
fnstsw
sti
ret
add
cmp
add
stc
lahf
dec
mov
lods
adc
add
jne
mov
repnz
push
sbb
ror
push
repnz
sub
mov
push
fidivrs
add
sub
xchg
lock
or
mov
sbb
icebp
popa
lret
or
xchg
push
fists
into
mov
ss
inc
jb
push
jno
and
scas
jnp
sub
sbb
push
inc
out
mov
push
lds
dec
test
xchg
mov
and
cli
sbb
adc
in
or
and
fwait
xor
movsb
ret
lds
lods
cmc
mov
pop
xchg
jns
jb
sub
ja
mov
pop
pushl
dec
lret
cli
repnz
ja
sbbl
or
icebp
ffreep
sti
push
mov
ljmp
decl
lock
out
orb
fcoms
cld
out
xor
dec
out
test
push
jo
enter
fistpll
repz
xchg
and
ret
push
addr16
and
cmp
sub
xchg
adc
lods
ljmp
imul
rcrb
or
aam
pop
mov
mov
jp
push
fmull
dec
mov
jns
testl
xor
jae
pop
lods
mov
mov
pop
ret
adc
sub
fnstenv
aad
stc
xor
sarb
push
ds
cmp
mov
testb
outsl
imul
jnp
int3
push
aaa
sub
mov
push
push
push
xor
test
cmp
or
xchg
dec
jmp
sub
int
aad
mov
mov
repz
scas
mov
add
js
and
fisttpll
gs
outsb
mov
jecxz
das
in
pop
cmp
dec
jb
push
push
cmp
inc
mov
pop
pop
mov
js
in
shll
inc
es
jno
xor
ljmp
or
movsl
mov
outsl
add
clc
data16
cmc
imul
xor
or
call
testb
jle
jbe
ret
adc
or
bound
fcoml
popa
lock
repz
mov
add
jne
nop
sarl
mov
lds
loopne
add
push
mov
sbb
mov
mov
dec
imul
or
or
movsb
push
leave
mov
popa
adc
fs
push
std
sbb
xchg
out
repz
sbb
ret
dec
outsb
roll
jmp
cmp
cmp
lds
or
jae
sarb
fidivrs
icebp
add
mov
push
imul
subl
cmp
gs
shl
fimuls
test
es
jl
lret
rcr
fcomps
lret
in
xchg
pop
inc
repz
ja
sbb
lods
ret
mov
mov
push
or
stc
jbe
call
jge
mov
dec
or
mov
fisubrl
push
cmp
lods
popa
std
xchg
movsb
out
call
cli
jmp
lahf
push
insl
xlat
mov
sbb
test
roll
adc
mov
imul
mov
inc
ljmp
mov
xlat
test
pop
jmp
cmp
call
xor
jns
sub
idiv
test
add
ds
jns
lock
mov
or
sti
inc
fimuls
pop
and
ret
jne
mov
push
or
fisttpl
imul
loopnew
es
sub
out
dec
adc
imul
lock
adc
test
push
icebp
mov
rcrb
and
add
mov
inc
leave
xor
mov
inc
and
jo
test
cmp
add
inc
push
shl
lret
mov
lahf
outsl
int3
xchg
sar
mov
movsb
mov
adc
decl
movsb
rclb
jle
jecxz
push
cltd
mov
nop
cmp
push
add
scas
jae
inc
out
inc
scas
push
jl
cmp
popa
cwtl
cmpl
xchg
sti
jecxz
xor
int3
and
test
push
fstpl
pop
sub
sub
dec
fcmovnb
push
or
js
sbb
adcb
jne
cmp
inc
cmp
das
adc
fnstcw
jmp
js
out
ret
iret
cmpsl
inc
shl
lds
fsubrs
cmp
in
pop
ds
push
push
add
loope
mov
xor
mov
scas
scas
xor
fidivrs
push
push
or
leave
inc
jle
and
inc
xchg
xor
sti
xor
push
push
test
inc
mul
ret
jae
lcall
inc
xchg
std
clts
aad
insl
push
mov
lret
sub
mov
jmp
pop
stos
add
ds
faddl
sub
ficoms
or
fldcw
xor
or
sbb
xchg
je
cmp
rcl
dec
xchg
dec
mov
stos
jnp
movsl
loop
sbb
jno
and
mov
aas
fstps
imul
jmp
cmpsl
mov
xchg
cltd
xorb
inc
xchg
mov
jl
add
in
pop
sbb
jecxz
xchg
inc
jb
inc
cmp
outsl
xor
pop
jmp
mov
outsl
jecxz
pop
das
jno
ret
call
sub
pop
mov
or
dec
push
mov
xor
jbe
pop
insb
xlat
xchg
push
adc
nop
inc
adc
pop
subb
shlb
ror
aad
js
and
jl
ret
adc
xchg
xchg
jge
sbb
push
imul
popa
lcall
jns
stc
cwtl
out
cmp
sub
xor
test
or
push
sbb
shlb
sti
aam
int3
arpl
inc
icebp
rorb
pusha
mov
mov
sbb
xchg
cmp
adc
les
enter
movsl
push
jbe
rep
sahf
mov
enter
mov
or
xchg
add
aad
das
clc
sbb
mov
pop
loope
adc
in
push
jge
pop
leave
or
enter
cwtl
in
dec
dec
sbb
jecxz
loop
stc
sub
xor
mov
push
sub
or
stos
in
mov
xchg
or
fcmove
mov
repz
shl
ror
movsb
adc
mov
dec
dec
pop
sub
push
in
add
sub
lds
testl
sub
rorl
mov
mov
inc
pusha
mov
cmp
jb
pop
outsl
or
les
pusha
add
enter
push
jno
or
in
add
jg
std
pop
sub
cmc
pop
insb
push
xor
into
xchg
pop
fdivl
pop
movb
leave
xor
jle
call
adc
mov
mov
ret
rcr
pop
jmp
sub
es
inc
xorb
inc
jno
aam
and
ja
push
in
sbb
cmc
push
xchg
jg
xchg
int3
insl
push
mov
rorb
or
test
xor
or
dec
xor
cli
pop
adc
inc
sahf
out
fidivrs
jo
adc
adcl
in
xor
out
mov
mov
dec
out
fcomi
rorl
jne
outsl
jo
testl
and
and
mov
add
jmp
fsubl
popf
or
lock
repz
dec
inc
cmp
icebp
cmp
dec
inc
shrl
in
jbe
mov
cwtl
mov
sub
das
mov
mov
test
pop
push
sub
add
add
xlat
mov
pop
and
cmpsl
loope
pop
xchg
jbe
ds
jae
les
lret
arpl
adc
xor
xlat
push
cmpsl
sub
push
push
jl
mov
mov
jmp
cltd
jns
pop
es
mov
lret
dec
push
pop
dec
lahf
jmp
stos
pop
adc
xchg
adc
xorl
in
adc
lcall
xor
push
insb
popa
shl
or
pand
cmp
add
stos
cmpsl
adc
ds
xlat
xor
fdivrs
aas
in
adc
sbb
xchg
add
aad
stc
ljmp
std
xchg
aas
push
andl
sti
mov
aaa
dec
int
sbb
mov
arpl
gs
or
fidivl
push
cmp
pushf
bound
into
scas
pop
int3
jae
bound
leave
popf
in
daa
mov
scas
aaa
pop
dec
jmp
push
xor
jae
mov
inc
jmp
xchg
les
mov
dec
in
js
dec
notl
push
sbb
mov
test
mov
jl
shlb
xchg
jbe
lcall
dec
aam
orl
je
fdivs
push
add
mov
outsl
and
arpl
sti
scas
insl
dec
inc
push
sub
jnp
int
hlt
xlat
pop
hlt
add
sbb
pop
and
or
add
icebp
xlat
and
and
push
aas
lcall
insb
sub
jb
roll
xchg
outsl
pop
cmp
popa
cmp
pusha
dec
and
dec
fidivrs
cmp
movsl
and
pop
or
inc
mov
cmpsl
cmpb
int3
out
jl
scas
stc
gs
push
rcr
iret
mov
xchg
xor
jo
cwtl
cmp
or
mov
out
int3
and
cli
aaa
scas
decl
mov
pop
je
add
clc
xchg
pop
jne
call
cmpb
jmp
lahf
jmp
sbbl
mov
mov
mov
mov
fidivrs
pop
testb
cmpsl
adc
mov
mov
sub
pop
dec
mov
addl
ja
aad
push
loop
and
fdivrs
das
cmpsl
pop
xor
dec
fldl
add
popf
cltd
push
test
dec
inc
or
addr16
xchg
sub
enter
xchg
lock
lcall
in
jmp
sbb
hlt
sbb
xor
cmp
cmp
in
jle
fidivrl
daa
pop
andb
sub
sub
mov
icebp
jle
pop
adc
flds
subb
jb
jae
loop
mov
loop
sbb
mov
fimuls
pop
das
pushf
and
mov
xor
les
loop
xchg
test
lcall
add
leave
shll
push
mov
pop
xor
jne
push
jl
shlb
ja
jg
inc
push
gs
addr16
push
ret
sub
fstp
addr16
pop
in
and
mov
pop
lret
adc
add
push
repz
out
outsl
pusha
out
dec
fstpl
loopne
gs
add
add
lahf
out
jno
mov
add
and
push
sub
into
pop
sub
mov
xchg
lret
jecxz
cld
dec
insl
cwtl
mov
std
or
std
mov
add
add
sarl
dec
sbbl
icebp
pop
mov
pusha
sbb
cmp
int3
push
sub
cmp
in
add
lcall
test
and
inc
mov
jns
fiaddl
and
loope
fstps
call
ds
lods
sub
jb
sub
push
xor
push
mov
or
jne
xchg
dec
sbb
fidivrs
pop
mov
test
mov
loope
and
movl
cmp
xchg
std
mov
add
inc
orl
lock
int3
inc
inc
lret
jae
dec
enter
push
xor
pop
iret
sub
jo
fbstp
outsb
jmp
add
cltd
cmc
or
aas
mov
paddusw
jmp
repnz
inc
ficoml
sbb
xchg
jbe
cltd
cs
add
out
mov
fisubl
ss
jmp
rcrl
adc
mov
aas
push
cld
fadds
xchg
pop
mov
pop
cld
rorb
js
jge
ficoml
bound
test
add
test
gs
push
in
add
mov
add
lret
xchg
test
addr16
cmp
and
out
les
aas
sar
sub
roll
cmp
pop
dec
lds
sets
jmp
mov
outsb
or
sarb
ror
sahf
mov
xchg
mov
js
sbb
cmc
imulb
ljmp
jbe
cmpsl
xchg
fldcw
imul
int3
pop
add
inc
stc
add
ret
cs
cmp
movsl
adc
jl
scas
dec
inc
dec
clc
ret
stos
ljmp
cmc
xor
loopne
lcall
stos
xchg
jg
adc
dec
inc
cmp
cmp
dec
mov
orl
andb
pushf
int
stc
fwait
sbb
inc
cmp
fstps
iret
or
and
pop
inc
push
jns
loope
cli
test
pop
inc
xor
aad
push
adc
out
jno
mov
add
add
leave
fwait
push
pop
scas
int3
jle
mov
xchg
imul
lods
sahf
jg
loope
inc
lahf
stc
inc
push
adc
out
addr16
testl
int
adc
jmp
jo
sub
pushl
and
int
lea
or
shlb
or
cmp
leave
out
cmc
mov
jbe
es
sub
xchg
cmp
push
loop
push
dec
sbb
imul
hlt
out
ficoml
clc
movl
mov
rcll
mov
in
xchg
xchg
adcb
fisubrl
popa
incb
lock
mov
xlat
mov
call
divl
xor
xlat
fistpl
and
cmpsb
jnp
das
outsl
sub
shl
scas
fstpl
popf
cvttps2pi
adc
push
in
pop
cmc
jae
xchg
mov
mov
inc
sahf
mov
scas
push
int
scas
into
in
out
data16
cmp
imul
adc
jmp
js
aaa
fildll
sbb
outsb
cs
lcall
xor
aam
sbb
xchg
out
xlat
push
rolb
test
mov
lret
mov
rol
mov
popf
sarl
dec
repz
sub
or
jne
adc
cmpsl
mov
xchg
lcall
test
outsl
push
ss
in
push
andb
push
out
fs
and
out
in
xchg
xor
scas
pop
jmp
cmp
cmp
aaa
xchg
dec
inc
loope
ja
jp
mov
je
xchg
adc
adc
mov
shl
mov
sub
rcrb
outsl
pusha
fstpl
sbb
out
dec
jne
mov
dec
mov
and
fildl
mov
sbb
adc
mov
loopne
dec
push
xchg
test
jecxz
fcomi
loop
leave
test
jbe
int3
xor
scas
test
aaa
jl
jge
push
inc
sahf
dec
xchg
cld
sub
ja
bound
cmpsl
les
xchg
test
test
xor
int3
add
sub
adc
shlb
test
rorb
arpl
pop
or
ljmp
pop
xchg
fsubrl
movb
sbb
sub
cmp
push
outsb
testl
jns
push
sub
xchg
pop
subb
sbb
mov
sarb
inc
cmpl
psllq
xchg
adc
inc
cli
sub
jmp
jne
in
lret
inc
push
lods
imul
and
clc
fisttpl
insl
mov
pop
pop
sub
push
addr16
mov
add
and
sub
movsl
dec
movsl
je
xchg
push
mov
dec
insb
fmull
and
jmp
mov
stos
cmp
push
sarl
cmp
imul
jl
popf
movsl
incl
jae
adc
xchg
and
fcom
sar
inc
mov
mov
sub
pop
das
inc
xchg
arpl
mov
std
test
ret
das
xchg
pop
jmp
data16
mov
xor
test
xor
xchg
in
jbe
pop
push
dec
test
adc
adc
push
out
add
push
outsb
dec
lret
rorb
iret
xchg
into
xchg
pop
cs
rol
es
xchg
jnp
adc
mov
add
dec
test
and
loopne
and
data16
push
mov
or
fldlg2
lock
sbb
lcall
sbb
sub
xor
cmp
nop
mov
mov
push
lahf
and
sub
push
xchg
aam
lea
jge
adc
in
and
ljmp
cltd
fcomip
pushf
xchg
xchg
mov
mov
xchg
cmp
xor
mov
mov
or
lahf
test
jmp
in
xchg
adc
out
lahf
bound
nop
fldcw
pop
xor
rolb
jbe
and
scas
fisttpl
dec
in
test
inc
cmp
jp
jns
push
rolb
lret
dec
scas
mov
mov
in
inc
leave
out
aaa
jno
inc
jb
inc
shll
mov
insl
mov
push
insb
xor
lds
mov
push
add
loop
push
arpl
shlb
jle
sbb
xchg
pop
mov
leave
popf
repnz
cmpsb
and
int3
mov
xchg
fs
lcall
in
jp
mov
xor
in
in
mov
adcb
lock
xor
test
dec
mov
dec
and
ja
pop
mov
pusha
in
or
cmp
add
in
fcompl
fildll
test
mov
and
pop
adc
and
adcb
rorb
sti
xchg
in
jg
mov
jg
stos
insb
push
dec
mov
sti
dec
pusha
adc
sub
js
rcll
inc
or
jno
popf
dec
ljmp
push
leave
xor
cmpl
cmc
push
jns
mov
test
mov
dec
xchg
mov
add
xor
push
or
pushf
sub
out
cmp
cmpsl
push
sahf
push
inc
sub
shl
int3
mov
mov
mov
cmp
or
add
add
xchg
mov
dec
daa
ljmp
orb
mov
adc
enter
out
mov
xor
mov
addb
daa
cmp
jnp
xchg
pop
jmp
adc
lds
lods
sbb
add
sbb
xchg
inc
aas
and
scas
sub
cmp
adc
imul
add
push
addr16
rol
mov
out
sbb
sbb
sub
cmpsl
fsubrs
push
sbb
das
lcall
sahf
stc
jnp
popa
xchg
adc
scas
inc
xor
or
dec
xchg
js
jae
mov
adc
mov
or
adc
cmp
push
das
mov
mov
pop
test
sti
push
and
js
sbb
fsubrp
movsw
sbb
cmp
pop
mov
movsb
adc
sbb
fdivrp
mov
lcall
sbb
mov
dec
jo
mov
jge
xor
mov
mov
dec
data16
xchg
int
aaa
daa
mov
ret
pop
rcrl
and
xor
mov
test
mov
test
aas
and
imul
addb
and
mov
or
inc
mov
mov
clc
mov
cmp
insb
mov
pop
sbb
push
mov
loope
lock
pusha
jmp
insl
pop
js
push
cmpb
imulb
out
fmull
mov
and
int
out
xchg
ja
stc
ficompl
bound
sarb
inc
int
in
ret
xor
jbe
push
adc
pop
and
out
inc
pop
or
cmp
mov
not
pop
jb
or
shlb
mov
shlb
andl
push
test
inc
xor
jns
nop
scas
movsl
xchg
adc
pop
insl
lcall
aam
push
fists
fmuls
dec
popf
jne
hlt
cmp
out
imul
insl
int3
aas
ret
or
or
pop
xor
mov
dec
lods
iret
dec
dec
and
roll
mov
cmpsl
mov
mov
jae
inc
outsl
out
pop
lcall
in
mov
fidivrl
adc
mov
shll
es
xor
lahf
test
mov
jmp
jl
sub
ret
pop
sub
xchg
or
pop
popl
pop
pop
repz
dec
or
and
and
mov
iret
lods
dec
xchg
loopne
adc
jns
or
iret
jnp
xlat
xchg
iret
sbb
fbstp
add
js
sub
std
dec
jb
lods
mov
jle
lret
lods
movl
push
das
enter
xchg
loopne
adc
add
mov
or
es
sbb
ficompl
push
jmp
adc
mov
push
jnp
xchg
push
adc
push
inc
inc
add
mov
testl
repnz
add
xor
in
add
repz
and
cld
pop
jmp
and
pusha
adc
inc
cli
movsl
xor
test
and
sti
call
cmp
jp
cld
aam
pop
cmp
jns
test
mov
mov
xchg
dec
jmp
jns
xor
sahf
sub
adcb
out
repz
aam
lret
mov
pop
loope
inc
adc
xchg
xlat
pop
xor
push
jmp
jmp
sar
nop
sahf
dec
es
stc
ss
imul
and
adc
push
xchg
adcl
movaps
nop
lret
inc
cmp
stos
rolb
mov
call
loopne
inc
sarl
xchg
test
mov
rcl
cmp
push
dec
bound
fcompl
pop
mov
push
imul
sub
out
stos
daa
decl
and
movd
lcall
scas
pop
icebp
pop
cmp
pop
into
fbld
repz
sub
imul
and
jmp
push
ret
xchg
xor
lea
push
fmuls
lds
aaa
pop
push
lock
mov
sbb
std
mov
xor
mov
jp
xchg
or
sbb
jl
rcl
push
pop
arpl
pop
call
mov
push
fcmovnbe
lahf
in
pop
daa
leave
outsb
js
imull
imul
push
sbb
rolb
jge
outsl
ret
popa
or
daa
jg
andb
xor
cmp
movl
jge
imul
xor
les
ficoms
dec
inc
in
adc
cmpsl
inc
not
add
fbld
add
adc
popf
cwtl
mov
xlat
cmpsb
mov
stc
in
mov
cmpl
and
outsb
std
leave
mov
fsub
push
fmul
test
mov
iret
xor
add
xor
dec
pop
push
std
mov
mov
mov
sbb
stc
in
inc
jge
mov
out
adc
stos
scas
shlb
fwait
incl
push
pop
xor
jmp
popa
mov
fisttps
addr16
ret
jge
mov
mov
lcall
xchg
sbb
push
mov
and
sbb
mov
or
adc
jmp
sub
mov
pop
add
addr16
cmp
lahf
or
repnz
push
cmp
sub
xor
xchg
add
cmp
movsb
cmp
fsubl
mull
add
or
lea
sahf
outsl
leave
push
jle
add
dec
mov
cmp
sbb
mov
jns
repnz
out
jns
pop
adc
es
sarl
imul
in
movsb
gs
cli
mov
mov
inc
fwait
push
outsl
imul
dec
or
mov
call
push
or
or
or
mov
aaa
popf
sub
push
sub
jge
xor
in
inc
jae
mov
out
outsl
outsl
pop
or
paddw
push
mov
hlt
xchg
dec
pop
shr
dec
out
push
addr16
out
pop
pop
add
in
shll
outsl
bound
xlat
jne
aad
fdivs
jp
pop
cld
loop
ljmp
popa
stos
lds
loopne
je
and
jge
pop
out
lock
jno
inc
xor
fildll
push
and
pop
mov
scas
xchg
movsl
dec
sahf
stc
or
rolb
gs
sarl
ja
xchg
sbb
stc
das
sub
mov
aad
pop
add
test
sub
cltd
xor
scas
sub
lea
adc
and
push
test
dec
out
divl
jae
sbb
clc
repnz
pop
dec
out
mov
push
dec
pusha
jne
out
sbbb
fs
lods
mov
movsb
popf
aad
arpl
xlat
inc
push
sarl
lock
xor
jmp
cmp
sbb
xchg
inc
flds
popf
scas
cs
test
repnz
lret
outsb
rorl
pop
jno
andb
push
jno
sbb
aas
add
sbb
inc
push
ret
testb
and
imul
pop
arpl
sbb
shll
cmp
cmp
aaa
pop
and
sti
imul
fisubl
adc
xchg
cmpsl
push
pop
jg
jns
push
gs
clc
loope
xchg
into
popa
xchg
fisttpll
out
ret
icebp
orb
xor
push
push
cld
inc
mov
adc
push
jns
xchg
inc
inc
pushl
fcoml
mov
ss
ret
jno
cmc
imul
pop
ljmp
mov
daa
pusha
and
inc
fistpll
into
lcall
hlt
stos
jg
out
sbb
jmp
xchg
cs
cmc
cltd
stos
xor
add
icebp
das
push
sarb
mov
push
and
arpl
inc
pop
or
push
mov
or
pop
mov
cmp
fs
adc
js
xor
push
into
push
shlb
pop
add
addr16
xor
in
xchg
xchg
ljmp
and
xchg
sbb
sahf
xchg
jg
sub
je
into
jg
xor
popf
outsl
adc
lahf
jne
scas
adc
mov
and
repz
mov
in
cld
popf
lds
cmp
jnp
xor
cmp
adc
out
stos
adc
jl
xor
add
and
jb
in
cmp
movsb
pusha
xor
push
push
fcomps
popa
cld
jne
ss
pop
xor
mov
sarb
and
dec
jne
pop
inc
mov
aam
loopne
jmp
pop
int
jl
shrb
mov
stos
and
sub
inc
adc
mov
fmuls
ss
ret
pop
dec
emms
aad
or
inc
cmp
lea
xor
lahf
and
or
sub
push
repnz
cmp
in
jbe
xor
pop
arpl
mov
outsb
inc
iret
movsb
jo
sbb
inc
inc
pop
nop
push
mov
or
inc
inc
out
insl
ds
lea
scas
mov
ret
jns
adcl
stos
data16
fbstp
inc
sahf
inc
jg
mov
sbb
pop
ffreep
lret
loop
xor
mov
xor
fisubrs
inc
js
cmpsl
clc
pop
jge
pop
repnz
mov
sbb
jl
int
mov
mov
nop
popf
loope
cmpsb
jecxz
jecxz
in
leave
pop
jns
adc
inc
push
stos
jno
test
scas
repnz
xor
cli
jle
xor
fcomip
repnz
mov
dec
push
sub
jg
mov
imul
insb
jb
cli
sbb
xchg
sbb
repz
outsl
add
jb
jb
sub
test
xchg
test
scas
xchg
add
pop
test
mov
pusha
sbb
add
sub
xchg
scas
xor
cmp
stos
lock
xor
and
push
mov
std
out
fisttps
out
adc
mov
jmp
js
hlt
lret
in
lea
and
loopne
mov
ss
in
xchg
push
fidivl
shrl
lret
dec
pop
mov
icebp
mov
pusha
les
mov
std
pushl
stos
push
jp
ret
lea
repnz
mov
movsl
insb
mov
fildll
fldl
sub
push
push
jl
pop
sub
jne
and
bound
cmpsl
lods
dec
fists
into
aas
unpckhps
test
dec
faddl
and
sub
cmp
ret
out
addr16
mov
outsl
mov
fcmove
mov
testl
ja
fstp
mov
jge
sbb
cmpsb
jb
pop
pop
sti
dec
sahf
adc
or
mov
jbe
rorl
out
scas
rorl
out
outsl
cmp
pop
orb
mov
mov
clc
push
fists
dec
jnp
mov
dec
movsl
enter
inc
push
imul
and
inc
in
sbb
mov
adc
test
mov
lds
ljmp
add
decb
mov
jns
pushf
sbb
mov
popf
cmp
pusha
inc
iret
int3
adc
add
out
dec
cmp
test
mov
ret
sbb
xchg
xchg
mov
lods
mov
daa
cmc
pushf
xchg
fsubl
loopne
fmul
jmp
cmp
fsubrl
sub
jo
cmp
mulb
xchg
pop
pop
xchg
cmpsl
sarl
test
test
fmul
mov
call
push
fiadds
jg
mov
and
flds
pusha
and
scas
in
popa
jle
sbb
jb
cmp
cli
mov
test
and
xor
xorl
enter
repnz
call
in
test
sbb
sub
add
xchg
into
xor
xlat
push
mov
movsl
sar
mov
inc
xchg
mov
aam
les
daa
and
cli
add
jl
nop
mov
aas
das
xlat
mov
lret
mov
pop
in
test
in
mov
shlb
popa
pop
out
pop
cwtl
inc
xchg
repnz
push
aad
lods
sub
mov
lret
mov
scas
jp
cmp
mov
rcll
movsb
or
pop
and
sub
mov
rol
les
xor
sahf
jne
cwtl
xor
lcall
mov
dec
cmp
xor
stos
cld
orb
sbb
hlt
test
pop
jge
cmp
mov
lods
enter
jmp
push
fidivrl
sbb
lods
push
mov
mov
mov
pop
in
pop
rolb
add
sub
pop
mov
mov
cmpsl
loop
mov
or
xchg
xor
jle
xor
enter
mov
popa
test
fs
mov
mov
daa
inc
insb
int
sahf
addr16
out
push
test
ja
add
and
pop
mov
jae
xchg
xchg
xchg
icebp
fwait
outsl
imul
dec
mov
mov
and
dec
jecxz
jle
sbb
pusha
testb
mov
js
jp
cmc
ficomps
sbb
cmpsb
jno
adc
sahf
inc
out
or
outsb
in
dec
add
or
sub
movsl
std
mov
jns
cs
and
and
jl
or
gs
lods
leave
jecxz
or
cmp
or
push
out
push
inc
push
les
pushf
or
pusha
sbb
xor
push
imul
sbb
dec
push
pop
xlat
mov
mov
mov
push
rcll
fisttpl
sbb
inc
aaa
or
insb
or
pop
arpl
fisttps
and
add
or
fstpl
add
pop
mov
or
shr
push
mul
outsw
sarl
cmp
inc
sub
inc
push
nop
daa
test
and
mov
stc
or
fucomp
pop
push
lahf
and
push
aaa
dec
mov
xchg
arpl
pop
cmp
mov
mov
push
int
jno
push
imul
mov
and
stos
icebp
aam
sub
push
inc
and
cltd
xchg
rcll
iret
or
stc
insl
aad
cmp
xor
mov
inc
add
scas
repnz
lea
mov
push
and
pop
out
lcall
push
push
dec
pop
jp
and
cmp
fnstenv
clc
push
pop
push
lret
sub
fwait
cmp
das
xor
lods
insb
jmp
push
xor
inc
cmp
push
and
inc
pop
jno
mov
mov
jne
outsl
xor
lret
mov
scas
add
inc
xchg
lea
push
jle
popf
xchg
loop
das
pop
cwtl
or
daa
pop
xchg
std
mov
xor
or
jle
cli
lock
stos
inc
popa
pop
mov
xor
test
sub
and
andl
xlat
mov
and
inc
dec
movsl
rorl
enter
xchg
roll
mov
cmpl
jnp
sbb
push
ss
mov
ja
dec
mov
xchg
std
test
mov
out
mov
push
jnp
xor
cmp
jns
push
sbb
and
adc
mov
lods
daa
dec
dec
adc
js
rol
or
pop
fldl
mov
insl
out
pop
cmp
mov
rolb
xor
int
push
cmc
lods
lret
scas
sub
sbb
jecxz
push
sti
lods
faddl
lods
icebp
ja
xchg
std
loope
jecxz
mov
xlat
cmp
lods
dec
jg
mov
shlb
sub
in
dec
adc
mov
stos
xor
push
es
jecxz
mov
inc
fwait
outsb
sbb
or
sahf
cltd
inc
adc
sbb
ficoms
daa
mov
jnp
push
aas
xchg
fimuls
push
pop
ds
mov
sub
fisubrs
fcomp
pop
sbb
pop
pop
insl
xchg
sbbl
push
and
jne
rcll
ret
jg
mov
push
xor
pushf
and
mov
sub
das
and
cmpsl
das
or
int3
jg
sar
rclb
cmpsl
push
mov
bound
mov
pop
adc
cmpsb
loop
mov
sub
push
pop
mov
divl
inc
push
aas
push
call
add
or
or
out
mov
stos
fldt
mov
arpl
js
ret
mov
dec
mov
mov
out
mov
sub
adc
inc
mov
or
xor
pushf
dec
bound
jnp
jae
xchg
jg
je
xor
adc
clc
sbb
ret
mov
xchg
fwait
cmp
xchg
pop
dec
out
sbb
ljmp
dec
dec
aad
jp
mov
dec
test
dec
bound
dec
scas
cmp
bound
lcall
jl
fstl
lcall
rep
adc
int3
aam
inc
mov
mov
inc
push
add
fdiv
and
sti
out
sbbb
fs
out
notl
scas
xchg
sbb
sti
fwait
out
aas
jae
dec
imul
xor
test
loope
dec
lret
pop
jecxz
mov
cmpsl
jmp
ds
int3
jle
push
and
adc
out
outsl
push
mov
jmp
pop
test
imul
fwait
mov
add
jbe
icebp
cmpsb
mov
pusha
test
xor
outsb
cli
sbb
aaa
stos
mov
data16
jnp
out
cltd
test
aaa
and
mov
insb
fstpl
pop
jmp
sub
jmp
dec
mov
or
mov
fwait
in
dec
test
push
adc
cmpsb
testl
ret
mov
xchg
jnp
pop
gs
cmp
sub
mov
push
xlat
je
mov
sahf
xlat
inc
jae
imul
jo
jg
repz
movsb
test
jl
cmp
repnz
imul
imull
shrb
loope
xchg
xchg
mov
lcall
cwtl
cs
jmp
jo
dec
ret
stos
mov
pop
adc
mov
and
in
lock
loop
jbe
mov
mov
sub
and
and
push
push
movsl
mov
stos
fldl
in
cltd
mov
fisttps
adc
iret
pop
fsts
test
ficoml
data16
dec
dec
push
jp
xchg
shrb
loope
or
mov
bnd
data16
lods
daa
mov
shrl
fbstp
xchg
dec
sbb
and
xor
add
pop
sbb
push
push
clc
xchg
subb
in
inc
pop
jbe
gs
lods
cmp
hlt
imul
push
test
dec
cmp
outsl
mov
aas
addr16
sbb
cli
jo
ss
push
jbe
fnstsw
jo
xlat
stc
leave
movsb
test
out
outsl
movsl
lcall
inc
add
insl
fnstcw
enter
cmpsl
pop
mov
cltd
dec
inc
inc
cmp
jno
adc
test
xchg
loopne
add
leave
sahf
adc
imull
jmp
mov
fsts
dec
out
pop
in
mov
test
pop
xor
cmp
rorb
addr16
xor
test
push
pop
mov
xorb
into
jns
and
jmp
iret
fistl
jnp
mov
jecxz
and
ljmp
fldl
adc
lock
in
mov
mov
or
insb
lcall
xchg
push
push
push
xchg
movb
mov
js
ret
add
das
fs
aas
wrmsr
movsl
into
lret
int
mov
cmp
or
dec
inc
stos
aad
adc
iret
cli
and
inc
jle
stc
or
xchg
or
push
iret
mov
subl
shlb
shrb
jb
fcmovu
adc
std
decl
cli
mov
iret
lea
fidivrl
inc
movsl
out
imulb
aas
mov
arpl
xor
fisubl
fs
ret
jmp
je
cmp
fnstcw
leave
cmpsl
push
pop
insb
nop
adc
pop
mov
adc
js
scas
jb
hlt
cmp
mov
mov
mov
fidivl
cmpsb
sbb
and
and
repnz
push
pop
inc
out
sbb
js
mov
mov
sbb
int3
clc
icebp
mov
inc
fwait
xor
sbb
popf
sbb
or
jnp
lcall
or
sahf
xor
sub
pushf
into
out
dec
xor
xor
sbb
and
aaa
outsb
les
pop
or
dec
pop
push
int
aaa
and
ljmp
sub
fsubl
or
jae
pop
cmp
daa
cmp
rcr
mov
add
xchg
imulb
adc
lock
icebp
add
and
aad
mov
pop
insb
sub
aas
daa
dec
arpl
cwtl
imul
inc
jo
dec
out
popf
xor
or
vpsllq
push
outsl
std
rclb
and
div
push
les
ja
sarl
mulb
sbb
push
xchg
outsb
jne
jb
movsb
aad
popf
sub
adc
cwtl
jns
lcall
arpl
push
test
add
jnp
dec
cmp
inc
jb
gs
jne
lods
ds
cld
into
lds
jno
inc
movsb
mov
faddl
aas
jmp
adc
and
mov
insb
int3
sbb
cmp
mov
pop
xor
push
and
aad
js
adc
js
insl
cli
dec
rcll
int
ret
cmp
mov
and
in
div
adc
aad
lea
pop
jnp
std
fwait
xchg
pop
popf
std
adc
in
jne
and
push
and
cli
mov
sbbl
pop
push
aam
sub
or
or
icebp
mov
add
jne
adc
popf
mov
adc
cmp
add
pop
adc
and
adc
iret
int3
mov
jae,pt
push
cld
jle
pop
push
clc
push
in
add
lret
sbb
mov
cld
xchg
aaa
roll
push
mov
movsb
inc
ret
jl
and
mov
aaa
addr16
cmp
out
mov
or
jnp
cmp
adc
jmp
cmc
push
cmp
sub
jae
dec
jbe
pop
sub
push
mov
pop
push
cs
jp
inc
or
fistps
les
scas
jmp
push
repz
mov
mov
out
mov
movsl
outsl
inc
out
jecxz
stc
jecxz
data16
mov
pop
clc
fildl
inc
addb
pop
add
mov
mov
test
arpl
add
testb
js
add
not
jb
mov
or
adc
cmp
jno
hlt
inc
pop
inc
jecxz
pusha
stc
loop
jmp
imul
push
fdivr
into
add
jnp
fnstenv
jnp
iret
outsl
scas
imul
das
or
imul
sbb
imul
testl
cld
inc
cmpb
cld
add
lods
lea
add
clc
cmp
mov
dec
lea
mov
pop
fcmovnu
lea
adc
cmp
into
mov
mov
pop
icebp
shll
sahf
push
jne
jne
xchg
roll
rolb
idivb
add
mov
je
bound
clc
cmc
aad
sub
les
cltd
cmpl
jle
int3
ja
iret
ficoml
outsb
mov
fisttps
rcrb
push
adc
inc
jl
fisttps
push
lahf
movsb
in
cli
mov
mov
shll
cmpsl
xor
push
adc
imul
mov
jge
jle
out
mov
xchg
daa
gs
push
movsl
push
dec
je
sbbl
rol
cwtl
xchg
cmp
adcl
xor
sbb
lds
pushf
sbb
and
push
sarb
into
jae
test
mov
dec
in
je
lods
out
or
jecxz
mov
lds
xchg
push
mov
fiadds
sub
outsl
es
int
dec
adc
fistpll
jns
jmp
in
in
and
adcl
xchg
outsb
adc
pop
pop
jns
mov
icebp
pop
jg
mov
fiadds
es
mov
push
cmpsl
es
fidivrl
lds
divb
ja
push
fadd
add
aad
cmp
and
sbb
dec
ss
lret
xlat
cli
jae
movsl
sub
out
enter
mov
test
adc
scas
loop
es
enter
and
fildll
or
fimuls
int3
arpl
sub
nop
inc
fiadds
das
mov
sbb
popf
cmp
push
popf
ss
xchg
push
mov
rcrb
and
scas
cmp
dec
xchg
xchg
aam
xchg
and
shlb
test
gs
jmp
jnp
clc
jbe
loopne
pop
xorb
jmp
aaa
xchg
push
addr16
enter
in
imul
pushf
mov
loopne
sub
and
mov
scas
add
sbb
xchg
pop
add
xor
ljmp
mov
cwtl
stos
or
addr16
imul
lea
mov
jl
aam
fmul
fidivrs
xor
pop
mov
lods
and
mov
cmp
and
add
dec
lds
cmpsl
sti
sub
mov
sbb
daa
cmp
pop
mov
dec
mov
sub
adc
xchg
adc
das
dec
sbb
xor
mov
dec
mov
ljmp
sub
push
mov
push
test
xor
aad
rcrl
outsl
dec
enter
outsb
into
inc
shlb
mov
xchg
movsb
je
cmp
jae
je
push
fs
incb
cmpsl
or
or
and
dec
dec
mov
xchg
popf
push
insb
dec
icebp
pop
aaa
adc
icebp
xchg
sbb
and
push
mov
fmull
jmp
mov
jb
pop
xlat
aad
xchg
shll
hlt
dec
pop
outsl
sbb
jo
out
cmp
adc
scas
test
packuswb
jmp
sub
jo
or
jmp
pop
in
xlat
outsw
cli
lds
or
lods
xchg
rcrb
iret
popa
mov
inc
int3
add
dec
clc
mov
xchg
mov
repnz
in
sub
and
pop
mov
mov
mov
fs
pop
pop
lcall
pushf
aad
mov
mov
mov
out
adc
mov
mov
mov
xchg
in
cmp
mov
ljmp
mov
scas
inc
test
aas
aaa
std
cmp
je
sub
cmp
xchg
jle
dec
push
push
std
js
and
cs
pop
jno
adc
dec
pop
das
loop
sub
mov
dec
mov
cmpsb
pop
lods
add
mov
in
adc
rorb
sti
xchg
sbb
bound
push
xor
or
rcr
cmp
mov
lods
and
mov
mov
sahf
scas
shlb
aas
nop
pop
scas
fstl
insb
dec
int3
fnstenv
dec
imul
sbb
adc
jl
push
shll
push
adc
aam
adc
add
lods
iret
jp
sub
push
lea
repz
dec
sub
lock
insb
dec
int
pop
add
jnp
or
loope
popf
and
push
arpl
dec
push
rcrl
inc
bound
mul
das
repnz
sbb
je
push
sbb
stc
xor
jecxz
scas
enter
les
add
add
mov
lea
les
cmp
test
jle
push
xor
xor
lret
inc
and
cmp
das
int
pusha
cmp
jmp
mov
xchg
adc
leave
and
in
mov
je
repz
push
mov
mov
mov
mov
add
cmp
movl
setno
sbb
jnp
leave
mov
ss
adc
sbb
lahf
sbb
int
lds
push
xor
lds
mov
dec
pop
adc
shll
lds
das
outsl
adc
sti
sbb
sub
pop
bound
ljmp
int3
dec
mov
add
ds
aad
add
andb
xchg
sub
adc
xchg
mov
pop
std
add
sbb
hlt
insb
adc
scas
outsb
scas
sarb
jb
subb
sub
xor
ss
popl
cmp
adc
loopne
adc
es
dec
adc
pop
push
shrl
dec
mov
adc
iret
aas
and
das
loopne
push
lods
ljmp
repz
jne
push
or
out
cmp
pop
jl
aam
gs
and
cmc
das
stc
push
mov
add
xchg
xor
dec
xor
xchg
das
std
jmp
mull
fldenv
mov
cwtl
repz
in
fstps
pop
lcall
push
sub
jg
loop
pop
xor
cmp
insb
mov
popf
and
jne
mov
add
inc
add
pminsw
jne
sbb
clc
cs
aad
faddl
push
sub
jnp
jae
sbb
lret
sbb
fiadds
fisubl
ds
adc
sub
inc
call
fsubs
mov
rcl
rcll
add
xchg
std
inc
lds
inc
inc
mov
idiv
mov
pop
inc
push
addb
aaa
nop
or
lahf
jle
cwtl
jbe
push
adc
outsl
mov
mov
inc
adc
mov
cmp
mov
aad
ljmp
xor
mov
sbb
cmc
fistpll
aam
mov
and
sahf
adc
add
loope
or
into
dec
divl
and
fs
push
sub
scas
loopne
aam
pop
rol
clc
sti
xlat
dec
outsl
lock
push
imul
sbb
ret
aaa
aas
pop
fldcw
pop
sbb
jno
lods
sub
je
popa
mov
jmp
jge
lods
out
outsl
lret
cmp
push
pop
sub
add
cmp
adc
scas
cmp
fnstenv
adc
cmp
mov
and
aad
add
sub
and
fcmovu
insl
or
fiaddl
hlt
mov
sub
in
orl
imul
insb
test
mov
lret
pop
fidivs
mov
les
dec
fsubs
les
cmp
mov
fsubr
cmpsl
mov
ljmp
xchg
ds
xchg
and
push
xor
xor
enter
imul
mov
push
mov
enter
mov
stos
mov
jmp
or
dec
sti
leave
and
in
mov
adc
push
cmp
fdivrl
xchg
mov
cltd
jo
inc
cmp
push
imulb
jbe
mov
xor
pop
push
loopne
imul
lret
out
sbb
or
xor
mov
push
inc
mov
fcmovbe
cld
add
pop
push
and
jl
or
stos
pop
lcall
lods
adc
nop
imull
jmp
push
push
jae
roll
cwtl
mov
or
jg
mov
pop
mov
out
jo
bound
dec
lds
sbb
into
adc
pop
int3
pop
jl
jge
mov
outsb
cld
xchg
mov
hlt
push
hlt
and
cwtl
loopne
mov
or
in
pop
sbb
loope
pop
mov
ret
notl
xor
out
pusha
xchg
stos
lcall
jo
xchg
fcmove
push
push
or
add
call
loop
pop
jo
arpl
jg
cmc
add
jmp
rcll
jne
xchg
sub
inc
add
jb
js
inc
incb
pop
mov
push
xchg
pusha
xor
xor
xchg
jle
ret
mov
mov
addr16
pop
mov
cmc
pop
sub
std
sbb
sub
icebp
push
pop
jns
sahf
adc
sahf
cmp
inc
add
dec
js
rorb
fimull
loope
aas
test
ficompl
cmc
aad
loopne
test
mov
out
outsb
dec
xchg
sbb
imul
in
pop
das
es
push
inc
popf
inc
popf
jnp
mov
and
popf
jnp
cli
je
and
adc
cmp
inc
mov
lret
mov
push
mov
nop
ret
adcl
mov
outsb
cwtl
mov
xorl
andl
jnp
sahf
inc
mov
pop
test
fistpll
push
jo
jg
cwtl
stc
decl
shll
push
push
adc
decb
loop
pushf
jmp
icebp
aad
sbb
out
jmp
adc
test
cltd
mov
fsubl
js
push
fwait
dec
fidivrl
mov
xor
aas
add
int3
ja
add
int
ja
lds
mov
flds
xchg
sub
out
and
lahf
push
jl
push
jbe
test
jae
adc
movsb
inc
xor
gs
decb
push
xchg
int
jmp
push
lods
xor
inc
xorl
fiaddl
sub
aaa
lods
add
push
inc
cltd
aas
jae
pop
cmpsl
and
pop
fs
mov
sar
or
mov
mull
push
es
loope
jp
pop
mov
mov
sub
movsb
jle
push
and
xor
dec
stos
fwait
addr16
leave
adc
cmp
push
cmp
and
mov
cmp
jp
inc
sbb
add
cs
mov
pop
stos
aad
fstp
imul
mov
xchg
xor
arpl
inc
and
inc
pop
inc
pop
shr
push
adc
ja
push
cmp
in
add
push
mov
mov
cmpsl
loope
fcmovnbe
pushf
mov
addr16
mov
ss
clc
lock
mov
and
cs
gs
xor
lret
sub
fwait
sahf
ret
ret
iret
sahf
shlb
idivl
call
mov
lcall
movsb
ljmp
out
pop
lret
cmp
loop
cmpsb
dec
out
mov
xchg
cmp
pusha
push
sahf
lea
jecxz
lret
mov
rcll
cmpsl
out
cmp
or
fisubl
jns
ds
push
adc
xlat
sbb
lahf
sbb
popf
rol
dec
pop
pusha
add
jg
in
scas
inc
xchg
pop
insl
sbb
mov
sub
pop
jp
lds
or
pop
push
mov
dec
pop
lret
ja
in
fistps
mov
dec
mov
cld
add
pop
inc
dec
xchg
add
popa
leave
push
gs
cmpsb
jg
mov
imulb
xchg
inc
mov
inc
inc
lock
push
sbb
xchg
pop
mov
or
shl
aad
mov
cmp
sarl
loopne
and
cltd
push
popa
in
sahf
or
sbb
xchg
sbb
xchg
sub
inc
or
and
dec
loopne
mov
lea
push
inc
ljmp
cmpsl
cld
pop
stos
out
add
push
pop
pop
shll
jo
sbb
nop
xchg
stos
mov
mov
pop
push
jmp
sub
dec
ljmp
test
not
cmc
dec
int
js
repz
dec
rcrb
ret
andl
ret
ret
and
daa
cmp
test
or
add
adc
and
lds
xor
cs
cmc
lea
inc
sbb
gs
adc
movb
add
add
aaa
inc
loope
sub
push
push
shrb
negl
dec
push
sbb
mov
xor
mov
insb
pop
mov
or
push
pop
addr16
add
int3
and
jne
sub
orl
enter
inc
xchg
out
mov
into
lods
or
mov
add
and
mov
sub
insb
incl
add
aaa
push
pop
jge
or
inc
push
aaa
inc
rep
imul
hlt
cwtl
mov
jb
mov
mov
sbb
jae
fisttpll
push
sbb
mov
mov
ret
mov
inc
dec
jns
mov
lds
and
arpl
push
xchg
sbb
jg
popf
mov
imul
jmp
mov
sub
xor
inc
lahf
push
inc
inc
ds
ret
xchg
or
shrl
subl
mov
or
mov
sub
jnp
mov
incl
mov
jns
pop
sbb
int3
sbb
xchg
inc
into
push
xchg
mov
outsb
fiaddl
add
xchg
mov
jle
loop
sbb
mov
adc
xchg
push
inc
pop
fdiv
mov
arpl
into
sbb
xorl
lds
icebp
lahf
push
ret
cmp
fidivrl
and
xorl
adc
popf
xor
das
mov
popa
cltd
fisubrl
cld
xor
xchg
int
leave
out
sbb
dec
gs
mov
inc
bound
sub
iret
lcall
lea
call
pop
pop
jae
sbb
sahf
jns
out
mov
in
add
scas
insb
mov
and
aaa
lret
popf
mov
push
loopne
movsl
jmp
xor
into
out
mov
add
cli
test
arpl
push
rolb
lahf
xor
adc
and
bound
adc
mov
aas
xchg
cmp
shll
inc
sbb
das
jg
cmp
jne
sbb
enter
in
fcmovb
fsubl
push
out
cmpsb
jle
sahf
sub
clc
adc
mov
jbe
sub
sub
stc
scas
dec
pop
in
std
jl
stc
add
mov
xlat
sub
push
rcrl
xchg
aas
sub
mov
inc
insb
or
mov
xor
test
cs
das
dec
mov
addr16
inc
inc
rorb
or
mov
into
mov
inc
cli
jg
dec
or
cmp
test
test
add
xor
stos
sbb
imul
mov
mov
add
fldl
inc
add
dec
das
lock
sbb
mov
lret
ja
push
jl
lock
int
sbb
xchg
xor
cmpsb
nop
pop
fcmovnbe
lcall
xor
mov
jg
mov
xor
ljmp
adc
cmp
or
roll
loop
repnz
push
in
cmp
cmc
mov
shlb
test
xchg
shlb
stos
cmpsl
inc
notl
ret
xor
test
out
sbb
ss
sub
and
adc
iret
or
clc
or
push
sbb
mov
push
pop
xchg
repnz
add
mov
fildl
mov
inc
sahf
dec
pop
lret
adc
imul
movsb
xchg
push
mov
and
xchg
push
jg
or
fcomps
scas
jl
stos
test
outsb
push
lods
lahf
push
lcall
lods
das
out
inc
lods
inc
mov
fcomip
icebp
mov
inc
mov
popa
inc
push
mov
mov
pop
inc
mov
xchg
mov
jnp
sarl
aam
push
cwtl
sub
jp
pop
jns
and
lods
loope
mulb
jge
pop
sbb
push
jge
mov
jo
xchg
xlat
int3
mov
sub
jp
pop
enter
das
adc
xchg
jnp
sbb
in
cwtl
jbe
int3
cmpb
call
xchg
je
inc
scas
lret
ss
pop
inc
ja
test
jo
ljmp
fcomi
xchg
ja
popf
imul
cmp
pop
pop
sbbl
call
arpl
inc
push
jno
inc
dec
sarl
subl
loop
cmp
sahf
fdiv
mov
push
mov
xchg
aam
sahf
daa
scas
aaa
ret
mov
fwait
jmp
icebp
insb
mov
and
stc
mov
lock
mov
pushf
push
or
sbb
leave
or
sbb
mov
jp
sub
jecxz
lret
mov
icebp
lods
and
xchg
repnz
adc
xor
out
xchg
inc
bound
out
dec
in
cwtl
mov
loope
mov
add
lcall
icebp
sbb
dec
lret
sub
fwait
dec
adc
subb
pop
in
mov
js
fidivrs
gs
setp
add
fs
and
add
jp
fcoml
cmp
sub
inc
inc
or
cmp
push
shll
bound
mov
push
or
sub
clc
xor
mov
fcompl
cmpsl
in
push
jmp
inc
dec
aam
fldl
popf
mov
cltd
mov
sbb
and
pop
test
push
gs
sub
xchg
jge
int3
push
inc
pop
mov
imul
out
call
mov
mov
out
jl
lahf
mov
add
pushf
and
mov
scas
inc
dec
call
std
dec
idivl
xchg
js
mov
pop
lods
adc
mov
xchg
aaa
xchg
fucomi
icebp
mov
out
call
push
jp
insb
adc
or
pop
add
jmp
repz
inc
lock
jmp
dec
push
push
xor
add
repnz
mov
divb
stc
aad
push
sbbl
xor
stos
mov
in
xchg
mov
ljmp
cmpb
subl
rcl
push
mov
lock
and
lret
cmc
negb
inc
shll
mov
xchg
lahf
shrb
and
and
mov
movsb
mov
or
in
cmp
cmc
adc
add
scas
gs
lock
jo
test
jbe
jp
sbb
jmp
push
xchg
loop
out
push
and
dec
rclb
dec
xor
mov
add
bnd
inc
xchg
insb
cmp
mov
jmp
scas
adc
dec
insb
cwtl
scas
mov
les
lock
sbb
xor
push
out
mov
call
xchg
add
scas
sbb
pop
scas
testl
push
pop
fisttps
pop
inc
repnz
pop
adc
inc
or
push
sub
adc
popf
rcr
sub
icebp
cmp
shr
and
inc
fmuls
sahf
insl
cld
or
add
je,pt
mov
mov
jl
adc
mov
mov
mov
mov
hlt
mov
sbb
jg
cld
pushf
lods
push
mov
jnp
out
scas
insl
sti
pop
or
repnz
adc
xchg
aaa
cmp
hlt
cmp
adc
inc
jp
xlat
movsb
out
hlt
xchg
imul
add
fwait
add
es
into
ljmp
sbb
add
xchg
and
xchg
jbe
sahf
jmp
sbb
in
add
inc
out
hlt
scas
jbe
xor
stos
mov
repnz
xchg
ret
ret
sbb
in
out
imul
stos
aas
fnop
shrb
mov
into
insl
cmp
outsb
mov
xor
in
lcall
sbb
repz
out
imul
scas
inc
adc
je
cmp
xchg
lea
out
dec
mov
jne
xlat
adc
or
fsubs
mov
rcll
pop
pop
and
ret
sbb
cmp
jecxz
stc
or
mov
mov
xchg
call
rclb
add
jg
cs
fs
rcrl
xor
push
inc
mov
mov
inc
jmp
iret
clc
lds
push
sub
ror
jp
inc
shrb
or
cmpsl
andb
fwait
mov
push
es
ret
xchg
ljmp
stc
add
sub
cmpsb
xchg
cmp
ret
mul
push
imul
daa
mov
sub
xchg
movsb
inc
std
in
mov
leave
xchg
fs
push
rolb
jle
xchg
dec
aad
sub
test
adc
lods
addr16
push
imul
inc
sbb
ret
aas
in
mov
push
popf
pop
jo
sub
adc
ljmp
lock
aam
repz
and
lds
jnp
jo
push
add
scas
out
lock
pop
mov
push
fs
pop
mov
sar
dec
pop
out
fdivrs
std
divl
out
mov
pop
loop
jae
mov
xchg
pop
pop
pop
add
in
sbb
fistl
and
mov
or
loopne
repz
mov
sbb
mov
jb
mov
aaa
andl
cmp
gs
dec
cmp
xchg
dec
shl
pusha
mov
push
fldcw
fcoms
cmp
out
xlat
test
push
adc
push
xchg
xchg
or
jno
rorb
je
or
scas
popf
pushf
not
push
mul
pop
cld
xchg
int
or
repz
es
xor
rclb
int
inc
or
pop
and
and
nop
jecxz
push
sqrtps
sub
add
shll
mov
dec
xchg
lret
cld
mov
shr
and
xchg
aad
cwtl
stos
cmc
jbe
pop
add
loop
mov
outsb
mov
ss
pusha
mov
hlt
xchg
repz
out
jns
jmp
xchg
and
aam
add
xchg
aaa
lods
mov
std
je
popa
and
data16
ret
add
jo
roll
lock
jecxz
cmpsb
arpl
ret
lahf
add
subl
lcall
daa
pusha
ds
hlt
shl
shll
jg
sbb
popf
pop
sbb
dec
call
add
pop
mov
sahf
mov
mov
jle
outsl
xor
xchg
cltd
lret
test
push
sbb
mov
fs
iret
mov
xchg
sub
cmp
and
nop
push
adc
test
rorl
clc
pop
inc
pop
les
pusha
mov
add
lahf
rcl
mov
lods
xchg
dec
dec
push
pop
imul
fnsave
cld
fidivl
aaa
jnp
mov
inc
adc
subb
mov
dec
sarb
mov
adc
mov
mov
add
fmull
fnstcw
ja
fdivl
addr16
ds
sbb
mov
push
mov
sub
and
mov
mov
dec
fmul
jno
cmpsl
out
aad
xchg
hlt
xor
pop
mov
inc
or
sbbl
cmc
addr16
cmp
jle
leave
add
mov
mov
xchg
cmp
movsl
movsl
and
je
xchg
scas
fwait
out
outsl
out
xor
mov
xchg
push
test
lock
lahf
add
daa
testb
mov
in
pop
mov
jecxz
movsl
fwait
dec
xchg
jno
jmp
test
push
sub
xor
int
leave
cmp
push
adc
sbb
inc
rorl
xchg
ret
mov
jmp
push
cwtl
push
xor
stc
stos
adc
bound
sahf
push
les
xor
mov
aas
sub
cmp
mov
or
aam
sti
fwait
insl
fcoml
or
lcall
shrl
xor
dec
sti
xchg
adc
mov
popf
cmp
pop
pop
leave
and
repnz
cmc
mov
lret
mov
scas
addb
mov
loopne
mov
sarl
repnz
lret
test
jp
cmp
aam
jl
or
in
test
mov
push
test
mov
rcrl
stos
rclb
or
pusha
push
dec
adc
add
rclb
filds
cmp
xchg
andb
push
dec
inc
pop
les
adc
test
sbb
in
adc
fiaddl
sti
xchg
hlt
out
test
int
aam
mov
bound
xor
xor
inc
aas
xchg
xchg
insb
test
cmp
leave
lods
jbe
jle
sbb
int3
sub
sbb
fs
imul
mov
xchg
bound
sahf
js
mov
or
imul
jg
mov
bound
nop
idivb
aad
shll
fists
fsts
pi2fd
dec
hlt
push
pusha
jno
xor
mov
inc
mov
movsl
ja
icebp
mov
mov
and
adc
setl
xchg
jle
aad
mov
stc
cmp
xchg
cli
sbb
sti
fbstp
push
pop
js
cs
jle
sbbb
jns
mov
push
das
mov
icebp
out
ss
inc
ret
add
lea
push
jmp
dec
movb
cmp
insl
and
jmp
out
insb
rcll
subl
inc
cmp
outsb
xor
push
or
clc
or
mov
jge
jge
adc
inc
pushf
inc
add
xchg
ds
jecxz
inc
sub
icebp
dec
xor
loope
mov
sbb
xchg
xchg
add
aam
into
lds
mov
subb
pop
into
jae
mov
outsb
fcoms
stc
shrb
inc
in
cmpsl
mov
out
jo
hlt
inc
cmp
lahf
mov
or
xor
out
jge
dec
sbb
std
pop
xor
in
in
mov
jmp
fwait
mov
das
mov
sub
dec
jb
out
sbbb
jae
xor
imul
mov
movsl
dec
mov
call
adc
push
ret
fwait
lret
and
mov
cs
sbb
add
xor
mov
mov
sub
xor
les
aaa
push
mov
pushl
mov
sti
add
sbb
sbb
repz
int
add
cmp
std
inc
mov
mov
call
dec
or
rol
jae
sub
cmp
push
movsl
in
mov
sahf
imul
shl
sub
aas
and
lds
in
lea
pushf
ret
dec
bnd
shr
int
xchg
inc
out
scas
fsubrs
xor
nop
out
lock
xor
ljmp
mov
jbe
push
scas
inc
jl
mov
gs
test
out
bnd
mov
inc
xor
fwait
cld
xor
jne
pop
xchg
popl
das
bound
pop
jg
push
in
mov
cmp
adc
push
loop
aas
cwtl
dec
xlat
cli
test
sub
xchg
fisttpll
enter
xchg
adc
out
icebp
xchg
test
push
pop
cmpsl
and
adc
xchg
cld
sbb
push
ja
ret
movsl
push
and
insl
jno
scas
fcmovnbe
stc
shr
cmc
add
dec
add
jmp
mov
mov
pop
xchg
jg
inc
ss
popa
popa
popa
pushf
jge
sub
mov
cmp
test
addb
test
test
aam
fdivp
push
push
sub
ja
out
mov
cmpsb
bound
pop
fs
cmpsb
pop
ss
mov
ret
daa
or
gs
jbe
pop
jbe
insl
add
imul
aaa
push
and
push
sbb
push
mov
aas
in
xchg
mov
popf
stos
xchg
hlt
sbb
aad
xchg
insb
or
dec
icebp
xorb
jmp
stc
add
pop
mov
and
int
in
xchg
bnd
dec
inc
stc
pop
cltd
or
mov
sahf
lods
mov
xchg
xorb
loop
push
into
cmpl
aad
xor
loope
mov
pop
xor
xor
inc
sti
pop
adc
in
sbb
jle,pt
lea
mov
mov
jge
sub
and
pop
jo
pop
xorb
push
adc
mov
pop
into
std
frstor
or
and
in
lcall
scas
push
aaa
sbb
pop
inc
push
cmpsb
subl
nop
and
in
in
dec
mov
jp
sub
movsb
or
test
add
inc
mov
aaa
stos
stos
cli
jg
sahf
dec
inc
mov
std
movsl
cmp
jns
inc
dec
sahf
sub
mull
mov
pop
popf
mov
iret
ret
pop
push
adc
mov
add
stos
es
push
fwait
stos
idiv
cmp
add
sub
sub
daa
inc
fwait
xchg
fsubrl
test
pop
psrld
mov
mov
mov
xor
mov
dec
push
ret
pop
pop
andb
lret
enter
mov
xor
cld
or
pop
jbe
sbb
pushf
xchg
dec
repnz
sarb
enter
sub
add
push
xchg
pushf
or
mov
scas
or
mov
bswap
movsl
popf
jmp
and
rcll
fcmovb
mov
in
sub
cmpsl
pushf
ret
adc
int
rcrb
fstps
ret
test
insb
mov
add
mov
fsts
sub
lock
lds
xorb
pop
mov
pop
push
push
es
push
rclb
test
je
sbb
fisttps
pop
mov
fcompl
test
decb
xlat
outsl
mov
popa
pop
addr16
push
or
jmp
sbb
pop
jle
cwtl
sub
gs
ret
jl
lret
ja
push
dec
popf
adc
mov
mov
dec
popaw
loop
lret
push
xchg
jle
js
outsl
mov
xchg
push
insl
int
scas
outsl
bswap
pop
mov
add
and
jecxz
xchg
stos
loopne
fs
mov
movsl
std
das
jl
dec
lahf
push
shr
inc
negb
pop
lcall
std
push
xor
fmulp
andl
sahf
inc
xor
lea
pop
out
dec
jp
xchg
xlat
xlat
push
lret
fmuls
cmp
shlb
cwtl
jb
ror
push
test
ds
repz
mov
call
lds
cmc
xorb
push
ja
mov
fidivrl
mov
and
ficoms
lret
xchg
clc
out
outsb
sahf
add
mov
scas
movsl
test
mov
inc
inc
xchg
add
cmovne
xor
loop
pop
dec
mov
sub
mov
int3
lods
mov
mov
je
cmp
cld
xlat
imul
xchg
and
dec
pop
cmp
jp
xor
sub
jge
mov
pop
popa
dec
xchg
inc
xor
xlat
lret
sbb
dec
xchg
xor
push
and
pop
out
in
jp
xor
std
or
mov
sbb
inc
xor
outsl
sub
dec
psllq
inc
cmp
es
stos
cmp
mov
jecxz
mov
loop
pop
arpl
test
cld
adc
add
cmp
popa
cmp
lret
enter
mov
lret
iret
les
cmpsl
adc
pusha
loope
repz
sbb
mov
inc
dec
ss
jmp
outsl
dec
push
repz
je
push
cmpsl
int3
iret
int3
fisttps
mov
inc
mov
cli
cmp
mov
out
ja
adc
in
dec
outsl
iret
cmp
iret
addl
rcll
adc
cmp
movups
mov
cmp
adc
aad
not
lods
movsb
hlt
ret
push
and
jmp
sub
cld
xchg
daa
xchg
fldt
in
arpl
inc
gs
xchg
push
mov
inc
mov
sbb
or
ja
mov
pusha
add
mov
repnz
scas
hlt
cmp
popa
addr16
mov
and
jne
xor
imul
aad
loope
or
xor
fildll
and
cltd
dec
adc
add
shlb
out
scas
pop
stos
push
xchg
jne
push
adc
adc
fadd
lahf
adc
push
fsubrs
nop
sbb
in
mov
incb
imul
stos
shl
fmull
cmp
adc
jbe
movq
imul
rolb
and
mov
test
mov
movsb
test
bound
pop
mov
js
aam
hlt
fsubp
aam
loop
or
pop
aaa
or
jl
gs
inc
mov
push
add
jle
or
fstpl
dec
adc
jmp
es
mov
cmp
pop
cmp
clc
not
inc
jg
in
push
push
scas
jmp
mov
adc
loop
inc
jb
jg
mov
jbe
inc
call
pop
cwtl
inc
mov
daa
xchg
dec
inc
mov
mov
rorl
iret
xlat
xor
shll
arpl
sbbl
jb
sar
adc
ljmp
mov
xchg
repz
js
adc
aad
mov
das
mov
xor
outsb
subb
jmp
mull
cmpsl
sbb
jmp
jecxz
xor
sbb
jl
ljmp
jp
mov
scas
enter
ds
aam
hlt
and
lds
xlat
add
into
push
mov
jnp,pt
xchg
mov
rcrl
mov
push
dec
mov
mov
jne
adc
fcmovnb
sbb
mov
or
add
ret
push
jo
sarl
pop
fs
es
repnz
js
and
jae
loope
or
fs
les
mov
push
js
outsb
cmp
sbb
decb
dec
push
xchg
leave
pop
popa
insb
mov
cmp
cltd
std
aam
inc
and
test
push
jo
dec
push
lcall
sbb
lods
dec
push
stos
hlt
test
imul
outsl
sub
stc
ja
mov
xor
fidivrl
outsb
cmc
xchg
push
jg
lea
cmpsl
dec
push
test
pop
pop
sbb
xchg
mov
sbb
cmpsb
mov
push
cmc
loope
jecxz
imul
push
pop
or
fscale
inc
lret
pop
xor
dec
nop
adc
pushf
test
xchg
outsl
inc
adc
adc
adc
mov
aam
add
fnstcw
xchg
push
fwait
push
xchg
dec
ja
cmp
das
adc
lahf
test
adc
cld
pop
and
out
pop
pop
push
das
adc
call
addr16
push
cvttps2pi
outsb
incb
mov
adc
daa
movsl
jae
pop
lret
call
aaa
xlat
cmc
inc
sbb
lods
dec
fucomip
inc
pop
scas
test
mov
test
xorl
xlat
adc
test
mov
add
xchg
cmp
jns
cmpsb
pop
shlb
fimuls
adc
xor
lea
das
push
sbb
inc
arpl
ss
mov
push
notl
dec
mov
fdivr
ret
mov
dec
jo
jmp
iret
mov
lods
movsl
imul
loope
jg
pop
sbb
adc
pop
leave
shlb
pop
ss
imul
rolb
add
jp
fmuls
lds
shrl
ficoml
inc
nop
mov
mov
daa
cmp
push
nop
popf
pop
ficoms
out
das
add
and
popf
fistpl
mov
fs
and
dec
push
pop
loop
adcl
cmp
rcll
shl
ja
repnz
mov
sub
sbb
fiaddl
sub
sbb
out
add
cmp
xor
outsl
jo
ss
lahf
adc
repz
stos
add
sbb
mov
imul
or
subb
push
jle
or
roll
sbb
enter
add
test
xor
pop
adc
mov
call
mov
stc
negb
push
push
sbb
mov
pop
mov
cli
dec
hlt
sub
push
stos
mov
sbb
push
dec
cmp
sub
xor
test
sbb
subl
dec
adcb
add
xchg
shl
lods
cmpsl
cltd
mov
into
cmpsb
lods
leave
jb
and
xchg
jmp
dec
cmpb
jmp
jbe
mov
std
lahf
sti
mov
mov
cmpsb
dec
or
rcr
sbb
jae
es
test
cmp
dec
xor
push
lcall
adc
sub
cmp
cmc
lahf
loopne
fld
pop
arpl
and
sbb
test
inc
sub
xor
pop
aas
addr16
enter
xchg
iret
enter
sub
push
xchg
and
icebp
mov
sub
sbb
pop
notb
jb
adc
insb
out
jne
sbb
flds
dec
ret
cltd
aas
sbb
mov
call
scas
mov
push
jecxz
or
repz
sub
pop
cli
ljmp
mov
jnp
out
push
icebp
pop
adc
sub
push
push
and
out
into
push
cmp
cmc
mov
daa
sbb
ja
sti
cltd
pushf
jle
lea
js
icebp
mov
push
add
inc
push
incb
outsl
lret
add
cwtl
mov
rorl
pop
mov
fstps
sbb
data16
stos
dec
jmp
and
mov
xor
xor
sahf
and
fiadds
icebp
popf
pushf
mov
popf
mov
jp
insl
push
gs
push
cmp
mov
scas
xor
cmp
popa
in
stos
ds
xor
add
repz
imul
sub
ss
or
push
jbe
insb
daa
in
pop
jo
jmp
xlat
pop
inc
sbb
jne
mov
adc
or
push
jns
ss
sub
mov
cli
hlt
sub
shlb
pop
adc
fwait
and
mov
jne
inc
xorb
in
sbb
in
xchg
push
push
faddl
aas
push
add
and
lahf
push
cmpsl
mov
push
sarb
and
inc
jb
inc
mov
test
or
mov
adc
notb
mov
inc
mov
mov
lret
lea
jle
nop
xchg
mov
arpl
push
sbb
pop
cltd
lret
scas
sub
mov
xchg
adc
hlt
mov
in
mov
je
add
push
lcall
js
subb
hlt
mov
xor
jp
adc
shrl
push
dec
jbe
adc
add
and
int3
mov
xchg
adc
insb
and
adc
lods
adc
mov
repnz
nop
inc
subb
mov
pop
jns
cwtl
mov
sti
mov
fistpll
leave
daa
sub
or
jne
stc
mov
insl
add
mov
push
adc
push
insl
dec
das
call
aad
lea
scas
sbb
mov
jp
jle
push
jl
mov
sbb
lahf
lret
sub
icebp
popa
mov
dec
orl
pop
mov
test
xor
sti
bsr
mov
push
ja
aam
iret
out
je
aaa
testl
or
push
int
inc
bound
dec
test
mov
fildll
mov
lods
jg
or
into
jle
lods
inc
xchg
insb
movsl
stos
lret
push
jbe
mov
push
jl
mov
mov
ljmp
pop
dec
pop
repnz
fidivl
lahf
mov
les
push
add
sbb
xor
cmpsl
roll
sahf
xchg
adc
add
pop
push
mov
mov
ficompl
jp
addr16
push
in
pusha
or
nop
arpl
jnp
je
jg
cmp
inc
insl
dec
ss
mov
xchg
xchg
xor
dec
addps
in
adc
pop
jbe
push
idivb
mov
push
pushf
mov
sub
stos
and
add
aam
ja
mov
sub
dec
rorb
inc
mov
adc
jb
ds
in
repz
jns
mov
sub
or
js
roll
lret
fisubrs
sub
mov
lret
sub
iret
in
aad
sbb
or
xchg
sbb
andl
mov
inc
or
add
push
pop
inc
xor
fs
mov
enter
and
gs
add
mov
xor
sub
ljmp
ficoms
sbb
cmpsl
sti
xlat
push
insl
xchg
push
mov
fs
or
icebp
cs
jae
addl
pop
int3
mov
mov
sbbb
test
jle,pn
ret
imull
inc
xor
dec
add
in
sbb
addr16
adc
into
jnp
and
aas
add
nop
sbb
mov
into
imul
pop
or
enter
mov
cmpsl
or
ljmp
fldt
ret
cli
imul
xchg
sqrtps
mov
test
pop
cmp
insb
cmp
popf
push
inc
nop
push
inc
jae
outsb
inc
xchg
xchg
clc
into
xchg
addr16
jmp
fndisi(8087
sbb
cli
push
jne
popa
stos
add
or
and
mov
rclb
push
sbb
xchg
inc
inc
lret
cmp
cmp
incl
addr16
ja
mov
inc
in
test
nop
jns
icebp
addl
ss
fmuls
imul
bound
and
xchg
add
push
jae
fsts
xchg
xor
pop
add
inc
lret
pushf
xchg
stos
std
add
ficompl
jmp
push
mov
je
imul
outsb
test
mov
push
or
xchg
cmc
or
sub
fcoms
outsl
push
dec
mov
xchg
out
hlt
xor
mov
jmp
dec
insb
mov
pop
test
push
cmp
xor
jecxz
mov
xor
insl
popf
xchg
ljmp
or
in
loopne
xor
ss
mov
cli
xchg
push
xor
adc
ret
outsl
clc
mov
outsb
mov
add
shrb
popf
rcrl
or
jb
lahf
xchg
int3
mul
push
sbb
ret
lods
dec
andb
mov
out
inc
test
inc
push
mov
mov
pop
test
aas
js
mov
add
dec
adc
lock
shll
mov
sbb
sub
sub
adc
imul
ret
sub
inc
add
jno
fs
cwtl
dec
je
xchg
pop
xchg
rclb
jmp
pop
popf
les
jl
clc
imul
cmpsb
lea
js
jnp
sbb
jecxz
xor
cwtl
inc
cltd
mov
aas
xor
stos
mov
jne
jbe
jnp
xor
sti
fdivrs
xchg
xchg
jae
push
xchg
add
in
cmp
adc
push
mull
lret
mov
icebp
in
inc
cmp
lds
sbb
and
jne
add
inc
mov
sbb
cld
mov
jge
xor
sahf
nop
movb
mov
dec
out
or
jb
movsb
loopne
out
and
push
jl
loope
mov
add
rcl
adc
enter
inc
insl
rorl
mov
mov
ficoms
roll
pusha
mov
lcall
add
add
dec
fs
or
jp
dec
xor
inc
add
ss
add
mov
lret
inc
lds
ja,pt
outsb
cmp
and
cmp
lahf
xor
inc
cli
cltd
rcll
xchg
adc
enter
or
sti
cmpsb
lahf
sahf
inc
faddl
fnstenv
add
in
push
or
adc
cmpsb
mov
loopne
mov
int
repz
stc
adc
repnz
lahf
fisubl
cmpl
popf
xchg
lock
add
stc
cmp
cs
call
cmp
in
jmp
in
cmpl
add
jno
inc
mov
jg
push
dec
pop
scas
add
xchg
out
test
nop
add
push
mov
fcoml
aas
popf
loope
stos
lods
adc
jne
cmp
orb
lods
add
mov
fwait
mov
push
inc
and
lock
jecxz
std
test
adc
cmp
xor
cmp
dec
mov
sbb
mov
push
and
jmp
cmp
cmp
mov
int3
cmp
and
dec
mov
repz
cmp
pop
jp
cmp
jp
mov
push
std
xchg
lock
movsl
jb
cmp
and
cwtl
mov
cmp
mov
jne
cmc
call
push
xor
call
pop
aaa
popf
int3
sti
or
sub
loop
xchg
add
shll
sarb
clc
insl
jne
and
stos
sub
lods
inc
cmp
arpl
mov
mov
pop
mov
scas
add
sbb
xchg
xor
sarl
push
ljmp
push
int3
add
push
test
fldl
adc
out
aad
jnp
cmp
cmc
jmp
xchg
rolb
call
mov
es
add
sub
push
dec
stos
sbb
xor
fldenv
or
xor
lds
insl
jge
das
shlb
xchg
and
idivb
pop
scas
pop
push
sahf
loop
mov
xchg
push
or
add
mov
mov
xor
mov
in
xor
and
sub
mov
fadd
loope
push
add
cmp
xchg
scas
adc
inc
push
cmp
jg
loope
cmp
in
sub
arpl
mov
dec
push
enter
jns
arpl
lods
ds
push
add
push
je
push
xchg
lcall
push
push
negl
lods
adc
fdivrl
cwtl
xor
addl
adc
mov
xchg
mov
jnp
icebp
mov
test
mov
adcb
adc
mov
push
cltd
mov
add
push
push
repnz
dec
in
push
dec
outsl
jl
fadd
and
test
lret
xchg
subb
lret
or
aaa
xor
imul
mov
cs
or
dec
lea
cmc
shrl
sub
fildll
cmp
cmp
lahf
pop
sub
int
jnp
mov
loopne
lcall
pushf
xlat
mov
js
fst
jl
cmp
xchg
int3
les
inc
pop
jecxz
dec
inc
cwtl
lcall
test
mov
std
jge
lahf
test
jecxz
inc
add
or
pusha
pop
mov
mov
xchg
mov
cli
cmpl
in
out
sub
cltd
mov
pop
mov
dec
inc
dec
jmp
les
xchg
xchg
add
xchg
int3
cli
sarb
insl
cmc
xchg
rcr
mov
jmp
insb
jmp
int
and
inc
shll
push
shl
pop
dec
xchg
xchg
cwtl
arpl
in
push
pop
dec
or
mov
and
xlat
xchg
nop
push
fs
js
hlt
pusha
fcoms
addr16
jp
subl
addb
out
inc
mov
lcall
sub
iret
mov
cltd
and
test
stos
jns
std
clc
fisubl
pusha
arpl
lret
push
jp
dec
std
andps
cmp
mov
mov
sti
stos
xor
cmpl
xor
sub
mov
jns
movsb
movsb
sbb
xchg
rcl
lods
leave
mov
mov
arpl
dec
sbb
ds
jae
aad
rolb
and
sbb
push
aad
jl
pusha
insl
fistl
aaa
lahf
jb
shrl
pop
add
sbb
and
dec
xorb
pop
bswap
jl
dec
enter
mov
fldcw
test
shll
lahf
mov
mov
mov
push
jecxz
jo
imul
aas
jge
push
xchg
sub
sub
and
jp
mov
imul
mov
xor
mov
gs
push
cmp
sbb
mov
dec
test
inc
sbb
sub
fisttps
in
sbb
shr
shrb
repnz
pop
xchg
sahf
lcall
xor
sbb
lahf
lret
loopne
mov
stos
pop
and
dec
sahf
xor
push
andb
add
lock
push
mov
jo
and
pop
jo
xor
ljmp
cltd
es
cmp
push
fdivl
sbb
sbb
rclb
push
ja
in
das
lcall
ficompl
sti
mov
dec
add
add
mov
loope
into
sub
mov
mov
adc
out
pop
aam
scas
push
cmp
hlt
and
mov
mov
das
out
push
add
out
subl
hlt
add
mov
out
gs
repz
out
mulb
fstl
cmc
mov
mov
jbe
push
fbstp
inc
lds
sbb
jmp
adc
jbe
mov
xacquire
push
lcall
daa
pop
dec
or
sahf
push
ljmp
ja
lock
mov
ja
push
lcall
pmullw
pop
jp
mov
outsl
aas
xchg
jo
dec
and
jb
mull
mov
sub
sub
adc
xor
int3
sbb
fcomps
inc
jl
lock
fisubrs
lret
push
enter
je
jbe
inc
loopne
arpl
sbb
jns
xor
pop
cli
dec
jge
pop
andb
add
lods
push
mul
xchg
adc
lret
ss
ljmp
adc
dec
les
add
xor
sub
xor
dec
rcll
mov
mov
xchg
cmp
xor
rcl
cmpsl
ds
fldenv
imulb
lods
jl
or
hlt
push
mov
jne
jmp
cmp
sbb
lret
mov
ja
fdivrl
lret
fldenv
ss
inc
fwait
jl
jle
mov
cmp
hlt
loopne
jl
dec
sub
or
cmp
in
pop
inc
pop
push
cwtl
js
mov
lret
pop
jge
ljmp
movsb
jo
and
scas
dec
pushf
daa
adc
add
popa
sub
and
popa
cmp
pop
test
insl
xor
movsl
jle
xchg
cli
jmp
ja
fistpll
adc
outsl
cmp
sub
or
movsb
sbb
or
mov
icebp
jp
subb
pop
xchg
lods
or
xchg
ret
sbb
aam
xor
pop
test
pusha
sarb
out
addr16
jmp
andl
stos
fld
cmpsl
cs
add
lcall
rolb
and
ja
lret
std
jp
dec
adc
jle
inc
xchg
inc
aad
loopne
sbb
mov
mov
sbb
flds
nop
cmp
mov
std
push
inc
sub
ljmp
test
or
mov
sar
inc
pop
out
adc
aad
arpl
out
pop
inc
test
rorl
xchg
push
movl
cmpsb
pop
stos
inc
push
shll
repz
in
inc
das
mov
lock
loopne
out
push
adc
mov
dec
or
or
adc
jge
sub
xor
sbb
cmpsb
mov
icebp
lret
jbe
dec
sbb
cmp
mov
fstps
xchg
mov
fisubs
pop
cmp
jmp
cwtl
push
in
lods
call
popa
add
cwtl
sbb
jg
sub
cmpl
pop
dec
aad
js
insb
inc
leave
mov
mov
insb
ja
sbb
cld
sub
imul
jl
fstpt
dec
shl
insl
xchg
jo
decb
inc
jmp
lcall
push
aad
fwait
imul
add
lods
add
push
jb
hlt
pop
stos
add
fcoms
cmpsb
cmp
inc
cmp
aam
lea
push
ret
sahf
loop
rclb
push
jo
jbe
popa
inc
gs
fxch
fcmovne
movsl
cmp
xchg
sub
dec
fnstcw
ja
pusha
and
mov
ds
pusha
ret
mov
mov
sbb
inc
push
das
dec
xchg
xchg
cli
mov
in
cs
fwait
push
mov
fwait
xor
add
sbb
pop
adc
xor
xchg
xor
add
lret
mov
shlb
rorb
add
bound
add
ret
out
dec
fldt
popa
and
cmp
es
add
ljmp
dec
int
inc
sbb
jl
dec
sub
inc
ds
icebp
addb
inc
hlt
mov
cmp
stc
test
cltd
out
outsl
and
jae
sbb
shrl
or
cltd
add
push
fdivrl
cmpxchg
dec
inc
push
fbld
mov
push
mov
repnz
jle
lds
mov
sub
push
mov
mov
dec
out
enter
mov
cmpsb
out
subb
mov
lcall
sbb
movsl
xor
lods
cs
out
push
sbb
ficoms
sub
xor
sub
jp
pop
dec
imul
nop
cld
mov
and
lods
jmp
push
pop
mov
cmp
mov
jnp
and
inc
mov
xchg
pop
std
sbb
andl
test
loop,pt
or
imul
sbb
into
jp
mov
mov
mov
mov
lods
outsb
mov
sbb
imul
pop
icebp
sbb
inc
and
cmp
stos
in
jecxz
int
and
cmpsb
popa
sbbb
test
lahf
cmpsl
rcrl
cmp
and
mov
mov
fistpll
dec
jp
adc
lods
fcmovnb
inc
cld
adc
divb
mulb
call
int3
adcb
add
cs
mov
repnz
test
test
dec
movsb
jo
cmp
movsl
cmpsb
jmp
enter
and
jnp
jo
xor
aad
cmp
fldt
lcall
adc
mov
sbb
mov
sahf
int
xlat
cmp
push
call
jbe
mov
fdecstp
movsl
repz
pop
scas
iret
and
push
cmp
in
ret
pop
pop
xor
fs
mov
stc
iret
stc
arpl
js
dec
xor
adc
or
xor
pop
push
mov
xor
pop
jmp
dec
jne
adc
mov
sbbb
rol
and
pop
sub
jo
mov
in
cmp
in
imul
xchg
rcrb
dec
fidivrl
push
inc
push
or
movsb
jmp
fmull
dec
sti
dec
cmp
imul
xchg
xor
mov
rclb
mov
dec
scas
fst
idivb
fisttps
dec
xchg
loope
test
pop
pusha
push
movsb
xchg
and
jbe
ds
sbb
jecxz
xor
addr16
repnz
lds
test
loope
jecxz
orl
jp
pop
jge
adc
xchg
and
xlat
rcrl
mov
sbb
add
mov
insb
decl
dec
sbb
jae
xchg
mov
stc
and
dec
ds
push
mov
movsl
xchg
dec
pushf
push
aam
inc
pop
ret
pop
pop
dec
mov
adc
pop
lods
pop
jecxz
and
adc
loope
pop
jp
mov
xchg
sub
sahf
dec
lds
test
fdivr
pop
pop
into
jo
fcoms
leave
jle
je
popf
scas
push
adc
in
cmpb
test
sahf
jg
and
sub
add
and
nop
pusha
mov
movsl
add
inc
rorl
mov
cmpsb
pop
cmpsb
sbb
and
ja
into
adc
out
add
mov
add
mov
cmp
adc
add
fwait
in
xchg
mov
pop
addr16
inc
mov
stos
mov
dec
in
push
push
and
hlt
pop
jp
roll
mov
xchg
sub
xchg
add
lods
shlb
cmp
test
in
adcb
into
bound
jmp
fldenv
imul
es
mov
ror
call
ror
stc
rcrb
adc
inc
popf
mov
or
inc
imul
gs
icebp
lods
ja
in
cmc
mov
add
xor
bound
lcall
aas
and
cmp
mov
adc
mov
jb
xor
test
out
rorl
lods
gs
in
mov
in
fstpt
out
cmp
pop
jecxz
and
ffreep
jmp
cltd
mov
stos
mov
pop
xor
or
cmp
add
push
sbb
or
add
adc
xor
cli
push
fnsave
loopne
je
pop
pop
mov
call
pop
push
sub
arpl
mov
dec
addb
xor
pextrw
add
iret
mov
or
mov
je
repz
popf
scas
sbb
jecxz
out
addr16
inc
ja
test
jmp
mov
hlt
add
push
mov
cwtl
dec
or
fbstp
mov
sahf
and
mov
push
repz
pop
mov
mov
popf
jbe
jp
cmpsl
xchg
addr16
sti
dec
ret
xchg
xchg
sub
rclb
push
mov
push
mov
jne
cwtl
ret
sub
mov
push
jg
lahf
lahf
mov
popa
dec
loop
xlat
sub
aam
jp
test
jge
and
jae
mov
dec
sbb
mov
push
mov
stc
push
std
or
leave
and
cwtl
mov
dec
cmpsl
mov
ror
add
call
cmp
xchg
rolb
les
js
jno
nop
xchg
inc
shll
mov
jno
inc
imul
mov
jg
mov
std
loopne
ljmp
xor
rcll
push
loope
jg
mov
pop
or
fldl
mov
xchg
sub
aad
pop
dec
mov
icebp
enter
je
mov
cmc
loop
inc
or
mov
dec
xchg
cltd
mov
jge
xchg
arpl
lret
out
divl
inc
arpl
xchg
inc
testl
repz
mov
add
jae
lahf
cs
in
lods
inc
push
xchg
xchg
cmpsb
push
dec
sub
push
dec
add
inc
xor
sbb
fxch
fdiv
pop
mov
outsb
adc
das
outsb
repnz
pop
pop
or
jge
dec
das
mov
test
and
sbb
jo
scas
pop
xor
xlat
inc
xchg
sbb
mov
sbb
or
fdecstp
dec
push
cmpsb
nop
mov
add
add
dec
fiaddl
jle
cwtl
test
out
mov
mov
out
in
lret
fwait
pop
das
loopne
fildl
js
movl
mov
mov
sarl
xchg
scas
scas
adc
dec
mov
or
cmp
mov
pop
mov
cmp
arpl
inc
cmp
push
hlt
test
pop
fsubrl
xchg
or
cmc
mov
jo
mov
das
and
leave
icebp
icebp
xchg
pop
mov
adc
out
aas
dec
xor
cmp
test
pop
dec
adc
push
cld
cltd
add
adc
mov
sbb
mov
and
adc
or
mov
in
roll
jg
push
stc
pop
mov
add
dec
push
in
cmp
xor
cmp
dec
rcll
repnz
jb
and
pop
je
imul
jp
xchg
inc
add
dec
pop
jmp
mov
out
jp
loop
xchg
sub
popa
repz
loope
in
cmpsb
ljmp
sbb
mov
sub
mov
fiadds
dec
adc
adc
push
xchg
pop
popa
in
es
or
cld
sarb
sub
hlt
int3
cltd
loopne
loope
psrlw
or
imull
push
xchg
add
stos
sbb
std
mov
push
pop
and
loopne
pop
ret
jno
sti
push
inc
dec
xor
aad
jo
jne
xchg
in
testb
jmp
xchg
faddl
mov
mov
xlat
pushf
mov
pop
sbbl
cwtl
shll
arpl
or
push
rcrb
mov
mov
mov
ss
adc
push
dec
bound
pusha
xor
xor
rcrl
mov
mov
adc
mul
in
int3
sub
add
jnp
pop
jl
test
pop
hlt
fwait
out
sarb
xchg
mov
and
sbb
enter
bound
mov
rcrl
cmp
xchg
in
xor
int3
daa
outsb
scas
movsb
fstl
or
mov
data16
shll
jge
push
pop
scas
and
loopne
aam
fstpt
ficompl
cmp
je
jmp
std
fldl
jg
mov
sbb
jge
int3
imul
sub
repz
rcrl
sbb
push
dec
outsl
cmp
daa
jg
imul
in
adc
popf
std
mov
popf
imul
mov
jl
or
loope
push
fs
sub
sub
out
out
roll
mov
stos
sbb
sbb
mov
cmp
call
mov
ret
cmp
xchg
mov
fsubl
and
pop
enter
rolb
aam
cmc
xchg
shr
mov
es
mov
out
sbb
cmp
iret
or
cltd
outsb
loop
lahf
push
cmp
mov
icebp
stc
dec
jo
sub
das
jl
lcall
scas
fs
mov
cmp
sub
or
insl
lock
mov
push
inc
lret
xchg
push
lods
out
adcb
notl
push
and
rcl
mov
sub
dec
mov
adc
popf
mov
popa
sbb
mov
mov
insb
jecxz
shrb
dec
mov
loop
jbe
jns
test
enter
out
sub
jno
push
push
adc
js
gs
inc
and
ljmp
or
dec
mov
inc
repnz
das
sub
mov
sbb
inc
popf
pop
mov
sbb
inc
mov
dec
mov
dec
cmpsl
rdtsc
pop
or
insb
in
pop
ss
and
xchg
pop
pop
xchg
or
test
cli
or
cmp
mov
dec
add
ret
rcll
aam
lahf
cmp
pextrw
outsb
cmp
dec
inc
test
jle
data16
jbe
pop
les
fsubs
jb
ja
les
pushf
inc
push
clc
insl
xor
push
dec
das
outsb
jno
pop
loopne
pop
clc
in
fs
lock
leave
stc
sub
jl
sete
aam
imul
inc
in
add
xor
xor
dec
fiaddl
iret
fucom
mov
popl
xor
gs
dec
sub
cwtl
jle
push
pop
cmp
dec
and
mov
insl
ja
scas
jne
jnp
mov
cmpsb
mov
mov
xchg
aam
sub
out
fsubr
mov
jmp
imul
cmpsl
add
sahf
cmp
or
adc
pop
ret
inc
xchg
fcmovne
out
pusha
in
xlat
sbb
sbb
ljmp
cmc
cmp
pop
repnz
int
rorb
push
pop
sahf
or
or
xor
mov
cmp
mov
mov
jge
lock
and
add
int3
add
sub
outsl
mov
or
out
hlt
add
fisttpl
js
jo
pop
lahf
rcrl
adc
lcall
and
pop
xchg
jmp
test
mov
mov
dec
mov
test
test
scas
stos
in
inc
mov
jle,pt
sbb
ljmp
gs
out
insb
cmp
push
dec
aaa
inc
jno
inc
or
jle
setne
xchg
push
push
pop
bound
sub
inc
inc
loopne
inc
or
xor
cld
add
sahf
xchg
jbe
sbb
lahf
dec
adc
push
cld
shrl
jnp
mov
or
mov
inc
fwait
push
pop
movzbl
mov
xlat
imul
fisttpl
mov
dec
stos
jge
xchg
pop
pop
mov
pop
cmp
stos
clc
inc
inc
xor
cmp
stos
dec
xlat
add
cmc
add
in
or
mov
sub
into
in
daa
incb
lods
xchg
ja
pusha
insb
shll
and
adc
sub
jbe
dec
cmp
jg
jno
dec
pop
int3
cmp
fs
ror
cltd
mov
in
int3
mov
in
pop
mov
aaa
or
insl
enter
ss
fisubl
mov
stc
xchg
mov
stc
adc
pop
add
addr16
out
in
mov
shlb
nop
leave
xchg
mov
mov
rclb
popa
test
lea
clc
std
fcmovnu
pop
mov
mov
xchg
jge
cmp
into
jns
les
imul
out
and
mov
mov
xor
add
scas
pop
push
mov
outsb
inc
add
adc
pop
out
rcll
cltd
std
xor
loopne
imul
add
jmp
mov
fidivl
in
adc
mov
clc
dec
push
dec
pop
mov
push
xchg
xchg
in
int
fsubrp
cmp
rcll
cld
movsl
jne
pop
pop
lcall
mov
dec
int3
mov
push
lcall
cltd
push
mov
and
xor
sub
adc
enter
mov
dec
daa
mov
ljmp
xor
mov
ret
lods
lock
jecxz
lock
pushf
fstl
and
push
push
aaa
into
xchg
shrb
daa
mov
inc
cltd
add
lods
sub
movsl
mov
dec
push
ds
xchg
stos
add
jae
push
outsb
mov
lods
and
jne
or
imul
rclb
push
bnd
out
iret
sub
inc
mov
sub
lcall
out
or
push
lret
cmc
push
inc
inc
faddl
loope
rolb
add
jg
rorb
or
iret
push
push
mov
jnp
or
bound
adc
insl
sbb
mov
mov
lahf
in
dec
adc
xlat
out
sbb
aaa
lret
repz
adc
dec
cltd
add
mov
insb
push
insl
xlat
or
dec
cmpsl
int3
into
sbb
pop
imul
rolb
shlb
push
push
ret
xor
divl
and
jl
outsl
imul
imul
mov
in
xchg
rorb
or
mov
mov
mov
dec
sbb
mov
test
inc
les
fisubl
lahf
cmc
push
repnz
cmp
and
sbb
enter
gs
outsb
pop
or
insb
mov
out
addl
dec
xchg
add
pop
insl
sub
sbb
and
xchg
dec
sub
jne
fimuls
adc
loope
dec
inc
inc
test
pop
fwait
mov
fwait
pop
xchg
mov
imul
sub
mov
shr
cmpl
shl
sub
fwait
xchg
arpl
inc
sbb
lods
dec
jne
mov
and
lret
repz
sbb
lods
inc
mov
out
add
sub
xor
test
or
push
scas
pop
fisubs
movaps
mov
mov
addb
repnz
mov
imul
popf
test
shl
mov
jae
lods
dec
pop
dec
js
popa
pusha
adc
fs
xchg
mov
loop
stos
insb
adc
mov
xorl
vpshaw
jp
arpl
mov
xor
out
int
xor
xchg
mov
xorl
shll
jne
nop
sub
daa
mov
loope
push
addr16
xor
xor
sub
add
mov
ja
xchg
movl
cwtl
push
adcl
inc
sbb
rorl
insb
sahf
bound
sarb
mov
add
popf
add
iret
sub
mov
lcall
add
push
inc
jmp
sbb
xchg
movsb
jb
lods
mov
mov
and
push
outsl
jmp
jle
adc
lret
push
fwait
lahf
or
push
cld
push
push
loop
inc
packsswb
aaa
fwait
ret
dec
popf
repz
dec
and
jp
cltd
das
repz
xchg
sahf
mov
mov
clc
jno
mov
xor
xlat
sbb
adc
shrl
int3
adc
loope
fcmovu
xchg
add
ss
sub
mov
push
shrl
mov
popa
xchg
cmp
xor
inc
aam
mov
add
dec
stos
jb
jnp
mov
or
pop
insl
add
stc
fdivr
xchg
subl
fldl
add
rclb
pop
mov
dec
pop
cld
mov
sti
ret
mov
call
push
ss
dec
push
xchg
adc
xor
lods
cmc
rcr
push
ret
or
mov
les
adc
loope
lods
or
stos
xor
outsl
lods
jl
movsb
movsl
push
sbb
cmc
cmp
fisttpl
jl
pop
in
mov
ss
mov
fisubs
sub
das
and
sahf
lods
mov
push
lock
movsb
pop
roll
in
cli
test
popf
scas
and
popf
sub
lods
mov
dec
cmpsb
xchg
call
push
and
mov
stc
enter
stos
pusha
or
mov
es
bound
sbb
dec
add
inc
std
sbb
cld
and
and
es
push
popa
inc
in
jmp
loopne
mov
fstpl
jg
sahf
xor
sub
aad
pop
xor
sub
mov
pop
pusha
xchg
or
pushf
xor
je
sbb
mov
mov
pop
cmp
xor
jne,pt
jns
sti
fildll
loop
adc
in
jo
subb
mov
xlat
ret
mov
shll
fdivl
aaa
sbb
ror
fimuls
je
daa
cs
add
push
xchg
add
jae
decb
outsl
into
jmp
testl
rcrl
scas
enter
flds
outsb
shll
and
cmpsl
pop
jecxz
lret
sahf
mov
outsb
scas
mov
push
xor
add
incb
xchg
inc
lock
mov
aaa
pcmpeqd
sti
insb
pop
negl
jae
inc
insb
int3
sti
in
rcll
jnp
adc
mov
fs
das
xchg
mov
sub
sub
mov
jo
imul
test
push
test
pusha
loop
xchg
cmp
test
sbb
loope
inc
pushf
push
fldlg2
lret
xor
mov
insl
fwait
jmp
ret
shl
lds
inc
cltd
fistpl
fsubrl
fwait
sbb
mov
sub
push
jge
std
pushf
rcrl
es
in
fcomip
daa
sbb
cltd
jp
cld
repnz
push
scas
and
jl,pt
dec
xchg
repnz
ljmp
movsb
int
cmp
pop
std
into
in
inc
xor
sbb
jb
mov
jmp
movsl
addr16
in
sbb
scas
out
nop
shrl
dec
or
pop
xchg
jno
loope
xor
xchg
mov
dec
fwait
in
add
scas
icebp
jne
cwtl
adc
call
mov
mov
mov
push
in
xchg
jno
mov
lods
cmp
cld
ds
sbb
fisubrs
jae
std
sbb
outsb
push
dec
and
jl
adc
lock
or
cs
jae
lock
repz
das
dec
sti
fnstenv
das
push
das
lds
out
and
mov
jl
mov
dec
and
lds
push
mov
fadd
inc
xchg
flds
xor
sbb
shlb
popf
pushf
mov
push
add
inc
sbb
bound
pop
mov
cmp
xlat
jb
fsubrl
mov
push
ljmp
test
popa
ja
or
cmp
mov
frstor
cs
fisttpl
push
push
cmpsb
mov
mov
std
in
lods
aad
sub
ds
orb
fwait
sbb
addl
mov
inc
bt
xor
orb
dec
js
jns
jl
jne
fisttps
jae
add
in
nop
or
cmp
lods
bound
ss
xchg
aam
iret
mov
hlt
or
dec
sub
lahf
mov
adc
mov
inc
sti
add
mov
movsb
ljmp
push
iret
jne
inc
jle
dec
adc
xchg
ds
xorl
mov
mulb
sbb
sbb
int3
mov
jns
addr16
ja
jl
adc
sub
xor
mov
ljmp
mov
mov
jae
stc
hlt
rorl
notl
mov
dec
jmp
gs
pusha
jle
inc
data16
leave
adc
out
addr16
cmp
inc
lods
pandn
xchg
and
aad
xchg
dec
xor
or
pushf
mov
xchg
mov
mov
movsb
fbld
push
or
andl
inc
lds
push
js
imul
jo
fisttpl
sub
pop
rcpps
gs
gs
rcll
lret
lods
leave
pop
jne
and
lcall
out
cmp
adc
jle
xchg
icebp
push
cltd
bound
and
mov
jae
insb
call
jne
cmpsb
sbb
in
sbbb
hlt
mov
jl
lahf
mov
sub
hlt
fs
mov
sbbl
xchg
fisttps
mov
fidivrl
cli
outsl
mov
push
test
mov
mov
imull
je
xchg
mov
cmc
jle
inc
pop
leave
push
sti
out
movsl
shrb
mov
inc
xchg
xlat
fcom
daa
jg
xorb
sub
xchg
and
jecxz
sub
ja
pop
mov
sti
push
enter
mov
fwait
cmc
ds
movsb
xor
xchg
xor
lea
das
add
es
adc
or
xor
test
int
xchg
adc
popf
movb
add
jecxz
xor
push
cmp
rorb
cmp
aas
ss
lods
jle
mov
scas
pop
cmp
lcall
push
mov
fistps
or
dec
cmpsl
mov
test
jmp
sub
or
shr
push
sahf
je
icebp
add
fsubrp
andl
pop
jp
mov
cmp
daa
les
cld
push
sbbl
out
int3
xchg
sub
pop
or
jmp
dec
xchg
lea
add
push
xchg
xchg
push
pop
mov
outsb
lahf
inc
dec
sbb
fldcw
addr16
or
add
or
out
popf
out
loope
enter
movsl
adc
cld
mov
sbb
push
xor
aam
mov
icebp
mov
xor
and
and
das
repz
cli
in
and
insl
pop
ret
or
inc
pusha
int3
dec
pop
sub
aas
lcall
pop
loope
push
sub
xchg
jg
out
ds
or
push
iret
stos
push
pop
jno
insb
sbb
loope
add
dec
sbb
and
movsb
add
inc
mov
mov
add
push
push
dec
pusha
bound
dec
cmc
pusha
idiv
sub
popf
mov
jge
fisubl
xchg
js
out
mov
mov
jo
loopne
and
or
inc
xchg
sub
imul
rcrl
and
add
mov
andl
inc
int3
fstl
pop
cmp
int3
and
outsl
idivl
mov
ds
jle
pop
adc
push
mov
xchg
push
sahf
inc
inc
sbb
test
bound
lret
imul
sub
bound
sub
iret
jnp
jg
pop
sub
or
lahf
mov
add
mov
insb
nop
xor
aam
or
addr16
mov
dec
test
mov
imul
mov
or
in
dec
inc
push
loope
add
gs
jge
and
xor
inc
mov
push
xchg
add
jp
imul
push
jo
lret
inc
xchg
repz
and
pusha
mov
int
repnz
iret
out
clc
cmp
pop
adc
cmp
push
sbb
pop
into
mov
sub
pop
add
dec
packssdw
push
xlat
cmpsl
xchg
insb
sbb
scas
mov
call
and
sbb
mov
jp
inc
inc
in
iret
int
sbb
push
xor
sub
mov
mov
xchg
icebp
outsl
sub
movsl
sbb
mov
push
outsl
clc
push
bound
pop
lret
dec
xor
ds
push
inc
jbe
fsts
jne
int
out
push
mov
or
and
and
dec
cmp
leave
fisubrl
fmuls
xor
in
mov
mulb
or
mov
mov
push
stos
mov
fnstenv
xchg
sbb
mov
loopne
out
lds
loope
jno
test
stos
pop
sub
mov
xchg
fsubl
pop
out
sbb
xchg
jae
pusha
sub
mov
mov
dec
push
adc
cmp
sbb
sub
les
jecxz
ret
repnz
adc
scas
mov
scas
imul
cmp
adc
repnz
cmpsb
pop
sub
shll
pop
roll
mov
push
scas
loop
lret
es
fsts
ljmp
call
mov
jge
cmp
testb
lret
fdivrl
dec
jns
dec
nop
mov
push
adc
loop
sahf
jnp
pop
stos
nop
cmp
sti
dec
fstp
sahf
outsl
sub
mov
nop
jns
es
ret
push
mov
aas
adc
xor
inc
dec
fldcw
aad
popf
jle
dec
mov
jo
xchg
fldln2
outsl
cmp
jb
stos
jbe
inc
les
or
sub
xchg
pop
jb
gs
cmp
cmp
mov
mov
inc
push
xor
jbe
addr16
mov
add
inc
rcl
xor
call
cmp
mov
jo
dec
pop
dec
push
inc
cli
inc
jmp
xchg
jns
das
lcall
inc
pop
mov
jno
loop
rorl
or
stos
inc
fwait
sar
inc
pop
sub
jmp
adc
arpl
xchg
rcl
push
lcall
imul
mov
xchg
sub
test
mov
enter
int3
add
pop
popa
cld
sbb
rolb
jo
cmc
stos
dec
cmpsb
inc
mov
jp
shr
loopne
inc
lods
push
and
sbb
jbe
sub
mov
cmpsb
lock
nop
mov
jb
loop
inc
fsubrs
lret
call
pop
shll
cmp
ljmp
mov
sub
pcmpgtb
arpl
loope
lcall
pushf
jo
or
test
shl
pop
ljmp
or
inc
in
mov
sub
ds
sbb
and
xor
jne
ret
sub
int
mov
enter
cmpl
jne
dec
mov
imul
sti
xor
pop
cmp
adc
lods
outsb
cmp
jecxz
dec
jo
cmp
loopne
scas
pop
sti
mov
or
cmpl
jns
subl
xor
outsl
shrl
lahf
or
dec
test
jmp
shrl
add
int3
call
outsb
and
push
sub
add
hlt
outsl
js
xor
rcrb
and
loop
sub
pop
gs
mov
dec
clc
cld
mov
aam
sub
pop
cmpb
or
sub
mov
sub
rorb
pop
dec
out
jno
sbbl
je
cmpsl
jo
push
or
shlb
jl
iret
xchg
inc
xor
lcall
pop
xchg
inc
jl
mov
mov
jp
outsb
mov
mov
mov
lock
in
mov
xchg
pusha
jmp
add
inc
or
add
jae
xchg
cmpsb
inc
jmp
mov
dec
fidivrl
jmp
and
or
mov
or
jno
jecxz
sahf
sub
int3
pushf
or
push
or
lods
jb
sub
and
popa
stos
js
cmp
arpl
out
fisubrl
mov
adc
mov
jmp
lret
rcll
jae
cmp
fs
lds
and
mov
cmp
jecxz
mov
leave
out
int
out
mov
mov
sbb
aam
cmpsb
pop
xor
shll
fcmovnbe
outsl
pop
pop
shr
and
mov
loopne
jo
lock
cwtl
mov
pop
loope
fcompl
jne
pop
xor
mov
dec
cmc
ljmp
aam
dec
mov
jecxz
xor
jns
mov
aas
push
push
fs
and
mull
out
test
shlb
lret
cmpsl
mov
jg
adc
jl
jo
jnp
mov
ret
scas
aad
push
inc
sbb
push
fsubrl
mov
fs
into
cmp
int
mov
cmpsb
sub
int
inc
sub
loopne
outsl
mov
xor
or
sti
imul
cwtl
mov
shrl
fimuls
push
inc
adc
dec
xor
incl
fstpl
pop
popa
dec
outsl
movsb
std
push
xchg
xchg
and
movsb
add
jno
cli
iret
cmp
mov
gs
repnz
push
pop
stc
jns
mov
sti
mov
jp
jae
pop
andl
loopne
cmpsl
js
mov
sahf
cmpl
pop
push
lock
jb
mov
push
ret
and
add
mov
pop
adc
out
in
xor
shrb
cmp
mov
add
sarl
xor
sub
sbb
mov
jecxz
mov
lds
and
pop
xchg
in
cmp
pop
xor
int
scas
mov
ret
xchg
mov
inc
nop
sbb
xor
andl
sbb
dec
jo
into
sbb
pop
dec
roll
mov
insl
and
push
pop
cmc
dec
jmp
inc
jmp
roll
or
pop
das
xchg
inc
ret
js
xor
xor
mov
mov
pop
add
int
xlat
dec
clc
in
sbb
inc
jg
mov
push
leave
or
hlt
jp
lock
mov
push
sbb
or
leave
imul
xchg
outsb
add
jo
lock
add
xchg
in
pusha
icebp
mov
gs
rcr
arpl
std
adc
adc
adc
popf
hlt
hlt
fisubrs
push
sahf
scas
enter
mov
pushf
add
cmp
cmpsb
fwait
mov
sbb
jbe
repz
lcall
add
insl
jecxz
ret
xor
flds
pop
popa
repz
inc
and
lods
imul
lcall
test
mull
sbb
call
pop
mov
inc
cmp
sbb
push
incb
mov
xchg
je
dec
adc
ss
pop
mov
fs
out
dec
in
lahf
lock
cmp
sub
aad
or
add
in
pop
sbb
push
mov
pushf
js
push
jb
jo
mov
or
sub
mov
loopne
fs
xor
in
push
push
cltd
addr16
inc
scas
and
inc
repnz
test
pop
xor
or
lock
inc
mov
xchg
cmpsb
inc
psubw
jle
jae
inc
addr16
lds
out
arpl
out
dec
jb
xor
pop
daa
shr
push
jle
jno
lret
dec
in
das
xchg
xor
pusha
movsl
lods
pop
loop
int3
test
push
loope
xor
adc
movsb
ret
pop
lcall
out
and
in
push
mov
mov
fnsave
mov
nop
addr16
lods
fwait
xchg
popf
mov
or
jp
dec
lcall
icebp
push
test
iret
and
fsts
cmp
mov
lods
pushf
aaa
testb
sbb
mov
xchg
fisttpl
and
in
push
mov
xchg
push
fldt
aam
loope
mov
mov
xlat
inc
pop
cmp
loop
int3
lods
inc
xor
pop
hlt
or
dec
inc
adc
das
mov
and
mov
jb
push
add
cld
fscale
sub
mov
ret
out
mov
mov
dec
sti
jle
out
lret
mov
sub
mov
bound
sbbl
jp
dec
fmull
das
and
inc
stc
or
push
and
pop
mov
repz
or
loop
mov
xor
int
inc
pop
shlb
dec
pop
mov
addb
ret
jecxz
pop
dec
loop
jl
clc
cmp
adc
mov
pop
test
mov
mov
push
mov
adc
mov
adcl
pop
arpl
popf
movsl
jo
sub
mov
lods
push
loopne
mov
pop
out
cld
int3
in
mov
jg
pop
mov
decl
lret
xor
pusha
inc
xchg
sbb
arpl
cmp
pushf
out
cmpsl
sbb
lods
mov
imul
fisttpll
loop,pn
xchg
pop
xor
fdiv
add
scas
rcrl
fdivr
outsb
mov
cld
push
or
cli
sub
ror
mull
xchg
dec
mov
push
aam
and
arpl
es
in
sbb
push
jg
test
ss
out
jns
mov
sbb
out
stos
mov
dec
iret
pop
outsl
xor
fimull
dec
jo
lret
mov
push
pop
divl
int3
mov
cli
movsb
pop
movsl
out
test
leave
and
enter
push
nop
arpl
jge
sahf
adc
xchg
push
xor
ret
test
sub
or
mov
leave
lea
stc
xchg
nop
int3
loopne
sbb
inc
mov
mov
jae
push
push
adc
push
or
push
push
xchg
cs
iret
cmpsb
jl
daa
push
dec
dec
inc
test
inc
jae
inc
mov
sub
shr
aas
and
insb
out
sub
mov
xchg
nop
sahf
dec
adc
je
jge
insl
jne
pop
or
mov
and
jnp
lds
cmpsl
sbb
and
xchg
jns
insl
push
add
push
rcr
arpl
push
lea
lret
test
mov
ficoms
jns
fsts
fstpl
jbe
xchg
dec
mov
lret
mov
adc
popa
xchg
jo
mov
jmp
xor
hlt
and
hlt
dec
push
inc
add
mov
mov
and
and
fisubs
out
adc
adc
insb
mov
scas
jmp
aas
in
adc
push
and
aam
mov
ret
std
jl
aaa
sub
xchg
xor
insb
test
pop
insb
pop
xchg
fldt
ficoms
xchg
adc
std
inc
xor
call
nop
jecxz
insb
out
jge
add
test
jnp
adc
push
mov
scas
adc
pop
hlt
fildl
jp
test
mov
call
call
jae
push
jmp
adc
xor
cmpb
stc
add
movsb
movb
mov
ja
jecxz
pop
pop
shll
roll
jo
movsb
test
aad
sbb
adc
lcall
xchg
jmp
xor
xchg
lock
lret
sbbb
xchg
mov
sbb
xchg
loope
repnz
and
es
xchg
lock
sahf
xchg
dec
xchg
and
xchg
dec
fidivrs
xor
fnstcw
pop
jno
stc
xchg
fdivp
jae
add
jnp
xchg
jo
jl
or
fnsave
push
pop
mov
cmc
mov
mov
orb
dec
fmull
movsb
push
pop
dec
sub
xchg
mov
mov
dec
push
std
add
gs
es
test
sbb
push
push
mov
imul
xor
and
pop
dec
xchg
xchg
cmp
mov
cmpsb
dec
rcrb
sbb
mov
pop
pushf
addr16
mov
mov
in
mov
pusha
sarl
add
lret
pop
mov
inc
out
pop
mov
add
inc
addr16
jns
xorl
push
imul
dec
push
ja
xor
scas
push
sub
sbb
pop
sub
fisttps
jae
xor
les
shl
lcallw
leave
adc
pop
ss
push
les
add
xchg
pop
scas
inc
sub
add
test
aad
inc
insl
pushf
psubw
xor
sti
pop
sbb
pop
shrl
push
xchg
jae
aad
xchg
in
cmp
jnp
jbe
push
jecxz
mov
into
pop
stos
xchg
jno
mov
nop
mov
lret
add
je
pop
adc
mov
in
imul
stos
or
mov
popa
fstpt
fbld
sti
mov
call
xor
inc
fcomp
jne
dec
dec
fsubs
jecxz
cmp
ja
sbb
stos
sbb
inc
xchg
ret
bswap
add
adc
ret
outsb
shlb
lahf
iret
pop
cli
out
popa
or
pop
int
sbb
clc
jne
imul
sbb
sbb
push
sbb
mov
insl
imul
mov
mov
sub
iret
sbb
int
mov
cmp
in
sbb
xor
xchg
test
jl
cmp
xchg
scas
or
int3
icebp
rclb
pop
movsb
xlat
nop
mov
add
cmp
out
jmp
ud1
cmp
stos
imul
push
cli
divl
and
mov
test
fwait
mov
sub
mov
add
stc
int3
xor
push
and
jne
push
dec
fistpl
je
sub
movswl
or
mov
cmpsb
inc
cld
mov
hlt
inc
repnz
xchg
lahf
jbe
cs
xchg
xchg
scas
in
cs
mull
pcmpeqd
loope
adcl
jle
inc
xchg
out
xchg
shrl
xchg
cli
adc
aam
and
add
sbb
cmpsb
not
aam
inc
adc
inc
scas
int
fiadds
insl
icebp
lcall
in
cmp
in
push
jno
fs
adc
or
nop
jb
jmp
mov
push
dec
subl
out
or
mov
add
inc
cmp
sub
in
adc
xchg
in
mov
mov
leave
call
inc
pop
std
out
jge
sbb
arpl
ja
mov
jae
add
sbb
jno
aas
stos
add
into
or
sub
jl
lret
fwait
jo
push
push
scas
mov
jae
cmp
imul
lret
popa
xor
stos
cmp
stos
jns
movsl
sbb
jle
xlat
dec
lods
testl
adc
and
dec
sahf
sub
or
mov
sahf
cmpsl
stos
xchg
and
pop
fimull
mov
or
sbb
jne
bound
dec
pop
ret
xchg
mov
aam
mov
fistl
out
clc
jge
lds
adc
cmp
xor
ret
mov
js
out
clc
dec
je
jp
xor
sub
int3
out
sub
dec
ret
xchg
cli
mov
mov
popa
mov
lret
imul
in
les
jg
add
fldcw
pop
inc
ret
sbb
mov
in
decl
cmpsb
data16
in
mov
cmp
jbe
fcom
popl
and
cs
hlt
adc
sbb
push
mov
rol
imul
pop
out
clc
iret
add
dec
lods
jecxz
push
sub
pusha
sub
fwait
push
mov
sbb
test
imul
mov
xchg
je
ret
in
out
popaw
xorl
dec
fs
into
mov
psubusb
stc
into
sub
bnd
mov
lea
repnz
sub
int
lods
into
mov
pop
dec
add
rorb
lods
and
jge
and
cmp
jne
aam
push
ror
dec
mov
aam
lods
popa
ja
jb
movsl
mov
pop
mov
and
movsl
shrb
add
jae
push
inc
xor
sbb
fisubrs
arpl
loopne
aaa
sti
dec
mov
push
mov
sbb
cmp
sbb
es
data16
out
int3
mov
mov
rcrl
mov
lret
mov
or
pusha
fidivrs
std
pop
pop
sub
jmp
rdpmc
push
pop
loop
jecxz
pop
outsl
or
mov
inc
stos
push
inc
add
mov
stos
jp
mov
icebp
push
mov
int3
inc
mov
shlb
data16
or
xchg
icebp
xor
mov
lret
jecxz
and
xchg
roll
ss
out
cwtl
scas
cmp
andl
arpl
mov
roll
shl
rcll
xchg
add
data16
adc
mov
adc
cmpsl
in
iret
or
xor
lods
je
cmpsb
outsb
loope
jg
cli
shll
stos
hlt
mov
scas
faddp
pop
push
imul
push
push
xchg
negb
inc
push
popa
stos
mov
pop
inc
pop
ficompl
addr16
imul
and
pop
out
jno
mull
lock
mov
jp
outsl
shll
xlat
jns
je
mov
dec
dec
sbb
in
lahf
mov
sbb
aaa
push
adc
cmp
xor
add
mov
jmp
cmp
dec
mov
ret
xor
jns
dec
push
xchg
or
mov
hlt
sbb
mov
clc
fimull
pusha
dec
ret
jae
xchg
mov
imul
into
setae
clc
in
mov
mov
lods
sarb
in
push
dec
mov
add
or
pop
pop
jnp
and
jae
xchg
pusha
mov
stos
xor
loop
int3
adc
insl
xor
addr16
movsl
and
test
out
mov
cltd
mov
inc
or
pop
cmp
dec
jb,pt
xchg
inc
pop
in
jge
cmpsb
xchg
lods
xchg
cmp
xchg
xor
sbb
in
mov
icebp
jmp
sub
js
std
into
sub
mov
and
insb
cmpsl
iret
cmp
dec
ss
out
loope
push
not
xor
dec
pop
mov
mov
mov
fiadds
ja
icebp
je
mov
mov
or
rcll
mov
scas
xor
and
iret
push
xchg
pop
dec
inc
outsl
xchg
mov
loop
pusha
sbb
lea
mov
xor
stos
dec
pop
mov
or
loopne
cld
mov
lcall
xor
pop
push
lock
iret
mov
ja
iret
int3
aas
in
lock
add
imul
xchg
xchg
mov
inc
dec
sbb
gs
mov
into
and
ret
and
pop
xchg
aas
cwtl
jmp
subl
rclb
xchg
mov
sbbl
inc
dec
lahf
cs
push
mov
pop
inc
mov
cwtl
in
cmp
outsb
data16
mov
xlat
xchg
ficompl
pop
std
or
push
mov
fstl
inc
or
cwtl
add
dec
lret
sbb
stos
ret
jb
lock
int
cmp
xor
xchg
push
jnp
ror
pop
ret
and
sbb
push
jecxz
test
xchg
sub
add
dec
popa
mov
pushl
rcr
or
inc
test
add
pop
adc
xor
push
xchg
xchg
popf
orb
dec
testb
adc
pop
mov
and
loop
jg
cmp
pusha
les
inc
jge
mov
mov
xor
adc
ret
mov
mov
cmp
push
xor
mov
push
and
adc
sub
add
push
xchg
xor
dec
scas
sub
idiv
orl
dec
xor
jo
dec
dec
mov
sub
cmpl
lea
popf
xor
and
fisttpl
inc
lds
dec
add
mov
pop
fcompl
fsts
fstpl
imul
test
mov
add
add
shlb
iret
xchg
sub
sub
mov
inc
cli
jmp
xchg
pop
or
inc
jg
sahf
or
inc
push
std
lods
jge
icebp
dec
push
mov
jo
sub
test
adc
sub
cltd
in
inc
scas
icebp
pop
adc
mov
jl
aaa
xor
mov
out
jb
daa
cs
pop
and
push
add
andl
in
out
pusha
push
xchg
sar
mul
shrb
jg
mov
mov
or
arpl
ret
xchg
jmp
dec
cmp
jecxz
xor
mov
mov
movsl
into
pop
mov
icebp
or
cmpl
lods
xor
sbb
sarl
lock
scas
mov
jb
mov
mov
outsb
pop
ljmp
push
add
xchg
jg
outsb
mov
jae
xor
dec
js
aaa
xchg
push
add
push
cltd
dec
loope
arpl
inc
cld
test
pop
pop
sti
xchg
movsl
push
adc
movsb
xchg
ja
scas
scas
push
pop
idivl
test
push
in
rorl
mov
imul
cmp
sti
out
ret
gs
dec
cmpl
in
or
shll
fmul
stos
inc
dec
sub
pop
pop
lret
and
mov
or
sahf
mov
call
pop
mov
mov
fildl
xchg
xchg
movsb
cmp
mov
xchg
iret
inc
xchg
cmp
push
in
cs
inc
add
iret
dec
push
cmp
aam
jle
fdivrs
push
andb
imul
mov
lods
jb
pushf
push
pop
shrl
xchg
push
daa
adc
dec
les
fidivs
cmc
inc
clc
dec
arpl
jg
xor
popf
movsb
ret
xor
push
sub
xchg
cmp
fidivrl
jge
outsb
mov
xchg
mov
push
enter
iret
jge
cbtw
jl
push
mov
scas
fisubl
fcmovnbe
xor
pushl
cmp
pop
mov
xor
sub
not
cmp
push
ficoml
popf
cmc
movsb
inc
jbe
lret
insl
pop
cmpsb
popa
jo
mov
mov
jb
cltd
sbb
iret
xchg
lahf
xor
rorb
cmpsb
sub
orb
adc
jbe
mov
fiadds
js
pusha
data16
or
jle
shll
adc
stos
test
add
add
test
xor
push
sub
push
arpl
test
xor
mull
pusha
mov
test
iret
testb
sub
inc
xchg
ret
in
sahf
jmp
stos
stos
add
sti
adc
mov
inc
sbb
scas
cmp
movl
bound
loop
jo
push
push
inc
cmpsb
dec
xchg
enter
push
aad
mov
movsb
shrb
add
jne
in
daa
test
call
pop
cmp
mov
push
push
xor
ds
fxch
jo
out
jle
test
orl
cmc
mov
inc
test
jno
enter
paddsb
arpl
cmp
xor
cli
jne
add
or
inc
add
divb
ret
cli
pop
outsb
lods
inc
int
int
cmpsb
mov
inc
mov
lret
or
shr
aad
dec
xor
std
scas
pop
inc
inc
xorl
shlb
jp
mov
lcall
mov
movsb
hlt
mov
cs
pop
imulb
jmp
mov
shl
jg
cmp
mov
jne
cmp
into
pusha
xor
mov
rcrb
mov
ret
jmp
fld
push
sbb
scas
sbbb
cmp
or
sarb
scas
iret
stos
pop
sub
in
xchg
sub
mov
pop
sbb
xor
addr16
pop
scas
ret
add
mov
clc
xchg
fimull
mov
cmp
mov
dec
add
dec
adc
xchg
sbb
lret
sbb
dec
fwait
mov
lods
jge
sbb
cmpl
jp
sub
outsb
scas
inc
repnz
andl
push
jno
dec
push
jae
and
push
push
push
or
add
inc
xchg
hlt
xchg
pop
mull
std
push
mov
in
stos
xor
scas
popf
jns
jne
aas
inc
imul
adc
pusha
dec
push
repnz
mov
mov
fs
pusha
pop
cmpl
or
lods
es
or
jnp
pop
or
clc
xchg
ret
dec
out
leave
mov
fs
fimull
jmp
xlat
add
imul
or
push
add
pop
mov
jo
push
jle
pop
pop
mov
and
lahf
loop
gs
mov
mov
and
sub
insl
adc
dec
or
sub
les
dec
cli
xchg
dec
das
jmp
inc
or
push
stos
fisubrl
sub
and
mov
loope
xchg
scas
outsl
test
or
xchg
add
shr
in
xchg
stos
mov
les
sub
fsts
aad
jb
mov
sbb
addr16
dec
fstpl
cs
addr16
cs
std
jp
xchg
mov
std
pop
xor
movzbl
dec
push
cltd
push
call
ljmp
mov
ja
ficompl
test
mov
iret
lock
add
out
adc
mov
repnz
pop
sbb
dec
adc
rclb
mov
inc
lret
insb
jno
push
or
mov
lahf
dec
pushl
pusha
jb
jo
push
mov
leave
shll
push
stos
push
or
inc
dec
adc
adc
add
mov
mov
xorb
sti
inc
fisttps
mov
cmp
mov
aas
push
ror
mov
adc
sub
jge
mov
inc
xor
loop
add
mov
cmp
or
inc
es
sub
xor
out
cmpsb
mov
dec
or
mov
add
outsb
imul
idivl
ret
cmpsb
mov
cmp
adc
shr
xchg
aas
ret
es
xorl
scas
inc
ds
in
pop
adc
sbb
nop
dec
xchg
das
jge
lret
cli
mov
jle
outsl
int3
mov
cli
fwait
mov
movb
imul
fwait
cmp
mov
sahf
sbb
add
scas
dec
loopne
addl
sbb
ss
je
subb
add
pop
cwtl
and
lds
hlt
add
stos
xchg
sti
int3
or
jge
pop
les
cld
fucomp
sbb
ret
pop
push
mov
pushf
test
int
fsub
aam
adc
sahf
cld
sub
pop
sub
popf
add
insl
mov
ror
jg
enter
or
or
fnstenv
ss
outsl
mov
popa
or
jmp
xor
inc
jo
andb
dec
pop
push
mov
fwait
sbb
sub
jp
push
scas
dec
in
lret
mov
icebp
push
std
push
es
roll
adc
dec
fidivrs
xchg
pusha
repnz
mov
leave
add
fstpt
stos
add
leave
mov
mov
test
xor
ss
jmp
or
sub
push
sub
adc
icebp
push
cmc
pop
dec
imul
gs
stos
pusha
cmc
cmp
xchg
jno
in
sub
pushf
pop
mov
das
xchg
fstl
sbb
aam
das
gs
enter
data16
aam
cmp
loop
ss
mov
sbb
aaa
or
add
push
mov
jns
xor
and
or
dec
mov
dec
rcrl
push
add
les
cli
not
cli
cmpsb
push
mov
xchg
adc
daa
xchg
dec
mov
push
adc
movsb
mov
xor
jecxz
test
or
imul
adc
cmpsb
movsb
mov
call
movsl
scas
adc
push
mov
iret
mov
rcr
pop
dec
movsb
lret
shrb
test
aad
push
mov
std
mov
cld
mov
stos
push
xchg
sub
mov
test
stos
sbb
in
movsb
nop
cmpsb
mov
cmp
mov
mov
push
enter
cmp
test
out
pop
inc
lret
jb
sub
popf
sti
ffreep
mov
push
aaa
pop
cmp
cmpsb
jl
push
cmp
mov
mov
sbb
add
fmul
mov
mov
sti
add
sub
pop
adc
mov
fstp
pop
clc
hlt
lret
sub
jmp
arpl
pop
mov
push
cmp
jmp
nop
dec
int3
fisttpll
sbb
mov
es
sbb
push
sti
xor
pop
dec
sub
mov
out
out
in
dec
push
aam
in
push
leave
idiv
lahf
lcall
movsl
leave
mov
fbstp
adcl
cs
pop
or
or
call
call
xor
jmp
sbb
aas
outsb
pushf
push
repnz
dec
dec
xchg
xor
and
popf
fs
outsb
xchg
fsts
inc
scas
inc
add
adc
test
add
mov
pop
push
pop
pop
cmc
jb
jecxz
inc
loopne
test
mov
lahf
testl
push
fsubl
adc
sub
jns
popa
push
jg
jmp
addr16
fs
pusha
pop
add
int
jmp
mov
outsb
in
rorb
movsb
or
jl
insb
xchg
sub
inc
pop
and
add
out
add
dec
std
mov
loope
push
jno
ss
or
mov
mov
loope
push
xor
loope
mov
inc
fucomi
pop
fstpt
mov
cmp
mov
or
js
iret
pusha
or
and
lea
outsb
xchg
mov
rcrb
nop
adc
mov
and
xor
aaa
ud2
mov
pop
mov
sbb
out
ljmp
or
gs
cmpl
dec
lea
jne
mov
je
mov
lods
xor
sbb
in
xor
clc
or
jo
jns
jmp
dec
mov
pop
fistpl
xor
add
jae
xor
push
test
xchg
out
mov
ficoms
fmuls
data16
fsubrs
or
cmp
ret
into
repz
sbb
jmp
push
sub
cli
andl
inc
mov
inc
popa
cmp
lahf
mov
sub
mov
lea
mov
out
mov
xorl
jns
fwait
inc
pushf
jg
cmp
popa
mov
pusha
fisubs
pop
jp
popf
sbb
xchg
call
xchg
outsb
dec
cltd
jne
icebp
mov
lock
sbb
divb
shll
daa
xlat
shr
push
xor
mov
lret
or
jae
out
js
jle
hlt
fbld
pop
fwait
loop
xchg
and
scas
push
jl
pop
jo
fs
or
xor
imul
jno
pop
and
xor
aaa
mov
mov
push
imulb
popf
fs
sub
push
jmp
aaa
xchg
jnp
into
sti
cld
mov
sbb
and
test
lods
lahf
mov
jo
jl
mov
mov
push
push
jge
aam
loop
shl
pop
sbb
mov
lods
add
cmp
imul
mov
inc
int3
mov
push
enter
in
push
ret
xchg
mov
sub
outsb
repz
inc
adc
xchg
push
jl
mov
cmpsb
add
aaa
pop
inc
mov
or
sbb
orb
cmp
cmpsl
dec
pop
movsl
push
arpl
cli
jmp
lret
mov
sbb
in
test
mov
lret
lahf
or
jge
sub
push
das
repnz
shl
mov
inc
sbb
aas
xchg
in
mov
push
sub
sub
test
sub
xor
out
push
ja
mov
pusha
lcall
cmpsl
cmp
xchg
mov
dec
repz
fisttpl
lods
sub
nop
add
mov
cmp
mov
jno
xchg
pop
aas
pushf
or
cmc
stc
inc
push
arpl
jle
test
or
lock
cwtl
pop
out
pusha
mov
dec
xchg
dec
je
test
jno
inc
imul
inc
pop
adc
cmp
jne
add
jb
scas
dec
lds
stos
repz
inc
xor
repnz
xchg
xchg
mov
sti
decb
xor
cmpsb
loope
xchg
or
jg
and
xchg
mov
lret
cmp
in
scas
add
xor
cmp
xchg
mov
dec
lods
mov
pop
cmc
jg
loope
fiaddl
cmp
pop
push
cs
icebp
inc
xchg
push
inc
pop
cwtl
imul
dec
sti
data16
cmp
lock
xor
fmuls
adc
loop
pop
imul
aas
dec
cli
push
dec
push
test
repz
dec
adc
dec
fnstcw
pop
push
enter
out
push
test
stos
repz
stos
sahf
and
pop
nop
popa
inc
jne
add
lret
lahf
push
push
js
or
sbb
push
loopne
enter
push
dec
and
das
adcb
xchg
sbb
inc
xchg
in
mov
addl
push
jl
cwtl
loopne
aaa
sub
sub
xlat
cli
fdivrs
pop
mov
adc
mov
mov
dec
outsl
jecxz
std
dec
and
dec
add
mov
loop
jb
les
jge
or
xchg
pusha
js
inc
sub
cltd
addr16
pop
les
mov
aaa
fs
cwtl
sub
icebp
mov
mov
mov
imul
je
xchg
mov
pop
mov
sbb
cmp
aas
pop
xor
sbb
js
mov
sub
ror
sbb
mov
mov
lcall
repz
fcompl
test
cs
push
rcrb
fabs
dec
lea
and
dec
jbe
imul
iret
and
push
popf
jle
shlb
xchg
test
stos
aad
adc
mov
call
in
cmp
out
or
dec
sub
imul
mov
sub
in
sahf
xor
jecxz
xor
mov
push
ljmp
gs
push
jno
push
stos
out
add
jl
pop
pop
mov
cmp
inc
fsubrs
in
mov
cltd
inc
in
mov
push
imul
popl
in
sbb
xchg
fadd
add
and
mov
jp
ljmp
ret
push
jl
and
cmpsl
mov
dec
push
jge
aam
pop
rol
ret
mov
imul
mov
xchg
add
jmp
xchg
setno
mov
sbb
movsl
les
out
mull
pushf
mov
fcompp
xchg
pusha
adc
shlb
daa
scas
pop
inc
addr16
cwtl
decb
pop
push
addr16
rclb
repnz
pushf
rclb
xchg
cmp
ljmp
mov
sbb
out
lds
shl
xor
adc
mov
or
sahf
cltd
pop
pusha
imul
pop
or
xor
xchg
xchg
sbb
mov
lea
je
aaa
cmpsb
push
inc
icebp
pusha
push
mov
lret
stos
xchg
xchg
adc
imul
inc
cltd
cwtl
cld
imul
divb
jmp
stos
pop
out
mov
fstpt
test
xor
xchg
push
sub
out
xor
xlat
pop
cmc
sti
jle
pop
sbb
cmp
cmp
add
pop
xchg
inc
stos
dec
test
sahf
pop
cmp
lret
inc
and
mov
sbb
jle
scas
movsl
xchg
and
dec
cmp
cld
shl
lods
cwtl
mov
jecxz
or
inc
adc
adc
and
xor
xlat
mov
test
jb
or
std
imul
pop
out
aaa
push
call
lret
insl
enter
add
mov
enter
aas
push
mov
jnp
movsl
mulb
adc
fwait
jns
sbb
mov
inc
mov
enter
mov
adc
enter
stos
jp
out
bsr
mov
push
push
fstps
pop
scas
mov
insb
test
call
out
pop
clc
call
ss
and
push
dec
or
dec
cmc
inc
ja
int
adc
dec
aad
push
bound
sarl
ja
xchg
enter
fldpi
sub
sbb
xchg
ja
rolb
or
xor
les
mov
test
inc
fucompp
sbb
jbe
cmc
fistpl
lock
std
cmp
rcrl
out
pop
scas
loop
arpl
mov
adc
lods
data16
leave
nop
mov
jbe
inc
sub
push
sbb
test
scas
aaa
xchg
mov
jbe
adc
mov
xchg
mov
stos
adc
fnstenv
dec
sub
jb
mov
mov
mov
inc
sar
jmp
pushf
xor
dec
test
mov
add
fldl
cmpsb
and
std
loope
jle
sarb
aam
ret
and
and
jno
fdivrs
pop
mov
test
mulb
push
call
aad
aam
sub
mov
pop
push
cmp
idivb
scas
int3
sbb
fists
roll
les
inc
and
add
lcall
sbb
pop
mov
iret
imul
lods
jge
cs
jb
dec
cmp
inc
addl
and
imul
fstps
das
pop
pop
shlb
les
jp
and
push
cwtl
cmp
mov
dec
ficomps
test
cmp
or
cld
sarl
addr16
xchg
mov
cpuid
sarb
enter
pop
pop
jecxz
das
adc
shrb
mov
lds
fnsave
lods
lahf
ds
cmp
push
mov
loope
add
shrl
repz
into
mov
xlat
jno
cli
mov
mov
insb
test
loop,pt
call
lahf
hlt
icebp
lcall
xor
ljmp
ret
push
lds
jo
testl
xchg
jnp
push
popa
adc
sub
add
cmp
pop
mov
xlat
cmp
mov
sbb
push
arpl
mov
testl
and
jge
cmp
cmp
mov
mov
out
imull
cmp
mov
push
mov
aas
in
pop
mov
mov
imul
add
dec
adc
scas
mov
and
clc
in
repz
mov
push
mov
xchg
lea
adc
lea
sbb
xchg
sub
xchg
out
clc
inc
mov
pop
jnp
dec
outsb
add
jge
mov
rolb
loop
sub
push
sbb
outsb
imul
push
aam
push
mov
jg
jo
jg
addl
cmp
lea
jne
sub
and
push
mov
xchg
leave
into
movsl
ret
out
fsubp
lods
je
ret
push
daa
jl
shll
add
call
imul
cmpsl
cmpl
pop
adc
jb
xor
mov
fsub
es
bound
fildll
loope
cmp
jne
jbe
scas
into
cmpsb
sbb
scas
dec
mov
pop
add
cmp
test
mov
repz
jb
popf
aad
aad
push
sbb
pop
adc
xchg
cmp
inc
mov
xchg
cmp
cltd
fs
sbb
shll
clc
xchg
fwait
adc
insb
loopne
jno
mov
cwtl
int
mov
mov
fwait
lds
dec
stc
pop
mov
sbb
cltd
stos
fsub
rol
mov
sbb
sahf
jecxz
addr16
subl
leave
inc
cltd
adc
sbb
mov
cwtl
daa
fldt
in
les
fucom
test
addl
xchg
xor
es
inc
or
nop
int3
lret
push
adc
adc
lret
fiaddl
mov
jb
fldcw
pop
or
mov
addr16
cmp
in
out
call
inc
add
aas
push
aaa
sub
cltd
aaa
stos
or
enter
int3
xlat
out
mov
lret
xlat
adc
push
push
mov
js
mov
push
push
ret
jmp
pop
ja
add
pop
fwait
test
das
dec
add
jns
or
xchg
dec
dec
test
jno
into
mov
cmp
js
popa
and
xor
ss
dec
insb
pop
mulb
aaa
dec
test
orl
xor
jp
xor
jo
fldt
fidivrl
adc
call
or
leave
add
aad
lret
data16
add
sbb
mov
js
sub
and
sub
fnsave
cmpsb
jmp
into
in
push
mov
jo
xchg
push
sbb
leave
sub
sub
push
pop
jns
or
divb
jbe
mov
ficoms
clc
mov
cmp
sub
jmp
and
pusha
jne
push
int
cs
es
jns
mov
dec
lcall
push
xlat
js
mov
and
cmp
mov
test
mov
push
jae
adc
cld
popa
aas
in
ficompl
outsb
jo
test
mov
ret
je
fdivr
insl
popa
jb
xor
mov
push
int
mov
mov
bound
push
arpl
je
loope
or
or
es
lods
lret
sub
test
adc
jl
sub
int
popf
mov
scas
clc
mov
outsl
adc
imul
dec
jns
test
push
sub
and
cli
inc
adc
cld
and
xchg
fdivl
pop
dec
movsb
imul
mov
mov
fcoml
pop
sbbb
imul
mov
jns
out
sub
repnz
push
stc
xor
shl
in
jl
iret
xchg
cltd
jns
mov
rcr
clc
mov
aam
cwtl
and
cmpsb
mov
loopne
and
data16
cmpl
jg
scas
stos
push
mov
pop
sub
jne
test
xchg
jecxz
fwait
sub
pushl
mov
jns
sbb
cmp
dec
xor
mov
add
out
jno
aam
lods
es
pop
shl
sub
or
insb
ljmp
mov
or
fstpt
addb
mov
loop
shll
cmp
mov
and
shr
push
and
test
jo
push
jmp
mov
cs
xlat
xor
rcll
xchg
shrl
adc
arpl
fsubr
jnp
out
sbb
mov
lret
adc
popa
adc
js
push
push
pop
push
mov
fbld
push
addl
mov
push
stos
mov
out
lds
daa
in
add
out
ja
in
mov
mov
add
inc
cmp
fwait
cld
mov
inc
decl
and
cs
arpl
dec
stos
mov
cmc
xchg
out
cli
cld
aas
ja
das
adc
push
lods
mov
xor
and
xchg
int3
mov
lret
clc
lock
jne
loop
iret
loopne
bound
fwait
ljmp
xchg
dec
lahf
pusha
pop
and
sbb
jecxz
push
out
jle
stos
inc
ret
adc
psubsb
addr16
test
fs
push
xchg
sub
and
insb
std
lret
adc
dec
add
cwtl
jecxz
inc
jo
call
sahf
ja
jo
sub
bound
mov
jge
adc
and
aaa
mov
aas
dec
test
xor
incl
and
movsb
hlt
xchg
mov
xlat
pop
dec
xchg
xchg
and
mov
adc
jg
cmovl
mov
jnp
xor
inc
mov
dec
ret
mov
nop
pop
and
fistps
mov
dec
inc
adc
jge
inc
popf
pop
xchg
outsb
test
mov
adc
scas
xor
clc
mulb
jae
test
jmp
add
lret
fldenv
push
fistpl
popa
inc
daa
sub
mov
ret
jmp
outsb
jno
gs
arpl
mov
shr
les
inc
jo
es
cmpsl
and
inc
jp
cmpsb
iret
dec
mov
jmp
scas
call
xchg
jle
rolb
cmpsb
lods
nop
aam
cli
repnz
js
in
cmc
in
out
fs
in
outsl
mov
pusha
shl
sbb
sub
pushf
insb
inc
mov
add
rcll
mov
fxch
xlat
leave
popa
adc
jae
test
pop
hlt
cld
jmp
leave
and
jg
inc
insl
adc
leave
and
or
mov
or
pop
fldcw
mov
loope
loopne
dec
dec
into
push
out
fidivl
ja
pop
pop
mov
out
mov
inc
popf
stos
dec
lea
imul
dec
xchg
jg
pop
mov
adc
fmulp
sbb
ret
mov
outsb
je
add
push
addb
movb
dec
push
xchg
dec
in
call
pop
orb
testb
out
addl
leave
dec
mov
stos
and
out
std
lods
sub
outsl
jbe
mov
jbe
mov
in
mov
cwtl
pop
ja
or
cmpsl
nop
sbb
and
push
cmp
loope
ffreep
mov
lea
push
mov
and
sub
mov
mov
test
flds
cwtl
jle
outsl
push
xchg
fxch
mov
cwtl
xor
jo
sbb
push
mov
orl
xor
mov
jae
out
adc
add
xchg
push
shrb
jne
xchg
xchg
lods
inc
dec
lret
mov
les
fistpl
rcl
and
in
popf
mov
mov
out
jmp
aam
add
loopne
popf
in
push
and
xchg
push
test
sar
sbb
rcrb
dec
cs
cmpsl
addl
ficompl
cmp
pop
sbb
fnsave
lret
xchg
push
sbb
lea
mov
jae
cmp
icebp
and
xlat
lods
cwtl
mov
and
cwtl
cmp
mov
icebp
in
mov
gs
sub
add
jecxz
ret
in
jle
mov
jns
and
test
sbbl
hlt
mov
shl
jg
fdivp
cwtl
and
cmpsb
sub
out
fucompp
repz
aas
ficompl
or
xchg
inc
adc
sbb
sarl
sbb
xchg
lods
xor
pop
aaa
push
popa
xor
cltd
add
cmp
push
dec
jae
je
js
inc
stos
push
pop
stos
xchg
test
int
pop
or
lds
dec
mov
jno
cmc
es
mov
jne
jb
push
jmp
das
and
test
push
imul
int3
loope
and
bound
cli
mov
faddl
jecxz
sub
outsb
cs
jbe
pop
jge
mov
sbb
or
pop
jge
jg
jecxz
test
shlb
cmp
add
popa
sarl
negb
inc
add
jb
xchg
sub
test
sbb
popa
sbb
mov
pop
js
aas
js
stos
xchg
push
jbe
movsb
mov
add
cmp
push
jnp
aas
pusha
cli
mov
inc
imul
les
sbb
cmp
xor
cli
sub
mov
std
push
into
sub
dec
ljmp
inc
lea
clc
jno
ja
adc
push
cmpsb
bound
cmp
and
mov
sub
insl
add
daa
sub
sbb
sub
ret
dec
jae
ds
mov
mov
lds
lret
in
fiaddl
subb
xor
and
dec
sahf
imul
js
ljmp
jnp
dec
inc
pop
jno
xchg
add
ret
dec
mov
pop
mov
push
sub
sbb
into
xchg
cmc
dec
imull
and
jge
lea
adc
cli
shl
jnp
test
adc
inc
cmp
push
xchg
push
in
rorl
mov
xchg
push
out
sbb
je
mov
jno
fwait
adc
inc
mov
sub
pushf
pop
push
mov
cmp
adc
cmpsb
stos
xor
jno
sbb
xor
inc
sub
sub
insb
push
outsl
push
xor
jo
sbb
mov
loope
imul
ss
mov
xlat
out
push
icebp
sub
push
push
repnz
mov
mov
inc
xor
push
push
adc
sbb
mov
sbb
shl
xchg
push
out
or
pushl
test
cmpb
cmc
adc
or
pop
jb
arpl
int3
ret
cmc
jl
xor
fsubr
mov
mov
rcrl
lock
add
sbb
mov
xchg
leave
xchg
pop
adc
enter
insl
pushf
sub
xor
cmp
dec
mov
nop
or
sub
pop
add
cmpsb
push
addr16
stos
lret
jns
mov
sti
aas
in
mov
icebp
inc
xor
daa
mov
movsb
dec
loop
fcmovnb
out
insl
incl
and
lcall
cwtl
mov
loop
pusha
cli
jle
push
leave
xchg
std
int
xchg
or
icebp
fwait
mov
imul
and
movsb
sub
or
jbe
roll
mov
add
fdivl
adc
mov
cmp
push
in
and
pop
mov
xchg
and
or
cmpsl
and
cmc
es
cmp
std
dec
scas
aam
cmp
sub
repz
subb
stos
bound
pop
sub
inc
into
scas
cwtl
rcrb
push
fildl
mov
xchg
movsl
mov
loopne
js
jg
imul
mov
cwtl
test
call
out
fcompl
popa
mov
fsubrs
jle
les
in
ss
lret
jmp
inc
jg
loop
dec
sub
mov
jmp
jbe
sarb
jl
or
rcrb
push
dec
adc
out
inc
mov
lock
ja
dec
pusha
jp
and
or
add
push
test
and
mov
andb
stc
sub
pop
sbb
inc
pop
in
repnz
push
jne
movsb
imul
mov
fnstcw
call
lock
cmpsl
insl
ret
test
mov
mov
jecxz
sbb
stos
call
mov
test
dec
or
sbb
outsb
lea
repz
ret
out
mov
mov
nop
lcall
cwtl
not
movsl
cli
mov
les
adc
sub
in
loop
out
add
pop
popa
adc
push
movsb
call
jo
xchg
test
repnz
add
repnz
jbe
in
mov
or
xabort
lds
mov
testb
addr16
push
mov
push
dec
dec
cmp
xor
xlat
out
mov
pop
sub
inc
add
scas
adc
pcmpgtw
lcall
stc
dec
iret
cmp
add
lahf
enter
loope
paddsb
mov
mov
and
test
cmp
loope
lods
jne
jg
std
into
mov
mov
and
cmpsb
xlat
sub
and
jno
inc
add
repnz
orl
sbb
negl
arpl
cmpsb
popl
subl
push
mov
cmp
imull
pop
add
lret
ror
jae
call
mov
div
dec
cld
mov
jmp
inc
loope
add
xchg
pop
sub
sbb
push
pusha
sbb
push
push
sbb
cmp
xlat
scas
cmc
mulb
pushf
int3
loope
jo
or
jle
jbe
lock
mov
popf
test
mov
jae
lret
iret
rcrb
addb
xlat
mov
lea
mov
psubb
ss
sub
cmp
aaa
movsl
dec
inc
std
aas
or
cmp
jg
gs
fnsave
lret
push
mov
xor
mov
push
xchg
mov
sbb
xchg
pop
xor
imul
into
js
add
sub
rolb
punpckldq
lock
sub
mov
jbe
inc
xchg
cwtl
mov
test
push
pop
xor
inc
cmp
out
cmp
into
ret
inc
cli
mov
aaa
sbb
fisubl
inc
lcall
jo
bnd
xor
push
arpl
rcll
sbb
jp
inc
das
xor
xor
mov
push
push
fcompl
data16
lock
sub
cmp
cld
stos
ret
pop
lods
ret
mov
push
fidivrl
fidivl
push
data16
xor
neg
jne
push
mov
shl
jb
cli
js
bnd
jp
inc
bound
leave
lahf
dec
push
int3
cmp
adc
nop
insl
int
daa
and
ficompl
inc
clc
in
mov
jge
out
add
jmp
bound
insl
push
ret
inc
hlt
xchg
pushf
insl
stc
out
sbbl
jne
jns
xor
fwait
xor
movsb
rcll
scas
fistpl
addr16
inc
incl
gs
push
dec
aad
inc
jmp
mov
xchg
xchg
add
rorb
lahf
loopne
insl
inc
jb
out
insb
or
sbb
loop
icebp
dec
pop
movsl
ret
pop
mull
cwtl
mov
adc
sub
les
xchg
fsubs
xchg
mov
nop
inc
mov
inc
nop
jbe
sub
and
popf
jnp
daa
leave
test
push
xchg
loop
dec
mov
sbb
shll
jmp
popa
fdivrs
idivb
mov
sqrtps
pcmpeqb
mov
lea
fwait
scas
lock
cmp
sub
icebp
addb
shrb
stc
outsb
mov
shl
movsl
jbe
dec
stos
insb
inc
inc
pop
ja
call
mov
sub
mov
idiv
mov
sarl
jp
out
fbstp
shrl
nop
das
or
push
scas
out
es
mov
pop
dec
push
mov
adc
lods
sbb
fistps
popa
xor
fildl
aaa
cld
jecxz
adc
add
and
mov
jns
jno
sbb
mov
mov
jnp
sub
sbb
inc
outsb
cmp
jmp
jne
les
call
roll
hlt
mov
add
add
dec
loop
push
jg
dec
pop
data16
bound
fsub
jle
int
cli
fisttpl
lock
or
filds
jecxz
aaa
scas
adc
jnp
and
xor
into
lea
popf
loop
push
arpl
xor
xlat
leave
lods
sbb
adc
shr
pop
arpl
jmp
inc
xor
mov
inc
pop
mov
fidivrs
stos
cwtl
push
lahf
jp
and
pop
push
sbb
push
aaa
icebp
test
add
sti
addl
and
push
stc
out
shrb
xchg
dec
or
adc
in
adc
adc
cmp
insb
xchg
cli
pop
pop
cmp
call
jne
mov
loop
sub
lds
leave
and
jno
add
ds
dec
int
push
push
out
cmp
jg
test
mov
pop
sarb
dec
movsl
dec
mov
jo
cmp
push
mov
adc
stc
sbb
and
lahf
jnp
lods
inc
jmp
mov
sbb
imul
or
ss
mov
and
scas
xchg
int3
pop
push
and
jecxz
sbb
push
dec
adc
repnz
cmc
cwtl
inc
mov
xchg
sub
dec
js
loop
adc
movsl
dec
loope
add
inc
out
pop
pop
cmc
lods
shll
enter
mov
add
pushf
mov
in
cmpsl
fnstcw
mov
lahf
push
movsl
mov
dec
xor
push
sub
pop
pushf
stc
or
jg
xor
jae
dec
jo
mov
sub
cmpsl
pusha
push
loop
outsl
dec
rcrb
mov
inc
lret
adc
fisttps
mov
pop
jge
ljmp
mov
cli
mov
les
repz
ret
and
inc
ljmp
mov
push
mov
and
sub
sbb
jge
mov
mov
xor
jmp
push
je
sub
mov
ja
out
xor
xchg
or
sub
movaps
xchg
gs
xor
fs
sti
sbb
data16
dec
add
and
lock
and
cwtl
cmp
ret
lea
aas
mov
adc
mov
mov
nop
jnp
adc
pushf
call
popf
movsb
subl
mov
mov
pop
sbb
pop
add
cmp
fisubrs
sub
popa
mov
cmp
or
lods
sbb
inc
jg
frstor
daa
test
out
pushl
ljmp
push
xchg
and
shl
mov
aam
sti
sub
leave
jns
pop
out
sub
push
sub
cmp
pop
std
iret
inc
inc
cmp
addl
pop
sahf
je
imul
lret
sub
mov
pop
flds
fimull
inc
push
mov
test
mov
lret
dec
lds
fstl
inc
sub
lret
imull
repz
int
inc
jno
fsubr
cmpb
loopne,pn
pop
pop
push
mov
frstor
out
out
int3
lahf
or
rcrb
pop
mov
mov
push
mov
gs
push
mov
addl
pop
mov
xchg
add
inc
xchg
inc
xlat
addr16
iret
mov
push
inc
or
mov
rorb
lds
jle
sarb
cmpsl
cli
or
inc
dec
jo
mov
mov
xchg
mov
ds
push
adc
sub
fdivrs
inc
or
add
addl
xchg
xor
notb
jge
lds
push
fwait
cmp
mov
mov
lods
mov
push
inc
and
jmp
movb
mov
inc
lret
inc
fmull
pop
push
subl
and
xor
cltd
aad
gs
jbe
icebp
xchg
add
test
pop
add
scas
xor
leave
pusha
dec
fwait
scas
inc
leave
cmp
xlat
roll
nop
shl
mov
mov
jg
xor
jns
and
jns
dec
mov
stos
push
dec
rcll
imul
pushf
xor
sub
fstps
orl
dec
mov
push
dec
jns
or
mov
das
leave
xchg
mov
push
and
lock
lds
pop
in
mov
jnp
sub
aam
das
movsl
loop
jmp
jecxz
mov
in
jno
push
test
xor
and
add
cmp
in
jg
iret
xchg
ret
faddl
stos
inc
filds
push
mov
inc
cmp
fistpll
roll
cmp
cwtl
jg
out
adc
sbb
push
scas
add
test
lret
dec
mov
aad
cmp
mov
and
jecxz
jg
lods
rorl
jne
aas
fs
cmc
jl
jno
js
mov
fcomps
jb
out
cs
mov
ljmp
mov
mov
cmpsb
adc
jns
mov
jge
adc
push
inc
sub
test
mov
cmc
mov
sub
mov
pop
or
xchg
popa
ds
jp
pop
sub
loopne
jmp
cmp
inc
ss
inc
sbb
pushf
jns
cmp
lods
xchg
popf
or
mov
pusha
sub
fisubrs
cmp
xor
call
leave
js
and
test
aad
stos
aad
int
and
stos
cld
push
push
jns
mov
cmc
jae
inc
xor
jmp
and
fisttpll
test
fs
rorl
cmp
scas
adcl
sbb
mov
mov
xor
stos
adc
js
punpcklwd
pop
jg
dec
hlt
rorl
out
test
add
adc
pop
lret
rolb
mov
xchg
add
clc
clc
pop
pop
pushf
and
lea
add
sti
add
js
sbb
lcall
in
shr
je
popa
sbb
roll
push
fcmovu
iret
adc
andl
mov
lock
adc
in
outsl
xor
dec
and
dec
cmp
rclb
lret
xchg
sub
mov
popf
dec
add
add
xchg
mov
xchg
mov
mov
inc
xchg
incb
dec
and
jl
ficompl
xor
movsl
and
push
fistps
fidivl
rolb
ljmp
mov
cmp
add
cmp
xchg
jecxz
inc
stos
xchg
push
push
fwait
or
call
fwait
addb
dec
fcmovnu
fsubs
push
leave
mov
jnp
call
fisubs
mov
cmp
out
shlb
lock
ss
mov
adcb
sbb
xchg
push
ljmp
xchg
jae
pop
dec
mov
lods
jp
enter
pop
pop
pushf
cld
adc
pop
push
cmc
divb
fwait
sub
mov
fwait
pop
cwtl
arpl
iret
out
js
cmp
call
aaa
xor
addr16
jo
in
pop
leave
or
mov
es
fnop
divl
cmp
pop
adc
inc
pop
lods
jge
mov
push
and
cltd
mov
subl
xchg
jecxz
sbb
or
cld
clc
push
sahf
jbe
sbb
xor
stc
jns
mov
lds
into
mov
jo
inc
xchg
jge
or
mov
stc
or
cld
add
lock
stc
nop
xchg
and
call
xor
sbb
cli
int3
xchg
je
out
jmp
out
inc
aad
fcoml
sti
sub
mov
jp
pushf
mov
adc
push
cmp
scas
dec
mov
psrad
stos
jno
push
fsubrs
add
loopne
push
mov
fnstenv
jne
cld
rorl
out
mov
adc
das
add
test
shl
fmul
inc
stc
mov
fisubrl
mov
push
clc
fcompl
jb
stos
pop
inc
jns
fnstcw
fldcw
loopne
paddusw
fnstsw
mov
fsubrl
lcall
inc
mov
in
mov
dec
lahf
sbb
ljmp
or
dec
xchg
sbb
xchg
sahf
repz
dec
xor
inc
jb
out
fwait
pop
xchg
inc
mov
adc
xor
ja
imul
jl
mov
das
insl
outsb
popf
inc
daa
xbegin
test
mov
outsl
inc
adc
stc
xor
adc
outsl
mov
or
out
push
clc
mov
xchg
repnz
push
jo
stc
or
out
jns
xchg
ss
mov
pop
cmp
dec
mov
sbb
adc
ret
stos
loope
inc
mov
pop
in
adc
les
insb
push
iret
inc
sbb
mov
mov
stos
mov
ror
or
xchg
add
mov
push
aad
jno
aad
test
add
fs
add
sbb
sbb
mov
out
fisttpl
xchg
mov
xchg
xchg
fisttps
add
adc
lea
pop
sbb
mov
mov
xor
cmp
cmp
clc
xor
pop
shll
stos
sbb
lods
test
leave
arpl
sarl
dec
add
adc
jne
xor
mov
in
pop
pop
jle
cli
ljmp
popa
mov
stc
and
inc
dec
jb
inc
cli
sti
shlb
jmp
dec
or
mov
sbb
dec
sub
les
vcvtsi2sdl
cmp
adc
jns
cmp
scas
mov
push
inc
imul
sbb
push
lods
adc
cwtl
mov
jbe
bound
add
data16
stc
mov
push
fst
xchg
inc
mov
push
icebp
js
in
or
or
bound
fnstenv
divb
loop
pop
test
sbb
leave
call
jmp
or
mov
outsl
fcoml
out
adc
push
push
push
addr16
hlt
in
add
xchg
fldcw
sbb
pop
cmpsl
mov
sbb
pop
pop
mov
or
adc
mov
dec
and
mul
ret
in
sarl
mov
cmpsl
pop
daa
inc
push
and
fs
ds
rclb
test
xor
jl
div
test
pop
jnp
dec
outsl
xor
imul
mov
jecxz
call
iret
aaa
inc
dec
mov
into
mov
inc
mov
int3
mov
add
xchg
nop
push
inc
testl
jecxz
dec
mov
sti
clc
or
push
pop
xchg
imul
jge
sbb
and
cld
arpl
xor
sbbl
cmpsb
adc
mov
mov
dec
mov
clc
jnp
clc
dec
or
mov
sub
dec
sub
mov
ja
mov
mov
imul
dec
or
mov
sbb
push
sbb
and
xchg
pop
jns
cli
aas
or
jne
cmp
mov
and
xor
cmp
mov
mov
and
ret
pop
cmp
jnp
cmp
xor
call
fistps
cmp
xlat
push
adc
xor
clc
mov
fists
sub
sbb
mov
xchg
enter
aaa
imul
mov
imul
mov
mov
int3
sbb
jl
xlat
ret
or
pop
in
cmp
jmp
or
xchg
push
jl
icebp
mov
jge
sub
loopne
push
rcll
xchg
adc
outsl
inc
pop
fildl
jle
add
mov
ss
xor
adc
cmp
dec
sbb
jae
sub
scas
fadds
cmp
jb
leave
test
mov
pop
jne,pt
mov
movsb
inc
push
and
mov
ffreep
jno
mov
xchg
stos
jno
cltd
add
repz
outsb
push
testb
add
jno
loope
push
adc
fs
adc
test
lret
in
fldenv
push
out
jb
dec
addr16
loope
jg
addr16
in
or
lods
pop
mov
int3
jl
xor
stos
rclb
in
loopne
dec
adc
jbe
fdivp
out
mov
cmp
loopne
pop
ret
xor
or
pusha
mov
aad
das
les
mov
add
dec
inc
jnp
and
mov
push
adc
insl
aam
inc
mov
fsubp
xchg
outsl
jnp
es
fcmovnbe
adc
in
nop
mov
cmp
sahf
dec
xor
xchg
lahf
pop
scas
add
inc
cmp
mov
xorl
inc
add
jae
popl
std
loope
cmp
mov
cld
sahf
repnz
out
jb
testb
addl
and
ja
sbb
repnz
pop
outsb
es
test
jnp
out
mov
fcoml
cmp
jb
lods
xor
ret
imul
mov
push
xchg
int3
jmp
push
repnz
popf
in
scas
fistpll
xchg
ss
scas
or
ret
test
in
insl
add
push
pop
retw
xor
mov
cltd
or
cmpsl
cltd
cmp
test
hlt
mov
mov
gs
mov
xchg
and
mov
aam
sti
sbb
ljmp
hlt
dec
mov
dec
std
jne
iret
call
nop
xor
adc
mov
bound
and
mov
sahf
fbstp
fisubrs
or
in
mov
jne
xlat
sbb
rcrl
mov
mov
fistps
aas
fstl
jp
pop
std
popa
dec
mov
mov
mov
pushf
and
jns
dec
lret
cmp
pop
cs
out
mov
fidivl
lahf
dec
loope,pn
push
pop
lahf
test
test
cmp
minps
adc
cmp
or
cmc
daa
mov
loop
inc
pop
xor
out
fstl
dec
and
es
test
lock
roll
lahf
ss
add
mov
sbbb
sbb
out
mov
mov
popf
nop
add
js
test
adc
push
or
movsl
mov
data16
sarl
xor
ds
dec
push
inc
clc
imul
xchg
xor
out
mov
jle
je
mov
adc
into
mov
sbb
fsubl
add
xor
xor
or
test
xchg
les
cltd
sub
pop
pop
ss
cmp
imul
imul
int
or
fisttps
mov
fdivr
xchg
inc
js
pop
jae
dec
mov
ljmp
loopne
rcr
adc
insb
dec
xor
xlat
pop
jb
cmpsl
pushf
xor
xchg
mov
outsl
jp
pushf
and
jecxz
stos
mov
and
push
mov
inc
sub
aas
sahf
inc
sbb
mov
pop
loope
sahf
or
xchg
addr16
outsl
decl
mov
out
decl
fbld
xchg
test
inc
pusha
fiaddl
test
xchg
ljmp
mov
insb
jmp
daa
push
push
push
cmp
ds
fistps
lret
dec
mov
stc
fcmovnu
sbb
repz
xchg
loop
and
jae
lret
int3
stos
jl
aaa
push
push
fcomps
mov
les
cwtl
dec
dec
lock
pop
sbb
mov
fidivl
bound
cwtl
movsl
imul
xor
push
jo
cmpsl
add
jge
pop
push
mov
xor
dec
fxam
jbe
cmpsb
mov
push
loope
mov
sub
pop
loopne
or
or
cs
test
fimuls
cltd
jb
mov
push
ljmp
lea
dec
ret
ror
sub
or
lea
xor
fidivs
nop
adc
jnp
mov
in
lret
movsl
outsb
outsb
mov
jp
movsbl
xchg
data16
push
cld
movsl
sub
jl
cmpsl
shll
xchg
pop
jmp
js
pop
jb
pop
cmc
aam
cmp
mov
cmpsl
add
mov
dec
sbb
and
dec
sub
in
adc
cmp
push
adc
sbb
dec
pushf
or
pop
xor
xlat
cmp
pop
fsubrp
cs
hlt
out
or
xor
sub
pop
dec
mov
scas
xorl
or
jle
adc
pop
jmp
stos
inc
xchg
bswap
dec
xor
xchg
ror
sbb
push
es
dec
repz
add
cmpl
pusha
sbb
push
mov
cmp
rclb
imul
xchg
ss
push
jmp
sbb
jg
ror
dec
bound
or
fidivrs
fiadds
mov
mov
xchg
mov
call
sbb
mov
in
pop
jp
insl
fstl
insb
push
mov
push
mov
repnz
mulb
jns
iret
repz
es
lret
xor
pop
push
push
mov
pop
sub
lret
pop
pop
lods
sahf
jge
in
inc
mov
fisubl
cmpl
mov
call
jmp
roll
popa
pushf
aaa
adc
xchg
adcb
push
js
xor
xchg
and
cmpsl
cmp
adc
nop
cmp
or
loopne
sbb
imul
and
loope
jnp
pushf
std
leave
xor
int3
jge
insl
roll
enter
repz
std
or
in
xchg
movsl
or
add
bound
clc
psubusw
fptan
imul
cmp
mov
pop
jg
les
pop
cltd
xor
inc
fcomps
mov
mov
dec
dec
jns
cmovl
cmp
inc
enter
js
leave
ficompl
xchg
inc
pop
mov
jbe
andl
or
dec
into
xchg
test
fdivrp
push
mov
jo
mov
shrb
or
lcall
outsb
jb
enter
adc
add
ja
int
shll
sbb
push
pop
pop
fcomp
daa
mov
sbb
mov
mov
ljmp
fs
add
leave
stos
jecxz
xlat
add
mov
negb
push
inc
sub
mov
imul
clc
sti
push
in
subb
push
pop
add
test
sub
fwait
sbb
jnp
push
adc
hlt
scas
and
fs
popa
lods
sub
push
imul
and
fnstenv
mov
lea
adc
fwait
sbb
push
add
cmp
mov
lods
add
pushf
insb
pop
xchg
insb
sub
call
fcomps
andl
add
out
adc
mov
add
mov
or
push
mov
dec
cmp
je
pop
cmpsb
cltd
push
jo
in
nop
dec
lcall
xchg
and
xchg
test
gs
sahf
testl
loop
cmp
mov
stos
testl
enter
outsl
movsl
mov
mov
sbb
or
push
mov
shlb
xchg
xchg
shll
xchg
sar
test
jecxz
aaa
sti
push
jno
daa
scas
mov
ret
shrl
push
aaa
jl
dec
cmp
dec
push
mov
leave
xor
push
popf
pushf
xor
push
adc
mov
cmp
imul
xchg
push
jno
popf
xchg
mov
adc
push
mov
xchg
inc
cltd
sub
and
ja
push
cwtl
dec
out
pop
add
jo
mov
hlt
sub
jno
adc
addr16
jb
aam
js
cmp
mov
shll
mov
sbb
scas
outsb
xor
sub
fistpll
xchg
pop
bound
cmp
icebp
lock
cmp
inc
sbb
jp
je
lcall
cmp
lds
fsubr
incl
xchg
imul
jmp
cld
or
pop
loope
push
scas
bound
repz
adc
out
cld
and
jl
inc
ret
scas
in
push
mov
enter
sub
testl
mov
inc
xor
sbbb
dec
lcall
scas
int
in
sbbb
addr16
out
stc
add
hlt
popf
or
cmp
loopne
xor
or
mov
xor
adc
aaa
xor
out
call
mov
xor
test
push
xor
push
out
jmp
sub
ja
lret
cmp
mov
jecxz
insb
sub
xchg
scas
lods
sbb
adc
insl
in
inc
push
call
adc
push
cwtl
pop
jnp
sub
les
fwait
mov
jb
push
xchg
fcomi
cwtl
dec
inc
ffreep
xchg
add
mov
push
mov
inc
sbb
jg
pop
mov
jp
arpl
jmp
sbb
incl
out
aas
jae
xchg
rcr
jl
mov
fiadds
test
jecxz
sti
inc
mov
and
lahf
dec
stos
lret
rcll
cmpsb
fildl
je
pop
xor
push
pushl
xchg
hlt
dec
repz
push
xchg
popa
sbb
mov
out
pop
loopne
pop
jl
inc
and
addr16
lcall
out
dec
mov
test
ffreep
pop
neg
loopne
push
mov
and
and
clc
push
icebp
loop
popa
add
add
xchg
inc
pop
mov
push
cmp
lahf
mov
dec
mov
xor
mov
jle
sbb
pushl
xchg
push
jo
int
pop
inc
mov
rolb
jg
adc
lods
or
repnz
sahf
add
pop
fwait
fwait
mov
jne
lds
adc
rorb
mov
js
inc
cmp
mov
sbb
insl
and
xchg
inc
mov
mov
popa
pop
arpl
jns
testb
sub
icebp
jno
sbb
hlt
les
mov
sbb
cmp
stc
push
jl
cld
pop
fwait
mov
mov
fwait
cmp
fnstenv
sbb
lea
mov
in
mov
sahf
sbb
dec
mov
cli
stos
daa
xor
ljmp
add
pop
add
mov
cmp
dec
aam
xchg
andb
xor
push
pop
adc
or
imul
repnz
sbbb
out
outsl
push
cmp
mov
iret
aam
mov
xchg
adc
mov
loop
fsubrl
int
cmp
mov
add
movsb
mov
xchg
dec
dec
sbb
mov
push
or
add
cmpsb
xor
dec
cmp
repz
aaa
mov
aas
xchg
arpl
mov
popf
dec
sbb
mov
add
jnp
fcompl
je
insl
pusha
cli
push
add
jno
int3
test
stos
mov
scas
roll
mov
jg
mov
xchg
std
mov
jne
test
fucom
mov
push
int3
mov
les
mov
mov
add
jo
and
lret
mov
sub
sbb
test
xor
xorl
and
fildll
push
push
mov
iret
adc
mov
insl
addl
push
jne
outsl
cltd
add
js
sub
mov
fdiv
fdivrs
int3
jns
xchg
xor
in
jb
mov
mov
adc
pop
push
adc
or
mov
arpl
mov
cmpl
mov
sub
sbb
cmp
and
mov
mov
call
xor
testl
jmp
xchg
icebp
push
ret
inc
js
or
in
xchg
ror
cs
testl
lds
cltd
arpl
pop
iret
fwait
push
sbb
add
pmulhuw
jmp
test
fiaddl
dec
je
test
sub
xchg
ljmp
inc
orl
adc
shlb
xchg
sub
daa
movsl
sbb
pop
mov
iret
mov
repz
test
ja
sub
jae
mov
xchg
cld
inc
jne
sti
or
bound
xor
mov
inc
aas
mov
mov
imul
adc
xchg
cmp
fstl
fldcw
inc
cwtl
frstor
or
leave
dec
inc
push
mov
jmp
mov
in
xchg
mov
in
out
cld
pop
push
rorl
xchg
in
jb
es
sub
stos
sbb
shrb
imul
mov
sbb
xor
fs
add
jno
jbe
jle
loope
adc
sbb
and
adc
xor
fwait
clc
dec
mov
inc
xor
xor
adcb
jmp
cmp
std
mov
out
cmp
fdivrs
stos
out
mov
leave
movsl
xchg
and
cmp
loopne
sbb
and
cld
pop
sbb
arpl
shlb
inc
sbb
lahf
shrb
mov
or
dec
dec
fsubs
enter
lods
mov
mov
in
out
pop
addb
scas
and
testl
dec
stos
jnp
pop
cmp
fs
sub
loope,pt
xor
xor
or
add
ja,pt
mov
xchg
iret
cmp
sbb
adc
adc
mov
or
ror
flds
ja
pop
add
xor
das
out
stos
cmpsb
test
neg
or
hlt
daa
and
call
add
filds
xor
push
dec
add
fsubs
or
pop
sahf
stc
inc
jb
sub
lea
aaa
fistpll
test
mov
mov
jl
lret
pop
aam
mov
jecxz
sub
insl
daa
mov
lahf
dec
test
aam
cwtl
and
push
gs
or
mov
out
dec
insb
call
ret
ljmp
mov
mov
or
mov
xchg
inc
fs
mov
and
mov
add
cmpl
repnz
hlt
cltd
cmc
loop
mov
addr16
popa
imul
push
push
fbld
call
ja
push
pop
sub
repz
push
loope
mov
js
scas
mov
aad
int
in
lock
call
stos
mov
xlat
pop
sarl
imul
outsl
addr16
inc
int3
or
sbb
jge
leave
mov
xchg
jns
xchg
cmp
jns
dec
jne
fiadds
mov
rep
clc
bound
inc
pop
sbb
and
bound
sbb
mov
mov
fwait
or
dec
cld
sub
mov
aad
in
mov
mov
nop
mov
mov
mov
dec
icebp
pop
xor
xchg
sahf
sbb
and
test
jmp
dec
dec
test
pop
arpl
into
and
movl
jnp
xlat
or
xchg
xor
xchg
and
dec
sub
es
into
pop
push
mov
inc
int3
or
push
push
jmp
mov
cmp
sti
jp
je
movsl
lea
idivl
mov
inc
lret
fwait
repz
mov
shll
adc
fbld
cwtl
dec
dec
mov
popa
adc
scas
inc
pop
aad
rclb
jle,pt
jle
sbb
cli
pop
xor
pop
cltd
popa
push
add
push
mov
mov
lock
out
clc
loope
jno
jnp
dec
pop
inc
mov
dec
inc
push
sti
mov
es
stos
loop
insl
xor
jo
push
jae
outsl
push
incb
push
das
xor
cli
in
mov
mov
repnz
js
popf
pop
dec
mov
out
mov
repz
fldl
pop
push
adc
lret
inc
inc
add
pop
dec
sbb
dec
test
mov
aaa
xchg
jg
pop
xor
push
stos
dec
mov
mov
xlat
push
hlt
stc
ficomps
rclb
xor
push
add
and
and
sarl
aaa
lea
xchg
mov
out
push
jp
xchg
dec
inc
pop
fs
xchg
inc
sub
mov
es
call
aad
stc
fsts
cld
loope
mov
push
mov
lret
xchg
dec
push
scas
sub
dec
mov
adc
mov
arpl
jge
js
inc
pop
mov
add
pop
mov
adc
aam
pushf
lods
ret
rclb
in
and
in
xor
sub
xchg
inc
dec
mov
mov
add
cmc
lock
in
xchg
mov
rcrl
rol
fists
icebp
mov
xor
std
enter
aas
sbb
jb
add
cmp
sub
and
inc
mov
iret
jno
xchg
xor
lret
push
add
lret
mov
sbb
mov
ret
imul
ficompl
sbb
inc
jecxz
ja
add
inc
jo
popa
ljmp
xchg
dec
pushf
clc
pushf
xchg
inc
push
pop
rorb
jns
push
adc
or
push
mov
fcompl
mov
or
and
lods
dec
and
mov
popf
inc
add
jns
mov
push
insl
mov
push
xor
push
adcl
repnz
shrl
lahf
mov
mov
adc
in
dec
fimull
movsb
dec
dec
int
out
jmp
xor
fistpll
repnz
stos
mov
inc
mov
xchg
in
or
adc
out
push
mov
loopne
rorb
push
pop
test
mov
cwtl
inc
scas
ds
jmp
pop
pop
pushf
pop
jmp
popl
push
and
mov
jae
movsl
ret
mov
or
fs
icebp
in
mov
icebp
or
dec
xchg
ss
and
xor
sub
pop
or
xor
xor
xorb
int
and
fidivl
popf
push
clc
sbb
loope
clc
inc
vpshufhw
loopne
mov
fistpl
sub
ds
or
pop
xchg
xor
imul
lcall
add
xchg
mov
dec
paddb
repnz
and
push
add
loopne
cmp
int
dec
inc
or
inc
adc
inc
mov
les
inc
movsb
and
cmpsl
sub
pop
jp
lock
ret
xor
dec
add
mov
test
bound
es
inc
add
adc
mov
fnstcw
mov
and
mov
pop
lahf
sub
ja
in
pushf
push
scas
and
add
mov
enter
jno
mov
stc
push
test
cwtl
cltd
nop
xchg
adc
sub
push
mull
iret
aad
mov
js
and
psadbw
je
or
jp
mov
mov
leave
insb
leave
mov
jae
aas
mov
mov
daa
gs
loopne
jmp
add
cmp
outsl
gs
lret
xchg
hlt
mov
pop
mov
cmp
cs
in
sbb
add
add
sbb
push
and
fmul
xchg
jmp
repnz
sti
mov
popa
cmp
int3
popw
arpl
addr16
loop
lahf
aam
in
cmp
filds
pop
cltd
xchg
push
dec
inc
les
in
mov
arpl
movsl
in
or
push
xchg
push
cwtl
cld
hlt
jns
loope
icebp
xchg
iret
sub
jp
jg
int
lds
mov
jl
sbb
jg
sbb
cs
sub
das
inc
and
shll
mov
and
stc
xlat
popa
pusha
push
andb
test
stos
jnp
jb
shl
adc
stc
cli
ds
lahf
mov
mov
sbb
lods
and
pop
pusha
sub
pop
popf
mov
sbb
sbb
mov
loop
out
push
call
add
test
fidivrl
js
sub
lret
sbb
sbb
faddl
jl
into
mov
sbb
fmull
stos
sbb
rorb
mov
mov
dec
and
mov
aaa
mov
sbb
lret
add
nop
nop
lea
sub
pop
xchg
mov
push
loop
fisubrs
out
sbb
sub
pop
xchg
jecxz
dec
xor
xor
mov
enter
cltd
push
cld
cmpsb
or
dec
fstps
ss
fimull
jmp
add
push
out
adc
sbb
mov
pusha
scas
inc
or
leave
jb
movsl
or
enter
int3
fwait
cmp
cld
scas
loop
sahf
mov
push
cmpsb
sbb
shll
out
hlt
pop
insb
mov
ss
pop
push
mov
push
pusha
mov
leave
je
xor
mov
je
dec
add
sti
jp
inc
push
pop
into
push
jmp
and
clc
icebp
decl
xor
pop
cmp
loop
clc
push
jle
push
sub
or
addr16
mov
stc
scas
push
jmp
pop
push
fmulp
mov
outsl
test
mov
jbe
and
test
or
xchg
mov
mov
inc
xchg
fst
xor
mov
jecxz
jne
mov
mov
sub
push
fidivrs
jp
or
test
xchg
in
xchg
repnz
xor
pop
lds
cld
ja
dec
xor
dec
loopw
nop
cmpsl
loop
jmp
addr16
cwtl
mov
js
pop
cmpsl
jb
js
imul
cld
pop
xor
cmpsb
repz
loop,pt
gs
add
lds
fimull
jg
pop
xor
cs
loop
or
test
aam
jo
pop
scas
sbb
pop
aad
shll
pop
sbb
and
inc
mov
jno
lea
cmp
call
icebp
xlat
mov
lock
push
dec
mov
cmp
in
imul
mov
ljmp
imul
dec
sub
dec
jg
dec
cmp
lods
in
xor
lock
aas
les
mov
cmpb
mov
push
testl
mov
movsb
sub
mov
sbb
std
pushf
add
inc
dec
js
repz
bound
pop
pop
adc
jle
push
sub
rolb
addr16
int3
sub
les
and
and
pop
mov
out
lods
bound
fwait
test
lea
sub
int
arpl
daa
call
dec
fs
mov
inc
les
sbb
fiaddl
bound
mov
js
repz
mov
pop
ljmp
test
xlat
dec
jmp
aad
out
out
sub
sbb
jg
xor
out
jp
enter
cs
inc
jb
lcall
cmpsb
test
xor
mov
mov
in
imul
cmp
cmpsl
jle
jge
outsl
mov
jle
pop
sbb
push
scas
lret
cmpsl
xor
xchg
push
daa
push
orl
dec
cmpsb
data16
mov
xchg
cwtl
cmp
pop
daa
mov
stos
das
cs
lcall
lea
dec
cli
mov
in
xchg
and
mov
pusha
mov
sub
sub
xor
cmp
in
xor
sub
push
sbb
push
addr16
push
das
push
into
mov
xor
and
sub
mov
mov
inc
std
shlb
and
jb
push
bound
pop
inc
leave
outsl
jecxz
sub
pop
lods
pop
ret
and
ret
aad
xchg
add
lea
xor
fsubrs
les
inc
add
mov
xchg
mov
lahf
ret
test
insb
mov
in
jecxz
push
sub
mov
mov
push
addl
mov
lea
jbe
adc
mov
bound
lods
push
ja
lret
inc
push
mov
les
js
mov
mov
lret
ss
mov
ret
gs
rol
push
or
adc
je
or
push
test
mov
xor
mov
fldl
jg
es
push
mov
xchg
inc
and
test
notb
gs
or
mov
int
push
ficompl
pop
push
sbb
xlat
mov
movsb
xchg
ss
out
cmp
xor
push
push
call
out
movsl
xorb
cmpsb
cwtl
fiadds
cmc
pushf
ss
xchg
sub
cmp
xchg
fisubrs
sub
sbb
sbb
insb
icebp
mov
jg
jmp
inc
sahf
imulb
lahf
fcomi
pop
rorb
xchg
push
imul
jge
nop
sub
ja
mov
pop
mov
ds
or
testl
pop
xchg
cli
ret
hlt
clc
pusha
pusha
pop
out
aad
lret
out
lock
push
ds
gs
sub
pusha
xchg
dec
mov
stos
enter
cmp
popa
enter
or
cs
or
cmc
add
test
mov
push
clc
jne
inc
fistpll
xchg
push
sub
jecxz
call
jg
fadds
jge
shl
rcrl
push
test
jns
cmpb
ret
imul
cltd
sub
sub
sub
gs
ja
sbb
out
daa
sbb
sbb
xchg
test
cli
mov
addr16
push
xlat
xchg
insl
mov
jp
mov
sbb
mov
mov
lahf
and
cmp
rclb
jg
sub
xchg
fcomps
sbb
pop
iret
in
test
arpl
cmp
pop
xchg
lock
add
mov
pop
call
inc
mov
fwait
cmpsl
lret
gs
cmp
stos
icebp
and
inc
cli
imul
insl
call
mov
jns
pusha
push
lret
xor
enter
sbb
jle
lcall
inc
adc
imull
ret
pushf
in
inc
mov
test
jno
jno
sub
jmp
mov
inc
lcall
aaa
sub
popf
or
lret
or
outsl
sbb
dec
xor
jns
loope
addb
ljmp
pop
jmp
stos
mov
and
jle
inc
push
push
sub
xchg
arpl
pop
shll
std
movsb
xor
cmp
push
add
xchg
je
or
mov
cmp
movsb
pop
inc
mov
test
dec
push
add
xor
and
mov
addr16
pop
popf
sbb
lcall
jmp
push
jno
fwait
out
mov
adc
imul
mov
sbb
and
popf
push
scas
pop
sub
vpminub
lret
in
lcall
orb
cmp
or
cmpsb
mov
ljmp
push
decb
add
dec
cmp
inc
stos
push
xchg
hlt
xchg
cmp
ficomps
mov
ljmp
mov
subb
jno
std
or
or
sbb
mov
orb
cmp
fnstsw
sub
into
iret
outsb
pop
mov
aaa
cmc
mov
add
aam
or
cli
mov
sub
inc
fstp
loope
mov
dec
cmp
xchg
mov
ret
imul
inc
xchg
pushf
shl
inc
pop
repnz
cmp
in
xor
jae
sahf
xchg
and
sbb
xchg
dec
movsl
mov
sti
mov
push
xor
cwtl
adc
mov
push
push
mov
mov
fdivr
cwtl
lcall
xchg
sahf
dec
gs
arpl
jle
je
lds
sub
jge
andl
sbb
dec
or
and
je
nop
mov
cmp
jo
mov
or
nop
cli
in
xchg
xchg
hlt
add
lock
mov
xor
push
lcall
movsl
test
push
stos
push
ret
dec
push
push
dec
push
in
mov
push
cmp
cmp
or
inc
sub
mov
dec
pop
shrl
adc
in
je
ljmp
call
std
testb
sbb
test
mov
push
mov
out
dec
jae
lret
push
jecxz
push
fdivrs
jle
fwait
cmp
sbb
mov
or
mov
inc
fisttpll
push
mov
in
xchg
adc
rcrl
ss
sub
fs
stc
xchg
mov
std
push
mov
xor
out
sbb
dec
inc
mov
pop
pusha
cs
loope
idivb
out
mov
rolb
mov
clc
in
int3
mov
jl
pop
cmp
and
out
fiaddl
js
and
jae
push
aas
pop
loopne
push
lds
imul
insb
sbb
mov
in
add
dec
arpl
loopne
int3
fisubs
lea
out
outsl
inc
lds
rclb
in
pop
mov
fcmovbe
andl
xor
cwtl
pop
data16
ror
cmp
fistpl
mov
leave
aad
cmpsb
cld
mov
adc
rcrl
lock
pop
cli
jnp
aas
xor
sub
sbb
mov
inc
or
mov
std
fwait
nop
pop
dec
mov
mov
enter
bound
les
xor
sbb
or
test
ds
or
fsubrl
divb
adcb
pop
add
dec
jns
mov
pop
jns
movsb
cwtl
rcll
sahf
rcl
popf
leave
das
ret
sbb
jns
fcompl
enter
and
sbb
inc
les
sub
jae
push
add
fiadds
lea
push
dec
mov
cmpsl
mov
ds
fdivl
sbb
aas
mov
xor
mov
push
and
push
fcmovnb
stos
shrl
cmp
sbb
xchg
fisubrl
mov
inc
pop
and
jb
and
jns
and
inc
mov
imul
hlt
cmp
push
lock
lret
lods
in
sub
or
cltd
punpcklwd
mov
cmc
fstl
and
xor
fadd
fs
inc
data16
jo
push
sbb
in
xchg
jns
ja
lcall
push
jmp
push
jmp
or
jl
xor
inc
xor
sti
jle
xor
cltd
push
stc
lcall
xchg
pop
out
pop
mov
mov
test
sub
int
dec
adc
xlat
jmp
jmp
mov
xchg
insl
cmp
push
add
scas
inc
pop
push
cmp
mov
imul
popf
add
add
jecxz
adc
ja
es
cmpsl
loopne
and
lods
sub
xlat
and
adc
cltd
mov
pop
loop
je
ret
cmp
and
or
pop
and
cmp
pop
imul
sbb
push
stc
out
jnp
addb
jl
mov
jmp
or
out
mov
in
repnz
lock
sub
sub
daa
outsl
lahf
sbb
or
scas
cld
aas
iret
gs
repz
pop
cmp
pop
test
fildll
in
cmp
xor
popf
repz
cmp
out
inc
cmp
fcomip
xchg
mov
dec
cmp
mov
jle
cmp
pop
loopne
loop
adc
pop
movsl
daa
push
lret
icebp
sbb
dec
jae
sar
jae
push
jle
cmp
dec
gs
loopne
xchg
sub
cwtl
je
test
stos
push
rolb
into
xor
addr16
pop
std
or
dec
mov
xchg
inc
popf
inc
cli
lret
loop
xchg
popa
test
jno
mov
and
shrl
dec
inc
cmpsl
mov
fisttpl
out
mov
stc
stos
cmp
mov
xor
dec
mov
mov
std
inc
add
rcll
outsl
or
idivb
lods
cmp
sbb
daa
daa
mov
fildl
adc
or
sub
out
addr16
jnp
add
pop
data16
dec
roll
xor
ret
jmp
jnp
jae
es
shl
push
sub
mov
mov
jo
xchg
xlat
jb
push
push
xchg
repnz
xor
sbb
xchg
adc
cltd
fisubrs
cmp
jmp
in
push
out
in
int
aad
mov
stos
cmp
fistl
and
leave
push
lret
sub
movsb
andl
cs
push
pushf
cmp
pop
test
call
mov
int
scas
pop
jle
add
sti
jecxz
insl
aam
idivl
xor
push
pop
jne
and
jns
pop
icebp
jge
fimuls
ret
sahf
jbe
fldcw
sahf
lock
pop
xchg
fs
repz
inc
sbb
xchg
mov
imul
je
lcall
cmpsl
bound
push
lret
push
inc
cmc
pop
dec
jo
daa
fs
in
mov
sti
in
or
push
popf
mov
dec
pop
adc
or
xchg
inc
xchg
shl
xor
testb
mov
adc
pop
jns
inc
nop
insb
ds
jge
push
mov
enter
add
aaa
xchg
div
clc
sub
push
xchg
pushf
pop
push
out
out
sbb
jg
adc
js
into
and
stc
mov
fmuls
and
lods
bound
adc
inc
inc
mov
sahf
stos
dec
mov
das
xor
imul
mov
iret
fcompl
xchg
lret
xlat
pop
add
xchg
mov
add
pop
fistl
sbb
aad
ljmp
pop
mov
sub
mov
fwait
sbb
ds
adc
xchg
scas
cwtl
push
loop
fiaddl
or
shrb
sub
movsb
dec
aas
cmp
icebp
push
adc
dec
insb
sub
cmp
lock
pop
push
xchg
leave
pop
mov
xchg
push
and
mov
movsl
cmpsl
fcmovnb
fldl
push
sbb
loope
mov
mov
insb
inc
mov
ljmp
out
push
xchg
sarl
lock
xlat
rcr
mov
push
or
cwtl
add
pop
or
loope
cli
jp
cmpsl
les
and
jle
ljmp
fistpll
out
adc
lea
mov
out
xchg
xor
mov
cmp
dec
into
outsb
je
xchg
ljmp
and
jae
repnz
xor
pop
mov
sub
xchg
adc
ror
xchg
sub
mov
or
stc
sbb
xchg
iret
ss
dec
or
movsb
sbb
stos
aaa
add
push
add
mov
mov
or
mov
in
mov
fidivl
sub
gs
push
sbb
aam
call
jl
leave
sarl
add
mov
rcrb
popf
aad
push
adc
add
jp
xchg
adc
cmc
xchg
shll
push
cmc
and
movsl
push
push
jp
xchg
mov
jno
jp
jmp
xchg
xor
xchg
mov
jg
outsl
js
mov
lods
test
xor
rolb
cmp
cmp
into
in
add
ss
cld
imul
inc
int3
movsl
insl
aad
jo
xchg
shl
mov
dec
gs
data16
and
jne
bound
pusha
jae
dec
jp
xor
cmpsl
cmc
mov
dec
xor
shll
mov
add
inc
lock
mov
xchg
pushf
inc
push
push
scas
shl
aam
cmp
test
enter
stos
cmp
xchg
lds
and
add
mov
sbb
mov
or
jmp
lret
sar
mov
dec
sub
push
dec
imul
xlat
mov
jo
jl
in
cld
stc
lods
jmp
or
xchg
cmpsb
xchg
outsb
cmpl
stos
add
out
lock
loop
lock
pop
addr16
push
ljmp
fwait
pop
xlat
adc
dec
xorl
test
dec
sbb
sbb
das
pop
stos
add
test
repnz
out
movsl
cmp
mov
jo
sbb
xorl
lds
sbb
cmp
loope
pop
push
lahf
mov
ret
imul
cltd
insb
sahf
push
push
rolb
cltd
cmc
sub
bound
xor
push
dec
xchg
dec
jl
insb
rolb
sub
pop
sti
pop
loopne
addr16
xchg
dec
add
cltd
mov
xchg
pushf
jns
insb
cli
movsl
hlt
popf
inc
scas
dec
inc
leave
aas
outsb
mov
inc
or
mov
ficomps
jns
cmp
fwait
sbb
sub
out
in
into
inc
stos
lea
xchg
ret
inc
mov
outsl
and
test
dec
mov
xor
mov
mov
cli
in
sahf
loope
cmp
jecxz
cmp
push
call
pop
mov
cmp
shl
lock
jns
aaa
push
imul
adc
push
push
add
push
xchg
cmp
stc
inc
xchg
sub
jg
test
dec
outsb
or
not
jmp
stos
test
lods
mov
sbb
pop
push
fadds
popa
popa
loop
ss
mov
scas
rcr
dec
in
dec
dec
or
shl
sub
scas
mov
mov
test
mov
je
cmpsb
movsb
movsl
cmpl
aad
arpl
mov
enter
mov
jnp
xchg
ds
cmp
pop
xor
mov
nop
popf
std
fnstenv
mov
adc
iret
jmp
pushf
mov
fldl
mov
push
mov
and
std
pop
loopne
push
mov
mov
lret
fmuls
mov
dec
in
nop
cld
loope
inc
rol
add
nop
sbb
jle
lret
repz
pusha
in
daa
cmc
icebp
sarb
movl
orl
push
jbe
inc
cltd
sbbl
jne
sti
mov
hlt
sbb
add
clc
popf
int3
test
inc
xor
hlt
repnz
inc
mov
sub
dec
push
or
into
adc
or
test
cs
sbb
cs
adc
jo
loopne
jns
imul
lahf
jmp
adc
pop
and
jmp
adc
loopne
jecxz
jle
xor
xor
lret
gs
ljmp
sub
and
dec
sahf
and
jae
scas
insl
mov
sub
xchg
psrad
sbb
push
jnp
es
xchg
icebp
push
outsb
mov
mov
imul
or
adc
dec
push
fs
jbe
push
jne
jae
rcrb
insb
sub
or
test
push
mov
stos
loop
addr16
or
inc
inc
mov
int
mov
lret
ss
orb
idivl
je
fwait
mov
scas
pop
mov
xor
mov
lret
sbb
mov
inc
jmp
add
xor
jmp
stos
sub
push
inc
push
jne
mov
mov
cmpsb
xchg
cltd
xor
pop
jns
das
mov
mov
sub
cmpl
add
jecxz
cs
pop
stc
xlat
icebp
shrb
xlat
xor
frstor
addr16
cmpsb
mov
xchg
fisubs
sbb
lods
fwait
dec
test
aaa
fs
outsl
in
pop
add
pusha
sbb
mov
push
jge
jnp
pop
lods
cmp
sbb
out
lret
jl
scas
and
add
lea
test
pusha
imul
adc
dec
sub
jle
roll
fcomps
les
popf
ja
push
xchg
pop
cmpl
push
leave
pop
dec
lods
pop
cmpl
push
dec
xor
mov
add
push
lea
call
xchg
sub
mov
xchg
mov
popf
cmpsb
inc
std
add
fistps
ret
lds
test
pushf
or
mov
leave
inc
mov
andl
idivl
mov
mov
lret
getsec
lahf
stc
inc
fisttpl
popf
lcall
sub
cmp
push
pop
test
addb
or
sbb
mov
popa
fstl
push
jle
pop
push
jbe
nop
pop
call
sub
push
mov
adc
add
mov
movsl
xor
and
sahf
pusha
das
cmp
xchg
mov
mov
sti
dec
out
push
callw
add
inc
mov
test
cltd
mov
xor
ja
jne
sbb
js
cmp
and
and
lea
cmp
shll
std
cmp
sbb
mov
scas
push
cmp
push
dec
in
mov
add
aam
mov
inc
pop
fists
sub
lock
arpl
jg
jp
mov
push
and
cmp
inc
scas
jle
out
adc
test
int
insl
mov
xchg
push
addr16
outsb
inc
pushf
and
iret
adc
sbb
jge
mov
out
pop
mov
inc
cmpb
mov
arpl
and
hlt
and
dec
mov
sbb
and
lods
adcl
or
stos
imul
popf
out
jo
ficoml
add
pop
add
add
aad
sub
int
dec
inc
push
scas
or
pop
mov
sbb
xchg
xchg
sbb
sbb
xor
add
inc
adc
and
pop
and
fcom
push
je
cmp
jecxz
push
fdivrs
mov
imul
fnstsw
jb
mov
xchg
ret
or
xchg
fildll
fs
sbbl
push
mov
arpl
mov
and
cs
and
lret
loope
std
std
sub
lret
roll
xchg
iret
dec
cmp
inc
rolb
movsl
mov
cmpsl
pusha
and
aaa
mov
adc
movsl
gs
adc
dec
fnstcw
cmpsl
jge
lcall
jl
cld
mov
jecxz
push
imul
lds
test
pop
lods
ljmp
add
sti
outsb
add
int3
push
or
insb
adc
rcrb
inc
and
fnstenv
add
or
mov
iret
xor
enter
inc
cwtl
add
adc
stc
ljmp
cmp
or
bound
popf
aad
rorl
gs
sub
mov
int
movsl
enter
insb
std
mov
idiv
je
aaa
xor
mov
cltd
fnsave
lret
lock
inc
jl
inc
lahf
mov
cmc
icebp
aas
mov
test
inc
ds
cld
arpl
adc
cmp
outsb
call
jne
je
and
sub
sub
insl
xor
ret
lods
cmp
daa
jge
jg
lods
dec
js
aad
and
fwait
je
jp
sarl
rcll
inc
out
loope
jge
in
sahf
pusha
and
je
mov
lods
cmovne
ds
add
lcall
loope
inc
insb
cmp
cmpsl
cmp
inc
jno
aam
scas
aam
cmpsl
xor
add
add
fucomip
or
push
mov
ja
mov
cmpsb
jb
fadd
mov
lret
ds
jmp
cwtl
cmp
push
popf
dec
pop
mov
outsl
sbb
push
fs
sub
jle
dec
xor
mov
rolb
shrb
dec
xchg
jae
loope
xor
push
stos
push
push
inc
cltd
sub
pop
je
jae
aas
sbb
inc
aas
mov
subb
push
out
ss
ljmp
sbb
or
sbb
mov
shrb
xchg
xchg
mov
stos
jmp
push
adc
push
pop
std
cmpsb
and
mov
mov
sbbl
pop
aas
push
faddl
inc
xlat
jns
out
fdivs
and
hlt
aad
sub
lock
dec
mov
jecxz
daa
orl
out
xor
cli
sti
sbb
mov
jecxz
lods
mov
ljmp
jl
adc
ret
cmp
pushl
xchg
js
fidivl
mov
insl
inc
fst
mov
jb
in
or
fwait
out
or
or
or
negl
cmp
pop
inc
fcmovnbe
dec
pop
int3
int
or
sahf
xor
push
loop
cli
and
movsl
pop
sbb
insb
dec
and
ret
and
ljmp
mov
push
ret
aaa
cmp
js
mov
xor
push
or
in
in
pop
jg
scas
mov
jge
int3
imull
jo
mov
sbb
mov
mov
arpl
cld
loop
es
and
inc
lea
cmpsl
insl
out
lods
ljmp
mov
stc
aad
mov
jmp
aam
adc
inc
lret
in
lcall
xchg
loope
push
in
or
mov
ret
aam
cmc
jp
lcall
sbbl
cld
pushf
adc
xlat
rcrb
inc
inc
mov
fdiv
xchg
jne
sbb
pop
in
or
lret
lea
stc
stc
push
add
sbb
pop
arpl
fiaddl
das
and
stos
rol
xchg
mov
pop
mov
push
out
cmc
insb
dec
imul
repnz
mov
push
sub
ljmp
pop
xchg
cmp
lret
fwait
arpl
jb
pop
pop
sbb
mov
cmp
or
mov
mov
push
pop
mov
mov
jo
cmp
sbb
xor
fimuls
aaa
mov
xor
call
pop
adcl
out
or
in
mov
ret
enter
jmp
lcall
mov
les
call
mov
add
lods
adcl
mov
nop
aaa
lret
add
daa
xor
repnz
jb
sbb
push
mov
into
sahf
out
dec
imul
repnz
jns
out
test
incb
lock
mov
push
jne
cs
out
add
push
xchg
pop
mov
add
mov
push
or
popa
mov
add
sbb
fcomps
push
push
loop
popf
cmp
mov
int
stos
mov
sub
xchg
push
or
std
xor
inc
cli
test
xchg
xchg
push
fidivrs
xchg
frstor
pop
fldt
outsb
movsb
adc
imul
pop
fists
divb
pop
add
and
scas
stc
js
dec
mov
std
jmp
test
xor
in
and
gs
mov
mov
xor
arpl
dec
inc
sub
and
push
iret
xlat
jne
cmp
mov
cmp
mov
pop
imul
xor
dec
adc
scas
or
out
in
sahf
inc
pop
inc
imul
imul
sub
shll
jns
sbb
cmpsl
dec
add
std
movsb
dec
lea
lds
pop
out
hlt
sub
mov
fildll
into
std
and
cltd
js
in
push
or
int3
pop
fcmovb
scas
leave
cmp
push
cmp
cwtl
push
int3
daa
inc
sub
push
jae
in
jmp
in
sub
jbe
add
out
push
in
push
test
cld
inc
inc
jns
inc
test
dec
or
mov
pop
and
dec
loope
test
movsb
punpckldq
and
jp
inc
cwtl
mov
fbld
push
lahf
scas
repnz
lahf
test
mov
mov
mov
mov
xor
pop
xchg
in
cmp
xor
mov
inc
jb
ret
ret
ret
push
mov
jb
dec
xchg
fildl
stc
lret
inc
xchg
hlt
mov
lods
mov
call
dec
test
xchg
xchg
dec
sbb
fadd
sbb
gs
xchg
push
mov
pop
out
xchg
pop
rclb
scas
mov
bound
add
enter
mov
sbb
imul
in
xor
mov
in
mov
and
jbe
dec
int3
mov
sub
aaa
add
adc
pop
outsb
xchg
fsubrs
fistpll
inc
sarb
jns
mov
push
dec
cltd
jnp
rcr
mov
bound
sub
out
mov
scas
sub
adc
sub
cmp
cld
adc
ret
xor
mov
std
cmp
orl
lock
bound
cld
sahf
repnz
xchg
jmp
jle
mov
xor
ja
push
pop
mov
xchg
lock
cld
dec
popf
pop
add
call
sub
cld
jno
inc
pop
lods
pop
cli
push
mov
jecxz
aad
mov
loope
sub
pop
cmp
in
sub
jle
pop
xor
push
add
cmp
loop
dec
imul
test
push
mov
mov
ss
xor
push
jbe
rclb
lret
loope
cmovns
rolb
xlat
aam
sub
jno
cmp
test
popl
lea
sub
das
aam
or
push
ljmp
cltd
dec
mov
shld
mov
sbb
and
into
and
loope
pop
mov
dec
sbb
mov
cmpsb
mov
sbb
push
pop
fs
xorl
sbb
es
mov
push
or
mov
xor
ss
hlt
fldenv
lret
out
lahf
test
rclb
repnz
adc
sarb
loope
repnz
push
push
adc
outsl
rcll
daa
aaa
iret
lcall
sbb
insl
sub
adc
fadds
inc
jg
xor
and
incb
cwtl
pop
pop
ljmp
inc
rorb
fistpll
fildl
pop
imul
and
mov
stc
orl
aaa
lods
cld
pop
and
inc
cmpsb
shrb
pop
lcall
test
arpl
in
pusha
arpl
insl
sub
add
xor
sub
test
enter
sub
cs
jbe
sub
cmc
inc
insb
inc
xor
xchg
and
imul
insb
pushf
dec
cmpl
mov
loopne
pop
dec
nop
fwait
mov
jnp
lcall
or
dec
test
sub
popa
cmpsl
or
mov
popa
sub
push
and
sarl
or
ficoms
sub
es
aas
mov
clc
test
in
sub
lea
sub
ss
push
dec
cwtl
sbb
insl
icebp
fcompl
iret
push
push
sub
mov
leave
sbb
push
pop
push
scas
push
pop
cmc
ss
or
inc
outsb
addr16
xchg
xchg
pusha
imul
adc
dec
aam
in
inc
dec
test
loopne
fmuls
cmp
adc
loop
mov
mov
sbb
test
cltd
inc
sub
ret
add
pop
jecxz
jecxz
xor
lcall
das
scas
leave
pushf
dec
lret
add
sbb
in
jbe
lock
nop
rolb
ds
push
js
out
cmpsb
shrl
nop
cli
mov
sbb
push
pushf
mov
ret
jne
popa
xchg
arpl
xchg
inc
aaa
mov
test
test
aad
repnz
ljmp
inc
lods
mov
sub
rorb
mov
sbb
aas
dec
push
dec
sub
cmpsl
or
lds
movsb
mov
jmp
mov
mov
xchg
fisttpll
dec
shl
mov
test
jg
add
jno
shll
pop
pop
and
incb
xor
call
push
mov
aas
cmp
xor
fadd
movsl
lea
mov
push
push
jno
jge
cmp
and
out
lret
std
je
repz
push
out
into
in
lahf
xchg
je
mov
sub
sub
inc
test
push
mov
ds
fst
dec
xchg
adc
push
sbb
daa
push
cmpsl
repnz
ss
adc
pop
testb
outsb
mov
push
rorb
cmpsl
mov
scas
push
es
ss
jne
push
movlps
sbb
popa
add
adc
cmpsl
xor
data16
dec
fildl
sbb
test
mov
outsb
cli
lret
popl
push
xor
mov
xor
pushf
test
arpl
jo
push
push
pop
sbb
cmc
rcll
mov
xchg
jbe
jbe
fwait
sar
test
popa
mov
in
mov
popf
mov
mov
ljmp
xor
shll
loope
jno
jmp
xchg
push
ret
mov
stos
jge
mov
pop
mov
scas
inc
cmpsl
dec
hlt
mov
filds
sub
adc
or
int
mov
hlt
decl
daa
mov
cmc
jp
pop
stos
dec
jge
jnp
mov
xor
dec
sub
or
imul
mov
or
or
jns
mov
ds
inc
jne
push
jnp
daa
push
jecxz
xor
data16
mov
sub
xchg
jo
cmpsb
xchg
in
ss
test
push
mov
enter
sub
pop
int3
push
push
rclb
pop
and
sahf
outsb
into
sub
clc
ret
pop
push
push
das
dec
jg
push
cmp
icebp
lock
cmp
mov
xlat
je
xchg
aaa
insl
addr16
loop
or
test
int
and
dec
pop
pop
sbb
cmp
outsl
mov
popf
scas
jge
lahf
sahf
fistps
fsub
mov
push
sub
lea
movsl
sbb
jmp
and
or
shlb
add
ja
pop
jo
int
in
movsb
push
pop
pusha
push
pushf
mov
fadds
faddl
jns
jo
outsl
and
xchg
sub
sub
pop
xor
push
inc
lret
cmp
xchg
sub
push
fisubl
cld
xlat
loope
jo
iret
mov
jmp
outsl
int
ds
mov
jo
imul
sub
sbb
xchg
jae
xchg
mov
cmp
mov
add
add
rcl
rcrl
pop
stos
cmpsb
xlat
cmp
cmp
daa
inc
fiadds
add
js
out
sarl
inc
fnstsw
cld
ljmp
orb
test
jnp
jge
pop
pop
pop
cmc
push
xchg
lcall
stc
push
icebp
pop
lahf
inc
dec
add
aaa
mov
jae
xlat
sarl
xchg
setbe
out
lcall
inc
xor
push
mov
pop
jne
add
dec
jg
hlt
addl
xor
sub
jb
sarl
stos
mov
xor
mov
push
mov
fstpt
ret
popf
adc
enter
xor
imul
stos
mov
sbb
aas
jecxz
ljmp
jo
xchg
fcomps
add
std
mov
dec
sbb
push
sub
insl
add
test
cltd
push
dec
dec
push
outsl
in
flds
mov
add
add
mov
popf
inc
les
cmp
xchg
mov
sub
mov
repnz
ljmp
cmpb
pop
shlb
jne
pop
inc
cmp
inc
js
and
or
jno
push
fchs
mov
push
ficompl
dec
mov
ds
sbb
shlb
jg
das
dec
cltd
jne
out
rorb
in
and
roll
fistpl
mov
das
and
shrb
jns
ret
mov
cwtl
adc
loope
dec
leave
pop
push
or
scas
data16
fmull
sbb
fdivr
push
repnz
pop
add
scas
fs
fwait
cmp
aaa
lahf
jmp
or
xchg
push
lock
gs
ds
jmp
dec
or
ss
call
mov
xchg
in
pop
sbb
adc
sbb
mov
popf
outsl
insl
jmp
das
jae
pop
ja
in
xorl
push
xchg
xchg
sbb
cmp
mov
fistpll
loope
clc
fwait
xchg
pop
loopne
pop
adc
loope
dec
inc
jbe
testb
scas
xor
xlat
in
gs
cli
jnp
fcomps
jae
cmpsl
shrl
and
mov
sub
jae
inc
mov
nop
jg
mov
out
enter
xor
stos
or
out
xchg
pop
insl
das
mov
outsl
push
cmp
add
fbld
or
jp
dec
movsb
ss
cmc
xor
pop
push
test
lcall
sub
outsl
pop
mov
pop
sub
jmp
shr
sub
pop
push
or
add
and
mov
mov
or
sub
jns
and
mov
insl
rclb
sub
inc
and
dec
loop
mov
fldcw
cmp
mov
repz
xor
shlb
stos
sub
icebp
cmp
push
or
test
mov
addr16
push
adcl
insl
push
push
lds
iret
int
nop
xor
jmp
add
mov
pop
popf
es
loopne
test
pop
repnz
inc
bound
or
pop
and
and
lret
data16
sub
mov
mov
out
repnz
dec
dec
mov
jg
sub
and
cmp
hlt
inc
int3
cwtl
adc
sarl
push
sub
mov
sub
push
push
mov
xchg
loop
push
repz
or
es
mov
sbb
in
aad
je
inc
cwtl
sub
aad
mov
in
adc
xor
and
dec
aas
call
sar
and
cli
push
fwait
jno
daa
pop
cmpsb
nop
and
push
adc
addr16
enter
inc
dec
insl
sbb
mov
inc
out
lods
sbb
call
lahf
hlt
pop
or
mov
or
sub
mov
jns
jbe
das
in
fldenv
pop
rcr
mov
sub
pop
aaa
sub
movl
int3
and
mov
cmp
pop
pop
fwait
les
mov
sbb
sub
and
lahf
outsb
loop
push
pop
jmp
mov
pusha
out
movsb
roll
les
pop
je
mov
or
fcmovbe
mov
lods
or
add
xchg
jbe
aad
test
cmpb
adc
pop
push
jle
stos
inc
xchg
xchg
movsb
rorb
cmp
in
mov
inc
jae
inc
push
mov
push
lods
sar
clc
xlat
repnz
ret
push
cld
lock
repz
hlt
adc
popf
and
ror
push
pop
loop
dec
push
xor
push
inc
push
aas
jg
fcomps
adc
jg
jns
pop
push
sub
jge
or
outsl
fldl
push
imul
mov
xchg
cmp
ljmp
mov
jo,pt
out
jle
mov
shrb
cmp
test
test
mov
lcall
outsl
test
fs
xchg
xchg
shrb
frstor
cmp
sbb
out
popl
inc
sbb
lods
nop
clc
into
int
inc
pop
leave
int3
sbb
jns
push
fisubrs
xchg
jge
dec
ret
shlb
xor
lahf
in
leave
mull
dec
scas
pop
xchg
jecxz
ret
add
mov
pushf
jp
out
dec
mov
mov
and
cmp
ss
cs
cmp
enter
in
loope
inc
xlat
mov
dec
dec
lret
loopne
push
xor
aas
xchg
cmpsb
lret
int3
test
loope
mov
sbb
jl
pop
test
nop
and
sub
pop
xchg
mov
loopne
mov
mov
fisubl
sahf
jne
loope
mov
inc
or
adc
and
fnsave
outsb
inc
out
push
inc
adc
add
jb
or
push
mov
mov
stos
pop
out
mov
in
in
push
mov
pop
stos
hlt
cmp
xchg
lods
pushf
mov
imul
jnp
fsubl
pop
jp
jne
out
add
test
dec
insl
dec
jae
int3
xchg
out
pop
jle
aaa
loope
sbb
jne
lea
sbbb
push
push
push
and
int3
enter
push
add
loop
loopne
sbb
xor
cli
lods
cmp
rorl
jecxz
aam
push
add
call
push
imul
call
mov
or
clc
jle
xchg
mov
mov
push
lahf
loope
add
in
lahf
mov
mov
test
ja
in
cmp
loopne
mov
cli
aas
sti
mov
out
sbb
push
lods
or
lds
out
fs
clc
mov
push
jbe
les
sbb
inc
and
sti
or
cmp
add
xchg
xor
push
jae
inc
or
push
xchg
fadds
repz
xchg
or
fimull
cld
cmp
fisubs
shl
jno
idiv
jno
mov
fcoms
adc
xlat
imul
mov
sbb
mov
outsb
mov
imul
sub
and
sub
sahf
pop
stc
sti
pop
aas
cmp
lret
sbb
jno
jl
mov
mov
cmp
push
or
cmp
push
and
ficomps
cltd
test
xchg
and
mov
mov
in
inc
fdivrl
pop
aas
push
ljmp
nop
ds
or
in
sarl
xchg
pop
and
mov
jmp
out
add
in
fwait
cmc
std
jl
add
outsb
sbb
push
xor
mov
lock
adcb
dec
aaa
ret
cwtl
hlt
add
and
repz
mov
pushfw
adc
sbb
icebp
mov
bound
dec
cmp
inc
push
mov
xor
mov
test
mov
jne
fdivrs
xor
sub
push
fcoms
mov
or
out
testb
jo
ljmp
out
inc
dec
pop
out
mov
lods
cmpsl
cmpsb
jo
xor
lods
mov
aas
sbb
enter
and
fcmovnb
sahf
pusha
leave
xor
out
mov
cmpsl
push
fs
shrl
push
movb
xchg
mov
cmp
leave
es
and
xchg
xchg
xchg
int3
adcb
fnstenv
ret
and
add
loope
and
outsb
jg
xor
scas
stos
pop
and
adc
xor
repnz
mov
incl
fwait
mov
ds
fmul
fisttpl
mov
shll
loopne
hlt
lods
and
jecxz
mov
mov
shr
mov
bound
fisubs
sahf
or
loop
xchg
fimuls
cmp
mov
repz
push
xchg
imul
dec
mov
push
cld
les
and
ret
outsl
cmp
jo
sarl
lods
and
insb
loopne
push
dec
rcr
dec
and
pop
sbb
pmaddwd
lds
lret
xchg
pop
inc
inc
in
fwait
leave
lcall
pop
lahf
int3
dec
adc
incb
fdivrl
jle
shufps
out
cwtl
and
in
test
clc
push
clc
repz
xor
pusha
cmp
sub
shrb
mov
jge
inc
sti
lods
xor
inc
mov
mov
cs
sbb
sbb
fidivrl
and
negl
lret
fidivrl
popa
sub
shll
enter
gs
gs
cmpl
jnp
jl
loope
iret
sub
or
into
sarl
dec
addr16
pop
pusha
dec
jnp
mov
pop
add
movsb
mov
rcrl
lahf
movsl
lret
sbb
lret
sarl
or
in
lret
enter
mov
out
mov
inc
xchg
call
js
cld
leave
std
jnp
jg
fucom
fnsave
mov
adcl
cmpsb
mov
add
mov
jge
cltd
out
je
bound
push
icebp
push
scas
xor
xor
incl
xchg
lea
dec
xlat
push
ja
or
push
fildl
out
cli
fwait
add
mov
push
mov
dec
sbb
and
xchg
xor
or
sbb
movsb
testb
mov
in
inc
movsb
add
xchg
out
adc
out
int
push
pop
cmp
pop
or
out
push
mov
enter
lods
ficomps
jmp
aad
aas
mov
cmp
and
outsl
insl
out
lcall
inc
mov
mov
xor
xchg
cmpb
jmp
dec
fmull
inc
into
icebp
hlt
mov
jg
mov
ret
and
mov
test
xchg
lock
xchg
dec
push
xchg
mov
cltd
rcrb
out
add
sbb
mov
dec
sahf
in
push
push
shrl
sbb
gs
inc
adc
dec
adc
add
ret
mov
mov
sbb
std
dec
xor
movsl
test
arpl
push
inc
int3
sarl
fiaddl
lods
rol
lods
sbb
sbb
call
rcrl
es
aas
je
in
sahf
imul
rorb
lock
mov
jo
push
sub
inc
cmp
fucomi
add
negb
xor
pop
out
sbb
mov
sbb
dec
sbb
jle
test
mov
lea
in
xor
imul
ret
andb
mov
add
dec
pop
insl
pop
add
scas
stos
fnsave
xor
inc
xchg
lcall
hlt
test
xchg
fisubrl
sbb
fwait
stos
in
cwtl
ret
jecxz
outsb
mov
test
cli
lock
mov
jne
fisubrl
loopne
loopne
leave
pop
cmpsb
dec
and
push
push
or
mov
ljmp
mov
lret
xchg
scas
shrl
lret
ss
mov
push
push
mov
sbb
lcall
loopne
xor
out
push
fsubl
sbb
add
xchg
adc
cwtl
test
aam
aaa
iret
int3
insb
scas
mov
mov
dec
iret
push
mov
les
leave
andb
leave
mov
divb
add
stos
lcall
lcall
adc
mov
or
movsl
loope
or
mov
lds
insl
dec
pushf
xchg
add
cmp
je
xlat
out
add
movsb
push
xchg
xor
stos
mov
push
fbstp
mov
sub
dec
mov
addr16
jnp
cmpsb
or
pop
sbb
sbb
rcrl
insl
push
fstpt
jg
add
sub
out
mov
pop
loop
add
dec
jmp
jmp
scas
lods
inc
add
mov
sub
xor
sub
cmp
in
fdivs
adc
fistl
cmpsl
jns
out
hlt
fmul
dec
jecxz
xchg
add
call
movsl
xchg
push
push
cmp
or
cmp
inc
xor
and
stos
andb
and
xlat
pusha
xchg
mov
enter
mov
cld
push
lock
mov
xchg
outsl
das
mov
stos
add
jecxz
std
sub
outsl
and
mov
push
movsb
push
xor
fwait
nop
dec
mov
fwait
xor
sub
iret
sbb
xchg
sahf
adc
and
stos
push
jbe
fdivl
pop
xchg
mov
pop
arpl
cmpsl
xor
sbb
push
mov
ret
fcoms
dec
popf
inc
out
push
mov
pusha
sub
or
fadds
mov
xchg
loop
lcall
sbb
pop
imul
out
mov
jae
or
add
cmp
test
pop
vmwrite
outsb
and
jo
xlat
cmp
in
cmp
pop
mov
ficompl
sarb
push
push
mov
push
es
pop
out
mov
std
and
imul
cmp
sbb
mov
push
fldl
fstps
pop
jo
mov
aas
xchg
xchg
dec
xchg
cld
iret
xor
insb
adc
enter
out
iret
sbb
add
enter
add
mov
idivb
shll
mov
lcall
scas
data16
inc
insl
and
jmp
mov
je
push
jl
xchg
test
pusha
ret
out
mov
inc
repnz
lcall
inc
pop
inc
sub
pop
clc
in
push
popa
lods
push
dec
and
mov
lods
test
xchg
fbld
mov
icebp
movsb
inc
jecxz
lods
js
mov
pushf
test
add
data16
jmp
mov
mov
and
test
stos
jp
sti
mov
cld
mov
js
sbb
ss
addr16
or
adc
rcll
xchg
cmp
ss
inc
jns
jno
and
stos
sbb
lods
push
mov
mov
stos
aas
cmp
dec
mov
pop
rolb
cmp
fistl
sub
fistps
int
aad
or
adc
xor
jne
mov
xchg
or
popl
cli
or
push
push
and
push
fneni(8087
decl
inc
scas
out
roll
or
outsl
jl
cmp
sub
push
cmp
pop
inc
lock
mov
xchg
stos
xchg
mov
iret
mov
and
pop
aas
inc
push
repnz
andl
xor
xchg
dec
int3
stos
mulb
loop
push
jno
in
mov
sub
mov
or
push
cmp
xchg
fisubs
jno
cmc
repnz
cwtl
daa
psrld
push
in
lcall
fistps
pusha
ficoml
pop
leave
jb
or
inc
xchg
sbb
dec
insl
mov
insb
add
ds
cmpsb
xor
lahf
scas
test
mov
mov
js
aam
cmp
cltd
ljmp
dec
and
or
shlb
mov
inc
pop
data16
into
and
dec
ja
fwait
into
imul
rol
xchg
and
add
std
fs
xchg
test
xor
scas
inc
mov
ja
rolb
leave
dec
push
add
in
adc
add
cld
xchg
jo
stc
dec
faddl
bound
push
fdiv
and
mov
stc
std
sub
test
xchg
sbb
xor
rcll
pop
xor
call
mov
sub
shlb
and
fstpt
scas
insl
orl
fbld
mov
push
ret
fcomps
mov
movsl
adc
test
dec
and
cmpsb
ss
test
in
movsl
pusha
dec
xchg
lock
out
sbb
fmul
aaa
rcll
pop
repz
repz
and
repnz
jae
test
in
push
sbbb
aas
sahf
adc
inc
gs
inc
cmpsl
push
jne
fsubs
les
jmp
mov
add
bsr
stc
inc
out
stos
adc
cmp
mov
dec
sbb
fcmovnu
adc
add
pop
fadds
loop
jp
mov
adc
dec
pop
pop
ret
cmp
dec
cmp
mov
popf
stc
pop
and
sti
jb
xchg
push
pop
js
add
iret
dec
movsb
xchg
aam
or
movsb
push
mov
mov
jbe
xlat
add
loope
cmpsl
add
cmp
arpl
mov
add
outsb
popa
hlt
dec
xlat
xor
push
loope
mov
jecxz
mov
xchg
jae
xor
or
cs
jp
aas
mov
out
ds
xchg
xorl
aas
ja
sahf
inc
popa
ficomps
push
ficoml
xchg
mov
scas
inc
scas
movsl
aaa
lea
mov
dec
or
lcall
mov
dec
out
xchg
mov
loop
gs
or
out
jnp
test
orb
dec
daa
repz
pop
mov
cltd
xchg
fsubrl
divb
das
adc
pushf
inc
das
mov
mov
insb
add
pop
cli
popf
pop
mov
cmc
or
das
ds
in
in
leave
out
mov
mov
inc
push
in
bound
movsb
push
js
ret
push
mov
adc
add
adc
daa
in
and
fsubs
cmp
xlat
in
lea
sti
sub
ja
push
mov
inc
xchg
jne,pn
movsb
popa
lret
adc
xor
loope
push
push
fisttpl
xor
push
xchg
popf
and
sti
inc
aad
pop
mov
aaa
push
leave
mov
pop
out
push
in
jge
mov
xor
jno
jmp
fadds
push
in
jp
fnstcw
jb
sbb
arpl
movsb
movsl
dec
mov
xchg
leave
push
rol
out
jl
sbb
mov
or
add
mov
clc
pusha
push
or
lahf
shlb
pop
push
gs
dec
mov
jecxz
pop
dec
push
ljmp
push
or
in
mov
mov
cmpsb
bound
jge
sub
inc
ficompl
push
and
fisubrl
sbb
divb
xchg
push
rorb
out
imul
arpl
fsts
sub
and
in
inc
mov
push
leave
jmp
mov
push
inc
fsubrl
cmpsl
outsb
dec
pop
pop
loope
aam
test
mov
and
fistpl
sbb
repnz
imul
pop
test
mov
pop
cld
arpl
sub
aaa
clc
ja
int
mov
rol
cmp
test
neg
cld
push
bound
test
push
in
repnz
fisttpll
jnp
push
pop
jle
mov
das
and
das
shlb
leave
lret
mov
inc
stos
or
jle
lahf
inc
fwait
cmp
into
cmp
rorl
sub
shrl
mov
movsl
int
jno
push
test
dec
lea
dec
pop
adc
movsb
mov
or
jb
or
ds
popf
out
sub
pop
or
insb
movl
or
stc
and
sub
out
mov
sub
ja
mov
in
pslld
daa
xchg
fsts
loopne
pushf
xchg
in
mov
jne
pop
ja
enter
mov
ret
inc
loope
jg
dec
dec
fildl
cmp
or
mov
mov
scas
or
int
hlt
or
push
and
mov
xlat
in
jg
push
xlat
fists
mov
pop
mov
sbbb
xchg
clc
in
mov
push
aaa
test
dec
sahf
push
mov
sub
dec
in
xor
shlb
mov
cmp
xchg
mov
into
scas
int
out
push
pop
and
movsb
pusha
jbe
dec
ss
dec
and
mov
or
add
stos
push
jae
loope,pn
ret
add
out
or
fstps
mov
mov
mov
mov
shl
and
xor
cmp
push
xlat
dec
in
out
mov
cmpsl
sbb
fwait
out
push
repz
adc
mov
and
inc
movsl
daa
lret
rclb
jae
jae
das
test
adc
lds
or
fistpl
mov
mov
and
scas
cwtl
imul
into
add
lret
and
insl
add
xchg
add
xor
or
add
xchg
mov
cmp
inc
ret
xchg
js
and
mov
xlat
mov
mov
into
std
imul
xrelease
notb
add
imul
cmp
out
jae
adc
adc
mov
psrlw
xchg
jle
scas
mov
pushf
jmp
loopne
inc
push
daa
inc
fcomps
out
jno
mov
jg
inc
test
cltd
cmp
xchg
stc
pop
addl
push
mov
inc
mov
dec
out
jno
imul
cmc
mov
sbb
sub
std
cmp
xor
adc
sbbb
xor
sub
movsb
jbe
dec
mov
adc
cltd
in
test
imul
lds
cmp
ret
mov
mov
mov
push
jmp
mov
stos
xchg
pop
mov
jmp
sbb
stos
pop
out
lea
rcrl
and
mov
push
fldt
adc
jecxz
and
aaa
mov
icebp
cmp
mov
jmp
inc
mov
cmp
xorl
dec
mov
js
aaa
sub
mov
add
loop
in
push
or
mov
mov
pop
nop
mov
sahf
mov
lds
iret
pop
lea
push
and
sub
jo
sub
pop
sub
out
mov
roll
xor
mov
xchg
and
cmpsb
shll
add
jnp
ds
add
stos
and
addr16
xor
pop
pop
das
es
js
mov
popf
arpl
mov
xchg
push
inc
jns
fs
repnz
and
jl
push
and
ret
fbstp
push
test
xor
rcl
sub
add
lods
adc
sub
js
scas
cmp
mov
hlt
test
mov
dec
pop
roll
and
cmp
js
xchg
out
div
icebp
xor
daa
pusha
mov
cmpsl
jnp
sbb
ret
test
cmp
mov
xor
jae
dec
sbb
int3
dec
sub
loopne
or
jl
fistps
and
stos
ss
cmpsl
imul
fildll
sbb
adc
inc
jle
add
xchg
mov
popa
mov
xchg
pushf
gs
xchg
pop
add
mov
jb
jl
incl
sti
mov
jne
mov
loopne
lds
xchg
das
fiaddl
xchg
int3
fstpl
into
adc
imul
sbb
shl
outsb
scas
and
lods
dec
mov
loop
fxch
lds
pop
cld
clc
gs
leave
jo
add
and
inc
call
push
outsb
add
loopne
popa
cli
sbb
adc
insl
cld
inc
daa
pop
aaa
add
xchg
inc
fdivs
dec
jl
lea
imul
dec
in
push
pop
mov
insl
cmp
ffreep
xchg
inc
mov
shl
adc
cmp
cwtl
lock
in
sbb
xor
sub
xchg
out
mov
into
lods
sub
mov
mov
sbb
out
sbb
insb
repnz
jne
push
dec
and
xor
repnz
adc
pop
call
dec
adc
data16
mov
adc
push
push
inc
test
fcomps
gs
mov
lret
jbe
ret
xchg
fadd
insb
inc
fistpll
sbb
dec
mov
xchg
iret
fistl
xor
fcompl
push
lahf
cmpsb
push
je
insb
pusha
adc
shrb
pushf
mov
dec
int3
test
cmp
mov
fdivl
jno
insl
rolb
and
loope
rcr
xor
outsl
adc
push
or
lret
ljmp
xchg
imul
jnp
lret
call
in
add
mov
out
insl
dec
xchg
sub
jne
repnz
mov
pop
jge
mov
dec
pop
movsl
stc
lea
jae
icebp
inc
loop
scas
cs
mov
push
cld
mov
das
push
cmp
faddl
arpl
mov
pop
cmp
dec
fwait
js
addl
in
js
or
outsb
add
mov
iret
push
xor
pop
inc
stos
or
test
test
insb
fimuls
push
push
mov
cltd
aam
loope
scas
mov
cmp
ret
mul
iret
sti
popa
lea
dec
outsb
pop
dec
mov
sbb
insb
leave
aad
jno
lods
or
cwtl
jge
arpl
test
jle
shrb
jae
mov
mov
aam
fsubrp
adc
sar
add
imul
inc
sub
sti
jge
pop
add
push
xchg
jp
adc
pop
pop
out
orb
test
rcll
dec
mov
cli
xor
adc
cmp
xchg
pop
jae
orl
mov
jge
rorl
std
test
mov
adc
popf
shr
pavgw
shrb
cwtl
xchg
sub
pop
xchg
aas
nop
daa
imull
adc
xchg
shr
push
sahf
incl
mov
jb
xor
and
inc
cmp
jecxz
insl
shlb
fs
dec
bound
lahf
or
fsubrl
subb
daa
fwait
or
ljmp
mov
inc
cltd
mov
mov
push
fnsave
pop
sbbb
fs
test
dec
icebp
mov
jns
lods
loopne
lret
lret
out
jl
call
das
sub
xor
cs
xor
jmp
push
sbb
mov
scas
jbe
fsubp
mov
cli
call
or
jmp
or
add
frstor
inc
rol
xor
sbb
lret
push
add
push
loopne
js
mov
cmpsl
and
int3
ret
test
mov
rol
mov
pop
pop
push
clc
imul
stos
or
mov
lret
in
andl
or
test
imul
adc
movsb
and
push
cwtl
push
daa
fdivp
and
pusha
int3
sub
push
push
jmp
movsb
lods
mov
xor
lods
arpl
andb
data16
in
das
mov
loope
sarb
push
in
es
sub
test
cmp
adc
clc
sub
jae
mov
add
or
push
jb
movsl
in
fistl
sub
adc
daa
imulb
jae
mov
fnsave
and
enter
push
and
mov
cmp
sbb
mov
add
xor
jmp
in
mov
cwtl
inc
ret
mov
lods
leave
sub
lcall
fcoml
add
mov
cmp
arpl
test
hlt
std
aam
int3
pop
mov
push
rcrl
mov
push
jae
xor
cwtl
pop
lea
and
adc
mov
mov
sbb
cld
push
xchg
mov
xor
xor
test
movsl
lock
outsb
push
mov
mov
out
subb
adc
fsubl
shll
mov
push
dec
test
insb
bound
test
push
aad
add
cwtl
jge
in
jns
push
andl
dec
xchg
popa
dec
std
inc
test
xchg
aas
or
call
jp
pop
jle
loop
sub
mov
push
push
lret
add
shrb
in
push
xchg
aad
mov
push
and
ljmp
lock
push
imul
shll
mov
je
adc
xlat
mov
fildll
nop
sahf
fcomps
icebp
in
std
mov
and
push
dec
das
out
pop
mov
ljmp
sbb
jecxz
les
pop
out
movsl
inc
sbb
inc
inc
scas
push
or
insb
sub
jmp
jae
lods
dec
out
ss
notb
dec
dec
lret
mov
dec
xor
arpl
ds
rolb
ja
fnstcw
lock
lods
jnp
or
inc
fxch
ja
push
movsl
movsl
rcrb
ret
in
sub
xor
mov
sbb
push
js
inc
jge
cmp
adcl
jmp
aad
mov
shll
lods
add
sub
push
std
adc
dec
pop
mov
aad
sub
xchg
fldcw
in
movsl
inc
and
push
std
jp
push
mov
jo
mov
push
in
push
sbb
jge
lret
mov
xchg
loopne
xchg
test
test
jb
add
ret
inc
lret
push
and
movb
fisubs
repz
and
jl
mov
cmc
jbe
mov
jb
outsb
movsl
imul
lcall
mov
call
pop
mov
repz
adc
divb
adcl
cmpsl
adcb
sub
mov
fmul
push
mov
pop
outsl
popa
and
jecxz
dec
or
hlt
inc
cmp
xchg
and
scas
dec
cs
test
in
cmp
es
cmp
andl
cmp
sarl
cli
test
mov
lods
scas
repnz
or
cmp
xchg
lret
popa
dec
add
insl
mov
pop
scas
js
adc
pop
outsl
mov
xor
mov
or
shlb
stc
xor
es
sti
pop
cmp
iret
les
and
mov
inc
xchg
and
loope
mov
adc
insb
jp
loop
or
cmp
sub
fsubr
push
pop
xchg
dec
mov
daa
mov
ds
pop
rcrl
lret
mov
push
rolb
adc
mov
hlt
jge
cmpsb
std
jmp
lds
add
lods
setp
scas
push
mov
mul
inc
dec
mov
insb
jmp
mov
rcrl
push
dec
dec
push
adc
arpl
jp
movsb
add
and
je
sbb
addb
in
test
out
xchg
push
popf
sub
and
ljmp
cltd
mov
popf
dec
popf
in
mov
cmp
push
std
cmpb
cmp
mov
pop
xor
xchg
inc
es
cltd
pop
xchg
repz
cmp
inc
inc
lret
mov
jnp
ret
andb
sar
xor
dec
loop
mov
jnp
out
call
sub
scas
cli
pusha
dec
dec
popa
imul
fimuls
sub
xor
push
xor
or
hlt
sbbb
jo
and
out
mov
add
popf
nop
fwait
push
gs
lds
pop
sbb
ja
aas
out
adc
lret
mov
pop
jle
push
mov
arpl
enter
fidivl
jg
push
mov
sub
lahf
orl
xchg
fwait
lock
repz
mov
stos
mov
inc
lcall
test
mov
or
std
lret
push
cmc
mov
pop
jge
outsb
xchg
call
dec
mov
xchg
lret
fmulp
out
scas
mov
mov
out
rorl
mov
xchg
fstps
repz
or
hlt
fs
outsl
rolb
test
fldenv
test
add
es
jae
and
mov
mov
mov
test
push
dec
rolb
pop
add
sbb
scas
cmpsl
scas
enter
push
xor
sub
mov
adc
pop
mov
xor
xor
pop
stos
push
pop
rorb
jg
aam
notl
dec
xor
xchg
xchg
mov
je
pop
mov
dec
loopne
test
dec
mov
pop
cltd
jno
or
inc
fsubrs
ljmp
inc
lret
adc
lods
lock
shl
push
arpl
xlat
sbb
ficoml
out
aas
lea
mov
bound
sbb
push
push
jne
scas
sub
loop
adc
popf
lods
in
psrlq
mov
xchg
jg
mov
mov
xor
add
rolb
negl
out
into
mov
clc
outsl
jecxz
mov
cmp
add
aas
mov
pop
into
add
jmp
pop
bound
mov
mov
rcl
in
aaa
dec
lods
loop
pop
aaa
pop
imul
add
aad
jmp
repz
enter
pop
jne
cmp
leave
pop
inc
dec
cmpsb
cli
into
push
or
imul
roll
loop
mov
add
and
scas
fdivs
pop
dec
and
xchg
fyl2xp1
mov
xor
cmp
sub
sar
in
add
or
mov
push
out
adc
nop
lcall
sub
jb
mov
popf
lods
push
adc
jecxz
push
scas
insb
push
pop
cmpsb
mov
stc
xchg
leave
cmc
das
pop
lods
leave
pop
std
push
insl
in
cmp
fwait
push
fisubs
fisttpl
and
stos
jnp
insb
mov
fwait
stos
mov
push
scas
jg
cs
outsl
dec
ds
in
dec
addr16
push
push
xor
cmp
inc
xchg
les
icebp
movsl
dec
mov
insl
or
ret
adc
pop
ret
xchg
sbb
jmp
sahf
jo
cmc
add
aas
rdmsr
gs
in
mov
loop
hlt
mov
jne
inc
push
rcpps
pop
or
xchg
sbb
pop
mov
mov
fsubs
cwtl
test
stos
les
enter
pop
aam
stos
push
insb
aas
popa
nop
movsl
dec
iret
inc
or
jecxz
push
sub
lds
or
idivb
adc
aaa
fmull
sahf
ljmp
mov
ja
push
push
pop
repz
jns
mov
bound
xchg
sbb
fiaddl
cwtl
fdivr
pop
jg
int3
push
mov
add
repnz
sbb
movsl
js
popa
pop
xor
sub
xor
data16
mov
int3
andb
out
stc
push
in
fisttpll
rclb
cmp
ss
pop
pusha
insl
mov
pop
lds
inc
jno,pt
sbb
jge
sub
fs
pop
pop
call
pop
jg
test
lret
scas
push
fimuls
xor
or
cltd
add
mov
mov
mov
jle
mov
dec
jne
add
cmp
lock
sub
std
sub
cmp
push
jae
ja
sbb
je
xchg
rorb
inc
adc
pop
fnsave
mov
sbb
jg
lret
jle
xchg
xor
enter
decb
inc
cmpsb
icebp
xchg
pop
inc
sbbb
inc
jmp
ja
xor
xor
mov
out
mov
sarb
icebp
push
cli
inc
repnz
inc
jge
js
add
pop
adc
mov
fidivl
cs
push
mov
sahf
clc
ds
adc
mov
jo
adc
adc
adc
iret
pop
jmp
mov
adc
fistpl
fimull
aas
pop
inc
or
push
inc
add
out
fidivrs
push
inc
sahf
mov
lods
pop
push
dec
rcr
jecxz
dec
jmp
rcr
inc
dec
out
out
adc
sbb
nop
scas
out
roll
inc
push
leave
xor
rorl
std
or
in
cmp
pop
mov
hlt
xor
inc
hlt
lahf
rcl
adc
cmp
jecxz
jl
mov
cmpsb
andb
cmc
nop
mov
cmp
inc
add
pop
inc
ret
pusha
lret
sbb
dec
jl
jg,pn
fsubl
lods
add
mov
mov
lcall
adc
dec
imul
fildll
adc
adc
pop
sbb
push
cld
lds
or
mov
jae
loop
sbb
dec
aas
sub
pop
dec
fdivl
jno
iret
xor
and
fmul
or
ds
out
and
inc
pop
arpl
cmp
mov
lahf
movsl
lahf
xor
dec
cmp
pop
pop
rcrl
rol
sbbl
dec
mul
sbb
add
xor
ret
movsb
dec
repnz
dec
testb
mov
sub
jp
jle
das
pop
ret
test
ljmp
call
daa
add
loope
call
inc
dec
xor
fs
fistpll
cmpsb
mov
test
or
mov
cmc
movsl
pop
test
push
mov
xor
cmp
mov
sahf
popf
jb
test
mov
push
es
push
cmp
je,pt
jmp
andb
call
das
in
sar
mov
pop
pop
shll
cmp
push
xor
ljmp
mov
mov
jle
popa
scas
jp
fnstsw
lods
dec
mov
cwtl
cmp
out
pop
jbe
pop
mov
outsb
mov
fwait
iret
test
and
sub
enter
pop
sub
dec
outsb
rcrl
jno
fsts
testl
push
sub
test
shlb
jge
cmp
pop
pop
clc
outsl
jae
rorl
sbb
mov
jge
xor
mov
mov
scas
mov
aad
lods
test
out
jae
stc
fbld
jmp
es
dec
in
scas
lods
add
test
repnz
sbb
orb
cmp
mov
pop
pop
pop
test
cli
scas
sbb
push
add
jecxz
ds
mov
sbb
andb
ret
jb
xor
cmp
iret
in
cmp
shlb
rorb
sbb
jne
negb
sub
inc
inc
ficoml
xchg
add
lcall
jnp
mov
rsm
mov
jg
fwait
pusha
popa
not
jle
jge
movsb
and
adc
mov
pushf
aaa
loop
js
mov
cltd
mov
pop
xchg
aam
test
sarb
adc
mov
stos
mov
sub
sbb
adc
mull
push
push
mov
pop
arpl
sub
pop
adc
push
fiadds
test
add
pop
xor
dec
inc
dec
out
push
inc
dec
xor
push
out
ficoms
xor
jo
lods
mov
sbb
rcrl
pushl
pop
push
cmpsb
mov
mov
fwait
add
cmp
adc
adc
xchg
adc
xchg
rolb
add
mov
jg
mov
xchg
push
push
andb
pop
cld
stos
mov
and
mov
loop
sbb
xchg
scas
jmp
jecxz
and
divb
cmpsl
fstps
mov
cmpsb
xor
inc
add
inc
fsubp
mov
pop
push
add
xor
imul
fwait
ret
mov
or
or
push
fs
push
filds
push
inc
jl
cmp
push
aaa
je
jecxz
inc
mov
jbe
xchg
lret
iret
into
jg
rorb
adc
pop
jmp
aad
clc
dec
mov
mov
lret
pop
and
sub
jns
jbe
in
sub
xchg
sbb
cmpl
mov
cmp
out
cmc
jge
push
xchg
scas
clc
adc
ret
or
jns
movsl
jbe
test
inc
adcb
roll
adc
xor
pop
popa
mov
ret
push
popa
mov
inc
cmp
mov
test
in
aad
lret
cmp
movsl
js
aad
cmp
cwtl
mov
fwait
ss
fwait
stos
rcrl
push
sbb
xchg
sti
outsl
pop
mov
jne
sub
aad
gs
aad
inc
xor
or
leave
data16
clc
jmp
test
loop
loope
mov
dec
gs
frstor
jns
adc
insl
sahf
pop
test
fs
enter
fstpt
loope
jae
sub
loope
xchg
in
and
inc
jno
add
outsb
int3
sub
inc
call
lahf
fimuls
rorl
dec
lcall
outsb
in
fsubp
mov
enter
in
or
shll
push
mov
dec
popa
xchg
and
jl
sbb
xor
sbb
stos
imul
push
movsb
movb
leave
add
sahf
ljmp
fdivrs
mov
js
cmp
mov
movsb
adc
lret
adcb
inc
sbb
cmp
lods
mull
add
fsubrp
bound
push
jns
insl
ret
cmp
mov
and
imul
push
and
push
in
je
adc
mov
ret
jbe
push
ret
aam
daa
popf
jo
fstpt
cli
pop
sub
les
mov
call
xor
notl
inc
xor
pop
rorb
cmp
xor
pop
pop
cmp
dec
xchg
cltd
stos
xlat
mov
aad
leave
cmp
scas
loop
mov
cmc
into
dec
fidivs
mov
lahf
out
push
or
jge
cmp
pop
sub
test
cmp
sub
aam
insl
lret
int3
pop
or
ret
cltd
jno
sbb
mov
fcompl
xchg
jns
bnd
stc
fs
cmp
dec
cmc
and
sub
sbb
jge
out
stos
sbb
cld
fstpl
imul
xchg
dec
pop
shrb
jp
push
cmp
dec
add
mov
dec
insl
std
sbb
push
fucomip
popa
push
push
dec
jno
test
outsb
test
lods
xchg
inc
lock
mov
ret
push
outsb
jmp
sbb
std
cmp
adc
rorb
xchg
xchg
cmp
or
dec
inc
lods
enter
jge
loopne
pusha
js
mov
iret
outsb
dec
sbb
stos
cwtd
fisubrs
popf
fmull
into
add
mov
mov
push
cwtl
cld
jb
push
out
insb
and
test
jmp
ja
aas
jl
adc
insl
pop
cli
inc
fwait
iret
jge
ljmp
push
mov
lds
imul
sub
aas
inc
push
js
pop
test
lea
ljmp
inc
add
sbb
add
mov
data16
aad
insb
loop
aad
aaa
outsl
cmp
int3
insl
mov
out
fstps
adc
enter
lock
pop
adc
jae
jae
mov
movsl
or
stc
push
mov
jg
pop
cmp
mov
jle
gs
inc
iret
push
sbb
inc
aas
pusha
adc
int3
inc
lahf
sub
dec
dec
jmp
shrb
jmp
int3
test
aam
jnp
mov
in
shrl
out
aas
jp
xor
cld
lret
out
lret
xlat
xchg
add
scas
in
sub
ja
pop
enter
mov
push
orb
ljmp
mov
add
sbb
adc
jl
mov
push
aam
push
cmp
sbb
pop
mov
xchg
int
inc
cmp
jmp
das
incl
sbbl
fmul
sub
int3
mov
nop
lods
and
pop
or
xor
jmp
ret
inc
add
or
pop
cmc
jae
daa
out
fcmovne
add
fiadds
shrl
shrl
jg
mov
lods
add
push
stos
mov
cmp
arpl
lret
movsl
sbb
arpl
aaa
add
pusha
push
sbb
scas
pop
jno
mov
rcrl
sub
mov
lods
shll
popa
or
in
test
inc
fcomp
dec
push
mov
dec
cmc
cltd
dec
cmp
mov
dec
inc
and
mov
sahf
aas
fildl
orl
sahf
repz
cmp
xchg
aam
fisubs
mov
sti
mov
imulb
aam
mov
outsb
adc
xor
lds
rol
xor
mov
mov
mov
lods
ljmp
sti
insb
lods
add
test
inc
push
mov
test
add
xchg
iret
cltd
mov
in
xchg
dec
cltd
cwtl
bound
int3
push
cmp
jmp
jbe
out
incb
rorl
repz
insb
repz
jle
shll
sarb
cs
pop
jne
push
add
xchg
int
addr16
enter
mov
cmp
outsl
mov
pusha
and
mov
cmp
add
ja
fisubrl
enter
scas
pop
les
cmp
into
insl
push
imul
jb
dec
movsb
fimull
push
bound
xchg
inc
sbb
adc
mov
mov
or
imul
xchg
mov
add
dec
fidivs
xchg
je
cmpsl
sarl
gs
xor
loope
pop
pop
test
cmc
cmp
shlb
xchg
ja
xor
and
xchg
push
add
gs
dec
adc
push
push
ret
xchg
lea
addr16
inc
aas
icebp
cs
mov
jg
std
sub
jne
and
dec
push
or
mov
rcrl
xor
loope
cmp
cmp
filds
popf
sarb
or
jns
add
pop
mov
push
icebp
pop
or
popa
cli
jbe
xchg
out
not
popf
popf
inc
cmp
enter
mov
push
jne
das
xchg
xor
dec
mov
lods
daa
pop
cmpsb
out
dec
dec
shll
mov
lret
jne
mov
pop
pop
popa
gs
or
rcrb
outsl
leave
cmp
sbb
push
add
cld
push
std
mov
xor
jno
stos
sti
loop
mov
aad
lahf
stos
add
ss
aam
out
out
repnz
iret
bound
xlat
addr16
pop
push
mov
mov
pushf
sub
out
mov
cwtl
jnp
sub
mov
mov
lar
or
cwtl
insl
shl
cld
xor
cmp
inc
and
add
ret
pushw
fsts
inc
cltd
mov
and
gs
jo
les
inc
xor
mov
push
jg
aaa
push
ret
fidivrl
dec
cmp
xlat
fwait
subl
adc
leave
and
cmp
imul
push
dec
inc
dec
je
mulb
rcrb
xchg
stos
xchg
clc
test
inc
jbe
jne
mov
inc
js
decl
mov
notl
add
sahf
movsb
gs
rorb
aaa
push
testl
cmp
loopne
je
test
mov
push
pop
imul
mov
sbb
cmp
cmp
fs
xorb
push
mov
push
imul
fmul
inc
cmp
call
xchg
stos
mov
hlt
fs
xor
clc
or
push
or
movsb
int3
ret
mov
cmp
stos
mov
add
fdivrl
mov
jne
xlat
xchg
rcrl
xor
push
cmp
push
imull
loopne
stos
and
bound
add
gs
gs
out
cld
ja
loope
inc
push
sbb
ret
les
push
lret
add
inc
mov
lahf
popf
in
push
push
mov
scas
xchg
int3
fistpll
cmpxchg
mov
lret
es
cmp
adc
jae
sub
int
pop
lahf
out
or
ja
adc
mov
sub
ss
out
mov
aam
add
lahf
adc
xchg
iret
and
xchg
orb
mov
sbb
ret
mov
addl
xchg
test
mov
cmp
scas
das
imul
je
mov
lea
test
hlt
iret
insb
xchg
jp
add
mov
jb
cmp
mov
aaa
arpl
ret
add
inc
mov
sahf
adc
bnd
repnz
inc
xchg
in
jp
ja
xchg
dec
add
int3
fmull
inc
adc
push
fcmovbe
ja
fcmovnu
fwait
lahf
scas
add
fucomip
icebp
or
and
mov
xchg
les
ds
mov
sub
mov
dec
xchg
cmp
add
fdivrs
aam
into
dec
lret
mov
and
js
inc
xchg
mov
dec
fxch
sub
mov
call
dec
outsb
loopne
cmpsl
xorl
popa
xchg
stc
add
incl
fdivl
push
daa
mov
out
xchg
xchg
imul
push
filds
push
inc
pop
and
sbb
adc
xlat
cwtl
sub
lret
mov
sti
enter
xor
jo
mov
dec
inc
mov
and
cwtl
dec
push
incl
mov
ret
sti
addr16
add
les
sub
icebp
jns
ljmp
add
ja
inc
pushf
push
or
pop
add
sub
push
mov
inc
filds
fldcw
cmpsl
cmpsb
sbb
ja
xchg
cltd
mov
aaa
add
rcrl
mov
sub
into
push
jge
and
pop
dec
xchg
and
sti
push
loop
loopne
add
mov
xchg
push
sbb
mov
aam
adc
data16
test
jno
cmp
sub
adc
or
inc
mov
sbb
inc
stos
jae
outsb
lods
jo
in
xor
loope
or
fdivr
jmp
fincstp
orl
sbb
fs
lods
xorl
or
gs
inc
call
mov
inc
xchg
inc
sarl
jp
push
jae
xchg
dec
cld
test
cmp
sbb
push
xchg
fsubp
jecxz
inc
pop
js
jge
dec
xor
rclb
and
mov
movsl
add
arpl
dec
outsl
cmc
sbb
push
out
imul
mov
test
jbe
je
int3
pop
pop
call
pusha
jge
pop
jbe
mov
xchg
sarb
out
push
adc
jge
shrl
sti
sahf
test
adc
dec
ficoml
cwtl
scas
adc
xchg
and
ss
loope
xor
pop
adc
rclb
mov
addr16
mov
mov
inc
jnp
sub
and
aaa
inc
push
cli
cmp
sarl
rclb
gs
cmpsl
xlat
pop
arpl
mov
pop
dec
sbb
dec
cld
xor
sahf
add
pusha
push
xchg
ret
repnz
adc
jmp
dec
fmuls
push
ficoml
pusha
je
xchg
aad
mov
pop
call
push
mov
jb
lods
inc
mov
lahf
cmc
jmp
int3
xor
jge
adc
cwtl
mov
jno
mov
movl
mov
call
adc
aam
test
cmp
scas
stc
sub
out
pop
mov
inc
das
test
enter
jecxz
adc
adc
jb
addr16
sub
movsl
int
mov
out
jge
ljmp
and
fmul
xchg
mov
mov
clc
jl
out
mov
and
fsubrs
or
mov
xlat
int3
push
pop
inc
fcompl
jns
repz
inc
lret
ficompl
fadd
push
gs
movl
xchg
push
dec
push
lods
shlb
add
pusha
scas
jae
out
jns
mov
adc
insb
fisubs
lods
cs
cmp
push
xchg
jg
nop
mov
je
push
and
push
sti
dec
or
mov
and
or
jecxz
add
nop
js
popf
xchg
inc
dec
push
push
test
jo
mov
enter
and
jne
daa
out
loop
fcom
xchg
fbstp
xor
xchg
or
shl
test
mov
cmp
inc
cmc
jnp
mov
adc
add
fsubrs
xchg
loope
add
add
adc
push
mov
mov
sbb
test
jp
push
dec
push
out
in
lret
sub
adc
sbb
xor
fucompp
adc
xor
out
push
sub
mov
scas
addr16
push
andb
test
lret
mov
mov
sub
cmp
fisubl
stos
les
hlt
dec
stos
arpl
jno
rorl
dec
leave
in
pop
jecxz
lods
push
in
jns
mov
orl
sbb
repnz
push
fxam
icebp
and
lds
xlat
xchg
xchg
sbb
popa
icebp
jmp
mov
pushl
or
out
sbb
mov
popf
pushf
and
stos
fistpll
inc
insl
or
xor
lea
mov
insb
popa
aas
sbb
dec
dec
jmp
addr16
lock
cmp
fldl
ljmp
mov
xchg
inc
and
cld
jno
mov
mov
push
outsb
mov
adc
adc
push
and
stos
xor
lret
lret
fadds
pop
add
dec
jns
inc
popf
nop
dec
bound
divb
pop
rol
or
jecxz
bound
xorl
pop
adc
mov
movsb
fdivl
pop
call
ljmp
push
out
daa
pop
test
outsb
je
dec
cmc
movsl
sahf
cmp
fdivl
and
push
movsb
cmpsb
sbb
out
cmp
xchg
insb
cltd
adc
dec
xlat
cwtl
add
subl
shlb
arpl
sub
mov
pop
stos
sub
mov
pop
ret
sub
in
shl
cld
pop
popf
mov
inc
pop
lret
xchg
mov
sub
lahf
in
mov
lods
sbb
lods
or
sbb
and
lcall
loope
cmp
stos
xor
sub
fisubl
fcmovne
imul
xor
pop
xchg
inc
mov
fs
int3
cmc
xlat
divb
iret
push
lea
in
clc
mov
mov
mov
rcll
loop
inc
mov
xchg
fnsave
out
xor
dec
ret
cmp
xor
sbb
mov
icebp
lods
fsubl
or
xor
in
mov
call
jmp
and
jno
mov
add
push
pop
ror
rcll
adc
pop
mov
out
cmp
mov
push
pop
mov
mov
lahf
mov
push
sub
shlb
mov
imul
insl
cmp
out
or
mov
movsl
int3
or
pop
idiv
mov
cmpsb
pop
lock
xlat
mov
sub
sub
ds
sbb
sub
fldl
mov
push
mov
divb
popa
aam
xor
or
mov
inc
jb
stos
loope
jno
cli
cmpsb
aaa
xchg
dec
iret
add
lahf
subb
push
cmp
jmp
sbb
jb
dec
adc
sbb
sbbb
pop
les
push
loope
push
mov
jl
pop
dec
ja
xchg
aas
pop
dec
je
in
outsl
fstpt
cmp
pop
data16
jno
std
mov
jnp
lods
push
dec
dec
push
jns
sahf
lret
mov
cltd
jb
popf
cmpl
mov
push
call
push
pop
jmp
xor
pop
repnz
sar
cmp
jge
adc
push
fcomps
mov
add
es
pop
cwtl
xor
rorl
add
inc
pop
jnp
cmp
xchg
add
add
nop
or
push
fwait
cmp
and
push
jb
ljmp
je
jns
lcall
ret
adc
or
fwait
punpcklbw
loope
addb
dec
hlt
xchg
insl
pop
add
iret
je
xchg
sbb
ss
cmp
mov
cmp
or
je
pusha
cli
out
aad
pop
lock
icebp
and
loope
fcomps
jle
testb
jge
testb
xor
fdivrl
xor
cmp
xor
push
or
cmc
mov
xchg
cli
mov
or
outsb
dec
jbe
std
xor
push
sub
gs
mov
pop
loope
sub
fmuls
sub
push
mov
lret
sub
iret
add
cmp
out
mov
jnp
mov
fnsave
outsl
or
or
xor
mov
shlb
and
cmp
inc
dec
add
flds
dec
insl
js
sbb
jns
sahf
mov
dec
add
mov
aas
sub
outsb
sub
ret
push
pushf
push
jno
cld
push
jns
sbb
mov
lcall
and
test
inc
push
aad
cmp
out
in
xchg
cmp
aam
popf
adc
iret
in
jg
cmp
adcb
push
mov
jg
movsl
lret
test
in
scas
imul
sub
or
pop
jo
and
mov
inc
pop
inc
incb
mov
into
push
inc
in
and
jne
jge
or
mov
mov
addr16
dec
outsl
std
adc
gs
push
mov
add
dec
out
imul
or
cmp
pop
pop
mov
daa
fadd
notl
addl
or
std
addl
sub
les
cmpsb
stos
dec
and
push
in
xor
pusha
push
je
jp
add
pop
dec
or
ljmp
call
xor
repz
fsts
pop
xchg
call
mov
subb
mov
lahf
push
pop
int3
fadd
fldcw
xor
stos
aaa
enter
push
stos
test
xchg
clc
jns
out
mov
jge
sub
adcl
mov
cld
scas
ror
cli
push
sbb
push
mov
mov
mov
call
push
mov
cmpsb
aas
mov
icebp
lods
xor
xor
xor
rcl
fsubl
jae
fstpt
sti
mov
dec
movsl
inc
dec
pop
cmc
inc
push
mov
rclb
sub
mov
mov
fcom
sub
push
mov
mov
adc
jnp
pop
jae
mov
mov
push
fistl
mov
stos
leave
jae
pop
sub
stos
push
testb
cmp
or
jecxz
add
sub
in
adc
loop
jae
jp
sub
lods
mov
mov
pop
jmp
push
repz
loope
add
inc
gs
pop
out
mov
fisttpl
lods
add
inc
xchg
bound
imul
dec
jae
mov
pushf
in
xchg
mov
lret
out
push
adc
jle
mov
addr16
dec
adc
dec
add
sub
fadds
xor
popf
fsubl
or
cli
test
add
aad
leave
cmp
mov
sbb
jae
add
dec
or
mov
xchg
repnz
out
adc
and
cwtl
lret
and
push
out
mov
sahf
adc
push
fildl
sti
sub
jns
xchg
lahf
sbb
popf
aaa
xchg
xchg
cmc
push
mov
adc
out
xor
and
add
shr
mov
shlb
fsubrl
dec
cltd
aad
insl
mov
mov
xchg
lret
adc
dec
sti
rol
popa
ss
adc
les
sbb
cld
inc
imul
xorb
xchg
int
and
hlt
into
repz
pop
xor
cld
mov
int3
jmp
sub
movsb
sbb
xadd
add
push
lock
shrl
out
inc
jne
mov
and
ja
sbbl
lods
and
sbb
cmp
mov
sbb
xchg
je
cmc
fnsave
jle
push
adcl
stc
adc
jb
jecxz
js
lock
ljmp
jge
pop
push
fcomip
nop
push
xchg
sbb
arpl
call
mov
inc
jnp
pop
mov
scas
or
outsb
jb
sub
adc
add
xor
jmp
cld
sub
rorl
cmc
and
lock
adc
mov
pop
mov
dec
shll
cmp
stos
les
sub
test
add
mov
out
add
test
aad
pop
xchg
pop
sbb
mov
or
add
fcomp
mov
movl
insl
cli
adc
push
scas
jp
pop
ja
sahf
repnz
inc
pop
mov
xchg
test
cmpsb
mov
ds
lock
mov
fidivrl
ss
and
cld
aad
shlb
lret
cmc
add
and
dec
pop
dec
arpl
es
pop
inc
pop
fisttpll
ficoml
int3
add
test
jb
adc
push
into
push
enter
shll
pop
icebp
sti
add
inc
popf
mov
in
cmp
scas
iret
lds
sub
cmpsb
and
std
sub
in
in
add
sbb
lods
push
push
in
add
jp
jo
pop
aad
and
sbb
adc
fcoms
sbb
and
jns
xlat
loopw
cmp
cmovle
lea
aad
loope
jnp
out
jo
xchg
lcall
adc
and
inc
pop
in
lcall
mov
movsb
cmpsl
pushf
pop
leave
jo
cmpsl
orl
shrb
ljmp
cmp
sub
imul
pusha
call
adc
popa
movsl
sbb
push
inc
sub
xor
xchg
xchg
xchg
jns
pop
cld
dec
lret
sbb
dec
xchg
xchg
sbb
daa
push
daa
pop
roll
popa
test
jp
cltd
outsb
sbb
sbb
cmp
push
nop
mov
mov
call
xor
push
inc
mov
lahf
lahf
movsl
mov
cwtl
dec
das
std
std
inc
mov
gs
jle
notb
dec
jl
xchg
jbe
popa
movb
xchg
jge
or
sti
in
pop
aaa
push
jmp
mov
in
mov
jp
insl
insl
ss
xchg
lcall
popa
sahf
push
fidivrl
push
inc
lcall
lods
sbb
adc
pop
mov
sub
out
icebp
aad
int
dec
ds
in
fdivr
xor
adc
cmp
sti
push
fidivrs
add
orb
push
sbb
or
fnstsw
and
sub
pop
mov
in
jge
jp
add
fwait
outsl
popf
inc
mov
out
or
sahf
cmpsb
and
loope
in
add
popf
inc
mov
in
jge
outsb
test
imulb
push
add
frstor
cld
mov
fidivl
inc
sub
out
xchg
push
int
dec
nop
mov
add
xor
stos
pop
jae
inc
loop
mov
xchg
ret
stc
shlb
addr16
and
dec
adc
jb
pop
rcrl
rorl
jp
add
repz
ljmp
pop
rol
cld
lods
fwait
pusha
leave
adc
addr16
mov
insb
cwtl
mov
inc
out
cmp
xchg
stos
aam
jp
and
in
movsl
out
sub
jmp
jl
dec
push
stos
fdivrl
fisttpll
addr16
push
dec
into
cmpsb
cwtl
movsl
add
mov
movsl
lock
popa
stos
mov
ljmp
mov
test
xchg
lods
lret
or
jne
mov
imul
mov
or
pop
xchg
imul
xlat
test
enter
imul
xor
sub
out
jb
andb
es
jb
or
mov
mov
lods
fildl
hlt
in
dec
jle
push
push
mov
xchg
std
and
stc
lahf
pop
xor
nop
int
notrack
lds
sbb
mov
xchg
subl
in
xor
inc
inc
jb
sahf
jmp
fwait
add
lods
xlat
andb
rcrl
mov
jmp
jg
sub
adc
mov
movsb
mov
mov
test
sarl
xchg
push
andl
adc
or
dec
push
lahf
jp
or
adc
sbb
jmp
cwtl
cltd
jne
aad
add
jno
add
clc
jae
or
cmp
aam
push
xor
aam
fcomip
mov
jmp
mov
arpl
sti
pop
cmc
ficoms
std
and
lock
mov
dec
dec
dec
call
lahf
lea
les
int3
lahf
or
jle
inc
pop
dec
cmp
dec
dec
fwait
xchg
add
or
aaa
mov
jle
mov
pop
pushf
fsubs
fwait
clc
xor
lcall
jns
mov
popa
pop
mov
lret
inc
sub
dec
jb
jmp
repz
test
mov
shr
push
lcall
test
jmp
scas
xor
pushf
out
loope
test
mov
repnz
push
fstpt
inc
jmp
push
cmpsl
in
scas
popa
xor
add
bound
inc
and
pusha
cmpl
in
inc
mov
ret
lahf
inc
push
les
mov
xchg
insl
adc
and
lcall
mov
inc
cmp
jns
jl
adc
outsb
xor
pop
jbe
popf
sarb
mov
pop
fwait
adcb
and
jno
push
lret
nop
pop
lret
mov
push
or
ljmp
mov
imul
imul
std
cltd
outsb
jns
sbb
or
mov
adc
lahf
mov
sbb
lods
mov
pop
lock
lods
aas
pop
je
popf
je
popf
cmp
jo
sub
test
mov
sti
les
lock
das
jns
fmull
cs
mov
mov
mov
and
jae
and
push
jae
and
inc
mov
into
stos
mov
outsb
mov
aaa
mov
pop
jbe
test
mov
mov
insb
or
and
xor
negb
mov
ljmp
push
inc
add
in
fsub
sahf
gs
jnp
sub
outsl
scas
push
inc
fwait
xlat
sahf
icebp
sub
and
jl
mov
fsts
sub
int
or
les
xor
jmp
mov
push
outsl
mov
sbb
mov
push
mov
mov
dec
adc
fldenv
or
pop
xchg
push
jns
or
or
ds
dec
mov
mov
or
cmc
sub
shll
pop
push
jae
lods
xor
mov
adc
or
mov
ret
mov
mov
int
out
aam
insl
inc
sarl
mov
xor
mov
cld
iret
mov
xor
mov
fcompl
xchg
mov
orps
insb
inc
ret
mov
cltd
mov
push
cmpsl
xchg
nop
movsl
fcompl
insb
mov
lret
inc
mov
mov
jmp
data16
ss
xchg
daa
pop
ss
xchg
mov
fnstcw
cmpsb
sahf
jae
jae
cmp
and
mov
jno
ss
and
loop
outsl
sbb
loop
jno
fsubrl
insl
sbb
ds
add
pop
jno
shlb
xchg
mov
push
xchg
mov
aaa
das
out
pop
lret
push
insb
push
xor
xor
push
ror
ret
ljmp
in
fmull
movsb
aam
iret
repnz
adc
xor
les
mov
xchg
push
jnp
dec
pop
lds
xor
stc
jns
push
outsl
push
or
fstpt
cmpsl
idivb
sbb
pop
nop
jl
and
push
or
or
sub
adc
mov
movsb
xor
sbb
and
imul
mov
sbb
sub
jb
mov
pushf
jae
jns
stos
loop
jge
mov
div
or
xchg
test
data16
lods
stos
ds
ljmp
dec
test
cmp
fcompl
nop
jb
insl
out
jno
gs
jp
outsb
loope
jle
outsl
xor
push
lea
fistps
xchg
test
lahf
jl
mov
scas
sub
lds
lods
out
lahf
xor
in
cmp
fwait
into
gs
sbbl
xorl
mov
xor
icebp
fcomps
test
insl
xchg
cmp
xchg
or
pop
inc
fistl
sete
jge
ljmp
js
andl
lret
adc
sub
repz
sub
jecxz
jmp
sti
out
push
xchg
xchg
rol
lock
rcrb
pop
lret
pop
data16
pop
hlt
xchg
jp
es
mov
add
sti
lods
mov
and
and
imul
push
dec
xor
mov
pushf
pushf
cwtl
js
movsb
jge
ljmp
pop
pusha
negb
sbb
lea
cmpsl
add
insb
mov
cmpsb
dec
push
iret
out
fisubs
cmc
pop
and
int
push
mov
xor
or
jg
sbb
jbe
xchg
sub
mov
popf
cs
and
fstl
je
adc
scas
leave
mov
aad
scas
adc
sbb
scas
mov
mov
insl
xor
xor
cmp
iret
stos
push
cmp
add
std
and
adc
jne
mov
pop
jno
out
add
repnz
ljmp
lods
into
dec
cmp
arpl
lret
sti
mov
lods
into
jmp
push
test
and
adc
xor
and
sbb
das
lret
movb
pop
les
xor
mov
push
and
jg
xchg
add
jbe
fisttps
cmpsb
sbb
mov
testb
mov
icebp
cmp
jg
test
jbe
stos
sbb
dec
or
mov
fsts
out
jp
adc
dec
mov
out
pop
mov
lods
rcr
jb
jmp
xchg
std
shrl
into
das
in
stos
pop
add
repz
scas
cltd
pop
jne
add
sbb
push
jg
dec
sub
push
dec
xchg
add
jo
sub
dec
mov
cmpl
xor
stos
mov
ficoms
sahf
test
je
mov
adc
add
shrl
push
aas
cmpsb
or
dec
push
test
in
inc
lret
arpl
arpl
incl
jno
lcall
cmp
fwait
or
negl
lcall
imull
cld
dec
mov
outsb
mov
clc
sbb
xor
adc
sub
pop
nop
fs
sbb
and
mov
xchg
and
stc
pushf
push
jge
pop
cwtl
loope
fdivr
adc
gs
cmp
cli
push
or
mov
outsb
mov
fdivl
sar
pop
fs
into
inc
and
or
out
jnp
xchg
std
adc
aaa
jp
mov
or
push
testb
cld
pop
dec
aas
jmp
cmpb
pusha
mov
jnp
add
add
pop
ss
out
and
orb
and
repnz
adc
rcl
adc
xor
mov
mov
add
pop
adc
gs
outsl
mov
mov
fnstenv
sub
jne
pop
ret
mov
xor
mov
fwait
dec
in
negb
or
sbb
cmc
fwait
lret
cmp
ljmp
ja
out
das
adc
loop
ja
inc
xor
outsw
je
sbb
pop
jb
mov
fimuls
call
and
lret
xchg
insb
add
js
xchg
clc
pop
add
in
shl
ds
and
or
cs
pusha
test
mov
pusha
int3
outsl
out
sub
inc
out
fdivl
cmp
mov
in
sub
notl
js
dec
pop
orl
fldt
rcr
cwtl
mov
sbb
xchg
incl
out
jbe
mov
fimull
je
int
xchg
fisttps
in
test
mov
mov
fdivl
incb
popf
sub
mov
cli
nop
mov
out
pop
sbb
sti
push
scas
inc
jae
jle
in
cmp
adc
outsb
sbb
gs
jne
or
mov
leave
mov
out
pop
adc
sahf
lock
and
sub
lgs
es
jnp
ret
xchg
iret
cmp
sti
or
xchg
sub
leave
cmp
sbb
xor
xor
xchg
pop
cmc
jecxz
sbb
inc
daa
outsb
or
mov
outsl
subb
sub
lret
fwait
pop
inc
ljmp
push
cmp
rorl
outsb
cmpb
jge
inc
add
dec
dec
ja
in
loopne
push
cwtl
inc
in
push
sbb
mov
fsubrl
fcompl
sub
es
jmp
add
imul
mov
mov
call
mov
push
adc
adc
out
or
or
dec
movsb
adc
push
mov
jmp
mov
mov
push
xchg
ret
jbe
ret
pop
cmp
lods
sbb
test
xchg
insl
leave
jge
adc
adc
xor
and
lret
xchg
sub
jmp
loope
add
bnd
sbb
add
rcrl
and
xchg
xchg
aam
xor
std
pop
fsubrs
pushf
mov
xchg
cld
mov
adc
push
inc
or
mov
xlat
lea
ret
jmp
pop
jl
fistps
mov
addr16
aaa
push
out
inc
call
mov
dec
test
dec
and
mov
pop
xor
sbb
jbe
stc
mov
cmp
ljmp
idiv
add
mov
das
popa
shl
aad
pop
sarl
sbb
xor
push
aas
adcl
data16
std
sahf
inc
mov
mov
cwtl
lds
and
adc
mov
test
jl
pop
lods
insl
arpl
scas
fdivrs
popa
xor
adc
cmp
lds
sbbl
xor
and
ja
sarl
aam
pop
rcrl
adc
cmp
fisubl
cli
sbb
mov
mov
push
frstor
daa
outsb
push
in
stc
dec
int
sar
push
jecxz
push
sub
cltd
pop
jb
jo
sub
pop
cmpsb
movsb
push
xor
imul
dec
push
sbb
inc
insl
pop
add
mov
fs
mov
stos
xor
mov
sarb
out
shlb
loope
lea
aam
rolb
push
iret
mov
and
or
jge
mov
sub
les
cmp
cmp
mov
push
sub
mov
inc
mov
fbld
lea
aam
stos
dec
stos
gs
xchg
sub
mov
jae
pop
loop
cwtl
mov
rorl
pop
cwtl
rorl
xchg
outsl
std
outsb
ror
push
xchg
mov
push
xchg
jnp
mov
lret
outsb
ficomps
pop
mov
mov
in
push
in
sti
dec
lods
test
mov
sbb
out
push
xchg
ljmp
in
decl
hlt
dec
sbb
jb
and
dec
inc
lock
cmp
fidivs
jne
jmp
xchg
aas
test
push
adc
aad
mov
mov
clc
dec
push
mov
pop
or
inc
sbb
ret
jg
stc
test
pop
inc
inc
cmp
xchg
cli
and
sbb
dec
cmp
dec
mov
test
ret
jge
inc
fldl
xchg
leave
outsl
ret
mov
icebp
adc
inc
adcb
out
fmull
leave
push
and
xor
into
scas
push
pushf
rcrb
mov
add
pushf
mov
int3
cmpsb
dec
ret
push
xchg
xlat
add
xorl
into
loopne
jle
pop
dec
pop
jg
mov
mov
adc
shll
mov
mov
sahf
cs
lret
stos
or
fsub
mov
cmp
out
and
inc
or
mov
cmp
jae
jno
test
cmp
icebp
dec
stos
inc
imul
jo
mov
lods
iret
rcr
pop
push
pop
jns
lret
imul
gs
inc
and
lea
jp
inc
or
lahf
out
aaa
lret
pop
push
xchg
or
repz
or
cmpsb
sbb
lods
inc
arpl
add
ljmp
rcll
insb
xlat
add
cld
mov
mov
lods
sbb
xlat
popf
or
in
add
and
stos
xchg
mov
dec
stc
mov
mov
int
adc
test
inc
xor
mov
clc
push
lcall
stos
pop
xor
jae
pushf
mov
jl
call
mov
adc
popa
mov
pop
imul
xchg
pop
jmp
adc
jno
mov
cmc
fpatan
inc
sbb
popl
inc
xchg
xchg
sbb
mov
xor
cmpsb
stc
add
push
mov
loopne
dec
mov
aas
mov
in
mov
popa
ljmp
stc
push
dec
add
push
test
pop
sahf
mov
iret
es
or
mov
sbb
popf
add
jb
pop
xorl
and
push
gs
loope
cmp
addr16
pop
mov
fistpll
mov
sub
stc
ret
in
sti
push
aad
lcall
in
jp
lahf
fiadds
push
pusha
fldenv
mov
shrb
cld
mov
push
mov
cmp
cwtl
mov
ret
int
sub
dec
jo
insl
ret
xchg
pop
mov
jl
stos
pusha
cmpsl
faddp
cmp
sarl
inc
imul
test
lahf
clc
sar
push
mov
rclb
repnz
jb
je
nop
not
jp
mov
xor
inc
sub
add
fst
pop
jnp
pop
push
cmp
inc
hlt
sub
add
pop
pushf
sti
jmp
out
shlb
and
int
hlt
cmpsb
movsb
shl
and
enter
xor
xchg
subb
jbe
pushf
jne
lock
mov
pop
adc
shlb
ljmp
cld
cli
mov
push
jmp
popa
pop
dec
je
push
leave
push
inc
sahf
out
push
lods
mov
add
ficoms
aaa
adc
mov
test
jge
mov
cmpsl
xor
popf
cmp
scas
mov
xchg
jo
sbb
fldpi
mov
pop
pop
cltd
shl
mov
lods
loope
imul
and
pop
xor
aaa
cmc
inc
adc
push
cwtl
out
xchg
nop
es
push
fwait
jecxz
mov
push
lds
fmull
in
and
mov
icebp
int3
mov
sbb
push
mov
dec
mov
add
mov
jno
xor
dec
mov
jnp
push
cmc
loope
and
leave
popa
sahf
aas
xchg
shll
movsl
jmp
mov
adc
mov
jmp
ret
push
lcall
pop
stos
push
sub
sahf
add
or
or
push
js
in
inc
mov
push
insb
or
xbegin
cmpb
sub
repz
das
mov
popf
push
adc
pop
pop
push
int
cld
mov
inc
out
mov
icebp
lods
int3
pop
sarb
hlt
fsubl
fistl
fdivr
push
lret
jmp
inc
imul
jno
push
inc
lock
or
pop
nop
sar
and
and
mov
adc
lea
in
call
iret
mov
clc
add
jecxz
and
mov
gs
mov
inc
xor
dec
ret
in
leave
clc
adc
test
popf
gs
xor
out
xlat
shrb
aad
mov
std
push
ret
cmp
push
push
icebp
inc
ss
xor
cmp
out
and
adc
add
test
pop
mov
cmpsl
scas
xlat
rcrb
cmpsb
clc
dec
insl
push
cmpsb
xchg
push
push
pop
lahf
loop
enter
in
push
fwait
mov
js
shll
xchg
cmp
mov
and
frstor
es
sbb
test
xor
sbb
add
xchg
fsubr
xchg
or
data16
insl
stos
and
sti
mov
ret
xor
sbb
pop
adc
cwtl
data16
aaa
in
jo
push
and
mov
test
push
pop
pop
adc
push
sbb
adc
xchg
and
cli
pop
fcoml
xchg
push
fnsave
inc
int
sarb
xor
fs
cld
xchg
test
test
mov
stc
aad
das
push
insb
jecxz
enter
jns
and
mov
sub
test
loope
or
pop
push
mov
adc
test
das
mov
bound
and
popf
inc
mov
push
push
icebp
add
adcl
mov
aam
fwait
cli
mov
add
fldenv
outsb
lahf
in
movsb
pop
pop
or
sub
push
idiv
sub
inc
push
pop
cmp
xchg
out
ljmp
sbb
xchg
test
in
jmp
mov
cmp
push
fisubs
mov
nop
fistps
pop
lods
movsl
daa
jg
pop
leave
adc
inc
and
mov
or
dec
push
mov
dec
call
dec
data16
and
xchg
add
cmp
loopne
jbe
lcall
gs
mov
movsl
outsl
andl
dec
aas
icebp
and
mov
pushf
and
xchg
divb
or
sub
mov
insb
fsubrl
int
js
or
test
pushf
inc
repnz
jb
mov
fisttps
leave
sub
cltd
jnp
repnz
push
lcall
je
inc
test
in
cwtl
test
aad
bound
imul
fcomps
cld
add
std
xor
fyl2x
inc
mov
scas
xchg
das
dec
ljmp
add
inc
fnstcw
push
push
fs
add
inc
jle
not
xchg
mov
xchg
fisubl
mov
or
dec
pop
fs
push
xchg
stc
fsubl
sub
pop
fs
or
xchg
addr16
pop
sbb
jns
lret
call
clc
icebp
jmp
xor
fdivl
push
nop
pushf
das
mov
jmp
sub
push
pop
aaa
xchg
pushf
sbb
fcomp
fldcw
pusha
mov
xchg
sub
cwtl
call
out
jnp
dec
loope
jne
sub
fs
and
cmp
push
pop
mov
pxor
dec
adc
cli
lret
sbb
imull
xlat
add
loope
fucom
mov
sbb
xlat
inc
sub
inc
mov
mov
or
aaa
mov
dec
mov
jl
mov
mov
and
mov
mov
jl
std
mov
mov
call
daa
pop
call
pop
sbb
jl
mov
hlt
sbb
and
movl
inc
je
xor
jns
and
sbb
sti
mov
push
aad
xor
lods
dec
fsts
je
sub
repnz
sub
push
test
in
push
fdivrp
lret
fistps
add
lods
icebp
jbe
aaa
mov
xorl
mov
mov
stos
sub
pop
int
test
faddp
or
pop
arpl
pop
add
or
and
push
and
mov
roll
mov
jle
mov
js
cld
repnz
test
jo
popa
mov
movl
enter
pop
adcl
int
mov
les
insl
aad
test
mov
xchg
hlt
cmpsb
stos
mov
add
push
mov
inc
push
push
enter
sbb
stc
scas
mov
roll
subb
pop
xchg
pop
mov
imul
mov
stc
xor
dec
dec
movsl
aam
daa
sub
inc
mov
lds
dec
insl
aam
shlb
cwtl
std
mov
jg
fsubrs
cmp
lret
in
lret
rcrl
iret
sbb
movsb
mov
inc
mov
test
iret
cmp
in
inc
fisubl
push
mov
int
ret
cmp
jae
cmp
mov
jb
sti
xchg
or
adc
jecxz
std
leave
les
lods
mov
and
roll
cs
sub
push
test
pop
lock
in
mov
scas
test
push
push
xchg
mull
jecxz
stos
push
adc
cmp
adc
xchg
jno
sbb
xchg
sahf
arpl
xchg
add
adc
mov
xchg
ret
adc
insb
sarl
test
add
add
adc
scas
pop
jle
inc
rcl
jp
repz
push
add
push
push
sbb
lods
sub
icebp
sbb
add
pop
push
fcoms
std
loope
or
and
ret
je
push
mov
pop
xchg
shlb
andb
cwtl
fnstsw
lea
scas
cmp
shlb
aam
sub
add
mov
mov
fwait
out
mov
movsl
jb
push
lret
fsubrs
add
lret
pop
rcr
pop
sub
and
push
xor
sbbl
mov
jl
outsl
adc
mulb
fwait
mov
popf
push
outsb
js
mov
lret
scas
jl
fsub
enter
inc
pop
es
aas
neg
pop
and
xchg
mov
fists
arpl
ret
push
sbb
loope
jg
lcall
aad
pop
push
push
push
dec
xor
mov
cmp
cli
xlat
imul
pop
lods
or
inc
fists
fmul
fisubs
cli
pop
cli
out
popf
dec
cltd
jle
cmpl
xchg
call
inc
sbb
ja
mov
adc
out
add
sbb
xor
pusha
mov
push
mov
rcrl
inc
out
fwait
xchg
and
dec
mov
pusha
mov
mov
xchg
dec
mov
mov
in
sbb
outsb
mov
sub
adc
shrl
cmp
push
addr16
pop
sbb
arpl
sub
pusha
xchg
mov
in
dec
jecxz
xchg
mov
sbb
shll
adc
ret
mov
and
sbb
push
mov
and
incb
inc
push
inc
lret
jle
and
dec
xchg
mov
movsb
xchg
ds
mov
adc
testl
dec
rclb
jne
sbb
lods
fcomps
mov
mov
aaa
arpl
dec
idivl
mov
push
lcall
pop
push
pop
cmpsl
xchg
hlt
testl
mov
in
jne
addr16
jb
jno
sub
mov
in
and
sahf
pop
sbb
pushaw
mov
sub
inc
add
data16
and
xor
xor
dec
rcrl
push
or
mov
mov
mov
mov
cmp
loop
inc
ss
xor
and
mov
adc
mov
repz
cmp
add
jne
repz
je
sub
push
push
lods
inc
inc
push
rorb
cmc
mov
jns
movsl
or
jg
lahf
push
jecxz
pop
cmp
lcall
push
rcll
dec
addr16
fmull
mov
xchg
incb
lahf
cmp
mov
insl
sti
cli
sarb
jle
sub
fdivs
fiadds
mov
addb
sub
xchg
mov
add
sbb
jnp
jmp
ret
mov
lea
push
push
mov
imul
gs
add
stos
jle
test
sbb
inc
jmp
fmul
sbb
mov
mov
lods
int3
mov
scas
stos
sub
hlt
aam
bound
xor
mov
and
push
ror
xchg
add
cmp
arpl
mov
ja
pop
pop
rolb
or
loope
dec
push
jl
jecxz
mov
xchg
mov
mov
mov
popf
insb
stos
das
inc
jmp
aas
or
xorb
imul
icebp
pop
data16
push
mov
addr16
xor
sbb
mov
clc
mov
ljmp
stc
test
jg
add
imul
aam
jae
ret
add
cmpsl
lcall
incb
inc
jns
push
mov
and
jp
lods
fidivrl
adc
sub
fs
and
sbb
push
push
test
jno
dec
cltd
jg
inc
ds
cltd
xchg
scas
sbb
inc
scas
rolb
or
sbb
daa
sub
or
and
popf
insb
es
cmp
pop
add
mov
xchg
add
nop
ljmp
ss
and
shll
roll
jg
sub
out
in
add
pop
faddl
and
cmp
jmp
mov
out
nop
pop
cmp
aam
mov
cmp
xlat
outsb
push
sub
int
xchg
jo
fwait
dec
das
in
xchg
cmp
arpl
rcrb
repz
test
or
stos
mov
xchg
mov
lcall
dec
gs
fcmovbe
xlat
ficoml
or
pop
xchg
es
or
jb
pop
mov
push
fwait
adc
xlat
fistps
fistpll
push
div
iret
push
ja
aad
pop
add
cmp
ret
push
add
popl
test
dec
or
data16
fwait
adc
dec
mov
push
pop
lods
cmp
jmp
insl
hlt
mov
or
push
sar
outsl
dec
push
and
jl
loope
jno
ret
mov
jl
aam
jge
jp
push
sbb
and
ljmp
sbb
and
push
lret
leave
je
jbe
and
jmp
pop
mov
bound
push
add
sbb
cmovs
addr16
add
call
jmp
shll
cli
mov
dec
sub
imul
push
in
jb
push
rcrl
dec
pop
mov
aad
test
sbb
sub
adc
outsb
mov
dec
lahf
xchg
add
aam
or
cmpsb
jmp
or
cmp
repnz
mov
mov
jb
sbb
lods
movsl
mov
jmp
xlat
pop
adcb
sbb
xchg
mov
enter
dec
outsb
cwtl
mov
jp
hlt
cmp
pop
testb
push
stc
push
addr16
repz
mov
ja
and
out
dec
cmp
jmp
adc
mov
rcr
sbb
add
mov
cmpsl
stos
pop
in
fbld
shrl
xchg
push
lds
and
neg
enter
mov
jb
and
popf
jns
addr16
add
pop
shlb
xchg
mov
push
xchg
iret
addr16
das
fcmovb
aad
sarb
inc
pop
icebp
clc
je
adc
popf
ret
rcr
stos
sbb
out
push
cmp
push
and
data16
xchg
jo
gs
sbb
pop
xor
addr16
test
sbb
mov
cmp
jnp
cmpsb
fstpl
pop
cmp
call
adc
xor
fwait
push
sbb
sub
leave
mov
pop
shll
dec
jg
ror
orl
push
xchg
sbb
rcrb
cmpsl
mov
movsb
mov
jo
leave
jno
jge
add
ss
and
add
jbe
sub
in
scas
adcb
pop
jae
ja
jnp
mov
mov
movsb
sahf
or
ret
xchg
mov
pop
mov
cmp
push
lds
xor
or
movsl
das
sub
ss
int3
pop
sahf
jl
cmp
int3
adc
out
xor
sbb
mov
add
sub
nop
jl
popa
mov
lods
xlat
jae
mov
das
out
arpl
dec
sar
shufps
cli
or
mov
mov
fwait
adc
and
pop
sbb
dec
daa
js
xor
pop
xorl
std
test
sti
push
cmp
pop
and
fwait
or
repz
adc
pop
pop
call
or
addr16
pop
mov
popa
push
cmp
xor
cmp
jp
mov
std
mov
dec
sbb
outsb
adc
sub
sbb
int3
adc
cwtl
sbb
movsb
inc
jecxz
jmp
adc
xchg
imul
pushf
push
jo
ja
mov
mov
into
lcall
les
fcompl
call
add
pop
pop
sbb
das
ficoml
or
sti
addr16
fsubrl
into
mov
pop
jnp
cli
enter
xchg
sete
sbb
clc
inc
out
pop
in
xchg
pop
push
aam
arpl
add
vmovdqu
push
out
mov
push
out
loop
imul
and
sbb
sar
pop
ds
lret
lds
call
loopne
test
testb
mov
lea
add
push
pop
dec
aas
jae
mov
pop
and
jecxz
cli
mov
fists
jmp
out
xor
dec
or
sbb
dec
js
mov
out
incb
push
out
sbb
mov
mov
pop
loop
dec
dec
xchg
dec
dec
inc
addr16
mov
push
mov
push
jle
js
popa
xchg
inc
stc
cmpsb
sbb
out
add
adc
popa
aas
sub
stc
out
xchg
cmpsb
pushf
lods
or
mov
cwtl
and
add
movsb
push
dec
inc
jmp
cld
test
and
aad
mov
scas
ret
call
in
xlat
mov
pop
sbbb
xor
jge
ljmp
popa
and
pusha
jge
nop
arpl
dec
or
cmpsl
cltd
stc
dec
push
cmc
testl
fimull
xchg
outsl
dec
or
inc
out
jno
xor
jae
hlt
mov
ljmp
sbb
sbb
testb
add
out
rolb
test
cmp
fdivs
pushf
dec
movsl
cmp
aad
jle
seto
cli
cmp
fcoms
push
sub
cmp
ljmp
jl
movsb
sbb
and
inc
dec
xchg
test
imul
stos
mov
mov
hlt
mov
mov
inc
and
jb
push
aaa
dec
and
push
subl
pop
inc
inc
and
cli
cmp
frstor
je
mov
lcall
pop
dec
add
ret
sub
cmp
push
lcall
and
sbb
adc
adcb
fcoms
dec
aad
test
icebp
jp
adc
data16
add
pop
loopne
cli
jmp
inc
mov
lea
sbb
ljmp
sub
ret
add
test
out
adc
cltd
test
mov
mov
jne
dec
repz
std
int3
into
cmp
addr16
jl
int
pop
xchg
rclb
xchg
stos
pop
mov
mov
fs
push
addr16
mov
das
and
pushf
jne
loopne
dec
add
mov
lcall
fldt
adc
inc
aas
push
and
xor
testb
jo
cmp
icebp
test
sbb
clc
jecxz
fnstenv
fmuls
xor
pop
mov
jbe
std
ret
pop
push
out
dec
inc
sarl
cld
lea
sbb
test
lret
cmpsb
sahf
xchg
cmp
stos
sub
dec
dec
push
or
lea
dec
add
js
lret
dec
aad
mov
xchg
jns
imul
mov
jo
cld
lret
xchg
imul
push
gs
pop
rolb
or
adc
mov
push
stos
div
jge
inc
dec
push
dec
mov
push
mov
dec
int
and
mov
addr16
fs
xor
add
lods
negb
aad
sarl
fsubl
les
mov
test
outsl
scas
mov
js
rcrb
andl
add
sub
pop
nop
or
sub
dec
ficoml
cmp
sti
repz
dec
push
inc
mov
mov
inc
call
ficoml
adc
lds
push
jg
pop
or
add
inc
dec
aam
adc
test
movl
pusha
pop
iret
inc
dec
adc
hlt
mov
test
lods
lret
push
aam
pop
popa
adc
mov
pushf
push
icebp
in
push
mov
adc
xor
fcmovb
test
arpl
jl
mov
mov
push
push
jg
or
pop
push
cwtl
loope
popa
jne
mov
rcl
pop
mov
push
jl
fidivrl
movsl
xor
orl
jl
int
lods
pop
lods
daa
lods
push
cmp
xlat
xor
cmpb
adcl
arpl
xchg
or
lods
mov
and
insl
xchg
cli
cmpsl
shrb
shll
push
pop
sub
sbb
std
aam
mov
sub
dec
movb
pop
addr16
and
inc
pop
aad
fimull
popa
hlt
mov
cwtl
add
jne
sub
mov
sbb
add
or
leave
mov
mov
xchg
addr16
sti
ficompl
and
push
movsb
sbb
sub
mov
xchg
adc
sub
mov
push
repz
jo
xor
inc
lods
popf
addl
adc
mov
add
adc
iret
cld
xchg
mov
ljmp
in
push
push
fdivs
mov
test
cmpsl
push
inc
call
ds
cwtl
cs
clc
mov
pop
jae
jecxz
sti
mov
ljmp
xor
bound
leave
pop
in
sbb
in
xchg
subl
jns
push
or
and
movsl
gs
dec
mov
mov
ret
add
jmp
fists
adc
mov
mov
popf
mov
imull
xchg
jbe
pop
sti
and
gs
mov
adc
js
test
sub
jge
adc
insb
and
fildl
call
jbe
lret
xchg
dec
cwtl
test
cmp
sbb
sub
mov
push
sub
mov
addr16
and
pop
js
mov
int
inc
and
scas
aad
fwait
jo
mov
or
cmpsb
jle
push
jno
outsl
outsw
shrl
in
divb
mov
jo
add
push
repz
push
cmpsb
out
in
xor
lahf
adc
pop
xchg
cmp
mov
fdivs
and
into
jae
push
jae
data16
jg
dec
divb
push
jo
mov
jbe
cwtl
xchg
cmp
aas
and
lods
popa
jno
pusha
lret
int3
and
mov
fidivrs
xor
lcall
faddp
sbb
ret
mov
jmp
fsubr
rorl
jo
pushf
cmp
push
fsubs
fadds
push
mov
js
add
or
pop
stos
pop
mov
ror
in
pop
and
mov
mov
xor
and
in
in
popa
imul
inc
mov
loop
sub
push
call
hlt
or
repnz
std
mov
aas
jbe
jb
and
cmc
inc
cli
adc
std
test
jle
sub
xor
bound
ljmp
lret
jecxz
mov
cmpsl
ficomps
inc
mov
cltd
mov
jecxz
sub
push
lret
stos
cmp
or
xor
push
fcmovne
lds
mov
sub
jno
sar
xchg
xchg
jg
adc
test
jecxz
inc
in
test
or
mov
nop
fwait
pusha
cltd
sbb
aad
movsl
sti
orb
mov
out
sbb
dec
lods
xor
inc
inc
cltd
mov
insl
fstpl
xchg
in
push
jecxz
push
or
scas
ffreep
sbb
out
adc
scas
clc
xchg
ljmp
loopne
inc
or
fmull
lret
outsb
scas
and
das
icebp
cltd
mov
in
push
aas
out
movsl
lods
jmp
sti
dec
lds
repnz
cmp
mul
jno
cmpsb
nop
or
lret
pop
cmpsb
mov
push
int
ja
lcall
sbb
sti
and
mov
das
jno
push
fsub
mov
pop
out
xchg
andb
stos
loopne
sub
ret
or
push
iret
fldl
outsl
mov
repnz
dec
add
insb
divb
pop
fucomp
push
xor
js
stc
movsb
xor
cmp
divl
roll
in
and
cmc
mov
jnp
lahf
pusha
je
fisubrl
xchg
xchg
mov
jns
lret
arpl
cli
out
and
xchg
pop
pop
inc
loope
pop
or
and
data16
lahf
sub
push
xorl
cmpsb
or
mov
repnz
lret
sbb
test
pop
jl
mov
push
sti
ss
or
out
lds
inc
xor
jg
es
push
enter
les
push
movsl
addl
pop
pushf
and
leave
or
pop
stos
test
pop
xor
mov
inc
lods
in
mov
sub
aad
movsb
dec
inc
popf
repnz
adc
popa
ja
pop
mov
adc
insb
inc
push
adc
out
push
mov
pop
lock
jnp
jae
adc
in
jnp
mov
adc
lods
fstpt
mov
adc
jmp
arpl
insl
or
xchg
jno
jae
insb
loopne
pop
dec
xor
adc
jmp
sub
jbe
add
into
pop
inc
dec
cld
adc
imul
inc
call
inc
lahf
mov
jmp
inc
xorl
imul
push
xchg
and
bnd
dec
sub
stos
sbb
adc
out
jg
lods
sti
xchg
push
xor
call
cltd
jo
mov
jb
scas
cmp
jno
rcll
mov
cld
loop
pop
fwait
xchg
iret
sub
mov
movsb
or
fistps
insl
mov
cld
ja
outsb
jge
loop
fbstp
leave
adc
or
jno
mov
jg
push
jecxz
imul
test
fnsave
pop
mov
div
mov
mov
imul
xchg
jp
xchg
aaa
sbb
mov
pop
push
imul
rolb
sub
clc
out
pop
aaa
and
imul
cli
add
dec
pop
fnstcw
xchg
std
xor
fmul
cld
inc
sub
imul
fwait
xchg
orb
mov
popa
sarb
fisubs
std
repz
loopne
mov
sub
aaa
push
jne
mov
pop
test
jl
mov
imul
shr
cli
in
or
test
jp
sbb
and
sarl
sahf
enter
cli
enter
std
and
sub
inc
xchg
lods
jnp
mov
stc
movsl
shl
pop
mov
and
addl
inc
minps
jbe
ds
mov
iret
ficomps
std
in
push
es
cmp
icebp
cmp
daa
enter
adc
test
cltd
pop
je
push
ss
loope
cmp
jno
leave
push
cltd
mov
jecxz
int3
jbe
mov
push
adc
pop
fidivrl
fsts
ret
iret
xchg
mov
test
ss
xlat
mov
rcl
pop
loopne
push
mov
inc
ficompl
fdivrs
pop
repnz
and
mov
mov
in
insb
into
clc
test
es
repz
loop
lods
rcrl
es
pop
add
mov
out
xor
in
xchg
xchg
pop
add
int
xchg
popa
out
lret
sub
mov
scas
mov
xor
ss
ret
push
aaa
adc
inc
scas
jmp
aam
shr
xor
jge
mov
insb
cmp
out
aas
sarb
lock
add
cwtl
and
test
int3
xchg
dec
movsl
mov
push
add
dec
sub
aad
push
dec
scas
insl
scas
adc
mov
pop
adc
cwtl
fisubrl
shrb
xchg
push
ret
xchg
pop
sub
nop
mov
nop
movsb
divl
mov
out
mov
xor
mov
cmc
jge
xchg
mov
shll
push
imul
jbe
push
sub
cltd
pop
addr16
shll
prefetch
or
add
sbb
cmp
jge
test
and
push
outsl
mov
lret
push
inc
mov
sbb
scas
in
gs
push
cmp
adc
popf
leave
adc
cmp
xchg
sub
or
mov
cltd
jp
psubd
sub
imul
sbb
mov
push
xchg
movsb
mov
xor
sub
std
dec
stos
pop
mov
xchg
shrb
and
push
sub
imul
push
cmp
divl
outsl
dec
add
jnp
cmpsl
and
lds
pop
aad
pop
shll
imul
pop
pushf
push
movsb
fs
mov
push
xchg
nop
push
pop
jnp
mov
scas
dec
loopne
sbb
loopne
imul
mov
inc
lods
cmpsl
push
daa
dec
and
xchg
inc
shr
xchg
sub
lods
inc
outsb
fmul
movsl
xchg
pop
shr
fucomp
lret
sub
cmc
cwtl
insl
repz
fs
or
dec
punpckhwd
test
bound
push
icebp
movsb
arpl
sti
push
fstpt
push
add
loopne
lret
mov
dec
shll
adc
shll
add
dec
xchg
push
mov
add
data16
xlat
test
adc
xchg
aas
cmc
jmp
mov
ljmp
int3
lahf
and
dec
push
cmp
xor
inc
fmul
and
sub
jg
lea
mov
iret
mov
and
sub
pmullw
mov
mov
pop
xchg
inc
sti
ja
sub
xchg
lods
push
dec
mov
adc
in
repnz
xchg
testl
into
jne
cmpb
fidivrs
xchg
lods
xchg
cmc
push
inc
xor
xchg
xlat
test
sub
pop
jb
mov
jae
and
int
ja
popf
push
mov
mov
jg
mov
push
mov
mov
push
mov
rorl
pushf
out
mov
xchg
in
test
xchg
cmp
cmp
test
into
ss
xchg
sub
xchg
lret
mov
shlb
scas
pop
stos
inc
gs
repz
rcrb
mov
jl
cmpsb
nop
aad
or
cli
adc
cmpsb
addr16
mov
or
rol
je
xchg
daa
add
mov
push
insb
gs
test
xor
or
and
scas
mov
fs
sbb
fnstcw
ret
add
inc
repnz
mov
ds
aam
adc
or
call
cmpsl
outsb
loopne
push
xor
sbb
sub
inc
pop
cmpsl
mov
imul
dec
pop
adcl
and
scas
add
dec
imul
xor
les
leave
push
cmp
sub
outsb
mov
or
lea
and
pop
rcll
out
add
fnstsw
cmp
jb
out
cwtl
jmp
mov
sbb
fisttps
and
adc
sub
inc
mov
lcall
ja
and
jno
add
shll
inc
xchg
dec
loop
adc
jg
sti
add
inc
dec
jno
jle
or
adc
jge
sub
pop
lahf
dec
or
sarb
movsl
ds
ffree
cmp
or
ror
mov
mov
push
incb
hlt
and
push
inc
and
fadds
and
nop
xchg
adc
aaa
pop
jnp
mov
xor
outsb
mov
xor
sti
push
imul
xchg
dec
aad
shlb
mov
mov
aad
pop
out
push
cld
clc
xchg
test
jge
push
ss
mov
lock
adcl
cmp
jbe
lret
xor
shl
js
leave
mov
pop
adc
pop
subb
out
rclb
mov
bound
call
pop
shlb
sti
jb
jmp
test
push
and
push
enter
and
mov
hlt
std
aad
aas
inc
in
xchg
sbbl
setae
push
adc
stc
inc
mov
fsubrp
xchg
mov
mov
jg
push
js
fiaddl
divb
aas
jge
jne
js
out
mov
jge
push
ljmp
dec
xchg
adc
inc
bound
pop
pop
pusha
push
add
pusha
xor
out
adc
cwtl
outsb
sarl
mov
xor
test
stos
ss
sub
adc
lea
jb
add
pop
mov
lcall
stos
js
or
sub
sbb
aas
xchg
ja
loope
call
xor
and
cmpsl
je
mov
dec
cmp
mov
daa
loop
push
and
push
mov
lds
or
dec
lods
lcall
adc
and
mov
imulb
add
and
push
xchg
dec
negb
in
sbb
inc
push
xchg
xchg
cmpsl
jge
insb
mov
inc
loope
and
addb
sbb
aaa
fldenv
popa
inc
movsl
dec
ret
push
shl
aam
sub
push
leave
clc
jnp
add
and
stc
dec
sbb
sbb
add
in
jns
pop
insl
idivb
nop
aam
in
cmc
ss
stc
dec
cmp
sti
dec
xchg
inc
add
jo
imul
ret
call
inc
iret
pop
cmp
ret
mov
movzwl
fsubl
roll
push
pop
jge
into
sahf
pop
outsb
jb
ljmp
inc
repz
icebp
popa
inc
pop
sub
add
adc
jecxz
fisttpll
cli
xchg
pushf
outsl
and
js
aaa
je
mov
sbb
lock
in
inc
pop
jl
lds
pop
icebp
rclb
and
les
xor
add
sbb
cwtl
xor
mov
and
push
les
outsl
scas
test
dec
lret
das
cmc
sub
jl
negb
add
mov
aam
jp
or
cs
mov
rorb
and
mov
movsb
bound
xchg
ljmp
lcall
cmc
jne
and
outsb
xchg
ror
nop
pop
adc
addr16
or
mov
sbb
cmp
adc
jae
sbb
push
into
testl
mov
xchg
gs
push
cmc
add
lock
loop
cmp
sub
xchg
aas
sbb
lret
push
jle
mov
insl
adc
jnp
iret
bound
sahf
faddl
les
sbb
or
xchg
out
xor
fisubrs
pushf
lea
sub
icebp
xchg
xlat
movsb
cmp
lock
pop
mov
lret
pushf
addr16
test
inc
into
xor
cmp
mov
lods
dec
int3
imul
movsl
popa
orl
fcomp
test
movsb
popaw
pop
and
jb
lret
enter
pop
ret
and
cmp
lods
nop
adcl
xor
inc
mov
ds
jae
mov
adcb
add
lock
mov
add
repz
mov
imul
mov
enter
sti
daa
in
push
outsb
jbe
xchg
hlt
ret
insb
rcrl
lret
cwtl
dec
cmpsb
pop
jno
dec
mov
sub
testb
sbb
cmpsl
mov
cld
les
nop
test
arpl
inc
push
mov
insl
das
loope
and
mov
pop
insb
call
les
outsb
xchg
mov
adc
or
push
hlt
add
cltd
addr16
dec
sbb
fmuls
cmp
push
call
pop
daa
cmpsl
pop
repz
mov
jbe
mov
and
pop
or
ljmp
fs
and
sbb
sub
lret
lahf
mov
das
xchg
sub
or
or
adc
adc
sbb
maskmovq
test
pusha
cmp
movsl
fdivs
sub
inc
idivl
ret
pop
add
loop
add
mov
lods
icebp
popf
arpl
into
fists
sbb
adc
pusha
sub
mov
xchg
int3
xchg
sahf
frstor
dec
and
cltd
or
xchg
jge
in
sbb
les
jb
in
addl
pusha
test
ds
in
mov
pop
inc
push
cmp
mov
or
lods
and
and
std
imul
pop
adc
pop
push
insb
ss
stos
mov
repnz
pop
popa
adcl
xchg
imul
daa
mov
pop
mov
xchg
sarl
shll
and
jbe
fucomp
push
mov
fisubrs
cwtl
out
dec
pop
cmpsb
js
cmp
into
aad
push
iret
dec
scas
incb
sbb
int
mov
sub
stos
fcmovu
and
pop
add
xor
push
dec
clc
sub
test
lea
je
sbb
ss
mov
cmp
ret
lods
pop
mov
pop
imul
ja
sub
or
mov
leave
jbe
dec
cld
and
dec
mov
inc
repnz
jmp
fimull
jmp
push
scas
fdivs
aad
jmp
push
adc
es
loopne
xor
scas
xchg
mov
sbb
jle
inc
popf
cmp
mov
sbb
das
or
ret
leave
lret
jp
sti
testb
lahf
out
add
xor
pop
js
pop
test
jecxz
dec
iret
je
addr16
aas
inc
inc
pop
xchg
jns
out
imul
xor
dec
xor
dec
cmp
shlb
mov
fwait
std
outsb
or
cltd
mov
push
pushf
xorb
jecxz
iretw
cmp
jmp
or
stos
cmp
negb
and
rcrl
adc
ljmp
mov
bound
cmp
jnp
stos
xlat
sub
dec
adc
iret
jnp
xchg
adc
mov
fiadds
mov
or
testb
mov
and
adc
push
push
stos
adc
dec
dec
push
cwtl
out
sbb
jae
sahf
out
jg
adc
sbb
inc
or
push
dec
or
je
xchg
int3
test
or
jl
aas
incl
cld
popf
inc
jmp
lret
mov
test
jg
mov
inc
test
sahf
cli
cmovge
loope
scas
push
adc
dec
jnp,pn
cmp
jae
movsb
xor
jno
mov
std
xchg
fwait
add
les
xor
mov
push
cmp
xchg
add
mov
mov
divl
or
in
jns
add
mov
adc
push
mov
outsb
mov
cli
push
inc
jmp
outsb
lods
sarl
xor
cmp
mov
push
jnp
push
jae
pop
leave
pusha
xchg
les
mov
jge
mov
sub
imul
adc
out
gs
inc
test
push
je
movsb
call
fiaddl
hlt
mov
imul
mov
pop
pop
jno
xchg
js
ljmp
adc
mov
cld
push
pop
popa
and
stc
cmp
jl
in
into
ljmp
cli
push
shrb
xchg
push
xchg
sbb
sbb
data16
sbb
cs
mov
loopne
stos
into
adc
sub
insb
pop
and
dec
lods
mov
ficompl
scas
bswap
pop
add
out
and
aad
or
adcl
test
xor
dec
inc
cltd
push
jno
mov
push
inc
pop
adc
cmpsb
icebp
push
sbb
sarb
and
mov
mov
xor
jg
cmpsb
and
fs
pop
scas
pushf
mov
clc
or
xor
ret
jmp
clc
xor
movl
add
inc
insl
mov
enter
pop
lods
cmp
adc
cwtl
push
or
das
out
jnp
into
movsb
mov
jns
bnd
idivl
leave
inc
jge
std
addr16
xchg
outsb
push
cltd
adc
or
pop
mov
lret
mov
in
xor
cwtl
icebp
lret
mov
movsl
cs
dec
xor
inc
push
mov
in
out
int
xor
adc
fmull
dec
popl
cmp
sti
or
add
push
push
push
rcrl
push
dec
pop
lods
lods
pop
lods
mov
mov
incl
adc
jp
xchg
in
sbb
mov
mov
cs
mov
jns
mov
sbb
sar
rcrb
mov
fwait
stc
dec
incb
push
pop
jae
add
sbb
insl
jge
cltd
mov
shl
bnd
cmp
mov
xchg
cmpsb
adc
mov
or
daa
adc
subl
jmp
inc
repz
arpl
or
inc
ret
fildl
cmpb
loopne
mov
sbb
test
xchg
mov
shlb
bound
inc
insl
lock
xor
icebp
in
xchg
cmp
inc
iret
pop
mov
jbe
jmp
xlat
mov
lcall
out
loop
mov
icebp
pop
or
push
mov
fdivl
lret
out
lods
mov
aad
out
fnstsw
das
jp,pt
or
repz
in
ja
xor
push
cmp
inc
leave
inc
stos
push
repz
lret
dec
mov
test
sub
xchg
cld
sbb
addl
ret
add
mov
pop
dec
loope
jnp
flds
cmpsb
jo
popl
movsl
or
lods
jge
fcmovbe
mov
cli
push
iret
fisttpl
out
xchg
subb
dec
sbb
sbb
or
cli
pusha
scas
out
cmp
loopne
and
mov
mov
push
loop
cli
cmp
or
scas
mov
iret
cmp
push
int
or
aam
insb
jbe
jl
adc
dec
rclb
imul
pop
fmull
xchg
int
hlt
jb
fiaddl
mov
sub
jo
adc
out
jae
lret
sub
fildll
inc
js
sbbb
mov
das
cli
pop
pop
aad
mov
and
jg
mov
xor
mov
or
test
int3
sub
inc
mov
fdivrl
add
add
test
push
sub
out
mov
ja
nop
call
loopne
in
clc
cmpl
repnz
jmp
pop
inc
dec
popa
into
xor
cs
add
es
and
and
scas
popa
fisttps
lea
mov
leave
push
adc
outsb
mov
movsb
xor
push
fnsave
js
sbb
insl
into
sub
in
jecxz
mov
mov
fidivl
mov
lret
inc
inc
sahf
enter
pop
sahf
lret
mov
mov
pushf
sbb
push
push
inc
adc
sbb
bswap
fwait
scas
inc
and
pop
push
fdivrs
and
loopne
pop
repnz
lock
add
lahf
lds
cld
mov
dec
movsb
mov
pop
clc
add
mov
push
ficoms
loopne
xor
aad
mov
das
leave
mov
test
loop
push
push
mov
jecxz
and
movb
inc
imul
jmp
loope
test
xchg
dec
out
and
cmp
int3
test
aas
subb
jne
pusha
inc
imul
push
or
dec
scas
rclb
lds
pop
jle
xchg
popa
addr16
data16
xchg
and
inc
or
jnp
lret
cli
inc
pop
rorb
add
hlt
push
jae,pn
lods
test
lock
dec
lss
sti
push
je
outsl
call
aaa
fdivl
mov
push
stc
sub
ror
in
repnz
sarb
add
aam
and
test
cwtl
aam
jle
insb
push
testb
mov
jbe
mov
push
lret
stos
lds
cltd
dec
sti
sbb
sbbb
jle
dec
push
mov
into
std
xor
jp
shrb
imul
push
mov
subl
xor
stos
xchg
sub
sti
add
jle
faddp
push
jge
mov
leave
or
and
lock
int
bound
pop
sbb
lret
jmp
sarl
cmp
lods
or
insb
push
repnz
rolb
adc
aas
xchg
xchg
xor
loope
xchg
test
or
nop
or
cmpb
loopne
mov
jle
dec
cmpsb
sub
xor
pop
inc
in
lret
out
popf
dec
cmovbe
dec
jg
mov
aaa
mov
outsb
fwait
push
sub
out
sub
jle
cli
pop
xchg
add
dec
js
int3
xchg
jmp
int
ja
test
mov
std
movsl
or
fsubs
es
push
int3
in
xchg
fisttpll
idivb
sbb
inc
aaa
sub
cs
dec
cmp
jmp
fadds
push
mov
mov
or
inc
sar
int
and
add
movsb
cmp
cmp
imul
je
or
jb
clc
add
test
mov
mov
and
sbb
ja
out
jge
mov
sub
shlb
and
jbe
insl
xorl
test
enter
xor
mov
mov
pop
imulb
pop
adc
popf
fnsave
nop
jmp
inc
pop
aam
mov
je
mov
imul
aas
lods
and
xor
jns
add
add
sar
mov
stos
adc
or
push
xchg
out
ds
mov
xlat
xor
jl
js
jecxz
inc
adc
stc
aam
cmpsl
add
repnz
xchg
mov
cs
and
rcrl
in
xchg
test
mov
pop
and
sbb
fs
ret
mov
xor
adc
push
sbb
cs
dec
mov
sti
cmp
loop
push
outsb
xchg
in
sahf
push
xchg
rorl
fsubrl
cmp
add
inc
rclb
sub
mov
icebp
in
fs
add
das
jmp
mov
and
pop
fadd
enter
es
shlb
add
hlt
cwtl
lods
xorl
dec
lock
fsts
push
scas
lcall
pop
lret
psubd
int3
out
mov
jmp
cmc
into
les
adc
fmuls
adc
xor
inc
pop
sbb
das
icebp
les
mov
ret
test
imul
imul
mov
fs
xor
pushf
xchg
ret
xchg
in
dec
sub
pop
and
pop
fildl
or
loope
push
lret
and
jbe
andps
test
fmull
xchg
cmc
cmc
out
mov
push
out
xor
add
push
adcb
bound
jo
cmp
xchg
xlat
cs
jmp
in
cmpsl
jge
mov
aam
mov
push
sti
je
pop
scas
add
and
int3
push
rorl
test
or
clc
sbb
movsb
pop
scas
mov
das
mov
stc
cli
lcall
insb
das
mov
mov
dec
inc
insl
stos
jns,pt
mov
jle
lea
mov
pop
fyl2x
sbb
and
dec
mov
xchg
push
stos
or
in
add
into
sti
orb
movsb
push
dec
adc
sbb
mov
xlat
sub
jmp
jge
ret
imul
adc
or
push
pop
jns
nop
adcb
fwait
lock
in
and
add
stos
rorl
imul
scas
icebp
xchg
sub
pop
push
les
stos
test
loopne
mov
into
lock
test
add
popa
inc
inc
lds
imul
mov
and
or
jecxz
xor
and
jbe
movsl
test
xor
test
push
or
outsl
out
xchg
aad
adc
add
jb
sub
jns
cmpsb
ficomps
movsl
sahf
xor
lea
push
lahf
sbb
jmp
in
frstor
sti
mov
or
xchg
in
stc
stos
out
shl
nop
mov
xor
xchg
sbb
jle
push
cltd
ljmp
int3
cmp
dec
mov
xchg
and
popa
cmp
cli
out
movsb
jns
mov
orl
std
cmp
adc
cmpb
fsub
jmp
sub
sbb
and
cmp
clc
sbb
sbb
stc
out
jecxz
testl
jle
pop
ret
pop
sbb
and
enter
sbb
adc
push
dec
into
xor
cwtl
mov
aad
int3
sbb
aas
inc
cmp
and
xor
cmp
dec
andb
leave
out
bound
fstps
mov
sbb
in
iret
lret
out
ja
adc
sahf
rol
jle
xlat
xchg
dec
dec
fcomps
dec
sbb
bound
popf
mov
in
mov
pop
lea
leave
cs
pop
lret
std
int
repz
pop
mov
les
scas
mov
pop
pop
add
adc
dec
sbb
jnp
mov
test
ljmp
test
sbb
std
int3
push
fwait
imul
adc
lock
ss
test
ret
jge
aad
repnz
cwtl
mov
fdivrs
or
or
fdivrp
jnp
incb
pop
cld
dec
xchg
pop
jb
mov
leave
sbb
stos
into
and
roll
pop
mov
rcl
pop
rclb
xor
inc
add
adc
inc
clc
sub
push
or
or
test
mov
cmp
mov
test
pop
call
sbb
push
mul
inc
outsl
arpl
sub
cmp
stos
push
xchg
pushf
shll
cli
clc
adcb
hlt
jnp
add
cli
mov
loope
sub
mov
mov
pushf
push
sub
push
xor
mov
in
pop
hlt
add
pop
inc
jmp
movsl
xchg
ret
pushf
xor
or
jp
fs
loopne
xor
clc
mov
dec
in
movsl
cld
and
popf
jecxz
inc
ljmp
mov
xchg
mov
inc
pop
rolb
imul
sub
fidivl
out
ficomps
mov
popf
imul
test
cmp
push
ficoml
fbld
xor
push
mov
add
jns
subl
jmp
jbe
xchg
in
dec
std
out
in
insl
fs
lea
iret
xor
ss
and
xchg
jo
lret
stos
lcall
scas
cmpsl
jmp
clc
pop
data16
inc
sbb
mov
orl
dec
jbe
lcall
and
dec
jl
neg
int3
pop
orl
daa
mov
add
jne
xchg
test
mov
outsl
xchg
sub
jge,pn
mov
jae
mov
aam
cmp
cmp
xchg
xchg
mov
icebp
sbb
jns
shlb
lret
ja
push
stos
pop
addr16
in
and
fimull
aad
sti
ret
lahf
adc
cmp
rclb
or
adc
adc
xchg
xchg
adc
lock
aam
mov
stos
adc
fdivrl
sbb
dec
cmp
pop
push
stos
cmp
daa
cmp
sub
int3
sub
xchg
sahf
xchg
shld
dec
adc
popf
ret
add
xchg
cld
fbstp
xlat
add
cmp
push
pusha
sbbb
and
test
movsb
cmp
mov
cmp
shrb
mov
dec
nop
push
mov
loope
cmpb
hlt
cmpb
mov
js
mov
ret
mov
xor
addr16
xchg
xlat
test
and
xchg
xor
sub
mov
loopne
cli
push
add
cmp
fcmovnb
push
mov
dec
stos
inc
dec
aas
in
and
aaa
dec
loope
aad
dec
stos
mov
and
and
test
mov
jae
xchg
adc
inc
stc
xchg
mov
mov
cs
jecxz
mov
lahf
mov
sbb
xchg
or
insb
pop
jecxz
sub
imulb
rolb
xchg
lods
loope
repz
mov
ljmp
imul
loopne
xchg
inc
pop
xor
or
les
sti
outsb
mov
dec
jbe
ret
xor
cmp
xor
nop
movsl
stos
sub
xchg
xor
fidivrl
and
push
mov
jno
jmp
pop
movsl
ljmp
sub
fsub
mov
pop
xchg
call
push
adc
push
imull
or
icebp
popa
sar
mov
into
scas
push
dec
jno
mov
pop
cmp
in
lret
adc
mov
insb
cmc
lds
push
lea
scas
cltd
test
pop
aam
aas
fisubs
scas
jmp
lods
jl
lcall
scas
orb
lods
lcall
xor
dec
jne
cmp
dec
jnp
mov
cmpsl
rcll
leave
notb
int3
fcompl
movsb
push
test
mov
inc
mov
repz
pushw
sub
xchg
leave
in
xlat
pop
insl
mov
in
jge
ret
lret
jp
pop
lret
sub
xchg
add
add
jnp
push
pop
adc
mov
in
pop
hlt
ss
xchg
push
push
inc
adc
ret
ffree
inc
enter
add
dec
dec
loop
cld
ror
gs
jp
pop
inc
sbb
jne
movsl
push
scas
push
jge
sbb
inc
pop
dec
cli
sub
mov
pop
pop
shrb
and
mov
scas
imul
pop
xor
jecxz
dec
xor
sbb
mov
lret
adcl
out
mov
dec
or
outsl
xchg
lods
mov
jnp
mov
pop
mov
add
idiv
cmc
out
in
stc
int
rorb
test
roll
pop
inc
sub
and
jno
sbb
gs
out
adc
push
inc
xchg
push
sbb
fsubl
inc
shrl
out
shl
pop
or
push
and
pop
sub
imul
sbb
sti
pop
orl
subb
loope
mov
add
mov
pusha
out
dec
push
in
sub
push
cmp
mov
or
mov
popf
cmp
adc
jnp
jecxz
and
stc
scas
jge
test
adc
stos
insb
adc
test
fstps
adc
xchg
je
mov
or
jo
loope
dec
inc
xchg
shrb
push
sbb
add
fldenv
sarl
xlat
push
int3
xlat
add
xor
int3
jle
or
loopne
fwait
popa
lods
cmp
add
xor
xchg
fs
or
add
mov
movsb
dec
in
push
test
xbegin
cmp
inc
jae
shrb
mov
mov
mov
xor
sub
bnd
cmpsl
sti
push
xor
mov
in
jo
jl
inc
adc
adc
js
movsb
enter
push
push
push
sbbl
in
add
inc
pop
fbld
lret
inc
stos
mov
je
fcoms
mov
outsl
repz
jp
jl
cli
jb
test
mov
ja
dec
pop
fcomp
mov
mov
imul
push
xchg
outsb
movsl
daa
enter
xchg
jmp
jg
je
sbb
lods
movsb
mov
push
sub
adc
cltd
mov
movhps
pop
mov
fists
inc
cmpsl
lods
repnz
or
fs
out
hlt
xchg
adc
sbb
push
rcl
flds
mov
insb
in
in
inc
aad
in
outsb
ret
pop
data16
mov
aad
outsl
cmp
inc
sahf
or
dec
inc
dec
or
mov
jle
test
pop
cs
fdivrl
addb
imul
ds
arpl
add
pop
cmp
shll
xor
in
xchg
mov
mov
sahf
pusha
icebp
jb
add
lcall
sahf
add
push
ljmp
jmp
sbb
jne
in
scas
icebp
pushf
sbb
adcl
xor
pop
jb
pop
shlb
jecxz
test
ret
sub
mov
sbb
rol
jne
push
pushf
inc
in
sbb
xchg
cmc
fwait
add
idivl
insb
fsubrs
sub
mov
mov
cwtl
imul
lods
push
mov
lahf
sbb
repz
sbb
sub
outsb
jl
leave
sub
pushf
pop
fildl
rolb
inc
add
jns
add
cmp
jmp
out
xchg
lea
cltd
mov
in
inc
mov
ja
add
mov
mov
std
lods
scas
cmp
or
lea
mov
loopne
lcall
xor
jo
xchg
pop
sbb
ds
jno
cmc
adc
push
mov
enter
xchg
dec
xor
lods
pop
shrb
popl
or
push
or
aaa
es
in
fwait
ds
sarl
dec
or
sub
pop
testl
dec
imul
shlb
dec
mov
enter
in
inc
xchg
sbb
stos
out
dec
cmp
push
sahf
lods
mov
mov
jb
cmp
lahf
xchg
push
lea
and
cltd
pop
push
mov
mov
call
fisttps
popf
jb
leave
fildll
sub
aas
adc
cs
fnstcw
test
sub
and
pop
and
sbb
push
pop
out
push
sbb
mov
mov
inc
add
cmp
fsubrs
lds
mov
push
and
mov
iret
pop
adc
add
cld
mov
cmp
sbb
stos
jl
loopne
not
out
cli
movsl
pop
aaa
shll
xchg
xchg
repnz
stos
int
dec
push
js
jge
and
es
mov
stc
test
mov
mov
jb
or
adc
enter
imul
and
pop
adcl
jl
adc
adc
pop
loop
jno
shrl
addr16
nop
adc
and
aad
lds
sbb
movsb
inc
inc
sbb
dec
out
pop
cmc
inc
pusha
mov
push
testb
lods
out
cs
mov
jg
ljmp
hlt
pop
adc
dec
std
shlb
sub
test
inc
cwtl
dec
ror
addr16
notl
mov
pop
imulb
sub
mov
push
out
xor
sub
jg
xchg
jno
lods
cmpsl
arpl
insl
pop
cwtl
dec
jle
out
cmc
inc
fidivrl
xchg
adc
sbb
jnp
mov
out
shlb
pusha
lret
je
xor
movsl
mov
mov
sub
imul
dec
mov
mov
addr16
icebp
sbbb
popa
aaa
cs
jmp
cmpsb
aad
jg
dec
mov
lods
jl
mov
dec
into
sbb
pop
and
addb
je
cmp
scas
cmc
das
je
outsl
pop
cmp
mov
bnd
cmp
xlat
movsb
or
or
pop
sahf
aad
shlb
or
and
lock
mov
sbbb
inc
add
mov
icebp
leave
sbb
cmp
mov
imul
int
adc
inc
rcr
sub
fidivs
push
sub
jne
in
push
loope
fsts
ja
xor
xor
lods
jo
hlt
xchg
mov
sbb
std
push
es
and
or
lock
mov
jp
adc
cwtl
clc
leave
data16
add
int
adc
lods
fisubs
iret
mov
out
scas
aad
shl
repz
mov
or
dec
xchg
scas
aam
gs
xor
lods
or
lret
aaa
lcall
int3
push
xor
mov
dec
pop
pop
xchg
sbb
fsubp
push
pop
sbb
sbb
mov
pop
imul
mov
mov
stos
arpl
inc
mov
rcl
and
les
aad
nop
out
adc
cltd
stos
cwtl
mov
add
fwait
push
xor
ret
add
cld
sub
inc
dec
movsb
sbb
into
aam
out
push
jmp
nop
xchg
push
add
pop
push
and
push
nop
add
xor
in
adc
xor
mov
xchg
pushf
cmc
dec
push
stos
xor
fucomi
or
or
mov
pop
jns
rcrb
push
or
mov
and
gs
pop
out
mov
fmuls
dec
fdivs
and
xor
pushf
les
js
jg
nop
mov
add
daa
add
xor
xchg
sarb
lods
loope
mov
test
pop
fidivs
jne
pop
pop
imul
xchg
nop
push
adcl
js
push
cmp
pop
or
shl
push
in
out
jp
lsl
pop
sub
clc
dec
jbe
ret
pop
mov
aad
add
push
jecxz
icebp
es
sbb
call
aam
pop
iret
lods
aaa
sti
mov
cmp
jmp
aad
sbb
jge
andl
push
push
ja
dec
sahf
xchg
inc
out
mov
rcrb
ret
dec
jno
insl
or
sbb
in
sar
dec
lahf
icebp
das
orl
sbb
or
je
sbb
mov
test
jb
mov
dec
les
fimuls
inc
aam
or
or
sub
insl
dec
adc
push
mov
cld
adc
lock
xchg
ficoms
loopne
rorl
icebp
dec
dec
stos
push
jb
data16
mov
pop
xchg
push
cld
push
adc
sub
popf
push
ret
cmp
out
push
pop
cmp
dec
daa
js
gs
int3
lock
sbb
call
jmp
call
dec
jns
rcll
xchg
cmp
stos
xor
fs
aaa
xchg
sbb
pushf
push
jle
call
repnz
out
fdivrl
gs
pusha
and
jl
pop
repz
shr
push
movsb
mov
ljmp
cmp
adc
and
xchg
push
mov
lods
sbb
adc
xchg
push
sub
inc
mov
stos
cltd
mov
aas
jno
stc
fildll
xor
dec
lds
mov
hlt
lock
out
adc
loopne
dec
popf
sbb
jns
cmp
inc
pushf
sub
pop
mov
in
popa
pop
aam
sbb
add
lcall
inc
stos
xchg
das
nop
scas
outsl
repnz
andb
outsb
fdivl
inc
sub
sbb
cmp
mov
adc
pusha
fmuls
pop
sbb
insl
iret
jne
ret
clc
lds
mov
mov
movsb
xchg
je
enter
nop
cli
mov
movsb
dec
loop
lods
outsl
pop
rcl
push
cmp
adc
jle
mov
pop
scas
testb
jl
push
out
jno
loop
test
jecxz
cmp
push
mov
mov
loope
icebp
sub
cld
push
push
mov
or
lods
mov
andb
inc
cmp
sarl
pop
ret
pop
clc
xchg
mov
and
push
stc
ja
mov
xlat
and
lahf
ret
std
adc
ss
mov
les
add
fistpll
mov
out
cmp
popw
jp
out
pop
mov
test
push
pop
jns
mull
leave
pop
lret
out
pushf
sarl
loopne
rcrb
bsr
insl
push
ljmp
dec
scas
aad
or
pushf
add
jno
or
mov
pop
outsl
push
jecxz
cmp
xchg
movsl
dec
repnz
or
cld
pop
stos
xor
pusha
mov
xchg
lahf
call
call
sub
pop
frstor
das
in
cmp
mov
pop
lods
xor
push
in
mov
movsb
mov
sahf
test
dec
lock
pushf
xor
sbbl
jle
outsl
xchg
pop
xchg
test
aam
in
nop
out
and
lock
loope
enter
dec
add
enter
and
sarl
leave
int
mov
aad
sbbl
push
test
lods
sti
xor
enter
repz
or
psignd
js
push
loope
pop
push
jns
inc
dec
mov
jmp
insb
xor
push
add
cmpb
imull
outsb
xchg
mov
adc
and
call
ret
push
adc
dec
ljmp
mov
leave
inc
ret
adc
mov
leave
gs
ljmp
js
iret
ds
repnz
push
sahf
loope
jmp
xchg
in
fcmovu
xchg
sub
push
xor
push
repnz
shll
jnp
and
inc
lahf
pop
sub
fbld
clc
sub
aas
ljmp
sbb
fadds
xchg
fadds
adc
mov
xchg
sbb
adc
mov
into
faddl
fwait
lock
jge
or
test
dec
and
les
lods
inc
mov
cmp
shll
pushf
mul
in
inc
inc
jo
pxor
and
mov
adc
dec
xchg
and
test
cwtl
lahf
or
sahf
and
fucom
mov
dec
lcall
ret
fisubrs
lret
fdivs
xchg
jl
shll
in
shll
xor
popa
ret
xchg
add
adc
xchg
lock
adc
mov
jg
in
cmp
xor
inc
mov
stos
enter
inc
shrb
jnp
jle,pn
pop
mov
jbe
xchg
mov
fnsave
rclb
bnd
ret
mov
dec
mov
mov
int
mov
sub
and
xchg
or
add
or
stos
inc
data16
sub
data16
jp
inc
jb
inc
xchg
or
xor
xchg
lds
fimull
jne
cmp
cli
into
push
pop
sarb
cmp
jmp
xor
test
mov
ret
js
xor
jmp
ret
jae
mov
jg
push
outsb
dec
movsb
icebp
inc
pop
dec
shr
loope
outsb
inc
insl
data16
xor
pop
sahf
orl
loope
sub
push
cmp
in
pop
sub
adc
int3
sbb
push
lea
nop
fisttps
sbb
sub
sbb
out
popf
push
loop
divb
out
hlt
adc
fisubrl
repnz
ljmp
loop
sub
push
jns
filds
sub
outsb
mov
xchg
and
push
jle
outsb
sarl
inc
push
push
and
and
aad
sbb
loop
or
lahf
inc
jl
xchg
sub
fcmovnbe
pop
pop
out
iret
mov
cmp
or
jno
jb
pushf
mov
adc
push
and
cmpsl
pop
nop
add
lret
fcompl
mov
inc
add
mov
cmp
lahf
inc
mov
movsl
and
inc
loopne
outsb
lods
adc
inc
ficomps
push
sbb
das
hlt
push
aam
mov
ja
and
loopne
incl
ds
outsb
sub
fstpt
repz
mov
mov
and
inc
fstpt
es
lock
or
fisttps
loop
iret
cmp
out
push
jb
sbb
int
in
std
add
aad
pop
jbe
push
ds
sbb
stc
int3
mov
xorb
xchg
inc
mov
jno
testb
sbb
in
xchg
in
xor
add
cmp
mov
xor
pop
rcll
add
xor
enter
or
xchg
adc
cmp
lahf
push
inc
push
mov
push
mov
das
or
mov
repz
mov
xorl
cmp
ss
int3
mov
popa
or
push
inc
mov
bnd
enter
push
inc
add
push
mov
fcmovb
test
cmp
xchg
cltd
imul
mov
and
imul
popf
pop
pop
ds
xchg
fsubs
pop
aaa
into
dec
ret
loope
xor
and
shl
jmp
cli
lods
mov
cmp
mov
adc
sarb
inc
imul
shll
dec
dec
inc
out
mov
jnp
icebp
lahf
inc
sbb
and
push
inc
adc
into
cld
sub
dec
out
push
popa
hlt
mov
arpl
add
adcb
outsl
imul
cs
cmovl
fistl
xor
cmc
sahf
out
scas
push
xchg
adc
cmpsl
xor
enter
mov
test
lret
out
xchg
pop
addb
data16
repnz
jl
int3
das
jp
mov
data16
mov
mov
add
mov
mov
das
mov
pusha
mov
cwtl
inc
cld
sub
cs
jne
cmpsb
cmp
inc
push
mov
xor
mov
add
rorl
shlb
push
aam
inc
aad
xchg
mov
mov
aaa
scas
dec
into
int
dec
test
inc
or
push
rcrb
pusha
mov
sti
mov
xchg
int3
imul
pop
incb
das
mov
ljmp
adc
test
xchg
mov
int3
aam
mov
fisubrl
sbb
dec
sbb
sbb
mov
mov
movsb
jb
leave
lret
and
and
inc
xchg
bound
fucomi
mov
push
jmp
jmp
lahf
xchg
pop
hlt
ja
insb
push
xchg
mov
out
lds
pop
jmp
fwait
rclb
push
mov
ret
inc
inc
mov
mov
push
jmp
xlat
scas
popf
aam
aas
ret
inc
fmuls
nop
fbstp
sbb
sahf
mov
shlb
or
push
push
or
fists
pop
mov
pop
out
test
out
mov
rcll
sarb
or
and
jb
and
in
scas
inc
popa
iret
fldcw
les
andb
bound
fwait
mov
sub
dec
xor
pop
mov
or
pop
xlat
hlt
aad
sub
pop
int3
fnsave
lret
inc
push
mov
repnz
arpl
add
and
lods
push
xchg
jns
bnd
fchs
daa
sub
sub
rcll
xchg
in
jne
jne
add
aad
imul
andb
lds
dec
jge
fdivrs
or
jg
sbb
ljmp
movsb
or
or
pop
xlat
cmpsb
outsl
div
mov
pop
jae
mov
out
js
push
sub
in
leave
dec
sub
cltd
js
loop
gs
test
mov
loopne
rcrb
dec
mov
add
hlt
pusha
sub
es
icebp
sub
test
adc
jp
pop
and
sub
or
inc
rclb
dec
xchg
sbb
xor
insb
push
xor
and
flds
add
out
adc
cmp
and
js
test
bnd
sti
inc
int3
jp
scas
cld
xor
arpl
add
xchg
popa
rorl
and
cmovo
mov
insb
pop
mov
cmp
shl
outsb
mov
jge
imul
mov
mov
inc
lcall
mov
add
in
in
xor
pop
arpl
inc
cmp
xchg
dec
push
xchg
jecxz
sti
das
cli
mov
pusha
mov
andl
stc
jmp
cwtl
sbb
xchg
movsl
mov
mov
loope
in
dec
jnp
rorb
pop
dec
cli
or
and
loope
inc
aam
mov
loop
dec
or
jecxz
nop
adc
ja
leave
insb
add
or
dec
sbb
and
add
pop
addb
mov
xchg
sub
bound
push
das
pushf
aas
or
dec
add
push
orb
and
sbb
jnp
dec
dec
movsb
cmp
or
imul
sbb
jge
nop
mov
int3
push
inc
mov
or
dec
jno
jg
das
xor
pop
lock
loope
mov
int
out
xor
inc
loop
inc
and
cmpsb
daa
or
push
xchg
jb
cwtl
adc
jne
mov
dec
lods
or
sti
fdivs
stos
push
std
adc
sub
cmp
dec
xchg
stos
mov
adc
mov
sbbl
std
in
push
pop
cli
push
loop
dec
js
mov
daa
xchg
in
xchg
push
mov
jg
shrb
fmul
xor
sbb
ds
xor
push
mov
subl
in
je
daa
inc
sti
sbb
iret
mov
pop
adc
cltd
call
in
add
inc
mov
push
dec
cmp
push
daa
sbb
mov
rorl
test
push
pop
cld
mov
mov
add
gs
adc
cmp
mov
xchg
leave
jge
dec
nop
mov
pushf
scas
bound
ror
orb
cmpl
mov
jns
dec
incl
xchg
cld
in
mov
push
push
push
adc
push
fistpll
xor
pop
xlat
inc
bound
and
mov
jl
pop
sub
push
fimull
pop
inc
imul
imul
push
je
jl
sbb
xlat
adc
shl
xchg
leave
add
jg
andl
fs
shll
orl
and
idivb
xchg
data16
jp
pop
push
add
mov
inc
add
lret
loop
in
push
xchg
add
repnz
adc
loope
pop
shlb
xchg
jno
gs
sbb
push
out
adc
cltd
fstl
or
mov
xlat
in
mov
mov
mov
xor
cmp
inc
mov
mov
pop
sbb
addr16
lds
ja
jb
mov
pop
shlb
int3
es
iret
bnd
into
movsl
and
mov
xor
popa
fcmovne
jl
push
mov
shll
and
xchg
je
or
rcrl
dec
pop
mov
sbb
cltd
aam
clc
clc
pop
add
or
pop
xchg
cwtl
pop
cltd
dec
cmpsb
mov
jl
cmp
push
outsl
shlb
icebp
xchg
add
and
mov
leave
dec
pop
dec
outsl
rorb
roll
xchg
add
movsb
mov
popa
pop
adc
jmp
mov
adc
fdivrl
mov
nop
mov
sub
jmp
cld
add
pop
popf
or
idivb
pushf
inc
or
cmpl
add
ljmp
jp
orl
cmp
or
movsl
xor
out
sbb
xor
fstpl
fs
sbb
pop
in
fldcw
bound
adc
cmp
push
shll
js
cli
add
inc
loopne
push
fs
outsl
das
or
jo
outsb
dec
out
enter
rclb
or
inc
cld
sub
pop
test
outsl
int
mov
sub
outsl
in
test
adc
xor
and
insb
sub
fsubr
push
fmuls
in
test
jb
jmp
mov
add
pop
neg
pop
sub
insl
outsl
lahf
fs
lahf
push
and
or
dec
sub
pop
mov
xchg
cs
mov
neg
mov
out
add
jecxz
popf
add
pushf
lcall
or
repnz
push
call
mov
pop
ds
in
mov
xchg
sbb
mov
dec
jge
test
push
in
bound
sbb
je
sbb
xor
lahf
ds
bound
push
in
bound
dec
mov
xor
pop
inc
cmp
loopne
adc
fcmovnb
leave
or
cltd
mov
jmp
aam
pop
and
push
add
adc
cmp
in
sbb
aam
add
mov
adc
jb
xchg
cld
mov
pop
rclb
dec
outsl
out
divb
roll
sbbb
fwait
in
and
xchg
sbb
mov
fistpll
push
mov
rclb
sbb
and
aas
clc
out
repnz
nop
xor
jmp
or
pop
cmp
mov
gs
data16
test
xor
sbb
xchg
push
mov
sub
icebp
in
ret
adc
xor
das
insl
ds
mulb
and
sbbb
in
mov
push
aam
xchg
sahf
dec
xchg
subb
inc
out
jmp
aas
cmp
add
mov
or
mov
cli
pop
jo
fsubs
cmp
xchg
lcall
jp
stos
push
std
insl
jno
out
cmpsb
mov
xchg
das
daa
pop
rol
sahf
push
cmp
sub
pop
push
push
loopne
xchg
xlat
jb
out
aam
leave
jnp
dec
dec
pop
lock
dec
mov
jmp
dec
andl
xchg
sub
shll
aam
fs
stos
neg
rcr
insb
orb
and
cmp
mov
push
xchg
fists
in
and
cltd
es
cld
xor
cmp
inc
sub
and
movsb
xor
mov
addr16
push
add
mov
nop
mov
cs
stc
pop
std
dec
xchg
mov
push
stos
mov
xchg
add
xor
xchg
mov
test
icebp
divb
sti
data16
cmpsb
lcall
std
pop
sti
sub
or
sbb
mov
pshufw
lods
adc
push
adc
adc
jns
dec
into
adc
lret
sbb
fmull
add
aaa
scas
mov
loopne
divl
inc
popa
sub
insb
add
and
or
adc
mov
loope
pop
pusha
loope
ljmp
cmp
loop
xor
cmp
push
xor
mov
shrb
in
std
mov
mov
push
mov
push
xchg
mov
pop
push
out
test
arpl
adc
cltd
or
pushl
sti
fcoml
or
add
inc
cmp
xchg
cmc
xor
xchg
aam
add
and
cmc
aas
xchg
test
cltd
xor
or
inc
sarl
jne
inc
adc
mov
and
mov
dec
jo
xor
out
jbe
jmp
jg
jb
or
aaa
or
cmp
mov
out
push
xor
lcall
xor
es
xchg
pusha
cwtl
push
in
jne
js
out
test
cltd
bound
rorb
ret
mov
mov
out
aam
adc
push
popa
int
add
mov
scas
sub
pop
jl
add
out
into
loopne
cwtl
adc
fiaddl
xor
stc
mov
dec
dec
stc
pop
inc
std
mov
hlt
xchg
mov
cmp
addr16
jmp
xchg
sbb
stos
inc
test
aad
psrld
sub
jge
pop
inc
insl
dec
cmp
and
push
dec
cmp
loopne
adcl
adc
js
jmp
sub
sbb
aas
jmp
mov
aad
inc
xchg
imul
popf
es
cmp
push
xchg
mov
add
mov
push
push
sub
test
popa
pop
xor
cmp
int3
shlb
fstp
xchg
xchg
pop
call
adc
fnstsw
pop
mov
dec
jp
mov
mov
sahf
hlt
dec
sub
xchg
jg
inc
loopne
or
lea
psllq
push
mov
es
and
call
pop
sbb
ja
movsl
or
les
out
cwtl
in
push
sbb
jne
ja
pop
in
jl
push
pusha
push
rclb
in
test
and
lock
cmp
pop
in
xchg
shrb
mov
mov
and
mov
jae
push
inc
repnz
pop
shlb
xlat
mov
pushl
adc
dec
jns
mov
add
repnz
and
inc
pop
inc
stos
vhaddps
dec
cs
push
lea
aaa
xchg
push
xchg
push
das
jge
or
repnz
xchg
mov
sbb
inc
ss
or
lahf
fcoms
in
shl
pop
mov
popf
pop
sahf
sub
xor
inc
add
sbb
ret
lea
mov
sub
cmp
sub
xchg
loop
cld
push
xor
loope
xchg
lods
cld
mov
push
pop
xchg
sbb
addr16
ds
mov
roll
jge
push
test
js
xor
mov
out
xchg
movsl
xchg
test
mov
xchg
cld
les
cmp
ret
dec
pop
cli
lods
fistpl
sahf
out
jg
cs
xor
push
dec
push
dec
shrl
push
cmpsl
mov
neg
jp
cltd
loope
adc
arpl
cmpsb
adc
std
in
lahf
xor
sub
fs
xchg
insb
pop
jle
push
jmp
xor
or
es
nop
push
inc
xlat
xchg
out
mov
scas
popf
push
xchg
in
cld
cmp
daa
and
sbb
jne
push
es
bswap
push
cmp
sti
add
dec
jg
outsl
aas
mov
ljmp
sbb
inc
xor
cmpsb
inc
loope
inc
push
mov
std
out
fs
int3
insb
pop
fdivrp
jecxz
pop
push
icebp
in
scas
int
inc
push
pop
divl
in
sahf
faddl
popa
pop
call
fwait
int3
shl
sbb
inc
outsl
scas
mov
rorb
cmpsl
mov
adcb
mov
push
loop
xchg
fs
add
and
pusha
adc
scas
rclb
stos
mov
cmp
daa
and
call
pop
rorb
mov
mov
movsl
movsb
fildl
repnz
pop
jae
into
int3
push
subl
nop
cmp
mov
xchg
call
jbe
iret
push
pop
imulb
jnp
push
fcom
stos
fadd
icebp
insb
daa
ljmp
cltd
je
aam
mov
faddl
xchg
das
and
aas
in
xchg
and
test
clc
or
movsl
sub
mov
jle
push
scas
movsl
bound
jmp
jecxz
xchg
enter
mov
aam
cmp
shrl
in
loopne
in
aas
xor
adc
aam
xchg
push
dec
loopne
jb
jge
neg
xchg
add
push
frstor
insl
arpl
mov
push
dec
sub
mov
shl
loop
dec
lret
out
mov
push
in
es
jbe
xor
loopne
mov
inc
pop
nop
ret
push
mov
in
mov
loopne
lods
mov
imul
inc
jns
xlat
xor
ljmp
add
push
mov
int
dec
scas
cmp
addr16
push
sub
insl
loop
jl
inc
les
add
fsubs
jns
pop
jg
and
repz
xchg
inc
dec
adc
jp
je
mov
push
jnp
mov
cli
aaa
cli
pop
and
xchg
or
cmp
imul
add
and
test
or
inc
outsl
xor
movsb
nop
popf
or
bnd
scas
addl
roll
sti
push
cmp
xor
pop
pushf
add
test
sbb
push
cs
xor
ljmp
pop
mov
sahf
rcrb
jo
loop
and
call
lcall
xor
push
dec
xor
pop
out
frstor
int3
inc
fdivl
test
dec
into
arpl
jecxz
aaa
mov
idivb
icebp
ds
test
jae
jmp
pop
jmp
cmp
aas
xchg
and
movsl
movsb
scas
push
pushfw
xor
jge
and
test
cmp
sahf
xchg
mov
sahf
lret
fimuls
outsl
and
xchg
pop
push
lds
fnstenv
push
xchg
mov
pop
mov
and
cmpsl
xchg
rcrl
inc
add
jge
push
adc
inc
test
js
sbb
daa
add
out
mov
out
jle
outsl
mov
shrb
xchg
jae
cmpsb
lds
stos
out
pushl
dec
bound
insl
gs
loopne
dec
xor
jg
cltd
jge
popf
push
daa
dec
jl
or
sub
movsb
out
mov
and
mov
jne
rcrl
xor
lret
scas
dec
mov
cmpsl
loop
xchg
adc
decb
hlt
fucom
dec
mov
adc
out
adc
ret
xor
jb
gs
xchg
std
dec
cld
mov
fdivrs
out
dec
or
mov
mov
jnp
cmp
in
loopne
fnstsw
mov
cmpl
mov
scas
aas
push
mov
fstl
arpl
mov
in
xor
test
cmpsb
into
lea
test
sbb
arpl
push
sub
mov
fmuls
in
jle
mov
inc
xor
and
stc
cmc
sahf
fwait
outsb
rorl
nop
loope
inc
lods
jecxz
dec
pop
aad
jae
mov
cmp
rcll
jbe
pop
inc
test
loopne
xorb
xor
popa
mov
push
jg
xchg
xchg
stc
cmc
out
dec
xchg
sub
fwait
sarl
xchg
mov
hlt
incl
mov
push
pop
jecxz
aad
sbb
adc
xchg
xchg
push
cmc
xchg
mov
lahf
sbb
jg
pop
mov
cmp
mov
repnz
push
mov
and
push
pop
mov
inc
in
leave
push
jbe
xor
rorl
sbb
push
popa
or
aam
sbb
mov
add
data16
push
sbbb
xor
sbb
movsl
inc
test
dec
pop
inc
into
ss
mov
inc
test
and
cmp
sbbb
ror
jae
sub
sbb
sub
mov
lcall
aam
popa
mov
dec
jmp
decl
push
jge
push
or
sub
cwtl
ja
jg
sub
lods
cmp
xor
in
sub
and
stos
and
lods
enter
dec
jle
sub
jno
sbb
cmp
repz
xchg
add
add
xchg
int
cmpsl
inc
xchg
inc
enter
pop
loop
hlt
hlt
inc
js
dec
testl
xorb
dec
xchg
iret
test
cmc
lret
scas
loope
mov
cld
lcall
enter
sbb
into
fidivs
push
cmp
jmp
stos
cwtl
xor
mov
pop
lods
movsb
dec
mov
pop
cmc
lret
in
inc
mov
push
add
cmp
lcall
fs
scas
inc
pop
cs
sub
or
cltd
addr16
mov
mov
lods
add
mov
mov
imull
imul
jns
stc
lret
repz
test
push
mov
lds
addr16
push
imul
sbbl
adc
jae
mov
mov
das
loop
rorb
ror
or
nop
adc
mov
inc
lds
test
and
jne
sub
stc
scas
call
in
jl
addr16
and
leave
adc
in
jle
and
lea
pop
in
rcll
out
jo
in
ljmp
and
push
mov
lds
adc
and
lahf
push
lret
jg
mov
fiadds
negb
push
add
mov
lcall
sbb
or
adc
mov
mov
andb
or
pusha
xchg
sub
les
rcrl
loop
lahf
sbb
jge
frstor
and
es
push
mov
add
xchg
dec
out
push
pop
jae
aaa
or
fmull
adc
push
cli
fstpt
ds
stc
bswap
add
mov
pop
iret
gs
pusha
insb
mov
jg
aas
pop
ljmp
in
xor
enter
dec
pop
loop
stos
imulb
lea
outsb
or
push
repz
scas
cmpsl
mov
call
stos
dec
xor
aad
ror
mov
cmp
lahf
and
mov
mov
sti
cmp
lahf
inc
jp
add
mov
leave
jo
lock
lret
xchg
xchg
imulb
mov
and
mov
jb
adc
cld
xchg
insb
and
xchg
and
push
xor
mov
dec
mov
jg
enter
sbb
xchg
aas
fcompl
mov
dec
or
pusha
incl
dec
loop
insb
add
dec
sbb
dec
xor
sbb
cltd
arpl
aad
je
lahf
xchg
iret
add
adc
mov
pop
sub
push
lods
xor
int
pop
push
xchg
mov
mov
and
adc
loope
cli
add
cwtl
mov
mov
shlb
lods
xchg
rorb
dec
outsb
mov
movsb
mov
xchg
xchg
push
movsl
scas
fwait
ss
in
cmp
xchg
pusha
xor
xchg
lret
pop
push
mov
mov
sti
test
rorl
arpl
js
adc
xor
mov
lods
lret
scas
lahf
and
push
jae
fcmovb
mov
dec
imul
sub
sbb
adc
mov
and
mov
jg
dec
mov
mov
mov
cmpsb
pop
cs
dec
fs
xor
arpl
xlat
push
fadds
jle
in
xchg
inc
ror
cmpsl
mov
repnz
clc
outsl
push
lret
mov
js
push
test
xchg
mov
test
clc
bound
mov
sar
push
mov
dec
cmpb
jae
sti
test
sub
mov
cmc
iret
leave
cld
inc
sbb
adc
dec
movsb
test
out
notb
int
ja
mov
dec
mov
push
fnstcw
in
mov
adc
xchg
cmp
lcall
mov
xchg
pushf
push
pop
adc
jmp
jae
mov
pop
sub
lods
or
loope
pop
pop
push
mov
aas
out
pop
mov
xor
lds
rcrb
sub
add
pop
sar
add
pop
ljmp
sub
testb
cltd
stc
xchg
cmp
clc
ret
loopne
jg
mov
rorl
lea
inc
jg
shlb
shll
popa
pushf
push
dec
loop
mov
in
test
adc
and
jbe
lds
cli
add
push
stos
test
bound
lahf
cmc
cmp
ret
leave
mov
in
sub
sbb
cmp
outsl
and
push
jbe
test
pop
ret
lock
data16
push
sub
fs
pop
cmp
ljmp
inc
leave
pop
shrl
outsl
std
dec
out
mov
lcall
sbb
into
and
jp
sahf
mov
ja
add
out
push
imul
inc
mov
es
jl
xorl
pop
pop
ljmp
div
inc
ljmp
adc
mov
push
mov
pop
mov
jle
mov
jb
mov
xor
jecxz
pop
pop
or
dec
andb
dec
outsl
inc
push
pop
loop
cltd
ret
icebp
push
pop
xchg
fiadds
pushl
neg
subl
jmp
les
or
xchg
mov
rcrl
bnd
scas
test
mov
test
fwait
push
mull
mov
dec
cmpsl
dec
or
stc
xchg
dec
cli
stc
jle
inc
iret
sub
fsubrl
scas
rorl
cmpsl
inc
into
pop
enter
fnstenv
cmp
cmp
inc
pop
mov
cmp
pop
scas
into
dec
adc
bound
popa
jns
out
test
jmp
pop
or
jg
adc
mov
cltd
jne
sbb
xchg
inc
pusha
cmc
or
shr
adc
cmp
sbb
in
mov
push
cmp
out
movsl
into
mov
cmp
lahf
adc
stc
cld
jecxz
cmpb
cmpsb
jge
test
mov
adc
pop
aad
outsl
sub
push
out
mov
aas
inc
mov
cmpsb
popf
mov
movb
icebp
pop
cmp
addr16
lahf
bound
pushf
mov
xchg
jmp
pop
hlt
aam
mov
dec
movsb
inc
pop
iret
ljmp
sub
cltd
mov
mov
ret
fs
mov
imul
push
cmp
dec
dec
cmp
inc
in
jb
jecxz
orl
frstor
dec
xchg
test
call
pop
pop
adcl
cmp
jo
cwtl
xchg
out
fnstenv
inc
hlt
adc
pop
andl
cltd
or
lds
mov
xlat
pusha
pop
loope
push
xor
enter
scas
push
daa
jmp
lods
push
and
mov
jae
dec
adc
jae
iret
dec
fmull
cmp
call
push
lret
inc
dec
push
push
bound
addb
sub
mov
or
aad
daa
sarb
repnz
outsb
mov
inc
lock
mov
popa
cmpsb
sbb
addr16
int
cltd
orl
stc
lods
xchg
pushl
lahf
jno
mov
fwait
jmp
lahf
mov
fsubrl
ljmp
dec
mov
pushf
xchg
flds
aad
div
lret
xor
lret
xchg
mov
fldcw
nop
fs
sbb
inc
pop
dec
loope
std
idivl
mov
or
jb
mov
scas
sti
in
or
enter
add
movsl
lahf
les
mov
iret
shl
or
popf
out
and
lret
insl
push
rcl
mov
stc
fidivrs
cmp
push
mov
push
mov
pop
ja
xchg
je
das
sbb
aaa
int3
jmp
insb
sbb
inc
mov
lret
xchg
push
lcall
mov
daa
out
jg
bound
icebp
rolb
adc
sbb
daa
pop
shrb
xor
mov
mov
adc
pop
xor
data16
jle
adc
xchg
mov
sbbl
lods
aam
adc
xlat
mov
cwtl
fcomps
rorl
fwait
mov
js
sub
or
leave
jle
movl
lods
xor
sub
jne
js
jbe
xor
repnz
cmpsl
inc
in
lods
lods
lcall
sbb
jae
mov
lcall
leave
adc
cld
and
jl
lret
mov
xchg
test
pop
jle
test
mov
rcll
jo
jmp
lea
jmp
mov
inc
pop
fwait
xchg
outsb
imul
test
js
cmc
jle
cmp
in
xchg
sub
mov
movsb
push
sbb
cmpsw
or
push
sbb
mov
sarb
mov
push
sbb
push
roll
inc
pop
arpl
xchg
dec
mov
lcall
pop
mov
pop
sti
cmp
xchg
cmp
xor
adc
mov
add
and
pop
mov
sarl
or
inc
out
aaa
gs
xchg
leave
adcb
sbb
cli
sbb
jbe
fdivrs
pushf
pop
sarb
jp
test
popl
mov
adc
xor
daa
push
aam
cmp
push
cmp
push
or
xor
testb
and
mov
and
cmpsb
lods
sub
pop
lret
orl
in
pop
movl
xor
mov
xchg
call
push
pop
and
mov
jg
push
jbe
mov
dec
pop
sub
jno
divps
push
cmpb
mov
mov
cmp
push
xor
pusha
mov
or
cwtl
mov
icebp
daa
sahf
add
ja
cmpsb
push
dec
push
mov
mov
gs
loop
je
dec
xchg
dec
pop
icebp
arpl
into
cmp
fmull
and
ret
inc
mov
sub
clc
mov
in
xchg
les
dec
rol
loope
jo
pop
fs
ror
popl
jo
std
lret
loope
inc
or
add
call
bound
imul
pop
sbb
sbb
sbb
ja
cs
mov
out
xchg
mulb
lret
jne
stos
pop
imul
cmc
ss
cmp
jb
loopne
dec
shrl
test
or
call
mov
leave
mov
aaa
dec
jns
popf
adc
loop
loopne
cmp
pop
add
loopne
cmp
test
fincstp
stos
inc
mov
sub
or
rorb
mulb
repz
push
adc
jp
daa
sbb
push
and
pushf
xor
xchg
dec
les
fs
ds
popf
cmp
aas
push
pop
xchg
enter
inc
jnp
stos
jo
pushf
push
inc
lods
sti
mov
test
xchg
mov
ja
jns
sbb
and
xor
jns
push
daa
mov
cmp
in
add
pop
sub
shrb
data16
es
xlat
and
cmp
and
adc
jmp
call
pop
inc
test
mov
scas
dec
or
push
cmpsl
sub
push
mov
rcll
or
aas
not
mov
mov
pop
xor
xor
pop
mov
rcll
imul
mov
shl
jns
int3
int
bound
int
iret
fdivrl
mov
lods
outsl
add
imul
in
dec
fwait
pop
lahf
mov
lea
or
inc
jp
xor
xor
jns
push
test
adc
jge
repz
in
sub
inc
inc
mov
aaa
push
or
gs
jle
lods
pushf
inc
push
insl
and
push
clc
ror
mov
fs
xchg
pop
mov
adc
sbb
push
aas
jae
testl
mov
std
ljmp
outsl
stc
jb
cmp
and
cmpsl
push
or
loopne
and
pop
or
shlb
xchg
shll
lds
mov
mov
and
scas
push
add
int
std
pop
stos
adc
fmul
ret
ret
movsl
mov
fdivrs
mov
movsl
out
js
test
adc
pop
bound
mov
jb
xor
add
xchg
inc
xor
loop
push
lret
ja
sub
cltd
mov
cltd
mov
or
int
push
pop
add
mov
push
popf
imul
scas
xchg
push
outsb
out
cmpsl
es
daa
lock
notl
push
pusha
mov
pushf
int
aas
aam
out
inc
in
int
add
repz
sbb
jae
mov
add
sahf
fstp
add
dec
mov
xor
movsb
cltd
cmpsl
jl
imulb
pushf
shll
das
inc
jl
movsb
inc
lret
xor
adc
sahf
pop
xorl
jnp
mov
and
xor
mov
roll
in
cmc
vpminub
insl
scas
loope
cs
out
aad
les
cltd
sbb
sbb
rcrb
mov
fcmovnb
std
notl
cld
cmp
stos
pushf
pop
ja
pushf
es
jg
rcrb
dec
or
jno
cmp
jp
arpl
xchg
shll
adc
popa
add
xchg
jecxz
xor
add
add
sahf
cld
cs
popa
lock
jmp
jge
leave
xchg
or
aam
sub
xchg
loop
jae
adc
adc
sub
lret
arpl
inc
shlb
xor
pop
in
pop
in
inc
cmp
ss
daa
cmpsb
dec
pop
add
pop
jae
pop
xorl
inc
fistpl
push
cmp
ss
xor
add
xchg
aad
test
imul
cmp
pop
sbb
jae
push
loopne
push
mov
jmp
jns
push
fsubl
push
in
sarb
rcrb
imul
pop
xchg
bound
test
test
dec
rcr
push
lock
and
int3
jbe
ret
ficoms
in
in
sub
mov
in
in
int3
inc
iret
push
xchg
movsb
cltd
andl
je
js
out
xor
cmp
or
mov
inc
ret
call
cmovs
dec
push
ljmp
lea
xor
cwtl
adc
xchg
cmp
fs
jno
movsl
out
aam
jmp
inc
lret
orl
fisttps
mov
cmp
imul
pop
push
adc
arpl
out
mov
xchg
and
xlat
nop
adc
pop
out
pop
push
push
and
and
xchg
lret
mov
xorl
push
icebp
popf
rclb
add
cltd
sahf
repz
mov
out
xlat
sub
jmp
cmp
mov
int3
mov
xor
into
xchg
jne
xor
adc
shlb
les
sti
xchg
cld
stos
neg
movsl
mov
call
mov
je
pushl
mov
push
mov
and
aas
sbb
lods
dec
xchg
push
push
dec
push
inc
mov
cmp
cmp
test
pop
dec
test
mov
jl
in
dec
cmp
adc
nop
das
dec
xor
xchg
mov
push
aam
out
xchg
xchg
pop
lds
jae
movsl
add
in
mov
mov
xchg
pop
or
ds
mov
pop
movsl
pushf
sbb
mov
sub
adc
jno
fdivp
lret
inc
test
or
sub
gs
lds
and
xchg
aam
xlat
dec
es
pop
pop
pop
sti
dec
movsb
cmp
sbb
insl
jl
add
add
outsl
dec
xlat
leave
add
clc
or
movsb
arpl
imul
xchg
ret
out
leave
ds
shll
sbb
dec
mov
jno
fcompl
mov
fcomps
adc
or
sub
out
call
leave
out
dec
in
mov
leave
fiadds
mov
ds
and
mov
mov
jae
pop
pop
inc
dec
stc
mov
pop
add
push
and
fxch
add
dec
in
js
clc
jl
popa
rcr
xor
cmp
and
das
pop
mov
push
jae
ret
jae
mov
push
adc
jg
mov
jno
out
inc
and
movsl
fs
push
sbb
add
stc
mov
sbbl
neg
xor
in
insl
and
jns
and
lahf
xchg
loop
push
loop
inc
shlb
dec
adc
out
xchg
hlt
push
jne
inc
adc
jecxz
rcll
fcomp
iret
pusha
mov
mov
leave
jo
xorl
js
pop
std
and
mov
cs
adc
fistpll
out
push
jae
sbb
lret
daa
rcrb
aam
leave
fs
jns
adc
outsb
cmp
pop
push
push
mov
and
push
sub
push
ja
and
mov
add
lock
loop
lret
stos
lahf
push
sbb
inc
fwait
js
int
in
mov
repnz
int3
rcl
pop
pop
jecxz
pop
sub
sub
push
mov
push
push
dec
mov
mov
mov
ss
mov
lret
lcall
and
cwtl
roll
scas
pop
ja
mov
scas
sahf
addr16
enter
ret
test
test
cld
xchg
or
ret
sbb
sbb
mov
jecxz
mov
pop
cmc
adc
in
ds
stc
enter
inc
rcr
push
push
cmpl
les
imul
out
out
xchg
shll
std
push
adc
je
rolb
repz
cmp
xchg
sub
xor
movsb
xor
mov
not
mov
arpl
out
inc
lock
xor
in
int3
shrb
dec
andl
aad
add
mov
push
jnp
cmp
ret
cmpsb
mov
jb
sbb
fidivs
lahf
shld
lret
ljmp
shl
xchg
imul
cmpsl
push
repz
mov
cmpsl
nop
std
test
shrb
cmc
sub
push
mov
jl
aam
mov
lahf
cmp
loop
add
mov
loop
jbe
cmpsb
out
cld
pop
and
pop
in
mov
sub
sbb
rorb
lcall
jmp
cmp
insl
stos
imul
and
enter
daa
sbb
push
mov
pop
xchg
clc
add
int
cmp
push
lods
insb
adc
out
dec
xor
add
mov
mov
inc
mov
mov
sub
into
sub
cmp
insb
ja
adc
cmp
popl
dec
mov
inc
add
loope
pop
xchg
xchg
dec
push
adc
pop
push
add
jl
mov
cmp
inc
cmpsl
push
fsubl
in
xor
push
dec
sbb
ja
cmp
pop
inc
ds
push
jb
jnp
cmp
ljmp
das
inc
mov
lds
push
pop
ja
mov
fidivrs
xchg
dec
sub
mov
inc
dec
sahf
imul
sub
cmp
orb
cmc
pop
iret
cmp
xchg
xor
jbe
ret
mov
or
dec
arpl
movsl
or
push
shrb
bnd
ja
pushf
pop
mov
mov
les
push
stc
inc
inc
test
mov
add
in
insl
jne
mov
mov
fdivrp
mov
pop
clc
and
push
inc
mov
mov
sub
and
cmp
int
push
jne
adc
lds
lahf
fisubs
push
repz
mov
push
sti
sub
jne
xchg
xchg
pushf
jne
jae
in
test
inc
lahf
dec
jne
notl
and
push
jmp
cltd
push
ds
popa
les
sbb
in
icebp
mov
mov
xchg
sti
pushf
adc
push
out
dec
sarb
xchg
xor
or
in
adc
loope
jmp
dec
pop
push
jb
out
fidivrs
push
or
rcl
mov
in
test
xor
jb
nop
stos
gs
push
xchg
aam
and
jo
rol
or
push
xor
and
mov
sbb
add
mul
repnz
xor
push
inc
mov
cmpb
out
out
mov
jl
loop
add
adc
push
mov
fstps
test
add
jl
out
push
sub
xchg
mov
and
cwtl
leave
sahf
aam
dec
aad
lahf
cmpsl
jl
icebp
lds
cmp
div
ror
xchg
lods
ret
pop
inc
repnz
or
int3
mov
sbb
xor
test
mov
push
pop
xor
sub
fyl2xp1
sbb
jno
push
sub
scas
mov
cmpsl
sbb
dec
mov
mov
mov
add
orb
xchg
add
xchg
repz
pop
mov
xchg
repnz
xchg
push
popa
or
cmp
out
sbb
sbb
orl
mov
cmp
push
fnsave
push
out
inc
mov
push
jge
xor
out
dec
push
pop
pop
insl
loope
scas
lahf
ljmp
orl
call
fstpt
idivl
es
cmp
mov
adcb
sub
sbb
add
xchg
inc
xlat
add
inc
iretw
and
scas
push
cmp
xor
shll
clc
mov
inc
repnz
sbb
scas
mov
fs
fiadds
sbb
jnp
aas
mov
push
repnz
push
cld
dec
leave
stos
mov
adc
in
jl
imul
xor
sbb
aam
add
mov
sub
inc
movsb
idivb
push
arpl
inc
stos
inc
into
mov
adc
ljmp
sub
jp
leave
push
or
jge
test
jmp
adc
loop
jne
arpl
mov
xor
mov
push
int3
imul
adc
jae
cs
fs
dec
push
mov
sub
movsb
lahf
sar
lds
out
in
lret
stc
cs
in
xchg
jb
add
mov
add
sar
xor
jno
bound
call
xor
pushf
adc
js
add
pop
push
pop
fimuls
aam
sub
dec
cwtl
jbe
mov
aam
jbe
iret
sbb
sbb
jl
xchg
xchg
imul
mov
dec
jbe
loop
xchg
mov
mov
sbb
dec
outsl
imul
std
inc
out
ljmp
push
daa
in
roll
dec
mov
mov
imul
scas
pusha
imul
jae,pn
dec
sbbl
dec
xor
lds
cs
sub
insb
stos
cmp
aam
lret
add
pop
mov
cmp
cwtl
popa
xor
sub
and
xchg
roll
and
and
into
mov
push
and
enter
fbld
lcall
stos
inc
mov
int3
fildl
lock
popa
in
pop
jnp
pop
rcll
push
mov
sbb
pop
test
push
xor
ds
push
outsl
add
sub
push
or
xor
xchg
clc
mov
shl
and
jbe
xor
mov
sbb
mov
or
aaa
scas
cwtl
jge
mov
xchg
mov
dec
sbb
in
push
pop
mov
loopne
sbb
decb
xchg
mov
scas
xlat
or
mov
push
jge
add
add
add
insb
icebp
loop
adc
test
frstor
dec
adc
or
add
sub
mov
cmpsb
sahf
fwait
xor
sbb
out
shll
dec
xor
fprem1
shrb
mov
adc
mov
mov
fadds
out
vpslld
call
mov
pop
pop
add
xchg
sub
add
jo
cmp
pop
xchg
or
cltd
xchg
or
sbb
addb
sub
out
loopne
inc
rcr
mov
das
scas
pop
cmpsb
xchg
jno
push
jae
loop
stc
rolb
and
adc
out
in
sarb
dec
sub
xchg
xor
dec
cmp
imul
mov
mov
pop
adc
xchg
or
inc
lock
sbb
xchg
in
cmp
lret
cmp
gs
sbb
repnz
cmpl
bound
ljmp
sbb
adc
fimuls
xlat
sub
les
and
out
in
jns
cmp
xchg
add
and
fadds
cmp
add
cwtl
pop
jg
add
mov
stos
imul
jp
clc
jecxz
sub
mov
jp
and
ljmp
pop
mov
pop
loope
je
adc
adc
push
inc
movsb
or
cmp
sbb
mov
mov
movsb
sbb
and
mov
icebp
aaa
mov
sbb
mov
xlat
jmp
movsl
icebp
lock
sahf
movsl
adc
or
iret
jnp
rol
jno
inc
pop
mov
fdivrs
mov
loop
sbb
loopne
packuswb
sahf
jbe
sub
add
and
push
lods
loope
mov
xchg
jnp
sarb
mov
into
rorl
rclb
jno
lds
pop
sub
lret
bound
push
out
and
mov
int3
out
sbb
fs
jmp
xchg
jmp
test
stos
gs
push
pop
pop
dec
subl
loopne
jo
es
popa
xchg
add
mov
jl
stos
ret
cmpsl
aam
sahf
sbb
or
lock
pop
rcr
lret
stos
lea
out
outsb
shrl
push
xchg
rol
test
jmp
mov
pop
sub
sub
ret
aam
sbb
xor
ret
xor
pusha
int
adc
lret
aas
dec
and
pop
add
leave
loope
sub
pop
jae
cli
lea
outsl
pop
loope
shlb
nop
in
add
imul
subl
fidivrs
or
jle
xchg
repnz
adc
loope
dec
sub
add
inc
pop
or
sbbb
inc
or
pop
cmp
out
nop
aaa
insb
cmp
mov
sub
inc
push
xlat
sub
mov
push
cmp
cmp
mov
outsl
daa
dec
and
ljmp
iret
or
add
xor
addr16
push
loopne
push
ja
ljmp
popa
in
xchg
imul
pop
andl
inc
push
ret
cmp
mov
test
arpl
add
xchg
test
mov
push
xchg
push
dec
test
mov
fwait
dec
xor
std
in
jno
sahf
ret
pop
fildl
test
dec
loope
jl
add
rorb
xor
sbb
mov
inc
out
scas
xchg
outsl
daa
iret
test
sub
ficoml
adc
dec
cmp
mov
push
not
repz
aaa
lds
jecxz
cmpl
lret
fiaddl
inc
stos
repz
jmp
loop
roll
jle
out
scas
mov
test
test
loope
jg
add
jno
scas
leave
outsb
and
xchg
scas
cmp
call
push
jecxz
ret
shlb
ret
int
or
inc
mov
jmp
pusha
cmpsl
xchg
adc
mov
out
dec
test
aaa
mov
out
or
out
mov
mov
or
push
or
push
fiadds
mov
jno
je
stos
mov
mov
and
test
push
mov
lea
dec
xchg
jne
or
repz
inc
sbb
dec
dec
out
inc
or
jns
jnp
sbb
inc
fs
lods
outsl
jne
shl
fdivrs
dec
adc
add
xchg
iret
xchg
and
or
fidivl
mov
dec
push
lcall
scas
cmc
xor
or
sub
jge
pop
push
xor
inc
rcrb
xor
inc
ss
sbb
notb
mov
lahf
int
jecxz
jae
mov
jbe
sub
lds
push
mov
out
push
scas
div
js
fnsave
ja
inc
mov
ret
jp
inc
lea
sub
xchg
pop
mov
push
add
pop
xor
mov
xchg
out
je
sahf
sub
xchg
hlt
sahf
out
adc
mull
sbb
add
lcall
sbb
adc
cltd
sbb
and
mov
inc
jno
fucom
cmc
dec
jecxz
xor
pop
mov
adc
pop
mov
push
inc
lea
adc
sub
sbb
popf
arpl
outsb
nop
mov
call
shll
test
cmp
loop
adc
mov
cmp
or
cs
lods
and
mov
movsb
pop
add
dec
push
sbb
mov
rol
sbb
shld
fucomip
pop
mov
in
jne
cltd
add
jne
or
sub
mov
or
loope
rcll
cmp
je
jno
lea
xchg
xor
sub
xchg
jne
inc
mov
push
outsl
sarl
mov
sub
fidivl
shlb
addr16
fidivs
int
adc
push
mov
int
dec
jae
mov
mov
cmp
leave
mov
out
inc
fsts
test
scas
push
pop
pushf
and
outsl
pop
push
cmp
and
pop
mov
sti
les
add
sbb
push
push
in
icebp
insb
dec
inc
push
lret
test
mov
adc
daa
jl
push
in
sub
push
xchg
dec
mov
hlt
lea
faddp
addr16
push
adc
inc
jne
mov
sub
fnstcw
xchg
mov
daa
fwait
pop
js
iret
out
mov
xchg
cmp
or
test
push
mov
lods
in
rorl
mov
mov
xchg
pop
sbb
pop
loop
add
mov
movsb
repz
mov
mov
fadds
mov
push
repnz
xor
test
lock
xchg
and
test
inc
fstl
ds
push
pop
adc
cltd
sub
inc
xchg
stos
das
in
adc
adc
outsb
fs
lods
lds
jl
dec
rorb
mov
bound
ss
loope
jp
mov
xorb
jb
push
filds
add
mov
jo
adc
add
mov
sbb
data16
cli
mov
lea
push
cmp
scas
pop
push
fbstp
sub
cmp
ret
inc
dec
es
mov
add
jns
inc
fsubrs
or
lea
sub
inc
sbb
adc
lock
jae
je
stc
pop
add
mov
out
cmp
int
push
fimull
cwtl
or
ja
jnp
inc
inc
mov
jp
ds
xchg
lock
add
insb
xchg
xor
int
insl
push
jno
jbe
sti
push
dec
cmp
mov
sub
inc
jl
lahf
lods
int3
xlat
into
pop
push
lock
mov
lock
lods
movsl
push
test
movsb
imul
loop
in
dec
cmp
test
in
loopne
loopne
imul
hlt
outsl
cltd
mov
xorl
les
pop
push
lods
mov
je
xlat
push
out
bound
push
out
test
jne
int3
adc
push
push
dec
scas
jmp
imul
pop
adc
cmp
cld
pop
mov
add
xchg
rcll
popa
xchg
dec
lcall
mov
pushf
or
dec
imul
les
pop
sti
mov
nop
push
mov
jo
dec
xchg
idivb
out
push
xor
adc
out
nop
jl
js
daa
addr16
jae
or
enter
test
and
mov
pop
pop
xor
movsl
mov
fmull
enter
jbe
cmp
sub
iret
lret
subb
shlb
pop
jle
pop
push
inc
push
mov
int3
shrb
shrl
andl
cmp
out
dec
mov
cwtl
add
lods
jb
push
iret
cld
movsb
fcomps
push
push
andb
aas
fwait
xor
cmpsl
sbbb
das
jmp
xor
daa
inc
xor
pop
pusha
jno
pop
xchg
jle
or
test
pop
or
sbb
shrb
xchg
mov
pop
mov
scas
inc
call
jae
dec
xchg
das
push
stos
pop
int3
jns
test
cmp
shll
or
fisttpll
jo
jle
loopne
xchg
mov
std
rorb
out
xor
dec
repnz
aas
adc
push
add
lret
jp
pushf
loop
xor
gs
mov
adc
out
hlt
cmc
push
pop
int
push
dec
repz
xlat
mov
je
scas
and
jns
fists
aas
movsb
adc
lret
rcrb
adc
fisubrs
hlt
sub
xchg
hlt
cs
jl
sbb
lahf
push
jg
insb
inc
icebp
mov
mov
clc
lahf
cwtl
je
jle
cli
inc
pushf
cli
fidivs
cmp
dec
mov
into
jae
pop
adc
ds
ds
icebp
cmp
xchg
jmp
loop
sub
mov
les
fidivrs
cmp
aas
push
or
das
fmuls
scas
mov
xor
outsb
dec
shll
mov
in
pusha
pop
sub
add
les
jb
push
jle
sbb
and
mov
in
mov
clc
nop
push
add
push
je
jo
xchg
xor
sub
jo
scas
sub
int
xor
dec
scas
sub
jne
imul
push
cld
add
cmp
cltd
fistps
push
out
lods
pop
add
or
sub
push
faddl
cmpsb
insb
lea
ljmp
mov
xor
in
in
cmp
ficomps
bound
cwtl
aas
inc
adcb
stc
jmp
mov
enter
loope
shlb
adc
mov
ljmp
push
sti
ret
xchg
popa
jl
cs
mov
and
stc
inc
in
std
and
push
in
into
xor
ja
int3
add
add
and
js
enter
jne
inc
lcall
std
xchg
jmp
stos
sti
arpl
out
dec
out
mov
gs
mov
fwait
inc
sub
jno
dec
jmp
hlt
jl
cmp
aas
lea
daa
inc
adc
mov
loopne
imull
add
fcom
and
push
mov
dec
and
int3
or
and
ss
sub
dec
pop
dec
cltd
clc
cmpsl
inc
lahf
add
in
lea
push
sub
scas
outsb
add
jl
pop
dec
xor
sbb
out
jecxz
bound
add
inc
subb
loope
mov
push
repnz
add
jge
nop
pop
inc
test
sbb
mov
push
xchg
xchg
test
or
imul
push
scas
outsb
stc
push
jl
push
and
mov
lock
xchg
mov
inc
push
stos
je
jle
aas
ret
movsb
xchg
mov
jns
adc
shrl
push
jb
inc
cmp
sbb
jne
jb
hlt
sbb
pusha
xlat
dec
or
mov
mov
out
lods
adc
cmp
cmp
xchg
fidivrs
pusha
jmp
bound
push
cmpsl
popf
pusha
mov
rcll
ficoml
push
mov
repnz
pusha
dec
out
imul
fdivrs
jbe,pt
mov
fbstp
adc
imul
push
repnz
cmp
mov
jmp
cmp
mov
pxor
push
sarl
pop
sbb
test
incb
jl
adc
add
cmp
dec
mov
in
mov
addr16
dec
ja
in
mov
or
dec
mov
pusha
adc
lods
mov
push
shl
jno
popl
mov
in
sbb
loop
or
mov
xchg
mov
mov
sbb
sbb
fildll
or
sbb
outsl
inc
inc
arpl
mov
xchg
in
fwait
shl
es
jle
add
or
jo
xchg
mov
test
xchg
add
scas
mov
rorb
mov
cmp
add
cmp
xchg
ds
repnz
push
jne
or
inc
mov
cmp
int3
xchg
jle
out
cmp
mov
cltd
pop
inc
loope
movsb
aaa
push
fwait
ja
or
or
lea
mov
int3
xacquire
out
sarb
mov
insl
loopne
or
insb
cmpsb
fmul
out
mov
push
test
mov
scas
jge
fwait
cmpsb
mov
clc
icebp
xchg
pop
dec
push
inc
pop
ss
fstps
daa
iret
inc
test
stos
shrb
cmp
imul
mov
jns
int3
mulb
outsb
pop
xchg
mov
ret
mov
es
inc
in
cld
mov
xor
mov
xchg
loop
mov
xor
mov
lods
mov
movsl
rcrl
fistps
fdivl
sbbl
mov
jne
aaa
outsb
mov
pop
movsb
rolb
mov
hlt
hlt
ja
sbb
mov
shl
jl
ror
mov
ret
testl
arpl
sbb
in
mov
xchg
out
fcoml
pop
jge
mov
outsb
out
push
dec
pop
inc
mov
sti
push
jg
sti
negl
mov
cmp
outsl
inc
jmp
lods
dec
mulb
pop
adc
adc
lock
xlat
inc
stos
jb
cltd
clc
sub
push
xchg
fisubl
lret
test
jne
aas
lahf
add
insb
mov
sbb
dec
and
in
lock
in
sub
mov
movd
mov
mov
add
dec
mov
and
xchg
sbb
scas
push
hlt
and
in
out
lock
fistps
je
mov
adc
mov
imul
sbb
adc
aam
fildll
mov
js
pop
pop
or
add
rolb
ficoml
push
inc
cmpsb
inc
push
shlb
xchg
rol
mov
push
fwait
push
cltd
sub
popf
lret
xchg
lret
cs
aam
sbb
cmc
mov
cmp
pop
mov
inc
mov
rcr
add
arpl
inc
xchg
movsb
or
in
ja
jbe
lods
ss
sbb
add
test
in
push
cmp
add
sub
jb
dec
in
inc
pop
mov
cwtl
add
mov
jno
out
sahf
lahf
push
add
ljmp
stc
cs
daa
andl
in
adc
mov
mov
lods
dec
mov
fs
mov
pop
inc
dec
stos
pop
and
dec
int3
add
xlat
pushf
inc
testl
fsubl
adc
aaa
mov
mov
sahf
in
stos
and
js
sub
dec
mov
pop
nop
inc
cmp
jmp
imul
mov
push
cli
pop
push
xlat
mov
cwtl
pushf
add
lahf
mov
inc
and
lcall
fs
js
mov
mulb
in
sub
lock
push
mov
dec
sahf
mov
arpl
pop
shll
std
adc
push
sbb
mov
inc
test
pop
inc
jg
push
shl
lret
pop
fldcw
fadds
into
ret
loope
adc
ja
dec
test
aaa
popa
rolb
sbb
jb
lods
sub
mov
dec
sti
mov
cmpsb
ljmp
mov
jb
ret
ds
mov
lods
mov
loop
cmpl
xchg
push
cmp
decl
inc
je
inc
inc
or
lahf
popf
inc
stos
es
xchg
mov
fcom
ss
fisubrs
sbb
push
add
dec
test
rcrl
pop
fisttpl
shl
jnp
mov
lock
jg
sbb
fs
cmp
inc
or
inc
out
stc
sub
cmp
lds
jge
icebp
or
mov
sbbb
mov
push
or
dec
outsb
negb
jecxz
lds
pop
mov
clc
stos
pop
lahf
pop
or
mov
push
push
sbb
inc
or
and
addr16
xchg
sub
nop
lcall
hlt
out
xchg
js
lret
mov
cmp
scas
mov
aaa
cs
lret
lea
jno
in
jb
xchg
out
enter
scas
stos
stos
push
add
push
push
jo
mov
cld
outsl
fldl
mov
out
outsl
cli
hlt
sti
xor
xlat
popl
rcrb
outsb
repz
xor
scas
or
mov
or
mov
mov
push
lea
scas
clc
jle
pop
xchg
lcall
xor
xchg
dec
mov
mov
fwait
sub
imul
sub
jmp
mov
and
jno
push
jae
ss
push
mov
sbb
dec
dec
cmp
shll
sub
mov
pop
shlb
and
push
lahf
inc
jmp
xor
insb
mov
rcl
jmp
push
xor
and
jns
scas
stc
call
inc
push
pop
repz
sub
aad
outsb
xchg
daa
in
xchg
sahf
stc
icebp
pop
call
sbbb
mov
fcmovb
aas
mov
iret
out
xchg
mov
dec
xchg
push
js
jg
mov
xor
dec
add
sub
dec
aas
or
dec
fbld
mov
pop
inc
xchg
adc
into
sbb
add
or
pop
xchg
xor
jo
insb
or
mov
jne
mov
lret
popa
lret
pop
clc
lods
es
fcmovnbe
dec
lods
and
clc
adc
or
inc
ret
push
inc
aad
xchg
dec
stos
xchg
push
fistpl
clc
mov
lods
fcompl
loopne
lea
flds
mov
mov
cld
xchg
pusha
jmp
lods
add
insb
xchg
cmp
sbb
hlt
test
pop
loope
movsb
out
push
out
ss
in
mov
add
paddsb
xor
and
xchg
xchg
push
imul
push
sbb
ja
push
xorb
out
scas
mov
call
fldcw
mov
dec
stc
enter
stos
xor
cmp
xchg
or
lret
sbb
les
jmp
stos
xchg
sub
push
cli
pop
ss
and
ljmp
rorl
pop
adc
rcll
pop
cmp
lods
int3
lahf
mov
adc
lret
adc
in
add
bound
or
inc
ret
cld
movsl
inc
loop
cs
mov
lahf
stos
sub
insl
cwtl
aaa
fildl
pop
jns
sub
lret
fidivl
xchg
repz
in
test
das
push
cmp
jne
cmc
cmp
jge
pop
push
ds
xchg
lods
add
xor
fs
add
fdivs
jno
xchg
frstor
pop
ss
xchg
cmpl
iret
pop
sbb
insb
mov
adc
movb
xchg
jp
cmp
js
fiadds
push
push
cs
xchg
inc
das
fimuls
mov
popl
xchg
mov
inc
push
push
fs
cmp
repz
lock
sbb
inc
pusha
lahf
cs
inc
adc
xor
imul
cmp
dec
cld
jbe
sbb
ret
xor
adc
xchg
cmp
aaa
in
aas
push
outsl
lea
pop
in
fnsave
mov
outsl
jno
sbb
pop
push
or
xor
movsb
push
mov
mov
push
vhaddps
inc
out
aam
xchg
dec
mov
xchg
mov
or
es
mov
std
ficoms
in
push
jl
std
arpl
inc
mov
xor
insl
cmp
fisubs
aad
movsb
addr16
adc
in
push
xchg
out
pop
pop
xchg
xchg
push
sub
rclb
mov
push
mov
sub
std
insl
inc
add
jp
nop
out
out
mov
mov
aad
leave
std
inc
dec
push
pop
xor
cmc
insl
cmc
je
popa
xchg
rcrl
sbb
testb
or
sub
loope
and
in
jle
sbb
cmpsb
lahf
or
cmp
lret
int3
pop
add
jns
aas
sub
sbb
xchg
jb
xor
mov
cmp
jle
add
js
imul
fucomip
divl
out
dec
or
nop
ss
sub
push
dec
dec
inc
test
mov
mov
xchg
pop
add
popa
std
imul
cmc
or
add
movsl
rorl
cmp
jne
dec
fisttpll
jp
dec
cmp
in
and
aas
pop
mov
shrb
and
and
aam
sar
out
and
jl
aas
mov
jp
incb
rcll
fcoms
arpl
mov
mov
cld
lods
insb
into
outsl
sbb
dec
push
mov
cltd
push
pop
mov
out
mov
stos
cmp
iret
stos
push
lods
popf
sub
addr16
jp
xchg
jb
xchg
inc
push
in
and
arpl
les
xor
pop
cwtl
fwait
adc
or
rcrl
or
jmp
mov
inc
jge
xchg
cs
jno
rcrl
jno
mov
test
sbb
xor
or
pop
fnstcw
add
push
adc
lahf
jp
stos
aas
rcrb
dec
sub
xchg
test
xor
xchg
pop
jns
jns
loope
lock
add
imul
sti
in
and
enter
lret
aaa
mov
fcmove
jnp
or
xadd
xchg
mov
cmpsl
and
mov
lods
test
ret
jbe
xchg
dec
inc
mov
jl
dec
jns
push
inc
sarl
leave
sti
incl
and
shlb
shll
rolb
add
pushf
pop
or
push
roll
adc
inc
lds
xor
shl
fstpt
out
mov
or
dec
repz
ftst
pop
xchg
icebp
std
in
xchg
and
movsl
cltd
add
sbb
cmp
loopne
xor
xchg
es
dec
fistpl
push
fisubl
and
out
jmp
jmp
pusha
in
mov
mov
mov
inc
lret
dec
rcr
shlb
insl
xchg
xor
pusha
int3
mov
out
es
and
fwait
jge
inc
clc
and
push
test
mov
or
sbb
inc
pop
mov
lds
cmp
xchg
adc
hlt
mov
sub
sbbb
lret
or
out
pop
cwtl
adc
push
insl
sub
mov
sub
or
lret
and
jns
sub
lea
xor
in
sub
xor
sub
mov
sub
shll
mov
sbbb
add
in
xor
popf
dec
fsub
cli
xor
xchg
mov
sbb
cmc
cld
movsl
pop
mov
mov
bound
sub
arpl
cmpsl
leave
pmulhuw
subl
scas
dec
sbb
mov
pop
std
test
insb
outsb
xor
pop
xor
push
or
shrl
test
mov
push
push
pop
dec
mov
xor
mov
sarb
cmc
push
jge
addr16
jle
fnstenv
mov
push
mov
fsubrl
movsb
hlt
subl
in
jmp
pop
mov
ja
jae
test
fldl2t
ret
enter
clc
sahf
add
fcoms
test
ja
cmp
mov
sbb
jp
fstpt
xor
push
xchg
scas
in
sub
xlat
fists
lcall
loopne
xchg
adc
imul
pop
pusha
outsl
adcl
push
repz
xor
xor
inc
adc
scas
rcl
shrl
mov
int3
lcall
ja
jb
dec
inc
lods
ja
mov
mov
or
dec
sub
cli
inc
and
mov
ja
call
and
ficoml
out
rolb
xor
gs
jbe
pop
mov
fldl
sub
fdivrs
adc
add
sub
pusha
orb
test
adc
mov
add
mov
repz
lahf
rorl
add
adc
mov
imul
sub
mov
rcr
pop
mov
xchg
sbb
loopne
xor
xlat
out
mov
ja
lret
lods
sbb
or
push
xor
adc
sti
jb
jmp
scas
mov
imul
testl
xchg
daa
dec
out
hlt
rolb
test
sbb
pop
shlb
sbb
push
inc
je
inc
inc
scas
bound
mov
popa
pushf
inc
mov
xchg
scas
mov
loop
inc
mov
mov
mov
das
stc
pop
ss
fsubp
dec
add
mov
mov
test
xchg
dec
popa
pop
hlt
fldt
mov
dec
sbb
out
adc
jnp
outsb
and
dec
push
mov
mov
ret
repz
jo
nop
es
bound
pop
test
inc
or
gs
cmp
lret
popa
loope
mov
mov
and
jno
xchg
add
inc
bound
mov
lret
mov
stos
and
mov
adc
ja
out
movsl
lea
mov
loopne
pop
cmpsl
inc
mov
dec
std
push
test
mov
pop
cmp
adc
cltd
leave
and
adcl
call
out
in
and
in
adc
or
mov
and
pop
std
add
mov
outsb
or
jg
jb
push
test
pop
lods
or
out
es
jp
adc
sbb
out
cmc
ds
push
cmp
ljmp
push
mov
scas
inc
sub
rol
jecxz
inc
push
inc
dec
pushf
cmp
enter
ret
dec
push
das
out
in
lods
cmp
jbe
imul
movsb
in
cltd
or
adcb
lods
push
pusha
xchg
movsl
sub
into
shlb
ficomps
add
jl
push
mov
lret
pop
aaa
shrb
popf
aad
inc
dec
sub
mov
leave
xchg
in
or
mov
out
ret
mov
fists
mov
frstor
ss
inc
or
cltd
adc
ja
jb
inc
lret
daa
mov
pop
xchg
fcomp
mov
ret
fistpll
mov
out
cmpsb
sbb
xchg
test
inc
lock
cmpsb
js
cld
xlat
shrl
and
or
movsb
arpl
repnz
cmpsl
cli
pop
cltd
int
mov
xchg
imul
lds
jecxz
pop
or
hlt
andb
cli
test
inc
inc
pop
cmpsl
add
pop
jmp
push
sti
mov
jle
add
arpl
pop
xor
or
nop
jo
or
ds
nop/reserved
aaa
xchg
outsl
out
push
and
add
leave
stos
popa
cmp
add
mov
ret
jbe
ds
sarb
pop
out
jl
lea
movsl
fwait
pusha
sbb
addb
jns
dec
and
xor
cld
lods
mov
sub
or
or
jmp
xchg
inc
jnp
das
fiadds
outsb
adc
push
pop
dec
xchg
hlt
icebp
icebp
lods
das
fstl
fwait
push
rolb
pop
cmp
cmpsl
xor
test
xor
cmp
adc
sub
jne
push
mov
test
ljmp
cmp
dec
clc
add
divl
clc
adc
jecxz
add
test
sbb
into
and
and
xchg
aaa
mov
sub
xor
xchg
test
fstl
xor
push
push
repnz
or
cmp
mov
pop
mov
in
lret
and
mov
push
xchg
mov
mov
addr16
mov
inc
push
cs
jg
push
test
xchg
jb
in
sbb
lock
inc
pop
xchg
adc
cmp
sbb
push
or
aaa
inc
xlat
or
lret
lcall
pop
cs
pop
add
adc
jl
or
mov
aad
fisubl
icebp
movsb
loopne
in
addr16
out
jmp
cmpb
jle
xor
les
fdivrs
repz
adc
lahf
scas
xchg
das
jecxz
or
mov
test
adc
clc
shrb
inc
cmp
js
sbb
ja
jmp
and
jecxz
inc
push
shrl
jno
outsb
push
xchg
movsb
or
xchg
repnz
cs
xchg
add
shrl
test
sti
sbb
mov
repnz
mov
cmp
dec
pop
daa
jecxz
sarl
or
jbe
cmp
lret
adc
outsb
push
dec
lret
inc
cmp
add
adc
xchg
or
sub
pop
iret
push
cmc
jp
fldl2t
or
xchg
jle
xchg
cmp
adc
sub
outsl
fists
adc
leave
or
mulb
pushf
mov
push
or
divb
fisttpl
mov
mov
cmpsb
fldenv
pushf
jle
adc
sub
stc
ljmp
xor
fisubrl
add
leave
lahf
xchg
orl
lret
test
inc
outsb
jl
or
dec
sarl
push
scas
xor
fwait
bound
inc
mov
pop
push
out
mov
dec
flds
sub
out
mov
xchg
testb
int3
jg
add
jmp
mov
push
repnz
sti
rorb
xlat
push
sub
mov
adc
xchg
pop
cli
call
mov
mov
pop
loop
xor
or
mov
mov
int
xorb
mov
fnsave
bound
push
or
mov
sbb
adc
jns
pop
or
sbbb
nop
in
mov
jns
into
orb
test
das
shlb
lret
mov
xchg
psllw
lahf
leave
and
cmpl
xorl
inc
shll
push
xchg
js
inc
adc
push
cld
pop
jle
sub
cmpl
pop
jge
bound
jp
jo
cmpsl
inc
cli
mov
lahf
shrb
aas
pop
adc
cs
jae
mov
push
sub
jmp
sbb
xchg
stos
loope
mov
jmp
aaa
in
inc
xor
icebp
aad
cmp
xchg
mov
shlb
gs
aas
fldcw
xchg
pop
in
fldt
and
ljmp
stc
sbb
push
xlat
insb
pop
adc
movsb
add
cli
cmp
lret
and
std
xchg
dec
adc
and
adc
dec
mov
or
leave
out
push
rorl
xor
bound
pop
stos
lret
pop
imul
lcall
bound
enter
lret
jle
test
mov
pop
stos
cmp
pop
test
jle
je
pop
or
xchg
fdivrs
inc
fsts
mov
jns
jmp
push
arpl
push
adc
pop
add
data16
push
mov
push
push
dec
aad
xor
jle
cmp
andl
inc
mov
test
adc
mov
push
push
add
movsl
add
jge
dec
mov
lcall
ljmp
loop
mov
andb
add
adc
nop
adc
pop
popf
pusha
xchg
jge
dec
icebp
scas
addr16
dec
test
add
inc
sbb
and
cltd
movsb
mov
and
icebp
out
push
sbb
sub
call
hlt
or
andl
push
xchg
inc
xorl
push
mov
mov
push
das
or
xor
scas
or
mov
push
xchg
fbld
inc
sti
mov
xor
ffree
mov
inc
or
cli
and
movb
sbb
iret
aam
decl
sbbl
dec
jmp
sub
mov
cli
pop
jno
popf
push
inc
idivl
pusha
mov
mov
leave
add
vpermq
jnp
xchg
mov
inc
xchg
mov
sbb
lret
repz
dec
pop
cli
mov
pop
adc
fstps
push
pop
push
cld
out
shlb
pop
call
sbb
shll
dec
and
cmp
test
pop
sub
mov
test
outsl
adc
push
bound
mov
sub
pop
push
fisttpl
outsl
push
add
pusha
sbb
cmpsl
out
inc
fisttpl
in
loop
jb
mov
lock
dec
add
sub
inc
jp
cmp
lea
cli
aaa
jae
clc
movsb
pop
imul
pop
roll
adc
inc
ret
call
inc
inc
mov
les
mov
xchg
mov
mov
pop
repz
adc
mov
movsl
sti
mov
ljmp
or
insb
jb
test
nop
jle
jle
mov
aaa
and
outsl
test
cmp
and
sbb
cmc
out
pusha
fdivrl
lahf
nop
jb,pt
jae
test
out
rclb
pop
inc
sahf
repz
cmpsb
add
fldcw
xchg
popf
mulb
sbb
inc
adc
inc
test
in
cltd
es
shll
rol
xchg
adcl
les
mov
loopne
sub
aas
xchg
loope
movsb
push
rolb
add
out
cmp
xor
and
adc
imul
push
icebp
jecxz
pop
push
xchg
pop
aad
pop
jg
mov
js
lahf
adc
push
sub
ret
adc
and
faddl
xlat
imul
mov
push
jbe
ds
dec
out
loope
inc
xor
xor
jle
sbb
stos
jge
adc
push
std
loope
shl
daa
es
push
mov
xchg
push
repz
cmp
jle
and
js
mov
jno
sahf
add
and
jmp
cmp
cmp
mov
loop
das
adc
mov
insb
adc
xchg
jne
dec
fwait
mov
mov
add
popa
sub
and
addr16
mov
test
int3
outsl
mov
ret
pop
rcrl
pop
pop
push
mov
push
test
fidivs
and
fcmovbe
lock
std
jmp
xor
dec
jecxz
pop
loope
stc
rol
pop
enter
sub
insl
int
lods
imul
xchg
je
or
movsl
dec
or
mov
ret
xchg
sbb
cwtl
fcoms
add
scas
movsl
cmp
push
insb
jle
ret
movsb
and
lock
xor
dec
mov
mov
lret
jbe
inc
ja
outsb
push
aaa
pop
cmp
xchg
mov
mov
fildl
push
sub
fcomps
adc
jecxz
mov
inc
in
xchg
xchg
je
jnp
repz
mov
daa
xor
cmp
stos
xor
cltd
sub
lret
push
cmp
push
popf
sbb
xor
jo
fisttps
out
add
arpl
sbb
imul
sbb
add
push
popa
push
sub
adc
mov
sahf
adc
and
cmp
into
aas
int
cwtl
pop
pop
mov
out
imul
movsl
adc
rcll
jns
negl
loop
mov
cmpsb
sub
outsb
cmpsb
lods
jbe
xor
push
mov
shrb
pop
add
scas
or
mov
pop
xor
stos
fcoms
outsb
test
scas
pop
pop
and
dec
imul
push
orl
mov
bswap
movsb
add
iret
sti
lcall
addr16
inc
in
ljmp
out
adc
lds
jb
enter
jge
aaa
adc
push
test
xorb
js
mov
fisttps
add
pop
pushf
or
adc
inc
sbb
test
pop
divl
cltd
cltd
iret
xorl
mul
or
mov
hlt
aaa
xlat
test
stos
pop
test
jno
xor
xchg
frstor
movsb
push
jae
jge
cmp
repnz
fadd
sarb
xchg
mov
xor
loope
incb
ficoms
mov
adc
sub
xor
dec
dec
add
push
add
jnp
adc
aas
mov
mov
out
sahf
add
popa
pop
jbe
sub
and
arpl
mov
hlt
sub
and
add
movsl
lret
lret
imul
cltd
lret
insl
and
sub
nop
xchg
icebp
or
adc
movsb
movsb
bound
cmp
aaa
cmp
cs
mov
jo
hlt
jbe
scas
inc
stc
mov
div
shll
fsubrl
mov
dec
dec
mov
out
ret
mov
sub
add
lea
xor
jns
xor
push
xor
push
or
shrb
clc
inc
mov
mov
mov
cmp
dec
adc
cld
mov
xor
xor
lods
into
pop
pop
cmp
cmpsl
dec
mov
or
in
push
inc
jmp
cs
adc
push
add
out
adc
test
in
sbb
rcrl
cs
sahf
push
in
lret
cmpsl
and
xchg
cmp
andb
nop
mov
mov
push
push
js
xlat
mov
adc
inc
push
sarl
mov
or
andl
mov
in
fimull
mov
fs
jo
xlat
rcl
inc
ret
push
rcl
and
gs
push
pop
test
mov
cs
aaa
andl
sti
sbb
pop
jb
dec
imul
pop
mov
xor
pop
inc
xchg
push
ja
mov
dec
pop
faddp
das
jae
test
outsb
les
xlat
repnz
mov
xorl
aam
add
jo
cmp
call
push
call
das
les
jb
xor
mov
cltd
xchg
push
loope
loope
fimull
mov
jno
xchg
popa
mov
js
iret
in
lea
dec
ja
cltd
add
push
push
sarl
push
mov
jnp,pn
xor
xchg
iret
stc
cmpsl
lcall
push
ds
call
inc
mov
jle
scas
loop
into
cmpsl
push
lods
or
jbe
xchg
adc
push
mov
mov
lret
cltd
rcl
inc
mov
sub
jbe
mov
jno
decb
out
lret
mov
fcompl
and
arpl
xor
imul
xchg
aaa
pop
out
mov
movsl
mov
loope
scas
fcomip
jno
and
cs
pop
cltd
pop
xor
and
pop
dec
pushf
scas
ss
push
jp
imul
push
push
dec
jnp
in
push
fwait
subb
rorl
cmc
jnp
xchg
ror
or
inc
fmuls
adc
hlt
stc
jecxz
pusha
stc
push
pop
pop
adc
int3
dec
fildll
adc
or
push
mov
insb
jecxz
xchg
hlt
push
mov
add
fisubrl
pop
push
loope
shll
mov
pop
cmp
dec
sbb
push
push
repnz
adc
lock
adc
fisubrs
xorb
mov
cs
or
sub
cs
xchg
or
jle
sub
xchg
movsb
or
xor
lahf
pop
std
in
dec
push
in
and
pop
ja
cmp
lock
dec
adc
dec
or
sahf
test
ss
rcr
push
lods
addr16
pop
jno
orb
jl
out
inc
inc
pushf
jge
ret
jb
je
mov
jbe
out
stc
in
loope
popa
sub
cmp
fcoml
jmp
lret
dec
push
loopne
pop
daa
jle
mov
add
ds
dec
mov
ficoms
rcrb
lahf
iret
sub
adc
or
sahf
xchg
sub
inc
cmp
mov
js
cld
dec
addr16
sub
push
fwait
or
mov
mov
xchg
outsb
fmuls
lret
adc
sbb
repnz
imul
fcoml
rcll
fsub
xchg
fucomp
push
cmp
lea
fmuls
dec
push
leave
mov
lds
jbe
push
jns
mov
ljmp
bound
sbb
add
gs
in
cwtl
lods
mov
out
mov
aad
jbe
ljmp
cmc
popf
push
mov
sub
je
fisubs
dec
pop
es
xor
push
push
loope
mov
aaa
js
in
clc
ret
dec
out
adc
jmp
roll
add
mov
lds
iret
push
sub
pop
sbb
ss
cwtl
in
repz
into
jl
add
sbbb
mov
aas
mov
ds
cmp
inc
sti
inc
sbb
mov
xchg
jg
enter
fisubrl
mov
test
mov
or
mov
mov
adc
jl
and
lea
mov
insb
sub
rclb
lahf
lcall
cmp
movsl
mov
mov
stc
jae
xchg
loopne
loope
in
xorl
fs
inc
push
hlt
in
lds
lret
inc
mov
pop
fwait
inc
sub
cmp
sbbl
out
and
fldt
xor
call
jecxz
jo
jg
repnz
rcr
popa
fwait
ret
mov
mov
lcall
fmul
ja
push
and
mul
mov
popa
pop
or
or
add
mov
call
mov
jbe
adc
lret
cld
jne
push
sbb
popf
push
inc
mov
sub
pop
ret
pusha
out
int3
aam
mov
lds
enter
fwait
push
rcr
movsb
dec
push
outsl
mov
sub
cmpsb
push
aaa
std
or
push
cmp
divb
ret
push
fistpll
pushf
mov
outsb
out
mov
xor
sbb
rorb
or
push
push
pop
dec
scas
add
xor
mov
cmp
out
cli
pop
lahf
cld
loopne
xchg
sbb
mov
stos
sbb
and
notl
mov
imul
inc
add
fistpll
xchg
fimull
shll
or
sbb
outsl
xchg
or
loope
rcrb
cwtl
test
mov
add
mov
jno
dec
and
fxch
dec
fbstp
addr16
jae
je
leave
cmpsl
mov
rorb
push
mov
sbb
inc
cs
sbb
sub
out
hlt
mov
push
mov
lock
adc
jecxz
push
call
aam
in
int
mov
lds
xchg
in
xor
sarb
mov
sbb
mov
sub
lock
lcall
xor
test
inc
mov
cli
mov
xor
adc
cmpsb
bound
aas
xchg
mov
xchg
test
push
or
jp
leave
mov
or
pop
and
movsb
ss
das
loopne
cli
mov
js
jb
push
stos
sub
ret
sti
or
daa
clc
repz
andb
popa
loop
lahf
jnp
jecxz
pop
xchg
lcall
pop
fsubrl
lret
sbb
dec
insl
jge
mov
imul
dec
xchg
xchg
ljmp
mov
sub
adc
cmp
in
or
xchg
das
dec
mov
lods
repz
leave
cld
push
dec
mov
and
in
or
pop
push
imul
adc
cli
mov
sub
mov
pop
repz
mov
call
mov
icebp
push
int3
add
dec
sbb
sub
cmp
cwtl
rol
daa
sub
mov
in
in
loopne
shr
addb
nopl
maskmovq
testl
xchg
ja
xchg
imul
inc
cmp
ss
push
mov
cmpsb
jno
and
fisubs
xor
jle
cld
mov
fnsave
sub
je
xor
pop
int
jne
xor
stc
cmc
movsb
lods
jno
loop
pop
pusha
mov
xlat
mov
inc
outsb
push
fmuls
sbb
ffreep
and
mov
dec
cltd
mov
push
add
sub
or
jecxz
movsb
sahf
jge
mov
arpl
pop
dec
sbb
xor
movsb
mov
dec
mov
or
or
bnd
into
sbbb
insl
mov
mov
jmp
sub
xchg
dec
ret
mov
cmc
jns
pusha
fwait
imul
enter
dec
or
sub
sbb
popf
fsubs
push
test
scas
dec
mov
push
in
cs
xchg
mov
add
push
dec
sub
into
push
shl
repnz
lods
sbb
dec
ret
add
xchg
lods
sbb
sub
push
popa
push
jg
xchg
stc
jns
in
or
mov
mov
out
fbld
adc
in
les
cmpsb
nop
iret
hlt
adc
cltd
push
push
inc
cmp
lcall
pop
data16
jno
fwait
push
pop
xlat
lea
or
int
insl
sti
mov
pop
cmp
test
fisttps
push
mov
mov
dec
push
sub
pusha
js,pn
inc
out
leave
test
jle
loope
int
pop
sbbb
std
inc
scas
mov
sub
sarl
lcall
repz
test
push
insb
mov
xor
addr16
jle
push
sbb
jge
pop
jbe
mov
xchg
sti
dec
mov
push
inc
jecxz
adc
lea
pop
ficoml
adc
hlt
jbe
mov
inc
xor
xchg
jb
and
fcom
mov
adc
daa
mov
cmpsl
cmc
sahf
dec
ja
inc
fidivs
sbb
mov
push
mov
and
imul
outsl
das
xor
dec
mov
lock
rol
cmp
testb
ror
pop
pop
movsl
xchg
bound
test
int
aad
test
pop
lret
mov
xchg
cs
insl
jg
adcb
lret
hlt
jo
mov
sbb
jb
cmp
repnz
stos
ret
xchg
test
lock
or
mov
dec
iret
repnz
lods
inc
test
cmp
cmc
leave
pop
lcall
sub
sub
not
popf
mov
jbe
xorl
pop
fsubrl
mov
shlb
js
xor
lea
test
mov
push
cmp
popf
fsubrs
mov
sbb
inc
lcall
or
jmp
mov
push
and
jo
loope
frstor
imul
and
xchg
jg
add
aam
sub
repnz
mov
das
pushf
out
clc
sbb
mov
mov
sarb
gs
fstl
dec
or
push
mov
mov
in
test
faddl
aad
mov
adc
in
lcall
push
push
mov
mov
sti
add
out
lret
xchg
data16
mov
lods
mov
inc
sub
ja
push
out
outsl
in
es
movsb
jg
lret
xor
and
inc
xchg
out
dec
xor
inc
roll
push
inc
or
gs
mov
fcomps
add
jl
sar
mov
sub
stos
in
sbb
mov
mov
cmc
popf
dec
dec
dec
cltd
add
movsl
std
cmp
xor
jb,pt
mov
jl
mov
in
in
ror
adc
jne
loop
sti
pop
push
int3
stc
adc
mov
nop
mov
dec
test
sar
lock
inc
jbe
push
mov
push
or
imul
insb
mov
shll
or
std
fsubs
add
inc
hlt
cmp
jo
loopne
and
sbb
xor
cmp
mov
fcoml
test
lea
repz
test
roll
push
dec
lcall
loop
xor
sub
sub
loope
adc
lock
out
mov
add
cmp
push
sbb
push
iret
sbb
shll
mov
push
and
mov
dec
cmp
sbb
mov
push
sbb
cmp
adc
pop
fdivrs
incb
sub
inc
jnp
cmp
dec
and
mov
lods
fidivl
inc
nop
shlb
or
fdivr
hlt
jo
aaa
pusha
hlt
xor
scas
pop
inc
or
orl
jbe
add
sbb
stos
xor
insb
popa
mov
shll
lods
pop
lret
and
sbb
or
push
sub
xchg
arpl
hlt
pop
rclb
inc
or
push
js
cwtl
and
pop
scas
mov
jns
mov
xlat
sbb
or
arpl
sbb
push
repz
pop
jg
jno
cs
push
cli
mov
cmp
loop
lahf
xchg
stos
sbb
cltd
dec
loopne
cmp
lods
int3
push
iret
adc
lds
loope
pusha
arpl
icebp
mov
mov
cmp
sub
pop
jnp
icebp
shrl
mov
in
out
xchg
push
lods
inc
sub
mov
in
pop
xchg
loopne
push
nop
mov
xor
xchg
dec
mov
sbb
iret
rorl
cmc
mov
xor
or
jb
sub
push
mov
sbb
fwait
enter
inc
enter
sub
or
mov
jb
mov
lods
ret
add
popa
out
fcmovne
add
addl
mov
ljmp
hlt
or
lret
or
test
mov
cs
faddl
push
lods
lea
insl
stc
test
out
sarb
dec
loope
push
push
inc
jne
sub
jb
xchg
add
add
xchg
test
mov
es
lock
pop
push
adc
lds
scas
sbb
dec
cmpsl
push
xor
dec
jmp
adc
sub
vpshab
idivl
stc
inc
jns
fbld
dec
call
push
pusha
dec
hlt
es
fmuls
sbb
xchg
inc
sub
loope
push
add
and
jg
data16
loopne
sbb
inc
add
in
mov
aam
xlat
xchg
xchg
mov
lds
mov
mov
inc
mov
xor
andl
push
pushf
mov
cwtl
stc
enter
pop
mov
push
arpl
lea
xlat
adc
lcall
fldt
xchg
dec
ss
mov
dec
pop
mov
jge
add
dec
jmp
lret
out
xchg
and
fcmovnbe
dec
xor
mov
inc
inc
faddl
mov
ljmp
add
sub
dec
mov
in
cmpsb
clc
fwait
mov
repnz
les
aas
out
pop
outsl
stos
mov
adc
sub
out
inc
mov
popf
into
rorb
test
dec
and
test
adcb
lea
cli
jnp
in
cmp
fsub
sbb
and
inc
mov
add
nop
sbb
out
push
enter
rcl
jmp
adc
pop
es
jl
lahf
mov
sbb
leave
xor
into
mov
leave
lcall
xchg
dec
push
movsb
call
sbb
ret
jbe
loop
jns
and
arpl
cltd
adc
lock
dec
mov
movb
mov
cs
push
sbb
mov
push
jg
enter
fs
iret
aad
arpl
lods
dec
or
dec
iret
mov
popf
push
scas
je
mov
push
cs
jns
inc
cmpsb
pop
fidivl
inc
lods
into
cmp
adc
push
arpl
mov
aas
jg
scas
cmpsb
sti
xor
popf
cld
adc
push
inc
cmp
mov
mov
pop
inc
enter
push
lea
cld
or
sbb
mov
scas
mov
hlt
repz
push
shrl
lds
mov
pop
popf
scas
mov
hlt
sub
std
mov
jo
in
jno
and
cmc
orb
stos
adc
mov
imul
jg
xor
sub
jns
fcoml
fldenv
xor
xchg
mov
gs
outsl
and
jns
cmp
cmp
mov
fisubl
into
push
stos
hlt
imul
and
aam
mov
xor
aaa
rorl
aas
mov
fiadds
js
mov
jp
lods
sbb
jnp
stos
sub
mov
ror
cmp
jne
mov
mov
popa
out
hlt
add
adc
je
enter
das
sub
mov
cmc
shl
rolb
mov
mov
and
cmp
xor
imul
or
dec
inc
add
rclb
push
push
fiaddl
mov
std
clc
dec
and
xchg
sti
pop
add
jbe
sahf
jl
xchg
fdivl
adc
mov
arpl
out
mov
mov
inc
mov
xor
sub
mov
sub
mov
add
sarb
mov
dec
dec
out
jbe
push
cmp
shl
popa
or
rorb
jle
sub
or
mov
outsb
sub
test
xor
lds
std
testl
or
stos
add
inc
sahf
popf
mov
adc
cmpsb
jns
popf
mov
pop
sar
js
mov
pushf
xlat
xchg
rorl
jle
or
mov
aam
leave
cltd
sub
jecxz
lock
jmp
inc
and
imull
lds
lods
fdivl
in
or
aam
es
mov
ret
outsb
lret
jns
fildl
rorb
aam
lock
and
adc
sub
adc
xor
pop
fucomp
movsb
lds
mov
mov
mov
mov
es
pop
sbb
mov
jo
idivb
aad
jb
lods
jp
pcmpgtd
sbb
popa
fisubl
repnz
sahf
cwtl
enter
shl
nop
inc
out
rcl
arpl
lahf
xchg
sub
jecxz
inc
enter
mov
jne
xor
mov
das
fdivrl
pop
faddl
jl
mov
int3
inc
xlat
inc
adc
adc
mov
lods
outsb
addb
mov
push
js
push
xchg
dec
test
add
jns
scas
xchg
mov
ds
dec
out
xor
dec
jg
mov
in
stos
mov
cs
cmp
mov
push
scas
sbb
adc
outsb
push
and
push
sahf
jbe
scas
push
sbb
mov
rolb
out
imul
movsl
xchg
sub
xor
in
pushl
out
jl
mov
out
xchg
xchg
dec
shr
pop
sbb
loop
movsb
orl
adc
imul
dec
push
xchg
adc
scas
cmp
scas
int
push
lcall
ss
lods
pop
sar
jge
in
sarl
push
jg
test
xor
jns
in
mov
xor
mov
lock
fs
daa
clc
loope
movsb
dec
or
xor
mov
lods
add
stos
add
enter
xor
aaa
mov
stos
xor
cmp
cmp
out
xchg
mov
scas
lcall
push
js
dec
push
ret
data16
lret
sub
xchg
xchg
bound
scas
shr
ljmp
mov
xor
mov
pop
lret
repnz
lahf
xchg
push
sbb
mov
inc
arpl
gs
sti
cmp
leave
clc
test
xchg
and
into
dec
shrl
adc
adc
ret
or
into
cld
cltd
clc
repnz
mov
lods
sub
add
stos
push
les
aaa
cld
ret
mov
popl
xchg
lret
dec
shlb
dec
wbinvd
aad
data16
sub
dec
and
popf
dec
insl
rcl
dec
insl
movsl
mov
orb
xchg
stos
hlt
out
pusha
repnz
outsb
cmpb
jge
push
rorb
mov
push
cmpb
mov
mov
js
mov
sub
mov
rolb
push
scas
repnz
shl
ds
mov
pushf
out
mov
xor
into
leave
out
mov
jns
lret
pusha
bound
das
adc
adc
cmovg
outsl
mov
ret
pop
add
xchg
jnp
cmc
and
mov
pop
or
dec
pop
arpl
mov
mov
add
js
lahf
and
xchg
je
jb
pop
xchg
into
je
dec
jnp
dec
in
mov
dec
ja
mov
add
add
inc
xchg
neg
rolb
pop
pop
js
repnz
push
jle
cmp
xchg
dec
xorb
mov
stc
xchg
jne
sub
stc
sub
xchg
and
in
bound
outsb
jle
xor
sahf
lret
ds
mov
insl
and
push
dec
hlt
cmp
jne
push
enter
pusha
mov
loopne
add
les
cmp
enter
mov
pop
pop
shll
sub
inc
stos
lcall
jnp
cwtl
jns
js
adc
pop
ret
mov
ret
add
dec
cmp
xchg
mov
rcrb
mov
mov
jnp
push
rclb
dec
repnz
dec
fadd
pop
dec
adc
stos
fisttpll
fadds
mov
test
add
and
dec
sub
icebp
jnp
adc
dec
xor
pop
mov
push
lret
dec
jl
push
jl
popa
jge
sahf
mov
or
xchg
std
push
rol
inc
dec
addr16
lds
outsb
adc
scas
sbb
adc
fldl
mov
mov
mov
xchg
pushf
mov
mov
cli
outsl
cmp
call
aam
dec
push
ja
dec
lea
ret
push
push
out
sub
mov
push
enter
mov
sti
jno
push
xchg
ds
and
out
popa
shll
xor
iret
and
mov
dec
fldcw
cwtl
dec
cmp
push
add
mov
or
jecxz
arpl
xor
movsb
test
cwtl
jmp
and
stos
rcrb
mov
jns
call
pop
sbb
mov
inc
sahf
cmp
mov
es
xor
outsl
and
sarl
iret
sub
jecxz
or
cmp
mov
ds
jmp
cmpsl
jecxz
inc
xor
sti
daa
aam
fldl
adc
cmp
insb
push
pop
ret
ljmp
adc
and
inc
rorl
mov
ret
in
dec
cmp
jge
sub
repz
gs
pop
sbb
out
push
push
lea
xor
arpl
fs
divl
sub
sub
xlat
inc
xchg
repz
lahf
jmp
lret
fs
adc
jns
lcall
add
popa
push
das
rcl
xchg
sbb
add
lret
pop
iret
icebp
sbb
loop
mov
cwtl
add
aam
push
fwait
inc
fwait
push
push
nop
loop
repnz
int3
das
fidivl
cmc
popa
pop
ret
pop
mov
sub
bound
aam
clc
mov
pop
cwtl
mov
ret
imull
jg
lock
pop
test
fs
inc
jns
adc
push
cmc
push
inc
push
mov
out
mov
insb
adc
leave
sub
nop
inc
movsb
inc
sahf
aas
repz
pop
mov
imul
xchg
push
arpl
dec
out
fcompl
or
cld
roll
jg
ss
shlb
movsl
add
sub
lock
cld
scas
ss
mov
popf
cmp
mov
dec
insl
jg
js
pop
xchg
cld
cld
xor
xchg
out
loope
sbb
jg
hlt
mov
pop
push
and
mov
xchg
out
mov
dec
push
aaa
mov
sbb
iret
xchg
sbb
jb
mul
xor
jecxz
in
jno
push
dec
sub
scas
lds
rclb
stc
out
mov
add
cmp
lea
pop
sbb
sbb
lea
imul
xor
push
cwtl
icebp
push
incl
push
fstl
jo
pusha
xor
sbb
pop
xor
ret
sbb
lds
jl
adc
in
pop
fisubs
lret
push
cld
jl
jae
dec
dec
cmp
divb
sub
jne
stos
and
mov
or
and
call
pop
jecxz
and
cmp
movsb
sbb
lds
movsb
cmp
dec
pop
push
jl
jle
and
lea
fcomps
dec
pop
adc
dec
scas
mov
cmpsl
xor
bound
jmp
adc
fnsave
push
xchg
sarl
icebp
fwait
push
inc
outsb
xlat
call
sbb
mov
push
sbb
test
cmp
push
xor
add
pop
pop
add
insb
push
in
mov
mov
push
imul
jl
pop
adc
sbb
leave
mov
push
inc
cmp
push
sbb
rcrl
push
ret
loope
mov
movsb
loope
push
pop
out
pop
cmp
cld
stos
sbb
mov
pop
mov
push
sbb
mov
sbb
out
outsl
or
iret
shl
cmp
cvtpi2ps
es
xlat
and
mov
or
test
in
push
mov
or
push
push
jbe
jl
cmpsl
out
loope
and
sbb
xor
push
mul
xor
lahf
cmp
dec
cli
cltd
add
outsb
xor
xor
mov
adc
dec
popa
sbb
scas
mov
pusha
jno
aas
mov
mov
sub
cld
fidivrl
add
inc
sahf
inc
int3
pusha
shrb
pop
aaa
adc
add
mov
maskmovq
xchg
shll
mov
push
xor
addr16
pop
cmp
dec
jge
testl
mov
and
lock
pop
xor
adcb
push
test
and
jo
repnz
cmp
adc
sbb
ret
aad
mov
adcb
or
rorl
adc
mov
xor
insl
pop
mov
mov
cmp
jbe
jg
addr16
fsubrl
cmc
ja
scas
outsl
push
jg
jecxz
addr16
adc
pop
pop
jmp
imul
les
sbb
pop
xchg
jne
jb
mov
or
jno
gs
test
mov
call
fwait
sub
js
int
fistpl
dec
mov
andl
movsb
das
dec
ja
ss
icebp
loop
imul
and
sti
jbe
addr16
movsb
and
in
dec
nop
in
nop
movsb
add
inc
jno
xchg
inc
jnp
cli
xchg
addb
aaa
test
mov
mov
aam
cld
aaa
lret
xchg
popa
aas
xchg
into
lock
inc
sub
shl
jns
ret
xchg
pop
xchg
scas
jae
inc
push
xchg
aad
js
sti
adc
and
or
out
push
sbb
mov
push
cmc
test
push
cld
pop
std
xor
push
xor
out
xchg
ss
into
loopne
sti
xchg
mov
addr16
mov
inc
adc
jb
fisttpl
jmp
aas
shll
adc
in
inc
sub
or
jmp
shlb
pop
mov
call
dec
fs
pushf
push
xor
sub
insl
test
fnstenv
fisubs
cmp
ret
mov
inc
jp
push
scas
mov
pop
in
or
rorb
push
jg
test
dec
xor
fsubrs
mov
push
pop
loop
ja,pt
inc
les
jge
dec
jl
lea
fldpi
gs
cmp
jns
in
call
mov
cmp
out
in
or
mov
mov
inc
and
add
pop
and
out
pop
into
data16
dec
or
jmp
incb
fists
xor
push
sbbb
push
sub
push
pop
outsl
and
push
fiadds
sahf
fs
and
dec
push
shl
aam
pop
out
clc
cmp
fs
into
sbb
or
pop
frstor
icebp
sub
mov
jle
sbb
lock
ss
xchg
inc
inc
add
sub
push
xor
inc
jae
fwait
push
into
mov
xchg
xchg
test
cwtl
and
xchg
sarl
xchg
add
scas
inc
jnp
push
ficoms
push
out
xchg
mov
or
gs
mov
jns
mov
mov
in
cli
mov
les
push
jbe
cltd
jecxz
pop
js
cmp
mov
jbe
push
lcall
gs
mov
cmp
and
out
jnp
and
mov
xchg
sub
push
jae
testl
lahf
insl
add
fsts
sub
loopne
inc
lods
add
jae
mov
sarb
sbb
xchg
mov
pop
leave
mov
jns
mov
incb
cmp
mov
push
xchg
movsb
inc
dec
mov
bound
pop
xchg
loope
jl
mov
dec
insb
call
inc
loopne
test
or
xchg
pop
lret
dec
and
setns
pop
loopne
pop
push
mov
or
push
mov
pop
cld
xor
xchg
inc
adcl
or
mov
sub
stos
sbb
dec
cmc
pop
mov
shrl
cmp
sbb
cmp
ss
loop
fwait
std
scas
jmp
or
gs
pop
xor
data16
add
loop
pop
jmp
sub
mov
stos
jl
lret
stos
scas
lret
pop
test
stc
adc
sahf
stos
fnstcw
jmp
enter
shlb
mov
lock
in
and
decl
arpl
cld
sbb
pushf
adc
add
push
call
sbb
fstps
dec
xchg
push
popf
mov
ficomps
cmpsb
cmpsb
inc
push
xor
fisttpl
aaa
mov
nop
int
jns
call
out
int
lea
mov
fsubs
iret
insb
divb
pop
test
jne
xor
int3
rcll
aas
dec
dec
adc
xchg
sbb
pop
loopne
cmp
xchg
pusha
add
pusha
ret
cmp
sub
mov
outsl
ja
pop
out
imulb
sub
push
cmpsb
sub
fisubs
xchg
lods
cmc
std
adc
add
fsubrs
cmpsb
das
mov
test
test
jno
xor
xchg
cmp
dec
push
sbb
jbe
mov
xor
push
push
push
call
imul
fwait
aas
arpl
insb
clc
rolb
outsl
inc
pop
mov
mov
xchg
sarl
add
mov
iret
inc
popa
pop
cmp
out
lock
pop
icebp
inc
cs
mull
cld
fsubrs
jno
out
mov
jnp
int3
cmpsb
dec
mov
es
sub
lcall
dec
mov
loopne
clc
lahf
pop
jmp
or
mov
insl
loopne
mov
sub
movsl
imul
cs
or
cld
fadds
notb
test
pop
pop
repz
sub
pushf
out
pushf
push
and
mov
lret
enter
or
popa
mov
lds
les
aad
cld
lcall
push
inc
inc
sub
les
lods
xlat
sbb
inc
cmp
incb
enter
subb
movsb
inc
stos
pop
icebp
inc
iret
sub
and
addr16
clc
ds
push
cld
jl
ljmp
scas
or
mov
or
adc
mov
das
dec
movsb
mov
mov
or
fwait
call
lods
hlt
mov
ret
in
adc
divb
add
sbb
adc
push
test
aad
lods
cmp
icebp
nop
or
lods
mov
fcomps
push
std
jo
test
dec
xor
int3
rorb
mov
pcmpgtw
pushf
pop
inc
sbb
cmp
mov
mov
pop
pop
in
in
mov
xchg
mov
sub
out
jl
mov
sub
inc
sub
jge
clc
pushf
std
repz
jns
inc
and
adc
cs
mov
dec
lret
ret
mov
xor
mov
leave
dec
icebp
or
stos
mov
pushf
hlt
and
mov
and
out
movsb
out
xchg
mov
lcall
mov
in
mov
lcall
or
icebp
inc
stos
and
sub
xchg
out
jns
push
pop
dec
sub
pop
andl
mov
sbb
xor
adc
push
data16
scas
xor
orb
mov
mov
xor
repnz
out
xchg
or
test
cmpsl
push
lock
dec
jno
mov
notb
cmpb
mov
cmp
stos
rol
sarb
push
inc
inc
inc
pop
xor
lods
sub
sti
mov
in
stos
and
mov
xchg
sbb
mov
jne
aas
andl
xor
adc
push
sarl
and
arpl
movsb
stos
call
mov
jne
and
sbb
int3
mov
into
cld
sahf
adc
sub
std
adc
aam
in
sub
insl
mov
cmp
lods
into
inc
mov
lret
test
das
xor
ds
cmc
lods
std
xor
add
ljmp
lods
sub
and
mov
push
aaa
enter
insb
mov
sub
popa
lock
and
faddl
jo,pt
int
ss
ds
add
es
cwtl
stos
push
hlt
pop
out
xchg
ret
addl
enter
cld
aam
imul
shrb
lods
jmp
and
jne
pop
ret
cmpsl
data16
aam
or
dec
movsl
aas
push
adc
add
enter
pop
shr
jne
or
sahf
xchg
clc
movsb
pop
push
sub
push
aaa
jmp
mov
mov
les
jne
ds
jns
sbb
sub
jne
pusha
sbb
mov
scas
sahf
lret
inc
jmp
mov
jg
fsubrl
out
hlt
mov
insl
gs
incb
out
cltd
sbb
test
lods
clc
cwtl
in
add
jno
shlb
fisttpll
insl
jg
outsb
sub
or
jle
push
xchg
lods
imulb
out
cmpl
aas
into
and
fstl
mov
frstor
cmp
adcl
jbe
push
push
sbb
inc
add
enter
push
mov
enter
sub
aaa
sbb
fsubs
ljmp
ss
xchg
mov
enter
mull
faddl
imul
jmp
clc
and
aad
test
ss
pop
cli
adc
test
and
enter
mov
cmp
and
lea
mov
xchg
jns
movsl
adc
push
test
inc
mov
fcompl
les
enter
iret
ss
adc
mov
test
daa
test
xor
xchg
pusha
outsb
cmc
fiadds
cmp
or
pushf
aam
js
cmp
lods
imul
adc
push
pop
ss
lods
jae
jne
daa
xchg
pop
mov
jl
inc
mov
lret
outsl
aam
adc
fsubrs
mov
insb
sbbl
rcrl
int3
push
clc
mov
sbb
sbb
aad
arpl
mov
xchg
jmp
repz
dec
adc
mov
or
xor
clc
rsqrtps
js
push
les
std
sub
jge
inc
add
in
es
es
rclb
into
lret
cmpsb
push
sbb
aas
ret
int
hlt
cmpsb
cmpsb
cmp
xor
shrl
fcmovnbe
add
mov
scas
lods
jno
inc
test
ficomps
aaa
jmp
addr16
aad
jmp
pop
outsl
cmp
das
int3
adc
idivb
imul
mov
aaa
arpl
adc
add
in
xchg
cmp
pop
aas
xor
call
xchg
pusha
cmpsb
ljmp
inc
inc
push
mov
dec
loope
out
xor
and
cmp
mov
or
dec
ret
rclb
lock
push
mov
repnz
outsb
fmul
mov
fidivrl
jno
cmp
pop
fwait
mov
insb
data16
jle
dec
sti
les
pushf
adc
jnp
rcl
icebp
mov
ljmp
jmp
mov
jns
jns
xor
jmp
ljmp
popf
cmp
push
mov
pop
lahf
rcl
call
mov
pop
out
mov
cmp
or
push
xchg
cmp
jecxz
sbb
loop
jnp
cmpsl
mov
outsl
data16
jnp
hlt
test
push
clc
pop
pop
stos
xchg
cld
fs
push
mov
mov
fdiv
inc
vpshad
clc
js
inc
in
mov
xor
insb
push
inc
and
jns
dec
in
ret
fwait
mov
pop
lock
push
jnp
xchg
pop
jp
mov
or
int
cmpsb
mov
ljmp
jge
dec
adc
push
mov
pop
cmpl
and
sub
add
sbb
lcall
sbb
scas
cwtl
push
ja
int
ret
mov
out
mov
jl
mov
xor
das
mov
rclb
sub
mov
cmp
jne
xor
mov
cmpsl
jge
or
xor
pop
push
or
test
cmc
ret
push
xor
dec
in
lret
cmpsl
push
divb
cmpsb
pop
jg
fnstsw
mov
cmp
jne
test
xchg
jmp
sub
lods
enter
mov
ljmp
icebp
add
pop
jne
fbld
mov
jno
stos
ret
sbb
sbb
test
jl
and
cmp
lds
dec
cli
dec
mov
stos
inc
mov
inc
aaa
dec
test
insl
sub
icebp
pop
aad
or
aam
mov
das
dec
push
xchg
pop
jnp
dec
mov
and
in
xchg
jecxz
mov
jmp
daa
lahf
fldt
sub
andl
fildll
mov
xorb
mov
cmp
jecxz
loope
jne
add
xor
call
or
jae
fwait
cmpsl
mov
test
mov
std
or
sbb
jl
and
xchg
or
and
aad
daa
cmp
popa
pop
xor
jp
shrb
bound
adcb
mov
xchg
and
pop
xchg
insl
into
fucomip
mov
fildll
dec
pop
lahf
mov
imul
mov
mov
imul
loope
rolb
xorl
icebp
outsb
lret
andl
lret
mov
mov
pushf
lret
in
aad
push
rcll
rcpps
neg
stos
mov
mov
movsb
scas
inc
fwait
js
mov
aaa
fcoml
fcom
xchg
enter
xor
lahf
push
lret
repz
mov
xor
movsl
push
in
xlat
dec
arpl
adc
fidivrl
fs
and
leave
push
in
push
cwtl
int3
loope
stos
pop
icebp
mov
int3
popa
inc
cli
rorl
or
insb
ja
xchg
sbb
xor
nop
adc
inc
sti
xchg
sub
test
jmp
jno
xchg
push
fadd
cmp
pushf
and
ljmp
shrl
pop
xchg
aad
ret
mov
lods
push
int
nop
ret
push
orb
add
dec
dec
sbb
pop
mov
inc
add
adc
call
mov
jnp
cmp
lods
push
out
int3
or
push
cwtl
adc
push
and
iret
les
inc
daa
xor
push
sub
mov
in
sbb
sbb
out
into
repnz
sti
jnp
subl
in
jg
pop
fidivs
lods
cli
aam
pop
push
mov
and
lods
sbb
mov
call
cmc
mov
cmc
sub
sub
jmp
divl
jne
call
push
add
fsts
gs
repnz
adc
sbb
cmpsb
and
jl
ljmp
cmp
out
push
push
fidivrl
sbb
jg
mov
scas
fisttpll
inc
xchg
cs
cmp
jle,pt
fwait
or
xchg
xchg
lea
leave
inc
ds
into
dec
stos
xchg
inc
xchg
test
imul
sahf
mov
or
nop
xlat
push
cld
test
mov
je,pt
shr
subb
add
xor
cmpl
je
inc
xchg
movl
lds
test
mov
mov
inc
imul
insl
iret
fwait
xchg
jge
xchg
pop
push
andl
or
xor
or
xchg
in
movl
shrb
pop
mov
test
lds
pop
int
movsb
fisttps
adc
je
push
insl
dec
out
js
sti
push
sub
aad
adcl
fcompl
sbb
ja
xchg
pop
mov
push
xor
loop
push
jg
inc
test
lods
sbb
ret
bound
xchg
xchg
jbe
or
cmp
out
rclb
cmp
ret
or
mov
mov
inc
jg
dec
sub
sbb
dec
mov
out
mov
cmp
mov
imul
test
sub
mov
jnp
adc
mov
icebp
fldcw
icebp
mov
jecxz
jae
shl
xlat
adc
or
xchg
add
jge
mov
jae
xor
dec
insb
or
and
add
lods
roll
insb
dec
xor
push
fldcw
les
dec
inc
call
out
sub
add
push
adc
sbb
lret
test
ljmp
xchg
push
mov
dec
das
call
out
lahf
mov
test
iret
dec
jbe
sbb
cmp
mov
dec
jbe
lcall
sub
aaa
cmpsl
push
dec
pop
push
arpl
addr16
loope
sub
in
cmp
add
in
pop
pusha
cmp
add
mov
cld
sub
cmp
add
jle
into
pop
adc
inc
insb
repnz
ficompl
cltd
mov
push
sub
aam
xor
jp
imul
mov
sub
pop
mov
mov
push
rorb
dec
int
mov
mov
pop
mov
jl
jp
push
stos
pushf
dec
lea
lock
leave
cmpsl
adc
add
mov
or
cmp
mov
cld
sub
mov
mov
test
in
test
loopne
pop
scas
sbb
inc
pop
incb
sbb
mov
sub
inc
xchg
pop
sbb
shrb
cmp
xchg
dec
xor
xchg
popf
leave
dec
mov
add
add
js
fcoml
xchg
ss
inc
enter
dec
loopne
insb
xchg
imul
add
cmp
adc
push
fcoms
jns
fbld
push
push
mov
jg
subl
cmp
push
rclb
pop
inc
jns
and
jbe
pop
mov
rclb
pop
test
dec
cli
push
jl
hlt
enter
out
sar
rcll
repnz
jo
call
dec
pop
inc
addr16
ljmp
mov
rol
mov
mov
and
xor
or
mov
imull
pop
sahf
cmp
mov
aam
or
in
adc
sub
aad
pop
ds
sbb
lds
filds
cli
sbb
jp
ds
xchg
rcll
sti
in
cmp
cwtl
inc
cli
pop
jmp
adc
movsl
movsl
push
fisubs
pop
xor
jnp
pop
daa
int
mov
xor
paddw
inc
arpl
scas
enter
or
jae
rolb
xor
cmp
xor
dec
inc
sub
pop
add
cwtl
dec
push
ljmp
repnz
cmp
popa
cmp
fstps
rcll
mov
inc
insl
and
xchg
xor
into
arpl
xchg
jmp
rcl
xor
cli
xchg
imul
rolb
xchg
daa
push
sbb
jmp
mov
ds
or
andb
sti
hlt
push
sbb
mov
scas
jo
movsl
or
jecxz
dec
lahf
dec
je
inc
or
sti
arpl
mov
push
jp
push
subb
popf
cltd
test
ja
cmpsl
xchg
cmpsb
divb
push
jns
cli
pusha
ret
in
xchg
mov
arpl
jae
mov
aaa
inc
jl
fwait
inc
clc
loopne
add
sub
jle
lods
sub
xlat
in
lret
add
scas
and
leave
mov
push
addr16
mov
push
addr16
pop
cmpxchg
ds
sahf
mov
stos
adc
popa
js
inc
xor
scas
insl
push
pop
rcrb
dec
cvtpi2ps
xchg
cmp
int3
push
lds
das
jmp
jb
jb
sub
and
adc
mov
int3
dec
lret
mov
test
push
sbb
ja
faddl
les
pop
pop
iret
movsl
pop
inc
xchg
mov
xchg
js
data16
out
ret
xlat
mov
outsb
dec
inc
sub
mov
and
push
jnp
mov
jno
cmp
mov
xor
loope
out
rcrl
cli
mov
lds
rcr
cmc
ret
dec
and
das
scas
sbb
mov
fisubrl
pop
leave
xor
mov
cltd
inc
popa
sub
jge
cmpsl
xchg
dec
mov
lahf
hlt
dec
sbbl
push
lods
shlb
fwait
in
ljmp
mov
mov
mov
adc
dec
add
cmp
pushf
add
punpckhdq
sbb
mov
xchg
xor
scas
in
call
jns
movsl
arpl
in
sub
subb
je
repz
and
leave
pop
iret
icebp
xchg
clc
adc
pop
int
fiadds
call
shlb
mov
cmpsb
out
loopne
push
jnp
cmp
jg
jns
cmpsb
cmp
push
sub
lods
sbb
imulb
aam
add
dec
mov
mov
sub
xor
aad
dec
arpl
pushf
pop
sbb
inc
sti
das
mov
stos
sbb
repz
outsl
jmp
ret
fsubr
in
hlt
iret
mov
daa
adc
push
push
rorl
popl
jb
pop
rolb
aad
mov
mov
lret
jnp
sub
aam
sub
inc
push
nop
push
jns
mov
cwtl
sub
repz
push
cmpl
adc
jno
in
call
adc
test
mov
dec
xchg
or
das
cmpb
lods
xchg
mov
and
aam
lds
lahf
in
pop
add
arpl
add
or
mov
xchg
pop
in
sub
dec
mov
pop
add
xchg
xor
jp
out
mov
push
stc
dec
into
repz
pop
adc
divb
xor
adcb
aad
add
ja
out
imul
jo
cmc
sub
or
inc
or
sbb
xor
inc
or
xorl
int3
ret
out
cmp
sbbl
lods
dec
inc
xor
sub
sbb
xchg
int
rcll
bswap
and
jle
pop
push
ss
cmp
fsubrl
sbb
fmuls
pop
xor
cmp
int
sarl
or
dec
cmp
jmp
fcompl
out
and
pushf
push
bound
je
lahf
sub
hlt
cmc
rol
xchg
inc
lods
cs
and
fsubs
pop
outsb
and
lock
jo
xchg
clc
mov
in
jmp
cld
gs
mov
out
popa
movsb
psadbw
sbb
inc
inc
adc
dec
pop
repz
shrl
pop
outsl
cli
sahf
in
mov
inc
add
xchg
adc
fwait
add
shll
fildll
jno
dec
push
add
and
mov
les
test
push
inc
mov
ret
xlat
add
les
imul
std
jmp
iret
into
inc
daa
dec
mov
mov
cli
ljmp
inc
xchg
in
in
xchg
testb
outsb
or
push
repz
push
enter
insl
xchg
xor
out
sbb
in
xorl
xchg
test
andb
stos
jle
iret
mov
stc
ret
inc
or
imul
mov
push
pop
fwait
test
lods
lea
stc
out
inc
mov
dec
jno
inc
outsb
inc
stc
cmp
and
andb
pop
mov
inc
sbb
sbb
add
lea
mov
jo
out
cmpl
test
shll
mov
xchg
adc
ja
cmp
lahf
and
sar
jne
dec
push
jo
loopne
in
dec
add
dec
xchg
sbb
mov
xor
ret
and
push
sar
out
mov
aaa
mov
adcb
add
push
push
pop
xor
mov
insb
xchg
gs
imul
push
fstps
adc
sbb
sbb
rorl
cmc
xchg
xor
push
out
sti
aas
xor
or
cltd
loope
das
imul
mov
mov
ret
or
pop
push
mov
adc
rcr
adc
or
xchg
push
xchg
and
outsl
and
mov
push
mov
mov
addb
mov
xchg
ss
lods
mov
das
gs
lods
cmpb
test
cmp
fbstp
xchg
adc
inc
sub
sub
add
mov
pop
shl
repz
cmp
orb
mov
inc
cmpsl
mov
push
xchg
mov
fldl
sbb
and
je
call
repz
inc
push
test
aad
stc
jecxz
mov
rclb
jmp
dec
jo
jmp
imull
das
xchg
stc
pushf
test
sahf
adc
pusha
and
cltd
test
test
sub
adc
or
mov
pop
sbb
add
push
lock
int3
pop
daa
pushl
or
cmp
mov
repnz
cmpsl
push
jne
arpl
out
cld
jle
mov
xor
loop
mov
dec
pop
push
or
fistpll
pop
imul
inc
dec
lcall
or
cmp
out
nop
jmp
xchg
js,pt
or
pop
push
leave
ss
xchg
idivl
mov
adc
pop
dec
sub
insb
push
mov
ljmp
hlt
push
mov
test
out
popf
cmpsb
xchg
adc
aam
dec
jmp
xchg
mov
pop
sbb
dec
outsl
enter
aad
icebp
jne
mov
pop
push
sub
jle
fidivrs
fimull
adc
push
rorb
xchg
test
lret
cmp
dec
loop
push
or
mov
pop
mov
push
or
mov
jnp
shr
ret
xchg
jno
push
out
in
pop
push
jno
mov
in
cmp
mov
lds
out
add
into
cmp
ss
loopne
or
xchg
push
cmp
jne
mov
or
lret
outsb
int3
fwait
jb
sbb
imul
cltd
jb
movsl
loopne
mov
xchg
mov
out
sub
mulb
jp
mov
movsl
pop
ret
adc
sbb
dec
leave
inc
aad
cltd
sbb
outsb
jmp
andl
fiaddl
ds
push
jo
mov
jg
xor
push
adc
adc
les
lcall
insb
outsb
sub
lcall
enter
mov
lods
and
fmull
out
cmp
imul
adc
mov
jmp
push
out
xor
cmp
out
fldcw
lcall
out
dec
ja
cmp
jae
div
iret
cmc
jp
and
push
lahf
aaa
pushf
mov
mov
out
roll
and
pop
mov
or
cmpb
call
movsl
cld
pop
js
stos
jnp
roll
xchg
sbb
dec
stos
xor
pop
adc
repnz
inc
add
pavgb
jbe
xchg
loope
mov
and
idiv
shll
js
int3
arpl
sbb
outsl
mov
push
add
in
cmpsl
mov
xlat
leave
inc
in
in
add
dec
movsl
popf
sub
dec
pushf
lds
mov
mov
pop
out
push
xor
test
ja
scas
imul
mov
inc
jo
movsb
sub
rcll
or
mov
add
aas
lock
fisttpll
ja
sbb
imul
cmp
leave
and
sub
cmpsb
cs
hlt
out
sub
sub
mov
out
outsl
dec
inc
mov
jecxz
repnz
insl
dec
fs
xchg
mov
inc
jbe
jb
stos
in
push
frstor
test
bound
movsb
mov
jns
xchg
inc
pop
jl
leave
lret
push
lret
aad
aas
clc
mov
add
mov
xchg
test
and
inc
sub
int3
inc
insb
adc
dec
pop
dec
fidivrs
pop
ds
and
mov
push
jl
pop
push
enter
out
push
sub
push
int
dec
xchg
pusha
add
mov
inc
or
mov
addr16
pop
inc
mov
adc
insb
daa
lods
jbe
repnz
imul
hlt
bound
movsl
pop
aas
addr16
mov
ja
insl
aas
nop
mov
movsb
push
imul
jnp
mov
add
es
sbb
into
shll
pop
or
dec
in
adc
push
das
push
into
ret
pop
mov
pusha
inc
test
xlat
push
jnp
xor
dec
sbb
jecxz
xchg
adc
lods
xchg
and
aaa
mov
mov
icebp
in
cmp
call
inc
fdivs
cli
leave
fmul
into
xor
cmp
dec
pop
call
xor
mov
bound
pminsw
xlat
mov
xchg
mov
dec
push
mov
aam
movsl
mov
enter
xchg
into
push
pop
jae
dec
ss
pop
out
add
or
imul
xchg
lods
jbe
pushf
inc
adc
bound
shll
sub
jno
outsl
dec
insb
jecxz
cwtl
lret
ret
pusha
add
movsb
inc
outsb
sub
mov
rcr
jbe
hlt
sbb
orb
lcall
call
cmp
clc
popf
in
adc
or
ss
cmpsl
fistl
rolb
sbb
pop
in
pop
lahf
cltd
xchg
jge
mov
cmp
rcr
js
jae
cltd
xor
push
inc
push
inc
inc
lcall
fisubrl
xorl
and
lock
test
mov
adc
mov
in
dec
push
mov
addr16
aas
sti
sbb
stos
fwait
scas
mov
insl
fwait
jle
js
jae
xchg
loope
adc
jmp
in
in
std
movl
scas
addr16
jp
xor
xchg
fucomip
aaa
and
mov
loope
test
inc
fldt
mov
xor
lods
sarl
mov
aam
mov
xor
orl
loope
mov
aaa
xchg
sub
pop
fidivrs
push
lret
stos
inc
test
out
das
xchg
dec
cmp
call
sub
adc
out
lcall
mov
jmp
movsb
in
xchg
mov
shrb
jbe
adc
add
rcrl
xor
rcrb
pop
addr16
es
adc
and
jae
aam
jne
movsb
jecxz
pop
mov
loope
inc
shll
cld
lahf
jg
sub
pop
lret
dec
mov
ljmp
jo
test
jno
into
adc
jl
sub
xor
icebp
mov
jmp
jmp
mov
xor
pop
mov
in
push
aam
movsb
fdivs
mov
pop
nop
adc
and
out
iret
or
popa
mov
inc
add
mov
lds
mov
mov
adc
div
inc
cmpsb
sub
insl
bound
je
repz
data16
lea
mov
outsl
lds
adc
ret
loopne
sbbb
mov
cs
push
stos
rcl
stos
ja
xchg
jne
pop
dec
ja
subb
loope
mov
mov
sarl
mov
movsb
dec
xor
or
data16
jecxz
add
andl
or
das
and
adc
ds
sub
sub
mov
rorb
xor
bound
imull
mov
imul
mov
in
pop
pop
incl
inc
cltd
outsl
jp
dec
popf
iret
xchg
loope
stc
std
ror
in
pop
sub
negl
nop
adc
and
data16
xchg
mov
mov
inc
test
sub
push
inc
inc
xchg
hlt
scas
test
bound
data16
adc
cmp
ret
iret
xchg
ret
or
push
outsb
lock
jle
mov
jbe
ficompl
dec
jl
xchg
ret
mov
sub
adc
pop
mov
mov
cmp
push
xor
pop
aaa
cmp
repz
outsl
mulb
xchg
xchg
outsl
lret
or
cmc
mov
push
add
jnp
in
xor
inc
push
pop
jg
cmp
stos
jecxz
adc
mov
ret
fwait
and
aad
xchg
popa
mov
mov
loopne
ds
xchg
movsl
mov
addb
outsl
push
call
cs
fldl
jmp
and
and
sbb
cmpsb
mov
push
pop
test
lea
push
sti
movsb
mov
pop
dec
ja
ss
jl
shl
outsb
loop
pop
sbb
inc
incb
lock
add
icebp
dec
imul
mov
adc
ljmp
jmp
out
or
sbb
adc
mov
adc
cmpsl
les
gs
sarb
jne
sbb
xchg
imul
fcomps
and
mov
divb
popf
in
dec
jnp
loopne
out
shll
cs
in
jge
iret
mov
cmpsl
cmp
lea
jns
jle
in
into
sbb
xor
cwtl
sbb
inc
pushf
jns
fsubrl
mov
dec
add
mov
pusha
mov
pop
pop
push
addr16
xchg
mov
scas
cmpsb
js
mov
sbb
adc
jnp
pop
leave
rclb
cmp
push
adc
fldcw
add
mov
out
jo
inc
aam
xor
xchg
outsb
jge
push
fisubl
jmp
pop
nop
pop
mov
cli
xlat
adc
loop
jle
jnp
pop
subl
test
adc
sbb
inc
add
fdivrs
in
dec
and
xor
mov
aad
inc
lret
inc
lods
jmp
dec
xorl
pop
cs
sbb
lea
mov
push
xchg
jecxz
in
lods
jge
pop
outsb
jns
pop
add
xchg
fsubs
jns
xor
cltd
mov
xor
test
rcrl
fidivrl
lret
mov
insb
cmpsb
inc
movsb
int
loope
int
mov
add
push
push
enter
xchg
out
ds
mov
inc
jle
lahf
mov
ljmp
mov
fcoms
inc
loope
inc
mov
or
dec
push
fmull
mov
data16
fldenv
adc
loope
mov
adc
pop
fidivrs
idivl
sbb
xor
ljmp
sarb
leave
push
xchg
fdivl
push
out
jbe
insl
outsb
adc
cmpsb
mov
push
insl
lahf
mov
mov
adc
and
pop
cmp
add
add
or
cs
out
mov
or
daa
push
rorl
fdivrl
inc
xchg
xchg
daa
pop
mov
les
push
movsb
mov
int3
add
jns
jne
or
mov
fs
iret
pop
ljmp
repz
jns
int3
jmp
mov
adc
les
jbe
scas
mov
or
js
mov
mov
xchg
inc
pop
icebp
shl
mov
orb
in
pop
mov
add
loop
mov
xor
cs
test
jmp
test
xrelease
test
iret
sahf
test
sub
push
pop
and
ljmp
lods
movsl
or
jno
cs
push
adc
pop
stc
jg
fistpll
ja
xchg
orb
dec
jo
inc
nop
les
outsb
imul
mov
arpl
ds
out
mov
cltd
xchg
xor
stc
mov
bound
mov
or
test
xor
mov
mov
push
clc
pop
in
jne
fnstsw
cmp
mov
adc
jo
jo
pushf
sbb
mov
popf
psubusw
push
push
pop
ret
pop
mov
xor
lods
iret
and
rol
or
loop
fstps
lods
xor
iret
sti
pop
push
or
pop
xor
ss
sub
ja
push
int3
stos
scas
lea
mov
sub
jne
mov
xchg
jge
sub
fsts
lret
aad
jge
xchg
stos
sahf
jne
add
aad
mov
push
leave
mov
ljmp
push
test
or
adc
xor
xchg
leave
mov
or
mov
shrb
or
pop
fmul
test
xor
push
jno
dec
push
jg
and
sbb
call
ss
call
and
sbb
into
mov
fsubl
in
sbb
in
arpl
or
xorl
scas
push
cld
xchg
popf
or
cmpsl
xlat
mov
dec
cmp
out
dec
jl
ficoml
movsl
cmp
jp
dec
sub
push
jmp
dec
fdivl
pop
cmpsb
mov
push
test
daa
movsl
mov
pusha
out
pop
repz
dec
aaa
mov
sub
call
lods
ror
outsl
mov
mov
addr16
adc
clc
int
inc
sbb
add
in
enter
orl
and
push
jmp
adc
jne
in
ds
mov
inc
mov
ljmp
fnstenv
jmp
or
js
shrl
mov
cld
cmc
das
fnstcw
mov
aad
push
dec
insl
and
les
xor
adc
or
fisttpl
ds
xchg
push
xor
mov
cmp
ret
lea
shrl
jmp
cmp
xorb
adc
fnstenv
jecxz
ss
mov
push
in
adc
cs
mov
cmp
rolb
daa
sbb
sub
xchg
outsb
push
hlt
lock
cltd
push
xor
fnstsw
mov
je
push
mov
sbb
aad
adc
stc
nop
xor
add
cmp
fwait
out
push
xor
scas
aaa
sbb
xor
mov
jb
inc
das
lea
and
push
inc
dec
mov
jg
xor
xchg
lock
cld
sahf
test
jl
sub
int
jmp
xchg
inc
sbb
pop
dec
stos
fistps
cmp
out
stos
xchg
xchg
mov
push
int3
in
xchg
mov
data16
sbb
outsl
out
xorb
orb
mov
sub
cmp
sbb
mov
loope
push
jno
stos
adc
jno
hlt
or
mov
call
inc
jbe
adc
test
rcr
mov
push
and
dec
divl
cmpsb
sub
insb
jle
cltd
aad
mov
mov
dec
mov
push
add
push
sbbl
push
and
cmp
std
dec
cmp
daa
movb
mov
movsl
fldenv
dec
adc
dec
mov
or
cltd
daa
jmp
movsb
and
aaa
mov
push
pop
inc
aaa
sub
mov
hlt
testb
aaa
and
dec
lahf
ss
jb
sub
jge
aam
rol
sahf
sub
sbb
into
pop
je
sbb
int3
sti
cmc
lock
lods
hlt
xchg
add
mov
lock
jle
int
aam
pop
leave
es
ss
jecxz
sub
mulb
adc
inc
out
jns
repnz
mov
or
fcomps
jne
daa
or
js
clc
lock
mov
imul
mov
mov
out
push
gs
jno
push
sub
xchg
insb
std
push
stos
add
mov
out
adc
adc
push
pop
xchg
lcall
lods
or
sub
mov
adc
ljmp
addl
jnp
inc
mov
fisttps
or
push
cmp
xchg
cwtl
outsb
jb
or
out
sub
jno
dec
imulb
nop
jecxz
mov
inc
jmp
rcrl
call
int
lods
iret
adc
fidivl
data16
mov
pop
clc
movsb
loopne
sub
pop
leave
mov
jge
js
jnp
js
sbbl
lret
fbstp
pop
dec
cmp
sub
in
out
ret
dec
mov
dec
sbb
gs
nop
and
mov
adc
xchg
lods
pop
sbb
pop
inc
push
jbe
ja
and
or
xchg
adc
pop
sbb
bound
dec
inc
cld
ret
jge
mov
cmp
out
out
adc
add
mov
dec
sub
jo
jmp
mov
dec
xchg
dec
leave
icebp
outsb
movsb
cld
enter
add
sbb
xchg
cmp
cmp
pop
mov
in
cmpsb
sbb
sahf
jne
mov
mov
mov
jnp
add
lret
jp
in
scas
or
in
mov
divl
or
imul
sbb
mov
xor
mov
mov
or
push
jbe
das
push
xor
jns
aaa
pop
xchg
mov
jmp
mov
out
hlt
xchg
popf
or
cltd
sub
ret
inc
push
ret
insb
and
lods
stos
cmpsb
jmp
aaa
cmpsb
test
outsl
mov
push
pusha
ss
xor
int
repnz
jl
fwait
jmp
mov
or
xchg
pop
repz
outsl
fdiv
or
shr
lret
lret
lods
int
jmp
pop
mov
fmulp
push
scas
dec
pusha
or
pushf
and
outsl
enter
js
lahf
cmpsl
in
push
in
xchg
cmc
pop
mov
push
sbb
fs
mov
inc
jne
mov
inc
xchg
sti
mov
inc
and
xchg
cmp
pop
rol
cs
push
or
pop
out
std
and
ljmp
push
ret
shll
cs
jae
shll
out
shlb
das
or
xor
outsl
ret
aad
add
jno
outsb
dec
outsl
mov
jl
push
dec
addr16
jno
pop
icebp
test
fcoms
adc
or
push
scas
mov
push
jnp
mov
int3
stc
adc
sbb
movsb
xor
stos
cltd
je
in
incl
leave
adc
setp
roll
push
lds
andl
push
outsb
xchg
fiaddl
xor
fidivrl
mov
inc
js
das
jne
les
and
and
mov
cli
pop
pop
jp
gs
or
mov
fildll
cwtl
pop
and
add
test
mov
enter
jmp
std
dec
aad
jno
sub
or
stc
shr
and
scas
hlt
xchg
pop
inc
xchg
test
mov
shll
mov
scas
stos
jecxz
xchg
xchg
sub
xchg
fnstcw
loope
or
adc
test
push
xor
rcrl
mov
jne
mov
cmp
sub
in
mov
outsb
jl
and
inc
sub
shlb
push
cmp
outsb
out
push
rcr
mov
mov
dec
add
lods
sub
lock
mov
les
mov
incl
fcomp
push
cmpsb
ret
test
xor
mov
lcall
in
jo
arpl
aad
arpl
aad
pop
or
ret
in
in
or
ds
dec
vmaxps
jno
shll
test
or
push
jb
ret
fcoms
xchg
lods
xor
mov
aam
cld
or
fs
out
mov
xchg
add
pop
sbb
cs
or
addr16
in
movsl
and
shl
push
mov
fwait
xlat
push
test
imul
adc
in
dec
inc
addr16
das
mov
or
push
imul
sub
std
fbld
pop
cmp
inc
inc
data16
es
push
les
xchg
mov
or
nop
je
jnp
outsb
hlt
sub
test
xchg
jbe,pt
in
or
ret
mov
lcall
add
mov
or
mov
mov
mov
outsb
fidivl
sbb
es
call
pusha
lret
pop
add
dec
sbb
das
int
xor
cld
lcall
jg
adc
or
sub
mov
and
or
hlt
jns
mov
fwait
pop
ja
sti
loope
in
mov
outsb
fmuls
repz
mul
out
and
movsl
ret
mov
stc
inc
cmp
daa
rcl
pusha
sub
xchg
mov
out
rclb
pop
cmp
ror
fmuls
xchg
cmp
xor
or
pop
adc
cmp
mov
lahf
cmpb
stos
movsl
mov
add
cli
icebp
subl
mov
stos
sub
aas
pusha
inc
sub
add
sahf
call
test
data16
pop
or
jg
or
lea
add
popw
stos
push
jbe
je
sahf
jecxz
ds
xlat
das
mov
push
inc
out
aad
adc
stos
mov
insl
pop
inc
adc
pop
sub
and
rcll
les
mov
sub
cmp
sub
sbb
movsb
mov
xchg
ret
test
or
xor
shl
or
mov
mov
push
outsb
mov
adc
imul
adcb
outsb
mov
sarl
testl
dec
daa
jbe
sub
fmull
fisttpl
sbb
add
into
out
add
and
sbbb
sub
repnz
dec
popf
mov
push
add
push
inc
sti
jecxz
inc
dec
cmp
adc
ret
add
sbb
pop
mov
imul
cld
push
xorb
mov
out
test
add
mov
jmp
jg
push
repz
mov
xchg
and
dec
je
pushf
test
adcl
cmp
iret
mov
jmp
push
faddl
test
mov
pop
test
repnz
daa
lcall
pop
cli
push
test
jo
sbb
arpl
cmp
popl
loop
cld
pop
inc
stos
adc
in
mov
sbb
repnz
fsubrl
and
push
int
testl
push
fists
pop
cmpsb
fsubrl
lret
loope
cs
into
cmc
in
mov
mov
fadd
or
add
mov
cmp
mov
pop
pop
dec
fdivl
shlb
faddp
outsb
lcall
lods
adc
mov
in
je
mov
hlt
sbb
mov
sub
leave
loop
rorb
mov
inc
xchg
xchg
jno
or
ret
adc
inc
call
lea
in
cmp
bound
pop
add
shrl
mov
inc
xchg
in
dec
fcompl
popa
pop
std
rcrl
out
jb
in
adc
and
cld
or
push
les
add
hlt
add
in
ret
push
scas
add
int3
fidivl
mov
jo
push
push
mov
mov
fnstsw
sbb
fsubrl
repnz
clc
adc
jecxz
std
ljmp
xchg
jle
out
shll
or
pop
hlt
jp
mov
sub
xor
xchg
push
in
adc
and
xor
add
or
adc
jo
bound
cltd
rol
mov
aaa
inc
add
push
iret
mov
sarl
pop
lahf
mov
or
xor
jl
mov
ficoml
stos
xchg
pushf
lcall
lods
inc
inc
push
add
cmp
mov
sti
push
iret
int
in
divl
mov
pop
mov
mov
dec
js
sbb
gs
dec
adc
testb
sbb
fisttpl
mov
xchg
pop
aas
lods
hlt
add
ret
insb
mov
add
jecxz
push
pop
or
sbb
xor
hlt
jmp
test
popa
fisubrs
jecxz
mov
andl
pop
pop
stc
mov
imul
xchg
cmp
pop
lahf
mov
adc
dec
test
cmpl
pop
sub
mov
mov
jo
inc
out
int
leave
les
in
stos
cmp
pushf
jp,pn
scas
mov
inc
fimuls
xchg
dec
push
adc
xchg
sbb
push
xor
pop
xchg
xlat
js
xchg
push
push
popf
xchg
fisttpl
lea
mov
pop
pop
or
dec
aam
clc
cld
call
dec
idivb
jbe
push
repz
es
pop
cmc
push
xor
loopne
enter
and
pop
push
jge
pusha
arpl
insl
out
xchg
mov
jl
ljmp
adc
dec
sub
pop
lods
shlb
movsb
cmc
out
xor
and
jp
int3
mov
sub
and
les
pop
xchg
int3
lahf
sub
mov
cmp
cltd
mov
or
test
cmp
adc
sbb
pop
fcomip
xchg
out
add
shrl
inc
xchg
and
push
leave
mov
call
xchg
loopne
stos
xor
std
scas
popf
sbb
das
xor
fsubrl
cli
ret
pop
rorb
stos
jl
cmp
jnp
loope
pop
testl
and
ret
pop
fnsave
xchg
lds
or
xchg
mov
fcom
es
jge
mov
xchg
aaa
mov
jnp
add
and
inc
mov
mov
xchg
jns
push
mov
fs
nop
mov
push
pop
das
jge
xor
mov
aas
fisubrs
xchg
push
mov
inc
mov
dec
pop
mov
pop
popa
test
popf
push
scas
aaa
js
or
ficoms
sub
adc
push
mov
inc
pop
ss
mov
sti
cmp
test
aam
xchg
cld
loope
fisubl
in
orl
imul
fcmovnb
push
nop
repnz
mov
popf
jo
add
shll
xchg
jns
pop
push
adc
je
das
mov
cmpsl
and
mov
sub
fstpt
iret
stos
pop
stc
sub
popa
rcrl
push
xchg
mov
cmp
xor
jae
and
cwtl
push
cltd
arpl
jae
mov
call
ja
push
andb
mov
jg
sti
sub
push
sub
fldl
fistpll
jmp
xchg
in
add
mov
mov
mov
popa
enter
xchg
mov
pusha
sbb
mov
ret
or
insb
pop
adc
push
test
mov
pop
mov
lahf
jo
mov
lahf
stc
idiv
or
push
and
mov
icebp
mov
fwait
cmc
subl
jae
pusha
push
xor
pushf
jecxz
orl
aam
scas
adc
xchg
pop
sbb
mov
enter
mov
imul
inc
dec
xor
outsl
pop
push
xor
mov
jno
fs
mov
daa
xchg
loope
or
xor
mov
mov
faddl
imul
cmp
sub
lock
clc
sub
jl
or
imul
xor
imul
lea
mov
xlat
testl
or
and
or
in
ret
dec
imul
popa
int
aas
push
pusha
out
add
bound
xchg
sub
or
jae
mov
pop
mov
pop
pop
xor
and
xchg
in
sub
mov
loopne
or
sub
push
mov
or
int
setno
das
jmp
dec
and
movsl
and
lahf
aas
sbb
popf
arpl
xchg
lcall
gs
stc
sbb
sahf
test
aam
cmpsl
mov
sub
sbb
fs
movsl
mov
cmp
and
gs
add
add
push
les
fwait
bound
pop
push
movsl
movsb
scas
push
add
aas
aaa
mov
cmpsb
cmp
add
jb
cmp
lock
pushf
jge
outsl
sbb
das
mov
mov
fdivr
sub
push
cmpsl
mov
popf
jbe
leave
add
inc
jle
ret
or
out
cmc
insl
mov
jno
inc
ret
pop
inc
mov
inc
xor
pop
cld
sti
jae
cltd
daa
pop
sbb
adc
cmp
inc
testl
cld
dec
mov
and
xor
in
dec
shll
add
subb
inc
gs
inc
rolb
shrb
repz
adc
cmp
arpl
and
cmp
xor
push
cmc
hlt
or
pop
add
jp
xchg
adc
into
cmp
shlb
fs
clc
gs
inc
mov
push
lahf
lods
je
cmp
mov
jg
imul
mov
imul
loop
int
jnp
inc
sar
std
in
das
mov
mov
sbb
das
push
add
mov
mov
outsb
push
mov
in
out
mov
test
push
enter
icebp
adc
jle
xchg
adc
test
sarl
sbb
aam
pushf
loope
fs
or
fldl
sub
imul
sbb
jno
add
cmp
loope
push
ret
fs
pop
mov
adc
pop
mov
outsb
lods
mov
sbb
imul
lahf
xchg
cmp
or
fisubrs
lods
fistpll
gs
subl
ds
lret
sbb
jmp
stc
mov
add
loopne
and
lea
pop
iret
jns
leave
iret
mov
pop
mov
mov
adc
xorb
mov
call
xor
movsb
sub
cmpb
and
pop
jns
jecxz,pt
cmc
ret
divl
imul
xchg
aaa
cltd
imul
xor
out
jle
addr16
jno
cmc
inc
repz
sub
lock
mov
jmp
andb
mov
xchg
fwait
arpl
das
ds
hlt
loope
add
dec
data16
leave
xchg
lods
sahf
in
push
loope
inc
mov
out
imul
sahf
sub
inc
in
in
aas
xchg
sub
ja
mov
xchg
pushf
mov
jmp
mov
jno
leave
sub
gs
xchg
mov
adc
or
sub
lahf
jae
jmp
jge
xchg
scas
or
mov
jb
movsl
cmpsb
sbb
ja
and
faddp
popa
repnz
xor
iret
inc
cs
cld
roll
jo
and
lcall
xchg
popaw
cmp
pushf
mov
ja
enter
andl
cli
arpl
hlt
and
push
mov
jbe
xor
lds
adc
push
hlt
fdivrl
out
roll
inc
int3
mov
xchg
inc
pop
lock
mov
jmp
in
pop
andl
inc
les
jecxz
add
int3
jb
inc
ljmp
cmp
sahf
jl
pop
sbb
lret
pop
xor
add
fnsave
lock
jnp
out
add
adc
leave
test
mov
dec
add
sub
adc
xchg
mov
dec
add
in
aaa
inc
sub
adcb
nop
sub
inc
push
xor
mov
ss
dec
sub
dec
movsl
push
push
loope
lea
adc
jl
xor
push
fsubrs
testb
ljmp
mov
test
inc
bound
lods
insl
mov
aad
mov
fs
movsl
mov
ljmp
xchg
or
imul
push
jecxz
gs
adc
iret
or
imul
fcmovne
jb
cltd
ljmp
jne
jg
aad
sub
outsl
out
pop
std
js
push
movsl
ficompl
jg
pop
cmp
inc
int3
addr16
pusha
mov
popa
mov
xchg
lret
sbb
add
jg
mov
and
xorl
aas
mov
adc
lret
inc
and
push
inc
addl
cmpsb
mov
movsl
adc
mov
lcall
int3
je
lds
mov
vmread
pop
xor
jae
inc
mov
loop
pop
jne
jbe
push
clc
mov
mov
add
ja
dec
pop
fwait
push
inc
xor
cli
fldenv
pop
psrld
movhps
pop
mov
std
cwtl
jns
clc
jnp
les
outsb
mov
inc
adc
push
adc
imul
xor
or
fnsave
add
jns
mov
mov
es
inc
and
sbb
jmp
into
cld
sbbl
mov
jnp
mov
ret
cmp
mov
sahf
cmc
jbe
ja
pop
jb
aaa
mov
jp
ja
adc
loopne
pop
jae
inc
push
sbbb
xor
mov
pop
aad
push
push
pop
sahf
fmulp
dec
and
scas
sbb
mov
ret
lcall
dec
fdivl
jl
inc
jecxz
jns
sbb
adc
popf
daa
mov
sub
mov
mov
mov
sahf
mov
daa
sbb
out
mov
jl
pop
adc
jbe
test
pop
repz
mov
rcll
jp
mov
mov
in
out
sbb
and
sbb
push
and
dec
test
movsb
and
inc
andl
mov
push
test
sbb
add
leave
movsb
jbe
xchg
adc
popa
outsl
xor
int3
cmp
xor
push
stc
jnp
add
xor
pop
adc
popa
mov
ds
in
scas
cmp
mov
cmpsb
xor
jno
xor
xchg
data16
mov
mov
mov
imul
sahf
hlt
dec
jne
jmp
call
pop
mov
lods
xchg
push
jmp
aam
push
mov
imul
xchg
bound
cs
dec
add
mov
loope
jo
push
adc
cmpsb
mov
sbb
mov
das
les
cmpsl
pop
clc
outsb
mov
inc
insb
jecxz
inc
add
in
sbb
pop
iret
mov
push
add
insb
scas
pop
and
iret
std
daa
xor
jmp
dec
repz
or
push
dec
sarl
bound
mov
cld
gs
out
xchg
into
lret
dec
ljmp
pop
fisubrl
push
cmp
call
loop
rcr
std
ljmp
stc
jp
cmp
jg
lret
xchg
out
movsl
mov
outsl
icebp
mov
xor
pop
stc
inc
xchg
insl
inc
das
inc
test
je
xor
mov
dec
push
push
fnstenv
cmp
sbb
orb
lcall
dec
dec
stc
lea
mov
shll
jg
loop
outsl
inc
es
out
lret
sbb
sbb
fbstp
aad
cmp
ja
mov
adc
lret
pop
xchg
pop
lock
mulb
nop
movsl
inc
pop
cmp
dec
dec
ret
andl
and
loop
mull
push
adc
push
jmp
ficomps
mov
mov
inc
outsl
aas
jnp
mov
rcll
add
ds
adc
repnz
ds
hlt
adc
dec
decl
or
pop
lds
lods
sub
push
cmc
jns
scas
jp
jecxz
das
fwait
or
dec
adc
adc
dec
daa
pop
ret
jno
jl
mov
push
sub
pop
out
cs
xchg
cwtl
in
loope
add
sub
cmp
and
aaa
push
data16
aas
data16
cltd
xchg
or
dec
or
mov
pop
loopne
dec
stos
and
mov
out
mov
ds
popf
jno
xchg
ficoml
pop
pop
mov
jo
or
push
inc
hlt
movsb
ss
in
jp
inc
jp
das
mov
mov
xchg
adc
xor
jno
ffree
mov
dec
fcoms
push
mov
mov
arpl
jnp
xchg
dec
push
leave
inc
fisttpl
sbb
dec
mov
repz
lea
sbb
pop
push
das
fnstcw
rdmsr
adc
inc
aam
ja
dec
imul
lods
mov
testl
sbb
repz
gs
cmp
cmc
jae
ret
iret
out
cwtl
out
enter
scas
xchg
jo
jge
in
push
in
ja
or
push
push
hlt
mov
jl
add
rorb
jnp
and
sbb
and
cmp
fsubp
outsb
idivl
in
rorb
sub
mov
cmp
gs
mov
xchg
out
push
insb
incb
xor
bound
push
and
lods
or
xor
cs
mov
mov
roll
jnp
dec
sub
jg
test
fwait
inc
jae
jge
cmp
loope,pt
pop
and
jge
push
orb
cwtl
mov
and
jmp
ror
jl
mov
xchg
lret
inc
ds
icebp
shl
mov
mov
outsl
pop
test
push
add
mov
push
ss
and
add
shlb
cmp
sbb
dec
mov
popl
add
inc
xor
push
call
mov
arpl
call
out
mov
popa
cmp
jnp
add
jmp
lret
sahf
inc
test
jae
cmp
push
mov
fsubs
sti
movsb
lret
cmp
je
test
mov
int
mov
aaa
imull
or
mov
es
mov
xchg
pop
cmpsb
adc
sub
jecxz
add
jnp
pop
inc
out
inc
dec
lods
jl
inc
mov
daa
repnz
sub
loope
inc
lcall
repz
push
arpl
push
xor
fldcw
fstps
push
ja
or
repz
and
sahf
push
pushf
popf
jb
cmpsl
das
xchg
or
inc
inc
mov
mov
jbe
sub
xor
xor
adc
mov
outsb
jge
push
dec
fimuls
cltd
mov
fwait
repnz
push
pause
push
fidivs
jnp
push
test
popf
xor
xor
repz
adc
addr16
out
mov
adc
rorb
add
cmpsl
out
stos
jg
and
dec
mov
ja
mov
push
cltd
pop
lods
or
jl
or
addr16
ret
pop
pusha
into
mov
add
shll
out
sbb
fdivrs
mov
mov
in
in
fwait
and
int3
inc
cmpsl
cltd
push
adc
xchg
lret
adc
mov
je
mov
cmp
daa
int
sbb
movsb
adc
adc
mov
mov
mov
lret
subl
mov
inc
adc
mov
push
adc
mov
aad
mov
inc
jns
sub
pop
nop
mov
jl
clc
jg
mov
cs
xchg
std
lcall
sbb
cmp
push
popf
pop
fucomp
and
test
jb
addb
test
push
inc
out
flds
sbb
divl
mov
addr16
sub
xor
gs
lret
or
sbb
frstor
icebp
sahf
nop
in
test
outsl
cmpsl
mov
fisttpll
lret
sub
xor
cmp
jne
push
push
inc
pop
cmp
and
loop
jne
xor
dec
push
gs
jne
insl
inc
in
xor
in
mov
or
xor
jne
jo
pop
pushf
loopne
test
arpl
in
je
aam
push
pop
and
outsl
xchg
mov
cwtl
and
mov
push
push
mov
sub
sub
and
insl
test
xchg
xchg
or
divl
cs
cmc
and
xor
std
push
movsb
mov
dec
in
lds
xchg
sub
iret
dec
test
add
jge
ret
jg
pusha
insl
fdivl
les
sbb
and
nop
jns
inc
mov
insl
add
mov
jmp
xchg
inc
xor
stos
jno
movsl
push
xchg
adcl
push
in
mov
or
sbb
lock
test
pop
pop
xchg
in
sarb
stc
gs
fucomp
lods
mov
mov
ja
cmp
in
scas
pop
xchg
jg
enter
inc
das
lods
fisubrs
push
sbb
xchg
clc
push
inc
imul
inc
int3
pop
aam
sbb
xor
fimuls
xor
sbb
inc
inc
outsl
add
or
xor
jp
sbb
fs
ja
scas
pop
add
lock
repnz
cli
lcall
push
dec
add
or
cwtl
cmpsl
roll
adc
mov
js
rcll
sbb
mov
pop
add
adc
sbb
cmp
jns
and
pusha
and
lea
adc
add
push
push
mov
shlb
adc
arpl
bound
xchg
push
movsb
sub
xor
ret
push
cmp
lahf
dec
mov
aam
jg
das
and
aad
push
lods
movsb
fsubrs
add
dec
jg
jne
popf
rcll
jne
ret
mov
jp
jmp
mov
pop
mov
cmp
fildll
jg
movsb
xchg
jg
or
pop
ss
inc
jno
or
fs
xor
popa
lahf
xor
lret
ret
dec
into
adc
or
aas
jmp
lahf
jb
and
negl
ret
lret
adc
lods
ja
scas
imulb
and
ljmp
jb
in
inc
cs
pop
test
orl
pop
scas
call
sbb
dec
shlb
aaa
mov
cmp
js
cmp
xchg
xor
lcall
lret
xchg
imul
hlt
dec
push
jge
xchg
daa
mov
adc
add
mov
jno
outsl
push
pop
fwait
repz
xlat
push
pop
insl
pop
jno
ja
mov
pop
arpl
fcmovnb
mov
sbb
pop
loope
outsb
testb
jecxz
push
adc
jp
add
lock
dec
mov
mov
push
out
and
mov
cs
dec
mov
dec
out
dec
rcrl
sbb
sbb
mov
jp
ljmp
lods
movsb
pop
sbb
rcll
out
mov
inc
nop
or
lea
push
idivb
jns
pop
inc
mov
pxor
cltd
rcrl
lods
dec
sti
leave
pop
add
sub
mov
xor
inc
pop
lea
push
pop
xlat
gs
mov
test
shlb
mov
sub
shl
mov
jno
pop
mov
sub
lods
mov
fsubl
pusha
leave
mov
mov
mov
xlat
data16
xor
ja
add
mov
imul
adc
cmp
aad
jns
sbbb
leave
cwtl
jmp
cmpsb
cmpsb
std
xor
insl
lock
mov
lahf
mov
cld
fsubrs
jp
daa
xor
cmpsb
fldenv
jne
sti
mov
or
sahf
lods
or
fbld
add
jp
sbb
dec
loopne
or
movsb
pop
imul
gs
daa
ds
cmp
mov
dec
or
xchg
test
sub
cmp
cmp
mov
cld
rclb
mov
push
jge
repnz
fildl
mov
or
push
push
cmp
jne
xchg
push
dec
jnp
adc
jnp
push
cmp
das
jo
inc
insb
xchg
add
hlt
fildll
addr16
jle
dec
lods
ja
shr
mov
lea
mov
cmpsl
pop
and
outsb
jns
stos
out
bound
imul
mov
push
push
or
in
dec
dec
bound
adc
adc
int3
sub
pop
dec
shl
fisubrl
cmp
push
xor
sbb
adc
mov
inc
cmp
jl
or
stos
cli
xor
movhlps
or
inc
pop
mov
lret
adc
neg
lods
mov
mov
xlat
daa
gs
sti
loope
aas
les
cmp
inc
sub
pop
and
cmp
cmp
cmp
dec
testl
push
nop
cmp
into
in
xchg
mov
das
and
test
lods
cmp
sar
es
cmpsl
xchg
pop
cmp
cmpsl
pop
push
push
arpl
incb
xchg
lret
insl
or
sbb
add
lds
stc
mov
mov
mov
out
pop
cmpsl
cli
jne
repnz
jmp
ficoms
jae
xchg
cmp
jp
cmc
shl
jmp
cmp
lret
or
aam
cmp
fisttps
add
inc
add
pop
out
sbb
cmp
and
pop
push
pop
pop
or
jbe
cmpsb
fs
mov
das
lds
jecxz
pusha
xor
mov
aaa
in
ljmp
cmp
pop
jae
inc
mov
loopne
in
out
clc
mov
lret
gs
and
pop
lcall
mov
mov
flds
push
lods
insl
sub
push
in
push
addl
push
aaa
adc
bound
ja
or
fmuls
xchg
inc
ja
and
sbb
pop
xchg
mov
roll
lods
jg
in
mov
scas
int3
dec
sbb
pusha
or
add
lock
cmpsb
cmp
nop
pop
ljmp
inc
mov
cmp
xchg
sub
mov
popa
xor
stc
jl
outsb
ret
sbb
or
add
inc
ja
js
inc
push
sti
in
out
fistpl
sbb
and
inc
mov
cmc
pushf
addb
ja
sub
add
lret
cmpsb
or
sbb
outsb
jp
andl
inc
xchg
aam
jae
adc
sti
pop
out
xchg
imull
enter
int3
add
fstl
pushaw
loope
jns
jno
and
sbb
push
sub
roll
leave
loop
sbb
add
mov
std
jb
push
jns
or
fadd
add
inc
imulb
gs
push
push
testl
push
mov
lods
sbb
jae
jg
stos
xchg
xor
dec
or
pop
cwtl
add
pop
fisubrl
cld
es
lcall
dec
sub
and
pushf
xchg
stos
fidivs
xor
push
loopne
je
xchg
mov
in
sub
cmp
fwait
cltd
dec
jae
adc
push
in
add
ss
push
xchg
loopne
repnz
push
lret
jae
xchg
dec
scas
push
loopnew
mov
lahf
sbb
jmp
iret
dec
mov
and
jp
mov
xchg
imul
xchg
jne
test
popa
mov
jecxz
addb
sahf
mov
dec
enter
testl
pop
lret
xchg
mov
out
pop
adcl
push
xor
add
rolb
sarb
cli
push
in
pop
rorl
scas
sahf
bnd
xchg
jo
movsb
jae
xor
das
rclb
divb
jne
adc
sbb
notb
cmp
je
push
pop
out
idivl
ja
mov
xchg
and
lret
nop
lods
stc
in
xchg
out
lock
xchg
or
jne
push
out
out
adc
mov
lahf
ret
and
test
jp
in
mull
push
add
sbb
iret
imul
and
ret
mov
nop
pop
dec
lret
mov
mov
addr16
inc
fistps
out
dec
mov
jge
add
add
inc
mov
rol
cmp
in
push
stc
cmc
mov
lret
shlb
pop
jge
xlat
movsl
inc
mov
popa
jb
xchg
popf
lcall
lcall
rep
cmp
sbb
push
jae
adc
stos
mov
jbe
lret
adc
xchg
shl
mov
iret
shll
mov
test
test
ljmp
mov
movsb
fdivrs
pop
push
std
xchg
xor
dec
and
imul
push
push
arpl
test
dec
sbb
ja
dec
lods
lret
out
dec
icebp
sub
dec
push
das
adc
xlat
ja
xorb
xchg
gs
pop
cmp
fwait
dec
enter
insb
lret
es
insb
imul
jle
fldenv
outsb
push
or
lret
adc
push
jns
sbb
sti
dec
es
pop
jbe
add
pop
jmp
jge
je
fcomps
out
js
cmp
int3
xor
ja
adc
insl
int
loope
mov
mov
dec
cld
faddp
cmp
xor
cwtl
mulb
push
add
es
aas
pop
push
lds
add
jge
andb
cmp
and
xchg
push
bound
fs
repz
add
shrb
dec
dec
jne
mov
rcll
mov
pushf
pop
dec
xor
sbb
stos
adc
cli
fwait
les
jp
cmc
mov
mov
stos
fcomp
mov
jmp
in
lock
ds
push
insl
or
push
iret
xor
out
push
fsubrl
fisubrs
lahf
mov
inc
daa
mov
lahf
sub
push
jae
jo
arpl
cmp
rolb
xchg
int
ret
adc
cmc
or
int
and
push
push
test
mov
dec
fdivl
mov
and
mov
leave
and
pop
sub
dec
ja
lods
mov
les
xor
out
xchg
pop
daa
outsb
aam
scas
push
or
add
add
imul
das
pop
jl
sbb
aad
stos
mov
sbb
xchg
push
hlt
mov
es
jecxz
ret
jle
lcall
fwait
jecxz
inc
dec
inc
mov
jl
xor
xor
arpl
or
mov
movups
lahf
sbb
sti
push
repz
dec
popf
fmuls
pop
shlb
test
dec
mov
fiaddl
mov
mov
sub
cmp
lahf
mov
jbe
or
cwtl
outsb
out
ret
movl
pop
pop
mov
scas
rolb
mov
push
push
loop
pop
add
mov
out
dec
hlt
lock
int3
jno
roll
sub
adcl
add
in
sub
push
xchg
adc
xchg
sahf
sub
pop
and
pushf
jge
pop
ret
or
pusha
insl
mov
cli
insl
jp
fnstcw
lods
ljmp
or
cwtl
call
loope
cmp
xchg
sti
cmp
mov
cmp
fsubs
add
aas
sbb
rcll
gs
mov
dec
pop
xchg
fs
loop
or
aas
fwait
out
cld
out
sub
gs
jl,pn
add
adc
inc
or
dec
mov
in
ret
cmp
shlb
stos
insb
shrl
or
mov
stc
sub
lea
mulb
sbb
pop
cmovs
stc
mov
std
add
add
fs
les
jl
icebp
sbb
repz
aad
inc
or
loope
mov
rcl
insl
repnz
movb
xor
sub
xchg
or
out
not
orb
test
mov
bnd
in
es
jns
mov
or
movsl
mov
and
push
sub
mov
ffreep
out
inc
iret
push
subb
pop
dec
push
outsl
shll
inc
dec
negl
arpl
mov
xchg
jno
out
xor
or
icebp
mov
bound
test
cwtl
jge
xlat
inc
push
push
int3
out
push
jb
xorb
push
mov
jbe
stos
and
movb
pop
notb
cltd
sub
xor
pop
adc
mov
xchg
out
inc
in
push
dec
lahf
push
xchg
cli
xor
xchg
pop
sbb
pop
dec
ret
jbe
std
stos
addr16
loop
stos
out
rcrb
mov
int
xor
insl
sbb
cld
inc
sbb
mov
bound
popa
pop
xor
pop
inc
aaa
insb
lret
or
jp
sarb
lds
dec
cmp
cwtl
dec
stc
cmp
in
loopne
pop
or
mov
outsb
andb
and
push
stos
ret
xchg
jae
lea
and
arpl
and
cld
mov
jns
jmp
and
xor
mov
pusha
rcll
inc
xlat
mov
loop
sti
jbe
push
fdivrs
movsb
push
xchg
push
into
jg
lret
cmp
adc
fldcw
ljmp
lcall
pop
ljmp
test
pop
aad
inc
aaa
or
scas
mov
xchg
push
ja
ret
dec
rol
in
cs
pushf
decl
adc
push
inc
aam
pop
add
and
data16
fmull
pop
xchg
fisubrs
lea
jb
or
movsb
ja
add
or
and
add
out
mov
dec
test
jmp
push
xchg
inc
push
jo
mov
inc
mov
sahf
out
pop
loope
stos
lret
push
sub
repnz
mov
in
xlat
pop
jl
test
iret
mov
cmpsl
dec
inc
cmp
mov
daa
mov
cwtl
xor
xchg
call
leave
dec
lock
push
clc
pop
das
insb
inc
mov
in
std
faddl
jbe
xchg
ret
imulb
cmp
call
decb
jbe
daa
call
lret
out
loop
cmp
outsl
ret
or
fistpll
push
cmpsb
pusha
jp
and
push
sbb
rcll
dec
pop
lret
pop
nop
cmp
xchg
and
sub
sbb
push
test
addr16
xchg
stos
mov
iret
call
cmpsl
mov
push
scas
and
and
jno
xchg
les
sbb
test
and
daa
mov
test
fwait
jb
pop
and
outsb
mov
dec
loopne
dec
loope
fdivr
add
push
cmc
dec
push
add
shl
dec
xorl
lret
dec
insb
je
mov
shll
jnp
aaa
jne
add
movl
sub
push
or
frstor
add
mov
dec
bound
sub
lret
or
jmp
lods
adc
out
sahf
outsl
adc
or
aaa
mov
xchg
dec
aaa
adc
mov
loop
mov
fwait
pop
ss
mov
cmovg
pop
daa
mov
cmp
lret
fsubl
adc
dec
cs
cmp
pop
fwait
icebp
lods
pop
dec
stos
clc
cmpsb
mov
add
test
test
stos
loopne
outsb
insb
ror
addb
jns
mov
pop
xchg
shll
xchg
fmuls
roll
pause
mov
xchg
or
sub
outsl
dec
int
aam
ret
cmp
mov
adc
sbb
inc
pusha
stos
mov
xor
insb
sub
popa
dec
jbe
sti
xchg
dec
or
orb
cmpsl
dec
add
mov
into
sbb
ljmp
or
ret
pushf
pop
sbb
clc
movsl
and
leave
adc
xchg
out
and
inc
gs
or
inc
js
mov
mov
in
fistl
mov
leave
cmpl
and
jl
mov
sbb
shlb
xchg
or
mov
jae
pop
sti
mov
jge
paddusb
data16
pop
fdivrs
sbb
mov
pop
repnz
in
pop
mov
sub
cmp
sub
sub
mov
dec
js
pop
lahf
mov
add
xorl
jns
and
xchg
test
insb
ljmp
sbb
mov
mov
mov
icebp
mov
push
xchg
sub
push
push
add
pop
or
sbb
ljmp
out
fdivp
rolb
push
sar
sbbl
sbb
jmp
and
imul
cmp
push
mov
iret
sub
negb
inc
push
loopne
cmp
pop
filds
push
adc
inc
sbb
ss
mov
rclb
xor
adc
add
in
xor
cmp
shrl
pushl
cmp
or
push
xchg
sub
fists
adc
jmp
pop
lret
pop
jl
int
in
inc
scas
sbb
xchg
cmp
cli
dec
dec
mov
mov
or
stc
jb
mov
sbb
leave
or
lret
test
xor
xchg
outsl
pushf
fld
jb
test
mov
fdivs
xchg
jmp
pop
insb
sbb
dec
cmpb
xchg
in
sarb
mov
or
jecxz
clc
jmp
inc
notl
ret
lods
addr16
sbbb
push
mov
mov
adc
and
outsb
shrl
xchg
hlt
xor
lea
cmp
add
stos
dec
pop
mov
into
add
xchg
or
pop
cmp
shrl
lds
mov
push
jb
in
pop
xchg
adc
cmpxchg
stc
xor
shrl
aaa
xor
dec
cmp
cld
daa
pop
loopne
fistl
int
pop
cmc
fdivs
sbb
out
mov
mov
cmp
jno
add
dec
lret
lret
pop
push
or
sbb
dec
lahf
sbbl
movl
fsts
xor
mov
cmp
out
cmp
or
bound
aad
xor
enter
js
addb
or
xchg
adc
loopne
cmpsl
clc
ja
cmp
test
shll
fs
fsubl
adc
dec
pop
xchg
sub
addr16
std
cltd
orl
fwait
loopne
pusha
stos
cltd
add
mov
push
xchg
sub
xchg
mov
and
cli
jge
shl
ds
ficoml
xor
mov
or
jmp
loopne
sbb
aam
add
daa
and
and
in
in
mov
mov
sub
ljmp
inc
pop
ret
subb
ret
mov
push
and
leave
sbb
jno
out
in
sub
in
stc
mov
and
xor
xor
mov
adc
pop
inc
jnp
js
lret
push
push
ret
dec
arpl
jbe
mov
outsl
mov
sub
aam
pusha
mov
push
loopne
jmp
testb
ljmp
xlat
adc
in
sub
mov
dec
xchg
es
mov
push
mov
or
mov
xchg
arpl
xchg
mov
push
push
sbb
jmp
cli
pushf
shlb
mov
cmpsb
stc
in
adc
mov
jb
mov
popa
mov
ds
hlt
or
movsl
inc
shrl
cmpsb
dec
sahf
pop
sub
push
mov
arpl
mov
hlt
pop
dec
aad
push
jb
pop
aas
repnz
jp
or
add
daa
lret
and
fsubrp
and
ds
ds
adc
sahf
mov
cmp
es
add
sahf
clc
mov
ja
inc
aaa
jge
int3
xor
iret
loop
and
scas
xor
xor
fcmovbe
nop
and
pop
cmpsb
in
leave
shrb
pop
loope
cmp
aam
xchg
out
xor
sub
fildll
rcll
repnz
cmp
sbb
es
ror
sub
outsb
pop
daa
sahf
scas
insb
pop
dec
dec
shlb
scas
into
mov
leave
push
pop
test
hlt
sub
rcll
jecxz
dec
aas
push
dec
or
js
xor
cmp
stos
out
int
pop
sub
xchg
lret
scas
pop
je
sub
pop
sbb
inc
mov
imul
mov
les
xchg
andb
dec
sub
mov
jmp
out
add
and
pop
scas
sub
push
pop
mov
divb
cmp
xchg
shll
jmp
sarl
mov
pushf
cs
jnp
shlb
imul
hlt
mov
xchg
and
sub
loop
movsb
xchg
sbb
iret
aad
arpl
or
les
or
rcr
xor
xchg
cmp
std
mov
lods
shrl
xchg
hlt
xor
mov
arpl
movsl
mov
imul
scas
xchg
arpl
mov
rcr
cmp
dec
dec
adc
fldl
sbb
loopne
lea
jnp
xchg
add
cmpsb
pop
rorl
mov
xchg
push
sbb
dec
fmuls
sbb
xchg
push
cmp
and
add
stos
aam
add
sub
in
sbb
inc
adc
jp
push
sbb
ljmp
dec
mov
shll
out
xchg
pushf
xchg
aaa
add
shl
push
aad
or
dec
inc
adc
daa
ja
adc
inc
aam
mov
mov
lea
stos
mov
aaa
insb
cltd
insl
into
loop
pop
ret
in
ret
sbb
in
leave
shr
outsb
push
xchg
jmp
add
xchg
mov
inc
push
in
mov
dec
xor
push
adc
popf
div
and
push
incl
scas
jb
mov
mov
mov
inc
cld
sbb
xor
loope
pushf
in
in
push
ds
out
inc
stc
test
cs
insl
aas
xchg
and
dec
sti
mov
imul
in
dec
jle
and
push
xchg
fcomps
bound
rclb
rolb
xchg
clc
clc
rcrl
dec
xchg
call
push
adc
pop
mov
jnp
push
sarl
add
shr
xchg
bound
inc
push
xchg
cmp
lret
cmp
push
loop
out
es
jp
or
add
dec
lods
ds
jp
leave
fwait
movsl
xchg
jg
rcll
lea
into
loope
sbb
ljmp
pushf
hlt
pop
test
pop
fbstp
divl
outsl
push
xor
inc
movsl
nop
loop
cltd
insb
icebp
cmpsl
stos
enter
add
and
fwait
xor
arpl
mov
push
sub
out
pop
rclb
scas
sbb
add
jne
pmuludq
pushf
jecxz
rcrb
mov
insb
sbb
mov
xor
jmp
xchg
rcrl
and
mov
lock
inc
outsl
leave
xor
push
imul
les
or
je
xor
cli
out
scas
push
mov
decb
mov
mov
lods
test
dec
rorb
adc
nop
xor
cwtl
rol
sbb
mov
jo
add
add
jae
push
repnz
stc
fdivl
cmpsb
test
lock
dec
sub
fcmove
sub
lods
mov
adc
dec
cmp
shlb
sub
add
lcall
cwtl
add
leave
subl
test
inc
es
add
sub
xchg
loopne
inc
cmp
inc
xchg
push
push
lcall
fisubl
insl
cmp
lret
in
jmp
mov
cmp
fsubl
loop
mov
lods
lret
mov
pop
mov
lds
in
cmpsb
cwtl
sub
and
sbb
je
test
mov
rorl
push
mov
xor
daa
lods
loopne
dec
int3
imul
out
push
xor
cmpsl
mov
fcoms
lea
out
fisubrs
int
jnp
pop
push
push
unpcklps
jl
mov
sub
gs
jbe
adc
mov
loope
and
mov
lods
test
and
xorb
nop
xor
aad
rcl
xchg
xchg
xchg
outsl
adc
daa
scas
cltd
cld
jb
push
testb
fistpl
push
daa
xor
dec
add
adc
add
xchg
and
repnz
mov
inc
inc
movsl
push
adc
lret
out
xor
adc
iret
popf
sbb
pusha
popf
mov
std
xchg
filds
push
xchg
into
sub
movsl
add
xchg
sbb
imul
mov
cmp
fs
idivl
addr16
divb
jne
sbb
xchg
mov
or
stos
adc
cmc
add
es
out
test
push
push
lea
pop
and
call
sbb
loopne
inc
insl
int
jae
loope
mov
pop
sahf
cld
dec
fmull
iret
jg
cld
rolb
stos
ret
repz
and
fdivr
enter
leave
enter
xchg
adc
das
scas
xor
fisubl
ret
jg
sub
mov
xorl
inc
and
cld
sti
aam
xor
or
mov
int
test
cmpsl
xchg
sub
inc
jp
add
out
or
insl
mov
je
push
shrb
loope
mov
ret
adc
add
sub
or
jg
outsb
pop
fsubl
sub
ja
lea
repnz
mov
lock
xor
mov
mov
into
imul
dec
test
sarw
push
test
xchg
jnp
pop
aad
jb
and
in
out
lods
pop
pop
aad
movsb
xchg
and
fimull
das
or
mov
cs
in
fidivl
imulb
cs
mov
fldcw
ds
sub
mov
rcrl
xchg
add
cmp
enter
incl
lret
and
mov
xchg
sarl
lcall
mov
push
outsl
test
lahf
out
mov
adc
addr16
or
popf
mov
in
mov
add
out
pop
inc
sbb
bnd
xlat
dec
pop
lret
pop
mov
jmp
jl
loope
or
adc
inc
jno
lea
sahf
and
push
pop
das
sbb
dec
mov
enter
jl
sub
out
add
jno
shr
sub
pop
xchg
aas
ljmp
icebp
popa
lret
std
fdivr
adc
jle
mov
xchg
xchg
sub
std
andl
daa
pop
scas
inc
inc
xchg
in
push
inc
lea
pop
sbbl
stc
mov
inc
sub
pop
push
mov
fwait
xchg
fdivrs
add
mov
out
lret
jae
dec
aam
mov
pop
add
xor
mov
test
dec
mov
mov
xchg
lock
lods
mov
jmp
shlb
push
cmp
sbb
ret
cmp
jle
stc
icebp
ja
ret
cmpsl
or
jl
cmp
mov
sub
and
xor
sub
hlt
aam
call
mov
mov
mov
enter
jae
out
cmp
test
test
and
cmp
insb
lret
push
inc
in
inc
cmp
loop
push
and
roll
adc
push
jb
mov
xchg
cmc
fisttpl
outsl
sub
xchg
jb
sbb
mov
clc
jns
sbb
adc
push
jl
out
fsubr
mov
mov
lret
jb
lahf
sub
icebp
setg
dec
mov
mov
or
fidivrl
fsubl
out
adcb
cmpsb
mov
js
inc
pop
lock
mov
sbb
shlb
in
jge
xchg
arpl
dec
lret
loopne
sbb
mov
js
jmp
or
mov
negb
push
inc
sahf
mov
and
fs
and
mov
cmp
mov
cli
cmc
xorb
inc
mov
stc
bound
mov
sub
cmpsb
stos
cmp
mov
jp
cld
push
lret
pop
sbbl
sub
loop
cmp
enter
iret
xchg
xchg
shll
scas
push
lock
push
scas
sub
in
xadd
xor
aas
popf
in
and
out
mov
enter
fisubrl
mov
pushl
sbb
jo
dec
xor
shrl
push
pop
scas
push
inc
xchg
stos
aam
aas
jae
inc
je
clc
add
cmp
xchg
or
lds
pop
sahf
sub
fcmovu
faddl
mov
lds
or
decl
lock
xchg
sbb
xchg
inc
aas
add
loop
or
xchg
int3
pop
call
mov
clc
pextrw
arpl
data16
loopne
and
mul
popf
mov
lcall
mov
jp
jo
nop
dec
das
mov
ds
aas
test
add
mov
cld
sub
and
std
std
lret
mov
fidivl
mov
sub
addr16
sub
mov
int
mov
push
in
je
sub
mov
dec
mov
sbbb
ja
in
inc
adc
mov
cmpsb
scas
add
test
or
cmp
daa
pop
or
or
mov
cmp
repz
xchg
dec
movsl
fwait
popf
add
out
mov
aam
shlb
imul
addb
in
rclb
das
sahf
cld
enter
cmp
sub
mov
mov
push
pop
push
mov
mov
jae
jns
inc
push
mov
testb
fcmove
and
sub
xor
xchg
scas
jo
push
iret
mov
jmp
push
or
ja
rorl
cmpsb
fidivl
sbb
sub
cmp
enter
xor
xor
mov
add
sub
push
test
add
test
repz
icebp
jae
cmpsb
dec
fldcw
shlb
push
mov
lret
test
orl
dec
adc
adc
inc
insb
outsl
mov
xor
add
push
and
mov
or
sahf
int3
pop
ja
push
inc
insb
addr16
push
lds
jecxz
dec
push
sbb
aas
jo
push
lahf
and
push
out
ljmp
adc
rorb
mov
inc
pop
dec
inc
and
aad
out
loope
icebp
pop
xor
add
movsb
fxch
jle
cmc
lret
or
mov
cltd
mov
insl
pop
and
push
mov
popf
dec
add
out
push
jmp
out
mov
inc
dec
lds
jle
xor
xchg
adc
mov
jge
mov
add
mov
fcompl
mov
jne
cmpsl
insb
fsubs
adc
lds
es
aas
mov
jbe
pusha
xchg
test
in
imul
data16
inc
mov
ljmp
int3
sbb
xchg
outsl
mov
jmp
sbb
divb
std
sub
dec
inc
add
jl
leave
les
movb
scas
lods
popl
pop
pusha
jns
mov
push
jnp
lret
cmp
push
jle
mov
and
movsl
stc
shrb
xchg
push
js
mov
xchg
and
je
ljmp
fucomp
and
dec
and
xchg
xchg
xchg
xchg
mov
dec
int3
or
mull
push
inc
dec
jnp
ret
sbb
scas
jl
inc
xlat
scas
out
je
ds
int
movsl
inc
andb
cs
inc
push
ljmp
insb
jge,pt
int3
xor
rorl
and
or
mov
lret
sbb
ja
pop
cld
dec
mov
lret
add
lret
jp
sbb
hlt
les
fstpl
out
xchg
adc
js
in
mov
dec
stos
dec
mov
cwtl
pop
fmuls
iret
fadds
fnsave
sub
sub
stos
mov
popa
fsubs
inc
fstpt
and
cli
xchg
xor
sarb
sbb
es
xor
push
test
stc
test
adc
fnstsw
out
ja
jne
sub
pop
pop
xchg
sbb
adc
xor
pop
cmp
into
cltd
out
add
add
and
xor
jge
test
leave
mov
lods
push
cmp
push
xor
mov
xor
xor
jge
sbb
cmp
test
xchg
mov
sarl
sub
ret
mov
cmpsb
nop
test
and
lods
adc
jl
inc
inc
push
jo
and
outsb
fst
push
icebp
lock
je
cmc
leave
mulb
ss
add
adc
dec
inc
mov
test
jge,pt
cmpsb
cmp
jnp
and
scas
xlat
enter
jle
clc
adc
data16
jecxz
dec
cltd
int3
or
ja
into
ljmp
mov
lahf
mov
sub
hlt
sahf
fcmovu
cli
les
xor
cwtl
sub
es
xlat
in
add
mov
jp
dec
repz
movsb
jne
sub
pop
push
or
cmp
xchg
mov
cmpsl
jbe
xchg
sub
stos
jns
js
je
inc
fstpt
mov
fsubs
test
xlat
or
sbb
aad
loop
jg
test
insb
cltd
xor
add
mov
fwait
and
xchg
dec
jmp
dec
stos
cmpsl
stc
xor
sbb
push
xorl
shrb
outsb
mov
xchg
aam
invd
and
cmc
mov
mov
push
loop
bound
mov
sub
popf
pop
or
xchg
sbb
ss
xchg
aas
shlb
insl
cltd
add
sub
adc
jne
out
pushf
dec
add
mov
insl
mov
icebp
lretw
mov
jg
outsb
shl
push
icebp
lock
sarb
fistpl
js
les
insb
insl
push
add
loopne
mov
loop
int3
shrl
imul
leave
dec
stc
cli
lcall
sub
fdivrs
ljmp
xor
mov
cmp
imul
push
scas
in
into
xor
stos
imul
lea
jge
inc
test
mov
jbe
jae
jle
or
jne
inc
xor
mov
sbb
pop
cmp
aad
push
pushf
sub
fstl
repz
das
dec
pop
fisubrl
cmp
int
pop
adc
xchg
push
lahf
outsl
xchg
xor
int3
scas
js
movsl
pop
fidivrl
ds
pop
insb
dec
out
aad
add
pop
mov
adc
inc
inc
cwtl
out
mov
mov
adc
mov
mov
cmpl
add
pop
imul
xchg
push
mov
mov
mov
pop
ss
and
push
xor
and
and
xor
sub
cmp
jae
lods
cmp
loopne
and
mov
xchg
mov
out
jp
iret
jno
sub
xchg
cmp
inc
jo
xchg
jno
mov
int
mov
bound
push
and
mov
std
lea
outsl
dec
and
imul
andb
xor
and
jb
add
punpckhwd
mov
cmp
cmc
leave
inc
add
xor
sub
mov
dec
lret
mov
pop
mov
fwait
out
loopne
cmp
add
sbb
push
test
inc
nop
add
lds
xchg
sti
sub
fcmovne
jnp
outsl
js
push
mov
stos
pop
mov
xchg
js
xchg
dec
mov
icebp
dec
lret
push
ljmp
xor
repnz
or
out
cld
popa
leave
adc
inc
lods
and
push
adc
jne
sub
popf
dec
stos
das
xchg
jmp
sub
out
or
and
gs
sahf
pop
movsb
push
imul
cmp
dec
pop
inc
in
popl
jp
inc
stos
lods
lret
push
loop
iret
movq
out
push
inc
fwait
mov
xor
daa
sub
sbb
test
mov
sbb
mov
mov
dec
cmpsb
out
int
sbb
inc
loop
or
fmuls
jmp
outsl
je
add
ret
dec
imul
cmp
sbb
sahf
outsl
sahf
xor
xchg
adc
ret
sub
lcall
push
inc
pop
sbb
pushf
bound
pushf
insb
sbb
pop
adc
in
in
sbb
ss
cs
pushf
push
in
or
sbb
mov
arpl
cmp
push
pop
push
or
fdivr
mull
or
push
mov
push
lock
outsl
ret
into
ds
popf
adc
fmuls
in
and
mov
cmpsb
data16
movsb
mov
xchg
scas
mov
jl
lods
xor
mov
lods
lock
rcrl
clc
in
adc
inc
cmp
inc
mov
shll
ds
negb
std
mov
xor
bound
cmpsb
push
push
in
pushf
rclb
das
loope
xchg
aam
pop
nop
and
loopne
xor
ud2
hlt
loope
push
mov
xchg
fsubs
mov
lcall
gs
pop
out
pop
out
out
mov
mov
scas
lret
xor
inc
je
lds
pop
idivb
mov
shrl
imul
mov
lods
neg
mov
rcll
and
ret
mov
out
mov
repnz
add
int3
mov
enter
arpl
mov
jmp
hlt
inc
jcxz
inc
jp
add
std
lcall
es
call
push
mov
jg
cld
das
jbe
sbb
lcall
movsb
dec
cmp
lahf
sarb
pop
fxtract
je
xchg
push
fistpl
andb
orl
aaa
std
inc
daa
jmp
mov
inc
popf
mov
jle
ret
in
cmp
pushf
dec
push
sti
out
aaa
sahf
out
outsb
andb
inc
add
out
lds
das
cltd
shll
sbb
gs
pop
cmp
pop
fidivs
jne
ficompl
dec
sbb
pop
cmpsb
mov
mov
jp
mov
shlb
pop
jbe
jmp
sub
xor
mov
jmp
add
adc
fwait
arpl
or
push
or
or
jp
xor
pop
lea
adc
sub
inc
fnstenv
cwtl
inc
cmpsb
pop
mov
xchg
cmp
jl
adc
rcrb
jb
add
arpl
lret
mov
fldcw
lcall
pop
aam
pop
stos
pop
add
xchg
les
inc
pop
lahf
mov
imul
mov
lret
pushf
sub
mov
in
movsl
dec
inc
hlt
mov
sbb
mov
pop
iret
sub
lock
mov
fcmovnb
dec
sbb
test
popl
adc
dec
frstor
movsb
adc
xchg
jmp
mov
cmpsb
push
pop
loopne
pop
mov
gs
in
adc
imul
fldt
or
push
dec
and
adc
in
into
push
fists
pop
insb
test
push
pop
pop
or
push
in
pushf
in
fsub
mov
fdivl
ljmp
lea
xchg
fsubrs
sbb
adc
addb
adc
in
mov
arpl
aas
and
pop
jnp
scas
xchg
orb
cli
rolb
cmp
aaa
lahf
cltd
xor
push
icebp
dec
aas
movsb
sub
jno
and
mov
enter
lea
call
jecxz
or
into
adc
cwtl
lret
cmp
mov
mov
mov
jge
mov
fnstsw
cmpsb
xchg
call
sub
add
in
dec
int
xchg
pop
or
xchg
repnz
xchg
pop
pop
clc
lret
fwait
test
push
xchg
es
inc
and
loope
and
sbb
sbb
cwtl
adc
pavgb
sbb
out
fwait
and
fisubrs
add
js
adc
rcrl
pop
mov
pop
fistpll
xchg
mov
ss
out
or
lahf
iret
jns
and
jle
cltd
mov
or
fstpl
adc
mov
cmp
out
lock
xor
leave
mov
jbe
enter
xor
scas
mov
aad
pop
cmp
out
mov
push
ret
movb
xor
inc
dec
jo
jecxz
mov
dec
daa
push
add
mov
ret
aaa
adc
pop
enter
cs
and
cmp
in
mov
xchg
add
int3
jecxz
xchg
sub
sbbl
les
adc
xlat
pop
sub
clc
mov
and
xchg
mov
adc
scas
mov
imul
push
mov
ljmp
popf
and
in
xorb
test
push
cmp
mov
int3
mov
add
sbb
fsubrl
out
ret
and
or
sti
and
roll
je
out
dec
xor
mov
jle
mov
cmovae
fstps
jle
test
dec
inc
lcall
icebp
adc
aas
ds
sarl
push
test
lcall
ror
pop
cmp
xor
repz
jg
pop
cwtl
adc
or
fidivrs
xchg
fmuls
lock
adc
jl
sbb
mov
cmc
or
imul
ret
xor
ror
xor
xchg
scas
pop
aas
cmp
pop
vsqrtpd
or
fadd
shrl
sub
mov
push
lods
cmp
push
in
in
rolb
dec
xchg
inc
add
dec
cwtl
add
test
scas
mov
enter
jle
or
sbb
fnstcw
hlt
orl
unpckhps
mov
popa
pop
jo
dec
mov
les
mov
into
dec
sub
cmp
push
sbb
push
pop
inc
xor
mov
ss
lret
aad
and
cs
call
adc
js
add
mov
insb
sbb
ja
or
mov
xor
or
repnz
and
adc
mov
and
cmp
outsb
mov
pushf
aam
lock
add
in
inc
pushf
stos
push
dec
daa
dec
dec
movsb
or
das
pop
cltd
push
out
lods
jnp
pop
std
leave
push
or
mov
std
inc
or
jge
arpl
push
dec
jmp
rep
xchg
pop
movb
in
test
mov
sar
mov
mov
xchg
add
jge
out
dec
gs
and
push
jle
mov
rorb
pusha
dec
pop
sub
movsb
int3
in
cmp
insb
push
mov
sub
xor
mov
lock
outsl
cmp
mov
insb
jmp
sti
xor
bound
aam
outsb
std
out
movsb
inc
lock
xor
and
std
test
flds
lods
clc
fmul
jle
sti
roll
mov
fisubrl
and
in
fiaddl
icebp
ljmp
test
hlt
cmp
jle
data16
cmp
inc
ret
sbb
or
int3
mov
mov
enter
les
rcr
mov
xor
insb
je
cwtl
movsl
scas
scas
adc
in
push
cmpsl
cmp
cmpb
and
xchg
inc
repnz
mov
jl,pn
jb
loope
aaa
push
ja
and
cmp
mov
mov
or
test
jl
push
mov
or
enter
and
movsl
mov
in
rol
cltd
jg,pt
iret
dec
dec
and
mov
rcrl
jge
mov
xchg
in
xor
push
jo
xchg
out
dec
lahf
out
add
pop
ds
pop
push
lods
mov
sbb
out
imul
gs
popa
mov
loop
cmpsb
mov
pop
cli
mov
jecxz
gs
or
push
xchg
nop
inc
mov
push
sub
xor
in
push
gs
mov
movb
dec
dec
cltd
fwait
cltd
sub
fwait
incb
jo
arpl
mov
das
push
popa
jge
fwait
inc
int
or
lcall
arpl
inc
mov
sbb
pop
pop
rol
mov
xchg
shrb
cmp
mov
mov
gs
test
iret
mov
stc
mov
lods
cld
inc
cmpsb
sbb
lods
sti
pop
cld
inc
fsts
cmp
mov
loopne
xchg
cwtl
clc
pop
or
imul
jg
pop
pop
sbb
and
sbb
xchg
push
xchg
test
jmp
and
jle
jno
sub
xor
xchg
xor
inc
ja
fnstcw
shl
add
outsb
pop
xchg
push
enter
push
shlb
inc
ret
sbb
fst
popf
adc
dec
mov
pop
stos
out
lds
imul
aam
sub
add
loope
inc
fiaddl
push
std
data16
jno
leave
loope
fistps
enter
mov
or
jge
in
cmp
and
repz
test
ret
das
mov
test
clc
das
xchg
push
add
popf
dec
and
cli
fimull
imul
loopne
sbb
add
jno
jmp
xchg
adc
addr16
push
rorb
jae
nop
adc
aam
pop
cld
push
andl
out
mov
shlb
inc
sbb
js
xor
xchg
fmull
shlb
xor
xchg
pushf
cmpb
inc
fsubrp
inc
into
adc
ret
mov
mov
and
lods
mov
push
sbb
mov
mov
sarb
addl
in
mov
repnz
add
push
cmp
outsl
mov
pushf
fs
jnp
pop
dec
jne
bound
or
js
mov
aas
cwtl
cli
jbe
sbb
cmpl
pop
and
push
adc
ds
outsl
dec
push
in
xchg
in
fcomps
sbb
aam
inc
and
int3
add
cwtl
movsl
cmp
ds
sub
push
sbbb
in
adc
leave
movsl
shlb
sbb
lret
mov
fcomi
cmp
lods
sbb
push
push
add
mov
out
movsb
test
fdivp
pop
je
pop
ret
adc
push
xchg
inc
dec
ljmp
out
addr16
fsubrs
mov
mov
orl
push
or
push
stos
adc
and
xchg
repz
aam
out
test
or
test
add
dec
xchg
adc
and
and
popf
mov
addr16
and
add
jp
xor
adc
std
sbb
iret
mov
or
je
or
idivl
push
cwtl
stc
pushf
sub
sbb
add
into
xor
mov
push
outsl
repz
ret
js
cmovns
and
lret
dec
xlat
les
test
dec
jno
arpl
adc
dec
in
mov
mov
andl
jg
ficoml
data16
pop
and
daa
sbb
lods
and
outsl
cld
mov
lahf
shlb
mov
cmp
xor
out
pop
repnz
cltd
pop
addb
adc
pop
mov
dec
or
fadds
and
xchg
xchg
sbb
dec
mov
leave
adc
push
dec
jns
idivb
call
sbb
xchg
xor
scas
enter
insb
mov
orl
call
movsl
push
lcall
test
stos
and
dec
loopne,pn
jb
or
mov
movsb
cwtl
and
cmp
notb
and
add
addl
lea
jb
out
shll
pop
in
adc
imul
cmpb
adc
sub
dec
sahf
jo
xchg
into
lods
scas
stos
pop
test
or
daa
mov
mov
outsl
or
cltd
int3
mov
imul
xchg
lods
adc
mov
mov
push
dec
adc
cmp
jo
pop
jmp
mov
xchg
insb
jmp
dec
or
push
xchg
add
push
inc
cmpsb
mov
sbb
lea
and
shlb
and
in
in
cmpsl
or
add
stos
inc
dec
fcomps
mov
ffreep
inc
loopne
mov
pop
ds
outsb
inc
mov
repnz
xchg
ret
sbb
std
sti
sub
pushf
ret
mov
into
in
imul
test
jg
mov
cmp
psubsb
jl
js
mov
add
nop
and
cli
xchg
adc
loope
dec
jl
mov
je
push
jno
fdivs
pop
jbe
mov
cmp
mov
mov
mov
lret
adc
ss
loope
pusha
cs
mov
fcomps
lock
jns
jne
push
cmp
push
sbb
adc
ljmp
mov
imul
mov
roll
dec
fnsave
out
test
xor
lahf
insl
pop
sbb
out
xchg
add
shll
jmp
iret
mov
sub
in
orb
fstps
fiaddl
ds
push
cmpsl
fisttpll
test
inc
push
mov
inc
adc
mov
or
icebp
sbb
into
movsb
adc
xor
mov
iret
xlat
pop
or
xlat
dec
imul
push
pop
es
iret
jnp
xor
roll
mov
pop
lods
out
mov
add
fcmovnb
jp
ret
leave
ficompl
fstl
insb
jl
pop
xor
xor
xchg
push
jns
mov
rclb
add
inc
sti
cmc
nop
movsl
rcll
sub
mov
mov
lods
or
fdivs
test
jns
addr16
mov
out
daa
cltd
loope
or
divl
dec
sbb
lcall
pop
out
sahf
add
mov
pop
jb
sub
sub
insb
mov
mov
jge
in
lret
lcall
dec
push
fdivrs
ljmp
xchg
andl
jo
push
aam
insb
mov
inc
adc
in
int3
mov
mov
out
cmp
movsl
xor
adc
xor
lcall
inc
rcl
fistl
les
subb
std
stos
add
cmp
push
insb
js
outsb
lahf
stos
nop
xchg
sub
fwait
pop
fdivs
mov
cli
or
dec
mov
ss
push
pop
add
push
jno
fstpt
icebp
sub
gs
mov
pop
arpl
mov
mov
jns
leave
rcrl
xchg
in
mov
add
shlb
fcmove
fdivl
mov
mov
push
add
adc
cld
push
mov
xchg
xlat
sub
cld
mov
inc
js
or
cld
push
and
push
cmp
xor
enter
xchg
add
in
scas
cmpsb
dec
or
xor
and
jnp
lahf
hlt
jae
shll
pop
das
bound
mov
xor
into
dec
dec
mov
mov
lahf
ljmp
enter
bound
int
cmp
jg
jne
outsl
rcrl
sbb
cmp
cmp
mov
and
insb
aas
mov
push
repz
lahf
sub
addl
sbb
push
mov
nop
adc
push
lods
gs
push
pop
inc
fmulp
push
jg
inc
inc
cmp
mov
outsl
jp
fnsave
int
jnp
or
rclb
lock
mov
and
repz
mov
sub
out
push
pusha
xor
fnstenv
sahf
test
aad
pop
adc
dec
jecxz
lods
insb
mov
dec
jnp
lcall
xor
in
ret
pop
repz
std
outsb
sbb
inc
fildll
mov
divb
dec
xor
push
adc
adc
out
ss
mov
in
sub
inc
mov
jne
and
pop
mov
sbb
mov
or
or
fsubrl
push
sub
jp
out
gs
push
or
xor
pmaxsw
rcrb
fcmovnb
mov
mov
push
jmp
imul
mov
mov
das
nop
popf
jns
jbe
or
pop
dec
dec
aad
mov
jmp
sbb
scas
dec
inc
dec
ret
mov
add
jnp
je
les
jb
xor
hlt
xor
aad
xchg
adc
cmpsl
mov
mov
into
ret
shrb
and
xchg
sub
pushf
sbb
mov
test
cmc
cld
push
xchg
popa
popa
stc
push
out
jmp
lods
jnp
dec
jnp
dec
adc
xchg
xchg
into
dec
insb
xchg
lods
dec
rcr
das
ljmp
lahf
cmpsb
adc
add
xchg
mov
in
push
pop
out
adc
lock
dec
lods
cli
add
add
stos
cltd
insb
test
xchg
xchg
xor
xchg
lea
push
pusha
jns
repz
sub
mov
movsb
adc
loope
repz
cld
popf
daa
inc
mov
cwtl
movsl
in
dec
and
adc
insl
in
and
xchg
push
xor
ja
fxch
jno
jno
jge
xor
xor
mov
mov
xchg
das
insl
stc
mov
jg
popf
daa
sbb
out
cmp
inc
push
and
cs
mov
and
dec
leave
xor
xchg
lods
jnp
dec
push
cmp
fwait
js
add
sbb
movsb
sub
mov
xchg
push
es
addr16
rcll
cld
cmpsl
add
popa
mov
sbb
rcl
icebp
dec
lds
cltd
push
adc
jecxz
push
cmpsb
int3
shlb
and
les
jne
lret
loopne
ds
lds
rorb
je
and
pop
lods
outsb
jns
mov
adc
adc
movsb
insb
repz
sub
sub
out
mov
ror
sub
daa
nop
cmpsb
mov
or
mov
pop
push
mov
ret
and
fmull
adc
test
jbe
stc
xchg
fstl
jb
inc
xchg
ja
cmpsb
cmp
mov
sbb
pop
ljmp
pop
sub
fucomi
xor
pop
and
xchg
js
dec
mov
repz
mov
repz
sti
loopne
push
inc
lods
dec
adc
bound
push
xchg
push
mov
std
icebp
iret
or
xchg
aas
inc
cmpsl
lock
lahf
movsw
pop
gs
mov
mov
fsub
scas
in
in
pop
sbb
shlb
daa
mov
mov
stos
pop
and
mov
dec
push
cmp
add
adc
push
pop
inc
mov
hlt
pushl
push
nop
push
je
sarb
inc
push
shl
xchg
sub
jmp
pop
lahf
sahf
or
movsb
dec
adc
jp
dec
movsl
or
loope
fldt
fnstenv
inc
adc
dec
jl
add
rcrb
call
mov
dec
xor
shll
scas
sbb
pop
push
pop
pusha
pop
mov
rorl
aam
insl
add
icebp
or
inc
cmpsl
sub
xor
adc
clc
std
popf
push
cli
inc
mov
test
mov
jle
lahf
push
mov
pusha
cmp
push
sub
xor
pop
inc
sub
xchg
pop
sbb
cmp
ret
testb
cmp
sub
pop
pop
mov
sbbb
popf
std
pop
and
int
sub
fisubrs
cld
add
aam
xor
push
sbb
roll
or
ljmp
mov
inc
or
cmp
gs
mov
fdivrs
xchg
clc
test
sub
inc
mov
adc
pop
int
sub
cmpsl
repz
sub
cmpsb
xchg
jns
jo
xchg
inc
pop
aam
mov
aam
addl
mov
pop
jb
cmp
push
sbbl
mov
sbb
mov
inc
cmpsb
sub
ds
cs
in
xchg
pop
inc
mov
cmp
out
xchg
or
dec
icebp
push
loope
cmc
sub
adc
xchg
int
dec
xchg
mov
test
ficoml
les
les
dec
sub
cmp
dec
dec
idivb
jecxz
in
pop
push
shll
pop
out
add
mov
dec
popf
adc
push
cmp
cmpsl
sub
lods
mov
xchg
ficoms
inc
movsb
hlt
hlt
adc
pop
lahf
mov
sbb
inc
sbbl
adc
ss
scas
inc
xlat
leave
in
jnp
mov
push
jle
cmp
mov
push
fs
xor
rcrl
dec
dec
xor
mov
xchg
sbb
pop
faddl
testl
loope
lcall
lcall
in
imul
out
push
mov
add
movsl
mov
jle
rcrb
stos
cmp
int3
jp
sbb
mov
or
inc
sbb
inc
xchg
testl
hlt
iret
pop
push
dec
iret
mov
jle
mov
pop
gs
mov
xor
scas
stc
adc
mov
cmp
rcrl
test
or
sub
outsb
leave
sarl
xor
push
sahf
xor
cwtl
leave
insb
or
outsb
ret
adc
test
adc
call
pop
mov
insb
fs
pushf
fstps
stos
adcl
pop
inc
addr16
ljmp
stc
add
xlat
dec
mov
lahf
and
cld
sarb
adcl
mov
add
daa
and
movb
shrb
and
cmp
ss
or
adc
pop
mov
adc
test
repz
fbstp
cld
ds
lret
or
cmp
imul
jg
stos
test
push
imul
mov
pop
lds
es
pop
mulb
lods
push
sbb
mov
lods
daa
jmp
cmpsb
xlat
in
mov
or
in
jae
cmp
inc
fcmovnu
cwtl
call
add
cld
test
or
dec
sub
adc
inc
es
lret
rolb
mov
orl
ret
adc
sub
fwait
mov
sub
jne
sahf
mov
lret
shl
mov
mov
test
sar
inc
push
lcall
push
aad
xchg
dec
mov
and
scas
xor
mov
nop
jmp
push
pop
xor
sub
xor
hlt
mov
xor
mov
sbb
mov
inc
cmp
fcompl
scas
leave
xor
mov
mov
imul
adcb
cmc
lea
dec
inc
clc
sarl
fildll
mov
std
cmp
jb
outsl
cli
data16
std
inc
push
aaa
push
call
outsb
sub
xchg
mov
les
or
jg
push
cmp
xchg
xchg
cmp
fsubrl
adc
movsb
or
in
sbb
into
ret
ds
and
xor
adcb
stos
cltd
jg
xlat
and
shlb
arpl
in
add
clc
mov
pop
jg
ds
incl
or
dec
insl
xor
aas
inc
inc
stos
js
lea
pop
pop
sti
mov
inc
xor
mov
setne
add
and
cmpsl
sbb
mov
mov
in
ljmp
psrlw
test
or
cmp
std
xchg
popa
cmp
mov
xor
mov
inc
xchg
es
sub
andl
cmp
xchg
movsb
sub
mov
std
mov
mov
xor
cmp
in
shll
mov
fistpll
sub
mov
pop
idiv
mov
and
daa
stos
pushf
or
int
cltd
es
xchg
and
xchg
iret
xor
push
lret
scas
xor
call
adc
mov
mov
aaa
lods
sub
mov
popf
push
stc
mov
imul
arpl
push
fwait
iret
leave
push
imul
xor
inc
scas
adc
pop
imul
mov
cmp
inc
sbb
leave
push
fstl
cmpsl
aas
cld
ss
insb
jg
fcmovb
lea
mov
cmc
jno
pop
cvtdq2ps
sahf
pop
ror
mov
mov
pop
cmp
xor
mov
loop
in
cmp
xor
dec
mov
je
or
lods
andb
cmp
pop
scas
inc
fnstcw
mov
jle
jl
mov
adc
aas
mov
insl
in
or
mov
pop
fistps
in
xchg
mov
sbb
lds
mul
lea
out
cmp
push
cmp
mov
lea
fisubl
lods
dec
mov
ret
scas
pushf
ficompl
mov
xchg
and
cmp
ficompl
popa
cs
aas
mov
stc
gs
xchg
or
push
adc
addl
sbb
adc
loop
out
adc
push
cmc
call
pop
dec
cmp
mov
pushf
mov
xchg
mov
mov
lods
sub
imul
push
imul
push
dec
xor
dec
int3
rolb
int3
in
decl
sbb
outsl
or
lea
mov
or
movsb
xor
mov
stos
dec
stc
fisttps
mov
add
les
inc
fbstp
outsl
fisttpll
inc
jo
sbb
lret
ds
clc
gs
sbb
mov
fidivrl
pop
pop
popf
inc
scas
adc
mov
fnstsw
dec
ljmp
shrl
pop
adc
ret
mov
push
dec
xchg
push
inc
jbe
sub
and
xor
jno
xor
push
addr16
hlt
popa
fldl
mov
xchg
mov
add
pop
pop
push
inc
cmpsl
mov
dec
je
stos
dec
push
xchg
mov
lods
addr16
insl
mov
insb
inc
sub
and
aad
cmp
int
cmpsl
and
mov
inc
repnz
cli
orb
enter
imul
popa
movsl
adc
ficompl
lods
clc
and
xchg
inc
leave
leave
push
jae
inc
adc
jae
pop
xor
add
notb
or
std
cld
mov
fldl
sbb
add
push
xor
and
out
outsb
inc
mov
fiaddl
jbe
and
sarb
adc
adc
or
cmpsb
ret
push
mov
dec
mov
iret
jle
push
mov
fs
das
out
je
jl
cmp
sbb
or
sub
pop
pushf
jmp
sarb
jmp
loop
out
aaa
push
imul
imul
call
jg
test
sub
adc
sahf
add
inc
mov
cmpsl
xor
mov
dec
mov
cmp
iret
mov
mov
adc
xchg
push
xchg
mov
sbb
in
mov
pop
inc
movsb
add
rol
rcrl
inc
xchg
inc
nop
mov
faddp
sub
mov
sub
loopne
data16
sti
stos
pop
lock
mov
pushl
les
jle
inc
aad
scas
fs
mov
ret
mov
mov
es
in
sbb
and
xor
sub
popa
sbbl
cs
int3
lcall
cmpl
xchg
lret
pop
add
jecxz
popl
xor
mov
push
lcall
repnz
popf
aas
imul
ljmp
push
pop
int3
out
add
shr
push
mov
leave
add
lods
pusha
xchg
in
push
ret
sti
aas
jbe
xchg
fidivs
or
xchg
mov
push
in
popa
pop
add
inc
aad
nop
and
loopne
and
jp
add
sub
outsb
adc
sbb
mov
arpl
iret
push
iret
cmp
stos
sbb
pop
sbb
fsubrl
xchg
mov
icebp
loop
jb
mov
pop
fmul
fisttps
mov
jp
scas
sub
jae
cmp
xor
mov
imul
pop
push
in
in
outsl
cmc
pop
dec
mov
fstpl
xchg
push
sahf
rorl
xor
and
cltd
adc
rcrb
sbb
mov
fs
or
out
mov
fimuls
sub
add
cmp
js
dec
je
stos
jae
lea
push
push
xchg
pop
imul
inc
les
pop
adc
test
out
pop
and
push
adc
sbb
ja
sbb
adc
addr16
xchg
dec
mov
sti
pop
cmpsl
fdiv
cmp
mov
dec
jns
pop
inc
or
cwtl
fnstenv
aaa
sbbl
cmp
sbb
jmp
jecxz
jle
call
pop
mov
jmp
data16
in
pop
mov
into
enter
xchg
outsb
pop
pop
lahf
or
cmp
dec
cmp
inc
icebp
scas
xchg
test
call
jmp
hlt
adc
xchg
dec
punpcklwd
jbe
mov
cmp
sbb
push
stc
data16
cli
iret
ret
sub
sub
cmc
push
adc
and
and
lods
push
mov
sbb
jle
mov
jae
mov
jle
cmp
or
and
and
sahf
outsl
or
jecxz
inc
dec
mov
inc
push
sbb
insb
push
push
negb
add
sarl
je
arpl
pop
ss
mov
push
add
inc
jle
test
adc
int3
mov
lret
lods
inc
cmpsl
jecxz
or
xchg
jb
dec
adc
stc
jecxz
insb
adc
sarl
sbb
sub
or
mov
adc
test
jg
jge
push
vsqrtsd
push
es
scas
sub
xchg
mov
jns
dec
js
cs
dec
out
repnz
ret
sub
fnsave
lahf
or
cmp
inc
call
xchg
es
sub
mov
arpl
sbb
sub
xchg
aad
mov
loope
loop
add
inc
cli
cmpsl
adc
js
inc
dec
ja
xchg
add
xchg
mov
out
dec
add
or
ds
add
test
lods
and
fwait
mov
fcmove
xchg
push
add
into
scas
insb
fidivrl
fcomp
add
mov
dec
mov
movsl
fmull
mov
jge
or
dec
dec
cli
cwtl
jae
lret
mov
lcall
arpl
imul
mov
ficompl
lcall
xlat
and
stc
jl
push
dec
add
jp
pop
sti
aas
xchg
sub
pop
inc
cmp
cmp
cmp
cmpxchg
test
or
shrb
mov
push
int
fcmovbe
test
or
lock
mov
jle
jmp
pushf
cwtl
mov
pop
jg,pt
dec
push
xor
les
push
and
das
xor
lods
fcoms
xor
push
cmc
xlat
lods
nop
and
popf
pop
lret
add
mov
mov
fcoms
pop
xor
popa
mov
xorl
gs
mov
sub
lahf
notb
jne
ja
pusha
dec
lds
mov
out
test
daa
xchg
xor
or
jo
aaa
add
les
fiaddl
cmp
push
aas
dec
dec
insl
es
lahf
inc
sub
push
mov
pop
movsb
xchg
ds
shr
xchg
sbb
jecxz
sub
mov
mov
and
outsb
ficoml
nop
pop
test
mov
imul
imul
xlat
scas
push
push
mov
sub
lods
leave
and
lods
dec
dec
cmp
bound
or
lds
inc
pop
sbb
das
fsts
rcrb
das
xchg
add
pop
xchg
shll
insb
loopne
xor
jb
inc
fucomip
cltd
add
lret
jno
pop
nop
inc
and
testb
mov
bound
cmp
sbb
push
lahf
fnstenv
js
pop
mov
mov
dec
adc
sbb
add
push
xor
mov
mov
jns
mov
xor
iret
cmp
xlat
xchg
or
int
dec
call
xchg
push
push
sti
cltd
jno
jae
dec
leave
outsb
mov
fsubrp
xchg
stos
ret
inc
ret
jnp
rolb
pop
hlt
jb
push
jnp
cwtl
mov
es
mov
mov
ret
push
mov
jbe
stos
push
inc
sub
lret
jns
mov
push
dec
mov
sub
aam
popf
cmp
pusha
aad
lcall
imulb
in
or
stc
cmp
or
pop
ds
enter
jb
roll
mov
jecxz
mov
mov
movsl
in
mov
sub
test
xchg
cmp
call
pop
jo
in
orl
movsl
and
cmp
inc
cmp
cmp
out
pop
jns
jo
xchg
xor
mov
rclb
lock
iret
pop
hlt
inc
push
push
sbb
aad
sbb
data16
push
sbb
or
add
push
cmp
pushf
mov
mov
xchg
push
push
sub
cwtl
cwtl
sbb
aam
mov
dec
loopne
mov
sbb
mov
jmp
push
cmpsl
add
das
insl
rcrl
lahf
add
push
xchg
or
fdivs
cmp
cld
lods
mov
scas
push
mov
pop
xchg
and
and
aaa
xor
adc
cmp
sbbb
push
cmp
out
sub
movsl
jo
lods
mov
mov
jp
xlat
arpl
pushf
or
out
ret
add
push
pushf
dec
fwait
sbb
or
push
mov
and
push
in
jp
mov
adc
add
outsl
lahf
mov
in
pushf
mov
out
loopne
jnp
mov
jne
call
mov
in
bound
xchg
inc
nop
setl
movsl
mov
adc
rcll
push
mov
mov
xor
cmpsb
xor
xchg
add
sbb
mov
out
fdivr
sbb
filds
or
lods
imul
pop
ja
addr16
leave
addr16
and
nop
xor
or
insb
xchg
imul
and
sbb
ja
fcompl
pmaxsw
mov
imul
and
popl
xor
test
add
push
mov
mov
mov
inc
rcrb
loopne
and
push
cmp
fisubrs
test
in
or
cltd
jno
sbb
jne
ljmp
ja
inc
and
jecxz
cmpsb
icebp
push
add
inc
je
aas
and
push
xchg
lods
hlt
and
jae
cld
cmp
movsb
sub
mov
xchg
shlb
mov
jne
push
add
and
mov
test
int3
pop
lcall
rcll
sub
test
pop
cld
cmpl
mov
pusha
xor
dec
push
andl
sbb
dec
decl
push
mov
test
inc
fdivr
pop
call
loopne
aam
jno
add
lods
sbb
lret
xchg
mov
xor
sbb
push
xor
pop
add
fidivrl
aam
rorb
and
mov
call
mov
push
cld
je
icebp
dec
mov
xor
out
inc
adc
repz
icebp
jb
cmc
jno
into
push
push
shl
push
add
pop
insb
test
iret
sar
jne
inc
xor
rcrl
int
adc
jl
lock
repnz
stos
jl
lret
lds
mov
cld
fadds
fisttps
or
jnp
jge
nop
cwtl
mov
xor
jmp
aad
mov
fldt
xchg
push
or
cmp
pop
xorl
std
ja
inc
imul
pop
ds
addr16
push
int
mov
jp
dec
jbe
insb
pop
push
xor
add
ret
inc
jecxz
int3
ret
pop
sub
lods
in
fnstsw
sub
dec
orb
mov
es
imul
dec
mov
push
inc
es
ljmp
dec
sub
ljmp
mov
push
add
ficoml
pop
push
inc
sti
imul
int3
push
inc
and
imull
push
mul
js
cmp
aam
mov
mov
fcmovnb
sub
sub
push
subl
xor
cmp
sub
xchg
xchg
dec
flds
push
cmp
lock
in
sub
pop
xor
sub
pop
dec
fs
adcl
xchg
jne
add
enter
jge
std
mov
jmp
fstl
jg
jbe
pop
jmp
mov
mov
scas
inc
sbb
stc
sbb
cmc
jmp
rcll
lds
push
sub
subb
jbe
adc
jle
inc
push
cmp
pop
popf
mov
lods
insl
mov
sbb
clc
push
add
pusha
cmpb
rcll
inc
call
push
mov
mov
xchg
sbb
mov
cwtl
lock
subb
dec
cltd
ljmp
lcall
mov
sub
das
shl
sub
xchg
or
out
pop
out
dec
cli
sbb
js
mov
pop
inc
dec
incb
jae
cmp
aaa
lods
lcall
xor
push
int
arpl
out
xor
fiaddl
add
out
cmp
testl
out
mov
mov
clc
cmp
adc
aam
out
psrlw
gs
mov
out
push
dec
jmp
stos
bswap
mov
fisubs
mov
adc
jecxz
add
xor
rorb
rolb
dec
mov
mov
mov
stc
loopne
sbb
mov
jno
stos
mov
das
inc
outsl
bound
dec
mov
adc
stos
ret
sub
fldenv
pop
jle
cmc
fxch
push
dec
mov
ret
dec
int3
pop
inc
mov
push
xlat
push
mov
pop
aam
or
int3
jge
jae
pushf
inc
dec
mov
sbb
hlt
add
cmp
inc
mov
call
sahf
fwait
sub
test
push
push
enter
mov
mov
xor
lcall
adc
gs
adc
xor
add
ror
pop
loopne
aam
arpl
dec
cltd
sub
mov
scas
sbb
jge
mov
adc
adc
cmp
inc
add
out
mov
mov
shll
icebp
jno
fsub
adc
pop
add
loopne
das
fsubs
push
or
test
lcall
add
mov
push
adc
mov
aaa
lea
xchg
cli
jl
push
sub
in
insl
outsl
repz
add
pusha
fwait
mov
mov
pop
loopne
fmull
mov
pop
lret
loop
mov
sbb
fnstcw
mov
push
or
clc
mov
gs
das
insl
mov
xor
ds
sbb
outsl
fcmovbe
inc
pop
mov
cmpsb
mov
or
jg
mov
icebp
aas
je
or
add
nop
daa
mov
xchg
dec
jno
sub
push
icebp
fisubs
mov
out
pop
cmp
out
shlb
shlb
pop
jb
mov
cmp
lea
outsl
add
push
dec
ss
ret
out
sbb
std
in
adc
repnz
int
stc
sbbl
iret
add
dec
adc
repnz
adc
lahf
rorb
push
test
rcr
and
insl
push
adc
scas
mov
xchg
jnp
adc
mov
xchg
cmp
jg
jo
xchg
test
adc
neg
bound
js
hlt
and
dec
dec
and
roll
in
sahf
movsb
ret
adc
pop
loop
repz
cltd
jp
movb
ficoml
jne
dec
xor
mov
mov
pop
mov
jmp
out
call
inc
xchg
in
inc
dec
pop
inc
lcall
mov
out
stos
lods
sti
add
xchg
loop
or
cmpsl
or
pop
and
pop
les
sarb
inc
test
xchg
and
mov
ret
xorb
stos
icebp
or
xorl
test
sti
xor
loopne
stos
ljmp
dec
xor
adc
cmp
addl
movsb
add
push
and
arpl
inc
jns
out
ja
mov
rclb
mov
call
ljmp
mov
dec
test
or
dec
xchg
cmpb
mov
scas
icebp
cmp
inc
sbb
hlt
pop
test
out
bound
jae
push
inc
adc
fs
aaa
mov
mov
out
mov
jno
aad
mov
icebp
js
mov
shrl
orb
subb
repnz
loop
test
push
cmp
cmpsl
ds
rorl
ret
ret
int3
lods
jbe
daa
sbb
cltd
clc
sub
adc
inc
scas
xor
sbb
out
cmpsl
and
enter
lods
mov
iret
bound
test
xor
hlt
add
jnp
push
pop
lcall
cmp
inc
pavgw
dec
adc
xchg
adc
adc
dec
jo
in
pushf
dec
jmp
into
add
imul
loopne
pop
cmp
mov
sahf
mov
dec
rcrb
pop
xor
in
jmp
js
sbb
jge
lret
jl
clc
loop
ja
out
test
dec
jle
je
adc
bound
outsb
inc
ja
gs
dec
xor
in
sub
iret
add
mov
loopne
aad
inc
fildl
cmpsl
add
icebp
jno
jo
aad
aaa
cmpsb
jae
sub
out
mov
ret
ret
and
push
or
scas
fldt
pop
mov
int3
fcmovnbe
lock
or
cltd
ret
popa
test
xor
test
rcrl
or
xchg
sahf
adc
push
jmp
jbe
sub
sub
stc
pop
hlt
loope
pop
and
xchg
fnstsw
sti
fs
nop
sbb
in
nop
cmp
cmpsb
jo
push
and
imul
mov
sub
aad
ds
cwtl
cmp
jbe
repnz
insb
rclb
jo
sub
push
push
pop
decl
push
nop
jnp
cmpsl
xchg
pushf
mov
pcmpgtw
sbb
jns
inc
add
out
fisubrl
cmp
js
xchg
sub
not
sub
mov
dec
cmp
insl
test
lods
les
mov
cmpb
adc
ljmp
repnz
push
jns
push
jo
push
and
lea
popa
enter
rolb
lea
imul
test
subb
neg
inc
into
cmp
fisubs
sbb
dec
xor
fld
pop
lret
pusha
or
xchg
orb
add
sub
add
repnz
add
or
push
dec
adc
pop
in
add
loop
pop
pop
mov
mov
stos
out
mov
lcall
fwait
mov
mov
imul
fistpll
movsl
sbb
test
xchg
pop
subl
ffreep
mov
mov
sbb
repz
outsb
ds
mov
adc
hlt
scas
or
inc
mov
lock
pop
and
mov
sub
or
mov
call
popf
and
xor
ljmp
mov
cmpb
mov
subb
mul
jns
and
movsl
fcmovb
pop
push
icebp
in
xchg
jo
lahf
adc
scas
sbb
mov
xor
or
enter
cli
xchg
xchg
mov
sbb
push
mov
pop
adc
cmpsb
inc
sbbl
xchg
rolb
fiaddl
xor
jae
and
call
repnz
test
andb
and
sbb
push
mov
lret
lods
mov
push
hlt
rcrl
int3
int3
decb
loop
jle
mov
loop
aaa
cmc
adc
or
mov
sahf
outsl
in
lods
cmpsl
test
in
lock
mov
movl
mov
insl
loopne
mov
ret
insb
icebp
shlb
adc
jle
jmp
pop
mov
cltd
adc
fcomps
sub
add
mov
pop
cwtl
mov
dec
pop
mov
fwait
push
std
lahf
scas
or
mov
dec
frstor
mov
add
push
and
dec
cmp
popa
fwait
outsb
mov
push
dec
jno
mov
aas
jbe
jns
jmp
sub
je
xor
pop
js
insl
jo
out
ljmp
out
lahf
mov
out
and
cmp
out
or
xchg
and
cmp
and
je
jmp
mov
and
mov
aam
hlt
negl
adc
jl
shrb
lret
mov
stos
movd
aaa
fmuls
xchg
adc
insl
lahf
xchg
mov
pop
cltd
xor
mov
aad
cs
icebp
mov
arpl
int
cmpsb
dec
sub
out
jmp
cmp
push
rcrb
adc
and
jnp
mov
popf
sbb
push
mov
add
cmovo
dec
dec
add
fsub
push
inc
lcall
adc
cmc
dec
mov
cmp
mov
test
pop
rorl
sbb
in
add
inc
xor
fs
mov
inc
sbb
mov
les
inc
cmp
imul
sbb
scas
dec
or
rol
mov
pop
insb
outsl
push
in
jl
mov
xor
loope
test
div
aad
cli
les
xchg
mov
lods
pushf
incl
fnstcw
mov
test
jne
not
mov
pusha
pop
sbb
cmp
in
insl
jg
sub
shrd
push
andb
lret
dec
out
pop
inc
out
or
inc
das
sub
repnz
data16
xor
lahf
pop
imull
mov
adc
mov
pop
adc
popa
leave
insb
xchg
cmp
gs
out
or
ret
inc
jg
jg
dec
outsb
or
fldt
cld
aas
sbb
pop
jmp
sub
add
lods
cwtl
mov
sub
xchg
inc
mov
pop
inc
lcall
les
in
cwtl
inc
aaa
aas
repz
or
and
mov
int3
popf
mov
pop
cmp
iret
add
in
mov
shll
movsl
ja
fisubrs
sub
or
xchg
in
pop
rolb
ret
pop
mov
rclb
xchg
sub
imul
lret
jbe
push
sub
in
push
stc
push
mov
stos
ljmp
lods
lret
lret
testl
cmp
cli
adc
inc
adc
cltd
xor
or
sbb
xchg
mov
jg
sbb
movswl
cmp
mov
sub
jle
and
or
cmp
mov
aad
les
add
xlat
pop
in
mov
jne
cmc
mov
test
jl
out
lret
jo
ret
int3
adc
pusha
sbb
lcall
repz
cltd
sub
add
mov
mov
push
sbb
repz
push
les
dec
out
pop
sbb
lcall
mov
cmp
les
add
mov
xor
loopne
and
lahf
dec
fsincos
add
test
mov
dec
mov
add
xchg
jae
sub
push
or
or
sub
aaa
fsubrp
mov
and
xchg
shl
insb
lds
add
or
addb
outsl
mov
or
pusha
out
bound
lock
and
addr16
negl
idivl
je
decl
adc
movsb
mov
cmpsb
pop
pop
cltd
cmpsl
sbb
dec
jns
movsl
xchg
lahf
sbb
sbb
and
jns
fwait
dec
lock
aaa
cmp
aad
shll
jbe
in
or
or
dec
add
mov
sbb
fld
adc
sarb
push
bswap
es
shl
leave
sub
mov
mov
in
or
or
inc
xor
mov
sbb
test
lahf
cmc
enter
pop
insb
xchg
lcall
sub
jno
into
cwtl
cwtl
pop
add
xchg
sahf
icebp
in
out
jecxz
aaa
mov
push
push
fildll
mov
pop
xchg
jge
sbb
mov
sub
ljmp
rorb
ljmp
popa
outsl
mov
lock
jno
or
mov
or
xor
fldenv
xor
andb
and
iret
loopne
jp
cli
sub
test
xchg
xchg
add
push
into
stos
or
mov
outsb
xchg
adc
cmpsb
pop
cmp
jecxz
xor
repz
mov
xchg
stc
adc
sub
lods
jge
repnz
outsl
pop
dec
pop
shrb
in
stos
and
lods
aam
xor
out
inc
lahf
mov
cmpsb
mov
pop
cmc
inc
imul
iret
add
add
popl
mov
aas
into
xchg
fsts
cltd
adc
push
sti
jae,pt
or
mov
sbb
inc
add
ljmp
sbb
jnp
jnp
xchg
xor
sti
dec
lods
mov
adc
mov
push
xchg
lret
leave
jge
fiadds
sbb
mov
lahf
or
test
jnp
fwait
lret
mov
sub
pop
mov
sbb
ds
js,pt
sub
jle
mov
rep
insl
push
imul
sbb
arpl
hlt
lds
pop
jl
push
lahf
cwtl
mov
lds
leave
bound
ss
inc
stos
into
or
adc
out
mov
xchg
fwait
mov
or
rol
ljmp
jle
jge
jmp
pop
sub
fdivl
sbb
and
jns
loopne
mov
push
fiaddl
jg
jo
enter
subl
out
push
push
add
inc
mov
cmpsb
sahf
rcll
ret
xchg
fmull
adc
xchg
fisubrs
loopne
mulb
pop
push
rep
sbb
xchg
mov
mov
push
fldenv
cli
mov
xor
sub
dec
push
aam
xor
sahf
fnstsw
shlb
mov
sarb
out
xor
pop
imul
insl
xor
xchg
sub
pop
icebp
fsub
inc
insb
out
or
je
lret
std
repnz
inc
mov
scas
inc
fdivrs
xor
in
popf
and
mov
mov
xchg
cmp
xchg
cmp
hlt
dec
rorl
and
mov
dec
rol
fwait
push
mov
dec
mov
outsl
mov
jnp
cli
push
out
xchg
js
or
movsl
xchg
pushf
aas
or
bswap
scas
in
cmp
sbb
sbb
repz
das
adc
out
lahf
cmovns
cmp
test
ret
add
mov
inc
mov
sbb
mov
mov
sbb
hlt
ds
mov
fldenv
jmp
shlb
les
cmp
sub
jp
outsb
mov
sbb
out
fs
add
out
pop
sbbb
dec
push
add
dec
dec
xor
or
mov
mov
push
pop
mov
sbb
mov
and
lret
insb
pop
lret
aaa
jbe
mov
cmpl
jo
aad
je
and
push
andl
add
outsb
xchg
data16
push
or
add
mov
ret
ja
negb
ljmp
ljmp
xor
xor
jl
xor
into
ret
dec
adc
outsl
sbb
pavgb
popf
loope
and
mov
pop
push
sahf
xchg
push
push
dec
jp
lea
pop
jle
inc
sbb
cwtl
mov
pop
popa
push
insl
mov
lahf
repnz
icebp
jns
pop
shrb
cmc
pop
cmp
sarl
dec
test
sbb
lea
stos
fstp
lahf
repz
outsl
or
and
insl
fists
pop
icebp
mov
pop
gs
cmp
std
pop
ret
dec
xchg
hlt
inc
sti
repnz
mov
sbb
dec
xchg
cmpsb
jmp
or
or
inc
in
in
mov
cmp
push
repz
mov
lds
push
mov
fs
pop
mov
push
sub
hlt
jnp
push
xor
popa
dec
rorb
pop
je
dec
add
pop
xchg
xor
lock
ss
adc
leave
mov
nop
call
pop
pop
jl
push
mov
push
sets
lds
cmp
cmpsl
fs
addb
pop
jg
lea
inc
lret
cmp
push
es
fldcw
cmp
rclb
xor
aas
jmp
push
ret
insb
aaa
loope
dec
out
jmp
sbb
sar
jo
or
push
repz
movsl
xor
xchg
sbbb
ret
pop
pop
push
xchg
push
mov
xchg
mov
xchg
or
xchg
pop
outsl
pop
fistps
iret
in
push
push
mov
sub
mov
pop
fwait
test
out
shrl
mov
inc
call
pusha
add
cmp
mov
subb
je
repz
dec
push
mov
jno
in
lods
sbb
inc
fdivrs
ret
jle
mov
rcrb
push
pop
pop
ljmp
jae
xor
dec
js
test
pushf
shrl
sahf
test
xchg
xor
pop
es
mov
adc
adc
xor
add
arpl
test
xchg
lret
jb
dec
sub
inc
ds
cmp
xchg
loopne
lahf
jecxz
lcall
cmc
sti
dec
mov
jbe
cmp
inc
rorl
lret
inc
adc
xor
stc
jnp
jp
cmp
sub
rcrb
repnz
sbb
add
push
xlat
mov
es
mov
sbb
push
movsl
sub
mov
xchg
in
iret
mov
test
js
fwait
pop
mov
add
jmp
nop
aaa
std
xchg
rclb
inc
insl
jb
rolb
arpl
loope
push
mov
push
movsl
enter
icebp
jle
xchg
fs
lcall
lret
subl
pop
out
xchg
mov
xor
mov
add
or
pop
jp
xlat
mov
push
pop
ret
sti
xchg
je
pop
gs
loope
mov
sbbl
jecxz
data16
cmp
and
mov
pop
jecxz
sbb
xchg
cmp
ret
dec
mov
and
or
push
push
jnp
fdivrl
movsl
sbb
pop
jmp
jbe
ljmp
inc
add
mov
dec
jp
aam
pop
fsubp
mov
enter
push
mov
sarl
fisubs
mov
insb
cmc
pop
imul
inc
xchg
dec
dec
xchg
jl
fwait
rolb
std
mov
insl
mov
stos
rcll
cmc
loope
rorl
inc
dec
int
sub
dec
rcrb
pop
xor
push
cmp
jl
cmc
mov
lock
or
and
xor
in
ja
mov
iret
mov
cwtl
popa
seta
mov
add
mov
jb
and
lret
push
push
jl
pop
xchg
pop
mov
shll
int3
jbe
imul
dec
inc
add
lea
rcll
leave
pop
jns
pushf
aaa
movl
mov
sahf
out
arpl
mov
push
push
test
push
lods
mov
adcl
cmp
imul
push
adc
cmp
aam
push
call
sub
cmp
mov
jl
popw
leave
aad
popa
cwtl
fnstsw
jne
cmp
cld
jl
lea
ror
popf
arpl
ljmp
or
sbb
xor
inc
mov
adc
pop
push
inc
jbe
and
add
vcvtpd2dq
and
int
xchg
test
aad
cltd
aad
idiv
xchg
hlt
xchg
lods
mov
movsb
fisttpll
in
sbb
lea
out
cmp
add
daa
lret
in
addb
adc
push
mov
lds
xchg
jb
or
jnp
pop
testb
and
mov
or
mov
rorb
sbb
insl
stos
test
fwait
je
testl
cli
pushf
mov
lds
mov
sub
dec
pushf
out
movsl
lock
sahf
insl
leave
jl
push
test
pusha
lods
adc
or
outsb
mov
adc
sub
sub
lea
pop
dec
movsb
mov
mov
push
xchg
adc
iret
fwait
clc
or
ret
in
pushl
les
or
cmp
mov
imul
out
push
test
lcall
addb
xor
divb
push
test
jbe
cmpsl
or
adc
pop
icebp
lods
sbb
push
and
adc
add
sbb
xor
cmp
repz
ljmp
xchg
push
mov
rcrl
fsubs
pop
popl
aad
push
jne
imull
fisubs
mov
xchg
out
add
fstl
adc
cmpsb
jb
jle
popa
repnz
adc
dec
jecxz
or
xchg
movsl
sbb
mov
jbe
jl
sub
movups
lea
or
rcll
or
push
fldenv
scas
pop
ja
mov
cmpsb
mov
ret
lahf
fldcw
sbb
mov
stc
insb
mov
ds
clc
das
arpl
inc
cltd
js
rclb
pop
inc
mov
jne
in
loopne
rorl
dec
cmc
adc
mov
push
mov
sub
or
nop
lret
cmp
mov
popf
push
or
inc
pop
sub
jnp
mov
push
inc
lahf
popa
sbb
push
xchg
idiv
in
enter
aam
or
in
jne
in
pop
in
mov
lods
pop
shr
sbb
push
cli
xor
add
fmull
hlt
mov
mov
scas
mov
jbe
mov
add
stc
push
fisttpl
divl
xchg
stos
sub
dec
xlat
cwtl
loop
cmp
les
test
xchg
inc
dec
cmp
ljmp
aaa
xlat
or
loopne
cs
or
pop
loop,pt
cmp
cmp
in
sub
or
fldcw
jp
push
or
inc
adc
sub
sbb
sbb
xor
jle
es
sbb
nop
adc
push
test
shrl
clc
cmp
ret
repnz
cli
addr16
dec
or
decb
test
mov
xchg
adc
pusha
xor
jle
or
ret
daa
les
sbb
flds
adc
cmp
push
and
push
mov
push
jmp
out
cmp
cmc
xor
xchg
xchg
push
insl
jns
dec
movaps
fstp
inc
xor
pmulhuw
lods
cmp
cli
cmpsl
movsb
jge
push
jmp
jecxz
mov
sarl
cmp
cmpsl
mov
cltd
inc
into
decl
jae
pop
inc
movsb
outsl
push
int
test
sub
dec
push
xor
jge
add
sbb
lods
add
je
call
int
jo
arpl
lods
negl
loope
scas
mov
pop
shr
pop
movsb
mov
clc
out
insl
push
lock
sub
int3
xlat
cmp
sub
jp
imul
dec
test
mov
mov
lcall
sbb
push
subb
xchg
cli
sub
and
cmp
lods
mov
lea
loope
addr16
sub
test
cmpsb
call
push
ja
mov
inc
or
dec
in
mov
add
mov
ficompl
das
mov
lock
inc
mov
lods
outsb
sub
pop
dec
cwtl
push
mov
clc
and
pop
pushf
sarb
jb
xchg
jno
mov
sbb
imul
xor
jb
add
jae
adc
notl
cmpsb
ljmp
imul
insl
mov
add
dec
lret
jl
mov
sbb
adc
sti
icebp
pusha
lret
scas
fdiv
xor
call
aas
icebp
jns
scas
dec
aad
dec
or
and
sahf
jb
jp
icebp
test
dec
das
push
gs
mov
sbb
fldl
lret
dec
lods
out
ret
and
movl
fdivl
push
pop
mov
loopne
dec
xchg
mov
shlb
ss
push
pop
cwtl
data16
jecxz
pushf
cmc
mov
lahf
scas
sub
mov
adc
dec
fcmovb
dec
xor
sahf
ds
mov
jne
and
and
dec
mov
repz
pop
inc
dec
mov
pop
jbe
dec
jnp
repnz
push
aaa
xor
jecxz
push
jge
in
call
and
cwtl
push
jl
ret
push
lock
mov
test
aad
ffree
mov
mov
es
inc
mov
popf
jae
rolb
in
pop
ja
fwait
push
rolb
xor
pop
inc
mov
enter
sbbb
inc
xchg
sub
insl
add
jl
mov
mov
pop
inc
inc
mov
imul
insl
xchg
xchg
daa
sbb
hlt
imul
flds
loopne
inc
addr16
lea
aaa
xor
pop
jg
movsb
divl
pop
subl
test
aas
push
mov
pop
lds
js
sub
rcll
mov
popa
jne
jo
xlat
xchg
aas
sub
pop
push
inc
inc
pop
fcmovnu
lock
push
jae
pop
add
lcall
push
dec
add
jno
cmp
bound
jg
fsubrs
xchg
jl
cmp
ud0
mov
gs
enter
jae
push
imul
push
out
jecxz
mov
faddl
out
imul
adc
fldcw
daa
test
mov
sti
mov
or
out
xchg
inc
mov
lds
mov
orb
mov
pop
sub
mov
jmp
add
sbb
aam
jmp
mov
mov
lds
mov
lock
fildl
ds
mov
fdivrs
repnz
nop
sahf
mov
jno
fdivrl
pushf
or
fstpt
rcrl
mov
in
xchg
pop
pop
insl
gs
out
push
bound
mov
leave
test
or
cltd
lock
jmp
repnz
pop
xchg
loope
dec
inc
mov
sub
mov
xor
bnd
mov
cs
pop
and
adc
ljmp
jge
sub
stos
je
shlb
inc
pushf
loope
xor
pop
xchg
mov
inc
push
in
mov
push
outsl
ret
iret
fs
push
mov
icebp
je
sbb
push
jecxz
pushf
dec
repnz
pop
sbb
js
mov
hlt
xchg
jecxz
mov
sbb
nop
addr16
sarb
jp
lret
add
lea
out
std
scas
dec
jnp
aam
adc
or
test
xchg
hlt
xchg
mull
inc
imul
mov
nop
rcr
scas
cmpsl
inc
jp
inc
dec
call
lods
push
sub
insl
test
sbb
int
or
adc
cmpsb
movsl
jno
fmuls
push
shrb
and
movsl
hlt
mov
insl
mov
cwtl
mov
les
mov
repnz
xor
int
push
lock
cmp
xchg
fwait
sbb
xchg
imul
jbe
pop
es
dec
pop
in
push
scas
repnz
jp
ficoms
fsubs
sbb
sbb
or
shll
jno
test
ret
inc
push
push
std
or
pop
pop
jmp
test
inc
and
imul
adc
adc
jns
cmp
rcll
addr16
lcall
out
ss
imul
sbb
inc
rorb
xor
adc
add
ret
sub
xchg
cmp
movsb
data16
sub
cmp
mov
add
mov
fstpl
rclb
adc
and
pop
and
sbb
ljmp
fmuls
sahf
inc
std
outsb
jge
scas
mov
mov
std
nop
sbb
push
xor
add
jmp
dec
daa
mov
sub
les
mov
xor
popa
adc
jbe
ret
xor
and
dec
repz
pop
adc
dec
mov
dec
jge
daa
jmp
leave
jl
push
mov
xchg
ss
addr16
adc
and
mov
push
lds
bound
mov
xor
scas
roll
xchg
sbb
cmpsl
sti
xorb
mov
pop
movsl
ja
mov
stc
add
pop
dec
mov
jns
into
inc
adc
int3
scas
fnsave
pop
into
sahf
sbb
loope
dec
xchg
ja
jns
sub
cli
inc
out
push
inc
xor
and
push
mov
xchg
cltd
push
popf
loop
repnz
pop
jge
jb
iret
jecxz
ret
popf
xchg
pusha
lods
pop
xor
add
jecxz
cmc
mov
test
mov
pop
ja
xor
push
aaa
mov
sub
dec
in
daa
xlat
xor
push
cmp
inc
adc
std
xchg
cmp
test
mov
pop
jb
cmpsb
adc
rol
and
cltd
mov
addr16
inc
cs
ljmp
add
pop
add
das
lcall
cltd
lret
push
scas
dec
cmpsb
fwait
mov
adc
sub
push
add
and
mov
imul
mov
pop
cmp
loop
xor
lret
idivb
sub
xchg
xor
push
roll
dec
inc
enter
xchg
jae
inc
or
pushf
pop
popf
xchg
jb
lahf
loop
in
cmpsb
ret
enterw
or
jae
mov
shlb
arpl
cmp
mov
iret
aas
lock
pop
mov
jae
std
fstpt
out
pushf
xchg
cmp
pop
push
adc
cmp
lock
lods
adc
cmp
in
insl
xchg
dec
test
gs
sbb
push
push
fldenv
sbb
out
shrb
adc
fisubl
xor
or
xor
push
adc
and
add
sti
outsl
call
push
push
fnsave
xchg
xor
ja
inc
adc
mov
dec
xchg
and
cmp
add
ja
jecxz
mov
scas
mov
mov
pop
mov
push
adc
or
xchg
repnz
xchg
pushw
test
in
mov
pop
les
lahf
push
js
xlat
mov
cmc
bound
and
push
cmp
lret
or
test
mov
outsb
sbb
shrb
xchg
pop
lods
pop
adc
lret
fcoml
or
stos
jb
lods
les
pop
push
mov
dec
add
cs
imul
mov
inc
rol
leave
cmpsl
jne
mov
xchg
jmp
jb
aaa
cld
sahf
lret
icebp
pop
jl
sahf
cs
mov
lods
test
jmp
inc
mov
addl
lods
ja
popa
dec
add
cmp
and
dec
inc
pop
nop
mov
or
nop
dec
push
or
fldl
ljmp
out
lock
adc
xor
movsb
aaa
dec
hlt
xor
clc
repz
ljmp
aas
xor
and
inc
shr
sbb
mov
mov
sub
xor
pop
cmpb
jae
cmp
mov
lahf
cltd
mov
dec
notl
sbb
and
xor
mov
fsts
mov
pusha
shrl
ret
add
mov
enter
xchg
sub
push
add
in
push
cmp
shll
mov
push
adc
xor
fistl
xchg
mov
cmpsb
jmp
addr16
adcb
out
xchg
gs
mov
sbb
fidivrs
cmp
pop
stos
lods
mov
mov
push
sbbl
mov
xor
nop
lret
mov
dec
xor
mov
add
daa
sub
cmpsb
fisttps
out
jns
punpckhwd
cmp
mov
fdivl
out
into
cmp
xchg
mov
std
xor
sbb
jl
ficoml
stos
cli
adc
ds
jbe
movsl
xor
xor
jle
xor
mov
push
stc
inc
aam
mov
add
add
out
add
xchg
mov
pop
fisubl
pop
dec
repz
test
or
mov
inc
repz
loopne
or
adc
fsubrs
out
and
int3
dec
or
dec
push
test
mov
sbb
jno
fwait
ljmp
es
test
push
out
aam
lret
mov
jl
divl
fdivs
dec
push
aas
and
mov
push
jl
jnp
mov
fistl
ja
mov
mov
movsl
sahf
jmp
or
clc
jmp
cmp
sbb
push
ds
add
sarl
and
fisttps
test
mov
in
xor
inc
pushl
adc
cmp
jne
leave
popf
dec
mov
mov
jns
loope
gs
xchg
jae
imul
imulb
xchg
dec
xor
xor
mov
mov
imul
sub
mov
xchg
mov
int
jecxz
and
dec
popa
push
sub
mov
cmp
inc
icebp
inc
add
jl
xchg
leave
xor
sub
pop
mov
in
cmp
push
ljmp
inc
in
push
mov
mov
test
push
pop
test
daa
xchg
ja
jp
xorb
push
lds
fnstcw
into
cmpsb
shrl
sar
pop
cmpsl
and
cmp
movsl
test
sti
stc
scas
or
bound
xor
roll
test
dec
cmpsl
cltd
test
push
test
lods
xchg
mov
cmpsb
or
and
in
pop
bnd
ret
stos
adc
dec
mov
mov
test
ds
xor
test
imul
mov
cmp
pop
out
mov
push
rorb
in
imul
push
pop
adcb
dec
cmc
scas
gs
inc
inc
movzbl
pop
adc
cmpsb
cmc
or
aas
push
add
das
fistl
setnp
pop
test
fwait
mov
adc
mov
lret
nop
mov
out
inc
inc
fimuls
cmp
sbb
imull
out
cltd
xchg
loop
add
pop
and
subb
ljmp
cli
sbb
cmp
pusha
cmp
sub
or
popl
jbe
push
mov
xorl
out
and
fldt
fwait
xlat
jns
sbb
ljmp
mov
aam
lock
jg
addr16
arpl
xchg
push
in
test
cmc
mov
iret
jmp
scas
xor
rol
xor
and
pop
adc
cmp
imul
xlat
outsb
inc
insb
in
mov
mov
xchg
popf
jnp
ja
sub
pop
push
push
and
jne
mov
int3
out
jg
and
stc
or
or
sub
ljmp
mov
pusha
mov
jno
stos
out
outsb
into
leave
dec
aam
cmpsl
aas
adc
add
popa
mov
sar
jbe
repnz
add
xchg
xchg
rcll
xchg
inc
mov
sbb
loopne
into
leave
jb
cmp
sarb
xchg
add
inc
test
mov
filds
mov
pop
and
cmpsb
xor
aam
cmpsb
nop
enter
lahf
jge
ja
mov
cmpsl
mov
xchg
sbb
incl
mov
xor
cmp
loope
jmp
adc
and
jg
adc
xchg
dec
push
or
psadbw
xchg
mov
daa
call
clc
inc
dec
sahf
adc
pusha
add
mov
add
adcl
cli
and
mov
and
cmp
add
xchg
movsb
ss
fsubrs
in
xor
and
ss
xchg
pop
imul
lcall
sahf
sbb
xchg
pop
data16
or
jle
mov
insl
mov
pop
movsb
loopne
and
jo
call
ds
cmp
aas
leave
jle
addr16
xchg
incl
fbld
xor
mov
mov
icebp
nop
pop
ret
cmc
leave
daa
cmpsb
popf
hlt
pop
ret
je
pop
rorl
rcrb
cmp
div
or
mov
imul
and
jnp
iret
ret
cmp
inc
jbe
ss
adc
push
ss
hlt
lcall
xor
sbb
add
mov
and
sub
iret
es
std
push
out
test
rol
int3
add
pusha
dec
mov
jb
cmc
sub
cmp
movsb
popa
xchg
movsl
rolb
push
xchg
bound
cmpsb
and
test
mov
hlt
mov
push
ret
push
pusha
ret
and
or
cli
sarl
fs
cmp
cmpsl
push
dec
sbb
test
filds
dec
jle
dec
mov
out
or
push
fnstenv
jae
pop
xor
pushf
cmp
mov
xor
repz
xchg
adc
lods
insb
mov
fldenv
and
test
xchg
inc
adc
mov
add
outsl
push
dec
push
pop
hlt
sahf
push
or
aaa
jmp
push
adc
dec
jno
xor
jbe
out
sbbb
rolb
fstp
mov
mov
dec
shll
je
xchg
push
repnz
mov
cmpsb
loopne
jmp
mov
sbb
sub
push
pop
inc
jns
inc
pop
push
cmp
cmpl
push
repz
dec
cwtl
adc
clc
jns
stos
sti
repnz
fwait
add
call
push
insb
pusha
jbe
aam
fwait
jmp
cmp
mov
jbe
mov
mov
cmp
lods
shr
cmc
sbb
pushf
inc
mov
pop
push
ja,pn
pop
push
or
xchg
and
test
ljmp
inc
outsb
insl
xorl
test
nop
push
int
sub
and
mov
dec
adc
cmp
arpl
jp
mov
ret
xchg
fsubs
cmpl
sahf
orb
pop
in
mov
dec
sub
xchg
and
fcoms
sub
bound
push
rcrl
aaa
dec
push
mov
pop
mov
subl
je
dec
movsl
inc
adc
lods
mov
lret
sub
fs
pusha
and
ror
mov
popf
pop
and
pop
lea
sub
sbb
cmp
mov
jge
lahf
test
adc
ja
jne
push
xorb
cli
mov
jle
push
incl
mov
fists
pop
and
xchg
iret
push
push
int
fisttpll
dec
add
gs
cmp
scas
mov
shll
cs
jge
cli
lds
es
repz
dec
add
pop
and
jno
ja
pop
cmp
mov
add
and
lock
pop
mov
loope
dec
rol
jmp
test
push
sbb
and
push
mov
dec
xchg
pop
pop
shlb
jbe
or
cmpsl
sbb
jmp
iret
cmp
pop
or
popa
das
movb
or
outsl
lods
adc
movsb
shrb
hlt
test
ret
xchg
or
xchg
mov
daa
aad
adc
pushf
sbb
fadd
movsl
jmp
sbb
xor
rcrb
and
xchg
icebp
jmp
cmp
add
roll
cmc
out
cmp
cmc
xchg
sbb
outsl
les
push
fisubrl
in
lea
or
fisttps
out
add
cmpsl
lods
into
notb
sbb
sbb
add
fcoml
inc
mov
sbb
stos
jge
fdivl
add
ret
mov
sub
das
dec
dec
stos
cvtdq2ps
mov
mov
xchg
sahf
icebp
movsl
fs
test
ja
movsl
iret
test
cmp
jae
push
mov
jl
inc
add
fisttps
stos
xchg
and
push
add
and
aaa
or
xchg
imul
mov
inc
repnz
out
mov
sbb
jbe
sbb
je
popf
jno
xor
mov
cmp
mov
in
bound
inc
jnp
xchg
das
insl
xchg
and
les
rorb
cmp
popf
mov
xchg
inc
xlat
cli
xchg
mov
sub
cmc
mov
jne
push
mov
xor
popa
cmp
inc
add
lahf
inc
xchg
inc
dec
pinsrw
mov
out
xchg
icebp
jp
rcrl
dec
test
sub
xchg
rolb
ljmp
inc
mov
in
sbb
insl
jbe
sbb
and
into
mov
daa
pop
inc
pop
add
xor
xchg
mov
push
inc
stos
push
jge
pop
cli
and
push
jnp
loope
sbb
movsb
sarb
into
adc
mov
dec
les
cli
mov
movsb
mov
jle
insb
inc
xchg
pop
movsl
sub
iret
inc
sarl
popf
test
and
xchg
je
add
pushf
xor
push
push
out
loope
testb
dec
mov
mov
xchg
cmpsl
lret
push
or
ficoms
cltd
nop
lret
int
sbb
pop
daa
adcl
sub
xchg
dec
adc
cli
fwait
cmp
adc
xchg
mov
insb
pop
fwait
push
jmp
jmp
inc
call
hlt
fcmovu
adc
sbb
idivb
mov
sub
jge
adc
lods
mov
mov
jge
jl
or
mov
shll
jno
std
out
out
sub
sbb
cmovae
daa
in
rclb
aas
test
mov
bound
lods
es
les
xchg
jecxz
scas
js
push
enter
push
js
mov
sub
jne
mov
loopne
sub
mov
fidivs
mov
ss
jae
aaa
lcall
adc
mov
jb
jp
fisttps
inc
cli
jne
pop
xlat
push
and
add
inc
fwait
rcr
pop
jl
subb
loopne
jg
loopne
xchg
xchg
mov
hlt
in
jo
mov
push
pushf
pop
push
pop
imul
imul
andb
cmp
xchg
testb
ret
sti
jg
adc
out
and
in
stos
test
and
stos
scas
push
fcmovnb
cltd
xchg
sub
jle
aas
sbb
aas
outsb
daa
je
or
cli
push
jp
mov
sbb
rol
aad
sub
dec
inc
adc
push
das
popf
ret
push
add
arpl
xor
shll
les
popa
popf
loope
jbe
aas
mov
std
xlat
adc
or
movsl
js
mov
ret
mov
arpl
mov
mov
dec
rol
add
lahf
aam
clc
in
add
das
repz
fdivs
dec
lods
jg
push
adc
mov
fcomps
mov
dec
sti
cwtl
test
xor
mov
dec
inc
or
sub
lret
or
popf
xor
push
data16
ret
pop
dec
into
shr
or
push
sub
repz
scas
xchg
sub
jne
pop
inc
ss
mov
fstp
dec
sbb
cld
mov
xchg
xor
mov
xchg
xor
pop
ret
imul
mov
bound
into
stos
jne
les
sub
andl
inc
loop
dec
orb
std
pop
xchg
arpl
inc
in
fstpl
sti
or
call
les
push
mov
inc
lret
ficomps
into
mov
and
and
jge
xlat
hlt
mov
mov
stos
in
add
shl
xor
outsl
js
jb
cld
fistpll
ret
mov
daa
lret
rep
enter
aad
mov
test
xchg
dec
rcrl
push
lret
jl
out
mov
mov
addr16
dec
imul
faddl
sub
out
sti
xor
cwtl
adc
pop
hlt
cmpsb
sbb
adc
pop
inc
dec
pusha
out
mov
jp
push
in
cmp
adc
mov
daa
aaa
inc
push
dec
cmp
mov
into
mov
mov
loop
mov
call
clc
lods
hlt
bound
jae
mov
insb
or
push
pop
push
jmp
sahf
jb
rcr
xlat
xchg
int
fnstenv
pop
outsl
pmaddwd
or
outsl
out
out
mov
push
push
pushf
jns
jne
bound
push
popa
jge
push
xor
ljmp
push
popf
and
mov
mov
pop
pop
gs
jl
popa
sub
cld
rol
loop
jge
sahf
rcrl
pop
mov
hlt
fstp
aaa
and
mov
loopne
inc
es
and
mov
imul
pusha
mov
mov
stos
mov
icebp
and
sub
rcll
mov
addl
mov
adc
push
out
mov
vmread
lods
push
mov
repz
sbb
outsb
cmp
inc
push
jle
inc
notl
loope
and
adc
adc
ss
mov
dec
push
or
hlt
shl
sub
jecxz
aam
loopne
out
sarl
sub
jle
js
pushf
popa
insl
cmp
xor
adc
and
xchg
andb
adc
jns
and
pop
loope
int
lock
loope
cmp
cltd
test
add
dec
fucomi
mov
mov
out
pop
repz
dec
push
mov
push
lret
and
andl
mov
aaa
fidivrl
mov
test
orb
cmp
arpl
movsb
cmp
inc
pop
aas
cmp
scas
enter
ljmp
stos
jns
xchg
push
jno
out
shlb
outsb
shlb
fadds
data16
mov
mov
fsubs
ret
xor
fwait
lock
mov
sbb
xchg
pop
sti
inc
lret
clc
mov
fsubrs
adc
js
loop
nop
mov
sahf
call
inc
cmp
lea
mov
fstpl
ja
or
push
shlb
shl
js
pop
mov
std
in
arpl
ficoms
daa
mov
into
xchg
sub
sub
loope
stos
and
out
lcall
add
fiaddl
and
sbb
dec
sbb
cld
fs
jae
sbb
stos
or
sbb
repz
add
lods
lret
sbb
dec
cmp
loope
lret
fnsave
mov
push
sub
sbb
and
adc
adcb
into
jecxz
sbb
jle
in
mov
arpl
mov
jnp
daa
sbb
jns
inc
add
cld
mov
pop
jb
scas
add
xchg
ret
mov
in
inc
dec
movsl
mov
pop
data16
faddl
es
fucomip
dec
and
fidivs
xor
cmc
das
xchg
aam
outsb
mov
sbb
rcr
aam
sbb
cmc
stc
movsb
loopne
popf
mov
int
dec
jne,pt
lret
and
cs
xchg
pop
rcl
push
rclb
in
rolb
sbb
insl
insb
sar
sarb
stc
in
insl
or
outsl
sub
fwait
add
xor
ds
in
mov
out
test
cmpsb
xlat
lock
stos
and
into
sub
xchg
rolb
aaa
xchg
test
mov
dec
mov
jb
xchg
jmp
cmp
fsubs
jmp
lods
and
xor
je
adc
lods
imul
mov
jne
inc
fdivl
dec
jge
lods
sub
imul
enter
insb
jb
jno
data16
xor
and
stos
cmpl
out
test
push
jl
jle
ds
jno
and
gs
jno
lret
sbb
out
cmp
stc
outsb
addr16
ja
dec
in
pusha
daa
pop
js
loopne
imul
jbe
imul
sti
jbe
xchg
xorl
mov
bound
rclb
loope
out
mov
mov
shlb
adc
aas
mov
test
pop
add
repnz
xchg
and
cld
inc
dec
jl
adc
pop
cmp
or
pop
inc
push
xlat
xor
dec
cwtl
push
dec
scas
xchg
or
hlt
and
sti
lea
jne
mov
into
adc
adc
push
mov
mov
nop
lock
fwait
inc
divps
dec
push
lcall
vcmpps
dec
jo
mov
cmp
mov
sarl
push
and
mov
repz
pusha
daa
push
adc
mov
jns
inc
mov
out
gs
mov
jmp
mov
mov
in
and
or
mov
je
mov
cltd
jo
lock
cli
pop
add
adc
lock
cs
add
int3
cltd
cmp
je
xor
dec
pushf
aam
in
sub
aam
into
sahf
jo
adc
out
add
xor
and
into
leave
pop
or
sbbb
movsl
nop
adc
sub
movsb
adc
aad
adc
in
imul
inc
xchg
mov
in
and
daa
sub
leave
pushf
mov
cmpsl
adc
stos
push
xor
or
jns
out
loopne
aas
mov
or
mov
mov
sbb
inc
jge
mov
cmc
adc
xchg
je
nop
ljmp
push
add
call
clc
mov
jg
xorb
lea
or
movsb
push
xchg
lods
xchg
inc
mov
mov
mov
xchg
fxch
mov
jl
lret
mov
pop
push
pop
fstpl
pusha
mov
cwtl
mov
pusha
lcall
mov
aam
rcll
lret
xchg
pop
pop
sbb
mov
push
hlt
rclb
insb
lods
shrb
jae
cmp
xor
mov
push
sub
dec
or
ja
jge
mov
test
push
and
dec
inc
fisttpl
sbb
scas
aad
add
push
nop
leave
imul
push
fstl
leave
sbb
or
inc
or
rorl
inc
push
shrl
push
fsubs
bound
mov
or
jno
std
rcll
push
xor
dec
mov
pop
mov
mov
gs
ret
sub
test
pop
mov
push
daa
xchg
pop
movsl
insb
bound
pop
into
lret
sbb
pop
lock
rcrb
xchg
jp
cs
hlt
inc
cmp
sarb
jbe
and
sti
sub
xchg
push
out
lcall
pushf
pop
in
pop
sbb
inc
scas
loope
jne
aas
rcll
push
push
sbb
movsb
inc
or
push
lods
rcrb
sub
and
mov
jne
fcmovu
mov
das
xchg
shrb
out
shll
mov
cmpsl
push
outsl
sub
push
jno
pop
cmpsb
cmpsl
je
jae
insl
pop
adcl
rcll
test
and
pop
sub
popa
xchg
push
aas
sbbb
cld
mov
rcrb
jmp
dec
popf
inc
cmp
test
pop
add
pusha
stc
iret
sub
cld
or
mov
icebp
adc
inc
jge
mov
jg
cli
enter
xchg
and
cmp
popf
in
mov
insb
je
add
fstl
push
ja
fnstsw
adc
jae
add
jecxz
xor
cmp
lret
arpl
mov
das
je
pop
test
jmp
add
cmp
xchg
fsubl
call
xchg
cmp
push
mov
sub
pop
repnz
pushf
stos
insb
fwait
pop
in
jns
imul
dec
adc
push
add
je
or
icebp
push
insb
jbe
push
jl
ficoms
mov
mov
es
fsubp
add
push
or
add
mov
xchg
add
mov
and
std
jne
in
mov
adc
sahf
or
stc
lock
xor
xor
jmp
jge,pn
inc
mov
cmp
pop
dec
add
das
and
cmpsb
sub
xchg
call
lret
mov
sbb
mov
arpl
push
or
rolb
repz
sbb
adc
js
pminsw
pcmpeqb
cmp
ret
fmull
sub
mov
push
test
sub
insl
lret
aam
mov
pop
mov
lock
in
cmp
push
popf
jecxz
in
add
pop
xchg
leave
pop
and
adc
lds
pop
das
lret
pop
addr16
mov
in
fistpl
shlb
jb
jecxz
lods
jns
jl
adc
lea
lcall
inc
xchg
fsubrl
push
test
ja
in
xor
xor
hlt
dec
pop
adc
xor
xor
sbb
invd
cs
test
push
call
and
adc
cmp
lods
rorb
cmp
inc
mov
xchg
scas
and
enter
inc
roll
movsl
movsb
enter
shlb
cmp
mov
push
jmp
aas
mov
rcrl
xor
dec
pusha
dec
mov
push
sbb
push
cmp
cmp
sub
inc
xor
or
int
lahf
mulb
movsb
pop
jl
sub
enter
lret
push
xor
lret
test
pop
xchg
pop
and
movsb
mov
loopne
imul
das
sbbl
outsb
xchg
lock
push
mov
repnz
jns
ret
pushf
aad
sub
int
in
test
pop
inc
fwait
jbe
push
mov
mov
mov
or
sbb
dec
cmp
push
mov
imul
in
mov
popa
cmp
xchg
push
lea
ja
pop
fiadds
lods
cmpb
inc
jge
xor
add
lods
xchg
stos
jp
nop
fisttpl
push
fisubrs
outsl
sub
xor
fwait
push
push
imul
jecxz
push
inc
xchg
popa
mov
aas
dec
jle
cmp
mov
dec
sahf
pop
pop
mov
pop
or
jl
fdivrs
pop
sti
outsb
sub
je
jg
mov
imul
out
lcall
jbe
test
add
mov
andb
add
or
or
inc
scas
outsb
mov
adc
xor
dec
popa
das
and
sahf
pop
mov
cwtl
push
sub
pusha
dec
sub
setns
repnz
adc
mov
out
inc
xor
push
add
jnp
outsl
subl
mov
int
sbb
out
push
scas
scas
lock
and
adc
insl
mov
into
roll
out
cmp
sbb
add
add
push
lock
lret
add
js
leave
sub
pop
xor
mulb
addr16
cmp
xor
jge
push
sbb
jb
fisttps
int
jecxz
mov
int3
ja
repnz
mov
inc
add
or
mov
outsl
xchg
outsl
xchg
push
sub
mov
adc
in
or
enter
aaa
clc
or
lods
loop
push
or
fmuls
inc
inc
push
cmp
aaa
mov
fwait
iret
pop
cmpsb
adc
cmp
push
popf
jecxz
jb
negb
sub
fnstenv
mov
cmp
das
lahf
roll
dec
jb
cmp
inc
pop
movsl
cmp
cmp
xchg
jb
movsl
aad
mov
pop
ret
lahf
cltd
and
mov
mov
subl
fucomi
ds
test
daa
inc
pop
jbe
cmp
data16
mov
pop
filds
push
push
int
aam
cwtl
cmc
ss
cmpb
or
movsl
or
mov
pop
lret
in
addr16
int3
aad
out
mov
int
inc
pminsw
fldcw
inc
add
dec
cmp
fst
and
mov
repz
cli
fistpll
cmp
xchg
add
lret
xor
xor
enter
or
and
jle
sbb
ror
mov
outsb
or
dec
or
push
xlat
test
pop
or
adc
outsb
inc
jl
int3
or
clc
dec
shrl
sub
cs
push
lahf
lret
push
dec
adc
es
pusha
inc
mov
fnstcw
xchg
sub
xchg
retw
xor
stos
xor
fs
shll
mov
jg
mov
addb
mov
sub
xchg
adc
je
outsl
inc
outsl
mov
cmp
and
mov
sbb
call
xor
test
xchg
mov
iret
filds
inc
in
cmovb
test
push
out
stc
dec
dec
mov
adc
mov
call
jg
pop
rolb
scas
iret
jge
xchg
cs
mov
inc
aad
cwtl
add
jl
dec
nop
inc
xchg
mov
sub
jmp
test
inc
mov
mov
pop
push
pusha
mov
mov
sub
les
inc
or
pop
jns
cmp
lret
mov
dec
jo
jo
sub
adc
movsl
int
xchg
push
mov
mov
dec
ss
sbb
add
es
ljmp
cmp
fldcw
add
xchg
push
adc
lods
cmp
sbb
ss
out
or
fimull
out
mov
inc
out
icebp
iret
sbbb
adc
test
mov
adcb
mov
sub
insl
inc
xchg
jge
mov
mov
mov
ret
rcrb
fsubs
or
imul
cmc
mov
movsl
xchg
das
sbb
in
and
push
aad
xlat
shl
adc
int3
add
push
mov
loop
push
mov
cmpsb
mov
mov
or
out
pop
outsb
in
into
test
mov
rol
lret
dec
push
and
bts
xor
jl
sbb
iret
repz
adc
arpl
mov
std
xor
adc
mov
stos
js
dec
stc
adc
movsl
stc
into
es
xor
das
push
dec
inc
test
inc
aad
inc
clc
mov
pop
pop
ds
popa
xor
sub
aad
or
es
pushf
ja
xor
mov
sti
mov
sbb
push
jnp
adc
gs
imul
rol
loope
imul
shlb
in
inc
in
or
xchg
dec
pop
push
imul
push
sub
icebp
in
movsb
cltd
mov
dec
mov
aam
cwtl
addr16
mov
mov
pop
and
cmp
ret
cld
jl
adc
loopne
cmp
popf
ficoms
clc
rolb
ficoms
xorl
mov
shrb
int3
xor
cltd
fstps
out
cwtl
test
adc
and
and
push
sbb
fimuls
or
in
ljmp
mov
loop
aas
ret
jo
nop
scas
jae
lcall
call
mov
inc
and
sub
xlat
ret
mov
and
xlat
mov
fsubr
int3
rorl
ret
aaa
js
jno
add
mov
test
xchg
inc
int
xchg
das
test
adc
cmpsl
inc
loope
ss
jno
iret
jb
out
mov
sbb
inc
mov
aas
das
repnz
adc
cmp
ss
lds
jg
mov
lds
jl
jmp
lea
xorb
aam
mov
dec
jae
xchg
mov
gs
or
fnstsw
xchg
push
aam
aam
int3
pop
pop
movsb
xor
lret
subb
sub
xlat
lret
adc
sbb
leave
sarl
xchg
mov
loopne
std
test
pop
leave
outsl
cmp
mov
fmuls
mov
jb
sub
mov
add
xor
ds
fmull
push
popa
add
cltd
inc
leave
je
sub
shll
mov
mov
mov
aaa
and
fs
les
aaa
jmp
mov
jns
imul
xchg
adc
sbb
jmp
jge
loop
adc
icebp
adc
orl
cwtl
popf
adc
adc
push
pop
jg
mov
mov
adc
add
and
adc
addr16
add
rorl
adc
scas
adc
add
fwait
ret
push
testl
xlat
das
add
push
nop
or
xchg
nop
cmp
out
push
xlat
or
jns
dec
test
cmp
mov
inc
adc
jg
push
push
lea
inc
out
jns
jecxz
lods
xor
xchg
mov
sar
outsb
divb
dec
mov
xor
in
and
jp
pop
cmp
jns
loop
pusha
ja
mov
call
and
test
fiaddl
ja
imul
dec
jle
aas
push
xlat
cmp
movsl
sbb
xchg
inc
and
into
lret
out
aaa
cmp
xchg
fnstsw
cmc
lcall
and
or
xchg
adc
sbb
push
int
xchg
insb
dec
sub
add
mov
or
mov
pop
push
js
out
pop
mov
iret
cltd
fidivrl
repnz
cmp
sti
or
mov
sbb
sbb
xlat
mov
add
jl
scas
mov
xchg
js
cmp
nop
adc
dec
mov
cmp
icebp
pop
in
dec
inc
imul
jmp
out
pop
xlat
dec
mov
int3
out
pop
add
adc
ret
mov
and
sub
loope
lea
movsb
xchg
push
pushf
jne
fbld
sti
mov
sbb
imul
sub
mov
and
xor
jnp,pn
insl
inc
adc
jo
ljmp
movsl
mov
sbb
orps
xchg
or
adc
cmp
or
ss
outsl
adc
cmp
push
inc
mov
cld
adc
sbb
push
js
adc
inc
xor
xchg
pop
mov
push
xchg
and
jmp
inc
mov
out
push
dec
pop
mov
xchg
mov
cmp
jp
jae
jbe
jno
cmc
mov
insl
push
ror
js
loope
ret
decl
push
fsubs
jecxz
inc
push
fiadds
std
out
jecxz
sti
mov
js
call
xor
xchg
push
shrb
pop
cmpsl
shlb
inc
clc
mov
push
in
dec
hlt
popf
lcall
das
mov
cmp
pop
mov
aad
out
jge
mov
lcall
loopne
test
add
pop
push
add
inc
mov
jp
xor
add
outsl
lods
hlt
adc
pop
imul
xor
dec
jae
ret
es
leave
clc
jl
jno,pn
mov
shlb
ret
pop
stos
adc
mov
jmp
add
ja
or
enter
and
repz
jle
clc
leave
pop
mov
push
aam
stos
jbe
fscale
jnp
add
pop
mov
sbb
movsb
movsb
jns
test
rolb
or
je
jmp
xor
and
pusha
and
xchg
sub
into
inc
mov
cmp
out
inc
sub
cmp
pop
adc
fwait
xchg
and
test
outsl
test
aaa
pushf
dec
out
lret
addl
aas
lock
dec
cs
cmp
das
adc
insl
add
push
pusha
inc
add
add
loope
imul
dec
data16
push
ja
adc
lds
out
ds
fstpt
outsl
mov
imul
mov
daa
subl
lds
push
cmpsb
and
in
lds
shr
pop
aad
lods
out
int3
lock
mov
enter
fbld
adc
mov
out
dec
outsl
pop
jg
ret
xchg
cwtl
daa
sub
std
xchg
sub
mov
sarb
stc
xchg
xchg
xchg
push
sahf
mov
popa
inc
nop
xchg
fistl
push
sbb
cmpsl
mov
jp
xchg
jp
dec
fwait
lock
nopl
lea
add
jo
test
inc
loop
cmp
cmp
mov
adc
adc
and
ljmp
cltd
jg
cmp
popa
or
pusha
mov
outsl
jne
or
lret
inc
push
int
mov
push
xor
int
in
or
cmc
sbbb
or
out
scas
adc
scas
sbb
xchg
mov
jae
lahf
dec
out
sbb
push
jle
mov
xor
pusha
dec
inc
sbbl
repz
jno
sbb
enter
inc
add
inc
gs
stos
xchg
cmp
sub
popa
int
inc
mov
mov
mov
out
inc
adc
mov
popa
test
dec
clc
ss
mov
insl
lds
aam
out
add
test
inc
fbld
cmp
es
jmp
sahf
mov
lcall
cmp
pop
daa
ret
xchg
inc
and
movsb
or
inc
jo
push
adc
pop
sar
insl
or
dec
add
pop
mov
popl
xchg
pop
sub
mov
into
jne
pop
push
clc
cld
addr16
outsb
sbb
cld
test
push
rclb
shlb
xchg
jge
pushf
movd
add
mov
mov
dec
xlat
sahf
jb
push
inc
rorb
mov
mov
ret
int
push
idiv
mov
cs
mov
negl
les
fs
push
sbb
inc
jno
dec
sbb
push
repnz
fistpll
xchg
xchg
push
sub
cmpsl
push
push
cmpsb
out
push
mov
nop
es
shl
cmpsl
insl
imul
prefetcht1
and
shlb
xor
imul
fcmovu
or
je
inc
std
lock
jae
xchg
push
sbb
mov
dec
icebp
sub
pop
jmp
repz
fildll
xor
fdiv
int3
aad
rol
jecxz
mov
rolb
test
ljmp
lods
mov
ret
fidivl
lea
xchg
xchg
xchg
dec
pop
jge
sbb
test
mov
mov
sti
add
stc
cmp
or
lock
test
xor
mov
fists
xchg
test
xchg
ror
push
jle
and
insl
xor
sub
insl
mov
stos
pop
in
inc
mov
xchg
addr16
pop
adcl
cs
adc
push
leave
clc
dec
pusha
sbb
movb
repnz
sbbl
rcrl
cmp
andl
adc
aaa
inc
dec
call
outsl
lret
xchg
bound
jbe
and
in
in
xor
fadds
fdivr
jo
push
je
mov
fs
or
bound
fidivrl
or
data16
dec
cli
mov
cmp
dec
fistpl
data16
lods
sub
sub
lock
loopne
sbb
fnstsw
std
leave
push
xchg
and
pop
insl
adc
clc
xchg
adc
xor
jae
push
sbb
and
test
jle
mov
mov
xorl
or
out
aam
sbbb
push
lahf
mov
leave
loopne
pop
xchg
mov
sbb
and
stos
xchg
gs
mov
nop
movsb
add
push
cld
jl
sub
dec
jno
sub
test
scas
ljmp
test
pop
mov
mov
or
cmc
pop
enter
xlat
in
flds
or
aaa
aad
stc
shlb
sbb
mov
data16
data16
mov
mov
xchg
dec
pop
daa
and
out
adc
bound
jo
push
shll
sub
sbb
out
dec
aad
mov
pop
scas
iret
test
loopne
test
mov
lahf
mov
popa
or
movsb
sub
xor
push
pminub
sbb
xorb
or
je
pusha
mov
popf
sahf
fs
loope
push
fnsave
gs
sub
or
imul
cmp
arpl
leave
or
out
clc
repnz
fadds
cs
inc
rcr
xchg
ret
dec
dec
mov
mov
xchg
cmp
pop
stos
shlb
push
adc
fsub
push
js
mov
js
sub
push
mov
fcoms
test
shrl
out
dec
jl
testl
sbb
push
push
inc
negb
inc
jmp
fndisi(8087
in
xor
mov
jae
jb
lea
jge
or
adcb
leave
arpl
jno
xor
loop
fistpl
pop
fisttpll
jl
lods
pop
outsl
inc
jg
mov
push
lea
mov
sti
sub
push
adc
ret
lea
int
push
xor
xor
push
xchg
mov
or
or
scas
fcomps
push
lcall
stos
jne
inc
daa
cmp
jbe
add
repnz
mov
jle
mov
mov
bound
out
sbb
cltd
icebp
neg
adc
push
test
imulb
and
ss
jle
mov
iret
cmpsl
adc
inc
and
and
xor
loop
fsub
adc
mov
idivl
in
pop
ret
sub
je
out
push
jg
mov
int
xor
mov
and
add
shl
sbb
mov
out
push
mov
jle
popa
mov
pushf
or
xor
in
shr
fmuls
xchg
mov
movsl
sbbb
inc
xor
ret
stc
enter
bound
add
dec
data16
jns
jno
jo
inc
mov
xchg
in
ja
out
mov
xchg
out
push
into
push
int3
pusha
pushf
popa
add
jmp
leave
cmp
jb
test
icebp
test
imul
nop
push
xchg
repnz
jbe
pop
shrl
pop
jnp
bound
pop
rcll
add
out
pop
ljmp
pop
scas
rcll
cli
dec
sbb
pop
xor
mov
sub
or
subb
xchg
mov
fldenv
mov
mov
popa
inc
and
out
inc
aas
add
outsb
pop
dec
dec
inc
mov
enter
dec
xor
fcmovbe
inc
mov
repnz
add
push
xor
sbbb
shlb
fisttps
or
in
xchg
mov
test
push
xchg
adc
out
xor
lds
mov
jmp
scas
mov
mov
mov
inc
push
inc
jge
push
hlt
sub
ds
jecxz
jne
cmp
popf
addr16
lods
adc
iret
testl
inc
iret
push
jbe
sub
aam
stc
adc
and
fidivl
pop
sub
cmp
jnp
inc
pop
fdivrs
out
sahf
adc
inc
or
pop
rcr
cmp
sub
scas
pop
fwait
mov
xor
sti
xchg
xor
out
mov
mov
nop
fwait
nop
mov
cmpsl
fcmove
lret
pusha
daa
das
adc
rorb
jbe
xor
push
outsl
push
not
inc
sub
jmp
sbb
jg
fdivl
xor
mov
outsb
iret
daa
rorl
adc
mov
cmp
add
insl
pop
scas
xchg
aaa
nop
stos
push
mov
adc
test
xchg
cltd
les
scas
dec
addr16
adc
xlat
shll
lds
add
insb
xchg
mov
mov
mov
pop
push
xchg
popf
xchg
cmp
test
and
fwait
add
imul
sbb
sub
pop
cld
shrb
pop
mov
and
and
hlt
jns
sub
ds
movsl
mov
es
icebp
push
aas
dec
fs
insl
sbb
mov
mov
es
je
rcrb
lock
push
mov
add
mov
xorb
ljmp
ret
ret
std
push
inc
subb
and
rorb
in
sub
dec
push
call
dec
mov
not
lock
int
jp
shlb
ds
sub
push
pop
pushf
arpl
and
pop
cmp
icebp
cwtl
pop
sub
jne
fs
repz
imul
fdivrp
hlt
mov
pop
sub
jecxz
xchg
ret
lahf
cwtl
cltd
mov
push
inc
add
shll
pushf
inc
lcall
out
inc
repnz
jecxz
lret
adc
jo
jmp
pop
ret
cwtl
mov
adc
test
lret
addr16
or
inc
cmp
int3
ds
out
out
iret
cmpsb
cs
adcl
cwtl
cmpsb
fwait
movsl
lret
rcll
jno
and
fsubrl
mov
test
popf
testb
xchg
movsb
je
cltd
cmpl
jne
and
mov
hlt
push
mov
mov
stos
addr16
adc
cwtl
in
push
stos
aas
xorb
xor
pop
add
pop
mov
adc
popl
inc
xchg
pushf
je
in
test
loopne
xchg
mulb
stc
mov
push
xchg
cltd
sub
pop
jl
lea
push
inc
lock
inc
movsb
cmpb
rclb
and
cli
jl
or
outsl
test
jns
mov
cmp
push
xor
inc
rcrb
iret
loopne
sti
sarb
cmpsl
dec
ds
push
into
repnz
jbe
ja
xchg
and
cltd
dec
mov
js
addb
test
dec
mov
add
mov
in
pusha
inc
dec
jne
ljmp
add
dec
ds
cmp
pop
lods
flds
ficoms
dec
jns
imul
inc
imul
cmp
sub
sbb
stc
add
inc
ret
xchg
cwtl
dec
mov
mov
inc
xor
out
push
add
jge
out
mov
sbb
bound
jno
jle
or
push
push
rorl
jp
popf
xor
push
mov
testl
outsl
jmp
mov
add
in
cmp
shrd
jb
std
adc
out
fwait
test
clc
divps
push
jo
sub
mov
push
je
pop
sub
sahf
xchg
data16
cltd
out
leave
jbe
xchg
inc
fistpl
mov
xchg
mov
jo
outsb
xor
inc
inc
push
popf
mov
enter
lret
and
cs
lods
outsl
add
cwtl
push
adc
dec
mov
xor
sahf
in
bound
adc
sub
sub
movsl
inc
filds
loopne
fidivl
mov
lcall
sbb
sbb
cmc
xchg
sbb
std
clc
xor
icebp
jb
iret
decl
push
mov
jns
out
int
push
pop
out
dec
lods
pop
add
rorb
push
rcrb
dec
rcll
dec
pop
mov
sub
scas
andl
aas
test
mov
xchg
movsb
xchg
inc
sbb
pusha
xchg
dec
cmp
cmp
out
push
xrelease
add
sub
xor
fnsave
pop
jle
mov
in
mov
std
jle
js
sub
cmp
call
jns
cmp
iret
xchg
mov
pop
add
insb
mov
inc
cmp
test
lock
leave
and
pop
std
sub
jno
or
movq
mov
insl
or
into
mov
xchg
testb
inc
fbstp
cmp
add
push
lret
sub
in
rclb
pop
jbe
xchg
adc
mov
or
mov
adc
cltd
fsubp
js
sub
out
cmpsb
and
cmp
sahf
mov
sbb
mov
inc
xor
fildl
test
sub
imull
rorl
xchg
jecxz
testb
sbb
idiv
sahf
xchg
orb
cmp
aam
rclb
cltd
push
popa
rorb
lret
int
sub
into
rcrl
pop
push
push
jno
xchg
test
mov
shrb
in
jo
cmp
or
cli
leave
fimuls
insb
out
scas
gs
std
lds
lds
pop
inc
aaa
xor
mov
jne
addb
arpl
in
ja
add
dec
mov
stc
int3
outsb
mov
and
call
mov
sbb
dec
hlt
cmp
or
mov
sub
rdmsr
mov
rclb
lods
cmp
push
cmp
scas
daa
pusha
fldl
add
mov
fildl
jno
and
mov
js
sub
iret
pop
clc
pop
cmp
addr16
adc
ljmp
scas
xor
test
mov
xor
jp
scas
xchg
fstpt
lahf
xorb
fstps
fisubl
fadds
das
fldcw
stos
or
into
call
adc
jecxz
movsb
loope
xlat
ret
add
outsl
not
push
arpl
iret
push
dec
inc
fwait
scas
adc
arpl
ret
rcll
data16
gs
dec
lret
shl
cmp
mov
cmc
dec
push
stos
sub
xor
mov
insb
loop
push
test
rclb
pop
jae
mov
sub
add
xor
lock
pop
test
mov
mul
arpl
ds
daa
xchg
out
xchg
test
pop
add
fiadds
int3
mov
jno
cltd
mov
icebp
sbb
iret
jge
cmpsl
movsb
jbe
loopne
mov
jl
jmp
cld
lret
clc
lods
int3
lods
xor
xchg
cmp
int
stos
and
mov
and
inc
out
or
ror
push
ja
and
sub
jp
ret
lock
lret
inc
js
push
cli
sub
loop
or
pop
das
sbb
add
or
jge
mov
and
bound
and
ds
mov
lods
cltd
ret
mov
sub
sub
jg
mov
ret
pusha
or
sbb
jae
mov
insl
mov
pop
push
sti
sbb
mov
pop
xchg
ret
xchg
clc
test
jns
xor
cmc
mov
xchg
dec
and
in
mov
xor
adc
sti
sbb
jge
pop
mov
mov
sbb
xchg
ja
push
hlt
jge
jbe
jae
xchg
insl
js
sbb
add
fcmovb
cs
mov
or
push
movsl
mov
fwait
xchg
inc
add
dec
lock
aas
pop
xchg
movsl
adc
imulb
add
dec
or
dec
xchg
add
jae
cmp
lods
mov
fs
sub
sub
fs
xor
fidivrs
mov
jae
bound
push
shlb
js
je
xchg
mov
xorl
aam
sbb
pop
fs
push
inc
pop
adc
mov
sub
hlt
jl
jp
inc
mov
mov
cld
scas
mov
in
or
fs
into
outsb
aam
mov
jl
ret
pushf
loope
out
mov
stc
bound
cmpsl
pop
lock
out
cmp
inc
mov
int3
mov
and
or
test
lret
pop
loop
sbb
inc
mov
sub
jnp
sub
sarb
loope
ret
jbe
mov
jg
aas
test
sbb
sarl
fidivl
push
loop
shll
scas
shrb
mov
inc
or
cmp
test
lods
mov
mov
sbb
xchg
sbb
jns
sti
cmp
scas
cmp
mul
jge
repnz
xchg
rorl
mov
out
jo
aam
adc
mov
aam
xchg
pop
test
icebp
test
xlat
jbe
and
andl
into
bound
adc
push
xor
jno
add
lahf
xchg
xchg
sarl
push
ja
pop
push
rclb
adc
loop
xchg
xchg
sub
jb
stc
cwtl
sbb
dec
jmp
mov
adc
xchg
lahf
test
roll
push
mov
lahf
repnz
mov
mov
test
push
xor
jae
je
stos
add
mov
jle
sub
inc
xorl
xor
mov
add
or
test
dec
inc
clc
sti
dec
icebp
out
jae
bound
orb
jae
xor
out
dec
xor
test
or
mov
divl
or
icebp
pop
out
aam
cmp
dec
loopne
mov
pop
xchg
xchg
adc
push
cmc
outsb
aad
jg
mov
sbb
and
subl
inc
pop
xchg
sub
fwait
test
outsl
mov
mov
sbbl
mov
mov
jb
xor
xor
in
outsl
cld
or
sbb
cmc
lds
out
inc
pop
ficoml
cwtl
out
jns
imul
cmp
jmp
lods
sbb
cmc
jecxz
pop
sub
cmp
inc
fwait
pusha
xor
inc
leave
imul
sub
push
mov
jb
faddl
ds
push
sbb
shll
add
cmpsb
mov
xchg
popf
out
mov
cmp
mov
cld
mov
aas
jne
ja
orb
adc
loop
lea
push
fnsave
jb
popa
pop
pop
push
jne
fstl
and
icebp
mov
sahf
cwtl
or
mov
pop
cmp
push
cli
repnz
push
pop
popa
clc
popf
call
aaa
sbb
lock
xor
sbb
sub
in
cs
pop
push
or
enter
lahf
and
in
ljmp
jl
int
andl
inc
pop
mov
inc
pop
mov
imul
sahf
cli
xchg
sbb
lock
adc
push
outsl
jmp
inc
repnz
icebp
dec
hlt
xor
mov
mov
cmp
xor
add
into
mov
sub
in
dec
pop
mov
aaa
mov
adc
lret
into
cmp
das
xlat
lock
sbb
aad
cld
bound
fwait
mov
push
inc
fnstenv
add
in
cmp
inc
outsb
popf
and
inc
inc
sti
sti
shll
incb
imul
mov
adc
stos
test
adc
js
cmc
sub
loope
jl
in
jnp
cmp
mov
xor
sub
or
int3
pop
icebp
adc
js
testl
icebp
mov
divb
std
clc
jmp
or
xor
dec
dec
inc
cltd
lods
mov
fmulp
shrl
fisubrs
jno
sbb
or
sbb
lahf
mov
fists
cmpsb
adc
fstl
xor
push
pusha
ja
jb
lods
leave
fcomip
sbb
out
hlt
or
aas
mov
das
dec
mov
cltd
adc
dec
ljmp
out
movsb
adc
pop
scas
mov
fcmovnu
sub
pop
or
int
jo
loopne
nop
test
inc
ljmp
push
or
or
test
xchg
imul
insb
dec
rorl
jl
rcll
addr16
add
cmpsl
frstor
jge
push
cmp
das
and
iret
fs
xor
push
dec
imul
insb
out
mov
mov
cmp
sysexit
mov
pop
mov
int3
jp
cmpsb
or
or
cli
jg
pop
incl
fdivs
sbb
insb
adc
scas
mov
fs
ds
push
adc
in
jns
pop
and
shl
fistpl
jns
fwait
scas
mov
cmp
movsl
mov
dec
pop
aam
dec
mov
xchg
int
dec
stc
xor
pop
shlb
loopne
popf
stos
outsl
dec
inc
mov
and
jb
jge
pop
rcl
leave
jb
jecxz
jae
push
sbb
je
pusha
mov
dec
fs
xchg
add
pop
fdivl
push
inc
or
or
xchg
iret
dec
stos
mov
cltd
sbb
bound
aaa
lods
jne
xchg
movsl
mov
jmp
push
jbe
sbb
xor
push
int
aas
daa
fsubrs
fs
fisubs
mov
jbe
sub
mov
inc
popa
into
js
or
jl
repz
jge
sbb
push
xor
in
mov
mov
push
aad
jo
mov
mov
js
mov
in
in
push
mov
popl
jae
jns
xorb
lret
xchg
and
sub
repz
mov
das
jecxz
mov
insb
fists
pushf
xor
xchg
mov
rcrl
dec
pop
negl
mov
mov
xchg
pop
dec
fwait
pushf
mov
fnstcw
addr16
lea
inc
mov
mov
jns,pn
add
ss
mov
scas
jnp
cmpsb
cwtl
xchg
or
lods
js
adc
fs
mov
nop
int3
pop
repz
push
and
aas
rcrb
inc
adc
jecxz
aaa
movsl
mov
test
dec
adc
xor
idivb
subb
jns
push
jmp
repz
push
cltd
add
loop
dec
sub
or
repnz
push
adc
cmpsb
inc
rorb
inc
cmpsb
je
rclb
mov
dec
pop
fiadds
or
imul
push
xchg
popf
xor
jp
push
mov
iret
push
xlat
pop
jae
ret
fs
mov
xchg
ja
xor
stos
xor
test
cltd
loop
push
add
adc
mov
sub
inc
fmuls
dec
or
mov
pop
lret
mov
lods
xor
jl
pushf
mov
push
and
popf
push
cmp
jmp
bound
ds
sub
movsl
enter
fiadds
fistpll
push
jnp
out
cmp
pusha
jp
jmp
dec
or
js
pusha
scas
adc
sbb
jne
rcll
imul
dec
lcall
inc
sahf
vcvtss2si
test
inc
mul
xchg
data16
mov
push
in
dec
fildll
mov
inc
add
lret
fldenv
xchg
xchg
xor
mov
lret
adc
fwait
adc
imul
lret
testb
mov
xor
sbb
fldl
ret
ror
sub
sub
xchg
dec
ret
imul
fnstsw
mov
idiv
js
daa
jg
add
add
cltd
into
das
int
jmp
aas
test
mov
dec
jg
pop
movsl
ljmp
and
push
mov
add
lcall
pop
adc
mov
dec
bound
pop
pop
pop
cmp
mov
and
std
cmpsl
fxch
sbb
icebp
jmp
shrb
fisttps
xchg
and
jae
dec
mov
in
or
cmpsl
inc
inc
mov
in
xor
xchg
push
lods
push
and
inc
hlt
sti
jg
fmuls
es
ffree
pop
pushf
sbb
ficompl
andl
xchg
pop
loopne
jb
mov
cwtl
repnz
clc
mov
xchg
xchg
loopne
loopne
mov
nop
add
adc
sub
jno
mov
pop
pop
inc
lret
jne
push
shlb
imul
rolb
in
sub
mov
nop
mov
mov
lcall
mov
movb
push
rclb
fmul
add
ja
gs
or
cmp
fldenv
mov
in
jno
sub
clc
xchg
pop
xchg
or
mov
xchg
cmp
pusha
in
sbb
mov
or
loop
repnz
nop
loope
repz
mov
add
mov
dec
stc
xchg
scas
fs
ss
add
lret
sub
addr16
mov
sahf
sub
scas
xor
into
fwait
sub
bound
divb
jle
cmp
rolb
add
mov
mov
inc
int3
jge
daa
mov
mov
and
jne
mov
out
jo
mov
lds
sub
push
imul
movsl
cmp
add
xor
mov
add
mov
xchg
or
sti
mov
ret
xor
sub
sub
sbb
in
test
mov
cltd
adc
gs
push
xchg
pop
sahf
repz
or
inc
out
cmpsl
stc
sti
fdivrs
cmp
insb
adc
lods
and
ret
mov
scas
or
mov
or
and
test
lret
int3
dec
loope
add
addr16
cs
ss
pusha
adc
xchg
pop
mov
test
pusha
mov
mov
into
lcall
inc
shlb
lods
dec
daa
out
pop
mov
push
xchg
and
push
addr16
sbb
sub
inc
pop
xor
xchg
mov
pusha
jo
ret
sti
shll
push
out
cs
andl
ret
icebp
mov
adc
cli
in
add
add
pop
cs
dec
fidivs
jno
xchg
push
shr
jecxz
pop
cmp
mov
or
add
adc
cmpsb
cmc
xchg
mov
lea
aam
jne
in
or
pushf
mov
testl
fimuls
test
mov
lods
jle
clc
push
mov
or
push
fcomps
mov
dec
lcall
pop
lods
mov
mov
je
es
fs
test
sbb
sub
fldcw
sbb
mov
cld
movsb
mov
xchg
lret
xchg
cld
dec
mov
sub
cmpb
add
jle
outsl
inc
sub
mov
into
dec
mov
sbb
fs
les
dec
shl
cmp
in
inc
jo
pop
pop
ret
adc
xchg
insl
pop
cmp
inc
pop
pop
xor
or
loopne
hlt
fnstenv
jp
sub
das
insb
pop
jae
jo
daa
int
lret
cmpsb
mov
and
iret
lods
inc
and
mov
push
or
outsb
outsb
sub
test
stc
in
lock
enter
out
push
jecxz
xchg
mov
je
mov
ds
sub
mov
ds
dec
add
xchg
add
mov
lea
jo
jmp
es
sub
loope
xchg
lret
cmp
mov
jns
xchg
mov
lahf
aas
in
lea
cmp
repnz
mov
stos
cmp
add
xor
mov
ret
cmp
dec
rcll
dec
hlt
inc
rcl
mov
cmc
in
adc
mov
fstps
lret
aaa
dec
or
pop
xor
es
call
addr16
fidivs
cmpsb
shl
mov
sar
xchg
mov
movsb
imul
cltd
cmpsb
and
mov
dec
push
mov
adc
data16
cmpsl
jle
sub
cmpxchg
jae
lahf
call
addr16
mov
dec
inc
or
xor
loope
push
loopne
ss
nop
mov
sbb
repz
fadds
lahf
enter
mov
xor
adc
fldcw
test
pop
mov
xchg
xor
and
pop
scas
punpckldq
or
movsb
nop
enter
test
mov
scas
jp
or
addr16
cmp
insb
add
int
out
out
xor
pop
bound
adc
cs
ss
mov
push
pop
pop
pop
sub
push
inc
mov
cmp
movsb
mov
inc
mov
pop
mov
mov
jg
inc
lret
push
dec
add
mov
xchg
xorl
js
and
jle
lds
inc
pop
cmp
cwtl
mov
xchg
pusha
cmp
cmpb
adc
sbb
and
pop
push
push
aaa
xchg
xlat
and
pop
push
mov
xor
sub
hlt
xorb
std
insb
sbb
lock
adc
dec
xchg
jb
sbb
and
jecxz
pushf
pop
and
lock
adc
or
js
in
push
xor
clc
cs
push
and
add
and
out
daa
fcomp
xor
and
xchg
scas
into
xchg
jne
push
rorl
or
lods
mov
adc
rcll
imul
stc
cld
icebp
xor
sub
push
idivb
sub
shlb
mov
rorb
in
int
mov
je
sub
in
mov
shll
mov
test
lods
inc
adc
pop
fs
das
sbb
jmp
pop
sbb
sbb
push
xchg
data16
sbb
cwtl
xchg
push
add
aam
cmp
lods
pop
inc
inc
sahf
and
jno
je
mov
pop
jb
test
out
inc
rcl
scas
daa
mov
sub
idivl
filds
fwait
subl
lods
test
push
or
jg
add
inc
xchg
xchg
in
test
push
out
or
mov
icebp
ret
ss
cmp
and
inc
cmpl
sub
in
roll
or
mov
fcmove
lahf
das
dec
xchg
cld
stc
loope
scas
fmulp
insb
movl
jb
inc
sub
or
xchg
dec
enter
imul
movsl
fistpl
xor
pop
add
mov
test
push
push
inc
mov
ret
xor
mov
cmp
fsts
add
xchg
xor
sbb
shr
jmp
jae
cmp
jns
xor
mov
mov
push
ljmp
cmp
add
sub
filds
imul
ret
leave
mov
cmp
popf
lds
xchg
pop
ja
xor
or
inc
cmp
icebp
es
or
fists
inc
lea
add
adc
xor
lock
ja
stos
pusha
mov
add
sbb
jle
pop
xor
jno
idivb
sub
or
lea
bound
cs
fisubrs
inc
and
stos
out
into
pop
arpl
call
push
inc
dec
pushf
push
loope
inc
xor
inc
pop
mov
cmpsl
mov
scas
push
mov
imul
bound
test
cmp
insl
subl
movsb
pop
in
mov
sbb
and
adc
jo
mov
inc
repz
data16
cmp
outsb
adc
out
dec
les
inc
test
inc
and
inc
lahf
inc
push
leave
popa
mov
jmp
fldl
enter
sarl
mov
xor
and
pusha
push
lea
pop
mov
jmp
push
lret
dec
arpl
mov
cmp
jne
jne
cltd
or
jg
add
mov
mov
shrl
popa
cmp
mov
lods
and
add
xor
ss
jmp
notl
shll
inc
dec
mov
xchg
negl
mov
lods
pop
dec
pop
icebp
out
imul
mov
imulb
and
jo
jo
xchg
cmp
adc
mov
in
lds
fdivrs
push
insb
cmpsl
loope
sbb
fcoml
insb
or
sti
xchg
push
xchg
jnp
shll
gs
lret
sbb
int3
mov
lret
add
arpl
ret
mov
ret
sbb
cmp
mov
outsb
ret
lret
add
arpl
cmc
bound
mov
pop
xor
xchg
outsb
addr16
jecxz
ds
xchg
pop
sub
lcall
sub
outsb
add
or
imul
repnz
push
movl
lods
mov
cmc
add
addr16
jmp
push
sub
in
add
or
mov
pop
es
arpl
mov
lods
lds
lock
orb
push
adc
lock
mov
ss
into
andl
dec
sub
inc
mov
loopne
fstp
pop
push
inc
dec
es
push
int3
mov
in
sbb
dec
lods
jp
je
jae
or
and
lods
scas
mull
mov
pop
mov
jecxz
mov
adc
adc
sbb
and
push
in
pop
sub
repnz
fs
in
xchg
pop
mov
mov
enter
sbb
mov
imul
and
mov
lahf
sar
jmp
rcl
lea
imul
jo
daa
addr16
dec
repnz
hlt
clc
fdivrp
jns
rclb
mov
lret
rorl
movsl
pop
lds
sub
pop
lods
jp
addl
or
mov
jg
ret
push
dec
inc
call
pop
mov
sahf
xchg
fcmovbe
in
push
popf
dec
sti
mov
pop
ja
repnz
adc
push
jb
pop
jge
mov
cmp
sub
push
pop
sub
mov
jecxz
xor
into
je
daa
shl
sahf
scas
pop
ds
lret
inc
inc
shlb
fsubrs
les
sti
mov
movsb
dec
lock
push
or
mov
or
stos
dec
fdivrl
pusha
mov
sbb
jo
pusha
mov
or
cmpb
mov
imul
push
dec
pop
movsl
dec
push
stos
push
in
push
sarl
les
int3
jmp
sbb
imul
inc
jno
push
jp
mov
add
lahf
clc
and
pop
sbb
hlt
inc
hlt
xchg
dec
ret
jl
sbb
inc
and
add
mulb
dec
jp
out
mov
pushf
dec
and
into
cmp
in
test
jecxz
sti
pop
mov
ret
lods
add
daa
mov
pop
add
imul
jno
fsubl
dec
in
loop
aaa
adc
shlb
add
jge
sbb
sbb
lock
js
jnp
adc
loope
jp
xor
pop
or
lcall
cmp
dec
or
stc
mov
push
daa
pusha
das
mov
sbb
push
dec
pop
imull
inc
xchg
and
sub
adc
xchg
dec
or
pop
jecxz
adc
lock
shll
jne
mov
int3
jmp
adc
lods
outsl
push
push
or
psubusw
sbb
call
mov
mov
mov
leave
jb
in
int3
cmpsb
inc
jmp
in
in
dec
mov
push
sub
sti
cmpsl
xchg
frstor
aaa
adc
mov
xor
and
fdivl
sbb
mov
mov
repnz
outsb
xchg
jg
xlat
popa
cmp
dec
push
je
jge
and
and
in
xchg
out
push
sub
or
push
mov
sti
in
fsubl
dec
out
xchg
push
cmp
xchg
ljmp
sahf
stos
cmpsl
enter
aaa
ret
pop
mov
imul
mov
jo
push
xchg
and
xchg
mov
inc
adc
xchg
mov
xchg
jns
fmuls
mov
and
iret
add
fcmovu
lahf
lcall
xlat
lods
push
xchg
and
rorb
mov
cmpsb
test
jne
jb
and
sbb
push
daa
xor
mov
cmp
and
pop
fwait
cmp
inc
int3
lock
sarb
cld
inc
inc
dec
negb
daa
inc
jbe
lret
sub
jns
aas
insl
es
push
out
aad
dec
popa
das
test
xchg
dec
cwtl
cltd
js
mov
mov
cs
xor
cmc
nop
dec
leave
sbb
cltd
sub
xlat
test
xor
aas
cmpsl
mov
filds
add
daa
jmp
movsb
orb
xchg
mov
or
inc
xchg
sbb
or
push
repnz
and
jge
dec
ja
inc
mov
lret
lret
insl
cmc
js
xchg
fisttpl
ret
jae
into
movsl
movsb
xchg
pop
add
xchg
jecxz
in
repz
ljmp
dec
or
mov
jb
sbb
jnp
in
out
pop
mov
sub
iret
jmp
inc
add
cmp
mov
inc
jmp
cmp
lods
test
inc
insl
cmpsb
das
int3
dec
movsb
push
cmp
push
iret
xorb
les
pop
or
loop
jmp
repz
das
mov
lods
out
mov
or
jg
popa
inc
cli
popf
jbe
fidivrl
jmp
sub
iret
rcl
into
pop
jnp
ds
mov
sbb
xor
jecxz
sahf
cltd
xchg
rolb
shrb
xor
sub
outsl
shr
mov
add
lock
dec
leave
andl
and
scas
inc
jl
lret
shlb
jp
pushf
mov
clc
int3
fdivrs
lret
inc
shrb
pop
pop
je
insl
daa
inc
jbe
mov
je
adc
call
push
push
pop
jno
shll
cmpsb
pushf
xacquire
iret
int
xchg
inc
xchg
fimull
pop
add
add
popa
mov
les
ret
mov
shlb
mov
xor
mov
cmpsl
loope
stos
cs
insb
lret
mov
lahf
mov
mov
push
mov
cmp
repz
inc
push
lret
pop
pop
mov
jmp
dec
add
mov
pop
sarb
jo
es
mov
negl
and
scas
mov
sbb
mov
sbb
js
and
xchg
cmpsl
sbb
nop
lahf
daa
sar
lea
push
xchg
mov
and
mov
pushf
daa
mov
adc
add
pusha
jp
jnp
sti
mov
jne
out
fs
repz
fildl
mov
xchg
fistps
or
sbb
movsb
add
lods
cltd
and
push
sbb
mov
popf
adc
mov
mov
dec
sub
ficoms
adc
jp
mov
jp
lock
filds
push
cmpsb
mov
sbb
shlb
xchg
mul
mov
push
jmp
repnz
jbe
daa
or
rcrb
push
addb
dec
pop
and
mov
cli
negl
or
mov
neg
dec
int
cmpsb
mov
in
or
cmp
dec
jnp
adcb
hlt
aam
mov
lock
stc
jne
shrb
pop
filds
pop
decl
sbb
scas
sahf
pop
enter
sub
sbb
cmp
or
xchg
insl
fstpl
pop
adc
xchg
pop
fildll
push
or
mov
insb
std
fwait
enter
rcr
loop
push
mov
mov
ja
outsb
mov
pop
leave
jp
push
mov
ja
xor
call
pop
mov
sub
mov
fcmovu
xchg
push
mov
fcomip
jecxz
pushf
xchg
cmp
lock
fmull
mov
cmp
jmp
fldl2e
lods
test
ja
int3
push
xchg
xor
ja
std
cmpsb
sub
movsl
adc
stc
jo
bound
stc
adc
cmp
cmp
push
sti
fsubrs
int
jl
cmp
push
mov
dec
in
das
dec
and
adc
jb
pushf
jbe
repz
adc
jnp
adc
cltd
pop
in
mov
test
test
xor
incl
test
stc
mov
jo
sahf
cmp
fwait
sub
mov
push
jnp
lods
mov
mov
jnp
mov
fsubp
xchg
add
and
test
mov
dec
and
les
pop
push
pop
sti
test
cmc
inc
xorb
push
mov
sbb
sbb
jg
adc
pop
loope
arpl
in
xor
and
xchg
pusha
inc
arpl
lcall
stos
sahf
push
dec
mov
popa
les
pop
dec
addr16
fldcw
ljmp
dec
push
dec
les
xchg
or
insl
ljmp
xorb
mov
popa
cmc
or
xlat
das
xchg
out
lret
sahf
mov
in
je
nop
clc
push
push
mov
mov
pop
mov
inc
lcall
inc
ljmp
jno
mov
jbe
xchg
dec
cwtl
adc
dec
rorb
mov
test
jl
and
add
and
lcall
xor
pop
jmp
mov
lahf
dec
loope
push
push
clc
inc
mov
nop
inc
xor
inc
sbb
xchg
jge
aas
add
lock
pcmpgtw
push
cli
inc
cmp
ud1
jns
int
jecxz
cld
and
and
scas
in
mov
jge
or
mov
push
scas
lcall
sbb
ds
aas
in
scas
mov
movsl
popa
stc
andb
insl
gs
mov
jl
fwait
add
fldl
dec
mov
data16
jle
cs
fisttpll
pop
xor
xor
and
xor
mov
push
mov
das
push
and
push
jae
enter
rorl
iret
inc
cltd
mov
faddl
xchg
pop
roll
and
jns
push
xchg
jae
push
pop
push
insl
xor
sti
push
push
xor
enter
xchg
xchg
loop
dec
lods
ret
dec
es
mov
dec
bound
fnstsw
add
jge
dec
push
mov
and
cmp
or
mov
push
aad
inc
push
roll
cmp
fisttpl
fsubr
movsb
jno
int
push
xor
cli
das
lods
fisubrs
sub
in
dec
sbb
sub
mov
mov
xchg
iret
and
xor
rol
ja
es
pop
dec
jge
and
popf
jno
add
sub
or
push
inc
cmp
fisubrl
ja
and
iret
les
pop
or
mov
addr16
inc
mov
fwait
inc
dec
pop
mov
repz
shlb
movsb
and
dec
and
jg
lfs
fnstenv
es
mov
sub
add
repnz
mov
cmp
inc
push
movsl
sub
test
aam
pop
cltd
dec
push
jp
fstl
or
jbe
bound
pop
ficompl
xchg
mov
cwtl
push
rcrb
push
push
mov
fimuls
pop
lods
scas
adc
add
or
pushf
push
jb
popf
rorb
push
xor
or
or
je
xor
mov
xchg
cltd
cmp
xor
xor
mov
fimuls
rcrl
ja
jg
jle
cld
fnstsw
push
insb
xor
pushf
movsb
jp
pop
lock
jnp
mov
adc
jmp
xchg
mov
fldl2t
cmp
push
mov
mov
sbb
and
icebp
cltd
gs
push
xchg
and
mov
xor
shl
cmpsb
into
adc
fs
xchg
xor
xchg
or
push
adc
popl
shrl
lahf
aad
sub
mov
add
mov
jnp
clc
pop
ss
jo
push
xor
pop
sbb
lret
mov
cld
les
out
xchg
fwait
jle
inc
adc
jecxz
movsl
mov
das
lock
addr16
fistpll
popf
lods
sbbb
push
pop
jo
dec
sbb
jge
jmp
test
mov
mov
cld
mov
jb
pop
int3
daa
inc
inc
mov
mov
cld
stos
out
xor
xor
dec
cltd
adc
nop
sbb
inc
dec
stos
mov
mov
pop
add
pop
mov
fdivl
addl
repz
enter
mov
or
insl
dec
pop
adcl
xchg
decb
jno
ret
lods
cmp
adc
pop
shlb
sub
push
stos
cli
dec
mov
in
sbb
jp
sub
mov
xchg
insb
push
repz
xor
icebp
xor
push
mov
std
inc
jl
aam
enter
push
fs
xor
fdivrs
loopne
xor
test
push
push
inc
jle
arpl
add
pop
adc
mov
lret
imul
pop
lds
ss
or
sbb
out
mov
repz
jo
inc
repz
into
adc
pop
out
scas
cld
push
xchg
and
push
adc
cmp
outsb
mul
mov
cmp
mov
add
shr
mov
call
in
adc
mov
and
and
xlat
adc
pop
mov
or
pop
mov
sub
cli
ret
mov
test
pop
mov
popf
mov
and
out
dec
sub
je
push
push
out
xchg
add
sbb
mov
inc
mov
pop
pusha
cmc
pop
inc
mov
data16
data16
pop
imul
lcall
xchg
sbb
mov
loopne
ss
sahf
data16
aad
pop
in
pop
sbb
int
xor
imul
and
data16
imul
scas
sbb
mov
jnp
js
ficoml
das
sub
mov
gs
stc
fbld
daa
jmp
mov
jmp
addl
push
mov
arpl
and
xor
rdmsr
or
ss
cmp
into
add
mov
mov
add
sbb
into
and
in
lahf
mov
loop
adc
mov
cs
pop
add
std
mov
xor
adc
pop
ret
lock
xor
std
fmul
stc
xor
adc
mov
imul
in
push
and
sbb
cmpsl
sub
loopne
mov
cltd
add
sti
mov
loop
sbb
mov
mov
movsb
jbe
std
add
inc
push
xchg
inc
ss
lahf
loop
sbb
das
sbb
sbb
repnz
call
pop
xchg
xchg
and
idiv
int
add
repz
repnz
jne
jmp
imul
stc
or
fcmovnu
sbbb
ss
rcrb
imul
add
in
and
roll
pop
in
cld
movsb
ret
cmp
mov
shrl
shll
push
cmp
pop
or
dec
cld
cmp
fistl
lods
pop
jge
and
inc
push
pop
int
jnp
fiaddl
jae
loop
in
rorb
iret
mov
aaa
add
adc
rclb
cmp
sub
add
push
in
cld
ljmp
mov
sarb
or
cli
xchg
jecxz
leave
lods
dec
lret
nop
jo
stos
jmp
xlat
mov
sar
std
mov
or
lods
je
ret
xchg
into
clc
sbb
push
scas
jg
jg
aad
inc
sbb
ljmp
dec
outsb
leave
or
pop
jle
bound
fwait
inc
inc
int
int
loopne
push
mov
repz
pop
xchg
bound
test
mov
scas
sti
jbe
cli
adc
adc
je
cmp
push
cmc
mov
dec
cli
mov
jb
mov
sti
jnp
pushf
idivb
mov
mov
out
lds
fldt
imul
xor
flds
inc
and
jmp
fsts
mov
icebp
cmp
pop
leave
out
ficomps
mov
mov
xchg
leave
cmp
push
mov
imul
pop
pop
leave
or
pusha
pop
mov
pop
dec
adc
sub
lods
sbb
aaa
mov
stc
mov
cmp
and
lock
orb
adc
mov
mov
mov
or
aad
pop
sbb
je
out
mov
xchg
hlt
lods
add
mov
lods
lds
mov
pop
insl
fbld
ret
iret
sub
fsubl
jbe
mov
int3
dec
in
jmp
sub
mov
and
mov
jmp
adc
loopne
ljmp
mov
arpl
or
dec
leave
ficompl
icebp
jmp
and
mov
pop
aam
sub
rcll
and
or
jae
inc
mov
or
test
mov
movsl
cmpb
scas
sub
data16
inc
mov
sub
scas
mov
clc
sbb
xor
jb
xchg
mov
setp
push
ljmp
rol
add
jmp
frstpm(287
push
push
adc
push
bound
push
ds
push
stos
adc
and
or
mov
incl
pop
and
out
adc
sar
sub
loopne
pop
call
xor
xchg
sub
loop
cmp
push
xchg
jmp
sbb
push
sbb
cltd
mov
icebp
push
xchg
and
lret
outsl
add
lea
outsl
and
lock
pop
hlt
idiv
dec
add
enter
xor
jo
and
decb
mov
cltd
cltd
mov
lods
xor
andl
pop
stos
cmp
mov
dec
push
movsl
dec
into
fisubrl
mov
cmp
mov
sarl
and
or
mov
cltd
sub
mov
sbb
add
inc
mov
pop
jecxz
or
jnp
cmp
insl
add
stc
jns
fldl
mov
bound
mov
out
mov
xchg
mov
xor
in
jnp
loope
std
ret
or
jae
sbb
adc
push
mov
int
sub
jns
push
lahf
xchg
incb
sub
call
test
mov
out
rcl
xchg
stc
mov
push
out
push
mov
jnp
cmp
adc
pop
in
das
and
jle
nop
mov
ss
dec
inc
lahf
mov
inc
cmp
lahf
test
fwait
pmulhuw
gs
test
jns
push
sbb
mov
jne
or
mov
in
xor
mov
ja
pop
dec
ja
push
hlt
fldt
aam
jecxz,pn
cmp
adcl
xchg
xor
in
or
pushf
jp
push
lods
sahf
sbb
push
adc
in
lret
adc
fcompl
enter
dec
jae
pop
xor
jl
fcompl
sbb
mov
xchg
adc
xor
pop
in
cmp
js
sub
imull
int3
dec
cmp
repz
lret
inc
mov
xor
inc
rclb
sbb
test
imul
adc
jg
pop
into
dec
lods
mov
fdivrl
mov
or
sbb
xor
fcoml
hlt
leave
cmc
adc
cs
ss
mov
adc
mov
jae
xchg
jl
stos
leave
xchg
mov
cmp
mov
popf
or
push
push
inc
mov
xchg
xor
adc
repz
pushf
lret
xchg
out
xchg
mov
subl
inc
mov
popf
fwait
icebp
mov
scas
xlat
pusha
mov
adc
lods
in
pop
sbb
lret
or
in
pop
xchg
insb
popa
mov
fsubrs
xchg
jo
dec
orl
aad
imul
jl
adc
insl
cmc
dec
cltd
dec
shrb
js
outsl
test
cmp
sub
mov
mov
xchg
mov
adc
dec
or
mov
rclb
sbb
or
push
pop
pop
inc
add
cltd
aam
call
cld
out
jb
aas
out
push
jmp
mov
jle
lret
sub
add
fldl
inc
jmp
add
pop
cmpsl
sbb
add
outsl
dec
pop
pop
dec
add
xor
jb
jne
test
dec
adc
test
outsl
mov
push
sub
add
test
adc
push
mov
mov
mov
fiadds
aaa
addr16
mov
repnz
clc
cltd
fistpll
loop
inc
push
or
gs
divb
les
mov
sarl
cmp
push
sub
repz
adc
sbb
push
ds
loop
dec
aaa
xchg
loope
mov
inc
or
rol
out
add
adc
addr16
shlb
cmp
movsl
mov
dec
sbb
sbb
mov
dec
or
leave
jle
ret
mov
jecxz
jge
fs
jmp
and
das
loope
popf
inc
inc
scas
jl
sub
xchg
popf
mov
jg
fsts
sub
fistpll
sub
outsl
pop
xor
mov
sbbl
aam
mov
push
mov
scas
push
or
ret
push
xchg
ret
push
fistps
ss
test
rcr
xchg
mov
and
pop
fcoml
mulb
xor
fdivr
cmp
pop
push
dec
push
cli
jne
mov
lea
mov
mov
test
inc
sbb
jns
jp
movb
xlat
add
xor
cmp
push
scas
insl
xor
adc
mov
dec
inc
mov
jecxz
lcall
out
daa
jae
scas
cmp
sub
jecxz
daa
aad
movsl
jge
add
xchg
dec
mov
jmp
icebp
outsb
in
aam
adc
mov
outsb
ljmp
loope
inc
sarb
int
repnz
jg
cmpsl
call
and
sub
pop
repz
cmp
outsb
rol
sub
xchg
xchg
addr16
or
jb
ret
gs
bound
test
cmp
dec
xchg
enter
ror
sbb
movsl
xor
dec
inc
dec
jmp
pop
data16
out
dec
lods
lcall
push
fisttpll
je
mov
outsl
cmp
aad
std
mull
pop
jne
inc
add
pop
and
xchg
in
and
repz
jo
clc
push
fnstenv
pop
pop
dec
adcl
xchg
jo
data16
into
sbb
jb
lods
mov
out
ss
shrl
inc
xor
adc
stos
stos
sarb
outsl
test
lahf
jmp
cmpsb
stos
loope
push
pop
jecxz
cld
xchg
aad
xor
push
add
data16
pop
mov
cmp
cs
repz
sar
shr
lods
jl
dec
sbb
imul
adc
in
std
xchg
and
pop
add
mov
jbe
push
add
mov
cmp
insl
loop
sub
mov
inc
xor
push
xor
add
rolb
push
jge
mov
ficompl
or
pop
sbb
mov
lahf
push
ljmp
sub
inc
jo
cli
sub
mov
xor
das
inc
call
ret
or
pop
cmp
repnz
insl
stos
mov
dec
iret
movsl
jne
aaa
scas
out
mov
adc
push
sub
jl
sbb
std
popf
push
xchg
aam
mov
loope
sar
stos
stos
pop
pushf
mov
popf
fisubrl
leave
sub
mov
std
aad
add
out
lock
rclb
xchg
ret
repnz
das
mov
into
mov
lods
lret
push
jge
xchg
cmpsl
pop
stos
rorl
pop
daa
bound
out
cld
popa
mov
adc
add
jle
or
or
popa
je
dec
cltd
daa
dec
das
jno
dec
sti
loope
inc
call
jp,pn
or
dec
in
icebp
add
cs
insb
xor
adc
mov
push
insl
xor
adc
andl
sub
jns
inc
xor
loop
push
push
jmp
enter
in
in
adc
pop
subb
and
push
mov
jno
xor
fnstenv
aas
add
fdivrp
iret
test
call
jae
pop
loop
into
out
lods
ficoml
add
jmp
jmp
repnz
in
mov
loop
ljmp
add
mov
sbb
mov
rcr
nop
orl
mull
bound
lcall
cmp
popa
orl
nop
dec
mov
push
mov
das
xor
push
sbb
adc
or
sub
mov
sbb
xchg
xchg
dec
push
jge
mov
mov
cmc
sahf
or
pop
pop
ret
ljmp
pop
push
pushf
inc
pop
adc
jns
xor
jb
cmp
fucomp
push
jp
sub
jp
out
mov
int3
das
xor
lock
add
push
dec
das
mov
cli
jge
dec
jle
mov
push
lds
or
adc
and
data16
fstpt
testb
jle
xchg
cmp
jl
mov
inc
or
movsl
jg
shlb
jno
popa
push
xlat
scas
cltd
adc
das
mov
in
cwtl
mov
clc
fwait
pop
mov
rcll
xor
fidivs
cmp
pushf
lret
imul
popa
test
dec
jae
and
push
inc
popa
jns
and
inc
es
scas
or
das
arpl
sub
mov
loope
js
mov
adc
fstpt
inc
inc
cld
jle
add
lods
stos
jmp
loop
mov
std
xchg
jo
jne
pop
inc
push
out
mov
xchg
imul
xchg
call
mov
xchg
out
test
push
pop
movsl
enter
and
sbb
jg
cwtl
pop
scas
sub
mov
mov
pop
jp
sub
outsb
cld
xorb
addr16
lds
std
imull
cmp
std
movsl
idivl
push
stc
and
fwait
jecxz
sbb
test
mov
lcall
lods
icebp
xchg
sub
or
sub
sar
push
push
dec
mov
sar
ds
imul
sub
mov
or
jl
sbb
lea
ljmp
xchg
dec
mov
jl
dec
dec
dec
mov
dec
pop
cmp
andl
dec
jp
stos
lcall
push
jae
push
mov
or
sarb
addb
dec
test
mov
cmp
int
lods
push
repz
inc
icebp
out
ja
test
pop
dec
int3
and
lods
add
sbb
ds
jo
out
or
pop
push
mov
test
cmpsb
xor
lret
xchg
icebp
xchg
icebp
jp
mov
ss
sub
test
stos
push
push
repz
popl
test
inc
imul
mov
bound
xor
lahf
scas
mov
adc
sti
cld
mov
xchg
inc
jb
cmpsb
and
sbb
aad
push
fistpll
jecxz
mov
jns
pop
orb
sub
mov
insl
cmp
mov
aad
jo
xchg
call
mov
dec
repz
and
data16
out
pop
pushf
fdiv
test
push
outsl
add
fimuls
and
fidivs
add
popa
mov
dec
mov
lahf
gs
lret
je
xor
jno
js
push
jmp
shrl
cmp
sub
mov
dec
pop
stos
push
xchg
inc
push
inc
cltd
in
push
sbb
pop
imull
out
mov
test
ficomps
jns
add
hlt
mov
and
repnz
ljmp
clc
andl
stc
and
adc
inc
xchg
scas
mov
adc
cmp
mov
ds
cmp
push
int
rorl
dec
cmp
pop
bound
ror
xor
add
sbb
jns
adc
bnd
out
ja
cmp
push
scas
test
iret
lcall
fwait
test
xor
out
adc
rcl
push
jecxz
stos
adc
inc
cld
push
test
mov
or
or
or
mov
adc
mov
movsb
loope
add
data16
or
orl
bnd
xchg
sub
inc
outsb
adc
roll
imul
inc
imul
push
pop
frstor
mov
imul
ficoms
inc
and
inc
mov
pop
ficompl
mov
daa
das
rcrl
pusha
inc
pop
sbb
mov
test
pop
gs
sub
dec
data16
sbb
loope
and
push
xchg
imul
push
adc
cld
out
mov
add
or
cli
cmp
xor
or
push
push
xor
pop
push
int3
inc
xchg
rclb
jge
inc
sub
and
jp
mov
mov
inc
lret
mov
mov
daa
aas
sbb
iret
int3
inc
bound
and
adc
imul
add
xchg
insl
lret
aaa
fsubrs
out
gs
jge
mov
gs
nop
and
call
jbe
test
pop
sub
mov
jp
clc
insl
xchg
cmp
push
cmpsl
push
pop
bound
mov
int3
push
add
jg
cmp
xor
inc
adc
mov
adc
popf
xchg
adc
pop
imul
lahf
popa
outsb
jmp
sub
icebp
cmp
jnp
notb
test
dec
sub
cwtl
mov
push
in
dec
jge
jl
fsubrp
lods
inc
arpl
decl
clc
inc
sub
jo
push
cltd
mov
movsl
sbb
cli
xchg
lret
inc
mov
lds
jl
add
ja
xor
adc
adc
pusha
andb
sahf
dec
scas
sub
xchg
mov
jne
cmpsb
mov
pop
mov
jg
add
insl
fdiv
fists
ja
test
aaa
bnd
or
je
mov
lods
repz
cmpsl
insb
stc
fdivs
push
jb
aaa
mov
inc
mov
or
scas
test
ret
push
pop
loop
xchg
shll
loop
les
mov
ret
mov
out
inc
sub
ror
aaa
dec
fcmovne
mov
mov
shrb
cwtl
cmp
and
sub
jnp
rol
sub
dec
es
imul
mov
push
cmp
push
sub
inc
jmp
sub
jb
mov
sbb
addr16
in
cmp
jns
sbb
jmp
sbb
mov
pop
aas
dec
sbb
mov
xor
and
aas
ss
ss
mov
xor
ret
jne
out
nop
sub
into
add
xchg
int3
mov
rclb
jle
popf
mov
push
mov
jg
xlat
jne
lret
fstpl
xchg
lea
jnp
mov
add
and
add
sti
orl
dec
push
out
mov
jecxz
mov
hlt
aad
xchg
and
adc
daa
in
mov
sbb
mov
test
popf
cs
lcall
call
shlb
mov
mov
xchg
ret
fcoms
mov
jnp
or
mov
lock
mov
mov
pop
nop
mov
ljmp
bound
add
xor
cmp
rcr
enter
mov
inc
iret
dec
push
scas
lea
push
mov
pop
and
ljmp
mov
sub
dec
inc
push
lret
mov
push
sub
repnz
jge
inc
lds
cmpsl
push
js
sbb
cmp
mov
js
leave
mov
in
shl
mov
xchg
mov
bound
sub
adcb
ljmp
lea
ds
aaa
sub
push
or
cwtl
inc
cwtl
pushf
subb
leave
in
int
sbb
pop
push
pushf
fmul
add
fwait
test
mov
repnz
xchg
mov
fdiv
sbb
rcrb
cltd
inc
jmp
sub
xchg
pop
cmp
mov
clc
cmc
shlb
iret
addr16
clc
mov
mov
sub
adc
cltd
dec
push
jle
aad
ret
sub
negl
xor
pop
add
shlb
mov
out
sub
insb
pop
jo
loop
outsb
dec
adc
xchg
adcb
xchg
stos
and
int
lret
daa
mov
or
insl
pop
fstps
sub
mov
mov
pop
in
data16
das
cmc
pushl
aas
int3
sahf
pop
push
mov
sbb
sahf
mov
push
into
mov
clc
loopne
clc
repz
cmp
jno
fs
push
xor
rclb
enter
pop
dec
mov
testb
sbb
adc
xchg
ret
cli
push
xchg
aam
jo
mov
test
repnz
filds
xchg
xchg
insb
popf
or
add
insl
or
call
push
xor
dec
fimull
dec
dec
sbb
adc
repnz
add
pop
mov
mov
add
cmp
add
push
dec
push
pop
or
addr16
sbb
sub
sub
mov
sub
xlat
rorl
mov
cli
cmp
add
pop
mov
jmp
les
cmpl
out
addr16
pushf
sbb
mov
movsl
in
mov
adc
jno
clc
dec
mov
sub
iret
jl
leave
sbbl
repz
rolb
fwait
push
xchg
out
dec
jle
in
insl
out
mov
daa
and
xchg
lods
mov
adc
mov
xor
adc
lret
sbb
sbb
sub
fbstp
call
push
dec
scas
pop
scas
shrb
test
or
sbb
push
mov
ret
add
imul
xor
js
mov
jge
inc
mov
xchg
push
incb
inc
pop
cmpsb
xor
push
cli
in
fists
out
addb
mov
ds
insb
xor
lret
push
mov
movsl
xor
in
out
jl
out
jg
xor
adc
xor
in
testl
mov
jmp
adc
rclb
inc
cltd
cmc
adc
inc
scas
sub
pop
mov
test
mov
pop
pop
mov
jge
cmp
and
jb
sbb
mov
mov
das
xor
mov
pop
bnd
mov
andnps
out
cmp
ret
out
or
pop
pop
add
xchg
cmp
cmp
or
mov
aaa
push
dec
sub
or
repz
inc
ret
mov
ljmp
lret
or
loop
jns
cmp
int
ret
lcall
jb
lret
dec
push
call
pop
sub
mov
xchg
mov
lcall
fnstcw
loopne
inc
popa
adc
mov
jge
and
imul
in
and
repnz
or
test
mov
sbbl
jl
sahf
lods
lret
das
lock
aam
jp
xor
sbb
dec
mov
lret
jl
loope
inc
jns
or
imul
cmp
out
repnz
and
jmp
sti
jmp
shrl
ss
mov
sub
cmpsl
pop
mov
ret
xchg
scas
pop
push
mov
push
lods
data16
adc
daa
repnz
mov
rol
adc
mov
xchg
inc
adc
add
flds
test
scas
fwait
sbb
xor
shrb
in
ficomps
stos
mov
int3
lcall
push
mov
iret
lods
push
and
push
jmp
mov
jp
inc
test
inc
xchg
adc
shr
sbb
pop
imul
lods
dec
sbb
pushf
les
adcb
push
stos
xor
pop
and
fldl
sbb
and
test
or
jle
int
outsb
inc
fsubs
sub
pop
stos
adc
test
adc
push
xor
sub
inc
xor
inc
add
mov
gs
mov
pop
mov
pop
pavgw
adc
out
aaa
jbe
jmp
dec
push
gs
cltd
mov
es
fisttpl
mov
or
jo
fistpll
fisubrs
rcrb
cmc
sub
xor
cltd
loop
mov
adc
push
addb
mov
jae
insb
repnz
adc
add
add
cmp
mov
cmp
jecxz
loope
pcmpgtb
clc
and
fdivr
icebp
add
lods
outsl
movsb
add
push
pusha
popf
das
aas
xor
out
cmpsb
sti
or
out
popa
out
jecxz
push
fisubrs
aam
sub
sub
jmp
push
add
xor
mov
add
or
loope
xchg
ret
lea
aad
sub
xor
pushf
ljmp
lret
sub
sub
fwait
adc
nop
jge
int3
push
mov
sti
ja
jl
lret
jl
xlat
fs
add
aad
push
inc
enter
push
orb
lahf
in
inc
pop
mov
in
lahf
cmp
ret
lahf
and
push
scas
mov
popa
lock
xorl
stc
mov
sub
mov
es
cwtl
jns
cs
shrl
popa
cmc
out
clc
inc
pusha
add
xchg
int
mov
pop
sub
test
or
mov
test
rcrb
pminsw
xchg
lret
in
push
push
cmc
nop
xchg
mov
loop
ds
or
out
lds
push
aad
push
xor
cltd
jl
push
icebp
pop
or
fstps
lret
jl
add
mov
and
adcb
in
sbb
pop
mov
jle
add
filds
jg
mov
dec
subb
xchg
push
call
mov
mov
push
outsb
xchg
push
fwait
addr16
aam
fcompl
enter
je
mov
add
push
scas
nop
sahf
inc
inc
les
inc
push
cmpsb
adc
fstp
and
or
daa
xor
int
faddl
adc
shlb
enter
cmpsb
fwait
lret
cwtl
mov
and
shrl
adc
xor
mov
mov
cmpsl
push
mov
and
out
push
subb
jb
lcall
sub
fcoms
jecxz
inc
std
repz
fs
jl
sarl
push
sub
sbb
sbb
sbb
push
and
and
fisubl
mov
mov
mov
shll
xor
sbb
sub
mov
and
in
mov
ret
mov
mov
cmp
jecxz
sti
imul
or
je
dec
jle
int3
aas
pop
jmp
push
ja
arpl
punpcklbw
xor
push
test
push
ret
adc
clc
mov
and
pop
inc
hlt
fdivl
sahf
mov
loopne
mov
pop
lock
push
sbb
sub
int
push
pop
push
jne
or
stos
fidivrs
stos
iret
aam
int3
mov
push
test
pop
mov
pop
cmp
divb
inc
aam
pop
and
xchg
rcrb
aad
imul
shrl
gs
nop
fwait
es
ljmp
lods
xchg
sub
mov
and
bound
xor
cmp
xchg
add
test
std
sub
mov
add
scas
jg
cmpsb
imul
mov
pop
push
add
cmpsb
cmpsb
dec
ds
iret
pop
mov
stc
cmpl
adc
sahf
loopne
xchg
add
and
into
rcr
int3
sub
dec
mov
cmp
xor
into
xor
or
clc
stos
jmp
loop
mov
add
mov
sbb
js
enter
cmp
jl
ret
and
jecxz
add
jp
push
dec
xor
xor
out
inc
sbb
jb
and
fwait
mov
pushl
xorb
mov
rorl
in
nop
pusha
arpl
adc
scas
dec
shll
sub
or
divb
jne
insl
sbb
cmp
sbb
cmp
pop
out
imul
inc
add
jecxz
lret
pop
test
clc
lret
xor
sahf
rolb
mov
arpl
ds
fnstcw
fbld
mov
pusha
in
imul
or
inc
pop
aad
das
sti
push
ljmp
jbe
inc
pop
push
fiaddl
or
lret
inc
das
cld
push
cmc
shrb
ljmp
lahf
cld
test
mov
push
mov
mov
jnp
mov
pop
add
rclb
and
pop
cmpsl
add
mov
clc
movsl
in
lds
pop
stc
lods
add
push
xor
xor
mov
xlat
mov
pushl
mov
leave
mov
in
or
and
mov
fsubl
ret
mov
push
xchg
stos
jle
inc
cwtl
add
lcall
mov
lret
and
mov
push
nop
cmp
add
xor
push
cmp
or
cmpsb
push
mov
pop
ret
dec
xor
fmull
mov
fistl
dec
dec
or
incb
mov
pop
in
dec
jno
push
push
sahf
mov
test
adc
outsb
pop
jns
roll
std
add
std
jge
outsb
lahf
mov
addr16
fldcw
jmp
mov
cwtl
add
and
pop
cmc
shrl
jmp
movl
les
push
push
jecxz
pop
sbb
shll
jg
pop
sti
push
sub
int
xor
xor
xchg
clc
pop
cltd
mov
push
inc
or
lcall
mov
mov
push
inc
push
jb
mov
add
incb
aad
mov
push
adc
mov
std
cmp
jmp
popa
gs
adc
popa
pop
pop
mov
mov
dec
and
jg
mov
lods
gs
adc
or
outsl
mov
push
add
jle
xchg
jge
pop
pop
test
push
iret
jo
push
aam
xor
jl
xchg
addr16
fcoml
add
andb
or
jle
fcmovne
mov
fsubrs
into
stc
movsb
inc
mov
repnz
daa
inc
push
adc
cmc
ja
add
push
xchg
push
cmpsb
sbb
adcl
jb
out
xor
jg
adcb
inc
popa
std
fdiv
adc
cmp
xchg
nop
mov
xor
xchg
call
sub
aas
das
mov
dec
fs
outsl
dec
in
cwtl
out
add
int
mov
add
pop
jle
jo
jg
adc
push
push
in
push
mov
xabort
mov
rcll
pop
ret
out
gs
fldcw
mov
and
mov
add
dec
inc
mov
fcomps
push
mov
lret
int
pusha
call
call
mov
aad
daa
mov
ficoml
inc
lret
push
stos
mov
mov
add
adc
fs
dec
in
clc
daa
push
sub
mov
push
add
push
daa
cli
dec
pop
jmp
sbb
es
lret
sahf
mov
aas
sub
xor
cld
cmp
repnz
loop
pop
mov
mov
fdivs
or
lret
xchg
and
jno
bound
xchg
test
popf
gs
or
push
mov
xchg
ja
lock
adc
ja
push
mov
jge
outsl
cmp
dec
cli
es
jle
test
test
je
iret
gs
sbb
aas
mov
cmp
gs
inc
mov
adc
lret
and
and
jp
pop
mov
and
hlt
mov
fs
and
mov
stos
mov
sbb
loop
xchg
jmp
jp,pn
mov
sti
ror
pop
dec
fwait
inc
push
call
repnz
mov
dec
adc
les
ja
movsl
stos
and
adc
aas
mov
out
pop
pusha
mov
lea
lods
adc
jge
hlt
jmp
pop
push
xchg
dec
adc
adc
push
cmpsb
adc
int
dec
mov
adc
cld
scas
mov
push
xchg
lret
enter
pop
jno
rolb
mov
dec
inc
cs
push
sbb
mov
jns
decb
cltd
xlat
pop
sahf
sub
lret
and
add
daa
lods
add
xchg
in
add
pop
es
add
inc
mov
mov
cmc
test
cmp
cmp
lods
xchg
inc
dec
lock
es
pop
aas
repnz
and
dec
xchg
adc
shlb
cmc
mov
shrl
mov
and
pminsw
jge
jecxz
add
push
mov
mov
xchg
repnz
inc
jmp
ret
shr
fbstp
inc
lcall
pop
xchg
mov
das
xor
xchg
jae
and
sbb
cwtl
sub
lock
pop
mov
add
fbstp
dec
dec
add
sub
jmp
orl
data16
inc
aad
addr16
push
add
mov
fs
loopne
lods
outsb
dec
pusha
xchg
cmpsb
aad
inc
test
adcb
mov
jecxz
and
in
xor
fsubr
xor
js
or
or
sbb
enter
cmp
in
into
and
or
sbb
mov
loope
lret
in
xchg
mov
sub
cmc
xor
ret
out
cld
cltd
das
pop
or
cwtl
in
add
jae
push
mov
mov
sbb
jnp
pop
lods
pop
and
je
imul
mov
pop
dec
test
ljmp
ror
mov
push
bound
dec
sbb
cmp
and
test
incb
std
shlb
sub
push
std
push
in
jns
push
cmp
test
movsl
int
mov
into
clc
xchg
dec
jnp
push
daa
pop
sbb
test
les
loop
es
and
outsl
dec
xor
aas
cmp
mov
rep
inc
nop
mov
pop
cmp
sti
cltd
xchg
pmulhw
sub
sahf
ret
sbb
push
jne
xchg
pop
cmp
xchg
or
addb
mov
inc
jecxz
ss
mov
or
jmp
adc
jo
jb
sbb
dec
adc
cmp
xor
orl
cmpsl
xchg
popa
push
call
fiaddl
mov
add
aad
and
adc
lds
or
adc
out
mov
sahf
push
jae
int3
pop
sub
mov
sbb
mov
add
pop
out
test
aad
jae
lcall
cmpsl
mov
iret
insl
loopne
sarb
popf
xchg
xor
dec
lock
nop
jno
mov
sub
mov
push
sbb
ret
les
shr
ljmp
push
loopne
xchg
pop
out
gs
cmp
xchg
stc
push
pop
psubb
jle
sub
call
bound
js
sti
and
xor
adc
scas
and
jno
clc
in
and
loop
xor
push
daa
sub
in
in
es
test
xchg
rcrl
je
notb
int
cs
mov
push
xor
cwtl
loopne
xchg
stc
repz
push
push
jb
mov
cmp
or
test
idivb
dec
and
out
hlt
mov
adc
add
leave
sbb
jb
push
mov
aam
daa
in
dec
sarl
popa
mov
jns
inc
adc
dec
fidivl
loope
mov
dec
pop
stc
and
jae
lret
cltd
mov
bound
jl
out
ljmp
inc
aad
dec
lcall
stc
and
mov
cmc
insb
fldl2t
in
inc
and
adc
adc
in
jp
mov
jo
ss
pop
lahf
ss
pusha
push
push
sub
call
xor
arpl
int3
mov
inc
aas
jmp
jp
ficoms
push
dec
addr16
add
rolb
cmp
cltd
out
cmp
leave
nop
or
cmpl
out
inc
lods
rorb
dec
daa
xchg
and
hlt
lods
sub
xchg
stos
sbb
mov
les
addr16
popa
pop
sarb
mov
or
fwait
out
js
into
cmp
mov
mov
inc
adc
sbb
xorb
rcrb
and
or
lret
or
sub
sbb
lods
inc
popa
inc
cmp
or
addr16
in
and
mov
pop
xchg
repnz
jl
push
and
pop
adc
add
pop
mov
leave
test
enter
jecxz
cmp
jno
popa
mov
test
mov
mov
mov
xor
push
cmpsl
loop
sub
push
ds
mov
ljmp
xchg
test
or
jmp
imulb
and
xchg
sbb
sti
xchg
adc
push
or
xchg
pop
or
xor
sbb
sar
orb
and
fs
pop
jo
es
stos
fsubs
add
jbe
mov
mov
daa
mov
xchg
sbb
enter
jecxz
xchg
loop
movsb
push
out
in
add
out
mov
div
pop
mov
push
mov
gs
jmp
cmpb
mov
in
lock
xor
clc
icebp
push
sbb
lock
sub
xor
dec
mov
adc
fdivl
cmp
pop
icebp
hlt
leave
lods
lret
inc
movsl
in
sbb
or
fimuls
ss
lods
cmp
rolb
aam
mov
outsb
lods
push
sub
movsl
pop
fnsave
divl
lret
js
sti
sub
mov
lret
lock
mov
nop
pop
add
fimull
jp
stc
push
int
out
push
mov
ret
mov
hlt
pop
pop
imul
aas
push
mov
mov
pop
push
fiaddl
mov
imul
je
inc
fisubl
add
stc
fisubrs
or
xchg
jp
cltd
adc
xchg
int
push
out
scas
rcrl
incl
inc
addr16
loop
mov
aad
xor
cmpl
sub
and
xchg
iret
or
cmp
push
pop
and
sbb
push
pop
in
cmpsl
mov
inc
ret
push
jmp
int
enter
jne
aaa
push
add
xor
xor
or
fmull
lahf
mov
iret
dec
inc
xchg
nop
pop
mov
pop
jmp
xchg
push
dec
faddl
leave
adc
ja
xchg
mov
mov
flds
ret
out
cs
test
out
xchg
dec
jnp
loope
test
int3
push
mov
mov
add
loope
adc
and
pop
ret
js
xchg
out
icebp
bnd
fildll
sbbb
int3
pop
gs
mov
in
test
pop
in
incl
pop
sub
mov
mov
sti
leave
sub
cmp
iret
and
insl
sub
push
and
pushf
xor
ret
dec
lds
inc
cs
ss
incb
in
xlat
push
mov
hlt
stos
inc
hlt
xor
jne
rcl
push
fwait
pop
dec
push
cmp
xchg
stos
call
pop
iret
loope
and
fsubrp
orl
aam
cmp
sub
ljmp
js
ds
sti
andl
test
inc
insl
aas
fildll
sti
test
cs
daa
or
adcl
dec
mov
movsl
gs
add
popf
js
cmp
test
notb
mov
fmull
cmp
mov
mov
cmpsb
cmp
mov
add
pushf
je
mov
jl
rcll
adc
pushf
outsb
test
rcrl
and
xor
roll
scas
in
mov
lret
sbb
sub
shlb
and
add
gs
mov
jns
in
or
and
pop
sbb
and
cli
mov
fwait
js
pop
add
push
adc
xchg
sbb
and
loop
call
scas
andb
push
push
and
or
jns
mov
or
sub
sbb
jnp
out
xor
xchg
into
rcrb
jo
pop
cmp
mov
jae
jl
clc
fbstp
xchg
stos
roll
fidivrs
mov
add
pop
insb
js
scas
sub
ljmp
int
push
push
daa
adc
xor
outsl
xorl
dec
outsb
repz
test
xchg
fs
xchg
rcl
das
orl
in
idivl
test
dec
cmc
lcall
push
pushf
test
outsb
and
push
push
dec
add
out
fcomps
shll
sbb
mov
xchg
or
mov
inc
mov
xchg
fdivl
fimuls
pop
es
xor
sahf
mov
mov
addl
push
mov
popf
jle
xchg
inc
cld
fwait
cmpsb
mov
aas
int
int
push
test
movhps
sti
repnz
mov
ss
in
dec
mov
and
movsl
pop
outsb
pushf
sub
bound
pop
test
jae
stc
sbb
add
jge
and
jno
cli
cmp
in
ds
adc
jmp
adc
push
imul
dec
and
push
arpl
lret
pop
lidtl
fdiv
mov
mov
dec
loope
push
test
xor
out
data16
iret
dec
adc
push
xor
mov
push
pop
fs
daa
sarb
inc
sbb
xchg
add
sub
sub
pop
das
inc
pop
sbb
xchg
push
mov
into
fsubrs
xor
mov
fsts
push
xor
leave
cmc
shl
ljmp
cs
dec
pop
ds
imul
push
cmpb
clc
jecxz
mov
maxps
mov
cmpsb
push
cmp
out
mov
mov
test
into
pop
bound
enter
dec
je
ret
scas
and
sub
push
pop
cltd
xor
cmp
xor
das
xchg
push
into
sbb
mov
xchg
jle
in
jae
ja
add
push
push
movsb
movb
mov
mov
out
mov
cmp
xchg
test
sub
sahf
insb
gs
and
cmpsl
nop
cmp
mov
aaa
mov
pop
fs
and
shlb
or
je
mov
in
jns
cmpsl
and
adc
mov
mov
sti
cwtl
adc
test
jg
xor
movsb
jge
mov
inc
dec
mov
sbb
mov
scas
sbb
pushf
fcmovne
ljmp
mov
gs
int3
xor
xchg
arpl
sbb
sub
jno
xchg
mov
frstor
inc
or
jecxz
aad
cld
dec
or
scas
mov
adc
and
pop
xchg
adc
push
dec
dec
jle
out
sbb
mov
stos
mov
insb
orb
call
mov
pop
popf
fidivrl
sbbb
sbbl
pusha
andb
jecxz
in
push
push
dec
scas
inc
cmp
out
aam
pop
cmp
out
xchg
lea
out
cmp
mov
call
in
divl
push
push
mov
dec
cmp
setae
mov
aas
cmp
xchg
xlat
xor
inc
aas
mulb
rcrl
lods
inc
addr16
push
inc
xchg
jnp
stc
fists
adc
dec
xlat
aas
or
inc
inc
fstl
insb
mov
movsl
push
and
int3
inc
mov
or
inc
cltd
rorb
dec
int
mov
cltd
xchg
popf
punpckhwd
aas
jo
adc
inc
pop
or
cmp
mov
and
enter
mov
dec
cmp
mov
inc
push
insb
jp
add
xlat
or
sub
subb
lcall
fnsetpm(287
mov
and
inc
sbb
iret
clc
mov
add
sub
fimull
adc
sbb
iret
jmp
es
imul
mov
and
adc
or
push
das
dec
or
gs
out
movsb
mov
mov
mov
lds
mov
jge
push
leave
sbb
push
cs
pop
sbb
out
push
fsubl
insl
inc
or
lds
out
xor
jmp
mov
dec
xor
pop
jl
adc
ret
test
mov
aad
test
mov
mov
adc
imul
out
cli
add
stos
popf
cmp
cmc
aaa
push
and
or
inc
leave
lods
xor
push
and
mov
xlat
cld
and
fidivs
mov
jle
je
mov
pop
sbb
iret
cs
nop
jmp
lods
cwtl
push
mov
call
mov
cmp
rol
data16
sub
xor
xor
mov
add
lcall
loop
imul
add
mov
ja
or
mov
dec
sub
pop
lods
jae
test
mov
and
inc
scas
shrb
xlat
mov
xor
and
mov
test
mov
or
bound
insl
sub
xchg
xchg
xchg
mov
sub
xor
xor
cltd
fdivs
xor
jb
dec
dec
xlat
sbb
mov
rcll
scas
mov
int3
outsb
pop
stos
clc
xchg
add
push
xchg
add
jae
sub
dec
scas
inc
aad
loop
stc
cmp
sbb
imul
rolb
push
push
lcall
cs
out
lock
out
jl
mov
mov
icebp
mov
iret
js
clc
sbbb
and
jb
pop
dec
cs
call
dec
fwait
popf
mov
mov
testb
rorl
xor
adc
movsb
mov
inc
fwait
lea
cmp
fucomi
xor
loopne
lcall
test
iret
adc
dec
outsl
nop
hlt
inc
jno
sub
cmpsb
jecxz
push
test
and
negl
adc
call
test
push
adc
mov
sub
mov
push
stc
cwtl
jge
cmp
push
push
iret
bound
movsb
jecxz
jns
push
movsb
movsl
xor
hlt
test
fimull
out
jno
fldl
popf
aaa
repnz
inc
imul
add
inc
add
in
sub
stos
js
test
mov
ficomps
jnp
mov
aas
bound
cltd
push
cli
push
and
ja
mov
subb
mov
xor
ss
inc
movb
stos
dec
push
mov
mov
mov
or
mov
sbb
popf
leave
repnz
fildll
sahf
flds
addr16
lahf
fldt
mov
inc
mov
aad
aad
sbb
inc
pop
push
pop
cmp
adc
sbb
xchg
pop
int
mov
jg
sbb
push
out
fstpt
addr16
jle
cmc
testb
add
xor
fistl
mov
inc
xchg
adc
adc
sub
pop
pop
sub
out
pop
outsb
mov
dec
add
loop
sbb
aas
gs
lahf
cmp
lods
jecxz
mov
dec
cmc
push
mov
aad
lods
pushf
jl
jge
aam
mov
xchg
fisttps
jae
mov
dec
enter
push
lahf
div
sbb
loope
loope,pt
test
je
stc
push
mov
lods
jne
ja
es
inc
jne
orb
stos
orl
ret
out
pop
filds
lret
xchg
sti
mov
insb
dec
jo
pop
lret
loopne
dec
sbb
pop
xchg
inc
pop
call
outsl
mov
adc
inc
loope
flds
inc
notb
xor
clc
inc
sarb
mov
rcrl
inc
loopne
dec
inc
imul
jb
push
les
mov
xor
jecxz
stos
inc
cmp
add
jge
in
loopne
sbbb
add
in
sbb
mov
aaa
movsl
cli
rorl
cmp
lds
and
xor
pop
adc
inc
mov
arpl
xor
into
jmp
adc
cli
sub
lock
pusha
imul
lock
push
adc
jmp
cmp
repnz
fists
cmp
mov
ss
adc
aam
aas
sbb
cmp
setg
adc
cmp
and
pop
pop
sbb
jle
pop
aas
adc
jb
dec
lea
dec
cs
rcrl
or
push
adc
lea
pushf
popf
sub
aas
push
sbb
jbe
add
mov
cli
or
xor
and
inc
and
or
pop
mov
cld
mov
les
dec
xchg
stc
adcl
sub
inc
push
or
lret
add
stc
movsl
mov
jl
icebp
xchg
mov
add
into
addb
xchg
js
hlt
leave
mov
adc
inc
pushf
rorb
dec
xlat
sti
scas
aad
stc
xchg
cltd
dec
inc
pop
cmp
xlat
ja
jg
push
xchg
pop
adc
xlat
push
lds
in
sub
and
ljmp
lcall
call
jne
adc
mov
jns
clc
sub
or
xchg
push
push
push
fcmovu
push
repnz
test
mov
mov
je
or
ss
mov
repz
ffree
mov
push
jae
ss
add
iret
nop
test
not
xor
dec
pop
mov
aaa
ficompl
dec
add
out
das
inc
leave
maskmovq
divl
dec
lock
xchg
imul
fwait
cmc
inc
dec
cmp
loop
xchg
mov
mov
jle
fisubl
cmp
in
and
call
mov
inc
dec
mov
and
call
mov
sbb
cmp
pop
xchg
pop
shlb
mov
loopne
pop
hlt
dec
push
int3
mov
sbb
or
cli
test
scas
loope
negb
push
inc
cmp
iret
decb
push
ret
movsb
inc
sub
sbbl
jl
cmp
sub
stc
push
sbb
sarb
jp
dec
mov
mov
jne
cmp
loop
cmp
mov
lcall
je
xor
push
xor
xor
sbb
add
movsl
icebp
inc
push
cmp
mov
dec
or
inc
cmp
push
sbb
movl
scas
es
aam
addb
loopne
cmpsb
push
test
or
rorb
stos
inc
in
ud0
pop
mov
jno
dec
and
push
dec
data16
push
push
cltd
sbb
and
pop
sbb
fdivl
clc
push
mov
push
test
outsl
or
cltd
test
insl
fcompl
test
fwait
es
xor
jg
nop
jecxz
sub
xor
fstpt
mov
in
push
dec
cltd
sub
les
mov
mov
cmp
fnstcw
idivl
popf
sbb
lods
inc
cmp
jge
outsb
jl
mov
adc
and
daa
insl
gs
scas
out
and
cmpsb
xchg
pop
adc
mov
and
jns
jecxz
mov
es
call
std
inc
jp
mov
or
scas
xor
xchg
fwait
or
or
nop
fs
iret
mov
out
rorb
adc
xor
xor
and
mov
push
push
lahf
xor
and
loope
insb
lcall
pop
mov
movsb
cltd
fldenv
push
aad
xor
out
cmp
add
jle
enter
xlat
lret
out
bts
les
xorb
push
test
mov
dec
mov
push
dec
rcl
pop
dec
jno
add
pop
adc
loop
jns
xchg
jp
addb
test
rolb
enter
xlat
rcrl
cmp
ds
out
xchg
sub
or
pop
mov
fwait
iret
cmp
das
ret
xor
or
xlat
cmpsb
mov
mov
rcr
mov
movsb
scas
pop
mov
sbb
and
insb
cltd
push
pop
mulb
add
fidivs
test
lods
jbe
push
inc
xor
push
and
jbe
or
sub
aas
repz
les
fisttpll
mov
cmpsl
add
sbb
push
jno
cmpsl
xchg
lcall
leave
or
sahf
jmp
sarb
fs
es
aad
xchg
popa
pop
dec
and
popa
xor
sub
push
in
mov
push
pop
es
push
hlt
jl
push
and
orl
inc
aaa
pop
pop
sarl
push
and
int3
aas
outsb
fidivl
sub
sarl
mov
stos
sub
cmp
mov
sahf
clc
xor
jnp
or
ficoms
subb
lret
adcl
adc
test
lea
dec
dec
std
xchg
ja
scas
or
add
lock
push
aam
rol
sbb
push
lods
andnps
std
sub
or
jne
lret
in
cmp
push
pop
add
sarb
push
data16
cld
jge
jno
or
mov
push
cmpsb
pop
mov
xlat
pop
cli
popf
and
sbb
cmpsb
xchg
mov
bound
lret
pop
jnp
mov
push
or
cmpsb
inc
popa
ret
xchg
out
leave
xchg
push
cltd
sarb
movsl
pop
sub
push
add
jb
fmull
ds
sub
xchg
popf
js
xor
int3
inc
shlb
mov
aaa
ud0
repnz
mov
loopne
ror
xor
fistl
xor
pop
cld
aad
mov
fucomp
push
out
int
orl
popl
push
cmc
mov
fistl
addr16
mov
rorl
imul
pushl
push
fidivl
inc
js
fwait
xchg
cwtl
cwtl
rcl
jns
scas
out
jge
cli
pusha
push
cmc
push
scas
xchg
mov
lahf
cmc
leave
sbb
mov
test
movsl
daa
sub
imul
mov
popa
movsl
loop
lret
mov
dec
arpl
fsubl
jb
std
adc
es
mov
std
fsubl
or
jno
jmp
sbbb
dec
cltd
inc
and
ret
out
cwtl
jae
les
sub
ror
jle
es
divb
mov
sub
icebp
add
in
pushf
push
mov
xchg
xchg
imul
jmp
js
add
loope
lret
push
ret
adc
xchg
inc
fsubrl
ds
in
pop
sbb
inc
cmpsl
adc
sti
pushf
inc
push
fistps
push
test
and
daa
xchg
and
cmp
pop
adc
sub
sti
jmp
pushf
in
popa
inc
shlb
insl
in
shlb
xor
pushf
adc
dec
lock
dec
push
mov
icebp
adc
rclb
cmp
mov
push
rcr
pop
cmc
mov
cli
subl
dec
adc
rorl
cmpsb
cld
mov
mov
jbe
xor
and
je
inc
out
ljmp
daa
ret
adc
sbb
lret
xchg
leave
lea
inc
xchg
pop
stos
mov
sub
xchg
xchg
inc
or
sub
cmp
and
in
dec
inc
pop
iret
leave
test
ja
enter
and
lock
push
dec
loopne
cmp
pop
inc
inc
lock
cmpsl
xor
test
outsb
movsb
es
jg
lods
aas
push
int3
icebp
scas
adc
aad
mov
fdivrl
jne
jb
xchg
enter
ret
push
push
pushf
subl
mov
fnstsw
lock
mov
stos
cmc
int
inc
and
in
lahf
mov
sub
js
data16
push
mov
pop
inc
sub
lods
dec
in
xchg
and
push
lidtl
pop
insl
test
rclb
es
out
fidivrl
cltd
mov
mov
jl
rolb
dec
out
cld
mov
outsb
or
inc
inc
test
mov
mov
xor
ja
cwtl
xor
movsb
decl
daa
fistpl
cli
orl
in
aam
push
xchg
push
xchg
cmp
mov
sub
sbb
xlat
jge
and
inc
sti
sub
test
std
loop
jno
lea
adc
pop
outsb
jbe
xchg
push
push
aad
xchg
and
and
cmp
jge
inc
inc
into
subb
nop
sbb
adc
addr16
fcoms
jmp
xchg
cmp
insb
imul
fcoml
sub
cmp
clc
fs
dec
xchg
sbb
ret
in
jne
out
scas
mov
cld
pop
imul
ja
ss
sub
add
inc
add
dec
xchg
adc
fwait
test
cmp
jns
cwtl
fidivrl
jg
xor
xchg
repnz
cmp
test
imulb
adc
negl
pop
arpl
sbb
dec
sub
add
scas
fdivs
lea
fistpll
cmp
lahf
pop
pop
jg
sbb
mov
ja
out
popa
jbe
xor
and
sbb
lock
pop
stos
cmp
int3
nop
adc
out
shrl
aam
and
popf
and
lret
mov
sbb
cli
push
ja
out
xor
sbb
sub
push
xchg
xchg
imul
ds
cmp
cmpsl
and
es
sub
cmp
sub
popf
es
push
xchg
push
jbe
and
les
pop
mov
cltd
shlb
pop
xchg
jg
fidivrs
ljmp
aad
dec
loopne
fs
xlat
lea
idivb
and
ss
push
loop
fldt
in
dec
test
jae
inc
pop
mov
sub
addr16
mov
loopne
pop
or
ja
movsl
add
push
pushf
ss
div
mov
adc
mov
cmp
inc
sub
xor
ficomps
mov
call
jmp
out
orl
and
lret
cld
lret
add
cmpsb
lahf
je
or
aad
or
cmpsl
imul
int
or
popf
lret
dec
sar
dec
out
jge
dec
and
jmp
and
out
mov
cmpsb
adc
xchg
dec
or
cld
cmp
mov
mov
movsl
mov
inc
fmulp
jnp
into
xchg
sbb
jmp
shrb
push
ss
mov
jmp
push
nop
icebp
mov
in
dec
pop
je
dec
or
push
notl
sub
mov
or
or
add
aad
dec
xor
into
add
and
fists
testl
or
dec
and
gs
xchg
jb
aaa
dec
stos
dec
cmp
sti
cmp
iretw
inc
addr16
mov
mov
lods
push
adc
cmc
mov
push
cmpsb
mov
pop
cmp
mulb
shr
adc
and
push
cmp
stc
adc
inc
inc
dec
dec
mov
adc
pop
hlt
ret
test
jecxz
jmp
test
mov
stc
sysenter
pop
cmpsb
ror
sub
pop
or
push
push
std
sub
mov
fiadds
stos
xchg
mov
movsb
dec
lret
adc
inc
lea
push
lcall
adc
mulb
jo
and
dec
and
popl
cltd
or
xor
mov
push
push
push
cmp
dec
fs
dec
push
ret
or
sub
pop
in
mov
dec
out
jno
jns
sbb
pop
dec
inc
adc
arpl
fists
jl
js
mov
adc
sbb
jbe
dec
jp
scas
clc
push
aad
inc
shl
dec
xchg
pop
and
jmp
inc
in
dec
push
jle
and
jle
lods
lcall
insl
fwait
sub
movsl
mov
fs
sub
mov
dec
andb
mov
popa
cwtl
add
call
cmpsb
xchg
ret
loope
arpl
sbb
stos
icebp
or
adc
sub
std
data16
aas
or
add
pop
add
sti
cmp
lods
pop
xor
add
sub
mov
sbb
fisubrl
enter
mov
aaa
or
inc
xchg
insb
sub
enter
je
stos
jo
push
movsl
leave
cmp
lods
sbb
mov
pop
dec
push
xor
dec
mov
insb
stos
and
sti
fwait
shr
push
mov
add
xor
pushl
int
fs
xor
pop
ficompl
sub
imul
cmp
aam
mov
sub
insb
jo
daa
cmp
xor
loop
push
mov
mov
fwait
mov
lahf
in
push
xor
pop
lods
add
sbb
cmp
inc
xor
scas
bound
cwtl
sahf
xor
add
and
mov
out
stos
mov
jge
daa
test
aas
mov
lret
subl
mov
in
loope
data16
ret
cmp
cli
xchg
cs
lods
push
dec
icebp
add
aam
sbb
mov
iret
adc
xor
lods
pop
out
inc
clc
in
xor
test
divb
fwait
lds
dec
push
ja
and
and
ljmp
and
push
push
dec
imul
lret
xor
or
inc
add
pop
push
inc
sub
cltd
dec
xchg
movsl
adc
or
push
and
in
xchg
das
mov
idiv
arpl
inc
shlb
xor
aad
mov
add
ret
sti
or
mov
adc
flds
les
test
loop
ret
pop
das
mov
sarl
mov
test
rorl
jecxz
lret
movsb
jmp
outsl
hlt
fbld
adc
ljmp
ret
fidivs
jg
shr
in
or
les
jnp
aam
rol
test
sbb
inc
pop
addr16
and
arpl
pop
push
in
lods
mov
leave
ljmp
xlat
sbb
push
pop
lods
mov
lahf
in
ds
fidivrl
cltd
arpl
addr16
lahf
aad
mull
fwait
cmp
jmp
adc
xchg
rorl
hlt
sub
sbb
mov
jbe
mov
jp
xlat
fnstcw
and
xor
xchg
push
cmpsl
push
jl
lods
sbb
scas
xor
pop
fnstcw
das
cli
and
sbb
scas
fcom
lods
clc
sbb
cmp
sub
push
mov
mov
cmp
cmpsl
fdivs
rorb
push
fiaddl
cmp
stos
push
adc
les
push
pop
cmp
int3
pop
clc
popf
ret
das
dec
cmp
decb
jmp
fmulp
add
std
mov
sub
pusha
ret
push
inc
jae
mov
adc
mov
pop
dec
shll
dec
and
outsl
xchg
cmpsl
ja
lret
jmp
stc
inc
imul
or
nop
jmp
fstl
fmull
mov
repz
in
adc
mov
push
add
sbb
pop
push
in
dec
std
mov
popf
in
loope
iret
in
mov
out
push
test
fmull
sub
dec
xchg
dec
ret
test
push
call
stc
cltd
mov
mov
aaa
gs
hlt
pop
in
dec
loop
cs
cmc
hlt
cmp
scas
sbb
mov
inc
cmp
add
in
neg
jne
xlat
sub
xchg
test
mov
lret
stos
adc
ds
repnz
inc
arpl
mov
mov
cmp
pushf
cwtl
int
push
hlt
aaa
jp
insl
test
scas
xor
dec
lds
lea
jmp
pushf
mov
in
fisttpll
rcll
pop
push
hlt
ret
inc
imul
pushf
lods
or
jnp
aas
and
stc
mov
inc
cs
mov
cmp
push
jno
jbe
push
fisubrl
xchg
jp
insb
add
dec
hlt
sbb
dec
sahf
mov
and
inc
dec
push
aaa
lods
outsb
mov
cmp
fmull
adc
out
cmp
stos
and
in
add
inc
flds
xchg
lock
push
popf
test
ds
popf
add
and
dec
pop
cwtl
or
faddl
mov
or
mov
mov
adc
jne
out
cmp
xchg
push
daa
testl
xor
cs
add
cli
mov
bound
bnd
pop
lcall
jge
lea
fwait
je
inc
dec
push
push
fnstenv
push
inc
or
mov
xor
scas
jne
jecxz
fdivl
mov
cmp
scas
mov
and
arpl
xchg
fidivrs
movsb
xchg
jp
dec
shlb
mov
pop
xchg
mov
mov
out
push
xchg
jl
ja
mov
stos
rcrl
je
jb
daa
push
movsb
push
jl
cli
ja
test
enter
std
nop
ds
subl
xchg
sarl
es
jno
mov
lds
add
rolb
sbb
fstl
jg
out
ja
scas
xor
insl
ss
jbe
xchg
fcmove
jmp
mov
jns
je
sub
lods
xchg
jb
or
jae
mov
jne
aad
cmpsb
mov
mov
outsl
insl
xchg
in
fistl
cmc
sbb
cmpsb
pop
leave
cmpl
in
pushf
dec
push
popf
push
and
xchg
xchg
js
sub
jns
push
push
sub
clc
mov
dec
add
ja
fldcw
and
and
dec
mov
push
jmp
mov
mov
mov
stos
xor
fisubrs
jge
xchg
test
adc
mov
or
mov
pop
arpl
xchg
mov
dec
and
xchg
xchg
xlat
push
sub
cmp
xchg
pop
mov
call
adc
and
dec
jg
cld
sbb
aas
out
cmp
stc
repnz
sbb
jbe
mov
add
inc
fwait
out
jne
jno
mov
sbb
in
mov
adc
and
sbb
mov
xor
push
sbb
push
or
jl
mov
sbb
push
clc
adc
or
and
pop
insl
jb
cs
dec
inc
cld
fwait
scas
into
add
clc
bound
sub
outsb
repz
aam
push
pop
mov
push
pop
jne
xor
add
xchg
sub
pushf
adc
jb
push
lods
xor
inc
gs
mov
and
xchg
dec
adc
sub
lahf
cmp
das
cltd
fdivl
push
mov
es
lcall
ret
in
pushf
mov
cmpsb
dec
into
and
push
enter
jg
test
xor
pop
push
aas
add
xchg
adc
xchg
rcl
jo
int3
xlat
dec
cmc
push
jae
js
stos
test
mov
push
pop
jb
xchg
pop
scas
pop
jl
xchg
cld
repnz
dec
mov
cltd
insl
jnp
dec
adcb
lds
das
mov
mov
rcrl
cli
out
cwtl
ficoms
add
aas
adcl
pop
sahf
mov
test
xor
cmp
xchg
sub
adc
push
mov
sub
scas
adc
sbbl
mov
xor
xchg
lret
and
xchg
or
mov
jp
mov
mull
imul
jno
adc
jae
paddsw
jnp
outsl
das
push
jg
sub
aas
jecxz
dec
mov
insb
sbb
jno
mov
cmp
rcrb
sar
xor
mov
sbb
test
push
sbb
jnp
movsl
sbb
leave
inc
push
jecxz
sub
sub
jp
or
fcoml
data16
lcall
pop
jmp
jo
outsw
idivl
add
fwait
add
fdivrl
xchg
inc
aaa
rcll
ljmp
paddusw
push
mov
js
dec
mov
lea
dec
fwait
mov
mov
shll
lret
xchg
int
xor
aaa
push
dec
xchg
cmpsb
aaa
fmull
scas
xchg
sbb
rcr
pushf
jp
fcoml
push
pop
adc
pop
push
sub
ret
js
enter
stc
in
xchg
sahf
xchg
leave
xchg
cmp
leave
inc
mov
daa
test
popa
ret
inc
push
or
xchg
gs
mov
mov
test
and
dec
data16
shll
mov
add
mov
in
in
out
adc
xchg
cmp
outsl
sahf
pop
sub
sbb
push
rol
cltd
push
sarl
fmull
mov
fbld
inc
xor
les
or
and
dec
mov
lock
adc
jo
and
dec
in
mov
das
sbb
ficompl
adc
insl
stos
cmp
test
lret
out
in
icebp
or
stc
cmp
cmpsl
sbb
mov
test
sub
pop
stc
inc
xchg
and
inc
push
lcall
mov
sub
icebp
testl
les
sbb
icebp
pop
daa
sbb
cmp
mov
mov
cmpsl
pop
cltd
xor
ljmp
inc
imul
cli
or
mov
into
ret
ss
jae
iret
cmp
shll
dec
sub
fisubrl
and
int3
xchg
inc
lods
mov
fisubrs
inc
cld
mov
adc
sbb
mov
and
clc
nop
lods
cmp
push
pushf
xor
sbb
or
add
pop
or
ret
mov
popa
inc
enter
sbb
push
fwait
ret
test
jns
jo
pop
dec
cmp
mov
js
mov
pop
shll
repnz
mov
cltd
jne
sub
rclb
add
adc
cltd
xor
add
mov
scas
inc
dec
push
call
dec
lahf
dec
imul
sub
inc
inc
cli
pop
gs
ret
loopne
push
inc
cmp
ja
movb
push
sub
cmpsl
outsl
sub
xchg
aad
into
and
xchg
loopne
xor
jo
jle
sbb
add
in
jg
mov
shl
pop
sub
jecxz
push
mov
cmp
nop
lret
les
test
and
xor
insl
or
push
sbb
mov
and
ficoms
sbb
idivl
aas
dec
divl
push
mov
pushf
adc
testb
jge
inc
push
or
sti
jmp
out
mov
lahf
fwait
jb
sub
or
mov
out
sahf
roll
dec
jns
aaa
mov
iret
inc
cld
ret
ret
lds
xorl
lds
xor
cmp
les
and
insb
and
or
mov
inc
mov
jmp
jg
fimuls
push
sahf
lret
xor
gs
cmp
mov
insl
ret
pop
lcall
fwait
jns
rcrb
mov
imul
sbb
dec
mov
mov
lret
out
sub
push
repz
or
add
lock
xchg
shlb
mov
pop
loop
mov
ret
out
fistpll
pop
xchg
adc
cmp
mov
or
bound
out
out
hlt
xor
pop
dec
orl
ss
adc
adc
mov
mov
adc
outsb
mov
into
xchg
aaa
daa
push
dec
and
mov
inc
addr16
shrb
xor
adc
iret
push
lahf
push
pop
mov
mov
leave
lret
dec
jns
xchg
lds
es
mov
data16
outsb
loopne
add
sti
mov
dec
add
pop
in
testb
shl
cwtl
sarl
ds
jnp
xchg
test
ficompl
out
mov
or
pop
push
lods
arpl
xchg
cmp
mov
mov
hlt
mov
jno
inc
and
pop
lcall
adc
sahf
lea
mov
aam
fdivr
inc
incl
jne
inc
loop
ficompl
or
insl
imull
lods
mov
dec
repnz
pop
or
adc
xor
mov
out
mov
popa
js
or
sub
faddp
push
mov
test
bound
out
rol
sti
int3
mov
cmp
in
lea
and
push
cmpsb
stc
out
xchg
aaa
pop
iret
aaa
imul
push
cmp
mov
int
idivl
inc
or
in
jmp
pop
lds
adc
fisubs
pop
add
lcall
mov
arpl
inc
add
push
inc
repnz
cmp
pop
xor
adc
in
dec
pop
nop
ret
scas
mov
ja
sbb
push
jmp
inc
xor
pop
pop
mov
pop
lcall
inc
jne
adc
xor
adc
dec
cmpsb
out
xchg
or
loopne
outsb
sbb
pop
and
pop
pop
in
test
movsb
jo
or
shrb
sub
sti
mov
lea
sub
push
mov
xorl
add
xor
mov
mov
mov
rcrl
push
sbb
stos
sbb
xchg
lret
cmpsl
test
sbb
cs
sahf
xlat
sarb
divb
jnp
jno
and
and
cmc
push
loop
and
push
xchg
data16
cmpsl
pop
ja
es
pop
push
fimull
je
push
testb
cs
mov
sub
mov
add
test
cwtl
loopne
or
jl
push
mov
mov
push
xor
adc
jbe
clc
clc
jle
and
pushf
imul
jle
dec
mov
pop
ja
or
xchg
or
in
pusha
dec
fiaddl
dec
subb
sti
mov
pop
xor
fwait
push
sahf
fdivl
add
jge
pusha
sbb
dec
ja
sub
pop
clc
nop
cmp
fstl
jecxz
pushf
push
mov
lea
push
call
cmc
mov
inc
xrstors
int
dec
loopne
iret
outsl
xchg
dec
add
leave
repnz
leave
pop
bound
cmp
int
insl
sub
jg
sub
jl
add
jne
iret
negb
or
subb
jbe
push
or
xchg
adc
jmp
shrl
fisubl
pushf
push
sub
push
push
jg
mov
mov
cltd
aam
adc
sbb
cmpb
mov
enter
sbb
out
cmp
jnp
lock
lods
in
dec
mov
jl
jmp
cmp
in
mov
inc
dec
lret
fists
and
push
lea
inc
sahf
sbb
dec
pop
sbb
mov
xchg
inc
test
dec
jp
sbb
push
mov
insl
jb
inc
repnz
cmp
cmpb
mov
inc
neg
fdivs
cmp
xchg
lods
mov
or
das
ret
push
push
xchg
xchg
jae
and
int
aam
outsb
push
add
cld
lret
jns
xor
push
ljmp
pop
ss
sbb
dec
mov
xchg
pushf
imul
pop
add
push
rcrb
sub
and
inc
push
push
ret
lods
mov
mov
pop
insb
and
sbb
dec
hlt
out
fs
fisttps
sbb
sbb
dec
popa
jne
nop
inc
sbb
lods
dec
dec
mov
cmpsb
and
mov
inc
pop
repnz
emms
lods
adc
fldenv
and
push
into
idivb
loop
f2xm1
aaa
sub
fidivs
inc
push
xor
in
dec
stos
and
rcrl
sbb
test
push
out
int3
int3
repz
adc
test
mov
add
lock
enter
icebp
mov
lcall
mov
mov
mov
scas
sbb
mov
out
aaa
inc
cli
imul
xor
cs
lds
add
imul
push
or
stos
mov
cld
push
sub
jmp
dec
movsb
push
adc
icebp
aas
mov
jp
adc
loope
decl
dec
stc
shrb
or
ss
call
adc
pop
adc
mov
jo
in
ds
xlat
push
ret
mov
rcrl
insb
lods
mov
loope
adc
cltd
cmc
cli
push
dec
xchg
js
lcall
xor
lret
add
mov
call
aas
mov
mov
jmp
inc
out
fs
adc
movsb
jp
xlat
ret
xchg
gs
pop
push
fwait
jno
push
push
push
stc
mov
fidivl
or
mov
and
or
ss
mov
xchg
rclb
shl
or
sarl
fwait
movsb
iret
mov
into
repz
mov
pop
adc
das
jp
cltd
jecxz
push
lods
mov
jnp
scas
in
mov
lea
cmp
xchg
lods
ja
sbb
ret
idivl
mov
mov
jl
jno
dec
adc
jg
das
lahf
out
mov
imull
jno
sbb
cmp
inc
in
aas
test
fisubs
cmc
shll
jnp
sti
adc
repz
mov
or
pop
les
lsl
push
ljmp
mov
pop
sub
cmp
pusha
pop
lret
mov
faddl
outsb
test
push
push
mov
sub
ljmp
pop
in
xchg
sub
push
fs
es
es
popa
inc
xor
push
scas
add
sub
in
fabs
fcoml
shll
sbb
into
fbld
scas
xchg
and
jp
pop
int3
push
repnz
jge
mov
fcoml
xor
mov
out
cmpsb
or
mov
in
add
stc
outsl
out
ds
adc
sbb
in
hlt
jp
mov
cmpsl
push
lods
or
and
repz
push
mov
xchg
rcl
adc
mov
push
xor
pop
pop
and
frstor
loop
adc
sbb
cltd
enter
pop
lds
mov
mov
lods
add
jmp
popf
xorb
out
inc
sbb
cmp
add
push
mov
in
sbb
movsb
xor
jl
sub
movl
mov
sti
rclb
mov
and
cmpsb
xchg
xchg
out
add
in
test
sbbb
loop
fldenv
sub
cmpsl
sub
mov
loope
dec
jl
xchg
add
aad
insl
cld
xor
movsb
pusha
jae
shlb
mov
out
cmpsb
jo
xor
sahf
lcall
scas
dec
daa
xchg
adc
xor
shlb
dec
out
xor
adc
push
and
push
adc
push
cmp
or
sbb
mov
in
sub
imul
movsl
call
push
inc
xor
dec
mov
dec
mov
ds
das
std
mov
jle
fsubr
push
pushf
sti
dec
and
cmp
stos
pop
jle
dec
js
jnp
insl
xchg
mov
inc
xor
adc
mov
jmp
imul
sub
cs
inc
mov
loope
in
sbb
sbb
cli
loope
andb
stos
add
xor
inc
insl
dec
aas
gs
pop
mov
pop
lds
mov
jns
es
push
and
gs
and
fisttpll
mov
xchg
stos
dec
js
push
ret
test
jno
in
bound
stos
mov
ss
scas
imul
sbb
push
lret
jge
insb
lock
cmp
jno
mov
fstpt
ljmp
fs
outsb
pop
pop
jne
adc
clc
je
mov
loop
fsub
ret
mov
lea
and
js
arpl
and
stc
movsl
pop
and
in
insb
mov
bound
cmp
inc
pop
or
push
dec
movsl
fdivrl
das
test
test
lea
out
push
ret
fadds
mov
lods
inc
xchg
sub
mov
jb
jp
sbb
pop
je
push
and
movsb
or
mov
addb
push
ss
in
mov
les
cmp
mov
mov
push
and
nop
sub
sbb
roll
jns
cmc
xchg
dec
out
sub
dec
xchg
imul
mov
sti
and
xor
test
cwtl
movsb
in
outsl
push
sbb
and
sub
test
scas
loopne
arpl
in
lcall
lock
mov
outsl
cmpsl
push
xor
sbbl
mov
negl
test
sub
cmp
sbbl
mov
shr
inc
rcrl
push
data16
inc
push
mov
adc
lahf
xchg
ja
jb
shlb
xor
sahf
mov
pop
cwtl
jno
lcall
jnp
popa
xor
iret
cmpsl
xchg
cli
inc
cmc
mov
int
push
add
fsts
xor
test
cmpsl
mov
inc
ljmp
call
jae
mov
xchg
push
out
sbb
mov
push
xchg
cmpb
jbe
mov
in
clc
test
sub
adc
addr16
insb
mov
jp
popf
ja
adc
je
stos
imul
sbb
scas
loope
int
dec
mov
sub
xor
mov
mov
xchg
push
rcr
add
sub
lock
mov
inc
bound
cmc
insl
sub
stos
mov
mov
cmp
sti
test
pushf
cmp
fwait
lods
aas
lea
out
mov
movsl
cmpsb
filds
jns
adc
ret
in
stos
cmp
xor
cmp
out
sub
jg
push
mov
jnp
push
mov
xlat
mov
sbb
jg
pop
xchg
mov
add
pop
push
push
or
sbb
and
mov
ja
adc
jg
shl
xlat
in
std
pop
lock
in
push
and
mov
cs
in
mov
int3
popa
nop
dec
xchg
and
mov
mov
out
sahf
jbe
hlt
dec
cltd
xor
xor
fs
call
stc
xchg
mov
mov
fisttpl
addr16
mov
add
pop
mov
sbb
push
mov
sarl
out
orb
sub
sub
cmp
sub
mov
and
xchg
push
pop
jne
push
in
push
aaa
inc
or
clc
mov
gs
jae
fmull
cmp
cmp
dec
addr16
and
mov
loop
aas
xor
out
mov
dec
xchg
mov
ret
shr
cmp
fisubs
ljmp
icebp
pushf
leave
std
push
fidivl
in
outsb
test
cwtl
lar
movsb
rcl
xor
psubusw
lcall
sbb
in
mov
dec
add
dec
mov
adc
inc
mov
pusha
mov
mov
orb
push
fmull
jb
or
das
call
shlb
imul
js
fucom
roll
mov
add
and
ffree
out
mov
cmc
rclb
ja
push
ja
fstl
push
or
mov
mov
pop
aaa
sub
jb
repnz
cmc
ret
mov
test
push
shrl
pop
cmp
stos
bnd
push
stos
repnz
or
sahf
cmp
sbb
lcall
stos
rolb
and
pop
cmp
cltd
pusha
xchg
pop
orl
icebp
and
subl
pop
and
das
xchg
xor
xor
lds
das
inc
mov
pop
jle
fadd
mov
int
int3
and
xchg
xchg
xchg
repnz
add
xchg
rcr
cmp
aam
mov
pop
sti
lods
imul
gs
mov
in
and
pop
pop
imul
jb
xchg
cmp
enter
lock
push
cmovp
inc
cmp
test
fcmovnb
andl
repnz
insb
add
push
sbb
mov
pop
push
mov
or
mul
jns
call
test
xchg
rorl
adc
sbb
jge
push
loope
sub
aaa
les
adc
ret
xchg
pop
gs
adc
inc
icebp
add
cmp
rcrb
arpl
cmp
out
icebp
mov
sbb
push
push
sbbb
xchg
std
xchg
pop
fs
pop
testb
in
xorb
aam
nop
push
hlt
mov
xchg
ja
mov
pop
jo
xlat
or
adc
push
mov
or
and
xlat
mov
inc
dec
sbb
xchg
jns
adc
nop
rorl
mov
das
sub
cmc
fists
jle
adc
pop
pop
and
adc
jbe
sub
popf
sbb
push
loopne
mov
add
cmp
mov
xor
sbb
jne
or
stos
and
js
fisttps
repz
jl
xchg
fs
lahf
cwtl
sub
mov
pop
push
mov
add
or
mov
movsb
les
std
repz
out
loopne
shr
imul
inc
and
xchg
cmp
mov
dec
mov
mov
cmp
loopne
jle
jns
add
or
dec
lods
sahf
mov
mov
stos
shl
xchg
ret
mov
rclb
fwait
xor
test
bnd
cs
cli
jl
xor
adc
xchg
imul
ret
jae
push
jae
lock
adc
cmp
xor
sbb
pusha
adcl
inc
mov
adc
xchg
sbb
lea
xor
inc
xlat
xchg
jo
popl
jmp
sub
jg
jmp
dec
js
mov
in
or
aad
cmp
mov
jecxz
lret
bound
leave
into
mov
push
scas
inc
dec
insl
or
jnp
pop
mov
out
push
outsb
adc
ljmp
dec
inc
pop
dec
pop
push
rcll
mov
sti
icebp
inc
push
sbb
cltd
dec
pop
jns
xor
mov
xchg
pushf
or
pop
mov
mov
add
dec
mov
js
ss
sbb
punpcklwd
fsubs
xchg
push
or
xlat
and
out
jp
xor
sarl
data16
pop
or
loope
adc
xchg
andb
rorb
lds
and
and
mov
clc
iret
ss
or
mov
inc
or
divl
pop
xor
cmp
ss
cmc
test
gs
call
test
hlt
mov
push
cld
dec
fcom
cwtl
leave
stc
pop
lret
lret
sub
loopne
jne
xor
js,pt
add
lods
test
mov
lods
jb
push
ret
sbb
xor
aad
je
mov
adc
inc
mov
aas
xchg
in
clc
aas
xchg
js
add
pop
or
push
mov
pop
adc
inc
mov
pop
jnp
lea
mov
mov
test
xlat
mov
pop
stos
repnz
rcl
jmp
arpl
mov
repz
subb
shr
mov
mov
adc
aam
jg
xor
mov
ret
clc
cmc
mov
mov
sub
push
lahf
push
shr
out
ret
test
sbb
scas
inc
xchg
mov
sub
daa
xor
mov
bound
fsubrl
roll
into
sbb
jno
sub
fistps
test
mov
mov
jnp
shll
popf
dec
pop
dec
outsl
xor
push
mov
rdmsr
nop
inc
lret
or
pop
stos
subl
xchg
cmpsb
and
fistl
jle
fs
in
inc
mov
jne
insl
mov
sub
and
int
inc
pop
inc
out
and
addr16
icebp
daa
mov
xchg
fisubrs
jbe
stos
jae
movsb
pop
sbb
push
push
mov
orl
jno
sub
push
pop
mov
cmpsb
jne
mov
sub
mov
cwtl
xchg
test
adcl
ds
sarl
sbb
xchg
stos
adc
cmp
mov
pop
outsb
mov
dec
mov
loopne
cli
testb
add
lret
inc
into
test
iret
std
jecxz
lretw
jecxz
pop
ljmp
stos
loopne
mov
and
adc
outsl
sub
iret
into
dec
jbe
xor
sarb
adc
mov
push
xchg
sub
inc
cmp
repnz
dec
nop
idivl
mov
add
or
push
subl
xor
xchg
dec
xlat
inc
sahf
clc
aas
imul
mov
xchg
pop
push
jmp
jno
negb
rolb
xor
clc
out
mov
into
inc
test
ljmp
dec
ja
inc
mov
xor
xor
pop
lds
fsubrp
sub
cld
fisubrl
add
fisubs
fstpt
sbbb
popf
adc
adc
out
add
adc
lods
and
jae
mov
lahf
push
inc
pop
and
add
dec
jnp
push
add
test
js
pop
mov
and
lods
rolb
out
ja
push
pop
inc
int3
xor
movsl
cmp
mov
jp
popa
adc
adc
jnp
flds
shrb
jns
ljmp
fs
mov
call
fimull
hlt
loopne
mov
xchg
and
pop
clc
sbbb
mov
inc
call
or
jge
scas
enter
mov
out
pop
adc
sbb
add
aaa
scas
jp
adc
pushf
mov
xorl
rorl
add
jb
mov
je
inc
das
jl
stc
imul
lahf
push
jb
mov
xor
jmp
push
sub
inc
and
jnp
sub
or
or
jl
imul
adc
movsb
dec
mov
pop
xchg
test
out
cmp
aam
push
dec
mov
cmp
loop
push
icebp
mov
sbb
jns
imul
dec
cmc
and
and
xor
xchg
fidivrl
xchg
outsb
jne
or
ljmp
ds
pop
in
cmpsl
fisubrs
hlt
xor
jg
out
push
dec
outsb
pop
rclb
mov
das
arpl
add
adc
addr16
mov
fsubl
nop
push
movsl
pop
pop
add
das
outsl
int3
lret
std
mov
or
mov
pop
popa
inc
popf
fwait
cltd
pusha
int
xchg
and
add
fldl
or
mov
jp
xchg
stos
imul
test
sbb
or
lods
push
aaa
cmp
ret
rcrb
pop
or
inc
cmpsl
mov
xor
std
mov
ret
push
mov
sbb
stc
jns
add
mov
xchg
enter
jo
mov
push
or
loop
adc
and
lods
cld
ret
lods
sti
sub
mov
push
fwait
lock
aas
sti
das
mov
add
les
pop
dec
mov
jl
jle
mov
adcl
fldenv
adc
std
ja
xor
lcallw
sub
arpl
cmp
cmp
test
inc
and
push
jp
sbb
sti
inc
push
repz
pushf
roll
add
ficoml
rep
ret
and
sub
adc
imul
into
pop
adc
mov
mov
cmpl
jl
add
ss
sub
pop
dec
pusha
int3
test
sbb
jo
mov
in
mov
into
add
in
jb
nop
lret
dec
lret
push
adc
test
sti
push
icebp
cld
cmp
loope
outsl
aas
xchg
xchg
mov
mov
out
mov
sub
lods
das
add
aam
sbb
stc
stc
inc
jae
and
lret
inc
xor
and
arpl
jo
lret
pop
jl
stos
outsl
mov
jmp
stos
mov
jns
mov
mov
xlat
lds
out
imul
stos
pop
pop
mov
push
xlat
add
gs
mov
xchg
jns
bound
dec
rcl
andb
push
push
adc
cmp
movsl
push
aaa
pop
pop
jmp
cmpsl
fmuls
xor
sbb
dec
mov
xchg
sbb
std
aaa
xchg
fstps
push
stos
pop
mov
shl
xor
test
and
aaa
cwtl
in
add
push
jno
test
out
jae
push
dec
lahf
dec
mov
cmc
xchg
jecxz
movsb
jl
mov
dec
cmpsl
sahf
add
insl
out
sbb
movsb
out
pop
cmp
mov
stos
and
popa
jne
adc
loopne
je
iret
jno
adc
push
jns
loope
xor
int3
mov
pop
add
adc
fsubr
dec
jno
lahf
mov
mov
movsb
add
xchg
dec
pop
mov
mov
xchg
dec
xchg
pusha
imul
insl
xchg
pop
loopne
rcr
aad
ljmp
inc
lods
sub
cmpsl
push
shl
lahf
inc
enter
sbb
jns
xchg
adc
ljmp
std
pusha
fildll
cmp
lahf
pop
fisttps
sub
mov
and
js
loop
pop
pop
mov
daa
mov
push
adc
ret
jbe
std
mov
out
into
or
adc
adc
push
aaa
imull
inc
mov
dec
adc
and
sbb
mov
aad
mov
test
add
xorl
lods
sub
rcrl
mov
ss
rcrl
popf
subb
outsb
mov
les
out
out
lahf
scas
enter
dec
cmp
cmp
and
daa
imul
or
hlt
iret
mov
jge
fisttps
ljmp
ja
loop
mov
xor
push
loopne
faddl
sbb
mov
popa
insb
lods
add
adc
faddl
loop
adc
cmc
mov
andl
dec
pop
push
and
dec
test
mov
push
push
sub
sti
or
pop
fmul
addr16
cmp
mov
bound
pop
xchg
jbe
xor
div
psadbw
cld
mulb
or
dec
lcall
adc
outsl
inc
rolb
gs
inc
sti
cmp
xor
and
jmp
jl
add
xor
cmp
sub
lcall
cmpsl
sub
jge
or
adcl
jae
mov
repz
push
push
lods
popa
ljmp
scas
cwtl
add
sub
inc
je
mov
loopne
adc
mov
pop
sub
dec
or
cmc
cli
sarb
cmp
rcll
fisubl
sub
mov
or
out
test
or
jbe
mov
pop
or
jg
pop
xchg
outsb
movsl
mov
fs
or
jno
add
sbb
mov
andb
mov
jecxz
push
pop
jns
mov
inc
dec
movl
rcr
repnz
repnz
push
inc
mov
shrl
push
pop
dec
xor
rcrb
mov
dec
call
icebp
int3
xchg
ljmp
fcoms
add
popf
xchg
push
mov
aam
iret
sub
jbe
addl
jnp
push
mov
dec
lret
push
repz
xchg
into
movsb
bnd
repz
pop
cmpsl
cmc
jns
pop
fsubl
lret
jae
loop
outsb
loope
gs
out
jo
popf
or
roll
aam
cwtl
xchg
sbb
jo
scas
pop
jecxz
xlat
sbb
mov
pop
and
jge
cmc
push
cmpsb
mov
or
popf
xchg
out
mov
stos
jae
mov
leave
or
jae
dec
push
in
popa
jbe
into
lahf
inc
add
jb
pop
fcmovb
call
sti
mov
mov
or
pop
mov
ret
mov
daa
mov
lock
imul
pop
adc
cmp
push
cwtl
pop
in
ret
dec
aad
lea
shrl
inc
xchg
sti
add
dec
mov
add
inc
lret
fcmovu
adc
rolb
pop
rcl
lods
frstor
or
loop
test
or
into
jl
jb
dec
popa
sub
repz
pusha
sbb
jl
and
mov
and
nop
and
jae
jle
fcmovnu
sub
dec
popa
add
mov
ret
mov
imul
adc
lret
add
fwait
xchg
inc
insl
dec
shlb
push
std
lods
dec
sub
stos
test
mov
test
xor
mov
icebp
loopne
aas
jl
fldcw
cmp
cmp
and
out
mov
test
xor
mov
adc
inc
xor
sbb
pop
jmp
jle
jge
xchg
jno
es
gs
push
jge
push
dec
shlb
pop
xchg
jne
fnstsw
stos
sub
scas
fwait
sbb
pop
jae
cmp
cmpsl
pop
and
ljmp
cmp
aam
daa
jp
jnp
cmpsl
lret
ret
sti
push
out
push
rorb
jbe
loop
loope
push
lods
data16
mov
ljmp
push
pop
call
adc
repnz
cmp
lds
jmp
notb
xchg
sub
scas
inc
lcall
loope
xchg
inc
psubw
cwtl
xchg
push
pushf
movsb
and
sub
jp
pop
std
xchg
jg
hlt
jmp
sub
int
mov
pusha
pop
mov
or
dec
fstps
pop
xchg
fmulp
das
inc
scas
mov
inc
jle
sub
popf
cmp
mov
test
adc
mov
lcall
sub
ja
mov
out
cmp
rclb
rcrb
fsubr
stos
in
call
shlb
mov
insb
cld
xor
sti
mov
incb
fildl
lock
push
test
movsl
xchg
xchg
cmp
dec
add
pop
leave
mov
mov
dec
mov
jl
in
cmpb
dec
dec
jmp
orl
xchg
les
push
cmp
imul
aas
ds
mov
aas
sbb
sbb
inc
jg
sub
stc
ret
xor
inc
pushw
adc
xchg
test
push
sub
popa
lods
xchg
and
xchg
call
lahf
or
add
aam
cltd
shr
or
jo
push
sbbb
fisttps
sahf
fnsave
mov
jno
jle
test
add
hlt
pop
cmp
push
ret
add
fbld
sbb
in
clc
mov
arpl
fcomi
sbb
insl
lahf
push
inc
movsb
ret
mov
pop
lret
pop
nop
cltd
mov
dec
pop
sbb
aam
pop
stc
dec
roll
fs
sub
je
or
repnz
sub
cltd
cmp
loopne
jb
int3
dec
faddl
xchg
aad
xor
hlt
mov
rcrb
bound
xchg
call
or
roll
jg
das
fsubs
inc
and
outsl
aaa
push
mov
mov
adc
sbb
std
ror
xor
mov
adc
daa
mov
in
add
rorl
aad
add
mov
aad
cmp
ficoms
push
cli
push
dec
mov
fcompl
out
push
stc
dec
cld
addl
jo
dec
out
xchg
dec
call
sbb
pushf
xchg
mov
pusha
pop
jno
mov
loopne
out
cmpsb
rcrb
mov
pop
mov
dec
lret
pop
imul
pop
and
jp
jo
mov
push
loope
pop
hlt
aad
movsb
cmp
add
push
sbb
pop
gs
pop
xchg
mov
sub
jmp
mov
ficompl
adc
aaa
loopne
sbb
push
rorl
repnz
jae
inc
imul
testb
jmp
mov
cld
repz
aas
jae
fwait
movsb
inc
pop
xor
out
mov
dec
pop
out
ja
int3
xor
insb
stc
scas
xchg
je
lahf
adc
add
adc
pop
inc
mov
jle
int
push
loop
ss
lret
cli
imul
cwtl
add
cmp
inc
lret
jne
loopne
enter
insl
jl
jo
call
imul
leave
ja
mov
std
pusha
dec
adcb
push
insl
or
mov
jns
test
inc
push
sbb
inc
int3
std
scas
pushf
xor
lret
sbb
fstpt
pop
aaa
mov
into
enter
fwait
pop
pop
ds
cmp
int
insl
pop
mov
mov
mov
cwtl
push
shlb
and
std
dec
add
fdivs
sarl
sbbl
jge
dec
out
xchg
inc
test
movl
mov
sub
jo
mov
pushf
cmp
test
sub
jbe
pop
pop
int3
lret
mov
fcom
mov
cli
xor
iret
lods
mov
test
repz
add
xchg
lds
lods
mov
xchg
pop
xor
push
sbb
stos
call
push
lcall
stos
cmp
pop
push
shll
inc
loop
inc
sub
push
mov
mov
jg
mov
and
jno
sbb
lahf
push
pop
mov
or
icebp
popfw
push
cwtl
add
mov
lahf
int3
pop
dec
dec
push
leave
lcall
push
test
lds
and
and
stos
in
sbb
xchg
sti
das
andl
pop
mov
mov
and
es
hlt
es
mov
xlat
pop
dec
ficomps
rolb
sahf
out
sbb
sbb
std
xor
enter
lea
lea
add
movsl
stos
divl
push
fwait
fwait
xchg
lods
xlat
or
pushf
pop
incl
lcall
dec
jp
pusha
xchg
xor
mov
gs
pop
mov
mov
test
imul
cld
sbb
fwait
xchg
xchg
pushf
hlt
push
jns
push
cld
hlt
bound
push
sar
lcall
push
xchg
xlat
mov
xor
inc
cli
pop
out
pop
movb
pop
xor
sti
jge
leave
add
mov
std
mov
dec
into
jmp
pop
sbb
lds
adc
dec
out
int
hlt
pop
pusha
or
imul
clc
les
fbstp
cwtl
push
popa
mov
cmpsb
imul
xchg
add
xor
pop
addr16
jnp
cmp
out
mov
jno
js
push
inc
dec
cmp
lahf
xchg
aas
daa
cmp
xchg
pusha
pop
and
inc
fnstsw
add
inc
sbb
dec
cwtl
imul
push
adc
jo
pop
mov
iret
in
pushf
repz
loope
or
jge
mov
rclb
repz
inc
sub
cwtl
fs
add
jbe
nop
sub
into
dec
in
add
and
adc
sbb
iret
sbb
mov
je
xor
or
loope
fwait
sbb
cmp
cmpsl
jg
mov
xor
add
or
dec
sub
dec
scas
fwait
repz
add
or
call
stos
fwait
jnp
arpl
mov
jns
pop
out
jno
xor
divl
or
cs
rolb
lret
mov
mov
test
push
adc
cli
push
pushf
fidivrs
scas
cmp
jge
scas
std
and
sub
jmp
sub
mov
jns
dec
jo
pop
adc
add
push
ss
addr16
push
jb
xchg
test
add
daa
idiv
out
test
imul
xchg
mov
mov
mov
jb
cli
jnp
mov
xchg
daa
loopne
and
and
test
cs
test
jmp
jo
mov
out
jno
repnz
jnp
imul
jo
popl
out
pop
or
lcall
js
iret
loopne
fiaddl
push
in
mov
addr16
ss
call
mov
inc
xchg
call
inc
pop
sti
push
outsl
stos
sbb
fisubrl
push
imul
in
movsl
enter
xlat
sbb
xchg
inc
test
outsb
mov
pop
push
jns
jp
clc
jp
lock
add
cmp
sub
loope
cmp
pop
fld
cmp
leave
mov
and
xor
in
adcl
mov
add
sub
pushf
mov
into
xchg
add
loope
mov
pop
ljmp
lahf
lock
mov
rcrb
jg
in
adc
insl
push
jmp
push
into
jno
pushf
inc
xor
cwtl
repz
ss
push
jp
pop
mov
mov
stos
dec
loopne
cmp
les
xchg
insl
dec
subb
push
es
in
jle
fdivl
call
add
mov
xor
jo
out
lock
and
jmp
pop
repnz
inc
pop
pusha
out
stc
mov
add
mov
addr16
popf
xchg
ficomps
lret
or
pop
cmp
push
mov
cmpsl
adc
xchg
and
mov
mov
cmp
lods
loope
adc
rolb
int
jp
pusha
test
popf
out
jnp
pop
cmp
inc
inc
push
notb
loopne
hlt
dec
movsl
mov
and
imul
add
push
and
cmp
pop
adc
scas
push
ds
adc
jge
negl
pusha
mov
cmp
ret
test
adc
inc
and
cld
xchg
xchg
xor
xchg
pop
mov
mull
pop
sbb
test
cmp
hlt
pop
jge
xchg
and
dec
outsb
xchg
mov
stos
inc
mov
lods
mov
pop
sbb
add
dec
cmpsl
mov
cmp
xor
dec
mov
and
out
add
into
lretw
inc
and
int3
dec
test
cmpsb
dec
cmp
adc
mov
scas
js
mov
mov
fcmovb
outsl
fistps
pop
mov
jmp
adc
xchg
jns
in
fwait
sti
je
sbb
mov
pop
movl
orl
pusha
fbstp
push
int
in
pop
rorl
jnp
add
mov
inc
jno
repz
push
shrb
enter
outsl
insb
or
mov
mov
inc
cmp
andb
scas
or
shlb
adc
addr16
pushf
mov
mov
adc
cmpsl
pushf
jnp
jnp
mov
in
push
push
movsl
cmpsb
rcrl
fmuls
in
dec
stos
pmaxsw
fsubs
sbb
or
nop
in
leave
ds
mov
dec
pop
std
jnp
mov
adc
sub
push
or
push
cmc
ds
and
xor
outsl
jne
sbb
push
dec
out
push
stc
cli
sub
or
aas
inc
cmp
repnz
nop
or
icebp
lods
filds
outsl
mov
dec
mov
jl
push
jbe
outsb
xchg
push
adc
fildl
imul
leave
das
sti
in
cwtl
xor
and
jae
cmp
dec
mov
rol
mov
cmp
js
int3
ret
mov
mov
out
cli
fdivs
mov
popf
dec
fwait
cmpsl
leave
push
into
jg
pop
out
push
lods
pop
lea
xchg
jae
mov
sbb
push
or
dec
dec
js
pop
add
xchg
dec
sub
movsl
or
pop
or
dec
sahf
faddl
xchg
mov
adcb
enter
pop
mov
and
mov
test
cmp
sbb
jno
mov
shl
cld
test
sar
out
xchg
sti
loope
jno
insb
lret
sbb
cmp
sub
out
mov
leave
in
ret
adc
fsub
pop
adc
push
sahf
sbb
mov
lcall
in
add
in
jge
pop
adc
in
notl
mov
and
add
pop
fs
sbb
push
arpl
into
add
arpl
jno
jb
rcrb
repnz
pop
ljmp
in
push
cmp
push
dec
ss
inc
jb
shl
xchg
lret
scas
ds
jge
in
stos
sbb
dec
lcall
jl
mov
xor
aam
aas
jl
repz
je
mov
fistpll
fs
lret
push
xchg
sbb
in
push
xchg
mov
in
stos
call
push
aaa
or
mov
aaa
add
jbe
mov
cmp
mov
test
aam
mov
mov
filds
imulb
insl
lock
push
adc
add
push
pop
dec
je
push
popf
or
inc
push
push
iret
repnz
ja
inc
shlb
xchg
and
mov
in
leave
out
dec
cmpl
sbb
cmc
jb
push
popf
add
mov
jecxz
push
jno
jmp
or
scas
jb
rclb
mov
ss
into
mov
test
push
sub
jne
scas
and
jle
xchg
repz
cmc
ja
sbb
mov
pushf
add
xor
mov
out
out
insl
xor
cmp
push
outsb
jle
and
cmpl
lea
push
ljmp
inc
adc
and
mov
push
pop
sub
xchg
mov
or
push
test
add
scas
jne
jns
lahf
jno
jnp
addr16
repz
inc
push
mov
and
mov
leave
inc
gs
js
mov
mov
inc
sahf
repnz
pop
clc
and
add
dec
addl
icebp
sti
nop
pop
lahf
dec
insl
push
mov
cld
out
sub
pusha
rclb
and
jecxz
ret
out
sub
repnz
sbb
cmp
xchg
subl
roll
push
or
js
outsl
jg
cmp
lret
bound
jg
pop
aas
popa
stc
mov
addr16
push
mov
inc
sub
aas
adc
adc
cli
mov
jnp
jae
pop
test
negl
lret
cmp
dec
lret
dec
aaa
adc
test
es
mov
and
lods
jb
add
out
pop
and
jne
sbb
aad
push
push
lock
dec
add
fwait
insl
loopne
adc
or
mov
add
sub
pop
and
push
outsl
inc
nop
add
add
xor
popf
enter
cwtl
mov
iret
push
and
add
xorb
adc
jge
mulb
or
inc
inc
lret
fisttpl
mov
jns
jae
mov
xor
xchg
xor
push
mov
pusha
mov
icebp
fdivrs
lock
add
cli
sub
add
xchg
xchg
xor
insl
dec
mov
aad
shrb
mov
sbb
add
fs
lcall
cltd
movsb
cmp
add
mov
pop
cmp
push
cmp
enter
mov
daa
mov
out
cwtl
xchg
jle
add
dec
pop
push
push
jmp
clc
loop
outsl
sub
mov
scas
mov
cmp
movsb
push
mov
jle
inc
addb
mov
jg
pop
std
push
jmp
or
repnz
int
xchg
add
test
int
push
das
je
fldcw
cmpb
outsb
mov
sub
ret
ret
mov
mov
push
dec
rol
int
movsb
loop
push
imul
je
aaa
outsb
pop
pop
xor
fistpll
popa
and
mov
pop
mov
mov
inc
xchg
dec
push
inc
int
sbb
rclb
dec
insb
dec
or
neg
leave
psrad
xchg
popa
jle
add
cs
data16
rolb
add
loop
es
inc
add
push
scas
out
outsb
movsb
rorb
mov
std
cmp
xchg
jmp
inc
and
movsl
sub
jge
pop
mov
push
push
sbb
sub
jecxz
je
jl
sbb
lea
sahf
dec
cmp
movsb
in
dec
add
cmp
int
xchg
fcoml
adc
and
xchg
jecxz
cmp
leave
stos
adc
negl
push
add
dec
jne
stc
sub
into
xchg
dec
leave
push
lds
mov
mov
movsb
je
outsl
fwait
dec
sahf
jg
and
push
and
repz
mov
jge
dec
js
add
dec
data16
repnz
shll
lret
or
sub
sub
push
loope
dec
mov
dec
cmc
sbb
es
xor
xchg
mov
je
or
movsb
daa
insl
mov
mov
outsb
cmpsl
mov
mov
mov
repz
pusha
ja
aaa
outsl
adc
addr16
sti
or
inc
aaa
xchg
scas
ret
adc
push
hlt
aaa
ss
inc
xchg
or
xchg
imul
add
in
push
mov
cmovle
test
jnp
add
and
add
sub
cmpsb
cmp
test
mov
jg
cmp
mov
or
out
lret
or
fs
setns
xor
das
js
adc
adc
test
mov
arpl
clc
aaa
fdivp
pushf
sub
cmp
andb
gs
je
sub
mov
in
iret
pop
cld
js
jmp
std
enter
xor
ljmp
std
xor
push
jmp
xor
mov
stc
jp
adc
stos
ret
cmpsl
nop
add
imul
xchg
test
jae
bound
mov
inc
outsb
cmp
inc
test
in
iret
in
sub
inc
inc
lods
sub
sub
adc
imul
inc
cmpsl
gs
fstl
and
mov
negl
adc
xchg
movsl
out
sub
test
and
lret
mov
out
shrb
jb
fwait
bound
push
in
sub
push
xchg
leave
push
adc
pop
pop
sub
lods
loope
pop
add
aas
mov
ret
data16
in
lock
nop
mov
pushf
dec
pusha
mov
and
mov
add
mov
xor
ret
fsub
mov
mov
aaa
jns
xchg
insl
int
pop
bound
shl
xlat
notb
pop
clc
data16
xor
out
mov
xchg
inc
ficomps
leave
add
sub
adc
cld
clc
mov
cmp
test
stc
and
xchg
sub
dec
push
rolb
cmp
xchg
inc
mov
lret
addl
xchg
sbb
stos
movsb
mov
stc
xchg
or
stos
mov
mov
sbb
movsl
xorl
lods
pushf
push
inc
call
add
push
jbe
cmc
cmpsl
sbb
int
sbb
aaa
dec
push
push
in
mov
mov
fdiv
mov
cmp
mov
and
xor
fsubp
xchg
mov
scas
and
xchg
cmp
push
lea
or
cmp
mov
jnp
and
sbb
arpl
pushf
orl
rcrb
mov
mov
bound
push
test
xchg
add
setne
inc
pusha
inc
std
aam
inc
add
test
xchg
mov
ja
lds
repnz
mov
adc
mov
cwtl
pop
int3
push
int3
push
or
jne
xor
cmpsl
js
cmpsl
and
adc
imul
mov
cmp
call
movsb
xor
lret
adc
scas
test
mov
cmp
inc
pop
cmpsl
mov
mov
mov
inc
or
fadds
cs
lds
aaa
push
repz
nop
xlat
jne
pop
mov
lods
rcll
sub
jle
push
mov
in
or
cmp
sbb
mov
dec
add
les
push
fdivr
lock
inc
je
dec
cmp
mulb
cmp
pop
mov
mov
mov
jp
pop
jecxz
dec
adc
inc
pop
fisttpll
int3
dec
call
enter
mov
xchg
sarb
xor
cmp
lods
daa
cs
arpl
int3
xor
sbb
adc
ret
xchg
mov
out
mov
xchg
mov
call
dec
leave
mov
shr
cmp
or
es
xor
sbb
lcall
cmp
dec
cld
mov
mov
mov
hlt
clc
cwtl
repz
iret
lds
sbb
leave
out
sbb
loop
jle
out
lea
cmp
pop
les
dec
out
add
push
push
push
lock
push
push
xlat
cmc
push
pop
dec
mov
cs
jge
and
inc
mov
daa
imul
outsl
popf
dec
dec
popa
fs
aaa
jbe
in
scas
call
ret
or
or
stc
fbld
or
jge,pt
jp
dec
lock
mov
loope,pn
enter
fistpl
gs
cli
mov
mov
aaa
inc
add
stos
ds
pop
xchg
jle
imul
cmp
call
scas
out
stc
adc
pusha
add
sub
test
jge
add
dec
cs
test
popf
fbstp
out
cmc
jnp
push
lods
les
mov
out
jnp
xor
or
cs
push
dec
jg
lcall
add
bound
in
push
dec
cwtl
jmp
inc
in
xchg
mov
data16
adc
mov
in
lret
addb
iret
push
and
insb
mov
or
push
shlb
cmpl
mov
stos
adc
jbe
pop
es
push
add
scas
xchg
mov
cwtl
mov
push
jmp
mov
ds
sub
icebp
js
cli
cmp
loop
mov
inc
pop
or
idivl
push
or
icebp
dec
pop
pop
cmp
sbb
sub
mov
mov
add
mov
xor
loopne
ja
mov
lcall
adc
cmp
lock
mov
out
loop
xor
ds
int3
cmpsb
xchg
dec
push
push
pop
rcrb
sub
sti
jne
pop
jno
iret
outsl
pop
xchg
push
ffree
add
fidivrs
pusha
sbb
ds
out
iret
scas
ljmp
xor
test
lea
test
inc
jae
test
mov
jmp
int
out
lock
test
subb
xchg
dec
mov
cwtl
xchg
mov
xchg
ss
mov
add
mov
mov
and
pop
aad
repz
fadds
xchg
mov
jbe
jnp
push
add
fxch
in
jecxz
mov
int
fs
add
add
roll
sbb
pop
lds
inc
es
cmp
movsl
push
test
and
add
dec
push
pop
xchg
out
and
in
push
cli
mov
xchg
push
fs
lret
dec
ret
push
in
data16
pop
pop
push
fidivs
nop
mov
sub
mov
mov
jae
mov
mov
and
out
testl
adc
xchg
xchg
cmp
loopne
mov
aaa
lahf
dec
int3
add
xor
andl
sub
jg
mov
mulb
test
mov
lret
fisttps
sbb
jno
ret
lret
and
adc
shlb
inc
xor
add
jmp
adc
and
inc
repnz
jg
fwait
push
test
fidivs
or
sub
cmpsb
push
in
sub
and
adc
fs
frstor
stos
data16
push
sbb
push
hlt
cmp
ljmp
dec
lods
jmp
sbb
out
test
stos
pop
iret
call
xlat
mov
or
or
mov
jne
imul
cmp
outsb
adc
and
pop
xchg
mov
or
bound
pop
les
in
or
fistpl
pop
ja
mov
xlat
out
loop
sub
pop
repnz
xchg
in
mov
push
in
icebp
sub
push
mov
je
lds
test
lea
fisubs
loop
mov
fcomps
add
imulb
loopne
sbb
movsb
and
out
sti
xor
loopne
lret
fnsave
xchg
in
xlat
and
out
sti
loopne
into
insb
shld
mov
and
push
imul
pop
int3
cmpsb
and
inc
push
xchg
or
adc
push
mov
push
enter
outsb
jnp
sub
or
push
mov
lods
push
cmp
lock
lret
mov
int3
std
mov
add
xchg
jbe
jae
or
push
inc
je
pop
and
add
adc
pop
daa
jb
xchg
fwait
es
je
stc
js
lcall
mov
pop
sub
in
xor
fstpt
shl
insl
sar
mov
pop
inc
mov
or
push
pusha
lock
addr16
icebp
pop
popa
and
insb
loopne
outsb
sub
inc
jle
mov
jbe
sub
add
xor
jmp
add
add
xchg
loopne
jns
stos
lea
adc
cmc
sub
pop
mov
add
shlb
mov
add
dec
cvtps2pi
mov
sbb
fs
mov
loop
add
icebp
imul
enter
push
stc
jbe
int3
xor
pop
gs
sbb
in
insb
call
jb,pt
adc
and
bound
and
xlat
lods
xchg
xor
xlat
adc
pop
das
pop
std
outsl
mov
push
rorl
in
mov
adc
lods
mov
fisttps
adc
add
and
jne
and
sbbl
inc
gs
dec
push
testl
sub
push
outsb
ret
adc
neg
mov
iret
out
fnstenv
adc
mov
push
lods
popf
ret
mov
cmp
dec
stos
pop
arpl
inc
push
lea
repz
pop
cltd
jmp
lret
jo
int3
mov
imul
push
and
mov
in
lock
in
js
mov
add
add
mov
or
jb
clc
pop
out
je
and
test
mov
push
clc
jp
fs
mov
sub
notb
or
lahf
lret
sub
out
in
cmp
xchg
loope,pt
and
popf
nop
pop
push
fwait
in
ret
jae
xchg
cs
rorw
and
push
cmpsl
xor
dec
insb
adc
insl
mov
pop
dec
pop
repz
dec
pop
stos
cwtl
dec
in
or
or
lret
xor
mov
out
add
push
and
es
jbe
lcall
out
mov
mov
data16
adc
les
jp
pop
mov
out
mov
dec
dec
and
jae
push
mov
sub
cmp
and
ljmp
inc
push
cmpsb
fsts
inc
fcomps
fstenv
cmpsb
lods
inc
aas
data16
rclb
sub
xchg
mov
sti
jbe
data16
aam
dec
dec
jmp
or
mov
xchg
sub
iret
imul
je
jge
leave
cmp
adc
push
dec
sbb
push
into
mov
shrl
ljmp
mov
icebp
mov
pop
xchg
jo
jle
mov
xor
repnz
add
into
fs
popf
push
push
mov
lock
out
and
push
movsb
sbb
mov
adc
push
lds
sub
dec
lds
lods
fisttpll
sbb
cmp
cmp
mov
inc
out
aam
lods
xor
and
push
pop
fmul
adc
pop
ret
xor
xchg
inc
psadbw
cwtl
xchg
daa
cs
xlat
repnz
outsb
jno
outsb
inc
fwait
rorb
push
loop
es
mov
pop
or
xor
add
les
roll
enter
mov
out
jne
or
xor
rcrb
imul
inc
test
shrl
dec
xchg
adc
out
cmp
imul
ds
ror
jbe
jne
iret
jle
pop
loope
lock
leave
cmp
shlb
cmc
lcall
sbb
movsl
or
cmp
shl
cltd
cmp
stos
add
jnp
mov
ret
adc
inc
orb
leave
mov
xchg
push
rorl
jg
pop
sub
cmc
aad
mov
jecxz
sbb
and
mov
insb
mov
imul
repnz
test
dec
movsl
mov
divl
jg
xchg
shr
add
jge
push
out
mov
stos
or
insb
mov
lahf
jo
sbb
sbb
sbb
test
cmp
cmp
mov
mov
jo
pop
lret
push
adc
mov
in
sub
insl
inc
pop
lret
inc
es
int3
fcompl
aam
xchg
rcrb
jl
bound
sysexit
cmpsl
insl
cmp
xchg
push
xchg
fisttps
mov
push
sahf
enter
insb
cmp
jns
mov
mov
subl
mov
cmp
ret
loop
add
shrb
cli
inc
jb
enter
mov
cmc
sub
sub
inc
jb
aas
iret
jp
sbb
dec
or
outsl
pop
and
cltd
add
cwtl
xchg
mov
lahf
sub
imull
dec
or
outsl
out
or
lahf
int
cwtl
xchg
out
cli
pop
and
mov
xor
adc
push
xchg
dec
adc
ret
push
pop
test
stos
or
mov
jle
or
cs
popaw
test
movl
or
cmpsb
test
lret
mov
mov
jns
mov
mov
das
test
ja
mov
mov
cmp
shll
jmp
pop
and
push
lock
and
dec
mov
pop
cwtl
in
push
jns
aam
ljmp
inc
scas
out
and
sahf
mov
xchg
fwait
sbb
fistpl
xchg
sub
push
sahf
or
shr
jg
ret
and
enter
ficomps
es
ljmp
stos
and
rclb
cmp
jecxz
negb
inc
jecxz
push
or
nop
lret
jo
addr16
mov
pop
xor
and
shrl
stc
jb
push
dec
test
sbb
cld
movsb
push
nop
fwait
dec
insb
loop
aam
mov
push
stc
fildl
loope
fstps
movsl
bound
in
sbb
and
js
or
cmp
xor
cmpb
inc
dec
mov
in
daa
adc
movl
jne
data16
out
pop
rclb
iret
add
pop
dec
cmp
arpl
cmpsl
repz
sub
adc
je
jg
cs
repnz
insb
imul
push
mov
and
bound
test
sub
add
sbb
mov
xchg
gs
in
push
jo
jnp
bound
imul
cmc
scas
gs
xor
xchg
aas
das
insl
mov
fs
std
xchg
clc
or
enter
stc
xchg
jl
test
add
dec
stos
mov
mov
ret
mov
loopne
movsl
mov
pop
push
xlat
inc
pop
pop
and
hlt
xchg
or
aad
xchg
pusha
into
mov
xchg
jae
dec
aas
out
sbb
push
mov
stos
inc
adc
mov
call
je
into
mov
cmp
add
fisttpl
stos
sarl
lcall
xlat
xchg
inc
and
inc
push
sub
je
call
push
cld
in
lods
cld
cmp
xchg
or
mov
cmp
aam
jne
jecxz
mov
cmp
add
mov
sarl
cmpb
adc
sub
add
jle
pushf
push
insl
and
pop
adc
and
scas
push
mov
xchg
mov
je
in
mov
mov
or
mov
rclb
out
pop
dec
enter
xor
jo
cmp
or
push
xlat
mov
popf
mov
add
dec
jb
dec
push
fsubrl
pop
mov
xor
jge
push
stos
je
inc
dec
mov
inc
add
cmp
xchg
fildl
lret
jnp
pop
xor
pop
leave
lahf
jbe
mov
xchg
ret
imul
aaa
sbb
mov
shlb
ja
or
jae
cmpsb
add
xchg
addb
aas
pop
lcall
sahf
les
xchg
negb
outsb
sub
xchg
testb
inc
aad
dec
jle
and
push
add
pop
sub
ljmp
cmp
fwait
repz
in
lods
ret
push
xor
mov
lret
lret
popf
stos
pop
cvtps2pd
inc
or
add
xor
or
or
cmpsb
mov
into
xlat
xor
or
inc
test
lock
lods
push
int
pop
jb
pop
xor
adc
out
arpl
lret
mov
mov
jl
movb
arpl
arpl
jge
mov
sbb
insb
xchg
jne
push
push
mov
push
or
add
ret
aad
mov
ds
test
xchg
lds
xlat
test
cmp
xchg
adc
daa
adc
call
jbe
int3
pop
not
loop
cld
xchg
icebp
ficomps
lcall
or
fistps
xchg
cmpsb
negb
and
xchg
jns
push
pop
mov
cmp
cmpsb
cltd
nop
or
jg
jno
sbb
add
or
loope
or
loop
push
popa
dec
jp
fstps
int
divb
leave
add
mov
mov
pop
add
push
jmp
cli
mov
das
jb
int
pop
sub
ljmp
push
pop
and
insb
lret
in
icebp
ret
xchg
sub
xchg
mov
aad
aam
mov
mov
movsl
push
int
cltd
lcall
leave
sti
cmpsl
aaa
fcoml
shl
or
inc
jnp
ljmp
mov
fs
xor
xor
lret
mov
adc
mov
xchg
xchg
out
adc
imul
xchg
mov
jmp
scas
lock
inc
ljmp
out
lods
daa
push
js
rclb
les
imul
mov
enter
push
mov
loope
ret
push
addr16
in
icebp
divl
cli
lea
incb
push
mov
sahf
xchg
add
cmp
aad
or
js
scas
push
or
sar
pop
repz
inc
xchg
xchg
adc
iret
in
icebp
stc
mov
or
fs
aad
add
sar
fildl
call
stc
aaa
rclb
cltd
add
adc
lock
adc
adc
push
push
insl
cwtl
xchg
hlt
jo
repnz
jp
icebp
into
int3
pop
addb
leave
xchg
dec
sbbl
cmp
or
xchg
fidivl
mov
loope
mov
xor
mov
repz
sti
leave
xchg
jae
cmpb
icebp
xchg
jns
sbb
idivl
add
xchg
add
and
scas
dec
jae
sti
and
jp
pushf
je
loopne
sub
push
lds
sti
cli
out
adc
decb
push
xor
push
or
lret
mov
mov
cs
sbbl
pop
mov
sbb
addw
sub
sub
insb
adc
outsb
loopne
mov
mov
sbb
cs
das
mov
cwtl
mov
ss
bound
push
xchg
jmp
rclb
mov
jmp
negb
cmp
cli
jbe
push
dec
dec
loopne
and
adc
cmp
movsb
std
dec
les
clc
adc
push
and
push
lcall
lahf
test
sbb
mov
cmp
divb
test
subb
cwtl
movsb
mov
leave
cs
and
and
xor
bound
dec
push
mov
test
icebp
ja
mov
out
loop
in
push
push
movsl
in
int
or
jmp
add
adc
jo
jmp
and
call
jl
inc
mov
push
test
ret
lock
mov
jns
cmp
or
dec
pop
cmc
ljmp
cwtl
push
rclb
fdivrp
lea
inc
inc
je
adc
das
dec
test
mov
mov
inc
jns
mov
push
sahf
inc
shlb
lds
scas
imul
jecxz
jnp
sub
inc
fwait
push
clc
mov
loopne
mov
rcrl
sub
sbb
hlt
jo
xor
pop
int
mov
xchg
scas
inc
mov
setns
dec
std
lcall
call
add
imull
data16
idivl
jp
xchg
cmp
jnp,pn
imul
outsl
not
add
pop
sub
adc
or
jnp
sahf
xchg
imul
out
jmp
cmpsl
xchg
mov
inc
push
popf
or
mov
lret
jnp
xorl
loopne
aam
jp
push
sbb
push
test
push
ljmp
xchg
mov
dec
pop
and
jne
or
stc
mov
xor
push
pop
lods
in
inc
std
test
or
test
or
mov
jns
adc
fsubrl
mulb
jecxz
sub
frstor
clc
clc
add
cmp
or
ljmp
mov
xor
fucomp
dec
inc
inc
or
push
inc
int3
add
xor
mov
add
jns
lods
je
jmp
push
outsl
jle
clc
ret
cmpb
int
pop
enter
inc
xchg
leave
mov
insb
aad
in
lret
dec
stos
add
sbb
cmp
popf
xlat
lock
fcmove
fiaddl
pop
xchg
iret
xor
mulps
xlat
dec
pop
sbb
outsl
out
ljmp
inc
add
mov
lret
fsts
xchg
mov
jnp
pop
enter
enter
jmp
inc
outsb
lea
pop
rol
adc
mov
sarl
push
movsl
push
inc
popf
cmp
out
sub
popf
aaa
cmp
mov
idivl
mov
fimuls
push
xor
test
loope
loope
add
jb
outsb
cmp
fdivrp
inc
mov
int
or
dec
pusha
stos
in
cmpb
pop
mov
adc
nop
movsl
and
hlt
rolb
mov
into
sahf
push
aas
push
add
mov
push
bound
xor
lret
fs
dec
xor
sbb
rclb
lods
mov
pop
es
xchg
fistps
rclb
aaa
cmp
jo
imul
inc
dec
shlb
and
fnstenv
test
sbb
pop
dec
pop
xchg
test
pop
ljmp
push
addb
push
jg
push
outsl
pusha
cmp
lods
sbb
lods
ja
adc
mov
lods
push
std
adc
adc
sub
mov
fidivrs
movsb
rorb
sub
push
mov
mov
lods
add
jmp
mov
xor
out
gs
sbb
xchg
jmp
das
sub
and
lods
test
sbb
test
jb
mov
arpl
inc
mov
imul
pusha
movsl
and
outsb
stc
imul
inc
fwait
push
in
dec
jne
cmp
xchg
sbb
clc
ljmp
fbld
sbb
cli
mov
pop
xchg
push
or
sbb
jae
mov
sarb
and
pop
pushf
pop
repnz
sbb
cmc
and
out
push
ds
mov
jno
sub
add
jp
xor
fwait
shlb
sbb
mov
sub
cmp
adc
xchg
push
inc
repz
or
jnp
cmc
jg
clc
sub
push
mov
xor
loopne
out
leave
dec
mov
jo
and
test
xchg
in
xchg
mov
inc
outsl
divb
ficoml
push
dec
push
mov
or
add
or
imul
movsb
sub
ljmp
push
leave
jmp
or
cli
lods
xlat
pop
int3
mov
or
shlb
filds
xchg
sbb
adc
stos
ficomps
out
jb
mov
loopne
xchg
mov
jbe
aas
push
in
int
lds
xchg
push
pop
fstpl
insb
sbbl
xor
sbb
mov
data16
dec
push
jne
mov
xchg
lcall
and
push
fimuls
and
jno
cmp
adc
inc
mov
jmp
xchg
adc
repz
adc
jne
jno
pop
movsl
scas
insl
mov
or
sbb
fidivrl
xor
aam
les
out
jno
adc
mov
xchg
pop
xor
movsl
stos
or
mov
rclb
jmp
pop
lea
aaa
mov
and
into
dec
in
pop
and
lods
cmc
mov
xchg
decb
cld
and
push
les
iret
lods
test
pusha
lods
adc
ret
mov
aas
je
cli
mov
rcrl
inc
or
jmp
dec
inc
mov
xchg
xchg
or
test
call
cmpsb
mov
arpl
in
inc
xchg
scas
ljmp
popa
xor
push
dec
cwtl
cmpsl
cwtl
push
rolb
mov
adc
pop
jp
cmpsl
sti
jl
push
xchg
sbb
cltd
fsqrt
xor
xchg
aas
jno
and
adc
lret
call
stos
mov
shlb
icebp
xor
mov
pop
cli
inc
repz
push
movsl
mov
jl
int
mov
gs
adc
unpckhps
lcall
sub
clc
movsl
aas
insb
mov
arpl
push
sub
xchg
es
mov
lods
jmp
sub
scas
ret
lock
inc
push
testl
ss
and
pusha
pop
add
mov
add
sub
xchg
push
mov
data16
es
ror
and
push
pop
dec
fwait
inc
fdivl
xchg
fs
sbb
test
pop
mov
xchg
sub
cmp
sbb
pop
add
cmpsb
das
ds
sub
fs
sub
scas
lret
dec
push
mov
xor
call
or
push
scas
cmp
psadbw
mov
test
daa
in
xor
fwait
mov
lock
imul
icebp
mov
or
lret
xor
into
sub
lods
and
add
mov
jns
aas
mov
mov
xchg
mov
fwait
lea
aad
add
das
xchg
push
into
in
es
popa
mov
push
aaa
fmuls
cmp
jno
and
outsb
mov
xor
movl
mov
xor
pop
and
insl
popf
mov
sbb
arpl
pop
out
dec
aam
sti
repnz
add
and
xchg
outsb
cs
or
gs
fisubl
dec
mov
movsb
insl
and
cmp
inc
aam
inc
sub
cmpsb
adc
mov
scas
dec
jns
xor
add
adc
sub
aad
push
inc
test
cmp
adc
into
movsl
cld
pushf
push
xchg
add
sub
or
jle
call
sbb
int3
jo
mov
fcomip
ret
in
sti
sub
and
stos
mov
imul
pop
xchg
mov
fisubs
jbe
jge
xchg
shr
negl
repz
pushf
pusha
pop
shr
fistpll
call
jnp
lcall
call
test
cmpsl
test
mov
cmpsb
inc
int3
or
xchg
sbb
xchg
inc
test
push
inc
and
mov
idivb
out
mov
sbbb
sbb
pop
sahf
pop
mov
mov
in
xchg
xchg
dec
xor
sub
lahf
stos
stos
ret
inc
orl
xchg
lea
add
test
push
push
xchg
mov
pop
clc
or
insl
jb
cwtl
fwait
std
lcall
test
jl
mov
mov
scas
jnp
clc
xchg
sub
inc
or
cs
mov
cmpsb
shrl
pop
call
cwtl
fcomps
jae
cmp
inc
mov
jbe
movsb
xchg
lcall
in
pop
lret
cmpsl
cmp
insb
in
sbb
mov
jle
mov
mov
mov
lret
jg
movsb
aaa
mov
dec
cwtl
xor
and
mov
sbb
lret
push
cmp
pop
gs
mov
fwait
inc
push
cmp
xchg
mov
push
mov
and
mov
icebp
pop
cmc
adc
jbe
into
mov
mov
mov
sub
jns
pop
mov
nop
push
dec
pop
jecxz
mov
in
xchg
stos
out
out
mov
dec
inc
mov
xchg
rorl
mov
loopne
psrlw
frstor
xor
cli
sbb
fisttps
push
lea
push
hlt
in
xchg
cmpsl
sbb
mov
xchg
fs
ficompl
and
pop
pop
pop
add
jno
push
mov
out
js
in
jbe
and
jmp
rcr
adcl
jle
xchg
aad
push
ret
xchg
mov
movsb
xor
cmp
shrl
and
stc
sub
or
je
sub
repnz
mov
add
and
sar
mov
leave
call
add
std
das
je
fwait
in
gs
out
jne
into
stos
shl
mov
cmp
mov
xchg
sub
aas
xchg
enter
sbb
adc
rol
stos
jne
nop
mov
lods
and
sti
cmpsl
or
and
mov
mov
dec
adc
pop
ret
xchg
aam
test
je
addb
dec
frstor
xor
rorb
jmp
push
mov
dec
inc
pop
pop
cmpsb
pop
mov
push
mov
movsl
scas
inc
idiv
pop
and
pusha
out
cmp
loop
xlat
sbb
sti
loopne
cmp
adc
js
jg
sbbb
pusha
add
std
inc
dec
or
sub
adc
or
sbb
in
push
jno
cmp
divl
lret
cmp
cwtl
adc
les
xchg
dec
mov
mov
and
dec
mov
out
mov
mov
sbb
pop
cltd
aad
mov
and
mov
pop
jg
out
xor
xor
das
and
adc
mov
push
xchg
sbb
jle
incl
leave
orb
pop
cmp
push
xor
pusha
sbb
mov
enter
rcr
enter
cli
imul
jno
mov
rcr
fildl
sub
xchg
xchg
inc
sbbl
fidivrl
push
mov
movsb
xchg
mov
stc
push
adc
push
mov
fdivrl
push
sub
fists
jne
xchg
adc
ljmp
xchg
sub
or
popf
push
mov
mov
mov
or
das
xchg
push
jnp
popf
mov
xchg
mov
test
dec
jae
test
mov
push
add
inc
ja
xchg
push
ret
dec
mov
fmul
fists
les
loopne
fs
out
cmp
addr16
lods
mov
push
dec
mov
cmp
das
and
dec
ja,pt
add
or
cs
imul
mov
pushf
in
jb
fcomps
jmp
int
inc
popa
mov
mov
fwait
sbb
inc
in
sub
mov
dec
and
add
sub
sbb
xchg
nop
rclb
or
adc
push
xchg
lret
cmp
and
and
or
sbb
popa
cmp
cs
fsubs
popf
and
sub
and
cwtl
je
jp
fwait
pusha
test
push
and
popf
lock
test
dec
loop
ret
push
jne
dec
js
cs
mov
mov
int
inc
pop
rolb
insw
mov
lret
or
push
adc
roll
jecxz
jns
or
dec
idivl
ret
call
and
jecxz
iret
push
test
push
sub
xor
xor
and
xor
or
lret
xchg
js
cltd
das
loopne
jmp
test
add
jmp
mov
mov
aad
orb
xlat
not
push
cmp
mov
lods
data16
faddl
imul
sub
xlat
in
mov
shlb
jp
clc
loope
decb
test
les
imul
imul
imul
sbb
popa
push
or
xor
push
ret
pop
stos
int3
fwait
cmpsl
pushf
repz
push
test
notl
xchg
repnz
loope
pushf
push
xchg
icebp
and
xor
lock
sti
lcall
dec
pusha
xor
aad
shll
bnd
clc
push
sub
and
mov
add
arpl
pop
cmp
sbb
dec
pop
bound
mov
mov
aam
mov
sub
dec
orl
dec
lods
hlt
rcl
ljmp
xchg
mov
in
out
lods
scas
xor
jae
lcall
jo
mov
pop
les
add
or
sbbb
ljmp
dec
pop
dec
call
popf
pop
cwtl
dec
ljmp
fcoml
and
insl
repnz
test
in
pushf
push
cmpsl
jp
rep
push
or
mov
lock
adc
pop
das
pop
pop
pusha
mov
pop
or
test
cmp
popl
cmp
mov
int
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
imul
xchg
add
add
mov
add
add
add
add
add
add
add
mov
add
add
add
addb
add
pusha
add
add
rorb
orb
add
add
rorb
sbbb
add
sub
add
mov
add
add
add
add
add
add
add
add
add
addb
add
lock
addb
add
add
addb
add
push
add
add
add
add
add
add
add
add
add
mov
rorb
add
add
mov
add
add
add
add
add
add
add
add
rorl
add
add
mov
add
add
add
add
add
add
add
add
or
xor
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
aam
add
add
mov
add
add
add
add
add
add
or
xor
add
mov
add
add
add
add
add
add
xlat
or
xor
add
mov
add
add
add
add
add
andb
add
dec
add
addb
add
sbb
sbbb
add
inc
add
sub
add
adc
add
cmp
add
pusha
add
adcb
add
mov
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pusha
add
add
or
in
add
mov
add
add
add
add
add
add
fmull
add
add
add
add
add
add
add
add
mov
add
adc
or
rolb
add
mov
add
add
add
add
add
add
add
add
fisttps
add
add
add
add
add
add
add
add
add
add
mov
or
rolb
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
or
rolb
add
mov
add
add
add
add
add
add
add
and
or
rolb
add
mov
add
add
add
add
add
add
call
add
mov
add
add
add
add
add
add
add
add
ljmp
pop
add
inc
add
inc
add
push
add
add
add
add
add
add
dec
add
add
add
add
inc
add
inc
add
inc
add
dec
add
add
add
add
add
inc
add
dec
add
push
add
push
add
inc
add
inc
add
add
add
add
inc
add
inc
add
dec
add
inc
add
add
add
add
inc
add
dec
add
add
add
add
add
inc
add
dec
add
add
add
add
pop
add
inc
add
inc
add
add
add
add
inc
add
add
add
or
push
add
inc
add
dec
add
push
add
dec
add
push
add
add
mov
add
add
add
add
add
add
add
addb
add
mov
add
add
add
add
add
add
add
add
or
test
add
mov
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
or
push
add
add
add
add
push
add
dec
add
dec
add
push
add
mov
add
add
add
add
sldt
sub
add
push
push
add
js
add
mov
sldt
enter
out
sldt
lock
add
sbb
add
inc
pop
add
push
sldt
nop
pop
add
mov
sldt
loopne
add
or
add
xor
add
pop
or
cmp
add
orb
cmp
add
test
add
rorb
add
clc
or
cmp
add
and
add
dec
or
cmp
add
jo
add
cwtl
or
addb
add
mov
add
add
add
add
add
add
add
add
or
insb
add
add
add
add
add
add
add
push
in
or
cmp
add
add
add
add
add
add
nop
push
add
test
or
js
add
mov
add
add
add
add
add
add
cmc
or
mov
add
add
add
add
add
add
add
loopne
add
fdivr
or
xchg
add
add
add
add
add
add
add
or
add
jo
or
jo
add
mov
add
add
add
add
add
add
pop
add
loopne
or
sub
add
mov
add
add
add
add
add
add
add
or
or
faddl
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
add
inc
add
add
mov
add
add
add
add
add
add
pop
add
addb
add
add
add
add
add
add
add
add
clc
pop
add
xor
or
call
add
add
add
add
add
add
add
and
add
sbb
or
cmp
add
mov
add
add
add
add
add
add
add
push
or
add
add
mov
add
add
add
add
add
add
add
adc
or
mov
add
add
add
add
add
add
add
cwtl
or
add
add
add
add
add
add
add
add
rorb
add
push
or
and
add
mov
add
add
add
add
add
add
or
add
or
cmp
add
mov
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
cmp
add
mov
add
add
add
add
add
add
add
add
pusha
or
add
add
add
add
add
add
add
add
mov
add
push
add
add
add
add
add
add
add
mov
add
sbb
or
mov
add
mov
add
add
add
add
or
addb
add
sub
add
push
or
xorb
add
inc
or
andb
add
add
add
mov
add
add
add
add
add
add
or
add
sub
add
add
add
add
add
add
add
add
inc
or
add
sub
add
add
add
mov
add
add
add
add
add
add
add
or
or
repnz
add
add
add
add
add
add
nop
or
add
xor
add
add
add
add
add
add
add
mov
or
xor
add
mov
add
add
add
add
add
add
or
add
test
add
add
add
dec
add
dec
add
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
push
add
add
push
add
xor
add
push
add
add
push
add
xor
add
push
add
add
push
add
xor
add
or
push
add
dec
add
add
dec
add
inc
add
dec
add
add
mov
add
add
add
add
jg
add
jg
add
or
cmp
add
or
cmp
add
xor
cmp
add
pop
or
cmp
add
orb
jg
add
add
add
add
add
add
add
add
rorb
add
sbb
add
add
mov
add
add
add
add
add
add
or
add
push
or
adc
add
mov
add
add
add
add
add
add
or
add
or
adc
add
mov
add
add
add
add
add
add
add
pusha
push
or
adc
add
mov
add
add
add
add
add
add
add
js
or
adc
add
mov
add
add
add
add
add
add
push
or
adc
add
mov
add
add
add
add
add
add
or
add
add
add
add
add
add
adc
add
mov
add
add
add
add
add
add
or
or
adc
add
or
dec
add
dec
add
dec
add
dec
add
add
mov
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
sub
add
add
add
add
add
add
add
or
push
aaa
push
add
adc
inc
es
push
pop
add
fs
sub
add
jne
add
jp
add
jle
add
jg
add
aas
add
dec
add
add
add
add
dec
daa
add
and
sahf
push
sub
pushf
pop
xor
mov
push
sub
movsl
pop
sub
stos
pop
sub
mov
popa
add
xor
mov
push
cmp
mov
outsl
cmp
ret
jae
add
jno
add
jl
add
imul
insb
push
add
outsl
inc
add
jne
add
imul
jg
add
je
add
js
add
jp
add
jp
add
jg
add
jg
add
xor
add
mov
add
lea
add
fwait
inc
add
cwtl
inc
add
pushf
dec
add
pushf
dec
add
movsl
push
add
dec
add
dec
add
pop
add
pop
add
add
pop
add
dec
add
add
push
add
push
add
add
pop
add
pop
add
pop
add
push
add
pop
add
add
pop
add
pop
add
pusha
add
add
push
jl
jge
push
jae
dec
mov
add
bound
push
mov
add
add
add
add
add
push
popa
movsb
imul
jb
ja
insb
mov
add
jo
push
jbe
insl
mov
add
jnp
je
jg
push
shrb
ret
pop
enter
jo
pop
lret
pusha
leave
outsl
add
jb
arpl
je
gs
js
push
js
data16
add
jp
sarb
insb
sarb
sarl
xchg
xchg
nop
push
add
test
mov
movsb
add
cmpsl
jno
int3
orl
fildl
dec
add
mov
ficoms
push
add
mov
nop
push
add
xchg
pop
add
xchg
dec
add
xchg
push
add
lcall
out
pop
add
lahf
pop
add
mov
pop
add
test
add
mov
add
mov
fstps
ja
jecxz
arpl
ljmp
add
lods
imul
mov
add
mov
add
mov
js
in
mov
add
mov
js
out
mov
jnp
jge
addl
jp
test
outsl
iret
addb
lret
outsb
roll
add
xchg
jl
mov
jge
lea
andb
add
scas
mov
mov
add
lods
addb
movsl
mov
fisubrs
addb
mov
add
mov
mov
out
lea
jmp
mov
lock
xchg
add
aam
add
int
add
les
add
xchg
add
fsts
add
popf
add
loopne
add
shll
add
fsubrl
add
fidivs
add
ljmp
lods
loopne
add
loope
add
loope
add
lds
add
mov
icebp
lret
in
ret
repnz
xchg
add
rcrl
add
fdivl
add
lds
mov
faddp
add
out
add
jmp
flds
mul
lret
ljmp
out
out
clc
in
loop
in
lock
add
icebp
jmp
add
lock
icebp
repz
hlt
repz
incl
add
cmpsb
cmpsb
arpl
rcr
fistl
scas
ret
add
add
jns
loopne
fstp
fst
push
push
dec
lret
lret
imul
add
stos
scas
lret
fst
aad
lret
push
add
insb
dec
inc
add
cmovs
lods
scas
lret
aad
ror
scas
pop
cmp
cmp
add
add
inc
jne
lods
lods
ret
aad
aad
ror
lret
jbe
jbe
push
inc
or
add
add
dec
aaa
dec
jne
jns
scas
lret
aad
ror
leave
lret
scas
lods
jne
imul
add
add
sub
mov
inc
aas
push
jne
lods
scas
ret
aad
aad
ror
lret
leave
lret
jns
insb
push
cmp
sub
mov
movsb
in
dec
pop
jne
lods
lods
ret
aad
aad
aad
iret
lret
leave
ret
outsb
push
aaa
inc
pop
mov
movsb
movsb
movsb
mov
jns
scas
ret
aad
fstp
aad
aad
ror
scas
lods
jne
or
add
or
nop
xchg
fwait
sahf
mov
mov
lret
aad
xlat
loopne
fstp
fst
aad
iret
lret
inc
or
add
add
add
sbb
and
mov
sahf
sahf
fwait
lcall
aad
fucom
loopne
fstp
xlat
aad
lret
cmp
add
add
add
adc
xor
sahf
mov
sahf
mov
fstp
loop
icebp
icebp
icebp
icebp
loop
fnstsw
fst
lret
pop
cmp
add
add
add
and
mov
movsb
mov
mov
loopne
fucomip
icebp
repnz
in
in
in
lret
sub
xchg
movsb
movsb
movsb
movsb
movsb
mov
lret
in
icebp
repnz
stc
stc
stc
div
icebp
icebp
icebp
icebp
loopne
inc
bound
add
add
add
add
nop
xchg
lcall
movsl
movsb
movsb
popf
movsb
call
repz
stc
stc
stc
stc
div
repz
add
xor
movsl
in
call
movsb
jmp
idiv
std
std
sti
div
repnz
icebp
in
repnz
icebp
test
sub
out
ljmp
call
std
std
div
aad
lods
scas
stos
jbe
rcl
scas
push
imul
add
add
add
jle
movsl
in
call
clc
clc
in
ljmp
out
in
aad
lret
loopne
repnz
scas
dec
inc
pop
imul
add
add
movsb
jmp
cli
sti
clc
hlt
jmp
jmp
in
or
insl
outsb
lret
into
test
stos
lods
insb
data16
add
cli
cli
clc
hlt
jmp
ljmp
add
test
jae
int3
je
pop
int3
add
call
out
xchg
xchg
mov
add
add
jne
lret
in
repz
lret
add
mov
out
xchg
movsb
in
jmp
mov
sbb
jl
add
mov
push
insb
jne
lods
ret
lods
jno
add
ss
mov
add
add
pop
jne
scas
int3
lret
jo
insb
sbb
jmp
add
add
inc
inc
pop
jne
lret
aad
scas
jbe
insb
test
add
push
and
xchg
mov
add
add
ds
insb
lods
iret
fnstsw
ror
lods
jbe
dec
add
adc
and
lea
addb
add
fcomip
repnz
int3
scas
jne
inc
add
pop
and
xchg
sahf
mov
mov
inc
insb
lret
fcomip
repz
loopne
scas
insb
dec
cmp
adc
xchg
mov
mov
add
jno
repnz
div
repz
scas
imul
pop
and
movsb
call
mov
add
stc
cld
stc
div
in
aad
imul
add
add
test
jmp
sub
add
imul
stc
stc
stc
div
jne
cmp
mov
mov
hlt
clc
clc
hlt
ljmp
add
data16
repz
div
in
lret
cmp
and
cmc
jmp
mov
add
add
repz
shrl
add
sub
clc
hlt
jmp
add
add
add
lret
fucom
lret
jns
dec
inc
cmp
add
add
ljmp
add
add
add
lret
aad
lret
scas
lods
insb
dec
inc
add
fwait
lea
sbb
sub
add
add
add
add
scas
test
add
add
fwait
sahf
sahf
xchg
lea
jge
shlb
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
clc
pop
incl
add
incb
add
add
push
add
pop
add
inc
add
pop
add
incl
add
incl
add
pop
add
incb
add
pop
add
incb
add
add
add
lock
add
pop
add
loopne
add
add
add
addb
add
aas
add
addb
add
aas
add
addb
add
aas
add
addb
add
jg
add
jg
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
incl
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
pop
incl
add
add
pop
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
sarb
add
add
incl
add
sar
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
xor
add
add
add
add
add
add
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
popa
jae
gs
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
popa
jae
gs
bound
fs
je
je
or
je
jo
cmp
xor
and
and
insl
gs
jo
imul
popa
je
outsl
outsb
and
and
jb
imul
xor
xor
xor
and
jo
outsl
arpl
jae
jb
jb
push
je
jb
cmp
ds
fs
outsb
fs
arpl
or
and
gs
outsb
fs
je
jae
gs
bound
or
and
and
jae
gs
bound
fs
je
je
or
and
and
and
gs
xor
and
and
and
and
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
or
and
and
and
jb
imul
xor
xor
xor
or
and
and
and
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
or
and
and
and
addr16
addr16
or
and
and
and
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
ds
and
fs
outsb
fs
je
jae
gs
bound
or
das
fs
outsb
fs
arpl
or
jae
gs
bound
or
add
add
and
add
xchg
inc
add
imul
add
lods
add
stc
in
add
lea
add
dec
add
mov
sahf
add
cltd
in
add
rcrl
add
add
dec
xchg
add
flds
add
adc
and
pop
add
movsl
in
add
xchg
push
add
add
fadds
add
jl
add
iret
pop
add
cmp
or
add
add
sbb
push
sub
or
cmp
or
push
nop
or
pusha
nop
or
add
add
jl
or
add
add
mov
add
add
nop
or
add
add
in
or
add
add
add
or
add
add
sub
add
push
xchg
or
add
add
jl
or
add
add
add
add
lcall
or
add
or
add
add
pushl
or
adc
or
sbb
or
add
add
call
or
and
or
add
add
pushl
or
sub
or
add
add
fcoms
or
xor
or
add
add
clc
nop
or
xor
or
cmp
or
add
add
lcall
xchg
or
cmp
or
inc
or
add
add
incl
add
add
add
add
add
pushl
or
dec
or
imul
gs
xor
cs
insb
add
add
add
stos
stc
xchg
std
stc
rclb
xchg
and
sbb
add
mov
jmp
adc
outsb
add
add
add
icebp
push
sbb
add
mov
xchg
adc
icebp
push
add
aas
push
add
jne
gs
xor
fs
insb
add
add
mov
jmp
ds
arpl
or
add
popa
fs
jo
xor
cs
insb
add
add
add
mov
xorb
cmc
je
and
push
mov
gs
jne
xor
cs
insb
add
add
add
mov
xchg
and
cmc
arpl
add
add
add
jbe
jb
imul
add
add
cmc
je
and
outsb
add
add
imul
insb
add
add
add
cld
outsl
ficoml
lods
cmp
jg
sbb
add
arpl
arpl
xor
fs
insb
add
add
add
scas
sti
xchg
aam
outsl
roll
mov
or
lods
repz
add
ja
outsb
imul
insb
add
add
arpl
xor
add
lds
pop
out
add
add
dec
dec
dec
dec
cs
dec
dec
add
add
mov
stos
and
out
int3
sbb
pop
xchg
mov
add
sbb
or
xor
add
add
or
add
add
add
add
add
sub
add
pusha
mov
mov
dec
add
mov
shl
sbb
push
lock
or
sub
mov
cmp
cmp
dec
sub
enter
jge
sbb
xor
xor
sbb
inc
xor
je
adc
and
sbb
mov
fs
adcl
je
mov
jae
cmp
stos
mov
mov
add
shlb
push
add
decl
std
push
loop
or
aaa
push
decl
repnz
roll
mov
sbb
clc
aad
cmp
add
cmp
jno
xor
push
adc
adc
out
insl
loopne
mov
mov
clc
jg
pop
imul
cmp
push
subl
ret
sub
sbb
mov
push
pop
fdivrs
xor
mov
out
stos
mov
add
imul
std
pop
push
lea
jle
mov
push
test
test
mov
push
push
xor
inc
mov
adc
mov
mov
cmp
cmp
pushf
mov
test
cmp
mov
into
sub
fwait
sbb
lea
mov
nop
pop
xor
lds
mov
xchg
push
enter
cmp
xchg
mov
ss
xchg
testl
push
adc
je
xchg
push
mov
incl
jmp
push
and
mov
jl
xchg
xchg
adc
addr16
in
and
add
imul
and
jl
add
jge
sti
add
gs
or
mov
mov
shr
loope
stos
in
adc
imul
std
sbb
mov
sahf
fcmovbe
push
in
cmp
jae
dec
and
mov
shlb
sahf
xchg
and
or
xor
ret
sub
adc
adc
adc
call
loop
inc
dec
mov
cmc
adc
mov
repnz
lret
or
push
adc
xor
into
xor
enter
mov
es
jl
test
or
lea
bswap
cwtl
ret
push
stc
dec
mov
lea
or
in
and
lds
cmp
inc
int
popf
ret
inc
xorb
or
fs
sub
adc
xchg
cmp
inc
mov
dec
push
mov
lock
jmp
out
mov
mov
sbb
sarb
jmp
and
jmp
push
and
ja
push
or
bound
mov
dec
ss
lods
pop
adc
cmp
inc
and
push
loopne
xor
movsb
mov
adc
sbb
jne
in
loope
sahf
sbb
sub
lret
ficoms
inc
push
pop
adcl
push
adc
into
dec
inc
cli
sub
sub
fxch
mov
and
fildl
add
mov
enter
sti
adc
arpl
jne
enter
mov
jmp
and
mov
xchg
inc
adc
fiadds
jb
sub
cmpsl
mov
test
cmpsl
jo
pop
lea
dec
jmp
cmpsb
xchg
in
int3
dec
loop
sub
add
xorl
mov
pop
or
add
jl
mov
sbb
jecxz
lea
pushf
or
push
test
mov
sub
adc
enter
dec
in
hlt
cli
mov
inc
out
add
sar
sti
out
enter
add
push
mov
shl
and
xchg
xchg
adc
and
mov
inc
sub
arpl
iret
jb
and
lea
mov
inc
lods
sbb
repz
roll
call
jb
sbbl
xchg
repnz
mov
pop
scas
jo
je
jmp
pop
and
adc
mov
aam
jmp
sbb
cltd
lahf
inc
pop
or
or
sbb
xchg
fwait
je
je
sub
and
lds
add
lret
lea
lock
add
stos
test
dec
or
mov
push
pop
jb
loope
push
jb
add
addb
pop
orl
sub
sbb
sub
push
add
and
gs
push
adc
mov
push
add
inc
add
sub
stc
push
mov
add
adc
es
idiv
mov
xor
fdivs
loopne
add
dec
mov
sbb
mov
add
push
jo
cs
push
dec
mov
lds
rolb
push
push
in
dec
xor
int3
adc
sbb
out
test
data16
or
push
cli
sar
mov
mov
push
add
push
cmpl
cmp
jo
sbb
or
pusha
lds
adc
adc
dec
and
arpl
xor
or
addb
cltd
add
ds
ret
or
inc
cmp
mov
sbb
pusha
or
push
push
adc
aam
add
test
mov
inc
fstps
mov
adc
cmp
push
mov
jmp
sbb
call
mov
push
call
in
stc
cmp
fimuls
add
add
or
cmp
jbe
add
lea
lods
stos
and
nop
cmpl
orl
jae
test
jno
mov
in
rcr
rep
out
iret
and
cmp
das
sbb
push
ret
xor
cwtl
or
push
call
add
mov
mov
inc
xor
push
dec
repz
test
add
nop
sub
jne
xchg
nop
add
jle
xor
leave
je
add
mov
out
test
push
xchg
ficoml
or
dec
inc
cld
icebp
add
jmp
mov
inc
add
aad
pop
push
mov
into
cmp
mov
test
lcall
add
pop
pop
ret
push
popa
pop
cld
and
call
jmp
sub
jne
fmuls
js
push
call
inc
xor
push
or
jle
add
xchg
sti
ret
sub
push
out
mov
jne
inc
inc
shrb
es
xor
leave
push
add
jp
hlt
push
ror
inc
shll
mov
cld
or
lods
inc
sysret
add
xlat
add
cltd
les
call
mov
jl
cmp
or
sbb
jmp
pop
lret
mov
push
clc
movzwl
test
dec
fmuls
outsl
je
push
int3
jle
arpl
xor
enter
add
sub
cld
shll
add
enter
sbb
or
int3
rclb
xchg
test
push
scas
add
out
xor
rcrl
pop
xor
push
inc
or
add
pushw
jo
call
pop
dec
sbb
dec
jne
jl
scas
lods
leave
test
aam
popf
mov
test
lea
fdivs
les
dec
dec
or
cmp
xchg
add
movsl
xchg
enter
push
push
cli
sahf
movsb
push
aam
sbb
stos
les
sbb
stos
pop
into
pusha
insl
cmp
cmp
ret
mov
jg
pushf
add
lock
push
push
inc
pop
mov
cmp
test
or
mov
subl
sub
ret
mov
pop
das
or
jl
and
xchg
int3
rorb
hlt
dec
push
mov
or
mov
push
push
flds
in
sub
xor
inc
mov
xor
ljmp
fsubr
lret
call
jge
mov
push
stc
jmp
push
fisubl
movl
loopne
sub
pop
jns
ret
or
push
inc
or
cmp
inc
addr16
inc
add
lock
lcall
aam
je
and
or
mov
push
dec
les
test
and
push
push
push
push
daa
call
sbb
mov
test
push
insl
jae
bound
fcompl
sbb
testb
xchg
mov
shrb
rcl
sbb
jmp
in
dec
and
shlb
mov
lods
push
jge
push
push
adc
rcrb
testb
cmp
dec
ret
or
shr
mov
inc
jp
loop
cmp
lret
lods
es
pop
pop
andl
add
lea
jmp
xor
stos
push
inc
dec
xor
repz
xor
icebp
mov
sbb
dec
jne
repz
xor
cld
xchg
inc
movsl
adc
xchg
inc
mov
inc
cmp
dec
adc
jl
prefetchnta
shr
xor
int3
push
lret
jbe
dec
push
xchg
jae
xchg
or
add
sbb
sub
jb
gs
loopne
loopne
mov
and
add
es
and
scas
loope
sbb
add
inc
mov
lea
jp
fnsave
push
pop
cmpsb
hlt
lret
pop
imul
xor
rolb
imul
cmp
inc
insb
sbb
outsb
fs
fmull
dec
jo
sub
pop
inc
iret
je
inc
fs
cltd
sbb
rclb
jb
cld
cmc
mov
lods
fadd
cmovl
xor
sbb
add
cmp
test
aad
cwtl
testl
dec
add
je
and
jl
sub
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
mov
or
inc
adc
add
add
adc
or
or
or
add
inc
add
or
add
or
mov
lea
mov
mov
mov
movb
add
sub
mov
xor
ret
mov
popl
add
push
push
push
push
push
push
lea
mov
push
mov
push
push
pushl
push
mov
add
mov
call
pop
mov
push
push
mov
mov
add
mov
mov
mov
add
mov
mov
add
mov
add
lea
push
push
push
call
pop
pop
add
mov
push
mov
mov
add
sub
mov
mov
mov
call
mov
mov
mov
pop
jmp
add
push
push
push
call
mov
pop
pop
pop
pop
pop
pop
jmp
add
add
int3
popf
dec
add
popf
dec
add
popf
dec
add
popf
dec
