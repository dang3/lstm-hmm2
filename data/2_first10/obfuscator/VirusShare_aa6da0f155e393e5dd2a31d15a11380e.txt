outsb
popa
push
mov
add
add
add
pop
add
mov
jge
je
movl
mov
xor
push
mov
lea
push
lea
push
call
sub
add
cmp
jbe
lea
push
lea
push
call
inc
cmp
pop
pop
jae
jmp
decl
js
jmp
push
push
call
cmp
pop
pop
je
pop
pop
xor
pop
leave
ret
mov
push
add
push
pushl
pushl
call
push
pop
add
or
mov
je
mov
mov
mov
mov
mov
rep
movzwl
andl
cmpw
lea
jbe
add
mov
mov
mov
add
mov
mov
add
mov
mov
mov
mov
rep
movzwl
add
incl
cmp
jb
mov
add
cmpl
jne
mov
add
mov
call
mov
mov
mov
mov
mov
mov
mov
pushl
pushl
pushl
pushl
call
jmp
mov
mov
mov
jmp
pusha
mov
mov
cld
mov
sub
movsb
mov
call
jae
sub
call
jb
call
sub
jne
call
push
pop
mov
push
push
pop
sub
rep
pop
jmp
sub
call
jb
lods
shr
jne
sub
mov
popa
ret
mov
scas
add
pop
jl
fdivs
cmp
adc
testb
std
in
negl
sbb
and
mov
mov
lcall
lret
aaa
rolb
rcr
and
jo
shlb
jbe
xor
scas
out
hlt
into
or
push
adc
insb
pop
mov
cmp
sbb
call
ret
mov
std
ljmp
lods
nop
lahf
mov
orb
les
mov
mov
arpl
ss
xchg
pop
lcall
stos
aad
jge
pop
add
gs
and
xor
sbb
jge
fists
ja
hlt
pop
xchg
jmp
pop
icebp
mov
out
loop
sub
shlb
cmp
daa
xchg
mov
cmc
sti
dec
popa
and
adc
inc
lods
std
pop
jecxz
test
mov
push
iret
and
popf
xchg
jecxz
into
jae
sti
xor
pop
jns
inc
mov
mov
mov
push
shrb
cmp
or
jo
daa
test
jg
xorb
cmp
sub
or
jg
movsb
inc
xor
mov
and
rcr
out
jg
test
testb
inc
nop
adc
mov
fnstsw
cmp
scas
ret
push
enter
fmull
jno
test
add
cmovnp
fmuls
cmpsl
in
leave
scas
cmp
adc
mov
or
sbb
cli
gs
dec
cmp
out
cmp
xchg
jno
jp
mov
inc
cmp
in
xor
fisubrl
sahf
xchg
ror
mov
push
lcall
fimull
loopne
filds
push
push
je
cmp
sbb
lahf
and
inc
lcall
inc
lcall
and
and
lcall
imull
icebp
fdivrl
outsl
xchg
inc
jp
jo
sti
test
out
push
shrb
pop
ret
lret
fldt
lock
jbe
mov
std
stc
xchg
push
lock
aaa
inc
mov
pop
and
mov
xchg
pop
cwtl
fsubs
cmp
mov
into
cmp
xchg
imul
push
mov
gs
pusha
subb
jle
jo
negl
movb
mov
xor
and
lds
sub
sbb
cltd
adc
cmpsl
cmp
imul
repz
pop
aas
imul
xchg
divl
cmp
or
and
fsub
cmp
lea
mov
icebp
leave
sub
lahf
cltd
mov
in
aas
or
pop
push
xor
repnz
test
popf
pushf
setb
fst
adc
jl
shl
inc
mov
pop
lock
mov
push
adc
stc
shll
sahf
sarl
fwait
and
pusha
call
pop
sub
xor
inc
xor
inc
cmp
jne
mov
jmp
jmp
mov
cmp
jne
xor
add
cmp
je
mov
xor
inc
inc
jmp
push
bound
lahf
fists
negl
lahf
aaa
pop
out
ficompl
stos
scas
pop
mov
fildll
fmull
negl
out
push
mov
pop
fildll
fmull
negl
negl
stos
fstps
mov
pop
daa
fstp
fisttps
fists
aaa
clc
fists
andb
lahf
aaa
aaa
sti
filds
pop
sbb
xchg
xor
push
pop
inc
negl
ret
mov
dec
not
and
mov
pop
pop
ret
pusha
xor
inc
nop
dec
xor
mov
mov
pusha
call
popa
add
sub
loop
popa
ret
push
mov
mov
push
pop
inc
mov
dec
shl
mov
dec
mov
shl
sub
mov
xor
sub
mov
shr
xor
sub
sub
mov
shl
sub
mov
xor
sub
mov
shr
xor
sub
sub
sub
dec
jne
pop
mov
mov
ret
ffreep
inc
add
adc
adc
add
add
add
adc
add
add
add
add
mov
inc
pop
mov
fsubs
ret
dec
pop
pop
