or
rol
clc
inc
inc
add
push
mov
cmp
sbb
add
add
shr
and
sbb
pop
ret
adc
movl
push
bound
push
push
test
je
cli
adc
dec
sbb
ror
cmpsb
inc
dec
rcrb
pop
pop
sbb
or
and
push
call
clc
pop
inc
add
or
sti
add
fstpt
mov
sub
sbb
push
inc
cmp
and
cltd
or
int3
dec
jne
out
pop
pop
mov
pop
ret
mov
push
test
jle
int3
pop
pop
test
fisttpl
xchg
fdivrl
dec
jg
fs
and
adc
test
push
xor
dec
jne
or
xor
adc
rclb
sbb
in
cmp
or
std
hlt
sahf
adc
mov
pop
jnp
rcll
sub
add
rep
mov
inc
je
loope
loopne
call
pushf
call
jle
push
push
push
daa
sbb
movb
or
or
push
push
sub
int3
popa
test
call
sbb
mov
jnp
and
sub
mov
mov
inc
sub
mov
loopne
mov
mov
push
xchg
or
aaa
loope
aaa
or
add
push
push
push
call
cmp
movsl
xor
xor
or
jmp
adc
lea
adc
adc
adc
add
and
lock
dec
add
adc
and
xlat
xor
pop
pop
ret
xor
mov
dec
or
addb
mov
pop
add
xor
cltd
mov
or
or
sub
sbb
push
enter
xor
dec
into
fs
dec
inc
es
sub
adc
addl
lret
xchg
sbb
test
movsb
adc
adc
or
imul
inc
jns
jg
xor
aas
cmp
pop
test
push
add
push
xor
mov
inc
add
dec
add
shll
add
rolb
ud1
push
add
movl
ret
nop
ud1
call
lods
es
adc
sbb
mov
xor
cwtl
aam
inc
test
sub
jne
daa
adc
lds
orb
sbb
jmp
mov
enter
inc
adc
cltd
pusha
mov
sub
xor
mov
pop
push
pop
sbb
dec
sahf
std
sub
push
enter
push
sub
mov
or
lea
xor
xchg
ja
xchg
jmp
pop
or
enter
outsl
lret
repnz
nop
pop
or
xchg
mov
push
stos
inc
or
mov
add
cli
add
cmp
iret
and
inc
add
jl
pop
pop
mov
add
adc
xchg
int
sar
fcomi
push
stos
ror
lea
mov
sbb
mov
mov
pop
shl
mov
or
mov
mov
mov
pop
xchg
mov
cltd
adc
mov
or
mov
cmpb
and
pop
add
cmove
lock
xor
push
adc
mov
pop
mov
pop
and
dec
pop
xchg
and
fs
mov
cmp
or
gs
scas
or
add
dec
mov
dec
adc
je
imul
dec
jb
and
dec
je
or
sbb
push
inc
or
push
or
inc
push
pop
inc
arpl
inc
pop
adc
mov
pop
xor
popa
pop
mov
mov
cmp
mov
push
or
rorb
mov
cmp
punpckldq
pushf
mov
adc
cmp
les
je
push
es
inc
push
pop
imul
insb
xchg
inc
and
adc
rcl
test
push
ficoms
push
mov
outsb
push
clc
push
movaps
and
sub
jecxz
pop
and
pop
and
push
and
jb
mov
xchg
pusha
loop
pop
add
xchg
sbb
imul
pop
dec
or
jo
pusha
and
dec
popa
cltd
jne
bound
arpl
inc
jns
mov
addr16
dec
push
test
push
add
gs
add
cmp
aas
push
dec
sub
push
sub
push
inc
pop
push
stos
mov
enter
pop
dec
popa
xchg
pop
dec
mov
mov
imul
mov
add
dec
add
mov
stos
rorl
dec
adc
mov
mov
xchg
push
loope
push
push
mov
xchg
push
adc
push
and
dec
push
xchg
outsl
and
jae
pop
bound
dec
dec
pop
cltd
popa
fwait
pop
dec
pop
pop
mov
sub
pop
sub
adc
sub
sub
stos
fwait
xor
xor
sbb
add
push
call
cmc
pusha
xor
dec
push
jns
rolb
inc
cli
push
sub
mov
pop
add
mov
mov
push
mov
add
pop
inc
js
push
push
mov
dec
inc
clc
add
mov
lea
arpl
ficoms
mov
add
roll
sti
fcoms
or
push
or
lea
xorl
push
mov
and
adc
xor
and
and
arpl
sbb
fs
adc
or
sbb
and
and
das
mov
cmp
daa
push
test
mov
push
push
mov
adc
leave
jmp
repnz
not
pop
xchg
dec
push
lea
mov
js
fucomip
fs
adc
fstpt
test
lods
push
test
push
lods
mov
jl
adcb
mov
dec
mov
pop
jmp
jns
ficompl
push
pop
adc
mov
lcall
push
test
cmp
lret
call
and
push
add
lret
shr
push
adc
xor
xor
test
movsb
pop
gs
stos
sub
je
fisubrl
sbb
jmp
lret
sub
push
test
xchg
xchg
adc
sbb
dec
and
orl
mov
nop
leave
in
sub
and
bound
add
outsb
mov
fwait
sbb
loope
and
mov
add
add
cmp
inc
stos
xor
sqrtps
dec
push
cs
lods
rclb
jecxz
xor
in
pusha
in
push
mov
jl
push
inc
push
pushf
sbb
les
dec
add
adc
add
pusha
jae
std
bound
or
fs
push
dec
add
cmpsb
inc
je
dec
pop
or
adc
jb
push
test
divb
adc
sbbl
jno
pushf
mov
gs
lds
fcoml
mov
mov
xchg
popa
jns
popf
mov
and
and
dec
imul
adc
sub
repz
shll
sub
and
adc
sbbb
and
inc
push
stc
outsl
adc
outsb
mov
je
sub
dec
sub
lret
xor
or
xchg
xchg
dec
cmpl
sub
mov
and
xor
sahf
xchg
pop
loope
add
arpl
shll
cld
adcb
and
inc
dec
sub
mov
fs
jge
sbb
sbb
mov
push
dec
dec
and
xchg
push
push
fwait
dec
sbb
pusha
or
xchg
fisubs
push
xchg
andb
pushf
lock
jb
enter
cltd
push
sub
push
lock
push
inc
xchg
cmp
add
sarl
xor
xchg
add
xchg
mov
lea
jg
add
mov
fucomi
sarb
sbb
pop
add
movsl
push
adc
cwtl
jb
sbb
sub
lret
mov
or
push
adc
in
sub
test
add
sarl
add
lds
adc
mov
adcb
jne
mov
iret
or
adc
adc
add
add
sti
test
xchg
cltd
cmp
clc
pop
scas
cmpl
inc
dec
push
cmpsb
inc
cld
sbb
sbb
dec
repnz
lods
fiaddl
in
subb
pop
pop
jl
fs
add
push
mov
inc
cmp
mov
mov
adc
pop
test
inc
out
ljmp
pop
or
xchg
xor
pop
jmp
mov
in
cmp
in
dec
movl
fdivl
push
or
dec
andl
add
mov
cmc
xchg
test
les
pop
lock
or
in
jl
hlt
bound
mov
mov
shlb
push
mov
stos
bound
mov
sti
push
or
pop
push
pop
jl
adc
mov
es
dec
fadds
push
fstps
push
push
sub
adc
or
ss
jp
outsl
dec
xor
pop
add
in
lods
add
mov
cmp
sub
aam
sbb
jbe
adc
sbb
sbb
and
leave
and
pusha
dec
sub
cmp
into
push
inc
dec
dec
add
push
clc
das
lret
fwait
ss
and
outsl
fs
fs
push
or
popf
dec
fildl
daa
xor
xor
jne
sub
mov
xchg
dec
cmp
sbb
push
inc
imul
and
jmp
xchg
cmp
pop
mov
pop
int3
int
sub
dec
mov
dec
xor
shlb
lods
adc
bound
push
jecxz,pt
sub
call
aad
sbb
sub
inc
cmp
add
cmp
jne
pop
push
pop
pop
data16
adc
dec
out
xor
loope
push
andl
adc
lret
pop
add
push
js
adc
jno
daa
insb
and
pop
push
adc
or
sbb
xchg
adc
and
mov
sbb
bound
sbb
sbb
and
cmp
inc
and
inc
and
add
xlat
xchg
mov
lea
push
movnti
mov
fs
es
mov
push
ret
repnz
jg
insb
movsl
push
jo
xorb
and
push
mov
inc
or
scas
mov
mov
mov
adc
push
enter
inc
and
dec
outsl
or
sub
inc
sub
push
xchg
sub
sub
das
dec
mov
xor
adc
popa
pop
xor
sbb
xor
or
mov
out
add
adc
cld
bound
xchg
pop
sbb
push
sub
cmpsb
out
and
inc
jbe
mov
sbb
push
and
test
and
and
orb
push
inc
xor
adc
aaa
and
dec
cmp
xchg
cmp
cmp
or
decl
ds
or
or
or
xor
jae
xor
dec
xor
test
gs
inc
aas
cmp
sub
inc
adc
jo
sub
movsb
enterw
pop
fs
das
mov
push
xor
push
mov
cmp
cmp
shrb
xor
cmp
inc
aas
xor
adc
inc
or
dec
add
les
mov
and
gs
adc
enter
mov
sbb
mov
sbb
dec
into
js
mov
daa
and
xchg
xchg
and
sbb
and
mov
or
out
es
push
fwait
cmp
inc
cmp
inc
sub
daa
adc
and
int3
dec
insl
frstor
or
or
movsb
sbb
mov
mov
add
pop
and
xor
loop
iret
mov
and
push
dec
daa
jnp
adc
daa
leave
sub
adc
and
inc
sub
test
xor
bound
and
fmuls
sbb
insb
sub
sbb
ja
push
sbb
iret
sbb
pop
mov
and
inc
insl
and
sub
ja
dec
and
mov
loop
and
sub
xor
xchg
or
mov
inc
push
ror
adc
adc
adc
pop
and
xor
or
adc
arpl
adc
cs
pop
adc
xchg
sbb
or
int3
and
adc
dec
push
xchg
sub
outsb
inc
sub
sub
mov
shrb
sub
push
in
das
adc
xor
lret
inc
xor
add
or
mov
fnstenv
xchg
pusha
or
or
pop
jbe
dec
add
mov
or
pop
bound
in
hlt
lret
cmp
add
push
pop
adc
xor
or
inc
push
into
notl
push
jecxz
test
xor
push
mov
call
add
mov
xchg
cwtl
pop
test
je
dec
push
stos
inc
dec
mov
sub
in
dec
cmp
inc
pusha
pop
sub
enter
pop
repz
pop
push
push
stc
mov
push
mov
shrb
clc
and
or
lock
call
clc
pop
push
add
push
testb
ljmp
out
and
sbb
mov
xor
sub
in
cmp
lods
cmp
cmp
xor
and
das
dec
xor
cmp
inc
fs
sarb
add
sub
and
sub
jb
das
or
xor
mov
in
mov
sbb
rcr
call
or
and
sbb
in
loop
mov
lods
loop
icebp
aad
adc
mov
pop
jae
adc
adc
enter
add
sbb
fisubrl
ret
inc
dec
cli
or
mov
xor
loopne
mov
mov
inc
aaa
mov
movsl
mov
inc
and
inc
je
mov
fidivrl
and
daa
ja
sub
sub
shr
nop
insb
mov
sub
and
imul
popa
dec
xor
xor
xor
and
pop
or
cmp
or
test
addr16
bound
dec
aas
adc
adc
inc
addr16
data16
inc
adc
addps
subb
push
xchg
xchg
inc
sbb
in
bound
and
jbe
imul
das
out
out
hlt
adc
and
mov
adc
mov
push
mov
pop
mov
mov
ds
and
push
imul
pop
push
pop
add
sub
dec
mov
leave
fs
and
xchg
and
jo
lret
icebp
or
popf
xor
les
sub
loop
sub
sub
pusha
sub
cmpsb
or
bound
sub
xor
jg
xor
xor
mov
test
dec
daa
ss
mov
mov
enter
jb
cmp
xor
sbb
xor
aas
es
inc
inc
addr16
scas
xchg
inc
inc
mov
push
dec
adcl
push
ret
les
sub
fldcw
and
dec
in
in
xor
mov
shlb
adc
or
inc
gs
sahf
push
insb
inc
icebp
sbb
icebp
loop
cmp
bound
cmp
jb
cmp
adc
lea
inc
push
jne
xchg
cmpsb
js
adc
inc
jae
cmpsb
outsl
inc
xor
xor
bound
sbb
mov
daa
sub
xchg
xchg
cmp
cmp
imul
ds
dec
aas
int3
sti
inc
inc
dec
push
inc
icebp
adc
sbb
das
test
mov
call
cmpb
and
mov
jecxz
push
mov
dec
push
jle
loope
lock
xlat
aas
or
lea
add
pop
fisubs
testb
ret
sbb
adc
inc
add
mov
mov
push
push
xor
add
adc
adc
pop
sbb
or
outsb
and
out
adc
jo
insb
test
nopl
in
ds
call
lock
sbb
sbb
loope
gs
lods
mov
sub
pushf
sahf
sbb
cmp
daa
je
mov
or
pop
lcall
jmp
sub
pushf
mov
lods
imul
pop
cmp
xchg
shll
add
push
mov
mov
inc
int
int3
add
add
jmp
or
in
push
movsb
sbb
sbb
inc
add
or
int3
add
ds
inc
inc
inc
and
movsb
pop
cld
adcl
pop
orl
and
adc
add
fs
mov
in
daa
push
cwtl
bound
icebp
das
mov
call
fisubrl
jne
sbb
xor
add
test
call
or
cmpsb
orl
dec
lds
mov
xchg
lea
push
push
pushl
pushf
or
in
test
lcall
outsl
add
mov
cmpb
aam
inc
adc
add
sub
adc
and
aad
rcrb
imul
call
movzwl
xchg
cmp
sub
or
push
pop
pop
mov
sbb
fsts
sbbl
dec
or
dec
mov
int
jl
movsb
sub
add
mov
cmpsb
scas
lret
add
sub
and
sahf
lcall
cltd
les
sub
xchg
out
mov
movw
jnp
inc
mov
sarb
push
inc
push
out
mov
cli
or
mov
fidivrl
push
cmp
andb
xchg
jnp
sbb
xor
add
push
push
add
xchg
aad
add
int3
mov
pop
adc
mov
insb
ja
sub
andl
add
adc
enter
fucom
aam
sbb
test
lods
pushf
add
cmp
lahf
or
test
jbe
xlat
ret
mov
add
xor
and
sbb
or
cmp
sub
add
or
ds
push
push
push
inc
cmp
sub
and
adc
cmp
sub
add
adc
add
xor
and
sbb
or
cmp
sbb
aaa
das
daa
add
pop
sysret
sub
xor
inc
and
pop
aas
pop
es
add
push
ss
ds
and
xor
add
sub
xor
cmp
and
add
or
adc
sbb
add
sub
xor
cmp
and
add
or
adc
sbb
loopne
add
add
add
pop
or
or
or
adc
adc
sbb
or
sbb
adc
sub
iret
adc
movhps
add
or
sbb
and
add
adc
or
xchg
mov
fsubs
mov
push
adc
test
and
aas
pop
adc
sbb
cmpsl
add
xor
adc
sbb
adc
adc
add
xor
pop
and
xor
xor
cmp
xor
and
adc
pop
push
xor
stos
or
push
or
or
pop
sbb
ss
sub
jg
iret
mov
mov
add
dec
add
add
cmpsl
out
fwait
pop
push
clc
clts
or
sbb
addr16
push
add
xchg
paddusw
push
sbb
scas
std
jl
leave
or
outsl
add
pop
aas
jl
flds
mov
or
cmpsb
add
cs
fadds
and
clc
mov
faddl
cmp
or
lods
or
ds
add
and
add
sub
mov
xchg
nop
in
pop
mov
cmp
mov
pop
sbb
insb
pop
pop
dec
or
mov
dec
sbb
push
push
jl
xor
pusha
lret
fisubs
ljmp
inc
rclb
cmpl
outsl
inc
mov
or
add
rorl
stos
faddl
enter
add
inc
adc
xlat
add
out
rorb
sbb
push
out
mov
loopne
mov
xchg
or
jl
insl
push
dec
mov
cmpb
mov
leave
add
sub
pop
aad
mov
aam
mov
lret
loopne
push
pushf
dec
bound
or
pusha
push
sub
mov
add
test
pop
repnz
loopne
pop
psubw
lds
test
incl
and
je
movsl
adc
andl
xchg
xor
test
enter
inc
rorl
pop
mov
and
dec
loop
inc
add
jl
mov
test
ret
inc
add
and
or
scas
jb
pop
xor
cmpb
cmpsb
cmpb
adc
add
add
add
sub
mov
add
jge
jbe
inc
adc
inc
push
aam
sbb
inc
imul
jg
inc
xor
or
or
call
or
and
std
pop
nop
or
pop
mov
js
or
lds
cmp
mov
ss
push
cmpsl
add
jns
hlt
xor
jmp
mov
add
xchg
ds
enter
add
add
inc
ss
dec
inc
push
dec
pusha
dec
xor
cs
loope
inc
push
jo
dec
enter
mov
xor
push
inc
sub
inc
adc
add
pop
sbb
and
lret
cmp
test
or
adcb
loopne
lea
and
leave
or
push
add
dec
dec
jecxz
mov
adcb
out
sbb
inc
dec
js
push
dec
push
push
xor
push
dec
dec
push
pop
adc
mov
add
pushf
xor
subl
push
enter
fs
test
sub
int
xchg
repnz
mov
xchg
fs
testl
iret
imul
add
imul
or
cwtl
push
sbb
dec
pusha
jl
dec
mov
xchg
add
inc
pop
mov
inc
adc
xchg
or
jle
in
test
mov
and
test
rcrb
sbb
jno
inc
jns
push
mov
adc
add
inc
dec
and
mov
es
sbb
and
sub
add
outsb
je
adc
in
cs
inc
jb
gs
je
push
outsl
arpl
jg
inc
xor
mov
icebp
insb
xor
mov
push
inc
pop
pop
push
dec
push
dec
inc
sbb
jbe
push
jns
outsb
popa
insl
lock
xor
sbb
add
bound
fs
arpl
outsl
insl
xor
mov
out
push
sbb
sti
push
cmp
ja
popa
jb
jne
or
xor
inc
dec
jecxz
sbb
jns
sahf
dec
bound
inc
adc
or
add
or
push
push
push
add
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
add
add
dec
add
add
add
xor
add
xor
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
jo
add
add
xor
cmp
xor
xor
xor
xor
bound
xor
add
sbb
add
add
inc
add
insl
add
add
je
jae
add
and
add
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
xor
add
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
lds
add
add
add
add
imul
push
add
jb
jae
imul
add
add
aaa
add
xor
sub
xor
sub
xor
xor
xor
xor
add
add
xor
or
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
add
outsb
add
add
and
xor
add
pop
add
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
dec
jb
addr16
bound
and
sub
inc
add
add
add
add
add
add
add
add
insl
xor
pop
lds
fdivrl
bound
or
xchg
insb
push
clc
push
add
cmp
or
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
add
add
add
outsb
add
add
add
inc
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
icebp
insl
xor
pop
lds
fdivrl
bound
or
xchg
insb
push
clc
push
add
add
add
add
jb
imul
je
add
jne
imul
add
lds
add
sub
add
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
lds
add
cmp
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
aaa
add
add
add
add
add
add
add
add
add
add
and
add
add
push
add
add
imul
inc
add
imul
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
add
mov
sbb
dec
enter
xchg
and
sbb
mov
sbb
enter
add
pop
and
inc
push
sahf
mov
cltd
push
or
pop
and
mov
jmp
add
inc
and
dec
adc
cmp
pop
or
sub
pusha
sub
adc
lds
sub
push
loopne
loopne
addl
dec
push
xchg
andl
inc
cmpsb
mov
rclb
or
and
dec
jle
mov
scas
inc
mov
mov
adc
sub
push
jne
add
add
ja
add
mov
add
add
add
add
add
add
add
add
add
and
add
popa
or
add
pop
add
iret
jne
add
add
add
add
out
jo
add
jo
add
jb
add
je
or
je
or
xor
add
pop
pop
ret
mov
call
pushl
ret
call
pop
sub
add
ret
call
mov
call
pushl
ret
mov
call
pushl
ret
mov
call
pushl
ret
mov
call
pushl
ret
push
mov
push
push
lea
push
push
call
mov
add
pop
ret
mov
push
lea
push
pushl
push
call
push
push
push
call
pop
ret
push
mov
push
push
push
push
push
mov
movl
call
pop
sub
add
mov
movl
call
pop
sub
add
mov
movl
call
pop
sub
add
mov
movl
call
pop
sub
add
cmpl
jne
mov
push
pop
mov
mov
mov
cmpl
je
cmpl
je
pushl
pushl
pushl
call
pushl
mov
pushl
add
pushl
call
pushl
mov
pushl
add
pushl
call
cmpl
mov
jne
pushl
call
andl
pop
jmp
mov
add
call
mov
pop
pop
pop
leave
ret
pusha
mov
call
popa
ret
push
pushf
pusha
mov
call
popa
popf
ret
push
mov
push
push
mov
movl
call
pop
sub
add
cmpl
jne
mov
jmp
mov
mov
movl
call
pop
sub
add
mov
add
pop
leave
ret
push
pushf
pusha
mov
call
popa
popf
ret
push
mov
push
push
push
push
jmp
nop
nop
call
pop
sub
add
mov
movl
call
pop
sub
add
mov
movl
call
pop
sub
add
cmpl
mov
jne
push
call
xor
cmp
setne
mov
pushl
call
pop
push
mov
mov
add
push
call
cmpl
je
mov
add
add
cmpl
je
mov
mov
mov
sub
add
push
call
test
mov
jne
push
call
mov
mov
mov
sub
add
mov
test
je
test
je
movzwl
jmp
mov
sub
add
add
push
pushl
call
mov
add
jmp
addl
mov
cmpl
jne
mov
add
movl
mov
call
pop
sub
add
movzbl
shl
cmp
jne
andl
jmp
xor
cmp
jne
cmp
jne
pushl
push
pushl
call
andl
pushl
call
andl
pop
pop
pop
pop
leave
ret
int3
pusha
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
int3
int3
int3
xor
add
jo
add
add
ret
jne
add
add
add
add
arpl
add
add
mov
add
add
add
add
add
add
fs
imul
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
je
jb
arpl
fs
jae
add
mov
je
popa
insb
inc
insb
insb
outsl
arpl
add
je
popa
insb
inc
jb
add
push
dec
inc
dec
xor
cs
insb
add
mov
jae
addr16
outsl
js
add
inc
push
xor
cs
insb
add
int3
jo
loopne
enter
cld
adc
dec
and
inc
ss
mov
data16
pop
cmpb
shlb
movsb
adc
add
cld
mov
inc
xchg
in
mov
add
shll
xor
bound
out
and
xchg
add
mov
cli
xchg
repnz
mov
add
jb
xor
jp
push
pop
cmc
cs
ljmp
push
fldcw
inc
cmpsl
loopne
mov
mov
add
inc
xchg
cli
or
incl
pop
sub
js
inc
push
add
fldcw
mov
sbb
or
add
sbb
inc
aam
call
sbb
dec
pop
sub
push
cmp
inc
cmp
cwtl
pop
out
stos
orb
int3
dec
das
push
pop
in
fidivrs
out
xor
mov
push
or
dec
or
add
testl
add
mov
rclb
mov
movsl
lock
iret
call
cmpsb
scas
xor
xlat
aad
jno
pop
lods
movsl
xchg
xchg
fwait
xchg
ljmp
xchg
jo
sbb
jne
inc
jns
inc
xor
ss
arpl
sub
xor
out
xor
rclb
cmc
cltd
adc
outsb
jmp
inc
xchg
xor
ja
sub
push
out
mov
sbb
insl
inc
hlt
push
xor
mov
mov
fisttpl
movsb
mov
aad
neg
add
xchg
sub
mov
pop
sub
pop
mov
pusha
repnz
mov
test
jge
ficompl
jmp
push
mov
hlt
movl
test
fs
add
in
leave
mov
add
adc
insb
push
arpl
cmc
or
outsb
cmp
pop
adc
in
pusha
aad
jb
addr16
add
aam
add
std
test
or
insb
cwtl
mov
add
leave
mov
lods
jge
add
xor
filds
or
cmp
sbb
cmp
ficoms
and
enter
sarb
and
add
iret
shld
sub
mov
or
and
or
das
adc
add
sub
inc
fdivl
jno
add
mov
adc
out
pop
mov
mov
movsl
in
mov
call
js
stc
add
mov
cwtl
push
loope
or
cmp
fs
add
pop
arpl
hlt
push
imul
popa
cli
sbb
fdivs
test
inc
repnz
xchg
push
hlt
jnp
add
sbb
hlt
or
cmc
fnstenv
mov
ljmp
mov
bound
pop
ficoml
gs
aam
add
popa
mov
into
subl
mov
dec
sbb
xchg
fadd
roll
movsb
sti
hlt
shrl
imul
xor
mov
lods
sarb
add
inc
in
add
pop
dec
or
stos
leave
jl
fnstsw
add
add
adc
or
leave
and
test
or
aam
mov
push
add
ficomps
leave
fldcw
and
rolb
mov
test
pop
cmp
or
mov
mov
in
mov
mov
lcall
mov
cmp
push
scas
ja
popf
adc
push
faddl
jae
or
test
add
pop
aad
cld
iret
push
add
popf
decl
xchg
daa
scas
rorb
setle
jge
inc
shlb
repnz
inc
push
add
push
test
jno
insb
sbb
clc
imul
sbb
loopne
rorl
adc
sbb
outsl
fistpll
mov
pop
aad
mov
call
jle
shll
cmp
fisttps
addr16
add
dec
ss
dec
fisubrl
or
imul
dec
add
pusha
jp
inc
ret
jbe
cmp
push
sbb
outsb
xor
imul
lret
sbb
shrb
ss
add
ja
int3
add
add
das
es
mov
mov
add
sub
mov
cmpsl
add
xlat
ret
shlb
sub
scas
ficomps
cld
add
pushf
mov
xchg
insl
add
add
push
jmp
addr16
jb
jo
add
adc
mov
mov
cmp
mov
or
mov
xchg
or
mov
fdivrl
fstpt
or
xchg
xchg
pusha
icebp
clc
mov
add
sbb
int
mov
mov
jae
add
mov
out
sarb
dec
cmp
pop
or
jns
add
clc
shl
imul
insb
push
js
or
xlat
push
addl
add
cmpsl
testl
inc
imul
dec
push
scas
faddl
pop
fldenv
filds
fdivs
push
sarb
jg
mov
jmp
sbb
mov
lret
mov
push
cmpsb
mov
sar
in
push
xlat
add
sub
push
mov
jp,pn
mov
dec
popa
add
add
push
add
aaa
mov
or
ret
add
add
sub
xor
hlt
bound
gs
insl
jnp
inc
out
in
dec
out
addr16
in
insb
dec
sbb
xor
or
adc
add
add
and
push
and
xor
imulb
inc
adc
inc
xor
int3
xor
jne
xor
inc
adc
push
inc
xor
push
xor
adc
adc
push
addb
in
insb
inc
add
imul
fsubrs
gs
stos
mov
push
cmp
push
imul
jo
jb
and
in
je
std
enter
je
popa
and
sbb
inc
outsl
cmp
cmc
inc
aad
out
push
xlat
loop
imul
bound
jecxz
and
push
ret
xor
je
adc
cmp
iret
mov
jae
sti
or
fisttps
aaa
jo
dec
stc
and
icebp
lcall
cltd
sahf
push
in
inc
fs
arpl
insb
mov
pop
cli
jl
bound
jns
adc
sub
inc
outsb
int
int
fwait
xorb
scas
fcmovnbe
jle
jne
filds
in
push
movl
call
jp
int3
add
sbb
sub
pop
call
hlt
lret
test
cli
adc
hlt
call
pop
sbb
enter
sbb
cmp
test
les
hlt
fsts
imul
adc
movsl
fwait
or
add
or
mov
xor
insl
sbb
or
ret
and
push
push
push
data16
out
adc
inc
jne
hlt
mov
stos
sub
or
mov
sub
dec
ffreep
cmpsl
xor
or
mov
aam
add
leave
cmp
setne
push
call
stc
in
add
and
cmp
std
hlt
popa
and
pusha
sub
mov
cmp
sbb
cmp
or
sbb
jecxz
sub
adc
or
cmp
test
clc
adc
ret
dec
pop
pusha
mov
cltd
daa
dec
popa
pop
iret
push
nop
call
pusha
pop
pop
lds
in
add
and
jmp
mov
movsl
mov
cld
hlt
sbb
cmpb
pop
add
sub
xchg
test
call
jo
cmc
rorl
scas
sbb
adc
add
rolb
mov
cwtl
test
jb
insb
mov
popl
rcr
xor
adc
and
add
cmp
or
cmpsb
sti
add
mov
push
mov
mov
sbb
test
add
xor
adc
pop
adc
scas
xor
dec
pushf
inc
inc
ds
sub
inc
inc
subb
add
jecxz
aam
mov
mov
sub
daa
popa
add
frstor
push
inc
push
jmp
arpl
test
lea
push
lods
ss
pop
js
cmp
mov
sbb
pop
adc
lret
inc
xor
stos
cmp
xchg
rcrl
clc
scas
push
xor
sub
add
lcall
sbb
sbb
and
and
ret
inc
je
sbb
mov
dec
aaa
sbb
cmp
rol
pop
fbstp
sub
xor
icebp
in
cmpsl
mov
add
adc
push
add
and
cmpl
mov
mov
out
or
xor
push
fadds
mov
sarb
mov
sub
jg
jge
bound
mov
sub
mov
jno
and
ds
inc
loopne
lods
cmp
push
push
shrb
hlt
lahf
pop
inc
jae
add
rolb
std
fs
jmp
push
or
iret
cli
and
cwtd
xchg
das
sbb
xchg
xor
jmp
jno
movb
nop
test
add
push
cs
add
jge
lahf
ljmp
and
es
push
sbb
mov
decl
das
push
cli
or
orb
jmp
jecxz
adc
jo
or
push
ret
test
cmp
push
pop
mov
lret
push
or
jbe
sub
int3
pushf
jmp
mov
or
sub
jno
orl
mov
adc
xchg
andl
pop
push
push
xchg
adc
add
cmp
add
or
mov
or
pop
mov
dec
mov
arpl
call
pop
repz
pop
inc
add
fidivs
mull
fdivl
pop
jl
imul
dec
xchg
jecxz
add
jns
shrl
adcb
push
mov
cmc
rcrb
adc
sbb
push
mov
add
mov
dec
lock
test
dec
les
sti
add
sub
mov
or
aaa
sbb
sub
rolb
es
adc
xor
add
bound
adc
iret
add
cmp
and
outsl
cmp
sti
and
jno
test
sub
shr
cmp
mov
jne
mov
inc
and
mov
mov
adc
xchg
push
xor
fdivr
or
push
mov
sbb
and
data16
shl
push
pop
stc
push
scas
add
jmp
mov
pop
fldt
xor
test
sbb
add
cmp
push
mov
stc
mov
cmp
dec
and
ret
sub
mov
mov
or
xchg
jmp
add
xchg
or
cmp
inc
pushl
orl
xchg
icebp
nop
je
mov
cs
incb
pop
cld
roll
stos
and
pushf
sub
dec
or
xor
sub
mov
pop
cmp
rcrb
add
push
cld
xchg
movl
add
call
repnz
ds
xchg
add
xlat
cmpsl
dec
lret
orl
add
subb
dec
adc
lcall
jno
mov
and
and
and
clc
add
push
and
fsubs
or
pop
add
pop
adc
xchg
pop
icebp
xor
adcl
rcll
cmpsb
dec
arpl
pushf
shrl
push
cmp
push
sbb
ret
lods
xor
jb
pop
xchg
adc
inc
adc
pop
sqrtps
daa
xor
repnz
nop
dec
call
sub
mov
or
pop
xchg
mov
pop
flds
add
mov
sahf
cmc
scas
shrb
shl
adc
adc
notl
call
push
loop
jg
int
pop
push
jno
xchg
or
inc
daa
loope
test
fs
inc
inc
and
sbb
add
xlat
push
mov
scas
xchg
test
mov
and
cmpsl
dec
push
idivb
ja
sub
add
sbb
call
pop
ret
rdpmc
rcrb
inc
data16
jno
shlb
ret
imul
pop
sub
cs
sbb
mov
jl
mov
pop
iret
xor
ret
dec
mov
xlat
push
and
dec
pop
gs
sbb
or
mov
adc
adc
clc
mov
pop
sub
jg
mov
shlb
mov
pop
add
cmp
adcl
ss
in
mov
xor
div
or
sbb
enter
roll
test
and
mov
or
dec
dec
notl
xchg
mov
add
icebp
cmp
and
es
jo
adc
and
fcom
bound
je
test
sub
hlt
cmp
lock
sub
sub
fwait
push
inc
lods
dec
sub
andl
inc
xor
das
cmp
mov
sbb
test
jl
cmp
cmpb
cmpsb
cltd
ret
bound
enter
xor
adc
shll
jecxz
lods
sbb
dec
xchg
adc
sti
mov
add
adc
sub
cmpl
mov
test
xor
and
js
lds
xor
sub
fbld
add
jne
fiadds
jmp
and
testb
lcall
jl
sbb
dec
shlb
jnp
xor
repz
loope
and
lret
jmp
pop
adc
rcrl
mov
add
dec
test
adcb
je
lea
int3
inc
hlt
or
andl
cmp
jnp
pusha
adc
pop
and
push
add
or
divb
je
fidivl
cmp
or
rcrl
xchg
push
lock
pop
pop
cltd
jne
leave
dec
sub
sbb
into
shlb
jmp
insl
push
andl
sbb
sarl
mov
cmp
or
jb
add
pop
enter
xorl
sarb
je
loop
lcall
xor
shrb
hlt
andb
cmp
or
add
mov
xor
sarl
add
test
es
push
inc
mov
aam
and
roll
adc
push
sub
loop
dec
pop
pop
push
or
push
jo
and
daa
lods
adc
frstor
push
fsubs
test
sahf
loope
pop
xchg
fnstcw
lock
xor
je
push
call
sub
lds
or
mov
leave
in
mov
add
jne
test
xor
test
cmp
or
testl
je
addb
das
add
js
int3
sti
add
lods
subl
int3
mov
cltd
cld
or
or
notl
push
loope
push
movsb
cmp
sbb
mov
sub
xchg
call
sbb
xchg
je
data16
ror
xchg
test
push
add
inc
pop
xor
fisttpll
sub
cwtl
add
jg
add
iret
sbb
aam
sub
fimull
and
xchg
call
es
rcrl
inc
xor
jne
mov
pushl
inc
outsl
add
pop
xchg
ss
test
sub
in
sbb
dec
iret
outsl
xor
adc
mov
adc
notl
sbb
pusha
or
gs
push
je
lods
test
xchg
xchg
dec
int3
clc
dec
adc
adc
inc
xchg
adc
cwtl
aaa
pop
inc
push
mov
and
andl
adc
mov
call
lcall
or
ss
sbbb
xor
or
mov
mov
clc
inc
sbb
jge
mov
mov
push
and
sbb
dec
pop
add
sti
insl
clc
mov
xchg
inc
insb
cmp
xchg
shll
call
pop
stc
sbb
and
les
loop
xor
xchg
sub
pop
and
mov
sarb
jno
or
xor
or
pop
xchg
jae
testl
call
add
jbe
lea
mov
xor
dec
add
jno
push
inc
idivl
js
push
mov
fsubs
mov
xor
mov
jge
sbb
sbb
test
sbb
and
int
push
or
mov
add
add
mov
mov
sub
sub
insl
stc
lret
aaa
clc
sbb
js
adc
add
dec
sub
inc
cwtl
call
shll
inc
add
dec
and
pop
push
push
push
icebp
clc
mov
in
sub
sbb
mov
and
test
leave
cmp
inc
jbe
mov
push
or
adc
fdivr
sbbl
scas
mov
loopne
inc
pop
cmp
fcmovnb
pop
lret
rdtsc
mov
imul
ds
enter
in
mov
jl
or
adc
adc
dec
jmp
add
movsl
dec
sbb
movsb
pop
pop
xchg
cli
aaa
and
or
rep
adc
pushl
shl
push
not
dec
adc
pop
pop
sbb
shlb
push
data16
jo
mov
test
jbe
js
add
dec
jne
pop
sub
add
into
movsl
call
mov
xor
movsbl
xor
jmp
leave
cmpsb
pop
xor
addb
mov
dec
inc
pusha
dec
cltd
idivl
add
push
and
inc
cmpb
and
jb
cmp
cmp
jne
movsl
and
xchg
fimuls
cmp
fildl
icebp
mov
cmp
sbb
add
cmp
insb
cmp
sub
stos
in
dec
arpl
or
shrb
cmp
jbe
repnz
decl
decb
adc
enter
popa
mov
fisttpl
cs
ss
lea
mov
mov
addr16
mov
cmp
sbb
call
add
fnstcw
jge
cmp
cmc
lret
mov
add
cmp
or
call
outsb
mov
pop
jmp
hlt
cmp
adc
or
jge
inc
addb
xchg
subl
cmp
mov
jle
test
mov
sub
je
inc
mov
mov
xchg
pop
or
in
mov
dec
mov
or
daa
add
mov
and
arpl
push
cmp
fists
je
inc
sbb
ljmp
cwtl
push
pop
pop
jo
stos
iret
and
por
lret
push
inc
push
cmpsb
push
pop
mov
sbb
mov
jne
sbb
and
jmp
jne
push
test
jmp
adc
sbb
push
jmp
addb
insb
add
and
xor
negl
fcomps
rorb
jns
cmp
pop
sbb
pop
cmp
jne
mov
and
xor
jne
and
or
repnz
fimuls
repnz
adc
or
cs
inc
dec
sub
adc
test
clc
add
aaa
dec
cltd
add
xor
mov
shl
and
loope
sub
xchg
outsl
or
dec
sbb
rorb
or
roll
pop
mov
leave
fnsave
ds
int
negb
add
in
or
repz
or
sbb
or
or
or
jecxz
int
and
in
inc
fldl
roll
int
les
leave
adc
or
xorb
bnd
cwtl
push
les
push
dec
sbb
and
fisttps
sub
jmp
adc
jmp
jbe
inc
cs
jo
push
aad
jo
dec
push
loop
insb
dec
inc
mov
jae
nop
push
inc
les
rclb
mov
dec
and
inc
les
xchg
inc
mov
dec
pop
inc
cmpb
push
or
or
add
rcl
or
xor
je
movsb
jns
nop
push
dec
mov
popa
or
sub
enter
cli
mov
sub
and
or
pop
orl
sbb
or
test
add
rcrb
jmp
fs
pop
fs
shll
mov
mov
fcomps
pusha
mov
and
sub
dec
popa
and
lods
lock
inc
pop
sahf
pop
sub
ds
pop
lret
adc
mov
mov
or
into
and
push
enter
push
shll
std
call
cmp
les
add
pop
or
xchg
arpl
or
loopne
xor
aas
cli
or
es
jl
cmc
or
nop
mov
xor
sar
push
dec
xchg
add
adc
pop
mov
loop
pop
sahf
push
pop
daa
popa
rolb
push
pop
clc
adc
adc
and
and
aam
loop
pop
jle
add
and
sbb
orb
rorl
mov
xor
test
or
jl
jns
add
xor
mov
adc
sbb
cmp
inc
mov
mov
add
inc
ret
adc
add
jo
test
adcl
xor
xchg
mov
mov
roll
mov
mov
fldl
adc
cmp
pop
mov
and
loop
cli
pop
test
scas
sahf
add
sub
mov
jmp
ret
movsb
and
cld
stos
mov
dec
add
js
mov
sbbb
or
xor
hlt
dec
fmul
loopne
cmp
bound
adc
sub
or
popf
or
cmp
and
sbb
out
sbb
pusha
fmuls
fcoms
aam
mov
mov
cs
jb
push
in
or
jg
das
adc
inc
in
call
xor
movsb
mov
pop
cmp
and
add
in
jmp
leave
call
push
cli
mov
iret
fstpt
bnd
inc
fwait
push
xchg
add
pop
and
cmp
jne
xchg
fwait
mov
xor
mov
inc
jmp
jp
rclb
mov
push
roll
test
sti
dec
or
push
cmp
insl
loope
clc
fwait
adcl
cmp
pop
xor
inc
lds
mov
test
es
rcrb
xor
jnp
adc
loopne
popa
dec
lock
pop
mov
inc
orl
aam
push
ja
cmc
and
out
andl
adc
shll
mov
and
in
popa
test
in
cmpl
dec
mov
aas
push
or
xchg
push
pop
jo
int
jg
dec
jbe
mov
int3
nop
dec
sbb
and
dec
mov
sbb
push
mov
test
or
fdivrs
cmp
cvtpi2ps
jge
add
push
jbe
mov
ja
enter
sarb
je
xor
sub
les
mov
aas
mov
cmp
jle
fidivs
mov
or
call
test
adc
mov
adc
movsl
inc
mov
pop
pop
dec
int3
aad
mov
cs
add
xor
loop
push
lahf
loopne
add
inc
iret
mov
cwtl
nop
xor
adc
add
sarb
pop
aam
rolb
xor
jo
add
jecxz
pop
jo
lahf
and
pop
add
and
add
add
dec
inc
les
insl
push
imul
and
inc
cmpb
or
test
pop
movsl
aas
pop
in
xlat
jp
cli
jmp
push
enter
jmp
in
je
sbb
shlb
mov
out
jecxz
aam
fcomi
test
push
ja
and
lea
mov
and
adc
das
nop
sub
inc
sbb
shll
jns
push
jb
mov
inc
push
jge
adc
inc
lods
or
inc
mov
in
xchg
popa
icebp
sbb
inc
push
pop
clc
in
add
push
movsb
andl
cmpsb
add
and
and
inc
outsl
mov
mov
or
sub
add
in
lcall
loop
sub
jo
sbb
pop
bound
imul
and
add
or
or
ret
lods
jecxz
xchg
mov
test
add
test
sub
cmp
xchg
inc
fdivs
sub
test
adc
mov
xchg
lcall
outsl
shll
aad
mov
cmpsl
in
sub
mov
loop
stc
hlt
adc
jae
hlt
pop
cmp
push
lcall
adc
jo
les
lods
pop
xor
test
mov
xor
or
xchg
mov
or
add
sub
sub
call
sbb
sub
cmp
outsb
sbb
pop
inc
dec
rorl
loopne
push
add
fsubrl
je
xchg
mov
xchg
sbb
insl
mov
sub
test
inc
adc
inc
or
inc
jmp
dec
mov
cmp
adc
sub
adc
push
test
or
adc
adc
xchg
rep
adc
mov
sub
xor
inc
cmp
push
sbb
ja
stos
testb
sub
je
cmp
jae
inc
andl
adcl
or
sbb
push
ret
push
sub
rcrb
icebp
sar
lock
jne
sbb
dec
mov
xchg
cmp
pop
sbb
add
jno
jbe
call
out
fstpl
xor
add
xchg
dec
push
add
xchg
fidivrs
pop
out
mov
jo
pop
or
add
add
add
cmp
sub
sub
or
div
sub
cmp
test
jmp
cmp
inc
mov
mov
or
mov
and
bound
cwtl
les
mov
dec
pop
fs
lret
incl
nop
call
loope
xchg
enter
enter
pop
cmp
mov
inc
ror
call
nop
loop
sub
mov
mov
or
xor
aam
jae
sub
inc
mov
test
mov
sub
push
pop
adc
shll
xchg
xchg
test
sti
xchg
movb
test
sub
rolb
pop
lock
adc
shrb
cwtl
mov
fsubl
jo
outsb
pop
push
add
mov
pushf
jg
push
aam
cmp
popa
mov
xor
cs
inc
jg
mov
outsb
push
and
push
xor
add
jle
js
insl
add
and
shll
std
mov
inc
mov
add
icebp
sub
call
inc
pop
or
pop
push
xor
sub
fimull
and
push
mov
fwait
bound
sbbb
stos
stos
pop
call
int3
sbb
loopne
in
jmp
mov
pusha
cs
add
shrb
les
rcr
or
and
int3
call
jae
sbb
jae
inc
mov
jae
call
sub
mov
or
cmp
in
xor
js
adc
insb
nop
push
insl
daa
xor
mov
mov
or
fs
mov
enter
mov
ljmp
xchg
mov
mov
adc
and
add
in
adc
addl
nop
adc
stos
test
aaa
push
or
adc
xor
gs
jo
add
inc
cli
andl
pop
xor
sbb
add
ret
and
sbb
cwtl
or
jo
adc
ss
sbb
lret
adc
and
shl
icebp
cmp
add
inc
cmp
xor
nop
fnstsw
push
in
inc
in
add
dec
shlb
add
lcall
adc
xorb
add
dec
cs
mov
cli
and
adc
adc
sbb
cmp
dec
mov
leave
xor
push
pop
mov
cmp
or
adc
sahf
sbb
rcll
test
js
dec
pop
loop
stc
je
fimull
mov
int
bound
xor
push
sub
insb
cmp
jno
jle
adc
ja
push
pop
and
push
push
adc
add
cmp
or
mov
add
fsubs
loope
sahf
iret
test
andl
inc
xor
call
nop
push
or
add
add
je
outsl
daa
xor
xor
add
call
pusha
iret
jmp
stos
mov
push
pop
push
mov
pushf
ret
pop
popf
cltd
mov
ds
dec
clc
sbb
call
adc
sbb
cmp
jo
add
outsb
jne
lods
push
add
inc
imul
add
adc
adc
pusha
jl
push
cld
or
pop
and
lods
xorl
call
push
jnp
add
sbb
jecxz
push
mov
jno
rorb
mov
subps
xchg
dec
jne
or
lahf
pop
enter
push
jne
sub
mov
cs
cld
pop
push
mov
inc
fcomip
call
stc
and
call
inc
into
rorb
mov
arpl
push
adc
sbb
loope
sub
enter
pop
cmp
and
jb
jle
lock
sbb
mov
adc
push
pop
fldl
pop
jae
mov
pop
adc
push
xchg
dec
pop
jne
mov
sbb
ret
andb
adc
cmovge
xor
inc
clc
xor
mov
jo
dec
movaps
push
pop
lods
push
add
pop
cmp
dec
stos
fs
xchg
loopne
or
jp
sbb
push
or
aas
sub
dec
jmp
stos
imul
sbb
aaa
or
ljmp
lds
jns
cld
sbb
dec
add
cmp
sahf
adc
scas
sub
subl
das
inc
shr
lret
dec
iret
mov
loopne
cmp
icebp
mov
shrb
pop
cmp
pusha
adcb
cmp
jns
add
ljmp
add
test
mov
add
cmpb
push
add
jo
es
mov
cltd
mov
test
inc
popf
imul
adc
xlat
aam
and
cmpsl
scas
cli
rol
fildl
add
pusha
jge
mov
andb
dec
aaa
inc
xchg
jae
xor
inc
mov
data16
cmp
ljmp
test
orb
sbb
pop
add
jmp
test
xchg
push
sub
xchg
dec
adc
out
shl
cmp
loope
inc
shll
jl
iret
add
mov
stc
mov
pusha
jecxz
jmp
cmp
add
mov
and
pop
push
push
rorl
xor
sbb
adcl
in
adc
rcrb
insb
fcomps
xor
fldcw
repnz
ljmp
cmp
fld1
dec
pop
jo
dec
loop
pop
pop
sbb
mov
pop
out
add
mov
mov
adc
fwait
adc
mov
or
ds
pop
push
xlat
sbb
cmpsb
inc
jae
ja
imul
adc
sbb
push
rcrl
pusha
cmc
and
shll
jbe
adc
mov
adc
xchg
mov
dec
xor
call
pop
clc
jno
scas
pop
sub
clc
inc
cmp
add
xor
adcl
loope
xchg
cmpb
sbb
cmp
cltd
addl
xchg
adc
ljmp
inc
iret
rcr
adc
mov
repnz
and
roll
out
sbb
sbb
cwtl
and
add
add
inc
loop
or
repz
push
leave
sbb
cld
cmp
leave
test
sub
sub
xor
push
cmp
add
stos
jp
fdivs
sbb
in
push
cwtl
inc
cmc
cmp
enter
cmp
mov
cld
and
lret
sub
dec
mov
jne
sarb
imul
cmp
push
cmp
leave
sbbl
sbb
sarl
and
mov
xor
jl
lods
pop
xchg
or
inc
sub
pop
xor
ljmp
loopne
notb
adc
dec
add
xor
dec
mov
ja
jo
out
sub
insb
inc
push
bound
push
sbb
rcrl
xor
lds
cmp
mov
push
shlb
adc
pop
jae
dec
or
dec
in
int3
cmp
fstps
icebp
sarb
inc
ret
mov
push
inc
jne
decl
adc
mov
jnp
ret
adcb
cmc
add
icebp
add
loopne
in
push
and
add
bound
sbb
sti
sub
mov
aaa
sbb
push
in
push
pop
test
adc
or
fsubl
jp
daa
add
vrsqrtps
ss
pop
and
jae
addl
sbb
jno
or
or
push
das
inc
sbb
rorl
push
sub
js
cmpsb
out
push
pop
sahf
add
loopne
iret
cltd
add
cwtl
lcall
jo
jae
adc
scas
test
sbb
jns
dec
stos
aam
ja
sarb
in
sbb
mov
fldcw
push
and
mov
pop
xchg
aaa
add
sub
lret
mov
call
mov
inc
sbb
out
lahf
out
jnp
or
rolb
sub
adc
sub
ret
mov
rol
test
outsl
cmpsb
mov
pavgw
push
dec
sbb
cmpsb
cmp
xchg
mov
pop
cmp
xchg
push
add
lretw
loop
or
sahf
jae
dec
xor
icebp
xchg
and
mov
sub
gs
hlt
and
jl
addl
clc
mov
je
pop
add
rorb
xchg
in
jl
mov
inc
jl
add
rclb
subl
add
sub
cwtl
sbb
arpl
add
mov
inc
ds
dec
jmp
lret
test
les
xor
imul
test
in
add
insb
inc
into
add
and
mov
ret
add
loopne
cmp
xlat
sbb
inc
mov
fadd
pop
push
aam
sbb
or
push
push
lret
loope
xchg
fbld
test
push
cmpsl
jle
imul
xor
xchg
or
push
ds
lods
pushf
rcll
call
pop
cld
mov
aam
mov
cmpsl
pop
mov
jl
pop
add
inc
dec
jge
ljmp
dec
adc
orl
pop
lcall
call
xor
in
cmp
add
daa
or
jb
lahf
sarb
xchg
add
adc
xchg
jns
cmp
xchg
stc
ret
pop
out
test
test
ror
in
inc
loope
daa
and
jmp
jmp
pop
adc
fists
mov
dec
lock
inc
sbb
popf
out
mov
push
and
scas
add
or
fldt
mov
and
or
cmpsl
adc
loopne
cmp
add
add
mov
inc
cmp
in
push
repz
xchg
and
mov
add
and
rorl
dec
int
inc
cmpb
sub
pop
mov
jo
mov
orb
xchg
cmp
dec
ret
inc
or
leave
inc
and
adc
push
mov
add
pop
mov
and
add
adc
inc
shll
into
jb
dec
shrl
sub
sub
dec
cmp
lock
stos
inc
insb
dec
dec
sub
lcall
repz
push
mov
xor
jne
iret
push
push
mov
incl
scas
leave
gs
lahf
addr16
adc
in
mov
lret
pop
movsl
xor
sub
sbb
fiaddl
jns
pop
shll
mov
pop
inc
ljmp
les
push
push
or
aad
jecxz
add
push
adc
pop
push
jge
dec
cmp
fs
mov
or
mov
shl
loope
scas
mov
cmp
fistl
adc
int3
roll
sub
repnz
jp
in
mov
push
jne
loopne
adc
sub
and
repz
ds
mov
int3
outsl
dec
sub
loopne
movsl
xchg
mov
pop
mov
sbbb
cmp
and
cmpl
jb
sbb
xor
pop
xor
jl
adcb
arpl
into
jmp
cld
lock
imul
or
sub
cld
mov
and
add
mov
mov
incl
add
jmp
ret
pop
mov
push
dec
insb
adc
jecxz
push
daa
push
les
arpl
xchg
ja,pt
push
inc
cmp
movsb
add
sbb
add
inc
pop
jb
cmp
inc
cmp
roll
push
mov
popf
xor
shll
adc
jge
cmp
daa
add
inc
lock
hlt
call
inc
sub
ficoms
pop
test
xor
add
inc
call
std
lahf
loopne
sahf
mov
bound
xlat
fildl
mov
mov
repz
adc
pushf
adcb
or
into
push
std
xor
push
in
jne
das
and
dec
push
mov
dec
xchg
mov
test
icebp
xor
movsb
aas
aam
int3
inc
xchg
ja
cltd
adc
xchg
or
ret
cli
xchg
adc
add
popa
nop
cmc
lea
pop
mov
pop
out
sub
mov
aas
xchg
cwtl
movb
outsb
sbb
sar
push
lret
mov
cmp
xlat
add
orl
pop
adc
scas
pop
dec
stc
inc
je
in
sarl
add
mov
imul
filds
mov
inc
loopne
add
mov
sub
ficoml
push
cli
jnp
or
pop
pop
xor
or
inc
and
clc
aam
lret
push
rclb
add
pop
in
dec
hlt
pop
mov
jo
sub
loopne
jb
test
add
jmp
call
push
or
ret
loopne,pn
and
inc
cmp
lods
inc
fiaddl
or
adc
or
push
ret
aas
pop
mov
andb
cmpsb
pop
dec
add
ss
js
mov
inc
mov
mov
sub
or
push
sbb
jg
sub
add
mov
add
loop
adc
jl
or
js
mov
add
es
mov
subl
aad
mov
pop
repnz
dec
sti
and
es
repnz
jg
mov
arpl
and
stos
pop
lods
insl
mov
pop
adc
mov
addl
jg
scas
pusha
or
popa
jmp
cmp
movl
popa
lea
cmpb
iret
mov
pop
subl
inc
and
push
adc
sub
dec
inc
mov
adc
mov
in
adc
test
xor
inc
ficoml
popa
call
adcb
in
in
mov
dec
mov
sti
pop
push
inc
mov
insb
lock
mov
lcall
hlt
sub
push
fistpll
xlat
cli
cmp
xor
nop
jmp
xchg
stc
push
sbb
popf
sarb
movsb
mov
push
jnp
sub
xchg
inc
adc
js
lret
bound
fxch
bound
fnstcw
test
mov
sub
mov
add
dec
inc
rclb
dec
and
sar
icebp
pop
push
dec
cmp
cmp
fprem
ret
mov
inc
fucom
clc
or
ja
xchg
cmpsl
inc
xchg
les
mov
mov
aas
rolb
flds
pop
pop
std
pop
bnd
daa
and
addl
jbe
jo
add
or
sahf
lret
xchg
inc
lods
push
imul
sbb
ds
adc
jbe
shll
loopne
add
cmp
test
jl
js
sbb
sahf
pop
mov
inc
movq
loop
scas
mov
fistpll
ljmp
cmpsl
mov
lock
hlt
lahf
xchg
and
sbb
add
dec
dec
test
or
cmp
roll
add
frstor
xchg
fisubl
icebp
nop
cld
xor
in
add
mov
not
ja
out
stos
mov
in
xchg
xchg
stos
pushl
adc
add
shr
enter
xor
pushf
ljmp
aas
inc
xor
iret
cmp
pop
shrb
adc
pop
xor
xor
and
mov
xchg
loopne
mov
subb
cmp
adc
jno
add
pop
insb
cmp
adc
mov
mov
jo
pusha
ljmp
adc
roll
mov
loope
adc
add
dec
loope
ficompl
cwtl
les
nop
push
sub
jle
jb
stos
adc
mov
inc
or
push
inc
mov
mov
mov
add
mov
lret
test
imul
inc
addr16
imul
inc
cmp
xchg
daa
jb
in
dec
adc
insb
push
call
or
jp
xor
nop
out
or
aaa
adc
loope
jno
loopne
cld
mov
test
or
xor
mov
add
xchg
loop
or
mov
sbb
push
adc
lret
ja
and
mov
shll
dec
or
loopne
or
add
sbb
jb
push
dec
aad
rcll
or
mov
add
add
mov
dec
out
or
push
inc
inc
jle
addl
sub
xor
xchg
sub
inc
test
addb
push
push
dec
outsl
mov
xor
or
or
in
inc
dec
inc
mov
push
cwtl
push
and
xchg
inc
stos
fldt
loop
aad
or
mov
call
add
push
les
cmp
lea
add
in
inc
enter
pushf
pop
aas
push
and
addl
je
testb
daa
jne
rcll
decl
fs
or
decb
jb
pop
pop
xor
or
adc
lsl
jp
jp
push
jae
pop
pop
ret
mov
inc
push
add
jecxz
lahf
mov
push
fsts
sbb
mov
pop
cmp
jbe
icebp
or
lcall
bound
dec
orb
jns
push
andl
jl
sub
mov
xor
movsb
sub
add
and
jae,pt
cmp
test
or
in
pop
or
and
inc
mov
adc
sbb
shl
jne
pop
stos
jmp
cwtl
dec
sbb
cs
pop
jmp
lods
rcll
repnz
xchg
dec
shl
out
mov
sbb
or
sbbl
jg
mov
mov
push
inc
imull
lock
adc
mov
shlb
adc
fadd
ljmp
cwtl
cli
out
jb
sub
sub
popa
ror
jo
clc
cwtl
dec
loope
sbb
movsl
rol
adc
mov
add
cwtl
scas
add
add
orb
fs
insb
sbb
or
inc
jle
inc
add
je
push
pop
jge
push
stos
xlat
aad
jae
fidivrs
mov
imul
xor
gs
aad
adc
add
push
shlb
mov
je
dec
inc
pop
ljmp
icebp
mov
je
popa
fildl
push
arpl
pusha
loop
dec
inc
push
dec
out
or
xor
xor
mov
jne
sbb
js
push
push
sarl
.byte
cwtl
