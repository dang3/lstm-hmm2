push
call
ret
ret
inc
pop
loop
outsl
dec
les
mov
rolb
adc
sahf
aad
subl
sub
sti
inc
cmpsl
add
add
cmpsb
jl
push
sbb
jno
shrb
mov
dec
cmpb
notl
xchg
lahf
push
clc
pop
out
push
les
inc
das
fimuls
jo
xchg
shlb
icebp
movsb
mov
jl
pop
dec
insl
gs
sbb
popa
in
push
call
mov
mov
mov
out
cmp
nop
xor
mov
ficompl
or
add
icebp
add
pop
je
mov
mov
pop
shr
out
js
pop
imul
xlat
adcb
mov
push
into
cmpsb
nop
cs
cmpsl
hlt
stc
xchg
and
xchg
inc
in
mov
and
out
call
cmp
and
popa
jne
stos
push
fists
aaa
or
cmp
adc
jno
and
addr16
push
jl
jp
in
pop
imul
jne
sub
je
push
adc
push
pusha
das
mov
test
data16
mov
fcmovu
mov
push
mov
adc
test
mov
pop
jne
push
ss
flds
decb
lret
mov
pop
inc
mov
jl
adc
sbb
sub
cmpsb
lds
sbb
shrb
or
je
in
adc
mov
in
xor
movsb
lret
out
loopne
mov
in
cmp
cmp
cmp
cmp
rorb
loopne
fdivl
ret
adc
sbb
addr16
sahf
divl
inc
cmc
arpl
mov
scas
rolb
xchg
mov
xchg
xor
call
fistl
pop
xchg
test
jg
imul
push
mov
jmp
fmuls
repz
pop
popf
aam
jne
and
leave
mov
xor
sub
jne
sti
push
daa
sbb
fisubl
aas
push
inc
xchg
cwtl
arpl
fstps
jb
add
mov
add
inc
loop
lret
scas
inc
sbb
jge
pop
fidivs
pop
aad
inc
leave
mov
adc
popa
ret
jbe
fstpt
scas
adc
out
pop
or
call
mov
loopne
cmpsb
inc
and
mov
jl
cmp
stc
xchg
mov
pop
std
movsb
clc
into
xchg
xor
jmp
xchg
les
mov
sti
hlt
jle
inc
mov
pop
and
popa
aas
push
je
sbb
pushw
cmp
mov
jne
lahf
xorb
in
mov
jge
cmp
mov
jns
xchg
cltd
jno
inc
dec
push
enter
imul
adc
mov
inc
lods
mov
aad
mov
enter
rol
aad
lahf
lods
pop
inc
inc
dec
push
jmp
or
jg
mov
add
pop
mov
sbb
mov
clc
mov
sub
cwtl
in
cmp
rep
shrl
adc
push
aas
push
jle
adcl
xor
addr16
add
or
test
outsb
pop
divl
popf
sub
out
push
inc
mov
xchg
inc
xor
mov
movmskps
add
iret
pop
jg
adcb
outsl
sbb
cmp
xchg
mov
test
push
jns
popf
xlat
mov
push
repnz
cmp
shlb
movl
cmp
out
sub
xor
gs
jae
fbstp
xchg
jp
cwtl
movsb
aad
lcall
jl
dec
push
test
or
mov
pop
lods
xchg
dec
pop
mov
cmp
in
push
fwait
aas
repnz
adc
pop
aam
subb
iret
es
lods
jg
hlt
ffree
xchg
sbb
ljmp
shrl
lods
mov
jb
dec
push
sahf
jns
rcrl
xchg
inc
out
dec
scas
mov
pushf
iret
dec
fstp
std
jp
mov
jns
testb
xchg
int3
xor
subb
pop
push
sbb
sahf
mov
std
sbb
sub
enter
mov
lahf
cmp
in
and
stos
enter
mov
push
aas
sbb
cmp
xor
or
adc
adc
aad
jmp
cld
and
nop
in
pushf
cwtl
dec
mov
pop
fdivrp
pop
sub
adc
xor
lahf
mov
cmp
pop
in
push
scas
pop
pushf
mov
cli
push
stos
jecxz
dec
adc
mov
mov
dec
add
dec
rorb
mov
jg
sbb
cmc
out
aas
dec
rorl
cmpsb
lds
xlat
clc
xchg
sbb
jl
stos
stc
push
sbbl
fwait
loope
lea
fdivrl
into
aam
jbe
push
inc
rorb
les
lds
or
push
pop
shll
add
adc
ja
cmp
cmc
pop
shlb
push
push
cmp
std
aad
push
xor
mov
addr16
ret
gs
push
es
add
popf
push
lret
sbb
popa
mov
pusha
enter
mov
movsb
xor
add
sbb
stos
jb
lock
dec
mov
pop
jne
mov
shll
jbe
pop
and
fwait
push
push
sub
lret
sub
fmull
xor
and
std
enter
push
pop
adc
je
ret
lds
jl
rolb
jb
les
les
enter
int3
mov
lods
xchg
scas
test
fadd
and
test
and
cmpsl
ljmp
mov
xchg
dec
push
pop
jmp
cmp
movl
loop
or
jae
call
jno
pop
aas
sub
insb
xor
push
clc
jno
and
fmul
and
popa
cwtl
mov
or
lock
jns
popl
mov
jo
test
mov
mov
pop
push
add
arpl
inc
ret
push
or
cmp
shlb
mov
mov
adc
jge
repz
pop
push
inc
cmp
int
jno
mov
dec
les
mov
sbb
outsb
insl
xor
sbb
rsm
es
push
inc
add
mov
xchg
jne
dec
xchg
scas
mov
ret
xchg
dec
jecxz
mov
and
push
lret
cli
fsubr
inc
push
dec
xchg
adc
sbb
xchg
lods
cmp
push
dec
mov
mov
int3
imul
cltd
imul
ja
pop
flds
pop
pop
rol
or
leave
adc
test
sub
push
mov
sti
push
mov
or
stos
fwait
sbb
insl
sub
idivl
shlb
ss
mov
js
pop
mov
pusha
lea
add
xor
shrb
add
shlb
inc
mov
xlat
mov
lahf
into
sub
aam
mov
aam
repz
mov
rorl
xor
sar
orl
stc
aas
enter
movsb
cmpsl
cli
mov
sub
mov
mov
mov
lds
cmp
sbb
outsl
in
sub
ljmp
addr16
fs
ljmp
and
mov
cmp
lret
clc
dec
jle
pop
add
in
les
repz
pop
mov
sbb
mov
xor
xchg
xor
mov
add
mov
test
jo
sarb
dec
sub
divl
call
jle
push
cmpsl
dec
mov
aad
fdivrl
dec
push
fistps
das
push
cld
add
repnz
ja
jo
in
xchg
fidivrs
lcall
inc
out
pop
xor
jg
adc
mov
stos
mov
mov
mov
fcompl
push
dec
jl
mov
sub
mov
cld
mov
in
aad
cmpl
test
sub
pop
lods
clc
and
xchg
or
in
xlat
inc
scas
lret
push
icebp
aad
ret
aam
mov
xor
mov
stc
dec
cmp
out
jg
mov
shrl
or
les
adc
out
xchg
cmp
das
setno
cld
sub
or
push
sub
lods
scas
inc
notl
pop
cmc
jae
mov
mov
mov
stc
push
sub
or
out
std
enter
imul
leave
hlt
cmc
xor
imul
mov
mov
imul
repnz
enter
mov
jmp
jae
clc
pop
outsl
inc
xor
inc
enter
loopne
sub
mov
push
mov
data16
push
jns
adc
xor
sub
icebp
push
mov
pop
arpl
and
aas
jge
sbb
jbe
incl
in
fidivl
dec
inc
test
xchg
adc
sbb
jns
mov
out
dec
xlat
rcrl
ret
insb
push
and
sahf
loope
lods
dec
or
xchg
add
mov
mov
mov
cmp
test
xchg
mov
cmpsl
mov
push
cs
cmp
popf
insl
mov
les
fidivl
mov
pop
frstor
aad
pop
jg
or
mov
adc
jmp
mov
insl
pop
addr16
xorb
daa
cmp
loope
rol
int
lret
add
xchg
cmp
jmp
scas
add
out
shl
out
mov
inc
xchg
popa
aaa
xchg
or
push
inc
add
xchg
ficoms
mov
xor
or
sub
stos
adc
jmp
in
mov
outsb
jl
xor
mov
inc
loop
inc
sbb
pusha
xchg
push
sbb
movsb
mov
push
pop
sbb
xchg
pop
xchg
dec
decb
aas
lahf
or
xor
cmp
xchg
add
add
sbb
mov
jno,pn
jmp
mov
ljmp
inc
jae
fldt
rorb
inc
sub
stos
iret
xchg
adc
adc
push
jno
push
cltd
sarl
pop
or
in
test
es
enter
fisubs
dec
xor
jbe
xchg
or
push
sub
inc
cmp
je
jmp
cmc
jbe
cmp
ret
pop
inc
mov
jno
xchg
outsl
xchg
xor
repz
rorl
mov
mov
sar
cmp
and
mov
push
mov
and
xchg
push
sbb
push
mov
out
aaa
mov
test
insl
mov
mov
mov
cld
fdivrs
add
pop
shrb
mov
rclb
js
inc
pusha
push
cmp
mov
shll
dec
cmpsb
std
and
mov
rorb
push
pop
pusha
inc
xchg
nop
aaa
movsb
movsb
les
outsl
pop
xorb
sub
call
hlt
lea
int3
outsb
imul
adc
ss
in
fldenv
out
call
call
shll
jbe
std
add
movsb
push
imul
push
xor
cmpsb
push
push
in
fsubrs
cmp
mov
es
lock
xor
jne
stc
and
stos
test
in
push
mov
js
mov
inc
mov
fimull
add
test
popf
aaa
das
aam
push
inc
in
les
cli
data16
pop
fcom
daa
fdivrl
in
mov
mov
dec
ds
pushf
ret
and
push
cmc
sub
out
add
add
pop
jae
test
mov
xor
sbb
sahf
inc
xor
fwait
cmpb
xchg
adc
dec
mov
jae
insb
dec
fwait
pop
xchg
xchg
sbb
popa
sub
adc
dec
inc
jo
movsl
dec
in
push
gs
cmp
jne
nop
mov
outsl
dec
inc
pop
daa
mov
adc
or
in
sbb
repz
push
int3
add
ljmp
aad
loop
or
xchg
jg
scas
and
insb
stos
stos
inc
es
jae
or
sbb
cmpsl
mov
pop
aaa
adc
icebp
xor
jb
sbb
jl
jg
mov
shll
out
adc
int
jne
dec
in
xchg
lods
faddl
mov
jle
cwtl
mov
dec
das
sub
test
int
xchg
test
xor
sub
xchg
lahf
scas
test
dec
lcall
adc
sarl
pop
fisttpll
jnp
pusha
add
dec
cvtdq2ps
inc
mov
pusha
test
cmp
sti
insb
mov
gs
mov
sti
mov
je
mov
js
pop
pusha
insb
mov
xlat
dec
or
xor
lds
pop
push
movsb
out
in
pushf
insb
hlt
jne
mov
and
mov
jnp
xor
out
and
loopne
inc
aad
xlat
pop
sub
jl
lods
ds
std
sbbl
cmp
push
fwait
xchg
dec
in
jae
push
add
cli
or
lret
add
dec
mov
xchg
mov
dec
push
jo
xor
cs
out
xchg
mov
jecxz
cmp
out
icebp
mov
int
in
xchg
test
cmpsb
inc
std
cmc
fldlg2
jge
cmp
xor
mov
mov
pop
les
in
dec
andb
movsb
jecxz
mov
repz
ficoms
cld
shl
fidivs
mov
dec
push
xchg
xchg
push
insl
dec
jge
adc
popf
roll
lods
test
aad
fcomps
xchg
pop
test
adc
mov
or
push
push
sub
jp
xor
inc
pop
xchg
jo
or
shrl
jecxz
sub
cmpsb
or
sbb
mov
pop
aad
test
ds
sbb
lods
movsb
inc
pop
arpl
sbbl
mov
pop
ret
xor
andb
jb
or
sbb
daa
shll
out
add
xor
dec
fldl
jg
arpl
jmp
sub
mov
jno
int
stos
push
mov
stos
or
or
or
mov
or
popa
test
cmp
jmp
mov
xchg
ror
inc
bound
in
and
push
jmp
loopne
xor
ss
push
shl
push
xchg
adc
scas
in
test
pop
xchg
rcrb
mov
pop
jns
cmpl
jne
add
mov
lret
bound
addr16
lods
outsb
pop
pop
jb
xchg
inc
xor
or
adc
hlt
inc
sbb
mov
test
cmp
jle
aas
sub
jmp
movsl
shlb
pop
sub
mov
mov
lods
rcl
push
jo
inc
pop
mov
push
das
movsb
xor
cltd
pushf
and
jmp
xchg
outsl
push
fimuls
lods
js
mov
mov
jmp
gs
je
cmpsb
cmpsl
dec
xchg
xchg
loope
xchg
add
mov
stos
aas
jno
mov
cmp
cltd
pop
jle
push
ret
test
ret
cltd
es
adc
lcall
std
das
jl
bound
shlb
insl
inc
loop
dec
mov
push
add
out
jecxz
or
push
or
out
jmp
or
in
mov
fs
stos
dec
inc
xchg
sbb
inc
pop
movsl
add
mov
cmpsb
sbb
cli
insl
push
iret
xor
mov
das
sbb
mov
cwtl
icebp
lret
add
cmpb
es
outsl
in
cs
inc
fwait
in
lods
pop
mov
addr16
push
inc
xor
cmpsb
jp
push
aaa
jae
and
sbb
imul
mov
jnp
and
stc
int
mov
addl
loope
adc
xor
imul
enter
mov
insl
lcall
int
xor
xchg
out
out
jns
xor
inc
jae
mov
clc
sbb
jge
or
int
imul
out
and
loop
insl
hlt
or
push
pop
aaa
push
adc
ret
repnz
lea
mov
fldl
call
lock
cmpsb
addr16
xor
pop
orb
adc
repz
jne
fisubl
cmp
push
not
arpl
insb
in
dec
lods
mov
xchg
inc
inc
mov
sbb
js
out
push
cwtl
jns,pn
mov
mov
cltd
add
xchg
jmp
in
push
inc
or
outsl
fsubrs
lods
addl
sub
pusha
xchg
lret
lds
fsts
mov
test
add
cmp
inc
mov
ss
mov
cmpsl
into
pop
fisubl
mov
fdivrl
div
leave
jg
call
pop
mov
loope
stos
mov
mov
xlat
xor
pop
lret
cltd
arpl
cmp
sub
dec
imul
mov
mov
mov
mov
hlt
pop
jmp
ret
out
fcmovbe
pop
push
add
push
xlat
sbb
lods
test
and
jl
dec
gs
mov
push
and
fimull
data16
ficoms
pop
and
out
rolb
sub
mov
or
adc
imul
out
mov
dec
mov
int3
test
mov
xchg
jmp
fidivrs
push
into
or
call
xchg
mov
ss
inc
stos
pop
mulb
cmp
sahf
push
aaa
pop
jns
iret
out
cmpsl
in
hlt
repz
lret
ljmp
xchg
js
add
jle
jle
stc
mov
jbe
inc
inc
fimull
and
hlt
push
leave
sbb
out
sti
xor
dec
pushf
leave
int
sub
mov
mov
jne
testb
add
mov
lods
stos
push
adc
sahf
add
mov
das
movsl
daa
or
bound
clc
and
cmp
lret
lods
dec
sbb
sbb
mov
popf
sbb
or
cmp
je
xor
jb
cmpsb
mov
fsubl
cltd
pop
push
jae
out
add
sahf
insl
lahf
pop
and
cld
jg
shrb
jmp
sub
cmpsl
jae
mov
addr16
fsubs
orb
decl
lods
movsl
xlat
cmpsb
shll
icebp
xchg
bound
cmpsb
or
pop
inc
push
dec
pop
jecxz
and
jl
mov
dec
dec
les
cmp
test
outsb
in
mov
incl
dec
dec
push
ret
cmpsb
int
or
mov
dec
ret
js
add
push
mov
sbb
add
lret
insl
les
test
jmp
loope
pop
jae
fimull
and
test
pop
stos
js
pusha
rcr
fcoms
je
xor
jns
add
inc
test
dec
mov
jmp
sbb
or
and
leave
mov
int
addr16
or
and
out
repz
movsl
push
cwtl
or
imul
aam
xor
push
or
out
stos
mov
ja
icebp
cvtpi2ps
int
imul
pop
cmp
mov
xchg
les
sahf
push
rorl
cmpsl
int
rcrb
fiaddl
test
cmp
movsb
lea
out
push
dec
test
pop
popa
iret
movsb
jge
aam
lods
inc
inc
push
imul
pop
lret
ret
mov
jno
addr16
xchg
jg
repz
mov
cmp
mov
inc
in
xchg
shlb
cmp
cmpsb
adc
cltd
dec
in
ret
outsb
mov
push
xor
cltd
mov
dec
rcrb
push
push
aaa
pop
gs
shlb
addb
dec
inc
lock
std
mov
xchg
aam
nop
xlat
mov
push
adc
pushf
inc
inc
fidivs
push
icebp
sbb
arpl
mov
xchg
jb
incl
sub
xor
popf
fistpl
or
cmp
loop
icebp
adc
mov
jb
out
jae
addr16
sub
call
and
out
or
aam
outsl
pop
add
pop
add
push
adc
sub
xor
andl
cs
fnstsw
add
sbb
clc
cltd
jno
mov
mov
lret
les
sbb
xchg
jnp
stos
in
jae
push
push
xchg
mov
or
insl
call
pop
sbb
inc
popa
pusha
movsb
cmp
fiadds
addr16
out
inc
or
mov
mov
and
adc
leave
das
mov
mov
inc
es
jle
jbe
iret
jmp
pop
ficoms
lods
testb
jg
push
jle
clc
daa
jl
mov
add
movsb
ds
jl
mov
jbe
pop
dec
test
jb
xchg
xchg
pop
mov
cwtl
mov
sub
pop
lock
mov
out
xlat
hlt
xor
inc
mov
sbb
and
jns
jg
cmpsl
xchg
sub
popl
sbb
ljmp
ret
fimuls
add
cmpsb
sarl
jbe
inc
stc
mov
addl
loopne
loope
cmp
rcrl
pop
icebp
mov
aad
loop
lods
outsb
outsb
sbb
pop
dec
sbb
push
cmp
pop
std
jecxz
sahf
dec
out
movsb
repz
movsl
adc
test
xor
mov
enter
mov
test
out
pop
sbbb
sbb
push
jbe
sti
pop
cld
mov
jecxz
sub
jne
jge
mov
push
fadd
icebp
movsb
je
out
xchg
lock
pushf
dec
addr16
inc
ficoml
inc
paddusb
jg
es
dec
push
mov
xchg
sarb
testl
adc
jge
hlt
scas
cwtl
ret
iret
add
jns
push
sub
inc
lret
jg
push
or
jnp
out
adcb
cltd
roll
loopne
pop
adc
and
icebp
add
pop
add
andl
add
loopne
sub
dec
mov
cmp
fsubrs
in
lcall
and
in
scas
ficomps
hlt
xchg
xor
repnz
nop
pop
cwtl
cmp
les
test
nop
push
xor
jmp
or
cs
daa
sub
mov
shlb
inc
call
int
xchg
pop
je
inc
ror
sbb
mov
inc
clc
mov
mov
rcrl
sbb
popa
inc
mov
xor
xlat
sub
fimull
fistpl
js
pop
in
xor
mov
inc
push
into
fdivrl
ret
daa
push
dec
xchg
popa
adc
inc
or
cltd
sub
nop
lret
cs
adcl
cmp
xchg
inc
mov
dec
xor
fdivs
inc
test
mov
imulb
jo
pushf
jmp
xchg
sbb
add
pop
imul
out
inc
pop
lret
shll
or
dec
jo
pop
inc
enter
or
lock
scas
xor
inc
insl
repz
push
mov
fstp
andl
mov
fwait
shll
pop
xor
out
sub
test
movsb
push
cld
pop
cmc
cli
data16
sub
aad
lods
pop
and
jg
mov
push
cmp
lea
decl
int3
sbb
and
mov
int3
inc
stos
inc
shrb
inc
call
dec
divl
sub
push
pop
sub
ret
loopne
sbb
mov
xor
fstpl
pop
and
in
pop
xor
and
nop
imul
shll
adc
ljmp
inc
ds
xor
cs
jmp
idivl
xchg
repz
test
out
outsb
in
dec
or
addr16
adc
cltd
add
scas
insl
jge
arpl
insb
mov
in
loope
xchg
fcomp
inc
xlat
push
pushf
dec
mov
mov
int3
pop
outsb
pop
mov
mov
fsub
cmp
ror
std
dec
ficomps
xor
pop
jbe
mov
inc
xor
dec
outsl
ret
imul
jecxz
test
fidivrl
and
xor
jae
rcll
orb
dec
call
or
mov
shlb
out
es
xor
es
lcall
or
sbb
mov
pusha
and
arpl
jp
xchg
mov
inc
inc
and
aam
sub
pop
push
mov
xlat
test
mov
loopne
stc
inc
test
xor
flds
jp
call
test
movsl
sub
sub
iret
jb,pt
hlt
dec
out
fdivs
scas
fiadds
fs
push
inc
gs
es
push
es
mov
jmp
adc
ret
jno
mov
jno
mov
add
cmp
das
loop
sbb
or
push
les
shlb
xchg
jae
xor
lock
orl
out
sti
sbb
loopne
mov
insl
push
push
inc
pop
sahf
inc
lods
xor
xor
inc
addr16
add
mov
cld
push
cmp
sub
jl
int3
inc
aas
push
psubsb
cmp
inc
lds
std
fisttpl
cmpsl
xchg
mov
fbld
add
daa
clc
adc
xor
ss
dec
cmp
mov
add
jbe
dec
cmp
insb
mov
test
sbb
sub
shrl
jns
insl
fnsetpm(287
test
mov
sub
pop
mov
push
sub
enter
nop
sbb
into
fimuls
sahf
rorl
sub
movsb
sub
or
scas
shlb
mov
mov
loop
cmp
popa
cmpsl
dec
rcl
popa
cmpsl
rcll
movsl
hlt
cmp
js
cli
data16
sbbb
stc
sbb
jg
xchg
loope
pushf
loop
in
dec
xchg
pusha
jmp
fstpt
lret
xor
xor
call
enterw
mov
xchg
outsb
mov
test
push
cs
icebp
xor
jb
fcompl
sub
adc
lea
mov
mov
lar
jmp
push
ds
nop
aam
mov
sahf
cmpb
xchg
xlat
jbe
cld
sbb
add
pop
sbbl
out
les
pop
mov
inc
mov
pop
add
inc
daa
jp
inc
mov
mov
xor
inc
lods
ja
sub
ret
xchg
jbe
jle
jae
test
cmpsb
in
jecxz
dec
int3
stos
clc
cli
scas
pop
xor
cmp
cmp
lea
enter
bound
dec
cmpsl
cmp
fdivrs
xor
or
pop
xchg
pop
mov
pop
imul
ret
out
lahf
inc
lret
jns
dec
mov
outsl
pop
ffree
lock
test
ret
mov
sbb
mov
mov
mov
ret
cltd
cltd
cmpsb
ja
mov
push
mov
in
adc
inc
lds
jb
neg
pminub
pop
dec
sbb
and
cmpsl
sbb
xorb
mov
vmwrite
sbb
xlat
add
mov
lcall
popf
inc
mov
jns
mulb
mov
gs
sbb
repnz
pop
call
jne
cltd
test
and
mov
cmp
cmp
add
cmc
sbb
divb
mov
icebp
push
scas
pop
push
lcall
insl
xchg
dec
scas
popa
dec
sub
cwtl
xchg
into
xchg
sub
xor
add
in
mov
sub
xorb
sub
ds
jno
popa
cmp
bound
push
sub
dec
xlat
mov
mov
notl
test
shlb
and
pop
pop
push
stc
shll
and
add
jae
jl
aam
daa
cmp
add
scas
call
lret
jmp
inc
popf
and
jp
dec
aas
adc
nop
push
adc
mov
xchg
scas
mov
jge
or
jne
shlb
sbb
mov
mov
dec
push
fsub
cld
cmp
loope
sti
js
pop
mov
jnp
cmp
push
fs
cld
mov
mov
ja
imul
ds
lock
ds
lcall
push
je
subl
sbb
xchg
dec
popf
xchg
cmpsl
xor
inc
cmp
insb
divb
adc
mov
mov
shll
iret
mov
sbb
les
xlat
dec
and
loop
shrb
dec
xor
pop
adc
lods
icebp
xchg
gs
gs
sub
mov
call
pop
mov
xchg
mov
push
popf
mov
pop
dec
out
jg
xor
shll
xchg
fildll
mov
push
sub
inc
in
add
mov
inc
fisubl
test
xor
jl
dec
pop
jg
fisubrl
js
jmp
cwtl
xchg
fadd
lret
test
and
jle
aas
pop
subb
cmp
adcl
adc
divb
xchg
aaa
push
dec
mov
push
lds
or
or
adc
lock
push
popa
test
loopne
popa
clc
sbb
jo
mov
mov
adc
fidivrl
sbb
add
roll
sti
cmp
stos
dec
ds
ja
add
fsubrl
push
cmp
insb
pop
mov
or
ret
leave
adc
pop
dec
imul
cs
sbb
xor
cmp
xlat
xor
repz
lret
arpl
or
inc
in
shlb
push
test
jecxz
cmp
fnstenv
add
lret
cmp
aad
mov
sub
pushf
xor
les
fisubs
popf
test
jns
push
mov
call
and
vpaddsw
xor
pop
dec
push
or
lahf
movsl
inc
pushw
pop
ret
cmpsl
cmpsl
jp
rcl
ja
and
adc
repnz
ficompl
stos
push
xchg
fs
cmp
cmpsb
int3
pop
ret
sub
pop
cmp
in
or
ret
lcall
and
in
out
pushl
inc
nop
int3
movsl
and
sbb
jno
jle
xor
fadd
mov
out
and
repz
out
fmull
fdivrs
and
movsb
pop
aad
pop
add
sub
jg
mov
push
push
inc
push
test
or
sbb
cli
mov
pop
orl
ja
rcrb
jbe
std
imul
rcr
jl
andl
inc
dec
lods
cmp
out
pop
sarb
out
jnp
and
dec
xor
cmp
mov
or
push
cwtl
and
xchg
sti
xor
or
jg
pop
dec
lock
in
xchg
les
xor
or
xorb
rcr
pop
hlt
out
sahf
or
pop
rclb
pop
lods
mov
mov
push
in
repz
cwtl
jecxz
xlat
fwait
sub
inc
sub
dec
xor
xor
adc
int3
mov
out
or
test
test
jno
jecxz
test
xchg
popa
lods
sub
dec
mov
je
daa
sti
xorb
xchg
adc
cmp
mov
xchg
add
cmp
out
xchg
mov
fimull
aaa
push
adc
mov
mov
lahf
mov
test
xchg
mov
sub
sub
xor
shrb
scas
addr16
inc
xor
lcall
mov
imul
fdivrl
popf
inc
mov
les
mov
dec
add
scas
push
pop
mov
lods
adc
dec
mov
je
pop
fcompl
mov
or
sar
push
aad
pushf
xchg
je
mov
nop
or
dec
xor
sub
js
cmp
hlt
push
ficompl
mov
rcrl
mov
or
mov
int
jmp
popf
fs
xchg
in
out
dec
fisubl
push
gs
push
cmpl
push
and
aaa
test
inc
or
lock
or
push
jle
aaa
pushf
fwait
rcrb
and
fstpl
orb
gs
fsubp
inc
fsubs
rclb
xor
lock
xor
jnp
jle
das
mov
pop
mov
jge
daa
pushf
pop
push
adc
lds
aaa
test
sbb
mov
pusha
jne
jb
jg
push
push
or
pop
ret
lock
cld
sbb
or
inc
mov
dec
mov
or
dec
jb
aaa
jl,pn
xchg
add
test
mov
fisubl
js
shlb
jmp
sbb
test
mov
xchg
shlb
fcompl
pop
aad
lcall
push
insb
and
inc
fisubl
push
xor
cltd
push
mov
std
lods
mov
push
xchg
xchg
mov
scas
sub
int
ret
mov
lcall
push
add
or
in
mov
pop
mov
aas
aad
sbb
out
in
mov
add
jmp
inc
test
je
push
pop
mov
xor
dec
cmpsb
in
or
xor
add
push
ss
sbb
daa
jne
pop
stc
aaa
out
fidivrs
jno
hlt
out
mov
rorl
aad
add
xor
sbb
jmp
mov
flds
xlat
repz
lahf
lods
sub
sti
xchg
add
cs
test
incl
jecxz
aaa
mov
cld
lahf
xchg
jo
mov
mov
dec
in
out
mov
push
mov
cli
bound
inc
sub
push
nop
xchg
adc
das
and
lret
mov
dec
fs
pop
das
adcb
jbe
nop
jp
in
xlat
jle
xor
cmp
int3
popa
inc
fnstcw
sti
dec
pop
push
cli
xor
cmp
ret
adc
add
andb
mov
stos
scas
push
icebp
aaa
das
std
jno
in
dec
mov
push
cmpsl
test
scas
jne
jno
cwtl
mov
pop
mov
sub
sarb
fnsave
movsl
cmp
stos
mulb
dec
inc
pop
sub
add
jnp
test
cmp
subl
inc
fmulp
push
lret
sub
es
outsb
scas
or
xor
dec
lods
dec
mov
sar
mov
movsb
and
decb
mov
inc
call
ss
push
test
and
and
in
adc
addl
fcmove
iret
mov
xchg
mov
lods
rcll
rolb
dec
dec
cmc
and
mov
xchg
ret
jp
daa
push
jmp
pop
icebp
sub
jmp
imul
adc
xlat
push
pop
mov
sub
rcll
mov
mov
mov
cs
test
jmp
cmc
push
outsl
push
inc
test
push
les
mov
sub
clc
jns
adc
inc
xor
jns
outsl
into
aas
fwait
cmp
mov
out
aas
fwait
daa
negb
sbb
lret
js
push
mul
jno
jno
inc
xchg
xor
add
inc
cli
out
je
add
mov
iret
xor
mov
fbstp
lds
les
stos
mov
aaa
bound
dec
rcr
ss
mov
sub
mov
mov
fdivl
addr16
repz
pop
dec
sbb
and
xor
lds
std
pop
mov
sbb
add
or
push
pop
popf
and
mov
xchg
mov
and
and
aas
jnp
push
xor
shlb
jl
jno
sbb
lret
and
mov
pop
xchg
cmp
stos
jecxz
arpl
xor
fdivrl
mov
xor
int
and
in
lret
add
imul
insb
repnz
jno
jbe
mov
idivb
jno
das
xorb
inc
or
fisttps
scas
imul
and
add
inc
das
pusha
pmaxsw
inc
fcoms
fwait
sbb
pushf
mov
or
cmp
fwait
pop
xchg
movsb
cmp
push
scas
xchg
push
mov
or
inc
inc
pushl
mov
les
fdivrs
dec
pop
mov
stc
sarb
mov
pop
outsl
cld
pop
jns
xchg
pop
lahf
or
xchg
or
push
repnz
pop
xchg
sarb
sub
mov
sub
adcl
adc
jnp
mov
movsb
and
in
bswap
cmovno
hlt
jg
cmpl
stos
jo
push
and
mov
and
sub
mov
std
xchg
sub
fadds
add
sub
insb
fdivrs
xor
mov
push
sub
or
es
fcomps
imul
subb
and
clc
std
xchg
xor
xchg
sarb
ds
inc
mov
lock
sub
xor
dec
imul
and
jg
or
pop
sbb
das
pushf
ror
mov
push
inc
out
pop
adc
cmp
div
pop
mov
into
mov
inc
mov
pop
leave
pop
mov
sub
mov
ret
mov
pop
test
or
je
sarl
ss
ficomps
fimull
sbb
sbb
icebp
loope
mov
push
inc
push
fstpl
stc
stos
daa
repz
call
pushf
insb
movsb
jne
inc
jne
ret
xorl
mov
ljmp
lock
mov
cld
jb
fsubrs
call
rorl
aam
ss
xlat
pop
call
movsl
js
ret
movsl
movsb
push
pushl
jae
lret
push
cmp
cwtl
xor
pop
leave
les
mov
sbb
mov
lahf
in
adc
out
popf
jne
fisubs
sbb
xor
cmpsb
pop
sarb
ficoml
cmpsb
ljmp
sub
inc
mov
dec
mov
gs
stos
sub
cld
add
add
test
stos
mov
stos
leave
aam
clc
mov
inc
dec
jp
sub
cmpb
int
lahf
sbb
rclb
xchg
jne
inc
push
xor
jp
loope
out
shlb
mov
stos
out
rolb
das
add
xor
push
mov
fcmovne
mov
xor
mov
clc
dec
mov
or
cmp
or
xor
fbstp
push
cmpsb
fsubrs
xor
jle
dec
iret
and
push
sarl
cmp
imul
mov
xor
cmp
cmp
pop
cmp
bound
inc
dec
shrb
fbstp
clc
fdivs
iret
sub
or
inc
in
sti
mov
lret
fstps
xorl
fsubr
lds
push
or
sub
mov
add
jmp
mov
faddl
loopne
dec
adc
mov
and
rcl
sbb
jns
addr16
sub
fdivrp
sbb
sub
cmp
xorl
inc
cld
fdivr
mov
lcall
add
dec
out
int3
insl
js
stc
fldt
lcall
add
jl
loopne
cmp
subb
sbb
push
icebp
mov
inc
xchg
jb
sbb
test
rep
lods
xchg
adc
rclb
push
mov
loope
loopne
int3
push
sbb
out
ret
ss
push
xchg
jl
aam
mov
dec
mov
imul
outsb
add
std
sahf
pop
mov
mov
or
icebp
into
inc
dec
adc
sahf
imul
popa
inc
test
add
pop
inc
inc
and
sub
cwtl
bound
repz
push
sbb
notl
in
dec
pop
pop
mov
scas
adc
lock
and
jecxz
lods
sub
loop
int
out
in
xchg
push
mov
mov
push
cli
and
sbbb
rorb
test
pcmpeqw
mov
and
inc
xchg
mov
rclb
jmp
fwait
cwtl
mov
xchg
jno
mov
stos
pop
mov
jbe
data16
aaa
nop
push
mov
stos
loopne
es
sarb
inc
fs
icebp
jnp
imul
out
inc
xor
sti
xor
mov
sub
lcall
jne
push
aam
lods
dec
scas
movsb
xor
popf
in
xchg
jmp
pop
das
adc
jle
nop
ret
aam
loop
adc
pop
stc
insl
outsl
cmpsb
imul
insb
pushf
adc
jnp
lea
pop
fimull
mov
cs
ret
cmp
cmpsb
imul
sbb
jp
or
cmp
clc
mov
sbb
and
mov
dec
and
jg
loope
mov
dec
test
std
pop
daa
daa
dec
shlb
push
jle
enter
pop
push
mov
xchg
adc
cmp
stos
test
push
jl
or
notb
arpl
add
jne
das
or
pop
xchg
sub
mov
xchg
repz
sbb
push
mov
inc
into
xchg
inc
mov
insb
cltd
jecxz
hlt
dec
fsubs
add
sub
divb
push
out
sbb
shll
stos
push
or
mov
test
mov
outsb
les
jl
jae
movsb
xor
fwait
add
or
push
fstl
notb
or
mov
mov
fadd
das
dec
inc
xchg
insb
sbb
jmp
pop
cmpl
mov
jp
imul
and
cli
xchg
add
lock
stc
push
gs
ret
jecxz
hlt
jle
ss
add
out
icebp
cmp
loopne
jae
xor
or
dec
push
push
mov
rol
icebp
add
test
mov
cmp
je
pusha
jmp
sbb
scas
mov
js
jns
ffreep
pop
mov
xchg
test
and
cli
sub
dec
mov
pop
and
jecxz
addl
sti
in
sbb
or
push
mov
and
cltd
push
orl
cwtl
pop
sbb
ret
insb
orl
out
jb
xor
sbb
shrb
mov
jge
cmp
add
gs
mulb
push
mov
sbbb
cltd
or
shll
cli
fisttpl
push
leave
cmp
jmp
mul
push
lods
cltd
out
stos
xor
or
mov
xchg
sbb
out
sub
adc
fs
add
xchg
lock
sub
jno
or
mov
xchg
adc
xchg
js
cmp
mov
or
mov
clc
ret
les
jp,pt
bound
push
int
xor
cmp
sarl
push
insl
cs
inc
lods
cli
cmp
arpl
clc
loope
jb
pop
subb
ret
or
add
neg
add
xchg
fdivrs
sbb
and
push
push
cld
sub
jecxz
jae
movsl
push
int3
push
pop
stc
es
andl
loopne
and
lock
loope
cld
movsl
sub
xchg
push
popf
lahf
jle
call
push
ds
ss
jge
cld
loope
repz
push
lea
aad
cmp
adc
imul
add
inc
adc
pop
sbb
and
cltd
test
push
pop
arpl
push
fldcw
jp
mov
scas
mov
pop
stos
test
lret
pop
sti
dec
pop
movl
lock
in
imul
adc
fwait
cmc
ja
push
cmp
fiadds
jl
fisubrl
jb
jbe
xchg
jb
pop
mov
xor
push
test
enter
cs
sub
jne
fcmovbe
movsb
sub
inc
xchg
cmp
stos
fwait
icebp
stos
adcl
pop
fidivs
push
repz
dec
lods
loope
es
dec
inc
mov
inc
fildl
mov
data16
adc
mov
fdiv
fldt
rcll
dec
xor
mov
and
mov
mov
mov
imul
xor
mov
and
rol
cmp
pop
dec
jo
pop
scas
lahf
mulb
out
add
loope
dec
sub
mov
sahf
sbb
push
pushf
cmp
and
cmp
clc
pop
jo
jae
and
aaa
xchg
inc
lds
dec
jecxz
xchg
dec
mov
std
jl
xchg
push
push
or
mov
push
imulb
mov
or
xchg
pop
push
push
call
insb
insl
cwtl
inc
ss
sahf
mov
add
dec
fbstp
bound
sub
ret
mov
or
inc
inc
aas
xchg
push
jo
sub
insl
dec
test
mov
jecxz
or
outsb
mov
mov
outsl
mov
mov
fstpt
test
jae
inc
test
addb
cmpb
sub
out
stc
mov
push
std
adc
pop
sub
dec
in
cmpsl
cmp
jo
ret
xchg
test
insl
scas
insb
and
pop
dec
lds
mov
mov
into
cmp
xorb
pop
lcall
lock
jo
sub
mov
data16
jmp
adcl
dec
negl
shl
add
ljmp
sti
call
pop
mov
sbb
mov
pmaddwd
mov
push
icebp
imul
lcall
mov
js
movsl
shl
arpl
fcomps
shll
ss
outsl
add
pushf
lea
and
movsb
pop
push
pop
jge
cmp
jo
push
ficoml
call
or
jp
mov
mov
dec
clc
pop
xlat
mov
sbb
or
les
mov
push
es
xchg
js
push
pop
psrlq
fwait
rclb
push
aaa
jno
lods
pop
mov
ret
icebp
cmp
push
mov
lcall
testl
das
sbb
repnz
filds
pushf
icebp
xor
mov
loope
fs
inc
je
pop
sbb
jg
sub
pop
in
mov
addl
test
out
lods
jge
cmp
and
je
inc
dec
cld
lret
mov
mov
fwait
inc
inc
mov
pop
mov
and
or
outsl
mov
pop
cmpsl
xor
cmp
movsb
dec
aad
hlt
or
xchg
cli
lcall
mov
xchg
lahf
adc
inc
mov
dec
fsubr
fisubs
pusha
adc
adc
sti
mov
pop
and
push
pop
mov
dec
lret
mov
fdiv
movsb
or
add
sub
movsl
add
add
and
scas
jae
mov
loope,pn
movsb
out
xchg
mov
inc
add
loop
jmp
pop
fcompl
ja
and
mov
sub
lods
mov
xor
aad
js
push
in
ret
adc
adc
cmp
lea
mov
xchg
or
stos
in
jno
iret
inc
fstpt
rolb
cli
rclb
jmp
std
adc
xchg
mov
jns
in
dec
inc
sahf
push
mov
cmp
sbb
arpl
pusha
add
lods
mov
das
aam
jbe
pop
dec
xor
out
mov
fbld
sbb
mov
out
loopne
add
mov
xor
mov
addr16
and
pop
add
or
xor
bound
add
xchg
in
or
add
stos
push
cmp
sub
mov
fnstcw
pop
fucomip
es
dec
in
or
sti
scas
push
jmp
dec
mov
ss
sub
test
imulb
jmp
cmp
std
xor
popa
mov
lcall
jns
jl
mov
insb
shlb
pop
and
scas
outsl
mov
pop
add
sti
ret
push
add
dec
stos
mov
mov
faddl
sub
push
jbe
mov
or
and
stos
jns
out
fcomi
les
scas
pop
push
rcl
outsl
shrl
xlat
push
dec
add
dec
xchg
mov
sub
aaa
std
push
mov
sahf
or
inc
loopne
jo
je
mov
sahf
xchg
mov
jge
fnstenv
pop
cmp
idiv
sbb
in
adc
push
cmp
pop
loope
mov
int3
pop
dec
pop
mov
dec
lock
stos
cmp
push
cwtl
pusha
outsl
fsubrs
sti
loope
aad
dec
pop
fcom
in
jns
xchg
cwtl
sarl
sbb
pop
pop
mov
mov
mov
cmp
mov
push
enter
jno
cmp
mov
decl
add
ja
dec
or
fcmovnu
inc
and
xchg
add
xor
fldpi
inc
mov
xor
aam
mov
adc
xchg
cs
insl
push
loopne
cmpsb
lret
jb
std
sti
pop
push
inc
int
repz
les
mov
gs
sbb
dec
loope
aad
cmp
pop
lcall
imul
xchg
and
test
sbb
cmp
mov
jbe
sti
add
or
inc
mov
dec
inc
push
stc
imul
cmc
loope
xor
and
inc
shr
cmc
int3
js
lea
movsb
sti
xor
mov
leave
div
mov
outsl
in
repz
xchg
ret
gs
cmp
and
les
sbb
pop
test
mov
jb
sub
lds
adc
sbb
sti
pop
gs
movl
push
nop
arpl
cs
mov
lahf
mov
jge
or
mov
push
or
sti
aad
push
adc
scas
or
out
imul
lock
xchg
jno
xchg
rcll
pop
mov
iret
push
mov
arpl
or
imul
jae
mov
or
loopne
mov
inc
mov
out
mov
xchg
js
es
push
movl
push
cmp
mov
inc
imul
je
or
jl
mov
sbb
sar
popa
lock
stos
into
push
mov
or
lcall
hlt
mov
xchg
into
pop
jno
pop
or
sub
ret
xchg
cmc
pop
or
mov
push
sbb
push
enter
ficoms
xor
sub
mov
pop
mov
add
jp
hlt
jo
or
xchg
mov
sub
add
xchg
in
hlt
adc
push
xor
mov
jmp
inc
fidivs
jge
mov
int
push
rcll
repnz
orl
aad
mov
cmc
shlb
clc
out
adc
unpcklps
xor
mov
push
mov
cmp
cmp
jge
push
sbb
mov
lods
or
sbb
inc
imul
or
mov
repz
rolb
and
inc
xchg
pop
sbb
insb
sbb
xchg
pop
mov
xor
leave
pop
inc
in
xor
mov
daa
dec
xor
push
mov
sub
xchg
lock
test
cmova
inc
arpl
je
jecxz
xor
imul
aaa
iret
adc
outsl
dec
mov
xor
repz
mov
pop
fnsave
xchg
rorl
in
pop
pop
mov
jle
gs
mov
dec
popa
fcmovbe
pusha
and
pop
mov
xor
xchg
cmp
mov
sub
add
cmp
fnstsw
les
lods
cmp
inc
and
call
js
sbb
adc
loop
dec
negl
repnz
sarb
cmpsb
xor
sbb
dec
aam
faddl
pusha
outsl
jle
xchg
ljmp
jl
push
sbb
mov
int
dec
dec
data16
pop
lock
scas
ljmp
sar
adc
xlat
mov
pop
pop
inc
negl
sbb
sub
pusha
rcrl
ss
cmc
ljmp
dec
sub
xchg
xchg
insl
ljmp
add
dec
scas
mov
sbb
fisttpll
sub
push
pop
icebp
lcall
insl
sub
mov
insb
inc
xchg
sbb
arpl
fildll
mov
mov
mov
adc
xor
inc
mov
pop
fnstenv
pop
xchg
push
imul
stos
xchg
jmp
cmp
rolb
xchg
mov
int3
dec
pop
and
pop
dec
scas
in
mov
cmp
stos
pand
adc
insb
jmp
and
push
and
fnstcw
scas
xchg
es
mov
and
mov
ljmp
sbb
add
xor
addr16
add
stc
and
jne
pusha
xchg
inc
add
mov
push
or
lods
or
clc
or
or
mov
cmp
push
push
insb
pop
inc
mov
sub
push
or
add
into
mov
push
pop
adc
xor
sbb
test
dec
loop
cs
push
stos
aam
das
outsl
mov
test
push
push
test
test
sbb
add
loop
inc
ja
inc
bound
jle
cmpl
aad
jo
cmp
ljmp
es
dec
mov
sti
inc
push
adc
rorl
pop
mov
push
dec
xor
xor
adc
push
iret
sbb
rep
cltd
cs
jg
inc
ja
add
lock
cwtl
xor
test
mov
pop
sbb
lret
insb
repz
mov
loopne
jge
ja
push
mov
dec
jnp
fsubs
mov
pop
movb
pop
jnp
inc
sbb
dec
cld
xchg
ror
push
int3
pop
dec
pop
cmpsb
cmp
outsl
mov
sub
mov
cmp
insb
jl
push
into
or
inc
test
test
popf
cmp
xor
ljmp
js
sub
imul
mov
test
into
rcll
mov
xor
iret
clc
mov
ret
push
sarb
or
push
jnp
cmp
nop
adc
xor
aaa
sbb
mov
pop
xor
vprotw
orb
mov
cmpsb
ja
cmp
lahf
cwtl
test
or
lods
jb
dec
pop
repnz
mov
daa
push
mov
repnz
sbb
stos
cltd
pop
xchg
mov
inc
adc
jmp
push
sub
xor
adc
loop
dec
lret
call
stos
stos
xchg
sti
rorb
fwait
xchg
in
sbb
fsubrl
and
xor
movsb
aas
mov
out
lods
adc
jmp
insl
or
push
scas
fnstcw
cmp
sub
add
sti
dec
sbb
aam
sbb
dec
mov
mov
dec
xchg
pop
inc
mov
xor
lds
ds
movsb
jp
cwtl
inc
pushf
dec
mov
cmp
and
push
mov
iret
cmp
mov
cs
mov
lret
in
jae
cmp
ja
js
cmp
mov
cmp
xchg
add
call
mov
jp
cltd
xor
das
ss
mov
jne
faddl
mov
mov
ret
sub
push
pop
mov
adc
mov
mov
in
mov
daa
gs
sub
cmp
pop
shll
testb
mov
leave
mov
ss
rol
jae
mov
into
cmp
popa
pop
divl
and
cwtl
in
add
ret
out
push
ret
psubd
test
inc
sub
dec
popaw
jbe
sub
test
loopne
jg
je
mov
or
xor
rorb
pop
pop
rorb
pop
xchg
and
push
or
aaa
in
cmpsl
xchg
add
inc
divl
sub
sarl
stos
test
cmp
out
lret
outsl
das
icebp
sbb
dec
addb
or
jnp
mov
mov
jns
lock
pusha
mov
cltd
push
ret
aad
daa
fsubrp
leave
mov
or
sti
shll
mov
sbb
dec
xchg
jg
mov
rclb
xchg
cli
push
add
je
repnz
rolb
xchg
add
and
and
jl
mov
dec
stos
das
inc
out
dec
inc
mov
mov
das
adc
lcall
push
ret
add
xor
jmp
mov
dec
sbb
rcrb
pushf
sahf
js
inc
scas
lret
jbe
mov
push
mov
stos
ret
ds
aam
ds
add
mov
sbb
push
notb
jno
pop
pop
xchg
cltd
push
cmpsb
inc
sbb
pop
imull
mov
rcll
scas
cmp
mov
in
ss
jae
lods
into
xor
in
push
mov
pop
inc
push
sbb
sub
out
pushf
mov
arpl
int3
lahf
arpl
adc
push
adc
mov
mov
insb
push
scas
ja
ja
in
push
test
xchg
lods
mov
aam
xchg
lods
sbb
mov
adc
mov
ds
fwait
cmp
add
sbb
sbb
adc
adc
in
xchg
sbb
pop
into
mov
inc
rcr
cmc
mov
imul
movsl
fadds
into
pop
aas
int3
mov
jg
or
jbe
dec
sub
sbb
add
lods
jno
cmp
push
loopne
fmull
popf
movsl
test
cld
fists
cwtl
fisttpll
in
xor
or
mov
cs
jae
jge
xorl
ja
fisttps
imul
mov
int
jmp
gs
pop
pop
test
push
add
push
inc
dec
out
sub
movsl
ret
sbb
test
rclb
ret
xchg
jmp
inc
test
enter
lret
or
je
xchg
lds
xchg
outsl
jle
mov
push
ret
sub
insl
cmc
cmp
aam
jno
ret
mov
repnz
or
sbb
pop
inc
or
inc
xchg
imulb
bnd
sbb
mov
sub
jae
pop
mov
pop
xor
mov
lahf
or
rorl
fs
adc
rcrl
repnz
cwtl
adc
push
in
ret
push
adc
cmpsb
xchg
jnp
add
sarb
add
loop
mov
fdivrs
add
dec
jne
mov
and
push
call
push
insb
insb
std
pop
mov
loopne
loope
dec
insl
jae
daa
inc
and
push
or
sub
insl
cmp
into
adcb
sub
inc
mov
int3
cli
out
iret
push
ja
add
icebp
xor
enter
cmpsb
ror
mov
cmp
mov
js
cwtl
mov
mov
rorl
xchg
pushf
cli
cmp
ret
aaa
mov
into
or
imul
jecxz
es
mov
add
xlat
repz
fnstenv
rcrb
mov
ret
adc
jmp
ds
outsb
in
jg
test
pushl
scas
cmp
cmc
movsl
stos
in
mov
cmp
xor
dec
mov
xor
fldpi
inc
jbe
movsl
inc
add
xchg
je
mov
adc
or
cmp
test
cli
jg
enter
mulb
xchg
push
popf
outsl
arpl
and
add
and
test
and
cmp
dec
aad
and
mov
adc
push
or
cltd
shlb
pop
pop
mov
xor
add
push
xor
push
push
mov
or
and
pop
jnp
add
sbb
xor
imul
xor
mov
sahf
sub
sub
movsb
or
out
rclb
sub
addr16
mov
dec
sbb
jbe
aam
mov
mov
adc
cld
mov
mov
inc
inc
les
push
inc
xor
lock
aad
fsubs
and
fbstp
popl
xchg
push
mov
je
sahf
clc
call
lods
push
fisubrs
pop
mov
shrb
lret
or
sarb
mov
cmp
in
adc
js
paddsw
pop
push
pop
mov
cltd
add
pop
pusha
ja
xor
add
loope
xor
insl
jno
ja
int
and
mov
stc
pop
mov
adc
pop
adc
push
hlt
add
pop
scas
xchg
push
dec
dec
out
call
xchg
sarb
push
mov
scas
xor
add
mov
in
lock
int
pop
movsb
js
dec
pop
in
nop
jo
sub
inc
pop
insb
nop
scas
add
add
insb
mov
dec
mov
dec
les
lret
xchg
lock
fwait
xchg
mov
test
sbbb
cmpsb
call
sub
popa
jecxz
dec
rcrl
xchg
jg
xlat
lret
sub
lret
in
jnp
loope
sti
mov
xor
jp
loope
movsl
push
stc
call
push
adc
rcll
push
fmuls
mov
in
mov
stc
xchg
inc
les
je
add
and
mov
jne
push
shr
lret
test
sbbb
popf
iret
lea
mov
pop
sahf
push
iret
movsb
in
and
pop
lcall
mov
fwait
imul
jl
sbb
nop
xchg
arpl
stos
dec
ja
dec
push
frstor
xor
scas
cmp
mov
cltd
pop
mov
call
test
add
js
gs
add
in
popa
test
or
pushf
inc
cmp
mov
cli
inc
cmp
sbb
in
adc
sbb
bound
pop
dec
pop
lods
cs
xorl
cmp
xchg
enter
fiadds
mov
clc
and
sbb
hlt
and
mov
in
jg
sub
arpl
jl
mov
in
add
ret
push
lock
xor
jne
test
adc
add
add
out
sarl
aas
xchg
sbb
sahf
fsts
jb
andl
ss
sub
cmp
pop
pop
sbb
js
stos
das
js
imull
out
mov
jmp
aad
rolb
leave
mov
test
repnz
xchg
jo
pop
iret
gs
jae
enter
push
xchg
sarl
mov
jl
push
ja
cmp
lods
cmpsl
cmc
pop
frstor
lcall
in
dec
mov
push
mov
dec
push
adc
jecxz
into
mov
push
mov
xchg
xchg
adc
dec
mov
sbb
inc
mov
sub
andl
popa
jae
mov
popf
lret
inc
into
lock
mov
xchg
adc
inc
xchg
push
xchg
outsb
je
pushf
xchg
mov
test
andb
xchg
pop
sub
cmp
cld
add
sarl
shr
xchg
test
mov
das
or
aam
mov
fs
and
jle
sbb
and
add
lea
fucomp
mov
inc
jge
add
in
mov
lods
aam
mov
add
in
sub
out
xchg
sbb
add
mov
or
rdmsr
ficoms
fsubl
lods
std
xor
pop
pushf
and
popf
push
cmp
popf
ds
jl
xor
mov
inc
leave
push
dec
repz
and
rcrb
mov
jp
stc
test
movb
and
cmpb
sub
or
pop
mov
pop
ds
into
test
leave
lods
int3
inc
mov
out
shrl
adc
fdivrp
pop
subl
pushf
popa
adc
mov
cmp
leave
xchg
fidivs
idivb
xchg
fmul
shrb
cmp
jl
bound
cld
xchg
xchg
jb
outsl
xchg
movsl
addr16
lea
mov
call
sbb
idivb
xor
mov
stc
stos
push
loopne
daa
cmc
test
sarl
xchg
scas
dec
inc
and
sbb
cmp
in
jne
insb
dec
bound
mov
stos
mov
jl
sub
inc
outsl
fs
mov
inc
add
xor
xchg
mov
mov
aas
pop
jb
sub
add
ljmp
xor
je
cltd
sub
sahf
pop
and
mov
in
inc
cs
rolb
xor
stc
xchg
js
sub
xchg
mov
je
test
add
xor
movsl
out
push
or
fdivl
out
lahf
aam
push
sub
stc
andl
push
sbb
divl
xchg
mov
pushl
lret
jmp
jo
ss
sbb
push
rcr
mov
inc
push
push
or
jne
pusha
mov
xor
cmp
pop
pop
fldcw
push
dec
mov
push
outsl
dec
out
cwtl
jne
fnstcw
jo
dec
out
xor
pop
icebp
and
clc
mov
lock
jo
sahf
stos
adc
mov
js
test
pop
mov
jbe
adc
cld
add
lds
ss
and
add
adc
mov
or
jo
push
cwtl
jnp
add
cld
insb
cmp
push
out
push
pop
andl
xor
jne
jb
jecxz
outsb
push
xor
into
sub
jbe
adc
jmp
xor
repz
push
sub
std
cmp
mov
pop
shlb
loope
inc
adcl
insl
or
mov
inc
mov
cmp
daa
mov
xchg
jns
dec
dec
or
int3
insl
adc
and
mov
dec
insl
imul
or
decl
js
xchg
mov
dec
jmp
mov
sbb
outsl
pop
cmp
sub
mov
cmp
mov
pop
or
jmp
mov
dec
stos
sbb
in
dec
popf
out
sbb
out
pop
sub
adc
adc
lods
adc
mov
mov
push
notb
xchg
lcall
adc
loopne
or
aas
insb
cmp
jl
inc
add
popf
loop
js
movsl
test
mov
xchg
add
or
sub
popf
dec
sub
aas
ja
sti
fs
mov
lods
sbb
dec
xchg
rcrb
adc
dec
in
shl
push
push
hlt
lahf
pop
jno
jecxz
test
mov
movsl
popf
add
adc
outsl
and
bound
mov
and
dec
out
stos
dec
push
add
pop
arpl
inc
mov
push
sbb
push
sbb
notb
fidivrl
mov
cs
ds
jl
mov
ret
cmp
push
xor
sub
push
bnd
sbb
int
mov
pop
cmc
fstpl
inc
cmpb
movsb
fildll
rcll
ljmp
cmp
adc
xchg
jb
stos
sub
in
test
loop
jl
hlt
fwait
into
xor
jo
sub
inc
xchg
int
fstps
add
pushf
rep
mov
sub
stos
loop
mov
test
repz
scas
cmp
lret
jge
dec
jmp
xchg
in
les
scas
shl
idivl
push
adc
fstl
repnz
mov
mov
je
inc
jne
fwait
pushf
sub
inc
and
shr
and
cmp
mov
lock
ljmp
mov
or
nop
pop
adc
loop
sahf
jp
loopne
inc
setb
daa
jle
dec
inc
ret
push
push
mov
into
xchg
insl
adc
adc
jns
xchg
lds
mov
movsb
dec
dec
or
pop
pop
push
and
mov
in
out
in
lods
lcall
loop
sub
jge
jle
fsub
mov
ljmp
mov
cld
loopne
int
mov
jno
mov
or
lock
popf
ja
cmp
lcall
in
loopne
push
pop
mov
cmp
inc
pop
fmul
test
out
pop
mov
scas
repnz
popf
out
jle
arpl
lcall
push
inc
push
push
or
adc
fcmovne
fwait
sahf
push
hlt
inc
sub
sbb
xor
dec
rcrb
dec
jno
imul
out
data16
into
mov
aas
sbb
cmp
sub
jmp
xchg
xchg
jge
popa
addb
aaa
fcomip
in
cmp
xchg
jecxz
or
pop
repnz
std
insb
fidivs
mov
inc
add
insl
jmp
call
mov
inc
cli
jecxz
enter
sub
test
push
lahf
push
loop
nop
das
lcall
in
push
fs
call
es
test
hlt
movsb
xor
out
dec
cmpb
push
push
mov
jo
in
sub
pop
xchg
rcll
push
stc
jl
sbb
es
lret
mov
test
inc
sbb
jp
or
adc
lret
js
mov
add
jne
dec
jmp
sbb
and
in
lods
push
adc
xor
mov
test
stc
cmp
cmp
push
xor
sarb
inc
loopne
sbb
mov
push
mov
orb
cmp
lahf
jmp
pop
hlt
fsubrp
pushf
mov
add
inc
and
xchg
mov
sbbl
inc
xchg
sbb
dec
cmpsb
out
ficomps
pop
gs
rol
sarl
mov
in
cmc
hlt
inc
and
outsb
xchg
pop
mov
stos
push
stc
dec
leave
inc
insb
cmp
adc
outsl
adc
ret
pop
scas
jnp
ud2
and
cmp
rolb
pop
scas
leave
shrb
mov
jbe
or
bnd
sub
gs
scas
cli
cmp
inc
lret
in
mov
int3
or
dec
cmp
jcxz
scas
mov
mov
pop
jmp
add
jb
cmp
pop
xor
mov
fdivs
xor
lahf
cld
xchg
and
sbb
push
jg
mov
jb
sbb
push
addr16
inc
fstps
xchg
jg
pop
xor
lds
orb
xor
pop
lock
and
mov
xor
imul
jno
lret
lahf
dec
push
jae
and
rcrb
pop
mov
sbb
xor
popf
sbb
pusha
aam
ret
and
pop
xchg
out
jg
out
inc
adc
add
ret
shlb
cmc
push
push
test
sbb
adc
sub
loop
test
mov
pop
lahf
mov
dec
shl
sub
xlat
fwait
mov
in
out
cld
push
bsr
lea
xchg
loopne
sbb
cmp
fsubl
xchg
xor
inc
outsl
push
dec
call
sti
cmp
mov
pusha
add
negb
add
scas
cmp
push
pop
adc
or
rcrb
ret
xchg
mov
push
add
jae
fimull
xor
adc
es
dec
lcall
mov
adcb
or
inc
xor
cwtl
jb
movsb
loope
sbb
inc
pop
mov
sub
jmp
or
and
nop
mov
jo
sub
insl
iret
adc
aaa
adc
mov
push
popf
pop
cltd
pop
rcll
dec
aam
and
outsl
push
shll
xchg
and
fsubrp
dec
sub
cltd
mov
ss
lods
push
push
jo
cmpsl
icebp
std
fisttps
icebp
cmp
push
test
gs
push
cli
in
xchg
pop
fld1
inc
out
cmpsb
or
mov
shlb
mov
scas
cmp
xrelease
cmp
mov
enter
popa
and
push
ja
subb
jnp
test
ds
rcl
push
or
aaa
insb
xor
lds
pop
jae
rclb
fwait
add
flds
jge,pt
in
sbb
and
arpl
jmp
cmc
push
pop
dec
cmp
shrl
mov
icebp
lds
pop
jae
enter
test
mov
movsb
orb
sub
jp
scas
mov
push
cmc
stos
inc
shll
int
outsb
cmp
mov
hlt
and
lcall
cmp
mov
mov
jmp
push
or
xor
adc
mov
and
mov
in
fst
pop
aaa
test
inc
pop
ret
sbb
pop
ret
ds
add
xchg
or
das
and
outsl
pop
popa
push
mov
jo
xchg
xchg
jecxz
inc
push
push
dec
xor
imul
dec
lret
or
sbb
test
popf
dec
adc
pop
xchg
mov
mov
popf
mov
cmpsl
je
je
pop
mov
jle
movsl
sbb
in
sub
pop
mov
xor
imul
in
push
jbe
out
adc
adc
or
pop
sub
sub
mov
je
rolb
test
cmp
jp
dec
push
dec
sbb
sbb
lock
dec
inc
sbb
sub
xor
arpl
fwait
adc
sbb
rcrl
mov
sbb
dec
xchg
xlat
adc
and
cmp
xor
push
js
in
xor
int
dec
mov
int3
mov
pop
loop
dec
test
cltd
mov
jle
cltd
shlb
fs
lret
sub
sbb
fdivs
das
int3
mov
jp
add
cmp
out
xchg
mov
subl
ret
push
fwait
mov
int
jg
and
mov
jmp
xchg
jmp
xchg
imul
ljmp
out
inc
cwtl
sub
mov
and
imul
pop
jns
lock
mulb
test
je
inc
orl
sub
aaa
lret
and
add
arpl
or
cmp
xchg
add
push
out
shll
das
pop
insb
or
mov
jo
add
push
cmp
sti
scas
cmp
jge
test
scas
in
lret
cmp
cwtl
xor
push
lods
scas
loop
repnz
xchg
sub
sub
bound
push
cmpl
sub
pop
mov
daa
mov
mov
mulb
js,pt
adcb
xchg
push
les
mov
cmp
clc
cli
lret
sbb
jmp
or
jo
test
jmp
daa
ss
jae
movsl
mov
cmp
insb
cmp
das
dec
insl
push
mov
xchg
mov
pop
mov
mov
sub
or
and
test
cltd
test
movsl
nop
dec
nopl
pop
jmp
cmp
aam
inc
incl
imul
mov
jns
pushf
aaa
leave
or
jae
cmpb
jle
scas
imul
div
hlt
and
arpl
aaa
cmp
mov
loopne
mull
addr16
xchg
movsl
arpl
xor
mov
out
mov
inc
out
lods
dec
xchg
jbe
sub
push
cmp
imul
push
mov
out
cmp
xchg
insl
jg
add
inc
loop
add
xor
stc
mov
loop
mov
cs
clc
cmp
and
cmp
callw
adcb
mov
sbbb
mov
mov
in
mov
xchg
xor
sub
xchg
or
push
mulb
adc
sbb
mov
test
and
adc
or
popa
sub
popf
aas
mov
push
sub
fistpll
movsb
mov
xchg
sbb
ds
jmp
push
pop
lds
je
lods
pop
dec
mov
push
mov
jg
test
add
mov
ret
lock
aam
js
jl
sbb
add
cmp
mov
in
mov
sbb
loope
insl
into
add
cld
clc
pop
fcmovnu
cmc
mov
fucomp
jns
cli
xchg
cmpsb
inc
sti
cmp
addps
sub
jne
dec
sub
movsl
mov
out
fidivrl
push
outsl
sahf
loop
mov
loopne
mov
and
clc
shll
xchg
push
sub
popl
inc
fwait
push
and
or
bndldx
lods
loopne
pop
mov
cmp
loopne
xlat
mov
mov
dec
jl
xchg
loop
gs
cmpsb
repz
int3
adc
shrl
call
inc
outsl
inc
jg
jge
jg
fdivs
xchg
std
inc
test
xchg
addr16
xor
sub
xor
imul
pop
fnstsw
movl
push
dec
jg
xchg
jb
adc
sbb
repz
flds
pop
fwait
sub
cli
jle
fcoms
scas
cld
insl
pop
in
push
stc
decl
pushw
imul
pop
mov
pushf
pop
pop
data16
mov
lods
and
and
push
ficomps
andb
fs
out
mov
sbb
mov
xor
fs
or
sub
repnz
adc
adc
mov
out
and
lretw
cmp
jae
cmp
push
jp
mov
jg
adc
sahf
outsb
hlt
lret
adc
xor
mull
out
loope
movsb
fucomp
add
mov
xor
clc
inc
pushl
pop
out
xor
in
andl
pop
jge
cwtl
or
scas
cmc
push
lods
shlb
scas
orb
sub
push
ftst
push
ljmp
cli
movsl
inc
push
push
pop
out
sbbl
mov
pop
imul
and
sub
bound
inc
adc
or
in
mov
inc
adc
pop
pop
mov
xchg
cwtl
inc
out
jns
mov
sub
in
pop
imul
movsl
pop
sahf
pop
icebp
and
imul
cmp
pusha
cmpsl
sbbb
hlt
daa
shll
sar
mov
repz
mov
mov
sub
mov
push
hlt
jns
movsl
je
sub
test
xchg
sbb
mov
leave
cmp
sbb
mov
gs
add
nop
mov
sahf
or
daa
fisubrl
or
and
push
out
cmp
mov
xchg
shr
lret
mov
flds
arpl
sub
push
mov
or
cmp
or
addb
popf
or
rcrl
pop
xor
push
add
in
aas
or
jecxz
push
dec
mov
jecxz
sbb
push
int3
testb
fists
jae
sbb
push
mov
icebp
mov
mov
xchg
and
inc
pusha
adc
pop
sarb
xor
lcall
jb
mov
movsb
aas
xchg
popa
inc
sbb
je
sahf
mov
add
xor
pushf
pusha
pop
in
ds
adc
mov
xor
in
pop
push
out
loope
addr16
xchg
jo
mov
add
out
adc
in
lds
or
mov
gs
sub
idiv
movsl
mov
sub
inc
std
jg
pop
or
aam
adc
push
pop
pop
scas
mov
add
jbe
and
dec
jns
jle
test
test
repz
or
loope
mov
add
and
xchg
dec
fcomp
dec
out
add
cli
dec
stc
cwtl
loopne
and
jbe
aam
inc
sub
ret
push
dec
xchg
ret
inc
leave
out
or
in
cmpb
push
cld
scas
pop
xchg
and
scas
notl
mov
sti
sbb
mov
shll
test
loopne
push
js
push
aas
sbb
sahf
fcmovnbe
fucomi
jmp
test
sub
insl
stos
loopne
fimull
xchg
nop
test
push
scas
jle
adc
cwtl
in
inc
std
and
imul
push
rol
loopne
jecxz
ss
cmp
daa
add
adc
daa
fstl
ss
dec
out
das
cltd
imul
in
pusha
adc
ja
rcrb
xchg
xor
rcll
mov
add
lahf
jne
mov
mov
das
fs
enter
sti
push
jbe
out
aas
popa
and
jge
mov
push
mov
repnz
sti
mov
roll
das
repnz
mov
adc
mov
ljmp
pop
lods
adc
jns
mov
sub
mov
es
cmp
xchg
out
ljmp
ds
dec
ret
int3
loop
jae
mov
jp
jge
jbe
mov
pop
mov
sbb
gs
jne
aam
ss
popf
adc
lcall
and
bound
pop
addb
xor
xchg
cmovo
mov
sub
pop
ret
push
cli
or
mov
dec
and
sahf
jb
aaa
pusha
or
push
sahf
and
cltd
jp
xor
flds
test
sub
movsb
sahf
mov
cltd
mov
lahf
xlat
pop
scas
into
jns
clc
ds
mov
mov
cmp
sbb
nop
outsb
xlat
loopne
icebp
lahf
mov
jno
xchg
cli
nop
shrb
dec
jbe
adc
inc
sbb
xchg
popa
cmp
lcall
or
dec
mov
xor
sbb
sahf
repz
shl
cmp
in
mov
xchg
das
xchg
mov
xchg
repz
lret
pop
movsl
sahf
lahf
and
cltd
mov
sbb
out
pop
scas
repz
das
push
jl
mov
lea
icebp
xchg
and
in
sbb
inc
mov
xor
mov
pushf
sub
outsb
pop
mov
data16
adc
cs
ds
fistpll
rol
sbb
jp
mov
inc
rorb
sub
mov
jp
scas
push
add
mov
pop
fstp
pop
inc
mov
lahf
pop
add
fcompl
insb
jnp
pop
insl
push
xor
in
xor
inc
lahf
test
imul
loopne
jo
push
sub
leave
cmp
decb
jmp
popf
push
push
out
mov
xchg
es
repz
sarb
push
inc
inc
mov
jge
stos
add
outsl
xchg
xchg
or
xchg
cmp
movsbl
aam
jge
leave
mov
pusha
jecxz
jl
ret
push
mov
dec
or
mov
js
pop
push
lret
mov
jne
dec
aad
mov
cld
xchg
test
icebp
push
inc
cld
aas
adcl
cs
sub
fmull
notb
pop
cltd
mov
cmp
jb
mov
and
orl
aam
ss
stc
jmp
xchg
jno
xchg
sub
push
ja
jne
sbb
xor
pop
enter
push
mov
dec
and
mov
dec
lea
in
rcr
adc
xchg
das
out
mov
out
jge
mov
cwtl
cmp
aam
cmp
das
js
lock
pop
push
test
aas
pushf
aaa
jns
mov
inc
fstpl
faddl
inc
push
push
mov
inc
cmc
xor
cmp
or
fnstsw
and
cmc
push
iret
sub
xchg
nop
or
xchg
push
dec
loopne,pn
push
and
fs
pop
mov
jp
in
push
lods
xor
mov
sub
mov
mov
popf
decb
fimuls
adc
std
cmc
cltd
or
jae
fcoms
mov
add
jg
dec
test
mov
movlps
adc
mov
pop
jp
xor
mov
mov
xchg
and
and
cld
and
daa
adc
pushf
sti
das
call
jecxz
sbb
test
test
je
fs
out
enter
jp
jge
decl
and
mov
pop
jmp
mov
mov
out
test
lret
ja
pop
insb
andb
icebp
push
push
push
xchg
lods
loopne
mov
cmc
jmp
in
ret
addr16
jbe
add
loop
mov
jns
push
cmpsl
and
orb
cltd
ret
jo
dec
adc
adc
fs
pop
leave
notb
cs
jo
mov
outsb
sti
jno
js
xchg
fnstsw
jmp
add
and
or
dec
jle
push
test
cmpsl
xor
cmp
push
and
pusha
into
sub
sub
ret
adc
fwait
xor
jg
sub
lea
dec
cmp
xchg
cld
mov
and
shl
nop
testb
xor
int
sahf
or
ret
lock
aad
adc
add
mov
xor
xchg
fbstp
repz
xchg
ret
shll
pop
mov
mov
adcb
push
inc
sub
mulb
mul
jno
data16
out
loop
sub
pop
sar
pop
adc
or
sub
lds
dec
inc
jmp
mov
or
xor
cmp
xchg
jmp
in
ds
stc
or
push
xchg
aaa
mov
nop
cltd
andb
cwtl
jl
mov
pop
inc
outsb
int3
cltd
sbb
xor
xorb
sub
lcall
ret
jmp
and
pop
jecxz
xchg
add
sbb
test
dec
add
xchg
stc
xchg
stos
mov
fbstp
dec
jnp
push
shl
dec
test
stos
or
mov
aas
dec
or
sub
inc
or
pop
cmp
push
rcrb
les
jecxz
lods
int3
out
mov
ds
xlat
add
in
mov
adc
lds
ss
pop
mov
jmp
push
xchg
lret
add
fimuls
push
mov
xorl
fidivs
outsb
insb
sub
lods
int
idivb
jmp
sub
into
push
addr16
insb
js
inc
sub
fsubrl
jmp
cmpb
test
imul
in
in
dec
mov
xchg
outsb
sbb
or
lods
lret
xchg
xor
decb
sar
mov
shlb
dec
adc
jecxz
outsb
pop
push
outsl
jb
shrb
subb
ss
test
sbb
popa
jno
xchg
inc
cmpsl
loop
test
mov
test
test
mov
jbe
mov
mov
mov
or
xor
sub
pop
or
out
addr16
jo
fmull
mov
test
imul
arpl
mov
xchg
jo
dec
jbe
ret
push
jno
mov
popa
imul
rolb
push
push
test
mov
lcall
lock
mov
out
scas
mov
jnp
std
stos
dec
out
popf
aam
hlt
imul
cmp
push
xor
stos
cli
shlb
mov
cltd
inc
xor
movsl
xchg
subl
adc
and
iret
jne
and
std
repz
scas
inc
adcl
xor
pop
pop
lods
out
jno
loope
nop
xchg
std
mov
das
push
or
or
dec
insb
dec
push
in
cld
addr16
mov
add
addr16
addl
outsb
fcmove
cmpsl
xchg
daa
lds
push
sbb
jmp
or
inc
imul
repz
sub
jbe
test
jge
imul
nop
xor
outsl
or
cmpsb
xchg
sbb
dec
repz
rorb
vcomiss
push
nop
or
push
repz
pop
pusha
popa
hlt
inc
inc
or
xchg
lea
test
sbb
adc
xchg
test
mov
jne
out
out
loopw
xor
push
sub
add
das
mov
push
ror
xor
xchg
xchg
mov
fs
scas
shr
insb
pop
and
push
add
orb
cmp
std
imul
mov
sbb
inc
xor
in
loop
push
leave
push
mov
aaa
sbb
sbb
js
cmp
mov
mov
lock
xor
push
inc
fwait
mov
repz
fnstenv
aam
lea
cs
push
repz
fdivrs
test
les
and
out
int
pop
sti
mov
mov
out
loop
add
dec
aad
jl
repz
sbb
jp
adc
xchg
xchg
sbb
insb
xchg
cld
aaa
imul
inc
jo
jmp
sub
into
leavew
loopne
mov
fistpll
ret
and
or
jle
mov
test
movsl
jmp
push
xor
test
mov
clc
je
xchg
mov
outsl
xor
icebp
fmul
push
lcall
in
enter
pop
test
orb
inc
sub
and
cmpsl
sbb
aam
lods
or
sbb
js
pop
cwtl
sahf
pop
sub
stc
les
lahf
and
leave
add
imul
jp
aam
xor
jne
jns
insl
and
addr16
call
bound
iret
mov
lods
js
push
hlt
jecxz
mov
pop
andb
sub
mov
adc
aas
jp
or
test
clc
subb
cmp
jb
fnsave
or
dec
gs
pop
rcr
jp
mov
jo
fstps
jmp
mov
movsl
mov
and
out
adc
fistpll
push
inc
add
aaa
das
mov
inc
pop
jp
push
addr16
mov
mov
pop
push
sub
lea
lods
bound
fucomp
es
inc
xchg
pop
pop
xor
aam
aad
mov
jne
xor
negl
or
cmpsl
or
cmp
sbb
icebp
test
lods
loope
ret
dec
dec
mov
pop
inc
and
cmc
loope
jle
icebp
pop
loopne
and
and
lret
mov
adc
sbb
dec
and
xlat
enter
arpl
shll
shl
xchg
lahf
fwait
add
inc
jno
sbb
and
mov
movsl
popf
orb
inc
mov
lret
dec
lods
sbb
cmpsb
add
push
outsb
xor
mov
aas
in
sbb
push
jne
outsb
shlb
push
sbb
test
jmp
sub
cli
fstps
ds
das
mov
jno
mov
dec
mov
lcall
mov
sbb
inc
call
sti
lret
or
mov
hlt
subl
and
in
imul
aaa
mov
rclb
shlb
push
cmp
aas
lret
adc
mov
add
pusha
test
lds
ds
mov
fcmovbe
mov
aam
sbb
repz
sub
mov
dec
loopne
out
iret
pop
fmul
cmp
mov
and
xlat
or
adc
add
jnp
pop
mov
push
dec
sub
xchg
inc
jle
pusha
lods
sbb
into
lret
sbb
in
push
jae
cltd
push
pop
aad
sbb
xchg
push
ret
add
movsl
sbb
sbb
mov
std
or
out
loop
add
sbb
push
int3
mov
stc
icebp
sbb
and
ret
das
xchg
sbb
ret
bound
adc
test
mov
adc
xchg
daa
cmp
mov
pop
pop
movsl
cwtl
jle
and
ficomps
jns
daa
fildl
into
add
inc
cwtl
dec
lret
jo
fimull
mov
inc
filds
add
test
mov
push
test
callw
mov
inc
out
outsl
bound
xchg
int3
fimull
cmp
adc
add
popa
test
call
test
lock
lods
or
out
lods
adcl
jl
rolb
xchg
xor
mov
mov
fadds
jne
cmpb
push
jo
test
pusha
loope
imul
adc
int3
fstpl
out
adc
cli
push
daa
mov
loop
mov
pop
xchg
jl
xacquire
pop
test
pop
adc
ljmp
mov
test
cmp
mov
cmp
pop
test
inc
inc
jp
filds
sbb
sbb
jnp
push
rolb
nop
xor
std
mov
sti
mov
mov
xchg
xchg
out
mov
mov
clc
fnstsw
push
inc
lahf
in
popf
xor
xor
fidivrl
inc
shrb
out
mov
inc
mov
dec
sbb
xor
mov
xchg
ja
sbb
into
push
dec
push
cmp
pop
lret
add
cmp
xor
out
test
cs
lcall
mov
dec
fnstenv
pop
test
sub
xor
cmp
fdivl
fisubrs
add
arpl
xchg
pusha
out
icebp
mov
xlat
movsl
pop
aad
jle
cs
push
jp
dec
mov
sbb
sarb
jns
sbb
jmp
ds
stc
dec
lock
call
pusha
cli
enter
leave
xor
notb
test
pop
mov
cwtl
in
and
gs
test
lahf
mov
es
aad
jbe
fbstp
cs
stos
xchg
sbb
insb
scas
push
and
mov
jnp
iret
popf
nop
and
and
ljmp
xchg
inc
push
jle
push
pop
cmp
fcoml
adc
in
mov
mov
jg
leave
clc
pop
xchg
adc
mov
in
mov
bnd
mov
adc
cs
sbb
fldt
shl
arpl
leave
int3
rorb
inc
mov
inc
pop
fistps
inc
pop
xchg
call
xorb
ret
jno
xchg
adc
push
jb
jnp
sub
outsl
pop
push
daa
jmp
cmp
sbb
adc
repz
pushf
popa
cs
enter
adc
jp
fisubrl
ds
aam
ffreep
xor
mov
jae
push
cmp
fsin
shr
loop
je
imulb
xchg
push
and
pop
lea
sti
ss
cwtl
into
outsl
in
and
fnsave
mov
in
loope
pop
mov
or
jge
mov
mov
jg
cmp
xor
and
inc
test
xchg
mov
or
inc
bound
pusha
add
xor
jb
xchg
pop
mov
ss
mov
cmpsl
dec
pop
sbb
sub
fstpt
roll
adc
movsb
jne
push
cmpsl
sub
cmpsl
add
adc
lea
adc
push
sbb
push
xchg
mov
fdivrs
leave
add
enter
sbb
or
popa
adc
add
adc
arpl
dec
test
jb
xor
insl
dec
rclb
xlat
and
js
sahf
jmp
xor
cmp
insb
sub
adc
rolb
pop
iret
lcall
xorl
dec
xor
or
test
xor
push
repz
imul
lcall
add
dec
ficoms
and
nop
xor
movsb
cmp
inc
inc
fmulp
lds
hlt
fs
test
pop
pop
adc
filds
dec
leave
or
inc
daa
jl
movsl
pop
ja
add
jp
jne
sub
nop
je
mov
cmpsb
cmpsl
pop
ss
aad
xchg
mov
dec
sbb
ss
in
lods
orb
fisubrl
xor
add
push
cltd
inc
xchg
roll
push
pusha
jg
adc
inc
cmpsl
xor
les
cmp
jae
loope
and
pop
ficompl
xor
push
fldl
and
sbb
mov
add
adc
test
mov
mov
lret
mov
and
push
jbe
mov
push
iret
pop
add
imul
jno
adc
mov
bound
add
mov
xchg
out
incb
sti
push
int
sti
mov
adc
cltd
xor
sbb
push
mov
gs
mul
xorb
adc
loope
xchg
cmovne
sub
mov
or
jmp
and
mov
dec
testl
xchg
mov
cmp
dec
sub
js
daa
sub
xchg
int3
pop
repnz
mov
stos
and
mov
daa
push
push
mov
outsb
ss
mov
adc
orl
or
cmp
cmp
jmp
out
loop
enter
imul
jg
cli
adc
inc
pop
cmp
roll
sbb
xchg
ss
push
mov
out
dec
or
or
dec
cmp
sarl
outsb
push
lock
mov
outsl
leave
lret
jbe
push
ret
fisttpll
xchg
subl
dec
mov
getsec
push
out
mov
lds
mov
and
or
fdivrl
scas
insb
xor
push
xlat
pop
mov
cmp
xor
inc
xchg
pop
adc
and
inc
shlb
ds
mov
andl
clc
adc
adc
mov
dec
in
out
and
jo
jno
daa
mov
es
cwtl
cmp
xchg
mov
xchg
cmp
sub
push
push
je
add
jmp
xor
aas
mov
sahf
in
jne
scas
jmp
fldcw
inc
push
pop
jge
cmp
push
add
inc
jb
je
or
dec
and
mov
jge
xchg
xchg
mov
stos
push
adc
dec
mov
push
mov
dec
lea
pop
mov
leave
bound
lods
repnz
nop
sbb
xor
out
mov
movsb
lea
sbb
push
dec
push
mov
add
loope
movsb
sbb
add
lods
jp
dec
sub
push
jns
jecxz
mov
ljmp
rorl
lcall
add
clc
icebp
lods
add
xchg
push
cmp
cmpsb
mov
sarb
loopne
mov
hlt
aaa
outsl
mov
sti
jnp
insl
mov
dec
sub
jo
fisttpl
jae
lea
push
mov
cmp
in
sbb
and
pop
popa
jp
mov
int3
mov
mov
mov
fmulp
mov
xchg
pop
inc
fcmove
dec
sbb
fcomi
push
push
jle
scas
fucomip
mov
or
mov
pop
sti
pop
adc
jno
jae
data16
add
enter
daa
aam
nop
or
repz
adc
test
in
sub
jnp
test
in
aad
cmp
fstl
pop
addr16
insl
push
int
imull
inc
movsl
fistl
push
push
xchg
inc
repz
jecxz
lods
rcrb
or
xor
and
jecxz
call
sub
mov
push
pop
jp
movb
sbb
adc
or
mov
mov
add
xlat
pushl
sub
or
outsb
cld
pop
cli
arpl
jo
push
or
pop
das
mov
sbb
xor
cli
xchg
mov
movsl
mov
pushf
std
stos
loopnew
mov
add
rorb
aaa
imul
pop
test
mov
sbbl
rcll
push
mov
dec
mov
mov
sbb
push
cmp
xchg
push
in
je
xchg
decb
sub
jns
jns
cmp
gs
addl
sti
xchg
mov
xchg
xchg
adc
or
in
dec
int
mov
and
fists
fiadds
jae
repnz
dec
inc
push
gs
mov
or
loope
js
mov
xchg
cmp
fwait
lret
jmp
test
in
fsubr
adc
push
inc
subl
pop
cwtl
fmull
mov
leave
add
js
out
loopne
daa
add
xlat
jg
dec
sub
ja
arpl
movsl
xor
mov
pop
test
jbe
mov
or
push
pop
push
pop
add
xchg
sub
sub
xchg
int
bound
push
mov
add
into
div
ds
adc
cmp
xor
lret
mov
bswap
cwtl
imul
xor
xor
sahf
lods
mov
sub
fs
xchg
hlt
dec
push
add
movsb
out
lret
mov
or
sarb
xor
popa
addr16
test
lret
jl
lahf
mov
rcll
xchg
pop
mov
lods
cmpsb
inc
lods
cmp
loope
popf
push
mov
push
popf
and
add
dec
rorb
cmpsb
fstl
dec
out
pusha
mov
adc
xor
popa
mov
xor
xor
jge
test
pop
inc
pop
mov
lahf
dec
dec
cmpsl
add
sub
push
fistps
jp
mov
adcl
nop
imul
lods
cmp
push
ds
rcl
mov
mov
adc
push
in
aaa
jle
pop
clc
js
jg
xchg
adc
or
cmpsb
sbb
push
lea
mov
push
adc
push
inc
add
dec
sub
jl
pop
sarl
push
adc
xchg
bound
sub
sarl
in
or
scas
push
or
roll
dec
jecxz
jae
pusha
push
imul
cwtl
push
fimuls
and
dec
aad
fstpl
adc
and
stos
iret
or
stc
adc
push
pop
lcall
lea
fwait
dec
nop
xlat
idivl
subl
fsubr
inc
pop
fsubrl
jns
aad
sub
xchg
sbb
mov
rcl
jno
mov
push
pop
jo
cmp
jne
xchg
mov
int
dec
add
jnp
lahf
fistpl
bound
jmp
scas
and
jl
or
cli
jns
push
repz
imul
aam
adc
pop
into
and
jp
pop
cmc
add
lret
sbb
adc
xchg
sahf
jecxz
lea
frstor
loop
cmp
ljmp
movsl
and
mov
add
sub
fisttpll
ret
mov
and
lret
fisubl
daa
negb
push
nop
inc
sub
push
inc
mov
std
xchg
jno
es
cli
mov
clc
je
pop
xchg
ljmp
daa
xor
mov
lret
gs
addr16
ds
xor
cmp
jmp
and
out
scas
add
test
fsubs
lods
aaa
fsts
movl
pop
fcoms
and
call
add
or
mov
cmp
xchg
xor
mov
loop
sbbl
pop
mov
inc
fisubl
xor
lret
cli
pop
mov
or
outsb
adc
mov
mov
push
in
shll
sbb
int3
mov
lods
inc
jne
lcall
enter
and
shrb
xchg
in
xchg
and
lea
jno
jb
arpl
aad
out
jecxz
adc
sbb
addr16
std
dec
stc
stos
push
sbb
sub
jle
shrl
cmpsb
mov
adc
sbb
sbb
movb
out
adc
iret
stc
pop
push
mov
jo
pop
repnz
mov
ret
aas
pop
jns
and
ret
adc
mov
adc
repz
loopne
xchg
inc
cld
movsb
adc
xchg
jns
test
lock
mov
push
pop
sub
and
push
pop
shll
ficomps
and
call
cwtl
mov
aaa
xchg
mov
js
popa
clc
xor
sub
mov
xchg
push
or
push
mov
pmullw
jnp
popa
sub
adcb
leave
sbb
inc
xchg
cmpb
jno
jne
mov
test
xchg
mov
mov
sbb
jne
out
sub
xchg
adc
mov
and
sbb
iret
insl
cmp
idivl
mov
push
mov
add
cmp
inc
sbb
push
iret
mov
sbbb
mov
cmp
cmc
insl
inc
sbb
sub
scas
shll
sahf
dec
xor
sub
dec
mov
iret
rcrl
lods
pop
add
std
leave
sub
adc
out
das
mov
jecxz
push
inc
jle
out
add
mov
bound
test
clc
xor
popf
fwait
imull
stos
jle
sbb
adc
pop
test
and
adc
adc
xchg
adc
mov
sub
mov
pop
test
inc
fs
xor
rorb
and
das
fdivrs
cli
xchg
add
test
shll
icebp
jp
lret
gs
out
adc
gs
dec
les
std
push
sahf
in
add
xchg
mov
jbe
fistpl
stos
or
int3
jnp
fs
std
xlat
push
int3
sub
outsb
or
or
jecxz
rorb
pop
popf
cmp
mov
push
mov
stc
push
addr16
ret
mov
mov
adc
insb
cmp
cmp
fcmovu
ret
mov
hlt
and
sbb
xor
cmp
hlt
mov
jle
mov
or
sbb
and
aam
fbld
xor
pop
repnz
ret
mov
xchg
xchg
lcall
mov
sub
fiaddl
sub
sub
cmpsl
and
aam
pop
inc
addb
imul
mov
pop
hlt
push
decb
jnp
cli
mov
inc
push
cmpsb
mov
fildl
add
loop
movsb
aam
xor
loop
jmp
xor
out
scas
sub
lcall
iret
es
push
mov
leave
lea
lcall
push
push
stos
dec
inc
lret
xchg
cwtl
cmc
jno
stc
pop
es
mov
jge
xor
mov
mov
iret
mov
add
fcompl
xchg
inc
out
jae
xchg
mov
pushf
xchg
jns
aam
xor
in
or
sub
cmp
fcoms
cmpsb
mov
cltd
mov
adcl
push
add
push
imul
fwait
ret
jno
inc
out
repz
jb
mov
sub
or
dec
iret
int
push
gs
adc
test
fisubs
es
roll
and
or
pushf
fsubs
adc
int3
xor
sysret
lcall
sbb
add
push
outsl
aam
out
rorb
or
fisubs
sbb
lar
repnz
cmp
or
scas
aas
out
adc
pop
test
iret
cld
test
lret
inc
push
scas
sub
mov
mov
ljmp
cmp
and
mov
push
lret
cmp
imul
cltd
jle
push
mov
or
js
or
cltd
cmp
ss
cmc
mov
js
sbb
popf
fsts
stos
out
cltd
pop
jg
dec
xlat
out
in
cmp
pop
subps
pop
mov
xor
scas
repz
repz
repz
cmp
adc
jno
fisttps
sbb
push
pop
ja
mov
cli
aaa
fisttps
xlat
and
fs
mov
jl
lret
mov
in
dec
fwait
mov
call
jl
stc
cmp
cmp
mov
or
adc
inc
bound
test
out
lret
dec
test
test
xchg
xchg
lret
xor
movsb
mov
jl
shrl
adc
sub
test
and
lock
aaa
cmp
push
add
jb
xor
push
sbb
and
lods
mov
cmp
test
aam
add
iret
jb
enter
jp
movsl
mov
add
cltd
pop
sbb
mov
lods
aam
lcall
sbb
xor
and
fucomi
dec
arpl
jb
mov
adc
inc
xor
out
lret
dec
sub
push
out
xchg
das
loop
popa
loopne
mov
inc
inc
cmpsl
pop
mov
and
add
xchg
jge
add
ret
push
test
leave
mov
or
or
jge
js
dec
arpl
cmp
nop
xchg
push
leave
push
repz
jmp
jns
sbb
xlat
xor
mov
dec
inc
mov
dec
or
sub
aaa
js
daa
pop
or
in
icebp
imul
and
lea
mov
repnz
jbe
cmp
xchg
jb
fistpll
mov
fcmovnu
test
cs
dec
push
inc
xor
fldl
insl
sub
test
pop
or
insl
cmc
jl
mov
nop
xchg
jno
repnz
xor
out
jno
sub
jmp
xchg
faddl
push
in
lock
jle
adc
lret
lods
pop
cmpl
mov
aam
add
stos
adc
push
fistl
xor
push
pop
addb
int
fcoml
sub
repz
xor
lods
adc
dec
mov
cmpsb
testb
adc
sbb
xchg
cs
mov
mov
lcall
dec
js
inc
mov
and
jecxz
sub
inc
rcll
subl
or
lds
mov
push
add
ljmp
push
dec
mov
xchg
ret
mov
pop
jbe
or
ficoms
sub
mov
data16
fsubrl
jge
mov
cmp
jno
push
mov
push
mov
fistpl
jmp
add
or
sub
pop
imul
xchg
sbb
jb
cmc
xlat
data16
movsl
adc
jmp
divb
sbb
rolb
sbb
cmp
icebp
xchg
cmpsl
mov
xchg
lock
stos
stos
fisttps
sub
ja
test
inc
mov
mov
push
or
lock
icebp
lods
call
aaa
mov
fidivrl
sub
sarb
outsb
mov
icebp
sub
les
inc
pushf
sub
aas
adc
imul
ss
aam
mov
cli
inc
lods
enter
popf
fistpl
cmc
mov
jb
sbb
std
cmp
hlt
dec
push
outsb
pop
xlat
js
out
sub
push
mov
dec
xchg
fistpll
jl
flds
pop
jnp
test
sub
lret
rcr
sbb
inc
jae
std
push
mov
fimuls
mov
shlb
ret
cld
mov
mov
or
push
mov
jns
int3
popa
cmp
fcoms
and
cld
lret
aad
adc
clc
imul
data16
dec
inc
cmpsl
jmp
add
jo
test
lcall
and
mov
ret
test
jnp
neg
addps
pop
xchg
lahf
dec
cmc
out
mov
fcmovbe
jg
xor
mov
push
fwait
sbb
movsl
dec
mov
pop
pop
pop
in
lahf
insb
xchg
dec
cmc
dec
jp
adc
jl
adc
rep
bound
cltd
push
xchg
js
stc
push
imul
pop
sbbb
mov
pop
faddl
xchg
cmc
mov
pop
sub
adc
add
inc
adc
adc
push
mov
sahf
imul
data16
push
divl
add
test
sbb
jno
lock
mov
mov
lar
xchg
lret
mov
cld
test
inc
dec
pop
push
jnp
repz
adc
fs
movsb
xor
cmp
ljmp
jne
add
ljmp
fstps
mov
in
or
and
call
lods
cmpsl
xor
jp
push
mov
adc
cmp
mov
mov
repz
adc
adc
out
adc
jnp
adc
sub
int
mov
sbb
inc
js
or
pop
sbb
jae
popf
cmp
xor
jne
mov
mov
mov
adc
dec
mov
pushl
xchg
icebp
mov
cmp
cmp
cld
and
xchg
shrb
stos
or
stos
xchg
je
mov
cmp
test
insl
pop
test
arpl
fldl
cmp
stc
hlt
and
out
scas
cld
stc
daa
push
movsb
dec
jg
cltd
or
dec
and
dec
aaa
fstpl
scas
subl
jl
dec
sbb
dec
clc
lock
xor
inc
jl
lahf
popf
push
jo
icebp
add
mov
mov
ds
je
mov
in
loope
xor
xor
add
lahf
outsl
xor
cmp
mov
incl
scas
mov
sahf
push
bound
decl
popa
out
test
ljmp
jbe
scas
push
mov
mov
aaa
xchg
insb
cmp
xchg
je
or
and
std
xchg
mov
adc
fsubs
sub
or
add
aad
int
pop
sbb
stos
das
pop
inc
jbe
push
rolb
cltd
mov
in
dec
sub
xchg
pusha
or
sti
lahf
and
xchg
test
clc
jg
subb
leave
jle
mov
cs
leave
push
aad
jb
repz
xchg
aas
mov
push
test
xchg
leave
pusha
add
sub
mov
jbe
movsb
out
testl
dec
mov
mov
ret
cld
xor
fbstp
insl
into
mov
sbb
cmp
mov
push
push
xchg
std
stos
pushf
xchg
int3
cmp
push
push
cmovle
and
adc
stos
adc
iret
mov
stos
ror
push
mov
pop
lds
popf
lahf
out
out
lcall
insb
jne
aaa
dec
jns
push
repz
jne
mov
or
cltd
inc
and
loop
pop
add
fcompl
cmp
das
xorb
aaa
xchg
inc
mov
and
pop
rorl
sbb
inc
xor
orl
out
js
mov
jg
fisubrl
clc
push
adc
ret
add
ja
ja
dec
hlt
rcrb
bound
cwtl
in
shl
push
pop
ret
inc
push
adc
bsf
popf
decb
push
inc
dec
rolb
sub
mov
jge
add
les
push
xchg
and
xchg
sbb
icebp
fcomps
dec
jmp
cld
lret
push
inc
sar
sub
dec
cmp
mov
dec
mov
add
ljmp
jp
je
out
cmc
repz
fdivs
adc
arpl
lret
xchg
jmp
xchg
cmp
xchg
aad
ficoms
mov
insb
mov
pop
jle
mov
push
inc
leave
push
loopne
push
dec
jb,pt
out
mov
cwtl
inc
subl
out
scas
in
dec
arpl
int3
and
filds
mov
or
rcrl
mov
push
inc
and
scas
fistps
stos
lods
push
inc
sub
jmp
push
fisubrs
cmpsb
cmpsb
das
rcr
enter
insb
xor
lcall
xor
mov
cmp
fisubs
cmp
popf
lahf
fidivs
adc
pop
sbb
fcom
into
lods
pop
push
pushf
xchg
test
les
out
mov
lret
es
pop
pop
cmp
and
shlb
call
cmpb
pop
icebp
push
add
aam
add
cwtl
rorb
sbbb
push
sbb
sub
xchg
ss
xlat
xchg
pop
sbb
push
inc
adc
jbe
push
adcl
movsl
aam
sti
iret
push
pop
lds
rcr
push
push
cmpb
jp
dec
jns
mov
pop
push
pop
jne
xor
mov
mov
sidtl
stc
adc
or
fs
scas
in
add
dec
dec
cmp
mov
sub
push
push
in
and
shl
or
cltd
aas
repnz
test
loope
loopne
leave
pop
mov
push
sbb
pop
sbb
fnstenv
cmp
xor
std
aas
int3
lock
dec
jb
xor
insl
repnz
loope
scas
in
sbb
ss
xor
out
jge
rcrl
and
xor
push
stc
push
adc
enter
cmp
mov
sbb
lds
stc
das
inc
add
jp
mov
int
mov
jg
ljmp
or
scas
push
inc
stc
dec
mov
inc
loopne
xlat
repnz
mov
jle
inc
sbb
mov
sbb
insb
cltd
cmp
popa
dec
xor
stc
cli
outsb
sti
mov
je
adc
lcall
hlt
add
jg
xor
mov
jge
sub
pop
rcr
mov
or
adc
cmc
sub
outsl
movl
lock
mov
pop
mov
mov
stos
stc
mov
mov
mov
and
mov
lcall
push
lock
mov
dec
add
les
pop
xchg
sarb
cld
cmp
add
push
je
push
mov
inc
out
insl
lock
pushf
mov
cmp
mov
popf
or
out
sub
fxam
lret
call
or
push
mov
jle
push
and
aam
test
gs
mov
ret
mov
jl
in
movsl
mov
daa
in
out
push
jp
or
movsl
fistpl
push
fstl
sbb
iret
aaa
std
jl
popa
cmp
inc
mov
rcr
jl
xor
sbb
fstpl
leave
inc
mov
mov
xchg
jle
pop
aad
gs
or
inc
xchg
mov
mov
xorl
shl
cmpsb
pop
stc
xchg
loop
lcall
push
mov
bnd
or
pop
loop
push
xor
mov
add
adc
divl
jle
sbb
fadd
pop
clc
cli
outsb
dec
out
gs
xchg
test
xor
scas
scas
into
push
enter
dec
repnz
push
dec
call
fisttpll
movsb
xchg
push
ja
mov
fs
or
sub
jp
nop
fistps
and
cmp
movsb
fiadds
jl
popf
inc
jno
js
pmaddwd
loope
in
sahf
cwtl
mov
cmp
xor
and
mov
out
lcall
add
dec
mov
frndint
xchg
xchg
rclb
xor
mov
jl
bound
dec
xchg
sub
push
cmpsb
xchg
mov
mov
pop
ds
enter
mov
notb
mov
adc
sbb
jb,pn
negl
inc
cwtl
mov
pop
sbb
mov
inc
aam
pop
pop
xchg
sti
test
inc
sbb
aaa
pop
pop
inc
fimull
sahf
cwtl
mov
out
sub
adc
cmp
sub
loop
test
push
push
mov
sbb
xchg
and
xchg
lods
loope
in
push
adc
push
mov
adc
mov
insb
inc
and
lods
stos
loope
sbb
mov
xorl
cmp
push
lcall
mov
or
or
pop
xchg
popl
sbb
sbb
lret
sbb
adc
testb
cs
xchg
dec
push
je
inc
inc
je
xchg
idivl
jg
scas
fdivrs
sbb
push
pop
and
cmc
push
xchg
lods
adc
pop
test
and
add
test
ficoml
dec
mov
mov
stos
xor
loop
or
aas
lret
push
lock
mov
mov
and
sti
mov
emms
push
mov
xor
cmpsl
daa
lret
push
or
out
dec
or
xor
adc
call
jbe
sti
add
adc
outsl
call
and
or
mov
bound
stc
push
cmp
xor
shld
cli
test
jg
arpl
out
out
pop
testb
adc
dec
inc
pushf
movsb
test
repz
fs
inc
in
loop
mov
stos
ja
data16
push
rolb
mov
imul
xor
sub
xor
mov
in
mov
xlat
ljmp
je
cwtl
mov
fsincos
adc
ficompl
ret
fsubs
int3
inc
mov
adc
xor
inc
mov
dec
cli
add
filds
mov
xchg
jnp
in
xchg
nopl
pushf
pop
sub
ss
shr
pop
xlat
pop
lcall
pop
je
cmp
orl
sub
loopne
xchg
fs
jp,pt
lods
inc
js
mov
jmp
sub
inc
or
addr16
mov
mov
add
sub
dec
add
push
mov
push
inc
mov
sbb
inc
loop
test
adc
pushf
inc
inc
sti
dec
test
sbb
adc
jnp
jne
cmp
clc
xchg
cmp
and
mov
sub
jmp
test
hlt
inc
dec
into
pushf
cmc
mov
out
and
jae
movsb
inc
and
test
inc
shll
adc
popa
js
leave
adc
sti
jbe
loope
shlb
mov
inc
aad
inc
pop
stos
dec
jecxz
insl
mov
jae
cld
in
scas
mov
push
add
outsl
in
sbb
dec
mov
sbb
jge
inc
and
mov
and
mov
imul
cli
repnz
hlt
pusha
inc
jnp
loop
iret
iret
pushf
out
lahf
push
or
push
insl
fcomps
sahf
inc
ss
mov
daa
mov
sbb
shl
inc
mov
pop
sbb
nop
sub
pop
and
rcrl
ljmp
mov
fcoms
push
sbb
ficompl
aad
pushf
and
pop
clc
cltd
xor
sbb
cld
out
lods
mov
sub
jb
repnz
divl
icebp
arpl
add
jbe
and
pop
cmpsb
mov
ror
testl
enter
mov
lods
or
test
xor
dec
xchg
mov
lods
negl
mov
or
out
xchg
pop
mov
fwait
leave
add
adcl
lock
mov
dec
mov
jno
shlb
ffree
inc
add
in
repnz
fstpt
mov
mov
insl
push
mov
cli
cli
loop
addl
push
and
loopne
loopne
mov
scas
enter
lea
lcall
clc
inc
pop
popf
js,pt
sub
cmp
and
fstps
lock
jne
lds
shlb
mov
loopne
orl
xchg
push
adc
push
xchg
movsl
ss
mov
push
cmp
rcr
rorl
mov
push
inc
and
pop
test
daa
add
sbb
adc
inc
inc
pop
or
ret
mov
aad
push
xor
movsl
mov
push
and
sbb
test
sub
insl
cmc
sbb
xchg
aam
lret
clc
mov
cmpsl
adc
pop
mov
mov
mov
pop
mov
cmp
insb
lahf
loop
into
and
ret
cmpsl
jle
pop
loope
pop
inc
push
idivb
rcll
je
cwtl
jnp
or
jns
movsl
scas
dec
mov
stos
dec
nop
cmp
push
xchg
icebp
out
dec
lock
mov
lea
push
cmp
testb
sbbb
xor
cmc
sbb
lea
outsb
pop
rorl
je
icebp
xchg
aam
test
and
je
jno
cmpsb
bound
push
ljmp
mov
dec
mov
pushf
inc
nop
call
in
fsts
movb
xchg
add
mov
sbb
jbe
finit
mov
cmp
int3
shrl
repz
add
xchg
mov
or
das
addl
mov
pop
and
xor
mov
adc
testb
loope
pop
lods
in
bound
flds
mov
mov
jae
fcoml
mov
dec
shl
xchg
and
jle
js
imul
adc
cmp
popa
pop
jle
xor
xlat
inc
jp
push
into
xor
les
leave
sbb
bound
mov
movsl
cmp
mov
inc
in
sub
add
pop
outsl
or
in
sbb
test
pop
xchg
loope
jno
dec
or
xchg
adcl
push
sbb
inc
into
add
pop
mov
add
jge
aam
cld
iret
push
xchg
nop
push
xor
mov
fisubrl
mov
inc
mov
andb
adc
mov
cli
pop
fildl
xchg
adc
mov
dec
out
lock
pop
jb
dec
mov
cld
aas
fdivrl
xchg
pop
iret
sub
cmp
add
cmp
jecxz
fsubp
je
ret
shll
clc
or
xchg
pusha
rcl
fidivrl
mov
jl
xchg
inc
popa
push
push
fnstsw
mov
cli
ljmp
xchg
mov
push
das
jne
js
cmp
jmp
mulb
mov
nop
cmp
or
mov
mov
lds
or
mov
dec
addr16
mov
cld
arpl
dec
scas
push
fwait
xchg
inc
jecxz
dec
lahf
jmp
mov
lea
je
lret
movsl
clc
add
icebp
mov
adc
mov
mov
mov
les
mov
aas
sbb
ljmp
sub
sbb
cmp
ljmp
dec
aas
inc
rcl
ljmp
pop
jbe
stos
std
push
adc
mov
ja
in
in
xchg
stos
jle
cmp
cli
push
mov
dec
mov
add
push
pop
out
xor
push
pop
mov
addl
lahf
add
mov
pushf
mov
jne
addr16
and
xchg
and
xor
jbe
jecxz
push
push
stos
stc
sub
adc
sbb
xchg
inc
pusha
sahf
mov
pop
sbb
inc
les
test
mov
icebp
add
push
mov
pop
mov
in
shlb
mov
and
cmpsb
pop
std
jmp
mov
lcall
push
mov
pop
add
daa
std
je
xlat
and
xchg
cmc
pop
mov
pop
pop
cmp
addr16
sbb
clc
lea
icebp
or
dec
xor
push
faddp
popl
jae
or
xor
lahf
dec
mov
int3
in
and
mov
or
xchg
xor
mov
lret
inc
adc
add
idivb
or
cli
push
ret
cmp
sub
jb
stos
cmp
insl
mov
imul
fldz
adc
ja
das
std
fs
arpl
push
dec
test
scas
or
pusha
sbbl
xor
sub
jo
rcll
into
xchg
ret
dec
pop
jp
sub
or
xchg
lahf
jg
sub
lcall
mov
fnsave
mov
test
push
jb
addl
inc
cmp
inc
mov
mov
out
unpcklps
inc
push
inc
and
inc
shll
ret
fdivrs
ljmp
leave
aaa
mov
imul
sub
lahf
pop
fimull
ret
and
cmpsb
add
shll
and
push
leave
hlt
cs
lea
pop
aam
mov
repnz
pop
orb
cs
movsb
rcrl
loop
je
and
xchg
ss
mov
dec
mov
rep
lret
add
lods
je
jo
lcall
out
sub
cmc
dec
pop
jl
pop
dec
mov
jecxz
adc
pop
enter
dec
andb
sbb
push
repz
hlt
xchg
xchg
pop
pop
shll
xor
and
jg
mov
inc
pop
std
xchg
movsb
jae
mov
es
ss
hlt
push
adc
push
mov
mov
bound
enter
xor
push
rolb
and
adc
pop
test
cmp
mov
jmp
int
movsl
dec
clc
or
and
imul
sahf
xor
scas
jmp
add
or
pop
dec
dec
cld
mov
icebp
int3
jo
xor
add
addb
adc
dec
int
test
sbb
push
and
xchg
push
xchg
nop
dec
mov
in
cmp
cmp
clc
mov
mov
and
out
mov
lahf
mov
xchg
insb
xor
adc
leave
sub
clc
test
dec
cmp
push
pusha
int3
sub
fistpl
mov
push
inc
adc
rol
push
jmp
fisubl
sbb
fstpt
xor
mov
sub
les
inc
xchg
insl
xchg
mov
cs
add
in
int
cmp
adc
cmp
adc
xchg
pop
insb
jo
call
pusha
std
pushf
aas
out
push
inc
shlb
add
fisubrl
call
adc
xchg
sub
clc
push
sub
fsubl
xchg
xchg
sub
aaa
push
icebp
flds
sub
test
sbb
and
shll
sbb
pushf
in
push
push
jbe
mov
pusha
test
push
ret
lcall
imul
push
in
imul
aas
pop
sti
addl
mov
add
cmp
loopne
je
mov
insl
mov
pop
mov
sbb
shrb
sbb
add
xor
mov
inc
jmp
and
fdivrl
test
xchg
movq
xor
cmp
xorb
daa
out
movsl
fistps
inc
or
js
data16
movsl
cmpsb
cs
and
gs
cmp
pop
das
sbb
mov
push
pop
inc
ret
jns
fdiv
incl
mov
outsb
ja
sbb
mov
hlt
in
push
fstpl
in
pop
pop
ficompl
pushf
fildl
mov
stc
out
push
and
pop
sarb
arpl
jae
inc
jo
fwait
cmp
leave
mov
xor
repnz
jecxz
sub
sub
fwait
xchg
arpl
out
dec
dec
dec
add
fdivl
dec
jne
mov
mov
adc
arpl
int3
sbb
ja
test
ja
jp
dec
push
pop
loopne
xchg
push
subl
cmp
or
sbb
out
push
test
rcrl
pop
popa
jae
push
lret
pop
push
sbb
test
xor
mov
jns
lds
mov
and
inc
in
icebp
adc
mov
pop
dec
cmp
shrb
test
pop
push
mov
add
jecxz
ret
or
sub
cmp
jge
xlat
adc
inc
push
nop
adc
imul
mov
push
xor
mov
cmpsb
mov
movsb
cmp
test
cmp
mov
pop
sub
dec
mov
sbbl
mov
shlb
cwtl
mov
into
push
sbb
mov
inc
repnz
cmp
movsl
loope
or
inc
sbb
ds
das
mov
addr16
cli
xor
shll
repnz
popf
mov
mov
pusha
xchg
adc
lds
in
daa
inc
add
jae
cmpsb
push
fidivs
and
testl
cmpl
test
leave
adc
insl
sbb
pusha
js
xor
mov
push
jp
pop
sahf
xchg
rolb
outsl
jle
stc
sbb
enter
jne
xor
inc
into
dec
or
add
loope
jmp
adc
idivl
xchg
lret
hlt
cmc
xchg
dec
nop
mov
out
test
int
pop
in
cmp
imul
mov
push
mov
pop
push
addb
repz
pop
xchg
xchg
sbb
ret
jbe
sbb
xchg
jnp
mov
mov
stc
or
scas
mov
xchg
and
daa
hlt
cli
shlb
adc
cmpsl
xchg
enter
pop
or
outsl
ss
sub
xor
xchg
insb
dec
xlat
and
out
outsl
push
push
test
add
inc
pop
mov
outsb
movsb
repz
cmp
push
and
stos
nop
ss
mov
mov
sbb
subl
inc
cmp
xchg
sbb
or
test
jns
into
lea
outsb
mov
xchg
loopne
pop
sti
adc
or
iret
xchg
inc
inc
dec
xor
mov
je
test
test
mov
add
mov
sahf
fwait
es
mov
mov
fcomps
jp
andb
add
and
repnz
push
rorl
pop
inc
fsubl
mov
lods
test
dec
adc
aam
loope
push
add
push
movsb
aad
shrl
add
popf
cmp
xor
std
mov
pop
shrl
lock
and
add
inc
or
loopne,pt
fiadds
scas
fiadds
imul
movsl
lahf
insl
pusha
xlat
test
in
outsl
mov
loopne
imulb
movsl
je
rsqrtps
xor
fidivs
pop
push
pop
dec
fmull
mov
imul
mov
add
jo
dec
pop
rcrb
or
cs
jl
arpl
inc
xchg
mov
testl
dec
adc
jp
sti
shrb
std
jnp
mov
xor
or
jl
inc
sahf
and
cs
lretw
jae
xor
sahf
mov
out
pushf
sub
movsl
inc
test
and
adc
xchg
dec
insl
out
fisttpll
pusha
xor
mov
mov
jmp
push
mov
imul
mov
xlat
clts
add
insl
fs
scas
mov
scas
and
popf
add
lahf
mov
inc
cld
mov
xor
outsb
mov
mov
es
jne
or
das
pop
int
mov
aad
mov
and
sub
push
insl
fs
cmp
xor
and
adc
outsl
lods
xor
rorl
ja
add
xchg
push
adcl
inc
insl
cmp
icebp
cmp
bound
mov
bound
or
dec
subl
add
mov
mov
jp
mov
or
int3
jb
and
jmp
sarl
sti
fsubr
push
mov
xor
lret
popf
mov
or
in
or
sbb
jo
loope
in
adc
bound
je
inc
out
lods
xor
xchg
inc
insl
inc
insb
and
adc
imul
adcl
ja
ljmp
lods
or
test
sti
sahf
or
and
leave
cmc
jo
imul
or
jns
pop
push
sub
dec
cmp
fidivl
sub
sti
cmp
gs
jne
in
xor
scas
nop
jg
in
push
mov
jg
cmp
pushf
fcoml
lods
sbb
pop
mov
push
imul
loopne
pop
or
pop
and
outsl
lret
pop
xor
or
mov
imul
xchg
jae
clc
and
add
dec
aas
xchg
int3
and
ljmp
dec
jnp
jl
inc
xchg
std
pop
mov
mov
xrelease
ret
aaa
pop
adc
push
outsb
fs
xchg
jo
loopne
cmp
add
inc
mov
sti
outsl
loopne
dec
insl
dec
xchg
mov
pop
mov
push
loop
sbb
fidivrs
sbb
pavgb
into
dec
mov
jl
arpl
mov
call
mov
popa
inc
push
fwait
mov
mov
adc
stos
adc
and
pop
mov
movsl
mov
sbb
fs
mov
das
sahf
adc
imul
add
push
popw
loope
pop
cs
enter
shl
rcl
loop
loopne
lds
cmpsl
cmp
cmp
repnz
inc
add
xor
sub
lahf
mull
ret
ljmp
insb
aam
jl
inc
stc
inc
das
rol
sahf
adc
cmp
jb
enter
xchg
inc
bound
pop
sti
add
cmp
mov
push
add
std
mov
fcmovne
movsl
cltd
sub
mov
xchg
icebp
dec
movsl
orl
fildl
rolb
lock
dec
mov
mov
xchg
jbe
out
fcmovne
bound
lcall
cli
and
dec
movsl
fimull
bswap
ss
repnz
popa
insl
int3
movsl
add
cmp
pop
xor
cmp
subl
cmp
stos
daa
rcl
dec
cmp
and
movsl
movsl
icebp
mov
jns
push
xchg
cmp
or
ja
mov
lret
mov
insb
sahf
lds
cmpsl
daa
fisttps
pop
push
inc
fs
ljmp
out
sub
pop
je
lahf
stc
fcoml
cmp
aad
pop
pop
push
loopne
and
pop
daa
clc
xchg
lea
ret
push
sbb
bound
inc
mov
cli
les
pop
cmpsb
iret
je
mov
icebp
cmp
lret
decb
movsl
add
bound
cld
movsl
arpl
mov
sub
sub
or
mull
mov
stos
and
xchg
imul
cmp
or
shr
push
xor
iret
and
mov
stc
data16
shlb
push
mov
push
inc
xchg
icebp
negl
jmp
dec
jge
aaa
push
bound
shll
push
cmp
mov
fildl
add
test
shrb
mov
clc
mov
lods
sub
jo
mov
scas
add
fwait
test
and
xor
cmc
bnd
jb
pop
pop
mov
int3
rcrb
cmp
mov
les
jg
sub
mov
mov
adc
jp
add
in
jmp
adc
in
cmpl
lock
pop
dec
adc
push
push
dec
pop
add
bndstx
mov
push
sub
adc
pop
enter
jg
aad
out
sub
out
cli
in
mov
int3
mov
into
sbb
bnd
xchg
lods
nop
stos
pop
pop
into
test
push
movsl
movsl
gs
data16
push
inc
cltd
daa
dec
xor
addl
call
bound
cmpsb
xchg
rclb
sbb
mov
mov
xlat
fsubs
mov
outsl
adc
andl
or
jp
sbb
mov
jl
add
sahf
int3
divl
es
shll
pop
pop
lahf
inc
fdiv
and
stos
into
xor
adc
cs
dec
add
push
jo
mov
xor
sahf
xchg
sarl
or
xchg
lock
imul
fsts
addb
fimull
js
push
pusha
cmp
lods
test
or
stos
sbb
push
aad
inc
push
pop
stos
dec
add
jno
gs
push
and
test
fsubrp
push
cmc
xchg
out
inc
jmp
mov
mov
mov
or
dec
pop
ja
inc
xor
fdiv
inc
fs
and
pop
dec
lea
mov
icebp
jae
xchg
je
ds
out
push
sub
jbe
adc
inc
mov
or
ficoml
sub
jnp
xor
shrb
dec
shrl
gs
sub
imul
lods
cs
imull
inc
xchg
aam
push
pop
sbb
dec
clc
aas
xchg
sub
cmp
ljmp
jge
or
and
pop
das
cmc
mov
jbe
cmp
cmp
mov
add
stos
xchg
dec
or
mov
sub
push
inc
or
or
lret
sbb
jge
sti
or
mov
jg
cmp
adc
inc
iret
in
shrb
cmp
arpl
jne
mov
mov
addr16
dec
pusha
int
lret
jl
add
inc
pop
testb
jge
repz
cmp
mov
std
jg
loop
ret
xchg
pop
pop
push
mov
iret
enter
std
xchg
rorl
shll
ficoms
test
test
xchg
out
cmc
add
pop
pop
in
test
sti
lods
incb
xchg
push
orl
inc
stos
insl
loope
sub
mov
test
mov
test
out
loopne
jbe
mov
mov
jecxz
enter
cmp
xchg
loope
and
sahf
mov
push
or
insb
nop
loopne
clc
stc
push
pushl
inc
or
insl
leave
push
lds
call
sbb
inc
mov
popf
inc
xchg
lcall
mov
rcrb
pop
mov
jl
stos
outsb
pop
shrb
jecxz
mov
dec
loopne
jno
movsb
mov
cld
aaa
jno
aam
xor
fiadds
push
mov
pop
dec
in
or
mov
cmpsb
test
mov
jbe
sbb
ds
andb
mov
jmp
addr16
jmp
mov
push
notb
mov
mov
lods
pop
mov
mov
loopne
mov
mov
push
in
shlb
jne
bound
test
idivl
or
sub
push
inc
idivb
inc
sub
movsl
xchg
and
inc
mov
adc
push
in
push
movsl
or
mov
fcmove
out
sub
shrb
sub
mov
mov
dec
ds
push
leave
repz
sub
cld
push
mov
popa
insb
mov
sbb
lock
xor
xor
addr16
insb
inc
aaa
or
jbe
addr16
push
push
jge
xor
mov
sub
sbb
jno
repnz
enter
xchg
xor
fdivr
adc
or
mov
data16
sbb
mov
jg
and
mov
lret
in
iret
mov
fs
dec
add
and
lds
mov
dec
fidivs
in
call
fstp
test
mov
add
xchg
inc
movsl
cmp
ljmp
imul
out
jo
mov
sbb
cld
xchg
ret
jb
inc
dec
outsb
in
js
cmp
popa
js
std
mov
cmp
ss
fimull
sbb
inc
daa
icebp
adc
pop
mov
add
inc
stos
lret
pop
mov
arpl
xlat
xchg
push
clc
adc
into
ljmp
mov
cwtl
sarl
jl
shr
jg
andl
je
dec
roll
lea
jmp
mov
sbb
lcall
rcll
dec
sbb
test
adc
pop
jo
or
mov
mov
cmova
xlat
adc
inc
xor
cmp
sub
dec
adc
sahf
add
adc
adc
fiaddl
jl
adc
loopne
insl
cli
lea
pop
sbb
jbe
mov
mov
add
data16
ror
xchg
movsb
lret
arpl
bound
out
inc
cmpsb
lahf
stc
cli
lods
lods
jle
incl
mov
dec
sub
stos
into
outsl
sbb
stos
aaa
mov
scas
pop
dec
mov
add
out
xchg
inc
inc
sbb
dec
fiadds
cmpsl
das
mov
ret
faddl
dec
fsubrp
push
imul
mov
or
lods
push
in
outsl
inc
je
test
je
mov
pop
aas
ss
xor
or
cld
jl
mov
jp
mov
icebp
xchg
jl
mov
rcrb
ret
xchg
test
cmp
xor
mov
popf
aas
dec
and
cmp
decl
mov
jns
cmp
imul
xchg
clc
or
jp
adc
jae
xchg
cmp
push
dec
outsb
sub
sbb
addr16
shrl
pop
fistl
xchg
jno
popa
mov
daa
mov
ss
notb
aad
ds
mov
sbb
dec
cltd
data16
stos
or
xor
xor
inc
test
fs
mov
dec
mov
mov
rsqrtps
jne
cmpsb
cld
dec
aam
mov
xor
lock
xor
pop
xchg
jg
jns
mov
addps
arpl
pop
xchg
scas
fadds
add
pusha
popf
adc
or
les
inc
call
mov
js
test
fistl
push
adc
fnstenv
mov
inc
sbb
or
inc
push
jno
xchg
jnp
test
or
cmp
sti
repz
or
gs
lods
adc
jp
cmpsb
jbe
je
adc
add
jae
push
and
and
xchg
pop
call
mov
mov
jmp
xlat
imul
mov
mov
lods
push
cmpsb
addr16
testb
out
pop
dec
je
mov
into
cmp
jecxz
mov
frstor
add
add
xchg
xchg
test
repnz
jmp
pusha
push
adc
mov
pop
stc
pop
cmpb
add
push
pop
fiadds
fs
cmp
arpl
loopne
or
mov
jb
push
add
push
inc
xorl
into
decb
push
in
js
inc
mov
in
pop
jle
jge
icebp
adc
mov
insl
sti
cltd
cld
fistps
mov
std
xchg
cmp
into
jp
iret
scas
stos
and
fnsave
add
in
iret
ds
scas
js
xchg
std
or
pop
aad
fcmove
push
jmp
gs
pop
adc
adc
dec
aam
movsl
jae
ss
mov
call
std
fldcw
testb
dec
mov
mov
in
sbb
mov
lret
jo
into
adc
cmp
xor
mov
mov
and
jnp
repz
mov
sub
andl
mov
repnz
roll
push
adc
push
and
decb
rcll
or
sub
mov
adc
cmpsl
pop
push
push
add
xchg
adc
pop
mov
imul
mov
inc
pop
out
sub
dec
arpl
lds
push
inc
js
insl
or
jnp
clc
push
fidivl
inc
mov
in
roll
cmp
test
cmp
mov
add
mov
sub
rclb
xchg
imul
inc
xchg
cwtl
ret
dec
jns
jnp
sub
sbb
push
inc
insl
jb
mov
je
test
xorb
sbb
ret
cmp
or
cmp
add
inc
xlat
loopne
inc
adc
adc
xchg
or
sub
xor
rcll
mov
xor
std
mov
shll
mov
jae
or
aaa
test
dec
inc
mov
cld
lahf
xchg
sub
sbb
pop
and
push
rsqrtps
out
je
inc
cmpsl
mov
add
mov
sub
cmpsb
lahf
pop
addr16
jns
sbb
mov
iret
aas
movsb
cmp
xor
mov
aaa
push
insl
in
xor
scas
sahf
dec
cmp
ljmp
psubsb
xor
inc
insb
or
mov
xchg
xchg
or
int3
vorps
mov
stos
mov
pop
clc
outsl
sbb
in
out
xor
sub
and
jl
dec
mov
push
cli
stos
shr
test
pop
mov
xchg
push
push
test
mov
add
fisubrl
jecxz
add
mov
shl
add
out
mov
and
daa
adc
dec
fsubs
stos
clc
icebp
dec
and
rcrb
aad
call
mov
and
sub
stc
rorb
les
mov
push
lods
add
outsb
stc
inc
pop
mov
mov
cmp
scas
dec
aaa
dec
popa
ror
test
dec
popf
aas
xchg
ret
cmp
pop
adc
popa
jns
mov
push
mov
lahf
lahf
and
cli
mov
pop
pop
hlt
call
xchg
sbb
cld
dec
cmp
adc
inc
xor
or
int
inc
pop
xchg
test
lcall
in
push
fwait
push
xor
ret
mov
mov
flds
adc
ret
lcall
loop
push
dec
divb
mov
mov
out
je
jle
jecxz
dec
xor
js
dec
pop
subl
in
sbb
popa
inc
jns
hlt
bound
lcall
mov
jp
fiadds
sbb
pop
adc
push
and
mov
bound
or
and
addb
xchg
fwait
jo
jg
push
in
test
rcl
dec
out
push
jnp
mov
enter
divb
dec
addr16
enter
lods
dec
adc
jge
xchg
aam
in
pop
sahf
stos
mov
imul
add
xor
xchg
insb
mov
mov
push
cs
sbb
std
repz
call
dec
hlt
scas
push
in
adc
add
hlt
leave
jno
push
inc
enter
loop
std
jnp
nop
js
dec
sbb
add
add
std
sub
jl
imul
add
sbb
mov
push
arpl
adc
addl
fs
loop
push
mov
sbbb
sub
jae
cld
jbe
pop
out
pop
xchg
sub
pop
and
mov
ret
add
ficoml
pop
out
push
divl
cli
clc
mov
loopne
jmp
fisubs
dec
mov
or
subl
ficomps
pop
mov
mov
rcrb
and
lea
mov
inc
adc
sub
cmpb
cmpsb
test
mov
fdivl
je
addb
inc
jo
mov
jne
loopne
push
or
test
dec
xchg
mov
out
and
and
mov
add
mov
out
fadds
insl
mov
jb
movsl
in
dec
or
sub
movsb
fwait
dec
adc
fidivs
dec
js
mov
jp
jns
jp
and
xchg
inc
out
dec
jp
add
or
sbb
dec
fcmovnbe
cmp
sub
push
xor
xor
negl
in
pop
out
shlb
fdivs
ljmp
or
push
je
jns
sub
sbb
mov
and
pushf
mov
mov
testb
addr16
in
int3
push
pop
jno
je
mov
mov
out
popf
jno
cmpsb
out
test
jne
and
mov
push
sub
pop
push
std
dec
xor
popa
or
pop
lahf
add
shlb
popa
lcall
es
pop
adc
test
test
sahf
sbb
inc
outsb
int
add
pop
jbe
inc
int3
insb
adc
out
dec
xchg
insl
or
in
je
lret
mov
test
push
aam
insl
jl
push
push
imull
sbb
enter
mov
sub
mov
xchg
jmp
add
add
sub
pop
cmc
insw
rorl
not
or
mov
sub
test
out
xchg
inc
push
or
pop
mov
cli
int
pop
ss
push
push
xchg
call
repnz
xor
xchg
fldcw
xchg
insl
adc
ss
stos
xchg
icebp
lock
dec
lret
sub
mov
stos
push
jmp
xor
inc
ljmp
xor
fldenv
ret
gs
pop
inc
push
nop
jmp
fucomip
shlb
fisttpll
push
nop
jns
loop
jge
mov
pop
push
jle
mov
sahf
js
mov
fisubrl
jnp
xrelease
fdivs
sahf
push
rdmsr
xchg
fnstsw
push
add
and
or
sbb
popf
in
push
fistps
mov
out
and
aas
movsb
dec
xchg
push
cs
mov
out
fdivrp
mov
subb
pop
or
fiaddl
lods
push
push
stos
shlb
or
jecxz
push
cmp
in
loop
daa
test
lock
push
pop
pop
lret
stc
ret
xor
mov
cld
push
call
imul
jle
imul
mov
jno
imul
xlat
push
dec
push
popf
fcoml
fisubrs
jge
cwtl
mov
sub
push
push
or
dec
cli
push
or
out
mov
rcr
mov
stos
push
push
movsb
add
xchg
ret
mov
mov
orb
ss
inc
dec
je
cmp
std
add
iret
add
sub
je
jg
xchg
popf
loop
sub
cmc
sahf
jns
out
addr16
pcmpgtw
jb
and
subb
cmpsb
pop
out
jmp
jbe
and
imul
into
popf
lods
cmp
fisubs
cwtl
pop
out
sbb
ds
sbb
pop
shlb
sti
leave
push
lds
xchg
push
lds
fwait
or
out
or
shll
int
lahf
aas
and
and
int3
popa
inc
or
and
adc
bound
inc
repz
adc
xchg
mov
or
mov
mov
lock
mov
outsl
insb
push
je
cmp
adc
mov
add
js
cs
gs
cmp
test
test
in
out
pop
add
sub
dec
jecxz
lds
fs
int
insb
cmp
pop
push
cmp
xchg
jno
sub
dec
jmp
fwait
les
frstor
call
dec
jmp
arpl
outsl
outsb
adc
daa
cmpsb
imul
cld
lods
jg
jo
ret
add
stos
pop
lds
loope
leave
fs
mov
mov
fdivl
mov
add
addl
lods
add
lcall
int3
in
xorl
sub
or
fdivrl
pop
or
loope
sti
adc
in
lds
in
ljmp
out
cmp
or
pop
sbb
outsb
mov
push
jbe
stos
ret
xchg
mov
adc
imul
inc
add
mov
aas
mov
jnp
inc
mov
add
push
xchg
cmp
dec
or
lds
cmpsl
push
cmc
pop
lret
hlt
push
fdivl
in
in
mov
sbb
leave
push
mov
int
pop
sub
je
incl
lret
jg
andl
or
cltd
arpl
jle
cmp
and
pop
das
cmc
or
mov
popf
cmc
mov
lods
andps
adc
jmp
test
xor
lea
int
insb
call
into
mov
ret
dec
push
sub
in
xchg
dec
pop
mov
lret
aaa
inc
dec
jns
mov
test
in
add
mov
mov
pusha
sub
sbb
mov
fldl
and
out
fidivs
fistps
sbb
add
and
insl
stc
pop
push
xlat
jecxz
push
add
push
repnz
fstpl
adc
mov
addl
cmpsb
and
pop
mov
jge
inc
in
dec
hlt
adc
mov
dec
xchg
cmpsl
adc
xchg
jl
and
mov
or
mov
jno
popf
out
pop
jns
lcall
aaa
push
xor
sti
sahf
icebp
jg
fldt
jge
jp
push
cmp
mov
mov
sbb
sub
push
scas
lahf
mov
data16
inc
popa
cmc
movsl
xchg
sub
stos
inc
pop
dec
movsl
pop
push
mov
mov
inc
sti
inc
int
cmovae
mov
int3
fcompl
mov
pushf
and
sub
aad
xchg
bound
sub
sub
lcall
add
cltd
scas
xchg
sub
repz
ja
aas
sub
popf
jmp
push
pop
fidivs
int
mov
mov
hlt
popf
add
mov
add
mov
adc
inc
loopne
mov
lods
ret
mov
call
lods
mov
ret
xor
mov
jecxz
imul
je
jmp
push
fmulp
movsl
mov
dec
loopne
test
testb
cmp
mov
icebp
mov
mov
xor
popl
pusha
mov
pop
mov
pop
fwait
cli
sbb
addl
in
fistpll
mov
cmp
adc
es
xchg
mov
or
fisttpll
imul
shll
test
ret
loope
rolb
andl
inc
test
mov
jmp
push
aaa
out
out
leave
xchg
pop
stos
xor
fstpt
and
test
add
inc
roll
cmc
ja
out
enter
bnd
or
idivl
les
inc
jecxz
mul
jmp
and
fcompl
cs
adc
addl
imul
pop
add
pop
inc
into
jnp
mov
mov
mov
fmul
pop
es
or
bound
mov
cmpsb
lock
cmp
inc
or
in
pop
fstl
inc
lcall
adc
add
stos
repz
cmp
dec
lea
aaa
or
cmp
int3
dec
les
jae
and
gs
test
popf
inc
cmc
lcall
sbb
sub
xchg
dec
xchg
pop
outsb
nop
enter
xor
outsb
push
sbb
nop
or
loope
push
push
pop
add
mov
cmp
stos
sbb
mov
lods
pop
fcmovne
out
enter
std
jne
and
std
bound
shlb
xor
cs
int
or
push
jle
or
mov
pop
stc
gs
xor
pop
ljmp
leave
jno
jo
pop
pop
cmp
ja
mov
inc
mov
aam
xor
and
jle
xchg
adc
inc
enter
mov
out
xor
jmp
jno
xlat
loope
push
xor
jae
cli
jmp
shrb
mov
dec
xor
cltd
subb
out
cmp
lret
andps
sbb
mov
std
notl
rcl
mov
adc
push
ja
push
nop
dec
jb
mov
arpl
pusha
push
or
inc
push
xor
mov
cmp
filds
lods
rcrb
fcoms
push
cs
clc
in
mov
push
stos
outsb
mov
orl
sbb
mov
pop
xor
sti
adc
addb
in
xadd
sbb
stos
outsl
jmp
pop
push
rcl
push
xor
fisubl
test
stos
stc
sub
scas
cmpb
pusha
mov
fxch
dec
jge
add
mov
xchg
push
mov
xchg
stos
xchg
in
in
mov
mov
push
outsb
lock
dec
jo
push
insl
sbbl
pop
push
mov
std
xchg
sbb
das
inc
outsl
xor
lds
and
in
inc
push
loopne
dec
sub
aam
pushf
cs
fsubrp
jbe
cmp
adc
inc
xchg
fbld
mov
dec
loop
into
xchg
xchg
push
jae
mov
nop
cmp
sahf
subb
rcrl
iret
push
mov
mov
sub
ds
mov
lock
push
add
cmpb
imulb
addr16
lcall
and
mov
or
pop
mov
add
sub
movsl
adc
xor
mov
pop
clc
mov
aad
cmp
xchg
orb
in
pop
imul
adc
scas
iret
and
out
push
lods
mov
dec
mov
mov
sbb
data16
push
xchg
cmp
clc
xchg
and
jmp
lods
scas
push
hlt
pop
inc
int
ret
jmp
movsl
fiaddl
cmpsl
push
sti
mov
cmpsl
xchg
mov
adc
and
int3
loopne
in
mov
jecxz
subl
xor
dec
mov
cwtl
sti
dec
mov
xchg
cmpsl
fmuls
out
pop
jge
mov
adc
xor
in
lret
jnp
insb
xchg
mov
repnz
loopne
sahf
lods
shrl
in
shrb
mov
call
and
out
sbb
push
xor
hlt
ds
jns
mov
add
jge
xchg
add
xor
cmp
pop
iret
popf
shlb
mov
lret
mov
nop
cltd
sbbl
pushf
jl
push
pop
or
mov
test
aaa
mov
xor
xchg
push
inc
inc
adc
movsl
or
lods
cmc
jae
push
loopne
scas
dec
popa
pop
and
sbb
sbbb
jg
cmp
add
mov
push
test
imul
pop
mov
adc
sub
or
test
adc
mov
push
arpl
mov
jae
imul
jo
mov
stos
cmp
cmpsb
add
fildll
cltd
bound
je
lds
mov
sahf
outsb
cli
test
mov
adc
test
adc
mov
cmp
out
fidivs
fwait
mov
mov
aad
adc
mov
adc
or
push
jne
repnz
pop
dec
insl
loope
inc
iret
aaa
add
and
or
popa
adc
int3
iret
mov
fcmovbe
imul
ficoml
cmp
sbb
sbb
push
aad
jge
psubusb
inc
ss
mov
add
hlt
mov
adc
js
jl
mov
or
fs
sub
xchg
jmp
push
cmpsl
jmp
ret
lock
loopne
adc
mov
push
ret
push
jnp
dec
pop
xor
lea
push
adc
sub
gs
adc
ret
xchg
ret
push
cmp
in
lcall
sbb
push
aas
cmpsb
fwait
shl
inc
testb
push
pop
mov
ret
mov
cwtl
jg
dec
cwtl
add
pop
mov
leave
test
mov
sub
stos
add
pop
popa
add
mov
push
int
add
cmp
aaa
add
sub
jb
aad
add
imul
xchg
sub
pop
inc
insb
sbbl
sar
mov
xor
adc
cmp
jl
stc
ret
int
mov
bound
leave
xor
sbb
xchg
add
dec
mov
js
xchg
js
fisttpl
nop
cltd
insb
mov
mov
or
inc
adc
outsb
test
insb
aas
sub
pusha
add
or
pop
pop
and
fildl
dec
push
movsl
mov
clc
dec
add
add
data16
stc
popa
dec
push
xor
push
pop
push
xadd
daa
or
pop
mov
repnz
or
mov
xor
imul
shll
pusha
mov
adc
test
or
dec
pop
shl
inc
add
cmpsb
ret
data16
mov
adc
add
inc
adc
pop
push
repz
scas
pop
das
dec
mov
or
in
pop
mov
mov
cmp
sbb
cwtl
pop
test
or
dec
mov
test
ja
stc
lret
mov
or
sbb
loope
push
inc
jno
pop
arpl
outsb
xchg
inc
fldl
out
add
xchg
or
dec
out
add
imul
shll
cli
rol
rcrl
xor
cmpsb
daa
ljmp
push
ret
sub
popf
mov
int3
lods
into
pushf
sub
mov
jbe
dec
add
xor
mov
push
sub
lods
cli
sbb
cld
mov
and
jg
ss
ljmp
mov
scas
push
fimull
jge
mov
mov
mov
lret
mov
cwtl
rol
lea
jne
inc
mov
psubq
inc
dec
sbb
in
push
test
push
ss
jmp
stc
mov
js
cltd
pminsw
daa
addr16
inc
es
aad
imul
jg
mov
jne
std
or
inc
fldt
cmpsl
je
insb
xchg
gs
cmp
mov
dec
fcoml
pop
ud1
sbbl
ljmp
push
mov
lods
lods
das
cli
enter
int3
sub
push
sbb
add
and
sub
cli
adc
sbb
test
jecxz
xchg
dec
push
dec
jge
xchg
push
ja
rcl
mov
jmp
bound
andb
mov
bound
mov
pop
jmp
lds
push
je
xor
imul
test
sti
movsb
push
stos
rorl
out
mov
jae
inc
xchg
jecxz
les
ret
sbb
jbe
xor
and
bound
xor
sti
xchg
jns
and
mov
lcall
sub
cwtl
jo
out
or
in
push
jmp
inc
daa
iret
sbb
mov
aas
ljmp
pop
test
mov
call
mov
jge
push
lds
jecxz
xchg
jecxz
pusha
and
mov
push
sbbb
cmp
dec
mov
std
sti
jge
push
mov
pmaxub
ficompl
call
xchg
cmpl
jge
orl
sub
jo
dec
insl
int3
lods
popa
mov
aaa
loopne
dec
sbb
mov
aas
adc
movsl
ja
int
mov
call
push
mov
push
sarl
aaa
cmc
mov
frstor
lds
cmp
or
outsb
jp
jmp
lcall
xor
std
rcrl
adc
fsubrp
jbe
xor
js
lahf
enter
inc
xor
mov
pop
and
filds
jl
adc
test
addr16
cltd
fbstp
mov
push
sbb
bound
cld
or
test
or
cmpsb
sbb
cmp
mov
or
daa
jb
inc
mov
fstpl
daa
push
inc
sub
pusha
int3
negl
iret
inc
nop
inc
mov
cmc
test
cmp
sahf
test
fdivrl
loop
or
clc
test
xor
int
pop
loopne
inc
jle
jge
mov
outsl
inc
xlat
jno
cmp
pop
shrb
shll
mov
lcall
scas
pop
mov
imul
leave
pop
stos
and
pop
fistl
out
and
insl
fidivrl
or
mov
jmp
inc
movsl
adc
mov
mov
inc
loop
mov
adc
movsl
dec
mov
test
sub
inc
cmpsl
stos
add
add
mov
inc
add
jbe
mov
sub
pusha
mov
sub
cmp
std
lret
mov
sub
sbb
mov
mov
push
push
dec
mov
loope
ret
pop
mov
sub
dec
sbb
push
in
add
repz
xchg
test
test
push
test
outsb
mov
jb
inc
inc
js
fnstenv
enter
out
xchg
dec
jno
sbb
and
push
and
mov
adc
pop
xor
xchg
std
testl
and
add
inc
mov
ret
and
popf
mov
mov
int
mov
movsb
mull
jb
mov
jbe
cmp
or
fdivl
mov
mov
fwait
mov
jg
insl
cmc
add
inc
add
dec
std
dec
cli
or
in
inc
pop
sbb
out
sub
not
jb
rcrl
jne
cld
or
clc
lods
je
mov
push
outsl
out
test
movsb
cs
pop
inc
loope
mov
add
sbb
fsubr
jb
dec
repnz
and
xorb
pop
andb
inc
xchg
in
jmp
fldenv
rorl
adc
sub
pop
and
js
shl
push
enter
inc
ja
push
push
rorb
movsl
xor
cwtl
jne
cltd
sbb
out
dec
loop
add
dec
jnp
inc
mov
test
cs
orl
fisttpl
xchg
push
shl
inc
out
test
or
cmp
jmp
mov
je
cli
mov
sub
iret
mov
add
and
dec
push
cld
xchg
sub
cltd
adc
mov
test
or
js
scas
pop
shl
in
std
repnz
fisubl
test
sbb
out
pop
cs
in
dec
jge
xchg
dec
mov
cs
sub
in
std
sbb
loopne
push
les
es
cmpsb
mov
adc
sbb
fwait
xlat
fsts
mov
imul
cmp
sbb
ds
add
popf
adc
addr16
mov
je
adc
pop
lcall
mov
xor
push
or
xchg
stos
rorb
ljmp
dec
pop
repnz
pop
sbb
add
fnstcw
mov
scas
ret
icebp
ficoms
xchg
add
out
dec
mov
jle
out
pop
sub
xor
pop
cmp
sbb
aaa
std
data16
pop
jmp
jmp
cs
push
test
xchg
rcr
cmp
sti
pusha
or
pop
sbb
popa
xchg
xor
inc
sub
bound
push
lods
and
mov
and
cmp
sarb
movsl
sbb
cwtl
pop
imul
cmp
rcrl
ja
push
mov
les
inc
mov
nop
pop
ljmp
lods
dec
sbb
fcomps
cmpsb
dec
test
lds
lcall
and
dec
mov
mov
clc
inc
xor
imul
push
jnp
ss
inc
dec
lock
ficompl
movsb
in
sub
xchg
enter
mov
and
mov
dec
adc
jae
dec
xlat
data16
lods
inc
mov
mov
aad
sti
clc
dec
jo
rol
mov
int
sub
insl
push
dec
xorb
pop
add
and
sub
add
sbb
dec
xchg
jg
leave
mov
pushf
mov
inc
loope
bound
dec
shr
push
push
sbb
loop
loope
cmp
cmpsb
lcall
mov
adc
int3
fcmovu
xor
or
or
iret
lock
mov
cmp
mov
divl
xchg
cmp
mov
lds
adc
jo
enter
sub
sbb
or
jne
push
fcomip
js
scas
add
and
stos
popa
push
sub
xchg
pop
aaa
shlb
fs
lret
mov
mov
cmp
add
pop
ljmp
inc
add
adc
sub
rcl
loopne
movsl
aad
push
pop
add
jb
lret
testl
jge
repnz
dec
outsl
mov
nop
ret
jne
cli
adc
fistl
ficoml
out
int
ljmp
lret
add
out
je
insl
or
dec
sub
shll
push
loope
sub
push
push
lods
adc
push
imul
rcr
fsubp
pop
clc
xchg
test
stos
lcall
lret
ss
xchg
mov
cs
jg
adc
sub
and
xchg
jbe
ja
popa
fistpl
stos
jae
movsl
fildl
pop
test
jge
ss
frstor
icebp
xchg
and
dec
inc
ljmp
fwait
push
lea
and
test
mov
push
and
and
ret
dec
pop
sarb
cmp
subl
dec
mov
outsb
das
adc
xchg
xor
ja
add
pushf
xchg
mov
mov
jnp
jns
scas
frndint
lock
mov
and
repz
popf
bound
lods
gs
ds
adc
stc
cli
lea
sbb
ret
out
mov
push
outsb
out
decb
xchg
jns
xor
xor
cmpl
inc
pop
aas
adc
or
nop
loopne
lret
xor
cwtl
dec
sbb
sub
sarb
outsl
fld
adc
xlat
adc
adc
pusha
out
jl
aam
and
ljmp
outsl
sti
outsb
sub
cld
enter
jg
test
xor
hlt
pushf
add
rcr
fidivs
lods
test
sbb
cld
sbb
iret
adc
fcompl
push
and
shlb
movsl
sbbb
je
mov
push
ljmp
lahf
ja
xchg
repnz
cmp
sub
fsincos
adc
popf
jo
call
xor
jmp
push
push
pop
mov
lods
adc
push
xchg
adc
xchg
cmpsb
jno
jecxz
lret
push
xchg
sbb
aam
sub
jg
es
js
cmp
or
sbb
stos
mov
addr16
inc
adc
call
jne
sbb
xchg
popf
lods
mov
adc
test
sbb
imul
jnp
leave
and
in
mov
lods
cs
add
jp
cmp
mov
push
xor
jmp
or
outsl
dec
js
mov
adc
leave
std
in
mov
sbb
cmpsl
mov
imul
inc
push
inc
fs
ds
sarl
mov
ja
dec
pop
pop
pop
mov
jo
call
outsl
sbb
jno
and
ret
pop
sub
dec
into
std
cmpsl
add
xchg
unpckhps
sub
adc
das
mov
xlat
mov
mov
cmp
mov
adc
mov
test
dec
out
icebp
xchg
cmpsb
lret
pop
jmp
pop
cmp
test
lret
lods
mov
xchg
xlat
icebp
push
mov
mov
adc
pusha
dec
xchg
es
movsb
mov
jg
cmpl
dec
sbb
movsl
mov
stos
pop
mov
shll
pop
xor
dec
push
cmpsl
adc
mov
xchg
pusha
ret
in
adc
lds
cmpsl
out
inc
jmp
ja
cmp
xchg
inc
pop
aam
outsb
loope
mov
pusha
rcrl
sub
add
stos
lret
insb
mov
jae
mov
lcall
bound
dec
stos
adc
or
inc
out
sub
fs
imul
subb
into
enter
and
pop
inc
into
je
in
out
inc
ret
aaa
xchg
bound
in
mov
jns
and
mov
jmp
sub
xor
push
mov
ljmp
or
je
movsb
in
rcr
push
pop
insl
out
lds
aas
mov
sbb
pusha
nop
rcll
inc
sub
jg
ret
add
xchg
in
in
dec
pavgb
hlt
fldl
mov
cmp
sbb
ljmp
dec
adc
sub
in
stos
subb
ss
lock
add
inc
fiadds
xor
lret
inc
clc
in
test
push
call
insl
lcall
and
outsb
sub
pop
xchg
dec
popf
and
cmp
inc
test
push
push
mov
out
div
popa
cmp
sub
dec
stc
aad
adc
cmp
jne
in
jnp
cmp
or
inc
repnz
xor
addb
sarb
rcrl
sbb
pop
jmp
cmpl
scas
cmp
insl
jae
mov
and
clc
in
in
mov
imull
lods
std
sti
repnz
push
lds
push
mov
mov
roll
inc
adc
jo
inc
push
stos
test
sbb
fstl
xor
call
nop
arpl
out
lret
jo
cmc
lock
sbb
pop
dec
out
adc
dec
mov
sbb
inc
push
arpl
hlt
sub
sub
xchg
and
in
pop
js
adc
sbb
das
dec
sarb
loop
dec
inc
cmp
ja
movsl
push
mull
test
push
xor
rorb
cld
inc
inc
mov
xchg
loop
push
imul
xor
shlb
popf
mov
addr16
shlb
pop
in
jnp
xlat
jbe
add
enter
insl
fcompl
sti
push
mov
push
and
push
je
xor
sub
mov
aad
sbb
jns
psubq
fstl
int3
mov
lea
cmp
sahf
sbbl
add
push
icebp
push
dec
pop
adc
je
dec
orb
aas
lock
popf
in
in
or
pop
popa
inc
outsl
push
xor
mov
dec
dec
mov
and
xchg
loope
jg
mov
fadds
je
mov
repz
cmpsl
lods
jmp
outsb
sbb
dec
inc
xchg
adc
lret
add
incl
std
push
or
fldl
jbe,pt
sbb
inc
pop
cmp
jl
pop
dec
dec
mov
jns
mov
aaa
loopne
jb
stos
insl
mov
adc
addr16
leave
pushf
push
push
adc
leave
int3
mov
js
mov
jno
mov
sub
push
bound
xor
lcall
inc
shll
mov
push
nop
arpl
and
into
add
mov
pop
in
push
xor
es
jnp
push
mov
int3
imul
test
ljmp
mov
and
xor
xchg
daa
push
enter
sbb
jno
mov
pop
pop
xchg
test
lret
cmp
adc
lods
mov
cmpsb
incl
lds
adc
popf
dec
bound
and
jl
dec
xor
clc
je
push
mov
aad
and
mov
fwait
mov
inc
push
sub
cmp
das
mov
fs
push
test
repz
cmp
jle
inc
filds
xor
int
mov
cmp
sbbb
movsl
pop
sbbb
dec
lock
insl
aam
or
je
sbb
cmp
enter
mov
jbe
sub
mov
lds
jbe
and
fcmovnbe
sbb
shll
js
jge
movsl
mov
outsb
jne
movsl
dec
pop
mov
push
aad
scas
sub
push
cltd
fwait
sbb
outsb
mov
xor
in
inc
faddl
cmpb
mov
adc
addr16
add
repz
repz
mov
cmc
cwtl
popf
sub
jge
pop
push
arpl
out
or
mov
push
and
xor
nop
lods
or
shl
divb
outsb
pop
xchg
mov
sub
mov
xchg
jmp
sub
mov
ror
xor
cltd
jmp
sbb
inc
clc
ljmp
sti
sub
enter
push
xchg
je
xchg
icebp
jnp
inc
orb
stos
or
sub
int3
popf
mov
push
je
sub
push
mov
cmp
js
lods
adc
stos
sar
sahf
xchg
pop
pop
or
int
mov
popa
inc
mulb
fnstenv
xcrypt-ecb
cmpsl
or
mov
ds
sbb
lcall
rolb
stos
fisttpll
jge
jae
and
ficoms
das
cmpsl
fcmove
push
call
jl
or
iret
dec
pop
ret
push
sub
push
js
inc
jns
mov
xchg
jb
adc
aaa
cli
mov
fstp
add
mov
loop
mov
cmp
lretw
in
in
dec
imul
mov
xor
mov
cmp
push
subl
sbb
sbb
je
cmp
loop
pop
jge
lret
mov
lock
leave
and
sbb
sbb
sti
push
mov
movsl
gs
inc
add
enter
dec
pop
or
int3
cmc
mov
decl
inc
cmc
in
aaa
ss
rolb
mov
xchg
dec
call
inc
dec
push
jb
inc
or
js
xchg
loop
sahf
cmp
fwait
or
pop
sub
popa
out
popf
loopne
mov
loope
ja
or
jg
fiaddl
inc
push
push
jl
rcrl
jmp
stc
add
cmpsl
jle
dec
in
cs
std
adc
pop
es
lret
jp
cmp
pop
sub
fldenv
xchg
inc
push
movsb
fnstenv
mov
pop
sbb
cmp
xchg
inc
int
clc
cmc
ret
sbb
xlat
dec
pop
sub
testb
leave
sbb
repz
mov
xlat
mov
pop
cmp
sbb
addl
and
cmp
fisubrl
aaa
sub
push
lds
jecxz
adc
cmp
cs
mov
test
leave
popf
jae
jg
add
adc
inc
push
jmp
mov
dec
push
cmp
push
pop
sahf
cmp
pop
push
xchg
inc
or
repz
loopne
push
dec
test
test
ljmp
pop
loope
test
pop
leave
sti
pop
fidivrs
jmp
xor
xchg
mov
mov
mov
fisubrs
insb
jo
xchg
add
xlat
call
ret
stos
fcoml
or
es
not
cmpsl
pop
shlb
xlat
adc
push
sbb
mov
xchg
mov
sarl
ds
sarb
stos
and
repnz
and
lods
pop
xlat
xor
pop
arpl
or
stos
cmpl
nop
stc
or
add
je
sbb
jne
mov
push
xchg
mov
mov
aas
insl
adc
cmp
push
ja
sub
cmpsb
adc
pushf
subb
sub
push
pop
arpl
insb
push
nop
sbb
in
push
in
jae
ss
mov
fwait
pop
ficomps
cmc
test
mov
xor
dec
lahf
push
cmp
sub
jmp
daa
sub
fcoml
push
jle
mov
sbb
sbb
add
xor
ret
pop
rorb
ljmp
jae
mov
adc
scas
mov
xchg
loop
mov
pop
lock
cmp
aad
push
and
int3
mov
push
aas
xchg
xchg
fisttps
cmp
imul
pushf
add
fildll
movsl
sub
dec
mov
fiaddl
mov
imul
inc
pop
sti
sbb
test
push
xchg
push
ljmp
jge
loope
lds
test
out
and
push
and
int
xchg
int3
sub
xor
xor
dec
or
xchg
rorl
into
lret
jno
out
sbb
xchg
out
int3
pushl
add
cli
sub
popf
movsl
push
lea
fistpl
movsb
or
push
and
stc
jae
ret
mov
xor
sbb
mov
jl
sub
mov
ds
fcoms
addr16
test
pop
test
stos
sbb
fadds
lea
les
test
inc
pushf
jecxz
clc
pop
cmp
mov
mov
mov
mov
ja
pop
insb
xor
push
lock
cmp
sbb
adc
popa
cwtl
out
mov
imul
movsb
cmp
mov
pop
jg
push
xchg
adc
scas
add
daa
inc
test
and
or
jp
pop
fdivrl
push
push
cmp
in
push
cli
mov
jbe
ljmp
mov
cs
pop
fs
outsb
ret
sbb
cmc
aas
arpl
mov
pop
imulb
add
test
bound
dec
addr16
and
cld
cmp
jne
outsb
lock
outsb
sbb
adc
repnz
and
ss
add
mov
mov
call
js
or
sub
cmp
xchg
xchg
mov
leave
ret
notb
divl
repz
pop
gs
call
andl
jge
and
dec
or
dec
shl
push
sub
jb
and
imul
mov
xchg
and
call
push
cmp
inc
fldenv
and
add
outsb
sub
aad
scas
jp
mov
popf
fnstcw
pushf
and
call
stos
push
jne
xchg
pop
push
xchg
mov
push
adc
cmp
loope
mov
xchg
int3
test
or
mov
les
adc
test
inc
ret
icebp
ret
mov
mov
idivb
outsl
icebp
idivb
insb
jecxz
and
or
push
jl
mov
repz
jns
xchg
mov
push
inc
ja
out
fxch
and
out
test
add
test
inc
adc
aam
pusha
push
stos
aad
adc
shld
sub
sub
call
jl
dec
sbb
imul
dec
in
jle
cmc
push
ret
sub
lock
mov
in
inc
ja
xor
jnp
mov
jne
ja
ret
cmp
cmp
pop
cltd
jmp
or
or
xchg
adc
hlt
mov
cld
jno
mov
fcoml
and
xchg
mov
and
test
lods
cmp
mov
imul
cwtl
out
shrl
lods
or
jo
jecxz
sbb
loopne
iret
adc
les
jae
stos
rcr
pusha
aad
sub
sahf
cmpsl
outsl
adc
aaa
add
pop
and
insb
scas
pop
aam
sbb
pusha
add
cmp
and
out
push
lahf
mov
rcrb
dec
int3
xchg
mov
fisubs
testl
add
cmp
xor
xchg
cltd
dec
dec
add
fsubrl
or
fdivrs
dec
adc
xchg
xchg
jno
test
dec
cmc
sbb
icebp
inc
mov
mov
aam
dec
hlt
adc
xorb
aas
incb
lea
movsl
and
cmp
pop
dec
push
cmpl
jne
adcl
sub
or
and
pushf
pop
inc
repnz
sub
fs
or
push
fs
rcrl
fld
pop
and
movsl
subl
out
andl
bound
mov
mov
jge
lret
popf
popf
cmp
jne
call
sbb
lds
push
xor
sahf
or
inc
add
dec
lods
addl
aam
ret
int3
mov
xor
out
xor
push
shrb
push
mov
js
sub
cmp
add
mov
cli
lcall
icebp
arpl
jae
inc
adc
in
gs
stc
sbb
add
ljmp
xchg
adc
sbb
add
adc
js
xor
test
pop
sbb
cmc
xchg
sbb
js
xchg
clc
stos
and
mov
ss
xor
repnz
ret
mov
dec
jbe
rclb
sbb
aaa
movsb
dec
aam
mov
mov
ds
mov
inc
repz
xchg
les
inc
adc
iret
loopne
pusha
sub
es
push
aad
or
jecxz
and
loope
dec
fdiv
or
xchg
mov
sub
sub
pop
sub
sbb
nop
xchg
jp
dec
inc
rorl
sub
fadd
xor
nop
xor
sti
sbb
cmpsl
mov
rclb
fdivrl
or
call
or
flds
ja
sahf
cmc
lret
inc
lret
out
fmull
out
sub
push
pop
cwtl
dec
inc
stos
add
jae
and
in
lahf
out
dec
pop
xchg
fs
mov
popf
out
jp
adc
push
shll
imul
lcall
push
sahf
stos
cli
repz
sti
fisubrl
xchg
dec
test
cmp
and
repz
daa
fcmovnbe
pop
add
and
mov
hlt
incl
add
cmp
imul
fimull
movsl
repnz
fisubrs
lahf
xchg
jbe
nop
mov
in
xchg
mov
xchg
out
fyl2xp1
inc
std
int3
dec
xchg
mov
push
scas
scas
lods
mov
xorb
repz
icebp
inc
push
xor
sub
cmpsb
addb
cld
es
ret
push
xchg
ljmp
test
sti
jmp
lcall
shlb
das
mov
call
xchg
mov
popa
stc
dec
add
dec
sub
mov
je
push
out
movsl
push
mov
jne
cmpsl
fistpl
adc
jg
int3
jp
push
popf
mov
add
xchg
orb
cld
jno
gs
push
mov
scas
pop
lods
in
in
fildll
adc
push
inc
in
das
sub
cmp
mov
push
mov
maskmovq
testl
mov
sub
mov
insb
js
jbe
mov
mov
xor
scas
mov
mov
pop
add
or
mov
dec
cli
inc
fisubs
push
mov
sahf
mov
jg
ja
sar
test
inc
xor
sbb
jecxz
push
aas
ret
pop
push
pushl
out
add
gs
sbb
xor
xlat
add
stos
aam
shlb
sub
incb
test
mov
bnd
xchg
or
add
and
push
sbb
xor
xchg
dec
xchg
arpl
pop
ror
dec
and
movl
or
jp
push
arpl
adc
adc
add
gs
mov
les
mov
xor
loop
and
jecxz
xor
leave
mov
lahf
sahf
fmul
add
jns
adc
xchg
rorb
dec
loopne
cmp
xor
mov
add
iret
lret
pop
hlt
es
dec
and
or
cmp
in
leave
inc
pop
jle
push
gs
stc
push
loop
stc
fmuls
rorl
shrb
jmp
daa
test
push
int3
test
pop
pop
imul
dec
stc
cmp
stc
jle
adc
outsl
xchg
add
cmc
lods
leave
push
sub
adc
fisubrl
xchg
sub
inc
or
rcrl
or
or
dec
and
cmp
fidivrl
sbb
inc
push
pop
inc
sbb
movsl
fsubr
pop
test
xor
js
stc
sahf
inc
xor
sub
xchg
push
sarl
xchg
stos
xor
nop
test
fisubl
scas
into
js
fcoml
daa
insb
rol
add
mov
sub
jg
repz
iret
scas
test
xchg
insl
add
lahf
cmpsb
or
and
fsubl
ret
cld
test
push
sub
push
mov
movsl
jmp
das
pushf
pop
pushf
lret
or
pop
enter
sbb
out
ja
mov
imul
pop
test
xchg
loopne
xchg
loopne
lret
lret
rclb
popa
or
pop
pop
hlt
fcomi
aas
mov
and
mov
and
xchg
pop
movsb
push
test
call
add
cmpsb
cmpsb
pusha
mov
mov
mov
aad
xor
inc
push
xchg
mov
dec
cmp
insl
xor
das
dec
xchg
lds
das
scas
sub
push
std
loope
pop
cli
inc
gs
cmp
pop
das
push
cmpsb
xchg
movsb
out
push
sti
xchg
popa
test
mov
sub
inc
and
push
pop
popf
xor
sbb
mov
notb
rorb
sbb
stc
or
shlb
out
xor
mov
push
mov
popa
testl
or
leave
sbb
mov
mov
into
xchg
adc
push
leave
mov
push
test
add
in
arpl
xchg
lcall
mov
mov
out
sbb
cmp
jno
jbe
inc
cmpsb
mov
test
jae
out
pop
loope
push
je
out
sbb
movsb
jge
fildll
mov
jl
xchg
push
mov
imul
pop
mov
inc
adc
and
jbe
or
fwait
cli
mov
sub
xor
repnz
ss
mov
sahf
mov
filds
xor
xor
hlt
add
mov
cli
lea
xor
sbb
stos
test
shlb
je
cmp
ss
sub
pop
out
leave
cs
pop
lods
mov
mov
xchg
mov
mov
inc
daa
mov
jle
jb
adc
lods
stos
test
pusha
es
nop
vpshlq
lea
dec
cmpsl
daa
nop
cmc
xor
les
cmpsb
and
mov
hlt
dec
add
pop
test
enter
mov
lock
mov
into
je
fidivs
inc
add
mov
pop
call
and
mov
jbe
pop
in
inc
jecxz
push
push
ret
ds
or
dec
stos
outsl
inc
scas
pop
adc
ret
and
lahf
ficomps
pop
mov
push
xchg
xchg
cs
adc
sub
mov
sub
xchg
outsl
or
xchg
enter
jbe
or
out
push
or
ja
jmp
push
mov
mov
and
ret
loopne
in
scas
xchg
jmp
aam
xchg
and
lret
xchg
dec
mov
insb
mov
ljmp
cmpl
loop
pop
stos
repnz
js
and
dec
xor
jmp
test
jne
xor
das
into
jo
xchg
imul
ja
in
pop
ss
mov
jo
inc
push
popa
mov
fs
test
outsl
adc
adc
jae
mov
movsb
inc
test
mov
cmc
int3
out
jnp
sahf
aam
or
ret
lds
in
mov
sbb
jge
pop
inc
repnz
mov
daa
xchg
arpl
lret
mov
cmp
data16
sbb
jg
mov
dec
jp
fisubl
add
mov
and
sub
xchg
dec
or
mov
setge
lea
add
inc
leave
lahf
aas
push
les
push
outsb
jg
adc
jnp
rolb
lods
push
stc
mov
rorl
cmc
pop
push
out
outsb
pop
aam
mov
subb
dec
cmpsl
cmpsl
push
fsubrl
pushf
dec
adc
lock
pop
std
and
ljmp
dec
hlt
push
pop
cmp
add
popa
imul
dec
sub
leave
arpl
mov
fcomi
sub
adc
dec
popa
xor
dec
test
mov
xor
fadds
shl
xchg
mov
ret
int
cmc
xor
test
xchg
movsl
jge
bnd
push
cmpsb
xchg
xchg
mov
jge
addl
int3
clc
cmc
jno
imul
cmp
cli
clc
rcrb
outsl
xchg
call
and
mov
xchg
insb
xor
and
enter
out
xor
jl
pop
xor
outsb
subl
or
fcoml
cmp
test
int3
cmp
jae
push
outsb
push
inc
sub
jns
add
insl
or
xchg
and
movsl
add
add
mov
dec
sub
ficomps
fnsave
mov
scas
mov
jne
push
sub
mov
xchg
std
xor
cmp
int
jl
adc
fidivrs
pop
ja
test
fs
xor
mov
out
pop
fists
xchg
dec
es
rorb
iret
dec
push
jmp
out
mov
ss
sbb
sbb
popf
stos
inc
xor
lcall
out
push
dec
mov
inc
pop
imul
pop
dec
sub
cmp
inc
adc
push
fisubrl
rclb
das
subb
xor
incb
dec
mov
cmp
shrb
and
into
fsubrl
inc
xchg
stos
mov
into
loope
adc
subb
out
orb
inc
jnp
and
aad
sbb
out
inc
rorb
or
es
mov
lcall
sub
adc
jno
hlt
xor
aaa
mov
fisubs
mov
inc
cmp
jae
sub
imul
imul
pop
mov
gs
cmp
sbb
xchg
aas
jp
sbb
inc
push
add
cmp
push
ffree
jmp
dec
inc
loopne
call
jns
scas
repz
ss
outsb
lods
xorb
push
adc
dec
scas
rcr
ja
xchg
xchg
xchg
xor
push
mov
sbb
add
daa
mov
fwait
nop
test
dec
divb
push
and
push
call
mov
pop
out
lret
outsb
inc
xor
mov
jnp
mov
pop
movsl
shr
inc
inc
push
jp
sub
or
or
sbbb
test
xor
pop
inc
int
ja
pop
pop
xchg
cmp
clc
add
sbb
push
out
mov
imul
cmp
outsl
loope
push
push
push
push
cmc
dec
xor
sub
xor
mov
xchg
out
xchg
imul
pop
pop
dec
movsb
jns
inc
mov
adc
push
mov
and
and
sub
jmp
push
out
cmc
popf
aam
pop
push
pop
sbb
enter
jo
xchg
cmpsl
jo
mov
repz
sub
je
out
repz
mov
add
jl
fadd
icebp
fcom
je
aam
add
push
sbb
mov
adc
dec
mov
and
into
stos
jbe
add
push
outsl
scas
dec
test
jnp
fwait
mov
sbb
adc
push
dec
adc
cmp
push
js
mov
sbb
cmpsl
xchg
loop
pushl
je
leave
push
pop
je
pushf
movsb
je
mov
sub
xchg
mov
adc
push
add
lret
add
lods
mov
pop
cmpsb
jno
decb
addr16
jbe
sbb
mov
mov
je
fcompl
enter
jp
hlt
push
sbb
push
orb
fucomi
pop
out
pushf
ds
sbb
ds
push
jecxz
lea
in
mov
stc
add
jne
int3
jp,pn
mov
leave
popa
gs
lock
in
jge
and
test
mov
cld
inc
testl
jns
lret
aad
pop
in
pop
adc
aas
inc
cmpsl
jg
sub
mov
mov
xchg
cmp
daa
push
xchg
das
daa
and
std
adc
ficomps
call
xchg
xchg
arpl
mov
adc
pop
and
and
ja
pop
nop
mov
xlat
jp
test
mov
sub
test
fsin
pop
sub
icebp
and
xchg
sbb
std
and
pushf
enter
nop
dec
pop
and
inc
testl
cmp
rclb
or
adc
mov
sbb
int
decb
xlat
jb
lret
inc
insb
or
and
dec
xchg
sahf
mov
in
sbb
add
dec
outsb
push
stos
cld
int
mov
add
fsts
pop
stos
rorb
add
xchg
push
xor
push
das
test
pushf
sbb
pop
mov
xchg
jb
pop
xor
adc
push
sbb
jno
xchg
lahf
arpl
dec
mov
pop
fdivrp
inc
mov
lods
add
xchg
daa
call
movsl
inc
pop
pop
cmp
xchg
movsb
aad
out
mov
sbbl
inc
push
jecxz
or
dec
data16
in
or
fildl
mov
push
and
push
sub
jl
inc
insb
fisttpll
and
cld
and
adc
xorb
dec
out
inc
leave
in
vpavgb
push
loope
enter
mov
outsb
test
cli
ja
push
jbe
cmc
cmp
call
or
inc
ds
push
xor
cmp
pop
call
adc
mov
repnz
xor
fcomi
out
insb
ret
aaa
and
mov
pop
adc
push
call
jns
adc
sbb
dec
pop
ret
shlb
jge
in
push
fwait
mov
sub
iret
sarl
ret
out
and
je
neg
inc
inc
inc
or
movsb
or
addb
push
in
sti
xchg
shll
lods
repz
movsb
cmp
pop
movups
jb
jbe
mov
mov
aad
loopne
xor
add
out
sahf
xor
add
lods
and
push
push
fistl
sub
sub
mov
push
fbstp
mov
in
in
cltd
sbb
pop
ss
jns
inc
leave
or
push
add
adc
vxorps
or
and
in
dec
or
mov
jae
popa
inc
and
fldcw
dec
cli
fistpll
jecxz
cmpsl
popf
mov
pop
in
sub
dec
and
pop
or
mov
jbe
cmp
call
addr16
pop
adc
cld
mov
cli
leave
add
xor
into
insl
loop
sub
in
sbb
aam
sub
fwait
pop
out
add
mov
mov
pop
mov
aad
dec
mov
dec
inc
mov
jl
mov
shlb
xchg
lret
decl
ret
sbb
sbb
cmp
mov
int3
pop
and
xor
add
and
jle
cld
es
mov
adcb
into
and
jbe
inc
push
lock
adc
adc
cmp
vcmpss
pop
jns
jmp
fwait
pop
fcmovb
mov
cld
mov
movsl
pop
mov
dec
or
adc
xchg
insl
inc
inc
mov
sbb
aad
movsb
sti
cltd
stos
jno
push
call
movb
fwait
mov
push
mov
repnz
pop
mov
pop
sbb
insb
push
sub
push
xor
jg
add
popf
cmp
popf
pop
inc
popf
cmp
xbegin
pushf
sub
mov
or
fwait
push
fs
movsb
push
adc
inc
into
fldl
aaa
xchg
ss
jle
add
dec
scas
data16
jp
mov
fimuls
dec
repnz
xor
cmc
fistpl
mov
pop
data16
and
aas
or
pop
pop
xor
in
mov
cltd
es
push
cmc
adc
sbb
pop
aam
or
dec
mov
repz
xchg
cmp
std
sub
sub
pop
and
jle
inc
push
sbb
add
jnp
cmc
pop
lahf
mov
or
add
inc
sti
pushf
jno
sahf
pop
and
cmpl
and
or
or
sbb
pop
sbb
xor
adc
mov
in
xlat
add
push
dec
lcall
cmp
mov
in
fwait
ljmp
insl
mov
fwait
mov
push
lret
stos
icebp
cmp
xchg
jp
bound
dec
pop
repz
and
leave
fucomp
xor
not
imul
sbb
les
popa
or
cmp
cli
or
xchg
jmp
lea
mov
dec
dec
adc
inc
dec
pop
and
add
or
ret
pushf
jno
pop
pop
insb
pop
dec
fs
cmp
pusha
xchg
xchg
hlt
push
scas
stos
aaa
cltd
fidivs
and
ret
xor
or
cmp
sbb
arpl
mov
sbb
fdivrs
pop
xchg
or
xor
shlb
nop
repz
push
push
fstpt
mov
push
fs
cld
jle
aaa
xchg
mov
ss
mov
jl
inc
adc
push
and
mov
mov
add
cmp
pop
pop
das
push
shrb
pop
xchg
push
mov
cmc
stos
decb
push
sbb
mov
or
std
and
sub
aas
cld
dec
out
nop
fidivrs
jae
loop
sub
clc
add
test
jmp
xchg
inc
in
jne
xchg
adc
loopne
jmp
jle
xchg
mov
xchg
lret
adc
mov
mov
movsl
xlat
sbb
and
pop
ja
inc
push
dec
jns
outsl
js
in
xchg
xor
je
das
jp
pop
push
mov
loop
rcrl
in
mov
loope
movsl
aam
jo
jg
push
jo
stos
arpl
xchg
xor
out
out
in
push
test
inc
push
sbb
xchg
scas
or
lret
out
iret
pop
scas
cmpsb
lcall
or
push
leave
popa
pusha
sar
sub
or
sbb
test
push
add
xor
jmp
test
into
in
sbb
pop
pop
jecxz
jne
adc
mov
sti
add
repz
outsl
repz
fldl
pop
add
sbb
add
inc
sbb
adc
outsl
sub
mov
ss
outsb
mov
pop
test
lods
popf
jge
or
fsubrs
inc
xlat
dec
cmp
int3
cmp
jae
outsb
jne
ret
test
data16
push
dec
test
inc
xchg
lea
mov
sbb
push
dec
mov
inc
xor
aam
jp
in
pushf
nop
dec
sbb
pop
push
inc
movsb
mov
mov
adc
cmp
sub
daa
stos
test
hlt
stc
mov
stos
sub
ret
roll
lcall
shll
loope
jge
mov
repnz
ja
xor
vpaddsw
bound
call
or
adc
pop
jmp
xchg
jle
popa
pop
pop
pop
arpl
xchg
stc
and
stc
sti
jge
sbb
fs
or
lea
add
cmp
ret
pushf
movsb
and
data16
sbb
adc
into
mov
subb
jecxz
loope
out
test
movsb
fwait
xchg
fistl
gs
xchg
fidivrs
dec
cmp
inc
aam
pop
xlat
insl
xor
push
out
fwait
and
data16
fnstcw
push
je
int
inc
daa
ret
adc
jp
sbb
movsl
and
sub
adc
es
xor
sbb
add
xlat
in
aam
inc
loop
xchg
cmpl
push
xor
dec
xchg
dec
hlt
sbb
mov
movsb
iret
or
mov
fwait
cmp
xchg
cli
or
dec
xlat
or
cmp
add
mov
pop
or
pushf
inc
jb
out
insb
dec
jb
emms
out
cmp
pop
add
arpl
and
jle
sbb
jp
adc
addr16
sub
ret
push
xor
rcrb
sbbb
lods
shlb
or
mov
negl
mov
loopne
ja
jbe
sarb
xor
dec
shl
or
mov
into
add
out
sbb
sbb
xorb
ja
mov
xchg
in
fmuls
and
push
sub
xor
jmp
in
out
sub
nop
jae
clc
xor
out
mov
add
fidivs
mov
jp
dec
ds
mov
int3
outsl
nop
cli
out
sub
in
mov
pop
out
lods
nop
mov
scas
pop
stos
rolb
arpl
mov
ljmp
xor
mov
arpl
lret
test
dec
or
push
pop
add
jge
test
xor
add
repnz
mov
mov
fs
inc
add
imull
add
leave
shlb
repnz
cmp
xchg
mov
adc
mov
out
add
cmp
imul
mov
lock
push
inc
jnp
dec
jae
sbb
mov
xlat
push
lock
push
aaa
cmpsl
pop
fisubs
jb
dec
sbb
mov
out
shrb
xchg
lds
cmp
lret
and
sti
iret
cmc
imul
mov
rorl
stc
sahf
jae
jne
mov
test
push
mov
aam
popa
push
fsqrt
popf
pop
movsb
outsb
dec
std
fidivl
imul
enter
dec
jecxz
push
xchg
adc
ret
or
sbb
stos
push
cltd
push
jno
sahf
jl
pop
sbb
int
add
lods
sbb
shrl
ffree
es
push
cld
mov
popa
push
pop
pop
inc
sub
testb
or
in
inc
loope
inc
jnp
imul
add
sbb
clc
lcall
lahf
inc
xchg
jmp
xchg
mov
negl
sub
push
mov
insl
xor
sti
inc
and
add
and
sbb
add
mov
dec
mov
icebp
push
xor
fisubl
or
mov
sub
cld
lcall
or
cli
mov
jo
xchg
xchg
aaa
mov
mov
xor
adc
lods
push
repz
xchg
cmp
and
test
iret
push
or
add
sbb
add
push
jbe
gs
adc
mov
jnp
mov
stos
movsl
test
and
cwtl
mov
mov
inc
add
cmp
add
jl
nop
daa
pop
test
int3
and
aaa
les
xchg
out
or
jo
daa
addr16
je
sub
call
loope
imul
imull
pop
jecxz
xor
jae
xor
in
dec
pop
pusha
cmp
insl
sub
add
xor
adc
dec
int3
pop
out
adc
rdmsr
jmp
cld
and
xor
mov
or
cli
and
xor
pop
cltd
inc
xor
cld
pusha
xchg
inc
mov
inc
inc
rolb
icebp
pop
mov
lods
mov
out
mov
pop
mov
fs
dec
mov
addl
jnp
mov
movsl
push
in
xor
daa
cli
pushf
leave
movsl
xchg
stc
fnstcw
mov
fidivs
pop
and
mov
sub
inc
push
xchg
dec
mov
and
dec
inc
push
mov
inc
xorl
mov
adc
mov
pushf
sub
xchg
lret
push
pushf
sbb
fstps
push
ss
add
mov
sub
add
scas
les
inc
xchg
pop
lcall
movsb
fsubs
push
push
idiv
lcall
adc
adc
loopne
inc
cmpsb
pop
shl
push
iret
dec
mov
lret
jp
jns
jmp
fstl
xchg
mov
xor
les
stc
dec
dec
cmpsl
ja
popf
mov
cld
push
push
mov
jg
and
jle
js
bound
ret
mov
sbb
sbb
dec
mov
fisubs
pop
lahf
push
fists
in
pop
dec
mov
sub
mov
lock
and
adc
inc
out
xchg
roll
outsb
aam
sahf
mov
lods
pop
add
les
mov
out
mov
or
shlb
push
xorb
mov
stos
andb
cmpl
push
cmp
push
aas
int3
inc
sbb
add
mov
sbb
mov
sbb
jbe
imul
sub
fisubl
loop
icebp
pop
adc
jecxz
or
xor
jns
xor
mov
adc
test
pusha
test
mov
mov
jge
ljmp
hlt
aam
lret
in
sub
repnz
adc
sub
jmp
mov
daa
incl
cmp
or
addb
push
jg
and
or
test
or
imul
sub
loop
rclb
stc
or
cmp
push
in
mov
push
je
xchg
rclb
movsb
mov
test
repnz
mov
push
xlat
adc
inc
adc
sub
mov
addr16
dec
jb
push
out
dec
xchg
repz
mov
mov
mov
sbb
movsl
and
pop
int3
mov
cmp
aad
xchg
inc
lcall
push
dec
or
shr
sub
jmp
jl
pop
or
lods
push
cltd
fs
scas
cmpsl
cmp
mov
and
or
lret
and
cmpsb
js
icebp
fstps
pop
mov
mov
mov
sbb
push
test
adc
mov
push
lea
subb
mov
fmuls
xchg
cld
fwait
idivl
mov
xor
int3
jo
jmp
gs
cmp
mov
mov
ja
adc
mov
fstl
sbb
mov
dec
mov
addl
cmp
xchg
imul
add
call
dec
cmp
pop
cmc
jns
aas
imul
push
insb
sub
add
lea
jbe
in
mov
mov
mov
ja
xchg
lea
insb
call
xor
ror
enter
pop
sub
and
jge
mov
mov
mull
xlat
and
mov
les
push
mov
push
es
nop
mov
js
stos
sahf
sbb
adc
scas
mov
data16
pop
mov
cltd
cmp
aas
sub
aam
call
sbb
mov
es
enter
inc
add
shll
sub
xlat
mov
mov
cltd
adc
test
push
les
add
pop
es
test
lret
push
cltd
cmp
dec
aaa
jmp
out
shrb
adc
scas
cld
lock
push
push
xor
mov
data16
jae
xor
into
ret
or
and
shrb
inc
sbb
push
pop
xchg
mov
jns
jbe
pop
sbb
sbb
pop
jecxz
add
jb
adc
std
sbb
xchg
mov
ljmp
arpl
js
lcall
lea
sbb
xchg
sbb
imul
mov
daa
inc
jo
cmpsl
nop
mov
inc
shrb
int
or
shrb
pop
sbb
iret
inc
jmp
push
lods
mov
mulb
mov
gs
fstpt
jmp
push
inc
add
scas
push
test
sbb
xchg
xchg
rcr
mov
push
popa
in
loopne
enter
jns
popa
insb
int3
imulb
fcmovbe
clc
pop
test
mov
jbe
sbb
and
stc
std
jge
cmp
cmpsb
xchg
push
push
lock
push
push
xor
test
sahf
out
lds
dec
mov
dec
fwait
sub
outsb
out
hlt
sarl
mov
mov
scas
mov
test
mov
xchg
pop
adc
jecxz
xor
mov
pushf
add
adc
add
ss
jl
xchg
rol
dec
lret
gs
cmp
lahf
out
test
lds
loope
xor
cld
add
inc
and
call
jno
jp
and
stos
fisubrl
sub
imul
cltd
inc
stc
mov
jle
sbb
cmpsl
and
pop
mov
lret
sub
leave
pop
scas
dec
es
lret
sub
divl
add
pop
outsb
ss
fsubr
les
movb
mov
dec
jg
add
loopne
jno
enter
sbb
orb
xor
enter
or
push
jo
jne
cmp
mov
stc
in
sub
jecxz
mov
sbb
mov
pop
mov
pop
xchg
xorb
sub
outsb
xchg
jge
mov
cmp
mov
scas
add
lret
mov
sti
pop
out
movsl
popf
mov
mov
jb
aas
ret
nop
jle
movsl
mov
testl
sub
pop
jns
iret
movsl
sub
cmp
int
and
je
popa
subb
jp
ljmp
jge
sbb
mull
repnz
mov
lcall
jne
addr16
leave
mov
add
imul
and
movsl
daa
fs
xorps
fsubl
sbb
push
nop
rorl
sbb
cs
mov
out
xlat
xchg
dec
push
stc
jb
pop
leave
push
mov
adc
pop
sbb
std
lock
loopne
cld
jns
les
dec
push
push
hlt
sti
add
sub
popf
leave
imul
cwtl
shrl
pop
incb
xorl
into
test
push
push
clc
in
add
in
pop
and
mov
int
pop
add
pushf
jg
mov
aaa
sbb
sbb
fsubl
movsl
shll
lret
test
lret
mov
les
or
jns
sub
fwait
enter
and
test
mov
pushf
outsb
adc
ds
xchg
cmp
adc
shrl
push
pop
dec
rcll
dec
cwtl
sbb
js
sbb
jg
in
push
xor
ss
es
iret
dec
sarl
push
call
jle
scas
das
icebp
dec
int3
sub
jecxz
fstps
pop
ret
loopne
pop
push
test
call
jbe
dec
pop
jg
mov
and
incb
aaa
dec
or
add
or
dec
aam
mov
std
mov
cmp
or
mov
cmc
jo
loopne
jnp
popf
into
cmp
pop
jg
fcmovnb
aam
sti
mov
ret
lds
fsub
pop
jbe
mov
lods
stos
scas
xor
shr
push
jbe
fildll
cld
jl
push
or
or
xor
loopne
int3
pop
test
arpl
cmp
lret
fiadds
mov
imul
fbld
push
sub
sbb
test
inc
pop
je
mov
std
cmpsb
rcr
jnp
out
jmp
xchg
not
sbb
xor
pop
icebp
inc
push
loopne
out
and
pop
jge
cmpsb
adc
sbb
mov
mov
sub
popa
inc
mov
fstpt
insb
lods
dec
sub
stos
dec
lret
and
fisubs
inc
lea
addr16
shlb
loop
mov
push
jmp
add
push
cmpsl
jg
sub
cmp
dec
xlat
inc
jbe
mov
hlt
jnp
sub
xlat
pushf
lds
pop
jge
mov
mov
or
jmp
add
jle
scas
adc
xor
stc
adc
in
clc
xor
fs
inc
sbb
xchg
adcb
ja
mov
mov
iret
mov
aam
mov
jp
sbb
mov
cli
jg
mov
arpl
or
inc
cwtl
arpl
data16
pusha
mov
loop
pop
xchg
testb
jg
xchg
mov
jne
pusha
push
call
sub
ljmp
xor
mov
or
loopne
aas
outsb
xchg
jge
xchg
lods
hlt
lcall
fcomps
mov
test
adc
movb
mov
pop
insl
jno
jg
dec
cmp
addl
subb
fcompl
mov
stos
ja
and
loop
mov
loope
sub
pop
in
cld
sub
dec
movsb
sbb
mov
push
mov
mov
fists
insb
and
addb
rorl
mov
jecxz
jg
adc
or
shrl
mov
pop
pop
xlat
inc
test
cld
mov
in
ficoms
adc
push
push
lods
inc
cmpsl
insb
xchg
sub
gs
xor
call
xchg
daa
pop
and
jmp
clc
out
adc
out
mov
dec
and
and
sahf
adc
mov
and
fadd
ss
sub
jmp
dec
pop
xor
shll
cmpsb
mov
pop
xor
mov
aaa
repz
lock
sub
outsl
addr16
pushf
xchg
pop
mov
xchg
dec
hlt
cltd
jmp
jae
lock
scas
jl
fadds
jecxz
nop
daa
imul
jp
lret
aam
sbb
and
push
test
push
sarb
mov
aaa
sbb
inc
call
inc
adc
sub
out
mov
mov
mov
add
jns
imul
mov
xchg
js
mov
or
cmp
ss
ljmp
mov
push
iret
es
jle
subb
bnd
sbb
mov
jne
inc
int
lea
lret
and
lahf
std
sbb
rcr
rorb
icebp
jo
call
rclb
jbe
push
add
adcl
jl
and
incb
mov
cmp
and
and
mov
lret
push
pop
cld
push
jno
cltd
push
arpl
cld
mov
adc
and
and
adcb
les
mov
pop
push
out
in
mov
jge
or
xlat
stos
xchg
adc
and
jecxz
adc
mov
stos
fisubl
xchg
adc
cmp
pusha
add
mov
inc
mov
mov
cmp
mov
dec
sarb
and
sub
xchg
cmp
fdivrp
push
enter
mov
ds
into
xchg
and
or
sbb
fadds
sbb
or
andl
daa
mov
les
sbbl
dec
lcall
dec
ret
xor
test
stos
sbb
pop
vpaddsb
jnp
inc
sbb
data16
push
mov
jo
imul
in
adc
pusha
mov
sub
in
mov
xor
xchg
mov
dec
or
mov
xchg
jecxz
jo
mov
sarl
pop
call
dec
mov
cld
and
das
pop
mov
xor
cmp
stc
mov
jmp
lcall
jno
push
push
cwtl
xchg
jecxz
push
test
daa
mov
or
mov
clc
mov
pusha
mov
inc
fimull
add
mull
addr16
push
out
push
test
mov
cltd
and
adc
sbb
fbstp
xchg
bnd
insl
and
xor
fimuls
mov
mov
dec
inc
add
mov
aam
adc
std
push
mov
gs
inc
mov
iret
cwtl
leave
and
or
cltd
out
mov
stos
pop
mov
mov
and
sar
fiaddl
pop
push
mov
sbb
outsb
pop
xchg
push
dec
call
and
add
leave
and
inc
aas
sbb
mov
cltd
jno
loope
rcrl
xchg
pusha
sub
dec
add
add
imul
push
lods
cmp
stos
movsl
rorl
jle
aaa
popa
imul
adc
hlt
cmp
fsubp
push
adc
push
out
adc
test
pop
jbe
cwtl
mov
and
jnp
adc
dec
jge
mov
mov
testb
push
addr16
mov
jb
dec
and
int
xchg
sub
cmp
in
jbe
jb
pop
and
inc
ret
and
cmp
repnz
xor
aaa
imulb
xchg
imul
aad
loopne
cmpsb
xchg
xchg
mov
clc
movsl
stos
cmpsl
hlt
jmp
sbb
dec
pop
lods
rorl
daa
adc
pusha
inc
faddl
xor
or
pushf
xor
xchg
cmpsb
push
in
add
movsl
fisttpl
cmc
adc
cltd
xchg
jl
dec
or
xchg
test
xchg
pop
dec
adcb
mov
inc
out
pusha
int3
sbb
fsts
lcall
stos
jp
lock
push
cmpb
sti
mov
pop
aas
inc
adc
jno
dec
movsb
jne
into
dec
pop
pop
leave
call
sub
pop
ret
xor
pop
pop
push
cld
sub
cs
sbb
mov
adc
loopne
je
cmp
or
jne
je
cwtl
stc
cmp
insb
sub
sbb
gs
mov
mov
mov
lcall
add
sti
mov
xor
orl
push
rorb
sahf
jne
ljmp
and
lds
fdiv
clc
and
mov
xorb
xchg
les
jecxz
es
jge
nop
negl
pop
sub
dec
push
jmp
test
or
add
fwait
pusha
fdivl
fstl
cmp
sbb
sbb
movsl
xor
jge
icebp
add
jecxz
movsb
rcll
shrl
frstor
ds
mov
pop
or
xor
cmp
test
sub
cmpsb
adc
sar
test
movsb
icebp
sbbb
scas
daa
push
jmp
and
mov
js
push
xor
inc
add
fmuls
adc
xchg
jnp
xchg
hlt
mov
popf
mov
sarb
jo
lret
enter
xacquire
ret
push
int
xor
xchg
cmp
jno
leave
cwtl
mov
fwait
cmp
pop
push
mov
pop
sub
mov
fwait
add
es
movsb
sub
ret
push
sbb
or
jbe
inc
and
sub
jg
orb
mov
imul
xchg
xor
xchg
and
mov
ficompl
pop
aam
adc
lock
xchg
xor
push
rcl
nop
lcall
inc
jmp
mov
push
in
xchg
xor
inc
jae
es
loope
fildll
or
fmull
repnz
ljmp
push
pop
aas
mov
inc
sub
add
fldcw
repz
jge
icebp
cmp
js
and
push
push
xchg
stc
adc
xlat
in
loopne
mov
pop
adc
adc
pop
mov
stos
mov
inc
push
jno
sub
pop
mov
pop
dec
adc
sub
pop
icebp
mov
inc
cmp
mov
fcmovb
push
dec
les
inc
outsl
dec
movsb
cld
ret
popa
mov
jnp
popf
xor
cmp
imul
push
jl
pop
xchg
push
jo
inc
mov
fcomi
hlt
xchg
out
push
add
divl
or
lret
jp
pop
pop
push
jns
cmp
out
pop
pop
push
negl
add
in
mov
xchg
adc
mov
and
ret
jno
in
xchg
push
mov
cmp
not
or
adc
push
mov
inc
pop
ret
clc
scas
cmp
cmp
and
dec
outsl
cmpsl
pop
dec
sbb
scas
int
fwait
adc
insb
in
or
enter
jge
fcompl
mov
push
mov
add
out
mov
std
into
cmc
cmp
sbb
movl
push
dec
mov
xlat
xor
out
gs
sti
fidivrl
in
and
jnp
call
aam
inc
pop
jb
aaa
pop
adc
pop
mov
notb
mov
mov
adc
mov
imul
mov
cltd
sub
add
rcll
mov
add
adc
repnz
fsts
in
roll
lret
addl
cld
ds
js
cli
cmp
or
dec
inc
xchg
mov
dec
call
out
clc
jnp
fnstcw
movb
shlb
sti
or
cmp
int
push
nop/reserved
xchg
adc
xor
add
loope
mov
out
arpl
inc
mov
bound
and
mov
mov
rclb
mov
pop
lret
dec
jle
call
push
popl
ss
mov
pop
mov
or
movsb
lds
mov
inc
dec
and
std
add
jmp
cmp
pop
sbb
jae
decl
cmc
jmp
fwait
stos
adc
shlb
popa
mov
xchg
lea
xchg
pop
push
mov
mov
in
add
leave
outsb
cmpsb
imul
mov
mov
rcrl
ss
ds
aas
and
inc
scas
fnsave
lret
mul
jbe
push
lods
mov
aaa
sbb
sbb
add
sbb
in
lock
cmp
pop
lock
xchg
cmp
mov
mov
cmp
add
mov
xchg
add
push
adc
lods
sbb
cmp
sub
pop
fdivrs
stc
and
mov
jle
fnstcw
and
jno
movsb
push
dec
mov
pop
sbb
sub
jmp
dec
inc
test
mov
inc
lret
arpl
inc
dec
ret
sbb
fwait
cmp
sbb
xchg
fistpl
aas
test
pop
jp
pop
and
mov
mov
mov
mov
sbbl
add
xchg
loopne
xor
es
push
jle
and
sarb
cmc
pushf
xchg
pusha
mov
sbb
nop
pop
add
sbb
mov
outsl
sbb
or
leave
in
sahf
mov
notb
or
jno
inc
imul
leave
lcall
mov
lret
out
mov
cmc
gs
push
cli
ljmp
repnz
jp
jbe
jl
cwtl
mov
and
inc
adc
scas
test
adc
mov
mov
mov
inc
and
jns
cmc
add
ljmp
cltd
loop
mov
je
mul
leave
lods
test
mov
shlb
nop
sub
push
xchg
add
jno
lahf
in
lret
test
inc
outsl
xlat
lods
push
mov
sbb
ds
push
lcall
inc
out
add
loop
test
push
ja
je
lds
dec
xlat
loope
jne
mov
aaa
mov
xchg
into
mov
push
test
push
inc
sbb
pop
add
or
push
inc
add
cmp
adc
mov
orl
clc
inc
mov
add
mov
jmp
xor
xchg
hlt
imul
daa
mov
rorl
pop
pop
rcll
dec
xchg
pop
cmp
ds
push
jnp
das
loop
icebp
jge
iret
in
in
sub
xor
add
pop
ljmp
shrl
or
jmp
out
cltd
mov
shl
cmp
lods
movsb
lcall
jbe
repz
popa
int3
aam
aas
clc
jmp
pop
bound
mov
ret
sub
cmpsl
mov
out
icebp
push
roll
out
ficoms
inc
or
rclb
cmpsl
out
aas
pop
jb
cmpsb
adc
mov
pop
fdivl
mov
jmp
cmpsl
nop
cmp
bound
scas
data16
adc
jl
mov
movsl
sti
sbb
hlt
imul
sub
test
jbe
adc
jmp
es
mov
mov
cmc
movsl
jb
inc
fisttpll
div
xor
cmp
mov
add
xor
test
lahf
fsubrl
pop
gs
jb
sbb
mov
add
popl
sarb
inc
xchg
jg
jl
sub
dec
addl
stos
mov
icebp
jecxz
popl
lods
dec
or
push
fisttpl
sti
pop
push
push
xchg
xlat
xor
loopne
jnp
stos
mov
cmp
ljmp
sbb
mov
sbb
shll
sbbb
adc
lea
insl
xor
mov
jp
lcall
scas
mov
cmp
hlt
mov
push
cmc
ljmp
mov
sub
jbe
sub
adc
insb
xchg
loop
inc
pushf
addr16
insl
sub
je
nop
adc
rcrb
cltd
out
scas
cmp
arpl
cmp
sbb
movsb
add
jo
mov
orl
jle
sbb
ja
int
jp
mov
sbb
cmpl
fisttpl
push
in
ss
pop
xor
push
out
in
and
mov
push
insl
mov
xchg
or
std
xorl
lea
sbb
std
sbb
xchg
stos
adcb
mov
add
shlb
mov
mov
and
sti
mov
cmpsl
dec
lods
xor
lock
fsubrl
dec
cmp
inc
jle
je
test
sahf
loopne
cmp
mov
cltd
movl
jno
pop
test
stos
add
and
xchg
imul
aad
adc
sub
cmp
repz
or
pop
jle
dec
jnp
aad
aad
mov
rcrb
imul
sub
jnp
mov
add
mov
shr
mov
std
int3
loop
xchg
addb
inc
dec
and
jno
mov
movsb
test
cmp
clc
jb
or
mov
mov
pushf
arpl
pop
js
cltd
pop
mov
bound
pop
sti
fisttpll
push
sti
add
test
sub
imul
push
mov
mov
and
fildl
inc
dec
rclb
ret
xor
jae
pcmpgtb
sub
ja
scas
pop
add
daa
cmc
mov
pop
leave
dec
dec
adc
xchg
fs
inc
sbb
cmp
iret
mov
sub
hlt
dec
sbb
ret
lret
mov
loop
pushf
into
push
pop
mov
xchg
loope
mov
sub
lahf
mov
scas
fs
ljmp
cwtl
fidivrl
test
mov
mov
test
xchg
or
mov
pop
ja
jecxz
adc
jmp
rorl
aam
cmp
adc
sbb
or
js
ret
sbb
jno
jle
rorl
xor
pop
fs
je
pop
xchg
jns
xchg
mov
and
les
hlt
addl
push
fstpt
stos
push
jo
xor
test
push
test
mov
aam
hlt
aaa
sti
push
push
mov
sbbb
leave
int3
mov
icebp
cmc
mov
xchg
dec
hlt
movsl
mov
mov
ja
inc
mov
fdivrs
in
jmp
pop
jne
ret
jmp
stos
xor
or
aam
mull
or
in
sbb
jg
lret
fwait
lcall
mov
xor
fcompl
push
icebp
int
push
xchg
inc
mov
lods
lahf
imul
xchg
scas
xchg
add
enter
test
roll
cwtl
fcompl
inc
adc
inc
cmc
arpl
xor
xchg
stos
and
imul
jne
lods
ss
cmp
int3
shufps
and
cmp
lcall
xor
pop
inc
push
lds
and
fdivrl
mov
je
pop
arpl
daa
dec
enter
sbb
lret
add
push
repnz
stos
dec
pop
jl
sbb
test
mov
lret
sbb
pop
inc
mov
cmpsl
add
in
mov
xchg
and
cmpsb
xchg
jp
fxch
das
rolb
pop
inc
mov
sub
adc
mov
fcmovb
daa
aas
inc
mov
dec
cmp
add
mov
sub
add
mov
dec
sub
mov
jno
out
mov
sti
sub
int
je
sbb
dec
jnp
ljmp
cmp
add
mov
add
shrb
dec
sbb
popf
or
or
iret
leave
adc
fldl
mov
lds
push
clc
loop
mov
je
hlt
jecxz
push
cmpsb
enter
or
arpl
or
sbb
xchg
mov
sub
inc
movsb
dec
adc
enter
mov
mov
push
out
in
xchg
fst
mov
stos
mov
imul
adc
divb
and
sbb
jb
mov
mov
or
es
aam
sbb
jp
sbb
cmp
out
xchg
push
dec
push
inc
clc
bound
shl
add
aaa
jmp
ss
out
mov
mov
icebp
dec
icebp
out
cmc
push
fists
iret
ret
dec
test
loop
sbb
cmp
imul
add
mov
addr16
pop
pop
fbld
fsubrs
cmc
lahf
out
mov
mov
cmp
jnp
ja
adc
aad
aaa
pop
adcb
rclb
in
add
add
stos
jae
and
iret
adc
iret
icebp
mov
xchg
xorb
push
ja
std
sub
lcall
dec
in
adc
addr16
mov
insl
dec
mov
lods
mov
dec
jne
inc
pop
sbb
sbb
sbb
test
adc
scas
mov
mov
xorb
adc
in
jbe
notl
jg
outsb
add
std
xchg
adc
jge
dec
jno
sub
lods
ret
mov
sbb
mov
orb
dec
mov
lcall
mov
cmp
ljmp
je
testl
mov
jne
mov
or
subb
push
pop
pop
jg
clc
lods
inc
jge
pop
push
add
xchg
inc
pop
mov
ret
cltd
xor
cmp
mov
lock
inc
sub
pop
insb
imul
inc
cltd
mov
rolb
aas
pop
mov
aad
and
pop
mov
pop
pop
lea
stos
out
jmp
jnp
cmpsl
in
adc
and
cmp
test
mov
lret
mov
hlt
sbb
lahf
inc
mov
inc
imul
push
sbbl
sbb
aam
push
stos
ljmp
std
js
jnp
cld
shrl
repnz
push
aad
aad
sbb
or
add
mov
dec
xchg
movsb
xchg
sbb
fmul
arpl
mov
addl
adc
fmuls
and
xchg
xchg
inc
into
mov
fdivrp
jo
inc
scas
ds
jne
pop
jecxz
and
negl
das
insl
enterw
aaa
idivl
movsb
stc
xchg
xchg
and
dec
mov
lock
into
or
je
push
mov
enter
inc
fmuls
xorb
pop
mov
xchg
inc
xchg
adc
jge
js
daa
jle
in
pop
sbb
push
push
pop
popf
aas
jae
cmp
mov
in
sarl
xor
push
xchg
neg
fnstcw
out
adc
loopne
int
add
mov
mov
lods
dec
jmp
xor
xchg
fisubrs
push
and
add
fcomip
popf
dec
cmp
lods
test
cmp
or
jmp
scas
jmp
aam
push
xchg
fidivs
mov
aam
lcall
daa
sub
xlat
gs
std
mov
lret
shlb
inc
jnp
sbb
pop
imul
fwait
jns
mov
jecxz
sub
lock
mov
cltd
leave
adc
sub
das
testl
jbe
mov
sbb
add
repz
mov
aas
pop
lahf
jbe
inc
lret
in
mov
mov
out
push
mov
test
jne
movsb
dec
add
sbb
test
or
fstpt
pop
inc
or
cld
push
aad
clc
cwtl
mov
jp
inc
cmp
dec
and
mov
or
mov
mov
cmp
in
pop
cmp
pop
jmp
xchg
pop
leave
push
pop
lahf
sub
cltd
or
outsb
jmp
mov
outsb
enter
hlt
xlat
lahf
fcomps
lcall
aam
push
push
sahf
out
push
push
cli
mov
loopne
dec
xchg
push
int
addl
fucompp
leave
cwtl
ret
leave
das
jae
fsub
cs
xor
sbb
outsl
test
popa
fcoms
aaa
push
mov
loope
jmp
dec
ljmp
jno
mov
lea
lds
xorl
jns
adc
push
dec
xor
push
daa
cmovs
insl
mov
stc
push
mov
pushf
iret
lods
add
pop
push
push
cli
jle
sbb
repz
pusha
xlat
mov
in
mov
mov
int
les
lods
aas
or
sti
lret
imul
in
outsl
adc
shrl
ficomps
js
push
scas
cmpsl
or
or
xchg
pop
sub
pop
push
xor
into
cmp
push
pop
push
pop
js
xor
faddl
pop
mov
movsb
dec
fs
mov
jbe
inc
fildl
mov
lds
imul
jge
test
ds
lret
shrb
jge
cmp
and
jnp
sbbb
cmpsl
push
out
std
xor
or
shll
stos
insb
jmp
or
call
mov
lock
sahf
cmc
jp
fisttps
or
and
pop
insl
ret
mov
call
gs
sbb
lcall
inc
loop
daa
jno
je
pop
xchg
pop
fimuls
xchg
push
movsl
movsl
or
lods
stos
add
sbb
pushf
xchg
jle
mov
mov
jg
jnp
mov
sti
inc
inc
repnz
fdivs
lret
cmpsb
add
push
call
dec
movsl
add
and
fcompl
ss
jp
in
sbb
movsl
cmc
pop
loop,pn
mov
daa
outsb
adc
adc
ret
cld
mov
cmp
inc
stos
les
pop
pop
pop
iret
or
xchg
dec
roll
xchg
jecxz
push
inc
push
loope
test
pop
int3
adcb
lcall
ljmp
rolb
push
nop
notl
fidivrs
xchg
sub
xchg
inc
fldl
mov
mov
mov
pop
enter
das
mov
cmp
jnp
aad
loopne
dec
idiv
mov
popa
cmpsl
cld
dec
mov
jecxz
mov
push
push
pop
lcall
sbb
popa
lds
in
jae
mov
jo
inc
or
dec
rcll
push
adc
mov
inc
cmp
ljmp
in
add
push
xchg
adc
push
insb
push
jne
cmp
in
jge
dec
jns
and
rcrb
cmp
mov
inc
mov
in
xchg
out
push
fstpl
leave
enter
sub
jno
stc
fidivs
mov
roll
std
pop
cmp
fwait
test
ret
sbb
je
adc
dec
nop
and
xor
pusha
jg
ss
imul
and
fsubl
jbe
movups
and
jno
outsl
xorl
adc
push
dec
fidivrl
pop
mov
in
mov
flds
orb
xor
mov
enter
inc
lods
test
mov
sarb
xor
cmp
inc
lock
iret
setb
cmp
lock
dec
out
lods
frstor
pop
and
in
add
insl
repz
fs
pop
xchg
add
int
jp
lods
dec
jne
adcl
add
xchg
lcall
cmp
in
adc
xorl
cmp
hlt
jmp
jg
mov
push
mov
or
hlt
popa
ds
stos
push
mov
sahf
pop
and
es
xor
mov
push
and
les
test
std
jb
lea
mov
and
outsl
pop
aaa
push
sbb
or
jne
adc
mov
mov
sub
cmp
cs
cmpsb
loop
pop
leave
xor
cmp
xchg
dec
insl
shlb
stc
cmpsl
xchg
js
hlt
out
into
mov
rcrl
add
lds
inc
icebp
mov
es
add
mov
dec
ret
xchg
add
movsb
rcrl
and
mov
cmp
imul
xor
out
scas
and
dec
insl
cs
sub
hlt
lret
out
mov
mov
bound
mov
stos
xchg
mov
jp
fs
in
mov
imul
aad
pop
xchg
pushf
pop
rclb
sub
imul
and
test
cmpsb
cmc
frstor
pop
jle
mov
mov
pop
xchg
les
push
bnd
jle
xor
mulb
outsl
adc
or
es
cmp
mov
nop
arpl
lods
push
sub
fcomps
imul
adc
sti
sub
pop
enter
enter
push
gs
mov
mov
pop
cmp
jo
or
add
ret
rclb
lret
xchg
pop
xor
cmp
add
inc
call
mov
dec
sub
jbe
das
push
jns
int
mov
push
fdiv
addr16
pop
pop
popa
bnd
xor
inc
cmc
sub
imul
mov
sahf
sarl
test
rolb
mov
push
mov
pusha
out
add
fsubl
fldenv
fbstp
jl
jb
cli
inc
and
sbb
jl
stos
dec
push
cmp
jle
flds
outsl
inc
imul
sbb
out
shll
mov
fcoml
fcomps
out
pop
lods
dec
jnp
sub
lcall
in
cmpsl
aad
arpl
adc
sti
in
cmc
clc
push
rcrb
loopne
dec
imul
mov
or
dec
and
xor
pop
stos
aas
cs
dec
rcl
push
sahf
cltd
into
cs
mov
inc
sbb
addr16
add
loope
call
push
ljmp
fs
shrl
lods
sub
push
outsl
lcall
xchg
push
decb
dec
test
bound
mov
or
popf
jo
sbb
cwtl
xchg
push
aad
mov
addr16
push
sub
mov
adc
fmul
imul
inc
imul
icebp
pop
sti
mov
sub
and
in
sbb
mov
sub
push
sbb
xchg
out
pop
mov
mov
outsl
push
push
dec
cmp
mov
sarb
pushf
jp
jno
pop
add
cmp
jne
cmpsb
leave
pop
sahf
xchg
shll
aaa
fwait
hlt
fisubrs
fs
mov
ljmp
push
jb
or
jg
dec
and
jbe
or
dec
cmp
jb
inc
inc
cmpsl
ja
pop
addl
les
sub
test
lahf
repnz
sbb
imul
or
and
jmp
repnz
cmpsb
push
add
mov
cmc
sub
xchg
push
pop
mov
xchg
sub
loop
mov
lcall
or
ficompl
leave
pushf
mov
xchg
std
or
das
dec
cmp
clc
add
fmull
push
shlb
sub
xlat
addr16
mov
in
out
pop
xchg
xchg
loope
loop
test
mov
pop
push
adc
mov
pop
daa
or
out
mov
mov
push
pusha
cmp
mov
ret
je
push
call
mov
mov
aaa
mov
aas
mov
cmp
fstpl
inc
dec
pop
push
icebp
sub
sarb
cmp
int
popf
sub
notb
fdivr
in
pop
cs
mov
xor
mov
sbb
sbb
inc
jecxz
xor
mov
adc
jo
daa
push
pop
cmp
xchg
pushf
jle
push
loop
pop
rorl
test
sub
mov
and
loop
inc
es
fxch
push
cmpsb
cltd
js
and
inc
repnz
xor
subl
pop
mov
bound
mov
sbb
loope
cli
jl
int
pop
bswap
dec
dec
repnz
leave
inc
dec
mov
xor
adc
xchg
inc
xor
fidivrs
mov
test
sub
sub
sub
fwait
mov
jne
push
je
test
shl
lcall
cmp
mov
addr16
push
cld
or
addr16
pop
push
lods
push
movsl
pushf
mov
in
jl
sub
push
sti
scas
or
mov
test
es
mov
sbb
mov
add
xlat
inc
and
cmp
test
cltd
ja
test
cmp
fwait
jns
es
mov
icebp
rorl
sbb
or
xor
mov
sbb
out
rol
add
dec
les
add
daa
and
setp
fisubrl
les
out
push
inc
xchg
or
mov
xor
loop
lcall
roll
aaa
adc
fs
aaa
outsl
fs
fidivrs
inc
push
sbb
arpl
or
aas
pushf
clc
cmpb
incl
adc
in
dec
mov
daa
mov
jp
xchg
fs
pop
out
mov
fildll
xorb
mov
sub
sub
shr
sub
xchg
repnz
ljmp
stc
cmp
out
popf
iret
push
loope
sbb
xor
int3
mull
mov
xchg
xchg
pop
outsl
jge
or
push
sub
and
xchg
mov
addr16
lods
lds
enter
mov
popa
jb
xor
adc
pop
jo
repz
adc
je
aam
or
xchg
int
ds
dec
mov
lret
jmp
fists
enter
adc
scas
mov
dec
xor
dec
loopne
mov
rolb
outsl
outsb
daa
repnz
out
push
fisubl
cmp
xlat
leave
jge
inc
or
mov
jo
jns
shll
ja
push
mov
std
mov
aad
pop
fldenv
mov
pop
add
pop
xor
shll
mov
pop
mov
jl
sarb
inc
jae
adcb
fadd
fst
push
cmp
aaa
int
adc
xor
call
fwait
sub
push
sbb
pusha
add
adcl
inc
push
test
je
fstl
pop
jmp
add
es
pop
addr16
data16
or
xchg
pop
pop
pop
jmp
loopne
xor
cmpsl
dec
sbb
fisttps
icebp
mov
xchg
push
cmp
fists
loopne
data16
dec
lcall
and
rcr
mov
loope
ljmp
divb
call
dec
lock
out
and
pop
mov
stos
inc
push
sahf
pop
add
popf
clc
scas
push
cbtw
push
adc
rcrl
pop
or
mov
cmp
hlt
sub
loopne
mov
sub
xlat
repz
dec
push
mov
or
sbb
cmp
mov
je
and
dec
sbb
adc
insl
push
dec
outsb
xchg
ja
repz
or
ss
xchg
cmp
mov
add
xchg
fcoml
gs
adc
lret
dec
cmc
xchg
xor
jp
sarb
dec
inc
add
dec
sbb
xchg
and
loope
jge
cmp
dec
mov
arpl
jb
lret
outsl
sub
inc
mov
jo
jb
or
xchg
add
shr
inc
xchg
shll
mov
rcr
sub
xchg
jo
xlat
adc
or
jge
cmpsl
xor
lock
int
jns
sbb
out
stos
cwtl
push
out
jmp
shll
jle
cwtl
pop
out
fiaddl
jne
mov
out
fsubrl
das
jmp
sub
rcrb
bound
push
cld
pop
or
scas
pop
jns
aam
pop
mov
push
sub
xchg
ficoml
sub
das
orl
movsb
scas
js
jae
repz
mov
dec
push
jns
cmp
loopne
cs
aaa
and
dec
cmp
jns
int
aam
push
int
cwtl
jle
push
jge
mov
ja
xor
mov
bound
lds
dec
inc
popa
clc
loopne
lock
or
push
sub
rcrl
stc
adc
push
cmp
insl
pop
push
or
pop
aas
sbb
xchg
out
xor
inc
scas
enter
push
mov
inc
pop
mov
nop
fiaddl
or
pop
fnstenv
add
cmpsb
sub
les
mov
pop
mov
jb
sub
or
push
add
or
xchg
cs
hlt
out
andb
test
insl
mov
js
movsb
adc
and
vcmpsd
dec
mov
in
out
adc
jmp
and
call
mov
es
jae
sbb
xor
push
pushl
jae
inc
mov
aaa
repnz
pusha
mov
or
mov
inc
sub
dec
mov
nop
lock
jg
mov
das
inc
pop
push
xchg
and
pop
adc
outsb
imul
mov
xchg
add
ljmp
xchg
or
loope
jns
pushf
mov
out
in
loope
imul
dec
fcmovnu
repnz
jne
js
enter
das
in
les
dec
dec
in
cld
pop
mov
jg
pop
sub
push
jne
lods
mov
adc
test
lret
jecxz
lds
std
nop
outsb
ret
jecxz
dec
adc
mov
mov
push
jne
dec
cmp
or
mov
cwtl
imul
pushf
add
and
bound
mov
sti
ret
sub
loope
sti
jns
mov
jecxz
mov
aaa
es
jb
adc
es
xorb
push
and
xchg
sbb
xchg
xor
test
icebp
movsl
xchg
add
nop
mov
mov
roll
cld
repz
popf
jne
and
leave
sub
test
and
inc
adc
mov
sbb
mov
add
int
mov
xchg
mulb
repnz
pop
push
cld
cwtl
mov
adc
cltd
pusha
popa
mov
sbb
test
sbb
cmpb
mov
push
out
leave
or
or
xchg
std
push
in
xor
cmp
scas
cs
xlat
adc
push
lods
pop
cmp
bound
insl
add
lds
pop
data16
out
js
mov
lret
in
aad
mov
fsubl
cmp
xchg
loopne
inc
dec
sti
xchg
push
cli
inc
fsubrl
push
mov
mov
dec
test
xchg
mov
push
shrl
inc
test
jno
push
xchg
into
stos
and
mov
shr
rorl
add
cmc
push
movsb
cmpsl
imul
enter
js
push
xor
rcll
jb
mov
mov
ret
das
adc
movaps
andl
inc
fwait
add
scas
je
addr16
in
mov
mov
movsb
shlb
xchg
inc
inc
shll
adc
cmp
cmpl
int
dec
ror
shll
inc
lds
int
test
mov
mov
cltd
aaa
insl
subl
xchg
sub
push
or
inc
cs
and
scas
imul
mov
fdiv
iret
inc
les
rcrl
pop
push
loope
repnz
fs
mov
push
push
lods
int
out
movsl
sub
out
int3
cmp
add
fisubrl
push
pusha
cmpsb
inc
lods
pop
es
xchg
test
pop
scas
and
jp
mov
mov
adc
sbb
add
mov
jmp
fdivs
mov
aas
mov
fs
and
mov
nop
inc
add
jle
push
push
or
sbb
cli
pop
ljmp
lahf
jge
jbe
and
in
dec
out
loop
dec
sarb
xchg
orb
xchg
inc
ljmp
push
add
xchg
inc
xor
test
xlat
xchg
push
xchg
pop
push
mov
scas
xchg
mov
ja
jmp
fstp
sbb
mov
inc
sbb
pop
fs
dec
lcall
shl
xchg
das
stos
in
xchg
out
adc
push
mull
leave
cmp
bound
repz
outsb
cmp
insb
add
cs
adc
scas
and
xor
xchg
sub
cmp
jl
push
mov
pushf
aaa
add
ss
push
mov
push
xor
mov
scas
or
inc
push
xor
lcall
xchg
xchg
mov
cmp
pop
movsl
inc
sarb
add
add
mov
insb
outsb
inc
sbb
out
inc
adc
cld
lahf
cmp
and
rclb
das
in
inc
inc
push
xchg
xchg
fidivrl
lods
add
movd
add
cmp
push
push
rcrl
xchg
imul
aad
movsl
pop
xchg
ja
hlt
pushf
inc
mov
pop
test
cltd
adc
sarb
xlat
les
xor
mov
cmc
adc
ds
mov
outsl
ret
rcrb
pop
popa
popa
cli
xchg
xor
out
or
cmp
aaa
mov
out
mov
je
ret
jno
mov
fisttpll
int3
push
shrl
sbb
xchg
imul
and
bound
ret
push
sub
jae
clc
call
mov
test
scas
mov
add
and
faddp
mov
dec
push
gs
or
outsl
mov
sbb
adc
into
xor
popf
mov
lods
sub
fdivrl
push
jp
jne
jno
fwait
leave
dec
xchg
sub
icebp
je
inc
xchg
jo
xor
insl
mov
pop
dec
adc
insl
sahf
add
sub
cmp
sbb
xchg
ljmp
xor
cld
aam
push
js
inc
dec
mov
xchg
into
mov
xchg
xchg
jge
mov
in
jle
fwait
adc
push
sbb
lock
loopne
test
xchg
mov
inc
int
cld
cmp
arpl
cmp
je
mov
sti
cld
and
popa
lcall
jge
js
lcall
jmp
jg
adcl
mov
or
insb
in
ja
fisttpl
adc
stos
inc
dec
cmp
jecxz
movsb
jno
push
roll
pop
add
dec
js
xchg
dec
rolb
fildl
imul
mov
lock
push
sti
test
lcall
xchg
cltd
and
loopne
mov
fimuls
inc
mov
cmp
repnz
mov
stos
fnstsw
stc
add
push
iret
push
icebp
imul
adc
xchg
fsubs
sbb
ret
loop
sbb
push
jmp
cmp
aam
ja
pop
fimuls
mov
xor
lea
std
shlb
push
pop
repnz
push
pop
sub
stos
js
sub
sub
shlb
push
push
pop
xor
add
das
mov
mov
jmp
xor
movsl
in
pop
das
imul
fs
push
jnp
xchg
cmp
and
cmp
or
jae
notb
add
jno
xor
jp
cs
fisubs
hlt
jle
insl
mov
mov
into
add
arpl
dec
enter
into
mov
fimull
xchg
fstps
xlat
sbb
add
lods
popa
test
and
push
repnz
jmp
outsb
sub
adc
push
xor
or
lea
int3
fs
sbb
pop
push
mov
cmc
les
push
cmc
and
mov
or
dec
sti
addr16
fcoms
mov
push
dec
mov
out
cmp
les
xor
fs
pop
adc
cmp
addr16
jns
inc
pop
cs
sub
mov
lods
adc
pop
and
pop
lret
adc
rcrb
or
test
fists
int3
mov
cli
jae
cmpsb
jno
adc
ret
ret
xchg
pop
push
stos
mov
ss
dec
dec
repz
popf
jbe
scas
lcall
xor
in
dec
mov
test
lods
mov
xchg
outsb
scas
popl
push
xchg
inc
adc
push
dec
pextrw
push
xor
jns
cli
insl
scas
pop
add
xchg
lcall
daa
dec
adc
loope
cli
repnz
outsb
outsb
std
mov
sub
aad
jmp
sqrtps
popa
cwtl
pusha
aad
ja
pop
in
push
stos
popa
pop
aam
aad
repz
mov
in
sbb
mov
stos
or
lret
enter
adc
xchg
hlt
dec
push
in
xlat
in
sbbb
cmp
stos
nop
psubb
add
adc
or
icebp
jno
push
jmp
data16
out
mov
scas
arpl
push
rcrl
push
and
pop
dec
sub
stos
ljmp
sub
in
inc
xor
jecxz
rolb
lret
ja
pop
xchg
mov
sub
mov
mov
mov
adc
mov
es
mov
add
cmp
jbe
rclb
repnz
xor
lods
hlt
std
ficoml
clc
shr
sub
inc
sub
sti
add
sbb
idivl
arpl
es
jmp
pop
and
mov
fwait
hlt
cmp
add
mov
mov
clc
push
lock
scas
mov
cmp
int3
fwait
in
cmp
pop
out
andb
inc
adcb
mov
mov
mov
pop
or
insb
dec
and
data16
js
cmp
jg
jns
adc
and
test
xchg
call
xor
jg
jne
dec
cs
pop
dec
cmp
outsl
cwtl
sbb
cmp
inc
mov
mov
aaa
adc
push
adc
out
gs
adc
lcall
xor
lret
scas
xor
outsb
pop
shl
mov
push
aam
lock
mov
pop
outsb
movsb
addb
ret
inc
sub
dec
call
arpl
je
cmp
lods
ja
rcll
daa
mov
scas
loopne
jbe
cwtl
nop
mov
test
stos
out
mov
adc
mov
sub
mov
or
dec
jp
cli
bound
out
iret
into
sbb
mov
xchg
mov
mov
fldl
pop
jg
cwtl
xchg
mov
stos
pop
ret
pop
adcb
mov
jge
cli
test
sarl
jl
or
arpl
imull
out
aaa
sbb
lret
push
int3
sub
jb
test
sub
adc
xchg
pop
daa
push
mov
jp
dec
mov
enter
mov
mov
or
xor
xor
push
jne
mov
push
jnp
rolb
out
push
sub
adc
and
jg
sbb
mov
mov
pop
mov
sub
nop
imul
popa
addr16
lcall
push
fstpl
es
aas
je
repnz
fwait
iret
data16
test
add
push
lahf
sbb
push
out
adc
add
mov
clc
dec
and
data16
push
cmp
xlat
sti
lret
jns
cwtl
shr
lods
aam
je
mov
mov
int3
ret
out
pop
push
jl
popf
cltd
dec
lret
xchg
enter
push
insl
push
mov
aas
add
add
jne
mov
outsb
in
inc
sbb
jnp
imul
jne
dec
call
xchg
adc
lret
pop
xor
andl
xchg
pusha
mov
mov
mulb
mov
in
mov
mov
fsubl
ja
fcompl
push
mov
sbb
sbb
and
cs
test
fldcw
mov
push
jle
add
sbb
pop
push
fistl
fcos
call
cmovo
dec
les
outsl
add
popa
dec
jmp
push
inc
jge
xchg
out
jmp
sbb
popf
pusha
mov
push
dec
test
xlat
test
aam
adc
lods
and
test
jmp
mov
adcl
push
and
xchg
sbb
iret
cmp
ret
inc
imul
jmp
xchg
push
add
das
mov
or
or
bound
cld
lea
loope,pt
in
fldt
or
roll
popf
mov
push
push
fdiv
push
nop
cmpsb
mov
push
jne
adc
and
std
sub
fisttps
adc
in
lods
shlb
loopne
iret
jae
xchg
arpl
ss
pop
ret
xchg
mov
scas
fnstcw
dec
adc
push
cmp
loopne
inc
add
int3
cmp
add
push
ret
xor
dec
cs
xor
cmp
lret
push
mov
pop
jecxz
push
adc
pushf
add
loop
mov
lds
inc
cmp
mov
sbb
test
xchg
gs
out
fadd
sbb
cmp
daa
push
push
icebp
fiadds
cli
add
inc
push
ja
jno
fildl
repnz
shl
loope
sbb
les
out
in
lret
pop
cwtl
push
ret
sarl
mov
mov
pushw
data16
jp
lret
or
stos
jp
outsl
xor
rcll
dec
xchg
mov
add
xchg
mov
mov
or
push
jne
lock
xchg
loop
test
cltd
out
push
jecxz
insb
dec
jno
ljmp
and
cmp
das
mov
push
out
push
jle
push
lds
xchg
lods
push
sbb
arpl
in
push
adc
inc
fwait
into
lock
dec
sbb
push
mov
mov
adc
jo
sbb
pop
cmp
mov
repz
lahf
or
cmpl
mov
push
repz
inc
mov
or
and
leave
fildll
xchg
mov
test
sbb
js
xchg
and
xchg
je
xchg
or
std
sub
repz
or
add
fnstcw
pop
ds
and
call
leave
add
sar
pop
mov
dec
lea
dec
sbb
mov
dec
pop
push
xor
add
rorb
sub
adc
mov
xchg
ja
idivl
ret
mov
xorb
int
mov
mov
push
push
imul
jg
dec
pop
cmc
out
jecxz
mov
sbb
mov
pop
rol
push
insb
out
sub
sbb
js
subl
adc
repz
xchg
pop
subl
or
rcrl
cmc
xor
data16
xor
jl
fstpl
je
jbe
adc
mov
push
xchg
mov
stc
icebp
mov
jnp
sbb
fstp
add
push
jle
mov
mov
xor
std
loope
xor
jge
sbb
adc
aam
rolb
out
dec
out
lcall
dec
push
test
mov
mov
xor
mov
fprem
addr16
sub
cmp
add
fwait
mov
mov
in
push
lods
ret
jle
outsl
xor
jae
test
mov
add
cmp
fildll
inc
gs
cli
fidivl
cmp
and
hlt
fwait
ror
dec
pop
loop
pop
sub
mov
lahf
je
xchg
mov
call
push
add
shll
in
std
xchg
inc
jae
or
mov
cmp
orb
nop
mov
mov
adc
mov
sbb
inc
subl
jo
xchg
jl
jo
or
aad
pushf
mov
push
sub
pushf
sti
lahf
mov
pop
mov
push
ss
jmp
mov
mov
push
pop
rcl
adc
pusha
subb
sub
add
mov
scas
test
sub
sbb
jnp
adcb
arpl
or
cmp
add
mov
jne
aas
adc
sub
mov
mov
ret
push
and
loop
jp
dec
inc
sub
cwtl
clc
leave
in
add
adc
imul
std
loop
in
push
dec
cmpsb
cltd
outsb
seta
dec
pop
add
ret
ud0
and
adc
andb
jnp
pop
jae
in
test
es
pop
mov
leave
mov
push
enter
shl
gs
pop
icebp
aam
or
clc
adc
js
sbb
imul
clc
mov
pop
loope
adc
xor
pop
fdivrl
push
movsl
pop
sbb
repnz
iret
adc
jae
dec
mov
cltd
hlt
mov
bound
mov
fldt
shll
out
mull
push
lock
mov
sub
gs
add
lret
push
les
dec
ficoml
inc
scas
push
je
ss
inc
insb
popf
movsl
dec
mov
mov
cmp
test
and
cwtl
and
or
jb
stos
arpl
repnz
shrl
imul
dec
dec
test
dec
sub
fs
cwtl
mov
xor
rcll
push
lock
sbb
in
std
repz
or
ret
adc
dec
pop
mov
ja
push
shlb
and
in
shl
xlat
mov
jb
sbb
sub
cltd
mov
addr16
sbb
int3
outsl
lret
and
pop
push
adc
in
push
jne
in
jge
jnp
jmp
lods
pushf
movsb
jnp
flds
out
inc
dec
jl
xchg
aas
test
test
js
loop
pop
mov
pop
popa
mov
imul
jge
jg
test
adc
flds
mov
push
push
cld
push
ljmp
hlt
push
in
lods
je
pop
aaa
push
cmp
sub
adcb
jo
imul
das
cmc
sbb
mov
jg
pop
fbld
pop
jns
fmul
ficomps
imul
sbb
add
pop
test
pop
dec
pusha
and
adc
rolb
cmpsb
aad
outsl
cld
cwtl
lock
and
xchg
mov
bsr
add
aam
jb
sbb
mov
xchg
aaa
bound
mov
jnp
lods
or
mov
dec
pop
loope
sahf
inc
out
icebp
push
mov
scas
shrb
sub
fistpl
les
xchg
xor
adc
xchg
xor
lods
popf
icebp
pop
push
fcmovnbe
mov
pusha
enter
andl
xor
jp
faddp
push
xchg
arpl
std
test
xor
pop
ret
stos
xchg
test
cmp
fwait
dec
xor
xor
outsl
mov
jno
js
xor
stos
lock
jl
in
xlat
inc
mov
fwait
inc
test
pop
sub
sbb
fisubs
dec
push
cmp
cmp
dec
mov
or
jl
mov
jo,pt
lds
or
push
mov
jecxz
addr16
mov
sbb
pushf
push
fsubrs
push
fbld
andl
push
push
mov
nop
movsl
movsl
inc
jle
xor
repnz
mov
ss
stos
mov
scas
mov
sahf
push
fadd
jno
xchg
jg
dec
and
pusha
mov
leave
mov
push
add
jbe
lret
and
shll
xorb
icebp
adc
or
sbb
test
bound
loopne
aad
mul
mov
mov
adc
sbb
fnstcw
push
pop
and
hlt
jp
inc
mov
or
das
cmp
xor
push
bound
and
gs
addr16
lods
push
iret
sub
repz
and
cmp
ret
aaa
cmp
inc
sbb
fldenv
mov
adc
pop
add
inc
std
push
mov
push
cmpsb
pop
cmp
xlat
iret
mov
cmp
pop
es
xor
cli
ljmp
xor
xchg
jmp
sub
sbb
in
mov
jbe
int3
je
jge
into
cmp
std
and
dec
jo
pusha
xor
test
adc
inc
cmc
cs
xchg
pop
push
push
cmp
pop
in
icebp
out
in
imul
xor
dec
push
push
fldt
addr16
inc
fcompl
ret
lds
adc
insb
mov
stos
popa
insl
dec
es
jno
ret
jmp
ret
inc
adc
jg
call
sbb
inc
loope
sub
insl
adc
sahf
int3
cld
xor
dec
adc
push
in
in
push
mov
int3
into
inc
insl
jb
call
sahf
add
addr16
xor
fiadds
jo
lock
dec
pusha
dec
add
or
nop
out
call
mov
fs
pop
push
call
jo
fisubrl
xchg
or
mov
mov
sub
jp
jns
fildl
jecxz
inc
and
mov
pop
add
iret
mov
push
pop
push
sub
jecxz
popf
add
gs
dec
xchg
imul
insb
sub
adc
jge
cs
push
mov
mov
jno
cmp
subb
adcl
lods
jbe
mov
pop
mov
repnz
and
ljmp
pushl
arpl
jb
sub
pop
push
dec
push
jl
insb
push
pop
ret
aad
cmp
js
cwtl
adc
cld
mov
jmp
push
push
aaa
sar
jmp
jbe
push
or
push
sar
and
lret
push
pop
adc
cmp
imul
enter
and
add
popa
mov
test
fdiv
test
jg
loopne
js
mov
dec
in
xchg
adc
movq
fucomi
aad
imul
sbb
arpl
pop
mov
call
or
sub
repz
mov
sub
push
cmc
cld
push
push
pusha
xchg
lret
push
xchg
pop
lock
xchg
xchg
push
jl
int3
pop
pop
xor
xchg
xchg
je
int3
std
mov
arpl
xor
dec
mov
stc
clc
add
cld
mov
sahf
dec
sbb
gs
mov
insl
rorb
or
in
mov
add
jbe
pop
insb
int3
push
fiadds
test
mov
inc
aaa
in
dec
and
pop
shll
or
idivl
dec
inc
movsb
fsubrp
mov
xor
pusha
xchg
lahf
inc
mov
fsubl
jp
popa
mov
in
xchg
cli
dec
or
xor
aad
nop
cwtl
cmc
shr
xchg
mov
dec
or
cmpsl
movsl
mov
fcoml
mov
sub
ror
jp
push
xchg
testb
add
popf
adc
sahf
jno
mov
imul
pop
or
gs
jae
jg
in
mov
aad
rorb
imul
or
fists
fs
xchg
xchg
xchg
pop
subb
jae
repz
notl
jae
inc
jae
push
mov
jne
mov
or
jle
xor
cli
dec
sub
xchg
ds
sbb
add
fmull
jg
sub
xor
stc
jno
pop
cmp
sub
repz
call
mov
mov
and
aad
test
cmp
mov
or
mov
dec
or
push
pusha
cs
inc
cltd
inc
cmp
xor
gs
addr16
ds
inc
dec
pop
movsl
push
dec
cmp
ja
jg
in
imul
clc
cmp
ret
arpl
js
test
daa
in
mov
cmpsb
cmp
xchg
inc
xchg
push
mov
imul
push
lahf
test
ds
push
mov
loopne
sub
xchg
nop
adc
inc
adc
bound
and
ss
call
pop
adc
mov
mov
mov
arpl
pop
jp
inc
mov
sub
ss
test
aas
iret
mov
mov
out
cmp
loop
mov
mov
push
jne
iret
mov
out
cmp
xor
pushf
mov
jmp
shrl
push
dec
xor
xor
je
xor
xor
faddl
insl
rcr
inc
fldt
xchg
and
xorl
inc
popa
movsb
mov
push
arpl
push
es
mov
addr16
jno
ss
mov
test
xchg
jg
lret
dec
or
add
xchg
adc
jle
pop
icebp
mov
and
out
xor
mov
repnz
mov
je
and
imull
jae
test
or
ret
xor
hlt
xchg
or
cmp
fldln2
xor
out
mov
fs
jnp
mov
idivb
daa
adc
outsb
mov
inc
movsl
push
es
dec
arpl
mul
push
in
cld
jo
push
or
int3
xchg
or
jle
push
fdivp
sbbl
sbbb
imul
data16
xorb
adc
neg
scas
jge
push
push
mov
or
sbb
ss
inc
outsb
mov
stos
and
sub
lock
pop
or
incl
lock
cmc
scas
std
lret
sbb
adc
dec
cmp
sarb
mov
pop
lcall
push
jae
mov
sub
js
add
add
jno
enter
fs
cmp
dec
outsb
int3
cmp
ret
fldl
sbbb
repnz
in
dec
sbb
mov
pop
je
sbb
neg
lcall
iret
bswap
mov
pop
or
outsb
ret
ds
xor
shll
and
outsl
fs
das
push
in
dec
dec
sti
stos
pop
outsb
insl
and
inc
out
sub
stc
jbe
std
dec
fldcw
js
dec
movsb
sbb
orb
pop
mov
or
lods
fldcw
pop
push
dec
xor
push
pop
xchg
jge
stos
add
cltd
scas
test
sarl
or
enter
xchg
and
add
mov
mov
roll
lret
xchg
mov
push
add
out
push
sub
je
xchg
cwtl
sbbb
sbb
dec
nop
lahf
loope
aas
xchg
shr
adc
lret
inc
push
movsb
fs
fsubl
fisubl
add
or
sub
imul
jmp
std
neg
sbb
gs
dec
stos
cmpsb
outsl
int
push
sub
int
in
xchg
sbb
rcrl
mov
lahf
clc
jl
xchg
push
dec
cltd
pop
mov
setge
in
repnz
shll
ds
jnp
add
cmp
xchg
mov
adc
out
lcall
sub
into
cmpsb
xchg
push
adcb
pop
inc
out
mov
dec
dec
sub
aaa
icebp
jns
shrl
jno
inc
cmp
cltd
test
outsl
es
ds
out
jns
insl
rcll
inc
movhps
push
cmp
push
iret
je
sub
push
testl
mov
fistpll
mov
mov
aad
xor
fbstp
hlt
push
ds
sbb
nop
sub
stos
inc
jns,pn
pop
into
mov
push
leave
int
in
add
push
call
xchg
enter
cwtl
rcrl
or
stos
or
rcrl
mov
rcrb
and
test
movsb
adc
jb
pop
jns
orl
fsubs
divl
push
shll
dec
pop
and
out
mov
aad
xchg
fwait
dec
cmp
jb
into
mov
xchg
inc
sbb
or
jne
in
mov
sbb
lret
int3
or
xchg
test
outsb
int
loope
mov
add
mov
sti
or
sbb
popa
hlt
mov
rcr
jnp
mulb
and
push
sbb
sub
adc
cmp
out
dec
mov
shll
mov
xchg
pusha
pop
mov
imul
jo
lahf
mov
addr16
frndint
lea
es
gs
jmp
mov
insb
out
out
mov
rolb
cmpsb
xlat
lds
mov
jnp
loop
sbb
inc
les
push
xlat
fwait
pop
mov
cmpsl
es
adc
add
aaa
test
outsb
out
repnz
xchg
jp
or
mov
or
movsl
aad
pop
pushl
pop
jle
imul
shrb
sub
shlb
aas
stc
rolb
addr16
sub
repz
adc
scas
pop
push
sahf
push
fldlg2
popf
sahf
in
xchg
sub
lret
xchg
add
sbb
rcll
push
js
ret
jno
insl
fwait
lods
cmpsb
cmp
adc
mov
test
pop
inc
je
ss
sbb
push
clc
imul
out
mov
mov
inc
adcb
xor
mov
mov
imul
ret
and
dec
dec
ljmp
addr16
ret
out
xchg
jo
mov
sub
cld
iret
push
pop
xchg
subps
jnp
into
dec
test
mov
mov
out
leave
cmp
push
xchg
pop
cmp
mov
or
insb
mov
xchg
into
and
int3
nop
mov
pop
cmp
xor
sbb
movsb
ss
outsl
std
mov
nop
pop
js
xchg
notb
jb
lods
add
stos
imull
hlt
xchg
divl
and
mov
loopne
in
popf
fists
cmp
jmp
xlat
cli
sub
sbb
or
das
adc
mov
rorb
sbb
xchg
mov
jl
adc
lcall
loop
scas
jl
xchg
test
cmp
fs
lock
mov
jl
dec
outsl
neg
mov
in
push
or
cwtl
cmpsl
mov
dec
sarb
inc
nop
pop
mov
mov
mov
xchg
jg
xor
mov
or
gs
xchg
ss
les
xlat
sbb
pop
lock
and
or
pop
addr16
add
sbb
add
into
mov
mov
mov
sub
es
out
insl
loop
jb
and
jae
or
dec
or
sub
add
dec
dec
lret
jno
in
or
sub
sbb
pop
pop
mov
jmp
xor
jg
xor
add
stos
ljmp
xlat
das
sahf
test
add
or
xor
jb
fstl
ljmp
scas
sbb
or
xchg
call
out
mov
sbbb
sbb
push
shl
rolb
add
repz
inc
and
xchg
add
cmp
mov
fdivrs
enter
movsbl
fcoml
jp
scas
xor
push
push
enter
mov
add
stos
sbb
and
cmpsb
lret
adc
push
jne
add
sbb
cld
pop
add
jmp
out
sub
in
mov
imul
mov
mov
push
cmp
sbb
pop
sbb
fiaddl
inc
call
test
lret
data16
mov
enter
fcoms
push
in
clc
inc
cmp
and
subb
cmpsb
jle
push
pop
add
mov
rcrl
movsb
cmp
cmp
imul
sbbb
into
lock
and
mov
call
pop
push
hlt
sti
dec
cmp
mov
mov
in
inc
push
mov
aas
mov
jge
ss
cmp
ds
xor
sbb
cs
fidivrs
cld
add
aaa
mov
lods
ja
add
insb
ficoml
in
push
je
push
icebp
cmp
movzbl
cld
cmp
jge
xor
mov
cli
and
test
pop
add
rorl
mov
rcrl
mov
loope
inc
jbe
out
addr16
push
inc
xor
seta
fcoms
out
fldl
or
or
cmp
pop
jecxz
pop
or
mov
lcall
fisttpl
lret
xlat
adc
test
mov
fidivl
rolb
xchg
jmp
sub
mov
fdivrs
and
sbb
or
pop
jmp
jecxz
int3
cmp
jae
mov
and
sbb
mov
cmpsb
pop
xchg
shr
mov
movb
movl
inc
mov
lret
andl
inc
pop
icebp
sbb
mov
gs
jno
daa
or
andb
jb
leave
push
in
mov
mov
xor
inc
cld
and
sbb
dec
sub
xchg
out
dec
out
jne
add
jnp
jg
enter
adc
sbb
mov
jecxz
aas
test
lds
xchg
push
adc
rorl
loop
pop
outsb
add
push
in
dec
orb
mov
jo
das
out
flds
mov
roll
fdivr
push
pop
rorl
and
and
sub
lret
jnp
sub
movsb
scas
loope
inc
fbld
shll
daa
push
dec
pusha
icebp
xchg
ffree
outsb
add
sub
cwtl
mov
jbe
xor
ja
rolb
xor
mov
mov
in
mov
xorl
pop
cmp
es
dec
mov
fnstcw
push
push
mov
je
clc
cmp
bound
and
push
into
and
test
push
jp
movsb
mov
idivb
movsb
sbb
add
outsb
pop
test
repnz
pop
adc
add
push
and
inc
and
xor
or
fisubl
dec
sbb
lds
dec
adc
pop
fnstenv
nop
dec
push
lods
pop
push
add
insb
or
test
or
in
sub
lret
inc
mov
je
adc
popw
mov
add
dec
xchg
mov
xor
xchg
cmpsb
sub
mov
sti
mov
ret
xor
cli
repnz
adc
mov
fnsave
lods
dec
push
jmp
mov
outsl
sarl
xchg
mull
adc
push
mov
rolb
add
and
in
sub
xchg
xor
sub
adc
push
mov
jecxz
add
push
sarb
ffreep
fldl
js
lods
repnz
icebp
adc
jb
push
dec
mov
je
sub
cli
sbb
ret
popa
jg
addl
aad
sbb
sti
adc
pop
or
mov
and
repnz
jl
test
mov
mov
cmp
cmp
sub
pop
pop
push
int3
add
jmp
sbb
pop
xor
mov
and
push
sahf
sub
sub
outsl
inc
lret
mov
jnp
pop
jnp
dec
mov
jno
rorb
lret
dec
jmp
adc
fstpl
ljmp
push
out
imul
rolb
xor
push
and
lret
jae
daa
push
scas
addr16
xchg
scas
sbb
daa
filds
cmp
pop
mov
pushf
sbb
scas
pushw
dec
test
enter
and
mov
sbb
xchg
xchg
mov
pop
mov
cmovno
ret
inc
mul
lret
pop
mov
es
mov
into
aas
pop
ret
xchg
hlt
cmp
enter
ds
xchg
sbb
repnz
lock
cmp
test
mov
xor
xor
out
popf
lods
std
adc
imul
jns
mov
cmp
xchg
dec
rcl
pop
add
push
mov
lret
add
inc
in
test
push
lahf
sbb
loope
and
ret
push
psrld
push
pop
fcompl
adc
sub
jnp
push
xchg
jnp
ja
push
jge
setp
movl
stos
lods
cmp
mov
jb
insl
xchg
or
mov
inc
fstps
jge
add
and
adc
jmp
aas
or
daa
sub
fwait
or
inc
inc
and
inc
xor
iret
shlb
mov
mov
push
sub
inc
ss
sbb
aam
pop
inc
cmp
ds
pop
je
cmp
and
sub
popf
jnp
cmc
or
mov
sbb
cmpsl
adc
jmp
mov
shrb
pop
adc
fwait
xor
fisttpl
add
jb
sub
add
enter
or
js
adc
clc
scas
jmp
pop
pop
fnsave
xor
push
inc
mov
popa
subb
add
scas
nop
inc
call
lods
nop
call
bound
mov
loopne
in
cmp
mov
add
stos
aas
sbb
dec
loop
cmp
jp
cs
xlat
scas
xchg
add
icebp
stos
push
mov
mov
cmp
lret
sahf
aad
insl
or
aas
cmp
or
movsb
push
cmp
inc
int
cmpsl
or
shlb
mov
xor
xor
mov
fs
xchg
push
xchg
push
push
push
mov
adc
mov
or
addl
nop
out
mov
pop
vprotw
stc
jns
mov
dec
fwait
sub
pop
fucom
jo
loop
lds
test
test
fadd
ds
in
jns
fs
ss
fisubs
jecxz
iret
mov
test
fmull
or
xchg
sbb
adcl
iret
shld
pop
sub
rolb
test
pop
adc
je
cmp
cltd
push
out
mov
mov
rcl
xchg
add
push
sub
into
xchg
cmp
push
rolb
ljmp
orb
xor
leave
lea
cli
push
lock
or
jnp
pop
dec
cltd
push
jp
inc
jns
clc
std
punpckhdq
cmp
jecxz
add
fs
pop
stc
jecxz
xor
sub
gs
mov
ret
push
jle
mov
cli
push
mov
out
xchg
jne
inc
addr16
sub
push
out
aas
push
or
enter
shl
cmp
sub
mov
sub
mov
pusha
les
push
fsub
loop
and
or
loope
or
mov
fwait
jo
sub
fs
scas
dec
mov
pop
popf
jns
or
xlat
pop
test
mov
xchg
push
out
mov
mov
pop
loope
mov
call
xchg
jne
arpl
je
cld
adc
popf
mov
xchg
add
test
or
xor
sub
movsb
mov
movsb
xchg
sbb
lret
insb
dec
xor
into
int
rcrl
stos
cli
daa
xor
dec
jno
mov
mov
mov
jno
inc
xor
cmc
fcomps
hlt
mov
cwtl
loopne
fsubrs
xchg
insb
mul
movsl
lret
push
leave
jmp
lea
adc
mov
or
dec
cli
scas
jae
xchg
dec
or
stos
mov
cmpb
fldl
sbb
mov
je
ret
push
mov
ljmp
std
outsb
in
xchg
pop
stos
aam
mov
les
mov
shlb
sbb
xchg
or
push
lcall
pop
jno
pop
jno
es
cmp
jle
and
push
std
aad
jbe
jo
mov
add
dec
pop
cwtl
fldcw
or
and
imul
dec
xorl
xor
adc
xor
fiaddl
inc
pop
or
scas
mov
xchg
sti
out
push
clc
out
in
push
mov
jno
arpl
fcmovb
arpl
push
mov
loop,pn
pusha
fstpl
fmuls
xchg
push
fdivs
and
bound
dec
mov
sub
mov
hlt
cmp
jmp
cmp
insb
jb
sub
xchg
addr16
lods
push
ljmp
jmp
and
fsubp
loop
sub
lods
sub
mov
mov
jae
push
adc
cmpsl
aaa
xor
push
pop
xchg
pop
ret
lcall
or
or
test
and
inc
das
aaa
mov
clc
pop
sbbb
lret
and
pop
cmp
pusha
fcoms
fistpl
fbld
and
loope
into
jne
xor
or
pop
movsb
bnd
mov
lret
mov
push
or
jne
loope
sti
stc
mov
clc
pop
dec
push
inc
dec
dec
xchg
dec
mov
lods
adc
mov
sbb
jae
call
mov
mov
mov
sub
cli
mov
xchg
sbbb
insl
xchg
pop
lret
and
aad
gs
loop
testb
loop
dec
mov
scas
out
cmpsb
fists
in
lds
mov
out
jge
jae
stos
test
lea
jle
fs
mov
mov
inc
and
push
add
fdiv
mov
xor
mov
bound
mov
fnstcw
iret
loop
pop
das
xor
cli
inc
cmc
adc
lds
insb
andl
pop
int3
jno
scas
sbb
fsubs
addr16
imul
fimuls
inc
mov
popf
idiv
xchg
cmp
xor
jo
xor
mov
xchg
outsb
push
xor
dec
cmpsb
push
cli
or
xlat
and
cwtl
xchg
fstps
jnp
hlt
js
push
call
adc
mov
fidivs
add
lods
jbe
jb
stos
cwtl
aam
jb
xchg
out
fsubrs
stos
sub
or
call
mov
cltd
cmp
cwtl
mov
imul
dec
xchg
leave
mov
push
mov
push
cmovne
shl
push
push
scas
fisubl
sbbl
jle
shll
inc
cmpsl
and
push
test
jg
imul
aam
flds
xchg
repz
push
xor
dec
push
push
cmc
sahf
hlt
sbb
sbb
jl
mov
and
lods
jne
mov
mov
fistl
aaa
mov
aas
aam
popf
mov
mov
jnp
sub
xor
inc
stos
xchg
jl
xor
shlb
mov
sti
mov
and
roll
daa
lds
sbb
mov
push
sbb
cmp
sbb
dec
pushf
imul
loopne
xchg
push
push
jecxz
sbb
sti
cs
pop
inc
jbe
mov
lahf
shrb
addb
and
push
xchg
imul
loop
inc
in
and
push
je
mov
je
and
les
ljmp
clc
inc
lret
dec
push
es
dec
fs
xchg
cmp
cli
daa
xor
lods
outsb
inc
jnp
jp
lods
inc
or
add
push
dec
push
mov
insb
mov
jo
mov
dec
mov
bound
xor
mov
ss
add
cmp
outsl
mov
or
in
cmp
sub
lcall
popa
mov
cmpsb
push
insb
bound
push
sbb
cld
cmp
sub
in
sbb
stos
maxps
push
leave
sti
adc
pusha
rcr
in
sub
adc
pop
jle
dec
cmp
jnp
gs
sbb
or
nop
test
push
jmp
dec
jmp
add
adc
pushf
xor
ds
fsubrs
xor
jb
adc
push
fwait
icebp
ret
int
mov
fcomip
add
or
xlat
lret
inc
mov
mov
inc
jno
testb
test
jbe
or
pusha
std
out
cmp
mov
dec
jecxz
adc
add
sbb
sbb
test
mov
cmp
jbe
ret
ficompl
adc
test
and
adc
sub
in
push
push
pop
push
jno
clc
icebp
jmp
cmpsl
mov
fwait
lods
dec
cmpsl
repnz
cmp
xor
inc
fs
jne
mov
sub
push
push
mov
popf
or
mov
hlt
shlb
in
mov
addr16
mov
ret
arpl
adc
insl
mov
outsb
outsl
xchg
lea
xchg
outsb
xor
in
jnp
int
push
insl
jb
pop
das
or
pop
cs
scas
ja
mov
push
mov
mov
and
or
imul
mov
lods
sub
sbb
fwait
xchg
dec
aas
jne
ljmp
insl
ljmp
jne
cmpsb
add
sbb
aas
sbb
out
dec
cmpsb
or
insl
xchg
ror
sbb
xchg
dec
push
fnstsw
cltd
push
add
dec
sub
ja
jge
add
daa
sub
mov
pop
in
popf
sbb
mov
adc
jecxz
cmpsb
fldl
cmpsl
push
inc
clc
jbe
mov
lds
aas
push
mov
and
movsb
fpatan
lea
xchg
sub
push
jb
fisttps
pop
inc
pop
jg
pop
frstor
mov
rorl
push
bound
stos
sub
mov
fs
testl
icebp
insb
outsb
dec
mov
fidivs
cmp
mov
cmp
or
pop
push
xchg
cld
cmp
mov
adc
sub
jp
shlb
repz
loope
negl
fdivl
sar
mov
cltd
ficompl
or
sbb
movsl
pop
xchg
sbb
sar
jb
and
push
mov
pop
movl
dec
neg
sbbl
ljmp
and
inc
out
rcll
cmc
cmp
mov
enter
push
pushf
xchg
ja
mov
xchg
or
sub
push
dec
inc
dec
mull
cmp
add
xchg
cmp
mov
out
mov
outsl
shl
call
pop
xchg
push
push
stos
cli
cltd
mov
dec
lahf
stos
decb
xor
inc
sbb
pusha
sarb
int3
nop
lock
jne
fld
or
jo
arpl
cmc
stos
addl
mov
mov
shl
and
in
in
or
inc
fs
mov
arpl
or
or
or
push
aaa
pop
ret
cmp
mov
addl
jbe
in
mov
mov
mov
das
push
pop
inc
and
out
jae
mov
push
ret
mov
addr16
clc
jge
and
lea
into
cmp
mov
das
push
fdivrs
jl
add
jmp
rclb
jge
and
lea
test
or
and
fnsave
fcoml
xor
sub
cltd
push
push
mov
hlt
adc
pop
dec
adc
add
pop
inc
ret
jnp
jbe
pop
out
sar
adc
sti
jmp
mov
scas
scas
cmp
pop
imul
cmp
or
sbb
push
jns
push
in
xchg
xchg
add
mov
pop
mov
icebp
nopl
jle
js
cmp
push
in
popa
cmpsb
jnp
and
cmp
xor
in
cmp
dec
fsubl
push
daa
or
and
add
cmp
lods
cmp
cltd
xor
int3
mov
rcrl
pop
cmp
shlb
lcall
sbb
stos
nop
pop
jecxz
and
shl
jle
push
lahf
push
lods
fucomi
mov
adc
ret
fsubrl
inc
inc
adc
sarb
fneni(8087
add
sbb
mov
flds
test
dec
pop
mov
pop
fsub
lret
fbstp
pop
in
insl
into
test
add
sub
pop
or
out
push
out
mov
fistpl
and
push
and
mov
pop
call
sub
or
std
jle
call
dec
mov
pop
sahf
and
adc
mov
push
add
mov
pop
mov
rorb
sub
inc
loop
out
incb
pushf
xchg
imul
data16
rcl
sahf
mov
test
ret
add
loopne
xor
je
imulb
aad
mov
idivl
xor
insl
jl
data16
test
sbb
xor
out
outsl
cmpsl
push
ret
clc
jp
mov
mov
xchg
xor
pop
jnp
negl
or
lock
addr16
or
call
lcall
test
xchg
adc
jno
lds
dec
stc
add
sbb
leave
inc
adc
ja
inc
add
clc
rcrl
dec
mov
sub
dec
adc
lea
dec
mulb
lret
xor
out
lar
xchg
mov
dec
push
lcall
das
inc
outsb
mov
cwtl
pop
iret
mov
mov
mov
add
out
fnstenv
imul
or
sbb
dec
sub
push
aas
jnp
sbbl
loopne
push
mov
mov
movsl
jmp
cli
pop
fwait
aad
or
aam
orl
fwait
ret
sti
in
lods
push
dec
stos
sti
xchg
mov
mov
fiadds
and
cld
sbb
es
mov
bound
sahf
mov
jge
sti
fldl
pop
cmp
push
mov
aas
cmp
popa
cli
hlt
jno
cmpsb
cltd
fdivs
int
aad
or
out
sahf
xchg
into
dec
cld
and
mov
and
lcall
pop
mov
cmp
std
aad
jo
mov
push
pop
movsb
cmp
or
inc
push
pop
xchg
rol
mov
std
ret
jp
mov
sub
imul
fcmovne
and
fcomps
icebp
outsl
mov
movsl
and
nop
jnp
push
mov
popaw
mov
insl
xchg
sti
add
in
hlt
ja
fistl
jge
adc
add
jmp
push
dec
adc
popf
xor
inc
je
dec
add
push
cmp
add
pop
pop
xchg
adc
xor
jno
aam
and
push
je
xlat
lods
cmp
fsubs
int3
sub
rcr
rol
dec
xor
and
out
lock
xchg
hlt
cmc
mov
sbb
push
pushf
add
push
fisttps
push
cwtl
xorl
and
imul
sbb
lods
dec
pushf
lahf
and
pop
inc
push
subb
dec
xor
pinsrw
mov
mov
jb
mov
mov
aaa
scas
es
push
add
mov
adc
mov
mov
or
test
movsb
in
cld
mov
xchg
movsb
or
leave
and
mov
sbb
fistpl
push
xchg
and
sahf
cmp
rcrb
shll
or
bnd
jbe
imul
mov
cmpsb
jmp
popf
mov
pop
shrl
and
jo
sbb
lods
lds
xchg
test
inc
icebp
push
inc
jp
ficomps
lds
or
ja
mov
adc
or
out
ljmp
mull
lahf
inc
adc
mov
iret
ljmp
adc
sub
movl
xlat
int
je
out
js
cmp
mov
lcall
test
push
test
hlt
xor
scas
dec
arpl
inc
mov
adc
and
sbb
and
adc
fildl
cmc
popa
stc
lds
scas
sub
mov
cs
jg
inc
xorl
mov
lock
sbb
lahf
jb
icebp
cmpsl
stos
leave
and
mov
push
rclb
stos
out
and
mov
mov
stos
or
cmova
xor
test
cmc
push
ljmp
push
das
cmp
enter
fsubr
mov
loop
lahf
inc
xchg
daa
add
loopne
xchg
inc
popf
out
jmp
jg
cmc
jne
xchg
aas
jmp
call
aas
mov
dec
jmp
push
cmp
sbb
jp
rcll
dec
repz
ret
outsb
mov
pusha
iret
push
xor
pop
cs
mov
xchg
out
cwtl
pop
sub
pop
adc
lods
repz
aas
cmpsl
and
add
test
popf
cmp
ret
lods
jmp
xor
addb
dec
push
adc
fisubs
inc
sbb
mov
add
fildl
clc
bound
int3
sbb
xor
pop
mov
out
fistps
mov
jo
enter
in
cmp
and
push
inc
xchg
pop
mov
enter
and
push
add
lds
pusha
ret
adc
mov
leave
mov
stos
aad
mov
mov
dec
xchg
adc
repnz
out
cmp
mov
jns
imul
pushf
mov
jecxz
in
or
jbe
sub
cmpsb
int
repz
adc
add
sbb
and
xor
cmp
jle
push
imul
int3
xchg
adc
ja
dec
outsb
repnz
sysexit
jns
dec
push
xchg
ja
mov
pop
cltd
in
lods
xlat
fucom
xor
lret
mov
pusha
fs
cmp
dec
cltd
and
pop
mov
mov
add
push
inc
jnp
jae
js
add
pop
inc
mov
aad
xchg
rolb
idivb
mov
mov
jmp
xchg
dec
mov
imull
xchg
mov
pop
inc
xchg
arpl
mov
lret
out
and
cwtl
push
xor
push
inc
xor
mov
fdivs
sbb
out
sub
mov
sbb
mov
cmp
sub
dec
add
test
mov
fsubrl
lcall
cmp
aam
stc
scas
rcrl
dec
shlb
test
rcrl
imull
mov
adc
mov
push
mov
xor
outsb
push
cld
outsb
aaa
filds
lret
loopne
int3
fisttps
mov
inc
out
filds
das
mov
scas
xor
jb
cmpsb
sbb
pop
ret
out
inc
es
stc
or
push
loope
test
nop
es
daa
xlat
lea
or
fs
add
xlat
dec
daa
test
out
iret
dec
dec
cmc
and
rcl
test
iret
stos
sub
mov
mov
inc
dec
push
push
mov
jnp
cmc
adc
lods
rcr
in
xchg
or
fs
and
sar
into
loop
xor
cmp
in
loopne
add
cmpsb
ret
sbb
pop
mov
leave
inc
pop
mov
inc
enter
jae
sbb
cmpsl
test
mov
xchg
sbb
aas
lcall
insb
add
lret
scas
and
ret
into
call
mov
add
mov
data16
cmpsb
add
adc
jp
jmp
xchg
dec
xchg
outsb
lods
mov
int3
test
mov
mov
pop
scas
mov
mov
fcomps
pop
pop
dec
push
pop
dec
imul
sub
adc
cmp
mov
add
sub
mov
dec
mov
les
shll
movsl
gs
cmp
lods
lds
test
in
mov
or
fcmovne
and
mov
inc
fsubrs
repnz
and
adc
outsb
ss
dec
xor
in
repz
xchg
push
pop
es
xchg
xorb
mov
or
roll
insb
sbb
std
shlb
inc
dec
ljmp
lods
lds
test
sbb
lahf
push
jnp
mul
sub
or
test
jg
sub
or
cmp
or
rolb
jge
push
out
pushf
stc
repz
pusha
scas
push
loope
push
nop
pop
mov
das
repnz
xor
stos
sbb
sbb
mov
mov
mull
xchg
jl
mov
pop
or
mov
jmp
pop
notb
push
into
push
push
jnp
pop
mov
or
mov
jecxz
cmp
sub
cmp
push
adc
ror
out
dec
stos
lcall
test
jb
test
pusha
sbb
data16
mov
clc
loope
ljmp
push
or
mov
inc
mov
rcll
iretw
movsl
jnp
sbb
xchg
add
out
pop
das
data16
adc
cmp
mov
jmp
in
movsb
mov
mov
div
mov
or
clc
mov
xor
jle
mov
jle
sbb
in
xlat
lods
inc
cmpl
and
subb
add
lahf
xor
xchg
fnstcw
cltd
insb
addb
daa
mov
mov
add
adc
test
adc
push
pop
jge
fadd
add
mov
dec
aam
jb
stos
bound
pop
loop
inc
push
test
xchg
xor
rcrl
cmpsb
and
cmpsb
pop
fisubs
out
mov
fs
push
xor
mov
dec
mov
lods
lcall
push
xor
lods
out
data16
stos
adc
and
sub
pop
jbe
adc
jg
lcall
call
mov
into
mov
mov
sub
loopne
mov
and
mov
lea
push
mov
pushl
mov
inc
icebp
jecxz
cli
sbb
push
leave
mov
shl
mov
ljmp
insb
sbbb
stos
mov
test
in
sbb
mov
in
sti
test
idivl
int
orl
aad
jmp
pop
sub
add
in
lock
inc
mov
mov
xchg
aas
mov
mov
pop
xchg
in
aaa
inc
or
mov
sarb
stc
inc
pcmpeqw
inc
pop
push
sahf
andb
aas
cwtl
dec
movsl
je
adc
lahf
iret
into
outsb
mov
mov
xor
adc
je
sub
imul
jg
cmp
xor
cwtl
cmpsl
fiaddl
pushf
addl
xor
push
mov
sbb
shlb
mov
mov
mov
cmc
lods
xchg
test
add
mov
xor
mov
stos
data16
mov
and
outsl
mov
push
add
movsb
sbb
lret
xor
mov
mov
sbb
adc
dec
inc
lret
cmpsl
and
jne
imul
pusha
out
leave
in
sti
fucomip
mov
iret
mov
sub
cli
ljmp
sti
int3
add
inc
sub
jae
sbb
lret
and
loop
pop
jl
addb
lods
js
cmc
sub
lret
scas
push
scas
je
stc
cmc
mov
les
adc
mov
xchg
stos
or
and
xchg
mov
xchg
sbb
repz
xor
push
stos
mov
cs
inc
add
lods
cmp
fdivrs
daa
test
add
jg
mov
lock
mov
mov
scas
dec
pusha
mov
pop
mov
in
xchg
pop
adc
ja
sbb
pop
call
sbb
and
jge
lea
mov
xor
pop
or
and
push
pop
notl
aaa
add
out
mov
adc
mov
es
int
dec
mov
fcompl
insl
add
push
aad
aam
push
std
cmpsb
jae
lahf
int
push
lea
fcmovnbe
dec
pop
enter
cld
mov
sahf
and
gs
adc
idiv
nop
pop
int3
xor
scas
jno
imul
in
notb
inc
nop
insb
fwait
sbb
sbb
or
rcll
adc
jp
test
inc
mov
xlat
adc
int
xchg
adc
orb
rcrl
mov
mov
pop
arpl
fs
pop
mov
mov
adc
inc
push
les
lods
or
movsl
mov
repz
jns
inc
mov
mov
pop
jl
scas
add
push
cmp
push
movsb
ss
xor
mov
add
addr16
shlb
je
mov
jo
cs
inc
cmp
mov
aas
adc
fadd
divl
dec
cmp
das
jno
xchg
sub
adc
pop
lahf
pop
mov
and
test
gs
outsl
jecxz
pop
add
div
sarl
mov
cmp
xchg
xor
cli
jle
mov
and
cmp
ret
dec
movsl
push
sub
ljmp
add
xor
repnz
cld
outsl
push
mov
test
add
mov
fdivr
nop
mov
cmp
enter
mov
jge
hlt
loop
ss
sub
pop
aam
cwtl
mov
stos
jne
fstl
enter
mov
pop
pop
fcmovnbe
xchg
sbb
pop
xchg
mov
icebp
mov
sbb
ss
in
xchg
test
adc
mov
cmp
imul
sub
sub
push
dec
and
jmp
sbb
scas
xorb
jno
data16
lock
or
mov
inc
add
jo
sub
mov
mov
xchg
xchg
inc
adc
push
inc
aas
push
out
addr16
adc
inc
pop
leave
andl
jle
jb
sub
cli
add
shll
ret
mov
aaa
mov
sub
lods
xchg
push
lcall
dec
add
sti
jbe
arpl
ss
xor
add
rol
mov
inc
ss
jle
subl
inc
xchg
lds
jmp
int3
add
inc
stc
push
loope
fsubs
cmp
fisubrl
xor
mov
fldl
pop
mov
and
adc
mov
and
dec
mov
sti
stos
xor
lods
xor
push
jl
cld
std
std
xor
iret
mov
xchg
push
or
pop
mov
bound
lds
dec
mov
inc
mov
lcall
or
xchg
das
sbb
sbb
pushf
sub
out
je
imul
mov
cmpsw
pop
xlat
xor
push
loopne
and
push
fucomp
inc
test
lcall
pop
jl
pushf
popl
xor
outsl
push
push
int
sar
xor
adc
aas
data16
mov
imul
pop
fldl2e
cli
push
rep
jle
loope
mov
test
jp
xchg
lcall
pop
cmp
mov
sub
subl
add
in
fcmovnbe
dec
inc
cmpsb
dec
add
push
adc
cmp
lds
inc
pop
mulb
or
jae
test
add
loop
or
shr
and
fstps
mov
subb
push
iret
sahf
lret
fsub
mov
cli
xor
jno
repz
xor
mov
mov
add
xchg
push
scas
shl
inc
xor
and
jecxz
lret
mov
xlat
xlat
inc
ret
jno
fs
add
inc
mov
out
or
addr16
add
jnp
adcl
xor
inc
lret
fwait
push
xchg
ret
xchg
adc
mov
imul
mov
mov
scas
flds
popf
andl
pop
mov
cmpb
sbb
popf
shll
pop
pushf
mov
lds
nop
orl
test
or
fadds
push
daa
rolb
into
data16
inc
pop
les
dec
call
test
clc
or
les
pop
jnp
add
lahf
jne
sahf
or
hlt
add
das
xor
mov
sbb
cmp
insb
in
and
xchg
cmp
cmp
addb
lea
call
lea
shl
and
pop
inc
mov
dec
or
jl
mov
mov
aam
push
je
aas
pop
std
dec
ja,pn
pusha
sbb
mov
push
jo
mov
invd
sahf
test
cmp
inc
jae
push
xchg
jmp
iret
jae
scas
inc
nop
movsl
ja
jl
fwait
lret
pop
xor
hlt
sahf
jae
pop
das
sbb
test
loope
fstl
push
or
testl
dec
sbb
or
mov
test
out
test
xchg
les
xor
lahf
cmpsl
std
iret
fadd
jmp
je
jle
mov
scas
popa
pop
cwtl
das
sub
mov
and
pop
push
scas
dec
aad
lds
jl
fsubrp
pop
mov
loop
and
mov
cmc
adc
ret
push
sbb
test
jnp
adc
hlt
je
jo
out
pop
fbstp
fcmovnbe
mov
test
push
dec
push
cmp
push
lock
xchg
filds
nop
aad
dec
enter
xchg
xchg
inc
pop
ffreep
insl
jbe
mov
xor
push
xor
cbtw
lahf
pusha
aam
stos
dec
loop
outsb
stc
int
lock
int3
push
mov
loope
mov
cli
jb
add
decb
mov
add
and
xchg
jp
ljmp
addr16
pop
mov
sub
or
adc
or
or
jnp
pop
sub
gs
jmp
insl
lea
add
and
xchg
bound
jl
pop
xchg
adc
ja
hlt
cli
add
dec
adc
cld
mov
leave
ret
pop
repz
jne
arpl
mov
std
jle
out
in
movq
cli
fneni(8087
popf
xor
xchg
mov
inc
movsl
pop
mov
lods
add
jge
adc
dec
in
inc
js
ss
test
lcall
rcll
outsl
sbb
jae
leave
cmpsl
jge
sub
xor
sub
pop
sbb
jo
mov
js
mov
mov
mov
enter
test
sbb
out
pop
mov
out
jnp
imul
int
aaa
or
and
cltd
pop
test
and
arpl
ror
pop
jmp
pop
jle
pop
adc
xchg
jbe
mov
sub
or
xor
fsubrs
pushf
cmc
aaa
adc
icebp
mov
inc
adc
dec
in
outsb
ret
jle
push
pop
cmp
imul
bound
jecxz
mov
mov
rolb
test
gs
andl
inc
les
fdivs
inc
loop
iret
push
xchg
icebp
push
icebp
xchg
loopne
xchg
sub
dec
pop
add
into
mov
pop
pop
dec
into
cmp
sub
xor
pop
jnp
repnz
cs
clc
pop
mov
arpl
andb
loope
lea
out
and
ja
enter
or
dec
das
inc
jecxz
test
mov
adc
pop
xchg
push
xchg
movsb
push
sub
inc
and
jns
imul
jno
mov
jae
les
scas
mov
adcb
pusha
loope
and
and
and
pop
in
mov
sti
mov
imul
fsubs
jl
mov
or
sub
mov
or
pop
cmpsb
pop
or
shll
mov
dec
xor
mov
stos
pop
fidivl
test
test
out
jg
mov
fiaddl
pop
mov
pop
ror
test
sbb
adc
test
cmp
adc
lahf
pop
xor
out
out
arpl
neg
test
push
loop
pop
shrb
hlt
push
xchg
mov
mov
repnz
jg
mov
test
mov
dec
adc
push
div
pop
and
sub
test
or
out
add
jge
xchg
out
mov
test
dec
nop
nop
push
dec
in
mov
nop
xor
push
mov
lea
popa
jo
dec
les
pop
imulb
jns
aaa
push
mov
dec
add
cmc
mov
cltd
and
lds
sbb
inc
or
cmp
inc
outsl
or
mov
test
outsb
inc
ret
sub
dec
jo
iret
push
jp
pop
insl
repnz
jg
out
cltd
cli
popf
inc
push
test
icebp
popa
lcall
push
clc
pop
out
inc
lahf
lcall
pop
inc
pop
shll
pusha
lods
xchg
fsincos
cmpsl
movsb
mov
cmp
push
cs
mov
mov
sub
inc
xor
xor
jbe
ror
aaa
imul
or
es
cmp
movsb
repz
loop
movsl
insl
and
inc
shrl
test
test
outsb
into
ret
repz
xchg
cltd
loopne
imul
rorb
les
ljmp
xor
pop
sub
aad
inc
int3
dec
xchg
cmc
jecxz
mov
jno
sub
dec
pop
adc
xchg
push
cmp
and
popf
mov
pushf
inc
cwtl
enter
sub
ret
pop
test
pushf
push
aam
fcompl
cltd
mov
pusha
stc
xchg
ficoms
insl
popa
cmp
xor
test
xor
mov
bound
hlt
ja
cmp
xchg
mov
loopne
aas
add
cmp
jecxz
pop
stos
ds
push
mov
ss
push
cs
es
sahf
nop
mov
push
lret
shrb
data16
mov
mov
and
es
pop
clc
pushf
lods
cli
cs
aaa
jge
push
cwtl
popa
cmp
dec
pop
cmp
and
push
push
es
adcl
or
mov
daa
addr16
add
sbb
in
lds
in
imul
sub
adc
stc
and
inc
mov
inc
pushl
push
pop
fwait
pop
mov
sbb
push
mov
dec
mov
mov
jl
lds
out
adc
add
cmp
pop
push
ljmp
movsl
sbb
jp
cmp
jnp
mov
cmpb
xor
faddl
mov
ds
std
and
push
test
hlt
or
scas
mov
mov
inc
sbb
les
stc
fstpl
out
mov
scas
push
shll
cmp
jno
repnz
jg
jbe
addr16
pop
and
shl
inc
lea
repnz
fists
sub
ret
int3
jg
movsl
int3
fstsw
inc
sbb
mov
ror
popf
cmpsl
jne
xchg
test
mov
aas
data16
jnp
dec
fnsave
dec
stc
xchg
xor
dec
fistpl
and
addr16
icebp
dec
and
aaa
outsl
push
fwait
or
imul
outsl
pop
movsb
inc
adc
mov
out
pop
jne
pop
adc
dec
adc
aas
or
push
pop
bound
leave
xchg
inc
pop
mov
xor
in
lods
lret
or
int3
fstpl
push
jmp
cwtl
test
rcrl
insb
and
shll
ds
xlat
dec
test
ljmp
fimuls
inc
or
adc
outsb
popa
lods
jns
and
rolb
iret
ret
or
xchg
sub
jno
lods
add
mov
bound
xchg
cmp
call
neg
rcl
jbe
mov
shll
adc
subb
cmp
sti
je
xchg
mov
dec
das
ret
or
clc
sar
nop
xchg
fsubrl
and
test
pusha
stos
mov
mov
xorl
sub
in
mov
repnz
outsb
fisttpl
and
add
movsl
mov
mov
inc
add
mov
dec
sbb
aam
sahf
mov
fucomp
std
mov
lret
out
mov
pop
pop
add
mov
add
or
and
call
dec
lock
rol
in
enter
insb
out
mov
sbb
insb
dec
cmc
cmp
xchg
or
cmp
xchg
jmp
orb
iret
adc
jns
xlat
nop
add
in
sub
mov
xor
js
dec
jg
cltd
dec
mov
xchg
lea
or
sti
or
inc
cmp
test
and
add
xchg
sub
ja
enter
stc
adcb
xchg
sbb
fs
mov
push
sub
insb
sti
mov
jl
mov
push
mov
push
adc
inc
xchg
pop
ficoms
cmp
xchg
cli
enter
mov
sbb
jnp
mov
xchg
inc
cmpsl
cld
dec
push
push
push
xchg
pushf
cmp
cmp
mov
add
jmp
cmpsl
inc
insl
and
or
jnp
mov
or
pop
mov
cmpb
mov
pop
mov
xor
out
push
lods
xchg
leave
movb
cmpl
inc
cmpsb
jl
xor
pop
pop
daa
loopne
ret
jno
pop
and
dec
stos
cmp
mov
mov
adc
test
adc
mov
jecxz
pop
or
xchg
dec
fimull
inc
mov
add
rcrl
mov
iret
adc
add
xchg
outsl
mov
ja
in
xchg
test
adc
pop
das
popf
dec
mov
iret
sub
out
aas
jns
lods
xor
pop
loope
mov
call
pop
test
mov
repnz
cmpsb
out
xor
or
mov
sbb
sub
lret
mov
push
sti
enter
idiv
pop
lret
lods
mov
inc
mov
mov
xchg
jae
mov
gs
cmp
and
inc
inc
fisubs
push
jnp
aam
mov
fsubrs
rclb
inc
lcall
push
mov
in
fmull
dec
push
in
and
mov
cmp
out
leave
fcoms
stos
push
add
and
sub
shrl
mov
movsl
jae
mov
jg
cmp
out
xchg
fs
popa
mov
jmp
push
shl
push
mov
add
roll
sbbl
das
outsb
xor
loopne
mov
lret
lret
sub
rolb
stos
push
mov
push
or
fisttpll
out
and
data16
and
test
inc
fs
cmp
mov
jae
testl
inc
mov
cmp
popf
mov
jne
lcall
fmul
bound
jb
int
push
bound
test
test
pushl
mov
sbb
sti
scas
fisubl
ljmp
inc
ret
cmp
loop
idivl
xchg
xor
sbb
adc
and
out
lea
inc
ficomps
jg
sub
hlt
pop
addr16
sub
cli
imul
sbb
in
jnp
xor
mov
std
in
inc
insb
pop
mov
mov
push
mov
cmp
fisubl
lret
shll
inc
xor
inc
mov
scas
push
ljmp
mov
les
xchg
mov
push
or
jecxz
mov
frstor
shll
xchg
adc
mov
outsl
adc
inc
push
es
std
push
or
xchg
cmpsb
shll
test
aad
loop
adc
inc
dec
or
push
mov
mov
icebp
pop
addr16
sbb
sar
out
mov
adc
pop
or
xchg
mov
fldt
std
fcmove
das
dec
jmp
sbbb
cmp
imulb
jle
push
pushf
loop
cwtl
test
in
loop
orb
pop
insb
aas
pop
cld
jg
loop
bound
jb
inc
mov
add
shl
fildl
dec
cs
push
push
push
adcl
push
aam
add
pusha
lds
adc
xor
jle
jns
xor
test
jno
fs
out
pop
out
daa
and
adc
fdivrs
cmp
data16
in
dec
dec
lds
aad
adc
cli
cmp
and
movsl
lea
jg
pusha
insl
ret
lahf
add
insl
mov
or
inc
clc
push
lcall
jecxz
cmp
mov
cmp
add
and
dec
pushf
xor
pop
adc
mov
mov
adc
mov
add
push
sub
loope
out
enter
call
rcl
adc
or
mov
mov
in
push
push
add
das
das
pop
mov
sarb
inc
adc
stos
mov
popa
mov
movsl
push
jb
js
call
sbb
or
rcr
xlat
push
stos
data16
pusha
jle
cmp
aam
orl
cmp
pop
xlat
shlw
inc
cmp
dec
das
fcompl
cmpsb
stos
je
idivb
leave
jno
test
movsb
out
lret
and
mov
push
subl
xchg
cmp
lret
adc
nop
add
or
xchg
push
or
push
loopne
rcll
inc
xlat
int3
movsb
push
call
cmp
push
bound
int
int
jns
in
or
je
or
loopne
mov
or
jne
int3
cmp
std
aam
xlat
insb
pop
push
in
pusha
loope
sti
ret
adc
push
mov
cli
ret
pop
jle
and
sub
loopne
mov
dec
insl
sub
add
lret
test
test
ret
push
and
push
inc
jb
mov
jecxz
cltd
js
push
add
out
int3
fxam
scas
adcb
push
inc
mov
cmp
sbb
sub
test
push
xchg
push
xchg
sbb
push
aam
pop
imul
pushf
inc
add
jb
mull
cltd
mov
inc
fists
aas
int
cltd
xlat
add
outsl
and
dec
movsb
xchg
loop
mov
inc
add
push
loopne
ljmp
fucomp
test
adc
test
and
jmp
push
mov
in
inc
mov
xor
mov
sbb
adc
outsb
lret
inc
inc
arpl
pop
es
pop
and
mov
insb
mov
jo
xor
xor
lock
insl
nop
mov
insl
sub
rcrb
repnz
pop
xchg
add
jp
adc
pop
movups
xor
and
in
orb
sub
xor
mov
push
icebp
in
loope
loop
xor
mov
and
outsb
inc
out
push
add
les
push
test
xchg
fsubr
std
pop
mov
imul
shr
mov
mov
jg
add
inc
shlb
cltd
fwait
sbb
push
pop
rorl
loope
scas
mov
lds
call
repz
clc
hlt
sub
mov
dec
jp
ja
aad
lods
aas
xchg
lock
dec
mov
aam
adc
or
jb
and
jle
mov
outsl
xchg
ss
and
lea
js
jecxz
jo
mov
fs
out
push
push
cmp
nop
stos
or
mov
rolb
or
divl
aaa
ret
sbbb
pop
push
out
lock
negl
outsl
push
cmp
aas
stc
jge
daa
rorb
es
mov
in
dec
xor
xor
mov
jg
pop
fnstenv
pop
jle
mov
push
sbb
pop
mov
mov
imul
add
xor
inc
sbb
xchg
ja
cmpsb
mov
hlt
adc
pop
mov
jno
and
xchg
jo
fistl
jb
cltd
scas
addr16
lcall
jmp
pop
push
out
adc
in
push
sahf
mov
add
adc
xor
sbb
fidivl
push
mov
jns
hlt
arpl
pop
jmp
iret
inc
into
shll
xchg
jae
sti
xchg
bound
adc
xor
sub
push
add
imul
clc
sbb
sbb
rcl
push
push
fwait
rorl
je
jp
cli
inc
cwtl
jae
pop
loope
cwtl
call
adc
aad
movsb
pop
mov
mov
fldt
cs
cmpsb
loope
das
cli
adc
push
cmp
add
outsl
test
mov
push
jge
hlt
fs
movsl
ret
enter
mov
mov
pushf
mov
ss
mov
test
mov
xchg
cmp
adc
incl
insb
push
push
and
pop
pushf
xchg
cmpb
inc
sbbb
pusha
gs
jbe
adc
xchg
lods
adc
xor
xor
mov
xchg
adc
xchg
mov
out
dec
mov
fsubrl
xor
xor
push
mov
std
xor
fcomps
jl
mov
pusha
mov
pop
or
xor
sbb
push
in
xor
testb
inc
les
or
in
stc
pop
adc
pop
cmc
mov
pop
push
jne
push
mov
test
in
ret
or
imul
push
in
mov
icebp
inc
dec
fstl
mov
lret
xor
cli
fwait
loopne
xor
rcll
fdivrs
out
divb
and
inc
fcomp
and
shlb
mov
insl
sar
pop
adc
mov
jp
cmp
cs
inc
out
lret
pop
insl
sbb
aad
lock
add
popl
or
or
movsl
out
scas
loope
mov
cmp
insl
and
xor
out
je
push
pop
bound
push
jg
clc
nop
push
in
cwtl
adc
push
xchg
xchg
psadbw
mov
lcall
pusha
testl
test
xor
or
xor
fimull
adc
mov
cmpsb
vmread
je
fs
jnp
ret
cmp
in
xor
xlat
insl
jnp
stc
cwtl
fcmove
sub
loop
adc
inc
sub
xlat
jno
adcl
push
adc
lock
jae
das
adc
jnp
and
test
sahf
stos
jb
or
fsubrl
dec
dec
dec
cmc
mov
pop
pop
lock
jne
cmp
repnz
adcb
test
lahf
mov
xor
jp
and
stc
cwtl
andl
imul
dec
jne
pop
sub
jbe
dec
cmpl
adc
shll
shrb
push
adc
subl
das
jne
jmp
xchg
jmp
add
int
cmp
push
xchg
inc
cltd
outsb
mov
cmpsl
out
lea
in
int
in
adc
mov
test
or
div
cli
inc
cli
pop
scas
fdivl
add
shl
shll
sub
mov
push
inc
pushf
jb
pop
int3
inc
es
xchg
je
fsubrl
ret
iret
sbb
pop
ret
test
jns
lret
out
rcll
mov
sbb
sbb
cmpsb
cmp
ds
je
xchg
sbb
push
outsb
push
pop
ds
dec
jl
lods
and
inc
push
sub
imul
adc
xor
add
mov
jns
into
pop
out
fists
jb
push
inc
arpl
or
out
scas
into
xchg
inc
sub
aam
repnz
mov
inc
outsl
pop
lods
pop
sub
dec
aas
cmp
mov
adc
js
hlt
aam
adc
mov
mov
scas
arpl
ror
dec
sub
fwait
sbb
push
xor
adc
xchg
push
imul
jns
push
xchg
shr
mov
out
mov
push
test
xchg
push
test
cmp
les
lcall
outsl
and
lcall
push
xchg
je
pop
mov
loopne
nop
push
mov
addr16
addr16
scas
inc
ret
lods
inc
lret
je
aad
mov
cmp
scas
cs
fwait
xor
ret
cmpsb
mov
or
das
jle
sbb
mov
add
xorl
stos
outsb
into
fnsave
push
popf
paddd
fidivrl
pop
je
adc
loopne
pop
fdivl
cwtl
aas
cmpb
push
aam
data16
jne
dec
pusha
jg
mov
xor
inc
popa
pusha
mov
pop
inc
lret
xor
push
fbstp
rorb
jl
data16
xor
lret
into
xlat
push
aad
aas
sbb
xchg
sub
stos
mov
xor
lock
xor
mov
insl
ret
fnsave
idiv
mov
stos
xchg
out
push
mov
add
cwtl
jnp
mov
mov
ret
pop
in
sub
mov
add
adc
pop
jae
or
xchg
mov
push
jg
push
repz
inc
adc
adc
jp,pt
sbb
jb
dec
popl
imul
fs
popa
push
push
enter
gs
iret
mov
push
bound
jo
lret
sub
lahf
ret
test
insl
sub
or
cld
test
dec
subb
push
inc
inc
or
decl
arpl
rcl
loop
and
jle
es
in
xchg
inc
movsb
filds
xchg
pop
add
xchg
inc
mov
stc
idivl
pop
pop
ret
mov
and
dec
inc
lret
call
out
pop
pop
xor
mov
rcrb
iret
insl
pop
test
inc
jbe
aad
push
adc
mov
movsl
mov
icebp
das
insl
xchg
loope
ret
push
adc
fwait
adc
lods
sahf
mulb
xor
or
hlt
vsubps
mov
pop
sub
sbb
js
and
cmpl
xchg
les
push
jne
lea
stc
cs
mov
dec
push
nop
jge
sub
pop
mov
add
fimuls
adc
ja
xchg
jg
dec
xor
lods
adc
in
inc
push
xor
cmp
jle
out
xchg
dec
clc
jle
lret
mov
sbb
sub
in
test
inc
push
inc
pusha
jo
push
scas
adc
sub
xchg
push
mov
pop
sub
nop
inc
aad
sub
insb
lds
cltd
shl
lock
ret
sbb
push
lret
push
lret
shll
fisubrs
xor
sbb
aas
push
and
push
loope
out
int
out
pop
push
add
lods
push
les
mov
push
push
stos
sub
cmp
loopne
or
fimull
xchg
test
fisttpll
js
mov
mov
mov
dec
lods
call
mov
cmpsl
enter
sub
repz
cmp
and
ficoml
cmpsb
jecxz
jns
sbb
pop
push
js
inc
xor
nop
dec
xchg
add
jb
inc
leave
ret
movl
jnp
push
dec
insb
sbb
or
adc
push
adc
mov
mov
std
lret
pushl
or
sub
in
fnsave
fistpl
test
ret
outsb
adc
movb
cs
pop
mov
ja
mov
mov
and
scas
ljmp
mov
hlt
mov
retw
cmp
setns
fst
mov
shlb
jl
mov
sbb
pop
cmp
mov
shll
xchg
cli
shl
adc
out
scas
fidivrl
lret
mov
or
bound
fstp
enter
stos
test
outsb
mov
mov
xor
or
popf
scas
mov
pop
jge
std
mov
inc
fildll
or
dec
sbb
aam
jno
and
or
xchg
dec
cmp
dec
push
out
out
pop
idiv
fwait
or
fistpl
nop
mov
addr16
call
adc
stos
xchg
lea
arpl
mov
daa
cwtl
sub
and
jae
add
inc
inc
xchg
fld
scas
cld
mov
push
jo
sbb
push
add
stos
sub
decb
ja
mov
enter
mov
xor
pop
or
mov
dec
int
sahf
bound
push
repz
lods
lcall
or
add
ja
lods
xlat
lods
out
inc
frstor
ja
cmpsb
stos
roll
sub
scas
inc
and
jge
jge
xchg
pop
jmp
push
jb
lods
pop
pop
add
jae
loopne
ja
stos
testb
push
or
test
imul
sub
sahf
pop
jge
rclb
aam
mov
jge
cmp
or
xchg
adc
cmp
jmp
mov
jge
data16
mov
pop
push
mov
or
loopne
test
dec
outsb
pop
inc
mov
sbb
jns
ret
aam
dec
int
stos
cli
fs
and
inc
pop
imul
and
pop
in
push
leave
sbb
hlt
or
testl
cs
mov
sti
jne
add
sub
inc
sub
jl
push
mov
in
mov
fisttpll
mov
dec
dec
fmull
mov
data16
hlt
cmp
lods
ss
dec
dec
inc
jmp
and
nop
jno
fadd
inc
int3
or
fcmovnbe
or
push
xchg
cli
mov
pop
popf
push
and
sbb
pop
or
mov
jo
sub
aaa
rcll
xchg
mov
jno,pn
push
mov
pop
ret
dec
xor
arpl
mov
sub
hlt
mov
mov
cltd
xchg
or
addl
in
cmc
mov
mov
dec
aam
sbb
xchg
inc
mov
imul
adc
jg
jne
jns
in
push
ja
cmp
xor
inc
cld
xchg
jl
wrmsr
loopne
jae
xor
dec
aaa
sbb
movsl
cmovne
les
dec
movsl
fistpll
adc
sbb
mov
pop
pop
pop
out
mov
cmp
fs
testb
mov
or
into
ds
mov
inc
dec
in
dec
divl
jg
ret
fisttpll
jp
test
mov
fmull
shrl
ljmp
jo
mov
iret
xor
scas
lods
sbb
loope
jl
mov
xchg
ljmp
mov
add
pop
aaa
xchg
mov
call
iret
push
out
jmp
pop
aad
lods
std
lds
xor
jne
xor
dec
or
mov
lcall
out
testb
mov
push
int3
jl
dec
dec
scas
clc
pop
sub
xor
xor
mov
or
mov
adc
out
pop
xchg
sbbl
jle
sbb
aaa
xor
cmp
inc
pop
adc
divps
mov
sub
scas
notl
dec
mov
call
std
cltd
std
addl
insb
fistpll
jp
int3
shlb
lods
push
dec
inc
dec
or
add
daa
sub
and
adc
hlt
sub
jns
cmpsb
mov
aaa
or
pop
push
xor
jnp
mov
daa
inc
xchg
or
sti
cli
and
popa
mov
cltd
dec
inc
daa
xrelease
pop
and
jnp
cmp
mov
xchg
out
adc
in
jne
pop
dec
mov
ja
pop
sub
sbb
fisttpl
inc
in
aaa
enter
sbb
fldcw
imul
fs
cli
insb
add
push
push
dec
adc
add
xchg
adc
movsb
push
pop
rcr
cmp
fimull
mov
aam
into
lods
enter
fcmove
mov
inc
push
mov
bswap
ds
mov
add
hlt
out
movsb
imul
out
pop
movsb
cmp
pop
shll
stos
inc
push
and
sbb
dec
adc
xchg
sbbl
stos
insb
xchg
sbb
cli
in
and
cli
sub
aad
inc
dec
loopne
dec
and
cld
aas
jb
or
mov
or
imul
subb
xor
lock
push
lcall
add
mov
jge
push
aam
add
repnz
enter
push
push
and
maxps
cmp
loop
stos
xchg
xchg
fdiv
mov
subb
sbb
xchg
fidivs
popa
jecxz
cltd
mov
xchg
push
add
or
lock
hlt
sbb
popf
hlt
xorl
mov
fldcw
ds
jae
nop
sub
cmpsb
adc
mov
rcr
std
insl
fdivrl
cmpl
mov
or
add
popl
fisttpl
in
and
jecxz
mov
sahf
cmc
sbb
or
mov
repz
inc
inc
pop
int
xor
and
int
mov
and
fnstcw
fldt
in
movsl
jns
mul
push
sti
sbb
dec
or
xor
imul
push
lret
mov
scas
iret
dec
daa
aaa
clc
pusha
jae
xor
mov
mov
lahf
sahf
sbb
jg
and
ja
shlb
fimuls
aam
pushl
xor
sub
mov
cmp
jo
mov
out
cltd
test
dec
ds
into
mov
and
aam
repnz
cltd
cs
out
jg
scas
cmp
iret
test
xchg
lcall
jecxz
fimuls
cmp
pop
mov
sub
and
aaa
jbe
dec
add
push
xor
inc
mov
movsl
jmp
cmpsb
fs
into
and
mov
mov
add
iret
lea
add
outsl
adc
add
ror
push
stc
cmp
or
out
xchg
stc
mov
or
xor
repz
out
mov
repnz
or
mov
cmpl
mov
js
mov
push
push
mov
mov
test
jmp
mov
push
mov
lret
jle
push
sbb
into
xchg
inc
or
daa
ja
sub
insl
xor
jg
jle
dec
xor
lret
test
and
and
pushf
mov
cmp
cwtl
or
jecxz
inc
sub
into
mov
xor
and
cli
mov
popf
pop
sbb
fistpl
mov
sub
adc
dec
add
mov
out
xchg
jae
mov
or
inc
jnp
daa
andl
int3
dec
lahf
fidivs
sti
in
ret
aas
lods
pop
ljmp
xor
fildl
pop
pushf
mov
repz
mov
xchg
mov
scas
outsl
push
gs
stos
insb
xor
mov
leave
stos
or
adc
mov
pop
in
les
addr16
das
aaa
jno
mov
fs
or
andb
jae
sub
dec
ds
fldl
inc
flds
fdivrl
inc
ret
sub
fstl
int
cmpsb
xchg
out
ljmp
lret
xchg
insb
mov
push
out
shr
das
sysenter
sub
lahf
idivl
push
aas
adc
std
in
sbb
cmp
imul
dec
test
cli
mov
es
adc
aad
pop
fs
mov
xchg
pop
daa
into
int
lea
mov
push
stc
adc
adc
inc
punpckldq
add
xor
sub
push
mov
test
fnstsw
sbb
leave
test
hlt
bound
test
arpl
cmp
ds
mov
test
sbb
dec
mov
int3
mov
jo
fmul
mov
mov
frstor
and
das
adc
lret
dec
dec
inc
add
or
jno
pop
outsl
insb
fsubrl
outsl
xchg
cli
repnz
mov
add
jg
xchg
nop
inc
loope
scas
mov
push
cs
mov
push
jl
mov
push
jo
mov
movsl
xor
sbb
mov
mov
ficoms
lahf
outsb
dec
or
iret
or
adc
daa
mov
cmp
inc
pushf
mov
aam
pop
sahf
xor
or
fmul
jle
ret
mov
mov
fwait
call
lret
dec
mov
movsb
arpl
pop
mov
push
mov
mov
outsb
outsb
data16
les
cmpsb
sub
rcll
fs
aas
cmp
mov
into
inc
add
lret
std
je
sub
int
sbb
es
gs
fstpl
fwait
or
pop
aas
dec
cmp
push
pop
lret
xor
xchg
mov
cmc
orl
or
sbb
mov
pop
lcall
test
xchg
test
dec
add
pop
and
jmp
push
fdivrs
sbb
outsb
add
push
adc
lahf
or
cmp
andb
sahf
inc
nop
mov
scas
call
adc
mov
jmp
sti
loop
xor
pop
or
fdivrs
and
push
adc
pop
push
dec
adc
sbb
fisubrs
mov
movb
aas
les
jl
je
mov
sbb
stos
mov
lods
je
addr16
sub
xchg
or
push
and
popa
push
orb
jo
pop
cmc
xchg
stos
inc
sbb
ret
sub
or
shl
xor
jge
cmp
popf
jle
aam
sarb
out
hlt
mov
scas
sti
cli
mov
xchg
mov
xor
jg
leave
shlb
xchg
xor
mov
or
sbb
test
es
subl
pop
insb
inc
sti
stos
lcall
dec
mov
lea
push
in
pushf
in
rclb
cmc
sub
mov
cmpsb
push
sub
icebp
adc
cmpsl
sti
cmp
pop
out
fdivrs
test
jmp
pop
aas
outsl
sbb
cmp
jl
setb
lods
mov
jae
scas
filds
and
cld
mov
aaa
test
sbb
cmp
inc
adc
scas
sti
es
lahf
mov
mov
out
stos
or
test
cmp
or
or
jno
or
push
sub
paddsb
mov
std
pop
push
pushf
and
xchg
push
scas
pop
movsb
sub
in
xor
icebp
or
leave
aam
mov
in
mov
cmp
jle
jns
add
cwtl
fstpt
xor
insl
hlt
popf
dec
jmp
and
ds
pop
push
popf
rorl
pop
pusha
cmp
roll
dec
fdivr
sub
mov
push
mov
rorl
std
xlat
std
lret
adc
cmp
stos
or
jp
push
cltd
and
jae
xchg
bound
ja
inc
inc
pop
fucomi
cmp
mov
repnz
in
ds
call
cmp
add
cmc
xchg
xor
test
loope
fiaddl
cmp
mov
sub
cmp
icebp
lds
aas
inc
out
into
in
mov
mov
stos
mov
xchg
add
dec
sti
test
pop
pop
rcr
cli
jecxz
js
xor
shr
and
pop
cltd
and
sbbb
daa
mov
scas
pop
push
xor
mov
jae
loop
adc
in
xor
loope
adc
sub
out
mov
cmp
lret
mov
clc
lea
fwait
stc
add
cmpsb
and
mov
jp
adc
sahf
or
arpl
or
sbb
fdivp
dec
aaa
lock
pop
pop
xor
pop
popa
mov
sub
outsl
popa
popa
mov
rcll
jne
and
test
sbb
push
sub
repnz
jbe
clc
mov
movsb
push
adc
neg
jl
mov
movsl
dec
pop
xchg
add
mov
pop
aas
jg
sbb
nop
test
lret
mov
mov
insb
mov
and
dec
push
femms
xchg
mov
xor
mov
popf
xchg
jle
movsb
fwait
mov
lret
leave
insb
fisttpl
sbb
ja
pop
pop
or
sar
pop
adc
cmp
out
sub
dec
inc
loop
push
cmp
pop
sub
inc
jb
icebp
jo
cltd
xor
loop
nop
cld
mov
leave
xchg
mov
jge
repnz
fldl
aaa
xor
push
dec
lods
adc
not
or
sbb
icebp
push
and
negl
lock
cmp
xchg
fdivs
mov
or
hlt
push
lcall
sub
add
loopne
cmp
jecxz
lret
inc
cmp
sub
add
xchg
loope
insl
or
in
sbb
mov
mov
pop
xor
test
push
cmp
out
jle
xchg
mov
andb
shlb
add
inc
cli
jnp
mov
xchg
cmp
mov
xor
adc
inc
mov
insl
push
lock
add
push
fcoms
imul
popa
push
ret
loope
sbb
dec
inc
sub
inc
out
xlat
daa
ljmp
mov
dec
jl
pop
jne
cmp
mov
outsb
scas
sub
add
movsl
inc
repnz
inc
pop
repnz
mov
fwait
cmp
ficomps
nop
cmp
fists
mov
lcall
and
push
shl
out
inc
adc
test
dec
and
lret
inc
dec
xchg
addb
push
ds
push
jne
cmc
arpl
js
sub
std
fcmovu
mov
add
add
in
in
push
repnz
rorb
push
inc
and
push
int
outsl
daa
fistpll
gs
pop
mov
push
dec
repz
fwait
lret
test
or
adc
andnps
xor
jmp
enter
sbb
gs
and
push
push
hlt
notb
dec
or
lea
and
mov
cmpsl
and
testl
jbe
pop
loopne
sahf
repz
cwtl
sub
add
div
or
fldcw
repnz
in
and
push
mov
and
outsb
fs
jb
fildl
push
inc
jae
pop
dec
adc
inc
inc
imul
fstpt
mov
arpl
cmc
cltd
adc
pop
xchg
push
movsl
les
leave
cmp
and
xchg
fsubrl
inc
cmpsl
clc
repnz
sahf
repz
lret
sbb
cmp
push
add
loope,pn
daa
mov
cmpsb
cmpsl
fnstenv
push
fsts
mulb
mov
iret
mov
rcll
jb
aam
clc
rorl
shlb
popa
ja
stc
out
push
dec
xchg
sahf
pop
push
iret
xchg
xor
jecxz
pop
xchg
inc
inc
aaa
pop
loop
jl
leave
xlat
sti
sub
xlat
cmpsb
pop
cmpsb
mov
inc
mov
addb
in
push
imul
jl
mov
push
inc
int3
mov
mov
pop
jecxz
cmp
addb
call
test
in
ds
mov
or
ds
sahf
test
lcall
mov
gs
pop
pop
mov
inc
inc
xor
insl
xor
push
mov
fstps
pop
sbb
in
push
push
mov
sbbl
and
pop
or
or
inc
fucomi
mov
jmp
mov
dec
les
xor
icebp
aam
dec
aad
out
fistps
ss
insl
mov
xchg
push
xchg
insl
mov
int
in
scas
jl
ret
fs
das
jnp
pop
sub
dec
cwtl
push
hlt
cmp
orl
mov
fsubs
pop
mov
and
dec
cmp
and
int3
mov
lods
gs
pushf
sahf
fsubl
rcrb
inc
xchg
pop
jmp
jnp
addr16
imul
lock
out
jg
ret
xchg
test
cs
xor
mov
and
jge
lds
loop
stc
hlt
adc
call
lahf
mov
xlat
ja
jne
mov
lret
adc
icebp
aaa
imul
inc
dec
insl
fwait
mov
add
loop
fstl
push
out
sub
das
sub
ret
add
add
xor
cmp
aad
insb
fcmovne
testb
cmpsb
into
xchg
mov
push
inc
pop
sub
fstpt
adc
in
xor
inc
sub
mov
fucomip
inc
add
into
cs
xor
das
testb
popf
icebp
push
jl
mov
sar
int3
dec
dec
rcr
dec
add
sbb
out
inc
xchg
push
ss
pushf
cmp
cmp
sub
fisttpll
adc
inc
stos
cmc
lret
das
mov
mov
cwtl
push
and
shlb
fiadds
jp
enter
jnp
adc
jge
hlt
xchg
inc
sub
andb
cld
sbbl
xchg
mov
sub
out
sbb
xchg
cli
mov
add
cltd
nop
mov
inc
mov
out
sahf
in
push
push
mov
mov
sbb
pusha
sbb
sub
cltd
push
jno
lret
mov
xchg
int3
cmpsb
fnstsw
scas
push
out
sub
clc
clc
mov
lahf
mov
mov
ret
gs
dec
xor
cmp
cs
push
mov
jl
mov
adc
push
add
arpl
pop
out
mov
mov
les
pop
sti
orb
loopne
cmp
pop
nop
adc
js
sbb
jb
mov
xor
or
fldl
adc
testl
insl
fidivrs
std
dec
jnp
mov
pushl
mov
pop
out
mov
scas
aas
cwtl
adc
cld
and
adc
push
movsl
ficoml
pop
push
fistl
jbe
scas
jl
lcall
pop
ljmp
insl
adc
ret
sub
cmp
lods
inc
sti
adc
scas
ret
mov
addr16
xor
adc
pop
xor
test
shr
imul
mov
fmul
movsb
sub
mov
and
sbb
add
repnz
xor
daa
aas
ficoms
sbb
inc
dec
imul
push
xchg
adc
dec
jnp
ja
scas
orl
leave
int
lcall
cwtl
aaa
dec
xlat
adc
out
mov
sbb
gs
rclb
nopl
imul
cmpsb
lret
loopne
ret
ret
mov
test
add
lahf
scas
lret
mov
adc
cmp
pop
jbe
mov
mov
sbb
xchg
mov
pop
fidivl
test
out
fs
or
scas
xor
mov
push
jmp
fadds
mov
dec
cmp
xor
jecxz
decl
das
sbb
call
inc
shl
stos
sub
popa
and
push
popf
test
aas
sbb
addb
rclb
cmc
pop
stc
xchg
sub
dec
ljmp
test
push
pop
lret
aad
and
push
jmp
sub
push
inc
and
pop
test
inc
ret
jo
sahf
cmp
jg
or
fsub
fmulp
in
out
sbbl
sbb
popf
jle
push
aad
aaa
outsl
pop
shl
mov
std
push
sbb
push
mov
adc
outsl
mov
movsb
jno
dec
mov
cmp
loope
cmp
call
out
xor
in
fisttps
es
adc
pop
push
inc
jmp
subb
jns
negb
push
pop
neg
pusha
jmp
push
cmp
xor
xor
dec
sub
mov
test
sub
jb
rolb
data16
arpl
cltd
adc
mov
in
in
data16
push
dec
jle
int
sbb
pop
cli
sub
in
cmpsl
sbb
incb
xor
loopne
fsubrp
inc
xor
inc
and
sub
loop
mov
test
andl
push
subb
pop
lock
inc
lock
addr16
mov
pop
lock
sti
cmpsl
out
test
popa
fisubrs
cmp
push
sub
push
inc
shrb
pop
xchg
xchg
push
insb
sarl
aas
outsl
mov
sub
hlt
iret
xor
int
arpl
movsl
xchg
pop
stos
addr16
inc
je,pn
cmp
or
fstp
rcrl
test
mov
hlt
pop
lcall
jecxz
xchg
test
in
inc
mov
hlt
scas
pop
insl
pop
shrl
pop
xchg
loope
inc
es
xor
mov
xor
sbb
inc
dec
cli
inc
scas
lahf
push
or
fsubl
addb
jge
cmp
sub
repnz
adc
adc
test
mov
push
xor
into
push
arpl
xor
int
inc
pop
dec
loopne
inc
mov
mov
ret
mov
insl
sbb
sbb
dec
jle
mov
jmp
loope
lock
cwtl
xor
inc
adc
mov
xchg
pushf
or
fists
cmp
bound
hlt
cmpsb
fcmovnb
push
push
xchg
adc
and
mov
push
jnp
add
cs
cmp
test
dec
out
mov
adc
push
jae
pop
pop
push
cmp
test
test
sti
imul
dec
mov
and
fdivrs
pop
xor
jnp
fsubl
das
add
pop
pushl
mov
jo,pt
and
jle
lock
cmp
stc
push
dec
inc
imul
push
fwait
cltd
xchg
lock
push
dec
inc
or
sbb
pop
adc
ret
int3
xchg
into
out
movsl
mov
sub
outsb
mov
mov
movsb
inc
add
cmpb
xor
sarl
mov
adc
xchg
inc
mov
call
cmp
xor
les
lret
add
pop
test
dec
icebp
mov
and
xchg
cmpsb
cmp
mov
das
retw
cmpsb
jne
into
adc
add
mov
stc
scas
xchg
clc
xorl
adc
or
xchg
add
cmp
les
popf
pop
lds
xchg
add
inc
stos
and
loopne
add
mov
jl
stc
pop
mov
pop
ja
outsb
push
jmp
arpl
sbb
ficompl
aas
rclb
cmp
das
sbb
iret
push
xchg
cmp
xchg
push
push
in
cmp
cmpsb
cmpsb
aaa
or
sbb
dec
mov
and
add
testb
popf
dec
ja
pop
in
xchg
xchg
mov
push
mov
jl
ret
loop
xchg
divl
pop
sarb
addr16
adc
adc
out
outsl
mov
add
cmp
rclb
imul
das
add
test
or
rcrl
lret
outsb
jl
jmp
scas
ficoml
xchg
out
ds
pusha
aas
aaa
add
pop
ljmp
pop
mov
jge
sub
sar
cs
inc
outsb
mov
cmp
sbb
xchg
push
sub
js
cltd
xchg
notb
insb
repz
in
add
inc
dec
add
jle
sub
repnz
sbb
adc
mov
inc
mov
push
aad
nopl
mov
ss
iret
clc
nop
cmp
inc
je
push
adc
add
sbb
insl
nop
lcall
sub
cli
xchg
into
jbe
out
sbb
jnp
xchg
das
jb
data16
jo,pn
fs
jmp
xor
cmp
xchg
and
js
cwtl
lock
cli
jl
nop
jg
cld
inc
xchg
mov
cltd
xor
jne
pop
sub
test
jne
out
push
add
in
add
mov
xchg
cwtl
pop
adc
test
xor
std
scas
cmpsl
imul
and
cmp
cmp
xchg
aaa
fdivl
cmp
mov
loop
ss
pusha
xchg
pop
insb
testb
test
call
testb
add
daa
add
out
jg
ret
aaa
xchg
mov
repnz
add
leave
adc
pop
cltd
lcall
add
dec
inc
testl
xchg
data16
inc
sbb
push
cli
mov
movsl
xchg
scas
cmp
xchg
dec
ret
xor
fisttps
cmp
push
data16
pop
mov
xor
lock
aam
repz
addr16
rcrl
into
cmpb
or
into
ficoms
ret
into
or
sub
cmpsl
and
in
xchg
dec
cld
sbb
mov
or
test
cmp
xchg
xorl
in
jecxz
psllq
push
pop
test
mov
push
std
movsl
pop
mov
gs
popa
lret
iret
xchg
and
cmp
jnp
sbb
inc
daa
out
outsb
cmp
lods
lcall
inc
cmp
sbb
or
test
jno
loop
cltd
aam
or
push
mov
push
stos
mov
dec
jmp
xchg
adc
gs
into
inc
lcall
jne
jle
aas
pop
enter
xchg
repz
push
in
js
ja
push
pop
cmp
fcoms
shll
ret
stos
rcrb
pop
and
mov
lods
je
rolb
sar
aad
jb
cld
clc
lods
cmp
xor
sub
push
hlt
xlat
repz
mov
lds
sbb
cmc
rorl
mov
or
out
test
clc
out
inc
xchg
cld
push
pop
push
stc
dec
aam
inc
test
movsb
adc
xchg
sbb
lds
jne
jge
daa
cmp
adc
xor
test
and
jae
aam
mov
movsl
sub
sarb
add
xchg
in
test
imull
insl
pusha
cmp
xchg
out
push
push
xchg
pop
xchg
xorb
popa
out
pop
std
out
jecxz
dec
mov
ficoml
dec
mov
pop
mov
lahf
repnz
push
sbb
sar
imul
test
and
sahf
imul
push
incb
out
cmp
push
jne
pop
lcall
cmpl
add
mov
pop
pusha
rolb
clc
mov
sub
or
adc
mov
in
push
or
xor
daa
push
push
xchg
adc
mov
scas
int
jne
lahf
repnz
imul
mov
and
mov
leave
push
daa
les
mov
rorl
flds
xchg
xor
cmp
pop
xchg
push
std
xor
xchg
jae
les
mov
rcrl
in
js
pop
push
mov
cmp
icebp
sbb
cwtl
fs
std
push
pop
sbbl
jg
lods
pop
scas
pop
dec
and
inc
in
andw
xor
dec
xor
aam
fldt
jge,pn
and
leave
ljmp
cmp
into
push
add
enter
outsb
outsb
mov
mov
sub
pop
push
insb
cs
and
mov
mov
lock
scas
gs
daa
xor
fwait
sahf
and
or
or
out
mov
stos
add
push
out
adc
jns
inc
movsb
sti
dec
fs
sub
mov
sub
add
cld
cs
jle
mov
imul
inc
fcmovb
and
xor
test
test
mov
insb
cmpsl
mov
push
xor
mov
inc
jb
and
mov
pop
inc
outsl
mov
mov
icebp
int3
mov
rol
ret
daa
gs
pop
fwait
xor
push
jo
loop
jne
es
in
fidivl
jmp
jne
lret
push
andb
stos
movsb
mov
fnstsw
dec
lahf
xor
inc
xor
sahf
xor
je
mov
jmp
inc
inc
ss
mov
lret
shlb
dec
pop
add
lock
sti
or
cmp
shrb
pop
bound
jae
cwtl
das
inc
mov
mov
ret
gs
mov
imul
cmp
pushf
pop
sub
loop
fidivl
add
mov
push
js
lods
mov
mov
ret
movsb
jp
and
jnp
xor
stos
mov
test
add
mov
lods
push
sbb
loopne
popf
pushf
cmp
fs
subb
ret
mov
dec
cmp
cmpl
pusha
xor
nop
inc
pop
sub
pusha
loope
or
push
mov
mov
push
xchg
insl
fsubrl
dec
popf
dec
xlat
cwtl
movsl
lods
pslld
aas
dec
cmpsl
imul
push
clc
ja
mov
enter
dec
jl
insb
jecxz
cld
sbb
pop
fidivs
add
dec
pop
or
inc
fisttps
mov
pushf
jae
jnp
shll
push
adc
inc
xor
insb
jbe
out
pop
rorl
fidivs
push
popa
inc
insl
aam
add
push
push
scas
mov
mov
or
and
jg,pn
mov
lahf
xchg
mov
xchg
push
pusha
sub
out
arpl
xchg
pop
xor
mov
pop
cld
fnsave
test
and
jle
aam
add
test
stos
call
int3
pop
cmp
in
cmp
jne
jp
mov
lds
loopne
adcb
fmull
mov
mov
pop
jl
les
scas
or
push
cmp
xchg
imul
or
cmpb
icebp
push
flds
xchg
push
and
loope
rcr
lods
jmp
adc
mulb
lock
aam
mov
imul
dec
pop
push
jne
xchg
out
lods
pop
in
xchg
cmpsl
mov
jge
push
js
jle
sbb
sbb
pop
fisubrs
xchg
xchg
loope
mov
cmp
jae
mov
rclb
loopne
push
mov
sub
mov
orb
lahf
cwtl
lahf
or
insl
push
sub
jb
adc
stos
imull
in
inc
xchg
sti
outsl
and
push
add
insl
and
roll
sbb
fmul
fnop
data16
pop
das
push
cmc
cmp
pop
push
jl
out
jbe
and
push
mov
and
scas
mov
shrl
and
aaa
lock
popa
dec
jmp
inc
jle
xor
enter
add
das
loope
xchg
dec
pop
ljmp
in
std
fisubs
push
or
rcrb
outsl
push
daa
pop
sarb
inc
push
jne
mov
pop
mov
inc
sub
xchg
ret
sbb
sbb
jnp
loope
add
jae
stc
jg
mov
cltd
mov
movsl
inc
sub
mov
jge
pop
mov
fbld
mov
xor
push
sti
inc
adc
mov
pop
lcall
ret
cmp
xchg
adc
in
jecxz
jg
data16
jecxz
fcoms
add
idivl
mov
jmp
sub
lret
jmp
inc
jb
aaa
cld
mov
pusha
test
push
fs
es
pushf
nop
int
and
shll
ljmp
movb
jge
mov
mov
in
sbb
aas
in
inc
jle
mov
jl
shlb
ret
xor
xchg
lret
cmpsb
pop
mov
sbb
into
jle
lret
xchg
rorb
in
mov
push
push
test
mov
jecxz
jo
stos
adcb
ret
cltd
addr16
jnp
pop
shl
mov
out
and
test
xchg
scas
nop
nop
popf
repz
out
repz
aad
mov
outsb
sahf
dec
add
mov
fs
sbb
stos
mov
mov
in
cmp
sub
leave
mov
decb
and
or
pop
aam
jnp
inc
inc
js
imulb
test
jbe
in
in
push
pop
sar
dec
add
es
in
lret
mov
orl
dec
test
jae
cwtl
mov
add
push
xor
arpl
mov
mov
aas
adc
sub
pop
xor
lock
popa
movsl
pop
xchg
jmp
or
xchg
je
mov
inc
jae
fistps
and
cmp
inc
and
push
and
push
sbb
mov
dec
inc
in
out
insb
dec
std
inc
jnp
into
cmp
adc
dec
cmpb
add
ja
jge
nop
out
jle
add
scas
mov
push
call
cwtl
repz
fwait
xchg
xchg
into
push
xchg
int3
or
xor
stc
outsl
cmpl
aam
xor
insb
cmovb
movsl
xchg
std
pop
jg
daa
imul
xor
and
int
add
inc
insl
lods
and
ret
sarl
ja
pop
cs
pop
pop
xor
repz
std
or
std
dec
pop
mov
xor
out
dec
mov
sahf
lret
push
xor
int3
fldlg2
push
mov
adc
cld
xor
mov
xchg
js
and
mov
fstl
mov
mov
mov
lds
sub
rcrl
daa
mov
je
aam
xorl
xor
mov
dec
es
outsb
icebp
fnstenv
jno
pop
inc
jl
in
lock
dec
in
sub
dec
xlat
inc
xchg
mov
jno
jo
push
cltd
push
pusha
addr16
xchg
pop
cwtl
daa
cli
in
test
inc
push
xchg
leave
jg
andl
mov
rdtsc
xor
push
push
sub
or
mov
mov
test
add
push
mov
or
mov
sbb
pusha
ja
cmp
add
inc
sbb
or
movb
ss
jb
aad
mov
lods
push
repnz
xchg
push
inc
enter
sahf
xor
push
lret
mov
cmpsl
jp
sti
sub
mov
les
pusha
popa
mov
outsl
iret
mov
cmp
mov
cmp
jbe
and
cmp
or
xchg
and
jne
push
xor
jne
dec
add
test
xchg
mov
je
inc
ljmp
mov
cwtl
fldcw
jecxz
add
test
push
push
ja
xor
loop
sub
mov
movsl
dec
or
mov
jae
push
xor
inc
stc
pop
push
xor
cli
ja
push
scas
inc
ret
jb
imul
push
push
std
test
daa
pop
pop
rcrl
lret
cmp
das
xchg
stos
int
mov
sub
subl
aaa
ret
pop
or
xchg
lock
xor
ja
push
xor
jns
in
stos
add
push
into
mov
pop
stc
pop
sahf
mov
ret
cs
push
mov
mov
jo
out
mov
push
adc
out
add
mov
fcmovu
add
jnp
mov
jns
adc
xor
out
lret
push
leave
stos
jmp
mov
loopne
dec
mov
scas
roll
movsl
jns
jmp
push
push
lret
aaa
jae
mov
jg
in
mov
cmpsl
ljmp
adc
adc
cmc
cltd
inc
fs
mov
mov
mov
repz
rorb
mov
addl
scas
nop
aas
out
jne
dec
out
pop
lds
repz
mov
das
jbe
sub
xchg
jnp
icebp
mov
push
adc
call
pop
call
ret
out
dec
push
and
sbb
adc
mov
mov
mov
out
je
fidivs
add
mov
aaa
push
xchg
cmp
es
sbb
test
in
rcrb
ja
mov
jno
int
xchg
and
loop
pop
cmp
loopne
call
test
stos
push
scas
inc
adc
pop
push
xlat
cltd
std
and
dec
ret
cmp
sub
mov
xchg
insl
xor
push
cmc
adc
xchg
add
pop
loop
and
lret
sub
mov
hlt
adc
xlat
lret
lds
js
pop
fnstsw
hlt
dec
out
gs
sub
out
mov
pop
sbb
or
mov
addl
sahf
loopne
sbb
mov
jmp
clc
xor
mov
popa
sub
and
std
and
or
xor
adc
ret
xchg
mov
xchg
fists
shrb
mov
icebp
cmp
sbb
fisubl
xchg
stos
dec
iret
sub
xchg
jns
ret
rolb
sti
scas
movsb
decb
lret
addr16
add
cld
ja
push
test
mov
cltd
gs
jge
jno
pop
hlt
jmp
stos
adc
or
jle
adc
inc
jl
add
dec
mov
popf
push
add
fidivrs
pop
into
fs
sti
imul
out
mov
in
adc
js
sbb
int3
test
clc
xor
cmpsl
mov
pop
loope
and
roll
or
in
sbb
add
mov
sbb
sbb
cmp
adc
or
jns
inc
pop
xor
std
dec
dec
pushf
ljmp
add
rolb
lods
addr16
sbb
xchg
xlat
nop
pop
dec
lahf
fiaddl
sahf
call
cmc
pusha
sub
lcall
cmpsb
mov
call
xor
xchg
aas
jp
insl
dec
cmp
scas
cmpsb
mov
ljmp
fidivrl
aam
pop
adc
arpl
mov
aas
mov
mov
mov
sbb
int
pusha
mov
in
jbe
push
cmpsl
nop
or
fcomps
clc
jmp
xor
mov
push
lahf
and
add
xchg
push
outsb
or
add
insl
in
inc
lods
cmpsb
xchg
enter
pop
cmp
rcl
enter
lret
fdivrs
lock
xor
jb
and
ljmp
repz
cwtl
xchg
and
cmpsb
xor
test
int3
stos
ret
or
jmp
adc
lea
jae
adc
cmp
ss
mov
repz
sarb
sbb
es
or
in
pop
leave
push
adc
xchg
aam
jmp
xor
test
imul
hlt
mov
push
scas
insl
cli
jl
add
addl
ljmp
fnstenv
mov
ljmp
xor
mov
testl
fwait
movsl
mov
test
mov
scas
push
pop
push
jl
data16
in
push
cmp
cwtl
stos
inc
jp
cwtl
xchg
inc
jbe
ljmp
or
adc
shlb
and
stos
mov
pop
nop
out
push
dec
dec
mov
and
mov
jno
sbb
ret
in
shlb
and
std
fwait
cmp
adc
in
sbb
mov
mov
push
stos
sbb
fstpl
dec
sub
mov
jne
jae
cmp
add
mov
lret
sbb
popf
test
jg
repnz
lds
cmp
out
sbb
sbbl
scas
dec
or
fildl
lds
scas
fists
cmp
and
jno
aad
enter
and
adc
testl
or
fnsave
add
sbb
stos
or
mov
adc
outsb
rcl
push
fcompl
outsb
push
push
and
dec
fdiv
shll
sbb
fldt
lahf
rcll
pushf
add
sbb
dec
cmp
add
mov
dec
imul
in
outsb
xchg
or
sbb
push
xchg
xor
sahf
push
ret
mov
sbbl
imul
jb
faddl
xlat
les
jp
data16
pop
mov
ds
pop
shrb
dec
pop
xchg
push
fs
rcr
or
dec
push
ds
cmc
ds
test
cmp
push
xchg
pop
sub
xor
stos
cmc
repz
mov
xchg
pop
outsl
in
mov
inc
out
jp
iret
xlat
lret
pop
test
popl
xchg
xchg
pusha
and
stos
mov
das
fcmovu
je
cmp
faddl
dec
lcall
mov
fwait
ljmp
dec
loope
push
sub
mov
inc
sub
mov
add
cmp
jg
and
stos
out
sti
test
bswap
hlt
fnstenv
hlt
test
dec
pop
addr16
xor
add
neg
push
push
add
mov
icebp
dec
push
mov
xchg
out
fists
dec
fwait
add
movsb
mov
pop
cmc
ja
mov
pop
push
sub
lea
loop
test
fldl
movsb
mov
push
mov
xor
push
iret
shll
pop
rorb
andps
outsb
ficompl
push
into
rcll
adc
push
sbb
mov
repnz
je
into
jge
scas
jno
test
repnz
rcrl
or
out
xchg
jno
shl
in
or
insb
and
leave
mov
fisubl
imul
scas
lea
pop
pusha
insl
cmp
and
out
mov
test
mov
inc
xor
xchg
lcall
scas
sbb
aaa
test
xchg
arpl
xchg
ret
inc
push
mov
jb
les
inc
leave
fildll
mov
push
jb
imul
out
push
push
divl
repz
es
dec
gs
sub
cmp
mov
inc
add
rcl
jmp
nop
push
jecxz
mov
xchg
bound
cs
pushf
xchg
mov
and
pop
jne,pt
cs
shr
testl
xchg
lahf
insb
mov
ficoms
add
les
ss
icebp
add
call
inc
adc
inc
sahf
movsb
push
mov
mov
adc
adc
sub
cwtl
xchg
ret
gs
les
loope
inc
pop
push
and
insb
mov
pop
shll
xor
dec
in
xor
lods
sbb
loopne
mov
aam
jle
jb
push
and
dec
mov
jecxz
popa
push
cmpsb
sbb
mov
arpl
xchg
shrl
xchg
push
inc
test
std
lds
mov
sahf
outsl
mov
pusha
jnp
jg
pop
mov
lret
scas
cwtl
mov
daa
ss
mov
cmp
pop
push
mov
add
xchg
sub
test
pop
or
sub
in
mov
mov
jecxz
jp
push
aas
mov
data16
dec
out
push
ret
pop
rcrl
xchg
js
cmp
lret
jo
stos
es
sub
jb
ficompl
arpl
sub
and
loopne
mov
push
cld
pop
outsl
lods
les
cli
mov
jnp
or
addb
fsubs
jl
faddl
mov
adc
dec
mov
mov
es
rorb
arpl
nop
outsb
push
pop
loope
mov
mov
and
sub
fs
mov
mov
lcall
push
cli
cld
jge
stos
add
sbb
cs
out
cs
push
test
testl
xchg
cmp
lea
sub
mov
das
xor
pop
xchg
dec
mov
add
xchg
xchg
mov
xchg
lret
mov
fdivr
cmpsl
jo
mov
cmp
mov
repnz
sub
dec
xchg
pop
mov
cld
jp
test
mov
or
ljmp
mov
adc
mov
xchg
xchg
mov
leave
xor
add
ret
and
pusha
in
adc
ss
push
cmp
fcmovne
mov
lcall
arpl
rcrb
testl
cld
ret
enter
popa
xor
sbb
mov
push
cltd
push
cltd
mov
mov
dec
in
sbb
pop
hlt
push
xchg
xor
jmp
lcall
sbb
mov
mov
stos
sbb
cltd
ja
sbbl
scas
push
nop
dec
sarb
cmp
mov
orl
mov
test
ss
sti
pop
loope
inc
or
inc
dec
in
jg
pop
mov
sub
or
xor
into
dec
test
and
jle
fs
mov
mov
icebp
pushf
mov
push
shrb
call
sarb
jbe
loop
or
imul
popa
jle
imul
dec
jne
fidivrl
out
cmp
js
jae
mov
hlt
div
mov
cmp
fidivl
ss
push
sub
lods
je
inc
add
adc
push
movsl
inc
jmp
xor
xchg
inc
pop
in
inc
jge
mov
cmp
inc
and
cs
out
xchg
in
sbb
inc
arpl
push
xor
inc
mov
adc
jnp
mov
iret
mov
cmp
xchg
jecxz
inc
adc
roll
dec
fstps
out
inc
icebp
sahf
xchg
aam
imul
frstor
pop
jecxz
mov
push
test
loopne
outsb
pushf
jns
dec
fisubrs
outsl
inc
xchg
andb
jle
daa
fnstsw
hlt
jl
add
testl
push
xchg
mov
mov
mov
mulb
in
repz
clc
enter
jne
or
rcrb
jns
xlat
inc
mov
movsb
add
clc
mov
add
imul
aas
push
mov
mov
imul
icebp
lds
stos
fildll
mov
fists
fistl
ror
cmp
ja
test
inc
mov
fistpll
cmp
dec
rcrb
movsb
mov
lock
mov
daa
lahf
jo
cmp
cltd
popf
repz
mov
xchg
mov
inc
out
dec
mov
fildll
cmp
or
cmp
push
jb
ror
or
mov
mov
aas
sub
sub
vpcomw
push
lret
mov
xor
pop
pushf
es
les
sbb
xor
imul
push
sbb
mov
and
lods
mov
adc
iret
pop
cmp
lea
cmp
mov
sub
scas
pop
sbb
push
pop
cmpsl
jge
adc
in
and
negl
cmp
stos
sbb
adc
adc
mov
xchg
out
stos
sbb
aad
imul
xor
cmp
xor
inc
adc
rorl
aaa
arpl
dec
inc
movsl
aas
mov
pushfw
data16
fisubl
push
mov
repz
cmp
outsb
je
cmpsl
es
addr16
insl
add
pusha
cmp
pushf
out
xchg
adcb
outsl
lods
mov
jmp
inc
cld
cmp
shlb
aas
ss
pop
push
add
dec
sub
fisubs
movsl
xor
push
xchg
mov
cmp
in
mov
mov
jg
sbb
dec
mov
pusha
call
and
addr16
ds
xor
jnp
ret
cmpsb
and
dec
jge
test
pop
sbb
adc
add
andb
pop
adc
push
or
clc
mov
sub
push
repnz
inc
addl
imul
fcmovnbe
ja
xchg
int3
ljmp
cmovg
dec
scas
add
mov
icebp
mov
test
addb
push
sub
in
jns
ss
out
es
ds
repnz
pop
pusha
pop
xor
lret
dec
pop
fs
imulb
rcl
jae
jp
int
cmp
cmp
sbb
int3
sti
loopne
push
das
mov
xchg
push
nop
rcll
and
iret
ja
int
adc
mov
and
push
cs
cs
mov
mov
aad
and
in
adc
mov
nop
test
imul
lods
out
xchg
jmp
movsb
pop
into
popa
mov
jecxz
xor
repz
test
cmpsl
mov
adc
das
xchg
pop
stos
adc
pop
push
cli
ret
arpl
jle
push
jmp
jb
sub
ss
mov
loope
cld
filds
pop
ss
mov
jb
stc
cmp
sub
cmp
movsl
sub
push
pop
lods
lahf
push
insl
subb
jecxz
inc
test
cltd
add
or
push
cltd
add
pop
jg
pop
fs
xchg
out
orb
and
not
loopne
sbb
mov
stos
add
movsl
and
insl
sarl
and
or
lods
lcall
pop
mov
cltd
pop
push
in
arpl
push
or
push
ja
repnz
and
xchg
sub
cmp
dec
xor
xor
xor
je
mov
push
sti
testb
pop
inc
andb
cli
out
cwtl
push
pop
xor
ds
adc
mov
aaa
push
mov
jg
xchg
or
cmp
in
rcll
fimuls
popa
insb
or
dec
lret
js
pop
enter
pop
inc
rcll
pop
pop
xor
outsb
outsl
sbb
lahf
dec
loop
fdivrl
mov
adc
and
adc
mov
cli
mov
xor
ret
out
bound
add
rcll
dec
inc
popf
sahf
loop
mov
rcll
xchg
xchg
cmc
cmpsb
adc
dec
lds
pop
inc
fidivl
jo
ds
push
push
pop
loop
or
jns
add
jne
mov
cmc
jl
cmc
inc
bound
lret
insl
inc
out
push
scas
push
fwait
cld
adc
adc
inc
sub
jo
sahf
jo
pushf
inc
in
addl
mov
add
call
push
add
and
jns
popf
adcb
test
shl
inc
negb
imul
xchg
sub
iret
out
cld
pop
pop
push
mov
xor
out
imul
adcb
mov
mov
mov
clc
loope
repnz
or
pop
mov
rcll
cmpsb
cltd
pop
jge
subl
jno
jae
outsl
nop
cmpsl
xchg
fdivrs
dec
loopne
jno
inc
fsubl
adc
mov
sti
mov
xchg
ss
das
xor
adc
jno
push
iret
sub
sahf
jmp
adc
sub
dec
pop
testl
mov
addr16
inc
xchg
sar
sbb
popf
mov
iret
ret
jnp
inc
push
fucom
insl
push
pop
or
push
mov
xchg
mov
ljmp
lds
jge
popa
mov
mov
out
stos
add
mov
mov
ret
jg
mov
add
xor
xchg
ret
mov
xlat
mov
sar
xorb
dec
mov
xchg
adc
cli
xor
pop
scas
push
dec
out
mov
mov
mov
andb
and
or
push
or
daa
psrlq
adc
lret
adc
and
das
nop
and
mov
xchg
jb
fs
test
add
mov
jp
sbb
lods
stos
sti
out
mov
push
gs
xor
mov
divb
jl
xchg
mov
fldt
shl
mov
dec
pop
pop
aad
xchg
dec
enter
xchg
inc
dec
pusha
jmp
hlt
repz
lahf
inc
cld
cmp
add
mov
daa
imulb
pop
imul
in
mov
out
movsb
hlt
pop
mov
lahf
fists
fcom
popa
outsl
out
dec
and
sahf
rcl
out
cmp
inc
lds
popa
mov
add
orl
dec
mov
and
shrl
mov
jg
test
movsb
cmp
loope
or
inc
adc
sub
adc
comiss
insl
movsl
mov
xor
enter
mov
repz
pop
out
cld
and
lret
shlb
psubsw
mov
inc
and
mov
test
mov
push
rcrb
ret
mov
mov
fcompl
cs
outsl
test
xor
bound
std
add
clc
mov
pop
ds
mov
lea
stc
stos
sub
mov
dec
adc
xchg
daa
and
aam
ret
sbb
xor
imul
mov
fbstp
xchg
mov
pop
rolb
jno
fwait
js
add
sbbb
push
dec
imul
lods
and
gs
sbb
pop
jge
xor
add
test
sbb
jo
pushf
shlb
fistl
jp
jnp
ret
cmp
addr16
xlat
incb
sub
sbb
mov
pop
pop
push
or
adc
inc
cltd
andl
mov
jno
hlt
test
or
jne
push
push
repnz
stc
fs
jbe
outsb
shr
outsl
les
pop
lahf
xor
loopne
notb
movsl
dec
sbb
dec
pop
in
mov
clc
add
and
and
in
lcall
mov
sub
lods
dec
mov
push
push
fwait
mov
mov
adc
cmp
shl
and
inc
sub
rcr
lods
popf
push
ror
jecxz
and
cmp
inc
jae
enter
push
arpl
popa
push
hlt
into
in
cmpsl
adc
xchg
push
lret
sbb
scas
fisubl
inc
popa
jmp
add
dec
jmp
sahf
cs
jg
xchg
cwtl
or
daa
inc
mov
fldenv
adc
dec
and
ss
sbb
movsl
pusha
cli
and
iret
mov
setb
push
adc
add
or
adc
jae
sbb
mov
repz
sbb
mov
addr16
rol
jo
sahf
and
roll
bound
jge
daa
imul
and
mov
mov
andl
pop
cmp
mov
xchg
push
aaa
push
jmp
xor
test
out
int3
fsubs
jno
pop
push
test
out
call
lret
dec
push
ja
push
add
int
je
imul
dec
jecxz
xchg
insb
jo
popf
ds
dec
push
clc
mov
sbb
mov
jmp
adc
data16
daa
and
inc
scas
xchg
xchg
mov
mov
push
pop
mov
inc
std
mov
push
xor
andl
xor
mov
xchg
xor
xchg
jbe
lods
in
dec
sti
pop
mov
jle
xor
aam
jne
mov
jp
push
inc
sbb
jo
fldt
push
lods
mov
lret
mov
mov
pop
cmp
rcrb
shrl
rol
fwait
dec
xchg
and
xchg
lret
popf
loope
stos
add
hlt
sbb
mov
push
test
ret
xor
and
push
pop
sbb
pop
inc
dec
fs
jb
cwtl
push
inc
dec
cmp
scas
jne
sbb
pop
mulb
inc
inc
sub
add
sbb
pop
mov
add
in
aam
add
cwtl
cmp
out
les
addr16
gs
insl
xchg
inc
mov
push
std
imul
mov
idivl
xchg
inc
dec
jecxz
cli
mov
push
jns
pop
sub
or
push
xchg
mov
movd
gs
mov
ja
sahf
sbb
xor
jb
andb
adc
roll
movsb
fisttpll
jns
nop
mov
pushf
xchg
shlb
sti
add
andb
jno
ja
pop
pop
mov
pop
in
aaa
lock
in
adc
xlat
or
rcll
sbb
test
jg
push
and
jo
andb
loop
test
inc
lahf
ss
ror
aaa
pop
sahf
mov
cli
jb
mov
adc
jo
cmp
push
push
and
rorl
push
xchg
nop
inc
mov
out
mov
push
sub
cmp
push
aam
jle
sti
pop
cmp
jge
jnp
aas
mov
sbb
ror
jnp
pop
in
adc
inc
stc
dec
in
aad
addr16
mov
fnstsw
inc
data16
or
inc
jle
inc
xor
dec
and
cmp
testb
pop
pop
mov
mov
or
pop
rclb
ljmp
xchg
cmp
jne
lcall
add
sub
push
push
fwait
sahf
cmp
mov
cmp
sbb
xor
lock
or
xchg
inc
mov
mov
mov
or
or
adcb
inc
pusha
cmp
push
clc
lea
or
int
fstpl
rcl
stos
push
imul
and
daa
insb
fimull
dec
sbb
repz
and
adc
sahf
stos
cmp
dec
ret
movsb
mov
movsb
pop
das
cmp
adc
mov
sti
jo
divb
or
stc
cmp
mov
mov
or
lcall
dec
xchg
leave
jge
stos
popf
insl
xchg
pop
adc
xor
sub
ror
push
imull
icebp
push
push
jno
mov
insl
jnp
loop
fsubrl
jmp
inc
cld
popf
jp
cmpsl
push
xor
scas
mov
ds
sub
out
fwait
dec
movsb
inc
movsb
ja
pop
xor
fldenv
cmp
fs
pop
jns
push
cmp
xchg
sub
dec
ficoms
cmp
xchg
add
bound
movsl
add
mov
mov
bound
test
mov
sbb
cmp
mov
adc
cmpsb
dec
jnp
adc
imul
xor
and
arpl
xor
mov
imul
ds
inc
xor
sub
dec
setns
push
sbb
lret
xchg
daa
xchg
sarl
xchg
mov
rclb
dec
out
or
cmpsl
incl
jae
lahf
mov
ret
movsl
mov
push
xchg
lcall
mov
push
and
mov
push
push
and
sub
outsl
xor
in
mov
test
mov
push
popa
mov
xchg
outsl
mov
enter
test
or
jnp
les
and
and
sbb
cli
adc
mov
push
inc
divb
into
stc
mov
xchg
je
imul
cmp
lahf
ljmp
je
sub
fidivl
inc
fs
xor
sbb
sbb
shrb
push
es
lret
cmp
xor
xor
mov
push
xor
jno
lods
rcr
cli
sub
pop
cs
cmc
ja
and
sub
test
adc
pop
out
mov
fidivrl
std
mov
pop
jmp
mov
out
pop
jb
inc
insb
cmp
sbb
xor
movsb
xchg
or
cmc
insl
lcall
mov
mov
inc
push
xrelease
sbb
jae
jae
adc
cmp
aad
fdivs
pop
sub
pop
mov
xchg
xorl
adc
decl
lret
clc
push
adc
mov
jecxz
nop
adc
add
mov
cmpsb
adc
fidivrs
xor
das
sub
aad
shll
adc
mov
adc
imull
or
imul
test
push
push
fwait
mov
dec
popa
xor
lret
cmp
shrb
test
pop
pop
ret
cltd
mov
jbe
mov
push
jb
sbb
dec
fnstcw
ficoms
out
aad
arpl
les
xchg
push
mov
dec
jecxz
cmc
inc
dec
add
pop
jne
sbb
lret
pop
adc
ror
dec
jmp
in
inc
dec
pop
sub
xchg
mov
add
pop
scas
idivb
test
imul
ret
xor
mov
cltd
xor
mov
pop
cmpsl
cmp
xor
xchg
fwait
clc
cmp
jmp
jmp
jne
and
mov
sbb
dec
je
xor
adc
aam
cmp
adc
xchg
in
sub
mov
sub
fnstenv
fstp
jmp
lods
sahf
pop
stos
mov
jo
push
mov
dec
mov
in
shll
add
jecxz
stos
jae
cli
xchg
loope
pop
mov
add
fcomp
adc
aad
xor
frstor
push
int
rcrl
int3
fcoms
out
nop
dec
xor
std
ficompl
xorb
inc
loop
cmp
inc
dec
adc
test
mov
out
mov
cmp
push
rclb
or
loope
xchg
aas
push
lods
mov
dec
gs
data16
inc
dec
mov
aam
xchg
mov
sub
decb
aad
shl
or
and
dec
push
mov
xchg
push
add
loop
xor
jb
std
aas
adc
mov
xor
mov
mov
loope
pop
scas
loop
adc
xchg
dec
dec
sbb
iret
fs
sbb
dec
cmp
jmp
out
cmp
mov
push
aam
into
add
mov
and
adc
lock
and
mov
xor
xchg
lods
sbb
xor
mov
aas
mov
movsb
scas
std
push
dec
icebp
adcb
test
xor
mov
push
popa
test
mov
scas
mov
xchg
adcl
and
xor
jae
xor
push
dec
mov
cmp
dec
push
xchg
adc
xchg
inc
add
insb
pop
test
xchg
or
push
imul
ja
mov
jge
js
jo
xor
pop
adc
lds
jg
aad
scas
push
xchg
pop
mov
inc
inc
jbe
shlb
stos
jbe
sub
push
gs
mov
movzbl
mov
mov
push
gs
add
add
loop
pushl
xchg
cld
mull
jle
inc
mov
stos
scas
push
adc
in
arpl
ja
ja
mov
pop
push
in
iret
fadds
call
aas
gs
adc
lock
jp
test
fistpl
dec
mov
loop
fcoml
rcll
rcrl
fdivl
xchg
mov
jge
notb
xchg
or
in
pop
pop
xchg
ljmp
int3
mov
push
ja
mov
mov
es
mov
or
lahf
push
outsl
or
iret
mulb
xchg
aas
cmp
mov
leave
cmp
in
movsl
xchg
mov
outsl
rcll
ret
insl
add
lods
ret
mov
cwtl
lahf
inc
js
jl
out
pop
movsl
outsb
sbb
pop
add
bound
into
jno
sub
xor
call
xchg
add
xchg
sahf
and
xchg
mov
or
in
sar
nop
sub
pusha
or
lods
add
aaa
and
adc
rcll
inc
dec
push
imul
jmp
call
in
and
cmc
ja
fdivrs
xor
mov
push
orb
inc
jp
es
cmp
aaa
enter
bound
movsb
jp
pop
cld
data16
inc
shlb
loope
pop
sub
fadds
cmp
jbe
shl
mov
call
pop
xchg
mov
ficoms
das
jnp
mov
fnstenv
inc
push
or
cmp
sarb
push
sbb
scas
fists
fnsave
mov
push
outsb
and
sub
xchg
add
sub
imul
pop
sub
or
pop
cs
divb
pop
lock
xor
pop
sub
push
imul
push
adc
jg
sbb
pop
adc
jge
jmp
inc
adc
movsl
and
in
push
lods
test
call
fcmovnb
nop
lock
fs
insb
sub
mov
dec
mov
pop
dec
mov
mov
cwtl
jecxz
dec
and
nop
xchg
ffreep
xchg
cmc
sbb
popa
test
imul
lods
add
mov
mov
push
sbb
test
xchg
lret
cmp
mov
nop
push
into
je
jo
sbb
outsl
jnp
cltd
push
or
outsl
sub
jp
imul
lea
leave
ret
xchg
jle
sar
fwait
psadbw
pushf
out
arpl
popa
cmp
mov
xchg
inc
inc
add
jne
xchg
std
cmp
xlat
imul
mov
pop
sbb
sub
jecxz
push
sub
dec
insb
cmp
je
mov
fwait
sbb
shr
arpl
andps
jae
pushf
ds
dec
push
mov
lret
mov
mov
adc
or
fsubl
dec
mov
push
test
lret
push
dec
mov
adc
stos
and
das
mov
pop
sarl
jg
sub
sbbl
addl
xlat
pusha
xchg
imul
adc
fbstp
cmpsl
mov
repnz
inc
pop
sub
je
inc
pop
cmp
imul
add
mov
ffreep
and
dec
movsb
outsl
fwait
popf
pop
aas
push
pop
popf
aam
jo
decl
scas
add
pushaw
pop
xchg
cmp
stc
inc
cltd
sub
inc
iret
rolb
sub
sub
jmp
jmp
jo
mov
rclb
cmp
insb
jne
movsl
loopne
loop
fldt
pusha
clc
push
xor
mov
enter
jge
fldl
ror
outsl
cltd
leave
je
test
lds
es
popf
cltd
pushf
insb
adcb
jae
lret
enter
cmp
in
xchg
mov
lcall
add
in
push
cmp
push
and
sub
sbb
loop
nop
testl
sar
mov
aas
mov
lcall
into
out
jge
gs
jle
ljmp
jmp
fs
adc
push
cltd
fisubrs
pop
clc
pop
pop
sbb
pop
cmc
out
xchg
lcall
mov
sub
push
loope
rcrb
fcoml
lock
push
ja
fwait
sub
scas
lds
das
xor
pushl
sahf
pushf
cltd
pop
adc
push
lds
and
imul
sub
movsl
inc
clc
inc
leave
test
adc
hlt
insl
fcoml
mov
xchg
and
sbbb
lcall
and
mov
enter
loopne
mov
rcrl
sub
js
mov
stc
lods
lods
push
leave
into
and
or
scas
push
adc
ficomps
ljmp
cmp
sbb
mov
pop
test
pop
aad
fcmovb
mov
mov
repz
mov
pusha
xchg
adc
les
std
push
icebp
jp
leave
pop
mov
es
movb
cwtl
faddp
xchg
fcom
out
or
pop
mov
and
mov
in
stos
pop
clc
in
test
lret
dec
xchg
pop
je
mov
pop
sbb
mov
jge
cmp
mov
dec
sbb
add
mov
fcmovnb
mov
repnz
cli
shrl
stc
mov
fisubl
shrl
add
mov
dec
xchg
jb
les
jmp
push
xchg
jne
sub
daa
mov
arpl
xor
pop
sbb
dec
inc
sub
dec
adcb
lahf
lahf
int3
out
icebp
cs
jns
mov
lods
mov
sbb
enter
cmp
add
sub
mov
lret
sub
mov
aaa
dec
dec
xor
fcmovnb
and
dec
xor
add
sub
cld
add
dec
fisttpll
das
adc
inc
ss
fmuls
clc
push
in
out
push
mov
adc
sbb
out
sahf
sar
jne
mov
pop
push
mov
jbe
arpl
xchg
cmc
outsl
fcompl
in
dec
pop
or
cmp
aaa
push
pop
test
add
push
jmp
pusha
andl
stos
mov
mov
rorb
sub
jge
test
pushl
mov
xor
sub
cltd
pusha
je
mov
jae
cmp
xorb
js
push
jo
rcrl
push
insb
cs
gs
or
pushf
mov
push
sti
cmp
nop
sbb
mov
leave
pop
sbb
inc
js
cmp
je
movsl
rorl
shlb
jp
mov
cmp
xor
and
mov
js
sub
mov
pop
xchg
and
sarl
push
push
mov
jne
addr16
cmp
push
stos
shll
bt
bound
xchg
iret
daa
ss
adc
inc
fstps
sbb
fs
pop
ljmp
cmp
add
push
int
jle
mov
inc
add
xchg
stos
in
sbb
jne
jge
ss
test
arpl
popa
pop
inc
jp
into
xchg
or
add
push
shll
cmp
cmpsb
out
cmp
mov
daa
fbld
and
and
push
and
lcall
bound
sbb
aaa
pop
xchg
dec
adc
mov
and
mov
cs
inc
fs
add
lret
xor
imul
shr
push
out
dec
mov
call
jae
push
xchg
push
cli
test
ds
or
push
and
push
sub
xor
hlt
lsl
adc
mov
add
xlat
sbb
jl
cmp
sarl
and
aaa
pcmpeqb
mov
sbb
stc
ret
jns
pop
faddl
ljmp
std
adc
outsl
test
xchg
shll
jg
in
add
sbb
arpl
popf
adc
pop
gs
and
mov
cmp
mov
jge
pop
repnz
mov
mov
jns
scas
test
push
loopne
aaa
xchg
pop
sub
lahf
mov
test
pushw
lcall
addb
lret
pop
sar
jecxz
test
into
mov
cmp
dec
stos
mov
mov
xor
pop
test
xchg
btr
push
sbb
enter
imulb
popf
repz
cmp
pop
push
sbb
out
push
gs
js
push
lds
cmp
lcall
xor
je
pop
mov
sbb
arpl
shll
movsb
seta
clc
ljmp
sbb
jge
jnp
ret
cmp
ja
sbb
cmpsl
push
dec
pop
xchg
inc
ljmp
lcall
xchg
enter
jecxz
xchg
push
mov
or
or
in
stos
lods
or
and
jl
xor
inc
orl
movsb
mov
jo
pop
xor
sti
sar
shrb
cmpsb
and
mov
into
pop
lods
in
lds
or
add
sti
xor
sub
stos
jbe
outsb
push
mov
mov
push
ds
push
xchg
fdivrs
jmp
loop
shrl
add
pop
aaa
aas
jns
pop
xchg
outsl
xchg
fisttps
faddl
adc
push
xor
adc
pop
add
sub
int3
inc
pop
fwait
mov
inc
mov
in
loop
pop
jle
repnz
stc
push
sbb
xchg
push
pop
mov
push
xor
jmp
cmpsl
jg
test
scas
push
push
ja
mov
inc
jmp
lds
cmp
sarl
jnp
dec
cmp
jnp
dec
cli
lret
cmp
outsl
bound
pop
testb
lret
jl
jmp
jmp
out
jp
iret
arpl
scas
icebp
pop
push
pop
es
dec
movsb
inc
orb
mov
imul
sbb
push
jl
jbe
sti
in
fs
inc
dec
mov
cmpsb
xchg
xlat
xchg
test
add
pop
jns
test
inc
mov
push
fmuls
hlt
dec
add
mov
sbb
fwait
pop
sbb
in
addr16
jp
mov
rolb
sub
int3
jl
outsb
sbb
jae
aam
sub
sbb
inc
push
mov
push
inc
in
pop
mov
scas
mull
scas
iret
out
sub
out
pmulhuw
jns
filds
dec
shrl
jle
or
bound
fcomps
aas
out
fdivrs
xor
lret
pop
test
jns
int3
jno
sub
out
pop
sub
sub
mov
push
pop
imul
pop
xchg
mov
pushf
push
mov
dec
in
inc
mov
clc
or
push
inc
rcrl
mov
outsl
shrl
sbbl
and
hlt
pop
cmp
add
pop
xor
dec
xor
mov
sbb
add
xchg
adc
mov
pop
outsl
in
btr
mov
mov
shl
xchg
scas
xchg
jle
inc
btc
fsts
xor
es
mov
add
nop
push
cmp
loop
lds
or
test
or
dec
mov
cmp
and
stos
cwtl
rolb
and
and
sahf
mov
mov
xor
outsb
push
cltd
mov
cmc
call
popf
fiadds
test
cmp
mov
sub
into
aas
std
push
push
sbb
and
ficomps
das
divl
mov
xor
insb
sbb
mov
pushf
xor
jns
mov
jle
sub
jno
push
add
nop
in
imul
outsl
ret
lret
sub
cmp
outsl
or
mov
cmp
int
mov
loop
xchg
cmc
icebp
push
mov
das
es
stc
movsb
fistps
pushw
in
sub
ljmp
push
xor
mov
mov
hlt
add
cli
adc
adc
cmc
xor
enter
push
xchg
repnz
rolb
lea
mov
mov
jo
sub
sahf
insb
imul
divl
add
xor
jno
mov
je
pusha
into
daa
cmpsl
xchg
out
xchg
pop
sbb
cld
dec
mov
test
inc
dec
inc
xor
mov
stos
add
test
sub
popa
xor
ss
add
cmp
movsl
inc
adc
insl
adc
and
mov
mov
out
cmpsb
sbb
addr16
repz
add
call
dec
push
sub
ljmp
jne
add
jmp
out
aad
mov
inc
ret
or
push
mov
jp
jmp
jle
adc
sbb
sbb
sub
mov
push
jb
add
loope
push
mov
xor
iret
cmp
mov
push
xchg
jp
imul
ror
or
pop
pop
mov
push
cmp
repz
pop
jle
and
jbe
imul
fidivrl
sarl
test
ret
cmp
ret
mov
dec
out
mov
rolb
sbb
adc
enter
mov
repz
loopne
loopne
clc
jbe
dec
ljmp
rcrb
icebp
cli
jbe
testl
pop
fs
or
sbbb
outsl
fst
iret
jb
int3
jbe
mov
push
push
jge
push
div
in
je
inc
in
cmp
out
lret
cmc
mov
lods
cld
and
scas
bound
arpl
mov
mov
test
jae
mov
push
fwait
mov
jecxz
mov
mov
mov
lahf
dec
std
call
filds
jecxz
mov
mov
add
mov
clc
rcrl
sahf
or
sahf
sub
and
xchg
jmp
jmp
subl
push
rcr
mov
ss
or
sahf
jge
enter
flds
pop
pop
ljmp
adc
pop
mov
lods
aas
pop
movsb
stc
cmpsb
jmp
adc
aas
mov
iret
lea
inc
fstpt
adcl
inc
in
mov
in
mov
mov
adc
sub
insl
add
dec
enter
push
ret
divl
jns
xor
jl
or
pop
xor
mov
xor
outsl
inc
lds
repz
popf
outsb
rcr
pop
or
imul
test
mov
int3
sub
outsb
cmc
sub
pop
or
cmp
test
dec
jo
cmpsl
push
lock
adc
imulb
jne
movsl
out
lds
cltd
lods
jle
xchg
in
mov
lea
in
js
int
out
mov
add
mov
iret
xlat
mov
jbe
shl
mov
cmpsb
stc
mov
aad
sbb
or
sti
fwait
ljmp
sub
shl
test
sub
sub
js
adc
jg
cmpsb
stos
nop
xchg
xor
ljmp
mov
inc
lods
inc
cltd
insl
in
imul
out
stos
aam
mov
cmp
mov
sbb
inc
fldenv
int3
or
sub
rolb
dec
sbb
es
xchg
sbb
scas
or
pop
flds
pop
mov
fists
mov
mov
pop
ljmp
aaa
dec
cltd
out
out
ljmp
and
xchg
divb
mov
push
popa
mov
es
lods
jmp
fbld
mov
push
sbb
lea
out
shrl
dec
xor
xchg
cmp
movsb
adc
inc
in
adcl
mov
into
adc
sti
test
pop
arpl
neg
ret
in
sub
iret
in
mov
push
adc
sub
xchg
adc
popa
add
xor
pushf
mov
movsl
adc
cltd
es
lds
xchg
cmp
mov
mov
adc
cs
inc
inc
stc
out
mov
fsubs
add
xchg
cmp
cs
aad
rclb
dec
cmpsl
fsubrl
jmp
xor
pop
movsl
arpl
inc
mov
aaa
fwait
pop
push
fcoml
and
add
std
shl
adc
adc
stos
lock
test
jecxz
and
xchg
fldcw
fmull
cmpsb
fistpl
cmp
pusha
cltd
test
sbb
mov
fs
adc
xchg
loopne
mov
adc
clc
cli
xorb
shlb
mov
mov
and
aad
lock
pop
inc
lret
clc
stos
sbb
push
mov
arpl
in
arpl
lahf
mov
mov
mov
jge
hlt
inc
roll
repz
movsb
out
shl
mov
bsf
decb
shl
xor
icebp
jg
cmp
jp
inc
in
fnsave
test
std
insl
dec
roll
adc
scas
inc
inc
jg
cltd
push
test
aad
pop
arpl
mov
mov
mov
pop
mov
hlt
aad
push
es
aaa
loope
jp
repz
jge
add
push
xchg
addr16
cmp
pop
xchg
xchg
xchg
push
push
mov
or
pop
jp
imul
mov
nop
ja
int3
movsb
xor
jecxz
gs
hlt
push
adc
test
loope
sub
in
stc
lahf
insb
outsb
cld
and
adc
jnp
std
dec
popf
sbb
rcr
in
inc
push
or
xchg
pop
pop
push
pop
and
push
sub
int3
jb
gs
jl
movsl
or
jp
sti
jmp
xor
mov
cmp
ds
mov
aam
adc
add
pop
or
es
lock
fwait
pop
fs
jecxz
std
cli
gs
mov
jl
xor
xchg
pusha
pusha
sbb
sbb
mov
jae
cmpb
shll
and
sbb
inc
xor
cmpsl
dec
jb
jne
inc
mov
mov
adc
cld
rolb
sbbb
clc
dec
mov
leave
ljmp
jns
decl
out
dec
mov
mov
aaa
enter
rorb
dec
incl
xor
mov
fistpll
add
clc
mov
dec
mov
or
add
pushf
cmc
stos
mov
and
loopne
add
xor
mov
push
mov
mov
and
jb
mov
dec
icebp
jmp
sbb
jns
pcmpeqd
pop
push
fsubrs
daa
in
pushf
clc
notb
lret
mov
jnp
ja
cmp
add
rcrb
sbb
pop
lods
in
std
inc
stc
stc
lret
xchg
insb
mov
or
icebp
inc
adc
cltd
or
jb
subl
xchg
mov
shlb
dec
mov
jmp
imul
push
stos
push
mov
push
imul
arpl
pop
adcl
jae
ret
repnz
neg
fcoms
pop
xchg
insl
mov
xchg
mov
push
aad
adc
lret
push
mov
ljmp
popa
xor
push
push
sub
clc
jns
mov
ss
in
test
push
xlat
and
mov
lcall
movsl
data16
cmpsl
sub
mov
inc
je
mov
sbb
pop
jecxz
and
test
icebp
cmp
mov
ds
xchg
popf
mov
jmp
gs
call
and
pop
push
mov
pushl
lahf
inc
or
sahf
je
in
insl
cltd
push
cwtl
loop
jbe
and
icebp
sbb
jbe
sti
push
stos
and
clc
or
test
dec
js
in
xchg
ret
aad
ss
push
or
loope
inc
dec
cmpsb
mov
aaa
aam
push
addr16
test
lcall
adc
movsl
aaa
call
fsubl
cmpsb
mov
or
xor
stos
dec
fistps
cmpsl
and
je
js
imul
imul
add
jne
cmpsl
fs
and
fsin
lret
or
cmp
xor
inc
lret
out
stos
lahf
popf
fisubrl
icebp
mov
dec
xchg
mov
arpl
pop
or
iret
pusha
call
aad
jb
xchg
addl
jns
mov
lcall
push
mov
js
cmc
out
pop
pop
sbbb
int
sti
xor
scas
pop
outsb
inc
rclb
xchg
aam
mov
push
jb
mov
lcall
rclb
je
mov
jp
cwtl
cld
add
push
add
scas
xor
sti
sbb
xchg
in
es
test
or
push
popf
pop
mov
insl
popa
jle
int
sbb
out
insb
pop
imul
ljmp
sbb
xchg
clc
sarb
push
or
xchg
movsb
aaa
pop
mov
shrl
pop
jns
imul
inc
pop
mov
out
scas
xor
inc
or
sub
push
sbb
mov
aad
jnp
mov
cmp
addr16
and
outsb
jle
int
mov
sbb
mov
pushf
jmp
les
lods
mov
jl
push
ljmp
cwtl
xor
xor
shll
hlt
mov
xlat
aas
stos
pop
xchg
je
push
or
frstor
add
aad
xor
cmp
and
outsl
and
mov
stos
dec
aad
insb
sbb
popf
outsb
jle
imul
iret
dec
mov
cmp
mov
out
jmp
loop
ret
les
xchg
imul
in
sbb
cmpsb
test
xchg
xchg
mov
test
mov
ds
lds
mov
mov
inc
jecxz
pop
mov
stc
adc
mov
stos
mov
daa
lds
mov
mov
pop
xchg
or
mov
xorl
push
lahf
hlt
mov
push
sti
outsl
jno
js
lahf
ja
icebp
cmc
call
cli
xor
cmp
insb
jbe
adc
xchg
cld
xchg
fbld
cmpsl
int3
orb
sub
fnstsw
jnp
test
mov
ret
xchg
cmp
fs
sbbl
mov
jecxz
sub
mull
arpl
mov
xor
jg
rcrl
mov
mov
xor
cmp
sub
popf
cmp
cmp
sub
les
mov
jmp
sahf
xlat
inc
sbb
mov
sti
ljmp
test
lret
xor
fidivrl
lea
cmc
sub
bound
loop
and
sbb
sbb
push
adc
mov
sbb
fimuls
lods
dec
les
mov
add
push
movb
insl
aas
dec
inc
mov
lret
xchg
lods
cmp
test
jl
sub
mov
sub
hlt
idiv
cmp
divl
icebp
sbb
dec
mov
pop
clc
out
mov
xor
sbb
and
in
mov
enter
jbe
xor
sti
test
mov
pop
xor
push
or
outsl
pop
pushf
arpl
and
pop
add
jnp
jnp
mov
jp
rorb
outsb
xor
loopne
out
sbbb
popf
add
ror
cmpsb
fcoms
dec
push
stos
cld
xchg
mov
sbb
push
lods
fldt
lea
scas
inc
in
scas
repz
cltd
add
gs
in
and
sbb
xchg
sub
jg
sub
jle
subl
stos
fldl
xchg
popf
repz
pop
je
rol
inc
fstpl
sub
lods
xchg
push
adc
or
cltd
or
inc
pop
std
cld
add
add
pusha
cmp
push
fdivrp
loopne
jae
stos
pop
mov
cmp
adc
xchg
mov
aas
bound
int
aad
sub
and
insl
decb
andl
pop
leave
pop
jmp
out
cmp
lcall
imul
adc
out
adc
pop
je,pn
inc
lods
cmpsl
int3
fwait
mov
xchg
and
rorl
pop
push
mov
pop
cmp
sub
loope
inc
mov
lds
push
mov
push
lods
inc
out
jae
and
or
aaa
mov
cwtl
mov
adc
repnz
xchg
and
adc
int3
sub
sub
mov
imul
jmp
data16
xchg
mulb
cmp
popf
xor
test
ret
mov
sub
pop
cmc
stos
push
or
test
sub
dec
add
or
adcl
loop
icebp
rcrl
lods
mov
cmp
sbb
ja
incb
dec
and
sahf
jo
lock
lahf
fbstp
mov
daa
imul
dec
dec
pop
into
insl
js
push
dec
push
stos
cmp
popf
push
gs
pop
ljmp
pop
mov
dec
addb
lods
pop
cltd
or
push
sbb
add
out
pop
arpl
lcall
jns
sub
mov
lret
insb
mov
pop
cmpsb
in
int3
cmp
mov
mov
inc
mov
mov
je
loope
pop
adc
mov
jo
popa
das
xor
bound
test
popf
jmp
cmp
aad
jno
loop
push
cmp
cmpb
cmp
mov
mov
push
pusha
or
push
lea
gs
popa
les
stos
loope
add
mov
xchg
icebp
jle
cmp
xor
loopne
mov
mov
add
and
scas
scas
mov
out
movsb
movsb
xor
mov
mov
jns
les
cwtl
pop
test
loopne
subl
push
mov
addr16
pop
push
mov
and
pusha
xchg
jl
stos
lret
jl
mov
je
ss
dec
rcrl
int
mov
stc
inc
xor
gs
rcl
loope
or
js
sub
popf
into
mov
rclb
movsb
inc
push
gs
ds
jbe
mov
dec
or
out
dec
aas
outsl
cwtl
mov
lret
jb
cmp
fwait
jo
push
jecxz
push
dec
add
jns
out
inc
pusha
dec
cwtl
repnz
clc
adc
cmpsl
out
enter
mov
push
mov
sbb
es
xor
idiv
mov
sbb
call
inc
xchg
inc
int3
mov
lahf
xchg
mov
inc
dec
mov
mov
daa
mov
sahf
pop
in
sti
sub
pop
andb
push
test
cmp
and
xchg
jne
fidivrs
adc
fwait
dec
sub
sub
dec
inc
fmul
mov
into
push
decb
movsb
jmp
int
int
fstpl
and
jge
push
cmp
andb
mov
push
lea
cwtl
int3
sbb
cmova
cli
fbstp
leave
roll
xchg
movsb
mov
cmp
fadds
jne
pop
push
push
int
and
insl
bound
pop
test
sub
cwtl
mov
test
jnp
leave
mov
dec
mov
sub
sub
rcrl
xchg
cmp
insb
arpl
dec
daa
aam
testb
add
ja
lock
jecxz
and
add
xchg
into
ret
rcl
mov
inc
sub
or
into
sahf
xchg
shrl
int
std
xchg
mov
cltd
sub
add
xchg
cli
ret
jge
inc
aad
pop
mov
dec
repnz
arpl
insl
or
push
mov
and
push
rclb
lret
cmpsb
imul
das
out
pop
out
ret
popf
add
andl
adc
xor
out
ret
in
pushf
jns
push
daa
ds
nop
rcrl
pop
outsl
stos
push
sbb
jae
fbstp
pop
std
xchg
sbb
add
push
xor
je
and
sbb
push
popa
call
pop
pop
dec
ljmp
cwtl
jle
jns
add
in
mov
mov
movntps
mov
dec
or
xor
loope
insl
or
jg
repnz
sub
bound
and
jbe
push
xor
out
mov
xor
mov
sbb
cmc
sbb
mov
aam
testb
movsl
mov
adc
fiaddl
aam
mov
notb
out
add
mov
cmpl
pop
fwait
xchg
pop
cli
mov
into
ret
xchg
ret
pop
mov
imul
fcom
stc
cmc
out
je
add
cwtl
int3
mov
mov
pop
clc
inc
aas
rorb
and
or
jl
xor
aad
stos
icebp
xor
fld
xor
aam
mov
inc
cwtl
jl
fdivrl
jo
mov
clc
mov
or
mov
cmp
inc
mov
incb
xor
jge
cmp
mov
mov
hlt
mov
mov
faddl
ss
sub
orl
and
icebp
adc
ret
or
sub
iret
int3
pop
adc
adc
dec
ss
mov
dec
adc
pop
lds
pop
int3
xchg
pop
lcall
xchg
cmp
and
push
out
mov
test
lods
enter
add
hlt
cmpps
mov
mov
rorb
daa
xor
cli
jg
je
repnz
jge
popa
adc
mov
adc
pop
mov
ret
jno
ss
movsl
sub
gs
lods
loope
adc
xor
jmp
dec
fimuls
mov
cld
inc
in
fwait
mov
ja
repz
cmp
add
sub
movsb
and
adc
stc
mov
and
pop
adc
mov
jns
inc
orb
imul
test
add
ljmp
inc
pop
shll
mov
daa
out
in
cmc
mov
and
xchg
mov
sub
subl
add
add
xor
lds
jo
jne
arpl
jns
push
pop
ror
lds
mov
ljmp
icebp
aam
xchg
or
pop
sub
arpl
mov
dec
push
pop
xor
jmp
mov
adc
xor
fstpl
sahf
invd
pop
in
aad
push
dec
mov
xor
mov
pop
bound
lret
adc
nop
gs
ljmp
gs
addb
cmp
fwait
push
popa
pop
xchg
mov
adc
pop
stos
test
pushf
or
ret
sub
push
cmp
and
xor
adc
std
jg
xchg
lds
or
xor
loop
lret
into
outsb
inc
bound
jmp
jae
dec
ret
cmpsb
rcrb
sub
mov
inc
lcall
add
inc
mov
fidivrs
adc
neg
xchg
repnz
pop
ret
in
flds
push
push
push
pushf
or
outsl
in
sub
inc
mov
stos
xor
or
add
jecxz
dec
scas
popf
mov
aad
xchg
aas
jl
mov
sub
xchg
pop
xchg
xchg
and
mov
push
jo
jbe
sub
adc
addr16
in
mov
add
sti
imul
mulb
jg
mov
ja
push
inc
pop
inc
pop
add
push
test
test
add
ret
adc
lock
dec
or
in
inc
pop
mov
mov
imull
jne
ja
sbb
pusha
mov
mov
mov
cmpsl
pop
jle
repnz
cmc
lods
test
repnz
out
or
cmp
pop
int
scas
sbb
mov
sti
mov
or
add
test
sarb
xchg
jo
shll
scas
loop
sub
sbb
push
lret
xor
xlat
movsb
add
add
test
xchg
int3
cmp
lock
sub
repz
daa
ss
jg
fstpl
sub
cli
repnz
push
decb
lret
cs
dec
sbbl
sub
rcl
aaa
std
push
inc
pushf
mov
in
xchg
mov
aad
mov
test
cmp
jnp
cmp
inc
and
in
clc
aas
aad
sub
mov
xchg
mov
ret
repnz
scas
in
mov
push
xchg
xor
xor
stos
add
inc
dec
outsb
dec
mov
add
mov
sbb
pusha
addr16
or
inc
stos
sub
shlb
cmp
imul
jno
dec
sbb
mov
fidivrs
sbb
xchg
lock
test
jle
pop
push
or
into
adc
dec
push
sbb
inc
pop
lds
pop
cli
push
loopne
cwtl
pop
mov
lods
enter
sahf
or
xchg
in
sar
sbb
sbb
in
mov
aas
push
ss
jp,pn
xor
push
jle
adc
push
push
and
xor
loop
mov
lret
push
call
mov
push
push
pop
push
sbb
xlat
dec
jl
aaa
sub
push
icebp
mov
lahf
in
sub
xchg
gs
ret
xor
mov
lea
and
sub
pushf
loopne
mov
mov
popa
cmp
and
std
fsub
sbb
sahf
sbb
inc
and
jg
xchg
int
xor
dec
xor
xchg
sub
mov
sbb
mov
mov
cwtl
mov
rcrb
ret
inc
ljmp
or
push
insl
cmpsl
mov
lcall
pop
xchg
stos
jnp
daa
sbb
jo
cli
xchg
fldt
push
imul
pop
sbbb
add
test
push
cmp
add
and
pop
cmp
pushf
lret
pop
adc
or
mov
adc
push
mov
aas
dec
lock
lock
cmovns
sub
jmp
xchg
pop
cmp
fadd
ficomps
sub
insb
or
in
inc
lods
cli
cmp
mulb
mov
sbb
xor
jno
push
mov
jns
out
pop
mov
fdivl
lcall
sub
push
test
leave
pushf
jae
mov
hlt
aad
xchg
xor
popa
js
mov
pop
mov
stos
add
adc
das
gs
adc
out
div
mov
movsl
test
or
mov
mov
cmp
std
hlt
jmp
mov
dec
and
mov
stc
out
lret
mov
or
sub
jo
in
stos
adc
scas
insl
aas
test
push
sbb
jp
lcall
sbbl
mov
out
mov
mov
mov
js
repnz
pop
sbb
dec
movl
fsubrs
push
and
daa
lods
mov
aam
dec
pop
cmp
and
insb
daa
sbb
push
mov
sub
adc
push
insl
adc
xchg
mov
cmc
xchg
dec
jg
out
leave
das
sbb
or
and
ljmp
stc
movsl
mov
push
cltd
or
data16
sub
add
bound
dec
das
rorl
lds
aas
jge
in
push
dec
mov
jns
and
popf
cmp
mov
cmp
mov
push
adc
mov
stc
arpl
mov
mov
repz
jbe
lret
jne
inc
ja
into
enter
leave
dec
xor
subl
dec
xchg
ret
out
pop
insl
sbbl
mov
inc
icebp
mov
lcall
or
mov
xchg
jmp
jmp
sub
cmp
and
stos
and
lahf
test
imul
or
add
push
push
mov
fistpll
aam
lods
call
add
or
cltd
sbb
pop
sub
jmp
cmp
sub
outsb
cmp
rdmsr
inc
push
cmovb
pop
popa
mov
jns
sbb
insb
movsl
mov
insb
lret
roll
pop
stos
addl
rcr
lret
sbb
lcall
lcall
xchg
fcmovb
add
stos
lret
andl
dec
or
sbb
hlt
outsl
and
mov
inc
fsts
inc
xor
ljmp
test
sub
mov
das
pop
pop
cmc
in
popa
dec
divb
out
xchg
push
mov
xchg
mov
cwtl
mov
adc
inc
xor
push
xlat
hlt
adc
push
outsl
repnz
das
sub
mov
subb
aam
out
mov
mov
mov
sahf
push
mov
adc
roll
jl
dec
aad
jnp
subb
push
add
ret
popa
mov
pusha
xchg
mov
push
sahf
cmp
sub
ds
mov
cmpsl
mov
mov
jmp
inc
iret
mov
and
add
ret
push
mov
sub
cmp
or
add
or
push
mov
lahf
xor
cwtl
dec
inc
stos
popf
cmc
pop
xor
mov
pop
fucomip
inc
jg
fists
out
cmp
xor
push
pop
inc
cmp
in
ss
mov
jmp
lcall
test
mov
lahf
in
push
pop
fwait
enter
iret
mov
lods
sti
adc
in
dec
test
in
xchg
je
rclb
xchg
mov
addr16
lahf
pop
cmp
popf
jp
dec
sub
mov
les
pop
mov
into
lahf
and
and
stos
inc
test
push
mov
cmp
cmp
loop
push
das
push
pop
cli
xor
pop
or
cli
testb
aas
movsl
mov
xchg
test
jl
hlt
rcrb
push
and
pop
mov
mov
adc
int3
mov
adc
pop
sarb
popf
subl
movl
das
sbb
pop
inc
mov
rol
cmp
daa
into
jnp
jp
inc
std
lea
aam
popa
inc
jmp
dec
dec
inc
jmp
xchg
inc
adc
loopne
ror
add
push
adc
mov
xor
mov
inc
adc
lcall
out
push
iret
push
xlat
or
ja
inc
add
cmp
mov
popa
jno
ja
push
add
nop
je
mov
jl
mov
dec
push
clc
adc
dec
and
rclb
jb
int3
lahf
xchg
xchg
or
in
push
xor
jle
in
push
in
mov
addl
imul
sti
mov
test
jo
in
xchg
cmpsl
cmp
jns
xor
dec
fidivl
in
and
cmpsb
ret
insb
mov
pop
aaa
das
cmp
xor
inc
out
xorb
lods
fimull
iret
xchg
icebp
arpl
ficoml
or
mov
mov
lcall
cmc
inc
sbb
inc
mov
cmpsl
and
or
popa
nop
mov
and
out
adc
pop
mov
xor
movsl
lret
insb
dec
hlt
push
mov
or
sahf
stc
stos
popa
dec
enter
sti
iret
add
stos
push
mov
out
orps
inc
leave
hlt
or
adc
mov
inc
push
sbb
sub
aam
cmp
inc
mov
je
mov
aam
push
and
test
mov
inc
adc
mov
in
pusha
lds
xchg
fsub
stos
dec
push
mov
xchg
push
push
fsubrs
lods
repnz
aad
in
jns
and
sub
shl
mov
fisubrl
jnp
mov
and
dec
leave
mov
dec
popa
mov
fstl
cwtl
out
inc
inc
push
aad
push
cltd
movsl
stos
dec
mov
push
clc
lods
cmp
xchg
shll
sbb
or
pop
mov
cmp
aam
aad
lahf
mov
addr16
enter
push
std
ds
lea
mov
mov
fsubrs
mov
fmull
mov
ret
test
leave
incb
cmp
dec
mov
mov
sbb
xchg
aaa
adc
cmc
imul
pop
xlat
lcall
mov
or
adc
bound
sti
hlt
or
mov
pop
push
gs
in
and
sub
mov
mov
inc
out
out
inc
data16
test
fdivs
stos
sub
xor
aad
lds
sbb
orl
sti
aaa
xchg
mov
cmp
test
mov
sbb
dec
dec
jns
add
cmp
stc
jnp
cmpsb
ret
out
xchg
aaa
nop
mov
adc
dec
bound
aam
or
pop
pop
cmpsb
out
mov
inc
sub
aaa
pushf
nop
lret
insl
fsubrl
scas
cmpsb
adc
in
mov
cmp
cmp
mov
mov
adc
sarb
aaa
xor
pop
cmc
das
into
inc
out
icebp
in
fisubrs
and
jg
fwait
pop
cmpsl
xchg
lock
mov
add
loop
cs
xchg
or
sti
ds
test
hlt
stos
sahf
popa
push
in
fwait
mov
sub
add
pusha
testb
fsub
jp
push
shll
mov
sti
or
nop
lds
sub
or
int3
sbb
cmp
cmp
add
mov
jno
out
mov
jbe
cwtl
jae
ja
fldl
xor
sbb
pop
imul
jno
in
adc
mov
negb
and
jne
nop
sub
inc
xlat
stc
rcr
xchg
stos
push
mov
lahf
lods
push
int
adc
mov
fimuls
idiv
jmp
test
pmaxsw
test
mov
add
push
in
out
outsl
imulb
daa
push
iret
stos
push
and
js
adc
mov
icebp
mov
sbb
push
mov
sub
fisttpll
sub
cmpsb
xor
nop
mov
sbbb
fisubrl
ljmp
adc
mov
cwtl
pop
mov
sbb
adc
sbb
dec
movsl
stc
mov
rcr
push
add
aas
iret
sbb
push
mov
repz
jb
lret
xor
xor
js
cmpl
movsb
out
dec
push
add
jle
ret
jbe
dec
sbb
xchg
inc
push
cld
lret
mov
jbe
push
or
rcrb
mov
xor
addl
push
inc
and
cmp
popa
jmp
in
xorl
pop
es
inc
mov
das
cmp
ficoml
and
stos
push
jns
std
push
loopne
data16
inc
gs
je
stc
pusha
pop
push
push
dec
pushf
in
lock
mov
fldcw
or
test
jmp
sbb
dec
pop
jmp
cmpsb
add
jecxz
sbb
sub
scas
sub
jb
mov
daa
test
mov
loope
jb
jnp
pop
mov
out
mov
jne
stos
fwait
lret
inc
jmp
jnp
or
jnp
orl
jl
or
add
lods
addr16
inc
mov
and
mov
inc
adc
jbe
les
adc
in
cmpsl
mov
in
push
xchg
dec
sbb
mov
push
rcrl
mov
int3
mov
pop
int
testl
sub
mov
add
out
push
xor
xorb
jecxz
hlt
std
jns
fdivrl
pop
aas
lret
mov
jg
inc
xor
add
lods
ljmp
dec
or
push
ja
scas
sbb
xchg
stc
dec
rclb
nop
dec
fmul
lock
rcrl
iret
mov
sarl
sarb
push
cmp
shll
mov
mov
fmull
adc
mov
and
pop
xor
lods
sbb
adc
pop
pop
jle
cmp
mov
into
jle
jae
pop
cld
in
mov
rclb
add
and
or
fcoms
in
sti
test
fdivs
mov
push
or
mov
xchg
push
lret
cld
add
xor
filds
adc
jnp
por
into
dec
outsb
push
dec
mov
push
jo
cmpb
pop
movl
rcr
aas
and
add
adc
jl
push
mov
movsb
adc
jle
push
adc
mov
das
cli
fmull
daa
test
cli
jb
push
cwtl
mull
sub
mov
mov
sbbl
dec
outsb
pop
inc
adc
mov
pop
push
pop
jp
test
pop
mov
movsl
or
outsb
pop
leave
cld
in
and
repnz
push
mov
mov
dec
dec
cli
dec
sbb
dec
int3
jmp
sbb
pop
fwait
mov
out
mov
dec
jmp
das
sbb
test
mov
adc
addr16
test
mov
insl
xchg
xchg
stos
and
dec
ljmp
pushf
mov
arpl
popf
into
enter
aad
ja
mov
pop
add
or
cmp
rcrl
mov
stc
cli
lret
dec
push
mov
out
jge
ss
iret
rcll
insb
xchg
cmpl
mov
add
xchg
sbb
jns
mov
lahf
mov
icebp
inc
jg
jno
insb
and
clc
inc
lock
sub
jecxz
inc
or
push
xor
stc
lret
fcoml
sbbb
int3
sbbb
popa
clc
inc
mov
movsb
mov
cltd
or
jae
pusha
pushf
fdivs
dec
or
adc
jns
test
jno
push
in
or
inc
int
into
imul
imul
ret
dec
adc
xchg
sub
in
sub
pop
mov
adc
insl
repnz
jp
fs
jo
scas
in
lret
imul
sbb
outsb
pushf
pop
jg
imul
test
lret
fwait
xchg
popa
cmp
bound
sub
mov
push
or
jb
push
push
mov
or
sbb
rolb
push
adc
inc
lret
mov
mov
pop
sbb
or
cmp
inc
or
and
aam
les
cmc
dec
sbb
lcall
or
adc
or
lock
fists
mov
daa
shlb
add
fistl
arpl
push
add
mov
pop
imul
rorb
mov
fst
inc
cmp
fldl
gs
sbb
es
pop
sbb
add
insb
dec
in
data16
cmpsb
jnp
out
mov
cmp
sub
dec
jg
xor
movsb
add
xorl
jb
sbb
into
pop
jle
adc
or
jp
cmp
adc
out
sub
push
fwait
add
pop
mov
cmpb
in
pop
lea
imul
rorb
int
or
rcr
lcall
or
and
push
mov
movsb
aam
rorb
pushf
or
cmpb
test
outsb
into
push
mov
movsb
andb
repz
sub
rorb
sub
xor
addl
test
push
or
pushf
aaa
js
gs
les
lds
in
adcl
int3
mov
mov
das
mov
xor
sub
jecxz
dec
jecxz
and
aad
jne
inc
lret
xor
pop
sub
xor
cmp
jecxz
movsb
inc
test
pop
mov
inc
push
jmp
loopne
stc
lret
push
sub
mov
push
jmp
leave
inc
call
lods
int
lock
mov
cmp
sub
stc
fwait
sub
and
cwtl
mov
xorl
sarb
and
inc
inc
push
lret
movsb
mov
mov
sbb
adc
cs
and
pop
and
aam
cmp
xor
mov
xorl
and
cltd
loopne
dec
cld
adc
ja
mov
sbb
fmull
out
test
sbb
ds
jne
inc
xchg
or
fdivrl
aam
ss
push
dec
cmp
mov
mov
scas
imul
ljmp
aaa
jno
divl
mov
ss
add
xor
orps
enter
aaa
loop
mov
adc
push
xor
repz
dec
popf
add
cmp
mov
mov
xorb
faddp
aad
add
repz
push
sub
xlat
test
cmp
mov
daa
lahf
scas
cmpsl
jae
or
cld
out
xor
leave
pop
xchg
or
arpl
pop
iret
xchg
imulb
insb
out
gs
jle
sub
mov
or
push
cmp
mov
dec
rcrl
dec
mov
and
push
adc
pop
mov
jb
ja
adc
popa
push
jecxz
jo
xchg
mov
fs
mov
gs
pop
out
inc
xchg
xlat
push
in
les
adc
test
jns
lock
lock
adc
cmp
pop
cmpsb
ss
dec
xchg
cmp
lret
rorl
sub
push
push
sub
push
stos
fists
ss
and
aas
loopne
pusha
xchg
lret
insl
sbb
xchg
mov
inc
mov
inc
movsb
inc
enter
loope
adc
lret
sub
mov
lcall
popa
xchg
cmovo
pop
enter
xor
pop
or
outsl
test
xchg
fiaddl
aad
ret
fistpl
inc
sbb
ret
movsl
pop
test
pop
mov
mov
inc
mov
pop
lods
adc
sub
cli
xchg
push
das
cwtl
jg
xchg
fnstenv
push
lcallw
addr16
sub
test
or
push
add
jno
fistpll
in
int3
scas
fadds
out
aaa
daa
je
cmpl
orl
mov
mov
out
movsb
cmp
add
data16
mov
push
mov
out
push
das
push
xchg
inc
scas
addr16
inc
negb
mov
pusha
outsb
or
add
push
mov
das
aam
cmpsb
mov
pop
sahf
jge
jle
sbb
xlat
into
push
xchg
and
pop
lods
mov
pop
cmp
or
sub
fabs
ljmp
and
mov
loopne
addr16
sub
aas
lods
jno
jmp
stos
sahf
xor
xchg
lds
test
mov
xor
or
pop
sbb
ja
pop
loop
popf
xchg
shr
adc
dec
pop
dec
ret
xchg
or
inc
mov
pop
test
int
hlt
cmp
sub
jmp
cmp
pop
rcr
dec
pop
sbb
popf
mov
sbb
outsb
insl
pushf
push
and
mov
mov
push
jp
out
jg
lret
and
inc
rorb
repnz
fstl
outsl
adc
jnp
push
mov
push
cmp
push
rcll
sub
xchg
ds
add
mov
jmp
pop
sub
inc
out
adc
bound
mov
adc
inc
test
jmp
mov
or
stos
push
cmpsl
inc
aas
filds
std
or
or
lock
jno
lcallw
inc
sbb
ljmp
aas
adc
cs
lret
out
xor
scas
fnstsw
mov
fs
sbb
add
in
shl
mov
add
mov
pop
mov
sub
lods
sbb
je
outsl
in
repnz
and
pop
flds
ret
bound
pmaddwd
inc
enter
aad
sbb
ret
je
sub
mov
xchg
adc
ss
in
xchg
pop
shll
inc
loope
mov
sub
jecxz
sub
daa
jecxz
jno
dec
frstor
or
psubq
mov
mov
stos
fstpl
ret
pushf
xlat
test
push
cmp
push
jo
fmuls
fdivrs
shlb
inc
testl
lret
cltd
outsl
mov
stc
push
fldcw
fsubp
and
das
cmp
lcall
ljmp
adc
into
jg
sub
jecxz
sbb
mov
cmp
sub
loopne
push
sub
dec
push
inc
cmpsl
cs
clc
aas
inc
inc
jno
insb
dec
pop
inc
rcrb
shlb
dec
inc
adc
loopne
xchg
mov
push
aaa
insb
insl
repz
jp
outsl
rcll
mov
lock
sub
inc
in
inc
xchg
xor
jo
popa
out
sahf
adc
cmp
cmpsl
pop
dec
adc
xor
add
xchg
loopne
or
inc
ljmp
or
pop
out
mov
jnp
enter
xor
int
xchg
ret
xor
popf
xlat
in
add
aaa
ljmp
mov
mov
jae
das
loope
int
mov
pop
js
pusha
outsb
movsl
add
ficoms
push
cli
mov
and
rcr
rcrl
pop
stc
pop
lret
push
sahf
daa
std
sub
nop
sti
mov
incb
jnp
pushf
enter
mov
dec
dec
jle
flds
out
sub
jmp
outsb
sbb
scas
sbb
sub
mov
jmp
and
jmp
cmpsl
xchg
adc
mov
lret
les
aad
or
xor
xchg
add
sbb
xchg
hlt
dec
es
add
and
loopne
scas
pop
lahf
xor
push
pop
stos
sub
push
mov
rcrl
dec
cmp
jne
test
xchg
out
xlat
ret
pop
int
fwait
jne
xchg
and
in
jg
and
sbb
jo
sbb
cmpsb
sbb
sub
cwtl
dec
lret
cmp
adc
les
inc
xor
out
mov
scas
fsubr
xchg
inc
push
sbb
mov
xchg
js
inc
arpl
sbbb
ret
cmp
enter
repz
xor
ljmp
mov
out
jecxz
mov
jl
mov
sub
std
cli
and
add
mov
push
sub
mov
nop
orb
outsb
cmp
jge
cmc
push
jmp
arpl
pop
mov
add
xchg
ljmp
pushf
dec
pop
fwait
inc
sbb
lea
aam
push
inc
je
das
sbb
pusha
rorl
aaa
add
sahf
ret
sbb
mov
gs
mov
sbb
in
adc
inc
sub
push
std
or
inc
mov
das
push
jnp
test
cs
cli
mov
es
jge
or
fwait
lret
icebp
lods
cmp
jb
xchg
lret
rcrb
rcrl
jae
lock
sbbl
xor
mov
dec
lcall
xorb
pop
ljmp
negl
adc
cwtl
mov
mov
jecxz
dec
stc
outsb
stc
ss
ljmp
mov
xchg
adc
mov
fstpt
push
cmp
jg
dec
inc
test
movsb
nop
adc
ja
arpl
pop
push
adc
stc
inc
sub
mov
push
pop
dec
jecxz
and
ljmp
lret
dec
or
test
mov
out
pop
sbb
mov
sub
jle
sbb
xor
rorb
xchg
orb
push
andb
repz
push
sbbb
dec
or
mul
repnz
repnz
sub
jp
mov
sbb
shlb
add
stc
pusha
ds
and
xchg
loop
lods
aam
jl
cmp
mov
and
mov
push
adc
scas
pop
mov
mov
mov
dec
push
stos
xchg
shrl
ja
cmp
push
mull
push
cmp
and
jnp
enter
push
inc
lock
adc
sbb
sahf
and
or
mov
gs
mov
adc
in
xchg
loopne
jl
andl
and
sub
adc
xor
inc
fiaddl
push
lret
notb
ss
push
cmpsl
enter
push
mov
adc
mov
pop
mov
push
mov
and
leave
sar
mov
repz
pop
jbe,pn
xor
mov
mov
pop
stc
xchg
das
fadds
sub
sbb
fsubl
into
mov
cld
insb
mov
les
shlb
pop
fiadds
inc
sbb
test
fs
lret
cmp
adc
out
dec
xchg
xor
rorl
lds
out
xchg
push
cmc
lods
fdivl
xchg
pop
xchg
stos
xor
cmpsb
adc
pop
and
and
inc
loopne
xchg
push
addr16
addr16
sbb
in
jmp
inc
fldenv
gs
rcll
int3
xor
divb
jmp
mov
inc
mov
pushf
mov
sti
mov
enter
andb
in
out
add
popf
xchg
addr16
mov
cmp
repnz
xchg
popa
call
mov
jno
jns
pop
xchg
call
jns
pusha
fisubs
imul
frstor
adc
push
adc
incb
ds
stos
lret
in
and
xor
divl
outsl
adc
fdivs
mov
mov
scas
out
daa
jbe
xchg
lahf
mov
jne
pop
push
xor
lahf
lret
pop
mov
aas
or
movsl
push
dec
push
aaa
jmp
mov
push
or
push
mov
ljmp
movsb
push
jns
fmuls
insl
pop
test
xchg
pop
xchg
rcrb
repnz
ja
cmp
inc
jbe
mov
pop
popf
xor
adc
push
cmp
pop
or
cli
insb
mov
inc
xor
sbb
in
cmp
jl
or
pop
mov
iret
jno
test
mov
lcall
filds
mov
dec
jnp
inc
or
enter
xchg
push
aas
sub
jo
cmp
fisttps
jp
repz
adc
lock
pop
xor
jle
mov
call
dec
pusha
fwait
sbb
push
ja
fucom
sub
xchg
int
pop
add
pop
jle
pop
cs
andl
pop
dec
xor
mov
mov
jns
cmp
fistpll
dec
rol
inc
hlt
or
sub
es
outsb
call
mov
mov
fldenv
popf
pop
add
dec
hlt
pop
in
cwtl
mov
decl
push
or
insl
test
loopne
popa
jp
enter
cmp
jae
rorl
cs
inc
xlat
je
test
lds
jl
or
pushf
aaa
xor
mov
push
inc
add
orb
add
adc
mov
sti
sbb
mov
adcl
clc
out
fistl
jp
jae
popf
into
shll
xchg
jne
outsb
pop
or
sbb
add
xchg
push
mov
hlt
andl
push
mov
nop
mov
push
je
and
insb
lods
inc
adc
enter
inc
add
pop
pop
pop
cld
sbb
xchg
mov
ret
pop
icebp
fildl
stos
sbbb
clc
outsl
sbb
mov
push
outsb
ja
fiadds
cmp
xor
arpl
les
test
push
push
inc
push
mov
sub
in
scas
cmp
fcom
dec
scas
lcall
leave
popl
or
mov
jecxz
push
aam
repz
mov
ret
adc
sarl
xor
shlb
imul
scas
xor
xchg
and
add
icebp
pushl
jae
test
insl
sbb
subb
adcl
ret
arpl
push
pushf
in
sbbb
ss
inc
push
or
cmp
add
movl
cmpsb
out
std
outsb
push
jmp
jo
inc
inc
sub
and
popf
add
inc
inc
cwtl
fstps
jl
jl
jo
jns
movsb
dec
inc
push
adc
loopne
imul
mov
push
int3
mov
adc
jae
lret
xchg
andb
cmp
jecxz
and
mov
mov
test
ds
ds
pop
mov
in
nop
outsl
jno
jbe
pop
mov
mov
hlt
xchg
pop
sti
or
sti
inc
jmp
subl
bound
std
lods
ficoml
mov
add
aam
inc
loopne
adc
xchg
lods
mov
pop
mov
negl
sbb
or
mov
and
xchg
xchg
jb
adc
iret
pushf
mulb
dec
in
inc
xor
cltd
cmc
add
xchg
lods
xlat
mov
clc
mov
rolb
sub
loop
fsts
jge
ret
clc
adc
pop
mov
push
movl
gs
in
mov
in
sahf
test
jg
cmp
mov
cmp
inc
jle
xchg
pop
lcall
lret
mov
inc
jne
mov
cmp
and
mov
pop
or
out
dec
mov
push
fisttpl
out
push
push
mov
jl
popa
xor
es
push
sub
cmp
lahf
adc
mov
xchg
dec
cmc
or
jmp
and
repz
popf
fcoms
clc
jle
or
andb
test
ror
xchg
loope
xchg
push
sbb
scas
adc
add
push
mov
or
jge
pop
shr
jo
scas
jmp
jns
or
sahf
sub
stos
xchg
dec
aam
mov
hlt
inc
mov
jno
rorb
pop
lods
jle
lds
cmp
jae
sub
rol
inc
dec
clc
pop
es
sub
shrl
repz
mov
inc
and
and
orl
mov
push
movsl
adc
lret
in
push
das
jmp
pop
cmp
gs
sub
pop
mov
out
inc
xchg
mov
repz
outsl
pop
int
dec
fwait
push
imul
inc
int
dec
jp
xlat
push
ficoml
sysexit
iret
xor
xchg
lahf
stos
and
pop
movsb
cmpsl
xchg
add
test
outsb
cmp
dec
fwait
and
mov
sub
imulb
xchg
xchg
and
or
add
push
dec
xchg
sbb
jle
pop
pop
mov
aaa
inc
test
inc
enter
sub
cmp
push
lods
out
fildl
pop
jnp
push
fisubs
lcall
out
iret
lds
outsb
ljmp
rorb
pop
pusha
je
or
and
enter
and
pop
loopne,pn
inc
mov
hlt
pop
mov
dec
adc
mov
push
jae
out
dec
cli
popf
jl
xlat
lods
ja
popf
les
pop
mov
xchg
lods
rcrl
push
jmp
xchg
mov
ja
mov
sbb
dec
pop
int3
ljmp
cmpsl
fsubl
std
pop
fistpl
les
mov
fbld
jne
fcmovb
and
xor
sub
add
repz
stc
nop
cmpsl
mov
jno
jecxz
ss
push
enter
pusha
in
flds
insb
movsb
jnp
push
sbb
cmc
outsb
jp
lods
sbb
push
repnz
sbb
lock
push
mov
xchg
or
mov
sbb
in
push
xchg
pop
pop
mov
jle
aad
sbb
xchg
ret
in
mov
jl
clc
xlat
or
push
test
ret
mov
cmp
hlt
inc
popf
push
mov
jns
sbb
adc
and
push
test
out
in
sbb
adc
adc
sahf
dec
mov
into
mov
sbb
dec
xchg
or
and
pop
je
pop
mov
push
jmp
add
clc
movsb
mov
fildll
dec
in
stos
mov
scas
gs
cmp
mov
pop
nop
out
scas
jb
bound
push
xor
leave
outsb
cmp
jmp
pusha
add
and
into
mov
jecxz
add
cmpxchg
or
xchg
imul
test
pop
test
shll
xchg
adc
inc
fidivrl
jle
jo
sub
dec
sub
aaa
mov
js
push
mov
adc
jae
int
jb
in
cmp
xchg
xor
and
and
mov
mov
repz
icebp
aad
es
shlb
sti
mov
mov
add
popa
push
or
and
xchg
shll
mov
xchg
lea
add
int3
inc
jno
cmp
fmuls
ljmp
jae
adcl
out
sub
fsubl
cmp
icebp
faddl
loop
gs
stc
in
inc
mov
and
in
mov
or
sbb
dec
adc
mov
sub
test
ret
cmp
stc
dec
sbbl
jae
mov
loope
sub
sbb
sbb
xor
push
push
jmp
imul
adc
push
das
mov
sbb
ss
je
cwtl
push
push
loop
jb
pop
cwtl
mov
or
xchg
ret
or
stos
cltd
ret
leavew
xchg
jle
call
xchg
cs
fsubp
jae
addr16
lea
dec
cwtl
test
cmp
cmc
inc
in
in
mov
jecxz
clc
xor
or
mov
enter
jcxz
push
daa
xor
inc
cltd
pop
add
cltd
fisubrl
jne
movsl
enter
mov
sbb
and
fisttps
or
sub
pop
or
xchg
in
aam
into
push
das
popf
and
repnz
or
and
das
jecxz
mov
into
push
repz
fwait
sub
cmp
add
loop
cli
sub
sbb
and
arpl
sti
xor
or
inc
mov
shrb
jl
test
pop
in
icebp
adc
jg
leave
es
xor
dec
orb
xorl
push
sub
xchg
cmp
imul
subb
inc
cmc
das
pop
xchg
iret
or
ret
push
fstl
nop
mov
inc
lods
sbbb
scas
pop
sahf
jp
adc
pop
test
rcr
sub
in
out
pop
add
inc
out
mov
mov
out
cmp
push
push
dec
das
je
clc
iret
xchg
shrb
nop
insl
dec
or
orl
sbb
mov
sbb
stos
mov
mov
push
mov
andb
ds
pop
or
lock
cmc
cmp
outsl
push
hlt
lea
dec
inc
sbb
adc
dec
inc
cld
xchg
jbe
dec
aam
jo
out
adc
dec
xor
pop
jns
icebp
sbb
mov
cmpsl
and
pop
sbb
adc
sarb
jp
and
mov
movsl
mov
icebp
pop
in
lds
scas
insb
sahf
aad
int3
or
jmp
shrl
outsb
push
fimuls
pop
data16
sbb
push
int3
addb
test
je
pop
out
pop
and
push
bnd
xor
add
mov
cmp
sarb
rorl
nop
add
mov
movsb
out
jg
bound
fildl
add
popf
jg
xlat
ror
inc
ret
or
xchg
movsl
sti
dec
lahf
fmuls
or
bound
mov
push
jno
inc
inc
outsb
push
imulb
pusha
gs
in
dec
mov
jg
add
ret
sbb
popa
jg
push
sti
and
js
pop
repnz
sarl
stos
mov
aas
or
and
cmp
mov
js
mov
mov
sub
xadd
jb
fisubrl
mov
dec
in
rolb
sub
stc
cmp
push
cmpsl
dec
mov
and
lods
pop
inc
pop
out
mov
push
notl
push
mov
push
faddl
mov
push
jmp
inc
push
or
scas
daa
test
push
mov
rcrb
jle
push
call
push
push
cmp
mov
push
add
adc
mov
jg
pop
add
mov
enter
es
fiadds
insb
mov
dec
or
movsb
aad
addr16
je
mov
sub
pop
jb
xor
repnz
push
push
sti
push
sub
jmp
mov
push
jno
push
clc
stos
sub
pusha
loop
insb
dec
inc
lds
cwtl
push
orb
dec
fidivrl
into
addb
jecxz
push
mov
push
das
shll
mov
sarl
inc
sub
dec
jge,pt
cmp
jns
adc
movsl
adc
int
call
jl
cwtl
or
xor
cmp
stos
lahf
inc
cmp
outsb
lods
imul
hlt
and
dec
leave
pop
subl
cs
in
popf
cli
les
xchg
bound
popa
lds
in
jl
out
push
out
rol
push
pushf
xchg
sub
aad
xchg
out
lock
pop
cli
fcos
sbb
jle
out
test
adc
xchg
ja
cmc
cld
bound
js
pop
sbb
mov
cli
mov
inc
outsb
out
jne
adc
ret
lret
mov
data16
adc
and
cmc
mov
test
mov
mov
aaa
xchg
sbb
outsl
mov
addr16
sbb
push
in
jge
xor
stc
push
mov
fsubrs
cmp
dec
sar
sub
adc
add
mov
cltd
out
ret
lret
outsl
stos
int
pusha
test
pop
pop
pop
cmp
adc
stc
rcr
mov
sbb
or
jle
push
dec
mov
les
and
jns
or
mov
or
lret
aad
dec
loopne
lods
pushf
loopne
fstpl
outsb
mov
add
hlt
cmp
xchg
aas
mov
and
dec
repz
or
sub
cmp
push
and
outsb
lret
fldenv
mov
addr16
inc
mov
push
loopne
mov
int3
mov
pop
and
cmc
stc
sarl
out
xor
sti
push
dec
push
pop
xchg
stos
outsl
hlt
shlb
ret
iret
in
mov
out
fdivl
fnsave
dec
pop
dec
mov
dec
int3
xchg
in
adc
adc
aas
data16
lds
inc
mov
shlb
loop
mov
pop
sti
dec
pusha
add
jne
xchg
push
stos
pand
js
push
sub
pop
test
mov
loop
xchg
in
jae
cmp
fcmovu
mov
rcll
xor
inc
loope
test
adc
out
rclb
mov
les
mov
cmpsb
iret
popf
inc
popa
pushf
pop
fidivrs
inc
xchg
jno
adc
mov
or
leave
xchg
test
lock
and
dec
out
sbb
sbb
mov
cld
jp
daa
add
sbb
adc
and
aaa
mov
jmp
ljmp
clc
cld
push
stc
in
jg
mov
mov
or
out
push
mov
mov
je
xor
imul
xor
push
ja
or
jecxz
sbb
push
fldt
add
repnz
xchg
lods
xor
sahf
in
rcl
xor
adc
or
mov
callw
mov
repz
mov
or
sbb
inc
das
push
imulb
movb
cmp
fbstp
ss
add
mov
int3
adc
mov
pop
sbb
clc
and
outsl
xlat
xor
mov
les
out
imul
sub
outsb
and
jmp
std
rorl
inc
rorb
adc
push
push
adc
fldl
xor
jo
imul
mov
aam
cmp
pop
imul
mov
imul
mov
mov
adc
cmpsb
test
sub
push
rclb
fs
mov
loop
aas
push
xor
push
jbe
jnp
lcall
jnp
mov
pop
add
pop
fsubrs
or
pop
decb
add
inc
mov
aaa
shrl
lds
mov
adc
sti
or
test
cmpsl
cmp
mov
push
test
aaa
sbb
in
iret
and
addb
rorl
jg
inc
jl
aas
popf
cmp
sbb
dec
or
insb
add
push
and
sbb
ljmp
jbe
inc
push
mov
sub
pop
push
pop
adc
js
sbb
cs
xchg
daa
push
je
adc
mov
sub
subl
clc
pop
mov
inc
sarb
sub
cltd
xorb
aaa
pop
xchg
out
sbbb
scas
or
push
mov
cwtl
int3
push
test
test
dec
gs
xchg
daa
inc
stc
push
movsb
xchg
jl
jbe
std
out
pop
jno
ret
mov
and
outsl
mov
in
add
outsb
fisubrl
fstpl
jmp
into
xor
sbb
or
push
movsb
std
insb
aad
repz
lahf
int
enter
les
jb
rcl
mov
popf
mov
arpl
xor
jae
mov
in
dec
mov
pusha
inc
mov
clc
mov
ret
jo,pt
into
push
push
mov
fistpll
or
xor
fmulp
clc
cld
xchg
aad
mov
lret
mov
js
out
inc
aam
sub
subb
xchg
or
mov
add
cmp
add
sub
jo
add
xor
setp
inc
cmp
dec
xchg
inc
jbe
les
ja
mov
decl
stos
or
jnp
rolb
imul
loop
sbb
mov
outsb
sub
or
aas
je
sub
lret
fdivs
mov
iret
mov
xor
lock
pop
call
mov
nop
call
jg
stc
xor
out
nop
insl
das
pushf
add
sbbl
cli
je
inc
mov
mov
xchg
mov
rorl
push
ss
in
or
sub
adc
sbb
jle
les
test
dec
ljmp
add
repz
stos
fidivs
push
test
push
adc
jne
lret
or
push
mov
jmp
leave
repnz
dec
fwait
xor
testl
xchg
in
mov
xchg
inc
pop
out
rol
xchg
pop
pop
dec
xor
or
cwtl
test
pop
int
jns
or
mov
xor
push
adc
cmp
lods
sub
pop
pop
cmpsb
mov
in
xor
jmp
pop
int3
add
add
roll
push
std
mov
lea
shrl
sahf
sbb
adc
cwtl
movq
iret
add
mov
sub
lods
inc
and
lods
cltd
in
fidivrs
mov
test
ljmp
mov
xchg
lods
or
xor
sar
adcl
push
in
inc
pop
pop
movsl
mov
pop
xchg
imul
sbb
push
and
cmp
pusha
vandps
iret
dec
xor
jl
hlt
test
sbb
add
addl
adc
adc
push
mov
loop
cmc
push
jae
xchg
test
inc
dec
arpl
or
and
inc
je
pop
lods
stos
subl
mov
mov
pop
jbe
aas
jbe
out
scas
arpl
shrb
daa
stos
setno
test
aas
es
loope
jne
mov
int
lret
push
add
ja
pop
jns
add
fwait
mov
push
in
mov
mov
jl
lods
scas
add
lcall
setne
in
andb
fwait
gs
arpl
std
adc
sub
loope
sbb
adc
fwait
inc
aam
lds
and
jb
ret
movsl
sub
push
inc
add
push
fxch
dec
lods
dec
mov
mov
inc
and
outsb
jl
push
fwait
pop
pusha
lds
or
mov
hlt
cmp
test
sub
adc
pop
push
mov
push
into
mov
pop
push
lcall
lahf
shll
mov
inc
cmpsl
ja
in
ret
pop
cmp
dec
push
pop
add
aad
imul
imul
out
dec
faddl
andl
mov
xor
pusha
sbb
movsl
pop
es
mov
or
clc
jge
dec
add
cwtl
sub
movsl
fcomps
push
push
pop
sub
pusha
adc
std
in
and
loopne
jp
in
cmp
xor
add
frstor
cld
insb
pop
hlt
jg
pop
adc
lock
in
sarl
in
mov
fdivs
jp
push
addr16
cld
add
ja
xchg
cmp
pop
pop
jp
sub
adc
mov
or
mov
adc
mov
popf
mov
xchg
adc
scas
fsubrs
sbb
outsb
stos
cmp
sbb
jmp
pop
push
mov
fidivs
jp
mov
das
fisubrs
hlt
outsb
out
or
push
push
cmp
test
imul
les
cmpsl
imul
sbb
inc
data16
sub
jnp
mov
cmpsb
into
xchg
xor
push
inc
pusha
pusha
int
out
add
cs
inc
and
out
sbb
dec
sbb
loope
dec
data16
xor
mov
mov
or
cmp
outsb
in
jl
push
jbe
sub
fsubrp
pop
jg
inc
xor
jne
incl
ds
nop
in
dec
sub
into
sub
sbb
rorl
push
mov
dec
jmp
fmuls
jae
dec
cmc
jg
add
loop
stos
imul
in
sbb
clc
xor
sub
cmpsl
jbe
jb
cmc
cmp
xor
mov
repnz
dec
and
or
or
mov
imul
sahf
or
sbb
into
ja
pop
or
pop
out
fstp
iret
xor
scas
jl
or
jmp
out
dec
cwtl
nop
imul
int
cmpsl
loopne
push
mov
pop
mov
sbb
repz
es
jl
cmpsb
js
pop
repnz
test
adc
pop
push
xchg
scas
adc
jno
xchg
out
fwait
inc
popf
sahf
ret
jg
pop
and
sub
popf
idivl
mov
movsb
lods
lcall
iret
ficompl
mov
and
imul
pop
pop
dec
clc
mov
pushf
pusha
cli
jp
ret
inc
inc
fwait
test
push
mov
push
mov
cli
out
jp
mov
jnp
nop
push
sbb
mov
add
ljmp
push
dec
dec
adc
in
js
mov
je
loope
push
int3
lahf
inc
mov
add
ret
xchg
adc
xchg
shll
jl
sahf
xchg
sbb
cld
or
and
rolb
stc
xchg
repz
lcall
imul
adc
outsb
pop
push
and
pop
sbb
test
sbbb
xchg
shrb
jns
push
cltd
ljmp
cmpb
stos
lahf
jge
add
cmpsb
out
lods
lods
fsubrl
push
inc
mov
mov
sbb
lret
adc
loop
mov
push
outsl
pushf
cmpl
jecxz
std
sbb
jns
fisttpl
repnz
jg
lock
push
jge
fcmovb
sub
fcmovnb
gs
push
icebp
push
adc
jge
push
je
je
mov
and
add
jge
jle
push
jl
mov
ja
push
ss
mov
xchg
and
dec
jmp
ljmp
xor
or
add
adc
notb
cmp
mov
das
jg
jns
xchg
out
mov
insl
dec
rclb
push
aad
fistpll
mov
repz
mov
sahf
or
fs
jo
inc
js
inc
dec
cmp
dec
or
dec
rorb
popa
mov
jb
xor
adc
lret
insl
out
mov
jg
nop
sbb
jmp
sbb
inc
imul
mov
movsl
ret
cltd
fdivs
push
xor
dec
adc
mov
and
movsb
clc
pop
sbb
pop
int3
pushf
rcrl
push
push
cmp
and
xor
pop
inc
mov
lock
sub
and
js
jg
mull
xchg
mov
divl
aad
push
insl
int3
xchg
jns
add
fs
add
add
cs
hlt
outsl
push
call
and
loopne
loopnew
jmp
aad
xchg
cld
js
xor
push
mov
and
stos
loope
xor
mov
inc
mov
mov
cwtl
and
lret
mov
negl
pop
in
out
xor
push
or
dec
mov
adc
or
or
inc
and
lock
cmpsb
outsb
int3
pop
aaa
or
jnp
loope
div
jg
dec
in
mov
pop
popf
mov
jecxz
fsubs
lcall
jns
out
xchg
mov
inc
sti
mov
jnp
ret
inc
jle
sub
cmpsl
stc
call
mov
ret
jmp
gs
fimuls
sti
sbbb
stc
stos
push
enter
enter
cmp
and
push
cmpsb
adc
xor
mov
test
sub
add
pop
stos
fdivl
jmp
xchg
outsl
sbb
inc
or
adc
mov
mov
push
pop
in
dec
xchg
decl
mov
xchg
mov
mov
jbe
jle
mov
jl
js
cmp
pusha
popa
and
dec
cltd
mov
inc
imul
shlb
hlt
push
out
mov
add
aad
rcrb
leave
or
inc
lods
rclb
repnz
ret
in
cmp
aas
mov
outsb
inc
mov
shlb
sbb
call
das
arpl
movsb
pop
pop
daa
fs
and
es
outsb
out
sti
xlat
lahf
xlat
or
add
pop
mov
mov
jno
pop
adc
rolb
adc
in
inc
shrb
aaa
or
mov
aad
iret
inc
xchg
fldt
adc
mov
insb
adc
and
inc
lea
or
add
aam
mov
mov
and
mov
cli
push
inc
lds
or
faddl
lods
stc
jge
lods
cmp
cld
scas
sub
push
loope
cmp
mov
iret
sub
lret
daa
lret
push
inc
cld
push
cltd
add
test
std
push
mov
sub
fldt
pushf
jle
int
jle
ficoml
jno
shlb
mov
xchg
sub
je
js
das
pop
stc
adc
adcl
mov
rolb
pop
rcr
sbb
mov
lret
popa
and
cmp
jbe
dec
dec
ds
test
loopne
push
adc
cmpsb
cltd
scas
in
sbb
lods
or
dec
mov
cli
test
int
mov
subb
xchg
push
cmp
lcall
pushf
xchg
push
pop
divl
out
rcl
sbb
push
push
and
add
cmp
cmp
roll
mov
ret
dec
clc
or
dec
jmp
xor
clc
and
cmc
mov
xor
dec
sub
leave
cmp
mov
mov
add
filds
lret
mov
push
stc
or
mov
pop
pusha
ljmp
mov
add
mov
adc
leave
gs
test
and
jno
insb
adc
xchg
pusha
call
jp
mov
pop
pusha
jne
movsb
and
lcall
xchg
iret
pop
filds
push
mov
mov
push
mov
inc
xchg
ljmp
inc
cmp
aad
mov
sbb
or
jbe
add
push
daa
mov
sbb
out
push
mov
lcall
cmp
mov
cmp
in
pop
in
sub
push
cs
sub
inc
pop
push
mov
push
and
pop
fcomp
sub
jl
mov
fsubp
icebp
scas
stos
xlat
lcall
aas
insb
add
gs
push
mov
xchg
fnstenv
pusha
push
enter
lret
pop
mov
or
xchg
push
test
dec
sar
push
addr16
fdivl
fnstcw
or
cmpl
fmull
in
or
inc
sbb
cmp
jb
lods
fisttpll
sub
pop
mov
inc
cmpsb
int3
ja
std
enter
xor
push
add
imul
and
sub
in
sbb
push
add
jb
out
fwait
inc
jle
fsub
lcall
icebp
and
push
lcall
rcrb
arpl
scas
mov
cs
fstpt
inc
lods
pop
dec
jbe
ss
stc
fidivl
sti
test
leave
xor
sub
xor
fadds
mov
xchg
in
add
testl
lea
xor
pop
sarb
fiaddl
bound
dec
or
inc
xor
das
jno
adc
outsl
loop
pusha
pop
lods
jbe
mov
cli
inc
lret
movsl
mov
test
shll
loopne
dec
negl
mov
addb
push
jmp
stc
cmc
mov
xor
sar
mov
fldcw
pop
enter
sti
cld
pusha
sarb
jno
push
test
adc
xchg
je
movb
pop
call
loop
stc
xchg
test
pop
mov
frstor
out
xor
cmpsl
aas
dec
insl
cltd
adc
enter
ret
clc
inc
dec
xor
mov
mov
sbb
adc
outsl
sub
or
leave
scas
fstps
stos
pop
or
jo
mov
add
in
push
dec
inc
lret
hlt
js
leave
iret
mov
add
lcall
sub
sub
cmpsl
sbb
sti
arpl
mov
aam
outsb
jne
lods
mov
push
mull
add
or
add
aas
or
jnp
add
jae
push
xor
pop
jp
test
sub
mov
add
dec
fcomi
xor
push
ror
test
jno
ds
stc
inc
sbb
push
iret
xchg
in
lret
mov
inc
jecxz
ljmp
adc
into
cmpsb
push
inc
xchg
imul
mov
test
lret
push
lds
roll
aaa
fbld
aad
lds
inc
cld
mov
cwtl
push
int3
cmp
adc
mov
inc
push
testb
into
push
push
xor
pop
test
je
cli
xor
pop
cmp
mov
loopne
andb
sbb
mov
pop
ret
and
cltd
adc
mov
mov
push
lahf
fcmovne
jo
pop
cmp
nop
insl
inc
jecxz
dec
xorps
les
iret
jmp
pusha
pusha
add
sar
pushl
fldcw
addr16
mov
inc
adc
cmp
cmpsl
divl
or
mov
inc
adc
and
adc
adc
test
push
ret
cmp
sbb
cld
xor
stc
lret
bound
in
mov
mov
repz
mov
pop
in
insl
add
mov
movsl
roll
loope
pop
xchg
mov
mov
into
mov
arpl
fdivl
rcrl
pop
loope
aam
out
jo
mov
fimuls
fwait
insl
aad
cltd
mov
jo
fildl
cmp
cmpsb
test
int
jp
push
jecxz
pop
push
shrl
sbb
xchg
pop
arpl
psrlw
int
xor
leave
insb
xlat
jo
mov
repnz
jns
jns
xlat
repz
ficoms
add
sub
leave
test
std
popf
sarl
adc
xchg
jl
repz
cli
jl
leave
ja
or
fidivs
jge
sub
ds
and
imul
xor
pop
sbb
std
sub
xchg
data16
cmpsl
icebp
sti
xchg
cmp
jmp
mov
inc
xor
cmp
repz
jo
out
test
test
testl
test
icebp
mov
mov
dec
sysret
js
imul
sub
inc
in
lds
jecxz
out
add
scas
pop
lock
jecxz
mov
push
push
jns
mov
cmp
les
out
jne
es
pop
push
in
jecxz
mov
scas
cmc
adc
cs
loop
jns
mov
outsl
call
movl
shlb
enter
pusha
mov
lock
sub
dec
cmpb
lret
add
mov
sbb
mov
jmp
les
push
iret
dec
xor
xorb
jle
scas
xchg
push
rcl
orb
jmp
jg
cmp
test
aam
xor
enter
cltd
std
mov
daa
ret
jb
jg
pop
pop
adcl
push
lcall
stos
pop
fsubrl
inc
iret
add
ret
in
dec
xlat
push
push
out
push
cld
sbb
cli
aad
jns
push
xchg
inc
adc
inc
and
cltd
fstl
jle
pop
lret
out
cld
cli
adc
imul
inc
pop
fiaddl
push
sti
or
jge
sub
pop
inc
data16
stc
mov
test
or
push
dec
pop
in
fwait
xor
cmpsl
pop
xchg
sbbl
lahf
adc
int3
jp
adc
add
out
and
lahf
and
jbe
loop
lahf
test
jne
and
scas
fldt
mov
pop
fimuls
sbb
scas
push
test
mov
xor
add
fisubrl
sbb
mov
xorb
push
add
insl
adc
inc
push
shlb
dec
xor
jb
lds
xchg
mov
add
out
data16
sub
dec
mov
insb
mov
cli
clc
or
jecxz
dec
dec
mov
mov
or
sub
movsb
xor
or
add
mov
xchg
mov
xor
lods
into
push
fstps
push
push
pusha
rcl
adc
pop
out
ds
shrl
push
push
and
jo
fsubr
popf
lahf
outsl
sti
push
adc
fwait
inc
jne
cmp
mov
into
les
jecxz
jp
sbb
dec
xchg
rclb
jge
pop
dec
fcomps
mov
xchg
inc
pop
jle
cld
out
js
gs
ret
lret
ret
or
sar
fnstsw
fnstenv
mov
add
add
outsl
and
rcrb
push
sbb
xchg
ret
add
jbe
push
jle
and
fstpt
mov
je
call
push
loopne
add
nop
mov
push
xchg
lcall
xchg
int3
int3
xchg
cmpsb
lock
adc
adcb
xor
in
dec
pusha
dec
repnz
jb
jnp
sbb
sub
jle
cmp
xchg
dec
scas
paddusb
push
shl
test
in
insl
int
mov
stc
mov
data16
and
mov
je
in
jmp
and
xor
sub
loop
fdiv
mov
sbb
xchg
dec
sub
adc
es
je
pop
in
test
iret
icebp
jle
scas
sbb
scas
mov
arpl
push
push
and
jmp
sarb
inc
gs
in
std
mov
dec
cmp
pop
test
push
inc
les
in
mov
dec
inc
pop
ret
rep
xor
and
insl
dec
outsb
mov
push
icebp
jg
out
scas
insb
mov
cwtl
sbb
fld
lea
mov
shrb
mov
in
dec
mov
xchg
mov
mulb
xchg
ljmp
loopne
retw
cmpsl
daa
cmp
and
cmp
pusha
or
mov
dec
cld
shlb
scas
lcall
push
pusha
sub
enter
mov
popf
push
pop
movups
sub
scas
fimull
add
out
andb
clc
or
adc
pop
add
sub
adc
xor
pop
mov
or
leave
mov
ret
mov
push
push
xchg
add
or
pop
out
mov
inc
scas
mov
inc
add
inc
bnd
fiadds
cmp
cmp
ja
je
mov
xchg
push
sub
lods
loop
pop
push
jb
adc
sar
jae
shll
aaa
add
imul
pop
js
xor
adc
add
sbb
push
jle
shrl
sbb
clc
fiadds
sub
popa
cmpl
mov
addr16
pop
adc
pop
or
sbb
mov
scas
push
xchg
iret
test
pop
add
xor
pop
test
xchg
shl
and
pop
mov
movsb
test
int3
cmpsb
inc
cwtl
fs
imul
roll
pop
inc
sub
and
xchg
and
mov
leave
pop
cs
hlt
repnz
cmp
xor
pop
jb
sahf
ljmp
jnp
push
xor
mov
ds
mov
cmp
lret
test
inc
fimull
pop
mov
xchg
aam
rcrb
imul
push
pop
xor
push
test
mov
stos
push
movsl
and
add
adc
push
add
sbb
dec
cmpsw
dec
jp
dec
dec
bnd
jecxz
push
xchg
fld
decl
dec
dec
pop
repz
lea
addr16
pop
enter
mov
mov
jne
and
pop
nop
nop
fwait
pop
pop
sbb
or
mov
mov
mov
outsb
xor
ja
fs
inc
xor
lods
ljmp
sub
mov
fcmovnbe
xchg
jno
idivb
aam
xchg
cmp
xor
addr16
ljmp
lcall
dec
ds
jmp
sbb
dec
ja
ret
fs
inc
sbb
xchg
les
jp
enter
sub
sub
mov
mov
aaa
adc
add
subb
add
xchg
inc
pop
inc
js
cwtl
std
outsl
dec
outsb
sbb
mov
aad
aas
rcr
sti
jnp
into
mov
dec
popf
fadds
fcmovb
cs
mov
in
push
xlat
mov
adc
mov
add
lret
das
or
push
jg
add
sbb
or
subl
adc
mov
jne
insb
add
mov
sub
insb
fdivl
pop
mov
cwtl
mov
test
push
notrack
sbb
icebp
fisttps
or
mov
stc
pop
fidivrs
je
imul
shlb
lcall
stos
push
dec
sbb
mov
popa
mov
mov
jl
mov
or
dec
mov
test
pop
andb
imul
push
roll
jnp
xor
ss
xor
or
lds
fwait
imul
push
mov
push
mov
addr16
inc
scas
stc
repnz
add
adc
dec
or
ja
insl
add
jno
mov
sub
in
adcb
and
and
fcom
gs
lea
pop
ret
push
test
aaa
push
arpl
jns
ja
js
cmp
mov
lcall
mov
movsb
fstpl
add
xchg
mov
xor
popf
divb
mov
push
fistl
out
jb
pushf
sub
pop
jo
loop
adcl
fdivrs
repz
mov
mov
in
xchg
mov
dec
decb
jnp
sub
into
mov
sub
arpl
arpl
int3
mov
test
jl
push
cwtl
fdivrs
pop
bound
and
out
call
pop
inc
pop
pop
push
cmp
adc
jbe
xchg
test
call
or
and
xor
dec
xchg
lock
push
adc
inc
sub
mov
sbb
insl
mov
icebp
jb
sub
push
and
or
jae
int
lock
mov
add
push
mov
cmp
dec
scas
outsl
add
popf
inc
mov
dec
and
push
sub
cmp
push
sub
addb
ror
sub
loope
or
ja
xchg
jl
mov
adc
in
adc
push
push
popl
cs
sub
adc
gs
push
xchg
fadds
mov
pop
mov
add
pushf
and
fnstenv
mov
dec
pop
mov
sub
shll
into
stos
sub
es
inc
push
ret
pop
pop
mov
pop
adc
xor
lret
mov
mov
xchg
rcl
es
sbb
cmpb
xchg
inc
add
xchg
xor
subl
xor
sti
gs
mov
inc
pop
je
dec
je
lret
mov
ret
sti
xchg
pop
inc
fsts
add
lret
insb
sahf
int3
int
movsl
cmc
cwtl
ficoms
push
add
sbb
mov
inc
mov
flds
add
jecxz
ljmp
pushf
pop
outsl
iret
xor
mov
sbb
jns
cvtps2pd
hlt
cmpsl
xchg
lahf
add
xchg
leave
jle
mov
inc
adc
sub
in
push
cwtl
das
das
incl
mov
sbb
into
scas
add
jae
mov
xor
clc
scas
sahf
inc
xor
scas
in
int3
or
insb
xchg
mov
sbb
lock
idivb
movsb
in
mov
pop
cmp
out
loopne
fwait
jmp
pop
jmp
ret
or
outsb
mov
xor
and
mov
sahf
mov
sbbb
mov
fistpll
push
push
adc
mov
push
inc
pop
push
adc
nop
pop
jbe
or
pop
cmp
aad
sbb
and
or
pop
aam
fisubrl
sub
repnz
pop
std
push
push
dec
out
pop
out
movsb
push
out
mov
popa
mov
jbe
jle
rcrl
ja
in
scas
mov
mov
test
sbb
rorl
ret
sub
subl
test
das
jns
jmp
xor
add
ljmp
in
daa
cmp
mov
push
aas
loopne
cmpsl
nop
repnz
sub
cmp
adc
repz
pop
jbe
dec
inc
xor
lea
mov
lods
mov
mov
jl
pop
mov
outsl
insb
push
leave
mov
aad
sub
jmp
aas
aad
adc
mov
mov
lock
xor
mov
cmp
xor
xchg
sbb
out
sub
sahf
sub
sub
aam
adc
mov
aaa
mov
fdivs
add
inc
xchg
rcrb
adc
stc
push
or
xchg
ja
vpacksswb
mov
inc
xor
add
xchg
repnz
push
pusha
ss
loop
subl
push
es
das
dec
dec
cmpsl
dec
dec
outsl
sti
jo
xor
out
mov
pop
clc
dec
dec
push
adc
pop
jnp
std
stc
arpl
mov
aad
subb
push
mov
push
mov
in
jnp
sub
test
push
pop
rcll
cltd
rcrb
cltd
push
pop
sbb
ja
iret
inc
lock
xor
pop
cld
imul
clc
gs
mov
xchg
push
pop
push
orb
xchg
mov
cvtps2pd
and
clc
mov
jmp
push
pop
pop
sarl
and
sub
adc
shll
inc
xchg
in
mov
jmp
jo
xchg
and
adc
pusha
sub
adc
fbld
adc
gs
sti
push
and
fadds
adc
insl
test
adc
outsl
js
mov
sbb
movsb
xchg
movsb
pop
jmp
scas
ljmp
dec
rolb
daa
scas
mov
pop
outsl
sbb
jne
jno
int3
xchg
hlt
shll
push
pop
enter
and
adc
movl
jg
jle
mov
mov
jecxz
push
jg
pushl
std
sub
cmp
fs
xor
push
pop
xlat
nop
jnp
outsb
nop
mov
mov
outsb
xchg
push
adc
cmc
movsb
gs
cmpsb
js
cltd
mov
jmp
nopl
push
repnz
stos
out
mov
sub
mov
aad
push
nop
push
je
into
out
push
int
enter
mov
decb
test
into
jecxz
js
mov
push
xor
xor
push
daa
push
xchg
lods
push
mov
out
jb
lock
push
mov
test
imul
pop
lea
xchg
outsb
xchg
jecxz
xchg
scas
cmp
int
std
mov
les
test
call
dec
inc
jmp
xchg
sub
out
pop
cld
pop
rcrb
sbb
inc
xchg
ja
pop
mov
btc
in
lahf
jnp
fs
and
dec
or
xlat
inc
jl
sbb
dec
sbb
mov
repnz
sub
movsb
clc
or
push
subb
rcrl
push
rcrl
xor
shr
dec
cwtl
fsubrl
outsb
pop
mov
stos
les
adc
and
or
push
push
ja
test
scas
xor
pusha
sbb
out
inc
scas
mov
add
cmp
lods
push
lcall
xor
mov
repz
imul
mov
aaa
lods
push
stos
or
stos
imul
xchg
xor
jecxz
cwtl
mov
xchg
mov
inc
jbe
jns
aad
scas
mov
jg
xor
popf
cwtl
jle
pop
lock
pushf
push
mov
inc
rcl
int3
mov
icebp
sbb
mov
and
jl
call
shlb
fistps
in
fmulp
fnstenv
mov
xchg
sbb
fs
cmp
test
mov
test
pop
pop
push
out
scas
push
xchg
aas
insl
stc
mov
scas
or
ror
push
cmp
pop
add
mov
sub
pop
add
mov
lret
add
cmp
dec
sahf
lcall
nop
andl
mov
out
cli
and
les
aaa
xchg
ret
addb
xor
das
imul
mov
fldcw
popf
adc
xchg
lods
insl
mov
dec
xchg
push
sub
xchg
jne
cmpsl
dec
inc
sbb
sub
xchg
cmp
out
xorl
mov
xchg
jg
cmp
shr
out
addr16
mov
add
sbb
add
data16
aad
leave
push
repz
push
push
test
cmc
push
cli
pop
sbb
push
sub
outsb
aad
sub
xlat
dec
inc
notb
mov
popf
mov
lcall
xor
stc
mov
sub
lret
in
je
aad
stos
sbb
xor
clc
js
movsb
test
in
mov
lods
inc
scas
push
cmpsb
sbb
and
pop
add
cwtl
add
sar
sub
mov
push
sahf
popa
sbb
lret
pop
out
loopne
pop
cmp
movsl
mov
fcmovbe
inc
adc
aad
std
mov
inc
addr16
es
and
push
stc
sub
add
imul
bound
nop
and
pop
jno
push
rcl
les
push
fildl
insl
and
fisttps
dec
cmpl
loopne
mov
and
incb
add
shr
dec
pop
adc
and
sub
shlb
and
fsub
or
inc
adc
popf
jle
in
loop
fnstcw
sarb
test
adc
add
dec
xchg
sub
es
jno
movsb
in
popf
mov
cmp
bound
add
sar
xchg
mov
outsl
imul
or
sbb
push
mov
and
stc
test
jecxz
xor
add
xlat
arpl
adc
pushf
fstp
mov
lret
gs
pop
mov
xchg
pusha
cmp
pop
xchg
inc
iret
sti
pop
aam
cmpsb
sbb
fdivr
mov
push
pusha
pop
leave
aad
pop
hlt
mov
dec
push
dec
xchg
inc
push
jno
inc
add
dec
jo
mov
pop
aas
loope
xor
inc
imul
mov
mov
fimuls
imul
and
sub
mov
lods
inc
aad
or
xchg
mov
mov
stc
jmp
xchg
cmc
out
scas
std
rcl
mov
mov
lret
in
jl
lods
jl
data16
adc
and
outsl
sahf
mov
insb
mov
in
xchg
ljmp
lods
adc
xchg
test
and
mov
push
pop
mov
jg
insb
jl
arpl
lods
sbb
hlt
xor
push
rcr
out
sahf
jne
dec
adc
mov
pop
rcl
les
addr16
scas
imulb
inc
cld
out
enter
outsl
xor
int3
mov
xor
adc
dec
push
mov
das
push
adc
mov
push
outsl
cmp
mov
mov
mov
xor
mov
cld
adc
adc
lcall
and
in
push
push
pop
sbb
pop
cwtl
jle
or
adc
daa
mov
popf
stos
jmp
ljmp
push
scas
das
lods
and
movb
mov
lds
xchg
aaa
ljmp
cmc
pop
shl
in
cld
jg
push
insl
cmpsb
mov
jmp
paddusb
or
insb
incl
jne
jns
sbb
shll
mov
cmpsb
pop
or
movsb
daa
push
cli
mov
cmp
lahf
dec
push
adc
aam
mov
fs
xor
or
push
cwtl
insl
mov
jl
push
mov
cmp
or
test
lea
push
or
ds
mov
cmp
jecxz
psubsb
data16
or
lret
dec
loop
xchg
dec
dec
repnz
cmc
das
out
push
ljmp
fnstcw
loopne
insb
push
push
xchg
push
scas
mov
mov
jns
ja
add
test
mov
test
sub
dec
sbb
add
dec
ds
mov
es
int3
aad
sub
sub
rorl
mov
stc
push
xor
decb
inc
sbb
xor
imul
arpl
cli
pop
or
mull
jo
jbe
add
jge
dec
mov
mov
cmp
push
les
fsubp
in
out
pushf
bt
dec
lret
lds
add
inc
add
xchg
out
jb
in
push
xor
scas
push
adc
das
arpl
nop
lcall
jo
xor
int
pushf
add
add
lahf
cmp
into
sti
jle
dec
jge
pop
out
sub
jo
test
insl
dec
test
pushf
push
sbb
in
int3
lods
fiaddl
sub
lcall
cmp
mov
xor
enter
addr16
push
in
stos
rcrl
out
and
cmp
jmp
xchg
aam
sbb
mov
xor
push
push
cmpb
mov
xor
test
xchg
das
add
fidivl
imul
or
out
inc
mov
cmpsl
ret
stc
das
dec
inc
cmp
scas
shrl
insb
cmp
pop
loope
and
fdivrp
shlb
ret
jmp
rcrl
pop
in
bnd
adc
push
pop
repz
and
mov
bswap
rcll
stos
sarb
xchg
les
pushf
mov
pop
gs
test
rol
adc
fdivrl
ret
xchg
pop
imulb
dec
jo
cmp
mov
fwait
arpl
sub
rorb
loope
pop
xchg
inc
cmp
xor
xlat
cmpsb
xchg
sbb
pop
rol
mov
sub
popf
dec
xchg
mov
pop
jnp
shll
clc
into
add
and
das
adc
xchg
lret
cmp
ret
push
mov
in
pop
loop
fs
sbb
inc
xchg
insb
scas
or
jecxz
andl
or
push
test
cmpb
mov
xlat
jnp
insb
dec
jle
add
push
jb
jge
hlt
out
loop
inc
jp
adc
ss
ja
out
dec
jns
aam
xor
daa
inc
pop
adc
pushf
xchg
fistl
adc
movsb
push
fsub
ljmp
fsubs
sarb
pushf
mov
es
popa
mov
arpl
decl
ja
jno
mov
les
inc
jo
clc
fmul
call
mov
or
mov
dec
fdivl
mov
mov
subl
icebp
je
ffreep
out
cltd
mov
or
scas
dec
stc
xor
ret
xchg
aas
scas
mov
mov
outsl
frstor
lea
adc
bound
loop
fs
sbb
inc
sub
cmp
iret
jb
fnstsw
fs
sub
sub
sub
in
pop
mov
xchg
aad
adc
pop
pop
push
ljmp
aam
inc
imul
bound
mov
addr16
ss
xchg
cmpsl
pop
test
sub
ret
ljmp
fwait
rcrl
mov
adcl
sahf
pop
jp
movsl
and
ds
xor
mov
ja
xchg
pop
faddl
daa
xlat
sub
cmp
aas
dec
jl
lret
mov
aam
dec
cmp
scas
jb
outsb
mov
aam
xchg
bound
test
add
test
fnsave
mov
mov
imul
mov
adc
add
or
das
pop
lods
test
inc
movsb
mov
xchg
inc
mov
repnz
stos
fsubs
ss
push
mov
lock
movsl
jno
push
inc
jbe
aaa
outsl
inc
mov
les
sbb
pop
pushf
cmpb
rcl
leave
lahf
das
inc
ds
jae
mull
jno
xchg
mov
jns
mov
xor
sub
push
add
inc
lret
andb
es
pop
std
mov
or
lods
sub
stos
scas
mov
lcall
bnd
das
xchg
mov
loopne
ss
es
cmc
call
mov
xor
scas
rclb
pop
out
jb
jecxz
mov
mov
stos
inc
int3
dec
pop
and
int
and
or
cs
cmp
icebp
out
dec
sub
int3
dec
pop
fildll
or
add
dec
mov
test
outsl
bound
pop
jo
mov
stos
dec
sbb
lahf
mov
xchg
js
pop
pop
in
add
je
jl
xorb
int
movsl
or
aam
dec
jb
aam
fstps
push
xchg
cmp
xchg
adc
xchg
jmp
mov
insb
or
pop
sbb
jp
mov
movsb
adc
popa
mov
or
mov
loope
std
sbb
daa
scas
inc
dec
int3
push
pop
clc
sub
dec
xchg
les
cs
jl
adc
popf
mov
xor
pop
in
sti
in
or
mov
fbld
cld
jnp
mov
out
stc
xchg
lahf
jmp
cmpsb
push
adc
shr
xor
xor
insl
rorl
sbb
jno
xchg
lods
push
ss
mov
xchg
cwtl
enter
jge
sub
mov
mov
cmp
pop
loope
adc
jmp
push
cmpsb
jno
xor
sbb
cwtl
mov
xchg
pop
push
ficompl
mov
inc
mov
pop
xchg
mov
xor
aaa
lock
imul
cli
pop
mov
jb
and
jbe
imul
ss
jp,pt
and
outsl
xchg
mov
dec
lea
test
shrb
and
into
cmp
stos
popa
fcmovb
cmp
rolb
pop
daa
xchg
xchg
mov
outsl
cmp
mov
push
ret
push
jnp
xchg
int
fidivl
iret
dec
mov
mov
jl
fildl
cmp
inc
pop
mov
rorb
cmp
es
push
xchg
and
ret
pop
pushf
sbb
std
lahf
push
lds
sub
sub
outsb
jle
out
sbb
pop
add
mov
cs
fwait
jns
sbb
xor
cs
or
adc
xchg
bound
sahf
jnp
add
jp
mov
xchg
sbb
mov
mov
aad
daa
adc
push
mov
shrl
imulb
lods
repz
dec
xchg
repnz
stos
repnz
inc
bound
sbb
mov
fisttps
cld
mov
mov
inc
test
out
adc
and
cmp
push
and
fs
jo
push
and
pop
or
sahf
repz
addr16
mov
ret
xchg
lahf
jne
into
mov
sub
jb
inc
or
pop
es
jle
inc
mov
aaa
insl
mulb
push
rcll
out
adcb
mov
pop
xor
add
mov
addr16
and
pop
sub
rcrl
insl
dec
stos
dec
jb
mov
push
xchg
inc
test
mov
decl
pop
out
repnz
xor
jl
mov
fnstsw
or
mov
outsb
loop
cmp
nop
sub
lcall
out
test
lock
ljmp
mov
mov
hlt
repz
adc
lret
icebp
fsubrs
xchg
je
dec
shrb
lret
inc
rclb
mov
add
push
les
push
icebp
xchg
cld
lods
and
mov
cmp
add
mov
jne
and
or
out
popa
mov
sub
pop
and
xchg
in
data16
jmp
js
rcrl
in
inc
outsb
stc
mov
xor
and
scas
fwait
xchg
rolb
pop
nop
pushf
dec
bound
aas
inc
shll
frstor
push
repz
sbb
cmp
data16
fisubrl
push
lods
mov
push
inc
xor
fistpl
dec
pop
ret
push
and
out
xchg
inc
scas
jge
jnp
loopne
push
xchg
pop
cmp
pushf
fsubrs
add
movsl
lret
mov
test
lahf
int3
clc
cmp
mov
or
rolb
sub
cmp
loopne
xor
push
loope
mov
std
ret
fdivrl
adc
sbb
shlb
push
fisubl
sbb
xor
outsl
pushf
sub
jg
dec
xor
pusha
add
inc
sub
sti
mov
roll
ret
movsb
in
xchg
lcall
out
insl
sbb
outsl
adc
dec
mov
testl
popf
test
das
dec
push
mov
loop
lds
lret
sarl
mov
call
in
ja
cld
insl
into
or
lcall
loope
orb
cwtl
loop
push
inc
test
pop
xchg
fdivrl
or
xchg
lret
push
xchg
test
inc
es
inc
or
lret
int3
xchg
jmp
pusha
jp
and
dec
fisubrs
dec
cltd
mov
cmp
xor
mov
mov
mov
rsm
jecxz
pushf
mov
or
mov
xor
cld
dec
cmp
fsubs
out
decb
outsl
repz
lods
cs
pop
dec
push
add
push
mov
push
bound
cld
mov
call
add
pop
sahf
adcl
into
ficompl
test
ficoms
and
add
mov
jg
mov
push
imulb
ds
sbb
mov
leave
adc
mov
repnz
fwait
lock
jbe
or
jns
rclb
mov
sub
add
arpl
sar
mov
cltd
dec
xor
xchg
sbb
cld
adcl
sbb
sub
fbld
sbb
cmp
addr16
stos
mov
and
sbb
sub
stos
add
dec
cs
adc
xchg
xchg
rclb
cmpsb
xchg
jnp
pop
lret
fmul
inc
stos
hlt
xor
xchg
mov
in
push
std
sub
sahf
dec
mov
les
out
fdiv
enter
lock
mov
or
inc
push
ret
loopne
jmp
xor
sbb
pushl
jo
fbld
add
sub
mov
cmc
add
adc
sar
lret
adc
or
fwait
shll
xor
mov
icebp
lock
or
mov
xlat
sbb
testl
gs
mov
and
sarb
mov
xor
jmp
or
sub
dec
dec
push
loope
xchg
dec
shl
jnp
test
cltd
mov
lods
lods
les
mov
push
lcall
cltd
call
movsb
or
mov
fbstp
push
das
lods
test
or
lahf
imul
jne
cmpb
aas
and
movsl
fsts
push
cmp
clc
mov
test
out
mov
out
adc
loopne
push
add
shlb
xchg
cmpsl
mov
mov
xchg
xor
xor
cmp
incb
dec
push
ja
lahf
and
movups
inc
int
cli
mov
gs
ss
out
inc
arpl
add
mov
insb
mov
popf
mov
push
jne
testb
push
push
in
cmp
push
cmp
in
xor
cld
mov
dec
out
adc
cmpl
iret
mov
insb
lcall
pop
add
daa
xchg
sbb
ret
cmp
pushf
sbb
ljmp
pusha
out
cwtl
cld
lea
mov
dec
adc
push
aaa
sbb
mov
insl
inc
ffreep
test
jnp
movsl
mov
pop
mov
or
sbb
mov
rclb
sahf
mov
test
ds
jo
sbb
aam
xchg
push
enter
std
cmp
inc
push
je
add
add
outsb
incb
mov
push
enter
sbb
divb
in
int3
shlb
movsb
fsubrl
scas
mov
mov
in
test
pop
rclb
pop
mov
clc
mov
pop
nop
out
movsb
fs
fisttpl
mov
jg
add
jae
sbb
aam
fs
sahf
shr
into
stc
icebp
xor
arpl
push
inc
cmpsl
out
call
add
and
adc
std
inc
sbb
ret
mov
pusha
call
dec
adc
insb
jbe
jg
jp
icebp
xor
mov
ss
loop
xlat
xbegin
dec
mov
mov
mov
pop
jge
call
xor
stc
bound
cltd
es
adc
mov
sbb
icebp
int3
js
arpl
xchg
in
shr
xchg
xchg
ret
leave
inc
cwtl
sar
mov
cli
pop
cwtl
in
enter
lcall
scas
cmpsb
setbe
or
cmp
repz
inc
mov
fbstp
push
xchg
inc
cmp
lahf
pop
xor
in
ffree
inc
xchg
cmp
push
xor
pop
or
ja
jecxz
fst
ret
incb
sbb
push
or
add
dec
loop
sbb
cmpsb
ds
adcb
adc
daa
out
xchg
sar
pushf
cmp
sub
mov
sub
mov
jl
xchg
lods
xor
mov
ficoml
int
iret
add
xchg
cmp
or
cwtl
xor
pop
lret
daa
sbb
pop
cmp
addl
mov
mov
es
xchg
ret
sub
cmp
or
jno
push
arpl
pop
adc
dec
js
aaa
jmp
ret
xchg
xchg
ljmp
mov
sahf
xor
inc
push
push
fildll
sarl
popa
insl
arpl
or
jo
mov
cmp
pop
call
xchg
jnp
daa
data16
cli
jecxz
and
sti
adc
lea
push
add
xor
loope
and
cwtl
jbe
mov
jbe
roll
or
add
aaa
rclb
in
dec
or
xchg
mov
popa
call
push
fldenv
sarb
shlb
jmp
xor
or
fidivrl
mov
lcall
push
inc
sbb
aas
cmpsb
repnz
push
rorb
pop
aas
cmp
adc
lahf
popa
cld
lret
mov
xchg
jae
leave
sti
mov
mov
push
cmp
cmp
push
sbb
mov
and
cs
sbb
and
push
dec
inc
call
mov
in
jmp
in
mov
dec
enter
loope
test
pop
cs
xor
cmc
push
jg
jp,pn
push
push
mov
faddl
sub
mov
mov
pop
aam
xchg
clc
aas
bound
xor
cmc
mov
daa
inc
fwait
push
jmp
mov
test
orb
mov
mov
push
dec
sub
push
in
mov
sub
and
dec
add
cltd
imul
ficomps
test
test
push
inc
add
push
icebp
mov
in
out
xor
hlt
jle
loop
mov
xor
mov
push
insl
mov
or
dec
xchg
sub
add
pushf
pop
jmp
inc
cmp
cli
xchg
xor
imul
add
out
in
fsts
and
lea
leave
lcall
sbb
js
nop
daa
add
sbb
push
pop
and
ficompl
mov
pop
dec
ret
jecxz
dec
adc
and
adc
fisttps
jne
ds
in
jb
inc
and
lods
lret
ret
je
movl
xchg
push
pop
xor
shr
cmpsb
fs
sbb
sarl
inc
mov
test
cmp
or
outsl
adc
fnstenv
jge
cmp
add
push
icebp
fidivrs
mov
and
push
inc
das
mov
sbb
ror
push
push
addr16
stos
incl
sub
push
xlat
xor
lahf
inc
cmp
inc
lret
ret
inc
pop
sbb
mov
stos
add
sbb
aad
jp
sahf
sub
cmp
ljmp
push
test
push
fistpll
xchg
fwait
sbb
lret
adc
jle
shrl
jnp
fcomps
iret
dec
add
hlt
div
mov
cli
mov
adc
jl
adc
adc
and
sub
pop
ret
ja
xchg
pop
icebp
jnp
xchg
sub
xchg
das
inc
ljmp
pushf
mov
fsubrs
out
jbe
push
xor
mov
repnz
sbb
mov
dec
cltd
ret
es
ss
xlat
lret
call
scas
out
lock
ret
mov
sbb
ret
jo
jb
cmpb
pop
add
mov
xchg
or
sbb
add
repnz
test
mov
les
xchg
out
lahf
pop
mov
scas
stc
cmp
fidivs
jg
xchg
xchg
and
fnsave
mov
imul
in
int3
rcr
movsl
xchg
scas
mov
fisttpl
in
push
jno
mov
jo
dec
xchg
mov
jne
pop
jmp
mov
xor
push
pop
cmc
sub
es
test
mov
repnz
movsb
pop
adcb
sarb
scas
lea
adc
cmc
mov
cmpsb
mov
mov
push
and
push
xchg
mov
jge
lret
lods
lcall
jo
push
lds
call
cmp
fsub
push
pop
adc
fsub
enter
and
andb
fiaddl
xchg
dec
mov
leave
inc
stc
inc
or
lret
adc
lock
xchg
out
dec
push
subb
dec
call
sbb
outsl
add
jmp
jne
sbb
dec
add
lea
dec
mov
mov
sub
lea
or
xchg
imulb
pop
sub
in
add
lods
lret
cmp
mov
out
setno
mov
cmp
sub
mov
test
ret
mov
inc
out
sub
inc
xchg
fstpl
repnz
and
sub
pop
subb
leave
jp
jae
in
dec
pop
push
sbb
int
jl
cs
outsb
sub
outsl
xchg
je
mov
xor
mov
ret
xchg
push
int
cmp
fsubr
dec
xlat
cmpsl
outsl
inc
ja
lahf
cmp
daa
fisttpll
fstpt
and
push
sbb
dec
aam
dec
sub
jo
bound
dec
mov
adcb
ja
cmc
add
cli
adc
cwtl
rorl
cmp
sub
ficoms
int3
cmpl
jg
shl
jb
xlat
xchg
repnz
lret
jns
insb
jmp
iret
mov
call
fs
iret
test
adc
insl
mov
adcb
mov
mov
sbb
mov
jae
sub
fldenv
dec
mov
les
cld
addr16
jge
add
into
jnp
test
and
dec
std
je
test
mov
mov
xchg
iret
xor
pop
xorb
inc
inc
leave
dec
lock
push
pop
xor
mov
popa
xchg
cmc
jl
jge
cmpsl
shll
xor
je
adc
sbb
mov
fdivs
and
jge
pop
shl
jbe
cmp
sar
push
sahf
stos
xor
pop
ljmp
push
dec
cmp
or
pop
push
rcrl
adc
fsubl
xor
subl
mov
insl
cmpsb
rcll
js
xchg
xor
inc
pop
sbb
xchg
push
ret
lret
mov
das
push
imull
fcmovbe
jno
mov
hlt
test
shll
jns
jmp
dec
push
aam
sahf
sbb
mov
or
fidivs
dec
push
sbb
icebp
insl
test
ja
xchg
rorb
lret
sub
mov
add
or
fistpll
cmp
movb
js
jne
mov
cmp
adcb
mov
stc
add
pop
jl
rcll
add
sbb
stc
pop
out
mov
insl
inc
out
add
sarb
sbb
cmp
mov
xchg
pop
add
loop
lock
xchg
adc
pop
add
test
das
cmc
sbb
push
adc
test
lea
dec
sub
out
sbb
xor
push
shlb
negb
leave
add
out
sub
cli
sbb
icebp
decl
xchg
pop
repz
gs
jg
mov
sbbb
sbb
pushf
mov
lds
jno
scas
in
mov
push
lods
sti
xchg
cmpsb
shll
pop
sarl
popa
leave
cld
ror
or
sbb
jne
je
fstl
fs
das
data16
cmpsb
add
inc
js
push
pop
fildll
jecxz,pt
dec
pop
and
lock
mov
push
dec
sub
dec
nop
ds
xchg
xlat
sbb
sbb
loop
xor
push
rcrb
dec
in
out
dec
les
sub
insl
sub
and
loop
mov
pop
dec
inc
mov
mov
test
ret
into
sarb
pusha
jecxz
jno
int
jl
push
push
push
loop
adcb
lods
and
in
in
mov
pop
add
jb
inc
mov
jmp
mov
icebp
mov
flds
ljmp
fldenv
cmpsb
std
fsubl
mov
or
and
mov
mov
xor
add
insl
jge
or
imul
lds
jo
pop
mov
mov
clc
dec
sti
xchg
xchg
xchg
jle
inc
cmp
repz
and
adc
sub
popf
xchg
push
popf
insl
out
jbe
mov
or
int3
push
push
and
jge
jl
add
jbe
mov
outsb
insb
cmpsl
pop
mov
jae
lahf
sbb
push
mov
dec
dec
mov
mov
arpl
adc
adc
fidivrl
xchg
jle
arpl
loop
mov
cmp
pop
or
sbb
loope
sub
jns
pop
cmpsl
fcmovb
lock
sbb
movb
jo
mov
push
add
std
mov
jge
push
or
js
xchg
adc
or
hlt
add
rclb
mov
adcb
mov
scas
enter
mov
sarl
fldl2e
adc
rcr
sub
in
fcoml
dec
stos
subl
jo
xchg
into
inc
fmuls
cs
push
inc
lock
mov
jne
push
imul
push
xchg
repz
fmuls
push
xor
sub
sub
push
sub
xchg
sbbb
cmp
xlat
cmp
lods
xor
shrl
mov
mov
inc
in
dec
push
dec
ret
scas
mov
mov
mov
pop
std
mov
daa
pop
pop
aam
fimull
push
add
add
add
mov
sub
cld
pusha
and
mov
push
sub
insl
push
sbb
pop
lods
mov
bound
cltd
ds
mov
inc
orb
mov
sub
push
adc
aam
stos
in
lock
popf
fldenv
or
addr16
mov
xchg
jne
std
sub
sbb
call
adc
dec
test
aas
daa
cmp
and
pop
adcl
stc
stos
sbb
repnz
and
jb
inc
aam
push
mov
loope
mov
data16
nop
popf
add
push
jmp
xchg
cld
pop
push
loopne
pop
xchg
and
cmp
or
xor
out
jmp
repnz
je
mov
fbld
mov
pop
and
jae
adc
lahf
aaa
jbe
iret
mov
and
in
jge
dec
push
xor
sbb
sub
pop
imul
ss
jnp
mov
ficoml
push
cltd
fmul
or
adc
push
pop
imul
lds
push
movsl
mov
popa
ret
adc
cmp
fwait
gs
mov
addr16
push
and
mov
sarb
lret
loope
mov
aad
ror
xchg
cmp
icebp
lret
mov
xlat
jae
outsl
inc
ja
es
push
add
inc
push
mov
cmp
xchg
xchg
into
sbbl
cmc
lahf
cmp
jae
xor
cltd
pop
scas
test
pop
std
lret
ja
ljmp
adc
adc
std
add
sti
sub
out
mov
in
enter
cmp
and
insb
cwtl
cmp
inc
test
pop
mov
xchg
cwtl
dec
mov
into
push
pop
mov
mov
aaa
xor
pop
rolb
ljmp
ficompl
popf
int
inc
daa
mov
hlt
sbb
and
add
jmp
sbb
js
leave
pop
cmp
or
add
ja
bound
imul
callw
xor
dec
pop
add
and
jp
cmpsb
ret
mov
enter
repz
push
cmpsl
aad
not
out
pop
inc
inc
bound
stos
sub
scas
movb
dec
mov
mov
dec
pop
mov
cmp
lock
popf
popa
xchg
and
cli
push
fsub
les
inc
xor
add
insb
pop
dec
loop
sub
jmp
imul
mov
mov
shl
sub
jge
fdiv
jp
idivl
aas
push
pop
pop
pop
mov
adc
sbb
test
es
push
daa
sub
arpl
popa
shrl
adc
nop
jo
xlat
cli
dec
push
cmpsb
ret
inc
push
jno
cmc
lcall
xchg
mov
clc
ret
mov
push
pop
sbb
sbb
insl
gs
pushf
lret
cmpsl
in
stc
push
mov
push
pop
je
inc
std
and
adc
mov
in
sbb
in
xchg
jp
xorl
inc
iret
lret
sti
xor
shrl
outsb
dec
mov
aam
repnz
in
ret
or
cmp
data16
lds
push
push
movsb
pop
call
outsl
xchg
pop
sbb
dec
mov
lds
gs
repz
push
sbbb
ja
push
gs
fisubl
xor
mov
sahf
mov
imul
test
test
or
in
into
adc
xchg
sub
stc
and
mov
jne
jae
rclb
push
xlat
mov
cmp
inc
pop
push
adc
jno
sti
in
cmp
das
mov
dec
cmp
cmpsl
test
std
mov
orl
inc
inc
popf
push
into
ljmp
popa
add
jns
jnp
sbb
sbb
push
inc
shll
cmp
inc
out
imul
and
add
sbb
repz
push
dec
push
jmp
sbb
imulb
je
push
xor
add
pop
mov
ret
dec
sbb
outsb
out
enter
repnz
aaa
push
jmp
cwtl
divl
add
sub
pop
pushf
jno
add
cmp
add
movsl
jl
int
add
mov
jo
jnp
pop
push
add
xchg
cltd
mov
pop
inc
mov
ljmp
rdtsc
jo
jo
inc
jb
fldenv
xchg
cwtl
cwtl
pop
adc
mov
cmp
cmp
sbb
pushf
loopne
dec
js
xor
popf
mov
out
loope
xor
push
pop
aas
hlt
push
jecxz
jge
cmc
call
dec
mov
cld
insl
pop
addr16
arpl
inc
xor
popa
enter
out
insl
xor
aas
xor
loop
sub
inc
out
cmp
sub
out
dec
enter
lahf
xchg
leave
ret
jns
lock
mov
outsb
aad
ficompl
pop
leave
mov
fistps
pusha
addr16
sahf
cmpsl
aas
dec
subb
push
ficomps
sbb
sub
cld
rcrb
dec
cwtl
and
insb
inc
pop
xchg
cld
sbb
enter
stc
cmp
sbb
in
add
test
gs
sbb
mov
push
movsl
lret
test
jmp
xor
lods
xchg
int
cwtl
xchg
cmp
pop
sbb
cltd
and
dec
pushf
or
les
or
imul
into
push
popf
aaa
das
movsl
test
outsl
mov
xor
inc
iret
sbb
xchg
enter
pop
push
push
lea
cmp
xor
mov
mov
stos
adc
int3
out
add
gs
adc
sub
mov
mov
or
push
scas
jae
push
jb
imul
lds
and
cmp
rorb
push
pop
mov
sub
add
pushf
test
sub
test
fmul
call
das
jo
or
fstp
std
pop
xchg
insl
adc
iret
push
sub
jb
out
xchg
sbb
movsb
dec
xchg
push
pusha
loope
sub
lahf
cmp
mov
xchg
push
lods
in
jo
jne
iret
faddl
mov
stc
xchg
sub
dec
faddl
push
jge
fs
xchg
pop
add
sarl
cmp
incb
cmc
dec
mov
jecxz
sub
cmp
sub
mov
or
and
int3
sti
inc
nop
inc
mov
dec
adc
xchg
clc
inc
hlt
sub
lcall
sbb
rorb
int3
call
or
shll
das
mov
scas
lcall
push
add
fidivs
into
insl
sarb
jle
sub
insl
fwait
loope
mov
add
push
arpl
sub
std
mov
jl
cmp
les
movsb
or
mov
cltd
sub
int
shrl
or
cmpb
les
cwtl
sub
icebp
push
sbb
inc
sub
cmp
mov
mov
mov
enter
adc
fidivrs
notb
xchg
dec
xor
stos
and
sub
shrl
orl
mov
jne
xchg
cmp
pop
push
inc
xor
xchg
mov
pop
clc
enter
sub
pop
enter
add
mov
mov
inc
dec
out
inc
clc
and
ret
gs
jge
jae
and
out
fsubs
in
jg
movsb
daa
dec
sub
xchg
mov
insl
cmc
icebp
add
fbld
inc
cmp
dec
incl
pop
push
scas
loope
push
xor
aaa
lock
xchg
fidivl
push
pop
in
add
jl
jbe
fs
fstl
xchg
vmread
in
jle
xor
scas
sti
stos
or
clc
inc
mov
pusha
cwtl
clc
outsb
repz
out
loopne
cs
add
mov
out
add
daa
std
dec
and
add
pop
or
lds
push
adc
out
mov
mov
and
inc
lds
cld
jge
inc
enter
jg
push
in
cli
fldenv
mov
jecxz
sbb
inc
popf
mov
pop
mov
loop
dec
call
inc
sbb
cmp
mov
cmc
fiadds
push
pop
pop
mov
jae
or
scas
pop
mov
mov
xlat
lret
jg
xchg
or
adc
mov
dec
inc
repz
ficompl
mov
jecxz
mov
xlat
out
hlt
cmp
inc
push
fdivl
sbb
pop
pop
adc
and
or
rcl
xor
mov
mov
das
dec
in
popf
aas
int
sbb
cmp
movsb
dec
xchg
fwait
test
sbb
adcl
adc
pop
add
lods
rcrl
scas
scas
shrl
cli
es
pop
repz
xor
jne
pop
mov
sub
lods
addr16
in
pop
sub
lods
mov
or
or
scas
rorl
cwtl
xor
cld
pop
push
je
push
xor
cmp
sti
out
dec
inc
inc
dec
and
in
clc
fdivrl
sbb
repnz
mov
inc
jo
addr16
xor
scas
pop
mov
mov
jns
push
sbb
or
push
dec
jl
sub
lock
pop
sub
mov
pusha
movsb
adc
dec
loop
outsb
cmp
dec
jne
push
out
mulps
shl
data16
jmp
aaa
scas
pop
mov
adc
adc
iret
sub
mov
jl
lods
mov
fisttpll
dec
mov
fnstenv
mov
ret
test
mov
dec
addr16
sub
imul
jge
aad
test
dec
or
fsubr
movsl
test
rclb
or
lret
test
test
scas
or
stos
xchg
jmp
mov
call
jl
sub
pusha
and
inc
mov
or
pusha
cmp
mov
jp
xchg
insl
out
xchg
xor
shrb
dec
ret
mov
jecxz
push
hlt
jbe
mov
adcb
lcall
cltd
repnz
test
cld
pushf
fistpl
xor
rcrl
sub
sti
iret
data16
pop
and
bswap
std
in
insl
xlat
xchg
orb
inc
and
fisubs
sbb
xor
int
stos
or
pop
aam
adc
dec
shlb
pop
dec
mov
ss
stos
inc
mov
adcb
lods
cli
sub
sahf
inc
sar
mov
gs
cmp
pushf
test
iret
dec
mov
loopne
lret
faddl
xor
je
shlb
rorl
insb
dec
adc
push
in
xchg
dec
iret
jp
inc
fucomp
adc
inc
adc
jge
mov
cmp
mov
pop
nop
stos
stos
lret
mov
lods
adc
mov
sbb
sbbl
mov
mov
insl
xchg
fcompl
or
iret
loope
ffree
sub
jo
repz
insl
dec
mov
pop
push
sbb
xchg
jb
stos
cli
xor
out
fsts
sub
repnz
adc
jnp
adc
xor
mov
lahf
popa
mov
lods
xchg
and
jns
sub
pushf
jns
dec
sbb
lcall
dec
cmp
test
adc
inc
cmc
pop
cmp
mov
pop
setp
cli
sub
xor
and
adc
jnp
loopne
dec
loopne
shl
lea
xchg
inc
jge
test
insl
mov
mov
xchg
dec
out
cld
scas
roll
and
cwtl
test
fldenv
pop
push
mov
push
clc
cmp
and
ret
rolb
fsubr
outsb
subl
dec
and
test
sbb
xor
cmc
dec
ljmp
imul
cs
add
or
addr16
roll
pusha
std
pop
sub
ret
fildll
lcall
fldcw
pop
in
jb
mov
pop
outsb
testl
or
cmp
add
std
xchg
in
pop
movb
push
shll
inc
jno
mov
jle
out
inc
inc
je
sahf
xor
xchg
or
fsubrl
hlt
mov
sub
mov
outsl
sub
mov
mov
xchg
cmpsl
outsl
test
dec
in
iret
xor
in
xlat
and
js
scas
loopne
jbe
sbb
and
shl
movsb
push
pop
xor
jge
js
xchg
mov
mov
ja
xchg
aad
jg
shll
ret
pop
ja
cmpsb
push
and
nop
xchg
dec
in
popf
push
push
cmpsl
jmp
cmpsl
pop
pop
adc
or
ret
mov
int3
pusha
fcomps
idiv
mov
adc
cmp
inc
cwtl
xchg
and
sbb
in
fistpl
push
sbb
mov
cmp
rol
adc
inc
push
pop
push
in
inc
xchg
adc
aas
hlt
sbb
push
bnd
add
ret
jns
or
in
cmc
loop
pusha
in
hlt
scas
jo
and
xor
loope
add
sub
dec
in
jo
adc
xchg
call
xlat
jge
cmp
jle
xchg
mov
push
adc
push
xor
dec
pcmpeqw
aad
outsb
fsub
mov
mov
data16
sub
dec
sbb
add
jl
or
xor
pop
rclb
cmp
jp
imul
mov
jl
cmc
jbe
xchg
rcl
lret
shlb
xchg
scas
sbbb
loopne
es
mov
and
in
sub
dec
cmp
mov
loop
pop
mov
lcall
and
movsb
xchg
insl
mov
mov
cltd
bound
push
cmpsb
adc
xor
jnp
daa
xchg
mov
js
sbb
push
scas
and
mov
in
sbb
mov
sbb
mov
int
lea
hlt
pusha
pop
add
sbb
pop
sbb
and
push
or
test
lods
pop
add
xchg
scas
jecxz
dec
movsb
adc
jmp
gs
xor
jl
add
jge
and
scas
rcrl
mov
and
cs
fs
dec
imul
add
mov
popa
in
jbe
inc
push
and
pop
loop
jecxz
lea
push
jecxz
mov
lods
jno
or
pusha
dec
lahf
movb
mov
mov
repnz
inc
ss
jb
sub
in
lret
adc
mov
sub
mov
and
icebp
subl
add
icebp
lahf
cmpsl
cmpb
testl
jno
and
mov
mov
pop
pushf
inc
fwait
push
bound
or
js
dec
imul
pop
mov
pop
mov
xor
call
je
outsb
leave
and
xor
int3
test
pushf
push
pop
sbb
inc
mov
rorb
stc
lcall
sub
mov
bound
mov
mov
aad
push
cmc
dec
mov
push
movsb
add
es
call
push
lret
xlat
cmc
cs
in
incl
mov
mov
mov
lahf
ja
jns
xor
rcl
or
mov
xchg
mov
dec
icebp
pop
movsb
jns
push
push
sub
clc
cmp
iret
push
lea
sbb
pop
jl
test
out
sub
cs
rolb
inc
shlb
and
mov
dec
sbb
dec
push
ds
rcll
das
arpl
nop
pop
sahf
jb
push
sbb
jl
xlat
dec
push
movl
jo
popf
mov
aam
and
stos
and
and
fs
fimull
data16
and
pop
data16
mov
fmuls
dec
lret
popf
sarl
push
cmovge
add
fstpl
cmp
je
shll
add
mov
pop
add
cmp
dec
xor
lcall
cwtl
cmp
inc
rcrb
xchg
std
cmp
adc
into
pop
test
clc
push
lahf
dec
cmc
sub
inc
adc
jnp
imul
je
or
xor
and
les
mov
dec
xchg
pop
dec
mov
sarb
pusha
mov
sub
test
sarb
dec
pusha
fucomi
xchg
fistps
mov
or
mov
push
mov
stc
pushf
popf
pop
push
xor
xchg
sbb
pop
adc
add
push
mov
xchg
test
cmp
je
lcall
out
jg
jmp
inc
pop
ja
rclb
push
dec
repnz
dec
cmpl
inc
fstl
add
pop
xchg
sub
stos
mov
daa
xorl
xchg
popl
data16
inc
xor
popa
in
int
insw
jmp
pop
xchg
stc
andb
mov
cmp
insl
mov
push
idivb
outsb
icebp
daa
jns
inc
mov
sbb
xor
jle
or
mov
inc
test
in
adc
ficomps
fstpl
data16
dec
inc
aaa
inc
push
leave
in
rorl
aad
pop
push
test
out
xchg
out
mov
in
jmp
dec
fsubs
pop
rorl
hlt
loop
pop
and
aas
mov
mov
mov
dec
rclb
lods
sub
arpl
outsl
cmp
xchg
arpl
lods
call
inc
adc
inc
arpl
or
in
leave
testl
jg
subb
cli
adc
mov
ret
stos
jno
int3
mov
das
aaa
mov
fistps
push
pop
ret
cld
push
movsb
js
lcall
add
push
fwait
push
sti
or
movsb
aam
outsb
xor
addr16
jae
pop
xchg
fbld
addb
std
xor
inc
fwait
xor
xlat
jg
adc
idivb
or
push
pushf
cwtl
bound
lods
cmp
push
or
mov
imul
sbb
xor
aaa
adc
adc
fildll
lods
das
je
mov
or
lret
scas
cwtl
cmp
lret
loopne
lret
stos
jle
jle
in
pop
insb
pusha
xchg
mov
xor
outsb
pop
aam
sub
lcall
xor
adc
xor
push
jge
icebp
pop
int3
in
aad
les
cs
pop
pop
cmpsb
push
pop
cmp
xchg
rcrl
push
and
adc
mov
xchg
daa
cs
rolb
test
inc
out
neg
lods
leave
stc
mov
test
hlt
addl
push
mov
xchg
inc
cmpsb
inc
cmp
inc
push
hlt
cmpsb
jge
test
lds
jle
loopne
pop
pop
movsl
imul
xlat
jge
rcll
jae
or
cwtl
push
adc
lret
and
popf
xor
int3
arpl
cmp
push
jae
scas
sub
into
mov
and
jnp
in
jecxz
pop
sbb
push
sbb
adc
out
inc
ja
or
fisubs
jo
lods
rcll
xor
lahf
add
inc
push
les
daa
outsb
jle
enter
scas
call
push
inc
cmpsb
pop
mov
out
cmp
fucomi
loope
jbe
xlat
push
mov
sub
adc
xor
psubw
jno
cltd
add
cmc
push
mov
mov
sub
stos
scas
pop
or
jle
cmpsb
mov
sub
aas
adc
or
cmp
adc
sub
outsb
addr16
cmp
mov
lret
adc
cmc
sbb
sbb
jb
cmc
fldl
stc
push
sti
push
les
mov
aas
cli
dec
pop
jns
sub
dec
ret
or
in
pop
inc
repnz
inc
mov
ret
cmp
insl
sbb
int
and
mov
mov
shrl
aad
inc
repnz
test
and
or
mov
stc
add
jno
mov
out
out
inc
and
mulb
pop
push
jg
imul
aad
xor
outsb
xor
mov
xor
popa
cmp
mov
dec
lcall
outsb
sub
adc
movsb
ds
out
mov
lret
sbb
push
ja
mov
cmp
xor
inc
push
jmp
push
out
fmulp
fisubrs
xor
pop
or
popa
int
dec
mov
dec
negb
xor
ds
inc
xchg
cmp
mov
mov
pop
rcrb
daa
lcall
sar
ds
repnz
adc
mov
jge
dec
pusha
sti
add
mov
aas
mov
test
jae
adc
xchg
aad
xchg
push
mov
lds
pop
xchg
pop
movsb
cmpsb
xchg
push
mov
enter
xchg
xchg
lock
or
jne
or
mov
std
lret
cld
push
mov
add
fstps
adc
mov
fdivrl
ja
int
xlat
lret
outsl
inc
xchg
lahf
mov
mov
push
pop
add
cmpb
mov
jne
clc
and
call
jnp
add
lods
test
fwait
bound
jno
cmp
sbb
and
mov
insl
lods
mov
and
out
sbb
frstor
sub
dec
adc
js
pop
mov
insl
jl
jmp
cmpl
jmp
push
imul
dec
je
push
orl
adc
xchg
scas
dec
test
frstor
aad
inc
push
sbb
repz
cwtl
xchg
mov
test
stos
sbb
sti
jecxz
mov
sbb
pusha
scas
xor
pop
inc
mov
inc
fcoms
push
test
xchg
gs
sub
int3
mov
stos
push
or
add
mov
xchg
cmp
mov
or
cltd
sbb
push
stc
imul
jnp
mov
push
push
into
jns
stos
test
xlat
mov
faddp
push
mov
ja
cltd
or
xchg
mov
push
or
pop
xchg
es
push
aaa
push
icebp
push
fbstp
xchg
dec
jae
jp
mov
inc
sub
std
mov
sbb
mov
orb
mov
dec
pushf
mov
dec
add
xor
cmp
test
and
div
sbb
es
fnstcw
inc
popf
std
jno
jne
jbe
insl
cmp
pop
xchg
loop
inc
loopne
mov
les
sbbl
dec
ss
stos
mov
lret
mov
int
bound
insl
xorb
pop
pop
fisubrl
adc
in
jp
sub
jno
stc
fiaddl
ret
fnstsw
sbb
xchg
jne
inc
out
dec
mov
or
je
add
mov
jns
cmp
mov
pushf
cmp
js
jp
jge
push
inc
and
sbb
adc
cbtw
popf
cs
in
sub
push
sahf
adc
lret
cmp
push
in
std
cltd
sub
pop
pop
sbb
add
fistpll
cmp
sti
mov
das
loope
aas
rcll
nop
popf
fwait
cmp
xchg
add
movsl
pop
sbbl
loopne
mov
add
inc
sbb
lea
mov
or
mov
push
loopne,pt
leave
shrl
add
test
lahf
xor
mov
hlt
aam
out
mov
jle
push
push
add
loop
out
mov
in
push
mov
pop
add
sub
sbb
xor
push
je
mov
adc
mov
lret
mov
and
xorb
mov
jmp
push
dec
and
adc
push
imul
imull
sbb
and
jmp
cmp
int3
aas
popa
cmp
aas
cmc
mov
out
sbb
mov
popf
leave
rorl
jmp
or
sub
sub
mov
sbb
popa
adc
stos
jns
sub
push
sbb
inc
loop
xchg
pop
loop
int
lahf
cmp
fidivrs
testb
mov
outsl
pop
pop
dec
jnp
cli
sub
das
cwtl
loop
mov
add
mov
sbb
push
xor
rcrl
mov
push
roll
mov
xchg
popf
data16
popf
inc
cmpl
gs
pushf
xor
and
pushf
sbb
adc
mov
and
sbbb
and
mov
dec
inc
pusha
cmp
mov
dec
sahf
scas
sbbb
and
inc
push
jmp
or
pop
lods
inc
push
sub
sbb
enter
test
xchg
cmpsb
mov
inc
xchg
push
jae
mov
push
imul
cld
add
in
mov
test
iret
lock
mov
mov
add
xor
sbb
test
imul
loop
or
fstp
aad
or
pop
inc
cmpsl
lods
push
je
cwtl
and
jae
adc
scas
mov
sub
adc
stos
ror
hlt
inc
test
arpl
cmp
or
fwait
push
sub
add
lret
pop
mov
mov
push
cmp
dec
roll
cli
rcrl
sub
leave
lcall
xlat
or
insb
loope
mov
jg
enter
add
cli
clc
sbb
and
rorl
adc
in
xchg
lods
add
cmp
jl
dec
jmp
adc
arpl
into
dec
pop
push
cli
cld
cmp
mov
lods
pop
dec
enter
xor
mov
sub
mov
and
push
adc
addr16
in
push
ret
xor
push
mov
cmc
jo
pop
xor
sbb
inc
mov
inc
push
xchg
jne
call
hlt
or
mov
lret
pop
int
mov
mov
repz
add
bound
mov
sbb
jbe
fstp
xchg
sarb
push
iret
push
add
push
sbb
and
xor
aam
mov
mov
stc
out
mov
jge
cltd
dec
ficoml
dec
lmsw
outsl
and
jnp
dec
mov
mov
je
xchg
call
subl
jmp
sbb
cmp
sub
test
mov
xor
mov
pop
ret
test
mov
movsl
fsubl
pushf
mov
and
mov
and
xchg
xorl
sbb
test
or
or
and
int
xor
cmp
xor
movsl
bound
cmp
sti
add
add
mov
icebp
ror
and
and
sahf
pusha
xor
test
sub
std
dec
sub
insb
dec
inc
mov
imul
clc
xchg
jae
pop
dec
xor
pop
push
push
stos
mov
sti
ret
sti
imul
sub
jecxz
mull
in
data16
jae
aaa
repz
xor
daa
lea
arpl
jge
dec
faddp
lods
sub
xor
frstor
cmp
pop
inc
pop
xor
add
xor
in
pop
inc
cmp
scas
cmp
outsb
outsb
sahf
xor
lea
jl
jl
sub
addr16
sbb
mov
shrl
call
daa
dec
sub
fdivs
shlb
or
stos
andl
iret
cli
stos
divb
mov
mov
orl
mov
fdivp
pop
mov
lret
add
or
sub
test
sub
mov
and
add
jle
dec
rol
ror
bound
inc
cmovs
push
push
inc
jmp
xchg
subl
or
dec
inc
bound
cli
dec
loop
mov
in
or
push
sbb
jns
rorb
cmp
cmp
lea
jp
imul
into
xchg
mov
lret
mov
dec
dec
loop
mov
or
mov
and
aam
jbe
inc
cmc
loope
dec
sbb
testl
xchg
jb
lock
and
mov
in
sub
mov
mov
test
cmpsl
push
aaa
pop
xor
daa
inc
cwtl
in
fcompl
mov
push
ljmp
inc
xor
je
sub
loope
adc
loopne
movsb
xorb
or
lods
fiaddl
aaa
sbb
mov
test
insb
inc
mov
popa
outsl
adc
test
addr16
mov
mov
push
xchg
xchg
sub
dec
insl
sub
inc
and
cmp
lea
xor
setb
arpl
mov
popf
out
xchg
aad
mov
cmc
int3
test
cmpl
cmp
sahf
test
or
mov
out
jge
test
cmpl
shll
cmp
aas
add
int3
inc
jo
and
imul
test
repnz
jae
dec
inc
pop
scas
or
loop
loope
inc
xor
sbb
dec
pop
pop
iret
sbbl
jns
daa
push
sub
push
inc
cmp
sti
cmp
or
dec
fstpl
outsl
leave
sbb
movsl
add
testl
or
cli
add
inc
sub
fiaddl
pusha
or
add
sahf
stos
stos
dec
ror
inc
mov
icebp
arpl
inc
and
clc
cltd
sbb
cmp
ljmp
stc
xor
into
adc
dec
out
fidivrs
jge
mov
cld
jle
pop
and
jo
mov
iret
or
lea
add
jns
mov
aaa
fdiv
mov
std
pop
xchg
inc
mov
add
inc
xchg
stos
ljmp
xor
dec
fmulp
cltd
ljmp
push
mov
shlb
cwtl
ja
popa
push
nop
mov
cmpsb
outsl
sbb
lock
fst
jns
dec
fiadds
add
mov
mov
adc
sub
out
adc
pop
fsubs
insb
push
repz
cwtl
faddp
mov
push
xchg
jle
xor
prefetch
or
push
cmp
push
dec
and
nop
clc
mov
loopne
jle
adc
adc
jp
mov
mov
sbb
xor
sbb
push
pop
out
jle
xchg
call
jl
ds
dec
gs
xchg
xchg
xchg
lret
ficoms
in
cwtl
and
js
aaa
je
xchg
int3
scas
push
orb
and
xor
xchg
dec
xor
mov
mov
adc
and
push
call
xchg
scas
cltd
nop
inc
xchg
and
adc
and
icebp
jl
movsl
sub
jl
mov
mov
mov
sub
xchg
pop
cli
in
mov
scas
push
sbb
jle
daa
mov
lret
icebp
adc
fsub
rcrl
adc
jp
nop
adc
add
int3
sub
outsl
add
pushf
int
xor
sbb
mov
cld
mov
in
les
mov
jl
data16
push
jl
pop
mov
fcmovnu
rcrb
cmpsb
pop
js
pop
push
adc
gs
xlat
lret
fistpl
lahf
fwait
push
mov
sahf
sarl
pop
testb
pop
jge
mov
faddl
mov
mov
xchg
enter
js
pop
xor
nop
jmp
sbb
ja
or
test
pop
mov
leave
int
leave
add
insb
int3
int
mov
out
cld
push
and
out
adc
fidivs
cmp
xor
cmp
pop
fwait
stos
inc
add
insl
sbb
fwait
mov
or
inc
or
or
enter
mov
clc
loop
scas
int
xchg
mov
lods
call
clc
int3
mov
shrl
sbb
in
pop
jbe
inc
mov
sbb
aam
movsl
fsubrs
in
in
jmp
pop
sbb
sub
loop
popa
mov
repz
mov
call
xchg
adcl
rclb
fdivrs
dec
rcll
jnp
mov
jmp
sub
pop
icebp
or
jle
idivl
lock
push
dec
xchg
pop
aad
loopne
cltd
icebp
jae
shl
stos
adc
pop
adc
jle
loop
into
xchg
les
mov
jl
sub
loope
mov
jle
pop
jbe
mov
xchg
sti
sub
imul
xorl
aaa
repz
add
je
mov
and
ds
dec
dec
mov
jge
das
push
jbe
and
dec
scas
sub
push
inc
jae
xor
mov
xor
sbb
mov
jnp
fists
fmuls
fst
cmp
pop
add
jp
sbb
in
and
out
enter
cmpl
inc
pop
inc
push
dec
int3
lock
fadds
adc
mov
push
push
sbbb
ljmp
dec
gs
fistps
stos
mov
cld
xchg
cmp
jnp
rorl
lea
xchg
imul
in
nop
psubb
pop
lock
add
stos
shlb
imul
xchg
fists
pusha
stos
out
and
mov
xchg
cmp
pushf
adc
jae
and
pop
out
cltd
jb
inc
stos
or
xchg
push
call
xchg
mov
lcall
and
fnstcw
and
stc
clc
mov
cmp
mov
jmp
pop
sbb
lea
adc
mov
int
and
es
xor
jne
fsin
int3
push
jns
out
roll
and
negl
cltd
sub
stc
fisubrl
aas
outsb
loopne
or
or
dec
sub
xor
ljmp
jp
movsb
mov
in
jmp
cwtl
mov
mov
fldt
shrl
mov
daa
sti
out
xchg
mov
jae
dec
xor
mov
dec
rcll
mov
icebp
jns
lods
lret
fwait
int3
jmp
insb
pushf
push
push
xchg
ficomps
push
push
cmpsb
sbb
jge
pop
arpl
mov
cmp
fimuls
sub
loope
jb
jmp
and
stos
jbe
cmp
mov
mov
adcb
andl
hlt
andb
mov
mov
mov
pop
sti
rorb
xor
mov
sbb
push
js
aaa
mov
mov
lret
inc
daa
aam
add
inc
mov
jecxz
mov
jb
cmp
or
push
inc
xor
add
cwtl
lea
fld
jnp
or
jg
xchg
cltd
xchg
dec
sub
jmp
push
loopne
mov
add
jge
pslld
or
add
cmp
cld
push
lock
stos
mov
jge
add
mov
and
xchg
stc
xchg
xor
arpl
jnp
xchg
data16
arpl
pop
or
outsb
push
push
and
aaa
xor
push
cs
cltd
push
jl
js
sbb
add
fs
sbb
inc
push
or
push
push
nop
cs
jmp
insl
repz
jb
sbb
xor
cli
scas
dec
cmpsb
sbb
icebp
testl
daa
shlb
lods
jmp
pop
cmpsl
jp
add
jecxz
lock
nop
adc
ret
dec
arpl
or
sbb
add
pusha
outsl
data16
sarb
fstl
push
jb
xor
mov
push
cmp
mov
xlat
dec
stos
add
cmp
or
js
xchg
xor
outsl
xchg
and
in
sti
bnd
in
stc
scas
js
cmpsl
push
sub
sub
dec
lahf
lret
subl
mov
pop
nop
push
jge
jl
loope
inc
adc
aam
mov
mov
out
jle
lds
in
lods
fisttpl
dec
push
sub
ljmp
xchg
imul
mov
in
pop
sahf
cwtl
test
daa
jp
or
xchg
rol
cmpsl
dec
xchg
fisttps
inc
out
repz
xchg
ds
ja
pop
outsb
pop
scas
imul
dec
mov
jmp
mov
mov
filds
xor
mov
aad
pusha
mov
sub
add
andb
jp
pop
stos
loopne
add
and
das
imul
roll
mov
aam
out
lcall
jne
jns
dec
call
inc
xchg
jnp
sbb
push
dec
mov
test
mov
or
mov
mov
movsb
sub
movsb
inc
pop
pop
loope
les
lahf
testl
cmc
mov
or
imull
lahf
mov
adc
xorb
outsl
mov
subb
push
push
jge
sub
out
dec
outsl
lds
dec
cwtl
push
push
mov
jno
mov
pop
cltd
push
imul
mov
adc
es
push
cmpsb
xlat
insl
icebp
sbb
test
mov
and
sub
fdivs
jo
inc
mov
mov
push
jle
mov
ljmp
cmp
loope
push
push
mov
fidivrs
or
fildl
pop
mov
xor
mov
out
add
jge
add
lds
inc
mov
push
dec
je
pop
xor
mov
pop
fstpt
mov
in
sbb
push
or
jl
in
lret
pop
fisubl
sar
out
jecxz
jns
lods
call
jb
cmp
push
xchg
outsl
ret
stc
or
jnp
lahf
dec
add
fcomps
call
mov
add
aad
cwtl
sub
out
mov
mov
out
cwtl
dec
mov
dec
mov
cltd
stos
aaa
xchg
insl
pop
xor
js
lahf
cmp
enter
sbb
les
inc
sbb
xchg
sti
and
sarb
mov
fcompl
dec
ficompl
loopne
stc
xlat
mov
faddp
sub
dec
adc
ss
loopne
jge
push
pop
mov
fldt
aas
cmpsb
stos
arpl
outsb
les
insb
mov
jb
pop
mov
cmp
xchg
mov
xchg
imul
or
mov
fisttpll
mov
jno
sbb
sub
pusha
jge
js
dec
ret
mov
pop
sub
lods
jp
fsubl
cwtl
andl
faddl
aam
ds
lock
dec
fs
stos
adc
sti
addr16
out
push
and
call
mov
inc
adc
or
pop
jg
push
mov
int
add
sub
in
pop
bound
push
cmp
jns
mov
js
shlb
xchg
sub
out
scas
mov
iret
arpl
jg
imul
repz
mov
sti
mov
fstl
subl
xor
pop
cmpsl
and
call
lret
add
mov
adc
cmp
jle
lods
and
jp
inc
or
pop
push
pop
jne
mov
push
or
pop
adc
repnz
hlt
orl
fnsave
aas
jae
sti
mov
mov
xchg
xchg
rolb
sbb
inc
aad
in
add
cmpsl
pop
sub
mov
mov
hlt
cmp
jbe
fidivrl
pop
clc
and
xor
jb
xchg
sub
mov
push
inc
fs
pop
pop
addl
or
adc
sub
mov
mov
fwait
xor
fwait
rclb
jae
aam
mov
pusha
repnz
xchg
pop
cli
int
loopne
pop
mov
pusha
shll
add
jne
cmp
movsl
les
push
jb
pushf
aam
push
push
clc
mov
sahf
and
lods
shlb
dec
sub
mov
imul
movb
aaa
cmpsl
dec
push
rcrl
xor
ss
movsb
and
or
adc
cmp
insb
jl
mov
inc
pop
xor
mov
shlb
mov
std
dec
mov
pusha
or
mov
mov
mov
das
mov
fs
loope
sbb
insl
shll
xchg
orl
cwtl
push
cmp
push
or
arpl
jp
cmp
mov
mov
xchg
xchg
sub
cmp
push
cmp
lahf
lea
mov
jne
pop
xor
lds
push
lret
sub
mov
jl
inc
and
or
mov
or
es
xchg
in
data16
mov
or
divps
leave
xchg
adc
outsl
fisubs
adc
mov
out
jnp
fwait
cmp
inc
in
mov
mov
cmp
jne
divl
popa
jg
dec
cld
fistpll
insl
inc
lret
xchg
add
arpl
insb
or
and
icebp
in
test
mov
mov
sbb
test
fists
filds
or
shlb
out
pop
push
bound
push
cmp
outsl
inc
jl
xlat
mov
sti
into
leave
dec
add
jmp
loope
bndldx
mov
pop
pop
lcall
xchg
cmp
mov
adc
into
aam
pop
inc
mov
inc
add
and
mov
aaa
lock
adc
sub
testb
jae
and
mov
cmp
adc
or
fdivl
xchg
or
cli
xchg
mov
cld
nop
pop
push
cs
push
out
or
imul
inc
add
into
dec
or
mov
fistl
and
test
mov
test
xchg
push
dec
xor
or
jnp
hlt
lods
xlat
jp
add
call
jnp
arpl
inc
and
lock
ret
repnz
ret
cmp
mov
dec
jo
cmp
ds
push
push
cmp
and
insb
mov
pusha
imul
fdivrl
mov
test
imul
adc
aad
jecxz,pn
jb
pop
iret
insb
push
inc
out
test
ja
sub
mul
mov
mov
shll
jo
or
sbb
out
push
mov
mov
roll
mov
dec
push
or
ret
xchg
scas
mov
sahf
cmpsl
adcb
mov
in
sbb
cmpsl
push
add
adc
daa
push
data16
push
pop
aad
loope
cmp
outsb
push
mov
gs
or
outsl
lods
ljmp
inc
idivb
xchg
pop
inc
pop
jne
add
mov
das
and
shll
pop
jb
jge
pop
std
and
aaa
mov
add
lods
push
inc
jbe
xchg
out
daa
cmp
pop
popa
adc
popf
insb
loop
mov
lret
test
sbb
negl
mov
cmp
bound
icebp
scas
xchg
mov
jo
mov
imull
fisubl
pop
pop
sub
dec
sbb
out
or
fxam
aaa
aam
pop
or
adc
loopne
cmc
mov
rcrb
pop
call
ja
jmp
pop
mov
test
sbb
notb
adc
inc
mov
adc
inc
mov
sub
out
dec
mov
jl
sbb
out
scas
xchg
pusha
arpl
lret
add
sbb
and
adc
adc
out
cwtl
pop
std
imul
into
and
std
mov
fists
push
mov
mov
mov
int
cli
pop
outsl
loopne
xchg
fmulp
sub
and
dec
mov
jnp
aaa
sub
jnp
ljmp
jne
mov
cmp
adc
mov
adc
pop
shll
cmp
mov
fcomps
mov
data16
adc
cmp
fdivrl
adc
lret
ljmp
pop
imul
sqrtps
push
sub
adc
adc
and
mov
nop
inc
or
mov
add
loope
rorb
into
shrb
fcomps
jb
pop
pop
push
jne
pop
add
push
xor
mov
xchg
xchg
jne
mov
xchg
or
cmpsb
jbe
jne
in
imul
mov
test
adc
add
jl
pop
jmp
push
ret
xor
insb
in
cli
or
adc
mov
lods
addr16
sbb
xchg
cltd
aad
jbe
jae
daa
fbstp
imul
lods
pop
cs
in
sub
jmp
outsl
jecxz
sub
lods
sub
or
in
xchg
xchg
jae
cmp
mov
stos
shlb
or
je
sahf
mov
stos
fistps
inc
imul
adc
enter
jecxz
loopne,pt
xchg
sub
bnd
roll
cld
mov
and
adc
sti
push
push
sbb
push
jge
sub
or
lahf
jp
sbb
pop
fisubs
je
dec
test
jo
fwait
loop
mov
xor
imul
das
mov
cmpsb
dec
push
sub
hlt
xchg
pop
add
push
cmp
mov
jge
or
mov
lods
test
sbb
mov
sbb
sbb
loopne
sub
test
leave
sub
out
loop
xor
mov
scas
and
mov
adcb
mov
xchg
call
sub
fxch
arpl
fisttpl
js
mov
clc
pop
shrl
jl
cmc
cli
enter
xor
shll
stc
xlat
rorb
add
sahf
and
aas
stos
mov
xor
dec
sub
xor
roll
xor
in
mov
mov
ret
pop
loop
inc
xlat
orb
sub
test
mov
inc
adc
sub
xchg
int3
adc
mov
stos
mov
incl
xchg
fstpt
jno
xor
adc
add
rorl
scas
mov
add
fldcw
shrl
mov
jp
hlt
jae
cmp
iret
stos
mov
jnp
mov
push
int3
fstpt
leave
add
pop
jmp
mov
jnp
xchg
test
mov
sbb
adc
mov
xor
or
cmp
fcoms
movsb
adc
adc
mov
cld
mov
adcl
cmp
aam
and
sti
sub
sub
dec
or
xor
scas
test
cmp
xchg
xchg
les
pusha
jo
jns
cmp
lods
sbb
mov
aaa
or
jo
icebp
cmpsl
mov
aaa
aam
addr16
mov
adc
fistpl
mov
pop
push
jae
jmp
xchg
out
pop
inc
inc
adc
sbb
sbb
add
adc
in
mov
mov
pop
cmp
sbb
adc
lock
lret
jno
out
adc
add
lea
sti
or
pusha
imul
mov
jg
out
pop
ss
pop
lret
jl
push
je
xor
dec
jb
or
push
mov
fisubs
movsb
loope
xchg
push
push
lret
jbe
cwtl
push
cwtl
lret
repnz
out
dec
ds
imulb
jb
push
jno
aam
loop
das
test
insl
pop
mov
outsb
fldt
jne
scas
or
shrb
adc
sub
loopne
sar
add
repnz
cmp
jno
jno
in
xor
js
inc
push
popa
rol
xor
repnz
popa
das
pop
pop
leave
in
cmpsl
iret
dec
das
jae
jns
push
sub
jne
outsl
fsubl
inc
sub
insb
mov
mov
add
leave
xlat
nop
cmpsl
sbb
lds
test
jecxz
mov
bound
ret
push
push
add
into
loope
add
out
inc
pop
mov
lods
pop
rclb
rcrb
mov
fistl
adcl
sbb
jge
enter
int3
and
ds
incb
push
pushf
test
lea
outsl
dec
add
mov
mov
xchg
jmp
testb
xchg
inc
pop
push
rcll
and
adc
imul
inc
mov
bound
out
fildll
lock
sub
out
popa
jo
cltd
pop
sbb
mov
cmp
add
ljmp
xchg
lods
idivb
cmp
and
test
idiv
jg
loopw
insb
jnp
movsl
out
sub
xor
jg
cmp
ja
in
xchg
cmpsb
adc
mov
outsl
arpl
or
inc
test
xchg
xchg
or
add
stos
adc
xor
jns
loop
aaa
push
pop
add
roll
aad
adc
data16
lret
mov
sarb
push
add
push
ret
mov
lcall
scas
lret
pop
dec
aas
sub
aam
jae
inc
repz
fistl
loopne
mov
cmp
testb
das
xor
or
test
mov
jmp
adc
movsb
adc
out
xor
push
pop
data16
stos
pop
mov
fimuls
cmpl
xor
in
mov
outsl
jbe
dec
push
sbbb
inc
scas
fwait
push
adc
push
idivb
push
xor
push
push
int3
adc
xchg
cltd
test
nop
add
sbb
jne
add
loope
test
test
push
mov
push
jno
push
xchg
xor
fcoml
data16
icebp
les
stc
ss
sbb
imul
icebp
fidivrs
negl
sub
fstps
xorl
adc
push
jbe
pushl
adcl
enter
or
mov
iret
pop
jnp
fs
insb
rdtsc
shl
sub
fucomi
xor
xor
shr
xchg
fs
ret
sahf
cmp
in
add
rclb
outsb
data16
test
adc
xchg
pushf
movsl
xor
lret
mov
xchg
bound
pop
jl
sti
or
roll
push
jnp,pt
into
in
add
ds
xchg
aaa
fldt
insb
mov
or
mov
jne
jno
notb
mov
test
in
popf
cmpl
cld
add
shrl
out
stos
pop
pop
out
xchg
pop
pop
insl
popa
dec
push
outsb
in
cmpsb
repz
jge
mov
push
jo
lods
dec
lods
and
out
jne
sub
push
xchg
fcoms
in
push
and
xor
clc
push
adc
jnp
sbb
gs
mov
adc
aas
dec
stos
shl
dec
cltd
lret
fwait
pop
addr16
lods
insb
mov
mov
or
int
fbld
sub
fiadds
sarb
dec
stc
xchg
dec
dec
xchg
jge
mov
jae
fwait
xchg
lds
push
push
jno
sbbl
push
hlt
data16
add
add
ljmp
clc
out
xchg
adc
js
cmpsl
push
insl
bound
fsqrt
sbb
adc
add
mov
nop
add
mov
jo
add
fs
xlat
jae
or
roll
pop
push
movsb
inc
scas
sub
jo
scas
imul
pop
and
and
inc
add
mov
push
outsl
or
inc
mov
sti
xor
lret
sbb
mov
stc
inc
jae
mov
ficoms
test
inc
lret
sbb
mov
imull
inc
adc
push
shll
sbb
adc
xlat
push
idivb
dec
int3
fsubr
inc
pop
bound
mov
pushf
inc
mov
xchg
addr16
cmp
or
sbb
inc
cmp
cmp
add
rorb
sbb
in
inc
ss
cmp
inc
and
fimull
addl
pop
mov
pop
mov
stc
lret
mov
pop
sbb
xchg
mov
andb
fildll
push
jnp
js
mov
push
mov
dec
or
push
iret
loope
loop
shlb
pop
clc
pop
add
testb
rolb
jmp
out
mov
xorb
cmpsl
rorl
pandn
jo
or
jo
fdivl
jg
stos
scas
or
out
mov
pushf
and
jecxz
cwtl
icebp
fsubrs
jno
mov
and
xor
loopne
cmp
movsl
arpl
pop
insl
and
in
xor
out
mov
mov
jecxz
xorb
add
sub
iret
push
xlat
jge
loopne
lods
and
jge
leave
idivb
xor
out
pop
roll
mov
inc
loope
dec
dec
test
mov
and
jle
pop
jne
in
insb
out
push
lds
push
dec
call
jns
xor
ret
mov
pusha
js
or
jo
pop
xor
mov
mov
pop
push
jle
or
scas
outsl
outsb
cltd
adc
fistl
inc
shl
into
in
cmp
out
mov
push
insl
jg
inc
cmp
cmpsl
xchg
jmp
ret
mov
add
in
mov
push
insb
cmpsl
das
jbe
xor
out
fldt
push
push
sbb
push
pop
push
mov
test
or
insl
xchg
idivl
daa
out
outsl
lahf
lds
xchg
sub
fdivr
sub
mov
add
jmp
loope
addl
iret
subl
add
repnz
lret
sub
xor
jmp
es
jns
imul
sub
ret
icebp
xlat
pop
or
mov
dec
mov
stos
push
int
inc
fstl
xchg
insb
mov
imul
xchg
mov
jmp
pop
into
pop
das
popa
das
addr16
cmp
sbb
xchg
movsb
mov
adc
mov
enter
cs
jecxz
push
mov
sbb
adc
aam
cmp
mov
adc
mov
dec
lret
enter
push
push
sub
sbb
call
xlat
inc
mov
jecxz
inc
cmpsl
unpckhps
popa
xchg
cmp
enter
clc
xchg
mov
pop
mov
sub
scas
sti
lock
xchg
adc
add
or
lods
xor
add
and
fcompl
aad
dec
div
sahf
ljmp
jl
cmpsl
jnp
cmpsb
sub
lret
pop
call
pop
lock
aad
pushl
jge
lret
js
int
mov
fildll
mov
dec
xor
test
mov
mov
lcall
inc
push
xchg
mov
xchg
cwtl
sub
xor
cmp
lcall
adc
push
jns
popf
xlat
inc
inc
and
sub
pop
lret
cltd
and
in
push
ret
dec
scas
data16
mov
scas
adc
test
jns
add
pop
inc
icebp
sarl
sahf
and
addr16
faddl
push
xchg
cmp
shlb
inc
add
fldl
pop
jp
lret
push
jp
movsb
test
xchg
ljmp
mov
test
rcll
lret
popf
inc
outsw
dec
outsb
out
push
pop
leave
outsl
out
jg
inc
lea
cmc
sarl
in
fisubs
in
cmp
shlb
jle
and
push
ficoms
dec
xchg
fs
fidivl
jnp
data16
xlat
in
inc
push
jl
stos
inc
jmp
gs
push
lahf
xchg
dec
pop
stos
mov
xor
mov
cmp
cmp
cltd
xchg
scas
daa
push
and
jnp
push
sub
jp
test
in
xlat
mov
push
sbb
pop
inc
xor
cmp
mov
mov
cmc
aad
inc
mov
test
push
out
je
fildl
pop
or
cmp
adc
add
mov
xor
lahf
lret
loop
and
clc
and
test
insl
das
pop
jg
xor
mov
inc
je
popa
lock
pop
fsubl
adcl
push
arpl
lret
mov
add
xor
sub
push
dec
shll
je
shl
xlat
cmp
mov
push
and
mov
ljmp
mov
dec
mov
xlat
mov
shll
sbb
xor
inc
dec
out
roll
insl
and
outsb
xchg
bnd
lahf
push
fisubl
sarl
or
mov
cmp
mov
jns
ja
mov
lods
jp
cmp
repnz
adc
mov
mov
fisubrs
into
cmc
ret
dec
dec
hlt
fdivrs
bound
push
inc
outsb
xor
stos
xchg
repnz
test
lret
add
gs
sbb
mov
insb
stc
hlt
cwtl
mov
and
mov
add
mov
xchg
andb
xlat
pop
or
add
fwait
sbb
outsl
push
test
aad
test
dec
mov
inc
xor
decb
cmp
out
jl
jae
dec
ljmp
ds
insl
or
xchg
and
out
dec
sbb
or
pop
nop
stos
scas
push
pop
aas
icebp
lds
mov
frstor
mov
sub
orb
cld
cmp
outsb
ret
push
sbb
cmp
push
imul
nop
mov
cmc
adc
mov
sub
xor
scas
pop
aaa
insl
mov
pop
xchg
popa
cmpsb
lahf
in
pop
movsb
int
movsl
and
les
adc
cmp
xor
outsb
dec
cwtl
mov
xor
faddl
out
lods
push
mov
lods
adc
arpl
jecxz
or
adc
mov
xchg
or
lret
mov
add
ret
or
cmpsl
lret
dec
mov
icebp
dec
cmp
shrb
jecxz
jbe
pop
stos
or
fsubrs
and
and
xchg
daa
call
xchg
dec
push
cmp
addl
les
add
sbb
ljmp
push
mov
xchg
or
out
ljmp
sbb
pop
xor
mov
xchg
mov
ret
das
in
push
dec
fistpl
cmp
cmpsb
lods
pop
test
addb
popf
dec
mov
rorb
popf
lds
js
stc
sub
mov
sbb
stc
mov
push
pop
push
jp
rdmsr
cltd
dec
dec
jmp
push
adc
pop
push
pushf
xor
test
movsb
sub
ret
inc
dec
pop
push
jns
pop
mov
repnz
rorl
or
lods
dec
mov
cmp
scas
mov
pop
out
out
outsl
sub
dec
daa
fidivrl
int3
sbb
fistpll
jno
or
push
adc
pop
dec
sbb
popa
into
jecxz
hlt
dec
pop
xchg
lods
fistl
mov
pop
rcrb
jne
fxam
jbe,pn
imull
pop
mov
xor
mov
xor
add
sbb
add
repnz
jmp
sbb
xor
mov
aam
shrb
sub
dec
cmpsb
nop
sahf
sbb
jne
add
jmp
add
dec
sub
dec
test
fs
adc
lds
xorb
dec
test
pop
out
and
cmp
das
mov
int
mov
mov
jno
push
sub
inc
mov
add
xchg
push
fmull
xor
mov
sub
shrb
xchg
adcl
jge
mov
les
pusha
jg
sarl
subb
pop
dec
pusha
mov
wrmsr
shll
pop
rcrl
jae
stos
jle
mov
stc
xchg
sub
cmpsb
jg
into
or
les
cmp
dec
test
enter
pop
cmpl
pop
frstor
push
pop
push
cli
or
icebp
push
pop
cmp
mov
mov
jecxz
fcomp
mov
dec
mov
cmp
repz
pop
aaa
leave
or
sbb
pop
sbb
lds
adc
push
jne
loop
fimull
pop
pop
shrb
data16
lret
cld
hlt
jge
mov
push
and
dec
addr16
outsb
icebp
mov
jb
and
or
vunpcklps
das
into
scas
hlt
pop
int3
outsb
or
mov
shll
cmp
xor
loope
ret
push
pop
xchg
pop
sub
cmp
faddp
adc
stos
dec
dec
jg
mov
fyl2x
xchg
sti
pushf
adcl
mov
lret
jmp
pop
dec
stc
xor
adc
aaa
jno
mov
hlt
cmp
add
in
inc
insb
mov
sbb
mov
xchg
enter
inc
jno
pop
push
jns
je
or
sbb
pop
adc
mov
or
add
pop
cs
repz
movhps
arpl
or
inc
sub
daa
mov
popf
jp
aam
lods
insb
push
mov
arpl
addr16
adcl
arpl
dec
or
addr16
in
mov
xchg
dec
sarl
mov
cmpsb
mov
decb
mov
mov
loope
filds
dec
out
pop
mov
out
push
sbb
or
add
cmp
repz
pop
dec
test
cmp
std
loop
lds
push
jle
bound
enter
sub
pushf
cmp
cmp
xchg
imul
add
xchg
ljmp
scas
mov
fs
not
lock
and
mov
loopne
pusha
fcomip
adc
push
mov
arpl
test
push
fiadds
scas
in
cs
jg
dec
scas
test
ret
pop
xor
shrl
out
scas
inc
addb
rclb
xor
and
xchg
jns
or
xchg
dec
jns
ss
shr
mov
jno
rcrb
dec
in
and
xchg
inc
xchg
fwait
mov
sbb
add
in
cli
leave
ljmp
fstp
adc
cmpsb
lock
mov
fstpl
push
push
lret
add
loop
fsubl
call
sarl
ss
xor
jecxz
movsb
sti
sub
mov
mov
out
cwtl
cmpsb
roll
mov
ss
cmp
movsb
push
sub
dec
inc
pop
mov
cs
dec
jle
ja
and
into
mov
xchg
dec
xchg
mov
sbb
fidivl
pop
hlt
gs
movsl
mov
pop
or
cmpl
xchg
and
cmp
push
inc
lret
cmp
cltd
nop
loopne
xor
mov
mov
lods
and
scas
mov
mov
subl
and
or
cmc
rcrl
ljmp
push
fwait
jecxz
xchg
pop
outsb
scas
or
adc
pop
movsl
adc
and
ljmp
jmp
cmpsb
fldt
jecxz
nop
and
fisttpll
sarl
xor
xchg
orl
and
sub
stc
aas
jecxz
push
xor
fs
push
push
incl
ja
adc
into
cmp
jmp
inc
xlat
lea
xchg
add
movsb
adcl
loope
mov
lret
mov
pop
xor
push
cmp
imul
mov
aaa
mov
movsb
out
mov
pop
adc
lret
sub
in
jp
lahf
cmpsl
mov
or
lahf
std
dec
pop
push
and
push
jp
adc
sbb
xor
mov
fnstenv
dec
orb
das
jns
push
jae
xchg
pushf
pop
cmpsl
stc
bound
add
popf
xor
icebp
cli
and
mov
mov
and
in
cmp
enter
xor
push
out
stc
fnstcw
in
xchg
jmp
push
loopne
add
das
sub
lods
cmpsl
cwtl
lock
test
inc
mov
popf
ret
pop
lahf
or
pop
sub
cmpsb
dec
data16
xor
js
and
fistpl
shlb
cwtl
push
pop
xor
ja
inc
push
lret
sbb
in
add
shlb
movsl
cli
push
pop
es
jnp
adc
stc
fs
push
sub
xchg
mov
or
lods
enter
call
cmp
mov
push
dec
ret
push
cmc
pop
stos
jmp
pop
ficoms
pop
sbb
fsubl
inc
push
and
dec
sub
xchg
mov
fstpl
scas
ljmp
and
lahf
lcall
test
sbb
pop
nop
test
test
out
cmp
mov
dec
add
js
call
in
mov
int3
xchg
push
bound
sbb
pusha
jg
or
push
push
imul
lea
xchg
pop
outsl
fs
add
fwait
mov
into
ficomps
bnd
mov
or
push
jbe
sub
xor
subb
xchg
jne
mov
ret
cld
jg
fistpll
xor
lcall
test
cld
fisttps
mov
mov
arpl
inc
ss
jns
adc
shrl
push
mov
repz
cs
xlat
mov
nop
xchg
mov
sub
aam
or
call
or
mov
jne
mov
mov
inc
and
push
cli
push
adc
aam
gs
inc
lea
mov
and
loope
xor
push
call
fld
movsl
lahf
mov
inc
xor
in
push
lods
xchg
les
or
cmc
xchg
mov
loope
adc
push
add
jno
nop
push
aam
lret
lock
fxch
addr16
icebp
pop
insl
psubsb
jle
push
ror
push
adc
or
mov
dec
test
cmp
mov
out
sbb
sbb
lods
mov
arpl
sub
out
fnstsw
insb
iret
data16
test
adcb
out
dec
out
dec
pop
dec
repnz
shlb
aaa
add
push
dec
push
and
mov
pop
xchg
nop
dec
push
dec
jmp
dec
inc
xlat
mov
xor
mov
xchg
mov
xchg
ljmp
or
in
and
mov
fadd
and
test
test
aam
cmpsl
pop
rcrb
mov
icebp
dec
lock
mov
lret
inc
inc
sub
and
sbb
movsl
test
xadd
loop
xchg
or
daa
adc
inc
fstpl
add
pop
inc
enter
sti
test
in
pop
xchg
pop
lret
mov
leave
mov
daa
mov
mov
pushf
xchg
pop
loope
pop
sub
push
mov
stos
imul
leave
and
sbb
mov
imul
and
cs
js
mov
mov
popa
xchg
fstps
xchg
jb
sub
add
push
ds
sahf
in
adc
out
out
dec
mov
sahf
xchg
dec
movsl
xor
pop
ret
imul
loopne
push
mov
mov
les
lods
das
adc
pop
mov
mov
sub
adc
test
xchg
add
adc
adc
loope
shrl
mov
mov
test
iret
lds
pushf
adc
fisubl
inc
pop
mov
imul
mov
xorl
mov
push
iret
sbb
clc
cmp
xchg
adc
mov
or
int
insb
xchg
add
cld
dec
setb
lret
fwait
clc
sbb
dec
lea
mov
dec
mov
ss
adc
popf
inc
xchg
movsb
xchg
out
shr
cmp
jl
or
dec
or
jg
cld
mov
in
xchg
es
push
pop
add
enter
push
pop
cmp
lahf
sti
sub
push
and
sbb
mov
inc
lock
fldt
jle
js
push
outsb
push
push
popf
add
testl
mov
sbb
mov
arpl
int3
clc
pop
mov
xchg
in
scas
sub
movsb
mov
push
cmpsb
jmp
cli
divl
jmp
insl
loopne
into
scas
insb
dec
movb
mov
int3
ficoml
rcll
daa
mov
adc
sub
lahf
mov
xchg
mov
sub
pop
sbb
or
lods
lock
rolb
pop
ss
mov
mov
insb
jecxz
pop
addr16
add
int
ret
mov
or
inc
pushf
xchg
icebp
test
dec
inc
pop
ss
out
xchg
push
in
dec
or
ja
push
jne
mov
and
jb
xchg
lods
sub
insl
popa
inc
add
out
sbb
xchg
ja
push
xchg
in
mov
ljmp
loope
jne
in
pop
add
in
mov
das
cmp
and
loop
fldcw
icebp
mov
jmp
arpl
xor
neg
jmp
aaa
cmpsb
pop
lcall
push
je
cltd
mov
out
xorl
lock
mov
mov
jns
outsb
mov
xchg
call
lahf
mov
fistpl
gs
fidivl
mov
imul
ja
mov
loop
test
dec
jno
jo
adc
add
sub
sbb
or
mov
jp
adc
sbb
movb
lock
push
xor
insl
or
aam
mov
enter
pop
incb
add
add
filds
sbb
shlb
xlat
xor
push
sub
adc
insl
js
fucomip
push
push
cmpsb
cmpsl
js
lds
and
pusha
mov
scas
mov
cmp
cmc
mov
pop
aam
mov
push
jecxz
shlb
jg
xchg
out
icebp
out
not
mov
cmpsl
xor
pushf
mov
inc
cmp
sbb
mov
mov
lahf
inc
xchg
mov
push
repz
cmp
jb
mov
cmc
lock
adc
loope
aad
loop
repz
aaa
imul
sub
fs
adcb
mov
add
add
cmp
bound
cltd
mov
ret
mov
cmp
dec
lds
dec
sbbb
mov
rcrl
dec
movsl
add
repnz
pop
mov
fcomp
pusha
ljmp
test
shrb
jns
je
movsb
jmp
imul
jnp
sbb
push
jae
cmp
push
testl
js
scas
lcall
xor
pop
pop
clc
shrb
push
imul
fistpll
push
mov
jp
dec
xchg
pop
xchg
dec
lds
aad
push
notl
xchg
test
add
imul
add
xor
mov
cmp
xchg
movsb
adc
data16
and
in
sub
mov
outsb
sbb
call
mov
jmp
push
xor
cmp
out
shll
pop
jecxz
pmuludq
pop
dec
and
lret
jp
out
aad
jl
repz
testl
iret
int
push
and
or
push
fstl
sbb
sbb
addr16
lcall
or
xchg
adcb
sub
fsubs
fnstsw
stc
xor
testb
or
inc
xchg
daa
and
shll
addr16
or
dec
jle
pushw
aad
inc
jns
ja
int
xor
pop
mov
xchg
mov
pop
push
pop
out
faddl
jge
pop
mov
stc
jo
ljmp
mov
mov
adc
hlt
adc
mov
dec
lea
and
xchg
xchg
and
cs
or
in
jmp
mov
imul
mov
inc
fidivs
cmpsl
test
mov
pop
mov
push
aas
rolb
adc
jae
in
mov
or
sub
imul
int3
inc
xchg
inc
xlat
shlb
and
lahf
jecxz
push
enter
dec
stc
mov
mov
leave
sahf
loop
cmc
mov
arpl
fcmovnbe
cmpsb
stc
adc
mov
mov
loopne
inc
gs
lret
cmp
repnz
divb
xchg
roll
rolb
ret
out
inc
add
pop
add
jns
push
xchg
pmuludq
out
fisttpll
ror
mov
mov
into
sbb
stc
and
popa
or
adc
cmp
insb
adc
shrl
xchg
lret
jp
sbb
ljmp
jl
mov
push
adc
jecxz
jmp
mov
xchg
cmpsl
mov
dec
call
sub
scas
sti
lret
lret
cmpl
mov
sub
pop
fcoms
aam
cli
cmp
push
and
lcall
rorl
notb
std
nop
cmp
loop
mov
sub
mov
push
xchg
das
movsl
lret
popa
push
xchg
dec
mov
mov
outsl
and
hlt
fidivs
xchg
fs
mov
shlb
fisttpll
sti
shrl
loop
and
sbb
push
data16
mov
pop
or
xchg
sar
mov
xchg
mov
adc
adc
les
loop
xor
dec
aaa
les
pop
mov
adc
dec
js
fdivl
or
ss
jne
fwait
jge
mov
iret
cmc
xchg
faddl
fstpt
jne
mov
aad
sbb
mov
adc
pop
adc
mov
stc
dec
mov
jns
hlt
pop
mov
lods
push
in
or
or
fiadds
repnz
enter
mov
inc
pop
scas
mov
cmp
call
fnstcw
add
scas
inc
xchg
fdivrl
sbb
pop
pop
mov
sbb
push
pusha
and
or
dec
adc
ljmp
jo
mov
jp
mov
mov
xchg
mov
xor
pusha
rcrb
jne
daa
dec
std
lret
and
mov
lds
fnstsw
outsb
push
jl
mov
leave
dec
pop
out
push
test
fistpll
fs
loopne
cmp
testl
or
pop
and
mov
daa
int3
enter
sub
lcall
nop
inc
pop
and
mov
push
jnp
cmp
mov
aaa
scas
ljmp
imul
dec
cmp
jle
sub
or
lea
nop
sub
dec
stos
and
mov
call
imul
aas
xor
mov
inc
imul
insb
repz
push
mov
jae
notl
negb
jg
pop
cmp
push
and
pop
lods
ret
cmp
mov
ja
push
cmp
ficomps
pop
popf
insl
jl
enter
ret
dec
mov
sbb
mov
cmpb
mov
and
mov
icebp
cld
inc
xchg
jne
pop
imul
pop
push
dec
pushl
mov
testb
lds
or
adc
add
xchg
data16
out
jns
scas
mov
or
mov
push
sub
pop
push
aam
adc
push
sub
inc
in
dec
pop
pushf
jl
outsb
mull
lcall
mov
mov
mov
jmp
adc
and
push
fildl
xchg
xor
cmpsb
shlb
loop
cmp
daa
cmp
xchg
lods
inc
mov
pop
mov
adc
pop
ss
jmp
cwtl
aas
pop
subb
loop
inc
mov
icebp
daa
mov
jb
rcl
xchg
push
ret
int3
xchg
insl
leave
test
aam
sbb
call
clc
xor
sub
ja
lcall
push
movsb
jo
sbb
cmp
xor
ret
sbbb
pop
outsl
dec
jmp
stos
insb
int3
imul
out
fcoms
fwait
mov
or
insb
popf
dec
aas
imul
inc
stc
fnstcw
xor
mov
fidivrl
jb
and
mov
xor
inc
xchg
insl
and
fistpll
inc
pop
inc
push
in
sbb
sti
add
mov
aas
fcmove
mov
stos
sbbl
ret
dec
xor
and
dec
or
cmp
arpl
ret
int3
cmc
xor
in
inc
inc
pop
addl
das
jno
fucomp
mov
jmp
push
loop
xchg
std
and
inc
in
mov
xchg
movsl
sub
insl
mull
mov
filds
mov
mov
sahf
and
shrb
cltd
cmp
imulb
stos
cmp
cmc
lcall
je
enter
or
or
imulb
test
subb
xlat
or
push
add
xchg
sbb
loopne
lds
and
mov
sbb
out
repz
add
inc
mov
dec
dec
jmp
push
test
js
imul
mov
enter
and
movsl
jg
test
add
sub
fadds
xchg
repz
sub
sti
xlat
aaa
push
pop
and
jge
dec
aaa
jmp
and
jmp
jp
scas
xchg
dec
and
mov
icebp
testl
cmc
inc
cmp
pop
repz
jae
push
dec
ud2
enter
rclb
mov
stc
lahf
xor
push
dec
sbb
adc
sub
and
aam
loopne
pop
icebp
xor
jbe
pushl
mov
fsubl
fsubrl
or
dec
loop
or
shll
mov
mov
cmp
mov
push
sub
out
pop
call
cmp
int3
mov
fsubp
mov
inc
sbb
mov
mov
adcb
mov
pop
adc
sbb
ljmp
add
and
xor
push
push
sbb
daa
or
out
fmul
std
cmp
or
and
cmp
das
mov
dec
addl
mov
pop
scas
ljmp
and
enter
mov
pop
out
push
sub
sub
jno
push
iret
mov
cli
xchg
sbb
leave
out
push
inc
dec
lods
sbb
cmpsl
ret
popa
push
mov
fisttpl
jecxz
cld
ljmp
and
cmp
scas
ficoms
addr16
std
arpl
inc
syscall
mov
or
jl
arpl
imul
insl
jecxz
ror
mov
fs
stc
lock
std
sbb
xchg
dec
sub
sti
mov
pop
lock
inc
adc
pop
xor
je
sbb
or
out
popa
aad
inc
adc
loopne
push
jnp
shll
ret
lea
testl
or
sbb
std
sbb
fidivrs
xchg
cld
adc
aaa
xchg
aas
pop
mov
mov
xor
mov
push
mov
ret
or
push
js
scas
xor
cmp
xchg
aad
lods
and
aam
fcmovnb
cs
jns
pop
push
loop
and
push
push
mov
inc
cs
cmp
fwait
mov
repnz
push
jg
call
mov
sbb
es
out
loopne
sti
in
sub
iret
push
cmp
test
xchg
sub
movsl
xlat
cwtl
xchg
pop
mov
or
xchg
and
xchg
bound
xor
sti
repnz
jbe
inc
insb
mov
jl
lock
sub
fadd
fwait
movsl
sbb
cbtw
adc
cld
cld
popa
ja
or
mov
fucomp
pop
mov
sub
mov
push
cmp
leave
inc
inc
frstor
test
mov
fs
sbb
cmp
sub
fldenv
jg
push
sbb
std
push
xor
sub
stos
jecxz
mov
addr16
pop
insb
insl
popf
mov
cmp
mov
sahf
jp
cmp
dec
sub
aad
in
inc
int3
inc
cltd
mov
xor
mov
loope
dec
cmpsb
out
enter
sahf
roll
in
std
rcrl
sbb
sahf
jl
mov
test
fistpll
cmp
adc
mov
into
mov
lock
cmpsb
adc
xchg
add
sahf
aam
repz
out
adc
jge
int
adc
dec
jns
or
dec
adc
adc
adc
outsb
jmp
mov
fstps
cmp
dec
jge
aam
jno
scas
fisttpl
fst
mov
cs
pop
jl
xor
out
mov
add
popa
lods
push
cmp
cmpsb
xor
add
shrl
repz
mov
fdivl
enter
test
es
out
shr
es
jle
test
sbb
dec
inc
in
stos
test
out
dec
dec
imul
movsb
call
cmp
mov
mov
or
fisttps
pop
inc
sbb
sub
add
mov
jb
sub
and
notl
out
cmp
cmp
push
movsl
cld
sub
push
push
sub
ds
in
in
xlat
pop
pop
jns
and
dec
int
js
repz
int
pop
rolb
xor
sbb
repz
xchg
outsb
xchg
cmp
lods
shll
adc
fs
pop
pusha
jne
xchg
jnp
aaa
pop
out
cmp
insb
and
mov
andb
or
cmpsb
sub
dec
popa
push
jbe
inc
ss
sbb
cmp
leave
into
rcrb
adc
xchg
sub
jl
or
fs
lock
iret
dec
ljmp
mov
mov
xor
and
and
outsl
fwait
sub
mov
int3
iret
adc
inc
and
sub
ljmp
das
pop
stos
fidivl
pop
sbb
sbb
sub
jnp
das
or
lret
adc
inc
sbb
pop
jp
and
sbb
enter
sbbl
mov
xor
leave
xchg
sub
insb
scas
pop
subl
stos
push
mov
inc
adc
mov
fsubl
inc
leave
mov
loopne
fnstcw
pop
je
mov
xor
lods
xchg
jmp
lock
test
dec
xchg
clc
cmp
dec
ret
insl
or
sbb
call
mov
loopne
add
cmpsl
sub
movhps
inc
pop
test
mov
idivl
or
cs
shr
ds
pop
mov
pushl
icebp
add
clc
mov
jb
xlat
icebp
in
mov
pushf
cmp
push
jbe
push
xchg
fs
jns
push
jecxz
xor
pop
ret
pop
loopne
mov
cli
mov
dec
in
outsl
push
sahf
inc
cmpsb
jl
sbb
in
jp
xchg
mov
dec
pop
push
add
mov
aas
gs
icebp
inc
push
jg
dec
add
in
jns
clc
fisubrs
xchg
xchg
mov
xlat
and
dec
mov
and
dec
cmp
addr16
sbb
cmp
stos
fs
mov
pop
push
fwait
mov
loop
xor
mov
test
lock
sbbl
je
push
nop
and
mov
out
mov
dec
pop
arpl
sbbl
ljmp
idivb
fs
sub
ret
jae
int
out
xchg
mov
shlb
mov
stos
or
xorl
out
les
add
mov
xor
dec
data16
pop
arpl
jg
mov
dec
xor
add
out
push
mov
fwait
fwait
mov
daa
outsb
fcoms
cs
rcll
push
or
shll
movsl
sbb
fcmovu
pushf
call
mov
stos
xchg
lods
cmp
pushf
ljmpw
push
lcall
sarb
dec
add
addl
imul
mov
jmp
aas
pop
mov
roll
mov
shr
ljmp
imul
cmovp
lcall
xor
push
in
scas
sub
mov
push
out
stos
popa
in
or
shl
pop
bound
fdivs
movsb
ds
decl
fs
enter
mov
movsl
popf
call
mov
mov
mov
popa
cmp
xor
in
push
sbb
inc
int
insl
mov
outsl
pop
lock
scas
fdivrs
pushf
test
daa
jle
out
sbb
mov
mov
push
inc
mov
mov
scas
outsw
xchg
adc
popa
lods
sbb
push
push
fstpl
fdivr
or
pop
loope
insl
xor
xchg
and
jle
mov
jp
mov
pop
hlt
sbb
rcrl
movsl
or
in
addr16
cmp
adc
pop
test
and
incb
dec
scas
inc
clc
fcmovnu
outsb
stc
mov
xor
call
stc
fiaddl
shlb
data16
sub
cmpsb
std
imul
inc
or
gs
jp
std
fmul
inc
cmp
sbbl
cwtl
mov
sub
test
mov
test
dec
or
dec
mov
mov
xchg
pop
pop
in
jge
aaa
push
mov
fwait
jnp
out
clc
mov
push
cltd
enter
sbb
aad
loop
movsl
cmp
je
clc
shlw
and
cwtl
adc
shll
jg
or
ja
cmp
lret
mov
push
jle
adc
cmc
ret
rcrb
sub
inc
fsts
and
test
push
pop
mov
ret
pop
push
insb
jns
sbb
aaa
ret
xchg
rol
repnz
cld
add
cli
les
dec
cmpsb
popa
cmp
push
fdivl
mov
ljmp
lea
mov
adc
mov
adc
loope
pop
test
loope
push
mov
mov
cltd
sbb
inc
js
pop
cli
pop
in
xor
in
sbb
clc
enter
xor
insl
push
imul
push
push
outsl
adc
jb
add
sbb
push
jecxz
leave
and
ds
mov
sub
adc
imul
jne
inc
lret
add
inc
mov
frstor
cmp
adc
pop
shl
iret
mov
push
sub
out
or
in
out
jo
lahf
cmp
add
jmp
cmp
mov
insl
scas
mov
or
or
add
das
addb
imul
mov
mov
sub
mov
mov
ret
or
negb
sub
mov
aas
xchg
pop
outsb
pop
jge
fstpt
or
cmpl
lods
jbe
cmp
jbe
int
ljmp
int
in
jge
cmp
daa
outsb
xchg
pop
inc
push
leave
jmp
lret
loop
das
outsb
outsb
cmpsb
iret
pop
jp
into
test
push
push
or
rcrl
stos
cli
mov
pusha
movsb
mov
call
lods
test
pusha
sub
jno
push
sti
xchg
mov
push
aas
pop
negl
rcrl
daa
cmpsb
rcl
pop
cmpb
scas
dec
pushf
pop
ret
cwtl
mov
loopne
cld
rcrl
lret
cli
pop
adc
inc
mov
add
cmpsl
push
pop
lds
cmpsl
scas
fnsave
jge
jle
add
fstp
and
inc
jb
push
xor
push
and
arpl
xchg
out
sbb
mov
cli
lahf
ja
in
mov
jno
dec
dec
loop
xor
adc
xor
stos
push
repnz
ja
stos
ss
movsb
jbe
mov
arpl
stos
in
or
mov
dec
xor
adc
popf
into
sbb
rcll
xchg
les
cmpl
out
sub
xchg
enter
inc
add
loop
adc
jne
addr16
mov
inc
lret
popa
daa
xchg
in
jo
sub
sub
sarl
cwtl
aaa
xor
cli
std
pop
lea
or
cmpb
cmp
inc
sbb
ds
mov
adc
mov
dec
ja
add
xlat
sbb
cs
leave
lcall
outsl
into
mov
lret
cmpsb
lahf
and
sbbb
mov
inc
push
mov
and
addr16
out
outsb
ret
lret
call
mov
inc
mov
push
orl
cli
andl
cmp
mov
mov
lea
repz
jno
cmp
mov
test
inc
dec
push
sbb
fdivp
sub
jmp
adc
dec
dec
adc
cld
imul
int
push
out
ljmp
addl
fwait
mov
add
mov
mov
push
ret
in
xor
cmp
cmpsb
stos
aaa
out
int3
sub
xchg
andb
adc
adc
xchg
mov
mov
fldl
enter
mov
push
mov
test
pop
pop
daa
pop
adc
jnp
loopne
push
cmp
fisubs
inc
xchg
mov
sub
mov
cwtl
jo
mov
and
test
cmp
push
std
fs
popf
data16
dec
adc
cmpsl
jb
lods
sbb
push
das
and
dec
insb
std
mov
jle
sub
fnsave
push
in
adc
dec
or
dec
loope
stc
add
das
ja
fmuls
rorw
dec
push
cmp
dec
jb
sub
sahf
test
sub
loope
lock
test
daa
cwtl
leave
arpl
lret
ljmp
imul
jns
push
dec
inc
inc
cmp
pop
addr16
rorb
dec
fwait
mov
xor
imul
fstpt
push
bound
stos
pop
loope
add
pop
mov
mov
data16
sub
ss
lahf
shlb
scas
bound
pop
movl
test
ret
aaa
adc
and
push
ret
insb
mov
daa
adc
jb
mov
and
adc
xor
or
xchg
adc
mov
sbb
pop
or
sub
mov
push
call
xor
push
sbb
lods
and
cltd
arpl
roll
push
incb
inc
ret
in
stos
shll
xchg
nop
mov
xchg
leave
xchg
cmpsl
addb
das
inc
mov
sahf
mov
test
inc
mov
xchg
mov
loope
pop
jne
jb
jl
fisttpl
mov
push
jns
andl
aaa
push
push
xor
jno
jnp
sbb
enter
mov
mov
test
imul
sbb
out
or
dec
xchg
loop
cmp
add
insb
adc
idivl
or
push
imul
pushf
xchg
mov
cmpb
push
fisubs
test
leave
xor
or
imul
mov
ja
cmp
sbb
add
popa
sub
test
ds
lahf
call
inc
out
pop
xlat
ja
pop
pushf
fscale
xchg
addb
inc
inc
in
cmp
add
lock
shll
pop
dec
das
sub
jle
daa
scas
jnp
jecxz
mov
pop
pop
pop
rol
sahf
arpl
or
xchg
push
testl
shll
call
or
mov
jne
inc
pop
in
xor
outsl
arpl
xchg
lahf
xchg
scas
shlb
xor
dec
call
push
push
addr16
xor
scas
push
out
xchg
js
inc
mov
stc
push
ficompl
pushf
and
fcmovu
fsubs
orl
or
repnz
mov
cmpsl
out
jge
sbb
movsb
jno
aaa
inc
sbb
nop
mov
mov
push
sti
sub
ljmp
fcompl
pop
cmp
xlat
mov
pop
lret
fsubs
mov
lret
sub
mov
nop
std
sub
lods
mov
xchg
cmp
ljmp
dec
adc
insb
ret
xchg
rorb
aas
punpckhwd
leave
mov
aad
jmpw
mov
pop
mov
inc
ss
push
fisttps
and
std
push
aas
outsb
sub
lods
shlb
mov
rorb
arpl
dec
sbb
sub
xor
push
xchg
orl
mov
push
cmp
xor
sub
cmp
in
cmp
loop
or
xor
sbbl
add
mov
inc
iret
pop
call
insb
adc
inc
cli
das
mov
mov
push
or
sub
cmpsb
xchg
repnz
data16
sbbl
decl
dec
loop
inc
movsb
and
ja
adc
mov
dec
jecxz
sub
mov
cmpsl
jnp
aaa
dec
cmc
push
inc
xchg
pop
test
xchg
ljmp
into
fdivr
xchg
ss
sbb
mov
out
loop
pop
xchg
jp
mov
adc
sub
pop
mov
andnps
cli
jns
xchg
mov
xchg
cmc
sub
xor
daa
mov
push
push
pushf
dec
lahf
ficoml
add
or
cmp
or
cmp
ljmp
fistpl
imul
test
sub
xor
fbstp
roll
ljmp
inc
jb
mov
mov
mov
add
int3
mov
lock
bound
and
rorl
loop
loopne
fwait
xchg
xor
cld
sub
lret
adc
push
mov
sub
imul
popa
lcall
cmp
mov
cmpb
imul
cmp
ret
sub
jl,pt
faddl
sbb
xor
push
data16
lea
js
pop
or
stos
addr16
inc
inc
test
or
xor
push
or
and
or
push
int3
in
sub
jl
push
push
sahf
mov
mov
add
sub
pusha
xchg
push
jl
scas
pop
sub
mov
dec
jae
inc
lock
lahf
nop
xchg
iret
mov
cld
mov
movsl
pop
aad
out
pop
mov
clc
popa
xchg
icebp
jp
in
fwait
data16
mov
mov
out
cld
test
sub
jle
xor
xchg
test
sub
pop
jne,pn
jmp
and
and
push
jb
fdivrl
sub
mov
sahf
repz
dec
mov
call
pop
mov
add
mov
test
imul
ret
stos
xor
rolb
fs
mov
mov
mov
je
mov
fisttpll
fs
into
adc
hlt
xchg
jle
push
jmp
popa
cmp
sbb
rorl
jecxz
adc
add
mov
sub
cmp
adc
ret
fidivrs
inc
ret
hlt
add
dec
pop
lret
movswl
lret
lds
fcmovne
xchg
mov
push
aaa
int3
xchg
imul
inc
mov
mov
inc
adc
imull
mov
ljmp
sbb
adc
lret
sbb
push
dec
mov
orb
mov
push
and
jge
and
jb
inc
mov
pop
fistps
lahf
push
mov
rolb
cmc
stc
add
into
icebp
into
mov
shlb
jmp
iret
aaa
pop
push
xchg
lcall
test
arpl
lock
add
sbb
sbb
mov
xchg
or
sahf
pusha
ljmp
mov
inc
add
sub
addr16
mov
jg
dec
icebp
jmp
out
imul
int3
cmpsl
push
int3
cwtl
lahf
adc
sti
inc
das
jp
in
sbb
push
mov
cmp
mov
or
jbe
jb
xchg
int3
jecxz
inc
push
jg
test
inc
add
sbb
sahf
ljmp
popa
adc
sbb
loop
mov
xchg
sub
fxch
inc
xchg
add
lret
add
pop
jbe
in
add
mov
cwtl
mov
mov
test
push
bound
test
cld
mov
cmp
jmp
data16
pop
sbb
mov
andb
xchg
pop
xor
pop
dec
pop
inc
lock
imulb
xor
mov
mov
add
xchg
sbb
adc
in
out
lret
sub
fs
fs
mov
andb
in
cltd
adc
fs
pop
jbe
add
sarl
mov
ret
pop
mov
sbb
sub
mov
pushf
cmp
mov
out
jl
mov
pushf
bound
xchg
sbb
daa
cmp
dec
mov
sub
stc
xor
jns
adc
cmp
mov
cmp
cmc
loop
mov
pop
mov
sub
push
test
xchg
mov
push
inc
or
arpl
orl
fimull
ret
push
dec
sahf
cmp
inc
cmp
lods
nop
pop
cmpb
fsts
js
movsb
push
xor
push
xor
mov
inc
inc
inc
and
jae
pop
jl
mov
pop
mov
jmp
mov
mov
pusha
jmp
mov
pop
add
fwait
je
inc
xchg
jmp
cmpsb
and
mov
cmpsb
mov
sahf
fidivrs
push
std
repnz
pop
jbe
inc
out
outsl
push
hlt
xor
xchg
rcrb
adc
add
ret
jmp
ret
sar
int3
out
and
test
data16
mov
ss
xorl
shlb
jp
addb
sbb
scas
stc
xor
lcall
mov
push
xchg
sub
sub
xchg
push
scas
in
frstor
daa
scas
lahf
mov
mov
push
push
out
jnp
loopne
cmpsl
out
dec
stos
xchg
or
shlb
push
adc
jo
js
sbb
ret
adc
negl
insl
dec
jne
in
add
fidivs
lods
or
in
jp
mov
lock
adc
and
aad
sbb
jne
and
sub
pushf
scas
mov
xor
pop
test
pop
or
add
sbb
movsb
stos
mov
mov
repz
into
dec
add
mov
enter
sti
push
js
jg
mov
lahf
test
fucomi
fiaddl
xchg
mov
xchg
sbbl
push
stos
fcompl
and
jl
and
int3
and
and
aaa
mov
pop
sti
nop
pop
add
shrb
mov
jno
jle
mov
xchg
les
test
inc
push
push
mov
lahf
fistpl
pusha
adc
clc
jg
std
popa
lods
mov
enter
out
loop
sbb
dec
cmovae
pop
mov
int3
sub
clc
xchg
xchg
clc
cmc
sbb
jno
and
pop
stos
aaa
cmpsl
je
out
lods
sahf
lahf
cmp
cs
iret
dec
and
or
or
mov
popf
je
pop
sbb
cmc
jle
or
add
icebp
fcoms
ds
and
mov
pop
sti
movsl
jge
mov
scas
jo
xchg
lods
adc
dec
dec
pop
iret
out
pushf
stos
pusha
call
jb
daa
sub
mov
shrl
mov
mov
push
cmp
and
mov
out
inc
cld
mov
push
icebp
dec
xchg
out
pop
ljmp
cmp
fsubrl
jmp
js
int
lods
movsl
jbe
jne
sub
inc
imul
xchg
push
jo
je
pop
test
xchg
js
ljmp
orl
sahf
rorl
lds
xchg
sbb
mov
lods
sub
or
inc
push
mov
sbb
cmp
or
mov
js
mov
push
or
stos
or
cmpb
fsub
cmp
jbe
jmp
imul
push
lods
or
pop
mov
into
in
pop
mov
das
lock
or
jne
xchg
imul
addr16
lret
fnstcw
pop
lcall
push
push
xchg
test
jns
jnp
sbb
ja
pusha
pop
xchg
xlat
ja
int3
adc
sbb
dec
ds
xlat
lcall
lea
xchg
rolb
idivb
scas
ror
mov
dec
movq
dec
ljmp
pop
sbb
popl
ror
mov
inc
mov
fldcw
int
jno
push
loope
addr16
aas
imul
fwait
ss
adc
mov
xchg
sbb
pop
jns
das
cld
fldl
es
mov
cmp
divb
loopne
outsl
sub
inc
adcb
inc
fcmovnu
loope
dec
mov
adcb
sub
cmp
cmp
mov
flds
jo
mov
repz
inc
mov
jae
vmovdqu
dec
xor
insl
push
jge
cwtl
mov
xor
push
sub
pop
push
aam
roll
mov
sbb
xchg
sti
and
push
popa
lahf
inc
add
or
pop
les
inc
outsb
xor
movsl
dec
int3
dec
xchg
cli
push
xchg
mov
jo
js
fxch
aad
cmp
mov
jecxz
cmp
cld
inc
lock
add
or
pop
sbb
push
pop
les
mov
test
jl
std
movsl
je
xchg
jnp
test
jno
cmp
push
scas
cli
mov
popa
mov
cwtl
imul
std
and
push
mov
or
mov
fdivp
push
into
cs
add
std
enter
lcall
add
adc
es
pop
pop
push
push
nop
add
bound
faddl
imul
mov
sub
cmp
dec
in
movsl
ja
popa
xor
xchg
pop
bnd
cmp
flds
inc
push
into
addl
movsl
leave
or
rorb
xor
sarb
dec
xorb
pusha
xchg
lods
jg
cmp
repnz
adc
stos
nop
mov
mov
pop
xor
scas
pop
adc
pop
popf
mov
mov
in
das
and
cmp
inc
dec
push
inc
mov
lea
mov
sub
adc
popf
pusha
add
lcall
sbbl
xchg
cmp
mov
or
add
ds
mov
sub
mov
movsl
cltd
cwtl
pop
movsl
outsl
cmp
mov
fildll
insl
ljmp
fsub
in
xchg
dec
aam
add
sub
sti
sub
pop
das
xlat
xchg
adc
sub
sahf
and
scas
push
adc
test
mov
mov
out
push
push
jo
notb
pop
loopne
push
out
mov
je
es
pop
add
pop
pop
pop
push
bound
icebp
scas
or
sub
popa
mov
in
add
pushf
movsb
mov
stos
push
or
cmpsb
movsl
dec
jbe
xorl
filds
adc
pusha
fcomi
rcrb
add
dec
jge
popf
hlt
add
mov
add
add
shrb
aad
or
push
rcrb
jns
leave
sub
outsl
xor
test
xlat
add
jno
mov
mov
sahf
jb
and
insl
mov
pop
pop
leave
je
clc
sbb
mov
roll
pop
scas
imul
in
pop
adc
fdivrp
pop
pop
hlt
adc
xchg
xlat
jp
ficompl
cltd
mov
out
in
push
cs
test
dec
insb
add
or
movsb
pusha
std
push
int
xor
outsb
std
push
loope
push
mov
daa
push
push
shlb
insl
sbb
loopne
shlb
fadds
lock
loop
cli
and
dec
push
outsb
in
imul
adc
mul
xchg
xchg
scas
jo
cs
mov
test
pop
xlat
sub
push
aad
in
adc
mov
xor
inc
sub
lds
and
sbbl
or
lods
adc
xchg
mov
jmp
popa
out
jmp
out
sub
jns
movsl
call
jg
sbb
rorb
push
dec
addr16
clc
scas
adc
jecxz
jae
xchg
pop
fisttps
mov
fsubrl
arpl
cld
adc
xor
pop
mov
push
out
jb
inc
aam
scas
out
orps
mov
lret
repnz
pop
and
cwtl
xor
adc
or
mov
sub
xor
jnp
andb
mov
popl
je
add
stos
xchg
data16
push
cld
cmpl
mov
lret
or
cld
cmp
int
mov
loop
dec
xchg
aas
cld
xchg
dec
shll
jns
dec
xchg
mov
add
ds
or
jo
inc
push
dec
notb
add
jmp
mov
xor
into
cs
das
adcl
jle
push
fisubl
mov
and
xor
cld
adcl
push
inc
lcall
inc
cmc
rolb
and
xchg
inc
repnz
das
xor
pop
xor
lea
jae
insb
cmp
loop
sbb
loop
and
icebp
cli
mov
or
out
lea
aam
mov
mov
cmp
fsubr
mov
aaa
jge
push
pusha
or
movsl
into
mov
inc
loopne
pop
sub
or
xchg
repz
addr16
pop
mov
sar
shll
out
cmp
push
ja
ss
stos
sahf
or
loop
mov
sbb
pop
ret
test
test
popa
pop
arpl
rcrl
jge
imul
xor
fwait
fwait
test
mov
filds
xor
dec
pop
cmp
and
cmp
js
pop
pop
icebp
subl
aad
outsl
int3
addr16
add
adc
rorb
insl
pop
outsl
dec
ret
cmp
fisubl
dec
push
jne
jo
and
push
outsb
mov
mov
int
and
stos
cltd
mov
mov
xor
aam
add
push
adc
pop
test
mov
cltd
push
xchg
ficoms
or
in
ss
inc
jnp
jg
in
push
aad
repnz
jnp
inc
scas
sub
xor
cld
jmp
cmpsb
call
test
in
es
pop
cli
pop
sbb
test
xchg
sub
hlt
and
sbb
iret
mov
mov
inc
notl
jg
rclb
jno
jle
lds
inc
or
add
scas
push
mulb
aam
mov
xchg
cmp
movsb
and
mov
xor
aam
dec
jnp
xor
cmp
je
push
add
scas
jno,pn
sarl
xchg
cmpsb
sbbb
sti
xor
adc
inc
pushf
cmp
sar
xchg
jbe
repnz
jp
sub
jo
xor
pop
jno
fwait
lcall
push
mov
std
out
mov
xchg
mov
pop
pop
stos
dec
aas
cmp
jecxz
ljmp
cmpsb
lret
jp
adc
inc
xor
sub
sbb
pop
cs
xchg
outsb
inc
ss
movsb
jno
add
in
adc
icebp
in
jmp
cmc
sbb
fildll
cli
nop
adc
fcoml
jae
dec
inc
adc
icebp
jnp
mov
xlat
ss
rcl
xchg
test
insl
push
push
aam
add
push
inc
stc
sbb
and
mov
or
xchg
push
repnz
loop
mov
pop
ljmp
mov
push
pop
pusha
insl
cltd
push
xchg
stc
pop
sub
sbb
scas
rolb
or
repnz
push
push
mov
pop
cmp
lock
dec
mov
pop
addr16
pop
jnp
xchg
mov
mov
add
scas
cmp
dec
sbb
mov
pushf
mov
cmc
sbb
xor
movsl
dec
add
or
outsl
les
mov
and
cmp
fsubrl
mov
xor
xlat
inc
add
inc
outsb
ljmp
mov
aam
jns
mov
cltd
pop
mov
mov
pop
lds
mov
rorb
dec
adc
mov
shlb
jnp
fldlg2
jae
inc
loope
mov
add
orl
or
or
bound
sbb
mov
andb
fisubrs
dec
inc
mov
pop
add
mov
out
mov
add
inc
push
stc
jle
aas
sbb
pusha
popa
inc
pop
add
mov
jbe
mov
les
sbb
add
mov
adc
das
inc
mov
daa
jns
test
mov
push
xor
outsb
mov
lods
outsl
push
pop
dec
cmpsl
xor
movsl
jbe
ja
mov
or
out
ds
adc
fisttpl
movsb
int3
dec
dec
loop
push
mov
jno
jge
dec
bnd
mov
xorb
mov
and
xor
stos
pop
pop
and
jne
adc
stos
mov
mov
mov
dec
mov
push
call
mov
inc
cli
xchg
das
xchg
aaa
fcoml
push
fdivp
gs
insl
lret
fcomi
mov
test
enter
sub
cmpsb
movsb
pop
rorb
scas
movsb
ja
adcl
push
pop
or
pop
fadd
and
or
mov
xchg
sarb
jb
lods
mov
dec
pushf
cs
xchg
and
mov
cmp
jle
shrb
idivb
testb
pop
adc
add
lcall
shl
clc
out
cmovnp
jno
leave
lods
add
inc
jns
jp
call
sub
in
mov
cltd
mov
jle
dec
dec
sbb
addl
sahf
lcall
adc
jno
cwtl
or
jno
xor
sub
daa
shlb
aaa
push
in
or
leave
xchg
inc
jae
inc
aam
les
xchg
lret
int
xor
es
ret
popf
test
jno
lret
inc
jp
inc
outsb
enter
rorb
insw
lret
xchg
je
push
cmpsb
mov
inc
pop
int
into
xchg
mov
mov
hlt
xchg
jmp
or
idiv
sbb
aaa
flds
or
data16
es
add
leave
cmp
popa
xchg
stc
and
mov
aam
push
jae
loop
adc
lret
lock
int3
jle
test
cwtl
mov
ret
lods
aas
push
adc
dec
mov
test
sbb
fmuls
das
mov
pop
mov
movsb
stos
dec
clc
orb
jb
shll
stos
cmp
ret
push
xchg
insl
pop
movsl
sbb
into
hlt
loopne
rol
pop
in
enter
movsl
or
mov
cmc
cmp
mov
mov
adc
or
pop
cli
imul
lret
jg
push
cli
dec
cld
movsb
lock
jp
filds
repnz
insl
cmp
fisttps
sub
mov
sbb
cmp
inc
icebp
push
fsubrp
inc
pusha
hlt
push
pop
lock
out
aad
clc
int
lds
and
jl
pop
rcrb
push
movsb
orb
test
push
jne
adc
mov
sbb
jecxz
lods
add
push
or
add
pop
hlt
pop
imul
arpl
sahf
and
add
arpl
cmp
cmovge
fsub
aas
xchg
lods
jne
pop
sarl
testb
and
push
scas
cli
data16
cmp
cwtl
inc
outsl
dec
rol
roll
aaa
orl
outsl
adc
adc
lock
movsb
insb
lds
sahf
lret
imul
cmp
cmp
inc
jo
or
popf
leave
das
and
mov
xor
clc
divl
add
xor
or
nop
bound
push
cmp
cs
cmp
adc
aam
mov
rep
dec
inc
and
notb
xor
xchg
loop
sbb
add
xor
xor
sbbb
mov
lods
adc
inc
adcb
add
jmp
cli
cmpsl
inc
pop
push
fnstenv
test
mov
dec
mov
loop
sub
push
push
std
mov
mov
pop
mov
rcrb
or
dec
push
push
fs
cld
popf
mov
lds
jb
lret
mov
xor
aaa
push
jl
outsb
ret
stos
mov
and
pop
push
push
xor
sub
add
add
scas
in
xchg
xchg
push
mov
out
cltd
mov
adc
imul
mov
lea
adcb
inc
call
stos
add
or
faddl
pop
stos
sbb
scas
jge
jns
add
inc
mov
in
jne
insl
in
mov
dec
hlt
cmpsb
aam
lret
mov
fs
xchg
mov
adc
mov
lahf
cwtl
icebp
cmp
cmp
scas
sbb
mov
mulb
decb
repnz
jmp
mov
push
add
cltd
add
aam
mov
dec
jecxz
jg
movsb
xchg
pop
jno
loope
cld
int3
aad
jg
mov
sub
pop
pop
jns
mov
sbb
jno
jecxz
jno
adc
cmpb
mov
xor
test
leave
sub
cmp
mov
cmpsl
outsl
clc
jecxz
push
int3
adc
xchg
or
loope
cltd
cmp
insl
stc
xchg
push
dec
push
jle
mov
jmp
and
jp
pushf
fldenv
push
xor
aam
pop
shrl
dec
out
push
mov
dec
dec
sbb
mov
mov
pop
stos
mov
mov
jbe
xchg
sub
in
repnz
test
sub
iret
pop
pop
cmp
dec
aas
leave
in
xchg
dec
pop
loope
push
fidivrl
push
imul
cmp
leave
int3
mov
push
adc
adc
imul
dec
fildll
sbb
out
gs
mov
inc
jge
in
dec
jno
adc
inc
inc
inc
les
and
aam
pop
fs
push
sar
sub
dec
or
and
xor
cmc
xor
stos
sub
das
shll
inc
sahf
pop
mov
pop
lds
sahf
mov
sub
movsl
fcmovne
repnz
test
mov
mov
lock
jne
adc
push
or
dec
sbb
mov
arpl
push
dec
sub
lods
xchg
push
cld
gs
pop
cmp
test
jle
pop
fs
jns
aam
je
xchg
dec
or
jne
mov
inc
push
mov
mov
test
or
mov
stos
nop
lahf
and
gs
add
das
sahf
pop
sti
popf
xchg
sahf
lea
xchg
out
sbb
mov
push
add
ja
jae
pop
js
icebp
loop
sub
xchg
hlt
xchg
xor
gs
sarb
aas
xchg
adc
fcompl
or
rcrb
mov
pop
lods
aad
pop
leave
or
inc
test
xchg
add
sub
sub
mov
sbb
cld
out
jecxz
out
mov
mov
pop
jbe
mov
mov
inc
push
insb
add
mov
stos
lret
mov
and
int3
fisubrs
and
sbb
push
scas
sbb
jecxz
push
imul
aaa
test
in
adc
testb
nop
in
mov
adc
xlat
dec
roll
add
aad
call
sub
mov
jae
sbbb
dec
sub
mov
mov
pop
jbe
xchg
insl
adcb
ja
clc
test
popf
sub
daa
fisttpl
movsl
lea
ja
mov
lret
jp
mov
xchg
cmp
dec
and
loope
es
in
xor
mov
ds
push
in
aad
iret
mov
cmc
lret
push
and
or
adc
mov
pushf
in
and
fnstsw
fsubs
dec
adc
dec
sub
dec
push
mov
sub
or
pop
push
sub
jmp
rcrb
stos
xor
jmp
in
je
cmp
bound
xor
enter
pop
mov
cmp
sbb
int3
cmp
add
sub
dec
jnp
fdivrl
adc
popa
mov
cmpb
mov
imul
cs
addr16
xlat
cmp
call
cld
clc
and
cmpb
lret
je
xor
inc
inc
xor
idivl
mov
test
pop
or
jle
pop
stos
sub
and
out
xchg
mov
mov
int3
inc
sbb
std
scas
addb
out
xlat
add
xor
int3
push
out
arpl
stc
inc
dec
sbb
dec
in
in
fists
imul
or
xchg
into
dec
mov
rcll
inc
loope
add
add
imul
ljmp
mov
and
aaa
lods
hlt
lret
xor
lock
mov
in
and
inc
cmpsl
sbb
cmp
jge
dec
outsl
add
xchg
adc
loop
sbbl
ja
xlat
cmp
jmp
fidivrl
loope
loope
jno
inc
mov
test
lock
mov
out
lods
inc
mov
add
mov
es
das
pop
add
daa
aaa
cmp
popf
lock
and
jl
lock
inc
mov
scas
into
mov
cmp
lea
xor
std
pop
lret
sbb
pop
sbbb
pop
mov
lods
xchg
loop
add
add
add
xchg
and
jl
cmp
dec
das
stos
outsl
imul
imul
mov
imulb
loope
dec
add
mov
leave
xchg
lds
faddp
aas
push
imul
and
stos
xchg
lea
mov
cmp
das
shlb
jmp
push
dec
sub
push
lods
mov
das
sahf
scas
push
sbb
int3
adc
ss
xlat
jnp
lcall
xchg
jle
sub
out
pop
adc
data16
inc
sub
aas
pop
cli
inc
imul
jno
ljmp
cmpsb
ss
pop
sub
stos
in
dec
dec
mov
and
xchg
shll
aad
cmp
jns
mov
aam
xor
push
sub
jbe
divb
andb
or
pop
xchg
ror
aad
xchg
mov
add
fadd
push
inc
sahf
fwait
xor
inc
cmp
or
mov
vmovaps
je
fwait
outsl
mov
movsl
mov
aam
mov
xchg
inc
sub
clc
inc
mov
pop
inc
fbstp
stos
jmp
inc
mov
js
call
js
mov
loopne
test
mov
shr
in
pop
imul
add
cltd
std
inc
js
xor
pop
fisubl
sbb
add
ds
or
or
jns
std
fcompl
xor
fwait
xchg
fcoml
cmp
xor
rorl
aas
lods
sar
lcall
push
mov
into
or
repz
ret
mov
fs
pop
and
ja
mulb
lcall
scas
adc
test
incb
lea
dec
jmp
push
or
inc
jl
sbb
adc
jae
push
in
adc
mov
xchg
push
mov
daa
jl
outsl
mov
push
out
jbe
pop
xchg
and
add
mov
jl
xor
lods
imul
insl
testb
fs
jp
cmpl
test
aad
in
cltd
mov
iret
shll
pop
rcrb
shll
sbb
movb
add
jbe
fwait
aam
std
outsb
dec
out
hlt
insb
mov
addr16
xrelease
repz
pushf
add
mov
adc
xor
std
pop
mov
int3
aam
lahf
cmpb
ret
fstp
jg
mov
mov
loop
xchg
add
add
orl
dec
fdivrs
bound
xor
lcall
mov
xchg
lods
jbe
cmpsb
or
ret
stos
jae
mov
mov
adc
cwtl
push
push
sahf
add
xor
sbbb
jge
cltd
dec
loopne,pn
dec
cmp
fmuls
aad
dec
mov
adc
mov
cmp
or
stos
jno
pop
cmp
jecxz
and
leave
lock
or
daa
push
das
inc
dec
out
insb
aas
sbb
das
sbb
nop
enter
xor
push
adc
xchg
add
sbb
cmp
cmp
aam
std
xchg
pop
cmp
cmp
mov
dec
push
int
fwait
mov
ljmp
test
sub
push
icebp
pop
lods
jns
or
dec
ljmp
mov
notb
movsb
stos
sbb
mov
mov
pop
cmp
inc
cmp
les
cmc
iret
adc
lock
jo
or
out
std
add
hlt
mov
push
pusha
ret
in
es
jbe
sbb
out
inc
xchg
push
cmp
int
add
mov
imul
dec
vandps
test
fldcw
adc
jge
fisttpll
mov
push
adc
mulb
xchg
adc
ror
cmpb
sbb
sub
ljmp
in
jno
xchg
mov
mov
sub
push
imull
iret
imul
adc
repz
stos
cmpl
shrl
in
rcrl
mov
inc
ja
lret
push
test
mov
mov
mov
add
mov
vpsubw
cmp
sub
push
sbb
jmp
fbstp
push
sbbb
insb
out
das
xor
jp
xor
xor
xchg
mov
sbb
pop
push
push
in
xchg
ds
add
xor
jg
cltd
pop
and
lock
rolb
xchg
dec
inc
cld
xchg
nop
out
sub
inc
jne
fimull
or
insb
push
imul
pop
jne
xchg
in
daa
mov
xchg
sub
mov
xor
in
dec
and
dec
lcall
xchg
mov
out
push
adc
or
sub
inc
test
cwtl
cmp
or
mov
inc
push
stos
or
ret
or
add
test
sub
or
jb
mov
xchg
stc
jl
inc
xor
outsb
bound
xor
lret
std
pushf
xchg
and
push
xchg
pop
out
inc
leave
addr16
xor
movl
mov
ljmp
add
into
pop
out
bound
jg
pop
inc
mov
mov
dec
filds
sub
cmp
lds
xchg
ds
push
movsb
push
add
repnz
imul
fs
sbb
mov
cli
push
ror
jo
pop
std
outsl
rclb
xchg
and
sbb
or
adc
fists
inc
jae
aaa
jb
mov
sbb
movsb
call
loopne
test
pop
fldenv
cmp
loopne
sahf
pop
jmp
jno
inc
mov
and
cld
sbb
leave
push
lahf
dec
fwait
push
loopne
push
pop
iret
push
jecxz
int
cmp
jbe
iret
shlb
stos
and
jne
fists
jb
add
adc
pop
or
pop
jp
xchg
out
mov
and
std
test
add
pop
pop
fwait
mov
les
push
push
sbb
adc
enter
int
pushf
pusha
sub
notb
popf
enter
or
lea
xchg
add
int3
jmp
pushf
mov
dec
das
addr16
and
imull
je
add
xchg
and
es
mov
fnstsw
aad
cwtl
addb
cmp
mov
or
dec
sbb
jecxz
mov
orb
icebp
sbb
scas
xchg
xchg
sbb
mov
mov
push
pusha
cwtl
mov
scas
cli
and
out
mov
imul
imul
int3
xchg
dec
push
cmp
lock
gs
sub
scas
mov
rorl
mov
jb
mov
dec
jne
insb
test
jmp
pusha
xor
mov
cmp
jl
pop
xor
into
stc
lods
lock
test
sub
add
xchg
fnsave
xor
cld
jae
dec
rcrl
stc
jmp
movsl
jmp
pop
mov
lret
ret
out
jns
jae
mov
dec
fsubr
push
cmpsb
sub
sub
or
aad
test
lods
frstpm(287
adc
adc
xchg
jp
repnz
push
out
jno
pop
ret
sarl
xor
icebp
add
outsl
sbb
mov
mov
lds
add
clc
pusha
adc
js
dec
rclb
xor
aas
out
cmp
or
lock
dec
gs
xchg
js
sbb
fistpll
call
lods
mov
out
lock
cld
addl
loop
fistpll
mov
inc
adc
enter
inc
push
out
dec
out
xchg
adc
dec
dec
mov
scas
sbb
dec
fimull
adc
daa
adc
push
lods
and
cmp
sbb
pop
adc
out
jae
sub
aas
stos
lret
mov
and
jns
mov
clc
jecxz
es
iret
loope
add
or
movsl
cmp
imul
sub
jbe
call
pop
mov
jle
les
in
pop
ret
insl
fs
nop
scas
pusha
add
aad
jns
push
push
arpl
mov
outsb
add
adc
adc
jle
dec
out
mov
out
push
nop
push
lods
cmp
int
aad
xor
stos
or
dec
push
imul
adc
dec
inc
jnp
roll
sub
pop
cld
fdivs
lret
sub
sub
movsb
movsl
out
mov
mov
fdivp
cli
leave
int
iret
xor
ret
jbe
xchg
das
adc
push
ret
jl
inc
sbb
pusha
mov
lcall
loopne
bound
add
xor
sub
fnstenv
jae
pop
stc
mov
xchg
jo
clc
hlt
test
lahf
cmp
lods
loope
out
addr16
mov
fstl
mov
mov
rolb
or
sbb
js
test
cmp
or
jne
jmp
jns
popa
dec
push
and
into
mov
pop
cmp
outsl
mov
jmp
imulb
imul
imul
js
pop
fmuls
add
cmp
hlt
push
adc
scas
mov
jno
std
aas
gs
icebp
mov
sti
daa
stc
stos
mov
pop
movb
lods
cmp
sub
test
sub
pop
je
mov
fwait
outsl
out
enter
mov
lahf
cmp
dec
fidivl
repnz
stc
pop
cmpsl
mov
xor
or
pop
mov
hlt
popf
fcoml
dec
cli
pop
popa
sbb
sub
sub
xor
mov
ret
aam
xchg
hlt
adc
lret
xchg
sti
sbb
push
pushf
andl
rorl
or
xchg
push
jle
imul
inc
mov
sbb
or
inc
insl
inc
mov
mov
jne
sbb
add
and
or
pop
jmp
popa
in
movsl
mov
dec
gs
loopne
inc
xor
or
push
out
jo
pop
rol
add
rcrb
lcall
repz
fnstsw
jle
sbb
imul
dec
nop
call
enter
loop
gs
push
cwtl
adc
xchg
mov
push
shlb
and
adc
or
jno
adc
jle
pop
mov
fists
hlt
or
movsl
xchg
subb
pop
mov
cwtl
fcmovu
fistps
fisubrl
and
inc
mov
cmp
inc
jmp
cmc
inc
aaa
mov
fildl
int
outsb
frstor
pop
pop
push
imul
cs
add
push
jecxz
orb
add
inc
les
xor
push
inc
es
or
daa
das
enter
inc
jae
imul
insl
lea
outsl
xor
fmuls
push
cmp
mov
push
or
and
jecxz
nop
lahf
cmp
xchg
test
jae
jnp
push
iret
ret
in
inc
jns
ljmp
outsl
adc
add
inc
adc
jns
pop
lret
out
mov
xorb
in
fs
sbb
fsubl
roll
std
andl
test
ret
jns
or
jne
cli
mov
xor
cmp
lods
arpl
push
arpl
pop
imul
andb
dec
divb
fisubrs
out
xchg
ret
sbb
out
sbb
ds
mov
xor
push
cmp
inc
testl
cmp
sbb
mov
fsts
mov
loope
mov
fwait
out
lret
or
cmpsl
jbe
roll
mov
rcll
sbb
stos
jge
add
ljmp
fdivrs
fwait
mov
rcr
xchg
mov
gs
inc
fwait
andl
jl
jmp
jle
push
cmc
notb
dec
jb
rcrl
gs
sbb
mov
orb
clc
mov
mov
cmp
xchg
push
ret
mov
shlb
xor
cwtl
xchg
daa
addl
fdivrl
push
clc
fmuls
add
repnz
xchg
test
or
push
add
cld
mov
xchg
fcmovnbe
inc
inc
push
aaa
int
push
mov
js
cli
cmpsl
pop
out
cmp
aam
lahf
ds
and
ror
sub
loope
add
insl
sub
outsl
add
int
push
mul
int
inc
lods
mov
lret
and
lds
push
fcmovbe
jp
iret
dec
mov
pusha
jecxz
imul
mov
cmp
clc
mov
pop
jl
hlt
sub
xor
add
cmp
stc
loope
imul
repnz
rol
push
dec
sahf
mov
in
rcrl
rcll
push
mov
ds
jns
lret
jb
aas
in
dec
enter
lods
scas
mov
cli
push
lea
testb
pop
xchg
adcl
lret
hlt
cmpsb
cmp
mov
cmp
cmp
gs
icebp
in
in
cwtl
cmp
ret
mov
push
push
ss
sub
xchg
inc
add
xor
dec
inc
lret
aad
dec
cmp
cmp
sbb
fisubs
mov
ficomps
jnp
mov
addr16
xchg
jge
cmp
adc
addr16
xchg
xorb
dec
mov
lret
dec
fwait
jnp
jl
push
nop
bound
dec
xchg
cmp
sti
shlb
mov
leave
fdivl
inc
aas
lods
imul
gs
incl
cwtl
je
inc
cld
xor
std
out
push
shlb
sti
push
pop
movsl
les
idivl
xchg
mov
jg
pusha
es
mov
and
iret
sbb
jnp
jno
ss
or
dec
push
sbbl
sub
mov
or
fwait
jl
xlat
test
mov
hlt
mov
xor
int3
lret
mov
cmp
popf
jmp
aaa
rcll
lcall
sub
lods
out
sahf
cs
pop
jg
xchg
xor
loopne
adc
adc
lret
fisubrs
cmpsl
mov
fcoml
daa
inc
add
out
loop
mov
jmp
outsl
movsl
test
xor
popf
lds
shl
stos
push
rclb
fwait
mov
inc
cmp
add
int3
sub
ljmp
jo
cmp
scas
mov
xor
jb
inc
lcall
mov
xchg
mov
sbb
mov
das
cmp
push
ret
pop
ss
jb
mov
iret
pop
dec
push
fsubr
clc
push
pop
jl
insb
add
roll
jecxz
adc
mov
fdiv
lock
sahf
mov
imul
mov
xchg
jo
push
inc
sbb
stc
or
ss
jmp
lds
out
mov
push
mov
pop
xor
imul
add
xchg
rcl
jne
es
incb
mov
mov
sub
jb,pn
cwtl
ret
mov
push
add
jo
cmp
ljmp
ljmp
mov
lcall
ja
stos
arpl
dec
mov
mov
bound
push
xor
cltd
mov
lock
movsb
push
inc
es
test
jbe
jns
in
stos
movsl
mov
ja
push
push
xor
add
lret
in
es
sbb
sbb
xor
xchg
mov
mov
add
mov
cli
push
and
clc
cmc
push
sub
sbb
enter
stos
cmpsl
insl
xchg
cmp
subb
sbb
nop
sbb
loope
pusha
add
loopne
add
bound
lods
jge
ljmp
dec
pop
push
fwait
jnp
mov
mov
jg
mov
imul
js
stc
cli
mov
repnz
xchg
movsl
test
out
dec
mov
in
pop
movsb
aas
outsb
rclb
or
mov
das
out
lret
out
repz
cmp
popf
ficoms
sti
cmc
jg
movsb
shrb
mov
jb
sub
cmp
push
dec
cs
or
cmp
call
jl
adc
sti
sbb
add
sub
jnp
xor
sti
xorl
sub
fnsave
loopne
push
imul
dec
sbb
xchg
lea
ret
dec
in
movsb
cmp
sub
stos
gs
add
sbb
mov
ja
nop
dec
cmp
inc
pop
repnz
push
and
popf
mov
add
stos
call
adc
incb
out
addr16
push
cmpsl
nop
scas
mov
cltd
test
stos
adc
jmp
out
cwtl
push
popf
faddl
or
mov
rolb
orl
add
adc
loop
insb
dec
test
test
xchg
sub
fisubl
into
lods
roll
inc
or
mov
mov
push
sbb
push
scas
outsb
loopne
lods
fisubs
adc
cmpsb
in
cmp
or
rorl
lds
shl
dec
adc
cmpsl
jecxz
dec
popa
sbb
jns
mov
test
sbb
sbb
xlat
cld
push
push
and
pop
cltd
cmp
adc
mov
or
mov
push
add
icebp
int
divl
or
inc
pop
mov
jle
rcrb
pop
dec
les
int
jg
pop
ss
call
insl
adc
add
or
or
inc
test
pop
in
mov
inc
rorl
ja
jmp
inc
rcll
jl
pusha
loop
fucom
pop
jge
nop
pop
movsb
mov
iret
xchg
xchg
test
adc
out
sbb
mov
das
insl
jnp
out
fmull
in
and
mov
nop
pop
mov
mov
lcall
xlat
dec
es
mov
das
jmp
sub
test
jne
mov
and
cmp
jmp
or
xor
and
sub
adc
adc
cmp
push
mov
adc
daa
outsb
popf
add
mov
push
jns
aam
dec
mov
in
adc
bound
or
push
jno
mov
fwait
and
or
add
sub
xchg
and
aam
cmp
rcll
push
xchg
and
imul
jle
les
adc
or
test
mov
daa
in
fnstenv
mov
loop
xchg
aaa
push
mov
sti
in
cmp
adc
mov
cwtl
cwtl
ret
int3
inc
sbb
mov
sub
add
dec
pushl
add
and
loopne
mov
cwtl
or
rorl
ja
lahf
inc
mov
push
cmp
mov
lahf
lret
pushf
clc
xlat
fisttpl
outsl
xchg
es
sub
lcall
js
dec
jmp
push
loopne
xchg
sub
jecxz
iret
sub
cmp
inc
pop
or
pop
push
aas
lock
adc
fldlg2
fwait
xlat
add
inc
in
les
adc
mov
or
les
jae
xlat
mov
pop
insb
mov
jl
les
out
sub
sub
fbstp
lea
aad
xor
test
cmp
ja
push
dec
iret
into
cwtl
sub
jmp
push
test
dec
or
mov
cld
gs
and
or
mov
ds
ja
inc
incl
mov
add
fsubr
jb
popa
cli
jge
sub
shlb
imulb
cmc
insl
add
push
mov
push
mov
cltd
add
or
in
jp
dec
fcos
test
xchg
jbe
pop
xor
mov
adcb
outsb
push
shlb
dec
div
lret
mov
aam
xor
aaa
cs
outsl
mov
cmc
loop
sbb
test
xchg
cmp
and
jl
lock
inc
inc
xor
arpl
add
fimull
and
cmp
and
out
pop
xchg
or
les
sbb
mov
flds
arpl
aaa
add
mov
int3
lods
xchg
loop
xor
incb
cwtl
movsl
lcall
icebp
stos
icebp
add
ds
in
idiv
into
loope
mov
imul
sub
push
daa
imul
dec
inc
inc
icebp
int3
push
insb
arpl
addr16
sbb
ja
stc
fidivl
add
inc
pop
lods
push
mov
fs
data16
iret
shrl
push
aam
add
lret
ljmp
stc
add
mov
lods
inc
mov
mov
dec
loopne
scas
pop
mov
andl
cld
test
js
mov
fisttps
decl
jle
ss
push
and
ret
sahf
daa
xor
pop
js
scas
dec
xorl
je
jne
xor
xchg
add
inc
mov
fldl
leave
dec
out
mov
test
insb
xchg
inc
loope
mov
push
imul
pop
push
xchg
fcmove
inc
fdivrl
minps
nop
jmp
and
push
sbb
rcll
mov
lret
popa
mov
test
mov
add
movsl
push
sbb
push
inc
testb
addr16
pop
movsb
aaa
cmp
push
sub
xchg
repnz
lea
scas
cs
cmp
dec
and
divb
test
imul
sbb
cmp
mov
add
loope
and
jae
jle
pop
test
bnd
cld
mov
mov
lahf
and
je
sbb
cmp
jge
lods
sbb
stos
je
stos
jg
ss
jmp
lock
fildll
jb
mov
add
cmc
mov
sub
lods
push
xor
adc
and
or
jnp
xor
xchg
mov
add
or
push
into
hlt
test
aam
xor
cmp
inc
cmp
int
movsl
movsl
rorb
xchg
ficomps
jbe
jb
arpl
xchg
cld
cli
mov
pusha
movsb
xchg
sub
leave
sbb
cmp
sbb
mov
sub
les
movsl
iret
icebp
fwait
mov
pop
addl
adc
bound
mov
or
push
lds
outsb
sub
inc
jno
mov
hlt
out
je
jbe
out
lcall
push
xor
jge
movsb
iret
outsl
jg
sub
in
data16
jo
push
push
rorb
loopne
cmp
aam
cli
frstor
inc
ret
add
cmp
jb
dec
stos
sarb
shll
push
fisubl
lods
imul
dec
ja
loope
adc
xor
repnz
or
jp
hlt
jl
shlb
cwtl
push
xchg
testb
fcompl
mov
adc
cmp
shll
ljmp
xchg
mov
or
xor
movsl
cmp
sbb
and
push
xchg
adc
cmp
push
push
mov
repz
aad
and
lahf
mov
andl
fmuls
movsb
lods
adc
imul
jp
jb
dec
add
mov
ret
iret
and
out
testb
sbb
outsb
aad
adc
lret
mov
or
ret
pop
cmp
outsb
adc
pop
or
mov
fsubrl
jno
rcrl
subl
mov
inc
adc
stos
and
pop
pop
jmp
sahf
xchg
jae
test
andl
dec
add
jmp
outsl
pop
sti
stc
lea
sub
repnz
or
sub
arpl
ficoms
inc
shlb
fsubrl
push
or
cmpsb
mov
pop
in
lods
mov
cmp
sbb
or
mov
repz
lcall
mov
mov
idivb
sbb
jle
leave
xor
daa
add
lods
lds
fs
mov
mov
outsl
ret
mov
insb
clc
inc
loopne
das
xchg
mov
mov
add
cmpsl
out
cmpsb
push
xchg
and
cmpsb
add
stos
repnz
sbb
jb
pop
orb
dec
or
sbb
lds
bound
fwait
push
push
test
mov
jge
sbb
add
dec
push
mov
xchg
out
repz
mov
movsb
in
jecxz
arpl
scas
lcall
mov
dec
shll
mov
test
pop
pop
enter
xor
imul
ficoml
aaa
pop
sbb
adc
mov
xchg
sbb
xchg
jnp
outsl
fistps
bnd
sbb
and
cwtl
fisttpl
add
lahf
and
lods
cltd
hlt
icebp
repz
divl
hlt
adc
jo
mov
cmp
push
fnstenv
jecxz
psubd
add
fnstsw
dec
jmp
punpcklbw
pop
sti
cwtl
add
sub
or
push
jae
dec
jb
sbb
push
adc
mov
fiadds
std
repnz
loop
int3
stos
scas
mov
dec
mov
daa
scas
xchg
and
int
cmp
repz
pop
jnp
cmp
les
pop
das
xchg
fstpt
adc
and
aad
mov
scas
clc
popa
push
fs
fstpt
test
dec
inc
push
xor
pop
pop
xor
test
add
jb
sub
jbe,pt
jmp
cmp
inc
xchg
mov
cli
mov
pushf
das
or
cmc
sub
out
pop
sahf
or
iret
repz
pop
mov
pusha
mov
fbstp
and
out
push
sbb
adc
fbstp
aam
xor
inc
pop
sub
add
mov
fwait
inc
cmp
pop
popf
cltd
mov
dec
mov
js
sub
fstpt
jnp
out
push
aas
lods
in
sbb
pop
inc
outsb
hlt
iret
push
cmp
mov
cltd
loope
jo
mov
xor
lock
mov
adc
or
inc
inc
cmp
pop
jmp
mov
push
mov
jo
or
push
mov
pop
jns
je
jg
sbb
pusha
inc
pop
movsb
aam
cld
push
mov
loope
daa
xchg
mov
adc
in
imul
jno
ret
fscale
cltd
pop
and
sbbl
outsb
out
sub
mov
push
dec
mov
or
jecxz
xor
push
push
outsl
hlt
fcoms
scas
pop
loopne
fisubs
mov
mov
sti
sub
add
inc
fsub
clc
pusha
jle
and
add
jb
mov
adc
jge
xcrypt-ctr
cmpsl
sbb
cld
jg
adc
icebp
inc
sub
xlat
pop
aam
cmpsl
mov
jns
xchg
loopne
jae
cmp
fimuls
xor
adc
out
dec
lret
push
xchg
adc
push
leave
cmp
je
les
pushf
lret
push
push
insl
dec
loopne
andl
lea
leave
fcompl
dec
cmpsb
dec
add
dec
loope
push
repnz
pushw
sti
jle
cltd
insb
push
test
jbe
outsl
jns
jne
dec
mov
adc
adc
aaa
xor
int3
out
out
hlt
idiv
insl
in
das
lods
dec
enter
pop
sbbl
mov
sbb
pop
xchg
out
pushl
and
jne
and
jmp
lret
lea
sti
idivl
dec
test
stos
cmp
jnp
pop
xlat
dec
loop
imulb
aas
xchg
and
mov
jl
loope
cmpsl
xor
testl
lea
xchg
lcall
imul
sub
xchg
xchg
inc
xchg
out
adc
add
cltd
sub
insl
ljmp
fistl
cwtl
xchg
aaa
xor
ds
mov
aas
cmp
popa
inc
data16
lahf
mov
sbb
loopne
outsl
movsl
lds
sub
jge
je
add
fcomp
fstpl
ljmp
cwtl
and
cmp
dec
mov
push
seto
mov
cmp
stc
sub
addr16
xchg
loop
mov
mov
dec
cmp
fstl
aam
sub
cmp
stos
dec
xor
mov
addr16
cs
arpl
cmp
dec
std
mulps
lret
add
rolb
cs
push
mov
mov
icebp
cli
hlt
mov
fnstcw
or
mov
xor
mov
dec
cltd
sti
mov
push
mov
jp
cltd
in
test
out
hlt
rorl
push
adc
dec
flds
ffree
mov
mov
aas
xchg
add
loopne
mov
rorl
mov
sub
xor
fisttps
sbb
mov
lcall
sahf
lock
iret
mov
add
cs
stc
icebp
pop
xchg
mov
sub
cmpb
je
fnstcw
outsl
push
inc
sbb
aaa
daa
imul
add
sbb
xlat
mov
jo
bound
adc
cmp
sbb
mov
loop
mov
out
cmpsl
or
cmpb
loope
xor
and
notl
and
int
or
or
xor
xchg
add
daa
inc
add
cmc
in
outsl
push
cmpsl
flds
movsl
bound
ret
stos
pusha
mov
ss
mov
out
cmp
js
mov
and
mov
dec
lcall
mov
adc
frstor
push
xor
xchg
in
repz
inc
push
pushf
aaa
xor
std
jg
imul
push
sar
pushl
mov
ljmp
outsb
xlat
fnstsw
cli
inc
into
push
sti
ljmp
dec
in
push
test
movsb
arpl
push
pop
ljmp
push
loopne
xor
and
lcall
push
lcall
push
fistpl
xlat
fsub
dec
nop
jle
lods
sarb
mov
mov
jl
or
mov
and
iret
pop
xor
int3
aad
outsb
sbbl
mov
xor
pusha
dec
repnz
mov
rorb
xchg
push
sub
mov
out
mov
push
cmp
insl
int3
cmc
mov
adc
jp
push
cmp
sub
pushf
mov
sub
or
hlt
rcrl
mov
adc
or
xor
imul
and
in
inc
cmpsb
test
jp
adc
pusha
lds
push
sbb
inc
inc
mov
stos
loope
dec
or
shlb
ss
and
movl
ss
notb
jge
ret
loope
push
push
xchg
aas
insl
mov
cmp
outsb
xchg
jge
pop
pop
loop
mov
mov
and
jl
pop
and
jb
bound
push
int
push
inc
pusha
inc
int3
or
dec
inc
lods
fbstp
frstor
mov
or
roll
xchg
push
pop
push
lea
push
out
sbb
rorb
enter
arpl
ljmp
dec
enter
in
rolb
ss
jb
push
sub
cmp
ljmp
sub
push
bnd
aad
sbb
dec
cld
mov
ja
cs
jo
in
fwait
pop
ret
imul
mov
inc
out
shl
ret
cmc
cmp
mov
movsl
adc
mov
mov
sbb
outsl
les
cltd
icebp
pop
push
idiv
es
cmp
icebp
xchg
sub
aaa
mov
fldl
pop
clc
xor
cmp
lahf
cmp
mov
movsl
aas
mov
push
lcall
push
int
call
mov
sub
pop
and
lahf
xchg
lret
push
mov
fsts
xor
out
cmp
rcrb
daa
inc
loopne
add
sbb
pusha
fcoms
inc
scas
mov
mov
pop
les
xor
jbe
stos
int3
sarl
outsl
outsl
and
sbb
divb
icebp
jae
loope
paddw
cmp
push
dec
or
in
sub
jo
dec
pop
dec
aaa
jg
mov
mov
cmp
mov
testl
sub
mov
daa
push
pop
lcall
repz
out
dec
inc
fldt
pop
loopne
adc
push
xchg
mov
add
mov
push
xchg
adc
nop
gs
add
push
mov
aam
add
adc
test
mov
sbb
jae
sub
addr16
sbb
or
jno
fisubs
sub
sbb
xor
dec
jb
sub
xchg
cmp
ret
mov
arpl
ficompl
movsl
test
or
ret
mov
xor
inc
jno
sahf
pop
push
pop
xorb
es
stos
mov
int3
add
and
in
leave
sub
mov
or
push
sarl
sbb
lret
cmp
mov
inc
bound
clc
xor
iret
pop
shll
dec
xchg
call
mov
pop
repnz
push
fisubs
dec
push
push
mov
pop
lahf
adc
mov
into
jbe
adc
or
add
fistpl
sbb
xor
fdivl
cmc
frstor
fmuls
lahf
in
clc
jnp
xor
cmp
ss
mov
and
imul
xchg
dec
imulb
mov
int
icebp
lods
sbb
dec
orl
es
mov
pop
into
movsl
je
push
loope
ret
rcll
pop
jecxz
pop
jmp
dec
xor
notl
sahf
xchg
movsl
mov
out
mov
adc
cltd
adc
call
xchg
inc
sbb
cs
shrl
xlat
jae
faddp
dec
and
adc
xchg
jo
int3
sbb
adc
lds
adc
in
inc
gs
mov
loop
inc
mul
fbld
push
fadd
hlt
cmp
xchg
imul
pop
repz
scas
push
xlat
call
add
fdiv
inc
add
adc
or
cmp
sub
repz
jge
sbb
xchg
and
xor
xchg
sti
add
jo
add
jl
add
movsl
cltd
dec
push
and
js
pop
rol
jmp
lret
push
jno
imul
pop
in
outsl
jge
popf
add
leave
xchg
ljmp
xor
and
mov
adc
xchg
ljmp
loope
iret
aam
inc
stc
stc
and
sub
in
shll
stos
adc
addl
lret
mov
mov
or
cs
insb
fisubs
sahf
jo
repz
pop
lret
cmp
shlb
adc
loopne
imul
call
in
std
jne
shr
cwtl
aas
into
loope
in
adc
and
imul
cmpb
loope
cmpsb
jle
jae
loop
lret
rolb
mov
adc
push
cmp
push
nop
and
mov
daa
add
aas
ret
dec
xor
inc
call
loopne
add
out
stos
in
and
mov
dec
ror
les
mov
test
into
inc
jg
push
xchg
xor
add
push
inc
add
icebp
psubsw
inc
sub
mov
fistps
or
push
jnp
dec
xlat
wbinvd
xor
jmp
int3
sti
pop
sub
sub
mov
outsl
jecxz
pop
ret
sub
xchg
imul
mov
push
out
dec
aad
shll
mov
xor
and
push
xchg
sbb
test
sub
rorb
xor
scas
popa
sbb
mov
mov
jnp
xor
and
out
adc
mov
xor
add
cmp
push
test
inc
leave
mov
mov
aaa
sub
dec
mov
dec
ja
mov
fs
lcall
adc
mov
shll
jmp
mov
cld
or
push
mov
cmp
pop
lcall
lock
pop
mov
mov
adc
inc
ret
fldl
lahf
pop
addr16
xchg
lret
dec
and
push
or
push
in
sub
call
sub
inc
loope
adc
add
mul
dec
xchg
push
pop
pop
mov
jecxz
repnz
sbb
lahf
or
gs
add
insb
mov
stos
adcl
imul
add
add
daa
or
fbstp
push
dec
shl
fwait
sti
push
xor
sub
add
cwtl
ret
mov
js
sarb
or
es
das
inc
and
xchg
cwtl
sub
pop
push
lcall
imul
cltd
insb
sarl
insb
push
mov
push
pop
and
mov
jg
xchg
sub
or
arpl
jmp
sti
xor
cmc
and
paddb
dec
mov
in
imul
xor
test
test
aaa
sub
mov
js
mov
xor
icebp
arpl
js
aad
inc
xlat
pop
pop
and
scas
pushf
sub
call
jne
aad
sbb
iret
mov
aad
pop
pop
mov
hlt
stos
orb
rcr
ret
nop
mov
mov
jg
sahf
loop
cmpsl
cld
outsb
sub
xor
dec
icebp
lret
ljmp
das
dec
outsb
adc
popa
pop
pop
pop
shlb
dec
movsb
mov
movsb
xchg
rcll
addr16
cld
inc
jno
mov
pop
fsubrp
push
add
lcall
mov
sbb
push
mov
test
mov
and
aad
push
mov
nop
jbe
shrb
xorb
adc
jnp
mov
jae
in
xchg
adc
pop
scas
shll
cmp
leave
loopne
dec
push
pop
mov
jb
addr16
out
std
jne
je
sbb
popa
lods
adc
insl
add
cmp
je
cmp
mov
cli
xchg
add
lcall
jecxz
dec
xchg
and
lods
pop
in
xchg
aam
adc
xor
fldl
lock
das
sbb
int3
mov
outsb
imull
and
inc
pop
mov
jb
pop
cmp
ss
add
pop
push
cmp
pop
adc
jne
je
mov
scas
dec
lods
pop
sub
bound
test
xchg
test
cmp
pop
pop
pop
pop
add
jle
fxch
sbb
jge
mov
pop
repnz
mov
mov
out
push
jecxz
push
mov
and
cmp
inc
in
lcall
outsl
xor
mov
dec
push
insb
cmp
xchg
jno
jno
push
aas
mov
shlb
imul
fisubrl
sahf
das
shrl
xor
mov
movsb
hlt
mov
and
lea
and
mov
jge
mov
subb
lret
xchg
xchg
push
jb,pt
mov
cmp
movsl
xor
push
pop
lret
hlt
jl
jb
dec
pop
and
sub
inc
js
push
xor
mov
sbb
out
movsb
add
sbb
push
loope
add
xor
popf
mov
lret
add
cs
mov
into
push
mov
or
imul
rclb
or
test
int
inc
loope
incb
imul
push
mov
das
xor
aam
data16
jns
dec
inc
push
add
loopne
and
pop
into
std
iret
fcoms
in
and
in
aas
sub
mov
and
cs
inc
mov
add
in
ret
test
ja
test
test
inc
xor
xchg
sub
popf
sbb
adc
xchg
in
mov
xor
pop
mov
out
dec
ror
push
scas
mov
cli
sub
adc
add
clc
and
fwait
mov
mov
and
sbb
fildl
cmp
ljmp
push
xchg
xchg
inc
cli
mov
cli
out
insl
sbb
bound
lahf
add
js
lods
dec
and
fdivrs
sbb
add
adc
jno
int3
fcomps
fsubr
pop
dec
call
mov
lret
jmp
cmpb
and
push
rorl
sbbl
test
stos
nop
lock
dec
lret
fldl
fisubrs
addr16
pop
stc
adc
testb
out
addl
xchg
mov
sbb
adc
decl
sub
jmp
mov
icebp
push
lds
outsb
jecxz
std
mov
sub
int
mov
je
pushf
cmp
pop
or
xor
mov
push
and
add
gs
cmpsl
cltd
out
xchg
jb
test
ffree
cld
repnz
jno
push
dec
jge
mov
adc
lcall
rclb
cwtl
loop
sbb
sbb
pop
mov
gs
jp
aam
mov
and
jno
nop
lret
or
lods
cmp
cmp
pop
jb
adc
sahf
movsb
mov
jnp
scas
in
add
xor
les
inc
mov
cli
and
lock
adc
inc
out
dec
bound
xor
sbbl
movsb
pop
xchg
inc
addl
fdivr
lods
fwait
shll
jae
xor
rorb
mov
xor
jmp
xchg
jl
sub
fwait
insb
das
mov
fwait
pop
in
add
jnp
dec
mov
arpl
pop
cmp
mov
xchg
test
iret
enter
movsl
outsb
sub
add
xor
stc
push
enter
icebp
mov
jmp
mov
jmp
fdivs
mov
cmp
or
adc
mov
test
jg
and
push
les
dec
test
lods
adc
and
arpl
not
pop
fcomi
sbb
pop
inc
push
jg
push
daa
and
inc
mov
adc
cmpsl
push
in
enter
sub
sahf
add
sbbb
sub
adc
xchg
and
jge
movsb
icebp
pop
sbb
mov
xchg
add
mov
push
dec
pop
insb
ja
and
or
xor
sub
or
lahf
mov
fstl
cmpsl
sub
mov
mov
cmp
xchg
bound
aam
sub
lods
add
ficoml
xchg
call
fiaddl
ret
call
fldcw
jmp
pop
nop
xor
push
mov
mov
call
cmp
push
mov
insl
cltd
mov
push
cmp
daa
sub
lods
dec
mov
lock
xchg
xchg
xchg
mov
mov
mull
notl
lods
push
fmul
mov
mov
push
es
aas
pop
dec
adc
adc
inc
lds
xchg
inc
clc
xchg
cmp
jae
push
mov
lea
shr
shll
push
xor
inc
mov
dec
and
jnp
xor
repz
sbb
xor
aad
lods
repz
jns
mov
add
push
push
fsubrl
rorb
fadd
mov
sti
bound
adc
lcall
into
cmpsl
ljmp
xchg
out
add
adc
pop
mov
dec
lds
btr
data16
sbb
rcrb
clc
fcompl
jnp
mov
pop
push
test
test
cmpsb
cld
into
xor
mov
push
cld
add
pop
negl
lds
pushf
or
sbb
sbb
lret
pop
pop
add
test
loopne
xchg
adc
pop
pop
xor
push
inc
popa
in
jecxz
repz
fildll
testb
outsb
je
dec
cvtdq2ps
inc
mov
sub
test
incl
sbb
sub
lret
mov
stos
or
mov
add
jno
bound
insl
sub
push
bound
mov
movsb
pop
pop
adc
or
jge
loop
out
inc
cmpsb
call
outsb
adc
pop
sbb
jge
add
push
mov
stc
xor
mov
xchg
inc
add
shr
push
fistpl
lcall
cli
sbb
xchg
hlt
in
adc
lahf
fimull
ljmp
jecxz
mov
push
out
push
stc
push
jg
out
xchg
dec
cmp
mov
call
dec
or
mov
mov
push
stos
mov
iret
data16
imul
add
cmp
mov
inc
cwtl
jge
push
add
sub
push
mov
sti
mov
push
sbb
fldt
imul
jb
pushf
fucomp
cmc
pop
or
sarb
cs
push
mov
je
and
mov
sbb
in
je
daa
cs
jb
pushf
scas
dec
scas
ret
in
push
sti
mov
xchg
das
sbb
ret
ficoms
pop
jle
pop
out
mov
mov
jno
inc
mov
jle
jp
pop
lods
sbb
dec
xchg
add
cmp
in
jo
jo
adc
jge
mov
test
mov
dec
and
and
and
aad
mov
add
sahf
mov
jge
loope
xor
lea
dec
mov
mov
insl
insl
mov
xchg
cmp
into
es
mov
and
sbb
incl
inc
cmp
cmp
scas
hlt
jmp
pop
adc
mov
cmpsb
sti
mov
test
adc
call
push
mov
cmp
push
pop
ja
cltd
test
icebp
cli
fsubs
rcll
push
sbb
shlb
push
enter
rorb
in
subb
sbb
cli
pop
cwtl
neg
jp
cmp
push
fmuls
js
in
bound
iret
and
pop
mov
nop
jmp
testb
adc
dec
lahf
fistl
aas
movsl
ror
push
in
xchg
xlat
bound
add
push
xor
xchg
xor
jmp
std
inc
or
inc
imul
mov
push
fnstsw
jl
jmp
clc
aam
xor
out
xorl
cmp
mov
sahf
jae
add
push
push
js
scas
les
fwait
dec
xchg
popa
and
push
cmp
or
test
aad
cmc
sub
or
jae
lea
push
cmp
sub
xchg
push
aad
clc
imul
lods
adc
lret
outsb
add
push
sbb
inc
jb
in
add
mov
or
and
sub
inc
mov
int
imul
and
and
jp
repz
in
mov
push
movsb
sti
xor
int
into
push
xchg
pop
ds
pop
or
inc
daa
sbb
orl
fnstcw
sub
pop
into
and
into
inc
outsb
out
bound
pop
js
mov
gs
pop
add
jle
cmp
adc
pushf
pop
sub
in
push
or
push
ret
sahf
push
sarl
sti
pop
movl
mov
pop
out
stc
adc
xchg
or
dec
xor
mov
dec
cmp
and
int
adc
aam
shlb
orl
sahf
push
dec
loop
sub
jo
lock
shrb
rcrb
sub
xor
mov
mov
add
movsl
ficomps
ljmp
fs
push
dec
mov
sub
mov
add
add
fstpl
movsl
jle,pt
jmp
inc
outsb
das
dec
dec
add
aam
cmc
cwtl
mov
pusha
leave
into
cmpsb
cmp
ds
sub
jge
adc
repz
jle
pop
popa
loop
and
jl
jg
dec
repnz
punpcklwd
mov
outsb
jge
jae
fists
leave
push
xchg
roll
pop
pop
gs
insb
popa
stc
jno
repz
int
rcrl
call
or
fs
ficompl
and
inc
leave
lods
insl
or
popf
inc
js
sub
mov
repnz
test
mov
stos
inc
adc
adcb
cmpb
ret
scas
add
pop
cwtl
fiadds
and
fiaddl
mov
fstpt
or
fcom
aam
ficompl
int
jmp
dec
enter
or
adc
pop
jg
add
clc
sbb
mov
cwtl
ficomps
sbb
pop
push
adc
xchg
xor
stos
push
adc
adc
fmuls
sub
cli
mov
jecxz
jecxz
in
sub
pop
cmpsb
sti
cld
sbb
ss
js
das
mov
mov
xchg
and
sub
cld
sahf
shrb
jge
cmpsl
mov
pop
into
in
pusha
stc
dec
fwait
leave
mov
xchg
movsl
gs
jl
lea
aaa
sub
cwtl
mov
sbb
mov
orl
popa
outsl
les
mov
cli
cmc
popl
pop
sub
xchg
cmp
outsl
sbb
mov
shll
addb
or
cs
add
cmc
xchg
xchg
rorb
mov
stc
xchg
test
lock
adc
ret
mov
or
lahf
cmp
in
vpaddq
in
add
outsl
cmpsl
mov
sub
cld
mov
rorl
sub
cwtl
gs
loope
push
jnp
push
std
push
push
add
xchg
outsl
in
mov
mov
sub
call
cmp
mov
enter
or
rcll
mov
or
fwait
popf
push
lock
adc
addb
cmp
dec
ljmp
cmp
jmp
jne
lret
idiv
sub
lret
mov
xor
and
std
lcall
ret
je
pushf
out
out
bnd
mov
lret
xchg
sbb
lret
pop
jmp
and
pushf
addr16
icebp
test
mov
imul
mov
ret
imul
add
cmp
sub
pop
xor
fwait
inc
scas
movlps
push
jno
sbb
rorb
fistpl
mov
sub
pusha
pusha
mov
std
sub
ds
movb
push
sub
cmp
jp
rorl
mov
outsb
ss
stos
ss
mov
ljmp
fcomps
pop
xchg
push
lahf
aas
rcrb
push
cwtl
not
mul
fcompl
ja
mov
mov
cmp
pop
or
mov
mov
ret
and
leave
fmull
pop
test
addr16
cmovno
jecxz
pop
push
popfw
insb
mov
xchg
sti
mov
pop
leave
xlat
mov
int3
jmp
das
fmuls
es
in
xchg
and
push
data16
dec
sub
push
popf
cmc
pushf
xor
popf
out
icebp
in
adc
mov
cmc
adc
decl
lods
lock
lods
or
pusha
int
jmp
and
xor
and
mov
test
ffree
add
fcomps
jge
aaa
shlw
movsb
pop
lods
push
xchg
pop
lahf
xor
aaa
addb
mov
cli
or
xor
mov
int
cmc
and
add
push
jge
mov
loop
xlat
loop
pop
or
sub
pop
add
addr16
mov
sahf
imul
lods
xchg
push
jbe
mov
pushf
xchg
out
and
xchg
cmp
mov
pop
addr16
into
sbb
sarl
filds
sub
jl
pop
lods
push
xor
mov
jno
dec
jl
out
notl
or
loopne
xor
mov
xorb
cld
cmp
cmc
fldcw
dec
mov
add
add
push
cltd
inc
fistpl
mov
adc
push
pop
ljmpw
push
shll
xor
cld
and
filds
jo
pushf
push
icebp
and
mov
sbb
sbb
cmpsb
cli
arpl
pop
xorb
stos
inc
mov
test
loop
into
lret
stos
out
lcall
sub
sbb
bound
and
push
sbb
aam
mov
mov
out
jne
enter
mov
xchg
jbe
std
xchg
mov
push
fs
cmp
stos
or
xchg
stc
mov
ds
fsubrl
lcall
inc
mov
adc
test
jb
loop
xorl
sahf
cmp
insb
dec
loop
sub
mov
sub
cmp
pop
add
inc
cmp
outsl
xor
lcall
nop
and
dec
push
or
sub
push
or
xor
cmpsb
push
mov
negb
inc
mov
xorl
mov
jnp
les
xor
push
call
or
js
fidivrl
mov
popa
insl
and
std
inc
jge
pop
push
adc
jg
cmp
insb
stos
adc
pop
lret
mov
and
daa
adc
xchg
jns
inc
mov
pop
cmpsb
testl
popf
mov
rcrl
outsl
ss
cmc
add
aad
or
lock
jmp
int3
cwtl
pop
cld
addr16
push
iret
loope
jno
ret
iret
arpl
fildll
inc
fdivrl
pushw
add
in
repnz
leave
jns
mov
add
and
fdivl
jle
fistpl
mov
or
out
cmp
and
mov
inc
dec
inc
push
add
sti
loopne
icebp
mov
out
push
insl
rorl
pusha
stos
lcall
mov
add
ficoms
xchg
xchg
xchg
push
sub
clc
sbb
mov
addr16
imul
or
lcall
mov
rorb
es
xor
adc
arpl
out
notb
xor
clc
clc
push
rcr
dec
mov
inc
mov
jge
add
test
nop
stos
adc
jo
fidivl
std
xor
rcr
lock
lock
pushf
in
out
jmp
sub
mov
jmp
loope
jp
movsl
loope
add
or
add
icebp
or
pop
xor
mov
pop
enter
lea
outsb
push
fisubrl
fs
arpl
std
fwait
scas
xchg
inc
push
or
sub
mov
ds
xchg
add
int3
int
adc
inc
dec
push
jmp
movsb
mov
dec
cmp
sub
sub
mov
test
adc
xor
mov
pop
push
lret
push
xchg
sbb
push
lock
pop
pop
insb
push
mov
lods
pop
cmp
insl
mov
push
dec
fildl
pop
mov
inc
pop
test
sarb
xor
nop
bound
pop
loope
loopne
js
test
add
mov
jns
sti
xchg
clc
push
movsb
mov
push
sbb
push
jae
mov
hlt
push
scas
pop
mov
addb
cli
stos
lds
and
jp
stos
iret
lods
andl
in
mov
mov
inc
cmc
aaa
inc
mov
add
jo
or
rcll
es
ja
cmpsl
add
cmp
leave
and
in
pusha
lds
shlb
loopne
movsl
mov
insb
pop
call
xchg
pop
loope
mov
mov
push
push
dec
ds
dec
hlt
sbb
sbbb
jo
or
cmpsl
push
arpl
mov
ljmp
pop
adc
and
cwtl
jge
xchg
sbb
xchg
mov
jge
xchg
mov
cli
adc
xchg
pmullw
sub
sub
jge
std
mov
divl
add
mov
push
rorb
mov
jp
mov
lea
sub
dec
dec
inc
mov
xlat
mov
out
and
jge
iret
dec
xor
sub
out
sti
xor
rorl
cmp
lcall
mov
fadds
and
ss
insl
aam
stos
scas
jbe
insb
imul
adc
std
into
pusha
mov
mov
insl
sahf
add
cli
sbb
lds
push
incl
das
mov
jge
data16
pop
out
add
stos
xor
addr16
loope
into
movsl
jmp
repz
lret
dec
fdiv
jg
test
mov
aad
inc
sub
ds
clc
inc
aam
ja
inc
cmp
fcmovb
aad
pop
push
or
or
sub
mov
push
push
sbbl
loope
cmp
cmp
adc
es
pop
sti
out
add
leave
gs
push
sbb
in
xchg
dec
pop
mov
pop
cmp
sbb
ret
jecxz
mov
and
repnz
cltd
ficoms
jmp
lods
push
bound
add
xor
fnstenv
adc
test
mov
mov
sub
cld
icebp
and
mov
fstpt
lret
imul
sbb
pusha
mov
xor
dec
fcmovb
sbb
dec
lds
inc
ss
xor
sar
in
mov
pop
negb
pop
mov
orb
mov
jmp
mov
sub
addr16
andb
dec
sbb
in
cs
adc
and
add
mov
pop
or
movsb
shlb
xor
xchg
xchg
mov
add
mov
pop
addl
sub
es
dec
xor
int
rol
xchg
dec
adc
insl
jnp
xor
cltd
jecxz
xchg
pop
loopne
or
popa
cmp
sub
fs
dec
repnz
leave
dec
imul
jge
je
hlt
dec
jmp
outsl
jp
dec
mov
xor
push
mov
fs
cmc
mov
imul
mov
mull
fs
movsl
cmpsl
jno
es
inc
std
fcoml
rorl
out
add
jae
sbb
inc
pusha
mov
rolb
out
pusha
xlat
or
xor
or
jne
std
add
adc
aas
fidivrs
fs
popa
jg
and
cmpsb
push
stc
dec
ret
cmovae
cmpl
popf
xlat
xor
lds
pusha
repz
push
dec
shr
push
outsb
mov
jp
repz
xchg
int
push
push
and
sub
and
mov
inc
idivb
add
lret
mov
dec
dec
adc
xor
rclb
push
aaa
scas
jp
daa
call
and
jmp
or
xchg
and
adc
sub
inc
push
push
mov
out
push
add
inc
push
fs
pop
les
loopne
jnp
mov
inc
pop
and
dec
scas
sbb
popl
js
push
shlb
lret
mov
jae
test
jno
add
out
test
jge
or
sarl
mov
fiaddl
test
decl
adc
push
cli
push
scas
inc
and
test
iret
cmpsl
pop
icebp
or
cmc
cmp
sbb
lds
jno
bound
ret
xchg
in
xchg
decb
cld
adc
sbb
sbb
das
lods
mov
cmp
lcall
add
lret
adc
mov
push
sbbb
in
scas
loopne
push
shll
fsts
stc
mov
loop
notl
push
fdiv
gs
jb
into
adc
push
out
rclb
repnz
fnsave
ret
cltd
sti
fcoms
adc
es
push
sub
fwait
mov
insl
shlb
fnstsw
dec
pop
cmpsb
xor
lds
push
push
push
push
add
xchg
out
lods
arpl
xchg
xchg
pop
das
dec
xchg
jne
fcoml
sub
mov
imul
inc
lock
cmp
adc
sub
xor
std
jl
mov
bound
insl
jne
mov
rcll
push
adc
es
cli
scas
or
sub
divb
test
cmp
lods
cmc
enter
push
and
cmp
mov
fdivrl
cwtl
cli
andb
sti
sbb
rcrl
addr16
and
adc
pop
das
push
je
mov
cmp
aas
push
in
icebp
xor
sbb
add
sub
push
loopne
dec
dec
xor
xchg
ljmp
mov
pop
fs
cmpsb
or
pop
add
frstor
sub
aam
cli
test
aad
fildll
dec
xchg
pop
cmpsb
mov
xor
out
add
sub
test
or
shll
inc
pop
divl
cmp
mov
cld
cmp
fcoms
mov
inc
jno
in
inc
idiv
mov
inc
es
lods
das
mov
out
mov
aas
cli
aad
push
jb
ds
stos
das
cmp
mov
jle
mov
jp
nop
and
xchg
not
xchg
popa
xchg
jle
push
pop
and
sbb
add
adcb
lds
pusha
jae
pop
daa
int3
or
pop
lea
pop
cltd
inc
test
mov
in
add
lods
mov
push
pop
aaa
dec
int3
xchg
inc
xorb
cld
xlat
into
sub
sbb
sub
dec
adc
push
mov
pop
jns
mov
push
mov
fnstenv
mov
test
xchg
leave
and
leave
jmp
les
cmovno
pushf
cmp
xchg
int
jl
pop
cmp
xor
pop
sbb
in
pop
adc
sub
push
mov
test
push
flds
cmp
xchg
inc
daa
dec
addl
in
call
cmc
cld
pop
fildll
pop
aas
push
jp
ret
pop
flds
pop
sub
mov
dec
lret
int
sub
pop
xor
mov
adc
test
aam
or
push
test
xchg
lock
clc
pop
xor
ja
cmp
test
addl
mov
cmpb
js
adc
add
or
loop
mov
or
lods
xor
scas
mov
mov
sbb
out
popf
jp
ja
clc
push
push
jmp
shrl
pusha
jecxz
addr16
push
xor
out
adc
pop
enter
sub
std
data16
int3
shr
mov
aam
in
pop
jmp
out
adc
daa
mov
aaa
fst
cmp
jmp
fimull
imul
mov
push
cmp
cmp
xor
or
imul
adc
lcall
into
loop
call
outsb
test
lock
inc
xchg
cs
push
outsl
jnp
fwait
jle
xchg
add
mov
dec
frstor
int
jp
xchg
mov
cmp
popa
data16
xchg
xorb
test
jns
cmp
aad
fstl
fstpt
xchg
pusha
mov
mov
cmp
popl
test
rcrb
notb
push
shll
pop
movsl
das
mov
dec
cmp
xchg
out
cmp
ret
sbb
aaa
das
and
and
pop
xchg
add
imul
or
add
out
jnp
jns
jb
pop
je
lret
cmpsl
xchg
mov
shll
adc
and
bound
cmp
xor
imul
pop
xchg
cmp
mov
jmp
fidivl
test
out
lret
outsb
lock
mov
pop
sbb
dec
andl
mov
xchg
jecxz
imul
shl
shlb
stc
lcall
daa
mov
mov
hlt
clc
sub
stos
sub
jno
jae
jg
into
jbe
jg
adc
push
jp
pop
loopne
xchg
mov
dec
lods
mov
pop
pop
imul
pop
add
sahf
inc
dec
fs
dec
xor
sub
mov
jae
ja
jl
inc
or
inc
imul
push
mov
push
push
adc
mov
clc
push
fdivrs
imul
dec
xchg
mov
std
shl
jbe
and
iret
adc
aas
outsb
sahf
mov
lret
rcrl
sarl
dec
jecxz
xchg
icebp
pop
mov
ret
jp
or
rcr
cmp
push
mov
jmp
pop
mov
sti
outsb
sub
aad
fistpll
inc
pop
into
push
movsl
insb
popa
fimull
sbb
fcom
cli
push
add
cmpsl
mov
dec
or
mov
inc
into
insb
dec
xchg
cs
lret
or
dec
jno
aaa
push
adc
lea
fldl
lret
out
push
add
loop
clc
testl
or
cmp
xchg
add
mov
or
jns
rclb
data16
sahf
sbb
push
je
xchg
xchg
mov
jg
movsb
les
jnp
push
cmpsl
rcl
xlat
cs
icebp
fs
jo
out
xor
faddl
dec
adc
ss
and
mov
pop
dec
mov
rclb
inc
mov
inc
mov
mov
mov
fiadds
mull
daa
jp
in
or
movsl
mov
or
loopne
andb
add
out
dec
xor
stos
imul
cs
jbe
mov
cmp
cmpsb
dec
stos
cmp
jmp
sarb
rol
fbstp
adc
rcll
mov
pop
test
dec
adc
xchg
testb
sahf
stos
pop
xchg
fucom
jp
lahf
xchg
cmpsl
insl
dec
test
sub
adc
sub
push
mov
inc
or
or
decl
or
push
cmp
fs
loop
mov
push
or
stos
sbb
dec
push
out
stc
sbb
leave
dec
jbe
dec
push
arpl
lret
push
sbb
leave
and
cmp
jle
push
or
adcb
and
or
cwtl
and
movsb
mov
bound
ja
loop
out
les
or
mov
add
mov
mov
add
movsl
push
repz
dec
xor
dec
adc
add
dec
push
test
push
and
lods
orb
hlt
es
mov
test
cmc
in
pop
mov
sbb
sbb
insb
iret
addr16
into
out
popa
pop
mov
mov
bound
inc
push
adc
push
sbb
jl
lods
xor
mov
mov
adc
pop
xor
sbb
out
jnp
dec
andb
push
ss
ljmp
push
ja
adc
push
mov
mov
jo
rol
dec
movsl
add
pop
sub
mov
pop
lret
test
lret
inc
add
movsb
mov
sbb
dec
fcmovnb
dec
cmp
sbb
mov
arpl
aaa
pop
cmp
aaa
mov
out
mov
jne
pop
clc
fldcw
aaa
das
lock
inc
mov
jnp
rorb
test
add
inc
stc
mov
dec
popf
jmp
pop
mov
ja
dec
sub
ja
or
mov
push
icebp
lods
push
hlt
movsb
cmpsb
jmp
mov
test
sub
jg
loop
mov
pop
add
lods
xlat
mov
sbb
ret
lock
clc
or
cld
mov
addr16
sub
fdivl
jp
hlt
std
call
sti
ds
jno
pop
popa
push
mov
lock
add
jg
cmp
decb
cmp
jmp
mov
xchg
mov
sti
mov
das
inc
fistpl
mov
lods
cld
out
mov
ret
std
movsl
dec
mov
fnsave
hlt
insl
dec
dec
xchg
ror
mov
xchg
mov
rcll
jg
cmpsl
cmpsb
mov
hlt
out
loope
lods
or
mov
mov
les
stc
mov
mov
sub
inc
frstor
andl
in
das
adc
iret
mov
sahf
dec
inc
aas
out
push
push
cli
mov
pop
cmp
lock
pop
and
inc
or
pop
fisubrl
imul
mov
fadds
jecxz
outsb
pop
hlt
push
mov
loope
les
mov
cmp
inc
inc
xor
mov
mov
loop
js
adc
std
ds
add
sbb
sbbl
lret
clc
imul
cmpl
jbe
and
iret
jne
test
fdivl
cmp
push
inc
sarl
loope
daa
pop
insb
xchg
xor
daa
fwait
sbb
mov
pop
mov
addb
daa
inc
bound
sbb
cwtl
mov
popf
popf
sub
aaa
xchg
sub
cwtl
xor
xchg
outsl
inc
inc
inc
mov
ficoml
jmp
invd
movsl
pusha
xchg
lock
xchg
add
sahf
and
xchg
in
xor
mov
push
mov
mov
nop
jmp
add
mov
pop
jns
jbe
inc
stos
cmp
xchg
and
icebp
sahf
and
je
insb
inc
jbe
mov
notb
test
cmpsl
xchg
js
adc
out
or
pop
or
mov
mov
lea
pop
js
call
sub
add
push
sub
sbb
add
pop
imul
cmpsb
pusha
pop
xor
sbb
enter
sub
cmp
pop
push
out
push
sub
ret
cmpsb
cmp
hlt
pop
in
xor
lret
into
inc
cmp
call
mov
enter
dec
jle
rorl
push
xchg
addr16
xchg
into
xchg
dec
or
lods
jg
shll
mov
repnz
and
out
ds
sbb
jnp
cmpb
lods
pop
dec
jbe
jbe
jns
mov
subb
or
out
lds
sbb
mov
leave
jbe
pop
ds
mov
icebp
fs
mov
inc
je
mov
push
push
js
es
ljmp
inc
out
lds
or
scas
cwtl
fisubs
pop
lods
inc
mov
sbb
xchg
mov
mov
loopne
bound
or
pop
xchg
lds
call
mov
add
rol
enter
std
add
xlat
mov
call
in
add
movsl
inc
aas
packsswb
cmc
inc
out
lahf
insl
scas
adc
sbb
pop
jmp
nop
pop
mov
xor
andb
mov
sbb
mov
pop
mov
pushf
adc
dec
scas
jl
scas
or
sub
out
sbb
ret
test
add
test
mov
push
fstpl
aaa
or
push
xchg
pop
outsl
lea
mov
mov
shll
push
add
aaa
mov
out
cmc
push
push
add
inc
lds
mov
out
sub
pop
loop
aas
aas
jge
fcomps
push
add
lea
mov
fadd
andl
push
ret
lea
insl
pushl
cmp
jp
test
enter
jno
orb
mov
add
das
xchg
push
sahf
popf
test
mov
inc
or
add
jge
add
and
in
sarl
lahf
notl
aaa
cmc
adc
shrl
sbb
sbb
lea
and
sbb
leave
lret
scas
arpl
mov
or
lods
aam
jo
cmp
mov
roll
push
mov
cmpsl
test
and
xchg
cmp
mov
adc
js
ljmp
repz
sub
cmc
divl
sbb
ficoml
fnsave
roll
ja
xor
mov
xor
inc
sbb
lds
adc
sbbb
or
pushf
push
cmp
dec
mov
test
mov
sahf
test
arpl
mov
cltd
inc
mov
xchg
test
repnz
movb
data16
out
fidivl
fisttpl
xorl
push
adc
data16
mov
fdivs
xchg
mov
jb
sbb
xchg
jl,pt
xor
inc
adc
and
push
jb
xchg
push
push
pop
inc
xchg
or
lods
xorb
mov
outsb
xchg
jne
fsubl
aaa
dec
jb
loop
loop
cmp
subl
add
cmp
out
mov
pop
mov
sbb
std
ret
lea
cli
jmp
int
sub
pop
fisubrl
ja
pop
cmpsb
xchg
sbb
lds
popa
cwtl
lods
sub
fildl
add
add
cmp
sub
pop
shrl
clc
and
shrb
pop
int
fstpt
xchg
xor
sti
lock
lods
xchg
inc
inc
push
movb
sbb
dec
cli
xchg
out
fwait
xchg
js
push
hlt
push
jns
pop
cmc
pmaxsw
decl
or
add
clc
enter
into
dec
pushf
pushf
dec
fidivrs
ret
push
mov
adc
arpl
test
stos
jle
je
iret
roll
sarb
jp
sub
les
in
push
dec
jge
sahf
js
popf
loopne
jl
je
sbb
inc
data16
dec
shl
jmp
shld
fldl
fstpt
das
pop
test
sub
iret
mov
push
js
stc
fwait
sahf
dec
adc
rclb
sbb
push
push
mov
and
into
xchg
pop
sti
jmp
jne
mov
cmpsb
push
sbb
gs
xor
fxam
or
cmpsb
add
out
push
mov
fdivp
test
outsl
dec
sub
cmpb
jbe
orl
cmp
hlt
cld
lea
cvtps2pi
mov
adc
dec
cmpsb
stos
jne
mov
jmp
pop
es
and
mov
insb
adc
test
sub
pop
rol
mov
mov
or
pop
test
jno
fstpt
mov
push
mov
ds
jle
lock
das
mov
cmpsb
loop
lret
jg
inc
imul
aaa
adc
push
or
adc
popf
loope
in
add
div
xor
mov
xor
pop
out
hlt
in
xchg
xlat
xchg
movsb
movsb
push
loop
cwtl
mov
iret
inc
fistpl
cmp
in
add
or
or
pop
cwtl
loopne
lds
fwait
cwtl
ja
insl
lds
pop
and
mov
fcmovnbe
test
fisttps
dec
lret
cmp
sub
fldcw
roll
xchg
sbb
inc
or
aam
scas
je
lock
ret
mov
mov
call
xor
push
punpckldq
pop
xchg
push
imul
cmp
into
repnz
popa
xor
hlt
testb
xor
pop
nop
push
repz
lods
jmp
cmpsb
jno
lret
mov
loope
or
cltd
inc
fiadds
idivb
ds
and
int
mov
in
subb
pop
push
adc
mov
jle
xorb
sbb
jp
jl
aas
dec
int3
icebp
jnp
das
push
js
xor
rorl
aam
or
sbb
stos
sub
adc
jae
jmp
jmp
pusha
sub
outsb
jae
aad
sbb
ffree
ret
jbe
add
mov
pop
sub
daa
pop
std
lods
lcall
pop
lods
fildl
mov
scas
icebp
fs
mov
dec
mov
ret
cld
mov
dec
cltd
lret
loop
or
fistpll
inc
adc
pop
or
add
sub
xchg
mov
add
mov
mov
lods
cmp
cmp
rcrl
sub
sub
test
sub
fucomi
mov
sbb
lds
cmpsb
lods
scas
cmpsl
jbe
inc
pop
in
cmp
inc
mov
mov
dec
lahf
lret
pop
jge
lret
xchg
add
daa
xchg
sahf
mov
sub
or
or
xchg
and
fildll
adc
insl
dec
ret
lahf
pop
sub
jle
or
adc
pop
int3
test
sbb
fs
mulb
repz
popa
stc
fldl
xchg
mov
stos
or
jge
into
xor
in
pop
push
roll
mov
mov
out
xlat
ret
shl
adc
mov
stos
into
pop
push
jnp
mov
icebp
mov
imul
pop
xor
or
daa
jns
mov
adc
adc
iret
inc
xor
testb
orl
sub
jle
pushf
adc
enter
dec
cmp
cmc
xor
hlt
sub
inc
jne
outsl
xor
dec
mov
fadds
jo
xchg
or
or
fimull
jno
mov
aad
or
ljmp
jae
repnz
dec
pushf
sbb
loop
cmp
and
popa
data16
pop
pop
push
outsl
cmovbe
push
xchg
divl
mov
mov
test
in
mov
aas
out
ret
insb
jle
push
lods
inc
jl
push
push
imul
pop
or
rorl
dec
inc
fistpll
mov
jo
inc
add
es
out
and
je
jmp
das
mov
fsubp
mov
nop
inc
or
add
jg
out
ljmp
push
pop
pop
lods
lea
inc
repz
jae
push
daa
rcrb
xlat
mov
mov
cmp
test
adc
enter
test
imul
cmp
shll
cmp
out
mov
sarl
mov
ljmp
cmp
jns
lods
push
pop
ret
ss
iret
jg
ja
nop
push
sbbb
aad
das
dec
jp
rorb
and
cmc
lods
fcmovne
sub
push
mov
aaa
loop
dec
int3
inc
cld
imul
pop
divl
mov
pop
lea
push
and
mov
fcompl
pop
jno
repnz
sub
sub
inc
jmp
ret
or
icebp
sbb
mov
mov
inc
and
xchg
add
xchg
js
out
sub
pop
insb
sbbl
xlat
int
aas
mov
stos
adc
mov
inc
jne
xchg
and
adc
adc
fidivrs
pop
loopne
cmp
mov
rcrb
std
push
ljmp
aaa
or
shrb
int3
movsb
rcl
popw
mov
push
mov
ss
add
push
test
jmp
fdivp
out
je
mov
sbb
in
into
dec
xor
xchg
out
inc
xor
sbb
fwait
push
push
dec
cmp
push
icebp
dec
inc
push
cwtl
cmp
dec
aam
sub
sub
mov
and
lret
and
pop
scas
testl
xchg
mov
fsubrl
fadds
jge
cmp
pop
push
jl
xchg
push
test
scas
mov
scas
jno
add
lea
shll
fwait
inc
and
jle
mov
fucom
inc
mov
mov
xor
xchg
imul
mov
test
fwait
mov
cmc
pop
mov
lods
in
and
sarl
cmp
jae
push
shlb
movaps
sub
popfw
scas
dec
test
push
sub
mov
jle
push
mov
ljmp
dec
adc
stc
lcall
ret
push
inc
adc
mov
push
test
rclb
sub
vcvtss2si
in
icebp
pusha
jge
out
cmpsb
adc
sbb
mov
mov
enter
mov
add
mulb
cmp
les
lds
ljmp
test
push
jae
dec
mov
out
repz
int3
mov
push
ret
fsubr
ss
inc
add
and
imul
or
in
jns
loope
movsb
xchg
out
push
jp
mov
dec
pop
mov
in
add
nop
jge
out
add
arpl
cmp
pop
imul
je
lret
push
mov
mov
in
fistpl
push
aad
lret
push
mov
add
push
xor
jnp
push
mov
mov
fildl
adcb
sahf
dec
cmp
clc
aad
int3
scas
sbb
imul
iret
ret
sbb
lahf
insb
sbb
fstp
sbb
shll
pop
or
sbb
fisubl
shll
jp
xchg
mov
sbb
fcomi
pop
xchg
std
cwtl
mov
xchg
mov
xchg
gs
int
shr
adc
push
ret
sbb
mov
outsb
fnsave
fnstenv
loope
pop
mov
movsl
push
xchg
xor
andb
pop
outsb
ds
mov
clc
cmp
inc
inc
cltd
pop
inc
push
dec
inc
inc
push
xor
ja
pusha
add
inc
sub
jne
sbb
pop
inc
and
into
push
mov
push
push
sbb
or
dec
lret
test
mov
adc
les
stos
sarl
inc
cmp
xchg
inc
fstps
std
fcomps
sub
mov
mov
idivl
sbb
mov
xchg
les
add
cwtl
jno
adc
movsl
popa
aad
adc
mov
push
jbe
sub
in
adc
adc
sub
pop
xorl
cli
xor
js
dec
call
add
mov
mov
and
aas
add
xor
mov
sub
stos
lea
icebp
sbb
shl
jl
call
out
adcb
sub
sbb
inc
or
xlat
inc
mov
ja
mov
pop
inc
or
out
mov
out
ret
and
test
xchg
roll
dec
test
mov
cs
mov
loop
inc
jl
cmpsb
aas
jmp
adc
gs
in
adc
scas
xchg
sub
xchg
mov
mov
sub
scas
hlt
cmp
lock
dec
scas
xorb
mov
pavgb
into
mov
jns
aaa
mov
cmc
add
ss
sarb
mov
cld
js
push
jecxz
cmp
int
jg
hlt
xor
outsl
lods
fcompl
adc
cmpl
mov
hlt
rcr
dec
xlat
in
jne
shrl
repnz
jb
push
aas
pop
dec
xchg
sub
das
cld
scas
bound
mulps
ret
out
fisubrs
mov
in
sahf
and
outsb
iret
dec
lret
xchg
mov
fnsave
add
enter
js
add
sti
scas
lret
sub
dec
icebp
jbe
or
arpl
push
aam
ljmp
out
jl
leave
and
xor
push
mov
inc
mov
xor
sahf
and
mov
int
adc
xor
mov
push
or
sub
sarb
ja
jb
scas
push
xchg
push
mov
sub
es
addr16
add
xlat
insb
scas
lret
pop
aaa
add
pusha
cmp
xchg
popa
ror
cmp
adc
mov
gs
jne
cs
jbe
push
iret
jmp
gs
pop
mov
repnz
adc
jbe
pop
sub
push
lahf
movsb
dec
inc
xor
push
test
inc
pusha
xor
push
dec
mov
jg
dec
out
bound
stos
cmp
imulb
or
int3
adc
es
sbb
iret
push
ljmp
rclb
fwait
ret
fidivl
fistl
sub
sbb
push
and
pushf
cwtl
movsb
int
pop
ljmp
jno
push
aas
adc
stc
test
out
or
push
mov
sub
mov
mov
and
js
jl
jmp
cmp
jl
add
push
sbb
and
lock
dec
xlat
sub
cmc
aad
dec
lods
lret
lret
int3
mov
xchg
xor
push
xor
inc
mov
add
cmpsb
cmpsb
push
lock
mov
addr16
push
jne
add
xchg
mov
pushf
push
sti
mov
aam
dec
aaa
addb
rorl
pop
in
sbb
ja
adc
pusha
xchg
push
lods
stos
mov
gs
jmp
shlb
bound
shlb
fwait
test
xchg
sub
outsb
jecxz
std
les
stos
adc
repnz
mov
adc
jo
sarl
push
inc
jmp
mov
add
mov
movsl
inc
sti
jmp
jnp
mov
repz
cmp
inc
hlt
or
rcl
test
add
ret
or
pop
add
clc
dec
ja
or
pop
mov
decb
mov
into
test
sub
test
xor
inc
jmp
dec
repnz
cmp
dec
repnz
js
sub
sub
adc
xor
mov
sub
stos
ret
ret
data16
lds
xchg
sbb
add
mov
stos
in
push
fcmovu
out
mov
insl
dec
mov
ret
fisubrl
loop
fnstcw
mov
out
sti
pop
sub
jnp
test
and
adc
int
insl
inc
gs
aaa
jecxz
pop
mov
aaa
push
cmp
cmp
cmp
add
add
mov
sbb
mov
cmp
jp
mov
test
dec
inc
fadd
cmpsb
mov
fbld
or
loopne
dec
pop
cmp
jae
mov
aam
adc
cli
jo
lock
mov
loope
mov
push
adc
cmpb
sbb
pop
push
add
mov
inc
push
call
cmpsb
or
sub
out
shll
xchg
loop
fwait
push
cmpb
mov
ret
int
push
outsb
sbb
sub
cltd
and
mov
xor
lods
push
jge
xchg
or
adc
inc
inc
sub
out
lret
jmp
push
sbb
mov
ss
lods
jg
rcr
out
add
xchg
hlt
movq
dec
xchg
in
loop
push
and
cltd
inc
scas
mov
sub
inc
lods
or
call
in
sbb
mov
adc
ret
or
jl
gs
lcall
jmp
push
add
iret
mov
insb
mov
lods
add
xchg
sub
mov
imul
and
vrsqrtss
inc
sbb
push
pushf
mov
adc
add
xor
cmp
add
or
test
call
pop
lock
or
ss
shll
mov
push
divw
mov
add
mov
push
lahf
rorl
out
or
data16
je
mov
pop
fldcw
addb
sti
pop
jg
cmpsl
in
sub
je
jns
lock
outsb
mov
pavgw
push
adc
popf
ret
arpl
iret
xchg
clc
adc
mov
scas
cmp
das
stc
mov
xchg
sbb
mov
or
mov
stos
push
mov
push
sarb
push
push
hlt
je
adc
int
scas
push
and
jno
in
jmp
cmp
sbb
decb
dec
leave
xchg
sub
dec
jl
lcall
js
xlat
icebp
mov
mov
fildll
adc
cmp
cwtl
or
jp
imul
outsb
enter
mov
push
pushf
test
inc
outsb
push
inc
subb
mov
dec
aas
push
mov
sbb
mov
negl
into
push
insl
insl
mov
or
insl
jae
add
mov
lock
cmp
movsb
dec
lds
add
push
scas
mov
jge
ljmp
mov
and
ficomps
xor
xchg
outsb
cmp
loope
add
and
mov
nop
dec
pop
or
out
mov
jbe
xor
repnz
jecxz
sub
adc
push
roll
out
mov
jne
mov
adc
jmp
sub
push
clc
push
or
sbb
es
mov
fst
push
popa
lods
jo
pop
or
mov
imul
repz
addr16
dec
jl
jae
adcb
mov
sbb
mov
mov
pop
pop
cli
push
add
lods
cmp
xor
jp
push
sbb
div
lods
filds
imul
into
aas
cmp
ds
loop
pop
push
pop
cmpsl
pop
dec
pop
jp
scas
lock
imul
xchg
or
adc
outsb
mov
or
sbb
sbb
jae
xchg
pop
mov
jbe
xor
jmp
mov
loopne
std
hlt
pop
dec
stc
popa
pop
in
lods
rcll
int
add
and
cli
cmp
fmul
pop
sbb
inc
and
add
nop
mov
pushf
pushf
addr16
adc
jecxz
movsl
gs
jl
push
xor
dec
jbe
cmp
pop
ja
repnz
push
mov
fists
in
push
imul
imul
push
jecxz
sahf
pusha
and
cmp
popa
pop
mov
push
sub
sbb
dec
xor
sub
xchg
daa
sub
andb
jg
push
aad
in
pop
pop
cmp
jns
cli
cmp
icebp
mov
test
fwait
mov
hlt
sub
jp
pop
xchg
cli
mov
mov
in
cmc
sub
test
adc
cmpsl
add
pop
scas
enter
mov
divb
push
test
outsl
es
push
push
frstor
rol
aaa
insl
xor
out
jae
adc
add
cmp
jle
ret
sbbb
ljmp
icebp
adc
int3
fdiv
mov
cmpsl
or
or
test
fcmovne
cwtl
jbe
fstpt
mov
cmpsb
test
fwait
das
xor
adc
stos
sbbb
and
scas
or
sub
mull
mov
mov
aad
mov
mov
out
inc
adc
xchg
ret
adc
jns
inc
movsl
js
lods
in
mov
cltd
gs
scas
lcall
sub
and
xchg
mov
xor
and
add
les
inc
pop
jp
and
lahf
and
jl
in
scas
sub
out
es
into
xor
clc
push
mov
adc
sbb
iret
decl
push
roll
mov
int
scas
shrl
pushf
jmp
mov
mov
add
pop
pop
add
fcomps
repz
mov
dec
pop
repnz
mov
mov
std
jnp
mov
mov
pop
scas
mov
mov
add
push
scas
inc
movsb
pslld
mov
in
cmp
jno
cmpsl
pop
in
clc
sahf
cmp
pop
mov
dec
push
jmp
std
mov
xchg
and
js
test
pusha
fisubrl
stos
lea
mov
push
hlt
add
out
into
push
bound
jl
or
jb
sahf
cmp
pushf
ss
cmp
inc
shll
stos
pop
xchg
cs
mov
ss
rcr
lods
dec
pop
out
sarb
xchg
aam
icebp
out
sbb
fadd
aam
fnstsw
pop
stos
and
sub
ja
dec
jb
int
aam
scas
push
or
subl
lcall
leave
mov
int
sub
adc
cmc
and
mov
divl
jge
dec
pushw
push
jp
dec
adc
icebp
mov
es
nop
stc
xor
adc
inc
lock
add
dec
shlb
ss
mov
lds
sahf
data16
cs
test
inc
mov
popl
scas
enter
and
test
and
imul
inc
add
jecxz
mov
xor
inc
sbb
ljmp
int3
add
push
jo
mov
jb
aas
pop
and
lret
int3
lds
mov
clc
xor
lds
iret
fld
pop
setno
sbb
add
cs
sbb
inc
or
xor
rcrb
jne
adc
jnp
movsl
jge
sub
mov
cmp
scas
push
lret
cmp
out
aas
pushf
mov
inc
mov
int3
into
or
push
lods
test
inc
into
pop
jne
daa
out
xchg
cmpl
inc
fcmovnbe
clc
iret
in
mov
adc
out
jmp
pop
aaa
mov
push
push
xchg
cmp
test
sbb
adc
fcompl
dec
add
mov
arpl
aad
stos
cmp
cmp
daa
inc
mov
lret
sub
add
cs
out
jne
das
insb
xchg
test
call
movb
sbb
sbb
lret
pop
pop
mov
out
repnz
fwait
adc
jbe
mov
push
in
dec
jns
rorl
and
add
aaa
jns
cs
test
icebp
jnp
or
dec
sub
sub
adc
jmp
xor
cmpl
mov
push
fsubs
orl
push
aaa
mov
movsb
sub
xlat
movsb
xor
leave
mov
in
jmp
fs
test
out
mov
or
push
movsb
add
loope
int
xchg
rcl
jmp
or
inc
aad
nop
testl
rol
fbstp
rolb
cli
and
mov
xor
mov
mov
pushf
jno
lods
xor
andl
adc
stc
and
dec
xchg
pop
mov
popa
pusha
lret
lock
mov
xor
sub
lds
je
test
cmp
and
cmp
xor
fidivs
push
inc
sti
test
loopne
daa
loopne
adc
imul
mov
imul
sbb
mov
movsl
add
push
rol
rcll
lods
xorb
fimuls
sub
les
mov
mov
pop
mov
or
cli
adc
pop
push
lds
addb
cwtl
push
lods
xchg
pop
xchg
movsb
hlt
and
xor
cld
ret
test
je
daa
das
dec
data16
mov
dec
dec
in
adc
addr16
out
xor
mov
loope
or
xor
mov
push
sbb
adc
stos
xor
mov
icebp
imul
push
add
icebp
lea
pop
pop
ss
out
jmp
sub
jnp
cs
pop
add
adc
test
daa
and
stos
sahf
mov
ret
fidivrs
cmpsl
jp,pt
insb
jns
mov
popl
fadd
and
jnp
pop
fsubr
je
dec
syscall
mov
es
cmpsb
and
lret
sub
mov
mov
dec
in
rcll
lods
push
in
cs
mov
xchg
fcmovnbe
nopl
aas
xor
lea
pop
cmp
sbb
mov
push
daa
in
pusha
mov
mov
divl
mov
mov
mov
push
in
test
fadd
adc
out
pop
adc
jge
imul
inc
test
push
dec
cmpsb
cld
cmc
mov
fnsave
or
fisttpll
push
mov
arpl
fs
das
imul
pop
loope
inc
scas
lret
cwtl
movsl
push
in
push
add
sahf
pop
push
jne
rcrl
fdivrs
inc
mov
push
pusha
sbb
and
pop
add
pusha
sub
test
repnz
test
mov
sub
xorl
or
cli
sti
jnp
jne
shr
add
sbb
inc
stos
mov
inc
or
or
sub
sarl
call
add
mov
mov
sahf
jae
and
fisubs
jnp
xchg
mov
stc
cmpl
shlb
cli
jns
sbb
push
out
dec
sub
jae
mov
and
lcall
sub
dec
pop
dec
push
sti
fists
push
mov
fstps
jno
push
push
cmpsb
inc
push
rorb
inc
cmpsb
mov
mov
jp
inc
sahf
jb
mov
jae
lahf
cmp
mov
jno
or
faddp
std
mov
fidivrs
les
and
inc
jecxz
outsl
lock
xchg
insb
inc
sub
jp
push
cmpsb
mov
lcall
out
sub
fwait
mov
aam
lods
popw
adc
sbb
or
inc
stc
jne
neg
outsb
daa
mov
sub
ds
out
cmp
and
xchg
ss
sahf
and
mov
jns
mov
stos
je
cmp
test
icebp
and
cmc
cld
mov
sbb
adc
scas
fwait
in
push
push
pop
addb
imul
scas
rcrb
jl
into
jmp
pop
pop
addr16
cmp
pop
mov
jbe
mov
mov
lret
mov
stos
addr16
sub
addl
ljmp
arpl
aaa
xor
int
iret
movsb
pop
cmpsb
gs
data16
xchg
sbb
stos
xor
rcrb
cmp
lcall
ficoml
fs
add
add
loop
insl
test
or
jp
xor
sbb
push
lahf
aad
pop
and
jno
xchg
or
inc
cmc
pop
dec
add
jns
dec
repz
decb
aaa
ds
pop
mov
cmpsl
dec
movsl
add
stos
jb
orl
jne
adc
nop
in
roll
cmp
cltd
adc
fsubrl
jge
and
hlt
sarb
dec
xor
stc
sub
imul
cmp
shlb
cmp
imul
pop
ljmp
lahf
xchg
sub
mov
and
mulb
hlt
jle
scas
fisttpl
xchg
sbb
sub
jl
daa
pop
and
push
mov
out
loopne
dec
pop
pop
pop
fidivl
das
adcl
mov
jmp
sbb
lods
sub
sbb
mov
xchg
cmp
frstor
cmp
dec
insl
fistps
cmpsb
inc
hlt
loop
push
fdivrs
cmpsl
cmp
mov
popf
dec
test
jno
push
mov
shll
aam
out
and
pop
dec
jns
cmovp
add
fldl
mov
insb
pop
ds
adc
jmp
dec
push
js
enter
cmp
dec
cli
xchg
adc
hlt
or
ss
rorb
adc
das
test
jo
adc
aas
in
test
push
mov
mov
sub
xor
adc
add
notl
mov
cmp
shrb
out
ret
mov
repnz
cmp
clc
enter
mov
stos
mov
adc
in
ja
xorl
inc
into
mov
sub
subb
dec
inc
mov
mov
pushf
pop
leave
cmp
jle
out
adc
in
inc
nop
inc
xor
out
movsl
aam
mov
or
or
mov
outsb
mov
dec
push
mov
call
dec
dec
andb
test
xor
xchg
test
dec
jns
inc
cld
cmpsl
fisttpll
add
jae
ljmp
pop
jl
lcall
je
mov
dec
loope
cmp
mov
cmp
or
cwtl
xor
icebp
add
jl
mov
shrb
faddl
imul
mov
push
jl
or
inc
push
mov
push
nop
enter
outsl
sub
push
out
jo
into
sub
sub
gs
out
cmp
xchg
pusha
fucomi
push
test
ficomps
pop
push
cwtl
stc
call
popa
sub
inc
mov
aaa
pop
mov
repnz
adc
sbb
lods
add
push
pop
push
and
das
es
sub
inc
clc
es
out
dec
or
inc
adc
mov
in
pop
push
int3
jb
cmp
mov
mov
std
jnp
xchg
aad
and
pop
in
sbb
push
cmp
jno
cmp
pop
add
mov
inc
aam
adc
and
scas
mov
and
in
and
arpl
and
mov
inc
jne
lret
daa
adc
scas
dec
sbb
daa
into
mov
ljmp
jo
jnp
lods
push
cmpsb
push
in
push
packuswb
push
mov
add
mov
xchg
adc
add
push
addr16
push
xchg
mov
mov
mov
pop
ficompl
pop
stos
adc
lea
xor
or
stc
cmp
mov
xchg
aaa
movsl
repz
add
ljmp
daa
inc
add
sarl
pusha
stos
pop
ljmp
pushf
xchg
fbld
jl
xlat
mov
ds
test
cmpsb
pop
leave
cmpb
push
xchg
cmovl
mov
dec
mov
dec
sbb
xor
jge
loopne
lods
popa
jno
xchg
jae
jbe
pop
pushf
sub
int3
fadd
out
jmp
push
rorl
lret
icebp
js
cmp
cmpsl
dec
cmp
push
pop
cld
stos
mov
push
fnstenv
loop
adc
cmpsb
fcompl
push
adc
mov
cltd
scas
mov
cmp
push
sub
jae
bound
pop
cmp
mov
lcall
nop
inc
leave
xchg
jl
and
cli
mov
inc
std
add
push
xchg
in
sbb
notb
xor
sbb
mov
sub
xor
cs
je,pn
ds
std
xchg
pshufw
or
loopne
mov
fs
xor
scas
int3
xchg
ss
add
std
inc
pop
daa
push
mov
lret
sar
mov
mov
push
inc
pop
xchg
adc
popf
je
jnp
ret
out
dec
push
ljmp
add
shrb
dec
repz
xor
push
mov
mov
dec
js
cs
ja
fnstenv
movsb
pushf
xchg
rolb
pop
mov
mov
mov
rol
testl
enter
paddusw
xchg
neg
test
push
inc
mov
in
in
arpl
fstps
cld
sub
mov
jmp
cmp
imul
arpl
fcomp
sub
bound
cli
push
mov
adc
dec
lcall
enter
pop
sbbb
and
out
mov
or
popa
jg
cmpsl
mov
xor
push
mov
andl
test
clc
into
pop
mov
rcr
ss
or
jbe
push
lret
push
cmpsb
mov
es
es
xchg
cmp
jns
sbb
test
adc
shll
sub
mov
add
mov
fisubrs
std
rcrb
inc
popf
cmp
shlb
test
divb
cmp
gs
stos
or
insl
cmpsl
fstpt
lods
mov
or
imul
jno
cmpl
loope
mov
push
lret
lret
push
mov
aad
mov
sub
lds
loope
and
and
imul
jbe
negl
jp
fdivrl
cltd
jl
dec
testb
xor
lods
mov
ficomps
pop
pop
mov
loop
jbe
imul
aad
lret
mov
js
test
fs
jo
rorb
and
sub
push
pop
or
roll
push
mov
or
fcoml
rolb
aam
daa
movsl
cmc
lods
cmp
insb
add
lods
push
out
cmc
mov
shl
inc
imul
pop
loop
imul
cmp
mov
push
xchg
das
loopne
ds
rol
mov
iret
ds
mov
fsubrs
inc
jns
pushf
dec
leave
sub
push
xchg
in
add
pusha
xchg
pop
adc
lret
notb
repnz
shrl
mov
scas
jnp
in
sbb
pop
lahf
or
je
aas
xlat
in
flds
insl
xchg
mov
sub
cld
sub
dec
popa
sub
int
gs
int3
add
cmp
into
jge
push
mov
sarb
adc
jmp
mov
mov
jne
dec
push
bound
data16
cmp
int
popa
rcll
into
outsl
xlat
add
xor
int
lcall
or
inc
std
pushf
mov
roll
cmp
jl
fldt
jno
and
xor
test
outsl
out
arpl
lock
ficoms
into
std
mov
test
jp
das
lcall
push
xor
dec
and
xor
scas
enter
mov
rcll
pop
push
ljmp
mov
icebp
daa
add
jno
jmp
cmpsb
adc
xchg
mov
xchg
xchg
fstps
ds
bound
and
rcll
inc
or
out
icebp
inc
fcompl
fnsave
icebp
cwtl
fwait
or
jae
mov
add
jne
fadd
jae
enter
jecxz
cmp
lock
ljmp
jmp
outsw
popa
in
outsl
cmp
cmp
fdivr
pop
xchg
test
jbe
ret
int3
dec
fcomps
jle
and
push
pop
fldcw
xor
es
jae
mov
jnp
cmc
mov
sbb
mov
sbb
push
aad
push
add
pop
xor
sub
iret
lret
add
sti
mov
dec
and
mov
dec
cmp
push
orb
and
xchg
jno
aaa
cmc
cmpsb
fdiv
or
inc
mov
arpl
mov
mov
out
loope
std
mov
xor
and
jmp
pusha
jo
sub
xor
push
popf
aam
adc
fisttpll
hlt
fistpll
adc
stos
xor
inc
jne
popa
pop
or
sub
cltd
into
or
dec
mov
adc
xor
jbe
shll
lods
jp
add
add
jno
aad
dec
mov
sbb
sub
fs
sub
daa
mov
leave
stos
or
shll
mov
pop
pop
or
inc
mov
test
aas
push
nop
adc
imul
fldl2e
dec
and
push
push
roll
cs
pop
mov
push
mov
sbb
push
inc
and
cmp
into
ficompl
lods
aas
fwait
addr16
sahf
xchg
addr16
ja
leave
xchg
bound
cld
sub
sbb
mov
add
call
leave
sbb
setae
iret
subl
xlat
xlat
adc
fsts
lcall
xchg
xchg
int3
cmp
test
into
repnz
mov
cs
sub
lret
daa
and
repnz
repz
adc
adc
insl
pusha
push
dec
into
cs
icebp
clc
loopne
jle
test
sahf
sub
cmp
xchg
out
jmp
or
lock
in
sbb
pop
lcall
jno
or
adc
stos
xchg
push
out
push
in
arpl
inc
repnz
lret
sbb
fbld
filds
xor
sbb
cld
mov
movsb
lods
int3
js
cli
ljmp
std
movsb
repz
imul
insl
dec
ret
sbb
jnp
push
sub
mov
mov
mov
mov
mov
inc
iret
faddl
fdivrl
cmp
loop
jo
add
lods
rcr
inc
iret
inc
cs
sub
stc
jae
mov
fsub
loope
test
leave
out
adc
out
mov
xchg
push
popf
int
pop
repnz
jmp
paddw
je
icebp
jl
mov
sub
lret
adc
xchg
sahf
sub
pop
push
pop
outsl
pop
lock
xchg
pop
jbe
fs
fistpl
xchg
sbb
push
lahf
mov
adc
test
lds
popf
imul
les
fisttpll
jg
dec
inc
lea
fadds
sbb
fdivl
scas
add
jno
fdivs
push
pop
dec
xor
push
sub
xlat
popa
sti
and
push
out
mov
pop
clc
stos
add
push
jmp
cwtl
lods
shrb
fsts
mov
aaa
rcrb
imul
lahf
iret
fidivrl
xchg
out
fsubrl
mov
js
dec
dec
push
daa
push
sbb
mov
jecxz
fistpl
addb
adc
mov
js
cld
lods
pop
sub
push
popa
je
inc
cli
lock
stc
dec
loop
pop
adc
aas
dec
dec
in
nop
xor
jne
adc
lock
mulb
imul
adc
dec
enter
out
shll
mov
ja
push
shr
xor
test
cmp
push
ds
out
pop
gs
loop
pop
movsl
dec
push
mul
and
jns
dec
popf
imul
mov
pop
dec
mov
inc
adc
popa
jns
outsl
cmp
xchg
jmp
dec
jae
insb
mov
jns
in
iret
lea
push
inc
xchg
pop
mov
inc
push
outsl
or
shlb
cmpsb
out
repnz
or
cmp
mov
jecxz
pop
rcl
add
jne
int3
arpl
aam
jo
std
sbb
and
test
push
xchg
in
sub
out
pop
jno
add
jne
dec
xchg
mov
shrb
inc
stos
sbb
jp
mov
push
lret
andb
and
cmpsb
mov
fildl
cmp
les
push
cmp
mov
pop
inc
in
sub
push
repz
daa
ffree
sub
sbb
outsl
into
ja
aas
ljmp
dec
push
sbb
xor
into
cmp
add
loope
sbb
loope
repnz
hlt
shl
dec
insl
xchg
and
xor
pusha
mov
xlat
cmpsl
mov
aam
xor
adc
test
aaa
xbegin
imul
jle
jl
iret
ss
stos
mov
adc
movsl
fildll
mov
mov
add
inc
jne
jge
test
xchg
imul
bound
xchg
add
insb
mov
lret
sbb
jp
mov
dec
and
add
cmp
cld
aas
aad
xor
loopne
xor
push
push
ret
mov
cmp
mov
jge
inc
sub
adc
frstor
ljmp
fcoms
in
movsl
mov
add
sub
xor
cmp
jnp
mov
jge
cmp
add
xor
add
popf
imul
nop
ljmp
aam
sbb
popf
aad
cmc
scas
dec
jnp
imul
xor
outsl
fwait
repnz
out
ret
and
popa
std
mov
fimuls
in
in
mov
and
push
sbb
sti
jb
add
cmp
xchg
stos
or
mov
inc
sbb
cmc
sbb
push
loope
mov
push
mov
push
pop
mov
mov
addb
add
out
movsl
das
and
mov
test
or
cmp
fbld
adc
dec
push
jns
fwait
movsl
jp
sbb
sbbb
movsl
cmp
lahf
mov
sub
jecxz
clc
in
add
loope
and
fnstcw
aas
pop
inc
loope
in
jmp
mov
mov
fisttpl
jne
push
xor
adc
xchg
std
nop
clc
mov
mov
daa
jns
inc
dec
xchg
lret
fwait
sbb
js
inc
add
mov
pop
pop
std
mov
pusha
imul
scas
cmc
cld
mov
sbb
add
in
xor
stos
mov
add
in
ds
jb
cmpsb
lock
add
dec
dec
sub
xlat
data16
xchg
mov
fstl
sbb
arpl
inc
ja
ret
lahf
ss
push
lds
je
push
adc
adc
insl
rorl
subb
cmc
aam
test
add
jp
in
sbb
daa
out
imul
in
xchg
ret
mov
xor
aas
push
sbbl
lcall
sbb
xor
xchg
jecxz
rorl
adc
adc
add
scas
mov
dec
insl
int3
out
xchg
adc
das
decb
pop
shl
das
add
add
or
jmp
mov
xor
ss
fmuls
xchg
nop
jne
clc
mov
ss
loopne
mov
je
data16
out
sbb
in
fcomps
repnz
dec
sub
pop
xchg
xchg
bound
sub
sbb
or
fcoml
push
mov
stc
out
jecxz
sub
leave
pop
adc
mov
iret
mov
jecxz
aam
mov
mov
lahf
xor
ss
jp
sbb
adcl
cwtl
scas
dec
fidivrl
test
mov
leave
int
add
pop
fists
mul
pop
or
insl
jp
or
mov
jecxz
and
sub
jns
adc
jns
jle
lods
push
xchg
cs
in
push
je
into
test
insl
insl
mov
or
dec
sub
leave
jp
sti
push
xor
and
mov
cmp
out
jns
in
and
xchg
dec
xchg
clc
push
mul
scas
ret
pusha
sbb
incb
push
push
dec
xchg
inc
pop
jp
test
js
shlb
add
test
xor
repnz
mov
iret
and
jg
stos
push
jle
xchg
lods
cwtl
push
jns
mov
dec
lcall
sub
xchg
add
fdivrs
ljmp
mov
mov
jmp
out
and
jae
mov
ss
mov
pop
push
xchg
pop
sub
pop
stc
and
dec
mov
inc
insb
into
jp
jne
xor
sub
add
add
fldl
sti
cmp
int3
idivb
and
sbb
cld
mov
dec
sub
jmp
packuswb
test
fnstsw
dec
push
add
mov
in
adc
and
ljmp
adc
gs
mov
data16
mov
jno
pushf
mov
dec
mov
or
dec
cld
lahf
lcall
insb
aaa
sahf
test
lcall
or
insl
cwtl
stos
and
es
mov
mul
xchg
jns
std
gs
ds
and
popa
ljmp
cmp
insb
cs
pop
and
pop
fnsave
push
sub
sbbb
lea
int3
insl
dec
test
loope
jmp
aad
sub
fiaddl
gs
and
pop
scas
ljmp
sbb
bound
xchg
inc
stos
or
dec
inc
clc
push
push
out
dec
sub
test
movups
mov
ret
xchg
or
adc
push
and
lds
xchg
sub
push
mov
cmc
pop
test
int
inc
lods
jbe
cmp
inc
pushf
push
je
mov
jns
into
xchg
test
pop
mov
scas
sbb
and
xchg
push
mov
outsb
nop
out
mov
call
lcall
pop
gs
sub
inc
fyl2x
mov
loope
jno
sub
xor
cmp
addr16
dec
sub
xchg
dec
stc
push
add
cmc
test
and
mov
popa
imul
lods
dec
repnz
clc
in
imul
out
xchg
add
push
aad
inc
push
fwait
mov
and
test
xor
cs
and
push
jae
out
adc
xor
push
sti
out
in
cmp
mov
pop
lock
push
test
lret
push
sub
daa
or
jp
shlb
jbe
xor
adc
or
fbstp
addr16
fiaddl
test
inc
or
mov
pop
or
mov
loope
pop
cs
into
mov
xor
push
mov
sti
dec
loopne
cmc
movsb
xchg
rcl
sbb
or
or
pop
pusha
xor
or
je
inc
into
fwait
orl
in
lret
mov
add
shl
int3
cli
jp
ljmp
ja
addb
outsw
cmp
movsb
adc
xchg
enter
xchg
decb
fs
dec
xchg
jmp
cli
lcall
pop
negl
cmpl
mov
icebp
sbb
mov
jecxz
jmp
push
aad
xchg
mov
cmpsb
sbb
fisttps
mov
fsubrl
sbb
pop
loopne
mov
sahf
mov
mov
bound
out
push
mov
xchg
ljmp
popf
jo
lods
shr
dec
stos
fnstenv
shl
lds
mov
jbe
xchg
dec
test
lret
pop
icebp
fsubs
into
push
pop
push
and
lock
ljmp
mov
arpl
cmp
gs
xchg
fbstp
jp
dec
cmpsb
cmc
loopne
mov
mov
add
int
mov
shrb
inc
cld
dec
je
test
mov
push
pop
arpl
scas
cmp
lods
inc
push
sub
dec
mov
fstpl
out
fmull
cmpsl
xchg
dec
ljmp
add
jae
or
mov
sub
ror
add
push
mov
dec
lods
lods
lods
xchg
clc
pusha
or
in
enter
pop
lods
scas
xchg
xchg
sub
cmp
jmp
fmul
mov
push
test
or
push
popf
and
cld
fimull
dec
addr16
dec
in
imul
ss
addr16
test
popf
leave
mov
fistl
hlt
popf
sbb
pop
and
imull
outsl
scas
push
xlat
lcall
cmpsl
data16
dec
popa
mov
mov
or
mov
and
jp
pop
gs
scas
adc
mov
ljmp
add
pop
or
mov
sahf
fs
mov
enter
sub
xchg
fwait
cwtl
mov
pushf
lods
or
mov
jle
sti
mov
dec
repz
adc
push
adc
push
sbb
pop
jo
out
cwtl
pop
pop
mov
pop
js
lods
in
loope
movsb
not
imul
inc
jae
nopl
outsl
push
dec
mov
sbb
insb
push
cmp
pop
mov
push
or
mov
jo
add
fbstp
xchg
shlb
loopne
popf
add
popa
push
inc
xor
mov
mov
inc
lds
aas
mov
sbb
pop
dec
dec
push
cmc
push
pop
cwtl
add
and
sub
sub
pop
and
pop
out
lock
aas
and
or
aas
dec
and
js
bound
shll
sahf
or
xchg
pop
mov
out
addb
mov
mov
adc
cld
sub
insb
jno
add
mov
pop
pushf
loopne
and
es
subl
push
stc
imul
pop
jecxz
js
jl
and
jl
flds
mov
sub
in
push
inc
or
sbbl
pop
stos
pop
popf
xor
jbe
lret
stc
dec
ja
jg
xchg
sub
xorl
adc
xchg
out
popf
nop
mov
test
or
mov
jmp
repz
lret
push
pop
shrb
sbb
data16
shl
data16
cmp
jnp
xchg
push
and
mov
mov
ret
mov
int
jmp
mov
and
arpl
sbb
cwtl
std
frstor
out
loope
out
inc
and
movsl
imul
pusha
sti
and
jb
outsl
test
inc
out
divb
push
in
sub
in
call
aad
std
pop
mov
or
sbb
jo
popf
lods
popf
outsb
or
jnp
iret
stos
xlat
cs
mov
or
push
mov
clc
int3
and
pop
pushf
aam
adc
fidivrl
mov
cmp
push
je
sbb
pop
add
imul
clc
and
xchg
and
mov
dec
pop
jnp
repz
fnstenv
nop
cli
pop
xchg
xlat
leave
mov
mov
imul
add
mov
pop
xlat
sarb
pop
ljmp
pop
das
pushf
xor
shll
test
dec
int3
cli
mov
out
iret
cli
cli
mov
ds
pop
dec
lahf
enter
out
mov
das
popa
js
out
sub
adc
insb
pop
popf
jecxz
jbe
push
ret
fisttpll
dec
sbb
out
cld
jmp
sub
mov
sbb
les
or
out
aaa
arpl
push
scas
or
or
popf
and
xor
jnp
shrl
aam
decl
in
fldenv
sub
into
xor
cmp
push
enter
xchg
cmpsl
mov
push
testb
sub
pushw
and
mov
mov
lds
inc
or
mov
mov
out
leave
test
test
push
cmpsb
mov
adc
lret
jb
imul
cmp
pop
inc
js
inc
fs
jb
stc
xchg
inc
scas
pop
xchg
xor
xchg
icebp
sub
call
jle
add
pushf
cmp
cmpsl
adc
std
push
psubw
popf
lahf
std
mov
push
jecxz
pushf
sbb
sub
sbb
sbb
xor
mov
push
adc
mov
test
sub
xchg
adc
adc
mov
pop
mov
aaa
enter
or
cmp
xchg
lcall
mov
pop
jge
inc
imul
test
and
repnz
push
xor
pop
push
cmp
inc
sub
add
flds
xor
push
cmc
addr16
icebp
movsl
enter
loopne
test
push
sub
xchg
mull
push
lds
mov
jg
stos
or
into
and
xor
dec
shr
lret
xchg
add
mov
test
ficoms
sub
or
push
sbb
or
xor
xor
mov
and
cmp
clc
jge
or
jae
xor
jnp
lret
ja
test
xchg
add
sub
or
sub
or
jns
ds
mov
imul
mov
sub
std
pop
pop
add
mov
pop
and
test
mov
repnz
push
insl
fldcw
push
mov
jecxz
std
notb
jne
xor
movsb
sbb
aaa
jae
std
push
push
or
adc
or
or
loope
jge
adc
xor
cmp
dec
mov
movsb
lea
negb
stc
testl
ret
dec
add
mov
scas
pop
cmp
das
adc
icebp
je
mov
ds
shll
pushf
icebp
enter
arpl
sahf
inc
push
loop
int3
out
scas
inc
xchg
repnz
push
jl
mov
mov
sarb
sbb
mov
and
and
loop
outsb
add
adc
lods
hlt
xor
lcall
adc
or
add
test
mov
popa
cmpsb
fcmove
sarb
andl
or
outsb
rclb
into
dec
add
mov
fsubrp
test
inc
leave
shrb
add
push
mov
loopne
jbe
xchg
mov
lret
sbb
cs
inc
xor
daa
sub
mov
adc
test
negb
mov
cmp
mov
sub
jno
lret
shl
xor
hlt
sub
cmp
or
and
test
inc
mov
filds
add
push
cmp
sub
pop
push
scas
mov
mov
dec
adc
out
dec
dec
cwtl
xorb
sub
addr16
das
push
inc
cmpl
gs
aam
rcll
jmp
pop
and
dec
lods
or
mov
xchg
les
pop
fidivs
push
mov
xchg
pop
mov
sti
cmpsl
cmc
adc
add
jns
mov
dec
stos
ds
daa
lcall
orb
addr16
adc
dec
pop
pop
xor
mov
xor
push
pop
xor
xor
xrelease
mov
mov
add
mov
mov
add
cltd
fwait
push
leave
adc
aad
inc
mov
jo
dec
sub
repz
mov
push
jo
enter
sub
jmp
cmp
andl
lods
mov
repnz
jg
mov
sbb
inc
ret
stos
mov
mov
fldt
imul
adc
insl
add
outsb
jmp
adc
sbb
add
cli
rorl
xor
out
enter
or
push
movsb
shrl
scas
imul
fimull
add
mov
dec
lock
xor
xchg
add
aaa
aam
push
movsb
out
jmp
mov
jbe
aam
cmp
sahf
int
andnps
jb
xorl
mov
jne
jnp
push
inc
lea
pushf
dec
mov
ja
push
aam
jle
mov
leave
xor
dec
scas
mov
sbb
out
aad
mov
mov
insb
jmp
mov
loop
push
mov
pop
xor
outsl
mov
aas
js
and
cmp
in
cli
pop
ret
mov
icebp
xor
scas
repz
ret
icebp
fsubrs
xor
or
sbb
enter
mov
psllq
add
mov
mov
das
pop
xchg
std
shrb
pop
jmp
pusha
int3
mov
push
jo
insb
mov
aad
dec
pusha
mull
mov
arpl
orb
pop
test
test
xlat
pop
fistpll
ss
pop
sti
xchg
mov
lods
add
data16
sbb
sti
icebp
adc
mov
cmp
dec
stos
fnstsw
dec
movsl
ret
pop
cmp
filds
mov
scas
add
and
les
rorl
shlb
or
fldcw
mov
cmp
mov
adc
jb
in
push
cmpsl
sub
pop
call
mov
in
fdivl
iret
or
ljmp
cmp
jns
lock
sub
jecxz
cmp
inc
dec
ss
dec
sbb
mov
ret
mov
dec
jg
fiaddl
faddl
mul
sub
test
imul
ret
jp
pop
out
daa
ds
fisubrl
xchg
adcl
push
out
and
sub
fidivs
push
push
xchg
jb
push
sub
push
xchg
or
andb
inc
aaa
sbb
test
dec
stos
mov
pop
clc
stc
popa
pop
loopne
shlb
inc
stos
mov
and
insl
mov
cmpsl
pop
rorb
and
jbe
loopne
pop
or
test
out
mov
andb
out
mov
lret
inc
mov
mov
test
insl
jns
enter
xchg
fisubl
jne
xor
xor
jge
sahf
lock
test
jae
insb
fidivrs
je
push
or
mov
mov
sub
hlt
lock
cltd
pop
cmp
les
mov
shl
pop
jae,pt
or
mov
subb
lcall
sarb
aam
fnstenv
arpl
inc
je
frstor
sbb
repz
dec
or
mov
mov
das
jnp
es
pop
popf
jecxz
cli
cmp
loope
jae
mov
xor
xchg
sbb
and
stos
adc
inc
pop
mov
int3
flds
loope
ror
in
inc
ja
jp
outsl
out
scas
xchg
ret
inc
adc
rcrb
decl
xor
pop
cmp
cltd
pop
mov
leave
std
ret
outsl
sbb
jecxz
pop
ret
sub
or
fsubs
fimuls
loope
pop
xor
jl
mov
fs
pop
push
push
xlat
xor
sahf
pop
fstpt
inc
movb
xchg
mov
and
mov
mov
pop
or
mov
adc
push
xchg
mov
mov
testb
mov
es
xor
push
adc
cmp
mov
lock
addr16
sahf
loopne
dec
sbb
fs
shll
sbb
stos
cmp
jle
ja
adc
adc
ja
out
add
std
movsb
mov
add
ljmp
jns
mov
sub
mov
sub
lds
ret
sarb
cmp
push
push
daa
repz
and
imul
aam
imul
lods
mov
shrl
xchg
dec
fistpl
shrb
lcall
outsl
xlat
adc
or
insl
imul
mov
mov
call
mov
sub
int3
fdivs
dec
cmpsl
in
out
in
in
xchg
dec
cmp
add
mov
scas
sub
popf
xor
lret
mov
frstor
popf
jae
ja
pop
bnd
cld
lahf
sub
aad
push
inc
das
out
nop
or
sti
and
sbb
nop
add
and
sub
out
push
fisttpll
jl
add
xor
test
stos
in
pop
xchg
fisubrl
push
arpl
push
pop
dec
cmp
popa
in
jmp
inc
ss
into
mov
push
and
push
mov
stos
push
mov
xchg
test
fsubs
nop
dec
and
aam
mov
xlat
and
mov
cld
cld
imul
out
pop
mov
mov
fidivs
mov
push
mov
add
push
push
adc
adcl
dec
stos
cmp
aad
in
add
negb
or
xor
mov
out
jmp
aaa
jo
push
inc
push
jo
pop
xchg
or
push
or
frstor
dec
or
sub
sbb
jae
ds
or
into
adc
ret
and
push
inc
dec
xor
rolb
xchg
gs
jne
cmp
sub
cltd
iret
js
sarb
xor
push
push
xor
inc
movsb
xchg
xor
aam
inc
push
sub
adc
mov
push
pushf
add
xchg
sbbl
mov
jbe
dec
rcrl
pop
sbb
jnp
xchg
cmp
dec
mov
inc
mov
xchg
in
jnp
push
bound
xchg
fnstcw
sub
add
mov
fidivrs
adc
inc
sahf
stos
mov
and
fnsave
call
movsl
aas
call
mov
add
pop
dec
inc
pop
sbb
loop
push
in
out
out
fisubs
aaa
mov
je
cwtl
lods
sub
es
and
out
call
jmp
jne
iret
jl
adc
cmpsl
out
pop
les
push
cmpsb
xor
lea
inc
ret
jb
dec
arpl
dec
push
andb
gs
ljmp
add
mov
movsl
imul
mov
add
or
lods
xchg
fwait
cmpsb
sub
into
lret
mov
pop
test
mov
jp
push
cmp
int3
pop
mov
dec
icebp
bound
fcoml
bound
shrb
add
dec
sub
cmp
pop
xchg
mov
test
inc
pop
outsb
mov
int
pushf
push
cmpsb
jg
add
push
lods
push
aaa
lcall
das
test
inc
jbe
imul
mov
xchg
xchg
mov
scas
dec
flds
in
mov
cmp
cwtl
es
mov
lret
lret
and
add
pop
xor
jb
stos
nop
cmp
popf
xchg
aaa
xchg
inc
xor
pop
int3
call
inc
lea
pusha
shl
and
jecxz
stos
iret
cmp
fmuls
std
aas
sti
sub
pushf
push
jp
fs
js
clc
jl
sbb
inc
jl
movsb
jnp
adc
xlat
jne
mov
sub
dec
xchg
test
sbb
xor
js
int3
aaa
adc
cmpsb
int3
or
clc
mov
and
or
testl
and
bound
mov
cmp
adc
mov
fcmovnb
mov
jg
icebp
cmpsl
das
dec
cmp
shrb
pop
cmp
and
sub
in
jge
pop
pop
xchg
and
add
testl
rcll
fsubs
ja
in
ret
cmp
jb
and
mov
adc
jb
mov
sbb
out
in
push
jge
je
jge
orb
repz
and
pop
mov
call
xlat
orb
setns
push
daa
inc
jp
mov
sub
jne
bound
dec
mov
test
std
inc
push
pop
or
pop
and
add
push
or
jp
mov
mov
add
or
mulb
decb
jp
push
lfs
js
das
jecxz
jle
shlb
pop
mov
fisubl
cmp
pop
fnsave
sub
fwait
jle
xchg
push
pop
push
jg
repz
xor
and
and
lods
add
xor
cmpb
gs
add
ret
ja
stos
adc
ljmp
lret
xor
js
lret
pop
mov
fldcw
mov
and
adc
pushf
and
pop
les
jnp
pop
xor
push
mov
mov
xor
cmpl
pop
loope
sub
dec
adc
aam
sub
test
add
lret
shrb
fmul
adc
pop
aad
loope
dec
cmp
sbb
mov
sub
xor
jg
int3
movsl
and
jns
mulb
fld
mov
pop
call
cmp
insb
jbe
insl
clc
inc
or
xor
fstl
fcoml
lret
xchg
inc
jae
and
hlt
mov
adc
cmc
imul
stos
lods
repnz
mov
mov
jno
push
imul
cmp
mov
mov
mov
inc
xor
jmp
sbb
lcall
int
dec
mov
insb
xor
aad
clc
je
roll
pop
sahf
xchg
js
sbb
ficoml
add
sub
mov
sbb
movsl
xchg
pushf
sbb
jmp
test
and
inc
rclb
aad
popf
mov
add
rol
push
insl
mov
inc
jnp
and
pop
in
mov
int
adc
mov
enter
cmp
jl
mov
pop
inc
push
in
jg
pop
or
repz
dec
cmp
push
pop
sahf
scas
push
ret
sub
test
inc
jl
out
push
mov
xchg
fidivrl
outsl
mov
incl
shl
enter
dec
sti
mov
rorl
cmp
lea
insl
popf
loope
xchg
dec
sub
lret
xchg
js
inc
inc
scas
cld
and
sbb
mov
outsl
jp
push
adc
in
in
lahf
push
or
roll
lods
xchg
setae
and
imul
test
mov
arpl
cs
scas
jmp
inc
dec
pop
xor
dec
cld
jb
pop
imul
add
mov
int
rsm
outsb
cmpsl
sarl
mov
shlb
out
jle
jge
pop
cld
fdivrs
mov
mov
cmp
sbb
mov
and
push
pop
mov
sbb
pop
rcr
pop
cmp
sbbb
mov
add
rolb
adc
and
out
clc
rol
addr16
clc
in
cmp
or
mov
sub
mov
inc
mov
or
or
mov
loop
lea
mov
jl
call
jno
pop
jb
repnz
jne
lret
imul
faddl
lds
fmull
mov
sub
xchg
jnp
sbb
xor
jno
iret
mov
sub
nop
pop
nop
out
rcll
mov
inc
leave
ret
push
pop
popf
inc
and
pop
pop
iret
rorb
dec
ljmp
xor
dec
rclb
jge
ljmp
aad
andb
test
mov
stos
andb
mov
ljmp
or
mov
fdiv
pop
push
push
xchg
shrl
fmuls
or
push
popa
jg
rolb
pop
push
icebp
arpl
shl
addr16
mov
aad
test
scas
ja
mov
push
stc
cmp
negb
gs
and
into
mov
mov
mov
popl
sbb
cli
lcall
mov
outsl
sbb
cmc
inc
scas
sbb
and
and
movsl
shll
sub
sub
shlb
bound
sbb
pop
add
mov
ja
jl
ret
test
test
mov
dec
outsl
and
scas
aaa
jb
dec
dec
mov
jl
aam
lods
repnz
sahf
jmp
mov
fstl
push
push
xchg
fldt
cmpsb
pushf
insl
fists
sub
sbb
sub
aaa
xchg
dec
repnz
cs
dec
shll
in
sahf
aam
lock
cmpl
jbe
inc
mov
lock
pop
mov
mov
popf
cltd
mov
adc
mov
lahf
pushf
stos
outsl
push
push
cmp
mov
arpl
loop
and
ret
inc
mov
dec
fnsave
cmp
sar
fsubs
cmp
addr16
sbb
xor
mov
adc
stc
icebp
loop
in
sbb
pop
xchg
or
fsubr
adc
and
lret
cmp
push
push
mov
divb
cld
jne
pop
or
jo
sbb
push
jle
mov
jno
xlat
lods
in
cmpsl
fwait
je
out
outsb
movsl
add
addr16
adc
loop
imul
fsubrs
fimull
jb
and
and
xchg
out
add
jmp
xor
mov
lea
out
clc
in
test
int3
xchg
imul
aam
pop
add
ret
xor
aam
xor
dec
dec
push
xor
sub
stos
lds
inc
rol
out
jmp
adc
into
push
inc
fstpl
mov
data16
test
xor
pop
pop
dec
fsts
into
cmp
inc
add
or
shrb
test
mov
inc
xchg
add
cmp
mov
loope
xorl
stos
cmc
inc
push
cwtl
mov
jns
gs
popf
es
push
divb
sbb
gs
push
cli
imul
pushf
dec
push
stc
jae
pop
inc
outsl
mov
cmpsl
scas
fwait
mov
iret
fnsave
adc
xor
mov
das
mov
cmp
jo
sarb
fcmovnbe
pop
std
mov
xor
mov
out
ret
xchg
andl
fldcw
jl
cli
lcall
lcall
mov
or
cmp
fwait
jno
mov
sub
cmc
loope
xchg
xor
ljmp
sub
push
mov
lock
cmpsb
add
jbe
or
rcrb
push
mov
sub
cltd
movsb
mov
movsl
dec
movsb
sar
out
mov
mov
iret
in
add
aad
sbb
jle
xchg
pop
pop
movsb
xor
add
daa
sar
iret
add
ret
out
mov
ss
xor
repz
sub
cmp
leave
jne
pop
xchg
mov
mov
cld
iret
lret
aas
cld
xor
or
testb
and
mov
xlat
dec
inc
iret
rcll
or
xor
cli
jno
jb
jmp
dec
pop
test
push
outsl
in
mov
mov
fisttpll
or
jbe
pop
pop
mov
das
lods
cmp
mov
movsb
daa
fidivs
lcall
adc
mov
pop
mov
mov
cmp
pusha
cmp
adc
inc
out
stos
push
fnstsw
popl
push
push
cmpl
and
and
push
sub
sub
lcall
push
addr16
adc
xor
rep
cs
cmpb
push
shl
movsl
scas
mov
mov
out
mov
scas
cmp
bound
in
xlat
pop
iret
cmpsl
nop
loop
clc
jmp
sbb
xor
inc
jo
or
add
leave
lea
dec
je
mov
outsb
jmp
mov
mov
clc
sbb
testb
pushf
out
inc
icebp
mov
jecxz
movsl
push
vpshab
xchg
push
ds
and
in
scas
aas
std
pop
xchg
lahf
cmpsl
cmp
stc
dec
rcl
lods
lods
push
testl
push
enter
das
dec
loop
push
fiadds
jmp
dec
mov
movsl
push
mov
rcr
sbb
mov
push
sahf
mov
mov
jb
dec
das
inc
push
sqrtps
mov
ljmp
mov
xchg
out
lcall
fistl
xchg
inc
push
sbb
ret
test
sub
xor
add
fildl
dec
cli
jp
dec
jo
out
das
addl
scas
cld
inc
loop
fisttpl
cmp
dec
xchg
pop
leave
add
mov
jecxz
sub
js
xchg
insb
lods
ficoml
xor
ret
mov
pop
jo
xchg
jmp
inc
out
mov
mov
js
pusha
pop
sbb
aaa
idivb
iret
icebp
test
jno
cmc
imul
dec
mov
fisubl
xchg
inc
mov
add
fsqrt
and
out
pop
sbb
mov
xorl
rcrl
nop
xchg
out
je
ja
add
popa
test
enter
shrl
lret
mov
xchg
fwait
std
imul
idivb
xchg
add
cli
jecxz
ss
xor
add
cwtl
cmp
rol
imul
sbb
imul
or
xchg
ret
adc
mov
iret
inc
fldenv
scas
sar
pushf
pushf
jp
daa
popf
std
lcall
daa
xchg
or
insl
dec
sub
and
jae
in
cld
cltd
js
adc
mov
arpl
xor
xchg
fildl
mov
sub
les
sub
adc
xchg
inc
hlt
add
sub
mov
add
test
es
push
mov
push
sbb
aas
inc
phaddd
js
push
sbb
xchg
push
daa
es
int3
repz
mov
sub
sbb
aad
je
pop
call
sbb
push
cwtl
enter
push
inc
loope
jns
and
and
add
pop
pop
dec
xchg
xor
dec
dec
xchg
adc
cmp
fildl
jnp
xchg
dec
dec
ljmp
in
popf
push
je
test
xor
nop
nop
jb
xor
pop
or
scas
sbb
and
mov
jne
inc
in
outsb
xor
std
ljmp
imul
sub
imul
jge
movsb
pusha
clc
xorb
mov
mov
mov
jmp
dec
ffreep
std
pop
clc
je
incl
pusha
dec
loop
cmpsb
ret
test
out
cli
stc
pusha
mov
push
mov
cmc
add
lock
sbb
pop
or
test
cmp
lretw
push
pushf
cmp
jp
or
adc
cmc
jns
adc
testl
xor
or
mov
insb
cmp
mov
inc
and
xor
in
scas
sbb
ss
push
leave
aam
pop
repnz
fbld
vandpd
pop
or
rcll
sub
cmp
je
dec
es
ret
pop
jno
xor
xchg
jge
js
jbe
test
jb
mov
outsl
mov
sbb
and
or
and
icebp
test
add
mov
fcompl
mov
mov
fdivrp
xor
push
mov
call
dec
dec
es
enter
jb
xchg
mov
test
imul
xchg
ret
repz
pop
aas
cmpps
mov
hlt
cld
ja
hlt
xchg
enter
rolb
int
icebp
jge
push
or
jp
xchg
sahf
pop
out
push
mov
inc
pop
aam
cmc
sub
jnp
test
push
popf
jnp
xor
in
arpl
xor
clc
mov
inc
aaa
mov
les
addl
mov
addr16
jns
stos
lcall
std
mov
daa
add
aad
mov
lods
push
pop
pop
push
shrb
cmp
stc
idivb
insl
not
adc
push
gs
shll
test
mov
cmc
jnp
xor
and
add
outsb
cmc
dec
add
pop
lock
pusha
jb
pushf
cmp
mov
mov
in
xorl
int3
mov
or
lock
dec
xor
or
outsl
gs
mov
mov
loope
pop
or
xor
inc
jp
test
ja
pop
popf
hlt
outsb
aad
aam
inc
fwait
stos
xchg
es
outsl
mov
cwtl
xchg
imul
and
and
ljmp
add
pop
addb
mov
pop
add
cmp
aad
dec
and
cmp
mov
add
xchg
movsl
pop
cmc
outsb
jecxz
insl
push
testb
aam
bound
cmc
sbb
or
sub
scas
xchg
xlat
jno
pop
and
popf
mov
jns
icebp
xor
pop
add
mov
std
jp
les
out
add
mov
inc
push
clc
sub
adc
xor
adc
push
cmp
adc
fs
icebp
xor
mov
sbb
pop
sahf
pop
sbb
lea
out
imulb
popa
idivb
inc
mov
outsb
xchg
sti
sub
mov
sub
jle
push
cmp
sahf
ret
int
sti
push
sti
mov
adc
jmp
dec
and
lds
add
dec
push
daa
jo
xchg
mov
inc
dec
pop
xchg
das
lret
xchg
orps
fwait
insb
jle
lret
movsb
pop
mov
arpl
insl
lods
push
insl
ja
std
daa
mov
jno
adc
rolb
addr16
and
or
xchg
xchg
ss
sub
dec
xchg
pusha
rcr
push
outsl
dec
nop
rorl
incl
xlat
sub
mov
ss
loop
sbb
cmp
or
cwtl
xor
inc
xor
dec
xchg
sbb
outsl
fs
lret
leave
or
iret
push
and
fdiv
out
or
xchg
sub
sbb
adc
repz
aas
insl
lods
add
mov
mov
out
fdivs
repz
icebp
or
pushf
mov
and
xor
jo
jle
cltd
push
test
push
add
das
cmp
mov
jge
mov
inc
lock
out
pop
jp
mov
and
sti
sbb
adc
lea
mov
popa
jne
xor
push
int3
int3
in
outsb
insl
lahf
cmp
lods
test
xchg
inc
pop
rorl
mov
mov
add
inc
andb
jl
add
pop
lahf
movsl
arpl
mov
sbb
icebp
fidivrl
add
test
xor
mov
ret
scas
fdiv
cltd
push
lahf
and
mov
ss
mov
loop
jge
mov
sbb
push
test
mov
mov
and
hlt
jo
in
fucom
fadds
xor
add
nop
inc
aad
pop
push
movl
pop
gs
sti
push
mov
fisubl
jmp
mov
mov
outsl
xchg
push
add
xchg
xchg
andb
scas
fdiv
lods
mov
mov
popa
cld
stc
pop
adc
scas
aad
jge
xor
enter
mov
dec
mov
push
arpl
dec
pextrw
cmp
scas
push
jnp
push
sub
jmp
stos
cld
mov
xlat
jo
fcmovnu
add
adc
fnstsw
lea
test
int3
cwtl
cwtl
bound
mov
xor
gs
mov
push
push
ret
dec
dec
std
rol
pop
fistpl
cmp
mov
mov
pop
and
cwtl
jmp
jl
push
lods
punpcklbw
push
lds
in
jmp
outsb
cli
lock
cwtl
sub
push
mov
adc
jp
fidivrl
xor
jmp
ja
xchg
inc
add
cmp
lock
iret
push
sub
cmp
mov
adc
and
movsl
jge
rcll
xor
mov
push
in
in
jmp
hlt
scas
xchg
add
aaa
mov
dec
cmp
jne
idivb
push
out
or
pop
add
aam
jp
aaa
pushf
mov
and
icebp
jbe
rclb
data16
test
and
cltd
inc
aam
mov
pop
dec
dec
lock
mov
icebp
mov
outsl
sub
mov
test
js
mov
sub
dec
sbb
aas
aaa
xor
mov
xchg
mov
jbe
sub
push
xchg
sbbb
mov
fisttps
pushf
and
iret
mov
mov
inc
test
add
sbb
cmp
push
cmp
fnstcw
mov
rcrb
push
leave
andl
test
push
jno
clc
add
mov
mov
mov
xlat
sub
cmc
loop
notl
jg
test
test
pop
inc
mov
mov
ror
in
sbb
clc
repz
fsubs
js
add
mov
mov
in
ja
push
roll
str
dec
jge
repz
mov
add
adc
xor
scas
cmc
ss
push
nop
je
xlat
fbld
fwait
cltd
mov
cmpsl
cmp
xchg
adc
sbb
dec
stc
push
jne
lea
shll
jo
cmp
dec
push
movsb
imul
push
dec
insb
mov
jle
dec
pop
push
cmpsb
cmp
mov
aas
inc
shll
jl
fmuls
sub
lock
jo
push
jg
inc
aam
repnz
fs
or
mov
fsubs
jnp
arpl
inc
jg
repnz
pop
sub
out
in
xor
mov
aam
test
adc
cmc
xlat
mov
inc
imul
cltd
mov
hlt
movsl
cld
inc
int3
adc
rcrl
mov
add
mov
lds
cld
and
push
xor
mov
cli
fmuls
fnsave
xchg
stos
inc
xchg
push
rcrl
cmp
add
push
mov
push
mov
aad
mov
inc
mov
adc
jb
lahf
in
sahf
daa
mov
mov
daa
neg
test
stos
push
mov
add
cmpl
les
mov
or
mov
lods
mov
fnsave
cmp
fwait
jno
mov
adc
scas
test
negb
xchg
lahf
pop
mov
pop
dec
xchg
adc
inc
sbb
jne
adc
xchg
xor
mov
nop
stos
xchg
nop
stos
test
iret
add
push
iret
stc
mov
loopne
stc
push
mov
enter
imul
inc
ret
dec
cmc
push
add
jmp
fisubrs
aad
lahf
std
mov
std
pop
repz
mov
outsl
ficoms
xor
ja
fiaddl
xor
mov
pop
int
leave
imul
pop
cli
or
iret
push
jecxz
inc
ds
xor
sar
xor
loope
mov
outsl
loopne
mul
mov
mov
iret
inc
mov
loope
shll
bnd
xchg
jnp
loope
push
inc
push
dec
bound
cmpsb
sub
mov
or
sbb
loopne
or
xor
inc
mov
cs
xchg
mov
call
sarb
cld
std
xchg
in
pop
or
icebp
shrl
dec
inc
pop
loop
xor
mov
aam
popa
jne
and
jl
pop
jmp
push
mov
test
sahf
pop
shlb
sub
sub
das
pop
push
sbb
int
pop
ror
outsb
das
sbb
pop
ret
xchg
sarl
fxch
pop
xchg
cmp
jle
cltd
cmp
adcb
insb
mov
or
sub
out
cmc
test
movsb
shrb
pusha
in
pop
leave
sub
push
mov
fxch
inc
rdmsr
dec
in
mov
mov
dec
adc
fcoms
mov
shlb
inc
dec
sbb
mov
inc
push
insb
jecxz
nop
ja
xabort
inc
pop
ds
or
loope
xlat
fbld
movsb
mov
cmpsl
rclb
test
mov
pop
gs
cmc
add
mov
ja
or
outsl
lea
sbb
pop
push
call
sub
pop
push
test
push
sahf
leave
and
lret
xor
outsb
xchg
int3
jno
dec
test
jge
aam
push
and
push
adc
outsl
pop
popf
loope
push
outsb
aad
lods
daa
shl
cmp
out
sbb
pop
je
dec
pop
xchg
pop
cmp
outsb
jp
push
aad
sahf
push
lret
gs
mov
test
xor
add
mov
sbb
out
mov
das
jno
addr16
shl
xor
push
sbb
cmp
sub
sbb
jne
dec
pop
add
ffree
lea
and
mov
fs
sbb
js
xor
xchg
dec
add
mov
lds
sbb
bswap
decl
arpl
stc
ss
and
cvttps2pi
mov
adc
outsb
rorl
mov
cmp
jmp
cmpsl
test
fisubl
rcrl
aas
adc
dec
popa
mov
int3
xchg
mov
add
or
and
clc
xchg
test
xchg
mov
mov
aam
int3
push
lock
mov
arpl
mov
mov
dec
push
push
fwait
or
repnz
and
or
orps
ljmp
mov
xor
je
gs
add
sub
std
and
ffree
dec
mov
mov
pop
cmp
cmp
cmpb
xchg
out
sbb
xchg
inc
adc
dec
inc
mov
out
jg
adc
test
mov
dec
inc
sub
pop
dec
cmp
xchg
push
push
push
inc
inc
cs
xor
fisttps
jge
inc
scas
stc
jne
push
xchg
push
mov
movsb
pop
push
sbb
inc
leave
xlat
shll
jne
in
aam
sbb
jle
repz
sub
ds
outsl
push
xchg
jmp
daa
shll
cmpsl
jo
leave
popf
outsb
adc
inc
xchg
mov
cltd
jb
cmp
xchg
sub
adc
in
aas
outsb
mov
inc
adc
sub
adc
rep
pop
fadds
test
arpl
lods
popf
lcall
xchg
repnz
mov
cmp
sbb
cmp
mov
jnp
cmpsb
add
popf
test
dec
rol
push
push
adc
jl
dec
inc
in
lods
shr
rolb
pop
nop
add
cli
sub
imul
jecxz
inc
mov
inc
testb
xor
dec
movsb
dec
in
pop
addl
pop
add
mov
fstp
adc
call
lahf
jl
je
jnp
jmp
in
push
enter
test
out
push
das
out
mov
jne
sub
mov
adc
cmp
add
adc
push
push
or
test
sub
push
sbb
and
inc
mov
sbb
adc
push
jmp
insl
pop
lds
cmp
in
or
lock
cmp
jno
xchg
push
xor
rolb
inc
shl
stos
aam
jl
popa
sbb
sbb
cmc
loope
inc
pop
xchg
inc
xchg
jp
or
mov
ds
add
repz
mov
mov
aad
out
sbb
popf
rcrb
xchg
xor
lds
dec
cld
sub
xor
dec
inc
push
popa
pop
mov
xor
dec
clc
lcall
imul
mov
push
or
enter
enter
arpl
pop
mov
jge
test
call
mov
jle
int3
ja
outsl
mov
mov
cmp
mov
mov
mov
and
xor
mov
mov
xor
popa
jg
jle
mull
push
lret
int3
push
bound
pop
mov
addr16
sbb
dec
mov
stos
mov
cli
jbe
inc
mov
out
clc
sbb
ds
sub
mov
jo
int3
rclb
inc
dec
sbb
jae
cmp
mov
insl
les
inc
pop
scas
push
cmp
aas
mov
jp
test
xor
lds
scas
pop
test
xchg
adc
mov
xor
sbb
sbb
xchg
mov
jbe
lock
movsl
add
and
sbbl
clc
pushf
cli
cmp
cmp
sbb
pop
rorb
dec
iret
fisttpl
icebp
adc
mov
sbb
mov
rclb
mov
dec
mov
jno
pop
lds
inc
pop
int3
pop
jb
mov
js
inc
rcrb
and
stos
stc
sbbl
inc
or
jg
inc
shl
jmp
outsb
cmp
sbb
frstor
inc
insl
lret
mov
cmpsb
add
add
xchg
pop
lock
pop
popa
jle
popf
outsb
adc
xchg
iret
xchg
cmp
xchg
sarb
in
repz
jmp
rcrl
rcll
pushf
cmp
repnz
mov
and
loopne
popf
ret
test
mov
int
incb
ja
imul
or
add
lcall
jmp
and
cmpb
xchg
inc
push
lods
test
sbb
mov
jmp
fsubl
xor
mov
bound
push
lcall
or
jo
push
push
in
leave
cmpsb
imul
lea
add
add
js
pop
cmp
jae
jle
cmp
mov
cmp
mov
mov
fwait
lds
loope
xchg
roll
cs
mov
push
mov
jg
mov
sahf
dec
pop
fcompl
sbb
outsb
movsl
ds
imul
rcll
pop
subb
dec
js
rclb
sub
xor
xor
mov
mov
mov
dec
notb
dec
sub
xor
jp
andb
xlat
cmc
xchg
push
pusha
in
dec
roll
xchg
sub
mov
pop
xlat
test
push
jnp
lahf
xchg
add
cwtl
cmp
aad
aaa
sub
ja
popf
nop
push
xor
adcb
aam
movsb
divl
xor
jnp
ret
dec
pusha
lahf
or
clc
std
addr16
sub
sbb
hlt
sahf
xchg
fs
xchg
dec
test
inc
jb
ljmp
xor
popl
aas
loopne
scas
arpl
xchg
ss
gs
or
jno
fnstenv
int3
es
ret
or
gs
cmpsl
cmp
pop
shll
pop
cmpsb
pop
xchg
lea
jge
xchg
mov
in
mov
pop
sahf
mov
aad
add
sbb
push
popa
adc
movsl
sub
scas
gs
inc
mov
std
es
andl
cli
enter
jnp
test
mov
fisttpll
in
sub
cld
sbb
pop
insb
std
add
sbb
push
xor
adc
clc
scas
arpl
lock
push
cs
dec
sub
lret
cltd
es
xchg
mov
in
cmp
mov
pop
mov
fnsave
sbb
jnp
ret
mov
std
or
nop
and
dec
mov
test
jae
fidivl
lods
imul
add
f2xm1
jae
cmp
insl
lds
dec
in
dec
dec
sub
inc
jmp
scas
jns
shl
jnp
cmp
test
sti
cmp
push
or
and
mov
inc
ljmp
mov
dec
pop
movsl
dec
mov
mov
mov
test
test
test
sub
insl
xchg
outsl
test
sbb
jno
xchg
sti
or
xchg
and
push
enter
ffreep
lret
pop
repnz
pop
shlb
pop
es
mov
sahf
in
xchg
leave
mov
ret
lea
out
sub
jl
repnz
mov
call
ss
xchg
or
jne
movb
push
xor
jecxz
push
jge
cmpsl
iret
pop
mov
or
popf
push
loopne
mov
movsl
or
or
add
subl
lea
cld
jl
mov
arpl
sub
push
mov
jae
dec
aad
jno
or
pop
shlb
mov
sbbb
pushf
or
xchg
fisttpl
test
lcall
pop
arpl
xchg
inc
aaa
inc
xorb
adc
icebp
adc
cmp
or
ja
imul
and
jecxz
lcall
pop
icebp
loope
cmp
ds
xchg
xchg
addps
push
mov
std
nop
push
push
sub
adcl
orl
aam
sbb
push
test
out
jno
std
test
in
xor
mov
pop
pop
mul
stc
ja
xchg
lods
xchg
icebp
lods
push
jle
xchg
inc
pop
dec
loopne
adc
lahf
fisubl
pop
push
pop
mov
cmpsw
cmp
inc
psraw
push
lds
out
faddp
inc
leave
mov
bound
add
mov
mov
pop
out
push
mov
mov
xor
cmpsb
sub
push
add
out
repz
stos
xchg
and
xor
dec
pusha
push
and
stos
dec
stos
jno
fmull
cmp
add
cltd
insl
imul
mov
xchg
pushf
pop
or
fnsave
push
out
dec
fcompp
aam
test
xchg
dec
jl
fistl
rorb
xchg
jmp
out
adc
ja
sub
mov
cmp
push
lds
add
push
xor
gs
imul
outsl
or
jne
jp
ss
add
fsts
jo
cli
movsb
lds
mov
jg
mov
cmp
xchg
sub
push
jae
lock
fnstcw
jbe
inc
jb
mov
push
insb
push
xchg
add
mov
in
insl
ljmp
adc
add
enter
cmp
mov
jb
inc
insl
dec
pop
cld
or
jl
pusha
inc
loopne
fstpt
movsl
insl
icebp
xlat
sub
mov
jno
inc
mov
sbb
xor
xchg
sub
out
test
test
pusha
lods
aaa
cli
mov
and
lods
test
cmp
dec
mov
push
add
jbe
jb
ret
jecxz
inc
sub
and
jbe
push
pop
aad
jb
fs
mov
movsl
test
arpl
repz
mov
mov
shrb
test
pop
in
out
iret
jo
aam
adc
xchg
mov
sbb
mov
sti
jmp
pop
add
jns
xchg
xchg
dec
loope
cmp
dec
mov
scas
imul
loop
inc
add
mov
aam
pop
cmp
fistps
and
jo
add
push
jo
in
pop
std
jge
xchg
ret
test
daa
scas
dec
test
dec
xor
and
fisubrs
dec
and
rolb
mov
pop
jnp
sbb
aaa
leave
arpl
and
scas
sarl
loopne
mov
inc
jge
mov
cmpb
popa
sbb
jae
mov
int3
aaa
rolb
adc
jnp
and
js
dec
jbe
outsb
into
mov
inc
xlat
push
incb
fs
xor
aas
mov
sbb
shrl
std
and
outsb
ljmp
sbb
mov
ret
jne
xor
js
pop
pop
ss
jnp
xchg
xchg
push
pop
aaa
fistpll
mov
faddl
sbb
stos
hlt
imul
out
mov
and
std
dec
jecxz
gs
addr16
xor
ficomps
sbb
sbb
lret
and
fildl
jae
outsl
inc
arpl
sahf
and
sarb
fwait
testl
pop
xchg
dec
ljmp
xchg
jmp
pop
call
xor
iret
mov
jge
lcall
or
hlt
dec
fistpl
and
mov
xor
jle
jecxz
testl
mov
out
xchg
pop
mov
xchg
mov
data16
bound
xor
imul
lock
loopne
fimuls
arpl
jmp
add
add
out
xchg
neg
stos
pop
xchg
std
divl
vxorpd
aad
jo
test
dec
jne
arpl
xchg
popa
mov
jecxz
push
icebp
cs
outsl
push
and
pop
mov
lea
jp
ret
sbb
int3
jle
loopne
jo
in
loop
mov
mov
fdivs
cltd
ja
dec
js
jecxz
xor
fbstp
cmp
mov
mov
lock
sub
aad
and
out
inc
out
push
push
dec
xlat
dec
mov
shrl
inc
lcall
mov
adc
add
sbb
inc
mov
sti
push
add
cld
inc
cmc
jb
sub
scas
scas
sbb
sbb
lods
xchg
scas
in
cmp
ret
movb
push
xor
and
adc
es
je
xor
lcall
pop
aad
ss
enter
or
jmp
xchg
dec
dec
fucom
mov
and
xchg
inc
lcall
cmp
enter
mov
cmc
loopne
loopne
sti
mov
insl
out
stc
lock
mov
xor
popw
mov
rcr
ret
out
je
dec
rcrl
in
lret
mov
test
sti
les
sarl
xchg
ja
leave
cmpsl
neg
dec
es
in
test
mov
divl
mov
mov
cli
sub
push
mov
testl
pop
add
nop
out
fnstenv
xchg
sbb
sub
mov
pop
dec
xor
ficoms
sahf
imul
js
hlt
cli
lret
mov
sbb
stos
mov
dec
leave
pop
xor
popa
mov
das
xor
ret
repnz
fucomi
sbb
addr16
dec
sbb
stos
loop
xor
pop
sub
test
sub
stos
push
xor
adc
or
push
cmp
repnz
cld
rclb
lods
out
std
jns
dec
jb
test
dec
add
push
sub
hlt
push
xor
dec
jg,pn
add
lods
test
add
inc
andl
xchg
mov
dec
pushf
pop
scas
mov
arpl
in
push
dec
pop
enter
sbb
or
mov
js
pop
sbb
sahf
mov
pop
sub
fnsave
rcr
xchg
pop
jns
sbb
in
xchg
popf
xchg
fisubs
xchg
add
loop
or
je
adc
les
std
sub
sub
insl
xlat
movsb
in
jae
cld
sbbb
adc
mov
scas
test
dec
inc
pop
adc
daa
xchg
in
jae
cld
iret
filds
push
jl
jp
dec
cli
repz
clc
sub
movsb
adc
cmp
insb
dec
mov
cmp
pop
add
xchg
stc
jb
cmpl
bound
mov
imul
movsb
orb
subl
mov
rcll
insl
fidivrs
jbe
insb
push
call
pop
outsl
xchg
sub
add
test
jb
cmp
imul
cmc
iret
adc
test
or
test
and
jno
outsl
xor
inc
or
scas
fs
ja
sbb
push
std
movsb
mov
jg
xor
aas
andb
fcmovne
mov
add
popf
std
mov
mov
int3
cmc
rolb
mov
mov
hlt
pop
push
aad
jae
xchg
scas
stos
das
fistps
sub
mov
cmpsb
inc
push
iret
xlat
xchg
dec
scas
push
cmp
fbstp
testl
movsb
idivl
bound
in
pop
add
mov
sahf
xor
inc
push
mov
pop
mov
mov
lock
mov
inc
add
fisubrl
mov
idivl
inc
mov
pop
mov
div
pop
add
sub
mov
insl
fwait
push
cmc
mov
add
xchg
xor
stc
fisubrl
inc
or
fcom
in
cmc
stc
xor
add
aam
into
push
inc
xchg
and
ljmp
mov
dec
mov
inc
stos
outsl
add
mov
cmp
outsl
movsb
jp
sbb
add
jge
inc
das
in
mov
mov
mov
fsubrs
pushf
fists
icebp
add
inc
push
ror
cmp
jbe
aad
add
les
aam
adc
sahf
mov
add
les
fbld
xor
cmpsb
adc
xchg
jecxz
dec
xor
dec
out
push
lock
cli
lods
int
mov
xchg
mov
pop
and
sbb
popa
add
jg
nop
adc
inc
mov
shl
mov
xlat
mov
mov
or
push
ret
mov
dec
imul
dec
adc
xchg
adc
xor
lret
adc
sbb
sbb
dec
pop
mov
mov
std
sbb
rclb
fcoms
lret
mov
pop
pop
lods
lret
out
ret
cli
rolb
stos
sahf
jno
loop
ret
xchg
mov
repz
andb
inc
scas
repz
push
daa
bound
shlb
sub
jae
sbb
test
pop
xchg
jnp
or
notl
adc
xchg
out
xchg
jbe
fidivrs
mov
fcoms
std
push
pusha
cmp
and
lock
push
xchg
push
adc
mov
mov
pop
jl
cmpsl
jecxz
push
mov
xchg
mov
add
pop
and
xor
outsl
xchg
std
add
and
out
dec
jl
lods
jp
es
rorl
mov
shll
jle
popa
dec
or
push
mov
outsl
les
pop
frstor
in
test
jecxz
mov
sar
inc
xchg
pop
pop
or
daa
in
add
add
xchg
repnz
insl
inc
jmp
cmp
jmp
dec
xor
xor
std
rolb
test
mov
jge
mov
arpl
or
jb
mov
add
lock
popf
and
or
mov
fwait
push
lcall
sub
ret
lret
mov
and
ret
mov
lds
fs
jmp
ja
test
mov
push
xor
scas
stos
xchg
lods
test
ret
cltd
pop
and
jle,pt
filds
pop
pop
les
lock
jb
enter
lcall
sub
lods
jge
rolb
push
inc
adc
cmp
inc
out
sub
xor
mov
or
xchg
rolb
lods
aam
sub
push
aam
dec
movb
sub
and
lret
dec
mov
out
in
dec
movsl
dec
into
movsl
rclb
xor
dec
das
dec
mov
sub
jle
out
scas
outsl
xchg
daa
int3
scas
enter
outsb
mov
scas
xor
aas
sbb
ds
xor
fistpll
push
jb
jns
jnp
lds
insl
outsl
fimull
and
dec
aam
adc
andl
aas
mov
fistl
xchg
push
mov
xlat
sbb
sub
add
pop
aad
jmp
pop
jmp
ja
jecxz
cmp
lods
cmpsb
xlat
or
xchg
stc
sti
rorl
cld
mov
dec
leave
xor
fsubs
pop
dec
bound
ja
bound
mov
pop
inc
iret
pushl
pop
cmp
push
add
xchg
lods
out
mov
fdiv
shlb
and
and
sub
xor
xchg
lds
inc
lret
pop
or
cmc
loopne
repz
repnz
mov
imul
or
mov
and
mov
stc
add
mov
rdtsc
arpl
xchg
testb
stos
pop
mov
and
or
insb
cmp
xchg
and
or
add
pop
scas
pop
ljmp
or
test
mov
and
movsb
xchg
xorl
adc
gs
out
js
roll
cwtl
into
add
inc
dec
data16
mov
xor
jmp
xchg
out
jge
push
dec
inc
xchg
outsl
cmp
pop
fsubl
insl
test
xchg
ja
and
xchg
ljmp
push
sub
es
cs
mov
cmc
pop
popf
mov
enter
shlb
mov
mov
mov
lahf
mov
dec
int
xchg
jb
loopne
dec
fdivs
mov
lock
cltd
push
jne
push
or
lea
bound
lret
xchg
int3
jo
cli
jle
or
incb
jb
inc
pop
add
arpl
outsl
and
scas
dec
adc
mov
je
outsl
add
je
out
scas
lcall
jg
cmp
and
jnp
out
mov
dec
mov
repz
int
cmpsb
aad
inc
add
jl
cmp
inc
cmpsb
mov
scas
push
in
ss
into
sbb
push
and
dec
adc
xchg
mov
xchg
in
pop
push
cmpsb
push
pop
out
sub
testl
movsb
fcomi
lret
pop
scas
ljmp
push
cli
jo
rorl
push
je
pop
mov
nop
dec
cmpsl
adc
xor
cli
xorl
dec
cmp
xchg
pop
or
adc
out
into
adc
ds
js
mov
out
xchg
scas
xor
push
inc
mov
loopne
je
adc
gs
add
cmpsb
pop
xchg
and
mov
push
roll
lret
dec
call
sbb
sub
aaa
mov
xchg
mov
in
pop
dec
adc
jno
in
and
sub
fcmovnbe
test
aas
or
arpl
inc
xchg
dec
xor
pop
sbb
mov
xor
ret
and
lds
jne
bound
hlt
sar
pop
leave
add
mov
lods
and
sub
push
lcall
jmp
pop
jnp
int
adc
sub
cmp
lds
xlat
jecxz
lcall
sbb
fs
out
rcl
or
stc
ss
xchg
in
push
xchg
bound
cld
das
and
push
leave
adc
adc
mov
adc
add
push
add
fwait
push
iret
or
dec
or
js
std
xor
sbb
push
in
or
jecxz
gs
fwait
inc
pop
inc
xor
fs
rorb
sahf
push
or
jae
xor
pop
lahf
fucomip
add
push
lds
add
xchg
hlt
xchg
lea
aam
jb
or
mov
ret
icebp
stc
xchg
xor
sbb
scas
mov
sbb
lcall
ds
sbb
test
enter
lods
or
leave
lea
jo
or
sbbb
sbb
xor
gs
lods
xchg
iret
pushf
leave
sub
and
ret
add
stos
ds
and
push
and
jecxz
cmp
inc
xor
in
pushl
rcrl
scas
jbe
mov
xchg
jo
rorb
jp
sub
lock
in
push
fsub
push
mov
pop
ret
movsl
cwtl
mov
movsl
ljmp
mov
dec
and
xlat
push
push
jne
out
aad
sub
lret
mov
insb
inc
ss
or
sub
xchg
pusha
sahf
or
les
insl
mov
push
cmp
push
ja
mov
push
xchg
dec
mov
leave
es
and
sbb
xchg
inc
jge
xchg
mov
push
dec
pop
sbb
pop
inc
mov
repnz
or
je
aas
jae
sub
add
inc
jge
lahf
bound
sub
cmp
mov
lock
jl
inc
cmp
arpl
rolb
mov
cmp
ficoms
adcl
xchg
movsb
mov
repnz
cmc
fwait
lock
and
mov
ja
call
or
shrb
lea
fsubrs
xchg
int3
push
repz
mov
mov
enter
pop
out
lret
in
xchg
push
mov
out
jne
test
int
mov
mov
arpl
inc
in
sahf
jb
lods
pop
mov
pop
push
cmp
data16
mov
push
icebp
push
cmp
mov
sbb
imul
adc
out
pop
or
pop
xor
xchg
scas
sahf
sbb
pop
sub
lret
hlt
divl
dec
test
jae
in
jmp
lahf
push
mov
imul
mov
pop
popa
jne
push
out
dec
lods
dec
addr16
jo
push
hlt
inc
xchg
push
push
orb
add
cmp
std
test
hlt
xlat
popa
int
data16
lock
adcb
and
inc
xor
mov
sbb
dec
xor
cmp
aas
les
ret
inc
roll
add
and
leave
mov
int3
xchg
xor
adc
lods
xchg
inc
cmpsb
pop
in
sbb
scas
mov
ret
sbb
dec
mov
xchg
shlb
jl
mov
cmp
por
pop
stc
push
mov
test
sub
fidivrs
popf
cmp
mov
fsts
test
push
and
ljmp
pop
add
lock
push
xor
dec
scas
sub
ss
test
scas
mov
inc
icebp
test
jge
arpl
xchg
sbb
test
dec
adc
bound
sarl
or
xchg
fsubl
les
push
pop
pop
nop
ds
ficoms
xchg
out
xor
sbb
dec
fbstp
dec
cmp
add
xor
roll
stos
nop
fdiv
notl
jmp
cmpsl
mov
jp
dec
lock
ss
inc
notl
rolb
clc
cmp
jp
and
push
jns
pop
int3
and
adc
mov
shrl
adc
mov
test
or
jg
xchg
subl
adc
fbstp
jae
mov
adc
imul
mov
shrl
fnstcw
or
xchg
scas
or
stos
outsl
mov
mov
push
or
cmpsb
jp
leave
clc
rolb
hlt
insb
pop
and
cmp
repnz
icebp
mov
mov
or
aad
dec
andl
mov
add
arpl
daa
pushf
inc
rolb
inc
stos
jno
mov
lods
ss
cmpsb
bound
je
cmp
stos
jmp
nopl
adc
cwtl
pop
das
xor
jmp
sbb
ja
rolb
push
insb
jne
pop
pushf
push
mov
jo
test
lock
push
pop
sarl
es
mov
stos
sti
andb
and
xor
jg
mov
daa
jle
or
ret
add
sub
icebp
test
pop
inc
enter
inc
test
roll
push
pop
pop
aas
lret
add
push
data16
dec
and
xorl
pop
mov
pop
das
scas
mov
fdivrl
sub
sarl
dec
ja
push
clc
adc
icebp
fnsave
cmpsb
xor
idivb
jns
outsl
cmpsb
addr16
push
xor
aaa
xor
inc
addr16
sub
into
push
jo
dec
stos
mov
pop
adc
mov
add
xchg
lahf
int
xchg
fisubrl
dec
inc
mov
fldz
push
ficoml
dec
push
push
lods
fwait
mov
sub
loop
fisubrl
int3
mov
push
dec
enter
push
push
push
push
fildl
push
repnz
push
cmp
fiadds
jle
xchg
mov
arpl
pop
add
loope
and
jo
or
cmp
movsb
outsb
lock
mov
push
sub
popf
dec
clc
ja
dec
popa
cs
and
push
fsubrl
xor
orl
or
mov
test
popa
repnz
mov
rcll
cmpsl
jbe
mov
lcall
sub
test
loope
test
inc
push
mov
cmc
dec
cmp
in
add
addr16
push
jne
lcall
adc
fwait
cltd
cmp
pop
sbb
xchg
dec
jae
ja
movl
add
loopne
mov
mov
jnp
xor
repz
into
mov
out
xor
xor
loope
out
inc
fidivs
push
scas
dec
push
xor
decb
inc
std
jecxz
inc
loope
lods
sub
or
xor
mov
lods
mov
xchg
cmp
test
xchg
shll
sbb
dec
adcl
in
pop
loope
cmp
push
push
adc
mov
pusha
push
mov
pop
fsubl
aas
xchg
lock
ljmp
fildl
test
jno
ror
int
and
fwait
xlat
jnp
iret
scas
cwtl
nop
fstpt
or
pop
or
sti
sub
das
inc
imul
pop
test
inc
in
push
popa
xor
or
ja
ljmp
jp
in
pop
pop
fcmovne
movsb
fildll
or
aam
lret
arpl
outsl
les
hlt
pop
dec
sti
sub
and
std
test
orb
loop
out
mov
jmp
clc
shlb
dec
cmpsb
sbb
pop
in
gs
addb
and
fs
push
rcr
push
mov
cmp
std
cmpsb
fdivrl
popf
push
jge
adc
hlt
fcmovnbe
dec
and
stos
xchg
mov
push
mov
and
test
out
lcall
ja,pn
sbb
out
dec
sub
xchg
sub
xchg
push
mov
xor
push
push
cmpsb
push
call
ds
arpl
add
xchg
ss
xor
scas
insb
mov
mov
mov
or
xchg
jle
ja
stc
lock
xor
cmp
fwait
cld
jb
add
and
fiaddl
ljmp
fistps
mov
ljmp
xor
mov
mov
je
cmp
jbe
jne
sbb
out
outsl
decl
cmp
loopne
loopne
inc
pop
arpl
dec
imul
cld
test
rorl
xor
inc
lods
cmpsl
pop
add
pop
xor
or
outsb
bound
sahf
push
push
int
flds
cmpsl
adc
in
xlat
jae
loopne
jecxz
push
mov
mov
add
push
test
push
pop
ljmp
pop
adc
outsl
in
ret
inc
fdivrs
shrb
pop
pop
inc
fmulp
ficomps
adc
push
xor
and
imul
push
fdiv
pop
or
pusha
cmpsb
aas
aad
fnstcw
fmul
pop
sbb
repz
out
jne
dec
xor
add
mov
hlt
icebp
daa
push
sub
jo
shr
cmp
push
hlt
jbe
sbb
incb
es
jle
dec
out
or
mov
push
jo
test
repz
fwait
hlt
shll
mov
sti
push
push
mov
in
movsl
in
add
cmp
ss
mov
dec
xor
and
xchg
sbb
pop
aas
xchg
cltd
movsb
int3
push
sbb
icebp
lea
cwtl
int
shlb
in
jb
sbb
push
push
mov
ds
imul
adc
and
sub
push
xchg
inc
inc
adcl
xchg
int
adc
sbbb
xor
cmp
mov
cmp
gs
mov
or
cmp
bound
sub
test
xchg
and
jbe
lods
lcall
xchg
enter
outsb
cmpl
test
pusha
test
xor
inc
adc
dec
jmp
xchg
push
cmp
inc
or
outsb
out
icebp
cmc
dec
push
mov
dec
iret
sti
lods
std
inc
xchg
jno
dec
cmp
pop
scas
sub
scas
mov
xor
xor
leave
loope
mov
mov
mov
testb
icebp
dec
movsb
dec
outsl
sub
inc
add
mov
sub
out
jmp
sbb
pop
pushf
popa
loop
cmp
test
mov
sbb
jle
rcll
rcll
xor
loope
mov
jns
nop
and
fucomp
jne
pusha
dec
push
inc
mov
push
push
lret
xor
orl
pop
inc
mov
and
ret
ljmp
pop
and
aam
cmpsb
sbb
lock
ljmp
sarl
dec
rcrb
dec
pop
jbe
inc
std
push
jb
aas
or
scas
iret
scas
push
add
call
add
sbb
jnp
cli
and
sahf
mov
fnstcw
mov
xor
stos
in
enter
add
mov
shl
pusha
bound
push
or
out
push
out
cmp
sub
rcl
jno
push
xchg
aad
pushf
jl
mov
insb
mov
and
cmp
repz
in
cmp
repz
mov
mov
sub
adc
test
cmc
leave
mov
sbb
enter
ret
les
fcmovu
mov
out
xchg
stc
sbb
lcall
inc
loope
mov
mov
loope
cmp
int3
add
mov
push
daa
jno
sub
mov
das
add
mov
or
fidivs
es
push
dec
aad
dec
pusha
aam
clc
push
movsb
inc
dec
popa
sahf
stos
aaa
insb
pop
stc
aas
daa
test
fcomps
mov
rclb
dec
fs
cld
xchg
int
popf
movsb
repz
insb
push
idivl
aas
and
adc
ja
aam
cltd
out
sbb
sub
mov
out
jne,pn
rcrb
jne
and
add
subb
movsb
pushf
lods
push
add
sub
push
pusha
jg
int
sbb
ret
mov
xor
dec
adcl
adc
test
jg
xchg
xor
inc
les
add
es
sahf
inc
call
xor
inc
in
popf
clc
push
jle
jns
leave
andl
cli
jo
insb
jecxz
rcll
add
and
jge
jae
mov
out
inc
negl
pusha
push
adc
jmp
loop
cmp
std
cltd
insb
outsb
inc
push
add
pop
psadbw
bound
cmp
dec
lret
movsl
mov
push
push
push
sub
push
iret
sahf
mov
xor
mov
mov
and
in
adc
xlat
xor
mov
outsl
mov
push
mov
lds
jmp
adc
ds
mov
sub
inc
jno
ret
xchg
sbb
xlat
js
lods
sti
mov
mov
test
aad
dec
aaa
jmp
arpl
sbb
mov
rorl
cmc
inc
pop
ret
daa
add
push
sub
clc
jb
and
rorl
lret
sahf
call
aas
or
lods
dec
mov
loop
push
aam
jae
scas
push
lods
int3
mov
clc
ficompl
dec
push
imul
les
sbb
in
jno
push
push
in
inc
int3
jg
xchg
leave
mov
loope
mov
mov
cmpsb
gs
jmp
or
xor
aad
mov
sti
or
aam
mov
jo
xchg
ret
fdivs
in
iret
ficoml
jo
lods
in
aam
mov
mov
test
cmp
xor
add
jmp
les
cmpb
and
pop
into
cmc
xchg
add
jo
mov
pop
out
pop
inc
sub
icebp
cld
enter
es
jb
bnd
jecxz
les
mov
mov
mov
arpl
stos
jg
js
hlt
enter
xor
bound
sti
stc
ss
cmpl
mov
and
sub
sub
and
subb
fs
and
fwait
or
xor
in
mov
xor
cmp
xchg
pop
fs
nop
fsubrl
or
stc
ss
mov
sbb
cmp
insb
ljmp
lret
ret
or
int
cmp
nop
inc
movsl
clc
dec
jge
ret
gs
xchg
mov
daa
adc
pop
or
cmc
adc
int3
pushf
jne
mov
jg
sahf
stc
jae
jo
sub
sahf
inc
mov
pop
ljmp
je
and
xchg
xchg
add
dec
les
or
or
cld
lea
xor
add
mov
cmp
loop
mov
sbb
pop
mov
mov
ja
mov
aas
jb
or
mov
call
sub
or
pop
xor
inc
or
cmp
lcall
mov
dec
mov
push
mov
hlt
mov
std
pop
pop
ficoml
xchg
push
or
add
or
xchg
ret
push
and
pop
int
push
and
repz
sbb
ljmp
ret
mov
cs
lods
call
push
xor
push
lods
icebp
pop
iret
xchg
mov
mov
cwtl
adc
adc
jmp
mov
aas
inc
out
adc
inc
pop
js
testb
cmp
stc
jne
mov
mov
inc
dec
in
xor
and
mov
cmpsb
scas
and
fs
aad
aam
inc
mov
out
sbb
outsl
not
pop
xlat
sbb
insb
je
lret
in
jle
out
imul
imul
push
in
sub
mov
leave
mov
or
fildll
es
cs
insb
lret
xchg
sub
sti
mov
cs
xlat
mov
mov
mov
repnz
push
aas
jns
ret
mov
and
dec
mov
ret
mov
imul
or
jmp
das
loop
inc
push
cmc
fsubrp
dec
outsl
xchg
xor
fists
jb
das
adc
jge
xlat
adc
ja
icebp
bound
fs
lods
enter
les
xchg
pop
cmp
inc
popf
movsl
adc
add
or
add
mov
icebp
test
mov
sub
out
and
mov
test
mov
dec
pop
test
jmp
faddl
mov
inc
daa
in
mov
bound
mov
loop
jg
jb
cld
ds
in
popf
pop
jecxz
adc
roll
xchg
sub
cwtl
je
orl
flds
mov
mov
ja
arpl
mov
movsl
or
dec
xor
iret
and
mov
clc
sub
xchg
adc
cmp
ret
aas
lods
adc
ficoms
clc
cld
push
jp
sub
or
rcll
xor
jge
cs
cld
sti
dec
insb
mov
daa
xor
scas
xor
push
dec
popf
push
xor
mov
test
in
adc
or
jg
cmp
ds
mov
outsb
loope
adcl
xchg
push
sbbl
mov
add
aad
mov
fstl
sti
outsl
adc
inc
negl
pop
inc
dec
and
mov
out
test
loop
mov
movsl
clc
gs
mov
imul
xchg
xchg
sbb
jno
jge
repz
js
jae
pusha
add
nop
inc
call
std
inc
inc
jmp
jge
cli
mov
int3
cli
popf
insl
push
push
dec
mov
ss
inc
sti
or
cmpsb
jne
pop
cmp
aad
sbb
and
xchg
push
addr16
push
mov
mov
jmp
or
in
pop
push
mov
gs
es
pop
or
icebp
xchg
sub
ja
jbe
adc
inc
int
gs
xchg
addb
mov
and
dec
mov
xlat
call
mov
jne
sahf
mov
xor
xchg
dec
xchg
rcl
int3
out
testl
cmp
test
jecxz
push
shlb
test
adc
adc
dec
xchg
fs
push
aas
inc
mov
dec
jl
sub
fnstsw
cmc
outsb
xor
add
aaa
xor
mov
aaa
mov
aam
mov
push
inc
mull
sahf
adc
std
pop
or
mov
test
push
adc
loopne
pop
pop
out
xchg
imul
adc
push
and
pop
rorl
mov
sub
and
sub
pop
sbb
xor
sbb
std
test
mov
jge
cs
ja
imul
pop
fs
test
jo
bound
les
jo
xlat
mov
popa
in
aaa
sahf
xor
scas
pop
add
and
outsl
rolb
gs
cmc
dec
iret
mov
lock
fdivrs
imulb
shrl
imul
hlt
adc
out
icebp
sub
mov
clc
sbb
and
push
test
fwait
xchg
jge
or
lcall
sbb
bound
cltd
fsubp
xchg
fbld
hlt
pop
pop
cs
movsl
in
mov
out
int3
push
mov
popf
cld
loop
cmp
mov
jo
cltd
stos
and
adc
fcompl
and
and
test
mov
test
and
sbb
shrl
ret
ljmp
cmp
dec
arpl
adc
xchg
or
jl
pop
add
call
repz
cltd
xchg
dec
mov
or
sub
sub
cmpl
adc
pop
fsts
enter
mov
fstl
cmpsb
test
dec
mov
mov
add
js
ds
inc
jns
daa
faddl
mov
or
jbe
push
iret
cmc
push
jge
mov
xchg
sbb
xchg
repnz
rcll
xchg
jne
sahf
sbb
std
daa
jmp
mov
hlt
call
mov
lds
cwtl
mov
imul
cmpsb
sahf
jle
dec
push
mov
cmc
xchg
jne
lods
xchg
fs
push
ljmp
aad
and
xchg
xchg
stos
xor
add
lods
mov
mov
in
adc
xor
push
push
fnsave
rolb
pop
dec
mov
jmp
xor
jmp
movsb
dec
lcall
inc
hlt
push
stos
test
movsb
jg
cmp
aam
loop
mov
cs
cmp
testb
push
jge
les
fmulp
mov
or
sti
or
sub
or
fists
jmp
repnz
ja
sub
outsl
cmp
adc
out
aam
cmpsb
lock
mov
out
sbb
jp
dec
js
sbb
mov
imul
inc
mov
jmp
pusha
in
xor
std
add
push
sbb
mov
push
jno
fldcw
in
inc
das
js
les
lret
add
outsb
fdivp
ja
mov
lret
js
movsb
ret
cmp
push
mov
and
mull
sub
add
sub
xor
xchg
push
imul
shr
pop
mov
push
cmp
orb
cmp
pop
add
popa
adcb
add
stos
cmp
js
popf
jmp
fbld
lea
sbb
sbb
or
push
xor
jl
sub
mov
cmpsb
fmuls
cmp
inc
xor
mov
loop
mov
out
das
in
roll
xchg
shl
adc
test
vandps
out
ja
sbb
xchg
or
and
bswap
shl
and
mov
push
rcr
dec
rcrl
fs
add
nop
sarb
lret
out
pop
lret
incl
fsts
sbb
gs
enter
test
cmp
pop
scas
int
jne
dec
mov
xchg
repz
mov
or
push
push
xor
sub
pushf
in
lds
xchg
nop
lret
fdivrs
or
adc
rcll
mov
xchg
in
push
notb
add
mov
not
call
mov
dec
test
mov
aad
mov
xchg
cmpsb
loopne
iret
out
xor
xor
js
or
sarl
push
test
repnz
xlat
dec
mov
icebp
lahf
inc
cmp
enter
sbb
inc
pop
fwait
mov
dec
inc
cld
jp
xchg
popf
jbe
cmp
push
stos
pop
pop
outsl
xchg
jnp
lcall
sti
xor
jne
xchg
vpcomd
and
and
push
mov
sbb
popa
in
mov
mov
sbb
popf
hlt
sbb
jae
pshufw
xor
arpl
inc
mov
adc
inc
in
sbb
mov
push
and
int3
mov
bound
outsb
outsl
lret
cmp
pop
mov
push
test
inc
scas
in
inc
or
mov
fcomp
or
jmp
sub
in
xor
sbb
loop
movl
sub
je
sti
imul
sub
dec
dec
mov
pop
adc
push
ret
or
loopne
mov
mov
das
icebp
xlat
xchg
mov
les
aas
ficompl
int3
inc
loope
out
cmc
xchg
lds
sbb
cmpsb
pop
xor
push
dec
lods
jge
adc
or
fcompl
inc
push
pop
sub
adc
dec
gs
mov
mov
mov
jne
movsl
daa
inc
mov
fucom
mov
lret
out
lea
divl
mov
mov
fwait
jns
xchg
cmpsb
daa
xchg
int3
jecxz
mov
add
and
jp
push
popa
popf
xor
sti
mov
cmpsl
push
imul
add
push
add
insb
xchg
inc
test
adc
xchg
adc
loop
imul
and
lcall
rsqrtps
mov
insb
and
loopne
enter
pop
in
mov
mov
cmpsb
ret
arpl
xor
and
pop
pop
push
repnz
mov
aaa
sahf
aam
scas
aaa
stos
es
xchg
jmp
dec
push
push
pop
jmp
popa
nop
pop
cwtl
test
enter
mov
insl
pop
push
insl
mov
jae
scas
lret
test
daa
cmp
test
jo
aam
cmp
cwtl
ret
div
aas
jg
ret
mov
cmp
dec
pop
outsl
loope
or
or
jo
je
mov
mov
js
insb
fs
jo
xchg
sti
lret
inc
adc
push
and
nop
in
int
sub
inc
das
int3
jae,pn
inc
inc
sbb
fistpll
out
stos
ret
or
mov
mov
hlt
test
add
int3
or
mov
or
cli
mov
sub
and
int3
inc
bnd
pop
stos
cmpsl
fwait
adc
addb
rcrl
outsb
in
dec
mov
cmp
notb
ljmp
adcl
jno
lret
push
std
into
sub
and
outsl
je
imull
add
popa
add
dec
xor
gs
es
inc
aad
push
cmpsl
daa
out
lds
insb
jae
dec
dec
rorb
or
mov
inc
pusha
pop
icebp
repz
ss
or
pop
dec
fs
int3
and
test
pop
mov
push
daa
lds
and
sub
lds
stc
push
daa
orb
sub
push
iret
sbb
and
mov
shrb
sub
cmpsb
hlt
jge
and
fcoml
pop
xor
mov
loopne
xchg
cli
sbb
fimuls
inc
test
push
rcll
data16
inc
jge
mov
punpckhbw
stc
fidivl
fisubs
or
push
cwtl
popa
dec
and
mulb
out
lods
mov
aad
push
sbb
js
fimuls
cmp
je
mov
cs
daa
xchg
add
je
sahf
aam
jmp
lea
jnp
mov
shl
pushf
imul
icebp
adc
div
into
es
push
ret
xor
push
and
push
pop
ret
push
popf
shrb
pushf
fildll
test
mov
inc
mov
fmuls
in
xor
mov
and
dec
mov
repz
cmp
xchg
and
ljmp
mov
mov
adc
jo
cwtl
arpl
and
scas
jecxz
mov
lahf
lret
mull
adc
lahf
pop
frstor
or
mov
ret
adc
inc
pop
jmp
dec
jge
loope
aaa
adc
shl
cli
sub
lods
test
outsl
ja
dec
jecxz
dec
dec
xlat
das
xlat
rcrl
sub
fcmove
js
xchg
mov
adc
pop
mov
popl
mov
push
shll
add
shlb
into
pop
scas
cltd
out
movsl
jp
pop
fst
mov
int3
sub
in
insl
fs
mov
mov
xlat
push
mov
aad
dec
add
sbbb
mov
jp
mov
jne
test
push
popf
std
inc
or
test
aaa
into
xor
inc
call
inc
divb
notl
dec
insb
idivl
cs
or
jecxz
mov
dec
add
xor
inc
dec
aad
mov
insb
fadds
dec
mov
addr16
cmp
cmp
into
dec
jmp
pop
in
dec
outsl
pop
jb
or
fisttpll
imul
ret
dec
and
das
iret
ljmp
mov
lcall
or
test
sub
std
mov
test
jge
sub
add
or
sub
cltd
out
jge
mov
sub
xlat
icebp
push
mov
outsb
add
mov
and
inc
mov
sub
dec
ljmp
jle
je
jo
iret
fimuls
std
mov
dec
pop
rol
lock
pushf
jns
icebp
iret
sub
and
fdivr
pusha
movsl
mov
mov
popa
push
loop
cmpsb
cmp
inc
or
mov
dec
lcall
sarl
xor
pop
push
roll
rorb
jg
das
test
jl
inc
aas
xchg
pop
hlt
xchg
add
int
daa
adc
flds
loopne
popa
enter
pushf
jl
lcall
iret
and
test
xchg
in
lods
stos
mov
pop
xchg
xor
and
rcrl
xor
cwtl
jno
or
mov
aad
xchg
imul
outsl
test
dec
pop
arpl
xor
orl
sbb
push
fcomip
jp
pop
out
rorb
stos
fmul
cmp
test
mov
jg
dec
pop
mov
sbb
aad
je
lea
cmp
sub
add
and
push
std
test
add
and
jns
rorb
inc
pop
adc
mov
stos
pusha
lret
or
xor
mov
adc
outsl
push
sarl
arpl
add
mov
scas
or
ljmp
fimull
test
test
mov
mov
lods
or
sub
out
adc
repz
roll
les
xor
imul
cs
insb
mov
lds
jne
mov
inc
push
mov
dec
subb
inc
or
int3
cmp
fisubrl
insl
push
add
pusha
sub
orl
push
mov
add
shll
into
jnp
mov
scas
out
jo
lcall
outsb
xchg
leave
mov
stos
and
jle
jno
and
push
fs
push
inc
dec
and
xor
lea
sbb
dec
mov
push
push
daa
xor
cmp
push
ss
popf
aaa
mov
scas
sbb
fsubrs
mov
call
mov
cwtl
xor
insl
push
xlat
cwtl
stc
mov
pusha
sub
add
cmp
test
sbb
cmpsb
pop
sti
sub
push
pop
xchg
jge
loope
sub
xchg
sub
and
popf
aaa
push
lcall
roll
mov
mov
push
cmp
jns
imul
icebp
xchg
repz
sub
jecxz
rcrb
mov
nop
addr16
inc
add
xor
cs
xchg
inc
mov
xchg
outsb
das
fwait
cld
xor
movsb
jno
in
leave
jb
out
jle
insl
pop
iret
xlat
pop
push
push
sub
pushf
test
fsubp
movsb
fstl
int3
out
pusha
xchg
jno
mov
jns
add
adc
dec
out
jne
mov
jecxz
insb
or
push
or
loop
adc
inc
mov
loopne
sub
dec
xor
add
jno
jne
push
pop
fcomps
sbb
js
pushf
mov
arpl
daa
aad
pop
and
in
in
ret
push
jecxz
push
adc
jl
cwtl
push
mov
adc
cmc
mov
mov
nop
loopne
jb
sbb
sub
sahf
xor
or
push
cmpsb
xchg
mov
and
ljmp
mov
and
xchg
cli
dec
popa
and
mov
shrl
mov
stc
pop
adc
data16
xchg
insb
mov
in
sbb
adc
rorl
in
fmuls
mov
push
das
adc
pusha
mov
or
mov
scas
xlat
mov
adc
cmp
movsb
push
add
pop
inc
pop
mov
sub
mov
add
or
ja
jp
in
jno
fbstp
mov
mov
mov
push
aad
pop
std
ja
out
or
scas
or
pop
leave
sub
dec
rcrb
jg
int
inc
jge
jae
add
scas
push
mov
cmp
sub
outsb
stc
mov
nop
fcomps
pop
ja
mov
add
test
stos
adc
lds
in
push
dec
jns,pn
sub
sbb
adcl
xchg
fstl
test
inc
fwait
ljmp
pop
pop
int
dec
mov
shl
adc
push
mov
mov
into
call
call
lret
lret
mov
xchg
mov
out
addr16
pop
jl
fldt
loopne
std
scas
fildl
dec
jns
push
stos
xor
xchg
sarl
nop
out
push
pushf
push
jl
in
lods
idiv
loope
push
mov
cmp
cmc
push
cmp
cmp
addr16
mov
fsubr
jne
jno
jge
imul
aam
mov
sub
add
dec
mov
sarl
bound
je
ret
icebp
notb
mov
leave
jp
cmpsb
add
dec
pusha
jae
jne
jnp
das
inc
mov
mov
ds
xlat
xor
popf
aad
insb
mov
inc
jbe
clc
dec
and
ret
mov
fistpll
mov
ret
inc
cmp
jb
pop
in
mov
or
cli
push
fxch
notl
mov
xchg
adc
jne
push
xchg
fnstsw
ret
pop
insl
mov
cmp
stc
mov
es
sahf
lcall
jp
cmp
mov
pusha
xchg
js
stos
sub
insb
aaa
push
and
xchg
jno
sub
ds
mov
mov
inc
inc
add
cli
mov
sub
adc
inc
in
in
lods
pop
rorl
jnp
mov
mov
sub
aad
jecxz
cmpsl
xor
cmp
test
add
jge
mov
js
inc
aas
repz
into
outsb
test
leave
das
or
sbb
and
enter
inc
mov
pop
dec
call
inc
cmc
scas
and
je
sub
shrl
das
cld
xchg
lret
mov
adc
pusha
out
mov
stc
in
and
loop
sub
leave
adc
or
les
push
inc
jl
dec
outsl
pop
or
push
mov
sbb
jmp
in
into
mov
les
and
mov
test
xor
mov
mov
sub
shufps
adc
pop
movsl
ficompl
incl
lds
clc
adc
inc
cmpsb
add
test
enter
shll
gs
stos
jmp
push
cmp
mov
mov
int3
inc
jge
imul
cld
jecxz
xor
xchg
cli
outsb
test
dec
sbb
call
or
aaa
loopne
xor
ret
push
cmpb
jae
adc
enter
sub
bnd
cmp
xor
test
popa
sarl
mov
push
or
outsl
lea
and
cld
adc
dec
enter
nop
mov
das
sbb
ss
ficoml
fisubl
xlat
pop
mull
cmp
add
xchg
and
inc
out
addr16
pop
add
jbe
mov
bound
sbb
mov
test
sub
pop
nop
stc
std
rol
pop
adc
adc
xlat
mov
inc
lods
es
mov
gs
pop
loopne
fisttpll
aad
cmc
mov
test
stc
pop
loopne
jnp
pop
fcompl
repz
sub
and
cltd
push
adc
mov
jp
cltd
dec
jg
dec
cmp
repz
js
popa
xchg
divb
adc
xchg
lret
ja
aam
pop
mov
cmpsb
js
pushf
sbb
fisubrs
sbbb
xchg
mov
sbb
xchg
and
iret
xchg
xchg
inc
pusha
ja
mov
call
cmpsl
cmp
loope
cmp
xchg
or
cmp
xor
add
push
fucomi
add
scas
cli
sub
xor
fsubrl
xchg
jmp
ds
mov
popa
aad
dec
pusha
sahf
or
pop
aam
mov
scas
subb
xchg
lea
je
and
sbb
in
sbbl
fisttpl
hlt
mov
jno
pop
jecxz
pop
outsb
shrl
push
cld
sbb
shl
dec
push
sahf
lock
mov
enter
insl
add
mov
jl
jge
stos
xchg
or
inc
outsl
lock
xor
xor
outsl
iret
mov
sbb
fimull
fidivl
and
xor
inc
sti
mov
pop
mov
popf
or
sub
outsl
cmp
fiaddl
hlt
dec
lret
mov
hlt
mov
mov
sub
xor
mov
fdiv
cmp
sub
repnz
in
int
int3
cli
fcomip
insl
jo
adc
push
notb
pop
daa
addr16
les
adc
push
pop
xor
out
mov
lret
aam
push
in
cmpsl
imul
push
js
insb
push
jo
movsb
test
out
fcmovne
ret
add
out
mov
mov
clc
jae
inc
test
addr16
std
push
dec
pop
hlt
loopne
roll
mov
std
bnd
sub
scas
cmp
cmp
aas
js
xlat
xchg
imul
fdivl
mov
js
cwtl
out
int
std
lods
bound
push
fdivr
movsb
repz
fcompl
push
mov
cwtl
xor
cmp
push
cwtl
test
rol
sbb
add
les
cmpsl
lds
mov
out
xor
push
sbb
ss
inc
call
repnz
repnz
mov
cwtl
stos
push
loope
cld
add
pop
enter
mov
pushf
xor
pop
mov
repnz
and
loope
jb
iret
lock
jl
ficoms
in
mov
cltd
jns
sbb
dec
test
mov
add
lret
mov
aaa
sti
mov
lret
cmp
orl
or
std
push
in
inc
add
jbe
aas
mov
movsl
push
pop
repnz
mov
icebp
out
pop
mov
pop
adc
adc
mov
xor
movsb
bound
es
mov
lret
ljmp
inc
fs
adc
lods
sarl
popa
fsubrs
and
push
xor
cld
js
ljmp
inc
std
cwtl
mov
in
pop
test
sbb
out
loop
pop
mov
test
rolb
and
out
adc
popaw
and
popf
imul
pop
mov
inc
xchg
pop
adc
jmp
jae
ds
fdivl
cmp
fwait
loope
mov
aam
mov
mov
shrl
add
or
sbb
sarl
dec
loop
add
mov
inc
sahf
add
dec
mov
lret
movsb
xlat
div
xchg
lcall
mov
lods
sbbl
dec
adc
repz
push
stos
hlt
mov
fistpl
inc
lret
ljmp
aaa
dec
fnstcw
sbbb
notl
lcall
sub
cmp
jle
xchg
mov
inc
adc
scas
ds
xchg
imul
sbb
repnz
xor
jbe
adcb
xchg
xchg
pop
cmp
xchg
test
lds
pusha
sbb
lods
sti
mov
incl
and
push
add
sub
mov
cmp
or
cmp
pop
pop
sbb
ficoml
sub
leave
lods
or
xchg
mov
sbb
dec
shll
pop
in
pop
mov
mov
cltd
andl
sbb
test
arpl
lods
xor
jno
cmp
mov
mov
mov
xchg
out
sbb
dec
insb
inc
mov
inc
xchg
fsts
call
fwait
sarb
dec
mov
xor
shll
cmp
repnz
xchg
add
je
jmp
adc
pop
sub
push
iret
jns
mov
mov
mov
or
jmp
in
and
cltd
and
cltd
mov
jb
mov
sti
in
sti
jg
add
jg
jg
mov
xlat
mov
lahf
js
shr
out
sti
mov
insb
push
add
nop
loope
iret
inc
cmp
mov
rolb
push
and
adc
popl
lahf
push
xor
lds
add
mov
mov
cld
lret
stc
dec
andb
xchg
dec
arpl
mov
andl
push
scas
lcall
jbe
mov
cltd
cmp
or
roll
fiaddl
fidivrl
mov
xor
rolb
imul
dec
shlb
sub
cmp
xchg
adc
lcall
and
or
dec
sti
ret
sahf
cli
lahf
adc
mov
mov
rol
in
outsb
mov
pop
dec
js
cmc
jmp
aaa
adc
sbb
pop
push
movsb
repnz
in
scas
nop
pop
xchg
mov
cmp
sub
into
scas
loope
adc
sahf
dec
movsl
push
jecxz
cltd
adcb
push
sub
lahf
and
imul
xchg
or
jp
xchg
adc
imul
jmp
int
dec
sub
lea
dec
mov
out
jmp
mov
inc
fcomps
popa
int
mov
add
shrb
inc
pop
int
int3
xchg
sti
popf
mov
sahf
lock
dec
cwtl
fsubrp
push
ret
scas
arpl
clc
shrd
gs
aad
testl
cmp
gs
cmp
loopne
insl
sbb
adc
adc
scas
mov
push
push
add
or
mov
shll
pushf
sub
xchg
cmp
out
xchg
mov
mov
and
mov
pop
fistpll
test
mov
movl
jl
push
inc
dec
sub
push
mov
pop
cli
iret
adc
out
insl
bound
add
jo
push
push
sbb
imul
in
rcll
lods
lds
jno
loopne
leave
cli
cmp
into
fimull
gs
fstpt
ret
pop
nop
movsl
mov
jecxz
loope
sbb
sbbb
lcall
mov
inc
or
cwtl
pop
dec
adcl
and
jl
jge
or
mov
and
jns
outsb
aaa
pop
hlt
ss
test
dec
cmp
jae
movl
test
mov
pop
sub
xor
lock
out
jp
pop
sbb
imul
adc
push
xchg
jge
lcall
nop
clc
push
sti
sbb
mov
lcall
xor
mov
and
lret
or
sub
stos
inc
pop
mov
mov
ret
inc
loop
add
sbbl
fisubl
aaa
movl
pop
mov
add
push
insb
pop
cli
cmp
out
add
sbb
xor
mov
mov
arpl
xor
cmp
subl
xor
loop
les
rcrb
mov
lret
out
mov
mov
imulb
jg
mov
hlt
outsb
enter
dec
popa
mov
jnp
out
inc
je
call
subl
sub
iret
mov
push
push
sub
daa
dec
adc
or
xchg
scas
push
out
aam
or
mov
push
jb
ret
push
mov
cmpsb
inc
pop
cmp
mov
int
pop
mov
push
lret
mov
ss
into
in
jmp
dec
xchg
adc
test
aas
adc
nop
sbb
loopne
push
iret
inc
lock
jmp
inc
mov
mov
xor
push
push
das
jge
fnsave
mov
je
jb
ja
cmp
inc
jo
jle
cs
jl
push
sbb
push
test
jp
and
xor
mov
pop
jnp
mov
repz
push
mov
lods
xor
jl
pop
inc
das
in
call
arpl
aaa
iret
out
movsl
inc
and
loop
lret
sahf
lock
sahf
retw
loopne
and
lahf
outsl
xchg
mov
cmpsb
loop
ret
aad
pop
pop
jae
cmp
sub
jge
movsl
cmpsb
mov
es
insl
add
repz
flds
pushf
shrl
movsb
push
xor
je
sbb
sub
add
out
pusha
repz
sbb
push
pop
ficoms
push
in
dec
jns
out
jo
js
jmp
mov
divl
pop
orb
or
xor
std
repz
fldl
cmp
cmpsl
imul
cmpsl
or
aam
xlat
mov
xchg
pop
es
or
mov
mov
or
cwtl
add
sbbb
dec
cmc
or
lahf
cld
push
std
mov
jg
cmp
outsb
out
jns
lea
adc
push
mov
insb
sub
leave
and
inc
adc
gs
xor
rcl
sbb
or
dec
jno
lea
sub
adc
mov
pop
mov
pop
xor
imul
mov
inc
push
sbb
rorl
stos
decb
das
push
jge
push
inc
es
jg
pop
loopne
ret
fldl
cmp
xchg
lods
push
push
and
popa
jle
insl
out
aad
js
dec
sti
lock
pop
or
lret
jo
fwait
rcr
jge
jae
popf
rorb
adc
daa
adc
mov
dec
iret
dec
aad
dec
sbb
mov
jns
int
mov
popa
rorb
in
addr16
mov
pushf
mov
inc
jp
push
ds
jb
out
je
push
jnp
inc
aam
mov
out
imul
popa
sub
in
pop
add
push
daa
fsubrl
mov
cmpsl
shlb
push
pop
pop
pop
or
push
out
fidivs
and
stc
push
push
leave
hlt
aam
lods
jp
xchg
outsl
ret
inc
inc
pop
fisttps
es
lcall
fisttps
arpl
cmp
call
sahf
jb
mov
imul
pop
cltd
into
ds
in
xchg
sbb
pusha
xor
jo
sub
adc
dec
aam
mov
call
dec
es
cli
loopne
outsb
inc
sub
test
std
mov
push
fstpt
cmp
xchg
cmp
sti
push
mov
outsl
add
jecxz
aas
jmp
mov
pop
dec
xor
pop
mov
pop
lcall
fcoml
jl
mov
sbb
mov
cmp
ss
testb
daa
cmp
fcmovbe
or
pusha
sub
les
add
in
mov
xor
or
je
outsb
mov
fiadds
out
pop
shl
sub
cmp
ss
xorl
or
aas
dec
mov
adc
jno
xchg
pop
leave
gs
mov
outsl
sub
jne
rolb
jecxz
push
inc
sub
dec
cwtl
hlt
sub
lock
xor
mov
insb
jge
in
dec
insb
pop
ret
stc
jecxz
clc
xchg
xchg
pushf
ror
cmpsb
aam
or
dec
lods
push
sbb
and
sbb
jb
repz
jns
adc
cmpsl
scas
pop
cmp
and
mov
adc
outsl
in
dec
orl
xchg
loope
or
pop
cltd
push
add
adcb
jae
inc
mov
daa
jecxz
cmp
push
adc
xchg
rcl
jmp
cltd
xchg
pusha
push
add
out
outsb
fiaddl
mov
dec
orl
daa
add
popf
pop
xchg
or
pop
std
inc
data16
or
ret
rclb
in
lea
in
test
jmp
cmpsl
add
sar
mov
xchg
dec
roll
dec
pop
or
in
testl
inc
jne
pop
push
cld
dec
fidivrl
add
mov
cmp
jb
outsl
sub
jbe
int3
setl
xor
push
test
xlat
and
inc
cwtl
push
mov
mov
pop
adc
nop
ljmp
fsubs
and
xor
dec
dec
jae
cmpsb
ret
fsubl
inc
call
daa
mov
inc
jae
sti
jno
mov
pop
or
cltd
jge
push
mov
das
lock
dec
int3
lock
mov
or
mov
mov
xchg
mov
mov
pop
inc
sbb
addb
bound
adc
mov
inc
xlat
pop
testb
pusha
jl
popa
adc
sbb
jns
pop
push
popa
adc
mov
in
dec
sub
in
adc
push
popa
xchg
subl
dec
ljmp
loopne
cmp
push
cwtl
jnp
sbb
sbb
pop
shlb
scas
xorb
nop
fcomp
xchg
shrl
push
dec
out
cs
push
fsubr
jno
sub
cmp
mov
inc
cmp
fistps
mov
inc
ljmp
mov
loope
push
scas
cmp
cmp
movsl
push
jno
clc
xor
je
fwait
lds
iret
lret
sbbl
test
into
dec
insl
push
mov
mov
ror
popf
sbb
xor
adc
test
outsl
xchg
mov
mov
fwait
ja
leave
lods
movsb
in
xchg
inc
push
out
call
lret
cmp
push
call
jmp
pop
or
popf
out
dec
add
jo
jecxz
push
dec
dec
push
or
mov
pop
addl
pop
pushf
movsb
jne
adc
xlat
jg
stos
clc
es
cmp
out
cmp
xchg
ljmp
jmp
pusha
aaa
xor
xor
out
adc
xchg
enter
and
nop
dec
pusha
aad
lods
loopne
enter
fisubs
mov
sbb
data16
inc
cmp
xor
daa
out
xchg
loopne
pop
pop
sub
add
imul
xor
popf
in
arpl
fs
and
fldcw
sbb
mov
ret
jmp
sbb
or
inc
push
xor
scas
mov
outsl
xor
sbb
and
mov
jno
shrl
mov
daa
cmpsb
xchg
push
mov
push
ja
mov
aas
adc
outsl
sbb
dec
mov
pop
in
mov
jle
ds
lods
mov
fwait
pop
ljmp
repz
or
add
pusha
push
push
sbb
sub
cmpsl
cs
popa
fidivrl
in
pop
sti
mov
movb
add
adc
addr16
push
cmp
rolb
cmp
mov
out
ds
lea
mov
cltd
mov
imul
adc
out
add
daa
lods
inc
out
push
jle
add
pop
lds
shll
inc
xor
mov
jne
testl
xor
outsb
fs
sarl
lahf
roll
inc
divl
fdivl
loop
cmp
push
fisttpl
adc
and
mov
add
mov
cmpsl
mov
add
dec
add
jnp
movsb
leave
out
js
int
add
pop
out
push
out
xor
add
sub
push
sbb
sahf
pop
loop
dec
icebp
mov
pushf
popa
fsubs
mov
xor
andb
test
mov
cmp
popa
fs
outsb
arpl
cmp
pop
sbb
pop
jb
leave
cmp
int3
add
lock
xchg
inc
imul
rclb
xchg
push
cli
dec
sub
pop
push
outsl
pop
sub
loopne
mov
inc
mov
adc
mov
inc
inc
sub
bound
ds
in
mov
mov
inc
inc
cmp
sti
mov
mov
and
and
mov
cmp
or
scas
push
jns
sbb
fwait
jnp
and
jge
dec
outsb
cmp
jge
inc
jmp
rorl
nop
fistps
and
mov
pop
sub
stc
add
and
stc
jle
inc
scas
jb
dec
pop
fwait
popf
mov
lods
and
out
xorb
jl
dec
cmp
divl
xor
sbb
sub
pop
add
leave
insl
hlt
sti
xchg
inc
jmp
std
jbe
mov
addl
pop
dec
call
les
in
shll
add
mov
add
jle
fcoms
mov
shll
xor
mov
lret
test
mov
les
stc
cmpsl
stos
mov
cmpsl
jno
jb
dec
lods
aas
mov
lret
pop
xor
rol
adc
jns
cmp
xchg
mov
aad
enter
jnp
js
sub
out
movsb
push
call
mov
xchg
jle
mov
xchg
shll
mov
jecxz
nop
movsl
insb
cmpsl
cmp
jnp
aad
or
mov
int
in
mov
inc
xchg
fwait
sbbl
sub
aaa
outsl
enter
outsb
and
sub
ss
gs
add
adc
inc
push
es
data16
es
stos
cmc
cvtps2pi
rcll
push
mov
jnp
pop
mov
xlat
xor
mov
push
fs
jnp
push
mov
repz
cld
pop
scas
ljmp
adc
and
pusha
test
das
mov
mov
jae
and
std
pop
push
ljmp
inc
push
je
pop
add
outsl
shl
xchg
test
imul
inc
add
popf
push
mov
sub
sbb
ret
cmp
jl
mov
cld
aam
addb
mov
dec
test
cltd
daa
int3
adc
mov
add
int3
mov
mov
jle
pop
mov
cmp
or
sbb
jge
sbb
ds
cs
push
test
bound
gs
add
popa
cmp
jns
int
or
mov
xlat
jo
repz
fisttpll
push
inc
or
das
shlb
fiadds
push
mov
out
out
lods
movsl
jo
jle
dec
pop
cmp
shrl
sbb
in
mov
ja
push
sbb
ret
cmc
lahf
sbb
inc
stos
dec
pop
shlb
jecxz
push
inc
pop
addr16
leave
orb
mov
add
pop
xor
mov
in
outsl
sti
popa
bound
nop
fwait
mov
jge
movl
ficomps
out
xor
mov
test
bound
or
xchg
mov
loop
pushf
arpl
imul
gs
push
mov
add
mov
jb
mov
test
mov
mov
int3
pop
in
jmp
dec
cs
pop
mov
mov
loope
cmp
sub
out
in
mov
xchg
ss
cmp
cmp
repnz
pop
inc
test
das
inc
sbb
into
cmp
push
loopne
movsl
pop
mov
out
sbb
cmp
mov
lock
fstp
push
pop
cmc
sub
mov
cld
insb
rorb
lods
loopne
in
push
cld
xor
stos
and
fwait
out
push
cmpl
rolb
in
test
hlt
sarb
fiaddl
mov
dec
jno
daa
jg
mov
repnz
jp
mov
rsqrtps
or
imull
mov
divb
jge
add
dec
mov
cmp
ret
shll
xor
jbe
sub
mov
inc
adc
xor
xor
icebp
jno
xor
adc
sti
pop
inc
push
arpl
aas
inc
in
dec
push
xchg
dec
mov
mov
cwtl
jo
mov
test
sbb
div
leave
mov
or
cwtl
push
xchg
sub
dec
pop
fadds
fsts
dec
mov
push
aam
jo
push
inc
cs
mov
clc
aad
enter
mov
push
icebp
js
jp
push
inc
call
pop
add
inc
ja
adc
cmp
mov
je
jb
lret
test
mov
dec
dec
mov
aam
inc
jne
inc
cmc
add
out
and
push
inc
ljmp
fs
ret
das
dec
std
mov
pop
fwait
adc
dec
dec
sbb
jle
cld
movsb
pop
add
das
int3
or
push
push
xrelease
pop
xchg
push
and
push
sub
cs
enter
inc
pop
imul
out
pop
mov
loopne
aaa
jmp
repnz
push
sub
add
xchg
scas
fisttpl
arpl
cmp
add
popf
pop
imul
or
test
xchg
mov
fsubs
inc
pushf
xchg
push
cld
faddl
sahf
and
push
mov
add
movb
repnz
cwtl
pop
mov
add
jp
loopne
out
mov
inc
mov
mov
loopne
in
jae
xor
inc
mov
insl
jl
mov
fstpl
fadd
dec
or
orl
and
dec
sub
test
inc
js
jge
out
sbb
xchg
sub
addb
inc
sahf
xchg
fistpll
cmpsl
mov
in
into
mov
lds
mov
loopne
xchg
jb
push
enter
inc
testl
in
and
sbb
fsubrs
movsl
rcll
das
jmp
or
fisubrs
sub
in
mov
sarb
addb
shlb
call
dec
cmpsl
test
jnp
lret
in
cld
shlb
jne
xchg
lds
cmp
mov
outsb
cmpsl
gs
lret
addr16
fidivrl
pop
scas
stos
dec
lahf
push
push
mov
dec
mov
dec
cs
rcll
jae
dec
je
sahf
scas
push
mov
dec
data16
pusha
gs
adc
cmpsl
and
xor
pop
push
push
jle
das
std
addr16
data16
mov
fst
ss
jno
mov
xchg
mov
sti
xchg
mov
inc
sub
and
roll
mov
in
dec
les
in
add
pop
imul
imul
gs
fs
pop
adc
mov
mov
cmc
loopne
sbb
inc
dec
xor
jge
insb
pop
mov
stos
cmpsb
inc
sarl
push
add
push
imul
jmp
lahf
xchg
sub
scas
ss
mov
and
inc
pop
pop
xchg
sbb
cli
lock
loopne
mov
inc
mov
jp
icebp
rolb
pop
push
lds
fs
lds
xchg
lret
icebp
lret
xor
mov
and
or
jle
int
pop
jae
dec
pop
aas
mov
andb
int
nop
sti
iret
je
test
sub
loopne
dec
dec
call
push
adc
push
mov
and
push
push
or
in
lahf
into
call
xchg
push
repz
lret
adc
sbb
fcoml
cmpb
mov
lds
movsb
mov
das
jne
inc
in
dec
pusha
pusha
into
mov
ss
fdiv
mov
test
loopne
mov
in
ret
data16
repz
movsl
int
and
sti
xchg
shlb
push
add
ja
cmpsl
sub
call
pop
ljmp
add
jge
pop
inc
pop
xlat
jp
icebp
loope
and
add
stos
ret
mov
outsl
lds
inc
add
xchg
pop
fsubrp
icebp
iret
and
pop
loop
sbb
fadd
push
sub
scas
std
fwait
dec
or
loopne
pop
and
sbb
jmp
sbb
leave
icebp
arpl
push
mov
loope
sbb
shll
pop
ret
les
mov
mov
xchg
xchg
mov
push
ss
js
mov
mov
fcmovne
push
jb
loopne
adc
push
add
stc
jb
mov
push
push
pop
outsl
mov
lods
into
mov
loope
jbe
dec
orl
clc
icebp
push
rol
cli
adc
mov
and
cmp
cmp
ret
ffreep
adc
push
mov
pop
sub
rorl
cmp
in
fldl
sub
pop
movsb
and
mov
rclb
pop
jno
cmpsl
push
xchg
adc
or
pop
push
push
lods
imul
sub
mov
sbb
dec
mov
sub
mov
insb
xor
stc
cltd
ja
jb
cmp
cmp
jmp
cmpsl
pop
imul
inc
lods
je
dec
inc
fdivl
jno
jge
in
aad
mov
sarb
andb
mov
nop
adc
popf
lahf
push
pop
inc
push
xor
subl
pop
js
inc
push
jle
cmc
arpl
fnstsw
inc
cld
cmp
or
xchg
sbb
das
mov
movsl
adc
mov
stos
pop
push
icebp
pop
stos
sbb
into
repz
out
mov
xlat
out
mov
fbstp
pop
ret
stos
adc
mov
mov
and
ds
fcoms
stc
outsb
jmp
pop
ret
xchg
mov
or
dec
lock
xor
inc
xor
or
mov
pop
mov
inc
pop
popf
xchg
push
imul
popf
xchg
mov
adc
lret
lret
mov
mov
push
add
loopne
push
adc
and
cmp
call
scas
sbb
fwait
pop
inc
dec
push
out
lds
mov
push
and
xor
test
std
pusha
or
and
data16
xchg
mov
jge
stc
ljmp
or
or
ljmp
dec
push
out
icebp
xchg
dec
inc
nop
fiadds
push
jmp
or
jmp
outsl
mov
repnz
add
inc
pop
lahf
xchg
jge
mov
in
aas
nop
ja
xchg
xchg
sub
xchg
dec
add
sar
insl
loop
cmp
mull
mov
inc
sahf
stc
xor
roll
xor
fstl
inc
inc
mov
scas
cmc
mov
out
inc
jecxz
mov
mov
add
shr
push
in
cmpsl
push
pop
or
mov
add
sbb
into
enter
mov
cld
adc
jge
push
jb
push
lret
lock
and
shrl
or
fmuls
call
add
dec
pop
sub
jp
out
xchg
mov
cmp
mov
inc
test
pop
mov
inc
ja
sti
rcr
fimuls
std
sbb
pop
sbb
push
inc
push
and
popf
jno
pop
push
sti
adc
jb
xorb
fdiv
push
outsb
mov
jo
jb
xchg
jno
icebp
sub
cli
sub
sarl
pop
shlb
js
and
imul
stos
and
xchg
adc
mov
pop
cmp
cmp
mov
lds
sub
pop
pop
add
inc
and
into
loop
fmul
jg
xchg
sbb
xchg
ficoml
mov
push
repnz
gs
les
jne
int
enter
in
in
xchg
in
mov
jl
or
sub
dec
jp
mov
les
push
push
mov
rcrb
jbe
sub
int3
push
mov
adc
das
dec
and
mov
test
cmp
aas
dec
pop
inc
push
in
fs
pop
rolb
inc
aas
pop
lcall
fidivl
adc
adc
inc
add
cmp
daa
fdivl
adc
adc
icebp
pop
jle
inc
dec
xchg
mov
jg
repnz
andb
jae
pop
fdivp
repnz
sbb
lock
mov
shll
mov
aam
or
dec
mov
pushf
inc
sbb
mov
xor
lret
dec
into
rclb
push
jae
mov
push
ret
ret
outsl
cmc
imul
decb
jmp
inc
mov
adc
add
push
popa
dec
ret
inc
popa
and
test
cmp
jno
sbbl
and
icebp
das
test
push
dec
scas
jbe
cltd
pop
mov
addr16
pusha
aad
lds
mov
inc
push
neg
add
lcall
cmpsl
cmp
sbb
and
int3
sbb
pop
push
call
sub
movsl
xchg
mov
jno
mov
insb
fdivr
inc
icebp
sub
outsb
loopne
movsl
movsl
or
cmp
xor
mov
xchg
shrl
pop
cli
push
mov
testb
inc
add
add
xchg
ds
adc
outsl
lock
lods
jo
jl
mov
test
xor
xor
scas
es
into
andb
popa
mov
jne
cmp
inc
jb
dec
inc
add
pushf
mov
ljmp
lods
add
shll
cwtl
cld
lods
scas
jmp
std
mov
push
test
mov
mov
das
xchg
dec
adc
push
pushf
jno
cmp
mov
aam
test
or
fcmove
pop
into
clc
andb
inc
mov
incb
inc
xchg
fwait
popa
stos
dec
jp
call
cmc
mov
insl
mov
mov
test
add
pop
add
mov
inc
dec
add
sub
movl
jbe
push
xchg
mov
sub
es
fisubl
in
lea
inc
push
mov
jg
adc
sub
int3
xchg
dec
cld
lahf
cwtl
sti
sbb
sub
push
mov
je
rorl
in
out
cmc
movsl
add
add
leave
push
cmpsl
lock
xchg
lret
jae
sbb
xor
stc
lret
sbb
inc
cmp
xchg
sbb
std
dec
not
nop
mov
pushf
sub
clc
adc
fs
das
pop
push
or
fildll
xchg
push
mov
and
je
scas
jg
mov
shrb
jp
xchg
jp
loop
xchg
xchg
int3
and
jbe
mov
lcall
lods
xlat
in
and
jg
cmp
aas
mov
and
mov
pusha
adc
popa
in
xchg
test
in
xor
sub
xor
jge
sub
inc
dec
out
inc
or
and
stos
sub
mov
jo
enter
mov
or
popa
into
jb
sub
dec
dec
pop
xchg
stos
inc
dec
pop
push
test
adc
pushf
sub
cmp
mov
mov
sarl
out
cwtl
lahf
xor
enter
dec
mov
pop
push
mov
filds
lods
out
rolb
out
daa
sub
xchg
mov
push
sub
inc
dec
shlb
daa
outsb
in
fsubrp
jl
push
inc
xor
jle
mov
adc
xchg
xchg
sbb
jae
adc
dec
add
dec
mov
dec
ret
daa
jg
popa
or
aad
mov
pop
xchg
xor
mov
adc
cmp
and
inc
movsl
pushw
ret
into
into
cmp
lcall
dec
cmp
push
ljmp
enter
inc
jp
fildl
push
out
lea
push
jne
ljmp
and
jle
fwait
je
incb
sbb
xor
dec
rolb
sub
sbb
xor
cmc
mov
cmp
adc
imul
and
cmp
xchg
iret
ds
inc
ss
icebp
aam
inc
cmp
out
fimull
xorl
jmp
or
cwtl
hlt
arpl
mov
out
jnp
jle
mov
pop
xor
loop
pop
pop
inc
movsb
roll
add
inc
ret
ljmp
jno
ljmp
fdivl
fldl
sub
cmc
dec
enter
push
jl
fwait
imul
cli
mov
sbb
jecxz
in
jb
sbb
or
loop
xchg
jecxz
out
push
jne
mov
lds
mov
adc
dec
je
sub
loop
lahf
daa
mov
jg
sbb
inc
out
and
push
cmp
push
cmpsb
sbb
push
lahf
mov
movsl
inc
rorb
out
sbb
rclb
fs
lcall
jns
and
icebp
sbb
push
jae
push
inc
xchg
push
jnp
shr
aam
xor
xchg
cs
psrad
out
in
loopne
sbb
and
out
ret
xchg
pop
sbb
jno
or
cmp
inc
lret
lock
adc
cmp
xor
inc
shr
cmp
xchg
xchg
loopne
push
pop
sub
in
adc
inc
mov
pop
xchg
push
jnp
or
outsb
popl
mov
loop
mov
loope
daa
sahf
push
out
inc
lret
sub
cmp
pop
dec
add
lea
scas
iret
in
pop
jp
xchg
into
mov
push
push
mov
mov
xor
iret
sub
cltd
sbb
inc
leave
mov
ljmp
cmpsl
scas
out
xchg
das
inc
sub
xor
cli
xchg
movsb
test
stos
mov
stos
adc
pop
aaa
je
jne
pop
push
xchg
sub
dec
stc
popa
ret
sub
inc
js
shrl
fxch
sbb
sub
push
ffree
es
xchg
flds
adc
or
fsubl
lret
pop
popf
xchg
cmpsl
fwait
aam
shll
test
fsubrs
cmc
push
es
push
idivl
sub
xchg
lea
xchg
pop
iret
sti
loope
scas
leave
sub
jo
fiaddl
sbb
das
xchg
pop
outsl
push
pop
out
sbb
arpl
sti
aad
bound
xchg
pusha
and
mov
lods
push
loope
push
sti
sub
cmp
out
adc
push
data16
repz
jle
jnp
negl
sbb
mov
sub
sbb
cli
xchg
jge
mov
les
pop
fcoml
push
sbbl
fs
xchg
or
dec
sub
fbstp
aas
pop
pop
xchg
cmp
cmp
stos
movlhps
js
adc
aaa
or
cmp
push
inc
cmp
popa
movsb
testl
mov
push
pop
xor
sbb
inc
jbe
fadds
sbb
aaa
mov
inc
add
scas
mov
sbb
dec
sbb
add
call
or
nop
bound
mov
fiadds
movb
or
in
lret
jle
sbb
and
xchg
mov
pop
inc
mov
mov
add
lock
icebp
scas
mov
loope
jbe
in
and
or
clc
dec
mov
jge
mov
jecxz
popa
outsl
gs
pop
sbb
mov
jle
xor
rclb
push
sub
pop
mov
mov
aam
add
rorl
sub
pop
fisttps
out
fdivr
cmp
ja
cmp
sub
jb
leave
dec
sub
mov
cmp
jmp
pushf
add
add
cmp
fisttpll
and
lods
dec
loopnew
aam
xor
jne
dec
adc
cmp
jno
cmp
or
mov
fistps
add
loope
dec
xor
adc
fidivrl
sbb
fadd
sbb
jnp
ja
cmpsb
pop
jbe
xor
dec
push
and
loop
outsb
rcll
lods
cmp
inc
scas
mov
repz
mov
repz
loopne
test
inc
lds
add
lret
inc
mov
jae
pusha
xchg
nop
mov
divb
les
das
pop
into
orl
stc
jns
sub
sbb
push
adc
xchg
xchg
rcll
push
lea
sub
pop
mov
shlb
into
pop
lahf
sbb
dec
jecxz
testl
in
xlat
mov
gs
cmpsl
push
mov
sbb
nop
add
les
incl
inc
rorb
adc
mov
sbb
int
sbb
call
pop
pop
pop
sbb
loope
out
ret
dec
addr16
rcll
add
adc
sarl
mov
stc
xchg
call
mov
stos
out
js
and
test
mov
mov
jae
sub
rol
fisttpll
pop
or
jbe
sbbb
fsubr
outsb
dec
lret
fildl
pop
test
pusha
xchg
jle
std
cmp
mov
ss
imul
mov
fimull
mov
icebp
mov
rorb
dec
lcall
pop
sub
cmc
sub
popa
ret
dec
sbb
sbb
pop
cli
xchg
pop
je
test
iret
rclb
pop
loope
stos
clc
das
ljmp
in
mov
pushf
fidivrs
repz
pop
push
jmp
and
inc
cmp
dec
cmp
es
imul
fwait
inc
mov
sbb
fsub
out
xchg
inc
adc
scas
sbb
inc
push
push
int3
mov
ret
dec
mov
push
and
fucomi
xor
mov
xor
pop
push
fbld
bound
inc
stos
xor
xchg
in
xchg
movsl
jb
lock
pushf
inc
xlat
add
in
cmc
subl
insb
jl
pop
les
or
lds
xor
fwait
stc
inc
sbb
or
pop
mov
cmp
inc
cmp
out
jbe
or
test
inc
xor
and
sub
in
outsl
ja
hlt
pop
fsubs
mov
hlt
dec
cmp
fnstcw
in
pop
adc
fidivrl
icebp
cmp
sub
add
sub
inc
push
into
push
xchg
sub
negl
cmpsb
mov
dec
insb
sbb
nop
push
cmc
imul
out
test
hlt
sub
dec
imul
jmp
xorl
and
mov
mov
outsl
insl
icebp
mov
push
cmp
xchg
imul
loopne
sub
adc
push
xchg
test
ja
inc
adc
mov
inc
scas
bound
or
nop
stos
adc
push
inc
stc
cmp
and
jge
mov
lock
mov
out
mov
xchg
adc
icebp
aas
icebp
icebp
incl
xchg
nop
inc
ljmp
cmp
jbe
and
sbb
inc
cwtl
hlt
dec
outsb
std
dec
mov
js
jb
nop
inc
ret
outsb
lea
jns
sub
add
pop
test
leave
out
sbb
add
sub
pop
iret
test
cmpsl
push
in
push
cmp
or
lahf
sub
mov
aad
fcmovbe
cmp
sub
jno
mov
loope
adc
xlat
int
push
mov
gs
mov
dec
out
inc
dec
out
add
ret
mov
test
call
cmp
out
sbb
or
inc
shlb
or
sub
adc
stc
mov
mov
loop
push
mov
jo
daa
lret
aam
sub
xchg
popa
mov
lock
fistl
mov
mov
mov
or
pop
mov
dec
lock
shrb
fisubrs
in
cmp
pop
cwtl
lods
insl
sahf
mov
adc
xchg
sahf
mov
sub
push
sbb
iret
ljmp
sub
add
cld
cmp
mov
mov
or
ds
xchg
call
lret
pop
loope
pop
push
fstpl
icebp
or
dec
sbb
cmp
push
inc
jg
popa
lret
cld
and
xchg
sahf
sbb
in
adc
ficompl
mov
in
dec
xchg
inc
popl
jns
adc
and
mov
add
jae
xlat
aam
int
into
and
add
mov
push
or
sub
mov
push
mov
outsb
jmp
or
loop
cmp
xchg
inc
test
fsubrp
cs
cmpsb
mull
lea
stc
imul
sti
cmp
int3
or
lods
das
mov
add
jp
push
adc
shl
dec
and
imul
movsb
push
mov
out
mov
push
xchg
sub
ret
in
xchg
mov
mov
cmp
sub
scas
loopne
xchg
mov
xor
data16
jb
in
stc
add
pop
xchg
stc
imulb
inc
aaa
test
ds
out
or
pop
xor
les
test
lcall
lcall
xchg
add
or
fildll
push
jg
mov
stos
jge
fbld
cmc
mov
xchg
adc
push
sahf
xor
push
test
and
cmpsl
bound
pop
fucomp
loopne
shll
xchg
jo
ja
int3
xor
out
aaa
mov
pushl
mov
xchg
cld
adc
xor
ret
push
hlt
ret
sbb
vmovlps
add
mov
mov
mov
mov
xchg
filds
sub
in
inc
fisttps
sbb
sbbb
ret
lds
add
mov
imul
mov
test
insb
add
data16
mov
adc
or
adc
push
ljmp
in
aas
lds
xchg
or
xchg
push
or
cmp
xor
xchg
in
test
xor
mov
stc
xchg
sbb
pushf
adc
xor
add
arpl
xchg
adc
add
push
mov
mov
xchg
testb
gs
pop
jge
and
mov
push
sbb
push
fcoml
out
imul
push
movsb
or
mov
mov
xchg
mov
nop
xor
mov
jo
stc
mov
insl
sbb
push
sbb
xlat
les
int
push
aaa
test
fisubrl
stos
xor
cld
ds
cmp
and
jbe
insl
sarl
hlt
mov
inc
cmp
cli
pusha
push
or
outsl
pop
mov
sbb
cmp
sti
imul
cmpb
adc
cli
pushw
sarl
cs
fcmovnb
jp
sub
cld
pop
xchg
mov
das
dec
ret
leave
cmpsl
fs
jns
xor
mov
std
xchg
daa
xchg
xlat
movsb
inc
xor
in
jno
sbb
ss
loopne
hlt
push
mov
loop
add
sbb
out
pop
test
pop
sahf
sub
loopne
scas
push
jbe
push
jmp
jae
jb
pop
jno
xlat
dec
lea
inc
sbb
xchg
outsb
push
adc
adc
pop
sub
mov
das
fs
jns
mov
bound
jg
aaa
bsr
das
movsb
adc
mov
inc
jo
jecxz,pt
outsb
mov
fimuls
outsb
jno
jbe
das
push
hlt
xchg
inc
sbb
ss
ror
inc
mov
es
imul
sbb
repz
add
and
std
rcll
mov
test
mov
int3
cmp
imul
pusha
sub
addr16
fstps
gs
into
incb
add
push
and
mov
jae
and
xor
xchg
and
mov
cmp
icebp
js
sbb
gs
push
sub
dec
dec
pop
mov
test
push
mov
pusha
or
ds
repz
add
loope
sub
jmp
sbbl
cltd
xor
pop
aad
cmpb
stos
loope
fmul
jle
rcll
push
adc
scas
and
leave
rorb
fisttps
js
aam
testl
test
sbb
subl
push
xchg
imul
cmpl
mov
lods
aam
mov
xor
or
pop
sbb
lods
jns
mov
mov
jmp
out
xor
jg
cwtl
mov
ss
mov
sub
or
dec
subb
cmc
lods
mov
sbb
icebp
aam
insb
add
jbe
jbe
jne
fisttps
cmp
mov
cld
les
dec
mov
leave
cwtl
add
jl
les
insb
test
scas
scas
xor
sbb
sbb
int3
mov
clc
jle
inc
je
mov
cmp
pusha
fldenv
nop
inc
in
lods
inc
cmpsb
cld
aaa
fwait
jne
and
pop
xchg
data16
repz
sti
adc
inc
int3
dec
add
ss
ret
ficomps
xchg
fmull
mov
adc
out
push
jns
xchg
lcall
or
add
dec
lock
movsl
push
popa
dec
ds
jl
es
aas
cs
icebp
pop
mov
xor
adc
aaa
scas
sub
cmc
pop
leave
scas
cmp
aaa
nop
mov
in
adc
cmc
in
lahf
not
data16
aaa
cld
pop
mov
xor
addl
mov
test
inc
push
jmp
adc
mov
pop
mov
adc
push
int3
cltd
scas
cmp
lcall
aas
test
cmpl
jnp
es
push
insl
adc
adc
dec
xchg
arpl
stos
mov
rcl
clc
fwait
mov
scas
test
inc
fbstp
cld
gs
ror
stos
push
cmc
adc
imul
mov
ret
inc
clc
jle
std
push
mov
mov
fnstcw
loope
in
popf
sti
std
loope
sub
stc
stc
push
push
add
popl
pop
push
cmpsb
jecxz
lret
loop
lods
mov
loope
and
sbb
test
pop
sbb
ret
add
sbb
adc
lcall
mov
stc
lcall
clc
sbb
aad
and
lahf
es
fsts
idiv
mov
sbb
cmp
mov
popf
arpl
inc
js
cwtl
sbb
push
and
mov
cwtl
add
hlt
test
cmp
mov
and
add
push
stos
inc
add
inc
aaa
ret
ja
data16
arpl
inc
repnz
test
pop
sbb
sbb
dec
jae
adc
test
arpl
cmp
repz
push
imul
sets
dec
outsb
cmp
repz
xchg
fnstenv
fistps
sarb
xlat
sbb
dec
repnz
lret
mov
lret
pop
mov
es
xchg
xchg
xor
mov
jae
fisttpl
or
dec
jl
in
fdivrs
xor
inc
lcall
pop
pushf
pusha
lcall
cmp
push
jne
xchg
js
inc
dec
push
pop
sub
icebp
inc
subb
push
and
enter
mov
mov
insb
xor
loopne
sbb
js
jg
jg
fwait
add
push
xor
adc
xchg
mov
mov
cmp
jae
mov
jp
cmpsb
adc
aas
and
jle
push
gs
xlat
xchg
xor
out
dec
jge
add
mov
fsub
xchg
hlt
js
dec
mov
sbb
jnp
ja
movsb
push
repnz
mov
mov
ret
outsb
popa
clc
shl
sarl
mov
jl
cld
mov
mov
pop
inc
daa
ss
cmp
call
cmp
and
cwtl
cltd
mov
sbb
sahf
cmc
mov
sub
ja
std
push
adc
inc
xlat
pop
negl
pop
mov
mov
sti
mov
lcall
xor
test
shl
sub
mov
xchg
ret
hlt
mov
out
clc
out
or
lahf
sub
bound
or
out
into
call
mov
aam
in
lcall
andl
sbb
test
repz
and
pusha
inc
ss
or
sub
mov
inc
std
loopne
push
pop
add
push
cwtl
popf
xchg
xchg
inc
icebp
cmpb
cmpsb
pop
inc
cmpsl
gs
pop
dec
aaa
stos
clc
in
aam
insl
call
hlt
call
adc
loopne
pop
add
aam
dec
push
mov
or
iret
xchg
ret
into
sbb
and
lds
jb
add
dec
aaa
das
addb
test
cmp
test
and
orb
mov
xchg
aad
add
jmp
in
pop
sbb
mov
pop
not
cltd
xorb
cmp
stc
xchg
add
imul
pop
mov
and
cmp
cmpsl
mov
addr16
rcr
test
enter
adc
mov
sahf
mov
inc
push
cmp
in
inc
sysexit
push
or
mov
outsl
lcall
out
jno
xor
xor
mov
negb
arpl
lock
lret
xchg
mov
fcoms
jo
pop
adc
inc
pop
cwtl
std
pusha
xor
mov
mov
dec
xchg
jle
mov
dec
cmp
cmp
mov
aas
push
pusha
adc
dec
dec
jmp
mov
and
xchg
mov
adc
loope
xchg
inc
sub
xor
mov
dec
xchg
or
xor
packsswb
iret
shll
pop
leave
imul
mov
cmp
push
xchg
mov
fsts
out
inc
pop
js
mov
mov
test
das
mov
out
inc
xlat
pop
jmp
mov
movsl
push
sbb
mov
hlt
imul
in
or
pop
out
js
cmc
movhps
lahf
xchg
xchg
jl
daa
mov
aas
inc
mov
and
je
fdivl
sbb
push
ret
xor
rorl
lret
xor
dec
mov
xchg
mov
and
inc
rcll
jnp
xchg
dec
imul
mov
cmp
xor
rcrl
mov
ja
or
and
sti
les
xchg
cmc
xchg
pop
cmpl
xchg
jns
outsl
inc
or
incb
mov
xor
sbb
es
das
test
mov
mov
inc
xchg
xorb
inc
cltd
call
pop
sub
sbb
dec
adc
je
lcall
xlat
and
cmc
sbb
jmp
loope
cmpsl
cmpsl
das
add
clc
pop
jmp
loopne
jnp
dec
cmp
mov
subl
movl
xor
sub
push
xchg
mov
ljmp
in
in
adc
insb
sti
out
stos
and
imul
add
shrl
cmp
out
hlt
jmp
pop
jl
and
xchg
out
mov
lods
fmulp
xchg
xchg
aaa
and
iret
and
xchg
and
dec
mov
lock
jge
xchg
pop
test
mov
int
aam
push
xchg
push
rcll
leave
repz
fsubrp
mov
jne
mov
enter
sti
loopne
mov
pushw
add
ja
mov
mov
jmp
adc
loopne
sub
mov
pop
enter
xchg
xor
in
mov
roll
pop
movsb
xchg
scas
add
add
add
mov
or
inc
or
sub
add
or
inc
addl
push
mov
cmc
dec
leave
jmp
mov
pop
roll
mov
jne
dec
test
push
xchg
jns
or
gs
xor
mov
loope
call
pop
push
pop
out
and
popa
and
icebp
sbb
dec
hlt
lret
pushf
or
mov
out
iret
divb
aam
faddl
push
dec
in
movq
imul
mov
addr16
fsubs
sub
inc
cmp
pop
out
aaa
icebp
ss
push
dec
cld
xor
lcall
sbb
int
dec
mov
lcall
xchg
mov
imul
pop
adc
lods
xchg
roll
jle
jge
mov
imull
ficompl
jmp
test
adc
or
dec
xor
cmpsb
test
xor
test
testb
mov
fimuls
push
or
fisttpll
adc
addb
int
xchg
jo
mov
mov
test
cmp
imul
stos
fucom
mov
pop
jl
test
and
sbb
inc
in
cmp
xchg
dec
mov
rclb
insb
nop
rolb
adc
rorl
cmp
bound
sbb
xchg
push
imul
arpl
inc
inc
stc
pop
and
push
pusha
xchg
cmc
mov
jmp
dec
xchg
stos
shll
push
and
iret
cld
and
mov
je
cmc
stos
popa
call
add
outsl
or
bound
mov
cld
xor
inc
aad
mov
mov
mov
mov
pusha
xorb
and
adc
dec
nop
repnz
in
scas
lret
rcl
test
pop
jecxz
arpl
mov
test
stos
pop
mov
xor
cmp
and
faddl
stc
dec
mov
fwait
roll
sti
jbe
adc
in
int3
pusha
out
dec
and
mov
test
lret
hlt
iret
pop
pop
out
test
inc
mov
movsl
cmp
sub
dec
roll
mov
mov
sbb
lahf
adc
fmuls
repz
push
fsub
lods
inc
xor
into
callw
xchg
inc
jb
pop
jns
add
mov
lods
xchg
mov
pop
dec
scas
or
out
inc
notl
in
mov
and
jbe
dec
cwtl
loope
mov
adc
xchg
cmp
inc
xchg
push
stos
repz
inc
ss
mov
cmp
cmc
push
in
push
adc
jns
sub
in
rorl
sub
sub
cwtl
cmp
cmpsl
loopne,pn
sahf
xchg
mov
xor
mov
sub
or
imull
pop
rclb
call
cmpsb
outsl
in
sub
stos
mov
les
mov
push
push
mov
rcrb
jle
and
mov
mov
int3
mov
repz
test
lock
movsb
loop
popf
cmpsb
lcall
sub
movl
ljmp
adc
mov
sub
sarb
test
repnz
pop
inc
xchg
outsl
mov
add
popf
sbb
and
or
cmp
inc
mov
pop
or
jnp
out
sahf
add
lock
mov
cvtps2pd
cmp
addb
push
cmp
in
mov
sub
es
repnz
xchg
es
in
or
push
shlb
inc
mov
sarb
fbld
fdivrl
jno
sub
push
mov
xor
mov
mov
mov
push
je
fnstenv
cwtl
push
push
pop
loope
iret
pop
jnp
fwait
mov
mov
mov
mov
enter
sub
cmpsl
dec
lods
fistpl
xchg
sub
push
mov
add
imul
pop
xlat
push
popf
mov
inc
lds
mov
mov
jl
jno
adcb
aad
fdivp
pusha
rcll
ja
mov
dec
rcrl
and
jnp
rorb
inc
lods
xchg
xchg
or
xchg
jo
shr
add
xorl
jecxz
out
mov
cwtl
popf
in
in
push
clc
fldl
mov
xchg
cmp
or
cmpsb
icebp
sahf
lret
popf
pop
mov
jo
xor
mov
call
add
test
mov
repz
xor
scas
fwait
cltd
and
test
nop
mov
dec
lcall
lock
pop
add
mov
mov
stos
mov
pop
jecxz
add
pop
jo
loope
jmp
loope
or
pop
sbb
clc
add
pop
push
xor
push
mov
rolb
pusha
je
cltd
in
and
sbb
xorl
sbb
dec
mov
sbb
popf
stc
fcompl
and
rcrb
xchg
jge
cmpsb
shl
stos
jo
mov
cmp
shlb
cld
cmpsl
test
aam
nop
mov
inc
pop
inc
cs
cmp
cwtl
xor
sbb
sub
pop
adc
into
sub
mov
sbb
jmp
lods
fdivr
pop
sub
ljmp
sub
fildll
mov
adc
fsubrs
sub
sub
cltd
lcall
cmc
inc
pusha
aas
cs
std
js
je
mov
cmp
stos
movsl
outsb
fcmovnu
dec
dec
xchg
jl
movsb
nop
sub
sbb
pop
mov
mov
and
es
mov
loop
and
jbe
adc
pop
push
mov
sbb
lahf
cmpsb
add
push
in
and
imul
add
test
mov
jae
int
stos
loop
sahf
push
lret
pusha
loop
dec
mov
inc
jo
inc
dec
fcmovu
fiaddl
in
cmpb
pop
inc
into
call
std
in
and
sbb
mov
mov
xor
fwait
mov
xor
popa
or
cmpsb
clc
loop
stos
pop
popl
jno
lret
jmp
lods
lret
leave
cltd
js
push
and
testb
xchg
filds
pop
mov
dec
push
aas
and
adc
pop
sbb
xchg
jmp
in
das
cmpsl
push
js
out
test
jl
jle
int3
loop
cmpsl
mov
lock
or
pop
aam
ss
or
adc
add
mov
dec
sub
add
test
sub
ret
call
aas
aam
xchg
xor
out
push
iret
cmc
daa
shl
or
fbld
out
andb
jae
cld
mov
push
mov
out
cmpb
push
icebp
movsl
scas
sbb
fwait
packsswb
push
movsb
in
add
testl
jo
lcall
and
stc
push
scas
test
xor
cmp
int
and
cmpsl
jne
jno
jle
pop
lret
gs
loope
xor
xor
push
bswap
or
sub
stos
ja
inc
add
ret
in
fidivrl
xchg
out
mov
xchg
icebp
pop
outsb
mov
push
xorl
sub
shl
insb
call
push
mov
push
mov
pusha
add
mov
popf
ja
loopne
sti
adcl
repnz
xchg
pop
lock
insb
in
mov
xchg
push
cmc
push
iret
dec
or
or
fcoml
and
jb
shlb
loope
sub
fldcw
out
sbb
ss
mov
pop
cltd
sub
in
mov
mov
cmc
jne
cmpsb
adc
enter
cld
mov
js
pop
cmp
sahf
jns
outsb
ret
jle
pop
les
scas
cmp
icebp
add
sbb
aam
insb
in
push
sti
lea
dec
sub
rcr
daa
scas
and
xchg
mov
fs
xor
lret
lret
mov
cwtl
mov
fs
pop
adc
xorl
fcomps
out
sub
push
std
sub
xchg
mov
cs
je
cmp
mov
movsb
fisttps
mov
ja
nop
pop
fucomip
push
sub
aam
mov
pusha
and
mov
add
mov
mov
rcrl
imul
or
sub
cmpsl
sub
fidivl
ja
in
iret
dec
test
mov
jmp
mov
dec
dec
xchg
stos
cmc
sbb
je
sbb
repnz
sahf
sahf
sub
cmp
stos
jnp
push
xor
jl
mulb
xorl
mov
inc
pop
je
mov
mov
xchg
pop
ja
or
andl
shrb
imul
adc
and
pop
or
aas
mov
mov
jp
js
clc
pushf
inc
push
or
clc
jo
rcl
add
clc
or
out
inc
addr16
push
jnp
lahf
xchg
adc
inc
or
jge
cmpsb
sub
aas
adc
or
mov
xor
mov
mov
mov
test
jae
movsb
rcll
lds
repz
dec
lods
insb
cmp
xchg
sbb
testb
xor
movl
inc
add
xchg
add
rclb
adc
jmp
and
sbb
mov
imul
add
loop
jns
lcall
aam
in
jmp
mov
inc
sbb
cmp
mov
push
xchg
jg
push
xchg
bound
dec
mov
mov
out
rorb
or
nop
jnp
lds
or
ret
fcompl
mov
aas
dec
mov
shrl
js
std
xchg
jbe
arpl
push
push
cmpl
iret
test
cmp
out
push
addr16
addl
jnp
push
cmp
movsl
mov
movsb
push
inc
fwait
lock
pop
mov
jl
aas
daa
shlb
mul
fimull
aas
cmp
cmp
and
jno
aas
stos
in
jmp
ret
sub
cmp
adc
dec
cmp
test
xchg
in
mov
movsb
inc
sub
fildl
ja
dec
cli
xor
mov
mov
mov
xchg
jmp
popf
xchg
stos
xchg
mov
loope
dec
movsl
xchg
cmc
adc
jne
pop
ja
pusha
inc
repnz
iret
push
mov
cmp
mov
fs
and
mov
mov
and
nop
xchg
xor
idiv
adc
popf
test
and
mov
pop
lea
jmp
pop
pop
jle
fildll
mov
sub
and
lods
outsl
mov
popa
ja,pn
sbb
loop
mov
movsb
movsb
out
int
in
imul
mov
push
lret
jp
notl
push
adc
dec
xchg
sub
sbb
or
arpl
stc
cmpsb
xchg
push
nop
dec
cltd
lods
pop
stc
cmp
jbe
sar
sbb
adc
xorl
add
xorb
adc
gs
ja
into
push
adcb
xchg
test
pop
arpl
popf
mov
mov
pop
dec
popa
pop
addl
cmp
lock
aam
mov
mov
movsb
mov
sub
lcall
imul
lret
or
out
imul
in
xor
lret
stos
or
ret
aad
push
and
pop
push
in
sbb
add
sbb
cmc
lret
pop
jl
cmpb
aad
jb
add
stc
lahf
push
dec
stos
lret
dec
xor
mov
lcall
arpl
sbb
or
mov
adc
xor
negl
pop
dec
pop
push
pop
push
mov
repz
and
jecxz
in
gs
in
enter
sub
repz
in
test
popa
in
and
sub
mov
call
push
xor
jo
jne
popf
dec
test
or
or
mov
or
jecxz
jbe
scas
dec
adc
jbe
jbe
mov
or
xchg
ss
punpckhdq
cmp
scas
pop
xlat
xlat
movsl
pop
dec
xor
xor
and
lahf
adc
push
out
or
std
pop
gs
push
movsb
lcall
mov
enter
cltd
pop
andb
clc
jne
push
push
and
loop
pop
loope
bound
jns
les
sar
bound
lret
js
movsb
mov
bound
in
xor
dec
or
sbb
xlat
cmp
xor
movsb
pop
sti
test
push
lea
mov
in
mov
movsb
rcl
xor
hlt
jbe
int
cmp
in
ret
xchg
inc
mov
scas
test
aaa
stos
push
jno
out
xchg
xor
fldenv
xor
insb
mov
add
daa
jecxz
out
stc
push
hlt
movsb
and
mov
xchg
loope
mov
mov
and
xchg
enter
lds
dec
jl
jge
xchg
scas
jb
adc
mov
and
ret
pop
dec
or
outsl
pop
sbb
sbb
sbb
je
push
pop
ret
arpl
psrad
cmp
lods
inc
out
add
das
repz
cltd
add
mov
inc
aas
pop
inc
xorl
hlt
or
and
mov
popa
mov
xlat
or
les
xchg
pop
scas
jecxz
ficomps
nop
bound
in
ficoms
insb
mov
mov
fisttpll
xchg
mov
xchg
in
mov
push
cmp
fcoml
cmc
rol
stos
cwtl
sbb
test
mov
jae
add
cli
jo
jbe
sbb
cmpsl
xor
xchg
pop
fdiv
out
imul
pushf
das
sbbb
sub
sti
lret
jnp
mov
hlt
in
mov
ljmp
sub
xor
and
lds
or
repnz
jl
cmp
lret
mov
adc
inc
cmp
fnstenv
push
cmpsl
addr16
mov
pushf
out
mov
or
push
adc
inc
test
push
cmp
aas
add
enter
push
or
add
inc
adc
jnp
cmp
dec
mov
daa
cltd
xchg
mov
cmp
mov
rolb
and
xchg
mov
scas
adc
orb
xchg
test
sti
sub
inc
pop
lods
or
cld
popf
mov
movsl
dec
clc
dec
sub
push
or
sbb
outsb
ret
enter
cltd
stos
cmp
imul
gs
outsb
mov
cmp
aas
insl
ss
addr16
out
mov
sbb
sub
mov
xor
push
dec
or
clc
xor
mov
lock
push
test
cmp
pushf
icebp
xchg
outsb
test
fldt
or
mov
mov
test
cmc
loope
testb
cmp
popa
js
repnz
mov
pop
mov
cli
test
push
mov
iret
pop
adcb
sbb
push
push
jg
xchg
sti
jb
int
call
lds
cmp
jp
add
push
test
jns
insb
push
inc
lods
ds
inc
pop
lahf
in
testl
push
mov
repz
inc
cltd
mov
jle
mov
jo
out
addr16
mov
lret
out
pop
lea
or
in
pop
cmp
pop
fstps
nop
sbb
cmpsb
xor
xor
movsl
ljmp
popf
repnz
adc
daa
inc
mov
jo
mov
add
mov
sub
mov
lahf
loope
loopne
sub
or
push
cs
mov
cmp
jae
pop
int3
lods
fsubrp
adc
test
xlat
js
xor
sub
pop
dec
push
loop
aaa
stos
sub
pop
into
sahf
imul
clc
fucomi
sbb
xchg
dec
rorb
lds
sbb
je
or
and
loopne
mull
add
int3
dec
xchg
cwtl
mov
dec
sarl
insb
xchg
push
das
add
mov
cmpl
and
inc
outsl
test
inc
xchg
stos
negl
jp
pusha
pop
faddl
mov
xchg
cwtl
mov
aam
adc
pop
rol
enter
pop
and
sbb
popf
push
std
mov
jne
fucomip
mov
fmull
aaa
call
adcb
test
out
or
fxch
and
dec
test
sub
adc
es
or
sub
fsin
imull
mov
fcmove
mov
lods
ja
xor
jbe
shrb
pop
sub
push
cs
mov
sub
fisttpll
sub
adc
insl
jle
js
push
je
mov
inc
jp
adc
jp
inc
into
jg
cmp
xorb
add
xor
push
lea
sub
sti
aam
inc
les
add
aam
aad
cwtl
repnz
daa
mov
stos
adcl
lcall
ds
mov
pop
cmp
sub
jle
dec
pop
rcr
in
mov
mov
mov
int3
sbb
jae
mov
jecxz
mov
adc
inc
mov
movsl
jae
repnz
lcall
sub
pusha
and
test
scas
shrl
mov
in
jg
push
sbb
cwtl
push
pop
dec
xchg
sbb
sub
pop
enter
enter
xchg
scas
dec
and
movsl
dec
cmp
enter
outsb
adc
inc
ljmp
xor
pop
insb
and
cmp
sub
das
lock
out
sarb
and
mov
xchg
mov
dec
sti
inc
push
mov
jns
add
call
ret
popa
stos
dec
inc
cli
lea
xchg
in
cld
xchg
dec
popa
iret
or
cmc
add
std
jg
inc
out
mov
push
out
adc
adc
int3
sahf
mov
mov
jbe
test
fsubp
push
xor
daa
cmp
into
pusha
in
mov
mov
sti
dec
pop
xchg
outsl
insb
fisubrl
in
xlat
das
sub
loop
fisttpl
call
out
mov
inc
pop
add
mov
js
mov
lds
jecxz
aas
cmp
sub
das
repnz
sbb
sbb
pop
pop
and
add
fisubrs
dec
int
add
repz
stos
out
pop
ss
mov
mov
imul
outsb
mov
mov
mov
mul
movsb
or
adc
test
mov
shr
sub
sbb
rorb
es
lahf
outsl
mov
mov
mov
sbb
pop
mov
cmc
and
outsb
xchg
hlt
pop
mov
or
sub
adc
jbe
mov
sub
jle
aas
sahf
push
aas
sbb
xor
add
mov
lret
rorl
inc
test
cmpl
dec
cmp
push
xor
subl
xchg
jmp
cmp
add
sub
cs
add
aam
cmp
add
and
push
or
test
pop
scas
imul
aad
ljmp
pop
flds
shrb
das
aad
addr16
stos
or
dec
outsl
test
push
out
adc
xor
dec
jp
imul
incl
xchg
loope
dec
movsb
cltd
pop
sub
mov
faddl
mov
adc
mov
mov
xchg
rcrb
add
mov
mov
cmp
xrelease
in
xchg
test
fidivrl
fdivr
xchg
fidivs
lock
or
sahf
sub
mov
dec
adc
pop
mov
mov
or
rorb
xchg
xchg
insb
int
inc
cld
sbb
aad
pop
imul
shrb
jb
fbld
push
repnz
movsb
mov
sub
dec
fmulp
mov
push
sub
in
orl
fsubrs
iret
loopne
mov
popa
sarl
inc
dec
jl
imul
mov
ljmp
xchg
fld
jnp
fidivs
and
jecxz
jns
hlt
idivl
and
js
mov
jg
adc
add
sub
xchg
lahf
pop
mov
jge
call
or
sbb
add
and
adc
push
jmp
scas
cs
dec
push
jg
mov
and
lret
sub
lahf
mov
fwait
jmp
xor
or
sbb
std
std
shll
sbb
jns
adc
dec
ret
in
lods
arpl
xor
inc
stos
mov
in
pop
lret
popf
xlat
pop
push
xor
adc
add
sub
add
and
sbb
pop
jmp
stos
adc
jecxz
into
cmc
mov
pop
sti
dec
js
sahf
jl
out
adcl
mov
pop
inc
cmc
cmp
pop
into
pop
jp
ds
dec
xchg
test
add
std
sub
stos
cmp
mov
out
adc
idiv
test
mov
mov
or
push
mov
ror
test
add
add
push
dec
sbb
jno
push
ljmp
xlat
scas
add
bnd
lods
cmc
mov
ss
pop
pop
cli
push
outsb
or
mov
fwait
jmp
ja
aam
aas
pop
xchg
shrb
jno
adc
sbb
test
xor
or
pop
pop
cmp
push
and
jle
shlb
les
rolb
shlb
test
repnz
fwait
mov
neg
movsl
jns
cmp
stos
stos
psrad
int
push
ljmp
dec
mov
int
repnz
jmp
cld
cmp
stos
inc
pushl
std
or
insl
dec
sub
add
testb
aad
sbb
push
cmp
inc
or
dec
mov
pop
mov
sbb
add
clc
mov
xchg
ljmp
js
inc
pop
mov
fidivs
pop
std
insl
int3
insb
shrb
stc
cmp
pop
and
jns
mov
lahf
sbb
xchg
mov
xor
add
add
call
nop
out
sub
pop
ljmp
add
pushf
hlt
add
sti
sbb
je
aas
push
sub
sbb
jge
sbb
pusha
xor
les
push
cmpsl
sahf
sub
aas
pop
inc
lret
xchg
pop
push
aad
lret
lods
insb
cmp
outsl
imull
pop
sbb
leave
push
mov
xor
or
nop
jmp
lea
cli
cli
and
mov
cmp
push
lret
jb
adc
sarl
loopne
rcrl
sti
mov
cmpsl
or
fsubrl
push
fs
dec
push
popf
dec
add
jne
push
sbb
xor
iret
mov
cmp
dec
jmp
sub
pusha
push
cmpb
jne
inc
rorb
fwait
push
adc
cs
inc
push
mov
xchg
lock
aad
daa
lahf
xchg
dec
out
or
adc
lahf
sub
mov
mov
jge
sbb
in
dec
jg
fwait
divl
cli
inc
jne
jbe
dec
test
lock
dec
clc
pop
gs
je
call
and
bound
mov
mov
mov
jns
pop
fwait
mov
shrb
lret
test
sbb
addr16
arpl
cs
jl
jne,pn
mov
in
hlt
pop
inc
mov
shl
cmp
mov
xchg
mov
andb
mov
mov
gs
pop
int3
add
or
movsb
movsl
push
jg
mov
clc
push
iret
das
lea
xchg
cltd
dec
adc
outsb
js
adc
sbb
and
pop
je
xor
lea
out
mov
aas
cmp
stos
dec
fsubrp
les
in
adc
jmp
out
sub
mov
pop
pop
popa
sarb
mov
or
mov
dec
jg
mov
mov
mov
stos
and
mov
sbb
pushf
add
add
add
mov
add
sub
int
mov
jne
sbb
sbb
cmp
push
aad
xchg
fsubs
xlat
or
data16
add
inc
das
cmp
adc
aaa
add
sahf
add
aaa
movsl
popf
aad
shlb
sbb
fstl
sub
movb
pop
dec
ss
js
jb
iret
das
shrb
stos
jbe
fwait
hlt
jne
mov
push
xlat
clc
out
push
test
mov
push
lods
sub
cmp
adc
imul
pop
imul
jns
cmpsb
je
enter
ja
mov
jp
test
loopne
push
loope
and
sahf
adc
lcall
add
jecxz
je
je
mov
dec
jmp
idivl
sahf
inc
mov
sar
test
lret
mov
or
inc
mov
pusha
repz
icebp
cmp
pop
jp
xor
and
jb
dec
out
add
repnz
fidivrs
jnp
jl
xchg
imul
sub
aaa
rcrb
xor
or
jnp
dec
sbb
cltd
push
push
sbb
adc
cmp
and
mov
aaa
xor
mov
fcmovnu
inc
jp
sti
pop
decb
enter
xchg
mov
jno
in
push
dec
test
or
push
sti
subb
mov
les
movsl
add
mov
xchg
mov
enter
pushf
sub
xchg
lods
lods
mov
int3
mov
ret
fmull
inc
call
mov
and
sbbb
dec
xchg
shl
das
sub
mov
xor
sbb
mov
add
jl
adc
cmp
das
inc
in
adc
fst
inc
std
inc
inc
mov
jno
aam
fisttpl
ret
stc
sub
sahf
push
enter
shlb
adc
les
cmp
xchg
push
imul
in
mov
or
fs
mov
mov
push
cli
sub
ret
push
add
adc
xchg
mov
xor
mov
test
mov
add
popa
ret
lahf
ljmp
push
cltd
sahf
sbb
jne
int3
or
enter
jp
out
jp
hlt
sahf
mov
out
loope
rolb
push
fwait
imul
nop
repnz
sub
push
stc
mov
mov
or
cli
xchg
jne
arpl
sarb
mov
pop
popf
xchg
shll
out
cmpsb
mov
cmpsb
mov
sbb
xchg
xlat
daa
add
xchg
lret
mov
push
popa
addr16
in
sbb
xor
dec
outsl
and
cmpsb
mov
sahf
pop
cmp
jl
ds
adc
jne
mov
roll
cmc
mov
add
mov
jns
or
pop
data16
shrl
loope
imul
dec
mov
or
sbb
ds
push
jnp
push
pushf
fstpt
pop
mov
dec
lds
cli
xchg
xchg
enter
mov
pop
das
movsb
int3
jbe
out
sbb
mov
adc
icebp
cmp
sub
pop
inc
repz
out
popf
and
add
les
push
push
in
arpl
cs
in
jmp
cmp
sub
sbb
lahf
xchg
mov
outsb
inc
aaa
fadds
je
push
in
dec
movsl
inc
sahf
or
mov
rcrl
ljmp
cs
stos
cltd
and
outsb
adc
jae
mov
sbb
repz
insl
lds
mov
mov
stos
cmp
mov
mov
pop
std
inc
sbb
mov
mov
outsb
outsb
cmp
dec
cmp
dec
ss
push
cmpsl
xchg
rcrl
dec
and
outsl
xchg
inc
fidivl
xchg
mov
test
inc
push
lret
adc
or
fldenv
fistps
lea
daa
push
dec
mov
push
sub
pop
sbb
repz
inc
inc
mov
xor
jo
jb
loope
mov
fwait
les
cmpb
cmc
mov
xlat
repnz
sbb
sbb
mov
in
fcomip
scas
sbb
repz
sar
aas
cli
adc
cmp
jnp
pusha
je
aaa
pop
mov
or
and
lock
lcall
mov
sub
vshufpd
popf
fistpl
jg
std
adc
sub
jge
mov
movsl
sub
cwtl
dec
mov
sbb
and
test
imul
stos
cltd
jp
xchg
add
xchg
ljmp
mov
mov
pop
inc
imul
test
mov
out
clc
aaa
push
cmp
inc
ss
jge
popf
sub
sbb
add
add
addr16
fdivl
ret
aas
pop
cmpsb
and
test
xlat
ret
in
pop
cld
sub
outsb
dec
xchg
mov
dec
pop
fs
arpl
lcall
push
sbb
and
mov
adc
out
jbe
das
inc
sub
in
icebp
fimuls
mov
subb
and
mov
push
popf
jge
pop
adc
push
mov
or
cld
push
inc
iret
jecxz
adc
test
lods
pop
aas
repz
divb
mov
adc
add
dec
sub
or
sbb
xchg
stos
pushf
ss
push
sub
jae
sub
and
scas
jb
ret
jecxz
inc
add
gs
inc
mov
test
pop
mov
nop
ret
test
ret
test
mull
adc
push
xchg
lahf
je
popf
mov
push
movsl
push
test
jo
rcrl
fsubrs
mov
in
std
mov
dec
das
xor
aas
movsl
cmp
fwait
sbb
jmp
je
lods
mov
test
mov
xchg
dec
in
and
jno
test
sbb
xor
push
cmp
or
dec
lods
es
mov
sub
sub
cmpsb
pushl
sti
sahf
cmp
ret
clc
test
adc
mov
jbe
xor
add
push
cmp
xor
out
jbe
cltd
push
sbb
lret
mov
push
mov
cmp
fs
stos
jbe
mov
mov
xlat
addr16
xchg
mov
popa
pop
test
pop
dec
jl
sbb
jne
mov
or
int3
xor
or
mov
gs
shlb
mov
cmc
adc
cmpsb
in
jl
mov
sbb
or
cmc
lds
lds
jnp
push
xchg
ljmp
je
mov
cmp
lret
sbb
clc
dec
inc
arpl
add
arpl
cmp
aas
cli
scas
adc
cmpsb
push
jp
mov
test
jns
aas
push
sbb
aam
movsb
aam
mov
adc
lcall
jne
scas
xrelease
xor
sahf
gs
dec
push
lods
popf
divl
cmp
dec
lret
cwtl
rorl
jnp
js
adc
lods
xor
mov
jns
test
ficompl
in
sbb
lea
jne
int3
xor
fs
xchg
jl
inc
lahf
jae
sub
iret
insl
test
hlt
loopne
push
dec
mov
aam
dec
mov
gs
adc
js
movsb
or
test
or
push
sub
mov
ror
push
mov
enter
sub
push
into
adc
or
popa
dec
dec
and
and
imull
mov
pusha
fs
std
add
aad
inc
shrl
jge
data16
mov
in
in
and
rcrl
stos
push
imul
inc
jb
aas
jg
dec
xlat
pop
daa
fdecstp
jle
xor
rol
test
jecxz
pop
cs
repz
and
dec
shl
jae
dec
sub
rcl
pushf
cs
movsb
addr16
lea
pop
inc
popa
pop
add
pop
sbb
nop
mov
fdivs
js
bound
inc
sub
cld
ss
sti
lea
imul
scas
sbb
daa
pop
stos
ljmp
xor
mov
cli
mov
bound
sbb
xchg
iret
iret
insb
ja
push
mov
sbb
and
push
jno
jns
lock
xchg
mov
lret
and
adc
push
cmp
jg
outsl
push
mov
jnp
fiadds
pop
push
stc
fcoms
or
xor
shrb
cmp
mov
nop
aad
ja
mov
mov
insb
sarb
xchg
mov
fcmove
mov
mov
fsubl
sbb
mov
sbb
aas
or
add
orl
push
pushf
and
and
mov
jb
sbb
pop
mov
cs
jge
setne
outsb
js
adc
fcmovbe
into
insl
test
std
mov
aam
lds
pop
xlat
ljmp
ss
mov
add
cmp
sbb
mov
fstpl
pop
sub
mov
mov
outsb
rorb
sbb
sub
pop
addr16
xlat
lds
adc
mov
adc
ss
mov
xor
xor
insl
pop
pop
stos
lret
push
xchg
xchg
gs
das
mov
in
cmpsb
leave
xchg
bound
push
dec
rclb
dec
pop
int3
das
roll
hlt
jnp
xor
mov
popf
int
cwtl
insl
inc
jne
test
dec
outsl
fcmovnu
xor
mov
in
fldenv
aam
insl
and
aad
outsb
cltd
dec
out
pop
push
ret
mov
adc
inc
or
cwtl
loopne
mov
mov
add
xor
repnz
push
pushf
adcl
xor
cmpsl
sub
outsl
scas
aad
mov
mov
cmp
and
mov
sbb
mov
push
mov
xchg
sub
dec
call
clc
stos
cmpsb
aam
xor
jo
in
jne
add
inc
pusha
sahf
xchg
adc
nop
bound
inc
outsb
xor
imul
xlat
jle
add
push
push
dec
sbb
xor
push
pop
and
xchg
sub
stc
adc
add
rep
xor
negl
pop
sahf
sub
add
movsb
test
and
mulb
mul
ds
jae
or
jl
pop
gs
mov
jno
sbb
inc
int3
mov
jno
add
mov
mov
dec
push
and
xchg
lret
mov
inc
je
lret
adc
inc
rorl
mov
call
dec
idivb
jns
add
push
mov
pusha
sbb
cmp
fcoml
adc
pop
and
jno
jb
sub
jecxz
hlt
add
cmp
mov
lret
fdivr
pop
stos
hlt
mov
jg
js
das
scas
mov
or
imul
xchg
sbbb
lods
dec
mov
leave
push
pop
xchg
popa
daa
lcall
xchg
or
mov
jb
pop
int3
clc
ljmp
aad
jmp
inc
xchg
xchg
adc
stos
pop
mov
or
mov
movsl
test
arpl
mov
xchg
lock
out
sarl
mov
push
nop
loop
outsl
out
das
sub
enter
or
es
lahf
xchg
sbb
mov
xor
jnp
or
mov
push
push
arpl
into
jl
aaa
std
jbe
hlt
mov
and
mov
mov
pop
lock
adc
add
nop
push
insl
dec
pop
sbb
jns
dec
add
pusha
addr16
sbb
mov
jmp
sar
add
cmpsb
pushf
insb
add
mov
dec
popf
adc
push
out
adc
jo
or
popf
pop
scas
mov
enter
out
dec
gs
enter
or
in
fucomi
jns
xchg
pop
out
xchg
repnz
aaa
mov
jae
and
gs
pop
test
js
sbb
ret
xchg
dec
inc
adc
xor
mov
xor
push
jl,pt
loop
push
aas
js
ret
mov
es
test
mov
aas
fs
enter
xchg
mov
mov
shlb
sbb
dec
lahf
inc
cwtl
call
xor
xlat
or
out
jle
sbb
xchg
adc
mov
clc
je
adc
adc
dec
inc
mov
xor
cwtl
xchg
ret
and
xchg
std
shl
sahf
outsl
mov
out
lds
lea
in
lea
cmpsb
bound
icebp
leave
pop
loope
daa
in
sbb
lahf
arpl
test
cmp
gs
test
lret
popf
iret
xchg
out
mov
test
mov
sbb
stos
pop
sub
mov
les
rol
mov
les
cmp
mov
enter
inc
fiadds
pop
in
inc
test
push
jg
xchg
lret
orl
stc
sub
jne
jle
dec
fsubrp
pop
addb
pop
mov
push
gs
iret
adc
mov
in
lods
pop
movsb
jbe
mov
and
mov
adc
jmp
xor
cmp
mov
xchg
sahf
int3
cltd
cmpsb
rol
mov
lea
mov
ss
lea
or
xchg
pop
cltd
jmp
mov
movsl
lret
dec
std
rcrb
pop
cmp
nop
jne
loop
and
jle
in
bound
leave
movsb
push
inc
mov
inc
rcll
and
shll
shrl
adc
lahf
sti
mov
fbld
push
sbb
xor
pop
mov
addr16
insb
jge
xor
imul
mov
imul
scas
loop
stos
sbb
or
mov
stos
dec
test
ljmp
rorb
cld
push
cmpsb
fsts
jno
test
mov
loop
std
nop
imul
outsb
adc
and
xor
rcr
lahf
push
es
jl
inc
scas
inc
loope
jbe
fstl
jne
xlat
cmp
out
jne
jmp
sub
ret
inc
mov
and
int
mov
push
and
arpl
dec
mov
push
pop
pop
arpl
cli
push
int
ja
mov
cli
fyl2xp1
cmpsb
sub
dec
dec
fwait
inc
sbb
xlat
or
and
push
or
and
sahf
push
bound
addr16
mov
xchg
lock
lds
mov
push
ss
adc
jp
pop
cmp
sbb
popl
sti
sarl
push
adc
into
mov
mov
fsub
imul
divb
addr16
push
push
push
sbb
jne
inc
adc
or
xor
repnz
cmpl
adc
repz
and
push
inc
dec
push
lcall
mov
dec
leave
mov
jns
inc
dec
mov
sbb
daa
push
ret
bound
jno
cli
in
imul
push
dec
lock
add
lods
jmp
xchg
pop
iret
mov
fldl2e
ss
mov
shrl
pop
adc
jb
xlat
push
sbb
and
popf
adc
aad
add
flds
mov
fisubl
xchg
std
orb
pushf
cmpl
mov
jnp
sbb
cltd
leave
test
mov
or
push
mov
aam
stc
sbb
aas
jmp
add
xchg
in
sbb
and
daa
dec
mov
xlat
test
in
leave
mov
sbb
mov
xchg
lea
and
pop
icebp
sub
sbb
jl
fs
in
std
mov
sar
pop
mov
les
test
push
negl
pop
in
add
adc
or
ljmp
cmpsl
rcll
repz
jne
insl
dec
testb
dec
in
out
cli
cmp
push
cmp
pop
je
or
addr16
add
ds
push
inc
out
sbb
and
push
stc
sub
mov
cwtl
cmpb
sub
cmpsl
sar
pushf
adc
dec
sub
fstl
push
jmp
stc
movsb
sub
dec
pop
mov
sbb
ret
pop
xor
mov
sbb
bound
sub
or
movsb
xor
lods
jge
sbb
pop
inc
mov
rorb
push
mov
jns
adc
repnz
jo
cmpsl
cmpsl
cmp
dec
les
cmpsl
fmuls
outsb
push
push
mov
mov
inc
leave
push
pop
mov
xor
push
dec
icebp
jnp
mov
adcl
mull
xchg
push
rorl
xor
out
insb
mov
std
ljmp
pusha
inc
jle
pop
ret
and
xor
js
push
push
repz
insl
inc
cmpsb
ret
xchg
push
xor
push
or
test
or
in
mov
mov
or
pop
stc
push
fnstsw
scas
fsubs
adc
fisubl
sahf
adc
xchg
repz
fcoms
das
jo
mov
sbb
iret
pop
cltd
or
inc
xlat
leave
cltd
or
sub
sti
cmp
push
scas
ret
out
dec
ljmp
push
fnsetpm(287
lock
cmc
repnz
and
or
mov
pop
cmp
or
adc
aaa
mov
mov
jo
jbe
lds
leave
push
test
ret
sub
xchg
roll
out
jg
sbb
mov
shlb
popa
out
cmpsb
bnd
add
mov
inc
jns
lds
jno
int3
or
or
push
cmp
gs
aaa
jecxz
dec
negb
cmpsb
mov
fwait
jecxz
jp
movsb
fnstcw
add
or
xchg
pop
push
bound
mov
xchg
inc
outsl
push
iret
cmp
imul
mov
mov
push
out
jne
filds
mov
loop
sbb
or
jecxz
int
push
jno
mov
das
jecxz
mov
fcompl
jecxz
popf
xor
ss
inc
mov
mov
cmp
shll
lahf
out
jmp
and
sub
cmc
sarl
adc
jns
jbe
mov
ret
jp
push
sahf
leave
cltd
sbb
xchg
push
cltd
sub
mov
push
sub
aaa
jns
mov
jle
xchg
jecxz
mov
andb
xorl
sub
call
ret
xchg
adc
mov
dec
std
lods
push
testb
or
cld
xlat
outsl
cmc
mov
add
add
push
or
std
or
sbb
xchg
popa
mov
push
scas
aas
jmp
out
xor
mov
idivl
stos
mov
lret
daa
imul
push
or
into
out
add
lods
insl
std
xor
int3
push
jne
daa
sti
xchg
lods
jmp
cltd
dec
xchg
xchg
mov
and
ret
jecxz
pushf
xor
or
leave
aaa
imul
dec
xor
jp
popf
mov
cmpsl
mov
cmp
popf
sub
fwait
push
sti
mov
outsw
dec
jge
mov
mov
lahf
mov
mov
pushf
jg
pop
cmp
mov
mov
jge
sbb
ja
jns
mov
inc
sti
xchg
ret
rclb
movsb
aas
ficoms
xchg
mov
push
xor
popf
mov
ds
iret
pop
mov
fnstenv
xor
jbe
and
jg
inc
mov
inc
xchg
out
outsb
ret
loop
cmp
fldcw
imul
jmp
in
dec
mov
stos
sti
lock
test
push
sub
aad
out
sbb
push
in
bound
pusha
sbb
dec
mov
popf
aas
mov
or
push
and
pop
js
mov
ret
or
fists
pop
imul
cmp
ss
sub
mov
jae
push
dec
xchg
out
pop
fldcw
daa
je
icebp
fidivs
xor
pushf
jo
dec
cmp
xchg
cli
jae
ret
nop
ffreep
add
push
or
test
sub
cmp
pop
adc
mov
add
fcompl
jb
pusha
stc
stc
out
call
ds
sahf
dec
mov
cmpsl
adc
push
andb
cwtl
subb
cmc
sub
mov
xchg
nop
cli
jb
jbe
cli
js
mov
mov
lret
xchg
mov
repz
cwtl
shlb
adc
les
add
rcrl
xchg
mov
jae
xchg
cmp
out
push
int3
mov
icebp
frstor
mov
inc
sti
loopne
loopne
push
add
cld
out
jns
add
or
cmp
in
xchg
xchg
mov
dec
sub
sub
scas
xchg
gs
or
bound
add
jne
mov
cmp
xor
cwtl
js
sub
clc
jmp
adc
iret
jge
in
outsb
adc
mov
sub
inc
adc
push
cmp
stc
mov
jle
loop
cli
push
test
jo
jb
aas
push
or
jnp
mov
xchg
or
dec
push
mov
ja
ja
loope
mov
daa
add
mov
jno
ds
popf
sbb
emms
xor
mov
lahf
repz
mov
dec
in
mov
cld
dec
xchg
mov
add
leave
mov
jmp
out
xor
adc
cmp
cs
in
stos
cmp
or
cld
or
cmp
out
or
cmp
inc
and
fldl
out
add
scas
outsl
sbb
loope
mov
jnp
aaa
push
mov
sub
adcl
pop
jl
pusha
or
stos
cmpsl
iret
js
jmp
movsl
jle
push
add
jnp
jnp
mov
sarb
and
pop
ja
or
out
xchg
jge
xor
clc
mov
scas
or
arpl
pop
push
pop
orl
in
xchg
or
hlt
fistpll
jecxz
xchg
push
imul
out
dec
mov
cmp
movsl
std
jecxz
sub
scas
es
pop
mov
mov
sbb
fcmovbe
pushf
sbb
outsl
cwtl
aad
pop
std
icebp
outsb
xor
idiv
mov
out
fadds
sbb
les
lds
mov
pop
jno
loopne
mov
lods
mov
mov
ja
mov
cmp
insb
js
mov
out
jae
ficoms
pop
mov
dec
fmul
movsb
rcl
xlat
xor
pop
push
cmp
ss
mov
out
out
or
cwtl
inc
jb
lods
xchg
sub
add
or
adc
cmp
mov
bound
divl
cmc
inc
shr
pusha
inc
ds
xlat
inc
leave
cmpsl
shrl
sub
lea
dec
std
int3
pop
xchg
jbe
mov
loop
fidivl
insb
les
mov
addb
lret
jg
insb
cltd
dec
adc
dec
cmp
shufps
ret
ja
addr16
fisttpl
pop
pop
test
pop
cmp
cmp
int
fs
test
ss
sbb
rcrl
insb
mov
add
dec
cmp
imul
cwtl
dec
sbb
loope
adcl
add
push
sub
push
push
mov
imul
fdivl
fwait
adc
bound
icebp
xor
inc
mov
pop
xchg
dec
cs
loopne
or
mov
aas
data16
lcall
add
jne
test
lahf
inc
in
andl
cmp
xor
mov
xor
lods
push
mov
js
shrl
addr16
add
fwait
pop
xchg
clc
pop
roll
sbb
pop
inc
icebp
mov
jl
jb
and
int
xchg
jo
fisttpl
cmp
sbb
jl
cmp
mov
test
pop
mov
data16
jecxz
inc
and
lock
and
ret
pushf
jp
out
std
xchg
lea
movsb
or
or
push
inc
xor
test
or
dec
ja
sbb
xchg
mov
xlat
or
and
jge
insl
stos
push
and
ljmp
and
or
inc
pop
fstpl
mov
pop
mov
aam
push
mov
sbb
add
and
jne
ds
sbb
repnz
xor
jno
test
fildll
or
dec
push
add
fists
cmp
mov
jle
jbe
jo
pop
mov
xor
pop
lahf
cltd
or
sub
adc
xorb
cli
in
insl
pop
inc
ja
in
movsb
lods
rcrb
sahf
sbb
pop
ss
push
rorb
mov
jle
inc
call
ret
mov
dec
fcmovne
data16
data16
insb
out
popa
out
fucomp
data16
xor
cli
pop
outsb
inc
les
dec
adcb
mov
andnps
mov
rorl
loope
push
fcomps
dec
stos
test
nop
cli
push
jp
int
push
imul
aam
aad
pop
pop
or
daa
sbb
lret
pusha
jns
push
test
mov
lds
jle
adc
cmp
adc
outsb
mov
mov
pop
ret
dec
dec
stos
popa
jmp
mov
cmpb
sub
hlt
sbb
adc
dec
lds
testl
mov
inc
ljmp
dec
mov
repz
fisttps
push
xor
dec
push
push
outsb
pop
aaa
jge
jno
stos
push
or
sbb
dec
mov
imul
or
arpl
stos
lods
loop
and
jns
xorl
sub
dec
lea
cmp
lock
inc
pop
daa
push
cmp
aad
dec
fdivrp
orl
and
mov
jp
and
xchg
dec
jecxz
addl
mov
pop
add
mov
sti
movsl
stos
push
sub
repz
movb
outsb
fbld
lods
ljmp
xchg
lock
mov
cmp
stos
mov
in
xlat
jmp
aam
or
xorb
mov
sub
enter
xchg
repz
jno
sub
js
adc
or
fcomi
pop
mov
cmp
sarl
or
shll
or
pop
icebp
lock
test
mov
sub
mov
into
test
mov
cwtl
popa
imul
loope
dec
push
iret
cmp
jmp
xor
mov
push
push
movl
jnp
or
imul
out
icebp
std
test
ret
ret
mov
shrb
inc
xor
adc
or
xor
std
mov
adc
push
mov
mov
adc
dec
inc
mov
push
push
cmp
int3
out
cltd
lods
insl
xor
or
insb
ljmp
xchg
inc
xor
shrb
js
daa
je
pop
cmp
jge
xor
or
test
cmp
aam
scas
xor
mov
call
mov
cmpb
jle
popa
dec
add
xchg
adc
lods
add
movsb
push
popf
xor
cmp
sub
stos
jnp
ljmp
fisttpll
jae
xlat
push
jns
push
pop
lock
xor
sub
popf
rorl
in
shrl
sub
push
in
aam
push
cld
or
in
sub
xlat
je
fisttpl
dec
andl
in
mov
gs
scas
out
pop
jae
imul
out
stc
add
mov
inc
fistpll
imul
mov
cmc
push
subl
loop
inc
bound
je
arpl
pop
cmp
fstps
xlat
pop
mov
clc
iret
addl
mov
das
pop
scas
rorl
sbb
cmc
lahf
dec
inc
icebp
ljmp
ret
pushf
std
cs
cld
pop
sbb
mov
fimuls
dec
jo
das
push
and
inc
inc
add
mov
nop
add
mov
pop
int3
popf
push
jle
hlt
test
fidivs
or
xchg
out
adc
addr16
lock
push
inc
mov
pop
aaa
fsubrl
mov
add
sub
xchg
xor
adc
dec
out
rcrb
adc
lea
lods
cmc
add
jns
cltd
xchg
out
pop
subb
cmp
test
es
mov
jae
inc
jp
push
int
inc
dec
inc
sbb
mov
jge
hlt
out
and
mov
jl
xchg
fstl
lahf
fnstcw
call
fldl
xchg
orl
les
mov
adc
sub
into
sub
leave
sahf
jmp
add
sub
neg
js
cltd
imul
nop
in
outsl
int3
test
xlat
pushf
repnz
mov
arpl
repz
mov
imul
movsb
pushf
jae
insl
fprem1
mov
inc
pushf
add
fwait
fwait
scas
xchg
xchg
sbb
roll
imul
scas
decb
cmp
sbb
mov
jae
or
sbb
or
sbb
jp
sahf
add
ss
pushf
mov
fcmovb
mov
gs
ds
je
xor
pop
shll
dec
inc
xor
xchg
mov
out
scas
and
das
repz
test
in
es
popa
xchg
shlb
fadd
pop
and
loope
and
adc
popf
rclb
adc
call
jp
cld
mov
mov
mov
add
inc
dec
scas
cmp
jle
pop
jo
inc
clc
xchg
xchg
push
stos
nop
inc
sbb
test
paddusb
ficomps
push
or
pop
mov
push
into
pushf
leave
cmp
xchg
jmp
mov
insb
inc
pop
add
loop
insl
xchg
pop
dec
cmpsb
xorl
mov
mov
cmpsb
pop
sub
sbbl
xlat
mov
dec
lods
xchg
loop
push
scas
imul
in
jae
data16
int
mov
icebp
ljmp
pop
clc
mov
or
and
mov
pop
sbbl
jns
imull
sub
outsb
pop
stos
add
adc
arpl
add
pop
xor
int
shll
leave
jo
imul
fsub
or
es
hlt
and
orb
pop
pop
std
in
mov
pop
mov
xchg
cli
cmpsl
test
adc
inc
sahf
ret
gs
sub
mov
lret
test
sub
sahf
aam
dec
out
push
mov
ror
add
cmp
push
imul
xlat
outsb
lods
inc
push
mov
lcall
pop
hlt
testb
dec
mov
test
xchg
mov
push
pop
addr16
dec
and
jno
loop
stos
stc
sbb
rcrl
push
xor
ficomps
xor
mov
test
push
mov
cmc
cwtl
aam
cwtl
aaa
and
adc
enter
cmpsb
jge
not
jl
les
rolb
stc
lock
cltd
stos
cli
mov
pop
sub
std
addr16
out
leave
dec
pop
xchg
imul
cmp
enter
call
pop
cmp
push
mov
sub
xlat
daa
movsb
sub
in
fs
in
clc
fwait
int3
jle
mov
or
sbbl
out
ret
das
push
scas
in
in
xorb
out
adc
xchg
pop
jle
gs
repz
xor
jae
push
ja
ja
daa
out
js
push
mov
rorl
pop
enter
pop
cmpsb
jge
outsl
arpl
pusha
arpl
xor
cmp
inc
sub
das
into
sahf
cld
dec
xchg
xor
xchg
xor
lds
cmpsb
cmpb
and
aaa
test
leave
test
xchg
dec
std
lods
test
push
inc
push
lock
loope
arpl
fimuls
dec
adc
js
xchg
jo
mov
pop
mov
cs
or
sub
add
aam
jns
and
arpl
adc
bound
sbb
adc
jg
pop
ja
in
mov
dec
dec
mov
xchg
xor
outsb
mov
dec
xchg
mov
stos
mov
test
or
add
mov
movsb
xchg
ret
mov
jl
stos
sbb
mov
scas
and
mov
adc
mov
fisubrl
into
sub
fimull
dec
lods
stos
ficomps
insl
mov
mov
push
test
and
sahf
xor
xor
lds
xor
stos
cmp
pop
mov
sub
xor
arpl
out
inc
sbb
lret
adc
xchg
ss
movsl
cmp
sub
jb
and
jo
shlb
sub
sub
fistps
out
stc
aam
dec
cltd
jp
cltd
xor
pop
adc
cltd
pop
cmp
arpl
or
jbe
data16
sub
loope
sbb
xchg
jl
das
and
je
jno
xor
clc
and
push
imul
push
test
push
mov
dec
sub
inc
and
xchg
lods
mov
mov
mov
arpl
es
cmp
dec
in
dec
xor
xchg
ss
push
jb
sarl
fs
cli
rolb
in
push
fsubl
jmp
aad
test
mov
lea
mov
cmp
fsubr
stc
push
sub
pusha
inc
dec
adc
xor
sub
int3
cmpb
cwtl
push
add
jno
inc
sub
push
mov
cld
fadds
push
sar
xchg
movsl
adc
jb
insl
push
leave
ret
leave
and
jae
xor
scas
cli
int3
roll
inc
adc
je
iret
mov
mov
lods
mov
add
aad
or
loop
divl
adc
mov
shl
mov
roll
jge
pop
xchg
fs
push
stos
xchg
pop
decb
fs
push
test
push
cld
loopne
and
push
es
xor
outsl
sub
fwait
mov
ret
shlb
mov
jge
cmp
loopne
cmpsb
mov
jo
outsb
mov
add
pop
add
pop
push
aaa
imul
dec
add
mov
dec
stos
out
out
pushf
push
rcrb
cli
jp
xor
ret
imul
push
push
imul
sub
inc
mov
mov
pop
out
cmp
rolb
pop
sbb
or
test
adc
xchg
mov
popf
cmp
and
adc
sahf
sbb
rorb
ret
push
jl
push
addb
xchg
divl
inc
dec
addr16
cs
xchg
aas
adcb
js
cmp
insb
xchg
dec
xchg
mov
call
pop
push
clc
aas
inc
outsb
dec
sub
mov
pop
xchg
push
dec
dec
daa
add
push
stos
adc
mov
cmp
iret
inc
mov
ljmp
js
or
enter
nop
out
aam
adcb
mov
push
out
jnp
xchg
xor
mov
stos
and
std
jg
rcrl
adc
lret
xchg
mov
add
das
mov
fdivrl
test
push
ret
push
ret
jne
lea
add
or
mov
fsubr
push
addr16
push
jl
inc
add
dec
mov
jmp
in
mov
mov
sti
insl
roll
cmpsl
popa
adc
push
enter
mov
cs
jp
push
cli
mov
sub
push
fdivrl
imul
aam
mov
adc
adc
inc
push
fnsave
adc
lods
cmpb
sub
ret
icebp
sbb
js
int3
mov
mov
pop
mov
sub
test
jne
cmc
daa
and
sarl
call
cld
and
xchg
dec
cmp
insb
add
mov
sub
xchg
or
adc
adc
xchg
icebp
popa
add
movsl
neg
out
xor
lods
scas
jb
call
mov
xlat
mov
bound
adc
mov
imul
loope
ja
imul
dec
sbb
ret
pop
fstps
inc
lods
xor
xchg
and
dec
iret
arpl
fcomip
data16
sub
inc
cmpsl
mov
xchg
inc
pop
jmp
xchg
roll
push
lcall
or
sub
data16
push
negl
mov
std
push
test
sbb
gs
xor
ja
jae
out
in
jl
loop
xor
fimull
out
mov
adc
cli
gs
jno
cmpsb
icebp
imul
sub
outsl
push
gs
dec
push
or
mov
pop
dec
pop
inc
dec
push
int
jge
cs
loop
into
test
and
and
pusha
data16
popa
ljmp
bnd
adc
mov
mov
test
sub
push
int
std
xchg
pop
and
outsb
in
gs
lea
pop
jge
fidivl
or
ss
pop
inc
repz
sub
ficoms
jecxz
cmpsb
mov
pop
or
test
jbe
sub
test
cmp
jg
push
mov
mov
in
pusha
lods
push
int3
mov
movsl
imul
aam
sub
jnp
mov
or
or
jae
push
and
ja
fdiv
sti
pop
mov
xor
add
popa
jl
inc
repnz
lds
shll
mov
cs
stos
dec
popf
sub
sbbb
add
testb
insb
jl
fs
jmp
inc
jp
sub
inc
loop
clc
or
shl
xlat
or
ret
xchg
xor
int3
dec
or
push
lods
push
fldt
adc
sbb
icebp
xor
aaa
daa
daa
call
out
mov
xchg
xor
std
inc
dec
fstpt
iret
pop
daa
adc
filds
shlb
insl
and
jb
ret
idivl
rcrb
mov
jle
xor
fnstenv
adc
stos
mov
cmpsl
add
gs
out
cmp
push
pop
mov
jnp
hlt
sub
sub
aas
mov
mov
cmpsb
bound
jle
ret
mov
dec
lret
push
sub
push
sbb
int3
push
inc
mov
gs
xchg
lock
pop
fildl
mov
addr16
xchg
aas
lahf
outsl
push
add
adc
mov
test
cmpsb
shl
mov
rorl
scas
icebp
ljmp
jo
mov
movsb
mov
in
dec
out
cmpl
sbb
push
push
int3
je
lods
cld
or
fldl
loope
pop
add
sub
ret
mov
cli
push
push
add
mov
fucomi
xchg
add
xor
out
add
jnp
or
pop
cmc
out
in
nop
or
das
xor
xor
ja
int
outsb
sbb
fistl
leave
push
cmp
lret
sarl
sbb
inc
out
out
gs
movsl
loope
dec
ret
mov
dec
push
jp
rorb
fistl
mov
mov
xchg
mov
addr16
mov
sbb
dec
mov
pop
pop
ror
punpcklwd
jne
push
xor
cmpsl
and
das
sarl
pushf
jae
into
jmp
scas
adcl
outsl
cmp
cltd
push
repnz
mov
add
add
xor
xor
lret
and
adc
fcoml
cli
popa
jge
add
scas
out
pop
inc
mov
cmc
mov
mov
sbb
add
mov
mov
adc
mov
pushf
insl
jp
shrl
sub
loopne
cmpsl
and
mov
rcrl
add
dec
mov
and
rclb
mov
ja
enter
mov
psubusb
lods
mov
.byte
.byte
movsb
dec
and
xor
mov
pop
dec
xor
cwtl
stc
out
lock
cltd
in
outsb
scas
ficomps
lock
test
xchg
cmp
jbe,pt
jle
inc
xor
adc
push
inc
pusha
pop
cltd
or
popa
gs
inc
rcl
push
or
or
push
incb
gs
xlat
sbb
aam
js
or
enter
shlb
pop
adc
nop
int3
pop
aas
cmp
or
and
imul
ror
aaa
es
inc
repnz
mov
mov
mov
mov
or
out
in
scas
sarb
cld
cmc
dec
mov
xorl
pop
push
and
pushf
loop
fs
mov
fwait
mov
scas
rcrb
stc
into
clc
cwtl
addl
imul
fisubrs
push
hlt
popa
sti
fiaddl
out
add
lahf
inc
mov
loopne
xor
sub
fisttps
lods
stos
mov
repz
test
jbe
loop
mov
pop
sahf
in
lret
hlt
inc
lret
mov
jle
lahf
fcmovbe
in
in
iret
or
imul
mov
jae
outsl
pop
push
ljmp
or
cmp
sbb
hlt
lea
enter
cmp
xchg
adc
push
cmpsb
nop
push
out
or
inc
and
inc
in
add
aaa
mov
aad
push
adc
adc
sahf
rcl
inc
or
xor
out
jns
inc
cmpsb
fs
out
loopne
pop
sahf
push
push
mov
loopne
pop
inc
out
jne
imul
pop
jl
dec
lret
adc
fisubl
aad
sub
fdivrs
mov
jl
jge
iret
xchg
mov
psubb
fwait
stos
adc
xchg
xchg
cwtl
mov
lcall
nop
ss
test
xchg
mov
inc
inc
xlat
in
sub
shll
push
dec
rol
adcb
push
enter
mov
ljmp
push
xchg
dec
push
cmp
call
ds
cltd
call
mov
xchg
mov
or
sbb
mov
jbe
clc
xchg
imul
ljmp
add
out
dec
dec
dec
call
mov
pop
ja
das
inc
pop
pop
or
xlat
jnp
jno
lods
xchg
mov
xor
mov
inc
add
test
xor
inc
xchg
mov
sbb
jmp
xchg
and
nop
xchg
clc
inc
test
inc
inc
cmp
imull
mov
and
sti
dec
subb
loopew
cs
inc
push
jbe
sahf
sub
cli
xor
fildl
mov
push
mov
adc
push
je
imul
es
adc
mov
dec
mov
inc
xchg
repnz
cli
arpl
push
xchg
pop
inc
mov
jmp
es
add
into
fnsave
cmp
outsl
mov
adc
movsl
inc
das
dec
lahf
mov
and
adc
or
push
jp
fnstenv
push
jmp
sub
cmp
pop
cmpsb
inc
xchg
les
sbb
or
mov
je
aas
mov
dec
lea
jae
dec
test
mov
mov
pop
cmc
cmpsb
sti
sbb
mov
xor
push
sbb
push
cmp
push
xlat
inc
cmpsb
mov
in
jo
test
das
push
sbb
mov
test
fwait
jne
scas
gs
dec
nop
in
dec
inc
negl
jae
shl
inc
pop
mov
and
xchg
icebp
ds
movsb
sbb
sbb
jae
scas
lock
fs
dec
int
movsl
xor
test
cmpsb
daa
pop
sbb
push
pop
test
and
sub
xchg
cmc
pop
pop
xchg
jge
jnp
cwtl
ret
test
in
mov
cli
inc
imul
add
in
cli
jbe
insb
push
movsl
test
aas
inc
dec
and
cmp
nop
xor
add
loope
push
fs
push
xor
xor
hlt
xor
dec
pop
lea
decl
out
dec
or
adc
sub
pop
xor
icebp
rcll
push
dec
arpl
mov
insb
dec
sub
and
aam
insb
cmpsb
dec
push
lahf
mov
dec
or
rep
test
into
sahf
dec
ss
xchg
push
loopne
movsl
jl
pop
push
test
jp
ja
cwtl
out
negb
js
and
out
fcomps
out
mov
scas
mov
xchg
insb
mov
in
add
adc
out
jge
inc
je
fstpl
dec
in
outsb
jno
repnz
jecxz
xor
jnp
mov
pop
mov
xor
dec
ja
add
movsl
dec
mov
sahf
jbe
cwtl
cmpb
or
faddp
push
push
loope
fistpll
pop
repz
jo
jo
mov
jge
jnp
in
imul
out
rorl
insl
imul
dec
andl
jle
sbb
dec
enter
add
aas
lds
test
stc
mov
jo
xchg
pop
popf
pop
hlt
and
pop
fidivl
jae
gs
rcrb
cmp
cmp
psrad
mov
sar
and
jo
in
jae
imul
sbb
mov
enter
push
adc
clc
push
movsb
xchg
cmp
test
cmc
sbb
push
fldcw
dec
mov
mov
es
xorb
pop
insl
lcall
shrb
and
push
mov
pushf
fidivs
ret
rdpmc
mov
into
inc
sahf
push
lcall
dec
daa
cmp
jmp
call
lret
sbb
into
icebp
dec
push
movsb
push
pop
pop
cmp
hlt
jmp
xor
adc
inc
dec
cltd
dec
mov
outsl
scas
sub
or
cwtl
dec
mov
sub
lods
mov
ret
jb
xchg
mov
push
fisttpl
sbb
mov
ljmp
xchg
jg
add
insb
clc
jbe
mov
push
pop
or
xlat
push
mov
adc
or
out
cmp
inc
stc
std
push
push
inc
pop
inc
mov
push
daa
dec
lds
icebp
jmp
mov
sub
pop
gs
imull
lds
adc
in
or
lcall
xchg
andl
mov
cmp
sbb
add
sbb
aas
lret
pop
sbb
lods
popf
cmp
or
pop
add
push
sbb
clc
mov
in
dec
das
nop
mov
inc
scas
and
xor
ds
cld
push
loop
xlat
sub
insb
sti
cmp
dec
xchg
fwait
in
push
movsl
aam
jp
insl
xchg
mov
pop
pusha
cltd
lock
pop
and
mov
pop
lds
jecxz
mov
cmp
test
outsl
in
and
cmovp
xchg
lods
aas
fwait
or
cmp
icebp
push
insb
cmp
stos
lea
aam
cli
sub
lret
pop
aad
xchg
sub
sbb
jns
xchg
mov
jge
fildll
adc
add
or
psubsw
cwtl
inc
mov
jl
push
daa
cmp
sbb
mov
in
lods
mov
int
push
mov
lds
sbb
jno
sub
scas
hlt
or
lods
int3
cmp
sbb
insl
cmpl
lea
aad
xor
mov
fiadds
mov
aad
sahf
inc
mov
push
jg
stos
fistpl
push
xchg
xchg
je
fildl
cs
inc
sbb
dec
adc
aad
add
push
inc
mov
push
out
lock
mov
leave
jge
push
adc
push
jnp
jmp
dec
out
pop
cwtl
sbb
movsl
mov
xchg
mov
test
aad
out
xor
or
or
lock
cmc
sbb
sub
fs
adc
inc
in
pushf
dec
push
ds
or
xchg
enter
add
push
cs
dec
mov
arpl
and
daa
xchg
stos
test
cli
xor
fsub
inc
scas
popl
fnstsw
lahf
jecxz
xchg
sbbb
xchg
popf
nop
fsub
xor
rclb
mov
into
push
mov
cmp
fwait
stos
jo
sbb
push
ss
aaa
xor
pop
cld
jg
fdivrs
inc
push
or
cld
add
mov
cmp
je
sbb
mov
and
mov
add
ja
sub
roll
push
inc
mov
clc
sbbb
leave
or
add
sbb
incl
jmp
arpl
lods
daa
notb
fwait
nop
mov
dec
xchg
add
or
mov
cmpsb
mov
sbb
and
xchg
add
or
mov
aad
or
and
repnz
std
negl
mov
or
in
or
fsubr
or
inc
addb
xor
sahf
scas
sub
orl
and
add
push
icebp
orb
mov
loopne
daa
lcall
xchg
push
repz
loope
js
ret
mov
lds
adc
sahf
push
enter
shlb
fwait
and
inc
bound
push
lds
repz
lahf
xor
cmp
jecxz
xor
mov
int
into
mov
mov
add
cli
faddl
sbb
push
and
jbe
addr16
xchg
sti
mov
cld
fistpl
xchg
jae
push
mov
pop
out
pop
inc
sbb
or
mov
push
cmp
or
pop
add
adc
xor
xor
fwait
mov
ja
hlt
stos
jns
es
mov
push
dec
push
sbb
mov
sub
int3
fistl
mov
adc
dec
xchg
aad
shrb
jle
loop
add
and
pop
sbb
cli
dec
inc
sub
mov
xor
popl
jae
pushf
test
sti
adc
pushf
adc
mov
ja
mov
addr16
mov
hlt
ss
sub
cld
xchg
jge
sub
into
fdivrs
inc
in
dec
notl
popl
inc
add
xchg
add
dec
icebp
loop
mov
sti
xor
out
cmp
jae
out
stos
mov
mov
in
sbb
jl
imul
sbbb
sub
xlat
dec
inc
in
icebp
and
or
cli
je
xor
lret
inc
lcall
pop
mov
jg
sbb
cmp
je
movsl
pop
sbb
add
js
push
dec
mov
aaa
adc
in
cmp
and
mov
and
xor
cmp
rolb
sahf
gs
jne
cmpsb
sub
push
pop
std
jmp
dec
sti
dec
push
xchg
mulb
popf
push
out
jnp
push
jmp
pop
jbe
adc
lds
add
mov
add
xchg
mov
fmull
aas
inc
flds
out
lahf
movsl
xchg
ficoml
popa
inc
repnz
xchg
and
test
iret
jg
adc
jge
clc
outsb
jne
fnstcw
movsl
cmp
aas
mov
jecxz
jnp
out
mov
sbb
push
dec
shrl
and
xor
push
scas
lds
ret
cmpsb
aaa
test
pop
nop
rcll
mov
push
leave
mov
sub
das
fisttpl
xchg
shlb
jle
inc
lcall
mov
xorb
js
ljmp
icebp
lods
sub
clc
insb
sub
jmp
xorb
mov
cmc
ret
dec
enter
cmp
loopne
adc
sub
in
cld
inc
mov
scas
icebp
incb
pop
in
cmp
pop
dec
les
cmp
add
adc
sahf
cmp
out
add
fwait
sbb
pop
sbb
dec
lds
push
mov
fs
test
pop
jecxz
scas
bound
hlt
dec
fs
sbb
jo
out
addr16
mov
add
imul
std
jge
pop
jno
mov
outsb
adc
or
jns
shlb
pop
lret
out
mov
xor
jmp
cmp
xchg
mov
and
lret
cmp
shlb
aad
push
aam
inc
xchg
pop
ja
sarb
sub
and
push
popa
push
clc
jp
mov
in
mov
mov
or
mov
jge
mov
in
stos
xor
mov
fidivrl
es
cmp
shr
dec
jge
ret
mov
xor
out
xchg
iret
add
mov
inc
and
stos
adc
push
cmpsl
mov
in
xor
rorl
mov
loopne
jg
dec
sbb
shrb
jbe,pn
inc
int3
push
sbb
push
rorb
fiaddl
xchg
ja
inc
adc
xchg
insb
cmp
jp
imul
sbb
mov
push
and
xchg
in
xchg
movsl
sbb
pop
outsl
roll
icebp
jmp
test
sbb
sub
ja
xchg
push
mov
inc
dec
sbb
shr
mov
add
repnz
and
push
lds
addb
sti
lock
push
in
and
pop
out
xor
fmull
call
sub
mov
js
pop
sbb
or
ss
inc
adc
popa
jl
pushf
sub
sarb
test
push
das
sarb
mov
inc
add
xchg
pop
pop
pop
xchg
pop
cmpsb
xchg
in
stos
push
xchg
mov
outsl
jne
cmp
pop
test
subl
adc
lods
inc
ja
or
or
and
xlat
shlb
iret
or
fldt
imul
cmp
jmp
es
jns
pop
sub
dec
mov
hlt
sub
pop
xchg
mov
mov
jbe
xchg
cmp
in
sbb
nop
sbb
xchg
ja
or
dec
mov
mov
repz
add
arpl
xor
mov
rorb
jne
out
dec
inc
dec
pop
jbe
lock
push
xor
or
jbe
cld
inc
loopne
ret
push
cltd
push
sbb
and
repnz
data16
dec
jnp
dec
je
in
pop
mov
shll
or
and
repnz
pop
sbb
call
cmp
das
adc
je
push
add
cmp
xor
cltd
mov
jg
pop
mov
iret
or
lcall
and
dec
dec
mov
sahf
jg
jle
std
lret
addl
xchg
fwait
adc
insb
in
pop
or
repnz
gs
dec
into
je
pminsw
in
jmp
adc
lahf
jae
loopne
xchg
lock
cmp
jnp
mov
add
xchg
xchg
inc
cwtl
and
ja
inc
xchg
sub
sti
mov
inc
popl
call
lds
xchg
jecxz
cmp
inc
jnp
push
sbb
inc
imul
inc
push
pop
fnstenv
sub
lds
test
mov
sub
xor
test
xor
jmp
push
jmp
dec
nop
data16
fistpll
lods
lret
mov
cmp
insl
mov
jo
lret
add
cmp
adc
je
outsl
sub
jmp
pop
ret
sbb
pop
adc
test
xorb
pop
jns
mov
stc
xor
lods
scas
sbb
clc
mov
push
adc
out
xchg
rep
sub
mov
std
fdiv
in
sahf
xchg
xorl
insl
cwtl
mov
in
fs
enter
imul
and
roll
notl
repnz
sarb
or
lods
and
jne
pop
outsl
adc
dec
push
icebp
rcr
jbe
sbb
or
or
arpl
fsubrl
les
into
js
inc
sahf
pop
mov
jmp
pop
push
jbe
aaa
scas
mov
ss
inc
into
ds
fcmovnu
aad
insb
and
pop
addl
pop
data16
test
push
enter
inc
lret
xor
adc
push
xlat
stos
lods
mov
imul
push
pop
jne
cmpsl
addr16
lods
stos
mov
adc
pop
arpl
ljmp
in
mov
mov
es
pusha
test
mov
sub
and
mov
add
bound
insb
sbbl
cs
mulb
sub
push
add
addb
jecxz
push
mov
mov
scas
in
push
arpl
in
push
ja
add
out
stos
mov
stc
jae
mov
mov
jnp
les
add
jmp
rcrl
lods
add
cli
pop
in
jmp
pushf
in
jg
cmp
sub
or
arpl
pop
xor
outsb
daa
out
enter
out
dec
mov
in
fwait
pop
cmp
jmp
test
imul
and
xchg
test
or
or
mov
repz
fistpl
out
and
popa
test
insb
inc
fistps
std
stos
or
cmc
lahf
mov
clc
xor
rclb
cmovs
sbbl
call
push
adc
ds
dec
or
push
inc
cmpb
push
shl
xlat
mov
mov
test
repnz
mov
push
pop
push
and
cmp
jb
out
jg
ljmp
xor
iret
dec
loop
imull
arpl
add
dec
sub
icebp
cwtl
inc
popa
aam
repz
je
mov
sahf
xor
xor
lcall
js
sbb
std
insl
pop
xchg
movsl
push
out
gs
xchg
leave
pusha
popa
cmp
adc
test
push
sub
dec
fdiv
sarl
shr
bound
repnz
ljmp
loope
xchg
arpl
and
and
xchg
popf
xor
gs
das
xor
in
adc
roll
fwait
out
inc
out
dec
or
lds
mov
xchg
adc
push
mov
call
and
xchg
idivb
popa
add
jmp
sbb
push
clc
dec
inc
sub
sahf
jne
shrb
or
out
push
cld
push
scas
rcl
inc
ss
aas
mov
sbb
mov
jbe
mov
arpl
cmpsb
push
add
adc
into
in
jge
inc
mov
cmp
je
std
mov
loope
sbb
mov
fstpl
cmp
leave
push
sbb
push
push
mov
mov
mov
cmp
test
xor
cwtl
out
sbb
jmp
repz
and
adc
or
jmp
insb
popa
test
sbb
decl
rcll
leave
xor
xchg
test
cmc
dec
add
xchg
pusha
daa
out
mov
out
ss
jno
jne
pop
mov
push
push
clc
or
movsl
lret
in
es
dec
or
xchg
cmp
pop
stc
imul
std
sub
das
sbb
imul
cmp
fs
xchg
ljmp
pop
mov
fiadds
cld
pop
out
inc
jnp
fadds
sub
sbb
in
cmp
pavgw
cmp
mov
pop
js
and
std
or
pusha
jne
mov
js
inc
incb
addb
dec
out
pop
cmp
enter
push
mov
push
mov
jecxz
pushf
push
jmp
xor
cmp
mov
cmpsb
xor
push
idivl
aad
scas
popl
loopne
xorb
enter
jno
xor
fidivl
sub
xchg
andb
iret
stc
jae
out
ds
push
test
mov
test
adc
adc
fsub
int3
or
shr
mov
and
clc
sub
jo
sbb
lds
fst
pop
in
jnp
repz
std
xor
shrb
add
push
sysret
rcrl
out
xor
out
xor
inc
mov
sbb
pop
movsl
jmp
out
inc
jmp
mov
or
mov
jmp
mov
into
sub
imul
pop
and
daa
cli
cli
inc
jecxz
lret
push
dec
and
add
or
dec
sarb
aaa
add
xchg
pop
pop
mov
nop
xor
or
dec
xchg
cmpsb
rolb
movb
int
lret
push
arpl
jb
lods
fbld
xchg
sbb
popf
lock
push
jbe
add
jo
pop
jecxz
pop
jns
adc
jnp
cli
and
scas
mov
icebp
mov
add
cli
rclb
mov
xor
mov
xor
inc
lods
and
mov
add
in
and
loopne
popf
leave
aaa
pop
push
movsl
dec
dec
or
mov
lcall
sbb
pop
fisubl
mov
insb
lock
les
fchs
jl
sub
sbb
jg
mov
call
mov
enter
pop
mov
rolb
pop
mov
pop
cmp
test
inc
push
push
lret
pop
jp
mov
nop
repnz
daa
fisubrs
andl
addr16
add
and
mov
lea
mov
pop
push
in
cmpb
arpl
cwtl
popa
adc
xchg
rorl
adc
test
push
cmp
xor
mov
in
std
adc
cmp
mov
inc
cli
aad
scas
jecxz
and
push
mov
out
notb
dec
xchg
gs
jge
enter
rolb
jno
cmc
andb
fdivrl
mov
test
mov
dec
fisttpll
mov
mov
gs
add
mov
popa
and
pushw
jns
sar
cwtl
lock
mov
into
out
add
jns
or
mov
lcall
xchg
jo
mov
fwait
adc
and
notl
cli
sub
lret
pop
int3
ds
mov
iret
push
push
and
addr16
je
xor
lods
aaa
xor
ret
jnp
pushf
push
sahf
dec
daa
test
pop
into
mov
xchg
lods
and
rcrb
xchg
outsl
rcll
jecxz
xlat
or
jbe
ja
pop
add
insl
outsl
pusha
aaa
dec
cmpsl
and
mov
dec
pusha
lock
mov
addr16
nop
push
mov
sbb
mov
test
divl
mov
sbb
mov
loope
jg
mov
jnp
pop
xchg
push
sahf
cld
push
pop
out
sbb
push
mov
xor
test
dec
cmp
fiaddl
call
mov
cs
test
les
jns
adc
mov
and
push
cmpsb
je
push
ret
mov
scas
mov
mov
ret
push
add
push
add
or
fwait
push
xor
push
bswap
fsubrp
sbb
mov
dec
loopne
jb
mov
mov
inc
add
xor
mov
fadds
decb
push
ficompl
insb
loope
aad
lret
and
test
cmp
xchg
inc
cmpsb
test
inc
shll
repnz
scas
mov
and
clc
xlat
mov
jl
dec
lahf
cli
mov
adc
dec
mov
or
adc
dec
jl
sbb
xchg
fdivl
rorl
aam
pop
inc
js
cld
add
pop
fs
add
xchg
mov
pop
cmp
js
adc
cli
mov
bound
insl
inc
xchg
sub
sahf
adc
push
push
pop
push
data16
push
data16
or
fisubrl
sub
mov
imul
sbb
inc
les
aad
dec
stos
test
stos
inc
mov
test
sahf
jae
mov
fdivrs
xchg
jg
push
fwait
xlat
push
jmp
mov
in
xchg
int
sbb
sub
xlat
jb
mov
cmp
jmp
or
imul
int
push
xchg
test
push
outsb
sbb
dec
push
lods
insb
ss
xchg
jb
mov
out
rcrl
cltd
add
shrb
rcrl
sbb
xor
movsb
jne
cmc
jnp
jl
mov
loop
daa
add
clc
or
fistpl
mov
test
in
fadds
pop
faddl
jb
cmc
push
jle
pop
repz
mov
add
in
lods
xchg
dec
push
sub
add
cmp
add
lahf
adc
mov
cld
xor
cmp
sbb
es
pushf
std
push
or
sub
call
xchg
or
pop
int3
lods
stos
movl
nop
xor
sarl
mov
out
lahf
xor
mov
inc
sbb
xor
cmpsb
dec
xchg
jmp
and
ss
les
mov
pop
ja
subl
mov
nop
movsl
push
movsl
cmpsl
sub
jmp
pop
or
push
dec
test
pusha
call
xchg
mov
jae
push
icebp
cmp
dec
imul
fdivs
jb
cmpsl
sbb
dec
push
pop
xchg
sub
lahf
lcall
cltd
or
fldcw
inc
out
jge
mov
lds
lods
push
loop
stos
xchg
stos
in
leave
mov
cmpsl
iret
jge
inc
mov
out
es
mov
xlat
mov
leave
push
pop
aaa
jge
sbb
inc
movsl
es
jnp
lcall
cmp
shl
scas
dec
mov
int
and
add
pushf
repnz
popa
mov
out
test
cmp
mov
xchg
out
mov
dec
add
mov
icebp
test
lcall
subl
mov
lods
inc
test
cmp
jecxz
xor
jbe
clc
mov
pop
adc
ret
mov
in
cmp
mov
jmp
add
jmp
hlt
fwait
jns
adc
cmpsl
fildl
push
cmc
push
xchg
pop
cwtl
jbe
mov
nop
data16
pop
jle
xchg
jns
lahf
add
dec
das
jbe
jp
insb
out
cmp
inc
rcrb
cmpsb
shrl
xchg
mov
rolb
inc
cmp
lds
fistpl
adc
fdivl
sub
inc
in
lds
jp
xchg
outsl
cmp
aam
mov
imul
push
sbb
sbb
xor
imul
or
push
sbb
add
sub
jp
inc
pop
cmpsb
push
lock
inc
adc
lods
lret
fsubr
cwtl
cmp
mov
rol
add
push
pushf
push
push
addl
mov
and
clc
adc
roll
jo
iret
and
and
lcall
and
stos
xor
mov
sub
fstpt
pop
push
loope
fbld
dec
imul
push
pop
rcll
addr16
push
outsb
xlat
cmp
sub
xchg
xor
xor
adc
ret
lea
and
push
int
hlt
jmp
bound
push
pop
mov
scas
popa
fstpl
adc
mov
je
das
pop
push
stos
ret
ja
or
lds
ja
or
int3
idivb
jb
xchg
lret
xchg
test
lret
inc
xchg
jae,pn
test
popf
movsl
sub
or
mov
dec
fdivr
and
adc
adc
in
and
jmp
inc
fwait
bound
inc
cmp
imul
movsl
jp
in
lret
fsincos
push
das
lods
decb
lcall
out
enter
lods
sti
pop
or
jns
out
das
ja
fstps
xor
fiadds
xchg
cmp
cmpsb
xchg
lret
out
orb
nop
mov
mov
arpl
push
dec
ss
cmp
push
adc
push
mulb
es
mov
nop
lret
pop
out
push
push
loopne
enter
push
insl
mov
jae
pop
je
add
nop
popa
cmpsl
mov
or
repnz
rorb
dec
lahf
inc
aas
adc
inc
pop
mov
mov
xor
cmc
adc
fcmovne
out
push
xor
or
out
fsubrl
xchg
xchg
mov
mov
xchg
shr
push
jl
lods
jae
rolb
add
xor
inc
insl
xchg
or
popa
push
mov
ss
in
sbb
andl
or
or
aaa
jmp
rcrb
pop
nop
and
push
icebp
iret
mov
mov
test
mov
adc
mov
mov
sahf
imul
lock
imul
adc
or
sahf
decb
dec
push
aad
popf
fnstenv
or
shrl
orl
cwtl
clc
push
cmp
cmpsl
arpl
daa
xchg
pop
push
push
popa
loop
cvtpi2ps
sbb
fstps
stc
pop
pop
cmp
mov
lock
popf
or
or
sbb
ror
ss
push
and
ljmp
push
mov
pop
sti
mov
pop
in
jg
mov
add
lret
out
lds
sbb
adc
mov
sti
push
in
pop
pop
push
cmp
loope
cmp
jno
lret
fld
sbb
pop
jecxz
xchg
xor
lret
test
pop
std
mov
cmp
jg
add
repz
xor
and
out
pop
jg
cli
push
pop
rcll
in
movsb
lds
cwtl
jecxz
mov
jl
xor
xchg
sub
sbb
xor
lock
sub
into
cmp
and
mov
xchg
cmp
out
rcll
xchg
xchg
lahf
lock
push
mov
ret
push
js
xlat
nop
mov
sahf
loop
or
mov
and
lods
out
rorl
cltd
mov
jl
xlat
push
bound
ljmp
roll
adc
cmp
mov
mov
sbbb
mov
cmp
addb
jl
mov
mov
push
loope
in
sub
scas
mov
lahf
popa
clc
test
sub
pop
pushl
outsb
xchg
pop
pusha
or
sahf
mov
mov
push
aas
push
outsl
ret
aaa
mov
fnsetpm(287
xchg
pusha
arpl
mov
popa
xchg
xchg
cmp
pushl
lock
mov
int3
jle
dec
popf
or
cmpsb
xchg
iret
ret
mov
sarl
ret
ljmp
jns
gs
pop
leave
pop
cmpsl
push
jg
inc
cmpsl
dec
mov
cmp
stos
ljmp
adc
loope
mov
rorb
dec
and
nop
js
loope
add
shlb
pop
xchg
mov
jbe
lret
inc
adc
mov
sbb
and
push
subb
enter
iret
xchg
test
andl
sub
push
loop
inc
sub
mov
sbbb
ljmp
pop
sub
or
aaa
jecxz
fsubr
testb
jnp
mov
sar
into
mov
es
and
dec
stc
push
fidivl
aad
test
cmp
pop
dec
not
cmp
movsb
shrl
scas
or
sub
mov
std
mov
loope
xor
or
iret
jmp
pop
jmp
loope
ja
sub
adc
std
xchg
cmpb
fwait
div
or
loopne
fcoml
pop
scas
dec
int3
fcmovnu
adc
push
fwait
daa
sub
fsubl
jb
jae
cmp
push
lret
loopne
dec
dec
testl
lahf
add
xchg
xchg
xchg
jns
jns
jns
call
lcall
sarl
dec
push
fnsave
jbe
inc
je
movsl
je
int
push
test
xacquire
xchg
add
fbld
pop
jo
push
xchg
and
push
sub
dec
clc
xchg
cmp
xchg
sbb
ret
ljmp
out
jecxz
out
adc
mov
push
xchg
xor
mov
xor
call
sub
imul
sub
adc
aad
cmp
jp
mov
or
mov
fbld
and
inc
popa
lods
jp
jb
movsb
rolb
dec
xor
test
inc
or
cwtl
cmp
and
mov
jbe
push
outsl
fstl
add
mov
fs
xchg
mov
push
push
cmp
hlt
jno
and
sub
shl
inc
testl
fdivr
sub
rcrb
xor
sahf
pop
andl
fs
repnz
shlb
scas
sbb
out
cmp
pop
es
push
add
loope
mov
bnd
adc
jne
wbinvd
iret
sub
sahf
ret
lods
sbb
or
fnstcw
mov
and
cmp
int
mov
sub
xchg
or
jno
push
mov
loopne
add
les
icebp
jmp
xor
xchg
imul
addr16
mov
push
icebp
xor
jmp
das
sahf
aam
popa
mov
ss
xlat
stos
out
add
add
mov
sbb
test
cmc
mov
call
pop
mov
andb
in
mov
rcrl
inc
push
cmp
jbe
add
ds
int
fcos
sbb
ret
jl
fildl
push
sbb
stos
scas
insl
xchg
aas
bswap
inc
ljmp
mov
mov
inc
mov
mov
fidivrs
mov
lret
mov
pop
scas
out
aas
pop
stos
imul
daa
adc
sbb
pop
test
call
and
sbb
lret
popa
sub
cmp
popf
in
in
sub
sub
lcall
adc
cmp
mov
js
test
dec
and
pop
jmp
lods
mov
jl
scas
ret
cs
insb
pushf
sti
int3
fbstp
std
ret
fsubrs
roll
lret
add
cmpsb
inc
stc
dec
les
fisubrs
sti
dec
popa
in
cld
sub
cmp
pusha
outsb
mov
push
rorb
loopne
cltd
pop
inc
push
sbb
fcompl
cltd
sub
call
adc
ss
or
and
cmp
mov
push
int3
lods
inc
lahf
sub
sti
push
cmp
popf
adc
mov
mov
ljmp
out
and
sbb
push
add
add
pop
ret
lret
sti
cmp
imul
add
sub
enter
mov
and
inc
insb
push
aas
js
adc
mov
xchg
popa
push
nop
mov
xchg
gs
es
sahf
and
sub
or
outsl
cmp
cli
dec
dec
sbb
rclb
inc
and
xchg
xchg
into
mov
leave
pop
nop
out
mov
cltd
and
ss
sbb
ror
pop
jb
jmp
or
and
test
adc
data16
nop
aaa
dec
dec
imul
push
clc
sbb
cmp
push
sti
cmp
out
sub
cld
add
inc
and
add
rcll
andb
push
out
lods
paddusw
pushf
push
sbb
mov
iret
in
ret
jg
mov
aad
in
fwait
rcrl
fisubrl
out
xchg
add
xorl
movb
mov
add
sarb
js
test
pushf
jle
or
call
push
jae
dec
cld
sub
popa
ret
adc
mov
inc
sub
push
movsl
mov
aam
lahf
add
and
push
add
leave
sbb
dec
shrl
xor
ss
jecxz
add
add
mov
add
testl
lea
fs
idivb
imul
shlb
cli
mov
dec
popl
inc
sarl
je
loopne
cmp
mov
popf
fldenv
jge
xchg
das
cmp
dec
pushf
stos
push
push
jo
cld
and
ss
jle
lret
mov
test
mov
rolb
and
xchg
pop
movsl
cmp
inc
push
popf
ds
mov
sub
xchg
pushl
ret
inc
push
in
bound
in
mov
mov
scas
into
jnp
adc
adc
out
mov
mov
mov
mov
clc
loope
mov
add
cltd
in
cmc
and
xchg
call
mov
inc
scas
stos
testl
loop
sti
xchg
mov
je
and
push
sub
or
sub
mov
or
push
and
inc
adc
push
iret
jb
ljmp
add
pushf
out
scas
xor
push
xchg
aad
cmp
out
sbb
fcomip
aad
psubsw
push
dec
add
pop
in
in
lcall
inc
adc
loop
loop
cmc
test
jb
mov
adc
leave
das
sbb
cmpsl
jb
test
cs
dec
aam
rolb
mov
mov
pop
sbb
ss
test
dec
and
aas
push
sbb
ljmp
sbb
mov
pushf
fs
stos
mov
stc
rcr
mov
repnz
pop
sbb
mov
test
inc
push
pusha
ficompl
xchg
shrb
xor
cmp
or
mov
movsb
inc
insb
filds
int
mov
and
jg
imul
ss
cmp
mov
outsb
movsb
jle
xor
fisttpll
inc
xchg
ja
sub
sbb
mov
les
dec
xchg
jmp
daa
jp
fcoml
or
imull
cmpsl
xchg
inc
pop
mov
jp
ss
jns
lods
in
and
outsb
jns
cltd
arpl
enter
and
fldcw
cs
loopne
sbb
jnp
pop
pop
or
or
push
sti
and
sub
std
into
adc
push
aaa
push
enter
daa
pushf
xchg
int
dec
fmul
dec
sbb
lock
std
cs
outsl
pop
and
fildll
in
mov
cmp
xchg
sbb
rclb
movsb
ss
es
pop
loop
stos
roll
xor
xlat
dec
xor
sub
shl
lret
pop
js
xor
in
imul
inc
jb
mov
xchg
mov
add
std
repnz
inc
dec
inc
or
stos
iret
or
int3
cmpsb
push
mov
pop
dec
mov
pop
shrb
ror
push
in
or
push
xchg
push
inc
cs
call
sahf
adc
adc
stc
mov
lcall
mov
xor
aam
xor
xchg
fisttpll
ds
fldl
cmpsl
cltd
inc
insb
xchg
fiadds
outsb
xlat
js
aad
fs
lods
sub
loop
mov
add
dec
add
scas
xchg
sbb
add
inc
jns
fldcw
dec
xchg
not
ficoms
test
pop
je
push
cmpsl
stc
pop
jmp
popf
pusha
decb
push
stos
ret
xchg
pop
sub
push
sti
aad
mov
mov
aaa
loope
push
mov
cmpsb
mov
cld
inc
cld
add
adc
pop
pop
cmp
mov
mov
ffreep
inc
pop
inc
sub
xor
sbb
push
in
mov
push
ss
fdivrl
rorl
add
test
adc
and
sub
fisubrs
and
pop
add
push
fstpl
jecxz
ret
add
push
js
scas
xor
adc
xor
ret
fmull
mov
jg
fcomp
xchg
jmp
test
int3
in
fsubs
mov
jae
sbb
xchg
mov
repz
stos
xchg
mov
inc
jmp
cmpsb
cwtl
sub
loopne
je
mov
mov
xor
jno
test
pop
xchg
adc
sbb
or
stos
icebp
xchg
outsb
andb
cld
dec
into
pop
cltd
stos
daa
pop
jo
add
jmp
sub
shll
xchg
dec
xor
hlt
fsubl
nop
sbb
lret
lock
push
push
add
or
pop
mov
pop
sahf
sub
jo
and
cmc
dec
fidivl
cltd
es
cmc
push
pop
mov
sbb
rolb
xchg
pop
pushf
or
cltd
jmp
push
js
iret
popa
movl
popf
or
jb
int3
add
pushf
out
pop
dec
fwait
arpl
cmpsb
ss
movsb
mov
dec
movsl
xchg
cmp
sub
cmc
in
push
inc
inc
adc
mov
insl
push
fldcw
jle
inc
inc
mov
inc
pop
cltd
xorb
pop
dec
mov
loopne
cmp
aaa
add
jae
rclb
fidivrs
scas
or
rclb
out
cs
push
leave
xchg
cli
jbe
and
sub
inc
js
gs
push
pop
cmc
call
shlb
or
test
mov
movsl
sub
adc
pop
and
ds
stc
xchg
adc
and
cmpsb
xor
outsb
xor
mov
ljmp
jp
ret
mov
jnp
pop
mov
mov
leave
mov
jl
outsb
call
movsb
int3
dec
mov
push
mov
or
mov
cmc
jle
int3
outsl
xchg
dec
rcrb
jo
adc
pop
xor
das
adc
sub
jbe
rol
mov
mov
test
shll
je
mov
insl
insb
mov
mov
in
lcall
lods
mov
push
out
fnstsw
lods
xchg
push
dec
jne
lretw
cmp
xchg
cmp
in
sbb
cmp
addr16
and
inc
push
bound
icebp
pushf
adc
arpl
shll
mov
je
or
orl
outsb
and
movsl
jl
mov
inc
sub
adc
cmp
in
ret
cmpsb
add
mov
mov
or
jb
popa
movb
stos
std
mov
jl,pn
popf
into
or
adc
insl
adc
or
dec
mov
mov
mov
out
leave
cmp
dec
inc
or
loop
call
add
add
push
out
popf
sbb
cmp
mov
xchg
out
ror
js
nop
xor
les
movsl
loope
xchg
and
int3
xchg
mov
mov
lds
mov
pop
xchg
sbb
jle
aam
lret
and
xchg
jbe
or
add
pop
dec
xor
push
xchg
sbb
lock
fcomps
scas
jbe
push
fdivl
and
inc
adc
adc
pop
in
pop
jl
mov
cmpsl
inc
and
subl
inc
sbb
sets
les
mov
sub
dec
daa
pop
jg
and
jp
aam
xchg
jmp
pop
inc
and
in
mov
mov
fs
movsl
mov
movsl
loopne
inc
aam
sub
lea
mov
fwait
pop
jle
mov
add
pop
mov
in
or
mov
mov
or
scas
incb
aam
cmp
std
sub
sti
outsl
push
inc
or
aaa
or
outsb
push
cmp
out
xchg
imul
cli
inc
adc
insb
pop
jmp
cltd
rcl
lret
ret
fmul
mov
sub
leave
fists
adcl
mov
sti
mov
inc
mov
int
mov
mov
ds
push
out
inc
call
pop
mov
mov
in
xchg
pop
mov
jecxz
mov
or
movsl
jns
push
cmp
or
insb
jno
mov
sbb
adc
leave
pop
xor
lea
sar
sub
xor
mov
jmp
jp
xor
jbe
cmp
inc
call
mov
in
sbb
inc
std
xor
loope
ret
shll
ja
xor
inc
ret
sub
inc
fimuls
sub
mov
and
mov
mov
jl
fidivrs
fwait
stos
cmp
jnp
sbb
dec
loopne
out
push
out
jae
aad
add
push
out
lcall
loop
int
and
test
ss
outsb
mov
out
push
add
pop
lods
test
cltd
icebp
or
dec
icebp
jne
mov
pop
pop
lret
es
leave
movsb
imul
adc
mov
das
mov
pop
mov
mov
sub
clc
inc
and
mov
lds
sub
and
cmc
les
cld
je
subps
push
add
sbb
jge
adc
sbbb
or
cwtl
sub
mov
movsl
pop
aad
xchg
andl
pop
xor
cwtl
loope
aad
out
push
inc
test
pop
lock
add
and
ret
out
jle
scas
inc
cld
hlt
lods
mov
popf
adc
push
jns
and
mov
test
shrl
jns
xchg
ret
sub
daa
leave
scas
rcrb
dec
add
xlat
cwtl
test
mov
sti
add
mov
in
out
daa
hlt
iret
bound
pop
pop
sub
into
aad
test
js
mov
pop
outsl
add
xchg
jecxz
adc
inc
fsubrl
jo
push
pop
push
repnz
push
mov
sti
jno
add
mov
jnp
or
pop
aaa
pop
xchg
push
and
xor
jecxz
or
and
outsb
pop
xor
in
imul
dec
gs
adc
sub
and
imul
lcall
mov
das
mov
out
pop
jmp
jl
inc
in
jmp
pop
out
test
pop
and
rcr
mov
dec
xchg
pop
jo
dec
xlat
lods
daa
mov
outsl
lcall
pop
rorb
insb
pop
inc
push
mov
hlt
dec
icebp
popf
xor
lods
nop
pop
jmp
loopne
push
imul
push
sbb
enter
pop
addr16
sarb
jl
mov
push
mov
jae
test
in
sbb
enter
pop
ja
add
mov
xor
testb
jno
gs
cmp
xchg
clc
hlt
in
xchg
lahf
pop
je
jo
sub
sbb
nop/reserved
aaa
pop
aad
outsb
gs
repnz
sub
xchg
adc
xor
dec
cmp
jae
sub
ret
sbb
xor
lods
sbb
bound
shrl
jo
xlat
push
popa
in
cltd
ret
mov
push
xor
out
enter
adc
adcb
fistpl
pop
les
jge
jle
test
mov
sub
jmp
push
cmp
imull
in
scas
mov
inc
sub
mov
cmp
gs
jle
aam
int3
mov
popf
dec
cmc
lods
and
or
mov
push
es
adc
and
mov
sub
jno
mov
xchg
push
push
outsb
pop
pop
fldt
sub
daa
stos
mov
out
xchg
push
jne
das
xchg
dec
out
xor
ret
fildll
mov
or
pop
es
pop
insb
inc
rorb
inc
mov
lock
imul
xor
mov
jmp
push
les
lods
xorl
gs
adc
sub
scas
cmp
mov
lret
cmpsb
shlb
lods
sbb
xor
lahf
xchg
jo
jae
dec
xor
push
bound
mov
sub
mov
pop
sbb
nop
clc
repz
dec
popl
ljmp
mov
fs
nop
jo
cmp
or
mov
int
ds
fidivs
push
xchg
ret
pop
int3
nop
inc
dec
imul
jno
hlt
addr16
jmp
push
in
inc
movsb
xchg
cmc
jbe
roll
xor
mov
es
imulb
push
out
mov
icebp
xchg
xchg
cmp
push
lods
mov
pop
add
addr16
das
xchg
cmp
adc
add
shrb
xchg
inc
std
lcall
push
push
inc
mov
repnz
mov
fnstsw
jle
lds
xchg
je
popa
popf
pop
xlat
fbstp
fbld
adc
mov
nop
jbe
rcrb
out
cmp
fs
out
sti
adc
sub
xchg
mov
pop
fwait
imul
repz
jp
in
aaa
push
push
xchg
or
push
mov
loopne
push
lods
js
scas
enter
dec
test
test
pop
daa
and
shlb
dec
repz
mov
pusha
adc
push
rcrb
movsl
mov
sub
lcall
fdivp
pop
orl
movsl
aad
cmp
loopne
jne
sbb
sbb
popa
repz
jno
xor
pop
fwait
dec
xchg
hlt
dec
gs
add
stos
jb
mov
cld
jl
lret
xchg
es
mov
inc
cmp
mov
rep
jbe
mov
sarl
fisttps
xchg
sub
dec
xchg
inc
ficoms
mov
inc
test
aaa
pop
mov
dec
add
push
jne
mov
xchg
pop
fisubrs
iret
push
retw
or
cmp
lds
mov
xchg
aaa
std
jp
andl
cltd
call
mov
cmp
sbb
inc
cwtl
dec
std
dec
xchg
pop
cld
sub
push
ja
daa
sub
shlb
cwtl
ret
pop
cmp
cld
add
icebp
ds
in
ja
add
out
clc
mov
ret
fucomip
sbb
pop
leave
shrb
cmp
loop
adc
pop
or
and
stos
dec
cmc
sbb
mov
jmp
sub
push
jns
fisubrs
mov
fsubs
mov
mov
mov
movsl
pop
pushf
push
loop
test
mov
sbb
dec
je
sbb
jb
cmc
outsl
stos
jnp
mov
ficomps
and
sahf
xchg
sbb
imul
xchg
call
fldl
test
repnz
pushf
daa
outsl
xchg
jae
adc
sub
xchg
filds
jnp
xlat
and
call
xchg
push
sahf
sub
cmp
test
push
sbb
adc
es
fwait
fwait
mov
cwtl
lret
hlt
stos
bound
clc
sti
pop
pop
fisttpll
jne
aaa
lods
inc
mov
sbb
adc
xchg
xchg
ret
loopne
jmp
in
hlt
movsb
negb
add
mov
icebp
test
push
push
adc
cmp
aaa
sbb
dec
pop
xchg
fdivr
mov
test
push
dec
xchg
gs
imul
movsb
fsubs
cmp
mul
out
sub
xchg
mov
ret
dec
pop
shl
out
xchg
jmp
daa
inc
mov
jo
xlat
sub
movsb
sub
jae
enter
out
jge
adc
out
sbb
pop
pop
and
rorl
dec
add
imul
pop
movsb
mov
insw
xchg
imul
aaa
pop
sub
jb
test
sarb
jg
gs
xorl
adc
and
mov
xchg
arpl
mov
fwait
in
in
jne
das
lret
adc
popa
lds
stos
push
add
out
xchg
push
mov
adc
adc
jnp
mov
repnz
sub
in
loopne
xchg
jne
rorl
mov
stc
lea
mov
prefetch
pop
adc
test
jbe
bound
push
mov
dec
inc
je
aaa
fidivrl
pop
mov
stc
pop
inc
mov
test
sub
shr
inc
dec
std
mov
adcl
rcl
mov
add
pop
std
cwtl
iret
push
mov
jmp
cmp
xchg
sahf
mov
imul
bound
mov
pop
clc
push
popf
cmp
mov
into
mov
dec
mov
mov
add
jo
or
loop
xchg
sub
adc
pop
mov
sub
out
mov
cltd
mov
adc
push
push
mov
push
inc
lods
jg
imul
jge
test
jmp
push
aam
dec
mov
mov
jae
add
ret
add
and
andl
addl
insl
xor
or
xchg
jo
push
and
add
cwtl
in
sbb
je
sub
aam
scas
aam
insb
fldcw
insl
push
cmp
pop
test
iret
sbb
daa
inc
cmp
pusha
icebp
cmpsl
shll
adc
in
add
adc
mov
mov
inc
mov
push
fdivr
xor
jecxz
popf
jg
nop
inc
or
repz
sahf
out
pusha
inc
push
and
idiv
add
loop
sbb
js
call
pusha
xor
cmp
cmc
call
cltd
idiv
mov
adc
les
enter
mov
inc
fidivl
pop
jle
cs
cmp
aad
cmpsl
dec
cmp
movsb
in
push
shll
movsl
push
pop
into
jmp
fiadds
jle
loop
stc
lret
lock
repz
mov
sahf
xchg
cmpb
out
mov
repz
xchg
pop
sbb
or
int3
or
xchg
aas
and
lods
in
push
andl
dec
adc
andb
icebp
and
hlt
sbb
mov
rclb
or
adc
movb
mov
sbb
mov
call
jecxz
cwtl
test
aam
in
js
pop
adc
xchg
sub
out
mov
xchg
xchg
sbbl
fldt
or
adc
xchg
add
adc
xchg
add
mov
mov
in
icebp
dec
dec
cmp
pop
popf
sbb
mov
or
pop
cltd
popl
imul
mov
fdivrl
mov
lea
xlat
jg
jbe
cmpsl
pop
lods
xchg
sub
cwtl
call
sti
pop
push
jns
xor
pop
cmpsb
push
adc
movsl
adc
daa
dec
and
int3
ret
inc
sahf
std
adc
bound
push
pop
mov
push
test
fcom
lahf
lcall
lds
testl
sub
in
lds
out
mov
repz
mov
stos
scas
pusha
enter
push
pop
cmpsl
mov
push
sub
out
xor
sub
imul
pop
and
leave
mov
pop
jge,pn
repz
sub
and
shll
lahf
in
pop
jbe
aam
enter
jmp
jmp
and
test
push
test
mov
call
dec
insb
push
push
fldl2e
clc
pop
adc
xchg
jg
fs
mov
fcoml
fldt
xor
imul
fs
dec
mov
sub
cmpsl
cmp
mov
add
fnstsw
mov
xlat
les
pop
cmpl
xchg
sbb
pop
mov
cli
enter
jno
jb
lock
lods
jg
popf
lods
sub
mov
push
out
pop
popa
scas
les
push
xor
sbb
cmp
jp
aam
rcl
popl
pop
loope
icebp
sahf
sbb
sub
adc
lcall
frstor
sti
into
cmpsl
insl
enter
std
inc
pushf
adc
addl
lds
mov
mov
clc
ret
mov
mov
repnz
xchg
pop
adc
scas
lea
mov
mov
mov
and
push
inc
inc
into
fsubr
adc
pop
cmp
sbb
cmp
popa
inc
fwait
jne
mov
daa
jge
jecxz
icebp
pop
sbb
jg
movsb
sub
add
pop
pop
stos
nop
or
cwtl
icebp
cmpsb
and
and
xlat
fildl
and
pop
int3
dec
sbb
sub
imul
incb
je
dec
xchg
and
xchg
or
jle
aas
xchg
add
cmp
and
jmp
roll
jmp
lret
jecxz
and
push
pop
movsb
push
sbb
jge
and
mov
shll
jecxz
jl
sbb
scas
fcmovnb
sub
loopne
lret
mov
push
mov
jecxz
into
pop
call
lods
loope
repnz
pop
imul
pop
sub
dec
or
into
repz
sub
stos
add
pop
out
mov
mov
push
push
movb
push
pop
jae
bound
scas
xchg
mov
test
mov
ljmp
bound
stos
sbb
cmp
mov
cli
sbb
or
jl
pop
cmp
in
push
xchg
mov
lcall
or
dec
jmp
push
xor
mov
jle
lahf
je
dec
sbb
pusha
imul
arpl
mov
or
jno
jle
add
lock
dec
mov
stos
or
dec
lret
pop
pop
loopne
in
movsl
mov
or
or
fistpll
push
or
les
inc
lods
mov
or
cld
lahf
cmp
pop
mov
mov
mov
movsl
sub
push
jle
mov
jge
in
dec
sub
mov
subl
or
lock
aaa
aaa
xor
mov
xor
outsb
inc
sbb
das
jmp
push
adc
stos
cmp
and
cmp
pushf
std
sbb
call
js
mov
jle
xor
pop
es
fidivl
push
int
outsb
sbb
cmpsl
shlb
pop
xor
in
sbb
xor
leave
cltd
push
cmc
in
and
hlt
ficomps
mov
insl
mov
push
jno
ljmp
cmp
lahf
out
shrb
inc
push
int3
pop
addr16
xchg
dec
mov
jne
jnp
call
add
stc
pop
push
push
rorl
or
push
mov
fsubp
and
clc
das
loop
and
shrb
test
in
jp
cs
mov
fldt
dec
xor
out
jecxz
adc
push
lahf
aam
inc
push
cli
jns
pusha
iret
jecxz
xor
cmp
jb
sub
add
xor
cmp
mov
jge
je
xchg
lock
inc
adc
cmp
push
fildl
fs
xor
or
mov
xchg
lea
sti
imul
xchg
jnp
int3
xor
sub
sahf
lods
sub
popf
push
mov
jbe
dec
add
ret
xchg
mov
cltd
mov
nop
ret
jl
adc
test
xor
insb
leave
mov
jmp
cld
jmp
daa
data16
loop
enter
mov
mov
mov
mov
or
insw
insl
loopne
test
push
insl
enter
fisttpll
cmpsl
lret
test
dec
add
jb
test
sbb
jmp
push
dec
mov
js
and
icebp
push
mov
sbb
xchg
lds
push
sub
pop
in
mov
fimuls
jno
stc
adc
fstpl
mov
cmp
sbb
pop
pop
pop
enter
mov
es
xchg
or
loopne
rcl
rcl
aad
pop
popa
jae
stc
inc
push
loop
test
pop
and
xor
insl
insl
test
imul
push
mov
repnz
and
pop
xor
xchg
cmp
stos
mov
mov
popf
add
loopne
fisttps
arpl
mov
sbb
push
and
jl
xchg
pop
repnz
jb
addr16
push
scas
adc
les
test
inc
stos
in
cmp
pop
out
mov
sub
push
rcrl
loopne
add
pop
add
js
in
push
jmp
cmpsb
lock
pusha
add
pop
xlat
shlb
call
pusha
inc
mov
sub
xlat
clc
push
imul
insl
xchg
push
xchg
popf
shrl
stc
lret
mov
pop
pop
adc
dec
pop
out
arpl
and
call
mov
mov
push
mov
aas
ret
mov
inc
nop
adc
loop
push
cmpsb
jg
cmp
scas
or
or
das
mov
insb
hlt
je
mov
push
or
aas
xor
xchg
adc
in
in
mov
sti
and
test
dec
iret
xchg
pop
ds
cmp
jbe
mov
push
loopne
repz
pushl
test
mov
jl
out
cmp
ds
and
jno
pop
adc
push
jl
xor
and
inc
cmp
mov
imul
fsubl
in
lahf
rorb
outsl
and
jmp
inc
nop
lods
addr16
pop
sub
and
lds
xchg
sahf
add
sub
xchg
jg
je
pop
sti
je
cmp
fstl
out
sahf
cli
icebp
sub
cld
int
xchg
inc
cmp
inc
mov
cmp
push
dec
cmp
jo
iret
or
or
fwait
ss
push
and
shrl
in
mov
jge
inc
lret
mov
jo
and
in
addr16
jno
jns
lret
cmp
icebp
inc
sti
mov
xchg
daa
ljmp
sbb
adc
dec
sub
cmp
inc
arpl
and
mov
into
dec
add
movsb
jl
imul
out
lds
mov
and
arpl
mov
repnz
test
add
mov
xchg
cmp
cld
popf
cmp
dec
jge
pop
btrl
repnz
and
adc
inc
jle
push
scas
inc
push
faddl
fwait
icebp
ds
add
mov
addr16
mov
adc
test
bound
cwtl
dec
sbb
imul
pop
xchg
arpl
in
jne
jnp
outsb
dec
jp
es
test
cs
movsb
mov
stc
push
rcr
inc
add
xchg
inc
sub
iret
test
inc
jle
adc
push
test
cmp
ljmp
jl
lcall
dec
aam
les
xchg
cmp
jg
ljmp
jg
jnp
cmpsl
insb
inc
add
or
mov
call
mov
stos
iret
call
and
cmp
fwait
jmp
ret
push
sahf
jecxz
aaa
fisubs
inc
loope
mov
jmp
adc
loope
popa
mov
lcall
aam
mov
cli
mov
in
aam
mov
imul
add
xchg
xor
std
aaa
fwait
pop
xor
inc
adc
xchg
out
ret
mov
and
dec
fdivrs
cmp
fldcw
ljmp
mov
inc
jg
and
push
icebp
xchg
lcall
aad
orb
icebp
outsl
cmp
outsb
lahf
dec
xor
cs
enter
hlt
movsb
push
lea
jmp
xor
xchg
inc
mov
out
dec
movsb
mov
and
inc
adc
cmp
pushf
jmp
test
scas
push
inc
mov
cmc
fstp
stos
rorl
mov
sbb
arpl
lock
or
je
pop
test
cmpsb
mov
sbb
jecxz
cmc
int
nop
pop
and
xor
popf
in
test
mov
pop
out
lret
pop
popa
rcrl
stc
pop
sbb
sbb
movsb
jmp
or
dec
ret
mov
xchg
mov
rorl
fstpl
rorl
mov
std
jae
out
sub
or
mov
ja
int
xchg
movsl
addr16
xchg
popa
add
mov
hlt
dec
or
xchg
test
cmp
sahf
mov
sahf
imul
xlat
mov
stc
jg
sub
xchg
mov
jne
mov
clc
scas
jno
in
cmp
stc
out
out
popf
bnd
inc
adc
repnz
fcomps
fidivs
mov
das
out
lods
mov
in
cmp
adc
and
mov
sahf
dec
mov
push
lret
dec
in
dec
jbe
mov
mov
adc
cld
or
loop
scas
add
mov
ds
jge
out
ljmp
scas
cmpsb
lret
lock
xchg
cmp
or
iret
pop
jmp
jecxz
das
imul
loope
in
lcall
sub
into
and
mov
inc
cmp
and
xchg
inc
jo
mov
repz
loopne
mov
sub
dec
xchg
shlb
cli
sub
inc
shl
ja
pop
add
cmpsl
loopne
insl
sub
push
pop
lock
insl
cmp
jno
add
pop
push
add
mov
imul
in
cmc
in
into
aam
dec
fdivrs
pusha
adc
xchg
gs
clc
wrmsr
cmp
mov
pop
insb
pop
jmp
mov
into
mov
mov
es
xchg
in
cli
lret
xchg
sub
into
addr16
fwait
cmp
nop
xchg
neg
jmp
addr16
les
in
and
fwait
mov
icebp
dec
xchg
fisubl
mov
out
insl
cmpsb
leave
inc
call
out
sahf
in
popa
les
jecxz
jns
daa
adc
dec
push
inc
jge
push
xchg
or
cwtl
jb
movsb
inc
das
sti
insl
jmpw
aas
test
popf
mov
test
bound
inc
mov
inc
jmp
sub
fisubrs
xlat
mov
jl
push
adc
fcoms
mov
xchg
mov
dec
pop
jne
jecxz
inc
mov
inc
imul
gs
push
inc
inc
sub
fwait
jge
push
js
mov
inc
call
dec
pop
cmp
fdivrs
vpavgw
push
xor
dec
ret
jg
rcr
add
mov
stc
scas
add
inc
out
add
addr16
xchg
mov
jb
add
push
hlt
sbb
je
pop
jne
and
cs
xchg
xchg
sbb
jge
fldt
xchg
das
add
into
loop
shll
sub
sbb
mov
xchg
inc
mov
push
mov
push
into
rolb
xchg
imul
lock
nop
mov
xchg
pusha
cmpsl
dec
adc
or
or
ds
inc
mov
push
out
pop
dec
pop
xchg
cmpsb
cltd
cmp
ds
adc
or
xchg
inc
stos
in
test
mov
mov
pushf
bound
lcall
xor
ret
xor
cmp
cmp
sbb
push
jmp
lods
cmpsb
sub
aad
sbb
and
sub
les
mov
mov
jl
clc
jge
in
sbb
mov
mov
mov
mov
les
and
and
fdivrl
andb
mov
xchg
inc
into
fsubrl
popf
xchg
mov
shll
ja
dec
jge
decl
pop
jmp
loope
rol
aad
xchg
push
cmp
mov
push
xchg
inc
jb
cmp
xchg
jle
lods
pusha
sbbl
cli
jge
and
xor
decb
call
gs
fwait
sub
lods
dec
jb
sub
pop
fisttpll
xchg
stos
adc
adc
adc
mov
scas
mov
dec
xor
sub
inc
inc
fidivl
les
jo
push
add
push
pop
sbb
arpl
add
fwait
bound
out
int3
cli
xor
iret
jl
shlb
clc
sbb
jbe
cli
lods
and
fsubs
mov
cli
dec
adc
xchg
sbb
pop
push
pop
pop
aas
xor
mov
or
fadd
shll
out
mov
dec
mov
jle
sub
jmp
fildl
sub
add
mov
daa
xor
into
mov
push
pop
cmp
xor
jmp
insl
xchg
adc
dec
andps
sbb
stos
xor
frstor
adc
outsb
pop
mov
fcmovnb
mov
movsb
jl
jo
jbe
mov
inc
cld
test
jge
jo
int3
shlb
mov
lds
and
pop
hlt
movsl
cmp
je
xchg
call
inc
push
std
in
dec
clc
add
jne
leave
push
xchg
movsb
pushf
mov
cli
xorl
int3
ret
push
dec
mov
dec
push
push
jp
lock
lods
mov
and
stos
test
sarl
insb
hlt
lret
push
in
faddl
fbstp
lods
push
not
jae
push
imul
jle
cmp
add
jp
clc
push
lds
nop
imul
jg
cmp
pushf
push
push
jle
imul
clc
pop
out
push
push
mov
lahf
shl
inc
xor
pop
pusha
pop
add
mov
jle
stos
jecxz
cmp
sbb
and
fcmove
jp
insl
mov
aad
mov
out
adc
inc
loop
sub
pop
es
iret
or
jmp
dec
stos
mov
test
mov
fcomps
lret
adc
fldl2t
mov
addb
icebp
fxch
lods
or
std
ret
outsb
lods
iret
xchg
dec
icebp
lahf
out
mov
cmpb
pop
fs
sbb
mov
lret
enter
and
or
or
push
jns
in
lcall
js
outsb
jns
mov
imulb
inc
cmpsb
push
sbb
shlb
sub
lahf
addr16
dec
push
cli
xor
pushf
sub
bound
jp
sub
push
outsb
pop
mov
sbb
pop
add
lcall
pop
int
adc
jns
popa
mov
sti
cmp
mov
jno
imul
stos
push
pop
add
inc
shrb
stos
or
or
pop
popf
cwtl
push
pop
adc
pop
out
dec
and
mov
push
ljmp
pop
sub
add
in
mov
stc
ret
adc
ret
daa
xor
jns
pop
lret
jns
dec
add
mov
pop
sub
sahf
repz
and
push
cltd
mov
in
out
popl
xlat
dec
movsl
and
mov
repz
push
in
gs
in
mull
mov
stos
add
in
pop
gs
pushf
xchg
adc
test
divl
ror
mov
movsb
in
xor
mov
jmp
push
gs
inc
insb
and
xchg
jge
fisubl
xchg
mov
jo
repz
insl
insb
mov
xor
and
fisubrl
flds
jo
jge
mov
data16
das
xor
pop
sub
pop
insl
ja
mov
jle
and
in
mov
sub
jg
lods
mov
sbb
sub
stos
jl
aam
dec
dec
lret
jb
in
lahf
aaa
push
inc
sbbl
sti
aas
mov
or
cwtl
pop
pushf
push
movsb
xchg
sahf
fimull
je
mov
movsb
dec
inc
icebp
ja
loope
jbe
mov
add
xor
subl
pop
jno
popf
punpcklbw
addl
pop
adc
sbb
fildl
add
sub
and
stos
inc
or
dec
push
inc
imul
movsl
hlt
js
adc
or
jl
jmp
push
push
push
and
cli
mov
popa
pop
jmp
imul
sbb
jb
cmp
jns
cmc
rcrl
roll
push
mov
and
data16
shl
mov
into
sti
call
xor
sub
push
cmpsb
popf
ffreep
cmp
mov
insl
sbb
dec
je
ds
push
ljmp
sbb
das
ja
dec
call
dec
aaa
andb
push
addr16
stos
mov
loop
push
dec
gs
std
push
decl
and
pop
mov
movsl
bound
mov
aas
cli
dec
ret
insl
inc
mov
popa
in
ljmp
or
mov
mov
enter
xchg
mov
inc
xchg
sbbl
mov
pshufw
xchg
iret
icebp
cmp
ss
and
or
sahf
jecxz
out
push
vpsadbw
adc
cwtl
addr16
clc
shr
loop
cmpsb
inc
in
fdivrp
pop
push
adc
ljmp
xor
xor
enter
mov
push
push
or
pusha
ds
gs
inc
bnd
es
std
outsl
push
mov
loop
push
jne
mov
pop
dec
and
dec
cmc
js
push
and
pusha
mov
push
inc
cmpsb
or
inc
dec
xchg
dec
popf
cmp
int3
out
xchg
add
vmwrite
sub
mov
adc
subb
mov
jno
pop
repnz
out
mov
and
pop
pushf
add
adc
mov
mov
sbb
jmp
arpl
mov
sub
fsubrs
xor
dec
hlt
xchg
mov
ja
jb
cmp
ds
hlt
fwait
stos
repnz
push
mov
mov
or
xor
sbb
jecxz
adc
or
bound
bound
push
out
and
sub
push
xor
sub
jae,pt
mov
fadd
out
or
pusha
sbbl
lret
or
adc
hlt
mov
cld
movsb
or
or
push
sub
dec
jns
mov
shlb
mov
js
shll
nop
in
dec
xchg
aad
aaa
jne
popa
pop
inc
enter
in
jmp
ja
loopne
sarb
jns
push
pop
mov
in
dec
mov
inc
adc
in
sbb
aas
pop
imul
mov
outsb
pop
and
cs
sub
sbb
mov
xor
test
rcrl
pop
dec
sti
lret
loop
jb
inc
cs
mov
call
sub
jg
stos
divl
lret
aam
jl
mov
pop
xlat
arpl
xchg
enter
xor
mov
jnp
xor
pusha
popa
push
mov
stc
outsl
rcl
mulb
sidtl
pop
rorl
xchg
xorb
xchg
sub
mov
xchg
xlat
mov
sbb
ljmp
ror
xchg
and
popa
test
movsb
ds
pop
dec
mov
ret
add
and
sbb
push
push
jo
sub
fcoml
sub
lods
push
cli
stos
movb
lret
fldt
jmp
xor
cmp
cltd
adc
pop
lret
loop
out
mov
out
mov
pop
mul
push
outsb
popf
sbb
imul
sbb
lea
test
repnz
loop
inc
pop
jbe
jb
jp
jns
fwait
and
adc
pop
adc
je
adc
daa
stc
dec
add
mov
jns
js
aam
cld
sbbl
pop
lret
mov
jl
push
bound
push
negl
mov
sbbl
aas
pop
repnz
lea
lahf
pop
jne
leave
rcrl
cli
inc
dec
pop
fmul
lahf
jnp
mov
ja
push
cmp
hlt
sti
je
xor
jnp
bound
ret
lcall
adc
mov
push
test
shrw
xchg
mov
movsl
push
jnp
cmp
loop
mov
fucomi
lret
and
cmpsb
fdivrs
adc
or
frstor
insb
jmp
mov
pop
out
outsl
gs
popf
cmp
movhps
fidivrs
xor
mov
stos
icebp
repnz
pop
cmc
subl
enter
aaa
idiv
fwait
lea
aas
inc
int3
je
shll
adc
xor
out
dec
jmp
adc
int
decb
pop
or
movsl
ret
inc
cmp
loopne
cld
mov
jb
sub
sbbb
xor
dec
jmp
dec
in
test
outsl
jb
xchg
push
popa
jne
gs
adc
sarl
or
jb
and
in
sub
dec
cwtl
jno
xor
push
andb
mov
or
mov
negb
fbstp
addr16
mov
and
pop
mov
pop
xor
idiv
add
scas
or
out
ljmp
pop
adc
shl
adc
movsl
push
jno
outsb
xorl
dec
es
test
rclb
mov
sbb
mov
sbb
lods
insb
sub
ret
enter
and
ss
pop
xor
sub
add
jp
pop
or
xor
push
jl
sarb
xor
loop
std
jp
jnp
sub
leave
out
cmp
mov
popf
test
jo
stos
mov
and
imul
jbe
xchg
lcall
or
inc
adc
mov
jnp
inc
cld
adc
adc
mov
fidivrs
test
dec
adc
in
mov
push
ljmp
push
mov
mov
jmp
mov
iret
out
ja
repz
push
jns
jnp
cli
add
push
pusha
mov
movsb
push
mov
ss
stos
sub
std
xchg
pop
mov
loopne
mov
shl
mov
lahf
js
out
test
faddp
sbb
bound
popf
cmp
mov
cli
push
pushf
xor
adc
in
testb
cmpb
subb
lds
dec
mov
loop
mov
ljmp
lds
rclb
mov
in
cwtl
fstps
orb
sub
dec
test
jns
lret
aaa
sub
sbb
xchg
xor
push
lret
lods
add
pop
fcompl
leave
inc
jg
jmp
mov
jns
mull
xchg
mov
sbb
pop
sub
push
cmp
mov
push
cwtl
nop
pop
dec
sub
out
std
jmp
mov
daa
pusha
addl
inc
cs
divb
mov
mov
movsb
cmp
rolb
rclb
sbb
inc
mov
xchg
addr16
xchg
jno
pop
lea
in
orl
cmp
aaa
xchg
jnp
mov
push
call
dec
xor
daa
adc
jle
lcall
push
sahf
les
shlb
and
jb
sahf
movsl
pop
or
xchg
int
push
adcb
sub
ja
xchg
fstl
and
push
mov
mov
ficompl
pop
push
outsl
iret
mov
repz
lea
andb
cld
dec
jle
out
cmc
sbb
mov
clc
inc
mov
mov
xor
scas
cmpb
pop
loopne
stos
xchg
xchg
out
pop
mov
in
rorb
add
mov
xchg
add
push
mov
or
call
scas
fistps
inc
out
pop
mov
in
pop
cmc
xor
mov
jno
cmpsl
jge
subb
push
mov
fcmove
mov
push
dec
dec
mov
test
fdivl
pop
divl
lods
leave
aam
or
test
fbstp
pop
xchg
and
adc
js
fists
pop
cli
scas
fs
lcall
and
mov
bound
lahf
lock
loop
sub
inc
pop
shr
pop
push
inc
cmpsl
cmp
xlat
xor
mov
movsb
mov
pop
adc
stc
movb
and
lods
repz
xchg
lret
sub
cwtl
in
and
in
pop
jl
into
out
nop
cli
repnz
xchg
add
push
mov
or
cli
xchg
or
mov
or
adc
inc
fildll
xor
push
out
push
and
test
lea
out
lret
inc
out
sbb
mov
clc
mov
bnd
repnz
in
adc
xchg
add
inc
sub
mov
xchg
sub
call
add
test
aad
inc
dec
js
push
sub
sub
or
lock
lret
mov
ljmp
xchg
fmul
icebp
ficoml
mov
cs
pop
jp
mov
sub
aaa
pusha
push
jl
jp
inc
inc
mov
add
movl
inc
mov
mov
add
outsb
push
cmp
popa
jg
xchg
insb
seta
pop
imul
jecxz
inc
movsl
insb
sub
pushf
add
mov
addb
pop
rcrb
inc
cmp
js
repnz
mov
sub
movl
mov
add
adc
dec
mov
shl
adc
xor
cmp
stos
or
xor
xchg
orl
repz
xchg
jno
sbb
bound
in
fistpl
mov
inc
in
or
mov
es
cli
adc
and
and
pop
ret
add
sbb
nop
pop
mov
int
setge
xchg
sbb
sbbl
and
stc
sbb
push
movsb
test
mov
add
inc
push
add
sarb
test
sahf
outsb
rol
bound
leave
add
ljmp
dec
rorl
daa
insl
cmp
pushf
add
aam
das
push
dec
pcmpgtb
sahf
stos
lock
and
sub
movsb
fadds
lahf
test
mov
daa
iret
cs
sub
fcomps
push
jecxz
repnz
sahf
inc
or
nop
sbb
adc
aam
roll
xchg
fcompl
lock
loop
in
cmp
xchg
bound
mov
fistl
stc
rclb
shll
dec
jno
mov
cmc
dec
gs
fsts
fidivs
dec
cmp
mov
loopne
jmp
in
ret
cli
pop
repnz
sub
xchg
pop
das
test
sub
or
js
mov
fwait
jmp
cmpsb
out
push
xor
orl
pop
jmp
rcll
scas
cwtl
xlat
adc
call
aad
or
aas
mov
or
js
jbe
insb
inc
addr16
jmp
popf
jno
mov
lret
pop
xor
cmp
jb
stos
jns
cmp
adc
imul
outsb
add
xchg
insb
push
clc
add
imul
xor
mov
add
rolb
pop
scas
out
out
cltd
cs
xchg
leave
xchg
dec
push
mull
lock
or
sbb
push
push
lea
push
dec
lret
sbb
test
pop
adc
rorb
pop
icebp
dec
push
xor
and
inc
jmp
lret
enter
ljmp
ret
xchg
test
add
fsubs
push
mov
sub
pusha
out
pop
mov
xchg
std
loopne
sbb
push
sahf
xchg
fsts
fsubr
push
mov
pop
outsb
lcall
and
popa
sbb
lods
sahf
cmpsb
sbb
and
sub
mov
xor
mov
add
daa
inc
pop
dec
mov
test
inc
stc
das
call
sbb
mov
pop
in
pop
lods
push
push
add
jnp
prefetchnta
mov
jmp
cmp
shlb
xchg
xor
test
jl
xchg
ds
xor
push
mov
add
in
das
sbb
sbb
xor
add
dec
loope
and
out
xchg
pop
mov
arpl
std
lahf
lods
jbe
mov
icebp
in
rcrb
xchg
clc
jp
lcall
insl
pop
mov
xchg
stc
cltd
ss
push
inc
addl
xchg
movsl
insb
jmp
mov
mov
lods
jp
and
dec
inc
mov
cld
andb
out
xchg
ds
adc
jbe
inc
or
xor
lods
out
fldcw
jb
xchg
mov
adc
and
mov
sub
cwtl
and
scas
dec
negb
mov
jnp
add
divl
popf
and
mov
mov
or
inc
ljmp
sub
mov
scas
movsl
jae
clc
pop
xlat
xchg
aam
cmpsb
aaa
out
sub
lods
add
dec
ror
dec
jno
mov
cwtl
adc
xor
daa
mov
xchg
mov
cmc
mov
xchg
pushf
lods
xchg
inc
sbb
mov
push
cmp
in
cmp
shl
cmp
add
inc
xor
jae
xchg
fstps
push
inc
fwait
push
jmp
mov
dec
lret
jae
je
push
sub
lret
stos
ss
sub
and
xchg
fidivs
movsl
cmpsl
jl
mov
addr16
les
mov
xorl
inc
outsb
pop
ds
inc
subb
dec
mov
stos
push
push
gs
fbstp
sub
inc
ljmp
loop
les
lods
ret
gs
icebp
push
test
lahf
mov
add
loopne
cmp
inc
inc
imul
popf
pushf
xchg
test
cltd
xchg
icebp
daa
aaa
shlb
outsb
jle
push
add
rclb
pop
add
orb
cwtl
add
loopne
stc
test
push
rorl
pop
aad
xor
fadds
test
je
push
hlt
push
push
mov
and
mulb
lods
fstps
xchg
jne
pop
icebp
ljmp
sbb
add
pop
add
inc
leave
mov
popf
rclb
incb
test
xorb
lcall
mov
xor
jns
mov
iretw
add
movsb
in
inc
sbb
ds
pop
lds
mov
ds
iret
or
pop
inc
mov
push
in
xor
push
push
sarl
movsl
call
sub
imul
testb
lcall
fwait
cltd
movsl
sbb
repnz
mov
pop
pop
adcb
jne
push
cmp
add
jmp
lret
stc
popf
xlat
xor
in
movsl
stos
mov
pop
xor
mov
adc
in
push
xor
fdivp
dec
into
sti
ja
dec
push
xchg
les
push
lea
les
jnp
les
bound
pop
mov
shrb
pmaxub
dec
aad
jno
mov
mov
popf
cld
mov
jns
data16
int
cmpsl
cli
imul
ss
inc
das
jmp
andb
stos
push
and
jb
arpl
mov
push
pop
push
pop
popf
jno
loop
jo
ret
sbb
and
faddl
test
adc
or
jbe
mov
int3
and
mov
scas
sub
jge
dec
push
lret
inc
sbb
pop
ficoml
push
cmp
into
dec
cld
mov
dec
mov
mov
hlt
mov
xlat
aaa
add
mov
xor
adc
xchg
push
xchg
mov
movsl
mov
dec
jmp
add
imul
testb
jno
push
js
and
pop
lret
in
pop
dec
lds
dec
jne
packsswb
ret
daa
cltd
mov
hlt
push
pop
jmp
bnd
xchg
mov
or
inc
cli
mov
mov
mov
push
or
dec
gs
iret
mov
arpl
push
and
inc
ljmp
xor
xchg
pop
mov
sbb
push
enter
mov
mov
xchg
xchg
out
loop
pop
jl
sahf
sub
mov
bnd
xor
xchg
inc
inc
jg
sub
daa
and
enter
xchg
loopne
xor
mov
lods
sti
aas
cmpsb
mov
inc
push
xor
cmp
push
hlt
jge
hlt
les
xor
das
xchg
lea
jns
mov
aam
fidivs
ret
inc
insb
fimuls
fwait
dec
mov
xchg
mov
dec
and
jg
pop
pop
xchg
test
sub
xor
in
rorl
mov
inc
das
sbb
mov
push
std
ljmp
movsb
xor
fisubl
repz
and
shll
in
pop
xchg
sti
je
icebp
aam
lret
pop
mov
outsb
lock
lahf
mov
popf
push
in
pusha
dec
inc
adc
loop
mov
cmc
mov
test
pop
jmp
insl
jae
jo
or
mov
inc
repz
jae
sbb
insb
lret
icebp
pop
cmp
xlat
xchg
jbe
loopne
clts
jl
or
rorl
dec
inc
pop
sbb
sub
sub
fisubrl
jp
xchg
push
mov
mov
mov
xchg
pop
lods
ret
xorl
loop
popf
das
negl
rcr
movq
mov
mov
mov
cmp
in
cmp
and
test
in
pop
push
clc
inc
fwait
outsl
cmp
xchg
in
and
into
xor
sahf
mov
lahf
std
stos
call
xor
sbb
fdivrs
fwait
inc
xchg
and
push
and
sbb
dec
stc
cltd
sub
sbb
inc
inc
bound
mov
lods
and
sbb
pop
dec
inc
mul
ffree
bound
cmovbe
cld
sbb
inc
repnz
arpl
out
aas
enter
test
inc
sahf
adc
or
add
std
jno
stos
xor
xchg
push
mov
inc
add
or
ret
jae
sti
stos
sub
aas
nop
imul
fiaddl
popf
cmp
test
dec
or
dec
aas
xchg
or
jge
sarl
pop
adc
or
leave
jp
cmp
add
push
fstl
cltd
xchg
mov
and
mov
adc
adcb
jmp
sbb
sbb
sbb
jl
cwtl
dec
xchg
dec
fmull
aas
inc
push
mov
lret
sbb
fcoms
jae
lea
sub
inc
and
rcll
lock
push
inc
int
outsw
push
or
add
adc
mov
sbb
xor
pusha
push
ljmp
add
movsl
jbe
inc
les
shlb
adc
in
aad
cli
stc
sbb
pop
lret
jbe
sbb
out
out
mov
repnz
test
inc
push
stos
inc
dec
push
ret
out
mov
adc
sub
pop
jle
icebp
xorb
xlat
ss
cltd
lret
inc
add
cmp
ficoms
inc
rcll
cmp
sahf
aas
lods
fiadds
add
jmp
dec
outsb
stos
pusha
xchg
dec
mov
das
or
mov
js
test
xor
jno
outsb
add
push
lcall
pop
orb
ljmp
ret
out
add
cltd
cmp
sti
ja
jb
arpl
in
cs
push
push
cltd
or
lds
xor
clc
filds
or
and
stc
fwait
mov
shl
data16
jl
or
addr16
and
imul
mov
mov
pop
sar
fisubs
push
push
mov
into
sbbb
ret
rcrb
inc
add
incl
push
in
insl
xor
mov
imul
addl
test
mov
cmpsl
mov
mov
inc
hlt
inc
cmpsb
lret
mov
imul
dec
filds
test
push
and
sbb
cmc
mov
lods
adc
jno
fld
in
pop
cld
push
call
cwtl
mov
push
mov
mov
sub
or
sbb
enter
dec
cmpsl
fidivs
test
out
adc
push
lret
repz
in
sti
mov
ret
jg
jle
mov
mov
cwtl
movsb
ja
and
mov
add
loope
ja
jmp
push
and
xchg
out
cli
dec
jne
ljmp
std
cmp
mov
pusha
int3
sub
dec
and
js
cmp
vpandn
inc
jle
sbb
lret
dec
mov
dec
pop
sub
mov
cmpsb
mov
icebp
sbb
inc
dec
push
ret
rorl
push
lahf
pusha
out
xchg
sbb
out
mov
ret
adc
inc
lods
dec
fsubrs
and
cmp
lock
sbb
roll
fsubs
aad
cmpsl
jbe
xchg
stos
pop
stos
popa
jmp
push
cwtl
sub
aam
fisttpl
add
mov
mov
popa
jp
xchg
repz
jmp
push
cmp
xchg
jl
icebp
push
jo
sub
mov
aas
xchg
sbb
divb
mov
out
into
jae
sub
and
outsb
and
cmp
push
adc
fs
mov
adc
inc
stos
xlat
icebp
out
mov
aam
sub
mov
mov
jl
mov
leave
in
jecxz
into
insb
lock
fidivs
sub
add
rorb
add
ret
add
daa
clc
mov
and
dec
pushf
cmpsl
pop
push
push
dec
mov
cmp
pusha
jp
dec
repnz
mov
pop
xchg
test
push
mov
inc
mov
aas
in
cmp
inc
lret
mov
inc
jg
mov
test
cmp
jno
xchg
aas
les
jb
test
and
mov
movsb
add
cmp
hlt
clc
or
out
fs
stos
inc
iret
inc
mov
fs
dec
jae
add
jae
cmp
cmpb
sbb
push
loopne
aaa
jl
and
and
shrb
mov
out
js
cmp
fidivl
xor
sarl
push
pop
or
cld
dec
test
mov
cmc
jae
lock
mov
bound
insl
push
ja
into
stos
mov
or
pop
xchg
pop
ljmp
push
mov
lock
sbb
aaa
sbb
gs
pop
xchg
cmp
jp
jo
lock
fs
cmpb
xchg
dec
pop
loope
push
mov
std
mov
mov
test
or
fnstenv
enter
pop
pop
mov
hlt
jne
fldcw
arpl
insl
inc
xor
mov
rcll
push
or
icebp
cmp
sub
mov
push
out
into
cmc
sub
push
adc
in
xor
das
stos
and
dec
mov
cmp
or
push
mov
mov
sub
xchg
es
fadd
cmpb
cmc
cmp
jns
xchg
arpl
clc
xor
in
aas
jmp
dec
add
push
shlb
int
cmp
mov
frstor
stos
sbb
mov
popa
outsl
cmc
movsb
popa
popa
jns
mov
cmpl
in
out
insl
mov
pop
inc
out
mov
pushl
insb
in
jbe
dec
shll
stos
lcall
je
std
loope
jb
mov
faddp
aas
iret
xor
jns
movsb
mov
xchg
loopne
call
pop
pop
mov
pop
into
mov
push
push
fsubr
hlt
aaa
mov
jmp
mov
jne
jnp
jns
dec
xchg
sti
jle
dec
cmc
pop
add
lods
aas
mov
fdivrl
loope
cwtl
xor
and
xor
add
push
add
lods
rcr
or
lahf
mov
test
stc
gs
sahf
gs
push
cmc
bound
popf
push
push
mov
dec
push
xor
pusha
dec
xlat
mov
iret
mov
push
test
xchg
or
pop
adc
xchg
gs
loopne
mov
sahf
andps
cli
lock
xchg
sub
xchg
es
test
xchg
cmp
adc
mov
push
adc
xor
fidivl
add
and
or
out
jge
mov
pop
mov
popf
lods
push
ret
jbe
repz
mov
das
lea
shlb
lahf
pop
fwait
mov
mov
pop
mov
andl
mov
std
stc
and
movsl
adc
pusha
leave
or
xchg
out
xor
lods
movsl
sarb
and
adc
mov
out
lea
arpl
enter
arpl
cwtl
bnd
pop
out
les
dec
aas
jae
fwait
mov
push
xor
mov
mov
cmc
pusha
mov
xchg
adc
mov
pop
addl
fimull
movsl
and
push
aam
iret
xchg
ret
push
cwtl
and
sti
into
push
sub
mov
mov
or
in
fsubr
mov
mov
push
jns
cwtl
es
das
mov
inc
pop
jns
imul
pop
pop
sarb
clc
mov
mov
addr16
insl
aas
mov
movsl
stos
cmpsl
mov
jae
xchg
xor
and
loope
jg
or
ds
cmpb
cmp
pop
push
xlat
pop
in
add
dec
gs
cwtl
es
inc
dec
xchg
mov
inc
fimull
jle
testb
mov
push
sahf
cmp
xor
lret
stc
outsb
pop
fwait
mov
or
fdivrp
jo
pop
repz
xor
shrl
mov
pop
aad
inc
repnz
xor
add
xchg
ja
je
add
std
cli
dec
into
cmp
adc
out
mov
sahf
adc
dec
and
inc
pop
push
push
ljmp
cmp
sub
testl
out
test
dec
ret
pop
fimuls
lahf
cltd
in
fistps
adc
sti
insb
pop
inc
fldt
out
xor
shlb
shl
aas
cmp
inc
shlb
mov
jle
xor
add
inc
out
insl
pop
sbb
insb
and
mov
addr16
dec
inc
das
jno
add
lahf
sahf
xlat
in
movsb
stos
lock
pop
or
mov
xlat
out
adc
cmp
test
sbb
dec
stc
add
pop
or
das
dec
cld
mov
pop
in
jmp
push
std
sub
mov
ret
lahf
xchg
scas
push
inc
out
jne
sub
push
stos
insl
frstor
cmp
test
or
push
dec
sub
icebp
adcl
cmp
sub
mov
aas
push
pop
fdivrp
mov
fstl
or
add
pop
ret
jge
cli
shrl
and
unpcklps
sar
scas
cs
jno
clc
pop
pop
inc
fmul
pop
ret
xchg
test
cmpsb
test
or
push
mov
and
xchg
cmp
xor
test
stc
cmpb
es
repz
and
scas
sbb
add
aad
ret
adc
sahf
push
movsb
mov
daa
insl
mov
dec
or
sbb
cmpb
mov
call
pop
jecxz
hlt
neg
jno
add
fbstp
or
and
push
pop
cmc
repz
cmc
jno
sbb
jmp
test
sbb
mov
sbb
jns
aad
shlb
incl
inc
xor
test
push
pusha
and
int3
add
inc
adc
sub
ss
fstpl
push
sbb
sbb
jp
repz
jmp
jg
movsl
cmp
push
pusha
mov
jns
mov
mov
imul
sbb
push
pop
fsubrs
imulb
mov
cmp
pushf
hlt
pop
jg
xchg
dec
push
xchg
ds
mov
js
cmp
icebp
dec
dec
jmp
and
aas
jne
dec
mov
je
and
popl
jg
xchg
rol
and
negb
cmp
pushf
mov
mov
jg
cltd
iret
iret
mov
lcall
and
fdivl
xchg
das
rcrb
inc
ljmp
cltd
xchg
pushf
test
or
pop
sub
cld
add
filds
stos
test
sarb
mov
pop
add
dec
fistpl
xlat
pop
enter
xor
pop
adc
lret
pop
dec
sbb
push
xor
push
cmp
jbe
clc
dec
xchg
xchg
adc
sub
fadds
pop
pushf
dec
loop
xchg
aam
jmp
lods
mov
addr16
movsb
mov
sbb
outsb
and
xchg
fnsave
sbb
mov
test
mov
jecxz
mov
fwait
movsl
lret
test
xor
jo
arpl
aas
sub
xchg
mov
mov
adc
xorb
push
rcrb
dec
dec
cmpsl
pop
fimuls
mov
outsb
or
popa
jmp
inc
dec
mov
sbb
xchg
jp
arpl
jnp
xchg
movsl
decl
mov
cmp
push
push
xchg
sub
jb
les
clc
dec
lods
lret
push
xor
popf
stos
in
dec
sub
add
cmp
lret
popf
call
loopne
je
sbb
inc
loop
fwait
cs
xor
pop
sbb
xor
pop
aad
or
inc
add
lods
mov
js
cli
and
lret
push
adc
or
sub
push
jmp
xchg
and
cli
mov
and
ret
sbb
jb
movsl
call
nop
jns
push
inc
movsl
jecxz
popa
and
jo
mov
fstpt
push
push
pop
inc
test
dec
lahf
add
inc
xchg
imul
pop
fmuls
mov
xchg
enter
stc
cwtl
ret
pushf
push
push
in
es
cmpsl
push
adc
in
das
sub
jecxz
mov
xchg
jo
outsl
push
pop
dec
cmp
mov
loopne
stc
addb
daa
in
sbb
inc
daa
dec
je
inc
sub
sub
cmp
adc
sahf
std
and
pusha
lock
adcb
jecxz
xor
out
fstpt
movl
sub
loope
pushf
andb
xchg
sbb
xor
add
sarl
jge
sbb
cmp
push
shlb
icebp
mov
pop
or
gs
adc
stos
hlt
sub
stos
pushf
dec
add
test
xchg
sub
push
mov
jns
in
jnp
cld
orl
and
stc
outsb
xchg
scas
inc
fwait
shll
and
jne
loop
nop
outsl
test
dec
pop
sbb
or
ror
fistpll
das
lds
mov
and
pop
inc
pop
push
mov
fwait
push
inc
jae
lea
add
sbb
push
mov
sbb
or
test
pop
sarb
xchg
clc
scas
shll
mov
fdivrl
pop
or
push
decl
scas
sub
jle
fs
fldl
scas
mov
inc
cmp
cltd
out
scas
sub
in
cmpsl
pusha
aam
icebp
clc
fs
fisttpl
xor
add
iret
mov
lea
aam
mov
sahf
and
test
lds
enter
inc
fdivl
outsl
push
imul
add
mov
fwait
adc
les
inc
rep
mov
cmp
sti
pop
cmp
and
adc
fcomps
cmp
and
testb
mov
neg
dec
pop
and
notb
inc
jecxz
cltd
push
clc
or
inc
mov
jecxz
rcrb
bound
iret
cmp
fs
or
cmp
push
add
xchg
gs
push
jnp
imul
inc
cld
je
std
mov
ja
add
popf
jo
lret
loop
xchg
mov
movsb
mov
and
adc
adc
push
push
xchg
xor
push
xchg
xor
mov
and
scas
or
lcall
icebp
fistpll
icebp
insl
imul
add
sbb
scas
insb
mov
adc
stc
adc
out
loopne
leave
add
lods
pop
aas
ss
fnstcw
xor
sub
stos
in
fisubl
dec
cmp
cs
xchg
inc
fidivrs
fiadds
insl
adc
test
mov
jge
pop
fstps
test
push
fsts
mov
push
inc
cs
add
outsl
sbb
pushf
adc
mov
pop
stc
and
icebp
jg
xchg
jp
add
lock
jp
xlat
mov
cld
cmp
andb
cmp
push
push
push
test
cmp
push
xor
jl
aad
dec
mov
push
js
lods
xlat
rclb
inc
xor
mov
pop
adc
outsl
outsb
mov
and
leave
mov
leave
daa
jecxz
xchg
pop
pushf
aam
mov
xor
inc
int3
test
xchg
ljmp
jbe
push
xchg
xor
adc
jp
rcll
fwait
pop
jb
in
outsb
add
in
push
cmp
sub
jecxz
dec
insl
sub
into
jnp
cli
ret
adc
js
in
out
fcmove
mov
pop
js
mov
insl
sbb
fidivrs
sbb
pop
les
cmp
outsl
mov
repz
imul
add
inc
ja
dec
scas
add
test
daa
cld
in
insl
mov
ficoml
cmp
icebp
sub
jecxz
es
std
push
aas
xlat
mov
aam
xlat
js
sbb
std
outsl
mov
and
idivl
addl
xchg
and
lods
hlt
cmp
dec
dec
addr16
dec
inc
pop
jo
or
inc
sbb
gs
mov
aaa
ja
fildl
adc
sub
lret
adc
inc
sbb
icebp
jmp
cmpsb
push
jbe
mov
and
out
add
daa
pushf
subl
jne
inc
sub
dec
mov
pop
enter
test
pop
leave
or
or
and
push
je
jns
mov
lret
std
xlat
jmp
xchg
ror
mov
and
popf
xor
xchg
jnp
test
jp
faddl
cwtl
pushf
notb
jge
mov
ret
arpl
push
jp
pop
lods
cmp
ljmp
or
movsb
dec
xor
sbb
lock
sbb
jbe
aas
lods
cmpsl
int
pop
mov
std
jae
pop
sub
fsubl
and
push
pop
inc
into
leave
cmp
pop
pop
pusha
inc
dec
mov
dec
push
xchg
loope
cli
ds
cmpsl
adc
mov
aas
pop
data16
pushf
sub
jmp
push
adc
in
mov
fcmove
mov
test
inc
ds
repz
push
push
mov
mov
jecxz
inc
or
cs
jmp
xchg
lods
push
mov
add
mov
xor
cmp
out
cmp
daa
lea
adc
jno
test
inc
rorl
fucomi
add
adc
jecxz
fwait
in
xor
in
ja
ret
mov
add
test
mov
pop
mov
mov
push
jl
pop
movsb
pushf
je
jmp
push
adc
out
out
jnp
int3
leave
shlb
lods
daa
inc
sub
cmp
jl
jb
mov
mov
xchg
rcrb
movsl
sbb
popf
sub
and
fnstenv
dec
mov
ret
jecxz
inc
aaa
or
mov
stos
sbb
sbb
dec
lea
sub
jae
mov
into
pop
fmulp
or
cmpb
dec
mov
cmp
int
fstps
sub
hlt
cltd
jge
leave
test
add
insl
es
test
lock
xchg
adc
stos
mov
pushf
jnp
std
mov
icebp
js
pop
mov
in
ja
mov
push
das
iret
push
test
cld
push
sub
jmp
inc
cmp
push
ja
std
movsb
sar
sbb
dec
fs
or
divl
aaa
data16
jecxz
pop
cmc
push
cmp
in
pusha
mov
fucomip
int3
imul
sti
negl
mov
out
out
jle
add
enter
or
dec
in
jecxz
mov
inc
mov
mov
xchg
pop
push
mov
lods
out
mov
and
call
out
test
mov
sbb
mov
aad
int3
push
mov
ss
xor
push
jnp
inc
dec
scas
in
jle
sub
jnp
adc
pusha
adc
incb
xor
and
nop
or
xchg
pop
xor
xchg
push
inc
mov
xchg
mov
xchg
mov
aad
adc
mov
std
sub
lods
leave
scas
cld
outsl
cmp
pop
lcall
or
or
push
stos
and
xchg
push
repnz
cmp
into
sub
jmp
mov
mov
jle,pn
js
mov
cld
mov
pop
add
js
lret
mov
lret
mov
fwait
movsb
xchg
ret
mov
shlb
mov
inc
cs
clc
and
adc
fs
in
xor
clc
lahf
lea
adc
mov
test
mov
mov
popf
mov
ret
dec
test
xor
int
loop
sbb
sbb
test
mov
sub
xchg
daa
scas
push
shrb
mov
pop
cmc
pop
fildll
xor
mov
and
sbb
sbbl
mov
sbb
push
ret
scas
or
adc
xchg
jne
test
ret
pop
in
lea
cwtl
mov
fstl
lret
jo
cltd
or
xor
add
shll
repz
or
leave
mov
adc
or
push
push
mov
sub
test
call
push
add
push
mov
push
popf
fcmovbe
xchg
xorb
cld
popa
cltd
sub
pop
cli
nop
mov
repz
inc
and
jnp
or
or
xchg
jno
sarl
out
fwait
aaa
or
cli
xor
push
pop
xorl
push
add
adc
jnp
js
mov
sbb
fs
loop
pop
mov
test
adc
adc
mov
and
fwait
xchg
fcomps
in
int
cli
push
xchg
xor
adc
test
sub
cli
mov
dec
loope
sbb
and
mov
divl
pop
sub
jge
lock
push
lea
fidivrs
xchg
sbb
dec
in
xchg
jge
lret
add
or
xchg
iret
inc
test
lcall
adc
jmp
and
sub
stc
outsl
dec
cli
mov
adc
arpl
add
and
cmp
cwtl
addl
into
leave
sub
and
test
or
xor
jo
cltd
ja
push
loope
lret
leave
push
xor
icebp
andps
insb
cmpl
cli
test
xchg
mov
and
jg
data16
pushf
dec
add
xchg
fsts
add
push
stos
stos
push
xor
mov
xor
popa
out
lock
je
loope
rolb
or
cmpsb
jbe
cmpsl
loope
jo
movsl
and
xor
pop
shrl
mov
sub
mov
pushf
mov
roll
ljmp
lahf
jnp
cmp
sbb
pusha
jo
incl
dec
mov
sub
cmp
std
sub
rclb
fistpll
mov
mov
ss
inc
cmp
es
cmp
xor
xor
inc
test
add
scas
xchg
in
sbb
mov
into
fsubrl
les
test
inc
push
jg
ja
xchg
fwait
cmp
push
inc
jb
dec
sbb
outsl
pop
pop
rcl
lods
xchg
xchg
push
xchg
mov
int
call
dec
mov
cmp
or
int3
cmp
mov
mov
mov
ret
stos
fmull
mov
sahf
ja
fnstsw
fwait
inc
ret
lret
pop
mov
mov
dec
fs
inc
sbb
push
dec
mov
add
pop
lret
stos
jns
das
js
dec
push
outsl
push
lcall
ja
mov
sub
adc
cmp
jbe
dec
push
xchg
and
stos
sub
insl
mov
fildl
or
fwait
pop
inc
dec
fstpt
xchg
push
das
mov
in
jmp
movsl
push
inc
movsb
ljmp
push
fwait
cld
cmp
mov
sub
int3
out
mov
repz
mov
adc
mov
enter
out
sbb
lods
sti
lods
mov
sub
call
iret
or
mov
xor
mov
scas
inc
idivl
fsts
shrl
sub
pop
pop
dec
leave
jnp
mov
push
in
je
cmc
fmulp
push
sahf
mov
ret
icebp
jge
in
imulb
push
icebp
adc
push
xchg
add
push
inc
or
fcmovnb
lods
imul
jle
mov
cmpsl
addb
mov
shr
orb
xor
xchg
repz
xor
push
cwtl
sbb
pop
out
mov
lods
mov
xchg
and
mov
fxch
mov
scas
pop
std
leave
out
add
into
push
xor
rcr
test
jbe
jmp
mov
xchg
push
inc
int3
decl
iret
leave
aas
xor
sahf
and
or
jne
and
outsb
imul
fnstenv
cmp
cmpsb
pop
dec
inc
rcrl
imul
jp
fs
push
lea
ret
pop
pop
mov
xor
push
jns
lock
mov
and
aas
mov
enter
loopnew
clc
add
mov
mov
or
mov
xor
jnp
int3
xchg
cmp
sbb
jns
movsl
adc
dec
inc
roll
push
add
popa
fadd
jno
dec
push
push
mov
mov
and
fnstenv
push
adc
dec
or
jecxz
outsl
ljmp
push
ret
mov
and
push
pop
int3
popa
jae
dec
bound
dec
test
insb
into
push
mov
ret
in
cmpsl
test
aad
inc
outsb
loop
pop
testb
or
mov
outsl
std
stos
jmp
inc
iret
es
push
push
push
fcmove
xchg
shrl
rclb
loop
repnz
mov
clc
mov
mov
sbb
pop
and
and
push
sub
inc
fs
outsl
pop
push
fwait
inc
lea
cmp
test
je
jle
lcall
and
fcoms
gs
xchg
nop
xchg
fimull
rol
sbb
inc
popa
ret
lods
vpmulhuw
ljmp
aad
mov
add
mov
mov
sbb
pmullw
testl
les
xchg
inc
loop
inc
cwtl
shl
outsl
mov
xchg
icebp
shlb
dec
aaa
sbb
gs
pop
ja
insb
add
jno
rorl
lea
insb
mov
dec
jle
mov
pop
jae
out
xchg
lret
add
jb
test
stc
lods
lods
into
arpl
enter
call
shll
arpl
mov
xor
stos
cmp
clc
mov
cld
mov
xchg
xor
lret
into
or
cmp
add
fwait
xlat
rolb
jle
push
int3
or
xchg
loop
andl
iret
lea
mov
daa
add
cwtl
sbb
dec
mov
push
push
std
daa
fidivl
fsubrl
or
pop
xchg
push
adc
loopne
cld
and
adcb
rcrl
jp
mov
dec
cld
sahf
xchg
test
clc
cs
cmpsb
mov
jns
enter
fisubrl
push
outsl
scas
dec
gs
cmp
xchg
lds
mov
out
cmp
popl
pop
xor
scas
and
daa
sbb
xlat
test
pop
push
jecxz
mov
push
jns
nop
jmp
pop
push
ds
cmp
int
insb
loopne
rcl
mov
inc
push
lods
xorl
test
adcb
add
loop
cs
fsubrl
lock
popf
fnstsw
rcl
mov
sub
lret
jbe
mov
jae
mov
daa
outsl
mov
insl
push
movsl
push
call
dec
mov
ljmp
ret
mov
insb
fucomi
fstpl
push
mov
dec
inc
hlt
fldt
or
fists
movsb
pop
xchg
mov
sub
into
ja
fldcw
test
push
mov
adc
cmp
sub
sbb
in
xchg
aaa
xchg
sbb
lret
xchg
fmuls
xchg
lret
sbb
fmul
inc
sbb
or
and
cmp
shr
jle
popa
movsb
cmp
push
jne
les
ficoml
das
ffree
movsl
rdmsr
sub
mov
movsl
and
push
sahf
fs
dec
jo
ror
adc
pusha
xchg
cmp
xor
dec
xor
xchg
jo
rcrb
adc
cmp
in
or
sbb
fwait
and
sahf
pushf
mov
mov
lds
fs
loop
wbinvd
bsr
out
shrl
sub
sbb
ljmp
pop
pop
inc
decb
rcrl
inc
pusha
jl
mov
jge
adc
mov
dec
mov
sti
icebp
pop
loopne
imul
cmp
rclb
nop
ljmp
lret
and
sti
sub
sub
fwait
inc
pop
push
mov
js
xchg
pushf
add
test
jmp
mov
mov
pop
lock
fwait
xchg
aad
inc
scas
mov
xchg
adc
sub
addb
fisttps
movsl
add
pop
lahf
and
outsl
cmp
xor
out
or
call
push
imul
popf
mov
jnp
arpl
mov
push
lods
mov
mov
vpcmpeqw
inc
nop
jle
lea
push
insb
cmpsl
data16
test
cmp
xor
lret
stc
lcall
les
mov
loop
xchg
loop
in
fmuls
and
aaa
pushf
test
jb
mov
jne
xchg
add
inc
adc
negb
lods
and
test
cmp
push
xor
fs
js
adc
or
inc
mov
dec
ja
sbb
cvttps2pi
dec
push
imul
orb
test
mov
add
sbb
mov
pushl
je
add
xor
dec
cwtl
ss
cmp
xchg
jle
andb
sbb
mov
pop
jmp
sti
loopne
sahf
lahf
sbb
rcrl
and
inc
add
pop
dec
xor
xlat
pop
sub
xchg
jg
cld
dec
or
int3
jnp
sub
dec
cmpsl
push
mov
in
bound
rolb
leave
mov
mov
xchg
les
movsb
inc
int3
xchg
rcll
inc
enter
sarb
mov
fs
leave
bound
or
xor
jno
xchg
popf
iret
shrb
sbb
xchg
mulb
in
decl
xchg
gs
sub
xor
mov
cld
push
pop
lock
stos
dec
cmc
dec
push
lahf
in
outsb
mov
fnstenv
mov
mov
pop
clc
cmp
sub
mov
adc
cmp
je
outsl
test
xor
jnp
fsubs
ja
push
int3
or
js
sub
hlt
int
add
adcb
mov
or
sbb
loope
and
lahf
insl
out
inc
out
mov
enter
inc
pusha
cmp
xor
jae
psubd
adc
cmp
and
add
mov
inc
lea
pop
or
add
add
or
test
sahf
mov
mov
pop
jnp
rcl
sti
pushf
leave
jae
loop
pop
sti
xchg
push
xchg
repz
mov
in
pop
sub
sbb
mov
xor
cmp
arpl
aad
ret
mov
ficoms
test
in
shrl
push
xchg
jge
sub
imul
std
jo
add
xor
jb
push
dec
ss
push
fisttpll
pusha
test
push
movsb
and
cld
jmp
xchg
push
adc
fstp
adc
jmp
mov
leave
loopne
sbb
pop
push
clc
movsl
sub
jmp
sub
cmp
sub
aam
loopne
pop
adc
mov
mov
lahf
imul
jno
sbb
push
jbe
cwtl
hlt
jge
xchg
jns
popa
sbb
aaa
or
loope
inc
cli
sbb
cmc
xor
adc
push
mov
in
hlt
stos
inc
call
cmp
adc
inc
adcl
xchg
stc
movsl
jl
dec
stc
lret
mov
sbb
or
insl
scas
stc
decb
adc
add
stos
pushf
mov
add
push
fwait
jg
dec
jb
ret
cs
or
add
mov
dec
xor
mov
jl
pusha
hlt
jecxz
mov
out
fmull
sbb
and
adc
push
adc
mov
enter
push
dec
dec
cmp
jnp
repz
push
std
sub
shlb
fwait
stos
xchg
add
out
scas
sbb
and
xchg
inc
mov
sub
je
lahf
add
sbb
fimuls
enter
and
dec
sahf
enter
jne
cs
shrb
arpl
add
jns
mov
and
xor
mov
fdivs
mov
lret
mov
xorb
pop
fs
test
cmpsb
out
shll
xorl
mov
push
loopne,pt
dec
je
js
xor
arpl
and
mov
faddl
stos
loope
dec
jle
cmpl
movsl
push
out
push
push
lcall
loope
fidivrl
inc
loop
std
loope
imul
xor
mov
int3
mov
push
inc
fstps
xlat
cmpb
cwtl
stos
push
mov
sahf
and
arpl
xchg
mov
pop
insb
std
xchg
fldl
cli
aas
fs
push
dec
pop
jnp
mov
fbld
lret
mov
lods
jb
push
or
and
in
fdivrs
adc
sub
inc
and
mov
gs
ss
call
test
data16
je
mov
pop
scas
fyl2xp1
ss
mov
pusha
push
jp
out
cs
mov
inc
test
cmp
aas
jmp
adc
adc
xchg
inc
sahf
ljmp
pop
mov
push
mov
mov
icebp
and
push
push
loop
jl
pop
movsl
call
mov
sti
mov
hlt
bound
push
fs
loop
ja
adc
scas
sub
pop
or
lret
rorl
nop
cs
adc
push
scas
std
movsb
test
sub
add
loopne
scas
pop
sar
mov
les
or
popa
mov
adc
inc
sbb
cltd
inc
insl
inc
jae
daa
rcrl
fisttps
push
mov
jmp
into
add
push
or
fs
jne
dec
mov
pusha
leave
pop
lret
sahf
ljmp
push
xchg
adc
fnstcw
adc
clc
imul
add
test
cs
dec
mov
hlt
out
mov
jns
mov
cwtl
and
mov
and
mov
aam
cmp
div
imul
out
mov
lret
jne
sub
dec
stos
aas
mov
iret
xchg
adc
inc
inc
fstp
arpl
push
adc
and
mov
popa
inc
mov
and
mov
in
jmp
stos
dec
mov
sub
pop
ds
sti
inc
cmp
daa
ret
mov
fnstcw
mov
test
fldt
test
fldcw
iret
sbb
dec
ss
dec
mov
addr16
mov
inc
adc
mov
xor
inc
leave
push
xor
lods
aam
cmp
sub
fs
mov
bound
push
mov
lds
pusha
mov
adc
sub
mov
push
push
pop
fdivrs
push
fistl
cmp
cmp
mov
xchg
push
dec
adc
and
push
xlat
mov
ret
push
lcall
popf
mov
push
inc
xchg
imul
cmpb
xor
push
repz
and
jbe
pop
mov
pushl
icebp
sub
mov
pop
mov
xor
out
sahf
sub
in
mov
jno
daa
aam
or
jg
cwtl
movsb
daa
sub
cli
mov
and
ds
or
rorb
jmp
daa
test
push
jne
fwait
push
scas
pop
cmc
cmc
jg
pop
sar
lret
push
movsl
push
int3
scas
mov
loopne
adc
sbb
cmp
test
call
mov
mov
cld
mov
add
push
ficomps
xor
lret
daa
push
and
lret
push
enter
mov
loope
mov
insb
cmp
aaa
test
leave
adc
sub
and
mov
test
testl
ja
cwtl
out
sbb
js
jge
lea
test
lods
mov
fiaddl
pcmpeqd
jl
push
mov
lahf
or
test
push
dec
fs
les
aad
mov
push
dec
inc
sbb
aas
push
pop
xor
ds
in
ljmp
mov
ds
loopne
adc
cs
jns
xor
cwtl
mov
mov
cli
fisubrs
test
mov
int3
xor
dec
jne
call
or
xchg
pushf
mov
add
cmpb
adc
lret
negb
adc
push
xor
mov
sbb
sbb
mov
fcmovnb
jb
cs
out
mov
or
and
rcrl
pop
push
inc
rorb
jg
stos
les
push
xlat
cmpsl
cmc
sbb
mov
mov
mov
mov
jno
mov
mov
mov
xchg
sub
lock
ret
int3
adc
hlt
sub
rdpmc
insl
stos
mov
shrb
arpl
or
dec
popf
popf
shrb
add
fyl2x
jne
jl
or
fs
or
scas
adc
push
push
xor
inc
rcll
mov
in
fabs
lock
jbe
sbb
push
lods
arpl
mov
fisttpll
jp
dec
mov
and
sahf
or
enter
cltd
push
add
mov
push
and
mov
inc
adc
push
and
or
les
clc
jnp
push
xchg
mov
inc
mov
pop
inc
iret
out
sbb
add
data16
mov
mov
jbe
jb
in
pusha
push
lds
cld
xchg
icebp
vpunpcklwd
mov
fiaddl
mov
xchg
jecxz
mov
ret
outsl
and
inc
int
mov
and
mov
jge
pusha
into
sub
sbb
aaa
push
cmp
or
or
insl
test
clc
mov
jecxz
or
mov
ds
push
icebp
out
cmc
cmp
cmp
fwait
adc
outsl
call
call
flds
or
xor
push
xchg
aaa
shlb
mov
lock
sub
pop
mov
jae
xchg
inc
mov
inc
mov
lods
popf
and
loope
or
xlat
bnd
sbb
cmp
jo
xor
cmp
cmp
ret
js
pop
pop
pop
cmc
loopne
clc
dec
insl
cli
adc
aad
jl
adc
std
xor
addb
mov
mov
xchg
loopne
sub
cmp
das
push
nop
jp
or
into
std
sbb
sbb
cli
cs
push
xor
cmc
test
mov
ja
xor
xor
mov
and
andb
push
cli
mov
sub
das
push
rcrl
es
rorb
inc
ret
leave
push
fsubr
xchg
push
gs
lds
rcrb
nop
push
add
inc
pop
sub
mov
dec
sbb
dec
adc
and
pusha
test
daa
xor
test
adc
sahf
int3
mov
stos
inc
push
add
pop
scas
shll
push
test
dec
jne
das
hlt
movd
mov
js
mov
rorb
cmp
sbb
scas
call
pop
lock
jo
setg
lea
hlt
test
or
fldl
xor
clc
outsb
dec
sbb
rorb
sarl
jg
in
mov
sub
out
or
rcrl
loop
in
jmp
push
adc
sbb
push
out
popa
xchg
mov
sahf
fidivrl
sub
or
jno
dec
in
daa
or
mov
xor
cmpsl
insb
mov
ja
adc
inc
test
std
movsl
or
and
sub
inc
in
aaa
and
xchg
aas
xor
sbb
notb
shll
sub
mov
aaa
pop
jmp
loop
test
insl
inc
inc
sbb
pop
aaa
or
inc
jmp
xchg
loopne
adc
mov
fnstenv
bound
dec
push
in
xor
and
fnsave
data16
das
lods
fscale
mov
inc
adc
pop
add
mov
adc
lret
mov
or
imul
jb
pushf
dec
in
pop
cmp
add
test
rclb
shlb
mov
mov
fdivrl
mov
adc
pop
sub
jnp
ret
shll
je
push
scas
incl
popf
cltd
insb
popf
addr16
das
or
mov
leave
movsl
or
push
imul
aam
sbb
mov
in
cmpb
mov
rclb
scas
rolb
jns
repnz
imul
jp
out
xor
test
sti
cmp
mov
mov
xchg
push
bound
pop
push
cmp
loop
adc
addb
adc
popa
lock
mov
dec
and
nop
xchg
mov
sbb
data16
fidivs
jb
mov
fwait
sbb
add
xchg
bswap
popf
sbb
push
or
cltd
insb
jae
and
xor
insl
mov
xor
pop
mov
jns,pt
xor
jb
mov
movl
loop
cmpsl
das
adc
mov
push
ffree
inc
or
sbb
test
ss
sub
pop
push
xor
push
je
aam
loop
out
divl
ficomps
stos
sub
lods
mov
dec
subb
jnp
mov
pop
jbe
mov
je
and
sti
mov
cmpsl
inc
add
aam
mov
pop
dec
fiadds
inc
lea
inc
js
mov
scas
jp
in
cmpsl
pushf
sarl
add
mov
xor
pusha
or
dec
sub
mov
pop
adc
mov
into
ret
mov
xchg
add
cs
jb
in
push
pusha
daa
mov
xchg
mov
mov
push
push
enter
xchg
mov
push
xchg
xchg
sbb
pop
out
mov
test
sbb
cmp
rorb
sarl
xchg
fldt
sbbb
jp
fdivrl
in
ret
sti
xor
sahf
cli
rclb
mov
fimull
idivb
push
fldenv
outsl
fs
jnp
pop
pop
mov
int
cmp
mov
jno
mov
movsb
push
inc
mov
push
or
fyl2x
sbb
ja
repz
ret
mov
inc
inc
mov
out
rcl
dec
jle
outsb
into
outsb
mov
stos
aam
cld
repnz
mov
and
sbb
and
fucomi
pop
or
movsl
in
arpl
iret
in
or
cmc
les
cmc
add
adcb
adc
enter
mov
scas
loopne
jb
xchg
or
das
nop
leave
roll
xchg
popa
adc
enter
inc
push
sbb
mov
fdivs
shll
arpl
jno
xchg
pop
int3
pop
or
int
jecxz
mov
pop
fsubr
sub
inc
mov
sub
xchg
mov
mov
sub
inc
out
and
adc
mov
mov
filds
mov
adc
mov
or
in
mov
ret
fiaddl
cli
fs
pop
xor
dec
inc
rcrb
stos
cmp
or
outsl
mov
jo
add
rol
loope
xchg
popa
mov
mov
mov
adc
aad
sbb
jns
repz
inc
sub
and
sub
jle
push
push
sbb
xor
inc
icebp
fnsave
inc
icebp
pop
dec
mov
sub
call
repz
imul
pushf
setbe
mov
lcall
fidivl
ss
sbb
ja,pn
sub
inc
cmp
dec
xor
sbb
fbstp
loope
or
test
hlt
or
popf
sahf
cmc
adc
or
xor
shlb
test
adc
sbb
scas
mov
add
xchg
test
jmp
in
push
rolb
mov
mov
pushf
mov
xorl
xlat
dec
mov
inc
cmc
enter
pop
dec
xchg
cmc
push
mov
hlt
dec
push
fildll
jge
mov
fstpl
mov
dec
add
rcrl
scas
xchg
fildl
pop
test
push
adc
mov
in
xchg
fwait
add
mov
push
leave
aad
adcl
into
jecxz
ret
mov
xor
jnp
mov
xchg
fsubr
mov
loop
rolb
out
add
and
int
jg
xor
ds
inc
fiaddl
ret
xor
dec
add
cmp
out
stc
inc
jg
ja
and
dec
popf
dec
push
js
lcall
mov
cli
or
es
cmp
push
xlat
mov
adc
push
xor
iret
mov
rol
and
aaa
bound
movsl
inc
xchg
enter
sbb
pop
shr
out
fnsave
mov
mulb
lcall
inc
out
inc
nop
outsb
pop
mov
imul
pop
movb
xor
xchg
inc
fldenv
sub
mov
fidivrl
push
aad
ss
push
in
mov
jb
pop
mov
push
add
sub
pusha
or
jmp
adc
decl
out
fnstsw
add
mov
in
xor
faddl
inc
call
sbb
jge
sarb
xchg
mov
idivl
out
add
rcrb
clc
cmp
mov
scas
mov
xchg
xor
or
xchg
mov
push
push
pop
dec
clc
scas
rcl
cmp
pop
clc
mov
cld
leave
cmp
shr
loope
sbb
fimull
inc
cmp
sbb
inc
imul
adc
mov
xor
sub
mov
jp
xchg
jl
push
xchg
xlat
push
pushf
xchg
xor
mov
cmp
push
clc
xor
cmpsb
rcrb
jne
sub
sbb
push
adc
sahf
mov
sbb
cmp
ret
sbb
mov
cmpsb
dec
pop
in
xchg
mov
mov
gs
leavew
adc
loopne
hlt
push
push
out
sti
test
jo
lret
dec
fistl
in
inc
outsb
xchg
test
mov
cmpsb
lea
rep
nop
shlb
pusha
lods
jnp
mull
sbb
iret
cmp
sbb
jne
out
or
fucomp
add
xchg
mov
fcomi
addr16
cmp
adc
mov
leave
stos
stos
mov
push
aam
mov
imul
lods
jae
xchg
les
sub
sub
pushl
aaa
push
popa
imul
sub
xchg
mov
xlat
add
in
mov
pop
fiadds
fs
lods
loopne
pop
xor
add
xchg
scas
mov
mov
fiadds
sbb
push
sbb
sti
dec
insb
mov
pop
rcrb
mov
pop
je
pop
xchg
daa
imul
cwtl
insb
lock
test
fcmovne
adc
dec
call
and
sub
mov
test
push
mov
es
push
loop
mov
dec
fldcw
enter
in
pop
and
cwtl
mov
subl
test
push
and
out
loop
sub
and
divl
sbb
dec
js
jno
xchg
pop
inc
cmc
mov
subl
dec
dec
js
push
jbe
cs
cmp
outsl
idiv
cltd
ds
mov
aaa
xchg
xor
rolb
fists
jl
jb
test
jnp
das
in
fwait
ljmp
scas
js
cmpsl
cli
std
mov
fisubrl
das
sub
sbb
inc
aam
test
jg
mov
inc
and
out
cmp
mov
jg
jae
test
std
fnstenv
mov
inc
and
cmp
inc
inc
adc
dec
in
add
ljmp
repz
nop
cwtl
lcall
mov
sub
dec
fisubl
filds
add
sub
or
jb
aaa
xor
lods
cwtl
push
sbb
mov
inc
or
imul
cld
jno
lret
lahf
pop
inc
jno
repnz
xor
outsb
pop
fimull
shlb
or
ds
in
das
or
dec
ljmp
and
jp
sbb
in
jne
adcl
lods
jge
imul
sarl
push
sbb
clc
dec
div
addb
notl
xor
repz
in
lcall
daa
repz
inc
xor
dec
mov
mov
aas
cld
push
dec
cmp
je
pop
inc
mov
sbb
mov
xlat
push
in
mov
hlt
cmp
dec
xor
jb
into
and
adc
cs
add
push
idivb
sti
cmpsl
dec
imul
aas
mov
js
mov
add
add
lret
stos
xchg
or
cmp
mov
mov
push
xorb
dec
push
or
add
icebp
movsb
mov
sub
mov
ja
add
aad
das
jmp
xchg
ficoml
loope
mov
jb
inc
sahf
mov
inc
push
xor
rorl
negb
addr16
cmpsl
out
jmp
xchg
push
or
mov
iret
add
push
add
xchg
fisubrl
fisttps
dec
and
sti
xchg
scas
and
rclb
and
shlb
cmp
inc
or
push
arpl
inc
and
decb
mov
lods
and
bswap
fs
scas
into
aaa
test
ss
xor
adcb
fisubrl
pop
enter
shrl
fldenv
cmp
xor
push
dec
xor
cld
lahf
mov
push
in
xor
in
pushf
addr16
jmp
repnz
dec
imul
pusha
and
rorl
sub
std
xchg
arpl
mov
xor
ljmp
lds
lds
jns
jo
js
inc
jg
dec
xchg
inc
ficoms
sbb
mov
frstor
fisttpll
insl
imul
insl
push
pop
std
inc
pusha
fs
add
loopne
ret
jno
adc
imul
pop
mov
gs
xchg
mov
mov
fisttpl
lret
xchg
sub
nop
push
dec
int
dec
popf
loope
cmpsl
rclb
imul
xor
fucomi
call
stos
test
inc
sub
pop
out
sub
hlt
or
jne
addb
adc
push
sub
sbbl
int3
dec
out
jae
xchg
lret
enter
push
cmp
loopne
adc
push
push
test
loopne
push
mov
mov
ss
outsl
and
sti
cmp
cltd
inc
mov
xor
sub
sbb
mov
lret
cwtl
inc
daa
fdivp
pop
push
add
sub
pushf
in
lods
pop
dec
lds
sub
sldt
jmp
mov
push
sbb
test
mov
jo
or
mov
xchg
add
rorl
sahf
add
out
cwtl
adc
test
cmp
call
sarb
movsl
mov
rorl
xchg
inc
filds
push
lock
add
add
pusha
inc
sbb
pushf
bnd
inc
lock
mov
scas
in
jb
pop
lds
pop
mov
add
hlt
inc
js
xor
cmp
mov
xor
scas
aam
stos
and
mov
or
mov
je
cmp
lahf
mov
mov
pushf
fldcw
lock
xchg
mov
pop
stc
mov
or
cli
and
mov
and
jnp
dec
outsb
rorl
dec
jb
xchg
push
les
ja
xor
dec
jo
mov
aaa
push
sti
sub
cld
lea
adc
push
imul
push
sti
in
test
pop
ljmp
aad
sbb
dec
fmul
pop
ljmp
pop
push
andl
push
ja
stos
rcll
nop
setne
and
push
fdiv
ficompl
insl
fistps
cwtl
push
dec
pop
cmp
inc
or
jo
mov
sahf
or
jle
push
sahf
fsubl
cld
int
jne
aaa
sti
in
push
lods
sub
scas
sub
shrl
lock
xchg
orl
loopne
lods
mov
mov
jb
push
mov
dec
jp
xorb
mov
es
int3
and
or
xor
or
dec
addb
mov
data16
fisttpl
neg
and
inc
mov
scas
push
iret
stos
push
lods
nop
cmpsl
or
mov
insb
xor
popf
sbb
lahf
dec
sbb
aam
xchg
lahf
push
fidivs
negl
pop
icebp
std
mov
cmp
xor
enter
push
jl
idivb
daa
sbbb
jg
in
iret
das
ret
pop
and
sub
loop
mov
in
or
cld
inc
fnstsw
push
nop
pop
add
push
xchg
xchg
fs
and
daa
mov
mov
outsb
pop
adc
lods
repz
insl
xchg
inc
and
cmp
lea
insb
cli
insb
fisubs
mov
pop
pop
cmp
popf
or
in
shr
mov
addr16
rcrl
fsubrl
test
rolb
sub
cs
mov
lcall
sbb
push
xchg
xchg
push
in
fs
mov
or
jp
mov
enter
mov
in
ja
or
movsb
dec
test
inc
ja
sbb
aas
mov
leave
pushl
cmp
inc
addr16
pop
bnd
sbb
sbb
jbe
fmuls
imul
and
push
push
add
xchg
mov
pop
inc
ret
xor
mov
das
pop
or
dec
dec
sbb
pop
arpl
jnp
inc
adc
sub
loope
rorb
pop
xchg
push
dec
loope
sub
imul
lahf
pop
jl
xor
or
mov
xchg
sbb
int
repnz
cmpl
sub
test
adc
sub
imul
stos
je
repnz
and
movsb
pop
pop
fcomps
pop
shll
pop
dec
xchg
xlat
jge
js
jne
fcmovnbe
les
pusha
pop
jnp
stos
lcall
nop
incb
js
movsl
dec
xchg
xchg
in
mov
fsubs
cld
sbb
outsb
ffree
ss
mov
fwait
mov
cmp
mov
int
cmc
repz
sbb
cs
or
aaa
mov
jge
fistl
fs
stos
sub
sbb
dec
lods
push
aas
mov
dec
cltd
push
sar
cs
mov
add
lret
es
fwait
sbb
sahf
lcall
add
add
inc
jne
repz
ljmp
dec
mov
add
inc
mov
pop
notb
jecxz
fs
xchg
insb
jg
sub
add
dec
fwait
mov
add
and
icebp
mov
lock
test
xor
loop
sub
jg
mov
mov
pop
arpl
adcb
inc
in
sub
jns
dec
jb
daa
in
inc
fimuls
jnp
loop
xor
in
stos
lods
xchg
rcr
int
dec
pop
jns
add
sub
call
inc
pushf
imul
shr
pusha
stc
mov
xchg
mov
mov
xor
adc
xchg
ret
xchg
mov
ds
cmc
mov
pop
test
fldl
cmp
popa
push
roll
pop
add
mov
mov
jmp
adcl
pop
lods
mov
ret
bound
mov
cmp
push
cmp
push
es
push
mov
pop
add
inc
fs
inc
lods
fsubs
clc
insb
mov
cmp
sbb
add
cltd
mov
push
cltd
push
ds
mov
fimuls
roll
mov
jle
mov
fists
xchg
jl
inc
out
inc
fimull
and
xor
cmp
sub
xchg
jnp
hlt
ror
aam
dec
dec
imulb
jbe
xchg
mov
insl
cmpsb
or
inc
jge
mov
ja
call
pop
mov
ret
std
sub
inc
jmp
mov
mov
push
or
mov
inc
popf
xor
loope
pop
loope
int3
push
add
insl
test
mov
sbb
cmp
js
cmp
mov
gs
insl
cmp
and
fwait
lret
mov
pop
sub
mov
aas
cmpsl
cwtl
cmp
xor
mov
js
movsb
notl
push
pop
aaa
adcl
jb
shrb
sahf
push
xchg
dec
loope
out
adc
pop
aad
pop
cmp
test
inc
push
adc
mov
int3
decl
fs
jns
pusha
dec
ror
mov
xorb
pop
sbb
hlt
or
out
mov
mov
add
lahf
data16
fmul
loopne
fcompl
cs
jbe
lcall
sbb
push
push
sbb
lock
out
mov
add
push
pop
orb
incb
test
lods
add
mov
add
stos
fcomps
popf
nop
pop
and
sub
in
leave
push
pop
clc
or
bound
test
clc
fidivrl
into
shlb
cmp
or
pop
mov
test
fwait
sbb
xor
pushf
insb
rorb
jno
aad
cmc
jge
ficomps
jns
sbb
xor
loopne
cmp
es
cltd
dec
movsl
jns
jno
cmp
pop
cmp
pop
adc
xchg
or
push
pusha
cmp
sub
cmp
mov
push
les
loope
lahf
aam
jne
jl
mov
fidivl
test
call
cmpsl
aam
pop
rcrb
mov
dec
jg
cmp
rcrl
in
fcoml
dec
into
fsub
lods
mov
mov
add
inc
stos
mov
adc
xor
sub
lahf
jle
divb
ret
mov
out
xor
pushf
mov
pusha
nop
pop
es
test
mov
push
pop
sbb
mov
ret
jmp
cmpsb
fcmove
adc
mov
jno
sub
sbb
adc
mov
jle
xchg
sub
and
addb
xor
loope
xchg
jge
subl
andl
push
lahf
cs
imull
cmpsl
adc
sub
lcall
test
and
mov
mov
stc
push
repnz
jo
insl
xchg
mov
sub
mov
nop
insl
or
xchg
aas
leave
int
sbb
xchg
jb
aad
jae
stos
sbb
ss
jmp
jle
into
sub
in
xor
or
std
sub
mov
incl
sbb
and
lahf
inc
lahf
stos
sbb
cmpsl
dec
mull
add
std
and
ds
and
sbb
lds
shl
add
push
scas
sub
mov
sbb
dec
dec
out
loop
and
jno
xchg
loope
inc
in
nop
jo
mov
or
movsl
pop
xchg
arpl
jecxz
rorb
inc
mov
out
push
xchg
pop
push
inc
inc
cmp
push
out
inc
pop
xchg
scas
mov
push
pop
addr16
push
inc
notb
pop
push
or
sub
mov
push
pop
mov
lods
push
xchg
stos
push
pusha
xchg
sub
pop
push
jo
in
orb
mov
cld
cmp
pop
pusha
push
dec
xchg
imul
jl
ja
push
test
cmp
movsl
push
std
push
sub
jbe
test
push
movsl
inc
sub
popf
inc
fs
repnz
sti
arpl
repnz
dec
cld
jae
pop
inc
data16
adc
push
pop
pop
push
sub
stc
jecxz
xchg
or
mov
arpl
cli
xchg
mov
add
jp
add
xchg
ror
data16
mov
std
mov
lahf
in
iret
xchg
lods
js
push
inc
enter
lock
aad
cs
repnz
stc
sbb
adc
aam
mov
in
mov
push
rorb
lea
sti
cld
loopne
adc
je
push
pop
pop
mov
push
mov
adc
jmp
jmp
imul
push
and
and
pop
and
mov
mov
cmp
xor
cmp
xor
sub
jo
das
arpl
loopne
adc
hlt
fbld
add
xor
sbb
mov
stos
lock
hlt
out
jmp
add
mov
or
jle
jnp
test
subb
cmp
inc
cmpsb
popf
pop
int3
insl
jne
ljmp
jns
sti
xchg
stos
inc
cmp
icebp
imul
mov
sbb
test
inc
xchg
add
dec
add
in
fisttps
enter
cmp
fs
push
fdivl
mov
xchg
cmp
ror
cmp
xor
aad
xchg
mov
mov
fbld
push
adc
leave
fistpll
pop
xor
mov
sbb
adc
add
es
pop
pusha
or
xchg
pop
pop
mov
cmp
push
stos
mov
mov
loop
jle
sub
mov
jp
fnstenv
adc
loop
xlat
dec
or
inc
movl
xchg
rcll
out
cmp
pop
fs
push
sub
movsb
jbe
inc
inc
sbb
outsl
jge
adc
pop
jge
es
insb
rclb
and
mov
jp
in
clc
or
push
mov
in
jg
adc
mov
mov
fcom
push
xlat
jmp
sub
clc
cmp
out
sbb
movsl
dec
mov
shr
add
cli
mov
jb
sub
das
movsb
push
pop
popa
sub
push
jne
imull
inc
jge
xlat
out
mov
sarb
xchg
jecxz
es
leave
xor
negb
push
or
fldl
sub
outsb
jge
cmp
mov
imul
dec
dec
fs
pop
rcrb
inc
int
add
xchg
and
cmpsl
fs
xorl
or
mov
loopne
jbe
and
or
sarb
mov
nop
jle
dec
jb
ret
mov
nop
aam
xor
and
pop
test
push
fstpt
and
xchg
push
xor
jno
cmp
clc
mov
loopne
and
push
int3
sub
aad
xlat
mov
xor
add
jl
pop
mov
and
in
pop
stc
test
mov
cmp
fiadds
lret
jns
push
cmpb
hlt
adc
repz
jno
dec
scas
xchg
pop
call
xor
stos
out
iret
addr16
mov
xchg
pop
or
pop
stos
leave
lods
mov
iret
stos
mov
jecxz
jno
and
sti
cmp
in
xor
xchg
pusha
pusha
mov
into
inc
add
push
sti
jo
jmp
push
push
into
shl
cmpsl
sub
adc
sbbb
push
in
ret
arpl
aad
xor
lcall
jmp
xchg
andl
rolb
dec
mov
sub
lock
add
hlt
ja
rcr
mov
adc
pop
stc
or
cmp
mov
scas
ss
rcll
cmp
push
pop
mov
or
inc
daa
inc
loopne
dec
mov
ficompl
jbe
add
test
mov
movsb
jle
cmp
in
repz
xlat
lods
repnz
sub
xchg
sbb
xlat
add
cmp
movsb
jbe
jns
scas
jecxz
repz
aaa
mov
fnstenv
sbb
sub
bsf
cld
pop
pop
aad
popa
arpl
push
add
cltd
xor
stos
ljmp
and
repz
xchg
mul
and
cs
xchg
fwait
pop
cmc
jne
int
pop
add
xlat
into
inc
sti
xchg
or
ftst
jo
icebp
sub
fdivrl
cmp
jno
aas
push
or
in
and
mov
or
mov
mov
out
lcall
std
call
inc
sbb
rcrl
repz
inc
cmc
dec
lds
xchg
dec
mov
out
cld
mov
inc
inc
in
pop
dec
lcall
push
sbb
pusha
fadds
mov
add
cmpsl
dec
mov
jmp
or
ficompl
test
ret
push
dec
dec
lock
pop
sub
sbb
fsubrl
cmp
mov
scas
sub
fwait
sub
adc
mov
jno
ljmp
pop
dec
jne
aas
xchg
sbb
dec
sbb
sbb
scas
mov
or
int
cli
inc
in
xchg
xor
push
inc
ljmp
adc
or
leave
xlat
addr16
leave
sub
cwtl
les
in
add
ss
roll
frstor
xor
sbb
sti
es
clc
int
jmp
lods
xorb
xorb
data16
or
xchg
bound
stc
xchg
movsb
pop
repnz
push
mov
stos
fidivs
adc
iret
push
cmc
clc
add
dec
cmp
xor
mov
imul
xchg
jl
outsb
mov
insl
pop
pop
mov
cmp
jl
out
cmp
mov
into
or
mov
inc
mov
adc
dec
cld
data16
fwait
add
xchg
or
dec
jecxz
xchg
push
sahf
fmull
test
aam
push
cmp
mov
imul
nop
fadd
scas
cmc
ret
popa
test
push
fstl
inc
or
add
fsubrl
mov
pop
daa
faddl
pop
test
mov
dec
out
popf
popf
mov
stc
aas
push
push
enter
mov
push
push
nop
cmp
xchg
mov
and
add
mov
std
push
and
dec
mov
adc
jno
andb
push
aad
sbb
add
stos
push
fstl
and
and
outsb
or
pop
xor
push
shlb
decb
cmp
xor
cmpsb
adc
enter
adc
std
pop
jnp
xchg
pusha
pop
sub
pop
insb
ljmp
and
lock
enter
jno
sbb
push
push
xlat
roll
dec
pusha
mul
fisttpl
pop
add
add
and
pop
aad
adc
hlt
test
and
iret
outsl
push
stos
dec
jg
lock
mov
lret
andl
in
dec
insb
cmpsl
push
dec
push
jmp
push
and
repz
lret
inc
jne
imul
inc
fwait
pop
int3
push
add
cmpb
cmp
or
inc
jns
ret
lret
and
push
cwtl
fisttpll
popa
push
mov
jo
aas
es
push
cli
into
lcall
ds
out
or
loopne
insl
ficoms
loopne
sbb
cs
pop
push
ss
subb
in
fists
repnz
shrb
mov
fidivrl
xchg
adc
fwait
iret
shr
xor
mov
jp
jmp
pop
je
movsl
pop
lds
sarb
loope
into
in
mov
or
or
xchg
add
daa
les
mov
mov
push
adc
mov
pop
rolb
jbe
xchg
stc
repz
or
jo
fiaddl
dec
and
loop
mov
inc
add
ss
bnd
fidivrs
out
and
js
fsubp
add
cmp
jb
sbb
cmp
jle
sbbb
int
daa
or
lahf
pop
movsb
jl
out
jle
out
adc
inc
adc
test
ljmp
adc
jmp
cmc
repz
je
xor
in
je
mov
push
sbb
lea
enter
scas
loopne
imul
addr16
jecxz
adc
pop
push
sti
lods
ret
cmpsl
jp
jmp
pop
lcall
cmpsb
add
cld
pop
lods
push
pop
dec
pop
or
jno
leave
lret
shrl
sti
jbe
mov
repnz
test
repz
pop
faddl
xor
cmp
int
sub
dec
fwait
cli
cmp
sbb
sahf
pop
cmc
dec
mov
out
mov
popa
shr
stos
add
data16
push
sub
jmp
je
add
iret
sub
xor
movsl
clc
or
xor
arpl
jne
dec
mov
cmp
push
ss
aas
jbe
xchg
dec
push
hlt
adc
rorb
xor
inc
pmulhuw
or
sti
addr16
jecxz
les
pop
fmul
insb
fcomp
mov
jnp
xor
lock
push
or
or
je
out
inc
dec
sbb
in
inc
jecxz
push
das
push
stos
inc
push
loope
sbb
lahf
xchg
stc
andl
xchg
std
loope
pop
xlat
or
and
je
cmpsb
or
dec
xor
xor
ja
xor
sub
sti
push
pop
xchg
iret
mov
scas
dec
mull
push
mull
or
repnz
cmp
fdivl
insb
or
jbe
jno
adc
call
mov
pop
cmp
push
mov
jmp
cs
jmp
mov
lock
sbb
mov
aaa
xchg
data16
mov
out
dec
and
jp
xchg
iret
mov
popf
ja
aaa
lds
test
nop
adc
xor
and
icebp
push
jle
mov
push
xor
stos
xor
mov
or
or
outsl
mov
mov
in
jl
jae
inc
movsb
mov
adc
jl
xchg
stos
aas
iret
frstor
fwait
test
das
jmp
adc
lods
das
push
mov
push
fwait
dec
push
sbb
mov
sti
xor
cld
icebp
mov
popa
mov
sti
and
jbe
fs
xor
pop
pop
mov
insb
mov
in
pop
sub
test
enter
sbb
xor
push
dec
test
arpl
aaa
dec
adc
insl
dec
shrb
popa
ja,pn
dec
cmp
loop
sbbb
imul
aaa
les
into
mov
mov
aaa
cli
xchg
jl
jns
cmpsb
je
jo
call
popl
fdivl
clc
cli
movsl
cmpb
or
sbb
jne
popa
pop
enter
ljmp
inc
out
jg
push
pop
and
lds
std
nop
xchg
adc
push
sbb
push
xor
push
dec
ja
or
inc
pop
je
dec
popf
inc
out
inc
push
lods
fiadds
nop
mov
jmp
dec
or
ret
lods
and
and
iret
pop
cmp
and
xchg
xchg
rorl
jbe
lods
or
push
or
pop
sub
mov
pop
dec
jl
dec
xadd
mov
cmp
sub
aad
loop
and
cmp
inc
mov
or
aad
or
movsl
lods
xchg
int
jge
fdivrs
xor
sbb
fldt
es
cwtl
scas
int3
dec
arpl
and
mov
pop
xchg
mov
into
imul
test
addb
lahf
push
je
gs
jle
stc
mov
ficompl
mov
mov
aas
xorb
cli
push
mov
packuswb
std
pop
push
pop
je
sub
push
adc
imul
in
mov
fs
jecxz
rol
sahf
arpl
push
ret
jns
sbb
add
das
cmpsl
das
scas
mov
cmp
lret
pop
stos
or
and
add
aad
and
out
out
jo
xor
dec
push
je
xor
xchg
jae
int
out
mov
sbb
inc
jnp
adc
in
adc
inc
lret
test
fldenv
mov
jl
xor
nop
or
mov
add
jb
inc
imul
pop
push
inc
decb
in
xchg
mov
lret
sub
mov
lock
dec
cmc
shrb
inc
aaa
leave
dec
pop
mov
add
mov
cwtl
ficoms
fimull
adc
repnz
pop
decl
loop
cmp
in
loop
dec
out
movsl
mov
stc
push
loope
sbb
sbb
mov
pop
add
pushf
pusha
or
fwait
outsb
ror
stos
std
pop
in
mov
nop
push
mov
mov
inc
insl
jmp
aas
push
lcall
sbb
mov
push
add
mov
out
add
nop
adc
stos
lret
imul
xchg
hlt
dec
lods
sbb
lods
aas
imul
push
push
adc
sbb
sbb
sbb
or
sub
loopne
ficoms
or
daa
mov
lret
or
xchg
push
dec
iret
push
xlat
jo
xor
sti
cwtl
cmp
into
sub
cmp
sub
aam
out
pop
sbb
push
mov
call
outsl
subl
sub
mov
frstor
mov
and
test
pop
outsb
lcall
jecxz
ret
pop
lods
xchg
cmpb
xor
pop
lock
dec
sub
aad
dec
dec
and
push
in
push
mov
mov
in
sub
push
inc
sarb
insl
test
lds
mov
jg
jp
jmp
dec
sbb
sub
loop
pop
sub
bound
fnstcw
mov
stc
js
fdivr
dec
push
fcompl
mov
sbb
sub
adc
mov
inc
int
add
gs
sub
lcall
jmp
lahf
outsb
imul
cld
iret
push
ret
aas
imul
lods
push
jnp
sub
xchg
dec
mov
inc
scas
inc
cltd
test
lcall
push
into
mov
pop
xlat
jecxz
and
adc
pushf
cwtl
xchg
or
jmp
and
xchg
push
stos
pop
dec
adc
cmp
adc
push
push
orl
test
fwait
and
in
pop
aad
insb
mov
sub
sub
in
xor
int
or
add
xor
fstl
outsb
movsb
push
aad
cmp
jge
fdivrl
mov
inc
jecxz
test
lods
dec
out
popa
bound
call
add
gs
cmp
lods
loope
mov
mov
mov
pop
lret
xchg
cmp
inc
stos
stos
addr16
movsl
arpl
in
cmpl
dec
gs
add
ret
pop
mov
xor
push
mov
mov
pop
data16
mov
push
movsl
jp
inc
scas
adc
jp
stos
pop
mov
cmp
add
mov
dec
outsb
scas
pop
sub
lods
mov
mov
in
or
mov
sub
shl
inc
enter
sub
loop
insb
xchg
outsl
mov
cmpsb
or
fdivl
sbb
xlat
and
lea
mov
xchg
dec
out
sbb
dec
and
add
fbld
inc
sub
int
in
cmp
mov
mov
pop
pop
add
cli
xchg
fcoms
inc
cmpl
fstpl
mov
imul
dec
inc
das
pop
cltd
cwtl
ret
and
adc
inc
pop
outsb
loop
pusha
insb
rcl
sbb
fildll
int
iret
mov
xchg
aaa
lret
loope
pop
fimuls
loop
clc
cmp
inc
or
pushf
sti
xor
das
imul
bound
or
sbb
jg
push
lcall
ret
inc
aaa
mov
adc
mov
pop
divl
mov
cmp
ffree
dec
mov
fdivr
out
out
jne
ds
jno
insl
sub
nop
out
add
dec
lret
push
xchg
icebp
scas
mov
add
push
cltd
mov
cmp
cli
xchg
add
ret
mov
fwait
inc
testl
dec
in
mov
test
xchg
jl
nop
inc
mov
lahf
les
pop
xchg
jmp
xchg
jle
mov
out
push
out
out
inc
inc
xor
jns
and
iret
sub
hlt
outsb
jnp
push
inc
or
data16
sbb
test
repnz
push
jb
nop
jle
pushf
gs
dec
xor
dec
and
pop
inc
scas
in
orl
pop
xor
fnsave
test
jmp
icebp
cmpsl
mov
fstp
cmc
push
sahf
mov
mov
fwait
mov
cmpsb
insb
sbb
dec
icebp
fimull
lret
pop
push
daa
test
jle
ja
fcmovb
push
nop
push
mov
jns
test
out
rcrb
imul
jno
mov
cmpsb
dec
mov
xchg
mov
xchg
mull
aam
lret
jnp
in
hlt
into
aam
mov
les
xor
in
add
imul
dec
push
aad
popf
mov
cmpsb
cmp
or
and
mov
push
cld
ss
cmp
scas
das
loope
pop
cmp
adc
sahf
bound
mov
pop
jbe
cmp
cmp
mov
adc
fldcw
daa
adc
cmpsb
popf
sub
xchg
sub
lahf
sub
mov
mov
imul
or
xor
lea
popf
sbb
repnz
mov
lds
rorl
js
inc
add
xchg
mov
mov
push
in
mov
xchg
xor
roll
xlat
aam
in
lahf
xor
cmp
outsb
inc
or
pop
loopne
inc
cld
dec
repnz
push
sbb
sub
fbstp
fisttps
imul
gs
push
mov
push
push
call
sti
loop
cmpsl
push
popa
mov
xor
mov
jb
popl
mov
push
push
xor
xchg
shrl
push
insb
pop
push
push
cmpsl
ret
mov
int
cli
outsb
es
inc
and
hlt
notl
pop
mov
mov
ret
hlt
or
test
mov
sbb
cli
dec
pop
sbbb
cmp
pusha
roll
adc
shll
mov
xchg
ret
stc
int3
in
xchg
add
sbb
pop
xlat
test
lods
lcall
popf
jecxz
orl
xor
mov
stc
fildll
add
test
pop
xorl
loope
popa
imul
and
sub
repz
lret
xor
ljmp
addb
gs
sub
out
lret
loop
ud1
fnstcw
add
push
mulb
cmp
or
lock
fsubrl
or
adc
add
and
mov
jp
mov
enter
loop
mov
inc
scas
aaa
mov
mov
or
ds
cwtl
xchg
mov
imul
enter
xor
lcall
and
in
dec
outsl
adc
adc
xlat
inc
cmpsb
jne
out
inc
inc
pushf
push
push
push
xor
fcomp
gs
mov
cltd
adc
gs
stc
push
ret
outsl
push
xor
arpl
jle
test
rol
push
or
icebp
clc
sub
ror
jmp
push
leave
imul
xor
jb
sbb
testl
outsl
jle
add
xor
ljmp
jmp
push
loopne
add
adc
mov
or
into
loope
popf
out
xchg
inc
pop
imul
xchg
in
mov
mov
pushf
fnstenv
sbb
ss
mov
fdivrp
sbb
outsb
lods
adcb
sar
and
lcall
pop
sbb
mov
mov
xor
mov
les
xor
aad
mov
and
jb
xchg
rcrb
iret
mov
shll
cmpsl
sub
xor
fs
xchg
mov
mov
je
add
sbb
inc
icebp
inc
sub
cltd
bound
lret
mov
ja
les
xchg
lods
adc
mov
sbb
or
cmp
addl
jbe
xchg
jns
pusha
pop
test
in
movsb
xchg
xchg
iret
arpl
cs
cmc
mov
cmpb
mov
push
fwait
mov
add
sbb
dec
rcr
add
and
push
mov
mov
clc
mov
xor
mov
std
icebp
jb
pop
or
clc
dec
enter
dec
sbb
mov
out
insl
mov
mov
testl
mov
fwait
sbb
xchg
cmc
sbb
aam
push
push
dec
push
je
subb
xchg
shll
cmp
sbb
into
mov
inc
xchg
rcrb
arpl
mov
sub
mov
shlb
dec
mov
sub
shl
pushf
xchg
push
js
punpckldq
mov
nop
ds
cmp
jne
push
mov
mov
mov
and
mull
pop
arpl
fcoml
sbb
inc
sarb
rcrl
push
fsts
cmp
repnz
or
out
sbb
jae
shrl
dec
dec
fadds
imul
pop
int
roll
mov
xchg
mov
ljmp
aam
rcrb
inc
mov
fisubrs
dec
test
push
or
inc
inc
shr
mov
cmc
mov
in
or
fistpl
ret
add
test
faddl
rol
mov
daa
ja
jb
xor
int3
addr16
int3
push
push
fsubl
imul
mov
mov
fmull
inc
inc
arpl
mov
cld
aad
adcb
jmp
int
hlt
xor
fsubs
movsb
mov
aaa
adc
lock
mov
push
add
aaa
ds
test
pop
stos
int
shrl
adc
xchg
jecxz
in
jl
xor
leave
and
mov
test
mov
ficompl
add
xor
sti
cs
dec
lahf
lcall
lret
dec
inc
outsl
or
mov
mov
mov
outsb
xchg
xor
mov
outsl
std
jle
push
out
and
mov
add
punpckhwd
scas
or
pop
sub
das
jmp
int3
enter
mov
inc
xor
loop
ds
push
xchg
aaa
ja
or
pop
xlat
ret
das
push
jl
cmc
pop
adc
popa
dec
sub
cmp
mov
mov
into
xor
xor
mov
add
pusha
mov
adc
mov
cli
pop
mov
jno
sub
push
inc
aam
sbb
fs
jno
lahf
jb
push
ret
or
add
dec
mov
fcoms
das
cmc
outsl
or
push
or
in
mov
push
imul
pop
jmp
dec
testl
sub
inc
add
mov
sbb
jle
ljmp
fcoms
daa
arpl
scas
lea
jg
test
in
lock
roll
lret
out
in
sbb
pop
jl
pop
mov
add
nop
pop
and
lock
add
mov
cld
scas
pop
scas
outsb
data16
pop
pop
add
inc
xor
fld1
jnp
loop
fisubs
jmp
loope
add
xchg
daa
adc
mov
mov
mov
mov
aam
jno
mov
test
or
jl
push
push
sub
inc
das
xchg
cmpsl
xor
push
in
test
pop
xchg
lret
pop
xor
js
mov
scas
jo
fwait
clc
or
in
ret
jg
jmp
add
dec
sbbl
imul
int3
sbb
push
arpl
dec
xor
jge
aaa
aam
sbb
sbb
push
repnz
popa
jb
and
movsb
pop
jno
xchg
lret
rorl
movsl
lret
pop
jmp
mov
jb
pop
int3
and
push
int3
jl
mov
fisttps
cmp
mov
adc
or
leave
cltd
gs
sub
loopne
jle
pushf
jle
dec
out
int
mov
mov
pop
push
mov
jle
call
inc
jns
add
mov
push
scas
in
daa
xchg
or
leave
iret
andb
rcrl
or
mov
xor
adc
in
ss
fs
push
mov
xchg
add
loope
pushf
jg
jb
xchg
push
pop
rcrb
shlb
sti
cltd
ljmp
sahf
xor
push
xor
test
scas
jae
mov
out
cli
ret
fildll
push
xor
or
stos
xchg
mov
add
add
inc
adc
jl
loopne
les
cmp
cmpsl
in
aas
andl
mov
andb
mov
xchg
test
mov
cmp
pop
das
aam
lcall
data16
in
jle
gs
out
fdivl
xchg
rorb
xchg
mov
ljmp
scas
nop
shlb
xchg
adc
repnz
imul
dec
xor
mov
pop
into
xchg
adc
adc
xchg
rorb
mov
mov
adc
test
pop
ja
fnstcw
xor
daa
push
data16
dec
loopne
pop
fmul
jecxz
jne
push
jg
imul
arpl
addr16
fisttps
ss
or
insb
push
ljmp
jmp
add
into
cmp
dec
test
and
or
dec
scas
cmp
mov
jb
leave
inc
call
push
rcrb
in
xchg
mov
or
rep
dec
pushf
mov
test
inc
adc
and
clc
stc
pop
ja
ret
xchg
mov
pop
fsub
les
mov
add
xchg
push
les
mov
mov
movsb
or
inc
adcb
sbb
sub
shlb
mov
int3
push
sti
enter
cli
jb
call
dec
cli
das
mov
sub
es
push
push
dec
sti
filds
fadd
dec
push
enter
rdpmc
jo
test
les
pusha
mov
and
loope
sarb
bound
test
push
push
mov
dec
cmpsl
xchg
mov
enter
mov
subb
pop
push
cmpb
and
and
cmc
or
and
or
imull
addr16
test
or
lods
mov
adc
inc
ss
out
or
dec
in
scas
or
call
stc
test
push
scas
and
push
cmc
mov
xor
cmpsl
dec
lcall
imul
and
mov
and
adc
orb
stos
sub
add
adc
sbb
mov
jge
xchg
mov
cmc
mov
pop
lods
dec
cmp
scas
mov
bound
inc
cmc
xchg
test
lods
mov
sub
and
pushf
test
negb
mov
jmp
aad
adc
mov
ja
mov
paddb
stos
mov
inc
sti
or
popa
cmp
mov
arpl
dec
mov
push
xor
lods
fisttpl
mov
push
mov
inc
cld
dec
fildl
js
popa
je
das
adc
inc
movsb
mov
lahf
idiv
push
mov
or
mov
int3
jnp
das
push
mov
iret
sahf
pop
dec
inc
imul
add
iret
adc
scas
sahf
inc
xor
pop
in
test
imul
jl
sahf
jbe
sbb
sahf
sti
add
mov
fisubl
cmpsl
in
rcl
aad
stc
mov
pop
cli
jae
das
dec
in
or
out
aas
mov
lret
int3
lods
test
in
lret
roll
ss
mov
jp
fwait
cmp
das
inc
xorl
pop
mov
xchg
je
pop
mov
fdivrp
dec
sbb
imul
jg
imulb
cmp
pop
clc
pop
fiaddl
out
in
adc
xor
mov
add
repz
int3
xchg
inc
lods
stos
dec
cld
mov
pushf
out
xchg
das
push
fisubl
mov
fisubrs
les
call
sub
sbb
or
mov
and
lcall
mov
cmp
mov
jno
sarl
fcoms
loop
getsec
addl
xor
pop
sarb
test
sahf
adc
lret
pop
mov
adc
into
es
xchg
inc
fbld
sub
jno
fistps
stc
mov
xor
jle
push
pop
push
stc
pop
popf
sub
add
xchg
mov
sbb
ds
rcr
ds
stos
je
sbb
daa
cmp
pop
cmpsl
shr
imul
das
cmc
pusha
inc
fnstcw
shrb
mov
push
push
mov
js
push
jp
inc
lock
pop
in
mov
mov
jmp
test
push
cwtl
dec
sub
cmp
push
sbb
dec
les
mov
sub
fisubs
stc
dec
dec
aad
add
adc
cmp
pop
addl
and
dec
jns
leave
je
push
call
push
es
psubb
dec
rcrb
dec
mov
cld
movsl
pop
jne
lret
mov
hlt
scas
popa
cmc
addl
xchg
mov
pop
movsb
dec
lea
cmpsl
inc
mov
sub
lcall
stos
repnz
sub
mov
push
sbb
arpl
sub
dec
call
mov
dec
pusha
cmc
mov
data16
xchg
sbb
imul
out
inc
pop
out
popf
shlb
xor
ret
cmp
idivb
clc
mov
ret
faddl
mov
add
xor
movsl
sbb
dec
bswap
jmp
shll
fbld
cmp
push
lea
clc
enter
xchg
leave
arpl
lret
xchg
insl
push
fimuls
xchg
cmp
dec
mov
xchg
invd
add
clc
mov
inc
xchg
jmp
sbb
or
fwait
add
adc
sub
in
sub
jne
ret
dec
ss
sbb
ret
xor
loope
push
adc
das
xchg
pop
rcll
ret
outsl
fisttpll
adc
xchg
push
push
out
fidivl
push
pop
aad
mov
lock
enter
dec
or
pop
and
mov
or
adc
shlb
jb
neg
dec
fidivl
push
fcmove
mov
std
cmp
outsb
lret
lock
push
push
pop
cwtl
xor
out
imul
cmp
aad
add
arpl
std
xchg
daa
pop
cmp
stc
popf
insb
mov
roll
dec
dec
test
xchg
adc
pop
inc
repz
mov
loope
jne
ret
push
and
pop
shl
test
add
ljmp
std
fmuls
sub
fadds
icebp
adc
out
jecxz
xor
mov
or
test
test
dec
fwait
lret
std
out
scas
inc
xlat
or
sub
jo
cli
in
jp
push
mov
ret
cs
addl
xchg
lret
shlb
push
add
stos
xchg
jnp
inc
ja
xchg
dec
push
jae
call
stos
cmovg
and
add
or
xor
mov
mov
jg
lahf
popf
xor
sub
cmpsb
leave
je
sbb
enter
pushf
mov
and
pushf
cwtl
push
stos
mov
into
loop
jge
dec
cs
loop
xchg
pop
dec
push
push
mov
mov
xchg
leave
xor
pop
mov
lcall
pop
jmp
sub
ljmp
rorb
or
push
push
dec
daa
jnp
pusha
and
ds
loopne
in
addl
int
scas
scas
adc
xchg
jecxz
dec
insb
mov
dec
imul
dec
mov
or
push
mov
add
fistpll
es
scas
jle
xor
or
insb
sub
adc
dec
dec
ret
and
jae
xor
cs
cmp
imul
rclb
cli
sub
fildll
push
lahf
jb
cmp
add
jmp
pushl
popf
rcll
clc
pop
orb
mov
aad
dec
mov
jae
aas
sub
not
jecxz
jl
sbb
shr
aaa
es
adc
lods
movsb
xor
icebp
cmp
inc
int
lret
bound
push
addr16
add
loope
mov
insl
test
xchg
mov
adc
pop
push
cmpsl
js
cmp
xor
xrelease
pop
shr
mov
cmp
stos
popa
jmp
push
cmp
stos
pop
mov
pusha
popf
sbb
movsl
in
aas
clc
cmpsl
test
add
in
add
inc
push
push
test
cmp
stos
out
sub
fldl
push
out
jp
into
cltd
pop
fimuls
aas
jg
inc
xor
adc
popf
xor
push
and
xchg
andl
clc
jo
mov
loope
mov
mov
and
icebp
imul
fnstcw
jae
test
inc
repz
jo
push
mov
mov
jns
push
xchg
lret
and
push
mov
std
cmp
lahf
sti
and
test
adc
push
cmp
out
add
mov
call
sub
add
daa
jno
or
push
orl
mov
sub
jae
fiaddl
or
ret
stos
xchg
in
inc
push
ret
inc
fsubs
daa
cmp
test
in
test
js
sbb
mov
sbb
push
and
sbb
jg
inc
pop
inc
xor
xchg
jnp
cld
arpl
js
mov
push
xor
jle
mov
mov
sbb
sub
adc
cmp
jl
rol
jp
fsubl
adc
negl
sbb
sahf
pop
mov
xor
cltd
fmuls
or
lcall
dec
lock
push
sub
push
mov
lret
xchg
sub
pop
xchg
aad
addr16
add
andl
jecxz
jb
dec
cmc
jo
sub
dec
adc
ljmp
xchg
push
or
cmp
ja
lahf
or
lds
call
adcb
xchg
pusha
fidivrs
call
imul
dec
adc
jge
sub
popw
cmp
pop
pop
pop
mov
add
das
lcall
ficompl
mov
adc
rcrb
sbb
out
std
cmpsl
xchg
xchg
fists
dec
push
inc
sub
out
push
int3
dec
sub
mov
cld
xorl
push
push
push
jp
push
jns
mov
mov
dec
repnz
xchg
hlt
add
cmp
pop
out
lock
push
add
test
and
pop
xor
je
cmpsb
dec
in
inc
fs
push
or
addb
sub
push
xor
mov
loopne
test
out
jge
jns
scas
xor
xchg
inc
sub
xor
je
jb
aas
sbb
fdivrl
pop
sbb
push
sub
std
mov
inc
mov
fildll
sbb
es
and
sbb
mov
out
xlat
pop
mov
stc
inc
cwtl
icebp
dec
adc
xchg
out
mov
xor
dec
rorb
aaa
add
jl
push
lock
jmp
fdivs
fisttps
hlt
cmp
mov
sbbl
jg
push
scas
inc
jg
mov
popa
lcall
dec
jo
xor
add
ret
bound
xor
movsl
jp
bound
push
adc
icebp
or
mov
inc
xor
outsb
push
push
xor
dec
add
dec
sarl
movsb
imul
scas
xor
xchg
repnz
mov
mov
mov
inc
add
push
xor
mov
addr16
cld
mov
stc
loope
icebp
js
out
mov
frstor
rorb
ljmp
add
es
xor
test
pusha
mov
adc
jne
xor
or
comiss
add
push
push
test
ja
sbb
dec
push
aaa
inc
lret
dec
and
lock
push
lcall
xor
popf
popf
add
ret
mov
fsubs
ret
mov
add
fisubl
push
in
outsl
fsts
pushf
mov
ds
movsl
incl
out
fistps
push
pop
hlt
aad
mov
and
xchg
int
icebp
out
mov
jno
xchg
jmp
lret
inc
xor
mov
push
pop
int3
xor
sbb
push
jb
cs
or
push
add
xchg
mov
test
mov
push
mov
ret
lock
xor
orb
push
icebp
sbb
and
mov
or
dec
int3
or
arpl
mov
imul
jmp
jmp
aas
push
push
mov
repz
add
jo
jns
push
dec
sub
pop
lods
mov
icebp
and
pop
mov
mov
aaa
cmc
adc
je
adc
movsb
cmp
mov
stos
mov
xchg
xor
jg
jnp
in
adc
lret
mov
jnp
shr
sbb
add
nop
xchg
and
mov
dec
cltd
push
test
imul
fimuls
mov
and
aas
add
in
xchg
lahf
jno
jmp
lock
lahf
ja
dec
pop
xlat
icebp
jbe
and
push
lds
mov
int3
push
mov
fisubrs
xchg
inc
test
mov
movsb
inc
sbb
repnz
setle
call
push
jle
ret
out
jle
sub
int
movsl
mov
cmp
cmp
pop
scas
sub
push
ja
fdiv
daa
push
fisttps
and
adc
xor
dec
cwtl
mov
test
lea
cld
mov
jbe
js
dec
popf
cmp
cld
ffreep
pop
aam
test
push
movsb
push
cmp
stc
mov
fimull
push
cmp
mov
jge
mov
cmp
outsb
sub
dec
cld
andl
lds
shr
add
push
je
mov
cwtl
or
jno
jae
add
mov
sub
jne
loop
xor
jo
xchg
pop
adc
inc
shlb
jne
test
out
jmp
mov
ljmp
aam
hlt
movsb
stc
xor
xchg
push
add
in
test
in
sbbb
cmp
ret
xlat
lcall
clc
loop
inc
test
mov
movaps
jne
mov
mov
xchg
dec
cs
sbb
cmpsb
ds
add
add
or
jae
int
pop
hlt
repnz
fcoml
sub
dec
jmp
or
adc
mov
test
xor
add
arpl
sbbb
repnz
xlat
imul
fistpl
jo
push
push
inc
pop
xor
out
xlat
test
hlt
pop
imul
arpl
and
fstl
movsl
xor
xchg
into
notb
ret
adc
aad
ret
adc
gs
rolb
xchg
dec
jo
fildll
and
scas
scas
icebp
insb
into
fcomp
mov
dec
outsb
cs
and
rorb
cmp
loop
pop
fcomps
mov
push
cltd
sbb
sahf
negb
ret
aaa
aaa
xor
push
or
cmp
push
sbb
sub
psrld
pop
adc
call
dec
xchg
add
int3
mov
sub
stc
sbb
xchg
sbb
aad
pop
jp
xlat
movsl
cmp
aaa
cmp
adc
inc
inc
loop
pop
pop
fnclex
inc
fdivl
jae
pop
cmc
scas
pop
mov
lea
xchg
or
and
rolb
lods
imul
cmpsb
addr16
cmpsl
push
mov
gs
ret
lret
out
mov
aaa
sbb
jnp
sub
popf
jo
push
add
clc
fsubrp
jle
shrl
cmpsb
mov
sahf
out
popf
add
add
mov
sbb
mov
dec
or
loope
sahf
daa
cmp
int3
dec
fnstcw
mov
mov
shl
mov
adc
popf
iret
out
push
cmpsb
dec
xor
sbb
sub
testl
add
adc
dec
jb
je
mov
lock
add
cmp
pop
xchg
cmp
addb
shr
inc
mov
cmp
jb
push
inc
mov
inc
and
push
push
jnp
lret
fists
sub
add
jae
xor
push
movsl
jns
hlt
sub
sub
les
insb
icebp
div
dec
dec
mov
enter
fstl
or
cmp
sub
cwtl
jo
je
and
jbe
sub
repnz
mov
cmp
push
push
adc
and
ret
clc
cmpsl
mov
repz
or
and
sub
popa
xor
aam
imul
addr16
ds
ret
mov
jb
test
mov
icebp
sbbb
imul
icebp
daa
das
bound
loopne
into
inc
cmc
lods
mov
ss
or
out
in
testl
out
pop
sub
fwait
adc
neg
out
pop
sub
int
das
sbb
push
mov
jno
orb
and
push
rcl
cs
cmpsb
mov
cmp
test
cmpsl
mov
out
xor
push
push
aam
and
outsl
std
cmp
out
adc
sarb
sbb
lcall
movsl
ljmp
std
cmp
outsl
int
movsl
mov
loopne
push
mov
xchg
xor
rcr
popl
outsb
jl
cmp
xor
adc
xor
ret
pushf
and
lods
adc
jmp
test
mov
mov
dec
xor
xor
sub
pop
mov
jae
mov
imul
mov
ds
jno
dec
inc
rolb
adc
mov
in
push
push
pop
ss
sbb
dec
scas
mov
outsl
adc
pusha
mov
das
push
mov
fisttpll
aam
ret
ret
mov
add
mov
sbb
je
cmc
jb
and
jbe
cmp
jo
test
stos
test
scas
lret
jmp
jecxz
push
or
add
loope
outsb
sub
inc
jo
sbb
fcmovbe
add
xor
jmp
or
popf
dec
jmp
andl
sub
popa
xlat
add
push
mov
icebp
dec
xlat
pop
xor
and
imul
jle
inc
adc
dec
icebp
push
repnz
pop
push
sbb
mov
lods
mov
or
in
fisubrl
mov
je
ja
adc
bswap
sub
dec
bound
cmp
movsl
aad
mov
lods
adc
movsb
push
dec
mov
lds
jp
adc
ljmp
rol
leave
imul
out
lret
sti
lods
and
fidivl
lods
adc
mov
cli
push
push
bound
jge
cmp
scas
fisubl
add
pushf
fsubrp
pop
fstl
push
popl
cs
mov
push
clc
fcmovne
fwait
mov
pushf
into
or
mov
fldt
mov
and
xchg
push
pop
in
rcr
mov
imul
aaa
jnp
xor
std
jbe
mov
sub
sub
sub
mov
push
sub
push
mov
nop
jae
or
add
cmp
lea
pusha
dec
sub
lock
stc
and
stos
adc
outsb
pop
and
loopne
push
jg
adc
mov
pop
repnz
es
leave
dec
mov
cmpsb
inc
daa
lahf
shl
enter
hlt
xor
std
and
cmp
push
stos
dec
mov
cmpsb
aaa
pop
daa
jp
xchg
lods
pop
push
rorl
iret
lret
sub
jl
xadd
mov
cmp
clc
lea
aas
pop
dec
ds
xchg
sbb
pop
sti
inc
or
or
loop
iret
inc
arpl
xchg
adc
xchg
loope
test
iret
stc
push
inc
push
icebp
andb
adc
xchg
je
aam
xchg
mov
es
push
insl
add
lods
xchg
pop
movsl
mov
mov
sub
sub
dec
pop
movb
sti
xchg
std
sub
popf
ret
mov
inc
mov
pop
pusha
fimull
or
xor
cli
jo
loope
ds
push
mov
popf
int3
jne
dec
mov
ret
rep
andl
lret
loop
push
ret
mov
add
jns
and
test
cmp
dec
into
jle
arpl
enter
in
test
out
es
adc
aas
xor
xchg
dec
les
jns
movsb
mov
jecxz
in
divb
xor
pop
scas
jp
xor
mov
orl
ret
inc
and
test
test
sbb
dec
mov
add
jg
xor
mov
lods
push
sbbb
int3
cmpsb
mov
and
int
loopne
pop
arpl
mov
dec
jno
jae
pushf
pop
leave
or
mov
pop
push
cmp
in
out
inc
sarl
jbe
dec
jp
data16
sbb
mov
mov
adc
sub
dec
sbb
div
or
mov
and
call
aaa
lods
aam
adc
in
idivb
aam
sub
sub
loopne
rolb
mov
ljmp
jmp
bound
push
jl
mov
add
xor
sbb
loopne
adc
jecxz
imul
ret
jl
loopne
mov
jno
cmp
xor
loop
pop
pop
inc
aam
push
adc
ljmp
scas
pop
mov
in
fidivs
mov
mov
fistpl
mov
jecxz
mov
jns
cwtl
fildll
mov
push
or
cmpsb
mov
data16
push
ds
insl
fcmovu
dec
xor
mov
xor
ja
sbb
inc
addr16
mov
sahf
dec
aam
sub
int3
pop
mov
push
lret
decl
or
rcr
dec
fsubr
adc
mov
rorl
adc
mov
insl
lahf
clc
or
es
notl
pop
inc
into
sbb
cmpsb
fisubl
hlt
dec
dec
cmp
ja
mov
jge
lret
lret
inc
fstpt
out
mov
or
in
stc
inc
in
mov
adc
inc
push
scas
notb
lock
lods
mov
shll
ljmp
lcall
adc
adc
mov
cli
and
mov
adc
pop
cwtl
lock
cwtl
js
imul
cmp
insl
enter
fnstsw
pop
push
jge
mov
outsl
sub
mov
es
xchg
mov
mov
outsl
pop
push
inc
loopne
cmpb
aam
inc
or
sub
pop
stc
fsubrs
adc
mov
pop
push
jmp
outsb
sub
mov
push
and
or
mov
enter
jns
pop
sub
pop
imul
cwtl
sub
fldl
jns
divb
mov
mov
xchg
xchg
nop
js
enter
sahf
cmpb
pop
ret
or
push
repnz
cmp
mov
adc
xor
insb
sbb
mov
inc
inc
out
mov
jmp
xor
xor
fsubs
dec
pop
jbe
pop
inc
fs
cmp
push
pop
push
or
hlt
adc
xor
xchg
mov
fcompl
pop
pop
mov
and
and
pop
mov
icebp
mov
fimull
stos
jmp
adcl
xchg
scas
das
in
jmp
xchg
repz
adc
mov
enter
dec
imul
xchg
and
jns
sub
lods
dec
or
movb
jge
mov
cmpsl
mov
test
cs
dec
adc
push
in
addl
sub
imul
pop
movsb
cmc
decl
addb
orb
inc
lret
mov
cmp
popf
mov
loop
xor
fwait
xchg
in
int3
fwait
jmp
std
sub
push
mov
and
inc
aad
pop
xchg
orb
add
push
test
cld
lods
arpl
stos
outsb
dec
jge
mov
push
insb
mov
cmp
mov
sbb
mov
or
mov
jecxz
clc
xchg
and
xchg
push
adc
into
or
pop
sbb
fildll
xchg
scas
adc
aam
sbbb
icebp
inc
cmc
shlb
xchg
jl
lock
das
imul
mov
gs
add
in
aaa
nop
popf
fidivl
pushf
jl
divb
push
into
cmpl
clc
outsb
dec
add
aas
or
cmp
xor
test
xor
cmp
pushf
fcoml
mov
fs
notb
push
mov
pop
mov
imul
arpl
xlat
push
sbb
mov
clc
jl
sti
mov
lods
pop
fstl
rorl
rclb
ret
push
rclb
push
insl
mov
jg
sbb
push
fmul
or
es
mov
jg
shld
lea
jns
pop
fdivs
in
push
xchg
pop
fwait
test
or
xor
xchg
mov
mov
mov
sub
push
jge
aas
mov
mov
in
stc
sub
aas
xlat
mov
and
xchg
mull
pop
arpl
pop
cmp
jmp
add
xor
sbb
dec
jae
cs
push
hlt
xchg
dec
pop
dec
leave
or
data16
movsl
mov
adc
mov
test
jb
test
mov
cmpsb
xchg
dec
rcrl
loope
imul
adcl
and
pusha
push
iret
lods
mov
inc
fldt
lock
cmp
push
xchg
scas
test
js
push
or
cmc
imul
ljmp
sbb
adc
stc
xor
jmp
sbb
mov
cmpsb
fbstp
test
fcomps
or
loop
lcall
jo
cmovs
stos
pop
cmp
mov
imul
ss
push
imul
inc
std
pavgb
scas
sub
outsl
pop
sbb
adc
aaa
lahf
cltd
ljmp
dec
and
mov
cmc
jb
adc
lea
fisubrl
mov
mov
and
and
push
sbb
insb
fadd
hlt
and
pop
stc
inc
jmp
jo
insb
cmp
pop
sahf
cmc
das
ror
push
data16
js
inc
xchg
and
mov
icebp
pop
cmp
pushl
movsb
das
lock
jns
dec
repz
icebp
test
ret
in
in
fcmovu
mov
and
dec
dec
mov
xchg
pop
loope
or
and
jne,pn
cmc
sbb
mov
mov
sub
xor
xor
push
inc
push
lret
loopne
or
pop
adc
out
lea
and
insb
or
adc
dec
fwait
xchg
mov
out
jle
cmp
push
xchg
mulb
push
cmp
push
outsl
mov
xor
jecxz
push
scas
std
cmp
dec
jp
mov
and
js,pt
ljmp
mov
adc
in
imul
push
popf
dec
cltd
push
jg
add
into
pop
cmp
pand
jle
inc
repnz
int3
lcall
inc
mov
adc
push
cmp
jp
fimull
ror
push
jae
xchg
sub
jne
cs
jl
in
and
push
inc
ja
and
arpl
stc
fistl
arpl
sub
sti
mov
adc
mov
lret
hlt
notb
cmp
jg
pop
sbb
mov
mov
fbld
stos
add
mov
lea
pop
pop
les
mov
lods
push
lds
mov
addb
cwtl
add
xor
sbb
dec
outsb
out
fdivrp
enter
gs
lret
xor
jnp
xchg
or
cmp
sbb
or
repnz
in
push
into
xchg
mov
cmp
xlat
mov
lock
push
mov
adc
movsl
sub
dec
mov
out
push
pop
mov
push
mov
imul
xchg
cwtl
cwtl
xor
addr16
lea
inc
cmp
daa
xchg
mov
das
test
jecxz
cmp
mov
mov
icebp
add
push
inc
dec
xchg
mov
aas
mov
xor
or
push
scas
xor
inc
ficomps
dec
jno
test
mul
xor
mov
push
add
lcall
sub
inc
xchg
lods
cmp
cld
xchg
imul
add
mov
lods
out
push
jmp
cmp
dec
mov
stos
inc
mov
dec
push
repz
push
mov
mov
pushf
dec
repnz
push
ljmp
sti
add
mov
repnz
imul
nop
mov
ret
sbb
cmp
xchg
jne
into
and
call
add
icebp
dec
cmp
xchg
mov
mov
pop
lret
mov
jg
and
fs
hlt
add
out
push
insb
dec
scas
pop
mov
lfs
cld
out
ret
lea
adc
subb
and
outsb
ds
mov
cli
lcall
xor
jae
imul
nop
sub
ss
pop
subb
cmc
jnp
paddq
jecxz
push
shll
lahf
fisubl
mov
mov
ret
mov
nop
fldl
and
add
decb
pop
xor
stos
stc
imul
in
jns
jmp
or
fadd
mov
scas
iret
loope
xor
adc
sti
popf
pop
xchg
mov
or
test
imul
cmp
repz
push
imul
iret
test
xor
xchg
test
sub
rcll
cltd
and
sahf
aaa
imul
mov
and
xor
push
cmc
pop
repz
sbb
fdivrs
pop
out
inc
xchg
cmpsb
adc
mov
adc
ss
jns
add
out
cmp
mov
sub
cmc
nop
push
xor
jmp
mov
mov
mov
aad
in
jl
adc
in
cmp
and
jl
add
sti
out
mov
add
lds
enter
xchg
lds
mov
xorl
rcrl
imul
lret
in
lea
outsl
cltd
fs
push
out
sbb
fisubrs
cli
mov
jo
outsb
jl
pop
shl
jge
add
out
mov
pop
aas
fisubs
in
jns
shll
fsubl
push
stos
daa
mov
dec
scas
outsl
dec
add
xor
pop
xchg
sbb
test
insl
xchg
mov
push
push
mov
cltd
inc
push
inc
pusha
sbb
sti
cli
lcall
inc
mov
push
testl
jp
sti
xor
dec
pushf
add
mov
test
pop
and
in
int3
mov
cmp
adc
rorb
or
mov
jg
subl
repnz
out
in
xor
fsubr
add
in
mov
js
inc
push
cltd
adc
pop
es
or
push
push
pop
iret
adc
in
mov
daa
adc
test
mov
out
mov
inc
aam
inc
adc
mov
aam
inc
adc
repnz
dec
nop
data16
cmpl
push
sub
mov
push
repnz
cmp
mov
inc
sub
xlat
inc
push
ljmp
mov
xor
push
icebp
lods
or
je
out
jmp
mov
pop
inc
dec
mov
and
add
mov
scas
imul
repz
shll
enter
into
fiaddl
call
sub
popf
xadd
push
loope
jo
div
ret
mov
push
fimull
sbb
cld
sbb
adc
leave
scas
ficompl
push
rcl
jne
pop
xlat
adc
jb
xchg
mov
imul
sub
cld
or
cmpsb
xor
int3
pop
jp
ja
cmp
stc
das
jno
sub
adc
mov
loope
push
shrb
mov
sbb
cmp
insb
test
xor
enter
stos
cmpsb
vsqrtpd
cmp
outsl
inc
icebp
das
enter
jo
xor
in
mov
add
pop
dec
push
shrl
dec
xchg
or
pushf
cmpsb
into
movsb
xchg
cmp
xor
mov
xchg
es
popa
hlt
cmp
xor
testb
mov
mov
push
sbb
xchg
pop
adc
dec
mov
das
ret
pop
xchg
int3
out
mov
addl
fwait
adc
mov
jne
aad
out
es
rolb
pusha
jnp
lods
lock
test
inc
cmp
sub
das
out
jecxz
subl
lcall
dec
inc
ljmp
lods
mov
pop
pop
sub
aad
dec
popa
push
mov
adc
mov
mov
into
adc
std
xchg
sbb
or
push
mov
jns
fisttpll
clc
scas
dec
dec
int3
les
lahf
lea
ret
cmp
jl
mov
sub
jae
aad
sbb
inc
pop
rcll
or
cmpsb
mov
sbb
and
into
pusha
inc
cltd
xor
shlb
movsl
js
push
inc
shl
xor
mov
push
cmp
xchg
cmpsl
inc
cmp
mov
subb
es
scas
adc
movsb
into
bnd
dec
cwtl
fsts
jne
and
lahf
les
loop
rolb
das
bound
lret
xchg
add
test
out
lods
jbe
mov
or
adc
and
imul
push
data16
imul
and
mov
fs
in
roll
add
adcl
pusha
roll
outsb
dec
das
dec
pop
push
and
push
add
mov
bound
testb
imul
addr16
das
sbb
cmp
xor
mov
pop
xorl
xor
mov
lahf
add
mov
inc
and
sbb
cmp
dec
mov
adc
aam
stc
xor
and
or
ss
jnp
sub
dec
fwait
jge
dec
popf
aaa
jp
jle
cwtl
popf
sub
jb
sbb
pop
repnz
sub
mov
pusha
pop
push
ja
imul
test
mov
add
jle
xor
pop
ljmp
adc
fsubs
pop
push
push
push
imul
pop
mov
pushf
cmpb
xlat
dec
js
insb
andps
add
sbb
sub
addb
push
std
stc
gs
rcl
pop
mov
cli
ficoms
std
pusha
iret
call
out
inc
stos
push
dec
push
jnp
je
pop
fnstsw
dec
sahf
or
int
mov
cwtl
lods
push
xchg
in
inc
pop
inc
in
add
shrl
push
or
xor
in
xchg
sbb
icebp
les
mov
mov
stc
test
xchg
add
pop
jae
gs
fwait
in
push
mov
imul
mov
xchg
hlt
push
inc
xor
xor
das
outsl
push
popa
mov
sbb
enter
xchg
mov
aaa
mov
xchg
pop
nop
mov
aas
xchg
push
test
test
xchg
inc
mov
lock
mov
dec
jb
xchg
sbbl
mov
jae
sbb
decb
and
dec
inc
jecxz
xchg
fidivrs
mov
int
ds
push
dec
imul
test
add
push
lock
nop
add
dec
pop
jmp
jecxz
mov
jae
mov
cmp
push
jne
pop
mov
pushf
sub
push
mov
mov
mov
dec
cmovg
pop
cmp
push
jg
inc
dec
cltd
stc
fisttps
sbb
or
mov
aaa
xor
or
push
mov
xor
or
out
in
and
push
jle
pop
icebp
fs
and
jg
ljmp
dec
mov
sahf
mov
add
dec
mov
mov
outsb
roll
sbbb
xchg
out
and
dec
dec
pusha
adc
test
and
xor
addb
xchg
xor
call
inc
outsb
cmp
xor
popf
inc
xchg
pop
sarl
xchg
in
inc
or
fnstcw
testb
icebp
lret
sahf
lods
add
xor
jecxz
rolb
in
ljmp
xchg
pop
aad
enter
stos
addr16
test
test
imul
jge
and
pop
jg
cmp
adc
insb
xor
add
or
add
push
inc
andb
mov
test
adc
mov
shll
sub
pop
movaps
cmpsb
hlt
sbb
test
mov
lea
daa
inc
cmp
xlat
ja
shl
add
inc
mov
add
mov
sbb
dec
repnz
cltd
repnz
inc
loop
outsl
mov
mov
aam
mov
outsl
cmp
sti
mov
repz
addr16
cmp
sbb
add
sub
inc
into
rcl
pushf
mov
sub
stos
movsb
stos
xor
iret
shll
loope
fcomps
mov
pop
mov
incb
jmp
stc
and
andb
call
add
or
int
insl
aad
jmp
iret
lahf
mov
pop
push
and
insl
out
or
and
fidivrl
jno
inc
in
notl
enter
inc
lock
jle
cwtl
cmp
rcll
push
repz
dec
pop
inc
out
enter
jae
pop
aas
jb
ljmp
inc
lods
imull
inc
aad
add
cltd
popf
mov
ret
nop
sub
scas
pushf
sbb
pop
icebp
add
cmpsb
or
inc
sarl
inc
cmp
add
je
ja
outsl
xchg
jae
rcll
add
in
inc
or
or
hlt
ret
nop
scas
iret
cli
loop
in
cmpsl
pop
mov
push
cltd
mov
sub
movsl
jb
out
xor
pop
jge
add
jno,pn
jbe
in
sbb
xor
sub
push
lret
xchg
sub
rcrl
adc
pop
je
rolb
push
jle
xchg
cmc
push
pop
outsl
add
push
inc
popf
int
jg
test
aam
mov
decl
fsubl
mov
insl
inc
fidivrs
out
fs
sahf
and
mov
jns
pop
sbb
xchg
bound
popa
or
shlb
pop
sbb
int
into
cmpsl
or
data16
iret
rorl
pushf
dec
scas
jae
fcmovb
push
xor
out
lret
imul
dec
mov
pop
mov
xchg
inc
in
pop
test
or
adc
push
clc
test
cld
mov
jg
dec
cld
xor
mov
adc
sub
fcomip
movsl
pop
dec
addr16
add
sbb
cwtl
stc
insl
das
jecxz
mov
xchg
in
fadd
mov
xor
andb
push
dec
dec
aaa
insb
cmp
and
push
aad
dec
ljmp
repz
cmp
xor
mov
mov
jnp
jno
inc
movsl
jno
add
in
cltd
imul
aas
push
jecxz
lret
sbb
jbe
loop
push
call
inc
or
xchg
mov
mov
inc
or
addl
fisubrs
adcl
rcrb
sahf
or
lahf
imul
daa
daa
outsl
xor
aas
and
pop
adc
fdivrs
and
ret
push
push
inc
sbb
lea
nop
jnp
scas
sbb
sbb
cmp
mov
popf
outsl
dec
fimull
leave
std
lods
aad
push
pop
jmp
mov
jmp
sti
dec
iret
jne
add
cmpsb
in
fcmovnbe
idivl
adc
push
jbe
test
cld
int3
cs
add
aam
inc
adcl
lahf
ret
adc
neg
outsb
mov
jb
sbb
and
cmp
jmp
mov
cli
js
stos
adc
xor
jle
mov
push
lahf
andb
xor
dec
cli
push
into
lret
cmp
cmc
adc
arpl
mov
mov
mov
xchg
insb
addb
mov
icebp
and
xchg
popa
pop
lods
shl
es
dec
addr16
mov
maxps
jns
xchg
sub
repnz
mov
popf
jl
or
ret
lret
sbb
scas
sbbb
shr
push
push
or
fstpl
xchg
or
sti
outsl
es
sbb
repnz
xchg
and
jno
sub
push
cmpb
insl
xchg
insl
jle
mov
push
jge
mov
xchg
jae
mov
xlat
jmp
stos
and
cmpl
fcomps
sti
sub
lcall
mov
sbb
mov
lea
xor
push
ds
roll
cmp
insl
out
mov
mov
in
std
sub
mov
add
xchg
aas
cmp
and
sti
jo
jg
xchg
sub
rclb
stc
out
xor
dec
outsl
push
pushf
cmpsl
and
outsb
aad
mov
and
mov
mov
mov
mov
lds
mov
nop
push
lret
push
icebp
mov
push
add
aam
je
mov
xchg
leave
in
in
imulb
stos
mov
sti
cli
and
stc
mov
cmp
lods
jb
sub
mov
sbbl
cs
mov
xor
pusha
in
jecxz
or
dec
out
mov
test
cmp
es
and
xchg
add
lds
movsl
adc
cmp
adc
pop
sbb
fsubs
rorl
jbe
dec
and
mov
loope
mov
mov
cs
not
movsb
stc
nop
in
int3
cmpsb
daa
mov
xor
jp
pop
sti
push
sub
inc
sub
iret
addb
je
ja
pop
pop
outsb
test
pop
sahf
ja
push
cmc
xchg
or
or
cwtl
push
jl
xchg
jo
mov
pushf
dec
rcr
jle
adc
cmp
mul
mov
je
adc
ffreep
mov
hlt
adc
add
mov
les
and
mov
dec
inc
ret
clc
in
test
mov
sbbb
outsb
ror
sti
outsb
ret
loope
out
cmp
mov
mov
dec
cwtl
adc
sbb
xchg
add
jle
out
lock
cmpsl
and
pop
or
dec
push
sbb
mov
fcmovnu
push
iret
test
test
adc
mov
movsb
xor
lcall
arpl
xor
xrelease
testb
rclb
sbb
insl
stos
inc
cmp
popa
cmc
aad
loop
gs
xor
jns
das
popa
aas
iret
mov
or
adc
call
mov
sub
addl
loope
xor
and
test
sahf
xchg
and
dec
dec
movsb
sub
adc
test
out
and
and
xchg
push
mov
cld
add
push
mov
push
popa
pop
dec
test
mov
and
adc
stos
popa
xchg
mov
and
sbb
cmp
pop
je
xchg
sbb
pop
shrl
xchg
sbb
mov
fimull
adc
jecxz
aas
scas
inc
into
loope
rcrl
jp
sbb
pop
dec
xlat
adc
mov
in
pop
sahf
xor
inc
jne
jne
outsb
fimuls
push
xor
mov
mov
outsl
in
sub
inc
push
scas
rol
mov
xchg
sub
push
push
xchg
movsl
es
dec
out
cmp
push
fiaddl
addr16
lcall
or
inc
fmul
sbb
addb
push
lahf
test
and
movsb
push
movsb
out
fs
aaa
and
jns
std
aas
mov
mov
cld
adc
inc
cmovs
stos
lret
or
add
add
daa
sbb
cwtl
inc
jmp
jmp
jns
push
cmp
jg
push
fsubrl
sub
loope
mov
pop
mov
inc
sbb
sub
hlt
scas
daa
lahf
adc
xor
dec
sbb
cmp
push
mov
pop
and
addr16
test
mov
loop
shrl
inc
popa
loop
dec
mov
popa
pop
mov
inc
ret
loope
mov
call
ret
lret
xor
and
add
out
inc
inc
mov
jecxz
dec
mov
adc
ror
cld
mov
or
mov
aaa
push
popa
and
pushf
mov
add
test
rorl
mov
mov
dec
mov
sbb
mov
inc
cmp
fxtract
shr
xchg
rcll
loope
stc
pop
push
scas
sti
popf
subb
or
pop
cmp
pusha
dec
insl
dec
cmp
sub
outsl
outsb
insl
sbb
dec
repz
push
mov
lcall
loope
iret
inc
push
in
filds
ss
les
fsubl
cmp
xchg
cmp
neg
pop
je
adc
movlps
stos
sub
inc
out
inc
inc
adc
or
bound
pusha
xchg
addr16
lret
push
push
repz
or
xchg
mov
xchg
inc
movsl
xchg
out
hlt
subb
mov
daa
mov
pop
mov
mov
mov
jb
xchg
out
mov
dec
shl
test
push
fmuls
fisubrl
insl
lcall
insb
jno
or
dec
std
and
clc
dec
cs
sahf
xchg
aas
dec
xchg
inc
cmp
and
push
xchg
cli
icebp
outsl
sbb
add
push
add
inc
pop
pop
dec
inc
imul
or
add
out
mov
clc
push
sbb
cmp
xchg
sbb
pop
pop
or
mov
icebp
dec
add
and
aas
mov
jg
xchg
clc
mov
cwtl
stos
xor
xchg
lahf
jge
add
xlat
insl
lds
int
sub
jmp
loopne
jmp
push
pop
push
mov
adc
push
sbb
xchg
aas
or
mov
insl
in
mov
inc
sub
adc
rcrl
add
push
icebp
lcall
rcrl
les
in
pop
inc
or
or
push
into
subb
pop
pop
dec
orb
pop
mov
jae
ret
sbb
sub
mul
out
xchg
nop
or
ja
dec
dec
fs
push
jbe
inc
jb
outsl
push
xlat
adcb
sahf
push
ficomps
xor
cs
bndstx
daa
sbb
inc
testb
lret
xor
stos
jnp
stos
lret
xor
pop
pushf
mov
shl
test
pop
aam
pop
dec
push
xor
mov
pop
xor
ret
add
push
pusha
es
sbb
jmp
inc
pop
loop
cli
lods
ret
jmp
mov
aaa
aaa
or
xchg
push
xchg
cli
enter
ret
enter
add
dec
and
into
fildll
inc
inc
fs
es
or
dec
sub
adc
add
sub
sbb
mov
mov
adc
pop
push
neg
mov
or
push
leave
pop
out
and
mov
mov
pop
mov
sahf
shlb
add
cwtl
and
lahf
scas
push
add
mov
jmp
dec
ret
test
xchg
aad
icebp
inc
push
stos
sbb
cs
icebp
cltd
lods
cmp
int
mov
in
int
push
dec
adc
cmp
daa
xor
push
mov
clc
inc
iret
pop
lods
loop,pn
sbb
add
mov
jo
cmc
pop
in
sub
stos
test
shrl
adc
mov
jno
pusha
repnz
dec
xlat
and
jl
mov
lret
scas
dec
ljmp
out
das
adc
in
je
out
and
adc
dec
push
xchg
pusha
ret
adc
pop
lods
in
push
sbb
inc
xlat
adc
sbb
call
lahf
or
push
cmp
pop
push
cmp
outsb
and
jo
jecxz
mov
add
add
and
ret
lock
aam
mov
fistpll
shll
lods
insl
cmp
adc
jbe
addl
xor
mov
insl
flds
call
loop
lret
roll
fistpl
adc
daa
sbb
pop
bound
daa
shll
pop
stos
mov
sbb
cwtl
mov
mov
pop
or
xlat
loopne
iret
pop
movsl
inc
xchg
insb
int
dec
addr16
xlat
cmp
adc
cmp
cs
mov
jle
xchg
sub
jmp
cmc
lret
cld
out
pop
fnstcw
or
icebp
push
cmp
dec
cltd
mov
pushf
lahf
es
mov
xchg
fadd
inc
sub
shl
push
jge
stos
ja
adc
sbb
add
data16
aas
mov
and
aad
add
push
cmp
pop
inc
aaa
jecxz
repnz
movsl
jmp
les
and
fidivrl
bnd
nop
inc
adc
int3
jg
pop
out
xchg
in
mov
cmc
or
aam
mov
and
movsb
aaa
test
lods
dec
pop
out
testb
pop
das
and
pop
incb
je
stos
pop
popf
jg
and
aam
xchg
mov
jns
mov
and
pop
mov
cmp
cli
xchg
pop
aad
loop
sub
loope
out
ja
mov
lea
nop
sbb
outsl
sbb
movsl
sbb
loop
jnp
lock
into
pop
push
jns
xchg
scas
in
push
sbb
mov
sahf
lret
and
fstpl
fdiv
or
xchg
and
lahf
mov
ss
xchg
jns
cmp
and
jle
push
clc
in
insl
shld
shrb
push
dec
or
ja
jns
push
lods
out
push
dec
dec
insl
out
or
in
mov
bnd
mov
or
fldcw
loop
loop
shlb
jo
faddl
scas
ljmp
in
inc
dec
pop
cmp
repz
adc
clc
dec
inc
bound
je
dec
xchg
xor
aam
or
cmp
add
or
rol
mov
lahf
pop
lods
adc
add
push
sti
jg
out
in
lret
sti
jb
or
xchg
mov
push
mov
sbb
mov
les
mov
movsl
out
pop
sbb
std
and
pcmpgtd
imul
call
in
fldcw
inc
aaa
out
mov
cld
testb
cmp
fucomp
xlat
ljmp
add
ret
push
adc
dec
dec
fidivl
dec
mov
les
pop
popf
lahf
lret
add
sub
push
jmp
aad
outsb
cmp
mov
inc
cmp
dec
xor
dec
adc
das
adc
pop
cltd
pop
dec
fstps
dec
out
stos
std
fcmovb
lret
adc
lods
jle
lods
lahf
sub
cmp
aam
in
or
lret
push
lea
push
repz
mov
aas
and
pop
dec
push
pop
add
add
sbb
outsl
orl
inc
test
xchg
mov
xor
inc
scas
push
fcompl
pop
outsb
xchg
jno
cmp
lcall
int3
fnstenv
dec
repnz
mov
fsubs
sub
xorb
mov
js
out
jnp
int3
ljmp
jae
jl
push
les
mov
fwait
and
sub
adc
stos
jl
or
stos
ja
shrb
add
lods
pop
lock
jle
sub
xor
sub
test
dec
cmpsl
jo
and
add
jle
mov
orl
ret
fcoml
mov
pop
xchg
mov
ret
push
andl
mov
adcb
dec
in
sub
fistpl
mov
push
cltd
inc
les
xchg
fiaddl
jp
adc
pop
lcall
aad
xchg
add
shrb
mov
ret
sub
or
rcr
mov
lea
mov
loop
ss
jge
gs
cwtl
aad
mov
imul
jmp
lcall
cmpsl
pop
add
dec
in
js
cmp
or
mov
add
cmp
push
imull
sub
ja
lret
hlt
aam
or
daa
lods
jno
movsb
ret
sti
cmp
sbbb
pop
inc
cmp
push
add
fwait
lea
mov
mov
sub
adc
rolb
mov
push
inc
iret
enter
fildll
inc
jae
cld
sbb
cmp
inc
movsl
sub
xor
je
xor
jbe
dec
pushf
sub
jb
inc
idivb
test
insl
jb
sti
xchg
xlat
popa
or
and
arpl
mov
orl
mov
push
pusha
loope
pop
sbb
inc
jle
lea
stos
and
popa
jae
pop
outsb
add
scas
sti
jge,pt
jmp
loope
pop
cmp
fimull
outsb
lea
fwait
xchg
mov
mov
sbb
pop
jnp
push
dec
fs
addl
fstpt
adc
cmp
push
sub
mov
cmp
mov
push
or
sbb
cltd
hlt
mov
scas
mov
mov
faddl
mov
hlt
push
clc
fcmovbe
mov
push
ret
mov
xor
stos
pop
xchg
xchg
jg
stos
insb
jg
and
jmp
fwait
add
sub
mov
jp
mov
push
popf
cli
xor
test
lods
sub
je
and
and
pop
lea
xor
cmp
xchg
mov
mov
ja
sub
xorl
in
pop
pop
sub
sbb
pop
jmp
or
add
in
inc
clc
out
pop
pop
test
cmp
xor
imul
jns
jmp
sahf
in
push
loopne
bound
lret
sbb
jge
out
shl
popa
sarl
xlat
jg
cld
add
xchg
and
or
out
lret
or
sub
push
in
or
add
test
jo
ljmp
les
xchg
lahf
hlt
cmpsl
clc
xor
stos
cmp
enter
insl
and
push
mov
push
int
fisubl
and
lds
ja
and
pop
xchg
cltd
dec
inc
stos
mov
icebp
mov
aas
sub
out
test
add
rcll
sbb
fnstenv
push
push
rol
fstps
pop
movsl
jg
cmpsb
jns
imull
inc
or
and
jle
cmp
and
daa
aaa
gs
pop
fldl
inc
js
sub
pushf
xchg
push
ljmp
mov
nop
cmp
xchg
push
sar
xlat
test
cmpb
popf
cmp
jo
jle
jnp
das
mov
lret
and
fsubrs
push
inc
mov
jecxz
pop
pushf
push
and
sbbb
movsb
push
cmpsb
fstpt
movsl
add
mov
pop
xor
shlb
cmp
das
popl
mov
jns
imul
out
cmc
lods
and
xchg
sub
xchg
ret
xlat
lods
lods
mov
pop
mov
or
mov
inc
testb
int3
xchg
sbb
daa
jg
push
cmc
adc
ds
daa
mov
xor
je
xchg
iret
outsb
xlat
dec
push
xchg
push
jo
popl
aam
pop
and
add
push
ds
add
div
push
pop
and
add
movsl
push
push
aad
jg
mov
in
in
push
xor
shrb
inc
insl
xchg
mov
not
rclb
stos
sub
les
mov
sub
adc
mov
arpl
cmc
sbb
or
xor
es
inc
or
xor
xlat
pop
in
addl
cld
ds
les
btc
xchg
lret
arpl
or
les
push
pop
sbbl
lock
mov
out
cmpsl
push
push
jmp
movsb
dec
mov
inc
arpl
sbb
mov
loope
ljmp
repnz
lahf
mov
fsub
sarl
or
add
loop
inc
sbbl
and
dec
xchg
sub
subl
test
and
or
inc
in
int
cmpsl
lahf
enter
mov
xor
jecxz
or
sti
mov
ret
jae
inc
out
std
add
mov
and
sub
or
std
dec
stos
mov
in
sub
in
sub
iret
in
fucomp
pop
es
imul
mov
xor
outsb
ljmp
mov
roll
push
arpl
scas
xor
clc
sub
aas
aaa
je
xor
in
loope
aas
sbb
pop
mov
into
sbb
aas
pop
dec
mov
enter
push
jmp
adc
ret
mov
adc
insl
in
test
imul
adc
dec
and
sbb
mov
setns
lods
cmp
mov
mov
lss
je
pop
pop
push
sbb
lahf
mov
and
mov
mov
mov
jns
test
sub
dec
stos
or
insl
jge
push
mov
push
xchg
or
outsl
insb
mov
jp
pop
push
mov
repnz
sahf
lret
rcr
fnsave
pop
hlt
jae
push
mov
mov
jmp
and
adc
xor
mov
pop
jo
mov
mov
mov
sbb
add
inc
mov
add
std
sbb
test
and
jo
jb
mov
fisttpll
ret
loope
popa
jno
outsl
insl
mov
pop
cld
add
mov
push
adcb
and
stc
mov
add
mov
jno
arpl
sub
outsl
mov
or
adc
lds
fsts
negb
mov
cmp
cli
subb
scas
pop
lret
inc
push
jnp
pusha
gs
jno
sbb
dec
icebp
jecxz
lcall
push
push
sub
dec
xor
into
or
mov
adc
mov
stos
pop
aad
jne
iret
frstor
or
or
aam
std
push
popa
mov
cltd
xor
pop
mov
repnz
repnz
daa
in
addr16
xchg
shrl
xor
xor
push
jmp
loopne
mov
shll
or
lahf
sbb
mov
pushf
mov
sub
pusha
jle
mov
push
inc
mov
rorl
mov
inc
enter
sub
cmp
pop
out
test
inc
fildl
push
rorb
add
adc
fisttps
rclb
ja
cmp
sbb
in
xor
sub
add
or
jne
cmp
and
leave
cli
pop
daa
pop
mov
adc
arpl
push
adc
das
lret
loopne
add
inc
daa
subl
xchg
jne
add
push
enter
jl
jl
lods
adc
or
adc
mov
insl
mov
scas
icebp
loop
cwtl
cmp
sbb
in
jp
mov
cmp
mov
iret
xchg
rcll
push
jns
xchg
sahf
das
jae
push
incl
add
sbb
adc
jno
aad
dec
xchg
adc
sti
push
repz
sahf
sbb
dec
sbb
add
pop
aad
lret
sbb
icebp
ss
sub
add
sub
mov
jae
or
pop
or
push
cs
jmp
cmc
or
add
sbb
mov
aaa
mov
loope
imul
sub
dec
mov
js
stos
iret
negl
popf
inc
mov
sbb
dec
movsb
fimuls
mov
cmp
frstor
lods
mov
nop
mov
inc
ret
pop
data16
lahf
js
and
arpl
aad
adc
adc
jp
push
pop
pop
cltd
mov
xchg
xor
jg
sub
mov
jne
adc
fistps
adc
xlat
push
adc
test
dec
xor
fistl
int3
sub
and
roll
in
or
fisttpll
out
ret
je
pop
push
frstor
mov
inc
scas
clc
mov
push
pop
inc
sub
xor
add
or
push
mov
lds
and
insl
xchg
sub
nop
scas
jmp
lret
pop
mov
ja
or
push
nop
inc
jbe
insl
packssdw
add
push
push
lret
test
stos
in
pop
fisubrs
xchg
sub
lock
int3
pusha
arpl
dec
hlt
das
arpl
cld
xor
aad
enter
lock
leave
sbb
data16
jmp
and
jp
mov
xchg
scas
lods
aam
ljmp
cmp
sbb
ljmp
pop
mov
xchg
cmpl
inc
push
out
sub
int
outsb
imul
pop
sub
adc
std
push
test
xor
rclb
jge
xor
jp
pop
fidivrl
push
and
leave
xchg
iret
dec
inc
jno
or
sub
hlt
inc
filds
das
sbbb
inc
mov
outsl
sub
loop
xor
sbb
rorb
lods
mov
out
out
ss
jp
cmp
fisubrl
jns
cmpb
dec
popa
xor
cmpb
inc
sarl
xor
jp
inc
ret
lods
loope
sbbb
pusha
jb
xchg
xchg
mov
mov
pop
adc
jae
sub
fadds
jnp
pop
ljmp
fsub
cmpsb
adc
cs
xor
loop
pushf
fbld
xchg
popf
and
int3
and
fs
test
in
mov
sbbb
sub
ljmp
cli
adc
jno
pop
inc
lock
ja
sbb
cs
pop
orb
pop
xchg
imul
push
jae
add
jle
ret
lea
cli
cltd
or
lret
data16
pop
fiaddl
dec
mov
stos
int
imul
rcrb
jl
fst
push
in
dec
pop
out
add
sbb
inc
lret
cwtl
loope
dec
mov
outsb
pusha
adc
pop
inc
shl
ror
mov
adc
or
cmp
push
shll
adc
outsl
mov
dec
jp
cmpsl
jmp
and
je
stos
mov
scas
xor
aaa
in
push
iret
fstpt
loopne
daa
popf
adc
cli
sub
or
fsubr
andb
dec
leave
cwtl
jl
and
xchg
jb
xor
stos
jae
cltd
inc
or
arpl
call
push
mov
pushfw
popf
cmp
in
mov
jno
dec
and
cmp
hlt
push
fmull
shll
int3
jnp
loope
ja
hlt
xchg
mov
lds
push
test
mov
fwait
adc
xor
arpl
sbb
push
inc
call
lods
ja
decb
or
mov
out
cli
in
jl
test
lahf
icebp
jge
test
or
or
cmp
cli
push
push
popf
sbb
ljmp
mov
into
dec
or
pop
inc
imulb
movsl
aas
mov
imul
sbbl
jne
mov
incl
mov
jl
es
aam
pop
jmp
and
jle
rcl
adc
xchg
stc
in
addr16
ja
out
add
int
dec
in
movsb
dec
inc
popa
je
rcll
in
push
add
int
aam
into
pushf
or
std
add
and
and
cmp
ret
jo
mov
adc
ret
sub
ds
jle
xor
add
or
into
cmp
xchg
sub
dec
int3
dec
lahf
inc
sti
mov
mov
flds
jns
xchg
testb
aad
sub
ficoml
pop
repnz
pop
mov
mov
js
xchg
mov
dec
lret
loopne
adc
stos
mov
push
mov
inc
in
sub
pop
jnp
sub
xlat
xor
cmp
dec
mov
xor
ds
inc
or
out
jle
mov
pop
xor
imul
xlat
ja
sahf
std
jo
inc
push
into
add
and
cli
dec
outsl
sbb
aaa
xor
and
cli
pop
xor
mov
adc
adc
cmp
daa
sti
lret
pushf
ror
rorl
mov
pop
xchg
inc
bound
repnz
and
add
hlt
mov
dec
mov
dec
mov
inc
out
je
cmp
pop
xor
push
cmpb
push
xchg
mov
jo
sub
cmp
roll
lds
into
lret
testb
push
test
cmpsl
jmp
adc
mov
mov
scas
sbb
addr16
xchg
cli
sub
jmp
leave
mov
adc
stos
push
insb
int
leave
cmp
mov
adc
adcl
sbb
jg
dec
scas
xchg
push
xchg
cmp
test
mov
push
sbb
dec
icebp
xchg
jb
shll
aam
arpl
clc
aad
add
jecxz
aas
dec
sub
aad
push
lcall
lock
xchg
rcr
in
inc
or
call
aad
lds
loopne
andl
inc
lahf
adc
cld
popf
stos
ds
dec
sbb
mov
add
sub
add
xchg
adc
sub
mov
push
sbb
jnp
cmp
scas
mov
cli
sti
add
push
push
jl
pop
adc
push
shl
xchg
in
sub
popf
popa
das
xchg
and
xor
imul
sub
inc
and
xchg
sbb
imul
aaa
cmp
sti
fdiv
cmc
jne
jecxz
jbe
inc
bound
out
xchg
xchg
mov
xchg
xor
sbb
mov
scas
adc
cli
ffree
insl
adc
jl
decl
xor
lret
mov
pop
inc
pop
pop
dec
insl
hlt
ss
push
imul
mov
ss
adc
popa
inc
and
jns
add
mov
scas
sub
out
dec
cmc
adc
popa
inc
out
sti
sub
rcrb
jg
push
adc
das
and
fxch
jns
jo
es
inc
stc
xchg
shr
or
fsub
sbb
psubd
mov
xor
test
adc
push
adc
pop
mov
lock
mov
in
pop
outsl
loop
dec
sbb
lds
pop
fistpl
or
cltd
sbb
inc
or
pop
imul
or
mov
fwait
push
adc
xchg
pop
add
js
loop,pt
push
js
lods
fdivrs
push
push
rorl
and
mov
adc
fstl
enter
cs
jmp
mov
sub
mov
or
or
add
mov
jle
adc
dec
mov
adc
mov
lahf
out
pusha
shll
and
mov
push
sbb
fwait
mov
push
stos
aaa
xor
and
popa
jmp
sbb
xor
clc
inc
and
ja
out
sub
pop
pop
adc
xchg
lret
add
xor
out
jo
sbb
and
inc
popa
or
shl
xor
sbb
adc
jne
push
push
cmp
mov
gs
mov
mov
xchg
mov
sbb
add
insb
das
imul
mov
out
xlat
das
cmc
xor
hlt
mov
aaa
int3
jne
test
sub
push
push
push
mov
xchg
mov
sub
dec
out
lods
stc
inc
addr16
or
adc
std
sub
pop
dec
gs
and
movsb
insl
fiaddl
pop
pushf
cs
pushf
jge
push
sbb
pushf
ss
and
mov
std
add
icebp
add
loop
popa
or
lahf
outsb
adc
das
and
insl
or
push
inc
lret
je
cmp
jo
jecxz
movsb
std
mov
test
neg
sbb
pop
dec
mov
gs
adc
pop
inc
push
test
adc
pop
pop
call
fstps
xchg
push
push
mov
dec
arpl
adc
fwait
xlat
fmul
jne
push
push
sar
sub
arpl
dec
fistps
fs
icebp
enterw
mov
xor
mov
mov
les
xor
cltd
inc
dec
inc
outsb
sbb
lods
mov
add
arpl
jl
fsubp
and
push
rorl
inc
sub
js
adc
and
sbb
fildl
mov
es
or
mov
data16
adc
rcl
inc
aam
inc
push
ljmp
movsb
stos
mov
into
dec
xchg
pushl
fistpl
sbb
adc
jp
clc
xchg
pop
xchg
arpl
fisttps
mul
popa
jecxz
int
ljmp
push
or
sub
bound
mov
dec
nop
push
rclb
ja
mov
sbb
sbb
inc
clc
lret
add
ficomps
adc
push
fwait
outsb
cmp
push
scas
lock
mov
pushf
loope
call
arpl
dec
sahf
out
cmpsb
push
dec
mov
push
cmp
stos
sub
scas
sbb
data16
adc
lahf
push
dec
xor
movsb
sub
pusha
pop
cli
add
or
jl
cmpsl
cmp
mov
push
dec
stos
cmp
cltd
cmp
xor
fmull
and
xchg
mov
scas
mov
dec
or
int3
out
inc
scas
repz
pop
xchg
pmulhw
pxor
pop
push
mov
cmc
in
packuswb
fisubrs
pushf
xor
xchg
imul
xchg
pop
stos
out
nop
push
xchg
mov
mov
dec
xor
in
jae
cmc
jb
outsl
mov
push
mov
fsubrs
sbb
sub
add
cmp
push
test
int
repnz
mov
push
outsb
sub
test
loope
pushf
xor
and
sahf
insl
or
pop
cmp
nop
daa
mov
lods
movsb
jo
fidivrl
xchg
add
rorb
shl
sbb
inc
jnp
push
sarb
dec
lods
sbb
dec
push
push
push
mov
fisubl
mov
ret
xchg
leave
ja
cmp
out
gs
push
mov
pop
repz
cmpsl
mov
or
cld
daa
in
jmp
mov
ret
jno
vfrczss
bound
add
popf
aad
les
in
xchg
pop
test
lcall
xchg
mov
pop
or
push
push
mov
add
out
lods
mov
sahf
inc
push
xchg
lret
hlt
scas
cmp
repz
pop
xchg
sti
push
andl
xchg
lret
lock
mov
cmp
sub
ret
nop
adc
sbb
xchg
in
lcall
dec
inc
pop
sbb
add
pop
ljmp
stos
sub
das
in
push
outsl
jecxz
xchg
sbb
lret
notl
sub
xlat
jg
add
daa
in
jge
gs
adc
cmp
loope
lahf
ret
hlt
pop
pop
xchg
add
das
jmp
pop
mov
and
jle
imul
push
loop
mov
arpl
pop
enter
pop
scas
lret
in
pop
pop
mov
fs
cmpsb
fldcw
cli
sub
cli
movsl
cmp
jg
rorb
pop
inc
xor
pop
mov
std
or
in
stos
jmp
mov
fst
lret
xchg
and
leave
mov
mov
sub
inc
pop
push
pop
add
sub
jae
pusha
leave
mov
push
popa
icebp
out
cwtl
xchg
dec
adc
addr16
fildl
sub
push
adc
mov
ffreep
enter
scas
ret
fdivs
ljmp
xchg
add
inc
lods
clc
stos
lcall
andnps
je
addb
cmpsb
xor
mul
pop
push
int3
mov
mov
gs
xor
pop
insb
and
mov
push
cmc
fs
cmp
cmc
fldt
push
push
push
add
insl
js
push
ljmp
out
cmp
cmp
loopne
fwait
mov
incl
rcl
insb
adcl
mov
ficoml
callw
fildll
dec
pop
xchg
adc
lret
cmp
cmpsl
andb
bound
fnstenv
jg
jecxz
cmpsl
jmp
mov
icebp
jns
mov
mov
sbbb
notl
lret
nop
add
mov
inc
decl
push
imul
inc
jnp
je
mov
adc
imul
fiadds
dec
into
inc
add
inc
dec
dec
daa
xchg
das
out
jmp
or
lahf
cmp
out
bound
pop
andb
cld
int
loop
cmp
popf
out
lock
pop
daa
data16
inc
jno
pop
ljmp
movsl
sub
mov
andl
in
inc
aad
ja
and
pop
sub
xor
out
pop
mov
test
pushf
pop
pop
mov
jns
ss
movsl
mov
je
mov
mov
mov
cs
fs
mov
test
mov
sub
pushaw
pop
cmp
add
and
insl
test
shlb
jb
mov
xorl
jbe
daa
rolb
mov
lds
add
push
push
mov
pop
cmpsb
out
add
mov
mov
or
adc
xchg
cmp
jge
jno
inc
dec
int3
mov
test
fwait
dec
loop
test
jmp
pop
dec
mov
mov
iret
aaa
shll
mov
jbe
xchg
sub
jno
mov
dec
repnz
cmp
mov
push
inc
jmp
dec
cmpsb
push
pusha
mov
jg
dec
jnp
push
push
push
cmp
fmull
and
bound
adc
mov
push
jbe
adc
and
ja
rcll
scas
dec
jbe
mov
push
push
pop
aas
dec
mov
je
ljmp
fsubl
push
pop
jecxz
push
mov
inc
bnd
and
imul
push
jle
push
ss
and
sub
push
int3
jbe
add
dec
dec
loope
test
mov
sub
dec
lcall
xchg
jno
jo
push
jp
cmp
dec
jnp
dec
mov
mov
cmp
leave
int3
ret
scas
dec
es
pop
jns
jmp
cmp
or
insb
lock
mov
mov
adc
adc
cmp
cmpsl
orb
sbb
hlt
sub
repnz
push
cmp
or
xor
mov
stos
xchg
arpl
test
sbb
mov
fisubs
imul
inc
sbb
in
xchg
mov
test
std
xchg
xchg
test
movsb
dec
sub
insb
sbb
dec
popa
mov
dec
and
mov
dec
inc
cwtl
fnstcw
movsl
out
into
addr16
lret
popa
jmp
mov
rcll
mov
cmp
sbb
dec
inc
imul
orl
push
mov
mov
push
add
jnp
and
test
pop
rcrb
xor
mov
xor
test
mov
xor
mov
sti
mov
sbb
mov
mov
scas
jl
xchg
aad
sbb
das
loop
jbe
jae
push
xchg
xor
bound
ds
ss
sbb
scas
sbb
ss
adc
test
arpl
or
sub
int
fwait
or
cmp
add
subb
pusha
cmp
push
pop
fwait
add
sub
repnz
das
data16
push
lret
in
movsb
in
mov
jb
sub
or
into
pop
and
out
ljmp
negl
xchg
jp
mov
jns
add
in
mov
and
lods
int
mov
jge
jecxz
sarb
lcall
xor
iret
imul
mov
mov
mov
sti
fdivs
adcb
jecxz
inc
push
fistl
aas
jmp
std
cmp
out
lods
shll
aad
push
outsb
imul
mov
and
movsl
cmp
hlt
outsb
add
jg
lcall
cmp
add
ret
and
out
xor
inc
fcmovne
aam
pop
call
inc
pushf
lcall
jnp
jb
and
mov
das
bound
mov
inc
test
xor
int
xor
daa
jmp
or
mov
jbe
sti
ret
lods
cmpsl
sub
pusha
add
jnp
xchg
outsl
jno
pop
loopne
fldcw
sbb
cmp
jmp
orb
ds
adc
js
fsubs
and
xor
xchg
add
xor
xchg
jecxz
rorb
pop
push
repz
pushf
push
adc
mov
sub
dec
aaa
rorb
cld
rcll
ja
and
fcoms
fimuls
lods
or
mov
ficompl
cmp
js
mov
mov
dec
mov
leave
xor
push
inc
clc
testb
in
fcmovnb
scas
and
xor
sub
add
add
icebp
loope
xor
imul
in
call
pop
sahf
or
and
cmpsl
adc
movsl
inc
daa
ret
stos
addl
fldt
out
mov
aad
pop
int
roll
out
and
rorb
popa
cwtl
mov
lods
inc
mov
call
outsb
add
aas
or
dec
mov
pop
jecxz
nop
cmpsl
fdivrl
jmp
test
out
cld
mov
imul
inc
xor
imul
cmp
push
mov
scas
xor
aaa
mov
jg
lock
in
data16
sbb
je
lods
cmp
dec
push
jmp
dec
cmp
jecxz
sti
test
cltd
sbb
cmc
and
test
pop
sub
push
inc
jge
mov
scas
shlb
mov
sbb
lahf
js,pn
leave
movsb
and
adc
insb
pop
mov
testl
addl
inc
pop
sahf
repz
jae
mov
xchg
int3
mov
roll
pop
pop
or
adc
pop
ss
pushf
int
push
std
push
stos
in
inc
movsb
xor
mov
cmc
or
icebp
shl
mov
mov
call
push
lock
popa
faddl
nop
xchg
sub
and
cmpb
or
cs
lcall
mov
cld
nop
dec
push
xchg
pop
and
sti
shlb
xor
lea
cwtl
popa
movsl
cmp
mov
lret
sub
sub
add
lock
call
in
inc
dec
jmp
or
push
sub
sbb
pop
das
xchg
cli
lods
popa
cmovne
bound
sub
jmp
adc
fstl
int3
shl
mov
mov
test
popf
mov
dec
addr16
adcl
ficomps
lcall
les
lahf
pop
mov
outsl
pop
xor
mov
notb
xchg
mov
adc
orb
leave
push
aam
ljmp
pop
adc
sti
jp
mov
inc
or
and
push
xchg
das
cli
scas
bound
mov
add
adc
or
or
sbbl
inc
sbb
sub
push
popa
lds
or
out
and
outsl
lret
lret
inc
iret
mov
daa
add
cmc
jno
lcall
and
jns
imul
cmc
cmpsl
push
jno
inc
inc
lods
lret
sti
cmp
mov
jle
mov
imul
pop
cli
mov
hlt
add
sbb
xor
enter
sbb
movsb
fld
add
mov
sub
xchg
add
inc
outsb
adc
stos
cmp
push
leave
shl
mov
les
sbb
xchg
inc
imul
and
fs
nop
in
add
iret
scas
test
stc
pop
sbb
jl
cmp
imul
sbb
pushf
sub
mov
nop
js
shrl
push
jg
imul
pop
xchg
mov
cmpsl
stc
gs
inc
mov
popf
test
jle
xor
jmp
xorb
insb
jg
or
jae
fstpt
into
mov
fwait
push
mov
adc
in
popa
xchg
sbb
into
out
jbe
rorb
inc
pop
cli
jne
xchg
jge
xchg
hlt
cmp
das
daa
repnz
push
cmp
cld
adc
jb
fcomps
test
dec
scas
pop
js
and
and
pop
jg
lea
xor
in
jne
xchg
imul
stos
rcll
aam
mov
add
cltd
test
push
mov
mov
jp
xchg
jecxz
and
xchg
out
cmp
std
adc
shr
dec
sbb
int
mov
xchg
pop
outsl
xchg
push
push
iret
add
xor
cmp
shll
lret
cwtl
inc
sarl
pop
xor
movsl
scas
cs
adc
dec
inc
xor
and
gs
bound
sahf
jno
cmp
xchg
and
loope
arpl
out
daa
gs
push
cmc
push
push
std
lahf
mov
mov
data16
xchg
leave
rcll
mov
jnp
pop
fsubrl
mov
fistpll
mov
iret
test
push
cwtl
lahf
jnp
adc
arpl
xorb
jmp
adc
lods
cmp
push
or
out
es
mov
push
pop
fstpt
push
jne
dec
pop
xchg
pop
push
sub
addr16
repnz
cli
mov
mov
outsb
fmull
mov
loop
stos
inc
push
mov
iret
jecxz
push
sub
cld
or
sahf
loope
mov
pop
call
ret
push
sub
pop
testb
mov
imul
aam
or
inc
jnp
inc
pop
test
out
add
pop
dec
divl
lret
mov
into
xchg
mov
daa
daa
mov
adc
push
call
lds
ss
call
add
or
or
sahf
xor
mov
mov
test
in
add
mov
sbb
cld
test
inc
jecxz
sub
xchg
call
sbbb
mov
sub
pop
push
imul
sbb
fbld
test
ret
lret
lea
divl
sahf
add
lahf
fbld
xor
xchg
aad
add
insl
dec
lds
loope
cmc
and
push
xchg
test
pop
ja
jge
push
mov
pop
mov
daa
pop
jo
mov
push
test
push
xor
aas
ja
adc
push
add
mov
push
sbb
cmp
mov
leave
es
arpl
xchg
mov
pop
pop
fwait
mov
cs
and
and
movsb
dec
data16
mov
sbb
sub
lcall
mov
popf
jp
add
cmc
or
cmp
mov
mov
inc
stos
mov
insl
cmp
inc
sub
stos
test
adc
mov
push
out
pop
xlat
push
mov
cmc
lret
xchg
add
jmp
dec
outsb
pop
and
insl
push
sub
push
icebp
stc
cmp
fs
jmp
out
lret
xor
or
pop
xor
fisttps
pop
lods
ror
or
mov
addr16
out
repz
xor
fsubs
int3
inc
jle
or
hlt
nop
add
jns
add
and
popa
in
xor
mov
adc
jnp
push
xchg
cmp
scas
jae
enter
xchg
in
movsb
js
dec
loop
add
sbb
pop
xchg
mov
aad
out
add
in
movsl
test
xchg
pop
cmpsb
push
sub
lds
mov
dec
mov
pop
xchg
scas
es
subb
cli
lock
clc
pop
cmp
push
movl
int3
xchg
jbe
fwait
or
movsb
sub
jecxz
cmc
jae
push
cmpsb
aam
popa
int3
dec
fnstenv
add
and
sbb
mov
shlb
sub
sbb
std
push
xchg
lcall
sub
call
xchg
pop
cwtl
in
fs
aam
mov
and
pop
fsts
movsb
repnz
mov
jnp
xchg
idivl
ljmp
xchg
pop
sub
fiadds
xchg
xchg
adc
mov
into
popa
add
sub
cmpsb
or
jno
mov
and
xor
push
pop
nop
xor
leave
lock
adcl
sub
ss
ljmp
call
ljmp
push
mov
adc
xchg
mov
lock
out
xor
jns
aaa
push
test
mov
sbb
mov
mov
pop
push
xor
or
mov
pop
mov
shll
mov
ret
adc
push
enter
ret
cmc
lcall
jae
cmp
inc
jmp
in
cld
xor
les
xchg
adc
jne
popa
xchg
jno
fsubl
ret
lret
clc
jge
loope
pop
add
or
xchg
ret
jnp
loop
sbb
repz
jne
cmp
aas
lret
adcl
js
push
cli
cmp
sub
popa
jl
add
fsubs
adc
lcall
cld
dec
inc
mov
daa
cs
cmpb
inc
and
dec
lret
and
and
jae
out
push
stc
mov
out
push
lds
cmc
xchg
out
lock
jae
xor
dec
add
jne
ss
aad
inc
dec
ja
xor
into
and
or
dec
movsl
in
out
cltd
icebp
ljmp
push
inc
orb
pusha
sahf
fiadds
jbe
dec
mov
fcoms
or
mov
mov
enter
pop
mov
push
loop
dec
fnstsw
inc
iret
lods
fistpl
rcl
sbb
pop
push
les
adc
pop
dec
jno
shrb
lods
inc
loop
sub
mov
cltd
stos
out
mov
cmp
mov
inc
data16
cli
or
or
pop
aam
pop
mov
insl
push
push
push
push
dec
adc
sti
js
or
push
pusha
enter
cmp
pop
call
xlat
jmp
and
imul
imul
mov
pop
and
test
jge
pop
push
js
xchg
sbb
sbb
xorl
fiadds
adc
ficompl
imull
push
push
shlb
dec
dec
push
shlb
cmp
and
lock
mov
into
scas
mov
in
inc
cli
sbb
jns
mov
mov
push
pop
sbb
mov
add
repnz
ret
std
sbb
icebp
das
shr
in
jecxz
lock
jp
pop
insb
pop
sbb
lret
pushf
cmpsb
mov
inc
testl
push
cwtl
enter
sbb
mov
push
in
pop
mov
sub
add
outsl
cwtl
out
mov
push
xchg
adc
push
imul
dec
cmpsb
mov
pop
mov
lret
flds
and
addr16
shl
arpl
push
or
data16
out
addl
or
cld
orl
mov
cs
inc
out
fmull
mov
mov
insb
pause
jecxz
dec
insb
inc
mov
xchg
daa
push
adc
mov
out
jno
imul
dec
mov
push
push
add
test
stos
loop
mov
and
add
jae
mov
xor
ret
pop
fwait
dec
sbb
idivl
xor
mov
mov
stc
mov
jnp
sar
in
cli
in
xor
or
xchg
lret
gs
jbe
test
push
add
or
jge
clc
gs
mov
xchg
xchg
icebp
add
sbb
fs
das
incl
out
call
lcall
mov
add
js
popa
cli
xchg
push
cmp
sahf
push
xchg
popa
adc
fisttpll
push
mov
and
add
mov
mov
subl
inc
fs
cltd
aas
sub
sub
xchg
mov
call
mov
pop
fldenv
je
clc
jp
outsb
ds
mov
or
push
sarl
imul
push
dec
test
sbbb
fcompl
fwait
data16
add
cmp
mov
jnp
add
pop
shlb
adc
mov
fs
test
cs
dec
pop
fs
xchg
lds
sti
sahf
or
ja
jle
pusha
outsl
xchg
push
mov
dec
adc
pushf
push
inc
fldpi
cmp
in
int
jl
cmpsb
arpl
pop
jne
adc
mov
dec
lret
pop
stc
and
pop
int3
int3
push
enter
add
and
sbb
xor
ret
int
fimull
mov
pop
sub
and
imul
dec
fdivl
jge
lods
bound
outsb
aam
add
pop
pop
icebp
lret
mov
sbb
push
lret
test
and
lcall
push
jne
sbb
add
mov
jg
shld
fisubrs
cwtl
jnp
fildl
scas
movsb
test
cmpl
push
mov
push
mov
enter
add
sub
push
cmc
movsl
sbb
xchg
adc
sti
ss
pop
sub
jg
icebp
xchg
rcl
xorb
testl
mov
jp
hlt
std
out
pop
into
jge
sub
lods
xchg
into
lahf
cmpb
or
sbb
shlb
pop
pop
jp
sahf
icebp
xchg
pusha
or
xor
pop
jae
int3
xchg
inc
jns
xor
loopne
push
add
setns
mov
arpl
cmpsb
adc
mov
adc
je
sub
jle
xor
loopne
sub
out
je
pop
fists
pop
shrl
cmp
xor
xchg
mov
loop
std
pop
jg
jo
xlat
push
leave
sahf
sbb
leave
xchg
mov
insb
xchg
sbb
add
in
cmp
loop
gs
std
add
sbb
aaa
fst
mov
fwait
scas
push
shrl
roll
and
push
jg
mov
jno
jne
adc
push
mov
pop
or
lret
adc
xor
inc
mov
lds
outsl
into
pusha
rol
add
lock
test
jl
pop
or
inc
xchg
sbb
push
and
xchg
pop
out
pop
sti
int
push
daa
dec
cmp
movsl
rdtsc
xchg
or
cld
addl
pop
add
int
pop
popf
insb
xlat
sbb
mov
push
cwtl
icebp
inc
mov
jns
xchg
pop
arpl
or
add
or
pop
int
loop
or
fnsave
or
into
shl
in
cmpsl
mov
pop
or
out
add
and
xor
jne
or
ficoms
pusha
shl
es
pop
testl
add
cmp
loope
std
sub
mov
adcb
imul
cmp
sbb
cld
mov
int3
aaa
xlat
add
mov
lret
test
pop
bound
jno
push
xor
xchg
adc
fldl
mov
xlat
push
add
mov
cmp
xchg
and
or
xor
pop
push
and
sub
mov
sti
fstl
daa
lret
cmc
jns
dec
loopne
loope
sbb
sub
cmpsl
call
jns
xor
push
jmp
stos
sub
xchg
xchg
ds
fisttps
int
leave
mov
cmp
lret
ret
aas
loop
add
add
call
xor
int3
fstl
and
js
mov
mov
mov
popf
fxch
cltd
push
mov
sub
scas
out
push
add
pop
and
xor
in
mov
sbb
mov
xchg
cmp
add
decl
mov
lds
xchg
push
cmpsb
xchg
mov
xor
push
push
bnd
fistps
loop
aam
push
lahf
push
ss
in
jg
stos
mov
dec
lods
and
dec
xor
fbstp
mov
lcall
mov
dec
inc
push
xchg
adc
cmpsb
js
fisubs
or
adc
cli
bound
sub
lds
lods
push
fdiv
adc
mov
icebp
sahf
ja
jecxz
add
pop
push
daa
adc
xor
pop
mov
mov
dec
push
out
cmpsl
lret
icebp
mov
push
mov
dec
lods
jp
pop
loope
push
dec
loope
sbb
insl
sbb
sbb
inc
fildl
ja
ja
mov
sub
inc
push
push
adc
cmc
addr16
xchg
loop
into
loop
stc
mov
adc
shlb
leave
pop
xchg
enter
out
pop
or
push
mov
xlat
pop
mov
lock
cmc
mov
pop
sqrtps
test
je
cmpl
int3
push
icebp
lods
add
in
cmpb
repz
ret
inc
sbb
mov
jb
rorb
sub
adc
fs
or
xchg
lcall
sbb
jl
push
imul
xlat
mov
adc
fmul
mov
dec
std
popa
addr16
and
call
int
ss
loopne
push
sbb
dec
cmp
cmp
inc
mov
push
push
cmp
ret
mov
cmp
or
and
cld
cmp
testb
lret
out
push
dec
sti
add
lahf
subb
dec
mov
jp
xor
add
std
adc
test
pop
push
sub
scas
sub
add
test
enter
jge
pop
cmp
movhps
or
cmp
dec
and
mov
dec
cld
push
mov
shlb
mov
or
shld
inc
push
sbb
pop
adc
outsl
xchg
sub
lahf
mov
pop
vshufpd
adc
pop
cmpsl
xor
adc
sbb
xor
cltd
sub
push
xchg
mov
ds
jecxz
ss
sbb
jg
sbb
aaa
dec
testl
and
sbb
jne
cld
hlt
call
cmc
in
mov
mov
je
jae
fucomi
dec
jecxz
rcr
int3
sti
mov
sub
out
add
daa
aad
fwait
cli
xchg
cmpb
repnz
xchg
aaa
pop
jne
test
and
and
sbb
insb
loopne
jae
stc
cmp
mov
ljmp
jp
lods
repz
jp
insl
jmp
std
int3
outsb
mov
dec
mov
sbb
int
mov
mov
lret
jp
xchg
mov
movhps
sahf
scas
mov
xor
mov
fsts
mov
fcmovbe
js
mov
call
dec
inc
push
adc
mov
aam
aam
or
popl
push
and
xchg
ret
rclb
ffreep
gs
push
lret
in
test
pop
push
jmp
arpl
and
inc
call
mov
inc
push
mov
cmp
shrb
or
sbbl
out
insl
loope
mov
xlat
ss
lock
test
cmp
lock
test
imul
into
shl
push
cmp
aad
or
popf
jecxz
and
pop
fisubs
pop
insl
clc
dec
sahf
stos
pop
sbb
fidivrs
or
pop
mov
nop
xchg
pushf
lahf
add
adc
push
int
sbb
lcall
negb
pop
xchg
inc
dec
add
sbb
ja
add
fucomp
push
mov
adc
xchg
mov
popl
cmp
das
push
addr16
stos
call
dec
imul
inc
inc
iret
jns
xchg
pop
mov
call
or
push
ljmp
js
std
adc
je
mov
movsl
or
lds
sbb
lahf
or
add
add
push
in
mov
xchg
jp
mov
out
mov
enter
adc
pop
jl
cmp
lods
scas
mov
pusha
jne
out
mov
aam
pop
jl
or
movsl
adc
mov
out
daa
fcmovbe
sub
dec
xchg
loop
adc
outsb
push
push
pop
jmp
call
loop
sub
push
mov
mov
mov
pop
mov
je
aas
mov
xor
popa
movsb
pop
mov
push
dec
rorl
das
hlt
sub
hlt
adc
push
xor
lods
jns
jne
push
sbb
int
subb
sbb
mov
jnp
pop
lods
mov
test
adc
xchg
mov
and
gs
sub
movsb
mov
stos
or
jbe
lcall
orl
loopne
mov
sbb
push
in
aam
les
lds
dec
shll
xlat
loop
sub
add
out
cmpsb
pop
or
scas
sti
push
and
ret
leave
xchg
and
gs
push
call
mov
mov
clc
xchg
inc
dec
test
stos
imul
jg
mov
clc
test
repz
mov
cmp
and
mov
or
ret
faddl
cltd
mov
das
ja
mov
pop
pop
clc
mov
and
sub
and
or
loop
jle
fsubrp
ds
stc
dec
cmp
mov
xlat
or
cs
inc
xor
and
adc
pop
push
or
cmp
hlt
hlt
pop
dec
aad
and
stos
mov
icebp
mov
addb
test
or
sti
mov
xchg
xchg
hlt
insb
add
dec
nop
cld
in
fists
adc
mov
mov
mov
data16
outsl
push
or
inc
pop
cli
mov
sbb
iret
sbb
popl
out
xchg
xchg
pop
lahf
pop
sub
insl
add
pop
push
xchg
jne
dec
fdivl
inc
push
pop
imul
or
or
mov
jnp
push
push
add
push
adc
sub
add
mov
xchg
ret
add
and
cs
mov
nop
lret
scas
xchg
in
cmp
inc
jbe
push
insl
mov
dec
cmp
lds
cmpsb
aad
mov
data16
xchg
arpl
add
ret
ljmp
cltd
cltd
clc
loop
cmc
xor
mov
xor
mov
aaa
sbb
mov
dec
jns
mov
dec
fiadds
out
add
cld
in
and
daa
pop
xor
adc
lea
xor
dec
mov
xchg
xchg
or
dec
xchg
cmp
xchg
mov
pop
cld
scas
out
cld
loop
das
fmuls
outsl
mov
sbb
add
mov
cwtl
pushf
insl
dec
or
ja
mov
pop
mov
lret
jnp
icebp
rcrl
fistpl
arpl
cmpsl
inc
mov
inc
ds
loop
inc
ss
pushf
cmp
clc
adc
in
aad
push
movsl
pop
pop
subl
stos
adc
jbe
and
pop
ficoml
jl
jo
pop
push
or
loop
cltd
mov
setg
mov
cmp
push
jns
andb
cmc
jbe
aas
pop
mov
out
xchg
loopne
mov
or
xchg
inc
push
xorl
push
outsl
jae
xchg
push
adc
mov
fsub
kmovw
dec
cmp
cli
dec
mov
pop
adc
inc
mov
bnd
jmp
cwtl
cmp
cmpsb
mov
aaa
inc
les
dec
mov
mov
clc
ss
inc
addl
add
inc
pmaddwd
jl
shrb
pushw
and
mov
std
dec
shlb
push
fwait
repnz
int3
je
imul
fisubrl
jle
sub
mov
outsb
inc
orl
mov
inc
int3
mov
and
dec
pop
cltd
xchg
push
adc
inc
ds
adc
push
rolb
pop
test
jecxz
mov
mov
outsl
mov
and
movsl
push
outsb
notb
sti
mov
jg
push
clc
fdivs
or
lods
mov
mov
shll
int3
nop
push
cwtl
pop
and
call
rcrl
std
das
int
rcr
xchg
insb
cmp
mov
popa
pop
xchg
xchg
arpl
outsl
inc
adc
adcl
pop
mov
sub
ljmp
push
arpl
js
mov
notb
ret
cwtl
push
ljmp
stc
adc
popf
idivb
lods
mov
ss
pop
push
aam
mov
sbb
daa
inc
scas
mov
mov
and
repz
leave
xchg
jmp
lods
jmp
pop
stos
dec
out
lock
cs
aas
mov
inc
xchg
je
or
inc
mov
shlb
inc
jbe
dec
data16
or
or
dec
push
imul
outsb
icebp
adc
cld
test
addb
lds
cmp
mov
jne
or
pop
clc
lock
mov
push
cwtl
out
push
xor
cmp
repnz
pop
push
fcomps
and
sub
adc
xchg
aas
rcrb
andl
xchg
inc
arpl
xchg
or
mov
pusha
icebp
jno
idivl
and
imul
adc
mov
inc
cmp
inc
iret
mov
push
xchg
arpl
jmp
insb
icebp
ret
stc
inc
fs
add
xor
das
mov
pminsw
dec
fs
mov
ljmp
jb
in
and
cwtl
outsl
mov
rcr
in
mov
mov
adc
adc
cmp
roll
lods
pop
ljmp
call
push
scas
add
dec
ds
mov
mov
fs
xor
xor
xchg
pop
push
loope
mov
push
add
les
pusha
out
lock
sub
flds
cmp
ret
and
add
mov
mov
std
and
aad
scas
cmp
jae
outsb
mov
xor
fwait
pop
orl
cmpsl
push
insb
add
pushf
cld
mov
pop
stos
cltd
add
inc
push
hlt
mov
xchg
insl
roll
push
adc
and
push
push
cld
sub
and
sahf
add
lcall
popf
jp
xchg
test
adc
fnstenv
fadd
out
out
mov
aaa
out
ljmp
enter
mov
mov
sarb
xor
test
adc
pop
insb
inc
leave
adc
cmpsb
movsb
pop
shl
and
sub
andl
jne
xlat
fstps
lods
xchg
sbb
sahf
scas
xchg
cmp
ds
cmc
and
pop
xor
mov
mov
sub
dec
les
adc
cmp
rclb
ss
js
sbb
jg
mov
xchg
push
rclb
xchg
mull
adc
push
sbb
mov
xchg
test
cmp
xchg
cld
gs
mov
xchg
cmp
push
push
mov
ret
and
je
lret
jp
jmp
push
dec
pop
mov
mov
inc
dec
sahf
adc
pop
addr16
sarl
pusha
xor
adc
shrb
nop
scas
xchg
cmp
imull
jp
stos
imul
inc
xor
mov
roll
out
push
cmpsl
cwtl
xchg
ror
push
mov
fisttpl
cmc
icebp
jae
xchg
cmp
lcall
inc
or
insl
daa
call
jae
jno
orb
js
movsb
dec
cmp
lgs
movsb
stos
lock
dec
fidivrl
shlb
pop
cli
inc
dec
or
rol
push
dec
sub
imul
mov
test
dec
jmp
and
clc
in
add
jg
pop
lods
pop
shrl
jl
test
jbe
lret
sub
das
xchg
jmp
lock
pop
sub
sbb
mov
and
mov
fisubl
and
lret
push
popf
xchg
iret
enter
dec
cmp
frstor
out
not
xchg
fwait
cmp
cmp
cltd
loopne
mov
and
stos
notl
js
data16
sub
adc
jmp
ljmp
sbb
push
push
hlt
or
add
mov
and
arpl
pop
inc
and
mov
ja
daa
js
and
jo
add
outsb
test
roll
gs
jb
jg
roll
push
imul
mov
mov
call
sbb
or
rcll
xchg
mov
push
inc
push
add
dec
orl
movsb
cmp
ja
cmp
xor
fisubs
sbb
xchg
inc
fnstsw
pop
mov
or
push
sbb
icebp
jge
int
mov
je
scas
jno
sub
clc
pop
adc
cmp
jo
js
sbb
in
outsl
inc
popa
xchg
or
adc
sub
in
jle
adc
rcr
pop
push
jecxz
xor
jle
lds
jp
shlb
fldl
outsl
jecxz
sahf
adcb
sub
cli
jns
sub
andl
inc
cmp
imul
rcrl
adc
sbb
jns
test
dec
in
and
push
and
and
jle
mov
push
and
or
xor
aam
fmuls
xor
sbb
sub
and
pop
mov
adc
in
pushf
fsubl
cwtl
fisttpl
inc
es
in
dec
xchg
sbb
jne
mov
cli
pinsrw
test
inc
sahf
js
lds
sbb
aam
mov
adc
inc
push
or
repz
adc
out
dec
xchg
and
cwtl
aad
mov
stos
jecxz
pushf
cmp
stos
dec
xchg
pop
xchg
sti
adc
loopne
add
pop
ret
jle
sti
fs
faddl
arpl
out
push
cmpb
test
sbb
jbe
or
lds
sub
xor
and
push
and
xor
or
xor
imul
pop
or
leave
mov
jne
dec
loop
jns
repz
sbb
or
mov
xor
iret
pushf
mov
in
xor
or
scas
ds
cwtl
push
dec
or
into
aaa
hlt
xchg
push
ja
cmc
lea
imul
inc
movsl
jb
aaa
jae
cmp
push
dec
lret
out
cmp
lahf
mov
dec
push
sahf
jecxz
out
jle
sahf
cmp
inc
insl
xchg
cmc
sbb
stos
add
hlt
push
andb
mov
test
sbb
xchg
test
xchg
adc
movsb
inc
scas
std
push
mov
cmp
cli
xchg
inc
jecxz
mov
cmp
lahf
inc
addr16
sbb
out
lea
nop
insb
in
icebp
or
push
fs
mov
sub
cltd
pop
xchg
mov
dec
or
push
xor
in
adc
lcall
jns
outsb
jo
sbb
and
and
call
out
push
add
xchg
cmp
xchg
adc
iret
mov
loop
in
or
mov
out
add
and
jne
xchg
or
cld
push
cmp
adc
mov
in
ror
int
hlt
icebp
pop
add
pop
dec
cmp
mov
inc
mov
lods
sbb
push
std
les
repnz
inc
aad
in
add
aad
xchg
or
pop
call
aaa
pop
sub
adc
dec
fwait
xchg
lds
add
sub
dec
lock
cmp
mov
or
xchg
jno
aam
pop
sarl
pop
mov
sub
les
test
mov
mov
int3
mov
jge
loope
lock
mov
push
mov
into
stc
push
xchg
jns
adc
jp
sbb
movsb
fstpt
out
lods
xor
pushf
aas
mulps
mov
mov
enter
and
push
rolb
movsb
xchg
out
imulb
sti
idiv
and
movsl
test
inc
xorl
scas
dec
movsl
and
mov
sub
inc
mov
lahf
and
mov
ficomps
ret
cli
lods
repz
mov
ja
cmp
rclb
jne
dec
lret
leave
mov
fnstenv
xchg
cmpsb
mov
or
aas
outsl
cmp
ret
aaa
cmp
pop
pop
or
in
pushf
xor
sub
loope
fmuls
xchg
jl
nop
add
sbb
lret
cmpsb
adc
add
xor
and
push
int3
adc
mov
lds
das
dec
push
dec
popf
dec
xchg
jo
negl
cmp
inc
icebp
stos
das
dec
movsl
mov
loope
add
jnp
movsb
jg
call
xor
ds
pop
out
test
shrl
lods
popa
push
into
mov
mov
test
test
loope
lret
push
lea
shl
fnstcw
mov
cli
adc
push
xor
repnz
lret
pop
dec
jmp
jbe
adc
dec
nop
mov
jge
andb
rcrl
jns
test
pop
or
xor
dec
pop
into
xchg
ja
imul
mov
enter
notb
inc
xchg
loope
push
lds
stos
lods
stc
test
testl
data16
lret
sub
xchg
mov
sti
ljmp
sti
sub
cmp
aaa
pop
dec
mov
aas
les
mov
pop
xor
add
pop
fisubrl
push
add
dec
pop
dec
in
xchg
js
jp
insl
addb
adc
mov
jno,pn
cmp
call
adc
lret
stc
sub
daa
loopne
mov
pop
cwtl
pop
sbb
movsb
nop
enter
cmp
loop
jg
mov
call
lods
mov
ror
pop
xchg
imul
cmp
or
imul
inc
and
stc
negb
sbb
dec
mov
and
repz
outsl
fldl
call
and
jmp
mov
movsl
cwtl
jmp
sbb
int3
inc
jecxz
mov
cmp
fldl
adc
jnp
stos
daa
mov
pusha
mov
fiadds
jmp
jb
incb
lret
addr16
xchg
pop
xchg
fsubl
xor
mov
repz
pushf
repnz
test
cmp
xor
mov
in
addl
and
pop
js
sbb
ss
nop
stc
ucomiss
push
cmpsb
jno
das
cmp
sub
shrl
dec
sub
add
pushf
adc
inc
out
fistpll
leave
xorl
mov
xor
shlb
jmp
fcomps
mov
ljmp
shl
pop
ljmp
scas
adc
fs
enter
or
pusha
aas
daa
pminsw
stc
ror
push
cmp
mov
addr16
lods
fiaddl
repz
or
pop
js
xchg
roll
aad
ljmp
into
cs
jns
dec
scas
gs
in
call
xor
pop
negb
fwait
outsb
lar
test
loope
and
inc
negb
dec
mov
add
shlb
add
dec
sbb
pop
cmp
ret
push
add
call
jl
out
out
push
sbb
xor
jecxz
jp
shl
pusha
stos
mov
jne
or
out
rcrl
jle
add
cmp
mov
iret
jne
mov
loope
fwait
test
inc
lcall
and
adc
inc
push
loop
scas
xor
and
repz
mov
pop
addb
imul
xor
test
pop
mulb
jno
stos
out
lds
lods
xchg
mov
out
and
ljmp
push
mov
adc
xchg
inc
test
xor
jg
and
sbb
icebp
inc
mov
push
out
sti
push
adc
cmc
mov
push
into
mov
repnz
xchg
dec
call
and
das
test
sbb
sahf
scas
icebp
jae
mov
push
repz
and
outsl
fidivrl
shl
xchg
popf
jns
cmp
pop
jmp
mov
inc
das
push
insb
mov
data16
lds
adc
lock
clc
out
fyl2xp1
inc
rcl
cmp
jne
jg
out
cmp
mov
stc
ss
cmp
test
push
roll
or
sar
clc
js
idivb
mov
fadd
outsl
fs
mov
dec
adcl
cld
inc
adc
aaa
sti
pop
and
push
xor
mov
pop
int
mov
xchg
or
mov
xlat
cwtl
or
jge
in
addr16
sbb
and
imul
es
sub
frstor
push
push
test
dec
dec
and
mov
out
loopne
movsl
aam
push
repnz
jno
sub
ja
sbbb
inc
mov
and
and
mov
cmpsl
inc
ds
or
and
mov
addr16
sbb
je
mov
jbe
fdiv
into
xchg
sti
pop
in
in
vaddsubpd
adc
add
nop
cmp
in
dec
js
mov
and
popf
es
dec
jb
or
jmp
incb
pop
lods
sbb
mov
movsl
subl
insl
or
pop
les
pop
cmp
and
xor
fisubrl
pop
cmpsl
pushl
into
mov
mov
popa
mov
ds
sub
dec
mov
mov
mov
dec
in
jae
mov
xor
repz
cmc
lods
sbb
xor
or
mov
pop
or
sub
push
in
push
push
fisubs
jge
cmp
push
inc
rcrl
mov
xor
fwait
sub
xchg
cltd
gs
lods
or
fdivl
mov
lret
pop
mov
jecxz
ret
sti
mov
lahf
pop
dec
movsl
call
pop
pushf
dec
dec
cmp
jne
xchg
jg
stos
adc
fadds
out
pushf
out
cmp
aas
mov
jbe
add
or
adc
cmp
mov
sbb
lods
test
dec
mov
mov
xchg
push
test
push
iret
push
xchg
inc
push
fisubrl
cmpsl
ror
push
mov
cmp
cmp
push
push
jge
sbb
int
je
clc
or
sub
jl
in
stos
out
repnz
jb
daa
into
pop
enter
jle
push
iret
inc
xchg
mov
xchg
hlt
cld
push
sahf
arpl
pop
push
sbb
js
icebp
shl
pop
arpl
cli
push
ret
inc
in
mov
loopne
adc
jg
popf
jp
jb
clc
xorl
inc
pop
push
adc
push
ljmp
sub
lods
ljmp
jns
push
stos
pop
lret
cs
or
loopne
fmuls
lock
dec
push
push
adc
push
push
cmpsl
test
inc
call
enter
gs
leave
jecxz
mov
js
scas
mov
arpl
popa
popa
cmp
adc
cltd
and
jae
cwtl
sahf
repnz
and
mov
pushf
sbb
or
int3
movsl
dec
movsb
jae
lea
jns
add
mov
cs
adcl
in
push
sbb
pop
xchg
mov
insb
addr16
lock
xchg
mov
lods
test
jnp
pushf
imul
pop
pop
lret
aad
nop
lea
xchg
mov
sub
out
push
shrb
dec
incb
and
and
xchg
insb
outsb
xchg
adc
add
mov
or
inc
movsb
lds
inc
mov
jge
jmp
cmp
push
scas
sub
dec
cmp
ds
sarl
stc
lods
adc
rcl
jecxz
mov
xchg
pop
outsb
sub
pop
or
xor
aas
mov
fst
sub
cmp
push
dec
xchg
xlat
add
lret
sarl
ret
xchg
aaa
mov
out
clc
std
push
dec
fsubl
sub
decl
lds
sti
sbb
add
adc
adc
jge
fistpll
test
or
sbb
add
add
pusha
lds
sbbb
inc
fldt
push
jno
jmp
or
jg
sub
sbb
jbe
pandn
aam
test
hlt
sub
mov
dec
sti
inc
mov
hlt
push
imulb
hlt
mov
movsl
insb
bound
xchg
xchg
fnstcw
inc
dec
mov
ss
and
mov
movsb
lea
aas
outsb
dec
int3
push
repnz
into
jl
aas
call
xlat
insl
cmpsl
jle
and
sbb
cmpsb
jmp
jmp
mov
sub
mov
cmp
in
lret
cmpsb
into
push
adc
imul
out
xchg
sub
cltd
cmpsb
pushf
add
test
sarl
ljmp
push
inc
sbb
add
pop
jmp
inc
xchg
xorl
mov
call
cmp
enter
cmp
lret
cmp
scas
add
xor
ja
jmp
add
mov
inc
fcomps
cltd
pop
jge
push
leave
pushf
jns
mov
adc
mov
loopne
add
out
sbb
movsl
xchg
mov
leave
andb
add
outsl
sub
push
cltd
xorl
pop
aam
and
pop
mov
data16
mov
adc
jno
push
push
sbb
lods
inc
push
or
pop
sub
fwait
dec
cli
test
negb
es
dec
inc
idivl
loop
mov
inc
or
xchg
aaa
scas
ja
scas
and
sbb
push
mov
xor
add
mov
idiv
aaa
in
decb
shll
jecxz
ret
ret
jb
movsl
push
xchg
loop
push
outsl
ret
mov
scas
jne
stc
pop
fildll
add
xor
std
cmp
sub
or
sub
roll
je
cld
test
cmp
out
mov
fbstp
xchg
xor
pop
mov
push
push
jle
push
insb
js
enter
xlat
mov
add
ret
sub
call
cmp
cmp
fnstsw
mov
push
pop
push
mov
sbb
clc
mov
adc
sub
xchg
push
jmp
mov
sete
mov
or
imul
out
loop
pusha
mov
inc
arpl
mov
fsts
adc
inc
xchg
out
lcall
mov
popa
jl
fsubp
lods
adc
dec
adc
std
call
andb
inc
adc
pop
outsl
imul
add
jbe
test
shll
adc
outsb
xchg
fwait
xorb
or
in
pop
mov
adc
in
cwtl
xchg
inc
mov
inc
xchg
mov
cmpsb
jge
sti
aam
pop
mov
aad
and
test
sahf
sbb
loopne
mov
jp
mov
xchg
pop
mov
jl
mov
push
not
add
icebp
push
ljmp
or
std
out
cmpsl
test
push
xorl
push
lods
cmp
xchg
mov
inc
movsb
adc
jo
movsl
and
jbe
xchg
add
and
mov
ret
dec
mov
fidivrl
popl
jbe
mov
sbb
inc
add
dec
js
xchg
cmp
xchg
adc
loope
mov
ljmp
pop
mov
inc
fsubrs
xor
sub
mov
lret
sub
mov
or
pop
popf
mov
je
pop
sti
sub
xlat
enter
shll
lcall
sub
stos
xorl
shll
mov
sbb
or
fcoml
fisubrs
adc
stc
dec
mov
outsl
and
mov
das
clc
cwtl
cmp
inc
xor
bound
add
push
push
inc
cltd
rorb
fimull
mov
jecxz
cli
lock
les
movsb
and
out
cmp
jg
clc
xchg
sub
push
cli
les
iret
movsl
pop
lcall
push
mov
call
data16
sarl
xor
test
xchg
xchg
push
movsl
cwtl
mov
out
cmc
ffreep
test
daa
pop
call
fnstsw
out
imul
sub
pop
outsb
jmp
stc
cmp
outsb
fwait
sbb
push
mov
cmp
or
int3
mov
hlt
inc
pop
sti
dec
push
inc
aas
cli
pop
lret
mov
sahf
lret
adc
jmp
stos
in
in
fimull
es
hlt
pop
ss
roll
ja
dec
ret
pushf
or
jecxz
jp
inc
int
add
mov
lods
sbb
addr16
subb
or
mov
cmpsb
cmpsl
mov
lret
dec
nop
fisubrl
jmp
cltd
fistps
mov
inc
push
pop
hlt
filds
sub
std
inc
and
jnp
push
fistps
or
test
aaa
movsb
dec
adc
and
jne
or
inc
dec
jbe
mov
adc
aaa
xor
pop
popa
lcall
sub
jno
or
adc
cwtl
lret
outsb
jecxz
pop
incb
out
testl
pop
xchg
js
mov
cld
sub
lds
inc
sub
lds
mov
adc
add
mov
mov
xchg
shll
nopl
or
inc
loope
xchg
dec
insb
mov
sti
ficoml
push
out
in
int
inc
ljmp
xchg
ret
pop
bound
cmp
ljmp
xchg
js
out
test
dec
cs
push
mov
mov
insb
imull
pop
lds
jmp
push
jmp
out
ja
popf
dec
data16
push
mov
cmc
ret
push
test
in
cli
roll
cmp
fbld
lea
inc
aam
fbld
or
inc
xorb
jmp
jnp
inc
xchg
or
ror
aaa
orb
nop
or
mov
sub
ret
cwtl
dec
push
icebp
sbb
call
xor
mov
test
add
fcompl
stos
cld
mov
adc
xlat
lea
pushf
nop
and
stos
ja
rclb
adc
loope
inc
cmp
jo
sub
mov
xchg
push
jge
stos
pop
cmp
xchg
lds
sbb
jb
ret
jo
mov
fdivrp
inc
mov
adc
cmc
addr16
dec
pop
lcall
cmp
dec
pop
mov
popf
je
sbb
scas
inc
jae
xchg
lcall
sbb
mov
mov
xchg
and
mov
lock
popf
sub
or
outsl
test
dec
jno
rcr
mov
imul
stos
stc
add
fyl2x
push
or
cmp
jae
aam
mov
loopne
jno
mov
xchg
cltd
ror
test
test
jnp
cld
push
pop
ja
dec
pop
cmp
pop
fisttpll
loop
out
pop
or
fwait
xor
fldenv
pusha
stos
jge
inc
pop
mov
daa
push
mov
test
movsl
push
data16
out
mov
mov
jae
clc
or
add
in
or
nop
xchg
insl
push
lea
push
inc
and
repz
inc
lahf
test
pusha
dec
push
fmuls
mov
out
and
pusha
fdivs
jo
xchg
fucomp
pop
xor
outsb
lcall
lea
pusha
int3
sub
insl
xchg
jmp
push
roll
pop
pop
push
std
sbb
pushf
stos
inc
cwtl
pop
jmp
xor
shll
addr16
mov
movsl
or
jns
mov
jbe
mov
rclb
mov
repnz
mov
inc
jp
repnz
jno
or
add
dec
imul
pusha
fstps
jns
les
into
imul
std
das
das
xchg
push
test
mov
inc
insl
xchg
faddp
dec
dec
not
xchg
dec
mov
push
outsb
jne
inc
bound
jmp
mul
jbe
and
js
add
clc
imul
stos
adc
sub
cmc
xor
dec
shrl
sub
jnp
cmp
pop
bound
jbe
mov
push
insl
mov
push
pop
test
dec
popf
xor
cli
int3
fnstsw
loopne
outsb
cld
cli
xchg
pop
push
cmp
add
clc
add
inc
cmp
sbb
dec
fdivl
imul
gs
xor
cmp
or
mov
in
mov
inc
inc
inc
ficoms
dec
and
xchg
xchg
cmp
push
mov
push
dec
scas
cmpsb
xchg
lock
loopne
fs
enter
add
repnz
ret
mov
or
cmp
sbb
inc
decl
jae
dec
add
mov
sbb
test
cmc
repz
pop
add
sub
jb
cmp
push
xchg
ljmp
insl
inc
mov
jge
xor
add
les
out
mov
lea
lods
and
mov
sbb
out
or
jb
xchg
xchg
dec
cs
fdivrl
xchg
hlt
and
nop
mov
and
shlb
iret
xchg
mov
or
test
hlt
jl
outsb
mov
cmp
xor
outsl
pushf
cmp
sbb
mov
arpl
rorb
in
sub
loope
cmpl
mov
inc
pushf
push
pop
xorl
jge
sub
jge
shlb
pop
bndldx
push
push
adc
mov
or
hlt
cmp
je
adc
and
jge
adc
rcl
cmpsl
movsl
sbb
jmp
inc
inc
sub
inc
dec
sub
insl
push
cmp
fisttpll
adc
lods
push
sub
xchg
pop
mov
movsl
push
test
push
push
xchg
lock
mov
push
pushl
push
mov
sub
mov
mov
scas
cmp
lahf
pop
push
mov
add
daa
rclb
movsb
dec
addr16
pop
loopne
hlt
sub
lret
push
sub
adc
cmp
pop
push
xchg
fidivs
dec
adc
mov
xor
iret
dec
and
push
out
mov
mov
xor
xlat
sub
inc
jnp
daa
int3
add
in
scas
xor
mov
lds
mov
cmpsl
test
sub
inc
orl
mov
ljmp
inc
gs
mov
fdivrl
sub
repz
dec
jbe
loopne
sahf
mov
pop
std
pop
add
mov
push
test
loopne
sub
ficoml
pusha
insb
lea
push
repnz
aaa
mov
or
aad
out
xor
andl
rol
scas
jae
jbe
cwtl
mov
ljmp
jb
sarb
dec
dec
addr16
ret
or
popa
testl
mov
movl
test
jb
add
cwtl
into
ret
jns
adc
mov
stc
jmp
cmp
mov
sahf
cmpsb
push
cmp
push
mov
xor
jnp
xor
push
dec
iret
mov
sub
mov
mov
mov
adc
cmp
push
fwait
stc
pop
cmpl
fsubrp
mov
lret
loop
testb
mov
xchg
pusha
cmpsb
jecxz
sti
pop
cmp
mov
repnz
sbb
jno
icebp
xor
inc
and
add
cmp
inc
es
out
push
mov
push
xor
cmp
lcall
int
repz
push
hlt
ret
imul
or
mov
lret
add
xor
fs
incl
mov
rcrl
jne
jns
test
cwtl
push
inc
and
pop
hlt
sub
sbb
and
adcl
jne
jae,pt
loope
ret
jo
or
outsb
pop
lds
out
or
lret
rclb
sub
xor
lea
push
pop
cmp
aaa
sub
outsl
xchg
sbb
sbb
and
jp
lock
jle
and
cld
int3
cli
inc
push
sub
inc
fcomp
pop
or
mov
pop
or
mov
lds
stos
fisttpll
cmp
bound
ljmp
and
cmp
dec
or
int
out
test
inc
rcr
and
pushf
imul
fcmove
add
cmp
adc
std
cmp
adc
inc
es
sub
icebp
mov
push
and
inc
push
inc
jle
dec
cs
jb
jmp
sub
mov
dec
sbb
mov
jae
fistpll
in
dec
bound
xor
ds
popf
mov
jo
int3
loop
repz
jg
mov
jne
jge
push
rcrl
pop
mov
push
or
push
sbb
movsl
sub
cld
rorl
subb
fistps
cld
jle
clc
nop
xchg
pop
push
je
int3
lret
dec
add
in
cmpsl
fsubs
cmp
pop
data16
jnp
jne
jne
mov
sbb
mov
outsl
ret
mov
xlat
push
mov
ds
lret
xor
daa
xor
idivb
jl
add
xchg
mov
sbb
je
sbb
jo
shl
jp
pop
xor
sbb
push
jne
xchg
xchg
push
gs
adc
jle
and
fidivs
ret
xchg
pop
cs
push
fcmovnbe
cs
cltd
cmpsb
push
rclb
jge
out
mov
xchg
and
xlat
fistl
mov
mov
ficompl
jae
outsb
xchg
and
xchg
test
shlb
loop
dec
stos
popf
jmp
jle
and
fadds
push
aas
in
shlb
or
xor
jb
fwait
jecxz
mov
fiaddl
pop
aam
add
dec
mov
lret
sahf
sbb
in
leave
mov
fists
pop
fcmovbe
outsb
xchg
sbb
in
outsb
shlb
stc
push
mov
push
adc
mov
mov
test
mov
cmp
jecxz
outsb
mov
je
loopne
cmc
popf
movsb
mov
int
xlat
push
pop
lea
pushf
mov
xchg
lret
data16
jl
push
lret
jg
jg
push
xchg
lret
int3
jo
or
push
lahf
push
jg
ja
mov
lcall
insb
adc
mov
sub
jns
mov
jns
clc
add
test
dec
and
add
mov
scas
popa
and
jmp
sbb
mov
sbb
mov
add
scas
in
xchg
adc
ret
and
mov
mov
lret
xor
adc
mov
mov
mov
and
call
test
hlt
idivl
sti
pop
jo
xchg
fdivrs
out
in
popf
sbb
sub
mov
in
pop
push
sub
push
insb
lock
and
inc
or
das
pop
loopne
sub
and
in
and
pop
adc
xor
outsb
mov
add
out
jns
icebp
outsl
cld
imul
jmp
push
jns
xor
test
adc
mov
in
mov
jecxz
lds
ds
inc
mov
arpl
mov
out
mov
cmp
push
ds
inc
cmc
outsb
sahf
cmp
dec
insw
push
cmpsb
cld
repnz
fstpl
adc
xor
dec
lods
rolb
mov
fdivrl
fldenv
inc
in
fdiv
mov
mov
xor
xor
fisttps
enter
jg
sbbb
add
jmp
out
jns
sub
mov
gs
jge
stos
adc
xchg
sub
test
std
pop
inc
jmp
dec
decl
popf
stc
adc
call
das
dec
ret
repz
vmovshdup
push
rorl
xchg
ret
mov
add
cmp
mov
popa
mov
inc
dec
hlt
xor
and
add
sub
sbb
xchg
push
cmc
xor
mov
out
cli
inc
cmc
sbb
test
test
mov
inc
mov
cwtl
or
inc
stos
xchg
mov
adc
cltd
andb
sbb
xchg
pop
lret
fsubrl
adc
adc
adc
push
push
xor
add
dec
dec
je
insb
cmc
sbb
ds
fistps
add
lcall
cmpsl
inc
cmp
lcall
mov
shrl
pop
sbb
mov
lock
adc
test
xor
test
xchg
fcoms
pop
sbb
call
rorl
add
sub
mov
xor
sub
pusha
pop
loope
cltd
adc
mov
sbb
call
nop
mov
cmc
sbb
popa
pushf
add
xor
movd
jp
ljmp
add
add
fsubl
and
mov
ds
in
mov
pop
test
pop
add
jns
paddd
arpl
and
insl
popa
or
insb
xchg
sbb
adc
test
pop
lret
push
aam
dec
sarb
sti
push
ret
xorb
and
dec
out
lcall
pop
pop
push
cltd
sub
lahf
mov
out
sub
fnstcw
shl
movsl
sti
in
jl
mov
loope
das
cs
fsts
loop
and
and
jp
popf
dec
stos
xchg
call
inc
lcall
inc
lret
int
loop
pop
daa
mov
into
push
movsl
cmpsl
xchg
xchg
outsb
loop
scas
lea
in
pop
scas
aam
mov
mov
bound
rcrb
jl
mov
in
rcll
fdivl
sub
xchg
sbb
jle
inc
mov
loop
addr16
cli
fdivs
imull
in
ret
scas
sbb
sahf
push
cmpsl
rcll
cld
dec
bound
push
loop
call
leave
es
jge
iret
test
mov
insl
mov
sub
aaa
jb
cmp
xchg
shlb
mov
sti
lret
out
xchg
push
imul
and
mov
out
jecxz
pop
jecxz
or
mov
xchg
jno
call
ret
jns
mov
lea
mov
out
mov
adc
aad
iret
sbb
scas
aas
ret
je
ror
add
mov
mov
jae
cmc
insl
cwtl
lods
daa
hlt
inc
push
fstpl
lock
fnsave
jo
std
cmovnp
mov
xchg
jbe
shrl
out
hlt
aad
ds
cmpsl
fwait
mov
repnz
out
push
popa
bound
xchg
push
sbb
test
outsb
or
stc
mov
lods
cmc
sahf
into
mov
je
scas
movb
mov
dec
adc
loope
cmp
inc
or
shrb
push
into
push
inc
mov
xor
stc
pop
or
loop
mov
inc
mov
xor
fcompl
pop
cmp
and
repnz
call
inc
jge
fnstsw
push
addr16
adc
mov
sub
dec
pop
xor
xchg
in
dec
or
int3
stos
clc
imul
sub
loope
pop
jo
mov
cmp
cltd
test
and
frstor
lcall
sbb
test
clc
repz
leave
mov
testl
rcl
faddl
jge
cwtl
mov
mov
xchg
mov
mov
es
gs
lods
repz
and
scas
xorb
fwait
push
lds
mov
and
movsb
inc
pushf
dec
fistl
jg
je
lea
dec
pop
mov
pop
sarl
subb
pop
fstl
jne
mov
cmp
jg
sub
fmuls
jno
rol
ja
sub
jl
and
fwait
in
adc
push
adc
les
orb
insb
mov
loop
add
repz
mov
dec
jl
mov
pop
sub
orb
add
or
loope
jb
mov
and
xchg
call
or
push
dec
cmpsb
add
int3
and
in
jl
mov
sub
adc
or
push
test
add
negl
rolb
adc
cmp
ds
jge
dec
mov
jnp
int3
popf
adc
aaa
adc
fimull
insl
rcrl
ja
adc
nop
adc
rcrb
and
cmpsl
adc
and
push
movsl
popf
cmp
mov
in
mov
pop
pop
sarb
inc
or
xchg
or
loop
mov
xlat
push
inc
fsubs
stos
enter
fsubrs
cwtl
stos
cmp
push
cwtl
ljmp
sbb
inc
dec
mov
out
sbb
ds
arpl
push
mov
and
or
mov
in
mov
push
scas
scas
mov
out
mov
or
cmp
sahf
jne
adc
sbb
mov
cmpsl
les
aad
xor
adc
lret
push
dec
in
push
mov
push
jp
scas
xor
gs
insl
das
lea
arpl
hlt
dec
lret
enter
movsb
cld
and
xchg
mov
hlt
push
into
fists
mov
fldenv
mov
and
subb
mov
out
scas
loop
pop
lret
mov
add
push
dec
mov
and
fiadds
sbb
adc
and
push
dec
mov
cmp
inc
add
jns
gs
enter
jle
ljmp
pop
pusha
inc
and
xor
push
int
mov
mov
mov
jp
mov
lcall
and
xchg
repnz
mov
mov
outsb
repnz
out
push
shl
adc
sub
mov
insb
ljmp
sarb
inc
call
mov
or
mov
push
cmp
nop
and
loope
pop
insb
add
in
std
in
in
push
jae
dec
and
sbbb
bound
push
call
scas
jecxz
ljmp
pusha
adc
pop
lods
jns
sbb
aam
subb
test
add
xor
aaa
and
icebp
pop
sti
clc
out
clc
pop
movsl
out
rcll
fisubrl
ds
outsb
lock
pop
push
jne
xlat
push
sub
les
sbb
push
xchg
lods
icebp
loopne
test
sti
or
mov
adc
jo
mov
lret
and
push
icebp
pop
jns
loopne
test
cwtl
mov
lea
jns
pop
fwait
sti
dec
sbb
aam
mov
sub
loope
repz
inc
mov
aas
xchg
adc
iret
int
insl
fwait
xlat
inc
inc
daa
xchg
ja
mov
scas
adcb
hlt
imul
movsb
dec
inc
popf
repnz
jns
mov
lahf
mov
inc
lret
mov
lea
jns
pop
cli
cmp
xor
daa
pop
mov
fistpl
imul
scas
ljmp
mov
dec
mov
add
jb
xchg
cli
mov
fucom
lcall
aas
loop
sbb
jnp
fdivrp
xchg
addr16
and
out
mov
ror
xchg
xchg
loope
dec
stos
jge
dec
mov
mov
pop
imul
icebp
out
dec
fcmovb
add
or
out
inc
push
cli
sub
test
push
inc
adc
pusha
ljmp
sahf
mov
sarb
adc
sub
idivl
in
mov
or
orb
jecxz
jbe
sub
xchg
std
sub
js
icebp
pop
mov
sbb
push
or
push
into
xor
mov
push
jge
fistpl
jecxz
lods
lds
ljmp
sbb
add
jne
push
mov
iret
incl
in
adc
movsl
fisubs
sub
jecxz
pop
inc
stc
dec
mov
in
fsubr
jno
pop
fbld
mov
dec
mov
or
rcrb
fcmove
fildll
jg
fmul
jge
in
or
mov
insb
es
sub
ja
repz
and
pop
mov
cmpsb
and
inc
or
push
and
xchg
jp
pop
out
xchg
rcl
cltd
out
daa
add
icebp
xor
push
sub
mov
call
mov
fldcw
into
jns
mov
pop
cmp
repnz
pop
lods
xor
sbb
jnp
cmc
mov
push
mov
ret
cmp
xorl
dec
stos
sub
mov
add
dec
loopne
mov
add
rclb
adc
sub
mov
dec
repz
popf
add
mov
cmpsb
push
jge
sub
scas
ficoms
or
lods
jns
mov
shlb
fdivrs
fistpl
stos
jbe
cmp
int3
pusha
sub
push
frstor
stc
mov
adc
lret
mov
mov
sahf
rcl
cmp
movsl
in
mov
rcrb
mov
cld
adcb
test
lea
add
and
cmpsb
adc
xor
fsincos
test
scas
jbe
popa
lahf
test
lods
fsubs
sub
push
call
ljmp
iret
leave
jmp
push
test
sub
xchg
js
xor
jecxz
mov
cmc
xchg
jecxz
lcall
aam
mov
int
mov
inc
add
popf
dec
inc
addl
cltd
or
aaa
mov
fcoml
or
and
jge
stos
mov
inc
in
ret
ret
inc
lea
clc
test
sbb
or
xor
push
jmp
push
addr16
adc
mov
outsl
or
lea
clc
xchg
call
mov
jnp
sub
repnz
mov
out
inc
push
mov
std
frstor
inc
in
pop
leave
jne
cmc
sub
add
sahf
pop
mov
cs
add
push
adc
add
outsb
or
loop
or
cltd
xchg
mov
and
pusha
shll
mov
sarb
rcl
push
xchg
jecxz
js
push
rcrb
add
jne
push
or
mov
lods
inc
sbb
lret
pop
repz
clc
jle
or
push
mov
fisubl
cs
std
or
xchg
das
push
add
or
cltd
xor
xor
gs
push
imul
sti
mov
js
or
mov
stos
rcrl
xorb
js
std
lret
inc
js
mov
shrb
leave
xor
bound
jo
cmpsl
lea
sbb
or
inc
xchg
adc
aas
sub
mov
push
jl
and
insl
popa
push
jae
pop
lds
ret
loope
sub
push
js
or
call
movsb
pop
mov
repnz
xchg
push
enter
test
xor
ror
jl
push
sub
mov
mov
mov
cli
adc
mov
ja
jl
and
push
sbb
ret
imull
fwait
xchg
pop
sarl
lods
scas
and
add
or
cmp
cmpsb
scas
mov
jl
test
sbb
scas
or
push
aaa
lds
test
jge
xchg
test
addl
insb
xorl
add
cmpsb
xorl
jne
jns
int
push
push
and
or
ds
or
sahf
pop
rcll
mov
es
mov
arpl
sub
inc
or
or
cmpsl
cmp
mov
or
pop
subl
sbb
mov
adc
mov
in
add
mov
adc
xchg
andl
cmp
mov
insb
cmp
cmc
jl
stos
shlb
addb
test
pop
repnz
xchg
mov
rcrb
mov
daa
in
push
shrb
xchg
mov
lock
or
call
jae
in
aas
std
cmp
mov
push
lahf
aad
cli
jnp
imul
sti
or
jo
push
adc
push
shlb
mov
insb
hlt
adcl
in
rorb
dec
add
push
inc
inc
cli
sbb
lods
push
mov
adc
clc
mov
sub
clc
jmp
xchg
call
push
or
mov
fwait
out
or
mov
mov
cmp
xor
js
mov
jl
jecxz
int
orl
shrl
repz
lret
xchg
pop
xlat
and
push
push
push
and
or
adc
pop
add
rol
popf
scas
cs
jno
outsl
stos
mov
pop
push
cmpb
mov
adc
xchg
mov
imul
or
lock
pop
sbb
sahf
mov
adc
stc
dec
lea
into
jne
sub
and
sub
cltd
jmp
jns
push
mov
dec
or
mov
shl
cmp
jmp
in
jecxz
inc
insb
mov
xchg
test
mov
mov
xchg
pandn
pop
xor
loop
xor
call
jl
daa
jne
loop
jmp
imul
dec
or
lock
ja
dec
cmp
xchg
mov
gs
mov
inc
ret
add
push
mov
rolb
ret
out
aam
stos
xchg
xchg
dec
sahf
hlt
push
mov
jbe
mov
push
push
mov
cmpb
cmpsl
sub
dec
inc
stc
push
pop
inc
cmp
paddusw
mov
in
scas
and
xchg
fnstsw
jae
sub
sbb
mov
lret
lahf
pop
pop
pop
ja
xor
out
pop
imul
ficoms
push
out
push
idivb
mov
cmc
mov
and
fwait
mov
xor
mov
ret
imul
inc
clc
lds
lods
fwait
repz
fcoml
hlt
dec
pop
stos
xor
sub
cmp
xchg
xchg
sbb
cmp
test
rclb
push
push
add
stos
fstpt
sahf
xor
pop
mov
call
fdivrs
pop
pop
popf
inc
mov
push
pop
ss
mov
icebp
xchg
test
leave
mov
xchg
and
or
xor
and
loop
mov
popa
jmp
xlat
ss
js
dec
lods
xchg
pop
shrb
stc
imul
dec
jns
js
insb
pop
push
sub
iret
je
add
sub
jmp
mov
faddl
leave
test
enter
push
push
xchg
pop
fcmovnb
dec
and
xor
stos
xlat
fildll
or
dec
inc
or
movsl
test
out
divb
jnp
inc
aas
push
xor
push
add
dec
out
sbb
adc
mov
fs
push
nop
push
int3
nop
sarl
jmp
jmp
dec
jp
movsb
scas
pop
dec
fs
jnp
int3
cwtl
jecxz
jg
ljmp
test
lcall
jne
aas
mov
push
push
mov
pop
lret
daa
inc
or
dec
in
popa
mov
out
inc
sbb
pop
jne
ljmp
cmpsb
mov
jne,pt
mov
adc
ficoml
mov
movsb
gs
and
and
in
stc
add
scas
push
adc
into
and
sti
mov
sahf
xchg
les
pop
cmpsb
dec
mov
je
in
add
xor
cmc
movsb
dec
xor
cmpsb
pop
or
out
nop
mov
push
daa
mov
imul
gs
lods
je
stos
and
mov
mov
out
sbb
sbb
loopne
or
dec
clts
jo
jge
and
push
adc
pop
dec
fwait
pop
insb
dec
jmp
pusha
xor
mov
and
mov
cltd
add
push
mov
mov
cmpsb
push
test
out
jl
fisttpl
cmp
and
push
mov
mov
sbb
add
daa
sbb
test
sbb
mov
sarb
fisubrs
dec
mov
inc
pop
mov
repz
mov
mov
iret
mov
insb
xchg
lds
arpl
and
sub
xor
outsl
inc
lret
pop
mov
cmpsb
or
xlat
jnp
and
cmp
imul
adc
mov
adc
fisttpll
jge
sub
and
aaa
and
flds
fst
mov
icebp
jbe
outsb
js
mov
adc
push
jg
hlt
fld
ds
lods
pushf
ja
fnstcw
xchg
cmc
mov
stc
sub
xor
fldt
iret
xchg
in
mov
ret
pop
mov
push
ds
add
xchg
fcompl
sub
xchg
sti
push
or
mov
call
popf
inc
loope
jg
cmpsl
cmpsb
mov
in
cwtl
and
aas
shl
aaa
bnd
push
push
mov
arpl
and
iret
lret
jg
lods
push
push
nop
and
std
inc
sbbb
iret
mov
mov
sbb
xor
fisubrs
ja
imul
xor
rorl
xchg
push
add
fnstcw
imul
mov
ljmp
mov
fbld
sbb
add
repnz
push
aaa
fwait
pop
imul
inc
iret
push
out
or
pop
mov
insb
xor
pop
cmpsl
jae
repnz
mov
in
imul
mov
inc
cli
inc
xchg
out
ljmp
jg
sub
lock
insl
mov
stc
ss
add
insl
cmc
cmpsl
mov
sti
pushf
add
mov
lds
aas
test
imul
outsb
test
divl
data16
test
movsb
jmp
pushf
test
fwait
lods
divb
adc
ret
mov
mov
xor
xor
xor
sbb
inc
aas
xchg
call
xlat
cmp
jnp
push
cmpsl
pop
inc
adc
cmpsl
cmp
mov
lea
cmp
pop
sub
add
call
dec
xchg
jne
push
push
jo
in
push
mov
mov
xor
icebp
ficomps
mov
stc
icebp
sub
dec
jge
data16
push
out
mov
cmp
fimuls
test
and
cmp
xchg
sub
inc
subb
popf
add
sbb
sahf
add
lods
xchg
fiaddl
mov
sbb
test
mov
mov
lods
jno
mov
xor
sbb
push
das
pop
mov
and
or
jb
cwtl
jp
and
jmp
sbb
fistps
pusha
mov
jo
mov
push
enter
aaa
and
adc
outsl
pop
out
push
xchg
mov
lcall
push
in
mov
and
pop
test
sbb
jno
rcr
cltd
adc
cli
sub
dec
dec
bound
cli
inc
stc
data16
add
fwait
mov
jbe
inc
or
cmp
loop
add
jae
scas
dec
dec
adcb
jb
pushf
in
jmp
mov
xor
cs
cmp
sahf
jns
push
dec
adc
mov
inc
pop
xor
jne
hlt
subb
sub
lahf
loop
lcall
imul
push
add
and
lock
loop
jnp
fwait
push
lea
lea
mull
orb
je
iret
cld
nop
movsl
popa
faddl
inc
jp
aam
pop
jle
andl
add
push
jb
jbe
add
ret
lods
xchg
push
xchg
es
pop
scas
gs
mov
int3
icebp
or
and
xor
jl
pusha
rcr
xor
dec
loopne
mov
push
bnd
repz
sbb
inc
ljmp
push
push
or
xor
imul
fdivs
add
mov
fidivrl
add
adc
loopne
nop
sub
test
jecxz
imul
push
shlb
push
inc
jmp
inc
roll
sub
aam
push
mov
ffreep
mov
xor
in
aad
and
sub
orb
xchg
in
sbb
or
movsb
push
mov
sbb
movsl
rolb
dec
addr16
xchg
pop
mov
orb
dec
loop
adc
test
test
imul
test
jg
shrb
cltd
sbb
lcall
jo
popa
xchg
mov
ficompl
popf
sbb
xor
cli
jns
xor
sbb
fadds
dec
sbb
sub
ds
adc
inc
xor
or
cmp
imul
or
test
mov
xchg
in
mov
mov
xor
subb
cmp
testb
pop
out
jecxz
pop
das
lds
outsl
sub
mov
and
add
mov
mov
movsl
add
aad
jb
pop
test
andb
jbe
mov
jg
adc
shl
pusha
push
push
mov
cmp
jbe
mov
pop
ret
ds
pushf
ljmp
lods
ret
mov
mov
mov
outsl
outsl
jnp
mov
into
sbb
mov
or
or
ja
or
add
sahf
sub
sti
fwait
lret
mov
fldl
mov
inc
shlb
adcl
or
sbb
mov
out
xchg
pop
mov
sarb
lock
std
aam
popa
add
push
cmp
cli
or
jbe
pop
push
mov
pushf
lods
dec
daa
add
push
cmp
pop
add
xorb
xchg
nop
xchg
pop
pop
icebp
outsl
xor
fxch
mov
sub
cltd
jmp
ficoml
and
outsl
es
mov
hlt
add
push
push
test
xchg
jne
addb
or
fisttpl
inc
xor
inc
rorl
sbb
xor
icebp
insl
inc
jg
add
sub
idivb
jae
mov
loop
lcall
aad
in
stos
push
mov
lret
mov
mov
jae
test
jo
sub
jl
jno
pop
mov
clc
inc
shlb
es
xor
cld
sub
stos
cmp
xorb
cmp
rcll
cltd
popa
push
mov
in
add
ret
cmp
ss
mov
in
cs
sub
xchg
lahf
enter
mov
ret
mov
lahf
addb
inc
pop
mov
sbb
xor
inc
mov
xor
int3
in
jbe
std
fldenv
pop
cmpb
test
cld
movsb
mov
xchg
daa
dec
jns
sub
sub
sub
xor
pop
lds
mov
inc
pop
add
xchg
jl
movsb
mov
std
pop
jb
adc
nop
fwait
mov
int
aad
xor
xchg
rcrb
xchg
xchg
push
sbb
add
add
sub
xor
movsb
mov
or
pop
insb
movsb
inc
test
xor
push
push
lcall
add
inc
loop
movsl
cwtl
outsl
shlb
clc
dec
cltd
dec
push
pushf
or
cmpsb
aad
bound
cli
dec
aas
jecxz
adc
push
in
inc
push
or
mov
ficomps
loop
jns
dec
ds
outsl
or
pop
inc
mov
outsl
daa
cmpsb
and
cmp
out
push
mov
dec
imul
jb,pt
push
mov
mov
pop
inc
and
stc
addr16
cs
dec
ret
and
mov
mov
out
outsb
jbe
out
pop
jo
cmpsb
insl
sahf
mov
lea
aas
popf
outsb
test
inc
jns
divl
lods
or
popa
les
mov
insb
hlt
adc
inc
loope
int3
mov
jg
xchg
shll
es
aam
jle
loopne
jg
repnz
pop
int
dec
push
jge
testb
lahf
test
int3
jle
fdivrs
rolb
clc
dec
mov
repz
pushf
dec
xor
or
pushf
jo
mov
and
pop
dec
pop
fimull
mov
adc
sbb
adc
add
mov
jae
fnstenv
pop
insl
dec
fs
and
mov
add
inc
nop
loopne
or
dec
sbb
push
mov
pop
pop
pushf
je
mov
leave
mov
mov
adc
fs
hlt
pop
int3
push
out
inc
out
aad
mov
loope
inc
mov
push
inc
aam
les
lret
imul
push
repz
pop
xor
in
jle
movsb
sbb
shrl
test
cli
and
jb
mov
jnp
mov
jne
push
arpl
cs
jmp
adc
mov
nop
or
push
cmpsb
repz
xor
hlt
push
push
das
xchg
adc
dec
lds
icebp
addl
xor
and
ss
aad
xor
adc
stos
dec
push
aad
or
imul
int
imul
ffreep
pop
pop
lret
lret
gs
jbe
ret
outsb
jmp
cmpsl
mov
outsb
enter
sub
dec
rcr
cwtl
jne
icebp
mov
xor
dec
adc
xchg
lcall
outsl
sub
fdivrs
negb
inc
add
mov
sbb
jle
insb
std
icebp
rolb
stos
add
jmp
xchg
sahf
mov
repnz
imul
inc
dec
mov
inc
out
cmc
push
adc
xchg
inc
add
dec
sub
inc
pop
cmp
mov
pop
subb
mov
xor
adc
loopne
cld
push
dec
in
xchg
jbe
cmc
and
cmp
mov
xor
out
mov
test
and
nop
test
push
or
fmull
lret
add
outsb
outsb
xchg
xor
iret
jge
push
leave
addr16
pop
pop
add
push
adc
push
sbb
daa
scas
and
dec
inc
das
sub
pop
jmp
popf
js
scas
out
and
fdivrs
lcall
rclb
cmp
push
repz
push
sub
daa
repnz
fnstenv
dec
pop
lock
sub
movsb
add
inc
imul
push
scas
mov
ffree
xchg
cmp
and
sbb
mov
push
cmp
rol
xchg
adc
cmpb
cmp
cli
cmp
sbb
out
and
stc
cwtl
int
mov
inc
sbb
add
adc
jnp
cmp
sbb
out
sub
mov
mov
in
inc
or
fsubl
ds
xchg
js
mov
cmp
out
enter
adc
pushf
outsl
stos
adc
xor
xchg
sbb
insl
lahf
pop
dec
mov
stos
mov
into
insl
push
adc
addr16
mov
cmpsl
ret
push
lcall
dec
fadd
mov
scas
xchg
mov
cli
je
lret
cmpsb
and
or
movsl
test
adc
ljmp
test
cmc
jmp
mov
int3
cmc
frstor
and
pop
frstor
movsl
sub
sbb
mov
cltd
sti
mov
xor
rcll
mov
jmp
js
iret
inc
push
outsb
cmp
xchg
ss
shll
pop
je
or
dec
sbb
jmp
outsb
and
scas
sarb
cmp
push
sbb
clc
push
outsl
adc
je
push
pop
insb
or
test
mov
cld
xor
aas
jmp
int
icebp
into
lahf
jb
mov
add
jb
dec
punpckhwd
icebp
sbb
mov
pop
test
pusha
and
mov
cmp
in
in
xchg
imulb
dec
sub
aam
das
test
pop
out
pop
pop
mov
xchg
or
jns
pop
jo
push
add
std
or
test
icebp
xor
ja
addl
push
mov
bswap
sahf
jp
push
cmc
lock
fnstenv
mov
arpl
xor
xchg
call
jmp
shlb
pop
xor
cli
faddp
lret
jge
out
in
loope
shlb
or
sub
sbb
ja
in
and
shll
jge
ret
cmpl
inc
sub
inc
repz
lods
imul
inc
or
fldenv
lahf
mov
push
cmp
jae
adc
push
and
jno
mov
sub
sub
jae
inc
lahf
mov
les
inc
mov
out
icebp
or
xchg
nop
inc
dec
loopne
mov
pop
mov
inc
sub
pop
and
jns
inc
in
mov
xlat
jnp
jo
int3
or
and
cs
xlat
sbb
sbb
ja
insb
bound
bound
inc
pushf
lret
mov
in
lods
ja
mov
in
sub
and
pop
insl
jae
lock
xchg
dec
test
dec
xor
fnstsw
mov
xchg
mov
jl
imul
mov
pop
ljmp
pop
scas
cmp
in
ds
shlb
loop
gs
mov
mov
push
jmp
leave
fwait
aam
push
pop
adcb
or
or
mov
test
mov
xchg
pop
arpl
negb
leave
inc
mov
pop
faddl
add
xchg
fistps
orl
cs
jle
repz
sub
cmpsl
jmp
lds
or
rcl
enter
dec
lret
mov
jne
sub
ror
xchg
bnd
mov
jnp
inc
xlat
rorl
inc
pop
mov
shrb
test
jmp
push
and
jbe
pop
cwtl
push
pusha
pop
sbb
fs
fwait
xchg
pop
test
xchg
jne
or
cli
mov
adc
inc
inc
rclb
jmp
sbb
mov
jle
lret
sub
int
ds
jo
fistpll
mov
xor
sub
adc
push
sbb
dec
fiaddl
lret
adc
orl
dec
sbb
inc
daa
popa
inc
cmc
lea
adc
inc
fstpl
outsb
lret
sub
fcmovne
inc
loop
dec
jo
pop
addl
and
in
jne
stos
dec
xor
les
mov
sub
cmp
sub
mov
or
sbb
xor
out
out
pop
loopne
xor
shrb
sub
jge
xor
lahf
in
loop
les
cmpsb
es
lret
iret
sub
add
sbb
xchg
xor
xlat
iret
lods
mov
push
ds
fisubs
pop
ds
pop
mov
mov
fisttpll
push
int
das
std
dec
in
out
jno
ret
sbb
icebp
mov
bound
push
sbb
pushf
xchg
enter
popf
cmpsl
ljmp
lahf
cmp
arpl
cmp
test
cld
jb
add
jmp
add
mov
ljmp
insb
aam
push
cmp
push
pop
outsb
shlb
push
pop
test
sar
bound
repnz
adc
mov
fisubs
incl
sbb
iret
loope
jns
jnp
jae
lret
and
daa
add
popf
lret
fisttpll
out
jmp
push
jb
fmuls
daa
dec
push
mov
je
fs
cmp
jne
xchg
and
cmp
int
into
je
inc
sub
push
bound
xchg
jle
push
ret
repz
sbb
nop
inc
inc
popf
outsl
xchg
fisttpl
cltd
loop
insb
pop
cmpsb
jecxz
xchg
add
push
adc
adc
mov
enter
aam
mov
xchg
dec
cmpl
mov
pop
cli
sub
jb
cmpsl
paddb
adc
mov
pop
test
inc
mov
pop
ficomps
mov
cmp
push
pushf
xor
mov
rcrb
std
test
test
add
and
mov
stos
jbe
inc
xchg
das
lods
adc
push
ss
cld
ret
leave
or
out
daa
or
jnp
sub
mov
mov
iret
enter
lock
or
or
dec
les
mov
enter
cmp
lcall
hlt
xor
or
js
inc
popf
xlat
mov
inc
imul
fs
sub
mov
xlat
arpl
xchg
jmp
je
fwait
ret
insl
push
cmc
pop
mov
and
sub
add
sub
repnz
rorb
ret
insb
ss
pop
cltd
hlt
es
pushf
scas
ret
mov
stos
fnstcw
and
aam
xlat
aas
popf
stos
lcall
int
adc
sbb
fs
pop
insb
dec
lods
jne
cmovo
fsubs
repz
push
int3
ficoms
je
out
sti
xchg
xchg
mov
mov
cmp
mov
fnstsw
test
int3
stc
push
push
out
pop
fs
fistpll
jecxz
movsl
icebp
mov
pop
hlt
cmp
xor
bound
or
or
push
imul
mov
stos
jge
fstps
aaa
sub
or
ljmp
cmpsb
sub
fsts
xor
rcrl
cltd
out
subb
xchg
in
cwtl
stc
inc
cmp
jbe
scas
aas
jge
leave
std
mov
inc
push
pop
ja
fnstenv
enter
stos
mov
add
mov
push
aad
jae
adc
scas
xor
xor
mov
lock
pop
pop
pop
mov
push
fwait
add
push
jp
mov
push
sub
jno
jo
dec
cltd
gs
jae
cmpsl
insb
jae
into
sub
mov
add
cli
mov
in
dec
jno
adc
add
gs
or
dec
pop
push
sub
ret
outsb
jecxz
pop
ljmp
mov
out
ret
xchg
add
std
dec
mov
outsl
pop
or
stos
scas
pop
icebp
fucom
cmp
je
aam
ljmp
cmp
pop
lds
lea
push
and
jg
mov
mov
add
push
add
or
xchg
enter
pop
jb
bound
fwait
add
test
pusha
in
lahf
ret
lcall
into
mov
clc
pop
mov
or
test
mov
mov
ljmp
push
dec
jecxz
mov
outsl
mov
push
cmpsb
repz
pop
mov
mov
sub
hlt
lret
jge
sbbb
push
mov
push
dec
std
pop
jb
inc
inc
orl
cltd
xor
mov
xlat
sahf
cmp
mov
enter
xorb
out
dec
mov
cmp
or
sub
data16
lock
push
adc
lahf
mov
daa
outsl
scas
xchg
pop
dec
popf
aam
push
lret
sbb
pop
mov
mov
pop
inc
cli
fists
xlat
or
out
cmpsl
mov
fisttps
in
sbb
sbb
mov
sub
push
mov
push
add
xor
les
cmp
hlt
es
cmp
jns
int
not
jno
fiadds
push
clc
mov
sub
fwait
je
fcoms
inc
outsb
daa
into
xchg
dec
mov
fldt
lods
push
sub
fdivs
mov
or
xchg
scas
add
loope
iret
pusha
push
inc
jle
sub
test
shl
mov
pop
icebp
push
insb
jecxz
pop
lods
hlt
xor
jno
jae
shll
cmp
mov
fs
sub
shr
pushf
lock
outsl
pop
notl
in
xchg
rol
add
sarl
sub
mov
bound
lret
push
sub
out
inc
cmp
cli
mov
in
inc
and
pop
mov
pop
mov
xor
push
dec
outsl
push
scas
add
lret
imul
movaps
inc
dec
mov
sub
jae
das
aam
loopne
mov
sub
add
lods
or
std
inc
frstor
jmp
insb
fcomi
enter
ljmp
jmp
jo
jge
jb
movq
or
in
adc
xchg
inc
iret
in
movsb
pop
push
cs
in
jbe
jl
test
loopne
dec
push
xor
add
orb
add
and
or
cmc
nop
aad
mov
divb
movsb
fnstsw
loop
add
add
mov
pop
in
movsb
jl
inc
negb
xchg
mov
xor
aaa
fildll
push
pop
call
push
aaa
jae
pusha
add
mov
cmp
xor
fs
sbb
neg
jne
adc
call
scas
cmp
jmp
and
sbb
enter
sbb
jp
mov
fwait
inc
pop
pcmpgtb
mov
adc
add
sub
scas
ljmp
xchg
mov
sbb
cmp
jne
in
pmulhuw
sub
pop
in
push
or
rclb
add
and
jo
mov
mov
hlt
and
cmp
lock
push
xor
mov
mov
insl
je
push
ljmp
repz
dec
bound
jecxz
and
lcall
dec
mov
lods
iret
xchg
mov
cltd
push
xchg
sbb
jecxz
andl
jne
aad
popf
ret
stos
jnp
or
xor
pop
mov
add
inc
and
cmp
into
xchg
pushf
jg
xchg
scas
push
sbb
lds
mov
xchg
mov
pop
add
sub
jecxz
cmp
outsl
mov
adc
daa
js
jbe
insl
lods
loop
jge
mov
push
dec
jge
fsqrt
and
and
mov
sub
cmp
dec
bnd
iret
sbb
xchg
cmp
push
lahf
xor
sbb
push
xor
jae
or
mul
adc
mov
cmp
outsl
push
cmpb
pop
shl
mov
mov
rolb
add
mov
clc
loop
orl
mov
addr16
mov
stc
subb
lret
mov
xchg
mov
rcll
adc
das
xchg
mov
pop
in
shlb
cli
inc
push
mov
push
pop
movsl
jne
sub
iret
adc
push
pop
inc
push
dec
orb
ja
push
lea
add
jo
sub
sub
add
arpl
sbb
jmp
push
sub
xlat
scas
movsb
sbb
aas
lds
sbb
and
nop
test
test
jo
jo
shll
in
xchg
mov
push
daa
popa
pop
ds
sbb
adc
lret
or
in
pop
lret
imul
jp
ficomps
and
ror
dec
sbb
xchg
mov
inc
inc
lret
cmp
lea
push
xor
cmp
lds
mov
dec
arpl
jle
ret
loopne
xchg
faddl
cmp
jle
lret
int3
and
or
ljmp
pushf
mov
dec
out
fistpll
fistps
cmp
and
insl
mov
rorb
test
mov
xlat
pop
dec
xchg
push
div
and
js
popa
cmp
jo
inc
jb
loopne
inc
aas
mov
es
mov
cmpsb
aaa
in
mulb
cmp
ret
push
sbb
mov
mov
xor
push
ret
inc
mov
repz
xchg
mov
sarb
mov
cli
sub
jne
dec
sbbl
push
ror
jae
fwait
loopne
std
test
add
into
cmpsb
sbb
jo
cli
arpl
outsb
xchg
pop
mov
out
syscall
xchg
mov
push
mov
mov
jnp
push
lret
jne
cld
add
sub
xor
adc
jle
push
push
movsl
jge
aas
adcb
sub
das
cwtl
sub
mov
std
push
icebp
pop
pop
testl
int3
mov
mov
and
or
cmp
inc
push
dec
and
xlat
push
and
icebp
or
dec
aam
xchg
jae
test
into
add
shll
scas
int3
push
mov
cmc
lahf
jb
nop
pop
add
das
fs
out
orl
or
add
orl
xchg
sbb
lahf
lock
fs
dec
sub
gs
mov
sbb
jg
fcoms
rclb
push
in
shrb
add
jne
loopne
pop
imul
mov
pop
fdivrs
push
push
outsb
in
addl
push
fldl
clc
call
call
lea
mov
movsb
mov
and
outsb
mov
jbe
xor
adc
mov
xchg
sbb
mov
xchg
mov
xorb
push
fs
adc
push
shll
aas
outsb
sti
sub
stos
cli
mov
mov
and
sar
and
testb
repz
jecxz
outsb
push
adcb
push
lret
mov
jmp
push
test
sti
enter
fmull
jle
mov
pushf
dec
pop
adc
rorl
pop
add
mov
enter
sbb
aad
push
outsb
inc
gs
push
xchg
rcrl
add
adc
xchg
ret
pop
and
add
jg
leave
push
xchg
fcmovnb
and
imull
xchg
out
or
out
pop
fdivrp
jbe
repnz
shll
add
out
pushf
or
aam
dec
cld
popa
lods
inc
in
inc
loopne
gs
jecxz
pop
stc
cltd
jmp
or
xchg
ficomps
movsl
lods
decl
loop
xchg
mov
test
xchg
aaa
jge
insl
push
add
cmp
mov
fbstp
cmpl
cmp
daa
into
outsb
pop
add
in
cmc
or
or
jmp
test
inc
adcl
inc
mov
add
pop
hlt
enter
stc
mov
jle
repnz
call
cmp
cmpsb
adc
pop
insl
sbb
and
add
jne
push
xchg
and
ret
inc
into
sbb
dec
loopne
mov
and
into
and
jo
push
cmpsb
mov
and
in
sbb
xor
push
xrelease
or
outsl
das
dec
mov
mov
adc
cwtl
sub
lret
add
enter
cmc
cmc
movl
sbb
or
or
out
test
jl
dec
or
push
nop
shll
imul
xchg
loop
daa
gs
mov
xlat
lds
cmp
and
add
jne
inc
aad
call
sahf
mov
test
aaa
cli
bound
inc
repnz
test
lcall
daa
imul
icebp
sub
sarl
mov
outsb
adc
lret
popf
pusha
jne
mov
dec
pop
sub
stos
pop
fwait
xor
repz
sahf
sub
cltd
jbe
cld
fyl2xp1
jg
iret
inc
mov
jae
scas
pop
dec
sbb
push
test
jmp
xchg
mov
movd
test
dec
mov
add
jl
xor
jecxz
cmp
push
add
xchg
xor
loop
add
jne
xor
xlat
inc
push
inc
cmp
inc
clc
js
xchg
mov
imul
pop
sbb
pop
mov
push
dec
mov
into
dec
scas
and
movsb
inc
cmpsb
or
imul
xchg
jae
lret
mov
pop
or
cltd
pushf
stos
mov
add
mov
adc
mov
cmp
aam
nop
mov
mov
jmp
scas
and
sub
pop
lahf
and
ljmp
pop
insb
pop
push
stos
push
sub
jae
scas
pop
adc
je
popa
loope
lea
adc
add
jbe
data16
sbb
jne
mov
pushf
mov
xchg
and
pusha
jecxz
and
add
cmp
adc
jmp
mov
cld
inc
ljmp
pop
pop
mov
dec
xchg
push
add
popa
loopne
mov
mov
push
mov
jbe
iret
jne
and
or
xchg
test
fdiv
sub
test
jbe
sarb
cmpsb
loopne
outsb
les
xor
repnz
daa
push
test
add
lock
es
sahf
leave
negb
test
sti
rorb
jge
mov
in
stos
xor
jbe
lods
mov
adc
clc
popf
push
adc
and
adc
pop
push
pop
lds
out
loope
stos
mov
or
test
or
cmp
push
xor
outsl
adc
out
pop
je
inc
sbb
sbb
add
out
push
jae
cli
cmp
imul
bound
lods
ja
testb
out
push
fidivs
sub
adc
xor
pmaddwd
sub
inc
sbb
pop
or
push
rol
adc
std
pushf
addr16
stos
arpl
lods
mov
in
inc
ret
fwait
pop
lret
ss
dec
push
pop
js
mov
jecxz
jnp
add
cmp
cld
dec
test
mulb
repnz
lret
sub
mov
inc
cmpsb
and
repz
push
mov
xlat
jp
es
jno
and
into
test
sahf
jecxz
in
loop
ficomps
pop
int3
cmpsl
decl
adc
insb
loop
adc
movsb
jnp
rorb
cmpsb
push
adc
faddl
roll
mov
subl
mov
cmp
arpl
repz
movsb
cwtl
movsl
push
add
fwait
int
jb
sub
sbb
mov
lods
mov
jmp
sbb
mov
inc
xor
call
bound
inc
xchg
lret
pop
rcl
mov
rep
or
xchg
das
aaa
js
testb
shlb
sbb
incl
arpl
loopne
sub
pop
fldt
cmpsb
dec
imul
mov
add
push
bound
stc
pop
insl
xor
and
sub
out
lahf
or
sbb
out
mov
jp
pop
lcall
imul
nop
and
cli
xor
jecxz
dec
sub
lock
mov
mov
or
jp
outsl
cwtl
mov
dec
mov
lock
lods
push
and
loop
lock
jb
dec
andl
or
out
shrl
or
inc
repz
dec
ret
dec
push
pop
mov
add
xchg
or
stos
gs
jecxz
and
outsl
push
sbb
mov
xchg
idivb
inc
outsl
enter
inc
push
insl
cmp
test
push
lods
popa
sbb
dec
fs
gs
and
scas
clc
iret
sbb
test
in
xor
jge
shlb
roll
ja
mov
or
or
pop
inc
inc
jb
popa
subb
in
into
add
popa
movsl
and
cmp
push
dec
push
mov
xchg
out
inc
adc
adc
jecxz
data16
xor
js
xchg
jle
enter
stc
xchg
xor
in
adc
dec
cltd
add
scas
jbe
push
mov
fnstsw
lret
pop
lret
adc
and
lahf
xor
mov
mov
int
inc
and
mov
daa
jp
mov
movsb
ret
mov
adc
inc
scas
mov
push
push
sahf
dec
cli
xchg
pop
pop
gs
cmp
stc
inc
in
cwtl
sbb
push
inc
orl
dec
out
mov
stos
mov
stos
es
imul
test
mov
or
out
sub
xor
subb
rclb
and
pop
fildll
inc
imul
xlat
scas
pop
int3
loope
xor
inc
loopne
loop
dec
mov
jae
shrl
jl
pop
je
daa
sbb
punpckldq
add
outsl
shrb
das
mov
jae
pop
jae
jnp
inc
jo
clc
js
add
pop
sbb
rolb
ret
jl
and
out
add
inc
daa
sbb
pop
jmp
in
loop
sbb
loop
jmp
test
pop
jno
dec
test
aam
sbb
negb
jmp
xchg
mov
cwtl
ret
push
cmp
and
sub
and
mov
adc
mov
daa
lds
addr16
dec
mov
fucomi
adc
sub
addr16
arpl
cmc
cs
mov
sub
mov
inc
pop
mov
push
inc
add
cli
rcrb
outsb
jnp
add
pusha
sti
scas
dec
adc
mov
mov
mov
mov
or
arpl
dec
and
test
mov
adc
cmp
sbb
inc
test
xor
pop
add
mov
das
pop
fimuls
push
add
adc
in
aas
xchg
fwait
idivl
dec
jge
je
cmp
push
mov
icebp
in
xlat
cmp
mov
jl
inc
cmp
and
adc
mov
loope
call
lret
cwtl
add
xchg
lret
cli
shll
and
shlb
adc
or
sahf
push
mov
js
imul
and
dec
sub
inc
inc
inc
mov
mov
push
in
push
or
jb
mov
jp
setge
jle
or
push
xlat
mov
std
or
sub
xchg
push
jbe
jo
inc
jbe
aaa
mov
jl
mov
inc
sbb
aas
aaa
inc
or
hlt
add
pop
mov
lds
repz
jns
pop
inc
decb
adc
cltd
outsb
push
in
push
hlt
cltd
jg
cmp
and
push
mov
jo
or
push
push
push
sti
xchg
sub
into
sub
jb
xor
sbb
push
adcb
scas
sub
rcrb
hlt
enter
fucom
mov
dec
es
jl
rcll
pop
pop
and
xchg
inc
add
jg
xchg
shll
jmp
jg
pop
xchg
lea
sub
clc
imul
dec
or
sub
jge
mov
iret
fimull
or
out
or
mov
aam
cltd
clc
push
add
movsl
sbb
and
fisttpl
fiaddl
or
fwait
mov
sub
mov
cwtl
fildll
cmp
popa
hlt
xor
lret
adc
lea
test
cwtl
push
es
jg
inc
pop
cmpsb
push
shrl
lahf
punpckldq
or
inc
sub
inc
inc
mov
and
jbe
cmp
mov
mov
and
cmpsb
daa
add
pop
lahf
lcall
dec
pop
scas
inc
mov
xor
rol
in
sub
imul
push
insb
test
popa
cs
mov
dec
cld
cld
jecxz
xchg
enter
adc
lret
fcom
fdivrs
sub
sub
fldl
mov
adc
shrd
aad
dec
jecxz
sbb
lock
mov
dec
inc
mov
cmpl
imul
mov
sti
test
pop
or
aad
popa
xchg
sbb
ret
jbe
out
clc
out
roll
lret
mov
adc
jecxz
roll
pushf
mov
lds
xchg
inc
popa
adc
lds
inc
loope
in
xor
mul
fisubrl
sub
je
mov
iret
mov
mov
pop
je
inc
aas
push
fbld
and
js
push
out
hlt
add
xchg
sbb
jae
jns
jo
push
in
pop
mov
cmp
data16
sbb
in
rcl
mulb
pop
negl
pop
xchg
mov
in
outsl
lds
xlat
mov
push
adc
xchg
aam
inc
loop
loopne
lret
inc
inc
imul
popf
ja
loopne
push
scas
aaa
fildl
idivl
shrb
fptan
mov
mov
test
aaa
outsb
out
cld
jnp
mov
sub
into
ss
inc
insl
fs
jb
jne
test
arpl
out
test
mov
jb
xchg
mov
jmp
scas
xor
cli
mov
or
mov
dec
mov
pop
ret
stos
mov
rcll
jae
mov
jmp
jl
mul
cmp
mov
dec
jb
pop
lahf
mov
adc
mov
not
push
lea
loop
scas
push
push
push
sub
std
adc
adc
cmp
mov
push
rcrl
rorl
or
mov
pop
sbb
add
dec
jo
scas
mov
inc
sub
hlt
test
lock
es
mov
sbb
pop
enter
pop
push
mov
in
or
mov
xor
lods
xor
xchg
jb
pop
add
bound
aas
mov
inc
leave
sbb
pusha
jp
mov
add
push
aaa
or
sbb
mov
les
leave
jmp
sarl
fsubs
jns
addr16
add
mov
push
or
jmp
test
fs
fs
sbb
mov
push
loop
repz
pushf
jb
addr16
and
ret
gs
stos
daa
fdivrl
xorb
jnp
xor
sbb
sbb
pop
jns
mov
fsin
fwait
dec
sbb
test
and
xchg
mov
push
and
outsl
inc
mov
fldenv
jo
orb
call
loope
stos
mov
sub
adc
jecxz
in
inc
ss
and
add
and
ljmp
ret
lret
out
addr16
shr
ret
stc
movsl
jp
mov
or
inc
mov
jns
and
lods
jmp
lods
std
inc
mov
jle
push
sub
cwtl
xlat
mov
cld
popf
inc
je
in
inc
jmp
in
in
cmp
xor
pop
test
dec
jg
sbbb
xchg
in
jnp
loopne
adc
scas
push
cs
xor
cmp
insl
gs
and
or
int3
jae
or
test
cmp
fnstcw
testl
idivl
mov
mov
stc
jae
xor
je
and
sbb
adc
inc
repz
jp
push
xchg
add
leave
std
stc
xorb
inc
fwait
stos
and
pop
fists
adcl
sub
push
mov
les
dec
jbe
mov
mov
lcall
push
add
add
hlt
and
mov
mov
dec
fimuls
sbb
mov
es
jecxz
and
sub
lcall
inc
sub
fwait
sahf
fwait
push
test
clc
imul
outsb
cmp
mov
cmp
fdivrl
sub
shrl
pop
imull
jecxz
xchg
ret
xchg
dec
sub
inc
mov
stos
sbb
or
andl
push
inc
mov
xchg
xchg
roll
lret
stos
xchg
inc
pop
shlb
es
mov
mov
push
insl
sahf
jns
mov
movsb
lock
or
nop
lcall
nop
jnp
lods
dec
paddsb
xor
inc
push
test
aad
dec
push
repnz
inc
xchg
dec
addr16
inc
lcall
shrl
jae
pop
je
pusha
int
inc
das
movsb
mov
imul
int3
aad
loop
mov
sub
popa
inc
aam
movsb
std
lods
lret
lret
jne
popa
sti
pop
xchg
and
dec
adc
test
test
out
scas
dec
adc
xor
dec
leave
push
push
stc
mov
sar
mov
nop
jle
pop
add
sbb
push
lret
push
es
ret
dec
in
ljmp
mov
mov
hlt
inc
shlb
mov
in
mov
add
mov
mov
inc
add
push
or
push
adc
mov
call
or
jmp
jae
inc
and
jb
shlb
xchg
adc
mov
mov
idivb
dec
pop
mov
jbe
arpl
jne
inc
mov
in
push
fmuls
xor
pusha
mov
les
test
sbb
cwtl
lcall
jne
das
stc
repz
leave
sahf
lea
scas
insl
sarb
loopne
inc
push
mov
shufps
cmpsb
cltd
sbb
dec
jns
sti
xor
subb
xchg
sbb
jmp
popf
xchg
in
cmp
pushf
xchg
aaa
sbb
ret
leave
jns
push
jg
cmc
dec
les
out
lret
imul
and
bound
cmpsb
xor
les
aaa
sbb
xchg
jo
mov
fbstp
dec
lock
fsubr
inc
push
jge
xchg
stc
adc
mov
pop
push
rorl
sbb
movsl
popa
adc
and
sbb
mov
int
mov
adc
fnstenv
mov
mov
fcompl
xchg
cmp
mov
jns
xchg
outsl
orl
sbb
sub
xchg
aad
lret
mov
imul
das
dec
mov
lods
lock
adc
fisubs
mov
mov
pop
stos
add
dec
mov
dec
inc
xor
mov
lods
ret
movsl
lahf
out
ds
adc
xchg
pop
cwtl
xor
pop
nop
lret
cmp
cmpsb
ss
or
mov
add
mov
cmp
mov
mov
mov
cmp
addr16
loop
jg
push
adc
lret
mov
add
push
into
cli
sbb
sarb
mov
add
dec
push
enter
das
sti
or
fsts
xchg
fdivrl
jmp
fstl
cmp
sub
adc
push
pop
dec
sbb
jecxz
pushl
sbb
cltd
jno
cmp
dec
icebp
mov
aas
ds
xchg
pusha
and
sbb
or
movsl
cli
push
mov
dec
fxch
inc
mov
out
push
lcall
enter
std
inc
jp
in
pop
subl
call
pop
inc
jl
mov
push
push
sbb
imul
rolb
aad
pop
pop
xchg
into
xor
js
sbb
inc
mov
out
sub
or
inc
scas
jno
icebp
mov
adcb
dec
stc
mov
fcomi
and
loop
dec
ret
pusha
dec
clc
fmulp
push
imul
repz
push
insb
adc
das
cmp
cmp
ds
sbb
xchg
enter
xor
in
fcoml
adc
mov
and
scas
or
jecxz
arpl
xchg
arpl
lea
mov
adc
cmp
test
xor
jp
hlt
adc
dec
xchg
jno
aaa
divb
ja
adc
sub
push
pop
int3
mov
out
mov
push
dec
fstl
push
mov
fnstcw
push
jnp
jne
inc
mov
xlat
outsb
inc
das
xor
imul
cwtl
adc
in
ss
jae
jmp
xchg
xchg
lock
push
loop
and
and
rorl
and
leave
sti
xchg
int3
sahf
xchg
dec
roll
sbb
lods
mov
lods
cmp
mov
add
xor
lock
mov
sub
insb
rcrb
jp
mov
sarb
repnz
sbb
adc
int3
ret
cmp
sub
jg
mov
pop
inc
ljmp
rcrw
jb
adc
cmp
mov
sub
add
ljmp
movsb
pop
mov
pusha
push
rcrb
aas
subb
add
and
popf
jne
pop
mov
mov
add
jns
add
mov
aam
stc
adc
and
push
repnz
ss
pop
incl
jno
sub
xlat
mov
out
cmpsl
gs
adc
shlb
jecxz
mov
cli
lret
imul
or
std
mov
dec
and
pop
mov
fsubrl
stos
xor
add
mov
mov
mov
cmp
sbb
and
sub
sbb
push
push
sbb
mov
mov
call
pop
xchg
and
cmpsl
int3
int
cwtl
cwtl
mov
js
lds
ror
les
outsl
or
cmp
xor
fucomi
mov
mov
and
sub
adc
pushf
sbb
sub
push
sarb
insb
jp
cwtl
xrelease
orb
fs
sub
mov
ss
adc
divb
xor
jecxz
fwait
mov
adc
adc
jne
mov
push
inc
lcall
or
mov
inc
xor
psraw
jb
sbb
rcr
fsubrl
mov
cmp
jmp
mov
sbb
in
fwait
cmp
pop
out
push
es
ds
inc
xchg
xchg
sti
sub
dec
jo
fiaddl
cmpsb
cli
push
mov
pop
xchg
sarb
sbb
outsb
imul
xchg
pop
cli
fdivp
shl
xchg
push
cmp
push
jmp
or
sbb
cmpsl
ret
lcall
subl
shl
push
dec
fs
jmp
pop
ss
fmull
inc
mov
push
clc
xor
rcl
add
mov
push
cld
aad
ja
imul
bound
popf
inc
lock
or
mov
cli
repz
mov
xchg
mov
mov
sbb
cmpsl
xor
mov
cmpl
xchg
fsubl
repnz
orl
movsl
jp
insb
xchg
out
adcl
lret
popa
mov
sbb
loopne
stc
daa
xchg
test
clc
inc
inc
push
sub
ret
orl
es
sub
cld
lret
pop
enter
jae
xchg
int
add
sar
pop
mov
sarb
cmpb
das
stc
mov
enter
add
pusha
sub
andl
cmp
scas
int
int
je
pop
fbstp
adc
jp
mov
jl
xchg
add
push
jno
xchg
pop
cmp
arpl
iret
das
pop
das
loope
mov
xor
jae
rol
lods
xor
rclb
enter
pusha
add
sbb
insb
cmc
xlat
sbbl
leave
mov
xchg
and
jmp
outsl
adc
shrl
mov
and
cmp
jmp
or
cmp
popf
nop
mov
jbe
mov
pop
cmpsb
cmp
jg
out
testb
clc
movntq
push
and
xchg
leave
cmpsb
cmp
jg
dec
aam
xchg
pop
sub
xchg
sub
push
cmp
sbb
jne
gs
out
adc
sbb
aad
mov
or
outsb
cmp
f2xm1
cmp
clc
jbe
adc
sahf
sub
jecxz
and
clc
ljmp
aaa
das
fsubrp
in
mov
jno
mov
cmp
xchg
sbb
lcall
push
les
xor
sti
xchg
push
mov
popf
xor
sub
inc
out
push
mov
adc
mov
jnp
inc
ljmp
push
and
or
xchg
mov
out
mov
mov
leave
cmp
push
sbb
mov
ljmp
test
adc
aaa
daa
push
test
mov
jo
enter
mov
fbstp
add
repz
dec
mov
ret
push
fistpll
add
mov
out
inc
jg
iret
adc
add
push
cli
ljmp
cs
cli
push
sbb
cmp
cmp
xor
or
shll
inc
data16
push
xor
popf
cld
cmpsb
hlt
repnz
ljmp
dec
jle
hlt
lds
and
push
xchg
fs
es
push
cmpsb
dec
add
imul
add
jne
jge
push
xor
leave
jo
xchg
dec
cmp
adc
sbb
enter
jns
jle
addb
mov
pop
xor
aaa
jp
cmp
hlt
call
and
mov
mov
and
mov
push
mov
dec
pop
mov
sti
sub
push
sub
pushf
mov
xchg
push
push
mov
xchg
lock
daa
lahf
sahf
jle
in
cmp
jl
xor
jg
aam
pop
xchg
push
mov
rcrl
ja
lcall
aaa
and
sub
sarl
push
jb
loop
pop
inc
insl
sahf
das
clc
mov
and
lods
dec
bound
push
mov
sbb
cmp
in
mov
push
xchg
push
jmp
pop
mov
push
and
mov
mov
xor
mov
jmp
dec
sahf
clc
inc
aaa
dec
lods
mov
fisubrs
fdivr
fldz
in
lods
test
and
loope
cli
push
lahf
adc
push
mov
push
stc
xor
fcom
ret
cmpb
and
and
xchg
jo
xchg
test
movsb
fmull
ds
or
aam
add
aam
mov
adc
insl
cwtl
sub
xchg
cli
and
jne
adc
pop
mov
jae
fimuls
and
xor
sbb
mov
jge
out
and
jns
jg
insl
bound
push
outsl
xchg
cmp
push
test
jne
add
rcr
pop
xor
sbb
xor
js
cmp
push
mov
out
dec
aam
or
fimuls
mov
popa
test
outsl
imul
insb
sub
sub
cmp
sbb
and
mov
fists
push
sub
popf
or
dec
or
sbb
leave
js
cmpl
mov
iret
push
iret
jne
lods
fildl
dec
sub
jmp
and
jns
push
lahf
ret
mov
loopne
cmp
mov
aad
dec
das
orl
imul
je
push
loopne
sarl
or
adc
and
dec
jns
pop
mov
xor
aam
in
pop
ljmp
es
jmp
mov
jle
mov
cmp
and
push
lock
and
mov
push
xchg
orl
sub
pop
adc
jp
cmp
mov
jl
lock
or
loop
mov
sub
cmc
cmp
imulb
hlt
mov
in
pop
pop
mov
call
sbb
icebp
popf
pop
mov
inc
test
lea
xchg
push
and
mov
test
into
cmc
dec
inc
xchg
fsubrl
std
in
or
xchg
xlat
mov
jno
xchg
inc
xchg
push
mov
mov
cmpsb
call
mov
cmp
ja
scas
push
je
cld
in
incb
idivb
mov
and
and
jno
inc
xorb
pop
sub
mov
sarb
lock
filds
repnz
popa
mov
mov
pop
mov
inc
div
cltd
inc
cmc
out
fisttpll
mov
loope
cmp
pushf
dec
into
inc
xlat
push
imul
xor
iret
orl
loope
insl
sti
xchg
mov
sub
repnz
data16
les
das
out
iret
call
jl
cltd
loopne
ljmp
jbe
int
jae
add
mov
cmp
dec
mov
in
mov
xlat
out
lods
push
movsb
push
mov
xor
shlb
sti
je
fsubl
ss
int
and
mov
mov
xchg
add
movsl
xchg
jae
rolb
push
or
cs
hlt
icebp
mov
cmp
lods
fs
pop
dec
cmpsl
pusha
add
add
in
add
ss
ljmp
int3
push
popa
mov
leave
pop
jo
jo
mov
arpl
test
jmp
in
mov
pop
pop
lahf
lret
je
and
adc
sub
out
ljmp
movsb
push
mov
xor
jne
cmp
push
movsb
mov
push
test
rcll
fwait
sub
fisubl
sahf
dec
cmpsl
fiadds
aad
clc
cmp
add
cmp
subl
xchg
sbb
outsb
push
cwtl
sti
dec
xor
pushf
scas
mov
sbbl
or
fistpl
mov
hlt
xchg
inc
out
stc
std
loope
push
xchg
rclb
mov
pusha
xor
lds
outsb
adc
movsl
xlat
push
inc
push
mov
cmp
adc
les
out
push
ret
mov
scas
xor
inc
ljmp
lahf
dec
lods
xor
mov
pusha
pop
and
push
ret
adc
push
pop
popa
push
loope
or
adc
jp
mov
inc
fs
xor
mov
inc
jb
mov
pop
dec
arpl
in
mov
xlat
imul
gs
mov
hlt
dec
push
int
ljmp
les
xchg
fcmovnu
sub
add
or
cld
push
shlb
es
int3
xor
in
aas
dec
movsb
or
sbb
xor
mov
cltd
sbb
sbb
rcr
push
outsb
orb
lods
xchg
push
mov
jl
shlb
and
inc
cltd
in
cwtl
dec
mov
test
arpl
lock
xchg
and
push
cld
or
dec
mov
and
dec
pop
aam
cmc
mov
fwait
ret
or
int3
and
js
roll
dec
inc
arpl
mov
adc
mov
cmp
and
ds
into
test
pop
mov
dec
push
call
aad
mov
mov
mov
leave
add
inc
call
fmull
mov
mov
jns
jecxz
aas
and
mov
cmpsl
xor
lret
test
xor
rorl
xor
xchg
scas
mov
jae
adc
aaa
pop
sti
mov
xor
outsb
dec
mov
fcoms
push
mov
lcall
jo
test
lock
test
sub
clc
addr16
std
stos
nop
mov
out
sub
push
out
xchg
xor
js
ja
xor
jne
cmp
ss
cmpsl
aas
movsb
outsb
icebp
push
mov
dec
xchg
cmpsb
inc
icebp
insl
outsl
stos
lods
jle
xor
jl
pop
js
inc
rolb
add
loope
adc
add
ljmp
mulb
loope
push
je
mov
ja
daa
les
mov
jge
out
sbb
cmp
jle
xlat
popf
pop
add
mov
aam
popf
hlt
movsl
sbb
mov
add
push
xchg
aam
adc
into
stc
inc
pop
imul
in
cmp
sub
cmpsl
repnz
test
sbb
insl
add
ja
and
mov
rolb
sub
jl
pop
sbbb
xor
je
jne
jo
push
mov
inc
call
mov
repz
leave
cld
adc
and
dec
movb
dec
insl
rcrl
mov
adc
les
mov
popa
cmp
sysexit
and
pop
lret
jle
mov
inc
jg
or
insl
idiv
lea
in
mov
pop
adc
mov
sub
pushf
add
mov
loope
pop
mov
adc
loopne
and
lahf
jbe
xor
divb
or
sub
in
dec
sub
sbb
rclb
cmpsb
push
sbb
shll
dec
cltd
add
lods
mov
out
xor
mov
pusha
xor
shll
ljmp
gs
fdivl
push
fidivrs
in
xor
cli
xor
imul
sub
add
sub
inc
mov
sbb
dec
lods
xchg
movsb
xchg
add
stos
stos
lock
sbb
inc
sub
pop
stos
sub
sahf
inc
adc
lds
stos
fisttps
push
and
bound
sub
mov
shll
xchg
je
mov
mov
cmp
idivl
jmp
xchg
push
xor
inc
roll
imul
add
call
cmpsb
sbb
addr16
add
fldt
sarl
or
mov
lgs
testb
shl
es
mov
daa
addl
js
idivb
cmp
mov
scas
cmp
insl
lods
xchg
push
and
test
push
mov
pop
cmpsl
push
imul
mov
pop
cmp
or
mov
inc
and
insl
and
in
adc
mov
xor
addr16
test
shlb
mov
jno
aam
mov
movsl
adc
iret
loopne
xor
icebp
mov
sbb
aad
subb
mov
int
iret
cmp
xchg
cmpl
dec
mov
or
inc
mov
cmp
outsb
xorl
cmp
jnp
stos
or
lods
cld
in
shlb
ret
mov
jecxz
push
test
mov
rorb
fadds
out
mov
pop
sbb
mov
outsl
xchg
jecxz
mov
fldz
int3
lods
sbb
jp
stos
sbb
mov
icebp
jns
adc
aad
adc
xchg
daa
popf
icebp
in
adc
sub
lods
mov
mov
cmp
aam
mov
add
cmpsl
cld
sarl
repnz
lock
aad
mov
pushf
mov
mov
inc
add
sub
mov
aad
cmpsl
inc
imul
movsl
sbb
mov
xchg
add
cs
test
rolb
iret
mov
loop
jno
pop
ret
dec
adc
mov
out
fdivrl
cmc
push
rorb
add
push
lea
cli
fldl
stc
mov
xchg
cmc
test
dec
notb
xchg
mov
dec
pop
mov
cmp
int3
xor
std
jp
push
int
ljmp
mov
in
test
lcall
mov
mov
or
sub
ret
test
jo
adc
inc
sub
add
mov
les
into
divb
xchg
jne
arpl
sti
jecxz
and
stc
xor
inc
adcl
arpl
test
pushf
ljmp
aad
cmp
xor
ret
aas
fs
push
repnz
mov
mov
je
aam
pushl
add
out
divps
and
dec
in
pop
in
push
pushf
pop
xchg
adc
je
les
cmp
or
dec
stos
fcompl
sub
mov
sub
lods
orl
or
dec
aad
adc
sbbb
in
andl
jecxz
das
inc
aad
inc
aad
pop
stc
popa
pop
mov
inc
and
or
jae
subl
xchg
pop
es
enter
decl
sbb
inc
les
dec
xor
fbld
out
add
subb
lret
cmp
sub
adc
enter
lods
nop
mov
dec
lret
fucomp
add
xor
ficomps
cmp
jl
push
addl
dec
mov
add
scas
and
xor
lret
icebp
mov
movsl
lods
jmp
cmp
and
sti
pop
xchg
and
and
xchg
adc
mov
dec
add
aas
cltd
inc
insb
push
cmp
pop
xor
add
je
lret
push
rcl
fisubl
jl
mov
sub
add
shlb
popf
addr16
testl
mov
push
lcall
ret
repz
mov
sti
incl
sbb
pop
out
push
pop
add
int
mov
inc
roll
or
test
push
mov
mov
or
mov
enter
repz
mov
xor
xor
incb
dec
sarb
mov
mov
push
adc
jnp
xchg
int3
jae
push
es
add
cmc
lcall
add
add
dec
scas
xchg
imul
xchg
shlb
dec
fcom
dec
jmp
jle
fisttps
xchg
stc
cld
mov
outsb
cmpsb
push
fs
jno
movsl
xor
ret
mov
sbb
xchg
in
jl
adc
cmc
sbbb
out
xorl
inc
xor
loop
cwtl
dec
rorl
mov
andl
or
inc
or
cmpsl
test
mov
das
fisubs
cmp
sahf
int
pop
mov
dec
mov
lods
mov
test
dec
stos
aam
sub
es
sub
mov
cmp
pop
aas
add
or
int
aad
pop
shlb
hlt
push
mov
mov
lock
cmpsl
out
pop
xor
add
jnp
jbe
cmp
dec
addr16
js
mul
add
xchg
test
test
pop
or
pop
or
test
cld
sahf
cwtl
lahf
xchg
pop
adc
jbe
xchg
pop
xor
and
pop
add
push
pop
lds
push
test
lds
call
fnsave
movsb
pop
pop
pop
add
cmpsl
into
jnp
mov
and
mov
inc
inc
jno
mov
push
lahf
jne
aam
pop
adc
mov
sub
push
shll
mov
idivl
xchg
outsb
adc
mov
pop
rolb
shl
addl
sub
loope
push
inc
shrl
sbb
repz
mov
sarl
mov
stos
pop
push
or
orb
pop
dec
mov
or
sbb
jmpw
cmp
stos
gs
add
call
clc
xor
mov
test
cs
or
xchg
push
jae
xor
push
xlat
imul
dec
insl
sub
jno
jbe
dec
and
cmp
aad
loop
mov
push
test
fwait
out
inc
adc
fwait
gs
lods
adc
or
pop
adc
jg
in
and
into
shrb
out
mov
adc
aaa
stc
mov
scas
test
jmp
sbb
rclb
mov
fcomps
xor
movsl
outsl
dec
or
cmc
ret
add
jb
stc
stos
and
mov
dec
insb
push
jns
lds
and
inc
sbb
hlt
and
push
jo
fcoms
mov
jmp
xchg
adc
cli
push
imul
movb
jns
scas
mov
cli
add
fsubs
sbb
adc
hlt
push
rolb
pop
fdivrl
nop
jle
hlt
and
or
adc
adc
insl
sahf
mov
xchg
ffreep
lock
sub
mov
daa
mov
divb
mov
out
in
and
push
dec
push
push
inc
out
xor
pop
pop
divl
or
inc
pop
sbb
aas
std
in
and
mov
sbb
in
adc
mov
rclb
pop
jg
xor
xchg
mov
mov
mov
xchg
adc
or
loopne
add
es
push
icebp
xchg
gs
shrl
lret
ret
fiadds
gs
and
cli
mov
cmp
incl
inc
inc
lock
cld
and
outsl
cmpsb
movl
jg
mov
mov
std
shlb
fcomps
push
pusha
movaps
lahf
xor
mov
in
mov
cwtl
or
push
stc
cwtl
cmp
imul
add
push
inc
mov
sbbl
cmpsb
and
pop
adc
mov
xchg
divb
movsb
out
mov
mov
adc
bound
es
jle
mov
dec
call
cli
fwait
mov
mov
ficoml
iret
xchg
cmpsl
inc
mov
mov
dec
out
js
lcall
adc
and
rclb
pop
popa
stos
xor
or
pop
jbe
xchg
mov
xchg
jge
insl
fimuls
mov
xchg
jae
lods
xor
pop
testb
js
lret
pop
mov
or
mov
mov
jns
dec
xchg
outsb
jle
fimull
jno
cltd
jbe
mov
lds
sarl
loope
push
pop
lret
inc
sbb
pusha
pop
jns
dec
cmpl
hlt
cmc
loopne
xor
ror
xor
ret
sub
pop
xchg
pop
dec
jbe
push
mov
iret
shlb
repz
jns
lods
jg
jne
jnp
lea
and
ds
or
in
lret
jb
adc
cmp
out
fistps
inc
rolb
bound
adcl
or
lret
rolb
jmp
or
ret
bound
push
fwait
shrl
xchg
xor
das
mov
pop
nop
in
pop
imul
adc
dec
jbe
or
notl
dec
mov
lret
divl
xchg
mov
push
stos
out
mov
xchg
mov
ss
mov
test
hlt
add
sub
dec
push
cmp
aaa
mov
mov
clc
mov
push
test
cld
jae
jae
in
adc
fs
rclb
pop
sub
ret
mov
xlat
test
bound
and
das
scas
scas
dec
into
xor
sub
repz
mov
jge
push
iret
fucom
push
roll
sub
xor
jnp
mov
sbb
lock
adc
add
cmp
xchg
jl
inc
dec
insb
jbe
cs
loope
mov
sbb
and
popa
lret
movsl
adc
cs
jecxz
mov
adc
gs
adc
cmpsb
scas
insl
jge
mov
mov
xchg
idivl
push
out
jmp
cmc
inc
pop
mov
enter
cmpsb
daa
pop
jb
and
xchg
jmp
inc
push
mov
sub
xor
xor
and
pushf
sahf
ficoml
push
dec
jl
inc
or
sub
lahf
inc
jnp
gs
xlat
test
loopne
scas
and
cmp
lods
fidivs
js
cli
pop
dec
push
int3
and
std
jno
pop
adc
cmpsb
arpl
xchg
popf
scas
lret
rcr
cltd
add
xchg
leave
cmpsl
rolb
jae
loopne
or
out
imul
lea
je
stc
cltd
scas
call
mov
pop
and
iret
dec
fdivl
shrb
nop
adc
jae
outsb
cwtl
pop
imul
pop
xchg
aas
outsb
popl
push
ljmp
xlat
adc
out
pop
pop
pop
and
sub
cmp
and
pop
mov
mov
pop
int3
push
scas
loop
mov
cmp
leave
test
fiaddl
movsl
lret
fildl
idiv
lea
je
inc
rcll
mov
imulb
inc
inc
mov
aam
xor
push
fbstp
icebp
jb
inc
cmp
fldt
pop
push
jb,pn
push
cs
pop
jb
sub
pop
and
mov
mov
add
push
movsb
pusha
cmpsl
subb
add
negb
fwait
test
sbb
dec
out
ljmp
push
xchg
xor
mov
dec
mov
fcompp
pop
out
jmp
mov
sbb
fbld
jmp
popa
inc
insl
imulb
xor
aaa
mov
dec
ja
arpl
test
aaa
in
adc
adc
sub
sbb
mov
sarl
push
cmp
cltd
ja
clc
jb
fnstenv
mov
cmp
push
push
xchg
cmp
shlb
dec
xor
cmp
sarl
sti
jge
adc
pushf
jmp
lds
js
sub
cmc
cmp
cmp
sub
add
cmp
les
push
push
xchg
sub
pop
xlat
jl
jne
xchg
outsl
idiv
add
and
aad
out
scas
jg
fmull
fmuls
in
ljmp
sbb
dec
add
cmp
xor
cli
ss
test
fmuls
xor
jge
in
jne
xor
push
shll
adc
mov
mov
xor
lock
jne
cmp
add
xchg
dec
data16
outsb
pushl
mov
sub
push
test
loope
pop
lods
ljmp
and
and
jb
and
dec
xor
and
xlat
repnz
addb
mov
arpl
xor
stos
loop
dec
sub
ja
mov
imulb
sbb
imul
ljmp
jmp
jns
push
push
push
and
mov
sub
jbe
inc
into
mov
leave
sub
adc
and
cmp
cmpsl
xlat
ljmp
push
sbb
lock
dec
fstpt
jne
outsb
xchg
dec
jns
test
pop
add
push
clc
mov
lods
out
dec
inc
pop
fdivp
fnstsw
ss
jmp
sahf
imul
loopne
mov
pop
fmul
icebp
cli
fstl
div
test
fbstp
mov
or
pop
mov
iret
shlb
xchg
lea
jnp
je
andl
cmp
lods
push
jle
test
jb
ja
inc
mov
lock
pop
push
jecxz
sbb
enter
pop
lock
inc
popa
dec
aaa
pop
ret
mov
int
out
and
iret
inc
sbb
repnz
fildll
sbb
lret
insl
sbb
cltd
fsubs
pop
mov
subb
cmp
mov
sbb
lds
inc
pop
inc
mov
adc
inc
int
pop
pop
pop
aas
dec
in
lret
sub
fdivr
leave
xchg
sub
mov
jg
pushf
xor
sub
into
bound
xchg
ja
sub
in
push
and
mov
aam
out
dec
xchg
popa
xchg
jno
ficoml
dec
rclb
pop
mov
fldt
push
mov
pop
lock
pushf
aam
lds
dec
aas
or
rol
fadds
sti
call
bts
das
call
or
das
andnps
push
adc
or
add
jl
out
cs
sarl
add
adc
push
movsb
add
insl
or
sarl
in
jne
pop
shlb
pop
add
pop
adc
jns
jg
mov
mov
shrl
sbb
and
fldenv
adc
in
aad
jno
xchg
popa
gs
xor
ret
jmp
adc
adc
jg
fildll
and
stos
or
daa
idivl
lock
repz
mov
dec
cmc
icebp
dec
fdivr
fldt
popa
std
or
push
jge
cmpsl
enter
mov
js
lds
mov
test
repnz
mov
rorl
fwait
out
sbb
adc
xlat
jl
call
lret
js
push
or
and
add
orl
outsb
imul
ljmp
mov
mov
jecxz
cmp
js
fisttpll
pop
xchg
mov
test
movsl
xchg
cmp
fnstenv
pushf
jnp
adc
or
loopne
loope
jo
into
mov
rolb
mov
xor
test
xchg
sbb
ja
pop
and
jg
imull
ret
sbb
cmp
std
inc
cmp
addl
into
mov
out
mov
ss
in
xchg
or
pushf
push
mov
xchg
call
inc
lea
push
cmp
rcr
xchg
mov
pop
and
add
stos
push
dec
pop
xchg
adc
mov
add
enter
out
nop
dec
cmp
xor
jp
ljmp
scas
inc
cmpsb
sbb
enter
add
sti
dec
test
out
inc
mov
inc
les
mov
add
cwtl
pop
ja
ficomps
out
stc
jmp
stos
pop
stc
adc
lds
mov
jns
cli
fstpl
arpl
cld
jnp
add
dec
int3
sahf
mov
fildll
push
and
cltd
shrl
lret
stos
movsb
cmpsl
jae
fsub
add
jnp
and
or
sub
frstor
inc
mov
sub
js
lods
fistps
lods
outsl
jnp
outsb
mov
dec
and
inc
xchg
or
inc
mov
aad
enter
cmp
pop
psrlq
addl
in
js
pusha
hlt
mov
jmp
fidivrl
pop
mov
repz
sub
dec
mov
jp
cmp
mov
inc
arpl
out
push
xor
push
jmp
xorl
mov
aad
pop
and
sub
mov
adc
mov
or
je
int
sub
test
enter
and
rcll
push
sbb
dec
mov
dec
sub
into
rorb
dec
xchg
das
mov
jno
cmpsb
pop
mov
xchg
push
popa
jbe
pushf
or
outsb
jl
jo
or
enter
push
cltd
or
daa
mov
ret
std
cmpsl
test
mov
dec
adc
sub
in
js
notl
mov
add
rcrl
mov
and
inc
je
mov
hlt
fstpl
fs
inc
mov
push
loope
es
xchg
addr16
lcall
xchg
push
mov
adc
sbb
cmp
adc
xor
mov
and
fwait
cmp
sub
and
sub
mov
rcll
int
out
mov
cwtl
scas
mov
mov
cmp
push
and
xchg
cwtl
jecxz
mov
xchg
stc
cmp
in
lret
jmp
and
push
and
divl
je
push
scas
outsb
cld
test
js
mov
imul
mov
sbb
es
mov
repz
jnp
sub
xor
vcvtsd2si
scas
and
scas
outsl
adc
repnz
ljmp
xchg
and
or
cli
sub
enter
sbb
shll
xchg
or
outsb
and
fdivs
test
iret
cmc
rol
or
das
add
mov
les
add
or
sub
mov
into
xor
sbb
or
mov
test
or
cmp
mov
pop
adc
insl
mov
shll
js
adc
add
or
pusha
mov
dec
cmpsb
lahf
jle
or
cmc
cmp
add
inc
adc
data16
pop
pop
inc
and
test
aad
lods
leave
pop
xchg
imul
mov
shll
xchg
pop
leave
bound
lahf
mov
xor
dec
jg
aaa
jbe
xlat
push
gs
into
mov
dec
addr16
notb
dec
xor
ret
test
xor
add
lahf
outsl
das
aam
pop
lea
add
xchg
xor
movsb
adc
shl
out
adc
in
or
mov
cmp
and
repz
mov
fstpl
nop
popa
xchg
push
pop
inc
fiaddl
xchg
pop
cli
jecxz
sbb
dec
pop
je
mov
cmpsl
dec
mov
add
mov
je
cltd
xor
in
ret
imul
movsl
lcall
fildl
popa
pop
cmpsb
dec
inc
pop
std
mov
testb
in
jnp
int
mov
stos
push
add
loope
jmp
cmp
and
inc
je
push
xchg
jbe
jb
movsl
es
mov
xor
mov
test
mov
test
jge
in
cmpsl
fnstsw
mov
js
adc
xchg
jg
pop
push
shrl
mov
ss
jp
shll
and
xchg
pop
fsubrs
das
das
and
sbb
and
pop
aad
lods
and
pop
inc
or
ret
xor
sub
popf
pop
dec
sbb
mov
mov
fldl
xchg
xchg
mov
push
int3
cmpxchg
pop
xor
and
cmp
mov
xor
insl
jne
fs
pushf
xor
mov
clc
ds
xor
ret
jo
adc
mov
scas
and
stos
jl
lods
xchg
inc
dec
daa
pop
sub
adc
jno
hlt
jnp
xchg
mov
jmp
inc
std
xor
sti
pop
inc
aad
mov
ds
xchg
pop
arpl
pop
cs
lods
inc
sub
mov
pop
inc
mov
int
jge
call
xchg
cli
jno,pn
cld
mov
je
iret
loope
cwtl
test
push
pop
andb
sti
and
das
cltd
mov
aam
and
loopne
stos
xchg
cli
add
test
mov
dec
faddl
sti
mov
lock
sub
out
dec
pop
lcall
leave
push
inc
cmpsl
nop
mov
test
outsl
enter
jns
pop
sar
xor
pusha
jbe
cmp
je
mov
mov
push
stos
pop
or
ss
add
cmpsl
insb
and
std
sbb
mov
mov
mov
iret
pusha
out
rcrl
pop
rolb
push
in
sbb
mov
mov
and
lds
jb
dec
sbb
imul
add
sbb
push
push
jmp
sbb
lret
dec
lahf
test
popa
xchg
mov
lock
inc
pop
mov
cmp
xchg
jg
lds
push
fldenv
jae
sbb
dec
icebp
lret
pop
pop
rol
fldenv
xor
sahf
test
xchg
bound
std
sub
imul
lea
int
pop
xor
cmp
cmpsb
dec
xchg
scas
pop
pop
push
cmpsb
lret
mov
xchg
ljmp
dec
mov
xor
cmp
pop
popa
cltd
jecxz,pn
add
les
aam
add
hlt
sbb
scas
add
pop
xor
dec
add
das
mov
movsb
sahf
nop
sub
movsl
js
xchg
mov
shrb
and
sub
mov
xor
fbld
filds
mov
push
fildll
add
popf
popf
in
popa
mov
sbb
sub
jmp
sbb
push
jb
xor
sub
lret
popf
pop
fucomip
iret
xchg
out
loope
mov
and
xchg
add
cmpsb
xchg
sub
iret
test
aad
mov
cmc
sub
jmp
dec
ds
push
jne
and
lcall
bound
add
insl
loopne
and
icebp
cmp
aad
paddsb
inc
aam
jle
int3
out
aam
and
inc
leave
mov
cmp
mov
fucomi
push
mov
xor
int
mov
jmp
les
pop
cmpsl
pop
jge
and
mull
rclb
sub
add
pop
mov
orb
scas
pop
into
push
mov
pop
pushw
lock
adc
adc
fadds
mov
stos
mov
xchg
cld
mov
in
pop
mov
sub
xor
mov
test
ljmp
sarl
sti
stos
pop
pop
jo
inc
lcall
xchg
mov
sbb
loope
mov
xor
popa
and
nop
xorl
xor
xchg
popf
add
jp
test
sub
inc
rcr
inc
test
jbe
pop
push
xchg
dec
mov
out
pop
cmp
ss
orl
iret
sbb
cltd
or
imul
pop
jge
and
pop
xchg
cld
adc
push
imul
sub
or
rcrb
outsl
jge
push
fs
jmp
clc
xchg
push
scas
push
ljmp
add
data16
insb
xlat
dec
and
xor
dec
xchg
testl
pop
dec
xchg
mov
push
out
and
inc
daa
or
and
dec
movsb
mov
js
imul
outsb
sbb
sub
xchg
test
pop
into
in
sbb
out
lods
lods
push
dec
outsb
lea
jecxz
mov
mov
leave
cmp
test
push
sub
cmp
call
jo
les
cmp
mov
add
adc
or
cmp
cmp
clc
sub
into
xchg
bnd
loope
int3
lock
mov
adc
testb
fmuls
push
in
jmp
dec
popa
mov
mov
xor
stos
loope
mov
lods
into
std
arpl
imul
cmp
xor
dec
push
cmp
sub
sub
push
jae
sahf
mov
cmp
ljmp
pop
sub
jbe
and
jbe
dec
jae
and
pop
jns
mov
scas
fstl
daa
mov
cmpsl
and
xchg
insb
mov
popf
bnd
xchg
out
adcb
insb
stc
mov
int3
mov
push
shlb
inc
adc
cmpb
inc
sub
push
aad
fwait
lahf
xacquire
mov
rorb
arpl
adc
inc
in
mulb
add
fildll
xor
jg
outsb
jecxz
mov
mov
loope
jb
pop
cmpsl
lea
in
lcall
mov
mov
cld
sub
mov
mov
call
cld
cmp
sbbb
dec
in
mov
cmpsl
mov
push
test
loop
sub
inc
dec
push
cmp
push
insb
xlat
ljmp
sub
pop
xchg
inc
rep
or
push
jae
mov
xchg
jns
pop
loop
push
je
es
aam
sbb
lcall
out
ret
lods
xchg
jo
mov
lock
int
add
pop
insb
cld
or
into
lret
dec
out
mov
mov
xorl
push
add
jb
cmpsb
enter
xchg
sub
inc
mov
shrl
in
daa
cmp
sti
pop
cmp
jno
xchg
mov
and
test
aas
xchg
xor
arpl
sbb
clc
add
es
mov
dec
jo
rcr
enter
cmp
loopne
leave
cwtl
ret
out
montmul
cmpsb
ret
jl
aas
fistl
mov
jno
push
scas
sbb
jae
stos
out
cmp
mov
rorl
cli
adc
or
cmp
sub
push
rcrb
push
push
push
mov
sti
mov
test
and
pushf
push
xor
mov
or
stos
sub
jl
sub
xor
mov
pop
movsl
sub
jg
fdiv
cmp
push
cmp
adc
dec
xlat
scas
inc
pop
ret
call
lock
push
lock
push
ficoml
loop
pop
test
mov
jno
fstpt
sbbl
cmp
and
mov
fldcw
test
loopne
and
adc
outsl
push
jl
ds
jl
push
cmpl
subb
je
shr
mov
shll
aaa
add
ljmp
sbbl
out
adc
iret
jmp
jb
mov
adc
popa
fdivs
rcll
rcll
popa
fidivrl
or
je
xor
icebp
inc
fdivr
xor
dec
or
dec
cltd
add
fisttps
sbbb
add
sub
ja
stos
pop
push
jno
dec
movsl
mov
xlat
mov
dec
pop
lea
xchg
adc
fstpt
mov
test
rolb
add
int
or
fidivrl
insb
insb
dec
daa
add
out
jb
jp
outsb
cwtl
out
xor
xchg
repnz
gs
inc
pop
cmp
push
push
mov
and
stos
inc
jle
or
jbe
in
sbb
out
jne
dec
pop
ds
das
in
cmpsl
rcrl
inc
mov
sbb
mov
cmp
push
call
jb
jns
adc
cmp
cmp
sub
pop
pop
sbb
test
faddl
jnp
test
mov
bound
sub
mov
rcll
cltd
into
aaa
adc
mov
push
push
dec
stos
and
das
jbe
xchg
nop
les
sub
sbb
mov
adc
push
pop
or
into
xor
cs
dec
dec
sbb
cmp
lods
les
push
xor
pop
cmp
aam
iret
mov
mov
test
push
adc
fwait
icebp
mov
push
test
xlat
loopne
dec
inc
nop
out
mov
outsb
push
bnd
jecxz
xchg
sbb
mov
dec
ds
xchg
jl
into
mov
mov
push
jmp
daa
test
test
jge
mov
push
insb
cmp
sbb
cmp
scas
inc
xchg
adc
nop
lds
inc
push
adc
pop
lods
fcoml
mov
mov
lret
xchg
and
aaa
and
xchg
iret
icebp
cmp
outsl
ss
cmp
hlt
cmp
xor
or
add
insb
cmpsb
data16
inc
adc
aad
or
cmp
mov
scas
xchg
movsb
push
imull
adc
repz
enter
arpl
test
lods
fdivrl
mov
popa
xchg
add
push
xchg
jbe
lock
popa
dec
lahf
mov
or
and
dec
les
mov
lea
mov
xchg
decb
mov
fldcw
mov
lods
push
fcoms
enter
sbb
mov
mov
data16
pusha
sti
pop
addr16
sbb
jne
out
pop
lds
imul
sarb
mov
out
rcrl
pop
jmp
sbb
cwtl
mov
sub
inc
scas
iret
shll
and
xor
adc
or
mov
data16
jg
mov
sbb
add
add
pop
push
xlat
mov
sub
xor
jne
cmp
mov
sub
jg
pop
aad
pop
xchg
xchg
loop
in
nop
jle
push
lock
lcall
inc
imull
mov
pop
hlt
inc
pop
out
aaa
in
lret
cmpb
dec
es
pop
push
and
sub
fwait
cmpsl
test
fnstcw
xchg
sbb
stos
fistps
outsl
inc
dec
int3
ss
out
mov
or
and
jmp
test
jg
shl
aam
adc
inc
pop
cwtl
jg
mov
dec
loopne
mov
enter
iret
negl
push
pop
xor
push
push
xchg
pusha
xchg
psubd
sub
imul
jp
loopne
loope
fcmove
js
xchg
push
push
inc
mov
push
xlat
aaa
sub
jno
sbbb
mov
mov
jno
cmp
shl
inc
out
nop
adc
fstpt
imull
je
in
adc
pop
in
es
movsl
add
fdivrl
lret
ss
clc
and
pop
lock
xchg
lahf
imul
dec
xor
cmc
pop
mov
cmp
xor
adc
imul
iret
xchg
mov
cld
xor
int
pop
fidivrl
roll
or
fsubrp
je
fiaddl
xor
popa
mov
xchg
mov
xor
shrb
outsl
xor
stos
mov
mov
push
pop
sbb
cld
sbb
add
xchg
cwtl
mov
jae
cwtl
jo
sti
cmpsl
fdivs
cmpb
jecxz
cmp
into
test
inc
das
or
push
xor
cli
sbb
mov
cmp
mov
lock
enter
inc
push
push
repnz
in
adc
push
jnp
push
and
lret
sub
adc
lret
insl
pop
loope
dec
xchg
imul
and
jnp
mov
mov
out
xchg
and
shlb
pop
jnp
dec
sbb
shlb
cmpsb
push
adc
cmp
jmp
ret
inc
add
push
and
jne
les
addr16
rcl
shrl
xor
lods
add
pop
xor
sarl
inc
nop
outsl
loop
dec
push
add
popa
fidivs
pop
jb
cltd
jb
das
jnp
pop
mulb
push
stc
dec
iretw
test
leave
repnz
cmp
bound
sub
lahf
sbb
mov
xor
addl
lcall
nop
repz
and
in
out
in
adc
mov
rorb
dec
mov
sbb
imul
sbbl
sbb
repz
mov
dec
ljmp
dec
in
sbb
cmp
mov
sub
repz
hlt
push
sub
fidivrs
ja
fdivs
dec
fidivrs
rorb
ret
shrb
sbb
clc
mov
push
js
jmp
int3
out
movsb
movsb
inc
aad
sbb
inc
lcall
imul
sub
dec
out
lahf
mov
lock
jg
xor
pop
addr16
add
ss
mov
mov
lret
in
jecxz
push
or
push
insl
and
inc
sbb
test
cmpsl
repnz
xor
or
pop
sbb
in
push
insl
in
out
dec
xor
and
hlt
test
mov
jle
jle
ljmp
gs
mov
pop
int3
sti
orl
mov
inc
fwait
adc
jns
and
mov
mov
daa
mov
pop
stc
ror
sahf
fnstsw
cmp
mov
loop
insb
dec
mov
xchg
push
rcll
cmpb
repz
cmp
and
dec
mov
push
mov
push
mov
dec
icebp
fnstenv
clc
jmp
add
cmp
dec
fwait
mov
stc
jae
or
aad
pop
adc
into
xchg
arpl
or
aam
or
jl
mov
xchg
loope
stos
mov
pop
and
mov
and
pop
adc
xchg
fwait
pop
das
lcall
in
pop
sub
out
or
inc
rcl
jp
cmp
sub
inc
push
fildll
roll
or
movsb
dec
iret
pop
lret
rcl
popf
or
sub
sub
lods
pop
into
stc
push
mov
addr16
sub
or
test
sbb
hlt
cmc
cmpsb
pushf
aaa
dec
arpl
inc
sub
sub
sbb
push
lods
sub
jmp
push
lods
cld
inc
in
dec
pop
testl
cmp
and
and
lea
add
or
fs
sub
daa
cli
in
mov
sbb
mov
insb
loopne
xor
pop
stos
dec
lret
mov
scas
pop
push
loopne
shlb
cmpsb
out
ja
dec
incl
sbb
and
repz
data16
and
xchg
lahf
or
sbb
adc
movsb
data16
cltd
mov
lock
leave
add
es
sahf
notl
xor
mov
adc
dec
push
xchg
int
jo
inc
cmp
cmp
rolb
outsb
cltd
xchg
mov
aam
out
int3
mov
repnz
ret
xlat
jge
leave
pop
xor
jmp
ds
jns
xchg
std
mov
lods
stc
shlb
addr16
cmp
das
rorb
sbb
outsb
hlt
lds
add
xchg
mov
xchg
sbb
out
cmp
pop
jb
insl
add
mov
sbb
insb
loop
ret
cwtl
jp
adc
dec
pop
push
shll
ftst
ds
pop
mov
pop
hlt
and
cltd
movsb
mov
imul
adc
popf
mov
ret
push
into
icebp
lock
fiadds
pop
mov
inc
rorl
adc
mov
sahf
and
mov
mov
mov
gs
push
or
insb
notb
and
adc
rolb
push
lret
push
pusha
lods
push
inc
mov
adc
cmp
sub
jbe
bound
or
lret
pop
xchg
loop
in
mov
xchg
and
fimull
ret
hlt
loopne
cmp
clc
cltd
movsl
int
jmp
push
push
repnz
std
into
shlb
popa
push
sub
mov
and
push
insb
lahf
inc
sbb
add
cwtl
popa
je
push
nop
cmp
mov
pop
push
pushf
inc
test
notb
aam
pop
mov
in
in
dec
addr16
test
repnz
sub
xor
fmull
mov
and
xchg
push
pop
adc
dec
ds
aas
xchg
mov
pushl
push
sti
cmc
mov
xchg
cmp
dec
pop
push
stc
mov
rcl
test
mov
lret
xor
inc
sub
and
jno
cmpl
mov
lahf
aad
in
cli
jg
inc
jno
adc
sahf
cmc
inc
mov
xchg
mov
jae
fs
mov
loop
dec
int3
fisttps
into
adc
imul
or
adc
xor
test
sahf
hlt
dec
jne
mov
js
shl
jae
xor
cmp
push
xor
inc
out
cmpsl
lahf
std
int3
lahf
push
sub
les
cmp
loop
pop
lcall
sarb
and
ljmp
jp
mov
xchg
imul
jg
push
js
cld
dec
fxch
mov
movsl
jo
mov
out
test
aad
sahf
or
mov
sub
leave
or
jge
dec
add
xor
std
mov
nop
dec
pop
sbb
fimull
inc
jmp
cmp
sub
sbb
popf
outsl
and
in
mov
ljmp
lea
add
dec
stos
cld
and
or
or
adc
pop
jnp
lret
lret
xchg
add
xorb
pop
orb
inc
imul
xor
cld
insb
ret
cmc
ljmp
inc
lods
dec
lea
add
xor
stc
sub
mov
lods
jo
push
popa
push
pushl
mov
insl
sbb
jle
cmc
xor
mov
test
scas
jp
shlb
push
ds
adc
loope
fld
mov
pop
inc
dec
lret
outsl
and
push
dec
inc
sbb
and
xchg
xchg
pop
mov
out
or
cmc
xor
push
arpl
add
dec
inc
fbld
pop
pop
cmp
mov
lret
xchg
or
pusha
data16
xchg
data16
sbbb
out
mov
jmp
sub
adcb
sub
mov
push
inc
cmpsl
and
mov
push
mov
int
data16
jl
jns
sbb
fidivrl
add
cmp
xchg
aaa
cmp
call
fwait
cmp
stc
test
leave
dec
loope
cmovs
mov
xchg
les
push
pop
test
andl
daa
in
inc
jne
jb
pop
cmp
in
mov
lea
dec
outsl
xchg
push
pop
jo
cld
push
add
test
and
xchg
sub
jmp
sub
ret
cmp
repz
cmpsb
mov
cmp
and
adc
lret
imul
push
or
insl
ljmp
lea
pop
mov
pop
cmp
inc
mov
mov
push
hlt
sbb
lods
cltd
adc
mov
jo
cld
sub
fmul
fisttpl
inc
jle
rclb
lcall
sbb
inc
cli
pop
fcompl
mov
sbb
mov
mov
shl
fs
pop
test
xor
mov
loope
out
jo
mov
jbe
add
int
loop
or
filds
and
mov
dec
cwtl
push
addl
fstpt
sbb
add
fsubrs
movsb
adc
mov
xor
mov
cmp
mov
dec
xchg
pop
fildl
mov
xor
pop
mov
cmc
pop
das
ja
fwait
push
add
std
adc
imul
in
jge
icebp
movsl
or
jmp
jns
or
testb
mov
imul
cwtl
mov
mov
out
lcall
push
sub
scas
and
sahf
fldt
loop
arpl
push
mov
outsb
jecxz
out
fwait
mov
or
in
sar
adc
aam
sbb
imull
cmpsl
mov
dec
adc
adc
lcall
scas
scas
jmp
dec
mov
sbbl
add
pop
aam
fisubrl
dec
mov
shll
dec
add
outsl
into
jp
pop
rcr
push
xor
push
fwait
or
in
xchg
pop
shll
fbstp
pinsrw
ret
call
adc
mov
push
mov
sub
adc
sti
adc
pop
fistpll
jo
sbbb
pusha
xchg
cs
sub
jge
pushf
mov
cmp
repnz
call
pop
bound
or
pop
mov
orb
cwtl
jmp
push
sbbl
jns
xchg
adc
fadds
std
out
fsubl
mov
stos
mov
push
fs
pop
and
lods
movsl
and
push
xchg
jecxz
cmp
adc
add
mov
sbb
dec
repz
mov
sub
arpl
popf
aad
cld
xor
and
in
inc
dec
cmp
enter
ret
mov
mov
testl
sbb
mov
cmp
pop
aaa
adcl
iret
inc
pop
leave
mov
and
sub
gs
pop
js
pop
lods
inc
rcl
xor
adc
sbb
add
je
inc
mov
and
es
ja
call
bound
cmp
out
pop
rcrb
pop
icebp
test
lock
adc
cmpsl
icebp
movsl
pop
mov
xor
cmpsl
or
push
adc
mov
icebp
aad
adc
dec
insb
sub
add
fistpl
xchg
outsl
or
pop
testb
repz
jno
mov
test
sub
and
les
loop
enter
std
imul
hlt
and
aas
cmp
lock
mov
sub
cmpsb
stos
pushf
mov
xchg
dec
adc
ds
mov
pop
xor
cwtl
aad
push
dec
adc
call
cmpsl
lds
imul
movsl
imul
xchg
add
sub
das
out
inc
sub
dec
xor
leave
xchg
pop
or
lods
mov
repz
adc
fisttps
mov
dec
into
push
mov
rolb
and
pop
push
lock
pushf
call
jno
xor
or
mov
or
ljmp
dec
push
in
cmp
or
lahf
jmp
in
sbb
adc
sub
sub
jae
std
ja
cld
cmp
sbb
pop
outsl
popfw
in
scas
cli
shll
push
xchg
mov
pop
and
orl
adc
push
imul
aam
xchg
pop
dec
xor
and
jmp
jbe
in
aad
or
fs
jmp
jge
or
push
sbb
mov
dec
push
rolb
movsl
fnstenv
dec
inc
add
fnstsw
aad
inc
and
dec
push
push
sbb
push
cmpsl
inc
push
test
jg
cld
sub
xchg
fcmovbe
loopne
mov
and
pop
sbb
sub
inc
call
mov
fldt
adc
jmp
div
addl
fnsave
int
addb
mov
mov
pop
stc
mov
scas
test
cli
stc
sub
jb
fwait
jae
xorl
and
jge
mov
pop
rol
test
fstps
aaa
nop
xchg
test
fsubrs
add
lods
out
repnz
arpl
fldl2t
mov
mov
pop
sub
sub
mov
and
js
in
inc
fadds
jecxz
shll
mov
cltd
scas
or
sbb
aad
mov
insb
dec
ret
pusha
shrl
cmp
inc
enter
movsb
mov
mov
popa
cmp
test
xchg
out
pushf
fsub
test
cli
push
or
sarb
inc
aam
in
nop
lods
cmpsb
ja
and
push
gs
or
push
and
cli
xchg
sub
movsl
inc
jbe
es
push
push
stos
inc
int3
les
and
pop
insl
insl
jns
jl
in
add
add
push
xor
cmpsb
add
rorb
xchg
sub
add
dec
or
shll
sub
leave
sahf
movsb
not
or
sub
fimuls
stos
fstps
cld
mov
mov
sub
xchg
sub
cmp
lahf
sahf
shll
inc
mov
jae
jno
ficomps
add
mov
dec
loope
fcoml
adc
jbe
xchg
push
ror
nop
sub
xor
scas
xor
adc
lret
inc
lods
fcomp
icebp
pop
sbb
std
jne
pusha
inc
imul
mov
mov
adc
dec
and
add
int
mov
or
xor
subb
rcr
je
mov
movsl
sbb
orl
jno
push
sub
dec
inc
add
outsl
cli
fcomi
push
xor
leave
mov
mov
mov
xor
and
sbb
add
cmp
pop
movsl
or
imul
and
in
mov
xchg
or
push
pop
push
cmc
inc
sbb
pop
loope
dec
nop
repz
arpl
std
mov
adc
pop
or
ds
sbbb
and
repnz
jno
xchg
repz
aas
sbb
addr16
mov
imul
sarb
pop
xor
pop
andb
dec
lods
int
shll
int
adcl
mov
pop
cmp
imul
loop
js
fdivrs
out
jbe
or
cmp
insb
std
shll
icebp
mov
rcll
xchg
pop
xchg
shll
dec
adc
jg
mov
mov
fistpll
aaa
push
cmp
fisttpl
insl
cmp
shrb
push
pop
dec
insl
inc
dec
jle
xlat
pop
add
in
dec
addr16
mov
add
das
and
lcall
pop
push
adc
xchg
sub
mov
mov
xor
sub
popa
push
push
popa
add
xor
imul
mov
fldl
rorb
or
rorl
gs
imul
push
jnp
mov
pop
push
lock
cs
jle
mov
loop
push
inc
in
cmp
mov
jae
mov
and
mov
ja
call
push
xchg
mov
jno
std
int3
cmpl
jnp
ss
mov
dec
inc
pop
out
fiaddl
inc
lcall
sbb
mov
int
sbb
cmpsl
push
cld
pop
and
adcl
xlat
roll
dec
aam
jbe
mov
push
pop
xchg
xor
decb
mov
xchg
or
mov
movsb
adc
sub
dec
sbb
or
sbb
or
shrl
push
jge
mov
push
xor
scas
cmp
add
pop
dec
dec
js
lcall
xlat
adc
add
xchg
test
add
in
repnz
int3
or
je
mov
push
xor
fcoml
dec
cmpsl
inc
bnd
addr16
mov
inc
mov
lret
push
dec
push
shlb
pop
repz
xor
int3
or
and
clc
mov
cmp
roll
popa
inc
mov
test
movsl
shr
jne
and
push
out
test
movsb
mov
push
push
sub
or
lahf
outsb
and
push
int
dec
mov
xchg
dec
mov
jg
adc
cld
jae
sbb
add
xchg
je
sahf
dec
popa
je
add
xchg
cmp
ja
add
pushf
out
add
test
xchg
inc
cli
inc
shll
mov
movsl
mov
subb
loopne
push
cmp
inc
adc
mov
lret
inc
inc
cs
jmp
mov
add
movsl
pop
into
add
fs
repz
inc
xchg
popa
cmp
inc
mov
idivl
add
pop
add
pushf
cltd
xchg
xorb
cwtl
into
dec
jp
ret
lret
and
rcll
arpl
out
pusha
fcomps
push
mov
add
stos
ss
pop
push
inc
ret
adc
in
mov
push
xchg
pop
outsb
dec
cltd
xchg
lods
xor
cmpsl
inc
add
xor
push
xchg
fstpt
push
iret
or
stos
inc
mov
in
ret
imul
xor
xor
add
sub
test
sub
fstpt
aam
sbb
jno
push
pusha
push
mov
sub
cmp
leave
xor
in
negl
add
mov
or
mov
inc
mov
mov
mov
mov
xchg
add
sub
push
icebp
into
cld
ljmp
insl
cmp
add
arpl
mov
sub
mov
cmp
jle
xorl
mov
int3
test
insl
sbb
xor
lahf
jae
inc
push
sub
adc
xchg
mov
dec
addb
dec
and
xor
jo
lods
ds
iret
push
inc
dec
mov
xor
and
iret
jae
sbb
push
push
dec
cmp
in
mov
push
lcall
or
test
pop
push
cmp
xor
loop
dec
push
mov
into
and
jecxz
mov
add
and
jmp
rep
push
sub
cmpsl
dec
push
push
push
stos
sub
mov
mov
cwtl
cmp
mov
outsl
fcmovnu
or
fistl
cmp
push
xchg
push
lea
sbb
sbb
push
inc
int3
cli
aad
daa
insl
inc
testl
sarl
or
gs
js
cmp
int3
add
subl
mov
pusha
test
push
jg
shll
dec
jge
cmpsl
inc
cmp
subb
mov
jg
fwait
mov
mov
enter
mov
mov
pop
test
arpl
inc
pop
mov
or
inc
mov
sbb
addr16
stos
les
mov
ja
pop
push
mov
mov
jle
jae
xchg
leave
and
test
in
sub
dec
pop
pushl
out
dec
xor
mov
int3
jo
add
xor
mov
inc
mov
sbb
cli
pop
in
xor
mov
jno
rorb
cmpsb
sti
out
lds
aad
xchg
add
mov
fwait
roll
pop
ret
hlt
mov
push
insl
inc
nop
bound
cmp
push
or
push
fs
hlt
add
arpl
aaa
aas
xchg
push
inc
ror
sub
jl
std
lods
cltd
jecxz
pop
mov
or
sbb
push
cmp
cli
and
adc
outsb
into
dec
push
xchg
adc
push
std
shll
or
out
lods
arpl
push
pop
or
icebp
in
stos
arpl
pop
dec
fucomp
mov
xchg
repnz
and
pop
xchg
xchg
lret
mov
sbb
or
add
loop
mov
sahf
adc
sub
int3
jp
or
mov
pusha
out
jae
idivb
je
push
out
pop
out
out
orb
xchg
je
cmp
pop
inc
je
or
popa
adcb
pop
sbb
mov
fadds
cli
pop
cmp
lods
inc
aad
popa
clc
notl
cmp
enter
sahf
lret
jecxz
ja
xchg
dec
aam
and
xchg
icebp
xchg
pop
and
jae
std
stc
jns
scas
mov
mov
sarb
push
ret
fisubrs
bound
shrb
aad
and
insl
movsl
loopne
mov
ret
lods
movsb
and
mov
push
icebp
outsl
dec
mov
leave
fnstsw
xchg
mov
mov
fsts
aad
cmp
fcomi
jp
lods
rcl
addb
cld
jne
adc
outsl
aas
mov
jno
pop
out
or
xchg
sub
push
lret
mov
xchg
pushf
dec
pop
das
shl
mov
adc
mov
mov
repnz
add
int3
gs
xor
xor
mov
in
mov
mov
push
adc
test
mov
jg
or
pop
test
cs
ret
mov
cmp
mov
idivl
jl
and
jp
enter
adc
xchg
subb
movsl
sarl
pop
lea
ja
add
mov
mov
pop
repnz
xchg
js
shrl
and
loopne
xor
imul
mov
outsb
ret
jecxz
outsb
fimuls
add
jl
dec
xchg
hlt
pop
jg
sub
xor
aam
mov
inc
xchg
sub
adc
pop
lret
test
inc
jmp
inc
loop
and
inc
xchg
sbb
ljmp
mov
inc
add
push
mov
int
pop
adc
imul
pop
fnsetpm(287
imul
push
mov
mov
sub
mov
les
insb
aam
int3
pop
outsb
sbb
mov
and
dec
push
test
inc
mov
or
or
aad
scas
mov
xor
sbb
mov
mov
or
lea
bswap
dec
in
js
dec
xchg
or
pop
pushf
mov
aaa
lods
push
mov
loop
cs
jo
or
jno
or
mov
add
faddl
into
ss
daa
pop
add
mov
adc
add
xor
sahf
and
add
fmull
or
arpl
adc
or
out
xor
mov
dec
cmp
xchg
lods
mov
out
iret
xchg
fistpll
es
and
or
xor
adc
or
add
out
mov
decb
shr
jle
test
and
movsb
scas
cmp
and
pop
sub
adc
jecxz
mov
aam
or
outsb
jb
xor
sbb
adc
std
sbb
lods
imul
push
sub
js
pop
pop
dec
cld
in
jno
daa
arpl
mov
jmp
das
arpl
aam
push
xor
xor
loope
out
xor
mov
xchg
inc
lock
hlt
mov
into
aam
enter
bound
push
add
cmpsb
xor
out
stc
mov
pop
bound
add
sub
scas
and
stc
lds
call
fnsave
adc
call
bound
jb
sbb
jbe
mov
fldenv
xchg
mov
popa
in
mov
mov
lods
add
jp
adc
in
mov
ret
pop
xor
in
cmp
aas
iret
sbb
push
stos
xchg
jne
push
insb
insl
ds
shl
mov
dec
jmp
jge
push
rol
mov
fcmovnu
test
sbb
in
jl
xlat
push
decb
jg
ret
xor
addb
hlt
xor
sub
inc
or
push
out
es
jle
outsl
adcb
outsl
inc
dec
movsl
sbb
xchg
int3
xchg
xor
xchg
or
adc
mov
stc
int
xor
push
bound
hlt
sub
pop
jp
cmpsl
imul
or
sbb
decb
sub
out
arpl
dec
pop
adc
jno
push
sahf
sbb
js
iret
dec
mov
adc
test
outsl
sub
mov
and
enter
iret
fdivs
dec
jns
insl
or
add
cmp
sub
dec
popa
rolb
pushf
jb
dec
mov
xchg
inc
add
orb
clc
repnz
in
in
movsl
add
jmp
fnsave
pop
add
lret
xchg
rorl
jae
xchg
ds
hlt
cmp
mov
mov
adc
jmp
aaa
pop
je
xlat
jge
fs
push
lods
add
sub
loop
test
and
xor
fs
leave
fs
adc
addr16
adc
mov
pop
mov
aam
sbbl
sub
jb
mov
adc
in
ds
inc
sti
sarb
movsb
jno
repz
pop
push
decb
and
xchg
les
mov
lret
data16
add
adc
cs
mov
dec
loopne
je
sub
aad
aam
bound
add
jno
dec
push
xchg
pop
mov
addr16
loope
roll
dec
mov
push
fimuls
rorb
in
mov
dec
iret
ret
xchg
dec
jmp
aaa
sbb
and
orl
inc
inc
inc
push
cmpsl
loopne
adc
js
jp
insb
adc
mov
in
inc
insl
push
inc
pop
xor
mov
seta
in
pusha
mov
inc
imul
cli
fcoml
out
movsb
and
fs
fisubl
ret
mov
xchg
fs
lock
mov
imul
inc
cmp
ret
sub
test
repz
dec
adc
fisubl
inc
dec
sub
int3
aaa
and
xor
aaa
iret
inc
into
fwait
ja
mov
sbb
movsb
add
and
scas
rorb
mov
pop
sti
pop
mov
mov
dec
es
mov
push
mov
into
jg
add
sahf
dec
xchg
mov
cmp
mov
mov
mov
es
push
fbld
pop
mov
test
cmp
subb
jb
push
xchg
out
inc
mov
add
sbb
ds
lret
mov
mov
nop
repz
cmpsb
es
mov
shrl
mov
xchg
dec
pop
cmp
or
cltd
pop
jle
pop
or
stc
rcl
push
rcll
call
mov
mov
inc
cli
mov
outsl
out
sarl
xchg
pop
dec
jle
jns
jmp
mov
mov
and
mov
lahf
icebp
mov
test
sbb
pushf
test
cmpsb
jg
sahf
mov
mov
hlt
leave
and
hlt
fwait
jne
ja
fisubrl
out
adc
lret
push
pop
push
aaa
mov
aad
ss
mov
cmp
adcl
je
mov
pop
stc
add
ret
mov
push
mov
mov
pop
sti
ss
mov
xchg
push
pop
xor
cmpsb
inc
push
jnp
mov
stc
in
jb
mov
add
pusha
roll
and
test
insl
sub
out
jmp
xor
jmp
add
leave
fdivrs
xchg
lret
pop
je
inc
addl
popf
leave
clc
cmp
or
aaa
push
rcrl
push
adcl
arpl
int3
cmpsl
jecxz
or
jmp
push
aad
push
movsl
decl
add
aas
scas
ret
mov
and
mov
lock
mov
xchg
roll
push
sbb
mov
push
movsl
jp
inc
sbbl
ljmp
xchg
shl
mov
lcall
ret
arpl
mov
mov
dec
cmpsb
out
arpl
aad
ljmp
sbb
je
test
add
in
cmp
adc
movsl
cmp
orb
arpl
dec
jle
adc
mov
adc
mov
mov
and
sub
lods
or
sbbb
jle
sbb
decl
mov
out
xchg
lcall
push
mov
stc
inc
jl
or
mov
stc
jb
cli
xor
pop
push
jnp
push
test
ss
rcr
add
mov
insb
out
sbb
in
jp
mov
xchg
stc
xchg
jp
push
je
cmc
mov
loope
sub
rcrb
ret
fwait
in
cs
in
xchg
imul
daa
out
fisubl
daa
push
test
mov
pop
push
and
mov
scas
pop
popf
jle
mov
fcmovnb
sub
jge
in
add
test
sub
add
scas
out
lcall
ret
and
test
mov
pop
in
or
insl
lods
adcb
leave
sbb
insb
add
and
enter
xor
dec
inc
add
fstps
push
dec
xor
bound
jle
sub
les
and
push
mov
pop
dec
and
mov
xchg
adc
rcrl
add
xlat
imul
repnz
shrb
or
addr16
rcr
jecxz
push
xlat
mov
ds
push
mov
in
pop
adc
out
lea
jae
dec
fwait
cwtl
gs
lcall
lods
call
pusha
jmp
pusha
je
dec
je
loope
into
lret
cmp
imul
inc
dec
add
dec
jne
shl
xorb
int3
adc
scas
jmp
bound
inc
mov
jg
push
inc
loope
pop
inc
nop
fstpt
mov
mov
loope
push
xor
fldenv
loopne
jmp
cmp
jecxz
mov
mov
dec
sbb
je
inc
jne
push
pop
pop
data16
xor
in
mov
add
pusha
sub
mov
ret
mov
popf
mov
and
or
outsl
jecxz
movsl
adc
repnz
cmpsb
ret
add
fsts
pop
dec
lahf
loopne
clc
mov
or
push
lsl
jmp
outsl
cltd
dec
xchg
xor
enter
fwait
sub
push
or
fcoml
add
ret
jns
in
aaa
mov
mov
pop
xchg
push
call
fsub
iret
xchg
sub
movsb
hlt
lds
sbb
sbb
lods
and
outsb
mov
in
cmp
push
fstps
cli
and
out
xchg
outsb
sti
in
gs
dec
vshufps
rcrl
outsb
and
or
push
ret
mov
or
lcall
fstpt
pop
mov
and
jg
sarb
pop
sub
aam
push
andb
xadd
and
xor
dec
das
mov
cmc
pop
fs
add
jp
xchg
add
sbb
enter
and
mov
mov
adc
ret
mov
xchg
fiadds
lock
addr16
jo
and
insb
cmp
xchg
pushf
nop
es
pop
inc
mov
inc
gs
lret
gs
out
out
sub
adc
divb
fistpl
xchg
xchg
cli
imul
push
cmp
sbb
mov
push
mov
mov
inc
bound
sbb
sbb
adc
cwtl
add
daa
fisubl
adc
xor
dec
lea
stos
or
xchg
repnz
or
fs
cmp
pop
sub
int
call
das
mov
cmp
jbe
jmp
pusha
loopne
es
lods
fdivr
jno
mov
imul
shl
mov
scas
mov
mov
out
ljmp
ljmp
test
adcb
xor
and
lahf
add
mov
rcll
lds
cli
xchg
sbb
sahf
orl
cld
or
and
mov
cmc
shrb
xor
mov
jge
mov
nop
vcvttss2si
imul
xlat
xor
fsubrs
notb
shlb
jo
push
cmpl
mov
mov
xchg
mov
call
lcall
or
sbb
jnp
sbb
jp
mov
xchg
test
add
in
mov
pop
js
popa
mov
push
sbb
push
mov
std
pop
mov
test
xchg
sub
push
inc
mov
and
push
in
add
push
dec
ret
xchg
inc
int
lea
mov
inc
fwait
adc
mov
sti
jp
sub
iret
push
dec
push
jge
cltd
data16
mov
inc
add
dec
aaa
movsl
push
sbb
mov
call
inc
les
aaa
and
cmpl
or
pop
xor
pop
pusha
aad
push
push
repnz
loopne
pop
mov
add
push
add
lock
or
rcll
lock
push
jns
pop
cmp
decb
mov
xchg
add
stos
mov
bound
sbb
add
mov
loopne
jno
mov
add
int3
adc
mov
stc
add
jle
in
rcrl
lcall
popf
mov
sbb
cmp
cmpsl
popa
insl
addr16
mov
jns
or
xchg
sub
push
ss
or
cmp
xchg
adc
push
push
xor
mov
push
stos
cwtl
mov
mov
lock
cmc
mov
aaa
push
adc
fimuls
daa
and
jns
test
sbb
aad
sub
cmpl
adc
arpl
and
sub
out
int
es
cmpsl
xadd
jmp
lahf
in
leave
mov
rcl
sbb
imulb
mov
sub
push
push
adc
jecxz
push
push
pop
loope
pop
jp
cwtl
push
xchg
mov
inc
fsubp
mov
pop
mov
sub
imul
out
ja
adc
jl
adc
fwait
mov
mov
mov
xlat
es
nop
aaa
lods
pusha
mov
adc
bound
je
jp
int
decl
xchg
xchg
cld
fadds
mov
std
sti
fsubrs
aam
jne
sub
pop
out
es
push
mov
gs
movsb
lcall
ret
ja
jnp
add
cmp
fnsave
push
jg
aaa
dec
das
.byte
pop
leave
add
add
add
or
and
add
add
add
mov
add
mov
add
add
add
addb
add
add
addb
addb
add
loopne
add
dec
add
orb
add
jo
add
cwtl
add
addb
add
add
add
add
add
add
add
add
add
mov
add
enter
add
add
loopne
add
add
add
add
add
add
add
add
add
clc
add
addb
add
adc
add
sub
add
inc
add
addb
add
add
add
add
add
add
push
add
add
add
add
jo
add
mov
add
mov
add
add
add
add
add
xorb
add
add
xorb
add
add
cmpb
add
add
cmpb
add
add
add
add
dec
add
adcb
add
pusha
add
adcb
add
js
add
nop
add
addb
add
add
add
add
add
add
add
add
add
test
add
rolb
add
add
fadds
addb
add
add
add
add
add
add
add
jg
add
lock
orb
add
or
add
add
add
add
add
add
or
xchg
add
add
add
add
cmp
add
push
add
add
push
add
add
add
add
add
add
add
add
add
add
loopne
add
clc
add
add
add
add
add
add
add
or
add
add
adc
add
sub
add
inc
push
add
pop
push
add
jo
add
mov
add
mov
sldt
mov
sldt
rolb
add
call
sldt
add
add
add
add
add
add
add
add
or
add
pop
add
xor
add
dec
pop
add
add
add
add
add
add
add
cmp
add
jg
add
js
add
nop
pop
add
add
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
add
add
rolb
add
add
add
add
add
add
rolb
add
add
add
add
add
add
add
loopne
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
inc
or
add
add
add
add
add
add
push
or
add
add
add
add
add
add
pusha
or
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
orb
add
add
add
add
add
add
nop
or
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
rorb
add
add
add
add
add
add
rorb
add
add
add
add
add
add
add
loopne
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
inc
or
add
add
add
add
add
add
push
or
add
add
add
add
add
add
pusha
or
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
orb
add
add
add
add
add
add
nop
or
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
rorb
add
add
add
add
add
add
rorb
add
add
add
add
add
add
add
loopne
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
inc
or
add
add
add
add
add
add
push
or
add
add
add
add
add
add
pusha
or
add
add
add
add
add
add
jo
add
add
add
add
add
add
add
orb
add
add
add
add
add
add
nop
or
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
rorb
add
add
add
add
add
add
rorb
add
add
add
add
add
add
add
loopne
add
add
add
add
add
add
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
adc
add
push
fwait
or
or
add
in
add
add
add
pusha
fwait
or
push
add
add
add
add
add
add
or
push
add
add
add
add
add
add
pushf
or
xor
add
in
add
add
add
add
add
in
add
add
add
xor
or
xor
add
in
add
add
add
push
add
add
add
add
add
add
or
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cmpsb
or
pop
add
add
add
add
add
add
or
pop
add
add
add
add
add
add
add
add
add
add
add
add
stos
or
pop
add
add
add
add
add
add
or
pop
add
add
add
add
add
add
add
add
add
add
add
add
scas
or
pop
add
add
add
add
add
add
or
in
add
in
add
add
add
dec
mov
add
add
add
add
add
or
insb
add
add
add
add
add
add
or
inc
add
add
add
add
add
add
add
in
add
add
add
pop
inc
or
add
add
add
add
add
add
in
add
add
add
insb
loop
add
add
in
add
add
add
js
or
test
add
in
add
add
add
cld
in
add
add
add
add
add
add
in
add
add
add
adc
or
cli
add
add
add
add
add
add
or
ljmp
add
add
add
call
add
in
add
add
add
test
or
mov
add
in
add
add
add
pop
repnz
int3
add
add
add
add
add
add
repz
mov
add
in
add
add
add
fdiv
or
loop
add
in
add
add
add
shl
add
add
add
add
dec
testb
add
add
add
add
add
add
add
in
add
add
add
enter
js
add
in
add
add
add
inc
testl
in
add
add
add
add
or
sub
add
in
add
add
add
xor
or
inc
add
add
add
add
add
add
or
inc
add
add
add
add
add
add
add
add
add
add
add
add
or
fadds
add
in
add
add
add
hlt
std
or
adc
add
in
add
add
add
or
or
and
add
in
add
add
add
sub
or
adc
add
in
add
add
add
inc
decl
adc
add
in
add
add
add
push
decl
and
add
in
add
add
add
mov
add
add
add
add
add
add
add
in
add
add
add
js
or
add
add
add
add
add
or
add
add
add
add
add
add
add
push
add
dec
add
dec
add
inc
add
or
inc
add
inc
add
push
add
add
dec
add
dec
add
add
and
mov
sbb
cwtl
add
mov
jg
loope
aad
jecxz
pop
fcomip
push
in
jl
push
add
in
insb
outsb
clc
jp
xchg
xor
jecxz
jecxz
out
nop
adc
cmpl
rorb
pusha
mov
faddl
cmp
xchg
repz
cld
out
out
push
sahf
test
in
add
inc
insl
and
inc
cmpsb
test
lahf
mov
add
shl
or
mov
sub
dec
leave
sarl
stos
inc
cmp
mov
jbe
add
jp
dec
mov
subb
jns
adc
scas
pop
xchg
or
and
scas
imul
xchg
cmp
mov
sar
shrl
cmc
rolb
mulb
cmc
out
mov
and
aas
fidivrs
xlat
loopne
dec
adc
and
lret
jne
testb
iret
cld
jp
in
rorb
mov
add
enter
pop
inc
fsubrs
mov
cmpsl
xor
loope
and
cmp
inc
mov
lea
sbb
fsubrl
sub
mov
pop
or
out
mov
sarl
adc
imul
std
outsb
push
shlb
dec
sub
hlt
push
out
add
idiv
cmpxchg
fs
sbb
xor
add
stos
xor
xchg
cs
in
ljmp
adc
movsl
fld
aad
lret
fiaddl
pop
fbld
cmp
in
and
dec
adc
sbb
sub
mov
or
mov
out
sbb
daa
sbb
lcall
mov
test
pop
cmp
xor
jns
xlat
mov
addr16
int3
pop
xchg
icebp
jl
cmp
pusha
dec
adc
mov
jmp
rcll
movb
stc
push
lods
imul
push
imulb
rorb
mov
push
xchg
xchg
loope
lea
repz
pop
clc
inc
arpl
xchg
cmp
test
orb
pop
cmp
enter
push
mov
jb
addb
rol
out
xor
lret
xlat
lret
mov
jp
pop
sarl
and
jmp
add
pop
imul
cmp
sub
jno
into
clc
jmp
shrb
ja
test
in
cmp
lds
adc
jae
mov
stos
dec
out
push
mov
push
rcll
seto
push
add
pushf
jge
sub
ficoml
arpl
adc
aas
push
lcall
mov
ret
xchg
and
mov
shrl
movsl
and
aam
push
aam
dec
jo
push
mov
push
xchg
and
js
and
inc
jecxz
adc
mulb
lock
and
sti
dec
test
hlt
mov
or
out
incl
cmc
add
lock
inc
pop
movsb
jmp
push
mov
jecxz
stc
jg
out
jg
mov
mov
xchg
jnp
arpl
xchg
outsl
push
jnp
jl
fcmovb
dec
lcall
mov
das
jbe
sub
add
pop
adc
data16
jb
sbb
push
lahf
insl
and
ja
cmp
jle
push
sbb
int3
push
imul
push
and
mov
sub
pop
and
cli
rcrl
stos
fmul
push
jo
push
dec
cmp
pop
push
lock
mov
lahf
and
in
sahf
xor
mov
add
mov
shlb
outsb
iret
mov
outsl
xor
adc
and
subl
cltd
sbb
out
fists
shll
sub
pop
or
mov
aas
cmp
testb
lahf
ret
lahf
es
mov
dec
push
or
aam
cmc
test
add
jb
aam
in
cmp
aas
push
sbb
mov
test
cwtl
movsl
xchg
ret
sbb
xor
sub
add
insb
out
int
int3
in
xchg
mov
mov
jl
rcrb
repnz
xchg
pop
mov
xchg
push
fldcw
and
mov
adc
xchg
or
jae
pop
cmp
inc
cmp
out
in
repz
sti
loop
test
mov
mov
push
test
mov
dec
ja
xchg
push
cmp
adc
jle
xchg
push
mov
mov
ret
dec
xchg
rol
adc
addr16
iret
mov
aaa
es
adc
mov
or
stc
scas
aas
pop
cmp
dec
or
xor
push
and
jnp
lret
test
cmp
out
inc
cmp
sbbb
adc
cmpsl
insb
gs
add
cs
or
call
pop
cltd
aas
and
or
ret
cmp
outsb
call
dec
fneni(8087
insb
fbld
inc
aad
mov
jge
movsl
sarl
cltd
fwait
xor
push
imul
cs
adc
push
loope
sbb
xchg
aaa
enter
jp
in
dec
xor
sar
lret
and
dec
push
paddb
stos
xor
and
je
pop
ss
test
dec
jl
lcall
leave
in
jo
loopne
jo
in
cmp
xlat
in
imul
sbb
gs
js
into
xor
data16
aam
into
or
sbb
outsb
mov
dec
jl
mov
icebp
inc
mov
jge
inc
adc
cmp
arpl
fs
dec
aas
cmpsb
out
adc
shr
je
lcall
xchg
dec
and
aam
lds
xor
xor
xchg
fisubl
gs
arpl
out
pop
in
or
sub
movsb
dec
cmp
movsl
adc
lods
push
stos
pop
shll
mov
push
test
mov
lds
xchg
popa
lret
sbb
inc
xor
stos
jp
ficoml
lret
mov
in
inc
test
outsl
scas
cmp
fbld
insl
jl
xchg
mov
mov
dec
jg
xor
ss
int3
push
lahf
pop
lds
dec
push
scas
movsb
push
mov
fadd
pushl
cmp
jmp
mov
scas
int
negb
rorl
mov
push
out
gs
pusha
aam
cmc
test
movsl
dec
lock
js
fcompl
dec
pop
rcll
and
ss
sbb
rol
in
clc
bound
jne
lods
or
movsb
or
cltd
pop
fwait
les
or
iret
pop
xor
cld
and
jp
inc
test
jo
xor
out
test
repz
arpl
dec
jbe
mov
cs
ljmp
pusha
add
lea
cwtl
sub
int3
inc
cmp
sub
xchg
jno
std
cmp
mov
cld
out
rcrb
popf
and
xor
xor
fistpll
sbb
sbb
mov
in
loopne
movl
les
ds
adc
je
dec
aam
lds
int3
add
rcrb
sahf
jnp
aas
lret
mov
pop
xchg
test
stos
inc
mov
arpl
cmp
notb
pop
loope
add
mov
xchg
sub
test
jns
mov
out
sahf
push
and
push
lea
pop
push
push
xor
push
jmp
or
aas
or
mov
leave
jmp
jnp
mov
out
mov
xlat
jl
adc
adc
inc
xchg
xor
iret
inc
or
push
adc
mov
jns
push
jg
mov
in
dec
rcr
jecxz
out
fdivrl
and
jno
cmovb
and
outsb
mov
arpl
push
or
sbb
cwtl
add
sbb
popf
out
pop
sbb
call
xorb
and
scas
push
leave
sbb
add
stos
xor
xchg
add
sti
adc
or
jge
lahf
push
sub
in
add
push
int
out
dec
xchg
and
jb
xor
pop
and
pop
pop
call
adc
mov
jb
push
jbe
add
and
fimuls
mov
adc
sbb
push
out
push
jno
and
xchg
pop
and
stos
pusha
push
fstpt
pop
repnz
push
cmc
xchg
or
mov
adc
cmp
clc
aas
pushf
fdiv
in
rorb
xor
mov
sbb
and
cmp
je
insb
cmp
fistps
es
mov
xlat
or
xchg
push
push
inc
incb
sub
shlb
or
fstpt
mulb
pop
mov
ljmp
loopne
pop
stos
and
xlat
and
imul
mov
mov
push
arpl
add
and
mov
add
jecxz
sub
clc
int
test
xor
adc
and
mov
sahf
push
pop
aas
sbb
aaa
push
lock
imul
and
addr16
rol
or
cwtl
cld
mov
rcrl
sti
daa
xor
mov
xor
or
test
push
cld
or
cwtl
call
adc
push
mov
mov
lods
fadds
add
test
inc
aam
fwait
pop
das
push
aam
pop
cmpsl
lcall
dec
push
arpl
cld
imul
and
aas
testl
fwait
mov
mov
lods
cmc
fiadds
jge
mov
call
sti
adc
cmp
xchg
insb
and
test
fiaddl
das
ret
lods
cmp
test
jae
or
adcl
add
cmp
mov
icebp
jbe
das
mov
xchg
jg
mov
mov
sbb
cltd
jmp
jge
dec
or
xor
mov
clc
push
xor
push
adc
je
int
lahf
test
scas
popf
jae
das
test
test
push
sbb
test
jmp
dec
push
repnz
push
daa
jbe
arpl
out
movsl
mov
pop
cwtl
mov
jnp
xchg
fs
sbb
add
aad
out
out
in
pop
lds
mov
and
rcll
sbb
xchg
inc
xchg
sub
stc
add
clc
add
mov
xor
lods
pop
push
mov
jns
dec
mov
out
fsubl
push
jnp
sahf
lahf
es
dec
and
shrb
pop
or
fs
adc
test
int3
stos
popf
cmp
pop
adc
clc
push
jno
inc
in
insb
stos
pop
std
repz
push
lcall
data16
dec
xor
add
jae
xchg
dec
bound
int
clc
mov
adc
xor
and
das
stc
add
daa
lcall
add
pop
cmp
lcall
clc
ds
push
nop
nop
dec
ss
xlat
lods
mov
and
into
jo
sbb
and
arpl
das
pop
movsb
cmp
test
movsb
mov
rcrb
or
in
mov
sbb
mov
push
mov
xchg
stos
lods
sub
mov
mov
jo
repnz
mov
pop
decl
leave
mov
dec
je
insb
fwait
shrl
jmp
lock
or
movsb
into
xchg
xor
es
mov
ss
jns
or
lods
inc
int
or
mov
cmpb
hlt
pop
fwait
arpl
push
andb
sbb
in
cmp
es
mov
mov
cmpsl
xchg
ja
xor
es
sbb
adc
fimull
mov
mov
lods
adc
test
fsts
outsl
ret
pop
out
or
push
sub
sub
aas
adc
xchg
test
xchg
or
and
out
scas
or
pop
xchg
push
xor
insb
sbb
aad
call
pop
or
xchg
jmp
loope
ret
and
inc
test
xchg
add
jp
les
aaa
cmpsl
icebp
test
aas
mov
mov
push
add
insl
fldcw
add
fsub
mov
test
cmp
in
jmp
in
xor
xlat
jno
dec
inc
scas
pop
jnp
sahf
cmc
lods
lds
aas
and
inc
rolb
inc
xchg
addb
jl
scas
add
insb
cmp
mov
bt
cmp
popa
pop
lods
mov
inc
inc
jl
sub
inc
dec
fisttpl
cmp
imul
in
cmp
xor
out
mov
sub
dec
pop
inc
in
popa
lods
mov
inc
imul
pop
pop
push
or
lahf
mov
js
push
lock
inc
gs
inc
es
jne
jecxz
sti
ja
cli
call
cmp
inc
fldl
inc
in
mov
mov
in
adc
dec
xchg
rclb
mov
movsl
arpl
jae
xchg
cmp
inc
lcall
jp
stc
clc
outsb
add
in
mov
mov
pop
mov
test
jo
mov
mov
sbb
inc
in
xlat
enter
cltd
outsl
add
nop
sub
mov
scas
cwtl
icebp
ss
into
or
inc
fisubl
push
jno
imul
dec
cmp
insl
xor
mov
xchg
pop
in
dec
xor
insb
outsl
adc
adc
jne
arpl
sarb
out
inc
or
xchg
push
fdivrs
xor
pop
xchg
cwtl
xor
jecxz
hlt
iret
fbld
call
xchg
cmp
jbe
or
xor
and
pop
add
loopne
leave
test
and
dec
aam
pop
add
jle
ljmp
add
out
test
icebp
iret
std
mov
loop
push
stos
fdiv
pop
mov
filds
cs
ret
stos
es
add
inc
jb
sbb
xor
xchg
push
add
sbb
fcomi
dec
fs
les
mov
push
ja
pop
in
adc
dec
je
cmpsb
arpl
push
xchg
repnz
sub
mov
daa
mov
in
and
repnz
or
push
lds
in
xchg
sbb
or
jnp
popf
fimuls
sub
sub
in
and
test
int3
add
imul
jecxz
pop
and
lret
jbe
push
mov
lret
fs
or
rcrb
test
enter
jg
mov
cld
les
dec
pop
rcll
lock
cmc
mov
les
dec
cmp
jnp
mov
js
shlb
push
outsl
jne
push
adc
fs
xor
rcll
push
popf
mov
dec
mov
fstl
shrb
int
push
in
mov
insl
lret
push
dec
insl
leave
mov
notb
mov
jbe
loop
daa
mov
lock
xor
nop
add
daa
fwait
sub
stc
fdivl
icebp
clc
subl
call
clc
mov
filds
fwait
test
adc
dec
inc
imul
shll
mov
mov
mov
out
jno
imul
sub
xchg
jl
cmpsl
sbb
mov
test
popa
inc
or
or
pushl
negl
inc
shrl
jnp
jne
fimuls
dec
jmp
add
daa
xor
nop
das
pusha
adc
loop
in
and
jo
ds
clc
or
mov
pop
sarl
lods
sbb
addr16
mov
jmp
insl
jecxz
divl
jno
cmp
jmp
hlt
or
mov
int
popf
add
adc
inc
jp
gs
ds
sub
fidivrs
les
ljmp
jge
adc
pop
and
in
out
movsb
mov
icebp
fnstsw
rcll
jge
dec
pop
xor
jmp
lods
or
xor
inc
repz
mov
push
inc
xchg
mov
jmp
je
push
jns
xchg
jne
jle
cmp
xchg
dec
pop
cmp
mov
hlt
stos
mov
es
fwait
add
or
mov
inc
iret
mov
adc
and
add
nop
lods
cmp
imul
imul
jno
in
lcall
mov
pop
or
fadds
inc
arpl
pop
in
sbb
ror
js
gs
sbb
out
jl
mov
imul
cmp
mov
pop
pop
mov
cmc
iret
vminss
fadds
push
outsl
jb
push
mov
xchg
pop
.byte
dec
dec
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
call
sbb
cli
stos
or
push
and
fstps
fwait
mov
pop
add
add
mov
push
mov
pop
sub
pushl
pop
and
add
mov
add
mov
xor
mov
mov
mov
sbb
sub
push
mov
pop
add
jmp
aam
jb
inc
jns
pop
insb
xor
hlt
cmc
decl
test
or
add
add
and
pushf
movsl
jp
pop
adc
pop
inc
pop
sub
xchg
ret
mov
jne
test
push
mov
cmpsl
or
aaa
cli
lods
xor
std
pop
repz
sub
cmp
pminub
xchg
push
into
out
adc
cmpsl
aas
or
imul
or
movsl
cmp
daa
movsl
or
inc
xchg
pushf
sbb
and
lods
lcall
cmp
cltd
clc
maskmovq
lods
or
mov
shrb
cs
mov
dec
popf
call
sub
rclb
push
mov
jns
mov
sbb
xchg
xchg
cwtl
rclb
sahf
ds
adc
rolb
xor
popf
or
xchg
sbb
fiadds
jp
ljmp
mov
xchg
aaa
aam
adc
push
add
fldl
sub
loopne
ds
stos
pop
aas
out
mov
jp
add
cmp
adc
clc
lods
dec
cld
sti
mov
icebp
into
mov
sti
aam
call
mov
and
mov
mov
cmp
add
in
cmp
xchg
inc
cmp
xchg
inc
insb
inc
cmp
add
lods
push
mov
clc
dec
jbe
adc
adc
in
inc
adc
adc
mov
pop
lods
mov
movsb
or
fmuls
xchg
jge
repz
xlat
pushf
inc
out
inc
es
out
call
jns
in
dec
jle
adc
adc
mov
push
jmp
outsb
into
jecxz
push
jl
mov
imul
jmp
mov
sbb
mov
mov
mov
sbb
fwait
popa
enter
hlt
sahf
mov
sbb
mov
rolb
call
js
add
and
stc
cli
pushf
shlb
imul
xchg
sbb
inc
iret
sbb
mov
insl
cltd
cmc
mov
into
push
sbb
jmp
mov
mov
lret
push
mov
mov
std
inc
iret
popf
inc
pop
sbb
fcmovb
jns
pop
lahf
fldl2t
sbb
sbb
jmp
sbb
or
lea
ficomps
jmp
dec
mov
std
inc
inc
movl
lods
aad
jns
aaa
xchg
mov
jmp
adc
mov
add
adc
aad
mov
adc
rol
fmuls
data16
xor
dec
mov
fimull
inc
rcrb
jnp
enter
addr16
mov
sub
xchg
jbe
add
mov
jmp
adc
pop
fwait
lahf
test
lods
cmp
decl
shll
fwait
test
roll
jmp
jecxz
jmp
inc
mov
mov
mov
mulb
push
xchg
imul
push
movsl
aas
pop
adc
sbb
add
mov
pushl
push
scas
and
shll
insb
test
icebp
movsb
aas
cmc
jecxz
insb
insl
xor
and
pop
out
cli
pusha
aas
and
idiv
pop
add
movsb
aas
cmc
jecxz
and
pop
out
xlat
xchg
movsl
aas
cmc
mulb
int3
insl
push
dec
es
leave
scas
or
in
test
jae
lds
in
movl
movsl
aas
lock
bnd
gs
cmp
adc
das
xchg
sbb
rcl
jg
inc
cmc
testb
nop
cmc
ds
neg
or
mull
push
fdecstp
movsl
mov
cmp
aas
cmc
add
inc
push
xchg
addr16
movsl
aas
pop
rorb
inc
mull
aas
cmc
pop
lcall
add
movsl
mov
mov
and
fdecstp
inc
scas
xchg
movsl
aas
mov
mov
movsb
insb
cwtl
mov
cmc
add
mov
lcall
pop
mov
into
inc
cmc
testb
add
data16
movsl
mov
xchg
movsl
aas
sub
jg
cmc
add
pop
cmp
pop
cmp
add
sub
fidivs
add
movsl
insb
mov
push
xchg
inc
lock
jl
mov
jg
cmc
insb
jbe
xchg
movsl
aas
adc
push
inc
or
jmp
fadds
jmp
mulb
out
movsl
aas
rcrb
ret
add
or
outsl
std
imul
jg
cmc
add
repz
cmc
divb
fldcw
sbb
test
lcall
testb
mulb
aas
cmc
mulb
and
outsl
pop
mov
out
cmp
pop
insb
inc
notl
sar
in
inc
mov
or
inc
xchg
or
mov
hlt
xor
xchg
jg
in
inc
mov
xchg
xchg
or
mov
hlt
xor
mov
xor
addr16
lea
iret
icebp
sub
iret
ror
cld
push
add
jmp
sbb
and
aam
outsl
lea
xchg
pop
int
inc
xchg
movsl
aas
cmc
xchg
iret
ror
cld
push
add
jmp
sbb
and
shl
push
daa
inc
xchg
movsl
aas
cmc
xchg
iret
ror
cld
push
add
add
sbb
and
mov
lea
push
leave
mov
imul
xchg
stos
insb
icebp
lods
jg
cmc
idivb
fbld
lea
iret
icebp
nop
fcmovne
ror
cld
push
add
mov
or
jmp
movsl
aas
jae
pop
mov
lea
dec
leave
mov
imul
mov
inc
xchg
mov
fmull
cwtl
inc
cmc
add
add
inc
fisubrl
or
mov
jae
mov
fmull
cwtl
inc
cmc
jo
mov
mov
mulb
arpl
xor
aas
cmc
frstor
aas
push
pop
jb
mov
pop
mov
cmc
imulb
call
std
rcll
repz
imulb
test
movsl
aas
mov
cmp
imulb
dec
push
inc
cmc
test
jmp
movsl
mov
cmpsb
vorps
cltd
cli
imul
aas
cmc
add
adc
test
addb
push
inc
sbbb
pop
xchg
inc
iret
addr16
push
inc
jnp
lock
sbb
movsb
inc
clc
xchg
movsb
sub
andl
lcall
and
int
push
out
int3
ror
pop
aam
enter
xchg
or
dec
in
stos
cld
subl
push
sub
rcl
xchg
daa
lret
movsl
aas
cmc
mulb
aas
cmc
mulb
aas
cmc
mulb
aas
cmc
inc
sarb
shr
cwtl
pop
movsb
aas
cmc
cmpsb
aas
cmc
mulb
jmp
movsl
aas
cmc
mulb
dec
cmc
pop
repnz
in
mulb
aas
cmc
mulb
aas
cmc
popa
adc
popf
icebp
add
rcr
xor
rclb
sbb
pop
cmp
push
push
scas
inc
xchg
lock
test
cmp
mov
inc
jg
in
dec
out
lods
out
in
mov
push
dec
dec
and
into
sbb
mov
xchg
sbb
cmp
and
mov
movb
inc
dec
inc
test
lcall
push
out
inc
or
rcll
je
outsl
cmp
xor
icebp
xorl
insb
xor
ss
and
cmpb
lods
call
nop
mov
jae
mov
mov
sub
testl
push
jo
repz
movsb
mov
mov
push
jl
aas
inc
jo
and
or
sbb
in
cs
push
aaa
arpl
pop
inc
jb
repnz
xchg
jg
nop
push
ljmp
cmpb
insb
mov
cld
test
movsb
pop
fwait
out
mov
or
dec
sub
pop
mov
dec
dec
mov
mov
push
pusha
shll
stos
ds
dec
arpl
or
aaa
push
dec
add
out
pop
adc
mov
loop
mov
mov
mov
xchg
sarl
and
lahf
subl
stos
filds
sbb
sahf
sti
bound
sahf
xor
push
or
sub
mov
cltd
fcomps
mov
cmp
or
imul
enter
or
rorl
mov
cld
mov
enter
je
cltd
aaa
and
aam
jle
dec
daa
pop
jnp
neg
fistps
sbb
xor
cmpsl
jo
in
dec
inc
div
ds
notb
jge
lds
flds
mov
adc
rorl
lea
lods
test
cmp
sbb
adc
ljmp
lcall
shl
xchg
mov
mov
push
pushf
orl
adc
dec
in
jecxz
or
mov
mov
cmp
ljmp
jle
fwait
loop
scas
sbb
test
sub
add
fdivrl
lret
pop
jbe
std
jnp
and
inc
jne
mov
dec
mov
add
adc
sub
push
popf
xchg
add
sub
push
inc
arpl
dec
cmp
push
stos
mov
inc
call
popf
xchg
mov
mov
movsb
scas
filds
xor
mov
popf
cmpsl
or
push
pushf
imul
add
add
or
add
adc
sbb
add
sbb
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
sbb
add
sbb
add
add
push
or
add
or
add
push
or
add
or
add
push
or
add
push
or
add
push
or
add
sbb
or
add
sbb
or
add
sbb
or
add
sbb
or
add
sbb
or
add
push
or
add
outsb
insl
insl
cs
insb
add
xor
xor
fs
insb
add
gs
xor
fs
insb
add
imul
insb
add
outsb
jae
outsl
outsl
insb
cs
add
jbe
jo
xor
cs
insb
add
gs
insb
xor
cs
insb
add
xor
cs
insb
add
gs
jne
xor
cs
insb
add
insl
arpl
xor
fs
insb
add
insl
fs
xor
cs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
or
add
add
xchg
or
add
add
add
add
mov
or
add
push
or
add
push
or
add
add
add
add
addb
add
jecxz
or
add
push
or
add
pop
or
add
add
imul
dec
jne
add
add
dec
arpl
imul
je
gs
dec
gs
imul
dec
jo
outsb
push
jb
outsb
je
jb
add
add
addr16
insb
outsl
jae
dec
gs
add
push
push
js
arpl
gs
add
add
push
dec
inc
inc
jb
insl
push
je
imul
push
inc
outsl
insb
outsl
jb
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
pop
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
cwtl
add
add
add
add
add
add
xor
xor
inc
add
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
mov
xchg
cmp
gs
pop
add
inc
add
and
mov
add
add
inc
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
arpl
push
add
data16
outsb
add
arpl
data16
add
add
xor
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
sldt
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
mov
and
arpl
push
add
data16
outsb
add
arpl
data16
add
add
or
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
ljmp
addr16
dec
push
cmp
push
add
add
outsl
add
insl
add
outsb
add
add
add
pop
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
add
add
add
adc
adc
add
add
sub
add
add
add
add
add
and
adc
add
add
call
add
add
add
add
xor
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
imul
add
add
add
jbe
add
jbe
add
jbe
add
jbe
add
jbe
add
jbe
add
jbe
add
jbe
add
jbe
add
jbe
add
jbe
add
jbe
add
jbe
add
jbe
add
jbe
add
jbe
add
jbe
add
jbe
add
jbe
add
jbe
add
jbe
add
jbe
add
jbe
add
jbe
add
jbe
add
jbe
add
jbe
add
jbe
add
jbe
add
je
add
imul
add
add
sub
add
or
add
adc
add
pop
add
add
addl
fcompl
cwtl
cwtl
fstpl
cwtl
cwtl
fstpl
cwtl
cwtl
fstpl
cwtl
cwtl
fstpl
cwtl
cwtl
fstpl
cwtl
cwtl
fstpl
cwtl
cwtl
fstpl
cwtl
cwtl
fstpl
cwtl
cwtl
fstpl
cwtl
cwtl
fstpl
cwtl
cwtl
fstpl
cwtl
cwtl
fstpl
cwtl
cwtl
fstpl
cwtl
cwtl
fstpl
cwtl
cwtl
fstl
addl
add
add
add
add
add
add
pop
pop
pop
imul
rol
out
fcos
mov
mov
mov
lahf
lahf
lcall
lahf
lahf
lcall
lahf
lahf
lcall
lahf
lahf
lcall
lahf
lahf
lcall
lahf
lahf
lcall
lahf
lahf
lcall
lahf
lahf
lcall
lahf
lahf
lcall
lahf
lahf
lcall
lahf
lahf
lcall
lahf
lahf
lcall
lahf
lahf
lcall
lahf
lahf
lcall
lahf
lahf
lcall
lahf
lahf
pushl
inc
mov
ret
pop
insb
add
add
add
add
add
add
jne
mov
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sbb
sbb
imul
divl
enter
push
add
add
add
add
dec
dec
dec
movsb
fdivrp
dec
dec
dec
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
dec
dec
fdivr
dec
dec
dec
movsb
add
add
add
add
add
add
or
inc
into
into
into
fiadds
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
incl
add
add
test
iret
fimuls
cmovae
add
add
add
or
push
jecxz
jecxz
sbb
push
push
incl
push
push
incl
push
push
incl
push
push
incl
push
push
incl
push
push
incl
push
push
incl
push
push
incl
push
push
incl
push
push
incl
push
push
incl
push
push
incl
push
push
incl
push
push
incl
push
push
incl
push
push
incl
push
push
incl
push
push
incl
push
push
incl
push
push
incl
push
push
incl
push
push
incl
push
push
incl
push
push
incl
push
push
incl
push
push
incl
push
push
incl
push
push
incl
push
push
incl
push
push
incl
push
push
incl
push
push
incl
push
push
incl
push
push
incl
push
push
incl
push
push
incl
push
push
incl
push
push
incl
push
push
incl
push
push
lcall
jecxz
icebp
imul
add
add
add
or
fwait
fwait
jae
leave
leave
cmc
pop
pop
pop
decl
or
decl
or
decl
or
decl
or
decl
or
decl
or
decl
or
decl
or
decl
or
decl
or
decl
or
decl
or
decl
or
decl
or
decl
or
decl
or
decl
or
decl
or
decl
or
decl
or
decl
or
decl
or
decl
or
decl
or
decl
or
decl
or
decl
or
decl
or
decl
or
decl
or
decl
or
decl
or
decl
or
decl
or
decl
or
decl
or
decl
or
decl
or
decl
or
decl
or
incl
pop
pop
dec
leave
leave
cmc
pushf
pushf
pushf
je
add
add
test
test
rol
testb
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
rol
imulb
add
add
test
test
rol
testb
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
rol
imulb
add
add
test
test
rol
testb
decl
or
or
decl
or
or
decl
or
or
decl
or
or
decl
or
or
decl
or
or
decl
or
or
decl
or
or
decl
or
or
decl
or
or
decl
or
rol
imulb
add
add
test
test
ret
testb
ud0
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
decl
ud0
ret
test
add
add
test
test
ret
notb
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
call
adc
inc
ret
test
add
add
test
test
ret
notb
adc
call
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
ret
imulb
add
add
cmpsb
cmpsb
cmpsb
jbe
rol
adc
pop
pop
call
pop
pop
call
pop
pop
call
pop
pop
call
pop
pop
call
pop
pop
call
pop
pop
call
pop
pop
call
pop
pop
call
pop
pop
call
pop
pop
call
pop
pop
call
pop
pop
call
pop
pop
call
pop
pop
call
pop
pop
call
pop
pop
call
pop
pop
call
pop
pop
call
pop
pop
call
pop
pop
call
pop
pop
call
pop
pop
call
pop
pop
call
pop
pop
call
pop
pop
call
pop
pop
call
pop
pop
call
pop
pop
call
pop
pop
call
pop
pop
call
pop
pop
call
pop
pop
call
pop
pop
call
pop
pop
call
pop
pop
call
pop
pop
call
pop
pop
call
pop
pop
call
pop
pop
call
ret
cmpsl
cmpsl
cmpsl
ja
add
add
cmpsb
cmpsb
cmpsb
jbe
ret
pop
pop
pop
lcall
sbb
lcall
sbb
lcall
sbb
lcall
sbb
lcall
sbb
lcall
sbb
lcall
sbb
lcall
sbb
lcall
sbb
lcall
sbb
lcall
sbb
lcall
sbb
lcall
sbb
lcall
sbb
lcall
sbb
lcall
sbb
lcall
sbb
lcall
sbb
lcall
sbb
lcall
sbb
lcall
sbb
lcall
sbb
lcall
sbb
lcall
sbb
lcall
sbb
lcall
sbb
lcall
sbb
lcall
sbb
lcall
sbb
lcall
sbb
lcall
sbb
lcall
sbb
lcall
sbb
lcall
sbb
lcall
sbb
lcall
sbb
lcall
sbb
lcall
sbb
lcall
sbb
lcall
sbb
call
pop
pop
inc
ret
cmpsl
cmpsl
cmpsl
ja
add
add
cmpsb
cmpsb
cmpsb
jbe
ret
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
ret
mulb
add
add
cmpsb
cmpsb
cmpsb
jbe
ret
ret
negb
sbb
lcall
push
push
lcall
push
push
lcall
push
push
lcall
push
push
lcall
push
push
lcall
push
push
lcall
push
push
lcall
push
push
lcall
push
push
lcall
push
push
lcall
push
push
lcall
push
push
lcall
push
push
lcall
push
push
lcall
push
push
lcall
push
push
lcall
push
push
lcall
push
push
lcall
push
push
lcall
pop
pop
jmp
and
lcall
push
push
lcall
push
push
lcall
push
push
lcall
push
push
lcall
push
push
lcall
push
push
lcall
push
push
lcall
push
push
lcall
push
push
lcall
push
push
lcall
push
push
lcall
push
push
lcall
push
push
lcall
push
push
lcall
push
push
lcall
push
push
lcall
push
push
lcall
push
push
lcall
push
push
lcall
sbb
inc
ret
ret
mulb
add
add
cmpsb
cmpsb
cmpsb
jbe
ret
ret
negb
push
push
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
jg
jg
sub
sub
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
push
push
push
inc
ret
ret
mulb
add
add
cmpsb
cmpsb
cmpsb
jbe
ret
ret
mulb
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
arpl
jmp
loope
push
icebp
icebp
incl
daa
daa
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
jmp
and
inc
ret
ret
mulb
add
add
cmpsb
cmpsb
cmpsb
jbe
mulb
and
jmp
es
es
es
es
es
es
es
es
es
es
es
es
es
es
es
es
es
sub
jle
jle
rcl
sar
fcomp
fdivr
popf
popf
popf
pushl
xor
jmp
es
es
es
es
es
es
es
es
es
es
es
es
es
es
es
es
es
and
inc
mulb
add
add
cmpsb
cmpsb
cmpsb
jbe
mulb
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
jmp
lcall
pop
ljmp
cs
cmp
cmp
inc
inc
inc
ljmp
das
das
decl
dec
pushl
pushl
xor
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
jmp
mulb
add
add
cmpsb
cmpsb
cmpsb
jbe
mulb
daa
daa
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
push
loope
jmp
out
jmp
insl
insl
jmp
lcall
fcmovnu
out
out
out
decl
das
das
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
ljmp
sub
jmp
daa
daa
inc
mulb
add
add
cmpsb
cmpsb
cmpsb
jbe
imulb
sub
ljmp
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
xor
incl
out
cld
cld
cld
std
std
std
cld
cld
cld
push
icebp
icebp
jmp
cmp
xor
xor
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
cs
sub
inc
mulb
add
add
cmpsb
cmpsb
cmpsb
jbe
vpsadbw
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
ljmp
imul
jb
cmp
cmp
push
push
mov
mov
jecxz
jecxz
repz
cmc
cmc
jmp
mov
aas
aas
aas
lcall
pop
incl
cmp
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
ljmp
vpsadbw
add
add
movsb
movsb
movsb
jbe
imulb
das
das
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
ljmp
push
loope
loope
ljmp
cmp
cmp
aas
aas
aas
call
push
jmp
ljmpw
push
push
push
push
incl
inc
cmp
cmp
ja
ja
fstp
lock
aaa
aaa
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
pushl
xor
ljmp
das
das
inc
mulb
add
add
movsb
movsb
movsb
jbe
divb
xor
pushl
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
aaa
aaa
pushl
jb
loopne
loopne
sti
sti
sti
sti
sti
sti
dec
into
into
jp
jp
push
push
push
decl
dec
decl
dec
call
push
ljmp
outsl
mov
cmc
cmc
std
std
std
in
in
in
decl
cmp
pushl
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
ss
xor
inc
vpsadbw
add
add
movsb
movsb
movsb
jbe
vpsadbw
xor
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
push
mov
repz
std
std
std
cli
cli
cli
ljmp
call
xlat
xlat
jmp
in
push
div
cli
cli
cli
call
aam
jle
jle
inc
inc
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
xor
mulb
add
add
movsb
movsb
movsb
jbe
vpsadbw
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
decl
fcmovu
push
div
std
std
std
std
std
std
cli
cli
cli
jmp
movsl
movsl
call
push
ds
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
mov
movsl
movsl
movsl
ja
add
add
movsb
movsb
movsb
jbe
mov
cmp
cmp
inc
inc
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
decl
dec
pushl
lcall
mov
pushl
movsb
movsb
jg
jg
push
push
push
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
cmp
cmp
mov
mulb
add
add
movsb
movsb
movsb
jbe
mov
aas
aas
aas
incl
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
inc
incl
aas
aas
aas
inc
mov
ja
add
add
movsb
movsb
movsb
jbe
mov
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
decl
dec
incl
inc
dec
enter
movsl
movsl
ja
add
add
movsb
movsb
movsb
jbe
enter
inc
inc
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
decl
incl
inc
dec
enter
movsl
movsl
ja
add
add
movsb
movsb
movsb
jbe
enter
dec
dec
decl
dec
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
decl
dec
decl
dec
dec
enter
movsl
movsl
ja
add
add
movsb
movsb
movsb
jbe
enter
dec
dec
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
decl
dec
dec
enter
movsl
movsl
ja
add
add
movsb
movsb
movsb
jbe
enter
push
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
call
push
dec
leave
leave
mulb
add
add
mov
leave
leave
notb
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
call
dec
leave
leave
mulb
add
add
mov
leave
leave
notb
push
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
lcall
pop
call
push
dec
leave
leave
mulb
add
add
mov
lret
pop
pop
pop
jmp
pusha
jmp
pusha
jmp
pusha
jmp
pusha
jmp
pusha
jmp
pusha
jmp
pusha
jmp
pusha
jmp
pusha
jmp
pusha
jmp
pusha
jmp
pusha
jmp
pusha
jmp
pusha
jmp
pusha
jmp
pusha
jmp
pusha
jmp
pusha
jmp
pusha
jmp
pusha
jmp
pusha
jmp
pusha
jmp
pusha
jmp
pusha
jmp
pusha
jmp
pusha
jmp
pusha
jmp
pusha
jmp
pusha
jmp
pusha
jmp
pusha
jmp
pusha
jmp
pusha
jmp
pusha
jmp
pusha
jmp
pusha
jmp
pusha
jmp
pusha
jmp
pusha
jmp
pusha
lcall
pop
dec
lret
movsb
movsb
movsb
jbe
add
add
stos
stos
stos
insb
int3
int3
int3
hlt
pop
pop
pop
jmp
arpl
fs
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
arpl
pop
pop
pop
dec
int3
int3
cmc
stos
stos
stos
insl
add
add
add
add
mov
push
fsubrp
pop
pop
pop
jmp
jmp
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
jmpw
lcall
pop
fucomip
mov
mov
add
add
add
add
mov
in
fidivrl
jg
arpl
ljmp
push
ljmp
imul
imul
ljmp
imul
imul
ljmp
imul
imul
ljmp
imul
imul
ljmp
imul
imul
ljmp
imul
imul
ljmp
imul
imul
ljmp
imul
imul
ljmp
imul
imul
jmp
arpl
jg
jg
out
out
out
ficoml
add
add
fcmovnu
jle
int3
int3
imul
data16
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
data16
imul
lret
lret
fcmovnu
fstpt
add
add
add
add
jecxz
mov
mov
jmp
arpl
gs
push
ljmp
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
push
ljmp
imul
arpl
pushl
in
mov
mov
or
into
into
into
adc
rcl
shl
mov
outsb
ljmp
outsb
ljmp
outsl
ljmp
outsl
ljmp
outsl
ljmp
outsl
ljmp
outsl
ljmp
outsl
ljmp
outsl
ljmp
outsl
ljmp
outsl
ljmp
outsl
ljmp
outsl
ljmp
outsl
ljmp
outsl
ljmp
outsl
ljmp
outsl
ljmp
outsl
ljmp
outsl
ljmp
outsl
ljmp
outsl
ljmp
outsl
ljmp
outsl
ljmp
outsl
ljmp
outsl
ljmp
outsl
ljmp
outsl
ljmp
outsl
ljmp
outsl
ljmp
outsl
ljmp
outsl
ljmp
outsl
ljmp
outsb
ljmp
outsb
incl
iret
iret
repz
out
out
stos
into
into
into
adc
aam
aam
jmp
jmp
in
in
in
sahf
ffreep
fcmovnu
fcmovne
fcmovu
fcmove
fcmovu
fcmove
fcmovu
fcmove
fcmovu
fcmove
fcmovu
fcmove
fcmovu
fcmove
fcmovu
fcmove
fcmovu
fcmove
fcmovu
fcmove
fcmovu
fcmove
fcmovu
fcmove
fcmovu
fcmove
fcmovu
fcmove
fcmovu
fcmove
fcmovu
fcmove
fcmovu
fcmove
fcmovu
fcmove
fcmovu
fcmove
fcmovu
fcmove
fcmovu
fcmove
fcmovu
fcmove
fcmovu
fcmove
fcmovu
fcmove
fcmovu
fcmove
fcmovu
fcmove
fcmovu
fcmove
fcmovu
fcmove
fcmovu
fcmove
fcmovu
fcmove
fcmovu
fcmove
fcmovnu
fcmovne
loopne
loopne
out
out
out
sahf
out
out
out
pop
jecxz
jecxz
incl
in
in
jmp
jmp
div
idivb
div
idivb
repnz
div
cmp
div
cmp
repnz
div
cmp
div
cmp
repnz
div
cmp
div
cmp
repnz
div
cmp
div
cmp
repnz
div
cmp
div
cmp
repnz
div
cmp
div
cmp
repnz
div
cmp
div
cmp
repnz
div
cmp
div
cmp
repnz
div
cmp
div
cmp
repnz
div
cmp
repnz
ljmp
sub
add
adc
add
and
add
add
add
add
add
rolb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
incl
add
push
add
add
decl
incl
lock
decl
lock
out
popl
add
push
out
popl
add
push
decl
decl
incl
push
add
add
incl
add
incl
add
push
add
add
incl
add
addb
add
add
add
add
add
add
add
add
add
pop
add
addb
add
pop
add
cmpb
add
incl
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
jo
add
add
add
add
add
mov
add
pop
add
ja
jo
or
sti
sti
sti
pop
jo
add
ja
add
jo
mov
jo
add
ja
add
sti
sti
sti
sti
sti
lock
add
add
add
add
mov
mov
sti
sti
sti
sti
sti
sti
sti
sti
sti
add
or
movswl
mov
add
sysret
or
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
pop
ja
pop
add
add
add
add
mov
mov
add
add
lock
sti
sti
sti
sti
lock
mov
mov
add
sti
sti
sti
sti
movswl
add
add
cld
pop
push
pop
jmp
add
rolb
add
add
add
add
add
add
add
jo
add
add
add
add
clc
addb
stc
addb
inc
pop
jmp
ud0
clc
aas
jmp
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
lods
add
jl
mov
add
add
add
adc
xor
les
xor
xchg
in
mov
mov
cmc
push
stos
dec
and
dec
sbb
push
inc
pop
push
xor
adc
loopne
inc
aas
jns
fwait
dec
rclb
mov
shl
arpl
je
ljmp
fdivr
gs
ljmp
call
or
nop
sbb
pop
scas
popa
cmpsl
js
icebp
and
aas
rolb
cmp
and
jno
cwtl
sahf
inc
dec
pushf
mov
dec
imul
in
fists
mov
jle
jnp
shr
xor
push
inc
movsb
pop
and
imul
outsl
mov
xchg
cwtl
popf
mov
mov
jb
adc
jl
mov
lcall
adc
fs
sahf
adc
popf
mov
cwtl
mov
push
repnz
loop
add
mov
outsl
pusha
inc
mov
add
jnp
sti
int
and
fmuls
cmp
jns
mov
push
jge
fwait
in
pushf
mov
xchg
idivl
sarb
fildl
lcall
mov
xor
pop
cmp
xlat
inc
xchg
and
lcall
hlt
mov
mov
es
or
xchg
or
xor
mov
jecxz
mov
hlt
xchg
bound
fcoml
pushl
dec
das
adc
ret
out
inc
les
mov
xlat
cmpsl
fisttpll
iret
neg
jo
je
dec
mov
lock
inc
test
pop
fsubrl
xchg
cli
or
jno
je
push
cmp
jecxz
sub
outsl
sbb
out
mov
jecxz
movb
in
sahf
mov
leave
subb
stos
fs
adc
lahf
stos
sub
jns
push
xor
lods
aas
inc
inc
fbld
adc
aam
cmc
or
mov
mov
and
and
fwait
and
sbb
mov
sbb
data16
mov
pop
pop
mov
add
insb
push
stos
shlb
mov
mov
mov
dec
inc
fstpt
sbb
xchg
and
and
in
addr16
fnstsw
jo
or
inc
cmp
out
outsl
sbb
add
xor
and
lret
mov
mov
dec
lock
ret
fstpt
mov
mov
lock
ret
arpl
add
int
adc
push
ljmp
outsl
add
dec
cwtl
scas
dec
nop
cmp
sbb
mov
mov
push
mov
sub
inc
int3
and
jp
nop
xor
mov
xchg
test
out
adc
movl
insl
add
out
aaa
inc
mov
fs
mov
sarl
pop
loopne
xor
mov
dec
shlb
jbe
cmp
dec
mov
stos
sub
out
stos
cmp
xchg
adc
jns
in
fisttpl
mov
cwtl
test
in
or
or
fistl
add
add
lock
shrb
daa
jae
add
sbb
push
stos
in
push
in
daa
cmp
mov
fisubrl
pop
cmp
push
inc
mov
bswap
clc
in
cmp
lock
dec
lret
cmpsl
jg
push
and
pop
jmp
push
pop
cld
mov
aad
adcb
fstpt
mov
inc
lds
stos
ss
cmp
jns
xchg
pop
sub
outsl
and
push
push
das
sub
das
lds
or
mov
sub
jecxz
aad
lcall
leave
pop
pop
push
clc
lret
adc
pop
jns
adc
xchg
int
or
int3
shlb
xor
mov
sbb
xchg
push
mov
sub
and
out
lret
adc
call
jg
jne
and
insb
pop
loop
xor
pop
inc
add
pop
shlb
stos
out
sbb
loopne
pop
lods
into
iret
in
sarl
xchg
push
mov
dec
test
pop
and
scas
sub
xor
dec
rorl
fadd
stos
or
cmpl
mov
aas
movsb
sbb
cmpsl
enter
pop
fsubrp
popf
add
incl
adc
iret
stc
adc
fcoms
jmp
das
pusha
mov
pop
xlat
or
add
lahf
int
movsl
push
xchg
mov
jae
lock
inc
sub
int
lea
mov
jnp
cmpsb
lods
enterw
cmp
call
clc
xchg
movsb
add
sti
ljmp
out
push
sub
or
imul
mov
push
adc
test
test
xchg
mov
aad
les
pop
leave
pusha
fsubrp
data16
stos
scas
cli
sbbb
in
insb
or
and
rcrb
ja
inc
daa
cmp
xchg
mov
sub
mov
xor
dec
adc
xor
jmp
roll
jno
mov
pop
inc
mov
add
aas
into
push
add
lret
fistps
cld
mov
loope
sbb
pop
mov
loopne
mov
les
and
mov
push
add
adc
pop
dec
push
js
je
les
cli
add
negl
pop
push
out
popf
jnp
je
mov
fstpl
iret
and
mov
cltd
les
iret
inc
push
xchg
add
lods
insb
mov
roll
movl
shlb
jecxz
mov
or
push
push
fistl
lds
lods
fmuls
stc
les
outsb
mov
daa
mov
mov
lret
aaa
pusha
push
ss
jns
pop
xchg
in
test
cmpsb
ja
adc
mov
loopne
xchg
loope
sbb
iret
lock
lcall
push
or
test
push
xor
pop
je
or
jbe
aas
sbb
push
jmp
adc
fwait
or
push
pop
xor
push
jg
loopne
jns
add
push
adc
jg
pusha
mov
xchg
addr16
lahf
adc
pop
inc
int
repz
mov
orb
data16
sbb
stc
shlb
inc
push
movsl
cld
jb
jns
mov
add
popf
and
cmpsb
popf
fcmovne
pop
je
mov
adc
addl
add
mov
cmp
icebp
movl
xor
jno
in
loopne
mov
negb
enter
pop
in
aaa
add
xor
fisubs
outsb
ds
sub
leave
scas
lahf
pop
or
push
out
test
mov
movsl
ret
fs
es
xchg
jo
outsl
jp
jge
sub
cs
sahf
scas
adc
js
pop
in
test
popa
adc
mov
mov
or
adc
xchg
cli
test
jo
cld
mov
inc
sbb
aaa
cmp
and
and
sbb
lds
fsub
cmpsl
xchg
aad
in
xchg
mov
mov
sbb
enter
push
inc
mov
inc
mov
and
adc
inc
movb
ljmp
xor
cmpsl
pushw
icebp
sbb
jle
dec
int3
cmp
in
aad
insb
cmpsl
push
or
movb
cs
fs
shll
in
daa
bound
cltd
sbb
call
sub
out
dec
fmul
fwait
les
lret
and
lods
add
ficomps
sarb
jl
lret
inc
scas
lret
ljmp
push
push
test
inc
jno
shll
ror
add
repnz
fistps
sbb
jl
test
cmp
push
mov
add
out
mov
mov
inc
repz
mov
int
jbe
jmp
std
push
push
ret
pop
icebp
ret
cltd
add
fdivs
jecxz
xchg
std
dec
xchg
stos
cmc
dec
jl
not
jb
sbb
je
fwait
inc
sub
in
imull
aam
cwtl
rclb
pop
add
dec
and
aam
je
dec
push
in
sbb
mov
push
mov
movsl
das
push
aaa
fidivl
inc
xor
mov
test
mov
stos
mov
mov
push
les
add
xchg
xchg
cltd
jmp
push
jg
cmpsl
mov
pop
mov
lods
and
push
cmp
dec
enter
and
dec
sbb
jmp
xlat
fistpl
mov
data16
popf
or
scas
adcb
or
cmp
mov
mov
mov
addr16
mov
mov
mov
and
repz
movl
sub
mov
test
cmp
cmp
sub
cmp
jge
fucomip
in
xchg
into
std
dec
lcall
mov
lods
js
idivb
mov
sub
and
jno
mov
mov
push
bound
xor
and
es
cmpb
mov
clc
ss
pop
push
hlt
mov
mov
mov
xlat
sahf
sub
push
xchg
push
ret
pop
lahf
mov
aam
xor
into
sbb
push
mov
dec
std
jl
ljmp
or
sub
jno
movsb
stos
lret
insb
xchg
push
mov
jge
xchg
test
les
and
mov
arpl
pcmpgtd
xchg
daa
push
call
clc
fucomip
fimuls
adc
push
sub
pop
scas
push
pop
roll
adc
cmp
test
data16
push
add
sub
sti
mov
idivb
and
lret
sub
test
std
jecxz
push
add
push
bnd
stos
pop
dec
fisttpll
sub
in
dec
out
pop
les
sbb
sub
ficoml
shlb
ja
cli
insl
aaa
and
adc
repz
mov
inc
xchg
xlat
add
or
fisubs
mov
mov
xor
cwtl
imul
call
sub
jecxz
mov
in
and
xor
xor
mov
int3
jns
fstpt
andb
sbb
imul
aas
call
xor
xor
lea
jmp
dec
sbb
lcall
scas
or
sub
divl
jp
insl
das
out
sub
cmp
es
mov
adc
sub
inc
cmpsl
fdivr
pop
dec
lock
dec
mov
pop
xlat
add
ret
aam
jns
popa
int
dec
outsl
and
jecxz
xor
cmc
fildll
xchg
push
rcrl
callw
xchg
je
mov
push
fs
fs
mov
sarb
jle
pop
fimull
pop
sbb
adc
cmp
outsb
ljmp
pop
cmpsb
jbe
imul
jnp
mov
push
mov
mov
in
dec
jbe
cmp
outsb
insb
lea
mov
sahf
jl
fiadds
pop
dec
test
mov
out
fwait
pop
cmpsl
mov
pusha
pop
fs
ret
push
in
add
lds
mov
mov
push
xor
inc
gs
bound
scas
jb
mov
scas
mov
fdivp
mov
jp
adc
cmc
shll
lea
inc
mov
sahf
inc
fmuls
xor
adc
les
jmp
imul
ljmp
inc
pushl
and
pop
push
int
inc
dec
outsl
fwait
cwtl
and
fdivp
in
lods
xchg
outsb
shr
mov
and
push
inc
addr16
add
mov
mov
dec
mov
adc
ret
mov
es
enter
mov
arpl
dec
movsl
dec
sbb
mov
push
cmpsb
out
pop
xchg
pushf
cmpsb
out
pop
outsb
sbb
xchg
xor
xor
and
push
cmp
xor
push
out
dec
pop
mov
scas
pop
push
lods
push
jp
sub
cs
fwait
shl
mov
loope
iretw
mov
and
cs
in
mov
pop
jmp
mov
and
sahf
xchg
scas
loop
iret
or
leave
xchg
push
out
mov
sub
xchg
js
imulb
sar
dec
and
scas
pop
xchg
and
lret
xlat
xor
test
mov
adc
and
inc
inc
adc
pop
lods
xlat
shrb
jbe
insb
inc
push
repz
inc
jo
scas
push
in
fisttpll
pushf
fdivrp
jp
inc
ja
in
adc
cs
xchg
bound
into
mov
icebp
adc
outsl
std
in
dec
add
imul
imul
adc
mov
test
enter
push
insl
in
push
inc
incb
jmp
popf
sahf
insb
sub
in
test
mov
push
popf
lret
fsubr
push
nop
mov
repz
mov
sub
mov
ret
out
cmc
into
add
xchg
cld
lock
inc
cmp
in
or
insb
dec
mov
dec
pusha
inc
ds
cld
stos
test
ljmp
xchg
cmp
and
push
rorb
dec
jg
insb
mov
xchg
push
mov
pop
mov
and
or
das
enter
xlat
fsubl
fistps
mov
xor
test
sarl
cli
ja
mov
pushf
out
cmp
js
movb
js
std
push
adc
es
insb
loop
shll
xchg
stc
xchg
mov
xor
mov
jo
xorb
sbb
lahf
addr16
xor
cwtl
out
insb
cmpsl
inc
jecxz
orl
cmc
pop
and
push
sbb
pusha
fcomps
mov
push
imul
stos
gs
mov
xchg
es
mov
mov
call
ss
cmp
mov
jbe
mulb
mov
inc
mov
hlt
push
lea
rcll
icebp
jle
mov
stc
or
add
nop
mov
iret
xchg
or
jb
sub
aaa
xlat
mov
aad
jmp
push
outsb
and
and
add
inc
or
xor
mov
jne
notl
xchg
pop
xchg
jnp
enter
jp
outsl
subb
popf
movsl
sub
outsb
inc
mov
push
mov
dec
test
push
test
jle
jnp
or
sub
xchg
mov
loopne
pop
inc
lret
sbb
and
fs
and
mov
adc
jb
fistl
push
cs
add
push
rcll
das
cmp
mov
push
sub
cmp
xor
icebp
pop
test
test
enter
mov
adc
add
xor
sub
sub
adc
inc
aas
sub
mov
sbb
in
int
enter
insb
mov
ljmp
test
mov
out
push
jae
pop
jge
cmc
mov
mov
xor
xchg
mov
ret
cmp
dec
mov
scas
das
int
cltd
mov
pop
xor
or
lods
mov
add
int3
jb
or
orl
iret
arpl
xor
mov
xor
leave
outsb
pop
cmp
sub
movsl
jnp
mov
push
adc
sbb
in
lcall
popl
sbb
push
adc
out
cli
sub
mov
jno
nop
xlat
cmp
neg
enter
sub
sub
lods
repz
js
mov
movsl
xor
in
adc
je
testb
scas
xchg
icebp
dec
xchg
pop
lock
out
sbb
mov
cmpl
js
mov
out
faddl
mov
lods
mov
mov
mov
mov
inc
adc
cmp
jmp
insb
repz
lfs
stc
inc
sub
or
mulb
outsl
or
mov
mov
ss
aaa
push
jmp
adc
jmp
lods
cmp
movsl
movsl
push
insb
cmp
les
cmp
xor
imul
adc
fidivs
shl
add
dec
test
or
and
lcall
mov
xor
and
cmp
jb
outsb
js
lods
mov
mov
rolb
or
dec
lea
sbb
xor
adc
inc
sbb
js
das
jno
in
popf
mov
lea
rol
das
dec
pop
cs
cmp
xchg
and
sub
inc
inc
ret
stc
arpl
dec
xchg
in
repnz
out
mov
in
sub
mov
shrl
sbb
xchg
mov
cltd
or
push
insb
mov
aas
test
push
lock
fwait
mov
fistl
add
xchg
fdivr
xchg
mov
rolb
add
shlb
push
cmp
push
inc
cmpsb
hlt
aam
dec
enter
inc
insb
xlat
nop
dec
into
pop
push
fisttps
mov
cmp
mov
test
std
dec
mov
xor
pop
mov
mov
ret
mov
pop
cld
ret
sbb
shll
adc
ljmp
xor
push
pop
pop
lods
add
stc
imul
int3
aas
adc
adc
push
fs
or
negl
and
mov
cltd
xchg
loop
lods
cmp
popf
insl
scas
mov
sti
inc
loop
fadds
xchg
repnz
jnp
aas
push
push
push
adc
adc
cld
mov
inc
lret
ds
mov
addr16
divb
lods
lret
xchg
mov
loopne
test
and
stos
push
dec
push
push
daa
mov
outsl
mov
sbb
faddl
insb
push
mov
sbb
icebp
mov
outsl
stos
ret
push
loop
lcall
inc
or
bound
enter
iret
sub
add
lret
jnp
adc
inc
test
mov
pop
mov
mov
xorb
test
mov
out
push
xchg
dec
push
sub
mov
dec
imul
mov
push
nop
movsb
sub
aaa
scas
and
push
mov
mov
lods
jae
ds
add
mov
sub
ds
dec
int3
pop
fsubr
lret
in
xchg
add
jae
cs
jg
roll
push
mov
sbb
cld
rcrl
xor
pusha
icebp
ficoms
in
or
fadds
adc
mov
pusha
stc
aam
dec
adc
and
pop
adc
jb
popf
fcom
cld
push
jnp
jbe
scas
push
mov
leave
loopne
mov
pop
dec
cmp
xchg
das
cmp
push
stos
cmp
pop
push
xchg
sbb
and
push
aaa
ss
xor
push
sti
arpl
mov
push
cmpsl
addr16
loop
pop
movsl
lea
pusha
dec
add
in
adc
out
inc
add
int
test
and
jnp
imul
xchg
cmp
adc
cmp
stc
push
ljmp
mov
mov
mov
lcall
or
test
les
mov
in
in
stos
xor
and
xor
in
mov
in
sahf
sahf
stc
mov
dec
leave
cmpsl
out
push
dec
push
je
mov
dec
pop
loopne
or
add
cli
aas
sahf
add
sub
clc
incl
lods
pusha
add
adc
pop
gs
inc
xchg
btsl
jle
dec
dec
mov
dec
and
test
cli
out
pop
flds
stc
mov
pop
iret
inc
daa
cwtl
jnp
mov
add
out
push
arpl
mov
push
daa
pop
sub
loopne
jne
lcall
jl
dec
xchg
jmp
add
call
mov
xchg
jg
rolb
call
std
mov
jne
sbb
aaa
push
stos
push
out
outsl
mov
aaa
outsl
outsb
mov
mov
int3
clc
push
push
jns
mov
xchg
out
imul
sbb
xor
jp
loopne
mov
jnp
mov
leave
mov
dec
pop
push
gs
or
pop
xlat
scas
xor
xor
inc
xchg
les
in
sub
cmp
mov
hlt
and
jae
add
sarb
add
xor
xchg
and
sbb
mov
xor
adc
mov
jg
mov
xchg
aas
into
adc
xor
ret
mov
cwtl
scas
mov
fwait
mov
decb
js
stos
mov
idiv
sbb
shl
or
xor
fsubrl
xor
ss
iret
add
leave
lret
cld
and
xor
and
je
xor
aas
outsl
scas
mov
fstps
or
jae
popa
les
leave
xor
mov
and
sbb
pop
ds
jb
adc
iret
sarl
je
sbb
cmp
lcall
add
mov
sub
in
hlt
jb
inc
push
loop
dec
push
inc
fs
adc
pop
ja
es
and
subb
in
jbe
or
fnstsw
cltd
add
pop
pushl
and
out
popf
std
dec
xor
jge
fwait
hlt
fldenv
jg
mov
outsb
ds
int3
shrl
inc
insb
adc
add
imul
mov
jg
mov
jl
test
pop
cmpsb
jp
pop
fistps
popf
mov
arpl
std
mov
sbb
mov
call
ror
scas
jbe
cwtl
mov
push
je
in
mov
xlat
pop
xchg
mov
sub
fdivrp
adc
jl
repz
push
xlat
sbb
sub
imul
sbb
ja
mov
or
dec
ret
fstps
sub
ds
fisubs
lods
jne
jmp
sub
jb
xor
jg
pop
push
adc
xor
cmp
in
nop
enter
fs
mov
stc
bound
pop
inc
rclb
shl
cmp
jae
fwait
and
add
mov
lock
ljmp
pushf
lea
jnp
sub
out
or
out
sbb
fwait
jnp
fcmovnu
cli
in
jg
xchg
movsb
subl
mov
inc
jb
sbb
mov
insl
jae
mov
mov
mov
pop
cmc
lods
sub
cmp
mov
iret
out
arpl
pop
jae
ja
pop
roll
sti
jmp
scas
pop
mov
mov
cltd
std
lds
sub
and
cmpsb
mov
pop
out
xor
js
arpl
imul
leave
icebp
cmp
cmp
mov
dec
jle
inc
push
shrl
add
test
in
mov
and
in
jp
and
xchg
fnstsw
add
push
cmc
aad
xor
sbb
cmovo
push
imul
outsl
mov
inc
cwtl
lea
not
mov
sbbb
cmp
jp
fbld
jbe
rcll
jecxz
jb
mov
xor
rorb
leave
mov
jmp
lds
push
mov
push
in
testb
or
mov
inc
adc
cli
pop
dec
dec
jmp
and
inc
dec
hlt
sarl
lret
and
and
sbb
leave
mov
jecxz
aaa
mov
dec
sub
jmp
xlat
and
outsb
mov
scas
jae
sbb
leave
xlat
mov
in
scas
cmp
stc
subl
data16
push
push
pop
or
movsl
jp
pop
enter
push
lock
rorb
sbb
out
inc
cltd
mov
aaa
lahf
mov
inc
adc
loope
pushf
fmuls
insb
out
cld
push
mov
xlat
pusha
fwait
mov
xor
push
out
cwtl
sub
mov
xchg
mov
jmp
loope
fsubrs
movsb
mov
jle
aam
add
cmp
scas
jg
sub
aas
jmp
inc
jo
add
cmp
inc
lock
ss
and
push
jne
loopne
test
mov
lods
arpl
adc
add
adc
add
je
aas
cs
in
fstps
lods
xchg
out
mov
xor
shlb
test
in
cltd
mov
xor
xchg
or
jne
sub
ret
jmp
xchg
adc
int3
mov
ret
mov
pop
sbb
dec
pop
ja
in
mov
cmpsb
xchg
les
jbe
outsl
sbb
push
roll
jp
jecxz
adc
jo
xor
popf
dec
mov
insl
xchg
iret
in
push
bound
pop
ja
mov
mov
sbb
lods
mov
mov
fsubr
pop
sub
adc
clc
mulb
gs
or
fcoms
sub
outsl
faddl
push
test
xchg
fdivrl
push
aad
mov
hlt
aad
mov
mov
push
sub
jmp
rorb
rcrb
sahf
push
fisubs
xchg
les
mov
push
fcoml
xchg
in
js
mov
mov
pop
mov
fists
inc
sbb
cld
sbb
mov
xor
in
adc
ds
lea
or
adc
dec
mov
pop
sahf
sbb
adc
hlt
sub
lcall
sub
stc
pop
hlt
push
mov
movsb
loopne
and
cmpsl
shll
repnz
icebp
fmul
jbe
das
jo
mov
sti
lea
and
sub
es
outsl
xchg
add
adc
lret
ja
mov
mov
xchg
or
cmp
or
xchg
je
movsl
inc
push
sub
sahf
xchg
arpl
call
lods
jmp
insb
jo
inc
push
push
dec
lds
lcall
push
pop
idivl
sub
in
movsl
imul
mov
iret
outsl
cmp
jno
sub
pop
xorl
iret
inc
jne
lods
inc
dec
pusha
inc
in
movsl
mov
push
inc
test
cwtl
dec
lea
pop
js
rcpps
cmpsl
adc
dec
xor
mov
jne
dec
or
mov
mov
jl
sub
push
jae,pt
mov
mov
out
ret
xchg
cmpsb
inc
add
enter
lahf
cmp
in
dec
dec
inc
rcrl
subl
cmc
adc
adc
inc
stos
jb
rorb
scas
xchg
mov
fs
jg
ss
in
lods
mov
scas
mov
sub
xlat
add
or
es
sbb
lret
xlat
cli
lcall
dec
out
push
xchg
xor
push
or
pop
movsl
jg
cli
mov
pop
insb
in
das
and
loopne
xchg
pop
push
and
lods
sarl
loope
and
dec
decl
in
pop
daa
ja
shlb
xchg
jle
adc
jbe
inc
arpl
out
or
jl
pop
inc
cltd
cmp
mov
cwtl
gs
inc
movsl
sar
mov
test
enter
test
pushf
xchg
loope
incl
pop
je
push
xchg
add
fdivs
xor
xor
dec
lock
pop
xor
stc
add
add
add
dec
mov
mov
pop
dec
mov
push
pop
adc
enter
ss
xchg
push
pop
push
mov
in
mov
mov
sbb
shrb
daa
aaa
mov
jmp
pop
pop
fwait
and
mov
or
push
jnp
jmp
shrb
jb
push
inc
sub
push
andb
cltd
xchg
mov
sar
cmc
adc
shll
movsb
push
or
dec
lret
mov
jge
iret
jmp
and
sub
inc
pop
test
lret
mov
jge
adc
push
jnp
lods
mov
out
inc
mulb
andb
subl
inc
xchg
xchg
in
push
sub
daa
sbb
decb
fs
jns
dec
mov
popf
call
dec
stos
loope
sub
add
cmpsb
sbb
sub
mov
sub
dec
popa
icebp
pop
add
outsl
ret
push
enter
or
cmp
into
cli
xchg
push
mov
mov
cmp
xorb
bound
imul
popf
xchg
cmpsl
ljmp
and
xor
push
xchg
ja
lcall
outsb
dec
inc
icebp
icebp
insl
mov
in
or
fimull
fisttps
lock
sub
dec
push
push
cmc
aad
das
pop
clc
mov
mov
push
scas
mov
cs
sbb
jp
jl
icebp
clc
movb
out
clc
rep
pop
sbb
inc
inc
pop
mov
xchg
out
dec
or
dec
out
inc
movsb
inc
lret
lahf
xchg
call
shr
lea
cld
sbb
xor
mov
pop
xchg
outsl
mov
pop
push
inc
ja
mov
dec
in
xchg
xchg
addb
and
mov
mov
leave
arpl
divl
inc
ss
shr
cmc
and
jno
xor
imul
sbb
jge
hlt
insb
push
xor
gs
lret
das
or
jmp
jnp
pushl
mov
mov
xchg
jmp
lret
lea
vucomisd
ret
xchg
sbb
mov
adc
adc
push
out
inc
jge
int
lret
push
xchg
insl
jno
xchg
mov
dec
not
sub
int
xlat
aaa
lcall
aas
fld
mov
je
fildll
and
out
mov
cs
lahf
cmpsb
in
jge
rorl
int3
xor
xchg
and
dec
add
sbb
mov
das
xor
push
and
or
pop
sbb
js
push
cmc
push
sbb
cmp
jge
loope
push
pop
xchg
inc
mov
jmp
or
inc
imul
testl
outsl
add
ljmp
dec
mov
fsubp
lahf
mov
loope
dec
pusha
mov
sbb
das
out
jb
sbb
and
outsl
inc
into
je
cmpsl
cmp
adc
cmpsl
ret
or
mov
pop
sub
pop
es
xchg
add
or
or
cmp
mov
xchg
xor
cmp
aas
loope
std
sub
clc
orl
mov
setl
into
or
out
aam
adcb
std
sbb
inc
call
shll
mov
pop
xchg
xchg
icebp
pushf
loope
into
test
fisubrs
clc
inc
xor
cli
shrb
mov
mov
add
mov
fnstcw
mov
arpl
push
mov
add
and
xlat
leave
fcmovnbe
and
std
movsb
lds
daa
subl
dec
sbbb
rcrl
cs
pop
dec
movsb
xchg
xchg
movsb
fisttps
cmpsl
scas
pop
in
mov
testl
inc
adcb
mov
por
movsl
mov
pop
movsb
fstps
outsl
loop
into
out
inc
stc
cmc
cmpsl
les
mov
iret
testl
pop
pushf
insl
mov
cmc
jne
pop
push
dec
mov
pushf
loope
out
jp
in
repz
cmpsb
in
call
fs
sbb
leave
rorl
xor
adc
fisubl
inc
push
mov
pop
fcmovu
pop
add
enter
inc
fwait
xchg
lods
push
push
out
cmp
jmp
mov
dec
les
mov
push
jmp
pop
dec
jmp
and
lea
bound
push
cmp
dec
leave
fidivrs
inc
outsb
mov
push
das
incl
xchg
lret
lea
mov
jne
dec
mov
lret
outsb
nop
insl
addr16
test
iret
stos
test
xor
mov
inc
jge
push
stos
xor
inc
mov
loopne
test
xchg
mov
sub
out
int3
jle
dec
or
sbbb
insl
jnp
mov
popf
test
pop
xchg
out
jge
push
test
loopne
fcoms
jo
hlt
imul
adc
sub
fldcw
lea
sahf
pop
fsubrl
adc
jle
and
and
add
pop
push
xor
sub
rcr
dec
mov
hlt
sub
cmc
mov
pushf
sub
enter
and
xchg
cltd
cmc
push
and
fucom
shll
mov
mov
je
and
lods
out
inc
mov
arpl
adc
push
dec
repz
dec
sub
sbb
jg
mov
test
cmp
lock
cli
mov
js
repnz
ret
sub
adc
sbb
sub
pop
sti
sbb
adc
xchg
xchg
lea
cltd
cmpsb
clc
fidivrs
inc
in
jne
cmpsb
mov
sub
movsl
lret
xchg
adcb
pop
sub
pushf
scas
push
pusha
push
inc
dec
sahf
mov
mov
or
pop
mov
scas
fists
push
sbb
sub
sahf
cmp
loope
daa
es
movsb
cs
fndisi(8087
or
mov
mull
test
cmp
xchg
movsl
or
sbb
loop
sub
pop
jmp
pusha
sub
lahf
lds
rolb
aad
aad
into
mov
mov
pop
cmpb
int3
hlt
je
mov
pop
pop
and
pop
mov
mov
insl
jne
adc
imul
sbbb
aaa
push
leave
lea
pop
dec
cmpsb
js
decb
addr16
repnz
mov
mov
iret
inc
leave
xchg
or
xchg
xchg
mov
pop
dec
adc
outsl
lret
dec
ret
fists
dec
mov
dec
ja,pt
loop
jne
das
sub
int
je
imul
je
repnz
push
xlat
push
leave
sbb
push
idivb
lret
in
loop
test
dec
cld
mov
mov
repz
nop
mov
inc
adc
inc
xor
sub
ja
sarl
or
movb
dec
push
jl
or
add
cmp
add
push
adc
mov
xchg
lret
or
mov
shrl
jge
jle
cmp
scas
fdivl
dec
adc
and
adc
stos
jge
mull
loopne
popf
nop
cmp
mov
inc
incb
mov
cmp
ljmp
repnz
inc
or
scas
test
pop
dec
outsl
sub
cmc
enter
mov
jle
xchg
sbb
mov
sub
sahf
loopne
sbb
adc
aas
jb
xor
or
dec
cmpsl
sbb
xor
adc
sbb
mov
icebp
aas
addr16
ljmp
mov
pop
aas
test
das
fcmovbe
adcb
std
hlt
scas
ret
movb
jae
push
sub
insl
xchg
adc
inc
sub
arpl
les
in
pop
cmp
popl
leave
push
idivb
vpunpckldq
nop
scas
nop
push
xor
imul
aad
mov
test
lds
mov
dec
or
gs
test
mov
pop
outsl
xlat
das
stos
xchg
jne
jmp
pusha
mov
jmp
gs
mov
sub
lret
cmpsl
insl
lods
push
std
jae
and
notb
lods
pusha
inc
lcall
test
fisttpll
or
add
jo
jmp
add
imul
push
sarl
jg
sbb
repnz
mov
mov
test
dec
sub
cld
xchg
pop
push
fst
push
or
mov
and
sarl
sti
mov
lea
sbbb
sub
dec
sbb
aaa
inc
sbb
dec
fs
push
addr16
pushf
repnz
rcr
scas
aaa
push
add
sbb
add
gs
andb
outsl
pop
subb
je
dec
jl
icebp
xchg
sub
inc
into
jl
int3
xor
outsl
in
dec
xchg
ljmp
mov
fadds
lods
xchg
lret
ror
fadd
mov
jbe
in
inc
cmpsb
push
stc
mov
xlat
mov
mov
call
out
pop
adc
xchg
add
test
hlt
inc
lahf
enter
adc
sbb
imul
jecxz
inc
inc
jnp
push
lret
cmp
add
nop
xor
call
lcall
dec
lret
es
mov
push
adcb
gs
cld
fisttpll
icebp
xchg
ss
pop
push
mov
pop
push
es
stc
inc
mov
mov
das
lar
sahf
movsl
jg
fsubr
stc
out
xchg
adc
add
insl
pop
or
std
pushf
and
push
add
lcall
xorb
xor
jb
mov
mov
add
mov
xchg
inc
aam
orl
sbb
shll
xchg
pop
lea
aaa
ljmp
xor
fisttpl
aad
add
popa
mov
mov
jge
cwtl
int3
mov
pop
ds
lock
rol
sahf
sbb
mov
push
shrd
sub
jns
pushf
push
dec
das
xor
xchg
addr16
decl
clc
cmp
clc
je
sbb
sbb
insl
outsb
xor
mov
into
add
jle
ficoml
adc
andl
add
and
scas
add
or
mov
jns
cli
orb
nop
cmpsl
fwait
sub
lods
lret
cmpsl
mov
mov
lods
add
addr16
push
xchg
je
cmp
arpl
cltd
test
jle
jp
cmc
push
sahf
js
daa
mov
test
je
stc
scas
pop
int3
push
xchg
adc
shll
inc
clc
mov
mov
test
xor
ds
jne
test
sahf
arpl
push
pop
sbb
mov
add
cltd
sbb
imul
cltd
adc
inc
push
cmp
add
push
outsl
cmpsb
sbb
mov
pop
lods
loopne
push
mov
mov
inc
mov
mov
scas
jle
pop
ja
jo
xchg
jae
insl
data16
push
std
xchg
cmp
pop
je
jmp
movsb
outsb
xchg
in
lods
mulb
js
loopew
mov
cmp
mov
jg
lods
imul
sub
loope
sub
adc
cs
lret
xor
adc
loope
test
aaa
shr
mov
cli
sahf
push
ja
inc
inc
hlt
mov
lds
outsb
aam
and
sahf
es
mov
and
inc
loop
cmp
sahf
jl
xor
das
and
outsl
mov
dec
sbb
insl
lods
mov
mov
dec
or
push
pop
cmp
sbb
lds
ss
das
pop
mov
pop
inc
or
dec
test
mov
mov
mov
repnz
sub
mov
ret
xchg
mov
ret
repnz
popl
fistps
out
or
ds
sbb
mov
jmp
cmc
cld
mov
xchg
mov
push
mov
adc
and
jge
push
xor
add
sbb
int3
xchg
fstp
dec
pop
aam
insb
movsb
push
in
mov
and
lods
decb
int3
cwtl
nop
lret
sar
or
mov
ja
sbb
adc
xchg
and
xor
sti
cltd
in
imul
lods
jae
mov
mov
or
jg
out
scas
pop
jl
popf
jnp
fistpll
out
hlt
xchg
mov
jl
lock
adc
mov
stc
and
and
in
sar
pop
push
pop
pop
aas
lea
ret
push
out
sti
or
movsl
push
in
xor
sub
jecxz
mov
insl
fnstenv
mov
add
and
cmp
iret
xchg
insb
mov
nop
push
fbstp
out
pop
iret
xor
push
sub
push
dec
xor
cltd
insb
inc
in
nop
ss
stos
push
or
push
add
mov
xchg
inc
add
outsb
aad
loop
out
out
mov
loope
ss
jmp
sbb
stos
add
sub
call
xchg
xor
imul
movsb
jbe
popa
sbb
call
inc
sub
add
jnp
aaa
push
mov
sub
cs
adc
or
xor
sub
in
pop
aad
mov
mov
das
xchg
enter
imul
subb
sahf
push
insb
out
incl
loop
aas
fdivrl
sub
mov
mov
cmp
popa
sbb
mov
sar
les
jns
pop
pop
push
push
mov
enter
jge
add
add
or
out
lcall
adc
xchg
sub
push
inc
jmp
fadd
mov
sub
js
aam
inc
aas
jle
cmpsb
in
push
pop
pop
push
into
cmp
mov
add
or
cmp
jp
add
aaa
shl
add
mov
pushf
inc
test
outsl
test
xchg
int3
lahf
mov
jae
push
dec
fwait
insl
pop
mov
lcall
dec
push
loope
mov
ja
dec
call
lock
pop
mov
out
std
mov
mov
xor
sbb
jecxz
scas
xchg
sti
push
filds
adc
jne
inc
cmp
mov
adc
das
jno
and
push
mov
fstpl
orl
push
push
inc
lcall
jge
mov
aas
inc
sub
push
lds
imul
rolb
mov
popf
js
inc
pop
scas
push
pusha
and
sub
jae
fdivr
stc
pop
pop
jge
sbb
sbb
aaa
xchg
cmp
mov
stos
xchg
stc
dec
pop
xchg
push
enter
jae
sbb
pop
dec
rcrb
fwait
cmpsl
inc
cwtl
mov
mov
fbstp
mov
inc
je
dec
mov
bound
xchg
sbb
and
enter
mov
ss
mov
out
add
fstl
inc
mov
dec
push
cmp
add
ds
je
mov
or
cmpsb
cmpsl
pop
cmp
xor
inc
dec
rdpmc
jg
lahf
fdivl
sahf
in
mov
movsl
pop
imul
pop
jae
loope
andl
mov
stos
call
sbb
sbb
mov
mov
daa
lock
sti
and
xor
in
xchg
jl
imul
jl
into
push
lods
adc
push
inc
outsb
es
pop
and
inc
mov
adc
push
xchg
lret
arpl
push
adcl
shrb
sub
xchg
sbb
sahf
loopne
or
jnp
mov
fnstcw
adc
xor
sub
leave
fsubs
pop
jae
loope
sub
movsb
mov
sub
sbb
cli
add
ljmp
mov
or
loope
push
jno
xchg
enter
shrl
pop
in
inc
mov
fwait
inc
cmp
lret
stos
or
mov
sub
sub
in
mov
les
sub
adc
jle
adc
xor
lods
add
adc
mov
cpuid
orl
stos
xchg
test
and
call
push
xchg
fnstcw
aad
rorl
fisubs
imul
lahf
jmp
jecxz
xchg
inc
pop
dec
adc
fisubl
imul
nop
sub
in
loope
aas
cwtl
mov
pop
and
dec
dec
mov
push
cwtl
jo
jbe
mov
in
rorl
ret
repnz
adc
div
in
push
shrl
mov
std
add
mov
scas
leave
dec
add
pop
dec
push
xchg
iret
push
iret
xor
movsb
inc
push
aaa
shrl
jl
ss
xor
xor
adc
icebp
sbb
xchg
push
mov
rep
xlat
in
jg
insl
push
iret
fbstp
cltd
pop
mov
or
stos
rcrb
js
jo
mov
nopl
gs
clc
push
loopne
xchg
jne
and
xor
out
popl
jp
mov
je
data16
hlt
adcl
aas
lds
mov
and
lods
jb
jp
cwtl
jl
fnstenv
mov
or
stos
ror
fnstsw
sbb
add
int
push
xchg
call
fiadds
lods
imul
cmp
scas
std
mov
fldl
adc
shll
aaa
dec
lock
mov
lods
push
add
or
arpl
inc
fldz
cmp
mov
icebp
jbe
xor
add
insb
fwait
test
mov
or
aas
inc
jae
push
movsl
or
jbe
imul
ror
je
leave
jns
xor
xchg
mov
cs
inc
xor
push
sub
adc
and
or
pop
stc
scas
and
and
cwtl
dec
fucomp
das
and
icebp
xchg
test
out
aaa
mov
ja
fcmovnbe
mov
jne
inc
jp
mov
js
inc
fsubs
xor
sub
xor
lahf
pusha
sub
jecxz
dec
sbb
pop
cld
shrb
cmc
mov
inc
sbb
ret
inc
or
cmp
jo
sar
lock
mov
pop
xchg
inc
sub
outsb
push
cmp
push
cmpsl
jecxz
xor
mov
push
lods
mov
rol
sub
inc
shl
and
push
aaa
lret
jae
jmp
repz
inc
push
std
inc
lahf
adc
dec
mull
dec
in
inc
add
mov
lret
xor
jno
fsubrs
xor
lds
cli
mov
inc
xor
push
stos
sbb
xchg
fdiv
xchg
jno
dec
sbb
inc
sbb
and
enter
hlt
sub
mov
rcrl
mov
push
ror
xchg
cmp
call
xchg
lret
push
test
xchg
dec
orl
mov
insl
or
stc
push
push
or
mov
pop
pop
mov
and
daa
xor
pop
movups
pop
fsts
mov
in
outsb
pop
iret
lods
or
rcl
adc
or
pop
lock
fwait
jl
ret
loop
roll
cmp
push
and
bt
jbe
std
movsl
ljmp
fsubp
loope
push
jo
or
out
mov
xchg
xorl
mov
into
ljmp
outsb
xchg
daa
movsl
xlat
ss
sub
shll
inc
push
mov
sub
xchg
dec
out
xor
sub
insb
dec
out
addr16
sbb
mov
les
je
stos
test
icebp
enter
xor
rcll
add
jmp
lret
leave
mov
insb
andl
xor
mov
lds
loop
pop
and
mov
les
sti
push
idivl
pusha
add
jecxz
push
push
outsb
mov
xchg
shlb
lret
cwtl
adc
add
movsl
std
add
in
jmp
lds
push
add
out
pop
mov
adc
rorb
inc
mov
fsubl
xor
xorb
in
notl
pop
lods
ss
imul
pusha
mov
pavgb
scas
jb
add
mov
mov
sub
push
int
push
in
out
push
sbb
push
inc
mov
jae
jp
pop
dec
scas
pusha
stc
xor
inc
sahf
loop
mov
stos
nop
mov
dec
add
jge
das
push
jp
inc
dec
stos
xchg
inc
pop
orl
imul
add
adc
ret
jnp
cmp
add
pop
sbb
stc
out
or
pop
xchg
inc
dec
push
mov
movsb
lret
xchg
push
scas
xchg
test
add
push
add
xor
aas
add
cmc
testl
sar
xchg
cmp
cmp
outsb
test
notb
push
pop
loope
xchg
lret
lret
push
sbb
sbb
insl
adc
scas
ror
rorl
ds
ss
xchg
xor
fistpl
testb
mov
bound
in
in
es
je
sbb
clc
mov
bound
jae
rcrb
pushl
int
xor
imul
pop
les
mov
jno
pop
jmp
clc
ficoml
imul
cmp
push
aas
jg,pn
adc
xchg
add
sbb
stos
fcoml
movsb
imul
daa
lcall
out
or
mov
push
adc
xchg
push
cmpsb
dec
mov
repnz
pop
out
lahf
fdivs
movsb
cmp
adcl
daa
mov
and
bound
and
sbb
mov
mov
pusha
and
fdivrl
cltd
sbb
sub
adc
pop
aaa
add
out
jnp
adc
and
scas
mov
ljmp
mov
pusha
sar
push
xchg
xchg
pop
pop
xlat
mov
xor
shlb
pop
xchg
mov
shll
pop
xor
sti
dec
mov
cmp
in
lock
xor
jne
loope
sbb
and
shrb
sahf
test
enter
stos
cmpsb
mov
test
push
mov
ss
mov
adc
nop
adc
out
lods
and
xor
int3
sahf
shlb
pop
jno
xchg
dec
sub
pandn
in
fcoms
mov
loop
lret
scas
orl
mov
js
frstor
popa
and
mov
xchg
mov
jecxz
inc
jecxz
sbb
mov
lahf
sbb
sbb
jle
filds
sti
stos
mov
and
fimuls
and
cmpsb
mov
fisttpll
push
outsl
sub
hlt
aas
cmp
add
mov
add
jae
adc
lret
arpl
movsl
es
cmc
flds
ss
add
popa
out
mov
rcrl
movsl
popa
xor
iret
xchg
xor
stos
sbb
xor
mov
dec
ja
jae
mov
add
leave
jb
mov
and
lea
and
push
and
ja
test
jp
adc
adc
mov
or
mov
sti
fisubrs
or
and
pop
push
dec
cmpsl
xchg
cmpsl
daa
call
je
xchg
cs
mov
mov
sub
lcall
decl
ss
jbe
test
daa
fs
sbb
or
rclb
jb
cli
pop
adc
mov
mov
xor
in
cmp
sahf
sbb
ds
iret
cltd
fs
insb
xor
leave
stos
cld
bswap
outsb
dec
rcl
jle
pop
pop
popa
pop
pop
in
cmp
jl
arpl
cld
or
popa
xor
or
addr16
in
test
fs
xchg
addr16
or
lods
and
sbb
pusha
push
int
mov
repz
test
push
push
bound
loop
mov
mov
add
imul
bound
js
fwait
les
movsb
mov
pop
icebp
call
dec
cmp
adc
xor
je
and
push
decb
lret
cmpl
lret
stc
ficoml
mov
sub
pop
scas
dec
mov
adc
shll
jnp
add
ror
popa
fiadds
data16
push
ljmp
mov
push
mov
cmpsl
inc
es
call
jne
aad
call
leave
ret
sbb
jp
daa
fimuls
mov
and
jne
test
cmp
ds
aas
cltd
xchg
xor
sbb
les
stc
cmp
xor
outsl
lcall
sbb
out
cltd
outsl
push
pop
outsl
movsl
cmpsb
push
sub
in
xchg
add
sub
fcomps
xchg
in
xor
test
or
sahf
inc
add
mov
jo
lret
fwait
gs
shlb
mov
mul
cmpsb
xchg
mov
arpl
test
repnz
stc
jne
push
out
popf
movb
mov
xlat
add
mov
xchg
mulb
add
and
fwait
xchg
and
xor
jge
push
sub
int
mov
test
cmp
sub
loope
push
dec
xchg
stc
aam
lcall
or
lea
add
inc
pop
call
jp
jo
ficoml
sbb
jl
sub
movsl
xchg
adc
sub
mov
lcall
push
adc
adc
aad
sbb
into
testb
enter
inc
in
xor
stc
add
hlt
lea
push
xchg
test
add
lds
dec
and
fmuls
fstpt
ljmp
or
jl
ds
dec
cmp
jbe
data16
ja
ljmp
pop
sti
xchg
jg
fsts
jl
cmp
sub
pop
insl
dec
adc
mov
xchg
bound
mov
je
jl
and
xor
push
pop
fiadds
mov
orl
add
loope
jg
test
cmpsl
inc
sbbl
adc
mov
fsub
rcll
jecxz
aam
out
movb
imul
or
lahf
pop
and
dec
inc
cmp
mov
push
push
add
insl
lahf
scas
cmp
lret
dec
push
icebp
ret
insl
xor
or
pop
mov
aaa
stos
inc
ret
and
in
jg
mov
cmp
pop
ljmp
jmp
rcr
es
jmp
inc
push
jecxz
adc
jmp
push
call
pop
loope
mov
nop
xor
xor
sbb
idiv
je
imul
sbb
pop
in
dec
test
inc
ror
mov
testb
jle
mov
fldl
dec
mov
mov
or
push
inc
icebp
sub
testb
repz
mov
je
add
ret
sub
inc
pop
stos
inc
xchg
inc
repnz
aam
push
out
das
mov
movsl
rcrl
aaa
push
mov
mov
sub
sbb
mov
rcl
outsb
dec
fadds
ljmp
and
testb
fcom
lret
inc
cltd
cmp
std
push
test
rcr
nop
and
pop
js
outsl
es
inc
rcl
int3
add
jnp
mov
sub
add
dec
movsl
xchg
test
mov
ret
or
dec
adc
sub
rcl
mov
gs
and
ja
push
clc
stos
jns
lock
fistpl
lds
dec
dec
mov
pop
mov
mov
jmp
jnp
insl
jns
cltd
sbb
xchg
dec
cmp
mov
and
les
sbb
pop
pusha
into
mov
pop
mov
push
mov
js
xchg
movsl
icebp
fcomps
imul
adc
ds
xor
mov
sbb
sub
in
lret
negb
or
fs
leave
enter
stc
xchg
mov
xor
mov
mov
dec
rcrb
lds
dec
xor
imul
and
pop
out
movsl
mov
mov
imul
push
pop
inc
push
cmpsl
adc
mov
sub
call
ljmp
dec
insb
jmp
cwtl
pop
cmp
xor
stc
adc
movsl
jae
lcall
sub
int3
lods
popf
mulb
jbe
popa
jmp
jp
push
loope
out
mov
xchg
out
jl
in
jmp
jecxz
pushf
test
jp
mov
sarl
jne
add
push
mov
xlat
fdivrl
push
aaa
push
test
rcr
repnz
rolb
adcb
testl
xchg
insl
gs
jae
sub
inc
jecxz
cmpsl
mov
test
inc
sub
adc
fsubl
in
xchg
or
cld
inc
imul
pop
or
xchg
add
sub
adc
and
into
outsl
fwait
aaa
inc
mov
jae
mov
xchg
hlt
pop
scas
mov
jne
lcall
ljmp
sub
outsl
inc
pushf
ret
fsubr
std
pop
leave
mov
in
lods
xor
sar
fs
pop
div
dec
shll
rcrl
jb
push
dec
cld
jge
mov
mov
pop
xabort
xor
add
out
inc
into
outsb
outsl
out
xor
stos
je
push
rclb
das
mov
pop
jb
mov
arpl
sbb
push
iret
arpl
iret
bound
mov
out
ds
addr16
aaa
cmpsb
mov
mov
aas
in
sbb
add
push
ss
or
mov
fcmovb
sub
mov
jnp
adc
pop
mov
mov
ret
movsb
aaa
shl
add
pop
pop
inc
and
pushf
rorl
inc
mov
jecxz
fisttpl
lock
lds
mov
outsb
lret
pop
fistl
ror
out
push
mov
mov
negl
xchg
aad
hlt
pop
add
popf
int
sub
add
inc
dec
aam
popa
mov
out
test
pushl
add
stos
icebp
fstl
sub
dec
fisttps
mov
inc
mov
cs
jnp
data16
int3
jns
jp
dec
sub
mov
jno
dec
arpl
repnz
fmul
iret
fbld
fs
pop
leave
icebp
cmp
ret
ds
fstpt
mov
call
add
rcll
add
aam
stos
pop
aad
jecxz
cmp
xchg
rcr
xor
divl
aas
aas
or
aaa
jbe
mov
push
or
repz
fistl
mov
mov
dec
loop
fdivl
jmp
push
push
mov
and
es
xchg
ret
int
pop
mov
xchg
es
jmp
movsb
adc
insb
ds
sbb
lods
mov
sbbl
dec
jp
sbb
loope
sub
clc
test
dec
dec
test
or
inc
pop
jecxz
cmp
icebp
mov
outsb
dec
cmp
add
mov
cmc
sti
jae
add
ficompl
cs
mov
dec
pop
scas
push
pusha
push
mov
mov
cmp
mov
lock
mov
das
adc
lds
push
jo
dec
jns
inc
in
outsl
orb
and
xor
dec
in
push
dec
inc
out
or
mov
xor
xchg
cmp
xor
flds
scas
and
bound
mov
mov
push
decb
push
inc
test
div
mov
cwtl
sarl
test
fbstp
dec
out
imul
sahf
movb
sub
xchg
or
repz
movsb
enter
inc
pop
push
sub
push
shrb
lods
movsb
fldt
mov
mov
jae
xor
push
shll
out
sub
cmp
push
dec
mov
inc
imul
into
mov
addr16
loop
lret
mov
jnp
sub
fs
xchg
and
push
mov
call
xor
mov
jmp
push
jne
andl
lahf
cmc
shrb
push
popf
ja
mov
fldt
push
push
jns
push
shrb
xchg
mov
mov
push
mov
cmpsb
add
push
pusha
loopne
faddl
int
sahf
ss
mov
addr16
rolb
adc
subb
or
mov
push
shrb
or
fdivp
push
test
push
fs
jl
push
int3
fldenv
div
fisubl
data16
in
xor
jmp
inc
and
and
pop
xor
insl
mov
repnz
ret
xor
mov
sbb
lret
imul
icebp
hlt
daa
ret
adc
xchg
inc
jmp
outsl
add
adc
iret
pop
lret
xchg
xorb
dec
fwait
adc
xor
pop
lea
inc
sub
push
sub
loop
addr16
xor
xchg
sti
sub
enter
mov
cli
mov
sbb
mov
in
push
negb
push
pop
inc
mov
test
add
scas
stos
shll
jnp
mov
loope
pop
shlb
and
loope
push
add
dec
int3
xor
xor
xchg
jge
cmp
adc
sub
pushf
cmp
stos
jno
mov
pushf
mov
in
mov
mov
inc
lea
xor
cs
jl
movsl
stc
out
into
add
xlat
cmpsb
fldenv
ds
mov
daa
add
mov
and
stos
push
fmuls
mov
xor
pop
inc
cmpsl
sahf
scas
loopne
daa
loop
jle
add
pop
dec
sarb
lret
mov
shl
fcoml
mov
je
jne
dec
sbb
jb,pt
add
shll
add
test
or
pop
push
hlt
cmpsl
and
lock
mov
add
movsl
inc
dec
cltd
shrl
adc
mov
xor
add
jge
push
mov
leave
sub
rorl
pop
lea
data16
shlb
jp
jl
shlb
insl
insb
xor
outsl
pop
test
xchg
jbe
insl
dec
or
psubsb
sahf
cmpsb
jl
mov
test
mov
shrl
lea
mov
dec
fwait
lret
xchg
aad
test
jb
mov
negl
out
ret
pop
and
inc
inc
js
inc
out
sub
inc
push
outsb
xchg
movsl
fmull
ficomps
xchg
loop
bound
pop
and
cmpsb
fimuls
sub
popa
cwtl
call
push
push
lea
push
inc
pop
xor
clc
cs
pop
pop
subl
hlt
call
jns
sarb
shll
test
xchg
fldl
mov
stos
cmp
xchg
mov
fmulp
xchg
into
icebp
mov
outsb
mov
cmp
mov
cld
cmp
sbb
stos
scas
sub
cmp
or
fwait
mov
pop
and
push
pusha
insl
mov
push
jg
inc
dec
ds
outsl
dec
les
mov
lahf
je
xor
andb
out
repz
xor
cmpsl
lds
sub
adc
pop
aaa
movsb
add
arpl
inc
mov
in
cli
jmp
jg
jle
aas
daa
popf
imulb
movsl
xchg
imul
push
xchg
add
xchg
xlat
cmpsb
icebp
and
mov
daa
std
mov
es
mov
int
fcoml
in
lods
jb
xor
xor
add
popa
into
rcrb
pop
sbb
incb
cmp
dec
mov
dec
mov
xchg
shrb
add
testb
fisttps
out
xor
movsb
addb
add
movsb
js
mov
bound
iret
mov
inc
sub
cmp
sub
les
jb
pop
loopne
and
inc
clc
mov
popa
int3
inc
aad
push
ficoms
mov
jg
and
fidivs
xor
add
imul
sbb
hlt
stos
stos
sahf
mov
jbe
push
lret
daa
loopne
clc
pushf
ljmp
fiaddl
rorl
mov
ficomps
mov
mov
dec
shr
rorl
js
sub
adc
pop
sahf
adcl
cmc
sub
ss
mov
dec
gs
stc
insl
lret
push
pop
sbb
hlt
ss
repz
dec
pop
mov
jns
fstps
pop
fdivrl
int
xlat
or
into
rorl
hlt
leave
insb
mov
cmc
scas
mov
add
je
push
aas
jne
jg
or
xor
das
es
lret
in
jmp
adc
packssdw
insb
orb
mov
pop
adc
scas
pop
mov
xor
sbb
in
push
mov
mov
lds
mov
add
movsb
out
mov
cmpsl
ds
xor
in
xchg
adc
mov
or
lods
leave
pusha
lret
xchg
cs
mov
xchg
flds
notb
adc
cltd
fadd
sub
cli
fdivr
jmp
filds
pop
xchg
jmp
dec
jbe
int
push
and
jno
popf
enter
mov
popa
jbe
sbb
push
repnz
nop
push
inc
inc
addb
or
les
jmp
xlat
jns
inc
sub
xchg
xor
out
icebp
pop
js
push
inc
xchg
mov
or
mov
sbb
push
sub
adc
sbb
test
in
aam
push
ret
cmpsb
in
add
jns
test
cltd
aad
inc
cld
jns
mov
xchg
sub
daa
dec
or
dec
mov
and
lahf
loopne
cltd
cmp
mov
xchg
lods
mov
pop
mov
lret
pop
popa
push
sbb
imul
adc
dec
das
pop
pop
orl
clc
lods
dec
aad
pushf
stc
out
pop
enter
clc
orb
or
rcr
push
sahf
loop
pop
fwait
push
sub
xor
dec
fimuls
push
push
fs
ret
or
negl
aad
notb
leave
imulb
adc
std
and
fs
es
jp
xchg
mov
stos
pop
mov
lahf
cmpb
ror
daa
sub
pushl
rcr
xchg
fcompl
push
or
cmp
add
push
pop
sbb
add
adc
or
jnp
test
shlb
inc
clc
cmp
pop
shrl
shlb
and
sbb
pop
lock
mov
hlt
cwtl
xchg
ja,pt
leave
pop
sbb
testb
insl
xchg
stc
mov
mov
push
sub
insl
jp
sbb
test
cmpsb
jb
popf
out
and
pusha
cmp
push
mov
cmpl
pop
out
and
popa
test
jnp
hlt
in
add
inc
mov
out
lret
nop
insb
sbb
test
or
es
jno
out
lret
jmp
and
add
ret
lcall
rolb
add
jae
mov
and
sarl
aad
rcr
scas
lret
cmp
test
and
pop
lock
notb
mov
mov
inc
fdivrs
cltd
dec
add
add
push
ja
jecxz
jbe
fdiv
sbb
inc
fstpt
mov
push
out
ret
mov
mov
inc
xchg
push
adc
push
daa
pop
sbb
push
jb
pop
jg,pn
cmpsb
hlt
dec
jb
icebp
and
fisubrl
shlb
cmpsl
mov
jmp
push
add
addr16
dec
lret
sbbb
add
lock
bound
mov
subl
mov
pop
cld
inc
lds
pop
sarb
in
mov
and
inc
push
leave
pop
and
xchg
cmpsb
into
jnp
push
xchg
cli
mov
adc
fmull
xor
add
js
or
adc
jne
call
fwait
idivb
sbb
mov
add
mov
and
aaa
mov
cmp
fnsave
ficomps
pop
xor
leave
fs
pusha
jne
mov
es
fisubrl
dec
adc
sahf
lds
fcomip
xchg
inc
int
aaa
mov
outsl
lahf
lret
fistpll
jp
imul
sub
cmp
out
sub
scas
add
mov
and
imul
mov
mov
int3
pusha
fwait
pop
xchg
into
fsubrp
push
push
jbe
adc
pop
pushf
les
sub
gs
sbb
hlt
sbb
xor
sub
imul
or
iret
push
mov
mov
and
ss
push
dec
xchg
dec
adc
cmp
fnstcw
mov
nop
xchg
cld
js
mov
cmp
sbb
jmp
in
push
int
inc
xchg
shll
out
jae
cmp
or
or
xchg
xor
cltd
pop
sbb
push
adc
xchg
das
leave
cmp
pop
dec
cld
xor
fdivl
test
push
mov
adc
movsb
jecxz
enter
js
sahf
and
jl
mov
fcmovnu
cmp
pop
fldl
mov
inc
lahf
mov
into
push
lods
or
les
cld
lods
push
enter
aad
test
xlat
xor
adc
ljmp
in
sbb
xor
add
leave
in
in
in
pop
addr16
aad
xor
jg
daa
and
aas
pop
mov
push
ret
pop
sbb
push
add
cmp
and
xchg
je
jae
lock
push
cli
iret
jnp
push
nop
movsl
in
in
sub
into
inc
cmpsl
add
into
ljmp
adc
xchg
inc
cmpsb
xchg
lods
fistl
fwait
adc
xor
subl
das
push
adc
loopne
mov
pop
daa
xorb
cwtl
insl
shll
insb
iret
mov
mov
pop
scas
sub
pushf
mov
int
adc
ja
mov
xor
fmuls
pop
stos
sub
in
pop
movsl
ror
inc
pop
out
push
and
ja
fnstsw
push
hlt
and
jno
and
mov
xchg
add
inc
or
add
mov
sub
aaa
in
je
jmp
nop
icebp
enter
add
mov
xchg
jge
stc
enter
mov
xchg
sbb
aaa
jae
and
scas
inc
cmp
and
push
dec
mov
adc
jg
mov
ret
jns
lock
std
adc
mov
shrb
imulb
mov
cmp
sbb
cmpsl
imul
add
loopne
loopne
outsw
lcall
push
test
jecxz
fiadds
add
adc
test
or
sub
in
cltd
imul
mov
push
and
mov
push
pop
xlat
xor
mov
mov
adc
gs
cli
nop
int
es
aam
cltd
cltd
aaa
add
es
xchg
mov
bound
cmp
and
in
addb
sar
or
pop
rcrl
repnz
mov
mov
push
sub
call
cli
push
xor
cmp
sub
or
mov
dec
fcmovnbe
pop
ret
xchg
jno
test
cmpsb
outsb
pop
push
inc
cmp
in
and
je
xorb
cmp
sbb
push
je
push
dec
dec
and
iret
lret
sahf
dec
out
push
nop
mov
sub
out
div
or
lret
cmp
sub
call
mov
imul
cmp
dec
xor
jo
xchg
test
test
inc
in
xchg
xchg
insl
and
dec
popa
inc
popf
inc
mov
sub
fsubrs
aas
hlt
std
cmpsl
cmpsb
cld
pushf
std
jp
jne
adc
fucom
and
inc
orl
or
push
test
xchg
inc
dec
jecxz
ds
mov
mov
rorb
adc
cli
inc
shrb
ret
fildll
test
add
xchg
loope
pop
add
outsl
cli
mov
jle
add
stc
mov
mov
fnstenv
dec
cltd
fisubl
fwait
jmp
fstpl
leave
jg
ja
mov
ret
mov
adc
stc
sbb
orb
std
mov
dec
test
push
jecxz
shlb
dec
add
sbb
pop
loopne
cmp
push
inc
shrl
shrb
adc
dec
mov
and
jl
mov
xchg
cld
ds
adc
aad
cmp
pusha
sti
out
incl
stos
stc
xchg
movsl
and
pushf
icebp
repz
add
lret
les
call
add
push
or
push
in
sbb
adcl
sbb
test
mov
ss
js
xor
outsb
inc
inc
jle
xor
and
repnz
mov
in
insl
inc
in
mov
int3
push
xchg
mov
out
xchg
push
in
out
mov
sahf
xor
das
cltd
js,pn
or
jae
insb
add
xchg
sub
out
xor
mov
mov
sub
adc
faddl
adc
popf
aad
jmp
or
add
or
push
fldt
aaa
xchg
fdivp
loopne
sahf
xchg
ds
mov
push
insb
out
out
scas
adc
pop
push
xor
fwait
dec
or
mov
enter
xchg
xchg
loop
stos
cmp
aas
inc
out
es
std
sub
stos
sbb
movhps
mov
int3
sub
jbe
add
lret
pop
pop
int
outsl
mov
push
add
push
add
add
pop
loopne
jne
mov
shll
mov
adc
mov
negl
jbe
jbe
mov
xor
arpl
fdivrs
xlat
mov
mov
out
clc
adc
add
sub
cld
gs
mov
fcompl
push
les
mov
push
jecxz
enter
jo
and
mov
mov
lret
cmc
aaa
jns
dec
fcompl
xchg
push
add
jmp
mov
inc
stc
pop
cli
imul
jb
pop
push
pushf
xor
dec
fsave
sub
aaa
fadds
cmp
mov
mov
mov
sbb
add
mov
inc
mov
cmp
or
pop
cs
xor
xchg
data16
xchg
inc
jbe
mov
ljmp
push
int
pusha
mov
and
arpl
or
scas
loopne
and
pop
test
call
sbb
xchg
jg
cmp
popf
inc
lock
out
ss
rol
arpl
in
jle
aam
jne
fdivrs
out
mov
push
jns
stc
push
pushl
inc
lcall
testl
pop
adc
fs
and
js
pop
push
lods
xchg
out
pop
addb
adc
pusha
js
push
test
push
cmpsl
dec
sub
push
xor
out
adc
dec
dec
add
mov
pop
mov
hlt
arpl
fwait
xchg
dec
push
or
loop
fiadds
adc
mov
outsl
inc
sbb
lock
sbb
mov
ss
lds
adc
fdivrl
jns
adc
add
push
dec
sahf
loopne
cmpsb
jecxz
push
mov
cmp
jmp
mov
std
jo
pop
pop
xor
inc
and
out
repz
shlb
sub
jb
add
xchg
sbb
aam
fcmovbe
adc
stc
lret
or
pop
jne
imul
mov
push
lods
push
or
out
and
sub
mov
inc
nop
push
and
ds
ja
push
fcmovu
fisubrl
and
inc
sub
push
inc
leave
xor
dec
jg
inc
jmp
addr16
xchg
es
pop
arpl
and
sahf
addb
push
inc
test
insl
adc
xor
hlt
addb
dec
enter
popa
jnp
pop
push
mov
pusha
pusha
pop
jo
and
xchg
push
out
ffree
jbe
mov
lret
cmp
in
mov
andl
les
xchg
sbb
cmp
imul
rcr
dec
or
inc
jmp
xor
cmc
imul
movsb
cmpsb
lea
xor
xor
sbb
lods
incb
ss
addr16
imul
arpl
inc
jg
clc
data16
xchg
inc
sub
std
pop
push
mov
xchg
push
push
dec
mov
push
or
jne
je
jecxz
ror
mov
jb
sbb
xor
push
outsl
rorb
test
out
lret
mov
mov
xchg
mov
pop
das
dec
hlt
mov
mov
iret
fwait
cmpsb
cmp
jp
dec
cmp
pop
cmp
add
hlt
ljmp
test
in
nop
outsl
push
aam
jno
push
dec
add
cmp
pop
pop
mov
repz
aam
dec
psubusb
cltd
xchg
mov
sub
and
ficomps
stos
push
imul
outsl
test
test
jecxz
mov
fldcw
or
imul
loope
sahf
rcrl
jmp
scas
outsb
clc
mov
test
loopne
outsb
in
in
out
inc
push
test
out
ret
les
stos
loopne
cwtl
inc
sub
and
push
aaa
mov
cmp
mov
push
dec
xchg
nop
adc
jp
pusha
mov
outsb
inc
jnp
es
mov
out
sub
sti
stos
xchg
ficomps
mov
mov
xchg
cwtl
mov
mov
lods
or
sub
lea
pop
sbb
xor
jl
fsts
sbb
push
movsb
xchg
fwait
mov
xchg
xchg
pop
lcall
and
adc
fdecstp
xor
js
push
xchg
adc
hlt
jno
test
or
dec
jp
add
enter
lods
es
xchg
add
movsl
mov
mov
sub
out
push
fildl
cwtl
loope
inc
mov
lret
add
cs
mov
dec
fwait
or
pop
mov
sbb
insb
jle
outsl
aas
lret
dec
pusha
mov
jb
repnz
stos
pop
mov
mov
hlt
push
aas
std
dec
arpl
xlat
pop
push
iret
or
test
jl
cmc
inc
push
bound
cmp
out
mov
leave
cmpb
movsb
repnz
stos
pop
lods
arpl
lcall
aaa
jg
inc
data16
jns
mov
xor
add
mov
mov
push
repz
int3
out
xchg
mov
aaa
pop
mov
xchg
push
or
xchg
movsb
pop
iret
xor
mov
jg
adc
add
xor
rclb
sbb
mov
outsb
xchg
xchg
ja
add
jecxz
pusha
les
clc
jne
sub
xchg
sub
sub
aas
push
cmc
push
iret
arpl
mov
sbb
scas
movsl
lahf
hlt
sub
push
cmc
and
jnp
pop
pop
mov
sbb
mov
stos
xor
pop
mov
or
outsb
dec
inc
in
or
pop
xchg
xchg
or
and
pop
loopne
pushf
inc
inc
sbb
adc
mov
scas
aad
mov
pop
les
rcrl
jne
jb
cmp
in
repz
aas
pop
cmc
pop
jmp
add
xchg
xlat
in
pusha
in
pop
jne
adc
insl
jmp
or
jecxz
push
je
in
xor
into
mov
mov
dec
mov
pop
mov
jg
xchg
push
clc
enter
pushf
inc
pop
lcall
nop
arpl
lds
imul
push
xchg
out
outsl
stos
leave
psllq
enter
cmp
jecxz
cmp
pop
adc
pop
popf
push
mov
push
in
pop
pop
das
out
iret
cmp
xchg
leave
mul
mov
adc
cmp
stos
xor
mov
xlat
inc
dec
dec
push
sub
test
imul
and
mov
popa
nop
inc
cmc
popa
or
add
add
push
mov
sub
xor
push
loope
js
movsb
cmc
or
in
adc
cmpsb
out
sbb
stos
pop
mov
lds
or
mov
dec
adc
lret
lods
out
test
or
aaa
dec
jecxz
inc
pop
cmpsl
pushf
jno
mov
pop
or
popa
add
sub
mov
push
and
sbb
jg
aam
jnp
mov
cs
xchg
pop
inc
sti
sahf
js
loope
mov
xchg
sbb
addl
imul
dec
data16
xor
jnp
sub
in
in
fs
iret
sbb
mov
add
xor
lret
int
in
rorb
xchg
push
js
ret
or
pop
call
jecxz
fimull
loop
ds
or
scas
and
pop
rorb
lds
push
cltd
inc
insb
test
lods
inc
es
add
cmp
push
loope
inc
jbe
outsl
push
or
mov
enter
rcrb
mov
adc
and
or
js
sahf
ja
test
cmc
stc
aaa
inc
jns
pushw
or
pop
data16
and
xchg
iret
lcall
xchg
xchg
push
and
mov
sub
jge
fdivr
insl
aad
mov
mov
pop
add
loope
mov
pushf
cltd
aaa
sti
adc
jl
jmp
dec
inc
add
xor
mov
movsb
sbb
mov
scas
pop
cmpsb
push
cwtl
scas
and
add
inc
iret
sbb
cmp
mov
sbb
sbb
popa
jbe
sbb
jp
adc
and
rcrl
fistl
push
jo
sub
popa
or
les
dec
xor
jae
out
xorl
out
popa
sahf
addr16
and
inc
sub
fadd
sti
adc
jge
add
xor
or
mov
js
push
mov
add
jmp
je
jl
push
xchg
mov
dec
in
ficompl
jmp
stc
into
cmpb
fimuls
pop
ret
cmc
cli
aas
enter
jnp
xor
imull
xchg
and
cli
mov
xor
push
nop
xor
xor
or
cmpsb
mov
xchg
adc
out
mov
sbb
dec
and
orb
mov
lahf
mov
cmp
sbbb
das
push
sbb
rcrb
or
fucomip
sub
and
test
stos
mov
es
sbb
mov
inc
pop
push
inc
add
add
ja
sub
add
andb
and
xchg
or
jle
adc
push
loopne
lret
and
xor
sub
in
pop
std
dec
jb
leave
push
xlat
fisubl
mov
insl
jecxz
push
shrl
cltd
hlt
or
shrl
push
sub
inc
dec
dec
into
out
cmc
je
dec
xchg
jg
add
dec
pop
test
cmpsl
pop
jnp
jno
inc
cli
mov
mov
stc
and
notl
hlt
sub
cmpsb
inc
mov
add
aas
ds
scas
test
push
iret
aaa
mov
mov
or
bswap
push
gs
pushl
leave
fsubrl
enter
mov
or
orb
cmpsb
stc
xor
dec
jae
sub
andb
xchg
outsb
andl
mov
xor
sbbl
dec
lahf
dec
cmc
jne
push
jns
in
notl
xchg
rcrl
mov
loope
pop
lods
imul
orb
xchg
mov
stc
xchg
mov
popa
mov
pop
adc
and
sbb
mov
mov
adc
std
adc
pop
cmp
fsubrp
stos
push
test
pop
xor
mov
xchg
and
stc
jle
inc
js
test
rcl
dec
hlt
xchg
out
dec
test
or
adc
iret
add
cmpsb
cmp
in
cmp
inc
pop
fnsave
mov
mov
es
xor
sub
pop
mov
enter
jae
popf
mov
jge
push
stos
test
in
sbb
push
push
pop
dec
add
push
mov
hlt
lahf
pop
loop
cli
pop
mov
repnz
insl
lods
dec
adc
test
cwtl
fwait
test
pop
and
fnstcw
aad
dec
call
les
sbbl
rep
xchg
cmpsl
sbb
inc
jg
movsl
leave
scas
or
jbe
or
inc
mov
out
cwtl
nopl
pop
mov
inc
lret
mov
xor
jb
mov
loopne
popa
jae
dec
xchg
mov
pusha
mov
rcl
inc
xchg
jnp
jno
pop
xchg
sbb
cltd
adc
xchg
rcr
lret
jb
repz
divl
aad
inc
xlat
test
leave
or
xchg
mov
or
sbb
xor
mov
stos
data16
or
cmpsb
add
mov
push
push
adc
sub
pop
pop
jns
sti
repz
movsl
aad
mov
xor
pop
cltd
adc
std
xlat
xor
inc
repz
sub
adc
mov
cmp
negl
mov
jp
dec
mov
mov
inc
sti
jbe
jg
pop
dec
pop
pop
stos
mov
pop
stos
inc
and
mov
lods
sbb
sub
sub
and
xchg
xchg
mov
jl
push
or
stos
inc
les
adcl
adc
popa
mov
and
xor
movsl
adc
enter
into
xorl
push
sub
ja
es
or
mov
jp
mov
mov
xchg
mov
adc
sbb
jmp
adcl
xchg
xor
in
shrl
mov
push
fsubrl
repnz
test
push
int
in
in
and
push
stos
mov
sar
jl
xchg
pop
cmpsl
jne
xchg
jl
in
adc
push
xchg
dec
pop
jp
lahf
sarb
test
mov
push
mov
mov
inc
ds
dec
mov
sub
adc
lea
fldpi
jl
mov
test
pop
adc
xor
stos
in
mov
push
or
leave
repnz
mov
fistps
test
mov
push
mov
or
mov
pop
mov
loopne
and
cld
xor
jae
movl
mov
mov
gs
push
sbb
lods
test
jnp
fistpl
cmpsl
mov
scas
sahf
pushl
shll
iret
movsb
divl
jmp
sbbl
mov
push
popf
lea
add
in
cmp
sbb
mov
adc
imul
aam
insb
rol
xor
test
push
lea
sar
bndstx
decl
mov
insl
mov
jg
xchg
adc
popa
imul
xchg
jnp
push
in
jp
xor
inc
xorb
scas
jb
jmp
jge
aas
fisubl
cmpsb
dec
pop
call
jbe
mov
mov
push
leave
in
cld
rclb
outsl
mov
or
jl
adc
dec
out
add
pop
cmp
loop
je
leave
loope
in
std
pop
xchg
fsubrl
xchg
and
into
das
pop
push
cltd
test
jno
pop
fwait
mov
jo
push
lds
cwtl
int
cwtl
faddl
xor
inc
xor
mov
pop
adc
into
add
pop
repz
pop
fisttpl
push
shrb
xchg
dec
xchg
mov
fistpl
xor
ja
sbb
or
xor
add
loopne
or
mov
int
and
lret
pop
movsb
testb
adc
mov
xor
stos
ja
and
nop
push
dec
adc
sbb
adc
ljmp
push
insb
xorl
or
mov
dec
out
test
leave
scas
jnp
fsts
sub
xor
mov
xchg
stc
mov
pusha
pop
leave
push
xchg
jl
sarl
push
inc
pop
fs
repz
mov
iret
lods
mov
inc
sub
shll
sbb
daa
insb
les
pop
sti
fld
pop
adc
push
adc
mov
jbe,pt
pop
adc
addr16
dec
cmp
or
add
pop
ret
and
jle
mov
stos
cmp
push
adc
rorb
xor
mov
push
mov
iret
repz
ret
pushf
addr16
lret
cmpsb
sub
inc
scas
xchg
jle
push
add
dec
std
pusha
shlb
jnp
out
jno
cmp
imul
mov
in
rcll
sahf
sahf
add
sub
sub
movsl
cmpsb
enter
adc
jmp
pop
inc
pop
sub
ds
fiaddl
loop
mov
cltd
and
adc
stc
imul
sub
in
push
rorl
test
orps
std
mov
mov
xlat
rol
mov
rcr
sub
mov
dec
xor
jl
xor
in
lret
fwait
jbe
insl
mov
xchg
mov
sbb
cmp
and
sub
js
sub
adc
and
cld
insl
pushf
fcomp
xchg
rcrb
lcall
imul
ret
lahf
dec
or
adcl
arpl
sahf
cmp
add
or
fisubrs
inc
in
ret
or
xchg
inc
adc
sub
mov
sti
stc
icebp
lret
out
cmp
lds
jns
pop
mov
push
adc
jle
and
imul
hlt
dec
test
setbe
mov
ljmp
mulb
stc
aas
jge
sbb
das
pop
jg
lds
jg
xor
lcall
sub
sbb
add
inc
je
sbb
in
pop
jnp
pop
jae
out
sub
imul
mov
add
idivb
in
mov
push
in
jne
adc
mov
dec
push
daa
mov
mov
cs
out
pop
xor
dec
pop
mov
mov
enter
mov
cmc
mov
xor
daa
pop
scas
mov
cmpsb
push
mov
and
jbe
mov
outsb
and
sbb
xchg
lods
pop
xchg
movsb
inc
daa
add
idivb
movsl
dec
push
mov
dec
xchg
add
fwait
test
ret
adc
mov
xchg
cmp
dec
sub
mov
shll
dec
stos
mov
jo
jge
xor
in
jg
pop
enter
jns
pop
std
mov
pop
sub
stos
adc
fisubl
xor
and
push
in
inc
cld
fists
xor
call
lock
rol
sub
fimuls
or
cltd
inc
shrl
jle
dec
ficomps
cmpsb
or
arpl
push
mov
jno
sbb
imul
cmc
xlat
sub
xchg
pop
into
dec
leave
cltd
out
mov
push
jae
std
jnp
mov
jno
cmp
jno
jl
sarb
jne
jbe
push
lahf
dec
jl
sub
pop
rcr
jp
rcr
popf
dec
fldt
es
mov
dec
addr16
mov
jl
mov
inc
jb
test
mov
insl
aas
xchg
and
lcall
lret
adc
ret
sub
and
test
out
insl
dec
fadds
out
out
stos
mov
iret
lods
add
push
insb
push
mov
push
pop
jecxz
ud0
mov
out
pop
cmpsl
sub
cmp
sub
sbb
add
leave
cmp
sub
or
jg
loopne
add
jnp
and
mov
cmpsl
punpckhdq
out
fisubrl
push
cmp
inc
sbb
movsb
into
ret
cld
mov
sub
mov
add
xchg
das
fidivrs
jbe
imul
sbb
bound
inc
push
dec
xor
adc
push
test
lea
iret
leave
xor
jo
inc
scas
mov
ja
jno
test
xor
xchg
leave
testl
je
jns
rdpmc
inc
movsl
push
aam
cmp
dec
mov
inc
or
stc
sarb
addb
orl
xchg
daa
pop
ja
lret
fldenv
outsl
push
cmpsb
dec
adcl
in
mov
repnz
inc
jmp
sub
imul
pop
es
test
orl
lcall
xor
adcl
ucomiss
dec
sub
mov
pop
dec
rolb
add
adc
popa
mov
inc
hlt
scas
stos
pop
test
pop
jae
xchg
lret
cmp
mov
cld
jecxz
bts
xchg
lock
aaa
aas
jne
push
lock
jnp
fidivl
push
je
xor
lods
mov
mov
jmp
push
cmp
and
push
push
or
sahf
mov
xor
mov
lods
sahf
stos
xchg
rorl
loop
shlb
and
push
and
or
dec
xor
jmp
jnp
mov
je
or
in
jge
pop
push
fsubrl
jno
mov
idivb
sub
ss
mov
pop
dec
push
imul
sub
adc
ret
rcr
cwtl
pushf
subl
xor
or
nop
pop
inc
cs
filds
push
push
imull
xchg
aad
jno
repz
xchg
daa
clc
stos
xchg
es
push
stc
stos
popa
fstpl
jno
in
push
andb
and
rcrl
and
add
icebp
inc
sbb
jne
pushf
int3
jmp
xchg
mov
mov
scas
cltd
add
pusha
fwait
int3
pop
data16
lock
ss
mov
xor
sahf
push
pop
mov
dec
add
sarl
pop
pop
jge
data16
push
loope
mov
cmpl
sahf
sbb
pop
mov
jge
and
test
pop
fidivl
ja
lock
xchg
xorb
xor
mov
js
xchg
mov
fwait
sbb
fsubr
sub
adc
mov
cmp
pop
mov
daa
sbb
mov
xchg
add
xchg
cmp
push
aam
push
jns
mov
movaps
sub
lods
leave
fdivs
cltd
add
out
jge
test
lahf
add
push
int3
cmpsb
and
cld
push
and
add
shr
ja
stos
mov
nop
popa
inc
inc
ficompl
mov
add
and
mov
sbb
mov
lret
inc
cmp
inc
pop
loopne
fcomp
lea
xor
in
xorb
nop
and
push
leave
loop
dec
add
test
jae
cltd
ljmp
push
pop
adc
leave
xchg
int3
fwait
xlat
es
or
lahf
inc
mov
mov
int
inc
push
shlb
sti
std
sub
fimull
and
icebp
js
add
and
sub
aaa
push
imul
sbb
xor
out
dec
pop
fs
mov
jb
rol
cmp
sbb
jge
test
adc
stos
les
rorb
fsubrs
dec
mov
imul
sub
adc
loopne
fnstenv
jecxz
ret
pop
out
sarl
loop
roll
cmpsl
aad
push
repz
mov
lea
test
mov
inc
jb
sahf
cmc
ljmp
stos
mov
inc
dec
mov
xor
rclb
jo
cli
aaa
cmp
add
inc
dec
sub
pusha
xor
pop
aaa
cltd
sbb
test
mov
sar
lock
cli
rorb
sub
pop
out
dec
sahf
cs
mov
das
test
dec
or
or
sbb
or
ret
and
call
add
pop
in
add
xchg
cmp
xchg
jno
lahf
xchg
sub
test
inc
inc
shlb
xor
push
test
out
lock
cmp
lods
pop
cld
jno
sbb
jp,pn
mov
jbe
test
addb
outsb
pop
push
mov
mov
push
orl
mov
roll
aam
inc
ljmp
sarl
int
rclb
es
cmc
add
addl
jp
jb
movsl
aas
into
cs
xor
mov
push
jae
cmc
xchg
out
and
xchg
xchg
xor
lods
ds
pop
xor
pop
xor
in
cmp
ljmp
stos
addb
mov
jne
sub
lret
rorl
mov
sbb
mov
mov
mov
xor
sub
pop
es
lods
fisttps
out
push
cmp
xor
and
sub
out
add
data16
add
mov
cmpsl
mov
shlb
xor
ror
xchg
inc
mov
dec
jae
cmp
inc
inc
mov
jae
cmpsl
in
orb
fdivrs
adc
scas
outsb
popf
lods
mov
or
push
dec
imul
es
dec
push
movsb
add
dec
push
out
inc
popf
fdivrl
out
cmp
mov
add
sub
scas
sti
inc
pop
leave
outsb
movsl
out
adc
aam
dec
loope
mov
adc
inc
dec
dec
push
mov
aam
or
push
fucomi
pop
hlt
fwait
cwtl
mov
push
cmp
cmc
xchg
and
cmp
scas
dec
mov
add
cmp
ljmp
xchg
insl
mov
iret
movsl
sub
test
push
xchg
in
outsl
or
lock
push
jnp
mov
nop
aam
xorl
ficoml
and
sbb
mov
mov
adc
inc
pushf
add
xor
cmpsb
push
int
xchg
daa
adc
enter
inc
dec
jae
sub
sbb
mov
popf
and
mov
pop
je
adc
mov
jo
pop
sub
in
inc
xchg
fildll
out
mov
adcb
in
iret
iret
sub
add
and
cmp
xor
adc
hlt
jge
rcrb
fbld
into
mov
adc
push
popa
data16
push
call
in
mov
xor
xchg
mov
adc
cmp
sbb
fldenv
inc
jle
in
stos
out
cmp
mov
imull
dec
xchg
addr16
sbb
js
imul
negl
lret
outsb
out
testb
pop
push
jns
push
insl
mov
lcall
test
and
popf
xchg
adc
in
repz
push
jnp
movsb
daa
dec
push
subb
sub
jl
sub
cwtl
pop
shrb
adcb
flds
inc
cmc
jle
js
mov
sarb
dec
nop
int3
loope
aam
insb
mov
out
and
fdivr
test
or
addb
sbb
jbe
fxch
pop
xlat
jae
movsb
movsb
imul
xchg
cmc
sar
xchg
cmp
fsubs
dec
mov
sub
ds
mov
mov
pop
pushf
sub
adc
imull
jp
xchg
and
push
and
push
cmp
push
xchg
mov
mov
sbb
or
jge
shl
ret
mov
movsb
sub
xor
data16
andb
and
mov
xor
ds
addr16
push
mov
xor
dec
xchg
pop
xchg
outsl
jmp
gs
and
imulb
jecxz
xchg
sahf
jbe
push
xchg
jbe
les
cltd
decb
xchg
inc
xchg
pop
xchg
popa
cmp
mov
repz
xchg
loop
mov
jmp
clc
adc
mov
xchg
mov
push
fistpl
ja
lea
and
and
mov
out
insb
cmp
xchg
mov
cmpsl
add
xchg
aad
mov
or
and
loop
out
add
push
xchg
test
adc
imul
je
aad
das
dec
ror
pop
jmp
daa
lret
sbb
and
mov
test
inc
xlat
sbb
xchg
and
or
aas
add
or
xchg
cmp
ja
mov
sbb
dec
movsb
or
stos
mov
xlat
out
inc
aas
insb
jns
mov
aam
inc
xchg
pop
mov
hlt
lea
ret
mov
hlt
xchg
cltd
sbb
call
mov
xchg
jmp
mov
jo,pt
fld
jl,pn
lahf
push
js
pop
xor
push
ss
fbld
mov
scas
ds
aad
sbbb
out
or
adc
clc
or
cmp
push
arpl
icebp
data16
or
or
push
sar
xor
fnstcw
adc
mov
rcll
faddp
stos
mov
ja
out
testb
cs
or
sub
in
inc
adc
pop
sub
sub
jo
push
cmp
nop
pushf
sub
jge
sar
inc
cmp
fildl
loopne
ds
cmp
xchg
mov
lea
inc
adc
sub
in
jne
subl
leave
arpl
shrb
sahf
adc
xchg
sub
mov
mov
xor
in
xor
ja
clc
mov
scas
add
cs
mov
or
cmc
ret
lock
je
pop
shll
ss
insl
mov
pop
mov
aaa
inc
cmpsl
xor
inc
xor
or
cmpsb
subl
je
test
sti
mov
ret
testb
jno
xchg
out
xchg
mov
mov
fimull
mov
lahf
mov
xchg
pushf
sub
fimull
jmp
mov
test
addr16
cmc
clc
ret
jl
or
inc
mov
jbe
mov
sbb
int
cmp
and
imul
add
out
mov
xor
nop
divb
ss
icebp
mov
push
sbbb
fsubs
movsb
fistpll
jb
pop
inc
hlt
outsb
shlb
rorl
xor
incl
or
jle
push
cmp
mov
inc
les
mov
xor
sbb
push
out
aam
hlt
int
sbb
xor
pop
in
mov
icebp
push
jl
int3
sub
push
hlt
out
xlat
fnstenv
xchg
and
mov
mov
loopne
lret
or
in
and
dec
clc
out
inc
lahf
pusha
mov
jo
sbb
push
sbb
sub
push
pop
cmpsb
lock
dec
dec
inc
adc
cmp
jp,pn
adc
pop
bnd
fisttpll
fwait
in
push
repz
cmp
loope
fsts
and
pop
pop
jl
inc
jne
es
xor
cmp
mov
sbb
jle
xor
sti
mov
push
push
in
nop
int3
adc
mov
ret
test
jno
cmp
add
sarl
pop
add
jae
aam
pop
and
ss
push
movsl
leavew
fisubrs
push
fsubrl
add
cmpl
adc
xchg
dec
popa
call
push
std
jns
mov
mov
int
repz
pushf
push
xchg
loope
shr
sub
jo
add
cmp
fadds
jmp
nop
push
push
jb
mov
cmp
push
js
sbb
daa
cli
sub
nop
cmc
ja
xorl
in
ret
xor
je
or
test
insb
sbb
cmc
rcrl
adc
adc
push
mov
enter
insl
mov
push
jmp
lea
pop
and
sbb
or
and
cmpsb
stos
pop
orb
jb
adc
xchg
mov
mov
shll
test
jnp
adc
shlb
cwtl
stc
sub
xchg
add
mov
out
xchg
mov
jmp
test
imul
sbb
outsb
int3
sbb
out
push
out
add
dec
cltd
xor
or
push
xor
and
cmc
inc
aam
pop
repnz
test
jb
jp
lds
imul
push
outsl
arpl
sbb
pop
je
icebp
cli
xchg
outsb
rcll
sub
sarb
adc
jnp
mov
rol
inc
stc
shlb
cmp
shrb
in
sub
in
imul
sbbl
jp
mov
leave
sub
xor
test
daa
sub
or
sbb
mov
fxch
inc
ficoml
bndstx
push
mov
jge
inc
or
aam
push
inc
insl
sbb
add
inc
aas
and
jp
lcall
sbb
pop
sbb
in
dec
xor
push
adc
ljmp
mov
daa
adc
inc
testb
xchg
movsl
cmpsb
jl
insl
test
inc
xor
add
js
in
adc
dec
adc
sbb
add
cli
cmc
aaa
sbb
mov
cltd
dec
cld
or
xchg
sbb
sub
xchg
sahf
roll
pop
cwtl
adc
cmp
dec
imul
js
push
xchg
clc
inc
negb
or
bound
push
sbb
pop
into
dec
and
jo
pop
sbb
add
adc
push
loopne
xchg
xchg
popa
in
push
push
and
icebp
add
ret
stos
sub
add
pop
jp
or
xchg
les
jmp
jp
roll
dec
arpl
aaa
push
mov
in
jbe
ss
out
popl
cmc
inc
imul
adc
xchg
push
sub
push
nop
and
das
pusha
cmp
mov
and
adc
ss
mov
lea
mov
scas
in
mov
cmpsb
or
adc
bound
loope
vmwrite
insb
jo
outsl
mov
jne
inc
fcomip
xor
lcall
adc
rclb
and
add
xchg
dec
pop
gs
pop
lock
out
ret
mov
mov
lret
mov
cmp
adc
hlt
add
and
stos
cmp
jo
lock
in
ja
lock
dec
and
loopne
mov
wrmsr
in
jle
dec
fs
xor
cmpsb
jl
sahf
in
xor
cmp
or
pop
ljmp
insl
cmp
adc
sub
aad
jle
jmp
jle
bound
dec
add
test
daa
cltd
add
gs
rolb
and
rorb
addr16
mov
popa
insb
aam
call
mov
push
xchg
sbb
outsb
sub
data16
hlt
xchg
daa
loope
and
and
pop
sub
outsb
out
push
out
mov
fiaddl
cbtw
mov
push
push
lock
mov
bound
dec
adc
call
mov
int
ret
enter
cli
jbe
cli
je
or
out
jns
das
icebp
cmp
jl
ljmp
movsl
pop
sub
lcall
jns
pop
xchg
mov
cltd
mov
icebp
sub
es
divb
sti
rorb
lret
jne
xor
or
fbld
test
sbb
cld
jp
and
lods
sbb
loop
dec
add
call
push
jnp
mov
std
mov
inc
stc
dec
sbb
pop
fildl
loop
ds
cmp
adc
jb
dec
jp
in
cmp
mov
insb
inc
nop
dec
imul
or
sbb
inc
mov
es
and
cmp
pop
jae
arpl
mov
out
lea
cmp
mov
imul
out
push
add
inc
aaa
xor
leave
ljmp
jmp
add
dec
in
insb
push
jno
pop
aad
sbb
roll
out
imul
xlat
jne
cmp
cmp
mov
fistpll
mov
jge
adc
test
into
mov
je
or
inc
in
data16
pop
in
push
movsb
in
clc
in
popf
aas
jg
sbb
popf
jbe
jne
popf
jmp
sub
jmp
xor
fistps
mov
inc
loopne
lds
arpl
popl
jle
lods
mov
sub
xchg
mov
leave
loopne
stos
mov
sub
mov
roll
mov
jge
add
and
inc
push
pop
insl
orl
cltd
mov
mov
ja
dec
mov
nop
mov
jp
scas
or
test
lcall
mov
outsl
ds
ljmp
jecxz
adc
mov
inc
dec
inc
mov
push
outsl
cmc
jle
add
fisubrs
fsubrl
mov
add
int
push
sti
int
sti
es
xchg
or
inc
loopne
mov
mov
push
out
xor
in
mov
mov
repnz
push
ret
add
repnz
sub
repnz
loop
xchg
gs
push
lret
rorb
cmp
xor
pushf
xchg
jp
les
mov
repz
or
fisttpl
jle
push
add
test
subb
sbb
in
or
cmc
loopne
add
dec
xchg
arpl
jbe
or
outsl
pushf
ljmp
or
scas
je
mov
int3
insl
dec
fs
jge
mov
jbe
jmp
sub
add
test
adc
push
ljmp
or
stos
fcmovbe
push
sbb
adc
inc
sti
ja
lcall
and
shll
pop
or
rcl
cmp
call
leave
jnp
int
dec
mov
mov
lods
adc
imul
jb
data16
push
cmpb
push
push
imul
xchg
jge
inc
push
mov
aas
into
insb
stos
stos
popf
sbb
aad
mov
lods
jb
push
jg
mov
mov
inc
movsb
sub
es
arpl
xor
pop
shrl
aad
subl
cmp
cmp
in
in
sub
mov
cmp
out
pop
inc
mov
sbb
mov
xorl
test
lods
pop
cwtl
cmp
pop
rcl
lret
popl
jge
push
sbb
pop
xchg
xor
or
out
push
xchg
adc
out
mov
lret
inc
mov
and
cmpsl
dec
stc
and
scas
mov
test
jbe
mov
imul
ljmp
orb
mov
pop
sbb
and
outsl
or
pop
pop
addl
imulb
mov
outsl
ds
cltd
pop
mov
mov
cmc
mov
aam
imul
dec
xor
mov
test
adc
add
rolb
stc
mov
pushf
scas
or
dec
or
xor
fwait
es
popa
and
push
shld
cmp
sbb
adc
dec
stos
std
sbb
or
mov
jo
mov
out
mov
clc
and
ret
mov
inc
faddl
or
push
cmp
inc
mov
subl
cmp
cmp
cld
nop
test
jmp
or
cmpsl
jne
sarl
pop
pop
pop
sbb
sbb
cli
mov
fistl
cmp
scas
pop
out
pop
mov
ds
jmp
pop
lods
movsl
adc
cli
loopne
pusha
test
xchg
loopne
pop
dec
rolb
dec
mov
pushf
push
jb
subl
dec
lock
inc
data16
jecxz
mov
repz
xchg
xor
xchg
pushf
inc
sbb
andl
inc
mov
in
les
xchg
aad
lods
add
testb
xorl
cs
or
xchg
sahf
push
adc
out
cmpsl
addr16
pushf
movsl
jnp
push
adc
aaa
pop
cmp
cs
aam
movsl
jmp
mov
xor
mov
xorb
mov
mov
sti
or
outsb
fldcw
pop
fdivs
mov
xchg
jb
sbb
shll
rclb
aam
adc
ret
or
push
jae
fst
aad
jo
js
out
cmc
cmpsb
lahf
cld
push
testl
inc
xchg
test
jmp
ret
or
and
adc
negb
outsl
adc
add
in
rclb
mov
sbb
pop
addr16
fisubs
add
aad
mov
ds
iret
stos
inc
dec
mov
sub
out
popa
push
or
fcomps
sub
imul
add
add
jp
sbb
pushf
push
mov
in
and
loop
mov
in
dec
xorl
dec
scas
xchg
xchg
jnp
jp
imul
sbb
lret
mov
aad
mov
lock
sbb
add
out
fwait
and
pop
or
shl
shll
sub
push
mov
andb
outsb
pop
mov
xchg
loopne
push
ja
xchg
ljmp
outsb
xchg
fcmovne
aas
insb
mov
aad
sub
jne
movsl
sbb
js
shlb
push
pop
mov
aaa
adc
sbb
fs
sub
mov
repnz
leave
xor
loope
int3
xor
xchg
sub
pop
mov
out
sahf
bound
xchg
sahf
out
int
in
int3
jge
and
popf
es
lods
test
outsl
cmp
xchg
rcrb
ret
fdivs
sbb
imull
mov
test
jmp
in
adc
data16
in
cmp
mov
sub
add
inc
push
scas
shl
dec
xor
mov
aaa
cmpsl
push
and
in
data16
lods
mov
xorb
pop
adc
shl
mov
insl
push
fisttpl
add
test
addl
out
or
aaa
ficoms
nop
aam
and
jae
outsb
test
sub
shll
pop
xorl
lcall
je
ljmp
rcrl
push
pop
bound
mov
les
lcall
mov
bound
sub
fucomi
leave
lds
inc
scas
pop
adc
sahf
dec
jle
loop
in
mov
pop
push
xchg
fidivl
push
rcr
or
mov
xor
xor
jbe
cmp
inc
into
pop
xchg
fs
sub
pop
loopne
mov
fisttpl
dec
mov
fbstp
ret
mov
mov
add
call
dec
stos
sti
add
pusha
out
scas
adc
or
sub
out
jge
mov
push
xchg
loop
and
loop
mov
ret
insb
pop
aad
mov
iret
cmp
in
sub
dec
push
test
xchg
push
inc
in
cmc
xchg
adc
call
fimull
mov
jg
aas
sub
popf
xchg
xchg
adc
xchg
leave
xchg
dec
adc
idivl
fcomps
inc
and
lock
fwait
popf
pop
mov
daa
or
mov
outsl
mov
lret
dec
iret
orl
cmp
xchg
mov
mov
mov
scas
jge
and
stos
les
pavgw
ljmp
push
das
mov
inc
push
mov
push
xchg
inc
loope
push
outsl
inc
mov
add
fisubrl
ret
xlat
aaa
push
std
mov
or
xor
fwait
xor
cwtl
loope
fsts
addr16
jb
sub
js
jo
outsl
neg
xor
jno
jle
xchg
fldenv
pushl
dec
inc
out
mov
dec
dec
mov
jae
push
push
movsb
shrb
out
btr
cmpl
hlt
fbstp
jb
sbb
repz
mov
adc
or
mov
mov
pusha
loopne
and
mov
xchg
push
incl
inc
aam
push
stos
out
mov
adc
mov
fwait
mov
jno
ds
cmp
push
into
xor
pop
push
and
hlt
mov
mov
and
mov
fisubrs
gs
popf
data16
or
push
movsl
js
adc
pop
sbb
xor
xchg
lods
jb
ret
add
int
lcall
cmp
push
mov
clc
negl
lcall
inc
fucomp
and
das
imul
in
and
stos
dec
and
sbb
cmp
stos
mov
push
add
jl
sbb
mov
hlt
scas
out
xchg
fiadds
sbb
mov
fistpl
ljmp
das
mov
jp
pop
sub
add
fs
pop
dec
and
xor
push
mov
shll
or
cwtl
adc
cmpb
push
xchg
push
fcmovbe
mov
ljmp
xor
repz
ficoml
adc
or
bound
push
stos
les
std
loop
pop
das
out
adc
inc
xchg
fmulp
roll
xchg
inc
iret
fdivl
xorb
xchg
or
leave
and
push
cmp
cmp
scas
rol
push
xchg
mov
notb
imul
add
xor
ret
movsb
add
jl
add
bound
xchg
jmp
inc
inc
xlat
cli
push
jns
xor
sbb
shll
mov
push
pop
scas
push
subb
push
or
int3
push
ltr
push
ja
dec
xchg
adcb
mov
push
push
mov
movsb
cltd
jmp
clc
outsl
xchg
mov
push
or
stc
xor
movb
lret
cmp
pop
jbe
int
icebp
mov
adc
pop
popf
mov
mov
cwtl
mov
jge
mov
adc
pop
ljmp
test
fiadds
add
adc
in
outsb
daa
mov
sub
mov
icebp
cmp
add
mov
sub
sbb
int3
xchg
push
mov
out
scas
test
add
xor
popf
jp
imul
loope
push
ljmp
out
push
andl
lods
fisubrl
subps
xor
mov
or
test
das
push
out
jb
adc
dec
inc
mov
xor
clc
loop
or
mov
repz
jge
push
lret
ret
jns
je
inc
stos
lret
jp
pop
sahf
adc
roll
lahf
xor
addb
jg
pop
outsb
sbb
cmp
ss
das
mov
repnz
clc
into
xchg
mov
jmp
xchg
sbb
adc
sahf
cmp
lock
push
add
sbb
mov
xchg
test
xchg
outsb
jg
dec
push
out
jnp
inc
icebp
lret
xchg
lock
data16
lcall
push
xor
sub
dec
gs
testb
scas
in
fmuls
xor
sbb
inc
data16
jns,pn
mov
fsubs
outsl
cmp
das
lock
clc
cltd
imul
data16
push
xchg
fnstsw
cltd
insl
nop
cmp
lds
adc
cltd
jmp
outsb
ja
test
pop
and
adc
adcl
mov
divb
or
cld
popf
outsl
pusha
adc
repz
in
cmp
insl
and
pop
fisttpll
lods
jns
xchg
mov
sbb
out
mov
jbe
popa
cld
jbe
jg
sub
mov
lods
cmc
movsb
and
ja
sarl
andb
mov
pop
mov
aam
xor
nop
andb
push
adc
leave
sub
push
xchg
fwait
cmpsl
and
cmpsb
mov
les
jmp
jecxz
lret
jmp
mov
jb
push
cmp
cmpl
into
fnstcw
cmp
add
rcr
mov
mov
cwtl
xchg
pop
popa
lea
or
fidivl
cmp
add
inc
mov
ss
mov
shr
or
jb
insl
mov
in
mov
das
sti
xchg
sbb
xorb
dec
js
mov
mov
push
or
push
and
jae
mov
je
adc
mov
cs
pop
inc
cmp
sbb
movsl
adc
adc
and
sbb
push
mov
pop
pop
stos
ja
dec
test
iret
in
sti
cwtl
push
imul
fmuls
and
lods
mov
dec
outsb
fbld
aad
pop
xchg
scas
xor
int
push
add
inc
mov
lret
lret
mov
sarl
mov
add
pop
mov
test
movsb
or
fdivp
sub
loope
and
insl
pop
xor
into
xchg
ds
lahf
xchg
push
popa
mov
outsl
jae
or
pop
loope
adcb
pop
icebp
inc
sub
mov
xor
test
mov
cmp
int3
nop
adc
dec
pop
insb
xor
dec
aad
js
cwtl
in
cli
testb
lcall
inc
mov
lret
sbb
dec
cmp
loop
pushf
leave
stc
cmpsl
jge
jae
xchg
fadd
stos
mov
nop
and
fsubrl
mov
mov
fnsave
scas
xor
or
xchg
aas
cmp
cmp
aam
scas
xor
xchg
dec
or
cwtl
inc
pop
cmp
bound
mov
notl
mov
pop
cld
je
add
xchg
neg
lret
andb
in
sbb
dec
and
mov
ja
ljmp
ja
push
xchg
push
repnz
int3
loop,pn
inc
out
out
test
in
cs
scas
push
pop
dec
and
xchg
sub
mov
lods
outsb
pushf
pop
rcrl
xchg
popa
test
addl
jmp
push
push
mov
in
jo
cli
mov
mov
jg
add
adc
hlt
fs
repz
mov
cli
inc
jmp
jne
movsb
inc
cltd
jle
mov
fwait
jae
outsb
popf
js
fdivrl
pop
adc
mov
in
jbe
mov
loop
ret
mov
add
das
ja
and
xchg
ljmp
arpl
ss
add
mov
dec
and
loop
push
in
sub
dec
aam
out
ljmp
repz
cmc
sbb
xor
xor
inc
xchg
cs
lods
cld
lea
pop
fildl
xchg
jne
out
call
test
movsl
add
test
xor
mov
add
adc
xchg
faddp
and
xor
cld
mov
outsl
cmp
loopne
rolb
in
push
push
popf
loopne
cmp
or
jecxz
int3
xchg
mov
push
sub
dec
mov
push
mov
push
pop
stc
out
sub
inc
dec
popa
imul
lret
fwait
mov
lds
add
mov
daa
or
test
out
arpl
int3
cld
mov
mov
outsl
sub
mov
lcall
push
inc
and
cmp
jb
test
xchg
bound
push
call
inc
rcl
mov
dec
jo
lock
movsl
popf
sbb
in
xorb
sub
daa
jae
mov
and
xorb
jo
ret
test
stos
jae
hlt
fidivl
fists
xor
pop
fwait
pop
mov
ds
cmp
dec
sub
into
pcmpeqw
jo
push
out
out
hlt
dec
cmp
inc
enter
inc
jg
out
add
int3
lea
ret
pop
mov
or
sub
cmc
adc
mov
cwtl
rcrl
inc
inc
xchg
pushf
sbb
mov
push
cmp
pop
inc
cmp
jl
inc
and
jg
sub
pop
test
fs
les
rol
sahf
mov
jns
jle
xor
sti
in
ficomps
icebp
sbb
and
inc
cmp
int3
aas
jo
inc
lahf
sbb
jbe
sbb
pop
hlt
lods
nop
pop
lods
sahf
jecxz
dec
insb
mov
std
aam
pop
aad
lcall
sbb
out
je
repnz
push
insl
add
outsl
inc
pop
or
adc
mov
out
jle
popa
outsb
push
lea
je
inc
jno
enter
cs
cmp
pop
bound
lahf
cwtl
aam
xorl
sbb
sub
ljmp
sub
subb
dec
insb
dec
xchg
loope
daa
in
mov
jb
add
leave
xlat
insl
jno
mov
out
repnz
rcr
mov
mov
push
xlat
fwait
inc
fnsave
test
pop
out
ficoms
test
add
cmpsl
ficompl
push
inc
scas
and
enter
scas
insb
xor
ret
dec
inc
mov
inc
enter
cmp
mov
pusha
movsb
outsb
add
movsb
aas
pusha
pop
inc
lods
imul
add
out
rcrb
ljmp
mov
addr16
pop
xor
and
mov
fwait
and
pop
cmpsb
iretw
sub
pop
mov
enter
mov
aam
push
jno,pn
incl
push
idivl
sbb
aas
outsl
shlb
shrl
nop
dec
mov
mov
popf
loop
jp
jp
in
add
mov
out
dec
shrl
inc
pop
add
iret
pop
bound
push
cmc
aad
les
mov
jmp
sbb
pop
fwait
cmp
hlt
mov
jg
jbe,pt
or
sub
jl
and
test
fbld
sahf
les
icebp
data16
lods
sub
or
test
ja
loop
ja
rorb
jge
pushf
xchg
dec
int
aad
add
xor
mov
jns
pop
jne
add
push
ss
das
mov
popf
sbb
test
jne
adc
mov
aam
jmp
sub
out
test
push
sbb
repz
rep
icebp
add
cltd
pop
ljmp
stc
imul
xchg
and
or
sarb
push
cmp
outsb
sbb
sub
lock
fisttpll
test
loope
mov
add
lret
inc
call
pop
pop
clc
mov
jne
add
xchg
hlt
push
mov
aam
and
hlt
int3
aam
andl
mov
mov
dec
mov
cmp
add
cltd
les
scas
loopne
mov
pop
das
push
cs
pop
mov
jne
fists
insb
subb
pop
xor
shlb
and
shlb
mov
jno
je
add
cmp
jle
jne
push
test
xor
jmp
cmpsb
pop
call
test
pusha
cwtl
adc
nop
testl
adc
adcl
and
push
stos
push
xor
lret
sbb
popa
push
mov
add
out
mov
push
mov
add
stos
sbb
loopne
sub
repz
mov
loope
in
out
pop
fwait
inc
or
and
xor
cmc
dec
add
push
aam
lds
or
xor
inc
cmp
in
push
pop
sbb
mov
sub
xchg
out
cmc
push
add
loopne
adc
push
jg
pusha
or
negb
imul
fs
inc
mov
mov
inc
es
pop
daa
push
js
add
mov
int
or
add
out
push
jns
jnp
fs
mov
in
mov
xchg
pop
jb
test
out
outsb
cmp
in
call
inc
test
aaa
xchg
les
iret
movsb
push
in
sbb
ficompl
mov
or
fldl
jae
das
mov
ds
sub
push
out
cli
and
adc
ret
mov
sbb
or
inc
cmp
add
mov
xchg
in
bound
dec
out
and
cmpsb
cmp
inc
mov
sub
js
lea
push
xor
push
andb
adcl
cmp
inc
push
push
lret
loopne
aam
cs
stos
xchg
mov
push
clc
and
inc
sub
pop
mov
or
push
cmpsl
jnp
add
cmp
dec
popa
or
scas
les
mov
adc
das
xchg
xchg
movsl
outsb
sbbl
add
stos
roll
jb
lds
mov
push
testb
or
mov
mov
and
push
outsl
inc
pop
and
mov
mov
add
popa
mov
add
jecxz
dec
cmpsb
pop
das
lcall
mov
in
jle,pt
cmpsb
lret
jae
xchg
fnstcw
out
inc
fnstsw
inc
inc
adc
test
popl
jmp
xor
jb
mov
sub
inc
loopne
popa
leave
pop
mov
inc
dec
shr
and
push
jns
ss
out
lret
xor
mov
addr16
out
outsl
push
and
sub
loope
dec
imul
outsb
leave
jo
inc
sbb
loope
mov
in
push
sahf
inc
aas
inc
sbb
jne
fiadds
fnstsw
pop
imul
mov
mov
mov
cmp
stos
int3
pop
push
jns
test
in
jl
inc
xor
int3
je
or
push
xlat
push
repnz
push
cmp
jb
and
mov
mov
cmp
sahf
cmp
mov
push
pop
rclb
mov
and
in
sarl
lcall
xlat
push
push
mov
les
loope
add
gs
jb
aaa
mov
cmpsb
fdivr
fisubrs
fsubrs
insb
mov
clc
in
xchg
inc
jge
movsl
lret
movsl
mov
dec
ds
aad
lock
jno
mov
xchg
scas
pushf
fidivrs
mov
clc
enter
hlt
lret
add
ret
enter
pop
icebp
add
ret
cmpsl
mov
scas
xchg
pop
shl
fldz
fbld
stc
cli
ret
sbb
or
jg
in
mov
pop
lods
pop
mov
add
mov
lret
add
cmpsb
sub
pop
xor
pop
idivl
adc
adc
scas
addr16
push
mov
notb
cwtl
jmp
and
jne
loop
mov
inc
out
out
mov
mov
xchg
jl
je
push
pusha
inc
mov
jl
xor
and
in
add
mov
mov
pop
add
mov
inc
in
lds
and
mov
pop
outsb
mov
stos
cmp
xor
add
daa
dec
or
sbb
popa
jbe
fnsave
addl
gs
pushf
cli
mov
lock
inc
jmp
mov
jecxz
pusha
push
xor
cs
lret
pop
push
scas
sub
roll
mov
cmp
out
pop
subb
cmp
jmp
cld
pop
fiadds
dec
mov
cld
push
jae
add
in
mov
or
add
les
sbbl
adc
pusha
sbb
jle
movsl
fstl
aaa
xchg
adc
loope
aas
int
out
stos
call
nop
inc
scas
jno
loopne
arpl
jno
jnp
das
movsb
inc
pop
ret
fcomi
daa
loop
push
inc
sahf
sahf
mov
mov
sbb
sti
std
dec
inc
sbb
xchg
filds
test
repz
cmp
sub
and
aas
aad
in
imulb
inc
push
xchg
mov
and
or
aad
adc
mov
xor
pop
sbb
mov
aas
gs
cmpsl
pop
aad
mov
xor
shlb
and
add
int3
scas
push
pushf
fcoms
xchg
inc
pop
xchg
mov
gs
daa
ficoms
call
imul
mov
mov
aaa
cmp
push
jns
testb
xchg
fwait
dec
mov
dec
lds
xor
xor
fmull
sub
gs
sub
adc
imul
sbb
lret
std
mov
and
enter
push
bound
pop
xlat
jo
mov
and
fistpl
pop
adc
adcl
call
sahf
rcll
mov
repz
pusha
add
lcall
jae
out
mov
mov
adc
push
out
sbb
ja
pushf
ljmp
ljmp
into
inc
arpl
lods
add
mov
pusha
scas
ja
sbb
ret
mov
mov
mov
addr16
sub
mov
rorl
sahf
jp
mov
pop
lods
cli
sahf
xchg
push
popf
pop
dec
mov
sbb
enter
nop
ret
bnd
lret
popa
stos
mov
mov
stos
mov
mov
and
stos
ljmp
sbb
pop
lret
pop
fldl
xchg
sahf
jle
push
fcoml
inc
sbb
int3
jb
mov
stos
loopne
rcll
push
or
insb
jno
jecxz
jns
outsb
dec
xor
push
and
notl
stos
out
ret
adc
out
or
sti
fnstenv
test
sub
mov
jo
mov
sbbl
mov
mov
push
jg
dec
arpl
and
jle
in
and
jmp
shl
adc
lods
lds
xor
sbb
dec
jne
iret
pop
add
mov
xchg
or
inc
sub
call
sbb
fcomps
in
pop
sub
inc
fidivrs
inc
sbb
sar
mov
lea
and
sub
jecxz
lret
push
mov
cmpsl
scas
add
out
adc
mov
imul
jmp
and
gs
mov
scas
int3
cmp
sbb
mov
and
add
jl
imul
xchg
jo
xor
out
pop
insl
je
jns
or
dec
dec
out
push
lds
cmpsl
adc
dec
stc
in
loopne
inc
orb
imul
lret
adc
xchg
lcall
ret
jecxz
adc
rcr
dec
mov
adc
addb
or
sbb
xor
shl
popa
mull
fidivrl
push
jmp
mov
aam
dec
imul
inc
push
sbb
xchg
shr
sbb
fucom
scas
sub
and
test
iret
adc
outsb
push
bound
lds
fildll
je
xchg
add
lret
fsqrt
pop
mov
pop
jbe
sub
xchg
push
jge
mov
data16
dec
pop
add
jns
sbb
mulb
ds
sub
outsb
popf
fdivrs
das
jl
dec
scas
cmp
xchg
addl
cli
in
sbb
xchg
mov
adc
xchg
cs
ss
mov
xchg
mov
mov
xor
hlt
cmp
add
ss
sbb
mov
push
js
push
lahf
fldt
lret
xchg
rolb
ds
movsb
and
sarb
mov
adc
ret
pop
sub
jns
aam
imul
push
rcll
outsb
fldt
xchg
push
or
add
arpl
jmp
aas
lret
mull
in
sti
mov
int
mov
loope
jno
adc
ss
insb
shlb
movsl
mov
loop
xor
mull
loop
xor
addr16
pop
or
and
push
xlat
dec
inc
mov
sbb
pop
inc
push
adc
push
push
cmp
hlt
pop
jae
shl
cmp
das
fcomps
pop
mov
aas
loop
mov
sbb
hlt
addb
lock
scas
aad
neg
jb
push
loopne
cmp
test
inc
sub
mov
mov
inc
xchg
je
shll
shlb
repz
adc
ljmp
dec
addr16
push
pop
rorl
fcoml
inc
in
stos
mov
jae
xor
xlat
adc
int3
pusha
in
rcll
bound
push
test
lret
push
fldl
and
mov
sbb
push
ja
pop
adc
aad
inc
jmp
aam
push
sub
fs
jl
in
js
adc
incl
fimuls
aas
pop
cmc
mov
sbb
stos
xchg
xchg
dec
inc
inc
xchg
les
adc
cmp
xchg
xchg
pusha
fwait
imul
out
ds
dec
enter
stos
push
loopne
push
in
xchg
ret
mov
push
test
movsl
xor
xchg
or
rcr
mov
and
inc
mov
mov
adc
or
sub
cld
mulb
in
test
je
and
sbb
and
aam
xchg
int3
iret
mov
int3
int
pop
mov
jle
xchg
sti
xchg
jno
pusha
test
ljmp
popa
movsl
xchg
leave
aad
cmp
mov
cltd
add
daa
lds
push
sub
pop
xlat
or
xchg
lods
push
inc
cmpl
push
cmp
sub
inc
sbb
adc
and
cltd
data16
jns
fs
mov
hlt
and
gs
iret
decl
nop
add
add
jge
enter
bound
dec
lock
popa
icebp
arpl
xor
stc
inc
dec
xchg
je
in
fs
jbe
mov
push
rep
in
xchg
adc
sahf
ljmp
cmp
push
fs
cmp
sub
nop
insl
test
je
pop
outsl
outsb
dec
imul
mov
dec
xchg
jp
test
ljmp
push
lcall
popa
pop
into
add
cmp
dec
insb
scas
mov
cmpsb
test
test
aas
inc
fmul
push
js
sahf
aam
ss
mov
ret
pop
popl
push
mov
push
fcomps
fldcw
shlb
nop
jmp
jmp
jo
sbb
mov
mov
popa
test
sub
rcrb
jg
inc
mov
rorl
adcb
mov
sub
leave
les
lods
aad
ljmp
mov
mov
mov
test
cmpsl
jb
push
adc
xchg
xchg
lahf
imul
add
jae
subb
mov
call
outsb
pop
mov
cwtl
jae
test
sarl
inc
testl
aam
mov
cld
xchg
jmp
clc
or
mov
sbb
jecxz
jmp
xor
in
loope
fdivr
pop
cmp
push
gs
sub
cmc
mov
or
sub
jns
in
adc
mov
mov
adc
sbb
jl
jg
fldenv
das
sti
mov
pop
inc
dec
dec
mov
add
push
js
sub
inc
rol
loop
add
js
pop
jo
je
je
mov
xor
mov
outsb
in
jns
xor
dec
fdivrs
xchg
add
popf
lret
frstor
roll
fimuls
xchg
jecxz
xchg
loopne
and
mov
fdecstp
xacquire
lds
int3
mov
cmp
cmp
xorb
fiadds
jb
mov
push
push
xchg
out
loope
mov
and
sub
popf
pop
lahf
imul
in
test
sbb
out
mov
insb
inc
dec
and
fsubrs
fwait
imul
or
xchg
mov
sti
repz
mov
push
sahf
dec
stc
cmpsb
jecxz
or
xchg
sbb
jle
out
mov
sbb
das
or
pop
xchg
divb
sbb
out
push
fmulp
ficoms
mov
rcr
jl
ret
xchg
mov
cli
addb
sbb
jecxz
mov
jle
sti
scas
mov
fldl
out
lods
xchg
shrl
lahf
jne
xchg
inc
mov
mov
pop
imul
mov
mov
pop
stc
pop
rcrl
loope
int
mov
sub
sbb
in
stc
push
ss
add
stos
test
fcomp
lahf
sub
mov
adc
sub
scas
push
mov
push
orb
rcrb
imul
and
cmc
les
lahf
mov
sbb
jl
movsl
cltd
inc
int
mov
push
dec
mov
test
xchg
out
shl
or
push
dec
push
sbb
inc
in
push
dec
jb
hlt
out
push
out
fsubs
mov
mov
mov
cmc
std
inc
jge
xchg
loope
lret
add
pop
jmp
cwtl
out
xlat
sub
out
push
mov
adc
lea
test
push
sub
mov
sbb
xorl
cmpsb
loope
movsb
jle
xchg
cld
pop
nop
and
sbb
xor
in
dec
icebp
inc
negl
push
imul
jmp
sub
arpl
sub
mov
ds
cmp
push
mov
pop
push
and
imul
fcoml
sbb
lcall
dec
mov
aam
xchg
ja
sbb
sbbl
pop
mov
ljmp
push
cs
insl
jns
add
pop
cmp
int
movsl
inc
or
and
and
jl
jmp
loop
sub
xchg
fcompl
add
mov
cs
add
fistps
and
in
in
mov
mov
popa
cmp
dec
fnstsw
pop
in
mov
movaps
in
add
mov
js
or
sarl
pop
arpl
insb
push
enter
push
repnz
sub
inc
pop
jae
jle
ljmp
lds
mov
mov
cli
push
dec
inc
pop
push
leave
xchg
sub
pop
jae
sub
orb
xchg
jl
ljmp
xchg
dec
cwtl
pop
dec
mov
aas
imul
sub
andb
addl
cmc
mov
mov
pop
std
adc
call
es
popf
stos
repz
or
aas
shll
cli
dec
pushf
pop
bound
clc
in
push
add
dec
mov
jp
icebp
xchg
push
xchg
sahf
test
mov
int3
cld
mov
daa
adc
imul
es
pop
xchg
mov
jmp
inc
stos
mov
out
mov
push
lahf
gs
and
jle
and
mov
orl
dec
popf
lea
dec
jecxz
mov
insl
orb
or
popa
add
pop
andb
push
aam
cmc
ja
outsb
jno
loopne
push
dec
shrb
and
jp
mov
push
pop
ss
fldl
dec
xor
imul
jg
pushf
int
loopne
aas
dec
aad
sbb
push
rorb
sbb
inc
adc
sub
pop
jecxz
hlt
sahf
mov
lods
aam
and
cmpsb
in
jb
mov
int
or
cmc
leave
pusha
xor
jmp
sbb
cld
popa
pop
mov
pusha
ds
stc
clc
iret
adc
push
out
inc
xor
lods
add
lret
xchg
and
mov
pop
xor
cwtl
mov
sbb
leave
add
mov
add
push
rorl
xor
addr16
pop
test
icebp
push
rol
inc
roll
mov
jo
mov
notb
pop
lods
cmp
adc
jbe
mov
xlat
lcall
jae
les
aam
sub
mov
mov
test
pop
mov
loopne
mov
mov
lret
pop
dec
xor
mov
xor
daa
add
rol
lret
pushf
inc
outsb
cmp
inc
je
mov
bound
dec
nop
out
push
leave
test
repnz
notb
mov
loope
setnp
xchg
adc
add
dec
mov
ret
jg
xchg
subb
gs
mull
inc
aas
mov
inc
ja
lock
jge
inc
ficoms
in
sbb
lea
xor
push
and
mov
dec
cld
ret
xor
mov
jno
push
shlb
jl
pop
mov
inc
lret
fisttpll
add
dec
and
xor
jo
inc
xor
roll
stc
jp
arpl
test
fxch
cmp
ret
leave
xor
repz
add
les
addl
inc
xchg
aas
xor
pop
loop
ret
aas
adc
ret
les
adc
decl
xchg
jne
mov
mov
mov
lods
nop
mov
push
iret
add
inc
cmp
sarb
jae
popa
push
sbb
ss
mov
insl
push
out
aas
add
sbbb
ret
pop
lds
pop
add
je
dec
push
dec
jge
iret
xchg
push
xchg
dec
mov
or
fnsave
xor
or
lds
adc
mov
mov
stc
mov
ret
xchg
adc
and
xchg
movsl
push
fidivl
aaa
push
into
popa
test
xchg
arpl
jp
mov
cmp
aad
mov
mov
cmpb
fs
fwait
orl
cmp
call
and
cmc
stos
cmp
fisubrl
lret
mov
adc
int3
ljmp
adc
in
fs
addr16
dec
mov
arpl
xor
loop
dec
pop
int
scas
mov
jns
mov
and
pushf
test
and
xlat
imull
ffreep
stc
mov
gs
in
loop
adc
mov
add
jmp
cs
pop
push
push
cmpsb
ds
mov
cmpsl
push
push
mov
add
arpl
push
push
cmp
mov
iret
fwait
cmp
fnstcw
fwait
sbb
push
roll
dec
gs
xchg
adc
rcrl
pop
ficomps
xor
or
and
imul
add
mov
fisubs
lret
jb
push
jb
mov
xor
lock
cmp
push
test
hlt
add
int3
cmpsb
add
adc
sbb
test
or
adc
push
aaa
sbb
fnstenv
lahf
fisubrl
movsb
xchg
test
stc
push
das
in
xchg
das
in
divb
sti
mov
outsl
lock
pop
pop
je
push
rcr
cwtl
insb
cmp
idivl
ficoms
dec
ficoms
aam
lds
popa
xchg
inc
out
testl
sbb
jne
imul
fwait
imul
add
add
stos
out
xorl
movsl
cmp
por
sbb
clc
inc
jns
mov
adcb
mov
pop
or
popa
adc
rolb
dec
int
mov
movsb
rolb
mov
adc
sbb
pushl
ss
outsl
lcall
scas
and
les
in
std
in
and
mov
cltd
sub
jecxz
dec
call
xchg
cs
xorb
das
decl
cmp
movsb
daa
sub
call
and
mov
and
out
pusha
xchg
dec
shlb
lcall
xor
stos
movsb
or
jo
mov
hlt
test
jo
stc
xchg
fstpt
xor
dec
jmp
movsl
pop
lods
sbb
cltd
decl
repz
testb
popa
push
and
jg
hlt
adc
xor
enter
cmc
jnp
leave
push
in
lret
or
in
les
mov
pusha
push
xchg
cwtl
pop
lret
jnp
shrl
mov
les
scas
jne
int3
popf
in
test
addr16
xor
aaa
stos
ret
ss
ret
xchg
in
test
ljmp
movsl
mov
pusha
aad
mov
and
jecxz
stos
adc
dec
imul
or
ret
xor
ds
sub
pop
inc
adc
stos
nop
jmp
and
pop
pop
push
int
jl
inc
push
scas
mov
pop
or
cmpsb
jo
or
mov
and
jg
or
repz
fwait
icebp
and
mulb
cmpsb
pop
jns
sbb
jbe
xchg
lret
mov
div
or
jmp
xchg
outsb
cmp
push
stc
push
mov
addr16
fcos
and
loope
sahf
xchg
or
cmp
xchg
ss
push
dec
std
inc
pop
xchg
push
mov
pop
xchg
jo
push
loopne
mov
inc
popa
xlat
xchg
cwtl
das
cltd
mov
ret
jmp
repz
mov
nop
mov
ljmp
hlt
xchg
cmp
cmp
mov
and
push
outsl
ljmp
dec
pop
and
cmpsb
fisubrl
pop
sub
pop
inc
push
xchg
cmc
push
scas
mov
nop
mov
out
push
or
push
int
out
cmp
mov
mov
push
cltd
jns
cmp
jae
mov
add
scas
fwait
dec
fdivrs
shr
cmp
mov
scas
jne
vpsrld
pop
mov
popa
negl
cmp
ss
mov
mov
and
xor
and
adcl
mov
dec
negb
mov
adc
adcb
lock
push
mov
pop
out
iret
in
ss
pop
or
add
fidivs
fadds
aas
xor
inc
pop
or
dec
or
stos
enter
ret
cmp
lcall
popf
popa
pop
jmp
adc
loopne
push
xchg
movsb
cld
gs
idivb
mov
or
add
stos
inc
add
mov
dec
dec
int
push
xchg
fistl
sub
jnp
scas
mov
mov
jge
pop
stos
sub
pop
push
lods
lcall
cmp
sbb
mov
icebp
jp
movaps
inc
xor
shl
std
shl
mov
mov
jns
adcb
jg
mov
mov
cltd
add
cmp
ljmp
in
dec
and
lods
ljmp
and
cmp
hlt
out
jecxz
shl
lods
maxps
cwtl
mov
mov
inc
mov
scas
jae
inc
mov
dec
addb
add
lret
xor
test
pop
mov
frstor
lods
sbb
fldl
movsb
loope
and
mov
or
ja
and
push
filds
aad
push
jne
das
pop
pushf
ja
leave
cmpsl
cmp
je
adc
sti
js
pop
sbb
mov
mov
mov
adc
dec
pop
jbe
jmp
scas
mov
sbb
cmc
cmp
adc
or
ret
mov
mov
icebp
sarl
jae
repz
ljmpw
mov
into
adc
iret
aaa
mov
cli
inc
loop
cmp
jae
inc
mov
cmp
add
jno
xor
adc
push
push
xchg
cmc
loopne
inc
dec
xchg
xchg
xor
mov
xchg
pop
jo
mov
inc
xlat
or
or
ljmp
xchg
jge
pop
int3
adc
pop
pop
aas
or
inc
int3
cmp
out
xor
adc
mov
fwait
lods
sbb
push
aam
and
fcoms
lahf
lahf
outsl
inc
je
xor
or
sub
xchg
sbb
imul
in
xchg
jbe
cli
cmp
dec
dec
fnstenv
shlb
mov
ds
adc
or
inc
pop
mov
sbb
mov
fmull
lret
push
inc
int3
mov
jmp
ret
clc
std
sbb
inc
addps
jo
rolb
loop
dec
pop
jl
mov
adc
mov
fs
and
dec
or
xchg
sti
xchg
jb
sub
mov
mov
adc
xchg
mov
lahf
mov
int
pop
gs
inc
ljmp
inc
sbb
idivl
in
scas
in
es
mov
call
sub
xchg
sbbl
insb
ja
and
push
std
cmp
movsb
gs
dec
inc
push
cmpsl
jp
pop
call
sbb
rcr
xor
mov
pusha
add
movsb
shlb
imul
push
push
es
add
cld
mov
sti
enter
iret
dec
dec
fisubrs
jo,pn
jmp
popl
cli
sub
mov
adc
and
sbb
mov
rcrb
or
sub
dec
bound
lcall
out
push
fists
cmp
xlat
lahf
and
lds
shr
add
out
adc
sbb
ret
jne
xor
repnz
lahf
sbb
sbb
inc
xorl
imul
sbbl
sbb
mov
pop
jne
sbb
push
cmp
movsl
dec
js
push
mov
add
fwait
mov
scas
or
clc
xchg
or
pop
loop
jl
push
lea
pop
xchg
push
inc
fisubl
sarb
inc
dec
dec
mov
fs
pop
jb
mov
sbb
or
dec
mov
mov
fmuls
inc
sti
mov
sti
cltd
iret
lds
outsb
and
add
cmpsb
mov
mov
jle
xor
decb
rolb
jae
jbe
xorb
xchg
flds
xchg
dec
add
inc
jecxz
xchg
cmp
insl
sub
icebp
ja
cmp
xor
pop
pop
das
push
repnz
outsl
jmp
nop
pop
inc
in
clc
xor
inc
push
and
mov
adc
fisubrl
shll
aam
add
scas
les
jmp
jmp
ret
xchg
int3
test
cmp
add
mov
cwtl
and
cltd
repnz
xlat
xchg
dec
sahf
in
cmp
push
inc
cmp
test
and
insb
leave
cmp
gs
int
repz
cmp
in
sub
inc
jmp
cltd
cmp
jecxz
fdivl
push
push
and
xor
into
jno
jecxz
fldenv
and
into
or
xor
and
cmpsl
pusha
lock
cmp
movsl
stos
jecxz
mov
inc
repz
cmp
iret
dec
int
mov
bound
out
mov
pop
mov
jge
lods
je
mov
sar
out
ja
jg
jo
lcall
leave
jb
mov
lret
pop
pop
out
lods
inc
arpl
lret
cltd
loopne
or
push
test
sub
push
out
mov
mov
jnp
ljmp
dec
cltd
je
xor
out
lea
cmp
mov
mov
xchg
or
in
into
out
popf
jl
lcall
inc
repnz
jno
cwtd
lods
sbb
lcall
xor
push
inc
arpl
and
xchg
sub
stos
cltd
ja
push
test
cmp
sbb
xor
mov
sbb
inc
bound
out
loopne
loop
arpl
cmpsl
cmp
sub
xchg
pop
push
mov
jg
and
out
jp
pop
outsl
sbb
and
jne
jne
xor
incb
or
jecxz
pop
int
sbb
lahf
pusha
sarb
sub
or
lahf
push
nop
fldcw
lods
mov
cwtl
inc
fiadds
popa
jl
adc
out
scas
xchg
xchg
nop
ljmp
jle
sbb
es
fwait
popa
and
cmc
xor
iret
add
jecxz
xchg
je
mov
mov
dec
inc
pop
add
stc
out
jb
aam
dec
sub
movsb
mov
rcrl
into
fs
mov
sub
push
out
stc
outsl
subb
loopne
cmp
pusha
in
pushf
mov
inc
repnz
jo
mov
aam
int3
inc
cmp
mov
push
cmp
push
bound
xlat
enter
cltd
pop
pop
jno
lcall
push
lcall
imul
pop
in
push
aas
cltd
jg
sbb
xor
outsl
lea
xor
and
iret
mov
scas
cld
call
jl
subb
jb
mov
inc
popa
fdivrl
es
and
lahf
shrb
xchg
pop
ja
add
push
fwait
bound
mov
mov
in
and
push
icebp
push
sbb
test
inc
nop
push
pusha
fistpl
dec
das
ds
push
test
shrb
paddusw
pop
sti
packsswb
lea
jmp
add
loope
mov
rolb
andl
and
mov
pusha
pop
sub
sub
sbb
dec
mov
movl
or
xor
pop
loope
mov
jp
ljmp
push
cmp
push
pop
js
call
xchg
dec
and
xor
repnz
lcall
sbb
les
sarb
jns
push
add
push
daa
cmc
push
and
mov
lahf
jecxz,pn
cmpsb
loope
lcall
sbb
dec
sbb
add
mov
cmpsl
mov
xchg
inc
mov
incl
loop
das
xor
push
mov
dec
js
pop
iret
lock
dec
out
adc
ss
jecxz
fdivs
mov
jle
out
adc
out
test
test
push
out
lret
dec
mov
and
repnz
mov
ds
inc
lret
push
mov
std
insl
test
inc
test
stc
stos
adc
xchg
mov
sub
je
psrld
or
push
inc
ds
and
sub
dec
stc
push
mov
imul
push
cwtl
mov
add
out
stos
sbb
jecxz
mov
mov
xchg
push
adcl
push
inc
xor
xchg
xchg
mov
leave
dec
mov
loop
movsl
cwtl
sbb
sbb
aam
les
outsl
dec
xor
and
mov
xchg
je
rorb
std
dec
inc
xchg
int3
arpl
push
enter
cli
sbb
mov
jmp
or
sbbb
insb
stc
ret
mov
cmp
mov
mov
mov
leave
loop
and
push
pop
popf
test
out
rorb
leave
jne
bound
mov
loope
lret
sub
and
pop
inc
popa
lahf
inc
jp
cmpsb
cmpsb
xor
sub
mov
dec
mov
xor
fisttpll
sub
xchg
sub
popa
mov
add
xchg
mov
mov
ficompl
scas
loope
cmp
cmp
addps
push
dec
sub
and
add
dec
cs
mov
push
add
mov
mov
jl
test
scas
cmp
call
jne
pushl
xchg
xchg
cmp
je
clc
dec
pop
xor
fdivl
lea
xchg
mov
shrb
mov
mov
sahf
jg
shrb
pushf
mov
adc
mov
pop
pop
inc
aas
cmpb
cwtl
inc
imulb
cmp
repnz
jmp
mov
xchg
sahf
js
mov
xchg
adc
inc
mov
scas
repz
lods
sbb
push
js
mov
test
sbb
and
into
jge
fbstp
stc
inc
popa
in
sub
popf
shrb
movsb
or
add
adc
xor
inc
dec
jne
and
scas
jbe
or
jb
xchg
ss
adc
in
or
icebp
mov
push
pop
jge
push
mov
sub
sbb
shl
push
cmp
enter
lea
sahf
mov
sbb
mov
or
push
inc
and
mov
cmp
add
lods
lret
andl
test
jp
ja
movsl
jae
xlat
test
jno
mov
lahf
mov
mov
mov
fnsave
ret
pop
call
leave
les
fwait
lcall
sbb
das
jp
jp
jecxz
mov
xlat
push
andb
mov
mov
ss
mov
cmp
negl
cmpsb
fcmove
jecxz
dec
jo
cmpsl
xchg
mov
je
mov
xchg
push
insb
test
inc
jg
add
mov
fs
mov
inc
inc
lods
mov
icebp
in
inc
jmp
dec
das
xor
inc
ret
xchg
mov
loope
pop
and
imul
and
adc
mov
outsl
sbb
sbb
daa
push
les
jecxz
mov
aaa
sbb
cmp
add
ficompl
adc
addps
jge
dec
pop
dec
mov
ret
push
jge
inc
rolb
fbstp
sub
push
xchg
std
adc
or
addr16
xor
pop
ljmp
cmp
or
addl
popf
mov
cmpsb
lds
add
xor
test
mov
rcr
jecxz
and
push
les
je
lds
imul
shrb
aaa
sub
pusha
dec
sahf
mov
fstp
and
movsb
jns
pop
mov
and
lock
call
xchg
add
xchg
test
pop
mov
outsb
xor
pop
mov
pop
insb
pop
pushf
push
imul
inc
pop
pop
addr16
outsb
fsubl
dec
cmp
mov
mov
scas
or
cmpsb
push
lds
ret
test
lods
cs
jo
jae
nop
xchg
jo
mov
pop
jmp
aam
int
adc
and
imul
mov
enter
or
cli
lods
push
in
pushf
cmp
mov
cwtl
pop
inc
inc
dec
inc
ljmp
dec
das
and
aas
adc
xorb
scas
out
cmpb
iret
stc
fwait
outsb
cmp
les
push
clc
movsl
pop
adc
sub
ljmp
dec
sbb
mov
xor
dec
ljmp
in
das
lret
xor
sbb
jecxz
sbb
add
mov
push
addl
fisttps
cmpsl
outsl
fucomi
mov
mov
xor
push
dec
icebp
aam
mov
test
push
adc
dec
jl
and
into
das
aaa
mov
dec
dec
pop
ja
sbb
lock
mov
add
pminub
inc
int
mov
out
jg
stos
data16
sub
or
loope
push
fwait
push
inc
mov
jle
cld
sbb
push
jae
rol
cli
and
mov
stos
outsl
shr
add
cmp
pop
pop
cmp
nop
dec
pop
dec
sub
adc
add
aaa
ficomps
cmpsb
adc
hlt
movsl
push
lds
out
cwtl
jb
cli
icebp
pushf
movsb
std
add
mov
and
cmpsl
cli
dec
rcll
jno
lret
mov
js
inc
adc
mov
xor
fnstenv
dec
bound
test
fstpt
and
call
cmp
mov
cmpsb
sbb
jne
mov
inc
pop
arpl
add
mov
mov
ja
and
inc
xchg
xchg
sub
mov
pop
push
and
xor
test
xchg
mov
iret
inc
aad
xchg
sarl
push
jbe
lahf
add
mov
mov
xor
bound
inc
jae
imul
sbb
xor
and
inc
fildll
mov
mov
movsb
cmp
mov
push
dec
jno
and
shrl
and
and
mov
js
mov
popf
xchg
popf
mov
pop
movsl
sbb
push
lret
push
int3
imul
clc
inc
fisubl
mov
test
jae
loop
stos
imulb
sub
mov
out
ret
xchg
std
repz
filds
call
sbb
xlat
sbb
mov
mov
mov
loope
cmpsl
jns
iret
push
push
dec
or
jmp
lret
fcmove
cmp
sbb
xchg
into
lahf
xchg
xor
insl
int
mov
adc
out
inc
and
sbb
mov
and
insl
lods
pop
adc
cmp
out
fldcw
add
int
movsb
jmp
pop
enter
lret
cmp
dec
fcoml
mov
sub
fstl
xchg
or
enter
shlb
push
push
cmp
stos
stos
rorb
push
sbb
sub
pop
jae
add
pop
shrb
and
aaa
bswap
pop
iret
dec
aam
push
inc
fidivrl
repnz
jle
push
aas
xchg
lcall
or
leave
cmp
call
or
mov
mov
mov
xchg
push
test
cmc
loopne
call
mov
imul
sub
lods
sbb
gs
jecxz
inc
mov
in
push
mul
ret
stc
stos
dec
push
push
cmp
jo
stos
mov
sarl
push
dec
and
ljmp
movsb
fcomps
and
inc
mov
sub
xchg
loopne
dec
cmovg
arpl
add
pop
and
fists
loop
lea
lret
stos
dec
into
movb
xor
mov
pop
js
aam
cltd
mov
loop
imul
cmpsl
adc
dec
and
in
mov
hlt
xchg
mov
or
mov
cmp
sbb
push
lcall
fs
pop
jae
mov
hlt
mov
push
xlat
mov
pop
jbe,pt
adc
sub
push
mov
std
addr16
adc
aad
out
mov
dec
movsl
addr16
icebp
pop
push
rcll
mov
sbb
into
stos
dec
movsb
in
cmp
test
pop
leave
popa
inc
or
push
jmp
hlt
rorl
arpl
daa
xlat
xchg
test
test
jmp
in
inc
je
lahf
sub
xorl
subb
mov
aad
inc
ja
push
mov
movq
orb
adcb
test
loop
jl
test
fidivrl
insb
push
daa
mov
out
cmp
shrb
mov
mov
fimull
sahf
mov
jmp
push
pop
imulb
cli
push
add
jle
pop
cwtl
pusha
cmp
movsl
in
xor
inc
into
aad
add
jno
add
in
or
iret
xor
jg
dec
inc
ljmp
fdivrl
repnz
push
out
mov
xor
ror
xchg
sti
pop
cli
sbb
into
ss
les
loopne
cltd
scas
pushf
lea
mov
cmp
cwtl
cmp
ret
pop
loope
push
outsl
jns
jp
rcrl
pop
xor
jmp
rcr
mov
inc
daa
dec
jbe
mov
leave
sub
push
addl
mov
jno
call
xchg
das
rorb
adc
ja
mov
data16
mov
ficoms
adc
lods
jbe
mov
push
cmp
out
xchg
push
out
or
add
or
gs
push
and
jbe
movnti
cmp
sub
push
xchg
nop
mov
or
adc
movsb
mov
jbe
push
call
jb
in
push
jmp
lea
scas
cmpsl
push
addb
repz
mov
inc
lret
jle
and
push
and
and
cli
js
and
xchg
imul
je
outsl
idivl
cs
mov
dec
loop
push
mov
dec
inc
mov
mov
fcmove
sbb
push
jg
fwait
test
pop
dec
jnp
cmp
aas
lcall
mov
xchg
imul
push
and
adc
mov
push
xchg
add
ret
not
les
ja
fwait
cltd
xor
test
pop
dec
lret
jge
xchg
jne
outsl
ja
jns
pop
dec
mov
sbb
rclb
push
or
lock
lret
pop
adc
loopne
pop
ja
addr16
ret
mov
mov
mov
sub
push
mov
push
mov
push
sub
sbb
out
jle
adc
xchg
lcall
pusha
mov
dec
bound
cmpsl
lods
rol
shrb
mov
mov
lcall
dec
in
lods
mov
push
inc
rcl
clc
mov
iret
pop
xchg
scas
cmpsb
mov
cld
hlt
jp
cmp
push
sti
leave
adc
test
ret
dec
aaa
xchg
mov
cltd
fisttps
mov
adc
stos
scas
cmp
lods
mov
aas
insb
lret
loop
scas
xor
cs
stos
dec
or
mov
xchg
jbe
or
inc
inc
aaa
add
sub
and
pop
jno
xchg
scas
lds
adc
ret
jl
loope
mov
mov
pusha
adc
in
shrl
cmpl
pusha
outsl
test
mov
cli
dec
in
and
clc
rcr
lea
testb
popa
xlat
dec
pop
nop
stos
shll
roll
pop
stos
popf
in
lret
mulb
lods
mov
ret
push
repnz
jg
mov
or
pop
inc
sarl
lcall
push
xor
and
fsubs
dec
mov
mov
cmp
jbe
mov
or
push
mov
add
dec
and
dec
jecxz
sub
add
popa
sbb
fcoml
pop
cmp
loopne
sub
and
push
xchg
mov
cmpb
cmp
lahf
push
xchg
ret
push
jl
call
dec
mov
test
and
inc
je
adc
xor
mov
stos
jg
push
stos
push
add
popl
mov
xchg
cmp
xor
and
inc
mov
and
cmpsl
aad
sti
mov
aad
jmp
aam
jae
lods
xor
popa
stos
pop
cmpsb
cmp
movsb
in
mov
sub
sbb
ret
pop
sub
aad
sarl
xor
cmc
fldl
add
inc
ja
jno
scas
mov
pusha
pusha
into
xchg
test
inc
bound
std
addr16
les
lahf
and
mov
in
xchg
loop
push
dec
pop
scas
cmp
ja
mov
xor
mov
dec
aas
movsl
jb
xlat
pop
fstps
mov
mov
cmp
aaa
dec
push
jo
hlt
jno
fimuls
pushf
aas
das
lret
jo
mov
fs
neg
ret
repz
outsb
sahf
pop
idivl
ja
inc
xchg
xchg
repnz
dec
push
repnz
xchg
sbb
mov
idiv
add
mov
daa
testb
stc
cmp
xor
rorb
xor
xchg
pop
xchg
fcmovu
cmpsb
sti
std
aaa
enter
stos
cmp
sbb
sbb
adc
jg
imul
popa
leave
test
mov
lret
pop
out
sub
add
dec
xchg
xor
push
pop
fdivrs
mov
scas
and
roll
out
push
push
sub
fcomps
pop
iretw
shr
xchg
mov
jle
test
inc
pop
in
pop
das
add
ljmp
xchg
stos
adc
ror
loope
and
dec
dec
scas
scas
xor
jmp
sahf
mov
notl
sub
fwait
pop
in
xor
mov
mov
dec
mov
popf
ret
jne
cmp
adcl
push
mov
adc
daa
subb
lds
mov
or
repnz
std
cmp
mov
insl
or
pop
sti
frstor
nop
scas
mov
adc
out
sbb
int3
sbb
adc
and
sahf
sub
ja
cmpsl
jl
xor
ljmp
pop
hlt
push
mov
jecxz
mov
mov
das
mov
leave
mov
cmpb
lea
inc
mov
in
pop
inc
movsb
jns
test
test
and
sub
add
push
dec
int
dec
scas
jg
stc
pop
xchg
pusha
inc
push
stc
mov
mov
push
rcl
imul
sub
ss
xor
adc
or
mull
sbb
pop
mov
data16
sbb
mov
push
jbe
push
fwait
cmpxchg
imul
mov
ret
pop
adc
jnp
fs
pop
sahf
xor
xor
jmp
popa
xchg
cmpsl
sub
mov
xor
or
pop
mov
mov
outsb
push
imul
into
push
jg
sbb
cld
and
lods
xchg
adc
cmp
test
pop
pop
jg
mov
push
inc
xchg
test
sub
xchg
jecxz
fstpl
popa
outsl
mov
adc
iret
mov
dec
inc
xor
cwtl
hlt
insl
test
pmaxsw
movsl
and
fs
add
out
push
les
push
es
add
mov
dec
loop
hlt
sahf
dec
mov
or
or
rol
jo
add
js
xor
stc
iret
movsb
in
add
test
popf
outsb
dec
fsubr
push
outsb
dec
and
sub
or
jg
or
rcrl
in
sbb
inc
sub
and
mov
int3
out
xchg
div
jle
ja
or
cmp
cld
add
mov
int
pop
mov
cmp
add
and
sahf
xor
lock
jmp
iret
clc
lods
aam
pushf
inc
xchg
dec
mov
cmp
jnp
mov
out
xlat
dec
inc
cvtdq2ps
lea
jmp
adc
dec
mov
push
out
cmp
add
test
adc
xchg
mov
pop
mov
sbb
xor
xor
orb
sar
mov
shlb
xchg
into
insl
jecxz
cld
adc
push
hlt
ss
dec
cld
inc
xor
jp
mov
testb
addb
mov
sti
mov
pop
subl
in
mov
int
jae
add
and
inc
je
iret
insb
inc
cmp
addr16
js
push
push
rcr
shll
mov
pop
into
adc
mov
lret
pop
dec
push
push
arpl
mov
mov
mov
repz
xor
out
adcb
rclb
add
mov
xor
sbb
push
sbb
or
push
int
hlt
or
fnstsw
int3
pop
js
test
fisttpll
repnz
mov
xchg
filds
mov
mov
cmpsb
xor
leave
or
add
fiaddl
sub
aas
mov
jecxz
cltd
loop
ds
cld
lret
adc
inc
outsb
and
pop
shrl
rclb
xchg
inc
xor
xlat
adcb
popa
cmpl
sub
or
push
in
pop
in
test
lock
xor
cmp
inc
test
lret
into
mov
sub
fisttpll
inc
xor
insl
and
rolb
pop
mov
sub
cmc
lahf
or
xchg
imul
pop
dec
mov
outsl
frstor
cltd
adcl
ret
dec
sub
fnsave
cmc
lahf
pusha
inc
sub
xor
inc
push
fnstsw
sub
sub
loope
inc
jmp
cmpsl
pop
add
xchg
sbb
sti
pop
dec
jnp
outsl
cltd
lret
popa
xor
sub
pop
jle
add
adc
mov
mov
mov
out
in
xlat
cmp
lahf
adc
in
pop
mov
adc
xchg
sti
xor
lret
and
inc
dec
icebp
push
pop
sub
mov
jno
std
cmc
jo
mov
imul
or
xchg
inc
lahf
xchg
push
jmp
dec
cmp
mov
xor
scas
xchg
or
leave
or
mov
mov
out
jge
ja
int3
xor
lahf
test
push
mov
pop
mov
add
add
lahf
clc
lret
int
imulb
mov
and
cli
jnp
mov
cs
pop
loopne
xor
out
pop
lret
fbstp
inc
fistps
shlb
push
xchg
ja
rcl
lods
mov
and
adc
mov
push
imul
adc
leave
pushf
insl
jne
insl
push
sbb
in
pop
pop
movsb
mov
leave
and
mov
cmp
xchg
or
enter
std
loop
or
and
xor
ret
pop
push
sbb
pop
das
xor
jns
lods
inc
add
mov
test
fnsave
xchg
push
test
add
push
mov
sub
pop
roll
lds
add
out
cmp
ret
mov
dec
mov
lock
push
inc
xor
jno
test
sbbb
loop
leave
shll
imulb
inc
fdiv
sbb
scas
jmp
cmpsl
lcall
mov
lcall
pop
fs
lahf
pop
das
adc
jae
ljmp
fs
inc
pop
sarl
mov
cmp
clc
mov
faddl
fs
popf
push
insb
push
mov
cmpsl
cmp
cli
inc
lret
clc
jae
add
sub
loopne
inc
push
int
repz
jne
sti
sbb
dec
mov
pop
fsubrs
fsubrl
push
cld
sbb
jne
add
out
hlt
ja
clc
mov
imul
das
pop
orl
inc
inc
sbb
jnp
mov
fs
sbb
xor
adc
xchg
add
daa
cmp
cwtl
sbb
in
adc
mov
mov
pcmpgtw
xchg
lea
push
stos
shr
jmp
sbb
and
pop
mov
or
ret
test
mov
lahf
pop
and
mov
mov
mov
sub
lret
mov
cmp
push
pop
sbb
mov
xchg
push
fimuls
shll
push
xlat
int
hlt
sub
inc
xchg
sub
gs
arpl
dec
cmp
cltd
addr16
pushf
lcall
add
not
cmp
popf
jbe
lods
scas
sub
loope
scas
add
mov
mov
push
fs
xchg
jp
push
xchg
lock
sub
fsts
adc
daa
add
movsl
mov
call
sbb
lahf
push
sbb
out
add
lods
nop
outsb
pop
add
movsb
and
pusha
push
fiaddl
scas
mov
inc
mov
dec
cmp
rolb
outsl
push
push
int
inc
icebp
cmc
cmp
mov
mov
xor
jno
ja
fmuls
insl
lahf
lcall
or
add
test
lock
lock
inc
mul
push
mov
shlb
push
das
sti
mov
sub
es
xor
jo
insb
mov
adc
sbb
pop
jb
arpl
pop
mov
sub
mov
jbe
sbb
imull
and
das
fidivs
cmc
push
push
mov
outsl
popa
roll
scas
and
les
push
jmp
jb
lods
pop
jecxz
bound
or
movb
or
inc
insl
push
fstl
and
shl
mov
stos
add
aas
rorl
push
jp
ss
ret
cltd
inc
pop
cmp
es
push
sub
cmp
ss
pop
and
push
imul
mov
inc
scas
orb
sbbb
or
sbb
jbe
pop
popa
frstor
jo
fldl
cwtl
cmp
rolb
mov
imul
mov
idiv
cmpsb
pop
push
sub
inc
push
and
xchg
mov
pop
cwtl
push
fnstsw
aam
movsb
add
daa
je
push
fiaddl
pop
cmp
sbb
popa
test
cmpsl
aam
fcompl
bnd
sub
mov
lods
aam
stos
xchg
nop
pop
mov
xchg
je
inc
bound
mov
and
test
and
sbb
or
jb
mov
inc
and
je
pop
push
jp
pop
aas
mov
popf
push
adc
adc
sub
mov
adc
mov
iret
sbb
frstor
mov
ss
jmp
movsb
xchg
stos
mov
xchg
enter
dec
xor
insl
cmp
add
cmp
fwait
lret
inc
xor
mov
mov
pop
xor
jne
mov
loop
or
jp
std
mov
jecxz
test
cmp
shll
fildl
mov
daa
lods
jl
dec
adc
out
xchg
lcall
mov
mov
ja
inc
mov
cld
test
sbb
sbb
push
mov
xchg
fcomp
or
lcall
mov
inc
jbe
pop
lcall
pop
jmp
adc
xchg
pop
stos
xchg
adcl
hlt
mov
enter
int3
dec
test
stos
dec
xlat
ret
dec
sub
movsl
outsl
neg
into
repz
clc
or
or
lahf
cmp
loop
mov
sub
out
mov
mov
arpl
mov
in
mov
imul
clc
leave
sbb
jo
lcall
mov
gs
lock
leave
xchg
push
inc
push
lods
out
sti
js
call
fwait
xchg
out
neg
popa
dec
ret
int3
push
repnz
jno
sbb
inc
push
js
mov
cld
mov
pop
cmp
lods
xor
inc
out
sti
xor
in
mov
pop
jnp
mov
pop
or
ja
out
inc
loop
jnp
cmp
orl
test
mov
push
pusha
fs
dec
scas
inc
call
cmp
popf
add
pop
fdivr
push
adc
and
cmp
adc
mov
lcall
mov
mov
inc
dec
out
xor
ret
xchg
adc
les
inc
ficomps
test
in
pop
mov
mov
and
push
push
cmp
adc
insb
movsl
mov
jmp
add
or
or
jae
xchg
fdivrl
sub
sub
mov
repnz
cwtl
andb
mov
rcr
popf
mov
movsl
popa
lods
and
movsl
mov
xor
and
pop
and
insl
add
cs
mov
test
imul
mov
ljmp
jmp
xor
xchg
je
cmpsl
pop
fsubr
mov
movsl
ja
mov
dec
or
inc
lods
gs
and
sub
icebp
mov
lock
lret
mov
and
adc
stos
cmp
popf
jbe
cmp
rcrb
gs
xor
add
adc
enter
cmpb
wrmsr
enter
insl
xchg
jbe
clc
add
cmpsl
aaa
mov
add
jecxz
sbb
inc
or
icebp
mul
fs
clc
jmp
xchg
or
negb
arpl
inc
orb
adc
lret
flds
xchg
xor
lret
and
mov
repz
int3
pop
fnstsw
sub
and
xchg
fdivrs
test
mov
jns
lea
pusha
movsb
adc
adc
jle
sub
imul
rorb
cwtl
mov
push
sti
fisttps
int3
ficompl
pop
andb
outsl
and
adcl
or
out
or
xor
shlb
imul
popf
xchg
mov
aad
xor
pushf
les
ss
sbb
pushf
shl
imul
std
not
mov
mov
insb
rclb
and
adc
aam
mov
cmc
loopne
mov
xchg
sbb
flds
sub
out
fistps
orb
loop
push
push
fisubrl
jnp
pop
xchg
nop
stos
nop
mov
pop
pop
xchg
movsb
xor
inc
call
lret
lds
fucomip
pop
out
mov
int3
jle
xchg
dec
insl
mov
loop
sub
add
bound
nop
mov
adc
test
icebp
data16
outsl
rcrb
sbb
xor
mov
testl
jl
and
inc
in
cli
jp
pop
sti
add
pop
fsts
movsl
addr16
jmp
jbe
aaa
jbe
nop
dec
sub
sbb
lcall
mov
cmp
fnstenv
clc
stos
cltd
das
bound
arpl
sbb
fcoms
pop
scas
movb
mov
ficomps
jecxz
pop
fsubrl
cwtl
mov
mov
div
mov
insb
add
sbbl
push
inc
js
xchg
insl
fisubl
lods
ss
mul
icebp
fnstsw
aad
das
adc
fwait
movsb
cmpsl
jl
inc
add
sar
mov
jns
mov
mov
ror
aaa
nop
mov
jl
or
popf
mov
lret
arpl
stos
stos
fcompl
in
popa
pop
rcr
cwtl
cld
lds
test
cmp
leave
push
ret
mov
insb
into
popa
push
xor
inc
or
push
lods
add
fistpll
testl
cli
imul
sub
sarb
out
bound
sub
pop
and
fstpl
daa
dec
clc
mov
popf
xchg
ret
add
add
and
incb
sub
jno
push
movsl
insl
shr
orl
sub
repnz
popf
test
mov
rorb
mov
mov
icebp
fdivs
jecxz
test
imul
movsl
cwtl
xchg
mov
ds
int3
adc
popw
pop
mov
cwtl
mov
lret
mov
xlat
sahf
xor
or
adc
jb
into
push
in
cmp
mov
push
repz
sahf
imul
jecxz
mov
jl
push
mov
pop
sbb
xchg
pop
jecxz
push
adc
dec
inc
aad
mov
movsl
cmpsl
mov
xlat
push
cmp
xchg
jg
sbb
into
scas
inc
outsb
hlt
jp
mov
pop
xchg
inc
jnp
fwait
mov
nop
insl
int
cmc
hlt
jbe
rorb
push
cmp
add
rcr
movsb
dec
and
shrb
or
xor
sbb
jo
fsubs
into
fmuls
jo
sahf
sbb
data16
jbe
cs
scas
in
xchg
adc
or
ret
repz
inc
cmp
subl
push
pop
push
xchg
emms
push
ljmp
and
imul
ror
inc
inc
mov
mov
mov
into
inc
pop
cli
inc
add
popa
ret
cmp
nop
imul
icebp
fsub
lea
insl
cli
stos
cs
int
jno
fisubs
mov
je
and
xor
mov
xor
cmpsl
push
jno
jp
push
lret
addl
push
jecxz
mov
ds
std
xchg
ret
fdivs
push
ss
repz
xchg
iret
inc
add
lds
ficompl
xchg
pop
sub
aad
dec
aaa
push
test
imul
pop
out
clc
out
push
hlt
dec
lods
stc
cmp
loopne
sbb
pop
push
mov
pop
in
shrb
lods
fisubrl
jl
aas
mov
add
flds
add
hlt
pop
lea
sbb
out
ja
leave
ljmp
mov
leave
mov
test
rol
icebp
xchg
repz
movsb
loop
xor
repz
test
ret
push
imul
cs
xchg
gs
daa
jne
outsb
and
sub
jae
xchg
mov
ljmp
and
call
lahf
dec
push
data16
jmp
pop
jnp
movsl
mov
sbb
or
aas
cli
jg
sub
push
cli
les
subb
jmp
adc
data16
test
push
clc
jl
iret
mov
xlat
xor
popf
vandnps
mov
push
std
iret
lret
fsubrs
dec
pop
rcrl
or
das
inc
inc
sti
add
mov
movsb
cld
popf
jle
xchg
xchg
adc
push
out
push
cwtl
scas
push
mov
pop
lret
popf
aam
push
nop
xchg
int
adc
es
xor
cmpsb
cmpsl
faddl
jne
mov
xor
mov
fcmovb
aas
out
jne
pop
out
and
mov
cmp
and
cmp
test
push
addb
or
jmp
adc
outsl
mov
fistpl
fstpl
bound
xor
add
dec
aaa
data16
jmp
cmp
aad
push
mov
sbb
adc
sub
fistps
jbe
shll
jl
lds
xchg
faddl
idivb
leave
or
mov
adc
push
test
nop
aad
push
sub
mov
xchg
mov
push
jae
jmp
lea
xor
inc
adc
ficoml
mov
sbb
sub
jecxz
cmpl
xor
jmp
les
mov
fnsave
mov
jp
nop
push
je
jmp
jmp
loope
out
push
add
cld
inc
popf
pop
mov
lds
ja
inc
xchg
daa
test
sahf
pusha
imull
fstpt
fsubrs
ficomps
jbe
clc
mov
cltd
push
mov
pop
inc
mov
loopne
rorl
orl
xchg
or
mov
das
xchg
inc
adc
ss
fiaddl
jnp
xchg
popf
or
sti
shlb
sar
in
cmp
in
mov
mov
fnstcw
addr16
xchg
sbb
inc
pop
popf
xor
inc
lcall
jmp
jbe
iret
jbe
je
or
fisttpll
lsl
das
cmp
sbb
loopne
pop
xlat
xor
repz
rorb
gs
sub
sbb
ds
cmp
cld
outsl
inc
xchg
xchg
sub
andl
xor
aaa
push
cmp
sbb
and
stos
loop
sti
int3
mov
mov
js
adc
pop
lahf
add
dec
imul
cmp
testl
adc
popl
push
stos
inc
in
mov
cmpsl
mov
shlb
ss
arpl
push
out
ret
lea
fisubrs
mov
adc
sub
sub
jle
mov
xlat
mov
cmp
shl
outsl
daa
cmp
pushl
xor
push
adc
mov
imul
rolb
stc
jmp
jp
push
xchg
bnd
jge
mov
popa
push
repz
in
sub
cwtl
add
mov
sbb
mov
cmpsb
popa
and
or
ds
xor
cmp
sbb
data16
clc
or
push
jno
mov
stos
sbb
adc
je
test
mul
jno
sbb
cmpsb
mov
roll
into
aad
and
test
mov
adcl
mov
jns
repz
fwait
pop
dec
pop
das
or
out
sbb
in
dec
rcrb
data16
mov
adc
lcall
test
cwtl
add
dec
mov
lcall
mov
add
or
cli
dec
mov
inc
repz
int
sbb
imul
in
pop
xorl
push
jl
jl
ss
ds
lahf
sub
ljmp
cmpsl
sbb
inc
push
leave
mov
add
cld
xchg
lods
adc
push
jmp
fninit
cmp
bound
mov
orl
fcoms
fstpl
lea
cmpps
mov
jl
ret
mov
ret
pushl
xor
ss
xchg
cmp
xlat
call
sbb
mov
pop
sbb
gs
xchg
dec
sub
rorl
add
push
mov
push
push
popa
clc
insl
jns
add
bnd
sbb
lret
outsb
inc
hlt
stc
ss
mov
inc
xchg
arpl
rorb
push
mov
ja
mov
pop
mov
into
fcompl
cmp
lock
and
fs
sbb
push
ret
mov
xor
push
arpl
adcl
add
sbb
ss
gs
mov
inc
sub
call
mov
fisttpll
adc
and
xchg
mov
adc
mov
adc
ret
in
cmpsl
xchg
out
jmp
inc
mov
test
inc
mov
cs
jo
out
or
xchg
cmp
add
fldt
shrb
mov
mov
dec
shlb
ljmp
lret
jmp
mov
jnp
inc
cmp
imul
aad
or
xlat
sub
or
adc
pop
push
out
shll
cli
mov
loopne
mov
mov
mov
jp
dec
xchg
ss
adc
aas
jbe
xchg
gs
add
mov
out
lods
lea
jb
dec
fcomps
sbb
push
stos
inc
and
repz
stc
cmp
xchg
call
rorl
popa
jb
inc
mov
push
push
sbb
addl
pushf
lahf
out
pop
std
jns
data16
xchg
dec
sbb
push
inc
scas
xor
movsl
push
dec
xchg
xchg
lahf
mov
in
cmp
aad
sbb
shlb
fildll
sbb
xchg
and
ss
dec
clc
fiaddl
jnp
inc
adc
inc
cld
jno
loop
cltd
dec
call
push
cmp
add
push
xor
aad
roll
push
rclb
arpl
xor
out
test
bound
jge
inc
sbb
mov
xchg
xchg
jge
imul
leave
dec
lahf
inc
jle
cli
pop
pushf
adc
in
ds
pop
cmp
cmp
jmp
mov
movsb
adc
scas
mov
mov
leave
imul
rcl
jg
cmc
mov
cmc
xor
xlat
aaa
fldenv
cld
fistps
pushf
lret
jb
lock
data16
cmpsl
add
cmp
lea
es
pop
es
lds
sahf
hlt
rcrl
imul
ret
jne
add
out
inc
adc
push
cmp
sbb
das
mov
in
mov
das
sub
pop
jg
hlt
lret
push
sub
es
push
dec
xchg
loopne
mov
popf
mov
push
out
push
cmp
lcall
sbb
xchg
out
leave
cmc
in
push
sub
xchg
xlat
dec
lock
or
pop
and
jmp
push
ret
pop
cmp
mov
sbb
pop
inc
push
cs
repnz
inc
ficoms
jl
lock
int
xchg
cmc
aas
out
lods
adc
xor
jns
dec
push
in
mov
cmpsl
out
and
gs
aad
enter
or
dec
cmpb
stc
push
mov
call
sbbb
fsts
sar
es
and
push
fstl
push
and
ja
icebp
inc
fldenv
dec
and
or
faddl
ret
add
pusha
push
jge
xor
pop
pop
jg
inc
or
mov
sti
cld
pushf
mov
jg
sbb
mov
xchg
pop
dec
popf
ret
std
inc
insb
icebp
pop
clc
xor
das
sbbb
int3
xchg
fistl
adc
mov
mov
imul
dec
inc
push
xor
pop
mov
pop
scas
bound
into
fiadds
xchg
aaa
pop
jne
mov
sub
les
insl
pop
sbb
test
add
cmpsb
in
shlb
mov
pop
mov
xchg
les
aas
sub
lcall
and
fnstsw
icebp
fcomp
mov
fisubs
or
push
mov
in
mov
adc
std
ljmp
xchg
into
sbb
jbe
push
fnstsw
mov
or
aas
push
mov
mov
cwtl
push
and
push
or
ret
imul
push
outsl
sub
inc
push
push
push
xchg
ljmp
imul
loope
mov
std
idiv
popf
cwtl
imul
jae
pop
dec
cmpsl
ds
and
or
or
dec
pusha
jmp
ljmp
and
cmp
and
mov
sbb
enter
lcall
and
pusha
mov
mov
mov
out
xor
cmc
add
lock
mov
loopne
jmp
es
roll
cld
jmp
cmp
sbb
dec
push
jmp
aas
stc
add
out
or
inc
inc
fwait
movsl
inc
add
xchg
loop
dec
adc
sub
adc
call
mov
lcall
aas
adc
cmp
pop
jge
mov
movsb
imul
fsubl
imull
mov
push
loope
ljmp
fwait
sub
sbb
adc
dec
mov
scas
pop
sbb
xchg
fisubrs
loop
xor
sub
lds
shll
sub
fdivs
daa
lds
test
cmpsb
in
inc
mov
cmp
pop
out
mov
outsl
mov
jno
stc
repnz
push
mov
mov
cltd
std
inc
lock
mov
leave
fcmove
ds
jns
mov
iret
in
mov
mov
cmp
fs
inc
clc
push
outsb
into
sub
add
sti
and
dec
lods
ja
rolb
pop
and
dec
movsl
mov
xor
stc
daa
pop
or
fsubrs
or
xor
jns
sbb
pop
ret
xor
pminsw
mov
cs
jno
push
in
pop
sbb
mov
jge
loopne
and
mov
cmp
lock
cmp
mov
push
mov
push
sarb
in
mov
cld
cmp
xor
sbb
movsl
sub
movsb
scas
repz
adc
push
daa
cmc
inc
or
pop
addb
add
pop
mov
mov
mov
xchg
std
fnsave
mov
out
or
pusha
jle
push
jl
negl
int3
jbe
clc
ret
mov
in
inc
cmp
push
lods
push
xchg
js
cmp
inc
cmp
dec
cmp
and
stos
xor
test
mov
jecxz
jb
cltd
or
push
pop
aas
mov
loope
push
stos
xor
ret
sbb
sub
inc
jbe
lods
jg
mov
mov
fistpll
adc
cld
call
xor
xchg
imul
cmp
pop
inc
pop
sbb
ret
aaa
loope
stos
mov
scas
mulb
loope
clc
out
movsw
scas
mov
clc
cli
fisubrl
pusha
outsb
xorl
popf
call
fiadds
movaps
inc
pusha
and
popf
jg
mov
xchg
and
xor
nop
fmull
dec
aas
or
shrb
and
xchg
cmp
sub
adc
push
xor
pcmpeqw
fnstcw
and
push
cmpsb
mov
in
sbb
jns
mov
mov
sub
push
mov
xor
ss
inc
mov
imul
test
dec
sbb
mov
push
pop
lods
push
push
outsl
cwtl
adcl
shrl
adc
adc
pop
cs
fcoms
or
mov
push
imul
dec
sbb
cmpsb
fdivp
dec
mov
scas
push
jnp
push
idivb
mov
imul
push
mov
add
jmp
sbb
add
pop
jb
mov
xchg
jl
int
mov
dec
push
adc
cmc
mov
xchg
cmp
cmp
sub
sub
add
sub
pop
aad
inc
inc
jle
mov
call
js
pop
push
mov
aam
mov
in
inc
add
mov
dec
popa
mov
adc
push
nop
sub
decb
dec
mov
mov
jecxz
sub
fstps
nop
lods
jecxz
mov
pop
fwait
stc
stos
dec
jo
loopne
cmpsl
lcall
je
outsl
push
rorl
sbb
mov
adc
outsb
fxch
sbb
lods
cli
mov
daa
and
and
and
and
pop
add
int
je
mov
xchg
add
js
push
outsb
test
push
push
mov
addl
aaa
pop
pop
aaa
push
and
fmul
xchg
xchg
jle
mov
jns
hlt
enter
aam
clc
aas
outsl
and
mov
fimull
loop
mov
lcall
fcomp
imul
adc
mov
sbb
call
das
shlb
sbb
adc
mov
outsb
add
clc
aaa
sbb
xorl
inc
jnp
out
or
mov
push
bound
aaa
add
test
jg
pop
xchg
cmp
pop
xor
bound
dec
lods
in
mov
lods
pop
xor
lods
daa
jns
cmpsb
loope
cmc
mov
ficomps
inc
add
jl
insb
sbb
push
adc
cmp
add
and
rolb
cmp
cmp
lcall
fisttpl
mov
push
mov
jno
mov
in
daa
pop
jb
lret
cmpsl
xchg
push
call
xor
xor
arpl
shll
pop
sbb
mov
popa
sbb
mov
pop
mov
cmp
js
stos
push
aaa
or
cli
in
mov
stos
popf
aam
sub
ss
les
sub
xor
jl
je
cmp
mov
inc
dec
aas
adc
or
push
pop
inc
test
sbb
icebp
fcoms
dec
rolb
mov
pop
mov
and
xchg
adcb
es
in
insl
jns
in
rcrl
inc
lods
jo
mov
rcll
scas
and
mov
pop
jecxz
ljmp
cmp
mov
lret
outsl
sub
test
movswl
sub
mov
jmp
and
fldenv
cmp
test
or
lret
dec
sbb
jno
mov
mov
loop
loope
fs
xchg
into
jmp
ret
bound
aad
int
ljmp
cmp
mov
test
lea
sti
xor
cmpsl
pop
push
sbb
decb
inc
xchg
out
xchg
jecxz
lds
push
cli
lcall
mov
jle
outsb
es
mov
pop
sbb
add
fstl
mov
shl
jae
sti
imul
das
xchg
push
jae,pn
mov
jp
xor
mov
imul
adc
repz
repz
movsl
inc
mov
cmpsl
dec
or
rcr
inc
movsl
sub
sbb
stos
and
mov
jle
fnstcw
adc
repnz
and
fwait
ret
ret
jge
shrb
daa
stc
pop
lds
test
in
lods
shll
mov
mov
ret
jae
nop
xchg
test
dec
pop
mov
fs
loopne
or
cmp
xchg
xor
stc
rcrb
ss
pop
mov
fstl
mov
fnsave
pop
outsb
mov
fnstenv
jp
fidivl
fdivr
mov
rorb
fdivrp
cld
iret
push
out
mov
push
imul
or
fisubrl
add
scas
repnz
push
leave
cmpb
push
movsb
push
in
loopne
mov
sub
idivl
xor
cmpsl
inc
mov
mov
ret
dec
ljmp
cli
xor
adc
push
dec
scas
mov
sbb
mov
push
sti
mov
dec
test
rolb
aas
nop
test
fwait
aad
in
imulb
and
jae
aas
inc
jne
outsb
mov
add
mov
es
rorl
xchg
cmpsb
mov
mov
mov
mov
shl
push
pop
xchg
mov
stos
and
pop
push
nop
and
mov
sbbl
dec
and
inc
add
rorb
test
mov
add
inc
fdivrl
xchg
mov
das
cmp
mov
push
cld
leave
cltd
inc
xor
hlt
pop
outsl
xchg
lea
xchg
xchg
and
sbb
jge
dec
add
jnp
stos
dec
add
xlat
mov
jne
mov
testb
movl
stos
loop
shrb
jns
pop
xor
or
lret
pop
outsl
jge
xchg
cld
mov
push
outsl
nop
cmp
cmc
pop
outsl
xchg
out
jl
mov
mov
bound
mov
jmp
incl
popa
push
fcmovnbe
or
fisttpl
orb
inc
sti
lret
push
fucomp
ss
aaa
sbbb
xor
mov
pop
sub
lret
das
and
rorl
push
cwtl
pop
into
in
sti
inc
push
loop
jmp
stos
sub
pushf
mulb
adc
push
mov
pusha
or
sbb
in
cltd
dec
shlb
lods
sbb
cmp
fwait
xor
movsl
lret
push
sub
pop
test
mov
push
in
shl
cld
aad
or
sbb
cwtl
mov
movb
jmp
js
out
inc
mov
mov
jle
dec
sub
ret
xor
andb
aaa
xor
cmp
outsb
js
incl
push
jl
sub
dec
mov
or
xor
dec
jmp
sbb
inc
out
mov
dec
jg
pop
enter
and
xlat
out
xchg
cwtl
sbb
dec
inc
outsb
inc
movb
inc
pusha
xor
popf
xchg
mov
addb
gs
and
test
jmp
in
push
aaa
das
adc
push
test
mov
jns
outsb
xchg
cmp
iret
into
leave
pop
les
pop
xlat
js
pop
ljmp
cmp
out
adc
xchg
in
js
leave
outsb
cmpsb
dec
les
jg
out
out
add
xorl
fcomp
jne
sahf
call
rcl
rcl
test
mov
sbb
push
mov
pop
xor
jge
out
push
je
push
clc
push
pop
andb
lret
mov
test
xchg
sbb
pop
out
dec
mov
je
adc
or
mov
fsts
je
stos
shrb
cmp
je
jae
jns
mov
jns
stos
inc
call
js
lret
mov
add
inc
add
in
adc
clc
push
and
shll
inc
add
fwait
xchg
mov
mov
out
mov
andb
cmp
shlb
push
jb
mov
mov
popa
or
and
xchg
jnp
cltd
add
mov
sbb
lods
add
jmp
in
insl
mov
call
jnp
idivb
pop
repnz
xchg
sbb
xchg
jno
test
test
jle
inc
cwtl
daa
cmp
and
and
fnstcw
jmp
xchg
mov
push
fidivrs
std
popf
jmp
outsl
jg
xlat
enter
add
data16
push
mov
dec
arpl
lahf
jl
test
or
lcall
jno
out
jle
fmul
push
xchg
add
cwtl
int3
push
mov
sbb
pusha
mov
fdivrl
jne
dec
lcallw
repz
or
and
jno
cs
mov
xchg
mov
xor
cmp
push
jmp
pop
clc
sbb
mov
imul
pop
add
mov
pop
push
jne
add
pop
stc
les
jg
mov
sbb
push
cmpl
loopne
sti
push
xchg
fs
cmp
jo
dec
xchg
lds
out
testb
add
cmpsb
cld
add
sub
repnz
decb
cmp
aaa
std
sub
addr16
pop
idiv
clc
out
jg
xor
xor
dec
loopne
dec
sbb
outsb
ret
mov
xlat
push
mov
mov
jl
aas
sbb
int
rcrl
dec
sbb
and
add
int
pop
sub
shl
fldl
jge
cmp
daa
aam
adc
loop
in
stos
loop
pop
mov
cmpsb
push
xchg
out
add
inc
movsb
pusha
test
dec
cmpsl
mov
sub
push
xor
stos
mov
icebp
rcr
dec
xor
arpl
movsb
add
mov
dec
nop
jmp
mov
push
cmpl
mov
repnz
jo
cli
or
in
dec
daa
push
ret
push
adc
sub
push
sub
jne
shrb
xchg
js
js
jae
mov
mov
xchg
jge
push
dec
mov
adc
xchg
cmp
fcmovb
hlt
xor
push
or
test
test
xor
push
ds
or
gs
leave
fiadds
out
mov
fsts
mov
sti
xor
cmc
test
sub
sarb
jae
push
sbb
fwait
imulb
loopne
adc
ret
enter
inc
sbb
lea
pop
rclb
movsl
lds
jb
inc
mov
or
loope
or
cmp
ss
rorl
insb
sub
mov
xor
rep
ret
inc
insl
or
inc
jbe
mov
dec
cmp
ja
mov
ljmp
and
fs
pop
lea
stos
adcb
pop
fcmove
mov
rcll
sbb
out
and
insl
addr16
mov
loopne
cmpsl
push
add
xchg
inc
push
mov
xorb
aas
push
mov
mov
scas
jne
bound
lcall
jo
cs
pop
or
jbe
mov
into
mov
jl
out
jle
test
mov
xor
fstps
inc
or
das
push
pop
test
or
mov
sub
xor
jbe
sarb
enter
sbb
sub
add
xor
pop
xchg
add
imul
mov
add
jo
add
xchg
lods
jno
inc
das
push
cmp
push
scas
mov
pushf
mov
bound
dec
cli
add
xor
cmpsl
sbb
popf
push
sbb
je
and
lcall
fdivr
fildll
sub
mov
cmp
pop
jno
lcall
shlb
loop
jbe
inc
roll
mov
lock
lahf
adc
push
pop
ret
sub
mov
mov
add
int3
testl
pop
jb
out
adcb
mov
out
scas
inc
push
jle
roll
dec
repnz
movsb
mov
sbb
repnz
loopne
and
stc
hlt
iret
into
outsl
fcompl
das
pop
jbe
pop
popf
jecxz
sarb
test
adc
ret
add
mov
out
dec
shll
mov
lret
mov
xor
pop
jae
mov
sub
jge
js
xor
adc
and
mov
push
fisubrs
xor
lcall
mov
in
sub
xor
sbb
andb
jle
clc
jl
clc
and
fs
clc
dec
jb
gs
aas
sbb
xlat
push
pop
sub
cltd
or
mov
xor
push
outsl
jge
pop
jae
xchg
add
fsubs
adc
repnz
sarb
push
jge
mov
addb
movsb
mov
gs
push
xchg
notl
push
push
int
imul
inc
fcoml
cmp
dec
add
mov
int3
sbb
mov
mov
fmul
lcall
aad
inc
dec
and
orl
add
xchg
push
xchg
add
and
call
jbe
iret
icebp
aaa
ljmp
or
sbbl
jne
loope
adc
mov
jp
mov
adc
out
int3
sar
rcr
stc
stc
scas
jmp
mov
sbb
sub
inc
out
pop
ret
call
cli
data16
scas
daa
adcb
inc
add
jmp
les
cli
xchg
inc
int
or
fldenv
mov
xchg
test
xor
jge
cmp
enter
bound
cmp
shlb
repnz
test
scas
jb
fstpt
mov
sub
mov
push
mov
mov
dec
je
cli
mov
adc
mov
inc
mov
out
leave
sahf
mov
jb
lcall
fdivrs
sbb
ja
into
sbb
sub
xchg
test
loop
xchg
or
xchg
jbe
cwtl
iret
ret
js
lahf
es
mov
rcrl
fs
add
xchg
inc
icebp
pop
aad
xchg
je
ja
push
cli
mov
sbb
cmpsb
movsbl
bound
outsl
mov
jp
mov
add
frstor
sbb
inc
or
pop
insl
sub
adc
sti
mov
pusha
mov
popa
popf
std
adc
or
insl
fwait
stos
stos
lock
mov
daa
xor
xor
and
test
shll
adc
mov
mov
push
mov
icebp
pusha
and
icebp
dec
inc
push
enter
or
jge
mov
mov
push
xchg
je
test
jmp
orb
inc
dec
xchg
mov
adc
dec
xor
xor
xor
dec
aas
sub
out
sahf
xor
ret
pop
jge
rorl
jne
ds
inc
divb
sub
sub
mov
cli
andb
lahf
shll
stos
xor
cmp
out
call
mov
push
mov
das
shll
sahf
pop
lret
or
rcll
stos
xchg
jp
jg
push
cmp
idiv
mov
jo
cltd
xlat
fwait
call
pop
sahf
cmpsl
jmp
xchg
cmp
shld
test
push
mov
mov
fiaddl
aam
loope
push
push
push
jnp
daa
sbbl
mov
jmp
fmul
js
jo
repz
jo
jg
gs
pushf
ds
lcall
jmp
jbe
or
repz
cmc
add
popa
ficoms
mov
jns
xor
imul
pop
sbb
jecxz
scas
rolb
mov
jnp
data16
ret
je
in
and
and
jp
negb
push
iret
lock
mov
xchg
es
cmp
bound
fs
lods
mov
mov
std
out
ds
aam
xor
pop
mov
jg
lock
mov
stos
or
sti
or
pop
iret
and
add
nop
sub
pop
xor
mov
shll
inc
jb
dec
inc
data16
popa
imul
lock
mov
dec
incl
out
lods
in
test
fsubs
mov
add
jle
lret
mov
inc
mov
or
sarl
and
or
add
mov
pusha
stos
das
jl
ljmp
sbb
mov
sbb
clc
cs
pop
mov
sub
xlat
icebp
icebp
ds
pop
stc
mov
out
or
dec
mov
test
and
mov
movb
and
lea
add
mov
cmp
rolb
sahf
sub
mov
aad
mov
pop
add
or
and
sub
mov
pop
fwait
add
iret
cmp
mov
and
xor
fisubrl
repnz
pop
dec
pop
addr16
and
mov
jge
leave
loop
outsl
in
cmp
movsl
push
mov
out
js
roll
mov
push
out
lods
call
mov
mov
arpl
shlb
stos
aam
ds
nop
mov
pop
or
ss
pop
sbb
mov
rcrb
sarb
andb
jbe
xchg
pop
ret
push
movsb
pushf
cmp
movsb
jnp
add
out
icebp
xchg
or
in
lock
adc
fmull
sldt
cmpsb
or
std
sarl
jb
dec
les
and
sub
mov
inc
fstps
lret
xor
push
test
push
dec
adc
mov
dec
adc
movsl
mov
insb
daa
and
and
outsl
hlt
repz
mov
mov
cs
add
shll
aam
lods
jmp
in
cmpsb
test
fldl
jae
pop
xchg
mov
push
mov
inc
or
int
sarl
dec
or
scas
rclw
push
jnp
adc
push
cmc
mov
mov
adc
xlat
in
stos
test
jge
inc
dec
jp
mov
cmp
sbb
cmc
jp
aam
push
push
or
or
or
mov
fcoml
adc
and
xchg
jno
adc
sub
push
mov
jne
pop
enter
scas
xlat
imul
out
shr
lret
hlt
movsl
xchg
pop
mov
mov
test
int3
repz
pop
mov
mov
adc
mov
xlat
xor
and
jnp
cli
scas
in
adc
daa
pop
cld
pop
add
cld
bound
dec
imul
sub
sarb
add
mov
or
fidivrl
fst
xchg
rcr
in
test
push
cmc
sbb
jecxz
mov
dec
jp
test
jne
les
outsl
pop
lock
aaa
mov
mov
rcrl
aad
sbb
cmp
push
sub
test
sub
adc
mov
lock
sub
mov
mov
add
mov
test
pop
mov
insl
jmp
jp
adcl
dec
adc
stos
jb
dec
jp
xor
sub
repnz
mov
lock
xor
or
pop
or
adc
dec
jnp
cltd
scas
lcall
sti
push
subl
pop
dec
mov
dec
cmp
mov
sahf
cltd
dec
and
or
in
cmp
fistpll
inc
lods
fwait
andb
fucom
sbb
rorl
add
cmp
mov
dec
dec
mov
jae
cmp
fadds
push
in
lock
jns
loop
and
outsl
nop
pop
add
inc
into
or
int
xor
or
int
jns
int3
xchg
cmp
lret
fsubrp
enter
adc
xor
push
sub
pusha
data16
cmp
or
push
out
mov
subl
sub
loop
jg
jae
cltd
inc
aad
and
push
inc
hlt
scas
mov
outsb
adc
pop
popa
loopne
fninit
add
test
mov
and
cmp
mov
xorb
test
mov
add
fistpll
inc
adc
and
or
scas
adc
mov
push
jbe
xchg
jae
out
mov
lea
dec
jg
push
fisubrl
sbb
mov
or
sbb
mov
stc
movsb
repnz
push
adc
ret
cmpsb
daa
and
jne
jg
jno
sub
mov
js
pop
lock
sub
jp
adc
scas
dec
divl
stos
lods
cs
xchg
or
ds
xchg
repnz
inc
out
mov
in
add
stos
inc
sar
leave
add
mov
pop
pop
jge
test
lret
mov
cmp
xor
int
popl
scas
add
pop
in
xlat
cwtl
daa
sub
rcll
rcll
fnstenv
hlt
lods
cld
lahf
xor
jmp
inc
push
jmp
dec
fstpt
incb
test
loope
das
xor
arpl
xorl
adc
lahf
and
andl
pushf
pop
jno
shl
int
push
mov
push
movsl
aas
jg
aaa
push
mov
cmp
fsubrs
ja
shrl
adc
mov
xor
lea
mov
push
subb
push
test
es
gs
or
jle
adc
push
cmp
lods
pop
mov
pextrw
gs
xchg
mov
test
sbb
jl
jb
jb
std
dec
cmp
mov
push
movsl
repz
or
push
dec
arpl
fnsetpm(287
pop
xchg
std
sub
or
jmp
cmpsl
jle
and
addr16
xchg
dec
unpcklps
inc
shlb
pushf
enter
xchg
pusha
xchg
or
xchg
test
fnstsw
aad
dec
lahf
std
rorl
cltd
mov
jmp
mov
outsb
test
ljmp
and
gs
or
adc
jmp
xor
aam
ss
fwait
out
xchg
sahf
fcmovbe
addb
and
xchg
or
fcoml
mov
fmuls
cs
push
push
sub
mov
jmp
repz
lret
bound
sbb
sahf
clc
ret
or
aad
cmc
and
xor
sbb
mov
subl
loope
loopne
adc
test
sarl
xchg
sti
rol
fwait
jne
jnp
push
icebp
adc
pop
les
and
cmpsb
mov
add
pop
rorl
jmp
arpl
or
sbb
mov
addr16
popf
or
push
fwait
lods
idivl
xchg
hlt
leave
lds
push
or
or
iret
test
inc
mov
rclb
lock
out
jnp
cmc
mov
repz
mov
cmp
mov
aaa
mov
test
std
sub
mov
sbb
inc
cmc
outsl
or
and
dec
stos
adc
and
add
rcrl
dec
fsubrs
ja
mov
add
mov
outsl
mov
dec
push
scas
adc
inc
mov
sbb
pop
insl
test
pusha
adc
fstpl
jecxz
add
mov
test
in
dec
or
daa
dec
inc
push
insl
pop
int
mov
insb
xchg
mov
jle
mov
mov
iret
jecxz
xor
lret
mov
cmp
mov
nop
movsb
aaa
jnp
sbb
push
roll
xchg
dec
dec
mov
sub
mov
icebp
outsb
ds
negl
dec
dec
xlat
hlt
insl
pop
jnp
call
das
fidivrl
jbe
inc
sahf
xor
ret
dec
lds
mov
pop
jbe
xchg
or
lret
sbb
std
mov
push
in
cmpsb
cmp
inc
leave
push
sti
xlat
xchg
mov
enter
fldenv
pusha
xchg
jbe
ja
push
cs
push
insl
jbe
push
push
int3
pushf
vpackssdw
cmc
push
mov
sbb
mov
cmc
inc
cmp
push
inc
push
cwtl
add
loopne
xchg
in
cli
loop
pop
aas
push
ljmp
test
sbb
test
out
outsl
scas
jne
pop
lock
sub
or
add
sub
and
fcomps
cmc
addr16
jb
lret
ret
test
jo
pop
lret
jb
faddp
and
adc
out
inc
or
mov
pop
cli
sahf
xlat
add
adc
data16
cmp
fsubs
pop
pop
rclb
mov
inc
stos
jg
mov
push
insb
scas
outsl
insb
stos
mov
cltd
in
mov
mov
pop
lea
jns
sub
arpl
push
cmp
ja
push
xor
loopne
fisttpll
in
add
jge
test
fistl
loope
es
insl
jmp
lods
subl
shr
cmp
push
pop
fs
push
ss
sbb
data16
jecxz
and
aas
mov
hlt
adcl
xor
fwait
es
insb
test
movsl
mov
arpl
andl
and
leave
add
mov
les
or
cltd
out
fdivrs
sbb
lahf
ret
in
jne
xor
or
add
push
cmc
sub
aas
sub
stos
fwait
aad
jecxz
xor
and
xchg
jno
loop
dec
push
mov
dec
lea
outsb
jbe
lock
mov
out
adc
pop
mov
jg
and
pop
cmpsb
mov
xchg
adc
sbb
sub
out
or
fwait
inc
mov
idivb
ret
push
jge
out
push
mov
cmpsb
mov
xor
sbbb
pop
push
scas
cs
mov
and
xorl
imulb
xlat
mov
xor
in
mov
lods
inc
pop
jg
push
lahf
mov
movsb
sub
jo
loop
je
test
dec
adc
jae
and
pop
sti
in
out
push
testl
pop
add
test
es
jle
jecxz
dec
imul
xor
jae
pop
loopne
xchg
jmp
pop
out
add
aaa
and
cmc
jle
dec
xchg
imul
nop
or
push
xchg
push
pop
lahf
and
sarb
dec
or
and
push
jge
leave
push
jnp
lret
inc
adc
push
mov
scas
push
icebp
std
mov
arpl
cmc
jge
cmp
aam
xchg
pop
fwait
pop
pushl
lcall
mov
jge
mov
jle
cwtl
sub
push
rorb
shll
fsubl
les
mov
cli
fwait
sarb
jne
fmuls
pop
xchg
cmp
push
xchg
nop
in
test
clc
jp
fistl
scas
and
xchg
std
pop
cmp
clc
jnp
iret
pop
loop
push
inc
xor
ret
mov
add
cwtl
xchg
imull
xchg
push
mov
bnd
aaa
cmpsl
loopne
sub
push
lods
lds
cli
mov
arpl
or
and
fisubs
mov
push
idivb
and
pop
dec
stos
adc
dec
inc
mov
cmp
pop
sub
adc
das
lahf
es
mov
and
test
dec
mov
add
test
or
outsb
mov
mov
loope
in
les
les
pop
outsb
addr16
xcrypt-cfb
cmpsl
and
outsl
jno
cmpl
xchg
mov
lret
mov
or
jl
adc
add
pushf
mov
cld
and
pop
pop
push
rorl
add
xor
popfw
or
and
push
loop
add
negl
jle
in
sub
stos
jle
cmp
clc
incb
push
jl
sub
scas
out
std
repz
divl
nop
mov
inc
cmpsb
adc
add
jge
xorl
and
test
adc
dec
adc
fsubs
leave
fs
dec
out
xlat
ss
add
inc
sbb
xchg
lcall
sbbb
xchg
sbbl
xchg
sub
aad
jmp
fildll
pop
adc
pop
sbb
clc
jp
cli
rcr
sub
or
xchg
push
dec
or
jp
pop
inc
adc
push
outsl
out
fwait
mov
bound
imul
imul
jo
add
enter
jle
into
lcall
sbb
out
test
mov
add
cmp
repz
lock
inc
shl
inc
cli
push
cmp
scas
addb
int3
sbb
adcl
dec
sub
lahf
pop
inc
aas
cmp
adc
jae
lea
out
test
jle
push
mov
mov
mov
aam
pop
test
pop
adc
mov
dec
sbbb
sub
in
scas
jmp
inc
out
xor
hlt
cld
mov
lret
push
and
ljmp
sub
int3
jg
aam
inc
adc
stos
les
add
repz
ret
popf
inc
test
xchg
ret
or
or
loop
test
stos
cmp
jge
cld
adc
adc
add
gs
scas
in
hlt
out
xlat
call
xchg
mov
lds
cmp
test
int
mov
and
lret
lods
loope
rolb
addl
out
dec
in
and
push
cltd
divl
pop
pop
aad
inc
loop
ss
pop
dec
ss
xchg
divl
shlb
repz
mov
clc
imul
leave
inc
popf
sbb
add
fyl2xp1
pop
push
fwait
mov
jnp
mov
mov
add
stc
cs
scas
cli
sub
and
push
mov
cmp
lahf
vprotw
addb
jg
add
sbb
pop
cmp
popf
mov
jno
and
jmp
scas
aam
pop
dec
mov
cmp
adc
fwait
jnp
icebp
call
scas
pop
test
dec
mov
sub
test
xor
pop
rorl
cmpsl
stos
push
mov
test
pop
mov
push
inc
clc
mov
popa
sbb
jp
mov
mov
popa
mov
fdivs
popa
sub
xchg
push
lea
in
cmp
push
into
test
insl
out
cld
cmp
push
stos
gs
jp
lret
xchg
iret
adc
mov
daa
cmp
daa
add
push
cmp
lods
dec
enter
cli
test
ss
jo
insl
jge
iret
js
gs
lret
ret
fcom
dec
xchg
call
lock
add
mov
mov
fisttps
and
and
xchg
jecxz
das
jno
pusha
sahf
pop
ficomps
cli
loopne
cli
push
mov
out
movsl
cmc
sbb
in
xor
shll
dec
mov
mov
push
icebp
aad
rorl
inc
and
jp
movsb
jns
les
pop
call
adc
dec
mov
inc
iret
ja
sbb
and
ds
add
add
rcr
in
fnsave
mov
jmp
loopne
xchg
nop
jecxz
loope
adc
jle
xchg
mov
jb
aam
cmp
mov
dec
sub
stos
sar
push
add
push
mov
mov
daa
call
jp
int3
pusha
push
in
mov
call
dec
mov
adc
push
add
mov
rorb
cmp
jmp
sbb
jge
rol
dec
xor
lcall
mov
inc
cmp
pushf
sub
cmp
or
leave
ret
pop
jmp
sahf
rcr
jge
push
data16
and
leave
cmp
and
es
ja
daa
stos
push
or
jle,pn
fstpl
int3
and
aam
jae
popf
cmpsl
sub
adc
lock
mov
dec
mov
cmpsb
inc
loope
jge
fld
pop
aas
sbb
jae
fbld
test
or
mov
add
out
add
sahf
sbb
dec
movsl
sub
out
xchg
int
xor
scas
ss
push
cltd
mov
mov
push
mov
movsl
arpl
inc
movsl
int3
jmp
xchg
call
cmp
xor
dec
push
lock
pushf
pop
mov
addl
loopne
sti
sub
out
jo
jp
add
push
test
movsl
fldenv
mov
subl
xlat
mov
mov
fsubs
call
ja
dec
das
bound
jmp
add
adc
xor
jle
mov
inc
in
int3
mov
data16
in
push
xchg
lret
aaa
clc
fiaddl
lahf
sub
shrl
vunpcklps
lea
stc
lea
dec
mov
mov
push
mov
push
sub
sub
loopne
sub
inc
mov
cmp
cwtl
out
or
cmp
dec
xor
sub
mov
inc
pop
push
daa
jge
int
mov
ret
cmp
cltd
imul
push
test
add
xchg
xlat
pop
add
pop
testb
mov
call
adc
dec
mov
xlat
or
jae
loope
jmp
inc
push
les
mov
dec
cmp
test
mov
push
sbb
pushf
je
movsb
mov
pop
fnstcw
inc
js
bndldx
int
add
xchg
nop
push
fld
jp
cld
sbb
pop
int3
cmp
out
jne
jbe
icebp
scas
dec
mov
test
les
test
mov
xchg
jge
imul
jnp
and
leave
and
add
adc
mov
fwait
scas
jbe
jmp
rorb
fildl
pop
mov
daa
mov
cmc
dec
cmp
and
xlat
into
aad
cmp
jbe
mov
call
mov
test
adc
fwait
inc
jl
or
daa
xchg
mov
xchg
test
or
xchg
in
addl
jb
mov
add
movsb
cmp
aaa
std
jno
pop
roll
jecxz
idiv
data16
mov
adc
and
inc
shrb
lcall
xchg
jmp
xor
lret
call
fstps
mov
mov
add
in
test
sub
aaa
js
fs
jne
mov
ljmp
mov
cmovne
popa
test
pop
adc
push
or
pop
stos
out
cmp
adc
lret
faddl
jge
imul
ret
in
test
sub
xlat
ds
pop
inc
or
mov
xchg
and
jle
push
push
or
sahf
inc
cmp
sbb
in
out
sbb
in
dec
out
repnz
push
cmp
mov
loope
repz
mov
divl
aas
xor
jmp
pusha
les
nop
aas
xor
inc
pushf
xchg
push
mov
adc
dec
shlb
aaa
roll
cmc
cmpsb
mov
pop
mov
rclb
mov
xor
orl
lret
mov
lock
mov
mov
dec
add
mov
stos
bound
jb
loopne
scas
or
mov
sub
mov
pushf
fisubrs
adc
adc
ds
int
inc
ljmp
pushf
add
inc
jmp
pop
test
jl
rcrl
rcr
mov
add
scas
aad
mov
jns
dec
ljmp
cmpsb
pop
dec
push
pcmpgtw
xor
call
mov
in
ret
ret
pop
popa
test
lea
mov
push
dec
mov
ljmp
rolb
call
mov
lahf
out
push
rcr
std
add
arpl
addr16
in
loopne
inc
aam
addr16
ret
jae
sub
nop
das
jns
fmuls
xchg
mov
shrl
or
test
cmp
add
rol
add
repnz
lods
sub
and
ret
dec
or
pop
test
adcb
inc
inc
and
cwtl
sub
shlb
ss
sahf
xchg
add
in
cltd
and
div
sub
mov
inc
scas
and
testl
mov
xchg
sub
out
leave
sub
inc
cmc
xchg
add
xor
pop
fdivrp
outsb
aas
mov
inc
clc
jmp
dec
pop
roll
pushf
adc
scas
jb
mov
mov
stc
movsb
cmp
in
pop
or
sub
mov
fimull
xchg
push
mov
cmpsb
aam
imul
std
idivl
add
push
inc
movsb
jl
mov
decl
or
mov
imul
add
leave
and
pop
xor
das
pop
mov
call
xchg
mov
jmp
pop
mov
sbb
leave
ja
mov
cltd
xchg
jnp
push
xor
bnd
jecxz
arpl
cmp
xchg
and
cld
mov
shrl
cwtl
jg
jle
push
and
rorb
add
loop
movsb
mov
jecxz
sbb
add
mov
imul
daa
adc
pop
fdivrl
dec
push
push
stos
es
insl
imul
cmpsb
adc
into
push
mov
sahf
hlt
cmp
push
es
mov
outsl
popa
dec
mov
xlat
jo
sub
addr16
xor
js
cmp
adc
scas
cmp
xor
std
jge
push
mov
test
test
push
jl
out
rorl
push
cmpsl
adc
sbb
cmpsb
loopne
rclb
pusha
mov
filds
dec
cmp
aad
fdivrs
ret
repnz
js
pusha
mov
add
pop
hlt
out
mov
shrb
jno
sahf
jge
adc
sbb
lahf
in
pop
pop
lods
and
test
and
jo
pop
cltd
jge
add
and
pop
or
imul
popf
lahf
and
imul
mov
fbstp
xrelease
mov
mov
sbb
enter
jne
pop
rorb
ja
or
pop
push
out
xchg
mov
pop
shl
rorb
mov
divl
ja
mov
ret
loopne
ficomps
popa
mov
scas
and
xlat
pop
lcall
mov
mov
out
jae
add
jbe
bsr
push
mov
xchg
imul
xchg
addb
push
jp
aas
ja
and
fs
xchg
push
sub
xchg
jmp
dec
mov
sub
inc
lock
push
mov
out
mov
xor
xor
push
jnp
mov
movsl
xchg
scas
icebp
jp
mov
jns
push
inc
sbb
jb
dec
cmp
lea
sbb
lret
sub
mov
and
jbe
movsl
ret
les
dec
test
mov
nop
dec
repz
mov
ds
push
adc
icebp
mov
sub
jecxz
cmc
lock
lret
fmuls
cmp
mov
hlt
out
aaa
lods
lds
jb
ds
push
dec
mov
mov
xchg
daa
dec
ja
out
icebp
cmpsb
sbb
push
nop
xchg
fdivrp
stos
mov
adc
add
pop
scas
test
lods
push
mov
pop
adcb
cli
fsubrl
test
stc
jb
sub
sub
sahf
xor
adc
xor
outsl
cmp
mov
scas
mov
jp
xchg
std
ds
cvtps2pd
jo
addl
and
pop
sbb
adc
adc
mov
mov
and
sbb
cltd
pop
jmp
xchg
mov
inc
jmp
sarl
aas
mov
lds
jb
dec
jb
add
inc
sub
jne
fcmove
xchg
ja
cmp
xor
xchg
mov
xchg
mov
pop
push
inc
andb
mov
ret
cld
jno
enter
pop
fildll
in
inc
popf
imul
mov
dec
cmp
jns
add
jp
scas
mov
das
loop
scas
push
sbb
sub
sar
sub
cli
add
data16
ss
fnstcw
pushf
lret
inc
pop
adc
jecxz
repz
pop
test
loopne
and
aaa
es
mov
lcall
movsl
pusha
mov
notb
adc
outsl
xchg
dec
repz
xor
cwtl
arpl
ret
adc
cli
cmovp
fst
sbb
mov
in
push
pop
in
jae
jmp
popa
pop
jae
ret
push
sbb
jnp
pop
push
into
enter
fs
enter
sahf
syscall
sbb
sahf
cli
xchg
push
dec
xchg
jg
lods
lea
loopne
setns
fisttpl
mov
xchg
jg
add
cwtl
mov
dec
and
cmp
pop
sub
sarl
push
adc
adc
mov
inc
ret
jno
pusha
in
je
sbb
push
xchg
push
push
jns
daa
xchg
rclb
incl
xchg
cli
dec
popa
js
inc
mov
das
imul
int
lea
loop
jl
jmp
ljmp
shl
mov
mov
dec
ss
lcall
or
adc
dec
add
xlat
out
dec
mov
stos
loope
adc
subb
mov
sub
rclb
dec
insl
lods
lods
inc
add
inc
fwait
pushf
mov
insb
push
stos
sahf
dec
mov
test
or
aaa
adc
stos
fists
add
lea
aaa
out
enter
ljmp
ljmp
add
cmp
ja
stos
xlat
or
ds
outsb
xchg
test
cmp
or
fsubl
std
sbb
dec
adc
dec
scas
jns
rolb
lods
push
lret
jl
shrb
test
mov
out
sub
and
js
int
aas
test
add
add
cs
test
mov
and
sub
std
mov
adc
std
adc
mov
cs
mov
xor
inc
jmp
rorl
enter
cmp
xor
and
xor
loopne
mov
cmpsb
push
cmc
mov
mov
dec
sbb
test
mov
and
cmp
mov
adc
enter
lods
jmp
sub
outsb
jns
or
jmp
das
lret
jns
cmp
in
addb
or
inc
push
jb
stos
mov
xchg
insl
bound
nop
and
push
dec
sahf
je
xor
sti
mov
shll
jge
mov
daa
mov
hlt
rclb
cmp
cmp
push
adc
sbb
insb
push
jae
cmp
push
push
and
push
stc
int
out
mov
and
mov
and
loope
icebp
les
enter
aam
out
std
mov
or
in
or
addl
xorl
xchg
pop
cmc
cmp
xchg
mov
imul
stos
scas
movsb
fldcw
adc
pushf
cmpsl
popa
inc
in
sbb
add
jmp
shll
and
mov
sub
jge
hlt
xchg
mov
fisubl
mov
sbb
sub
addr16
sbb
pop
cmp
sahf
scas
sar
jmp
pop
sbb
loope
xchg
sbb
push
aam
aaa
jae
imul
xchg
cmp
stos
sbb
rep
pop
es
imul
aam
popl
push
mov
pop
push
subl
xchg
adc
je
xor
and
adc
inc
pop
rolb
repnz
mov
dec
inc
xchg
adc
inc
int3
das
lods
leave
nop
cltd
lahf
out
out
test
sbb
lods
sbb
fidivl
jae
enter
ret
add
and
sub
and
mov
push
inc
iret
adcb
mov
xor
mov
test
xchg
lahf
sub
cmpsl
test
sub
pop
mov
mov
mov
sub
and
jb
lea
rcrl
pop
xlat
fildl
mov
push
lret
sub
xchg
push
mov
sbb
jge
xchg
jbe
jecxz
pop
pop
cmp
orb
daa
lds
insl
jno
dec
movsl
cwtl
mov
cmp
out
cwtl
rcrb
inc
int3
stc
daa
lea
adc
and
sbb
pop
cltd
mov
leave
jae
mov
mov
push
xchg
data16
push
repnz
mov
add
inc
nop
xchg
pop
ljmp
jle
out
pushf
pop
addr16
sarl
mov
daa
cli
enter
out
dec
adc
mov
sti
pop
mov
pop
mov
sbb
add
pop
mov
push
push
add
adcl
mov
jns
or
lret
dec
xor
sbb
jecxz
xor
loopne
dec
mov
out
int3
mov
stos
shll
adc
dec
dec
icebp
pop
xchg
jo
lods
movsl
lock
fwait
xchg
pop
or
and
add
dec
fxch
adc
jecxz
xor
popa
xchg
pushf
loop
xor
cli
test
adc
dec
inc
pusha
pop
dec
repnz
dec
lcall
in
or
pop
fisttps
in
or
sub
adc
shlb
add
jge
or
add
push
mov
int3
in
fsubp
je
aam
lret
jbe
push
lahf
lcall
addl
arpl
xchg
out
leave
out
inc
imul
cwtl
dec
sbb
xlat
pop
dec
stos
es
aas
test
iret
xchg
mov
dec
iret
push
mov
arpl
sub
leave
and
js
add
sbb
mov
scas
xor
ret
pushf
pop
testl
imul
loopne
dec
and
or
mov
jmp
mov
cmpsl
lret
mov
lds
cltd
jns
nop
xor
inc
jge
hlt
lahf
xor
mov
adc
movb
mov
inc
push
ds
call
sbb
cmpb
movsb
mov
xor
es
cmp
lret
adc
push
mov
sbb
mov
fcomps
jo
hlt
sub
or
sbb
push
pop
popa
popf
leavew
inc
enter
mov
cmpsb
inc
cltd
lods
sub
jg
jnp,pt
movl
xchg
push
cmc
pop
sbb
je
pop
in
cmpsb
dec
stc
ret
sub
cmp
push
pop
int
stc
add
xor
leave
or
js
push
mov
sub
repz
push
icebp
pop
mov
movsl
lcall
insb
lret
pushf
xchg
mov
fcomi
xchg
pop
movsl
icebp
call
or
jmp
mov
pop
orl
popf
xchg
testb
ds
add
pop
cmp
cmp
inc
inc
lods
leave
pop
test
jne
lret
js
sbb
in
inc
loopne
sbb
or
ds
mov
xorl
or
imul
mov
sahf
adcb
xor
movsl
call
aas
xor
jo
pop
jo
in
xchg
mov
dec
sbb
adc
xlat
pop
or
sub
push
push
xor
add
sbb
sub
lock
imul
lods
jle
push
rol
or
cmp
popa
sbb
int
xchg
test
sub
add
bound
fldl
test
mov
pop
mov
inc
rorb
cmp
xchg
ret
pop
outsl
mov
push
call
lcall
xor
dec
jmp
ror
into
cmp
lcall
test
jo
fstpt
pop
and
fistpll
in
call
sbb
lea
adc
push
mov
aas
lret
xchg
movsl
loop
push
sahf
adc
mov
jge
addr16
sti
in
sbb
xchg
je
pop
fwait
pop
cld
pop
jne
push
mov
fcomip
repz
and
test
cmp
enter
cmpl
mull
adc
sti
je
pushf
dec
sbb
mov
xor
sub
sub
push
stos
ja
jnp
inc
jo
pop
and
mov
ret
and
and
inc
lret
xchg
mov
int3
adc
js
push
mov
adc
loopne
inc
dec
add
call
inc
pop
lods
lock
dec
mov
and
xchg
lcall
cmpsl
jge
add
rorl
inc
mov
in
fwait
test
ljmp
mov
jno
mov
or
mov
scas
fsubrs
fildl
loop
lret
loopne
xor
sahf
fwait
mov
clc
adc
sbb
fsubp
das
add
lds
jge
and
pop
mov
test
inc
sti
icebp
gs
shrl
out
jae
jmp
pop
pop
data16
pop
xlat
dec
clc
mov
xchg
cmp
inc
insb
sbb
mov
inc
roll
pushf
in
bound
push
jge
dec
cmp
jg
inc
lock
int3
fildl
ret
cmp
xchg
repz
cmpsl
and
int
inc
lds
int
loope
lock
mov
cmp
xor
int
fwait
lods
xchg
shll
mov
inc
sub
push
dec
pop
pop
das
popf
stos
insb
in
mov
lcall
div
dec
add
mov
lds
jl
repz
or
push
sub
jnp
sub
outsw
test
pop
repnz
lea
mov
mulb
jno
rcr
das
stc
sub
xor
cmp
clc
mov
sbb
scas
sub
sbb
mov
add
in
ljmp
loop
xchg
mov
add
push
popa
dec
mov
push
pop
sbb
imul
inc
aam
cs
jp
insb
clc
mov
aas
sub
mov
dec
les
lcall
fiadds
pusha
std
cmpsb
dec
es
outsb
mov
xor
mov
data16
mov
sub
jne
dec
cmp
clc
cli
push
adc
and
pop
xor
mov
jle
mov
dec
inc
stc
fisubl
push
test
mov
lods
fstpt
scas
bound
mov
pop
push
jecxz
xchg
movl
out
add
outsb
lock
pop
mov
xchg
stc
pop
pop
push
fistl
pop
push
dec
movsl
jo
sub
mov
sbb
push
cmp
mov
mov
insl
lret
push
ljmp
inc
mov
push
and
xor
sarl
pop
lock
push
ret
add
or
jae
pop
je
mov
cmp
push
jne
push
in
pop
ja
pop
jbe
or
out
jp
shrl
add
mov
or
mov
scas
fstpl
pushf
sub
repnz
icebp
insb
lods
les
cld
sahf
adc
inc
jb
pop
call
cmp
data16
sub
jge
enter
cmp
mov
or
ja
aas
mov
pop
sub
icebp
add
sti
or
stc
xchg
mov
stos
mov
mov
fildl
dec
into
scas
outsl
mov
mov
fildll
mov
repnz
push
xchg
push
mov
xor
inc
outsb
mov
cmpsl
push
mov
lock
fisttpll
aaa
dec
sub
dec
mov
xlat
lsl
jge
pop
testl
es
test
jge
lcall
and
call
js
mov
inc
test
outsb
xor
mov
fucomp
mov
mov
out
negl
jmp
lahf
dec
mov
push
test
jle
mov
xor
icebp
jae
mov
scas
mov
popf
xchg
sub
inc
mov
test
push
test
cs
dec
jno
ret
mov
pop
fdivrs
and
aad
inc
xor
dec
je
pop
in
lds
xor
xchg
je
mov
movsl
cmp
cmp
out
fdivl
mov
cmc
sub
mov
dec
and
sbb
inc
pushl
or
or
or
push
push
and
in
and
jg
insl
and
or
mov
enter
mov
add
test
icebp
jbe
ljmp
push
sbb
aam
mov
adc
fiadds
jmp
xchg
cmp
stc
retw
pop
cmpsb
and
push
imul
ss
cmpsl
test
int
xchg
and
divl
imul
inc
jl
mov
and
stc
jg
movsl
sbb
pop
pop
insb
andb
test
dec
test
bound
xor
xor
mov
pop
xchg
mov
push
cltd
test
add
daa
mov
push
jo
in
push
xchg
sarb
cmpsl
repz
jbe
and
push
aad
cmpsb
add
rclb
cmc
pop
test
cmp
add
arpl
add
inc
test
ret
or
pop
dec
je
aaa
xor
pop
aad
jno
shrl
mull
mov
test
stc
bnd
mov
subl
push
loop
in
je
sbb
das
scas
mov
nop
dec
inc
loopne
xchg
xchg
mov
mov
push
mov
std
imul
push
dec
ret
mov
movsb
add
enter
push
bound
inc
aas
cmpsl
mov
pushf
push
push
xchg
mov
into
push
outsb
rcll
xchg
mov
mov
imul
jg
pop
and
movsb
scas
stos
rclb
fsubrl
jb
mov
mov
mov
rclb
or
jne
leave
pop
test
ret
dec
std
xchg
sbb
test
test
jb
xchg
aaa
repnz
and
out
leave
or
dec
mov
push
jle
inc
cmp
jl
xor
scas
pusha
outsb
cltd
add
push
loop
shll
push
mov
cld
add
xor
add
push
xchg
jge
jno
je
stos
imul
ficoml
add
pop
mov
xor
xchg
dec
in
mov
add
jp
in
fsubs
jae
hlt
fabs
dec
aad
test
movsb
in
and
outsb
scas
int
lret
mov
mov
daa
into
cmp
mov
push
in
scas
push
inc
xor
outsl
push
inc
jg
push
dec
mov
mov
sub
inc
stos
clc
jbe
fsubrp
mov
mov
dec
loope
pop
dec
popa
fidivl
aas
and
xlat
rcrl
test
mov
sbb
addr16
mov
dec
pop
xchg
dec
jl
rcrb
aas
mov
imul
fsubl
aad
cli
cmc
jne
xor
sub
xlat
into
mov
stos
rorl
mov
or
je
sub
bound
jp
cmp
sub
imul
pop
incb
xor
ret
les
cmpsl
jl
in
mov
jg
push
and
jle
inc
ljmp
iret
dec
inc
mov
cmp
fwait
aad
ljmp
jge
mov
add
loop
loope
push
jb
icebp
loope
push
std
or
insl
add
jmp
pushl
xchg
adc
adc
test
jmp
out
scas
push
mov
andl
push
outsl
lcall
mov
mov
and
incb
jp
clc
cld
sbb
push
push
aad
int
int3
xchg
cld
adc
add
and
gs
sbb
pop
lds
mov
sarb
scas
into
pop
pop
xchg
xor
bound
out
notb
popf
nop
push
fisubrl
aad
push
xchg
xlat
int
pop
out
scas
sub
xor
jnp
enter
inc
dec
sub
xchg
mov
lret
imul
movsb
sbbb
or
in
popf
fimuls
adc
aaa
icebp
jno
ret
je
in
loopne
push
adc
movsb
sbb
xlat
cld
inc
movb
lret
jge
js
movsb
movsb
aaa
mov
sarl
shlb
mov
jp
add
sbbl
xchg
xor
hlt
add
daa
xlat
je
adc
sub
iret
xchg
xor
movsl
test
nop
addr16
jp
in
and
sub
pusha
iret
popf
mov
mov
dec
mov
pop
lret
or
scas
hlt
jbe
lods
mov
pop
jge
js
lods
dec
xor
sbb
mov
and
into
mov
fwait
inc
pusha
or
and
jnp
mov
int3
jecxz
jl
mov
jo
test
movsb
shrl
rorb
sbb
testl
sub
and
jecxz
jbe
out
out
cmp
xchg
jns
dec
cmp
adc
ret
in
adc
popf
inc
push
xor
push
mov
iret
inc
aad
mov
aaa
mov
push
mov
sahf
cld
les
jl
popl
inc
mov
aad
jg
mov
push
dec
lods
inc
repz
xchg
mov
mov
hlt
loopne
mov
cmp
mov
dec
arpl
les
andl
leave
in
mov
subb
push
and
fisubrs
jecxz
adc
and
je
jbe
ret
mov
stos
jg
icebp
pop
cltd
xor
push
xchg
xor
sbb
jb
jecxz
mov
and
inc
pushf
jg
imul
xchg
adc
sbb
xor
mov
add
push
cmpl
ja
dec
sar
loopne
cmc
add
pop
fidivs
jae
fnstcw
imul
adc
or
test
pop
mov
mov
or
pop
fidivl
cmp
into
or
push
and
and
mov
inc
add
enter
out
outsl
and
pop
jae
mov
xchg
pop
pop
xchg
cmp
pushf
stos
sarl
jno
sub
jmp
adc
mov
iret
cmp
pop
pop
jb
out
es
mov
lods
outsl
ss
inc
jmp
or
cmp
call
xchg
sbb
ficomps
lods
sti
xchg
into
addr16
pop
inc
adc
test
mov
push
add
inc
push
inc
popf
dec
mov
lds
adc
fidivrs
or
ds
lods
push
xchg
ret
dec
mov
in
jbe
add
xchg
sbb
mov
mov
repnz
dec
jb
adc
dec
jl
stos
mov
and
inc
lcall
adc
inc
sub
xchg
pop
lcall
fimuls
cli
loope
aaa
lahf
mov
das
mov
test
or
dec
lret
inc
mov
push
mov
lods
js
fcomps
pop
jb
lret
repnz
lods
sbb
es
std
jp
dec
rcrl
add
sarl
mov
out
xchg
inc
push
fstl
mov
push
aad
cmc
loop
cli
mov
jb
ret
pop
jmp
inc
cmpb
out
and
bound
sub
push
sub
or
xchg
jmp
add
push
cltd
clc
and
adc
add
sbb
std
fs
dec
loopne
sbb
aaa
outsb
insl
mov
pop
movsl
dec
sub
lods
ret
xor
mov
lretw
mov
fists
jg
shlb
inc
jmp
xor
jle
mov
idivb
cmp
or
jns
sub
cmp
mov
dec
inc
push
dec
pop
shrl
repz
and
aam
fs
add
addr16
mov
xchg
cld
add
cli
xchg
adc
ret
cmp
jae
or
pop
add
int3
jb
cmc
and
aaa
cltd
lcall
dec
adc
jne
sar
adcl
xchg
pop
xchg
push
jb,pt
mov
sahf
sub
fnsave
das
ds
xor
ss
clc
adc
cltd
cmp
lahf
jl
ficoml
out
stos
dec
and
jb
out
fisubrs
mov
cmp
mov
andb
pushf
pop
push
loopne
bound
addb
mov
jge
dec
data16
sub
decb
das
ljmp
jno
dec
int3
movsb
clc
dec
lock
in
outsb
pop
sahf
mov
push
aad
dec
mov
cmp
or
push
and
jb
cmp
imul
inc
pop
popa
push
fdivl
insb
pop
mov
orl
push
mov
fnstenv
inc
adc
cmp
int
pop
cmp
mov
lcall
mov
sbb
test
scas
push
aad
sti
leave
sbbb
gs
push
shl
and
dec
test
les
add
lret
out
hlt
xchg
cmpsl
mov
and
inc
cmc
lea
lock
test
mov
jmp
add
cwtl
jp
outsl
fucomp
les
dec
cmovl
sbb
sub
sbb
int
shr
scas
push
mov
out
xor
push
mov
ss
dec
push
pop
push
jecxz
xlat
jmp
outsl
ja
fsub
dec
sub
cmc
inc
push
fstl
into
pop
adc
dec
add
les
lods
inc
data16
xor
nop
jnp
inc
inc
popa
inc
into
seto
adc
sub
stos
outsl
push
leave
xchg
mov
xor
hlt
in
fld
adc
jns
xor
test
rorb
jecxz
and
and
push
cmp
jle
push
aad
mov
pop
adc
push
ss
push
mov
xor
imul
jmp
out
cmpsl
icebp
in
fsubr
inc
and
aaa
sub
les
xchg
xchg
fwait
sahf
and
test
and
push
xchg
lock
xchg
mov
fdivrs
loope
xchg
nop
cmc
out
jmp
arpl
dec
sbb
xlat
pop
and
test
pop
insb
roll
xor
inc
add
dec
sahf
mov
lcall
dec
imul
jae
shrl
lret
aad
outsb
push
mov
into
push
jecxz
and
lcall
push
pop
and
xor
movsl
lods
xor
idivb
call
mov
movsl
out
jl
or
push
fdivrp
lahf
sar
jle
adc
mov
mov
dec
sub
bound
fwait
sub
jb
rclb
mov
test
ret
sub
cmpsl
fcomip
inc
scas
stos
cli
ficoml
jbe
lret
test
scas
data16
xor
outsl
jne
test
rcll
jle
mov
dec
mov
fnstcw
rorl
sub
or
scas
fisttps
pop
sbb
repz
aas
adc
or
add
insl
mov
push
push
js
lret
stos
loopne
mov
sbb
add
inc
jns
cli
lret
xor
jge
cld
xor
enter
lahf
fwait
lds
mov
push
sbb
in
inc
adc
aaa
sub
mov
xor
mov
mov
mov
add
in
sbb
mov
test
arpl
pop
cwtl
lds
or
out
lcall
xchg
clc
adc
mov
mov
or
aam
mov
stos
sbb
clc
add
fst
jmp
cli
shl
adc
xlat
sbb
pop
jo
lcall
xor
leave
add
or
js
xor
cld
nop
lods
fnstsw
adc
pusha
add
jle
lods
adc
push
movsl
fidivl
loope
inc
push
push
lea
xchg
mov
inc
xchg
dec
xor
cmp
notl
int
mov
pushf
jns
stos
push
sbb
ficompl
int
fcomip
rcrb
mov
aas
outsb
jp
push
xor
cli
sbbl
repz
in
mov
adc
incl
cmp
stos
xlat
xor
mov
inc
sti
push
jle
xlat
jae
jae
lahf
jmp
fnsave
repz
rcr
movsb
push
xchg
xchg
mov
shlb
pop
add
in
dec
ja
mov
mov
jmp
mov
cmpsb
push
enter
es
stc
pop
rcrb
add
out
lods
repz
cs
lds
push
mov
js
popf
adc
aad
scas
stos
popf
mov
sahf
jno
jl
shlb
fildl
jbe
mov
sbb
mov
je
mov
popl
in
mov
rolb
xchg
pop
mov
pop
divb
pop
push
dec
jbe
xchg
stos
dec
psubusb
rclb
sub
fstpt
pop
fistps
xor
push
mov
mov
in
jle
test
pop
stos
sub
hlt
bound
pusha
mov
pop
loopne
pop
cwtl
sbb
fucomp
movsb
js
sub
adcb
mov
xor
repz
dec
dec
push
push
dec
mov
addr16
adc
in
divl
mov
xchg
shl
sub
mov
fnsave
incb
fdivrs
loop
popf
xchg
scas
xchg
outsl
pop
mov
jle
test
fdivrl
addr16
inc
jecxz
pop
subl
scas
mov
dec
xor
movb
xchg
cmp
sub
xor
inc
popf
adc
pop
xchg
aas
scas
mov
mulb
inc
enter
outsl
adc
push
scas
and
lret
call
stos
stc
cltd
pop
lods
arpl
das
orb
stc
mov
jg
jg
ljmp
les
inc
es
shlb
icebp
pop
sub
loop
jo
push
cs
into
xchg
lcall
outsb
xor
les
mov
jns
and
fldt
je
cmpl
or
popf
shl
sub
xchg
mov
xchg
sub
or
pop
xchg
push
sub
and
mov
mov
jecxz
cmp
lret
push
adc
cwtl
repnz
and
insl
cltd
sub
scas
test
xor
pop
das
nop
dec
xor
popa
jns
mov
mov
stos
push
vpshaq
or
bound
adc
cmc
push
adc
sub
ja
mov
into
jnp
mov
int3
push
push
js
mov
sub
fwait
inc
mov
inc
mov
scas
mov
push
pop
loopne
mov
fisubl
fwait
pop
out
in
xchg
inc
aas
pop
jne
jmp
lahf
pop
sbb
adc
mulb
lcall
and
jnp
in
loop
enter
mov
sub
clc
sbb
jns
sbb
jmp
and
jmp
ret
mov
xor
xlat
je
popf
movsl
add
shll
mov
sub
stos
std
dec
daa
hlt
push
mov
sahf
test
mov
xlat
mov
dec
enter
and
lahf
fdivrp
int
mov
aas
repnz
movsb
or
leave
sbbb
repz
jle
sahf
dec
call
bswap
int3
mov
mov
sahf
arpl
xchg
loopne
cmpsl
sub
sub
or
aad
and
ret
and
ds
ss
dec
addr16
loop
inc
mov
repz
mov
test
pushf
ret
adc
mov
push
xor
cmc
outsb
adc
je
leave
sub
or
and
sbb
inc
fidivrs
jb
fadd
outsl
and
stc
es
push
andb
in
insb
xor
push
pop
push
xor
in
add
aaa
mov
xorb
repnz
ljmp
jb
mov
insl
add
dec
or
jecxz
xchg
repnz
bound
in
jne
push
mov
or
pop
sahf
or
inc
cld
jae
loop
adc
pop
ljmp
loope
loope
sub
lea
jbe
jb
mov
and
cmp
dec
push
dec
aam
dec
psllw
ljmp
shrb
xor
add
pop
jl
aam
into
mov
jno
adc
pop
mov
lods
cld
pop
and
sbb
fidivs
or
out
xchg
pop
aad
outsl
and
inc
xor
mov
fcoml
adc
ror
ljmp
xor
adc
pop
jmp
push
lcall
dec
jo
in
sub
mov
push
ja
jno
dec
jecxz
lods
into
andb
and
jecxz
or
sbb
mov
mov
je
jecxz
sub
mov
cmp
addb
mov
sub
scas
out
idivb
stc
mov
int3
movsl
xchg
inc
shlb
dec
xor
inc
das
jmp
mov
inc
add
jl
aam
mov
cmp
std
jmp
pop
imul
sbb
xchg
ljmp
jmp
pop
test
lret
mov
fdivs
sub
mov
ljmp
sbb
stos
ds
call
mov
and
xchg
mov
lock
jle
int3
outsl
mov
sub
cmp
cmpsl
mov
cmp
loop
add
rol
fildll
je
popf
xchg
pushf
decb
pusha
or
rol
and
scas
in
mov
mov
xchg
aas
iret
cld
and
mov
inc
jge
push
push
push
jmp
sbb
ja
xchg
xchg
daa
mov
mov
jmp
push
xor
and
seta
mov
faddl
inc
mov
aas
push
enter
mov
xchg
fs
testl
faddl
dec
or
addb
pusha
dec
lock
add
xor
inc
ss
push
pop
out
test
push
push
int3
push
mov
push
lods
add
sub
es
ss
fucomi
add
scas
jbe
inc
sarl
notb
dec
adc
jae
xchg
mov
xor
out
cmp
mov
ja
mov
enter
les
testl
lret
push
lock
nop
movsb
xchg
pop
mov
sbb
lock
sub
int
in
push
xor
les
lret
or
adc
sbb
sbb
je
stc
push
mov
inc
fmul
lods
mov
mov
jo
imul
dec
and
dec
mov
je
in
incb
mov
iret
in
bound
pusha
test
pop
mov
sarb
push
or
sahf
xor
xchg
add
clc
cmpl
gs
mov
cmpsl
loop
jno
mov
in
jno
add
data16
test
hlt
std
add
push
push
dec
mov
sbb
push
cmp
mov
xchg
pop
mov
into
dec
inc
xchg
jmp
test
mov
ret
xchg
or
jecxz
mov
out
loopne
mov
pusha
leave
dec
xchg
and
fs
jl
dec
aas
xlat
fwait
sbb
bound
mov
shl
sti
cs
out
test
inc
push
out
jmp
push
xor
mov
cmp
aaa
test
out
js
mov
lret
add
addr16
test
sub
mov
or
popl
test
ret
mov
mov
adc
popf
andb
add
sub
xchg
mov
cmp
testl
aaa
les
add
aad
jmp
hlt
sub
and
push
inc
lea
cwtl
inc
stos
das
ss
mov
stos
lock
popa
cmc
push
pop
jp
imul
ds
subl
or
xor
les
mov
pop
mov
mov
clc
xor
ja
pop
fadds
hlt
adc
sbb
out
pop
xchg
mov
jecxz
lahf
int
stc
adc
fdivs
pop
mov
and
cltd
inc
and
sbb
inc
adcb
iret
sbb
vmread
mov
sub
pop
sub
setg
sub
dec
cmp
inc
lods
lea
lds
or
scas
mov
lahf
xchg
cmp
cltd
mov
pop
jmp
add
fldl
cltd
cmpb
cmp
mov
arpl
mov
push
int3
addr16
mov
in
push
push
arpl
ljmp
pop
sahf
movsb
stos
lahf
int
std
sti
insb
pop
push
in
repnz
add
adc
fwait
adc
sub
sti
pop
jecxz
int3
sbb
inc
insl
push
pop
pop
lods
jle
leave
in
xor
xchg
inc
ret
push
popf
clc
jns
mov
cltd
push
xor
fdivl
out
lcall
or
push
sub
aas
mov
mov
stos
inc
cmp
pop
and
jae
mov
in
sub
outsl
ret
sub
adc
cmp
xor
or
stc
cmp
sub
mov
sub
xor
pushw
and
pop
mov
sbb
mov
in
cmp
sahf
mov
sbb
inc
pop
in
pushf
fs
jl
addr16
push
fwait
cmpsl
and
push
mov
inc
push
sbb
mov
int3
sbb
cmp
outsb
arpl
shrl
xchg
sbb
jo
test
aam
and
push
lret
iret
fiaddl
xor
cmp
pop
into
cmovo
fdivr
or
lock
mov
loop
vmovlps
mov
fidivrl
leave
nop
jb
addb
pop
enter
and
mov
xchg
add
das
mov
sub
sbb
enter
int
movsb
pop
mov
icebp
cwtl
mov
and
jo
inc
jl
je
lahf
mov
mov
cmc
fucom
push
mov
popa
mov
call
inc
inc
popf
dec
pushf
sub
push
mov
fcmovne
idivb
pop
xchg
dec
popf
pop
sbb
mov
jb
ss
stc
dec
sbb
inc
ficoml
add
in
xor
test
push
push
aam
dec
adc
int3
mov
ja
lret
add
fs
xlat
cltd
mov
in
jmp
jae
lods
or
ljmp
or
fisttps
addl
iret
pushf
xor
iret
fisubrs
ja
or
stos
xchg
pop
adc
sub
xchg
mov
pop
push
pop
int3
sahf
mov
js
pop
outsb
sbb
xchg
jl
fsubl
sub
inc
call
mov
cmp
cmc
fimuls
add
xor
cmp
and
adc
sub
imul
in
mov
push
call
sub
pop
flds
jg,pn
repz
dec
daa
aad
rorl
jne
subl
sbbl
mov
xchg
std
pop
sti
pop
clc
sub
mov
pop
sub
xchg
sti
add
dec
and
adc
repz
dec
out
cmp
repz
sub
cmp
cmc
gs
in
mov
js
jp
es
outsl
pop
cltd
jns
xchg
cs
push
or
sbb
adc
sbb
sbb
jecxz
je
shll
dec
inc
dec
out
psubusw
dec
std
xchg
cwtl
mov
and
adc
pop
mov
jl
mov
out
pop
jne
push
inc
xchg
lods
dec
or
sarl
add
pop
scas
jbe
sbb
fidivrl
mov
sbbl
mov
and
loope
test
xchg
rorb
push
in
adc
dec
push
mov
adc
leave
pop
push
adc
mov
sbb
fs
mov
loope
mov
leave
xor
jmp
cmp
outsb
outsb
push
xor
mov
gs
push
popf
stos
mov
stc
popa
outsl
mov
sbb
jns
leave
lock
push
lret
or
bound
test
outsl
shlb
or
imul
enter
repnz
xacquire
femms
stc
test
pop
in
inc
or
pop
push
xorl
insl
daa
cltd
jl
repz
mov
loopne
icebp
inc
gs
out
cmpsl
dec
cmc
jecxz
and
in
pop
int
repz
fimull
add
stos
inc
mov
adc
cmp
sti
shll
fstps
sbb
fidivs
pop
xchg
aad
hlt
adc
in
dec
push
lods
sbb
xchg
lock
sub
push
cmp
pop
sub
mov
xor
mov
mov
mov
mov
xor
inc
mov
add
and
jl
jo
inc
aad
fists
ds
and
je
inc
mov
mov
xchg
test
xchg
jbe
and
in
jp
test
es
jmp
mov
lock
dec
movb
push
les
jecxz
fistps
iret
sbb
loope
movsl
fldl
inc
iret
inc
cld
fiadds
push
int
mov
outsb
subl
enter
insl
mov
stos
pop
or
or
sbb
mov
mov
jb
sbb
lahf
js
fidivrl
mov
add
sub
pop
sbb
mov
pop
or
js
insl
pop
cwtl
lea
je
push
aam
lret
lock
jne
xchg
jecxz
push
push
sub
push
xor
sbb
divl
push
and
shlb
outsl
sahf
lahf
or
mov
push
in
xor
dec
aad
cmpsl
fbstp
andl
jl
xchg
mov
xchg
iret
inc
push
dec
and
cmc
mov
fyl2xp1
sarl
xchg
jp
movsb
addr16
loopne
stos
aaa
test
bound
stc
loop
addr16
loopne
cmp
add
dec
stos
cmpsl
ljmp
int
ds
mov
and
faddl
cld
insl
xchg
bound
pop
pusha
and
sbb
xor
mov
fmuls
sub
shl
and
dec
sahf
cmp
shrb
xlat
cmp
xchg
push
ret
mov
cwtl
dec
jbe
mov
cmpsl
mov
and
adc
fiadds
and
sub
js
test
xor
mov
sbb
fstps
and
hlt
mov
inc
enter
fisttps
es
dec
jmp
mov
fcomip
mov
push
sbbb
add
xorb
or
pop
pop
push
inc
mov
xlat
inc
add
pop
mov
jl
push
lds
jg
test
test
sub
ja
gs
jmp
js
mov
popa
rep
in
out
out
fisubrs
lcall
mov
xor
movsl
icebp
add
shlb
outsl
cwtd
lods
fucomp
mov
aas
loope
sbb
push
movsb
add
cmp
xadd
xor
mov
in
sub
cmp
xor
ljmp
sub
dec
je
lods
sbb
cmp
push
sbb
xchg
roll
push
mov
jo
call
jo
popf
sti
cs
clc
stos
inc
int
sub
std
inc
stos
and
push
lock
hlt
shlb
inc
mov
adc
gs
xchg
push
mov
and
arpl
inc
xchg
adc
cmpsl
and
hlt
roll
pop
js
and
add
outsb
jno
mov
mov
fdivs
lret
sub
inc
adc
lods
adc
fucomip
fcomps
ficoms
addr16
rcll
addl
movl
data16
scas
push
call
jns
into
jb
popf
clc
push
jbe
pop
mov
bswap
hlt
and
jne
xor
mov
lods
jno
xchg
test
arpl
aam
lret
add
xor
cs
cld
sbb
daa
jge
xchg
scas
icebp
sti
pop
out
imul
mov
pop
or
add
xchg
mov
pop
cs
adc
arpl
cld
fsubrs
jns
arpl
sub
mov
mov
jo
sub
cld
cmc
out
mov
cmp
scas
addr16
mov
add
jo
add
cwtl
mov
insb
dec
inc
vmovd
pop
loope
lods
out
aaa
pop
mov
out
std
in
int
jne
frstor
mov
outsb
mov
testb
pop
icebp
sbb
aam
sbb
sub
mov
push
cmp
push
xor
insl
adc
mov
push
mov
add
ljmp
and
xchg
fldt
cmp
loopne
ret
push
pop
dec
mov
aad
push
pop
and
insl
je
insl
lock
movsl
xor
add
mov
in
lock
mov
and
push
fdiv
mov
cmpsb
cld
fildl
xor
push
xor
xchg
add
pop
push
cltd
gs
fildll
jno
jae
dec
xchg
mov
push
push
insl
subl
push
sbb
add
mov
icebp
in
inc
cld
in
jmp
fdivs
and
jl
jl
and
mov
mov
fcompl
xchg
pop
mov
test
pop
test
sbb
dec
icebp
mov
inc
and
int
pop
cmp
in
int3
jle
jne
stos
inc
daa
stos
jl
or
loop
ret
aaa
adc
pop
sbb
push
popa
stos
repz
mov
dec
adc
mov
mov
jnp
jo
push
rcll
test
cld
ja
sbb
inc
shl
movsb
sub
cli
xlat
mov
cwtl
mov
pushf
xchg
jmp
pop
cmpsl
stc
push
inc
cmp
mov
dec
lcall
ret
push
fimuls
mov
cmp
jbe
out
jge
push
adc
out
mov
jecxz
movsl
cmp
sub
aad
test
add
and
adc
mov
cwtl
sbb
es
jns
dec
cmp
les
or
cld
nop
sbb
add
sti
bound
add
mov
mov
bound
stos
orb
inc
pop
lds
in
inc
aad
push
push
jae
sbb
cmp
dec
add
pop
pop
je
lret
mov
ljmp
int
xor
out
ficompl
andl
icebp
cs
sbb
push
aas
xor
std
mov
pop
mov
fidivl
dec
arpl
adc
addr16
inc
cltd
xchg
and
mov
rcrl
sbb
movsl
xlat
lds
mov
pop
xlat
les
test
and
inc
scas
jb
push
mov
lea
ds
into
leave
pop
jl
sub
or
lret
sub
rorb
icebp
and
xor
test
call
aad
arpl
pusha
push
dec
cmp
cmpsb
jmp
dec
fldcw
lods
inc
push
and
test
inc
mov
jne
cmovg
lods
ds
inc
aad
shlb
ret
xchg
mov
arpl
add
xor
mov
mov
mov
fs
jp
ljmp
pop
xor
push
xchg
in
lock
data16
mov
push
cwtl
xchg
lahf
xchg
mov
cmpsl
pop
ret
mov
pushf
xchg
cli
es
gs
insl
add
lock
mov
adc
push
xor
adc
ret
or
movsb
adc
sub
cli
mov
in
adc
cmp
cmp
push
inc
enter
aas
xor
aas
repz
popa
les
imul
xchg
cmp
int
mull
rcr
ret
ljmp
push
xchg
lds
xor
dec
mov
cmpsb
cmp
dec
aad
gs
jo
in
cmp
xchg
mov
sahf
insl
fstps
mov
cmc
cmc
fincstp
and
mov
mov
mov
pop
dec
mov
jg
jbe
adc
sbb
dec
lcall
mov
mov
int
or
in
adc
or
shrl
gs
aas
jl
lahf
iret
inc
sub
pop
inc
pop
mov
and
and
or
mov
and
dec
jle
cltd
cmp
ds
push
mov
fdivs
pop
outsb
adc
push
movl
insl
mov
adc
pop
sub
in
xor
xor
dec
stos
cmpsb
stc
jns
stos
pop
fiaddl
bound
or
lahf
mov
jp
pop
or
pop
jbe
mov
or
push
add
push
fbstp
or
cmp
test
push
mov
mov
cltd
cmp
stos
lahf
pop
fiaddl
lea
scas
popf
pop
or
add
inc
test
push
mov
sub
hlt
xchg
mov
cld
xchg
push
test
jecxz
push
test
xchg
jp
cmp
stos
jns
mov
or
leave
int3
sbb
add
jge
push
add
jge
mov
xor
push
negl
call
push
test
push
or
mov
iret
bound
frstor
push
and
repz
jg
add
sbb
test
sti
or
xchg
inc
dec
push
test
xlat
cmc
cmp
test
jle
xchg
add
mov
sti
jns
xchg
sub
gs
push
test
cld
dec
cltd
mov
test
iret
jg
mov
int
and
int
jmp
lods
sbb
and
int
loope
mov
pop
adc
pop
fisttpl
jmp
add
or
jmp
jg
int3
into
leave
xor
outsl
das
fsts
fnstenv
int3
pop
mov
and
aas
mov
mov
stos
repz
out
pop
movsl
fidivl
outsl
add
into
std
shll
mov
aaa
sti
mov
ret
je
dec
mov
mov
push
pop
adc
mov
bound
add
daa
into
sub
into
movsl
mov
sub
aad
sub
fisubs
popa
and
std
adc
ret
lret
mov
push
in
fsub
fbld
mov
aam
add
aaa
xor
jb
mov
cmp
lods
out
daa
mov
adc
jl
add
ss
pushf
je
outsb
or
jno
cmp
sbb
mov
pop
inc
popf
sbb
sahf
cmp
test
xor
jp
fsubl
dec
push
add
xor
pushf
xchg
xchg
dec
aaa
mov
mov
je
fsubr
adcl
int
mov
sbb
mov
push
les
mov
jl
mov
cmpsl
push
sbb
frstor
dec
cmpsb
std
rorl
push
sahf
lods
adc
enter
xor
mov
fwait
jl
rorl
add
dec
sbb
push
jo
lahf
adc
jnp
or
cmc
sbb
pop
xor
call
cmp
cmp
pop
pushf
mov
frstor
shlb
mov
cld
cmp
mov
sbb
adc
stos
int3
ds
test
sub
cltd
mov
or
cmp
adc
movsl
lahf
mov
sbb
pop
mov
out
ror
pop
and
fldl
ror
push
pop
push
rcr
stc
push
je
pop
push
jg,pt
sahf
sbb
sub
mov
cwtl
psubb
sahf
cmp
cwtl
mov
lcall
loope
int3
xchg
aaa
xchg
andb
add
and
in
decb
jp
in
cmp
mov
out
or
test
add
cmc
lret
jb
divl
call
and
in
and
daa
adcb
xchg
jge
ret
outsb
and
lahf
int
jae
add
mov
mov
cmc
ljmp
dec
mov
mov
push
xor
and
sbb
into
inc
mov
icebp
mov
mov
into
std
pop
add
fwait
add
ljmp
or
pop
push
fdivs
ret
lods
xchg
push
ds
and
mov
testl
sub
xchg
lods
fisttpl
cmp
fistpll
dec
insl
imul
cmp
adc
jb
mov
std
fstpl
popa
push
arpl
in
mov
cltd
scas
out
pop
cwtl
call
adc
lret
adc
xor
dec
fsubl
ret
sub
les
iret
push
pushf
mov
mov
add
mov
fwait
ja
push
fwait
cwtl
pop
orb
sub
lahf
jmp
add
mov
pushf
mov
push
aad
fldenv
test
ret
ds
mov
testb
lret
jl
or
movsl
fs
jg
xchg
das
jo
pop
or
cmp
pop
lods
xor
jnp
ja
xchg
stos
pop
push
fisttpll
and
in
cmp
cmp
aam
loop
xorb
sbb
bound
lds
jae
adc
ljmp
call
idiv
cmpsl
sahf
dec
or
stos
xchg
lods
lods
sahf
adcb
scas
sub
push
loope
into
cmp
cli
negb
dec
sub
adc
cmp
stc
dec
out
icebp
push
push
jbe
cs
jo
mov
stos
loope
ret
test
jo
data16
daa
cs
push
cltd
aam
ja
jo
jle
mov
imul
push
cmp
xchg
mov
push
icebp
test
fs
mov
daa
shr
xchg
pusha
gs
push
xor
xadd
fs
lahf
fisubs
imul
add
lock
repz
icebp
add
in
je
xchg
jl
lahf
leave
adc
out
jmp
xchg
rcrl
pop
ret
mov
sub
clc
add
sti
xlat
adc
add
addb
jo
push
lock
cwtl
rcl
ss
movsb
dec
adc
jnp
pop
in
adc
repz
push
jns
pop
aas
cwtl
out
mov
test
lods
popl
push
mov
and
jb
inc
push
icebp
dec
pop
jp
and
push
pusha
mov
dec
mov
push
push
add
sbb
push
cli
sub
xor
sbb
dec
mov
fnstenv
mull
mov
leave
shrl
pop
rol
adc
adc
dec
and
push
mov
imul
test
fcoml
adc
movsl
sub
es
scas
mov
movsl
push
enter
jae
push
bnd
cmp
push
mov
lods
inc
jbe
mov
cmp
out
insl
jge
add
push
movsb
pop
mov
mov
fbstp
pop
sbb
je,pn
sti
in
cltd
push
nop
sub
ja
subl
lea
sub
cmp
sbb
xchg
sub
clc
or
lret
outsl
stc
test
stc
xchg
push
and
mov
inc
aam
out
push
cli
jmp
enter
leave
xor
fcmovb
pop
leave
mov
cmp
xor
sahf
pop
lret
std
aam
mov
test
test
in
lret
nop
sahf
and
stos
ljmp
xchg
frstor
cmp
std
mov
inc
les
ja
adc
xchg
ljmp
cld
or
repnz
cltd
out
pop
ds
and
mov
push
xchg
or
mov
fbstp
xchg
mov
pushf
outsb
mov
in
movsb
jae
mov
pop
fdivl
or
add
xor
ljmp
cltd
mov
mov
xchg
daa
and
jo
push
add
dec
stc
jo
inc
lock
movsb
mov
inc
xor
test
in
shrb
dec
call
cmp
jg
xor
push
sub
es
cmp
fcoml
cmp
je
mov
jmp
push
adc
movsb
out
sahf
adc
in
sbbl
ljmp
nop
jae
mov
or
cmp
pop
push
mov
sbb
sub
aad
vmovddup
adc
fcmovb
popf
inc
addr16
add
xchg
inc
clc
push
out
xchg
mov
push
jl
imul
dec
fwait
outsl
mov
fwait
mov
fbstp
sbb
ficoms
pop
add
xorl
mov
or
cli
out
jle
fsubrl
sti
outsl
mov
dec
sti
fbld
pop
inc
xor
or
sahf
movsb
out
ss
mov
in
stos
jno
cmp
sub
insb
jp
or
iret
mov
and
xchg
jo
idivb
sub
imul
sti
arpl
scas
adc
sub
and
mov
bound
or
sahf
cmp
clc
insl
dec
insl
fnstcw
loopne
movsl
leave
daa
stc
popf
cmp
inc
call
cmp
jbe
xchg
fidivrs
aas
sbbb
enter
stos
jge
inc
xchg
jne
mov
ret
cmp
dec
sbb
push
aad
sbbb
test
in
cmpsb
xor
push
repnz
cmp
pop
cld
and
cmp
cmp
pop
cmp
daa
mov
xor
xor
xchg
fiadds
jo
mov
nop
pop
mov
into
mov
mov
outsb
push
inc
fildl
push
mov
js
inc
mov
pop
mov
popl
adc
sub
and
mov
ljmp
dec
mov
lods
aad
rol
movsl
lret
nop
aam
inc
add
and
imul
add
rolb
mov
mov
in
bound
dec
fidivrs
loopne
pop
sbb
and
enter
and
loop
iret
push
pop
push
fs
out
mov
xor
inc
xchg
mov
pop
hlt
xchg
fwait
cwtl
xor
lret
filds
into
ret
adc
cmp
out
adcl
jg
sub
and
pop
rorl
mov
lret
sti
xlat
int
pushf
add
ret
shrb
sbb
push
xor
push
or
imul
sbb
pusha
dec
cmpsl
fiadds
jno
mov
testb
fs
mov
jae
out
sbb
xor
and
jmp
or
add
test
jg
xlat
insl
popa
inc
ret
cmp
jg
fwait
repnz
mov
fldl
mov
imul
jp
add
mov
ss
nop
addr16
outsb
mov
out
or
add
and
mov
mov
mov
sbb
mov
or
add
movsl
lcall
insb
mov
adc
sub
or
or
rcll
add
test
sub
or
lds
stos
mov
jp
mull
roll
inc
push
pop
add
cmp
jno
aas
sti
xlat
jns
dec
nopl
out
jns
adc
mov
in
ret
cmp
cwtl
dec
sti
push
cmp
jl
inc
pop
jp
cmpsb
bound
jae
jecxz
movsl
sbb
lret
jl
loop
data16
daa
inc
mov
pusha
cwtl
add
fisttpll
or
xchg
adc
in
ret
fstpt
fwait
xchg
out
imul
pushf
sbb
mov
int3
xor
mov
adc
dec
sti
add
jnp
sbb
cmp
lods
push
sbb
nop
or
jecxz
clc
lods
push
test
mov
outsl
data16
sub
mov
xchg
dec
sbb
addr16
aam
testb
das
icebp
shl
add
cs
add
adc
js
or
fs
xchg
sbb
jle
pop
xchg
cltd
xchg
rclb
cmpsb
push
fwait
pop
sbb
idiv
cmp
lods
dec
push
je
cltd
fildll
fcmovnu
pop
or
mov
fs
or
aam
pop
push
mov
mov
or
int
jmp
adc
not
cmp
jg
push
int3
adc
data16
pop
mov
jno
jb
mov
mov
out
stos
pop
adc
or
pop
lret
imulb
mov
dec
push
aas
fmuls
xor
add
push
into
rcll
xchg
mov
andb
pop
stos
jmp
dec
sub
cld
push
int3
invlpg
shll
xchg
aas
sub
mov
sbb
int3
ret
jecxz
xchg
xor
shll
sbb
push
ss
sub
push
hlt
xor
out
cmp
in
sbb
xchg
loopne
ret
sub
movsl
ss
test
sbb
jo
pop
mov
icebp
aaa
add
jb
fidivs
sub
ja
add
push
in
push
push
es
push
lret
push
ja
xchg
inc
or
dec
mov
les
add
pop
add
test
and
mov
push
ss
test
cmp
insb
addb
jle
lea
push
xchg
orb
dec
push
pusha
mov
nop
jmp
test
mov
dec
or
pop
ret
sub
adc
xchg
sbb
mov
jg
ljmp
sbb
pop
movsl
adc
cld
jb
sbb
imul
mov
lret
push
sarl
clc
push
and
arpl
mov
push
ds
push
jle
xor
xchg
add
aam
cli
lods
xor
pop
daa
in
mov
enter
pop
or
clc
mov
adc
lret
lret
xchg
movsl
mov
loop
iret
xchg
lret
test
pop
jmp
lea
xchg
ret
jp
test
popf
cmc
sub
cmp
adc
push
pop
lods
jge
enter
shrl
jp
lret
push
lods
nop
rcrl
int
mov
jo
out
test
xchg
add
lods
test
pop
daa
pop
adc
ja
repnz
js
jb
fisubrl
cmp
lds
cmpsl
mov
xlat
inc
ljmp
loopne
ljmp
push
mov
out
cmp
cmpsb
cmp
mov
xchg
mov
xchg
and
mov
push
and
rclb
push
repnz
orl
add
mov
mov
mov
clc
or
ficomps
lcall
int3
pusha
test
rcrl
inc
mov
iret
push
fcomps
out
rcrb
xor
ret
insb
enter
push
push
jl
xchg
dec
out
xor
or
xchg
mov
stos
pop
ficomps
pop
leave
or
mov
mov
adc
ljmp
loopne
add
xlat
fnsave
pushl
rorl
ret
sar
inc
cmp
xor
xchg
push
cmp
loope
pushf
rcll
jns
inc
mov
rcrb
push
pop
mov
cmp
jne
in
out
rorb
iret
stos
sub
push
hlt
lods
insb
pop
stos
les
cld
push
cmp
push
lds
pop
call
jp
and
xchg
mov
ljmp
cmpsl
dec
pusha
les
xor
iret
inc
je
cs
lods
and
jmp
cmp
or
call
mov
jb
stos
fcoml
addr16
jae
shlb
push
sbb
js
loope
movsl
sub
or
lock
sarl
clc
rorb
fnsave
xor
sbb
into
cmp
test
scas
lahf
mov
cmp
test
sub
or
xor
das
and
push
mov
out
pop
mov
lcall
pop
in
xchg
pop
ja
arpl
lods
mov
loopne
das
pop
call
mov
std
shrl
test
dec
fsubl
adc
xchg
ss
pusha
aad
or
iret
daa
pop
cli
inc
shll
dec
lods
pop
enter
sub
es
rcll
ret
mov
add
add
std
pop
cld
jecxz
sub
out
or
inc
mov
lret
sub
jo
xchg
lods
orb
xchg
cmp
and
pop
xor
dec
fcmovne
std
jns
pop
repnz
out
lea
inc
fstpt
cwtl
inc
inc
iret
lods
insl
adc
into
fstps
in
daa
hlt
sub
add
into
outsl
dec
out
sub
sub
sub
and
push
inc
or
ret
inc
xchg
mov
out
add
inc
imul
pop
push
loope
push
mov
ljmp
xor
aam
xor
push
loop
mov
shll
or
in
ret
mov
mov
push
xchg
fwait
loop
and
test
subb
mov
es
sub
lcall
xor
and
cli
and
int3
scas
xlat
xchg
pop
xchg
insb
cwtl
sbb
dec
mov
adc
adc
xchg
jle
stc
mov
cmp
xor
mov
or
mov
push
cmp
lahf
stos
inc
fbstp
mov
mov
push
notb
inc
andl
and
add
mov
push
dec
mov
push
js
cld
push
cltd
or
and
adc
fistpll
arpl
jns
divl
push
inc
xchg
sub
es
sbb
push
neg
inc
sbb
jle
xchg
mov
mov
sbb
les
mov
cmp
and
sbb
leavew
sti
mov
mov
int
mov
stos
push
jmp
pop
xor
insb
xchg
sbb
sbb
das
imull
mov
add
stc
jb
in
das
cmp
mov
movsb
mov
mov
adc
push
jge
out
sbb
in
add
push
les
cltd
ficoml
sub
mov
push
ret
add
bound
cmpl
xor
jmp
dec
xlat
lahf
ds
test
insl
movl
cltd
into
or
into
jge
xor
or
push
push
and
leave
mov
jp
or
and
outsb
mov
xor
mov
push
icebp
fdivr
scas
jo
dec
addr16
loopne
inc
fdivrl
ret
add
rcrl
push
rcr
aad
jne
xlat
add
ja
xor
jne
inc
sbb
mov
outsl
popa
push
push
and
mulb
mov
pop
cmp
dec
jp
dec
jmp
jmp
ret
add
push
test
xchg
pop
sub
xor
add
adc
dec
inc
sbb
call
push
xor
add
jb
imul
daa
fldcw
pop
lods
mov
sub
enter
sbb
xchg
push
pop
sbb
incb
fucomi
pop
xchg
inc
sbb
outsb
mov
iret
imul
jmp
and
and
fldenv
stos
pop
sbb
inc
cs
xor
dec
lret
cmp
xchg
enter
stc
and
rcll
sahf
mov
cmpsb
xor
cmp
dec
cli
xchg
push
mov
scas
out
mov
xchg
and
xchg
fisubs
cmp
fstl
test
addb
mov
into
adc
and
xor
cmp
mov
decl
mov
es
or
cmpsl
imul
in
pop
jp
xchg
jp
mov
mov
loop
push
pop
pop
mov
cltd
mov
je
sti
add
mov
pusha
ss
rorb
ret
cltd
jae
mov
lret
adc
insb
iret
sub
ljmp
ljmp
mov
cmpb
cmpsb
ret
add
xchg
sahf
mov
fmull
test
mov
adc
stos
ja
adc
gs
rcrb
lods
stos
jbe
shl
rcrb
push
dec
mov
sahf
pusha
xchg
mov
push
add
fbld
stc
push
popf
ljmp
icebp
xchg
sbb
inc
sbb
adc
cld
stc
mov
cli
fbstp
xchg
mov
push
imul
inc
adcl
test
into
and
cmpsb
cwtl
xchg
clc
mov
outsl
out
add
cmc
dec
popf
imul
mov
dec
scas
jae
scas
mov
xor
and
and
xchg
jno
mov
outsb
scas
mov
out
mov
imul
push
out
pusha
xor
pop
loope
cli
test
mov
arpl
push
mov
lods
lret
ficoms
dec
fucomi
push
add
lcall
pop
popa
xchg
mov
jb
cwtl
pop
pop
stos
pop
cli
mov
xlat
in
pop
cwtl
xchg
fldcw
cmp
movsb
cmp
popa
movsl
mov
jl
mov
or
and
mov
xor
jmp
mov
frstor
stc
test
inc
sbb
lods
xlat
xor
cmp
dec
mov
sti
or
and
mov
add
push
dec
xchg
clc
hlt
adc
faddl
and
test
fistpl
ja
outsb
fsubr
or
ret
fwait
inc
out
lret
rorb
into
add
mov
inc
cmpl
data16
fnstenv
sub
ffreep
dec
cli
lock
inc
stos
lahf
loop
cmp
pop
insl
pop
call
addb
lods
lahf
sbb
shlb
js
xor
scas
hlt
ds
mov
arpl
fisttps
cmp
clc
add
mov
mov
clc
imul
insl
daa
jns
fs
jno
jle
jge
hlt
lcall
aad
aad
xchg
lret
scas
or
enter
pop
mov
ss
cmc
push
decl
mov
loop
xchg
test
mov
cmc
std
psubq
push
mov
jmp
and
insb
push
pop
mov
mov
hlt
cmp
sub
push
mov
push
mov
lods
sub
cmp
lea
insl
add
mov
test
push
cmpb
ds
or
or
mov
mov
test
jecxz
lcall
in
push
cmpsb
push
icebp
shrl
test
jecxz
cmp
jbe
popf
sub
cs
push
cmp
scas
cmp
jecxz
inc
scas
sbb
icebp
scas
lods
mov
sti
push
mov
loop
scas
inc
sysenter
ds
ret
movsb
push
rcr
aas
mov
cmp
adc
and
std
jmp
out
sti
sti
mov
mov
idiv
dec
adc
ljmp
pop
jne
xchg
das
mov
push
pop
fildll
push
push
stos
call
jae
xchg
into
dec
lock
cli
pop
jl
cmpsb
aas
lock
dec
lods
pusha
lock
jecxz
sub
xchg
imul
mov
cltd
popl
ds
shlb
add
gs
jmp
loop
inc
mov
mov
call
stc
stos
icebp
cld
add
mov
adc
pop
aad
sub
in
outsl
xchg
or
out
insl
push
inc
std
int3
pop
push
daa
rcrl
notb
popf
arpl
mov
lods
add
mov
ret
cmp
ret
jb
loop
fwait
mov
jl
dec
std
mov
data16
movmskps
cld
mov
add
dec
dec
leave
and
mov
push
and
repnz
testb
mov
dec
pop
push
push
fcomi
lods
mov
repz
jns
mov
push
fcoms
enter
sbb
jo
push
xor
insl
lock
xor
fwait
inc
int3
inc
pusha
push
jge
jns
xchg
sub
push
cwtl
mov
push
lahf
jmp
xchg
in
mov
insb
sub
sub
out
mov
iret
lret
dec
inc
ja
push
es
mov
shlb
sub
lods
cmp
rorb
sti
sub
pop
cmp
ret
repz
xchg
addl
aam
insb
and
pop
lret
xlat
and
je
stos
sbb
xchg
mov
mov
mov
shl
and
lcall
aaa
leave
cmp
mov
jl
add
dec
repnz
jns
jecxz
push
mov
and
subl
out
stos
outsl
cmpsl
mov
enter
sbb
mov
or
jae
pop
mov
and
arpl
in
movhps
jp
mov
mov
or
push
xor
inc
xor
xor
dec
push
add
jne
mov
xchg
outsl
imul
out
cs
mov
mov
add
xor
adc
push
jmp
mov
mov
cmp
xor
fsubp
dec
jg
test
adc
push
ljmp
jmp
cmp
sbb
scas
shll
movsb
sahf
adc
xchg
adc
jb
mov
rorb
addr16
test
daa
ss
cltd
pop
les
cmp
ja
and
push
loope
push
addb
aaa
jbe
dec
jnp
add
inc
mov
aaa
pushf
sub
cli
arpl
or
mov
test
add
hlt
pop
testl
xorb
stc
sub
mov
imul
sbbl
in
test
sbb
pop
sarl
dec
ret
andl
mov
aas
and
ljmp
and
lret
xor
mov
test
xor
push
or
xchg
push
fcompl
or
pop
sbb
xchg
int
mov
push
iret
adc
sub
adcb
and
jge
jae
pusha
frstor
insb
inc
rclb
pop
xor
and
adc
xor
inc
push
das
leave
fst
xchg
jnp
cmp
jns
cltd
cli
xchg
enter
bswap
jge
lods
jno
lods
mov
mov
push
repz
xlat
idivb
leave
adc
inc
mov
test
cwtl
sub
into
cs
dec
push
lock
es
cmp
aaa
ja
enter
jno
int3
cmp
xchg
dec
mov
xchg
or
xlat
subb
or
cwtl
mov
add
cmp
xor
push
rolb
in
repnz
mov
popf
arpl
push
dec
psubusw
xlat
data16
dec
pop
test
mov
sbb
stos
clc
dec
js
mov
xlat
cmpsl
popa
push
jnp
or
sarl
outsl
enter
fistpl
sbb
lods
ss
cmp
movsl
push
add
fcmovb
ljmp
pushf
stc
xor
mov
add
and
dec
adc
out
lods
xlat
ror
dec
fdivrs
adc
sub
jbe
mov
fcoms
jecxz
or
lods
inc
dec
ror
loop
test
pop
inc
push
cmp
xor
subb
pop
xor
jno
outsb
jo
cs
in
sbbb
or
popf
mov
shlb
lahf
fldl
mov
add
mov
sti
dec
jecxz
cltd
inc
or
pusha
ja
aam
xchg
add
shlb
dec
lods
or
push
insb
dec
xchg
sbb
mov
lahf
pop
daa
push
add
lock
pop
pusha
push
mov
pushl
mov
imul
ss
cli
xchg
and
cld
leave
pop
into
adc
rolb
pop
daa
std
jnp
aam
repz
pop
hlt
and
adc
xor
mov
jg
fsubs
in
loope
xchg
push
mov
in
fildll
pop
sahf
cmpsb
shlb
enter
sbb
and
or
jae
lret
mov
in
add
subl
mov
mov
sbb
cld
ss
sarl
and
es
jecxz
pop
out
xor
add
and
cmpsb
movsl
ss
pop
leave
push
cmpsb
outsb
int3
jle
mov
rol
cmp
push
and
loope
add
mov
daa
test
int
cmp
dec
adc
pop
mov
xchg
jnp
push
in
mov
loope
imul
inc
mov
mov
mov
jg
scas
lea
xchg
cmp
fdiv
xchg
or
sbb
mov
dec
mov
cli
call
inc
outsl
and
xor
push
arpl
jne
rcrl
push
ficomps
movsl
or
dec
mov
xchg
dec
popa
decl
push
lods
jae
inc
ret
push
daa
in
sub
loope
std
jmp
incb
data16
pusha
pop
clc
ret
stos
test
lea
lods
jae
in
fldenv
adc
loopne
dec
inc
enter
pop
cli
stos
cmp
js
lods
fs
xor
jl
fildll
mov
shrb
movsb
push
xor
mov
test
add
enter
push
mov
xchg
or
dec
inc
mov
or
and
add
and
fsubs
dec
add
dec
aaa
int
inc
les
sti
rcrl
xchg
aaa
or
clc
mov
popa
repz
test
aad
sub
fisubrl
pop
and
dec
dec
imul
pop
out
inc
or
movsl
xchg
push
adc
arpl
lahf
sub
jno
jo
sahf
dec
mov
adc
lock
inc
rclb
jp
cli
rol
andl
pop
push
lods
cmp
fildll
out
mov
js
mov
push
mov
or
xchg
and
ss
dec
add
xor
or
mov
outsb
mov
pop
mov
inc
imul
orb
xchg
test
mov
imul
cmp
std
push
push
or
add
cmp
enter
loopne
mov
nop
pop
aam
mov
or
cmp
jnp
mov
cs
lret
scas
jmp
js
pop
out
test
lock
add
push
arpl
or
and
popa
adc
movsl
jne
mov
test
and
movsl
and
jns
mov
adc
or
pop
cmpsb
push
mov
xor
insb
mov
daa
mov
cltd
cmp
or
mov
imul
inc
add
out
mov
pop
and
dec
mov
jge
inc
gs
or
cmp
xchg
or
leave
lea
inc
fdivs
enter
add
dec
cmpb
push
out
mov
push
cmp
add
mov
leave
mov
addr16
push
mov
jo
iret
xor
call
sti
fimull
mov
pop
jne
daa
xchg
dec
hlt
adc
dec
mov
xchg
jo
hlt
fdivrs
inc
fsub
dec
pop
add
dec
pusha
push
jnp
mov
call
pop
aas
arpl
push
sub
ds
push
addl
inc
xchg
lods
inc
rolb
repnz
es
mov
arpl
out
dec
insl
sub
sti
pop
xchg
cmp
fisttpll
sbb
aam
xor
add
cmp
xchg
pop
das
pop
xchg
pop
add
sub
je
fmull
adc
push
and
ret
sarb
push
dec
mov
popa
seta
sub
and
push
mov
sub
add
cmp
in
pop
push
cmp
out
mov
pop
mov
jno
imul
mov
jne
sbb
out
push
dec
push
mov
ja
cmpsb
cld
daa
sarb
cmp
mov
jb
iret
fisttpl
out
sarl
mov
mov
loopne
inc
cltd
add
adc
inc
and
imul
daa
ja
mov
cmp
push
gs
movsb
sbb
and
dec
inc
mov
cmpsl
or
jbe
std
shlb
lcall
call
sbb
cmpsl
mov
mov
inc
or
jle
push
cli
inc
cltd
repz
cmp
inc
clc
gs
and
xlat
dec
xchg
fmulp
call
cmp
fs
pop
cmp
inc
sahf
mov
or
shrb
outsb
fisubs
cmp
js
or
in
outsb
clc
icebp
mov
mov
shl
xchg
cmc
fdivrs
leave
dec
insb
test
xlat
adc
cltd
std
dec
mov
sbb
xchg
adc
imul
lcall
pop
pop
in
inc
jp
gs
and
bound
insl
add
jnp
lds
and
cmp
or
add
sbb
mov
in
enter
fwait
adc
xchg
fimull
fildl
popf
std
outsl
mov
mov
je
xchg
testl
sub
and
sarb
sarl
jnp
mov
pop
mov
in
cs
cmpsl
xchg
or
inc
sub
dec
jbe
andb
pop
out
rclb
lahf
imul
in
mov
lret
test
stos
arpl
jns
psraw
adc
imul
es
xchg
inc
mov
dec
lods
shlb
dec
ret
pop
popa
xchg
add
sbb
inc
lds
cmp
cmp
add
test
push
xchg
mov
cs
and
mov
sub
jl
es
push
cmp
clc
mov
outsb
fwait
cmc
addr16
jl
push
inc
jge
cltd
mov
push
xor
inc
mov
fsubrp
cmp
xchg
mov
out
cmc
adc
jmp
fs
outsl
shl
pop
mov
fwait
out
and
push
mov
bound
sub
mov
xlat
outsl
data16
into
jns
mov
int
ret
add
add
xor
jecxz
in
lods
loop
addr16
and
notl
inc
adcb
mov
in
inc
or
pop
push
and
jle
inc
sbb
movsl
mov
xchg
ret
call
and
out
adc
out
aad
pusha
addr16
stos
popf
and
test
xlat
testb
pop
pop
icebp
dec
in
adcb
or
loop
movsl
fistl
jae
mov
je
jge
cmpsb
inc
add
test
sbb
dec
in
inc
pop
notl
sti
shll
outsb
jno
fcmovne
add
sti
fcoms
xchg
testl
xor
dec
mov
add
adc
jl
pop
push
das
aad
mov
inc
imul
lods
sbb
push
call
pop
lret
dec
adc
cmp
xchg
sub
das
lcall
movsl
adc
add
idivb
out
or
repz
stos
dec
int3
rcl
cltd
and
in
xchg
data16
mov
loop
or
aas
addr16
pop
push
sarl
xchg
jp
add
call
pop
push
push
sub
sbb
mov
push
divb
ljmp
cmp
shlb
cmp
mov
fnstenv
in
xor
dec
cmpsb
inc
rorb
hlt
lret
daa
cltd
lahf
incl
sub
aad
sbb
add
pop
xorl
out
or
sbb
sbb
mov
cmp
jle
sub
pushf
mov
push
popa
cld
or
sub
push
mov
adc
fwait
sub
aas
xor
sahf
cmpl
scas
aaa
add
pusha
ds
inc
cmp
cmp
inc
pop
and
push
mov
xlat
fcomps
shlb
inc
jl
icebp
pop
adc
jmp
in
jmp
mov
in
mov
jmp
jle
mov
add
fimull
out
cmc
sbb
daa
jmp
mov
lahf
stos
inc
push
inc
push
pop
cmp
cmc
les
arpl
sub
jb
or
scas
sub
mov
xchg
lcall
sub
sti
xor
sbb
xorb
jg
out
aas
repz
test
push
imul
jge
xor
xor
xchg
ss
mov
jmp
test
jb
movsl
push
push
xor
mov
mov
push
or
repnz
cmp
or
add
sub
mov
add
in
int3
btr
cmpsb
inc
sbb
add
cmp
aas
dec
mov
ljmp
subl
xor
adc
sbb
push
sbb
dec
pop
lret
xchg
stos
in
xor
movsb
push
ret
pusha
or
cmp
lahf
addl
cmp
das
and
rorb
pop
jecxz
std
lods
outsl
xor
inc
cltd
xchg
cs
mov
je
and
sbb
cmc
jecxz
mov
jge
push
mov
out
lret
movsl
xchg
xor
mov
call
pop
mov
mov
mov
pusha
fs
test
test
cmc
mov
negl
cmpsl
xor
cmp
mull
repz
xor
es
push
add
push
jb
xor
sbb
mov
inc
pop
outsl
cmp
ret
push
mov
xchg
sbb
sub
mov
into
inc
lcall
dec
jg
lret
lods
push
imul
push
lods
mov
xchg
mov
mov
mov
or
xor
cmc
shlb
push
adc
xchg
dec
pop
jns
mov
in
xchg
gs
fsubrl
in
mov
fldenv
push
lds
adc
push
jae
andl
in
test
shlb
inc
cmpsb
push
iret
jle
mov
stos
cmp
arpl
into
fwait
insb
fcmovnb
aam
je
movsl
add
xchg
nop
into
mov
and
mov
jmp
ret
dec
jp
add
out
pop
int
int
ret
inc
sbb
pop
pusha
ja
inc
repnz
lock
xchg
fsubl
arpl
mov
test
sti
sub
outsb
mov
cmp
loopne
jns
jp
pop
mov
push
lods
adc
dec
inc
lcall
and
or
or
repz
adc
lret
lea
subb
and
inc
stos
jmp
out
add
xchg
cmpsb
in
out
mov
cmp
divb
dec
adc
fldt
jbe
mov
xorl
xchg
push
jae
dec
shll
xchg
sbb
push
sub
sar
dec
stc
pop
dec
dec
vsubsd
icebp
loop
add
jl
push
sbb
push
loopne
gs
inc
clc
cld
push
cmp
dec
xor
pop
leave
dec
push
cmp
out
repz
xchg
xor
sbb
movsl
jo
nopl
mov
xchg
jo
out
sbb
sub
mov
sbb
xor
xor
lds
lock
mov
arpl
xor
push
aam
test
push
pop
mov
pop
in
das
pusha
repnz
cwtl
mov
mov
adcl
cwtl
pop
pop
inc
dec
ljmp
add
xchg
sbb
adc
subb
scas
sub
dec
inc
sub
push
sbb
les
mov
cmpl
and
jne
mov
mov
adc
inc
mov
je
push
out
cltd
xchg
dec
popa
lea
sti
and
dec
fiaddl
repz
add
ret
push
push
cmpsl
dec
sbb
fstp
pop
cmp
iret
push
fildll
push
or
fwait
lock
rcll
push
ret
push
mov
pop
mov
rcl
xor
or
in
push
mov
mov
inc
dec
ja
js
sbb
scas
mov
mov
iret
sbb
xchg
adcl
adc
adcl
in
xchg
jmp
pop
cmp
inc
js
inc
or
mov
loop
ja
sbb
fidivrl
testl
cli
xchg
xor
pop
scas
mov
xchg
or
sbbl
cmpsb
call
mov
jno
cmc
mov
jno
clc
lcall
mov
aas
sarb
pop
lds
int
popa
sbb
je
mov
in
popf
xor
dec
push
in
lahf
test
lret
push
imul
push
mov
div
dec
push
dec
mov
scas
sbb
test
stos
rorb
mov
push
mov
add
cmp
jle
jne
fisubs
cmp
jle
sbb
mov
jmp
dec
nop
ret
cmp
adc
testb
fstpl
mov
xchg
push
inc
int
inc
mov
adc
inc
sarb
jae
clc
stos
sbb
sbb
sbb
call
mov
fs
push
mov
cmc
mov
jnp
or
push
out
adc
arpl
popf
iret
cmp
out
in
pop
out
ret
adc
mov
out
xchg
xor
pop
dec
data16
add
out
adc
stc
fwait
cmp
scas
sub
mov
movsb
hlt
cmp
aaa
or
stc
movsb
xor
cwtl
bound
push
sahf
les
add
bound
adc
mov
pop
inc
iret
lods
cmp
inc
xlat
jnp
int
pop
es
jo
aas
push
mov
add
sub
fcoms
lahf
rcl
lcall
in
ds
inc
or
orb
push
mov
add
rorl
stos
inc
fisubrl
insl
out
mov
scas
out
ss
pusha
rclb
test
mov
pop
enter
dec
icebp
and
push
test
adc
mov
addr16
pop
xchg
rolb
jl
xor
int
repnz
inc
jge
bound
dec
sbb
mov
movsb
hlt
lods
push
push
out
and
cmp
jnp
pop
cmp
xor
cltd
adc
gs
mov
push
fnstsw
and
jge
fwait
ss
sbb
mov
xchg
outsb
xchg
movsl
sub
xor
jo
iret
repnz
enter
push
out
adc
iret
mov
dec
cs
push
loop
fsub
cmp
es
lock
fdivrp
repnz
pop
outsl
outsb
notl
mov
mov
pop
mov
sar
test
cwtl
xor
scas
xchg
or
xchg
ret
adc
cwtl
bound
xchg
mov
jo
ret
sub
jb
mov
mov
test
jbe
push
cmp
int
std
bound
or
xor
xor
jae
add
int3
mov
lret
jo
adc
cmpsl
sbb
int
ja
xchg
mov
in
rcrb
jnp
ret
pop
into
push
daa
push
mov
call
xchg
add
jno
dec
inc
xor
arpl
imul
out
add
push
les
jb
mov
movsl
fwait
stos
icebp
mov
mov
or
cmp
dec
mov
inc
jge,pn
sbb
popfw
mov
jecxz
pushf
adc
scas
mov
xlat
pushf
and
inc
add
cmp
xor
inc
mov
or
xchg
and
xchg
loop
test
loopne
clc
sbb
cmpsb
cltd
stc
and
aas
add
mov
sahf
cmp
outsl
js
or
jge
cmp
sahf
and
pop
faddl
mov
scas
xchg
mov
add
sub
add
xchg
dec
mov
les
add
out
cmpsl
mov
cmpsb
pop
in
xor
xchg
daa
inc
mov
ljmp
xlat
dec
fdivrl
pop
ljmp
sbb
mov
stc
fidivs
xchg
lods
jmp
dec
test
adc
rclb
jmp
dec
sbb
adc
leave
mov
arpl
das
adc
test
das
stos
jecxz,pt
fidivs
imulb
psubq
into
jns
xchg
push
jno
and
mov
mov
xchg
jle
jne
popa
cltd
push
sbb
out
test
mov
lods
mov
push
pop
push
ficoms
test
jno
fldl
sub
or
sbb
add
and
jmp
scas
inc
in
dec
scas
cli
jp
and
jno
push
outsl
mov
cmp
sbb
addps
dec
pop
js
das
mov
dec
stos
loop
jecxz
inc
scas
scas
idivl
scas
or
xchg
cltd
mov
outsl
mov
mov
lahf
jno
inc
jp
clc
call
xchg
rcr
push
dec
addl
roll
fisttpl
push
lds
test
add
adc
inc
mov
lcall
adc
mov
mov
jb
pop
gs
ljmp
jl
mov
push
hlt
pop
mov
pop
adc
mov
cmp
das
and
int3
mov
and
adc
into
xchg
shlb
adc
dec
push
fnstcw
cltd
pop
test
je
pop
lahf
outsl
test
rcll
mov
lods
in
sub
push
lds
xchg
xor
push
sbb
cwtl
inc
iret
out
pop
shl
push
push
nop
in
sub
mov
push
pop
les
or
gs
pop
mov
nop
push
pop
mov
jbe
loop
dec
cmp
fsubrl
jae
in
adc
in
xchg
lea
into
push
xor
pop
pusha
add
stos
cmp
pop
in
mov
hlt
or
lcall
js
xlat
dec
mov
pop
mov
adc
shrb
fistpll
aaa
pop
das
es
xchg
das
cmp
pop
sbb
mov
mov
xlat
push
fs
pop
addr16
sahf
inc
es
push
int
xchg
pop
enter
fwait
push
mov
mov
daa
adc
dec
jbe
rol
fadd
push
cmpsl
outsw
aam
jge
pop
push
lahf
rcll
xchg
and
xor
push
adc
mov
imul
pop
stc
inc
aad
lds
mov
dec
inc
mov
push
iret
pop
outsl
jne
notl
lds
and
pop
arpl
cwtl
inc
inc
mov
mov
and
lret
popa
adc
xor
push
nop
sub
out
push
adc
push
fcomi
aam
mov
iret
out
mov
lcall
cmp
ja
and
stos
push
xchg
sbb
jmp
ljmp
jnp
cwtl
mov
repz
mov
in
mov
pusha
mov
negl
jae
lret
lret
fxch
and
cwtl
and
and
add
outsl
pop
sub
sub
loopne
hlt
clc
mov
push
or
pop
pop
add
push
pop
call
sub
jns
fucom
lret
sbb
pusha
pop
mov
jmp
bound
jne
stos
insb
aad
scas
out
loopne
pop
shll
in
dec
xchg
les
xchg
xchg
cltd
mov
call
mov
hlt
dec
jno
pop
cmp
xor
push
inc
insb
pop
mov
xchg
popf
pop
add
inc
push
jns
add
mov
sub
js
sti
aaa
mov
or
xchg
xchg
data16
or
repz
orl
mov
pusha
outsl
neg
sub
cmpsb
jmp
dec
mov
push
andl
leave
and
xor
out
nop
mov
jae
std
mov
sub
ja
inc
inc
adc
pop
addr16
xor
mov
jecxz
or
sbb
cmp
sub
pushf
xchg
insl
fstl
jl
imul
push
jno
mov
call
and
add
shr
push
push
adc
aaa
sbb
stos
je
jle
or
mov
xlat
dec
pop
in
inc
mov
or
lahf
and
mov
adc
push
jg
pushf
ja
repnz
shll
adc
shrb
mov
jge
push
repz
xor
pop
shrl
add
pushf
adc
sbb
jo
and
dec
outsl
sbb
pop
sub
lods
popa
sub
outsl
jle
xchg
pop
gs
hlt
cltd
jg
push
loop
dec
mov
lret
imul
std
jae
xchg
aam
in
pop
cltd
mov
cmp
push
mov
add
and
cmc
inc
pop
outsb
ret
jne
insb
loopne
cs
out
in
push
addb
ljmp
fsubr
inc
jmp
pop
xchg
push
out
mov
and
mov
ja
ret
jl
test
sbb
cmpsl
fidivrs
mov
dec
xchg
pop
add
cmp
mov
sbb
xchg
push
in
lahf
xchg
and
mov
js
sub
mov
jae
push
mov
ds
repnz
ficompl
push
cmpsb
xor
sub
daa
mov
xor
test
pop
ret
pusha
cmpsl
sarb
xchg
in
into
dec
test
rcll
add
and
or
push
test
imul
xor
movsl
dec
mov
xchg
popf
sbb
xchg
push
jge
mov
xchg
adc
ljmp
daa
sbb
pop
mov
xor
lods
sub
fstl
fisttpll
xchg
or
or
iret
int3
in
shll
sbb
mov
sahf
jo
mov
cmp
push
sti
xor
or
or
mov
dec
ljmp
lods
sub
inc
aam
stos
in
loopne
das
xchg
leave
sub
das
ja
scas
cmp
jne
inc
fs
xor
div
and
adc
insl
mov
pushf
aaa
lock
xchg
enter
jno
ficoml
cs
push
lods
outsb
mov
cmp
ret
out
call
arpl
dec
daa
je
cmp
loopne
jle
fists
lret
lods
out
pop
xor
js
push
stos
ds
mov
xchg
sahf
mov
cmp
outsb
mov
mov
imul
je
dec
push
pushf
pop
movsl
mov
push
aas
sub
mov
adc
aam
add
mov
xor
xchg
lock
or
adc
adc
aad
out
lods
xorl
bound
inc
and
enter
mov
imull
stos
add
lock
and
mov
jl
or
push
stos
out
push
insb
mov
in
sub
xchg
negb
cmp
lret
pop
cmpsb
fldenv
insl
fwait
daa
repnz
scas
out
dec
jb
sbb
adcb
fs
fildl
daa
leave
stos
dec
xchg
pop
mov
jmp
ret
sahf
hlt
jae
cld
push
leave
push
mov
nop
push
sahf
pop
jno
cs
repz
or
mov
in
dec
cmp
popw
mov
xor
dec
mov
lea
xchg
dec
leave
mul
data16
dec
cmp
rcll
popa
adc
mov
push
xchg
sub
imul
icebp
adc
push
mov
adc
loop
fcompl
out
xchg
hlt
test
ja
push
sbb
push
mov
inc
scas
or
dec
pop
pop
test
jl
subb
mov
push
popl
int3
inc
jnp
jge
xor
insl
test
and
adc
xchg
call
jmp
popa
dec
and
fmul
addl
inc
mov
sbb
fdivrs
pop
cli
pushf
aaa
xor
add
xchg
sti
dec
leave
lret
push
mov
insl
pop
subl
shll
insb
ret
in
lock
xorl
imul
cmp
js
push
data16
ja
xchg
sarb
pop
xchg
pop
lcall
push
mov
les
xchg
iret
loope
push
ljmp
and
aas
mov
xchg
lcall
adc
lret
xlat
sbb
ficoms
mov
pop
leave
repnz
dec
or
adc
pop
and
dec
xor
imul
idiv
or
adc
les
loop
sbb
test
test
push
dec
inc
dec
lods
and
popf
jo
push
add
mov
sub
psraw
test
xchg
in
mov
lods
sbb
leave
jns
cwtl
popf
dec
cmc
int3
add
mov
jne
xor
mov
lahf
pushf
xchg
imul
sub
pop
mov
mov
xor
mov
les
fimuls
sbb
cmp
and
jle
add
push
mov
cmp
adc
icebp
xchg
mov
dec
dec
decb
mov
pop
mov
cmp
fsubr
and
mov
xor
mov
pop
lods
fs
addb
aam
mov
test
push
jl
imul
rol
fimuls
into
cltd
inc
sbb
inc
mov
jge
js
sarb
iret
adc
mov
mov
inc
idivl
pop
lods
pusha
orl
sub
sbb
scas
in
iret
mov
push
xor
aaa
mov
cmp
cs
cltd
inc
xor
arpl
or
je
aam
pop
daa
push
gs
dec
ret
sahf
out
inc
push
mov
pop
adc
inc
mov
inc
and
mov
mov
pop
cwtl
pusha
sub
inc
fmuls
xchg
dec
test
stos
fidivrs
push
xor
jl
lock
fists
sahf
and
inc
mov
mov
aam
rcrb
call
or
pop
jae
addr16
push
loope
mov
das
xor
out
scas
mov
movsl
cmpb
mov
movsl
push
mov
cmp
and
mov
inc
add
xchg
outsb
adc
lret
mov
xchg
jns
adc
pop
xchg
jo
loopne
mov
or
mov
mov
scas
xchg
scas
inc
fcomp
jbe
sbb
xlat
in
sub
inc
mov
aas
nop
sub
lcall
or
push
xor
mov
push
xchg
aad
sub
or
mov
and
int
iret
jle
imul
lretw
xchg
inc
loop
and
scas
pusha
dec
jns
mov
pop
xchg
jb
push
push
jae
push
jecxz
xchg
das
push
push
mov
add
xchg
sbb
test
data16
rclb
fsts
pusha
adc
sub
sbb
adc
sbb
lock
add
push
jp
std
int
or
in
sub
dec
cmp
jns
or
fwait
push
push
fwait
vfnmsub231pd
inc
cwtl
cmpl
lock
pop
mov
lock
cltd
shll
pop
xlat
inc
lret
les
jmp
pop
rclb
jge
outsb
xor
mov
inc
ss
sbb
inc
subl
and
lret
mov
in
xor
pop
lea
leave
adc
lret
lret
movsb
data16
sub
or
xchg
dec
aaa
outsb
loop
sbb
mov
adc
test
aas
xor
enter
inc
mov
pusha
stc
jl
push
add
push
cmp
js
mov
jbe
push
jae
shrb
lea
stc
and
push
ja
int3
test
fdivl
jle
jbe
adc
sbbl
dec
xchg
sbb
arpl
xchg
test
lods
jo
ret
aad
xor
jb
dec
inc
mov
mov
ss
mov
cmpsl
cmp
mov
jo
mov
popa
insb
rolb
cmp
arpl
xor
pop
popa
inc
pop
jae
or
mov
sub
jae
popa
sbb
out
cli
push
jb
addr16
rolb
lock
jl
xchg
lcall
cmp
pop
mov
push
add
push
inc
mov
lret
xchg
and
xchg
add
clc
rcll
xor
push
xor
mov
fstpt
cld
repz
push
dec
cli
cli
in
std
aas
scas
sbb
adc
iret
jns
int3
or
ja
popf
xor
insl
push
jge
loope
fcompl
lods
cs
push
aam
push
jnp
and
or
adc
aaa
loopne
js
lds
inc
adc
jle
xor
or
push
dec
mov
xchg
out
scas
add
cmc
sbb
and
push
mov
push
leave
add
dec
enter
sbb
push
mov
adc
pop
xchg
stos
mov
ds
or
imul
cmp
mov
inc
cmp
daa
ja
dec
popw
movl
xchg
jnp
mov
or
sahf
jb
mov
jno
in
lea
ja
scas
out
adc
mov
cmp
sub
pop
add
push
iret
mov
sub
idivl
add
xchg
mov
mov
cmpsb
fs
mov
sub
jno
leave
cs
popf
dec
adc
and
mov
test
push
jb,pt
inc
pushl
in
push
stos
xchg
pop
adc
pop
add
daa
loope
push
loopne
inc
loopew
and
loop
adc
push
aad
out
inc
enter
adc
addr16
cwtl
add
sub
in
mov
jnp
pop
flds
pop
aaa
aas
and
sbb
sti
pop
xchg
ja
dec
adc
and
aas
inc
adc
pop
cmp
dec
leave
test
jp
jmp
cltd
negl
pop
sbb
fld
addr16
adc
sti
mov
fldt
or
xchg
and
test
pop
mov
cmc
inc
cmp
pop
dec
push
roll
scas
jnp
shl
lods
pop
mov
push
daa
ret
xchg
int3
stos
lcall
sub
lods
dec
lods
xchg
add
pop
xchg
adc
stos
test
in
loop
in
cmpsl
jmp
sub
push
pusha
sbb
push
inc
xchg
jecxz
xor
aaa
sahf
dec
sbb
jno
lcall
push
lret
inc
rcrb
or
pop
adc
sbb
cmpsb
sub
push
or
insb
push
mov
and
aam
mov
xchg
call
aas
aaa
mov
lods
test
call
jmp
jecxz
fwait
push
imul
lods
arpl
inc
fdivl
cltd
into
add
mov
ret
xlat
es
jno
pop
aam
inc
pop
push
shlb
or
pop
dec
insl
push
inc
xorl
lds
push
vmread
inc
push
sub
out
shl
pushf
cld
mov
lcall
cmp
ss
dec
dec
aam
xor
mov
ljmp
in
add
jne
cltd
dec
pmaxub
xor
xorb
rcll
sub
movsl
xor
dec
orb
mov
xor
pop
lret
sub
scas
lock
cld
pop
or
inc
xor
or
lcall
jle
call
lret
mov
lock
or
in
mov
jo
mov
or
imul
mov
scas
and
popf
ja
mov
outsl
loope
adc
subl
or
xchg
lods
out
push
or
mov
test
adc
sub
divl
adc
in
jecxz
std
push
xor
adc
outsl
cmpsl
pushf
sbb
dec
in
loop
push
cmovp
pop
jl
into
inc
gs
inc
ret
dec
mov
or
daa
les
clc
mov
dec
push
in
inc
test
adc
push
int
aam
cmp
mov
dec
push
and
cmp
lea
int
jbe
adc
insb
out
mov
jbe
popl
mov
inc
sub
testl
leave
sti
jo
pop
ja
imul
loop
push
pop
push
fwait
sahf
out
stc
mov
dec
or
insl
push
hlt
dec
dec
jnp
insb
adc
movsb
dec
addr16
js
xchg
and
fcoms
pushf
and
inc
es
lahf
and
test
in
sahf
movsl
inc
push
push
or
mov
push
jmp
xchg
sar
mov
fimuls
xor
sub
jp
imul
mov
jbe
mov
or
arpl
mov
iret
das
pop
add
adc
mov
add
dec
sbb
ljmp
ror
jge
push
adc
jno
scas
sbb
jns
dec
xchg
inc
lcall
xor
loop,pn
inc
inc
test
imul
sbb
add
jmp
sbb
fidivrs
icebp
ret
shrl
in
inc
sahf
jbe
out
adc
or
aam
and
insl
xor
sahf
dec
or
sub
in
adc
fists
fadds
or
pop
out
sbb
nop
popf
lret
cmp
add
mov
cmp
int
je
cmp
mov
into
sbb
mov
jae
out
xor
loopne
mov
icebp
mov
movsl
and
pop
cmp
add
cmc
mov
lock
xchg
xchg
xchg
loop
jg
lds
mov
inc
mov
jns
call
in
adcb
fwait
sub
lods
imul
mov
inc
ja
mov
jbe
xchg
sbb
outsb
inc
inc
mov
outsl
sub
dec
nop
mov
mov
add
movsl
or
sub
imul
and
add
push
and
pop
js
mov
sbb
je
scas
adc
lock
popa
mov
pop
adc
out
ds
add
jge
inc
pushf
pop
stos
fbld
inc
aas
mov
rorb
iret
sub
push
loop
sbb
inc
or
movaps
inc
repnz
sub
pop
pop
dec
mull
mov
ljmp
xchg
and
imul
pop
scas
cmp
mov
fnstsw
push
imul
repnz
inc
mov
cmp
pop
ja
test
imul
cltd
out
in
sub
xor
in
aad
jb
mov
pop
inc
out
adc
in
add
data16
mov
popf
pop
cmp
pop
push
dec
cld
call
mov
mov
je
or
cmpsl
gs
mov
xchg
mov
add
aam
hlt
cltd
dec
and
repz
cs
scas
iret
lods
imul
mov
movsl
pop
shrb
dec
bnd
mov
adc
push
in
inc
jle
movsl
les
sub
sbb
xchg
cmpsb
ljmp
in
add
shr
cltd
cs
cs
pop
and
xchg
jno
shrl
fdivl
arpl
lock
sub
sbb
pop
es
jge
movsl
into
aam
xchg
push
push
push
subl
mov
es
cmp
fdivl
inc
xor
cli
es
cld
sbbl
xor
dec
outsb
lock
dec
sbb
and
push
cmp
shlb
push
xchg
stc
push
xchg
cltd
pop
adc
mov
adc
loopne
lahf
add
fisttps
mov
push
add
inc
pop
iret
or
jmp
mov
out
mov
dec
sub
mov
adc
xchg
jne
inc
lret
daa
sub
or
add
jae
mov
mov
jp
mov
mov
mov
imul
mov
mov
push
imul
jnp
add
sub
loopne
mov
in
sub
loopne
push
inc
in
xor
mov
adc
add
stc
inc
pusha
cmpsb
pop
outsb
fsubr
pop
sbb
push
pop
pop
ret
in
stos
mov
fnstenv
fcomps
rcr
or
mov
loope
bound
mov
scas
pop
pop
clc
mov
imul
out
shll
and
out
or
or
shl
add
sahf
mov
push
sub
push
repz
add
sarl
addr16
add
test
pop
mov
push
sub
xchg
cli
jmp
jbe
les
es
roll
jb
movsl
cmp
or
repnz
lods
xchg
js
jecxz
mov
mov
mov
jge
mov
lods
jmp
lea
in
andb
nop
adc
jmp
lret
std
dec
mov
dec
inc
jne
lock
sbb
push
cmp
mov
jg
out
or
sbb
jp
cmp
ja
inc
aad
sub
xchg
xor
sub
mov
jg
cltd
adc
mov
push
mov
or
adc
subb
scas
js
sahf
pop
and
and
xor
repz
cli
faddl
push
add
les
push
and
call
lods
movsl
movsl
pop
cmpb
dec
lcall
pop
adc
test
rorb
ja
popf
or
xor
into
inc
sub
addr16
js
stc
jnp
loop
in
adc
mov
andl
cmp
clc
test
sbb
cmp
scas
cmc
jne
fwait
adc
add
cli
cmc
push
inc
mov
jae
nop
insl
cmp
jg
push
out
or
mov
imul
faddl
stos
or
dec
pop
out
cmp
addr16
jns
xor
pop
xchg
jg
mov
cmpsl
dec
call
frstor
inc
in
pop
lret
aaa
mov
inc
daa
sbb
mov
inc
sarb
shrl
jbe
inc
dec
xchg
or
push
in
stos
jge
xor
cli
pop
xor
stos
mov
mov
leave
sbb
mov
dec
fidivrl
push
push
jecxz
mov
push
adcb
aad
pop
fldt
rcll
push
stc
rorb
leave
adc
mov
lcall
mov
icebp
and
adc
jae
dec
aam
dec
sub
addb
icebp
xor
cmc
jb
add
mov
notb
xchg
xor
aad
push
es
or
test
dec
loop
mov
dec
shlb
mov
inc
mov
dec
sti
fists
movl
outsl
mov
dec
fsts
std
scas
iret
push
mov
lcall
push
mov
sar
and
pop
cld
scas
icebp
stc
mov
fldl
popa
daa
xor
xor
jnp
pop
inc
leave
bound
into
lcall
ljmp
dec
xchg
mov
lret
xor
xor
mov
xchg
iret
arpl
loop
iret
stc
xor
fsubr
mov
xchg
xchg
pop
mov
sub
pop
popl
loop
push
jp
dec
jns
imul
jg
or
fnstenv
jae
mov
std
and
inc
decl
lods
cmpsb
cwtl
int
iret
subb
mov
jno
in
stos
jle
loopne
cmp
or
mov
pop
imul
mov
dec
cmp
sarb
inc
fnstenv
gs
sbb
ds
or
sbb
popf
pop
adc
movsl
mov
hlt
adc
ds
inc
divl
test
add
jge
cli
ficoml
sub
push
or
stos
mulb
cwtl
add
popf
lods
into
mov
pop
mov
pop
mov
movsl
adc
cmpsb
imul
mov
mov
sub
imul
fdivs
repnz
lods
cwtl
xor
sub
xor
push
xor
adc
fnstsw
push
inc
jo
shld
mov
cmp
mov
rclb
mov
repz
push
push
pop
lds
arpl
jmp
jmp
dec
das
popa
fidivs
sbb
xchg
xlat
xor
and
push
sub
stos
mov
les
xor
mov
add
into
xchg
out
lcall
push
xchg
jecxz
jae
push
or
loope
mov
gs
stos
insb
pop
pop
jg
sub
cmpl
sbb
roll
and
mov
mov
pop
adc
cmpsb
sub
lahf
nop
loope
ljmp
pushf
cmpsb
andl
sti
inc
cmp
iret
cmc
clc
arpl
mov
loopne
pop
sub
insb
out
pop
adc
or
lods
inc
xchg
arpl
sbb
jl
push
or
shrb
xor
adc
stc
js
xchg
jae
push
ret
jmp
sub
andl
sar
mov
les
je
sbb
popf
mov
xchg
add
pop
xor
xchg
jle
pop
push
xchg
inc
cmp
cmpsl
outsb
mov
mov
pop
adc
out
push
pop
add
fisubl
dec
cli
jbe
push
fisubs
stos
push
inc
bswap
push
aad
data16
push
xor
sbb
inc
gs
pop
push
pop
popa
push
xor
je
mov
das
cmpsl
mov
xor
pusha
mov
or
arpl
insl
mov
psraw
fs
and
fsubs
mov
stc
loop
je
jae
int
cmpsl
jmp
xor
mov
inc
or
orl
bound
dec
cltd
scas
adc
jae
test
int3
lahf
icebp
pop
mov
aas
fists
arpl
out
sbbb
jo
xor
cwtl
push
and
imul
sti
imul
data16
pop
insl
push
fbstp
jmp
ret
mov
iret
pop
iret
sub
arpl
xor
cwtl
ficoms
pop
das
call
out
cltd
lock
pop
fwait
xchg
shll
pop
mov
sbb
arpl
and
loop
dec
push
cmp
cmpsl
mov
mov
push
push
enter
pusha
mov
lods
push
adc
lahf
scas
xchg
cmpsb
pusha
pop
ret
scas
stos
aas
push
fucomp
lret
dec
jb
dec
and
mov
addr16
in
and
rorb
aas
into
xchg
inc
lret
and
add
test
xor
cmc
orl
xchg
test
xchg
sub
iret
stos
mov
pushf
popa
mov
inc
sbb
pop
shlb
into
roll
and
lret
js
cmp
out
adc
adc
xchg
filds
mov
mov
jae
or
insb
call
imul
push
xchg
int
idiv
fists
and
and
sti
pop
xor
jne
jnp
xchg
inc
mov
mov
popl
xchg
lock
sub
inc
inc
enter
push
lock
ja
cltd
jb
mov
rcll
mov
xchg
mov
icebp
movsl
iret
mov
pop
fcmovb
aas
add
pop
leave
sub
push
xchg
enter
mov
xchg
pop
rol
ja
fstpl
inc
sub
imul
rorb
imulb
pop
call
inc
shlb
pop
aas
push
jno
dec
mov
push
lods
out
and
mov
stc
mov
inc
mov
push
jmp
and
lcall
dec
addl
sbb
xlat
dec
add
adc
pop
mov
push
push
and
test
xor
mov
adc
fcomps
outsb
ret
dec
mov
inc
pop
adc
icebp
jmp
fnstsw
push
stc
rcrb
cmpl
test
cli
jne
loopne
sahf
mov
ss
or
int
jo
add
loop
icebp
fsts
addl
repz
mov
imul
and
jg
aaa
jno
pop
and
mov
sub
mov
iret
stos
loopne
sahf
clc
push
out
iret
mov
mov
cmc
mov
cmp
adc
push
sbb
xor
test
xor
and
repnz
out
aad
fstpt
out
pop
sub
mov
int
loopne
mov
mov
imul
in
fwait
sub
aam
out
and
sbb
jp
subb
out
mov
xchg
adc
fsubp
stc
fsub
and
out
or
mov
jp
inc
jae
aas
add
test
xchg
xor
and
addr16
rorb
sub
adc
movsb
stos
cmc
jno
mov
xchg
insl
arpl
sub
in
mov
sbb
repz
lea
xchg
aad
ret
stc
sub
pop
rorb
push
mov
into
sbb
jmp
adc
push
lcall
cmc
imul
push
jmp
and
dec
mov
popf
ljmp
sub
jbe
cmp
in
xchg
dec
hlt
sbb
aam
and
mov
jl
pop
gs
insb
ror
mov
lock
test
int3
iret
mov
cmp
adc
or
test
xchg
mov
iret
mov
xchg
stos
mov
out
ret
cmp
mov
jecxz
mov
insl
jo
cwtl
lods
dec
cmp
lahf
inc
add
xchg
ret
fimull
aas
das
cmpsl
das
mov
xlat
scas
xor
push
jb
mov
lea
clc
push
add
cmp
iret
and
pusha
addr16
das
xchg
int3
pop
ror
mov
lahf
idivl
cmp
sbb
lds
or
fistps
inc
lcall
sti
or
sub
mov
popf
mov
cmp
frstor
stos
loopne
mov
arpl
xor
mov
sub
jmp
inc
push
ret
push
popf
sbb
inc
in
mov
hlt
dec
xor
jmp
lret
add
insl
mov
add
sub
loopne
aam
dec
out
or
mov
ds
push
push
les
ljmp
aas
cli
lcall
ret
fwait
loop
pop
mov
inc
jbe
jbe
xchg
xor
nop
popf
out
xchg
test
jno
scas
mov
repnz
fldl
xor
lock
inc
add
fnsave
push
pop
sahf
icebp
mov
test
aad
fcom
test
movsl
lcall
outsl
lcall
sbb
clc
and
loope
dec
pop
sarl
inc
subl
popf
sbb
mov
rcrl
clc
ret
pop
and
cwtl
loope
xchg
xor
jnp
add
arpl
jp
xchg
adc
insb
cmp
adc
daa
xchg
xchg
rol
cmp
cmp
xchg
and
push
cmp
je
sub
mov
scas
ja
xchg
aad
mov
addl
cmc
roll
movsl
sub
ds
inc
mov
in
adc
cmp
sti
jge
mov
scas
repz
shl
addr16
aas
jg
inc
repz
fs
icebp
dec
stos
add
add
cmpl
and
sub
or
insb
mov
cmp
sbb
cmpsb
inc
xchg
fcoms
sarl
or
out
aaa
jno
jecxz
push
or
je
hlt
cltd
xchg
or
gs
negl
loop,pn
dec
movsb
fucom
mov
mov
sbb
loope
inc
das
and
das
pop
push
orl
mov
adc
pop
push
cs
push
mov
bound
cmp
popa
and
shll
jnp
mov
jmp
xor
fs
loop
repnz
pop
mov
shlb
xlat
fistpll
and
cmp
xchg
popa
leave
push
pop
cli
frstor
cmc
mov
jg
lret
clc
cmp
addr16
ljmp
mov
daa
push
loopne
stos
inc
sahf
movsl
imul
fcomps
sbb
cmc
jmp
test
sbb
shrl
repnz
inc
je
les
mov
dec
lods
lods
mov
or
push
aaa
shll
fists
mov
inc
push
fldcw
xor
jl
sbb
gs
and
lock
repz
xchg
popa
cli
dec
repz
ljmp
scas
mov
cmpl
xchg
dec
sti
in
psubsw
jb
jmp
aaa
mov
int
inc
inc
andb
sbb
jmp
add
inc
lock
jmp
cli
fcmovu
mov
inc
push
outsb
xor
es
jbe
add
nop
rorl
inc
dec
mull
sti
sbb
xchg
jge
test
pop
mov
fcoms
ss
cmp
lea
jns
jo
stos
xchg
push
sbb
adc
test
aam
jl
pop
xor
test
mov
inc
mov
lret
in
or
mov
xchg
mov
inc
sub
inc
aad
sub
clc
aaa
cmp
sub
pop
push
cmp
rolb
ljmp
inc
and
sar
mov
sub
les
lea
test
jo
leave
insb
scas
cmp
mov
sbb
xor
cmp
fsubrp
icebp
andb
jmp
mov
je
int
or
ret
pop
jge
xor
iret
out
sub
or
lahf
xor
sub
xchg
inc
xchg
pop
sbb
adc
xchg
jge
jecxz
lcall
inc
sbb
mov
add
mov
aad
and
ret
adc
pop
repz
pop
add
hlt
mov
pop
mov
inc
jne
jge
dec
test
and
adc
jp
xor
leave
dec
jg
xchg
nop
cmpsl
pop
pop
jmp
adc
xor
xor
dec
cmp
int3
fcoms
xchg
fcomps
or
fistpll
int3
into
iret
jns
sbb
outsl
mov
add
fdivrs
sbb
das
js
pinsrw
orb
hlt
and
daa
xchg
sub
shr
movsb
jle
adc
mov
sti
je
inc
push
jnp
loopne
loopne
mov
push
mov
outsl
push
jb
nop
xor
adc
in
push
adc
and
and
std
das
out
mov
loopne
arpl
mov
fistps
dec
inc
lcall
jo
stos
mov
or
mov
and
in
fistl
adc
or
mov
xchg
imul
jmp
ret
push
data16
mov
push
stos
cwtl
test
dec
add
push
pop
lods
inc
cmpsl
cltd
fnstenv
stos
ret
xchg
fdivs
pop
out
pop
dec
inc
jle
rclw
js
inc
lcall
rolb
ja
xor
pusha
push
sahf
fisttps
xor
popf
cmpsl
ja
in
push
loopne
in
adc
mov
inc
cmpl
aad
es
cli
jnp
dec
mov
inc
xchg
fs
xchg
xor
fstl
ljmp
clc
push
lock
das
mov
push
dec
inc
sbb
in
push
rolb
xchg
mov
xchg
sub
movsb
bndstx
jle
outsl
call
lret
push
adc
pop
rcrb
imul
popa
clc
mov
mov
fwait
ja
repz
jle
scas
xor
fs
jmp
mov
rcll
test
push
aaa
sbb
stc
in
fistpl
push
pop
adc
cmpsl
and
push
imul
sbb
sub
stos
push
mov
sub
scas
xchg
test
xor
push
sti
cmp
jmp
pusha
ja
clc
les
mov
movsb
jge
or
je
subb
cmpsl
xor
shrb
and
out
cmp
pop
mov
mov
into
sarb
pop
icebp
sahf
mov
push
ss
push
out
xchg
pushf
inc
hlt
lcall
jmp
mov
loop
push
push
sbb
sahf
sti
xchg
les
mov
aaa
js
imul
or
out
imul
in
fisubs
lret
sbb
iret
popf
out
popa
mov
aam
xchg
push
sub
mov
test
repz
push
cs
mov
lea
sbbl
stos
xchg
cmp
out
scas
out
lods
cmc
sub
aas
jge
subb
arpl
and
call
pop
adc
mov
mov
cmp
cmpsl
out
mov
jns
jmp
xor
fmuls
mov
sbb
dec
ljmp
cwtl
paddb
test
lret
jmp
pop
mov
adc
fs
in
mov
fwait
sub
daa
push
loope
aaa
jmp
pop
xchg
bound
int
xchg
cmc
cmp
dec
rclb
pop
pop
push
push
ret
lods
scas
jnp
pop
mov
fistl
mov
pusha
cmpsb
rorb
dec
pop
mov
lods
pop
xchg
pop
and
xchg
sti
mov
mov
jg
jne
movsl
std
adc
sub
add
jecxz
iret
jo
std
jno
cmpb
cmp
scas
lcall
mov
jae
icebp
es
push
dec
cld
nop
mov
mov
sub
lahf
xchg
inc
pop
int
sbb
sub
out
leave
xchg
add
and
or
sbb
cmp
pushw
jae
mov
mov
xchg
xchg
mov
push
movsl
add
jl
xor
inc
push
cs
add
push
or
adc
lcall
pop
jmp
in
sub
insb
xorb
dec
gs
sbb
jmp
popa
repz
gs
jno
ret
data16
mov
icebp
jmp
stos
or
pop
mov
aas
lock
out
scas
leave
inc
jae
data16
cmpsb
scas
jno
loop
mov
mov
mov
rcrl
mov
sbb
pushf
mov
dec
std
insl
loopne
mov
je
xchg
sbb
popa
push
adc
cwtl
or
mov
dec
call
ja
ljmp
jo
ficomps
mov
adc
mov
fcoml
sbb
out
stos
jb
xor
into
dec
xor
or
int3
jns
jnp
add
out
mov
test
sbb
add
dec
and
xchg
lods
pop
cld
mov
pop
movsl
lds
jmp
mov
mov
mov
shrl
outsl
arpl
mov
xor
xchg
jne
lods
mov
mov
xchg
add
das
jo
and
jbe
inc
lock
inc
lods
sub
loope
dec
es
and
xchg
pop
and
add
pop
bound
jmp
js
or
mov
inc
cltd
inc
in
xchg
and
adc
mov
nop
xor
hlt
jmp
sarl
lds
fsts
xorb
xchg
pop
cld
fcmovnb
negb
faddl
imul
lds
insl
cmpsl
push
ret
push
lahf
mov
gs
fs
sbb
mov
xor
bnd
inc
data16
dec
fwait
ljmp
cwtl
bnd
ja
sahf
test
idivb
lods
jg
xor
lcall
lcall
outsl
xchg
call
mov
jge
or
jp
das
mul
and
std
out
dec
rorl
and
jmp
orl
sbb
stos
mov
fnstcw
inc
in
jmp
cmp
sbbb
notb
inc
mov
pop
fwait
popa
add
cltd
xchg
mov
xor
or
daa
jne
sub
aaa
adcb
in
lods
pop
idivl
lds
rcll
jge
or
adc
lea
or
divb
push
mov
xorl
adc
orl
adc
loope
movsb
adcl
fcmovb
mov
test
loope
xor
mov
aaa
and
mov
in
pop
aam
cmp
jns
lret
push
mov
add
mov
pop
clc
jne
bound
sti
hlt
xchg
mov
and
sbb
lcall
dec
out
xchg
inc
adc
ss
call
scas
inc
push
mov
adc
jg
add
test
bound
lock
aas
dec
shr
mov
repz
sbb
pop
andl
pop
negb
out
ja
jb
data16
jecxz
xchg
add
inc
sbb
jns
push
and
xor
jb
xchg
sub
jb
cmc
pop
add
xor
fcoms
dec
jg
inc
mov
mov
xchg
sahf
jge
lret
mov
repnz
js
push
add
push
bound
push
inc
jge
jns
lcall
push
fldl
outsl
ljmp
sarl
inc
mov
cmp
cmpsl
sar
movups
mull
adc
aam
sub
rcll
xorb
shll
fcos
daa
subb
sti
insb
nop
sbb
mov
xchg
add
push
xchg
std
jns
pop
pop
jmp
es
sahf
loop
in
mov
ljmp
sub
ja
jg
xchg
ret
aam
out
adc
aas
mov
sbb
dec
adc
cwtl
inc
sub
inc
adc
xchg
mov
mov
mov
xor
jp
pusha
xchg
addr16
inc
adcb
sbb
inc
pop
jl
fcoms
iret
pop
mov
cmp
test
mov
and
dec
and
fs
ljmp
outsl
fimull
mov
mov
adc
cmp
ret
jno
mov
or
jle
xchg
scas
shll
xchg
lods
lea
and
mov
mov
inc
lock
pop
inc
push
mov
cmpsb
mov
pop
adc
in
push
pop
or
or
jns
adc
out
adc
xor
adc
add
out
idivl
icebp
andl
inc
divl
and
je
or
cmpsb
lock
mov
inc
xchg
stos
inc
jle
in
out
iret
sbb
mov
in
dec
pop
call
gs
ret
ficomps
adc
mov
out
and
pusha
pop
std
mov
call
scas
jle
stos
xchg
je
sub
cmp
pop
lret
mov
mov
out
push
outsb
sbb
rorl
lods
pop
mov
and
xor
mov
adc
push
mov
lret
out
cld
in
xchg
stos
cmp
add
outsl
xor
adc
inc
cmc
mov
jmp
test
js
call
cmp
lea
xchg
cmc
into
and
or
jecxz
jge
xchg
mov
mov
popf
push
and
test
mov
movsl
sti
imul
icebp
out
lds
xor
dec
cmp
mov
test
mov
jnp
xor
movsb
imul
ja
std
pusha
jae
stos
enter
fimull
mov
cltd
lods
mov
dec
xlat
mov
lea
mov
adc
cmp
push
rorl
push
imul
or
test
mov
andb
les
dec
or
adc
fsub
daa
insl
outsb
out
data16
mov
cmpsb
outsl
cmc
das
cmp
sub
test
js
jns
loope
mov
std
test
mov
in
dec
je
outsb
es
dec
cmp
inc
rep
dec
scas
sbb
mov
xor
mov
dec
sub
fwait
inc
enter
std
into
icebp
pop
pop
sbb
ficoml
fisubrs
enter
ljmp
icebp
aad
pusha
mov
push
add
popa
pop
mov
rcrl
inc
mov
dec
repnz
pop
cmc
insl
mov
jp
inc
sub
popa
mov
enter
out
pushf
mov
dec
sbb
aad
xor
out
push
xor
adcb
icebp
jle
cs
test
xor
cmp
popf
ja
jne
scas
inc
push
push
mov
push
sub
loop
xchg
inc
sub
call
notb
or
je
mov
lret
mov
ret
xchg
adc
ds
stos
mov
rcll
dec
sahf
in
sub
jo
lcall
and
mov
movsl
imul
xchg
jg
popa
dec
fisttpl
cmp
xchg
fildl
cmpsl
lcall
or
sahf
pop
mov
push
inc
pop
shll
into
std
jno
hlt
rorl
adc
push
xchg
pop
dec
bound
jne
and
in
push
movaps
inc
pop
xchg
out
out
pop
adc
xlat
add
pop
gs
lcall
pop
push
popf
js
repz
fwait
xchg
push
sbb
sbb
ret
xor
sbb
int
test
mov
pop
xor
fs
movsb
cltd
arpl
add
mov
mov
sub
or
shll
stos
sub
lret
jb
jmp
sahf
sub
jl
lret
cmpsb
push
leave
loop
imul
das
addr16
jmp
pop
nop
xchg
mov
dec
sbb
outsl
sbb
popa
jnp
adc
inc
xchg
mov
pop
into
jnp
xor
dec
inc
loopne
inc
mov
aas
adc
lods
aas
out
sub
popf
xchg
fistps
mov
xor
adc
in
imul
pop
sub
repnz
repz
out
inc
xchg
mov
xchg
sahf
adc
inc
push
idivb
pusha
xchg
les
sbb
add
push
add
jns
data16
sbb
sti
mov
pushf
and
out
mov
jg
sbb
cmpsb
mov
mov
xor
xor
mov
mov
or
ret
xor
sbb
mov
add
loope
jp
stos
ja
in
repnz
mov
scas
fcmovbe
cmp
shlb
inc
idivl
jmp
jp
out
jne
lcall
mov
int
popf
cmp
aam
fldenv
pop
scas
cmp
aaa
test
and
lahf
orb
movsl
fimuls
shr
subl
sahf
sub
scas
sbb
notb
adc
pop
jl
inc
dec
mov
aam
fdivrl
aam
jb
xchg
or
mov
rol
jp
mov
inc
mov
clc
mov
mov
sub
xor
adc
xchg
lock
jbe
mov
sub
sti
pop
lock
xchg
mov
stc
push
aaa
xlat
inc
cmpsl
lock
loopne
mov
repnz
aad
data16
loop
into
adc
xor
mov
scas
and
in
push
inc
or
mov
sbb
shlb
add
mov
in
jnp
fidivs
jp
pop
sbb
in
sbb
sarl
pop
fwait
jecxz
add
lcall
mov
ljmp
cmpsb
push
shrl
sub
inc
mov
fldenv
data16
mov
fistpll
mov
icebp
aas
ss
lods
out
xchg
sub
leave
stc
mov
stos
dec
push
call
ret
pop
xor
test
add
jg
pop
outsb
fcmovnb
aaa
inc
dec
inc
rcr
fistl
jge
adc
dec
sbb
bnd
cmp
cmp
test
add
push
xor
addl
enter
vpmaddwd
push
gs
jb
outsb
push
mov
adc
es
dec
pop
sbb
call
xchg
xor
mov
in
adc
push
jl
push
js
and
mov
shl
insb
pop
xchg
xor
xchg
mov
stos
sub
outsb
or
sahf
aam
je
imul
push
pop
sbb
xchg
shll
lret
cmc
cmpsl
popl
enter
pop
lods
outsl
mov
cmpsb
je
ror
fdivrs
mov
xor
lret
jns
mov
test
lock
dec
in
xor
pop
divb
sub
lods
loope
sub
pushf
jns
loope
ret
data16
xchg
loopne
mov
and
lods
testb
sti
add
icebp
jmp
or
cmp
pop
add
sbb
nop
mov
adc
xor
inc
shr
mov
adc
xor
xchg
xchg
js
xchg
stos
ds
sbb
mov
int
scas
lahf
lret
dec
ficomps
cvttps2pi
dec
xchg
sub
mov
dec
xchg
cmp
push
ss
mov
or
loopne
jnp
sarb
mov
cmp
dec
pop
shrl
mov
cmp
sub
jmp
sub
in
shrl
cmpb
popa
push
hlt
in
pop
cli
jbe
scas
out
push
adc
es
push
mov
les
dec
sahf
int3
push
pop
nop
push
and
mov
jae
mov
enter
xchg
roll
test
push
add
pushf
mov
sub
ret
rorl
dec
xchg
push
inc
mov
mov
push
cmp
push
out
sub
mov
lret
or
movb
pop
aaa
enter
add
std
test
pop
mov
pop
push
and
pop
sub
cmp
call
ret
sbb
push
neg
in
enter
xchg
mov
call
das
cltd
mov
push
adc
push
mov
into
jae
mov
dec
inc
popa
pop
sbb
insl
fsub
gs
ja
or
push
data16
and
sbb
loop
jne
sub
xor
adc
shl
out
push
js
pushf
shl
dec
dec
mov
sbb
pop
push
sbb
mov
cmp
xor
ja
mov
out
cmc
lea
sarl
sahf
sti
sbb
and
out
js
int3
shlb
std
cmpsb
cltd
nop
sti
shl
push
cmp
loop
cmpsb
xchg
push
lahf
xor
or
inc
test
cld
mov
xchg
dec
mov
test
sub
lcall
jle
or
mov
or
lret
push
fcmovnbe
add
or
mov
lock
out
sbb
dec
pushf
mov
adc
xor
cmp
lret
add
mov
sub
pop
orl
jo
pop
and
inc
add
mov
pusha
icebp
pop
jle
sub
xchg
mov
jp
push
pop
add
js
stos
sbbl
les
fsubl
and
fs
lahf
mov
rcrl
xchg
mov
xchg
scas
aam
xlat
jbe
dec
or
or
mov
jae
stos
daa
in
scas
cmp
jo,pt
int3
jbe
jns
int3
mov
xor
dec
mov
mov
inc
mov
push
enter
push
test
pop
outsb
xor
filds
test
ficompl
push
cmc
bound
add
sbb
push
gs
js
dec
cmpsb
in
and
out
cmpsb
and
in
jl
xchg
or
out
adc
ds
stos
jecxz
addr16
add
jecxz
adc
andb
sub
cmp
adc
jg
in
jp
push
xor
aad
ja
ficomps
loope
std
push
and
bound
movsl
push
gs
cli
or
test
outsb
pop
mov
into
lods
jbe
aam
mov
xchg
rol
push
mov
cmp
mov
nop
imul
push
pushf
lea
lahf
mov
std
jecxz
xor
icebp
pop
ud1
mov
xor
push
push
jmp
scas
mov
dec
out
fs
add
jle
and
inc
mov
in
mov
popa
add
inc
js
mov
outsb
ljmp
pop
jmp
cmpsb
xor
test
jmp
js
push
dec
pop
xlat
shl
mov
pop
jecxz
push
mov
fisttpll
mov
cli
inc
daa
mov
imul
dec
sub
adc
enter
sti
dec
leave
daa
in
adc
mov
adc
scas
icebp
int
sub
jo
pop
bnd
int3
pop
sub
push
mov
pop
rclb
mov
push
mov
mov
movsl
ja
adc
push
jae
das
setg
loopne
test
iret
or
psubusb
push
and
jg
outsl
mov
std
jmp
mov
sbb
je
jns
aaa
inc
movsl
mov
gs
cmp
fidivl
mov
add
push
ror
lret
daa
enter
popa
mov
xchg
ret
rol
scas
pushw
xchg
ds
cmp
xchg
outsb
jg
fs
pop
inc
xlat
adc
mov
or
jns
add
mov
aas
outsb
and
adcb
jnp
movhlps
nop
cmpsb
loop
xchg
push
arpl
pop
es
ja
or
movsb
out
xchg
cmpsb
bound
popa
inc
adc
cmp
jl
movsb
or
mov
scas
mov
stc
sbb
loopne
add
idivl
and
lret
jmp
leave
lcall
lret
lods
pop
cwtl
imul
pop
sti
test
xchg
addr16
lahf
add
sub
insb
jne
xchg
and
int3
add
add
in
fmul
mov
sti
sbb
ja
leave
mov
loope
adc
mov
mov
pop
inc
faddp
flds
push
mov
mov
cmp
pop
aam
inc
fwait
dec
dec
inc
add
sbb
cwtl
cmc
push
adc
mov
pop
jmp
in
dec
xor
jl
jns
cmp
aad
inc
mov
pop
push
cmp
push
cmp
movsl
xchg
stos
and
xor
xor
cmp
cmp
adc
dec
es
shll
dec
inc
sbb
sbb
and
mov
stos
cld
pop
dec
out
add
pop
cmp
pop
sbb
popa
in
in
outsl
bound
jae
dec
iret
cmc
pushf
sbb
sub
outsb
nop
das
stc
add
jno
test
adc
and
push
push
int
inc
push
mov
xchg
sbb
add
adc
jno
pop
add
inc
mov
and
sub
mov
push
cmp
lcall
mov
sti
test
fcmovu
dec
lock
es
imul
mov
lahf
js
dec
lock
adc
add
shl
scas
movsb
out
rorl
dec
and
movsl
pop
mov
mov
lcall
dec
das
xchg
sarb
idivb
xchg
push
push
scas
fildll
xchg
sub
outsl
push
or
paddq
js
add
mov
loope
pop
cmp
fmul
and
push
int
inc
arpl
fwait
sub
push
adc
mov
lods
pop
outsl
mov
in
es
scas
cwtl
int3
jge
shrb
imul
pop
jge
fcompl
lcall
jmp
xchg
jge,pt
xchg
imul
and
mov
sbbb
leave
sub
ss
cmc
push
push
insb
mov
nop
enter
pop
cmpsb
stos
mov
pop
mov
xrelease
pop
int
test
inc
mov
test
adc
sbb
pop
popaw
jmp
mov
in
out
nop
dec
cwtl
imul
ret
inc
call
jge
xor
mov
xor
mov
jp
in
test
or
mov
xlat
bound
jmp
les
xlat
push
cwtl
mov
pop
fstp
dec
in
xor
pop
lret
sub
movsb
jb
pop
mov
out
add
imul
jbe
pop
insb
aad
push
gs
gs
outsb
cmp
in
ljmp
test
hlt
mov
ficomps
gs
dec
clc
cmpsb
push
xchg
xor
mov
xchg
inc
xchg
or
aas
mov
push
add
xchg
cld
cltd
inc
mov
push
jns
imul
jle
mov
mov
int
fsubr
hlt
and
lcall
pop
mov
cmp
in
or
pop
cld
and
sub
test
push
sbb
sahf
imul
push
mov
arpl
ljmp
je
imul
xchg
lods
icebp
mov
dec
int
or
daa
ret
fistpll
or
mov
cmp
mov
insb
add
sub
xor
mov
push
out
lds
push
psubusw
mov
add
inc
mov
pop
repz
cmp
cwtl
in
fstps
pop
and
jl
add
pop
inc
decl
mov
subl
cmp
and
test
fimuls
shlb
stos
xchg
iret
and
mov
imulb
ss
int
cmp
push
push
push
cli
inc
inc
hlt
test
mov
cmp
jb
rcll
dec
sahf
dec
jmp
jno
adc
sbb
sub
adc
js
inc
outsb
outsl
popf
sub
cmp
xlat
cld
test
and
in
pop
lret
jg
pop
inc
cmp
mov
jo
mov
cli
inc
dec
or
sub
sbb
lahf
jae
loope
nop
fisubl
repz
mov
mov
mov
or
pop
aaa
and
das
jg
push
stos
xchg
jbe
xor
scas
sarl
mov
jb
jmp
out
mov
out
and
hlt
call
jmp
and
push
adc
adc
mov
jne
dec
or
je
and
pop
insl
pop
adc
out
int
xor
enter
sbb
adc
push
or
gs
xchg
and
pop
adc
aaa
xchg
sub
cld
ljmp
pop
push
add
mov
inc
fnstsw
sub
and
jae
arpl
mov
mov
or
adc
push
cmp
leave
aad
or
out
cmp
int3
push
js
out
mov
ret
mov
lcall
cmpsb
cmp
lahf
pusha
sub
testb
push
adc
dec
js
mov
shl
mov
xchg
enter
sbb
xchg
scas
dec
or
push
dec
sbb
xor
xor
sbb
adc
pusha
popa
movsb
or
ljmp
sbb
ss
fnstcw
xchg
mov
out
fimull
leave
mov
or
and
popf
cmpxchg
pop
lea
in
sub
mov
add
imulb
lods
dec
sub
fidivrs
sub
cmpl
pop
mov
fwait
pop
xchg
push
test
cmpl
and
jl
aaa
adc
cltd
xlat
mov
fisttpll
xchg
mov
clc
aas
sbb
lret
mov
push
push
rolb
cwtl
in
jae
pop
sbb
aad
jg
inc
mov
push
pop
stos
ss
mov
add
xor
mov
out
jb
imul
push
dec
cmpsl
les
push
push
insb
xor
aas
ret
mov
test
je
push
icebp
test
mov
and
les
cmp
jecxz
xlat
std
jge
addb
mov
mov
or
mov
xor
call
mov
cmc
pop
ss
scas
sbb
or
adc
inc
dec
mov
icebp
rolb
pop
adc
mov
xchg
mov
outsb
sub
out
dec
divps
xor
sub
lea
inc
xchg
cmpl
std
xchg
fistl
popf
adc
fimuls
jp
xchg
jecxz
sub
jno
cs
jmp
or
cld
or
jmp
push
shll
js
aaa
pop
testb
enter
push
jae
in
dec
mov
ja
aad
hlt
xor
or
sub
loope
mov
gs
add
cmp
adc
mov
and
clc
ret
mov
shrl
sbb
mov
fimuls
push
lcall
rcrl
jbe
scas
jle
dec
dec
jmp
xchg
jmp
pop
roll
mov
adc
outsb
or
dec
cmp
sarl
dec
popa
insl
stos
ret
mov
in
icebp
cmc
pop
call
adc
testb
ljmp
aam
and
call
sbb
sbb
push
cmc
shlb
test
sbb
xchg
outsb
push
int3
push
jns
add
mov
sbb
fmull
pushl
mov
jne
test
scas
xchg
mov
inc
nop
cmpsl
xchg
or
dec
jno,pt
fcmove
adc
mov
mov
cmp
clc
js
lret
fisubrs
insl
dec
jl
jg
xchg
pusha
pusha
cltd
ret
stos
mov
js
xchg
mov
insl
lods
pop
into
jmp
mov
push
js
fcomi
xchg
mov
cwtl
sub
insb
sbb
aaa
and
pop
lcall
mov
xor
mov
pop
push
rcl
les
test
adc
fisubrs
mov
push
inc
fsub
test
or
mov
dec
mov
pop
mov
or
pop
int3
popa
jne
sbb
nop
clc
adc
mov
jbe
sub
xor
hlt
cs
xor
loopne
jnp
mov
mov
pop
pop
or
mov
mov
or
mov
jmp
lret
out
push
mov
popa
addr16
xchg
adc
push
mov
sti
out
adc
xchg
and
dec
test
lds
and
shll
add
add
sbb
in
sub
pop
mov
in
adc
gs
out
inc
rorb
xchg
xchg
out
push
pop
arpl
mov
jne
scas
jne
loop
movsl
gs
addr16
inc
setle
sarb
inc
dec
ret
add
mov
xchg
ficompl
jecxz
cmovle
dec
xor
outsl
hlt
testb
das
fwait
dec
gs
iret
add
les
jle
cli
xor
sbbb
nop
dec
ret
cmpsl
push
xchg
xor
mov
xchg
ljmp
xchg
cmpsl
popa
orl
xchg
push
pop
sub
lret
push
jl
add
dec
mov
dec
add
sbb
cld
jns
or
and
push
fadds
or
inc
mov
lcall
pop
call
xchg
add
mov
addb
fnstenv
ss
sub
pop
out
loopne
xor
mov
dec
jl
inc
aaa
inc
lret
add
fildl
pop
push
push
std
add
nop
sub
inc
or
movsb
xchg
dec
loopne
xor
mov
outsb
fsub
int
cli
sbb
es
and
fisubl
xor
movsl
cmp
bound
jp
rorb
inc
sub
aad
sub
out
xor
les
or
inc
jne
fxch
mov
icebp
push
loopne
cwtl
iret
std
sbb
aad
cmp
repz
xor
or
cs
incb
dec
push
jne
sbb
sti
aam
clc
in
daa
loope
sbb
pop
popa
push
sahf
mov
aam
sbb
or
repz
cmc
pop
and
jne
mov
loop
nop
mov
xchg
adc
mov
in
notb
push
ret
inc
test
loop
lds
or
jns
xlat
mov
in
lods
jle
pop
mov
in
popf
and
and
or
xlat
dec
aad
mov
and
cmp
or
cmp
lods
dec
lret
daa
mov
adc
inc
xchg
xchg
aaa
adcb
cmp
stc
add
or
mov
adc
je
fwait
ds
xchg
push
xchg
hlt
mov
test
and
sbb
loop
jae
adc
jno
cmp
jg
test
addr16
push
in
cwtl
mov
pop
and
int3
fidivs
test
add
sbbb
vpcomuq
cmp
outsl
and
mov
and
inc
xor
add
insl
ljmp
decb
push
outsl
sub
scas
jecxz
fildll
pop
mov
out
sbb
cmp
inc
cmp
insl
cmp
lods
jns
jnp
cmc
mov
jno
dec
mov
mov
aaa
add
and
sub
call
lret
cmp
pop
cmp
adc
push
or
insb
dec
std
fstpt
add
iret
xchg
adc
dec
repz
in
mov
xchg
xchg
push
dec
add
add
pop
neg
mov
jle
out
xchg
imul
dec
clc
sbb
adc
mov
inc
jo
adc
xchg
sarb
or
sbb
popa
aam
adc
bound
jne
and
aaa
enter
xchg
aaa
push
outsb
push
push
cld
les
vsubsd
inc
lret
subb
in
pop
jnp
fcomip
push
movsl
mov
loop
push
push
out
repnz
push
adc
hlt
jg
dec
das
and
ret
xchg
xchg
add
mov
ret
dec
mov
jbe
rol
cmp
rclb
movl
arpl
push
and
sbb
xrelease
push
cld
repz
fstps
xor
lock
icebp
fistps
in
pushf
sub
mov
std
add
pop
mov
rcr
push
loope
enter
int3
jo
xor
mov
in
mov
dec
or
push
cld
jl
sbb
in
xchg
cmp
in
pop
movsl
mov
xor
mov
dec
mov
xchg
mov
and
es
hlt
icebp
xor
push
push
xor
sar
imul
push
cmp
int
cmpsl
push
ds
stos
inc
dec
jmp
xchg
cltd
dec
push
jo
sub
insb
mov
adc
push
adc
loop
or
pushf
mov
and
xchg
pop
fisubrs
and
jg
xlat
test
nop
stos
nop
inc
je
leave
sarl
loope
jb
adc
sahf
mov
push
sahf
xchg
loope
subb
mov
cmp
mov
imul
add
inc
and
and
dec
fidivrl
cmp
lcall
test
add
lock
xchg
jb
fisttps
mov
jge
leave
push
out
sbb
fcmove
pop
inc
daa
pop
push
outsl
inc
pop
dec
in
cmp
movsl
sbb
mov
lahf
push
sbb
inc
pop
jo
jo
sbb
shll
adc
or
sbb
push
subb
sub
popf
test
lcall
dec
inc
or
cltd
iret
aad
pop
std
inc
into
outsb
fldl
jbe
std
mov
push
or
js
mov
jo
and
test
cmp
inc
cmpsb
test
sbb
push
scas
jae
stc
or
imul
jl
loope
jno
orl
imull
sbb
arpl
mov
mov
movsb
dec
xchg
sbb
mov
sbb
test
push
and
cld
hlt
add
push
mov
cs
mov
jae
das
jl
mull
int3
xchg
xor
sbb
jge
mov
sub
cld
mov
sbb
pushf
incb
imul
mov
ror
mov
rcll
popa
fidivs
addr16
lret
sub
push
cmp
popf
fldl
mov
jae
add
out
mov
push
jecxz
pop
je
mov
not
ret
insb
push
xchg
or
ds
pop
push
and
pop
mov
dec
rcr
rcr
stos
adc
lods
mov
or
mov
incl
jne
jbe
mov
or
call
add
sbb
mov
xchg
outsb
jb
sub
call
cmp
sub
js
pop
xchg
xchg
mov
jne
sub
fs
jge
ret
es
into
xchg
scas
sub
mov
dec
imul
mov
push
push
stc
mov
sbb
mov
jb
testl
lds
aad
jge
mov
lods
ss
rcl
mov
or
test
sbb
or
pop
cs
and
sub
das
cmp
mov
and
jno
imul
popaw
scas
lds
pop
push
mov
and
push
loop
inc
mov
enter
js
jle
mov
insb
cld
sbb
in
mov
std
sbb
jecxz
add
daa
nop
jmp
jae
and
push
push
dec
pop
xchg
leave
mov
mov
adc
cmp
inc
mov
xor
out
pop
mov
imul
mov
nop
mov
mov
cs
inc
shll
cmpsl
xchg
stc
jbe
flds
cmc
sahf
xchg
xor
fcomip
and
adc
cmp
jl
rolb
push
cmpsl
cmc
pop
jae
ss
cmp
pusha
out
stos
sbb
pop
into
pop
icebp
push
and
faddp
stos
jmp
xchg
or
or
cmp
mov
jmp
popf
cmp
orl
xchg
add
or
xor
pop
add
inc
inc
inc
cmp
xor
sbb
jmp
xchg
sbb
push
das
add
ss
lcall
sbb
and
lds
mov
fsub
repz
sarl
cmp
push
pop
stc
mov
jge
xor
popl
jne
mov
sub
stos
lcall
jno
sub
mov
sbb
dec
adc
shr
jo
std
js
hlt
arpl
mov
cmp
push
aad
add
sti
sti
pop
pop
add
pop
fldt
mov
mov
and
lcall
xchg
add
nop
int3
inc
stc
ljmp
cmpsb
fs
inc
push
xchg
fmulp
mov
xchg
das
outsl
lds
sti
sub
adc
pop
addb
call
pop
popf
lcall
push
cmp
mov
mov
sbb
out
xor
jnp
test
mov
es
sbb
inc
push
in
mov
rcll
push
push
movsb
sbb
int3
and
into
inc
and
sub
push
popa
in
fcomps
xor
imul
ja
daa
xchg
out
pop
xchg
rcrb
sarb
inc
mov
test
daa
mov
scas
jno
out
arpl
ss
push
lret
in
dec
insl
jecxz
xchg
mov
psrlw
aad
adc
lods
pushf
mov
add
out
add
mov
dec
and
mov
neg
and
sti
fsubr
dec
add
jg
fidivrl
inc
sbb
mov
push
jl,pt
daa
in
push
sub
cmp
sbb
daa
stos
mov
mov
pushf
jmp
fnstenv
xchg
cmp
sahf
adc
mov
push
mov
jnp
mov
adc
stos
inc
cld
sub
movsb
pushf
sahf
shlb
jne
pop
add
and
pop
or
xchg
in
jecxz
adc
ljmp
dec
loope
adc
xchg
cmp
mov
sbb
mov
xchg
push
pop
jb
or
jle
inc
mov
dec
jle
jp
aaa
adc
hlt
lret
xchg
mov
push
pusha
cmc
add
or
mov
jp
fbld
adc
sarl
pop
lods
in
dec
add
dec
dec
dec
mov
sub
jb
mov
or
mov
pusha
jp
adc
xchg
in
pop
aaa
push
xor
cmp
cmp
mov
mov
xchg
sub
add
mov
mov
mov
sbb
ja
pop
sub
xor
stos
jle
dec
adc
cwtl
xchg
xorl
das
push
sbb
push
dec
xor
cmp
jp
ja
inc
cmp
cltd
ss
inc
loop
mov
stos
push
ror
xlat
pop
add
pop
in
mov
sbb
frstor
in
sar
sarb
shrl
sub
add
movsb
sti
gs
push
lret
inc
push
sbb
pop
mov
sbb
pop
les
mov
mov
cmp
mov
sti
sbb
hlt
repz
rcl
sub
arpl
jno
adc
pop
inc
mov
cmp
out
sub
aam
test
icebp
or
push
and
clc
xorl
mov
lods
imul
aas
xchg
jns
test
dec
lods
mov
xchg
fwait
jle
mov
pop
add
stos
pushf
fdivrp
cmp
jnp
movsl
add
push
ljmp
in
fcom
sbb
lods
mov
int3
cmp
mov
xchg
mov
jno
jno
les
nop
add
mov
rol
leave
es
arpl
jne
mov
mov
dec
aaa
or
mov
cltd
cmp
inc
and
test
push
sub
pop
xor
mov
es
shlb
out
and
jns
push
sub
loope
or
jno
or
aam
ds
sub
and
pop
jge
mov
and
or
mov
pop
xorl
xchg
loop
mov
xchg
pop
dec
push
xchg
or
in
cwtl
test
in
test
or
ficomps
sgdtl
lods
sbb
aam
jmp
pop
sub
les
outsb
xlat
pop
push
iret
dec
loopne
pusha
jbe
aam
push
jae
lea
mov
test
xor
sbb
shrb
orl
and
jnp
iret
jo
mov
pop
lds
sub
aas
lods
ds
lods
add
push
inc
jae
jg
mov
ss
xchg
adcl
lahf
decl
imul
mov
js
sub
and
adc
pop
movsl
sbb
push
popf
xor
pushf
ret
fadds
mov
dec
dec
cmpb
sub
das
insl
das
mov
scas
out
and
pop
sub
loope
push
out
jns
imul
fwait
sub
sbb
popa
mov
out
cmp
out
imul
or
mov
dec
cs
and
xor
cs
push
loopne
sub
fisttpl
or
es
xchg
stos
jp
mov
fadds
mov
loopne
pop
jbe
xor
mov
cmpb
in
and
mov
cmp
add
cmp
fistl
imul
push
jns
xor
dec
rolb
mov
add
fistpl
out
sbb
jno
cltd
mov
lods
cli
mov
outsb
xchg
test
ret
outsl
sbb
cwtl
and
pop
xor
xchg
adc
jg
cmpsl
cmp
iret
push
mov
and
stos
clc
cmc
add
es
cmpsl
mov
notb
je
and
cmp
add
dec
mov
push
lcall
test
rclb
pop
push
mov
cmp
lret
jle
inc
and
stc
inc
call
jge
dec
or
fiadds
mov
sbb
adc
stos
addl
or
push
data16
xor
test
ss
adc
push
push
cwtl
xlat
in
jl
mov
cmpsl
cmp
mov
adcl
lret
cmp
inc
mov
pusha
or
lfs
jne,pt
repz
push
push
mov
aas
js
cmpsb
adc
xor
gs
outsb
rep
or
mov
push
mov
adc
cwtl
test
xor
inc
inc
cmc
jg
repnz
repz
in
mov
xchg
cmpsl
in
pop
dec
and
addr16
aam
push
ds
mov
fldl
or
mov
pop
outsl
or
inc
add
jp
rcl
jl
dec
outsl
push
adc
mov
adc
xor
mov
fwait
push
je
or
xchg
popf
dec
daa
push
test
add
add
push
push
and
loope
xor
shl
insl
rcrb
xchg
add
pushf
jo
pop
out
clc
pop
mov
add
test
int
inc
and
lods
clc
or
aam
jl
in
push
push
filds
int3
dec
repnz
mov
mov
xor
fstpt
jns
push
push
cltd
cmp
fsubrs
out
sub
adc
inc
mov
mov
and
aas
popf
mov
stc
jecxz
mov
cmp
push
je
std
in
ljmp
jmp
bound
jbe
xor
jns
pop
mov
bound
sbb
aam
inc
sti
out
inc
or
adc
xchg
nop
pop
fsubrs
pusha
jne
mov
adc
mov
jecxz
adc
mov
xchg
aam
dec
cltd
adc
je
cld
jle
push
pop
adc
in
mov
cld
adc
push
out
addr16
inc
push
js
push
movb
xchg
push
or
sub
dec
in
push
jns
mov
shlb
jle
stos
das
sub
jmp
mov
sbb
inc
add
mov
das
aad
jne
cmp
jg
outsb
or
data16
insb
push
adc
push
int3
and
lock
push
dec
or
push
mov
mov
movsb
mov
insb
jp
pop
dec
out
fstpt
mov
leave
sub
sti
roll
lds
mov
xchg
cmp
lahf
sbb
mov
pop
cmp
lahf
xchg
into
pop
mov
mov
mov
std
push
xor
cltd
and
aad
mov
jbe
mov
std
bound
neg
in
or
mov
or
adc
jae
shl
dec
testb
pusha
fcomps
lcall
lahf
add
mov
mov
cltd
inc
pop
inc
push
scas
and
lret
ficompl
push
test
lcall
add
pop
lahf
jmp
test
inc
add
mov
cwtl
dec
dec
and
xor
movsl
xchg
pop
fucomi
test
test
xchg
jns
dec
xchg
fwait
pop
push
ss
mov
stos
insl
jne
aas
out
mov
std
or
push
pop
cld
xor
pushf
jb
in
xchg
xchg
lret
negl
and
add
loope
xchg
pop
push
iret
xchg
dec
aaa
repnz
mov
lret
jge
fcomps
inc
repnz
fwait
mov
mov
icebp
popa
mov
lods
jo
cmp
test
inc
sub
push
fiadds
dec
nop
fisubrs
dec
jbe
hlt
dec
fcom
mov
mov
cmp
sbb
lock
pusha
bound
xchg
cwtl
push
sbb
fs
cld
hlt
push
mov
sub
loop
out
sbb
xor
mov
aam
inc
mov
push
fst
jg
or
dec
inc
jecxz
jo
mov
movsl
add
call
sub
xor
jbe
nop
adc
lret
mov
and
push
jp
enter
or
test
data16
ss
and
xorl
inc
sbb
or
es
push
sbbl
inc
pop
sub
dec
mov
sbb
aas
sbb
xchg
out
or
sahf
fistl
sti
std
out
outsb
cmp
insl
jp
lret
xor
pop
pusha
fsubrl
or
mov
scas
mulb
dec
add
out
cmc
jb
arpl
cltd
in
cmp
hlt
jle
imul
test
xchg
push
ret
test
stc
int3
mov
cmp
sbb
mov
xor
test
call
xchg
out
int
sbb
in
jb
repnz
dec
pop
push
mov
nop
fidivl
pop
icebp
insb
jp
pop
jne
jg
mov
inc
push
int
hlt
mov
jle
pop
ret
xor
or
push
cmc
jp
adc
iret
pop
adc
fisttpl
dec
cmc
fidivrl
sbb
mov
decl
push
mov
or
stos
popf
imul
enter
pop
xor
inc
out
outsb
mov
xlat
int
pusha
mov
je
pop
jb
ja
jbe
mov
mov
test
mov
ficoms
adc
les
push
cwtl
dec
aaa
fwait
xlat
lods
jge
aad
scas
jg
aad
and
lock
cmp
in
sbb
mov
sub
popa
pop
arpl
lahf
rcrl
inc
xor
fs
cmp
xor
out
cmp
xchg
cmp
cmp
cmp
mov
andl
pop
rcr
aas
sub
aaa
shrb
mov
mov
popa
into
xchg
push
repz
mov
ror
xor
cld
xchg
jnp
xlat
mov
loope
dec
xor
mov
add
int3
lcall
sub
push
inc
push
or
jl
in
mov
push
and
xchg
sbb
in
int3
daa
sbb
cld
lods
xchg
or
or
popa
mov
push
jmp
fcomps
xor
int
inc
shll
imul
xchg
add
scas
fisubrs
pop
outsb
sub
xchg
pop
cmp
repz
push
push
sub
cmp
push
push
xchg
mov
loopne
mov
mov
inc
lea
pushf
popf
mov
out
cmp
pushf
xchg
fs
inc
lret
andl
inc
add
mov
popa
bnd
cs
push
andb
mov
int
out
stos
xrelease
rcll
aas
jno
test
xchg
shll
mov
dec
int
fnstenv
rcrb
imul
dec
push
xor
adc
add
cmpsl
scas
mov
dec
dec
std
xchg
arpl
pop
ret
fidivrl
push
shrl
cli
sti
add
jno
xchg
mov
push
iret
dec
cmpsb
daa
imul
popa
mov
mov
adc
or
int
outsb
lods
pop
cmp
sbb
in
push
dec
xchg
shlb
lods
icebp
jnp
lock
je
mov
test
mov
mov
sti
mov
fucomi
mov
movsl
fcoml
hlt
dec
sti
cli
in
ja
cmpsl
push
repz
jnp
sbb
or
icebp
ds
mov
ja
or
cmp
lods
call
mov
ficoms
testb
adc
lcall
xchg
dec
lods
mov
mul
mov
cmp
int
cs
aaa
and
lea
loope
jl
pop
das
sbb
adc
stos
lahf
sub
fistps
mov
mov
stc
dec
jmp
push
push
cmpsl
mov
insb
sub
movl
data16
adc
push
es
sub
fnsave
scas
xor
aas
jle
jno
sub
sti
or
inc
push
stc
xchg
fs
pop
and
inc
cmp
lahf
mov
jae
sbb
mov
ds
cmp
cmp
loopne
out
loopne
int3
jo
and
mov
jo,pn
aas
es
ss
jnp
shrl
mov
dec
or
adc
imul
aam
scas
mov
inc
cmp
jo
ret
adc
std
cmpsl
les
mov
cwtl
xchg
popa
ljmp
lock
lcall
lea
push
fwait
arpl
cli
adc
push
imul
push
cmpl
mov
fcmovnb
jg
jmp
getsec
bound
push
pop
pop
stc
jne
lock
xor
xchg
cmp
movsb
test
mov
int
adc
cmp
push
jg
fcomp
jne
mov
adc
in
call
in
fldenv
gs
test
mov
jnp
cli
pop
push
daa
jge
imul
cmp
lock
aam
call
adcb
sbb
aad
loop
fcmovnu
repnz
cmpsl
or
hlt
cmp
aad
and
jge
cmp
outsl
xchg
arpl
lds
out
mov
pop
lret
js
mov
mov
mov
pop
xor
div
mov
xchg
and
dec
jle
pop
mov
dec
sub
sub
pusha
inc
aad
fidivrs
sub
add
lcall
sti
mov
sarb
xchg
in
pop
cltd
sbb
iret
inc
or
push
aam
adc
inc
xor
push
or
mov
mov
ret
cli
xchg
sti
pusha
or
xor
cld
push
add
inc
or
cwtl
aas
bnd
inc
cmpsb
or
loope
imulb
push
mov
cmpsl
add
test
cld
jno
mov
aad
mov
cmpxchg
add
scas
cli
cmpb
mov
sub
lods
push
inc
insb
cwtl
cmp
lgs
int
pop
sub
adc
cli
call
incl
stos
cltd
ret
dec
jno
out
jnp
mov
shlb
jg
leave
mov
mov
out
pop
pop
or
jl
xchg
test
jnp
mov
ljmp
pop
mov
ja
and
imul
jb
loop
mov
shl
cmp
gs
mov
push
pop
mov
push
stc
pop
or
add
xorl
mov
cmp
scas
lret
or
inc
insl
loope
cmpsb
jb
push
push
fmuls
mov
stos
cs
and
movsb
jne
xchg
pop
mov
and
test
pop
pop
and
adc
cwtl
stos
or
xchg
shll
shll
sbb
test
sahf
scas
jl
mov
fldt
mov
cmp
push
jmp
int3
fcoms
push
addb
mov
test
xor
xor
cli
ret
in
lcall
jl
mov
popa
pop
jg
aas
ja
inc
xor
cmp
daa
push
mov
inc
sub
xor
popa
xchg
das
push
lcall
push
enter
push
imul
inc
xchg
pop
adc
xlat
xor
sub
push
xchg
movsb
xor
xor
xchg
xchg
cmp
inc
cmpsl
cmpb
cmc
and
mov
insl
push
dec
xor
and
aaa
outsb
outsl
leave
mov
or
mov
dec
mov
cmp
and
dec
cs
aaa
jno
lcall
leave
mov
sub
loope
dec
mov
jae
jge
js
or
les
sbb
mov
int
push
jo
cmp
call
subl
daa
sti
add
mov
in
out
cmpsl
xchg
imul
sbb
fdiv
jg
cmp
mov
andl
fistl
sbb
jae
cmp
fwait
adcl
xchg
aaa
mov
xor
sbb
push
inc
or
sub
into
cmp
sub
mov
lods
dec
dec
mov
enter
add
pop
ss
hlt
cmp
dec
out
lcall
inc
and
test
jns
adc
dec
movsl
daa
or
aam
and
cmp
inc
dec
dec
loop
pop
xlat
jg
mov
add
or
push
lcall
inc
mov
bound
leave
mov
sti
adc
cmp
stc
out
mov
das
popf
sbb
xorl
test
cs
dec
aam
xchg
loope
sbb
movsl
inc
sub
push
aad
out
insb
xchg
add
cltd
pop
sbb
push
pop
adc
imul
cwtl
ret
add
push
int3
int
jae
lahf
nop
idivl
ss
sbb
jne
cltd
sbb
data16
sbb
xor
cmp
mov
rol
mov
pop
sbb
push
pop
lcall
mov
sbb
mov
fidivrs
js
stos
push
jne
arpl
fcomps
lret
xor
inc
cmp
lods
movl
sub
push
dec
js
sbbl
ret
lds
dec
mull
je
push
in
dec
es
imul
loope
js
adc
and
adc
in
ja
and
inc
adc
or
shll
stos
ja
in
repz
adc
cmc
jo
sub
mov
out
inc
mov
adc
les
sbb
sbb
shlb
and
ja
pop
nop
es
xor
js
mov
loope
shl
mov
push
aas
cmp
add
clc
or
xlat
push
cmp
aaa
push
xor
pop
mov
lds
sbb
mov
mov
xor
cmp
sbb
cmp
rclb
sbb
mov
add
aam
mov
cmp
mov
lahf
mov
xchg
cmc
adc
mov
fs
cmp
out
es
mov
cltd
das
es
ja
xchg
sub
lea
sbb
cltd
enter
mov
mov
mov
xor
or
out
stos
inc
lods
nop
inc
aas
shll
and
mov
mov
aas
dec
mov
xor
sbb
pop
xor
dec
pushf
testb
mov
jg
sub
stc
jae
dec
sub
hlt
out
call
scas
add
mov
test
out
inc
dec
popa
jns
fucomp
mov
fsubs
dec
dec
sbb
pop
mov
lret
clc
adc
cli
daa
sbbb
sbb
sub
add
dec
lds
mov
cmp
xchg
std
jge
dec
mov
sub
mov
push
std
and
cli
popf
and
call
cmp
fidivs
fldenv
adc
push
add
jmp
sbb
out
push
and
mov
stos
int
ret
mov
xchg
out
popa
in
xchg
xchg
pop
dec
lret
fiaddl
jb
aas
andl
and
mov
push
or
mov
and
or
stos
jecxz
insb
or
fwait
shll
pusha
rorl
pop
fcoms
dec
nop
dec
pop
mov
cltd
aas
pop
cmp
adc
xor
ret
popf
mov
sub
clc
adc
jbe
xlat
mov
js
aas
or
fcompl
push
aad
xchg
sbb
mov
fdivs
xchg
ljmp
cld
jb
jle
mov
mov
jo
mov
sbb
sub
shl
loope
psadbw
dec
daa
daa
inc
jno
stos
in
inc
lret
dec
arpl
movsb
inc
fdiv
push
int
enter
aad
fdivl
ror
adc
mov
cmp
iret
push
mov
mov
inc
test
insb
popl
sbb
out
mov
dec
inc
xor
jb
jecxz
xchg
movsl
in
mov
sub
add
lds
lods
xor
ss
pop
jp
stos
jl
ljmp
fs
std
push
sub
xor
fldt
sahf
test
addr16
lahf
sbb
push
dec
int
jo
mov
mov
pop
adcl
dec
cs
ds
mov
pushf
or
dec
mov
outsl
addr16
popf
sbb
int
sub
cmp
xchg
jp
jecxz
inc
lea
mov
push
mov
or
cli
hlt
sbb
pop
jp
mov
and
je
push
push
lods
or
movl
iret
fs
or
rclb
add
lcall
imul
mov
out
hlt
jp
in
pushf
dec
or
ljmp
sub
in
pop
movsb
xor
sbb
dec
mov
mov
xor
cmp
inc
pop
or
imul
pushf
arpl
jmp
adc
cld
xor
sti
ds
stc
sbb
out
pop
out
xor
into
int
pop
movb
js
cs
mov
adc
mov
pop
push
cmp
jg
mov
push
es
and
iret
inc
call
test
pop
push
mov
pop
adc
das
xor
mov
bound
mov
test
scas
aaa
xchg
lea
mov
and
lds
pop
ret
dec
xchg
jbe,pn
push
lcall
mov
clc
push
jge
sahf
cltd
cmp
cli
movsb
ss
das
sbb
and
enter
test
inc
dec
stc
xor
in
lds
cmp
push
fistpl
fsubs
mov
pop
ret
jl
enter
push
dec
lods
rcrl
roll
outsl
nop
bound
lcall
dec
cmc
arpl
mov
sub
out
mov
mov
lret
jecxz
sbbl
xchg
and
sbb
jge
pop
add
repnz
xlat
or
rcrb
or
scas
sbb
push
mov
jecxz
xchg
jnp
xchg
xlat
repnz
repz
iret
add
out
punpcklwd
add
dec
nop
aad
in
push
jp
jle
xchg
mov
and
jbe
mov
adc
xchg
xchg
push
lods
mov
push
mov
add
test
jb
sbb
lea
jnp
rcll
aad
mov
cmc
jle
lods
adc
or
ficomps
cli
cmpsl
mov
xchg
push
cwtl
loope
popa
mov
push
data16
subl
sbb
xor
test
decb
test
lods
mov
rcll
out
cmp
outsl
and
mov
mov
pop
inc
divl
mov
call
push
push
dec
gs
jo
mov
popf
cmpsl
aad
imul
xchg
jno
inc
aas
lods
adc
shll
mov
inc
xchg
mov
lcall
ss
xor
insl
out
loope
cli
sub
and
jno
lods
sbb
sbbl
cmpsl
popa
popf
outsb
dec
pop
popf
xchg
loope
ret
andb
data16
or
pop
xchg
or
sbb
sbb
sbb
dec
add
lods
and
idiv
jo
icebp
jae
mov
fs
adc
mov
or
jbe
rcrb
enter
cmp
sbb
movsb
lahf
sbb
imul
or
cltd
imul
jbe
and
pop
inc
mov
mov
mov
dec
js
loopne
lret
dec
aam
xchg
inc
mov
cmp
push
xor
test
add
cmp
shrb
jmp
outsl
jmp
jecxz
mov
insl
push
pusha
pop
sbb
rorb
sub
lock
sub
mov
hlt
and
loop
pop
push
lret
jg
add
popf
mov
cmp
cmp
jge
cmp
decl
adc
sub
mov
test
jmp
fwait
cwtl
stc
xchg
jno
xchg
cmp
stos
flds
out
mov
push
aaa
test
std
out
cmpsl
ja
inc
mov
out
mov
int
inc
mov
pause
enter
and
bswap
mov
inc
mov
mov
mov
or
arpl
cmp
fwait
or
sub
fs
mov
jmp
pusha
sbbl
mov
mov
jecxz
test
add
test
mov
cmp
int
mov
xchg
or
lds
decb
test
aas
xor
stos
loope
jo
jnp
fisubl
lret
mov
lret
inc
leave
pop
push
in
mov
xor
dec
enter
or
pop
cmc
adc
mov
iret
jge
mov
pop
add
xchg
test
cld
sub
js
push
out
adc
enter
xor
movsl
and
aam
dec
out
mov
sbb
adc
rolb
lock
ss
mov
mov
popa
aad
dec
rcrb
daa
xor
push
in
cltd
stos
out
or
aaa
mov
sub
call
mov
jp
xchg
int3
xchg
jae
add
mov
and
and
push
dec
jbe
loopne
push
cmpsl
xchg
or
xchg
mov
push
adc
in
ret
xor
cmp
dec
pop
jns
daa
push
jne
xor
data16
nop
mov
rcr
jle
lret
out
and
cmc
nop
sbb
sub
push
mov
sub
sbb
in
dec
xor
push
cmp
popf
or
dec
insl
hlt
pop
negl
xor
xchg
dec
push
xor
or
push
jbe
mov
pop
pop
pop
sbb
mov
mov
jnp
cltd
push
pushf
cli
shl
mov
mov
pop
insb
enter
adc
add
pop
pusha
inc
and
out
jp
sub
push
jle
dec
rclb
inc
icebp
enter
shlb
and
out
iret
stos
cmpsb
add
sbb
int
outsb
sbb
test
int3
ja
cli
int3
jle
bound
mov
add
add
popf
icebp
fbld
and
dec
ss
jns
dec
fs
iret
lods
pop
decb
push
or
lock
push
test
fidivl
leave
pop
sbb
shrb
push
fucomp
sbbb
inc
out
inc
mov
sub
push
scas
and
insl
inc
sub
xor
in
pop
xchg
dec
insl
adc
out
push
ja
lods
xchg
xchg
add
test
pop
xchg
pop
pushw
cwtl
cmp
ds
pop
sbb
dec
jp
mov
sbb
xor
lock
cmp
and
xchg
adc
xor
sahf
into
imul
cmp
das
add
stos
or
xlat
cmp
rclb
das
fldl
nop
add
jo
mov
fs
loop
lahf
stc
mov
cmc
mov
int3
pop
js
or
lret
mov
sub
pop
push
push
cmpsl
mov
outsb
pushf
mov
mov
or
mov
imul
cmp
mov
cli
pop
sbb
mov
mov
lret
aad
xlat
cltd
in
pusha
jno
std
dec
rolb
jmp
push
loopne
lret
fsubl
adc
popa
push
cltd
mov
lret
add
or
loope
imul
repz
testb
dec
mov
pop
js
push
nop
inc
add
loopne
imul
clc
sahf
pop
or
stos
jno
mov
movsb
sub
push
test
fsubl
ffreep
aad
stos
and
lcall
cmp
sbb
inc
lods
fidivs
dec
ret
mov
xchg
jno
sti
jno
lock
sahf
fwait
jns
jle
pop
loopne
sbb
aam
and
push
fcmove
cs
pusha
jns
adc
cmpb
shl
xchg
sbb
repnz
xchg
and
add
xchg
loopne
push
movsl
xor
loopne
push
push
jge
mov
xchg
adc
dec
push
cwtl
and
stos
outsb
sbb
adc
sbb
lock
insb
call
fadd
adcl
loope
or
cs
push
and
out
imul
adc
cmp
inc
icebp
xchg
call
pop
pusha
push
movb
aam
clc
sbb
and
mov
sub
sete
xorb
inc
jecxz
aam
test
sbb
imul
fwait
adc
daa
fistl
sbb
xchg
xchg
sub
dec
movsb
outsl
mov
jnp
mov
mov
lret
insb
lcall
insl
xchg
scas
inc
mov
aaa
pop
or
enter
pop
in
call
aaa
mov
roll
xchg
jmp
dec
insb
in
aaa
mov
push
in
imul
mov
sub
jb
pop
jne
cmpb
stos
sbb
pop
int3
push
add
push
xlat
insl
adc
ljmp
mov
or
inc
mov
pop
sub
loop
in
pop
scas
hlt
arpl
divl
mov
mov
fs
push
mov
movsb
sub
add
js
rol
cmp
add
dec
or
mov
inc
outsl
ds
sub
gs
in
lock
stos
jecxz
adc
jne
push
aam
jp
dec
xor
subb
mov
outsb
jg
orb
arpl
out
lahf
and
mov
fs
mov
rclb
cmc
xchg
mov
ljmp
loopne
mov
subb
outsb
push
dec
out
imul
xor
fsubrl
rol
stos
mov
inc
mov
add
pop
sub
pop
test
daa
mov
xchg
push
je
or
mov
out
ret
repz
jp
xchg
insb
sbb
arpl
sub
cs
mov
test
dec
in
popa
adc
sbb
mov
call
jb
je
mov
jne
fdivrs
call
jle
and
push
push
sub
pusha
mov
pop
scas
call
add
sub
xchg
fcomip
mov
or
arpl
gs
inc
cltd
mov
lret
stos
int3
mov
push
insb
xchg
xchg
or
pushl
dec
mov
add
push
mov
pop
or
mov
ja
arpl
cmp
imul
les
inc
dec
add
pop
xchg
out
aad
sar
mov
sti
shll
ds
gs
push
jge
int
xor
incl
fnstcw
ret
mov
cmpsl
mov
fcomps
imul
cmp
push
or
arpl
sahf
adc
dec
dec
pop
xor
adc
xchg
arpl
call
push
dec
xchg
imul
mov
repnz
adc
in
test
dec
mov
mov
pushf
sub
sbb
in
outsl
out
outsl
lods
enter
out
ja
movsl
stos
cmpsb
nop
mov
adcb
subb
mov
jbe
ret
insb
ds
iret
adc
sti
mov
fldenv
xchg
xchg
add
lcall
daa
pop
xor
pop
cmpsl
fidivrl
popa
jne
in
mov
mov
xchg
in
sahf
daa
push
popa
test
jbe
adc
push
pop
in
adc
or
cltd
lea
jae
push
inc
push
or
mov
xchg
xchg
pop
das
loopne
cmc
add
push
testl
add
pop
in
movsb
mov
cmpsl
sbb
aad
and
insl
jecxz
fdivl
das
test
mov
jne
push
nop
push
movsl
mov
mov
sbb
pop
lret
dec
mov
cld
and
insl
xchg
mov
inc
push
mov
lret
push
popf
dec
movb
aad
sbb
xchg
adc
in
dec
pop
sub
push
xor
mov
jno
addb
sbb
mov
xlat
pop
push
sub
or
fidivl
add
insl
adc
fidivl
pop
aam
test
repnz
mov
xchg
mov
or
add
daa
or
push
dec
sub
mov
mov
sti
out
clc
push
push
xchg
or
jbe
jb
or
es
xchg
push
xchg
in
or
aad
or
test
out
aam
mov
mov
cs
cs
push
fiaddl
pop
cmpsb
imul
ds
out
cs
jge
xchg
pop
mov
mov
fcmovnbe
pop
mov
jmp
xchg
mov
imul
cmp
shl
adc
and
mov
pop
pop
xchg
stos
in
ss
inc
or
push
add
fcmovu
mov
lret
sbbl
dec
mov
cmc
es
xlat
ret
sbb
scas
enter
cmpl
jbe
mov
jl
inc
es
ljmp
xchg
jecxz
push
lods
aaa
jmp
clc
sbb
pop
out
lock
stc
mov
cmc
mov
mov
xchg
mov
add
popf
push
mov
xchg
push
jge
dec
pop
test
lret
lea
into
aam
das
inc
out
or
lret
out
sbb
push
repnz
rclb
sbb
and
push
addl
int
icebp
jbe
and
jge
push
xchg
xchg
push
jg
mov
cwtl
mov
jo
mov
jbe
pop
out
stos
push
cwtl
xchg
jecxz
clc
jb
jae
lret
nop
test
leave
add
ret
test
out
mov
dec
push
mov
push
out
pop
sbb
mov
push
xor
or
adc
xchg
pop
dec
rcr
gs
mov
push
dec
std
adc
push
outsl
lcall
in
sbb
push
inc
pop
xchg
xchg
adc
mov
movsl
ss
pusha
mov
and
jno
xchg
mov
mov
sarb
insb
enter
aaa
leave
dec
leave
out
fwait
xchg
inc
adc
jecxz
jecxz
push
xlat
insb
inc
iret
jbe
or
rol
push
sbb
mov
dec
test
mov
push
aas
xor
ja
xlat
lds
outsl
jg
dec
xchg
and
xchg
sarb
push
lcall
sbb
ret
mov
jo
popf
sub
mov
sbb
scas
fcomps
and
cmp
sahf
pop
lret
push
sub
push
bound
repnz
xchg
adcl
mov
test
shr
xor
or
adc
or
std
cld
mov
mov
jle
mov
cld
hlt
addb
fwait
mov
ret
mov
pop
push
mov
sub
insb
fwait
pop
inc
jmp
inc
sti
cwtl
or
in
ds
ss
pop
pop
loopne
les
mov
ja
xchg
xor
sub
jno
ret
mov
jg,pn
mov
sti
ret
shlb
clc
mov
stc
fwait
cs
inc
movsb
push
pop
push
mov
ret
call
cld
pop
jnp
sti
out
int3
mul
add
ret
push
push
lds
mov
push
pusha
cwtl
stos
rol
jge
sarl
fmull
sub
cltd
push
or
cmpb
cmc
test
je
xchg
je
jg
jge
xchg
popl
test
sub
lods
mov
loopne
inc
pop
xchg
mov
xlat
sub
sbb
and
aaa
mov
pop
or
xor
daa
jl
test
je
insb
ficoml
test
jge
clc
in
loope
stos
jg
sub
loop
dec
mov
test
in
stos
repnz
test
lahf
sahf
aaa
add
rorl
adc
pop
sti
mov
mov
add
inc
inc
cltd
fdivs
pop
insl
dec
mov
adc
daa
insl
pop
or
jbe
mov
fldl
push
jp
lret
mov
mov
imul
cmp
jmp
fldl
fidivs
sbb
aas
cmp
and
add
sysret
mov
push
nop
cmp
mov
sbb
dec
call
adc
sti
inc
adc
xor
jns
jo
jecxz
or
mov
add
lods
inc
sub
inc
dec
fadds
test
xchg
jno
xchg
js
div
dec
xchg
pop
leave
scas
out
nop
adcl
data16
or
mov
ss
pop
inc
xor
cwtl
imul
pop
cmpl
int
icebp
popa
push
mov
pop
repnz
cltd
sbb
push
ja
mov
dec
sbb
jl
ret
mov
cmp
adc
adc
push
add
sbb
std
fistpl
loopne
and
mov
mov
inc
add
mov
dec
xchg
clc
nop
adc
inc
mov
mov
mov
fcompl
fisubs
xchg
dec
lret
mov
ja
lret
mov
adc
push
je
push
mov
adc
insl
out
xchg
lods
rolb
sub
mov
xor
cmp
adc
cli
dec
hlt
sbb
push
xchg
cmp
or
outsb
std
inc
adc
cmpsb
pushf
stos
inc
jp
pop
mov
es
jno
and
stos
pop
mov
dec
mov
fisttpll
outsl
jb
fdivrl
ja
pop
rclb
mov
jne
fists
mov
inc
mov
lods
push
test
inc
test
dec
or
inc
mov
mov
cmp
pop
pop
sub
and
add
xchg
pop
ret
ret
and
in
cmpsb
stos
xchg
mov
add
cmpsb
lock
sub
pushf
sub
cld
adc
push
xchg
rclb
ljmp
jle
mov
inc
je
dec
mov
sub
in
or
mov
inc
mov
sub
add
cltd
repnz
or
xchg
lods
sub
sahf
add
inc
inc
pop
loop
xchg
lcall
inc
movsl
lahf
xchg
aam
or
movsb
add
or
xchg
xlat
mov
je
sub
fs
push
add
movsl
or
dec
rorl
adc
adc
loope
mov
shrb
cmp
sbb
xor
mov
outsl
cltd
push
push
inc
push
ljmp
popa
dec
cmp
lret
mov
in
fcomi
push
stos
xchg
arpl
pop
inc
sarb
sar
loop
push
inc
jb
sub
sbb
cmp
jae
cltd
xor
push
sarb
jae
cmpsl
jmp
cmp
dec
scas
xor
dec
dec
stos
fsubr
push
repz
cli
out
cld
shlb
sbb
lea
ja
inc
shrl
or
cmp
pop
push
out
pop
fstp
stc
or
jp
fildll
xlat
aas
bound
mov
sub
jo
out
jecxz
fnstcw
cld
andps
jb
les
mov
fistps
dec
fcompl
sbb
jecxz
cmp
jecxz
mov
aam
mov
cmpsl
add
mov
jb
inc
xor
pushf
pushf
std
add
cmpsb
cmp
sub
xchg
out
jb
sub
in
popa
push
jg
sbb
xchg
adc
lcall
mov
push
inc
cli
jae
sahf
outsb
movsl
add
dec
xchg
push
jnp
cmp
dec
bound
mov
pop
test
in
xchg
lock
pop
imul
adcb
pmuludq
mov
pop
pop
cmp
mov
mov
lret
imul
mov
nop
ret
lods
das
xor
stc
sbb
cmc
cmp
cltd
ss
adc
pop
jnp
in
adcb
clc
xchg
imul
jge
leave
pusha
repnz
repz
mov
xchg
int3
add
test
rcl
inc
arpl
adc
call
pop
cmpsb
out
mov
xchg
testl
popa
push
xchg
pop
xchg
mov
in
sarl
imul
sbb
ss
add
shrb
push
loopne
pop
pop
cmp
lods
mov
aas
xlat
mov
sbb
dec
sbb
mull
lret
add
popl
cs
aaa
cmp
jmp
testb
xchg
pop
fisubl
pop
test
lods
cli
dec
out
xor
aaa
mov
fs
inc
mov
in
mov
cltd
lds
xorb
gs
int3
fadd
xlat
or
js
xchg
stos
push
lret
popf
ds
push
ret
andl
push
cmp
scas
inc
jbe
mov
jno
sbb
add
jp
loop
dec
es
int
inc
mov
insl
or
rcrl
loop,pt
fnstenv
xchg
shl
nop
sbb
out
or
loope
add
sub
outsb
es
shll
movsb
js
mov
out
imul
xchg
cmpsb
ja
lods
lret
stos
jp
adc
jmp
xchg
cmp
sub
jnp
dec
jl
add
pushf
sub
cmc
orl
shrl
jae
sbb
add
les
mov
pushf
je
mov
insb
adc
pushl
cld
cmp
shl
inc
insb
push
fstl
sbb
mov
notb
loopne
cmp
ss
outsb
nop
sub
aad
xor
xor
mov
lds
mov
jne
push
lcall
push
inc
fdivrl
orl
leave
mov
xor
test
add
xor
arpl
pop
sbb
pop
push
mov
sbb
leave
sarl
setge
push
sub
adc
jge
push
xchg
xor
sub
pop
push
clc
push
outsl
insl
xlat
test
add
in
lods
test
sub
loop
add
push
hlt
jb
cs
imul
sbb
push
cmp
loope
jno
push
inc
mov
xor
ja
mov
jnp
mov
push
mov
push
ss
mov
inc
mov
push
fdivrl
out
jnp
addr16
xlat
jg
std
aad
in
and
fisubs
jle
pop
lock
icebp
not
aaa
shlb
xor
jns
lea
xor
lret
or
fldcw
mov
dec
pushf
sub
cwtd
jb
dec
sbb
jle
lret
and
out
clc
jb
dec
mov
repnz
data16
dec
jo
xlat
push
aam
popf
xchg
ljmp
dec
movb
cmp
mov
sbb
movsb
test
inc
cld
movsb
jmp
push
sub
xchg
out
add
lock
pop
stc
cltd
ds
or
fistpl
addb
push
mov
icebp
mov
rcrb
ret
or
int
cld
mov
sub
mov
rolb
test
push
ret
mov
add
pop
and
mov
orl
imul
hlt
lret
pop
call
push
mov
inc
dec
and
clc
fimuls
into
nop
add
subb
test
cs
mov
data16
add
lods
loop
xor
sti
push
popf
xlat
add
push
pop
inc
adc
jae
adc
inc
divb
pop
adc
mov
gs
sar
cmp
cmpsl
ljmp
sub
sub
sbb
mov
ja
call
test
movsl
incb
popa
inc
shl
ja
daa
jb
aam
cmp
shll
xchg
fsub
cmc
mov
outsb
push
and
add
xlat
jae
mov
in
mov
pop
sub
les
mov
xor
dec
dec
les
or
or
in
push
push
mov
dec
push
pop
aad
popf
dec
sbb
stc
dec
popa
sbb
ds
data16
js
not
jmp
push
ss
ja
jecxz
imulb
mov
sub
sub
in
je
test
into
ret
cltd
and
dec
mov
xor
das
fcom
stc
fcmovnb
in
sarl
adc
jg
mov
mov
mov
or
lea
loop
in
pop
sti
xchg
mov
cmp
lock
cli
jne
icebp
add
daa
pusha
push
outsl
dec
mov
xor
xchg
into
push
dec
divb
xchg
hlt
sarb
and
std
adc
jp
or
lods
mulb
sub
add
not
mull
and
ja
add
mov
mov
pop
adc
stos
xchg
inc
dec
mov
imul
fistpll
imul
in
jmp
mov
and
insl
jg
ret
inc
dec
jo
push
js
sub
rcr
ret
mov
push
cmp
in
adc
popa
push
xchg
aam
push
fnstcw
fwait
jmp
js
add
xchg
lahf
fwait
and
mov
flds
push
dec
in
push
or
ds
sti
sahf
pop
cmp
pop
aaa
in
xor
xchg
stos
out
mov
xor
jmp
repnz
mov
sbb
xor
push
sbb
rcrl
ds
xchg
cmp
enter
or
fcmovnb
cmp
nop
les
test
std
xor
fwait
or
in
push
sarb
in
shl
fcomps
sbb
mov
imul
lret
adc
iret
cmp
adc
fcomps
ficoml
xlat
or
jne
out
jnp
add
sbb
push
cmc
cmc
js
push
or
add
jmp
xchg
outsb
lods
lcall
cs
and
ds
movsl
dec
stos
pop
nop
xchg
jo
ficomps
jns
cmp
jge
js
icebp
pop
ret
mov
popf
dec
test
insb
ljmp
out
sbb
add
adc
ss
aam
push
push
inc
mov
fisubrs
mov
out
pop
pop
mov
out
cmp
mov
lret
pop
or
push
lea
ret
loope
test
sub
cmp
je
pop
mov
sub
inc
les
cld
sub
pop
addl
dec
rorb
addr16
dec
sub
mov
aaa
dec
jbe
cmp
loop
clc
popa
xor
sbb
mov
or
xor
fucompp
pushf
subb
mov
cld
cmp
sbbb
inc
adc
fimuls
orl
addr16
and
movsb
pop
inc
jg
decl
ja
in
jne
mov
jl
jle
add
mov
dec
int3
mov
in
push
adc
jmp
and
cli
add
jns
std
jecxz
roll
mov
mov
jg
dec
inc
sbb
fwait
push
adcb
outsb
std
xorl
out
and
fxch
stos
or
mov
jo
xchg
fistpll
lret
add
pop
cmp
mov
pop
mov
cs
xchg
and
push
iret
call
sbb
shll
orb
dec
movsl
sub
and
pop
jns
movsl
aaa
pop
nop
popf
popf
fstps
aam
cmc
enter
xor
xchg
mov
xor
fwait
and
or
cmc
jle
and
jle
rorb
mov
ja
jno
xchg
push
sahf
xor
or
mov
lods
stc
xchg
adc
imul
ror
adc
out
in
push
mov
sub
sbb
clc
or
imull
mov
push
sub
xor
pop
enter
movsb
lret
xor
mov
pop
popa
mov
mov
dec
enter
out
icebp
lods
ret
int
flds
jge
inc
mov
repz
mov
cwtl
andl
scas
lret
popf
jp
lock
mov
xor
mov
lret
xchg
jo
push
mov
cs
fistpll
lds
pop
xchg
sbb
or
dec
std
cwtl
sbbl
jo
xor
mov
cmp
sub
lods
xchg
fistps
cmp
ficomps
pop
je
insl
cmp
mov
je
ljmp
lods
xchg
in
test
insb
adc
mov
xchg
sbb
dec
lahf
stc
push
dec
mov
add
jne
cmp
ss
jl
mov
pop
outsb
hlt
lahf
mov
stos
loop
into
aaa
in
fildll
subb
pusha
aaa
push
mov
or
test
ja
inc
cmp
sbb
mov
xchg
xchg
dec
das
aad
cmp
shll
scas
test
aam
shrl
in
aas
insb
pop
cli
mov
stc
mov
jb
mov
repnz
lahf
mov
pushf
ror
fistpll
cmp
cli
dec
fildl
out
sahf
mov
adc
push
push
lcall
js
je
stos
xchg
cmpsb
dec
sbb
mov
push
inc
adc
cld
pop
or
in
cmp
das
mul
fsubrl
inc
es
lcall
mov
fdivl
sbb
nop
xchg
and
add
pop
jns
out
scas
add
adc
in
xchg
ljmp
js
jl
loope
push
jne
adc
aad
ljmp
xor
icebp
int
ds
jbe
lahf
add
xor
jbe
outsb
test
push
les
jp
imul
mov
adc
loope
mov
leave
pop
cli
inc
rcrl
xlat
mov
sbb
shl
add
cmp
mov
cmp
cmp
mov
test
jecxz
in
add
inc
cwtl
mov
mov
inc
pop
and
lods
or
ljmp
push
adc
add
or
out
loop
cmp
cvtpi2ps
lock
and
int
notl
cmp
mov
or
lds
mov
or
sbb
es
es
inc
repz
sub
sti
fisubrs
push
xor
jle
arpl
cmc
sbb
mov
ret
jae
fcoml
push
xchg
add
cmpsb
sub
jecxz
jge
iret
fbstp
mov
xor
sbb
stos
mov
popf
out
mov
cmpl
push
jle
mov
mov
sub
fnstcw
xchg
lret
shll
jo
je
add
or
mov
in
enter
mov
lock
push
pop
xchg
dec
or
stos
loop
push
lsl
inc
les
xor
mov
das
dec
dec
and
leave
imul
xlat
sub
sub
fisubrs
jo
xchg
xor
jbe
fwait
dec
jg
testl
in
inc
lea
aam
adc
popa
leave
xor
insl
stc
add
push
daa
aaa
lret
cltd
xor
inc
push
mov
mov
xlat
dec
sub
cmp
cmpsl
adc
les
and
cmpsl
popf
ret
das
ja
xor
push
fnstcw
jp
icebp
sahf
mov
push
xchg
jne
push
leave
cmp
jae
pushf
clc
mov
or
les
jbe
out
sarl
jp
pop
loopne
cmp
jo
jg
mov
lahf
stos
out
lahf
insb
pop
dec
xlat
sub
mov
imul
test
pop
jne
jbe
jb
int
mov
mov
jnp
xchg
sub
fbld
fdivrs
sbb
sbb
jo
cld
insl
push
and
and
inc
cmp
xchg
xor
mov
mov
sarl
mov
ljmp
cmp
push
xchg
inc
add
sbbl
out
mov
scas
arpl
xorb
repnz
stos
cwtl
inc
mov
outsl
enter
sbb
scas
push
sbb
inc
jne
pop
movsl
lods
lcall
mov
jg
dec
int3
addb
in
mov
aam
inc
mov
mov
fistpll
insl
push
sub
cwtl
xor
outsb
adc
mov
in
data16
push
aam
fdivrl
xchg
cmc
xchg
jle
mov
mov
cmp
inc
sub
xchg
mull
xor
test
dec
sbb
inc
pop
andb
mov
jns
inc
cmp
fdivrl
daa
lock
adc
dec
xlat
or
jns
nop
hlt
dec
sbb
loope
fld
fldt
lret
lods
or
cmp
inc
dec
pop
xchg
cs
jo
xlat
cmp
mov
stos
xchg
stc
dec
push
lea
sub
ljmp
testl
mov
stc
sbb
jno
stc
sbb
jo
gs
testl
pop
jp
rcr
adc
ret
jae
out
dec
fidivrs
xor
pop
dec
arpl
push
mov
je
ds
sbb
mov
call
jns
leave
jo
pushl
cmovs
idivl
mov
xorb
xchg
mov
xlat
loope
ljmp
fdivrp
fcoml
cltd
push
sbb
mov
insb
and
loop
jecxz
adc
mov
jb
xorl
dec
push
sub
stc
inc
and
ss
xchg
mov
inc
mov
lock
adc
aam
mov
enter
icebp
mov
lods
dec
fs
stos
leave
scas
shll
sbb
loope
call
adc
and
and
mov
push
iret
sbb
cmp
ss
lods
aaa
shlb
lods
aaa
xor
mov
xchg
xchg
pop
jae
sti
xor
out
jo
loopne
lock
in
jno
mov
pshufw
ss
mov
jns
cmp
cmp
push
jmp
mov
mov
shll
push
add
lret
sub
bound
mov
push
mov
cmpsl
xor
add
cmpsl
movsl
inc
mov
mov
mov
ljmp
fidivrs
pop
sarb
in
movsl
jge
jp
push
push
xchg
push
outsl
imul
fisubrl
mov
loopne
pop
pusha
mov
fidivs
jbe
cmpsl
pop
jg
mov
clc
or
and
push
cmp
cmc
xchg
cmpsb
fs
mov
push
icebp
shrl
mov
mov
mov
xchg
out
sti
dec
mov
out
movsl
and
lcall
lods
ds
stos
fdivs
dec
pushf
ljmp
inc
push
sbb
ja
and
push
sbbb
int3
inc
dec
inc
ds
leave
icebp
push
push
xchg
popf
fnstcw
ss
or
in
push
rolb
inc
pusha
cmp
sbb
cwtl
jno
sub
sub
push
jecxz
mov
cmc
stos
jmp
leave
and
adc
mov
mov
mov
mov
js
dec
es
test
scas
sub
popa
sarl
pop
loopne
imul
addl
hlt
in
pop
mov
add
push
xchg
test
cld
jo
loope
cmp
or
sbb
sub
xor
shl
test
aas
mov
dec
fdivr
dec
clc
mov
hlt
mov
sbb
cmc
cld
adc
push
mov
cmpsb
sbb
mov
sbb
sahf
cld
xor
inc
insb
cld
xchg
add
add
stos
pushf
andb
fwait
inc
pop
push
push
sahf
or
aaa
xchg
test
cld
sti
movsl
rcr
sub
ss
sbb
sti
push
test
xchg
insb
push
notl
mov
rclb
std
out
imul
jge
pop
daa
aaa
sub
pusha
mov
and
and
iret
pushf
inc
cmp
cld
mov
and
nop
dec
or
lcall
cmp
adc
add
pop
jno
xor
mov
lds
mov
xor
mov
sahf
lock
or
mov
add
cmpsl
jne
and
das
lret
mov
scas
add
inc
xchg
enter
xchg
aam
test
xor
xor
das
cli
cmp
js
dec
mov
ljmp
int3
sub
xchg
mov
sbb
out
enter
scas
or
jb
adc
icebp
ss
cmp
scas
or
mov
cltd
into
pop
test
fnstcw
xchg
mov
fdivrs
xchg
cmp
inc
bound
jo
sub
dec
movsl
lods
vmovd
adc
or
jne
dec
out
mov
xchg
mov
es
and
push
xchg
scas
pop
dec
jmp
add
test
addr16
test
insl
pop
test
adc
out
popa
dec
adc
mov
loopne
popa
enter
stc
scas
push
repz
xor
xchg
sub
stos
cmp
movsl
mov
sub
ds
inc
xchg
nop
data16
enter
xchg
sub
sub
jnp
mov
inc
loop
add
rcrb
daa
or
movsl
pop
pop
dec
mov
dec
enter
call
jge
subb
inc
pop
call
repnz
pushf
xchg
cmpsl
mov
and
repz
mov
outsb
xlat
sub
mov
fwait
xchg
es
hlt
cmpsl
ret
pop
sbbl
lock
adcl
sbb
jp
push
xlat
gs
jecxz
stos
es
cli
fs
call
rorl
popa
enter
rclb
rorl
dec
push
push
lods
adc
jno
mov
jns
jo
add
imull
int
sub
xchg
mov
mov
xor
mov
cmpsl
lret
lret
dec
jbe
pop
lock
lahf
cld
add
repnz
xchg
mov
mov
pop
xor
mov
ret
pop
test
push
or
aad
insl
sbb
mov
lock
testb
xchg
dec
test
int
sti
sbb
test
loop
or
jo
insl
stc
jne
les
inc
jbe
mov
fiadds
and
sbb
int
fwait
mov
adc
cld
mov
or
pop
push
jmp
ret
xchg
popa
jmp
imul
mov
aad
jg
lods
or
aas
pop
dec
push
movsl
inc
out
fnsave
mov
jbe
mov
ljmp
data16
mov
in
mov
add
shll
lret
cmc
insb
cmp
bnd
lret
pusha
xchg
in
pop
inc
fwait
dec
int3
or
or
jle
popa
xor
xor
xchg
adc
adc
push
cmp
movsl
cmc
jecxz
dec
stos
pop
xor
xor
enter
loop
push
xchg
jl
or
jbe
xchg
loopne
pop
aaa
xor
dec
inc
mov
cmc
lret
pop
minps
in
ret
cmp
cld
add
fimuls
outsb
mov
and
mov
add
lods
in
add
pop
push
inc
test
shlb
imul
sbb
aam
js
and
jmp
setle
xchg
mov
mov
scas
insl
hlt
cmp
cmp
inc
xor
loopne
mov
leave
scas
sarl
dec
pusha
pushf
popf
pop
sub
xchg
cld
sub
sbb
fcom
add
les
cld
inc
jno
add
jno
test
leave
add
jge
pop
add
sbb
repnz
stc
or
leave
test
dec
hlt
jg
loope
imul
add
imul
pop
dec
fsubs
loopne
xchg
mov
inc
push
out
popa
sbb
mov
cltd
clc
push
fxch
jmp
sahf
fcomps
inc
lea
and
imul
test
ds
mov
mov
inc
sbb
adc
cmp
mov
push
jnp
mov
rorl
aas
or
fisttpll
stos
adc
rcr
inc
lock
adc
sbb
pop
inc
dec
movsb
pop
push
stc
adc
sbb
rclb
lods
mov
scas
pop
sbb
arpl
pop
imul
jp
data16
mov
pop
pop
sbb
mov
cmpsb
or
mov
je
sub
push
inc
mov
ja
cmp
rcrl
sbb
cmp
movsl
jnp
out
inc
cmp
and
mov
jmp
dec
cmc
fstpt
das
jns
stos
leave
xchg
inc
sub
cmpsl
mov
popf
xchg
movsl
cs
pushf
xlat
rclb
into
sbb
stc
ja
leave
sbb
or
xchg
jle
es
inc
enter
int
rcll
or
pop
lock
sbb
icebp
mov
cmp
mov
or
push
cmp
ret
repnz
jnp
popa
jl
mov
and
sbb
push
push
gs
rolb
push
loopne
jmp
adc
imulb
jno
mov
mov
mov
fstps
out
std
pushf
sbb
fdivrp
xor
dec
push
xchg
dec
sbb
push
and
ds
andl
mov
hlt
add
jmp
cld
or
push
dec
push
mov
cmp
aas
mov
ret
xchg
or
sub
lods
mov
cmp
pop
test
divb
cmp
lcall
into
ror
xchg
call
mov
and
mov
shlb
imul
inc
mov
into
nop
fisubrs
sbb
bound
mov
jae
imul
lahf
inc
jns
pop
test
jns
fdiv
cmp
inc
xor
mov
sbb
lods
push
pop
sub
loop
cmp
test
nop
pusha
sbb
lcall
fsts
pop
sub
ljmp
xor
ret
aam
rclb
add
xchg
mov
sub
sub
cmp
mov
shrb
ja
in
imul
or
fs
cwtl
and
xchg
outsl
mov
movsl
out
sahf
jnp
es
pushf
iret
sbb
push
adc
flds
cli
mov
movsl
adc
loopne
pop
sti
cli
mov
mov
inc
call
add
imul
fnsave
inc
add
mov
cmp
jmp
repz
dec
addb
scas
cmp
sbb
hlt
cmp
inc
xor
mov
stc
add
addr16
dec
popa
add
test
dec
repz
mov
push
fprem1
ret
popf
cmp
je
dec
or
pop
dec
mov
pushf
push
add
mov
aam
pusha
mov
cmp
mov
add
push
fs
xchg
enter
xchg
adc
mov
inc
xlat
mov
lods
cmp
hlt
or
add
jbe
xchg
mov
imul
jge
xchg
push
rclb
pop
sbb
stos
ficomps
mov
xchg
out
jnp
dec
sbb
scas
inc
jo
cmp
mov
push
popa
or
in
scas
pop
subl
sarb
data16
adc
lahf
or
sbbl
xchg
scas
cs
nopl
and
call
and
fiadds
mov
repnz
in
xor
push
push
addb
jne
pop
pop
pop
dec
pop
shrb
frstor
rcr
push
pop
or
inc
jae
xor
adc
sbb
std
ficoml
pop
jge
mov
adc
jmp
mov
cmc
ret
or
inc
mov
scas
mov
sbb
xchg
lods
fwait
xor
outsb
inc
cmpsb
pop
dec
pop
cltd
lcall
sub
loop
test
push
stos
push
lret
push
scas
scas
fnsave
xor
lock
sahf
mov
call
mull
dec
daa
incb
inc
enter
inc
push
xchg
les
xchg
sbb
cmpsl
cmpsb
test
insb
js
das
sbb
sub
loop
divl
test
outsb
stc
mov
popf
xor
movsl
xchg
mov
xchg
and
sub
push
cld
enter
stos
loope
push
xchg
out
in
outsb
cmp
loopne
fdivp
xchg
movsb
lods
stos
int3
mov
pusha
inc
jmp
pop
lds
and
int
push
adc
aaa
xor
cmc
sbb
aad
popf
jg
push
jp
mov
xchg
xchg
xchg
mov
cmpsl
popf
fisttpl
mov
hlt
xor
outsb
out
mov
test
aad
or
cmp
xchg
rorl
inc
xchg
ret
ret
repnz
out
sub
mov
rorb
test
inc
push
sub
adc
pushf
push
push
enter
xchg
xchg
fiadds
mov
pop
mov
jne
mov
loop
dec
sti
push
or
push
ret
jae
cmpsl
pusha
mov
mov
mov
jmp
test
push
push
test
lahf
insl
dec
mov
add
push
ss
push
dec
adc
xchg
push
dec
ja
in
gs
es
jb
pop
inc
filds
inc
mov
ret
imul
dec
enter
xchg
shrl
rorb
xchg
rcl
add
hlt
mov
shrb
mov
add
dec
lahf
push
push
push
insb
xchg
lret
mov
sub
scas
movsl
fisubrs
push
push
call
push
jge
dec
pop
pop
adc
push
mov
divl
scas
aad
repz
or
xor
jnp
jo
js
scas
es
mov
sub
testb
je
sub
mov
out
jbe
mov
imulb
jmp
cmp
inc
leave
sub
and
test
or
test
cli
xchg
mov
sbb
out
mov
jl
es
sarb
push
jmp
dec
out
add
sub
xchg
mov
mov
test
adc
dec
pop
test
std
addr16
fmul
inc
dec
rorl
cs
sub
adc
mov
or
dec
cmp
mov
or
mov
and
loopne
rcrb
repz
stos
cmp
sbb
lcall
jp
repz
mov
pop
fisubl
xor
negb
imul
and
shl
mov
cmp
jb
imul
aaa
push
mov
mov
ret
push
aam
rorl
insl
stos
fs
arpl
out
cwtl
xchg
pop
pusha
sub
dec
dec
xchg
out
adc
inc
nop
jne
loop
mov
mov
pushf
fwait
ss
sub
mov
out
and
rcll
sar
cmp
repnz
sbb
inc
out
xor
out
in
jmp
or
push
cli
fsubrs
sub
jno
test
cmc
aad
insb
mov
rcrl
sahf
sub
adc
les
pop
dec
push
stos
dec
jge
dec
xchg
adc
jecxz
stos
or
cld
das
jo
call
or
mov
add
mov
push
sub
hlt
adc
push
pop
dec
cmp
inc
aaa
pop
popf
pop
and
inc
add
mov
orb
xor
pop
sbb
insb
lds
sti
add
jae
pop
mov
mov
dec
imul
cltd
repz
pop
cmp
imull
xor
adc
iret
addl
pop
hlt
stos
xchg
sub
fsts
xor
fidivrs
lods
adc
pop
popf
inc
loop
xor
jnp
add
mov
pop
call
in
adc
leave
test
mov
subb
int3
testb
jb
in
sbb
out
mov
iret
int3
cwtl
les
mov
cld
scas
movsb
sti
push
push
xorl
jle
jg
addl
sbb
cltd
pop
lods
fwait
in
inc
ljmp
or
mov
cmp
mov
aad
fs
dec
das
cmp
mov
outsl
lahf
xchg
hlt
lock
mov
push
cmpsb
sti
fidivrl
and
dec
or
mov
inc
outsb
inc
in
cmp
std
aam
out
or
lds
test
or
xor
cmc
rolb
inc
imul
repnz
adc
das
out
sarl
enter
add
mov
fldl
aas
add
ss
xor
inc
xor
xchg
sub
adc
repz
cli
pop
add
sub
jecxz
insb
push
and
in
jo
xor
ret
lret
lret
pop
sbb
cwtl
lock
push
pop
adc
jl
push
jbe
int
jno
out
or
jae
sbb
ja
cwtl
fidivl
in
gs
jnp
cli
lds
xor
push
ret
shl
scas
stos
shrl
and
adc
jb
push
js
jmp
add
jge
mov
iret
insl
dec
pop
xchg
cmp
mov
cmpsb
lods
lret
popa
cmp
cli
out
pop
or
dec
sbb
inc
icebp
inc
mov
movswl
adc
mov
mov
mov
mov
stos
cld
aam
jge
aad
cmpsb
std
mov
movb
ljmp
lea
rol
out
mov
lret
sbb
rorl
jne
dec
pop
sbb
movsb
ret
jle
cmp
cmpl
test
fstpl
loope
jnp
adc
fildl
pop
pop
out
jae
js
nop
and
pop
mov
in
scas
pop
jmp
add
ss
ret
dec
stc
mov
push
pop
cmp
hlt
jnp
jno
sti
jge
mov
aas
adc
cmp
movsb
mov
or
out
int
push
imul
or
xlat
xor
xor
xchg
jns
add
push
xchg
or
jbe
ret
pop
mov
push
out
negl
sbb
leave
shlb
sub
push
stos
dec
inc
data16
enter
popf
cli
std
mov
dec
data16
pop
push
add
sbb
jns
sahf
dec
mov
cld
xor
lea
jne
or
sbb
cmc
jae
loopne
and
dec
in
mov
repz
aaa
daa
jmp
fcompl
mov
xor
int
out
add
push
adc
imul
push
hlt
and
xor
arpl
lock
cwtl
mov
pop
bound
jns
sbb
xchg
in
jno
aas
push
mov
pop
mov
mov
out
sbb
mov
out
and
into
pusha
mov
xchg
mov
pop
sbb
mov
adc
inc
sub
outsb
jge
inc
fstpt
pop
jb
pop
push
scas
aaa
mov
pop
and
xor
cmc
jnp
push
in
mov
adc
lods
adc
adc
clc
or
push
xor
roll
xchg
jo
and
push
jl
repnz
add
xchg
addr16
jns
into
sbb
jle
push
test
lods
nop
cld
outsb
scas
xchg
push
jmp
test
pop
lods
scas
cli
push
jecxz
rcll
sub
xchg
sti
add
dec
cld
ret
sub
xorl
add
xlat
jg
mov
mov
jb
xchg
mov
das
je
cmpsl
jmp
mov
sbb
dec
adc
xchg
dec
jno
inc
adc
push
pop
jnp
fimull
jnp
shr
or
jecxz
cmp
jmp
cmpsl
mov
mov
adc
in
xchg
sub
pushf
lret
jmp
scas
adc
jle
lods
mov
movsb
sub
push
rcr
adc
sbb
jnp
inc
je
scas
incb
fdivl
push
outsb
dec
mov
push
repnz
and
jno
push
mov
aas
int
add
cmp
dec
jb
sbb
nop
jge
mov
cmp
jae
cli
subb
inc
pop
ret
mov
aas
dec
cmc
cmpsb
lods
cmpsb
sbb
sub
mov
pusha
inc
or
icebp
inc
fldenv
gs
je
inc
nop
cmp
scas
mov
iret
jne
mov
adc
add
mov
aas
popa
lcall
mov
scas
in
mov
mov
mov
mov
cltd
and
cli
inc
mov
sbb
sbb
cwtl
jl
out
js
out
push
inc
sub
data16
ss
in
dec
movsl
fnstcw
testl
ret
sub
xlat
mov
fcoms
lods
and
iret
and
movsbl
outsb
es
sbb
sbb
and
mov
fildll
stos
pop
push
fwait
mov
es
data16
inc
jno
adc
es
or
insb
clc
pop
push
fwait
xor
mov
ja
xchg
cmc
mov
sub
in
sub
mov
mov
stos
fdivrl
pop
lds
push
rclb
sbb
xchg
mov
pop
or
lods
push
loop
hlt
fiaddl
mov
mov
jg
in
mov
popa
or
js
pop
mov
shlb
pop
or
sbb
clc
jmp
out
jno
lds
dec
pop
mov
aam
hlt
and
push
lahf
adc
adc
pop
xor
movsl
insl
loop
or
std
push
inc
xlat
insl
int3
xchg
cmpsb
xor
daa
gs
cs
push
push
add
and
outsb
fistpl
add
dec
jp
adc
jno
cltd
movsb
jmp
cmp
xchg
dec
rcl
outsl
jo
pusha
inc
xlat
adc
push
jl
popa
clc
icebp
fbld
jl
xchg
jl
inc
pop
int
pop
xchg
out
push
jle
and
mov
and
xchg
dec
ret
pop
jg
lods
lock
in
inc
sbb
jne
lea
push
jg
outsl
jae
add
sub
lds
push
stos
sub
xchg
mov
jno
je
mov
test
mov
ja
sub
loopne
loope
mov
int3
lds
and
pop
sub
adc
out
cmp
mov
dec
push
pop
ss
int
cmpsb
push
jle
xor
sub
push
fimuls
std
and
sbb
addr16
lods
xchg
out
bound
cmpl
lcall
fisubs
imul
inc
push
dec
lock
inc
push
gs
adc
movsb
jnp
adcb
addr16
adc
xor
push
pop
out
xchg
ds
fbld
mov
and
dec
clc
jno
cmc
loop
sub
add
sbb
jne
hlt
int3
jno
lods
add
insb
lcall
inc
sub
mov
aam
push
pop
jne
je
mov
cmp
mov
jp
cmpsb
daa
xchg
lret
inc
call
inc
movsl
lock
dec
add
pop
data16
mov
adc
cmovs
jb
in
scas
pop
jne
push
jae
stos
ja
rorl
jno
jp
cs
jo
adc
jle
pop
scas
dec
test
decl
or
add
pmaxsw
test
popf
test
sarl
ljmp
sbb
dec
repz
insl
sub
dec
push
das
or
sbbl
dec
cmc
mov
push
sti
into
or
jno
push
es
leave
adc
sub
mov
fmul
cmp
xlat
mov
sahf
xchg
adc
and
xor
add
gs
xchg
inc
popa
popf
cmp
adc
dec
cmp
idiv
cmpsb
in
out
daa
sub
mov
lea
xchg
icebp
movsb
js
loope
mov
xchg
add
fisttpll
sti
and
lods
xor
loop
lods
mov
inc
ficompl
push
sbb
add
jecxz
sahf
lret
cld
jle
sub
fsubr
mov
or
cmp
add
inc
aas
subl
mov
or
movsb
sbb
mov
cmp
pop
adc
push
add
test
mov
loop
rcrb
jbe
pop
mov
filds
out
leave
and
rclb
xor
and
fdivrs
dec
or
xchg
iret
popa
loopne
and
mov
repnz
lock
add
test
dec
shrb
popl
fists
hlt
xor
subb
and
sub
inc
lods
icebp
std
cmp
sub
jmp
push
mov
jae
es
push
ficoms
mov
cmp
add
and
push
and
add
pop
mov
into
repnz
loop
sbb
and
xchg
imul
int
xor
pop
jne
dec
pop
add
cmp
xchg
jp
lds
jnp,pt
jb
push
pop
jns
jb
test
cmp
out
in
ja
push
adc
shrl
sub
jmp
push
das
mov
xchg
out
int3
rorb
nop
lods
ret
xor
daa
je
sbb
and
dec
popa
lret
xor
ds
mov
bound
dec
imul
cmp
push
stc
iret
push
into
dec
and
lret
mov
pusha
out
cmp
mov
lahf
dec
dec
fstps
cwtl
imul
dec
repz
and
jbe
inc
xor
cmp
dec
test
ds
inc
loop
insl
fistpll
add
sbb
mov
cmp
inc
mov
add
pop
mov
arpl
lods
cmp
cmp
pop
jp
mov
int
jle
inc
inc
shlb
out
in
mov
outsl
inc
push
aam
xchg
cmp
push
in
jg
sahf
mov
dec
popa
lods
mov
xor
sub
cmp
inc
jns
xchg
push
in
jp
test
call
cmp
repz
popf
xor
push
sahf
and
dec
fidivrl
nop
xor
aam
push
jb
xor
mov
in
lods
mov
push
mov
mov
mov
mov
test
ret
movsl
or
dec
mov
repz
sub
mov
xor
cmpsb
imul
das
ret
or
loope
scas
jg
sub
gs
sub
sti
lea
mov
imul
mov
sub
xor
and
fstpl
int3
out
sbb
leave
stos
sti
push
ja
mov
mov
push
lock
notl
in
xchg
aam
test
xchg
les
inc
stc
ret
jl
cmp
cmc
dec
sub
inc
loope
lahf
pop
lea
mov
and
add
pop
int
out
add
or
or
push
xchg
pushl
xlat
cmp
test
add
lahf
cmc
pop
push
xor
add
test
dec
cmp
sahf
outsb
sar
sbb
jne
jbe
jo
mov
push
in
push
mov
xor
lods
jg
shrb
rcrb
jno
add
cltd
and
ret
out
fs
sbb
jno
push
push
aaa
inc
dec
in
jno
arpl
or
pop
fsubrs
inc
sub
test
mov
sub
jge
iret
jns
jp
jecxz
cwtl
aam
arpl
push
popa
das
aas
dec
push
jne
pop
mov
lods
and
sahf
ss
jb
push
sti
das
flds
cmpsb
xchg
mov
push
mov
movsb
lret
repz
or
out
fimuls
in
loope
repnz
mov
xchg
inc
in
aas
inc
jge
xor
mov
shrl
rcll
push
xor
or
cmpsl
sbb
cli
inc
fs
push
sbb
cmp
push
test
fisubrs
lods
sub
cmp
loopne
sbb
rolb
pop
cmc
mov
incl
inc
xchg
pop
push
int3
mov
or
addr16
dec
xor
test
lock
test
sbb
pop
mull
dec
adc
int3
jecxz
inc
sub
adc
fstl
loopne
xchg
test
in
pop
adc
inc
add
dec
inc
xchg
mov
in
inc
jbe
adc
xchg
inc
or
insb
add
jg
jno
popf
imul
push
addb
loopne
add
and
mov
xchg
push
pusha
xor
and
mov
out
pop
roll
das
js
and
stos
mov
push
mov
ss
pop
xor
xor
sti
pop
mov
add
sub
mov
mov
ficompl
int3
sub
pop
in
in
fwait
pop
push
pop
jne
or
fistl
dec
out
lods
mov
sub
xchg
push
mov
shrb
ret
push
cld
inc
arpl
je
scas
mov
xchg
andl
inc
adc
dec
scas
into
fcmovnu
jmp
es
aad
enter
cmp
xor
pop
xchg
mov
xor
popa
ljmp
js
pop
out
rorb
lahf
inc
js
cld
or
ror
roll
std
sub
aas
or
or
adc
dec
add
mov
pop
pop
add
adc
hlt
cmc
xor
lea
mov
sub
add
lods
out
mov
test
lret
or
stos
add
outsl
add
push
pop
pop
or
xor
je
cmp
sarl
dec
mov
aam
scas
push
mov
js
sub
imul
dec
adc
filds
mov
mov
icebp
add
test
push
push
sub
pop
iret
push
or
arpl
mov
jl
dec
mov
popa
cmp
cmp
sahf
cs
fimuls
repnz
pop
sar
xor
mov
sarb
push
fsts
and
mov
pop
outsb
cwtl
jne
mulb
stos
xchg
push
iret
push
sub
xor
jle
pop
jecxz
mov
in
rcl
pop
mov
sub
mov
sbb
xor
fsubr
inc
fstl
call
aam
aaa
popa
inc
xchg
inc
rolb
dec
adc
addr16
push
jns
sub
stos
pop
add
daa
push
jbe
insl
mov
or
rorl
push
test
and
lods
lods
ss
in
push
pop
test
cmp
dec
or
push
jecxz
gs
lds
xorb
or
es
mov
jmp
inc
cltd
popf
fwait
push
mov
xchg
xchg
fcompl
mov
stc
pushf
cltd
repz
js
fcmovbe
pop
xchg
stc
divl
repnz
add
adc
pop
sbb
xchg
sbb
aam
aam
loopne
xchg
lret
popa
push
imul
adc
push
inc
aam
push
pushf
sub
xor
xchg
fstps
adc
cwtl
insl
jge
dec
fucomp
adc
out
mov
repnz
dec
notl
pop
adc
sbb
cmp
pop
xor
daa
or
sti
ljmp
adcl
pop
fnstcw
adc
sbb
iret
dec
mull
inc
popa
sti
jg
pop
adc
aad
cmp
pop
test
mov
sbb
or
es
ljmp
loopne
pop
add
xor
or
mov
add
cmpsb
notl
push
push
inc
mov
setg
sub
dec
inc
adc
mov
shll
mov
xchg
fs
pop
or
gs
sub
cmp
loopne
fsubrs
lock
jmp
sub
test
es
repz
cmp
mov
rclb
sbb
xor
mov
lret
or
out
inc
lcall
xchg
dec
add
leave
das
inc
add
jbe
popf
cmp
in
adc
fdivs
push
out
mov
or
sbb
pusha
dec
and
mov
cs
add
cwtl
enter
push
es
xchg
inc
notl
mov
shlb
das
sbb
xchg
pop
dec
inc
push
repnz
push
aad
pusha
popf
xchg
fdiv
cmp
or
add
mov
cltd
and
xchg
orb
fdiv
xor
adc
mov
mov
cmpsl
xchg
xchg
test
out
push
mov
add
mov
pop
xchg
adc
movb
test
insb
mov
aaa
mov
subb
test
out
push
mov
dec
mov
cmpsl
jg,pt
mov
add
outsl
jno
xchg
mov
mov
and
add
cmp
fsubrp
cs
dec
shl
or
imul
jg
xchg
lret
sub
testl
adc
jecxz
cmp
loop
or
mov
or
and
ja
cmc
sub
xor
ljmp
inc
push
repz
stos
jnp
shrl
jns
ja
fadd
mov
push
dec
daa
pop
adc
jae
and
arpl
inc
iret
ja
jg
inc
jo
jp
mov
adc
lret
ljmp
xor
mov
mov
scas
dec
add
jmp
sbb
out
imull
test
cmc
jb
xchg
cmpb
jne
in
pop
cmp
add
bound
test
and
mov
push
and
lods
cmp
jnp
notl
mov
pop
mov
mov
sub
pop
lds
scas
push
xchg
jmp
popa
sbb
add
cld
fisttpl
fiaddl
cld
cmc
mov
cmp
push
popa
dec
jno
in
adc
xchg
jo
addl
inc
jno
jg
out
mov
fs
add
fisttpll
lods
les
sub
push
add
in
loop
and
lcall
jecxz
int
xor
rcrl
nop
jns
std
push
das
jae
cmp
inc
popf
xchg
addr16
jle
dec
mov
sub
ret
iret
ret
jmp
mov
push
movsb
add
into
sub
jp
dec
lods
cmp
in
jb
adc
mov
sbb
arpl
or
xchg
xchg
xorb
dec
leave
push
dec
jns
sbb
cmp
jns
cmpsl
or
loop
cmp
pop
push
in
jae
shr
add
jg
ss
hlt
mov
cmpsl
int
mov
mov
fs
sahf
pop
cli
lods
repnz
pop
movsb
and
out
sub
or
popa
xor
dec
fdivp
cmp
je
movl
popa
and
dec
lods
inc
cmc
pushf
sub
jp
pushfw
mov
xchg
stos
stc
jl
jae
push
jle
add
pshufw
cmp
dec
jo
jbe
push
aam
shll
push
aaa
es
jg
xor
loop
jl
fidivrs
mov
jae
cmp
jnp
sub
loope
repnz
fmul
or
or
sti
test
rclb
and
dec
imul
fwait
mov
xchg
int
sbb
xchg
or
inc
imul
sub
iret
sub
sbb
xorb
mov
xchg
movsb
hlt
cmpl
xchg
xchg
fstpt
shlb
adc
ror
test
adc
flds
or
imul
shll
out
lcall
or
mov
lock
test
adc
xchg
inc
inc
jle
es
decb
sub
shlb
sti
mulb
hlt
lock
mov
cmp
js
test
cli
xchg
pushf
xchg
popf
xchg
je
nop
adc
aas
scas
rcl
xchg
push
mov
inc
cmpsb
mov
repz
jne
aas
pop
les
mov
ss
mov
popa
cmp
mov
aad
cmp
adc
dec
pop
xor
dec
ja
add
and
mov
addr16
sahf
pop
sarl
mulb
sub
dec
and
adc
cmc
add
js
xchg
push
xchg
cli
insb
pop
push
mov
adc
and
mov
mov
jnp
pusha
addr16
mov
iret
push
fldt
out
mov
inc
mov
jmp
jmp
ret
or
js
lods
pop
push
sub
fbstp
mov
in
and
mov
and
inc
lds
sub
mov
mov
dec
xchg
stos
test
xor
imul
xchg
inc
adc
or
or
and
addr16
sahf
cmp
icebp
mov
push
ret
clc
scas
andl
shr
ficompl
js
mov
mov
outsl
scas
xorb
mov
stos
push
lret
push
fs
cmp
pop
incb
es
xor
sbb
ds
cmpsl
aam
or
xor
fstl
ret
push
lcall
outsl
jl
sbb
nop
xchg
or
ja
hlt
fdivrs
mov
push
addr16
add
jno
pop
lods
cmpsl
xor
imull
mov
enter
ret
lock
mov
inc
cmp
les
mov
xchg
xchg
out
mov
leave
cmp
js
xchg
inc
daa
loop
sub
enter
lret
add
imul
insb
push
insb
mov
and
scas
lods
push
ds
pop
push
xchg
add
inc
mov
daa
ret
movb
jno
dec
in
hlt
jp
dec
add
scas
inc
push
adc
lahf
rcl
push
push
xor
ss
or
jnp
into
push
ret
dec
mov
push
or
sti
dec
test
xor
inc
xlat
js
cmpsl
or
in
insb
jle
xchg
les
scas
popf
int3
fcmovu
pop
jb
fsubrp
fucom
into
gs
mov
cmc
jecxz
lea
inc
repz
jo
or
test
xor
cld
in
repnz
sbb
xchg
pop
loop
cmpsl
imul
jb
xchg
test
loop
lahf
pop
imul
or
xlat
mov
mov
cmc
orl
cmc
fdivs
lahf
je
lods
inc
stc
fwait
dec
mov
push
xchg
xor
xor
ljmp
nop
xchg
aam
push
xchg
stc
call
cmpb
mov
cmp
xor
xchg
sub
repz
add
test
xorb
fisttpl
lar
leave
mov
push
fnsave
out
adc
mov
mov
ret
jne
outsl
push
addr16
pop
cwtl
or
stos
testb
mov
repnz
mov
push
xor
jae
je
outsb
sub
mov
cmpsb
and
aad
call
or
sbb
arpl
hlt
ret
aaa
pop
ss
and
mov
out
ret
cld
adc
lret
sti
sub
arpl
daa
ja
mov
fs
dec
jns
out
sub
shrl
lods
ljmp
and
add
mov
pusha
jo
push
mov
int
xchg
push
cmp
jno
fs
pusha
adc
cltd
outsl
mov
sub
mov
cmpsb
mov
aas
cwtl
xlat
jne
xor
and
push
mov
pop
pop
lods
daa
and
clc
sub
sbb
and
jns
add
cmp
mov
pop
jno
sbb
fcoms
test
je
jp
js
mov
push
or
cmp
jne
xchg
dec
xchg
inc
add
xor
cmp
pop
cmpsb
outsl
xor
cli
add
jns
push
mov
jp
mov
sar
addl
add
in
sub
pop
pop
xchg
pop
lret
inc
js
movsl
lea
movsb
jnp
addl
cmp
cmp
jecxz
mov
rorl
pop
or
mov
ss
xorl
out
sahf
add
add
jl
dec
xor
xchg
adc
mov
and
rcrb
popf
dec
addps
mov
fcmovb
leave
xor
mov
push
gs
js
aad
jne
lods
pminub
sysret
xchg
mov
sub
jne
clc
ljmp
movsl
imul
fwait
inc
xlat
pop
inc
jae
mov
call
jbe
out
ja
jl
out
ja
mov
in
aas
aaa
fucomp
in
add
fld
adc
add
pusha
jecxz
insb
out
mov
fcoml
out
or
jbe
and
push
xor
cwtl
pop
pushf
dec
pop
push
cmpsb
adc
test
in
sub
call
jle
leave
arpl
int3
push
and
adc
test
fwait
pop
xor
lock
cmpb
divb
mov
jg
push
stc
not
cmp
arpl
iret
jno
roll
dec
sub
jb
inc
dec
pop
xchg
pusha
push
sahf
cmpsl
fs
sti
sub
insb
pop
cmp
mov
mov
pop
add
xchg
add
or
int
dec
mov
cwtl
out
xchg
xor
and
sub
cmpsl
xor
and
jae
push
fcompl
jmp
movsb
in
mov
push
dec
imul
lret
sub
cmpsb
mov
mov
push
test
cmp
jne
xorl
sbb
inc
in
fidivrs
jmp
cmpb
addr16
mov
lock
clc
and
dec
idiv
and
dec
rcll
cmp
pop
out
mov
mov
enter
and
lahf
iret
mov
enter
fwait
sti
xchg
sbb
sub
or
mov
loopne
pop
add
ret
fwait
push
arpl
cmpsb
mov
lcall
inc
test
push
mov
test
lea
xor
icebp
push
std
int3
mov
out
add
push
cmp
cmp
pop
xchg
xorl
add
jl
lahf
repz
jae
xchg
es
xchg
out
xchg
or
xchg
jecxz
icebp
push
popa
or
faddp
cmc
loop
adc
xlat
cltd
dec
lret
push
cmp
xchg
adc
xor
pop
icebp
jnp
dec
mov
sbb
pop
inc
jae
pop
aam
iret
std
ja
sbb
sarl
xlat
divb
xchg
sub
movsl
adc
ret
jo
lods
sub
inc
sbb
outsl
dec
mov
cmpsb
jmp
mov
fcompl
jnp
and
shrb
mov
push
cmc
xor
xchg
pop
push
pop
jge
and
mov
addr16
scas
ficompl
cwtl
adc
mov
mov
int3
dec
adc
push
sti
mov
cs
pop
lods
cmpsl
cwtl
inc
push
stos
jo
pop
xchg
cmpsl
ja
jno
mov
pop
insl
mov
inc
dec
jg
adc
andb
ljmp
sti
push
sub
loop
jne
mov
mov
fucomp
sbb
ds
sahf
mov
inc
cmp
pop
adcl
scas
enter
mov
mov
outsl
mov
aam
rcl
push
leave
mov
popf
aaa
movsl
pop
mov
pop
cmp
cld
push
scas
pop
out
or
adc
sbb
jecxz
stos
cmp
outsl
mov
pop
mov
leave
jl
pop
push
nop
test
negl
mov
adc
mov
ret
jg
jecxz
call
inc
test
and
es
pop
lcall
adc
mov
sub
cmp
adc
sub
mov
test
imul
inc
aam
daa
pop
popf
fiaddl
xchg
jb
cli
pop
jne
cmpsl
andb
ret
jo
mov
mov
test
xor
imul
push
mov
icebp
mov
xchg
jg
iret
pop
stos
addr16
test
repz
jge
push
cmpsl
std
popl
popa
mov
xchg
or
popf
mov
xchg
aaa
and
test
rcr
adcb
dec
cwtl
and
std
ja
bound
lcall
lret
xchg
jmp
insl
idivl
pop
cmp
or
les
or
ret
lret
fistpl
test
adc
addr16
lahf
divb
lahf
cmp
add
mov
push
imul
push
and
mov
and
mov
lahf
jp
cwtl
hlt
push
mov
dec
loope,pn
addr16
icebp
sbb
fisttpll
sbb
xor
pop
das
sub
test
stc
add
mov
push
add
lods
sub
jge
cmp
data16
sbb
or
xchg
cld
dec
dec
sbb
xor
cmpsl
or
xchg
stc
arpl
xchg
fsubrs
and
add
mov
lock
mov
inc
sub
mov
das
daa
or
pusha
xor
fwait
xchg
fiaddl
or
mov
lds
mov
xor
dec
mov
or
mov
jmp
ss
add
xor
add
sbb
call
jmp
mov
pop
lods
dec
sbb
cmp
int3
cmp
add
or
lcall
jnp
fdivs
inc
das
stc
cmp
xlat
out
add
push
mov
sarl
pop
inc
dec
and
scas
icebp
push
imul
mov
cmp
dec
cmp
and
xor
push
mov
ret
mov
sbb
inc
jle
adc
test
retw
mov
dec
ret
mov
or
adc
inc
sub
aas
cmpsb
aam
mov
mov
push
test
inc
jbe
pop
adc
negl
dec
mov
pop
jno
fisttpll
bound
fcompl
dec
cld
mov
xchg
ljmp
fwait
jp
jns
scas
in
sbb
sbb
and
addl
fwait
xor
sub
jl
sarl
xlat
jns
sbb
js
xchg
mov
jbe
lock
xchg
dec
leave
mov
inc
mov
lret
xchg
mov
xchg
notb
lret
xor
or
mov
nop
dec
push
inc
sbb
and
lock
out
sar
jo
xor
or
ret
pop
repz
mov
jmp
ja
xchg
push
jmp
add
cmp
adc
lret
adc
insl
jg
push
shlb
cmp
cmp
pop
aam
cmp
mov
add
lods
xchg
outsl
mov
sub
push
stos
movsl
bound
and
addr16
hlt
ror
mov
clc
push
push
dec
mov
push
xor
lret
jno
stos
mov
push
adc
and
cmp
jmp
je
popf
add
insb
movsb
xchg
and
in
shrb
enter
hlt
push
mov
loope
jl
test
cld
sbb
mov
arpl
pop
test
inc
adc
jle
test
lahf
shlb
into
ja
mov
or
ds
pop
in
sub
inc
push
sbb
out
push
jns
cmp
call
stos
push
pop
ljmp
pop
fisttpl
cmp
xor
pusha
inc
jl
adc
decb
int
or
jbe
ret
dec
out
and
jge
mov
xor
sub
inc
add
rol
mov
inc
in
or
mov
inc
jg
mov
call
and
sbb
lcall
rol
adc
sbb
pop
daa
add
fcoms
cmp
xchg
mov
lret
dec
xlat
lds
xor
jno
pop
inc
pop
inc
pop
mov
mov
push
jle
daa
mov
stos
mov
jmp
addr16
mov
cmp
movsl
dec
arpl
push
push
push
lcall
adc
push
nop
cmpsl
in
fwait
xchg
imul
xor
sub
jg
les
mov
mov
cmp
test
and
mov
push
mov
jbe
mov
jp
add
leave
arpl
daa
lret
pop
pop
sbb
enter
xrelease
adc
iret
bound
test
push
mov
jecxz
les
xchg
mov
pop
roll
add
xor
and
lods
jno
gs
and
sbb
jle
jp
or
cmpl
push
idiv
push
popa
jns
push
dec
or
movsw
pop
fildll
sti
jp
push
pusha
and
mov
mov
adc
inc
repnz
out
idiv
cmpsb
or
es
cmpsl
and
fwait
push
mov
stos
lods
sbb
jg
push
orl
js
mov
pop
call
inc
pop
ficoml
leave
cmp
stos
fldt
dec
test
mov
lea
pop
das
push
dec
mov
lahf
cmp
and
scas
inc
repnz
mov
or
jmp
in
xor
cmpb
mov
movsl
popf
dec
xchg
sbb
dec
or
adc
pop
cld
aaa
xlat
scas
lret
leave
dec
adc
jnp
mov
jne
outsl
mov
insl
xchg
cli
cwtl
cmp
fwait
adc
cltd
push
dec
imul
pop
icebp
popf
rcll
mov
xchg
xchg
cmpsb
and
pusha
xor
jb
lret
jnp
ja
sub
inc
mov
hlt
xlat
out
rclb
push
push
push
sbb
sti
push
push
pop
imul
mov
ret
and
xchg
lcall
bound
mov
mov
or
daa
xchg
jge
adc
mov
dec
std
inc
mov
inc
sbb
sub
sarb
jno
dec
enter
scas
pop
arpl
int
pop
scas
movsl
mov
cmpsb
pop
dec
mov
and
testl
frstor
jo
fstpl
add
and
aas
mov
push
sti
fmul
add
bnd
fimuls
xor
jecxz
mov
ljmp
loopne
jnp
push
inc
add
jnp
push
xchg
mov
xchg
popf
pop
xchg
mov
adc
xor
pop
jb
outsl
leave
mov
sbb
ret
ds
ljmp
xchg
aad
in
xorl
pop
faddl
sub
ljmp
bound
jns
cmp
fiadds
mov
jne
inc
cmp
rorl
sbb
mov
arpl
cmp
mov
mov
into
lods
aaa
or
jae
push
xor
cmp
das
imulb
test
arpl
jecxz
jne
add
push
cmp
or
sub
iret
jo
imul
inc
inc
xlat
lcall
mov
pop
pop
aas
sbb
je
movsl
adcb
inc
sbb
ljmp
int3
cmp
and
pop
lock
xor
push
jno
rcrl
xor
mov
insb
jns
test
jne
aad
div
push
xchg
iret
xchg
movsl
push
icebp
mov
inc
rclb
in
fsubr
mov
add
pop
xchg
sbb
roll
popa
es
test
and
test
imul
xchg
jmp
std
xchg
and
xor
xchg
addb
les
loop
mov
push
inc
pop
pop
in
scas
pusha
fnstcw
ja
jnp
add
mov
jne
push
test
mov
sbb
sbb
loop
dec
lea
mov
cmp
push
fwait
add
rorl
mov
sub
jno
adcb
das
mov
cld
insl
mov
mov
in
mul
push
cld
or
xor
fs
outsl
int3
mov
cmp
jl
rcrl
sarl
daa
ret
pop
sub
push
mov
ret
push
mov
or
lret
inc
jg
jecxz
subl
mov
loope
sahf
in
or
jae
lret
dec
lret
pop
iret
loope
scas
js
sahf
sub
out
cwtl
mov
jnp
ljmp
mov
or
test
xor
sbb
inc
adc
xchg
cmp
fcmovnu
cmpsb
mov
mulb
stc
pop
add
mov
mov
pop
enter
mov
gs
pop
les
sbb
idivl
sub
dec
cmc
popa
add
daa
ret
mov
cltd
cld
lods
dec
and
add
pop
xchg
mov
jle
mov
shlb
inc
xchg
aas
ja
aad
inc
cltd
sbb
in
test
stc
cltd
cmpsb
and
cmp
jne
iret
push
test
jnp
outsb
inc
test
ljmp
insl
push
add
test
bound
inc
vpsubsb
mov
shrb
push
stos
cltd
mov
pop
inc
fsts
pop
insb
inc
aad
cmp
outsl
nop
test
insb
in
dec
sarb
xor
sbbb
xchg
xchg
sub
pusha
cmp
jl
xlat
rcrb
int3
int3
sahf
pop
adc
sbb
incb
jb
jnp
test
leave
sub
mov
je
mov
sub
xor
sbb
cmp
cltd
pop
cmp
movsl
daa
cmp
adc
fucomp
dec
sbb
dec
insl
fnstenv
or
push
repnz
jg
or
lds
push
sbb
push
outsb
pop
or
and
xor
push
and
pop
or
inc
pushf
adc
stos
and
xchg
mov
mov
xchg
imul
lcall
or
sub
push
cld
test
mov
std
pusha
mov
cli
mov
out
aad
lods
add
or
xor
push
das
pop
cmp
dec
push
jnp
pop
aad
jb
cmp
pop
xchg
fsts
cltd
fidivrs
lcall
test
and
cmp
outsb
inc
ret
lock
mov
mov
dec
push
sbb
inc
or
mov
test
xchg
dec
scas
xor
inc
xchg
nop
push
imul
or
orb
dec
cli
pop
push
push
data16
rcll
sub
xchg
lahf
outsb
and
lahf
mov
mov
or
cmpsl
in
dec
and
in
addr16
in
popf
add
sbbb
fnstenv
daa
jae
jnp
push
imul
xorl
inc
fiaddl
nop
in
cmc
dec
jl
xor
dec
lret
inc
pop
lock
mov
mov
push
out
mov
pop
lea
lods
lods
xchg
cmp
outsl
mov
mov
orb
mov
in
negl
add
lcall
shll
clc
ret
out
cs
inc
pop
mov
push
push
xchg
out
cmp
add
push
xchg
test
pop
cmpsb
aaa
test
xchg
xchg
pop
xchg
dec
push
fbstp
sarb
cwtl
add
rcll
data16
mov
jle
xchg
jns
push
lock
testb
rcrb
mov
sub
sub
js
fsubrs
jp
movsb
mov
icebp
mov
daa
in
pop
dec
xchg
faddl
data16
ret
push
loope
jl
adc
pushf
ret
int3
push
sbb
jp
xchg
mov
cwtl
xchg
clc
cmc
mov
loopne
inc
sbb
push
xor
shl
sbb
mov
scas
sbb
daa
cld
xor
cmpsb
pusha
loopne
push
push
push
aas
sub
pop
shl
xchg
mov
in
sub
popa
or
shlb
adc
mov
sub
bound
scas
and
mov
movsl
fs
popa
insl
call
xchg
inc
pop
mov
add
sub
aad
mov
lods
xchg
xlat
and
mov
daa
cltd
pop
nop
mov
loope
mov
in
negl
mull
in
aad
das
jo
lock
clc
stos
pushf
inc
mov
pop
push
insl
cwtl
xor
popf
das
ficoml
dec
nop
jbe
sbb
imul
xlat
aad
out
push
push
daa
mov
hlt
rorb
cmc
out
add
fmuls
outsl
cmc
xor
or
je
mov
adc
add
jbe
xor
pop
lods
jno
shlb
test
cli
jo
pop
je
and
lcall
jb
ljmp
push
or
sbb
push
xorb
in
fwait
imul
rclb
je
mov
movsb
leave
inc
push
out
xchg
sbb
loop
push
enter
jo
mov
fwait
lahf
sub
pop
dec
in
ret
dec
inc
fnstcw
mov
sub
push
lds
adc
jne
push
pop
lcall
int
test
and
out
jae
adc
sbb
and
cld
inc
push
leave
pusha
adc
rorl
xchg
out
push
mov
xchg
push
inc
nop/reserved
push
inc
xor
push
mov
cli
sub
frstor
push
outsb
xchg
jp
addl
push
ficoms
xor
and
mull
xor
aad
fcompl
jbe
xchg
push
sub
cmpsb
mov
js
jecxz
jno
adc
xorl
cli
pop
or
or
loope
cmpsl
fmulp
and
mov
or
icebp
loop
mov
mov
jecxz
xchg
fcom
push
jl
stc
daa
pop
in
decb
mov
xchg
sub
jae
arpl
sbb
outsb
fisttps
jmp
mov
xor
lods
enter
xchg
jb
int3
inc
into
inc
dec
lods
mov
ret
ret
ljmp
or
jg
jne
cmp
cmp
inc
fwait
pop
pop
pop
push
sbb
sbb
das
repz
out
ret
adc
pop
inc
xlat
jns
jp
rep
dec
push
pushf
sbb
ja
push
inc
outsl
in
push
mov
ret
mov
ss
jne
jg
jg
lds
fstl
pop
push
lret
sahf
mulb
bound
aaa
lea
out
jb
lock
mov
js
mov
mov
dec
je
fisttpl
les
add
push
mov
jecxz
push
int
dec
cwtl
arpl
aam
adcb
jp
stos
fdivp
jae
and
in
xor
call
cmp
xlat
push
fwait
icebp
mov
data16
mov
dec
mov
xor
rol
icebp
dec
lret
sbb
out
aad
jmp
cmp
cmc
shll
push
int
dec
lea
test
pop
xchg
into
cmp
int3
add
je
mov
mov
xchg
add
imul
xchg
stos
sbb
cmp
cwtl
or
sub
ds
dec
nop
lea
stc
cmp
jmp
lcall
ds
mov
sti
addb
test
jae
js
sahf
sub
dec
or
pop
mov
repz
mov
lcall
push
ljmp
inc
add
cwtl
sbb
cmc
mov
cmc
cld
sub
push
push
fmuls
in
xchg
mov
inc
rcr
xchg
cmp
xchg
or
mov
inc
aas
leave
push
gs
int3
ljmp
add
mov
dec
add
push
push
lds
xor
cmp
mov
ljmp
repnz
inc
insb
in
jo
bound
or
repz
stos
adc
dec
loope
mov
inc
mov
xor
dec
lods
xor
fstpt
std
mov
pop
add
push
cmpsb
xor
push
jp
pop
into
xchg
mov
push
push
sbb
add
adc
sbb
btc
cmpsl
xor
add
lret
cmpsl
repnz
or
pop
repz
enter
add
pop
clc
xchg
ucomiss
push
fprem1
pusha
sbb
jge
dec
sub
rolb
divb
sub
leave
dec
push
ficoms
or
out
mov
xor
pop
dec
push
jo
add
jl
xchg
mov
dec
popa
sbb
in
sub
movsl
test
xchg
xrelease
stos
dec
aaa
ljmp
in
je
loope
pop
mov
cmp
dec
shlb
sub
movsl
xchg
scas
jo
lcall
in
mov
icebp
lods
data16
and
mov
call
lret
shll
lods
dec
mov
xor
stos
dec
fldt
rorb
mov
ljmp
inc
jne
pop
dec
lret
pop
lahf
and
jl
push
in
mov
int3
xorl
insb
mov
and
pushf
setb
mov
mov
in
mov
push
fdivl
xchg
rorb
out
push
mov
jmp
push
mov
outsb
ret
xchg
shl
mov
dec
mov
nop
push
hlt
jge,pn
mov
and
fldlg2
mov
mov
fisubrs
fisttps
fidivl
dec
jecxz
sahf
and
push
ljmp
jecxz
stc
jbe
mov
adc
inc
shll
lods
mov
adc
jle
cmpsb
and
xchg
ds
and
cmp
pusha
in
mov
lcall
lret
adc
sbbb
inc
xlat
xor
ss
or
stos
push
ret
mov
pop
push
push
shlb
dec
stos
and
hlt
aaa
mov
repnz
and
cmpsb
aam
lea
cmpsb
aas
insb
test
stos
cmp
xor
xchg
mov
iret
pop
pop
mov
pop
mov
push
popf
rorl
xor
sub
icebp
mov
iret
mov
imull
mov
inc
lods
jnp
pop
push
aam
add
xor
jae
popa
leave
mov
inc
add
push
gs
mov
cld
cmpsb
shrb
icebp
aas
ret
ds
cmp
je
add
xchg
jmp
jnp
mov
out
mov
loope
cld
movsl
ja
loope
pop
stos
imul
movsl
add
inc
xchg
lahf
mov
xchg
pop
daa
add
push
inc
shrl
data16
icebp
hlt
stos
icebp
and
jge
xchg
shrl
subl
lods
cmp
lods
cld
xchg
movsl
ret
ja
shll
inc
int3
shll
inc
sbb
mov
adc
fdivs
daa
sbb
inc
in
pop
pushf
pop
out
jp
lods
sub
lock
push
jle
int3
inc
pop
push
jae
jbe
out
adc
iret
loope
loopnew
cmp
stos
dec
cmp
test
hlt
sub
pop
jg
ds
jge
insb
mov
push
add
mov
pop
xor
test
jae
add
fsubrs
hlt
pop
jg
dec
cmc
bound
int3
mov
inc
pop
push
and
jnp
rolb
cvtps2pd
pop
les
fisubs
imul
jecxz
fildll
pop
int3
cmp
scas
repnz
xchg
sub
imul
sti
mov
mov
sbb
cwtl
stos
adc
sub
pusha
cli
and
mov
mov
test
jle
out
stos
push
sbb
lret
jae
pushl
enter
lea
sub
or
sarb
sbb
movsl
jp
aas
jecxz
ljmp
sbb
push
add
cli
mov
clc
xor
sbb
mov
cmp
mov
in
mov
dec
loopne
aad
mov
test
int3
jns
mov
add
pop
addr16
mov
scas
sar
push
mov
pop
cmp
daa
pop
mov
das
fsts
mov
lods
jmp
or
jecxz
fsubr
or
xchg
fcompl
arpl
cmc
testb
mov
add
sbb
push
int3
jb
std
cmp
mov
and
adc
and
pop
ret
dec
adc
mov
xor
lret
sti
pop
arpl
inc
xchg
push
je
xor
mov
mov
popa
add
mov
popa
mov
pop
mov
stos
dec
adc
xor
sub
paddsb
repnz
pop
mov
add
flds
or
sbb
and
fucomi
sbb
xchg
push
stos
jb
ss
les
pop
int3
rol
add
or
add
inc
xorl
push
fmul
jns
imul
mov
pop
jle
mov
fcmovnu
inc
gs
imul
mov
cs
ljmp
mov
jnp
shlb
dec
push
inc
sbb
xor
push
sub
ds
stos
mov
inc
outsb
cwtl
fimull
lock
fs
mov
adc
outsb
or
sbb
lock
insl
dec
mov
inc
ret
test
inc
imul
cmp
imul
sarl
jmp
mov
imul
fmuls
cmp
mov
insl
add
pop
mov
and
in
lods
outsl
outsb
or
add
sub
stos
aas
push
mov
pop
pop
jle
mov
test
inc
pop
addr16
testl
das
aas
pop
ret
in
push
pop
ljmp
sbb
xchg
cmp
loopne
in
inc
jbe
leave
lcall
pusha
int
jae
loope
inc
dec
stos
loopne
rol
mov
fstps
les
lahf
jl
sub
adc
cmp
pop
movsl
popa
outsl
insb
mov
outsb
jecxz
js
cmp
test
push
pusha
arpl
addr16
mov
mov
lds
enter
jmp
cmpsb
mul
mov
pop
das
and
sbb
pop
popl
cmpsl
scas
sub
xorl
sub
shll
movsl
and
sub
iret
loop
aad
adc
cs
ds
add
repz
arpl
hlt
sbb
repz
les
in
jbe
cmpsb
popa
push
or
sub
sub
inc
sbb
test
pop
pop
fwait
sbb
loop
mov
roll
pop
push
mov
sub
sbb
pop
and
inc
pop
push
cld
in
out
outsb
std
jmp
dec
cmp
shlb
leave
addr16
fdivp
adc
test
js
push
insb
xlat
mov
lock
sbb
jnp
sub
lods
nop
test
cli
inc
jl
repz
stos
filds
stc
inc
incl
inc
dec
ficoml
pop
rolb
scas
adc
xchg
push
imul
xchg
inc
push
leave
stc
add
jp
jo
test
or
stos
cmp
mov
inc
push
je
mov
out
jge
dec
sbb
jle
in
loop
add
movsb
in
push
test
subl
aas
std
pop
shll
aam
imulb
cld
mov
sbb
das
jne
mov
pop
cli
nop
enter
fs
test
mov
cwtl
insb
mov
cmpsb
or
leave
out
dec
and
push
aam
test
dec
aas
jns
mov
fwait
mov
lret
and
sarb
mov
jle
push
ja
mov
test
sbb
or
pushw
or
xchg
outsb
mov
inc
adc
ljmp
or
push
shlb
enter
cltd
arpl
rcrl
xor
mov
mov
mov
adc
clc
and
loopne
jg
or
push
dec
jbe
inc
sahf
das
imul
xor
xchg
lods
pop
xor
popf
adc
rcrb
lcall
xlat
orl
fdivs
fildl
cli
xchg
or
sub
fistl
or
sub
gs
inc
iret
push
sub
loop
ljmp
out
into
test
push
jnp
dec
add
stos
mov
inc
outsl
xchg
xchg
sub
inc
mov
out
outsl
psllq
rorb
pop
rcl
movsb
xchg
aad
or
jmp
pop
mov
aaa
faddl
mov
pop
mov
xchg
sarb
fnstenv
dec
sbb
call
test
dec
lret
ret
scas
adc
gs
cltd
decl
lock
sub
inc
adc
loope
pop
cmpb
arpl
outsl
xchg
icebp
xor
sbb
je
jo
mov
inc
dec
pop
lret
or
push
dec
push
das
sbb
xor
lret
xor
adcb
add
mov
push
iret
das
mov
lcall
int3
cmp
cwtl
enter
pop
xchg
push
pop
stos
pop
out
outsl
fsubs
daa
fwait
cmp
lods
or
daa
jmp
cmp
sub
dec
sub
fdivl
inc
lcall
sbbw
shr
bound
push
dec
les
js
addr16
push
jle
pop
test
fisttps
daa
xchg
xchg
jge
mov
xlat
dec
mov
aaa
push
dec
pop
push
pop
ss
xor
jno
mov
xlat
mov
xor
cmp
jp
xor
push
cmpsl
push
gs
push
test
ja
stos
dec
das
lods
pushf
mov
cmp
out
rcr
jbe
xor
push
push
loopne
aad
jmp
ljmp
and
adc
adc
test
subb
into
xor
xlat
xchg
fsubl
cmp
or
in
sbb
mov
sub
addr16
stos
test
and
push
dec
jp
sub
aam
addl
jns
hlt
jnp
mov
and
mov
bound
push
sbb
push
stos
shlb
mov
cwtl
or
dec
mov
xlat
xor
mov
jae
or
inc
mov
push
xor
mov
or
pop
addr16
ja
or
test
mov
sahf
subl
jl
das
fistpll
mov
gs
push
imul
push
xchg
cmp
push
dec
aad
add
pusha
xor
js
out
pop
xor
inc
mov
pushf
mov
cmpb
mov
sub
insl
add
out
jns,pt
pop
jp
push
or
lock
push
sub
jns
fcomps
adcb
push
mov
xchg
mov
pop
add
pop
test
adc
aaa
je
filds
inc
add
lods
inc
pop
sahf
lock
call
fsubrp
push
sub
test
mov
fnstcw
shrl
in
xchg
dec
cltd
dec
test
sbb
data16
and
and
int
adc
stos
rcrl
divl
orb
xchg
push
mov
dec
je
ja
jno
dec
lods
cmp
rcll
and
sub
adc
xchg
jae
loopne
mov
imul
rorl
lea
ja
sub
push
and
ja
je
dec
lahf
pop
test
scas
out
mov
jmp
test
sub
mov
scas
iret
add
push
cmpl
dec
negb
or
sub
in
clc
adc
jnp
pop
sbb
shlb
int3
js
pop
in
push
fsubr
mov
mov
jmp
repnz
add
lret
push
ds
pushf
and
addl
cmp
xchg
popa
cmpsl
sub
in
mov
rcrl
int
cmp
cmpsb
add
je
testl
mov
mov
mov
add
inc
pushw
cs
xchg
bound
push
out
sub
adc
dec
pop
and
test
test
in
scas
push
sti
mov
and
xchg
add
mov
lods
fbstp
rorl
pop
pop
and
dec
ret
insl
outsl
imul
iret
test
lock
mov
adc
out
out
fiadds
test
les
dec
xor
pop
mov
adc
test
dec
push
sbb
dec
subb
mov
push
jb
cmp
adc
arpl
jb
test
imul
cmc
push
ret
cmp
xchg
fldt
add
or
pop
loop
jmp
sub
cmp
mov
inc
xlat
test
xchg
fsubr
fildll
repz
xor
js
mov
lcall
lds
repnz
pop
sub
sbb
dec
xor
and
mov
xchg
sub
xchg
xor
push
sahf
movsl
ljmp
das
les
cmpsl
or
adc
imul
mov
jl
mov
push
dec
add
jnp
adc
add
xchg
loope
dec
jmp
pop
sbb
mov
mov
mov
andl
dec
jl
inc
in
mov
adc
pop
test
adc
fsubp
jbe
and
cmc
ficomps
mov
push
lcall
mov
jno
and
cmpsb
xchg
stos
fmulp
add
xor
xchg
lret
mov
sbb
movsl
inc
pop
or
inc
stc
lods
jne
push
mov
and
pop
push
jp
xchg
repnz
push
dec
cli
inc
adc
xchg
cmp
lret
mov
out
test
psubd
mov
push
cld
push
or
xlat
fisttpll
pop
enter
pop
imul
xchg
mov
mov
loop
mov
dec
inc
xchg
xlat
lods
and
sub
xchg
xchg
mov
sub
sahf
or
shll
push
add
repnz
repnz
loop
das
mov
faddl
and
mov
jmp
jns
addb
out
add
aam
ljmp
jge
xlat
xor
mov
xor
xchg
arpl
ret
xchg
dec
das
cmp
ret
fwait
pusha
xchg
es
loopne
mov
push
pop
aam
repz
cli
addb
jl
mov
lods
sbb
or
inc
push
es
sub
popa
jns
das
xchg
pushf
in
dec
lret
jb
lcall
stos
rcll
xor
pop
adc
jg
je
adc
push
cli
negb
mov
sbb
sub
or
lods
pop
pop
inc
xor
sbb
ret
cmp
add
sarl
or
cmc
push
and
dec
stos
jnp
ror
xchg
xchg
sub
xlat
clc
sub
push
xchg
xor
lret
dec
cmpsl
jmp
add
pop
jecxz
les
or
imul
insb
xor
adc
xchg
lods
ljmp
sahf
mulps
test
lods
dec
les
and
insb
sbb
sbb
imulb
and
inc
lock
xor
lods
or
rolb
fisubrs
and
xchg
push
push
sub
cmp
cmc
nop
fwait
jno
enter
xor
push
pop
lods
arpl
jnp
push
rcrl
dec
int
add
xchg
sbb
adc
dec
add
icebp
cmp
je
push
lret
cmpsl
sub
mov
xor
adc
int3
out
aaa
xor
movsb
or
out
or
orb
clc
mov
cmp
test
divb
push
cmpsb
add
loop
push
xor
xchg
insl
mov
adc
jmp
or
lds
lcall
dec
ret
xor
push
adc
adc
pop
cmc
xchg
shl
add
pop
sub
mov
fistpl
sahf
lods
mov
push
cmp
lret
pop
sub
imul
repz
imul
mov
dec
xor
pop
and
es
mov
stos
sbb
cli
mov
sub
repnz
out
mov
xchg
pushf
loope
in
insl
punpckhdq
and
dec
adc
punpckhwd
popa
data16
cmp
mov
icebp
lea
pop
jns
jmp
jl
sti
pop
dec
not
push
xlat
adc
mov
arpl
cmp
sbbl
and
fcompl
add
jne
pusha
xchg
dec
jnp
push
dec
lret
daa
push
adc
addr16
cmp
add
cmp
push
xor
push
push
cmp
cmp
inc
xchg
mov
int3
or
popf
ljmp
rorl
inc
iret
xchg
rcr
mov
jg
mov
jae
ja
cmp
daa
movntq
mov
test
or
sub
dec
in
push
mov
inc
mov
adc
pop
or
ret
sbb
aaa
mov
js
mov
mov
fistpll
cmp
pop
mov
aam
stos
xchg
lea
inc
xor
cs
enter
addr16
cmp
and
jge
jne
imul
iret
mov
loope
or
jmp
out
imul
int3
mov
xchg
xor
adc
inc
xor
aam
jns
and
insb
je
cmp
push
jbe
out
nop
outsl
xor
int
push
repnz
jp
lds
sub
fistps
das
fisttpll
push
mov
lock
jae
cmp
mov
jnp
pop
mov
movsb
pop
sub
jnp
inc
xor
out
les
mov
and
fdiv
cmpsb
mov
les
push
cmp
lds
pushf
icebp
sub
push
add
aad
sub
int
dec
out
jp
xor
mov
jmp
divb
jp
jg
arpl
fnstenv
adc
rcll
cwtl
idiv
or
jns
mov
jle
mov
filds
xor
hlt
and
jne
lods
cld
repz
in
inc
stc
out
push
shlb
cmpsl
xchg
sti
loop
iret
cmp
int
ss
pop
mov
lods
ret
jae
pop
loopne
into
out
pop
lret
or
push
pop
xor
and
inc
sbb
sub
mov
sub
aad
xchg
icebp
inc
xor
nop
mov
inc
mov
xchg
add
fisubl
or
sbb
adc
insb
in
cwtl
data16
daa
xlat
les
test
mov
loopne
sub
jp
sub
shll
insl
in
ror
inc
and
scas
jns
push
lahf
mov
mov
es
or
fimull
bnd
and
sbbb
je
jle
adc
scas
dec
stos
std
js
or
sub
call
inc
mov
cmp
out
out
inc
jo
out
dec
push
pop
sbb
and
mov
mov
rclb
insl
dec
clc
jnp
notl
or
cltd
lahf
clc
imul
jo
inc
pop
and
xor
mov
frndint
fsub
pusha
inc
or
pop
xchg
mov
insb
mov
ljmp
dec
mov
les
xor
inc
xchg
dec
xchg
int
outsb
mov
out
out
jb
imul
loop
mov
ret
mov
mov
jbe
das
pop
int
jnp
cmp
xchg
xchg
fmul
jmp
pusha
jge
fs
arpl
xor
sbb
mov
jo
cmp
fs
jecxz
inc
dec
or
pushf
jl
enter
in
sbb
testb
lea
push
mov
das
fidivl
push
cld
jmp
loope
je
add
or
or
push
dec
inc
das
inc
cmp
sti
mov
cmp
push
nop
lahf
push
popa
test
pop
fldt
lods
test
mov
jp
lret
mov
inc
shl
jg
popa
mov
repz
mov
cs
icebp
xchg
mov
es
iret
inc
sbb
push
lahf
sbb
les
fwait
adc
mov
outsl
sbb
mov
popf
or
xchg
lret
dec
cwtl
dec
push
in
popa
rorl
cmp
dec
ret
nop
ret
push
mov
imul
das
cmpsb
jb
jmp
dec
adc
mov
jg
push
out
push
test
ror
inc
push
aad
jo
jg
sbb
mov
aad
push
out
stos
mov
cmp
mov
sbb
data16
xchg
mov
nop
sub
inc
divl
inc
ret
xor
xorb
push
dec
jmp
cmpsl
icebp
sub
xor
lock
jle
stos
mov
stos
or
daa
cmp
movsl
jl
add
cwtl
cli
or
jecxz
ret
mov
dec
shrl
sub
xchg
push
ds
daa
jns
cltd
inc
or
xlat
sahf
or
mov
or
mov
addb
xchg
mov
and
dec
pop
rorb
out
ds
sub
adc
ja
in
fsubs
dec
pop
movsb
mov
xor
loop
mov
cmpsb
daa
das
mov
jle
jne
jp
mov
cmp
sbbl
mov
xchg
dec
test
lret
sbb
out
enter
mov
adc
push
jp
andl
in
mov
daa
sbb
jecxz
jle
sbb
mov
cs
jl
push
inc
push
push
jne
dec
rcl
movsb
gs
push
test
sub
add
pop
fmull
jp
lods
adc
fwait
or
xor
daa
jbe
push
sub
test
pusha
mov
out
jno
push
and
pushl
cmc
xorb
adc
fistl
mov
jns
ret
add
pop
sbb
jmp
pop
aad
int3
adc
sbb
unpckhps
sbb
repnz
adc
stos
mov
push
lea
cltd
das
ret
es
jle
movsl
mov
dec
out
fldcw
lods
ja
iret
cmpsl
or
jo
mov
dec
andl
shrl
pop
and
inc
cmp
xlat
xor
pop
cmp
dec
mov
sub
and
enter
sub
idivb
push
jmp
jae
mov
adc
jle
ljmp
pop
repnz
daa
jae
add
arpl
out
jno
fstpl
xchg
mov
add
add
mov
dec
adc
daa
jns
xchg
dec
mov
cmpsl
dec
call
ret
out
pop
push
push
push
sub
sbb
cltd
je
shrl
pop
repz
loope
add
add
sbb
loop
cld
dec
mov
cmp
loopne
out
push
mov
clc
int
jo
ljmp
or
mov
imul
pushf
xchg
int
js
gs
je
test
add
aad
maxps
filds
movsl
cmp
cwtl
mov
xchg
inc
add
mov
andb
add
dec
sub
leave
jp
mov
jne
pop
movsl
mov
lret
adc
jnp
jns
inc
pop
mov
ds
in
out
das
push
frstor
push
xchg
add
pop
xchg
neg
aaa
mov
cmp
and
sbb
ljmp
mov
into
xor
imul
jmp
push
mov
mov
sub
insb
mov
lcall
xlat
jbe
mov
sub
push
test
inc
mov
jno
int
pop
xor
je
or
xchg
adc
movsl
add
das
mov
jl
sub
outsb
stos
mov
dec
add
dec
out
inc
cmpsl
pop
xor
orb
jle
jl
add
add
sbb
mov
dec
mov
lahf
jnp
adcb
pop
or
mov
jle
sub
insb
and
pop
push
or
inc
adc
jnp
movsb
mov
lret
sbb
jg
inc
insl
sbb
cwtl
fnstcw
fldenv
inc
mov
inc
hlt
jecxz
xor
fimull
andl
popf
lea
std
cmp
xchg
jne
and
pushf
outsl
sbb
in
dec
daa
mov
or
push
mov
sub
and
dec
sbb
lods
cmp
mov
mov
ret
xchg
outsl
je
fstpl
cmp
jno
push
insb
in
aad
lock
das
imul
ds
or
xlat
test
or
dec
dec
bound
and
mov
outsl
dec
cmp
fadd
add
pop
sbb
add
jl
inc
pop
into
dec
push
xchg
mov
pop
cmp
or
xrelease
push
jle
xchg
outsb
sarl
decb
lods
jmp
dec
or
les
in
jg
inc
stos
pop
mov
daa
inc
rolb
pop
xchg
movsb
mov
icebp
and
out
jmp
cs
jb
inc
jno
clc
insl
arpl
inc
pop
jg
and
push
popf
sbb
mov
out
out
sbb
clc
aaa
add
xchg
mov
jno
cmp
push
cli
mov
or
or
cmpsl
js
mov
add
cmp
arpl
imul
mov
xchg
or
inc
stos
or
outsl
sub
pop
test
jae
mov
mov
mov
aad
mov
ljmp
or
add
pop
adc
sti
mov
inc
pop
lret
aas
cmpb
ret
dec
lods
sub
xor
rolb
repz
loop
jae
repz
imul
mov
or
push
pop
or
iret
insl
jle
ja
imul
movups
cmp
xchg
lock
sub
aaa
call
adc
push
div
adc
repz
addl
outsb
fistps
repz
mov
sbb
popf
mov
lock
push
ds
cmp
test
mov
mov
sahf
das
add
jge
repz
dec
xchg
lods
push
iret
mov
int3
dec
insl
arpl
and
les
adc
fldenv
repz
lods
loop
out
cmpsb
mov
test
xchg
push
add
cmpsb
cwtl
jo
add
inc
dec
popa
std
out
popa
scas
jp
sbb
pop
out
orb
or
idivb
icebp
outsb
xchg
xor
sbb
sbb
inc
jnp
imul
sbb
xor
andl
pop
outsb
push
jl
xchg
ret
pop
push
inc
sub
mov
test
jp
jle
and
stos
fbstp
inc
and
xchg
dec
mov
loop
xchg
push
leave
jecxz
pop
pop
pop
imul
cmp
push
or
fcoms
mulb
daa
xchg
test
pop
jnp
pop
das
inc
loope
adc
aam
icebp
sarl
cltd
dec
adcl
sub
dec
scas
rcrl
and
rol
jecxz
pop
mov
aaa
hlt
mov
daa
fst
in
test
and
add
mov
xorb
loopne
hlt
mov
sbbb
mov
test
pusha
jns
gs
jecxz
xchg
loop
movsb
push
ja
push
pop
sbb
clc
aad
jg
sti
jnp
and
sub
icebp
jmp
xor
jns
inc
stos
jbe
fnstcw
xor
cltd
push
pop
mov
addr16
xor
adc
or
and
cmpsl
outsl
mov
push
imul
mov
add
xor
ror
mov
cld
inc
imul
cmpsl
mov
mov
and
hlt
popl
lret
lods
sbb
mov
mov
xor
pop
xor
mov
rorb
rolb
push
mov
cmp
adc
push
sub
sbb
call
xchg
sub
mov
push
cmp
sub
jle
out
and
sbb
out
out
jmp
jae
ror
js
test
dec
xor
mov
nop
fstpt
mov
int
mov
pop
insb
or
lods
xchg
sub
mov
mov
jns
shll
int3
sub
and
decl
stos
sbb
xchg
insb
orl
and
xor
sahf
popf
and
rcrl
icebp
fwait
push
mov
cltd
mov
mov
addr16
xlat
mov
cmp
test
dec
dec
in
jge
in
mov
in
pop
and
lcall
inc
cltd
sbb
mov
sub
bound
stos
mov
add
hlt
xlat
lock
mov
pop
and
aad
hlt
sbb
inc
mov
test
sbb
jns
popf
clc
dec
out
std
push
mov
shll
xchg
cwtl
movsb
adc
mov
lahf
mov
leave
je
jno
jecxz
adc
popa
pop
xchg
inc
test
adc
gs
pop
and
cmp
xchg
mov
mov
mov
xchg
ds
jbe
push
sti
pop
pop
inc
mov
jb
cmp
xchg
lahf
sti
cld
push
sub
jnp
jle
test
push
mov
pusha
cmpsb
shll
and
sbb
lahf
lods
or
xor
inc
xchg
shlb
add
xchg
add
in
jg
inc
inc
aad
mov
inc
sub
shll
subl
sbb
push
sbb
cmp
pop
data16
mov
push
fdivrs
mov
adc
and
popa
and
xchg
and
adc
test
push
and
sub
dec
push
aam
fwait
mov
push
push
cmp
sub
and
xor
and
jnp
push
push
sbb
xchg
mov
xor
bound
mov
push
lcall
mov
into
sbb
adc
push
add
pop
xchg
xor
push
or
cwtl
dec
fisubs
bound
repz
lcall
adc
adc
cmp
adc
enter
lods
mov
sbb
mov
mov
stos
movl
sub
sbb
sbb
jo
lcall
lock
psllq
aaa
lahf
or
test
sbb
shll
out
das
aad
imul
or
push
and
fwait
ds
pop
popa
mov
inc
repnz
fdivrs
sub
es
jecxz
xchg
sub
or
test
idivb
pop
int3
push
sbb
mov
mov
test
mov
jmp
or
xor
movsl
or
jl
push
push
movsb
stos
lret
lods
stos
and
ret
cli
imul
mov
cli
cmp
mov
sbb
gs
cmc
addr16
push
dec
in
push
mull
sarb
ret
xchg
cwtl
add
bound
nop
hlt
lcall
cmpsb
push
or
add
push
fcmovbe
div
sarb
les
and
or
aas
vpackuswb
cmp
mov
pop
loopne
imul
rcrl
cmpsb
and
ljmp
cmp
lock
dec
loopne
dec
cwtl
pop
pop
bound
and
pop
rcl
dec
std
rcl
and
inc
out
push
test
subb
lret
lret
dec
ljmp
sub
xchg
sub
lret
shll
icebp
mov
mov
add
ror
add
out
test
pop
inc
mov
rol
movb
test
mov
xorl
lods
jb
jmp
xor
aaa
mov
inc
adc
loop
imul
cmpsb
ljmp
sub
cmp
pop
in
pop
scas
pop
mov
fcom
pop
mov
pop
fadds
push
dec
inc
add
or
bound
push
mov
in
dec
fidivl
pop
or
add
inc
xchg
mov
sbb
shlb
filds
mov
and
std
inc
int3
lods
cwtl
cld
shr
repnz
ss
dec
rorb
pushl
cli
add
xor
nop
repnz
insb
jecxz
pop
insb
xchg
cmpsb
sbb
scas
js
mov
popa
mov
movb
movsl
mov
xor
popa
jns
inc
xlat
jae
std
adc
mov
jne
sub
pop
and
push
rcll
repz
jb
sbb
sub
leave
push
jns
cmp
push
shlb
cmc
adc
mov
imul
pop
adc
xchg
cwtl
mov
mov
xchg
jb
sub
xchg
jno
addr16
and
push
inc
ss
negl
mov
fmul
mov
lods
test
or
jb
jg
push
pop
mov
add
mov
ds
or
mov
xchg
enter
fsubrl
out
xor
push
fs
or
sub
mov
popf
jp
dec
mov
bound
daa
inc
xchg
fs
fs
ret
rorl
xchg
inc
andb
or
js
cs
push
scas
dec
out
arpl
jns
int3
fistl
push
enter
sub
xor
adc
or
jge
faddp
pop
pop
and
fwait
out
push
stos
bound
movsl
sub
inc
mov
in
inc
scas
push
mov
fistpll
rcrl
sbbl
int3
mov
mov
in
mov
xor
sbb
sub
outsl
lcall
sub
fdivrl
adc
push
mov
xor
cs
pop
xor
dec
push
sahf
mov
add
xor
movl
and
lock
clc
pop
mov
sbb
xchg
scas
lret
inc
pop
outsb
mov
enter
lret
std
js
mov
ds
mov
jmp
pop
ja
negl
or
jl
icebp
lret
popf
sbb
lss
mov
addr16
mulb
lahf
enter
daa
fsubrp
sbb
std
jecxz
adc
push
addr16
cltd
cmp
addl
and
lods
insb
jnp
sub
ret
pop
sub
push
call
pop
mov
faddl
fs
pop
rcrb
push
jp
stos
push
mov
int
cmpsl
lret
inc
test
push
jmp
sbb
inc
mov
mov
jno
sub
stos
mov
adc
into
popa
adc
daa
mov
test
sub
ja
cmpb
lock
inc
xor
imul
addr16
pop
lret
lret
loop
scas
loopne
stos
sub
movhps
lods
mov
clc
push
jl
add
popa
in
mov
xchg
xchg
int3
imulb
sbb
adc
xor
dec
add
jle
mov
cmp
sbb
mov
into
popa
jge
or
in
xor
lods
mov
outsl
fcoms
inc
scas
xor
xchg
dec
push
std
or
stos
int3
adc
and
sub
push
sub
fimuls
push
mov
stos
mov
sti
inc
xlat
pusha
addr16
add
inc
out
xchg
jg
mov
mov
xor
and
hlt
push
imulb
and
rclb
pop
xchg
fimull
pop
dec
add
or
inc
sub
loop
push
call
cmp
push
xchg
push
xor
dec
mov
inc
adc
inc
fstps
xor
into
mov
jno
pop
data16
les
add
pop
add
ljmp
or
mov
lret
inc
jns
mov
pop
aas
test
roll
mov
cmpl
mov
sbb
mov
xor
jle
lret
xor
fsubrs
in
push
orb
imul
inc
sub
cmc
xor
js
xchg
jne
ds
rcrl
loope
add
sub
and
jmp
jbe
or
jg
xor
imul
movb
clc
jle
popf
fsub
fistpll
cwtl
sub
stos
or
scas
cmc
mov
lahf
aaa
sbb
shrl
mov
fmulp
movsl
stos
lods
mov
sub
pop
pop
mov
and
das
loop
mov
lods
rorl
xchg
je
mov
lret
lods
cli
pop
movsl
inc
nop
addb
xor
cmp
push
jp
inc
in
lods
push
jecxz
mov
xor
movsb
lea
mov
add
mov
shrb
subl
or
push
lahf
mov
or
neg
and
inc
xchg
test
inc
add
jno
repz
inc
pop
jno
mov
xor
cli
loop
xor
add
fiaddl
daa
insl
dec
fimull
xchg
adc
sub
dec
mov
mov
in
leave
pop
adc
nop
sbb
ss
mov
jne
imul
or
jne
lods
cld
push
aas
and
sti
add
xlat
shll
xchg
adc
mov
aam
js
xchg
lcall
pop
xchg
sbb
cmp
sarb
popf
add
insl
ficoms
jno
add
cmp
in
icebp
or
dec
test
fildll
mov
pop
inc
lods
jmp
sti
or
insb
pop
pop
sti
xor
mov
aam
xor
xchg
adc
outsb
shlb
cmp
mov
mov
xchg
mov
xchg
sahf
push
add
cltd
sarb
mov
pop
pop
push
xchg
ds
arpl
or
insl
imul
insb
leave
inc
push
iret
mov
cwtl
test
xchg
in
rol
sbb
mov
xor
inc
data16
sbb
popa
call
shrl
imul
sti
popf
stos
arpl
xchg
cmp
pushf
pop
rorl
push
sbb
mov
dec
out
lret
js
xor
inc
cmpsb
dec
lock
pop
mov
and
and
mov
negb
push
push
jo
xchg
cmp
sbb
mov
daa
xchg
jp
sbb
mov
shr
lcall
inc
cmpsb
in
insl
xchg
adc
xchg
das
inc
cltd
xchg
cwtl
cmp
mov
cmp
in
movsl
lret
mov
aad
jns
pop
cld
adc
cmp
push
cltd
inc
xor
cmp
cltd
dec
loopne
ljmp
insb
sarl
pusha
std
lock
fs
insb
bswap
or
outsb
mov
scas
or
jbe
xor
pop
mov
fsubr
in
dec
gs
inc
scas
lret
aaa
test
icebp
sub
test
dec
jno
sub
push
sub
push
je
lods
mov
dec
sbb
stos
inc
outsb
push
out
mull
sahf
add
sub
push
aas
loop
lods
inc
xor
loopne
xchg
jae
sub
fdivr
lahf
mov
inc
lcall
jo
lock
mov
xor
fstpt
mov
loop
add
lds
mov
dec
js
dec
push
stos
lcall
imul
stc
and
and
or
push
push
lods
ss
out
and
nop
cmp
outsb
sbbl
inc
stc
mov
mov
in
pop
jbe
cmp
pop
sub
in
scas
and
lcall
add
xchg
loope
popf
add
mov
shrl
mov
popf
add
add
inc
xor
movsb
out
test
push
sti
inc
cmp
gs
pop
stc
aam
jge
xor
loopne
or
sub
scas
out
pushf
push
insb
test
push
and
pop
int
add
in
pop
jmp
lret
adc
movsl
das
into
jnp
push
fists
outsl
ficoml
push
fldenv
mov
sbb
arpl
je
xchg
xchg
aam
iret
rol
stc
or
inc
mov
mov
test
fwait
pop
popa
lcall
jge
or
push
into
gs
gs
xchg
call
sahf
mov
test
lcall
pop
push
lcall
loop
xor
pop
push
cmpsb
and
push
inc
cmpl
lcall
fsubl
cmp
cltd
les
cmpsl
sub
dec
cli
inc
xchg
idivl
imul
les
push
sbb
jne
addr16
je
scas
pop
rcrb
dec
jbe
cwtl
mov
fsubp
addb
xor
nop
pop
sbb
test
int
outsl
mov
mov
lahf
push
loopne
cmpsl
leave
pop
out
es
xor
sub
sbb
push
sbb
add
adc
sbb
into
outsb
jge
aad
ljmp
xor
clc
and
jne
movsb
pushf
inc
mov
fsubl
adc
test
test
shrd
cld
and
inc
mov
test
dec
mov
push
adc
cli
push
fistps
les
sbb
fcmove
mov
fldcw
cltd
in
mov
inc
inc
sub
dec
mov
mov
ficoms
mov
jge
inc
cmp
mov
push
jnp
lds
cmc
jo
sub
or
mov
mov
cwtl
icebp
shrb
jg
out
cs
or
orb
mov
mov
iret
add
sbb
ds
into
sbb
pop
or
xor
dec
sbb
ret
addl
mov
lahf
cmp
or
clc
lret
cmpb
imul
test
jmp
jmp
jns
ret
cmp
push
lahf
push
out
repz
loope
xor
pop
test
mov
pop
jb
inc
mov
fcom
pop
adc
movsb
mov
add
sbb
lea
and
pop
add
inc
nop
leave
daa
xor
mov
adc
add
stc
mov
cmpsb
mov
sahf
and
lea
xor
ljmp
mov
int3
stos
aam
sub
sti
pop
bound
out
es
cmpsb
bound
and
or
push
dec
sar
jg
sub
mov
jb
out
or
cmpsb
xchg
sbbl
push
push
lret
scas
mov
dec
popa
or
pop
jp
fildll
mov
xor
aaa
or
xor
outsb
rorb
ds
push
or
push
sbb
cltd
repnz
or
aaa
jmp
fistpl
and
pop
dec
in
rorb
in
xchg
push
mov
jo
xor
push
sub
lods
or
mov
pushf
xor
jns
sub
mov
dec
pop
mov
jge
pushf
out
sub
xor
inc
pop
sbb
or
mov
notl
fnstcw
sahf
sub
lcall
xor
popl
pop
add
jno
mov
ret
rcrl
leave
sbb
stos
dec
mov
cmpb
ss
outsl
out
mov
mov
insl
fcmovnb
aas
mov
lret
outsb
jp
push
mov
and
pop
dec
xor
into
daa
xor
inc
roll
mov
cmp
pop
adc
inc
inc
ja
pop
mov
lret
pop
lcall
or
mov
andb
cmp
mov
stos
mov
aam
fdivs
or
dec
mov
jne
xor
jns
int3
cmpsl
in
inc
xor
sub
add
add
mov
into
and
imul
arpl
push
jno
add
pop
mov
adc
in
or
xlat
push
pop
or
das
es
fiaddl
lcall
movsb
mov
sub
and
mov
pop
jecxz
in
dec
pop
sub
fadd
cmc
popf
fnstenv
loope
repnz
or
sub
dec
vandps
or
add
cmp
repz
cwtl
jl
xor
mov
sub
jbe
or
xchg
xor
push
pop
dec
call
and
push
push
out
lret
out
repz
push
ss
adc
jns
rcll
aad
mov
sbb
lods
out
mov
push
sbb
and
xchg
popa
pop
jbe
mov
mov
gs
mov
jns
je
fmuls
stos
dec
jne
pushl
shrl
or
and
outsb
enter
out
cmpsb
inc
adc
scas
fadds
sbb
push
push
repnz
std
in
arpl
ss
stos
add
lcall
in
push
repz
xchg
cmp
add
cli
fmuls
pop
mov
xor
outsb
push
ljmp
cmp
xlat
mov
lahf
jb
mov
xorb
aas
adc
cmp
mov
fwait
push
sub
add
movsb
out
xor
push
cmp
lcall
call
out
adc
outsb
xchg
outsb
dec
insl
adc
nop
lock
in
push
aas
xor
mov
inc
xchg
into
sbb
sub
int3
int3
fstpl
push
sbb
add
mov
jbe
mull
enter
into
mov
sbb
fidivrs
and
mov
popa
lds
mov
addr16
adc
cmp
and
push
push
testb
add
adc
inc
xorl
fs
dec
pusha
add
loop
sbb
les
cmp
mov
popf
xchg
aaa
or
leave
jmp
out
push
je
ret
lock
je
out
gs
mov
es
mov
cmpsb
jle
imul
jb
or
aam
imul
test
mov
mov
fisttps
xchg
mov
and
push
mov
xlat
sbb
inc
std
push
mov
sbb
ret
xor
dec
popf
add
mov
bound
pop
or
shlb
mov
rolb
cmp
lods
adc
sti
hlt
adc
dec
cmp
push
sbb
cltd
xchg
xor
daa
dec
int3
sub
jbe
inc
mov
ds
aam
inc
jl
adc
inc
push
fbstp
cmp
popa
call
push
mulb
push
push
pop
mov
aam
jmp
test
jno
mull
popf
and
cmp
sbb
clc
pushf
lods
mov
mov
dec
and
movsb
mov
pop
dec
aas
out
push
mov
testb
mov
push
das
sub
popf
sub
movsl
jl
movups
inc
outsb
jp
js
cwtl
stos
cmp
cmp
sbb
push
rclb
out
sahf
jbe
data16
iret
inc
call
sub
cmp
and
lods
lcall
pop
imul
divl
mov
int3
popf
xchg
adc
inc
xlat
stos
lret
test
ss
rolb
andl
push
out
es
mov
xchg
inc
icebp
cmc
jo
stos
pop
rcl
pusha
inc
scas
push
fistpll
sub
aaa
jmp
call
nop
xchg
jge
out
lcall
aad
mov
push
inc
testl
xchg
lahf
xor
mov
mov
mov
or
hlt
or
pop
cmpl
xchg
les
push
dec
cmp
pop
jl
push
dec
loope
dec
dec
js
cmp
jmp
loop
lret
jnp
insl
andb
movsl
cmp
xor
sub
nop
mov
shrl
push
out
repnz
outsb
orb
xlat
insl
sub
adc
lods
mov
xchg
fistl
sub
mov
xchg
adc
mov
add
inc
pushf
ret
dec
pop
jg
icebp
pusha
js
or
mov
xorb
rolb
push
faddl
call
adcb
test
mov
mov
popa
nop
je
lock
int3
ficompl
jbe
popa
xchg
cmpb
adc
sti
testl
push
sarl
pushf
outsb
iret
imul
dec
add
sahf
dec
shlb
mov
les
mov
mov
mov
dec
shll
stos
mov
mov
sti
add
pop
and
sub
fildll
ffree
loope
xchg
fbstp
jp,pn
jmp
jae
push
mov
dec
hlt
test
js
scas
xchg
mov
mov
fs
lock
test
je
sbb
inc
pushf
sub
or
mov
ret
add
fstpl
pop
xchg
ljmp
test
insb
sub
and
aas
fidivl
xchg
js
arpl
lret
or
repz
mov
sti
and
jecxz
push
xchg
shl
mov
out
mov
or
loopne
in
outsl
mov
pushf
xor
xchg
add
xchg
loop
inc
jmp
test
popf
lea
in
or
mov
sbb
ret
fstpt
in
dec
xchg
adc
mov
jl
rorl
push
inc
into
ss
or
push
mov
inc
pop
fidivrs
cmc
or
adc
and
cmp
test
andb
cmp
arpl
xlat
repnz
or
mov
rorb
pushf
mov
test
insl
xor
loop
lcall
jecxz
repz
dec
jge
test
and
scas
xchg
adc
repnz
fucomi
imul
dec
inc
daa
testb
adcb
or
popf
and
mov
mov
wbinvd
sub
shrl
dec
and
jle
add
rcr
adc
lods
mov
xchg
dec
insl
in
push
lahf
cmc
jmp
lock
dec
mov
lods
ja
mov
rcrb
sbb
pop
xchg
push
loopne
dec
pushl
pop
xchg
push
sahf
scas
sub
mov
icebp
aad
aam
sub
ret
mov
fs
xchg
adc
push
sbb
xor
pop
dec
in
adc
jnp
dec
add
sub
push
sbb
mov
push
and
stc
adc
and
decl
mov
lds
add
bound
or
or
xchg
into
test
int3
sub
shrb
out
and
frstor
sbb
cmp
ret
mov
imul
mov
sbb
lock
add
cmp
xchg
cwtl
push
sahf
addb
xchg
mov
cli
ret
out
add
leave
add
or
add
mov
fucomip
std
outsl
mov
jb
and
lahf
adc
mov
push
mov
jl
andl
not
jb
in
cwtl
leave
xor
cmc
dec
xchg
mov
mov
cwtl
dec
dec
fbld
jp
mov
mov
lds
les
icebp
xor
insb
movsb
pop
xor
divb
mov
mov
negb
mov
inc
mov
and
jae
stos
push
movsb
push
outsb
imul
xchg
je
sbb
data16
mov
mov
push
and
mov
fnsave
push
jnp
mov
lods
mov
stc
test
out
call
or
in
or
in
in
or
hlt
stos
lods
dec
jns
cmp
xor
scas
xchg
imul
push
mov
out
dec
mov
mov
add
or
out
lcall
dec
xor
in
pusha
fisttpl
add
cmp
pop
dec
sub
sbb
orb
mov
xchg
sbb
jge
xor
bnd
add
nop
or
out
hlt
stos
clc
mov
scas
inc
dec
xor
loop
fcompl
fs
negl
inc
les
inc
push
std
data16
pop
jl
int
jmp
test
inc
shll
cmp
mov
inc
cs
mov
jbe
or
ror
rcrb
sbb
sbb
addr16
dec
popf
add
insl
dec
jb
clc
jbe
rorl
mov
js
int3
fisubrl
shl
cmpsl
test
aad
gs
ss
shll
inc
ja
fdivs
mov
adcl
pop
inc
repnz
jecxz
lock
sbb
cmp
pop
repz
pop
push
add
or
out
loopne
push
sub
or
jne
pop
push
leave
test
ficoms
xlat
loopne
cmpsb
test
fs
enter
lcall
cld
enter
cld
pop
push
test
js
test
shlb
test
je
ja
popl
mov
or
mov
or
cltd
cmpb
xor
imul
xorb
daa
jge
cmpsb
push
push
mov
inc
adc
adc
mov
mov
mov
adc
mov
push
push
inc
push
stos
dec
lock
fcmovnbe
jmp
or
stos
adc
sarl
loope
xchg
jle
mov
and
sub
outsl
mov
mov
sub
aaa
movsl
subb
in
faddp
cmp
mov
fadds
xchg
sti
lock
dec
out
ljmp
leave
dec
jnp
xchg
enter
pushf
aaa
add
jle
mov
addr16
inc
xchg
les
into
movsb
sub
dec
xor
xchg
in
test
pushf
push
out
pop
test
rcll
std
cmp
cmp
cltd
iret
mov
add
sub
es
fisubrl
and
cld
cltd
cmp
mulb
rolb
repz
imul
lea
add
fists
sub
pop
add
ret
in
psubusb
sbb
cmpsb
mov
pop
mov
mov
push
mov
call
mov
enter
sub
cmpsb
faddl
lds
cld
sub
incb
rcrb
cld
cmpsb
xor
fmuls
and
ficomps
mov
mov
test
jge
push
fsubl
ds
mov
push
sub
aam
cmpsb
insl
sbb
gs
pop
lcall
neg
stc
lret
xchg
popf
test
das
pop
push
sbb
es
cld
and
sbb
cmp
jecxz
sbb
mov
xorl
fwait
andl
pop
add
stos
pop
les
and
inc
test
enter
mov
cmpsb
aad
int3
adc
push
outsb
inc
jmp
lods
sub
xchg
pop
enter
xor
inc
js
ret
mov
or
pop
scas
es
xchg
out
pop
push
or
pop
add
cmp
xchg
pop
subl
mov
mov
push
aad
fwait
pop
mov
and
orb
xor
dec
xchg
pop
mov
mov
pushf
in
aad
xchg
in
insl
lcall
xchg
mov
pop
dec
cmpsl
wbinvd
pop
testl
cmp
lret
inc
outsl
int3
cmc
sbb
lods
sahf
pop
or
jns
loopne
push
push
ds
std
std
adcb
xor
mov
addr16
stos
int3
push
mov
outsl
scas
adc
sbb
lds
stos
jno
jne
push
xor
shll
push
bound
push
dec
mov
mov
jo
or
push
or
mov
sarl
xor
out
or
jp
int3
dec
inc
lods
shll
in
mov
cmp
popf
mov
adc
in
cmpsb
jp
xlat
cli
shll
xchg
adc
jnp
inc
push
xlat
inc
sbb
and
stos
lods
das
leave
dec
pop
cmp
xchg
or
mov
pop
add
shl
jp
and
cmc
add
lock
cwtl
push
cwtl
sbbb
shlb
xlat
cmp
dec
mov
adc
push
cli
jmp
xor
push
jb
and
add
hlt
dec
loopne
xchg
les
inc
mov
cmp
add
cwtl
in
aam
sbb
mov
or
adc
sbb
or
imul
push
in
nop
dec
mov
out
xchg
pop
mov
xor
push
pop
mov
add
adc
outsl
adc
sub
and
adc
js
aaa
jmp
jno
ret
dec
pop
cmpsl
lods
shrb
dec
aaa
bound
ljmp
push
daa
xchg
dec
dec
xchg
mov
mull
and
cltd
xor
dec
dec
roll
and
and
pushf
cli
jmp
dec
mov
and
int
sbbb
add
sbb
lods
cltd
es
cs
lcall
fwait
pop
imul
adc
push
pop
pop
push
mov
sub
icebp
adc
dec
pop
sahf
or
mov
inc
je
leave
call
mov
ret
lahf
shlb
testb
sbb
jle
addl
int
push
xchg
inc
insb
ja
xchg
rorl
pushf
andl
loop
sbb
popl
shll
xlat
andps
jl
sbb
push
repz
ds
sbb
add
pop
push
add
pop
cmc
roll
ja
rorb
mov
mov
filds
stc
and
int3
out
or
sub
stos
pop
outsb
mov
and
lahf
mov
clc
cmpsl
call
test
xor
lret
or
sub
push
push
mov
jns
adc
outsb
push
addr16
icebp
push
jg
sub
stc
test
mov
push
dec
push
fists
mov
inc
dec
xchg
stos
sbb
jbe
faddl
adc
aaa
sub
fiadds
or
adc
lcall
imul
aad
push
mov
out
test
xchg
aas
ja
cmp
fucomi
pop
cmp
xor
pop
jge
xchg
outsb
inc
or
ss
xor
rcl
mov
in
fucomp
out
je
mov
push
push
icebp
fs
mov
xchg
cmp
cmp
jp
lahf
xchg
outsl
push
int3
aad
lods
jnp
call
jae
xchg
into
adc
adc
xchg
lret
push
sbb
mov
mov
scas
incl
pop
test
add
sbb
sub
inc
aas
inc
mov
movsb
in
enter
adc
cmp
adc
jae
testb
insl
mov
inc
dec
dec
mov
adc
adc
pop
into
or
adc
mov
insb
jno
add
and
xor
xchg
cli
add
push
mov
insl
cmpsl
sbb
xlat
inc
fwait
das
loopne
mov
fwait
mov
mov
pop
div
jp
inc
xor
mov
cwtl
subb
and
mov
mov
add
rcrl
decl
and
pop
loope
mov
fcmovnb
sub
xor
xchg
inc
rcl
and
mov
jo
ret
cs
xor
mov
aas
dec
fisubl
imul
jmp
cli
mov
pop
or
adc
xor
insl
jp
xchg
jnp
push
repz
cmpl
loop
inc
call
push
xchg
jno
xchg
jno
mov
lods
mov
cmp
inc
aad
inc
jo
test
add
sbb
mov
in
lret
mov
movsl
pop
hlt
and
les
gs
je
add
sub
jecxz
movsb
aad
add
or
aaa
xchg
xchg
mov
inc
xor
lods
jne
fdivr
icebp
push
or
ja
in
sbb
cmp
xchg
mov
push
sbb
or
fdivs
outsl
into
cmp
arpl
insl
cmp
cmp
mov
fldl
push
and
cmp
xor
test
adc
push
outsb
fdivrs
fcoms
cmp
insl
and
cmp
push
gs
jae
loopne
pushw
or
insl
pop
add
js
das
jns
mov
test
insb
inc
aaa
sub
fcompl
dec
inc
pop
jae
jge
roll
or
cmpsb
mov
cs
push
mov
pushf
dec
sti
pusha
sub
mov
pushf
test
inc
jmp
mov
ret
cmp
add
sbbl
movsb
out
push
dec
xchg
in
add
xchg
push
dec
adc
jle
dec
adc
icebp
pop
dec
jp
mov
adc
aam
adc
xor
dec
lcall
mov
push
lods
push
popf
ljmp
sub
lea
lret
fisubrs
clc
inc
ljmp
push
pop
aad
ds
leave
repnz
jmp
sub
adcb
aad
cs
inc
or
xchg
scas
or
or
xchg
rcrb
lret
push
dec
loopne
movsl
add
mov
push
jp
xchg
xchg
add
mov
stc
bound
xor
int
sub
cmp
dec
add
ljmp
and
mov
or
test
xor
aad
aas
cmp
imull
movsl
adc
add
add
xor
pop
or
mov
or
or
arpl
call
pop
mov
push
insb
out
repz
inc
icebp
bound
movsb
mov
repnz
test
test
and
sub
je
pushf
jbe
cmpb
sbb
sbb
push
mov
ss
ret
inc
std
shlb
jecxz
outsl
inc
adc
adc
testl
jmp
mov
jo
mov
xchg
jnp
movb
fucomi
xor
add
inc
pop
mov
mov
jo
cmp
insb
pop
dec
mov
cmc
popa
das
dec
nop
jbe
int3
mov
push
aad
or
popf
mov
lock
lods
xchg
in
inc
bound
push
adcb
rep
mov
jo
shl
pop
stos
lret
sub
cli
sahf
fwait
sahf
adc
inc
and
mov
cmc
xchg
test
lods
cmp
mov
imul
ret
push
push
sbb
jg
scas
cli
stos
jne
out
cs
fldcw
xchg
loope
imul
add
add
mov
jp
dec
dec
sti
rorl
imul
inc
sub
push
mov
xchg
out
popf
js
or
bound
scas
jae
lods
mov
dec
inc
sub
and
enter
mov
or
pop
shrl
xchg
xchg
or
push
aas
cmp
cmpsl
rep
sbb
cltd
sub
jae
ja
loop
js
in
mov
sbb
in
push
fs
or
add
xchg
or
call
shlb
fs
xchg
std
mov
ja
cmp
sub
pop
ja
daa
test
dec
dec
xlat
adc
sbb
cmp
and
mov
loop
lret
fsubrs
into
or
fsubl
xchg
in
int3
push
test
jecxz
ret
push
cltd
adc
xchg
push
xor
sub
lahf
pop
push
add
rclb
cmpl
gs
xor
jno
xor
pop
fs
cmpsb
xor
sub
lods
push
aas
data16
arpl
inc
sub
xchg
ja
push
test
outsl
ffreep
lea
movsl
rcrl
sub
sti
out
or
sub
pop
pop
sub
push
jb
mov
xchg
int3
cmp
xlat
fld
push
std
lret
lods
cwtl
test
rorb
bnd
mov
inc
add
mov
das
cmpsl
jbe
xchg
cmpsb
pop
les
frstor
mov
lods
mov
aam
lock
pop
cmp
pushf
mov
cli
mov
cs
test
pop
push
int
or
sbb
lahf
ret
sub
mov
sub
ds
pop
jmp
iret
cmpsb
lret
jmp
add
adc
jns
lds
dec
outsl
push
mov
jge
and
mov
cld
mov
pop
add
pop
and
daa
cld
mov
lds
out
mov
ss
out
cmpsl
shld
or
pop
lcall
xor
mov
xchg
dec
fstpt
cmp
or
xor
cmp
fucom
enter
clc
mov
pushf
cmp
sub
mov
nop
stos
pop
or
pop
pop
enter
fmuls
mov
in
loop
mov
test
xchg
push
sbb
cltd
out
test
shrb
js
push
cs
sbb
inc
repnz
adcl
stc
inc
sbb
fidivl
mov
lods
lea
nop
lahf
test
xor
xchg
clc
enter
int
sub
mov
mov
loopne
cmpsb
aas
mov
movsb
scas
out
adc
sub
inc
pushw
jg
into
stos
loop
cld
pop
mov
das
loopne
enter
movsl
sub
xor
out
in
das
jnp
rcrb
dec
fisubs
pop
fsubp
ds
pop
ljmp
push
adc
iret
in
sub
dec
ljmp
or
lahf
mov
enter
mov
and
test
pop
test
cmp
cmp
movl
pop
repnz
test
fldt
mov
mov
insb
scas
cltd
lcall
lret
leave
pop
cmpsl
jmp
or
movsb
ja
xchg
movsb
mov
decb
daa
stos
xchg
inc
inc
push
dec
lret
push
mov
push
leave
lret
jae
xor
stc
ds
mov
popa
aam
xor
ret
test
aas
ret
mov
push
pop
or
mov
fdiv
adcb
jmp
pusha
aam
negb
inc
std
inc
popf
bound
out
mov
pop
or
popa
mov
mov
std
xchg
push
mov
push
daa
ret
fs
inc
cli
rcrl
sub
pop
test
movsb
int
daa
sub
mov
mov
insl
mov
ficompl
aam
lret
std
pop
in
jg
cmpsb
jae
cmp
popf
xchg
jge
push
sub
daa
jecxz
sbb
inc
push
call
jno
cmp
test
xchg
scas
jne
in
xchg
and
xor
sub
jmp
rorl
pop
sub
pop
inc
enter
fwait
jmp
fwait
incl
jle
add
pusha
xor
in
xchg
push
aam
or
notb
mov
stos
cmp
call
shlb
xchg
mov
jge
stc
out
xchg
cmpsb
xor
sub
mov
jo
shll
sti
arpl
sub
lock
sub
pop
loop
push
cmpsl
cwtl
push
aas
mov
ret
into
xchg
cmp
das
pop
sbb
pushf
rclb
js
shrb
rcr
nop
ljmp
cmpsl
lods
jnp
imul
inc
je
daa
jle
loop
xchg
insl
into
lcall
mov
adcl
cmp
out
sub
xor
dec
pop
cmp
rcl
neg
fsubrl
aam
out
aaa
pop
sbb
jnp
dec
add
mov
movsl
adc
lods
in
movsl
enter
push
inc
mov
or
movsb
repz
add
xor
lods
mov
jo
into
stos
mov
les
adc
std
jno
sti
in
push
cmp
bnd
xchg
add
cmc
dec
and
andl
xchg
movsl
inc
dec
fisubrs
adc
dec
add
incb
xlat
leave
push
bound
lret
cmp
mov
mov
stos
hlt
mov
scas
pop
cmpsl
add
data16
dec
rcr
inc
inc
or
sub
lahf
fsubrl
xchg
jbe
or
outsl
in
js
shll
cmp
bound
int3
iret
pop
shrl
add
sbb
pusha
cmp
mov
xchg
das
push
cs
push
add
enter
fldl
jbe
adc
pop
cld
jecxz
dec
fs
jns
jle
lcall
pop
xchg
addr16
call
xchg
and
dec
fadds
mov
in
and
stos
cltd
mov
test
mov
rol
inc
enter
insl
movsb
mov
clc
or
roll
test
aad
xchg
pop
shl
int3
into
in
test
dec
sbbl
dec
sbb
cmpl
pop
sbb
push
gs
ffree
ret
mov
and
xor
imul
push
jmp
sub
andb
in
sbb
jmp
and
jnp
push
lock
dec
pusha
or
shrb
sbb
cwtl
pop
outsb
xlat
int
sbb
ret
jno
inc
test
leave
and
call
fs
sbbl
cmp
lcall
in
enter
or
adc
fbstp
test
mov
aad
jmp
popl
es
fcoml
xor
dec
fsubrl
rorb
sub
sub
pop
jge
fcmovnu
ror
mov
xor
jmp
xchg
mov
mov
sbb
adc
fcomps
adc
cmp
out
mov
inc
shl
dec
cmp
cli
xchg
out
fildll
jno
pop
mov
xlat
or
lcall
fidivrl
mov
insl
push
push
mov
sub
or
xor
fmull
aaa
pop
cltd
and
movl
dec
push
aas
push
adc
xchg
and
or
xchg
inc
icebp
subl
sub
test
xlat
jae
shrl
mov
ret
insb
fs
jecxz
loopne
adc
jnp
jae
into
jmp
cli
addr16
sub
addr16
sbb
and
inc
ror
mov
cs
or
mov
and
or
addr16
push
testl
ficoml
xor
mov
or
inc
cli
add
xchg
hlt
dec
repz
add
popa
dec
cltd
xor
pop
insb
mov
or
pop
mov
fidivrs
ss
xchg
dec
dec
jle
inc
jmp
cmpsl
xor
jbe
loopne
lret
fs
cld
test
pushf
xbegin
lods
dec
decb
xchg
cli
mull
dec
shrl
mov
testb
imul
adc
aas
jmp
int
imul
aas
in
or
dec
dec
clc
adc
xchg
fildl
and
enter
shlb
test
sub
in
xlat
insb
es
or
es
jecxz
in
repnz
rclb
add
push
mov
lods
call
shrl
loope
mov
pop
data16
mov
stc
dec
fidivrl
or
movsl
and
rcr
in
dec
pop
vminss
aaa
loop
fs
sbb
and
int3
xchg
jle
and
sub
xchg
daa
aam
aad
dec
mov
fs
jg
add
pusha
repz
inc
sub
mov
push
out
xchg
jg
movsl
enter
add
and
jno
add
popf
shlb
pushf
pop
mov
sub
imul
push
iret
shl
fiadds
outsl
in
outsb
je
cmp
xor
pop
fmul
jecxz
lret
mov
mov
push
je
test
jo
leave
add
fcmove
lds
mov
dec
mov
lea
mov
xor
pop
add
mov
jp
dec
jne
push
imul
or
mov
xchg
gs
jg
test
mov
push
mov
cmpl
add
daa
cld
cmp
mov
cld
sub
lcall
lea
cwtl
adc
jns
and
das
in
les
in
sbb
xor
jno
inc
jb
lcall
cld
jle
shl
add
aad
push
mov
sbb
js
js
inc
in
mov
and
cmp
add
mov
rcr
and
shl
jnp
add
push
rclb
xor
or
pushl
mov
nop
xor
nop
jge
lods
incb
xchg
andl
leave
ffreep
jecxz
adc
fwait
sahf
push
cmp
mov
ds
push
push
fucompp
test
push
insb
fwait
movsl
xchg
lret
pop
push
adc
add
movsl
call
jnp
fwait
mov
mov
lock
jmp
dec
cmp
pop
pop
xchg
push
js
les
adc
les
sbb
shrb
mov
int
cmpsb
push
pop
mov
cmp
sub
push
add
in
pushf
xlat
jae
aam
cmp
or
repnz
cmpsb
cmp
mov
jne
add
cmpsb
movsb
mov
cmpb
cmpsl
dec
adc
cwtl
jne
lea
and
mov
or
sbb
pop
inc
inc
arpl
adc
or
insb
fs
movl
xchg
push
mov
pop
out
push
mov
xor
imul
mov
arpl
add
iret
mov
movsl
mov
enter
mov
in
inc
push
fmull
xbegin
data16
fs
mov
pushl
mov
data16
pop
stos
xchg
sbb
lret
jmp
es
push
mov
pop
outsb
and
ja
pop
ret
insl
cmp
inc
test
nop
mov
outsl
mov
div
mov
lds
es
stc
adc
inc
scas
xor
sti
ljmp
cs
rorb
mov
test
jl
xchg
sbb
pop
icebp
push
adc
mov
stos
add
and
sub
sub
jmp
cmpsb
mov
mov
fcoms
sbb
mov
jne
fs
or
les
mov
sbb
cmpsb
cmp
mull
pop
shl
les
mov
pop
xchg
pop
mov
shlb
hlt
movsl
mov
fs
push
loop
nop
scas
jne
pop
and
test
popa
movsb
aad
out
ja
fs
dec
outsb
cmp
lea
pop
xor
out
inc
in
lret
dec
loopne
scas
dec
jb
push
fcom
imul
fdivrs
ret
sbb
mov
push
ds
jecxz
arpl
in
cli
rorl
insb
add
pop
sbb
sbb
sti
clc
adc
leave
adc
inc
into
pusha
push
mov
xchg
iret
ja
and
imul
push
and
enterw
lods
jle
hlt
icebp
lret
fs
sbb
rclb
pop
mov
pop
add
cmp
cmc
fcoms
lea
mov
fidivrs
mov
sbb
mov
pop
dec
and
xlat
or
mov
dec
inc
push
out
push
dec
push
adc
sbb
inc
sbb
sti
stos
mov
jle,pt
hlt
ja
mov
jecxz
push
rclb
or
rcrb
cmpsl
rcrl
loope
mul
mov
into
nop
or
mov
addb
dec
cmp
inc
cmp
filds
xor
pop
dec
notl
clc
in
sbb
mov
outsb
push
cmpsl
scas
dec
loope
cmp
std
int
adc
add
mov
loop
aaa
clc
rol
cmova
aad
jle
jae
push
fisttpl
out
lret
adc
xchg
sti
leave
sti
mov
xor
pop
daa
hlt
sti
ret
or
adc
decb
and
mov
das
fsubs
aad
dec
outsb
lock
fs
inc
dec
out
push
jmp
mov
sar
mov
inc
scas
dec
jbe
mul
ja
jge
out
push
cmp
outsb
cld
push
aad
repnz
xchg
xor
cmp
int3
test
jmp
aad
insb
push
cltd
fs
mov
cmpsl
mov
lret
stos
sbb
jbe
arpl
sbb
and
fidivl
call
aaa
push
fnstsw
jnp
mov
test
jp
cmp
test
xlat
or
mov
mov
inc
lahf
sub
das
cmp
scas
lcall
pushf
in
push
mov
jb
cmpsb
mov
clc
pop
scas
add
in
hlt
int3
and
pop
add
mov
xor
jg
inc
insb
lea
pop
inc
sub
jg
sub
and
shrb
sbb
cmp
ss
loope
push
add
xchg
mov
popa
clc
outsl
jb
daa
cmpsl
sub
push
daa
shl
sub
lcall
pop
movsl
aas
es
dec
mov
imul
push
jmp
jp
addr16
aad
mov
out
in
sbb
pop
jne
stc
shlb
dec
dec
aam
xor
ret
lret
aaa
xor
hlt
cltd
fmul
jle
or
or
pusha
aam
jmp
add
sbbl
jg
dec
repz
dec
aas
out
xchg
mov
add
and
dec
jo
arpl
popf
inc
rolb
mov
pop
cwtl
int3
or
dec
dec
loope
push
push
or
xchg
bound
shll
xchg
repnz
arpl
jne
rcrl
popa
jnp
idiv
push
cs
lret
cld
or
outsb
arpl
lock
fistpll
cs
xor
pop
stos
jns
adc
arpl
and
pop
sbb
xchg
syscall
test
xor
movsl
pop
sbb
mov
insl
lods
stos
jl
cld
sahf
sbb
sub
popf
fstpl
sub
mov
xor
mov
in
addb
cmp
inc
push
xchg
icebp
jg
push
lds
pop
jg
cmp
add
mov
push
test
mov
bound
stos
addb
mov
pop
sbb
or
out
movsl
not
idivl
popa
movb
sbb
sub
int3
ds
mov
cli
xchg
mov
push
aam
sbb
adc
ss
mov
pop
inc
mov
mov
filds
pop
jp
int3
fidivrl
ja
ljmp
sub
les
stos
mov
lods
xchg
cmpsl
repnz
push
sub
lret
inc
add
in
jae
jb
sub
in
pop
sub
add
push
stos
xchg
dec
xchg
mov
cmp
loope
fmull
ljmp
cmp
mov
fisubrs
add
mov
outsl
jmp
pop
mov
jbe
and
loopne
sbb
mov
ret
jge
add
scas
jo
movsl
out
or
sub
loopne
cmp
mov
pop
cmpsb
movsb
sub
xchg
add
dec
cmp
daa
add
lahf
jns
das
imul
and
mov
movsl
xchg
in
inc
aad
imul
xchg
lock
cmc
arpl
push
add
push
pop
jg
cmp
shlb
dec
jno
jnp
lea
out
cmpsb
pop
movsb
shll
add
sub
lds
mov
lock
js
pop
jge
sti
clc
fs
bound
dec
pop
push
hlt
iret
sbb
out
mov
cmpl
xchg
dec
jo
xchg
fldt
out
jp
loope
push
sub
jecxz
or
insb
sbb
adc
popa
pop
faddl
sub
scas
call
push
push
push
mov
jnp
popa
daa
sub
lahf
xchg
fisubs
ret
lret
sbbb
int
and
cli
sbb
xchg
addr16
call
pop
test
mov
jne
fstpl
cmp
push
clts
imul
les
xor
mov
pop
inc
push
lcall
mov
shrd
loope
lods
std
out
xchg
pop
mov
cmp
sbb
xor
mov
sub
int3
lcall
jmp
mov
mov
push
stos
frstor
jp
mov
and
out
pushf
mov
dec
mov
jecxz
ret
clc
ss
cli
stos
push
mov
mov
shlb
push
push
mov
mov
pop
les
xchg
sbb
in
ret
outsb
pop
test
inc
outsl
push
sbb
inc
add
and
add
mov
sub
mov
sbb
ret
xor
sub
mov
repz
jno
adc
lea
xchg
sahf
sbb
xchg
and
inc
loop
push
xorb
xchg
loope
pushf
arpl
inc
or
fisttpl
xor
adc
es
push
jb
out
dec
xor
imul
pop
or
jp
push
add
stc
fisttps
cwtl
sub
sarl
aam
int
dec
cmp
push
out
fidivl
mov
xor
xor
nop
cmp
mov
inc
lret
adc
pop
in
sub
inc
mov
dec
or
or
pop
ja
repnz
inc
test
test
in
xchg
sub
arpl
dec
push
sbb
nop
imul
test
shl
mov
test
jae
nop
dec
sub
inc
ret
rcrb
das
dec
xorl
imul
jl
loop
out
dec
movsl
xor
fcmovnb
aad
pop
ja
add
repz
cld
or
in
jle
and
pop
push
mov
rcl
aas
rclb
inc
lods
loope
mov
and
outsb
push
adc
xchg
xor
sbb
std
test
xor
cmpsb
lds
jae
add
adc
xchg
dec
add
push
pop
cli
mov
push
sub
sbb
inc
fwait
mov
ret
cmp
push
fsubrl
sub
dec
rorl
adc
mov
dec
aaa
dec
in
fucom
add
rolb
xchg
sarl
ds
jb
ja
jp
test
xchg
jns
popf
pop
lods
push
rorl
inc
xchg
xchg
xor
jno
leave
push
jmp
pushf
aas
gs
outsb
stos
adc
pop
into
adc
out
rcrl
cmp
xchg
lds
inc
dec
outsb
shrb
inc
sub
push
sub
gs
jle
pop
xor
cmp
xor
xchg
mov
cmpsl
and
push
xchg
in
xor
xchg
cmp
xorl
filds
std
cmp
ficomps
lahf
inc
or
iret
dec
cltd
je
cmp
sbb
jecxz
jle
loope
popf
inc
or
movsb
rorl
fidivrs
fwait
mov
mov
jnp
aaa
movsl
dec
inc
mov
pop
jns
lods
push
ds
lahf
mov
and
or
mov
scas
inc
stos
push
cmp
or
cmpl
xor
add
ret
lret
mov
out
les
movsl
loope
repz
mov
std
fcomi
cld
mov
sbb
xor
sahf
adc
fstps
xor
pop
mov
lock
dec
lahf
xchg
xor
adc
pop
mov
push
jb
movb
xor
aaa
jne
mov
xchg
ss
iret
dec
dec
or
mov
lcall
inc
add
mov
enter
xor
andps
add
xchg
ret
jns
push
mov
or
xchg
inc
notl
dec
dec
gs
push
int
push
fcoml
inc
pop
mov
je
pop
mov
push
andb
sbb
pop
or
inc
push
outsl
outsl
xchg
xor
das
and
or
xor
sub
sub
xor
xchg
and
mov
xchg
or
mov
imul
jbe
jb
decb
push
sbb
rorl
outsl
ds
jg
dec
sub
lahf
sbb
jne
jns
mov
push
xchg
lea
scas
mov
mov
adc
in
or
out
movsb
jo
pop
inc
mov
dec
dec
sub
xchg
and
pop
cmp
ss
sahf
inc
cmp
sbb
adcb
add
aas
xchg
xchg
add
mov
clc
cmp
xchg
aaa
int3
pop
inc
jle
xchg
xchg
inc
out
xor
push
ret
das
adc
mov
sub
sbb
and
xor
pop
loope
loope
adc
jecxz
sub
push
cmp
xor
sbb
imul
sbb
aaa
in
shr
rcrb
inc
aas
mov
inc
and
popa
lods
lret
add
push
pop
mov
dec
sbb
addl
movsl
subl
addb
xchg
mov
add
jp
or
mov
sub
sub
fiaddl
pop
mov
imul
mov
cmp
bound
sbb
in
clc
sbb
mov
mov
popf
cwtl
iret
ds
jb
cmp
sbb
dec
imul
jmp
cmpsl
pop
pop
popa
mov
cmp
jb
loope
push
xor
push
lcall
lods
push
xlat
fildl
mov
dec
sub
in
js
iret
mov
fs
inc
daa
inc
pop
inc
cmp
push
out
loope
adc
cmp
cmpsl
jae
push
sbb
frstor
jle
xlat
lods
in
jg
push
test
pop
sarl
jo
xlat
clc
out
fisubl
lods
mov
enter
mov
pushf
aaa
test
sbbl
xchg
sub
pop
mov
lahf
fidivs
xchg
pop
jp
jmp
lret
repz
imull
pop
push
push
and
or
lret
stos
dec
sahf
fcompl
sbb
push
or
in
mov
jp
dec
or
add
and
xor
aad
push
ret
dec
inc
fcoms
push
cmp
xor
or
repnz
pop
cmpsb
orl
popa
xchg
push
add
inc
nop
and
cmp
fstps
and
ret
cs
enter
add
push
jmp
cmp
dec
fistpl
cmp
push
lds
sbb
test
into
inc
sub
dec
shl
mov
sbb
push
sub
scas
in
push
inc
lds
cmpsl
jp
dec
or
inc
push
aas
push
add
adc
out
and
aaa
sub
pop
xor
push
lahf
jne
and
dec
frstor
movd
bound
mov
mov
inc
and
mov
sarl
popa
mov
rorb
inc
aam
dec
cmp
mov
push
nop
fbstp
rorb
lock
dec
jmp
cltd
je
xchg
sub
cld
add
mov
adc
adc
in
jle
repnz
lods
icebp
aam
add
dec
inc
push
push
cmp
test
jle
stos
adc
pop
inc
rcll
xlat
sub
test
sbb
popf
lods
jmp
mov
stos
mov
pop
add
mov
popf
mov
mov
push
mov
push
pop
xor
aaa
cmpsl
mov
faddp
push
pusha
icebp
mov
sub
fisttpll
cld
fmull
cmp
adc
mov
clc
repnz
cld
pop
xor
push
push
mov
cmp
sub
out
in
fs
mov
jmp
imul
or
cmp
daa
shrl
in
lcall
ljmp
loop
mov
gs
clc
mov
pop
arpl
jl
enter
xchg
mov
fsub
push
sub
leave
int3
push
or
div
mov
add
arpl
mov
push
in
dec
mov
mov
push
test
or
xor
pop
scas
or
loope
lret
rolb
aam
push
dec
mov
and
sub
mov
out
mov
popf
xor
sub
ffreep
lds
mov
push
sub
lea
sbb
popa
sbb
dec
fsubrs
int3
cs
pop
mov
cld
fdivrp
jmp
and
mov
repnz
sbb
cltd
xor
and
pop
xchg
cmc
lea
and
xchg
incl
sub
and
aad
gs
stos
pop
sbb
lods
dec
aaa
dec
mov
mov
mov
lock
hlt
pop
imul
imul
cmp
inc
sub
cli
sub
or
jae
adc
in
lds
lods
jbe
pushf
sbb
jb
pop
sub
dec
insb
dec
sbb
dec
ror
jge
movsl
rclb
mov
inc
push
idivb
pop
dec
inc
setge
mov
push
mov
testb
xor
xchg
clc
inc
adc
clc
das
je
and
push
sarl
mov
cld
bound
shll
and
icebp
loop
imull
push
pop
adc
rcrb
mov
sbbl
imul
mov
xlat
mov
fwait
test
jo
clc
jns
daa
lods
push
inc
in
repz
fbstp
pop
adc
sub
sbb
xchg
jne
xchg
cmp
mov
push
ret
ret
aad
test
jne
test
sub
add
sti
push
pcmpgtw
mov
jge
pop
add
and
or
and
dec
mov
sbb
add
mov
int3
dec
pop
int3
dec
lock
cmpsl
fwait
aam
sub
mov
movsb
cmpsl
and
popl
neg
mov
xor
mov
xchg
jmp
cmp
mov
fucomp
push
stos
decb
repnz
jae
add
loope
test
cmp
lods
pop
sahf
test
pop
loopne
mov
and
imul
les
sbb
sub
add
mov
enter
mov
push
xor
test
dec
dec
fs
lret
mov
or
stos
mov
mov
mov
lds
rcr
sub
jmp
sbb
jns
dec
dec
dec
rorb
sub
sbb
fnstcw
inc
cltd
shlb
and
xchg
adc
sahf
jae
jns
cmpsl
mov
add
sub
jns
aas
push
pop
push
mov
ds
imul
pop
sub
fldt
in
out
stos
fcomps
pop
adc
repnz
pop
loopne
divl
xor
xchg
mov
jnp
repz
push
fstl
out
cmp
cltd
cmp
add
push
dec
mov
and
mov
lock
dec
pop
repz
mov
outsb
test
aas
pop
rcr
push
jne
pop
or
sahf
clc
lds
mov
fadds
iret
int3
dec
push
xor
test
addr16
fsubrl
ja
movsl
and
cmp
sbb
cmpsl
cmpsl
rcl
inc
seto
mov
push
cld
mov
pop
pusha
jb
bound
jmp
mulb
jge
out
or
ljmp
scas
arpl
movsl
push
imul
imul
or
shlb
bound
je
add
inc
leave
cli
cltd
xchg
pop
sub
pop
mov
cltd
aaa
push
pop
clc
jecxz
add
add
xor
imul
outsl
cmp
adc
cmpsl
jl
or
mov
in
inc
cmp
aad
mov
pop
push
xchg
shrb
test
in
sub
pop
popa
mov
data16
xor
lret
sarb
es
hlt
add
lret
enter
sbb
test
lret
mov
jmp
inc
jb
and
out
outsl
jle
clc
pop
push
jne
das
stc
and
int3
pop
cmp
add
cwtl
and
cmpsb
push
push
test
in
popa
adc
aam
sub
adc
in
push
test
sub
loopne
std
ret
out
mov
push
adc
fwait
sahf
in
mov
or
movsb
pop
jb
fwait
xchg
mov
imul
and
cld
mov
aas
pop
out
int3
cli
dec
std
jecxz
sub
ss
mov
mov
xchg
outsb
cld
repz
movsl
pop
push
adc
repz
loope
xchg
enter
and
pushw
pop
loope
jnp
sub
jo
xchg
subb
push
mov
fs
push
lret
outsb
push
adc
cmp
lods
movsl
lock
inc
inc
xchg
mov
jb
jp
sub
push
sbb
rcl
ret
pop
xor
arpl
sub
mov
cmpsb
loope
enter
add
idivb
sbb
js
adc
fwait
sbbl
xlat
mov
dec
pop
dec
pusha
sub
inc
fldenv
cli
stos
iret
js
pop
xchg
nop
dec
sbb
stos
mov
dec
sub
pop
mov
cmp
xchg
add
shll
test
das
mov
aas
push
stc
stos
shlb
and
fisttpll
cmpb
cwtl
aaa
aas
push
imul
mov
jo,pn
fnsave
xchg
add
adc
and
fisubl
aaa
add
ljmp
or
xor
xlat
arpl
mov
xlat
lret
daa
jo
xor
call
push
add
cmp
xor
les
sbb
sar
sub
mov
push
and
push
jno
dec
and
xor
mov
mov
mov
mov
cmpsb
jg
and
mov
pop
xchg
inc
adc
lret
lea
cmp
push
ds
cmp
inc
sarb
loope
xchg
int3
mov
insl
mov
repnz
inc
cmpsb
gs
inc
fldl
mov
lock
pop
bound
cmp
dec
dec
lds
push
push
bound
and
mov
push
jno
fs
dec
aas
add
divl
addr16
xchg
sbb
sbb
enter
clc
ljmp
jp
fwait
dec
sarb
dec
orb
test
mov
pop
mov
mov
testb
and
adc
add
xor
sub
mov
push
jmp
sbb
les
test
pop
out
ljmp
cmp
dec
cld
inc
mov
jle
lcall
push
std
stc
bound
and
dec
adc
mov
add
fiadds
movsb
dec
and
insb
adc
cmpb
push
pop
pusha
cli
mov
inc
out
sbbb
iret
sub
shlb
test
or
das
popa
loop
popf
nop
idivb
test
adc
jnp
mov
fdivl
leave
in
js
add
or
aaa
movsb
pop
sub
das
xchg
sub
mov
call
jecxz
nop
sahf
push
jmp
das
dec
imul
insb
pop
adc
push
push
xchg
jge
cmp
mov
add
scas
inc
mov
or
imull
aam
shll
addb
cmp
mov
inc
jmp
pop
lea
fstpl
mov
insl
pop
pop
jno
add
rclb
idivb
data16
or
cmpsb
xchg
cmpsl
jno
addb
cli
pop
in
mov
pop
push
cmovno
cmpl
ret
movsl
adc
sub
fwait
dec
roll
jl
xchg
lret
adc
in
jecxz
adc
jnp
or
enter
jle
xor
das
mov
das
daa
jl
push
hlt
dec
out
mov
rcrl
sbb
push
xchg
insl
shll
pop
xor
pop
aad
jae
pop
scas
sub
inc
dec
fcmovnu
push
fadds
shl
xor
shl
daa
outsb
adc
cmc
xchg
xlat
or
mov
dec
decb
cs
fidivrs
add
fiadds
jnp
fstpt
mov
pop
mov
rcll
jecxz
sub
mov
inc
push
add
icebp
mov
or
daa
jno
cltd
or
pop
in
aad
rcrl
hlt
and
cmpsl
test
mov
push
js
mov
push
movsl
and
mov
jo
in
sub
xor
or
lret
pop
jnp
loopne
cmp
out
xor
aad
rcr
adc
repnz
enter
hlt
or
outsl
lods
aad
mov
pop
or
aam
cmpsb
dec
lods
inc
dec
loopne
sbb
jl
pusha
mov
mov
mov
jnp
lcall
push
inc
push
jmp
insb
out
test
out
pop
mov
hlt
pop
mov
andb
mov
sarb
mov
mov
dec
lret
movsb
outsb
cmc
enter
std
lods
dec
aad
outsb
inc
cltd
movsb
shrb
aaa
dec
lock
dec
add
and
xchg
inc
xor
xchg
dec
jno
mov
rclb
std
loopne
jge
and
lods
iret
outsl
mov
addb
jge
jns
repnz
jo
or
dec
mov
imul
gs
mov
ljmp
cmpl
testb
bsr
mov
outsl
outsb
mov
jbe
arpl
xor
lahf
repz
scas
aas
jae
jl
mov
ljmp
adc
inc
ds
test
cmp
fiadds
sub
divl
xchg
loope
jmp
rclb
outsb
mov
movsb
aad
int
and
fistl
jge
jl
pop
jo
push
jno
and
ficoml
ficoms
mov
mov
push
stos
leave
xchg
out
pop
daa
loop
push
fwait
outsl
push
or
call
or
clc
mov
push
std
rolb
jb
shll
add
sub
in
sbb
das
dec
ret
icebp
mov
adc
jnp
sbb
mov
sbb
les
into
dec
sub
mov
popf
adc
or
imul
sub
pusha
cmp
sbb
int3
push
xor
pop
mov
inc
lret
push
xor
jg
mov
out
in
jbe
push
jmp
and
shll
testl
pop
xchg
lret
mov
mov
scas
pop
mov
mov
cmp
jmp
jp
pop
out
or
bound
movsb
mov
mov
jl
cld
mov
mov
and
ret
inc
pop
fisubrs
xchg
jnp
jo
and
fistpll
jge
pop
cmp
div
sub
xchg
add
das
loopne
sahf
sbb
jnp
cmp
xchg
dec
sbb
adc
mov
or
fildl
sub
xor
inc
ror
leave
sub
fstl
out
ror
imul
adc
outsl
insb
mov
inc
ret
and
jno
fcmovb
sub
fs
arpl
outsb
sub
mov
xchg
shr
mov
inc
mov
pop
fisttps
aaa
js
sub
dec
mov
pop
mov
mov
in
pop
sub
cmp
inc
cli
ds
jae
lahf
cmp
popf
mov
loop
dec
clc
mov
movsl
and
xchg
or
dec
mov
fldl
stos
dec
or
lahf
mov
or
jmp
sti
les
xor
mov
aad
cmpsl
push
outsl
cmp
pop
in
loope
jl
mov
in
mov
cmp
dec
ror
mov
xor
mov
aaa
addl
xchg
push
xchg
outsb
out
or
shr
arpl
mov
loopne
aad
xchg
dec
fldt
jns
sarb
in
add
xchg
mov
bound
cmp
mov
mov
aad
out
aas
mov
jae
pop
jns
and
outsb
push
mov
pop
dec
lahf
lret
in
push
sub
and
fistps
push
daa
into
inc
and
sbbb
das
int
pop
and
data16
scas
cltd
mov
mov
cmp
jno
aad
negl
xor
insl
cmp
pushf
pop
xlat
or
push
gs
mov
sbb
es
mov
mov
out
loope
pop
fnstcw
dec
pushf
sub
das
clc
push
dec
jbe
out
pop
outsb
mov
xor
imul
xchg
js
mov
mov
test
es
test
pop
xchg
xchg
xchg
mov
xor
or
dec
int3
jge
daa
sbb
std
into
jg
push
and
mov
sbb
mov
stos
push
in
adc
lahf
ret
add
insb
clc
sub
jae
or
out
ss
js
mov
fs
lret
cmp
sbb
leave
into
imul
fst
mov
push
iret
in
ds
cwtl
popa
inc
xor
lret
nop
pop
cld
sbb
mov
mov
out
dec
popf
rorl
add
stos
sbb
adc
ljmp
incb
mov
pushf
in
outsl
movsb
xchg
lods
push
jbe
lret
mov
push
cmp
call
out
mov
into
push
popf
xlat
clc
mov
xchg
rol
int3
adc
insl
xorb
jns
mov
pop
jmp
jne
mov
test
push
loop
aam
or
ss
les
mov
xor
nop
pop
sub
adc
pusha
movsb
jmp
jns
out
call
sahf
pop
aam
icebp
adc
mov
and
jecxz
add
addr16
xchg
sub
sub
inc
xchg
repz
mov
inc
jns
mov
subl
push
mov
cmp
inc
addl
fdivrs
sbb
test
mov
push
ljmp
scas
add
bound
or
aad
cs
push
pop
mov
sar
frstor
hlt
mov
bound
mov
sbb
add
jp
jl
lret
mov
mulb
mov
shl
movb
scas
repz
movl
fsts
stc
movb
lds
mov
out
hlt
test
stc
push
inc
mov
push
pushw
iret
xor
mov
and
dec
bound
scas
xor
or
in
aam
test
std
lret
or
pop
nop/reserved
inc
test
mov
or
jb
xchg
pop
mov
xchg
mov
xchg
xchg
je
xchg
cmc
push
sbbl
sti
jns
jge
sbb
mov
xchg
call
sbbl
mov
or
cmp
clc
push
inc
push
mov
pop
xlat
cs
push
jb
inc
in
mov
cmp
out
ret
shlb
pop
out
inc
dec
adc
rorl
mov
mov
cmpsl
or
sub
xchg
and
jl
pusha
sbb
mov
pop
mov
lods
das
push
pop
repz
lcallw
cmpsb
pop
sub
ss
ja
in
add
pop
pop
dec
sub
shrb
scas
lock
mov
addr16
push
sub
jge
repz
cld
addb
leave
add
fisubrl
outsb
xor
ss
jle
sub
add
roll
inc
and
outsl
scas
outsb
mov
iret
icebp
xchg
mov
mov
test
and
popf
adc
das
outsb
add
lea
iret
lahf
or
aad
testl
mov
jnp
xor
add
inc
cwtl
sub
and
adc
test
pop
mov
imulb
and
mov
inc
mov
lea
push
push
das
jecxz
mov
sbb
cmc
sub
add
xchg
dec
das
daa
nop
pusha
sbb
shlb
mov
mov
push
cmp
sbb
mov
cltd
arpl
mov
inc
sub
lcall
push
out
mov
cs
and
call
dec
pop
clc
mov
cmpsl
idivb
add
xchg
jg
syscall
push
or
test
xchg
inc
out
loopne
call
pop
xor
aas
shll
jb
jle
add
mov
jae
imul
and
mov
sbb
sbb
cmp
lock
cmp
aaa
dec
movq
or
mov
adc
imul
leave
push
int
fldl
and
xor
inc
lahf
cmp
or
ja
dec
and
in
rclb
adc
and
sbb
jg
fwait
ds
lret
cmp
sbb
or
in
sub
shlb
lret
es
dec
xchg
or
push
fdivp
xor
and
in
in
inc
cmpsl
mov
mov
push
xor
repnz
xchg
cmp
inc
nop
push
lret
repnz
jmp
mov
cwtl
rcrl
mov
pop
mov
dec
jmp
pop
push
mov
xchg
fldl
sbb
sti
mov
data16
and
xor
mov
shll
scas
stos
cmp
jno
decb
adc
sub
movsb
push
sub
icebp
scas
cmp
xor
test
in
fwait
stos
.byte
mov
dec
.byte
