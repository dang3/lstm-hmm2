subl
shld
and
or
cmpsb
imul
ffreep
test
fisttpll
inc
in
mov
clc
movl
jecxz
sbb
in
int
orl
xchg
cmp
xchg
inc
mov
sti
shll
add
scas
fdivrs
aam
mov
out
loop
mov
out
sub
mov
ljmp
pop
xchg
ja
fisttpll
fwait
imul
xchg
xor
mov
shl
jbe
insb
and
subb
adc
imul
out
pop
je
bound
add
dec
shl
mov
jae
dec
cmp
xor
inc
out
jg
push
dec
insl
and
pop
imul
dec
stos
mov
aad
xchg
inc
movsl
stos
cmp
insb
pop
xorb
jbe
nop
add
rorl
add
sbb
mov
xchg
mov
pop
xchg
jp
sbb
mov
int
cmp
cwtl
rcl
cs
mov
adc
pushf
imul
into
fcomps
jns
ficoms
sbb
sahf
outsl
popa
sahf
push
repnz
xchg
cmp
mov
hlt
pop
jg
mov
bound
sti
cld
cwtl
mov
or
jnp
jmp
cmp
aaa
mov
lret
leave
jecxz
cmpl
out
ds
add
and
xorl
mov
orb
mov
mov
outsb
mov
push
data16
pop
call
sbb
mov
jmp
pushf
sub
mov
daa
fmul
arpl
push
lods
mov
lret
mov
mov
ret
mov
jle
xor
inc
dec
stos
test
ret
mov
adc
testb
ret
inc
cmp
lods
sarl
test
leave
ja
sahf
mov
outsl
imul
out
cmp
mov
cwtl
shrb
sti
dec
push
push
ret
mov
xorb
scas
leave
loop
mov
xorl
fdivr
or
test
dec
aaa
mov
inc
lahf
lahf
jg
jmp
fwait
jns
js
pop
repnz
shll
popa
inc
push
mov
stos
xchg
sub
out
add
sahf
call
inc
movsl
add
fs
insb
jno
push
add
jle
adc
xor
inc
pop
add
cli
or
lods
rcl
enter
mov
adc
push
cmp
mov
mov
bound
mov
stos
inc
in
sbb
loop
add
mov
ret
mov
popf
jge
mov
cltd
and
mov
cmpsl
add
fnop
mov
or
adc
andb
les
mov
mov
arpl
insl
mov
mov
xchg
test
outsl
sbb
insl
xor
out
lahf
scas
out
cs
pop
loop
lahf
xchg
jmp
movsl
xor
daa
mov
mov
dec
bound
in
adc
lock
pop
mov
and
nop
mov
cmp
aaa
hlt
lods
test
cs
iret
jo
shrb
lds
sub
dec
imul
pop
dec
loopne
ljmp
dec
ljmp
pop
xchg
mov
inc
int3
int3
lods
call
pop
rcll
jg
sub
sti
les
xorb
rcrl
or
mov
xchg
fadds
cs
inc
cs
or
lret
test
sub
pop
sti
pushf
je
shlb
push
pop
sbb
iret
and
add
lods
hlt
adc
mov
mov
mov
lods
sbb
sub
out
popf
inc
icebp
xchg
and
out
pop
int
jno
aad
les
dec
jl
sbb
shl
xchg
repnz
mov
xchg
lahf
mov
scas
push
fldenv
xchg
sbb
aas
sub
jp
movsl
sub
out
scas
lret
mov
mov
lock
jns
sub
xor
int
out
mov
or
cltd
cmp
pop
lock
int3
imul
pop
stos
daa
leave
data16
fs
outsb
orl
push
jmp
cmp
loop
fisttps
pop
xchg
lret
cmpsb
xchg
inc
ljmp
cli
xlat
and
jg
loop
fs
test
arpl
cwtl
clc
fdivrs
enter
xchg
fimull
mov
lods
inc
mov
popa
dec
decl
mov
cmp
xor
jae
mov
jnp
or
and
mov
sbb
push
test
imul
pop
int3
fidivrl
pusha
movb
dec
test
call
pop
push
or
ret
or
push
dec
pop
in
xor
sbb
cmp
add
das
dec
fstl
adc
inc
es
mov
sbb
popa
push
cmp
arpl
cwtl
test
push
fidivrl
jle
repnz
stos
push
cmpsb
sbb
and
sbb
xor
xor
mov
xchg
mov
mov
or
daa
pop
and
dec
repz
out
pop
rclb
sbb
repnz
rcr
jns
insb
je
mov
jb
popa
push
jnp
lcall
mov
movsb
mov
fidivrl
jp
jo
out
aas
pop
insl
loopne
push
add
adc
inc
pop
xchg
ficomps
lret
xor
jl
movsb
mov
sbb
adc
mov
jae
mul
or
loop
add
cmc
jnp
outsl
gs
pop
pop
jle
xchg
aas
cmp
int3
inc
mov
shl
fwait
pop
or
inc
out
pop
cli
jecxz
cmp
movsb
into
lret
lahf
jge
dec
push
jb
pop
sub
scas
loope
jle
xchg
popf
pop
mov
mov
pushf
jmp
pushl
pusha
pushf
lea
jae
inc
inc
pushf
mov
mov
setp
movb
inc
sets
mov
lea
push
mov
push
push
lea
call
pushf
adc
mov
lea
jae
jmp
stc
sub
pushf
push
call
faddl
push
cmp
clc
sti
cmpsb
mov
add
sub
push
cmp
xor
xchg
push
and
cltd
pop
cmp
cli
lahf
popa
add
lahf
popf
dec
sbb
mov
push
leave
in
lds
mov
jae
add
aad
ret
fcomp
mov
fidivrl
cmp
call
lea
ja
bt
sub
bswap
shrd
add
cmp
dec
mov
xor
jmp
in
xorb
clc
repz
jo
shrb
insb
mov
dec
xchg
dec
inc
xchg
adc
dec
pop
cli
xchg
and
std
loop
add
dec
adc
or
jno
lods
and
sbb
xor
scas
lods
xchg
mov
insb
shrl
test
je
ret
fs
je
jno
sub
stc
cmc
cmp
call
jmp
or
lret
mov
fdivs
mov
pop
jle
xor
pop
pushf
push
fwait
xor
mov
sbb
pop
dec
mov
mov
in
fidivrs
or
xchg
fcmovnbe
and
jmp
add
repnz
xchg
popa
pop
add
push
add
mov
jmp
cmpsb
pop
pop
xor
lods
sarb
cld
pushf
in
mov
xor
jne
fmull
add
adc
mov
in
data16
jnp
mov
arpl
xor
xor
fcmovnbe
out
in
mov
je
addr16
sbb
cmp
or
imul
out
stos
xchg
mov
fiaddl
pop
cld
jb
or
push
and
adc
movsb
stc
push
or
push
decl
scas
in
loop
negl
pushf
inc
xchg
rol
lret
mov
out
adc
cli
out
push
imul
imul
jnp
imul
inc
popa
inc
movsl
pusha
push
push
mov
ror
dec
lret
dec
xchg
add
xor
mov
cs
push
in
inc
jo
adc
inc
das
sbb
rcll
fistpl
add
addr16
inc
dec
pop
int3
fidivrl
lea
jbe
stc
bsf
mov
bsf
dec
xchg
add
ror
xor
shl
mov
dec
add
sbb
dec
movl
adc
btr
mov
mov
pushf
cmp
call
inc
call
lea
je
call
xor
test
clc
stc
pushl
neg
cld
call
mov
sub
xchg
jo
sbb
pop
xchg
lods
jecxz
movsb
popf
sarl
add
lcall
or
jmp
mov
xchg
mov
and
inc
jbe
filds
cmpsl
and
fidivrs
out
jl
sbb
pop
pop
adc
arpl
scas
je
sbb
leave
jmp
push
add
or
sbb
dec
jp
sub
imul
or
push
pop
inc
push
popa
mov
sub
pushf
lea
jo
call
call
mov
pusha
pusha
mov
sete
call
jl
cmp
fwait
or
dec
push
push
inc
jb
xchg
leave
out
andb
push
pop
int3
xchg
ja
and
mov
test
lret
loopne
sub
inc
add
sbbl
inc
jne
mov
mov
xor
mov
fcmovnbe
cmp
sub
jo
xchg
xor
xor
jge
sbb
bnd
cmc
out
iret
jo
mov
insl
fidivrl
sub
lock
push
and
jl
lods
xchg
xchg
mov
mov
dec
inc
ret
push
fs
mov
inc
out
sub
pop
mov
cmpsl
or
addl
mov
xor
test
sub
sub
sub
dec
push
xor
sub
enter
sar
stos
xchg
adc
stos
sbb
mov
mov
jle
pushf
sarb
icebp
push
jno
loope
mov
roll
xchg
xchg
stos
movsb
int
mov
js
fidivrl
fs
ja
pusha
imul
cmc
add
push
pushf
lea
jmp
repnz
cmc
pop
xor
stc
jmp
jl
jge
pop
ljmp
sub
jmp
andl
dec
lcall
pop
ret
in
xor
mov
mov
movb
push
mov
push
bswap
mov
movw
pushl
ret
pushl
mov
call
inc
shl
or
xchg
pushl
sbb
movsbl
mov
cmp
sar
sbb
shl
mov
cmc
stc
clc
bt
mov
adc
mov
pusha
call
and
adc
jl
out
pop
out
ret
mov
fsubr
adc
push
inc
ljmp
add
mov
stos
clc
jmp
sti
clc
jns
movsb
adc
pusha
dec
cmp
sbb
mov
pop
sbb
jl
dec
mov
fs
aam
stos
cwtl
sub
sub
out
das
int3
rcr
jbe
sub
ljmp
rcrb
outsb
rcrl
cmp
lahf
sbb
jbe
xchg
lea
inc
pop
sbb
push
addr16
cmp
das
xor
inc
icebp
ss
dec
inc
cli
xor
and
mov
dec
cmp
into
or
push
imul
mov
pop
psubd
adc
out
sbb
push
mov
fcomip
inc
push
fcoms
sbb
arpl
fwait
and
imul
mov
sar
lock
sbb
mov
mov
sqrtps
xor
jae
inc
repz
xchg
mov
xlat
andl
push
fwait
int
stos
mov
jns
bound
in
jmp
repz
cmc
mov
xlat
andl
pop
pop
adc
dec
dec
ficoml
cs
jb
sarb
rorb
xchg
jmp
js
mov
test
sbb
pop
sub
sahf
fistpll
jmp
imul
mov
call
das
rol
inc
mov
cmc
add
shl
call
mov
mov
movb
pushl
ret
pushl
popl
mov
pushf
pushf
pushl
ret
jb
pop
cmp
and
mov
jmp
sysexit
pop
cmp
cmc
sbb
sub
mov
xor
sbb
int
mov
jmp
scas
cmp
sbb
sti
movsl
mov
stos
inc
out
sar
out
dec
jb
cmp
jmp
movsb
popf
shlb
sub
mov
xchg
decb
jne
xor
push
aas
in
imul
pop
jno
mov
push
subb
cmp
cmp
jp
push
cld
cltd
call
mov
gs
fstpt
lret
ja
inc
push
xor
and
inc
cs
push
inc
pop
inc
jae
popa
pop
in
cmp
push
cmp
shl
cmp
sbb
mov
push
add
push
cmp
pop
ret
jnp
add
loop
push
jg
test
xchg
test
mov
clc
shl
adc
push
cli
pop
xchg
daa
imul
stos
outsb
sti
inc
dec
push
push
pop
push
pop
aad
adc
or
lods
test
mov
fs
jecxz
loop
lock
mov
jge
fcmovb
lret
and
dec
cld
shll
shrl
and
add
mov
xchg
mov
inc
push
mov
push
aas
in
and
dec
aam
mov
movsb
into
aam
pushf
pop
adc
adc
jo
and
movb
loope
aaa
sbb
cli
add
sbb
mov
add
test
push
add
dec
cld
xadd
shld
pushf
sub
rol
shld
dec
pop
shr
pusha
mov
sar
add
btc
rcr
add
bsf
mov
clc
movw
cmp
shr
bt
pusha
stc
cmp
pushf
call
roll
testl
dec
push
pop
pop
dec
push
xchg
lods
out
fs
imul
leave
jae
sahf
test
pop
scas
loopne
adc
dec
sbb
cmp
lea
jp
pop
nop
aad
outsl
jl
mov
push
jnp
xor
movsl
jb
in
lcall
xchg
push
sbb
mov
push
aaa
lods
movsb
into
aad
jnp
pop
jb
adc
daa
jp
daa
int
stos
subb
push
adc
mov
das
stos
sidtl
bound
ficoml
fcomps
mov
sarl
mov
jmp
inc
lahf
fcoml
mov
xor
rcll
push
cmc
push
jmp
jecxz
mov
movsb
xor
or
xchg
mov
sbb
push
fdivp
in
mov
ja
sub
mov
add
in
xchg
cld
shll
filds
push
add
xorl
jge
xchg
movsb
add
xchg
mov
jecxz
cmp
call
repz
sbb
rclb
or
and
jle
jmp
fstps
cmp
or
orb
pop
xor
in
fistpl
add
sub
fisubl
add
insl
dec
push
shll
loop
int3
outsl
in
lahf
ss
mov
xor
adc
push
mov
call
cltd
add
mov
aam
adcb
or
push
push
sbb
pop
and
add
outsb
xor
cmp
push
pop
jne
imul
pop
pop
lds
xor
xchg
mov
repnz
mov
int
cmp
popf
jne
adc
and
mov
popa
xchg
das
lcall
mov
or
cmp
fyl2x
pop
mov
dec
stos
jb
sbb
push
sbb
and
xor
mov
leave
pop
inc
orl
cmp
push
in
fs
lret
mov
mov
mov
data16
aad
or
or
fsub
aaa
ss
cmc
sbb
sti
xor
jecxz
xor
aas
ljmp
mov
jp
test
jmp
push
and
rcl
xchg
lahf
cmc
arpl
xchg
loop
insb
mov
aad
inc
gs
xor
cmp
aaa
and
sbb
fsubs
or
ss
mov
clc
cmp
imul
pop
sbb
mov
xchg
add
and
and
jg
pop
inc
or
inc
xchg
xor
xor
scas
repz
push
in
out
xor
test
clc
and
inc
fisubs
in
lea
fbld
rcr
push
cmp
out
pop
mov
xor
int3
aaa
test
mov
rcrb
fisubs
in
sbb
pop
sub
sbb
sbb
push
test
fcmovne
loope
sub
roll
and
ror
dec
pop
add
fldl
sahf
icebp
jle
les
push
mov
mov
out
cmp
xchg
movsl
jne
and
push
lret
lods
in
or
or
mov
packsswb
and
lret
mov
xor
sub
adc
fisttpll
addl
sub
pusha
ret
fisttpll
cmp
sub
dec
inc
xor
popf
pop
adc
or
or
push
dec
shrl
js
bound
test
or
adc
fisttpll
cs
repz
add
sbb
mov
mov
adc
ror
pop
mov
inc
jno
popa
ss
outsl
fmull
mov
xchg
test
xchg
pushf
pop
addr16
cmc
inc
jo
std
sub
ss
call
push
out
lock
in
sub
fs
test
add
sub
pop
adc
movsl
or
insl
pop
out
inc
jecxz
mov
inc
mov
push
adc
aaa
ret
cmp
das
stc
push
mov
enter
sub
cltd
orl
jge
xchg
fistl
leave
sar
nop
sbb
fs
pop
dec
pop
or
jae
add
fwait
loop
adc
repz
mov
dec
xor
jns
in
jae
mov
cld
pushf
pusha
jno
call
pop
out
xorb
mov
cmc
or
je
pop
fistl
stos
imul
aaa
sbb
and
pop
gs
pop
pop
and
cltd
test
and
dec
fmuls
dec
fadds
imul
mov
loopne
cmp
push
jae
sub
jne
fstpl
lret
mov
aaa
es
fsubrs
repnz
and
sub
add
and
data16
iret
add
jmp
pop
subl
xor
repz
movsl
sbb
fidivs
loopne
mov
and
cmpsl
into
pop
or
add
adc
mov
fs
push
jb
sub
call
mov
lea
popa
dec
loop
sub
hlt
fdivr
mov
scas
in
mov
jg
lea
in
mov
lret
mov
das
sbb
jno
fdivrl
mov
inc
xlat
sbb
xlat
xor
dec
fildll
sbb
cmp
fidivrl
inc
mov
mov
lea
pop
arpl
lods
leave
or
sbb
adc
push
jp
pop
lods
pop
sbb
mov
imul
cltd
jg
icebp
nop
fldl
pop
mov
mov
outsl
ret
xlat
test
or
xorb
pop
nop
sub
pop
sub
in
inc
pop
das
dec
ja
sub
mov
xchg
orl
lods
shr
or
push
in
inc
adc
test
push
loop
in
lahf
push
mov
jmp
int
xchg
rcll
pop
cmp
and
push
jbe
sub
mov
loop
sahf
inc
sbb
cltd
dec
push
sbb
aad
mov
in
adc
adc
loopne
xor
xchg
dec
rorl
js
mov
addl
stos
sahf
sub
jecxz
xor
and
mov
cmp
mov
fmul
ljmp
mov
lahf
loop
xchg
out
sbb
aaa
mov
jmp
pop
mov
pop
push
fs
ds
mov
sbb
in
or
jne
fisubrs
cmpl
test
cmpl
out
xor
pop
out
pop
fsubl
mov
mov
mov
mov
xor
mov
xchg
sub
and
xor
sbb
pusha
insl
sbb
or
xor
xchg
insl
iret
mov
cmp
push
or
and
test
jge
loop
rcrb
pop
lret
lret
push
cmp
loop
inc
sub
dec
push
out
or
xchg
mov
dec
stos
pushf
adc
adc
scas
fucomi
hlt
stc
or
xchg
movsl
mov
sarl
inc
stos
or
xchg
jge
ficoml
pop
jp
rolb
out
cld
dec
loopw
pusha
xchg
movsb
adc
sub
aas
push
dec
dec
rorb
out
mov
push
dec
pushf
loopne
xlat
pop
dec
repz
out
jo
mov
cmp
test
dec
dec
test
sub
pop
rcrl
pushf
mov
fildl
rolw
adc
aaa
mov
inc
fwait
in
arpl
xor
loopne
aaa
shrl
jecxz
lahf
pushf
aaa
fwait
dec
xchg
mov
fdivrl
ljmp
pop
imul
xor
lods
call
cmc
loope
loope
cmp
fs
xchg
pop
frstor
jecxz
sbb
js
cmp
sub
shrl
adc
mov
repz
xlat
icebp
pop
sbb
add
inc
xor
sbb
lret
jmp
in
adc
out
add
cmp
pop
mov
adc
push
xchg
push
mov
in
movsb
fcompl
sub
jmp
cs
inc
sbb
adc
push
dec
lock
push
leave
loop
push
mov
add
fistpll
lahf
mov
das
inc
push
fs
fnsave
outsl
xor
sub
cmp
xlat
mov
loopne
cmp
add
addl
pop
shlb
or
loope
pop
ljmp
fcos
or
stc
and
xchg
xor
pushf
test
cmp
and
mov
sbb
add
sub
xchg
frstor
aas
lods
lret
pop
adc
cld
int
adcl
adc
repz
lea
xor
hlt
xor
mov
jbe
and
or
aad
or
or
xor
dec
jne
pop
sub
mov
xchg
mov
in
hlt
or
add
fbld
inc
mov
mov
nop
jmp
pushl
mov
xor
pop
cmp
add
pop
aaa
mov
ljmp
lcall
mov
mov
sahf
or
push
addr16
loopne
sub
scas
scas
fcmovnbe
push
or
fsts
std
or
test
frstor
jne
xor
dec
sti
lods
push
dec
sub
xor
mov
arpl
xchg
fsubl
ret
aad
jae
mov
fdivs
gs
pop
xlat
fwait
loopne
pop
call
call
cmp
mov
std
nop
adc
push
in
setge
inc
lret
shll
mov
mov
dec
add
mov
mov
adc
insb
les
test
mov
aad
pop
clc
das
push
xlat
imul
rol
jmp
adc
sbb
pop
push
lcall
lds
sbb
out
mov
sbb
jmp
repnz
mov
dec
jne
push
in
insl
xchg
jno
mov
dec
sahf
fisubl
mov
or
inc
jmp
stos
cmp
aaa
dec
lock
cmp
cmc
inc
or
aas
xchg
add
or
xchg
mov
xor
and
jnp
xor
cwtl
jge
sarl
and
push
addl
and
insb
and
dec
xchg
mov
mov
cmp
out
loop
and
pop
mov
xor
pusha
cli
sub
gs
fistl
xchg
or
inc
add
ss
fbld
lahf
fstps
pop
in
sbb
jmp
sub
aad
lahf
lea
test
xor
aad
cmp
adc
mov
nop
cmp
je
jecxz
popf
dec
cmpsb
pop
in
nop
out
loopne
jno
movsl
jmp
iret
hlt
push
mov
std
pop
dec
loop
inc
fldl
ret
ret
mov
sbbl
sbb
in
testb
jae
in
and
loope
mov
imul
jg
mov
out
dec
and
mov
cmp
call
adc
mov
pop
and
fstp
sbb
movsb
insb
ljmp
movl
or
test
adc
mov
sbb
popf
mov
incl
dec
rep
add
cmp
fsts
clc
sbb
loop
ficoml
cmp
cmpsl
fsubrl
jmp
pop
jmp
or
pop
sub
and
mov
fbstp
in
insb
ret
cmp
jmp
sub
mov
dec
das
int3
push
pop
xchg
ja
jno
es
xor
and
pop
cmp
in
stc
out
int
mov
lock
inc
mov
icebp
mov
dec
push
jge
or
shrl
pxor
lds
inc
push
or
jno
aad
sbb
jg
xchg
mov
adc
jg
nop
repnz
in
inc
push
mov
push
push
rolb
mov
jmp
rorl
mov
ftst
mov
sahf
pop
sbb
out
dec
mov
lods
mov
in
cwtl
dec
shl
mov
stc
fnstsw
int3
in
cmp
xchg
lahf
pop
out
setns
dec
test
mov
add
adc
jns
std
test
sub
ficompl
push
jge
and
fs
lds
xor
clc
and
icebp
xor
adc
sub
aad
insb
adc
or
jmp
fidivl
mov
stos
inc
cs
out
lods
jmp
or
int
add
inc
xor
xchg
jl
aad
cmp
lea
xchg
xor
out
iret
and
inc
cmpsl
xchg
in
daa
dec
sbb
aas
out
stc
cmp
leave
jno
pop
movsb
jo
xor
leave
lret
jnp
push
scas
clc
fmull
incl
pop
out
inc
mov
pop
jmp
mov
mov
ljmp
mov
sub
cmp
leave
mov
push
test
cmp
cltd
pop
pop
enter
sbb
dec
dec
addr16
cltd
inc
add
mov
add
je
and
mov
mov
or
ja
push
dec
stos
mov
mov
cli
push
imul
push
pop
sub
xor
cmp
lea
push
fucomp
insb
ss
insl
cld
rcl
pusha
mov
daa
out
mov
sahf
jne
inc
lds
jo
push
push
xor
icebp
jecxz
adc
dec
pop
mov
repz
gs
or
hlt
add
dec
cltd
arpl
in
push
add
cld
dec
cmp
sti
stos
lret
lea
sbb
or
ror
jge
jnp
adc
icebp
lahf
dec
mov
mov
push
sbb
cmpsl
adcl
test
popa
sub
jb
or
push
pop
pop
jns
int
sub
xor
scas
mov
addl
cmp
std
mov
int3
lock
leave
pop
dec
xchg
dec
and
daa
into
add
dec
cmp
push
mov
fnstcw
test
loope
cmp
out
rcrl
lods
and
ss
pop
lods
push
ds
fwait
rorl
andl
mov
jno
icebp
pop
mov
jns
cmpsl
cmp
pop
fildll
fsubrl
and
push
jg,pt
fwait
in
pop
mov
pop
bound
mov
push
cmpsl
add
dec
dec
push
inc
mov
xchg
fstpt
and
or
movsb
sub
dec
push
and
nop
sbb
in
pop
int
push
fistps
jnp
insl
sbb
fs
divps
out
adc
sbb
sub
andl
push
stc
cmp
xor
fisttps
pop
test
xor
imul
pop
aam
filds
and
sub
dec
andb
gs
pop
xor
dec
sbb
dec
and
scas
dec
jne
cmc
mov
mov
test
mov
fs
or
xchg
in
test
cld
fsubrp
xchg
dec
or
popa
mov
lret
mov
test
cmp
xchg
sahf
lret
jge
icebp
jg
mov
outsl
filds
enter
jno
rcr
add
or
repz
jge
mov
adcl
movsb
loope
sahf
fs
lods
out
clc
cmc
fimuls
aam
insb
aad
push
and
aaa
pop
jbe
addb
add
fcmovnu
cmpl
lock
mov
and
imul
dec
mov
pop
add
mov
jne
nop
ljmp
rcll
push
fisttpl
adc
push
xchg
cmc
adc
shll
std
sbb
and
testb
test
sbb
mov
iret
les
xor
adc
lods
lret
out
andl
rolb
test
in
inc
mov
push
daa
add
iret
cmp
cwtl
mov
add
inc
outsl
mov
fdivr
jl
lods
test
xchg
mov
leave
leave
out
jmp
xchg
jl
pop
adc
add
jo
sub
adc
inc
popa
int
movsl
incb
cmpb
dec
pusha
cmp
out
inc
in
jnp
out
push
out
jo
xor
xchg
inc
sbb
call
xchg
pop
xchg
stos
mov
or
je
add
sarb
mov
sbbl
fwait
sub
cmp
mov
lahf
fnstenv
adcl
sub
push
test
inc
push
sbb
ficomps
loopne
nop
sub
inc
xchg
std
sbb
int3
xchg
fisubl
outsb
out
jnp
lret
test
mov
lea
and
ficoml
pop
push
stos
add
fwait
inc
loopne
rorl
sti
rolb
fwait
adc
mov
cltd
lret
inc
push
jecxz
mov
incl
out
or
pop
jg
mov
xor
sub
sub
dec
and
pop
push
mov
mov
lcall
push
mov
imul
mov
pop
dec
jmp
lea
push
or
imul
push
pusha
fdivs
shl
and
sbb
sahf
push
iret
fcmovbe
push
in
movsb
cmpsb
push
les
mov
out
add
push
pop
int
std
mov
cltd
mov
imul
adc
dec
jmp
loop
nop
cmpb
mov
jmp
in
ret
bound
lock
int3
mov
cmp
xor
aam
in
insb
mov
mov
in
mov
xor
or
mov
scas
int3
scas
pop
or
add
inc
fnsave
sbb
loopne
repnz
in
repz
stc
xchg
or
mov
pop
add
stos
adc
jne
cmc
pop
outsb
pop
cwtl
mov
xchg
cltd
mov
push
repnz
adc
xchg
dec
nop
sub
xlat
mov
idiv
int
fcmovnbe
ret
fisubrl
adc
mov
xchg
mov
sarl
jl
std
ja
dec
test
or
mov
sub
in
mov
nop
outsl
sbb
jne
jmp
adc
inc
add
iret
iret
movsb
mov
mov
mov
cld
sbb
xchg
sub
and
push
outsb
jne
adc
dec
dec
sbb
push
pop
mov
jmp
frstpm(287
scas
andl
test
sub
push
insl
xor
cmp
or
add
in
cmp
aad
cmp
mov
add
mov
sub
jge
jmp
sub
ds
adc
jae
repz
push
and
cmp
xchg
dec
in
push
mov
xchg
out
pop
loope
and
loopne
sbb
ret
pop
in
mov
add
in
push
daa
mov
loope
jl
adc
inc
and
daa
cmpsl
cld
cmc
test
sbb
sub
xor
lcall
xchg
out
adc
mov
adc
dec
push
xor
adc
loopne
es
dec
sbb
jno
popf
nop
jge
push
int
in
pop
int3
push
hlt
fucomi
mov
jmp
mov
leave
in
jns
mov
imul
cld
movsl
push
jl
fdivl
cmpsb
fs
cld
pop
in
mov
bound
cmpsl
mov
mov
dec
push
leave
add
std
jge
push
mov
sbb
mov
fstpl
fldl
pop
loope
jmp
xchg
mov
scas
pop
mov
push
push
xchg
or
out
jae
pop
outsb
adc
mov
loop
addb
add
push
divb
mov
cmp
lret
push
fucom
cltd
push
cmc
stos
fsubl
sbb
pop
out
cmp
xchg
cmp
cld
loopne
xchg
or
cmpsl
mov
popf
iret
jns
xchg
pushf
icebp
clc
mov
outsl
sub
cltd
xor
aaa
xlat
adcb
fmull
mov
and
sub
xchg
leave
aad
dec
cld
cwtl
and
xchg
leave
dec
inc
xchg
out
test
sub
push
cmc
loop
pop
outsb
cmp
cld
imul
aad
lods
or
fcmovbe
in
mov
lahf
dec
or
int3
dec
out
cmpsb
adcl
or
rcll
jns
pop
dec
jge
cmpb
stos
movsb
inc
cld
mov
adc
arpl
insb
loop
jge
and
ret
cmpsb
roll
lods
ss
int
jecxz
xchg
movsl
jmp
jbe
aad
xchg
jmp
aam
fiaddl
sbb
mov
lret
xor
cmp
push
lock
sbb
pop
sti
xor
add
jge
add
imul
les
andps
inc
shr
stc
sar
popa
mov
push
sbb
inc
cmp
mov
push
sahf
lods
shl
int
jns
dec
rorl
movsb
popa
xchg
inc
push
popf
sub
int3
cmp
nop
jp
mov
adc
repz
sub
outsl
sbb
int3
xlat
js
and
cmp
into
enter
add
dec
jns
push
adc
addb
jge
iret
cmpsl
repz
cwtl
cmp
inc
icebp
adc
sahf
and
shrl
mov
imul
and
test
int
inc
in
dec
sbb
pop
jbe
sarb
cmp
or
push
push
jbe
add
fnstenv
xchg
rolb
sarl
mov
or
pop
mull
pop
frstor
mov
sub
adc
and
add
bound
or
jp
aas
jmp
ja
mov
xor
add
sti
ret
fdivrl
and
inc
nop
add
sub
test
sub
push
mov
scas
xchg
inc
inc
push
jmp
sbb
xor
mov
pop
imul
add
das
sbb
mov
outsl
jmp
in
test
lret
cmp
xor
sbbl
aaa
call
daa
dec
lret
cmp
mov
jae
mov
pop
int
fisttpll
loopne
mov
stos
xor
push
mov
mov
sbb
dec
imul
fisubl
imul
int3
fisubrs
or
mov
mov
jb
fisubrs
loopne
or
sbb
jle
jge
or
sbb
or
fmuls
popf
push
sbb
mov
jnp
sbb
fsubl
scas
in
cmp
sbb
das
sbb
fcompl
mov
lret
orl
mov
inc
inc
mov
fadd
ljmp
sarl
fidivrl
sbbl
mov
pop
scas
rolb
jmp
fs
mov
dec
loope
dec
xor
sbb
je
jbe
mov
and
aam
adcb
ss
gs
fmuls
cmpsl
pop
xchg
inc
ret
enter
mov
lahf
cli
icebp
jp
sbb
pop
xor
je
mov
test
mov
shrd
stc
pop
loop
sti
loopne
sub
dec
dec
mov
and
inc
jecxz
xor
in
outsb
add
mov
mov
pop
fdivrl
stos
rol
push
imul
mov
lock
xchg
in
lret
cmc
scas
mov
je
jle
jbe
jnp
cli
in
cmpsl
movsb
xor
fldcw
aas
in
sahf
xor
fiadds
cmp
and
jo
std
dec
mov
fs
orl
and
mov
cmpsb
iret
addb
xor
push
jg
iret
push
call
inc
push
cmpsb
fcompl
push
les
inc
xchg
clc
add
lahf
lcall
js
out
cwtl
lods
add
arpl
jne
inc
ret
xchg
push
and
mov
aaa
outsl
popf
daa
loop
decl
inc
inc
cld
mov
cli
push
or
and
aaa
daa
mov
mov
xor
jge
gs
cmp
mov
cmp
mov
xor
xchg
dec
or
and
and
orb
xor
sub
push
in
inc
cmc
aas
pop
sub
aad
out
pop
or
cld
jg
inc
sbb
mov
cwtl
push
adc
sbb
pusha
mov
cld
mov
scas
shrb
or
addl
dec
pop
fs
enter
ljmp
xchg
subb
cmp
add
sub
and
sbb
xchg
mov
mul
adc
sbb
ja
pop
dec
jne
inc
sub
or
addr16
movsb
and
dec
add
das
loop
jmp
in
mov
cmp
inc
mov
mov
test
mov
dec
and
xor
cld
std
ds
inc
xor
sbb
popf
pop
sub
sahf
cmpb
rcrl
or
fistpl
pop
pop
imul
mov
mov
add
ret
mov
ret
jl
ret
fsts
lds
pop
mov
ret
mov
rclb
push
mov
loope
dec
pop
cmp
sbbl
es
inc
xor
in
pop
add
ds
aaa
cmp
movsl
pop
gs
inc
mov
xchg
cmp
lea
aas
mov
pop
pop
loope
jp
std
inc
idivl
cmc
std
lret
popf
mov
mov
sub
sbbl
pop
cmp
cmc
push
ljmp
sub
aad
add
sar
dec
xlat
repnz
adc
xchg
fsts
and
xor
loop
inc
jnp
mov
arpl
gs
jmp
repz
in
inc
cmp
loope
in
fisttpl
or
imul
sbb
xlat
mov
push
dec
addl
xchg
leave
pop
sbb
sti
sub
lods
or
sub
jecxz
sbb
in
pop
or
pop
sbb
xchg
lock
mov
jmp
or
cmpsl
fcmove
xor
sub
shll
das
and
subl
push
fstpl
jp
pop
lcall
std
sbb
pop
cmp
fwait
push
mov
hlt
inc
sub
dec
mov
push
sub
sub
cld
iret
xor
shlb
inc
das
add
adc
in
mov
push
andb
mov
mov
fdivl
mov
inc
ss
jmp
out
fcom
out
loopne
pop
lret
fwait
pop
xchg
pop
cmpsl
sbb
cmc
fimuls
gs
pop
ror
cmc
test
aad
dec
lods
adc
or
inc
push
inc
not
dec
mov
mov
cmpsl
mov
in
jne
sbb
js
or
cmp
add
ss
aas
lret
jns
push
cmpsl
cmp
inc
sub
add
movntq
ds
fs
jg
loop
shl
adc
mov
xor
fsubrl
pop
mov
mov
pop
sub
inc
and
push
push
popf
xor
iret
cmp
add
adc
popa
inc
in
arpl
add
xor
call
jo
inc
jmp
loop
cmp
adc
pop
dec
movsl
sub
cwtl
imul
in
aam
or
pop
arpl
popa
fisubrl
sbb
imul
and
adc
arpl
push
popf
sbb
in
rcrl
insb
out
cltd
add
inc
pop
cmpsb
sahf
pop
or
lcall
mov
ja
add
mov
movsl
ss
js
fdivrp
and
xchg
lcall
fisubs
jg
bound
add
das
sbb
arpl
sub
sbb
or
jp
call
cmp
pop
cld
mov
jle
out
aad
xlat
and
mov
push
push
push
std
inc
add
insb
pusha
rorl
or
fdivl
in
xor
push
cmpsb
sub
out
jp
in
lods
xor
js
lret
mov
lahf
push
sub
pushf
flds
in
inc
add
inc
movsl
nop
or
add
mov
data16
sub
cmp
shl
and
mov
fs
mov
adc
scas
jbe
dec
or
jae
pop
xor
xlat
mov
fs
pop
in
pop
push
pop
lods
int
sbb
rcll
ret
insb
aad
mov
jmp
data16
sub
xchg
xchg
mov
cmp
test
xor
cs
jmp
roll
fstpl
jns
adc
mov
fisubs
jns
pop
pop
fsts
push
in
inc
lcall
nop
dec
fstps
mov
fstp
shl
push
in
mov
fsts
filds
fldl
aad
fwait
pop
fucomp
in
int
ud2
sbb
cli
mov
adcl
out
pop
fstpl
stc
int
loope
movsb
jge
js
rorl
in
in
movsb
cld
sbb
sub
fmul
sub
jmp
pop
imul
std
add
aad
push
imul
leave
int
mov
add
or
or
pushf
adc
loope
fptan
xor
into
lods
adc
std
in
rorb
adc
int
mov
iret
rorb
dec
popf
in
xchg
movsb
cmp
mov
dec
out
mov
in
mov
jno
shll
imul
imul
jmp
int
jns
jns
mov
lds
aad
jmp
imul
call
adc
iret
jge
fldcw
pop
pop
xchg
popf
pop
fwait
xor
stc
sbb
xchg
sbb
mov
dec
call
jno
push
lds
push
push
cmp
mov
aam
test
mov
or
xor
sbb
xchg
jl
mov
jne
mov
jno
fnsave
cmpsb
daa
std
into
mov
hlt
mov
add
into
xchg
and
push
cmc
xor
fsubrl
xor
test
mov
loopne
cmp
gs
or
inc
ds
sub
pop
jbe
rolb
xor
std
sbb
into
push
xor
or
inc
pop
andl
push
bound
sub
in
add
fst
cwtl
fs
rcrl
push
mov
xlat
adc
xor
in
rcrb
ss
addr16
cmp
xor
add
sub
movl
sub
sbb
jge
incb
xor
pop
dec
or
xlat
jmp
cmp
jmp
inc
cmpsl
iret
jae
fmul
or
sbb
pop
cmp
popl
xchg
data16
inc
pop
xchg
in
mov
fwait
sbb
fsqrt
sti
lahf
xchg
fucomp
inc
adcb
push
cmp
fnstsw
inc
push
mov
jne
mov
cmpsb
dec
add
pop
cld
xchg
mov
lock
xor
imul
push
fnstsw
es
cmc
inc
cmp
into
loop
sarl
pop
mov
cmp
inc
cmpsl
cltd
cld
lahf
cld
mov
mov
mov
out
inc
aas
cmp
mov
test
fstl
push
repnz
fstpl
xchg
std
aad
mov
mov
popf
int
cmc
repz
negl
std
xchg
xchg
mov
out
fcmovb
sub
or
loopne
aam
or
fdivs
out
sub
jne
rcll
fcomi
mov
loope
jge
out
pop
aad
xlat
in
push
cmpsl
aad
inc
pop
pop
and
movsl
inc
stc
mov
fisttpll
mov
addr16
dec
filds
push
movsb
jp
inc
stc
dec
cld
or
fldenv
push
aad
push
inc
and
add
dec
bound
stos
sbb
shrb
lcall
insl
fldl
add
call
loope
jg
add
rcrl
jmp
gs
sub
xor
test
int3
xchg
add
push
in
cmp
loope
sbb
int
insl
adc
xor
lahf
jge
xor
pop
push
aad
mov
mov
frstor
add
rcll
subl
ja
and
std
jg
jnp
xchg
mov
lea
pop
daa
out
push
cltd
nop
leave
test
jnp
icebp
or
movsl
popf
mov
pop
pop
shlb
lea
mov
popf
in
and
fwait
std
mov
loope
cmc
mov
in
aaa
jmp
fs
lahf
xchg
jnp
lret
movsl
jmp
add
ror
fwait
adc
addr16
inc
fnstsw
popf
or
cmc
or
imul
and
leave
test
in
test
jge
sti
xor
arpl
push
aad
push
mov
add
xchg
mov
sbbl
sub
mov
lcall
test
sahf
mov
push
popf
push
inc
jge
fmulp
mov
sub
inc
cmp
ss
out
out
and
mov
or
aas
and
cmp
ss
mov
lret
js
in
xchg
cltd
pop
add
outsb
mov
out
cmp
push
sub
jno
outsb
out
pop
jne
mov
jb
sub
sets
in
mov
xchg
push
jne
inc
push
adc
in
or
inc
fs
mulb
cmp
pushf
and
ja
roll
cltd
jo
mov
cmp
inc
mov
xchg
fcoml
lcall
test
xchg
sub
nop
movsl
pop
cmc
add
pop
aam
sbb
adc
xchg
pushf
outsl
fstps
fidivrs
hlt
cmp
leave
mov
xchg
in
sbb
int3
xchg
scas
dec
xchg
cli
loope
sbb
bound
mov
and
or
iret
fildl
fisubrs
xchg
jecxz
scas
aad
and
or
test
fisubrs
jp
xor
sbb
insl
test
imul
or
dec
mov
mov
add
or
cmpsb
cmp
lods
fcoml
pop
daa
add
mov
movsb
loope
or
pushf
aad
add
pop
push
and
xor
mov
je
sbb
lds
imul
xor
cmp
test
pop
cmp
out
gs
in
mov
outsl
mov
aam
mov
roll
push
mov
add
mov
aas
fildll
and
sbb
mov
jl
out
mov
adc
mov
lret
xchg
cmp
orb
xor
sbb
test
dec
or
jp
xchg
cmp
not
test
and
pop
std
cltd
inc
les
cld
faddl
fimull
dec
or
adc
ss
mov
pop
pop
jne
fimuls
push
sbb
popa
test
and
mov
cmp
mov
cmp
push
sub
fistl
fsts
mov
xor
icebp
cmpl
cmp
lret
adcl
pop
mov
and
push
rolb
and
mov
push
mov
mov
inc
bound
mov
nop
les
add
mov
jl
fucomip
ss
mov
sbb
rol
lahf
cmp
adc
out
xchg
jmp
cmp
jp
ss
sti
mov
mov
call
mov
mov
mov
jne
shll
push
incb
and
pop
fldt
xor
lahf
loope
jle
cmc
out
int
loop
dec
adc
xchg
pushf
inc
repz
shl
sbb
shrl
xorl
fs
mov
cs
pop
pop
cmp
aam
mov
pop
imul
fmull
add
cltd
gs
sbb
or
dec
fwait
mov
or
sbb
push
pusha
popa
mov
cld
mov
imul
iret
inc
sbb
popf
adc
mov
push
jmp
fdivp
rcrb
cwtl
imul
mov
mov
insl
cmp
lahf
dec
inc
fnclex
lods
adc
inc
lcall
push
popf
inc
lock
adc
xor
cmp
rorb
int
jmp
lea
mov
arpl
or
repz
jne
icebp
es
xor
push
xchg
fistl
insl
iret
in
mov
iret
std
inc
in
icebp
xor
fdivrl
popa
xor
xor
inc
fs
cmpsb
xor
push
cmp
fwait
and
xchg
aaa
mov
daa
add
mov
fsubs
out
dec
adc
pushl
pop
mov
jp
add
jns
fdiv
cmpl
sub
xor
and
adc
pop
aam
sub
ficomps
push
pop
dec
cmp
imul
sarl
and
movsb
movsb
or
cmc
movsb
or
mov
test
and
xlat
xchg
mov
push
mov
pop
sub
scas
sub
in
pop
mov
icebp
sahf
test
adcl
cmpb
test
push
and
sbb
adc
cwtl
inc
test
xchg
test
lcall
fistpl
fidivrl
fsts
inc
fwait
clc
pop
sub
mov
cs
jecxz
lods
mov
scas
sbb
jmp
xchg
outsb
bound
fsts
push
inc
push
sub
mov
push
adc
aaa
xchg
imul
nop
mov
xor
into
xchg
adc
aam
sbb
xor
and
pop
pop
mov
fimuls
mov
aas
mov
mov
fs
mov
das
sub
pop
dec
inc
and
mov
cmpl
cltd
push
inc
mov
aam
cli
out
mov
into
inc
inc
sub
in
mov
scas
shll
inc
ss
in
dec
mov
movsl
lahf
xor
shrb
pusha
xor
or
cmp
sub
mov
sbb
sub
and
mov
jmp
cmp
xchg
push
mov
jmp
sub
xchg
iret
shlb
pop
cs
and
or
leave
faddl
icebp
add
xor
std
stos
or
adc
xor
xor
cmpsb
rcl
data16
aad
xchg
hlt
sbb
dec
xlat
inc
and
adc
add
fmull
and
jnp
xchg
cmc
lret
imul
cmp
xorl
dec
xchg
leave
ret
stc
adc
incb
fstps
mov
shrb
jno
cmp
jge
inc
fwait
iret
outsb
fs
test
pusha
sub
xor
ljmp
push
or
adc
sub
insb
adc
jmp
cwtl
xor
mov
lea
outsb
inc
cltd
fmull
call
sub
or
jae
dec
out
lock
adc
addb
out
or
ja
fistps
push
cltd
xorl
jbe
pop
stos
jno
cs
ret
mov
push
mov
nop
jmp
mov
cmp
xor
xchg
cmp
push
cmpsb
cmpsl
sub
iret
inc
dec
inc
jbe
cltd
inc
or
movsl
lahf
or
mov
fstpt
mov
push
out
orb
adc
xchg
sbb
dec
push
dec
fucomi
inc
int3
iret
fmull
inc
call
or
xchg
jnp
loopne,pn
fldenv
cmp
push
fsubr
mov
mov
mov
fdivrl
dec
stos
inc
push
adc
cmp
pushf
sub
lret
sub
jae
adc
test
sbb
or
dec
fistpll
xor
insl
jle
mov
jns
jle
cmp
mov
xor
or
test
inc
jle
mov
mov
shr
pop
and
popa
add
in
fistps
fnstenvs
test
fstl
push
push
stos
shll
popf
stos
fsub
fsubr
jb
push
aad
inc
mov
sbb
lret
sub
sbb
cmp
testb
iret
cmp
rcll
nop
mov
mov
fdiv
sbb
fistps
inc
loop
and
sbb
and
incb
xor
fs
popa
or
mov
lods
imul
mov
add
xorb
jne
fists
pop
dec
jne
inc
mov
xchg
test
pop
fidivl
loopne
fistl
xor
lahf
adc
mov
dec
je
lods
fwait
push
push
jp
pusha
adc
push
adc
repnz
cld
and
adc
outsl
inc
xchg
xor
jnp
sub
and
in
mov
sbb
das
sbb
sbbl
nop
int
popf
sub
stc
mov
arpl
add
jmp
std
push
out
inc
xchg
cmp
and
ret
cld
or
fmull
movsl
pop
sub
roll
in
movsl
rcl
mov
jge
push
stos
pop
xor
add
and
arpl
dec
std
or
daa
mov
int
jl
cmp
nop
fwait
cmp
mov
int
cmc
inc
xchg
scas
xchg
add
arpl
mov
orl
vmwrite
jo
movsb
pop
cmp
ja
sub
insl
lahf
jo
xor
and
jns
movsl
jmp
dec
sub
pop
sbb
cs
lea
and
cmc
out
in
cmp
pop
and
pop
mov
test
jnp
dec
loopne
and
xor
notb
inc
pop
cmpsb
cmc
mov
xchg
sbb
mov
mov
in
add
in
rcrb
roll
pop
or
xor
out
mov
movsl
jmp
mov
or
adc
jne
sahf
movsl
dec
sub
shll
fcompl
shl
pop
pop
pop
push
add
pop
push
push
aad
xorb
pushl
std
loop
pop
mov
xor
aam
cs
popa
cmp
jno
mov
and
pop
mov
xchg
add
xor
inc
imul
aas
call
cltd
aad
pop
int
xchg
inc
jnp
adc
add
cltd
xchg
int
sbb
roll
and
push
test
pop
mov
push
dec
sti
mov
andb
ss
jne
inc
cltd
movsb
scas
repz
xor
mov
cmp
ljmp
stc
add
cmp
or
jae
mov
xchg
inc
aad
repnz
sub
jp
bsr
and
testb
sbb
xchg
adc
pop
adc
call
dec
mov
push
mov
add
or
push
adc
mov
cmp
aad
mov
popf
add
jecxz
or
es
dec
std
cld
push
outsb
xlat
add
cmp
and
pop
into
pop
sub
loop
xchg
sbb
popf
sbb
std
inc
add
test
daa
and
xchg
aas
mov
mov
add
into
jno
adcl
cmp
pop
sbb
movsl
popa
ja
iret
sbb
out
data16
mov
lret
lret
pusha
inc
mov
jmp
fwait
sbb
decb
out
xchg
mov
xor
cmpsb
xorl
or
loop
mov
and
cltd
dec
add
mov
sub
and
pop
sub
add
aas
sub
jle
fucomi
jb
aaa
lcall
cmp
arpl
add
jmp
shlb
pop
add
frstor
int
push
push
cld
fsubs
mov
inc
stos
sub
bound
add
or
xor
out
add
adc
xchg
push
xchg
push
lahf
pop
adcb
fisubs
arpl
mov
xchg
push
mov
mov
mov
adc
ja
imul
mov
mov
inc
ficoml
jno
rorb
shrl
not
pop
cmp
push
imul
pop
js
fdivrs
loopne
xor
sbb
dec
jle
inc
pop
cmpl
test
bnd
xor
dec
cld
test
js
lahf
lret
imull
pop
sbb
lock
popf
shlb
xchg
cmp
aaa
das
and
sub
fs
sub
ret
fdivrl
and
and
jnp
push
popf
dec
inc
call
sbb
sbbl
loop
int3
fisubrs
xor
fidivrl
or
arpl
xor
jmp
lret
loopne
pop
adc
xor
add
fcomps
sub
add
sbb
and
inc
inc
test
push
adc
inc
cmc
lods
mov
jnp
adc
push
lret
imul
repz
xchg
mov
mov
pop
int
cmp
xchg
ss
sub
in
sbb
inc
inc
xor
add
cmp
cmc
aas
fisubl
push
xchg
pop
pop
sub
pop
into
test
xchg
cmpsl
or
in
fadds
xor
fdivrl
rep
jno
dec
mov
mov
mov
xchg
xchg
cltd
push
xlat
xor
mov
push
out
movsb
and
mov
push
fdivr
lds
iret
pop
push
arpl
shl
jne
cld
sbb
loopne
mov
out
js
pop
mov
lret
add
mov
xor
loope
test
adc
dec
or
sub
lea
or
dec
clc
and
gs
xchg
add
mov
jp
in
xchg
add
pop
sub
push
or
fldenv
fs
ss
test
aaa
cmp
or
fcmovnbe
cli
lea
xor
pusha
dec
or
xchg
mov
jo
and
mulb
xor
sub
aam
cwtl
pop
int
aam
fs
in
roll
adcb
fcmovnu
sub
in
xor
pop
pop
test
add
in
mov
jns
dec
sbb
mov
add
dec
fsubl
mov
cli
je
or
insb
gs
test
sti
mov
pop
ljmp
jmp
xor
push
nop
scas
mov
inc
inc
cltd
outsl
mov
lods
in
ss
mov
addl
leave
dec
movsb
rorb
add
sub
out
jne
sub
mov
in
push
push
fbld
adc
sbb
out
pop
inc
cmp
cmp
loopne
lea
sub
add
mov
ja
aad
jecxz
dec
add
xchg
cmpsb
cmp
xchg
cmpsl
in
or
mov
inc
pusha
test
dec
js
divb
jbe
add
cmp
nop
push
repnz
xchg
cs
xlat
sbb
fcoms
aad
or
orb
call
ljmp
inc
in
lods
cmc
push
dec
or
pop
scas
fldenv
cli
push
mov
out
int
js
hlt
mov
leave
or
push
add
in
cwtl
in
out
cmp
inc
addr16
jno
mov
out
movsl
xor
outsl
adc
nop
xor
cmc
call
sub
cmp
pop
into
cmp
and
inc
mov
fs
movsl
fists
inc
cmpsb
inc
sbb
fsts
test
mov
mov
out
loop
pop
jmp
lret
insb
lret
or
adc
icebp
out
into
fldt
mov
mov
not
dec
dec
mov
out
roll
stos
sub
sub
sahf
loopne
inc
loop
in
xchg
cltd
add
xchg
test
mov
movsl
sbb
js
enter
cmp
stc
inc
add
rcrl
mov
jb
jo
xor
subl
push
test
cmp
inc
fwait
mov
mov
dec
fbld
cmp
mov
mov
inc
sbb
fmull
sbb
pop
sbb
repz
add
ret
pop
mov
cmp
in
mov
mov
jno
pop
pop
movsl
inc
inc
outsb
mov
dec
imul
sub
adc
fstpt
mov
imul
loope
pusha
in
and
in
aad
lret
pop
inc
add
inc
mov
sub
mov
or
sarl
and
arpl
inc
push
sbb
adc
cmp
cmc
lea
pop
enter
daa
test
push
mov
inc
test
xchg
lock
push
fsubrl
sahf
frstor
mov
add
mov
sbb
sbb
sti
cmp
loop
xchg
loope
cmpsb
inc
fisubs
adc
pop
ds
add
xchg
jnp
push
pop
mov
fnstcw
mov
sub
add
fbstp
ja
pop
enter
xchg
mov
mov
addl
jbe
fcmovnbe
and
and
cmpsl
push
pop
inc
rclb
cmp
or
push
aaa
mov
push
imul
stos
pop
repz
ret
mov
jbe
jmp
mov
inc
xchg
add
pop
and
xor
push
mov
nop
mov
shll
sbb
call
fsts
cmp
xchg
and
cs
mov
test
cmp
push
jp
sbb
or
cmp
xor
push
dec
inc
sbbb
or
add
sbb
mov
mov
pushf
and
lea
cmp
movsb
loopne
dec
cli
jmp
adc
repz
xchg
xchg
sub
xlat
roll
in
fnstcw
cs
sub
push
fistpll
lods
add
xor
aad
mov
loopne
std
orl
movsl
xor
sbb
add
insb
movsb
lahf
push
xor
repz
push
sbb
clc
sbb
fcmovnb
or
push
fmull
and
pusha
test
jnp
lods
mov
cltd
or
xor
push
addr16
iret
sub
nop
bound
imull
fistpl
jp
leave
int3
jl
dec
lods
pop
call
add
repnz
inc
cmp
mov
push
fcoml
add
shlb
xlat
and
push
jne
pop
daa
sbb
fldt
mov
cmp
notb
jmp
loope
rol
add
xchg
sub
cmp
daa
jl
jns
adc
icebp
xor
sbb
xchg
cmp
and
sub
fidivrs
pop
popf
out
scas
xor
insl
jnp
dec
add
sbb
js
subb
jbe
aad
push
adc
in
mov
or
cmp
ret
in
mov
pop
or
cmp
clc
sarb
in
aam
in
mov
sub
jcxz
push
jmp
test
test
sarb
mulb
mov
jb
pusha
or
dec
out
mov
sub
dec
insb
aad
and
or
xor
es
sbb
int
push
inc
add
jecxz
jmp
cltd
cmp
lret
jns
xchg
xchg
xorl
mov
jbe
pop
add
pusha
dec
loopne
mov
mov
push
loop
andl
xchg
jb
dec
movsl
mov
adc
sahf
popa
sub
dec
jp
arpl
inc
dec
xchg
dec
add
fwait
cmc
pushf
cmp
ss
push
mov
fdivrs
inc
mov
lds
fstl
cmp
mov
stc
sub
mov
dec
into
int
dec
inc
inc
out
dec
dec
dec
push
push
xor
jp
xchg
add
push
sbb
dec
gs
pop
loop
pop
dec
push
mov
pop
mov
cmp
stos
test
adc
cld
outsb
jmp
mov
mov
adc
dec
out
mov
in
insb
or
cmc
mov
sbb
mov
gs
and
sbbl
repnz
xor
pop
cmp
push
mov
and
fwait
add
mov
add
gs
xchg
dec
xchg
mov
in
xor
mov
movsb
sbb
inc
mov
jp
mov
jge
jge
cmp
sub
mov
pop
stc
mov
arpl
mov
or
je
mov
int3
cmc
xlat
mov
mov
icebp
jae
sbb
and
sbb
inc
popf
cmpsb
imul
adc
idiv
out
pop
cmp
stos
pop
xor
cmp
mov
cmp
or
jne
and
ret
and
jge
sbb
repz
push
inc
lret
push
dec
add
pusha
or
jmp
inc
mov
cmc
mov
mov
fdivrl
dec
hlt
push
lods
push
out
cmp
inc
test
mov
lds
mov
stos
xor
xchg
inc
mov
pop
pop
cld
push
fs
pushf
dec
adc
dec
dec
loope
sbb
push
fidivrl
push
and
stc
ds
dec
xor
mov
cld
adc
scas
pop
and
xor
fnsave
sub
in
or
in
jno
rcr
hlt
aaa
push
inc
outsl
jmp
fs
pop
sub
test
inc
fisubrs
cmc
mov
add
mov
cs
sbb
cmp
int3
mov
inc
loope
movsb
aaa
popf
push
jmp
fcmove
mov
hlt
rcrl
aam
jne
cmp
sub
inc
sti
xchg
fstpt
adc
add
push
je
in
stos
subb
push
add
mov
xor
jg
and
fnsave
xchg
cmp
push
jl
psllw
mov
mov
stos
fyl2xp1
sub
xor
adc
mov
loopne
cmp
data16
std
sbb
mov
cmpsl
cmc
imul
outsl
push
jo
mov
iret
ret
sub
dec
sub
jl
int3
xor
loope
or
xor
jo
sbb
mov
adc
rcr
aaa
inc
out
outsl
mov
mov
or
in
xor
dec
leave
jnp
fstl
lret
sub
push
xor
lret
push
insb
jecxz
fsubrp
add
pop
fdivl
test
sbb
notb
or
jp
cmpl
push
add
test
inc
sbb
xor
cmpsb
nop
jo
mov
mov
cmp
pop
icebp
nop
mov
inc
ret
mov
mov
je
lcall
xor
mov
push
or
cmc
mulb
mov
pop
and
fcmove
jmp
sub
xchg
dec
int3
js
dec
sti
adc
out
mov
dec
lea
mov
and
mov
test
or
repz
or
mov
mov
and
jbe
xchg
inc
mov
xor
or
lret
mov
sub
adc
mov
stc
jns
adc
mov
mov
or
or
mov
in
or
add
pop
sub
inc
xchg
fsubrs
mov
xor
adc
stc
xchg
or
cltd
push
xchg
add
mov
or
icebp
mov
dec
cmp
mov
pop
pop
rol
jmp
add
jmp
adc
imulb
push
fadds
ret
call
mov
xchg
fwait
add
adc
xor
sbb
pop
flds
cmc
xchg
mov
adcb
push
add
xorl
stc
popf
in
mov
loope
xor
xchg
xor
iret
push
add
aas
std
and
sbb
outsb
push
mov
enter
pushf
mov
test
xchg
xchg
mov
and
imul
test
or
inc
clc
inc
mul
cmp
sbbl
sahf
stc
add
loop
cmc
cmp
adc
mov
sub
test
push
mov
in
mov
and
inc
icebp
pop
bnd
push
sbb
add
push
push
jecxz
into
add
or
sub
fsubrp
pop
or
imul
test
jecxz
adc
jno
iret
inc
unpckhps
add
cwtl
jge
push
imul
sbb
or
push
sbbl
rorl
in
sub
repnz
pop
in
es
push
mov
lcall
push
push
cs
adc
sub
mov
fcoms
ss
jno
pop
movsl
cmp
test
mov
int3
jg
stc
pop
int
jne
out
imul
aam
mov
enter
mov
pop
pop
push
icebp
fs
in
test
loop
pop
xchg
cmp
fisubs
and
jb
orl
xor
mov
popf
nop
scas
mov
adc
push
sub
inc
stos
mov
in
mov
sub
iret
imul
dec
lret
outsl
ljmp
jle
std
jnp
loope
aaa
gs
jns
sbb
mov
sub
test
test
pop
mov
xor
jmp
inc
inc
adc
jmp
and
sub
push
sbb
mov
xor
cmp
adc
pushf
cmp
pop
mov
xor
inc
stos
rcll
js
push
sbb
cmp
in
jg
xor
sub
sub
xchg
pop
es
das
in
jne
jle
fstpt
mov
and
imul
aad
popa
xchg
out
fs
ret
cmp
pop
jle
cmp
push
fs
mov
aaa
ret
xchg
sbb
mov
and
packssdw
mov
push
push
cmpl
and
add
ret
ret
pop
leave
jg
loopne
insb
add
pop
arpl
mov
rcrl
xor
mov
sub
pop
fucomip
adc
ret
xchg
cmp
xor
popa
adc
add
ds
cmpsl
mov
incb
xor
and
push
jecxz
jns
in
pop
xchg
imul
push
mov
sbb
xor
leave
fsubrs
xchg
mov
pop
sbb
cmp
inc
lret
ss
jns
dec
mov
jbe
int
mov
mov
test
add
mov
popf
inc
or
ret
lret
mov
js
aaa
add
ret
and
in
aad
icebp
pop
in
sbb
mov
xchg
andb
sbb
dec
sub
add
add
push
add
outsl
into
mov
inc
sbb
inc
sbb
fs
pop
lds
orl
xlat
test
aam
fs
sub
jmp
pop
cmc
inc
sbb
fidivrl
aaa
xchg
jmp
and
add
inc
cmpsl
mov
out
cmp
push
mov
fwait
mov
in
lret
mov
stc
mov
clc
in
fists
shlb
in
and
push
aas
mov
xchg
fbld
add
mov
mov
fdivl
push
jl
inc
addr16
int
in
jne
xchg
fstpt
xor
add
outsb
in
mov
sub
sub
fs
mov
jmp
sbb
sub
mov
pop
rcrl
sub
add
jmp
stc
imul
lret
stos
cs
cmc
mov
cltd
aam
push
mov
inc
sub
mov
sahf
cmp
mov
fsubp
popf
jmp
cmpsl
push
xchg
xlat
jmp
jle
pop
jnp
inc
xchg
mov
xchg
mov
or
loop
and
in
fs
jae
repz
cmp
jb
mov
arpl
fiaddl
mov
adc
mov
daa
xchg
iret
test
push
scas
mov
pop
add
or
push
sbb
cmovns
cmpsb
in
fs
dec
mov
sbb
mov
mov
fdivrl
mov
mov
imul
in
outsb
fsubrl
fcomps
aam
inc
push
jae
sub
out
adcb
inc
je
mov
mov
mov
shrb
shll
faddl
imull
mov
jp
andl
and
mov
stc
sub
and
jmp
or
test
gs
sub
loopne
cmpb
inc
or
pop
jo
xor
jne
mov
dec
mov
lret
fdivl
push
clc
adc
inc
or
cmp
jecxz
loop
dec
movsl
in
push
andl
pushf
and
mov
test
mov
jbe
fnstsw
inc
stos
mov
js
pop
ret
adc
or
loope
sub
mov
int
aaa
sbb
ja
jns
subl
sbb
jecxz
add
or
cmp
or
hlt
addr16
mov
jmp
outsl
mov
test
cs
mov
sbb
popa
jno
sub
mov
push
jmp
jg
std
hlt
lret
repnz
ret
cmp
in
call
int
mov
sbb
pop
and
aad
and
xor
out
loopne
xchg
cmp
xchg
fwait
lods
js
or
in
sbb
sti
iret
cmp
popa
imul
pop
lret
inc
aad
sahf
cld
and
xor
sub
mov
into
or
sub
lret
and
push
adcl
mov
test
ss
sub
inc
es
into
sub
cmpsb
js
test
add
adc
sub
inc
std
iret
mov
lahf
mov
pop
pop
dec
frstor
inc
inc
jns
cmp
in
aaa
cld
mov
pop
jmp
or
pop
lods
mov
ds
mov
or
clc
inc
loopne
imul
pop
paddsb
lds
ret
dec
sti
mov
popa
gs
push
push
xchg
sub
push
sti
xchg
aaa
push
not
dec
loopne
inc
or
cmp
mov
mov
ja
dec
mov
pushf
xor
pop
add
pop
inc
push
sarl
mov
out
xchg
sbb
push
xchg
or
pop
ja
inc
xor
in
jge
sbbl
adc
arpl
pop
scas
jge
xchg
pop
jg
into
add
sbb
fsubr
pop
jecxz
xchg
xlat
lret
push
pop
pop
int3
movsl
sub
rcrl
mov
testb
inc
popf
clc
xchg
test
inc
jb
mov
or
js
add
das
pop
mov
cwtd
jmp
les
push
int
shll
mov
inc
adc
jb
fcomps
dec
in
adc
pop
adc
add
test
lods
js
das
sub
inc
add
jecxz
fildll
popf
int3
cmp
loopne
mov
xchg
cmp
xcrypt-cfb
cmpsl
daa
dec
xor
scas
aaa
pop
gs
cmp
inc
lret
xor
imul
das
adc
cmpsl
jg
lods
insb
push
add
jnp
pop
add
adc
aaa
sub
pop
mov
cmp
in
inc
fidivl
jne
fiadds
xchg
mov
mov
iret
cmp
mov
cmp
cmc
movntps
test
xchg
push
fisubrl
mov
andl
or
cli
in
pusha
scas
mov
hlt
das
pop
xor
push
push
fsubl
frstor
test
rcrb
aas
les
add
mov
xchg
dec
push
andl
not
jbe
xor
add
dec
inc
mov
out
inc
pop
or
ljmp
fsubl
ss
dec
daa
dec
pushf
and
ret
lret
and
add
push
dec
pop
fidivl
out
negl
movsb
xor
mov
enter
dec
cmp
lret
loopne
in
jbe
jmp
add
int
inc
cmp
sbb
mov
mov
or
gs
decl
jno
jbe
mov
cmc
cmp
jge
xor
cmp
or
pop
xchg
inc
sbb
jmp
aam
std
dec
dec
inc
sub
pushf
mov
sbb
shrl
sbb
inc
out
popa
dec
adc
mov
mov
fildl
rcrl
mov
xchg
xchg
and
or
aas
pop
jmp
cld
cmp
pop
mov
xchg
cmp
icebp
je
rcrl
negl
mov
xor
cmp
or
lret
imul
xor
inc
and
jge
xlat
imul
adc
fwait
das
insl
adc
movsb
mov
push
loope
adc
pop
cmp
test
into
ret
fdivp
imul
or
jbe
pop
pop
in
inc
lret
out
jae
lods
je
div
clc
int3
xchg
mov
pop
in
lret
add
in
je
fsubrl
jae
xchg
jno
pop
dec
jb
mov
fpatan
mov
mov
test
dec
imul
lods
std
cmp
cld
in
sub
imul
jnp
mov
sbb
fists
cwtl
shlb
and
bt
lock
aaa
mov
mov
fadds
or
shrl
test
cmpsl
mov
mov
add
ret
and
in
aaa
fwait
aad
cmpsl
xor
and
xor
movsb
in
or
sti
mov
sub
push
sub
mov
icebp
jb
daa
adc
add
movsb
ret
ja
ret
test
mov
push
les
dec
in
mov
out
pop
sbb
cmp
dec
xor
cmp
das
adc
and
int3
cmp
add
decb
adc
aaa
cmpsb
or
into
inc
xor
decl
in
xchg
sub
add
mov
aam
fprem1
xchg
insb
jnp
or
sbbb
cmp
or
mov
mov
std
les
call
add
mov
jbe
jnp
mov
sub
cmp
and
xor
dec
xchg
popf
stos
fsubs
mov
and
jnp
clc
cmp
or
std
jo
mov
std
xor
repz
aaa
bound
sbb
push
mov
pop
andl
sub
sarl
cmp
or
pop
loope
sarb
add
inc
jg
or
xor
mov
fs
jbe
das
push
jbe
xor
cmpsl
and
push
sbb
mov
enter
or
pop
jmp
jno
lret
aas
aaa
call
pop
das
stos
movsb
xchg
mov
mov
mov
out
jp
cmp
sahf
inc
cltd
pop
xchg
mov
in
or
pop
sub
add
lcall
dec
jl
out
cmp
mov
fstpt
imul
cmpsl
loope
outsb
ret
jle
cs
dec
cmp
in
inc
in
fistpl
pop
jo
leave
loope
mov
inc
push
outsb
in
addr16
xorl
popf
or
frstor
mov
dec
sbb
jp
dec
pop
xchg
and
cmp
cwtl
mov
or
jl
dec
incb
adc
sahf
lret
xor
cmp
loope
or
xchg
or
lea
mov
test
xchg
or
mov
test
xor
xchg
sbb
lret
cmp
fists
or
aaa
dec
xor
push
and
fdivrl
pop
pop
lods
xor
jnp
in
scas
xor
inc
pop
and
jns
lea
push
cmpsl
xchg
cmp
repz
xor
popa
jne
push
add
cmp
xor
mov
adc
in
cmp
sub
push
sub
or
xchg
lret
cwtl
je
xor
or
cmpsl
jno
loop
jb
mov
mov
cmpsl
xchg
pop
pushf
stos
testb
jmp
jbe
int
lret
cmp
movsl
cmp
roll
nop
aam
lahf
repz
sbb
lds
fadd
jnp
sti
cmpsl
popf
adc
dec
aam
popl
jo
mov
gs
and
sbb
xor
mov
jmp
aad
leave
xchg
out
mov
sub
mov
dec
icebp
cmp
aad
adc
fsubr
sbb
shll
fs
lea
lahf
jg
popf
in
cmpsl
dec
fimull
movsb
xor
or
scas
fwait
aad
je
frstor
icebp
adcl
call
push
pusha
pop
fnstsw
mov
pop
sbb
pop
pop
int
fldl
jns
out
and
in
mov
adc
fucomp
and
int
mov
in
cld
jp
mov
fildll
ffree
or
movsl
in
inc
jb
add
inc
loopne
sub
mov
xchg
test
lcall
push
push
aad
jl
int
vpunpckhwd
std
pop
cmp
in
ja
int
in
jnp
cmp
inc
push
pop
es
jne
or
push
adc
sub
jne
cltd
lds
in
dec
jmp
jmp
arpl
sub
mov
lods
jno
jmp
lcall
cld
push
cltd
and
lahf
adc
sbb
imul
sub
shrb
push
lahf
std
cmp
popf
xchg
pop
lea
adc
and
ds
and
insl
lahf
jno
in
sub
std
fwait
push
fdivs
cmp
lcall
imul
inc
push
gs
lret
insl
mov
and
lret
fcompl
hlt
lea
jno
adc
gs
mov
push
fnsave
fwait
inc
push
push
fwait
lods
xchg
ret
mov
sbb
dec
or
in
cltd
gs
jmp
pop
jno
rclb
int
jno
pop
push
insl
lret
fldcw
mov
and
jmp
lret
dec
mov
pop
imul
sub
flds
mov
add
aad
mov
jnp
xchg
cltd
jnp
imul
jmp
adc
cmp
and
xor
or
loop
insb
lret
add
inc
repnz
mov
add
stc
out
sbb
sahf
js
pusha
test
cmpsl
sti
popa
ret
sub
mov
frstor
adc
mov
ficoml
xor
sub
pop
sbb
cmp
sti
dec
sub
subl
out
hlt
inc
inc
xchg
jne
pop
adc
lock
stos
subl
cmp
xor
popa
sbb
lcall
in
mov
mov
sahf
xchg
popa
mov
sbb
scas
enter
subl
add
ds
push
je
pushf
mov
dec
sti
dec
sbb
loope
fwait
xor
mov
roll
jle
pushf
jnp
in
out
pop
aad
jbe
mov
ljmp
nop
int
xchg
out
mov
mov
fsubr
outsl
xor
cmp
movsl
mov
dec
aam
inc
add
repz
and
xchg
push
in
xor
lahf
xchg
ret
fs
push
andl
xlat
imul
in
jmp
cmp
loop
iret
sub
imul
add
mov
fnsave
sbb
loopne
mov
cld
stos
pusha
cmp
or
aad
fildl
or
mov
jl
imul
pop
rcrl
push
and
or
aas
xchg
add
xchg
movsb
xor
jbe
jbe
mov
fstpl
fadd
xchg
outsl
pop
shll
inc
lock
out
sbb
pop
pushf
loop
sub
movsb
jg
sub
das
add
mov
jge
outsl
add
aas
addl
addb
xchg
in
sbb
xchg
mov
push
cs
mov
cmp
scas
loop
cld
montmul
cmpsb
inc
mov
jmp
xchg
xor
arpl
shrl
loopne
push
xlat
imul
icebp
aaa
push
mov
add
cli
inc
test
cld
fists
jmp
cmp
insl
pop
mov
pop
movsb
addr16
mov
mov
mov
cmp
xchg
adc
jo
sbb
jne
or
sub
xor
and
jns
movsl
push
fwait
cli
sub
push
mov
stos
aad
fldcw
inc
lea
add
bound
inc
sbbb
loop
cmp
dec
dec
jecxz
out
rorb
inc
fdiv
jle
fstl
jns
movsl
xchg
mov
sbb
sarl
jmp
and
push
mov
or
or
cmpl
aad
aaa
sbb
sbb
leave
ds
sbbb
mov
cmp
outsb
stc
mov
dec
test
xchg
outsb
xchg
push
out
out
inc
push
out
pop
popf
sbb
mov
outsl
inc
push
pop
das
shrb
imul
jo
sbb
jmp
lret
add
sub
mov
mov
pop
push
adcb
dec
inc
dec
test
xor
xor
lds
popa
xchg
xchg
std
filds
pop
bound
fcom
push
push
jle
sbb
sub
incb
inc
sub
or
out
sbb
jne
add
cmpsl
stc
pop
xchg
sbb
dec
arpl
pop
inc
mov
in
testb
into
xchg
dec
lock
out
xchg
nop
movsb
out
lret
fstpl
aad
bound
dec
or
imul
pop
sbb
je
mov
sahf
loopne
dec
jne
gs
xchg
xor
pusha
fimuls
xchg
cmp
loop
cld
inc
push
sbb
out
xor
inc
xor
movsl
push
inc
xchg
orl
and
mov
pop
mov
push
push
imul
jmp
pop
cmp
sub
xor
imul
jb
jge
cmp
inc
das
inc
xchg
aam
subl
add
cmp
cs
mov
pushf
mov
aam
jbe
add
neg
nop
mov
pop
push
inc
xor
mov
jecxz
dec
adc
cmp
xchg
mov
xchg
jns
inc
cmpsl
icebp
cmp
lret
in
into
jle
pop
add
mov
add
pop
xor
pop
sub
fdivl
arpl
and
daa
xchg
pop
imul
pop
xor
aad
in
ja
outsb
adc
push
xor
jno
or
clc
loopne
jmp
pusha
dec
lods
xchg
popa
fs
xchg
jmp
cmpsb
jo
popa
mov
xchg
or
mov
sub
fcmovnbe
negb
inc
jo
pop
push
out
mov
jo,pt
push
icebp
and
dec
pop
sub
cmpl
adc
sbb
mov
and
pop
lds
rcrl
or
lret
push
mov
fmull
pop
inc
push
mov
xlat
jmp
std
shll
sbbb
nop
dec
adc
or
add
testl
mov
xchg
mov
pop
lods
mov
les
rorl
jae
pop
mov
adc
cmp
sbb
pop
es
cmpsl
cmp
or
cwtl
in
push
adc
jae
cmp
or
fistpll
sub
mov
push
dec
lret
pushf
and
popf
roll
and
pop
xor
push
adc
push
es
inc
mov
out
mov
int3
in
push
cltd
pop
in
jle
dec
cmpsb
insl
cmp
jno
cmp
jo
inc
test
sahf
mov
mov
lret
pop
std
orl
sti
loopne
xchg
movsl
sbb
xor
in
bound
cmp
dec
lea
mov
inc
mov
fs
ja
pop
mov
add
sub
imul
xchg
test
pop
jne
test
xor
xchg
mov
xor
stos
mov
and
shll
inc
in
ret
jno
jmp
in
xor
mov
push
or
repz
jno
dec
jge
bound
xor
sub
cmpsl
insl
lods
fwait
ret
lret
test
bound
xor
movsb
jns
popa
mov
jae
fsubrl
in
sub
cmp
int3
out
arpl
aaa
mov
inc
scas
adc
iret
add
xchg
mov
dec
dec
addl
frstor
cmp
and
icebp
iret
scas
xor
push
push
movsb
mov
out
insl
aaa
xchg
cmp
dec
sub
mov
mov
ror
or
mov
mov
pop
outsl
push
jecxz
inc
mov
xchg
movsl
out
notl
ficomps
or
gs
call
call
out
flds
cmp
cli
add
jb
fldt
xchg
mov
cmp
xchg
scas
pop
dec
inc
imul
pop
shlb
push
push
mov
pop
inc
mov
outsb
pushl
and
sub
je
ficoms
iret
jo
fwait
sub
or
movsl
lcall
xchg
les
xor
dec
scas
dec
sbb
cmp
out
xor
sub
push
lret
gs
scas
arpl
imul
dec
in
push
out
sbbb
int3
frstor
dec
test
or
jae
sub
inc
cmp
push
divb
fs
aaa
es
out
or
lods
mov
adc
daa
into
imul
push
jmp
filds
dec
jge
out
fisubl
inc
push
jp
out
imul
hlt
sbb
std
out
loopne
iret
push
test
in
and
push
mov
subl
arpl
cmpsb
cmpl
xor
xchg
cmp
jns
pop
movsl
inc
mov
dec
jo
je
mov
xchg
cmpsl
andl
mov
gs
cmp
aad
jnp
cmp
xchg
mov
stc
mov
fcoml
mov
jp
cmp
jns
loop
dec
add
cmp
cs
push
fidivrl
icebp
sub
test
mov
dec
add
lock
jns
icebp
dec
sub
xor
xchg
mov
and
dec
imul
cmpsl
or
cltd
or
mov
cmp
mov
sub
xchg
rep
mov
fimuls
mov
pop
loop
cmp
adc
std
mov
inc
xor
jge
add
inc
iret
imul
cmp
sbb
dec
mov
filds
mov
andl
mov
loopne
test
xor
adc
adcl
js
sbb
dec
mov
or
sbb
inc
pop
sbb
loope
pop
int3
pushl
jecxz
mov
cmp
and
mov
mov
adc
and
mov
loop
nop
xchg
mov
andb
cmpsl
xor
xchg
jb
mov
pop
jne
xchg
int3
outsl
push
clc
inc
pusha
ret
push
gs
jne
nop
or
jno
loop
dec
rorl
in
in
and
adc
imul
add
add
rorb
xor
xchg
cli
or
cltd
xor
int
xorb
or
cmp
xchg
repnz
inc
fsubrl
in
cs
sbb
push
lret
mov
inc
or
cmp
out
adc
inc
mov
pop
cmc
test
adc
aad
data16
jmp
in
stc
pusha
push
or
jne
arpl
rol
in
cmpsb
lods
aam
leave
aad
lcall
in
addl
movsl
in
jns
std
test
sbb
jge
rcrl
in
xchg
in
mov
jmp
push
movsl
jg
int
jnp
frstor
cltd
aad
sub
pop
aad
in
fstl
pop
in
loope
jge
jmp
gs
jl
adc
jmp
aad
pop
movsl
jge
lods
popf
mov
sbb
movsl
stos
pop
movsl
repnz
mov
push
xor
gs
and
cltd
rcl
fs
fwait
and
cs
int
add
ljmp
adc
cld
mov
gs
sbb
mov
push
gs
in
stos
ret
dec
in
sub
cmc
or
lcall
pop
aam
pop
mov
and
push
mov
imul
and
xchg
clc
aam
movsl
add
imul
inc
lret
jno
xor
sarb
in
jmp
cmp
pop
sahf
dec
in
xchg
jno
add
xchg
sbb
push
add
test
pop
jne
pop
mov
sbbl
jmp
xchg
std
and
dec
sbb
leave
in
jg
jne
pop
movsl
add
dec
cld
dec
or
in
lret
gs
insl
dec
sub
cld
dec
or
mov
in
sbb
pop
mov
dec
sbb
lret
cmp
loope
fwait
xor
popa
lret
adc
cmp
fstl
xchg
pushf
mov
fsts
mov
lret
push
dec
int
xor
cld
mov
mov
xor
cmp
sahf
mov
fdivr
mov
mov
mov
xor
out
adc
pop
mov
mov
sti
cli
cmp
mov
jecxz
and
in
int
cmp
repnz
in
xor
xor
outsl
aaa
fsubs
sbb
xor
iret
cmp
ja
dec
xchg
xor
cltd
out
push
xchg
iret
jecxz
test
fwait
inc
aaa
cltd
xchg
into
std
pop
ss
adc
test
rol
xchg
repnz
sub
insb
out
aaa
bound
out
inc
xchg
arpl
imul
or
mov
xchg
cmp
lret
push
in
out
nop
dec
fwait
imul
inc
aas
out
in
jne
and
fdivrs
ficoms
mov
sub
imul
stc
jns
inc
mov
jmp
mov
adc
ret
push
xor
jge
sub
cmp
push
xchg
fisubl
dec
pop
xchg
or
into
sbb
mov
cmpl
loop
test
mov
lods
pop
jnp
cmp
cmp
jge
pop
xor
xorb
mov
bound
xor
and
pop
mov
mov
cmc
xor
pop
sbb
inc
xor
out
push
ss
cmp
movsl
ss
inc
and
add
in
mov
imul
sbbb
inc
xchg
sbb
dec
pop
mov
dec
dec
xchg
adc
xor
push
inc
ss
adc
or
outsb
mov
xchg
je
test
out
mov
fdivrl
inc
sub
push
into
cmp
jne
out
shll
popf
shrb
fnsave
imul
jnp
and
cmp
mov
daa
in
fistpl
dec
mov
subl
or
fildll
and
pop
repnz
dec
cmp
lret
js
mov
cs
loope
mov
and
fs
andl
sbb
loopne
mov
es
js
and
or
iret
clc
or
call
mov
push
or
sub
mov
mov
and
imul
inc
adcb
daa
inc
out
xor
cmp
popf
je
hlt
sub
icebp
jbe
mov
or
adc
xor
jns
push
stos
mov
out
gs
cmc
add
dec
fwait
incb
xor
dec
push
and
cs
add
popf
rol
imul
shrl
and
sub
popa
adc
xor
xor
sti
in
sub
push
push
mov
loop
fs
pop
insb
movsl
imul
mov
imul
imul
mov
faddl
pop
mov
mov
cmc
popf
sub
sub
cmp
add
or
in
sbb
into
sub
sub
adc
in
push
xchg
mov
jo
sar
jmp
test
cvttps2pi
add
imul
add
push
fistl
ror
imul
dec
in
out
xchg
fdivl
pop
jnp
xchg
inc
icebp
aaa
dec
repz
add
jns
test
dec
lock
movsl
in
out
leave
xchg
xor
cmp
cmc
pop
or
adc
and
pop
cmp
xchg
add
fcmovnu
xchg
xchg
mov
xchg
cld
stc
dec
loop
inc
sbb
mov
imul
add
nop
jne
je
loop
mov
inc
sub
stos
xchg
inc
pop
xorb
push
in
add
orl
lods
cmp
dec
in
and
fildl
int
dec
outsb
lods
inc
jo
cmp
cmp
push
xor
jbe
cmp
mov
aad
mov
mov
call
cld
xchg
mov
push
das
popa
cmp
inc
xchg
sub
xchg
push
pop
fdivrl
sub
in
clc
jne
into
iret
xor
push
std
or
imul
pmaddwd
outsb
in
xchg
push
xchg
lods
jo
je
jl
xchg
jno
pop
jbe
dec
sub
add
int
std
cmp
fiaddl
adc
lahf
loope
test
mov
bndldx
xor
test
mov
outsl
xor
mov
fisubs
jl
sub
jo
fisttpll
sahf
pop
and
push
mov
js
xchg
mov
imul
mov
mov
daa
mov
adcl
xchg
in
mov
lahf
mov
std
orb
dec
cmp
push
cmc
je
movsl
js
pop
cwtl
fistpl
hlt
cmpsb
sub
xchg
mov
or
cmp
mov
sti
outsb
add
jne
das
and
jne
fwait
push
adc
jl
jecxz
pop
dec
fst
aas
in
sub
mov
cmp
std
nop
pushf
in
aam
or
jae
fmull
add
fcoml
mov
pop
mov
dec
cli
fidivrs
and
ficoml
repnz
jne
mov
sub
int
mov
mov
pop
fdivrs
sub
out
test
test
dec
jecxz
sub
enter
xchg
imul
lds
sbb
or
cmpl
pushf
cmp
dec
imul
loope
fs
cmp
stc
xchg
xchg
push
push
push
gs
stc
push
jp
xchg
into
cmp
dec
lahf
stos
push
sbb
jno
jns
repnz
xorb
mov
outsb
leave
pusha
dec
pop
cwtl
xor
leave
cmc
lcall
adc
push
sti
ja
sbb
popf
insb
adc
pop
and
lods
in
ret
sbb
mov
repz
cmc
mov
imul
test
or
mov
xchg
nop
mov
pop
adc
fs
fdivl
jmp
lret
mov
xor
dec
jae
jno
imul
dec
and
push
sbb
andl
jne
xchg
cmp
xor
adc
xor
fdivr
clc
cli
mov
imul
jmp
cmp
iret
jne
iret
push
fadds
mov
xor
mov
lods
inc
pop
add
pop
inc
jl
leave
loopne
jmp
xchg
nop
jo
pop
inc
xchg
and
jmp
in
movsl
mov
rcll
jp
jecxz
and
iret
incb
xor
movups
mov
into
call
in
dec
mov
pop
popa
ss
jg
lods
in
in
bswap
adc
icebp
stos
in
hlt
cmp
mov
mov
mov
inc
mov
push
js
outsl
jmp
push
lret
in
dec
push
imull
jle
or
and
or
add
mov
cltd
push
pushl
in
pop
loopne
loope
repnz
xchg
xor
call
shl
inc
inc
hlt
adc
or
jbe
jmp
push
push
pop
cmp
cmp
fldl
xor
cltd
jo
mov
pop
loope
mov
xor
mov
add
clc
mov
push
and
cmp
push
lcall
fadd
dec
jo
ret
cmpsb
cmpsl
adc
inc
in
loopnew
in
adc
inc
pop
shll
cmp
psubsw
rcr
scas
cmp
mov
or
xchg
jns
jb
cmp
cltd
lods
sub
pop
sub
jmp
outsl
mov
push
jbe
stc
aad
in
cmp
or
pop
xor
ret
js
imul
xor
or
pop
loop
inc
mov
mov
rcll
addr16
movsb
pop
mov
sbb
xor
in
jnp
es
or
push
fcmovu
cs
mov
push
sbbb
fbld
xor
in
out
or
sub
sub
and
fildll
jg
insb
data16
bound
movsb
cld
cli
sbb
iret
repnz
adcl
and
shll
inc
xor
and
or
mov
jp
inc
mov
mov
lahf
add
dec
outsb
mov
mov
in
in
xchg
xchg
gs
xchg
lret
call
gs
fcomp
lea
and
push
push
and
cwtl
les
repz
push
aad
inc
ss
jae
mov
xor
or
cltd
mov
inc
shll
pop
jae
fidivs
sub
mov
cmp
shlb
fsubl
adc
sbb
cltd
jmp
gs
mov
mov
jnp
repnz
rcl
mov
jns
and
cmp
mov
fwait
jp
sbb
dec
dec
in
inc
jae
jnp
sub
cwtl
aas
jmp
sahf
in
mov
or
es
mov
lret
jmp
mov
add
aam
inc
add
mov
jne
mov
jo
xchg
rorb
ficoms
and
sub
inc
add
insl
test
xchg
xor
cmp
cmpl
jge
ret
pop
jo
lret
sub
xor
and
add
roll
xchg
mov
cwtl
sub
sbb
sbb
dec
xchg
out
ljmp
sub
sbb
subl
xor
xor
jmp
fnstcw
sub
xchg
addr16
in
in
imul
aas
pop
jecxz
daa
mov
lahf
jmp
scas
dec
push
pop
adc
xchg
sti
mov
push
aad
mov
enter
sbb
and
popf
push
or
cmp
in
daa
adc
pop
inc
dec
lret
push
imul
inc
or
fnstenv
adc
leave
pop
arpl
repz
dec
fists
ret
jne
insb
jno
shrl
mov
sbb
jne
mov
icebp
or
push
in
pusha
and
cmp
xor
pop
icebp
xchg
pop
jns
pop
pushf
adc
cmp
sub
test
jmp
ss
xchg
lock
orl
cmpl
aad
nop
outsb
and
sub
enter
mov
xor
lret
mull
adcl
adc
pop
icebp
inc
cmp
cmpsb
cmp
jge
imul
xor
das
scas
les
shlb
jbe
int
std
in
iret
push
lods
mov
loopne
cmp
xor
cmp
dec
cmp
pop
stc
lret
mov
stc
popa
jl
fwait
sub
pop
bound
cmp
mov
pop
hlt
xchg
cmc
movsb
adc
pop
mov
outsb
in
and
icebp
mov
cmp
rorl
arpl
pop
fwait
bound
scas
inc
fnstenv
sub
mov
push
lcall
cwtl
aam
stc
cmp
neg
in
cmp
imul
jns
inc
dec
icebp
pop
xorl
jl
outsl
inc
aad
aad
push
lods
xchg
cmp
ljmp
stos
mov
mov
movsl
dec
jbe
dec
cli
sbb
xchg
lret
fcomi
out
outsl
popf
daa
mov
ja
sti
inc
out
mov
mov
in
dec
jmp
jp
inc
lods
lret
movsl
mov
cld
aad
popa
dec
xchg
jge
dec
cmp
sub
sahf
stos
in
ret
ss
lock
pop
std
cmpsb
stos
xchg
test
call
add
xchg
pop
cmp
or
sub
movsb
jno
cmpsl
sub
jmp
xor
or
rorb
pop
negb
je
add
gs
in
mov
roll
xor
and
or
int
jbe
xor
pop
cmp
in
aaa
sbb
sbb
and
cmp
pop
popa
sub
mov
sbb
rorb
fsubrl
cmp
xor
mov
xchg
xchg
aam
and
sbb
test
mov
jno
iret
andb
adc
mov
adc
mov
movsb
sahf
mov
cmp
jmp
lahf
mov
cmp
jnp
add
stc
out
scas
mov
and
xor
adc
or
sub
adc
push
jb
jb
cs
cli
mov
push
lods
cld
xchg
jbe
aam
jb
and
lock
pop
xchg
xor
sub
mov
inc
rolb
pusha
pop
insl
adc
lahf
aaa
into
inc
mov
mov
pop
cmp
fdivrl
push
mulb
adc
or
dec
dec
pop
xchg
cmp
mov
jne
pop
push
shr
or
popa
push
inc
push
out
daa
mov
jecxz
std
cmp
pop
fsubrs
mov
add
and
pop
mov
cmp
push
out
hlt
cmp
push
fcmovbe
movsb
idivl
bound
xor
idivb
es
mov
fsubl
sbb
pop
pop
std
movsl
cmp
xchg
xor
dec
iret
cmp
cmp
fimuls
lds
test
adc
les
push
inc
mov
adc
out
dec
push
in
loopne
sub
jnp
mov
mov
test
in
bound
fwait
inc
xor
rcrb
in
das
out
sbb
and
xchg
sbb
fidivs
cli
adc
ja
mov
cmp
mov
jl,pn
fs
push
sub
int3
xor
xchg
add
and
stc
dec
jae
push
mov
addl
movsb
xchg
cmovp
out
xor
popf
or
addr16
imul
out
xor
pop
nop
incb
xchg
mov
xchg
xor
cmp
movsb
jp
cltd
inc
and
ljmp
xor
or
fidivrl
in
xor
test
stc
jmp
in
inc
push
xchg
jmp
dec
inc
xchg
nop
mov
cmc
pushf
rclb
xor
xlat
lret
lret
pop
mov
dec
jecxz
sbb
shlb
roll
mov
mov
xor
xor
jno
or
mov
and
cmp
xchg
pop
pop
fldl
sbb
loopne
out
in
movsl
fcoms
and
adc
and
lret
popa
shll
dec
mov
dec
add
cmc
and
push
aam
cli
mov
pop
push
cmpsl
inc
jmp
and
and
pop
dec
and
test
xchg
out
shll
mov
add
add
or
lock
mov
fwait
cwtl
fld
pop
or
mov
mov
adc
insb
xlat
loopne
aad
dec
cmpsl
pushf
sbb
or
out
repz
mov
pmulhw
pop
sbb
cwtl
sti
sub
and
rcll
lcall
lret
dec
outsl
jne
pop
mov
jle
sub
xchg
mov
fistl
or
test
inc
inc
xchg
adc
lret
bound
jl
adc
xchg
fidivrs
adc
shrl
or
sub
add
scas
mov
ret
cmp
call
dec
cmp
add
mov
adc
test
clc
call
hlt
and
inc
inc
dec
push
mov
push
or
in
cmp
scas
pop
loopne
xor
xor
mov
add
fcoml
loopne
sbb
test
sub
jae
or
insl
pop
dec
xor
inc
add
jb
test
in
xor
or
lret
push
cmc
inc
mov
gs
jno
call
les
pop
jge
sbb
mov
pop
subl
in
adc
outsl
sub
mov
mov
add
inc
bsr
fwait
in
shl
cmpsb
inc
and
push
lea
pop
je
sahf
mov
int
add
jns
push
jne
sbb
in
mov
cltd
xor
push
divb
hlt
xlat
or
push
mov
popa
arpl
push
mov
and
add
pop
aad
cmp
xchg
sti
sub
add
pop
fsubrs
loope
xor
stos
loopne
xlat
dec
scas
add
mov
jmp
jae
fildl
dec
cmp
mov
scas
xchg
jl
cmp
dec
cmovbe
push
inc
or
int
sub
popa
xchg
movsb
ret
cmp
inc
push
repnz
bound
mov
testl
xorl
push
mov
enter
in
sbbb
add
push
xchg
in
xchg
mov
ja
xor
fadd
outsb
std
adc
test
push
mov
jno
xchg
dec
rol
dec
add
jne
les
sub
loop
mov
xchg
stc
inc
out
push
cltd
push
mov
mov
nopl
inc
mov
dec
sub
ficomps
cmp
mov
cmp
dec
jno
fbld
push
mov
jne
jae
fmull
add
ja
mov
adc
and
test
cmp
loopne
addl
in
shlb
xor
xchg
loopne
outsb
pop
xchg
jne
sbb
imul
push
or
push
sbb
add
lret
adc
cmp
xor
popa
add
imul
int3
mov
loope
icebp
test
in
bndldx
in
in
xor
cltd
int
lods
cmc
dec
das
sub
ss
dec
outsb
adc
adc
xor
ljmp
fnsave
inc
xchg
mov
test
jae
pusha
jnp
add
sbb
cltd
nop
test
cmc
inc
xchg
enter
test
add
mov
xchg
dec
dec
xchg
lret
xchg
xor
aas
cmp
sbb
jns
xchg
mov
xchg
and
cmp
pop
sbb
adc
jne
mov
push
fsubrl
mov
xchg
icebp
push
lods
adc
inc
add
cmp
mov
pop
sbbl
adc
add
in
sbb
loopne
mov
fisttps
pop
xchg
popa
pop
add
pushf
sbb
lret
daa
lea
mov
nop
pop
ja
rcrb
push
sti
cli
cmc
cltd
loopne
adc
js
add
sub
gs
shrb
xor
or
aad
lea
hlt
cmp
jns
clc
jecxz
insb
orl
outsl
jbe
iret
mov
les
pusha
outsb
les
lods
dec
mov
jge
dec
aas
sub
or
dec
pop
in
mull
lods
ret
iret
xchg
sub
inc
and
lret
xor
mov
dec
sub
sub
insl
nop
push
mov
sub
int3
or
cmpsb
fwait
xorl
ds
mov
mov
out
and
sub
xchg
fidivrs
test
xchg
push
fwait
mov
add
hlt
push
imul
in
sbb
dec
add
mov
mov
aaa
jne
adc
cld
or
int
sub
cwtl
mov
pop
push
mov
jecxz
and
in
lea
loope
pop
sub
stc
cmp
sbb
scas
imul
movsl
mov
outsb
test
mov
xchg
push
ret
pop
inc
daa
sub
fwait
inc
cmp
test
cmc
dec
mov
movsl
add
addl
add
mov
sti
inc
mov
pop
ja
add
xor
in
jecxz
cmp
in
jno
dec
add
add
cmpsb
cmp
and
pusha
sbb
sub
aam
mov
repnz
mov
mov
push
sbb
leave
mov
scas
ss
mov
lock
icebp
push
pusha
adc
push
jl
std
mov
sbb
xor
xchg
lret
fs
mov
mov
test
je
adc
push
loope
in
daa
or
xchg
cmp
das
jmp
fwait
jl
jae
mov
xorb
mov
shrl
cltd
stos
pushf
movsl
push
in
cmpsl
movsl
add
aad
in
mov
mov
mov
jecxz
pushf
push
neg
leave
sub
mov
and
imul
dec
inc
mov
cld
xor
jo
sub
inc
adcb
rcll
add
push
mov
jo
xor
inc
repz
mov
filds
loop
xchg
aaa
into
movsb
loope
add
xor
sbb
and
and
decl
fdivrl
add
jp
mov
fcomip
add
mov
add
out
es
sbb
test
jno
dec
or
hlt
inc
sub
nop
not
cwtl
fsts
cmp
cwtl
mov
push
leave
jmp
clc
mov
fucomi
aad
bound
shrl
ja
mov
cmpsl
mov
pop
ss
lods
insl
imull
lds
jg
scas
mov
jl
mov
popf
das
adc
mov
jmp
cmp
bound
in
add
cmp
sub
pushf
mov
repz
mov
imul
cmpl
sbb
pop
in
sbb
or
or
ret
mov
addr16
mov
add
movsl
dec
mov
xchg
into
mov
inc
cmp
pop
andl
dec
xor
push
inc
test
sbb
xchg
inc
fiadds
imul
andb
jno
push
lret
add
imul
and
jno
ficoml
dec
out
sub
xchg
pop
mov
cmp
std
pop
icebp
ss
daa
fs
arpl
out
mov
xor
in
or
xor
mov
aam
sbbl
xchg
sub
daa
leave
adc
cmp
pop
sarl
push
ficompl
int3
dec
mov
xchg
or
fdivrl
js
std
push
dec
jge
xchg
test
xchg
xor
pop
xlat
ret
fs
jb
add
mov
sub
or
push
cmp
and
push
mov
or
ss
in
sub
imul
mov
mov
lret
and
xor
aam
sub
xchg
add
add
inc
cli
xchg
orb
xchg
gs
inc
sub
in
inc
sub
das
movb
inc
xor
or
repnz
cmp
dec
sbb
xchg
jmp
in
jae
lret
in
xlat
pushf
fs
mov
cmp
cmpsl
pop
mov
mov
addl
mov
icebp
xor
adc
sbb
stos
ficomps
dec
pop
js
sbb
ret
mov
sub
mov
jnp
jmp
insl
jp
xor
xor
imul
pop
repnz
jnp
ret
xor
pop
sahf
cmp
or
cmp
jbe
out
aas
loopne
sub
rorl
in
fcos
call
nop
adc
pop
dec
out
jmp
stc
mov
dec
loope
cmc
cmp
mov
cwtl
nop
xor
xchg
ss
or
cmp
bound
pop
or
jl
or
cmp
iret
xchg
adc
cmp
mov
inc
sbb
dec
cmpsl
jae
push
insl
aas
push
cmp
jns
cmp
call
xor
hlt
xchg
and
jbe
xchg
push
lcall
dec
sbb
cmp
push
popf
cmp
loop
or
jne
ja
das
pop
mov
ss
push
push
out
and
in
dec
int
inc
pop
adc
nop
adc
push
ljmp
lods
adc
mov
push
cmpsb
int
mov
xchg
cmp
xlat
add
loope
fwait
inc
cwtl
mov
mov
gs
cmp
pop
mov
jae
into
push
ja
pushf
jecxz
sub
sbb
xchg
xchg
adc
mov
dec
sbb
orl
add
push
mov
mov
jg
mov
outsl
shrl
aas
mov
notl
int3
stc
loopne
mov
ss
test
or
in
cwtl
inc
divb
and
mov
aad
jge
decb
movsl
cld
mov
addl
push
aaa
xchg
movsl
cmp
mov
fdivrs
mov
fimuls
xor
cmp
mov
add
movsl
push
or
push
bound
out
and
icebp
push
or
add
pop
jae
cld
imulb
jp
lea
aaa
inc
sub
jne
loopne
dec
das
fildl
mov
xor
push
and
sub
arpl
jne
repz
xlat
jmp
xor
icebp
ret
or
data16
or
inc
setbe
pop
loope
or
fildl
sub
xchg
push
push
cmc
pop
inc
scas
cmp
mov
dec
mov
sbb
mov
jo
sub
pop
pop
mov
xchg
in
lcall
xor
push
fdiv
xchg
movsb
sub
aaa
sbb
leave
or
mov
jno
cmp
in
cmp
mov
ljmp
cmc
push
mov
pop
sub
incb
inc
lahf
pop
pusha
cmp
xchg
mov
lret
pop
xor
jmp
inc
test
inc
lock
mov
or
mov
jo
push
insl
stos
xchg
push
aam
imul
repnz
cmp
push
lcall
pop
mov
xchg
out
push
fdivrl
ret
sahf
xor
insl
xchg
dec
and
sarl
cmp
pop
sbb
or
add
or
lret
dec
adc
clc
cmp
sbb
lret
pop
test
xor
adc
loopne
pop
es
dec
adc
mov
xchg
mov
in
adc
fstl
leave
popa
xorl
mov
sbb
dec
sti
jecxz
mov
push
std
pushf
enter
xchg
jne
in
add
lock
in
or
add
mov
fdivrl
or
lock
mov
sub
sti
pop
shl
push
movsl
ds
push
add
inc
xchg
std
dec
dec
lods
idiv
mov
mov
xrelease
jmp
push
cmp
mov
lahf
adc
xor
sbb
dec
add
sub
or
in
movsl
inc
cmp
mov
pop
popa
or
outsl
inc
lret
movl
leave
pusha
push
lret
jg
mov
iret
stos
add
push
cli
mov
fcompl
movsb
stos
daa
shlb
push
pop
lret
adcl
sbb
and
mov
mov
mov
inc
lahf
xchg
call
das
sub
test
xor
xchg
mov
inc
pop
xchg
pop
adc
cmp
movb
daa
jg
add
pusha
ja
arpl
adcl
insl
insl
out
test
imul
xor
sbb
mov
or
in
mov
inc
das
daa
mov
imul
add
push
and
dec
out
and
shll
mov
cltd
cmp
xchg
mov
test
pusha
sti
mov
sti
jg
mov
test
fwait
xor
or
push
lahf
cmc
mov
add
subl
es
icebp
and
jb
mov
cmpsb
xchg
mov
out
das
sbb
pop
mov
dec
out
pop
pop
add
movsl
popa
push
leave
pop
jle
and
imul
ror
pop
or
and
xor
inc
loopne
hlt
vmovlps
or
das
mov
cs
sbb
xor
xorl
sbb
ja
inc
out
fistl
in
jne
cli
dec
clc
sbb
push
cld
cs
fistl
add
roll
inc
lahf
bound
sub
lret
xchg
cld
jo
add
jmp
cld
sbb
sub
hlt
lock
cmp
mov
in
and
sbb
loope
test
xchg
xchg
mov
xor
adc
sbb
and
cmp
mov
das
dec
bound
or
aaa
pop
in
cmpsb
popa
sub
jge
mov
rcr
dec
jne
scas
addb
aas
pop
test
push
jns
jnp
sarl
rorl
fnstenv
test
jns
xchg
lea
insb
pusha
mov
les
sbb
je
and
mov
loope
aad
test
add
dec
pop
rcll
mov
or
std
push
lret
cltd
mov
cmpsl
add
shl
movsl
in
adc
sbb
ret
inc
outsb
dec
aad
push
hlt
jle
jb
dec
in
jmp
cmp
jns
cmp
and
loopne
loopne
pop
lahf
sbb
adc
das
and
jp
mov
fdiv
inc
sub
mov
dec
push
pusha
pop
sub
adc
jne
xchg
sti
mov
movsb
andl
cltd
mov
and
sbb
aad
or
or
and
sub
std
sbb
xchg
push
loope
pusha
in
mov
lret
cmp
data16
mov
cltd
leave
pop
sub
push
pop
lahf
fwait
insl
inc
pop
xorl
push
add
and
sbb
cmp
dec
popf
subb
test
in
sarb
sbb
test
enter
aad
mov
divl
and
xor
cld
cwtl
sub
loop
xchg
sub
xor
fbld
in
adc
jo
repz
xchg
and
lahf
push
loop
pop
inc
mov
movsb
mov
fs
adc
andl
xchg
js
out
xor
in
and
mov
inc
std
repz
sar
subb
clc
inc
loop
lods
xor
push
int
inc
ds
shll
xchg
and
iret
loopne
xchg
and
inc
lods
cmpsb
pop
mov
sbb
mov
lret
and
lea
stc
xor
mov
pop
pop
push
fcomi
mov
pop
lods
inc
cwtl
stos
rcl
mov
cmp
mov
sub
mov
mov
sti
cmp
sbb
push
ror
rorl
sub
cmove
addr16
push
ret
hlt
xor
and
xchg
mov
pop
mov
mov
pop
dec
stc
and
aas
decb
inc
cmp
das
cmp
inc
sub
add
loopne
aam
jbe
mov
jo
lret
cmp
cmpsl
or
dec
inc
push
and
adc
cmpsl
call
js
pop
pop
pop
je
frstor
cmp
cmp
pop
jl
fimull
nop
stos
dec
test
jge
mov
fnstenv
popf
gs
or
pop
subl
rol
pushf
xchg
aas
add
push
sarb
xchg
imul
pop
mov
lea
xchg
push
int
sarl
sbb
add
adc
imul
xchg
mov
fcmovnb
mov
cltd
and
jmp
adc
std
bound
in
sbb
cmp
insl
sub
xor
xchg
popa
popa
sub
push
js
cwtl
lods
pand
adc
fwait
arpl
dec
push
in
aas
pop
sahf
lods
or
sbb
mov
and
fdivr
pop
cmp
jne
daa
repz
cmp
inc
push
stos
fcmovnu
aad
ljmp
lcall
push
sbb
lock
lret
and
dec
pop
and
or
mov
jge
aad
push
lods
mov
adc
inc
xor
imull
sbb
cmova
out
sub
ss
and
pop
out
pop
mov
aam
xchg
loopne
sbb
or
out
and
sub
jne
mov
in
sub
cmp
js
in
mov
jmp
inc
cmp
mov
mov
push
or
loop
mov
inc
hlt
cmp
or
das
fisubs
adc
imul
mov
movsb
jle
and
lahf
cmp
mov
mov
jmp
sbb
cmpsb
sbbl
cmpsb
or
repz
adc
inc
cld
in
ja
or
sbb
mov
push
pop
cwtl
and
and
inc
push
jno
imul
lret
xor
xor
sub
pop
or
jnp
xchg
cld
sbb
lret
pop
sub
jp
mov
shll
call
popf
jecxz
icebp
add
popa
dec
movsb
sbb
leave
lret
scas
pop
fldenv
sarl
mov
iret
pop
mov
aam
cmpsl
push
andl
add
fdivs
decb
adc
fdivs
cltd
das
pushf
mov
fcompl
outsl
mov
push
xchg
pcmpeqb
push
lea
pop
xchg
inc
push
and
cmp
push
popf
jle
adc
les
enter
mov
dec
mov
xchg
cltd
clc
and
mov
push
inc
xchg
add
cmpsl
rorl
pop
sbb
aad
int
sbb
aad
lret
jne
sub
pushf
mov
pop
aad
mov
into
fucomip
inc
push
aam
daa
cmpl
pop
rcr
adc
push
fistpl
pop
iret
cs
and
pop
or
fs
sbb
movsl
outsb
xchg
adc
ret
pop
hlt
mov
xchg
xor
cmpl
push
cmc
mov
lea
inc
hlt
or
cmpsl
aad
sti
lds
and
adc
sbb
push
daa
cmpl
icebp
push
pop
mov
or
mov
or
push
jp
mov
push
imul
inc
repz
cmp
jnp
mov
stos
fadd
push
mov
push
sub
iret
das
or
dec
add
sub
jae
and
pop
dec
shl
pusha
sbb
inc
mov
stos
imul
fs
rcll
lea
das
mov
test
faddl
insl
inc
bound
xchg
test
add
jbe
push
adc
pop
pusha
mov
lret
mov
pop
mov
push
jp
xor
mov
cmp
frstor
daa
jl
cli
jb
cmp
movl
iret
dec
imul
sub
and
loop
movsb
movsl
out
xchg
fnstcw
push
xchg
daa
into
jmp
push
sub
mov
add
cmpsb
sbb
and
cmc
add
inc
jle
jo
inc
cmc
mov
or
jne
test
jae
aaa
lret
leave
sbbl
add
adc
out
sbb
int
test
or
aam
xor
and
call
cmpl
mov
rcr
ljmp
lret
dec
jge
imul
mov
stc
sti
loop
mov
pop
cwtl
bound
mov
in
fldt
mov
cmc
lret
in
psubsw
and
cltd
xor
xchg
add
cmp
or
cmp
sbb
imul
cmpl
loope
aam
shll
loopne
mul
ja
pop
xor
cmp
jl
inc
pop
push
ret
sbb
cltd
out
mov
fs
dec
add
lcall
or
cld
lcall
out
mov
inc
pop
push
add
mov
pop
sbb
iret
outsl
and
xor
stc
dec
mov
push
mov
sbb
mov
or
icebp
adcb
pop
je
hlt
cltd
lret
dec
arpl
push
push
inc
jmp
stos
adc
mov
repnz
popf
add
movsl
lahf
xchg
daa
dec
fstps
outsb
psubd
inc
addl
and
pop
outsl
es
inc
pop
push
popf
xor
cmp
push
pop
xchg
in
pop
cmp
and
dec
cmpsl
mov
dec
int3
pushf
icebp
mov
lahf
sbb
std
inc
or
repnz
lret
and
push
inc
imul
gs
push
jg
mov
aas
and
sbb
inc
orl
out
cmp
pusha
in
fucomp
mov
push
dec
xchg
inc
dec
iret
sbb
sub
add
mov
inc
xor
xor
cmp
push
xor
loop
inc
adc
push
sub
dec
xchg
pop
sbb
mov
bnd
dec
xor
repnz
testb
jl
add
dec
adc
push
adc
ja
push
or
call
aaa
out
aaa
mov
dec
lret
mov
lods
or
popf
sub
mov
or
inc
xchg
mov
cmp
jmp
loopne
cltd
test
mov
std
sbb
cmpsb
call
inc
cld
daa
xchg
xchg
jge
aad
jg
lahf
mov
mov
dec
jle
xchg
cld
subb
and
mov
cmpsl
and
rcrb
call
xchg
fwait
addr16
pop
pop
xchg
sbb
test
aad
jmp
movsb
lods
pop
mov
lret
add
mov
scas
jo
pop
lds
sti
pop
xor
je
divb
je
pop
and
add
stos
leave
cmc
xchg
bound
dec
mov
jbe
add
lods
or
sbb
hlt
and
xchg
dec
adc
mov
or
xchg
stos
jmp
inc
ja
and
mov
icebp
cmp
fs
lret
rorl
cmp
fiadds
xchg
ljmp
ja
sbb
imul
shrl
dec
clc
movsl
fnstsw
dec
icebp
test
loop
pushf
cmp
cs
outsb
mov
cltd
in
push
inc
mov
xorl
mov
outsb
push
xchg
cltd
mov
sbb
cmp
mov
repz
pop
dec
gs
xchg
movsb
dec
jbe
test
pop
lcall
mov
xchg
jnp
cmp
adc
dec
in
stc
push
pop
jns
pop
pop
in
inc
dec
test
inc
add
jg
cmp
idiv
push
dec
loopne
inc
sbb
pop
or
sub
sub
adc
xor
xchg
aaa
sbb
les
push
mov
out
jne
iret
imul
mov
cs
or
mov
scas
imul
aaa
iret
sub
jle
rcr
sbb
mov
pop
pop
inc
sbbb
sbb
sti
jg
inc
mov
adcl
push
icebp
cmp
popa
mov
jmp
test
jno
call
mov
js
jo
adc
inc
pop
mov
jno
pop
inc
adc
sha1msg2
in
cmpb
xorl
cs
jnp
cmp
pop
sub
mov
sbb
ds
jmp
and
cmp
call
ret
mov
outsb
mov
pop
xor
push
rclb
ds
or
push
sbb
sub
sub
lret
dec
mov
push
roll
out
je
aam
or
outsb
sbb
add
xor
cltd
inc
adc
inc
out
jmp
ss
dec
lahf
adc
or
aas
xchg
jg
cs
in
push
xchg
mov
or
into
cmp
adc
or
cmpsb
popf
pop
pop
imul
nop
xchg
mov
mov
xchg
cmp
aam
idivb
dec
es
and
pushf
jne
add
icebp
sbb
inc
popa
xchg
ret
insl
push
iret
cmp
cld
and
mov
xor
ret
sbb
pop
mov
test
nop
fisttpll
jns
mov
scas
subl
into
sbb
dec
pushf
mov
ret
aaa
pop
test
sbb
loopne
mov
jo
sub
aaa
cmp
and
sbb
jns
sbb
sbb
mov
mov
jle
and
cld
push
xor
mov
jnp
mov
lahf
mov
sub
fldcw
inc
add
pop
cmp
mov
xor
mov
dec
and
out
les
adc
cmp
mov
aaa
mov
lock
in
push
dec
shlb
out
loopne
movsl
test
cmp
insl
mov
cltd
xor
dec
mov
insl
rcrb
scas
mov
test
js
mov
cmpsl
sbb
stos
cld
cmp
and
mov
jae
lret
loope
dec
clc
mov
sar
xorl
dec
sbb
or
jmp
jmp
cmpsl
lds
fmuls
jbe
out
sub
fimuls
adc
lds
pop
sub
or
mov
push
jmp
mov
pop
fnstcw
inc
inc
and
cwtl
test
xchg
js
in
pop
lds
sahf
add
ss
aaa
mov
push
and
inc
inc
push
es
data16
imul
xchg
bound
mov
mov
shll
and
or
inc
mov
mov
cltd
and
xor
pushf
mov
std
add
sub
loop
cltd
lock
sub
push
cmp
js
cmpl
mov
push
inc
in
dec
pop
push
testl
xchg
jb
cmp
push
mov
fcmovnbe
adc
into
cmp
pop
or
inc
fidivl
cmp
mov
popf
cli
in
in
xchg
pcmpeqb
sub
mov
push
pop
sbb
bound
icebp
sbb
and
test
in
lcall
mov
cmpb
jge
xchg
xor
imul
adc
outsl
sub
mov
adc
sub
jbe
and
mov
adc
push
jge
cmpsl
pushf
test
cs
xor
dec
sub
or
xor
in
xchg
subb
out
stos
jae
xor
jno
pusha
push
mov
aad
mov
xor
cltd
jae
and
mov
jb
fdivl
movsl
and
push
jns
xchg
jmp
fwait
and
inc
enter
fs
rorl
int
pop
loope
bound
jmp
push
cwtl
xchg
lret
iret
in
adc
and
xor
or
repz
rclb
mov
shrl
cmp
loope
int
inc
mov
push
popf
loopne
es
dec
enter
fwait
cmp
sub
jecxz
lret
jne
and
hlt
cs
xchg
mov
pop
cld
in
sbb
pop
pusha
sub
pop
pop
dec
mov
xlat
mov
jo
in
sbb
mov
or
loopne
ds
test
jo
mov
std
into
cmp
and
outsb
xor
lahf
inc
and
jmp
mov
cld
cmpsb
mov
in
loopne
mov
lret
inc
xorl
mov
data16
or
sbb
push
pop
mov
es
repnz
cmp
xor
leave
dec
pushf
cltd
ja
adc
mov
lock
sub
call
push
cmovnp
lcall
push
push
jb
cmpsl
sbb
outsb
divl
jg
dec
and
movsl
inc
adc
les
sub
xor
cmpsb
rclb
out
aad
lret
fwait
add
rolb
or
call
mov
add
push
lods
sbb
hlt
inc
jmp
sub
lret
jmp
jl
add
add
xchg
ja
add
aad
aam
subl
mov
sub
or
rclb
pop
fucomi
neg
inc
xchg
jmp
push
outsb
ljmp
aad
test
inc
inc
fists
mov
andb
test
push
and
xor
das
adc
xchg
jmp
mov
mov
cs
mov
xor
dec
xor
in
push
adc
mov
popl
mov
push
cwtl
test
in
popa
out
stc
jne
mov
jge
imul
adc
ljmp
in
cmp
popf
mov
jle
add
mov
xor
sub
lahf
je
in
sbb
push
fisubrl
mov
push
cmp
fstpl
stos
pop
xor
cs
fmull
xchg
mov
aad
in
inc
mov
lret
inc
and
ds
lods
es
push
lret
jl
iret
add
mov
pop
inc
pusha
jle
fiaddl
leave
or
addr16
sub
testl
fidivs
mov
jae
frstor
xor
push
xchg
jne
push
fs
lods
into
sub
lret
jmp
sub
or
add
in
aad
movsb
icebp
push
imul
dec
xchg
mov
sub
push
dec
inc
or
movb
xor
in
leave
xlat
and
xchg
sbb
cltd
cmp
ret
add
aam
les
cmp
ljmp
sub
pop
sub
adc
sbb
jo
and
sarb
mov
sbb
cwtl
ljmp
mull
or
or
push
cmpsl
xor
rcl
inc
lcall
fnsave
xchg
jle
outsl
jp
test
loop
xor
add
dec
push
stos
cmp
mov
js
shll
pop
jno
repz
mov
popa
sbb
int
test
mov
dec
xor
icebp
cmp
sbb
add
leave
lds
jbe
sbb
cmp
dec
jg
inc
xor
lea
jg
ds
cmp
xchg
leave
pop
xor
push
cmp
incb
adc
je
push
xchg
sbb
lods
stos
sbb
inc
cld
rolb
cmpsl
fimuls
nop
xchg
mov
gs
sub
sbb
int3
dec
dec
fwait
mov
test
lea
inc
fisubrl
mov
inc
mov
cmp
jle
sti
mov
in
mov
push
add
mov
das
sbb
mov
in
lret
xchg
xchg
cmp
mov
iret
add
fs
adc
mov
and
hlt
daa
iret
xor
cmpsb
rclb
stos
lret
dec
push
or
ds
jle
mov
pop
or
outsl
pop
cmc
pop
lods
hlt
es
in
pop
arpl
int3
test
jecxz
or
loope
xchg
scas
sub
sbb
loope
cltd
pop
sbb
shlb
and
outsb
stos
dec
or
push
adc
sbb
add
es
lret
add
or
cmp
and
push
push
loopne,pn
inc
into
call
pop
cli
dec
rcll
ljmp
cli
nop
mov
fldcw
xchg
xor
dec
inc
inc
push
mov
loope
sub
xor
scas
push
xchg
ret
push
mov
addr16
adc
pop
subl
scas
add
or
sbb
dec
cmpsb
mov
filds
mov
in
fstpl
mov
mov
xorb
cmp
push
loope
jno
ljmp
and
nop
notb
or
xchg
sbb
aas
jne
jmp
insb
ja
les
mov
and
jmp
sti
xchg
add
ds
pop
ljmp
imul
push
lds
and
push
jo
xchg
xacquire
out
push
ja
xchg
fsubl
cmp
mov
in
data16
popa
aad
jo
gs
leave
movsb
insl
addr16
fistpll
adc
mov
jg
dec
rol
int
pop
out
test
and
dec
out
lea
and
lea
xor
shlb
std
cmp
xchg
in
loopne
jp
cli
mov
mov
pop
nop
jge
decl
movsb
mull
lahf
bt
imul
xchg
cmp
add
sbb
jae
arpl
gs
mov
adc
aam
or
mov
inc
stos
jne
push
cmc
xor
sub
xor
add
ja
jno
push
xchg
pop
popa
push
jnp
sub
xor
and
xchg
inc
lret
add
in
imul
divb
lret
pop
inc
repnz
mov
stos
arpl
xor
and
inc
cmc
xchg
lret
mov
add
xor
iret
mov
xor
dec
sub
enter
fwait
pop
loopne
push
aaa
fistpl
push
jmp
add
add
bound
in
sbb
sub
ret
push
mov
pop
mov
dec
aas
out
cld
popf
dec
stc
lock
xchg
mov
or
sub
xor
push
xlat
cmp
mov
outsl
adc
push
cmp
cli
gs
aad
xor
mov
sub
int
orl
lods
in
and
mov
les
mov
jns
das
popf
or
and
mov
xchg
xor
inc
sbb
shlb
ja
lret
xor
or
inc
incb
in
mov
and
xchg
inc
mov
insb
loopne
cmp
stc
in
push
sbbl
aas
fisttpll
dec
sub
mov
cmpsl
push
adc
jne
xor
mov
hlt
dec
push
je
inc
icebp
pusha
add
xchg
jnp
or
cmovbe
sbb
push
sub
aaa
adc
or
mov
or
mov
sbb
mov
popa
mov
aaa
fs
gs
pusha
das
mov
cmp
gs
xorl
cwtl
cmc
inc
aaa
and
imul
inc
push
insb
adc
mov
out
lret
pop
sbb
pop
jb
ss
movsl
mov
sub
popf
test
js
mov
cwtl
and
inc
adc
add
jmp
pop
fidivrl
lret
lret
test
jmp
cltd
mov
lods
loopne
dec
repnz
fsubrl
jmp
movl
test
sbb
adc
xchg
mov
inc
inc
fwait
dec
sub
or
pop
popf
dec
pop
jecxz
sbb
jae
cmc
data16
ljmp
xor
mov
cmpsb
lret
push
test
les
cmc
or
lret
daa
dec
fs
inc
das
in
int
std
or
push
sbb
cmpsl
and
xchg
jo
sub
std
xchg
cltd
cmpsb
loopne
cmp
cmp
das
pushf
stos
int
and
and
sbb
xchg
jae
dec
mov
push
inc
add
xchg
mov
ficompl
nop
xor
mov
fs
or
popa
sub
cli
jmp
mov
jb
fmull
ljmp
xor
in
sbb
cmc
rclb
or
or
into
and
sahf
adc
sub
sbb
mov
mov
mov
adc
gs
loopne
fbld
divb
nop
mov
out
call
and
jmp
shll
fstps
filds
and
sbb
mov
das
lods
aad
add
push
scas
dec
aas
lret
sbb
rcll
cmp
mov
test
push
sub
pop
test
mov
mov
cwtl
xchg
jl
aas
nop
aaa
mov
or
repz
lret
mov
movsb
js
mov
cmpsb
jmp
insl
inc
fs
or
rolb
pop
xor
into
in
dec
mov
sbb
inc
cli
das
dec
jo
jg
mov
lahf
jmp
and
hlt
scas
xchg
sub
xor
stc
push
nop
adc
jmp
daa
inc
mov
popf
dec
fs
arpl
or
push
xchg
pusha
sub
int
loop
enter
xchg
dec
xchg
inc
pop
gs
pop
jae
inc
jnp
decb
mov
xor
imul
imul
dec
ds
icebp
mov
mov
lea
push
cmp
aam
test
sahf
in
jb
leave
mov
mov
decb
fxch
adc
loopne
das
inc
lret
test
mov
xor
aaa
mov
popa
dec
shl
or
mov
lret
aaa
mov
or
fildl
mov
ds
cmp
jo
xchg
push
js
jecxz
or
popf
or
xor
sbb
mov
incl
jle
fsts
andb
cmc
xchg
cltd
cmp
inc
loope
cmp
outsl
mov
fidivrs
loopne
inc
xchg
lods
mov
cmpsb
jl
mov
insb
xchg
dec
sahf
cmp
and
or
cmp
xchg
xchg
xor
sbb
dec
or
sub
sti
add
mov
xor
sarb
in
xor
adcb
iret
mov
push
jle
fs
cmp
movsb
loopne
xorb
lcall
cli
les
sbb
dec
xchg
nop
imul
inc
insb
jae
push
pushf
cmp
imul
mov
outsb
ljmp
xor
jl
jo
push
loopne
inc
xor
sbb
popf
mov
fldt
seto
xor
hlt
add
lret
mov
cmc
sahf
add
or
pop
sub
leave
mov
mov
mov
jg
add
adc
js
add
in
lods
or
jbe
ret
push
xor
fwait
and
mov
mov
out
fwait
mov
xchg
sar
add
repnz
inc
sti
clc
add
jb
repnz
mov
sub
icebp
dec
leave
ds
dec
push
mov
mov
in
ss
cmp
pop
pop
sub
das
adc
and
inc
jmp
xchg
cmp
les
out
jb
cld
jo
xchg
in
jnp
daa
mov
popf
pop
lea
inc
jmp
stc
iret
fisubrs
test
cmp
ss
stc
mov
addb
cmp
mov
in
add
aas
mov
dec
mov
popa
or
xor
add
aas
ja
adcl
cmp
adc
or
icebp
xchg
pop
mov
mov
insb
loopne
movsl
inc
cwtl
loope
mov
lret
xlat
inc
adc
pushf
push
and
push
test
fs
imul
ja
push
mov
fdivrl
rolb
int
cmpsb
cmc
mov
and
inc
lret
push
mov
sbb
add
mov
push
pusha
jne
fbstp
loopne
adcb
loopne
or
test
adc
sbb
or
mov
in
xchg
lcall
jno
inc
popa
xchg
aam
popa
jbe
xchg
mov
hlt
push
fbld
ss
push
test
add
inc
inc
xor
push
sti
mov
cltd
cmc
js
xlat
sbb
fsts
out
mov
jmp
jmp
inc
jmp
mov
add
or
inc
fs
xchg
pop
shlb
std
rcrl
movsb
iret
cmpsl
clc
fnstsw
adc
dec
inc
test
lret
enter
add
pop
jae
xor
loop
fisttps
push
sub
rcll
sub
repz
push
xor
adc
jnp
scas
fisttps
test
loop
mov
xchg
xor
bound
sbb
out
jne
xchg
fisubl
fmull
add
aad
sbb
xor
rcll
add
jmp
pop
cmp
mov
dec
or
punpckhwd
push
pushf
aad
lea
add
mov
repnz
mov
jge
add
mov
add
push
dec
ss
jmp
jo
dec
xor
dec
add
inc
or
sbb
inc
ja
popf
dec
in
shl
pop
inc
mov
sbb
sub
xor
fsubrl
and
stc
jl
add
push
arpl
push
mov
cmpsl
fstpt
adcl
lods
loopne
add
cmp
mov
jp
mov
jmp
mov
or
fcomps
enter
pop
in
pop
adc
xorl
xor
add
sbb
lahf
mov
mov
dec
inc
iret
scas
mov
cmp
das
or
fiadds
push
mov
mov
cmp
lahf
sub
cmp
sub
fildl
hlt
pop
jge
pop
mov
imul
andb
cmpsb
or
xchg
jno
sub
rorl
movsl
int
jbe
xchg
clc
dec
sbb
cs
into
bound
roll
pop
inc
dec
add
pop
cmp
in
xor
aam
cmp
movsl
cld
xor
xchg
mov
js
dec
or
sub
fwait
pop
mov
cli
iret
lret
inc
sbb
pop
jne
out
sahf
push
cmpsl
mov
push
stc
test
mov
xlat
jmp
and
pop
jae
and
cltd
mov
int
sub
movsl
inc
sub
jb
fildll
je
in
mov
fisttpll
in
mov
adc
repnz
arpl
jnp
fcmovne
xchg
fisubl
push
aad
xchg
aad
mov
inc
in
jg
aad
fcmovbe
add
orb
adc
popf
and
leave
jmp
jb
cld
cmc
dec
fs
mov
pop
fsts
arpl
int
and
pop
leave
aad
aad
push
and
pop
loopne
popf
or
mov
pop
leave
jne
adc
popf
in
lret
jle
cwtl
out
fstpl
inc
test
push
dec
jns
cmc
or
and
jns
in
dec
push
sbb
inc
pop
jbe
push
xor
insb
mov
push
movsb
int
fnstenv
mov
and
std
gs
mov
test
imulb
imul
jns
fcomp
or
mov
adc
imul
jnp
out
or
lods
jecxz
insl
sbb
aad
imul
loope
aad
std
lea
or
and
and
fstp
and
xchg
popf
push
add
insl
imul
add
and
sub
popf
jnp
lret
mov
adc
shl
pop
mov
cmp
lds
call
aad
or
loopne
xchg
add
sti
cltd
mov
in
fwait
lds
cltd
pusha
bound
movsb
frstor
inc
xchg
popf
adc
dec
adc
jmp
imul
fst
sub
or
lds
xlat
jo
test
dec
pop
loop
xor
popf
push
dec
into
dec
out
inc
lret
jge
jnp
add
mov
scas
add
cmp
and
imul
insl
xor
dec
jge
loope
and
xchg
vphadduwq
cmp
cmp
cmp
sbbl
pop
cmp
popa
pushf
inc
rclb
jbe
sbb
xchg
cmpsb
sbb
xor
in
cmp
into
mov
inc
imul
xchg
pop
setbe
enter
cmp
pop
std
inc
dec
test
aad
dec
jne
inc
out
mov
into
push
add
and
fcmovne
and
inc
cmp
xor
mov
jo
adc
mov
push
in
jae
hlt
adc
mov
jns
test
xor
in
xor
sarl
shlb
adc
pusha
icebp
pop
xchg
mov
mov
in
jmp
out
cs
cwtl
fstpl
test
decb
shrb
or
arpl
aad
stos
or
adc
daa
out
outsb
fdivr
dec
sub
sbb
sbb
clc
jmp
int
aas
out
add
movsl
push
push
call
sbb
into
bound
jb
pop
mov
imul
xchg
cmpsl
pop
daa
push
sub
xchg
jecxz
cs
ret
xor
sbb
dec
repnz
jge
mov
sbb
push
fs
pop
lret
cltd
aaa
sbb
pop
dec
ds
scas
fwait
push
dec
cwtl
sub
stc
cltd
inc
push
out
repz
xor
sub
xchg
xor
test
push
sbb
cmp
xchg
push
inc
pop
sarl
imul
cmp
bound
sub
ret
mov
scas
mov
dec
sub
inc
mov
shlb
inc
out
or
inc
lahf
xchg
rcrb
jbe
dec
mov
jne
mov
pop
mov
gs
bound
jne
mov
das
cmpsl
pop
mov
pop
lahf
lret
hlt
cs
cmpsl
and
push
lahf
cmp
push
jb,pt
xchg
push
mov
mov
outsl
add
lret
jmp
testl
popa
pop
xchg
and
sub
fidivrl
jge
push
ret
fiaddl
push
faddl
fcoms
xor
mov
dec
scas
cltd
push
hlt
cmp
xor
incb
andl
push
mov
in
mov
add
lahf
roll
push
in
stos
mov
lahf
dec
out
mull
and
mov
jnp
jmp
pop
xor
lods
mov
cmp
inc
sbb
jecxz
cwtl
and
pop
fsts
fisttps
jmp
dec
jl
xchg
pop
imul
cltd
mov
jne
in
xlat
addr16
jp
dec
jp
call
or
popa
cmpsl
inc
push
sahf
cltd
gs
jl
xor
sbb
das
outsl
add
fldenv
inc
adc
sbb
and
fmull
cmp
lahf
pop
cwtl
orb
enter
lcall
mov
inc
mov
jne
or
cmp
cmc
outsl
mov
inc
mov
mov
or
fs
mov
popl
int3
and
dec
inc
jge
pop
movb
test
xchg
mov
pop
sub
in
pusha
dec
fstpl
pop
dec
or
push
pop
mov
in
cmp
rcrl
jmp
ret
cmp
add
dec
cmpsl
xor
add
dec
shll
push
pop
inc
mov
inc
adc
or
xor
test
push
xchg
aaa
dec
lcall
inc
out
and
cmp
mov
pop
scas
push
pop
pop
mov
mov
cmp
mov
in
add
add
lods
inc
fs
adc
movl
loopne
push
mov
mov
in
inc
mov
aad
in
xchg
xchg
jmp
mov
mov
ret
ss
cmpsb
jo
popa
loopne
iret
ret
cli
pop
iret
aad
out
sbb
pop
inc
out
jo,pt
movsl
jb
enter
mov
dec
call
sub
mov
sbb
xor
xchg
push
mov
mov
adc
mov
mov
in
cli
int3
mov
andl
mov
sbb
mov
jae
inc
mov
out
dec
js
or
aad
pop
cmp
inc
clc
push
mov
adc
out
ret
mov
and
in
jbe
loop
cli
or
jno
imul
movsb
add
mov
xor
cmp
pop
inc
xchg
in
in
inc
xlat
leave
stos
lret
jae
jno
insb
lret
or
or
cmpsb
sbb
mov
aad
outsb
out
xor
mov
or
outsb
mov
or
out
mov
cmp
and
jmp
sbb
mov
ljmp
push
incl
pop
fcoms
std
inc
mov
push
lea
test
xor
stos
sbb
aas
daa
mov
mov
or
fisubs
ljmp
and
mov
xchg
out
das
sbb
sbb
jno
sbb
aad
cmp
or
push
xchg
ja
leave
xchg
popa
out
or
in
cwtl
push
xchg
aad
out
pop
daa
sti
push
test
fnstenv
iret
pop
adc
aaa
xorb
loope
sub
lret
push
sbb
push
enter
inc
xlat
jmp
inc
popa
repz
jg
dec
mov
in
lcall
cmp
pop
sbb
loop
jg
inc
jnp
idivb
lods
push
leave
cmpsb
addr16
movsb
gs
cmpl
test
loope
ljmp
icebp
or
sbb
mov
dec
lret
xchg
flds
jno
inc
or
xchg
sbb
es
test
cmpsl
arpl
loop
mov
lds
cwtl
sub
in
out
repnz
dec
sbb
cwtl
cltd
test
cs
js
jmp
sub
sub
add
or
iret
xchg
loope
add
repnz
int3
pushl
cmp
sbb
mov
fldl
dec
mov
sub
xchg
sar
imul
or
push
mov
jg
sub
incl
mulb
out
push
dec
test
repz
sub
cmpsb
js
fs
mov
add
aaa
dec
push
jno
fwait
repz
push
mov
xchg
outsb
pusha
je
mov
aaa
mul
jge
pop
lea
addb
adc
in
notb
test
sar
cmc
stc
and
stos
shr
pop
push
push
scas
idivl
adc
jge
jle
movsl
cmc
in
into
jecxz
das
xor
cmp
pop
sbbb
cmpsb
lcall
sbbb
pop
aaa
dec
mov
adc
lar
adc
cmp
gs
fs
lods
popa
cmpsb
xchg
xor
arpl
mov
ret
mov
fwait
inc
pop
add
ss
sbb
mov
inc
sbb
add
pop
xor
loopne
cmp
sbb
jg
hlt
sub
or
pop
icebp
iret
test
pop
lds
cmp
push
sbb
xor
add
mov
push
bound
cmc
scas
xor
in
inc
mov
fsubrs
in
dec
mov
xchg
push
jno
jmp
xchg
mov
inc
mov
std
mov
mov
cmc
rcrb
loopne
inc
dec
add
js
pop
in
xorl
aaa
mov
push
xchg
xchg
lahf
addb
xchg
dec
test
push
rcr
mov
daa
arpl
cmc
jno
mov
add
ss
cmpsb
or
inc
in
decl
jp
sub
cmp
jnp
jae
out
nop
andl
push
mov
jle
cmp
sub
popf
add
aad
shll
jnp
jecxz
push
mov
sbb
xchg
xchg
fnsave
imul
imul
and
mov
mov
in
scas
mov
and
sub
add
mull
mov
xor
sbb
dec
sbb
pcmpeqb
mov
lret
sbb
int
adc
add
in
sub
and
pop
pop
repz
sub
sbb
mov
push
test
repnz
push
mov
arpl
lret
xor
aad
aas
dec
adc
fwait
pop
cmp
pop
in
sbb
das
ja
pop
or
jb
mov
mov
mov
scas
shr
jbe
fs
xchg
lret
fwait
cmp
push
call
push
lahf
mov
mov
xchg
imul
adc
popf
xor
sbb
or
imul
lock
and
jmp
cmc
outsb
xor
pop
xchg
mov
sbbb
sub
push
sbb
in
inc
push
and
iret
xchg
mov
lret
addr16
pcmpeqw
pop
push
in
mov
sub
pop
or
xor
sbb
sub
cmp
pop
xor
sub
mov
jne
fbstp
xor
pop
sbb
jmp
aaa
push
in
and
mov
and
pop
shrb
lret
sub
cmp
in
jge
insb
mov
inc
loopne
sub
mov
stos
bound
sub
add
mov
push
sub
lret
adc
sti
dec
sub
xchg
mov
cmp
jns
inc
incb
jmp
and
rolb
inc
pusha
mov
and
or
nop
pxor
inc
sbb
cmp
mov
xchg
das
and
fdivrl
pusha
jle
sbb
and
pushf
jb
cmp
push
popa
scas
dec
fldl
stos
xor
lea
and
lods
xchg
jbe
stos
and
sub
xchg
jnp
insl
pop
mov
mov
mov
cltd
iret
lock
inc
adc
jb
hlt
punpckhbw
pusha
jecxz
pop
fisubl
shl
cld
mov
xchg
in
cmp
movsb
adc
movl
arpl
lret
fs
loop
test
xchg
xchg
mov
in
loop
repnz
in
mov
leave
loop
sbb
inc
mov
fwait
mov
cmpsb
add
hlt
xor
shll
popa
scas
daa
pop
adc
aad
stc
add
xor
inc
lea
cmp
adc
sub
and
xchg
inc
aad
or
movsb
js
mov
pop
xchg
fimuls
movsl
mov
adcl
in
das
and
int
push
aas
jge
sarl
add
or
dec
imul
imulb
dec
cmp
cmp
or
jae
nop
aad
jne
ds
jbe
lret
pop
mov
mov
jae
aaa
into
jne
pop
jns
das
lds
jge
jb
pop
inc
test
push
and
scas
xor
mov
push
pop
xchg
hlt
popa
add
test
push
cmp
fdivrl
fistps
cmp
adcl
loop
mov
jbe
add
mov
cltd
mov
dec
ja
dec
std
stos
or
mov
sub
imul
inc
shrl
pusha
pusha
inc
cmp
aam
mov
mov
roll
xor
push
cmp
fwait
push
adc
adc
jl
xorl
dec
add
xor
jbe
jmp
xchg
hlt
mov
iret
mov
push
xchg
fimuls
js
shrl
push
popf
xor
and
inc
pop
mov
push
call
xor
lret
jl
lcall
add
and
jp
pop
mov
aad
adc
xor
push
dec
stc
jne
movsl
insb
xor
das
push
into
aam
fsubrl
lret
sbb
and
jne
cwtl
ficomps
lcall
xor
or
rorl
test
push
addb
rcrb
dec
sub
cmc
fstpl
mov
mov
xor
icebp
inc
inc
xor
sbb
xchg
popa
add
xor
rcr
jecxz
subl
addb
test
mov
loopne
cmpsl
mov
inc
dec
roll
mov
xor
xor
or
inc
mov
mov
dec
scas
addr16
jbe
add
dec
cmp
in
jmp
in
sbb
arpl
or
aad
movsl
mov
fwait
lods
mov
mov
xor
cmp
lret
cmpsb
mov
out
cmpsl
std
inc
out
rclb
rcrl
lods
cmp
in
cmp
cmp
adc
xorl
outsl
pop
dec
into
jns
push
jge
loopne
jb
inc
push
cmc
ja
out
push
aas
fs
mov
outsl
jno
test
in
arpl
sbb
dec
jne
mov
sbb
mov
mov
dec
test
pop
andl
dec
in
cmp
mov
jmp
ficomps
mov
data16
dec
jno
pop
ja
add
jl
in
lret
mov
push
mov
sub
xor
add
push
rcll
in
mov
jae
xchg
in
aaa
jl
daa
or
cwtl
scas
lret
sbb
mov
lods
or
in
in
mov
stos
aad
mov
mov
jmp
out
inc
and
and
lret
xor
shrb
rorb
jo
cmp
cmp
pop
xor
pop
roll
pop
stc
mov
xor
fcomps
sbb
test
scas
push
dec
pop
stc
fimuls
xor
jne
xor
into
jo
adc
fcompl
shlb
or
popf
or
xorl
xor
stc
push
cs
lahf
mov
inc
icebp
xchg
pop
dec
inc
jns
sbb
aaa
xlat
pusha
loop
test
cmp
or
imul
xor
lret
gs
cmp
idivl
fidivrs
movsl
cmp
jb
cmp
jp
fdivs
cmp
sub
cmp
dec
std
lock
ja
mov
jae
pop
nop
pop
mov
mov
arpl
xchg
mov
fbld
mov
mov
aaa
lahf
jo
sbb
pop
pushf
xchg
roll
sbbl
cmpsb
jle
xor
xor
orl
imul
lahf
rcr
pavgw
lret
nop
xor
cli
mov
or
push
xor
sub
in
das
add
fidivl
pop
cli
into
int
fidivs
loopne
das
es
or
xchg
xlat
std
sub
std
mov
arpl
loop
mov
pushf
pop
imul
fwait
cmp
stos
pop
sti
mov
aad
xlat
jnp
adc
push
jmp
mov
inc
pushf
sbb
and
inc
pop
aad
pop
add
sub
daa
cmp
negb
out
dec
sub
inc
jg
mov
outsl
lret
cmc
jmp
pop
adcl
es
xchg
mov
add
mov
sub
out
enter
popf
jp
xchg
adc
imul
or
adc
cmp
push
dec
cltd
movsb
test
lcall
add
xor
push
mov
or
iret
popa
pop
and
mov
push
dec
jecxz
dec
dec
call
lret
sbb
xor
xor
shrb
inc
test
jmp
lret
rcll
ror
frstor
lea
jb
jle
in
sbb
shl
sbb
sub
sbb
jp
jp
mov
fstps
shlb
or
aaa
lods
les
jge
jo
add
sub
cmc
movsl
mov
sbb
mov
xor
into
aad
mov
mov
jecxz
sub
sub
into
or
pop
or
pop
and
bound
adc
pop
jbe
cwtl
cmpsb
stos
pushf
cmpl
loopne
mov
fdivrl
jbe
add
shlb
icebp
call
pop
lret
inc
popa
pop
sub
adc
adc
iret
mov
fcmove
push
add
pop
clc
cmp
inc
add
test
fadd
stc
aaa
mov
repnz
mov
xchg
xchg
dec
cmpsb
rcrb
jmp
push
scas
xor
add
mov
adc
pop
push
mov
fwait
inc
cmp
fistps
lahf
aad
lret
xchg
dec
xor
arpl
cwtl
paddd
adc
push
or
jge
mov
fs
sbb
lcall
or
mov
cmp
mov
sbb
xor
sbb
cmp
and
fmuls
notl
xor
in
scas
loopne
xchg
jae
decl
cld
test
movsb
mov
shll
out
ds
mov
lret
sbb
cmc
xor
pushf
test
xor
jae
ror
xor
arpl
push
or
pop
mov
pusha
jnp
dec
inc
push
adc
push
jl
sub
test
fdivrs
mov
sahf
mov
xchg
xchg
inc
sub
sahf
push
test
in
pop
faddl
int
mov
jmp
out
xchg
jmp
das
mov
push
push
push
push
xor
lret
dec
push
insl
gs
pop
pop
cmp
push
sti
loop
inc
jno
xchg
mov
nop
daa
iret
scas
icebp
cmp
mov
sbb
dec
sbb
iret
mov
aaa
sti
fscale
movsl
fcomp
in
ret
push
mov
js
arpl
xchg
movsl
mov
in
mov
daa
nop
dec
iret
fstpt
lahf
push
xchg
fwait
dec
adc
mov
cmpsb
imul
fs
mov
pop
pop
adc
cmpsl
std
cmc
movsl
lret
inc
dec
mov
adc
aam
in
in
popf
mov
mov
cmpsb
push
jge
xchg
xor
outsl
movsl
mov
jnp
xchg
icebp
adc
mov
icebp
movsl
sub
jo
xchg
add
scas
fs
xor
xor
add
push
and
cmpsl
iret
shrl
insl
or
es
mov
loop
or
lret
xchg
loope
inc
mov
mov
sub
inc
mov
jl
xor
imul
ret
adc
jecxz
in
pop
mov
test
xor
hlt
sub
xchg
aad
shl
stos
mov
scas
and
sbb
xchg
mov
out
icebp
insb
nop
in
into
les
pop
or
cwtl
out
ret
insb
pop
outsl
clc
fs
sets
nop
adc
mov
push
jecxz
and
xchg
push
popa
popf
fs
aam
push
repnz
ror
movsb
leave
lock
mov
sub
jg
notl
add
inc
inc
lea
sub
mov
movl
test
mov
dec
or
aam
scas
jns
mov
xchg
jns
add
mov
or
jp
bound
rorl
jne
inc
dec
mov
push
jge
mov
dec
adc
bound
xor
xor
xchg
or
xor
cmc
insl
push
pushf
adc
and
mov
mov
jmp
push
xor
iret
dec
or
loope
xor
mov
in
and
or
lcall
jne
jmp
in
ja
test
xor
into
mov
pop
iret
add
push
mov
mov
fdivrl
scas
idivb
push
test
inc
mov
xor
dec
adc
pop
push
dec
pop
adc
adc
jmp
rorl
inc
loopne
clc
movsl
inc
ljmp
in
cmpsb
pop
cmpsb
out
xor
pop
inc
sub
shll
mov
jo
in
or
jb
pop
inc
cmp
ds
and
je
xor
push
data16
mov
mov
insl
jne
aad
pusha
int
ficomps
int
sub
lds
add
mov
rcll
aad
cmc
mov
nop
jns
inc
xlat
push
mov
shlb
aad
fldl
xchg
loopne
out
scas
cmc
test
pop
add
mov
add
and
cmc
inc
pop
mov
stos
mov
shll
xchg
scas
test
out
jge
push
dec
and
push
sub
cltd
lock
cltd
pop
ljmp
jecxz
cmc
xchg
cmp
in
push
sub
test
aam
jp
insl
aad
imul
mov
and
inc
mov
fwait
gs
push
int
jbe
and
adc
mov
pushf
test
gs
mov
stc
mov
inc
lock
xchg
sub
push
xchg
or
jno
adc
xchg
mov
in
xor
stc
or
pushl
add
out
mov
adc
aad
jge
adcl
pop
popa
push
sbb
pop
xchg
popf
sbb
xor
sbb
aad
icebp
movsb
xor
pushf
shll
subb
out
mov
movsb
mov
imul
add
lock
jmp
leave
fwait
icebp
mov
aad
shl
pop
sbb
push
jg
push
pop
gs
popa
cmp
sbb
push
dec
movsb
mov
dec
fstp
shrl
and
and
imul
rcrl
lret
aad
insl
and
and
add
in
add
fxch
daa
leave
mov
inc
xor
xchg
adc
push
xor
cld
insl
xchg
jne
popa
or
lods
imul
inc
inc
rorb
cmp
dec
ss
das
and
pop
js
mov
xchg
iret
add
mov
stc
cs
mov
rcll
popa
inc
mov
dec
loop
scas
sbb
inc
add
sar
push
mov
or
dec
mov
ja
adc
test
repnz
fs
repz
pop
mov
push
hlt
or
and
lods
cmp
sarb
adc
and
movsl
cmp
and
pop
lds
jmp
add
xor
xor
inc
cmp
jl
mov
pop
fwait
jg
loope
mov
in
stos
xor
cmp
jecxz
sub
test
hlt
sub
adc
subb
xor
cmp
mov
and
mov
fld
je
push
sub
sbb
pop
popa
test
into
xchg
cltd
cli
stc
inc
mov
lcall
cwtl
xor
outsl
fistl
cs
pop
sub
mov
jbe
jnp
push
jo
lods
in
out
pop
jbe
and
adc
out
mov
inc
adc
mov
loope
fistl
mov
out
cmc
popl
insb
scas
std
pushl
loop
lds
cmc
fidivrl
nop
cmpsb
mov
mov
inc
mov
int
adc
sbb
inc
push
fdivl
sub
xor
into
imul
cmp
mov
jb
mov
mov
inc
into
adc
loop
rorb
inc
push
rorl
sti
int3
orl
in
popf
add
pop
bound
pop
mov
inc
icebp
fisubrs
adc
fucomi
mov
push
mov
jne
sbb
pop
lcall
aad
cmp
f2xm1
cmp
nop
jbe
jcxz
jne
lcall
cmpsb
cmp
popa
loopne
cltd
jmp
jbe
cld
ficomps
insl
cmc
pop
fucomip
cmp
and
inc
movsb
int3
sub
and
sbb
popf
mov
ds
pusha
adc
fmulp
loop
jae
adc
xchg
push
mov
roll
sbb
push
sub
andb
jne
das
popa
mov
sbb
and
push
gs
aaa
fs
sarb
shl
mov
jae
cmpsl
xor
jmp
fistpll
andnps
xchg
jno
das
and
inc
dec
cli
jbe
mov
icebp
xchg
cld
xchg
scas
pop
mov
mov
cmp
cld
fabs
mov
rcrb
stos
clc
xchg
mov
in
stos
inc
lock
dec
push
sub
testl
adc
and
ja
dec
sbb
test
mov
imul
or
mov
addr16
sub
sbbl
inc
pop
pushf
cmpsb
sbb
mov
xor
fbld
mov
mov
jbe
pop
adc
jecxz
sbb
dec
iret
fbstp
out
sbb
call
or
jle
jp
cmp
pop
xchg
mov
rolb
jle
push
pop
movsl
inc
lock
push
mov
in
pop
fdivrl
rorb
mov
mov
int
dec
mov
and
out
mov
mov
push
icebp
scas
jmp
hlt
ljmp
mov
je
insl
dec
aaa
das
lea
lods
pop
outsb
mov
jge
push
hlt
fxch
repz
jns
test
ja
xor
stos
adc
in
mov
push
and
nop
pop
dec
xor
addr16
sbb
mov
mov
jmp
mov
cmc
inc
cltd
pushf
sahf
xor
imul
add
or
pminsw
add
inc
sub
sbb
out
and
dec
leave
nop
pop
stos
jg
push
mov
in
or
movsl
mov
mov
push
mov
mov
fistl
jne
inc
mov
ljmp
insb
pop
jle
jb
iret
inc
cmp
pop
push
and
push
mov
movsl
rolb
cmp
xor
add
xchg
pushf
jle
fisubl
lret
in
cmp
in
inc
add
stc
push
pop
in
out
lahf
sahf
cmp
aad
sbb
roll
inc
jne
pop
xor
emms
loopne
xor
pop
mov
cmp
mov
sub
loop
xchg
jle
pop
das
out
lahf
enter
in
imul
xchg
xchg
popl
mov
jnp
inc
jns
or
pushf
fadds
jle
repnz
movsl
xor
sbb
fucomip
sbb
orl
inc
push
rcl
or
pop
jo
insb
dec
pop
out
movsl
or
ds
lahf
loopne
and
std
push
xchg
adc
push
in
sub
xor
rcll
jae
js
lods
fstpl
nop
dec
mov
mov
or
mov
hlt
cmpsb
jmp
jmp
cmc
mov
add
cmp
insl
add
inc
and
xor
subb
inc
fcmovb
sub
iret
cmp
pop
and
xchg
adc
mov
mov
aas
mov
inc
mov
mov
mov
cmp
mov
and
repnz
std
in
jb
jo
fs
nop
push
in
sahf
into
mov
jne
xchg
sub
or
faddp
mov
cmp
push
xchg
dec
adc
fwait
xchg
mov
xchg
icebp
cmp
xchg
adc
scas
and
stos
fs
sub
in
push
cmp
mov
aaa
inc
sbb
lret
int3
xor
dec
cmp
fiaddl
scas
sub
fdivs
inc
or
ja
sub
loopne
xor
mov
in
mov
test
imul
gs
wrmsr
cmpsl
cwtl
test
or
sbb
push
mov
push
cmpb
fs
out
js
imul
into
bound
pop
push
out
orb
sbb
cwtl
leave
xor
mov
jae
cmp
imul
int
andb
xor
icebp
or
dec
cmpsl
jg
insl
insb
add
pop
cmpsl
push
cltd
pop
mov
mov
mov
incl
daa
fiaddl
adc
jecxz
jo
loopne
pop
sbb
xor
mov
icebp
or
dec
movsb
or
pop
cmc
jb
sbb
push
jmp
or
push
aaa
movsb
xchg
movsb
shll
or
stc
or
adc
in
stos
xor
js
cmp
xchg
mov
or
push
pop
sbb
sub
testl
js
pop
mov
dec
pop
add
aaa
fidivrs
dec
mov
mov
pop
shl
inc
enter
stc
add
xchg
and
call
pushf
shlb
inc
insb
hlt
dec
bound
fadds
aad
sub
cld
and
mov
mov
repz
pop
cs
jg
lret
push
inc
jb
mov
mov
mov
and
and
jmp
out
pop
jge
inc
cwtl
pop
lcall
pop
inc
pop
subb
mov
adcl
cmpsl
popa
mov
xor
movsl
ret
and
sbb
out
push
cmp
clc
jo
lds
mov
xor
jl
mov
mov
push
xchg
arpl
sub
xor
or
sub
jmp
cmp
pop
enter
dec
pop
jmp
dec
arpl
mov
fstpt
cwtl
aas
sbb
push
subl
out
lret
add
mov
inc
ret
jge
inc
or
push
jp
xchg
pop
cmp
cmpsl
add
sarw
jmp
mov
loop
mov
sub
notb
mov
pop
jnp
cmp
sub
inc
in
test
ficoml
push
sbb
loopne
dec
aad
push
pop
imul
pop
dec
js
cmpsb
cmc
lock
fdivs
test
addr16
cwtl
mov
or
js
sub
sbb
and
sub
push
loop
fldenv
mov
cwtl
hlt
mov
cli
mov
push
add
cmp
jp,pt
push
mov
sbb
aas
pusha
outsb
xor
ss
cmc
bound
inc
call
xor
pop
xchg
inc
inc
sbb
popf
popf
test
movsl
cmp
mov
jne
xchg
xorl
imul
cmc
mov
jl
xchg
fsubr
psllq
sahf
lea
in
xchg
repz
jb
push
lret
or
pushf
fildl
sbb
cmp
xor
sub
shl
das
sub
bound
sbb
roll
xchg
mov
sbb
sarl
jmp
fstpt
pop
mov
dec
inc
cmp
test
push
adc
and
fstpt
inc
adc
into
int
cmpsl
push
and
js
bound
mov
push
inc
and
adc
add
cmp
call
scas
jnp
lea
orl
das
hlt
cwtl
daa
sub
mov
jecxz
pop
or
aam
fmuls
cmp
nop
lret
mov
or
add
movsb
mov
mov
xchg
adcb
clc
adc
jge
loop
popf
push
fcompl
xor
ret
dec
loop
es
jl
imul
cli
out
adc
shll
mov
or
lret
in
jne
mov
pop
jnp
push
cmp
std
sub
div
push
gs
mov
imul
loope
lds
movsb
outsl
xchg
mov
cmp
sbb
push
jo
lcall
pusha
aas
fmull
mov
mov
sbb
das
scas
jle
out
push
xor
popa
mov
call
mov
sbb
mov
dec
in
mov
or
mov
pop
loopne
cmove
je
or
repz
cmc
pop
xor
adc
in
xchg
inc
cmp
aam
mov
lret
mov
and
pop
outsb
push
pop
fs
cmp
mulb
adc
xor
sub
in
xor
aam
leave
cmpl
loope
iret
loop
scas
pop
xor
xchg
iret
pushf
adc
jg
add
push
jbe
add
rorl
movsl
int3
mov
mov
or
and
mov
fstps
loopne
das
mov
popa
aad
lret
jmp
out
movsb
adc
cmpsb
cmp
aaa
dec
jae
add
jmp
xchg
mov
adc
push
pop
jge
push
and
movsb
loop
incl
mov
mov
fildl
pop
adc
mov
sbb
cmc
cmp
insl
and
je
mov
xor
xor
jb
mov
lds
dec
mov
int
shll
aad
mov
or
aas
xlat
popw
jns
and
mov
xchg
mov
out
scas
aas
clc
xchg
sub
test
fistpll
push
mov
and
sbb
xchg
inc
inc
mov
loop
cmp
into
stc
imulb
cmovae
loop
pusha
dec
xchg
fwait
popa
mov
cmp
sub
das
jno
sbb
fninit
mov
fwait
mov
addb
aad
adc
dec
ss
jp
mov
repnz
and
popf
loopne
cmp
and
gs
push
clc
mov
cmp
test
outsl
cmp
xchg
test
popf
push
push
jne
fiadds
push
and
cltd
adc
jb
sbb
push
sbb
jp
iret
jge
loopne
push
loopne
jle
fistps
stos
iret
dec
test
outsl
ljmp
aaa
adc
mov
dec
xorb
sti
aad
push
in
inc
adc
xchg
xor
sbb
pop
lock
mov
fwait
pop
adcl
inc
clc
or
adcb
jg
out
mov
fistpll
push
rorl
leave
arpl
in
inc
test
xchg
adc
mov
movsl
mov
mov
cmp
orb
test
popa
data16
add
mov
scas
sub
cmp
mov
adc
jg
lret
test
mov
popf
ficompl
in
xor
cmp
cmc
popf
mov
dec
dec
lods
nop
and
xchg
mov
sub
and
or
mov
stc
cvtdq2ps
cmp
push
or
icebp
arpl
mov
inc
andl
xor
push
loope
cld
jnp
jmp
fidivl
test
jmp
orl
mull
mov
push
and
xor
pop
dec
mov
out
in
jl
inc
adc
pop
cwtl
aad
and
and
mov
jb
adc
test
mov
adc
into
xor
jns
pop
dec
lretw
mov
sti
in
sub
add
jne
cmp
and
fwait
push
lret
aam
and
and
out
aaa
mov
movsb
sti
cmp
in
icebp
push
inc
inc
push
xchg
loop
inc
sbb
jb
jns
mov
mov
fiaddl
pop
add
pop
std
test
and
sub
rcrl
outsb
lea
xor
rcrl
sub
xor
lods
lret
movb
arpl
sub
cli
sbb
das
sbb
sub
mov
loopne
lret
imul
cmc
xchg
rol
xor
sub
push
mov
aaa
aad
jae
fmul
cmp
lret
stos
addr16
add
jno
pop
roll
cs
xchg
xor
jle,pn
push
mov
sub
cwtl
push
cs
mov
dec
cmp
test
jne
imul
xorl
push
xchg
js
in
aad
push
dec
cltd
mov
sti
jo
push
xor
das
mov
xor
inc
aad
js
inc
push
xor
cmp
mov
pop
int
mov
adc
xor
fadds
push
popa
popf
aam
in
xchg
jae
adc
movsb
lcall
add
sub
xchg
loop
mov
push
into
movsb
xchg
and
orb
sub
mov
pop
push
in
mov
xlat
lret
stc
inc
aas
sbb
inc
and
fildl
add
and
push
pusha
xor
ljmp
mov
testb
xor
movsl
lret
jae
jne
jmp
or
pop
inc
cmpsl
in
nop
test
push
mov
sbb
inc
jne
iret
dec
fidivrs
std
cmp
test
pop
pop
lahf
adc
or
xor
fists
loop
pop
js
sub
nop
aad
pop
mov
js
lret
addb
jge
pop
pop
roll
aas
xchg
mov
idivb
mov
in
add
js
enter
jns
cmp
mov
cmp
fwait
pop
sbb
out
loopne
in
ja
jl
push
lock
inc
popf
rcrb
push
inc
int3
ss
sub
xchg
pusha
jns
inc
or
test
mov
loope
mov
sbb
mov
jp
mov
bound
mov
mov
inc
bound
and
in
cli
pop
or
push
in
jne
movb
lret
aas
push
mov
xorb
xchg
mov
sub
mov
inc
mov
push
sub
test
mov
addl
mov
dec
cmp
dec
fidivrl
mov
addr16
inc
ds
push
sub
sub
jnp
xor
fs
push
mov
pop
and
or
add
aaa
jne
xchg
sub
addr16
inc
imul
cmpsb
jb
aad
imul
fs
mov
ds
push
xchg
pop
fs
and
add
test
in
sub
repnz
loop
inc
and
cmp
mov
and
scas
loopne
aad
je
call
jle
out
int
daa
aad
fwait
mulb
movsb
xchg
fstpl
aad
aad
test
push
movsb
int
dec
fsubr
outsb
daa
popf
ret
mov
mov
imul
dec
mov
mov
add
pop
out
in
in
pop
sub
dec
lea
and
imul
add
jp
and
jg
aad
shll
imul
mov
xchg
jp
cmp
fldenv
jmp
aad
cmc
xor
movsl
rorl
mov
dec
fistpl
xchg
cmc
pop
cmp
dec
fwait
in
mov
in
jecxz
mov
jecxz
mov
in
jmp
jecxz
mov
cmp
std
popa
adc
lea
shrb
loopne
nop
mov
lods
mov
cmc
subb
jecxz
jns
sarl
test
mov
jmp
pop
add
add
mov
inc
lret
sbb
std
jnp
imul
in
mov
in
lock
in
mov
insl
dec
jmp
gs
cmc
sti
fldenv
mov
leave
or
popf
mov
mov
cmp
xchg
cltd
mov
and
sub
imul
leave
in
mov
jl
in
mov
sahf
out
rcrl
in
inc
push
mov
push
aad
mov
in
test
gs
aad
mov
and
adc
and
add
cli
mov
icebp
lcall
push
or
cmc
sbb
movsl
pop
mov
cmpsb
mov
cli
cli
aas
popf
and
rolb
sub
fcoml
mov
daa
mov
pop
xor
in
and
lret
dec
fcoml
dec
jb
or
jne
fs
sbb
int
add
dec
les
movsl
sbb
jmp
dec
or
imul
xchg
mov
je
shl
in
movsl
dec
movsb
and
sub
cmp
jge
jp
push
aas
in
or
ret
mov
dec
imul
mov
push
lahf
push
inc
and
xor
cmpsb
inc
aas
mov
dec
fimull
nop
stos
or
fstpt
xor
and
out
cmp
cmc
mov
jne
mov
js
mov
pop
call
pop
mov
fs
nop
inc
pop
das
push
jmp
lcall
xchg
and
mov
clc
jo
sub
xchg
and
cltd
out
frstor
add
ja
clc
aad
mov
out
cwtl
inc
jbe
test
sbb
push
push
jmp
and
or
repz
mov
mov
jb
mov
lahf
push
es
sbb
xor
inc
sub
mov
push
lret
pop
xorl
stos
scas
iret
aaa
daa
or
rorl
cmpsb
or
fwait
in
dec
add
idivb
adc
inc
scas
sbb
lret
xchg
sarl
fnsave
fistl
jle
fwait
push
out
sub
sets
jge
shr
sbb
or
sub
mov
sarb
pop
repz
xor
mov
sti
push
out
cmp
jae
jp
mov
in
inc
test
push
pop
ds
xor
push
loop
adc
adc
scas
sub
cmp
pushf
sbb
aaa
xor
jp
insb
fiadds
cmc
movsl
cmp
sub
inc
inc
and
int3
mov
cmp
movsb
daa
aad
jmp
fisubs
mov
cmpsl
jns
mov
mov
hlt
inc
jmp
in
cltd
or
mov
sub
cltd
in
test
fucomip
out
and
sub
into
loopne
inc
adc
push
mov
iret
inc
dec
inc
mov
stos
mov
or
repz
in
and
lahf
dec
shlb
jge
imul
cmp
sbb
loop
lds
jne
xlat
lea
and
sbb
out
clc
jns
inc
adc
cmp
mov
mov
in
pop
js
lret
ror
mov
mov
jnp
xor
in
cmp
sub
inc
shl
pop
mov
jns
icebp
pushf
fwait
sbb
cld
and
pusha
arpl
repnz
movsl
aad
pusha
or
or
xor
sbb
sub
into
inc
sti
notb
fildll
adc
mov
xor
cmpsl
ljmp
mov
and
and
pop
sub
jae
fidivrs
test
xchg
dec
add
movsl
mov
mov
cltd
cmpsl
and
lret
arpl
adc
mov
call
sbb
in
inc
sbb
out
sti
dec
mov
into
inc
push
test
out
pop
dec
push
hlt
push
insb
iret
bound
ja
add
cmp
adc
call
fstpt
or
out
pop
and
push
iret
push
out
imul
mov
cld
fsts
and
popf
cmp
mov
push
repnz
inc
dec
jle
fsubs
sarb
popa
mov
mov
add
ljmp
dec
mov
xchg
outsb
cmp
xor
pop
sbb
rorl
pushf
pop
out
jmp
pushf
xor
cmc
aas
mov
loop
mov
icebp
inc
andb
and
adcb
adc
adc
mov
sub
inc
xchg
ret
fnstsw
fimull
adc
rclb
cmpsb
std
cmp
pop
in
iret
shlb
xchg
popa
xor
jp
xchg
xor
jo
aas
mov
sub
pop
and
mov
sti
mov
xchg
cmp
jo
insb
pop
jo
faddl
ret
insl
js
mov
ja
test
rorl
mov
mov
mov
je
adc
jo
cmpsl
movsl
xor
cmp
dec
push
movsl
sub
jle
lret
lods
sub
xor
cmp
sub
mov
test
scas
scas
mov
incl
push
dec
je
mov
xor
jle
lods
or
jp
leave
mov
add
pop
pop
test
movntps
fnsave
sbb
mov
cmp
iret
ljmp
xor
lds
lea
mov
dec
mov
xlat
and
fucomip
cmp
adc
aad
mov
sbb
nop
lret
sbb
cmp
sbb
int3
out
mov
mov
xchg
into
test
insl
fisubrl
in
popa
xor
xor
inc
test
mov
nop
lahf
and
incl
sbb
and
fwait
jnp
adc
sbb
lret
sbb
sub
inc
rorb
les
mov
incb
mov
adc
bound
dec
and
pop
mov
shrb
pusha
popa
pop
das
popf
cmp
mov
dec
inc
xor
add
mov
fs
gs
mov
or
aad
jae
fsubl
pushf
mov
or
lods
dec
jnp
pop
hlt
and
lret
xchg
push
out
push
mov
imul
cmp
adc
stos
sub
fmul
in
pop
cs
pop
test
test
xchg
fisubs
jle
insb
add
neg
aaa
and
add
jnp
cmpsl
fcomps
mov
jmp
sub
cli
inc
in
imul
mov
push
add
mov
sub
sbb
mov
nop
mov
inc
and
movsl
jae
push
xor
adc
ja
mov
jmp
fwait
xor
aad
jp
lahf
icebp
adc
fwait
sub
fiaddl
xor
les
into
mov
sbb
cs
lret
inc
mov
push
and
fsubrl
test
adc
movsl
pop
push
adcb
sti
adc
xchg
sub
inc
fadds
loop
stc
xchg
cmp
xor
and
out
cmp
icebp
ficoml
movsb
call
xlat
pop
lcall
dec
sbb
inc
push
addb
iret
inc
jge
in
loope
push
les
or
mov
ljmp
mov
addl
aad
insl
scas
in
push
jg
out
aad
push
in
adc
or
push
mov
mov
mov
rcll
out
in
push
inc
and
jp
xor
cwtl
test
dec
mov
sti
mov
stc
sbb
mov
fiadds
mov
inc
popa
push
icebp
sbb
adc
mov
test
cwtl
fnstsw
cs
in
jb
push
pusha
xor
cmp
or
mov
xor
push
inc
mov
mov
pop
inc
mov
jno
stos
push
in
pop
add
inc
cmp
dec
repnz
lret
mov
ja
lcall
dec
imul
pushf
loope
add
mov
dec
xchg
aaa
mov
in
ss
loop
shrl
cmc
roll
inc
mov
xlat
mov
das
or
cmpsl
push
out
jne
xor
push
out
jno
iret
aam
add
outsb
inc
push
cld
jmp
pop
dec
mov
cmpsb
in
mov
cs
icebp
inc
cmpsl
mov
sub
shlb
xchg
mov
movsl
sbb
xchg
fnstsw
arpl
jne
mov
mov
daa
movsl
sub
xchg
movsb
ret
sbb
leave
and
js
xchg
inc
loop
jo
push
fmull
adc
push
clts
jg
push
sub
xchg
lcall
imul
ret
ds
daa
sbb
scas
xor
idivb
pop
jl
cmp
leave
dec
xor
ficompl
push
rcr
inc
sbbl
xchg
and
aas
mov
adc
push
xor
push
repz
jo
xchg
lahf
or
cmp
fwait
pop
xchg
pop
or
stos
jmp
xor
sub
xchg
lock
xor
aas
or
ret
pop
out
and
ret
insl
and
fs
ret
arpl
push
jle
push
jge
lret
icebp
jo
cltd
in
cmp
push
test
dec
sub
jns
and
divb
xor
xchg
dec
mov
loopne
jge
divl
mov
pop
rorl
iret
jbe
add
xlat
inc
lcall
push
add
cmpsl
mov
out
jg
rcr
aaa
pushf
push
and
aas
adc
sub
iret
mov
jp
movsl
sbb
movsl
xchg
jae
repz
dec
shr
lea
push
iret
test
shl
jb
inc
jbe
sti
sbb
and
clc
xor
jb
and
pop
into
gs
dec
cwtl
das
cwtl
adc
push
xchg
cmc
rol
mov
mov
inc
and
jecxz
add
push
dec
scas
or
push
sbb
aad
cld
cmp
test
jmp
pop
xchg
fcomp
inc
insb
mov
jmp
adc
xor
dec
stc
ds
mov
pop
mov
ret
and
pop
adc
mov
mov
jno
dec
out
jo
out
decb
dec
sub
popa
adcb
add
lret
jnp
jbe
dec
daa
cltd
out
inc
jl
movsl
inc
cmpsl
xorb
cltd
insl
pop
lea
fs
jmp
lret
cmpl
frndint
mov
imull
or
mov
mov
cmp
icebp
jae
xchg
xor
aad
inc
sbb
jge
or
fmull
idiv
lret
inc
push
lods
adc
pop
jecxz
insb
dec
pop
inc
in
jnp
call
stos
ret
mov
into
nop
pop
jmp
roll
fcmovnb
jbe
les
mov
scas
fildl
sbb
push
jns
es
imul
daa
mov
mov
ficomps
mov
mov
out
inc
loopne
jae
std
push
fwait
js
outsb
fwait
ret
mov
mov
jl
fbstp
sbb
sbb
mov
movhps
int
or
add
mov
rsm
mov
daa
dec
mov
push
mov
popa
cmp
sub
stc
in
lcall
jmp
pop
push
inc
in
bound
mov
mov
push
leave
inc
icebp
sbb
aaa
mov
push
ss
mov
mov
dec
outsl
sbb
and
stos
in
sub
pop
stos
inc
add
dec
loopne
mov
testl
push
test
push
inc
fldl2e
add
scas
out
aad
mov
adc
fadd
xor
xchg
loope
mov
in
lods
push
cmp
fucomp
adc
arpl
add
in
rol
fstl
sbb
mov
cmp
mov
stc
test
jmp
imul
fwait
mov
jge
cltd
stos
in
mov
adc
xchg
arpl
cld
xchg
push
or
rcll
lods
mov
insl
lds
add
mov
repz
push
pusha
jne
scas
mov
mov
fnstcw
nop
arpl
mov
jecxz
push
mov
fdecstp
pop
jne
call
pop
xchg
jns
aad
sbb
dec
push
mov
rcrb
jno
lods
fxch
loop
mov
and
jge
push
int
loope
mov
xchg
adc
sub
in
scas
cltd
fnstenv
movsl
gs
xchg
fstl
mov
mov
cs
mov
mov
stc
imul
and
jecxz
pop
mov
push
or
std
fnstenv
aad
mov
std
mov
sbb
shrl
shl
gs
adc
stc
mov
in
cmp
jno
imul
dec
jl
mov
adc
pop
insl
dec
cmc
jns
lock
popf
mov
pushf
fsts
adc
out
test
imul
sub
aam
into
jns
sarb
loope
flds
lcall
pop
pushf
xor
or
int3
sbb
pop
xchg
lahf
jno
or
leave
push
rclb
dec
int3
adcl
pop
in
in
pop
fldenv
adc
test
jnp
shll
std
and
xor
lret
lods
or
pop
cwtl
stc
cmc
adc
and
sbb
xor
stc
sbb
xor
push
daa
inc
xchg
jmp
js
pusha
xchg
out
and
lods
adc
mov
inc
dec
bnd
jg
andl
sbb
pusha
imul
mov
jae
negl
das
sub
sub
mov
sbb
popa
add
mov
pop
ss
cmp
clc
xchg
in
cmp
fmull
shlb
movsb
sub
jmp
lcall
sub
or
std
dec
mov
sbbb
dec
jecxz
fstpl
cmp
mov
mov
loopne
cld
fists
and
icebp
cwtl
mov
push
or
std
or
xchg
in
pop
fs
nop
fdivrl
mov
fs
pop
adc
mov
imul
sti
jnp
mov
sub
cmc
ret
add
cmp
aas
or
lea
daa
cmpsl
sbb
inc
fs
cmp
out
pop
scas
sub
add
push
sbb
mov
pop
cltd
and
mov
mov
or
int
out
sbb
adc
popf
hlt
hlt
xor
xor
sbb
sub
sub
mov
pop
pop
subb
jns
and
mov
cmp
lea
repnz
movsl
xor
mov
inc
dec
sbb
in
loop
push
mov
rcl
ljmp
roll
out
dec
shll
in
gs
sub
pop
sbb
pop
lret
inc
push
xchg
call
adc
scas
inc
add
pop
lcall
in
cmpsb
xor
shl
cmp
fisubrs
ret
sbb
in
stos
push
pop
hlt
xor
cmpl
push
sub
or
xchg
rcll
daa
out
adc
pop
push
aam
es
filds
cltd
or
hlt
sub
out
add
sub
icebp
inc
or
outsl
sub
jg
popf
lahf
sbb
or
xor
xchg
xor
hlt
adc
or
sbb
std
rorl
cwtl
dec
out
js
js
add
pop
cmp
add
mov
scas
sub
rcrl
repnz
adc
xchg
aam
pop
gs
or
mov
mov
mov
add
push
cmp
sbb
test
nop
xchg
cs
out
cmpsb
mov
popa
dec
js
stc
das
lods
adc
outsl
stos
in
jp
popf
jns
and
pop
cmp
push
pop
scas
js
sbbb
pop
lds
add
xchg
jmp
inc
rorl
and
dec
andl
sbb
in
cmpsb
nop
and
mov
push
inc
sbb
sbb
in
inc
pop
lods
stc
xlat
addb
sub
f2xm1
mov
dec
xor
insb
inc
push
dec
push
mov
fwait
dec
popf
test
xchg
mov
cmp
fwait
ret
and
into
in
inc
rcrb
pop
adc
pop
and
pop
aad
lds
or
adc
movsl
mov
fldenv
fsubrp
and
insl
add
leave
and
fldenv
inc
aaa
push
mov
loope
sbb
dec
mov
dec
xchg
in
and
fidivl
xor
and
ja
pop
rorl
and
cli
jmp
xchg
add
dec
push
pop
loop
fs
xchg
dec
sbb
daa
in
adc
mov
pop
xchg
add
sbb
cmpb
inc
and
xchg
sti
fs
das
xor
addr16
add
mov
mov
mov
mov
cmpsl
scas
rcl
xchg
pusha
adc
push
out
mov
adc
outsl
xchg
clc
adc
adc
adc
loop
ds
mov
imul
pop
push
mov
add
mov
pop
xchg
xchg
jb
cmpsb
int
outsb
mov
sti
and
add
and
pop
mov
mov
xchg
aaa
fwait
add
cmp
mov
sbb
mov
cmp
movsb
mov
lcall
cs
jo
je
xor
xor
or
mov
test
das
and
fcmovbe
pop
out
mov
sub
rep
loope
mov
xor
mov
cwtl
xchg
mov
pop
dec
mov
mov
cmc
call
adc
repnz
mov
xlat
in
pop
aaa
adc
and
movsl
sbb
mov
and
push
cmpsb
in
sbb
push
out
das
orl
ds
enter
sub
xchg
mov
xchg
in
outsb
sub
jnp
lcall
insb
add
pop
aas
sbb
cmp
mov
inc
std
les
ds
and
test
adc
inc
fs
aam
mov
stos
das
rcl
or
jbe
xor
or
jecxz
test
bound
xorl
mov
sub
pop
mov
jg
pop
lret
mov
popa
cmp
das
sub
into
pop
andl
add
xchg
in
add
popa
adc
cmp
fimuls
into
movsl
sti
sbb
add
fnstenv
mov
fs
sbb
or
movsb
dec
or
mov
repnz
mov
jl
dec
cmpsb
jp
push
or
imulb
stos
add
popf
sbbl
insl
or
cmpsl
mov
dec
xor
dec
jno
adc
aad
and
mov
mov
mov
outsb
pop
pop
std
test
inc
jo
in
sti
fisttpll
scas
pusha
jg
jle
pop
stos
les
push
lret
adc
mov
mov
xor
mov
mov
filds
cmpl
pushl
ja
or
add
cmp
mov
stos
inc
xchg
jne
sbb
ficoms
sub
xor
adcl
bound
push
data16
or
int
inc
loop
aaa
shrl
mov
les
in
sbb
sbb
mov
int
rcll
adc
clc
cmp
mov
nop
fwait
in
cltd
clc
jne
dec
xor
cmpsb
add
jb
mov
xor
dec
fs
std
outsb
pop
pusha
cmp
jecxz
mov
ds
pop
inc
lds
mov
cmp
enter
hlt
inc
in
xor
jno
sbb
imul
mov
imul
dec
stos
push
and
inc
sub
mov
popa
or
mov
pop
sbb
adc
jmp
jbe
mov
pop
rcl
fstl
cs
in
push
popf
sub
and
js
out
pop
jbe
int
pop
dec
mov
or
and
dec
jo
mov
xor
jae
pop
outsl
fucomip
inc
pop
jns
pusha
lret
or
call
mov
jae
fidivs
sbb
movsb
imul
sarl
jmp
mov
or
xlat
cmpl
ret
jle
ss
cmp
sets
movsl
in
push
mov
mov
fwait
sub
cltd
popf
add
pop
in
mov
cltd
mov
jmp
out
mov
xor
cmp
into
lock
cmc
or
insb
pushf
fs
or
add
sbb
inc
mov
testl
xorb
loop
sbb
xor
adc
or
sti
cmp
in
xchg
jmp
dec
mov
xor
pusha
jecxz
or
add
dec
add
sub
jbe
shlb
int
pop
push
dec
pushf
push
ja
repnz
push
and
aad
mov
sub
pop
or
nop
pop
fdivrs
cmp
pop
dec
std
orb
xchg
push
jo
das
adc
cmp
inc
xor
inc
or
dec
popf
jae
jb
inc
or
sti
push
mov
cmp
std
adcl
fildll
pop
pop
xchg
sbb
inc
pop
iret
push
push
sbb
inc
repz
add
aas
cld
jb
xor
and
std
enter
psubsw
dec
adc
fistpl
pop
mov
sbb
mov
xor
stc
or
std
ja
and
pushf
outsb
mov
int3
fnstsw
dec
pop
adc
and
fstps
push
ss
fsubrs
push
cmpsb
enter
jle
fwait
or
stos
outsb
testb
push
sub
cmp
cmp
cmp
orb
loop
ret
das
and
les
cmp
loop
cmpl
loop
in
mov
sti
repnz
ret
adc
or
lcall
arpl
mov
mov
loop
bound
and
cmp
or
mov
or
jmp
data16
dec
or
shr
xchg
mov
fs
lock
and
icebp
push
subb
and
mov
scas
fdivr
lahf
repnz
pop
pop
jmp
stos
push
lret
insl
inc
adc
add
out
xlat
out
mov
pop
mov
repnz
xchg
push
push
jnp
aam
fists
xchg
ja
and
inc
mov
lock
ljmp
adc
in
mov
xchg
sub
test
lret
mov
pushl
xlat
and
aas
sti
push
jmp
xchg
sub
loop
push
aad
movsb
or
loopne
fsubrl
imul
mov
inc
xor
out
cmp
in
aad
push
inc
xor
pop
test
cmp
repnz
and
or
inc
mov
lret
dec
cmc
adc
out
xor
into
pusha
mov
sbb
mov
xor
push
movsl
dec
xchg
popl
mov
bswap
mov
in
dec
push
sbb
lret
shlb
jl
xor
xor
imul
xor
ja
dec
xchg
sub
notl
cmp
cmpl
sub
ja
jge
cmp
fcomi
adc
adc
pop
xchg
jle
inc
inc
mov
xchg
movsl
movsl
filds
popa
stc
jbe
in
mov
jmp
lret
dec
jmp
movsl
cmp
xchg
loope
les
repz
dec
pop
jg
mov
pushf
idiv
push
xchg
or
dec
mov
mov
pop
xchg
mov
movsb
xor
test
stc
popa
lds
fiaddl
push
mov
or
sub
cmp
jne
xlat
or
cwtl
clc
inc
push
lret
mov
mov
js
std
mov
mov
mov
fstpl
call
add
mov
sub
das
sbb
loop
es
xchg
xor
push
and
jnp
or
mov
scas
adc
push
sbb
jl
addr16
sub
test
lods
mov
add
mov
cmp
mov
fildl
mov
push
jecxz
mov
inc
inc
cld
ss
lret
dec
test
es
push
xor
lret
mov
cmp
loop
add
inc
lds
enter
inc
sub
add
aaa
cli
movsb
mov
push
pop
lcall
fsubrl
test
ret
and
lock
repnz
clc
cld
lret
sub
iret
pop
xchg
lock
fidivrs
push
mov
jae
sarb
mov
shrb
xor
push
fnstcw
arpl
lea
jne
sub
sbbb
xor
mov
inc
pushw
rcrl
mov
addb
pop
ror
add
movsl
pop
jne
loopne
jg
daa
fstps
cmp
xchg
inc
xchg
stos
push
loope
xchg
adc
xchg
xchg
xor
sub
out
xchg
ja
pop
inc
shr
loope
sbb
movsb
jbe
ljmp
mov
loopne
mov
jne
data16
inc
mov
or
xchg
mov
mov
pop
and
pop
fdivl
xchg
jb
sahf
test
xor
mov
addr16
sar
call
ret
sbb
leave
test
std
in
popa
dec
jmp
inc
adcb
mov
cmp
sbb
mov
in
das
jns
in
loopne
fistl
cli
and
pop
cld
sub
cld
fiadds
xor
add
push
popf
mov
add
imul
mov
pop
push
fst
sbb
loop
cmp
into
in
shll
cmp
in
mov
loop
mov
push
pop
push
insb
addr16
sbb
std
int3
adc
insl
jb
or
push
inc
sub
and
inc
mov
cmpsl
out
pop
inc
sbb
xor
in
mov
fs
fmull
and
je
fidivrl
in
jne
xchg
cld
loope
jbe
enter
xchg
dec
xor
stc
push
jnp
xlat
and
xor
inc
dec
mov
cwtl
mov
frstor
push
mov
add
and
or
or
xor
stc
in
or
xchg
jae
test
push
jl
cmp
push
orb
gs
inc
add
mov
jle
test
sbb
sub
std
mov
adc
out
cmp
das
jns
push
lahf
enter
es
dec
in
fimuls
xor
shl
pop
sub
sbb
dec
sub
ficomps
movsb
push
jge
and
out
xor
cmp
push
xchg
ss
dec
out
fdivr
ss
stos
out
popa
in
xchg
mov
cmp
mov
xor
std
icebp
enter
sub
pop
pop
cmp
xchg
cmpsb
xor
lahf
and
into
and
xchg
popf
mov
shl
fdivs
cmp
std
jb
in
pop
mov
inc
sbb
dec
xchg
mov
das
pop
or
sub
sbb
cmp
ficomps
out
xor
pop
xchg
and
add
and
or
insl
cli
push
jge
into
pop
adc
cmpsl
xor
jnp
push
add
int
in
in
js
jp
stc
add
add
loop
push
push
push
mov
pop
movsl
inc
push
stos
aaa
sub
push
jl
out
xor
xchg
das
inc
mov
add
in
rolb
mov
and
fmuls
pop
mov
mov
pop
test
pusha
loop
inc
out
daa
ds
sbb
aad
orl
pop
pop
cmp
popa
xor
pop
test
lods
loopne
cs
mov
into
sbb
fstpl
inc
inc
inc
jne
mov
stc
dec
sub
inc
push
aas
fwait
sub
out
and
jmp
mov
cmp
add
into
out
divl
addr16
loopne
les
mov
ds
dec
jnp
int3
shl
popf
ret
add
mov
push
sub
sub
test
jle
stos
sbb
cld
rcl
pop
add
js
sbb
jl
cmp
jmp
dec
popl
movsb
out
xchg
push
mov
cwtl
into
lret
inc
std
sahf
cmp
adc
out
dec
xor
outsb
mov
fs
adc
mov
mov
sbb
push
jg
lahf
sbbl
sub
pop
cwtl
out
inc
fcmovnu
loopne
cltd
out
mov
and
fwait
cmp
cmp
aaa
xor
xor
mov
mov
inc
fidivs
dec
cmpsb
xor
add
jge
xor
add
sub
fistl
mov
into
gs
xchg
sub
pop
in
mov
cltd
inc
mov
js
xchg
je
cmpsl
ja
je
cmp
fs
push
jbe
roll
and
inc
lea
push
mov
movsb
jne
dec
fwait
popf
in
mov
ret
ljmp
and
fs
xchg
sbb
lret
adcl
aam
or
pop
adc
and
stos
mov
movsl
and
int
mov
adc
jmp
jnp
cmc
mov
test
imulb
mov
repz
pushf
mov
lahf
add
cmpsl
adc
fstps
and
icebp
lret
and
cmp
sbb
sbb
pop
aad
imul
inc
out
cmp
bound
inc
cmp
jno
cld
imul
int
inc
mov
xchg
stc
push
seta
int3
dec
mov
shrb
xchg
jmp
push
or
mov
shll
pop
cltd
push
aad
fstl
ret
mov
push
decb
lock
jb
jae
cmp
adc
sub
jo
push
jecxz
or
fcmovnbe
cmp
roll
jecxz
mov
sub
mov
or
xchg
cltd
mov
cmp
lds
dec
dec
xchg
cmp
movl
jno
mov
lret
ja
inc
pop
cld
in
jne
inc
shrl
pop
inc
js
jp
imul
jp
iret
mov
inc
mul
popf
pop
divl
dec
cmpsb
scas
xor
push
cmc
sarl
dec
pop
aad
adc
fidivrs
sub
mov
test
push
out
sub
subl
imul
and
ss
sbb
cmp
xor
mov
sbb
loop
cmp
inc
aaa
mov
filds
adc
fldcw
dec
pop
loope
jmp
daa
cmp
sub
mov
in
pop
inc
mov
iret
sub
mov
call
movsl
mov
xchg
jne
negb
cmp
pushf
ret
push
fwait
rcr
mov
fstpt
cmp
mov
push
push
xchg
xchg
data16
push
aas
loop
mov
xlat
int
imul
scas
insl
iret
shr
popf
mov
movsl
nop
jecxz
loopne
xor
or
stos
and
inc
lret
pusha
add
das
push
mov
fstps
dec
inc
rol
cs
imul
sbbb
mov
imul
pop
mov
mov
lret
ja
out
int3
adc
or
cmp
insb
filds
aad
mov
fcompl
leave
in
jno
add
push
sbb
xchg
or
in
and
mov
sahf
mov
lahf
inc
repz
test
push
push
push
mov
roll
sbb
shl
sbb
fcmovb
ja
mov
xchg
je
rcr
jne
popl
movsl
fs
int
in
bound
arpl
mov
aas
fdiv
adc
jle
cltd
cmp
out
pop
sbb
or
or
jmp
or
dec
sub
dec
js
sub
mov
mov
jne
and
lahf
sub
mov
hlt
sub
fwait
sub
aad
mov
mov
cmp
test
roll
repnz
adc
lret
in
orl
pushf
loope
insl
sbb
ret
sbb
call
xchg
mov
lret
andb
or
movb
fstp
xchg
into
xchg
out
and
scas
push
pop
jns
in
mov
outsb
data16
cmp
jg
in
mov
in
xor
in
mov
jp
fldt
xor
insl
mov
mov
mov
inc
jbe
pop
xor
in
scas
es
pop
sbb
orl
test
int3
pop
cltd
mov
sbb
add
or
bound
cmp
cwtl
mov
sbb
sbb
xor
in
jae
mov
jl
cmp
inc
lret
push
push
sub
jbe
xchg
dec
mov
mov
push
stos
push
adcl
adc
xor
dec
imul
sub
mov
xchg
cltd
sub
inc
push
hlt
sub
jae
jne
cmp
lcall
sbb
aam
mov
add
fsubr
popf
sbbb
popa
subl
es
pop
jecxz
scas
lods
mov
jne
shrb
sub
test
cmp
xchg
jmp
adc
mov
or
push
mov
imul
xchg
xor
sub
lods
insl
jae
push
out
xor
test
push
int
mov
mov
int3
or
adc
adc
popa
mov
jmp
mov
lods
insl
push
addb
jmp
xchg
ss
mov
insb
loop
fs
std
sbb
mov
mov
jmp
popa
pusha
push
mov
shrl
mov
mov
cmp
les
adc
xor
xchg
pusha
and
push
pushf
int3
mov
jmp
jmp
xchg
std
xchg
push
pushf
push
int3
insb
or
test
aad
mov
jecxz
jle
rclb
jbe
or
mov
rcrb
lds
and
sub
inc
xchg
dec
in
mov
adc
inc
jb
outsb
mov
and
mov
adcl
xor
sbb
mov
mov
or
adc
sbb
imul
dec
mulb
mov
out
jl
movsb
sub
gs
push
into
mov
cwtl
cmp
testb
mov
mov
shl
push
xchg
lea
test
cs
in
push
nop
jne
loopne
inc
lock
pop
xor
sub
add
repz
jp
lret
dec
inc
in
or
push
rcrl
cmp
pop
pusha
aas
test
std
sarl
push
bound
xchg
in
fnstcw
sub
inc
adc
into
xchg
popa
xchg
xor
adc
int
inc
fldenv
out
mov
das
pop
mov
push
andnps
das
dec
loope
cmp
fldl
out
sub
imul
aas
pop
sbb
fnsave
fwait
popf
xchg
rcll
xor
pushf
enter
inc
out
js
loopne
jmp
xchg
and
ss
ljmp
or
inc
fisttpll
xchg
loop
cmp
cmpsl
mov
jne
cmp
jae
arpl
ud0
lcall
xor
out
lds
jl
ljmp
lods
add
cmp
sbbl
mov
pop
xor
push
test
cmp
nop
adc
lock
adc
lcall
mov
stc
dec
lret
cwtl
ja
sbbb
mov
lret
inc
cmp
aas
xor
push
into
iret
aaa
sub
push
and
sub
pop
cmp
pop
add
loop
inc
sbb
pop
cmovs
ss
test
jne
xor
dec
cmp
js
mov
cmp
mov
inc
pop
xchg
inc
cmp
iret
fldl
jg
push
inc
leave
ret
js
popa
iret
insl
ljmp
sarb
repnz
lods
and
jmp
inc
daa
jl
cmp
push
popf
iret
outsb
loop
out
sbb
cmpsb
or
cs
out
inc
dec
and
sub
jb
pusha
cmp
aad
pop
inc
xchg
mov
jns
lds
sub
cld
inc
xor
int
js
push
shll
add
out
mov
fdivl
loopne
cmp
fnstcw
sbb
mov
mov
outsb
and
je
outsb
mov
cmp
adc
sti
xchg
cmpsb
push
leave
mov
test
dec
icebp
mov
or
sbb
fnstsw
test
aam
popa
adc
aas
push
mov
nop
fiaddl
in
xor
jae
aad
pop
das
push
sbb
movsl
inc
or
fistpll
addr16
pop
lret
fwait
out
push
lcall
mov
sub
loop
lret
cmp
out
or
sahf
push
xchg
jp
and
adc
push
pop
pop
scas
out
sub
cld
rolb
sbb
and
std
aaa
dec
adc
pop
hlt
and
in
xor
mov
js
pop
aaa
sub
jmp
dec
pusha
sub
mov
push
pop
out
and
sbb
test
sub
inc
scas
mov
inc
fistpll
jl
sahf
inc
and
test
xor
stos
xchg
shll
or
cmc
xlat
sub
push
sub
push
mov
or
mov
ficoml
aad
inc
add
arpl
dec
stos
pop
insb
in
push
or
arpl
sbb
xor
sbb
in
jmp
mov
pop
sbb
je
inc
repnz
rclb
cmp
mov
fistpl
push
inc
jne
xor
jbe
and
jae
mov
fadds
sbb
add
fnstenv
xchg
iret
jne
out
ds
and
or
and
ret
mov
mov
adc
cmpsl
ret
mov
shl
stc
mov
mov
in
jne
fisubs
inc
sub
sub
add
outsl
inc
mov
mov
pminsw
add
mov
nop
rcrl
sbb
sbb
shll
inc
outsb
xor
jmp
cmp
push
jne
aaa
push
fwait
inc
hlt
mov
or
adc
xchg
setge
pop
cmp
push
movb
loop
sub
pop
imul
pop
lcall
imul
and
mov
dec
test
int3
xchg
push
jns
jge
inc
imul
out
mov
repnz
push
icebp
mov
and
add
test
mov
xor
std
and
and
and
cmp
sub
push
xor
push
sbb
xchg
call
mov
xor
inc
es
pop
pushf
jge
and
jl
rorl
repnz
dec
in
inc
rcrb
in
loope
cmp
xorl
cmpsb
loop
pop
loop
rcll
pop
push
mov
out
dec
jne
ljmp
sub
sub
or
fisubl
loop
in
ljmp
and
and
sbb
xor
or
es
subb
clc
add
jbe
jne
das
add
sbb
mov
lret
rcll
xchg
incb
pop
jle
lret
addr16
push
cmpsb
mov
cld
mov
insl
nop
jg
xchg
xor
adc
sub
pop
xchg
jne
cli
jb
iret
lock
fs
add
add
inc
cmp
lods
jl
cmp
sti
outsl
pop
scas
sub
cmpsb
andb
pushf
lea
std
and
aaa
fs
lret
dec
shrl
into
mov
mov
cmp
mov
mov
xlat
dec
mov
dec
and
mov
mov
cmp
sbb
pop
and
xor
test
or
sbb
pushf
aaa
fisubrl
xchg
push
mov
into
inc
mov
or
aaa
cmp
add
and
jno
frstor
or
shrb
add
sbb
xchg
cld
pop
inc
jmp
popa
in
cmp
or
stc
das
inc
decl
insb
call
xchg
lret
xchg
nop
xchg
mov
stc
sbb
dec
adc
jl
pop
mov
adc
pop
mov
push
dec
in
bound
push
orl
lahf
cld
jne
mov
sarb
bound
pop
pop
jle
scas
gs
sub
daa
adc
shl
adcb
int3
pop
sub
mov
arpl
jl
jae
divb
mov
pop
loope
sti
outsb
pop
hlt
icebp
inc
add
inc
aad
out
cmp
or
mov
daa
test
mov
sbb
stos
mov
adc
fidivrs
nop
pop
adc
frstor
push
stos
lea
sahf
es
daa
mov
mov
sub
hlt
vunpckhps
add
test
loopne
mov
leave
push
cmp
jmp
mov
mov
gs
decl
push
pop
xor
adc
and
xadd
pop
sbb
pop
pop
jno
xorl
inc
sbb
testb
lret
das
cmpxchg
xchg
lret
inc
sbb
pop
jl
fimull
xor
push
addps
loop
fdivrl
inc
cs
imulb
jne
xchg
cltd
xor
stos
add
jne
rcr
fdivrl
xor
dec
mov
jmp
sub
push
fs
sbb
jns
iret
sub
gs
cltd
add
imul
push
leave
test
cltd
jb
push
and
in
nop
mov
test
mov
sub
pop
data16
aaa
aaa
cltd
sahf
push
mov
in
movsl
xchg
add
int
aad
testb
mov
xchg
mov
imul
dec
cmpsb
addb
mov
dec
cmpsl
mov
cld
std
hlt
cltd
pop
and
lds
je
out
xchg
shl
inc
sub
mov
dec
xchg
les
push
sub
cmc
std
mov
jge
imul
cld
outsl
jne
in
into
cltd
fsubs
sub
or
es
in
jne
out
mov
xor
adc
movsb
cli
push
int3
pop
dec
lret
push
dec
imul
dec
das
cmp
or
cmpsb
gs
adc
mov
loop
mov
imul
sub
push
mov
mov
pop
cltd
jp
fucomi
xor
mov
icebp
testl
loop
mov
inc
adc
test
ss
jne
add
jne
push
inc
pop
sub
out
iret
scas
iret
or
adc
pop
cmp
js
xor
ret
iret
outsl
dec
and
insl
leave
push
test
pop
sbb
add
mov
cmp
dec
inc
and
in
dec
jmp
mov
movsl
jae
dec
inc
aaa
imul
sub
adc
std
push
mov
cwtl
daa
jmp
sub
gs
sub
cmp
sbbl
int3
out
ret
xorl
call
mov
test
cmp
jmp
xchg
jo
fwait
daa
xchg
push
adc
add
xor
jb
insb
testl
xor
sahf
mov
das
and
xor
out
movsb
push
sti
jmp
dec
inc
cmp
pop
xor
inc
ja
jnp
fistpl
mov
scas
cmpsl
mov
jns
or
mov
imul
add
pmulhuw
out
mov
pop
add
mov
lahf
and
xchg
js
jnp
sbb
sub
push
jle
jle
mov
xor
inc
js
and
rcll
leave
cmp
or
repnz
sbb
inc
pop
les
jmp
cmpsl
push
dec
sub
pusha
mov
xchg
dec
aam
aad
clc
in
lods
imul
fstpt
mov
mov
xor
or
add
in
std
pop
add
or
ljmp
js
push
or
test
clc
fcompl
mov
mov
jne
in
out
flds
repnz
ret
mov
push
or
xor
xchg
inc
mov
subl
xchg
cs
out
in
aaa
inc
dec
or
pop
mov
pushf
xchg
rolb
aaa
jbe
scas
pop
mov
dec
cmpsl
popf
js
mov
int3
push
inc
lret
sub
push
adc
xchg
jae
push
roll
pop
xor
cmp
bound
push
jmp
mov
adc
repnz
add
nopl
xchg
add
addl
sub
and
or
outsl
dec
and
das
xor
dec
aad
leave
int
cli
mov
sbb
push
cmpsb
icebp
imul
cmp
mov
jbe
xor
mov
cmp
fildl
ret
in
daa
out
mov
rcrb
jp
sub
xchg
mov
mov
push
mov
popf
pop
movsl
nop
inc
xchg
lea
lret
in
out
or
scas
xchg
dec
inc
jno
sbb
inc
dec
out
xchg
sbb
add
fs
fistpll
sbb
mov
and
lret
div
lahf
xor
xor
iret
sahf
mov
sbb
loop
mov
push
cmp
sbb
std
js
sbb
inc
lret
ret
adc
xchg
iret
xor
std
mov
pop
rcl
mov
xor
cltd
sub
xchg
xor
jecxz
mov
into
gs
mov
mov
xor
push
rcll
and
xor
mov
dec
scas
dec
cmp
mov
in
dec
xchg
push
xchg
sub
and
or
and
dec
pop
imul
mov
mov
sbb
std
gs
sbb
inc
mov
xchg
insl
clc
push
sub
mov
xor
aad
movsb
pushf
xchg
ret
pop
xchg
push
les
popf
cwtl
dec
pop
das
jge
xor
psllq
jo
nop
cmc
bound
mov
push
jae
push
int
ret
test
pop
xor
loope
jmp
nop
sub
fisubrl
cmpsl
pop
pop
xchg
inc
and
xor
adc
mov
push
nop
jmp
add
mov
js
inc
or
das
negl
jne
cmp
ret
scas
xor
hlt
and
add
insl
outsb
pop
stos
cmp
sbb
das
sbb
shl
das
les
in
inc
xor
inc
cmp
dec
pop
mov
in
xorl
imul
sub
jns
inc
fstpl
lret
pop
imul
aad
test
push
sbb
dec
int3
lock
out
push
ljmp
xchg
ss
cltd
aad
das
pop
movsb
pop
sub
jno
mov
aad
stos
in
sbb
add
mov
js
xchg
fldl
lret
stos
rcll
mov
jecxz
fsubl
jbe
adc
fstl
in
in
in
call
fstpt
iret
or
add
ja
cmpsl
data16
ja
test
mov
xchg
aaa
xlat
mov
rcll
cmc
pop
mov
sub
out
sbb
add
clc
ljmp
add
insl
imul
test
pop
sub
mov
inc
push
out
cmpl
xor
aad
aad
imul
adcl
cwtl
dec
push
fcompl
call
sbb
and
add
push
sbbb
mov
mov
sub
mov
mov
mov
in
or
repnz
and
sub
and
test
mov
xor
or
inc
xchg
imul
mov
xchg
or
ss
push
dec
xor
push
or
daa
xchg
jne
fimuls
cmc
dec
pop
dec
lea
xor
or
sbb
xchg
fucomi
cmp
inc
fs
fadds
pop
popa
push
outsb
pop
add
and
stos
mov
inc
add
cmp
sub
push
adc
and
cltd
lea
outsl
les
sub
mov
lods
insl
sti
or
adc
punpcklbw
pop
mov
dec
push
cmp
repz
das
insb
pop
mov
fimuls
fstpl
loop
cltd
icebp
jecxz,pn
es
xchg
and
fsubrs
dec
mov
cmp
adc
aaa
dec
adc
dec
fwait
push
pop
and
mov
inc
jo
xor
jmp
mov
out
addl
movsb
pop
test
xor
cmpsb
hlt
sub
mov
aaa
mov
jmp
cmp
ss
xchg
pop
das
mov
dec
inc
scas
shlb
incl
mov
nop
es
inc
das
sbb
lea
jmp
popf
add
ss
adc
icebp
pop
fwait
xchg
mov
push
insl
loop
inc
pushf
dec
aaa
cld
adc
dec
iret
lahf
jbe
hlt
iret
jmp
mov
xchg
push
xchg
mov
je
das
imul
mov
cmpsl
lret
std
loopne,pn
push
or
push
sbb
scas
fsubl
fs
and
in
xlat
cmpsl
inc
lods
push
in
mov
sbb
sub
lea
je
sub
adc
cmc
cmp
adc
cmp
and
adc
mov
lods
fs
and
and
sub
pop
gs
pop
sub
dec
lret
or
xor
xor
jbe
jmp
jg
sbb
sarb
imul
les
addr16
add
sub
mov
movsl
shrl
mulb
pop
sbb
cmp
jmp
stos
jb
call
pop
jp
in
xchg
mov
ja
jns
imul
sbb
mov
fisubrl
stc
jae
mov
out
cmp
gs
adc
in
lds
jmp
sub
mov
mov
jnp
int3
sbbb
push
outsb
movsl
out
jo
cwtl
test
jecxz
stos
xor
cs
xor
inc
xchg
mov
sub
outsl
shlb
or
pop
mov
fwait
and
into
idivl
movsl
jne
lea
out
jns
inc
or
dec
cmp
js
movsb
mov
mov
aas
into
adc
push
xchg
loopne
push
fbld
cltd
inc
out
mov
inc
lret
and
add
and
push
aad
test
test
cmc
pop
call
pop
sub
adc
mov
repnz
imul
xor
daa
xor
popa
movups
lcall
outsl
cs
pop
cmp
add
ds
mov
jo
les
inc
stc
cmpl
inc
or
xor
decw
sub
or
imul
orl
ret
into
or
das
jb
movsb
push
or
sbb
ja
mov
and
mov
popa
idivb
inc
lock
push
jo
and
and
int3
xchg
and
imul
js
sahf
aas
cmp
les
loop
mov
lahf
iret
in
std
cmpb
xchg
sub
rorb
push
adc
mov
fxch
icebp
ret
dec
push
outsb
cmp
jo
sbb
sub
jnp
pop
cwtl
xor
push
test
mov
add
push
gs
push
cmp
jnp
lret
inc
movsb
test
in
mov
xor
popa
in
xchg
popa
cmp
mov
xchg
and
cmp
mov
cmc
sub
dec
push
or
or
movsb
xchg
xor
loopne
mov
adc
inc
xchg
dec
inc
ror
insb
mov
pusha
jp
f2xm1
sub
add
inc
cmc
nop
mov
nop
push
inc
cmpsb
cmp
lret
or
std
pop
repnz
imul
jp
jno
xor
mov
jns
inc
add
xchg
pop
scas
push
add
mov
push
lods
or
inc
mov
push
or
sub
xchg
or
cmp
out
es
push
sbbl
mov
push
sub
push
push
pop
inc
add
fsubrl
pop
je
jle
sahf
imul
fildl
jae
dec
dec
dec
rclb
push
cmp
repz
repz
or
cmc
in
leave
mov
lahf
ss
cmp
jmp
aaa
adc
push
add
xchg
in
mov
lret
sub
xchg
cld
rcrb
xchg
mov
mov
lret
cmp
xor
nop
fsubl
mov
ficompl
sub
push
xor
and
ljmp
aad
inc
add
scas
xchg
out
mov
dec
cmp
int3
inc
mov
ret
iret
xchg
into
imul
popf
adc
fdivrs
out
out
adc
fs
cli
jb
xchg
push
xor
mov
sub
stos
jne
sbb
inc
mov
sar
xchg
cmp
fnstenv
out
pop
sbbb
cmp
dec
and
pop
dec
loope
xor
std
or
pop
push
xlat
icebp
addb
popf
sbb
and
js
mov
sbb
xchg
fstpt
shll
xor
inc
ss
lds
mov
imul
adc
cltd
aad
jne
add
xor
les
jbe
call
in
popf
popa
aaa
pop
cmp
lahf
test
fldcw
fiadds
sbb
inc
stos
or
icebp
pop
sbb
lret
fs
xor
push
mov
les
out
push
add
jbe
fwait
lahf
loope
aas
pop
and
and
sub
add
adc
pop
adc
xor
ljmp
test
clc
push
add
insl
jb
mov
les
add
hlt
mov
roll
jecxz
cmc
testb
sbb
add
inc
push
mov
lahf
test
scas
add
pop
movl
gs
in
psrad
add
fucomp
xchg
shll
add
pause
js
inc
cmp
lea
sti
cld
dec
movlps
dec
jmp
lea
sub
stc
test
iret
push
push
add
inc
cmc
loopne
lods
sub
xor
stc
ljmp
fildl
loopne
and
mov
sbb
add
or
seto
jmp
xchg
in
add
clc
mov
xchg
jmp
mov
lcall
xchg
sbbb
nop
int3
orl
jo
fisubrl
mov
imul
cmp
nop
jns
das
mov
push
xchg
xchg
aad
adc
xchg
outsl
push
rol
imul
cmp
dec
nop
add
inc
movsl
test
mov
insl
sub
hlt
es
scas
int3
mov
sti
in
mov
inc
nop
in
repnz
mov
dec
fsts
sub
scas
mov
in
dec
das
cmp
xchg
ret
leave
icebp
xor
inc
daa
add
scas
cltd
xchg
nop
inc
stc
cmpsl
mov
hlt
daa
cmp
add
daa
push
in
fsubrl
ret
pop
loopne
movsb
fcmovnu
pop
mov
rcl
das
jo
xor
ret
adc
into
xchg
shll
xor
xor
cltd
test
or
or
xchg
mov
adc
sub
mov
fstl
lahf
aaa
cmc
and
mov
in
xchg
addl
call
ds
push
and
xchg
dec
cwtl
lret
add
mov
icebp
and
inc
arpl
mov
movsb
pushf
push
fnstsw
mov
das
das
xor
insl
lods
jl
fldenv
mov
mov
mov
and
fistps
cmp
dec
adc
xchg
mov
ljmp
dec
xlat
lret
shll
jmp
sub
cld
scas
dec
insl
imul
popf
das
xor
mov
cmc
cmp
iret
in
test
in
push
lahf
movsl
in
adc
nop
daa
je
sbb
sbb
sub
mov
lds
xchg
and
cmp
fldenv
xchg
adcb
mov
xor
insl
push
mov
insb
test
xor
icebp
push
jnp
mov
cmp
test
aad
sbb
cmp
into
pop
pop
dec
outsl
sbb
cmp
push
in
xor
imul
dec
add
mov
ss
inc
mov
orl
mov
icebp
xlat
lret
aaa
adc
mov
pop
call
pop
cmp
jne
mov
pop
add
jne
loopne
or
add
lea
jmp
push
jne
sarb
mov
out
ret
xor
mov
imul
imul
test
jp
add
or
in
inc
jmp
cmp
in
jmp
shl
cs
dec
inc
xor
nopl
mov
sbb
or
sbb
and
jne
and
stc
mov
loop
stos
cmp
ret
scas
cltd
daa
ss
lea
outsb
sub
loopne
inc
xchg
xor
cmpsl
push
cli
xor
sbb
inc
cmp
pop
es
xchg
adc
data16
sbb
jne
xor
jg
and
jbe
gs
cmc
ss
outsb
or
ss
mov
push
test
cwtl
xchg
jae
lcall
sub
jmp
fnstcw
je
mov
jge
iret
in
aaa
jb
mov
and
roll
inc
dec
aad
xor
out
inc
mov
lret
arpl
jge
xchg
xor
mov
lahf
cld
adc
fimuls
inc
aas
movsb
mov
add
stos
inc
pop
iret
inc
dec
les
xor
xchg
sbb
ljmp
cmp
in
push
xor
mov
pop
sbb
pushw
xchg
inc
jmp
add
cs
roll
and
fdivrl
cmp
mov
test
sbbl
mov
add
js
and
xchg
xchg
popa
xor
movsb
xchg
out
xchg
jne
cmp
pop
das
popf
mov
jmp
sbbl
cmp
lock
or
xchg
jb
mov
or
les
cld
inc
inc
cmpsb
notb
mov
fwait
outsb
or
mov
leave
xor
cmp
push
jae
lcall
leave
xchg
inc
push
loope
cmp
scas
adc
inc
xor
movsl
mov
sub
into
mov
pop
fmull
cmp
inc
inc
dec
and
movsl
cmc
pop
leave
push
das
sub
fwait
and
mov
outsb
subb
inc
xchg
add
cmpsb
sahf
push
insl
scas
xor
cmpsb
xlat
sub
loop
sbb
mov
fdivrl
mov
lea
ss
and
out
sbb
fbstp
in
xor
aas
test
call
push
test
por
or
nop
fidivrs
enter
mov
mov
sub
dec
stc
imul
cmp
jmp
fisttpl
out
lds
sbb
adc
fistps
mov
cmovo
rcr
and
loope
lcall
xchg
in
roll
imul
sub
pop
fldl
mov
xchg
pushl
cmpsb
push
sbb
pop
ljmp
pop
xor
and
fcmovb
push
jb
sti
lods
jg
and
xlat
pop
sbb
push
movsl
cmc
flds
movsb
sub
in
xor
cltd
xchg
loopne
subl
pop
fstl
xor
lods
jb
aas
aad
xor
pop
cmp
and
fisubrs
sbb
jge
or
leave
imul
test
shr
add
out
mov
or
and
test
imull
sbb
cmc
ja
adc
sub
xor
inc
xchg
push
mov
pop
in
lret
lea
mov
or
stc
jmp
jmp
cmp
lret
mov
sti
shr
shll
mov
xor
jnp
lret
in
inc
xchg
fwait
mov
fnstcw
jne
jmp
gs
dec
sbb
or
cmp
imul
inc
mov
jae
fcoml
xchg
dec
int
and
pop
xchg
xor
fdivrl
xchg
aad
jbe
das
sub
ss
mov
mov
nop
add
adc
push
add
or
out
orb
fbstp
mov
fsubl
inc
push
or
stc
lret
loop
sbb
xorl
in
mov
mov
dec
xchg
loopne
adc
mov
aad
pop
icebp
sbb
sub
cld
imul
cmp
fwait
int
jno
sub
xor
push
pusha
push
and
rcrl
jl
mov
in
xor
add
lret
repnz
fcompl
fildll
pop
and
jmp
xor
push
out
pushf
xchg
mov
cmpb
mov
dec
cmp
xor
inc
test
aad
popf
inc
xchg
test
loop
jne
sbb
leave
ret
adc
sub
icebp
in
gs
pop
or
out
arpl
inc
faddl
cmp
ret
pop
roll
add
int
lret
insb
shlb
movsl
jle
dec
out
aas
or
movsb
inc
cwtl
pop
js
int
lahf
mov
bound
addb
push
jmp
mov
aas
add
mov
dec
mov
sub
test
enter
mov
push
test
or
ds
adc
mov
cmp
arpl
push
nop
rcl
cmp
xchg
lret
mov
and
fstps
inc
and
stos
popf
test
fisubs
xchg
and
sbbl
sub
pop
inc
inc
add
xchg
cmp
std
out
ja
iret
xchg
sub
pusha
cmp
loopne
sbb
in
dec
mov
pop
imul
mov
int3
daa
mov
ja
fsubrs
fildll
add
mov
jle
in
xor
mov
pop
adc
stos
mov
and
pop
jae
xor
movsb
popl
inc
push
shrb
mov
xor
adc
push
sub
xor
cmpsl
cmpl
xchg
sahf
in
dec
mov
in
adc
sbb
xchg
popf
xchg
cmp
mov
test
adc
xorl
lahf
movsl
ret
dec
clc
dec
lahf
xchg
cmp
pop
ret
or
dec
pop
dec
pop
popf
dec
fs
xor
sbb
inc
xor
lret
push
jmp
imul
sub
fcompl
movsl
gs
push
fimull
imul
xor
jnp
pop
jo
jno
sti
pop
cmp
cmpsl
sub
cli
lds
in
or
add
es
les
push
out
mov
add
mov
out
repz
mov
ss
sbbl
imul
xor
fcoml
mov
xor
negl
sub
popf
push
loope
jno
aaa
lcall
das
in
mov
fs
sysenter
push
stos
subl
jae
or
orb
cwtl
dec
nop
jecxz
xchg
sbb
mov
inc
out
mov
inc
sbb
adc
adc
xchg
push
and
jg
fistl
daa
lahf
xchg
dec
fsubrs
inc
popa
scas
jae
pop
mov
in
insb
ror
cmp
mov
idiv
sarl
pushf
fnstsw
mov
pop
test
ja
fcmovnu
inc
ja
adc
sti
xchg
pop
jl
ds
cmp
mov
xor
dec
roll
fsubs
jp
lods
popf
inc
leave
push
jo
sbb
dec
dec
xchg
cmp
pop
aad
js
sbb
std
popa
cmp
pop
inc
hlt
cmp
xchg
dec
loope
lea
cli
ljmp
mov
mov
xor
sub
sti
shr
cli
cmp
stos
fists
ss
pop
jmp
jno
push
mov
xor
imul
pushf
fwait
lea
fwait
or
imul
mov
js
cmp
mov
insl
lret
push
sub
xchg
cmpsb
inc
fidivs
xor
data16
lods
in
or
call
jecxz,pt
xchg
sbb
aad
icebp
adc
jns
jns
inc
adc
lret
stc
pop
xor
xchg
pop
mov
sub
aaa
and
push
leave
sub
mov
mov
or
jmp
xchg
cltd
insl
in
cmpsl
mov
pop
xor
int
out
in
mov
xor
aad
idivb
rcl
std
in
pushf
clc
out
in
in
dec
dec
loopne
adc
push
jne
pop
adc
imul
lods
xchg
fdivrl
movsl
fcompl
push
int
lahf
fnsave
xor
pushf
popf
jl
aad
das
xchg
out
fistps
std
pop
or
scas
mov
aad
push
in
test
movsb
aad
sub
imul
fcoml
jmp
dec
mov
mov
leave
testl
sub
cmc
popf
xchg
rol
leave
in
cmc
test
call
aad
cmp
fwait
in
hlt
push
pushf
stos
std
mov
lcall
lock
mov
insl
mov
lret
or
mov
leave
stc
std
leave
pop
fyl2x
fstps
jg
movsb
in
push
test
in
ret
add
std
leave
adc
fstl
sbb
jecxz
push
or
cmp
gs
adc
sub
push
adc
dec
or
inc
add
aad
push
push
pop
dec
push
lahf
mov
int
sub
incl
pushf
movsl
jl
lods
ffree
dec
sub
aam
popf
jno
mov
loope
pop
mov
std
insl
lret
test
movsl
xchg
loope
imul
xor
incl
mov
or
sub
add
jmp
inc
sub
fidivl
shll
std
or
cmp
xchg
cli
mov
cltd
jnp
movsl
jle
cld
dec
stc
gs
or
or
sbbl
mov
cmc
cmp
push
aad
loopne
aad
aad
or
cmp
lret
mov
jle
xchg
inc
mov
rcrb
fadd
cmp
stos
in
mov
cmp
rcrb
cmp
xchg
cmpsb
xchg
imul
jmp
dec
push
loop
and
enter
sbb
bound
or
ljmp
jne
sub
xchg
jae
jb
bound
in
jno
pop
call
inc
jnp
rorl
xchg
cwtl
movsb
cmp
cmc
push
push
xor
fsts
mov
mov
cs
scas
rcll
lret
lcall
xor
push
push
xor
call
mov
push
add
leavew
sub
dec
popa
sbb
aaa
mov
jno
inc
negb
call
inc
jle
lods
xchg
imul
xor
aad
add
mov
mov
out
test
or
sti
pop
jecxz
roll
adc
or
repz
mov
popa
mov
lret
icebp
jg
in
cmpsb
xchg
xor
dec
jge
dec
inc
mov
in
sub
ds
dec
loop
pop
jg
lods
adc
ret
adc
add
and
sarb
movsl
daa
shll
xchg
dec
in
and
fcomi
inc
lods
xchg
xchg
insl
jb
out
inc
sbb
fldenv
xor
incb
or
test
fisubs
loope
pop
and
fisubrl
adc
inc
cmp
int
insl
push
sbbb
bound
cmp
add
xor
imul
js
imull
push
cmp
inc
adc
aad
popa
sub
sbb
bound
fldt
pop
cltd
out
mov
mov
decb
add
push
cmp
testl
leave
sbb
ss
jmp
cmp
mov
roll
mov
js
nop
cld
cwtl
sbb
inc
jo
xor
inc
adcl
rcrl
add
mov
xor
xor
dec
mov
out
gs
pop
inc
icebp
mov
cmp
cmp
movsl
xchg
popf
jnp
fisubrs
stos
cli
pusha
xor
incl
test
sub
mov
inc
out
xorb
aaa
jae
stc
mov
popf
jge
and
push
mov
jl
xchg
xor
add
xor
incb
mov
mov
out
cmc
int
jp
out
jmp
and
jmp
sbb
mov
movsl
inc
lahf
jnp
or
subl
mov
pop
sbb
mov
inc
adc
mov
stc
jne
xor
mulb
dec
mov
add
rorb
fnstcw
movb
subl
jns
or
fisubs
mov
xor
dec
ficomps
fs
cmc
das
repnz
pop
inc
sub
mov
dec
pusha
les
clc
adcl
adc
jb
testl
in
adcl
out
daa
add
dec
arpl
das
xor
inc
dec
mov
scas
xor
in
pop
mov
idivb
xlat
mov
inc
addl
shl
in
aad
popa
idiv
mov
int
push
lock
sbb
pop
jb
test
adc
inc
pop
pop
mov
and
sub
and
xchg
push
dec
pop
test
jo
xchg
inc
divl
test
movsb
pop
mov
mov
jmp
imulb
insl
fucom
ss
and
or
xor
xor
pusha
push
int
jmp
add
mov
xchg
xor
movsl
inc
daa
cmc
inc
out
push
mov
or
jnp
repnz
or
sbb
inc
or
and
fcoml
pusha
sub
or
xor
mov
es
leave
push
in
cmp
ja
and
xchg
dec
or
pop
xor
cmp
ss
cmc
fs
push
mov
loopne
push
or
ss
add
mov
rolb
pop
cmp
sbb
in
sub
sub
add
xor
pop
pop
shld
fistps
in
mov
mov
adc
jns
ret
sub
imul
adc
mov
sub
in
add
mov
movsl
rol
cmc
int
xchg
push
push
loopne
xor
iret
shl
xor
out
aaa
jecxz
hlt
cmp
sub
and
mov
push
leave
sub
cmp
add
xor
outsb
xchg
cmp
bound
mov
dec
xor
push
cmp
push
xorb
jp
ds
data16
cmp
push
jecxz
nop
rcrb
in
adc
pop
push
rcrb
lcall
popf
inc
and
dec
into
loopne
xor
data16
outsb
mov
in
lea
sub
mov
or
dec
add
std
inc
fimuls
aam
aam
ficoml
in
dec
dec
mov
mov
pop
clc
dec
in
or
pop
scas
fstps
int3
fstpl
rcrl
xchg
jmp
int3
loop
imul
int
lahf
jmp
pop
test
std
pusha
cld
dec
cld
int
clc
movsb
fucomp
jge
pop
add
cltd
orl
inc
xor
loopne
push
cld
mov
fisubrl
loop
ret
pop
jl
jmp
subl
in
add
cmp
fistl
jnp
xchg
in
sub
mov
fldl
mov
mov
cld
xchg
add
jecxz
xchg
push
and
cld
xchg
fmull
in
popf
mov
jne
push
jns
int
push
or
insl
enter
jnp
jmp
arpl
and
popf
mov
and
push
lods
push
loope
and
in
inc
popf
sub
movsl
xchg
dec
cmp
cli
push
stc
cmp
leave
add
jmp
fnsave
stc
fwait
call
push
or
fnsave
sbb
or
ljmp
jne
pop
adc
popa
push
in
aad
in
lcall
jl
jnp
frstor
test
xchg
dec
int
lahf
pop
nop
jno
add
xorb
push
jmp
imul
jnp
jmp
pop
insl
gs
aad
jmp
or
mov
insl
or
jmp
or
fstps
dec
mov
jno
mov
shlb
insl
xchg
sbb
dec
ficompl
xchg
dec
mov
or
sahf
mov
pop
dec
jmp
sarb
imul
pusha
push
xor
mov
xchg
orb
in
xor
ret
sub
inc
push
sbb
in
and
jne
xchg
push
adc
cmp
cmp
dec
xor
jbe
mov
mov
inc
and
dec
cmc
cvtdq2ps
popf
mov
xchg
cmp
mov
and
int
pop
dec
enter
sub
jae
mov
jno
sbb
aaa
ss
fisttpll
push
add
xchg
fidivl
xchg
imul
cmp
inc
sbb
cmpsl
fildl
lods
in
xlat
or
leave
fstps
push
push
mov
pop
aaa
add
cltd
xchg
pop
aad
cmp
clc
and
cmp
inc
scas
mov
jb
fnstsw
fld1
mov
cmpsl
movsb
out
nop
jne
ficomps
xor
xchg
incb
mov
xor
mov
jo
adc
cli
in
cmpsb
mov
inc
cwtl
aam
dec
jae
cmp
sbb
jno
int3
jmp
push
sub
mov
push
pop
adc
nop
jns
fistpll
loope
or
hlt
sbb
cmp
movsl
repz
pusha
jmp
sub
bound
add
xor
push
lret
dec
call
sbbl
push
sbb
xor
push
adc
mov
and
movb
in
cmp
xor
sub
flds
cmpsb
dec
lods
jp
pop
add
cmp
cmc
icebp
outsl
mov
cs
rcll
imul
jle
ret
psrlw
xor
fldt
icebp
cmp
xor
sahf
cmpb
jne
and
jmp
rolb
pop
cmp
je
mov
lret
add
mov
addr16
mov
mov
out
sbb
jb
sbb
pop
xorl
xchg
movsb
pop
icebp
sarb
mov
lea
add
mov
lds
cs
mov
xchg
imul
mov
dec
or
popa
jne
cmpsl
rcrl
sub
mov
xor
pop
fcomps
test
insb
ret
mov
in
cvtpi2ps
lret
mov
sub
inc
movsl
pusha
pop
sub
or
movsb
pop
mov
or
mov
adc
cmp
repz
std
rcrl
popa
lret
mov
mov
test
movsb
inc
pop
or
ror
imul
push
ficomps
and
sbbl
mov
xchg
jecxz
jge
dec
jbe
jno
aam
and
sub
loopne
mov
or
orb
orl
xchg
xchg
inc
push
daa
cmp
push
dec
cmp
dec
cmpsl
loopne
lret
loop
pop
ljmp
lods
inc
xor
push
test
and
cmp
in
test
lea
dec
lcall
lret
nop/reserved
xchg
adc
imul
ja
dec
movsl
loopne
dec
mov
popf
sub
outsb
gs
call
add
sub
add
cltd
repnz
push
pop
or
pushf
jo
sub
mov
push
mov
pop
pop
lods
test
mov
clc
inc
xor
fstps
xor
repz
sub
inc
and
into
sub
and
xchg
pop
and
mov
jae
mov
pop
inc
adc
mov
mov
cs
sub
xor
mov
adc
jg
pushf
jae
jmp
mov
adc
inc
int
pop
outsl
jne
xchg
xor
jo
lods
iret
std
cmpsl
push
loop
inc
icebp
mov
mov
mov
les
adc
call
frstor
sub
ds
add
sbb
sbb
insb
mov
xor
in
movsl
ret
cmp
sbb
xor
cmc
inc
stc
inc
int
jbe
mov
mov
mov
mov
sbb
mov
adc
add
push
mov
cs
add
stc
sub
push
filds
sbb
aas
sub
inc
lret
popa
xor
adc
or
inc
jno
fcoml
mov
add
pusha
cmp
push
mov
jae
aad
pop
ss
fs
and
icebp
dec
nop
adc
sub
push
pop
push
and
sbb
adc
jecxz
adc
xor
mov
fwait
push
sub
dec
adc
sbb
movsb
jo
and
lret
dec
or
jne
cmp
jmp
orb
cli
xchg
and
popl
xor
cmpsl
jl
add
in
cld
dec
fwait
jnp
cmc
movsl
mov
push
adcb
mov
jo
sbbl
int3
shlb
inc
popf
cmp
sbb
sbb
in
mov
add
jb
loopne
push
outsb
cltd
divps
mov
imulb
mov
and
aad
ds
aaa
mov
nop
pop
or
xchg
leave
xor
xchg
fistpll
lret
lods
es
fidivl
aad
xor
adc
xchg
jmp
mov
inc
or
shl
inc
repnz
popa
in
and
jno
push
ss
cmc
dec
mov
dec
pop
loope
rol
rclb
lock
inc
add
loope
mov
pop
mov
mov
insb
imul
or
xor
sbb
push
cwtl
hlt
mov
repz
icebp
adcb
ds
inc
push
fmull
pop
jmp
mov
pop
xchg
sbb
and
rol
mov
cmc
jnp
push
fiaddl
xor
sub
arpl
in
push
sarl
in
mov
aad
sub
loopne
sub
inc
cs
js
xor
push
or
jno
movsb
cmp
int3
sbb
stos
adc
inc
ljmp
shl
into
daa
nop
or
pop
clc
xor
add
sub
pop
and
in
ss
dec
pop
push
movsl
sub
leave
cs
inc
aam
sub
lea
add
push
cmp
lret
mov
cmp
cmp
pop
sub
daa
popf
mov
add
lret
jmp
cmpsl
cmpsb
fs
pop
push
dec
ljmp
decl
push
pushf
sub
out
pop
mov
fldenv
loop
xlat
adc
cwtl
loop
add
fsub
rolb
cwtl
cmp
push
or
mov
mov
pusha
aas
mov
pop
adcl
rolb
stos
gs
dec
jnp
cmc
ljmp
in
aas
pusha
mov
or
jo
test
scas
addr16
mov
mov
cmp
or
add
inc
inc
leave
pop
cmc
xor
and
das
popf
push
push
jnp
in
in
cmp
aad
popf
scas
xor
mov
and
inc
jns
iret
mov
pop
jo
lcall
pop
dec
xorb
push
inc
and
out
negb
cmp
fstpt
lahf
lea
out
es
cmp
or
daa
les
mov
push
push
leave
outsb
fs
test
ficompl
inc
jge
adc
pop
cmp
and
andb
xchg
inc
loopne
cltd
ss
or
jmp
push
and
mov
movsl
add
inc
insl
cs
add
sbb
inc
movsl
jno
pop
icebp
sbb
dec
fwait
movsb
mov
leave
testl
or
mov
loopne
insb
mov
cli
sbb
push
cmc
mov
or
and
sbb
push
repz
mov
mov
push
pop
pop
mov
inc
loopne
jns
test
ljmp
jno
pop
pop
daa
mov
sub
mov
or
lret
ficoms
jnp
mov
aaa
dec
adc
lods
mov
and
cld
adc
pop
jl
mov
lahf
movsl
adc
shl
sbb
rorb
movsl
pusha
int
gs
adc
xor
cmp
xlat
outsl
sub
inc
imul
cmp
pop
hlt
mov
int
lods
mov
lea
xor
sub
sub
in
orb
out
mov
ds
cwtl
jne
in
sbb
imul
push
loopne
jae
scas
popa
repnz
mov
cmp
ja
add
lcall
dec
repz
lret
aas
mov
ljmp
xor
mov
ja
xchg
xor
idivb
and
dec
xlat
mov
adc
dec
xor
imul
sti
ja
mov
mov
repnz
pop
test
jmp
cmpsb
mov
das
repz
ss
push
or
xor
loop
inc
jp
dec
push
jo
mov
jle
adc
mov
add
xor
cltd
xchg
je
inc
adc
jo
push
cmc
aas
fstpt
arpl
cwtl
rorl
xchg
sbb
xor
in
popa
fdiv
mov
test
pusha
pusha
cmp
outsb
adc
sub
js
xor
outsl
ds
adc
xor
dec
and
cmc
add
xchg
dec
sbb
hlt
es
push
aaa
leave
roll
mov
repnz
mov
cmp
iret
cwtl
xor
xchg
mov
inc
cmp
ja
dec
loopne
nop
inc
pop
push
mov
push
fstpt
sub
or
inc
leave
sub
push
outsl
jno
mov
pop
std
inc
mov
lret
bound
ljmp
mov
fstpt
mov
pop
and
mov
xchg
xchg
popa
lock
mov
outsb
das
pop
loopne
pop
adc
sti
rorb
pop
loope
sbb
outsl
ds
mov
movsb
pusha
inc
inc
push
arpl
int
sbb
sarb
pop
push
fistpl
push
xchg
pop
shl
scas
pop
xorb
movsl
repnz
scas
loopne
jne
jns
jae
jo
adc
mov
fisttps
add
push
leave
cld
push
data16
out
into
in
or
pop
loopne
and
ret
sbbl
sbb
cltd
xchg
enter
and
or
mov
xor
aaa
and
cmpsl
mov
aas
push
into
subl
fs
xchg
cltd
faddl
mov
jle
cmpsb
rorb
jg
cwtl
pop
mov
scas
and
mov
je
dec
add
and
sti
xchg
test
or
insb
pop
addb
xor
xlat
js
push
lods
lret
sub
fstpt
add
scas
xorl
out
lods
cmpsb
aaa
rol
loope
loopne
das
mov
je
scas
les
adc
xor
or
sbb
cltd
test
cld
xchg
ret
dec
pop
in
imul
pop
cltd
shlb
mov
shrb
and
ja
clc
je
fcmovne
clc
rolb
fsubp
xlat
push
pusha
sub
aam
repnz
arpl
inc
push
loopne
xor
xchg
or
insl
pop
push
test
cmp
cmp
mov
inc
mov
pop
or
mov
mov
imul
mov
cmpsl
and
pop
and
cmp
pop
pusha
jne
add
lea
xor
and
fdiv
mov
lods
std
sub
xor
inc
lods
mov
ss
pop
push
xchg
js
cmp
or
xor
lret
sub
add
pop
lret
mov
or
xor
sub
adc
adc
inc
aad
sbb
in
push
xchg
jb
stc
out
sub
fwait
push
sub
and
or
int3
jbe
add
cld
cmp
xlat
out
repnz
in
cmpl
push
ret
jge
push
or
push
out
orl
out
call
push
dec
and
inc
fisubrl
pop
mov
cmpsb
loop
test
cmp
dec
xchg
sahf
cmp
daa
push
in
inc
out
push
xchg
popf
ss
mov
push
fimull
aas
sub
loop
cmc
and
cmp
pushf
cld
pushf
and
adc
mov
dec
add
scas
xchg
inc
andnps
andb
bndstx
or
xor
inc
outsl
dec
notl
movsb
dec
icebp
add
xor
into
in
pop
mov
outsb
push
dec
ljmp
andl
nop
mov
cltd
xchg
dec
push
popf
xchg
push
cmp
and
icebp
sbb
stc
into
fiadds
fs
sbb
fdivrl
icebp
ficoml
in
or
add
fwait
mov
jmp
sbb
das
push
fldcw
test
neg
outsl
adc
cltd
fistpll
add
inc
jno
jbe
push
cmpsl
addl
insb
push
loop
cmp
stos
push
loope
inc
cmp
int3
popa
and
aad
les
pop
dec
xadd
or
outsl
ret
std
mov
mov
sbb
lret
adc
push
mov
xchg
inc
sub
mov
sub
xor
lcall
in
orb
lods
xchg
mov
lcall
iret
lods
out
jmp
scas
xchg
push
pop
bound
je
mov
cmp
inc
push
mov
dec
jnp
imul
in
inc
test
or
jg
dec
rcr
in
sub
jb
mov
add
dec
push
popa
sti
jns
sbb
sub
std
and
push
mov
sub
cmp
or
jbe
xor
lods
in
imul
addr16
lret
ficoms
gs
seta
adc
cmp
repnz
fidivl
cmp
xlat
jne
push
shll
loopne
or
inc
jmp
popf
scas
int
or
dec
xor
arpl
and
outsl
or
fists
movsl
das
cli
lods
in
sbb
cmc
push
test
rclb
loop
clc
mov
cmp
lds
pop
xchg
roll
mov
sahf
cmpl
xchg
nop
ja
mov
adc
movsb
lock
or
bnd
or
push
cmpsl
mov
pop
push
popf
mov
push
sahf
jge
mov
lahf
or
cmpsl
sub
add
faddl
mov
pop
push
andl
or
jecxz
jae
outsl
cmp
rcrl
push
loopne
cmp
sbb
je
fisubs
jecxz
cwtl
cmc
outsb
sub
mov
inc
stos
mov
inc
cmp
pop
inc
loope
cltd
ljmp
leave
ljmp
fildl
insl
add
pushf
push
int
pop
xchg
loopne
mov
popf
lret
mov
cmp
fs
inc
adc
mov
cmpsb
shl
gs
sub
xor
mov
fdivrl
jbe
aam
dec
test
fwait
lahf
cmp
cmp
adc
aad
pop
dec
xchg
sub
mov
dec
mov
mov
sub
mov
movsl
mov
dec
insl
inc
cmp
loop
pop
arpl
loop
adc
unpcklps
fistpll
jp
push
jge
icebp
movsl
orb
call
js
icebp
and
push
add
int
cli
fs
push
push
cmp
push
fistps
cmp
add
fisttpll
cwtl
or
mov
pusha
push
stc
and
xor
mov
add
jecxz
dec
mov
das
arpl
push
inc
pop
mov
leave
repz
out
push
sbb
jp
add
fidivrl
je
cltd
cmc
mov
dec
movsb
shrb
add
addr16
or
push
jmp
pop
pop
sti
ja
insl
adc
mov
imul
push
mov
and
xchg
xchg
dec
gs
add
jno
cwtl
xchg
sahf
add
sbb
jg
mov
adc
and
dec
sbb
adcl
push
sub
adc
fidivrs
lods
dec
xor
mov
scas
jne
les
xor
cwtl
xor
rcrl
adc
cmp
popa
pop
nop
fnstenv
sub
sub
in
insb
test
test
add
call
test
sub
loop
inc
jns
movsl
ds
ret
or
cmpl
or
pop
add
lret
out
adc
ds
mov
insl
btc
sub
out
inc
push
pop
mov
sbb
lret
xchg
dec
nop
test
test
cmp
sbb
hlt
inc
jecxz
out
jbe
mov
lcall
mov
cmc
aad
stos
mov
fiadds
sbb
pop
push
cmp
and
mov
lods
or
dec
xor
aad
cs
fcoms
out
mov
outsl
aaa
popa
lret
popf
xor
xchg
xchg
pop
loope
mov
mov
push
push
sub
mov
sub
pop
dec
xlat
sbb
xchg
cmp
mov
mov
sbb
in
ficompl
repz
loopne
jbe
sub
shlb
ja
push
stos
fisttpl
xchg
mov
xchg
mov
push
add
movsb
add
mov
fisttpll
pushf
inc
gs
or
inc
cmp
jmp
pop
xchg
and
testb
mov
or
inc
test
ret
sub
mov
ljmp
xor
push
int
andl
add
test
dec
orl
sub
aad
jbe
fcmove
fstpl
in
add
xchg
fwait
jl
push
stos
cmp
jns
orb
and
leave
sub
add
adc
iret
ret
cld
pop
cltd
xchg
add
test
mov
call
xor
xchg
je
lcall
cmp
out
lcall
mov
lret
aas
xor
adc
lea
and
dec
aas
fidivl
icebp
pop
je
test
add
scas
sarl
mov
stos
rorl
jne
scas
push
or
popf
and
and
fstl
test
sbb
lahf
daa
and
jge
stos
jbe
loop
inc
push
std
push
loopne
lret
popa
fdivrl
add
mov
pop
shrl
mov
pop
shll
inc
dec
ret
and
repz
jno
pop
lods
jg
mov
dec
cltd
out
fldt
movsl
popl
cwtl
fs
mov
push
push
xchg
mov
pop
pop
cmp
mov
xchg
lods
pop
jge
jb
daa
andl
sub
pop
pushf
imul
arpl
adc
push
pushf
add
push
jae
mov
xchg
jae
jo
mov
fiadds
sbb
out
jne
dec
lahf
out
cld
enter
ljmp
iret
mov
ficoml
gs
xlat
sbb
fdivs
clc
orl
mov
mov
popf
push
mov
scas
sbb
rcll
icebp
xchg
cld
popf
or
int
dec
and
fs
xorl
add
sti
jae
xorl
and
or
mov
repz
push
mov
icebp
sbb
outsb
xchg
popf
inc
in
sbb
mov
push
enter
pop
cmc
test
adc
add
cld
test
fidivs
in
xor
mov
cmp
gs
fists
jae
out
mov
add
mov
movsl
fnsave
gs
sub
out
push
and
aad
pop
push
mov
stc
scas
aad
adc
dec
xchg
je
mov
fstp
pop
inc
cs
repz
dec
push
sub
aad
inc
fidivs
inc
movsb
inc
mov
cmp
cmp
mov
gs
test
dec
dec
fbstp
fadds
cmc
add
inc
fnstenv
rolb
in
nop
xor
cs
sarl
dec
lret
mov
or
add
and
xchg
push
cmc
cmp
mov
movsl
and
xor
inc
lret
xchg
lea
clc
ficomps
xor
adc
outsl
out
push
jae,pt
lods
inc
ss
mov
dec
lret
jmp
inc
sub
fwait
ljmp
mov
gs
jecxz
push
test
mov
jmp
fs
sbb
mov
in
mov
cmp
sub
data16
mov
adc
sub
jmp
mov
pushf
in
dec
nop
movsl
test
mov
mov
in
cmp
gs
gs
push
fstpt
pop
cmp
fldl
cltd
movsb
mov
cmp
cmp
faddl
pop
jl
jnp
out
and
pop
or
icebp
push
dec
shll
mov
leave
addl
pop
sti
cmc
das
or
sarl
xchg
mov
sub
aad
push
imul
sub
cmpsl
mov
mov
popf
cltd
mov
test
mov
test
sub
int3
jecxz
insl
aad
xchg
jmp
inc
jmp
rcll
mov
jb
cmpl
jmp
shr
mov
cmp
shll
xchg
add
aaa
mov
mov
xchg
filds
xlat
dec
mov
repz
mov
test
jns
xchg
dec
mov
cld
xor
jbe
jp
dec
out
out
sbb
sub
repz
push
aad
orl
scas
outsl
outsb
mov
pop
das
es
xor
mov
mov
push
aaa
push
jbe
int
popa
jbe
sbb
jle
movsl
sub
dec
aaa
scas
inc
cltd
outsl
iret
sbb
arpl
shr
and
scas
pop
test
pop
or
loopne
jns
fucom
pop
cs
popa
cmp
aad
mov
ljmp
and
mov
inc
inc
or
dec
cmp
and
sub
outsl
or
push
inc
pop
ds
cltd
mov
movsl
gs
mov
lods
jne
xchg
xchg
lods
mov
sbb
scas
xchg
fs
lds
aad
js
cmp
pop
leave
add
sub
mov
insl
in
subl
rcrb
fstpl
lret
mov
mov
jl
loop
dec
pop
and
int
dec
insl
cmpsl
sbb
aad
movsb
lret
scas
add
push
xor
adc
xor
push
cltd
or
xchg
xchg
fimuls
push
add
sbb
xchg
sub
negb
int
xchg
sub
stc
mov
push
ljmp
repnz
dec
jne
rorl
sti
aam
dec
ljmp
loopne
push
xor
std
shll
subb
jne
inc
and
adc
lods
mov
dec
fidivrs
push
aas
rcr
test
xor
add
inc
je
lods
jge
test
sbb
push
icebp
in
jge
add
sbb
sub
roll
in
idivl
int
movsb
push
loope
pop
insl
call
aam
jno
loop
jne
sub
jmp
mov
popa
adc
shlb
gs
push
ficomps
call
cmpsb
mov
mov
cmc
xchg
fisubs
lret
add
dec
jns
aas
out
ja
ret
call
xor
sub
xchg
cmc
lahf
xchg
cltd
and
popf
lcall
mov
test
shrl
std
je
adc
xlat
mov
loopne
loop
cmc
or
popa
xor
imul
in
jg
jecxz
xor
in
adc
cmp
std
adc
aaa
es
cmp
in
aam
inc
outsb
jecxz
test
cld
popf
faddl
push
lea
lcall
push
cld
popf
inc
rorl
movsl
xchg
mov
inc
add
rorl
fxch
cmc
mov
sbb
pushf
icebp
repz
iret
dec
jge
push
cmpsb
xor
mov
leave
fldcw
ret
pop
pop
repnz
cmc
gs
pop
inc
into
lret
push
or
inc
rcll
lock
cmc
aad
push
sbb
cmpsl
stc
lcall
in
mov
lret
pop
mov
cli
inc
popa
mov
and
jbe
push
xchg
call
sub
call
in
insl
push
dec
cmc
out
xchg
xor
inc
hlt
push
jns
mov
mov
sub
xchg
jae
cmpsl
fstpl
fists
lcall
stc
mov
loopne
ficoml
cmp
dec
cmp
mov
mov
lods
mov
xchg
pusha
inc
cld
mov
scas
icebp
mov
push
sbb
dec
ja
cltd
cmp
or
arpl
data16
rcrb
cmp
fidivl
out
fwait
mov
sbb
cli
sahf
insb
adc
sbb
mov
ret
dec
jne
dec
incb
int3
xor
adc
jmp
push
sub
adc
lea
imul
jg
jb
lds
cmpsb
fwait
mov
mov
loop
push
enter
inc
rcrb
popf
icebp
or
inc
sbb
fs
imul
mov
imul
jle
out
pop
aad
push
xor
cwtl
inc
scas
sub
in
pop
xor
and
in
xor
incb
dec
xchg
xchg
mov
add
mov
dec
in
dec
pushf
loop
sbb
cld
mov
cmpsb
test
insl
ss
nop
push
mov
mov
add
inc
sbb
lahf
int
out
pusha
dec
lods
roll
xchg
add
xchg
cmpsl
sub
add
shlb
loop
in
sub
xchg
or
xor
das
sbb
in
pop
sti
pop
or
xor
jne
shrl
push
push
jecxz
add
adc
pop
fdivrs
fdivl
into
es
mov
pop
push
jge
mov
jno
and
push
ss
sub
pop
inc
pop
mov
cmp
push
mov
and
sti
divb
xchg
pop
push
fcmovbe
lea
add
std
cmp
or
shll
mov
leave
icebp
sbb
pop
lods
cli
and
jnp
int3
addr16
fidivrl
ljmp
cmc
push
xchg
mov
cmp
out
popf
or
mov
inc
mov
mov
push
clc
dec
aaa
nop
adc
add
lret
xchg
push
mov
inc
push
xor
dec
popf
or
xlat
cs
pop
or
add
insl
xchg
mov
xchg
cmp
outsl
ror
and
les
cmp
cmp
repnz
sub
xor
pop
mov
cmp
fadd
cwtl
inc
sarb
or
push
mov
or
jnp
stos
inc
cld
shlb
lret
gs
addr16
test
sbb
lods
mov
addr16
into
leave
jp
jmp
ja
mov
lea
xchg
xor
pop
jge
fmull
mov
sbb
push
or
pushf
cmp
or
rcll
mov
mov
arpl
dec
in
fmull
xor
mov
xchg
mov
mov
and
nop
subl
popf
mov
je
dec
insb
sbb
pop
jge
insb
inc
sub
lea
or
add
push
daa
stc
dec
or
sub
xor
mov
jae
popa
mov
push
add
gs
popf
inc
dec
aam
inc
push
mov
and
les
shlb
into
pop
push
cmpsb
mov
and
dec
add
push
enter
cmp
adc
scas
icebp
sbb
mov
fnstenv
jo
dec
jnp
fnsave
jl
inc
nop
inc
xchg
rcrl
hlt
imul
fdivrl
loopne
and
aaa
aam
fstpl
adc
ret
xchg
inc
hlt
dec
xchg
dec
fadd
dec
sub
add
inc
sbb
inc
inc
add
mov
pop
push
fwait
push
add
les
mov
sub
out
ret
fcompp
sub
stc
sarl
rcrl
shr
out
or
mov
ljmp
pop
dec
pop
xchg
pop
cltd
and
imul
pop
popa
cmp
pushf
mov
add
add
lret
add
cmp
pusha
push
aam
hlt
mov
sub
xchg
mov
fidivrl
xor
in
jo
sbbl
lods
subl
or
pushf
xchg
mov
les
xchg
push
jo
sub
xor
ja
dec
mov
jecxz
cmp
cwtl
leave
in
pop
popa
lods
aad
xchg
lea
mov
mov
push
cmpsb
aaa
mov
push
add
pushl
fsubl
pusha
cs
add
jbe
xor
push
jne
push
xorl
xor
arpl
jmp
inc
xor
inc
or
cmpsl
movsl
mov
xchg
shll
je
adc
pop
jle
jbe
call
negl
ficoml
das
add
jg
jns
inc
mov
popa
xor
sbb
push
sbb
mov
dec
xor
sbb
adc
jmp
enter
gs
loopne
mov
sahf
cmc
outsb
in
xchg
fs
in
insl
fsubl
sbb
lods
xor
dec
xor
push
insb
cld
inc
xor
sbb
sbb
jno
rcr
fsubrs
mov
fs
and
popa
xlat
push
lahf
pop
xor
cmp
sbb
loope
mov
xchg
mov
inc
fcmovnu
push
into
cmp
sahf
xchg
ret
push
mov
inc
sub
inc
xor
cmp
enter
mov
fidivrs
dec
scas
pop
imul
and
lahf
packsswb
scas
xchg
hlt
loopne
pop
inc
dec
pusha
sub
sbb
addl
xor
jns
sbb
stos
xor
sbb
int3
imul
in
xor
stos
inc
inc
insb
fcmove
cmpsl
fwait
sbb
repnz
mov
daa
xor
fldln2
pop
dec
inc
fmulp
mov
xchg
cmc
inc
inc
test
jns
push
iret
adc
jno
in
xchg
fistl
rorl
pop
xor
idivb
sbb
fistl
es
mov
into
fwait
xorb
js
or
xchg
cmc
cli
fisubrl
flds
adc
xor
imul
dec
sub
pop
mov
fstpl
push
dec
xor
pop
sbb
adc
sbb
rorb
test
pusha
sahf
dec
mov
lea
xor
scas
pop
sbb
cmpsb
aam
icebp
mov
cld
int3
repnz
aad
xchg
xchg
sbb
cmpsl
mov
sbb
xchg
push
xor
rcrb
pop
out
imul
leave
in
cmp
add
sbb
xor
sub
aad
loope
and
mov
ljmp
lret
lahf
cmp
pop
cli
mov
lcall
ret
mov
pop
in
cmpsl
sahf
mov
or
movsl
mov
add
mov
fcompl
dec
dec
fsubr
cmpsl
popf
cld
mov
add
cli
sbb
subl
inc
jno
or
sbb
xchg
mov
iret
cmc
fisttpl
sbb
adc
stos
popf
fisubrl
sbb
fmuls
dec
inc
loop
mov
mov
leave
addl
inc
mov
decl
jl
dec
push
cmp
imul
lods
jl
fisubrl
inc
or
mov
inc
frstor
aad
inc
inc
into
or
jno
adc
xor
subl
fstpt
or
addr16
push
adc
insl
inc
mov
pop
inc
aas
in
aam
or
mov
and
les
adc
push
mov
push
addl
test
or
xchg
jmp
add
xchg
sub
xor
xchg
mov
test
push
add
or
sbb
add
mov
push
gs
rorb
xor
push
ret
and
pop
pop
pop
pop
faddl
sub
xor
xchg
rcl
dec
aas
rolb
pushf
jmp
jns
cmpsb
cmc
cmp
push
sti
cmpsl
xor
outsl
cmp
pop
xor
inc
xchg
xchg
out
xor
push
dec
and
push
sub
push
xlat
gs
cmc
cmc
dec
aad
test
es
cmp
and
ffreep
sbb
dec
pop
and
pop
gs
push
xor
nop
mov
mov
ss
pop
xor
mov
cmc
push
testb
stos
arpl
cmp
fistpl
mov
bound
add
nop
xor
sti
or
stos
cmp
daa
jno
sbb
xor
mov
xlat
clc
shlb
xchg
subb
outsb
or
enter
xchg
fiaddl
xchg
add
add
cltd
hlt
mov
sub
or
xor
sub
add
xchg
jle
xchg
xor
fcompl
xor
or
ret
pop
pop
pop
in
adc
xor
jno
fstpl
inc
adc
jl
mov
icebp
mov
lret
ds
mov
es
pushf
cmp
nop
and
cwtl
push
imul
push
lret
test
xlat
or
lret
xor
add
push
pop
outsb
sub
cld
fists
in
inc
shr
stc
aad
xor
mov
push
daa
inc
xchg
sub
mov
inc
mov
sahf
nop
cmp
or
pop
lret
imul
repz
mov
or
fists
jp
xor
xchg
lds
mov
sti
sbb
bound
mov
lods
fcmovnu
leave
xor
adc
jne
add
cwtl
adc
insl
fcomi
adc
or
xor
jmp
scas
xor
xor
mov
mov
mov
jnp
pop
arpl
pop
or
popa
or
inc
xchg
xor
jle
mov
test
mov
xor
mov
sub
push
xor
push
out
pop
in
jbe
xor
lret
fnstsw
test
fnstsw
fimuls
out
rol
sbb
lcall
cmc
mov
js
xor
inc
xchg
inc
mov
stc
or
mov
cmp
out
sarb
xor
daa
stos
std
pop
inc
lock
push
push
xor
gs
popf
mov
pop
int
lret
mov
xlat
jno
mov
stos
mov
addb
or
xchg
fistpl
cmp
xorl
mov
xor
sub
test
xchg
fs
jb
or
subb
mov
xchg
test
out
idivl
movsb
adc
ds
push
inc
and
xor
aas
and
cld
pushf
lret
popa
mov
fildl
sbb
cmp
rolb
adc
xchg
dec
xchg
in
xor
push
jnp
or
xchg
cmp
or
ja
mov
dec
push
fisttpll
cs
sbb
call
movsl
es
xor
mov
aad
inc
xor
cmp
mov
inc
mov
ds
mov
idivl
jae
loop
jo
sub
or
jne
stos
inc
adc
aaa
lret
outsl
into
in
lret
fcmovnu
daa
mov
jmp
movsb
xor
les
mov
adc
mov
fmull
pop
xor
xor
xchg
dec
ljmp
xchg
pop
jp
push
inc
xor
mov
and
jbe
add
aad
mov
lock
jne
xchg
adc
nop
mov
sbb
add
out
xor
pop
sub
xor
and
fisubrs
aad
xor
xchg
mov
xor
sbb
mov
stc
arpl
out
testl
sbb
fisubs
pop
cmp
push
fcmove
sub
pop
out
faddl
gs
fdivl
loop
cmc
push
loope
and
add
mov
cmpsb
push
mov
loope
fwait
aas
xlat
cwtl
mov
iret
fiaddl
mov
and
sbb
popf
sti
xor
mov
jl
dec
out
mov
stos
lcall
or
movsb
pop
mov
jmp
mov
in
mov
mov
mov
insb
fistl
fmull
mov
leave
adc
inc
mov
adcl
or
jns
testb
aam
loopne
aaa
pushf
jno
mov
test
mov
fcompl
adc
pop
fs
add
dec
mov
xor
movsl
std
push
test
pop
orl
jbe
xlat
fiadds
or
test
fbstp
xor
xchg
lock
inc
out
clc
push
sub
inc
imul
pop
cmc
popf
into
loop
lea
xor
push
fstpt
sub
lahf
push
adc
es
fdivrl
adc
mov
repz
xor
pop
push
icebp
jmp
sub
lods
std
adc
stc
mov
ret
stos
fisubrl
cmpb
repz
lret
add
or
add
gs
mov
dec
xor
mov
daa
xorb
hlt
mov
mov
push
jl
fsubl
xor
fcmovnbe
sbb
and
sbb
pusha
xor
xchg
popf
bnd
pop
fidivl
pusha
popf
sbb
fwait
into
imulb
mov
adc
scas
mov
fcomps
or
mov
cld
sbb
xor
mov
mov
in
gs
movsb
push
and
mov
sbb
lahf
loop
adc
push
xor
stos
cltd
add
test
sti
repz
popf
mov
xlat
pop
lods
xor
cld
mov
enter
or
pop
push
xor
incb
loop
and
mov
loopne
and
shrb
into
or
inc
nop
mov
cld
pop
dec
xor
into
divl
mov
cmp
mov
sbb
fstpt
out
les
mov
jmp
gs
enter
mov
fidivs
xlat
iret
stos
sbb
add
xchg
or
mov
sub
mov
mov
inc
xor
push
dec
std
arpl
in
addr16
jne
push
xchg
add
lret
fldt
aaa
xor
out
xor
mov
mov
pushf
xchg
lahf
pop
xchg
pop
arpl
jl
xor
sub
add
mov
push
lret
xchg
je
ss
mov
faddp
push
mov
fisttps
xor
add
negb
cmpsb
cwtl
push
cmp
ljmp
sahf
jmp
jne
js
mulb
std
inc
pop
fucom
xchg
adc
loopne
add
dec
xor
mov
inc
cltd
popf
in
out
sbb
inc
push
pop
aad
call
cli
gs
sahf
hlt
out
xchg
fisubs
out
xrelease
ljmp
in
xchg
ljmp
stc
dec
repz
fidivrl
icebp
out
clc
gs
pushf
inc
inc
test
leave
add
or
add
addl
pop
es
and
mov
pop
push
fucomi
pop
clc
stos
gs
and
sub
in
stc
sbb
or
dec
repz
mov
pop
mull
test
xchg
popf
add
jnp
jbe
add
stc
jae
cld
out
add
mul
hlt
testb
pop
in
lds
fsubrs
pushf
pop
out
fsubr
out
mov
stos
fs
mov
aad
stc
ficomps
aad
in
hlt
stos
mov
cmp
mulb
lods
pop
loopne
out
mov
int3
std
out
add
mov
pusha
lock
dec
and
inc
out
out
sbb
jecxz
cli
and
dec
mov
push
test
add
jmp
cld
stc
out
mov
rep
rcrl
leave
xor
xchg
stos
and
sbb
out
repz
shrl
gs
jmp
mov
out
call
hlt
add
push
pop
xor
movsb
and
mov
stc
jae
repnz
add
fadds
negl
repz
mov
dec
or
out
fistpl
hlt
adc
and
lods
inc
pop
ror
jmp
out
fnstcw
in
shll
xchg
stc
mov
lock
rep
pop
adc
jbe
or
nop
jge
fnstcw
inc
in
divl
add
jl
jb
repz
mull
movsl
add
in
adc
in
dec
repnz
mov
mov
fdivs
fcompl
fcomi
jmp
xchg
xor
jecxz
iret
hlt
stos
or
fldenv
push
in
cmp
xlat
out
lock
das
std
hlt
add
clc
mov
push
icebp
mov
lock
icebp
hlt
rorb
repz
repnz
imull
add
out
int3
out
add
mov
fists
push
repnz
clc
fcomi
sbb
and
add
push
adc
lret
jmp
mov
jge
out
push
out
out
das
movsb
dec
pop
pop
hlt
mov
add
sub
cmc
push
xchg
pop
fiaddl
pop
cmpsl
sbb
dec
push
push
lret
dec
dec
cmp
lock
out
out
cmp
dec
xchg
jp
push
jne
hlt
jl
fdiv
repz
ja
adc
add
xchg
inc
xor
pusha
xchg
test
dec
inc
dec
rep
cmc
ljmp
lock
push
jne
sub
dec
shr
push
jb
push
clc
clc
not
bsf
push
dec
push
pushf
dec
test
rol
mov
clc
shr
rol
mov
sbb
setp
test
ror
mov
stc
rol
pushf
stc
xor
lea
pusha
jmp
push
pushf
movl
pushf
movl
pusha
mov
push
lea
jmp
lods
mov
fistpll
repz
mov
lods
mov
sahf
mov
sbb
fisubl
jg
decl
roll
mov
or
mov
int3
cmpsl
int3
jg
pop
mov
scas
sub
mov
mov
loopne
bound
inc
lds
pushf
stos
pop
jle
sbb
into
fs
aam
cmpsl
adc
mov
inc
out
xchg
xchg
inc
outsb
jae
jmp
adc
push
sbb
jge
dec
pop
push
push
bound
xor
pop
dec
xchg
repz
std
dec
sub
das
test
sar
sub
cmc
push
jmp
or
int
loop
popf
inc
std
aaa
les
jne
int
in
mov
lock
and
inc
daa
dec
aaa
test
pop
inc
cmpb
movsl
int
pusha
push
mov
mov
mov
aad
mov
es
and
and
sbb
jmp
sub
lcall
out
in
jle
fxam
push
xor
out
adc
fiadds
xor
pop
clc
mov
mov
clc
cmp
fcmovb
shl
adc
add
inc
out
xor
sub
add
and
jmp
push
fidivrl
pop
push
in
in
cmp
xor
nop
mov
push
add
push
and
and
lock
stos
mov
das
call
jp
fs
daa
pop
mov
push
cmc
sub
push
fisttpl
and
or
push
jg
mov
call
pop
pushf
push
movl
pushf
pusha
jmp
pushl
jmp
call
push
clc
cmc
xor
sbb
std
add
mov
std
scas
xchg
dec
mov
or
aaa
push
cli
cwtl
in
out
xchg
sar
sbb
adc
pusha
loop
mov
push
push
sti
or
mov
cli
push
add
sbb
xchg
jne
add
mov
inc
outsb
movsb
mov
mov
test
dec
imul
jg
mov
xlat
pop
mov
stc
fdivp
and
xlat
sub
sbb
aaa
push
push
xor
adc
jecxz
dec
sti
loopne
xchg
std
sahf
imul
daa
imul
icebp
and
xchg
jecxz
mov
shlb
jg
daa
inc
push
mov
mov
jmp
call
bound
cmp
in
pusha
pop
lret
mov
adc
jns
addr16
adc
fnstenv
shrb
repnz
nop
fimuls
bound
jns
fidivrl
lea
je
lea
mov
bswap
bswap
push
lea
jl
lea
pusha
movl
mov
not
pushl
popl
movzbl
lahf
lea
cwtl
mov
pusha
movl
jmp
push
xor
pusha
bt
cmp
bt
repnz
jmp
lods
adc
mov
add
aas
jecxz
rolb
sarb
out
loop
cmp
icebp
dec
jne
or
dec
imul
jno
jge
pusha
pop
loop
loope
xchg
push
test
add
mov
mov
xor
into
add
add
add
dec
fstl
sub
imul
adc
leave
test
pcmpgtb
inc
ret
popf
scas
rorb
lea
std
or
dec
add
jmp
stos
mov
pop
ja
addl
and
bound
aam
mov
testb
das
addr16
fisubrs
out
movsl
cmp
sub
repz
imul
fmuls
pushf
add
leave
out
cltd
sub
pop
push
or
out
roll
pop
mov
sbb
mov
cs
xor
stos
fidivs
jmp
xlat
push
ror
leave
lret
pop
xor
push
pop
test
and
add
inc
jnp
cmp
or
fildll
test
jge
ja
lret
addb
mov
add
inc
gs
outsl
fs
gs
imul
add
mov
mov
sti
cld
push
add
movw
push
pushf
neg
clc
mov
cmc
stc
cmp
bswap
pop
cwtl
pushf
lea
lahf
lea
pushl
lahf
mov
jmp
push
lea
je
inc
add
rcr
not
bts
mov
jmp
std
inc
popf
sbb
hlt
popa
imul
movsl
mov
icebp
fucomi
jmp
push
add
adc
cwtl
sbb
sub
cs
adc
call
shl
enter
jmp
mov
test
ljmp
dec
fidivrl
jmp
aad
addl
scas
sarl
sub
mov
lods
xor
repnz
dec
mov
cli
cwtl
loopne
mov
xchg
add
shrl
add
and
push
aas
mov
popf
out
add
mov
in
out
fidivrl
shr
stc
mov
bt
or
jmp
cmp
clc
cmpb
movl
lret
loopne
loopne
fs
ror
or
and
movsb
shrb
pop
mov
gs
arpl
mov
cmpsl
xchg
jns
fwait
test
sbb
mov
movsl
jmp
inc
int3
negl
mov
dec
out
inc
jae
addr16
inc
inc
imul
dec
jae
sbb
or
sbb
adc
push
outsb
and
lahf
icebp
ror
movsb
stos
fdivrs
pusha
jge
adc
pusha
loop
jbe,pt
push
sub
or
sbb
adc
cmp
imul
sub
lock
movsb
popf
cmp
push
mov
and
cmpsl
cwtl
or
mov
shlb
cld
loop
xchg
ret
mov
lods
in
adc
and
idivb
xchg
xchg
mov
addr16
sahf
scas
bound
repz
inc
call
dec
fwait
or
cmp
pop
in
into
jne
jo
and
cmp
sub
push
loop
push
jns
jae
sub
pop
jge
mov
es
imul
pop
mov
inc
addr16
and
pusha
dec
out
mov
shll
cmp
mov
push
lock
std
std
mov
xchg
outsl
mov
ret
jnp
test
mov
std
rcrw
pop
cmc
ss
dec
mov
fxam
rorl
inc
test
aam
push
leave
add
in
shlb
test
push
xor
out
test
inc
jbe
xchg
in
xchg
push
out
adc
or
lret
xor
or
in
sbb
dec
lea
jbe
stc
push
bsr
sub
clc
neg
mov
add
rcr
bsf
shl
mov
and
call
jmp
cmp
jmp
movsbw
not
setbe
pop
not
pop
pusha
mov
call
call
mov
movsbl
jmp
push
push
call
lea
jne
push
push
push
call
cmc
cmc
bt
or
pusha
mov
push
jmp
shrd
stc
neg
mov
push
pushf
cmp
pusha
shl
movb
movb
jmp
jmp
xor
cmc
pushl
cmp
repnz
jmp
data16
push
sub
mov
cltd
repnz
and
xor
or
adc
sbb
and
into
ret
dec
jae
sub
bound
jns
or
outsl
jl
daa
iret
shll
lcall
cs
sti
mov
cld
inc
fldpi
popf
daa
cmc
fstpt
and
hlt
xlat
inc
or
cltd
shlb
movsb
shrb
jb
imul
loop
call
int
mov
int3
xchg
jae
pusha
pushf
lea
jne
pusha
movb
stos
pushf
lea
jmp
movb
push
lea
jb
jmp
jmp
mov
popa
popl
adc
imul
mov
jb
std
dec
sub
inc
jno
jae
lods
mov
and
pop
jo
outsl
lods
int
sbb
pusha
ror
ffree
jp
shll
imul
and
jne
inc
push
into
cli
pushf
push
lahf
lods
xchg
imul
dec
inc
cmp
and
inc
and
addr16
lret
push
jle
inc
xchg
loopne
add
loopne
sbb
or
scas
scas
push
cmp
addr16
push
and
mov
in
out
cld
in
fimuls
mov
hlt
mov
cmpl
xchg
lcall
rclb
roll
shlb
js
mov
out
leave
dec
aas
loop
enter
push
je
stos
cli
icebp
push
loop
jno
jno
incb
or
inc
js
dec
cmp
popa
aaa
xchg
mov
fcmove
loop
inc
out
pusha
cs
mov
loope
leave
pop
js
mov
cmp
cmp
test
shlb
imulb
subb
dec
lahf
mov
push
add
mov
rolb
adc
aas
dec
jge
cmp
mov
outsl
xchg
xchg
xor
xor
pop
bound
mov
xchg
sbb
mov
and
inc
int
aaa
imul
jae
outsl
fnstcw
sbb
stos
nop
loope
arpl
out
inc
sub
mov
frstpm(287
mov
jno
out
int
xor
jb
inc
insl
push
subb
add
mov
mov
pop
adc
scas
enter
adc
sub
sbb
movl
pushf
push
lea
jmp
hlt
in
mov
in
inc
bound
jns
or
lahf
mov
lods
lods
jae,pt
lods
cmpsb
pop
inc
pop
sbb
and
pop
rcll
inc
mov
push
mov
adc
jo
xchg
mov
fidivrl
imul
gs
xor
cs
insb
add
push
lea
aaa
insl
imul
in
aad
adc
mov
repz
jge
enter
pop
mov
sub
mov
dec
pushf
mov
leave
sbb
add
cmp
inc
sti
scas
ret
pop
mov
mov
insb
js
xor
xchg
jbe
leave
in
pop
ja
jne
mov
inc
cltd
or
mov
mov
mov
adcl
cmp
mov
mov
bound
sarl
pop
insl
pop
test
repnz
mov
mov
pop
leave
in
inc
sub
popf
xchg
test
aad
or
cmp
js
cs
jge
aad
sbbl
pusha
mov
pop
and
sbb
xor
popa
ljmp
mov
push
cwtl
xor
and
mov
xor
jmp
cli
subl
add
xorb
jb
adc
xchg
mov
mov
dec
mov
andb
sti
loopne
pop
jmp
mov
or
mov
xor
inc
cmc
add
pop
mov
mov
add
jg
pop
clc
cwtl
ret
test
cmp
jp
xchg
push
addr16
call
xchg
push
mov
cld
inc
cwtl
mov
sbb
push
outsl
andb
loop
jmp
xor
popa
into
ds
clc
stos
and
xchg
stos
shl
jecxz
lods
out
cmp
and
sahf
dec
and
call
inc
in
xchg
mov
mov
fsub
jo
mov
cs
dec
push
mov
jo
xchg
and
sahf
dec
cmpl
cltd
into
xchg
mov
sbb
inc
push
xor
stos
fdivrl
test
imul
mov
mov
and
and
push
dec
repz
fsubs
cmp
dec
iret
xchg
and
pop
in
sub
sub
dec
inc
aas
sbb
jb
push
push
testl
push
push
loop
les
stc
xchg
jnp
je
mov
lea
je
movsbw
push
lea
not
pushf
pushf
mov
movzwl
push
bswap
lea
lea
movsbw
pushf
call
pusha
lea
jbe
neg
sub
shl
mov
shld
xchg
movzbw
call
stos
inc
xor
stos
add
ret
stc
mov
imull
dec
inc
das
and
push
push
loope
or
mov
out
inc
call
mov
scas
push
lea
adc
sar
das
call
cld
mov
mov
inc
lret
mov
popf
and
pop
outsb
jae
leave
jno
je
leave
push
fmull
xor
test
fistpll
mov
lcall
inc
call
jp
push
add
stos
test
pop
insb
mov
daa
and
mov
std
daa
fdiv
fwait
mov
les
mov
xor
push
pusha
mov
inc
out
push
es
xor
mov
xchg
mov
jo
adc
pop
ds
fistps
je
jbe
sti
in
sub
cs
add
ret
jmp
loope
mov
or
lcall
mov
aad
lods
test
dec
inc
insl
cmpsl
fbstp
mov
pop
fistps
lahf
mov
and
dec
in
inc
mov
pop
cmp
stos
lods
and
add
daa
lcall
or
clc
or
add
subl
cld
clc
cmc
sbb
call
stc
mov
xchg
mov
push
mov
lds
int
xchg
stos
pop
jecxz
add
lahf
incl
push
or
movsb
cmp
in
loop
mov
test
out
xchg
sub
cmpsb
and
mov
and
cltd
lcall
insl
scas
jb
xchg
jb
jo
pop
adc
lods
lret
jmp
ret
or
push
fidivrl
jmp
sets
pushf
pusha
mov
push
lea
call
pushf
pushl
pusha
jmp
jmp
movl
lea
jae
xchg
mov
pushf
call
fnsave
ja
inc
cli
xchg
out
jno
ds
inc
sub
and
sbb
sbb
mov
fcomps
sbb
mov
or
xor
sbb
fcom
jnp
out
bnd
xor
or
dec
repz
push
cmpb
and
in
adc
mov
sbb
rclb
in
push
aaa
xor
je
scas
jmp
push
sub
mov
dec
xchg
push
xor
aaa
shll
es
popf
ret
shrl
mov
or
pop
dec
sbb
fdivrl
mov
mov
cmp
xor
mov
andl
cmp
sub
sub
sbb
mov
sbb
ret
gs
fmull
xor
xrelease
add
mov
lea
jae
bt
cmp
pusha
pushf
pushf
jmp
adc
fistpl
sub
add
lods
mov
dec
andb
add
repz
cmp
cmc
sarb
lcall
pop
pusha
cmp
popf
testl
test
or
dec
mov
push
cltd
add
dec
pop
nop
sbb
negl
pop
mov
or
scas
mov
loopne
inc
clc
sarl
xor
mov
jns
mov
sbb
mov
das
sub
inc
mov
sub
jmp
jmp
and
pop
pop
pop
jge
xchg
fwait
cmp
mov
cmp
xor
mov
ljmp
pop
adcl
in
clc
jle
mov
outsl
pusha
loopne
mov
dec
jo
test
fwait
test
or
insb
dec
aam
xor
jo
ret
and
jg
mov
roll
mov
fidivs
and
jae
rcl
bts
mov
shl
xchg
mov
rcl
rcl
mov
call
jno
dec
fiadds
fmull
cs
dec
ss
lock
in
xchg
pop
cmp
add
add
pop
mov
mov
lret
mov
mov
out
mov
mov
cli
out
fsqrt
fcomip
or
xlat
fidivrl
jae
setne
mov
call
rcl
pusha
inc
test
mov
movsbw
jmp
adc
call
dec
add
and
roll
xchg
aad
fsts
xchg
out
loopne
or
inc
bound
adcl
lea
pop
or
lret
mov
out
cmp
mov
mov
scas
push
leave
in
dec
leave
sbb
inc
or
and
ds
inc
stc
cmp
insl
subl
push
mov
inc
aas
popf
and
cmp
xlat
nop
mov
test
jb
pop
pop
data16
mov
jae
adc
mov
add
add
outsl
push
add
add
add
add
add
add
add
arpl
add
arpl
add
push
add
add
add
add
arpl
add
daa
orl
sbb
dec
xor
pushf
sbb
bound
or
pop
adc
sbb
scas
add
andl
mov
xchg
jle
addl
dec
cmc
cli
lods
add
repz
in
lahf
jmp
mov
pushf
pop
jne
je
hlt
das
cmpl
sub
imul
orb
ljmp
loop
fnsave
lcall
daa
jle
movsl
ljmp
mov
mov
test
or
xor
sub
or
push
aam
dec
hlt
push
xchg
mov
push
imulb
and
fadd
push
dec
adc
test
out
jge
fs
fsubrs
adc
cli
mov
ss
in
rorb
jnp
adc
sub
inc
and
outsb
ljmp
inc
lods
xor
jno
push
pop
mov
mov
sub
cltd
dec
xchg
sahf
jp
lods
jl
pushf
xchg
pop
outsb
jmp
ja
loopne
pop
data16
and
stc
xchg
in
hlt
cmpsl
push
xchg
cmpsb
pop
inc
lret
idivl
iret
lret
inc
fimuls
mov
std
sub
adc
rcr
mov
jecxz
and
pop
dec
jge
sbb
inc
out
dec
xchg
xorl
adc
xchg
jge
rorl
sub
dec
negl
popa
cmp
cmpsl
adc
push
xlat
mov
sbb
loopne
stos
testl
fsub
lcall
dec
sahf
and
or
lret
dec
mov
ljmp
pop
pop
cld
stos
sarb
adc
add
out
jl
cmc
mov
xchg
sbb
gs
mov
push
adc
loop
int
iret
pop
jge
xor
push
push
pop
aam
push
pop
int
pop
sbb
xor
push
stos
fnsave
aad
stc
mov
sbb
sbb
ja
outsl
mov
fsts
jb
xchg
pop
shlb
or
and
lea
adc
push
cmpsl
pop
fcmovnbe
in
inc
sbb
bound
dec
or
orl
jns
push
mov
dec
and
jns
call
jg
pop
into
mov
dec
pop
pop
push
fldt
inc
sbb
in
les
push
mov
mov
add
mov
addr16
pop
jnp
pop
dec
mov
pushf
or
mov
cmpsb
sub
ss
pop
jo
mov
mov
and
enter
cmpsl
inc
cbtw
in
push
xchg
adc
inc
lods
insb
dec
sub
lds
cltd
add
mov
cmovb
sub
pop
test
cmp
call
sbb
movsb
mov
or
adc
bound
sub
or
in
rclb
mov
pop
addr16
sub
adc
push
enter
or
imul
inc
xchg
sbb
mul
subb
mov
pop
cmpsb
ss
xor
in
imul
mov
aad
push
dec
jo
xor
dec
sbb
insb
cmp
popf
loopne
cli
repz
mov
ret
out
push
cmp
in
xor
mulb
cmc
pop
sbb
adc
cmp
mov
insl
js
fildl
mov
lahf
sub
mov
std
loop
dec
add
mov
test
adc
jle
jnp
xchg
sbb
pop
loopne
jne
inc
mov
fdivl
fcomp
and
pop
lds
pop
clc
and
xchg
sub
fstps
xchg
jg
sub
add
lods
mov
mov
sbb
test
jge
fldcw
mov
adc
inc
jae
pop
bndstx
jno
ds
xlat
icebp
test
loop
mov
aam
cmp
insl
cld
fcomps
xchg
push
int
or
cli
xor
pop
data16
ljmp
or
hlt
add
jne
leave
mov
push
sbb
sti
mov
pop
movsl
pusha
ljmp
inc
mov
cmp
insl
jno
dec
jecxz
xchg
leave
loope
jb
lock
aaa
aas
sbb
and
and
mov
mov
ljmp
loopne
jmp
xchg
test
adcb
fnstcw
in
pushf
mov
int3
movsl
cs
xor
addr16
testl
mov
cwtl
sti
cmp
jp
leave
mov
shrb
pop
outsl
bound
xlat
cmp
inc
lds
daa
cmpsb
outsb
in
sbb
out
popf
sbbl
add
sub
movsb
mov
stos
xchg
in
dec
das
pushl
mov
and
loopne
and
ret
dec
cmp
imull
fwait
pop
pop
pop
mov
sbb
mov
mov
xchg
add
inc
add
iret
mov
push
inc
addr16
test
aad
xor
push
mov
popf
lcall
in
es
aam
imul
and
imul
jl
sub
adc
push
sub
dec
fistl
push
xchg
lods
cld
call
popa
sahf
test
xchg
shl
lahf
and
jg
nop
dec
out
jns
xchg
les
pop
xor
mov
pop
cmp
dec
pop
inc
in
or
shll
sub
test
daa
movsb
xchg
sub
mov
add
das
push
sbb
lds
sub
pusha
ljmp
in
jg
adc
pop
nop
sbb
mov
xor
add
push
ror
addr16
ljmp
ja
or
sub
xor
and
add
pop
cmp
inc
lods
xchg
mov
ljmp
loop
ja
mov
lods
data16
sub
xlat
push
xchg
fisubrl
out
test
adc
out
mov
adc
and
test
out
mov
repnz
into
pop
dec
aam
test
adc
mov
testl
xchg
adc
test
aad
mov
fsub
sbb
dec
cltd
scas
add
and
nop
addr16
repz
mov
pop
mov
movsl
jmp
imul
jns
testb
add
sti
mov
filds
xchg
int
repz
or
loop
mov
mov
push
fcomi
xlat
lcall
xchg
into
imul
push
inc
aad
idivb
pushf
dec
inc
clc
es
push
mov
icebp
pop
out
push
jbe
aam
arpl
or
out
sub
push
sub
les
aam
xchg
dec
or
or
imul
xchg
loopne
mov
xor
add
into
mov
adc
std
fsubs
nop
and
push
pop
pop
mov
lods
pop
jp
cld
jne
pop
lea
inc
xor
repz
mov
aam
adc
xchg
aaa
mov
or
pop
xor
mov
pop
mov
sbb
or
push
inc
lcall
ret
sub
in
pop
int
mov
push
lcall
bnd
xor
pop
repnz
xchg
pop
cld
dec
cmpl
ja
sbb
outsb
sbb
sub
cld
xor
xchg
cmpsl
add
mov
mov
lods
pop
cmovs
xlat
cmp
rcr
jno
movsl
sbb
insb
push
stos
fisubs
dec
and
insb
sub
movl
adc
cs
fisubs
lahf
jl
lods
movsl
mov
ret
and
sub
in
daa
push
jbe
adc
cmp
xor
sbb
movsl
pop
and
fyl2x
mov
adc
int3
xchg
ljmp
sbb
les
test
adc
xor
and
lahf
sub
ja
cmp
mov
or
setle
jmp
stos
inc
cmp
inc
fst
mul
xchg
dec
in
sbb
shlb
into
stc
sbb
xchg
int
std
pop
in
sub
or
add
adc
inc
dec
pop
adc
mov
dec
imul
jb
lcall
js
ljmp
out
stc
adc
xchg
pop
fs
adc
sahf
pop
dec
cmp
pushf
lea
sbb
cmp
lock
daa
mov
push
sub
inc
cld
push
ljmp
fstl
pop
pop
ss
sarb
test
and
xchg
xor
jns
pushf
out
enter
enter
push
clc
cmpsb
loope
dec
push
addl
bound
cmp
pop
cmp
jl
jnp
inc
aas
mov
int
mov
push
cmp
push
ret
loopne
sub
inc
mov
mov
xchg
out
fdivl
xlat
nop
js
ret
mov
divb
pop
rclb
out
scas
arpl
ss
in
mov
das
mov
rcrb
es
in
lahf
fcoml
cs
adc
std
inc
dec
add
and
jno
shll
stos
adc
rcl
lods
xchg
aad
mov
fisttpl
jno
xor
dec
js
fsubl
andb
out
cli
cwtl
mov
xor
mov
fcomi
pop
into
imul
push
int3
sbb
dec
dec
add
xchg
lock
sub
mov
jle
inc
lahf
out
push
daa
lcall
mov
int
lret
xchg
jmp
out
fcmovb
cs
mov
pop
mov
jb
mov
mov
cmp
negb
adc
push
pop
sub
or
lods
mov
inc
sub
inc
xchg
lds
inc
rorl
mov
in
cmpsb
shlb
sub
pop
mov
push
add
outsl
jbe
fmull
das
adc
dec
lods
mov
xor
pusha
ficoml
adc
pop
push
imul
cmp
arpl
das
xchg
mov
jno
cmp
push
mov
push
sub
les
cmpsb
pop
lahf
mov
cltd
mov
xor
jge
lods
sbb
lods
or
jns
jno
mov
imull
divl
shl
out
dec
xlat
outsl
imul
xor
lcall
mov
or
adcb
sub
inc
jge
mov
jle
push
mov
jp
ficomps
adc
and
outsb
test
nop
data16
dec
repz
sub
add
mov
into
jb
test
movsl
andb
enter
sbb
mov
pop
xor
fsubrp
sbb
xchg
or
mov
mov
fs
cmp
mov
or
adc
or
jmp
xchg
mov
sub
fs
jbe
mov
sbb
loopne
mov
sbb
add
bts
bts
rcr
add
lea
mov
pushf
push
pushf
mov
sete
not
setbe
lods
mov
pushf
pushl
pushf
dec
pushf
call
movl
pusha
push
mov
movb
pushl
ret
clc
bt
pushf
or
pushf
push
push
lea
je
cmp
pusha
bt
cmp
lea
jne
pusha
lea
jne
jmp
jmp
call
call
pusha
call
ror
test
add
push
neg
jmp
not
mov
movsbl
call
pusha
lea
jae
cmc
sub
jmp
addr16
push
pop
push
dec
in
dec
jb
jle
cmc
jmp
insl
sub
ss
adc
and
or
icebp
add
and
in
das
xor
clc
jb
stos
fwait
jl
adc
iret
mov
negl
jb,pt
mov
push
movsb
xor
lods
pop
cli
imul
push
std
cmp
enter
sbb
pop
ficoml
jno
dec
cltd
int3
and
push
imul
movsb
lods
xor
xlat
loopne
mov
movsb
cmp
pop
cltd
loopne
cli
lods
mov
push
cmc
repnz
mov
push
fidivrl
pop
sbb
push
in
pop
test
adc
sub
sahf
out
cltd
loopne
fs
xor
shlb
stc
jg
or
xchg
inc
jnp
pushl
push
pop
je
pusha
dec
scas
loopne
add
mov
pop
cli
dec
inc
jne
arpl
inc
int3
int
cltd
loope
push
das
sub
sub
or
cmp
inc
ret
fidivrl
dec
pushf
pusha
lea
jne
movsbw
bts
cmc
mov
push
call
cs
inc
sbb
in
inc
pop
dec
push
cmp
fs
pop
inc
dec
ds
dec
jle
fwait
lcall
fisubrs
xor
or
es
stc
dec
jo
push
sub
icebp
xchg
ret
enter
hlt
test
push
test
sar
int
inc
add
cmp
pop
push
push
stos
inc
sahf
push
push
xchg
insb
adc
out
and
popa
and
pop
int
pop
dec
fwait
add
shll
pusha
jne
addr16
push
mov
inc
xchg
mov
subb
fdiv
sbb
std
cs
sub
mov
sahf
add
addb
add
pushf
pop
pop
add
add
add
mov
add
sub
add
push
push
add
aas
push
add
add
add
fidivrl
add
add
test
incl
add
sti
add
add
cmp
popl
mov
pushf
pushl
ret
call
stos
mov
push
lea
jmp
movl
movb
pushf
lea
jmp
movb
lea
je
mov
mov
sets
lea
mov
setne
bswap
setbe
pushf
lea
pusha
pusha
pushf
xchg
push
seta
lea
not
pushl
popl
not
jmp
add
add
add
add
mov
push
add
mov
add
sub
add
push
push
add
aas
push
add
add
add
add
mov
or
call
movl
push
pusha
jmp
mov
xor
add
xor
jo
pop
push
jo
sbb
adc
and
lods
scas
mov
stos
clc
cli
cmpsl
mov
test
pushf
push
pop
addr16
or
orb
adc
mov
inc
shll
int3
addl
cld
sub
cmp
out
hlt
sub
int3
adc
inc
or
fwait
or
test
ret
push
jp
jae
and
into
pop
movsb
fiaddl
cwtl
test
sbb
dec
jge
test
pushf
out
sub
dec
sbb
dec
push
sahf
rcl
bound
mov
or
sbbb
imul
inc
popa
pop
dec
mov
fidivrl
cs
mov
pop
shlb
loope
adc
scas
xchg
adc
addb
push
push
sub
jmp
adc
es
push
add
push
pop
push
cld
pusha
adc
loope
add
push
cmpsl
popf
adc
adc
idiv
rcrb
pop
clc
and
ds
cli
add
sahf
dec
pushf
push
int
jne
xor
or
mov
xchg
fbld
and
xchg
xor
dec
pop
push
dec
push
jne
pop
imul
xor
xor
inc
push
mov
dec
push
xchg
xor
cs
or
jmp
repz
pop
cmp
xor
fisubs
mov
mov
push
test
xchg
pop
and
enter
ljmp
mov
test
divb
lret
call
sbb
pop
sbb
insb
das
push
jecxz
icebp
pusha
push
enter
or
jl
or
xor
rcll
jle,pn
sub
mov
cld
jge
jg
dec
or
dec
add
enter
inc
mov
lret
fisttpl
add
inc
imul
cmpsb
mov
aad
cwtl
and
inc
xchg
mov
xchg
in
imul
adc
xchg
stos
scas
dec
xlat
cmpb
xchg
ds
out
jg
leave
std
mov
pop
pop
lret
lds
addr16
and
sahf
mov
imul
inc
xchg
mov
mov
mov
mov
push
in
cmpsl
push
imul
mov
repnz
popf
jmp
pop
lret
lods
insl
repnz
pop
in
sub
pop
adc
int3
xchg
push
xchg
mov
data16
test
mov
inc
inc
mov
in
pusha
fcomip
xor
sub
das
sbbl
dec
pop
adc
xchg
movsb
rorb
testl
cmp
add
xchg
mov
or
out
add
jle
mov
call
stc
cmp
lea
push
movb
pusha
pushl
ret
pushl
rep
bswap
pop
mov
movw
lea
jmp
movsbl
mov
mov
pushf
call
pushl
jmp
adc
push
mov
lea
jae
call
mov
movw
lea
ja
call
not
pusha
btc
mov
shr
inc
or
shrd
mov
push
mov
cmp
add
adc
xor
call
push
add
bt
bt
movb
test
pushf
lea
jb
jne
jmp
or
pushf
jmp
pushf
call
lea
call
pusha
call
push
inc
fcoms
scas
add
push
rol
xlat
in
mov
pop
sbb
lds
arpl
enter
sbb
fsubr
rcr
xchg
stos
push
icebp
pop
push
nop
lret
push
sarl
stos
test
fcomi
std
or
mov
xchg
mov
stos
xchg
mov
mov
and
mov
pushf
lea
jns
push
pusha
lea
jmp
jmp
bt
bt
sub
pusha
mov
inc
lea
pusha
lea
call
pushf
pusha
mov
pushf
adc
pushl
push
lea
jg
push
lea
call
jmp
adc
pusha
push
pushf
pushf
pushl
ret
call
add
sub
clc
push
add
jmp
lea
je
bt
stc
cmp
call
mov
clc
cmc
pop
das
rol
out
add
nop
fcom
sbb
movsb
mov
dec
fsubrl
sahf
icebp
dec
cmp
cltd
sbb
sahf
push
pushfw
xchg
dec
adc
rcll
rcll
mov
push
loop
xchg
xchg
mov
pop
xchg
push
pushf
aad
inc
or
mov
adc
jmp
mov
sar
bt
pusha
bsf
add
rcl
add
setbe
mov
push
shr
pushf
jmp
push
pushf
lea
ja
pushf
pushf
mov
pusha
lea
jb
cmp
cmpb
pusha
call
shrl
incb
jg
jne
cmp
push
cs
xor
pop
jp
mov
popa
xchg
repnz
lret
mov
xchg
mov
or
or
cltd
bnd
sub
js
push
gs
scas
dec
scas
mov
pop
pop
cs
xchg
mov
sbb
pop
ja
and
rorl
pop
cmpsb
pop
push
fwait
xchg
pushf
push
test
outsb
into
iret
pusha
sbb
outsl
aad
mov
and
divb
jecxz
or
sbb
mov
packuswb
outsl
aad
adc
lcall
sti
sahf
fwait
iret
xchg
test
and
xor
mov
xor
jge
xchg
fidivrl
mov
mov
lea
jmp
add
pushf
jmp
data16
out
std
aad
add
mov
ret
test
fucomp
stc
notl
sti
adc
setl
xor
neg
xchg
mov
int
sub
outsb
ja
jno
inc
cld
push
jb
in
fidivrl
stc
clc
cmp
pusha
pushl
lea
ja
add
sub
btc
bsf
ror
add
shl
neg
mov
clc
mov
cmc
repnz
call
movl
pushf
pusha
movw
push
lea
jmp
push
lea
call
pushf
movb
lea
jb
push
pushl
ret
pushf
pushl
lea
call
pushf
lea
jae
call
mov
movzbw
mov
push
jmp
pushl
popl
mov
mov
pushf
pushl
ret
test
test
push
pushf
lea
je
push
cmc
add
mov
call
push
mov
call
cmp
insb
add
dec
mov
jp
xchg
dec
mov
pop
jge
mov
lcall
sub
sbb
pop
or
mov
and
push
mov
aaa
push
movd
cli
mov
adc
popa
jne
cmp
xchg
shll
inc
aad
jmp
ds
incb
lahf
inc
push
mov
sbb
fiaddl
pop
popf
lahf
jl
outsb
das
mov
xchg
clc
or
or
in
idivl
push
or
stc
pushf
into
mov
ret
adc
sbb
cmpsb
xchg
sbb
mov
insb
test
out
mov
lret
jno
aas
shlb
dec
xchg
push
push
mov
xchg
inc
iret
jmp
cmp
clc
pop
je
int3
xchg
cmpsb
pop
scas
loopne
jmp
or
inc
sbb
jns
xor
jle
sbb
aas
jle
jns
add
push
test
je
sbb
movsb
lcall
and
stc
mov
or
xor
cltd
sub
push
pop
sbb
adc
in
out
clc
cmpl
mov
add
push
add
push
add
loopne
add
push
add
add
add
add
pushf
bswap
mov
rcl
movsbw
mov
sbb
shrd
xor
bswap
push
shld
btr
push
rcl
xadd
bsf
push
not
movzbw
shrd
push
bsr
and
ror
pushf
xchg
movsbw
stc
sub
mov
clc
neg
lea
test
mov
neg
rol
not
rcr
mov
clc
cmc
or
jae
je
push
jmp
lea
call
pushf
lea
jae
xchg
xchg
pushf
movb
mov
inc
call
movw
pushl
popl
mov
pushf
pushf
pushl
ret
sbb
mov
push
rolb
cmp
lret
mov
scas
mov
jmp
mov
cwtl
pop
lds
push
outsl
mov
fists
fwait
popa
daa
xor
sbb
dec
les
outsw
or
ja
test
mov
mov
mov
dec
gs
adcb
fbld
shll
in
mov
mov
fidivrl
fwait
sarb
das
inc
or
ja,pn
push
dec
ja
in
adc
lret
xor
inc
jp,pt
mov
mov
ficoms
pop
fdivr
inc
shll
test
stos
mov
xlat
int3
popa
mov
add
pop
icebp
insl
ds
adc
out
jmp
mov
or
nop
mov
in
sbb
outsl
mov
add
cmp
add
sbbl
call
and
jecxz
cli
dec
adc
pop
int3
adc
imul
xorb
pushf
xorb
push
push
pushf
jae
rcll
pop
dec
adc
cmpsl
xchg
test
test
xor
mov
add
push
pushl
call
or
movl
call
movzbw
lahf
pushf
lea
mov
mov
mov
jmp
pushl
movw
movl
mov
pusha
push
lea
jmp
sbb
and
out
or
std
jecxz
mov
daa
and
and
or
outsl
push
push
push
dec
subl
lret
fxch
mov
add
sub
cmp
sahf
lock
roll
stc
jl
rol
inc
fisubl
add
in
daa
jns
imul
dec
loopne
dec
cmp
mov
iret
pop
sarl
adc
imul
push
cld
mov
xchg
mov
xchg
xchg
aam
fidivrl
lea
ja
or
rol
clc
add
not
or
or
mov
bt
pusha
pushf
cmp
movb
lea
jb
bt
jmp
movl
pushf
lea
jmp
pushf
stos
pusha
pushl
lea
jmp
pushl
pushl
lea
jbe
ror
or
not
sub
pusha
mov
cmp
xchg
mov
or
xadd
add
neg
shr
rol
call
call
movzbl
not
bswap
pop
pusha
mov
lea
pusha
mov
pusha
pushf
pushl
ret
mov
in
xor
fcomip
aad
push
dec
xor
inc
pop
addr16
das
inc
pop
loope
xchg
dec
mov
leave
mov
jns
xor
mov
push
pusha
mov
mov
xchg
push
in
or
lds
dec
and
ss
rcrb
pop
inc
cmp
fidivrl
shr
pop
out
clc
cmc
daa
sahf
cmp
mov
sub
test
inc
inc
jp
cmpsl
xchg
dec
mov
cli
cwtl
loope
push
imul
xor
cmpsl
aas
bound
pop
scas
clc
adc
xchg
cli
pop
pop
mov
xlat
fadd
mov
stos
mov
fidivrl
pushf
lea
call
pusha
jmp
jmp
jne
not
seta
movsbw
mov
push
movb
pusha
pusha
lea
jmp
neg
mov
lea
call
jmp
inc
fucomp
jne
nop
ja
ds
inc
jo
pushf
xchg
fisubrs
hlt
fnstcw
fiaddl
stos
inc
xchg
xchg
mov
repz
xchg
mov
adc
xchg
lahf
push
mov
mov
mov
test
aad
out
or
mov
xchg
pop
xorb
push
daa
jmp
push
lcall
repz
mov
and
test
dec
cmpsb
or
add
ss
jl
pop
outsl
clc
fidivrl
pushf
jmp
pusha
call
pushf
dec
pushf
sub
jl
pusha
pusha
shl
pushf
push
lods
cmp
cmc
add
clc
test
stc
jmp
mov
movsbw
lea
movzbw
movzbw
mov
pushf
movb
jmp
mov
clc
bt
movb
test
push
pusha
push
lea
je
test
sub
add
shl
sbb
movzbw
cmp
mov
jmp
lea
jne
cmc
mov
bt
pushf
or
pusha
lea
je
push
lea
pusha
push
lea
not
movzwl
movw
jmp
jmp
push
call
pusha
pushf
pusha
lea
jne
jmp
mov
lea
call
movl
jmp
jmp
inc
movb
pusha
mov
jmp
movl
pusha
jmp
adc
adc
and
ret
or
popa
add
scas
in
inc
in
call
lods
mov
mov
push
inc
std
mov
stos
decb
mov
aas
js
fwait
int
add
mov
push
pop
outsl
dec
dec
dec
pop
pusha
insl
outsb
adc
push
dec
rorb
dec
xor
movsb
push
ror
pop
in
fists
rolb
lods
fimull
test
mov
add
mov
setb
mov
stc
test
bt
sub
push
push
lea
jmp
mov
scas
shlb
in
add
sti
add
pop
inc
std
out
pop
fwait
das
rorl
push
adc
adc
push
pop
pop
lds
test
mov
fisttpll
mov
xor
cmp
jno
lahf
mov
rol
fistpl
shll
push
lods
jb
shlb
cltd
sub
jg
push
into
adc
push
and
std
and
fisubrs
xchg
xchg
sub
and
push
push
lret
sahf
jl
in
and
jns
mov
jbe
push
movsl
push
test
je
pop
js
cmp
into
enter
dec
stos
jg
imul
popf
or
mov
jg
cmp
ret
movsl
enter
jecxz
xlat
xor
leave
aas
shlb
outsl
popf
or
rcll
mov
sahf
popf
push
loopne
popa
xchg
mov
ljmp
mov
in
pop
dec
and
xchg
mov
and
adcl
pusha
xchg
in
outsl
int3
cmp
das
cmpsl
sbb
scas
or
es
insb
das
arpl
pop
pop
lea
push
stc
sbb
int
aas
ja
sbb
out
pop
lret
cwtl
in
pop
adc
jb
lret
test
mov
fildl
add
mov
pushl
popl
pushl
movw
movw
pushl
ret
movl
push
jmp
repz
jmp
clc
stc
jmp
call
inc
movl
dec
jg
sti
sahf
mov
pushf
stos
test
pop
mov
mov
popa
stos
loopne
adc
inc
rcll
xchg
inc
andb
jnp
adc
inc
idivl
pop
cmp
xchg
add
cmp
jbe
jle
addr16
aad
sub
sub
sbb
dec
jg
pop
xchg
repz
mov
fadds
std
mov
dec
pop
outsl
mov
mov
add
pop
mov
bt
sub
stc
pushl
pushl
jmp
call
ja
pop
loope
pop
addr16
das
push
jp
mov
mov
jg
pushf
popf
inc
jmp
call
jmp
nop
xchg
leave
pop
xchg
in
or
xchg
or
fisttps
mov
movsl
dec
push
jecxz
sub
dec
jb
stos
or
push
push
push
cli
movsb
rcrb
rorl
adc
inc
cwtl
insl
loopne
xchg
lret
add
sub
sub
inc
and
mov
rolb
iret
sub
std
dec
xor
aam
push
push
add
dec
dec
push
js
push
rcll
fidivs
sbb
adc
rcl
in
inc
cmp
or
xchg
mov
pop
ljmp
repz
and
push
jl
jge
jno
push
xlat
bound
inc
jnp
cmpsl
mov
jb
cmp
outsl
cld
push
cmp
jp
jo
mov
add
lea
jne
push
mov
pushf
movw
mov
call
lods
lock
xor
push
repz
jl
inc
loop
xor
mov
into
adc
dec
les
fwait
pop
movntps
jb
or
scas
sbb
call
jno
mov
das
jns
sbb
stos
jb
xchg
mov
mov
roll
lcall
xchg
mov
sub
jp
test
lahf
pop
out
sub
test
mov
aas
sub
pop
adc
clc
inc
lods
out
push
in
fnstenv
cbtw
lret
aad
clc
push
addr16
pusha
in
sub
test
out
idiv
subl
in
inc
popa
xor
pop
wrmsr
sub
pop
daa
push
aad
out
push
xchg
push
sbb
lcall
mov
cmp
adc
repz
nop
cmpsl
dec
cmp
scas
mov
add
adc
gs
and
pop
xchg
adc
ret
xchg
or
hlt
jnp
ja
out
in
xchg
sub
pop
sub
pop
arpl
fsubr
test
xchg
gs
fidivrl
ss
insl
sbb
sbb
sbb
jae
fdivrl
sub
cmp
xchg
jne
cltd
mov
lds
enter
cmpsb
mov
es
dec
fildll
enter
pop
call
test
adc
inc
dec
pop
jmp
add
push
pop
lods
sti
lcall
int3
aad
imul
loop
mov
fdivl
dec
fucomip
lret
aad
mov
shl
add
popf
inc
mov
mov
int
adc
fistpl
out
popa
cltd
cmc
add
jg
in
test
mov
popa
std
mov
push
addl
mov
dec
mov
dec
add
push
cmp
leave
mov
in
popa
sub
fcompl
stos
stos
dec
mov
dec
in
cmp
mov
cmpsl
mov
fwait
pop
push
out
add
sbb
push
pminub
jp
xor
out
in
mov
jnp
push
ret
fidivrl
ja
shll
add
sbb
sub
push
movsb
scas
hlt
repz
leave
in
ffree
pushf
loopne
push
pop
int3
pop
movsb
fucomp
or
add
inc
pop
fldl
sarl
push
lds
mov
cmc
cwtl
cmp
pop
sbb
test
in
les
fisttpll
push
int
push
ficoml
sahf
aam
fs
jae
fs
out
lret
push
add
dec
mov
clc
mov
hlt
xchg
sbb
mov
mov
int
sub
pop
insl
das
enter
pop
aad
dec
add
dec
in
insb
in
inc
int
dec
std
int3
sbb
nop
or
fbstp
call
insl
fcoml
int3
into
dec
fcmovne
incl
pusha
in
pop
in
mov
add
jmp
lahf
fisubrs
add
ss
in
loope
add
mov
push
jmp
aam
sarl
lcall
sub
insl
jmp
aam
rcrl
lcall
cld
cmp
pop
aam
shll
pop
lcall
mov
leave
test
ror
pop
lcall
jmp
aam
shll
lcall
jne
stc
jmp
aam
roll
fldenv
sbb
jge
dec
jmp
aam
rcrl
mov
pop
mov
cmp
and
fisubl
and
jecxz
cmp
dec
stc
lret
mov
orl
stos
mov
push
int
adc
stc
ja
xor
lcall
sahf
int3
inc
xchg
and
bound
and
fstpl
ljmp
rcrl
mov
or
pop
mov
roll
ficompl
adc
fdivl
sbb
add
es
aam
dec
pusha
sti
fimull
mov
pop
lock
scas
jle
movsl
jecxz
add
div
lahf
hlt
ss
mov
enter
leave
jecxz
cmp
xchg
and
jns
nop
shl
or
int3
cmpsl
lret
xor
pop
fistps
in
cmc
int3
aad
shll
push
gs
inc
or
lret
xchg
xor
inc
scas
xor
stos
pop
leave
mov
fldl
push
addr16
adc
dec
jnp
xchg
mov
rorl
mov
ljmp
imul
fsubp
popf
add
dec
dec
aad
xlat
xlat
movsb
lret
adc
add
mov
rcrb
xor
aad
arpl
in
ror
in
sub
ficompl
fdivrl
aam
jmp
aad
loopne
inc
jl
dec
push
pop
cmp
in
jmp
jmp
fcompl
lea
int3
jecxz
jecxz
rol
gs
ror
sbb
push
jne
sub
lds
movsb
xchg
or
in
arpl
or
lock
loope
xchg
pop
mov
jmp
sbb
call
fnstsw
test
sub
ficoms
in
aam
mov
ficomps
loopne
pop
test
in
dec
popf
xor
xor
into
mov
movsl
jecxz
mov
int
stos
mov
call
fnstenv
mov
pop
xchg
mov
mov
in
cmpsl
inc
xchg
shl
cmc
add
cmp
pop
outsb
js
push
sub
repnz
into
fistpl
lods
jecxz
addr16
or
in
icebp
dec
mov
cltd
pop
rcll
icebp
mov
push
mov
pusha
in
mov
hlt
gs
inc
mov
lret
push
pop
xor
imul
test
sub
sbb
sub
outsl
fcomps
repz
outsb
and
clc
xor
mov
sbb
ljmp
movsl
cmp
lahf
les
test
mov
mov
mov
mov
mov
leave
or
shrl
out
pop
cmpsb
xchg
xor
fstl
sahf
sub
fildll
leave
in
mov
inc
mov
xor
loopne
mov
mov
ret
je
mov
jmp
jmp
mov
das
cli
scas
test
push
jne
jl
sbb
shl
jne
mov
jns
insl
xchg
inc
xor
mov
add
mov
les
icebp
daa
ftst
xchg
bnd
and
jmp
jmp
add
xchg
cmp
aad
in
fs
mov
and
mov
loope
mov
push
sbb
lret
fisttpll
or
test
bound
daa
cmpsl
addr16
xchg
pop
out
ret
cmp
in
and
add
push
or
in
xchg
add
ss
sub
in
cmp
pushf
out
inc
insl
daa
xchg
cli
scas
mov
fwait
dec
nop
mov
lods
lds
ss
cmpsb
push
fidivl
test
lods
les
or
ja
test
xchg
cli
and
fidivrs
ret
xchg
mov
cmpsl
dec
fwait
fwait
rcrb
mov
jg
jecxz
mov
stc
add
cmpsb
lds
ljmp
or
jl
dec
pushf
out
stc
popf
std
mov
mov
lcall
jne
shrb
xchg
roll
cmp
inc
das
mov
xor
mov
ds
mov
test
fwait
div
in
call
movsb
stos
mov
pop
jge
mov
fdivl
fcomip
lahf
fcmovbe
xchg
push
fadds
pop
add
jne
adcl
dec
dec
popa
sti
shrl
mov
je
jno
popf
mov
int3
test
lds
ficoml
out
nop
bound
pop
sti
sarl
jl
scas
movsl
std
fs
sbb
xchg
mov
push
mov
ljmp
repz
jmp
cmp
sbb
push
fcmovnu
mov
jecxz
shll
hlt
ss
rcrb
lahf
ffree
in
mov
shrl
fucomp
push
adc
mov
nop
sbb
andl
aam
movsl
mov
cmp
rcrl
and
adc
int
in
fisttps
std
test
lret
push
mov
fdivr
das
mov
mov
sub
adc
adc
cmp
rcrb
inc
cwtl
sbb
inc
test
sbb
leave
flds
add
call
inc
aad
bound
adc
push
cmp
enter
sub
xchg
mov
mov
inc
push
mov
pop
and
xchg
sub
fbstp
mov
fisttps
pop
xor
lods
add
sarl
cmp
xor
mov
lock
mov
icebp
fwait
add
imul
movsl
xor
adc
repnz
fnstcw
or
mov
repz
ljmp
or
or
leave
mov
lock
or
push
fistpl
fstps
pusha
fdivrs
adc
mov
icebp
movsl
roll
int3
mov
aam
xlat
mov
mov
mov
pusha
jne
iret
or
xchg
mov
mov
jno
loop
test
pushf
dec
sub
mov
mov
jg
jp
sbbl
loope
leave
out
adc
mov
fstpl
aam
inc
aad
insb
pop
sub
jl
out
lock
mov
icebp
mov
bound
pop
push
mov
arpl
fmul
mov
shll
pop
xchg
cmp
push
stos
imul
or
mov
gs
cmpsb
movsl
test
add
nop
push
push
pusha
inc
mov
xlat
pop
add
xlat
jle
mov
cmp
fwait
and
jne
fcoms
cltd
mov
stc
lahf
mov
sbb
sub
jne
cld
mov
and
mov
fstl
and
push
lcall
leave
add
inc
mov
fisttpll
stos
lahf
mov
sbb
or
int
sbb
push
ret
dec
nop
jmp
pop
imul
sbb
movsb
xor
outsl
shrl
or
push
out
inc
cld
sub
inc
loopne
mov
ror
push
dec
cmp
and
fwait
jmp
ss
mov
pop
mov
dec
inc
mov
jnp
clc
in
xor
mov
mov
insl
cmp
jno
jg
cltd
repz
xchg
sub
rcrb
and
push
std
insl
int3
mov
mov
je
hlt
fs
insl
or
pop
dec
lods
iret
add
push
aam
aam
arpl
jbe
rcr
js
arpl
fistps
dec
lock
lahf
setno
fwait
mov
out
iret
pop
test
dec
pop
xchg
dec
aaa
add
mov
sub
sahf
jge
pop
jmp
dec
cwtl
ja
outsb
sbb
dec
fildl
jp
sbb
push
sti
shrl
add
inc
mov
imul
cmp
je
push
ret
mov
loop
dec
mov
or
mov
add
fmul
movsl
insl
add
bound
addr16
sbb
aaa
ja
xchg
out
fnsave
ljmp
dec
div
sub
clc
rcrl
cld
mov
aaa
mov
lock
out
adc
mov
imul
stos
jge
movsl
fs
cmc
mov
pop
cmp
mov
sbb
into
or
dec
mov
add
and
lds
ja
hlt
aaa
dec
decl
push
popa
gs
add
dec
or
lret
popf
push
adc
imul
push
loope
add
fsubrl
mov
insl
cmp
mov
in
outsl
lret
sbb
dec
sub
fldcw
lret
xchg
or
fcmovnu
mov
int3
test
lret
imul
in
unpckhps
filds
dec
adc
int3
pushf
sti
sbb
ljmp
mov
pop
test
jns
sbb
sub
dec
std
sti
in
test
cmpb
les
test
mov
insl
leave
sbb
or
xor
stos
jge
mov
mov
cmp
cmp
xor
push
dec
mov
xor
scas
sub
in
out
stc
mov
jae
gs
add
in
mov
lds
mov
ljmp
cmp
out
adc
stos
lret
stos
ss
repz
aaa
ret
hlt
or
stos
add
mov
xchg
mov
cmp
xchg
or
mov
mov
push
pushf
popa
cmp
xchg
fwait
mov
jns
or
pop
sbb
mov
sub
sarl
xor
int
ljmp
mov
rclb
lret
add
in
popf
dec
jl
push
or
jp
dec
js
push
pop
jo
mov
adc
xor
xchg
stos
add
adc
mov
stc
ror
fld
lods
test
sti
lds
andl
out
fstpt
sti
int3
cmc
test
std
lret
mov
int
dec
mov
in
mov
adc
sbb
push
cmc
jle
icebp
mov
mov
mov
dec
in
in
pushf
in
inc
int3
test
popf
shl
cmc
lcall
cld
std
fcompl
dec
test
stc
mov
mov
cmpb
sbb
sbb
sub
movsb
sbb
sbb
mov
int
std
js
add
gs
pop
jns
and
xchg
push
les
les
cmpsl
movl
ljmp
in
mov
and
movsl
fmull
test
shl
or
jmp
in
aam
jl
xchg
push
lcall
mov
cmpsl
push
or
in
sti
shll
cmp
inc
mov
xor
jmp
icebp
jecxz
mov
imul
stos
push
test
push
add
shl
mov
add
arpl
mov
arpl
pop
in
and
fstps
fadds
jl
cmpsb
sbb
mov
es
cmp
cmp
push
popa
mov
movsb
roll
in
jmp
loope
movsb
out
cmpsl
popf
das
test
mov
dec
clc
iret
jne
push
test
sbb
ficomps
jne
out
ss
fisubrl
ficomps
inc
or
fbstp
in
push
out
cmp
jg
int
out
jp
imul
dec
and
cmc
sub
jne
fs
sbb
fwait
jmp
cmc
cli
std
sub
faddl
fimuls
fisubrs
sbb
aad
mov
in
cmp
lds
cmp
add
fsubp
inc
shl
sbb
popa
data16
lcall
icebp
mov
dec
sbb
mov
fst
mov
fdivl
jmp
fisubrs
mov
loop
jno
test
fdivp
dec
ficoms
fidivrl
sbb
clc
mov
neg
add
push
inc
dec
repz
rclb
popa
stos
jge
and
adc
fsub
xchg
jne
faddp
pop
mov
in
lds
sbb
cmp
int3
repz
sbb
ficoms
fnstsw
sbb
call
pop
movsl
loop
mov
xchg
shll
test
jmp
movsl
add
and
sbb
sbb
imul
outsb
sbb
and
mov
sbb
adc
mov
ffree
mov
mov
adc
std
into
fwait
mov
inc
in
aad
fdivl
aaa
pop
mov
sti
in
test
lret
adc
pop
out
int3
xlat
sti
stc
test
push
in
mov
or
popf
out
popa
jb
inc
sti
adc
lret
orl
mov
shll
jmp
aas
popf
or
test
lret
pop
or
sti
imull
into
fstpl
je
dec
sti
sbb
lret
push
or
lods
dec
mov
in
fs
lret
fsincos
sub
sbb
jno
push
arpl
or
sti
pop
test
outsb
adc
in
lret
pop
or
mov
pop
in
outsl
int3
and
sbb
add
mov
test
lret
arpl
scas
and
pop
sbb
sti
jne
daa
ret
fs
lret
das
sti
fistpl
jmp
add
repz
lret
lods
or
dec
dec
jge
mov
cmp
jmp
or
adc
int3
dec
sbb
sti
sub
jnp
jno
in
fs
mov
dec
pop
sti
push
test
inc
fs
lret
sbb
sbb
dec
test
int3
add
imul
dec
outsl
sti
subl
xchg
or
push
in
ftst
aaa
sub
aas
or
xchg
cmp
lret
lds
popf
lahf
dec
out
sti
ljmp
inc
fstl
int3
outsl
dec
in
sti
addr16
xchg
dec
cmpsl
sti
fwait
test
pop
in
push
int3
inc
sti
scas
cltd
mov
lahf
dec
stc
sti
ljmp
jne
dec
lret
or
dec
jno
jnp
pop
pop
fs
popf
fwait
dec
add
sub
sbb
sub
test
lret
mov
dec
cmc
sti
stc
test
int3
das
ja
cmp
or
jnp
gs
or
sti
add
int3
das
js
dec
or
popf
sbb
mov
lret
mov
popf
aaa
push
fmull
imul
movsl
popf
in
dec
or
lret
aad
sbb
sub
rcr
popa
in
fwait
cmc
and
shr
dec
add
sti
in
test
fxch
fdivl
jmp
in
or
popf
in
fsincos
lret
int
sbb
jl
outsb
aam
jae
jp
and
jnp
jl
fs
lret
dec
jnp
test
dec
aam
jmp
int3
loop
fsubp
test
lret
fisttpl
shlb
mov
in
in
int3
stc
es
or
popf
jmp
dec
in
sti
sbb
or
leave
dec
mov
dec
sti
jno
ja
fs
lret
sub
jmp
out
sti
popf
test
lret
pop
or
test
and
adc
sti
popf
pop
dec
and
xchg
test
lret
pop
or
jge
imul
test
lret
cmp
jmp
icebp
dec
in
sti
mov
loope
dec
or
ja
sbb
popa
rorl
add
fxch
fsubrl
mov
leave
in
rcr
fnstsw
push
nop
cmp
loopne
add
inc
jae
lret
and
xor
add
lods
xlat
mov
shr
jne
ss
fisubrl
out
push
lret
mov
xchg
int3
pop
movsl
int
pop
sti
lret
icebp
in
cld
out
rorl
fucomi
aam
shl
movsl
mov
int3
push
jns
adc
add
in
sbb
test
scas
and
out
lods
jge
fisttpll
and
sub
jp
inc
mov
scas
mov
std
xchg
push
out
mov
lret
nop
pop
or
insl
imul
jb
inc
dec
lret
xchg
fucomp
arpl
call
int
int
sub
push
pop
add
xchg
out
cmp
sarl
add
push
popf
hlt
mov
sbb
mov
not
clc
test
idivl
hlt
xchg
jmp
add
bound
movsl
cmp
pop
shl
add
inc
ss
aas
push
andl
xchg
fsubr
mov
lahf
cmc
mov
mov
fistpll
dec
sbb
jl
cmp
inc
ljmp
cmpl
loopne
xlat
cld
or
lret
ret
cmc
je
xor
cmpsb
fnstcw
jne
ret
leave
inc
or
cmpsl
mov
and
int3
inc
lds
cmp
pop
hlt
lahf
filds
mov
and
or
mov
sbb
fadds
push
in
sub
orb
add
loopne
mov
shl
es
pushf
call
cs
mov
sti
mov
mov
cmpsb
pop
cmp
lret
push
int3
fsubrp
add
subl
cmpsw
std
rolb
pop
jne
push
sub
adc
sti
jl
in
push
pop
lcall
data16
pusha
and
mov
sbb
sbb
push
push
cmp
ret
movsl
enter
and
lea
inc
dec
test
jl
cwtl
push
adcl
sti
cmc
add
sti
mov
cmp
ljmp
int
mov
pop
test
int
sarl
aaa
movsl
inc
nop
ret
int3
cli
push
dec
stos
cld
jmp
rcr
fstp
jmp
pop
mov
out
inc
push
or
lret
filds
shrl
lahf
std
cmc
pop
aas
dec
into
clc
mov
shll
aam
aam
ror
or
push
pop
icebp
rcl
sbb
cmp
jae
cwtl
sub
test
cld
pop
or
test
insb
adc
in
cmc
sub
fs
ja
aas
int3
cmpsb
in
mov
fs
xchg
mov
xorl
int3
fs
cmp
xchg
cwtl
in
cmp
sbb
fsub
sbb
or
insb
aad
jne
inc
std
out
push
ljmp
inc
jp
out
loope
dec
hlt
sub
negl
clc
cli
testl
pushf
sub
stc
cli
imull
jne
loopne
mov
pop
pop
shlb
loope
add
dec
loope
dec
push
inc
dec
negb
mov
aas
negl
inc
cli
dec
adc
lcall
cli
mov
loope
loopne
fs
cli
sti
adc
push
negl
movsb
push
cmp
out
mov
dec
cmpsl
sub
mov
mov
icebp
dec
xlat
sahf
sti
sbb
jmp
mov
mov
dec
cltd
cs
pop
pop
xchg
jg
sbb
cli
mov
dec
mov
mov
mov
aad
outsb
sbb
xchg
mov
xchg
lcall
and
scas
xchg
movsl
mov
enter
fwait
aad
test
and
jl
shrl
mov
outsl
jge
mov
xor
leave
ja
push
pushf
lds
stos
mov
cld
and
outsb
and
imul
popf
inc
mov
pop
stc
mov
mov
mov
cltd
loopne
mov
inc
mov
jmp
cltd
ss
or
jmp
mov
leave
cmp
push
imull
or
out
pop
add
jb
pusha
hlt
test
cld
loop
movsb
jb
add
shll
test
adc
inc
idivl
pop
lahf
fsts
add
dec
pop
gs
sti
mov
out
jo
popf
in
ret
or
js
rcrl
sahf
popa
cld
lcall
ja
pusha
pop
or
hlt
cmp
roll
jl
mov
cli
dec
test
dec
push
fwait
rorl
hlt
std
out
fwait
mov
and
shll
stos
ffree
dec
jns
cltd
mov
mov
adc
mov
mov
jp
or
sbb
add
dec
popa
mov
push
je
xlat
std
andl
adc
xorl
xlat
cwtl
mov
and
mov
in
hlt
in
pop
push
mov
loopne
test
pop
adc
xchg
pop
lcall
bnd
inc
shrb
test
jne
pop
sbb
cmp
rcll
mov
in
jl
xchg
loope
fimull
sub
adc
mov
push
cs
idiv
lahf
pop
sub
fs
xchg
xchg
outsb
aad
mov
cmp
loope
aam
movsl
jno
mov
push
sub
cli
in
lods
xchg
inc
sbb
push
cltd
lret
pushf
popa
xor
inc
sbb
sub
push
jne
rcrl
movsl
xor
test
dec
mov
and
sbb
lods
cltd
aas
movsb
xlat
jmp
inc
sub
mov
mov
mov
into
sbb
fisttps
popa
scas
imul
xchg
pop
pop
rorb
pop
out
fs
popa
aaa
ja
loop
fstpt
fbld
mov
stos
pop
mov
or
in
pop
int3
mov
cmc
movsl
inc
add
cmc
call
add
xchg
imul
push
dec
fildll
cmp
rclb
jmp
push
std
xchg
loop
fmul
mov
add
sbb
dec
sbb
xchg
inc
mov
popa
aad
mov
rcr
rcrl
push
inc
fcoml
pop
lcall
adc
jno
pop
test
shll
cld
rcr
lret
fistps
clc
xor
jecxz
mov
mov
popf
jge
pop
pusha
fwait
jbe
lock
cld
push
push
rcrl
aam
ret
orb
mov
ja
mov
into
fistl
lahf
lds
mov
fisubs
sbb
jecxz
aas
in
add
aaa
leave
inc
ds
es
mov
ja
inc
inc
ret
adc
sbb
rcr
and
mov
ljmp
pop
xor
jmp
insl
js
jmp
pop
cmpsl
xchg
cmp
cld
ljmp
lret
push
daa
test
aas
mov
in
add
insl
xor
aaa
int
or
sarb
jecxz
cmp
lea
ret
gs
jecxz
cmp
cmp
jmp
inc
inc
insb
lock
in
sbb
push
fstps
repz
jmp
push
lds
test
xor
xor
jg
pop
lcall
cltd
outsl
inc
pop
mov
movsl
fldenv
stc
add
mov
or
fmul
push
fsubp
idivb
xchg
das
iret
pop
fdivrs
jmp
add
push
mov
mov
or
ljmp
and
pushf
mov
rorb
cmp
and
mov
aad
outsb
imul
jge
sbbb
or
mov
push
je
ret
fdivl
fstpl
ds
imul
sbb
and
leave
sar
pusha
sbb
and
mov
cmc
stc
jb
mov
mov
lret
mov
rolb
adc
adc
movsl
dec
and
cmp
xchg
iret
push
dec
pop
mov
add
shlw
or
mov
lods
bound
mov
iret
pusha
std
dec
aaa
test
jmp
pop
mov
fisubl
jge
jmp
movsl
cmp
iret
mov
dec
xchg
or
ss
test
int
shll
mov
hlt
pop
mov
test
fs
js
fwait
movsb
popf
incl
movsb
dec
xchg
jnp
aam
out
inc
jo
push
dec
xor
push
sub
sbb
adc
ret
mov
sub
faddl
jmp
cmc
mov
mov
ljmp
mov
aas
mov
aaa
cmp
or
fadd
mov
int
jns
movsl
lcall
fistpll
sbb
push
sbbl
inc
popa
pop
pop
xor
mov
repz
mov
dec
push
fnstenv
xchg
dec
insl
icebp
mov
aas
dec
xchg
mov
jecxz
into
xchg
xchg
or
testb
mov
movsb
lret
ror
leave
mov
test
pop
mov
jg
mov
or
add
ss
or
pop
pop
pop
dec
scas
and
movsl
fldcw
push
lea
jmp
mov
push
in
mov
add
mov
inc
jl
jo
rorl
ljmp
shrb
loope
es
xor
loop
fstpl
pushf
xsavec
cmp
cmp
sar
push
icebp
std
push
cld
pop
loopne
icebp
shl
push
repnz
cmp
add
inc
xchg
iret
adc
fnstcw
icebp
outsb
inc
lds
mov
xor
mov
sub
pop
icebp
in
xor
xchg
xchg
pop
pop
fisttpll
mov
shl
push
aas
and
pop
aad
mov
mov
xchg
dec
sbb
cmpsl
int
out
out
aad
lret
fdiv
or
mov
std
ret
push
cmp
cld
dec
out
add
and
popf
or
sbb
sbb
xchg
xchg
and
inc
lahf
je
adc
jnp
xor
and
lock
push
mov
mov
dec
gs
xor
jl
xchg
imul
cmpsb
lret
jecxz
in
mov
in
out
sarb
inc
std
lea
int3
mov
xor
imul
lcall
outsb
in
cmpsl
xchg
jmp
jecxz
pushf
lret
out
stc
jge
popf
push
add
mov
xor
mov
fnstsw
lds
gs
pop
loope
inc
aad
pop
jmp
loop
gs
xchg
sbb
iret
pop
int3
inc
sub
pop
out
or
aad
pop
sbb
and
loope
in
out
ffree
pop
jl
lea
inc
rorl
mov
mov
pop
jo
shll
pop
aaa
cmpsb
insl
xor
das
jns
jmp
xor
out
stos
pushf
and
cmc
popf
lds
daa
lods
fldcw
mov
add
das
out
mov
mov
jno
imul
out
dec
mov
popf
add
int3
shl
sbb
cli
mov
fidivrl
scas
decl
movsl
adc
loop
popf
mov
aad
out
sub
inc
mov
fdivp
pop
xchg
inc
popa
xor
aam
pop
xchg
cmpsl
fnstcw
shll
jns
aaa
loopne
out
mov
push
push
xchg
dec
xchg
fcoms
dec
push
loop
scas
rep
fdivl
cmc
cmpsl
lahf
aad
jns
bound
or
in
cld
test
mov
loop
or
lret
lret
int3
ret
lods
pop
mov
mov
or
incb
movsl
loopne
jns
jmp
jmp
push
incb
sbb
mov
sbb
test
sarl
cmp
xchg
mov
jecxz
cmpsb
push
jmp
sbb
sub
xchg
ret
mov
inc
jns
fwait
arpl
push
je
and
popf
aas
iret
dec
fwait
sar
pop
add
pop
cmp
jno
test
jg
lahf
sbb
inc
sbb
fisttps
mov
and
repnz
fwait
mov
xchg
dec
nop
shrl
adc
sbb
mov
mov
sbb
stc
fldl2t
jl
stos
dec
mov
pop
dec
imul
jl
jmp
shlb
push
cmp
inc
adc
adc
sub
dec
repnz
or
jge
fs
aad
stc
mov
psrld
mov
inc
lret
sbb
jg
or
pop
icebp
adcl
fnstcw
enter
jbe
and
mov
push
aad
push
cmc
into
xchg
inc
mov
inc
pop
adc
inc
or
dec
cwtl
popf
jae
jbe
dec
mov
pop
dec
jae
mov
lret
rcr
ja
fldl
mov
fldt
mov
icebp
inc
jmp
jle
int3
add
bound
shlb
int
arpl
sbb
call
add
jmp
and
push
imul
aam
mov
xor
fwait
pop
mov
xchg
adc
rolb
xchg
jmp
mov
bound
stc
test
push
imul
add
cmpsl
adc
ljmp
jecxz
pop
dec
mov
inc
lret
fmull
mov
cmp
ja
add
inc
mov
shll
or
and
sub
or
sbb
cmc
cmp
sbb
xor
lret
fldl2e
ss
xor
lock
sbb
push
mov
dec
mov
jmp
adc
pop
in
int
jmp
in
jae
imul
jae
movsb
fisttpl
mov
xor
mov
cmp
adc
mov
sub
in
inc
sbb
mov
add
test
cmp
out
dec
lret
loopne
loopne
mov
add
popf
sub
or
or
into
das
mov
out
cmp
inc
dec
bound
int3
sub
adcl
inc
jmp
aad
ja
aad
xor
in
mov
mov
pop
shl
sbb
scas
sbb
fistpll
movsb
inc
fisttpl
or
mov
mov
jecxz
in
divl
inc
dec
sbb
fstpl
and
popf
add
ret
in
dec
ljmp
stc
cs
imul
shll
in
jl
insl
stc
jmp
fsubl
movsl
fscale
jo
leave
xlat
repnz
pop
jbe
repnz
fsubs
movsl
addb
rolb
or
push
shl
pop
mov
jno
aad
test
xor
pop
adc
cmp
push
mov
jne
popf
mov
ds
ret
test
jg
js
adc
idiv
ret
jl
test
ja
rorb
or
test
in
test
cmp
scas
push
and
outsb
adc
push
iret
fmul
fwait
jg
sbb
cli
mov
inc
popa
mov
fnstcw
rcrl
add
adc
cld
outsb
lcall
gs
jl
pop
mov
cmpl
mov
adc
add
scas
or
test
loope
movsl
shl
sbb
cli
imul
pop
pushf
jmp
jmp
mov
mov
call
test
mov
mov
ljmp
cld
mov
xchg
lock
fimuls
fwait
test
aas
xchg
test
in
lahf
and
and
xor
in
das
lcall
fidivrs
popl
jmp
leave
push
in
xor
fidivrl
or
aam
mov
bound
iret
mov
sbb
adc
lahf
inc
imul
mov
xor
or
imul
mov
mov
mov
int
pop
outsl
insl
cli
sbb
or
mov
js
mov
fsub
sbb
pop
int
mov
xor
sbb
mov
fidivrl
mov
mov
cmpsb
aaa
popa
testb
in
jnp
inc
mov
dec
mov
jno
sarl
ds
loop
xor
testb
stos
dec
inc
xor
vpsllw
mov
jle
nop
xor
xchg
int
push
xchg
mov
int
mov
add
in
xlat
fwait
cmp
add
dec
pop
mov
stc
repnz
jne
loope
lret
mov
jmp
jge
in
pop
repnz
pop
mov
mov
gs
out
data16
cmc
and
sbb
mov
sub
bound
or
sahf
scas
cmc
in
iret
sbb
add
xor
fstps
xor
ja
aam
mov
mov
jne
pop
test
fildl
push
add
mov
loope
fsubrl
shr
and
sbb
push
add
xor
inc
aad
scas
push
sub
ret
cmp
xchg
enter
mov
sub
jnp
jle
mov
pop
add
fdivrl
lahf
lea
xlat
and
sti
lret
cmp
fwait
test
sbb
gs
and
in
loopne
fcomip
fsub
test
lahf
sbb
ljmp
fsubrp
in
aam
out
add
in
cld
mov
aas
fs
hlt
xor
or
pushf
test
jbe
mov
sti
mov
mov
jmp
loop
in
test
ret
in
fs
pop
mov
inc
cmp
jg
xchg
fldcw
in
and
pushf
in
cmc
rcrl
insb
jno
xchg
ficompl
sbb
test
add
mov
icebp
test
cs
inc
sub
outsl
mov
jle
inc
fs
or
testb
in
mov
mov
mov
movsl
jne
clc
loop
jmp
addr16
dec
in
add
aam
pushf
lcall
cli
mov
sbb
and
rclb
and
lods
in
test
push
push
push
mov
cmpb
mov
push
loopne
lea
mov
or
jg
xchg
arpl
xor
xchg
mov
int
push
loope
dec
leave
rcr
hlt
jl
mov
pop
xor
nop
or
aad
filds
add
cmpb
arpl
cmp
dec
dec
xchg
or
hlt
sub
or
push
pop
ret
adc
pop
adc
dec
iret
popf
pop
jl
mov
pop
fsts
pop
pop
sub
jmp
pop
lods
adc
cmp
ljmp
lcall
std
loopne
popa
mov
add
int
div
push
stos
rcrl
out
push
and
bound
nop
shrl
and
cmc
mov
insl
int
mov
dec
shl
push
rcl
jo
push
ret
xor
xchg
aad
xlat
unpcklps
and
mov
into
cld
in
jp
jmp
mov
ficoms
pop
mov
ss
lret
add
iret
xor
rorl
int3
test
test
push
add
adc
das
pop
popf
jmp
mov
loope,pn
or
loope
jmp
xchg
stc
push
fistps
loop
repnz
aaa
cmp
push
cmp
push
nop
adc
scas
sbb
jecxz
jmp
outsl
jo
dec
lods
push
adc
mov
test
adc
mov
xor
or
inc
adc
cs
aad
loope
or
popf
cmp
loope
ret
aaa
jmp
jne
shlb
pop
cmp
cs
loop
dec
fisubl
mov
mov
movsb
xor
mov
xor
inc
sti
aaa
in
pop
add
add
movsl
mov
lea
fcompl
mov
xchg
icebp
iret
mov
jmp
sub
inc
jecxz
jb,pt
jbe
icebp
clc
sti
cmpsl
lock
arpl
pusha
adc
leave
xchg
loopne
mov
jp
or
shrb
or
bound
xchg
push
mov
add
lcall
add
dec
inc
lods
js
mov
jecxz
mov
jmp
test
and
nop
lret
or
and
lret
das
sahf
in
jmp
ficoms
sahf
iret
sub
inc
jne
pop
sub
les
pushf
add
addr16
loope
cmp
insl
data16
pop
movsb
rcr
frstor
pusha
mov
outsl
cs
or
rorl
shl
je
data16
negl
pop
pop
sub
mov
bound
inc
xchg
sar
arpl
das
mov
mov
les
cvtdq2ps
dec
iret
mov
movsb
bound
xor
ljmp
repnz
sti
iret
loopne
daa
push
pop
cmp
mov
sub
imul
iret
push
and
sbb
inc
cmp
fwait
movsl
adc
shl
lock
and
inc
sub
cmc
popf
ljmp
push
fwait
js
pop
hlt
dec
subl
push
xor
xor
std
out
aam
mov
shrb
and
mov
push
fisubrs
rcrl
cmpsb
sarl
sbb
and
popa
std
fisubrs
pop
mov
shlb
in
inc
add
sbbb
repnz
mov
jge
adc
jo
or
sbb
mov
cltd
aam
dec
and
jecxz
pop
jns
fnstcw
push
fstpt
fwait
push
clc
lret
das
cmpsl
mov
xchg
dec
mov
js
cmpsl
aad
mov
dec
add
dec
inc
repnz
ja
pop
into
ret
fsubrl
cmp
cmpsl
add
insl
std
out
mov
push
lahf
mov
stos
iret
das
add
pop
mov
dec
sub
dec
int3
cmp
imul
dec
loop
cmp
or
fnsave
adc
pop
jns
stos
testb
ss
test
sbb
sub
fiaddl
adc
cmp
add
mov
xlat
stos
fsub
ja
or
lds
int
inc
jmp
out
sbb
inc
mov
repz
jle
in
or
std
add
mov
mov
jnp
pushf
daa
testb
daa
xchg
fsts
sub
xor
stos
fstpl
fs
pop
and
movsl
fldenv
or
add
movsl
and
mov
sbb
adc
pop
pop
shlb
push
push
cmp
cmpb
nopl
push
out
stc
mov
loope
push
cwtl
dec
adc
sub
dec
cmc
push
stc
and
dec
sub
dec
imul
sarl
mov
scas
fnstcw
jle
mov
mov
mov
das
pop
rcl
jg
fnsave
xor
ljmp
jp
inc
cli
ljmp
mov
fnstsw
mov
xchg
mov
pop
push
outsb
test
ret
lcall
and
push
cmpsl
sub
xlat
loop
repnz
fmul
insl
int3
sub
xchg
mov
fwait
and
ret
cli
mov
pop
rorb
add
fstpt
and
xor
ljmp
and
inc
push
sub
popa
and
push
fcmovu
repnz
push
hlt
hlt
mov
dec
mov
cs
ljmp
cmp
push
lret
rcl
pop
lret
sar
inc
xor
pusha
hlt
test
jnp
mov
cli
add
call
adc
call
nop
dec
add
clc
lret
dec
jge
or
cmp
lds
mov
sbb
jnp
in
pusha
push
rclb
adc
movsl
jge
lret
cmp
popf
cmp
aad
int
in
ror
jecxz
cmp
call
lret
jno
push
mov
pop
ja
jns
mov
fidivs
mov
daa
dec
dec
add
cmc
add
cld
int3
dec
pop
cmp
rcl
push
rcl
into
or
mov
addr16
lcall
pop
mov
lcall
out
into
lret
pop
into
out
mov
adc
leave
int3
insl
mov
push
mov
outsl
mov
shl
test
push
inc
mov
lret
test
mov
ret
inc
cli
out
add
loopne
lock
mov
movsl
sbb
repnz
out
shll
cmc
movsl
movsl
fisubrs
movsb
and
das
push
dec
jmp
stos
add
pop
mov
in
fadds
jl
fnsave
stos
jae
sbb
pop
fimuls
test
xor
rclb
cld
dec
inc
out
fsubrs
cmc
mov
fidivrl
cs
call
and
in
fisttps
addl
std
in
sbb
and
add
insl
dec
xchg
dec
addb
ljmp
push
fsubr
in
int3
ja
push
std
jno
xchg
das
jg
or
loopne
into
mov
pop
push
add
adc
cs
shlb
das
cli
dec
xchg
filds
jne
cwtl
dec
ret
sbb
jmp
push
int
sub
mov
fs
test
push
cmp
push
clc
dec
adc
ja
fldenv
xor
jle
in
pop
loopne
and
hlt
in
shrl
push
sbb
insl
divb
mov
jmp
or
mov
mov
push
fwait
cmpsl
or
cmpb
js
sbb
roll
sbb
rcrb
sbb
dec
and
lock
mov
inc
pushf
or
cmpsb
or
mov
ffree
add
lahf
push
add
inc
cmp
or
inc
cmp
pop
cmp
add
int3
cmc
popf
insl
cmp
shl
lret
es
pop
mov
dec
out
push
test
sbbb
cli
dec
jae
mov
aam
jbe
inc
push
push
push
push
pop
iret
inc
add
cld
fmull
lret
inc
imulb
ljmp
insl
addl
fsubrl
adc
pop
rorl
xchg
cmpsb
jmp
lods
jmp
mov
in
fcoms
xchg
roll
add
movsl
daa
adc
sub
adc
fwait
xchg
pop
hlt
mov
cmpl
fnstsw
addr16
in
mov
mov
cmpsl
jecxz
jbe
sbb
mov
into
cwtl
in
cmpsl
stos
mov
sarl
cmp
add
aad
xlat
or
or
cmp
inc
shrl
das
sbb
stc
imulb
pop
imul
mov
mov
cmc
outsb
fwait
inc
lea
mov
push
lret
cmp
std
movsb
sub
or
pushf
xchg
filds
pushf
sub
push
cmp
mov
and
insl
mov
mov
ja
sub
je
aad
inc
cmc
ret
stc
sti
pop
add
push
jbe
mov
outsb
clc
sub
sarb
jmp
stos
in
xchg
insb
out
jg
pop
sbb
cmpsb
insl
fmull
gs
sub
lret
loope
cmc
adc
adc
and
stc
fs
adc
add
mov
cld
cli
mov
jno
xchg
xchg
popf
inc
jo
jge
xchg
js
mov
dec
mov
dec
push
in
loop
out
sbb
xchg
test
aas
fsubrs
jle
mov
sbb
rorb
imul
push
inc
shr
pop
mov
xchg
mov
fwait
mov
daa
int
mov
in
mov
jbe
cmc
jb
pop
outsl
in
movsl
mov
gs
push
jne
repnz
or
cwtl
mov
cmc
adc
movsb
mov
pushf
loop
call
aam
ss
iret
push
xchg
mov
mov
test
sahf
mov
mov
add
push
and
sbb
sbb
test
dec
ljmp
fmulp
outsb
inc
jge
out
push
pop
fldenv
push
sbb
movsl
leave
mov
hlt
fs
inc
xor
pop
sub
dec
xor
pop
mov
data16
or
mov
sub
pop
and
test
mov
aad
repnz
and
mov
aas
cmpsl
and
in
xor
or
outsl
add
dec
mov
adc
test
pop
repz
pushf
iret
mov
xchg
scas
in
jle
or
or
icebp
inc
cmp
jl
lahf
mov
imul
lret
xor
das
pop
fsubl
cltd
xor
cmc
jg
cld
jns
int
test
sbb
inc
jg
aas
pop
mov
and
jmp
pushf
jg
push
mov
xchg
ficompl
adc
fs
mov
pusha
iret
loope
int
sbb
mov
ficomps
fcoml
repnz
fists
imul
mulb
cli
sbb
and
push
mov
pop
push
jb
pusha
jl
in
fs
sub
push
scas
cmpsl
add
jecxz
call
push
fldcw
fbld
rorl
adc
push
pop
push
add
push
int3
lea
mov
popf
fcmovbe
pusha
mov
nop
popa
in
mov
fbld
mov
cli
push
jae
and
mov
int
xchg
shr
sub
ss
sti
xchg
push
dec
insb
push
push
xlat
push
pop
mov
iret
das
sbb
ljmp
push
mov
and
pop
push
mov
fstps
adc
sbb
mov
mov
sarl
push
cmpsl
mov
loope
mov
or
push
clc
dec
scas
jns
out
push
sbb
cmpsl
mov
lods
fcompl
ja
subb
scas
stc
shl
push
pop
out
lods
dec
or
test
jnp
in
or
mov
popf
sbb
or
cmpsl
arpl
cmp
cmp
int3
dec
insl
xor
jmp
fwait
sbb
fldpi
mov
add
and
jae
or
adc
cmp
mov
add
lods
cmc
aaa
cs
push
ss
cli
xor
add
mov
jge
js
dec
push
in
subl
sub
dec
mov
mov
es
outsl
lds
paddd
dec
mov
rol
dec
xchg
sbb
mov
cmp
decb
inc
or
jmp
push
mov
arpl
cmp
xchg
test
icebp
insb
movb
pop
iret
into
in
in
aad
pop
mov
mov
into
hlt
push
mov
into
xchg
push
icebp
iret
dec
pushf
lret
add
jecxz
pop
add
mov
dec
ljmp
fcmovnbe
psubsw
fcompl
push
test
in
lret
ret
jne
push
addr16
mov
lock
jae
inc
lcall
test
or
dec
mov
fisubs
jle
sbbb
pusha
xchg
jbe
mov
jle
testb
lea
pop
jg
leave
inc
mov
fmuls
mov
inc
sbb
mov
mov
imul
xchg
mov
fmuls
adc
jle
pusha
push
cmc
popf
cmp
mov
cmc
xlat
in
fnstcw
fdiv
out
scas
push
neg
jg
repz
icebp
add
cmp
push
and
jmp
adc
scas
lcall
das
icebp
fisubrl
cmc
or
fstps
cld
mov
jno
das
lahf
jmp
hlt
push
xchg
fnsave
mov
out
xlat
or
cmc
sti
add
lods
mov
jb
xchg
sub
dec
adc
mov
push
cmc
dec
inc
jbe
stc
xchg
test
xor
test
jmp
loope
jae
in
push
jle
mov
sti
test
mov
sarl
mov
lods
pop
dec
mov
push
jge
ret
fidivrs
mov
mov
test
dec
inc
xchg
lds
mov
mov
or
mov
jo
push
push
fs
scas
fs
loopne
fxam
cltd
or
dec
inc
pusha
fcomi
loopne
xchg
arpl
pop
iret
int
test
je
ret
sbb
xchg
ja
aad
std
mov
push
clc
test
ret
xchg
xor
je
fmull
mov
sbb
in
data16
xor
jbe
shl
push
out
ficompl
lea
jo
daa
dec
mov
fistps
les
pop
fcompl
je
test
fnstsw
fcomip
lods
cmc
loopne
cld
filds
adc
outsl
jbe
push
jl
cld
daa
fstps
pop
ss
lahf
in
stos
push
sbb
adc
out
int
aam
or
std
aad
cmc
add
cmc
pop
pop
mov
pop
sti
add
or
lret
mov
imul
and
pop
or
lahf
or
mov
imul
xchg
pop
mov
push
cmp
paddq
or
jne
repnz
addr16
push
fld1
and
sbbl
dec
pop
rcl
loope
in
in
sbb
mov
mov
xchg
in
in
scas
sahf
add
sahf
pop
push
ficompl
fsubl
ljmp
scas
loopne
sahf
cmp
mov
inc
sub
outsl
rcll
aas
testb
mov
fdivrp
jns
imul
in
mov
fucomi
adc
or
popa
and
lock
sbb
mov
mov
mov
dec
sti
das
popa
jl
dec
rcr
dec
xchg
sbb
mov
mov
dec
sbb
dec
popf
lock
mov
sbb
cmp
sar
fidivrs
xchg
add
pop
pusha
cmp
pop
add
mov
out
sbb
inc
mov
add
sub
xchg
add
cmpsl
or
cmc
mov
mov
and
mulps
pop
cmp
cmpsl
xor
add
sti
loop
xchg
add
xchg
inc
xlat
insl
pushf
std
pop
das
shll
shll
add
pop
cmpsb
sbb
jmp
filds
insb
mov
stos
dec
adc
fs
push
imul
mov
xor
loope
hlt
test
pop
sub
addb
adc
push
dec
fisttpll
testl
sbb
inc
xor
mov
cmpsb
mov
ss
push
sbb
fidivrs
in
insl
pop
fimull
add
fcompl
pop
adc
sub
mov
dec
mov
pop
or
fists
mov
push
repz
scas
cli
cmp
popa
mov
jg
sti
loope
pop
repnz
cmpsl
les
outsl
std
mov
in
lret
jb
and
loopne
icebp
mov
sub
ljmp
imul
jmp
cs
cmp
mov
push
fs
in
and
push
mov
sub
leave
adc
adc
dec
insl
imul
aaa
test
inc
dec
outsl
cmp
in
lret
adc
pop
loopne
in
dec
xor
sahf
cmp
mov
jo
sbb
call
cltd
fs
inc
xchg
and
xchg
pop
push
pop
pushf
mov
mov
in
addr16
repnz
fbstp
inc
cmc
xor
roll
mov
mov
call
lea
aaa
aad
cs
sbb
xchg
es
in
pop
mov
mov
add
pushf
nop
sub
sbb
inc
jno
jbe
mov
ljmp
xlat
xchg
sbb
stos
sti
negl
inc
lret
shll
cmc
sbbb
mov
or
fld
std
sub
stc
mov
das
lds
leave
lret
sahf
shrb
or
push
xchg
pushf
xchg
int
ss
repnz
loopne
test
mov
and
daa
rcl
push
in
or
mov
pop
inc
or
lret
adc
aas
jo
out
and
jne
mov
xchg
adc
lcall
mov
iret
xchg
and
mov
or
iret
push
sbb
mov
fscale
inc
enter
lret
daa
inc
jg
lret
inc
mov
push
mov
fcmovnb
loopne
dec
add
nop
jns
jmp
pop
inc
ret
xchg
xchg
clc
gs
into
cld
fnsave
and
popf
mov
cmpsb
sahf
xor
daa
loop
cmpsl
data16
inc
std
push
mov
imul
inc
dec
int3
movsb
push
repnz
popf
hlt
popf
lods
inc
nop
les
shll
inc
mov
xlat
jge
push
sub
ret
xchg
sti
repz
pop
ja
sub
xchg
adc
pop
hlt
test
pop
pop
sbb
adc
mov
iret
fistl
movsb
add
push
add
repnz
cmp
inc
mov
add
jg
sub
push
loopne
shlb
add
cmpsl
cmp
add
dec
sarb
das
fs
mov
dec
aaa
mov
cmpsl
popf
pop
jno
fstpt
je
mov
cmp
jg
or
shll
test
mov
les
negl
or
add
inc
xor
and
xchg
xor
mov
sub
sbb
inc
mov
or
aad
sbb
mov
std
sub
dec
sbbl
test
pushf
push
xchg
inc
movsb
iret
push
call
sbb
pop
cmp
pushf
fs
dec
jle
enter
enter
mov
test
mov
mov
inc
cmc
dec
xchg
pop
repz
jno
shl
pop
imul
loop
xchg
and
pop
xchg
mov
cmpsl
inc
jge
pop
int
jecxz
mov
enter
out
mov
dec
push
mov
div
clc
loop
fstpt
add
mov
mov
adc
mov
sbb
sub
icebp
or
bound
imul
adc
push
test
mov
mov
mov
pop
mov
cmp
mov
cmp
in
sbb
rcrl
out
xlat
mov
lret
mov
int
pop
cmc
add
fs
repnz
lcall
adc
dec
mov
cmp
xor
fistps
fidivrl
add
movsl
fsubp
in
inc
jmp
cmc
push
shrl
in
sub
fisubrl
cltd
sbb
sarl
gs
cld
leave
lods
cmpl
lcall
add
popf
outsl
flds
push
int
out
mov
loope
inc
movsl
sahf
mov
add
call
mov
mov
sbb
aam
out
popf
int
addr16
pop
lret
out
incl
jp
xchg
lret
jne
fnstsw
filds
cmp
xorl
imul
jo
movsb
test
sbb
test
gs
in
loop
or
sub
mov
lahf
in
movsl
rcl
and
dec
int
mov
vaddsubps
in
in
std
sub
mov
mov
pop
cmpsl
push
dec
xchg
fstpl
add
popf
in
cmp
int
dec
pop
cld
test
mov
rcr
ficomps
test
rcll
pop
in
leave
ss
fs
inc
hlt
imul
mov
inc
addr16
mov
leave
jecxz
fs
addb
push
push
fbld
sbb
jge
insl
shrl
fisttpll
push
and
cld
aaa
xchg
fwait
and
fnsave
mov
shll
sub
in
mov
sub
test
or
inc
fistpl
pop
cmpsl
std
pop
dec
or
icebp
pop
sub
jbe
jmp
fsubr
lcall
add
movsl
mov
out
fdivrl
sbb
jo
xchg
cli
sub
xor
int
ror
loop
cs
iret
cmc
aad
adc
pop
aad
or
xor
jl
ds
test
in
icebp
push
out
lea
mov
ffreep
fstps
aad
cmc
std
in
pop
cmc
fisubrs
inc
add
mov
mov
mov
add
out
sub
jbe
xchg
loop
arpl
pop
pushf
mov
sbb
xchg
insl
pop
pushf
push
mov
mov
out
imul
add
jmp
les
cmpsb
adc
sbb
add
mov
inc
les
inc
and
sahf
cltd
icebp
out
add
xor
out
xchg
add
fdivp
mov
ficoml
loope
in
outsl
cmpsl
mov
mov
ss
in
add
movsb
sub
push
jne
mov
aas
mov
inc
aad
add
loope
bound
mov
stc
fs
push
xor
cmc
gs
lcall
or
ss
aam
rorl
push
sbb
cmp
lds
pop
inc
mov
jge
test
jg
cmp
add
test
imul
add
push
pop
sub
in
into
jle
dec
imul
cld
adc
pop
lock
cmp
lea
movsl
pop
sbb
sbb
cmpsb
cli
dec
add
test
out
imul
out
pop
lds
jge
mov
push
les
and
add
loop
in
addr16
bound
test
xor
mov
dec
loopne
jge
into
call
sbb
mov
jge
mov
jnp
xchg
pop
and
xchg
mov
pusha
bound
cmp
mov
es
fisubs
mov
push
jnp
mov
and
mov
cmp
inc
mov
pop
imul
add
adc
cmpsb
lahf
sub
out
add
mov
loope
mov
push
adc
pop
mov
pop
add
les
inc
mov
lods
mov
push
cmc
and
add
lds
rcl
pop
mov
loop
cmc
xchg
test
add
mov
testl
dec
dec
movsl
dec
push
fcmovne
xor
hlt
sbb
fistl
into
pop
das
add
in
pop
loop
inc
movsl
sbb
lret
add
push
in
cmpsb
aam
insb
or
cmc
mov
lcall
rol
pushf
popl
rcr
sbb
jo
mov
ds
addl
repnz
sbb
ss
fimull
push
cmp
cmc
push
pop
inc
fsts
notl
pop
lods
popf
dec
call
or
icebp
enter
out
in
and
inc
or
repnz
rorb
jp
inc
in
fmuls
mov
push
cli
insb
mov
sbb
imul
or
lahf
std
in
call
int
loopne
shll
push
sbb
cmc
movsl
std
xchg
mov
loopne
inc
bound
push
sub
mov
mov
fmuls
pop
les
pop
popf
pop
sbb
mov
stos
mov
pop
aam
scas
fnsave
loopne
cmp
stos
lea
cmpsb
lret
sub
aad
hlt
push
lock
sub
sub
jl
out
and
inc
jecxz
or
or
std
cld
gs
mov
mov
push
pop
jecxz
iret
cmpsb
mov
or
sub
shlb
iret
jns
sub
test
mov
movb
sub
inc
addr16
mov
in
fisttpl
mov
fstps
inc
std
testl
shlb
sbb
cmp
repz
arpl
rcll
mov
push
pop
jne
rcrl
mov
push
mov
mov
sub
cli
cmp
test
cmp
and
push
mov
pop
pop
sbb
pop
addr16
fs
hlt
cmp
push
cmc
dec
push
movsl
cmc
sti
push
mov
adc
fisttps
popf
lea
imul
jge
test
int
aad
in
sub
in
lea
rcrl
leave
mov
mov
icebp
push
movsl
jecxz
sub
in
adc
mov
rcr
sub
cmp
push
and
rcr
inc
aam
cmpsl
mov
pop
mov
mov
mov
test
bound
pop
push
int3
cmp
jg
mov
mov
mull
pop
lds
out
les
jmp
mov
mov
arpl
ret
int3
pop
cld
int
xchg
add
push
fsubp
enter
push
xor
fcomip
cltd
aaa
add
repnz
mov
aad
enter
movsl
fxch
mov
pop
inc
shll
cmp
dec
shl
dec
ss
jmp
lds
orb
movsb
dec
hlt
mov
sbb
jmp
lret
outsb
fisttpl
std
cwtl
fisubs
pop
sbb
imul
jns
mov
clc
std
xor
cmp
imul
hlt
cmc
xchg
int3
pop
gs
mov
loope
loop
inc
sub
fldl
dec
cmp
sub
cmp
or
jge
pop
nop
mov
xor
and
fbstp
in
add
test
int
mov
and
sbb
jg
jns
jg
test
and
imul
jns
shl
outsl
orl
gs
insb
sub
das
dec
mov
idivb
jmp
sahf
fnsave
incl
add
mov
add
in
aaa
sbb
dec
das
jl
jmp
iret
xor
cmc
mov
inc
sbb
mov
std
aad
or
ja
or
movsl
sbb
jmp
lods
arpl
pushf
mov
ds
popa
ljmp
into
lret
lret
ds
loop
sbb
jno
mov
jb
adc
aas
mov
inc
push
lds
les
cmpsl
jns
sbb
mov
stc
cmp
or
arpl
cmp
mov
push
cwtl
imulb
jmp
loope
adc
cmpsl
cld
mov
mov
movsl
fnsave
mov
stos
cmp
scas
test
jle
rolb
xor
sub
fcmovnb
xchg
fmuls
test
pop
sahf
or
mov
push
xor
fistpl
lds
movsl
nop
arpl
cmovge
lock
dec
mov
sbb
cmp
xor
lock
mov
pslld
jp
sbb
mov
int3
push
icebp
inc
insb
dec
fsubl
fcom
lcall
dec
leave
cmp
inc
mov
mov
dec
popa
or
sbb
lods
fdivrs
into
xchg
movsl
sub
jbe
loop
push
adc
or
lahf
in
sbbb
stc
mov
inc
sub
xchg
movsl
sti
fisubs
bound
mov
inc
shrl
fst
fsqrt
call
cwtl
ds
adc
sub
sbb
lds
and
sub
sub
inc
fs
ficompl
fsubl
stc
cltd
fsubrs
mov
xchg
pop
bound
fldt
ljmp
push
add
sbb
xor
dec
test
in
or
fwait
cmp
aam
dec
pusha
nop
shll
mov
stos
sub
xchg
xchg
xchg
xor
mov
ret
loopne
out
jp
mov
mov
lret
inc
icebp
int
sub
jp
xlat
fstps
add
in
out
in
into
and
in
int
popf
call
imul
pop
adc
stc
jecxz
aad
les
xchg
cmp
xchg
aad
add
shrb
rolb
and
into
jle
stos
mov
and
mov
call
cmp
das
pop
lcall
aaa
icebp
test
ss
push
mov
sbb
fucomp
hlt
sub
inc
pushf
cmp
jmp
movsl
sbb
fisttpl
ja
add
xor
movsl
dec
mov
int3
lcall
std
mov
pop
aas
fcoml
jnp
jmp
rcl
popa
or
lret
push
add
push
add
je
push
xchg
xlat
sbb
lahf
iret
lcall
sub
test
mov
or
add
popa
cs
shrl
or
rcr
lret
in
push
imul
out
loopne
repnz
jmp
iret
iret
cmp
push
mov
inc
sub
repnz
jae
popf
pop
mov
aaa
adc
xor
push
addr16
cli
mov
xchg
cltd
sub
fwait
push
and
cmc
imul
pop
lods
mov
ret
cmovle
dec
add
or
rcrb
mov
mov
inc
sbb
in
jmp
xor
mov
dec
push
pop
loopne
loope
inc
adc
fcompl
shll
adc
add
inc
hlt
and
pop
lods
sbb
inc
dec
ficoml
stc
cmpsb
fidivrl
lret
repnz
and
jae
mov
inc
inc
sbb
cmpsb
or
adc
lret
fcmovnu
mov
mov
xchg
enter
fstps
mov
pop
add
mov
cs
outsb
lret
popf
int3
push
mov
lret
and
sahf
lds
xchg
fildl
push
jg
xchg
test
fs
gs
dec
sub
inc
enter
in
push
lret
testl
or
xchg
mov
inc
push
leave
lea
sub
xlat
lahf
stc
invlpg
xchg
pusha
xor
xchg
dec
into
add
in
and
mov
out
sbb
fisubrl
andl
rolb
fwait
movsl
movsl
pop
mov
frstor
popa
aaa
mov
sub
shrl
pop
or
bound
int3
es
adc
jo
sub
push
or
jmp
inc
add
movsl
and
push
fnstcw
mov
fnsave
push
adc
lds
repz
xor
fs
fcmovne
inc
es
xchg
dec
movsb
mov
int3
sbb
fidivl
jmp
pushf
mov
fptan
cmpsl
divb
and
daa
inc
cmp
fisubl
test
xchg
lret
mov
lret
inc
scas
inc
inc
outsb
mov
lcall
in
mov
mov
cmc
xlat
shll
mov
dec
and
mov
cmp
inc
fisubrs
fmul
inc
sub
ja
popf
jmp
mov
sbb
stos
hlt
test
cmp
imul
sub
dec
mov
sub
rcl
mov
mov
out
push
ja
jbe
xchg
jae
cs
lock
rorl
aad
pop
pop
mov
sub
ret
int
inc
pop
cmp
sub
mov
pop
xchg
xor
sti
shrb
pop
lret
cld
sub
lods
xchg
cltd
ficompl
shl
or
pop
mov
fs
cmp
repnz
scas
rolb
fdivp
push
pop
mov
inc
popf
pop
enter
in
int
sar
lahf
push
xchg
stos
hlt
int
add
mov
fldt
aad
or
and
jmp
pop
loop
pop
les
adc
mulb
jb
pop
sbb
push
and
dec
dec
xchg
cmp
xor
insb
addr16
mov
sub
lret
sbb
cld
clc
pop
inc
push
ror
dec
and
jnp
or
stc
shl
mov
sbb
fistpl
mov
sbb
cld
aaa
add
lret
aas
push
das
movsl
aad
cltd
jno
std
pop
jg
aaa
imul
sub
cmc
pop
cmp
mov
lds
mov
xor
mov
popa
jae
add
jo
aad
icebp
pushf
or
ljmp
out
add
push
enter
repnz
xchg
sarl
sub
incl
mov
ja
adc
jnp
stc
rcrb
cmp
inc
test
scas
cmp
inc
or
jl
jne
push
jbe
and
push
arpl
imul
or
lret
sahf
aam
rorl
filds
push
std
stos
outsb
gs
xchg
pop
dec
in
lret
leave
popa
cmc
mov
addr16
fwait
pop
mov
fiaddl
mov
imul
or
dec
iret
in
out
mov
stos
xchg
and
into
pop
mov
ret
pop
mov
adc
cmp
mov
inc
pop
dec
add
fcomip
and
and
sti
fnstenv
icebp
inc
cmpsl
adc
fwait
call
cmc
hlt
or
sahf
push
sbb
and
cmp
pop
sarl
xlat
nop
adc
sbb
sbb
sub
sahf
in
sbb
arpl
or
ret
adc
out
dec
pop
fldt
cmpsl
subl
sarl
mov
hlt
sbb
sti
es
adc
adc
inc
cmc
in
mov
dec
jns
loopne
imul
das
pushf
push
jl
pushl
mov
mov
pop
dec
cld
inc
pop
sbb
sub
ljmp
les
outsl
pop
inc
cmp
nop
add
popf
popa
ror
pop
dec
das
push
bound
cltd
add
outsl
loop
fsin
pop
push
or
loopne
repnz
xchg
jo
jnp
nop
push
sahf
mov
inc
inc
mov
inc
int3
cmc
test
xchg
sahf
lcall
loopne
out
out
mov
fsubl
outsl
jnp
repnz
and
ja
push
jecxz
inc
xor
std
test
and
mov
cmp
lea
mov
or
dec
shl
inc
loope
int3
popa
leave
lret
imul
fistps
imul
test
xchg
jne
rol
cmc
and
jge
xor
out
fldl
mov
lret
ficompl
rorb
pop
popl
repz
cmp
daa
sti
fisttps
inc
xor
stos
jns
ret
or
js
xor
lcall
push
aas
pop
mov
inc
lock
add
dec
dec
sarb
loopne
hlt
pop
call
mov
push
outsl
cltd
fs
loop
lods
sub
push
mov
jp
jle
jecxz
inc
loop
loopne
mov
dec
imul
jmp
and
loop
movsl
mov
mov
cmp
icebp
mov
fists
pop
xchg
insb
cld
popf
mov
loop
stc
insb
daa
mov
cmp
outsb
jg
leave
sub
lods
jmp
pop
test
in
sub
sbb
or
dec
sub
test
cmp
insl
enter
fistps
mov
xor
imull
imul
push
out
push
imul
fldcw
xchg
gs
and
fnsave
lret
sub
dec
in
in
fisttps
in
jbe
mov
fimuls
jae
in
lcall
std
xchg
bound
jmp
fs
mov
sub
mov
inc
xchg
dec
loop
aaa
fs
fsubs
add
into
xor
in
outsb
push
aam
sub
xchg
and
icebp
and
mov
add
iret
enter
push
je
adc
fstp
jge
xchg
cmp
xchg
xor
lea
pcmpgtb
mov
jnp
mov
or
mov
jl
inc
fmul
cmp
std
or
push
and
add
in
cmpsb
ja
cld
cld
int
pop
ret
fisubrl
lret
out
aad
jns
mov
xchg
aam
out
loop
out
repz
ss
push
in
jmp
inc
inc
push
mov
xchg
fsts
iret
movsl
fsts
jmp
mov
mov
lds
imul
jle
push
inc
jl
add
mov
das
icebp
pop
popa
pop
jle
cmp
push
aaa
mov
cmp
cwtl
hlt
mov
sbb
pop
push
lds
mov
rcl
aam
fld1
xor
cli
cmpsb
and
adc
popa
cmp
incl
or
or
xor
and
hlt
popa
rolb
stos
leave
mov
sub
sbb
sbb
cmc
cmp
cmp
pop
sub
jecxz
in
inc
pushf
daa
cmp
mov
enter
and
add
in
lcall
daa
imul
mov
fisttpl
sbb
stc
imul
imul
mov
mov
cmc
std
xchg
push
aam
icebp
lea
or
test
cld
int
fadds
sbb
pop
cld
xchg
push
jne
pusha
mov
outsb
xchg
ficompl
stos
pusha
fldl
sti
pop
xchg
xchg
les
sub
in
jl
popf
shlb
push
push
in
ret
mov
cld
sbb
pop
sbb
fs
pop
push
out
or
mov
and
clc
mov
pop
cmpb
push
cmp
pop
fwait
push
pop
lret
sub
or
and
insl
test
and
in
cmc
fst
insl
std
push
and
popf
push
test
movsl
rcrl
aad
shl
xchg
sub
pop
cld
mov
mov
pusha
rclb
sti
sbb
fwait
sti
rclb
jecxz
lods
jge
xchg
inc
sti
sbb
aam
into
sbb
xor
mov
fnstsw
pop
ficoml
out
in
int
add
aad
or
mov
fsubrl
fistl
leave
in
sub
addr16
lcall
and
dec
jmp
fsubr
iret
add
pop
push
movsl
cld
rcrl
and
out
std
stos
rcll
sbbb
adc
jne
movsl
test
imul
dec
xchg
int
inc
push
lods
sbb
ja
rorl
mov
dec
or
arpl
lea
shlb
in
xchg
insb
pop
out
icebp
cmp
pushf
or
imul
or
or
jns
dec
push
ja
and
or
push
jns
mov
ret
mov
xor
call
jbe
pushf
test
pop
sti
mov
fidivl
ss
mov
pop
rol
mov
cmp
mov
js
cmpsb
pop
es
xchg
and
and
and
and
sbb
loope
mov
add
add
psubsb
insl
cmp
ss
popa
dec
aas
enter
sub
repnz
jecxz
mov
iret
mov
popa
mov
push
in
outsb
gs
add
aad
xchg
test
and
das
cmpsl
sub
xchg
sbb
inc
fistpl
faddl
or
sub
aas
and
and
xor
in
popa
ret
sahf
cld
cli
add
ret
pop
xchg
or
imul
fs
in
pop
push
loop
xor
movsl
imul
xlat
add
pop
test
xchg
shrl
adc
int3
out
xchg
test
test
pop
data16
in
sbb
aam
pop
and
and
pop
fsubrs
aaa
cltd
mov
mov
pop
xor
jl
in
fdivrl
add
aaa
outsl
pop
pop
inc
mov
add
mov
mov
jae
xor
dec
xor
xor
mov
lahf
xchg
mov
xor
cs
mov
pop
mov
mov
mov
and
push
imul
push
xor
in
sbb
adc
cmpsl
test
add
sahf
std
mov
repz
xlat
pop
sbb
loope
sbb
xchg
test
xor
in
sbb
mov
jecxz
insl
cmp
xchg
sub
inc
out
lcall
shl
jp
lea
pop
push
or
mov
inc
mov
lods
mov
mov
pusha
shl
jbe
imul
and
mov
push
imul
frstor
fdivr
pop
cs
aad
xlat
push
jns
iret
insl
arpl
gs
sub
jmp
fnstsw
movsl
je
aam
pop
mov
sbb
push
xchg
iret
out
jb
cmp
cmp
adc
push
mov
dec
shl
std
pop
fildll
aaa
push
mov
into
cmp
andl
jnp
sbb
mov
xchg
sbb
lea
or
rol
inc
loop
loop
mov
cmp
inc
loop
xor
xor
mov
push
add
pop
loopne
inc
sbb
adc
push
ret
ffree
lret
pop
mov
out
jno
loop
pop
aas
mov
and
pop
std
mov
jecxz
aad
sbb
cmpsb
test
movsl
movsb
aad
repz
lds
in
call
fildl
shrb
lret
inc
int
add
mov
pop
pop
mov
int
sbb
jae
in
cwtl
shll
mov
cmp
cli
fmuls
mov
sub
adc
pop
sub
sti
cmp
repz
stos
lret
jl
sub
ret
sub
ss
inc
push
jge
mov
leave
subl
mov
dec
pusha
pop
or
cmp
fiadds
dec
int
popf
push
hlt
push
movsl
test
mov
fisttpl
imul
cwtl
xchg
sub
sbb
add
mov
sbb
lahf
movsl
jl
mov
adc
mov
mov
daa
sbb
fs
leave
mov
pop
loopne
mov
jb
ss
ret
lret
loopne
inc
test
or
inc
jno
loope
loope
outsb
xchg
fucomi
pop
push
ljmp
nop
adcl
incb
int3
scas
popf
add
fistl
imul
inc
fwait
std
jns
sti
clc
pop
add
mov
xchg
dec
fcmove
cmp
sub
adc
push
mov
cmp
outsl
aam
out
cli
xor
loope
mov
pop
cmp
dec
inc
aad
push
dec
mov
mov
dec
fstpt
mov
lea
pusha
fucomip
stc
jnp
add
fidivs
jne
ljmp
in
test
rcll
movsl
jne
cltd
dec
int
pop
pop
cld
shrl
popf
mov
jns
sbb
fnsave
jecxz
inc
in
jnp
pop
jecxz
sbb
insl
movsl
jp
sbb
pusha
mov
add
mov
mov
cli
cmp
cmp
mov
fsub
fs
fcmovnu
in
sbb
cmp
xchg
enter
outsb
jl
jg
jmp
pop
loope
sahf
imul
fistps
and
mov
dec
lock
xchg
mov
std
cmp
stos
dec
mov
gs
imul
jecxz
fldt
cmp
mov
pushf
movsb
add
das
mov
jno
add
test
jmp
xor
push
sti
out
lods
or
shr
dec
insl
xchg
pop
xor
loopne
stos
cs
clc
or
pop
mov
mov
outsl
push
pusha
xlat
daa
jno
inc
lds
movsl
sub
test
lret
mov
rorb
xchg
jg
popf
sub
jle
mov
fwait
dec
in
or
fisttpl
push
inc
jae
adc
cld
lret
mov
cmp
cmc
or
adc
sbb
in
and
sbb
dec
dec
ficomps
sub
movsl
pop
test
jp
in
jge
or
mov
inc
fs
cmpsb
pushl
clc
pop
js
cwtl
jle
in
sti
mov
or
roll
and
std
outsl
test
fdivrl
pop
pop
nop
int
pusha
push
cmc
in
xchg
or
jge
mov
cmp
jmp
cmp
sbb
sub
jb
add
pop
std
mov
out
pop
mov
inc
fists
in
mov
ss
jmp
sbb
xchg
and
or
pop
xchg
sbb
and
cmp
outsb
mov
sbbb
dec
insl
or
jg
cld
jge
inc
push
add
or
addb
cmpsl
lds
and
pop
mov
sbb
push
mov
ja
in
xchg
shrl
aam
jmp
cmpsl
jp
cmp
mov
lahf
in
xor
repz
jecxz
dec
push
and
mov
cmp
bound
pop
cmc
push
std
hlt
pushf
aam
push
filds
int
mov
ficompl
push
sbb
sub
push
popa
add
int
sub
mov
mov
cld
data16
lret
mov
iret
repnz
in
in
in
cmc
mov
add
push
bound
movsl
inc
out
push
dec
mov
fistpll
imul
push
mov
sarl
push
mov
int
rcll
mov
pop
mov
add
fsincos
and
fcompl
xor
pop
mov
fld
arpl
jmp
cltd
bound
mov
add
sub
cmp
mov
bound
incl
push
test
cmpsl
mov
shrl
fwait
iret
cmpsb
ret
jmp
push
stc
fcompl
push
jmp
pushf
sbb
cmpsb
mov
mov
mov
push
mov
fs
cmp
movsl
mov
sbb
inc
jmp
stc
sbb
rcll
mov
and
dec
xor
dec
lret
int
inc
ret
push
mov
xchg
addr16
pop
add
stos
xchg
push
call
sbb
inc
stc
inc
pop
out
insb
out
sub
imul
cli
lahf
andb
std
mov
and
icebp
sbb
xchg
repz
jnp
add
mov
inc
push
pop
add
cmp
lcall
add
arpl
into
push
ret
mov
pushf
imul
inc
or
pop
cmp
repnz
sbb
cmc
jo
lahf
sbb
add
lret
sarl
pushf
aaa
dec
xchg
sub
cmp
xchg
push
lahf
frstor
int3
lret
movsl
aad
flds
pop
lret
xchg
or
xor
sub
lret
mov
adc
jmp
pop
xor
inc
lock
mov
add
xchg
cmp
pop
in
lret
or
jmp
fnstenv
jne
jmp
and
push
xchg
imulb
mov
mov
xor
fidivrs
negb
fildll
lea
jmp
mov
cltd
jl
jbe
mov
pop
fldenv
fcmovu
adc
repnz
test
out
in
mov
or
in
mov
xchg
cld
xor
mov
adc
rcrb
in
arpl
sub
xorl
mov
pop
std
push
roll
cli
popl
pop
ficoms
cmpsl
fsts
pop
or
mov
mov
fisttpll
mov
mov
xor
jmp
lret
call
in
lret
cld
loop
lret
jecxz
shl
sbb
sbb
int
in
shrl
cmc
sub
lret
sub
lahf
pushf
lcall
fidivs
cld
mov
outsl
insb
pop
aad
shl
fisubrs
in
out
dec
adc
ja
in
mov
cmp
pop
mov
leave
movsb
movsl
sbb
je
mov
add
test
imul
dec
rcr
mov
mov
fsubl
inc
mov
fpatan
pushf
imul
inc
in
mov
pop
in
iret
sub
pop
pop
sbb
addl
sub
sar
fdivs
scas
mov
xchg
pop
ja
mov
sub
dec
fdivp
inc
mov
cmpsb
ljmp
das
aam
cmc
inc
int
hlt
arpl
push
sarl
movsl
loop
jge
loopne
pop
jbe
repnz
fisttpl
pop
cmpsl
sti
imul
mov
inc
mov
sub
jecxz
mov
gs
mov
jns
mull
inc
dec
or
jge
inc
xchg
jns
xlat
popa
mov
xchg
ficoms
imul
in
cwtl
stos
arpl
mov
mov
daa
sbbl
das
sub
sub
xor
aas
outsb
std
inc
xchg
pop
cld
lods
aad
dec
jg
xor
cmpsb
aad
les
fsubrs
inc
pop
and
inc
add
test
aam
test
dec
into
ljmp
mov
popa
inc
jl
lea
cmc
rolb
testb
push
les
add
jmp
mov
dec
sbb
inc
or
shl
add
xor
int
imul
loop
xchg
mov
mov
iret
push
push
mov
jnp
jge
sbb
imul
xchg
sarl
nop
or
push
sbb
add
jp
gs
ja
shl
lods
in
pop
adc
mov
std
push
stc
lcall
cmp
rorb
ror
xchg
ret
loopne
das
pop
or
fsubl
shll
movsl
or
pop
jmp
dec
add
rcrb
dec
ja
jo
imul
adc
shlb
clc
cltd
and
ret
sub
dec
ss
cltd
fs
imul
sbb
inc
stos
gs
add
push
lods
jmp
or
dec
shl
push
movsl
jp
int3
jmp
scas
insb
push
xchg
mov
inc
pusha
js
rclb
in
adc
push
cmp
mov
adc
inc
lock
test
clc
mov
sbb
push
pop
rol
or
aad
mov
cmpsb
cs
lret
mov
pop
lea
and
push
aaa
pop
gs
jmp
add
adc
shlb
pop
cwtl
in
cmp
mov
mov
stc
pop
loop
loope
fcmovnbe
sbb
rcl
nop
lahf
roll
cmp
roll
xchg
ljmp
in
cltd
scas
pop
pusha
test
cmp
js
fcoml
pop
insl
jmp
push
nop
xchg
xchg
imul
push
xchg
shl
pop
jne
or
fstpl
mov
push
out
fstps
sub
sub
push
ret
out
std
popa
mov
push
insl
jmp
push
outsb
icebp
sbb
adc
xchg
push
sub
sbb
mov
push
xchg
add
out
in
fxtract
mov
gs
push
arpl
xor
xchg
or
xchg
fs
rcl
aam
lods
imul
xor
in
push
rol
pop
into
add
mov
push
icebp
arpl
sbb
outsb
add
pop
insl
aad
jo
pop
and
add
pop
imul
pop
mov
sbb
sbb
mov
ret
mov
inc
push
in
fucomi
mov
pusha
push
jmp
shlb
shll
and
ja
fwait
push
or
lret
cmpsl
add
aaa
xor
inc
adcb
decb
into
inc
nop
inc
or
jp
pop
mov
and
or
push
aad
jb
sbb
push
shrb
rcrl
into
repnz
add
loop
xchg
mov
mov
push
cs
xor
arpl
out
add
jecxz
push
outsl
das
roll
add
lods
sbb
add
sarb
les
in
pop
in
xlat
mov
inc
xor
and
aas
pusha
and
ljmp
inc
cmp
roll
rcrb
fcmovne
mov
push
out
pop
loop
add
mov
add
sti
hlt
sbb
xor
xor
and
fistps
out
jecxz
pop
sahf
inc
mov
add
push
pop
sbb
jo
mov
rorb
pop
ror
inc
inc
mov
repnz
pushf
pop
cmp
xchg
xchg
mov
lret
loop
push
in
in
jbe
pop
lock
psubusw
sub
imul
xchg
push
mov
lret
repz
leave
sub
gs
jo
in
dec
mov
hlt
stos
shrb
mov
fisubrl
xchg
loopne
movsl
icebp
jns
lock
mov
mov
or
inc
dec
cmp
push
pop
jns
mov
loop
cmp
stc
cmc
xchg
repz
shrb
jecxz
inc
mov
ljmp
xor
movsl
push
mov
add
sbb
movsl
mov
fldenv
jmp
jns
xchg
mov
or
jno
in
mov
sub
jo
jmp
int
or
mov
lret
push
xor
aad
daa
fisttps
les
das
popf
and
pop
dec
mov
in
cmp
lods
sar
je
dec
lock
xchg
int3
push
xchg
dec
xor
popf
push
std
hlt
sbb
clc
frstor
mov
mov
add
cld
rolb
out
ret
adc
sti
pop
shl
cs
jnp
fistpll
and
dec
mov
mov
cmpsl
repz
faddl
movsb
imul
jno
jl
in
pop
movsl
cmp
cmp
rolb
aad
scas
jo
test
jo
xchg
sub
cmp
enter
adc
fwait
push
leave
aam
dec
add
mov
push
sbb
arpl
xchg
popf
xlat
fcoms
lds
jae
mull
or
leave
mov
ljmp
or
arpl
push
pop
out
sbb
jne
scas
or
fdivl
mov
mov
push
xor
jl
lret
mov
frstor
cltd
jl
ret
stc
lds
or
insl
mov
sbb
leave
fstps
hlt
cmp
pop
lcall
pop
je
dec
pop
inc
ret
push
movsl
not
xchg
lea
cli
xor
fbld
add
fisttpl
push
hlt
sbb
insl
or
jb
add
cld
or
fwait
sarl
xchg
dec
add
sub
in
push
das
mov
out
pop
xchg
test
pop
push
lds
adc
cmc
das
shlb
jl
inc
cld
movl
imul
and
es
xchg
call
fnstenv
adc
aam
fildll
loope
mov
imul
mov
push
and
fistps
push
dec
int
adcl
mov
test
or
test
or
xchg
pop
mov
fabs
hlt
push
fcmovnu
cmp
mov
push
test
add
daa
stc
xchg
jo
sbb
stos
mov
push
dec
bound
ficompl
xor
stos
fwait
pusha
icebp
movsl
cli
fldl
pop
cmp
xlat
ss
jge
scas
fiaddl
dec
push
mov
call
aaa
cltd
jbe
arpl
aas
or
sahf
pop
mov
add
fiaddl
jbe
cmc
test
sub
in
push
ret
sbbl
cmpsl
jns
mov
loop
sahf
xor
sub
mov
pop
enter
stos
scas
xchg
lea
and
xchg
insl
cmc
fistl
fwait
les
leave
inc
std
and
aad
daa
mov
sub
cmc
gs
dec
in
ljmp
cmpb
inc
stos
xor
in
stos
jp
je
xchg
add
aad
fdivl
in
cmp
sub
ret
lock
test
packuswb
xchg
push
add
lods
cltd
ja
jg
push
xchg
ja
mov
call
fldl
mov
mov
and
int3
fs
fmuls
ja
pop
stos
and
in
pop
adc
call
popf
adc
xchg
aad
pop
mov
rorb
roll
popf
inc
pop
xor
mov
mov
test
sub
repnz
shrl
nop
fwait
pop
inc
sbb
test
or
les
ss
inc
in
xor
inc
pop
js
imul
and
xor
or
mov
xchg
je
push
cmp
jle
adc
pop
or
and
repnz
loope
pop
xor
add
push
aam
mov
and
push
adc
pop
adc
dec
movsl
dec
pop
in
nop
lahf
int
push
and
add
dec
movsb
je
cmpsb
movsl
cmp
sbb
aas
mov
mov
push
popf
incb
test
loope
test
lds
push
xchg
add
pop
sub
std
out
mov
mov
cltd
in
mov
nop
sub
mov
fisttpl
adc
jnp
lret
fs
lds
cwtl
aam
inc
mov
neg
mov
ljmp
test
fs
in
lods
and
in
out
mov
add
in
add
bound
push
sub
repnz
loope
push
out
dec
aad
and
mov
cmpsb
sub
sbb
ret
fisttpl
lret
xor
fcomps
mov
popa
call
add
add
sub
jecxz
push
outsl
add
stos
sub
cmpsl
das
push
in
mov
mov
fildl
pusha
mov
in
and
jle
cli
dec
mov
xchg
sbb
imul
movsl
adc
nop
jnp
mov
mov
sbb
push
sbb
imul
cld
xor
cmp
cwtl
jb
cmc
or
test
hlt
add
repz
fs
adc
aaa
jbe
push
repnz
xchg
inc
int
scas
shlb
fs
inc
and
jae
add
inc
xor
jmp
cmp
sub
xor
repnz
push
mov
int
setae
mov
inc
clc
movsl
dec
int3
mov
ret
sti
scas
int
out
fldenv
loopne
in
inc
in
in
fld
aad
aad
lds
out
pop
lods
lret
pop
cmp
cmp
ljmp
ja
add
cmp
pop
in
and
test
cmp
jo
fbld
cmp
mov
xor
or
mov
sbb
movsl
cli
mov
xchg
mov
out
mov
loope
xlat
add
in
or
lock
fmuls
int
aam
sbb
rclb
xor
cs
fimull
mov
pop
inc
cltd
push
pop
or
mov
insl
sti
pop
gs
or
mov
inc
cmpsl
lds
jae
js
xchg
or
mov
lret
lea
test
cmpsl
dec
cmp
push
dec
lret
ja
outsb
lret
lret
xchg
movsb
in
xchg
push
or
mov
pop
xchg
dec
jns
rcrl
xchg
clc
pop
mov
popf
lret
cli
in
mov
lret
jge
jne
fwait
rolb
inc
jne
pop
push
pop
push
rcll
mov
daa
mov
aad
movb
add
xchg
lahf
and
andb
sbbb
mov
mov
stc
pop
inc
loopne
sti
shr
shrl
pop
fsubrl
insl
inc
out
sub
push
icebp
ret
lahf
loop
or
pop
push
pop
test
icebp
call
pop
pop
pop
add
scas
test
pop
dec
inc
dec
mov
sti
add
cmp
shlb
les
sti
xor
cmc
pop
push
push
out
rcrl
push
dec
call
lods
cs
cs
xchg
push
and
stos
pop
cmc
js
adc
sarl
add
ja
mov
icebp
mov
das
pop
js
dec
push
sarl
lock
or
fstpt
cmp
gs
push
mov
movsl
pop
fcomip
fldenv
mov
subb
lock
mov
mov
arpl
dec
rorb
mov
rcrb
repnz
int
ljmp
inc
arpl
out
shll
fnstcw
mov
testl
outsb
sti
ds
aad
sbb
orl
cmp
fisttps
xchg
cmpb
adc
out
fildl
sbb
ss
imul
mov
dec
lahf
mov
in
imul
push
fbld
lock
popf
jl
aad
adc
ljmp
mov
sahf
repnz
dec
lods
faddl
ror
gs
fs
pop
sbb
cmpsb
mov
testb
es
mov
push
xchg
cmp
or
sti
pop
subb
pop
int
subl
pusha
in
rcr
stc
add
xchg
xchg
int
iret
mov
inc
add
push
add
add
pop
adc
cwtl
addb
outsl
inc
fs
inc
inc
rclb
js
xchg
lods
lcall
add
data16
mov
rol
icebp
mov
xor
cli
push
aas
insb
cltd
cmc
mov
cmp
sub
inc
int
lahf
mov
fmuls
movsb
sub
sbb
std
and
push
repz
sbb
shlb
stos
or
mov
cmp
cld
cwtl
cmp
hlt
xchg
pop
insl
jbe
gs
fdivs
xchg
and
dec
notb
xchg
ljmp
fdiv
mov
int
lcall
jge
cmp
cmp
pop
leave
lahf
xchg
push
and
push
bound
loope
lahf
sub
pop
fs
rcl
push
xchg
int
cmpsl
xor
and
mov
in
aad
cmp
popf
hlt
aad
mov
fs
and
repnz
sub
cli
or
int
lahf
xchg
xor
loope
repz
cmp
inc
and
fidivs
dec
in
or
mov
adc
cmpsb
cmc
add
stos
jl
lds
stos
fnsave
sti
out
movsl
fcmovu
daa
cmp
int
lea
les
xchg
loope
mov
jecxz
add
add
lock
in
mov
fistpll
sub
push
in
mov
int3
mov
in
in
fidivs
pop
jno
add
mov
loope
jbe
aad
add
rorl
mov
iret
in
cmp
in
mov
sbb
popf
lret
jno
fcomp
orb
mov
sub
mov
sub
mov
cmp
xchg
fwait
rorb
shll
lods
mov
sbb
iret
pop
and
mov
cmpsb
pop
shrl
scas
jmp
arpl
dec
dec
mov
rcrl
loopne
in
out
add
fs
mov
repz
out
or
fwait
lods
in
addb
test
pop
cmp
cmc
push
push
mov
fcomps
rcrb
in
jmp
dec
test
movsl
jecxz
mov
clc
popa
push
sub
mov
mov
inc
cmpsl
xor
pushf
fsubs
cmc
inc
cmp
push
jecxz
popa
in
or
lds
pop
testl
sub
aad
flds
pop
lea
xor
inc
insl
icebp
mov
sbb
int3
lods
or
outsb
push
mov
fistpll
mov
adc
or
sbb
scas
sub
fbld
cmp
push
aad
les
or
cmc
or
cs
in
pusha
adc
lahf
cltd
faddl
jl
js
aad
hlt
lahf
and
mov
mov
daa
push
sub
add
jnp
xor
aas
push
repnz
dec
xchg
inc
inc
aas
lods
lcall
mov
movsb
mov
hlt
jle
call
fs
cmp
into
xchg
mov
leave
xor
jp
jbe
or
mov
test
rcll
aam
les
lds
push
in
rorl
aam
pop
push
sti
mov
rcll
cmc
xchg
aam
cmp
or
adc
cmpsb
punpcklbw
imul
lock
ret
jo
jle
dec
jp
ja
add
fucomp
xchg
aam
fisubrl
push
jecxz
mov
clc
adc
in
pop
push
stc
testb
pop
mov
inc
mov
mov
ret
pop
push
repnz
in
sbb
mov
outsl
xor
mov
cmp
iret
xchg
mov
xchg
movsl
xor
sub
cmp
adc
mov
dec
xchg
shrl
add
test
pop
mov
mov
cmc
xchg
cmp
cmpsl
sbbb
pushf
mov
add
add
dec
pushf
lahf
and
std
adc
pop
and
xor
cmp
imul
fldl
adc
push
ljmp
xchg
add
shlb
mov
xchg
dec
cmp
dec
fsub
adc
push
push
cltd
add
add
leave
xor
ret
xchg
test
add
ficompl
mov
xor
sti
sub
fcoml
test
outsb
leave
les
cwtl
adc
xchg
jge
stos
imul
dec
xchg
push
in
sbb
rcr
xchg
in
jb
xchg
xor
jg
in
push
movsb
dec
add
push
pop
mov
dec
xlat
jae
push
in
xchg
xchg
out
mov
mov
cld
int
push
pop
ret
xchg
jnp
fmull
clc
aad
mov
bound
fwait
cmp
add
mov
fistpll
cmpsb
insl
cld
dec
sub
xchg
push
out
dec
fisttpll
mov
subl
cltd
push
mov
mov
addl
incb
mov
jb
test
jg
shl
stos
orb
fisubl
fs
cld
jb
xor
scas
jmp
xor
fbstp
rcll
add
lcall
pop
pop
nop
cs
xchg
nop
std
jbe
push
and
mov
sbb
mov
mov
jecxz
jnp
rcrb
inc
addb
int3
inc
lret
adc
cmpsl
in
xor
in
int3
dec
fs
xchg
pusha
fisttpll
xor
rol
and
jb
fmuls
popl
adc
rep
or
sbb
popf
push
fstps
test
mov
cli
pop
cmp
push
movsl
adc
jnp
sbb
xchg
adc
scas
or
movsl
lcall
repnz
pop
mov
inc
dec
xrstor
cmp
xchg
inc
pop
lahf
mov
in
mov
lea
roll
outsl
shrl
mov
sub
aas
mov
pusha
ds
pop
stc
sar
and
std
or
cmc
int
push
lea
popf
shrb
sub
dec
insl
cmp
jl
lock
dec
iret
push
pop
sub
mov
in
push
push
or
mov
pop
sbb
sbb
jns
repnz
and
xchg
call
lret
ja
in
jmp
mov
and
mov
add
jno
in
call
insb
bnd
mov
jmp
mov
adc
sub
or
les
xlat
lret
sbb
aad
sbb
repnz
cmc
push
test
cmp
je
inc
test
add
sbb
cmp
hlt
jb
mov
cli
out
jae
push
dec
push
jno
testl
xchg
adc
mov
int3
leave
and
push
popf
inc
push
imul
inc
push
add
addr16
aam
in
pushfw
in
push
int
jmp
xor
xchg
adc
dec
lahf
adc
subl
xor
cli
in
bound
dec
lret
mov
fs
or
into
out
cmp
test
cmpsl
cmpsb
pop
cmp
loope
jo
jbe
rcrb
fstl
in
neg
outsb
sar
and
sti
repnz
paddusw
clc
or
sbbb
jge
dec
xchg
insl
sub
sbb
not
and
popa
adc
sbb
fucomi
mov
stos
push
cmp
cmp
iret
cmp
add
lock
add
repz
incl
jo
in
into
cmpsb
adc
mov
push
lea
fs
insl
mov
cmp
mov
cmp
int3
aad
xor
sahf
dec
sub
mov
orb
mov
adc
jns
aad
out
inc
pusha
jmpw
mov
out
jnp
stc
jle
sub
cmp
jg
cmp
and
int3
cmc
push
iret
xchg
cmp
int3
dec
pop
sub
sbb
sti
mull
pop
pop
cmp
add
dec
sub
ja
sbb
xchg
mov
sarb
rorb
dec
sub
add
mov
inc
mov
mov
mov
cltd
jecxz
cmp
sub
pop
movsl
push
out
in
pop
and
or
mov
popl
stc
cltd
popa
in
sub
and
add
std
dec
je
fstl
repnz
pop
pop
jmp
dec
jl
push
in
inc
pop
cmc
inc
mov
and
mov
dec
mov
add
fidivl
pop
push
push
mov
sti
push
insb
mov
xor
arpl
insl
ficoml
jno
push
or
fcoml
mov
fxtract
inc
and
ja
daa
inc
je
arpl
sbb
aas
lret
jle
lods
je
out
mov
cmp
jnp
mov
jo
punpcklwd
dec
fmul
mov
dec
dec
pop
in
pop
out
fcoml
mov
popf
insb
or
sub
pop
sbb
sti
xor
pop
inc
adc
scas
es
loopne
inc
push
pop
pop
fs
inc
rol
fildl
mov
pop
jle
inc
in
push
push
in
lea
mov
movsb
shll
mov
cmp
or
and
das
arpl
or
test
and
jmp
filds
sub
lret
or
add
ss
push
sub
xchg
mov
lock
or
xchg
mov
cmp
sbb
loopne
cmp
lret
movsl
jno
mov
addr16
add
insb
dec
stc
daa
inc
mov
fnstsw
gs
and
jecxz
add
out
sbb
out
frstor
shl
pop
push
in
and
insl
push
pop
int3
cmpsb
pop
into
xchg
xchg
and
imul
ret
fldl
arpl
push
mov
adc
in
inc
in
cld
imul
adcb
push
lcall
cmp
repnz
aam
repz
sbb
ds
mov
test
add
data16
xchg
dec
sbb
in
xchg
in
pop
mov
ret
sti
sbbb
xor
xor
pop
jns
std
int
into
inc
xor
jne
mov
test
add
rcll
jb
cmpsl
aad
lds
aaa
jne
lahf
inc
cmp
jge
les
leave
orl
pop
cmpsl
int
jge
fldt
bound
lret
pop
adc
or
sub
mov
flds
dec
aaa
stos
clc
les
jno
in
lahf
in
jl
adc
cmc
flds
jne
adc
pop
pusha
repnz
int
in
cmc
xchg
add
bnd
in
push
mov
movsb
mov
sti
loop
shlb
stos
dec
xor
pop
incb
int
sub
pushf
fs
jg
or
lret
xchg
mov
movsl
orl
jecxz
fisubl
std
dec
icebp
outsl
and
dec
lret
cltd
shrb
and
pushf
xchg
repnz
test
mov
xor
cmp
mov
js
out
repz
nop
xlat
in
and
aam
das
fisttps
xorl
push
in
xchg
dec
sti
fistl
sub
shrb
cmc
jmp
mov
loop
movsl
dec
mov
xlat
jg
aad
mov
decl
subl
dec
mov
lret
call
in
shll
hlt
dec
test
cmp
bound
lea
push
popf
rcll
ljmp
xor
or
or
jecxz
in
cmpb
repnz
pop
call
aaa
jmp
mov
in
inc
cli
or
xchg
mov
sub
push
popa
in
ss
fsubl
inc
mov
inc
gs
push
mov
arpl
out
add
or
aaa
lcall
cmpb
adcl
jmp
mov
int
test
push
inc
mov
push
sub
dec
fs
push
and
les
inc
adc
es
pushf
mov
xchg
xchg
pop
mov
jecxz
jo
pop
add
ss
push
fnstsw
xchg
mov
gs
mov
rolb
mov
int3
js
pop
push
sub
push
sti
loopne
shrl
dec
addb
mov
jo
cmpsb
xchg
mov
ds
outsb
aaa
mov
stc
add
cmp
sarl
into
test
ss
push
fmull
sub
pop
lock
aas
and
int3
sahf
cltd
cld
or
sbb
sub
insb
and
pop
pop
das
sti
test
and
xor
leave
call
sbb
das
pop
aas
push
out
jo
fdivrs
fiaddl
and
pop
mov
sbb
lret
imul
adc
and
sbb
popa
push
sbb
les
xchg
jb
xchg
ss
or
jb
mov
push
sbbb
or
lahf
sbb
xor
pop
cltd
mov
add
ss
pop
pop
addl
mov
lret
sub
mov
aad
cmp
push
fdivr
mov
mov
push
lea
sbb
fistps
cmp
push
call
push
xchg
add
jmp
iret
cmp
sbb
pushf
out
sbb
loopne
cmpsb
mov
jp
xor
push
sbb
aaa
das
or
lods
push
dec
outsb
xchg
mov
inc
stos
jnp
pop
fbstp
movsb
imull
xchg
mov
inc
inc
cltd
leave
dec
mov
addr16
mov
idiv
fldl
mov
lahf
fstps
xor
shr
stos
loop
in
jmp
and
loope
and
notl
xchg
xchg
loop
insb
jmp
mov
mov
pop
sbb
sbb
jmp
jp
and
pop
outsl
mov
push
cmpsb
outsb
add
cwtl
imul
test
adc
mov
pop
jmp
fisttps
fwait
ds
jmp
ss
adc
and
xchg
cmpsb
rcr
cmp
fistpl
ja
fs
outsb
mov
xchg
inc
adc
inc
sbb
imul
push
std
adc
pop
mov
push
popf
popf
push
fdivrl
in
int
ficoml
imul
dec
sub
pop
mov
out
int
shll
add
jmp
pop
out
pop
in
daa
mov
inc
or
inc
dec
lea
lahf
add
nop
sti
xor
int3
hlt
mov
cmp
loope
idivb
repz
cwtl
lret
xor
cmpsl
sub
push
lods
lods
xchg
lahf
sbb
stos
push
into
cmp
fs
movsl
inc
cmpsl
and
leave
cmc
negl
jp
jne
int3
mov
andl
sbb
xor
insl
jge
add
or
std
xchg
and
scas
pop
repz
clc
cmp
and
push
sahf
jl
sbb
mov
mov
lock
cmc
add
stos
int
loope
xchg
jmp
pop
push
test
mov
imul
adc
fisubl
xor
mov
cmpsw
rcrb
inc
mov
cmp
filds
nopl
sbb
xchg
inc
pop
nop
hlt
movsb
sub
jno
scas
popl
jno
xor
sbb
add
shlb
jbe
sti
sbb
pop
inc
aas
in
insl
arpl
mov
mov
jle
cs
pushf
insl
jnp
enter
call
mov
pusha
inc
pop
enter
vrsqrt28pd
mov
scas
push
repz
lock
scas
xchg
mov
int3
mov
mov
adc
shlb
rcrl
cmpsl
jge
push
cmp
xchg
dec
bound
out
cmp
and
cmp
int3
jle
cmp
fnsetpm(287
fists
mov
or
dec
and
hlt
push
out
sub
addr16
outsb
sbb
pop
mov
cmp
pop
cld
ljmp
mov
pusha
out
pop
sbb
cwtl
pop
jl
clc
pop
and
out
lds
cmp
in
in
sbb
fisubl
ret
sbb
sti
fistpl
push
pop
push
faddp
add
xchg
sbb
or
and
mov
mov
sahf
dec
insb
addb
dec
repnz
mov
lret
or
and
or
hlt
bnd
dec
lods
push
mov
and
pop
cltd
lcall
dec
dec
or
ljmp
and
xchg
or
popf
in
add
mov
testb
sarl
int3
jle
pop
out
jae
sahf
lahf
add
xor
stos
cli
rol
jnp
mov
leave
fisubl
sbb
and
pop
sbb
aam
fldenv
xchg
inc
out
pop
and
push
xlat
ljmp
in
bound
ljmp
int
pop
jge
push
out
xchg
adc
cmp
adc
sbb
pop
cmp
mov
rcr
ljmp
xor
movsl
mov
xchg
add
sbb
in
mov
mov
cmpsl
popf
out
lahf
and
scas
inc
inc
mov
leave
cmp
int
fists
mov
mov
fwait
sub
ljmp
sar
mov
dec
hlt
clc
scas
std
ret
fnstcw
mov
push
cmpsb
pop
lods
insb
repz
repz
push
cmp
test
push
pushf
es
add
jecxz
filds
daa
fcom
sbb
movsb
mov
in
fdiv
fs
cmpsb
sti
xchg
fmuls
cmc
imull
stos
mov
push
fldenv
push
or
aaa
gs
sti
xor
and
or
out
loop
cmc
test
pop
and
pop
and
bound
sbb
lahf
imul
mov
xor
sub
jecxz
jmp
push
cltd
pop
xor
rclb
push
add
fisttpll
in
imul
popf
cmp
iret
xor
push
adc
add
rolb
mov
mov
xor
stos
mov
inc
dec
std
orb
or
jp
xchg
pop
or
cs
lods
cmpsl
pop
shrb
pop
sbb
lret
and
jl
pop
push
push
js
cli
ljmp
pushf
aad
jecxz
cmc
movsl
mov
js
stc
iret
shl
arpl
fcmovu
push
pop
cmp
leave
gs
popf
jl
aam
jno
cli
rorl
rcrl
push
cmpsb
dec
or
pusha
rolb
or
jbe
sbb
sbb
gs
out
sbb
push
test
mov
adc
loope
cmp
movsb
loopne
jne
mov
inc
stos
std
je
stos
call
gs
jmp
sbb
pop
add
xor
sbb
jmp
and
sahf
loopne
cmp
in
popa
jp
std
fstpt
faddp
mov
adc
pop
add
or
jl
cld
inc
movsb
in
rcrb
sub
xchg
xchg
pop
popf
int3
mov
fucomip
push
lahf
iret
fidivrl
popf
xchg
xchg
std
mov
mov
and
cld
mov
rcrb
stc
in
rorl
out
jecxz
or
in
mov
sub
fidivrs
sbb
cmp
or
xor
data16
scas
nop
call
lds
cmp
sbb
push
cmp
add
push
loopne
int
adc
sti
test
add
aam
mov
mov
adc
scas
scas
push
cwtl
cmc
movsl
mov
fsts
aam
rorb
lods
ficoml
mov
lret
std
fsubrs
jp
jo
test
mov
lcall
data16
or
in
inc
add
add
cmc
jecxz
cmp
mov
sbb
push
hlt
stc
pusha
mov
cmp
add
mov
jecxz
mov
stos
gs
cmp
push
jnp
rorl
mov
mov
andl
in
dec
repnz
vmovmskps
shll
adcl
dec
jbe
popa
jne
jecxz
stos
cli
pop
lahf
out
add
stos
or
cltd
or
fistpl
or
lock
sbb
sbb
hlt
loope
lahf
xor
dec
mov
ljmp
mov
roll
pop
cmp
fidivrl
test
pop
jno
cmpsl
cmp
lods
movsb
push
dec
jbe
dec
mov
cmp
into
xor
mov
pop
lahf
mov
imul
jae
add
fidivl
inc
push
dec
sar
loopne
jo
xchg
or
fdivl
popf
sbb
cmp
ljmp
in
imul
mov
or
lcall
inc
ficoms
insl
leave
std
jae
mov
aad
add
insl
cmp
mov
push
fiaddl
loope
mov
jmp
nop
cmp
add
adc
cli
fidivl
popf
stc
pop
orl
bound
rorb
filds
cmp
mov
sbb
cmp
or
andb
lret
fsubl
add
pop
xor
cli
xchg
idivl
cmp
cltd
imul
cmp
add
mov
imul
push
xchg
sar
mov
push
sbb
add
mov
push
ret
xlat
cld
jmp
mov
mov
xlat
fldenv
mov
fucomp
popf
jl
popa
in
jp
and
xchg
jge
push
mov
xchg
shll
sbb
adc
cmc
fwait
repnz
fnstenv
xchg
rcrl
int
in
sti
das
stc
int
outsb
movb
fisttpll
inc
inc
ret
push
gs
add
push
adc
xchg
jl
cs
repnz
aad
fdivrs
call
into
fwait
pop
jno
xchg
icebp
sbb
lahf
inc
sbb
int3
cmp
mov
ret
mov
fs
inc
or
dec
cmc
xchg
fdivl
mov
inc
cmp
xchg
adc
jecxz
or
xchg
mov
sbb
repnz
inc
add
pushf
cmpsl
xor
lcall
flds
cmp
addr16
inc
fs
ss
arpl
jmp
and
js
ds
andl
js
push
push
imull
or
push
mov
push
jo
rcrb
pop
dec
icebp
stc
fucom
and
fs
mov
ficoms
xchg
int
lahf
notl
jmp
out
and
movsl
jp
mov
inc
fs
fcmovbe
int
mov
aad
fcompl
pop
inc
mov
arpl
fstl
jmp
add
fnstenv
enter
jo
in
mov
cltd
idiv
das
add
in
mov
enter
pop
out
arpl
test
shr
xchg
sub
xchg
cld
pop
loopne
jmp
fists
adc
xchg
xchg
sti
push
xor
sub
jmp
fcompl
xchg
fstpl
mov
dec
aad
cmp
arpl
arpl
cmp
pop
or
cmp
roll
cwtl
enter
fs
popl
xor
lret
in
sub
mov
sbb
inc
jl
add
mov
fistpll
and
cmp
inc
aad
lret
in
ja
sbb
jmp
add
jp
lret
fdivs
ss
movsb
jp
and
aad
je
in
pop
fs
pop
hlt
sbb
xchg
inc
fbstp
fidivrs
inc
cmp
imulb
shll
aad
pop
xor
aam
std
push
std
sbb
aaa
out
pop
adc
jnp
xlat
jmp
xor
sub
mov
push
xor
inc
lret
adc
inc
inc
or
test
rclb
xchg
pop
jmp
mov
insl
or
test
push
pop
lods
mov
mov
sarb
push
ljmp
mov
jo
mov
ret
fistpll
out
jp
add
lcall
and
outsb
lea
jp
fisttps
inc
gs
in
cmp
push
scas
test
cmp
cltd
add
and
mov
pop
cltd
xchg
jb
out
push
ficomps
lret
imul
mov
int
sahf
lds
testl
xchg
xor
fdivrs
loopne
cmp
inc
push
lock
mov
roll
fst
int
and
popa
ret
mov
fwait
stc
add
mov
mov
popf
adc
stos
lret
and
loopne
add
xchg
sub
xchg
lods
and
jae
cmp
test
push
in
mov
or
aas
in
sub
sub
int3
sti
mov
mov
in
lahf
in
inc
outsb
repz
jb
jbe
xchg
jge
fsubl
loope
push
ss
push
test
clc
cmp
pop
iret
xor
jo
ret
dec
mov
and
xchg
add
cmp
lret
adc
jo
clc
sub
repnz
mov
cld
popf
aas
int3
popa
add
scas
sub
out
push
and
stos
cmpsb
mov
add
fnstenv
jno
imul
hlt
test
cmp
add
mov
push
das
sbb
push
lock
movsl
mov
shrl
pop
or
fstps
cmp
mov
jge
or
dec
and
ljmp
xorl
mov
pushf
mov
nop
fwait
in
movsb
fsubp
in
mov
adc
or
aam
sbb
ret
paddusb
fnstsw
cmp
or
mov
mov
lret
pop
sti
dec
roll
push
push
pushf
adc
shl
cld
mov
add
push
jno
movsb
cltd
ret
fs
push
nop
rclb
mov
push
into
cmpsb
add
dec
cmp
pop
or
shrl
in
aam
add
and
shll
cmp
repnz
stos
xlat
frstor
pushf
pop
ficomps
in
bound
adc
pushl
mov
cmc
cmpsb
shl
es
shl
add
jmp
fstpl
xor
iret
add
jae
sub
stos
fistps
jge
ret
jecxz
push
xchg
cs
rcl
mov
mov
arpl
and
sub
xor
cmc
jecxz
out
inc
inc
xchg
inc
int
push
dec
test
dec
inc
sbb
fisubrl
leave
dec
js
int3
sbb
stc
cmp
or
aad
test
sarl
add
fisttps
fstp
jno
cmc
push
sub
shl
add
cmp
sbb
loop
dec
mov
add
jp
imul
in
popf
push
cmp
in
cmpsb
movsl
popa
cmpsl
dec
lock
sbb
fdivl
jl
sar
cmc
popa
mov
push
mov
dec
popa
aaa
loopne
out
orb
lret
inc
hlt
cmc
mov
jp
or
adc
cmp
mov
cmp
cmp
xchg
push
pop
cs
pop
popa
fcmovnu
in
inc
xor
aas
dec
adc
jae
in
push
aaa
movsl
repz
cmp
popf
inc
and
cmp
sbb
call
jmp
fnstcw
scas
and
xchg
xchg
add
mov
pop
dec
add
sti
int3
popa
cmp
dec
aas
shl
adc
arpl
cltd
aaa
jb
xlat
pushf
lea
sbb
incl
rolb
inc
mov
imul
xchg
stc
mov
mov
xor
push
hlt
int
inc
aad
jmp
dec
sub
repnz
and
cmp
imul
hlt
roll
push
push
lea
ja
or
mov
push
test
jae
jecxz
jp
adc
out
ljmp
cs
and
mov
dec
jg
int3
mov
std
jp
js
xor
cmp
in
scas
cmp
sub
push
mov
sbb
popa
aam
loopne
lret
and
orb
mov
mov
pxor
jle
js
sub
xchg
push
lods
movsb
push
cmp
movsb
mov
lods
cmp
mov
push
inc
mov
push
mov
xchg
jle
movsl
jp
imul
push
xchg
cld
orl
bswap
in
bt
mov
pop
jle
out
clc
leave
int
jmp
aam
flds
jle
icebp
fsubrl
cmp
daa
mov
pop
mov
push
rorb
mov
lahf
ljmp
leave
in
clc
fwait
or
flds
lock
stc
mov
popf
mov
mov
enter
pop
jmp
pop
mov
fwait
test
jnp
fstpl
lock
movsl
stc
xchg
nop
xlat
leave
adc
add
jecxz
mov
movsb
hlt
test
mov
stc
and
mov
jmp
adc
test
or
mov
cmpsb
popa
xchg
insb
stos
rcrb
bound
pop
rcr
test
mov
arpl
or
or
inc
lret
out
in
loope
add
pop
aad
and
jl
incl
fstpl
lret
jmp
test
jb
bnd
or
cmp
sarl
rorb
rcrl
movsl
in
cmp
cli
pop
pop
aad
test
rorl
in
test
dec
cmc
popa
aam
fildl
add
fcompl
pop
dec
pop
and
or
pop
mov
jmp
dec
int
imul
sti
in
or
pop
and
or
pop
jp
imul
neg
int3
mov
arpl
out
fsubl
les
fwait
rcl
push
lcall
adc
push
insl
cltd
cltd
jp
lea
in
or
sbb
ret
or
jae
outsl
jge
or
xchg
add
loope
mull
add
fidivl
dec
imul
mov
int3
add
cltd
fsubrl
in
lock
std
pusha
add
dec
hlt
rclb
nop
mov
out
std
mov
mov
push
sahf
lock
cmpsb
adc
pop
ljmp
xchg
push
cmc
fs
jb
adc
fists
mov
mov
and
xchg
iret
adc
test
popf
and
xchg
or
fsubl
jo
rorl
nop
loop
popa
push
fmull
int
movsl
add
stos
mov
repnz
loop
mov
fmull
mov
aas
push
sub
mov
add
jl
insb
loopne
fwait
xor
cmpb
mov
pop
leave
hlt
aaa
pusha
xchg
adc
les
pop
cs
les
pop
adc
mov
loope
add
insb
mov
adc
es
lret
in
aad
add
inc
sub
out
sbb
popf
mov
aam
ret
jmp
lret
inc
pop
lds
imul
rcrb
adc
and
and
lret
insl
mov
popa
push
or
dec
push
add
mov
loope
je
insb
jg
loope
add
or
arpl
lcall
push
jmp
clc
insb
cmpsl
negb
xor
cmp
arpl
cmp
mov
sub
mov
fstl
fs
ljmp
stc
gs
pop
jo
repz
cmp
jmp
insl
inc
fs
repz
lods
mov
int
jmp
add
and
mov
pop
loope
hlt
jbe
cltd
xor
cmc
and
cmp
bound
mov
sarb
or
mov
movsl
daa
dec
jb
int3
pop
mov
dec
xchg
xchg
sbb
mov
test
jle
dec
fsincos
jae
sbb
cmc
cmpsb
xor
dec
jnp
enter
hlt
inc
test
mov
inc
or
in
pop
int3
pop
and
aaa
aas
shrl
or
repz
dec
pop
test
jmp
sub
cmpsl
out
sbb
insl
inc
pop
repz
rcrl
cld
lods
int3
fistps
ja
loopne
xor
insb
shl
add
jp
mov
cmpsb
pop
aaa
fistpll
int
std
insl
adc
aam
dec
int3
sbb
lcall
imul
inc
xor
mov
or
in
push
pop
pop
orb
cltd
mov
push
pop
dec
std
js
stc
sbb
fld1
mov
cmp
sub
ss
sbb
fs
and
lds
cmp
push
lret
pop
push
fistps
std
insl
cmc
fldenv
out
lret
test
fsubrl
repnz
sub
mov
push
fs
in
cli
mov
cmp
xor
fs
push
xor
mov
sarl
cmp
fstpl
jle
cmp
sub
or
push
cwtl
lret
or
test
out
jmp
pushf
add
hlt
pcmpeqb
aad
mov
and
fnstsw
ret
in
jl
mov
adc
cmp
and
iret
inc
stc
xor
push
jno
xchg
jge
or
div
add
pop
pop
lret
add
mov
fdivrs
mov
mov
cmp
fwait
in
incl
sti
bound
jge
cmc
cli
test
popf
dec
popa
shlb
cwtl
jnp
fbstp
mov
shl
sub
iret
mov
mov
mov
fmull
inc
jmp
xchg
loopne
dec
call
dec
sti
pusha
lret
movsl
jnp
std
pop
add
dec
loopne
cmpsl
mov
int
lea
mov
icebp
mov
mov
sti
lret
nop
jmp
int
mov
in
add
pop
movsl
mov
mov
aas
pop
ljmp
or
out
std
into
fnstenv
fwait
cs
in
sub
cs
inc
xchg
test
jg
fldenv
movsl
xchg
xchg
aaa
mov
inc
movsl
sbbb
mov
test
sbb
mov
jae
inc
jge
xor
int
pop
lods
or
test
push
pusha
divl
mov
shll
mov
nop
cmp
mov
sub
jns
lahf
add
dec
int
mov
inc
fdivs
xor
in
fstpt
aad
fisubl
insb
add
lret
or
sbb
repnz
ficompl
pop
adc
das
add
subl
lock
test
jo
xchg
mov
cmc
dec
inc
insb
sbb
iret
cmpsl
add
sub
and
xorb
cmpsl
notl
ljmp
jo
dec
pop
add
jecxz
in
sbb
cmpsb
jg
stc
adc
sub
jmp
mov
arpl
std
mov
sbb
and
jo
mov
shll
inc
adc
or
sti
sbb
mov
adc
inc
sub
xchg
jecxz
jecxz
gs
pop
mov
aam
fsubr
fiaddl
push
jle
outsl
sbbb
imul
jge
sbb
cmp
xchg
cltd
cld
pop
push
leave
jae
sbb
out
fwait
shll
lea
sbb
mov
push
faddl
sub
lret
nop
push
sarb
lahf
popf
addr16
inc
in
fwait
mov
pop
jnp
fwait
iret
push
stos
sti
test
mov
nop
inc
mov
add
aam
jp
jnp
and
jge
inc
movb
std
adc
pop
fsubs
andl
out
mov
in
scas
imul
fwait
push
pop
fs
pop
jg
repnz
inc
adcl
sysenter
and
icebp
cmp
fldl
cwtl
sbbb
pop
pop
sbb
inc
jbe
out
popf
adc
into
push
dec
repnz
and
lret
test
mov
imul
mov
jmp
ds
stos
mov
or
int
nop
hlt
inc
js
int
mov
inc
xor
sub
adc
or
inc
sahf
test
xchg
icebp
cmc
sub
fistl
insb
cmp
add
ficoml
xchg
call
ljmp
int3
fistps
mov
jmp
int
fst
arpl
xchg
lock
lock
into
and
adc
inc
flds
push
cmp
push
or
push
push
mov
push
xchg
sub
dec
push
lcall
sub
jmp
jge
pusha
icebp
sti
nop
pop
mov
adc
cmp
stos
arpl
xor
mov
in
dec
inc
mov
push
ds
aas
add
cwtl
push
lds
mov
rcl
incb
sub
mov
int3
pop
in
in
aam
call
sbb
sti
subb
pop
sbb
scas
out
mov
popf
xchg
dec
cmc
loop
sub
mov
shl
cld
outsb
adc
aas
in
sbb
int3
sbb
ror
sti
aam
mov
mov
mov
mov
mov
and
pop
jg
push
ljmp
repnz
jmp
add
pushf
add
test
in
lret
jns
and
mov
adc
adc
pop
add
jg
nop
mov
mov
inc
sub
xchg
jp
cmpsl
inc
mov
sarl
mov
pop
mov
aam
fistpl
cmp
push
mov
es
fisubrl
repz
push
aad
popf
in
push
out
lahf
xor
xchg
int3
outsb
mov
add
cmc
test
cld
mov
std
inc
add
scas
nop
daa
sbb
in
in
xor
into
mov
sbb
es
cmp
jnp
cmp
and
dec
popf
insl
cmpsl
test
or
clc
rorl
aad
mov
rorl
sub
iret
mov
mov
adc
imul
xchg
ret
mov
outsb
or
xchg
inc
test
out
pushl
jbe
mov
fs
mov
orl
add
bound
movb
out
mov
cmpl
pop
mov
insl
cwtl
das
ljmp
aad
and
xchg
jne
or
and
pop
mov
mov
hlt
in
pop
cmpl
pusha
pop
clts
push
and
test
mov
mov
mov
push
hlt
push
rcrl
out
test
movsb
adc
lea
inc
sub
jmp
ja
xor
mov
in
arpl
mov
add
pop
pushf
xchg
daa
neg
mov
dec
adc
jo
lds
das
popl
cmpsb
mov
pop
in
adc
int3
movsl
fsubrp
sub
jecxz
mov
flds
xchg
cmp
xlat
cmp
mov
mov
mov
adc
movsl
movsl
rol
jae
lods
sbb
leave
pop
dec
fimuls
mov
gs
mov
sub
in
fcomp
mov
loopne
loopne
gs
ficompl
or
ss
mov
and
xchg
loop
xchg
or
mov
imulb
mov
or
clc
jne
inc
ret
sbb
adc
fsts
pushf
jge
outsl
ret
mov
fcoml
sti
subb
pushl
fsubrl
or
lret
mov
ss
fldl
mov
dec
fisubs
loop
mov
jle
dec
and
jecxz
sbb
inc
xor
outsl
mov
lret
aaa
cs
fsubrs
popf
add
push
pop
add
adc
cmpb
sbb
mov
icebp
xchg
push
xor
xchg
sub
repz
lret
sub
lds
fucom
pop
into
cwtl
pop
popa
sbb
insl
in
fcmovb
xchg
xchg
sub
sub
xchg
fxtract
add
mov
popa
fisubrs
int3
sbb
xorl
cmp
out
mov
imul
lret
das
cmp
aaa
mov
push
and
ficompl
inc
mov
jno
mov
lahf
or
call
cmp
add
movsl
sub
fstpl
xchg
mov
aam
lcall
rcr
jmp
lds
mov
inc
roll
aad
leave
out
dec
xchg
xchg
out
sbb
sbb
lea
bound
movsl
stc
inc
cmpsb
das
xchg
cmp
roll
out
fiaddl
aaa
xchg
mov
push
in
adc
ret
test
mov
push
fdivl
ljmp
popf
frstor
mov
scas
cmpsl
shll
aad
movsl
cmp
jmp
add
sub
fwait
adc
fldcw
mov
or
testl
rcrb
icebp
push
xchg
and
or
icebp
pop
xchg
xchg
xor
lea
xor
inc
imul
scas
roll
ss
xor
lret
popa
in
pop
imul
jae
in
cwtl
out
aad
push
in
sti
jge
jmp
fldl
xchg
xchg
mov
push
pop
js
sub
aam
aad
cmc
stc
jns
pop
in
add
hlt
das
in
sub
es
push
push
ds
xchg
roll
std
hlt
dec
fwait
push
fs
les
imul
pop
cltd
mov
dec
loope
rolb
mov
insb
jo
test
add
push
cmp
dec
mov
lea
push
push
dec
push
push
adc
mov
sub
xor
movsb
sbb
test
mov
mov
cltd
xor
xlat
mov
sbbb
ss
mov
mov
adc
aam
pushf
or
mov
xchg
or
movsb
cltd
jmp
sbb
sbb
cmp
and
outsb
dec
cmc
push
ror
int3
pop
jge
xor
cmp
xchg
inc
movsb
fsubp
fnsave
iret
mov
dec
jae
out
mov
cmp
dec
imul
cmc
sub
popf
or
push
mov
out
mov
insb
xchg
cli
mov
int
xor
or
jbe
mov
or
ret
push
xor
push
imul
cld
add
sbbb
mov
mov
mov
sbb
add
stc
shl
shlb
int
xchg
aaa
loopne
mov
cmp
int3
fwait
loope
test
es
jae
imul
cmc
ror
imul
jo
jae
sbb
scas
sub
stos
mov
inc
sbb
or
mov
repnz
mov
xor
insb
sbb
push
test
add
fs
sbb
repnz
lea
cmp
jno
push
inc
dec
out
stc
loop
adc
jns
into
mov
xchg
inc
repz
cmpsb
js
cvttps2pi
or
daa
arpl
ret
jne
loop
sub
xor
ja
into
adc
pop
leave
or
movsb
movsb
sub
orb
int
push
mov
xchg
push
shl
xchg
popf
cmp
icebp
in
adc
add
popa
std
jmp
cmc
scas
sbb
gs
bound
mov
mov
loop
test
test
stc
mov
mov
jl
inc
inc
gs
fcomip
out
fdivrl
mov
inc
dec
fwait
and
inc
scas
push
es
out
int
arpl
mov
pop
mov
lods
int
jl
outsb
mov
mov
cmpsl
fdivs
out
repnz
ja
in
xchg
mov
or
pushf
push
aad
decb
add
popa
sbb
fistps
in
cmc
int
jnp
sbb
jmp
or
pop
jae
aad
mov
andl
mov
lret
pop
jp
lret
hlt
add
jnp
mov
pop
add
xchg
int
or
orb
icebp
in
inc
mov
in
icebp
push
pushf
fists
cmp
loop
cld
cmpb
stc
lds
test
mov
xchg
imul
outsb
shl
push
test
sbb
push
push
pop
movsb
jns
jb
mov
test
sub
jmp
fnstsw
cmp
sti
in
aad
fidivrl
test
or
loopne
mov
leave
outsl
in
xchg
sti
sub
loope
sub
push
cld
dec
in
int3
out
fstp
mov
imul
int3
leave
shl
lahf
mov
xchg
mov
mov
jmp
add
pushf
stc
in
push
movsb
mov
flds
out
call
pushf
iret
in
lret
in
lret
or
enter
xchg
mov
in
adc
imul
in
pop
pop
out
lret
mov
sti
and
in
push
insl
mov
jmp
pop
in
mov
test
lea
jecxz
icebp
dec
stos
aad
ficoms
add
or
jge
mov
and
or
mov
arpl
jecxz
std
daa
mov
jge
fs
xchg
jb
dec
pop
aam
sub
in
gs
mov
inc
fists
int
in
mov
mov
in
or
cmp
ss
adc
pop
jo
xchg
std
mov
mov
jns
and
js
sbb
xor
orb
push
sbb
jnp
pop
movsb
test
ret
add
mov
test
movsl
hlt
and
movsb
pop
int3
mov
mov
scas
and
flds
int3
movsl
mov
scas
jae
inc
cmc
mov
sbbl
fisubl
inc
aam
out
aas
jge
push
inc
mov
leave
test
inc
mov
int3
jb
dec
sub
xchg
xor
pusha
ss
bound
cmp
rcrb
rorl
fistl
mov
inc
sbb
push
and
xchg
movsl
push
mov
popf
mov
ss
adc
ret
pop
in
cltd
push
jae
inc
sbb
aam
lahf
sub
imul
sti
jo
mov
ljmp
add
mov
push
mov
lds
out
mov
in
cmpsl
inc
pop
jge
fld
mov
xor
lods
mov
mov
xchg
jne
das
lahf
icebp
jmp
popa
inc
jnp
mov
mov
rcr
sub
mov
push
int3
ljmp
sub
add
shl
dec
jno
mov
jb
rol
mov
inc
shrb
mov
fldcw
or
jno
jge
push
cmc
sbb
stc
cs
dec
fstps
mov
mov
roll
push
sbb
xor
jae
cmp
adc
jns
jp
push
xchg
fstps
movsb
lahf
fisubrl
out
hlt
movsl
push
addr16
icebp
ret
ljmp
mov
ljmp
fcmovnu
shll
inc
jp
fildl
mov
push
das
movsb
sbb
ror
add
pop
mov
cmp
xor
movsl
cmp
sub
int
scas
aas
mov
mov
sbb
cmp
int
fists
pop
adc
xchg
lcall
sbb
lahf
jb
in
in
cwtl
inc
in
popa
sub
xor
sub
pop
jb
shll
mov
mov
dec
aad
subb
mov
daa
jb
inc
pop
jb
jnp
push
repnz
stc
cmp
inc
ret
add
cmc
xchg
pop
rorl
jl
cltd
test
xchg
push
inc
in
popf
into
jb
sub
aad
call
or
cmc
jge
add
aam
sbb
out
cmp
sti
lret
sbb
sti
in
aad
aad
mov
mull
adc
mov
xchg
in
rcl
xchg
push
leave
aas
jno
jmp
mov
mov
arpl
jmp
jecxz
rcll
mov
xor
xor
jle
rorl
push
dec
mov
loop
jbe
cwtl
or
jo
inc
or
cmp
ffreep
jne
hlt
xor
push
ficompl
sbb
cmpsl
xlat
and
in
xor
bound
xchg
movsb
dec
mov
imul
lret
stc
scas
xchg
jge
bound
xchg
pop
or
ret
jbe
sub
push
mov
push
or
xchg
cmp
arpl
gs
outsb
jnp
mov
cmp
cmp
dec
xchg
and
cmp
add
push
scas
xchg
inc
mov
lret
mov
flds
jge
popf
xchg
jae
enter
imul
and
ret
ficomps
cmp
jb
shll
sub
addr16
xchg
divb
sbb
cmp
ljmp
lock
cmp
aam
cltd
repnz
mov
outsl
mov
jmp
hlt
jle
mov
mov
pop
dec
jmp
push
add
mov
and
fimull
addr16
mov
and
in
das
loope
mov
jp
pop
xchg
mov
pusha
jo
addr16
mov
data16
js
inc
fdivr
mov
stc
inc
sbb
inc
or
aad
jae
and
repnz
inc
mov
fstl
sbb
xchg
or
pop
hlt
sbb
les
dec
mov
lods
ss
out
mov
and
sar
xor
lret
jb
loope
pop
xchg
fldenv
das
sbb
std
loop
adc
xchg
and
sti
mov
lret
sbb
mov
inc
hlt
shl
inc
inc
and
dec
movsb
xchg
aas
aam
lahf
loopne
gs
fdiv
jbe
sub
fst
out
adc
fs
cmp
popa
movsb
xor
and
jae
mov
xchg
xor
jmp
dec
bound
add
test
ror
jmp
push
and
bswap
cld
sub
addr16
leave
out
pop
pop
inc
mov
es
outsb
lcall
insb
push
and
add
ljmp
mov
lret
mov
fsubr
lods
mov
mov
mov
dec
pop
sarl
movsb
dec
adc
cmp
cmpsl
push
mov
fidivl
xchg
mov
cmpsl
inc
insl
push
dec
in
cld
outsl
aas
sbb
pop
in
push
mov
sbb
lea
adc
or
and
stc
sub
inc
or
sar
cmc
push
sbbl
aaa
neg
jmp
dec
mov
xor
sarl
mov
push
fprem
out
out
out
ret
nop
inc
xchg
ja
test
test
ds
jbe
sub
std
daa
movsl
lods
cmp
mov
inc
add
notl
pop
icebp
inc
adc
or
xchg
sahf
pop
je
add
xor
fisttps
cmp
or
pop
iret
inc
cmp
cmc
fbstp
fcompl
push
andb
int
cmp
sbb
dec
loopne
in
insl
jne
push
inc
mov
inc
mov
pop
push
cmpsl
adc
into
test
je
sub
shlb
ficomps
cmp
bound
cmp
jno
push
pushf
mov
inc
aam
arpl
push
scas
mov
shll
es
outsb
stos
mov
xor
fldl
test
in
mov
fldenv
movsl
jbe
dec
mov
dec
push
mov
test
popa
fistpl
fmull
xor
mov
in
pusha
push
xchg
ja
add
pop
pop
push
mov
inc
aam
mov
jb
bound
lret
add
add
cmc
lret
ret
out
popf
aad
dec
stc
movsl
inc
decb
inc
scas
add
pop
xchg
push
out
xlat
ror
push
cmp
mov
in
mov
popf
mov
out
cmp
incb
mov
pop
inc
jle
pop
loopne
es
add
pop
scas
fwait
scas
jb
xor
xchg
cmp
cli
fdivs
xor
dec
aaa
pushf
iret
and
or
xor
push
add
xor
jle
fistps
mov
mov
pop
lret
fdivrs
cmpb
mov
insl
icebp
push
lahf
pop
ret
mov
outsb
pop
or
scas
xchg
inc
push
mov
xchg
xlat
nop
sbb
pop
insl
xchg
mov
mov
std
mov
xor
imul
fdiv
pop
inc
jmp
and
popf
int3
adc
movsb
je
int
cmp
lods
adc
mov
pop
lods
out
sbb
pop
gs
leave
js
xchg
rolb
das
lea
mov
mov
pop
out
pusha
xchg
in
in
enter
ss
cmp
test
int
movsb
mov
in
pop
lret
ret
jp
in
cli
in
inc
mov
mov
pusha
ljmp
add
mov
scas
orb
enter
xchg
fsubs
mov
lea
insl
in
pop
js
lahf
iret
push
adc
faddl
out
rcrb
mov
fisubl
in
hlt
ds
sub
test
fnstsw
push
int
outsl
fisttpll
mov
add
xchg
sub
lds
pop
dec
push
add
sbb
inc
jmp
mov
aad
inc
and
jg
filds
push
inc
in
sarl
test
dec
xchg
in
sub
jae
mov
jno
in
sbb
cmp
sub
sub
insb
xor
adc
jecxz
and
mov
insl
dec
sti
xor
out
cli
in
ret
in
stc
mov
or
orl
adc
jge
jo
shl
dec
cmp
insl
add
ffree
or
mov
mov
test
iret
in
xchg
in
fnstenv
xchg
int3
cmc
pusha
push
push
mov
pop
push
in
in
in
fldcw
sub
jmp
shl
or
lds
in
cld
pop
xchg
lds
aam
sbb
lds
and
or
xchg
lds
xor
shrl
mov
rol
int3
loopne
push
in
je
repz
pop
jnp
in
subb
aas
addr16
ljmp
and
sub
je
jl
int3
int
mov
stc
int
push
je
ja
lret
mov
out
cmc
movsb
push
dec
mov
push
dec
nop
in
jbe
push
lds
pop
leave
jge
call
lahf
gs
inc
cmp
cmp
fstpl
in
pop
lea
dec
out
cmp
sbb
sub
ficomps
in
sub
push
mov
lea
sbb
icebp
jge
cld
rcrl
dec
in
fs
sub
jne
lea
sub
cmpl
test
std
int3
shll
adc
add
mov
jae
test
xor
push
push
pop
test
ss
sub
in
int
adc
addr16
dec
sbb
add
in
dec
clc
lahf
jge
push
ret
in
dec
sub
fcmovb
and
mov
sub
jp
movsb
insl
in
or
insl
imul
lock
xor
into
adc
push
shrl
mov
sti
pop
mov
adc
test
adc
fcoml
lret
mov
jns
pop
cmp
adc
aad
mov
aad
add
mov
imul
inc
dec
repz
fnstcw
inc
sahf
ja
dec
dec
adcl
mov
lea
dec
insb
mov
xchg
aad
in
mov
inc
inc
imul
cmp
cmp
fdivrp
adc
sub
loope
cmp
xchg
adc
mov
xchg
pop
lret
aas
imul
in
jnp
lret
and
into
cli
xor
pop
std
sub
xchg
loope
push
cmp
xchg
lods
mov
mov
add
call
add
xorl
xor
cmp
fnsetpm(287
adc
test
adc
dec
add
pop
das
mov
pop
push
fdivl
dec
fidivrl
ja
std
bound
hlt
pop
test
pop
cmp
aas
aas
loopne
loop
fs
shr
fs
push
pop
test
sbb
inc
bound
jp
xor
and
mov
dec
outsb
sbb
xlat
sub
push
sbb
cltd
mov
sbb
test
fstpl
push
cmp
icebp
pushf
hlt
dec
in
sti
mov
jno
in
adc
in
mov
xchg
sbb
push
dec
in
push
in
jnp
pop
xchg
jge
orb
les
iret
rcr
je
es
in
into
aad
xlat
icebp
sub
sbb
pop
cli
int
sub
mov
or
in
adc
bound
insb
xchg
sub
in
fnstcw
jno
pushf
je
pop
arpl
lods
addr16
in
dec
in
fnstcw
imul
push
stos
dec
push
push
ljmp
dec
push
mov
push
cld
mov
rcr
push
add
int3
stc
in
arpl
iret
in
aad
push
mov
inc
in
xor
pop
frstor
cmp
sub
cmp
mov
cmp
pushf
imul
adc
in
pushf
mov
push
push
inc
popf
jno
incl
out
push
cli
ss
add
sbb
stos
push
mov
cmp
fisttps
test
sub
push
push
in
or
xchg
adc
push
jno
cmc
inc
mov
pop
mov
xorb
or
lods
push
ret
adc
movsl
insl
cmp
pop
or
int
mov
jmp
mov
leave
jmp
xchg
stos
mov
dec
aam
mov
add
in
fs
fldcw
popa
dec
lcall
pop
in
loop
popf
dec
jl
int3
les
lds
lret
int
ret
mov
mov
lods
jge
push
test
lret
cmc
push
icebp
dec
jno
lcall
aad
xchg
in
dec
lcall
pop
jmp
inc
inc
add
cmpsl
shrb
imul
lret
add
dec
int
xchg
imul
dec
stc
in
roll
sbb
xchg
pop
push
aas
aad
add
testl
xchg
xor
idivl
fs
mov
ja
mov
inc
xor
dec
push
sub
jnp
xlat
push
xchg
cld
dec
or
sub
mov
xchg
push
inc
lret
mov
test
sarl
jl
dec
sbb
inc
leave
cmp
mov
xorl
loopne
inc
sub
add
mov
jnp
sub
addl
nop
inc
or
fs
cmc
pop
insl
shll
add
ss
sub
inc
hlt
cmp
jns
cmp
ljmp
sbb
jbe
pushf
in
jne
and
movsl
arpl
scas
and
out
dec
adc
mov
adc
push
xchg
jnp
shl
inc
cli
or
jle
inc
into
jmp
or
cmp
xor
rcr
bound
or
or
imul
and
scas
outsl
fs
ja
mov
std
mov
jo
mov
mov
sbb
imul
mov
xchg
in
push
inc
mov
repnz
mov
sti
int
sub
in
rcl
mov
sti
into
mov
add
jl
lret
cmp
out
jmp
add
add
push
xor
daa
fildl
int
dec
pop
dec
ret
cli
in
fnstenv
mov
movsl
mov
leave
int
or
jno
and
fwait
xchg
iret
or
shr
inc
in
fsubs
stos
stos
loopne
scas
push
in
aas
loope
pop
dec
adc
sbb
mov
lds
pop
adc
aaa
xchg
mov
movsb
ljmp
dec
pop
repz
jne
ljmp
mov
js
jne
int
mov
add
adc
cmp
or
dec
inc
fs
loopne
mov
mov
ffree
cltd
xchg
fdivs
dec
je
sbb
add
movsb
inc
dec
test
fdiv
ss
mov
sti
jmp
pushf
push
into
in
minps
call
fdivl
cltd
xchg
pop
jg
xchg
mov
sarl
in
lea
outsl
mov
add
sbb
xor
jbe
jmp
inc
cmp
in
adc
lds
mov
in
sub
repz
jne
adc
int3
out
dec
pop
roll
add
xchg
in
fbstp
inc
push
movsb
dec
xchg
es
cmc
inc
int
sub
arpl
std
ret
inc
xor
sti
xchg
and
jns
leave
or
ljmp
xchg
insl
pop
adc
rorb
push
mov
lcall
in
int3
inc
cli
dec
cmp
out
lods
pop
pop
shl
in
xchg
insl
shl
nop
pop
push
inc
pop
sub
add
scas
lret
aad
add
lret
movsb
adcl
adc
in
int3
lcall
and
jnp
sbb
je
setge
loope
xchg
cmc
xchg
bound
in
push
cld
push
int3
jns
in
sti
cmp
cmc
repz
in
inc
cmc
mov
xchg
dec
fsubrs
fmull
sbb
lea
imul
dec
pop
aad
or
jbe
cs
test
sbb
fisttpll
mov
dec
inc
jg
pop
les
pop
adc
cs
mov
sbb
jge
pop
sub
push
push
int
jnp
cld
call
xor
pop
pop
into
leave
and
int3
and
jne
sbb
subl
add
fs
insl
lods
xor
push
insb
push
cmp
or
scas
mov
test
pop
rclb
repnz
lock
inc
adc
jecxz
lock
or
popa
or
and
aaa
repnz
das
fdivrl
bound
aaa
push
adc
add
xchg
cmp
sbb
inc
mov
ja
mov
mov
test
ficompl
mov
xor
cmp
test
std
rolb
mov
hlt
mov
mov
loope
stc
mov
jg
fsubs
call
add
hlt
adc
aad
mov
mov
sti
stos
push
or
sub
rorb
mov
fwait
lcall
sbb
stc
mov
inc
mov
pop
add
cmp
mov
mov
xchg
or
adc
in
std
ret
sbb
test
inc
das
bound
fsubl
fadds
dec
pop
inc
mov
push
enter
xchg
shrb
dec
mov
decb
arpl
int3
int3
xchg
insb
mov
sbb
or
xor
lods
inc
inc
loope
test
cmpsb
dec
add
ljmp
and
das
xor
lea
dec
xor
pop
jmp
jb
fwait
addr16
das
push
inc
cmpb
push
sbb
push
lcall
insb
ficoml
fs
sub
incb
insl
mov
adcl
pop
push
loop
dec
cmpsb
in
sarb
nop
jae
mov
in
mov
ret
and
negl
stc
icebp
and
fmull
inc
subb
pop
std
cmpsl
add
mov
sub
mov
loopne
inc
movsl
cmpsb
xor
ret
sti
xor
sub
cmp
mov
xchg
test
jge
int
and
jg
push
pop
test
lock
std
jbe
lret
pop
add
push
mov
popa
adc
pop
inc
lret
mov
int3
add
push
lret
add
jg
faddl
ljmp
mov
sbb
movsl
mov
pushf
pop
fxch
pop
fisttps
cmc
push
in
fiaddl
movsl
sarb
icebp
add
arpl
lock
pop
and
movsl
fcmovu
popf
jp
repnz
aad
inc
and
mov
enter
popf
fadds
cmp
jbe
sbb
js
and
inc
std
dec
fwait
pop
sti
fdivr
loopne
adc
xor
loop
daa
sub
std
sub
movsb
movsl
add
xchg
dec
xor
xchg
stc
cmpsl
pop
movnti
aaa
adc
inc
outsl
inc
into
outsb
pushf
std
lret
and
fildl
ss
dec
dec
js
jge
in
sub
xchg
in
pop
sub
mov
inc
pop
iret
js
dec
lods
push
clc
and
xchg
in
pop
xor
clc
in
xor
sub
add
rorb
fcoms
lea
adc
sahf
js
fcompl
inc
push
pop
mov
push
call
mov
push
push
xor
lcall
je
popf
shlb
les
fstpt
outsb
mov
aad
ss
shlb
mulb
sbb
test
push
jg
pop
jmp
cmc
push
je
loope
mov
sub
dec
mov
in
popf
pop
fs
lds
add
in
cld
test
in
add
cmc
testb
mov
fstp
jl
std
aam
in
pop
in
enter
fstp
aam
cld
jp
in
int3
mov
adc
xor
in
loope
cltd
je
mov
rclb
lret
ret
test
xchg
in
daa
cmp
dec
cmp
in
jnp
out
lds
dec
inc
mov
loope
xchg
in
mov
aaa
in
add
lahf
sbb
push
mov
dec
out
xor
xchg
push
and
add
in
int3
fidivrl
lea
scas
popf
daa
dec
dec
ljmp
jg
xchg
push
mov
cmpsl
inc
sbb
in
arpl
mov
xor
cmpl
cmp
push
cmp
and
imul
repz
sbb
pop
in
push
sti
in
pop
push
sbb
in
arpl
xchg
sbb
in
jle
sbb
in
js
or
sub
mov
jecxz
lcall
std
xchg
jle
mov
shr
xor
sub
aam
dec
cli
or
outsb
sbb
test
popa
mov
cmp
pop
dec
jle
adc
and
cs
repz
add
lcall
cld
clc
mov
das
lods
dec
dec
fs
sbb
scas
mov
insl
ret
push
dec
mov
std
int
sub
pop
or
dec
movsl
and
rcrl
dec
shrb
inc
lods
cmpl
loope
imul
leave
mul
popf
test
pop
ja
add
mov
in
test
sahf
cmp
mov
mov
mov
ss
fstpl
in
pushf
mov
leave
mov
in
es
lret
lods
ja
lea
movsl
and
jns
cs
and
xor
lea
mov
nop
xchg
aad
push
leave
adc
sti
jecxz
add
sha256msg1
ss
jbe
sub
imul
fwait
adc
aad
push
in
xchg
dec
jb
inc
scas
xchg
aad
test
pop
lahf
cltd
push
pushf
dec
lods
das
aam
pop
aam
xor
in
mov
sar
ss
push
mov
dec
stos
jns
andb
shrl
jne
insl
shl
mov
cltd
mov
inc
dec
xchg
addr16
into
lcall
xchg
fldenv
leave
out
mov
test
mov
test
arpl
sub
lret
sbb
jmp
sbb
cld
sbbl
dec
testl
add
mov
xchg
jne
xchg
mov
daa
dec
test
pop
jnp
in
lret
pop
int
push
push
in
popf
in
repz
loop
aad
adc
mov
scas
aad
lods
mov
pop
or
orb
int
mov
push
je
lods
stos
mov
test
xchg
in
out
in
lds
fucomp
jecxz
leave
add
pop
std
pop
sbb
push
push
xchg
jne
mov
jp
in
leave
mov
stos
sbbb
inc
fistpl
call
leave
sbb
lahf
jno
jle
in
out
int
arpl
mov
sti
cmp
les
mov
adc
fldenv
das
mov
fcomps
jne
jl
mov
and
fstps
fsubr
mov
add
or
aam
bound
jne
pusha
dec
sbb
mov
test
mov
shll
scas
call
pop
mov
div
lods
cmpsb
sbb
addr16
int3
shr
dec
fwait
pop
mov
mov
jne
arpl
mov
cmp
push
dec
fidivrl
int3
shll
pop
jp
jge
mov
in
and
mov
shll
xchg
jbe
lahf
neg
jbe
ss
aad
mov
push
cmp
negl
sub
push
fwait
ljmp
scas
jns
rolb
lea
ficompl
inc
inc
mov
fs
add
xchg
push
dec
and
xchg
pop
int
push
call
sbb
shll
arpl
jmp
pop
sti
fists
mov
ljmp
jp
fcomip
mov
out
pop
popa
xchg
or
sarb
bound
movsb
aad
lahf
push
fbstp
xchg
inc
lahf
leave
pop
loop
cld
lds
jmp
adc
jmp
mov
loop
push
aas
rclb
jmp
xchg
fdivl
or
in
ret
int3
cmp
test
jne
lcall
and
aam
dec
ret
loopne
inc
jg
fildll
cltd
mov
lret
xchg
pushf
addl
mov
int
or
add
sub
inc
dec
sbb
cli
daa
aas
rcrl
cmp
xor
int3
xchg
pushf
push
jne
xlat
in
hlt
xchg
imul
cmp
loope
xlat
jmp
xchg
push
cmpsb
push
adcl
push
adc
or
inc
lods
add
jp
mov
repnz
iret
sub
push
pop
loopne
push
mov
add
mov
add
push
xchg
lret
xor
mov
and
xor
add
leave
sbb
mov
push
sahf
test
repnz
inc
sbb
mov
push
jl
jl
dec
push
loop
jmp
jbe
sbb
dec
aaa
adc
sti
in
adc
mov
or
dec
push
rolb
mov
ret
sbb
shll
movsl
sbbb
cli
dec
scas
or
adc
lcall
push
sub
sarl
or
inc
cltd
out
adc
mov
decb
xchg
in
inc
cmp
ja
popf
movsl
jns
mov
lds
lea
cmp
jmp
stos
jmp
cs
call
or
popa
fmul
repnz
jmp
fcomip
popf
in
clc
jecxz
fldcw
mov
in
or
cmp
popa
pop
push
stos
icebp
and
std
fs
dec
stos
lds
mov
pop
inc
fcom
sbb
push
lods
fisttpll
clc
movsb
icebp
xlat
in
jne
xchg
cltd
add
repnz
jecxz
and
fldcw
mov
inc
inc
insb
movsb
mov
lds
push
push
jmp
sub
add
and
fsubl
adc
cld
mov
cmp
mov
lret
jge
xchg
jne
test
xor
or
fs
shlb
push
pop
and
xchg
mov
repnz
mov
mov
jp
int3
inc
std
adc
ss
ret
add
mov
cmp
jg
dec
aam
mov
cmp
mov
mov
pop
sbb
mov
xor
ret
loop
dec
nop
in
inc
and
loopne
xchg
mov
dec
mov
js
mov
aam
mov
mov
jecxz
cmp
lret
mov
mov
and
int3
ret
movl
test
mov
push
pusha
jecxz
add
fiadds
gs
inc
jl
sub
stc
mov
cltd
mov
and
mov
int
xor
test
hlt
xchg
movsl
sbb
mov
inc
out
cmc
stos
inc
sub
add
pop
scas
xchg
jbe
gs
inc
test
in
xor
aam
mov
ja
aam
adc
mov
or
or
dec
xchg
test
cwtl
add
cmpsb
and
and
jno
fsubl
xchg
scas
aam
xchg
ret
aas
imull
sbb
sbb
xchg
mov
bound
ficompl
mov
fnstsw
fldl
xchg
test
xlat
insb
das
xor
push
hlt
lods
sbb
sub
cs
and
psubd
push
aam
repnz
add
push
fs
jmp
or
mov
adc
and
popf
mov
loopne
mov
insl
and
and
cwtl
daa
adc
and
jp
and
and
mov
dec
loope
or
inc
popf
or
pusha
inc
adc
dec
pop
push
mov
nop
mov
hlt
mov
mov
inc
xchg
jecxz
stos
push
imul
sub
andl
les
stos
and
loope
cmpsb
mov
mov
push
push
jmp
test
jae
js
pop
mov
jecxz,pn
jo
call
sbb
sub
mov
shll
inc
push
shr
sub
push
sbb
std
lds
aam
push
inc
fisubrl
gs
bound
in
and
mov
pop
xor
cmpsb
xchg
cwtl
jecxz
clc
dec
lret
push
mov
in
push
stos
andb
sti
les
rorl
ret
sbb
in
loopne
test
cvtps2pi
mov
sbb
mov
or
clc
mov
push
shll
push
lds
mov
ss
adc
insb
or
sub
pop
shr
xchg
xchg
sti
and
int
movsl
pop
cld
cmc
aad
test
insl
rcll
lds
cltd
popf
in
in
rol
lcall
sub
imul
insl
dec
sbb
cld
pop
jle
sub
sarb
add
and
jmp
fdivp
push
int
lods
pop
cld
popf
in
pop
xchg
int
movsl
inc
fcmovu
cltd
lcall
jge
xchg
gs
lcall
mov
add
or
mov
lcall
inc
mov
orb
aad
sarb
pop
add
lock
pop
cmp
hlt
std
adc
dec
cmpb
add
push
adc
mov
popf
sbb
adc
into
cmp
into
lahf
cmpsl
daa
inc
and
sub
das
gs
xor
add
popa
aam
in
or
mov
pop
aad
mov
mov
ja
push
icebp
xor
setbe
pop
icebp
ds
mov
lcall
cld
loope
mov
jmp
sub
cli
jge
inc
sbb
imul
fwait
inc
add
mov
fs
and
push
push
jo
andnps
lods
icebp
lods
xor
and
shrb
pushf
mov
xchg
mov
push
mov
lods
mov
xchg
mov
or
mov
imul
orl
test
into
icebp
cmp
ret
jmp
cs
out
mov
mov
pop
fcompl
add
mov
mov
scas
iret
lret
in
cmpsl
sub
mov
fs
inc
mov
inc
push
cmp
adc
push
or
mov
test
pop
mov
bound
sbb
cmp
gs
mov
scas
jle
fucom
mov
fbstp
jns
or
call
cmpsb
movsb
jno
jp
jb
loop
mov
les
loopne
mov
repnz
xchg
xlat
xchg
mov
js
xor
and
lret
lahf
sub
sub
fcompl
add
sbb
mov
lods
cltd
stos
lret
aad
fwait
sub
mov
add
call
pop
cmp
xchg
pop
xor
es
lods
fsubl
std
inc
inc
rclb
mov
push
mov
cli
dec
xchg
inc
in
pop
ljmp
fnstenv
fnstenv
mov
cmp
lods
lcall
out
loope
movsl
xchg
ffreep
out
fdivl
and
cmp
xchg
lret
mov
stc
rcl
inc
cmp
fucom
bound
push
int
jmp
aam
aad
clc
add
jno
cli
daa
jnp
test
stos
icebp
jmp
out
rcrl
lods
not
jmp
mov
call
cltd
ds
icebp
nop
in
rolb
xchg
dec
xor
jbe
sub
inc
popa
and
jmp
ret
inc
mov
cmc
fs
add
cmc
les
stos
xchg
lock
fcoms
imul
fiaddl
popa
dec
xor
lcall
or
stc
mov
mov
inc
inc
mov
cmp
jb
and
jecxz
or
xchg
sub
std
fisubl
fbstp
leave
mov
jnp
lods
push
das
dec
mov
mov
mov
cmp
lcall
sarb
jle
loop
cwtl
enter
xor
mov
clc
jns
into
xorl
fstp
cmp
mov
lcall
fcomps
test
dec
lea
mov
sahf
cld
lret
cmp
pop
add
adc
jge
xchg
jne
jo
or
mov
popf
adc
jl
adc
rorl
jo
jle
int
dec
test
or
std
arpl
mov
xchg
add
rorl
xor
mov
mov
call
sbb
push
adcb
mov
xchg
xchg
lcall
fwait
jle
lret
sub
mov
jge
rcrl
shrl
rorl
inc
sbb
mov
sti
in
mov
cmp
dec
cmpsl
add
adc
dec
xchg
movsl
dec
sub
cmc
loop
dec
inc
add
mov
sub
neg
cltd
xchg
fdivp
lods
fnsave
cs
ja
jmp
sub
mov
leave
mov
jae
or
in
loopne
sub
xchg
fdivrp
shll
push
popa
push
mov
bound
cs
xchg
sti
pop
lods
pop
push
mov
or
sub
or
add
mov
es
popf
pop
aaa
mov
inc
pop
lret
fdivl
bound
add
jae
inc
push
mov
popf
in
jno
adc
xor
nop
add
aaa
inc
testl
or
xchg
jne
mov
fstps
jmp
mul
or
scas
in
das
sbb
aad
jle
in
ljmp
int
lret
lret
mov
fcmovnu
xor
lret
pop
cmp
cltd
call
scas
dec
stos
jecxz
repz
push
aaa
adc
imulb
fnstsw
push
stc
mov
sbb
mov
xchg
mov
cmp
cmp
stc
loop
push
rcl
in
das
push
cmc
call
xor
xchg
clc
or
add
insb
jnp
pop
lods
bound
pop
xchg
inc
dec
jo
xlat
aad
push
out
sbb
iret
in
movsl
xchg
or
sarb
jns
out
outsb
xchg
fnsave
cltd
sub
and
push
cwtl
dec
inc
scas
sarb
pop
push
lret
sbb
fwait
lret
aaa
cmpsl
pop
roll
push
jno
ret
jg
test
dec
sub
ss
out
das
add
es
adc
aam
cld
pop
add
push
and
outsb
das
pop
and
mov
xlat
repz
lret
fdivl
hlt
jno
popf
adc
loopne
movsl
mov
or
pop
cmp
hlt
scas
add
ja
dec
lds
xchg
test
data16
shrb
iret
popa
pushf
dec
lahf
rorl
sbb
xchg
and
lret
or
add
addr16
sub
add
push
sti
jo
shrl
jne
cmp
fs
cmpl
movsl
lret
sarl
sub
adc
rolb
ret
fldt
aad
out
loope
into
mov
or
jnp
sub
cmp
mov
nop
inc
sub
gs
jb
push
in
fcoml
cs
push
jo
loop
movsl
and
sub
push
cmp
les
test
in
sarl
xchg
push
xor
or
dec
in
enter
mov
stos
ret
xor
or
scas
les
shll
test
movsl
mov
sbb
pop
cli
sub
ret
sbb
rorb
and
jecxz
les
loopne
cmp
jae
jnp
pop
adc
adc
in
mov
mov
mov
faddl
inc
ret
fisubrl
xor
les
bound
xchg
inc
hlt
xchg
mov
ret
ss
cmc
ljmp
ja
push
les
clc
or
int
ret
fcomip
fs
aam
add
lret
jle
or
push
enter
push
add
andl
imul
push
or
pop
push
xchg
into
or
mov
push
pop
into
push
cmpsl
idivl
xor
cmp
mov
xor
pop
jbe
sbbl
or
in
lret
in
sbb
filds
push
arpl
pushf
stos
xchg
leave
fs
or
mov
arpl
loope
and
cli
flds
std
fwait
pop
test
andl
sub
call
jns
mov
leave
sub
addr16
inc
imul
dec
cmp
int
out
ret
inc
aam
jmp
jle
mov
aam
imulb
xor
movsl
pushf
aaa
divb
mov
xlat
jecxz
mov
out
xchg
xchg
jge
dec
xlat
fstpt
xor
sub
rorl
shlb
cmp
pop
outsb
test
mov
or
std
fidivrs
xor
call
xchg
push
mov
mov
popf
fildll
adc
pop
leave
sbb
iret
and
cmpsb
xor
add
fiaddl
pushf
call
jge
jecxz
cmpsb
fsubl
clc
mov
xor
lods
popa
cmpsb
fdiv
xor
ljmp
fsubrl
in
dec
sar
dec
and
popf
jle
sub
testl
adc
push
dec
test
or
fwait
les
roll
mov
adc
aad
imul
xchg
sbb
rcrl
xchg
jl
adc
fwait
mov
dec
lret
lcall
call
sti
in
sub
xor
fcomp
in
test
xchg
dec
lcall
out
movsb
jnp
bound
out
inc
aaa
push
push
rorl
clc
iret
clc
or
test
and
lcall
loope
xchg
outsl
xchg
daa
in
push
pmulhw
sarb
in
sbb
jne
mov
shll
add
pusha
or
test
jno
inc
sbb
ljmp
in
sbb
insl
scas
inc
sahf
repnz
loope
push
cld
das
sbb
fstpt
mov
pop
int
popf
add
or
testb
xlat
loopne
or
rcll
mov
pop
xlat
fsubs
jbe
pop
ljmp
fcoml
pop
fmul
shlb
mov
dec
pop
loopne
hlt
out
mov
xorb
test
ss
hlt
and
pop
cmc
arpl
sahf
push
xlat
cmp
cmpsb
fsts
sqrtps
xor
xor
dec
test
es
fadd
and
sbb
push
in
fstpl
inc
jmp
or
adc
add
fldcw
pop
std
or
mov
sbb
add
jo
push
push
add
cmp
jno
lret
cmpsl
in
dec
cmp
popf
sbb
call
adc
outsl
sub
lret
sti
sub
cmp
insb
movsl
push
mov
loop
and
fimuls
jo
mov
mov
cltd
test
mov
mov
jecxz
mov
call
sbb
mov
hlt
pusha
leave
sbb
fwait
xchg
out
push
jns
mov
jge
bound
mov
lcall
mov
stc
iret
fildll
sbb
aad
int3
push
gs
cmc
push
mov
imul
filds
cs
jmp
es
insl
add
nop
addr16
popa
jge
mov
lret
mov
loopne
in
outsb
jecxz
push
in
adcb
lret
pop
leave
std
fxch
ljmp
cli
pop
cmc
mov
int3
adc
mov
cmp
aad
inc
call
fstpt
inc
push
ss
lret
pusha
in
addl
rcrl
xchg
mov
sbb
or
sub
mov
int3
test
fdivs
push
shl
sbb
xchg
jmp
lret
cmpl
js
mov
adc
sbb
fs
out
stos
movsb
xchg
inc
ljmp
dec
ret
ret
jge
fstps
add
fnsave
sub
faddl
rolb
in
push
or
out
push
and
loop
out
jmp
jmp
or
test
insl
mov
stc
lock
jbe
shr
das
and
and
ficompl
push
fdivp
nop
dec
and
fisubl
out
test
out
fstpl
sub
stos
mov
aaa
iret
xor
adc
sti
test
jno
pop
xchg
ss
mov
divl
fists
mov
sbb
lds
add
fcmovbe
jno
mov
fisttpl
repnz
test
push
es
fstp
jbe
mov
loopne
pusha
cmpsb
lcall
dec
cmp
hlt
sti
imul
loopne
pop
nop
ret
jmp
mov
add
fldenv
pop
nop
dec
das
into
addr16
aam
sbb
xlat
jge
pop
push
xchg
rcll
xchg
xchg
mov
out
fstpl
rcl
clc
mov
or
daa
jge
xlat
jmp
int3
cmpl
gs
fadds
lret
sbb
and
mov
adc
push
leave
lods
ljmp
addr16
mov
mov
sub
cmp
iret
dec
lret
or
xor
int3
out
or
mov
int3
imul
dec
psrlw
sti
push
jns
xor
data16
hlt
int3
cs
cli
sti
push
orl
xor
bound
xor
aad
iret
push
mov
xchg
cmp
iret
dec
jae
xchg
leave
and
gs
nop
adc
sarl
mov
movsl
inc
jmp
xchg
in
xchg
mov
sbb
pop
pushf
dec
ljmp
add
and
push
sbb
adc
inc
out
inc
fdivl
cmc
ss
movsb
mov
push
push
leave
mov
or
dec
mov
jae
inc
in
mov
inc
cwtl
jns
shll
std
mov
or
jl
fisubrs
frstor
sub
in
lcall
repnz
adc
ror
stos
inc
test
inc
mov
int
inc
mov
rolb
cmpsb
sub
cltd
push
jle
lret
das
pusha
sub
aad
mov
fldl
in
dec
jo
add
jle
jle
lret
cmp
dec
movsb
xchg
into
iret
mov
aad
jne
jae
xchg
icebp
dec
das
adc
mov
xor
outsb
jne
insw
mull
add
mov
scas
pusha
cmc
gs
std
mov
cmpsl
lea
scas
dec
outsl
dec
sbb
mov
aad
ret
in
mov
arpl
fs
sarl
or
pop
hlt
mov
dec
inc
cwtl
dec
ret
ds
lret
cwtl
xchg
shl
adc
pop
pop
inc
pop
in
cli
sub
lea
shlb
fbld
pusha
push
icebp
bound
sbb
mov
or
sahf
int3
mov
js
and
js
add
add
push
jmp
fucomi
into
fldl
gs
mov
sbb
inc
xor
cwtl
mov
stc
xchg
inc
jbe
inc
or
rorl
dec
aas
push
std
xchg
jmp
nop
or
jb
sub
dec
xchg
into
lret
jbe
xchg
xor
mov
std
xor
or
sbb
xchg
dec
adc
xchg
pop
or
aaa
stos
jl
cmpb
mov
push
in
push
sub
dec
xor
cli
inc
ret
leave
pop
jbe
call
aam
out
mov
cmp
scas
jne
and
xchg
test
out
inc
movsl
cmp
shrl
pop
cmpsl
mov
pop
imul
loopne
clc
adc
or
cs
lahf
aad
cltd
add
popf
mov
mov
add
mov
test
adc
movsb
add
pop
mov
fldl
lret
iret
pop
ss
in
mov
mov
bound
loope
sbb
sbb
dec
and
sbb
sub
fcomps
or
pop
adc
das
mov
xor
aam
mov
shl
jle
sub
stos
mov
or
cmc
jae
repz
mov
push
loop
in
nop
xor
xor
loopne
mov
pop
aam
push
pop
push
cwtl
pop
xor
repz
push
and
movsl
pop
jo
icebp
iret
mov
sub
push
mov
xorb
or
sbb
or
mov
sbb
push
das
cmp
and
testb
jne
xchg
mov
add
xchg
sbb
hlt
xchg
cmp
lock
pop
aad
rcr
jecxz
adc
mov
test
inc
punpckhbw
add
pop
sub
ficompl
mov
add
idiv
cmp
mov
cltd
pushf
lret
aad
int
xor
mov
push
cmp
cmpsl
mov
test
cld
mov
sub
rcll
or
incb
sarl
int3
insb
mov
outsb
xor
repnz
test
pop
cli
les
popf
and
ljmp
addr16
into
mov
jno
adc
rorl
push
mov
or
scas
mov
push
inc
call
inc
arpl
stos
fisubrs
and
sbb
add
adc
fs
fildl
pop
pop
lret
xchg
xor
xchg
jecxz
jg
dec
and
cld
not
push
inc
mov
mov
fdivl
sub
jle
int
xchg
sahf
inc
and
xchg
jae
call
gs
btc
out
test
cmp
jmp
xchg
aad
cmpsl
jge
ret
cwtl
inc
xor
sbbb
adc
dec
adc
mov
pop
dec
sub
adc
xchg
clc
add
sbb
cmpsl
popf
or
gs
cmc
jmp
negb
lcall
sub
pop
jl
insl
adc
fdivp
ljmp
shlb
adc
xchg
jae
outsb
cmp
cmp
fnstcw
shlb
orb
fldl
scas
or
fucomp
jl
push
jecxz
and
addr16
popa
scas
pop
xchg
sbb
notb
int3
das
sti
sbbl
leave
iret
lcall
out
int3
sbb
sti
or
test
push
in
fildl
dec
into
pop
jne
mov
jl
popf
pop
popf
add
cwtl
in
pop
add
pusha
lcall
in
adc
ja
xor
dec
lods
popf
fstpt
lds
mov
adc
add
mov
pop
popf
pop
pushf
cmp
sub
fcompl
das
cmp
jl
in
call
ljmp
movsl
shlb
clc
fstpl
int
ja
movsb
test
cmpsl
out
sahf
or
loope
inc
xchg
xchg
sbb
sub
sub
sbb
mov
shlb
jno
cli
notb
push
and
clc
fwait
fwait
or
vpaddd
xchg
cmpsb
jmp
xchg
add
lods
aam
or
bound
mov
xor
mov
push
loopne
cmp
lods
and
pop
fcom
cmpsb
pop
or
xchg
jp
in
nop
nop
mov
stc
loop
mov
dec
in
movsl
add
int
lahf
mov
sti
mov
es
testl
or
inc
cwtl
adc
jae
jmp
inc
xchg
nop
ljmp
scas
mov
call
mov
push
not
mov
lret
mov
jbe
mov
adc
repnz
loope
xchg
xchg
pusha
mov
sbb
inc
fdivl
aam
fs
rorl
fs
cmp
shl
xchg
addb
fdivs
mov
sar
rclb
testb
sarl
jge
cld
pop
cmc
icebp
sub
ret
imul
ds
leave
bound
in
rorb
mov
add
inc
arpl
push
jne
and
lret
and
push
jo
pop
mov
jo
jle
aam
cmp
xchg
xor
outsb
or
jmp
aad
mov
fnclex
mov
test
sbb
mov
push
push
hlt
aaa
push
mov
mov
lahf
or
icebp
cmp
scas
mov
cmpsb
push
cmp
and
mov
mov
or
ljmp
add
xor
xor
sbbb
bound
mov
jecxz
popa
jbe
imul
stos
mov
push
fdiv
sub
cmp
mov
pushf
fstl
stc
lret
push
data16
int3
or
out
push
fisubl
cld
ja
xor
jbe
cmc
xchg
inc
imul
jne
ror
sbb
lcall
movsl
cli
add
stc
shl
test
rcr
aam
in
fnsave
cltd
stc
fldl
lret
dec
mov
je
mov
ljmp
xor
lret
mov
fnsave
fisubrl
fs
enter
sub
pop
xor
call
insl
push
lcall
movsb
push
lahf
loope
dec
jecxz
dec
jl
pusha
call
aam
inc
pop
cmp
test
or
rdpmc
sbb
insl
adc
or
push
ss
enter
mov
in
in
stos
ljmp
cld
stos
fmuls
mov
cmpsl
fidivl
mov
dec
mov
lods
leave
fstpt
shrb
stos
xchg
xor
imul
testl
incb
sbb
dec
outsl
sbb
push
mov
das
jns
push
pop
jns
or
arpl
mov
lods
mov
aaa
and
aad
push
push
or
fildl
scas
sbb
lahf
push
lret
popf
and
xor
lea
sub
mov
jmp
popf
int
jecxz
jmp
sbb
pop
hlt
icebp
scas
and
loopne
mov
ljmp
xor
fdivl
adc
outsl
fidivrl
xchg
push
imul
mov
loope
inc
push
inc
inc
pop
in
xchg
jmp
jnp
cs
fwait
mov
aad
sti
jb
movsl
loop
cmp
jno
movsl
dec
sbb
pusha
xor
cli
xchg
sbb
jmp
inc
popf
cltd
std
scas
lret
imul
fs
pop
jge
das
jmp
call
std
mov
lret
fs
add
adc
ret
aaa
mov
jg
mov
mov
imul
movsl
cmc
push
loop
sbbl
jmp
xor
mov
cli
add
dec
jne
mov
mov
cltd
and
dec
xor
movl
stc
fiadds
jg
mov
or
aad
lcall
sub
push
ds
mov
testb
sub
inc
mov
imul
fs
inc
mov
cld
aam
in
mov
xor
aaa
pop
fldl
repnz
call
aad
cld
mov
loope
arpl
pop
push
jg
call
sbb
xchg
mov
add
pop
shr
mov
mov
sub
int3
loop
in
dec
jmp
int3
pop
addr16
in
fisttpl
fucomp
test
fisttpl
lcall
stc
test
aaa
and
pop
dec
mov
fnstenv
adc
gs
sbb
int3
inc
or
and
test
jmp
sti
insb
loope
mov
pop
fists
out
add
inc
inc
sbb
test
addb
jmp
hlt
sbb
fistpl
fnsave
jecxz
popa
sbb
cmp
mov
pop
nop
inc
and
popa
mov
mov
or
nop
and
out
sbb
mov
dec
xlat
xchg
xchg
inc
stc
aas
int
lods
movsl
fs
sub
subb
inc
push
aaa
push
or
inc
iret
addb
jae
in
dec
shll
mov
push
dec
mov
loopne
mov
cmpsl
icebp
jb
xorb
push
fs
mov
out
cmpsl
in
mov
jmp
idivb
mov
mov
fldt
lods
call
fwait
pop
sbb
mov
adc
inc
lahf
sub
call
jmp
lds
mov
insl
mov
push
fisubrs
jb
inc
mov
jmp
xor
loopne
fxam
mov
sbb
testb
mov
jle
ljmp
repnz
push
mov
mov
and
int
jmp
repnz
xor
xchg
rolb
bound
in
sbb
out
mov
or
xor
ljmp
or
sbb
mov
and
aad
mov
jo
stc
cld
das
jb
in
mov
iret
mov
icebp
xchg
or
std
imul
lret
add
jno
pusha
mov
or
inc
jo
dec
iret
imul
push
icebp
ds
loop
lret
scas
daa
pushf
arpl
mov
sti
dec
test
and
push
imul
xor
ja
add
dec
lret
lret
mov
scas
jl
push
cltd
divb
fldcw
movsl
lret
adc
cmp
scas
fnstcw
scas
or
jns
pop
stos
xor
loope
scas
pushf
fld
inc
stos
mov
cmp
lock
xor
repz
xchg
jle
xchg
mov
loop
cmp
mov
jg
call
sarb
jnp
or
mov
dec
mov
jmp
dec
shll
jmp
sbb
aam
loopne
push
clc
ret
dec
xchg
scas
shll
fists
setbe
xchg
jp
fnstcw
push
int3
repnz
in
dec
lock
fdivrs
repnz
jecxz
loopne
loopne
jp
mov
loop
add
jl
fsts
lret
fmull
int
sti
sbb
adc
mov
sbb
popf
popa
inc
xchg
ja
jns
cmp
jbe
ja
sub
cmp
movsl
inc
jnp
mov
stos
jns
dec
add
mov
fstpt
popa
mov
or
das
data16
pushf
xchg
dec
push
add
jmp
in
ret
add
mov
out
add
jge
jbe
lods
imul
in
xchg
popa
dec
mov
or
imul
push
stos
test
inc
adc
add
push
fwait
mov
fwait
inc
pop
xchg
mov
mulb
mov
jne
xchg
int
into
pop
inc
cmp
jns
ljmp
cmp
pop
scas
sub
aad
test
mov
mov
lock
or
fildll
add
dec
andl
leave
out
cld
jno
jl
inc
jg
add
frndint
loop
add
inc
inc
in
cltd
cld
mov
cltd
stos
jae
fsubs
int3
mov
and
push
or
roll
iret
nop
imul
lret
mov
cmc
inc
push
jo
inc
mov
repz
fprem
in
int
fs
mov
xor
sarl
stc
test
sbb
ljmp
lahf
jne
push
dec
movsl
in
fistpl
push
lret
sbb
je
dec
or
add
out
xor
mov
add
dec
mov
adc
push
add
xchg
xchg
outsl
mov
insl
nop
sub
int
rcrl
jg
fstp
iret
lret
mov
xor
ret
fldt
or
sbb
push
std
push
lret
out
xchg
sub
lret
fwait
addr16
xchg
sub
push
mov
mov
cmp
loope
js
test
pop
ja
arpl
mov
rcll
popa
adc
test
in
clts
sahf
loop
int3
in
sbb
add
fstpl
mov
subl
repz
jmp
fs
or
arpl
jp
pop
enter
pop
add
or
mov
jo
es
icebp
jb
pop
cmp
cmp
imul
arpl
and
sub
out
movsl
ja
cmp
gs
es
mov
sub
fsubs
dec
insl
pop
and
scas
jnp
repnz
test
cltd
sbb
mov
shlb
das
mov
loop
inc
mov
mov
jp
sti
fsubs
aaa
push
test
aaa
test
sbb
repnz
aad
ljmp
aad
adc
xlat
xor
add
add
popf
adc
imul
cmp
or
mov
dec
push
in
xlat
cli
jmp
sar
dec
in
frstor
add
jnp
push
loope
xchg
cmp
inc
mov
jg
fsubl
cmp
inc
int3
push
pop
shrl
and
lret
xchg
fcoml
cmp
ja
and
mov
mov
sub
les
fsubl
daa
addr16
imul
fbld
mov
push
adc
xchg
dec
mov
mov
fisubs
mov
mov
lds
ja
cmp
aaa
inc
lret
iret
mov
and
gs
imul
adcl
shr
dec
xchg
popf
pushf
xorb
xlat
mov
rcll
pop
fisubl
mov
lret
test
inc
add
mov
mov
and
mov
repnz
jge
cli
xchg
in
xor
mov
sbb
and
xchg
push
jae
adc
jge
xchg
push
or
movsl
jnp
xchg
push
inc
je
insb
outsl
mov
sub
out
cmpsb
insb
ja
xor
test
inc
leave
fnstcw
cltd
mov
icebp
scas
lahf
push
imul
sti
sti
fs
xchg
mov
int
cmp
cmpsl
jmp
sub
inc
or
outsb
sbb
ret
loop
mov
jmp
add
push
push
hlt
stos
nop
pop
std
outsb
cmp
sbb
movsb
bound
mov
inc
cs
fmuls
movq
sub
cli
mov
pop
loop
mov
mov
jp
repz
mov
mov
jo
or
push
insl
andb
repnz
lahf
shll
fsubrs
loope
add
mov
cmpsl
fisttps
sub
scas
or
pop
mov
inc
out
pop
hlt
push
mov
inc
pushf
neg
or
pop
xchg
sbb
fisttpl
subb
mov
mov
sub
movsl
jnp
stc
sub
inc
or
loop
push
cmp
hlt
mov
ljmp
leave
inc
das
mov
sarl
add
orl
ret
arpl
sbb
mov
xchg
lret
pop
adc
xchg
xchg
repnz
call
in
movsb
jge
pop
xor
dec
xor
and
lret
cmpb
scas
movl
std
das
fnstsw
mov
int
mov
adc
icebp
mov
leave
rcrl
or
lea
mov
in
into
fs
int
xchg
adc
test
mov
or
cmp
test
jp
adc
mov
sti
pop
cli
pop
adc
cltd
xor
mov
xor
call
jbe
fldenv
jb
cmp
imul
imul
je
inc
mov
out
pop
lds
mov
sbb
add
mov
aam
pop
movsl
shlb
mov
dec
and
outsl
int3
dec
or
mov
sbb
fs
fnstcw
mov
cmpsl
lret
dec
inc
pop
sbb
sub
mov
jnp
jmp
out
mov
push
fsts
jo
sub
nop
aad
xchg
push
testl
loope
xor
mov
mov
pushf
mov
fldenv
ss
popa
add
bnd
sub
jmp
push
or
loop
mov
lock
xor
in
jmp
shl
cs
test
cmp
ret
insl
in
mov
jbe
jno
cmc
lock
lock
jp
adc
xchg
xchg
jno
idivl
movsl
incb
cmp
outsl
mov
test
out
jnp
jnp
hlt
js
test
jp
push
sub
sub
stc
fistl
mov
fwait
daa
loopne
pop
jg
insl
jbe
lods
jp
lds
shrl
xchg
pop
ja
aaa
incb
icebp
fwait
lcall
loop
movsl
ljmp
aad
lahf
cmp
std
pop
add
mov
rcll
mov
icebp
push
fldl2t
push
adc
dec
xor
imul
loop
add
andl
sbb
and
or
in
sub
mov
in
mov
pop
mov
mov
repnz
out
dec
js
lcall
cmp
iret
mov
das
mov
scas
call
inc
and
mov
inc
cmp
sbb
notb
movsl
pop
cmp
inc
fnsave
sbb
lret
scas
std
shlb
jmp
sub
pop
dec
dec
push
dec
pop
pop
inc
je
test
pop
rcll
inc
sub
cmp
imul
xchg
or
loope
mov
out
andb
stc
jge
outsb
sbb
inc
lret
jge
cmp
mov
mov
or
shl
mov
je
pop
xor
sbb
stos
in
mov
jle
push
xor
jbe
popf
out
in
in
add
mov
mov
gs
add
imul
fsubs
mov
sub
clc
aad
test
mov
xlat
aad
out
aad
aaa
mov
jnp
mov
sbb
cmp
mov
je
js
or
adc
lret
mov
or
fcompl
fyl2x
push
inc
sbb
push
jl
jmp
pushf
imul
arpl
push
cmp
jns
test
xchg
pop
sbb
or
insl
repz
lods
mov
jecxz
lods
jno
mov
xor
mov
xchg
ljmp
incb
das
popa
add
pop
leave
jmp
and
mov
into
pop
mov
fwait
fs
xchg
lahf
dec
mov
leave
int
dec
jmp
jl
add
pop
and
pop
and
inc
pop
mov
jns
hlt
pusha
mov
cltd
xchg
ss
fildl
pop
scas
mov
and
adc
inc
xchg
js
mov
roll
mov
lret
pop
mov
sub
inc
out
cmp
fwait
adc
insb
mov
inc
xchg
mov
cmp
test
xchg
xlat
in
pushf
imul
into
ret
pop
aad
cltd
pop
movsb
xchg
mov
xor
jecxz
inc
xor
fsubr
inc
sub
sti
or
test
std
popf
jmp
cwtl
dec
inc
mov
or
hlt
and
mov
fisubl
movsb
xor
ret
mov
imul
ficompl
mov
popa
add
ret
mov
sub
nop
sahf
ljmp
push
dec
pop
adc
mov
mov
jne
add
push
jmp
push
sti
add
gs
jge
pop
out
test
mov
sbb
rcr
decl
fwait
sub
daa
imul
mov
shrl
test
push
ret
push
lret
scas
cmp
or
imul
xor
lahf
pusha
into
movsb
mov
mov
and
or
xchg
inc
or
mov
insl
loope
jl
nop
faddl
jae
out
adc
je
jp
fcompl
aaa
xchg
cli
or
fs
lret
fsubs
vcvtsd2ss
cmp
loop
fs
fldcw
in
add
xchg
add
fists
icebp
fstpt
lret
or
sub
xlat
mov
lea
in
inc
pop
jmp
push
out
cmc
pop
leave
int
std
xchg
insl
add
sub
rcrl
pop
cmp
loopne
sbb
mov
dec
addr16
test
insb
sbb
subl
xchg
push
xchg
adc
xor
lods
cmp
out
mov
pop
inc
aam
scas
fldenv
xor
cld
sbb
jns
aaa
pop
mov
dec
cmp
xor
pop
cmp
fs
mov
pop
add
fneni(8087
xchg
in
mov
in
loope
mov
std
cmpsb
call
arpl
or
jnp
cmp
mov
push
jmp
aad
jmp
lret
hlt
mov
pusha
test
mov
das
sub
mov
cli
push
sbb
fwait
xchg
mov
cmp
xchg
mov
out
xchg
sub
cmp
sub
rolb
or
and
or
mov
sub
and
xchg
std
mov
loop
dec
or
gs
sub
cmpsb
stc
mov
mov
cmpsb
xor
mov
lahf
or
jecxz
mov
inc
outsb
jp
and
mov
jae
dec
mov
sbb
insb
movsl
xchg
in
mov
mov
cmpl
stc
call
fcomip
cmpsb
std
dec
sub
test
negb
jns
mov
pop
mov
stos
hlt
leave
test
mov
out
mov
lret
jl
in
mov
hlt
pop
stos
sbb
pop
out
fs
cmp
int
inc
lds
into
push
adcb
int3
mov
inc
gs
cmp
mov
lret
rcrb
sub
mov
fnstenv
pop
xchg
dec
lods
jo
int3
andb
js
mov
jp
movsb
std
lret
pop
and
mov
inc
rcrl
push
ret
outsb
or
pop
test
inc
cmp
xchg
add
pop
inc
xchg
pusha
xchg
add
sti
iret
cwtl
xor
sti
shlb
nop
jb
decb
xchg
fs
js
adc
sbbl
sbb
shlb
mov
add
push
cs
fstl
test
pop
pop
jnp
loopne
push
xchg
sbb
movsb
aad
test
sbb
scas
popf
xor
and
dec
test
ret
jo
push
adc
popf
inc
dec
in
pop
jne
pop
sbb
push
inc
xchg
jns
es
jae
test
loopne
test
sub
mov
nop
data16
movsl
jb
jp
adc
pop
xchg
add
mov
rcrb
shr
dec
mov
fwait
pusha
ficomps
xchg
xor
sbb
shl
inc
roll
fnstsw
sbb
in
sahf
pop
jne
leave
mov
call
iret
ja
psrad
jb
loopne
loope
std
xor
fnstsw
xchg
sbb
add
jl
mov
lods
andl
clc
push
push
int3
or
sahf
out
jge
jnp
cwtl
xchg
loope
inc
and
insb
xor
clc
add
jo
cmpsl
movsl
dec
add
pusha
and
testb
std
rorl
int
ret
pop
adc
shrl
pop
icebp
add
cmc
jmp
add
shll
or
sub
adc
mov
adc
ss
fnclex
imul
xor
mov
stc
push
insl
push
std
mov
dec
test
cwtl
cltd
lahf
xchg
or
ret
dec
jl
ja
sub
shll
hlt
inc
sub
push
int
testb
sarb
pop
lods
cmpsb
nop
or
lds
shlb
popf
icebp
sbb
push
outsl
mov
push
inc
aas
mov
mov
std
mov
xor
int3
push
fs
rcll
push
mov
inc
rol
stc
jecxz
add
clc
mov
mov
insl
fwait
adcl
scas
test
lcall
ret
push
mov
pop
mov
push
rcl
mov
scas
popa
mov
insl
jp
inc
mov
aad
adc
sbb
gs
decb
lea
and
stos
xchg
xchg
sub
imul
rol
mov
aas
jmp
or
jbe
fsubrs
int3
mov
cmp
fistpl
fwait
cmp
addr16
cli
xchg
lret
pop
mov
jb
xor
add
inc
sub
movsl
and
cwtl
dec
in
lds
jmp
inc
repnz
rcll
or
cmp
cmp
inc
inc
cwtl
int3
mov
mov
pop
leave
in
inc
inc
or
lret
int
adc
fldl
stos
fisubl
ljmp
lcall
fnstsw
lods
ficompl
aad
mov
mov
jmp
dec
rcll
push
inc
inc
xor
mov
insb
push
inc
pop
cmc
rcrb
popf
jbe
push
lds
test
je
fucom
mov
out
or
sbb
mov
test
incb
stos
push
je
jnp
mov
inc
adc
cmp
cmp
mov
repz
push
hlt
jnp
fwait
loop
xor
push
sub
test
inc
cmp
rorl
rorb
mov
cmp
pop
pop
lods
fimuls
mov
test
inc
lret
mov
jbe
sbb
in
divl
in
or
rcr
inc
dec
add
cld
inc
in
inc
sbb
or
cmp
int
cmpsl
pop
pushf
leave
repnz
lock
lret
popa
inc
gs
xchg
pop
xor
scas
leave
mov
inc
lret
pushf
cmpsl
cld
scas
dec
lret
insl
pop
push
mov
fcmovbe
int
mov
pop
or
mov
xrelease
movsb
push
lret
fcmovbe
push
xchg
mov
push
scas
push
flds
add
cmpsb
in
movsb
out
fcompl
int3
inc
pusha
jbe
inc
ficompl
lock
push
int3
aaa
dec
shr
nop
or
testb
push
mov
mov
jg
fstl
je
jge
xchg
test
xchg
pop
call
push
std
out
push
pushf
add
add
mov
in
push
shl
inc
jmp
or
scas
dec
sub
inc
mov
push
pop
xchg
call
add
and
push
add
lret
xor
inc
mov
push
mov
ficomps
mov
mov
movsl
loop
and
xor
inc
sbb
lahf
clc
pushf
add
jns
push
pusha
mov
popf
jb
sahf
mov
int
repnz
mov
or
cmc
loop
cmpsl
lods
jp
lods
mov
pop
stc
std
sahf
push
repnz
jle
adc
movsl
cli
int3
mov
sub
repz
push
mov
lahf
ror
in
cs
aaa
aaa
movsl
inc
sub
xorl
fcmove
push
xlat
lea
dec
sbb
movsl
stos
pop
pop
call
movsb
mov
inc
fchs
mov
push
push
dec
nop
pop
mov
mov
inc
inc
in
sub
fwait
shll
push
imul
pop
sub
sbb
pushf
jae
dec
cmp
mov
push
nop
jecxz
inc
xchg
or
lret
repnz
fildl
and
xor
lock
fnstcw
xchg
ljmp
out
popa
into
call
pop
cmp
pusha
inc
inc
lea
and
mov
and
cmp
aad
ljmp
mov
inc
sbb
add
xchg
popa
pop
add
xchg
xor
jg
flds
inc
insb
in
icebp
jp
jl
push
lds
in
bound
incl
pop
incb
mov
mov
dec
lret
lods
and
jge
xor
pop
imul
xor
mov
dec
sbb
into
mov
mov
shr
in
insb
les
stos
cld
int
dec
mov
dec
je
pop
ret
cmp
aas
mov
dec
out
loop
aaa
out
cmc
jns
mov
inc
jge
into
orl
lahf
filds
ret
aaa
xchg
test
dec
adc
mov
imul
pop
mov
aad
mov
movsl
push
shll
shll
das
lahf
aad
aam
sbb
inc
aaa
scas
dec
mov
inc
aas
jp
cmpsl
stc
jno
lds
cmp
and
sbb
out
xor
ret
ficompl
dec
adc
adc
and
loope
mov
mov
inc
jno
arpl
sub
push
push
add
mov
sbb
ds
in
aad
inc
mov
jmp
mov
dec
outsl
lret
xchg
mov
pop
xchg
mov
aad
cwtl
add
test
mov
mov
pop
aad
push
mov
into
and
xor
iret
movsb
jno
adc
jnp
mov
cmp
pop
push
pop
pop
jns
pop
xor
xchg
ljmp
mov
fisttps
jne
push
xchg
adcl
int3
imul
mov
push
negl
cmpsl
movsb
int
xchg
inc
mov
jae
arpl
sbb
aad
pop
cli
out
mov
add
pop
movsl
lret
cmpsl
sbb
sub
fnstenv
cs
jl
xchg
mov
mov
xchg
lds
in
pop
mov
mov
cmp
iret
cmc
and
shrb
mov
push
or
jo
and
sahf
aaa
push
es
out
imul
aad
dec
and
cmp
ret
in
in
lock
add
aad
jecxz
fimuls
xchg
mov
test
loop
jo
int3
jae
mov
push
stc
push
xchg
ficompl
pusha
or
mov
bound
movsl
fs
xor
ss
push
movsb
xchg
xor
jecxz
lcall
mov
hlt
lahf
aad
adc
lret
push
fidivl
or
mov
add
mov
adc
aad
sub
lock
push
mov
out
repnz
mov
out
scas
mov
fwait
cld
add
sub
jle
push
jecxz
ffree
movsl
or
loopne
jmp
xchg
jae
rcrb
mov
mov
jecxz
xchg
mov
rclb
int
clc
mov
and
sbb
fiaddl
sbb
insl
pusha
xchg
imull
mov
cmp
sub
jmp
mov
lahf
in
pop
repnz
add
aad
mov
repnz
mov
cmp
in
movsl
push
movsb
mov
pop
sub
xchg
mov
mov
jle
dec
mov
insl
pop
cli
cmpsb
and
lahf
stc
pop
mov
pop
rcrl
mov
inc
ret
fs
popa
pop
add
pop
mov
loopne
hlt
xchg
test
movsb
pop
jg
imulb
cld
lret
add
scas
std
inc
inc
fs
adc
push
lret
push
fsubl
inc
in
push
sbb
or
mov
sub
mov
psllw
rorl
gs
cmp
loop
dec
and
lret
jmp
jo
cmp
repnz
cmp
jg
mov
push
sub
cld
mov
pop
or
inc
out
mov
push
dec
sub
mov
mov
ja
mov
jle
gs
xor
mov
popf
mov
mov
xchg
mov
dec
and
push
inc
lahf
sub
sbb
sub
sub
xchg
loope
int3
pusha
dec
add
aaa
cmp
xchg
xlat
in
lret
in
cld
pop
stos
xchg
inc
jbe
loope
aad
gs
int3
int
ret
xchg
std
loopne
in
pop
mov
pushf
mov
outsb
sub
and
cmp
lods
sti
mov
or
loope
adc
pop
ljmp
xor
aam
mov
push
pop
fidivrl
jmp
sbb
hlt
in
insl
push
in
and
or
jbe
in
aam
mov
sub
ljmp
outsb
sub
pop
insl
adc
mov
dec
in
int
fdivrl
sub
push
mov
xchg
mov
mov
push
cld
out
in
shlb
in
out
int3
aam
cli
add
adc
in
xchg
cmp
in
xor
movsb
sub
jns
jnp
push
and
xlat
pop
negl
mov
push
aad
int
xchg
push
jae
rorb
dec
in
adc
push
pop
jbe
and
jbe
in
adc
in
mov
jl
or
cld
sub
cltd
mov
cmpsb
sub
das
in
xor
jo
cmp
movsb
cmp
cmpsb
sbb
xchg
pop
std
int3
cmc
xchg
cmp
jno
dec
andl
xchg
inc
mov
jbe
daa
cmc
push
fisttpll
stos
in
xchg
adc
ss
mov
cmp
sub
in
cmp
aad
test
jae
stc
xor
ljmp
or
mov
in
popf
sub
pop
xchg
xchg
pop
fildl
packuswb
pop
jmp
ret
in
sti
cs
shlb
leave
or
or
push
dec
in
xchg
sub
mov
pop
std
das
int
sub
scas
in
push
mov
leave
or
gs
sub
movsb
adcl
cmp
sub
mov
dec
and
push
dec
pushf
sub
lret
mov
data16
and
mov
jmp
gs
inc
dec
rclb
in
lret
adc
in
mov
inc
sti
or
sub
das
lods
add
scas
in
push
lods
mov
loopne
xchg
cmp
int3
jns
lods
fdiv
mov
sub
dec
shll
adc
in
pushf
and
in
fs
adc
sbb
hlt
dec
push
lcall
lea
dec
jbe
dec
mov
in
xor
or
pop
sub
rcll
pop
dec
in
std
push
inc
dec
pmulhw
xchg
lret
pop
sti
cmpsb
mov
add
inc
cmc
aad
add
add
lahf
in
cmp
addr16
xor
test
jmp
push
xor
int3
in
aad
push
in
dec
int
pop
in
ds
in
aad
sti
in
clc
and
aas
cli
fnstenv
inc
or
lret
mov
jmp
fwait
loop
fimull
dec
dec
cwtl
shlb
in
pop
jne
movsl
out
sub
loop
lcall
mov
lret
lea
roll
push
fidivl
xchg
dec
out
sub
pop
in
mov
jg
lds
in
sub
in
cmc
jge
test
sbb
xchg
aad
movsl
sub
pop
cld
lea
roll
mov
cld
mov
movsl
outsb
jge
sbb
xor
push
sub
xchg
sarb
repz
or
jbe
lahf
inc
lret
sarb
xchg
daa
popa
ret
jmp
mov
rcrl
xchg
rcl
call
mov
push
or
stc
fwait
xchg
lods
dec
insl
jb
jns
loopne
lods
adc
and
and
and
mov
jns
mov
mov
shll
popf
xchg
repnz
dec
and
pop
aad
mov
xor
cmpb
add
xor
push
mov
ds
fstpl
cmpsl
fsubr
dec
xchg
repnz
enter
nop
push
ret
cmp
sti
adc
sbb
lahf
out
arpl
mov
scas
ss
pop
xchg
leave
mov
icebp
shr
test
cmc
enter
mov
cmp
imul
mov
push
pop
cmpsl
mov
scas
mov
xchg
sbb
jb
push
lret
fs
pop
addr16
mov
cwtl
push
xchg
insb
add
mov
sub
loop
popa
mov
cwtl
add
sub
movsb
in
repnz
inc
xor
mov
inc
in
bound
ljmp
mov
bound
adc
call
adc
jl
mov
cmp
mov
inc
aas
das
mov
jb
fists
xchg
push
mov
lds
and
mov
lcall
shlb
pop
mov
push
xor
int
lcall
adc
cwtl
repnz
fwait
mov
cwtl
or
adc
mov
lahf
add
xchg
mov
decl
in
xchg
pop
cmp
mov
mov
adc
adc
dec
mov
cmp
mov
stc
imul
push
fs
or
movsb
xchg
inc
lods
mov
dec
xchg
or
mov
jge
in
lea
fs
xchg
sbb
scas
jmp
push
cmpsb
outsb
adc
jns
or
cmp
push
add
inc
add
ret
test
repz
cmp
and
or
mov
dec
or
sbb
jae
rcll
out
clc
into
cwtl
aas
mov
pop
mov
mov
sbb
sahf
fstpt
inc
popa
xchg
lret
ficompl
testb
cmp
bound
pop
clc
fldl
mov
popa
sbb
cli
loop
fs
test
xor
xchg
cld
imul
rolb
mov
stos
mov
push
mov
push
cmpsb
add
or
loop
fs
dec
cltd
jecxz
pop
mov
xor
popf
and
pusha
les
jno
jnp
pop
loop
int
daa
cmp
xchg
roll
sarl
ss
cmp
int3
dec
or
or
jnp
and
mov
in
fsts
cmp
add
mov
hlt
lea
jecxz
sbb
sbb
add
pop
push
nop
jae
in
cmp
sahf
das
imul
add
mov
xchg
inc
mov
sub
adc
fstpt
stc
out
jecxz
ja
pop
mov
push
mov
mov
cmp
aaa
sub
mov
mov
add
lea
pop
jge
xchg
lret
mov
xlat
cmpl
popa
mov
insl
push
lock
push
and
pop
mov
xchg
sub
dec
or
cmc
decl
dec
jb
in
cmpsl
cltd
frstor
js
and
dec
inc
int3
fs
cmc
sub
mov
repnz
imul
roll
mov
aad
lret
sbb
dec
adc
sub
and
jg
mov
vpmacswd
call
test
and
mov
sahf
lret
add
xor
test
aad
mov
inc
sbb
push
lea
xor
ljmp
shl
cpuid
ja
and
lret
in
sar
or
orb
fcoml
sbb
add
gs
xlat
xor
sbb
int3
adc
popa
cs
dec
jb
dec
mov
xchg
das
pop
adc
nop
notb
inc
lds
mov
pop
lret
repnz
mov
sub
jns
sub
xchg
xorb
divl
xchg
push
push
mov
xchg
nop
cltd
les
inc
add
or
inc
in
in
aaa
mov
iret
inc
mov
mov
xchg
fs
out
mov
mov
cmp
jge
push
and
mov
test
addr16
loop
es
or
leave
sbb
testl
mov
fisttpll
pop
loope
mov
and
push
scas
scas
ja
lret
sahf
int
add
shlb
fs
sub
iret
imul
add
mov
test
mov
push
sbb
bound
pop
cltd
pop
mov
mov
pop
sub
fnclex
xchg
imul
in
mov
cmp
cmp
jne
rolb
and
sub
pop
mov
enter
in
daa
lret
mov
xchg
movsl
stc
mov
mov
add
xchg
ds
shrl
scas
dec
jns
inc
add
sub
sub
fs
xor
pop
mov
add
xlat
add
xchg
sub
cmp
rcll
push
push
jns
outsl
outsl
jle
mov
sub
and
es
mov
std
dec
movsl
or
loope
inc
mov
sbb
jbe
jmp
ljmp
lea
xchg
or
push
mov
dec
imul
stos
and
fdivl
sar
rcrl
or
hlt
mov
repnz
or
or
add
clc
stc
fs
add
repnz
pop
imul
pop
pop
sbb
in
movsb
fwait
push
popa
sbb
mov
adc
nop
mov
add
cmp
add
scas
xor
and
stos
fadd
inc
loope
shl
jecxz
pushf
or
loop
mov
dec
mov
dec
dec
std
fs
and
clc
out
mov
jno
sbb
frstor
sub
jnp
dec
jl
repnz
or
mov
add
in
lret
mov
movsl
fcoms
into
mov
sbb
repnz
stos
xchg
cmp
mov
push
or
fprem
pop
lret
mov
inc
cmpsl
mov
pop
idivb
test
arpl
mov
aad
xchg
ret
xchg
mulb
pushf
pop
std
bound
mov
mov
or
xchg
stos
int
xlat
dec
cmpsl
jae
sti
pop
gs
stc
imul
xlat
xor
repnz
mov
pop
clc
mov
pushf
pop
loopne
xor
loope
adc
icebp
dec
jno
sub
dec
pop
fbld
cli
sbb
fistpl
mov
addr16
iret
cs
inc
incb
xor
push
inc
ret
rclb
mov
mov
and
in
jnp
imul
dec
jg
incl
stc
mov
sub
out
inc
push
jmp
nop
mov
sti
gs
mov
lods
fbld
sbb
inc
mov
cld
fistl
gs
ret
add
push
jo
or
lock
fs
lods
pop
stos
push
cmp
sbb
repz
mov
inc
stc
test
add
dec
jns
sbbl
ljmp
mov
xor
cmpsb
imul
add
jl
cmc
pop
pop
jo
out
popf
inc
dec
aad
outsb
jne
adc
pop
rolb
push
test
fsts
jae
push
and
mov
inc
add
mov
pusha
in
leave
int3
in
rol
sbb
and
adc
dec
pop
out
pop
lods
clc
add
sub
jmp
mov
pop
pusha
xor
and
js
idivl
sahf
aad
pop
fistpl
mov
xchg
pop
aas
outsl
les
scas
test
pusha
push
fldenv
std
and
sbb
add
ja
and
mov
mov
xchg
fs
addr16
jb
clc
xor
lret
int
mov
adc
test
jle
cmp
mov
test
cmpsl
jb
movsb
pop
sbb
cmpsb
add
jl
int3
jg
add
push
mov
or
cmp
mov
addl
pop
mov
jle
push
xlat
ljmp
je
sub
push
inc
imul
iret
bound
push
mov
sub
ljmp
andl
fstps
jmp
fldenv
loop
ljmp
gs
sbb
cli
sbb
inc
jbe
ret
sub
ret
cmp
les
aad
mov
sub
and
mov
add
stc
cld
push
sub
loop
cmp
mov
sbb
rdtsc
shrb
rorb
stos
sbb
fsubrl
das
mov
xchg
cltd
negl
mov
je
pushf
push
adc
stos
int3
mov
lret
mov
cmp
lret
mov
add
xchg
add
cmp
ja
fwait
inc
jns
adc
add
mov
pop
imul
fwait
inc
jbe
inc
repz
sbb
addr16
popf
int
xor
xchg
and
es
cmp
sti
adc
test
fs
fucom
testl
into
or
clc
sbb
stc
fisttpll
ss
jmp
cmpsl
add
sbb
jo
pop
pop
xchg
imul
test
mov
adc
mov
jge
test
sbb
and
xchg
cs
or
sub
movsl
testl
push
scas
cmp
pop
push
sbb
adc
cs
lret
sub
int
jmp
ret
mov
lret
frstor
push
dec
dec
mov
notl
cmp
movsb
push
xchg
and
jbe
and
clc
jmp
xchg
or
xchg
stc
jle
sti
test
cmpl
stos
mov
insl
jae
scas
inc
push
outsb
into
jno
and
sub
adc
inc
pushf
or
fwait
test
cmp
arpl
jecxz
xorb
xchg
movsl
daa
aaa
scas
mull
in
mov
cmpsb
xor
test
test
test
cmc
jbe
sbb
ret
sub
fistpl
pop
sarl
shlb
cmp
int3
scas
sub
pop
jbe
jo
fdivrs
inc
cmpsl
and
inc
mov
jnp
or
adc
sbb
popa
inc
xor
mov
jecxz
dec
roll
mov
and
mov
mov
clc
pop
lcall
adc
nop
xchg
bound
popf
mov
mov
int3
inc
aam
push
fldlg2
fsts
addr16
or
pop
xchg
jge
popa
test
or
push
movsb
pop
dec
xor
or
sub
jae
inc
push
outsl
xchg
int3
repz
imul
mov
ljmp
sub
loopne
fisubrl
inc
cmp
mov
cmp
push
or
adc
xlat
rorl
cmpsb
sbbb
fimull
loopne
pop
jb
idivl
push
mov
fdivrs
add
jo
icebp
mov
movsl
sarb
or
jnp
call
lds
shrl
lcall
inc
mov
cmp
aas
test
mov
mov
sub
pop
cmpsl
mov
sub
stc
push
rorl
lods
in
pusha
fistpll
insb
pop
cltd
pop
mov
pop
aaa
sbb
dec
sbb
fists
sbb
test
shlb
add
mov
loopne
lret
insb
jbe
aas
pop
add
mov
lret
fidivrl
lret
mov
roll
inc
jp
in
hlt
push
pop
clc
in
xor
sbb
sub
push
jg
xor
mov
jge
aaa
lcall
inc
push
mov
sbb
pop
xor
addr16
mov
pushw
insl
hlt
sub
lahf
adc
sub
xchg
insl
test
adc
sbb
loop
lahf
fwait
dec
jns
mov
scas
iret
fcompl
fstl
pop
mov
bound
in
pop
lds
lods
jge
sbb
or
fstp
push
addr16
push
repz
mov
or
mov
jge
test
add
inc
decl
and
std
mov
pop
cmp
jmp
sbb
cmp
lock
dec
xor
mov
push
scas
subl
cmp
les
pop
mov
push
test
hlt
push
sub
cwtl
sub
mov
loop
ja
test
aam
or
mull
inc
fmul
adc
dec
icebp
pop
repz
leavew
pop
call
insl
mov
insb
aam
add
nop
xchg
mov
jbe
bound
push
hlt
aas
out
mov
push
push
mov
sub
cmp
ss
scas
lahf
and
mov
jecxz
adc
mov
mov
popf
dec
insl
out
mov
cmp
pop
rcll
in
int3
lods
pusha
sbb
mov
xchg
push
jnp
loope
orb
shrb
loop
fs
adc
push
in
sub
test
loopne
std
inc
fnstsw
or
jns
pop
or
mov
movsl
leave
mov
push
pop
add
cmc
rorb
adc
stc
pop
add
call
jge
cmpsb
aam
xchg
and
inc
lcall
cmp
xor
add
test
mov
mov
sbb
mov
mov
push
div
inc
stos
xor
sub
push
imul
flds
lods
popf
sbb
pop
mov
adc
rcll
in
aad
into
fucomip
inc
flds
idivb
push
call
pop
dec
lret
nop
je
push
mov
mov
shl
add
sbb
mov
xor
mov
jbe
dec
and
js
std
repz
sbb
addr16
scas
test
divl
pop
jbe
movsl
sbb
int
out
pop
inc
sbb
shll
movsl
pop
xchg
jmp
or
fildl
or
xor
or
or
mov
je
cmpsb
add
inc
pop
loopne,pt
xor
jns
test
imul
std
and
in
mov
dec
sbb
mov
xlat
adc
jge
addb
and
repnz
shrd
sub
mov
dec
std
or
bound
or
push
nop
int3
fcompl
adc
or
pusha
out
pmulhw
xchg
jnp
or
iret
jl
xor
jns
push
loop
dec
mov
mov
test
sar
adc
sub
sub
jg
pop
inc
inc
sub
movsl
gs
ret
cmpsl
sarl
ret
inc
or
rcll
mov
cltd
fidivl
or
xor
fildl
popl
pop
sbb
out
inc
ret
fs
popf
fildl
dec
add
movsb
pop
ret
sub
pop
into
mov
fsubr
pop
cmp
fcompl
mov
mov
popf
jnp
repnz
inc
push
test
jno
lret
in
ja
jb
idivb
aam
aaa
push
jp
xor
lds
sub
cwtl
jb
fidivl
repnz
loope
int3
xor
push
cmp
and
in
jmp
mov
in
fistl
insl
pop
imul
paddsb
fst
lahf
add
dec
cld
loopne
cmc
sbb
pop
aaa
xor
ljmp
add
in
in
or
out
pop
out
mov
mov
inc
adc
lea
outsl
push
lret
lret
subb
and
std
mov
cmp
xchg
in
xchg
inc
mov
push
je
or
lahf
mov
es
leave
lock
xchg
cmc
into
scas
add
jecxz
aam
lahf
movsb
lahf
rorb
jo
add
aam
outsb
sbb
test
aaa
pop
insb
or
add
int3
dec
sti
int3
adc
xor
xchg
dec
adc
lods
cmc
js
shll
pop
ret
bnd
and
xchg
aaa
jmp
or
inc
mov
rcrb
mov
mov
pop
fldl
add
push
or
mov
icebp
mov
shrl
add
ret
imul
xchg
mov
jne
imul
aas
addr16
dec
ret
and
push
xchg
fistpl
shl
test
in
xchg
mov
mov
pop
sbb
mov
mov
adc
cltd
add
pusha
dec
adc
out
pop
xor
popf
out
inc
or
cmpsb
mov
pop
test
lods
cmp
mov
aas
psubq
mov
pop
sub
popf
lcall
faddl
pop
test
lea
jb
into
mov
xchg
hlt
sti
out
cmp
add
mov
add
cmc
mov
ja
cld
push
aaa
in
je
call
je
lret
mov
cltd
mov
mov
or
enter
jecxz
or
push
iret
fwait
nop
sti
mov
lcall
inc
xchg
sbb
xor
lods
inc
pop
cmp
adc
cmp
mov
adc
scas
jge
aaa
out
shl
cmp
and
xchg
iret
xchg
sub
loopne
mov
fldcw
insl
repnz
ljmp
in
nop
add
push
imul
mov
xchg
xchg
rcll
jge
out
sub
add
movsb
mov
and
sbb
push
dec
sahf
mov
mov
loopne
mov
mov
mov
push
pusha
sub
dec
jg
jbe
jo
jmp
mov
sub
lods
mov
in
and
pop
mov
sbb
insl
out
or
mov
xchg
sbbb
int
cmp
loope
inc
frstor
dec
fisubs
and
mov
aad
rcrl
push
or
mov
xchg
test
add
out
jl
ret
and
sub
mov
hlt
and
je
repz
imulw
lahf
enter
sub
test
repnz
std
or
xchg
push
cmc
iret
hlt
mov
out
iret
jp
fidivrl
adc
in
inc
adc
xor
mov
push
or
fisubrs
popf
stc
sbb
sub
popf
cmpsl
cltd
stos
mov
push
add
add
cs
add
fsubrl
rcr
pop
repnz
nop
adc
ret
push
xor
mov
and
mov
test
cmp
in
inc
pop
dec
call
call
sub
int3
xlat
cmp
cmp
xor
lods
nop
mov
mov
ret
frstor
lret
shlb
ror
jmp
mov
outsb
ds
xchg
loop
fisttpll
mov
xchg
das
or
int
jne
or
lahf
loopne
mov
das
in
lods
xchg
sub
xchg
test
xor
push
jno
dec
push
push
push
lahf
sub
xor
and
cmc
add
fidivrl
cli
stos
sub
lahf
add
push
xchg
mov
push
dec
bound
jne
cmp
daa
hlt
cs
cwtl
loopne
rorb
imul
ss
enter
pushf
fnsetpm(287
mov
popa
rcrb
xor
and
pop
imul
bound
fisttpl
xchg
les
lret
xor
xor
mov
add
cld
rorb
jmp
mov
nop
or
xor
jmp
jmp
cltd
pop
inc
fwait
rcl
and
and
loopne
fisubrs
in
sahf
add
jb
push
int
lret
sbb
loope
int
fistps
adc
or
mov
mov
stc
hlt
in
and
mov
pop
adc
fldcw
push
addr16
mov
lea
or
pop
mov
cmp
mov
aad
cmp
pop
jp
or
add
mov
cmp
sbb
inc
iret
inc
fsts
cli
xlat
sub
into
fs
mov
jbe
cmpsb
sub
mov
sbb
pop
and
adc
sbbb
sar
test
jmp
stc
insl
scas
cmp
fwait
cmpsb
mov
cmp
jnp
push
mov
pop
add
sub
fstl
mov
or
out
icebp
in
and
std
ljmp
adcl
movb
fs
movsb
dec
or
idivl
pusha
and
pop
int
int3
jge
jl
cmp
bound
inc
dec
arpl
int3
shr
sub
cmp
fists
mov
cmc
fists
jl
dec
jno
xor
insl
fs
sbb
ds
das
pop
stos
cmpsb
aaa
or
in
jne
gs
fwait
aad
popf
pop
mov
pop
xor
or
pop
lea
push
push
cli
jg
ja
fidivs
sub
xor
and
dec
mov
fs
sahf
out
push
iret
and
std
les
inc
loope
movsl
test
test
or
sub
cmp
insb
cmc
aaa
sbb
daa
fdivrl
cmc
ficompl
lret
inc
xchg
ss
inc
or
jae
popa
movsb
gs
rolb
push
vmovlps
add
xchg
cmpb
fdivr
lcall
pop
lret
mov
aas
mov
icebp
into
inc
xor
imul
repnz
mov
adc
rcrb
and
popa
movsl
mov
add
add
popa
sbb
inc
aas
cwtl
ficoms
xlat
inc
xchg
insl
cmp
and
jecxz
add
xchg
cmp
mov
aaa
subl
aaa
sahf
std
pop
sahf
jnp
scas
pop
cmp
mov
mov
jno
iret
in
jno
lahf
cmp
aaa
imul
insb
ja
mov
inc
sbb
push
dec
xor
cwtl
push
test
mov
push
cs
cmpsl
or
push
popa
pop
mov
fwait
mov
cld
outsl
add
jnp
incb
push
sahf
in
std
decb
lret
stos
push
das
xor
add
dec
jg
dec
push
xor
xchg
shll
into
bound
dec
orb
fsubl
out
lds
enter
add
out
mov
lret
mov
lods
xchg
mov
cmp
lea
sub
std
mov
jae
daa
std
cld
inc
mov
jecxz
int3
adc
flds
out
xchg
mov
xor
xor
jle
mov
ret
sbb
ja
or
and
rcrb
lahf
in
and
sub
in
mov
or
inc
lret
pop
or
sub
pop
sbb
ljmp
pop
mov
fldcw
jge
ja
aas
bnd
fwait
outsb
xor
lret
pushf
push
sbb
jb
outsl
mov
sbb
test
cmpsb
and
push
mov
add
or
out
lahf
lods
movsb
fistpll
xchg
repz
in
lea
out
shrb
inc
inc
pop
push
jae
movsl
push
sbb
stos
jne
fstl
in
dec
sbb
lods
pop
pushf
insb
jae
enter
imul
or
dec
and
cwtl
dec
repnz
mov
xchg
stos
aad
cmp
shrb
mov
sbb
icebp
shlb
jl
sbb
push
cmpsl
add
xor
and
mov
ss
mov
loop
mov
mov
pop
xchg
or
pushf
sahf
mov
ja
push
jp
fwait
int3
in
sbb
ret
add
in
je
jge
sbb
or
enter
mov
test
xor
test
icebp
cmpsl
shlb
popf
in
lock
mov
push
sahf
int
fisttpll
idivl
movsl
leave
out
fsubl
insl
sub
dec
sub
scas
sar
icebp
and
nop
aas
xchg
pop
push
adc
addr16
iret
inc
push
ss
inc
icebp
add
daa
dec
jb
or
xor
jns
inc
and
dec
add
mov
or
sub
inc
or
add
idivl
lret
mov
shlb
sbb
enter
mov
mov
pop
jge
ljmp
jge
into
xchg
dec
or
outsl
inc
push
add
fcmovnbe
dec
pop
sbb
sub
popf
fucom
hlt
stos
push
insl
adc
out
ss
lock
and
ret
jnp
ja
xor
jg
mov
stos
int3
and
jne
mov
ffree
out
imul
rcr
cmp
lret
mov
mov
popf
sub
jnp
ret
icebp
mov
or
lret
nop
sti
mov
sub
das
jmp
push
imul
fisttpl
and
jg
cld
inc
dec
jge
orb
loop
push
cmc
lret
lret
dec
mov
mov
call
xor
jle
xchg
and
mov
repnz
cmpsb
mov
lods
rcr
mov
lret
loop
fs
sub
pop
fnstenv
shlb
stos
add
jg
in
imul
outsw
in
inc
shrl
cmp
in
mov
outsb
cld
addl
scas
stc
sbb
or
pop
pop
enter
dec
into
pop
cld
dec
test
aad
ficomps
cmp
add
add
xchg
mov
cmp
xor
add
ja
add
fdivrl
jl
jl
mov
lea
flds
jne
push
adcl
enter
addr16
cmc
cmp
sub
dec
call
or
dec
fldenv
addr16
ja
movsl
popa
stc
sub
test
addr16
push
mov
mov
aam
push
mov
cmc
repz
rorb
xchg
popa
lret
sbb
out
push
fldcw
sti
stos
fcoml
add
xor
cmpsl
fisttpl
scas
test
aaa
popa
pop
test
xor
push
ret
addl
and
enter
mov
roll
in
adc
idivl
push
mov
inc
lcall
lahf
push
sbb
imul
xchg
dec
sub
int
std
fidivs
fcompl
inc
or
jp
jecxz
mov
mov
mov
xor
push
mov
bound
imul
test
in
inc
mov
or
movsb
scas
stos
or
dec
jb
pop
test
and
loopne
ja
movsl
xchg
pop
insb
pop
ds
faddl
stos
adc
sub
addr16
lods
movsl
add
pop
dec
fwait
and
push
sbb
xchg
mov
mov
mov
fstps
push
pop
dec
pop
flds
imul
cwtl
and
loopne
mov
mov
lret
push
pop
fld
fistl
and
mov
aad
mov
jle
xor
sbb
or
out
and
mov
cmp
repnz
cmp
aad
adc
ret
jmp
sbb
inc
push
rorl
fistl
rclb
iret
mov
jmp
or
xchg
push
fcmovne
mov
xor
out
push
fisubrl
jge
pop
or
push
movsl
jmp
cli
std
mov
inc
mov
xor
int
aam
mov
jmp
cli
or
testl
push
in
mov
js
shll
jnp
xchg
sub
sbb
adc
ror
popa
dec
cmp
mov
lock
or
push
add
iret
addr16
or
jnp
fstps
push
mov
jae
push
fldcw
leave
outsl
and
and
mov
lret
fimull
ficomps
jmp
push
fcmovne
cmpb
jae
sub
test
sti
pop
fisttpl
in
mov
mov
fcoms
cmpsb
dec
adc
ljmp
add
sbb
nop
push
inc
shlb
mov
lods
gs
mov
rol
push
int3
sub
int3
cmp
ret
imul
lret
inc
push
jae
je
fs
add
mov
out
cmp
into
rorl
sbb
cmp
dec
in
sti
add
push
pop
rcr
js
sbb
in
aad
in
or
aas
and
push
pop
aaa
mov
iret
jbe
shll
aam
stc
std
mov
sub
add
sbb
in
out
in
repz
repnz
mov
imul
push
mov
mov
out
pop
pop
dec
add
adcb
lahf
pop
in
xchg
lahf
aad
insb
fisubrl
int3
sbb
adc
sti
out
sbb
dec
xchg
outsb
in
cmc
test
cmp
and
or
sbb
fstl
sbb
fiaddl
and
test
mov
lcall
in
mov
out
mov
mov
stos
sbb
inc
dec
add
imul
in
popf
in
add
xlat
sbb
in
stc
add
fistl
int3
shl
iret
arpl
sub
in
push
stos
sbb
xor
jns
orb
sbb
xchg
movsl
dec
in
and
sbb
sbb
movsl
idivb
mov
loop
sub
and
sbb
adc
dec
in
xorl
sbb
sbb
mov
or
dec
mov
repz
push
inc
gs
ljmp
fcmove
mov
add
adc
jne
mov
stc
inc
in
aas
adc
pop
xchg
mov
outsl
pop
imul
addr16
pop
cld
nop
dec
and
int
cmc
xchg
data16
and
ljmp
lea
mov
jns
out
ja
mov
cmp
dec
clc
repnz
xchg
std
sti
mov
mov
xchg
mov
std
sbb
inc
shll
pop
dec
pop
jb
jmp
std
lods
jo
insl
repz
test
push
aad
in
lret
cld
enter
cmp
cld
push
push
add
push
mov
sub
fs
movsb
es
cmpsl
xor
mov
or
in
fnstsw
mov
lds
adc
pop
cld
sbb
push
lcall
fwait
add
icebp
pop
daa
push
mov
notb
adc
xor
imul
daa
in
lahf
repz
movsl
cmpsl
ss
imul
sbb
aam
push
les
adc
sbb
out
cmp
gs
and
into
cltd
jge
push
mov
lret
or
pop
iret
in
or
icebp
and
cld
jmp
loopne
fdivl
filds
fldl
jmp
sbb
push
lods
dec
sbb
test
in
sbb
pop
cmp
mov
popf
jns
sti
sbbl
in
xchg
loopne
out
fs
dec
cld
cmpsl
sti
jp
lret
in
xchg
sub
in
mov
push
jmp
cld
cmc
in
fs
stos
sti
add
mov
fistpll
push
aam
pop
pop
ret
push
in
xor
fcmovnu
in
loop
rclb
xor
int3
lret
xor
into
int
rorl
and
test
xor
dec
mov
clc
mov
pop
xor
nop
pop
mov
aaa
ss
loopne
mov
push
cmc
fldenv
arpl
in
mov
flds
xchg
mov
pop
add
xor
and
sti
push
outsb
clc
not
jne
arpl
stos
sbb
inc
cmp
mov
xor
jnp
jne
dec
mov
addr16
push
movsb
add
out
imull
adc
push
jp
lahf
cli
push
repnz
mov
cmp
xor
cmp
jge
sbb
pop
pusha
js
push
sbb
sarb
in
adc
xchg
sbb
aam
xor
insl
xor
std
mov
movsl
int
inc
push
mov
xchg
fbld
cwtl
gs
call
test
fildl
cmpsl
xchg
mov
lds
outsb
pop
leave
push
adc
mov
test
mov
in
jns
sbb
movsb
loope
jb
mov
push
push
push
pop
popa
movsb
fidivl
stos
shll
sbb
arpl
cmp
jmp
out
int
cmp
aas
pop
cmpsb
jp
mov
lret
sbb
dec
cmpb
jnp
aam
cmp
in
sub
fistpll
push
cmp
jmp
xorl
jne
outsl
test
cmp
mov
hlt
ljmp
aad
sbb
xchg
enter
in
xchg
dec
jle
nopl
aam
jmp
outsl
lcall
movsl
or
test
repz
xchg
mov
fs
sub
popf
fmulp
sbb
xchg
xchg
or
mov
lock
loope
and
arpl
add
arpl
sub
loopne
mov
xchg
das
iret
add
sub
dec
jbe
push
pop
cmp
loopne
shrb
jo
push
fldcw
jmp
jecxz
ret
push
xchg
cmp
jmp
fs
insl
jp
jecxz
je
jnp
pop
cmp
ds
sbb
aaa
sub
xchg
fs
fmul
arpl
cli
or
je
mulb
xchg
add
std
movsl
jmp
push
xchg
incl
xchg
ret
push
in
je
push
mov
mov
loop
fstpl
xor
mov
sbb
lods
sub
inc
inc
xchg
dec
shlb
es
jmp
dec
test
xchg
aam
mov
popa
arpl
int
int3
cli
sbb
xchg
aaa
xchg
xor
xor
in
cmp
lods
mov
inc
fcomi
mov
cld
add
sub
sbb
add
popl
sub
daa
std
mov
jle
pusha
pop
cltd
mov
fisttpl
ja
or
fsubrp
lods
add
sub
fsubs
popa
add
pop
std
int3
jnp
cmp
fidivs
getsec
loop
shll
cmpsl
xchg
nop
test
enter
mov
iret
jae
sahf
rorb
sbb
loopne
in
or
inc
jecxz
call
out
int
add
xchg
stc
mov
scas
jge
aaa
rorb
mov
ficompl
add
add
inc
jge
fsts
xlat
push
xchg
xchg
out
inc
leave
xlat
mov
lret
jmp
js
aam
or
jbe
cld
outsl
sbb
mov
cld
movsl
jno
mov
dec
xor
xchg
jmp
push
in
fldl
push
scas
lds
pop
ljmp
je
jmp
fsubs
loop
jmp
mov
lods
sub
out
jb
popa
cmp
insb
addr16
test
jge
pop
mov
add
cltd
sub
push
mov
push
int3
cmpsl
leave
push
cmp
outsl
rorb
mov
lahf
rcll
cmp
mov
hlt
call
test
mov
ljmp
frstor
loopne
sbb
jae
loopne
mov
scas
out
gs
dec
mov
xchg
pop
or
xchg
xchg
das
ds
mov
cmp
loopne
in
fs
outsl
cltd
int3
ret
mov
pushf
push
int3
lds
hlt
negb
std
cmc
sub
mov
cmp
icebp
pop
imul
mov
repnz
lret
jb
cmp
add
jg
sub
stc
pop
push
mov
std
mov
inc
jb
push
sub
mov
aad
mov
addr16
loopne
mov
ljmp
mov
in
enter
nop
xchg
inc
xchg
dec
imul
pop
cs
mov
and
pop
pushf
rcrl
pop
add
cs
repnz
cwtl
fwait
and
sbb
mov
dec
mov
mov
andl
ja
add
mul
add
insb
xor
pop
ficoml
rcl
aaa
stos
push
popa
and
xchg
xchg
mov
outsl
stos
inc
jbe
cmpsb
push
jl
xchg
fdivs
popf
jb
int3
test
daa
jmp
in
add
fs
mov
dec
jecxz
pop
fbld
mov
push
test
jle
imul
hlt
shrb
inc
jge
adc
pop
insl
mov
adc
out
cmpsl
loop
and
jae
xchg
and
imul
loopne
and
xor
idivl
sbb
pop
aad
imul
or
mov
xchg
add
jl
mov
add
xchg
ret
sbb
cmpsl
iret
pop
ja
lea
cld
cmpsl
int
in
cld
mov
decl
jl
loope
sub
scas
pop
rcrl
mov
rcl
scas
call
movsl
and
lea
inc
dec
movsl
movsb
int
mov
test
int3
mov
shlb
int
adc
mov
pop
mov
js
mov
mov
inc
jg
inc
push
imul
aaa
daa
out
add
inc
sub
out
stos
xchg
dec
pushf
fidivs
out
stos
add
sahf
mov
gs
or
fisttpll
fwait
push
int3
pusha
jnp
xchg
jg
lock
scas
lock
add
iret
popa
js
aad
mov
insl
iret
lods
jecxz
outsb
and
pop
popf
sub
jne
fwait
rorb
ja
mov
pop
out
out
hlt
mov
loop
cs
bound
dec
xor
xchg
mov
loop
inc
loop
fs
sbb
pop
pop
repnz
add
cmp
inc
int
into
std
call
loop
jle
in
mov
and
stos
loope
hlt
into
in
call
popl
push
ss
popa
mov
lock
jno
add
mov
mov
filds
int3
mov
inc
xlat
push
mov
outsl
shlb
cmc
testb
stos
rcll
xchg
in
out
mov
mov
and
mov
subb
add
pop
lahf
jmp
popf
xchg
xchg
push
jmp
lock
addr16
or
sarb
mov
loop
push
iret
xchg
icebp
pushf
mov
rcrl
test
mov
sbb
cli
icebp
inc
pusha
into
roll
ficoms
adc
mov
lea
loop
movsl
inc
es
pop
cs
sub
push
or
pop
sub
movsb
test
jle
pusha
idiv
push
add
pop
mov
fcoml
int
fdivs
push
push
jo
sub
testl
lahf
mov
int
das
aas
fcmovnu
cmp
movsb
xchg
jl
pushf
aad
gs
jbe
loope
cmp
cmpsb
sub
repz
push
movsl
add
iret
mov
dec
call
loopne
mov
sbb
mov
iret
jnp
inc
lods
std
cltd
push
inc
dec
pop
test
nop
arpl
xchg
std
pop
test
or
das
pop
cmp
mov
xchg
xchg
cmp
fsubs
sbb
imul
mov
movsb
or
in
xlat
sub
jmp
cmp
mov
cvtps2pi
push
mov
aam
into
fs
xchg
inc
and
mov
cmpsl
gs
fwait
pop
mov
movsl
mov
imul
call
inc
xchg
mov
sub
or
data16
leave
add
sti
popf
repz
inc
pop
pop
pop
mov
and
mov
out
in
aam
mov
fldl2t
sbb
mov
inc
mov
sub
mov
xchg
sbb
arpl
je
mov
xchg
jns
ss
mov
out
loopne
fcmovnu
inc
push
out
shll
inc
pop
mov
lods
and
dec
cmpl
add
xchg
cmp
cmpb
and
and
jnp
fildll
in
push
std
lods
notl
sub
inc
push
loope
cmp
jnp
clc
push
int3
inc
or
fwait
push
push
aam
xorl
iret
mov
mov
mov
out
jb
xchg
sub
out
ret
ret
push
mov
mov
mov
aam
xchg
cld
add
arpl
add
je
cs
out
fwait
mov
xchg
cmp
std
push
cmc
inc
ret
je
shlb
xor
shl
in
push
mov
addr16
inc
sbb
fildl
xchg
cmp
lret
adc
add
and
sbb
loop
cmpsl
xchg
push
sbb
mov
pop
aas
test
jmp
ret
aaa
ficompl
lahf
rol
stc
lcall
push
rcr
sbb
xchg
add
popf
adc
fistps
sub
sub
jg
aad
push
cmp
fcompl
cli
shll
loope
sahf
mov
mov
pop
jge
mov
in
fldl
nop
xchg
in
sbb
jl
mov
mov
mov
cltd
stos
jl
xor
ret
stos
das
cld
aad
pushf
stc
add
fiadds
push
xlat
xchg
cs
pop
repz
inc
mov
fmull
push
sub
pop
cld
fnstcw
lret
cmp
popf
sbb
nop
shl
or
xor
fisubrs
stc
movsl
or
std
cld
cmp
push
je
and
loop
neg
es
rorb
sbb
add
xchg
cmp
mov
xchg
into
test
lret
jmp
in
fs
or
gs
push
jmp
iret
arpl
push
mov
or
add
popf
mov
movsl
clc
fnop
mov
in
in
fimull
les
stc
push
sub
ret
nop
call
pop
inc
sbb
sub
adc
test
dec
int3
mov
pop
out
or
xor
xor
sub
sbb
mov
and
jnp
pop
dec
nopl
pushf
lods
loop,pn
pop
xchg
sbb
add
es
loop
and
pop
gs
int
in
or
xor
fs
andb
aas
stc
xchg
push
rcrb
in
jmp
inc
test
jmp
aam
in
sbb
mov
in
mov
fidivl
in
ret
pop
lock
aad
push
and
cmp
aas
nop
jo
inc
test
sub
aad
decb
add
fdivrl
lock
sub
cmpsl
popf
and
or
pop
lea
fcompl
add
nop
xor
xchg
sbb
cmpsl
mov
inc
and
ljmp
pop
sbb
xor
xchg
cmp
pop
int3
ret
incb
push
xor
lahf
adc
jnp
orb
pop
dec
xchg
xchg
movsb
xchg
cmp
mov
in
and
lcall
adc
mov
fwait
xchg
push
loop
bound
jne
push
ret
push
loop
pop
cwtl
insb
inc
add
mov
sbb
add
aad
xchg
push
fmul
lret
inc
addl
movsl
sti
lahf
dec
jnp
xchg
das
stc
cmc
test
repnz
push
mov
pop
push
push
mov
or
les
out
movsb
lods
inc
or
mov
cld
outsb
aaa
nop
fs
ljmp
scas
fsubrl
mov
cmp
xchg
sub
sub
je
and
push
cmc
stos
and
in
movsl
jne
shlb
je
mov
jae
test
inc
movsb
dec
das
push
mov
xchg
loop
and
mov
add
fs
les
pop
out
jnp
shl
xchg
xchg
hlt
cmp
ljmp
mov
loop
fstp
shrl
out
ret
rcr
xchg
out
mov
cmpsl
mov
pusha
mov
rol
push
flds
adc
adc
push
ret
pop
sub
icebp
add
push
iret
push
movsl
pop
mov
int3
pop
jp
jbe
jle
cli
cltd
flds
jge
or
enter
or
shlb
or
pop
lret
cmp
lock
fwait
push
bound
push
add
in
data16
sbb
pop
imul
jo
rorb
movsb
xor
xlat
xchg
cmc
cmpsl
movsl
dec
mov
roll
leave
daa
sub
test
fcmovne
inc
dec
inc
imul
cmp
scas
leave
cmc
in
pusha
lcall
out
xchg
popf
xor
fcmovnb
push
lods
add
jle
sbb
bound
addr16
push
aaa
sbb
inc
shrl
je
or
push
xor
push
fsubrl
mov
pusha
or
mov
pop
fistpl
or
pop
pop
mov
stc
ja
mov
mov
xchg
insb
ret
lret
add
sbb
xor
cmp
popf
mov
incb
lods
sbb
les
ljmp
rorl
and
sub
roll
mov
fisttpl
sbb
int
cmp
adc
movl
push
mov
stos
jbe
lea
cmp
pop
jo
pop
int
mov
add
and
mov
fnstsw
or
sbb
ss
pmaxsw
cli
jecxz
fstl
and
mov
test
xor
pop
fistpll
lock
mov
cmpsb
sti
jnp
rcll
lret
pop
scas
mov
fstl
adc
pushf
inc
mov
cmp
loope
and
mov
add
lret
aam
fsubp
adcb
xchg
fiadds
adc
xor
xchg
gs
pusha
sub
sub
shrl
aad
jmp
add
mov
add
mov
sbb
bound
cs
push
inc
fwait
les
std
pop
in
ss
cmc
jo
sbb
xchg
add
push
mov
shrl
dec
lret
in
movsb
add
in
rorl
in
lods
pop
data16
push
adc
lock
push
stos
pop
push
pusha
sti
xchg
xor
js
mov
stc
dec
shl
pusha
pop
jmp
xor
aam
adcl
fstpt
popl
xchg
inc
popa
loope
mov
repz
push
test
shr
fwait
inc
xor
rol
scas
pusha
xchg
inc
in
enter
iret
addr16
mov
pushf
push
mov
and
outsb
inc
je
xor
sub
fwait
shll
bound
inc
sub
xor
push
popf
stos
xchg
jge
insl
iret
push
xlat
scas
ss
sti
jge
inc
push
cmp
in
aad
inc
add
lret
or
cmp
push
in
out
std
hlt
ljmp
clc
in
test
fdiv
fisubs
push
int3
cmp
push
ret
iret
sbbl
adc
jmp
lods
adc
cmc
sub
in
cld
pushf
sub
mov
mov
in
sbb
pop
aas
adc
mov
inc
lea
cmp
int3
repnz
fcmovb
sti
int3
test
sbb
lea
in
shl
imul
in
arpl
inc
fnstsw
mov
ljmp
pop
and
clc
push
int3
mov
lods
cmc
int3
ds
in
add
in
pop
and
rclb
sbb
out
dec
cmc
shrb
push
ljmp
cmc
adc
in
cmp
dec
arpl
leave
and
mov
pop
int3
jle
in
pop
sub
aas
dec
pushf
movsb
movaps
hlt
shlb
out
lcall
xor
fadds
cmc
popf
sahf
shrb
pushf
sbb
push
int
pop
test
inc
mov
jmp
mov
scas
dec
cmc
mov
cmp
in
cmp
scas
cmovl
cmp
loop
xchg
and
push
push
cmp
or
imul
imul
inc
scas
push
cmc
pop
ds
lret
lret
icebp
or
push
fs
pop
cmc
mov
jle
push
or
dec
cmc
pusha
pop
in
ja
fnstsw
jmp
in
or
aam
add
cmc
xor
fs
fildll
pop
aam
stos
rcr
xor
or
in
lods
push
sbb
in
cs
cmp
jmp
in
push
add
lret
les
outsb
or
xchg
push
push
sbb
sti
outsb
mov
mov
dec
mov
sub
fmul
inc
pop
pop
lret
sub
xchg
mov
xchg
xchg
loope
in
cmp
fisubs
adc
test
pop
mov
std
aam
sbb
cltd
or
sbb
xchg
push
ror
lcall
shlb
xchg
jp
popf
js
clc
add
xlat
aad
cld
cmc
fistpll
jle
sbb
or
fs
adc
std
inc
push
scas
aam
and
icebp
sbb
hlt
std
pop
add
inc
hlt
iret
iret
aam
ds
xchg
and
loope
dec
cmpsl
mov
push
inc
aaa
cwtl
in
pusha
scas
cmp
mov
push
mov
out
dec
xchg
iret
lret
pop
sub
loop
or
ja
je
rol
data16
cli
push
pop
call
push
cmc
cmp
leave
imul
and
mov
push
arpl
cmp
mov
mov
mov
movsl
push
sub
pop
pop
jg
mov
or
nop
int
imul
and
lret
es
in
xchg
cmpsb
jne
lods
pop
clc
push
push
and
xor
lcall
sbb
fisttpl
fisubl
sub
sub
or
leave
popa
pop
sbb
outsb
test
ss
out
jo
test
sub
sbb
xchg
pop
jle
fcoms
fcompl
fstps
sub
pop
mov
fsubs
push
cmp
aad
xchg
ret
sbbl
xlat
aad
xchg
into
cs
inc
fcmovnb
cmp
into
adc
fcomps
iret
mov
inc
adc
cmp
sbb
cwtl
outsl
xchg
js
xchg
lret
loope
popa
pop
push
pop
sarl
addr16
movsb
jnp
cmpsl
mov
sub
leave
xchg
fs
lods
push
push
cmpsl
and
imulb
dec
jl
sbb
ret
fisttpl
cmpsb
sarl
jp
fs
ja
out
and
gs
fdivrl
inc
mov
pop
insb
lahf
loope
jnp
sti
out
ret
push
cmp
fists
jns
jb
int3
xlat
or
fiaddl
mov
mov
push
inc
outsb
les
arpl
inc
lods
mov
fwait
ljmp
roll
sbb
inc
lds
add
repnz
mov
nop
push
lret
std
xor
rcrl
add
in
and
and
aam
mov
rolb
mov
hlt
aaa
dec
shll
mov
icebp
jae
fdivr
fistpll
mov
mov
push
repz
dec
in
pop
mov
hlt
mov
adc
xor
jb
mov
add
mov
or
mov
lea
loopne
mov
mov
das
pop
or
inc
sbb
in
bound
sub
shr
rcll
mov
jns
into
push
xchg
aad
push
sarl
enter
sub
scas
fistps
cmc
cmovno
fadd
icebp
repnz
mov
xchg
push
and
orps
sbb
or
leave
cmc
xor
sar
popf
mov
clc
call
aad
ficompl
or
addr16
adc
sub
incb
mov
push
mov
jae
pop
jnp
mov
sbb
scas
int3
cmp
xchg
push
rolb
pop
popa
cmp
pop
inc
je
add
sub
cmp
inc
cmpsl
adc
pop
xchg
outsl
adc
xlat
pushf
xchg
idivl
adc
pushf
into
scas
scas
pop
movsl
sub
xchg
shll
aaa
xchg
lret
cmpb
mov
icebp
inc
cmp
sbb
or
out
pusha
xchg
sbb
pushf
cld
movsb
inc
or
in
pop
and
cmp
or
mov
xor
and
in
in
mov
es
cmpsb
mov
cli
lret
and
imul
pop
hlt
in
dec
cmpsb
test
sub
in
dec
xor
add
dec
and
sbbb
lret
xchg
insb
out
push
test
das
cmp
or
cmp
and
or
int3
cmpsl
and
xor
pop
mov
sbbb
mov
icebp
add
and
repnz
rorl
sarb
sub
imul
stc
bound
inc
mov
mov
scas
cmp
mov
xchg
mov
das
pop
mov
cmc
sub
inc
or
mov
int
cmpsl
aaa
sti
xor
sbb
cmp
mov
adc
jo
sub
sbb
int
push
adc
call
addr16
faddl
flds
lret
xlat
loopne
sub
stos
scas
inc
jmp
push
push
ret
add
rcrl
xchg
inc
and
push
push
test
mov
inc
je
xchg
and
int
inc
cmp
xchg
pop
pop
adc
loop
in
in
sbb
repnz
sbb
inc
push
adc
in
aad
push
mov
jae
pop
adc
inc
shll
cmp
aam
jbe
sbb
push
inc
inc
imul
or
cs
xorl
push
iret
inc
mov
out
popf
fdivr
xchg
lods
or
sub
sbb
mov
loopne
pop
imul
sub
fcmovnu
mov
loope
int3
insl
pop
bnd
std
mov
sahf
push
cld
push
bnd
fnstenv
push
ror
push
insl
jl
rcl
data16
lret
int3
jge
adc
add
mov
call
in
imul
insb
mov
aas
test
std
push
xchg
shlb
gs
mov
add
fcompl
sub
adc
ja
clc
lahf
fucomp
and
xchg
into
negl
dec
cmp
cmp
inc
in
cmc
xchg
sbb
pop
mov
sbbl
sbb
inc
lea
mov
inc
inc
int
push
lahf
pop
mov
in
out
rolb
pusha
arpl
sti
mov
jno
inc
daa
fistl
fdivrl
cwtl
hlt
imul
lret
mov
pop
jnp
xchg
or
fists
sub
mov
sbb
add
sub
mov
sub
aas
dec
push
xor
arpl
xchg
in
sbb
inc
add
test
mov
rclb
cmpl
imul
mov
push
int3
jo
pop
and
push
pusha
or
fiaddl
xchg
clc
stos
jecxz
pop
adc
cmp
or
aas
loope
clc
ja
cmc
data16
sub
bound
mov
inc
scas
mov
shll
aad
adc
mov
jg
loope
imul
mov
pop
mov
and
ds
cmp
dec
pop
push
pop
ret
add
fcoms
jae
push
movsb
mov
and
mov
pop
jg
sub
adc
xchg
insb
dec
je
pop
xchg
aam
or
jno
aas
jmp
fcomps
ja
cmpsl
repz
sub
or
adc
insb
int3
jg
ret
mov
cmpsb
add
jno
sbb
data16
clc
sbb
call
std
mov
mov
xchg
jmp
and
out
fimuls
or
bnd
dec
xchg
cld
subl
add
cld
loopne
pusha
push
mov
fisubs
in
stc
movsb
and
sti
xor
in
pop
mov
sbb
rcrl
leave
and
push
pop
xor
inc
pop
pop
push
fisttpll
cmp
sub
inc
into
mov
fcoms
decl
dec
dec
int3
xor
sub
adc
in
mov
movsb
in
pop
xlat
mov
lea
inc
cmpsl
sti
bound
je
rorb
out
inc
mov
pop
imul
sbb
xchg
out
adc
in
lock
iret
or
or
shlb
lea
loop
jge
loope
pop
adc
cmp
cmc
fcompl
int3
pop
cwtl
stc
test
lea
push
int3
insb
in
and
sbb
lahf
mov
add
icebp
push
leave
add
xchg
and
test
mov
loop
leave
int3
fdivr
inc
mov
push
lock
fstps
fisttps
inc
jl
sub
test
in
cmp
mov
int3
cli
lcall
lahf
mov
dec
dec
aam
fdivrp
push
fisubrl
lods
in
movsb
dec
fisubrs
clc
loope
dec
push
xchg
pop
mov
repz
cld
jmp
xchg
mov
push
sbbb
test
pop
cmp
or
js
pop
repnz
sub
mov
call
gs
inc
jns
fistpl
dec
and
insl
addr16
jp
imul
add
adc
jecxz
outsb
pop
test
bnd
and
sbb
pushf
push
pop
xor
jecxz
arpl
rorb
mov
fadds
std
rclb
call
mov
lcall
inc
scas
jno
data16
xor
faddl
pop
cmp
mov
adc
das
adc
ret
adcb
popa
pusha
shll
into
icebp
lret
sti
jno
lret
pop
cltd
loop
shlb
repz
xchg
cs
dec
cmpsl
xchg
test
sub
cmc
cmp
cmp
jg
dec
jle
xchg
out
cmp
sti
push
int
mov
xchg
mov
sub
loop
insl
fcompl
dec
repnz
cmp
out
jne
lret
aam
mov
lock
lret
ror
lret
mov
mov
mov
cld
fmull
in
cmp
daa
lret
mov
mov
pop
pop
out
shrl
insl
xchg
xchg
cwtl
pop
push
cmpsb
aad
push
mov
out
mov
call
jle
into
fcmovu
movsb
and
inc
add
addr16
rclb
pushf
inc
sub
mov
test
xor
ja
test
jge
jbe
add
fldl
scas
cmp
pop
add
pop
outsb
xchg
scas
jo
or
icebp
xchg
hlt
pop
mov
cmp
ret
addr16
int3
lret
aaa
pop
push
fsubrl
adc
cmpsl
cmp
lret
mov
inc
cmp
jmp
jmp
add
inc
jb
gs
fstl
js
mov
fcmovu
repnz
aaa
jbe
cwtl
adc
pop
pop
jecxz
dec
sbb
cmp
or
and
xor
out
mov
pop
mull
lret
sub
loop
insb
xchg
xchg
fdivrl
fidivl
repnz
mov
inc
cmpsb
cmp
mov
add
icebp
inc
cmp
and
jp
xor
fstpt
pop
cmpl
test
pop
insl
push
iret
lods
loopne
in
pop
and
div
sbb
pop
sbb
mov
mov
leave
jp
add
iret
inc
lret
mov
js
sbb
add
push
gs
shr
jb
unpckhps
adc
sub
test
lea
dec
inc
xchg
inc
xchg
lea
cwtl
mov
scas
sub
pusha
xchg
fmul
in
jae
pop
pushf
push
jnp
fwait
out
sti
repnz
jno
sarl
xchg
lcall
mov
and
outsl
dec
test
add
xchg
xchg
cmpsl
sbb
sub
mov
movsb
fwait
bound
inc
mov
sbb
jae
sbb
mov
push
rcrb
rolb
in
jnp
gs
xor
pop
xor
stos
jp
add
fnstenv
pushf
dec
std
dec
popa
ss
pushf
mov
dec
inc
mov
pusha
pop
mov
inc
in
call
mov
xchg
mov
inc
adc
fwait
outsl
nop
and
movsl
dec
das
shlb
cmc
dec
pop
cmp
sub
mov
mov
test
rcl
fidivl
bnd
add
aaa
jmp
push
lret
mov
lea
int3
sub
mov
loopne
test
insb
xchg
inc
ret
nop
mov
push
inc
xor
rorb
in
in
push
std
sbb
cli
jbe
ss
imull
jbe
xor
mov
jmp
mov
and
mov
sbbl
xorb
pop
shll
sbb
scas
xor
ret
cltd
frstor
sbb
jb
ljmp
int3
roll
and
rcrl
push
cs
cwtl
out
or
pop
cmp
or
adc
fsubrl
xor
xchg
adc
das
sub
mov
sbb
pop
in
imul
int
push
icebp
jne
leave
dec
lock
sahf
add
fisttpl
pop
arpl
mov
sbb
jecxz
popf
push
xor
sti
sbb
xchg
cli
into
xor
cmpsl
arpl
fcompl
add
inc
sub
movsb
xchg
and
insb
pop
add
add
fisttpl
leave
adc
call
shrl
mov
sub
jnp
add
pop
pusha
sbb
cmpsb
ja
stos
mov
xchg
test
je
dec
jb
push
pop
pop
mov
push
lret
sub
pop
rcrl
dec
xor
dec
pop
loope
sbb
lret
xchg
clc
pop
add
sti
jle
cmpsb
aaa
xor
mov
cmp
into
pop
xor
sub
mov
xchg
xchg
sti
xchg
inc
insb
insl
fisubrs
hlt
shlb
mov
les
pusha
dec
aam
dec
adc
mul
cmpsb
outsl
repnz
scas
rcr
fstp
jmp
inc
mov
stos
movsb
add
ds
mov
pushf
out
mov
fwait
xchg
out
lcall
aam
rcl
sub
in
pop
jge
mov
pop
lock
aas
lea
cmpsl
xchg
xor
mov
imul
ljmp
enter
dec
out
addr16
rcll
pop
test
clc
add
pop
jnp
pusha
sub
loope
push
fs
loop
movsl
xchg
push
dec
shll
jmp
test
xchg
repz
mov
sub
jno
bound
push
lock
mov
mov
and
popf
jl
sub
test
xor
jecxz
jae
aad
hlt
insl
xlat
mov
add
mov
jl
xchg
shlb
sahf
popa
pusha
push
sub
das
sub
fdivrs
adc
clc
mov
jns
xchg
xlat
repz
add
fld
sti
dec
push
ret
js
mov
les
test
cmp
ljmp
int3
dec
mov
xchg
fnstenv
lea
cld
mov
fisttpl
out
fs
pushf
pusha
inc
imul
scas
cmp
insb
ret
loope
mov
push
cmp
or
jecxz
mov
fwait
aad
xchg
outsb
sbb
inc
pop
stos
fistpl
jbe
mov
jne
add
divl
and
jmp
jno
arpl
mov
jl
sub
adcb
fsub
add
cwtl
and
mov
rcrl
ficompl
lret
fs
cmp
xchg
lock
into
lods
fs
inc
out
pop
and
pusha
repnz
pop
inc
in
insb
mov
movsl
mov
jle
mov
arpl
xor
iret
insl
int
bound
ret
fadds
in
cwtl
sub
pop
jno
cmp
cmpsl
mov
sti
push
leave
cmp
mov
shrb
push
mov
in
shrb
cld
pop
or
xor
imul
inc
mull
inc
loopne
and
lret
add
lret
lds
add
imul
cmp
sbb
jmp
mov
xchg
imul
inc
dec
mov
cmp
mov
add
fsubrl
xchg
imul
ret
leave
mov
stos
mov
ja
jmp
mov
rcll
mulb
inc
sahf
mov
dec
and
loop
mov
das
in
jnp
les
push
loop
je
gs
pop
test
stos
and
mov
ljmp
dec
push
sub
dec
lds
pop
mov
inc
mov
sub
fwait
jae
cli
adc
ja
sahf
cltd
mov
ret
stos
outsl
daa
fs
mov
in
data16
mov
rcll
loopne
and
iret
mov
fisubl
dec
or
push
aas
sub
add
movsl
dec
and
in
or
mov
xchg
lret
scas
std
subb
push
or
movsb
push
mov
dec
int
pop
fists
dec
cmc
mov
xchg
shll
aad
scas
popa
add
inc
mov
insb
idivl
fldl
leave
aad
out
test
xchg
lret
in
in
mov
jo
loopne
mov
cltd
in
shrl
loopne
mov
out
insl
pop
mov
cmc
xchg
fsubrl
sarb
xchg
ja
out
push
fwait
jmp
into
xor
cltd
ss
movsl
test
ror
outsl
add
xchg
je
add
or
inc
pop
dec
rcll
aam
cmc
mov
mov
and
inc
mov
in
in
ficompl
mov
jmp
rcl
pop
push
sar
inc
nop
sbb
fwait
jae
data16
xchg
sti
in
push
xchg
and
sbb
xor
sub
test
mov
mov
mov
push
sub
dec
and
fcmovnu
xchg
imul
dec
and
push
sub
and
mov
mov
gs
or
into
loope
das
xchg
lahf
stc
stos
push
mov
jmp
in
push
or
pop
pop
adc
pop
filds
imul
arpl
subb
mov
and
roll
inc
les
fdivl
adc
mov
out
jmp
out
mov
je
add
jl
sahf
mov
fstpl
adc
mov
lret
sub
test
mov
lret
out
xor
popa
inc
jge
into
sysret
sbbb
shll
test
mov
jb
or
pushf
scas
fistl
add
cmc
push
cmp
mov
andl
xor
loope
push
sub
es
popa
fimuls
pop
imul
fldl
cltd
iret
pusha
fs
add
jbe
mov
hlt
xchg
pop
add
loop
je
mov
loopne
adc
push
sbb
int3
inc
fwait
pushf
test
lds
repnz
jno
movsl
mov
test
mov
incl
pop
xchg
push
scas
lcall
pop
push
shr
and
jecxz
pop
sbb
xor
aad
cmp
arpl
pop
aad
dec
lcall
into
push
xor
mov
sbb
dec
sbb
xchg
mul
mov
fwait
outsl
add
flds
pushf
xchg
inc
xorl
shl
xchg
fxam
mov
xlat
scas
fwait
out
mov
in
sti
insl
outsb
or
out
mov
mov
andb
fbstp
inc
jle
mov
xorl
jp
movsl
fwait
out
js
cmc
popf
out
inc
sub
cmpsb
into
popa
lret
pop
ja
cmpl
roll
mov
cmp
sub
nop
popf
sti
dec
sti
aaa
mov
bound
mov
ret
in
push
stos
or
in
insb
neg
jge
pop
bound
cmpsb
mov
into
shlb
gs
imul
popf
out
inc
jmp
xor
jecxz
jle
push
fsubs
test
rolb
xor
xor
inc
cwtl
lcall
aam
lds
in
cmpsl
call
pop
sub
cli
fldenv
mov
movsl
mov
push
lcall
cmp
mov
bound
push
into
gs
xor
dec
inc
mov
fucom
cs
sbb
xor
cmp
dec
nop
hlt
adc
mov
js
jmp
jg
clc
sbb
mov
loope
hlt
mov
cmc
mov
ret
push
nop
pop
push
shr
jmp
mov
ss
dec
in
cmc
andb
jp
inc
xchg
and
loopne
xchg
jne
test
into
hlt
xchg
and
or
dec
mov
ret
push
push
imul
mov
or
sbb
ret
loopne
enter
sub
xchg
xor
ja
aad
cmpsb
lods
sub
or
sbb
mov
dec
adc
iret
adc
hlt
and
inc
fildll
mov
sbb
cmp
stc
mov
mov
xor
dec
add
movsl
daa
mulb
push
mov
mov
insl
int3
rcll
gs
jecxz
sar
stc
iret
mov
jne
sbb
test
notl
push
sbb
push
or
fs
filds
push
add
lcall
mov
dec
push
dec
jo
xor
dec
mov
iret
out
push
push
lret
fiadds
pop
cmp
xchg
pop
in
inc
stos
xor
mov
pop
lahf
cwtl
mov
push
or
push
pop
addr16
loope
arpl
divl
mov
dec
xchg
inc
sahf
repnz
popa
lcall
iret
aad
mov
adc
cmp
test
shl
mov
arpl
aam
in
lret
js
leave
lcall
int
cmp
adc
in
mov
inc
ljmp
nop
int
or
popf
push
in
xchg
cmc
iret
pushf
cli
sbb
cmc
pop
mov
lds
rorl
adc
cmc
inc
push
cld
mov
jg
adc
dec
jle
cmc
aas
imul
mov
cmc
ljmp
push
inc
cmc
xchg
push
int3
shl
fnstenv
cmc
in
add
inc
leave
pushf
mov
popf
jl
mov
sub
or
xor
movsl
sub
in
pop
cmc
repz
das
cmc
pop
je
scas
xchg
inc
push
xor
jmp
cmp
fnsave
loop
sbb
hlt
or
ss
cmc
jl
cmc
out
jle
int
dec
cld
mov
shl
jmp
in
movl
ret
arpl
and
mov
test
icebp
lock
cltd
adc
xchg
sarb
xchg
sbb
loop
jns
bound
cltd
cmc
mov
cmp
imul
in
mov
lods
sbb
mov
shll
cmp
cmp
fbstp
int3
shll
mov
xor
pop
rolb
pop
sbb
pop
addr16
mov
repz
mov
loope
xchg
outsb
test
jecxz
les
push
aad
in
dec
aam
push
scas
test
mov
adc
movsb
in
mov
test
inc
in
and
jmp
xchg
in
hlt
in
fs
jbe
xor
dec
dec
or
push
in
and
ljmp
mov
xchg
jmp
jp
jp
int
aaa
dec
in
mov
aam
inc
lret
push
insl
in
addr16
xchg
hlt
test
fs
int3
arpl
test
xchg
dec
jmp
push
in
or
cmpsl
jmp
xchg
in
add
mov
inc
or
pushf
push
int3
sbb
push
mov
js
ja
cmpsb
mov
xchg
push
aas
xor
and
fs
or
jae
adc
frstor
sub
xor
jmp
cld
jmp
in
push
cmp
das
push
in
mov
fs
inc
xor
push
mov
in
sub
cmp
mov
not
mov
les
cld
lret
int3
sub
mov
mov
in
cmpl
icebp
push
fs
in
popf
pop
push
jne
and
add
push
mov
fucom
pop
and
mov
aam
add
lret
in
adc
in
fsts
cli
mov
mov
out
mov
adc
lret
cmp
cmp
mov
mov
pop
sbb
mov
insl
lods
mov
pop
mov
xor
loop
insl
dec
fsts
xchg
lods
popf
pop
dec
iret
int
and
std
fsubrs
pop
or
mov
add
fwait
xlat
sub
aad
sti
lods
fwait
sti
sub
fcomp
or
dec
gs
decl
add
shll
or
fsubl
push
add
int3
stos
add
in
mov
in
dec
and
ret
xor
mov
mov
fst
lods
pop
xor
fwait
jo
test
pop
in
add
int
ljmp
cmc
sub
mov
test
aad
in
mov
test
and
sti
mov
in
sbb
push
in
ljmp
fst
fstl
aam
add
dec
int3
and
clc
pushf
jmp
in
je
aas
in
and
cmp
fcoms
movsb
inc
push
hlt
pop
aam
push
int3
mov
xchg
in
out
push
int3
shrb
add
int3
aas
push
in
add
dec
in
sti
aaa
aad
je
in
push
jmp
dec
in
or
test
notl
aam
pop
test
push
in
aad
mov
add
sbb
cmp
mov
xchg
cmpsl
dec
into
pop
sub
repz
jl
cmp
int
fimull
fs
imulb
push
adcb
fwait
lods
or
lea
cmpsl
idivl
jecxz
in
stos
dec
xchg
pushf
inc
mov
shll
or
aas
ret
fsubr
loopne
pop
lods
inc
loope
out
push
movsl
push
int
cmp
ss
and
ja
das
psrld
ds
sub
int
fdivl
adc
jl
mov
mov
mov
fdivrs
fisubs
or
sub
and
push
sbb
les
scas
inc
push
outsb
fwait
rcr
cld
pop
xchg
cmp
and
popf
mov
push
jb
xchg
fists
and
andl
jnp
mov
and
xchg
xor
pushf
aaa
xchg
pusha
cwtl
cmpb
std
or
ret
leave
push
sahf
pop
pop
mov
rclb
mov
aad
ss
jnp
cld
fistpll
iret
mov
cli
dec
cmp
inc
movsl
movsb
into
lret
xchg
fldt
aam
or
es
ficompl
out
xchg
int3
push
mov
in
cmc
shll
lcall
test
int
mov
pop
cltd
int
shrl
sub
sbb
xchg
xchg
dec
xor
inc
jmp
lds
dec
sub
std
popf
mov
sbb
popf
int
cmp
clc
sbb
std
cmp
push
in
addr16
add
fstp
fildl
das
in
repz
fidivs
pop
pop
cmp
in
inc
hlt
fs
or
mov
cmp
hlt
daa
movsl
inc
es
push
cmp
or
leave
dec
lock
cmp
fcmove
js
jecxz
mov
dec
mov
dec
pusha
div
aaa
lea
out
aas
lods
push
sub
jle
pop
jnp
shlb
xor
inc
and
loop
jge
jecxz
loop
adcl
push
ficoml
or
jno
movsb
nop
movsb
pop
int3
mov
mov
mov
pop
shlb
mov
mov
aam
fs
arpl
in
fcmovbe
and
add
mov
ja
inc
fcompl
popa
jbe
xchg
cs
into
cwtl
rorl
enter
lods
insb
cld
fs
fistps
rcr
cmp
call
sahf
push
cmp
pop
ljmp
mov
mov
push
lods
cltd
dec
mov
push
or
mov
call
cld
mov
adc
xchg
mov
cltd
cmp
aam
sarl
loopne
mov
push
aaa
mov
lea
pop
jno
pushl
and
jge
xor
les
je
jns
lret
aad
pop
pop
mov
sbb
pop
cltd
pop
loop
dec
aad
xchg
sbb
test
mov
loop
jne
rcll
pop
sarl
out
in
fldl
dec
imul
mov
and
cmp
push
mov
pop
dec
lret
mov
jnp
aam
and
rorl
cmc
xor
mov
sbb
rorb
cli
xor
aaa
push
cmpsb
xor
adc
mov
cld
pushf
movsl
hlt
lcall
add
int
pushf
jmp
repnz
clc
xchg
cmc
ss
js,pn
pop
jle
mov
jp
cld
pop
loope
push
jbe
out
sub
cmp
jns
xchg
xor
cltd
inc
imul
aad
loope
pop
movsl
pop
std
pop
mov
add
inc
hlt
inc
inc
pop
cmp
and
subb
sub
mov
mov
pushf
inc
mov
pop
addb
jmp
ss
add
adc
push
mov
cld
sbb
pop
ret
roll
mov
arpl
xor
cltd
cwtl
dec
inc
mov
mov
mov
or
hlt
xlat
pop
xchg
mov
in
call
or
adc
out
pop
xor
fwait
inc
jb
sbb
mov
sbb
aas
mov
add
push
fs
nop
mov
lods
fstpl
fldenv
push
lret
stos
xor
sbb
nop
loop
mov
je
sbb
imul
xor
aaa
cwtl
lods
or
jecxz
adc
cltd
ljmp
mov
out
sbb
sbb
jbe
cmp
xor
icebp
xchg
rcr
in
pop
ds
mov
or
sub
ljmp
aaa
fwait
rcr
sub
cmp
or
jecxz
xor
jecxz
int
fwait
cs
loop
sar
inc
imul
in
jnp
int3
out
cld
aad
mov
or
test
or
cmp
sti
xor
mov
into
bound
or
push
push
fisubl
dec
lret
daa
jmp
xchg
xchg
loop
cwtl
xchg
in
popf
fstl
xchg
push
mov
mov
add
fnsave
mov
ss
and
push
xchg
insb
push
ret
jp
or
inc
inc
jo
ja
bound
xchg
mov
fsubl
fs
popf
inc
in
xchg
jns
test
test
push
fisttpll
icebp
stos
shl
mov
pop
ret
mov
xchg
mov
rclb
pop
icebp
sub
movsl
out
out
xchg
ljmp
cwtl
lahf
fwait
xchg
xor
in
mov
xchg
xchg
cltd
push
jle
ret
pcmpeqd
mov
mov
xor
cmp
into
js
xchg
xor
inc
cli
lods
aas
and
push
shll
inc
sbbb
sti
mov
mov
das
pop
mov
hlt
jmp
fildl
sbb
loop
dec
dec
in
cmpsb
pop
fucomp
pusha
dec
push
xlat
cmp
int
es
xchg
mov
xchg
sti
pop
and
test
andb
insb
cmp
sahf
xchg
icebp
adc
or
mov
fstpt
cmp
add
loopne
push
cmc
ret
jae
lret
mov
fwait
int
add
dec
xchg
leave
or
leave
add
shr
and
sarl
imul
and
in
popf
fnstenv
out
and
adc
mov
sub
stc
test
mov
add
pop
mov
cmp
jmp
call
icebp
adc
fwait
mov
fnstcw
in
sti
rclb
lahf
fcompl
in
test
dec
ja
mov
fcoml
mov
shr
into
add
and
test
fwait
and
movsl
ss
push
out
mov
ret
adcl
inc
ror
and
mov
inc
adc
push
scas
fscale
ret
add
movsl
push
ret
or
cmp
xor
mov
or
popf
xchg
dec
cmpsb
xchg
orl
xor
pop
cs
pop
movsb
jmp
repz
jbe
jl
add
mov
loop
pushl
cwtl
fsubrl
mov
arpl
mov
dec
inc
push
enter
fs
bound
lahf
into
ds
lods
icebp
clc
leave
repz
paddsw
push
mov
sub
in
pop
mov
ljmp
mov
jns
cmp
inc
std
fldcw
inc
xchg
es
repz
icebp
aad
mov
adc
mov
jg
scas
push
sbb
cmpsl
and
mov
adc
fimull
aas
xchg
pop
and
mov
xchg
pop
adc
pop
aas
adc
fsubrl
ds
pop
pop
inc
dec
sti
mov
xchg
xor
dec
in
fldt
adcb
pop
icebp
outsb
xchg
cmpsb
and
inc
testb
xchg
mov
daa
mov
dec
cmp
sti
in
mov
mov
adc
leave
scas
cmp
add
add
mov
add
rcrl
repnz
mov
mov
leave
out
mov
cli
xchg
gs
xchg
dec
int3
sti
cltd
hlt
lret
frstor
aad
fucomip
pop
es
jge
pop
fisttpl
cmpsl
jae
push
stc
or
mov
jg
adc
sti
leave
push
mov
or
xor
popa
cmp
adcl
movsl
insb
jb
sub
aad
cli
mov
jl,pt
aam
in
gs
add
sub
inc
clc
push
jmp
push
cmp
fsubl
mov
lods
fisubrl
cli
out
inc
sbb
jbe
arpl
lret
test
mov
mov
jae
cltd
jp
lret
jp
sub
sahf
aaa
rcrb
cmpsl
aad
add
cwtl
jmp
sti
sti
int
ljmp
xchg
jo
loope
aam
call
insl
test
mov
jmp
sub
mov
add
mov
dec
jo
arpl
jle
aaa
fldcw
pusha
jns
test
xchg
ljmp
pop
add
push
lahf
push
xchg
es
insb
icebp
fisttpl
lret
imul
test
test
inc
mov
xchg
out
in
jp
adc
movsb
push
and
mov
or
lret
xchg
inc
shlb
inc
lcall
popf
xor
std
add
pop
xchg
xor
adc
flds
mov
cmp
adc
mov
adc
jmp
mov
xchg
insl
cmp
sbb
lds
aad
in
xchg
daa
insl
inc
es
and
popf
and
std
and
sub
std
sbb
fwait
push
movsl
jp
sbb
sub
test
outsl
in
sbb
push
xor
stos
xchg
push
or
pop
lret
mov
fcmovnu
bswap
jecxz
push
pop
and
fwait
ljmp
insl
push
adc
repz
cmpsl
jae
mov
insl
mov
xor
cmp
hlt
loopne
add
jne
sbb
sbb
sbb
fiaddl
cmc
popf
inc
xchg
es
cmp
cltd
jecxz
push
clc
add
movsl
mov
movsb
sub
cwtl
loope,pt
sar
ror
sbb
clc
test
jbe
or
inc
sub
repz
jnp
repz
lret
je
mov
push
int
pushl
xchg
xchg
jne
pop
movsb
push
inc
dec
sbb
stos
push
in
adc
dec
mov
test
pushw
adc
into
and
pop
xor
sbb
and
mov
and
popa
inc
ja
jle
xchg
aad
daa
xlat
push
or
sub
mov
lret
lahf
daa
sar
test
mov
mov
xor
cmp
jbe
outsl
sti
shr
dec
cli
fmuls
int3
add
cmpsl
push
cmpl
icebp
bound
adc
mov
sub
iret
xor
pop
daa
bound
cmpb
mov
flds
or
subb
sbb
insb
addl
adc
cmp
sub
add
addr16
jecxz
adc
sbb
lods
mov
jae
cmp
sub
movsl
mov
sbb
push
xchg
fcomps
cmp
sub
lahf
pop
mov
xchg
mov
inc
dec
adc
sti
mov
jne
pop
inc
fnstcw
mov
xchg
push
push
sbb
pop
lret
jl
and
js
mov
aad
mov
push
das
xor
out
fimull
push
xchg
mov
sbb
push
lret
mov
fst
ds
xor
jb
inc
movsl
cmpsl
sarl
mov
fs
ss
stos
maxps
push
out
add
inc
hlt
xchg
leave
popf
sbb
jge
dec
ret
or
movsb
or
ljmp
fldcw
xlat
sbb
ror
fwait
sahf
loope
and
iret
pop
sahf
aad
mov
add
xor
icebp
xchg
ja
data16
cmp
loop
popa
int
lods
pusha
scas
mov
imul
and
xchg
fwait
xchg
cwtl
ss
movsb
aaa
dec
inc
pop
xchg
mov
and
aaa
imul
cmp
mov
add
test
or
mov
nop
fucom
shll
psubsw
rolb
movsl
popa
lret
je
push
mov
or
cmp
and
cmp
dec
sub
push
pop
jg
cmpsb
pop
jnp
cs
call
adc
lods
xor
cmp
sbb
sub
push
or
cltd
mov
in
inc
adc
adc
sti
mov
mov
or
pop
pop
mov
nop
aas
jge
or
je
pop
testb
xchg
adc
mov
cmc
cmp
xchg
rol
sub
aam
sbb
std
push
and
fldcw
jecxz
pop
mov
scas
or
fdivrs
cmp
mov
cmp
mov
jae
xchg
out
out
inc
rcr
insb
aam
pop
dec
add
add
sub
sbb
push
fs
scas
fsub
push
mov
mov
shrb
imul
adc
mov
fidivl
adc
rcl
mov
lcall
dec
call
pusha
mov
dec
dec
mov
jmp
imul
stc
into
add
ljmp
aaa
ds
mov
nop
sub
fstl
xchg
add
cmp
movsl
mov
xor
movsl
sub
mov
test
js
nop
mov
add
jns
movsl
jnp
xchg
rcr
mov
inc
mov
dec
push
xchg
inc
and
loope
cmpsl
movsb
push
dec
xchg
outsl
inc
fistpll
pop
or
adc
jp
mov
mov
jno
pop
sbb
sti
in
test
xchg
in
sub
movswl
push
in
xchg
add
test
in
fs
add
pushf
ret
jno
insl
xchg
sub
dec
mov
push
pusha
movsb
or
mov
in
cld
aad
in
cltd
mov
add
or
mov
push
mov
xchg
dec
in
cmpsb
jge
sub
jmp
hlt
in
add
add
dec
in
cmpsl
cs
ds
fisubrl
in
pop
inc
add
pop
and
notl
ljmp
pop
ds
dec
in
cmpsl
cmp
in
arpl
leave
in
or
add
and
mull
in
or
xor
sub
mov
stc
push
sti
movsl
leave
repz
aaa
mov
pushf
jge
repz
pop
ljmp
dec
pushf
aam
daa
add
jb
sarb
push
mov
or
push
dec
leave
sbb
or
mov
sarl
cmp
push
icebp
test
or
pusha
int3
adc
mov
fistl
cmp
jne
mov
sub
jp
repnz
mov
bound
pusha
jmp
push
mov
clc
fwait
mov
sti
cld
xchg
frstor
cs
in
bound
clc
dec
lock
pop
cmp
fsub
xchg
sbb
leave
int
add
sub
into
cmp
push
and
push
cmp
sbb
in
notb
pop
call
jl
loop
fucomip
push
iret
cmc
test
in
jo
rcrl
outsb
lret
sbb
into
cmpsb
xchg
jno
ja
popf
mov
xchg
mov
roll
and
push
aas
sub
sti
inc
xor
xor
dec
cmp
jge
and
ficomps
jmp
xchg
mov
mov
ret
ja
mov
pop
rorb
das
mov
shll
lds
pop
fildll
sti
adc
test
test
xor
cld
aad
scas
loop
dec
mov
test
mov
shlb
cmp
fldenv
cs
sub
xor
cmp
mov
mov
jnp
cmp
popa
cld
jmp
std
leave
sar
push
in
ds
xchg
jl
lret
add
in
fstpl
fldl
clc
sbb
mov
rcr
xor
jecxz
cltd
popf
inc
xorb
fildll
pop
in
jecxz
shlb
std
mov
mov
icebp
pop
clc
adc
aaa
popf
int
cmp
mov
add
iret
ret
arpl
xchg
lods
mov
frstor
jmp
out
imul
js
in
dec
xor
sub
out
inc
or
test
cs
xchg
mov
mov
xor
aam
fidivl
mov
sbb
xor
imul
nop
shl
push
lds
xchg
fs
in
nop
rol
add
orb
pusha
push
sar
add
jecxz
inc
stos
rcrl
ret
out
cmp
fnstenv
and
sub
inc
cmp
test
mov
stos
sub
xor
push
inc
outsl
test
sub
ret
push
or
inc
lods
dec
in
bound
int3
imul
leave
stos
lcall
jbe
in
sbb
or
cmp
fmull
xchg
int
mov
in
cs
sbb
mov
or
fldenv
sbb
pop
jb
insl
hlt
jmp
fidivl
and
aam
roll
jp
xchg
jge
sub
push
add
jno
mov
and
sub
int
dec
xchg
inc
and
insl
cltd
jge
mov
cmp
dec
mov
mov
mov
cmpsl
das
mov
pop
out
pop
push
xor
cmp
dec
or
fs
xor
popa
xor
inc
iret
pop
ds
andb
jbe
inc
stos
stc
inc
sbb
jno
fistpl
xchg
mov
sub
cmp
popa
addl
xchg
mov
xor
fnstsw
mov
fxch
mov
and
bndldx
lods
and
les
fcoms
fdivr
cli
mov
aaa
adc
adc
sbb
sub
xchg
in
mov
ret
imulb
cmp
push
adcb
dec
mov
xchg
iret
jp
cmp
into
push
add
mov
dec
in
add
inc
lock
mov
leave
mov
orl
and
int3
inc
fldt
lea
inc
movsb
adc
loopne
loop
fisttps
mov
xchg
out
cmpb
inc
inc
mov
fstpl
in
outsb
jge
pop
push
inc
cmp
mov
xchg
add
test
xchg
dec
into
cmp
ss
hlt
aad
sahf
mov
mov
enter
add
arpl
pop
aas
xor
xor
cmp
loop
jb
sub
lods
jecxz
in
sti
push
loopne
lret
inc
int3
neg
add
lock
in
mov
jmp
mov
in
and
testl
and
fnstcw
mov
leave
jmp
out
imul
mov
iret
sarl
mov
cmc
add
sbb
mov
xchg
jb
sub
inc
clc
cmp
ret
push
or
repnz
mov
jecxz
pop
bswap
lahf
push
or
pop
imul
cld
push
pushf
or
cmpsb
loopne
pop
clc
mov
inc
jne
cwtl
fldenv
add
in
push
sbb
sub
pop
dec
fwait
dec
mov
mov
mov
sbb
fnstenv
dec
or
rclb
add
in
inc
jns
ficomps
push
ss
lret
sbb
lock
fstl
rolb
mov
add
pmulhuw
stos
xchg
repz
sti
cmpsb
loopne
cwtl
jne
cltd
imul
push
lret
cs
aaa
scas
mov
repnz
inc
and
lret
shlb
sub
or
out
dec
sbb
jg
out
fs
lret
fildl
imul
int
and
movsb
sbb
sbb
outsb
jmp
stos
add
rcl
mov
mov
repz
jno
rcrb
in
mov
iret
push
loopne
pop
outsl
mov
fisubl
mov
aaa
out
repnz
fstpt
or
jg
push
out
mov
mov
mov
aad
sbb
mov
std
fs
je
sbb
dec
mov
sub
std
jbe
pop
jecxz
add
mov
fs
mov
add
inc
popa
and
xor
in
dec
hlt
xchg
sbb
out
and
in
fs
popa
adc
lret
pop
js
aad
cmp
fcmovnu
loop
stc
shl
repnz
adc
cli
stos
loope
ret
jge
insl
cli
mov
inc
in
mov
hlt
and
mov
std
rorl
aad
sti
popa
in
stc
rorb
lret
mov
cmp
nop
pop
inc
pop
clc
mov
inc
mov
add
jae
icebp
mov
shrl
jle
fidivrs
pusha
push
mov
xchg
jmp
add
int
mov
inc
cltd
xlat
push
dec
pop
or
xor
call
lahf
in
fwait
cmc
scas
leave
in
shll
pop
bound
or
mov
movsb
add
das
cmpsb
aad
popf
jo
push
mov
jae
loopne
cwtl
mov
out
into
test
pop
fidivrl
add
cmp
mov
mov
scas
movsl
loop
fsubrl
or
jecxz
ss
mov
movsb
pushf
test
shlb
test
scas
lcall
imul
ficompl
or
daa
mov
mov
or
cmp
adc
sti
sbb
pop
pop
ja
jle
out
pop
in
out
mov
jl
mov
adc
jno
fsubl
jb
lods
dec
gs
lods
test
hlt
or
jbe
push
inc
notb
sbb
inc
mov
xor
push
fmul
nop
push
inc
xchg
cmpsb
dec
sub
fnstsw
rclb
mov
scas
or
pop
rolb
mov
inc
in
cli
jo
pop
int3
test
mov
gs
fstps
leave
xor
pop
cmp
out
and
mov
mov
mov
fs
shl
and
push
fnstenv
and
jns
cmp
push
out
xchg
stc
ss
jb
mov
mov
jmp
xchg
fwait
je
cwtl
shll
aas
loopne
xor
adc
pop
ret
lds
mov
fcmovnbe
sti
add
aaa
mov
xor
aas
cmp
xchg
aaa
pusha
pop
ret
arpl
xor
lret
arpl
cmc
daa
inc
or
fldt
xor
mov
jmp
mov
in
mov
test
or
stos
fwait
orl
and
int
mov
cmp
sub
out
mov
jp
je
sets
jmp
push
lds
pop
pop
push
xchg
mov
jns
out
cmp
push
lahf
scas
outsb
das
dec
mov
cli
cli
aaa
jge
push
sbb
lods
aad
mov
test
movsb
enter
add
push
inc
xchg
cltd
sarl
mov
jp
lret
xor
in
or
sbb
dec
std
das
clc
add
ja
int
fld
insl
push
dec
insb
mov
and
mov
sub
sbb
std
loope
pop
xchg
mov
test
fdivr
leave
fsubrs
fwait
or
std
push
dec
dec
je
add
push
mov
mov
jmp
out
insl
sub
push
jo
jp
je
mov
leave
adc
mov
pop
addr16
test
jnp
int
push
clc
lahf
repnz
cmc
dec
aam
bound
out
cmp
xor
repnz
mov
inc
or
sbb
push
push
mov
jae
cltd
lds
clc
xor
test
das
sbb
fnstsw
subl
rcrl
inc
cmpb
xor
pop
add
cmovnp
lds
add
and
sarb
cmp
cli
mov
popf
bound
out
fs
xchg
xor
push
mov
adc
jmp
aas
icebp
mov
cwtl
mov
call
and
adc
cld
fcoms
push
cmp
add
xchg
jb
xchg
jne
and
mov
mov
jl
repnz
mov
and
out
pop
sarb
push
outsl
mov
jbe
lea
adc
repz
xchg
bound
mov
and
imul
sub
mov
mov
add
out
or
nop
dec
les
loopne
mov
and
pop
mov
inc
push
dec
mov
in
inc
loop
add
pop
icebp
mov
out
push
pop
out
xor
daa
mov
mov
mov
cltd
mov
arpl
push
aad
and
out
sub
xlat
cmp
ret
loopne
or
xchg
xchg
lods
pop
sub
or
jne
fsts
dec
fwait
iret
mov
adc
inc
mov
jo
xor
ret
popa
repz
xor
add
int3
ljmp
and
push
outsl
xor
jne
xchg
clc
divl
jmp
jnp
lcall
addb
xchg
jecxz
aas
mov
mov
das
rcrl
jecxz
std
cmc
pop
mov
fldz
stos
rcl
clc
int
roll
stos
fwait
push
cmp
cmp
xor
loop
sub
sti
scas
subb
ffreep
ret
in
dec
inc
popf
gs
test
mov
mov
jge
jae
fcmovne
mov
insb
mov
filds
rorb
imul
and
and
popa
adc
mov
pop
mulb
sbb
int
mov
sahf
add
clc
or
test
mov
scas
dec
pop
test
cltd
jne
sbb
or
iret
or
push
add
cmpsl
test
ret
cmp
lea
cmp
dec
sbb
sub
xchg
push
mov
xchg
pushf
jecxz
mov
pop
pop
jl
dec
xchg
mov
nop
and
inc
jecxz
sbb
inc
sub
cs
add
fnstsw
pusha
add
stc
mov
aam
add
jno
aad
rcrl
dec
add
test
pop
mov
cs
stos
in
jo
xor
push
jp
xchg
mov
out
fimuls
and
bound
jle
jmp
lahf
movsl
adc
pop
xlat
ficompl
push
ror
addr16
mov
pop
mov
cmp
fcmovnbe
xchg
xor
fsubr
dec
xchg
inc
call
dec
aad
cmc
sbb
xor
mov
pop
mov
in
pop
int
cmc
in
inc
push
inc
add
aas
mov
fstpl
mov
jmp
fdivp
xchg
inc
xchg
xchg
js
or
repz
test
xchg
mov
repnz
shl
je
pop
push
and
sub
sbb
mov
inc
pop
xchg
or
repnz
bound
pop
sbb
scas
add
or
addb
ret
jnp
lods
mov
movsl
in
in
pushf
pop
push
in
aam
ret
fsubp
popf
add
sub
iret
cltd
das
or
dec
ss
xchg
inc
lea
lea
push
out
lods
faddl
sti
loope
add
pop
movsl
mov
xor
fnstenv
inc
sbb
and
lcall
mov
fcmovne
arpl
sbb
sub
jmp
cs
lret
int
lds
cmp
sub
adc
cli
insl
mov
enter
add
adc
shlb
test
sub
adc
inc
or
lea
mov
shll
movsl
push
dec
divl
outsl
jo
shll
lret
in
out
push
popf
add
mov
xchg
jmp
pop
fcoml
inc
das
adc
and
loopne
add
add
int
stos
or
jle
fstps
xor
sbbl
inc
jbe
fnstcw
sbb
jne
lcall
jne
sbb
cld
daa
imul
jmp
bound
mov
mov
movsb
xor
movsb
push
cld
mov
call
leave
mov
dec
xlat
repnz
sbb
add
ret
adc
pop
mov
ret
fiaddl
mov
gs
push
or
rcrl
flds
add
push
fisttps
sbbl
push
leave
mov
push
xor
lods
jns
jmp
push
jno
sbb
jno
gs
xorl
mov
inc
outsl
jo
nop
je
pop
add
push
rorb
cli
mov
call
cltd
dec
xlat
out
into
aaa
pushf
roll
aad
mov
cmc
cli
daa
cmpsl
xchg
cmpsb
in
movl
sub
int3
inc
jbe
add
adc
jge
dec
jecxz
xchg
pop
repz
test
pop
xchg
iret
mov
out
inc
scas
jnp
loopne
xchg
inc
sarl
xlat
dec
jbe
mov
mov
sbb
fdiv
or
push
xchg
inc
repz
xlat
movq
pop
inc
movsb
sbb
pop
xchg
lea
pop
fwait
xchg
cmp
scas
aaa
jb
movsb
int3
fstpt
in
cs
pop
sbb
adc
jecxz
loop
aaa
lea
stos
pusha
sbb
ja
cmp
int3
loop
incl
js
aaa
inc
pop
loopne
movsl
mov
cmp
cmp
xor
lods
mov
shll
xchg
in
push
mov
cli
sarl
mov
xchg
ss
inc
inc
or
andl
aaa
arpl
sbb
negl
aad
or
or
xor
mov
lock
js
mov
test
in
mov
fs
lret
or
lds
mov
mov
fs
fisttpl
adc
jmp
ds
shl
loope
in
and
xor
fs
in
or
xor
dec
inc
adc
mov
push
add
std
adc
addr16
cwtl
popa
inc
mov
in
inc
add
xchg
jno
sbb
inc
mov
aam
lods
sbb
dec
stc
mov
xchg
xor
push
ss
pmulhw
or
pusha
sbb
mov
out
jle
sub
mov
std
lcall
or
cli
ret
xchg
jmp
mov
push
sbb
shl
movsl
icebp
mov
lock
pop
clc
lods
stos
shlb
lret
add
jbe
sub
fiaddl
push
push
and
xor
call
loopne,pt
out
xchg
jnp
inc
and
pop
fldt
dec
popa
mov
adc
insl
call
imul
insl
std
adc
mov
pop
jg
push
hlt
cmc
std
push
shll
sub
in
and
lods
lret
adc
ret
lahf
jne
in
cmp
jo
and
push
lret
bound
pop
shl
das
adc
mov
xor
cld
cmpsb
mov
aam
jb
subb
jo
int
dec
neg
push
stos
add
cld
rorl
jmp
mov
and
ljmp
rcrb
mov
or
push
test
mov
mov
mov
int3
repnz
pop
loope
pop
loope
jl
lret
push
mov
popf
in
hlt
lock
sarb
jmp
lret
fstl
int
fdivl
mov
addr16
push
movsb
or
int
int
pop
ret
xchg
mov
jg
aam
clc
sti
adc
jl
mov
shlb
mov
pusha
sub
leave
mov
push
jle
mov
repnz
cmp
std
repnz
mov
dec
cld
jmp
imul
mov
sarl
dec
aad
stc
lock
inc
lret
mov
fdivl
es
popa
xchg
inc
mov
loop
cltd
push
leave
bound
out
gs
leave
adc
add
and
push
ret
mov
add
repnz
inc
out
int
mov
cli
test
mov
dec
or
push
mov
adc
mov
xor
outsl
mov
je
ret
fildl
mov
jg
mov
subb
mov
jmp
imul
sahf
out
or
rcr
mov
movsl
movsb
in
sbbl
mov
out
cli
push
adc
pop
in
fs
out
das
push
mov
xchg
icebp
daa
push
add
cmp
mov
push
scas
push
pop
mov
fbld
mov
lret
ljmp
inc
ljmp
and
orb
push
dec
ljmp
movsb
mov
pop
dec
testb
and
sbb
push
pusha
or
in
mov
sbb
or
xor
jmp
mov
fs
dec
xchg
sahf
fstpt
inc
and
inc
imul
pop
test
stos
jmp
aaa
push
mov
cmp
pop
adc
mov
out
stos
pmulhuw
pop
movsb
aad
xor
mov
rcll
pop
sti
repnz
jnp
or
push
pop
mov
jmp
pop
push
add
out
mov
fwait
xchg
xchg
cmp
jg
jecxz
lret
push
mov
sbb
push
std
push
mov
add
aad
mov
jp
add
xor
mov
ja
arpl
ljmp
aam
bound
adc
rcrl
jnp
ror
gs
sahf
mov
or
pop
xchg
fnsave
pop
je
mov
jae
jne
pop
push
mov
mov
jle
insb
cmp
sbb
icebp
jl
jb
sbb
out
js
inc
mov
std
fildll
ficoml
or
icebp
mov
or
push
mov
dec
cmp
stc
and
inc
in
pop
adc
aaa
call
jno
jbe
mov
in
mov
lret
mov
es
insl
xchg
enter
or
inc
scas
pop
ret
pop
fdivr
cld
std
and
sub
loopne
shlb
in
repnz
mov
xor
add
xor
or
ret
in
sbb
das
in
sar
outsl
lret
pop
jge
mov
hlt
pop
in
dec
sub
cli
push
cld
out
ret
test
aad
repnz
mov
popa
mov
mov
inc
or
fdivl
fmull
pop
popf
pop
dec
pop
sti
pusha
test
lret
fisttpl
pop
popf
arpl
std
nopl
into
pop
aaa
bnd
adc
push
loopne
mov
adc
add
call
aad
sub
push
cltd
push
push
fldl
xor
dec
jno
push
mov
sub
and
in
mov
in
pop
sub
popa
mov
fistps
mov
lret
fildl
pushf
or
popa
into
sub
decl
fiaddl
mov
enter
in
loope
jbe
mov
sti
lods
push
lahf
faddp
call
jecxz
mov
es
out
inc
cmp
in
inc
sbb
fdivl
mov
jne
in
loopne
pushf
and
mov
lds
or
mov
cmp
int
push
xchg
mov
or
fs
jns
jge
ret
pop
loope
pop
sub
aad
cmp
insl
in
or
mov
mov
or
ja
in
arpl
loop
das
js
xor
adcl
pop
test
mov
lods
leave
cltd
jle
seto
xchg
mov
add
andnps
lahf
xchg
loope
iret
cmc
xor
cmp
pop
test
jnp
xchg
sbb
aad
leave
call
mov
pop
daa
mov
insl
push
dec
imull
js
mov
mov
jo
jnp
mov
ss
filds
je
mov
fcoms
xlat
in
decb
cli
sbb
jecxz
adc
mov
fs
add
xchg
or
sub
jle
mov
xchg
xchg
xchg
sarl
mov
jl
push
mov
jnp
push
into
sbb
sbb
fimull
jle
or
fdiv
ss
mov
scas
shlb
cmp
cmp
es
inc
in
fnstenv
lds
and
mov
popf
inc
and
sti
lahf
or
push
fidivl
cmc
ret
stos
test
xchg
icebp
cmpsl
xchg
popf
repnz
scas
xor
fiadds
std
test
add
push
add
cli
lret
jmp
inc
jns
insl
cmpsl
or
xchg
popa
cmc
sub
xor
std
pop
mov
fmuls
fdivs
out
insb
mov
int3
fstl
xchg
imul
shrl
push
lea
mov
add
insl
mov
inc
mov
sub
fwait
imul
push
push
ss
lret
rcll
cltd
imul
nop
lahf
and
aad
xchg
or
cwtl
outsl
addr16
xor
inc
xchg
mov
in
mov
jg
sbb
fstpt
dec
in
xor
and
scas
xor
pop
icebp
fs
push
fdivr
lds
cmpsb
shl
jge
adc
cli
out
adc
pop
pop
dec
or
add
mov
mov
cmp
sahf
bound
scas
lret
mov
fs
in
test
movsl
xor
aaa
or
les
lret
arpl
xor
loope
cmp
add
mov
push
ficomps
pop
cmp
cmpsb
mov
jle
xlat
adc
ds
rorl
inc
adc
lods
xchg
pop
int3
pop
dec
fcoml
and
incl
in
mov
xchg
push
in
jmp
repnz
mov
pop
out
test
andb
test
insb
or
xor
stc
fiadds
fnstsw
inc
inc
subb
push
pop
jg
cs
addr16
cwtl
stos
jl
mov
cmp
sbb
mov
mov
movsl
mov
pop
outsb
lods
add
mov
xorb
pop
mov
imul
jg
mov
inc
fs
imul
and
cs
push
int
incb
shl
inc
adcb
xchg
fnstsw
jne
mov
sub
push
imul
add
pop
mov
mov
ss
jge
out
pop
call
cmp
nop
cmpsb
sub
push
inc
cmp
push
daa
imul
mov
cmp
sbbl
cmpsb
jecxz
popa
add
loopne
insb
jno
out
or
push
call
push
gs
test
and
pop
mov
ja
jb
cmp
mov
push
imul
sbb
mov
mov
aas
ja
repz
adc
lods
jne
pop
sub
cmpsb
sbb
fmull
ja
pop
and
cmp
cmp
aas
sub
jnp
and
mov
and
icebp
sub
mov
dec
sbb
push
stos
lret
inc
xor
mov
push
ja
test
aam
cmp
int
xor
sbb
lcall
jg
or
cmc
lret
lret
fsubp
sti
movsl
fdivl
xor
aam
jl
push
cltd
je
jmp
jae
scas
pop
sub
pop
sub
sbbb
ds
ja
ret
ret
aad
outsb
sub
jns
cwtl
pop
add
inc
mov
dec
cmp
movsb
addr16
or
and
cli
mov
addr16
cld
pop
leave
mov
cmp
leave
lret
leave
decb
jmp
icebp
dec
mov
insl
mov
ss
mulb
aaa
mov
out
inc
sub
xchg
push
js
xchg
inc
jecxz
sbb
adc
jecxz
push
test
push
xor
jg
insb
xor
dec
fs
cltd
push
pop
or
and
cmp
shll
push
out
inc
fnstenv
ljmp
and
inc
mov
cs
lock
and
push
test
shl
push
pop
ja
hlt
addr16
int
cltd
push
push
ss
sbb
cwtl
hlt
jmp
repnz
inc
mov
xchg
in
cmp
icebp
pop
lret
hlt
loope
std
sarl
and
mov
test
inc
movsl
call
dec
cltd
cwtl
fs
mov
sbb
mov
hlt
inc
mov
rcll
mov
xchg
loope
xchg
mov
mov
ret
outsl
xor
pop
repz
xchg
jmp
dec
mov
popf
shl
mov
test
add
mov
aad
int
sbb
xchg
fldenv
gs
jmp
jae
outsb
fists
call
jle
test
rorl
in
aaa
xchg
aas
sahf
pop
pop
int
repnz
mov
push
insl
iret
mov
pop
inc
jge
push
mov
pop
push
fldenv
pusha
mov
xchg
mov
jmp
xchg
test
add
cmp
xchg
or
sahf
movsb
xchg
imul
xor
sti
pop
cmc
jp
pop
pop
inc
dec
fxch
xchg
inc
out
or
mov
shrb
scas
or
cmp
cmpsl
sub
test
fidivl
xchg
xlat
repz
fcmove
mov
test
sub
in
fstps
and
xchg
fsubp
mov
push
and
xlat
ret
loope
adc
mov
call
bound
pop
leave
pop
or
add
inc
push
push
call
jecxz
sub
add
pop
pop
mov
cmp
mov
cs
aaa
push
mov
int
add
int
jno
and
roll
push
movsl
sbb
fwait
movsb
in
mov
into
jmp
test
mov
lods
shll
mov
mov
inc
outsl
gs
dec
fmull
cs
inc
dec
idivl
adc
lcall
popf
mov
aam
ds
push
inc
cmp
nopl
add
fisttps
jbe
add
outsl
push
cmp
xor
cld
movsl
dec
adcb
and
push
in
ja
scas
or
xor
pop
xchg
repnz
loope
add
aad
or
insb
scas
push
pop
movsl
loope
std
xchg
xor
ljmp
xchg
out
in
hlt
pop
sub
fisubs
in
fsub
inc
outsl
scas
stos
lods
push
mov
les
xorl
aam
cmp
leave
std
xchg
push
cmp
add
dec
xlat
add
lret
push
mov
xchg
push
loope
push
popa
aam
ds
fcmovnbe
and
cmpsl
jbe
lahf
push
aas
pop
pop
cs
test
imul
pop
add
lock
repnz
hlt
scas
push
mov
sbb
shll
or
gs
sarb
scas
cmp
out
inc
mov
dec
in
mov
mov
fstpl
mov
aad
dec
fisttpl
jmp
stos
sbb
aaa
push
xchg
decb
pop
fdivrs
movsl
or
loope
jecxz
loop
push
dec
rcl
iret
dec
in
xchg
dec
cmp
ss
and
add
push
pop
pop
insl
push
loopne
pop
ret
pop
add
jne
mov
outsl
fadds
mov
xorl
jns
dec
push
sub
cmpsl
mov
xchg
push
out
ret
aaa
push
in
xchg
mov
fadd
aad
stos
jge
mov
jl
daa
xchg
push
loopne
mov
cmp
das
lock
lahf
xor
imul
jge
sbb
push
enter
and
pop
push
adc
aam
mov
mov
lods
std
jne
mov
arpl
fs
xchg
cmpsb
cld
cmp
clc
icebp
scas
test
int3
jb
push
js
lcall
xchg
push
pop
std
push
xchg
les
jge
aad
dec
mov
pop
nop
cltd
jge
mov
mov
lret
pop
xor
je
fs
inc
dec
xor
sbb
fcoml
mov
test
ja
out
sub
out
fnstenv
inc
cwtl
jecxz
std
aad
jns
jb
out
pop
adc
pop
shlb
lret
repz
fmul
xor
xchg
xchg
xchg
ret
add
ret
int
rcr
mov
testb
cmpl
movsl
fsubs
xlat
add
push
adc
ljmp
push
mov
stos
add
jbe
inc
cmpsl
cmc
mov
loope
xor
inc
bound
and
push
pop
sbb
xchg
imul
inc
movsb
cli
jmp
mov
cmpsb
fldcw
aas
sbb
lret
sub
sahf
loop
loopne
repz
mov
lock
or
bound
push
adc
cmpl
adc
lock
pop
inc
icebp
repnz
into
fldcw
push
cmp
fidivrs
mov
mov
xor
mov
mov
bswap
call
in
pop
cmp
mov
filds
inc
popf
cwtl
sub
cmpsl
and
popl
add
xor
xchg
push
cs
cmpsb
xchg
std
inc
pop
push
ljmp
fwait
ret
fs
in
mov
jb
scas
xchg
daa
cmc
fidivrl
xchg
add
stc
inc
popa
and
mov
lock
data16
mov
mov
ret
loopne
or
xchg
cs
into
inc
jo
push
leave
pop
out
push
cmp
mov
push
inc
in
mov
nop
subb
movb
pop
aas
shll
sub
cli
lahf
push
fsub
out
xor
fdivl
mov
add
aad
mov
into
imul
pop
je
fcmovne
mov
int
push
add
sahf
push
jno
push
inc
inc
rolb
out
inc
push
or
add
dec
mov
and
cmp
cmp
jns
xchg
in
js
mov
sub
sbb
cmp
push
aad
fimull
and
dec
scas
pushf
sub
push
sub
lcall
xor
shrl
ret
cmp
mov
int3
push
adc
call
cmp
add
jl
jb
jp
jmp
push
and
mov
jl
test
xchg
xchg
sub
cwtl
jl
push
lcall
jae
lods
inc
loop
pop
dec
add
push
mov
stc
pop
mov
push
adc
rcrl
jo
mov
mov
ljmp
mov
addr16
mov
pop
bound
lahf
stos
jl
mov
inc
jno
ret
arpl
mov
cmp
jns
fsubrl
xchg
mov
cmp
fsubs
lret
gs
flds
jge
fdivrl
in
test
insb
xchg
sbb
inc
jge
addr16
clc
repnz
mov
stc
push
test
mov
stos
cmp
fstps
cmp
xchg
fnsave
dec
iret
aas
cmp
stos
lret
sub
pop
push
loope
xchg
loope
mov
iret
push
test
and
popf
jge
aad
dec
idivl
mov
fidivl
cltd
mov
xchg
add
pushf
add
outsb
sar
pusha
adc
repnz
popf
jbe
cmpsl
jecxz
sti
jo
pop
jnp
add
add
stc
sub
outsb
xchg
imul
sbb
sbb
fsts
mov
add
pop
xor
movsl
push
imul
lock
fildl
jmp
pop
fsubl
int
mov
or
mov
jmp
popa
pop
pop
outsl
push
push
mov
add
into
out
mov
and
hlt
das
popf
nop
inc
bound
pop
loop
add
ss
and
cmp
sbb
dec
repnz
lds
scas
xor
fsubrl
stc
cmp
or
mov
scas
or
lret
mov
adc
scas
rcrl
stc
iret
leave
daa
out
sub
xor
sbb
loope
inc
or
fiadds
dec
jnp
sbb
mov
xchg
gs
das
mov
sub
sub
pop
pusha
fs
in
add
loop
adc
jb
sbb
daa
push
adc
push
movsb
add
ret
jmp
mov
leave
pop
fwait
and
or
mov
aaa
loope
mov
aad
mov
xlat
or
pop
mov
cmp
movsb
and
adc
int
mov
xchg
idiv
or
fwait
orl
add
cmp
addl
cmp
cmp
mov
inc
jecxz
sub
daa
sub
jno
sbb
push
dec
pop
xchg
cmpsl
in
cmp
sub
daa
jg
in
xchg
pusha
cmc
cmp
mov
icebp
aas
fnstsw
or
pop
fcmovnb
dec
adc
imul
sub
mov
jo
and
inc
mov
pop
stc
ret
cmp
les
pop
xchg
and
rcl
iret
in
sub
xchg
jb
icebp
pusha
test
mov
push
adc
lret
mov
inc
fisttpl
montmul
into
jmp
movsl
or
das
sti
cmpsl
int
enter
jnp
data16
dec
bound
or
mov
pop
in
push
sbb
ret
scas
or
out
cmp
jnp
inc
cmp
movsl
cwtl
adc
cmp
outsb
pushf
jl
into
add
mov
dec
testl
cmp
lret
add
dec
mov
or
aad
inc
sub
dec
jbe
das
push
or
or
xorl
add
and
mov
nop
xor
xchg
xchg
in
mov
inc
adc
pop
adcb
lret
gs
fistl
or
cwtl
loop
jnp
mov
push
or
inc
outsb
inc
cltd
xor
mov
pop
and
inc
mov
mov
scas
xchg
dec
inc
xchg
cmpsb
sub
jmp
les
cmp
add
loop
popa
sahf
cld
test
bound
and
cli
xor
fidivl
out
pusha
xchg
fyl2x
inc
pop
mov
xlat
inc
dec
iret
daa
jae
outsb
add
or
add
cmp
sub
das
mov
mov
cwtl
sbb
xor
roll
adc
call
sbb
ja
xchg
inc
jle
test
xchg
dec
pusha
cmc
adc
or
fcoml
push
add
add
inc
inc
add
stos
mov
test
stos
jle
fwait
stc
jp
loop
pop
xchg
cs
movsb
pop
mov
stc
push
sub
pop
mov
fmuls
fwait
inc
xchg
mov
mov
sub
push
loope
jnp
push
popa
fcoml
insb
inc
js
sub
ss
ret
mov
mov
jecxz
xchg
mov
popa
ss
sbb
int3
mov
push
rcrl
xor
clc
xchg
loop
iret
out
and
into
pop
jecxz
out
and
ss
rorl
test
in
addr16
test
lahf
add
xchg
sub
add
in
pop
scas
sbb
cmpsl
fstl
fmul
shrl
cs
loope
jno
add
fsub
pusha
sbbb
fwait
cltd
out
and
shlb
mov
mov
rcll
loopne
xor
pop
popa
rclb
repz
cs
add
iret
push
xchg
shll
cmc
sbb
mov
mov
mov
sbb
mov
fisttpl
dec
add
imul
loop
sti
inc
int3
pop
mulb
fadds
cld
fimull
mov
cmp
push
sti
xchg
and
mov
xor
popf
js
cltd
insl
mov
pop
xchg
dec
arpl
dec
cmp
cmp
and
xchg
stc
or
in
mov
pop
fwait
int
add
push
into
dec
push
dec
pmaddwd
dec
push
int3
adc
push
insl
iret
or
lret
adc
out
fiaddl
sub
cld
fstps
xorb
adc
sub
lret
or
arpl
mov
pop
mov
or
push
or
and
stos
push
sbb
mov
rcr
fstpl
test
std
movsl
js
fsubrs
in
popf
repnz
mov
jne
cmp
in
es
sbb
sbb
dec
jnp
dec
jnp
dec
jg
addb
aad
or
insl
xchg
mov
imul
pusha
cld
sti
sbb
int
pop
dec
and
pop
lret
xchg
scas
lock
pop
shlb
push
xchg
out
pushf
dec
lods
aaa
shl
invd
mov
test
lods
lahf
loop
cs
jl
lea
sub
add
mov
jbe
or
sbb
in
cmp
aad
test
insl
fsubs
mov
movsb
clc
inc
cmpsl
inc
lea
sbb
shlb
inc
js
dec
cmpsb
fbld
scas
lret
inc
fwait
mov
addr16
ss
mov
lds
sub
int
inc
dec
sti
push
cmp
xchg
lods
and
pop
push
sbb
and
in
imul
jp
mov
inc
push
popa
leave
lret
jae
das
add
xchg
outsb
sub
sbbb
enter
or
cmpsl
jge
in
in
xchg
mov
lods
repnz
and
cld
cld
sub
ja
cmp
fwait
imul
jp
add
lret
lcall
fdiv
jmp
pop
lea
cmp
or
or
lret
push
mov
pop
and
sbb
gs
pop
cmpsb
flds
mov
sbb
stc
and
out
leave
cmpsb
fnsetpm(287
out
les
loope
bswap
pop
aaa
cmp
add
xorl
aad
adc
ja
push
push
cmc
nop
fs
clc
or
repnz
fs
stos
and
loopne
cmp
ret
fisubrl
in
test
xchg
adc
movsl
cmp
mov
mov
pop
nop
test
or
aad
or
adc
mov
scas
cmpsb
jns
jns
nop
push
sub
test
and
adc
cmp
adc
loopne
cwtl
xchg
mov
int
lods
pop
sbb
sti
lcall
js
pushf
pop
inc
sbb
pop
filds
sbb
or
out
stc
iret
cli
jmp
inc
mov
js
dec
inc
js
imul
pop
pusha
cli
lret
jns
js
es
mov
add
cmp
pop
cltd
push
sbb
inc
xor
pop
mov
pop
mov
lcall
pop
mov
pop
cwtl
iret
adc
out
bound
fisubs
loop
add
cmpsb
cld
mov
xchg
sub
pop
add
xchg
nop
sub
pop
dec
push
dec
xlat
pusha
sahf
insl
pop
sbb
call
pop
mov
pop
incb
mov
adc
lods
shlb
pop
cwtl
stc
test
test
or
idivl
and
dec
mov
cs
fildl
jns
fmull
pop
fcmovnbe
dec
mov
and
push
es
stc
gs
insb
sar
std
in
outsb
in
in
sbb
sahf
sub
repnz
xchg
pop
mov
sahf
iret
mov
dec
div
leave
into
in
pop
clc
jge
decb
jno
lret
fiaddl
sub
push
movsb
jbe
popf
fnstcw
in
sbb
sbb
jmp
xchg
fstpt
xchg
popf
jg
loopne
cmp
jo
or
mov
lea
mov
and
inc
mov
fldl
call
icebp
and
test
sub
mov
lcall
cmp
mov
cltd
aad
pop
lea
push
sbb
cmp
js
stc
flds
les
mov
cmp
je
fdivrl
pop
sub
push
add
bound
push
jns
pop
inc
sub
loopne
imul
dec
pop
push
mov
mov
xchg
imul
fucomip
add
jnp
push
out
ljmp
arpl
pop
dec
inc
inc
push
int3
and
cmp
aaa
repnz
rorb
mov
fs
pop
jl
cmp
dec
add
sbbl
mov
dec
or
sub
in
mov
and
outsb
cmp
fdivl
inc
rorl
stc
mov
fldenv
cmp
jg
popf
in
sbb
pop
mov
pop
xor
push
sbb
ror
frstor
mov
in
in
shr
filds
push
ror
imul
int3
mov
pop
xor
mov
mov
adc
cmc
jne
popa
xchg
fs
lods
sbb
mov
pusha
incl
lea
addl
mov
mov
fistps
cmp
xchg
cwtl
inc
inc
mov
imul
pop
cwtl
mov
movsl
pop
fistpll
mov
and
in
outsl
inc
and
addr16
xlat
iret
sbb
leave
fcoml
mov
flds
xor
in
loopne
dec
add
or
pop
mov
pop
and
jnp
push
movsb
loopne
xchg
call
jge
xor
bound
push
arpl
pusha
adc
sbb
int
cwtl
popa
mov
cmp
shll
dec
jecxz
lret
hlt
push
jmp
mov
cmpsb
pop
cmc
movsb
add
lea
cmp
decl
jmp
ficompl
lds
adc
shl
add
sahf
sarb
hlt
pop
std
test
sbb
testl
add
jae
sub
xor
inc
mov
dec
fs
pop
les
sbbb
dec
ffree
stos
adc
pop
imul
pusha
je
mov
adc
inc
cmp
dec
mov
addl
insb
push
roll
bound
sbb
sub
cwtl
inc
cmpl
cmp
dec
fistpll
xor
test
sbb
pop
push
sub
xor
cmp
mov
sbb
mov
jne
mov
mov
pop
xchg
dec
push
jecxz
sbb
pop
pusha
and
mov
scas
repz
sub
fisttps
mov
jecxz
scas
inc
lret
jbe
and
je
fwait
jae
fisubl
cmpsb
mov
mov
wbinvd
jge
inc
bound
cmp
adc
mov
mov
xor
add
shl
fildl
out
lods
lret
insb
jb
fldt
sti
mov
movsl
lret
or
mov
pop
and
add
lods
aad
cmc
inc
adc
test
lahf
mov
cmpsl
out
mov
and
in
stc
scas
mov
in
fs
push
verr
decb
xchg
cs
mov
fldcw
scas
call
sub
std
scas
fists
push
js
addr16
shl
jns
mov
lea
xchg
dec
cmpb
or
ljmp
into
test
cmp
mov
add
call
jno
sbb
fdivrs
popa
cs
rol
or
jle
nop
je
movsb
jae
jecxz
hlt
mov
cmp
lret
jnp
popf
add
shlb
mov
mov
adc
ret
cld
test
mov
pop
mov
out
jb
insb
outsl
xchg
rorl
cltd
pop
cmp
inc
test
movsb
jp
jnp
mov
sbb
mov
sti
pushf
int3
pushf
hlt
pop
js
add
fldt
es
jp
lcall
test
dec
shrl
sbb
cmp
bswap
push
inc
andl
outsb
and
jle
vaddps
pushf
icebp
sbb
mov
in
movsl
pushf
sbb
push
jns
sub
mov
repnz
dec
aam
fstpt
pop
mov
and
pop
les
mov
scas
ljmp
pop
mov
data16
xchg
lret
cld
cmp
frstor
cmp
push
pop
nop
nop
jae
fucomp
shlb
in
pop
or
call
or
out
loop
in
jmp
xor
or
fcoml
xchg
ret
dec
cmp
repnz
mov
mov
push
in
rcrb
aaa
xchg
xchg
lcall
ja
mov
fildll
andb
jne
mov
fs
lret
test
imulb
xchg
stos
push
xlat
in
push
aas
popa
xchg
mov
sbb
or
sbb
pop
sbb
or
cmp
jp
lret
lahf
test
and
jmp
or
and
sbb
cmp
or
ficompl
jmp
adc
imul
fcompl
xchg
roll
sbb
fbstp
lds
sbb
push
lret
inc
push
jl
xchg
stos
fnstsw
sarb
mov
fimuls
jbe
cmovb
mov
arpl
insl
frstor
repnz
fldcw
rorl
pushf
sbb
sbb
push
xchg
mov
mov
jecxz
cmp
fisttps
sbb
xchg
sub
popa
add
cwtl
or
pop
and
cmp
mov
mov
add
repnz
addb
cs
sbb
sbb
lahf
int
pop
ds
sbb
cmpsb
fnsave
add
in
cmp
in
jbe
loope
ret
das
call
cli
push
ss
cltd
dec
and
sbb
ret
aaa
xchg
mov
and
add
lea
repz
cmp
cmp
xlat
movsl
insb
cmp
jle
jg
inc
pop
icebp
push
jae
lea
xchg
ret
xchg
ret
pop
nop
cltd
xchg
movsb
repz
popf
mov
jae
outsl
lahf
movsb
xlat
lea
mov
push
stc
in
adc
or
out
cmpsl
mov
shl
shr
sub
inc
out
jmp
jnp
jnp
push
addr16
push
adc
dec
dec
mov
sbb
pop
fisubrl
movsl
icebp
adc
cld
mov
push
mov
jnp
fs
push
lods
and
and
fisttps
push
sti
push
imul
inc
lea
and
sbb
pop
fnstsw
call
addl
popf
adc
insl
cmp
les
aam
cmp
sub
repnz
nop
mov
dec
loopne
fisubrl
sbb
fisttpl
repz
sahf
fmuls
mov
pushf
jp
arpl
shl
dec
ljmp
test
xchg
loop
cmp
cmpsl
fiaddl
fmull
sti
mov
xchg
outsb
aam
adc
push
mov
jno
mov
sub
lock
popa
push
faddl
mov
int
in
push
jne
fdivp
test
and
add
insb
pop
fwait
rclb
loope
loope
shrb
add
mov
or
lock
test
adcb
add
cmp
iret
in
inc
into
loopne
addr16
mov
cmp
cmp
nop
jle
stos
std
mov
arpl
pop
sbb
call
cwtl
scas
aam
lods
cmpsb
adc
loopne
mov
jl
xchg
scas
mov
sarb
xor
or
lret
incb
or
shrb
fyl2xp1
pop
pop
jns
jb
push
push
push
pop
push
sbb
dec
and
scas
fldcw
scas
loopne
daa
cmp
icebp
aaa
movsb
out
leave
and
push
add
idivb
mov
dec
paddusb
cmp
cmp
loop
mov
xor
clc
mov
xchg
lea
je
fnstcw
lcall
or
jecxz
inc
xchg
cltd
fwait
mov
popf
shll
hlt
jmp
popf
imul
pop
pop
dec
mov
in
pop
pop
fisubrs
xor
adc
fcompl
inc
inc
mov
xor
aaa
cs
push
pop
test
loope
mov
mov
jp
fisubrl
into
push
and
and
mov
fucom
fdiv
movsl
loopne
xchg
clc
sbb
movsl
push
fbstp
and
aad
out
sub
push
call
inc
cmp
or
pop
daa
adc
sti
xchg
leave
pop
loopne
cmp
outsl
mov
mov
leave
xlat
in
adc
xchg
push
fidivrs
outsl
addr16
fs
aam
xor
add
add
mov
mov
push
sbbl
jae
ss
xchg
fadds
push
lods
shll
ljmp
popa
mov
fistpl
movsl
cmp
addl
shl
sti
dec
cmp
or
xor
add
fsubrp
aad
int3
xchg
in
xor
addr16
and
loopne
movsb
aas
icebp
xor
test
or
stos
lret
sub
lret
icebp
cmp
cmp
cmp
and
pop
test
xchg
fnstsw
push
ret
inc
ret
and
dec
mov
cmpsl
and
jge
pop
je
mov
adc
mov
jg
push
rcll
inc
lret
sbb
in
jb
loop
loope
pop
add
adc
xlat
test
pop
inc
mov
jnp
scas
inc
push
xor
rol
sbb
repnz
dec
add
shll
jb
jle
mov
adcl
push
pop
jge
mov
fnstenv
cmp
jmp
hlt
lea
imul
push
xchg
js
cwtl
pop
cltd
lcall
mov
call
mov
movsb
ja
arpl
lret
mov
and
inc
lods
aaa
xchg
xchg
add
shl
shrl
hlt
loope
push
mov
pop
aad
lcall
int
movsl
mov
int3
cltd
into
out
out
bound
rorl
gs
aas
add
xchg
mov
mov
jl
movsl
xor
hlt
xor
popa
cmp
mov
rcll
sub
call
in
jmp
sub
inc
mov
cmc
xchg
sub
outsb
cmp
fistps
mov
shrl
xchg
adc
push
sub
and
push
cmp
jg
in
or
adc
mov
lea
lahf
cltd
mov
mov
mov
int
movsl
in
ljmp
mov
or
arpl
mov
fucomip
cmp
addr16
movsl
test
in
call
lock
inc
adc
fcompl
test
push
cltd
movsb
jmp
das
mov
push
dec
mov
mov
stos
stc
aad
mov
fwait
data16
lahf
roll
movsl
add
mov
inc
pop
push
scas
loop
cmc
mov
inc
cmp
popa
jecxz
pop
mov
push
push
mov
jno
push
scas
cmpsl
pushf
movsl
mov
insl
push
bound
aaa
cs
movsl
out
ja
add
inc
cld
add
int
out
dec
and
popf
repnz
cld
int3
jae
ja
xlat
pusha
mov
xchg
jecxz
sub
add
adc
and
adc
pop
movsb
repnz
aas
pop
push
inc
add
rcr
sbb
lahf
xchg
sub
jmp
repz
out
int
cwtl
xor
loope
ret
push
jge
inc
loop
ret
out
jmp
fnstsw
test
out
dec
cmpsl
shl
jb
lea
repnz
lret
clc
int3
push
mov
xchg
fisubs
loope
pushf
mov
lret
cmp
mov
lock
add
outsb
scas
dec
xchg
dec
fs
cmc
ja
fsubrs
dec
bound
fs
mov
push
mov
add
pop
lds
mov
shl
jg
inc
lcall
test
ret
out
sbb
fdivrl
push
cs
jno
pop
movsl
sub
stos
mov
mov
das
pushf
xchg
pop
push
jnp
mov
lods
dec
xchg
test
psubusb
mov
dec
lret
ljmp
mov
repnz
call
fsubrs
cmp
popa
cmp
fs
dec
add
pop
mov
mov
fsubr
push
jb
cmp
xchg
cmp
divb
cmp
inc
jno
xchg
shrb
add
cmpl
mov
pusha
sub
mov
xor
push
jnp
xor
xchg
sub
loopne
sti
jae
popf
or
cs
fs
dec
adc
scas
xchg
sti
test
push
enter
inc
ret
mov
pop
or
add
daa
push
jns
jmp
cmc
in
jp
or
inc
lret
jns
push
ds
pop
rclb
fdivr
jae
xor
out
sbb
fidivs
mov
pop
cmpsb
jg
dec
push
and
jae
push
fistpll
jmp
pop
repz
stos
jbe
sar
sbb
inc
push
cmp
sbb
or
jb
aaa
dec
or
sub
std
push
lret
out
fldt
cmp
cli
inc
cli
aam
pop
loopne
bound
xchg
fistpll
scas
lock
xor
or
fistpll
mov
sahf
iret
pop
test
addr16
pusha
inc
inc
or
jge
mov
mov
movsb
push
pop
testl
movsl
test
pop
les
lods
inc
test
bound
je
push
in
hlt
xchg
stos
cmp
and
jmp
movsl
icebp
sarl
insb
pop
inc
ljmp
rcrb
xchg
fs
cmp
inc
or
fldcw
lahf
iret
sub
mov
fnstsw
dec
aaa
fstp
sti
aad
nop
pushf
imull
push
add
jge
push
cmpsl
cli
lcall
inc
pop
ret
addl
loopne
fcomip
jnp
or
fisttpll
cmp
repnz
ljmp
add
popa
push
mov
jge
fnstsw
in
lret
sbb
adc
mov
ss
lods
fldt
xchg
pop
sub
mov
xorl
inc
mov
xor
lahf
ret
xchg
sti
fidivs
cltd
out
mov
jecxz
sbb
pusha
fwait
jl
pop
testl
mov
dec
cwtl
jge
std
xchg
sahf
lret
adcb
scas
sub
in
getsec
rcrb
and
cmpsl
in
pop
cltd
mov
sahf
sarl
sbb
add
fisttpll
lods
loope
pushf
fstp
stc
mov
popa
xchg
pop
in
cmpl
xor
nop
aad
mov
mov
or
xchg
pop
aad
adc
inc
mov
xchg
lahf
mov
dec
mov
loopne
mov
nop
popa
mov
xchg
das
in
ss
pop
push
icebp
mov
inc
adc
ret
and
popf
iret
lods
movsb
test
jg
movsb
fs
inc
dec
lret
add
fidivrl
pop
mov
xchg
xor
stc
lret
jns
fnsave
jecxz
jmp
sub
incl
adc
ret
loopne
ret
popa
mov
orb
adc
add
incb
inc
mov
dec
add
fimull
pop
movsb
jecxz
int
jl
test
fcomps
mov
and
xchg
sahf
mov
fcoml
shrl
mov
or
push
xor
mov
dec
in
and
xor
repnz
fs
or
int3
ret
fildl
dec
dec
mov
mov
fsts
xchg
mov
push
and
les
in
sbb
mov
mov
push
iret
leave
inc
lock
jbe
std
inc
push
pop
ret
cmp
cmp
mov
cmp
orb
jge
jmp
fdivl
out
cwtl
and
or
push
lret
and
scas
fldcw
add
lahf
fnstsw
cmp
incl
add
pusha
arpl
faddl
incb
dec
jmp
jecxz
fcomi
in
jmp
push
add
cmpb
pop
sbb
bound
and
fsubrs
popa
adc
dec
popf
lds
sbb
jmp
mov
fmull
mov
sbb
sbbl
push
cmpsb
dec
test
int3
idivl
mov
or
lods
arpl
bound
arpl
out
cmp
popa
mov
adc
rcrl
cmpsb
sahf
sub
mov
sarb
mov
out
fldl
lcall
aad
lret
jmp
jbe
push
movsb
std
ss
xchg
mov
clc
mov
xor
imul
dec
mov
mov
aaa
inc
hlt
seta
adcl
mov
out
int
or
repz
repnz
sahf
xchg
leave
insl
arpl
call
lahf
aad
mov
inc
xor
xor
inc
mov
push
fnstenv
cmpl
std
sbb
fnstenv
inc
sahf
js
adc
mov
pop
inc
inc
fdivs
pop
dec
xor
test
xor
push
mov
ja
jp
xor
mov
jnp
int
xor
inc
dec
mov
mov
or
ret
pop
leave
adc
enter
leave
int
rcrl
leave
or
bound
cltd
push
dec
movsl
aaa
adc
popf
xchg
sbb
aad
mov
and
jno
sub
das
cmc
mov
rcr
add
cltd
dec
inc
mov
pop
ds
flds
mov
cmpsl
or
mov
aaa
in
jl
sub
lahf
lret
repz
xor
mov
nop
fstps
xchg
cmp
mov
adc
mov
dec
ret
mov
xchg
lret
ds
imul
sbb
popa
lods
xchg
pop
pop
mov
sbb
cvtdq2ps
mov
test
xor
shrl
nop
mov
inc
outsb
mov
inc
xchg
cli
int
mov
sbb
jecxz
sar
popf
xlat
fldenv
insl
add
jo
push
push
and
sbb
roll
inc
in
xor
or
mov
xor
aaa
push
push
inc
pushf
inc
jne
mov
stc
or
ja
hlt
xor
sbb
jge
iret
stc
das
pop
fs
bnd
mov
or
push
cmp
dec
fldl
int
iret
xchg
sub
fdivrl
sub
jnp
mov
push
fdivs
pop
sub
cmpsl
mov
add
pop
sub
add
xor
iret
jmp
cld
push
mov
inc
aad
ss
lods
aam
xor
push
fnstenv
add
pop
iret
inc
insb
xor
cmp
push
push
jno
pop
es
push
fldcw
jbe
aas
push
test
mov
xchg
jle
xchg
push
push
insl
mov
lahf
add
sahf
lea
stos
inc
pop
std
pop
mov
ret
cld
ror
cmp
test
add
test
test
lahf
and
mov
rcl
cmp
add
inc
mov
popf
xor
aad
mov
cmpsb
lea
stos
jecxz
fisttpll
add
cmpsb
cwtl
imul
inc
cvtps2pi
cli
inc
pop
mov
lock
xchg
cmp
sbb
in
jp
rcl
pop
cmpsl
xor
fldcw
xlat
mov
lods
loop
fnstcw
sub
mov
add
imul
sbb
fs
fldcw
sbb
dec
push
dec
mov
test
out
mov
pop
movsb
sub
mov
pop
sub
mov
sub
push
loop
pop
or
jecxz
push
sub
outsb
dec
push
scas
pop
xor
jbe
mov
cmp
sub
pop
ja
push
aas
popa
sbb
mov
sbb
jle
mov
and
jb
test
scas
in
sub
xchg
decb
lods
pop
push
jo
jns
popa
ret
adc
psadbw
mov
popf
imul
inc
movsl
mov
sub
mov
lea
cli
pop
push
push
inc
xor
pop
sub
pop
cmp
loopne
jmp
push
insb
push
sbb
inc
mov
fiaddl
jl
inc
dec
xor
jge
jl
jns
and
sbb
fcompl
stos
mov
andb
out
aad
imul
daa
mov
and
rorb
jnp
notb
fs
divb
fnstsw
repz
mov
sarl
mov
aam
fnsave
das
or
les
lock
pop
mov
in
sub
fildl
ja
sti
dec
mov
and
fisubrs
or
stos
jbe
call
loop
lcall
rcll
int
imull
outsl
in
sbb
mov
into
insl
sbb
clc
scas
push
adc
int3
loopne
mov
push
mov
push
aad
sub
jns
cli
inc
and
in
call
mov
fisubl
jecxz
addr16
mov
inc
add
cwtl
pop
and
pop
jne
cwtl
int
mov
out
pop
aad
pop
clc
xor
push
lea
add
icebp
jmp
pop
add
loopne
lea
mov
mov
cmpsb
add
add
rorl
pop
clc
cmp
ficompl
xchg
lret
cld
jge
or
adc
mov
push
nop
cmp
add
fcomp
stos
jbe
adc
clc
shlb
add
jne
in
xchg
xor
dec
dec
scas
dec
inc
clc
cld
lret
add
jecxz
lcall
mov
adc
std
push
adc
xor
or
imul
or
jbe
or
sub
fcmovu
inc
push
lret
mov
gs
sbb
lcall
mov
lcall
cld
adc
xor
cmpsb
in
push
xor
adc
shrl
fs
imul
out
push
shl
jno
outsb
dec
mov
lret
mov
mov
mov
das
cmpsl
pop
dec
jno
adc
cmp
adc
or
enter
dec
fdivs
clts
mov
cs
add
push
mov
jb
es
dec
mov
iret
cmp
frstor
stos
mov
adc
dec
lret
cwtl
ja
mov
in
mov
ret
mov
jl
int
jns
loop
jns
in
fcomps
fnstsw
mov
push
lods
dec
mov
sbb
xchg
outsb
or
add
scas
divl
pop
filds
data16
push
or
or
shlb
ficompl
xchg
es
cld
inc
aas
movsb
lods
int
pushf
mov
ja
pop
mov
daa
mov
adc
add
loopne
cwtl
adc
inc
test
fsubr
mov
mov
aad
xchg
xor
adc
mov
mov
cmpsb
movsb
xchg
jo
mov
insl
lods
cmp
lods
inc
jmp
sbb
push
push
mov
mov
mov
add
call
mov
lcall
cmp
xchg
data16
int
test
adc
lret
jne
test
movsb
jmp
and
repnz
adc
pushf
cmp
std
push
rclb
and
mov
inc
loope
or
xor
mov
jno
inc
adc
cmp
mov
pop
and
xor
test
or
pop
shrl
mov
xor
inc
xchg
fs
adc
in
mov
mov
xchg
fcmovbe
dec
in
lods
jmp
xchg
icebp
shrl
out
push
push
add
in
imul
sbb
mov
mov
lret
xchg
insl
xor
jecxz
adc
fadd
inc
jo
mov
in
push
jnp
pop
loopne
std
push
sub
icebp
data16
loop
cmp
rcll
mov
shl
mov
add
add
mov
cmp
mov
mov
test
in
mov
xchg
fst
xchg
bound
jmp
pop
xchg
ljmp
loopne
push
xor
add
inc
fimull
les
xchg
cmp
pop
sbb
ror
cmc
jl
lea
add
xchg
call
mov
lret
enter
lds
stos
in
pop
int
inc
repnz
jmp
dec
mov
rclb
cld
jmp
repnz
test
mov
dec
mov
sbb
btc
pop
pop
scas
pop
or
fistps
mov
movsl
movntq
inc
cltd
rcll
dec
xlat
and
add
hlt
test
xor
ret
jge
push
fistpl
push
mov
popa
mov
repnz
lret
sub
cld
pushf
call
xchg
fsubl
jbe
mov
enter
adc
repnz
pop
mov
dec
addb
test
xchg
mov
sub
es
sub
sbb
dec
addr16
xlat
out
xchg
imul
pop
jbe
jne
arpl
mov
push
gs
pop
mov
jp
int3
popf
lds
int
mov
mov
xchg
adc
rcrl
ljmp
rcl
jl
movsl
xor
pushf
pusha
sbb
lcall
shlb
insb
or
inc
mov
popf
mov
fnsave
jbe
out
rorl
repnz
xor
sbb
sbb
lret
adc
mov
aad
lcall
and
mov
icebp
jl
je
bound
dec
aam
jmp
jmp
sarl
jg
jae
mov
dec
cmpsl
fldenv
in
inc
dec
call
mov
aad
aam
lret
das
test
jg
rcl
insl
jge
cmc
iret
fmull
jbe
dec
xchg
ror
jne
sbb
mov
cwtl
or
xchg
mov
sub
pop
push
lods
pop
add
insb
repnz
fs
xchg
or
mov
mov
fidivrs
push
int
movd
call
jl
scas
jmp
xor
ja
pop
push
cmpsb
call
incb
popf
jge
mov
cs
jne
mov
std
icebp
sbb
outsb
sbb
or
pop
pop
cmp
cltd
mov
xchg
ret
xchg
cli
pop
xchg
ret
dec
pusha
adc
jae
fstps
add
gs
cwtl
push
outsb
cmp
sti
xchg
fucom
pop
mull
test
daa
lods
test
bound
push
ljmp
cmp
and
inc
lahf
mov
xchg
sub
inc
add
xor
es
dec
inc
ss
push
fdivrl
mov
pushf
movsb
mov
jge
dec
dec
jle
pushf
xor
je
dec
fucomp
adc
inc
test
hlt
ja
pop
mov
lods
push
mov
mov
dec
gs
push
sub
cmc
mov
cmp
dec
xor
cmp
and
mov
jbe
mov
add
mov
enter
and
inc
nop
sarb
push
movsb
adc
inc
jb
fs
adc
pusha
sub
cmpsb
fisttpll
mov
cld
loop
dec
nop
push
cmpsb
or
js
mov
daa
lods
jl,pt
sub
xchg
dec
mov
or
fmull
xchg
ss
push
mov
sahf
or
jle
out
fs
not
inc
sbb
movsb
add
sbb
sti
or
sti
shr
sbb
mov
or
dec
mov
incb
cmp
pop
lds
inc
loop
div
es
adc
or
add
jmp
mov
mov
les
pusha
pop
neg
push
sbb
pop
scas
pop
movsl
mov
cmpsl
dec
aas
cmp
iret
repnz
xor
inc
in
push
mov
mov
sahf
mov
movsl
xchg
cs
in
sbb
pop
jge
pop
xor
lcall
inc
cmp
dec
sbb
sub
mov
stc
leave
lahf
flds
sub
mov
sub
pop
and
roll
shl
aaa
mov
mov
into
fiadds
ret
mov
add
and
jle
das
cmp
adc
enter
cs
fndisi(8087
mov
jle
daa
add
mov
js
stc
inc
xlat
repnz
mov
call
dec
mov
mov
pop
mov
jg
or
cli
sbb
mov
loopne
mov
xor
pop
mov
mov
xchg
int
jns
rcll
test
cmp
sbb
mov
movlps
cwtl
incb
js
in
pop
fadds
idiv
loopne
arpl
sarl
mov
cmp
pop
mov
jecxz
mov
jbe
repnz
dec
xchg
mov
out
inc
popa
pop
sbb
push
fwait
hlt
cmp
xchg
and
movsl
xlat
lods
pop
frstor
in
inc
xchg
iret
inc
mov
sti
in
adc
mov
cmpsb
xlat
stc
movsl
insb
mov
shlb
lret
mov
mov
xor
cmp
in
mov
mov
repnz
add
movsb
cmc
repnz
mov
fwait
call
mov
or
and
fnstenv
fisubs
dec
iret
andl
fs
pop
push
test
in
nopl
xchg
outsl
pop
mov
mov
mov
pop
xchg
inc
orl
icebp
mov
fwait
sub
int
mov
fsubl
lea
stc
mov
pusha
stos
or
shll
and
subb
or
roll
lret
movsb
jmp
mov
pop
xchg
jg
xchg
xchg
jmp
nop
lret
in
and
jge
out
cmc
xchg
jge
inc
aaa
inc
mov
pop
lret
xchg
clc
jg
mov
add
xor
pop
dec
sbb
aad
or
pop
inc
ljmp
push
shrl
pop
iret
fistps
inc
xor
arpl
jle
repnz
mov
lret
xchg
int3
cmpsb
mov
xchg
mov
bound
xlat
fidivs
mov
loop
push
mov
cmp
and
loop
adc
insl
or
push
fdivl
dec
gs
mov
fwait
inc
into
pop
add
mov
in
jo
lods
jb
push
mov
dec
into
sub
popa
cmpb
mov
mov
mov
inc
mov
mov
mov
push
adc
imulb
mov
inc
inc
sub
sbb
push
jns
xchg
adc
pop
sahf
xor
xchg
bound
fbstp
mov
and
nop
cltd
adc
sbb
xchg
jge
imul
out
test
sbb
cmc
lods
lcall
jmp
mov
adc
lret
xchg
or
mov
cmpsl
pushf
imul
movsb
test
cwtl
loope
clc
adc
aaa
lds
lea
push
gs
xchg
test
push
adc
xlat
outsb
daa
mov
jp
test
lods
imul
jp
dec
jecxz
ret
jl
lret
pop
or
shl
negl
frstor
ljmp
fldcw
xchg
test
mov
cmp
mov
lahf
mov
xor
les
and
mov
repz
fdivrl
cmc
cmp
pop
lahf
in
decb
pop
loope
dec
add
and
loop
or
mov
das
fdivrl
iret
movsb
and
mov
jge
std
jle
push
insl
inc
mov
push
xor
adc
adcl
mov
repz
and
mov
pop
sbb
adcb
xor
lods
fstps
jmp
lea
dec
aad
popf
sbb
mov
xchg
ja
addr16
mov
cmc
inc
push
push
xor
or
flds
into
sarb
dec
fld
mov
call
mov
mov
xorb
loopne
sub
iret
mov
sti
movsl
and
inc
adc
jo
mov
insl
mov
and
std
mov
ljmp
scas
add
test
or
in
mov
aam
bound
mov
push
or
imul
mov
je
push
push
popf
loop
std
cmp
repnz
roll
pop
xor
popa
bound
sbb
das
and
mov
and
mov
adc
out
fimull
aas
mov
movsb
pop
ret
outsl
notl
fcoml
imul
cmp
mov
js
std
popa
mov
xchg
jecxz
jnp
push
and
sbbl
lret
and
push
lahf
sbb
jb
add
xchg
pusha
lea
add
lods
fsubs
inc
arpl
cmp
dec
pop
mov
or
xchg
aad
jmp
out
nop
jmp
fst
push
imul
lds
sarb
jbe
xor
aaa
in
popa
jns
cmc
jae
ljmp
stc
mov
sbb
lods
data16
les
cwtl
mov
xor
pop
mov
pushf
shlb
rcr
inc
sbb
mov
lret
xor
popa
ss
scas
fists
push
xchg
jmp
loope
jmp
arpl
leave
fsts
mov
cmp
jg
adc
imul
pop
decl
jge
mov
pop
lahf
pusha
xchg
fnsave
mov
imul
cs
in
test
sbb
or
stc
lcall
cmc
or
jnp
arpl
mov
nop
or
cmp
arpl
add
and
jecxz
inc
insl
add
insb
xchg
and
cmp
outsb
add
xchg
sbb
insl
cwtl
push
mov
cmp
lret
shll
sub
or
stos
pop
repz
jae
mov
sbb
jno
icebp
mull
mov
push
in
mov
or
add
stos
xor
sbb
aam
fwait
lret
hlt
shll
add
mov
xchg
sti
dec
pushf
int
dec
add
and
sub
mov
int3
movsl
or
int
or
cmpsl
js
hlt
sub
call
addr16
stos
jb
cmpsl
jp
adc
add
in
push
adc
call
sahf
xchg
inc
mov
xlat
dec
add
mov
xchg
mov
aam
jbe
fnstenv
adc
popf
rcll
arpl
sbb
inc
fwait
and
insl
add
in
dec
sbb
add
mov
xor
test
lret
inc
and
std
cmp
and
fsts
xchg
subl
mov
push
xchg
inc
test
push
lods
add
test
xchg
cs
jae
jmp
cmpsl
inc
sbb
jnp
dec
sbbl
sbb
mov
rcrb
sub
inc
inc
cld
imul
and
fs
sarl
and
int
or
mov
mov
and
xor
mov
in
fdivr
mov
data16
repz
int3
repz
add
xor
cmpsl
icebp
add
add
pop
mov
inc
subb
popf
lcall
in
lret
dec
aas
in
data16
lahf
pop
dec
cltd
popf
ret
lret
jmp
in
inc
mov
mov
int3
in
popf
cmp
jnp
cwtl
leave
xor
inc
push
es
fsubl
jg
stos
lret
cwtl
mov
stos
sarb
decl
test
in
jl
sbb
mov
mov
adc
jno
filds
adc
push
aad
adc
repz
inc
in
repz
inc
repz
call
pop
mov
lods
test
jg
mov
push
xor
cwtl
xchg
aad
outsb
test
ret
sub
cmp
std
jle
fnstenv
jns
and
cld
jae
push
popa
fcmove
pop
cmp
mov
addl
inc
lock
xor
dec
repz
popa
rcl
dec
leave
dec
aad
adc
xor
fnstcw
inc
test
ret
filds
cmc
cs
mov
nop
repnz
cmp
rclb
imul
cmp
xor
sbb
dec
mov
and
gs
or
inc
inc
push
mov
push
loopne
jg
cmp
jbe
and
test
call
mov
cltd
inc
push
clc
ret
jnp,pn
imul
or
pop
cld
fmul
lret
inc
cwtl
setne
mov
cli
movsl
outsb
mov
sbb
lahf
ds
sbb
inc
mov
in
decl
xchg
inc
and
inc
cwtl
aas
scas
lock
adc
je
std
in
jecxz
or
mov
ficoms
fdivr
in
adc
jo
int3
inc
cmp
sahf
test
jmp
adc
lret
flds
sub
retw
xchg
mov
pop
test
repnz
push
shll
or
push
aaa
jl
in
and
mov
pop
add
pop
lret
clc
pop
stc
js
and
xchg
dec
fistpll
cmp
in
push
pop
fwait
rolb
mov
in
pop
movsl
mov
cld
mov
outsl
cld
popa
pop
pop
jle
leave
jecxz
enter
inc
in
movsl
and
in
fadd
lret
pop
das
pushf
in
loopne
mov
pop
js
in
popa
cmpsl
es
repz
stos
in
jecxz
or
out
call
movb
jmp
test
pop
dec
mov
es
jmp
iret
sub
push
cmp
in
imul
mov
rorl
aaa
pop
sbb
jge
push
lods
repz
gs
hlt
movsl
enter
inc
sub
dec
cwtl
pop
add
inc
pop
test
in
dec
mov
in
inc
xchg
js
in
out
push
mov
in
push
icebp
movsl
or
xchg
mov
pusha
cmpsl
add
and
fs
popa
mov
loopne
mov
imul
adc
mov
push
adc
lods
mov
xor
popf
xchg
mov
adc
add
sbb
lods
mov
xchg
and
add
lea
dec
inc
stc
push
xchg
xor
shl
sub
jnp
pop
call
mov
shll
mov
push
pop
in
mov
mov
or
je
mov
lds
hlt
fldenv
push
shll
inc
fbld
in
decb
ja
mov
shl
call
sbbb
aam
xchg
cmpb
loopne
xor
mov
inc
jge
sbb
push
in
aad
pop
add
popa
lret
xchg
push
inc
jnp
stos
jmp
ljmp
add
in
andb
push
test
popa
pusha
call
dec
outsl
mov
fsts
ss
pusha
xchg
fstl
pushf
xor
dec
hlt
addr16
mov
inc
jno
insl
mov
dec
sti
test
arpl
cmp
sbb
aad
sbb
out
dec
sbb
sub
repz
int3
shll
leave
nop
scas
mov
fildl
or
jmp
mov
nop
adc
mov
xchg
mov
icebp
xchg
mov
push
pop
inc
jle
icebp
fwait
jmp
jg
push
lcall
mov
and
cs
push
push
mov
push
stc
cmp
mov
rorl
cmpsb
pusha
push
inc
push
addr16
mov
jl
subb
pop
fdivrl
scas
jnp
jmp
shrb
jmp
pusha
enter
cld
jb
insl
shl
xor
sti
pop
daa
pop
mov
lret
and
gs
adc
sti
cmp
int3
sub
fisttpl
mov
push
fwait
loopne
int
hlt
pushf
mov
call
push
movsb
inc
lret
push
add
in
push
std
xchg
xchg
jmp
cmp
arpl
mov
push
push
fs
mov
movsl
xchg
or
xchg
aad
mov
dec
push
push
jmp
dec
int3
outsb
xchg
mov
push
inc
push
mov
pop
inc
sti
int3
iret
mov
andb
cmp
mov
and
sub
mov
repz
aam
or
add
mov
mov
int3
dec
sbb
pop
scas
or
nop
hlt
fdivs
mov
cli
test
jl
inc
and
jb
jmp
icebp
push
lds
roll
jns
ffree
xlat
push
jg
fsubrs
add
jns
mov
mov
push
inc
loope
mov
mov
in
out
int3
jo
dec
cli
or
sti
lahf
mov
movsb
divl
xor
ret
sub
push
dec
mov
loop
xchg
jmp
loop
xor
xchg
sub
lahf
les
sub
pop
mov
int
fldenv
out
decl
xor
aad
in
jmp
lahf
sub
mov
push
sti
xchg
das
sub
jno
std
loopne
mov
test
ds
lods
lock
or
inc
ja
lea
mov
and
dec
jmp
loopne
jnp
mov
loopne
js
ror
jnp
add
sti
and
jae
lret
mov
push
xor
cmp
je
fiaddl
or
pop
jle
dec
scas
xchg
sbb
sbb
out
mov
arpl
mov
dec
or
dec
sbb
in
pinsrw
pop
imul
aam
jnp
mov
pop
repz
pop
es
in
scas
mov
cmp
mov
push
xor
in
sub
inc
into
hlt
aad
inc
lods
mov
mov
hlt
xor
push
lods
sbb
bound
pop
inc
das
fnstcw
inc
jmp
fimull
int
stos
mov
fst
or
mov
cmp
fcompp
fnstsw
scas
xchg
xor
lds
aas
lret
sarb
push
movsl
mov
add
lcall
sub
mov
fimuls
mov
sbb
cltd
push
jle
outsl
inc
xchg
push
stc
mov
les
xor
scas
adcb
ja
adc
idivb
mov
aad
pop
jg
int3
cld
movsl
dec
mov
out
mov
outsb
mov
push
andl
mov
sub
mov
push
add
int3
sbb
or
mov
mov
shll
shll
aam
jge
daa
and
stc
push
xchg
add
lods
jb
iret
add
mov
and
dec
mov
mov
loopne
aas
push
leave
or
stc
bound
adc
test
xchg
jle
sub
xchg
dec
sti
and
mov
and
add
scas
jmp
xchg
mov
fs
ss
in
ret
mov
notl
pop
std
mov
adcb
jl
insb
out
pushf
dec
out
mov
pushw
popf
sbb
cmc
je
or
push
xor
push
sti
in
lret
mov
cmp
and
stos
dec
add
jo
inc
sub
dec
out
jns
arpl
lds
push
jmp
fcomps
mov
mov
imul
add
mov
xchg
aaa
add
adc
mov
dec
mov
or
pop
daa
jg
into
mov
iret
and
out
adc
add
and
pop
pop
mov
add
jno
push
mov
jp
sbb
add
xor
iret
shl
push
cmp
ret
test
in
jb
lock
mov
shll
lcall
xchg
das
pusha
push
jecxz
and
inc
adc
mov
jle
out
mov
mov
xor
push
incl
mov
jae
cmp
test
popf
pop
jbe
in
subl
lret
xor
mov
movsb
int3
out
fiadds
inc
cld
or
gs
sub
xchg
nop
ljmp
aad
scas
int3
subl
cmp
push
mov
rorb
sbb
jb
sarl
outsb
push
mov
xor
and
mov
xchg
cmpsb
mov
mov
sbb
out
fldcw
inc
pop
ret
pop
adc
add
push
xor
add
repnz
pop
or
cmp
out
test
mov
inc
mov
pop
lret
in
mov
cmpsl
and
pop
rcl
ret
loopne
rcr
xchg
movsl
mov
jl
ljmp
pop
je
xchg
adc
stos
mov
pop
cmp
popf
repnz
stos
jl
mov
lret
and
adc
cmp
mov
popf
arpl
xor
mov
repnz
stc
out
movsb
inc
sbb
mov
fbstp
push
std
mov
in
push
add
out
add
ficoms
pop
inc
enter
inc
sti
loop
and
ss
das
jnp
mov
and
lcall
iret
mov
pop
fs
popa
inc
test
mov
rep
std
movsl
nop
insl
jmp
out
adc
popa
mov
sbb
or
movsb
mov
ja
push
imul
out
mov
movsl
jge
aad
fucomp
cmp
lret
xor
push
push
ret
mov
loop
push
mov
dec
stos
lods
cmp
jmp
andl
fwait
outsb
lcall
pusha
popa
nop
les
sahf
or
loopne
shll
sti
xchg
or
push
sbb
std
xchg
inc
fidivrl
mov
push
in
out
mov
dec
clc
xchg
call
xlat
dec
test
xchg
or
inc
sbb
aad
sar
sti
test
cmc
xchg
pop
lret
mov
xlat
call
daa
aam
add
iret
faddl
int3
jno
or
jmp
cmpsl
push
cld
jg
pop
sub
push
inc
testw
fisubrl
fwait
cmc
lret
sub
in
mov
imul
or
sbb
inc
orl
inc
add
negl
jo
jae
std
mov
mov
subb
xchg
jge
pop
test
enter
fnclex
mov
add
test
loop,pn
fdivr
out
stos
jmp
push
rclb
add
pop
scas
mov
xchg
fmul
cmp
pop
int
hlt
mov
cwtl
pop
das
sub
lods
sub
push
jnp
and
sti
stos
xchg
pushf
aad
fnstenv
sti
inc
cmp
xchg
lahf
test
out
cltd
jge
cmp
cmpsl
cmc
fucomp
jge
fwait
pop
push
dec
dec
fwait
mov
and
popf
lock
stos
jg
rolb
cmc
mov
pop
subb
push
icebp
icebp
jns
in
test
fs
sbb
or
fwait
push
imul
aad
add
outsl
pop
cmc
in
jno
cmp
jno
cmp
add
or
push
inc
cwtl
push
aaa
bound
mov
gs
push
movsl
test
xor
into
testl
outsb
sub
add
hlt
ret
fisttpll
repnz
mov
dec
std
ret
jno
dec
out
xor
movsb
jmp
out
add
adc
xchg
fs
cmp
test
in
mov
mov
inc
pop
pusha
jbe
xor
lret
jge
push
or
jg
adc
mov
mov
jg
fstps
popf
pop
push
mov
loope
xchg
adc
mov
outsl
nop
xchg
into
das
xor
cli
add
mov
mov
cmp
add
mov
mov
cmp
sti
out
pop
insb
call
mov
cmp
pop
dec
pop
insl
lea
and
xchg
push
pop
adc
loopne
ficompl
add
in
mov
inc
cmp
mov
mov
or
fs
sbb
shlb
jns
leave
mov
adc
scas
fnstenv
jle
dec
xor
pop
xorb
shr
cmc
std
pop
std
mov
mov
in
out
mov
testl
jb
jge
push
pop
xchg
and
inc
sbb
xchg
sub
adc
incl
sbb
inc
sub
mov
scas
sbb
jno
sub
mov
incl
aad
mov
addr16
notl
mov
mov
push
xor
sbb
int
push
movsl
out
lea
loopne
lahf
mov
pop
push
xor
dec
test
cld
aad
and
icebp
dec
jb
pop
fidivs
sbb
jecxz
jg
push
loopne
mov
inc
xor
jle
lahf
pop
pop
inc
add
xchg
orb
push
sub
nop
fistpll
fst
out
add
outsb
fwait
push
sub
sbb
enter
imul
imull
cwtl
dec
std
stc
inc
mov
sahf
flds
sti
pop
aad
mov
in
test
dec
jmp
or
fwait
mov
cmpsb
lds
outsb
test
jmp
int
push
lcall
mov
pop
cmp
outsb
jge
mov
xchg
pop
push
test
aaa
mov
lods
jno
andl
cmp
push
fs
jg
in
pusha
xchg
push
inc
inc
add
mov
cmpsl
fsubs
cmpsb
cmpsl
jae
jmp
add
iret
punpckhdq
fwait
dec
add
mov
push
loope
cmpb
lock
icebp
mov
add
hlt
test
or
inc
push
jp
xchg
int
mov
roll
in
arpl
mov
mov
pop
jle
lock
loop
mov
xchg
cmp
lods
push
movsl
inc
mov
mov
dec
cld
lret
mov
outsl
int
and
lcall
push
lahf
cmp
dec
jb
mov
cmc
repnz
sbb
out
sub
fwait
les
push
xchg
inc
cld
xchg
or
popf
jmp
jbe
mov
adc
xchg
push
ljmp
aad
add
scas
icebp
cmp
fs
add
rclb
popa
pop
or
lea
mov
stc
mov
cmp
inc
addr16
mov
jp
repnz
mov
fstpl
lahf
inc
ds
push
inc
and
movsl
or
push
jo
fsubrl
cld
in
push
lods
ret
or
shlb
inc
aad
leave
int
cs
jl
fiadds
pusha
ss
jo
out
fildl
sbb
fisttps
nop
out
test
sbb
xchg
dec
dec
mov
jle
push
cmpsb
inc
iret
lea
dec
mov
and
mov
xor
lahf
jne
mov
ret
ss
push
xchg
jl
cmp
jno
adc
jnp
mov
lahf
sbb
dec
loope
cltd
icebp
lahf
mov
mov
xor
push
in
lret
xchg
rolb
test
arpl
lods
out
sub
sbb
add
cwtl
sbb
cld
or
add
push
shrb
mov
popa
dec
lret
gs
or
jl
sbb
outsb
cltd
popa
or
popa
xchg
aaa
popf
mov
stos
mov
jne
pop
xor
mov
lods
imul
lret
jecxz
push
xchg
cltd
pushf
push
xchg
jecxz
cmp
in
clc
cmc
mov
cmc
sbb
iret
mov
mov
push
mov
xchg
xchg
addl
add
pop
pop
cmp
and
daa
adc
inc
inc
jnp
fmul
loope
cmc
push
shll
cmp
gs
int
es
pop
add
dec
movsl
cmp
icebp
mov
cmp
dec
loope
movsl
sub
popf
sti
bound
cmp
in
shrl
mov
movsb
fdivrl
pushf
add
fdivrl
dec
xchg
sbbb
push
sbb
add
in
jecxz
aaa
int3
aad
and
ficomps
or
and
mov
cmp
mov
xchg
sub
scas
cmpsl
xchg
jo
je
jle
add
or
jg
xchg
jge
test
pop
mov
nop
imul
pusha
ljmp
xchg
sarb
pop
jno
jmp
sbb
mov
fimull
out
lahf
aaa
ss
jmp
jp
mov
push
in
xchg
or
add
ljmp
push
dec
subb
dec
mov
sti
outsb
cmpsl
jmp
add
mov
sub
test
or
inc
mov
push
add
inc
addl
add
rolb
int
sahf
in
aam
rorb
dec
imul
ljmp
and
enter
pop
fs
pop
mov
nop
inc
adc
stos
jo
mov
fwait
mov
cltd
int
xor
stc
pop
cwtl
add
jle
dec
pop
cmp
mov
stc
mov
shll
punpckhbw
stc
clc
jmp
inc
movsb
iret
mov
mov
cmpsb
cmc
mov
bound
dec
lea
add
and
test
hlt
adc
mov
push
rcll
adc
ficoml
into
icebp
add
inc
pop
cmp
pop
mov
mov
cltd
mov
repnz
mov
aad
call
ja
sbb
inc
pop
xchg
cmp
adc
add
and
sti
pushf
and
mov
mov
leave
das
andb
sbb
sub
mov
int
aas
sub
in
inc
cmpsl
jae
fs
lea
xor
sub
xchg
int3
loopne
push
jg
test
sub
cwtl
fnstenv
pop
xchg
push
jg
xor
movsl
or
jae
lret
push
dec
sub
pop
mov
cmp
movsl
pop
dec
jle
add
aad
fnsave
inc
inc
bound
clc
add
test
bound
xorl
adcb
out
cwtl
lock
aam
cs
rolb
mov
jbe
xchg
mov
into
shll
outsl
ret
mov
ret
add
rclb
loope
mov
outsl
test
jne
cmc
rclb
js
arpl
push
daa
js
lock
xchg
push
fwait
ret
mov
cli
fiaddl
fwait
sbb
inc
sub
popf
add
mov
push
mov
into
fldt
lahf
leave
jmp
movsl
mov
mov
push
nop
or
sti
add
jne
xor
ljmp
repnz
jnp
mov
add
sahf
shrb
cmpsb
outsl
inc
inc
aas
mov
dec
test
ja
cwtl
fsubr
cmpsl
jl
inc
pop
xlat
dec
push
pop
dec
addr16
add
fnstsw
mov
xchg
or
ss
mov
je
bswap
popa
popa
add
or
cmp
cmp
aad
sbb
shlb
fs
mov
add
push
sbb
add
std
sbb
movsl
push
mov
iret
push
adc
push
xchg
pop
add
in
add
sbbb
and
xchg
shll
mov
outsl
aas
jns
mov
mov
ja
jne
sub
movsl
pop
xor
cmp
jecxz
ror
mov
mov
xor
in
push
aaa
lods
and
shrl
loop
push
fcompl
add
popl
mov
sti
add
lcall
pop
dec
add
adc
mov
gs
pop
dec
jns
fucomip
repnz
cmp
dec
js
dec
sbb
cmpsl
sub
icebp
and
sbb
shlb
push
fbld
ficompl
dec
sub
add
insb
push
jp
mov
fs
sub
sti
mov
dec
lea
test
and
notl
mov
mov
dec
outsb
jo
dec
inc
popa
ss
inc
hlt
mov
push
fdivl
loop
mov
sub
cs
add
cmpsb
xlat
push
lret
jno
pop
cwtl
in
push
mov
or
popa
lret
fldz
or
rcr
outsl
loopne
mov
sbb
mov
mov
dec
mov
mov
and
dec
nop
xor
mov
leave
xlat
lcall
repnz
mov
and
dec
jae
inc
in
int
and
xchg
push
aad
hlt
lods
adc
xorps
mov
or
jmp
aad
lods
xchg
adc
or
movsb
xchg
out
xchg
push
mov
inc
pop
fcomps
pusha
out
pop
or
je
mov
fcmovbe
xchg
pusha
movsl
mov
mov
movsb
add
pop
sahf
rcl
mov
sub
pop
and
cmp
imul
fs
pop
pop
push
cmp
or
das
in
cli
xchg
jge
mov
adc
push
call
mov
outsl
cmc
mov
loop
test
pop
mov
and
sbb
lods
cli
lock
insb
jo
subl
cli
aas
push
outsb
rcrb
aam
mov
call
fstpt
lcall
xchg
imul
jns
ss
pop
mov
and
xchg
lods
push
aad
je
dec
lods
lods
int
outsb
in
mov
leave
cmpsl
mov
fidivrs
mov
mov
inc
sub
push
sahf
rcll
in
xchg
mov
in
xor
pop
shrb
fstpt
mov
stos
mov
mov
cmp
mov
mov
add
adc
scas
xchg
ret
insl
movsl
cmp
sub
jmp
addr16
mov
adc
popf
inc
cmp
xchg
test
outsb
inc
xchg
sbb
icebp
adc
mov
mov
fs
and
pushf
and
je
mov
loop
lahf
jnp
add
loopne
xchg
fnstcw
mov
fs
dec
jo
test
xchg
pop
xorb
out
out
lret
or
pop
add
idivb
xchg
repz
dec
cmpsb
pop
loope
cmpb
mov
mov
add
int
iret
shll
cmp
mov
in
mov
pop
fsub
pop
mov
aad
sti
dec
out
pop
or
fxch
movsl
add
jbe
inc
push
xchg
cmp
sub
imul
sti
sbb
add
inc
xchg
aad
int
adc
in
xor
lods
popa
cmpsb
and
pop
test
xchg
cmp
leave
sub
jle
cmp
xchg
faddl
cmp
aad
clc
nop
dec
imul
or
mov
mov
ret
mov
ja
lods
jae
aad
pusha
and
mov
inc
mov
jle
mov
stos
movsb
jno
xchg
push
xchg
fs
or
dec
imul
and
add
adc
loopne
mov
into
test
cltd
les
cmp
pop
adc
std
sub
int3
int3
int
mov
add
nop
imul
mov
jle
rcrl
addr16
sbb
or
popa
mov
pop
lret
sbb
cli
cmp
call
fimull
popf
out
test
push
add
and
mov
push
jae
push
pop
pop
inc
repz
jl
icebp
aad
mov
decl
sub
add
jl
push
rorb
or
cmpb
rcll
ja
test
push
fldenv
popa
in
cwtl
and
cmp
sub
mov
movsb
jl
outsb
or
adc
mov
pop
loope
push
inc
js
gs
adc
leave
xchg
fs
das
outsl
cmc
pop
ds
ljmp
adc
lret
jae
and
pop
pop
mov
imul
xchg
cmp
push
fstl
dec
ret
arpl
lcall
leave
enter
rcrb
int3
inc
lds
xor
fimull
out
mov
dec
push
pushf
call
and
lea
fdivrl
fistps
add
popf
int
aad
iret
add
inc
sahf
cmp
int3
js
mov
dec
lret
mov
nop
imul
sbb
add
jbe
jge
jo
sbb
mov
sub
jne
mov
xchg
in
in
mov
dec
inc
cmp
mov
add
cwtl
xchg
ljmp
mov
or
sarb
xchg
rolb
push
stc
int3
gs
bound
jmp
mov
hlt
pop
repz
pushf
shlb
jecxz
lret
mov
mov
lret
mov
and
adc
mov
sbb
test
or
mov
repz
loop
ficompl
paddw
out
popa
test
ja
or
lahf
push
ds
aaa
inc
and
jle
or
fiaddl
add
addr16
in
push
inc
mov
ficompl
add
xchg
mov
pop
xchg
fistps
sbb
movsl
dec
test
inc
mov
xorb
in
ja
fwait
lods
jb
push
jne
pop
mov
mov
or
and
es
xchg
rorl
std
fisubrl
push
sub
popa
cwtl
adc
pop
and
imul
mov
ss
inc
or
movsl
rclb
push
jg
mov
dec
sysexit
ret
inc
in
mov
mov
cmpsb
jbe
or
fsubp
mov
mov
jmp
cmp
idivb
jbe
push
pushf
decb
xchg
les
xor
mov
or
inc
mov
fistpl
lods
cld
leave
add
ret
call
and
xor
mov
popf
std
mov
pop
rclb
inc
adc
xor
sub
repz
mov
xchg
fisttps
dec
add
cmc
push
xchg
incb
repz
xchg
jmp
in
in
xchg
sub
fs
dec
hlt
test
mov
xchg
inc
sahf
in
leave
movsb
fnstsw
mov
in
inc
lahf
fnstcw
in
and
bound
test
enter
in
cmp
fcoms
mov
hlt
jecxz
cmp
pushf
in
shll
in
in
mov
inc
out
vpor
add
xchg
push
pushf
mov
sub
sti
int
test
mov
in
add
xchg
sub
xchg
lods
aaa
cli
movsl
mov
in
vpmacsww
and
insb
inc
or
aam
push
sub
sti
hlt
popf
adc
into
and
adc
pop
dec
lret
mov
in
in
add
mov
in
es
mov
leave
aad
lcall
mov
jmp
dec
sbbb
popf
push
pop
aas
int3
out
hlt
dec
or
test
xor
repnz
in
xchg
lea
dec
or
int3
shrl
in
mov
test
in
cmp
bswap
sub
xchg
fnstsw
add
popf
lret
or
mov
push
fs
in
sti
pop
aad
mov
adc
jbe
aad
xchg
int3
push
fidivs
mov
ficoml
in
into
cmp
sti
or
push
insb
inc
cmp
lods
and
lret
sti
in
into
inc
xchg
xchg
inc
cmpl
add
dec
ret
scas
and
xchg
in
dec
clc
push
test
fstpl
and
mov
icebp
fwait
mov
fucom
push
shl
popa
jmp
in
or
dec
pop
popf
push
cwtl
pop
push
int3
mov
mov
js
xchg
hlt
inc
popf
and
aam
out
jl
jno
in
fiaddl
fstp
shr
jg
pop
jmp
stc
mov
push
pop
aad
cmc
aam
in
lret
cld
into
in
or
test
sbb
fsubrl
push
jmp
int
negb
and
inc
pop
dec
aad
cwtl
nop
jge
gs
std
sbb
movsb
inc
out
sbb
icebp
cmp
mov
xchg
mov
pushl
fstpl
aam
push
add
in
int3
xlat
rcr
mov
add
add
adc
test
jb
sbb
out
pop
push
in
dec
fucom
cmc
imul
arpl
xchg
loop
aas
lret
xchg
lods
jmp
xchg
in
lcall
pop
xchg
push
jge
pop
loope
mov
inc
add
repz
add
fstpl
pusha
push
sub
sub
loopne
and
ret
mov
cs
iret
arpl
push
stos
mov
sbb
xchg
jecxz
push
cmp
notl
mov
loopne
sbb
jecxz
xor
adc
nop
fs
jns
mov
cmp
mov
pop
loope
sbb
push
int
ret
loopne
cmp
sbb
xor
inc
push
and
fmuls
mov
dec
repz
push
movsl
jnp
push
push
loopne
inc
mov
loopne
divb
xor
arpl
sub
mov
inc
pop
mov
push
sbb
loopne
mov
mov
add
add
sets
inc
xchg
enter
xor
enter
lahf
int3
in
pop
mov
lahf
mov
mov
jle
adc
popf
add
mov
adc
cmp
in
xchg
pop
dec
imul
enter
push
aad
cmc
xchg
fcoml
andl
or
cmpsb
nop
pusha
call
or
jb
pop
dec
orl
xor
fwait
outsb
outsl
dec
addl
inc
pop
and
lret
sarl
mov
inc
xchg
imul
pop
loope
lds
mov
fwait
jge
iret
les
xchg
push
fists
stos
lahf
add
or
repnz
repnz
fwait
inc
xlat
sub
out
pop
call
sbb
jmp
jo
pop
xchg
mov
push
dec
sub
xchg
inc
pusha
inc
movsl
mov
sti
aad
mov
xor
mov
add
lret
lock
out
sub
inc
mov
sbb
jnp
xchg
pop
or
lods
push
pop
arpl
jg
dec
adc
fdivl
shlb
out
mov
ret
jmp
andl
jae
test
inc
sbb
mov
shll
xchg
call
fcomps
cmp
in
cmp
jg
cmpsl
negb
call
dec
movsb
xor
inc
jo
push
mov
mov
adc
divb
inc
sub
imul
xor
fidivrl
cs
test
sbb
mov
aam
movsb
xor
push
cmp
pop
leave
in
xor
lret
mov
mov
cs
pop
mov
ja
xchg
mov
mov
jmp
push
inc
xchg
xchg
movsl
fwait
popf
roll
mov
mov
mov
sbb
popl
test
and
shlb
ret
icebp
cmpsl
scas
and
aad
inc
cmpsl
in
push
clc
vpsubsw
stos
lods
aaa
push
mov
js
xor
sub
cwtl
test
cmp
mov
insl
jle
cmp
outsl
dec
sub
inc
push
icebp
inc
imul
aaa
xor
xlat
sbb
inc
shl
outsb
sub
loopne
stc
cmp
sub
or
cwtl
mov
xor
stos
or
dec
dec
dec
xchg
test
jno
into
mov
in
test
lret
sbb
mov
fistpll
sub
sbb
popf
push
sbb
xor
mov
test
je
loop
loop
mov
add
adc
pop
jo
mov
xor
sub
ja
mov
bound
test
inc
pop
mov
mov
add
daa
adc
fwait
pop
subl
adc
dec
mov
add
iret
fstpt
stc
mov
sbb
idivl
sti
cmp
mov
jecxz
dec
push
sub
and
adc
out
push
shll
jmp
mov
dec
mov
out
xchg
xchg
out
inc
orb
push
hlt
sbb
add
insl
sub
in
dec
push
push
loop
cwtl
inc
cmc
cwtl
mov
inc
xor
pop
lahf
push
jno
lcall
lret
je
hlt
imul
xchg
mov
or
cmpsl
jnp
stc
arpl
pop
jle
mov
fildll
adc
mov
imul
das
outsb
lods
or
xchg
call
xor
jns
adc
adc
jno
insl
push
bound
or
add
jmp
shll
fdivs
xchg
pop
push
repnz
imul
and
mov
jbe
push
in
jmp
aad
repnz
test
in
or
lods
test
sar
lock
cmp
xchg
xor
mov
aam
dec
into
push
aam
jmp
lahf
xlat
jbe
add
sbb
imul
cmp
mov
shl
lds
pusha
lret
shll
jmp
inc
inc
imul
fisttpl
inc
setbe
xchg
test
pop
add
je
mov
inc
xchg
add
sbb
popf
or
mov
lret
loopne
or
lds
int3
decb
roll
mov
jmp
pop
xor
sbb
pop
and
sub
jo
fdivrs
adc
xchg
out
scas
out
add
add
fs
shrl
nop
rcr
aaa
dec
adc
je
add
icebp
scas
loop
fs
mov
pop
stos
fstps
aad
sbb
leave
loop
mov
jno
nop
mov
fldt
out
fwait
adc
pop
cmpsb
fildl
mov
or
push
add
js
leave
pop
mov
xor
mov
mulb
outsl
shlb
js
rcr
xchg
cmp
sub
mov
cli
ret
jge
xchg
mov
mov
dec
clc
lea
xchg
mov
jns
jl
adc
js
dec
xchg
leave
adc
test
push
pop
mov
ficoms
mov
mov
insb
repnz
pusha
into
ficomps
iret
sarb
mov
clc
jecxz
loopne
rcrb
idivl
jns
rol
inc
mov
or
xor
movl
sub
pop
push
loop
jge
scas
mov
cli
loope
lret
aad
or
mov
add
pop
xor
cld
add
mov
int
outsb
fcompl
addr16
cmp
cs
into
fstpl
cmp
jp
lea
lret
push
pop
popa
aaa
popf
cwtl
insb
add
xchg
push
inc
mov
loopne
int
xchg
ret
jg
mov
bound
inc
mov
sub
insl
add
iret
mov
cmp
mov
test
cltd
add
push
push
add
fldl
add
mov
das
ja
js
out
ror
shll
imul
movsl
repnz
pop
hlt
or
jge
mov
popa
and
lods
cwtl
sbb
pop
aaa
cmp
push
pop
pushf
push
add
push
or
sti
mov
cmp
imul
adc
call
dec
cmp
sbb
shl
jns
or
sbbb
dec
pop
std
sti
lds
xor
jle
fisttpll
dec
cld
jl
aas
lahf
inc
scas
xor
test
inc
add
xor
pop
inc
mov
test
and
aaa
mov
mov
fwait
mov
movsb
sbb
loope
or
lret
rorb
jp
adcl
mov
andl
stos
mov
enter
jno
inc
fucomi
ror
jmp
xchg
and
subl
jecxz
and
movsl
xlat
push
mov
jnp
std
loop
ss
mov
movsl
pusha
fs
and
xchg
adc
lret
ljmp
mov
int3
call
sbb
sbb
jmp
jecxz
jo
cwtl
shlb
loop
lret
cwtl
inc
fwait
sub
mov
cmp
flds
push
mov
xchg
pop
cld
mov
push
sub
jbe
xor
mov
fisttpll
daa
jmp
add
dec
test
mov
lods
loope
pop
pop
push
fidivs
cmp
mov
andl
adc
stc
sub
int
sbb
das
and
jmp
aad
es
cmp
pop
jae
pop
pop
dec
outsb
mov
out
jbe
sbb
jmp
xchg
es
into
das
sub
jp
dec
xchg
loope
push
jnp
push
ret
cmpsb
and
cmp
add
pusha
jns
inc
popa
pusha
cmp
movsl
cmpsb
sbbl
out
sti
or
into
jecxz
fwait
loope
fs
scas
out
imul
xchg
pop
ret
or
sbb
mov
in
jbe
stc
in
cmp
xchg
cld
xchg
sti
bound
imul
jg
sbb
ljmp
sbb
ss
aam
pop
out
fs
outsb
lahf
es
jo
imul
jnp
lods
mov
jo
stos
mov
cmp
cmp
and
shll
ja
jmp
aad
cmp
stc
fmull
and
loop
testl
icebp
cmp
sbb
rcrl
xor
jp
mov
std
in
pop
xor
ljmp
add
in
fildll
repnz
jno
dec
mov
loope
and
jge
dec
insb
mov
pop
movsb
aas
aas
cmp
mov
xor
cvtps2pd
or
cwtl
mov
sbb
imull
iret
leave
addl
inc
pop
dec
jg
shlb
jge
push
or
inc
call
imul
xor
pop
fwait
add
fcomp
push
mov
es
cs
movsl
mov
adc
mov
in
aas
xor
daa
dec
movb
aaa
mov
fiaddl
out
int3
and
pop
xchg
push
icebp
add
sub
sub
and
test
aas
cmp
fptan
xor
lret
les
pushl
cld
mov
out
dec
and
mov
lret
mov
cltd
ja
xor
dec
jmp
ss
add
imul
xchg
and
dec
in
loop
in
push
mov
loop
int
mov
cmpsl
fdivl
cwtl
inc
dec
pop
dec
xchg
pop
lods
mov
jge
adc
inc
jae
sub
adc
adc
xor
sbb
inc
fcomip
adc
adc
sbb
mov
pop
pop
or
call
lahf
push
dec
cmc
dec
lds
pop
fcmove
mov
ficompl
adc
mov
xor
imul
es
push
fimull
scas
inc
push
jne
mov
fdivrl
fcoms
xchg
and
fisubl
fucom
sbb
aad
inc
add
cld
push
into
mov
mov
pop
mov
std
frstor
mov
lret
cmp
fs
icebp
sub
inc
jnp
sub
std
aad
fidivs
stos
mov
jae
cmp
sti
or
popa
testb
aas
dec
xchg
xchg
sbb
dec
or
and
cmp
add
add
pushf
inc
mov
cmp
push
xor
rcrb
std
lret
subb
cmpsb
dec
movw
loopne
aas
popa
jae
scas
in
test
int
mulb
xlat
push
stc
loope
pop
gs
dec
fiaddl
mov
in
movsb
das
idivb
inc
icebp
into
jbe
lods
inc
pusha
pushf
inc
arpl
idivl
mov
clc
in
ljmp
dec
cwtl
adc
std
daa
jl
into
shlb
cmp
xor
mov
push
sub
or
lods
mov
popl
mov
adc
mov
xchg
inc
int3
loope
push
test
rclb
xchg
sti
neg
je
dec
inc
push
iret
and
pop
mov
mov
cmpsl
rorl
fs
call
jl
xchg
inc
sbb
ret
mov
int3
fs
sub
hlt
and
or
stc
rolb
mov
mov
mov
mull
adc
in
mov
mov
mov
xchg
lret
mov
cmp
jmp
mov
loop
cmp
test
shl
outsl
mull
jnp
lcall
mov
stos
pop
or
ror
shrb
mov
test
mov
sub
jmp
shll
xor
popf
sahf
inc
mov
add
fadds
or
mov
sub
out
adc
jae
clc
pop
out
fwait
pushf
leave
cwtl
mov
lret
sbb
sub
pop
xlat
stos
scas
jmp
in
movsl
jmp
xor
xchg
mov
mov
mov
xchg
in
pop
iret
mov
jns
int
pop
rcrl
and
leave
fisubs
iret
loope
xchg
sti
cmp
clc
dec
decl
out
int
aaa
daa
out
std
movsb
aam
pop
sbb
jb
adc
addr16
std
stos
add
or
cld
mov
sarl
pop
mov
pop
fs
adcb
mov
lods
aam
sub
cmp
cs
stc
mov
and
mov
pop
jno
push
xor
mov
fxam
lods
add
pop
cmpsb
test
mov
shll
pop
jmp
int3
inc
lock
out
cmc
jmp
ficompl
pop
mov
in
jmp
inc
lret
xchg
cmp
movsl
mov
lods
sahf
in
hlt
data16
lods
clc
test
xchg
ss
sbb
rol
pop
lret
inc
sti
iret
adc
inc
cmc
or
neg
add
and
cwtl
pushf
ljmp
pop
jb
adc
mov
fwait
push
lcall
ljmp
in
hlt
fcmovnu
pop
pushf
pop
mov
repnz
dec
pop
test
popa
inc
roll
ss
ljmp
cmc
movsb
jge
mov
jle
clc
rcll
loop
das
adc
gs
jecxz
cld
push
fildl
cwtl
mov
loopne
xchg
pop
pop
jmp
lods
add
sahf
mov
lret
ret
aas
and
jbe
jbe
mov
jnp
xchg
cmp
cmp
testb
jno
inc
xor
cld
cmp
ja
arpl
loope
mov
cs
cmp
ret
and
nop
sarl
cld
cmp
xchg
sub
arpl
test
jae
sahf
inc
pop
mov
jnp
in
xchg
push
adc
test
pop
xor
mov
ret
cmp
int3
aam
dec
xor
inc
fidivs
dec
repnz
xchg
andl
mov
dec
jnp
xor
push
cmp
test
ljmp
jmp
push
mov
loop
ss
dec
test
cmpsl
fisttpll
pop
cs
icebp
dec
ss
xor
cmpsb
leave
jecxz
mov
movsl
push
andl
adc
xlat
pop
pop
int
mov
in
scas
xchg
test
dec
cmp
lock
lods
aad
pop
lods
pop
out
cld
jmp
cli
rclb
std
push
cld
pop
inc
xchg
iret
cmpsl
cld
iret
cmpsl
sahf
roll
jp
out
mov
fwait
dec
lods
mov
push
in
addr16
addb
jo
add
leave
push
sahf
or
ds
cmp
loopne
mov
lods
outsl
fwait
das
test
xchg
mov
lods
aas
sbb
mov
mov
mov
pop
loop
cmp
ret
mov
pop
xchg
icebp
and
test
test
mov
test
pop
xor
mov
fmul
push
xchg
out
dec
pop
loop
cmpsl
rorb
pop
push
enter
mov
lds
popf
cmp
scas
sub
mov
mov
mov
repz
mov
into
inc
push
icebp
mov
in
aas
add
cld
pop
xchg
sahf
dec
orl
sbb
movsl
jmp
dec
popf
jmp
mov
sahf
arpl
adc
cmpsb
test
icebp
dec
imul
iret
push
hlt
jp
mov
lods
movsl
popa
les
jmp
lret
jg
mov
into
cmc
push
fidivl
mulb
fwait
push
loop
insb
cld
int3
xor
and
mov
stc
scas
push
xchg
repz
dec
mov
addl
jg
cmc
inc
test
repz
or
sub
fwait
adc
pop
test
in
fwait
stos
mov
and
fsub
mov
dec
fwait
loop
fcompl
jmp
repnz
stos
push
add
push
popa
sbb
cmp
nop
mov
push
sub
dec
jns
add
lods
std
mov
cmp
repnz
and
jb
bound
xor
mov
cltd
fisubs
repnz
frstor
adc
sbb
aam
loopne
push
outsl
imul
pop
lret
pop
rolb
adc
jl
fxch
mov
ss
rclb
lret
jnp
pop
push
mov
les
andl
stc
push
lcall
popa
aam
or
sti
in
dec
sbb
mov
adcb
shl
frstor
inc
push
sub
push
sub
xchg
shll
mov
adc
add
clc
cwtl
loope
imul
mov
lahf
fimuls
divl
hlt
jnp,pn
bound
les
in
jmp
mov
incb
std
int
jae
loope
punpcklbw
inc
jns
jl
or
adc
cmpsl
push
xchg
jge
test
mov
pop
gs
int3
cwtl
pop
jle
sub
fldcw
loop
aam
sub
cmp
pop
cmp
fsts
dec
js
push
daa
movsb
xchg
cmp
xchg
push
or
loop
cmp
mov
test
loopne
push
push
lds
pop
je
fwait
push
cmp
and
fs
sub
cld
sti
ja
dec
flds
scas
out
into
stos
xchg
jle
mov
mov
xchg
mov
cmp
cmp
fbld
jo
inc
imul
xchg
pushf
mov
push
mov
lea
je
push
loope
push
dec
add
inc
ja
mov
sti
xchg
mov
mulb
and
jmp
pushf
pop
xlat
cmp
bound
rorb
inc
pop
mov
cli
sahf
xor
outsb
dec
in
inc
xchg
movsl
sahf
mov
fldt
add
inc
dec
or
mov
imul
xchg
std
lods
rep
inc
mov
add
incb
and
inc
popf
and
pushf
mov
cmp
in
sub
aam
sub
or
jno
or
push
das
sti
loopne
push
lods
test
rclb
fs
mov
or
fldenv
in
repnz
mov
imulb
push
cmp
mov
popf
lcall
sub
push
shlb
add
xchg
xchg
movsl
and
in
mov
sub
popa
jge
dec
cmp
mov
das
jbe
cs
call
mov
lock
adc
ds
popf
sbb
mov
frstor
sbb
or
push
dec
mov
add
popf
jl
push
lds
in
jecxz
pushf
cs
dec
ret
es
leave
mov
mov
push
mov
clc
iret
sub
ja
adc
pop
mov
pop
sbb
dec
xlat
outsb
adc
jg
jle
leave
movsb
into
or
dec
cmp
bound
mov
popf
pop
out
aas
movsb
dec
notb
xorl
adc
nop
mov
jns
adc
inc
pop
out
jo
mov
call
bound
into
fidivl
add
pusha
push
ror
push
cmp
xchg
sti
jae
cld
aad
fwait
and
xchg
pushf
addb
shll
cmp
jmp
xor
push
jns
mov
inc
mov
in
mov
sbb
rcll
jmp
push
pusha
mov
aaa
sub
fistps
mov
fisttpll
push
lret
xor
push
push
jnp
pop
mov
mov
and
repz
mov
out
sub
cmpsb
imulb
outsb
fnstcw
dec
mov
dec
or
push
imul
popf
mov
pop
out
rorl
arpl
pop
mov
repnz
push
repz
ja
sarl
mov
mov
jnp
jmp
int
das
sahf
push
fwait
jbe
adc
aad
sub
mov
wrmsr
mov
cmp
mov
inc
push
fwait
jno
mov
mov
fs
aas
xor
cmp
mov
adc
or
xchg
mov
jecxz
lea
dec
inc
lock
xor
cmc
sbb
ja
add
repz
xor
pop
in
dec
popf
jmp
add
repnz
inc
mov
mov
bound
andb
and
mov
adc
pop
cmp
fiaddl
adc
or
push
test
das
lcall
nop
mov
push
sti
push
fldcw
nop
das
jae
stos
daa
pushf
stos
mov
xchg
and
outsb
xchg
pop
dec
adc
or
mov
nop
jmp
and
testl
xor
loopne
push
add
xor
add
mov
movsl
dec
mov
mov
in
mov
pop
inc
jne
mov
xchg
aam
jns
andl
test
rcrb
in
cmp
test
pop
pushl
mov
loop
cmp
cmp
push
inc
jns
nop
cmc
dec
fidivrl
loop
mov
adc
in
dec
inc
fldenv
jecxz
add
negl
stc
subl
iret
enter
jecxz
xchg
lea
lcall
bound
ja
jp
sbb
rcll
xchg
inc
pop
inc
psubsw
ds
in
ret
xchg
fcoml
push
xor
repnz
xor
jmp
fcos
jnp
mov
sbb
das
sbb
cwtl
imulb
cmpsl
xor
ja
jae
inc
movl
sbb
scas
lods
xor
fiaddl
adc
jns
cmc
push
test
into
sub
outsb
in
jae
js
pusha
pushf
and
sbb
sbb
iret
out
or
inc
adcb
stos
jecxz
xchg
sbb
sub
fstl
lock
cmp
adc
dec
ljmp
out
add
mov
movsl
fwait
mov
rcll
fstpt
ja
pop
or
cmc
cmp
loope
fucom
sub
adc
dec
test
cmp
jp
fldenv
test
lret
xchg
jmp
out
add
mov
cmpsl
popf
and
jns
in
loope
repnz
fstpt
pop
cmp
mov
xchg
push
jmp
mov
inc
or
cli
fimull
imull
pop
cmp
xor
fs
fcmovnbe
push
fwait
push
loopne
xchg
icebp
add
es
das
mov
std
mov
inc
sbb
cld
pusha
insl
jecxz
subl
imul
mov
pop
fucomp
lahf
push
sub
fstpl
add
push
xchg
or
jb
jge
push
dec
test
stos
xchg
into
sti
jge
push
mov
sub
mov
add
mov
push
push
fwait
xchg
movnti
ja
dec
gs
std
mov
jp
jg
fincstp
idivl
add
int3
js
mov
mov
popa
lret
in
out
or
add
aam
in
add
cmp
push
pop
outsb
jecxz
je
popf
and
cmp
lahf
jp
mov
test
push
in
push
mov
sub
dec
jae
lret
bound
sub
mov
sbb
push
pop
cld
ret
inc
lret
in
fcomp
push
in
inc
imul
sti
xchg
mov
xchg
mov
adc
out
mov
sub
mov
sbb
aad
push
divb
leave
push
mov
lret
jo
test
fs
repz
sub
add
jne
sbb
les
es
scas
sub
inc
out
movsl
in
test
std
dec
pop
add
inc
pop
cli
push
and
mov
pop
ss
jnp
test
cmp
mov
mov
ret
popf
cld
and
rcrl
dec
jb
cmpsl
jecxz
icebp
jns
jbe
insb
in
cmp
adc
int
pop
cli
mov
push
jnp
and
int3
sub
mov
dec
loope
jecxz
es
cmpsl
jge
cmpsb
inc
fdivrp
sub
push
mov
or
adc
fnstsw
sub
add
fwait
push
push
pushf
and
inc
shll
icebp
out
movsl
mov
xchg
sti
neg
dec
iret
mov
popf
sub
cmpps
mov
xchg
lret
mov
xchg
js
cmp
nop
popf
push
sarl
jae
mov
test
sub
in
imul
arpl
dec
shr
repnz
aas
loop
and
xor
add
sbb
stos
cmp
xchg
and
das
bound
mov
add
mov
push
movsl
and
popa
mov
push
sti
into
leave
inc
in
xor
in
pop
mov
nop
or
pop
push
push
xor
pop
xchg
adc
mov
rcr
popa
out
sti
jge
push
mov
or
out
outsb
add
sbb
clc
das
in
adc
iret
mov
mov
dec
mov
push
ffree
or
or
in
adc
fwait
dec
outsb
xor
jmp
or
mov
in
add
loope
add
dec
mov
addl
and
sub
sub
mov
ja
sub
ret
push
sbb
inc
pop
or
jmp
inc
mov
pop
sub
push
inc
sub
and
test
or
push
sbb
movsl
cltd
inc
sbbb
pop
inc
clc
dec
inc
es
adc
xor
xor
inc
scas
adc
jge
movsl
mov
filds
fucom
cmp
push
pop
xor
ret
lea
jb
inc
in
sbb
inc
adc
rorb
sbb
frstor
sub
ss
std
mov
enter
aad
dec
icebp
bound
xchg
movsl
iret
cmpsb
cmp
sbb
nop
mov
stc
call
and
xor
sub
xchg
mov
and
enter
dec
faddl
xchg
and
adc
pop
mov
adc
push
das
and
test
push
mov
push
clc
movsb
ret
lret
cltd
or
sti
push
push
mov
outsb
pop
out
fnstenv
cmpsl
je
pop
shrb
lret
jmp
adc
int3
cmp
cwtl
scas
ficomps
lahf
pop
push
mov
repz
mov
rcl
xchg
cmp
mov
xlat
xor
inc
xor
orl
dec
lcall
sbb
dec
int
shl
lcall
mov
fcompl
or
push
and
repz
inc
sub
mov
cmp
jb
push
inc
mov
jns
inc
pop
enter
pusha
lea
sub
push
adc
repz
bound
shrb
inc
ds
push
sub
out
cwtl
fstl
andl
fwait
lret
sbb
ss
iret
dec
dec
shl
jmp
sti
cmc
xchg
int3
lock
popa
fmull
mov
push
pop
dec
in
in
hlt
js
jmp
subb
sub
inc
adc
sbb
pop
bound
pop
lahf
subl
loope
xor
add
js
mov
sti
cli
fbstp
mov
imulb
add
mov
loop
inc
adc
pusha
mov
mov
jae
movsb
in
add
test
sbb
add
xlat
rclb
inc
push
sarb
cmc
xor
ds
dec
lret
inc
fimuls
pop
push
cmp
dec
aad
test
scas
mov
xchg
jae
mov
sti
repz
int3
add
jle
push
dec
scas
and
mov
rcll
push
rcrl
xchg
pop
dec
fsub
push
cmp
popf
ror
test
leave
daa
jns
adc
ss
mov
or
jnp
frstor
lahf
push
xchg
lock
fadds
shll
int3
push
jmp
int3
fists
out
mov
cmp
sbb
fisttpl
add
pop
out
es
xchg
cli
sub
vhsubps
lea
aad
out
fmulp
lcall
in
jecxz
gs
sbb
shll
rcrl
out
xlat
sbb
in
mov
or
lret
iret
lcall
movsb
xor
cmp
xchg
add
xchg
push
hlt
mov
xchg
scas
data16
out
mov
andl
inc
dec
mov
out
and
lahf
pop
cltd
sub
jl
and
push
mov
cmp
dec
mov
test
test
in
aad
jle,pt
sub
add
loop
sbb
pop
mov
sub
xor
dec
sub
xor
jb
sub
pop
mov
inc
into
cmp
out
or
adc
mov
hlt
jb
xchg
adc
cmpsl
fnstsw
in
ret
lret
sbbb
and
ret
in
mov
push
jo
repnz
sub
fnclex
in
pop
xchg
out
push
adc
jbe
aaa
ret
add
push
iret
xchg
mov
sti
vunpcklpd
cmp
pop
jnp
stc
int3
xchg
inc
pop
mov
ja
in
leave
enter
mov
cwtl
pop
mov
shrb
and
xchg
cmpsb
jmp
out
pop
dec
popf
mov
push
and
or
hlt
mov
sbb
dec
popa
pop
bound
test
loope
inc
bsf
cmp
fstl
test
int
ja
icebp
daa
inc
ret
jmp
mov
fidivl
out
or
fstpt
mov
or
test
data16
loop
scas
cmp
test
or
test
cmp
out
mov
mov
dec
ret
sbb
cmp
insl
psadbw
xchg
cwtl
cltd
shrb
push
shld
test
lods
push
inc
inc
mov
shll
pop
cmc
sbb
pop
mov
cld
jp
cld
test
insl
jmp
aam
sbb
mov
idivl
push
inc
call
fwait
hlt
and
fwait
add
jge
cmp
mov
or
fistl
jg
add
and
xor
dec
xor
popa
mov
mov
ror
push
fucomi
fstps
push
loopne
int3
fcmovu
mov
jmp
aam
iret
fstpl
pop
bound
or
leave
inc
pop
push
nop
ljmp
scas
idivb
adc
xor
jo
fimull
cmpsl
je
fsubs
aas
add
inc
lret
sub
add
cwtl
push
mov
loope
loop
imul
lods
jb
dec
pop
jb
sub
lods
adc
popf
andb
mov
into
xlat
cmp
mov
inc
sarb
adc
pop
fwait
push
mov
test
mov
dec
pop
iret
sbb
xchg
rcrl
les
jo
dec
ret
and
int
lcall
mov
and
fs
mov
cltd
int3
leave
dec
test
loop
loopne
cld
movsl
or
out
sub
mov
lret
repnz
xlat
bound
xchg
cwtl
mov
shlb
sbb
pop
push
sbb
pop
cmpsb
mov
pop
les
aam
push
xlat
pop
mov
andl
xchg
sbb
inc
fsubs
neg
and
xorb
xor
fcomps
cs
sub
mov
scas
and
nop
jp
sbb
icebp
loope
add
or
jae
mov
lret
push
xor
daa
popf
fcomps
aaa
mov
add
sbb
test
test
jmp
iret
push
jb
mov
in
arpl
xor
loopne
aaa
repz
jl
inc
incl
dec
popa
push
mov
sbb
mov
xor
jg
pushf
mov
push
dec
mov
dec
jns
stc
cmp
arpl
leave
xchg
fstp
mov
dec
jnp
int3
out
lret
out
mov
pop
and
std
sar
pop
or
push
sbb
adc
in
insb
popf
mov
add
aad
iret
pop
xchg
xchg
cmp
cmpsb
movsb
sahf
mov
in
in
dec
in
or
into
xor
iret
popf
fadds
lcall
sbb
add
arpl
add
and
lcall
adc
div
or
adcl
loopne
xchg
push
loope
idivb
clc
push
push
cmc
adc
xor
movsl
into
fisubrs
mov
ficoms
mov
jno
fnstsw
mov
xchg
in
loop
cmp
inc
out
cmp
xor
dec
and
mov
fcoml
ds
or
push
xor
das
xchg
mov
call
add
call
leave
add
jmp
mov
add
insl
xlat
push
mov
adc
sub
mov
dec
test
rcrl
jbe
sti
sbb
xchg
xchg
aas
push
mov
test
mov
lret
jle
jl
fidivrl
jb
sub
out
add
insl
cmp
push
mov
int3
mov
std
adc
jmp
mov
lcall
xchg
dec
int
sarl
sti
or
jle
fdivrs
xlat
mov
lret
mov
cmp
dec
cmc
in
jg
xchg
pop
or
das
sub
ds
sub
data16
notl
or
sbb
sub
loop
dec
jbe
sub
movsb
idivl
loope
scas
adc
fisttpll
and
cwtl
add
ret
rcrl
xchg
lock
jo
cmpb
out
or
cld
popf
fadds
imul
add
imul
movsl
movsl
and
rolb
pushw
lret
jne
movsb
cmpsl
jns
scas
cltd
js
rcrb
jb
jge
stc
rorb
dec
cs
sub
and
in
mov
je
mov
cmp
pop
sar
sub
xchg
orb
inc
hlt
dec
push
sub
mov
decb
cmp
mov
shlb
jmp
jns
add
loope
into
in
pop
adc
fcoml
lcall
adc
inc
imull
lahf
mov
sbb
aad
sbb
sub
iret
lea
lds
scas
push
cmp
les
loopne
ficoms
stos
into
xchg
mov
add
test
dec
nop
adc
sbb
gs
sub
imul
lret
cli
sbb
and
jmp
shr
xor
xor
insb
sbb
lahf
sti
icebp
mov
sbb
scas
cmpsl
mov
sbb
push
andb
jl
loopne
inc
aaa
inc
fdivl
outsb
shrb
cmpl
cmp
sub
repz
cmp
dec
lret
jmp
shr
js
mov
arpl
or
cmpb
xchg
insl
ljmp
add
movsb
sti
arpl
shll
shlb
rcrb
shll
nop
mov
pop
pop
dec
lret
xchg
scas
adc
es
movsl
sub
fs
xor
inc
jecxz
int3
xchg
int
dec
mov
loope
or
lret
inc
cs
adc
mov
clc
xchg
imul
jnp
mov
push
xor
fidivrs
cwtl
and
mov
push
add
popa
mov
mov
pop
push
and
xchg
cmp
ljmp
mov
mov
icebp
pop
mov
pop
imul
js
mov
or
cld
idivl
fdivs
cmc
xlat
jnp
mov
pop
inc
jl
fs
mov
clc
and
dec
mov
loope
popf
ret
popf
push
iret
scas
or
mov
aaa
jp
fcoml
in
mov
add
incb
lods
ja
and
or
mov
iret
insl
lods
push
in
mov
cmc
dec
or
ret
pop
mov
mov
xchg
ja
in
add
daa
ret
or
loope
mov
or
or
inc
xchg
hlt
int
cld
lds
mov
or
mov
bound
bound
push
cmp
push
push
sbb
test
shl
xchg
dec
rcr
mov
ljmp
gs
std
clc
in
xchg
ja
cmpb
sbb
cmpsl
fidivl
hlt
xchg
cmp
popa
imul
cmpsb
cmc
sbb
mov
shrb
mov
mov
cmp
sbb
adc
and
jecxz
xchg
in
cmp
xchg
loope
mov
push
jecxz
push
popa
mov
sti
es
sub
test
lret
pop
push
iret
mov
jp
imul
sub
mov
mov
fst
imul
dec
xchg
xor
dec
popa
sbb
fucom
nop
add
mov
cmc
sbb
xchg
sbb
jno
cld
mov
pop
das
pop
popa
push
cmp
lret
mov
jle
cmpsl
xchg
fwait
sahf
negl
pop
icebp
leave
push
fucom
imul
or
mov
inc
out
test
sub
sbb
scas
popf
or
fwait
cmp
inc
pop
pop
vcvtsd2si
cld
hlt
or
into
xchg
sub
jl
in
aad
scas
daa
xchg
fistpll
or
rcll
repnz
sbb
mov
jae
mov
xchg
ss
aas
cltd
lret
clc
cmpsl
ss
xchg
sbb
xlat
mov
and
mov
add
test
test
jecxz
sub
aad
or
adc
mov
inc
add
cmpsl
call
inc
fadds
xor
lret
repnz
pop
int3
jae
dec
pop
rcll
add
in
sbbl
pop
and
test
in
ret
cmc
mov
sbbl
cld
fldenv
mov
xchg
loopne
testb
sub
jns
movsl
push
cltd
mov
sbb
icebp
dec
lret
in
mov
dec
jne
pop
cld
leave
sub
mov
pusha
and
cltd
cmp
add
mov
fcompl
arpl
mov
aad
pop
jbe
rcrl
icebp
mov
testb
out
jno
cld
adc
les
sub
cmc
cmp
aam
cmp
mov
popa
lcall
or
mov
movsb
shll
lock
shlb
sub
fisttpll
dec
cmp
mov
xorb
inc
dec
xor
mov
pusha
sbb
mov
lods
push
das
stc
out
sete
push
in
sbb
cmpsl
add
mov
mov
mov
sbb
movsl
mov
inc
in
mov
jle
out
lods
arpl
sub
test
mov
xchg
test
mov
xorb
mov
decb
and
inc
stc
ror
sub
aaa
lcall
cmp
xor
pop
mov
iret
das
jo
insl
ficoms
fwait
out
ljmp
inc
vmwrite
mov
ret
push
scas
in
sub
movsb
pusha
movsb
aam
dec
jbe
mov
mov
inc
xchg
sub
int3
sub
or
fwait
xor
insb
push
ficoms
add
jmp
ss
call
out
daa
fmull
clc
jmp
xchg
data16
repnz
mov
mov
inc
sbb
bound
icebp
mov
add
add
sbb
imul
ss
adc
inc
cld
out
dec
bnd
in
add
jne
sub
aad
jecxz
jmp
scas
int3
rcl
xchg
sbb
jo
add
cld
hlt
cmp
fiaddl
xor
push
sbb
daa
shl
cmp
std
mov
or
adc
call
dec
xchg
lret
and
inc
mov
adc
mov
pop
fnstsw
aaa
push
adc
stos
dec
in
in
mov
mov
stos
lock
shrd
gs
add
fwait
inc
pop
leave
outsb
and
shll
xchg
sahf
out
xorb
movsl
out
and
cli
cmp
add
lret
cmc
pop
pop
dec
and
adc
jle
popa
adc
dec
add
and
mov
pop
leave
ja
loope
xor
add
push
push
mov
sahf
out
fwait
pop
or
fldcw
pop
cmp
sub
pop
ror
lcall
dec
pop
mov
aaa
jae
subl
add
sbb
aam
imul
push
fidivrs
xchg
jmp
lock
add
outsb
rol
cmp
outsb
inc
cltd
sbb
cmp
sub
test
out
xor
test
cmp
addr16
in
xchg
pop
jbe
shl
rol
call
pop
xchg
sbb
fstpt
bound
mov
jmp
mov
iret
fcomip
adc
cmpsb
imul
xchg
js
push
mov
cltd
bound
adc
lret
and
inc
or
ljmp
andb
lret
out
and
jp
cld
mov
mov
xor
inc
dec
mov
pop
fstpl
fisubl
add
sbb
jecxz
test
jmp
ret
test
sbb
mov
cmp
xchg
mov
movsl
neg
test
add
cmp
push
push
xchg
orl
xor
fs
mov
movsl
push
sub
insb
jmp
sbb
filds
ficoml
pop
push
loopne
insb
in
or
jl
shll
out
and
pop
inc
cmp
cmp
mov
mov
fidivrl
fistl
jnp
stc
push
insb
aas
lea
loop
outsb
mov
mov
mov
test
fwait
outsb
aad
xor
pop
fsts
lret
add
into
add
mov
sti
sarb
subb
ss
mov
pop
scas
cmp
in
add
add
xchg
mov
lret
xchg
bt
insl
lret
fimull
loope
ds
xorl
lods
fdivl
or
cmp
cmp
int3
fidivl
pop
mov
or
or
scas
icebp
outsb
popl
shrl
imul
xor
movb
repnz
lds
sarl
loope
pop
cwtl
sub
dec
jecxz
cmp
sbb
pop
lret
lret
inc
stos
mov
inc
and
fsubrl
mov
addr16
into
cmp
xor
dec
push
rcrb
cs
fisubrl
fnstenv
rcrl
push
mulb
mov
sbb
sbb
test
out
cld
mov
push
bound
fnstsw
xor
pop
mov
cmp
add
jecxz
lods
mov
mov
js
adc
lock
pop
mov
jmp
shl
add
mov
push
mov
mov
es
dec
mov
dec
clc
cmp
mov
sti
dec
std
loop
loopne
xchg
std
ret
frstor
and
cmp
mov
fsts
mov
mov
aam
in
push
loop
pop
jne
mov
xor
adc
psubusw
mov
xchg
add
les
push
mov
xchg
cmc
cmpl
and
push
popf
aaa
pop
out
loope
test
lea
push
loope
inc
push
sarl
dec
or
out
loope
ret
xor
jnp
gs
adc
in
dec
lret
arpl
dec
jns
cmp
mov
test
and
loop
add
mov
lds
mov
iret
ret
popa
lea
and
mov
mov
popa
dec
mov
pop
aaa
adc
sub
or
adc
ljmp
clc
xor
in
lds
xchg
or
push
jb
roll
hlt
mov
mov
popf
mov
adc
pushf
sbb
mov
sbb
push
loop
add
xor
mov
je
pop
push
cmpsb
add
dec
sahf
inc
jmp
fwait
or
int
push
fbld
sub
repz
sbb
mov
mov
jb
and
mov
cmpsl
sti
int
cld
adc
addr16
lret
xchg
pop
add
fs
cmp
aaa
loope
aaa
rcrb
pushf
int
add
push
xor
stc
iret
inc
cwtl
enter
sbb
mov
das
jge
dec
pop
adc
and
fistl
mov
in
fbstp
sub
mov
fstps
xchg
aaa
jg
add
popa
mov
sbb
adc
mov
iret
or
pop
push
and
gs
add
hlt
cwtl
and
orl
add
test
push
mov
lods
jo
movsl
sti
jo
jae
inc
xor
ss
cltd
fldenv
mov
outsb
mov
cld
sbb
xchg
in
test
mov
sub
int
lret
lds
pop
es
mov
loope
fcomip
das
daa
mov
into
arpl
and
popa
es
fcmovnbe
mov
jg
jmp
out
add
fs
popf
in
push
sub
mov
cltd
dec
cmpsl
dec
fst
flds
sub
xchg
xchg
cld
or
jmp
int3
inc
std
std
xor
loopne
pop
sub
arpl
or
mov
mov
ljmp
out
mov
adc
pop
sub
movsl
push
push
mov
ja
push
popf
cmpsl
inc
mov
test
imul
mov
hlt
cld
bound
mov
xchg
imul
ljmp
in
jecxz
scas
call
fs
cmc
xchg
xchg
jmp
and
in
cmp
out
movsl
xor
jnp
add
fidivrs
rorl
mov
aaa
mov
stos
aaa
cmp
fistpl
mov
cmpsl
popf
test
fdivl
and
incl
sub
mov
lds
push
sub
fcoml
push
jbe
daa
shlb
repz
or
lods
sarl
inc
or
push
pop
sub
lret
xchg
xchg
lret
lahf
fldenv
rcrb
gs
mov
js
movsl
mov
add
leave
cmp
fistps
js
or
sub
fdivrp
and
test
pop
fstl
dec
sub
rol
lcall
aad
mov
ds
movsl
and
sub
sbb
or
push
jge
test
ror
adc
sarb
cli
in
mov
dec
xor
jecxz
fiadds
jge
je
je
dec
jae
xchg
sbb
and
test
shrl
lret
test
xchg
sub
add
jle
out
sbb
sbb
fildl
push
push
test
outsb
pop
addr16
push
xchg
in
dec
add
add
std
dec
lcall
test
imul
cld
gs
cmp
pop
pop
pushl
lret
cmp
movl
fsubl
or
lds
xor
sub
pusha
shll
xchg
fildll
add
mov
push
dec
lods
in
xlat
fcoml
lret
xchg
sbb
and
or
repz
sti
fstps
leave
xor
sub
lret
push
fs
lret
fst
mov
and
test
lods
rcr
test
push
fldcw
les
mov
mov
xor
xor
imul
xchg
idiv
add
scas
mov
and
gs
scas
inc
mov
jae
inc
pop
and
ds
push
cmp
inc
mov
mov
push
adc
mov
mov
ret
bound
mov
jae
cmp
or
popl
and
popf
mov
out
dec
mov
cwtl
iret
movsl
pop
mov
loopne
into
test
mov
movsb
push
pop
fucomip
sbb
pop
fsts
jg
add
and
mov
stc
add
cmpsl
sbb
ds
in
mov
pop
or
dec
and
cli
in
dec
jmp
pusha
les
repnz
mov
stos
pop
mov
cmp
fsubrs
mov
jae
jge
std
cld
aaa
pop
inc
loope
sbb
fsubl
mov
mov
push
cmc
and
pop
jne
sbb
sub
cwtl
popa
repz
cmp
loope
mov
repnz
adc
xchg
add
inc
xor
pop
out
stos
shll
mov
aam
or
and
mov
cmp
xchg
pop
and
sbb
adc
loop
pop
dec
jno
lret
aad
test
add
inc
stos
repnz
rcll
fcompl
jge
aad
lods
bound
ljmp
fistpl
aam
jbe
aam
repnz
pusha
xchg
jb
cld
xor
cmpsb
xor
jb
cmpsb
addb
cmp
nop
dec
fstpl
xor
rcll
aad
xor
push
addr16
pop
test
lret
push
or
sbb
adc
mov
outsb
aas
xchg
push
xor
pusha
pop
insl
add
and
dec
push
lods
int
xor
lods
arpl
and
subl
dec
xor
mov
clc
icebp
adc
add
jo
test
int
outsl
out
fwait
sar
sub
pop
pop
lds
and
cltd
push
jae
or
mov
jl
mov
jns
subb
jmp
xchg
out
aas
lahf
xchg
js
sbb
hlt
pop
push
sbb
or
add
sbb
add
mov
cwtl
shrl
fldl
out
inc
push
test
movsl
lahf
inc
pop
sbb
rcrb
and
xchg
pusha
push
xchg
lock
movsl
je
loopne
ss
cltd
ret
jecxz
stos
repz
mov
popf
push
out
pop
je
mulps
push
add
sbb
push
repnz
outsb
pop
es
mov
adc
js
int3
cmp
ret
jecxz
aaa
in
sahf
ret
aam
inc
popf
push
push
dec
sub
mov
lds
cmpsb
int3
filds
dec
mov
rcl
inc
fwait
shlb
imul
pop
leave
jns
ficoms
es
mov
ljmp
out
mov
cld
testb
jnp
inc
or
pop
cmp
sbb
in
inc
push
dec
repnz
xor
fdivrl
scas
loope
jecxz
call
lret
lahf
lret
xor
cld
stos
fcomps
lea
pop
fisttpl
jmp
repz
insl
out
jmp
pop
adc
push
sub
cmp
pusha
cwtl
test
fcomip
xor
or
movl
mov
push
mov
push
roll
mov
test
movsb
mov
or
push
cmp
jnp
bound
mov
sbb
or
aam
mov
pop
jbe
sub
out
es
movsb
movsl
mov
aaa
popf
mov
mov
ret
loop
add
popf
sahf
clc
jge
mov
movsl
test
imul
fiadds
adcb
imul
fsub
push
jb
in
jae
dec
aas
in
ss
inc
fiaddl
and
fmuls
subb
push
je
flds
dec
aad
outsl
cmpsl
pusha
lea
int3
pushf
jnp
inc
imul
filds
jle
cmc
sti
mov
fs
sbb
fldl
xchg
nop
loopne
inc
out
push
pop
loop
or
test
sub
popf
cli
jge
cld
ja
in
lods
cmp
mov
stos
sar
outsb
adc
mov
fs
std
gs
fsubs
lret
mov
or
pop
aam
adcb
ss
sub
dec
mov
repnz
neg
lock
inc
sub
mov
cwtl
lea
push
cmp
je
clc
and
sub
xchg
shlb
scas
pop
adc
or
test
repz
sub
movsb
or
xchg
loopne
pop
insb
imul
mov
nop
sub
inc
pop
and
shll
movsb
rcll
aaa
or
adc
mov
ja
mov
dec
decb
negl
ljmp
lods
fstpt
push
scas
jmp
iret
jb
dec
push
or
fsts
mov
push
stos
insb
fisubl
fs
int
and
mov
jmp
cmp
mov
data16
sub
outsl
mov
aad
fcmovnbe
pop
cmpsb
add
sahf
icebp
jecxz
cmp
cwtl
insb
jl
pop
jp
scas
mov
pushf
xchg
in
add
imull
or
mov
add
dec
call
movsb
frstor
push
incb
pushf
jg
rol
lret
xor
push
cwtl
leave
sub
pop
popl
and
xor
in
leave
pop
xchg
pop
cs
inc
xor
inc
fs
pop
popa
loopne
mov
pop
fs
xchg
fcoms
jge
inc
and
add
in
dec
or
decb
dec
rcll
jo
stos
fildll
pop
mov
pop
pusha
je
xor
jge
jb
pusha
cltd
mov
cmp
sti
icebp
fs
mov
mov
mov
lahf
mov
dec
lahf
xchg
aad
add
cmp
mov
and
push
in
frstor
push
mov
fs
xchg
test
jbe
and
add
aas
jg
rcrl
pop
mov
mov
pop
ficomps
dec
mov
pusha
scas
repz
cmc
stc
jb
xchg
testb
loop
pop
popf
in
cmp
or
loopne
mov
add
push
sbb
pop
imul
mov
mov
stc
inc
insb
shll
or
fcmovnu
cmp
dec
testb
das
cmc
mov
cwtl
sbb
es
aaa
sbb
adc
jne
mov
shll
add
cmpsl
mov
lret
rol
cmp
mov
lahf
fs
add
test
mov
cwtl
lods
xchg
or
ljmp
mov
jbe
push
or
mov
ret
in
sub
mov
xor
pop
inc
rcrb
add
xchg
outsb
mov
cmc
ret
fistl
sub
adc
inc
out
std
lret
sub
and
or
shl
mov
add
xor
in
cmp
les
sbb
lahf
gs
leave
jecxz
sbb
shr
mov
or
lahf
xchg
aas
aam
repnz
stos
inc
cli
cmp
cmp
cmp
call
cmp
aad
lcall
sbb
imul
stc
or
mov
add
in
sbb
imul
sbb
divl
push
pop
xchg
adc
pop
dec
mov
add
cmp
daa
aas
pcmpgtw
repnz
mov
lods
xchg
jg
repz
test
inc
add
inc
push
lock
in
jge
inc
cmc
cwtl
test
in
push
push
in
sub
sbb
jae
inc
fdivp
push
mov
loope
jbe
lcall
scas
cltd
iretw
jnp
lea
cmp
fwait
pop
push
add
inc
stos
daa
inc
sarl
lcall
inc
adc
lock
int
daa
push
jge
sub
cmp
jne
xchg
sbb
lahf
or
test
and
int3
jno
sbb
fmul
cmp
mov
mov
and
call
dec
pushf
inc
fsubl
mov
xchg
push
mov
or
mov
fildl
mov
add
aaa
pop
jno
into
xchg
popf
jae
push
mov
addr16
inc
or
int
sbb
outsb
insl
mov
mov
fldl
xchg
dec
and
lds
add
add
rorl
mov
mov
lcall
pop
inc
xchg
sub
jg
mov
lds
xlat
arpl
lock
pop
fistl
shrl
mov
push
movsl
dec
jbe
cmp
cs
int
lcall
push
sub
or
sub
ret
dec
das
sub
xor
inc
pop
push
loope
jbe
jecxz
push
stos
out
cmp
aaa
mov
cltd
push
popa
mov
push
in
mov
ret
inc
ret
scas
pop
pop
push
cmpb
sub
test
ja
and
imul
je
jno
mov
mov
dec
ret
shll
dec
push
arpl
or
js
push
push
mov
lods
daa
cmp
push
hlt
pop
cmpsb
sbb
jno
mov
cmp
lret
mov
in
add
lret
jae
or
jnp
nop
jae
xor
inc
popl
mov
rorl
dec
jne
cmpsb
ja
mov
mov
cmpsl
out
mov
repz
sub
out
rolb
inc
or
mov
mov
inc
inc
leave
imull
dec
jns
add
mov
cmpsl
jo
sub
cmp
fisttps
sub
fnstsw
jne
outsb
sbb
mov
clc
fdivs
pop
and
mov
cltd
and
ficompl
mov
gs
pop
sti
sahf
fcoml
rcll
and
test
jbe
ljmp
popf
pop
aas
cmpsb
and
lock
movsl
in
mov
and
insl
bound
addl
cmpsl
xchg
mov
inc
data16
nop
lods
imul
and
pop
gs
pushf
and
loopne
int3
aam
jmp
sbb
js
mov
mov
add
push
mov
xchg
dec
in
inc
ficoms
outsl
mov
in
sbb
jmp
jb
pop
addr16
insb
jo
jecxz
faddl
inc
dec
xchg
inc
mov
dec
xchg
add
mov
mov
mov
mov
mov
mov
pop
loop
mov
mov
pop
xchg
mov
das
cmc
aad
dec
jmp
inc
dec
xchg
or
stos
sub
inc
ret
adc
imul
or
andb
dec
movsl
mov
jne
out
ljmp
sbb
adc
cmpsb
pusha
sub
jno
fnstcw
imul
nop
pop
sbb
cld
ljmp
push
mov
push
xchg
fdivl
push
adc
lock
or
pusha
mov
add
pop
mov
or
lret
push
lret
test
dec
jns
ljmp
pop
mov
js
xchg
sbb
jo
mov
test
jns
fs
cmp
andb
xor
xchg
ljmp
lret
cmp
lret
scas
sub
lcall
mov
scas
push
hlt
movl
lret
or
adc
mov
subb
stos
lds
mov
jno
sbb
mov
loop
jbe
mov
test
dec
mov
outsl
push
inc
fnstenv
popf
lret
pop
push
push
and
insl
sub
cmpsb
ja
lods
fcompl
shrb
scas
shrb
jbe
cmp
dec
mov
sub
fistpl
mov
push
cmp
addb
sbb
xchg
mov
inc
xchg
test
ror
jmp
faddl
test
rcrl
outsb
aaa
or
popa
decl
jmp
sbb
stos
push
xchg
inc
fstl
orl
cmpl
jns
pusha
inc
bound
sahf
lods
dec
jb
bound
sub
xchg
rolb
lcall
pop
mov
lret
mov
aad
jmp
cmpsl
ja
testb
je
addl
cmp
mov
mov
iret
mov
jmp
mov
loopne
jmp
loop
cmpb
hlt
in
sti
mov
or
inc
sbb
inc
std
and
lret
xchg
jmp
lds
dec
daa
mov
pop
shll
mov
roll
adc
mov
and
fisubs
xorb
adc
popf
jno
jb
or
mov
clc
jno
adc
pushf
cmp
push
add
icebp
dec
jmp
xchg
aaa
mov
scas
movsb
xor
movsl
dec
jmp
mov
test
sahf
lock
shl
sbb
inc
cli
and
jmp
mov
lds
inc
scas
add
sub
out
mov
pop
fcomi
cmpsb
mov
push
incb
xor
iret
ret
int3
and
mov
cmp
mov
or
jmp
aad
xchg
out
pop
cltd
cmp
ljmp
nop
or
add
in
in
sub
std
pusha
or
xor
add
add
loop
bnd
xchg
test
fwait
sbb
mov
and
in
lock
inc
fs
xchg
ret
jne
mov
mov
xor
and
lea
loop
mov
sbbb
adc
test
out
sbb
fbld
scas
addb
test
pop
jp
popf
push
shll
mov
outsb
outsb
mov
sbb
js
mov
dec
inc
jp
icebp
sub
in
es
rorl
dec
xchg
jno
mov
decb
mov
push
jae
scas
inc
incb
movsl
shl
icebp
push
dec
or
adc
sti
dec
cmp
test
stos
mov
roll
stos
daa
rcr
cmp
into
add
xor
rorl
jns
cld
cmp
mov
mov
cmp
int
sahf
mov
push
aam
mov
or
fadd
add
jno
push
push
adcl
fscale
and
jo
or
and
sarb
sbb
xlat
add
xchg
inc
sub
mov
xlat
mov
iret
clc
arpl
push
push
test
and
adc
add
arpl
mov
mov
mov
jp
or
out
fs
mov
in
jns
cltd
cmp
adc
scas
jae
scas
dec
aaa
pop
adc
lock
push
mov
add
sub
lcall
or
cmp
clc
int3
and
pop
icebp
loop
outsb
dec
sub
xchg
addr16
in
sbb
ds
into
fwait
cmp
and
fwait
cmp
pop
repnz
pushf
add
cmpsb
and
imull
mov
out
fstpl
notb
stc
add
mov
pop
nop
orl
ret
lret
movsb
cmp
adc
inc
xchg
cmp
jmp
or
leave
inc
add
out
add
add
xchg
pop
push
lahf
in
mov
xor
add
out
js
rep
sbb
xor
sub
popw
scas
xor
in
xchg
fs
fnstcw
cmp
decb
scas
fwait
idiv
add
jecxz
pusha
cli
dec
stos
jb
rcrl
inc
inc
ja
mov
push
or
push
ja
aas
outsb
movsb
sub
pop
pusha
jnp
mov
xchg
shll
lds
xchg
sub
lret
cmc
pop
imul
out
ss
mov
movsb
dec
rcrl
test
push
js
lds
mov
ret
loope
jne
xchg
test
and
in
stos
fdiv
rclb
fsubrs
jne
xor
inc
mov
popa
and
in
xor
dec
repz
ja
mov
iret
push
lret
movsb
adc
pop
push
xchg
xlat
cmpb
jge
clc
push
adc
and
test
mov
loope
shrl
ret
ficoml
jge
gs
rcrb
xchg
xchg
sub
lock
bnd
imul
out
pushl
sbb
dec
cmpsb
cmp
iret
xor
nop
scas
stos
mov
pop
cmp
mov
icebp
outsl
nop
dec
aam
mov
xchg
mov
mov
xchg
sbb
jb
xchg
mov
inc
outsb
ss
xor
or
pop
xor
mov
ret
pop
mov
dec
pop
repnz
pop
pop
in
mov
xchg
aad
pushf
cmpsl
mov
iret
or
mov
lods
inc
add
cli
in
sbb
cmp
sahf
sbb
xchg
cmpsl
pop
fcomi
loopne
xor
hlt
add
in
int3
loop
bound
mov
mov
jmp
pop
push
mov
gs
inc
cmp
pop
scas
popa
add
cmp
popa
fldl
mov
fwait
push
mov
scas
inc
mov
sti
push
int3
sbb
sub
jle
fimull
test
mov
fnstsw
int3
outsb
shrl
or
shr
xor
stos
adc
leave
pop
in
or
call
pop
sbb
jne
shll
ret
lods
fdivl
ja
loop
in
or
mov
xchg
cmc
mov
add
adc
ret
or
aam
dec
in
jne
cmp
add
lods
mov
stos
je
mov
nop
cmp
notl
shlb
call
adc
clc
fwait
loopne
ja
pmulhw
addps
add
jp
jecxz
or
movsb
std
fucomi
mov
xchg
add
jnp
mov
in
loope
adc
mov
sub
push
mov
shlb
pop
or
loopne
jae
mov
sub
inc
xorb
jmp
dec
insb
int3
xchg
aad
cmp
lods
call
mov
shrb
insl
inc
test
xchg
rorb
nop
and
push
ss
sub
pop
popf
jmp
cmpsb
jnp
pop
aad
jl
or
lds
sbb
popf
lea
ret
std
adc
push
fstpl
inc
repz
rcr
neg
push
popa
jmp
cmp
mov
dec
lret
xchg
addl
cld
add
xchg
xor
sbb
sub
stos
inc
pop
mov
pop
sbb
ja
fistpll
jge
aad
pop
cld
or
pop
ror
mov
sbbb
mov
mov
inc
xchg
mov
pusha
cmp
lcall
test
inc
iret
sub
push
imul
mov
ret
int
xchg
pop
faddl
jno
fldl
cmp
or
enter
jmp
cmp
mov
shr
push
ret
mov
push
test
in
sub
xchg
xchg
xchg
inc
nop
inc
in
sub
das
filds
mov
add
jmp
inc
sar
mov
aad
incl
ret
add
fs
in
in
jmp
fcmovu
sbb
cmp
imul
into
sar
xlat
in
add
xchg
fwait
mov
lahf
lea
jg
lods
idiv
int3
jne
inc
pop
inc
repnz
ja
clc
mov
fnstcw
jo
leave
pop
sti
add
add
scas
add
xchg
mov
sbb
aad
jae
dec
dec
inc
popa
mov
xlat
pop
pop
xchg
lods
pop
call
jno
and
cs
mov
aaa
aad
hlt
xchg
add
leave
mov
popa
pop
xchg
add
pushf
or
inc
hlt
add
mov
xchg
sub
imul
and
ret
pop
jge
mov
push
insb
in
call
jecxz
inc
and
nop
mov
push
mov
movsl
inc
popa
lea
adc
inc
mov
insl
jo
test
push
addr16
fwait
mov
push
inc
inc
scas
add
mov
push
test
xchg
jge
and
lret
inc
jp
dec
aaa
in
fwait
loope
fnstenv
mov
std
loope
js
aad
dec
push
fxam
repnz
or
fwait
jmp
xchg
popf
fs
xor
sbb
adc
shll
mov
mov
adc
aaa
out
xor
adc
mov
fs
popf
aad
les
xor
mov
lea
dec
sbb
sub
aaa
or
pop
add
orb
inc
sahf
xchg
rcr
push
add
fbstp
pop
out
fs
mov
pop
sbb
push
aad
push
or
sbb
mov
pop
out
cmp
out
aad
pop
mov
rclb
mov
push
js
push
fwait
jge
mov
int3
jl
movb
and
call
cmc
jle
adcb
aaa
cmp
negb
int
in
and
dec
add
mov
je
stos
addr16
mov
adc
jmp
rcll
imull
mov
leave
leave
fucomp
xchg
std
fadd
aaa
mov
fs
xor
lcall
es
dec
sub
test
sahf
cs
data16
mov
arpl
ret
fsubp
leave
mov
mov
cmpsl
jle
push
mov
popf
pop
test
popf
pusha
xchg
loopne
js
roll
daa
andl
dec
arpl
dec
push
loop
rclb
pop
in
sbb
mov
je
xchg
data16
jmp
xchg
fisubrl
push
insl
mov
clc
outsb
mov
cmp
jle
pop
into
popl
lds
mov
jae
into
in
inc
repnz
aaa
dec
test
mov
rolb
fcmovu
dec
cld
fistpll
xor
add
jmp
stos
rorl
or
fnsetpm(287
sbb
add
out
pop
fldl
in
movsl
mul
aad
loop
inc
fldl
jnp
jmp
mov
fs
sbb
xor
ror
jae
sbb
int
or
in
pop
xchg
sti
lret
add
dec
sbb
pusha
andl
jae
mov
repz
imul
pop
xchg
or
hlt
std
fcomps
sahf
jnp
and
mov
mov
jbe
push
mov
push
in
mov
inc
mov
pop
mov
popa
or
std
mov
sti
lds
mov
xor
lods
divl
loop
push
pusha
aas
mov
add
stos
in
mov
out
cmpsb
jo
fists
repnz
clc
insb
jecxz
ljmp
fs
cwtl
or
fidivl
dec
fsts
xchg
aam
mov
movsb
fdivl
xchg
mov
mov
sbb
lcall
les
adc
mov
jbe
clc
stos
pop
mov
sbb
inc
jecxz
aaa
fstps
xor
icebp
dec
andl
ret
into
lret
int
jmp
mov
or
insb
cs
mov
fisttpl
mov
outsb
cmpsb
or
xchg
fisubl
into
xchg
dec
loop
add
push
in
int3
nop
sub
movsb
mov
mov
pop
je
pop
repz
mov
fcomps
or
xchg
jns
pop
add
test
dec
dec
inc
in
mov
rcrb
aaa
mov
lahf
mov
dec
push
cmp
adc
xchg
or
loope
fs
xor
movsl
mov
imul
loop
fisubrl
popa
xor
adcb
mov
divl
sbb
mov
aaa
add
mov
add
or
js
adc
add
jae
add
js
cmpsl
icebp
jp
cmpsl
ja
xchg
cmpsl
ja
mov
xor
xor
jns
cmp
shlb
fnsave
sti
xchg
fs
das
std
mov
sbb
ret
adc
sub
into
push
and
xchg
std
jb
cmp
mov
mov
cmp
adc
xchg
dec
idivl
mov
mov
or
bnd
xchg
iret
jle
aas
adcb
sub
out
or
call
dec
xor
dec
out
aad
or
sti
or
ja
sbbl
std
mov
loop
sbb
sub
lock
push
iret
lcall
inc
pop
cli
xor
leave
fistpll
ja
add
jne
or
push
add
cmp
int
loopne
ss
xor
ja
addl
push
sbb
cmp
les
cmpsb
sub
mov
push
std
sub
popa
mov
pushf
jnp
xor
fxch
mov
xor
or
mov
loope
inc
add
inc
lret
sbb
ljmp
mov
xor
lret
fidivl
ss
loopne
aaa
in
aad
push
ljmp
out
lock
dec
mov
pop
ja
mov
sub
ja
test
es
mov
mov
jnp
pop
xchg
jbe
inc
xor
dec
int3
ftst
add
and
add
push
mov
mov
loopne
call
es
and
xor
jmp
ret
jmp
or
pop
mov
adc
mov
sbbl
push
mov
fwait
loope
sbb
sbb
mov
xor
imulb
sti
int3
fldcw
fists
mov
fisubrs
or
adc
xchg
pop
ljmp
push
sub
in
aad
cmp
enter
loop
leave
mov
test
imul
sbb
mov
push
and
mov
xchg
sub
frstor
dec
push
xchg
scas
xchg
sbb
pop
push
mov
adc
xchg
xchg
repnz
shl
shl
in
fstps
pop
clc
push
adc
addr16
into
pop
mov
out
sub
ret
mov
cwtl
stos
ds
mov
jge
sbb
mov
lret
out
and
das
sbb
adc
dec
push
push
pop
ret
decb
leave
leave
sbb
aas
adc
xchg
outsb
iret
sbb
xor
inc
iret
shll
or
inc
dec
xor
rorl
dec
jbe
add
inc
sub
fwait
aad
sbb
rcl
pusha
mov
mov
mov
adc
dec
arpl
cmp
mov
jmp
pop
mov
js
sbbb
dec
jle
adc
shrb
push
cmpb
iret
movsl
stos
loopne
add
lea
mov
rcl
push
cwtl
add
cmp
or
fdivrl
sub
arpl
mov
cmp
mov
mov
inc
cmp
xchg
add
sub
movsl
cmc
int
fs
lret
lcall
xor
lods
push
fst
iret
jl
mov
in
adc
subl
fdivrl
xlat
push
in
add
pop
int3
test
mov
xchg
aaa
lods
inc
pop
in
or
dec
in
cmp
call
fldl
push
cmpsl
add
push
in
pushf
add
jmp
and
fs
jbe
es
jmp
xor
xchg
inc
in
das
fisttpl
std
sub
cmp
xor
aad
in
cmp
mov
testl
pop
xchg
inc
pop
jo
in
push
lret
jmp
in
cli
inc
sbb
xchg
pop
sbb
cltd
xchg
int
cmc
sub
adc
in
int3
jb
sbb
knotb
stc
dec
stc
pushf
aam
mov
lea
push
cld
es
in
or
bound
push
mov
in
xchg
insl
cli
xchg
std
push
int3
pop
push
push
lods
push
fnstsw
test
std
clc
ljmp
gs
pop
jge
push
cld
mov
fstl
int3
mov
pusha
fmull
sti
mov
jmp
adc
in
in
mov
insl
cmp
ja
fs
dec
lock
pusha
and
push
cmc
cmp
xchg
andl
out
fldt
popf
add
repz
lret
mov
xor
sti
aad
sti
xor
fbstp
in
jle
shl
sti
fisttpll
adc
in
pop
int3
out
sti
mov
xor
cli
jl
je
cmp
testl
jmp
aad
mov
fbstp
rclb
cmc
fwait
int
stos
fnsave
stos
pop
aad
fisubs
or
int3
inc
push
fisubrl
dec
mov
xchg
insl
imul
hlt
mov
or
jecxz
std
daa
mov
test
in
pop
aam
rclb
or
sbb
int
pop
in
call
aad
jmp
mov
ret
mov
xor
lods
cli
cmc
sbb
add
in
test
mov
cmp
mov
andb
adc
adc
add
push
pushf
pop
xchg
xchg
data16
rolb
xchg
add
popf
test
movsb
dec
and
add
xchg
mov
mov
sahf
in
ficomps
mov
repz
jne
leave
scas
in
push
jno
in
pop
movsl
mov
std
scas
jae
aad
mov
sbbl
fisubl
inc
aam
dec
xchg
aas
xchg
insl
inc
mov
imul
xchg
sti
std
and
dec
push
lcall
in
in
cmc
pop
pop
mov
pop
cmp
dec
fs
cld
xchg
cmp
out
jmp
cmp
dec
cld
mov
xchg
int
cld
out
sub
pop
aad
je
sub
pop
or
vcomiss
cld
in
jmp
dec
pop
loop
clc
push
adc
rcrb
aad
int3
bound
pop
jns
aad
into
jge
xor
push
fistl
inc
xchg
scas
insl
cmc
pop
inc
xchg
and
sbb
aad
aad
mov
lret
leave
inc
mov
sub
shrb
and
mov
inc
pop
mov
add
push
jmp
sbb
mov
add
pop
in
mov
sbb
jmp
adc
js
adc
mov
pusha
jge
mov
imul
mov
xorl
int
xchg
pop
test
cmp
sbb
flds
stc
enter
dec
outsb
xchg
lds
and
aad
popf
mov
push
mull
popa
pop
popf
aad
mov
cmp
scas
fdivrs
loop
xchg
icebp
xchg
imul
les
mov
les
cmpsb
xchg
jmp
adc
in
push
xchg
add
repnz
loope
mov
mov
sti
fisttpll
insl
stos
push
int3
pop
in
lret
xor
mov
mov
inc
push
ljmp
loope
les
pop
dec
cmp
cwtl
jbe
sub
popa
mov
fstl
cmp
fists
call
xor
sbb
or
icebp
bound
mov
cmp
mov
inc
sbb
in
inc
push
cmp
mov
shl
xchg
push
insb
pop
shl
xchg
mov
cmp
int
cmc
mov
mov
lret
xchg
xor
fimuls
pop
scas
add
and
icebp
fstp
addr16
flds
or
jnp
repz
mov
xchg
mov
sahf
ror
and
xchg
jmp
xlat
shrl
bound
mov
dec
cmp
arpl
idivl
scas
dec
lock
pop
popa
scas
pop
imul
out
jmp
jnp
shll
lcall
inc
sub
mov
enter
dec
aaa
mov
lret
jg
fxch
repz
mov
and
xchg
fcmovnu
fmul
dec
sub
dec
inc
dec
push
mov
sbb
jb
dec
sbb
push
aaa
xchg
xor
fwait
dec
pop
clc
insl
insl
add
mov
pop
aam
sub
mov
nop
xor
sub
int
push
in
pop
push
pop
mov
xorl
inc
sub
pop
loop
xor
xchg
scas
aaa
xchg
lods
stc
inc
incb
scas
out
xor
arpl
lret
js
shll
addr16
inc
adc
shl
mov
add
insb
mov
ljmp
cmp
stos
out
mov
inc
pop
jl
fcmovb
int
ds
mov
ret
pop
lods
mov
int3
mov
cmp
scas
fs
movsb
add
imul
add
jb
add
popa
xor
push
idiv
jmp
dec
jnp
lcall
pop
stos
cmp
mov
nop
dec
ret
sar
mov
popa
cmpl
add
daa
jo
in
cmp
repnz
aad
fs
xor
aad
xor
ficompl
imul
or
adc
cmp
test
arpl
fisttpll
into
loope
xchg
pop
add
adc
std
popf
es
mov
imul
enter
sarb
clc
cmc
pop
in
lea
int
rcl
imul
xor
in
fcompl
mov
aad
jle
mov
dec
rcrb
jo
pop
cmp
sub
jmp
fdivrl
push
iret
push
jp
imul
cmc
sub
mov
fcomp
decb
jge
jmp
movsb
ss
xchg
dec
add
pop
adc
into
popf
hlt
inc
mov
xchg
inc
repnz
mov
iret
je
sbb
cmc
movsl
push
rcrl
sti
in
pusha
or
sbb
movsb
pushf
fs
test
mov
int
lods
jmp
fst
fmull
inc
dec
pop
ret
jo
pop
sti
popf
lret
cmpsl
or
sub
cld
jecxz
mov
ds
das
movsl
xlat
sahf
pop
daa
or
mov
pushf
fs
shl
stc
inc
cld
sbb
neg
pop
mov
lahf
fnstenv
pop
incl
test
xor
ja
inc
hlt
sub
int
loopne
cli
push
cltd
loop
mov
mov
xlat
mov
movsl
xor
inc
push
loop
fdivl
xchg
mov
pop
movsl
sub
push
mov
mov
mov
iret
lds
into
mov
mov
pusha
insl
inc
pop
out
lret
mov
jno
ret
xchg
inc
sub
orb
push
es
aad
cmp
out
int
fcoml
mov
sbb
es
je
jo
fdivs
sbb
popf
aam
and
xchg
mov
lret
jg
adc
aas
in
xchg
inc
cmp
iret
dec
fisubs
testb
jbe
movsl
cmp
inc
jns
xchg
dec
mov
mov
icebp
jmp
jbe
test
sbb
movsl
adc
mov
xchg
in
leave
jl
adc
push
sarb
in
test
lock
add
int
int
movsl
cmp
mov
sub
push
cmpsl
jns
bound
xchg
div
out
dec
stos
mov
je
mov
cmp
bound
xor
leave
shl
out
pop
neg
scas
sbb
call
test
add
lret
popf
or
jnp
or
add
lret
movsb
int3
sahf
stos
sub
add
out
rcrb
and
loop
adc
adc
sub
sbb
lret
jns
nop
sbb
fdivl
xchg
or
xchg
cltd
out
mov
pop
sbb
lahf
or
lcall
mov
imul
mov
xlat
stc
inc
fwait
and
cmp
addr16
sub
sub
inc
bnd
ret
popf
clc
jo
repnz
jp,pn
push
and
pop
int3
aam
cmc
cmpsb
mov
inc
cmp
sub
cmp
hlt
in
push
xchg
push
psraw
inc
pushf
and
adc
mov
sti
scas
mov
jno
bound
pop
cmc
dec
fld
shl
push
xchg
cs
dec
icebp
repnz
or
xchg
mov
lock
sti
cmp
jnp
or
mov
pop
gs
mov
fcmovnbe
repnz
jmp
xor
into
into
adc
call
cmp
faddl
ret
lcall
mov
mov
mov
jnp
imul
in
cmp
adc
fs
sub
xlat
mov
xchg
pop
cs
add
jp
mov
dec
clc
cli
insb
mov
pop
push
sti
insb
insb
cmpsb
sbb
jae
mov
jne
sub
loope
pop
cmpsl
mov
aas
and
lock
adc
fnsave
mov
and
loop
mov
xchg
pcmpgtb
fdivrs
or
add
xor
lea
jl
push
clc
cmp
and
divl
mov
mov
aaa
fcompl
sub
mov
push
popa
dec
sahf
in
and
arpl
cmpsl
mov
fidivl
fucomi
cmp
jnp
test
lret
shrb
add
push
jbe
shrl
rolb
repnz
xor
inc
and
orb
icebp
cmpsl
test
rorb
sti
mov
or
lcall
mov
jl
int
add
pop
mov
lret
cld
stc
pop
fnstsw
jg
repnz
into
push
push
ljmp
daa
shl
lret
add
xor
into
push
cmp
push
scas
or
lret
ss
push
std
xchg
and
push
lret
and
or
cltd
inc
mov
jg
and
pop
push
sbb
or
or
mov
xchg
pop
test
jg
mov
mov
sbb
in
not
mov
repnz
mov
push
mov
xor
mov
jns
cs
xchg
cmpb
fcom
adc
les
push
fnsave
mov
mov
movsl
leave
stos
jo
test
mov
pusha
jmp
mov
mov
jp
mov
fistps
jmp
pop
sbb
cs
mov
sbb
mov
in
adc
cmc
in
lods
fadds
pop
rol
jle
push
sbb
sahf
inc
add
xor
ljmp
in
add
jne
push
popf
mov
add
gs
shrl
pop
mov
or
cmp
repnz
sbbl
sahf
mov
test
insl
fcos
xor
mov
pop
add
and
in
sbb
into
repnz
or
pop
xor
loope
gs
mov
and
pushw
sub
ljmp
test
data16
adc
dec
sub
mov
mov
std
inc
icebp
adc
fimuls
sub
je
add
pop
std
sbb
enter
loop
xchg
and
xor
cmp
shlb
rol
out
scas
stos
push
popa
dec
mov
shlb
mov
popl
icebp
mov
pop
repnz
pushf
mov
add
fst
es
repz
nop
dec
xor
add
pop
and
xchg
or
adc
js
push
movsl
mov
jl
fs
mov
punpckldq
or
xor
sar
mov
and
movsl
nop
test
insl
xchg
ja
aad
lret
out
push
rorb
cwtl
in
cmp
jl
dec
lods
daa
mov
mov
loop
mov
out
in
std
into
dec
jmp
cmp
mov
jno
push
push
mov
jle
aam
and
mov
rcrl
repz
shlb
mov
mov
sbb
sbb
and
int
cli
mov
popf
adc
mov
cmp
into
aad
daa
cs
in
dec
mov
mov
mov
push
xor
mov
sub
xlat
rcrb
in
int3
fdivr
bound
jmp
mov
clc
or
test
or
cld
in
pslld
pop
stc
mov
xor
fstps
sbb
xchg
test
jecxz
stc
xchg
xlat
or
pop
fwait
mov
sbbl
ljmp
jg
mov
ret
in
jns
cld
popl
ljmp
dec
js
pop
sub
popf
cwtl
adc
push
mov
adc
loope
cli
aam
shll
cmp
jl
mov
out
test
xlat
or
push
faddl
dec
mov
cld
movsb
imul
cmp
je
mov
xor
jp
incl
mov
jne
imul
test
repz
inc
xchg
mov
and
push
mov
dec
mov
sarb
std
je
popf
fucom
jmp
cli
icebp
xor
add
je
inc
rorb
lret
sarl
xor
jp
cli
xchg
sbb
or
das
mov
aas
popa
dec
insb
add
leave
inc
clc
jbe
cmp
shll
mov
movsb
cs
lods
cwtl
fsubr
mov
push
push
repz
clc
push
jge
cmp
outsl
xchg
jo
fstps
sub
insl
aam
loop
outsb
lods
cltd
int3
jbe
push
mov
cmp
sub
mov
adc
or
ss
std
stc
xchg
adc
repnz
pop
cmp
add
shll
lea
mov
sti
iret
xchg
cmpsl
sbb
popf
pop
cwtl
inc
add
ret
pop
roll
xor
inc
sub
lret
jbe
mov
icebp
jnp
cwtl
loopne
int
pop
xor
adc
add
iret
test
mov
popa
dec
mov
xchg
outsb
mov
les
dec
imul
and
cmp
into
dec
ss
fucomi
cmp
mov
or
dec
dec
mov
push
arpl
dec
in
test
sbb
out
in
lea
mov
and
adc
cmp
nop
sub
dec
sub
push
jmp
and
push
test
sbb
sti
aaa
and
pop
pop
imul
lcall
xchg
ret
das
sub
xchg
jmp
lret
addl
cmp
shl
das
and
xlat
ficomps
push
cmp
mov
mov
fistps
xchg
cli
aaa
jecxz
sbb
push
jmp
ret
test
imul
in
movl
mov
sbb
and
test
pop
shl
jns
jl
fsubrs
nop
cmp
pop
or
lret
push
cmp
test
ja
and
test
cli
dec
loope
dec
sbbl
pusha
mov
ret
jae
repz
cli
dec
loopne
fstp
sti
rcrl
adc
in
insl
sbb
push
aam
fdivrs
insb
call
clc
push
scas
xlat
jns
mov
testl
pop
fcom
repz
sahf
push
fsubr
sbb
aas
insb
dec
mov
hlt
jnp
in
cmc
jp
jo
mov
out
dec
lahf
aaa
and
cltd
js
sar
or
cmp
mov
mov
mov
jo
sahf
dec
fdivrl
aam
add
sbb
lock
movsl
or
notb
mov
mov
add
pop
sbb
sbb
pop
push
xchg
insl
bound
aad
lock
mov
cmc
add
movsl
push
repz
inc
xor
push
jl
sub
inc
push
es
inc
cwtl
and
pop
clc
les
jnp
mov
aas
push
xchg
push
js
dec
add
mov
outsl
mov
jecxz
mov
dec
jb
lret
xchg
inc
js
pop
mov
ss
cs
dec
stos
dec
das
cmp
push
loop
mov
xchg
call
fldenv
mov
movsb
leave
fstps
push
inc
hlt
jle
clc
mov
in
jne
in
mov
mov
cmpsl
sub
mov
dec
dec
iret
lods
sbb
adc
or
mov
xor
mov
or
out
imul
js
dec
jge
sbb
fcompl
pop
dec
pushf
lret
pop
sub
lock
ret
cltd
cwtl
fimuls
mov
lock
sub
dec
jne
mov
mov
push
mov
stos
je
outsb
cmp
cmp
xlat
in
rdmsr
repz
xchg
inc
add
inc
or
cmpsb
movsb
sbb
sbb
mov
test
jmp
dec
mov
test
sbb
imul
xchg
int
or
aam
fisubrs
dec
mov
mov
mov
dec
xchg
add
cli
ja
jle
or
aam
or
cmp
into
andb
scas
dec
pop
das
dec
dec
cmp
push
mov
cmc
cmc
stos
lds
xor
xchg
sbb
jb
in
add
cmp
loope
call
cltd
mov
lcall
xchg
not
int
daa
popf
dec
and
pop
aad
jmp
call
in
fisubrs
xchg
adc
lock
fsubl
lock
daa
adcb
mov
xchg
or
adc
jnp
pop
jle
inc
arpl
fstps
out
leave
fbstp
aam
adc
fdivl
dec
pushf
xchg
add
lret
and
mov
and
jle
imul
xchg
pusha
push
lcall
shlb
pop
jnp
cli
popf
sahf
lret
bound
std
cmp
add
sbb
sbb
or
sub
jecxz
cmp
in
mov
mov
js
xchg
shll
pop
mov
adc
fldcw
jg
or
cmp
push
cmp
push
scas
dec
or
jmp
pop
add
dec
jmp
jp
fdivl
sarb
shl
mov
and
and
int
fcoml
mov
mov
leave
fdivr
pop
cmpsl
mov
and
cmc
jge
jmp
sbb
sub
pop
bound
les
adc
ret
loopne
fs
cltd
xchg
lds
mov
jo
stc
push
and
ss
popf
into
sbb
dec
dec
add
rolb
jns
inc
xor
mov
dec
xchg
jne
std
loopne
xchg
hlt
cmp
fs
repz
cmpsb
cltd
inc
and
inc
inc
cmp
popa
leave
push
adc
xchg
aad
shrl
pusha
pop
js
out
in
sbb
or
cmp
fcoml
aam
imul
sub
in
fcmovne
push
fists
mov
popa
imul
push
jl
inc
cltd
xlat
mov
icebp
negl
jb
pop
add
dec
orb
popf
jne
xchg
and
mov
sahf
fs
xchg
mov
xor
mov
subb
pop
mov
mov
test
xor
dec
mov
lret
popa
subl
aad
cmp
jge
jno
lahf
cmpsb
mov
je
mov
mov
cld
mov
cmp
cwtl
adc
jae
xor
pushf
add
sub
movsl
mov
je
aad
psadbw
loope
jbe
out
in
ss
mov
jne
push
movsl
insl
shl
lahf
iret
xorl
imul
jo
jle
sarl
lret
movsb
inc
jo
mulb
adc
jno
shl
test
xor
mov
popa
cmp
inc
repnz
mov
jbe
ljmp
add
lret
andl
jb
out
aaa
cmpsl
in
inc
mov
cltd
xlat
bound
xor
lahf
pop
and
dec
jae
repz
in
fldt
in
mov
hlt
mov
outsb
cmc
test
fisttpll
jg
pop
inc
cmpsl
aaa
sbb
jge
xor
jns
insl
fistl
lahf
vpor
aad
dec
pop
sti
mov
movsl
loope
mov
enter
xchg
mov
mov
movsl
push
in
mov
ficoms
leave
mov
arpl
add
jno
cmp
aaa
push
stos
xor
inc
add
add
dec
add
dec
mov
fidivl
dec
sbb
out
aaa
mov
shll
nop
add
inc
lea
fbld
cmp
pop
rorb
xchg
mov
or
in
loop
pop
add
mov
mov
in
push
enter
lahf
add
sbb
lahf
lret
mov
in
in
mov
xor
sbb
cmp
incl
push
stc
test
sbb
imul
je
mov
and
adc
pushf
or
das
and
imul
stos
sbb
mov
loopne
stc
mov
rcl
mov
cmpsl
clc
test
mov
in
cld
cmp
cli
fs
push
dec
jno
sub
into
sbb
mov
sbb
fisttpll
addr16
aad
add
mov
lea
scas
std
loope
movsl
fs
sub
push
in
filds
int3
inc
mov
fldenv
jecxz
mov
dec
mov
ss
xchg
or
js
popa
add
xchg
or
jle
out
scas
cmp
and
aas
dec
in
or
ret
sub
mov
xlat
add
cmpsl
dec
xor
inc
add
mov
enter
aad
test
cmp
ss
mov
ret
jmp
push
sub
add
aad
or
and
cmpl
mov
xchg
ja,pn
gs
add
iret
stos
adcb
popa
dec
and
and
leave
into
lock
pop
pop
or
adc
xchg
adc
in
in
cmpsb
jbe
loop
or
sub
pop
xchg
push
cmpsb
ljmp
push
inc
das
paddb
mov
sbb
imul
cli
imul
push
push
mov
add
aaa
jnp
pop
shll
mov
jo
outsl
mov
inc
dec
out
aaa
xor
mov
inc
xchg
lahf
movsl
fnsave
mov
jmp
gs
fstpt
jge
aad
sti
das
pusha
jmpw
add
movsb
sbb
add
scas
xor
or
mov
or
and
xchg
mov
xor
push
loope
aaa
imul
jb
mov
jmp
dec
mov
pushf
in
adc
and
lods
fwait
out
cmp
fnstenv
stos
and
mov
fs
in
dec
in
js
sub
inc
and
push
adc
push
paddd
stos
jmp
cmp
js
shrb
rcl
shl
xor
cmc
cmp
test
vmread
jne
pop
push
popa
dec
mov
mov
push
sbb
dec
jl
sbb
mov
inc
adc
dec
jae,pn
mov
rorl
lods
mov
jge
jmp
movsb
pop
xor
or
lods
test
push
movsb
cmc
in
clc
mov
push
mov
push
mov
cmp
or
ss
jns
xor
push
popa
cs
jne
mov
mov
jecxz
mov
outsb
lret
or
int
mov
mov
vpunpckhbw
pop
dec
in
sub
or
mull
cmp
sub
fisubrl
add
cli
ret
repnz
imul
jmp
les
lods
cmpsb
xchg
pop
in
mov
popa
mov
stos
mov
sahf
je
shll
xchg
xchg
xor
xor
mov
jle,pn
flds
test
sub
mov
sar
popf
push
cld
push
jno
sahf
pop
sarl
jg
add
aad
fldenv
stos
mov
or
xor
popf
fsubrl
cld
dec
roll
pushf
push
xor
pop
out
andb
mov
inc
loop
mov
icebp
mov
xchg
or
ss
in
cwtl
add
or
dec
out
sub
stos
jl
int
sub
in
fs
or
lock
adc
sub
xchg
or
arpl
rorl
cmp
jge
push
or
lahf
and
inc
iret
cwtl
arpl
xchg
into
xchg
cmp
int3
push
lret
repnz
mov
add
mov
lret
arpl
imul
lret
jnp
push
sbb
sahf
fdiv
jae
jbe
push
out
scas
lock
fildll
cli
pop
or
les
std
dec
fwait
push
push
pop
lods
ror
mov
sbb
inc
jmp
pop
seta
and
je
add
pop
push
push
xchg
int
ret
aaa
pop
sub
xchg
push
sub
xchg
cmp
movsl
push
repnz
leave
jl
xchg
xchg
das
jnp
fucom
or
sti
push
sub
aaa
adc
cmpsl
inc
bound
ret
lret
fidivl
shll
repz
pop
aaa
fs
sti
es
insl
ss
pop
imul
shl
mov
in
leave
fildl
repnz
xchg
lods
jae
shr
hlt
test
xor
inc
jmp
add
nop
jnp
mov
inc
lcall
imulb
pop
pushf
rolb
xchg
mov
dec
cli
lret
dec
mov
and
gs
test
jne
cmp
shll
pushf
in
std
bound
dec
adc
aad
lcall
jmp
xor
mov
orb
icebp
mov
mov
and
add
jae
add
mov
hlt
hlt
ficoms
mov
cwtl
pop
mov
test
mov
mov
notb
sahf
mov
xchg
cmp
xsaves
and
mov
iret
inc
aas
cltd
fistpl
fisttpl
and
xchg
ret
movsl
mov
and
les
xchg
mov
bound
pop
inc
negl
xor
imul
lret
fsubrs
sbb
mov
cmp
mov
fisubl
in
fdivp
sub
mov
hlt
or
sbbl
lock
movsl
outsb
aaa
sbbb
pmuludq
push
mov
jnp
enter
movsl
inc
xchg
push
inc
push
lods
mov
pushf
pusha
mov
cmp
pushf
pusha
iret
flds
mov
sub
dec
int
lds
imul
das
fwait
leave
add
jmp
hlt
inc
cmp
fldenv
cmpsb
sub
jp
adc
in
fdivl
fwait
outsb
or
mov
das
fwait
and
dec
mov
mov
cmp
pop
dec
std
stos
sub
popa
xchg
lods
popf
ljmp
aaa
sbb
push
xchg
dec
push
mov
mov
lds
xorl
lods
mov
push
dec
cmc
dec
xor
std
ret
sbbl
xlat
mov
std
inc
pop
jl
mov
mov
sub
mov
repz
sub
fwait
pushf
pop
cmpsb
leave
cmp
in
ljmp
nop
xchg
sub
cmpsb
lds
int3
dec
mov
push
roll
test
aad
fcompl
add
and
cli
sbb
nop
xchg
dec
jl
in
pusha
fcom
in
lret
bound
mov
jbe
or
mov
add
in
mov
dec
add
xchg
or
fimull
pop
mov
fcmovnbe
lds
cli
fucomip
cmp
shr
sub
jmp
aad
cmc
add
jmp
int3
add
push
push
sbb
sbb
loopne
shll
jecxz,pn
dec
xchg
jbe
stos
lret
mov
sbb
jne
fs
cmp
iret
xor
ret
loopne
inc
lahf
or
xchg
leave
in
ss
sub
dec
movsb
sub
icebp
jns
outsb
lock
out
cld
fsubrs
xor
outsb
repnz
aas
jne
mov
cld
jmp
loopne
das
pop
push
nop
jl
jns
aad
push
push
dec
sub
orb
jnp
jbe
int
sbb
fimull
shll
lea
jbe
shlb
mov
leave
cmp
mov
cmp
loope
push
lock
and
mov
sahf
xchg
mov
dec
jmp
pop
loop
xchg
movsl
les
add
jo
ret
push
pop
inc
clc
add
cld
cmp
xor
sub
jecxz
rcl
xor
dec
les
jle
mov
sbb
sti
fs
loope
popa
sahf
lcall
iret
push
mov
xchg
nop
cmp
sbb
leave
or
xor
add
jns
mov
into
push
fnstenv
lock
repnz
clc
jns
adc
loopne
jecxz
into
cmp
add
mov
dec
in
mov
adc
mov
dec
lods
andb
cli
loope
push
mov
shll
pop
mov
pop
or
sub
pop
jns
cmp
dec
aas
or
cmp
stos
inc
out
cli
daa
loop
out
cmp
int
or
fldl2t
int3
pop
sub
in
inc
cmpsb
push
in
cs
jmp
mov
or
or
add
out
mov
psubusw
outsl
lds
pop
push
rcll
mov
out
imul
xchg
scas
mov
mov
out
sub
cmp
stos
inc
or
lods
mov
or
mov
sbb
dec
or
fmull
sub
test
sub
in
add
and
xchg
ss
cmp
sbb
push
inc
xchg
scas
imul
inc
fistpl
fcoms
addr16
jae
in
push
pop
jecxz
xor
ret
lret
sbb
icebp
push
lds
cmp
je
lcall
add
pop
xlat
cmp
into
mov
lret
xchg
and
icebp
je
xchg
imul
lds
fstpl
mov
jb
addl
cmove
and
scas
gs
push
rorl
push
inc
lods
mov
inc
imul
push
lret
mov
jbe
dec
push
fs
add
out
popl
fcompl
negl
addr16
or
fldt
cmpsl
int
dec
cmpsb
stc
push
shlb
cwtl
mov
outsb
cmc
mov
fiadds
pop
push
clc
mov
fnstenv
lret
into
aas
cli
idiv
adc
xchg
aas
pushf
cmp
pop
jns
fstpt
ljmp
push
hlt
sahf
sbb
imul
inc
movsl
popa
mov
add
sbbb
xchg
outsb
cmp
or
sbb
mov
push
hlt
xchg
adc
dec
lret
fldcw
gs
push
pop
imul
int3
xchg
add
add
dec
loope
adc
inc
aad
nop
insl
dec
stos
sub
pop
xor
cwtl
js
clc
cld
push
or
rorl
mov
insl
add
rcr
and
mov
cld
orb
mov
dec
lret
xchg
xchg
in
xorl
jo
mov
pop
mov
out
or
test
sbb
pop
cmp
sarl
andb
adc
xlat
pushl
in
sub
xchg
push
push
out
sbb
pop
in
inc
jae
into
test
cld
pop
sub
pop
scas
push
mov
jae
mov
jecxz
fnstsw
jmp
or
jge
fmul
rcl
movsl
add
scas
xchg
xchg
sub
adc
repnz
pop
jb
fidivrl
int
pusha
or
ret
pop
or
inc
mov
into
jo
not
mov
cld
inc
dec
mov
out
repnz
cmp
inc
stc
stos
stc
adcl
repz
bound
sbb
mov
pop
mov
mov
add
dec
add
mov
adc
push
call
jl
inc
lret
fcomip
xchg
jg
hlt
push
js
repnz
pop
mov
push
inc
fldcw
add
icebp
hlt
or
mov
hlt
mov
and
inc
jecxz
mov
sub
lret
ljmp
shll
add
xor
popl
inc
repnz
les
cmp
adc
fabs
popf
add
jnp
push
jl
les
repnz
cld
in
xchg
push
lds
push
pop
pop
mov
mov
frstor
shlb
sub
icebp
es
movsb
das
sbb
mov
outsl
fstps
cli
jecxz
dec
or
push
fldenv
iret
push
lahf
test
adc
mov
cmc
out
mov
movsb
fildl
icebp
adc
fsubrl
or
aad
fimull
imul
pop
jnp
jge
aad
mov
cli
mov
ret
jge
fiadds
and
fildll
popa
cmc
fisttps
sub
push
rorl
inc
scas
jmp
mov
bound
pop
lret
std
xor
adc
dec
dec
lret
xlat
pusha
or
jmp
outsl
in
ja
fstpl
dec
movsl
stos
ljmp
mov
cmp
push
sub
sbb
inc
lods
xor
push
push
arpl
scas
leave
sbb
lret
dec
push
adc
aas
les
mov
loop
or
dec
xor
adc
pop
cmp
add
cmp
scas
int
push
xchg
sbb
lods
mov
outsb
add
fsubrs
aam
push
add
mov
addr16
pop
lods
xchg
aad
aad
jge
sbb
cmpsb
insl
mov
xchg
mov
repz
push
jecxz
rorb
lret
fisubrs
fstp
xor
sti
cli
push
lahf
cltd
outsb
or
cmpsb
cmp
mov
mov
loop
fiaddl
into
fidivl
gs
in
inc
xchg
cs
adc
mov
cmpl
fdivrl
cmpsl
daa
adc
and
add
mov
mov
mov
in
fs
pop
jle
jne
sbbb
xor
into
mov
sbb
and
inc
inc
lock
out
inc
mov
fstps
or
mov
pushl
in
outsb
pop
or
mov
movsl
mov
sbbl
repz
sti
lret
sti
imul
repnz
pop
shl
xor
adc
stc
imul
std
into
xchg
addr16
test
inc
mov
enter
popf
test
addl
add
mov
int
loopne
iret
popa
sub
fwait
shll
hlt
add
adc
add
flds
lret
cwtl
sahf
int
mov
or
mov
sbb
pop
aaa
mov
cmp
pop
clc
add
scas
fidivrs
popa
cmp
cld
inc
gs
push
lret
addr16
and
mov
adc
sahf
pop
frstor
cmp
adc
dec
or
and
xchg
leave
jecxz
sub
inc
or
js
jge
jmp
xchg
test
lret
and
or
sub
inc
jl
popa
in
out
sub
ja
add
push
shlb
adc
ss
cmc
sub
sbb
ds
push
popa
rcrb
cmpb
ficoms
push
ss
insl
scas
sub
jge
aad
xor
jne
ss
or
test
add
mov
adc
clc
gs
sahf
xor
jecxz
mov
inc
fcmovu
daa
mov
sahf
lea
movsb
pushf
xlat
shl
push
cltd
sahf
sub
sub
dec
cltd
insl
mov
movsw
lret
inc
inc
insl
insl
bound
stos
ds
pop
xor
stc
loopne
xchg
leave
aad
popf
jecxz
popf
or
dec
inc
test
cmp
dec
and
hlt
outsb
mov
sti
sub
cwtl
in
mov
push
cmp
mov
push
jns
xchg
in
in
sub
sti
cmc
int3
mov
sbb
insl
rcrb
fcoms
scas
adc
xchg
xor
dec
popa
jns
sbb
add
cmp
dec
dec
movsb
cmp
jmp
xchg
adc
sahf
cmpsl
int
and
lea
mov
popa
out
jge
inc
jnp
popa
loopne
add
jae
cmp
dec
movb
daa
mov
mov
data16
out
addl
mov
pop
lret
mov
popa
repnz
push
popa
and
mov
cmpb
outsl
aad
std
enter
leave
jo
loopne
daa
pusha
cmp
frstor
fidivrl
dec
cmp
adc
pop
cmc
push
out
jo
and
push
sarb
cmp
lahf
push
cmpsl
mov
sbb
bound
aad
jbe
out
rol
fwait
movsl
int3
pop
push
mov
inc
scas
insl
jo
mov
dec
fimull
mov
out
pop
aaa
inc
stos
rcrb
add
inc
inc
mov
cwtl
outsb
int3
push
push
mov
ret
jge
or
jge
scas
stos
icebp
and
les
xor
sbb
cmc
mov
jo
jno
cmp
sbb
mov
mov
mov
inc
aaa
cmc
cmc
bound
sti
fsubrl
pop
xchg
inc
out
repnz
pop
out
dec
into
pop
popf
jmp
lret
or
fnstcw
sti
lcall
jbe
hlt
xchg
gs
fstpl
nopl
adc
popf
icebp
int
push
in
imul
cltd
in
mov
cwtl
adc
cmp
sbbl
repnz
inc
jmp
pop
xor
xor
sub
cmp
movsl
adc
sbb
fstpl
push
mov
sub
pop
dec
xor
or
adc
pusha
push
aad
jbe
add
cltd
rclb
arpl
pusha
adc
cmpsb
lret
out
addb
fiaddl
inc
mov
cmp
mov
dec
roll
push
repnz
sbb
loope
pop
jecxz
adc
out
mov
sbb
repz
fidivs
push
popf
xchg
fcom
adc
xlat
sbb
add
lds
ror
mov
shlb
mov
xchg
test
pop
test
pop
jecxz
lea
dec
ss
dec
in
in
int
cli
lods
out
sbb
mov
xchg
neg
and
or
mov
out
xchg
popf
leave
and
fwait
in
gs
xor
add
jbe
pop
dec
imul
js
mov
push
jno
jne
lock
test
popa
xchg
popa
loope
loop
sbb
insl
cmp
pop
or
rolb
fwait
mov
sbb
xor
jmp
shll
bound
mov
out
xchg
pop
cmp
xor
and
imul
adc
ss
sbb
in
add
push
popf
icebp
pop
and
mov
or
dec
xor
sub
jnp
jl
repnz
push
push
xlat
pusha
das
in
xor
pop
inc
movsl
adc
mov
mov
sbb
push
scas
test
mov
mov
mov
mov
and
insb
bound
pop
sahf
loopne
mov
adc
xor
int
leave
pop
cmp
or
lea
popa
cmp
out
mov
in
popl
or
cmp
pop
jmp
sub
popf
leave
repnz
data16
iret
cmc
std
inc
cmp
push
dec
popfw
jmp
jge
mov
or
jg
or
lea
outsb
dec
popa
add
mov
mul
cmpsl
sub
imul
jp
and
cmpsb
jle
int3
jg
jbe
and
lret
mov
insl
stos
xchg
sbb
or
repnz
push
notl
xchg
push
push
bswap
sbb
add
fdivrs
xchg
stc
pop
dec
lret
mov
insb
jmp
mov
sub
sarb
movsl
sbb
jge
movsl
pop
aam
loop
stos
mov
in
xchg
mov
bound
es
das
clc
mov
cmpsb
int
cmp
xchg
fs
sub
fidivl
sahf
mov
or
test
or
test
push
fidivrs
loope
dec
popa
int
movsl
lret
ja
adc
xor
xchg
lea
pop
pop
rcrb
into
bound
popf
dec
repz
fdivl
or
enter
push
imul
aaa
arpl
sub
je
lock
sbbb
int3
mov
inc
ss
pop
insl
fwait
jne
pop
ja
fldt
pop
mov
jae
mov
xchg
xlat
xchg
inc
lret
pop
loop
sub
mov
xor
add
mov
xor
loop
loop
xor
xchg
icebp
cmp
sbb
lahf
or
mov
sbb
scas
je
in
dec
or
sbbl
xorl
pusha
lret
dec
loop
imul
ret
push
fcmovu
mov
fcoml
mov
popa
lahf
xor
cmp
fcomps
movsl
int
inc
mov
insl
popaw
xchg
mov
scas
xchg
xlat
jmp
int
adc
rorb
out
cmp
icebp
mov
test
xor
fidivs
loope
mov
lret
cmpsb
adc
jle
cmp
test
mov
mov
popa
div
cwtl
sub
mov
push
sbb
cmp
call
pop
jg
or
int3
std
mov
and
out
scas
jae
push
cli
push
ret
fcompl
jo
aad
sbbb
mov
ret
dec
pop
movsb
jnp
adcl
call
addr16
push
pop
xor
inc
or
mov
fldl
insb
dec
push
loope
dec
mov
rcrl
stos
cmp
push
mov
pop
and
in
test
mov
sub
lock
ja
stos
cmpsb
cmp
mov
ret
outsb
xchg
hlt
pop
cltd
jae
lcall
nop
imul
mov
mov
mov
jg
push
in
fsubl
inc
adc
xlat
aas
lods
fldl
rcll
or
lahf
jmp
and
ss
ffree
mov
inc
mov
xchg
fcoml
cld
popa
add
and
mov
or
inc
cmp
ret
cmp
aad
xorl
push
das
mov
das
push
cmp
sbb
adcl
insb
xchg
pop
das
sahf
add
shlb
fcmove
enter
test
xor
push
jnp
leave
add
mov
xor
addr16
cmp
fs
movsl
jb
cmpsl
mov
loope
mov
repnz
ret
dec
pop
mov
adc
add
faddl
add
fisttpl
add
dec
jb
add
mov
inc
orb
rolb
mov
cmpsl
shll
rcr
test
std
mov
cmc
cmp
jmp
lods
fstpl
push
inc
cmp
cmpsl
daa
das
mov
nop
and
into
fstl
loop
ficoml
rcr
lock
cmc
mov
neg
in
jge
pop
xchg
sbb
jae
push
loope
xlat
cs
pop
movsl
xchg
cmc
into
mov
mov
add
mov
pop
popa
movd
adc
adc
xor
push
stc
fstp
fcomps
ds
jge
push
and
cmpsl
cmpb
outsl
jnp
pop
cmpxchg
mov
mov
xor
outsl
xchg
mov
add
lock
push
mov
lods
mov
inc
push
dec
mov
scas
aas
gs
jo
mov
aam
hlt
or
das
mov
sub
in
xchg
gs
push
clc
cli
add
out
subl
sub
add
aas
cmpsl
mov
pop
lock
mov
pop
inc
add
pop
out
fwait
lock
cmp
mov
mov
mov
pop
pop
mov
push
xchg
xor
jbe
mov
adc
push
cwtl
mov
mov
mov
xchg
flds
inc
popa
test
sub
xchg
out
in
jo
rorl
flds
mov
outsb
hlt
imul
rolb
jecxz
push
jmp
mov
sub
or
pusha
in
pop
pop
sub
adc
add
pop
pop
dec
adc
test
rcll
sbb
cltd
inc
and
lret
pop
inc
cs
cmp
into
ret
mov
jmp
push
add
int3
test
add
xchg
or
loopne
add
testb
mov
loope
sti
xor
mov
adc
leave
les
add
insl
arpl
pop
das
shrl
jmp
fisubl
in
sbb
or
cwtl
mov
ja
xor
or
test
mov
fwait
insl
loop
std
fsubrl
outsb
mov
inc
cmp
inc
mov
aad
xchg
aaa
mov
sub
jo
js
adc
ja
xorl
in
push
or
adc
enter
add
pop
xchg
fs
mov
dec
lret
or
rcr
sbb
push
jecxz
in
in
mov
fwait
inc
push
mov
es
mov
mov
xor
lret
lret
xlat
jmp
enter
repnz
mov
cmp
lret
fdivl
repnz
out
in
daa
iret
pop
pop
arpl
repz
iret
mov
dec
pop
jne
lret
faddl
fwait
add
mov
decl
cmc
int3
jl
movsb
jns
lcall
inc
sub
mov
jg
imul
cmp
sub
in
adc
incb
lds
xchg
rcr
leave
pop
stos
add
or
in
sarb
fsub
mov
loopne
icebp
movsl
imul
cmpsl
cmp
xor
inc
inc
lcall
popa
pop
nop
mov
fnstenv
sub
jg
sub
cmc
cwtl
xlat
das
lcall
sub
jle
mov
rorl
in
cmp
test
pop
xchg
mov
dec
push
imul
pop
pop
dec
mov
pop
mov
push
lods
dec
icebp
inc
movsl
or
xchg
and
scas
push
cmp
sbb
and
mov
dec
xlat
mov
mov
jecxz
std
lretw
xchg
or
aas
pop
mov
int
int
push
lahf
mov
push
jle
xchg
outsb
push
lds
pop
xor
xor
jecxz
lahf
lea
dec
pop
loope
add
loope
xor
cmc
push
inc
xchg
xor
sub
jmp
pop
es
jnp
push
xchg
rcr
insb
into
inc
into
movsb
jae
jne
jne
xor
popa
addr16
in
rorb
iret
lret
nop
loope
mov
mov
mov
xor
mov
andl
xchg
mov
mov
loope
fwait
mov
scas
cltd
xchg
inc
xchg
adc
or
ja
add
fwait
inc
and
mov
lret
inc
xchg
faddl
xor
inc
or
pushf
push
mov
into
cmp
pop
enter
mov
and
movsb
and
lret
sub
xchg
fisttpl
lods
aaa
push
jle
xor
in
mov
cmpb
sub
popa
cld
int
aad
outsl
cli
jecxz
out
xchg
push
jge
hlt
int3
pop
lret
inc
mov
lods
ljmp
enter
pusha
lcall
and
subb
mov
ret
leave
call
sub
xchg
cmp
cld
fdivs
xchg
xchg
jb
scas
dec
data16
xor
mov
rolb
scas
mov
push
jbe
pop
pop
iret
xor
lea
das
xor
ss
mov
fwait
push
les
ror
xchg
push
loopne
subb
cmp
pop
sub
lret
lret
nop
jnp
subl
add
ljmp
push
xlat
decb
fcomps
sbbl
pop
add
roll
mov
and
mov
mov
int3
loope
and
in
and
jmp
data16
sahf
icebp
out
out
and
mov
add
adc
inc
dec
xchg
add
js
sbb
shrl
adc
outsl
mov
repz
xchg
cmp
xchg
inc
mov
pusha
out
cld
mov
mov
sbb
jg
push
add
xor
sahf
popa
mov
flds
icebp
jmp
es
imul
pop
lret
loopne
mov
dec
cmpsl
call
in
adcb
into
pop
aaa
imull
dec
mov
movsl
sub
popa
idivb
pop
aad
jbe
mov
dec
add
xchg
or
insl
repnz
loope
popa
mov
mov
cmc
jno
lcall
cltd
xrelease
jmp
add
stos
pushf
pop
fninit
scas
movsb
mov
bound
imull
aaa
daa
lret
out
inc
cmp
add
push
pop
les
outsb
inc
lock
mov
mov
daa
and
hlt
xchg
jne
xor
mov
dec
xchg
mov
pushf
ret
shll
jmp
jl
pop
test
jns
fs
fistpl
fsubrl
sahf
or
dec
clc
test
aad
mov
cmpsb
fs
pop
sar
leave
push
icebp
aad
int
add
cmc
pop
fldcw
fcmovne
sub
cltd
fxam
cmp
xchg
mov
pop
roll
sub
jne
imul
insb
out
cmpb
xor
rcrb
fs
int3
popl
or
push
fadds
ss
je
inc
cld
cmp
in
fmul
outsl
outsb
mov
jecxz
xchg
in
movsb
dec
scas
ds
imul
pop
int3
popf
imul
mov
push
push
clc
sbb
std
jmp
mov
pop
imul
mov
cmp
xor
fstp
les
inc
cmc
mov
mov
ss
repz
xchg
push
dec
test
cwtl
decb
das
mov
int3
xor
push
lock
int3
lcall
int3
sub
add
hlt
push
test
ret
fsubl
cmc
aad
cli
and
bound
cmp
mov
scas
imul
mov
incl
xchg
mov
dec
cmp
xlat
xchg
add
add
pop
inc
xchg
ffree
arpl
xor
push
inc
jp
lret
adc
pop
dec
packuswb
outsb
sbb
xchg
adc
cltd
dec
push
rorl
outsl
movsb
xchg
cmp
pushf
loopne
lret
mov
ficoms
xchg
fstpl
int3
ret
jno
xor
fwait
mov
loope
nop
mov
xchg
dec
rcr
mov
loopne
jmp
insb
mov
push
xchg
hlt
movsl
pop
scas
mov
push
bound
pop
sbb
and
mov
aad
fs
inc
push
fisttpll
mov
bswap
mov
adc
cmp
jl
pop
mov
roll
call
outsb
nop
mov
movsl
sbb
insl
lods
std
pusha
lret
dec
loop
push
movsb
and
and
lahf
push
jae
lahf
inc
stos
mov
test
gs
jb
mov
les
test
lock
mov
pop
xchg
xchg
out
ffreep
mov
in
and
mov
shr
cmp
dec
loop
pop
ja
hlt
and
inc
das
stos
mov
cld
push
cmp
enter
data16
loope
daa
dec
sbb
push
push
sarb
inc
das
adc
dec
sub
jge
jnp
int
pop
movsb
cmp
adcb
cmp
inc
lret
clc
mov
int3
pop
adc
fs
fnsave
or
in
cmp
sbb
fs
jge
or
jne
jecxz
adc
daa
in
xchg
adc
repz
mov
mov
into
cmp
inc
ljmp
mov
xchg
pop
in
cmpsb
jae
in
fldcw
cmpl
mov
loopne
xchg
push
and
add
mov
outsb
pop
mov
ja
movsl
fs
decb
movl
ror
push
jb
mov
in
pop
in
js
xchg
push
in
pop
int
cmpb
adc
dec
gs
std
inc
xchg
pushf
aam
push
adc
iret
inc
or
cwtl
add
std
clc
in
stos
lock
fs
pushf
pop
xor
icebp
push
int3
add
aam
cmp
mov
mov
adc
in
movsl
inc
cmp
arpl
imul
in
xor
sub
sti
and
pop
inc
std
and
lahf
and
lret
in
lret
inc
or
jp
pop
mov
out
cli
pop
add
repz
inc
add
adc
and
lods
mov
addr16
sbb
dec
int3
sub
imul
mov
push
inc
cmp
movsb
lcall
mov
sar
sbb
js
cmpsb
mov
loope
push
in
les
sub
cli
rcrl
adc
aaa
int
dec
pusha
int3
cmp
insb
idiv
mov
cmpsl
xorl
sub
cmp
arpl
fmuls
mov
xlat
mov
mov
inc
cmpsb
mov
lock
add
movzbl
inc
push
cmp
inc
add
pop
in
movsb
pop
cltd
jl
dec
adc
test
cmp
rcrb
xchg
les
jno
mov
push
cld
test
movsl
push
cmp
shll
outsl
adc
jmp
fisubrl
mov
shr
lahf
dec
dec
inc
lods
push
rcrl
jle
mov
inc
adc
lds
jno,pt
jo
jl
imul
ja
xchg
out
xchg
or
scas
insl
cmp
dec
cmpsb
movl
cmpsl
push
add
sbb
push
cltd
jge
lret
xchg
jae
xchg
test
dec
dec
mov
jae
inc
cmpxchg
adc
aaa
sbb
stos
into
stc
cli
fdivrs
std
sbb
add
mov
daa
into
mov
dec
rcll
mov
sbb
mov
aad
std
aaa
mov
int
sbb
mulb
mov
jl
repz
insl
in
jnp
scas
and
fmuls
cs
das
jbe
mov
mov
add
int3
cli
and
lods
add
shlb
xor
push
add
adc
inc
pop
mov
push
lcall
jmp
nop
and
into
mov
pusha
das
jle
movsl
mov
push
int
xor
xor
xor
mov
push
jno
ret
decb
fcoml
lret
in
icebp
xor
icebp
or
jno
push
and
scas
shll
scas
movsl
cmp
push
push
pop
push
sti
inc
jo
mov
sbb
add
dec
xor
jb
push
xchg
das
std
mov
mov
mov
test
lret
int
sti
data16
xchg
fs
in
push
jne
push
jmp
pop
fisttpl
and
add
jo
call
mov
mov
popa
icebp
fwait
inc
sub
arpl
or
cmpsb
sbb
sub
repnz
cmp
cwtl
sbb
mov
scas
xchg
repnz
cmp
dec
jg
or
mov
repnz
mov
jg
dec
into
popa
outsl
lock
mov
push
ret
xchg
pushf
in
sbb
jo
and
mov
leave
xchg
xchg
xchg
mov
sahf
jle
mov
mov
in
fnstcw
dec
or
fwait
fs
fcoml
sub
jle
sbb
ret
lahf
cld
fwait
orps
or
push
popf
sbb
push
or
or
adc
roll
mov
xor
jge
push
cmp
pop
cmpsb
loope
or
cmp
xchg
inc
rcr
inc
xor
cmp
mov
jle
pusha
loope
mov
add
push
xchg
pop
mov
loopne
fmull
nop
mov
push
mov
jecxz
push
jecxz
fisubrl
or
mov
std
dec
je
xchg
cmp
dec
lret
pop
arpl
pop
sbb
adc
xchg
fistpll
pop
frstor
rorb
mov
push
add
int
fwait
cmp
mov
mov
ss
shlb
test
repnz
ret
mov
xorl
mov
lock
in
mov
shrb
out
mov
xchg
mov
jp
push
or
xchg
popa
sbbb
xlat
nop
adc
mov
pop
inc
cli
leave
inc
sub
outsb
sbb
cmpsb
mov
aad
and
cmpsl
loopne
sub
popf
mov
negb
mov
dec
add
test
loop
inc
bound
mov
cltd
scas
outsb
sbb
int
dec
mov
sub
out
jnp
fistl
lods
fnstsw
dec
cmc
add
popa
xchg
andb
fstpl
or
push
clc
outsb
sub
add
loope
sarb
cmp
int3
xchg
xchg
mov
cmpsl
aaa
aaa
daa
int3
lea
mov
das
xor
dec
cmp
outsb
or
int3
cmpsl
fcmovne
ficompl
or
lds
push
xchg
pusha
push
mov
das
sbb
push
test
repz
sub
xor
jmp
mov
adc
push
ret
add
inc
xor
pop
and
fwait
add
fsub
iret
insl
fcompl
enter
and
fstpt
aad
leave
pop
mov
pop
fs
push
stc
fsubl
insb
adc
or
pop
sbb
add
push
gs
js
push
pop
nop
shr
mov
mov
sub
xor
or
xor
cmp
xchg
push
push
lret
inc
ss
cmp
pop
sub
mov
popa
or
dec
and
adc
je
xor
aam
cmc
test
out
xor
jecxz
out
xor
ljmp
inc
xor
inc
imul
or
hlt
ljmp
fs
ss
call
loopne
stc
push
sbb
rdpmc
mov
adc
cwtl
imul
add
sti
stos
rcr
push
or
test
aad
aaa
pusha
int3
inc
jmp
xchg
sub
push
inc
cmovns
popf
movsl
xchg
push
or
fildll
push
leave
sti
sub
pusha
and
push
adc
xchg
dec
inc
mov
pushf
pop
pop
jbe
sub
in
pushf
push
push
cmpsb
fnstcw
sbb
cwtl
ds
push
insl
dec
xchg
shl
iret
adc
mov
pusha
mov
stos
add
adc
pushf
inc
repnz
inc
jae
push
jecxz
movsl
into
xchg
cli
movups
in
xchg
arpl
add
shll
imul
outsl
lahf
xchg
pushf
cmp
in
push
mov
shrl
shl
pusha
fldl2t
mov
in
fistps
mov
mov
fs
popf
int
and
imul
rolb
sub
dec
lret
xor
and
fidivrl
add
jmp
or
sbb
or
sub
out
xchg
cld
cmc
test
outsb
mov
cmc
cmp
cmp
sub
mov
out
lea
push
rcrb
in
push
jmp
cmpb
cmp
test
mov
js
and
mov
fidivs
fimull
or
push
adc
scas
mov
fwait
aad
adc
dec
bound
push
repnz
cmp
xor
sub
out
mov
imull
adc
cmp
fcoml
jbe
daa
leave
or
or
cvtpi2ps
and
mov
push
adc
imul
nop
cmp
mov
pop
adc
sub
sbb
mov
jecxz
inc
ret
adcb
sbb
cmp
cmp
mov
inc
mov
ffreep
mov
imul
decb
lds
inc
inc
mov
adc
pusha
shll
call
jge
ss
into
jae
fldt
dec
add
arpl
jne
pop
sbb
cmp
pop
cmpsl
test
add
inc
mov
std
mov
xorl
adc
test
lret
into
xlat
sahf
mov
sub
and
jmp
sbb
or
pop
call
xor
sbb
dec
or
push
sbb
inc
mov
pop
jne
sub
cli
cmp
mov
movsl
stc
push
pop
xor
fidivrs
cmpsl
faddp
into
xor
jo
sub
cmc
out
mov
pop
push
and
loop
and
mov
ret
or
sub
cmpsl
xchg
outsl
fadds
lods
adc
pop
xchg
mov
cmp
mov
movaps
pop
push
mov
xchg
adc
call
push
jo
add
ja
jg
jbe
scas
or
mov
sub
ljmp
and
adc
push
jg
pusha
addr16
sbb
and
in
in
push
fs
imul
add
push
pop
das
mov
in
mov
and
and
sbb
adc
push
jmp
xchg
int
jo
das
pop
pop
out
xchg
mov
loopne
fsubrl
lds
aam
int3
out
in
push
fninit
and
repnz
ds
aad
std
jb
ss
shll
sub
cmp
or
pop
loope
pop
test
test
test
xor
imul
aas
int
mov
pop
xchg
push
dec
shr
les
lods
addr16
mov
int3
cmp
cmp
add
jbe
jno
xor
in
mov
mov
jae
rorl
fwait
leave
lahf
aam
cwtl
cltd
fcmovnbe
rcr
or
add
xlat
adc
pop
ja
pop
repnz
mov
movsb
push
jae
mov
mov
lret
ljmp
in
das
jne
or
pop
or
inc
jg
push
sbb
mov
mov
loop
jmp
roll
aas
mov
int3
xor
lret
sbb
in
cmpsl
jne
pop
push
shll
aad
cs
fsqrt
call
sbb
mov
stc
sub
fs
mov
mov
orl
lret
sbb
mov
pusha
bound
xlat
das
and
cmc
add
pop
in
pop
xchg
aad
push
jl
jno
add
adc
out
pushf
cmc
dec
dec
add
xor
adc
js
dec
pop
stc
or
cmp
and
fidivs
mov
push
xor
inc
xchg
push
inc
inc
sbb
andb
fcmovnbe
ret
fistpl
test
sbb
inc
pop
aaa
cmp
pop
xor
testl
adc
int3
movsb
repnz
sub
lods
pop
inc
adc
or
loop
inc
rolb
repnz
mov
fdivl
fcmove
or
jecxz
dec
pop
mov
cmpsl
xchg
imul
std
js
roll
outsl
cmpsl
adc
out
dec
cli
and
les
mov
pop
popa
adc
std
div
cmpsb
xchg
push
pop
dec
ret
push
add
inc
fstps
xlat
in
or
lea
insl
in
push
mov
xchg
xchg
cmp
sbb
push
scas
dec
call
xor
jmp
pop
loopne
push
sbb
sbb
int3
iret
add
pop
aad
outsb
sbb
and
cmp
imul
stc
cmc
in
sbbb
xor
je
aam
inc
pushf
fisttpl
fidivl
push
ljmp
or
and
mov
fsubrs
test
push
inc
das
dec
inc
xchg
push
hlt
xor
cwtl
mov
or
mov
incb
mov
push
or
sbb
jge
mov
sbbl
adc
xor
call
inc
cmp
mov
mov
cmp
mov
icebp
mov
or
jbe
test
fcomps
loope
sub
sti
mov
inc
test
mov
icebp
lahf
ret
call
xchg
sbb
ss
cmpsl
in
lods
xchg
data16
out
loopne
dec
aaa
mov
mov
and
bound
jle
in
mov
aaa
hlt
mulb
imul
cmp
insb
mov
cltd
gs
lret
mov
faddl
insl
sbb
sbb
imul
inc
mov
mov
scas
test
dec
call
jge
sbb
addr16
mov
in
into
fdivrl
push
fdivl
fsubp
inc
push
mov
cld
jno
mov
mov
outsl
int3
gs
mov
cmp
loope
xchg
cmp
cmp
pop
inc
fcoms
sar
sub
or
mov
or
xchg
leave
lods
in
enter
sbb
mov
inc
loope
out
jp
xorb
repz
imul
int
rorl
movsl
cltd
mov
add
and
mov
xchg
sub
sarb
push
add
out
loopne
loope
mov
adc
cltd
pop
dec
push
mov
cmpsl
cld
movsb
in
or
ja,pn
dec
jmp
jle
aaa
mov
cli
fbstp
jnp
jo
jmp
in
fists
jno
sahf
jecxz
fs
movsb
xchg
out
mov
sub
decb
xor
push
std
test
rorl
jbe
mov
cmp
adc
dec
xchg
adc
xchg
push
push
das
add
repnz
movsl
inc
or
int3
ficoml
iret
jl
add
xorb
int3
sub
xor
lahf
lret
movsl
loope
and
iret
hlt
and
mov
fiadds
cmpsb
aaa
xor
jne
adc
and
imul
sbb
mov
cmp
mov
push
adc
cmpsb
push
fildl
pop
jns
adcb
jmp
adc
inc
sbb
sub
dec
inc
fcmovnb
repnz
aad
push
cmp
mov
sub
aad
jbe
xchg
scas
and
lret
add
mov
inc
nop
or
and
subl
dec
cmpsl
xor
pusha
push
loope
push
jle
push
mov
movsl
ret
jmp
mov
test
sub
out
cmp
std
sub
add
ret
movl
aad
xchg
mov
mov
ret
cmc
add
mov
loopne
push
xor
xchg
mov
int
xlat
mov
idivl
in
inc
je
xchg
jg
les
pop
add
dec
ds
gs
inc
add
pop
xor
xorb
gs
xchg
shll
pushl
fs
mov
int
cltd
iret
rcl
jb
insb
mov
pop
sub
dec
andl
sub
cwtl
shr
pushf
lea
mov
pop
int3
mov
mov
sarb
mov
and
imul
aam
cmc
rcl
dec
gs
repz
lcall
pop
sbb
repnz
cmp
nop
inc
pop
push
add
orb
sbb
push
pop
mov
out
jmp
xor
dec
rorl
mov
lahf
gs
sti
push
nop
dec
ljmp
orl
fnsave
ret
stos
mov
mov
add
xlat
xchg
pop
imul
out
xchg
int
push
and
divl
in
rorb
inc
mov
and
pusha
shr
lcall
mov
add
std
pop
dec
jno
sbb
cmp
mov
dec
push
or
jecxz
movsl
pop
adc
pop
fidivrl
or
rorl
scas
fidivl
rcr
and
and
outsb
jmp
repnz
nop
sbb
push
mov
pushf
mov
xchg
pop
leave
gs
fstps
leave
movsl
addb
cmp
sub
loopne
sbb
movsl
add
xchg
and
pop
mov
dec
lahf
or
mov
movsb
stc
jo
out
fisttpll
cltd
xlat
jae
fwait
pop
popa
dec
orb
mov
mov
mov
mov
jo
mov
das
sbb
jmp
add
test
pop
add
lahf
jnp
arpl
push
push
xchg
sti
out
inc
loopne
aas
ret
fwait
cmp
inc
nop
or
dec
aad
insl
and
inc
xor
pop
test
in
shl
lret
lcall
shlb
dec
sbb
insl
jl
lret
int
or
aam
pop
pop
mov
lahf
pop
movsb
pop
inc
imul
sbb
jno
mov
cmp
les
pop
fwait
pop
leave
mov
or
call
fs
inc
je
cwtl
mov
psubw
iret
dec
repnz
dec
call
icebp
push
push
test
jmp
adc
xor
adc
in
sbb
daa
das
jle
outsl
lret
loope
rcll
xchg
push
stc
lods
aaa
rcrb
in
or
fld
insb
pop
mov
shll
stc
in
sub
cmp
mov
jbe
cltd
insb
iret
add
pop
in
mov
mov
sbb
pop
out
mov
mov
jno
arpl
in
sub
roll
fisttps
cmp
hlt
xchg
add
fidivs
pop
int
jo
test
add
mov
outsb
rcll
cwtl
mov
fs
fsubrs
mov
rcl
andl
push
sbb
mov
jae
jmp
fldenv
fninit
sbb
aas
mov
cmc
arpl
xor
fsubrl
outsb
cs
stos
in
jecxz
negb
push
add
das
xor
shr
loop
inc
pop
add
inc
adc
out
dec
in
arpl
test
push
pop
or
inc
inc
inc
mov
add
sbbb
sahf
iret
jno
and
out
dec
adc
push
ret
in
rcll
xchg
mov
lahf
push
inc
lods
imul
sub
into
ss
jns
cltd
sar
cmp
mov
ss
push
outsb
xchg
ror
in
cmp
xlat
cmpsb
test
sbb
addr16
jg
into
sbb
mov
aam
pop
jecxz
cwtl
mov
scas
sub
inc
jl
aam
cld
lea
sti
test
cmp
test
xor
mov
test
lcall
cmpsl
xchg
out
subl
pusha
adc
mov
shll
movsl
sahf
pop
xchg
fildl
push
inc
inc
icebp
jecxz
in
js
mov
xchg
iret
call
out
out
inc
js
dec
push
inc
sub
xchg
push
cltd
test
pop
adc
lahf
lock
pusha
or
jmp
rcrl
xor
test
inc
and
lret
imul
jbe
jp
add
arpl
data16
scas
push
in
movsl
mov
orb
iret
cmp
push
cmc
call
jae
dec
cs
and
mov
add
sub
dec
inc
sub
push
aaa
add
mov
or
lret
adc
sub
mov
fisubl
and
cmp
xchg
addr16
inc
push
imul
cmp
les
decl
inc
pop
and
shll
adc
js
dec
je
jg
xchg
ret
mov
jmp
leave
and
cwtl
scas
mov
sbb
inc
rcrl
scas
sub
xchg
idivb
cmp
inc
lds
popf
push
xor
loopne
jecxz
pop
adc
pop
sarl
fwait
inc
mov
or
scas
xorb
std
stc
mov
clc
sbb
jmp
mov
int3
repz
jecxz
bound
push
sarl
ror
fidivrl
xor
fwait
rcrb
test
int3
out
xchg
push
fstps
and
nop
jge
cmpsl
mov
lods
xchg
xor
cwtl
out
int
clc
xchg
add
mov
in
mov
lods
push
pop
int
mov
sub
mov
fbld
test
push
repnz
imulb
mov
fwait
jmp
xchg
mov
xchg
mov
lret
sub
mov
pushf
push
sub
inc
sub
dec
lret
fcmovb
jl
daa
mov
daa
inc
outsl
xor
les
adc
pop
lods
int
push
jno
pop
add
in
stos
mov
sbb
lcall
fs
and
icebp
bnd
sahf
push
push
popf
mov
or
xchg
push
mov
int
aad
sbb
cmpsl
and
adcb
bound
sub
shl
popf
jmp
push
cmp
ret
lock
xchg
push
sbb
add
mov
xor
xchg
fstpl
add
inc
imulb
popa
push
mov
ss
jo
xchg
ret
loopne
dec
sti
inc
dec
push
pop
out
xor
adc
mov
lods
push
jge
lcall
xchg
cmp
outsl
fisttps
int
dec
jae
repnz
inc
adc
xlat
movsl
std
or
add
in
repnz
add
in
push
mov
imul
add
add
pop
mov
cmp
push
out
das
loopne
fisubrl
mov
ret
add
inc
loopne
jno,pn
hlt
or
outsb
and
dec
les
pinsrw
pop
pop
xchg
shlb
dec
in
movsl
dec
pop
or
sub
lods
xlat
imul
mov
mov
mov
jmp
and
inc
pushf
and
bt
in
sub
mov
fistpll
inc
jl
and
sahf
aaa
or
jg
fs
adc
cmc
mov
sbb
rorl
sub
mov
cld
shl
mov
pop
jmp
aas
stc
mov
jle
or
sar
xor
aas
adc
scas
jmp
cmp
mov
test
mov
sbb
rcrb
mov
xchg
or
lahf
or
dec
lret
repnz
loope
mov
fsubp
pop
jge
mov
push
inc
sbb
shlb
pop
mov
fwait
push
cltd
pushf
in
sub
adcb
iret
mov
aaa
mov
xor
bound
push
jl
and
add
sub
fcomps
pop
xor
push
dec
cwtl
jae
pop
outsl
ss
push
lret
adc
jmp
or
rclb
add
xor
cmp
mov
xchg
dec
cmp
sub
idivb
rcr
add
into
dec
insb
pop
cmp
pop
jae
fisubl
aaa
cli
cmp
lea
dec
sbb
cwtl
mov
mov
rcr
inc
dec
popa
push
sahf
adc
and
jb
movsl
dec
push
test
sbb
popf
fdivl
sbb
pop
xor
or
add
sbb
jl,pn
jmp
mov
adc
dec
adc
popa
dec
ror
cmp
aad
test
ffree
iret
rclb
movsb
xchg
push
mov
repnz
insl
mov
jne
jmp
outsb
mov
push
push
pushf
sub
adc
add
inc
ret
or
adc
sbb
std
imul
push
pop
jp
fstp
xlat
psubsb
int3
sbb
ret
in
mov
hlt
add
dec
jbe
and
add
mov
mov
loop
add
shll
mov
les
cmc
movsb
aas
hlt
scas
mov
jecxz
mov
jecxz,pt
sbb
stc
inc
sub
mov
dec
fisubs
xchg
inc
fs
jmp
mov
movsl
insl
xchg
mov
add
lret
add
ljmp
out
pop
xchg
gs
cmp
call
aad
ret
loopne
pop
sbb
decb
stos
outsl
rcrl
sub
add
xor
mov
sbb
mov
sub
pop
lcall
insb
aad
or
xchg
popf
int
push
in
or
aad
loop
cmp
xchg
cmc
cmpsl
lods
aam
dec
xlat
fldl
addr16
mov
data16
inc
dec
imul
into
mov
mov
xor
push
push
add
sub
cld
add
sti
lods
imul
or
add
or
and
rorl
lret
mov
xor
sub
adc
add
or
or
fidivs
scas
mov
add
divb
lock
ficomps
out
sbb
fldt
sub
pop
inc
add
mov
mov
fists
jb
cmp
inc
xchg
fdivl
push
lret
lods
outsb
iret
daa
cmpb
scas
xchg
stc
daa
lods
les
out
and
sbb
lret
shlb
daa
add
ja
pop
repnz
sahf
xchg
pop
sub
insb
das
std
xlat
int3
shrl
cmc
test
iret
cld
lods
xlat
mov
arpl
fwait
jecxz
sub
mov
xor
rcrb
fdivr
movsb
pop
sbb
mov
add
mov
xlat
movsl
in
jle
adc
cmc
inc
inc
xchg
inc
xchg
adc
push
xchg
mov
pushf
shrl
mov
mov
xor
sbb
lods
mov
mov
mov
mov
setl
inc
add
mov
loop
lods
xchg
imul
mov
clc
cmp
jns
push
faddl
stc
decl
inc
inc
cmp
inc
xlat
mov
xor
out
adc
out
mov
gs
test
bound
sbb
cmp
das
sbb
es
imul
push
xor
and
and
or
das
adc
dec
gs
jmp
and
das
jnp
scas
mov
mov
jns
lret
mov
inc
aaa
xor
iret
imul
cmpsb
cmp
fisttpll
sub
cmpsl
lcall
lock
push
dec
jb
add
popf
aaa
das
inc
mov
xchg
fwait
inc
mov
sub
mov
push
cltd
cmp
aaa
popa
mov
out
sbb
sub
mov
pop
cmpsl
push
dec
pop
aaa
push
fsts
mov
cmpsl
addr16
mov
stc
hlt
lea
add
ljmp
xlat
into
repnz
inc
inc
mov
testl
jmp
das
scas
xchg
add
hlt
or
push
ret
and
daa
xor
mov
insb
sbb
arpl
pop
fmull
mov
cmp
sbb
and
sbb
in
xchg
rcr
sbb
jle
std
adc
mov
out
adc
dec
jne
cmp
out
dec
outsl
cltd
mulb
push
push
cwtl
cmpsl
xor
pop
fsubl
mov
lret
fwait
xchg
mov
cmp
mov
xlat
dec
imul
sub
sarb
push
jg
jecxz
dec
mov
ja
mov
xor
fldenv
jns
sub
nop
dec
mov
shrl
mov
xchg
fwait
adc
cmp
sbb
scas
mov
or
inc
xlat
out
dec
xchg
push
rorl
mov
xchg
fwait
sahf
jae
shll
pop
mov
jmp
mov
out
leave
dec
movsl
adc
mov
aaa
cs
popa
or
sub
je
cld
dec
cli
test
into
in
or
movq
mov
ja
dec
repnz
mov
aam
dec
test
jbe
int3
fcoms
loopne
inc
pop
cmp
pinsrw
xchg
imul
add
mov
mov
mov
mov
pop
xchg
cmc
jg
mov
cmp
push
xchg
test
int
sub
cmp
mov
inc
fisttpl
das
xor
mov
test
push
mov
mov
fistpl
je
flds
cmp
fsub
hlt
fs
adc
mov
pop
js
xchg
js
add
imull
mov
pushf
imul
jge
mov
xchg
loopne
cltd
adc
push
sub
subl
sbb
push
mov
inc
mov
mov
dec
lret
fistps
and
loop
cmp
pushf
sti
adc
aas
pop
pop
cmp
xor
adc
mull
loopne
lcall
popa
or
push
xchg
fxch
xchg
push
ss
scas
mov
std
sub
mov
push
mull
lahf
hlt
shlb
idiv
orl
sbb
mov
cmp
stc
mov
cmp
dec
aad
inc
sub
pop
jbe
repnz
loope
push
es
add
movsl
fidivrl
mov
lods
add
sub
dec
adc
mov
mov
lret
inc
adc
dec
sub
ljmp
and
mov
mov
insl
loopne
xlat
fsts
daa
fdivrs
cmp
loopne
neg
test
add
cmp
xchg
popa
ja
adc
push
sub
add
jp
leave
xchg
fbstp
decl
cmp
push
mov
cwtl
pop
les
gs
ljmp
lods
xchg
test
loop
push
xchg
aaa
mov
push
clc
loopne
fldt
lret
imul
pop
xchg
stc
insl
imul
lahf
ret
mov
mov
xchg
int3
rclb
or
stos
scas
in
rorb
call
notb
mov
xchg
ret
or
lds
lods
push
dec
andb
movsl
jb
loope
mov
ja
push
mov
or
push
insb
outsl
test
xor
inc
cli
xchg
clc
movsb
scas
xchg
and
fs
pop
mov
push
or
adc
pop
pop
test
stos
jno
lcall
pop
shrb
cld
cmp
sahf
pop
test
sbb
and
and
imul
adc
mov
mov
or
sahf
pop
push
das
xor
shll
adc
lret
jge
pop
mov
inc
imul
add
pop
testb
jmp
xchg
xchg
dec
cmp
inc
sbb
and
xchg
cmpsb
popa
xchg
mov
insl
cltd
rorl
mov
cmp
lret
push
shl
ljmp
repnz
lret
fcoml
mov
push
push
aaa
lds
pop
sbb
dec
insb
test
leave
data16
add
in
ret
enter
add
sahf
adc
out
lret
mov
fs
cmp
clc
pusha
mov
mov
mov
loop
pop
add
jbe
or
xchg
mov
pop
imul
faddl
mov
fwait
out
sti
bound
pop
push
lahf
in
movsl
and
jae
cmc
call
ret
pushf
pop
and
jge
and
push
dec
cmpsb
or
lret
xchg
mov
lahf
js
cmp
push
inc
rcrb
int3
sbb
fcmovnu
sub
shrl
xchg
mov
mov
pop
fnstenv
mov
loope
lret
clc
aaa
jmp
mov
push
lahf
xchg
sti
out
dec
ror
cmpsb
in
and
pop
add
std
xadd
mov
fldcw
int
push
lahf
dec
fwait
or
mov
dec
ja
xchg
xchg
shl
cwtl
rorb
rclb
imul
mov
in
jno
cmp
xor
mov
ss
jno
out
insl
iret
cmp
in
jbe
repnz
add
mov
in
fmull
ss
fcompl
xchg
sub
cmp
int3
sub
int3
push
sti
cmp
lcall
xor
test
adc
cmp
mov
jge
dec
inc
sbb
rcll
fidivs
jne
or
jbe
jge
int
add
aad
xchg
push
cmp
mov
popf
negl
cli
add
fistpll
ljmp
jecxz
test
fwait
call
mov
xchg
inc
in
xlat
mov
shll
and
push
iret
mov
sbb
cwtl
inc
loop
xchg
mov
ret
ret
cld
aad
jmp
or
dec
notb
sub
mov
cld
in
fucomp
jmp
imul
dec
add
fldcw
push
iret
fcoms
add
int
aaa
xlat
mov
inc
mov
inc
jmp
push
push
mov
repnz
hlt
jb
pop
ss
mov
das
or
mov
adc
pop
stc
cmc
repz
cli
repz
out
ljmp
aad
ss
pop
in
mov
mov
insl
jb
in
cmp
or
sti
sub
push
push
xlat
jo
punpckhdq
push
fsts
icebp
stc
add
adc
add
xor
lret
or
push
mov
mov
sbb
xchg
inc
call
flds
push
jbe
sbb
pop
roll
arpl
loopne
nop
fldl
sbb
pusha
and
jmp
pop
mov
mov
das
pop
pop
mov
arpl
mov
dec
aaa
inc
fdivrl
pop
int
jbe
mov
rcll
test
das
push
sub
popa
int3
pop
push
jp
mov
into
hlt
roll
lock
fs
jmp
cmp
jge
mov
and
pop
filds
xor
push
jbe
sti
aas
jp
jb
dec
repz
pusha
iret
push
lods
inc
ret
push
ret
add
shll
jmp
jge
arpl
nop
rcl
push
stc
ret
xor
and
sbb
sub
and
or
ret
xchg
cmp
xchg
stos
adc
popf
push
fwait
cs
push
dec
xor
mov
iret
xchg
cmp
sbb
fcom
stos
cld
xchg
and
iret
cmp
mov
cmp
loope
jecxz
cmc
lret
dec
rorl
mov
leave
test
push
sbb
fucomp
lret
aaa
dec
push
out
cmp
fldenv
and
rorl
fstpt
sub
jp
shll
xchg
imul
dec
sbb
lock
int3
sti
idivl
sarb
ror
pop
enter
and
dec
loop
or
sbb
and
xor
xlat
sub
adc
push
xchg
or
sar
pop
maskmovq
sbb
jne
cmp
rcl
add
pop
mov
js
mov
les
in
xor
sbb
dec
div
xor
add
sub
pop
cmpsl
repnz
lahf
loopne
xor
shll
neg
and
arpl
add
cwtl
cmp
fistl
mov
and
sbb
jmp
xor
aaa
push
inc
xchg
or
sbb
fldt
cmc
das
in
mov
mov
jg
cmp
jnp
gs
fwait
sbb
mov
adc
or
sub
rorl
inc
adc
xchg
inc
ret
icebp
xor
sbb
cmp
test
shr
cwtl
sbb
or
loope
sahf
cmp
aaa
imul
jo
mov
loope
fldcw
mov
fsubl
shll
fsts
xchg
std
imul
cmpb
cli
cmpsl
inc
adc
dec
fldenv
sbb
idivb
nop
fldcw
mov
dec
lcall
dec
mov
pop
mov
ljmp
cmp
pop
adc
and
pop
mov
and
icebp
mov
push
push
cmpsl
xchg
popa
push
jp
xor
fdivrs
push
pop
jmp
clc
int3
pop
xor
rorb
pop
mov
jle
and
pushf
add
in
cmp
mov
cmp
out
out
mov
dec
aas
cmp
cmp
pop
cmpsb
sub
movsl
and
sub
fnstsw
sbb
fstp
push
adc
clc
sar
scas
lods
inc
cmpsb
push
xchg
test
add
subb
pop
pop
push
scas
les
test
sub
mov
lret
xchg
xor
lret
pop
aas
sub
mov
in
test
sti
pop
mov
sbb
jmp
bound
push
test
push
sbb
add
mov
inc
adc
sarb
inc
mov
dec
fisttpll
pusha
mov
inc
push
add
fisttpll
jecxz
stc
rorb
jmp
int3
popf
int
les
add
jbe
mov
stos
push
push
das
mov
fldt
mov
pop
add
arpl
movsb
in
loopne
mov
cld
mov
jo
pop
lldt
xchg
sbb
loope
xchg
andl
sarb
xchg
xor
cmp
aas
cmp
add
adc
imul
movsl
in
nop
popf
leave
adc
int3
sbb
cmpsl
or
lcall
push
bound
jg
xchg
add
fimull
mov
repnz
pop
sbb
mov
sarb
outsb
jg
in
or
and
lret
ljmp
addb
ss
es
push
mov
or
vandps
and
lods
dec
lahf
imul
dec
sbb
or
fldl
or
mov
movsl
ljmp
neg
popa
fildl
mov
ret
xlat
mov
pop
movsb
push
jge
adc
sbb
sti
sbb
mov
xor
sbb
sbb
fwait
movsl
in
mov
loopne
shlb
ljmp
sar
push
jmp
ficomps
mov
pushf
repz
out
ljmp
dec
rcll
mov
cmpsb
in
mull
movsl
dec
sbb
imul
push
jmp
jmp
test
stos
dec
cmpsl
sarl
rcrb
in
jnp
push
push
fcmovnb
add
pop
pop
jecxz
into
add
and
xor
fdivr
roll
lret
lods
mov
test
inc
sbb
jg
or
fst
pop
pop
sarb
jp
mov
gs
mov
cltd
mov
mov
adc
inc
cmp
push
cmpsb
inc
cmp
jle
jae
inc
sbb
cmpb
push
adcb
cmp
cld
mov
mov
aaa
stos
mov
or
arpl
push
daa
rorb
fiadds
jl
pop
add
mov
out
inc
cmp
fistl
outsl
dec
sbb
sub
jnp
in
fnstenv
repnz
mov
sbb
cli
repz
pop
and
ds
push
fstpl
or
xor
lcall
aas
adc
stos
push
loopne
nop
adc
cmp
lcall
adc
out
cs
mov
rcrl
pop
and
push
and
and
and
jp
aad
or
pusha
cmc
xor
outsl
jmp
movsl
int3
ret
jmp
test
int
mov
sbb
shlb
bts
data16
inc
jp
mov
addr16
mov
sub
pop
pop
push
into
push
sub
lds
push
cld
sbb
jbe
iret
cmp
in
dec
xor
mov
fs
jbe
mov
cmpsl
fstps
mov
stos
push
lods
lcall
jmp
loope
sti
fpatan
mov
int
cmc
inc
fs
cmc
push
or
and
cld
cmp
push
jmp
jmp
cmp
sbb
cmc
aaa
xor
loope
xchg
ficomps
push
inc
repnz
mov
fwait
mov
fisttps
pop
and
inc
lock
loope
pop
jmp
adc
xchg
addr16
mov
into
mov
pusha
stos
in
mov
jnp
call
and
dec
sbb
mov
add
jbe
jns
jle
movsl
jno
fidivrl
and
xor
iret
adc
xor
sbb
inc
adc
addr16
out
pop
pop
aad
cmp
nop
or
popf
mov
pushf
push
dec
es
cmp
hlt
cmp
cltd
push
pop
std
lret
dec
xor
popf
fs
add
mov
repz
inc
jl
in
imul
imul
xor
imul
imul
mov
push
mov
xchg
addr16
outsl
jmp
mov
sub
inc
out
xchg
pop
dec
inc
mov
jle
inc
jmp
sbb
adc
pop
push
or
sahf
imul
or
adc
inc
adc
fidivrs
mov
cli
xor
cmp
mov
das
sbb
addr16
out
and
pop
popf
sahf
adc
nop
movsb
out
inc
lahf
repnz
inc
xchg
cmp
cmc
jne
mov
pop
dec
pushf
cmp
add
xor
mov
push
or
mov
mov
sbb
mov
and
add
shll
popf
rolb
out
bound
or
fldl
bswap
pop
lret
mov
mov
pusha
xor
insb
data16
and
cwtl
sahf
int
pop
dec
adc
mov
cmp
in
or
int3
fnstsw
test
rcrb
mov
mov
scas
mov
cmc
cs
xchg
clc
mov
mov
jp
or
jmp
dec
mov
add
outsb
ret
and
std
mov
add
repnz
push
in
loope
repz
jae
inc
mov
sub
pop
or
mov
xchg
adc
leave
adc
xchg
fdivr
fistpll
cwtl
jo
pop
rcll
lret
xor
add
pop
in
insl
in
aaa
add
stos
cwtl
sbb
loope
mov
stc
cmp
ss
cmp
mov
mov
mov
sub
enter
shr
shll
inc
sbb
and
mov
pop
in
ja
xlat
stos
pop
inc
sar
or
add
int
stos
xor
sbb
scas
cmp
mov
add
sbb
xchg
filds
xor
xchg
mov
fwait
lods
in
scas
add
lods
lahf
inc
in
cmp
out
data16
add
clc
fwait
jne,pn
mov
mov
subb
icebp
or
loopne
jecxz
sahf
call
test
fsubrl
loopne
std
sbb
movsl
sbbb
pop
fadd
sbb
jnp
imul
lret
jp
out
stc
or
sub
or
sbb
inc
cltd
cmpsl
fldcw
rcrb
jge
inc
cmp
jle
sarb
pusha
or
aas
sti
sub
test
push
into
inc
icebp
lods
insl
jne
cli
add
fs
sub
in
popf
xchg
mov
pop
and
mov
subb
mov
fdivr
push
int
das
mov
popa
movsl
xchg
js
sti
or
xlat
nop
lahf
ja
into
add
mov
mov
dec
loope
sub
sub
ja
xchg
xor
jecxz
les
xor
mov
mov
mov
jmp
dec
jne
mov
fwait
and
adc
cltd
int3
xor
sbb
arpl
std
iret
popa
imul
cmc
push
push
lock
lock
adc
jecxz
push
mov
sti
push
xchg
add
xlat
loop
jae
jl
call
pushf
mov
negl
jae
rcrl
xlat
or
pusha
push
loopne
loop
push
pushf
cld
sbb
dec
or
mov
push
lahf
sbb
inc
mov
popl
inc
adc
movsl
insl
out
fidivrs
xchg
scas
icebp
in
mov
ja
add
push
test
xor
inc
mov
leave
push
sbb
mov
test
mov
shl
int3
nop
fsin
mov
push
pop
and
xor
push
sub
xchg
cli
mov
orl
mov
into
jo
inc
add
addr16
xchg
insb
outsb
pop
insb
lahf
aad
dec
call
rorl
outsb
mov
cmpsl
sub
les
aaa
ss
in
xor
ficoml
mov
inc
mov
pop
cmp
fnsave
pop
xchg
cmp
cwtl
push
pop
arpl
pop
push
adc
repz
insb
lock
dec
into
das
sti
cld
roll
sub
cmp
lock
adc
mov
xchg
jmp
inc
or
cli
insb
cmpsb
cmpsl
arpl
roll
imul
in
jmp
sub
jns
mov
rcrl
sub
jo
fwait
sub
lret
adc
add
pop
in
adc
lods
inc
push
mov
adc
popf
push
sbb
loop
xchg
adc
xor
dec
xchg
popf
add
arpl
adc
sbb
inc
pop
add
sub
stos
sahf
subl
mov
int
std
clc
bound
sarb
scas
bound
bnd
add
out
das
negl
incl
jecxz
and
int3
divl
in
mov
popa
loope
movsl
cmp
repz
pop
mov
aad
jg
mov
movsl
loop
arpl
in
sub
xchg
popa
jmp
push
mov
add
loop
dec
orb
stc
lea
les
jge
filds
jecxz
imul
sub
pop
in
jbe
sub
outsl
add
ljmp
in
je
repnz
fstps
fdiv
add
call
jecxz
sub
xchg
inc
repz
stos
es
lods
in
repnz
sub
movsl
push
jnp
mov
or
xchg
js
clc
xor
mov
popf
and
jns
add
lret
dec
cmp
fidivl
fnstenv
cld
lret
mov
jb
sub
rcrl
inc
push
cwtl
popa
push
jl,pt
stc
xor
fxch
fs
call
xchg
mov
call
cmp
in
jb
lcall
ret
faddl
xorl
mov
xor
xor
std
stos
adc
shlb
in
test
fnstsw
dec
int3
push
jbe
push
pop
inc
in
popf
dec
jbe
or
movsb
xchg
xor
cs
and
movsb
sbb
pop
jecxz
movsl
fldenv
int3
xor
cmp
pop
mov
pop
cmp
xor
ret
sbb
nop
pop
es
in
pop
push
arpl
sbb
loop
rclb
negb
sbb
pop
int3
hlt
sarb
mov
jbe
mov
loopne
bound
lea
xlat
std
xlat
sti
lahf
cltd
mov
test
mov
inc
add
fstpl
fxch
or
popa
fwait
lods
in
fsubs
gs
mov
in
pop
in
frstor
xchg
fs
aam
rcrb
leave
adc
je
aam
sbb
push
mov
test
gs
dec
pop
cmc
cmp
and
out
push
mov
pop
stos
addr16
xchg
test
dec
mov
rcrl
fistpll
sub
fldenv
fstpl
test
push
aad
fstps
or
lret
stc
lahf
inc
dec
into
lds
pusha
aad
fs
fs
rolb
xchg
jbe
mov
imul
pop
in
inc
stos
lcall
lds
or
cld
popa
xchg
push
iret
pop
movsl
int
push
sub
insb
xchg
iret
cmpsb
stos
mov
pop
xor
mov
sti
pop
incl
std
xor
fimuls
cmp
out
cmp
in
pop
and
cmpsl
aaa
shrl
push
xor
adc
push
add
jb
aam
xchg
arpl
jbe
movsl
cmp
push
fiaddl
mov
jmp
mov
jo
mov
out
mov
jbe
lcall
enter
pop
out
push
faddp
shrl
mov
adc
sub
cmp
sbb
in
fs
rcrb
fdivl
jl
push
repnz
inc
ret
jecxz
xchg
fnstcw
loopne
xor
sbb
xchg
xor
jnp
xchg
push
leave
mov
daa
sub
in
test
mov
mov
cld
sbb
pusha
imul
jae
arpl
lcall
and
mov
mov
std
jo
jmp
lock
inc
jg
push
ret
fistpll
ljmp
mov
or
movsb
and
xchg
lcall
sub
imul
std
int3
outsb
je
mov
pop
inc
xchg
pop
push
out
jo
lcall
sti
arpl
inc
xchg
push
sub
ljmp
ss
sub
popl
mov
jle
aad
fcoml
leave
out
xor
hlt
js
fstpt
mov
int
ret
push
cmc
push
shll
jae
jl
jo
cmpsl
mov
inc
in
or
bound
push
int
addr16
adc
repz
in
mov
dec
les
mov
in
es
adc
fwait
sub
jle
mov
clc
jo
pushf
lret
mov
push
fs
hlt
xchg
cmp
in
gs
int
mov
cmc
lds
sbb
push
adc
ss
das
ss
jmp
pop
xchg
lcall
xchg
cs
stos
das
pop
dec
lret
leave
ficoms
pushf
pop
ja
fldt
fwait
rcrl
fs
iret
add
jle
sarb
xchg
cld
rorl
jae
js
cmp
cli
push
rcr
imul
imul
pop
std
cmp
popa
rcrb
xor
xor
testl
push
jns
shrl
addr16
push
fcoms
sub
les
sarl
dec
mov
into
cmc
daa
aad
inc
movsl
push
cmc
scas
add
add
in
push
hlt
pop
ds
lret
and
or
push
mov
pop
cli
xchg
in
mov
in
cmpsl
cltd
dec
cs
rolb
js
or
inc
inc
sahf
outsb
cmpsb
fldcw
pop
mov
arpl
adc
mov
xchg
mov
cli
jmp
in
je
mov
in
xchg
mov
outsb
popa
aaa
sub
jb
leave
outsb
sub
push
add
jbe
sub
rolb
aam
inc
adc
sarb
lret
lret
ja
imul
stc
in
std
sbb
sub
pop
push
xor
aam
int3
test
cmpsb
jge
jmp
addb
inc
cli
out
pop
add
jmp
out
popa
pop
mov
mov
out
mov
push
and
push
scas
jno
mov
cmp
pop
jbe
and
cld
mov
fildl
lret
xchg
inc
xor
xchg
outsb
mov
cmpb
out
push
xor
inc
js
push
sahf
in
jno
dec
test
jno
sub
clc
cmpsl
dec
mov
std
rcll
push
sbb
sbb
mov
leave
mov
bound
std
jl
gs
xor
inc
dec
fadds
insl
xlat
add
inc
test
out
in
pushf
lea
insb
lcall
dec
fcoms
sahf
fidivrl
cmp
mov
push
das
imul
cmpsb
pop
leave
sbb
add
inc
pop
icebp
data16
mov
xor
and
popa
jg
cmp
xchg
add
xchg
out
cmp
test
nop
insb
test
push
pusha
jg
dec
xchg
sbb
ljmp
hlt
test
movsl
jl
mov
jecxz
mov
mov
aaa
xchg
loope
add
push
aaa
imul
test
sbb
popa
pop
mov
das
inc
push
test
mov
cmp
jmp
xchg
inc
stos
add
int
loop
push
pop
mov
ret
inc
outsb
adc
mov
jb
in
and
inc
aad
add
pop
leave
xchg
fisubl
imul
popa
data16
push
inc
inc
lds
cwtl
int3
cltd
lret
xor
cmc
in
stos
fidivl
shl
push
sbb
push
in
xchg
jnp
movsl
test
inc
push
out
inc
inc
mov
mov
cmp
or
std
popa
lret
jge
add
fmull
jb
ret
lcall
push
lcall
inc
frstor
repnz
gs
add
pop
mov
mov
xchg
frstor
pop
or
data16
inc
loope
push
imul
push
xor
jle
jbe
stc
push
mov
pop
aad
movsl
mov
es
mov
pop
xchg
in
inc
cld
pop
data16
andl
pop
testl
mov
out
mov
mov
xor
in
rcl
xchg
sub
mov
aad
xlat
je
pushf
and
mov
adc
mov
into
cld
mov
inc
mov
xchg
ret
fists
jmp
sub
repz
ss
es
ret
push
xor
jbe
sub
jge
push
sarl
adc
cmpsb
test
cmp
mov
and
pop
push
mov
xor
std
cmp
xor
shl
pop
insb
imul
stos
hlt
mov
loop
inc
pop
in
xchg
cwtl
dec
imul
dec
hlt
in
insb
mov
es
cmp
pusha
mov
aaa
shrl
int3
in
into
idiv
stos
fs
inc
je
hlt
mov
inc
mov
adc
jne
popf
leave
push
movsl
xor
lods
shr
or
into
out
and
or
jmp
adc
push
in
leave
loopne
in
fmul
fstpl
sbb
not
ficomps
push
push
out
xchg
mov
mov
mov
jae
fdivrp
mov
push
cmp
mov
imul
mov
mov
flds
jp
inc
ljmp
xchg
movsb
cmp
lahf
repz
inc
xchg
jmp
sbb
xchg
sub
aaa
stc
mov
push
in
je
pop
ja
pop
sbb
and
imul
ret
mov
lea
je
ret
in
ss
mov
xchg
imul
inc
adc
repz
push
inc
enter
adc
ja
jle
jae
mov
das
lcall
xchg
hlt
push
in
cwtl
rcr
sub
lock
pop
xchg
jp
cmp
xchg
int
inc
in
mov
sar
sub
movsl
push
orl
jbe
lcall
adc
xchg
cmpsl
or
add
add
jp
xor
jnp
mov
stos
push
jnp
imul
dec
inc
push
pop
in
mov
jae,pn
xchg
pop
popa
mov
adc
out
pop
stc
jne
xchg
fs
sub
out
add
cmc
pop
js
fbld
cmp
pop
lods
sub
dec
out
fistpll
pop
fldt
test
cwtl
mov
mov
lcall
jb
shlb
sbb
jmp
aas
mov
fdivrs
test
mov
mov
pushf
lahf
gs
add
fisttpll
in
lcall
add
mov
or
sti
rcr
adc
push
popa
push
mov
dec
mov
xor
fs
leave
add
xchg
jns
mov
bound
out
dec
shll
shll
in
sub
jae
ret
repz
hlt
test
pop
test
fwait
shr
xchg
in
sub
pop
adc
adc
sbb
adcl
jae
mov
sbb
xchg
aaa
mov
dec
sub
xchg
push
test
and
or
add
jmp
fstpl
aam
decl
addr16
dec
push
mov
inc
cli
push
icebp
xchg
cli
pusha
pop
in
fcompl
xchg
sub
xor
loopne
cwtl
add
inc
fmuls
cmpsl
in
dec
shr
das
daa
jg
test
mov
pushf
scas
daa
out
jmp
movsl
jno
fstps
inc
mov
mov
add
movsl
iret
insl
cmpsb
arpl
xlat
pop
xor
sub
dec
mov
inc
leave
movsb
mov
iret
rcll
sti
add
fisttpl
fsubs
aad
mov
add
loope
mov
lret
das
cmc
xchg
decl
into
iret
sub
jnp
ljmp
sbb
movsl
mov
popa
sti
sahf
mov
es
loopne
shl
sarl
dec
int3
mov
mov
movsl
inc
add
mov
push
lahf
or
cmp
jge
or
add
in
in
xor
scas
imul
push
jp
fimuls
adc
push
push
sbb
lret
push
in
pop
test
mov
dec
mov
sbb
sub
iret
sub
aad
jb
hlt
nop
sub
into
inc
andl
pop
inc
and
iret
hlt
js
or
pop
mov
inc
imul
aad
add
xor
inc
mov
xchg
xchg
stos
xchg
mov
imull
insb
jg
dec
ss
popl
sbb
loopne
push
sbb
fwait
iret
cmp
dec
into
xchg
outsl
jge
pop
fsubr
test
addl
outsb
in
xchg
inc
cmp
mov
fs
bswap
add
mov
roll
aad
mov
insl
mov
or
jae
lds
push
dec
jp
repnz
movsl
mov
push
fimuls
and
loopne
fucomp
and
jmp
push
push
out
cmc
xchg
mov
mov
adc
adc
in
xchg
dec
decb
out
test
sbb
fnsave
xor
cltd
xchg
hlt
and
mov
nop
xlat
popf
ficompl
jo
mov
and
mov
rcl
or
std
jns
pop
lret
adc
lret
jne
pop
or
cmc
jmp
rolb
sti
sbb
scas
jno
popf
mov
stos
pop
sbb
xchg
das
mov
push
cmpsb
fwait
pop
loop
push
pushf
jl
xor
das
xor
test
loop
mov
and
pushf
shlb
push
or
adc
sbb
fnstenv
cmpsl
add
lea
mov
sbb
inc
or
pop
inc
loop
dec
fs
dec
arpl
outsb
jb
xor
loopne
in
inc
leave
pop
idivl
jmp
cmpsl
leave
jmp
dec
sbb
into
pop
leave
cmpsl
pop
stc
mov
cmp
mov
push
popf
xor
leave
mov
mov
fadd
jl
fistps
push
popf
nop
add
jge
xchg
rorw
pushf
mov
jae
adc
lret
push
xor
addl
cmp
popf
aam
add
mov
jae
adcb
mov
arpl
iret
mov
xor
clc
mov
push
lahf
bound
movsb
ss
push
sti
pop
shrl
or
adc
negl
out
loop
bound
push
das
inc
lret
cwtl
xchg
cs
and
add
imul
or
sbb
and
frstor
push
mov
clc
cltd
xchg
fs
scas
sti
call
xchg
fimuls
dec
and
shrl
pop
sub
scas
mov
sbb
cwtl
mov
xchg
cmp
add
std
outsl
inc
pop
jns
inc
imul
jp
inc
push
cmpsb
repnz
test
nop
aaa
jbe
ljmp
or
cld
cmc
hlt
xorb
sbb
inc
sahf
add
fsubrs
loope
leave
shr
in
xor
les
or
jbe
out
push
xor
push
push
xor
test
inc
sbb
es
hlt
lahf
and
int3
and
jns
loop
data16
pop
sbb
sti
jne
pop
inc
lea
cltd
push
pop
push
push
stc
push
ja
lahf
dec
cli
addb
filds
daa
pop
add
lock
pushl
rorb
xor
dec
insl
push
in
test
mov
mov
test
sbb
mov
adc
fwait
and
mov
popf
pop
rclb
or
jmp
adc
jbe
mov
imul
inc
out
mov
pushf
insb
mov
mov
out
rcrb
dec
nop
test
xchg
cwtl
fisubrs
pop
inc
sarl
ror
push
fimull
xchg
mov
sbb
hlt
incl
xor
push
cmp
pop
mov
aam
sub
loope
mov
cmp
fsub
xchg
xor
leave
xchg
pop
orb
dec
arpl
xchg
test
xlat
dec
xchg
jo
aas
jo
and
roll
sub
rcll
popa
addl
test
pop
sarl
imul
cmp
pop
rcr
sbb
xor
jnp
and
pusha
sub
push
aaa
mov
fs
fwait
inc
scas
jle
fs
icebp
adc
aam
xchg
bound
cmp
push
std
push
mov
pusha
shr
mov
push
sbb
aaa
in
aam
or
or
push
and
imul
mov
add
mov
dec
cmp
sbb
ja
std
pop
add
in
jp
and
popa
bound
shll
mov
pop
test
popa
dec
leave
cmp
dec
mov
dec
push
sbb
lock
into
aad
sbb
js
mov
nop
data16
inc
xchg
cmp
adc
movsl
call
ficoms
sub
pop
hlt
icebp
xor
xchg
adc
in
cmp
fcompl
int
xor
int3
add
int3
movsl
cmpsl
mov
std
sbb
inc
shl
jbe
xchg
cltd
adc
test
shl
in
xor
xor
mov
add
pop
push
cli
inc
jp
loop
lock
jl
or
fwait
push
imul
lea
xchg
sahf
sbb
sbb
push
fdivs
mov
push
ret
dec
xor
sub
inc
sub
mov
jg
sti
clc
repnz
mov
dec
enter
and
fmul
rol
fdivrs
in
push
pusha
mov
jbe
int3
xchg
imul
mov
dec
mov
idiv
rcrb
aam
lret
std
dec
pop
cmpsl
mov
push
sahf
jge
out
sub
adc
jge
cli
pop
xlat
test
out
jecxz
test
imul
adc
jne
sbb
jbe
shl
mov
into
mov
lds
push
in
or
loope
mov
dec
aad
je
shrl
xchg
flds
shll
in
dec
out
ja
dec
pop
in
lret
jns
inc
lock
or
cmp
and
adc
mov
outsb
or
mov
imul
add
roll
popf
out
or
sub
and
cli
inc
mov
mov
sbb
mov
add
or
out
adc
or
pop
aad
mov
mov
and
int3
mov
jo
aad
xor
ret
test
push
stc
adc
sbb
mov
sbb
or
lock
add
mov
sub
icebp
pop
roll
insl
out
xchg
test
fpatan
add
sbb
stos
xor
arpl
pop
and
cmp
cmp
lods
inc
cmp
adc
jg
out
scas
push
stos
xor
shll
xchg
or
mov
outsb
das
hlt
or
lods
popa
xor
and
or
mov
pop
mov
movl
jbe
popa
sarb
imul
imul
cmpsl
lcall
std
jb
subl
in
sub
jb
adc
arpl
lcall
cmp
or
mov
out
jmp
xabort
arpl
je
negb
std
int3
dec
insl
xchg
cmp
out
mov
das
pop
leave
faddl
mov
mov
stc
xchg
jns
lcall
lods
inc
mov
push
shrb
mov
mov
les
movsb
repnz
cmp
push
fmuls
mov
sub
test
std
loope
insl
add
xchg
mov
mov
push
icebp
add
or
insl
outsb
adc
call
mov
les
nop
scas
push
push
xchg
pushf
add
call
in
pop
xchg
nop
leave
and
pop
cmp
dec
xor
loope
in
rorl
test
enter
dec
jmp
cmp
inc
test
pop
repz
movd
sub
dec
iret
popf
pop
dec
dec
mov
pop
je
pushf
push
bound
sub
inc
cmp
repnz
jnp
mov
cmp
nop
fstpl
inc
imul
cs
push
in
lret
jle
jg
imul
insb
negl
jb
jl
cmp
push
mov
mov
xor
lret
inc
jo
cmp
imul
leave
rorl
pop
or
popf
mov
std
pushf
mov
jns
stc
add
mov
leave
fidivl
test
mov
hlt
pop
movsl
cmpsl
loop
pop
sti
sbb
popa
cld
adc
rcl
xor
xor
xchg
mov
inc
xchg
enter
arpl
pusha
mov
in
push
movsl
mov
mov
test
sbb
mov
jns
cs
and
popf
mov
dec
jno
cmp
mov
jl
lods
mov
mov
or
cmp
hlt
dec
sti
into
mov
ss
fists
cmpb
xchg
imul
mov
loop
mov
inc
imul
add
add
les
ss
dec
pop
xor
sti
dec
cs
push
add
dec
fnstsw
call
addr16
in
addr16
out
enter
xchg
int
add
lods
mov
enter
inc
mov
lds
pop
cmp
vpcmov
push
lret
fsubrl
xor
cwtl
fldcw
mov
mov
mov
icebp
loopne
dec
lahf
int
and
adc
arpl
iret
test
mov
pop
lret
xor
push
in
push
push
push
sub
pusha
imul
mov
jns
jae
test
xor
movsb
or
mov
adc
pop
cmp
call
jb
scas
jns
fwait
pop
pop
or
in
adc
and
andl
in
add
cmpsl
add
or
cwtl
in
jne
imul
lea
pop
cmp
cmpsl
jle
repz
jg
rol
xchg
cmp
fdivrs
or
mov
add
mov
call
shll
pop
imul
es
jg
in
cmp
test
sbb
add
add
nop
add
cmp
sbb
enter
shrl
dec
in
fldcw
loope
push
jnp
cmp
sti
fstl
sub
pop
aad
sbb
test
lret
adc
test
inc
les
sub
mov
ja
mov
inc
aaa
mov
add
sub
je
rcrl
cmp
jl
mov
fstpl
xor
ffree
test
mov
jl
cmp
out
push
and
call
xor
adc
add
cmp
out
fildll
mov
pop
push
mul
outsb
data16
and
cmc
roll
lea
sahf
adc
repnz
jge
daa
cmpsb
rcrb
lcall
das
dec
fcmovbe
push
repnz
pop
xchg
in
jne
and
sbb
fnsave
dec
cmp
push
in
movsb
dec
je
add
lea
lods
lret
mov
mov
pop
lods
jge
popa
ret
fisttps
scas
or
int3
xchg
push
jp
push
xor
cmp
outsl
jge
stos
push
sar
sbb
nop
test
data16
shr
and
xchg
jle
mov
xchg
push
fldenv
fcoml
jecxz
repnz
js
mov
xchg
movsl
fistl
out
in
repz
cwtl
sahf
test
adc
sqrtps
inc
jl
fadds
xchg
jb
push
xor
jno
aam
mov
xchg
psrad
jae
pop
add
pop
fs
mov
popa
add
insl
push
movsb
shll
mov
adc
in
in
add
and
fimuls
jo
pop
inc
xor
add
jbe
or
jbe
stc
pusha
xchg
aad
jmp
pop
clc
pop
and
dec
shlb
jno
lock
sub
add
loop
cld
leave
popf
popf
pop
leave
fidivrl
xchg
cmp
xor
and
xchg
lret
or
adc
mov
and
inc
ret
fcomi
sbb
imul
pop
cmp
push
andl
enter
cmp
dec
je
fucom
arpl
dec
in
push
fildl
and
cmpsl
mov
faddp
and
dec
in
mov
bound
mov
jecxz
dec
sbb
pop
frstor
inc
in
mov
ljmp
adc
idivl
test
dec
sbb
insb
nop
repz
repnz
jle
std
addl
pop
jp
imul
movsl
pop
inc
repnz
cmp
and
lock
fs
pushl
aaa
mov
dec
out
push
lret
mov
sbb
shrl
mov
sti
and
push
sbb
inc
repz
nop
inc
dec
adc
mov
inc
xchg
xchg
jle
xchg
cmp
pop
push
mov
dec
mov
aaa
out
sti
sar
jbe
and
ja
add
add
mov
lret
fs
mov
push
mov
addr16
fst
dec
fdivl
mov
sub
cmp
sbb
add
lretw
mov
push
jno
stos
aad
lcall
pop
mov
xchg
addr16
inc
xlat
dec
aam
push
pop
fldcw
sub
in
inc
sub
jne
mov
incb
lret
dec
add
xchg
fsubp
xor
add
dec
adc
mov
dec
add
insl
sbb
push
pop
inc
aaa
jg
mov
add
dec
mov
pop
dec
jb
gs
jle
add
fucomi
shl
lds
loopne
mov
xor
push
sbb
jb
dec
andb
daa
lock
jno
and
push
sbbb
mov
outsl
addl
push
icebp
mov
or
in
and
loope
push
mov
pop
sbb
aas
mov
call
push
inc
flds
out
pop
das
pop
jle
sbb
ja
fwait
imul
mov
inc
orb
and
test
clc
in
mov
dec
xchg
adc
xchg
sub
fsub
sbb
roll
scas
inc
sbb
pop
sbb
ss
test
pop
pop
pop
mov
adcb
push
loope
pop
lds
jge
or
dec
scas
inc
aad
in
mov
gs
jle
fcoms
push
pop
das
or
fstpl
lcall
xchg
inc
and
data16
in
cld
jmp
jg
test
in
out
roll
mov
cld
mov
pop
xor
repnz
mov
add
or
or
shl
adc
inc
mov
outsb
fistl
inc
imul
aaa
and
pop
or
inc
mov
out
mov
mov
mov
daa
cmp
gs
fldl
sub
fstp
add
or
sbb
fldenv
mov
dec
pusha
popf
jecxz
fstpl
mov
stc
mov
lods
add
hlt
shr
inc
fwait
sti
xchg
xchg
mul
int
mov
add
jno
cwtl
in
mov
aad
movsl
test
iret
outsl
inc
faddl
out
mov
lahf
mov
gs
push
sbb
inc
inc
pop
ja
pop
fisubl
pop
mov
mov
fstps
and
in
enter
pop
push
mov
ret
mov
pop
jmp
pushf
shrl
loop
push
xor
jge
mov
push
jmp
xchg
mov
sar
lcall
das
aam
fabs
iret
sbb
cmpsb
add
dec
jns
adc
add
cli
aaa
or
icebp
xor
push
xor
int
outsl
movsb
hlt
fdivs
or
or
cmp
sti
das
pop
sub
add
mov
test
jmp
mov
add
mov
movsl
xchg
sub
shrl
loop
pop
jg
loope
movsl
ljmp
int3
push
sub
cmc
fisttpl
neg
push
and
jle
imul
cwtl
jle
pop
xchg
inc
in
sub
cmpsb
xchg
mov
inc
imul
fucomi
cmp
xchg
stos
fnstcw
sbb
vmovss
adc
inc
mov
or
add
and
or
inc
stc
add
push
inc
fs
jo
jns
mov
fstpl
popa
xchg
das
scas
or
test
loop
subl
jg
flds
lea
out
pop
rcrb
aad
movsl
adc
pop
jno
cmpl
mov
ds
dec
popa
icebp
ds
decb
jle
dec
lret
in
ret
pop
sub
test
int3
push
mov
lods
test
je
adc
add
sub
jp
mov
sub
cltd
mov
inc
mov
hlt
push
or
xchg
dec
in
cli
mov
rcrb
ficompl
aas
or
in
mov
lcall
mov
cmp
or
cli
and
sbb
adc
sub
push
cltd
pop
mov
or
rcrl
mov
loop
sbb
mov
iret
roll
xchg
test
xchg
orl
inc
mov
inc
pop
jne
jecxz
mov
xor
push
sahf
vpsllq
enter
mov
scas
icebp
inc
add
mov
push
and
xor
dec
xor
outsb
rolb
jnp
ret
gs
xor
test
in
push
xor
mov
mov
mov
pop
xchg
inc
mov
inc
add
ficomps
movsl
cmp
or
pusha
and
mov
dec
aas
sub
ret
mov
fucomp
movsl
lcall
mov
dec
into
sti
stos
lods
push
test
scas
call
pop
shlb
in
pop
call
xor
lds
and
lret
sbb
add
inc
fwait
pop
sbb
bnd
xlat
divl
stos
xlat
push
scas
sti
inc
sbb
or
or
popf
inc
in
mov
scas
aam
rorl
mov
leave
mov
push
mov
movsl
or
mov
mov
mov
lret
movsl
test
and
mov
dec
dec
and
cmpsl
ss
cwtl
mov
sub
fsin
inc
das
xchg
in
pusha
pop
lock
popa
ljmp
inc
arpl
in
repz
out
movsl
sahf
jmp
repnz
gs
lret
vcomisd
rolb
sti
insb
inc
inc
in
pop
push
sbb
add
mov
and
mov
lret
sub
dec
popa
add
xor
bound
movsl
sbb
fmul
cmp
out
push
data16
pop
loop
mov
lret
sub
sar
cmp
jb
adc
dec
ret
pop
pop
lret
dec
push
stc
jb
cmp
mov
mov
lock
xchg
shll
push
inc
jb
jl
roll
jnp
testl
rorl
inc
pop
shl
int
sarb
or
mov
cmp
ror
fldenv
fs
lcall
pop
inc
xor
scas
cmp
outsb
xchg
scas
add
cmp
inc
loope
je
mov
pop
cmpsl
out
lahf
insl
push
stos
cmpsb
cmp
xchg
jge
aad
push
add
popa
out
or
in
sbb
push
repnz
dec
lock
lea
das
mov
dec
sub
push
cmpsb
pop
cld
dec
dec
mov
xor
or
ljmp
push
int3
cmpb
sti
inc
inc
daa
ljmp
loope
test
shlb
jmp
lret
pop
add
shlb
push
xchg
or
jbe
scas
sbb
and
jbe
xor
pushf
mov
rclb
mov
sti
mov
cltd
xchg
or
popf
dec
mov
enter
fadds
fdivs
inc
ds
stos
mov
sti
inc
fcoms
clc
fwait
outsb
test
and
addr16
push
int
jns
pop
repz
stc
adc
stos
sub
fs
xchg
leave
shl
jno
bound
xchg
icebp
cmp
or
jno
jns
inc
push
addr16
cmp
adc
and
cmpsb
sub
aaa
mov
pop
das
fdivs
jmp
int
lods
sub
xor
rclb
xor
push
mov
js
adc
sbb
mov
sub
sub
das
xlat
push
or
cld
popa
lret
aaa
push
add
add
lcall
mov
addr16
cmpsl
mov
lds
inc
sub
dec
in
cmp
imul
ds
push
jmp
insl
leave
sub
mov
cmpsl
test
lcall
mov
sar
inc
frstor
cld
pop
xchg
mov
fisttpl
jmp
gs
inc
hlt
push
out
pop
dec
mov
mov
pop
push
or
fs
mov
inc
scas
jle
popa
jbe
test
test
enter
rcll
mov
lock
stos
data16
adc
dec
sbb
push
je
ljmp
stos
xor
xchg
xchg
outsb
push
cmp
and
inc
mov
test
jb
sub
cld
or
call
mov
scas
adc
pop
inc
gs
ds
out
lods
clc
in
subl
popa
in
pop
and
jmp
loope
dec
cmp
inc
imul
aas
jge
push
adc
decb
enter
jge
mov
jnp
in
scas
xchg
xor
push
xor
fsubr
iret
loop
into
xchg
or
push
pop
and
adc
popa
filds
mov
jae
xchg
divl
scas
sub
arpl
jp
out
insb
mov
pop
cmp
js
sbb
jmp
push
add
pop
fnstsw
xchg
mov
fwait
or
int3
mov
sub
lods
sbb
or
test
cld
pop
push
int3
adc
incl
enter
push
aad
cmpsl
mov
stc
mov
sbb
insb
leave
fsubl
in
pop
mov
inc
ret
rcl
mov
ja
or
dec
into
aam
rcr
ja
ret
adc
loope
inc
pop
test
ss
jl
and
lret
ja
daa
mov
lods
add
or
adc
outsl
pop
xchg
cld
test
add
mov
jle
xchg
add
push
in
cs
mov
outsl
addr16
lret
data16
fsubr
fildll
mov
or
bound
jl
pop
das
in
mov
leave
scas
add
fsubl
mov
ja
dec
idivb
sbb
or
pop
push
test
in
dec
xor
push
jmp
inc
fwait
idivl
or
int3
jge
lds
jg
and
rorb
sbb
push
movsl
ret
out
push
jns
inc
ja
mov
push
sub
cmpsb
std
ss
sbb
inc
leave
xor
lods
add
mov
into
repz
xchg
in
ret
fistpl
adc
or
leave
push
fidivrl
clc
fildl
xlat
pop
repnz
in
fadds
loopne
jecxz
sti
lcall
in
lret
icebp
mov
fdivrl
cmp
ja
cld
or
jl
jge
and
test
je
and
lret
or
pop
mov
movsl
imul
dec
mov
in
cwtl
adc
adc
mov
dec
scas
gs
inc
call
movd
jno
fcomip
repnz
mov
dec
pushf
fnstcw
fidivs
inc
mov
pop
cmc
inc
sbb
arpl
xchg
mov
mov
fisttpl
mov
jecxz
mov
push
int3
cld
aaa
mov
pop
ret
popf
dec
mov
inc
xor
xor
sub
xchg
lcall
lea
push
pop
loop
sbb
sti
cmp
dec
fdiv
bound
imul
sbb
xchg
cld
in
sub
inc
cmp
outsl
fwait
add
xchg
rcrl
pop
ljmp
lds
sahf
pop
or
out
popf
mov
mov
pop
gs
lea
dec
mov
mov
mov
fcompp
icebp
hlt
pop
fs
push
jne
pop
cltd
sbb
xchg
jnp
lret
dec
sahf
cwtl
and
jns
int3
scas
cmpl
addr16
faddl
xchg
jbe
dec
cmpsl
or
test
ljmp
xchg
test
pop
dec
cli
jmp
jnp
sbb
xlat
mov
std
jecxz
fcmovu
fwait
in
jmp
insl
cs
jp
jge
fxam
cmp
insl
mov
and
out
cli
fsts
sarl
iret
cmp
iret
loop
mov
mov
mov
rcl
lret
jbe
out
fs
mov
jp
lods
sub
shll
ror
xchg
mov
or
mov
jmp
or
inc
push
mov
or
mov
outsb
push
sbb
xchg
in
rcrb
cmp
cmp
inc
icebp
push
aaa
popf
clc
sbb
imul
in
std
inc
adc
sar
data16
test
cmp
addl
xchg
loope
fmuls
pop
aas
ficompl
sub
jbe
repnz
imul
int
ret
pop
pop
jmp
xor
jmp
lret
pusha
lret
movsl
aaa
aad
and
popa
jo
mov
stc
int
inc
dec
ja
cltd
push
pop
lahf
sbb
jmp
test
ret
fisttpll
mov
cmp
hlt
and
sbb
popf
mov
dec
in
jg
adc
adc
xchg
dec
mov
nop
adc
and
pop
iret
aad
push
lods
inc
pop
or
into
cmp
jecxz
push
loope
or
push
cld
dec
push
pop
cmp
cmp
sbb
aaa
adc
xchg
mov
mov
pop
xor
cwtl
daa
sub
cltd
jnp
cmpsl
jge
lret
jne
jnp
aad
leave
sbb
sub
adc
rcll
mov
inc
pop
rcr
je
mov
pusha
mov
lea
cltd
mov
push
lods
lahf
fldt
mov
sub
in
mov
push
mov
mov
mov
lret
cmp
and
mov
inc
bswap
bound
and
inc
adc
push
mov
ret
jne
int3
inc
shll
in
jb
call
dec
sub
hlt
mov
out
aad
inc
pushf
xchg
sbb
xchg
bound
leave
sub
testb
ret
addr16
lods
data16
sub
test
mov
push
add
xchg
ds
fiadds
hlt
or
jae
mov
fwait
push
mov
sub
ds
fsts
adc
lahf
aad
jbe
mov
mov
or
mov
mov
xchg
mov
mov
sub
adc
sti
insl
dec
xor
add
jae
pop
mov
and
mov
mov
cmpsb
sar
imul
loop
mov
cmp
in
cmp
ret
add
call
and
imul
lret
xchg
test
push
jl
std
in
adc
dec
fsts
out
cmc
int3
rorb
fisubrl
pop
lret
xlat
and
int3
vpmuludq
cmc
sub
or
int
mov
cmp
scas
das
testb
xor
loop
xor
popa
xchg
jle
orb
mov
cmp
or
les
adc
or
ret
push
loop
clc
mov
push
stos
std
dec
lods
and
js
add
in
dec
jl
jge
sub
pop
out
push
and
je
adc
mov
je
out
out
pop
xchg
std
inc
loop
adc
dec
mov
sub
jnp
pop
inc
xchg
popf
sub
mov
jnp
mov
adc
mov
test
mov
and
pop
lods
push
into
stos
inc
movsb
and
sbb
cmp
mov
outsb
mov
and
test
xchg
or
and
test
in
mov
fpatan
fucom
pop
mov
cmp
pop
and
and
adc
outsl
aaa
daa
imul
or
inc
bound
popa
pop
dec
loop
inc
std
adc
test
adc
inc
call
aam
mov
call
jle
lret
mov
lcall
movsl
xlat
jecxz
mov
insl
ss
out
adc
sub
jp
stos
xlat
insb
pop
mov
mov
fcmovne
sub
mov
stc
data16
aaa
mov
pop
cmp
mov
xchg
inc
xlat
lods
inc
cmpl
xchg
dec
xorb
lret
loop
add
aad
mov
push
cmp
mov
lods
imul
mov
push
or
sub
fs
add
and
xchg
jbe
movl
mov
cmp
in
cmc
jp
bound
mov
fisttps
jne
or
xor
mov
adc
dec
xchg
adc
out
jne
jbe
xchg
push
and
lcall
and
xor
or
adc
sub
lret
out
lret
lcall
lcall
adc
add
dec
cmp
sar
mov
pop
jmp
add
stos
aaa
pop
dec
in
pop
ficomps
adc
cmp
das
movsl
insl
xchg
fdivrs
and
xchg
lds
lcall
in
fisttps
movsl
jle
lahf
loope
sbb
xor
add
fistpl
dec
enter
add
nop
or
xchg
mov
call
sub
ljmp
lods
out
pop
movsl
rorl
fistps
pop
cwtl
push
nop
pop
gs
setns
fnstcw
dec
push
jecxz
ds
jnp
mov
movsl
lock
and
js
imul
clc
mov
push
popa
xchg
jle
xor
inc
cmp
inc
cmp
aam
mov
pop
cmp
and
stos
ds
push
jle
aas
test
loop
xchg
lock
push
sbb
cmp
or
push
or
loope
or
cmp
inc
int3
lock
fstps
jb
cmp
sub
fwait
dec
pop
cwtl
jb
xor
push
lea
inc
notb
lcall
or
je
cmp
mov
jo
push
int
sub
jne
xchg
mov
push
mov
pop
ret
lds
aad
ficomps
fsub
push
dec
pop
mov
in
lcall
psubq
or
loopew
stos
cmp
push
lret
popf
inc
test
mov
push
sar
das
leave
inc
or
out
cmp
std
sbb
adc
lret
or
subb
add
js
push
adc
fadds
mov
jno
sahf
mov
pushf
mov
popf
bswap
bound
xlat
imul
fldl
popa
gs
cld
arpl
bswap
shrl
fprem1
pop
vpcmov
cli
daa
mov
test
mov
inc
rcll
gs
fwait
push
aad
cld
pop
imul
and
mov
lods
or
out
xchg
xchg
adc
add
xchg
add
sbb
data16
push
int3
pop
adc
add
sub
sti
mov
jo
fwait
data16
cmp
xlat
int3
sub
xchg
sarl
test
add
sub
popa
xchg
popl
rorl
rolb
sub
sub
dec
push
mov
jb
mov
int3
push
insb
push
xchg
rcrl
scas
pop
mov
mov
repnz
fsubrs
xchg
movb
mov
imul
pop
lods
xchg
sub
rcrl
aaa
pop
mov
dec
gs
sub
in
bound
dec
mov
fwait
mov
adc
mov
mov
leave
mov
and
fcompl
stos
lret
or
in
mov
pop
xchg
inc
mov
cmpsb
sti
fstl
hlt
push
mov
mov
out
mov
gs
add
lahf
sti
lock
dec
nop
inc
pusha
popf
loop
mov
into
inc
ja
lret
push
cwtl
or
movsl
or
fwait
sarb
and
inc
shrl
mov
dec
xchg
scas
or
sbb
shl
jo
sbb
pop
push
scas
fisttps
jg
stc
inc
ja
cmp
cmp
and
cmp
nop
mov
adc
xchg
sbb
push
mov
jp
xchg
jle
push
arpl
inc
in
aad
shrl
aad
stc
arpl
out
or
shl
iret
inc
lret
inc
lret
jnp
fsts
add
inc
or
loopne
call
xchg
lret
outsl
cmp
jb
pop
xchg
loop
hlt
mov
loopne
xchg
jno
sub
add
movsl
flds
cli
mov
adc
mov
or
sbb
lret
cmpsl
shl
int
mov
add
mov
rcrl
loopne
xchg
xor
mov
rcl
xchg
sbb
jnp
and
fsubr
mov
lea
movsl
inc
mov
fnstenv
add
out
js
sbb
pop
pop
sub
inc
les
loopne
jecxz
inc
outsb
lods
fisubs
test
movsb
imul
adc
sahf
pop
sbb
push
nop
jmp
inc
jge
mov
fnstenv
mov
repnz
add
cmp
popa
mov
pop
sbb
enter
xchg
shlb
dec
mov
outsb
jp
loopne
push
sub
push
sub
mov
jmp
fs
push
test
dec
and
mov
call
xchg
mov
adc
testl
pushf
jnp
decl
in
adc
pop
lret
mov
and
fnstcw
sarl
lret
xchg
dec
sbb
cmc
inc
push
sbb
mov
add
or
mov
popa
sti
inc
ljmp
and
mov
xor
sub
or
loop
sbb
sbb
or
jbe
das
ja
movsb
cmp
push
popf
popf
in
and
leave
pop
lahf
cmp
pop
xor
lds
xor
stos
jle
cmp
push
jge
xchg
xchg
inc
call
mov
fbld
test
add
jp
xchg
fbstp
jb
sbb
sub
push
fmuls
inc
test
sar
mov
jae
adc
mov
cwtl
repnz
sbb
int3
pushf
int
xor
leave
xor
push
lods
ret
cltd
fsts
aad
lods
aas
lcall
fimuls
or
stc
inc
add
lcall
lret
int3
mov
dec
and
outsb
lret
dec
icebp
repnz
adc
clc
cltd
jl
fidivl
and
nop
int
lahf
xor
mov
mov
jg
clc
sar
inc
test
push
sahf
add
dec
bound
cltd
push
cs
sbb
jnp
cld
adc
cld
ljmp
sub
iret
sti
inc
pop
movsb
sahf
pop
fs
leave
mov
push
xlat
or
out
jnp
push
dec
push
jne
into
andl
jmp
lahf
test
inc
cmp
or
scas
in
xchg
jge
repnz
shrl
jne
in
mov
in
push
jnp
in
addr16
sarb
lea
adc
pop
fst
rclb
sti
mov
arpl
jnp
mov
out
aam
fucompp
xchg
shlb
jnp
int3
sub
cli
pusha
aaa
loopne
fisttpl
mov
push
jecxz
or
or
imul
pop
cmp
dec
in
rcrl
test
fwait
mov
sub
push
sbb
add
pop
jbe
stos
pop
ljmp
jl
xchg
in
outsb
push
fdivl
mov
fistpl
push
in
sub
xchg
fstl
stc
lcall
adc
push
adc
pop
loop
cmp
daa
pop
jne
popa
inc
sbbl
xchg
sbbb
push
imul
test
cmp
mov
mov
adc
daa
shl
sub
or
aaa
pop
add
lods
outsl
daa
cmpsb
movsl
orb
push
push
ja
pushf
push
xchg
jg
inc
repz
cs
or
fsubrp
sub
es
jb
insl
bound
jnp
rorb
cmp
les
in
mov
sbb
jg
jnp
ja
cs
mov
jge
pop
and
andb
inc
insb
and
hlt
mov
adc
into
pop
aaa
pop
cmp
ret
pop
mov
sbb
loop
inc
pop
sbb
mov
sahf
or
sahf
dec
push
insb
cli
inc
adc
mov
movsl
pop
out
dec
mov
or
gs
mov
mov
dec
stc
mov
xchg
scas
xchg
loopne
mov
mov
mov
xchg
scas
mov
inc
fidivrs
sti
sbb
bound
cs
add
cmc
loope
movsl
pop
mov
jo
fldt
mov
cmpb
aas
iret
gs
das
dec
mov
cld
rcll
cwtl
sysexit
clc
xchg
insl
dec
push
cs
out
int
arpl
jmp
loopne
ror
xchg
imul
inc
inc
mov
xor
inc
adc
jne
sbb
sub
repnz
cmc
cmp
sub
daa
sub
add
pop
xchg
mov
aam
pop
enter
and
and
dec
mov
iret
loop
subb
aaa
arpl
repz
fisubrl
inc
push
stos
ljmp
ja
repz
repz
or
outsl
lret
add
push
pop
mov
lea
shrb
ja
stc
inc
fbstp
aad
repnz
int
mov
inc
popa
and
scas
in
mov
push
arpl
xchg
mov
test
sub
stos
imul
push
mov
dec
out
cmc
popa
mov
clc
xlat
nop
mov
loopne
hlt
cwtl
xor
inc
mov
jae
or
aas
xorb
dec
push
testl
pop
leave
mov
adc
dec
ds
sbb
mov
push
xchg
pop
pop
cwtl
lods
fwait
fs
scas
imul
add
popa
jae
cmp
jp
adc
push
out
mov
jecxz
mov
inc
sti
out
mov
loope
shrl
or
das
mov
aaa
mov
sbb
lods
push
loope
adc
pop
dec
cmp
xchg
adc
out
mov
xchg
hlt
lds
lods
mov
stos
fxam
xor
ss
daa
sti
push
mov
stos
mov
mov
jb
jo
hlt
rcr
gs
outsb
sbb
mov
lods
ja
mov
or
xorb
push
xchg
gs
add
xchg
lret
add
xchg
cmc
fnstsw
roll
adc
cmp
popf
xchg
inc
dec
mov
inc
lock
inc
sbb
xor
aaa
mov
icebp
push
popa
outsl
cmpsb
mov
out
insl
lret
cmp
sbb
cmpsl
mov
cmp
in
pusha
lahf
roll
fistps
mov
xor
imull
pop
and
daa
out
stc
pusha
adc
xchg
mov
popf
stos
imul
ret
xor
mov
call
push
insl
dec
fs
fs
pop
shrl
adc
fists
cld
jecxz
inc
push
in
lret
xor
mov
sbb
fdivrs
enter
stc
push
inc
loopew
cmp
js
data16
mov
sbb
loope
inc
mov
pop
xchg
mov
dec
push
pop
fwait
mov
adc
loope
add
mov
cmpsb
inc
cmpsl
mov
cmpsl
loopne
iret
jo
sbb
jle
imulb
dec
data16
jp
push
stos
lock
fstps
xor
subb
test
and
fstps
mov
sbb
xchg
icebp
aaa
lods
call
pop
xchg
adcl
xchg
aad
lods
lea
xchg
xchg
aaa
xchg
jge
out
orl
xlat
jne
loopw
jl
insl
xlat
in
cmp
xchg
inc
mov
rcl
cwtl
lret
loop
filds
jg
cli
pop
xchg
imul
cmp
mov
mov
dec
fimuls
jmp
mov
rcl
bound
jge
aam
xchg
pop
data16
adc
shr
jno
sahf
imul
pusha
int3
pop
cmp
repz
rclb
aad
fildll
dec
mov
outsl
vmwrite
int
dec
mov
fildll
pop
mov
cld
push
orl
cwtl
cmp
int3
sti
movl
lcall
fdivrs
sbb
loop
repnz
out
in
loopne
nop
sub
dec
sub
pop
mov
jb
cmp
xlat
xor
xor
pusha
mov
mov
jp
cltd
loopne
sub
cs
add
out
sub
nop
nop
fwait
hlt
aaa
sub
pop
push
in
loope
mov
sub
pop
dec
test
insl
stos
add
dec
mov
sub
lock
cmp
xchg
or
cmc
test
inc
lcall
mov
xor
push
int
inc
loop
rol
sub
mov
ds
out
mov
cmc
and
inc
aas
scas
daa
out
loop
cmp
lods
add
dec
gs
pusha
or
mov
in
add
jl
xchg
adc
mov
dec
or
aam
and
inc
in
jno
bound
dec
mov
dec
enter
mov
mov
clc
mov
cs
jmp
mov
popf
inc
in
lcall
cmp
mov
inc
push
cmc
cmpsl
sub
mov
and
inc
mov
adc
sub
jne
and
fstps
jle
aas
movsl
nop
sub
fnstcw
into
pop
test
loopne
sub
rorl
push
lcall
fisubl
lahf
rcrl
pop
mov
out
jo
xchg
cmp
shl
inc
pop
jl
fstpl
jbe
jmp
aad
mov
inc
sbb
push
ficoml
out
or
lcall
daa
test
lahf
cli
add
sbb
cli
and
roll
divl
mov
mov
mov
jp
lret
jnp
cmp
jne
test
fimull
cli
icebp
xor
shlb
xor
xor
stc
lret
sahf
cld
int3
dec
jbe
cmp
loope
inc
in
push
fdivrs
cli
std
mov
push
pop
mov
or
nop
loopne
and
mov
dec
cmp
xor
push
cld
stos
cld
insb
repnz
sub
adc
lret
clc
add
je
addr16
jbe
and
iret
sahf
fisttps
mov
aad
cmp
adc
adc
pushf
sbb
jbe
ja
and
in
sbb
add
dec
icebp
xor
repnz
int
add
xor
cltd
leave
xor
push
dec
xor
jbe
xorl
jno
or
ss
fisttpll
ret
pop
hlt
inc
dec
mov
xchg
sbb
jecxz
insb
enter
repz
into
pushf
in
lea
sahf
fs
pop
out
push
lcall
mov
es
lcall
pop
call
dec
fs
or
pop
adc
fldt
lahf
add
push
out
clc
jbe
popf
repnz
mov
push
dec
test
std
hlt
scas
add
pop
xor
mov
outsl
data16
std
mov
mov
pop
rorl
int3
shll
or
sti
fsubrl
pop
mov
inc
xor
mov
cmp
jp
stc
inc
clc
sub
sbb
roll
scas
dec
cmpsb
inc
jo
inc
sbb
mov
inc
dec
lret
pop
fst
cmp
in
inc
xchg
jecxz
js
jmp
mov
fisubrl
cmp
sti
fldcw
sub
xchg
int
inc
aas
push
loopne
or
cwtl
int3
or
das
add
cmc
pop
movhps
addr16
mov
mov
mov
lret
sub
aad
movsl
mov
jmp
into
add
test
lea
pop
subl
dec
pop
inc
scas
sub
fwait
add
cld
in
jne
cmp
loop
cli
and
dec
jne
cld
fwait
int
stos
sub
dec
hlt
mov
bound
push
ret
xor
adc
add
cmpb
inc
imul
xchg
xorl
daa
or
outsb
arpl
incb
dec
mov
roll
ret
jnp
fistpll
call
fdivrs
fldl
pop
stc
ret
mov
cmc
pop
scas
jg
push
inc
add
jle
cmp
adc
push
add
mov
aad
add
pop
push
clc
out
cmpxchg
and
je
push
jp
xchg
loop
jecxz
loop
nop
test
inc
aad
data16
sub
and
in
mov
lea
fs
mov
cmpsw
fistpll
imul
sub
ss
imul
hlt
imul
inc
loope
ss
and
hlt
mov
dec
mov
adc
loop
icebp
rorl
inc
pop
push
adc
push
fwait
xlat
and
sbb
and
and
mov
sbb
adc
rcr
jecxz
or
int
ret
aad
xchg
cmp
inc
lcall
jbe
cmp
fisttpll
xchg
sti
sbb
sti
test
push
fldcw
dec
movsb
dec
or
add
dec
pop
add
xor
xchg
dec
lret
cld
es
mov
jmp
popa
mov
fwait
sbb
leave
sbb
and
ret
inc
cmp
sti
mov
adc
jnp
test
mov
cmp
push
pop
push
sub
lock
xchg
faddl
sbb
or
andl
lock
sbb
add
aaa
into
push
lods
test
sbb
scas
ljmp
in
dec
stc
mov
jbe
js
cmp
insb
mov
fadds
push
mov
add
mov
sbb
jecxz
into
pop
pop
mov
sbb
stos
bound
mov
and
test
xchg
or
inc
sub
repz
jle
ljmp
daa
leave
pop
sti
mov
ret
in
sub
mov
and
inc
mov
pushf
inc
subb
rcr
sbb
fsts
pop
shlb
push
or
adc
stc
inc
in
xorb
jge
leave
mov
lahf
mov
xchg
cmp
fisttpl
cmp
xlat
mov
addr16
mov
or
lahf
test
adc
test
pop
cmp
imul
pop
adc
ja
or
jge
sbb
stos
sarl
mov
dec
dec
cld
fs
inc
ret
scas
mov
fwait
movsl
pop
xor
out
xchg
fcomip
cwtl
sub
sbb
test
popa
xor
mov
jl
jno
push
push
fwait
call
mov
movsl
xchg
sbb
loope
xchg
adc
ss
mov
lods
mov
pop
movsb
outsb
leave
out
roll
xor
mov
mov
cwtl
int3
clc
out
fistpll
lcallw
adcb
fsqrt
add
inc
pop
pushf
sbbb
into
nop
dec
cltd
and
in
cmp
mov
cwtl
in
cs
ret
aam
or
add
lea
jbe
orl
dec
out
sbb
js
aad
adc
sbb
inc
gs
sbb
lock
nop
stos
or
setns
fsubrs
cmp
lret
jo
push
xor
xchg
lret
scas
xchg
pushf
popa
cmp
mov
push
movsl
inc
or
push
popa
or
inc
jb
outsb
xor
and
add
sub
rolb
sub
cmp
insb
dec
xor
jbe
or
mov
xchg
aaa
dec
adc
enter
inc
dec
mov
adc
dec
rcrb
pop
xchg
pop
lret
test
inc
ss
enter
mov
sbb
bound
loopne
xchg
inc
insb
xor
mov
mov
push
lret
mov
or
lock
inc
test
movsb
mov
cmpsb
faddl
popa
fsub
jecxz
ss
cmp
pmullw
mov
addl
leave
jne
and
repz
mov
in
sbb
aaa
pop
dec
insl
xchg
imul
push
loop
dec
add
add
jmp
sbb
mov
dec
mov
and
gs
testb
test
sbb
inc
and
mov
pop
adc
and
fcomp
cmp
xchg
mov
xchg
in
lea
inc
add
jbe
es
pop
push
lret
inc
mov
incb
int
xlat
stc
inc
or
xchg
jecxz
jp
mov
rcrl
pop
out
popa
int3
add
hlt
dec
lret
jmp
mov
push
mov
sub
jl
aad
out
mov
fstpl
rclb
adc
mov
adc
pop
pop
jp
push
mov
outsl
notl
add
add
popf
in
rorb
shlb
arpl
rcl
lods
mov
add
jbe
mov
jbe
imul
sbb
sub
sub
add
or
jp
std
xchg
add
dec
ss
stc
add
push
jbe
fcomi
mov
or
imul
jge
movsl
mov
or
pop
pop
imul
ljmpw
lret
mov
pusha
cmp
cmp
lods
or
mov
loopne
xchg
sti
hlt
pop
shrb
inc
fistpll
mov
pop
imul
punpcklwd
dec
shll
std
out
movsb
pop
lods
cmpsl
jbe
cmp
test
inc
lahf
xlat
jmp
lret
jecxz
jmp
popa
sbb
mov
or
loope
push
cli
xor
add
bound
add
pop
jne
jbe
jecxz
gs
lock
and
out
jl
adc
in
lret
call
mov
cmp
mov
or
int
lcall
dec
flds
pop
jle
add
inc
lock
cmpl
sbb
dec
xor
xchg
push
rolb
sti
mov
js
and
lds
push
fidivl
int
mov
in
ficompl
es
inc
sarb
mov
ror
in
fistps
movsl
popa
orl
out
add
xor
repnz
lock
mov
mov
xchg
jge
cmc
jp
jge
loopne
rcll
xor
out
xor
iret
sarb
clc
jno
fcom
movsb
fsubs
mov
mov
add
lcall
jne
pushf
popa
dec
cltd
fcomps
add
loop
rclb
movsl
lea
mov
shl
incl
les
fs
rcll
lods
stc
cmp
lret
pop
insl
mov
int3
fsubr
fcmovnbe
add
insb
sub
mov
pop
sbb
int3
rorb
inc
rclb
or
cld
mov
jmp
jecxz
lcall
std
xchg
xchg
mov
lret
je
test
jbe
mov
jp
add
cltd
hlt
push
sarl
adc
cmp
mov
stos
not
test
int
sti
pusha
gs
out
fcoml
inc
fmull
sub
outsb
popa
pop
sar
sub
add
pushf
dec
std
int
gs
int
xchg
mov
leave
adc
mov
int3
cmpsb
sbb
cmp
cmp
aad
loopne
scas
pushf
std
push
pushf
sahf
out
pop
pushf
cmc
daa
rorb
dec
fwait
sub
out
in
or
xor
jo
dec
sbb
dec
nop
dec
rcrl
leave
xchg
add
insl
in
imul
mov
mov
mov
mov
addl
cli
pop
in
jnp
or
adc
cld
bound
notl
jmp
iret
xadd
inc
or
out
shr
jae
lahf
dec
loopne
movsl
mov
jecxz
mov
add
xor
inc
dec
addr16
cmp
mov
fbstp
cmpsb
scas
aaa
movsl
addr16
insl
pop
mov
push
push
out
popf
sub
cmpsb
mov
xchg
inc
out
das
jbe
xor
movsb
sbb
push
bound
xor
mov
mov
fst
sahf
mov
sub
in
fld
bound
inc
xlat
add
mov
imul
stos
and
inc
popa
cmp
inc
push
sub
and
xlat
popa
cmp
sbb
xchg
out
mov
push
decb
sbb
push
movsb
dec
das
ja
in
leave
into
push
out
dec
push
out
pop
filds
xor
adc
dec
out
xchg
loop
int3
add
inc
mov
sti
ds
movsb
cwtl
cmpsl
loop
inc
paddq
add
flds
ja
in
outsl
int3
add
movsl
test
fldt
and
inc
sbb
inc
dec
pop
out
pop
push
jmp
mov
fimull
jbe
in
sahf
sbb
dec
push
sti
push
pop
fstpt
mov
ret
fisubl
sar
repnz
sub
aad
ret
xchg
movsl
jmp
mov
jb
dec
fistl
fwait
push
int3
in
dec
pop
mov
inc
ljmp
jge
sbb
jo
popa
jbe
push
std
popf
pushf
out
mov
inc
mov
cmpsl
lret
push
mov
in
int
add
lods
push
mov
pop
shr
popa
stc
cmp
sub
push
ret
mov
inc
xchg
or
jbe
nop
movsb
popf
repnz
rcr
out
mov
lret
mov
adc
mov
mov
xchg
jbe
fsubr
js
fsubs
rol
sub
mov
cli
pop
mov
insl
faddl
fwait
int3
cwtl
pop
dec
stos
mov
cmp
imul
xor
addr16
or
pop
and
repz
inc
cs
mov
xchg
loop
das
cli
sub
jnp
jmp
nop
mov
arpl
icebp
mov
in
ret
das
xchg
jo
dec
xchg
inc
arpl
push
stc
aad
add
mov
movsl
test
xor
fs
dec
xchg
add
js
add
lcall
repnz
sub
lahf
pop
jne
adc
in
movsb
jmp
sbb
aaa
es
cmpsl
cmp
adc
jns
movsb
enter
aam
add
push
xor
and
psraw
fucomi
adc
lret
add
adc
cmp
cmp
enter
rep
push
dec
ds
decb
mov
sub
jmp
and
punpckldq
enter
loope
in
stos
cltd
fbld
cmp
and
insl
ret
icebp
adc
jecxz
pushf
popf
mov
dec
test
add
push
add
mov
mov
test
in
inc
jmp
sbb
rcrb
in
lretw
ficompl
in
pop
cli
stc
and
out
mov
mov
mov
jg
mov
cmc
sti
mov
inc
inc
dec
mov
cmp
sbb
test
adc
or
out
inc
dec
push
in
dec
pop
js
and
inc
add
aas
loopne
cmc
push
imul
jecxz
dec
lea
mov
fwait
fwait
cltd
mov
das
pop
test
cmp
ja
mov
iret
clc
mov
cmp
mov
or
pop
out
mov
cmpsl
adc
adc
mov
pusha
test
xlat
inc
mov
test
xchg
or
mov
push
add
aad
or
bound
rol
add
lea
sub
sbb
fs
popf
adc
pop
pop
wbinvd
jno
adc
pop
mov
xchg
mov
mov
add
mov
or
sub
popf
insl
sti
pop
inc
aas
idivl
lret
stos
mov
lahf
cmp
and
and
lahf
popa
add
popf
or
xor
cli
mov
cmpsl
pop
sti
daa
or
jp
bound
das
fnstsw
fisttpll
and
lret
inc
insl
insb
fs
ret
inc
or
out
pushf
lods
fisttps
leave
gs
inc
jecxz
pop
sti
repnz
pushf
fs
movsl
lahf
or
cmp
negl
mov
fdivrs
sbb
lea
lea
rolb
imul
xchg
clc
push
jb
or
cld
aas
push
loopne
jle
dec
in
add
and
mov
fs
jecxz
jl
lods
or
jge,pn
fsts
aas
pop
shrb
or
filds
add
sbb
mov
cwtl
lea
movsb
pop
jmp
test
mov
flds
xchg
xchg
sar
inc
xchg
testl
movsl
xchg
cmp
add
pop
jmp
jnp
jp
mov
scas
mov
push
pop
add
ljmp
pusha
push
xchg
mov
sub
xchg
mov
call
ljmp
mov
in
movsl
sub
mov
pop
jmp
fstps
in
insl
outsl
xor
jb
inc
les
mov
cmp
push
or
dec
push
jp
sbb
test
in
pop
pop
sbb
arpl
add
mov
xor
fsubrl
lods
add
xor
cmpsl
adc
lret
stc
insb
sti
in
aad
inc
push
jnp
sub
push
lods
roll
into
mov
jmp
test
std
adc
loop
mov
insb
gs
sub
pop
and
sub
std
out
inc
mov
or
iret
inc
mov
sub
rclb
jecxz
and
xor
xchg
mov
mov
fs
fimull
jae
cltd
arpl
in
in
fstl
sub
bound
sarb
xchg
mov
xchg
stc
loop
cmc
mov
fs
and
xlat
xchg
and
inc
mov
mov
mov
lea
mov
testl
out
xor
lcall
test
push
mulb
sbb
stc
pop
jmp
stc
pop
leave
xorl
fs
jno
into
dec
dec
mov
fs
sahf
xor
pop
cmc
int3
fcoms
sbb
or
jmp
jns
cmp
daa
cmp
push
mov
sub
call
dec
jnp
out
dec
rcll
mov
lret
xchg
xchg
test
mov
xchg
movsb
pop
in
pop
sahf
xlat
out
fstps
rorl
xchg
push
jmp
stos
mov
stc
frstor
or
out
movsl
lahf
jle
sub
sahf
adc
mov
add
cmp
inc
das
xor
mov
push
sti
test
pop
mov
inc
sub
xorb
xchg
shl
ja
sub
pushf
scas
and
data16
inc
in
fs
pop
frstor
iret
pop
in
flds
dec
je
cmc
cli
cmp
and
fmuls
push
sbb
inc
push
out
dec
inc
add
in
jno
pop
mov
dec
pop
insl
out
or
push
push
int
mov
fldl
int
or
push
adc
loop
jmp
dec
mov
jae
cmp
pop
mov
push
mov
push
sti
or
fisttpl
loop
int3
into
test
mov
mov
je
lret
sbb
call
sbb
int
loope
test
gs
insl
or
ljmp
pop
xor
jg
xchg
lret
mov
cmp
dec
mov
add
insl
push
cld
movsb
popa
or
mov
dec
pushf
mov
xchg
lods
jnp
lret
aaa
sbb
jge
aad
fucomip
ljmp
push
imulb
out
jne,pn
and
in
ficomps
in
jmp
sub
xchg
out
or
cmp
iret
jge
stc
pop
or
out
imul
and
sbb
or
push
clc
fdivrl
and
movsl
jne
jnp
cmc
inc
add
mov
loop
push
push
inc
pusha
mov
fs
mov
adc
jl
pusha
movsb
mov
aam
mov
pop
sub
aad
imul
cli
arpl
bound
jecxz
push
push
sbb
aad
mov
jbe
lods
pop
ljmp
mov
mov
out
cmpl
cld
cs
or
out
loope
cltd
insb
sbb
or
inc
xchg
mov
out
int3
mov
int3
lret
sbbb
gs
arpl
mov
inc
test
inc
ret
add
jb
ss
mov
jb
pop
jp
int3
iret
push
in
scas
xor
jmp
inc
sti
push
jmp
scas
outsb
sbb
int
dec
je
pop
mov
pusha
sub
rorb
mov
leave
push
fwait
xchg
out
nop
add
aaa
add
lahf
in
pop
std
pop
int
cltd
adc
jle
sbb
fildll
loope
add
repnz
sti
fsub
mov
bound
fwait
push
mov
and
ss
cmp
loope
or
add
and
cltd
add
imul
cmp
jne
dec
pop
dec
or
hlt
mov
mov
and
lahf
mov
insl
scas
mov
scas
cmpsl
xor
lea
ret
cld
rol
jecxz
or
jg
push
aaa
and
vmwrite
out
jl
test
mov
insb
xor
pop
pop
addr16
push
add
shlb
enter
dec
pop
movsb
push
cmp
sbbb
mov
dec
ficoms
inc
test
test
adc
mov
or
popa
pop
lock
pop
cli
cmp
jae
ret
in
mov
xor
fidivl
in
rcrl
jp
add
rcll
pushf
int3
scas
sub
pop
rcr
inc
cmp
push
sbb
rorl
pushf
cmp
sti
xchg
jbe
mov
divps
pusha
push
call
mov
jmp
jae
in
xchg
dec
call
fsubrl
leave
xchg
inc
pushf
faddp
call
sti
test
arpl
test
cmp
add
jmp
pop
add
mov
xchg
sbb
std
stc
fisubl
cmp
or
mov
push
arpl
out
int3
or
repnz
jo
mov
loope
pop
imul
shrl
cmpsl
fidivl
sbb
mov
xchg
lret
scas
lods
mov
inc
add
xor
inc
xchg
adc
pop
push
and
mov
mov
fistl
std
popa
test
call
loop
xor
jmp
fstp
inc
das
fwait
shl
int
inc
imul
loope
fidivrs
xchg
lods
sbb
push
sub
aaa
cmp
popf
push
mov
mov
lahf
jae
pop
call
popf
jnp
imul
aam
or
xor
add
rorb
ficompl
orl
lods
test
out
or
arpl
inc
mov
sub
mov
mov
aas
mov
das
pop
addl
insb
dec
in
ljmp
ret
mov
outsl
push
leave
sbb
and
popf
ret
lods
and
popa
pop
mov
adc
loope
decb
inc
movsl
jecxz
cwtl
xchg
mov
fnstsw
cmp
push
mov
mov
ljmp
xlat
or
sti
mov
sub
xchg
addl
xchg
in
test
push
cmp
lret
pop
inc
inc
xchg
xchg
inc
pop
fs
cmc
repnz
sub
jge
mov
cmc
xor
shl
mov
das
pop
xor
lret
int
aas
add
das
add
dec
sub
jns
test
mov
cli
movsb
lret
in
add
push
lret
hlt
aaa
or
jge
dec
iret
mov
adc
cli
fcompl
xchg
push
inc
push
jno
jmp
das
sbb
lahf
push
mov
repnz
xlat
jmp
scas
mov
scas
pop
lsl
hlt
sahf
sub
pop
inc
mov
call
mulb
popf
ss
xor
sbb
jmp
push
sbb
insb
incb
stos
xor
test
fmul
lahf
aad
lret
and
out
cmpsl
lahf
out
insl
sahf
mov
gs
fistps
push
push
add
and
pusha
cld
xchg
icebp
xchg
sub
flds
mov
fwait
aad
scas
xor
stc
sbb
xchg
in
lret
mov
pop
mov
xor
mov
or
into
cltd
cmpsl
mov
mov
les
mov
xor
or
cmp
push
xchg
jecxz
negb
fadds
sbb
push
fadd
xchg
xchg
loopne
mov
fnstsw
mov
pusha
push
lret
jns
mov
mov
ffree
inc
fbstp
dec
ljmp
out
sub
fwait
jl
popa
loope
in
pop
shll
clc
and
adc
iret
das
mov
fnstcw
mov
jecxz
fcompl
cs
in
mov
mov
xchg
fcmovnb
loopne
sbb
test
insb
push
movsl
lds
rcrl
sbb
fdiv
push
shr
cmpsl
in
inc
xchg
addr16
pop
mov
fisttps
inc
das
mov
mov
cmp
jecxz
mov
scas
popa
inc
sbb
rorb
sub
shl
mov
cmc
out
negb
mov
ret
mov
into
fsubp
test
out
call
loop
mov
push
xchg
or
add
sbb
jmp
cmp
add
mov
cmpsl
dec
or
out
jecxz
fcomps
pusha
aam
in
xchg
test
shl
test
add
std
out
stos
popf
pushf
in
add
lret
in
pop
loopne
xlat
sti
call
movsb
test
add
nop
pop
sbb
stc
in
negl
push
shrl
push
lods
adc
adc
es
ret
gs
xor
push
cmpsb
stc
rolb
inc
stos
nop
rorb
rorb
xchg
pop
cs
rorl
pushf
inc
lcall
jge
pop
or
shl
repnz
insl
jge
mov
jb
in
add
fiaddl
sbb
gs
inc
cltd
sbb
mov
loop
movsl
clc
lea
ficoms
les
push
roll
sub
lahf
push
push
lock
inc
mov
cmpl
mov
out
mov
push
out
clc
xchg
aam
mov
sub
loop
stc
jae
xchg
jns
xchg
sub
fldcw
pop
in
or
popf
pushf
push
repz
push
dec
nop
mov
xor
and
repnz
add
fwait
dec
fisubrs
sbb
cmpsb
mov
dec
int
lds
es
fs
pop
cwtl
in
jle
fmull
inc
push
mov
mov
adc
arpl
inc
cmpl
rcl
xor
dec
out
in
cmp
ljmp
cld
xor
add
das
push
dec
push
aam
jmp
inc
inc
xchg
or
push
cmp
aaa
imul
cmc
dec
jmp
push
stos
jne
mov
test
sub
mov
mov
mov
push
test
cmp
cmc
inc
inc
jecxz
and
iretw
test
in
adc
mov
cmc
fsts
mov
rcll
pusha
ds
into
scas
int
outsb
add
int
filds
in
int3
pushf
ficompl
call
dec
jo
subb
sub
lret
inc
sub
or
push
ret
shll
loopne
adc
pop
push
cmp
cmp
pusha
mov
loopne
roll
lods
ret
enter
xchg
pop
rorl
fnsave
add
int
lret
rcr
inc
mov
fisubl
aaa
adc
test
loop
punpckhbw
push
bound
xor
and
push
jge
les
xlat
cltd
pop
dec
ret
mov
fsubr
pushf
jmp
mov
mov
mov
sub
ja
std
insl
insl
aam
pop
sar
sbb
push
popf
fldl
enter
std
xchg
sub
cmp
insb
inc
pop
stc
aam
neg
jp
dec
or
sbb
sub
lcall
mov
lea
adc
lcall
add
sub
lret
mov
in
inc
xchg
push
ffree
lret
pushf
imul
iret
into
dec
roll
out
and
aam
lret
adc
pusha
push
in
gs
insl
out
lcall
pusha
lock
mov
pop
inc
jmp
pop
push
loop
fbstp
call
pushf
add
cltd
nop
gs
or
dec
imul
sarb
popa
addr16
mov
mov
jmp
inc
fdivl
out
loope
push
cmc
stc
int3
mov
daa
dec
loopne
mov
jne
push
imul
fwait
and
and
outsb
sbbl
rcrb
fisttps
cmp
movsl
gs
aaa
stos
aam
pop
cmc
lret
push
divb
pop
loopne
popf
frstor
iret
xor
fstps
pop
stos
cmp
pop
pop
bound
aad
loope
lods
sbb
insb
addr16
xchg
mov
xor
cmp
mov
sti
pop
test
cld
movl
push
adc
cmp
arpl
pop
movsl
arpl
and
cltd
push
inc
xchg
push
sbb
fcmovbe
cmc
inc
cmpsl
pushf
hlt
jecxz
imull
adc
mov
in
outsb
testb
pushf
dec
dec
jge
pop
addr16
ljmp
cmp
xor
mov
sti
mov
lret
stc
push
mov
push
adc
pushf
inc
out
into
fwait
add
adc
cmp
arpl
pop
out
shl
push
loopne
in
iret
xor
mov
jmp
lahf
mov
sti
mov
gs
stc
bnd
xor
popf
adc
mov
test
xchg
out
pushf
xchg
pop
add
test
cmp
jbe
push
sbb
sbb
aad
popf
imul
mov
and
flds
insl
cmc
mov
jmp
push
std
scas
xor
fsubl
mov
mov
clc
neg
stos
inc
nop
or
imul
aam
les
lock
into
mov
push
pop
dec
sub
cli
add
movsl
test
cmc
mov
push
addb
sub
dec
daa
arpl
sbb
popf
and
fisttps
inc
divl
lret
xor
inc
fistpl
sbb
and
ss
jecxz
movsl
jp
mov
xchg
xor
call
int3
sti
dec
shll
lds
lret
jp
lock
and
push
out
popa
fbstp
std
pusha
ror
sbb
mov
iret
insl
fcmovnu
inc
xchg
inc
cmpsl
enter
xchg
jecxz
cmp
pop
xchg
cwtl
adc
pop
shl
jl
ret
test
mov
minps
xchg
mov
sbb
jmp
in
sub
sbb
cmp
and
shrb
mov
mov
cmpsl
sub
adc
mov
mov
outsb
popa
cmpb
xchg
mov
out
sbb
cmp
aad
inc
jl
inc
call
cld
pop
jne
movsl
add
sbbl
arpl
sub
xor
vandnpd
xor
inc
test
sub
jmp
ror
jb
sbb
and
adc
pop
es
push
rolb
aad
cmp
in
jle
aad
xchg
mov
dec
xchg
popf
jecxz
pop
mov
cwtl
lahf
push
fnstsw
popf
mov
inc
mov
jecxz
lcall
mov
fs
das
mov
in
nop
xor
pushf
mov
aad
std
pop
cmp
add
stos
das
add
xchg
jl
movsb
inc
cmc
aad
aad
jp
bound
rcr
mov
icebp
cmp
lock
jae
jo
sbb
scas
inc
xor
fnsave
mov
push
xor
sbb
hlt
xchg
jmp
mov
subb
stos
lds
call
fisttpll
xchg
sbb
leave
stos
aad
in
jl
ficoml
mov
jmp
dec
leave
js
push
xchg
sub
sbbb
mov
test
pusha
dec
pop
test
icebp
fdivrl
adc
jecxz
aam
jp
fs
jae
or
or
pop
cmp
bound
jecxz
pop
rcll
jg
mov
add
loope
lods
fst
outsb
adc
or
lods
leave
mov
xor
sub
sbb
ficoml
or
std
sbb
or
pop
push
ljmp
jne
lahf
aad
inc
xor
ret
loopne
sbb
sarl
cwtl
fisubs
sbb
push
jnp
icebp
and
neg
and
or
xorb
sbb
je
fsub
xor
mov
pop
sbb
cmpsl
std
mov
div
push
or
pop
hlt
ss
shl
pop
int
cmp
outsb
lds
xchg
loopne
pop
xchg
pusha
adc
fidivrl
add
inc
cmpsl
adc
xchg
out
push
lret
xor
inc
pop
cmpsl
cs
push
in
or
mov
mov
fadds
lcall
jl
mov
mov
je
fdivl
icebp
xor
lret
and
cmc
outsl
mov
shlb
mov
sub
mov
out
cmp
pop
lret
adc
ja
adc
rcrl
imul
adc
pop
cli
insl
xchg
mov
dec
and
xchg
inc
inc
sbb
sti
adc
fcmove
pop
xchg
push
leave
mov
stos
add
and
dec
push
std
mov
icebp
fxch
mov
frstor
jecxz
sbb
ja
cmpsb
call
cmp
cmc
lahf
sbbl
push
jnp
inc
and
popf
fstps
in
test
sbb
sub
push
imulb
jb
lret
imul
mov
out
ret
sbb
fcmovnbe
cmp
jl
fstps
sbb
or
fs
pextrw
inc
lods
call
insb
fldcw
testb
loopne
mov
rclb
sbb
mov
leave
push
xchg
xchg
gs
lahf
in
repz
call
pushf
mov
add
and
and
popl
loopne
cmp
imul
jge
test
repnz
imul
or
push
fbstp
or
adc
incb
pushf
bound
fstpt
lahf
call
sbb
loop
inc
fcompl
jnp
mov
lods
xchg
mov
fwait
cmp
sub
xor
or
xchg
daa
gs
xchg
stc
fwait
std
lcall
shl
aam
fnstsw
push
cmpsl
and
mov
dec
xchg
fwait
rcr
ret
mov
xchg
cld
mov
popf
mov
pop
out
mov
jmp
std
aad
in
mov
adc
push
loopne
add
jmp
sbb
sbb
inc
push
add
hlt
dec
cmc
sarb
xchg
lret
jp
imul
add
add
mov
lcall
dec
int
fcomps
xchg
xor
mov
leave
jae
xchg
pop
jle
jmp
cmpsb
int
insb
int3
or
pop
jmp
cltd
les
xor
sub
std
sbb
cli
dec
cmc
pop
test
add
pop
jecxz
mov
jecxz
repz
mov
pushf
stc
add
add
shll
fidivrs
sub
scas
pop
movsb
jmp
negb
sub
lock
stc
fnstsw
cwtl
out
mov
out
cli
sbb
mov
pop
inc
fstpl
xor
add
push
into
xchg
or
inc
outsb
jne
fs
jb
shlb
dec
gs
inc
add
loopne
jo
popf
iret
sub
ret
out
mov
lret
jmp
outsl
rcrb
in
std
fcos
jne
and
int
je
add
xor
aad
xor
or
out
cmp
movsl
icebp
mov
cmp
add
jecxz
iret
mov
dec
mov
pop
cwtl
cmp
pop
cld
daa
or
fldcw
xchg
das
pop
mov
adc
or
into
cmc
mov
jl
inc
lret
hlt
jo
fnsave
dec
mov
or
inc
fwait
out
or
or
fs
jmp
pop
inc
jl
in
in
mov
js
pop
aad
les
sbbl
sub
inc
xor
mov
leave
cmpsl
aad
inc
jbe
gs
in
into
cmpsb
or
aad
and
pop
pop
xor
mov
or
jle
mov
fidivrs
xchg
subb
negb
mov
sbb
push
fistpll
aad
inc
sub
out
jecxz
dec
stos
inc
xorl
sub
or
sbb
add
xchg
xchg
mov
cld
int
int3
sub
frstor
aam
jecxz
jbe
out
cmp
jno
in
in
inc
sub
lret
and
stc
stc
mov
shlb
sub
xchg
xor
or
sub
mov
mov
fidivs
popf
sub
data16
stc
push
cli
inc
shl
sub
cmp
insl
popa
mov
hlt
lock
push
fs
xchg
sbb
std
stc
lcall
scas
and
dec
jbe
and
or
jmp
inc
movsl
and
mov
fcos
pusha
cmp
jnp
bound
sbb
out
cmovnp
xchg
mov
aas
icebp
outsl
lods
mov
mov
movsb
arpl
out
pushf
cmpsl
sarb
or
adc
adc
cmp
lcall
hlt
pop
jge
mov
and
ret
push
push
jp
pop
inc
pop
ljmp
pop
pop
mov
sub
push
push
movsl
les
jg
imul
inc
shll
xchg
in
push
add
mov
lea
mov
fucom
pop
mov
push
scas
inc
cs
int
mov
mov
aaa
mov
outsl
icebp
inc
or
leave
adc
xchg
fidivl
cmp
push
push
imul
pushf
repnz
xor
cmpsl
pop
jle
xchg
sub
arpl
mov
out
hlt
repz
filds
out
add
fisubl
in
fadd
imul
cmp
repnz
and
add
sti
xchg
testl
xor
rcl
dec
mov
or
mov
fwait
movsl
outsb
dec
jb
iret
pcmpgtd
push
iret
mov
fcoms
das
inc
std
pop
or
add
fldcw
xor
add
push
cmp
cs
cmc
push
xchg
cld
jne
jne
push
cmpsl
and
scas
sub
in
aam
and
lret
aad
clc
mov
aaa
pop
popf
dec
out
inc
add
int
cmc
fisubs
inc
dec
lret
mov
mov
roll
mov
mov
ficompl
jne
xor
in
movsb
imul
cld
sub
mov
push
flds
repnz
imul
lret
sahf
sub
and
cmpsl
fnstcw
lock
stos
jnp
mov
jg
mov
sub
push
and
ficoml
pop
pushf
sub
in
push
jns
cmp
inc
fdivrl
sbb
enter
pop
pop
jne
mov
inc
pop
sbbb
push
shrl
cltd
dec
push
inc
nop
hlt
push
lock
adc
inc
jb
imul
cld
inc
jecxz
mov
in
jno
fiadds
xchg
xchg
call
mov
pop
push
mov
aam
ljmp
add
mov
nop
in
popa
popa
xchg
push
add
lock
and
cmc
cmc
bound
fwait
sbb
sarb
divl
inc
or
push
inc
or
cmp
pusha
xchg
pop
imul
out
scas
mov
aas
or
in
loopne
lret
sbb
test
shll
pop
and
mov
dec
int
insl
push
lock
mov
sbb
mov
ret
loop
int
mov
out
dec
cmp
inc
rcrl
pop
iret
jbe
ljmp
push
fistpl
xchg
or
bound
lds
add
pop
sub
xchg
lods
push
out
outsb
cmpsb
sbb
mov
cmp
jecxz
clc
jmp
cmc
int
lea
imul
dec
shrb
fidivs
mov
mov
or
or
fdivrl
mov
ljmp
xchg
ret
inc
sbb
mov
jb
fs
pop
ret
je
jecxz
xchg
data16
into
int
inc
ror
inc
movsl
pop
in
cmp
cmpsl
mov
and
scas
inc
and
popf
bound
sti
cmp
pusha
int3
imul
push
aad
gs
xchg
and
fs
stos
mov
push
xlat
pop
sti
scas
jmp
xchg
xchg
jbe
js
popf
test
frstor
outsb
cmp
popf
mov
push
xchg
mov
cmp
dec
gs
mov
fwait
aad
inc
hlt
or
cmp
mov
pusha
or
fmull
daa
dec
in
push
or
pop
add
jle
outsb
push
mov
pushf
and
dec
mov
in
gs
inc
pop
addl
jecxz
movsl
adc
les
dec
sub
cwtl
negl
inc
pop
shlb
popf
xchg
bound
mov
aam
out
stc
jne
xchg
adc
dec
sbb
pop
test
mov
movsl
adc
fnstcw
mov
vcvtss2sd
jns
loopne
mov
cmpsl
inc
test
pop
out
xchg
ficomps
fisubrl
mov
sub
lret
repz
adc
ret
call
mov
xchg
add
sbb
cmp
sahf
cld
jecxz
xchg
cmc
adc
mov
into
filds
dec
mov
test
lcall
sub
pop
pop
sar
das
sahf
xlat
aad
movsl
and
pop
arpl
sarb
lret
push
sti
xlat
dec
out
sbb
lahf
int
ss
dec
or
jne
mov
inc
in
adc
sub
stos
rcl
test
pop
fistps
xor
sub
cltd
xchg
in
and
clc
movsb
in
addr16
mov
ret
in
sub
aad
jge
sub
movq
xor
lds
fbld
jns
mov
push
xchg
icebp
cmpb
jge
or
inc
ficoms
add
xlat
in
jmp
fstpl
ror
sub
dec
in
sbb
xor
mov
or
mov
aad
outsb
das
loopne
push
in
mov
jecxz
and
add
aad
ljmp
nop
mov
push
or
inc
das
ss
div
cmp
iret
nop
lret
mov
dec
ret
inc
arpl
insb
scas
mov
sbb
mov
test
mov
adc
jb
xlat
mov
in
shl
les
jmp
cmp
push
or
pop
sbb
cmp
fisttpl
insb
lret
mov
mull
lahf
repnz
out
sub
fadds
in
sub
pop
cli
xchg
in
loopne
out
sub
add
push
xchg
lret
pop
adc
xor
sub
cmp
inc
mov
push
ja
lock
or
jnp
lea
or
mov
rolb
lret
es
repnz
imul
ss
gs
or
mov
fmul
imul
lock
shr
mov
arpl
inc
int
xchg
test
into
fucomp
add
gs
cmc
imul
clc
push
aas
cli
enter
mov
mov
divl
or
and
lods
aad
push
or
pop
and
jp
pop
xchg
sbb
xlat
push
sub
fwait
in
bound
imul
int
cmpsl
sbb
mov
jbe
stos
out
loopne
in
fisubs
xchg
insl
das
repz
or
inc
aam
mov
jns
in
xlat
insl
loopne
lods
mov
or
push
and
pop
lahf
xor
push
inc
sbb
orb
lret
cli
sub
mov
rorl
cmpsb
cli
inc
lods
xchg
les
rcrl
bound
repnz
addr16
jg
movsl
fwait
pop
xor
and
movsl
aas
sti
cmpsl
cmp
cwtl
out
sub
fmul
enter
mov
in
jbe
add
jp
fldcw
or
inc
movsl
cld
rcl
push
jae
xchg
cmp
cli
mov
pushf
int
sub
push
nop
fucom
or
mov
add
das
cmpsl
aaa
inc
dec
jecxz
mov
push
iret
cmp
decb
out
test
cltd
leave
lods
movsl
mov
push
inc
sbb
cmc
aad
push
mov
inc
sub
sub
xchg
cmp
clc
dec
sahf
insb
add
lods
jmp
add
leave
inc
dec
inc
arpl
jecxz
dec
jmp
add
lret
push
jp
outsl
adc
int
fldl
rol
fisubrl
mov
adc
or
cmpsl
int3
fnstcw
std
in
pop
mov
jo
out
xor
cmp
jmp
jb
inc
push
sbb
xchg
add
ret
inc
cli
in
repz
bound
jge
xchg
jb
inc
mov
fdiv
roll
call
mov
jecxz
xchg
cmp
xchg
stos
adc
scas
ljmp
ds
add
push
pushw
daa
mov
popf
add
and
xor
das
in
lcall
mov
fisubl
dec
sbb
pop
dec
adc
inc
sbb
pop
mov
fstps
cmp
push
jp
sbb
xor
adc
cmpsl
shrb
lds
hlt
cld
mov
js
adc
jae
ja
out
pop
lcall
inc
and
ja
jmp
ret
sbb
sbb
lahf
sub
jmp
pop
or
xchg
int3
fnsave
xchg
fnsave
shll
popa
movsb
sbb
hlt
fsubr
loope
dec
out
lea
test
pop
sti
imul
pop
aam
gs
mov
or
mov
add
pop
pop
mov
aas
mov
jno
ja
call
shrl
iret
fs
xor
fwait
add
cmp
push
lods
jb
fcmovbe
loope
xchg
pop
mov
mov
ss
subl
in
cmp
imul
fsubs
add
mov
xlat
bnd
call
mov
fistps
pushf
movsl
mov
leave
fisttpl
mov
mov
int3
or
add
mov
push
cltd
inc
adc
testl
jnp
mov
test
aad
mov
cmp
mov
es
sti
jle
xorl
shl
js
mov
adc
call
push
cmp
sbb
add
pop
pop
mov
shl
sub
imul
fcmovne
and
inc
je
xlat
imul
cmc
push
fwait
stos
into
shll
pop
fiaddl
fcomip
aaa
out
cmp
cmp
cmp
jo
or
add
ljmp
fs
sbb
and
xchg
pop
shl
int3
mov
es
pop
sub
sti
sbb
lods
mov
jg
call
jnp
dec
or
dec
mov
outsl
adc
loopne
mov
fiadds
mov
scas
jge
push
lret
pop
mov
and
in
mov
loop
popa
push
cmc
hlt
xchg
stc
mov
jl
add
cmc
jle
movsl
daa
cltd
sarl
jo
es
add
outsl
jmp
mov
imul
es
and
push
cltd
xchg
pusha
cmp
adc
pusha
roll
jns
adc
subb
icebp
scas
loopne
dec
inc
mov
pop
mov
aad
push
les
mov
popf
hlt
or
shrl
out
in
pusha
jo
or
add
xor
cmp
lret
xchg
repz
pop
mov
mov
fdivp
shl
in
sbb
call
insb
iret
mov
push
out
pop
in
rcrb
adc
inc
and
enter
aam
ror
inc
inc
pop
mov
in
sbb
mov
mov
scas
inc
in
scas
in
xor
insl
push
pop
aaa
pushf
lahf
movsl
fstpl
iret
lods
cltd
fildl
pop
or
dec
mov
mov
cmpsl
stc
sbb
pop
sub
jl
push
xchg
cmc
jno
pushf
fistl
cmc
ror
movsl
imul
fstpl
inc
rolb
cmp
stc
mov
sub
mov
and
add
pop
pop
mov
cmc
lea
dec
inc
data16
or
cwtl
popf
stos
xchg
push
push
stos
sbb
xor
repz
out
push
adc
jecxz
leave
int3
mov
cmpsl
or
push
std
test
in
cmpsl
std
aad
lcall
decb
xchg
push
jae
inc
int
imul
scas
fistl
mov
inc
sbb
stc
mov
pop
and
lret
pusha
out
mov
xchg
icebp
xchg
sub
pop
int3
int
jne
fnstsw
daa
push
pop
or
stos
ret
cmpsl
call
mov
ret
pushf
add
mov
push
mov
out
stos
and
cmpsl
cmc
pop
jmp
popa
push
cmpsb
mov
dec
aas
popf
jg
stos
and
inc
jle
or
in
xor
pop
loop
inc
into
pop
sahf
stc
push
in
pop
enter
dec
and
and
xor
jecxz
pop
or
dec
out
aaa
mov
in
ds
inc
out
cs
cltd
add
loopne
lcall
inc
sub
fidivl
clc
pop
and
cwtl
sti
ret
mov
sbb
out
xchg
dec
int
cld
mov
sbb
cmp
adc
imul
mov
lahf
stc
push
lods
dec
xor
bound
mov
fisubrs
es
sbb
cmp
add
loope
sub
add
ljmp
pop
mov
xchg
lods
stos
pop
jo
adc
lcall
cmp
cmp
inc
out
ret
cmp
es
icebp
int3
cli
sbb
addr16
add
movsb
sub
dec
or
sbb
jge,pn
das
lret
mov
jp
sub
cmp
add
xor
sbb
fists
negl
mov
cli
pusha
ja
inc
inc
enter
pop
and
sbb
fwait
loope
pusha
rorl
mov
cmc
dec
out
movsb
cmp
orl
mov
push
mov
aam
inc
cmp
fldenv
sbb
data16
sahf
repz
sub
add
mov
cs
add
test
lahf
jae
push
rorl
mov
pop
mov
lock
in
adc
xchg
insb
lea
and
in
stc
sbb
mov
das
ret
ftst
push
xchg
cs
sarl
or
sbb
and
mov
je
push
mov
es
and
mov
and
or
loopne
mov
mov
fildll
mov
add
and
xchg
out
mov
into
movsl
jnp
stos
adc
arpl
sbb
jp
fld1
mov
movsl
or
loope
aaa
dec
mov
loop
mov
in
jl
outsb
push
sub
xchg
xor
add
mov
mov
insb
fdivrs
push
lock
bound
dec
pusha
push
mov
pop
push
dec
push
pop
cmp
add
fs
gs
testb
pop
xchg
out
pop
sti
mov
into
mov
in
sub
lret
inc
push
mov
inc
adc
stos
fildl
dec
add
bound
add
pop
filds
add
mov
adc
fidivl
fnstenv
je
cmp
shl
pusha
arpl
das
lcall
test
shrb
xchg
sub
test
sub
mov
pop
out
sbb
pop
pop
aas
pop
mov
inc
or
bound
fldl
in
pop
mov
mov
ror
or
cld
repnz
jmp
jmp
iret
into
xchg
out
stc
pop
jl
out
mov
mov
xor
mov
lds
mov
add
xor
incl
pop
sub
mov
or
mov
or
dec
push
loop
mov
mov
and
or
loope
mov
test
inc
lret
mov
inc
jns
jecxz
inc
pushf
fisubrs
fidivs
mov
test
adc
pusha
pop
jae
mov
fcomps
fcomi
jbe
fdiv
and
jb
cmpsl
ljmp
xor
negl
out
lock
cld
inc
adc
mov
inc
jecxz
inc
mov
push
in
out
lcall
out
stos
icebp
std
pop
sub
mov
push
pop
pop
inc
jno
mov
dec
cmc
cmc
jno
pop
stc
in
sbb
leave
pusha
movsb
das
gs
sbb
ret
loopne
dec
dec
xchg
lahf
pop
inc
in
cli
push
mov
stos
mov
pop
fld1
push
gs
ret
ret
cmp
cwtl
insb
cmpsb
loope
mov
jmp
ljmp
repnz
mov
loop
bound
inc
and
add
jne
jne
xchg
addr16
lcall
add
sub
sbb
lods
cld
shll
loopne
add
sbb
pop
pop
jl
loopne
lods
sub
mov
sarb
hlt
fwait
jle
sti
push
push
ret
in
iret
loope
lock
adc
xchg
add
mov
ret
data16
jge
ficompl
gs
push
dec
loope
js
sahf
sbb
cltd
outsb
xlat
shrb
int3
pcmpeqb
notl
mov
sti
mov
mov
pop
xchg
pushf
in
add
cmp
iret
lret
xor
test
outsb
add
test
xor
out
sarl
js
fadds
fsubrs
or
fxam
pop
lahf
or
cmp
xor
addb
cmpsl
sub
xchg
sti
shlb
push
push
bound
pop
das
js
add
loopne
add
in
ljmp
or
sahf
fwait
jmp
pop
add
push
loope
lcall
sbb
icebp
xchg
aaa
std
jl
cs
aad
sti
lock
xor
push
pusha
add
jp
xchg
mov
in
jg
fwait
cmp
flds
lea
fimull
movsl
mov
insb
testl
mov
out
mov
jge
sub
stc
jne
pop
pushl
dec
fs
mov
rorl
inc
loop
or
push
roll
adc
jecxz
cmp
test
into
pop
and
fidivrs
push
sbb
fistps
push
sbb
sub
and
aaa
aas
lahf
sti
lret
shlb
scas
loope
sbb
cmp
insb
adc
pop
popa
sahf
sub
mov
or
jne
mov
pushf
pop
fildl
inc
mov
inc
stc
bound
fs
xchg
int3
jnp
int3
ret
ror
mov
jns
fwait
sbb
int3
push
iret
push
test
sar
in
sub
rol
pushf
inc
mov
inc
fs
nop
inc
andl
xchg
inc
cmp
in
out
add
aas
data16
mov
push
loope
test
add
rcrl
jge
int3
jmp
int3
pusha
and
jle
cwtl
cmp
push
out
mov
or
aam
cmp
flds
lods
push
int3
sbb
cld
in
push
stc
pop
and
sbb
scas
data16
inc
loopne
add
loopne
mov
mov
cld
lcall
sbb
loopne
sahf
mov
xlat
or
bound
mov
xchg
mov
jo
pushf
lret
dec
arpl
inc
outsl
push
fcompl
int
inc
cmp
ljmp
das
je
repz
and
or
and
into
dec
push
arpl
or
out
push
icebp
pop
inc
mov
cmp
std
fnstcw
sahf
insb
mov
lret
scas
cmc
lods
lock
add
aad
int3
cmp
dec
in
or
popf
xchg
hlt
adc
popl
and
mov
in
dec
cwtl
lret
xchg
sub
jl
aam
out
pop
push
mov
mov
andb
pop
cli
icebp
int
frstor
aad
adcl
rcr
popl
add
fnsetpm(287
popf
mov
repnz
cmp
in
mov
inc
sbb
aad
jb
imul
jne
mov
xor
fs
jbe
adc
ja
cmpb
addb
inc
sub
in
jle
cmpsl
int3
adc
push
push
sbb
pop
mov
pusha
inc
mov
mov
repz
dec
inc
xor
jnp
inc
inc
lds
cmc
and
inc
dec
outsb
cmp
ds
fisubrs
pop
mov
jne
mov
call
pop
cltd
sarb
lret
mov
shll
mov
xor
jl
sub
jnp
jecxz
call
cmc
pop
insl
adc
out
in
and
mov
xlat
test
movsl
repz
inc
push
pop
sarl
mov
test
sub
jg
cltd
mov
cld
push
cmpb
fimull
movsl
arpl
in
aad
ss
leave
sbb
xor
jmp
lods
movsl
test
mov
cltd
in
rolb
cwtl
sbb
and
or
fwait
sti
jno
loopne
leave
mov
cmp
movsb
xor
mov
pop
jecxz
dec
jo
loop
lahf
sbb
adc
add
iret
dec
test
xor
lret
test
add
mov
pop
cmp
jno
push
pop
fwait
ret
popf
xchg
fsts
dec
or
mov
lret
fildl
push
in
lahf
leave
pop
mov
int
addr16
jbe
pop
adc
xor
lret
mov
insb
notb
pop
mov
leave
mov
aad
cmp
dec
sti
jbe
inc
daa
fs
and
jno
es
push
adc
popa
mov
dec
mov
lods
mov
shrb
rcrl
nop
int3
cmpsb
iret
fxch
jbe
ret
loopne
xor
xchg
int3
push
sbb
jnp
and
enter
cmp
ficompl
fnstenv
call
sarb
and
mov
xchg
pop
xor
cmpsl
mov
mov
mov
pop
inc
aam
jnp
and
xchg
repz
mov
or
mov
mov
sbb
arpl
mov
into
mov
and
jecxz
test
push
into
imull
sbb
pop
ljmp
pop
fs
xchg
cmp
cmc
inc
call
cmpb
call
adc
add
ret
scas
fcom
adc
or
out
das
out
je
or
pop
loop
jmp
mov
inc
out
rclb
mov
add
cmpsb
and
cmpsl
add
mov
roll
and
aas
add
repnz
adc
jmp
and
mov
bound
fisubrl
jb
neg
popf
divb
in
or
cmp
inc
push
push
mov
sub
jns
shl
jl
mov
repz
xchg
jg
fwait
sbb
mov
rcr
fldt
push
cmc
pop
fwait
pop
jg
sti
sub
and
aaa
cmc
add
mov
cs
fistpl
push
push
fdiv
mov
bound
ljmp
sarb
pusha
daa
sbb
fnsave
popa
xchg
ret
cmp
mov
sbb
aam
aad
arpl
mov
sti
arpl
lcall
orb
ljmp
mov
pop
sbb
fcmovnb
mov
jmp
xor
iret
cld
inc
repz
xlat
repnz
movsl
in
cmc
xchg
ret
pop
mov
cmc
lret
mov
in
popw
jle
inc
sub
idivl
cmp
mov
test
mov
pop
sub
sbbl
fcmovb
dec
out
add
mov
rcr
jno
add
pop
in
pop
cmc
psubq
pusha
adc
sti
or
mov
icebp
add
ret
lret
mov
movsb
cmc
fs
sbb
pushf
pop
popf
rolb
mov
aad
scas
ljmp
in
cmp
push
pop
inc
xchg
add
xchg
mov
add
fcmovne
cmp
mov
pop
or
jp
mov
mov
lret
roll
xchg
cltd
inc
in
jle
cs
stos
repnz
stc
loop
lahf
sti
xchg
sahf
iret
cwtl
mov
xor
cs
mov
and
sahf
fucom
mov
fcomps
lret
in
jmp
int
movsl
fyl2x
mov
fwait
push
movsl
aas
pop
lods
inc
push
cltd
push
mov
mov
pop
mov
mov
inc
add
aam
sbb
fdivrl
add
in
mov
mov
movsl
push
cmp
sub
fucomp
jne
sti
das
lahf
roll
mov
mov
cwtl
cmc
push
inc
lret
or
lcall
lods
or
sub
sub
hlt
ret
jo
xor
cs
adc
pusha
mov
or
cli
sarb
inc
adc
repnz
sbbb
ljmp
ds
sbb
add
push
dec
icebp
js
in
mov
es
andb
fadds
out
nop
scas
cmpl
mov
cmp
or
js
jg
cmp
int3
rorl
insb
pop
add
inc
cmc
or
cmp
mov
mov
lahf
mov
rorl
les
mov
and
dec
pop
adc
dec
xchg
push
in
data16
std
push
mov
popa
jmp
and
mov
xchg
int3
out
inc
add
in
sbb
ret
pusha
push
adc
outsl
rcl
pop
xchg
int
pusha
lock
push
loop
popf
inc
in
std
bound
repz
cltd
inc
and
push
test
insb
inc
movaps
fmuls
sub
sub
hlt
xchg
icebp
pop
push
ljmp
in
sub
mov
xchg
in
in
push
out
mov
pusha
int3
pop
xor
test
stc
pop
fs
sub
int3
sbb
jle
les
mov
hlt
push
movsb
testl
icebp
jno
jl
add
in
jo
pop
add
and
jecxz
in
sub
sarb
mov
ja
in
cmp
add
lret
or
leave
pop
outsb
rolb
scas
imul
std
mov
or
mov
nop
rcrb
jmp
inc
mov
out
push
stc
and
add
paddsb
jnp
nop
dec
mov
cmp
xchg
ljmp
popf
sbb
test
jp
pop
lahf
outsb
mov
jns
cmp
pop
pop
js
lcall
repnz
xchg
dec
add
pop
ss
mov
mov
popf
xchg
mov
cld
push
inc
stos
popf
or
inc
sbb
xchg
or
sbbb
into
jo
popf
loop
test
cld
fadd
lret
cld
inc
jecxz
cld
fsubs
pop
iret
jle
or
xor
xchg
inc
clc
cmp
in
imul
add
inc
jnp
call
lret
pop
mov
or
mov
xor
aam
sbb
insb
iret
adc
cmp
add
cltd
and
push
xchg
push
fldcw
pop
mov
sbb
loope
int3
outsb
loop
test
dec
ja
rolb
popa
repz
pop
ja
push
mov
mov
cs
loop
and
add
inc
outsl
aaa
pop
int3
cli
xchg
push
jno
int3
jmp
sub
int
sahf
fdivrl
push
mov
dec
inc
lret
out
push
cmp
dec
shll
test
inc
movsl
xchg
pop
sbbb
inc
aas
es
sbb
xchg
sub
jecxz
fnstenv
sbb
arpl
fstps
fiadds
push
inc
add
mov
push
mov
mov
pop
ret
or
movb
push
cmpsl
pop
pusha
push
fs
xor
insl
push
stos
in
xchg
cmp
scas
sbb
inc
and
nop
cmp
fisttpl
pop
fsubs
mov
repz
fcoml
add
into
aad
inc
dec
jecxz
insl
popf
jns
in
ficoml
fwait
xor
fildl
into
out
xor
adc
push
push
sub
jne
lods
sbb
fs
mov
insb
inc
nop
mov
xchg
sbb
mov
or
jnp
in
cmp
adc
jno
aam
or
fistps
js
stos
sbb
arpl
mov
addr16
loop
push
icebp
stos
les
lret
icebp
add
adc
lods
mov
aas
or
mov
inc
sti
sub
cs
pop
mov
mov
ljmp
pop
push
ds
sub
or
xor
jge
pop
stos
imul
push
jl
clc
sbbb
fcmovnbe
pop
xor
jno
sub
sarl
xchg
mov
les
pop
sbb
sub
mov
int
add
cmpsb
test
fisttpll
fsubrl
lret
pop
cmp
in
popa
test
shll
mov
stc
cmp
jno
jns
jecxz
shrb
mov
fmull
sbb
add
out
cmp
pop
ja
xchg
scas
int
mov
sbb
or
cmpsb
shlb
mov
or
xchg
jecxz
and
inc
and
hlt
addr16
fmul
cmp
mov
lods
aaa
sarb
push
out
out
dec
adc
test
add
stos
jmp
inc
mov
adc
and
cmpsb
mov
jmp
enter
mov
insl
scas
loop
std
cmp
cmpsb
fsubrl
adc
push
push
jno
loope
adcb
lret
rorl
cmp
cwtl
popf
sbb
xchg
jbe
or
repnz
sub
add
and
xchg
or
and
push
or
mov
cwtl
ds
int3
jp
push
leave
sbb
mov
cmp
rorb
and
sub
ret
push
rorl
mov
loope
idiv
cmp
fdivr
cltd
in
std
and
push
popf
push
xchg
loop
mov
xlat
or
xchg
mov
add
mov
sbb
out
mov
jo
jp
pop
test
imul
fs
cmp
dec
inc
mov
roll
pop
inc
push
outsl
mov
fwait
or
sbb
mov
mov
lret
cs
shr
out
into
jb
es
cmpsb
out
or
sti
sub
scas
inc
mov
popl
add
inc
fcompl
mov
and
cmp
sub
mov
stos
out
fdivrp
and
repnz
mov
fisubl
add
cmp
mov
aad
mov
ljmp
xchg
ret
and
xor
dec
pop
add
das
add
daa
gs
loopne
push
adc
std
jg
out
aad
pop
les
push
aam
shrb
sbb
add
dec
aaa
popf
call
add
fmul
pop
test
lock
xchg
movsl
sbb
cmpsl
jns
in
js
xchg
sbb
lds
adc
xor
push
mov
lahf
lods
mov
sbb
pop
inc
aam
js
loope
dec
in
or
loopne
jno
sub
inc
sar
sbb
imul
push
inc
add
dec
fistps
iret
fcoms
mov
jae
cltd
not
icebp
outsl
clc
pop
repz
mov
fildll
push
in
push
mov
sbb
add
sbb
mov
or
sbb
sub
mov
in
repnz
out
ljmp
sub
stc
jbe
mov
cli
out
lcall
ss
mov
pusha
rclb
dec
andb
push
into
inc
fnstsw
lods
sarl
bnd
adc
popa
xchg
insl
mov
faddp
jp
mov
mov
mov
test
inc
inc
jne
bound
mov
iret
fildl
jmp
mov
xor
pop
adc
cmp
fnsave
fiaddl
mov
outsl
or
or
inc
cvtps2pd
js
push
mov
and
movsb
pop
js
push
jg
xor
clc
subb
jecxz
bound
push
aad
xchg
insl
jecxz
outsb
into
sbb
lcall
bound
or
mov
notb
xchg
orl
adc
lcall
aad
repnz
sarl
add
or
sub
ret
lret
ror
jns
add
sub
popa
in
inc
add
aas
in
shrl
mov
out
fdivl
and
aam
mov
incb
iret
push
or
push
jge
setbe
cmp
loop
fcomps
sub
xchg
dec
jl
mull
or
stc
cmp
cmpsb
out
xchg
jne
inc
and
cmpsl
in
inc
scas
outsl
mov
jmp
clc
js
insb
mov
int
add
popf
add
mov
mov
sahf
xchg
jp
lods
ljmp
ljmp
push
dec
bound
xorl
pop
sbb
xor
jg
sub
mov
and
jp
inc
jmp
dec
aad
push
js
pusha
push
sub
sbbb
repz
loopne
push
cmpsl
push
je
and
mov
mov
ficoml
or
iret
inc
sahf
and
clc
lret
lods
cmpsl
jge
sub
mov
add
in
xchg
pop
mov
pop
ja
test
dec
inc
fstp
movsb
repnz
mov
arpl
clc
lea
scas
mov
sub
pop
jmp
sbb
or
ret
sbb
test
xor
fidivs
testb
in
lret
mov
in
je
sbb
roll
clc
into
fistl
mov
mov
sbb
lret
mov
push
shll
push
stc
jmp
xor
dec
popf
add
jp
test
test
jl
fadds
push
movsl
into
rcrl
sar
jecxz
fiaddl
lret
sti
sahf
xlat
das
ret
adcl
in
push
mov
rep
mov
clc
testb
je
cltd
call
decl
inc
mov
mov
pop
pushf
cmp
popf
imul
sub
call
jmp
imul
add
lds
lret
cmp
sbb
add
cmp
mov
repnz
insl
jae
rorl
jecxz
pop
sbb
sbb
cmp
pop
mov
or
out
cltd
pusha
push
fldl
lret
add
loopne
pusha
mov
lahf
es
push
jge
lcall
pop
cmp
cld
out
lods
test
push
xchg
mov
cmp
enter
addl
push
add
dec
rorl
std
pop
cmc
xor
push
lahf
nop
aad
dec
xchg
mov
pop
ja
jmp
in
movsl
loope
sbb
fisubrs
cmc
pop
xor
mulb
jns
out
or
fincstp
cmpsb
or
rcll
fisubrl
fs
or
mov
dec
pop
arpl
insl
sbb
jmp
sti
add
fcompl
arpl
mov
jmp
bound
rcrb
aam
jge
fcomps
sub
loop
shrl
pop
inc
push
add
repnz
movsl
data16
cmp
shll
rcrb
cmp
shll
push
test
outsl
push
int3
int
cmc
inc
hlt
stc
xchg
add
pusha
add
clc
fnstenv
and
inc
push
push
xchg
sub
fsubs
dec
movsb
popf
lret
fldl
push
lock
aaa
jnp
lret
cmp
imul
daa
popf
xchg
test
push
xor
repz
fldl
insb
in
push
push
mov
jb
sti
pop
fisttpl
hlt
mov
movsl
xchg
movsb
ss
mov
pop
popa
aad
loope
mov
mov
dec
cld
cltd
mov
cmp
or
dec
sbb
lahf
decl
pop
sub
lcall
ss
movsl
mov
mov
mov
out
adc
add
loopne
test
mov
pusha
mov
adc
push
je
popa
cmpsl
fidivl
movsb
adc
pop
rolb
faddl
xchg
and
inc
mov
pushf
rcrl
or
xchg
in
scas
fsubrs
jb
mov
mov
in
jmp
cmp
loopne
inc
cmp
jp
roll
scas
movsb
shrl
int3
sbb
in
mov
add
cmp
decb
in
and
rorb
aad
popa
testl
mov
fs
iret
inc
mov
sbb
jno
push
into
xor
add
pop
data16
xchg
fisttps
xor
adc
cmp
std
pop
sti
fnstcw
pop
stc
insl
sbb
cmp
iret
fcomi
mov
cmp
or
add
in
cmp
push
push
mov
imul
loopne
dec
out
loope
sub
in
vminps
and
mull
cmc
inc
negb
jmp
aaa
sbb
mov
and
mov
cmpsl
sub
mov
leave
imul
ret
jmp
fwait
jge
sub
cmc
adc
repnz
xchg
pop
or
cmp
ret
out
inc
or
cwtl
in
insl
int3
outsb
xchg
jp
jo
scas
mov
fiaddl
imul
dec
push
les
mov
clc
pop
rcrb
sbb
sbb
ss
cld
fmuls
mov
dec
or
mov
int
xchg
push
mov
mov
mov
adc
add
cmpsl
js
mov
mov
rorb
out
mov
mov
pop
std
repnz
out
and
pop
stos
push
pop
pop
sbb
inc
or
pusha
pop
std
jge
mov
lock
outsl
ret
dec
xchg
sbb
mov
sub
xor
cmp
mov
stos
lret
lods
or
add
sub
rolb
stc
push
nop
sbb
mov
flds
popa
shrb
xchg
stos
repnz
sbb
push
jecxz
das
mov
fcmove
or
repnz
mov
repz
inc
lret
and
int
pop
inc
push
sbb
xchg
mov
jle
arpl
ror
aam
dec
test
dec
mov
sbb
movsb
sub
sub
inc
jnp
pop
sbb
out
add
cmp
add
xchg
inc
fidivrl
daa
push
leave
clc
and
icebp
sub
xor
test
lcall
add
inc
insb
and
fdivr
imul
dec
mov
dec
push
add
fs
mov
movsb
sar
lret
insl
jmp
rclb
add
cmp
or
mov
push
in
daa
xlat
pop
pop
and
insl
inc
sbb
sti
lahf
stc
adc
dec
xchg
jae
movsl
mov
es
faddl
mov
pop
mov
int
add
fsts
incl
add
out
xor
ss
call
test
mov
xchg
stc
sti
dec
inc
pop
out
pusha
or
icebp
repz
push
popf
jecxz
push
push
inc
mov
addr16
rolb
repz
mov
adc
pop
pop
xchg
sahf
cmc
insb
lcall
inc
push
push
stos
les
sub
inc
dec
jmp
loopne
pop
lea
xchg
movsbl
iret
cltd
adc
mov
in
std
cmp
pop
popf
ljmp
mov
mov
rep
xchg
idiv
addr16
loop
add
jmp
fs
sub
imul
xchg
cmc
hlt
cwtl
shll
mov
mov
decb
jecxz
filds
and
add
sbb
sbb
ret
shll
sbb
les
fnstcw
mov
mov
pop
jle
push
loop
or
or
add
mov
lret
loop
or
cmc
mov
cwtl
aam
jg
in
loopne,pt
in
jmp
sarl
xor
inc
jle
jne
test
pop
xor
jp
int
inc
es
pop
cmp
vmulpd
iret
out
cmp
pop
cmp
roll
xchg
push
imul
jge
cmpsl
outsb
in
sub
cmpsb
inc
mov
inc
or
es
push
nop
mov
sbb
cmp
sub
in
inc
movsl
popf
mov
jne
xor
inc
adc
xor
cmp
sti
pop
xlat
sbb
or
aaa
pop
xchg
xchg
add
mov
mov
jp
loop
push
dec
out
add
fistpll
outsl
cmp
or
mov
mov
add
mov
rclb
popf
outsb
test
lret
test
xor
push
decl
arpl
int3
lahf
lods
cmp
xchg
sahf
sbb
mov
std
push
rorb
out
cmpsl
xchg
cltd
sub
lea
popf
or
xchg
add
and
stos
pusha
iret
and
or
jg
add
mov
sti
gs
mov
scas
dec
cmp
jmp
popf
add
nop
fldcw
xor
out
sbb
pop
ds
repnz
out
push
add
js
aam
and
aad
adc
push
mov
cmp
inc
inc
push
call
scas
pop
sti
arpl
cmp
dec
cmp
fdivrs
pop
fwait
sbb
jg
sbb
xor
jp
xchg
mov
int3
pop
lods
mov
mov
pop
test
adc
jo
adc
sbbb
mov
cmp
jecxz
fucomp
rcl
data16
dec
popf
pop
push
sbb
sub
adcl
and
lds
pop
sti
cmc
fwait
sub
insb
rcrl
loopne
jl
fldl
aad
cs
push
adc
cmpsl
test
add
dec
dec
cltd
fsub
jmp
sbb
mov
and
push
adc
sti
jle
rol
dec
sub
lret
jne
mov
iret
movsl
inc
or
mov
icebp
out
leave
mov
or
popf
push
inc
jecxz
xchg
clc
jno
mov
lahf
inc
stos
fldcw
jmp
jmp
stc
jns
in
pop
mov
xchg
push
inc
add
pushf
push
negl
jle
ret
lea
mov
inc
mov
cmp
cwtl
inc
cld
stos
adc
and
ljmp
add
inc
aad
adc
xchg
inc
dec
aam
mov
imul
cmp
push
adc
and
in
mov
lret
push
test
cmp
mov
outsb
jle
sarl
jo
jb
cmpsl
mov
int3
push
sti
xlat
push
nop
loope
cmp
mov
inc
clc
mov
ror
mov
mov
std
pop
test
mov
cmpsb
int3
pop
mov
jne
aam
fstp
movsw
int3
mov
or
cmp
sahf
aad
cmp
in
mov
ds
sub
cmpsl
fisttpll
mov
repz
xchg
aad
mov
movsl
sbb
sbb
mov
and
gs
ror
push
adc
pop
aad
pop
aam
fwait
into
and
mov
cmp
insb
enter
jno
dec
pop
loop
notl
inc
sti
outsl
mov
fstl
sub
adc
cmp
push
clc
sahf
add
mov
test
cmp
iret
cld
bound
add
shlb
mov
aad
mov
add
add
dec
pop
into
imul
adc
pop
sbb
xor
inc
cwtl
sbb
mov
and
andl
pop
int
lods
dec
adc
cmpsl
push
jns
aas
push
loop
icebp
clc
repnz
xchg
pushf
rorb
mov
jb
mov
imulb
xchg
cmp
pushaw
sbb
pop
inc
stos
call
push
test
movsb
repz
xchg
ljmp
popf
fmulp
lcall
lahf
popf
push
or
inc
jl
stos
sarl
in
pop
sub
cmpb
or
pop
in
std
sbb
and
in
jbe
dec
sahf
adc
mov
pop
and
cmp
inc
std
imul
jmp
mov
jnp
pop
in
and
lcall
jno
mov
fidivrl
inc
out
out
ficompl
add
int3
mov
rorl
add
out
pop
add
jnp
std
dec
and
enter
xor
and
xchg
xchg
popa
mov
pusha
fldenv
andps
icebp
rolb
inc
cld
ret
xor
or
into
insl
out
xchg
aaa
xchg
add
iret
mov
ret
fucomip
out
paddw
push
lock
sbb
fcmovne
mov
mov
ret
std
iret
aad
fsubl
jmp
mov
in
int3
nop
fnstenv
in
jmp
dec
nop
fs
xchg
push
cld
jae
sbb
js
into
push
cmpsl
mov
popf
add
dec
inc
lds
cld
iret
mov
lods
pop
in
flds
push
stc
stc
jecxz
jo
add
add
adc
rcrl
inc
into
push
xor
dec
mov
sub
lock
out
xchg
fidivl
lcall
pop
jns
decl
rcrb
and
repnz
aas
push
ds
jnp
xchg
fdiv
dec
jge
popl
inc
dec
add
fdiv
popf
jecxz
out
sbb
fadds
hlt
arpl
inc
sbb
and
mov
stc
xor
mov
incl
aas
stos
flds
inc
dec
out
jle
loope
mov
jae
lret
or
jb
inc
lret
sbb
cmp
mov
adc
pop
pop
cmp
fisttps
xchg
iret
ja
call
loop
sub
jecxz
leave
in
test
add
ljmp
mov
bound
lret
cmc
xchg
push
fcmovu
ljmp
or
mov
mov
and
frstor
inc
push
ret
das
gs
iret
add
dec
xchg
push
or
push
sub
inc
packuswb
insl
imul
or
pusha
sbb
stc
inc
adc
inc
je
pushf
in
lahf
mov
add
adc
jl
add
mov
mov
lret
imul
inc
mov
mov
push
sbb
test
mov
fs
fadds
add
bound
rcr
adc
cmp
and
fcoms
mov
aad
mov
rolb
rorl
jbe
jp
sub
push
bound
lret
mov
mov
cmp
cmc
or
mov
or
push
imul
pop
sbb
mov
in
add
jecxz
pop
fcmovne
cmp
pop
mov
lcall
sub
shrb
jno
sub
lret
push
or
icebp
int3
js
bound
mov
adc
in
xchg
push
arpl
sbb
adc
addl
out
xchg
cmpsb
jl
mov
push
pusha
das
mov
inc
fcompl
sbb
cmc
repnz
loope
cltd
enter
in
xchg
decb
pop
jecxz
cmpsl
iret
ljmp
lret
adc
jmp
in
rcl
push
lods
arpl
in
xchg
mov
push
cmp
push
mov
out
mov
imul
cli
inc
adc
lds
mov
pop
shlb
cmp
sbb
fsubl
fisttps
inc
sbb
push
fs
mov
dec
mov
dec
mov
jg
push
ror
jne
jmp
mov
push
fs
cmpsl
mov
dec
lock
mov
sub
mov
pop
cmp
pop
sarl
int
xlat
addl
dec
push
mov
in
in
add
stos
xor
mov
jbe
mov
mov
sub
ror
pop
cmp
insl
push
mov
sbb
pop
fs
adc
adc
lret
jbe
pop
xorl
mov
aad
sahf
int
mov
inc
stc
pop
cmp
or
cmpsb
cld
push
sarb
insl
hlt
mov
and
std
mov
xlat
xchg
aad
jmp
push
pushf
cmp
shr
repnz
lahf
loope
movsb
pop
pop
icebp
nop
movsb
movsb
add
insb
push
adc
pop
imul
lret
inc
xor
repz
fwait
mov
or
aas
cs
lret
mov
outsb
jns
lcall
xchg
out
scas
add
mov
and
hlt
daa
mov
or
adc
jge
pop
bound
das
jo
imul
stos
lcall
int3
dec
leave
or
es
aam
or
gs
jo
popf
add
mov
add
or
xchg
lret
fwait
nop
pushf
jbe
aam
push
mov
adc
pop
repz
mov
sahf
in
mov
shl
push
xchg
xchg
sbb
and
mov
in
mov
cmp
pop
add
iret
mov
or
dec
popf
lret
jg
js
xchg
or
addl
div
xchg
pop
cmp
insl
outsl
lock
inc
pop
pop
jno
mov
loope
dec
pop
mul
sub
sti
mov
repnz
das
out
cmc
cmpsl
dec
adc
add
je
cmpsl
inc
push
xchg
sbb
add
sbb
jmp
shrb
add
add
mov
sti
sbb
mov
mov
mov
and
in
mov
adc
cmp
mov
mov
xchg
xor
mov
test
dec
xor
inc
lock
popa
ficoml
mov
dec
mov
mov
and
dec
std
add
into
inc
aas
pop
add
pushf
int
mov
fisubs
and
cmp
fnstenv
in
adc
inc
movsl
test
jne
pop
jmp
shl
hlt
mov
sti
pop
lds
push
addr16
rcrb
fildl
sahf
lods
jge
test
fstps
std
fistpl
xor
mov
push
shrl
sbb
mov
dec
fstpl
fistpl
iret
lahf
adc
lahf
adc
int
ds
mov
pop
cld
ret
add
push
push
filds
ss
xor
fisubl
adc
xchg
pop
push
inc
loopne
insl
mov
add
or
jmp
adc
popa
push
repz
or
sarl
in
scas
stc
adc
scas
mov
pop
lret
test
loop
jno
xlat
mov
outsl
sbb
enter
lret
and
leave
cmp
cmpl
and
ret
push
rorl
jae
pop
sbb
or
and
lret
mov
xlat
adc
push
xor
loop
cltd
pop
xor
sub
lret
cld
xchg
mov
in
rcrb
inc
out
call
cmp
cli
fisubrl
or
jnp
jle
fcmovbe
push
shlb
js
add
fcoml
mov
in
addl
sub
outsl
int3
cmp
orb
cld
aad
int3
xor
mov
add
lret
popa
dec
adc
loope
mov
sbb
jp
push
sti
shlb
pop
clc
xor
in
cmpsb
rorl
mov
lods
mov
in
aaa
cltd
fs
repnz
int
push
and
or
mov
jecxz
and
in
scas
mov
mov
faddl
cmp
cs
mov
out
sub
inc
rcll
add
int3
jnp
dec
test
mov
fsub
repnz
inc
mov
xor
mov
pop
sbb
mov
mov
mov
push
sub
push
cmpsb
ljmp
lods
pop
into
mull
xchg
push
ret
jecxz
fistps
in
or
iret
mov
xor
sahf
mov
adc
add
cmp
pop
cmp
ja
or
in
rcl
xchg
mov
or
roll
in
lret
ss
jmp
cmp
loop
es
outsl
mov
fimull
dec
rolb
push
cs
inc
mov
pop
adc
inc
mov
jl
adc
shll
ja
arpl
pop
sub
lcall
int3
ljmp
pop
jae
in
inc
std
aad
fcompl
xchg
lds
in
adc
fildll
lret
dec
ljmp
mov
mov
sbb
pop
jo
sub
movsl
loop
mov
jbe
hlt
mov
dec
jnp
out
pop
mov
inc
xchg
in
xchg
add
call
fs
mov
xor
pop
ficoml
mov
and
add
loopne
jp
cmpsb
aad
sbb
sahf
shll
andl
cmp
adc
pusha
cmp
andb
adcl
test
pusha
add
push
fcmovne
pop
cmp
xor
mov
xorb
lret
jno
inc
jno
arpl
jb
mov
add
xchg
xor
cmp
test
and
pop
in
mov
xchg
out
mov
std
push
sbb
lahf
push
jecxz
fdiv
inc
mov
cmp
call
jmp
jle,pt
sbb
xchg
in
adc
lret
push
sub
adc
pop
arpl
dec
aad
cmp
jnp
xchg
mov
mulb
push
mov
inc
gs
cmp
push
in
xchg
pop
bound
inc
cltd
or
jg
lahf
push
add
dec
and
gs
test
push
lret
dec
movsb
add
int3
call
lret
inc
mov
mov
lret
jmp
in
cmp
ud1
in
sub
lds
mov
pop
sub
mov
sarl
mov
insb
clc
test
addr16
fimull
iret
pop
inc
into
leave
cmp
mov
hlt
pop
gs
divb
aas
and
inc
mov
pop
cmpsl
sti
and
int3
gs
out
sub
popa
xchg
jbe
and
add
fdivrs
nop
xchg
add
cltd
out
push
mov
movsl
mov
cld
inc
aas
mov
dec
int3
add
in
jmp
ret
out
test
or
mov
popf
mov
in
mov
sbb
test
push
inc
clc
lret
lcall
inc
jbe
mov
mov
shrb
inc
jmp
and
xlat
lds
fdivrs
push
popf
fists
repz
js
mov
cmp
push
fnstsw
mov
dec
cld
inc
scas
xchg
shlb
hlt
inc
xchg
xchg
repnz
stc
cmc
fdivrs
xchg
xchg
adc
addr16
xchg
mov
arpl
adc
push
jmp
or
inc
jle
in
testl
lea
insl
and
in
imul
mov
fists
faddl
sti
adc
add
mov
and
int3
data16
push
push
push
lcall
cltd
inc
add
loopne
insl
cmpsb
stc
in
fldl
fstpl
mov
ret
push
and
jl
pop
leave
addr16
aam
loop
add
cmp
in
int3
xchg
sar
mov
mov
insl
in
and
mov
dec
insb
in
leave
je
add
add
mov
loopne
push
stos
push
cmp
or
pop
cmp
mov
faddp
cmp
popf
mov
int
sub
push
or
popa
pop
test
iret
lea
mov
mov
cmp
mov
mov
movsl
push
mov
sbb
lcall
jnp
sti
out
cmp
popf
rcll
les
imull
aas
stos
adc
rcll
mov
icebp
jge
add
out
pushw
test
flds
pop
aam
push
mov
xor
and
out
inc
int3
clc
jne
bound
clc
vprotb
cli
outsb
pop
cld
mov
mov
xlat
inc
sarb
scas
xor
and
cmpsb
xor
or
loop
mov
jb
mov
jb
fstpt
divb
lock
lahf
sbb
out
int3
sti
and
lret
fmull
into
dec
or
in
std
mov
test
adc
inc
sbb
sbb
ror
adc
into
push
in
inc
rcrl
push
stc
inc
and
in
pop
in
fldt
xor
jle
adc
add
cmpsl
fnsave
shr
jg
aam
sbbb
xchg
mov
push
sbb
sar
std
ja
lods
icebp
mov
xchg
daa
push
test
cmpsl
pop
push
inc
sarb
mov
inc
ljmp
mov
push
adc
pop
insl
mov
dec
gs
adc
mov
sti
inc
xchg
sahf
rcr
add
dec
int3
and
outsl
mov
fstps
lret
sub
pop
push
imul
push
push
popa
sub
mov
sbb
inc
push
sub
int3
add
nop
gs
xchg
push
mov
or
or
cld
in
mov
fdiv
movsb
sahf
sbb
mov
adc
cli
out
add
mov
movsl
scas
popf
mov
repnz
mov
push
or
or
pop
adc
xchg
in
fnsave
fimull
mov
push
jmp
inc
icebp
and
rcl
out
xor
popa
and
dec
inc
xor
sahf
rclb
rcrb
jl
add
popa
add
mov
ja
sub
sbb
std
iret
inc
cmp
in
inc
push
dec
pop
add
mov
cmp
jle
aaa
adc
cmp
shlb
mov
mov
push
xchg
ja
cmpsb
push
int3
aaa
out
aad
mov
or
dec
cmpl
ljmp
pop
ror
out
cmp
sti
lea
stc
inc
xchg
mov
mov
bound
cs
adc
lret
popa
ja
sub
aas
loop
sbb
fnstenv
inc
stc
cli
cli
test
rcl
cli
mov
cs
or
push
adcl
inc
xchg
arpl
pop
mov
xor
int
dec
mov
mov
lret
es
dec
popa
xlat
or
aad
pop
into
push
jmp
int
mov
push
je
lahf
push
repnz
jns
mov
sar
arpl
push
in
push
test
cli
cmp
imul
add
cmpb
add
imul
lret
shrb
jns
or
mov
into
pop
sti
jg
mov
cmp
andb
cmp
xchg
jecxz
fcompl
inc
js
mov
mov
pushf
popa
push
sbb
enter
jecxz
fistl
loope
loopne
mov
jo
imul
push
popf
cltd
mov
and
roll
fcmovb
hlt
les
cmp
out
in
mov
jmp
in
test
lds
push
dec
sub
push
add
loop
jl
mov
sti
and
scas
enter
cmp
inc
mov
rorl
fwait
cmp
pop
cmpsb
rclb
rclb
push
xor
loopne
xchg
xchg
mov
insb
mov
mov
pop
mov
test
pusha
mov
mov
call
cmp
nop
push
dec
fnstsw
or
adc
aam
fadd
cmp
dec
lret
fisttpl
add
cmc
pop
mov
push
mov
in
cmp
add
jno
in
popf
fst
loop
pop
cmp
in
loope
lds
cmpsl
mov
repnz
sar
in
mov
pop
ja
rcrl
jle
sub
mov
leave
or
jecxz
aaa
adc
jmp
fnstcw
inc
adc
jb
sbb
in
insb
jnp
movsl
aad
lret
pop
std
cltd
cmc
mov
push
out
mov
jno
push
or
push
jo
mov
or
xchg
std
mov
xor
jge
xchg
mov
cmp
cwtl
sbb
out
clc
sahf
lods
shrl
fdivr
in
pushf
inc
fildll
and
inc
xor
iret
cmc
sti
imul
cltd
xchg
sub
ror
test
pop
inc
imul
add
jecxz
shrl
mov
dec
in
lret
aam
daa
mov
jbe,pt
loopne
int
xchg
cmp
loop
or
call
lret
loop
jmp
fdivr
add
mov
bound
jmp
test
repnz
ret
sbb
jo
insl
dec
sbb
pusha
test
cltd
neg
xchg
inc
mov
lods
and
fistpl
mov
fucomp
imul
mov
test
add
int3
bound
sbb
icebp
jbe
out
int3
lret
sub
leave
call
push
pop
mov
jg
fildll
push
push
addr16
dec
scas
mov
push
sub
or
and
aaa
cltd
pop
rcrl
cwtl
fwait
clc
xchg
jae
cwtl
test
imul
jbe
mov
sbb
pop
or
push
mov
pop
sbb
jae
fmuls
jg
or
inc
mov
ficoms
ret
add
pop
mov
add
inc
jl
or
dec
xor
subb
mov
fcmovnbe
popf
dec
out
stc
lret
pop
stos
insb
xor
push
pop
push
sbb
mov
mov
mov
ljmp
movsl
movsl
jecxz
lret
inc
pop
cmp
ljmp
les
mov
adc
and
nop
fdiv
push
mov
add
sbb
jmp
cltd
sarl
pop
aam
pop
or
ljmp
ffreep
vpunpckhwd
or
and
add
stc
scas
cmp
insl
jg
insl
cmpb
mov
in
rcr
outsb
popa
push
cltd
lods
imull
test
xor
mov
leave
rcrb
mov
push
test
ljmp
mov
imul
fstps
fldenv
add
cmpsl
gs
fidivrl
cld
out
sbb
out
negb
stc
adc
rorb
mov
pop
pop
pop
xor
rolb
lea
adc
mov
jle
xor
jne
les
push
loop
sbb
or
pop
imul
int3
inc
loope
arpl
sbb
fisttpll
xchg
imulb
std
test
dec
call
mov
push
pop
in
and
mov
std
ds
pushf
out
jge
sbb
pop
cmp
stc
ret
or
and
xor
or
fistps
xor
out
addr16
push
lods
out
push
adc
sub
push
xor
stc
arpl
shl
cld
pop
out
int
int3
dec
pop
andb
call
xchg
int3
popf
rcl
imul
push
jbe
std
mov
stc
cmpsl
rcrl
xchg
cld
sub
lods
mov
cli
jp
sahf
popf
sub
cmpl
mov
stos
imul
and
add
mov
sbb
sti
push
mov
sub
arpl
mov
out
ret
lods
lods
sbb
in
fildl
adc
test
in
sub
sub
mov
aad
mov
inc
movsb
sbb
mul
stos
add
imul
push
sbbl
shll
nop
loop
add
mov
lea
mov
das
pop
imul
mov
std
add
mov
popf
or
fstl
xchg
jmp
stos
les
int
pop
ds
stos
pop
or
or
mov
test
push
adc
push
and
jmp
test
sub
leave
lahf
xor
xchg
dec
test
pop
rorl
cmc
ja
dec
push
adc
in
dec
mov
add
sahf
push
dec
movsb
stos
jecxz
pushf
and
stc
and
pop
sahf
aam
les
mov
xchg
or
inc
rcr
in
outsl
test
int
fnsave
pop
clc
cmpsl
sbb
cs
rol
mov
sahf
mov
shrl
sbb
push
out
shlb
sbb
sarb
sub
or
sbb
pop
pop
mov
xorl
icebp
push
cmc
std
mov
pop
loopne
movsl
add
xchg
mulb
icebp
hlt
dec
std
std
xchg
push
daa
cli
inc
xchg
mov
cmp
push
pop
popf
adc
dec
fmul
xchg
pop
bound
shrl
cli
mov
sub
pop
jp
fldenv
in
mov
dec
push
push
lods
mov
mov
or
sahf
aaa
leave
stc
mov
sub
scas
jg
cmc
mov
int
push
cwtl
lret
sub
ror
jae
lahf
xor
and
test
inc
cmp
flds
sbb
lahf
out
test
loop
test
movsl
inc
into
mov
dec
add
imul
movsl
dec
test
sub
pop
push
stos
push
or
sbb
cmp
cmpsl
lret
mov
add
jg
aam
stos
and
in
inc
inc
adcb
xor
fs
pop
xor
sti
addr16
and
iret
xchg
out
or
faddl
mov
das
xor
mov
jb
jmp
cli
mov
mov
imul
or
btcl
dec
mov
inc
lods
push
sbb
cmp
repnz
cmp
xor
mull
mov
int3
icebp
cmp
inc
pop
mov
pop
nop
cmc
popa
or
or
loopne
adc
inc
xor
cli
push
push
push
stc
mov
lret
and
cmpsb
sbb
pushf
xchg
pushf
sti
mov
fmul
out
xchg
out
cmp
jge
push
xor
fstpt
mov
std
xchg
cli
xor
push
jecxz
push
in
in
enter
dec
inc
xchg
fisttps
insl
cmp
pop
jnp
adc
inc
leave
xchg
icebp
mov
push
into
or
sbb
cmp
mov
add
mov
mov
xlat
sti
shrb
jmp
or
mov
adc
mov
inc
mov
mov
fildl
filds
pop
push
stos
or
adc
xlat
scas
cmc
fnstenv
out
imul
and
xchg
adc
loope
xchg
mov
mov
test
int3
inc
mov
hlt
pop
xchg
and
mov
in
shl
cld
pop
insb
sahf
leave
dec
pushf
lret
cmp
inc
adc
cmpsb
in
or
inc
icebp
and
fsubl
mov
inc
cltd
lret
mov
out
add
adc
ret
int3
and
ljmp
mov
add
push
imul
fs
scas
adc
add
loopne
ja
or
add
lods
lret
in
cmp
shlb
or
push
dec
cmc
fucomi
xor
movsb
cmp
jo
xchg
lret
mov
mov
faddp
mov
push
mov
mov
or
mov
xchg
rcrb
les
add
lcall
mov
push
sub
in
mov
adc
out
xchg
sub
lds
in
rcr
add
das
jecxz
js
mov
aam
in
push
ljmp
rcrl
rcll
js
rcr
jmp
insb
dec
pop
icebp
add
ljmp
loope
pushf
sub
dec
lahf
aad
inc
jo
and
jne
rcrb
outsb
sbb
sub
sbb
add
cmp
and
rclb
popf
insl
xchg
cmp
jno
rcll
popf
imul
and
lret
jmp
test
sahf
jb
jg
push
xchg
fwait
in
mov
jmp
mov
fists
jl
test
mov
ud1
or
std
fcompl
movsb
lahf
fnstsw
mov
push
sub
lret
popf
jmp
call
call
ficomps
rcll
loop
popa
cmp
mov
xor
mov
mov
loop
cmp
js
dec
popa
cltd
stos
hlt
cli
inc
movsl
lds
insl
mov
stc
mov
add
les
movsl
mov
lcall
mov
fidivs
out
stos
mov
fwait
sub
lahf
inc
xchg
popf
sbb
into
stos
cld
inc
jnp
mov
dec
out
mov
mov
sbb
movsl
add
cmc
sti
sub
bound
sbb
jbe
dec
fucomi
push
jp
push
lea
in
xchg
in
imul
pop
fisubs
cli
jp
mov
jnp,pt
arpl
cmpb
rolb
xlat
and
cli
adc
ss
std
sti
icebp
loop
cmp
ljmp
popf
xor
imul
mov
imul
push
sub
lret
push
ljmp
xor
lret
movsb
fstpt
xor
lds
ja
cmpb
sbb
sub
dec
rcrl
enter
fsubl
push
mov
and
popa
je
test
add
fwait
add
inc
sub
lods
inc
jo
imul
mov
sbb
scas
loopne
xor
pop
popf
call
incb
faddl
divb
arpl
rcr
addr16
in
fldl
mov
xor
lods
in
mov
incl
adc
cli
adc
inc
sub
inc
dec
jecxz
icebp
push
dec
in
fucomip
fs
cltd
or
icebp
adc
int
pop
out
inc
icebp
sub
popf
in
xlat
mov
adc
sti
pop
mov
movsl
gs
push
movsb
xchg
pop
mov
mov
inc
dec
mov
fisttps
mov
test
out
pushf
jo
xor
xor
mov
int3
jne
iret
inc
add
cs
mov
mov
push
mov
xchg
cmp
xchg
mov
lret
mov
inc
fisubl
fnclex
push
hlt
ja
mov
sti
int
xor
add
pop
sbb
lahf
xchg
jno
jnp
inc
in
or
sbb
insl
imul
xor
insb
int
lea
fildll
ficompl
or
xchg
xor
cld
in
dec
adc
ret
movsl
cmp
addr16
or
popf
pop
sub
pop
jno
vmwrite
mov
aad
mov
fwait
push
stc
mov
jge
add
mov
lahf
mov
les
dec
shll
fcmovb
mov
push
fdiv
int
mov
movsl
loope
cmp
into
xor
or
xorl
add
jecxz
int
int
xchg
or
push
scas
push
mov
jno
sub
sub
iret
add
mov
call
insb
lock
mov
scas
aaa
movsb
jo
addb
pop
rolb
int3
in
pop
xor
cmp
loopne
data16
movsb
inc
pusha
mov
ss
lea
testb
lcall
push
mov
xchg
sti
xlat
jmp
iret
pop
add
jge
lret
mov
ret
mov
sti
into
movsl
mov
jne
fidivs
mov
cmp
lods
jecxz
inc
dec
cmp
push
push
popf
ja
or
idivb
ds
sub
ror
repnz
popf
push
pusha
into
mov
leave
fwait
adc
add
aaa
mov
mov
inc
pop
push
inc
out
mov
int3
daa
adc
push
mov
xchg
popa
mov
imul
mov
arpl
arpl
imul
stc
lret
mov
and
cmpsl
mov
pushf
push
add
stos
sahf
in
loop
rorl
xchg
jne
icebp
hlt
in
addr16
nop
mov
hlt
scas
mov
jmp
or
mov
lret
js
jp
inc
inc
mov
cmc
mov
mov
mov
mov
jl
and
mov
sti
shlb
scas
sub
sbb
iret
dec
mov
leave
pusha
pop
sbbb
dec
push
mov
fnstenv
lret
fs
or
fimull
hlt
dec
cwtl
in
xor
sbb
cmp
das
scas
jo
nop
cmp
mov
cmp
stos
ffreep
pop
mov
into
pop
leave
dec
in
bound
inc
add
jbe
gs
inc
cmp
testb
das
pop
pop
pop
jmp
idivb
push
sub
pop
cmp
fcmovnu
inc
ja
cmpsb
fsubrl
ret
out
mov
repnz
iret
loope
add
cmp
testl
loop
lcall
sbb
roll
or
cmp
pop
or
adc
sub
repnz
and
scas
faddl
inc
movsl
insb
xchg
fcmove
mov
psadbw
fs
and
sbb
addr16
inc
sbb
insl
or
mov
push
in
add
stos
cwtl
or
xchg
dec
cmpsl
mov
mov
xor
int3
lret
fdivrs
mov
fmull
mov
xchg
leave
bound
out
jne
insb
ficompl
arpl
xor
dec
scas
xchg
in
pop
pop
popa
lret
mov
adc
incb
xchg
hlt
imul
and
test
sar
jb
das
adc
jmp
cmp
inc
loope
sbb
adc
jl
jge
mov
jns
or
nop
inc
dec
gs
inc
bound
clc
xchg
inc
movsl
mov
into
sarl
jmp
cmp
mov
mov
mov
lret
loopne
mov
pop
add
mov
aam
mov
cld
fisubs
add
std
bswap
adc
cli
adc
jecxz
popa
in
cld
lcall
aaa
push
dec
rorl
sbb
xor
lea
mov
jl
add
dec
sub
fsubs
or
sbb
mov
stos
ficompl
mov
lds
fistpll
add
add
inc
sbb
lret
in
sbb
sbb
fsubrl
push
jmp
sub
decl
cmp
add
sub
loope
mov
outsl
mov
pop
mov
imul
xchg
mov
cwtl
dec
and
and
cmc
sub
dec
mov
outsb
inc
and
js
sub
cwtl
sub
cmpsb
add
cwtl
repnz
push
loope
sub
inc
outsl
xor
xchg
push
sti
mov
loop
mov
add
xchg
jge
enter
loop
cmovnp
add
cltd
sub
xorl
adc
in
cmp
pop
push
or
call
popa
pop
xchg
cli
sub
lcall
adc
pop
test
pop
fists
das
call
in
dec
mov
mov
mov
adcb
mov
popa
push
push
out
fmull
mov
repnz
cs
mov
arpl
pop
and
sub
cmpsb
pusha
mov
cmp
add
pop
sbb
jecxz
adc
pop
pop
pop
movsb
sti
pop
dec
stos
das
movsl
push
call
lahf
add
cmc
popl
rclb
sub
xor
daa
shlb
adc
clc
ljmp
mov
dec
clc
cmp
arpl
xchg
aam
cmpsb
lret
inc
lods
stos
jo
cltd
aad
lret
push
lcall
mov
movsb
pop
int3
imull
add
push
in
cmp
jle
ss
and
hlt
mov
pusha
pop
bndldx
inc
or
mov
and
xor
jmp
pop
test
sub
or
rclb
mov
lods
pop
jecxz
jo
scas
mov
mov
adcb
fxch
inc
imul
lock
lds
movsb
xchg
push
cmpsb
lods
jnp
iret
in
roll
lea
sub
mov
pop
int
stmxcsr
pop
ret
leave
sbb
sar
test
dec
cmc
mov
or
jne
loop
das
insl
xchg
pop
mov
mov
xorl
cwtl
lret
call
mov
mov
test
pop
aaa
jle
cmp
inc
mov
out
add
ljmp
fldl
mov
pusha
xchg
test
outsb
mov
ds
aam
pop
mov
sbb
lret
sub
mov
adc
inc
add
lret
dec
das
adc
fsubl
dec
in
lds
jg
hlt
in
push
fstpt
jne
pop
push
fs
adc
fnstenv
mov
pusha
sahf
push
xchg
xchg
fs
repnz
mov
repnz
add
outsb
pop
ljmp
fcoml
cli
lods
cwtl
popa
rcrl
imul
cmpsb
es
mov
mov
jb
bound
rcrb
ds
xchg
aad
movsl
insb
add
repz
xchg
xchg
push
jge
jmp
xchg
sub
repnz
test
adc
fisubl
sti
fisttps
inc
orb
in
pop
mov
add
aad
loopne
lret
pop
xchg
fidivl
popf
das
sub
adc
cmp
pop
cmp
add
xlat
stc
fiaddl
xor
dec
dec
lret
xchg
jge
dec
lret
dec
mov
outsl
mov
xchg
sbb
inc
out
and
mov
out
and
or
push
addr16
out
mov
dec
les
cmp
leave
loop
bound
mov
mov
jecxz
fwait
in
cs
hlt
shlb
mov
outsb
movsl
inc
cs
sbb
jbe
inc
jp
jmp
shll
dec
jp
js
jecxz
pop
cmp
cmpsl
pop
ret
mov
and
popf
stc
fistps
xor
cmc
inc
add
mov
fcmovne
pop
inc
push
std
test
cld
ffree
popa
sti
pop
mov
iret
shl
mov
dec
lods
cmc
jns
cmpsb
and
pop
je
stos
js
mov
rorb
lea
iret
repz
add
int3
mov
call
std
imul
adc
add
std
mov
popa
fistps
aad
mov
pop
cwtl
outsl
addr16
lds
fdivrs
ja
adc
movsl
in
arpl
cs
lea
jl
inc
adc
popa
cmp
fidivl
test
nop
test
outsl
mov
aad
xchg
pop
aam
loopne
aam
cmp
stc
incl
or
xchg
pop
fisttpll
bound
mov
mov
cs
fcoml
mov
test
test
mov
cmp
test
cmpsl
jl
cmp
mov
bound
cltd
mov
push
fcompl
mov
popa
inc
cltd
jnp
cwtl
sub
pop
dec
inc
cmp
test
hlt
mov
and
fdivr
in
test
ficomps
add
mov
xor
shll
sub
andl
xor
insl
int3
pop
add
rorb
jmp
cmpsl
xchg
popf
lret
mov
and
jle
and
call
add
popa
mov
movsl
xchg
out
fildl
popf
fsubs
pop
sbb
flds
push
loop
add
or
pop
aam
xor
sbb
in
loop
and
mov
lret
adc
sub
cmpb
ret
cmpl
mov
cmp
js
push
fstl
pop
push
int3
mov
aam
cmp
mov
and
fdivrp
int3
cli
dec
inc
cs
xchg
mov
rcrb
cmp
dec
vcvtsd2ss
or
and
lret
lods
mov
sbb
sub
test
mov
rorb
imull
mov
mov
inc
stc
mov
mov
bound
and
bound
lret
push
imul
fstpl
sub
shlb
dec
into
add
xchg
fcompl
mov
jo
cmpsl
in
cld
js
into
rolb
scas
add
es
test
in
mov
fistpl
ficomps
sub
out
jnp
lret
mov
orl
dec
out
subb
and
popf
pop
loopne
scas
int
jae
repnz
inc
sbb
in
pop
push
icebp
cld
insl
inc
xor
mov
icebp
push
test
outsb
in
xor
mov
in
mov
je
roll
xor
int
mov
jecxz
xchg
movsb
add
fldt
mov
push
ds
sahf
add
outsl
sbb
movups
cmp
in
std
pop
rcl
ret
aam
xchg
test
iret
roll
sbbb
ja
ret
scas
bnd
sbb
out
out
clc
pop
cwtl
insb
rolb
xchg
out
stos
and
cs
fbstp
incl
imul
cmp
ret
shlb
les
imul
lods
dec
in
sbb
in
inc
push
imul
jmp
mov
popf
xchg
into
rcrl
lret
movsl
imul
cmp
or
dec
fldenv
repnz
mov
pop
mov
xor
loope
mov
sldt
pop
jg
in
ds
pop
or
shlb
xchg
mov
mov
mov
fisubs
ljmp
je
lods
into
js
pop
in
repz
lahf
mov
ror
pop
shlb
cs
jecxz
mov
jecxz
dec
mov
cmpsl
icebp
fs
jecxz
push
popf
jmp
add
test
in
ds
xchg
add
idivb
notb
push
bound
in
lret
jbe
adc
push
fyl2x
xlat
inc
cmpsb
jns
xchg
test
das
and
pop
in
cmp
decl
pop
loope
inc
adc
cld
lcall
out
add
mov
andl
adc
cli
dec
or
xlat
sub
lret
push
in
push
xor
mov
pop
jne
movsb
lcall
xchg
sarl
and
pop
sbb
movb
fsubl
pop
sbb
cmp
dec
shr
push
sbb
in
sti
mov
test
lods
loope
adc
sti
lret
sbb
cmc
fmulp
movsl
cmp
fsubrl
inc
mov
cmp
pop
js
fs
call
cmp
cmpsb
in
ficoml
fdivrs
andb
dec
pop
call
movsl
jne
mov
mov
andb
ficompl
imul
xor
xchg
mov
lea
cltd
pop
xchg
add
iret
mov
cmp
jns
fs
cmp
xchg
jnp
bound
cmp
addb
jmp
addl
add
adc
ffree
lret
cmp
stc
inc
into
fsincos
inc
cmc
mov
leave
mov
jmp
shl
push
arpl
add
xchg
mov
loope
mov
push
das
add
aaa
stos
int
fs
and
daa
cltd
pop
push
sbb
fadd
int3
mov
out
xor
sbb
adc
fistl
pushf
pop
insl
ret
mov
incb
fs
jecxz
mov
xlat
fs
jmp
cs
aam
mov
fs
xor
les
scas
pop
lret
jge
mov
test
xchg
mov
fsubs
mov
rorb
dec
lock
pop
xchg
add
js
ret
xor
adc
push
or
data16
lcall
cli
push
loopne
inc
and
in
mov
mov
popf
mov
sbb
or
fsts
sbb
or
repnz
das
sti
pop
aas
sbb
into
sarb
inc
aas
sub
cmp
out
xor
fcomps
ret
pop
cmc
sub
rcl
cld
into
hlt
mov
inc
xchg
mov
push
fimull
sub
jge
stc
cmpsl
hlt
sbb
sbb
push
cmpsb
add
or
lcall
pop
rcl
dec
inc
das
out
lret
and
sub
adc
pop
mov
pop
adc
cltd
pusha
or
or
adc
mov
aaa
popf
xchg
movsl
xor
int
mov
pop
in
push
scas
add
xchg
mov
adc
cli
xor
add
mov
js
inc
ret
stos
adc
sub
adcl
cwtl
fstpl
mov
xor
push
inc
or
mov
loope
add
push
jl
popf
jp
jp
popf
xchg
pop
xchg
sarl
out
arpl
or
aaa
mov
arpl
test
rcl
jp
or
dec
pop
fld
aaa
lea
int3
xchg
jl
mov
icebp
or
pop
clc
inc
xchg
insb
adc
pop
inc
push
aad
and
mov
dec
mov
pop
call
sub
sti
icebp
popa
xchg
mov
sbb
fdivrl
xor
icebp
mov
xchg
popa
iret
iret
jge
jl
das
aad
mov
loopne
mov
in
mov
pop
ds
or
inc
xor
jge
aad
sbb
jmp
cmp
mov
data16
inc
dec
shl
popf
pusha
push
push
ret
cmp
fld
dec
inc
inc
adc
dec
jo
imul
movsl
and
cmc
test
icebp
push
cltd
rcl
ret
mov
mov
sub
lock
shlb
dec
stos
cmp
pop
cmpsl
jmp
jge
mov
xchg
or
push
pop
and
pushf
data16
mov
sub
roll
into
gs
movsl
xchg
or
add
xor
mov
scas
test
inc
dec
bound
inc
inc
cmpsl
lds
aam
testl
inc
push
test
jge
hlt
pushl
loop
push
fists
aam
cmpsl
ss
stos
pop
add
movsb
lret
movsl
or
hlt
cmc
stos
lret
add
ja
or
icebp
bound
rcrl
sbb
push
cltd
negl
cmp
lret
inc
inc
loope
dec
jmp
and
inc
test
dec
mov
hlt
push
mov
inc
jb
outsb
mov
scas
adc
push
imul
loopne
mov
pop
push
js
popf
int
mul
jle
stos
mov
cltd
add
xchg
ljmp
std
repz
bound
jno
inc
dec
loop
mov
movsl
sbb
sbb
or
ss
cltd
std
ja
pop
inc
push
jg
shrl
popa
fstpl
sbb
in
dec
int
jno
mov
lods
cmpsb
pop
cmp
push
or
bound
jbe
pusha
les
jge
fld
mov
loop
sarl
pop
rcll
movsl
arpl
mov
mov
test
nop
cli
pusha
mov
jl
test
mov
pop
inc
and
dec
dec
les
fildl
sarl
notl
int
test
test
lcall
push
arpl
insl
loop
fidivl
fsts
jo
repz
insl
aam
popa
jno
fs
lahf
xchg
jmp
les
adc
es
rcll
mul
push
outsb
mov
nop
call
mov
push
call
jp
fnop
mov
add
cmp
xchg
in
sbb
movsl
fsubl
pop
mov
push
das
and
cltd
sub
ret
into
int3
dec
mov
xlat
inc
mov
int3
mov
iret
mov
add
jecxz
jnp
push
mov
cmp
or
mov
jmp
scas
pop
add
sub
xchg
sbb
mov
rcrl
and
or
jb
mov
cld
lahf
or
push
into
push
mov
fs
lret
std
into
fdivl
loop
jmp
test
add
inc
inc
mov
movsb
mov
lcall
and
into
lods
fnsave
repnz
les
lds
inc
adc
push
mov
fsubrl
int
fadds
push
push
fwait
xchg
or
pop
orl
mov
push
xlat
je
pop
or
mov
loop
cmp
mov
stos
test
out
mov
rolb
mov
lret
or
mov
adc
loop
test
orb
push
xchg
push
sarl
mulb
xchg
xchg
push
fisubrl
addb
cwtl
loop
sub
leave
sti
cltd
mov
mov
pushf
mov
lods
or
or
add
std
iret
push
mov
mov
testl
insb
and
test
sbb
fs
sbb
stc
and
out
popf
mov
ret
cmpsl
rorl
xor
nop
mov
jp
mov
or
insb
stc
push
dec
sbbb
and
or
xchg
jge
stc
stc
lock
cmpsl
jl
pop
jecxz
fwait
rcll
sbb
pushf
nop
mov
scas
jl
cmp
jmp
add
repz
xor
orl
dec
jmp
hlt
xchg
aas
mov
dec
sub
inc
add
test
jnp
call
lahf
fnstsw
shl
mov
std
add
sti
imul
inc
adc
addr16
mov
or
in
nop
lock
mov
push
mull
dec
sbb
fsts
fs
sub
repnz
sbb
mov
add
in
icebp
or
fadds
neg
mov
fs
in
mov
or
fsubp
and
icebp
or
xor
mov
adc
xchg
std
addr16
fisttpl
or
mov
dec
sbb
pop
mov
test
inc
mov
imul
int
flds
imul
std
mov
test
dec
imul
test
fistps
jnp
sub
fnsave
inc
int3
adc
push
iret
into
bound
add
mov
mov
jne
jno
les
or
push
jl
sbb
fdivl
push
pop
mov
push
imul
xchg
jne
repnz
cmp
test
mov
fcompl
in
mov
dec
sahf
ja
jmp
jmp
jecxz
aas
pop
call
lock
cltd
fld
jns
lret
pop
or
xor
test
xchg
ja
aad
xor
cmp
jecxz
mov
cwtl
rorb
xchg
fwait
in
pop
test
fadds
jp
mov
pop
push
fs
in
movsl
rcl
mov
movsb
push
mov
mov
push
jo
mov
aas
sbb
scas
rorl
in
push
xor
inc
dec
jmp
test
mov
aad
movsl
ljmp
jle
fstpl
int3
pop
and
jns
ret
ficompl
mov
inc
inc
jne
pop
stos
mov
std
scas
push
fisubl
sbb
dec
out
rolb
push
dec
loopne
iret
into
sti
push
jmp
push
xor
cmp
pop
dec
pop
push
das
fiadds
dec
mov
sub
sub
push
inc
ret
cmp
jb
fld
jecxz
xchg
mov
andl
iret
adc
inc
and
std
popf
fcoml
scas
sbb
mov
out
sbb
jo
mov
iret
jno
fnsave
nop
xchg
outsb
jns
mov
cmc
fs
div
lret
push
fnstenv
lahf
mov
push
scas
mov
pop
pop
add
pop
mov
scas
xchg
and
xor
lret
inc
out
int3
sub
inc
jle
mov
popf
push
insb
mov
jecxz
ret
dec
sti
jecxz
data16
add
inc
jge
hlt
gs
jg
xchg
mov
or
cli
add
lret
cmp
in
mov
add
mov
or
xchg
clc
mov
popa
in
or
arpl
out
popa
ret
aaa
lea
fldl
jl
mov
adc
jne
mov
in
cmp
test
adc
lds
out
cwtl
fldt
scas
iret
push
cmp
xchg
xlat
adc
in
mov
icebp
xchg
imul
ds
add
add
cmp
stos
arpl
das
sbb
mov
push
xchg
xchg
pop
pusha
mov
addr16
ljmp
ret
xor
xchg
cs
icebp
push
pop
push
pop
lcall
fimuls
inc
push
popa
jno
mov
cmp
out
data16
mov
jnp
cmp
testb
test
mov
out
insl
aam
add
das
dec
adc
ret
add
and
xchg
or
sub
std
es
stos
popa
rorl
lcall
insl
and
fnsave
popf
iret
loopne
mov
mov
leave
push
mov
pop
dec
in
rorl
mov
cmpsl
fsubl
cs
add
fidivl
nop
sar
hlt
mov
pop
shll
mov
dec
scas
rcr
mov
call
sub
fstl
pushf
mov
mov
or
pop
lods
sub
jg
and
cmpsl
loope
or
fisubs
nop
fptan
fsubl
inc
pop
mov
add
std
inc
sar
pop
pop
fwait
mov
jp
fstps
xchg
dec
rcr
cltd
xor
push
outsl
in
fldcw
mov
sbb
mov
dec
js
aaa
dec
push
fstl
inc
mov
or
jnp,pn
mov
xchg
rcll
xchg
mov
jecxz
push
mov
jmp
add
xor
int
inc
push
add
cld
jge
add
in
cmp
xchg
dec
push
ja
ffreep
dec
dec
mov
sub
cli
mov
sub
data16
inc
stc
dec
in
jge
sahf
lretw
scas
stc
xor
int
nop
aad
ret
push
jle
cmp
stos
shll
add
jmp
mov
cltd
cli
in
mov
sahf
adc
hlt
xor
mov
lahf
mov
fisubrs
sbbl
mov
and
or
mov
out
cmpb
fdivrl
sbb
mov
or
mov
fld
outsb
sub
or
shl
les
mov
test
ficompl
jecxz
mov
inc
aas
fldt
adc
jl
push
xchg
fidivrl
loopne
or
mov
cmp
inc
xor
dec
fimull
push
push
in
add
jge
jl
xchg
cld
je
cmc
popf
pop
cwtl
jmp
xchg
pop
mov
bound
iret
or
popa
cmp
shlb
inc
sarb
jg
add
hlt
cwtl
cmp
xchg
enter
jo
or
data16
das
cmc
sbb
jnp
lock
mov
call
dec
idivl
add
cld
push
adc
sub
mulb
cmp
fsubrs
mov
cmc
pop
inc
push
cs
adc
dec
cmc
fwait
and
sub
outsl
xchg
arpl
fistl
mov
fdivl
or
iret
mov
je
and
filds
jo
fnstcw
out
fstpt
sbb
mov
xchg
xchg
enter
xchg
rcrl
pop
fnsave
popf
jb
jl
xchg
cmp
iret
add
fstl
std
mov
fstpt
cmpsl
or
inc
sub
cld
mov
mov
push
flds
jnp
ret
push
jnp
sub
xchg
aam
in
mov
add
jmp
cli
dec
rcl
cmp
dec
pop
mov
add
and
mov
cmp
fidivs
push
scas
cld
mov
pop
inc
lret
push
std
loopne
sbb
ffree
inc
imul
outsl
jmp
push
xor
xor
mov
and
fsubrl
std
add
pusha
jnp
outsb
sub
aad
imul
pop
push
xchg
mov
mov
push
add
fucomp
mov
popf
jp
mov
cli
lock
loop
adc
push
xor
mov
leave
xchg
pop
pop
stos
iret
mov
loop
cmp
xor
push
sbb
xchg
fidivrs
lret
xor
daa
xchg
inc
outsl
and
jle
pop
in
jmp
xchg
es
rcrl
cmp
subb
push
cmp
cli
fiaddl
in
sub
ljmp
lds
jmp
std
or
add
fcomip
jmp
and
std
pusha
add
pop
mov
ret
jne
push
repnz
pop
ret
shlb
add
inc
cmpsb
jle
cmc
fiaddl
outsb
stos
or
std
mov
into
int3
pop
inc
in
mov
push
scas
lret
and
push
push
pop
lret
ficompl
scas
push
es
shl
bound
repnz
mov
sbb
mov
jg
ds
mov
inc
repnz
xchg
mov
filds
fidivl
mov
cmp
sbb
mov
or
repnz
push
filds
xchg
xor
test
loopne
mov
lods
inc
lea
sub
jecxz
jge
out
shrl
lret
test
pop
popa
cmp
lock
mov
lods
int3
fiaddl
out
imul
pop
test
jmp
cmp
inc
cli
xchg
int3
mov
rclb
inc
or
push
push
movsb
filds
aad
orl
adc
jmp
ss
aam
int
sub
jmp
push
ja
mov
sbb
aaa
movsb
mov
dec
cltd
cmpsb
jbe
int
push
mov
cmp
shll
pop
sub
mov
int
loopne
fisubl
shll
adc
xor
sub
lods
idivb
ss
mov
push
push
rolb
pop
cmp
cmp
adc
or
push
popf
outsb
and
fwait
test
xchg
mov
or
ss
pop
leave
xlat
std
mov
jne
lcall
out
fiadds
inc
pop
cwtl
je
rol
xor
dec
lods
inc
xchg
mov
popa
fstpl
aas
fstps
repnz
ss
sub
in
xchg
lret
mov
push
cmpsl
popa
shlb
aaa
pop
fldl
jo
push
cmp
cld
fadds
mov
repnz
fwait
jecxz
or
pop
mov
out
cmp
loope
hlt
mov
add
dec
pop
lret
sahf
mov
inc
iret
push
mov
jl
andl
adc
mov
mov
jmp
loop
pop
pop
push
xor
mov
push
fidivs
and
bound
movsb
add
push
rcrb
cld
loope
add
xor
cmp
jmp
cmc
fadds
in
mov
ljmp
out
jl
sbbb
xorl
xor
hlt
out
pop
les
mov
jns
loopne
pop
ds
jl
pop
pusha
mov
and
cmpl
xchg
popa
inc
lock
lea
sti
fidivrl
jb
pop
push
inc
shll
mov
fimuls
int3
xchg
in
fwait
or
shll
and
cmp
aad
pushf
rcll
mov
xrstor
inc
xchg
hlt
or
pushf
or
xor
xchg
ljmp
add
ficomps
loope
out
or
nop
call
fstps
jmp
xor
aas
push
inc
les
sub
rorb
xchg
inc
jne
cli
pop
in
add
xchg
mov
pop
pop
insl
xorb
fs
inc
ds
loop
inc
inc
sub
sub
das
sahf
dec
sub
je
cmp
lret
pop
sub
jbe
movsb
inc
ret
mov
xor
mov
enter
aad
or
aam
sbb
pusha
push
jmp
fwait
inc
in
fstpl
popf
push
fsubs
or
sub
inc
ds
jbe
aad
mov
or
sub
mov
arpl
mov
mov
adc
testb
adc
sub
in
or
and
xor
push
mov
subl
push
lods
inc
dec
mov
or
push
stos
cld
add
and
mov
jmp
cwtl
xor
mov
ret
jne
cmp
dec
pop
jae
mov
mov
int3
or
sti
mov
je
inc
fsubr
cmp
inc
adc
pop
push
cwtl
inc
mov
inc
cmpsl
lahf
enter
sub
push
jnp
lret
test
ret
xchg
rorb
and
and
mov
dec
cmp
rorb
xor
fprem1
lcall
aaa
shl
shlb
iret
lret
fadds
fistpl
cmp
xchg
mov
clc
loope
jo
lret
shl
stos
rorl
sbb
roll
dec
data16
mov
push
or
jg
std
cmp
pop
jecxz
push
loop
rcll
shrl
scas
fnsave
mov
pop
sarl
test
into
push
pop
cmp
pop
cmp
cmc
popa
mov
nop
mov
out
sbb
mov
or
psrlw
ljmp
cld
and
mov
loopne
mov
inc
jle
in
inc
xchg
fidivl
pop
jns
pop
cmp
mov
pushf
fcoml
test
fsubl
js
fsubs
mov
loop
mov
loopne
sbb
lret
addl
imul
hlt
push
les
mov
rorb
out
mov
orl
push
sbb
cmpsl
jmp
lods
rorb
sahf
or
das
ret
iret
repnz
mov
fstl
mov
mov
cs
and
cmp
movsb
push
in
xchg
mov
jp
les
stc
cld
fcmovnu
movsl
sub
pop
xchg
fstps
test
test
adc
std
inc
lcall
loope
and
stos
shlb
inc
outsb
leave
pop
xor
xchg
sub
mov
push
popf
xchg
stos
cld
vpshufd
xchg
jmp
xor
test
mov
mov
fstpt
add
dec
and
imul
repz
pop
std
xlat
arpl
lods
dec
and
loopne
popa
mov
push
fs
cli
aad
pop
iret
cmp
fstpl
pop
shl
roll
mov
imul
adc
vminps
sub
fs
or
cli
inc
dec
mov
cmpsl
fidivrs
mov
inc
sub
aam
mov
cltd
fs
and
pop
push
iret
shrb
fs
dec
mov
mov
lret
push
inc
cmp
enter
cmc
and
lret
push
xchg
xor
arpl
xchg
imul
scas
test
xor
xor
push
cli
lea
arpl
pop
sbb
jns
cld
sub
shr
cmp
mov
bound
pop
or
sti
aaa
ds
loopne
inc
daa
dec
fldenv
push
cld
nop
push
xor
cld
mov
out
mov
and
cmp
fwait
push
lret
test
dec
mov
aad
and
faddl
and
sbbb
cmp
lods
xchg
or
inc
imull
aad
fnsave
popa
addb
lds
dec
cmp
inc
or
mov
cli
aaa
arpl
sahf
call
mov
jp
insb
inc
into
sbbb
dec
jmp
in
incl
in
xchg
arpl
and
movsl
sbb
iret
fldcw
shl
jecxz
lret
cltd
aaa
test
dec
jbe
mov
iret
pop
push
sbb
cmp
frstor
daa
incb
dec
lret
das
sarb
mov
mov
jmp
popl
js
movsb
cwtl
push
pop
in
sbb
fdivl
lods
inc
enter
jbe
icebp
dec
mov
imull
std
cmpsl
jb
pusha
ret
push
jae
sbb
push
incl
es
mov
cmp
outsb
sbb
sbb
inc
mov
stos
leave
ljmp
imul
dec
pushf
leave
mov
into
ret
mov
in
loopne
pop
js
mov
mov
lock
cmp
fistpl
xchg
or
nop
jmp
and
movsb
shl
cmp
mov
popf
push
mov
popf
testb
repz
add
pop
ja
fmuls
movsl
dec
mov
pop
push
mov
incb
in
fists
into
push
call
cmp
fsubrs
pop
aas
fcompl
xor
orl
or
test
int3
imul
stos
in
fisubl
inc
call
shrb
mov
test
dec
cmp
fwait
xchg
sub
or
add
xor
xchg
push
jp
jnp
mov
loopne
dec
xlat
aaa
mov
cmpsb
out
mov
push
lret
cld
fmul
insb
hlt
aad
stc
pop
fidivrl
mov
insl
lock
std
pop
mov
jne
fwait
or
push
xchg
mov
and
loope
aam
insl
pop
push
xlat
pop
jno
mov
or
test
jb
mov
xor
or
cmpsb
cmp
inc
jmp
lods
mulb
cmpsb
add
mull
cld
or
pop
out
mov
pushf
div
outsb
test
mov
pushl
fdivr
cld
fnstenv
adc
lret
mov
xor
adc
add
lock
sbb
sbb
sarb
fincstp
and
roll
int3
clc
mov
pop
sub
leave
ret
xchg
lcall
mov
mov
dec
and
sbb
mov
fs
and
xor
hlt
fwait
xor
xchg
das
push
dec
lretw
rolb
add
int3
add
test
std
out
iret
fcoms
mov
popf
push
add
or
fwait
dec
jge
inc
xor
data16
pop
sub
les
pop
movb
bound
pop
jmp
les
frstor
cmp
add
mov
push
jecxz
mov
dec
mov
add
in
push
add
sbb
add
leave
mov
addr16
jno
xchg
sub
in
ljmp
adc
sub
lret
je
movsl
add
std
sbb
pop
add
mov
inc
jne
mov
mov
fsubs
cs
aad
repz
and
and
lret
call
daa
pop
inc
mov
add
sbb
inc
andl
inc
ret
ds
mov
inc
push
push
aad
ror
shrb
es
lods
cld
jmp
mov
jbe
add
scas
cmc
out
jp
sbb
movsl
mov
popf
ret
lcall
into
stc
inc
add
test
into
repnz
lcall
xor
sbb
mov
aam
popa
jmp
aaa
jmp
and
inc
sbb
test
xchg
aas
loop
jp
aam
decb
fdivr
and
mov
lahf
ss
inc
aaa
push
in
push
aas
mov
mov
mov
int3
pop
and
dec
mov
push
push
scas
ss
movsb
and
cmpsb
popa
jmp
jns
call
push
movsb
add
fiaddl
mov
jle
jg
rcr
das
lcall
stc
xchg
pop
add
outsb
jne
mov
filds
add
roll
xchg
scas
test
adc
rcl
adc
cltd
ret
cwtl
sbb
adc
int3
or
popf
cli
or
cmc
jnp
fwait
lret
int
inc
jae
ret
leave
xchg
xchg
in
insl
jmp
add
sub
fldt
xchg
adc
push
jno
into
or
cmp
andl
pop
xchg
cs
sahf
pop
jl
cmp
into
jg
xchg
rorb
aad
mov
je
in
mov
sbb
mov
sub
xchg
push
cmpsl
mov
jecxz
pop
popf
pushf
xor
lods
sbb
inc
mov
cwtl
and
jno
rclb
xor
push
hlt
xor
and
fdivrl
into
push
xchg
sbb
adc
std
flds
mov
add
cmc
icebp
fistpl
fsubrp
inc
sahf
and
sbb
rolb
lret
sbb
lods
popa
push
fisubrs
and
cld
sub
lcall
in
sti
mov
aad
jp
cli
lret
into
jl
sar
aam
out
inc
dec
jp
sub
jmp
and
cmp
das
inc
jnp
jbe
scas
inc
mov
cmp
mov
pop
or
fsub
aas
out
jecxz
int
testl
sbb
fst
mov
aad
adc
movsl
cmp
gs
pusha
in
vpcmpeqb
in
fcmove
fs
lds
insb
add
in
add
lret
or
lret
sarl
mov
jnp
dec
or
mov
pop
test
int
dec
in
and
mov
cmp
fsubl
mov
cmpsb
sbb
pop
push
push
stos
fsub
pop
sbb
cs
cs
dec
out
pop
mov
cmc
dec
adc
mov
dec
fs
jbe
xchg
xchg
into
je
imul
fnstcw
mov
and
movsl
xlat
sahf
repnz
cltd
sbb
mov
test
mov
orl
sbb
sbb
cmp
mov
mov
scas
xor
int3
aad
mov
out
push
add
decl
add
iret
mov
mov
pop
fcmovne
neg
sbb
dec
add
mov
push
in
mov
jmp
leave
ficomps
repnz
test
inc
mov
inc
jb
cltd
sahf
fcoms
test
dec
int
mov
adc
lods
cli
aaa
pop
lcall
jle
jno
in
push
push
ret
stos
subl
repz
push
or
mov
fs
fisubrl
pop
aam
sub
push
fcomps
adc
sbbl
cld
cli
bound
and
mov
and
pop
sti
dec
push
xlat
xchg
cmp
sub
inc
cwtl
jne
mov
jno
mov
xor
bound
ds
mov
lds
push
rorb
xsha1
cmpsb
lret
daa
push
int3
push
lahf
bound
mov
sti
pusha
loop
sbb
adc
xor
sbb
in
and
pop
mov
lods
insl
mov
sbbl
stos
inc
sub
das
sbb
sbb
nop
cmp
push
aas
outsl
push
idiv
test
arpl
scas
cmp
ljmp
cmp
mov
jbe
or
sbb
aad
add
idiv
fs
int
sbb
rcr
shlb
add
lret
cld
in
fcmovbe
and
lret
push
popf
xchg
push
int3
jbe
jbe
out
lret
test
jecxz
jnp
push
bound
adc
addr16
loopne
lret
repnz
icebp
bound
aam
or
ss
pop
cmp
inc
inc
pop
sarb
xchg
pop
fisubl
test
test
fwait
sar
pop
xchg
hlt
sub
pop
lret
imul
lea
std
cwtl
xor
dec
cmp
fstl
cmp
fidivrl
mov
jno
push
out
pushf
cmpsl
jae
inc
and
cmp
add
in
repnz
out
dec
mov
or
mov
or
inc
shl
add
inc
adc
sbb
sbb
mov
stos
and
mov
jge
sti
jmp
jo
and
imull
int3
bound
inc
out
out
sbb
sub
scas
jb
xchg
push
stos
mov
lcall
loop
sti
push
dec
in
pushf
xchg
xchg
mov
lods
or
adc
mov
rclb
nop
int3
dec
cmp
mov
xchg
and
push
fdivrp
fbstp
jno
inc
mov
xor
fldt
add
xchg
addr16
add
sbb
fisttpll
xor
cmp
xor
or
jmp
xchg
xchg
int
sbb
dec
fsubl
in
iret
mov
add
mov
movsb
addr16
sub
pop
sti
imul
pop
int
inc
je
ret
fimuls
movsl
insb
fstp
stc
inc
das
xchg
call
sbb
mov
mov
xor
loopne
xchg
adc
jg
sarb
or
loop
and
cltd
mov
mov
or
push
or
std
sbb
push
inc
jle
mov
lret
xchg
or
sbb
and
call
and
in
add
mov
mov
inc
mov
in
fimull
lds
dec
mov
or
popf
push
cmc
jecxz
mov
leave
xlat
sub
div
push
dec
mov
add
pop
out
shll
ljmp
mov
fdiv
add
sbb
push
sbb
dec
pop
cmc
test
push
js
repnz
das
mov
fwait
outsb
lock
xor
fistl
mov
or
dec
sbb
mov
sbb
push
rcrb
xlat
and
mov
inc
add
push
xchg
add
mov
mov
lahf
es
jbe
ljmp
push
xchg
mov
jle
sub
cmpsb
jae
lea
push
add
gs
xchg
adc
lahf
pusha
or
aaa
xor
mov
pminsw
jp
lret
cli
das
lahf
jb
add
hlt
dec
jae
push
sbb
xor
out
cmp
or
imul
rcrl
subl
and
jae
push
lret
lcall
dec
push
fldln2
rolb
or
inc
insb
shrl
out
jae
iret
xlat
pop
sbb
in
pusha
fwait
leave
jmp
xchg
hlt
arpl
repnz
mov
in
cs
mov
cld
mov
aad
ret
jne
sbb
pop
fwait
test
push
cmp
sbb
mov
push
pushf
les
pop
jp
in
fmull
inc
popa
cmpsl
mov
fists
push
aas
fisttpll
xchg
int3
out
ficoml
dec
fisttps
addb
cmp
stc
pop
mov
or
popa
inc
pop
lret
in
inc
adc
repz
push
loope
push
test
out
cs
add
scas
mov
popf
aam
dec
in
shlb
test
fnstcw
xchg
and
inc
ja
inc
mov
or
scas
push
std
js
dec
lahf
out
rolb
add
insb
mov
stc
int
test
sub
clc
cmpsb
test
add
repnz
pop
add
scas
aad
test
lods
lahf
das
imull
add
jmp
mov
mov
cmp
movsb
fstpl
push
mov
add
mov
test
mov
jae
aam
push
fsub
add
xchg
std
inc
ljmp
mov
jnp
incb
sub
and
jge
push
es
pop
lret
sub
mov
xchg
push
inc
sbb
push
ret
aas
sarl
movsl
push
std
mov
inc
punpckldq
or
addr16
pop
fldenv
mov
jne
mov
popf
aam
jle
lret
xchg
popf
xlat
out
sahf
fcomps
std
test
iret
fcompl
push
and
in
mov
lods
jno
jmp
add
push
cmpsb
cmp
pop
add
into
mov
or
sbb
rclb
popf
imul
mov
mov
je
scas
aam
fbld
ja
xor
cwtl
and
sbb
fisubrl
daa
sbb
cmp
inc
fldl
fadd
push
lds
mov
xlat
adc
in
pushl
lret
pop
clc
or
popa
jno
sub
pushf
push
movsb
std
dec
shl
test
inc
mov
mov
pop
inc
jno
jno
or
enter
xor
mov
insl
popa
dec
scas
or
fs
push
and
stos
lock
in
push
daa
mov
xor
push
fcoml
bswap
in
nop
fidivl
cli
ja
inc
sbb
sub
mov
in
popf
or
jg
flds
aad
fnsave
je
xor
int3
rorl
sbb
pusha
movsl
add
std
insl
pop
mov
push
dec
in
ljmp
outsl
push
bound
insl
subl
push
mov
inc
addb
out
dec
fidivrl
or
mov
stc
cltd
and
into
pop
shll
mov
arpl
fdivr
cmpsb
jle
sbb
mov
clc
inc
pop
pushf
fs
popa
leave
cmp
in
mov
in
mov
lret
sti
or
lcall
cmp
add
dec
sahf
clc
dec
idivl
int
repnz
push
or
sbb
das
dec
loopne
test
jbe
mov
mov
pop
daa
das
jmp
add
addr16
lods
std
repnz
sub
fnstsw
shll
movsl
into
and
aaa
pop
xor
sub
sbb
dec
adc
add
sbb
test
mov
fisttps
inc
push
and
xchg
movsb
inc
adc
jp
iret
adc
cmp
in
fdivrs
sub
lret
mov
inc
xchg
xchg
lods
cmp
xchg
jne
push
fnstsw
pushf
and
dec
mov
ss
arpl
cmp
and
test
lahf
adc
add
ljmp
std
inc
pop
mov
mov
gs
jns
jmp
cmpb
jno
xor
out
xor
imul
sbb
mov
mov
pop
ss
mov
sbb
fdivl
repz
sbb
ja
sub
aam
ja
test
add
psllq
movsl
repnz
out
enter
testl
stc
jl
outsb
xor
pop
cmp
cmp
in
ja
call
jno
fldt
or
sub
xor
adc
xor
popl
sbb
shrl
pop
push
fimull
pop
movsb
es
fisubl
mov
rcrl
mov
sub
lcall
je
sub
ljmp
jecxz
mov
outsb
frstor
adc
push
popa
dec
cld
clc
jns
or
lret
insl
and
sub
test
test
fiaddl
jge
mov
mov
add
outsb
mov
xchg
addr16
push
dec
fnstcw
ss
mov
cli
fbld
mov
std
and
mov
bound
sub
pop
in
or
mov
or
push
fsts
xor
lcall
sub
int
mov
mov
hlt
mov
leave
jmp
lock
mov
jno
arpl
pop
push
cmp
xor
lret
pusha
cwtl
jb
add
inc
clc
test
ret
aad
inc
adc
shr
cmc
mov
sub
in
mov
pop
les
add
inc
push
inc
inc
insl
push
push
push
arpl
mov
pushf
call
ja
jo
stc
subl
stc
sbb
insl
aas
mov
rcrb
cmpsl
sbb
popf
gs
mov
fs
loope
les
xlat
fists
leave
in
jno
lahf
mov
cwtl
pop
bound
xlat
das
loope
dec
lods
ret
xor
fistps
into
std
inc
mov
outsb
lods
stos
iret
cmp
cli
and
jae
fstps
sbb
cmp
shll
push
inc
xlat
sub
push
jmp
mov
push
or
jmp
fcoml
pop
push
movsb
inc
mov
lahf
stc
daa
rolb
push
add
push
mov
inc
push
inc
and
hlt
adc
aam
inc
xchg
mov
jmp
cmp
mov
mov
push
mov
out
jle
fcomps
adc
and
or
iret
and
dec
pop
jne
jge
jnp
mov
ljmp
loopne
test
shlb
and
push
stos
dec
shr
dec
ljmp
pushf
fwait
and
int
repnz
adc
enter
inc
addb
adc
sbb
or
inc
mov
xchg
int3
clc
dec
dec
sarb
pusha
stos
and
call
fs
adc
fstps
aad
inc
movsl
fcomps
rcrl
into
repnz
or
and
add
mov
jp
call
xorb
inc
inc
xlat
sub
test
and
bound
jle
cmp
movsb
cmp
add
and
dec
idivb
test
and
aam
adc
mov
dec
pmulhuw
mov
int
jmp
mov
pop
xchg
mov
movsb
xchg
retw
add
in
or
es
jo
bswap
in
jge
cmpsb
sub
sti
call
jmp
das
test
sbb
stc
push
pop
loop
pop
cmp
dec
pusha
testl
fs
add
les
jg
jb
cmc
into
inc
xor
add
std
inc
mov
js
in
inc
or
mov
adc
mov
pop
loope,pn
pop
mov
xchg
mov
jle
cmp
sbb
push
add
dec
in
sahf
pop
sbb
xor
aaa
loopne
jg
into
fistps
pusha
mov
mov
jo
cld
mov
jns
pop
lret
dec
paddusb
out
ret
lret
jns
add
ss
add
dec
xchg
cltd
push
into
iret
aaa
leave
inc
pop
cld
add
or
jmp
aas
mov
mov
lcall
mov
std
push
ljmp
add
cld
sbb
test
test
lock
pop
shlb
lret
add
add
subb
push
and
dec
add
lock
dec
jbe
push
test
add
fidivl
xchg
inc
hlt
test
cmpsl
in
push
fstpt
nop
add
loopne
jne
ror
bound
push
or
sbb
mov
xchg
push
mov
or
inc
int3
xor
lods
push
mov
pop
or
inc
int3
dec
cwtl
jmp
cmp
int3
dec
out
jnp
fwait
cmp
pop
test
and
lods
pushf
out
cmpsl
xchg
pop
adcb
in
pop
jb
lea
jecxz
xlat
mov
clc
xlat
lea
mov
add
push
lods
inc
into
addb
test
shr
into
movsl
cmp
scas
leave
aam
mov
pusha
dec
fidivs
adc
xchg
lds
adc
mov
xchg
jbe
in
scas
in
mov
push
sbb
repnz
repnz
pop
jecxz
shlb
dec
and
sbb
adc
xchg
insb
push
jne
dec
pop
jnp
loop
dec
lret
mov
test
cmp
mov
cli
cmc
adc
jl
repnz
sbb
bound
pop
cmp
dec
push
mov
mov
xchg
gs
xor
fisttpl
jnp
mov
xor
push
lret
xchg
ret
mov
loopne
bound
jnp
jge
pop
mov
pop
movsb
xor
jg
mov
jp
icebp
and
fiaddl
in
movsb
inc
lret
xchg
jecxz
je
jle
arpl
data16
mov
jo
mov
xor
jae
dec
in
mov
sti
adc
or
cld
gs
mov
das
fildll
xor
add
andl
mov
gs
fchs
inc
cmp
jmp
aas
xor
pop
andl
stos
jmp
jl
push
cli
loopne
mov
push
aaa
lret
xchg
mov
mov
frstor
addb
pusha
jecxz
or
adc
lret
fldl
cli
andl
adc
sbbb
push
xchg
rorb
pushf
sbb
add
int3
fdivr
jae
ja
add
ds
outsl
loopne
hlt
rclb
and
adc
push
cld
lcall
pusha
aad
sub
roll
dec
inc
arpl
mov
fcoml
iret
mov
and
movsl
push
pop
dec
xor
das
adc
cli
fsubs
movsb
inc
push
mov
push
mov
push
add
scas
in
mov
add
movsl
orb
add
cmp
lods
ss
push
or
pop
aad
cmpsb
or
add
insl
mov
cmpsb
lret
xor
gs
imul
mov
mov
icebp
pop
popf
jge
push
sbb
and
jg
in
test
out
adc
inc
ret
aas
andb
cltd
push
fstp
inc
andl
dec
or
ljmp
push
bound
jmp
imull
mov
int
rcll
jnp
sub
and
pop
mov
stos
jmp
lret
dec
mov
popf
jne
out
outsl
xor
pop
out
pusha
das
mov
sahf
mov
dec
mov
repnz
inc
sub
jno
sysret
sub
fists
xchg
pop
aad
push
xlat
mov
push
mov
into
mov
fstps
mov
and
std
into
lcall
pop
leave
xchg
je
aam
movsl
jecxz
fisttps
cmp
loope
in
roll
dec
add
repnz
mov
push
pop
pop
repz
jns
fcmovb
fs
iret
cltd
lahf
lock
repnz
ss
cltd
or
inc
mov
adc
jns
xchg
sub
das
jmp
std
fbld
mov
loop
push
xchg
lcall
sti
and
jnp
push
ret
mov
and
jmp
push
popa
gs
std
loop
inc
test
cs
clc
mov
pop
mov
or
lret
xchg
dec
lahf
ret
mov
mov
push
in
test
sarl
es
dec
decb
mov
mov
stc
pop
dec
xchg
mov
mov
repnz
mov
sub
adc
add
cltd
mov
fcmovbe
mov
dec
rcrl
testb
pusha
mov
sub
sbbl
mov
fstps
iret
loope
jmp
outsl
bound
mov
add
fnstenv
mov
int3
inc
push
imul
dec
xchg
loopne
imul
xchg
mov
inc
jb
repz
fmuls
aas
lcall
mov
push
pop
push
loop
and
loopne
popa
in
das
mov
js
adc
push
insb
pusha
test
iret
add
push
and
jge
shll
int3
mov
mov
xchg
pop
test
xchg
in
adc
lods
push
pop
cmp
das
mov
pop
loope
push
in
fistpl
jmp
pusha
adc
sub
fiadds
or
cwtl
mov
pushf
inc
fs
cli
jnp
and
or
add
outsl
lea
dec
scas
inc
je
stos
rcrb
xor
inc
mov
mov
or
and
pop
cmp
lret
push
xchg
loopne
jge
mov
jae
pop
push
aad
jg
pop
ret
fisttpl
xchg
inc
jmp
mov
pop
ss
cmpsl
mov
ja
mov
inc
add
cmp
mov
jecxz
rorl
aad
mov
inc
jno
and
xor
js
lret
jge
in
cmp
mov
jmp
mov
and
roll
mov
pusha
mov
inc
arpl
rorl
xlat
push
int3
pop
lods
aam
push
ret
pop
sub
mov
push
xchg
out
push
roll
dec
call
lar
ds
bound
or
fwait
lret
rcll
mov
lcall
sub
sti
inc
jecxz
inc
or
xchg
jge
loope
xchg
cmp
incb
ret
cmp
icebp
test
add
dec
fs
mov
dec
pop
xchg
sub
das
cli
xor
cmpsb
dec
outsl
aaa
mov
mov
popa
out
mov
int
rcrl
loop
mov
adc
xor
push
gs
xchg
mov
pop
mov
faddl
std
dec
xor
cli
inc
xor
push
mov
sbb
aam
adc
out
loop
pop
lods
aad
mov
lcall
std
rcrl
adc
test
add
pop
bound
sbb
roll
shll
pushf
popa
ret
in
lret
cmp
fdivp
jno
gs
cmp
testb
in
inc
mov
outsl
scas
pop
iret
jmp
or
jne
adc
dec
js
lds
aad
cltd
dec
sbbb
sbb
in
xchg
sti
js
push
out
mov
push
cmpsl
jmp
jae
test
xlat
mov
inc
sbb
sub
or
les
fwait
out
xor
icebp
stos
out
cld
adc
ficomps
shll
aas
orb
cmp
inc
mov
push
mov
and
jg
jl
int3
jmp
add
xchg
insl
leave
addl
imul
mov
aas
je
clc
jp
jbe
add
xchg
sbb
aas
icebp
je
push
gs
roll
mov
inc
aaa
ret
fnstsw
cmpsb
test
fisttps
add
mov
into
dec
andb
fs
mov
movsl
cmpsb
pop
adc
fcmovu
stos
mov
push
mov
lcall
jl
sarl
inc
mov
add
inc
clc
add
xor
pop
inc
xchg
add
fnsave
lods
data16
xchg
jne
inc
int
jecxz
aaa
fsubl
fistpl
dec
inc
ljmp
cld
or
cmc
ss
add
pop
xchg
mov
aaa
jo
notb
xor
cltd
iret
mov
pop
dec
inc
loop
fdivl
pop
cmpsb
icebp
push
pop
mov
jbe,pn
in
test
jmp
jb
and
loop
imul
fimull
popl
push
in
fcomip
aad
shlb
inc
mov
test
sub
cltd
lock
rcrl
int3
jecxz
add
xor
test
roll
int3
add
mov
cwtl
shll
ss
cmp
sbb
push
fdiv
push
clc
inc
aas
or
cmp
push
rcrl
jecxz
push
mov
mov
rcrl
and
pop
in
dec
cld
mov
and
in
pop
pop
cmpsl
repnz
scas
call
mov
jns
nop
int
add
xchg
fisubl
fimuls
loope
fs
jecxz
xor
jnp
inc
test
aas
ja
stos
add
lods
inc
adc
repz
test
pop
add
mov
mov
repz
in
dec
incl
cmp
dec
jns
jns
nop
ljmp
pop
cmp
pop
inc
fldenv
outsl
sub
cmp
inc
add
imul
push
sub
inc
xchg
sbb
ret
decb
sarl
xlat
xchg
shlb
dec
adc
pushf
fsubrs
xor
das
push
shl
js
call
add
lods
xchg
loop
push
iret
add
cwtl
sub
lahf
push
lret
or
out
fistl
pusha
xchg
fimull
les
scas
insl
and
adc
jecxz
push
lock
mov
pop
jae
loop
mov
loop
dec
sti
cmp
pop
incl
cwtl
xor
adcb
aam
mov
test
add
dec
aad
dec
out
das
mov
xchg
leave
fidivrl
jg
addb
mov
xchg
or
nop
cmpsl
dec
sbb
inc
movsb
iret
in
mov
pop
pushf
ret
mov
stos
fstpt
xchg
or
mov
int3
lcall
and
dec
xlat
imul
fnsave
xchg
jp
and
lret
cmp
pop
jp
add
gs
shll
in
es
push
inc
and
mov
popa
jne
xchg
int3
insl
mov
xchg
and
jg
jl
cmp
test
dec
aam
fistps
pop
mov
stc
or
xlat
pop
mov
mov
sub
stc
cmp
in
adc
aaa
mov
in
mov
mov
mov
sbb
inc
pop
out
mov
or
popa
outsb
nop
popa
fnsave
or
mov
lcall
loop
push
sub
scas
dec
std
sub
lock
and
movsb
andb
fs
jg
cmp
mov
dec
int3
bound
stc
sub
mov
jno
cmc
sbb
jae
sub
mov
sahf
xor
bound
mov
in
scas
movsl
add
sbb
roll
in
ret
test
ljmp
fwait
inc
mov
aad
lret
and
ja
test
rolb
xor
pop
push
xchg
push
into
cmp
roll
fcmovbe
out
ret
cli
xchg
lret
cmp
sub
xchg
lret
imul
xor
ljmp
push
push
dec
push
and
js
into
clc
add
stos
mov
out
xchg
in
xchg
sbb
fwait
into
es
adc
aam
aam
mov
into
daa
add
add
fstpt
or
mov
pusha
inc
out
dec
add
ret
lea
movsl
mov
aaa
or
lret
into
inc
xor
lea
xchg
ret
sti
fidivrs
cmp
lahf
pushf
cltd
mov
xchg
jnp
push
push
xchg
push
jns
mov
mov
fstpl
scas
fldcw
fwait
sbb
jmp
cmp
add
xor
dec
fdivl
out
mov
xchg
aaa
ficoml
push
add
pop
inc
sarb
add
inc
ss
add
scas
sub
std
inc
push
icebp
jnp
int3
rcl
lret
inc
dec
arpl
popf
jmp
mov
and
sbb
jb
cwtl
inc
decb
mov
inc
sbb
add
lea
mov
mov
sub
push
test
jmp
sbb
sbb
cmp
and
in
hlt
xchg
std
data16
adc
out
test
test
and
dec
int
ljmp
lcall
mov
ret
jnp
imul
loopne
sahf
mov
or
push
outsl
lcall
mov
push
mov
push
pop
fs
imul
add
mov
paddd
sbb
dec
sbb
and
cmp
push
or
push
cs
addb
cli
xlat
xorl
das
mov
pop
xor
stos
pop
pop
mov
outsl
movb
call
fs
sub
out
pushf
cs
shll
fstpl
xchg
fistps
mov
mov
cltd
sub
dec
js
mov
cmp
inc
inc
cmp
cmp
out
mov
mov
sub
inc
push
sbb
cmp
jae
pop
jl
push
iret
div
cltd
xor
push
loope
add
mov
dec
ja
fwait
jle
xor
in
inc
mov
mov
in
sarb
dec
flds
bound
andl
jo
push
cmp
xor
push
add
mov
jno
aas
ret
mov
inc
pop
bound
test
repz
inc
jnp
fwait
stc
sub
cmpsb
repnz
mov
mov
cmp
test
popa
cwtl
insb
sub
es
lret
pop
test
je
mov
mov
fwait
test
inc
outsb
mov
jno
push
imul
rolb
jmp
mov
lods
mov
sbbl
add
or
test
dec
test
pop
pop
incb
add
lret
xor
jp
inc
lret
sub
shlb
adc
fisubl
gs
xchg
iret
xchg
xchg
shrl
jg
jno
cmpsb
jns
push
and
add
fld
test
cld
ret
js
sub
lret
cmp
in
jmp
cmp
lds
pushf
lret
cmpsl
inc
clc
lods
imull
dec
scas
mov
pop
sub
rcll
mov
nop
and
jge
pop
adc
jne
mov
jmp
outsl
fs
push
test
fisubl
add
shrl
sbb
popf
mov
sbb
or
fs
les
roll
nop
or
iret
movsl
xchg
lret
adc
lods
add
roll
cmp
test
enter
sbb
ret
and
mov
addr16
dec
cwtl
fldl
dec
stc
pop
jmp
dec
shrb
vmaxss
mov
mov
mov
ja
shrb
and
cltd
mov
mov
or
sti
add
mov
jmp
inc
mov
add
pop
leave
aad
dec
andl
dec
or
dec
pusha
aam
jmp
mov
arpl
xor
add
std
push
in
xchg
fisubl
sbb
mov
loopne
adc
inc
push
push
aad
mov
ficomps
int3
lret
mov
fst
or
popf
clc
dec
cmpsb
enter
cmp
ds
lcall
rol
mov
sahf
sarb
pop
xlat
mov
std
mov
lcall
repz
cmpsl
std
scas
in
movsb
lcall
ret
jle
jae
xlat
mov
mov
stos
mov
scas
jmp
fxam
fcoml
add
or
cmc
and
push
sub
jbe
sbb
jo
mov
and
insb
mov
jne
std
out
dec
sub
pushf
push
fs
dec
imul
shlb
loope
dec
dec
sub
sahf
dec
sbb
negb
and
sahf
cmp
cmp
fistl
in
addr16
xlat
sahf
jg
jle
jge
cli
test
out
mov
pushf
inc
imul
test
lahf
jne
jg
sbb
mov
frstor
leave
fsub
shl
imul
lret
in
push
movsl
imul
dec
lods
xor
jl
mov
addr16
xor
sub
push
outsl
in
cmp
in
xor
add
jge
lret
jecxz
push
mov
mov
push
cmpsb
dec
xor
mov
imul
icebp
dec
and
data16
sub
es
jb
out
fdivrl
loop
in
fmull
adc
pop
in
push
test
sub
in
fists
mov
pop
jecxz
xchg
les
xchg
and
in
mov
fstl
mov
ljmp
in
lcall
out
iret
out
ror
lcall
mov
push
rol
sub
fst
mov
jecxz
mov
gs
in
std
cmc
aad
pusha
cmp
repz
cmp
bound
int
cld
dec
int
or
js
fcompl
add
pop
sar
les
shr
test
popf
fmull
shrb
std
aam
and
jl
xchg
popf
aad
es
mov
dec
mov
pop
cmc
sbb
jae
cs
push
in
in
in
pop
loop
int3
pop
ljmp
mov
out
or
xor
je
sub
iret
ficoml
in
int3
shlb
dec
sbb
pop
aas
dec
pop
aad
sbb
int3
movsb
adc
mov
test
push
insb
icebp
arpl
pop
pop
aad
stc
rorl
in
jmp
cmp
add
test
popa
popf
mov
mov
cmp
les
loopne
sbb
in
daa
add
pusha
std
aad
daa
in
call
lret
repz
sub
lods
fwait
cmp
xchg
pusha
inc
or
inc
xlat
jecxz
jne
mov
in
sti
mov
jnp
int
hlt
in
int
insb
in
std
pop
in
int3
pop
lods
int3
mov
fxch
jmp
jne
inc
rcr
xor
cmc
push
sbb
aam
push
je
loop
pop
leave
into
frstor
mov
imul
mov
push
lcall
add
insl
int
out
or
int3
loope
pop
add
leave
lea
lock
sbb
out
fcmovne
cmc
test
sar
lahf
sub
arpl
lods
cmpsb
mov
or
in
sti
sbb
fcompl
sub
cld
pop
cltd
inc
push
nop
subl
cmp
nop
dec
or
int
sahf
sbb
adcl
sub
lods
push
aad
and
ficomps
in
jmp
jo
test
lcall
pop
sbb
dec
fldt
cmpsb
in
or
xor
dec
movsl
inc
sbbl
nop
pop
adc
insl
es
push
cmp
outsl
out
lods
in
jmp
mov
ja
jge
in
out
ret
mov
mov
out
jne
inc
mov
adc
push
sbb
adc
shr
and
and
int
sbb
cmp
adc
sbb
xor
add
jmp
cmp
aam
lcall
sti
decb
push
jne
mov
mov
test
xchg
mov
cmp
sub
cmp
shlb
jnp
outsl
in
xor
inc
pop
cmpsb
cmp
popa
mov
mov
inc
xor
aad
iret
in
xchg
imull
jmp
cmp
rcrl
cwtl
rcrb
in
aam
sti
mov
xor
cmp
push
je
jmp
jne
cs
daa
mov
int
ja
ficompl
mov
pusha
clc
mov
pop
pop
sub
outsl
in
jne
mov
cmp
es
jnp
pop
idiv
stos
orb
jmp
or
jp
fnsave
fneni(8087
adc
jecxz
lret
in
rcr
cmp
add
cmc
xchg
pusha
imul
jns
shl
outsl
and
pop
mov
pop
dec
bound
pop
testl
jne
mov
or
dec
rorl
es
xchg
jecxz
push
jb
pushf
cmp
sbb
incb
imul
sahf
rcrl
jecxz
dec
or
mov
lds
jno
or
add
aas
aad
fistl
mov
movsb
gs
and
icebp
flds
sahf
cmc
sbb
test
jns
xchg
push
xchg
int3
sbb
in
mov
add
sbb
mov
sbb
mov
cld
mov
in
test
call
int3
clc
jmp
in
mov
lahf
ret
ljmp
test
insl
ss
mov
imul
jb
cmc
pop
pop
int3
xchg
mov
fs
jp
mov
aam
in
dec
or
das
mov
int
cmc
mov
dec
cmp
jns
mov
test
push
dec
push
scas
fstpl
int3
mov
xor
in
in
sbb
dec
fst
sti
repnz
shl
fcompl
mov
jmp
pop
sub
push
out
lahf
sahf
stos
mov
mov
adc
pop
add
lods
mov
movsb
ljmp
mov
mov
call
fldt
fadd
loop
in
inc
call
mov
stos
mov
fistpll
sbb
xor
test
xchg
jecxz
cltd
xchg
cmpsb
mov
movsb
lret
fsubp
out
movsb
cmpsl
sahf
xlat
mov
cmpsb
test
pushf
dec
movsl
mov
int
jmp
lret
or
sbb
mov
adc
xor
lds
mov
mov
mov
movswl
add
hlt
ret
cld
in
cmpsl
lods
mov
lock
mov
push
lea
test
mov
cmp
pop
stc
xchg
popa
xchg
pop
xchg
lods
jae
push
imul
sbb
cmp
xchg
in
hlt
xchg
push
stos
cs
cld
leave
out
cmp
aam
addr16
dec
leave
lock
fisttpl
out
mul
enter
inc
mov
int
mov
int
call
adc
test
lds
mov
dec
gs
xchg
xor
and
push
pop
fsubrl
aad
mov
mov
lock
add
hlt
mov
test
lock
repz
test
xor
jl
jo
out
jecxz
lcall
std
movsl
adc
repz
pop
fistl
cmp
test
ret
scas
adc
in
pop
mov
xchg
mov
fisubrl
mov
jge
in
xor
lods
stos
test
out
mov
lret
jle
add
sbb
xchg
lea
add
xchg
pop
aam
aam
dec
in
cwtl
inc
lret
sub
pop
je
std
ljmp
mov
sti
dec
test
xchg
mov
stos
scas
mov
xchg
std
imul
mov
lcall
lret
ret
jno
lcall
movsb
imul
or
jbe
sub
push
mov
mov
dec
addb
inc
pushf
push
stos
push
cltd
scas
test
rcll
mov
into
fisttpl
in
insb
icebp
aad
cmc
inc
lods
pop
push
imul
push
fstpl
imul
cld
mov
mov
test
jge
out
xor
in
jae
das
xorl
mov
fisubs
in
jmp
popa
pop
outsb
cmpsb
xor
stos
test
jge
cmc
xchg
loopne
jnp
xchg
push
mov
dec
mov
mov
mov
adc
inc
pop
adc
xchg
in
fs
int3
mov
or
in
jmp
repnz
and
fs
sub
int3
fsubrs
lret
bound
and
dec
fdivr
push
and
push
or
popf
gs
xor
dec
data16
int3
pop
ds
mov
in
sti
push
std
add
in
out
fisubl
cmp
sar
out
shll
mul
pop
lahf
pushf
stc
lcall
pop
fsubr
and
mov
xchg
test
nop
bound
xor
inc
xchg
xor
rcl
xchg
in
lret
fldenv
bound
adc
movsl
movsb
cld
mov
int
pop
ss
jl
pop
and
cwtl
int
ja
xchg
mov
lret
jmp
sbbl
mov
pop
pop
icebp
sbb
cld
in
in
movsl
mov
jecxz
popa
sbb
cld
subl
mov
fs
cmp
sbb
cwtl
loope
pop
push
lea
fs
sbb
xor
xchg
fiaddl
mov
xchg
in
cmp
jmp
lret
xor
bound
xchg
lea
fsubl
imul
sub
push
cmp
out
in
fs
mov
out
mov
movsb
add
cmpsb
fldt
pop
sbb
xchg
sub
mov
movsl
jmp
pusha
aad
cmpsl
xchg
andl
push
lods
cmpsl
int
push
lock
fsubrp
aad
inc
pop
xor
and
or
xor
ss
call
jns
sbb
pop
xchg
push
adc
xchg
mov
pop
push
rcrl
pop
cmpsl
mov
scas
popa
gs
stos
pop
mov
icebp
sbb
add
popf
add
cmp
push
cmp
push
sub
mov
push
bound
test
inc
ja
mov
ret
fldenv
lcall
xchg
xchg
inc
test
inc
cs
sub
dec
cmc
dec
scas
fldl
mov
ss
pop
fstl
mov
icebp
cmp
inc
imul
lods
pop
fildl
sti
rorl
cmc
mov
cmpsl
and
pusha
xor
imul
imul
dec
fstpl
push
xchg
inc
jno
sahf
fwait
and
mov
jp
xor
inc
or
mov
rcrl
test
jecxz
jb
pop
jbe
sbb
mov
sub
or
cmp
pop
jnp
call
inc
movsb
clc
lds
rclb
je
negl
mov
mov
imul
int
and
pop
pushf
aad
loop
ja
pop
adc
fadd
push
cmc
pop
inc
leave
nop
fbstp
jl
mov
addr16
fcomps
inc
es
xchg
cwtl
dec
sub
fidivl
popf
sahf
sbb
sub
xchg
cmp
ds
pop
push
out
loope
inc
adc
jbe
fildl
imul
mov
add
inc
cmp
mov
xor
scas
or
sbb
pop
sub
outsl
pop
push
xor
cmp
mov
xchg
ret
jl
ss
icebp
jae
cmp
cmpsb
shll
cld
rclb
pop
sbb
sub
and
ret
pop
xchg
sub
shrb
fcmove
insb
xchg
dec
jl
cmc
sub
inc
cmp
mov
cmc
push
add
ja
ljmp
jne
aam
daa
aas
fisubs
jae
fwait
jb
pop
frstor
jmp
push
dec
ret
rcr
imul
inc
icebp
lret
fsubrl
mov
adcl
lahf
jmp
inc
cmp
inc
bound
fisttps
sub
push
jnp
pop
addr16
cmpsb
fstps
mov
scas
std
and
add
jmp
aad
or
jae
sub
icebp
lret
xchg
pop
lock
in
or
cmp
imul
jns
dec
cwtl
out
cmp
push
jecxz
adc
mov
es
out
std
dec
orl
jg
ja
sbb
out
bnd
add
mov
dec
test
inc
test
fnstenv
pop
into
fs
movsl
mov
fstpt
dec
fstpl
mov
mov
lret
sarl
cwtl
pop
stos
add
inc
mov
pmuludq
mov
mov
aad
mov
test
dec
push
cmp
aaa
inc
jb
cs
sbb
inc
push
je
gs
ljmp
fisttps
mov
cs
jne
inc
mov
fwait
jne
sub
jecxz
mov
imul
dec
jns
loopne
aam
repz
pop
or
xor
sbb
mov
imul
dec
xor
shr
mov
iret
cmpsl
add
stc
dec
cmp
add
arpl
stos
gs
or
xorb
push
in
mov
mov
shr
sub
pop
es
jnp
fwait
push
hlt
fdivl
mov
or
and
mov
lock
out
repnz
jb
repz
jnp
pushf
push
stc
xlat
ret
cltd
ss
lret
mov
sbb
rorb
in
sahf
fs
popa
or
inc
cs
icebp
xchg
adc
fucomp
shrb
imul
or
bound
cmpb
out
daa
cmp
sbb
dec
or
in
fisttpl
xchg
jmp
and
mov
xor
fs
sahf
push
in
jmp
cmp
jmp
or
fildll
pop
add
cmc
mov
lea
jo
int3
fadd
lret
fstl
xchg
andl
fcmove
loope
sbb
and
push
mov
sbb
mov
adc
sbb
mov
mov
xor
xor
and
loopne
inc
lods
test
testb
sbb
cmc
jmp
fmull
shlb
jmp
and
fcoms
dec
and
and
int
xchg
std
fidivs
pop
aad
jno
sti
es
or
int3
jecxz
loop
mov
dec
lods
inc
dec
sub
jb
pop
inc
fimuls
push
cld
pop
ret
fildl
adc
leave
stos
int
lods
test
mov
scas
jmp
adc
repnz
loop
fs
fld
sub
scas
test
mov
fidivrl
xor
jle
sub
leave
mov
jmp
or
inc
xchg
cli
and
pop
pop
std
mov
mov
cwtl
mov
mov
or
jg
insb
jecxz
jle
jne
mov
or
std
and
sub
mov
shrb
cmc
std
sti
pop
lods
inc
out
sarb
add
jp
popa
test
jle
rolb
inc
aas
adc
cmp
lcall
sbb
xor
xchg
aaa
xchg
xchg
fadds
mov
fs
scas
xchg
stc
xchg
paddw
in
adc
pop
sub
out
cmpl
adc
cmp
fnsave
jb
inc
cmpsb
and
aam
and
dec
and
es
frstpm(287
sbb
jae
mov
out
mov
xor
mov
sub
movsl
mov
ret
popf
sub
xchg
insb
or
inc
inc
popa
lahf
dec
leave
icebp
in
push
movsb
nop
bound
fimuls
and
and
xchg
xchg
mov
inc
sti
jns
leave
jl
mov
repnz
mov
insl
in
scas
sub
ficoml
cmp
movsl
mov
dec
ret
push
int3
ja
cmp
adc
psraw
dec
jp
dec
test
mov
sbb
jmp
imul
pop
insl
sbb
push
lods
pop
or
mov
cmpsb
stos
or
loopne
ja
push
jae
and
xchg
cmp
repz
mov
aam
sub
cmp
sbb
pop
sub
fstps
movsb
pushf
adc
mov
sti
sub
inc
sbb
push
ror
xchg
aas
je
pop
lods
in
aam
sti
repz
loopne
sub
call
mov
or
mov
fs
mov
sbb
adc
or
gs
out
int
scas
icebp
int
xor
ja
in
cmp
pop
cli
sub
jecxz
mov
inc
mov
pop
test
scas
in
xor
fld
int
xchg
push
mov
lret
add
fistpll
push
push
setg
sbb
cld
pushf
mov
andl
and
pop
dec
or
mov
cmp
jp
out
add
add
or
fdivs
out
fcompl
mov
fistl
and
loope
add
push
leave
xchg
lret
ret
nop
add
leave
in
xchg
aam
and
scas
pusha
js
and
add
inc
mov
addr16
mov
gs
pop
add
xor
jle
mov
std
mov
jne
insl
cmp
sbb
mov
cmp
in
fldenv
gs
xchg
push
jno
push
popa
mov
aas
pop
imul
nop
insb
test
push
pop
mov
ret
cmpsb
stos
fwait
mov
cmpsl
popa
loopne
mov
fldenv
cmp
out
push
imul
inc
jg
cmp
adc
pop
aam
push
xchg
in
repz
or
in
dec
out
or
jmp
int
push
jmp
fistpl
cmc
add
dec
pusha
add
mov
mov
mov
rclb
stos
adc
mov
loopne
xor
add
ret
add
jge
jg
xor
sub
lahf
js
mov
mov
sbb
and
cmc
lret
sbb
push
mov
mov
sub
adc
adc
scas
std
fldl
push
test
and
mov
cwtl
test
out
mov
sub
in
sub
test
push
add
dec
jbe
popf
inc
mov
sahf
pusha
mov
ficompl
cld
push
in
sub
adc
push
dec
xchg
frstor
xchg
mov
flds
iret
loopne
inc
jb
popa
cmpsb
cmc
xchg
loopne
push
mov
or
cmc
cld
sbb
movsb
add
sub
jno
sarl
ror
repnz
repz
adc
lea
mov
mov
test
jno
fwait
into
or
rorl
stos
lret
insl
or
mov
lods
pop
flds
decb
loop
jne
orl
cld
lahf
rorb
xor
dec
out
inc
pop
dec
jmp
aam
repz
stc
mov
or
scas
mov
iret
mov
add
sahf
fstps
and
add
mov
adc
cmpsb
push
or
in
pop
leave
rclb
fwait
in
iret
test
xlat
pop
mov
bound
dec
fidivrs
xor
jl
in
repnz
call
aas
inc
fsubrp
inc
lret
sahf
imul
ljmp
gs
mov
rcrb
or
lea
push
xchg
fwait
popa
xor
into
insl
pop
addr16
iret
lods
lds
mov
stc
mov
test
lcall
aaa
out
mov
pop
dec
imul
cmc
mov
adc
jmp
and
pop
js
mov
jb
xor
cmpsb
popf
out
mov
xorb
stos
jecxz
hlt
icebp
inc
sub
stos
fsubrs
add
and
ljmp
jb
in
inc
cmpl
fsts
lret
popa
dec
and
mov
and
add
push
pusha
dec
imul
xchg
repz
jne
loope
addr16
lea
cmc
inc
movsb
pushf
cmp
icebp
and
mov
xor
sub
mov
and
push
outsb
insl
mov
sbb
loope
aas
mov
push
insl
jb
mov
mov
mov
daa
sbb
push
cmp
xchg
repz
fs
mov
ljmp
mov
stc
dec
orl
arpl
sub
cltd
or
shll
loopne
inc
pop
mov
nop
pop
movsb
sbb
enter
popf
mov
ja
jecxz
or
or
shl
or
pop
sbbb
and
dec
mov
inc
movsl
xchg
lcall
mov
test
jle
adc
lcall
ucomiss
aaa
mov
aad
inc
fs
push
sbb
sbb
jno
ljmp
push
leave
fimuls
ret
fbstp
pop
movsl
rcr
sarb
push
cmp
aaa
test
ret
ficompl
fwait
and
push
subb
std
mov
push
pushl
cmp
inc
lret
outsb
test
mov
sub
lahf
dec
pop
xchg
and
and
imul
sahf
ljmp
pop
and
in
outsb
rorb
cmp
lret
mov
testb
hlt
in
cwtl
xor
push
push
and
adc
sbb
es
test
je
sbb
cmp
imul
fstps
fsubp
aad
pushf
cli
addr16
lds
pop
fstps
sahf
push
sti
adc
dec
and
jmp
inc
lock
bound
mov
jae
cmp
xchg
mov
sub
add
or
mov
shlb
jecxz
dec
jecxz
sub
rcr
lahf
scas
mov
jne
push
xchg
cli
les
ret
mov
das
xor
bound
push
xor
adc
xchg
bound
or
mov
jne
lea
fldl
mov
jg
push
jb
mov
fs
mov
addr16
insl
ret
sub
push
iret
mov
int3
int3
adc
fwait
insl
in
inc
xchg
out
jge
rcll
in
sub
xor
outsb
lret
stos
mov
leave
mov
in
out
adc
inc
test
jae
and
insb
pusha
mov
daa
cmp
inc
and
mov
cwtl
cmp
das
fs
mov
inc
cmpsl
jnp
mov
leave
fcmovb
pop
pop
jecxz
dec
hlt
icebp
and
mov
and
adc
adc
jno
repz
xor
lahf
mov
push
rcrl
pavgw
rcrb
push
pop
dec
jmp
shl
mov
pushf
iret
ss
lcall
cli
mov
subl
push
int
popa
call
lock
lret
std
mov
xchg
test
push
fnstenv
rcrl
imul
xor
mov
fcmovnbe
mov
mov
call
imul
test
loope
add
in
mov
cs
in
add
pop
dec
negb
test
imul
fs
pop
addr16
in
add
fcmovne
mov
mov
fildll
lcall
andl
bound
lcall
ss
xor
mov
jmp
xchg
mov
filds
shll
pop
mov
push
fdivrs
mov
std
outsb
dec
xlat
shll
lods
flds
sub
lea
mov
stos
mov
cmp
mov
test
inc
arpl
push
imul
fidivs
scas
movsl
mov
push
xor
jge
iret
in
pop
add
in
adc
sbb
pop
ficoms
sub
pop
sub
rorl
mov
orw
cs
or
sbb
cli
jg
insl
sub
pop
push
cmp
mov
xchg
xchg
inc
insl
sarb
pushf
inc
sbb
inc
mov
cmp
popa
test
mov
cmp
pop
fs
add
mov
jnp
mov
lcall
mov
add
mov
ret
ja
mov
and
sub
sbb
jge
mov
jno
movsl
add
inc
pop
das
cmpsl
cld
jg
inc
leave
orb
add
or
add
in
cmp
mov
mov
mov
fisubs
dec
sahf
out
mov
movsl
leave
out
adc
inc
or
gs
mov
mov
in
sub
lcall
xchg
sbb
jl
aaa
adcb
jecxz
or
repnz
jnp
cmp
aaa
lods
movsb
xor
add
inc
jl
hlt
addr16
xchg
jecxz
cmp
loope,pn
dec
and
cmp
push
repz
add
dec
in
inc
cwtl
jg
sbb
fcom
nop
jae
mov
das
and
sahf
hlt
and
fwait
push
pop
inc
ds
jnp
jl
mov
add
jecxz
test
iret
sahf
imul
cli
and
gs
stos
iret
test
sub
push
call
add
lahf
lods
pop
decb
add
sub
xchg
std
pop
jns
call
push
xor
gs
sbb
push
xlat
sahf
cmp
popa
and
sahf
mov
mov
cli
mov
dec
pusha
movsl
ja
cmpsb
mov
mov
mov
sub
loope
pop
xor
mov
push
popf
je
ss
pop
mov
repnz
push
cmp
or
mov
icebp
sub
pop
xor
fdivrl
inc
pop
aam
dec
mov
scas
add
rorl
pushf
repz
insl
lahf
inc
test
xchg
pop
xchg
and
out
sbb
inc
xchg
int
popa
mov
ja
and
clc
in
dec
incl
jnp
ss
mov
fiadds
test
xor
mov
add
insl
das
xchg
cmpsl
cmp
repnz
mov
cmp
jecxz
pop
cli
loopne
cli
pop
inc
fwait
add
aam
mov
js
lret
dec
fldcw
sbbl
inc
jns
sahf
cwtl
mov
arpl
xchg
out
add
shl
lahf
jnp
inc
rorb
lcall
fwait
popa
fldcw
aas
add
int
xlat
cld
lahf
inc
sbb
arpl
mov
push
js
outsl
pop
adcl
les
arpl
outsb
or
jo
push
dec
aas
cmp
aas
loopne
in
test
lret
adc
lea
mov
scas
add
mov
or
je
pop
mov
or
mov
std
jmp
mov
int
inc
lods
sub
movsb
push
or
outsl
cltd
jo
inc
andl
js
xchg
lods
xchg
pop
loope
test
sbb
push
sub
clc
leave
std
push
mov
ljmp
pop
inc
cs
cwtl
pop
ja
movsb
out
rep
pushf
cmp
jmp
arpl
jbe
xchg
rorl
ficompl
movsl
sbb
sbb
sub
stos
lods
mov
mov
aad
ljmp
sub
outsb
cmc
sbb
jne,pn
xchg
cmp
aas
push
aas
int3
in
push
jmp
xchg
std
or
jle
int3
in
mov
jl
fstpt
fwait
icebp
mov
popa
aas
addr16
ds
sub
cmp
cmpb
mov
push
pusha
test
mov
cmp
inc
mov
mov
sub
mov
cmc
mov
push
or
mov
outsb
pop
cmp
fisttpll
popf
jle
jg
inc
sbb
cld
cltd
and
cli
sub
gs
xchg
orb
lahf
sbb
jle
push
popf
mov
cmpl
xor
jg
push
inc
dec
int
loop
out
mov
adc
jbe
or
repnz
pop
nop
push
inc
clc
mov
push
fdivr
test
jae
push
clc
movsl
popa
pop
in
sbb
adc
dec
dec
mov
and
rcl
push
fisttpll
sahf
sar
in
in
loopne
mov
ret
into
insl
dec
jo
push
add
cld
jg
call
std
mov
popf
jno
mov
jmp
adc
sbb
leave
push
pop
fcoms
enter
sbb
pop
mov
fs
test
add
orl
mov
ds
aam
mov
enter
xchg
call
mov
out
cli
out
cmc
js
pop
cli
cli
mov
fdivs
pop
out
jbe
cmpsl
pop
out
dec
out
jl
aad
lahf
daa
into
int3
shrl
mov
cli
out
mov
in
pop
xchg
mov
clc
xchg
mov
mov
sbb
in
mov
addb
and
leave
bound
jg
add
lock
mov
sarb
pop
ret
jecxz
leave
mov
mov
add
lea
test
mov
pushf
jno
js
or
mov
cmpsb
ja
cmp
test
jmp
and
test
or
aaa
xchg
jae
xchg
sahf
inc
or
and
aad
cmc
mov
popf
sub
push
push
jmp
lret
inc
cli
mov
iret
das
fadds
and
mov
es
cmp
add
and
lret
out
lcall
cld
int3
push
filds
jo
stos
and
icebp
xor
adc
sbb
pop
cld
fwait
mov
das
mov
test
lret
push
popa
inc
cmc
jl
adc
sbb
mov
or
push
mov
mov
test
gs
or
mov
shrb
outsb
repnz
bnd
mov
dec
jecxz
cmp
xchg
insb
int
xor
ljmp
jg
aad
les
dec
and
fcomi
and
jle
subb
leave
add
xchg
mov
push
cmp
fcmovne
out
jne
scas
cmpsl
push
jae
lret
mov
jbe
push
aam
mov
les
and
out
sbb
push
pop
ds
into
add
push
sub
je
cmp
mov
pop
movsb
pop
add
test
lret
cmp
pop
pop
in
mov
pop
mov
pushf
leave
mov
stos
mov
mov
jb
lea
push
xchg
sub
pop
gs
rcrl
leave
xor
ss
cwtl
in
mov
inc
add
repnz
xchg
or
pop
xchg
fistpl
sbb
cmp
negb
xor
fwait
push
pop
leave
out
ret
aaa
lea
xor
or
mov
fmuls
ret
aad
scas
jns
pop
or
pop
jae
dec
in
push
test
das
int
sbb
dec
mov
ror
fs
out
sbb
aad
mov
xor
dec
sarl
fbld
aam
movsl
xchg
pop
cmc
shrl
out
stos
add
jp
rorb
pop
aad
js
jp
addl
ja
es
in
outsb
mov
mov
mov
rcr
repz
sbb
or
jle
inc
cmc
nop
cwtl
mov
shlb
mov
movsl
inc
mov
dec
int
mov
xor
xchg
out
lret
gs
popf
mov
cmp
xor
sbb
jmp
xchg
or
lock
mov
or
call
mov
ret
movsb
arpl
popa
pushf
popa
fiadds
jecxz
mov
in
ljmp
fbld
xchg
pushf
push
lret
sub
lds
aad
mov
inc
add
cmc
and
lea
outsb
adc
arpl
aaa
push
push
testb
ja
fdiv
frstor
push
sub
add
popa
iret
int3
sub
rorl
addr16
xor
xchg
xor
mov
arpl
clc
int
dec
fwait
pop
lahf
popf
push
and
push
idivb
xchg
filds
mov
sti
addr16
lahf
xchg
or
scas
cld
sbb
fdivp
ljmp
lock
sti
out
rcrl
pop
dec
aaa
test
cld
and
push
sbbl
je
addl
cs
test
inc
iret
xor
imul
ss
lods
aad
lret
iret
mov
cmpsl
add
dec
lock
xchg
sbbl
xchg
cltd
dec
pop
sbb
repz
adc
test
popf
jmp
cmc
int
pop
fwait
lret
xlat
mov
cwtl
sbb
xchg
sub
repz
lods
in
ss
shll
fistl
jo
imul
xchg
arpl
mov
cmp
imul
adc
int
xchg
add
and
sbb
xchg
cmp
js
inc
lret
push
pop
push
pushf
aad
mulps
lret
cmc
aam
pop
cmpsb
xchg
leave
cmp
lahf
xor
ds
mov
or
es
xor
inc
and
stc
addr16
cmpsl
in
fld
sti
out
pop
leave
mov
in
mov
shlb
cmpsl
movsl
shll
jecxz
inc
aam
ficomps
jmp
mov
mov
fistpll
sub
fsubl
fldcw
leave
nop
xor
scas
xor
enter
mov
in
fcoms
sti
fwait
mov
adc
lret
icebp
xchg
mov
xor
jl
cmp
inc
test
pop
sub
jecxz
sub
cmpsb
and
int
jbe
and
cmp
repz
dec
faddl
mov
jbe
push
xlat
aas
out
mov
leave
pop
xchg
lahf
inc
cmpsl
mov
jns
fsubr
mov
cmpsl
mov
sbb
inc
xor
stc
mov
mov
mov
mov
scas
jmp
jne
dec
lea
cmp
pop
pop
pushf
invd
jecxz
scas
movsb
arpl
fs
into
mov
in
ljmp
aam
shr
mov
push
pusha
mov
dec
jl
sub
and
sbb
xchg
push
int
stc
insb
mov
repnz
mov
movsl
rcll
or
lahf
in
in
mov
cmp
jns
jo
popa
insb
or
aas
popa
cmp
movsb
popa
outsb
mov
out
shrb
mov
ret
and
popf
push
ljmp
mov
dec
ffreep
push
int
push
and
movsl
cmp
les
sub
push
fwait
cmp
add
add
shlb
addb
test
fldenv
and
and
movsb
dec
das
lahf
test
sbb
lods
adc
mov
in
aad
cmpsl
stos
jmp
jmp
fsts
dec
daa
xchg
int3
xchg
push
mov
scas
add
fcompl
rcrb
cs
or
mov
pop
insl
pop
mov
jge
sbb
inc
shlb
adc
inc
xchg
mov
icebp
mov
movsb
in
clc
sbb
inc
stos
mov
fsubp
imul
les
gs
out
pop
xchg
jge
dec
xchg
push
mov
je
push
popf
mov
paddd
push
adc
jns
inc
lret
xchg
xchg
sub
jb
aad
and
gs
sbb
addr16
iret
icebp
mov
loopne
xlat
divl
scas
jge
lret
sub
mov
loopne
or
loopne
sbbl
pop
repnz
movsl
jge
pop
scas
dec
imul
inc
mov
je
ljmp
loop
sub
repnz
push
push
cs
nop
cltd
xor
or
mov
dec
add
daa
add
mov
movsb
sbb
dec
es
jecxz
jb
test
movsl
outsb
xchg
fcomps
insb
cmpb
mov
dec
jmp
and
pop
repnz
xchg
add
mov
pushf
orb
push
js
shll
fs
dec
outsl
popf
mov
xchg
sbb
inc
enter
xchg
add
xchg
sbb
xchg
jnp
and
sbb
aad
xor
int
add
cmp
mov
aam
stc
pop
push
mov
push
pop
imul
dec
outsb
ljmp
out
stc
mov
shlb
cmpsl
or
xchg
andnps
xchg
cmc
sub
repnz
lahf
aaa
es
loop
jecxz
ja
cltd
cmp
jge
xchg
inc
pushf
fcomp
mov
mov
push
sti
lcall
lret
cmp
imul
fs
lds
inc
add
mov
lcall
mov
jmp
insl
add
mov
pop
xchg
xor
mov
sbb
xchg
ret
mov
ficompl
int3
fisubrl
xchg
xlat
sahf
fxch
cmp
jmp
lods
lcall
pop
std
mov
cmp
in
mov
adc
jecxz
icebp
sahf
adc
add
dec
insl
pop
aas
cmp
sbb
lcall
jns
push
stos
xorl
js
jecxz
cmp
push
gs
in
cmp
pusha
dec
popf
and
cli
add
gs
insb
cmp
push
test
movzbl
hlt
popf
inc
fists
addr16
flds
call
hlt
jno
jns
int3
mov
push
sub
fldl
inc
sub
xor
xchg
mov
jecxz
call
sub
aas
xor
add
push
adc
xchg
and
andl
pop
jo
in
loop
inc
and
ds
dec
arpl
and
or
repnz
xchg
insl
pop
sti
sarb
cmpsb
add
lret
jns
xor
xchg
loope
scas
adc
push
repnz
jle
cmc
scas
cs
test
sub
into
sbb
addr16
inc
icebp
dec
xchg
push
pop
push
hlt
popf
out
dec
ds
leave
mov
mov
shrd
shl
test
xchg
cmp
mov
fmull
xor
repnz
xor
shrl
sbb
add
daa
push
faddl
fidivs
in
jne
in
mov
dec
pop
in
test
popf
push
push
cmpsl
ss
aaa
aam
mov
inc
lret
adc
xchg
or
push
aaa
sbbl
jl
xor
sub
pop
out
inc
xchg
imul
sbb
lcall
test
iret
lcall
dec
mov
push
fs
sbb
adc
jge
jnp
jns
add
in
int
fnstsw
in
gs
aad
lock
pushf
pop
hlt
sbb
cs
test
sub
dec
xchg
ja
ficompl
adc
cmp
xor
push
int
sbb
pusha
xlat
outsb
xchg
cld
fsubs
add
mov
imul
dec
add
sbb
mov
sahf
mov
add
fnstenv
js
test
movsb
xchg
ljmp
mov
sub
lret
jp
repnz
and
sub
mov
pop
movsb
lods
sub
mov
out
hlt
push
inc
rcrl
pop
sbb
cmpsb
jo
rolb
add
jmp
je
sti
pop
sub
repnz
sub
enter
iret
loope
dec
jnp
loop
cmp
mov
les
insl
fs
jmp
push
fsub
pop
nop
outsl
add
xchg
rol
jge
mov
aad
xchg
lock
mov
fistpll
popa
inc
sahf
mov
sbb
arpl
adc
pop
sahf
mov
aam
test
pop
add
dec
push
stc
xchg
cmpsb
push
jg
insl
movsb
imul
and
leave
mov
lahf
jnp
mov
dec
shlb
aaa
or
xchg
and
iret
insb
cld
clc
gs
pop
mov
sub
dec
dec
out
jbe
in
and
mov
xor
ud2
push
ret
inc
fs
mov
pop
inc
sub
mov
add
flds
cmpb
cmp
gs
cmpsb
xchg
push
or
fildll
jnp
cmc
fimull
into
dec
int3
sbb
push
cltd
push
adc
jne
inc
test
xor
xor
ret
ficompl
jmp
or
imul
movsb
shlb
data16
pop
int3
bound
or
xor
loop
pop
xor
idivl
add
ss
dec
or
mov
mov
out
fnsave
cmp
xchg
dec
mov
add
fdivl
popf
mov
imull
std
pushf
frstor
aaa
mov
inc
inc
mov
add
mov
mov
pusha
mov
imul
add
mov
std
out
cmc
push
stc
popa
lret
lea
sbb
inc
imul
push
push
lret
into
js
sub
pusha
shll
fistpl
fiadds
inc
daa
push
icebp
mov
xlat
mov
mov
in
xchg
cltd
outsb
pusha
or
push
test
jbe
imul
lcall
inc
fildll
and
mov
xor
mov
xchg
shll
jnp
adc
in
xchg
add
pop
ret
filds
inc
mov
fstl
scas
pop
push
in
icebp
popa
cmp
in
idivl
test
mov
rorl
push
adc
jnp
enter
mov
push
in
cli
xchg
sbbb
in
ljmp
add
leave
cmp
iret
and
push
repnz
mov
inc
insb
pop
jmp
or
std
xchg
movsl
mov
repz
clc
add
stos
push
int3
xor
cmp
test
dec
xchg
adc
stc
mov
ja
pop
lods
mov
in
arpl
mov
hlt
xchg
fsts
cld
in
sahf
fistpll
popa
stos
pusha
xlat
sub
jge
pop
xchg
jecxz
cmp
pusha
gs
imul
inc
outsl
loop
mov
or
fwait
mov
mov
sahf
clc
popf
cli
rcll
mov
xchg
add
cmp
in
call
dec
xor
xlat
mov
daa
outsb
daa
xor
sbb
sahf
xlat
xlat
xor
insb
stos
pop
pop
xchg
call
andl
mov
movsb
into
sahf
add
test
push
in
icebp
imul
popa
or
push
in
dec
fnsave
sbb
ljmp
add
out
lcall
int
and
mov
das
xchg
mov
dec
in
or
pop
mov
xchg
sub
mov
js
popf
sub
dec
pop
and
shll
repnz
dec
repz
cwtl
lds
rcrl
cmpsl
insl
mov
cmp
and
fidivrl
hlt
shrl
push
es
sbb
movsb
sbb
movsl
fs
mov
lahf
sub
out
mov
xor
dec
inc
mov
xor
push
inc
cmp
sbb
ret
jno
incb
xor
xor
out
dec
jnp
mov
jb
mov
lahf
fimull
movsl
cld
repz
dec
outsl
repnz
mov
aaa
xor
lock
mov
cmp
jmp
push
and
inc
imul
sbb
ss
lret
sub
loop
outsl
loopne
inc
xchg
inc
dec
stc
out
dec
fistpll
sbb
js
iret
inc
mov
loope
ljmp
movsb
test
mov
aas
sub
das
outsb
push
xor
inc
loopne
dec
pop
inc
mov
jecxz
iret
sahf
adcl
sub
mov
jp
push
cmp
mov
stos
popa
mov
cli
testl
cmp
out
jg
mov
mov
lea
mov
xor
addl
int3
push
outsl
mov
push
test
mov
mov
in
pop
mov
add
jnp
pushf
mov
mov
fcomps
jl
insl
pop
fsubrl
mov
pop
mov
cmpsb
inc
xchg
sub
pop
mov
rcll
out
out
mov
movsl
ss
sub
pop
in
and
or
test
iret
outsl
lret
cmp
fs
test
hlt
sbb
and
sbb
orb
cmp
dec
lret
cmp
and
mov
nop
jns
mov
inc
dec
mov
pop
div
lahf
sbb
mov
jecxz
ja
testl
sub
dec
or
push
in
mov
add
push
cmp
xor
into
popf
arpl
push
cmp
lret
ja
mov
call
int
and
pop
imul
test
inc
sbb
imul
sbb
inc
push
sti
and
int3
lret
pop
cwtl
push
xchg
push
inc
mov
cmp
xor
pop
pop
mov
mov
cmp
and
fstl
add
flds
dec
xor
xchg
dec
jge
pusha
loope
icebp
xor
jmp
adc
mov
popa
cld
movsb
in
pusha
mov
stc
shr
cmp
jecxz
xchg
insb
xchg
mov
cmp
dec
lret
in
pop
jo
mov
out
sub
xor
mov
push
fbstp
iret
jo
mov
les
mov
or
and
test
das
dec
lods
xchg
test
incb
bnd
std
lock
dec
xchg
add
lret
nop
push
aaa
orb
movsl
int
dec
aam
fptan
and
add
iret
jge
sbb
xor
sbb
in
rcl
cmc
pop
stc
add
add
les
pop
bound
mov
add
pop
sbb
push
cmc
sub
mov
lods
mov
stos
lods
popf
shlb
sbb
mov
xchg
cmc
or
sahf
add
or
lcall
ljmp
js
repnz
dec
dec
fisubrl
mov
mov
ror
and
jnp
pextrw
pop
jge
xor
in
jge
push
or
pop
push
and
fs
loopne
adcb
dec
push
test
pop
lret
int
inc
leave
cmp
test
rcr
cmp
not
sbb
loopne
push
jnp
aam
jecxz
xor
push
imul
not
and
push
fnsave
mov
ret
cltd
in
ficoml
xor
mov
xchg
push
rcrb
or
fcompl
imul
push
leave
sbb
test
and
aaa
sbb
bound
loop
pop
aam
sbb
std
add
jecxz
aad
pop
or
cmp
xchg
mov
jecxz
inc
fwait
arpl
dec
dec
icebp
xchg
and
gs
cmp
gs
imul
cld
and
cltd
stos
popf
push
sub
icebp
fldenv
icebp
xchg
std
setl
fldl
lods
loopne
mov
call
pop
hlt
test
sub
inc
and
pushf
push
xor
sbb
mov
pusha
fmul
inc
jl
daa
mov
pop
lcall
fnstenv
and
mov
test
lret
or
lahf
loop
fcmovnbe
pop
fldl
add
xlat
mov
mov
aad
aad
lods
jmp
jmp
aas
stos
aaa
in
cmp
fstps
sub
mov
jnp
inc
jecxz
inc
push
sub
cmp
cmp
push
adc
cmp
neg
mov
xor
test
into
sbb
call
mov
xor
mov
sub
xor
push
cmpsl
in
cmp
xor
jno
add
ja
xor
xchg
pop
mov
mov
frndint
pop
jbe
pop
sub
mov
mov
sub
jmp
leave
add
fwait
ret
arpl
pop
xchg
in
pop
xchg
xor
mov
jae
cltd
pop
xchg
sar
test
mov
jb
mov
jecxz
hlt
fldl
cld
cmpsb
leave
mov
inc
out
and
xchg
mov
repnz
inc
in
lods
jecxz
mov
iret
lcall
xor
and
inc
pop
stos
jecxz
hlt
movsl
sarl
sub
aam
mov
jns
push
scas
movsl
xchg
out
int
cltd
popf
push
inc
lahf
xchg
sbb
lahf
rol
mov
aad
xor
bound
arpl
and
jne
pop
aad
mov
add
test
xchg
sbb
cmp
imulb
xor
int3
mov
mov
bound
jmp
in
mov
push
sub
cmp
iret
loop
shrb
es
lods
rcl
dec
xor
pop
cli
mov
sarb
adc
shrl
lcall
inc
dec
fst
divl
push
or
mov
cmpsb
jbe
and
jp
movsb
mov
mov
push
sbb
pushf
inc
fsubs
test
mov
pop
cmp
add
or
shl
in
cmp
pop
xchg
xor
mov
dec
cmp
mov
iret
arpl
mov
jo
mov
or
mov
fcoms
rorl
iret
sub
jno
rorb
xlat
outsb
mov
in
push
cmpsb
or
mov
push
pop
cmp
jg
stc
int3
in
js
sbb
mov
inc
sbbl
lret
sbb
loop
divl
xor
shll
adc
std
dec
shlb
pop
and
frstor
and
sbb
push
lcall
add
mov
jmp
or
push
or
mov
xor
dec
insl
mov
adcl
je
mov
leave
shlb
cmc
shlb
jo
jecxz
jmp
je
dec
mov
push
sarb
push
cmpl
aad
imul
mov
inc
dec
das
add
dec
dec
sub
cmp
repnz
fdivl
stos
mov
pop
rcr
mov
jbe
ret
test
mov
lret
xor
test
lret
cmp
aam
ljmp
mov
push
test
jmp
ret
jb
and
jnp
and
mov
fs
xchg
in
movntq
mov
out
cmpsl
sbb
rcrl
lcall
ret
push
ret
jmp
and
and
mov
mov
test
jno
arpl
lcall
mov
imul
daa
mov
inc
mov
lcall
add
stc
cmc
lret
dec
mov
jle
xlat
cld
cmp
push
shll
psrld
inc
push
push
jae
xchg
xchg
hlt
daa
push
and
sbb
imul
in
lret
mov
or
fcompl
shl
neg
mov
cmc
mov
mov
or
movsb
jge
cmp
and
int3
cwtl
inc
adc
mov
inc
outsl
lret
dec
pop
loope
push
lcall
cmc
cltd
mov
ret
push
or
push
into
insl
push
cltd
insb
sub
pop
mov
mov
cmp
cmc
fld
lret
shlb
dec
imul
or
mov
rcr
es
cmp
cld
mov
push
fs
push
sub
sti
cmpsl
sbb
xchg
idivb
lock
fdiv
daa
cld
pushf
xor
cmpsl
cmpsl
in
lds
xor
push
dec
cmp
sub
mov
in
repnz
clc
sub
pop
in
stos
jns
inc
xlat
xchg
mov
push
jbe
add
popa
fwait
adc
stc
cmc
jnp
imul
xchg
inc
sub
imul
in
xor
adcl
or
gs
jo
mov
cmpb
dec
inc
push
fistps
mov
fwait
mov
xor
rorb
test
in
into
xchg
pusha
std
inc
addr16
sbb
call
mov
and
jne
lds
lret
cmpsl
jnp
out
fisubrs
sbb
ss
outsb
ret
aam
add
scas
outsl
fistl
push
pop
popf
jns
ja
cld
push
mov
xchg
ret
or
jl
ficoms
pop
pop
lea
bound
push
mov
mov
js
sub
loopne
push
cmp
dec
mov
lcall
cmp
push
push
mov
pop
and
leave
xchg
fwait
xchg
cmp
push
out
mov
repz
movsl
cld
dec
pop
pop
jmp
xor
repnz
add
xchg
cwtl
das
ss
insl
mov
mov
frstor
xor
or
aas
mov
push
mov
in
push
shlb
cmp
ficomps
mov
in
sub
pusha
cmp
movsb
inc
inc
dec
rcrb
insl
fs
cmp
sub
movb
xchg
ret
lock
mov
in
pop
mov
loop
std
or
popa
cmp
repz
mov
mov
pop
fidivrl
scas
mov
add
shl
or
cmpsl
cmp
pop
insb
adc
ret
jnp
dec
inc
cld
mov
push
mov
inc
out
dec
js
in
push
mov
dec
jp
and
inc
bound
sbb
loope
and
cs
mov
xchg
sahf
loop
xchg
push
and
imul
pushf
xchg
icebp
jmp
add
lods
insl
pusha
fwait
mov
fdivr
pop
xor
das
mov
outsb
add
push
nop
inc
aad
out
mov
imul
ret
cmc
inc
outsb
nop
ljmp
js,pn
jge
mov
add
add
mov
xor
lret
mov
cltd
jecxz
rcr
push
icebp
push
or
sub
cltd
test
sub
add
push
lods
imul
mov
stc
mov
leave
fldenv
hlt
lds
push
movsl
cltd
jnp
je
add
add
lds
jb
jp
loop
ret
jecxz
push
test
sub
cmpb
push
in
mov
out
jns
cmp
cld
push
jl
adc
cmp
mov
daa
iret
test
adc
and
jo
repnz
xchg
and
aaa
add
dec
ret
dec
addr16
loopne
into
ret
icebp
cmp
inc
xchg
push
or
xchg
xor
mov
insl
dec
pop
sbb
ret
inc
and
and
push
lock
cmc
icebp
push
test
rcl
bound
add
loope
sbb
xor
add
add
fistpll
add
xchg
imul
ja
jmp
sub
adc
ja
sub
jmp
lds
aad
push
minps
xor
and
cli
ficomps
add
icebp
in
icebp
in
ss
xchg
fs
das
outsl
push
jg
pop
dec
outsb
imul
and
xor
mov
sub
lods
fs
adc
bound
or
std
push
in
mov
mov
xor
inc
lods
add
sbb
out
sar
mov
fcompl
icebp
pusha
adc
lahf
mov
sub
in
std
out
lods
mov
sti
cli
sarl
fistpl
inc
subb
bound
xorb
xor
cld
insl
mov
cmp
imul
stc
jecxz
sub
jecxz
push
outsl
xchg
jecxz
cmp
gs
imul
jecxz
pusha
dec
lea
jecxz
sti
icebp
repz
mov
add
popf
popf
stc
ds
mov
icebp
inc
fwait
movsl
pop
cmp
mov
xchg
insl
cmpsl
shl
sub
daa
xlat
add
call
addr16
test
jb
test
fst
add
cmp
pop
movsl
mov
cmpsl
call
in
fstpl
outsb
sub
mov
popa
push
mov
loopne
add
ret
std
jbe
iret
xchg
bound
sbb
xor
in
xor
pushf
jne
std
test
xchg
mov
daa
dec
mov
xchg
xlat
inc
sub
cs
inc
dec
inc
mov
pop
mov
loop
mov
fstpl
jne
clc
and
lahf
fbld
out
repnz
iret
jns
rorb
mov
xchg
movsl
xchg
out
pop
sbb
bound
in
xchg
movsb
or
testb
mov
xchg
cmp
leave
hlt
push
and
loop
mov
cli
paddusw
mov
sbb
adc
in
mov
mov
in
inc
cmc
in
inc
sub
xchg
push
push
mov
jg
subb
cltd
ss
mov
wrmsr
shrl
cs
mov
movsl
add
cmp
pop
outsb
adc
lcall
xor
shl
push
push
lds
push
pop
cmp
leave
jo
jbe
stc
dec
sub
mov
xlat
aad
push
mov
loop
pop
sbb
cs
jo
sbb
repnz
xchg
jb
or
rcll
ret
fsubl
push
push
or
xor
stc
mov
mov
add
fldcw
leave
cmp
stos
push
lds
out
cmp
mov
arpl
into
or
popl
and
fisttpll
xchg
jnp
sbb
sahf
add
cmp
add
clc
jns
cli
jg
rorb
loope
pop
xchg
fldt
mov
jns
mov
andb
add
dec
js
iret
dec
add
popl
hlt
jmp
mov
sub
jo
sbb
outsb
stos
in
aad
lahf
or
fs
inc
fists
adc
mov
mov
repnz
xor
mov
lret
mov
dec
cmpsb
sub
or
pop
pop
idiv
xor
in
mov
push
in
sub
push
xor
into
imul
gs
out
shll
lea
notl
insl
in
mov
ret
adc
into
ret
imul
inc
leave
mov
mov
jmp
hlt
sub
xor
cld
fnstenv
sbb
sub
sbb
mov
xchg
cmp
imul
roll
dec
sbb
andb
xor
pop
inc
popa
fwait
xchg
dec
pop
aad
stos
pop
cmp
jo
dec
xor
std
mov
sub
popa
stos
inc
test
fstpl
xchg
call
fldenv
jnp
stos
insb
loop
popa
cltd
out
test
or
and
inc
xor
pushf
loop
repnz
add
jo
pop
or
fmulp
pop
subb
mov
push
movsb
lret
xchg
loope
and
sub
int3
je
mov
int
negl
jg
or
les
cmp
and
ror
add
xchg
xchg
aad
mov
fisubrs
shr
push
jbe
lods
jl
sbb
push
pop
adc
ror
or
xchg
pop
sbb
mov
decl
mov
roll
xchg
xchg
in
in
mov
push
adc
loopne
fldcw
xor
cltd
or
mov
jo
ljmp
mov
sahf
lea
out
jbe
ret
mov
cmpsb
decl
movsb
xchg
push
gs
subl
cmpl
adc
xchg
xorl
popa
fldl
add
in
inc
scas
mov
out
imul
mov
cmp
pop
dec
push
jb
and
add
mov
mov
mov
scas
es
add
xor
dec
icebp
jo
repnz
rorl
cmp
int3
mul
inc
scas
adc
cmp
das
scas
shll
inc
pop
push
mov
sbb
add
jo
pop
imul
int3
pop
mull
push
in
cmp
aaa
push
scas
mov
cmp
dec
rcrl
fnsave
das
sub
jle
pusha
ret
sti
aas
xorl
jmp
inc
cmp
lahf
lcall
ds
ss
fisttpll
arpl
sahf
test
stos
fs
call
call
cmpsl
inc
jg
fwait
lds
lea
lea
das
xor
outsb
xchg
mov
cltd
fmull
fwait
or
decb
std
push
cltd
decb
sub
scas
cmp
mov
dec
iret
sbb
aad
out
and
push
xchg
dec
pop
sub
rcrl
xchg
inc
push
inc
jl
clc
ficompl
fldl
and
mov
ja
int
inc
les
call
int
pop
mov
mov
filds
xlat
jbe
cli
fildl
mov
fs
lahf
imul
xchg
imul
inc
and
lret
shl
ret
xchg
notb
xchg
vsqrtss
cmp
sub
xor
lret
or
mov
jne
fstpl
cli
jnp
and
add
lds
out
outsb
push
mov
and
sbb
add
and
aam
inc
pop
sbb
mov
je
insb
popf
movsb
loop
jecxz
adc
and
xchg
mov
jbe
rcll
inc
mov
add
mov
adc
aas
xchg
xor
in
fisttpl
jp
scas
cld
lahf
cmp
cmpsb
lret
inc
sbb
pop
jl
mov
into
test
fiaddl
test
inc
repz
cltd
adc
jecxz
hlt
or
mov
mov
dec
dec
and
cli
stos
mov
shlb
sbb
aad
enter
sbb
cmpsb
jecxz
xchg
popf
mov
in
lcall
or
jno
cmp
jno
sbb
fwait
test
jbe
into
sbb
pop
popa
out
mov
sahf
mov
mov
imul
cmp
sub
lret
aam
inc
adc
fst
sbb
fnstenv
iret
loopne
jmp
jmp
fisttps
sarb
shl
jmp
int
add
add
and
cli
xchg
std
add
test
add
or
or
fprem1
sub
or
xchg
dec
push
mov
xchg
lock
jmp
mov
xor
mov
fs
mov
shlb
int3
pop
cmc
push
and
lea
scas
inc
mov
jecxz
push
jbe
lods
mov
xchg
sub
movsb
fs
mov
push
xchg
xchg
and
lds
sbb
pop
mulb
hlt
fldl
cld
in
leave
movsb
mov
lret
cli
arpl
fwait
testb
pusha
inc
fsubrs
and
pusha
int3
sbb
bound
pop
popa
addr16
maskmovq
negl
insl
popf
into
pop
insb
test
mov
lods
xchg
lock
test
dec
xor
outsb
in
cmpsl
jl
lahf
in
mov
scas
inc
push
loop
nop
mov
pop
iret
sar
daa
cmpsb
jmp
mov
jecxz
mov
fwait
in
inc
pop
adc
lret
loopne
fistps
and
pop
sbb
cmp
push
cmp
aaa
rol
mov
push
push
add
iret
cmc
stc
xchg
faddl
jo
out
scas
adc
hlt
repnz
stc
push
sti
stos
addr16
mov
jbe
mov
outsb
lret
lahf
sub
jmp
add
and
out
in
imul
clc
and
push
jae
mov
dec
ss
std
into
aam
outsl
mov
aad
dec
jne
lret
js
jb
fisttps
mov
stos
cmp
pop
rol
stc
in
das
mov
inc
cwtl
fstps
testb
xchg
jne
lods
xchg
lods
mov
pusha
xlat
test
mov
or
rep
xor
mov
orl
repnz
inc
push
and
imul
add
jecxz
dec
imul
stos
pusha
dec
bound
out
jp
orl
sbb
mov
and
jge
lahf
mov
jno
add
in
repz
test
fisubl
mov
xor
or
mov
cmpsl
call
or
add
dec
icebp
ror
fildll
repnz
sub
lahf
int3
cmp
cmc
xchg
in
mov
mov
cmpsl
in
in
xchg
sbb
mov
adc
dec
mov
sub
adc
lock
mov
mov
dec
push
mov
sub
pop
sbb
sbb
fucomip
movsb
in
mov
int
cld
insl
ljmp
jno
lret
adc
xchg
push
test
cmc
sbb
lcall
ret
or
jecxz
out
inc
push
out
and
mov
scas
fdivl
movsl
xor
push
xchg
bound
call
out
cmpsb
lret
jns
fwait
in
push
movsl
jnp
je
pushf
loop
xchg
jg
xlat
lods
jl
mov
leave
fdivrs
jecxz
out
pusha
repnz
xchg
jns
into
in
jecxz
and
ds
fnstcw
shl
pusha
dec
sbb
out
adc
jns
push
arpl
xchg
call
mov
jnp
stc
sahf
test
jno
mov
cld
test
repnz
sbb
out
pop
pop
insl
out
mov
das
into
pop
cltd
push
xchg
dec
fldcw
orl
dec
pop
xchg
push
pop
fisubl
mov
add
sbbl
mov
test
lahf
fstps
mov
fnstenv
fnsave
lea
imul
xlat
out
pop
and
in
xor
sub
decb
dec
dec
cmc
adc
push
stos
lret
or
sahf
fldcw
sbb
les
nop
push
pop
sub
xor
push
sbbb
mov
mov
popa
fs
sbb
push
sbb
int
mov
add
xor
stc
xchg
loope
pushf
ja
fnsave
fildl
sbb
in
scas
push
icebp
das
sub
pop
jg
test
sbb
test
cld
les
adc
cltd
ja
xchg
movsl
inc
push
xlat
mov
hlt
js
dec
cmp
sbb
stc
in
out
pop
addl
ljmp
jmp
xchg
imul
sub
cmpsl
mov
cmpsb
xchg
mov
call
std
lods
ds
mov
and
sbb
aad
xor
outsl
int3
push
movsl
jae
xor
or
lock
or
fwait
ljmp
cs
clc
jns
andw
xchg
fwait
popf
sbb
cli
jecxz
add
repz
xor
push
flds
fucomip
js
xlat
inc
jmp
pop
add
jp
sub
pop
jnp
outsb
add
sahf
adc
jno
jbe
stc
sahf
pop
cld
test
dec
sub
popf
bound
sar
cmpsb
xchg
push
fildll
cld
sbb
jbe
add
and
in
out
fcmovbe
pop
adc
xor
jns
adc
sbb
sub
dec
in
push
movsb
ret
jl
in
int3
movsb
xor
addr16
pop
or
dec
stc
push
sahf
cltd
ljmp
xchg
and
xchg
fnsave
or
mov
xchg
cmpsl
dec
xchg
in
sbb
les
aad
rol
lret
data16
dec
shll
leave
add
gs
int
and
mov
idiv
mov
subl
fdivs
jle
push
jg
icebp
repnz
sub
xor
jmp
ret
mov
icebp
cmp
push
xlat
xchg
into
es
imul
pop
into
mov
jns
push
lret
sbb
sahf
jmp
aam
cs
push
or
movsl
sub
sub
dec
xorl
jl
arpl
dec
lods
leave
movb
dec
or
popf
addr16
icebp
test
mov
push
sub
push
or
dec
cmp
jae
cld
insb
daa
sar
aaa
jo
sbb
jmp
scas
jmp
and
mov
mov
add
jle
xchg
imul
pop
ret
add
fisubs
popa
aad
and
mov
je
pop
push
and
stos
arpl
mov
sahf
cmp
nop
mov
inc
pop
cmp
cmc
mov
jo
jl
adc
mov
insb
add
movsb
fs
fadds
cwtl
arpl
pop
jmp
xchg
movsl
jg
sub
roll
int3
dec
cmpb
sbb
jecxz
mov
xor
nop
or
xchg
sub
daa
sub
jmp
setge
jecxz
cmp
nop
dec
sahf
jno
push
sub
orb
imul
cmc
and
jg
xlat
js
test
outsb
xor
add
in
cltd
insb
push
add
push
mov
cmp
xchg
mov
fs
adc
cmp
jp
add
adc
pop
and
popf
fidivrs
test
add
cmp
or
pop
mov
scas
or
test
mov
dec
loope
jbe
add
xchg
pop
xlat
mov
mov
sub
mov
iret
das
pop
es
mov
fs
inc
xchg
pushf
pop
push
popa
mov
repz
mov
and
inc
nop
pop
push
ret
lea
jl
lcall
mov
cli
fcmove
mov
mov
dec
stos
inc
out
jmp
or
sahf
xor
push
imul
aaa
mov
add
pop
fcompl
jne
leave
add
xchg
in
inc
ret
sub
test
add
jmp
mov
fwait
cmc
das
outsb
jl
push
and
inc
clc
subb
jbe
in
pop
cmpsb
mov
leave
lods
pusha
mov
movsb
mov
sahf
mov
lret
subl
lret
fildl
mov
pop
std
fs
imul
jmp
cmp
mov
inc
lds
popa
stc
pop
dec
dec
or
imul
pop
and
xchg
jb
push
jmp
sbb
jo
ljmp
xchg
hlt
pop
fsubrl
inc
dec
mov
fwait
push
lret
test
mov
xor
dec
jno
pop
lret
ret
or
in
in
lret
fs
dec
imul
bound
jg
jmp
sub
cli
cmp
loop
sbb
mov
iret
imul
test
fsts
push
adc
rolb
ljmp
inc
push
and
bound
add
sub
mov
fidivl
cltd
push
je
sbb
loope
movsl
vpmacssww
dec
idiv
mov
iret
stos
outsb
xor
jb
push
lret
test
mov
cmp
mov
jge
mov
fcomps
xchg
inc
and
in
in
xchg
aaa
lret
xor
mov
mov
jecxz
fcoms
jbe
cmc
xchg
cmp
int
xchg
xchg
notb
mov
inc
pop
les
inc
mov
xor
or
mov
sbb
repnz
add
lret
aaa
int3
xchg
and
jmp
cmp
das
mov
mov
jmp
in
xor
flds
mov
hlt
cmp
inc
xor
test
cmp
test
mov
test
mov
pop
mov
lods
cld
pusha
jmp
hlt
icebp
inc
mov
sub
xor
push
xchg
inc
add
xor
push
mov
jecxz
add
cli
and
cmp
lock
pop
out
nop
fnstsw
sub
outsb
out
pop
movsb
repnz
mov
sti
add
test
in
neg
push
xchg
cmp
test
fs
test
xchg
ror
adc
and
movsl
in
popf
fistps
fstp
ss
inc
fxch
or
push
push
mov
mov
xchg
int
push
adc
test
cmp
cltd
push
ficompl
repnz
int
hlt
in
leave
in
sub
jmp
cmp
or
dec
std
mov
cmpsl
rcrb
or
stos
sbb
adc
jmp
out
cld
or
mov
bound
xchg
dec
loop
push
xor
xor
inc
push
or
push
das
movsb
inc
xchg
aad
sub
shll
nop
adc
sbbl
sti
std
imul
stos
mov
jae
imul
rorb
mov
fisubl
movsl
adc
insl
movsl
ficompl
xchg
scas
jmp
or
pop
sti
push
fsub
mov
ss
mov
aas
cmp
loop
pop
in
or
mov
subb
pop
lret
jge
mov
into
dec
pop
dec
sub
jbe
adc
add
pop
nop
pop
mov
stc
popa
push
xor
aad
sbb
pop
push
mov
xchg
xchg
jbe
add
cmp
mov
jae
cmpsl
mov
and
jmp
cmp
xchg
out
lahf
in
mov
pop
add
daa
dec
movsb
add
jmp
sbb
int3
mov
xlat
bound
jl
int
ja
pop
les
push
xchg
jnp
in
ficoml
or
iret
iret
inc
subb
lret
xchg
lret
cmpl
sbb
add
stc
adc
clc
cmpsl
aad
cmp
fs
inc
push
or
jmp
jne
shrl
and
cmp
js
cltd
inc
fs
mov
fs
les
int3
pusha
or
movsb
loop
test
mov
in
out
jnp
inc
outsb
mov
movsb
movsb
or
push
popf
adc
add
push
fldt
sub
in
aad
mov
loopne
jecxz
mov
jge
fnstsw
mov
add
mov
fsubrl
les
sbb
bound
scas
add
adcb
or
dec
adc
int
push
fbstp
push
into
clc
cmp
dec
pop
mov
ret
loope
pop
fildl
ss
outsl
popf
fstps
leave
rorl
out
xor
inc
leave
int3
stc
xor
sub
sbb
inc
fldl
ret
shll
cwtl
mov
in
fldcw
mov
pusha
mov
in
adc
lret
pop
or
cmp
test
or
popf
lret
loop
outsb
leave
sbb
inc
and
mov
or
cmp
jmp
mov
out
or
and
sbb
xchg
leave
and
push
push
aad
jns
adc
xchg
aad
xchg
inc
sti
insb
lds
sub
fs
rcll
std
mov
jne
fs
out
jb
inc
int3
pop
and
inc
fprem1
jns
into
pop
cmp
jmp
nop
test
das
cmp
or
xor
in
push
mov
jecxz
mov
adc
jno
stc
inc
sbb
pop
push
bound
inc
stc
or
imulb
jle
push
dec
pop
enter
cwtl
lods
cmp
in
mov
jb
stos
jg
mov
dec
sub
je
xchg
sub
ror
popf
bound
or
mov
sbb
sahf
insb
rclb
sbb
in
add
and
dec
in
stc
lret
cmp
scas
xchg
adc
test
inc
imul
test
cmp
int
rcll
sub
cmp
bound
fimull
add
xor
sbb
cmp
inc
sti
lock
inc
out
jbe
sbb
inc
xor
loopne
mov
lret
ja
mov
popf
cli
dec
fstpl
inc
fsincos
les
call
test
jmp
int
dec
jno
popa
xchg
icebp
jmp
loopne
push
sub
ja
imul
fadds
insb
lret
mov
ret
into
or
movsl
push
mov
dec
in
nop
inc
push
fwait
inc
ret
unpckhps
xor
push
xchg
movsl
sub
addr16
and
and
mov
pop
mov
fprem1
fdivs
in
jmp
sbb
in
pusha
pop
lret
adc
or
jecxz
fisttpl
outsb
mov
data16
mov
sub
lret
out
xor
jns
hlt
js
xchg
out
mov
fs
jne
mov
jbe
loopne
and
arpl
imul
xor
fs
fs
sub
das
neg
mov
out
movsl
cltd
add
push
popl
add
rcll
jo
jnp
in
lret
and
lret
sub
fisttpll
inc
mulb
adc
cld
add
lods
ret
add
clc
xor
popf
iret
stos
mov
jb
loope
es
out
rcl
out
add
dec
xchg
out
jge
or
xchg
popa
pusha
and
orb
repnz
loop
xchg
mov
test
mov
loop
fmull
outsb
and
daa
popf
push
fadd
cmp
push
cmpsw
xchg
jnp
dec
outsb
in
pushf
jno
adc
push
jns
mov
dec
add
int
cmc
popf
icebp
mov
subl
inc
ljmp
pop
dec
xchg
fldcw
adc
adc
or
stc
stc
icebp
dec
fldl
inc
in
pop
int3
inc
adc
ljmp
out
cmp
ja
mov
push
push
fistps
int3
rcrl
mov
ret
icebp
sub
lret
adc
aad
cwtl
jnp
adc
sbb
and
pushf
aam
shl
std
fstl
test
jge
jnp
add
addl
addr16
inc
movsl
sub
adc
mov
call
xchg
pop
mov
cmp
jo
jb
aam
das
sbb
xchg
dec
sbb
cmp
mov
xchg
and
fistl
pop
jno
es
pop
pop
lahf
leave
mov
mov
call
fistpl
push
aas
rcr
or
and
or
pop
mov
inc
mov
mov
jmp
mov
dec
ljmp
test
mov
add
cmp
lea
mov
aam
stos
icebp
nop
add
test
mov
ljmp
in
loop
mov
xor
iret
lcall
push
sub
mov
int
pusha
packssdw
jb
mov
push
sbb
or
lahf
lods
mov
add
into
int3
mov
lea
dec
sub
loope
popf
rclb
mov
fsin
aam
repz
cmpsl
int
data16
inc
cmp
mov
ds
dec
xchg
mov
sub
mov
out
in
cld
lcall
call
mov
xor
and
loope
mov
cmpsb
xor
mov
stos
leave
fidivs
in
mov
jns
push
test
lahf
xlat
popf
movsl
mov
int3
pop
fnstenv
decb
leave
pop
or
sahf
cli
decl
jmp
pusha
pusha
add
out
inc
sahf
add
movsl
in
cmp
roll
jae
cltd
push
movsl
inc
adcb
lea
xor
cli
shl
cli
jne
out
pop
xchg
sub
sbb
dec
leave
mov
out
push
out
sub
int
pop
cmc
out
ret
cltd
lahf
mov
mov
in
nop
int3
ret
pop
or
add
sbb
lahf
cmp
lahf
aad
cli
or
cmpsb
in
cli
cli
icebp
movsl
cmp
in
cli
stc
leave
into
add
sub
and
scas
mov
andb
int
pop
xchg
sar
mov
lahf
mov
pop
cltd
sarb
add
mov
stc
xchg
cwtl
stos
shl
mov
add
mov
daa
pop
fnop
aad
cli
dec
sub
mov
cld
aaa
test
stos
cmp
dec
int3
into
sbb
adc
cwtl
lock
add
loopne
mov
inc
jp
fcmovu
dec
or
sbb
fstps
cld
adc
jmp
std
sbb
cld
sub
stc
add
add
out
jecxz
insl
sub
in
int3
aad
inc
sub
ret
xchg
js
jae
cwtl
xlat
sbb
or
insl
xor
xchg
mov
mov
add
in
sub
mov
rcll
xchg
loopne
push
inc
mov
es
mov
stc
ret
loopne
xchg
and
lahf
loopne
inc
or
xor
mov
lea
cmp
xchg
lcall
into
fsubr
out
call
sbb
or
std
loop
outsl
jmp
push
in
mov
lods
fcmovbe
jmp
push
jb
enter
cmpsl
mov
jecxz
push
ret
inc
lods
jl
pop
sub
loope
test
leave
and
adc
inc
imul
fstps
mov
jae
dec
rcrl
mov
leave
xchg
out
mov
cld
pop
sub
mov
add
je
std
add
mov
or
pop
cmp
rcrl
sub
and
inc
lods
inc
es
cmp
pop
jecxz
sbb
loop
stos
inc
push
int3
jmp
sbb
inc
mov
cli
loop
mov
loop
lds
shrb
fucomi
xchg
repnz
cmp
add
jge
cmpsb
jmp
aad
xchg
test
inc
loop
popa
lods
jae
cmp
aaa
filds
push
dec
xchg
sbb
push
xor
mov
aam
cwtl
sbb
push
ljmp
ljmp
add
push
lahf
mov
cmp
jl
into
or
mov
stos
push
jns
sbb
add
mov
popf
mov
jle
push
test
popf
add
mov
jl
aaa
int3
nop
in
out
insb
js
lretw
mov
xlat
push
fsubrl
ret
ret
out
sub
std
loopne
in
out
in
push
dec
sahf
mov
pop
fisttps
and
insl
inc
call
mov
fisttpll
mov
or
xor
cmpsb
cli
xchg
loopne
inc
or
mov
mov
add
or
stos
std
ret
push
lahf
leave
add
test
lahf
movsl
cli
ror
fwait
nop
addr16
int3
cld
xlat
test
mov
cli
pop
leave
sub
mov
xor
sub
into
dec
or
sbb
cmp
sub
fmul
and
stos
fmulp
out
adc
push
adc
add
add
arpl
pusha
xchg
iret
sahf
push
pop
aad
lods
mov
icebp
mov
mov
pusha
dec
hlt
cmp
int3
add
cli
mov
and
sbb
sbb
inc
jnp
in
icebp
loop
xchg
sti
sti
dec
fstps
pop
pop
test
fisttpll
lock
clc
mov
xchg
mov
cld
sbb
imul
xchg
xchg
cmp
or
push
cli
cli
push
fcoms
rcrl
fwait
inc
std
xchg
outsb
sub
lret
xor
pop
or
push
lock
mov
jmp
jns
dec
ja
daa
movsl
mov
xchg
repnz
sti
in
pop
sub
jl
inc
in
lahf
xor
and
cmp
and
add
jns
fnstenv
test
iret
xchg
aam
pop
fldl
jmp
push
sub
in
aad
cld
push
fsub
adc
repnz
repnz
mov
inc
ss
vphsubdq
push
in
sub
mov
cmp
loop
jno
loope
mov
lahf
shrb
jg
popf
mov
and
dec
mov
xor
ret
in
sub
xor
jae
insl
add
mov
scas
sub
sbb
jmp
je
mov
mov
loope
testb
push
mov
xchg
pop
adc
pop
addb
dec
cmp
sub
pop
lods
imul
mov
cmp
sub
ja
lods
int3
pop
xor
cmp
pushf
popf
sub
xchg
cmp
push
test
xchg
sbb
pop
cmp
imul
aad
add
xchg
lea
hlt
filds
dec
jg
sbb
movsl
mov
lock
or
std
ss
mov
mov
sbb
xlat
mov
push
mov
mov
jle
rclb
bound
xor
inc
aaa
sub
sti
jns
lods
sbb
mov
mov
inc
and
inc
rcrb
inc
sbb
stos
stos
inc
fnstenv
iret
mov
rorl
popf
inc
fwait
adc
mov
mov
jns
add
into
insb
mov
adc
outsb
test
xchg
inc
cltd
jno
lahf
push
fwait
jge
or
aam
imul
and
icebp
dec
jno
mov
cmp
mov
sbb
xlat
fst
lcall
in
cmpsl
sbb
cltd
pop
ja
mov
insl
loopne
cmp
fsubr
andb
adc
dec
push
fwait
or
fwait
dec
mov
aas
add
push
imul
push
rcr
mov
daa
jmp
scas
mov
mov
mov
mov
hlt
pop
mov
mov
fld
movsl
test
mov
and
sbb
adc
popa
mov
dec
sub
jg
inc
lods
sbb
cmp
rorb
orb
adcl
jnp
add
scas
pop
push
jo
mov
mov
in
inc
loop
xlat
fsubrl
jl
flds
addr16
cmp
in
in
jg
les
mov
in
repz
les
test
push
mov
aad
movsl
sub
adcb
pop
sbb
loopne
nop
adc
in
test
sub
aaa
shl
mov
pop
mov
jb
xor
or
ss
mov
or
shl
lret
adcb
push
fbstp
mov
decb
icebp
popf
aam
lcall
xchg
push
sti
sbb
cmp
jmp
push
cli
add
cmp
std
mov
ficompl
fucomp
cmp
sub
adcb
shl
sahf
das
fnstcw
in
dec
icebp
les
enter
popa
imul
fmull
mov
xchg
shl
inc
adc
lret
inc
push
pop
mov
fstl
pop
fs
test
pop
in
cmp
jle
mov
pop
push
mov
into
fsubr
test
les
xchg
es
push
add
xchg
imul
call
aad
mov
cmp
mov
sub
rcll
cmpsl
fnsave
leave
call
lahf
in
pop
lcall
inc
insl
icebp
decl
lcall
jo
mov
mov
add
xlat
aam
mov
cmpsl
loopne
jo
cmp
mov
jns
mov
xor
mov
aad
shl
mov
xor
xchg
cmp
and
sbb
inc
pop
adc
xchg
and
pop
pop
push
fs
xor
rcll
movsl
cld
mov
dec
imul
jns
pop
mov
dec
or
jge
ljmp
mov
in
int3
mov
and
lret
into
loope
repnz
cmp
sub
scas
jns
imul
sub
aaa
test
stos
xchg
mov
mov
repnz
xchg
icebp
push
imul
repz
mov
and
or
sbbb
in
mov
xchg
xchg
subb
push
inc
cltd
dec
push
mov
pop
pop
sti
test
jecxz
in
mov
out
lcall
icebp
imulb
fistps
mov
mov
mov
jae
orb
xor
mov
js
arpl
iret
pop
dec
int3
insl
push
leave
mov
cli
ja
push
xor
enter
lds
imul
aam
and
rorl
cld
repnz
data16
mov
cltd
sbb
fldcw
ficompl
sbb
xchg
fwait
inc
in
sarb
pushl
mov
mov
ret
fimull
adc
inc
sbb
adc
fbstp
xchg
and
repnz
movsb
sti
popf
sbb
jecxz
out
incl
bound
nop
mov
pop
or
popf
jnp
mov
mov
ret
fcoms
jg
test
and
mov
or
movsb
rorl
sbb
negl
dec
into
movsb
pop
aad
outsl
scas
lea
int
outsl
mulb
clc
jns
sbb
imul
shrb
imul
adc
push
mov
les
int
pop
xchg
or
mov
cld
or
jecxz
rcll
fsubrs
mov
roll
mov
push
into
adc
sbb
pop
arpl
out
mov
fimuls
mov
sub
call
addb
es
or
pop
sub
inc
sbb
xchg
clc
inc
sub
stos
je
rcll
fstps
stc
fstl
mov
inc
movsb
adc
cmp
pop
jb
pop
push
ss
add
ret
popf
iret
jb
cmp
xlat
mov
push
movsl
mov
cmp
or
scas
in
and
mov
adc
leave
movsl
xorl
inc
imul
loope
pusha
or
push
hlt
xchg
loop
setnp
mov
addr16
shrl
fsubr
mov
arpl
popa
push
dec
dec
lret
mov
pop
std
sbb
or
dec
ret
cmp
pop
cmpsl
call
stos
xchg
sbb
fiaddl
test
cmp
sbb
xchg
jge
pushf
popf
or
repnz
test
sar
adc
sbb
pop
lcall
outsb
pop
es
lret
ret
cmpsl
push
enter
in
or
add
test
imul
out
push
sbb
repz
pop
shll
xchg
cmp
stc
or
mov
pop
add
loop
pop
mov
xor
lret
mov
xor
push
movsl
cmpsl
sbb
fisubs
jle
stos
ss
sub
xor
test
test
lds
jmp
inc
xchg
scas
push
imul
mov
push
mov
enter
xchg
push
orl
sub
rcll
xlat
adc
lretw
pop
fimull
add
cltd
rolb
sbb
es
or
mov
xor
ficoml
mov
cmp
mov
jno
fisttpll
fs
test
cmp
pop
mov
pushf
pop
sub
pop
outsl
lea
add
and
and
push
add
lret
fstpl
add
and
addb
xor
pop
ret
std
fsubrs
call
or
popf
adc
xor
aas
rorl
mov
popf
ds
jecxz
push
int
sbb
pop
jmp
jmp
mov
xlat
or
or
cmc
pop
cmp
or
insl
loopne
cld
dec
mov
addb
jo
mov
mov
cmp
in
clc
in
mov
and
lret
mov
mov
and
xor
and
int
mov
lds
ja
and
out
push
stc
cmpsb
aaa
sbb
pop
cmovb
cmc
movsl
fstps
cmp
add
cmpsl
fidivrl
shll
int3
or
popf
addl
jbe
dec
push
adc
in
push
xchg
test
or
mov
aam
arpl
mov
fmull
sbb
negl
cmpsl
pop
pop
mov
orl
sbb
mov
mov
fcmovu
cmp
call
and
push
cmp
aaa
and
add
lahf
aas
jle
push
sti
outsb
sbb
mov
inc
xchg
add
cmp
iret
sub
out
movsb
mov
fucomip
pop
fstl
ficoml
push
mov
stc
out
push
and
call
rcrl
test
push
scas
mov
inc
aas
jo
mov
fiadds
mov
inc
inc
or
je
dec
push
mov
loop
out
add
add
sti
aad
fcmove
xchg
mov
mov
clc
mov
pop
pop
popf
add
push
xchg
mov
jg
sbb
cs
mov
fists
fnstcw
inc
rorb
enter
aaa
lcall
ret
int3
sti
lock
mov
dec
mov
lcall
and
pop
push
lods
and
jge
sub
push
aaa
dec
dec
adc
or
cmp
sub
in
jbe
je
leave
dec
and
inc
out
push
int3
and
push
mov
ficompl
xchg
jecxz
out
lods
into
pop
inc
aad
mov
call
jecxz
jecxz
aad
lret
sbb
cmp
adc
inc
imul
sub
aaa
scas
jne
dec
mov
popf
aaa
mov
cli
loop
iret
jnp
gs
inc
and
add
ss
movsl
pop
mov
test
imul
movsl
jecxz
cmpsb
sub
cmpsb
pop
cmpsl
daa
sub
aad
and
inc
in
out
ljmp
aaa
sbb
scas
add
rcrl
lock
cli
jbe
sub
call
imul
stc
rcl
sbb
xchg
mov
ja
push
xchg
outsb
or
or
shr
sub
dec
xchg
cltd
mov
push
pop
push
cmp
int
sub
and
cmp
mov
lods
movsl
and
iret
and
std
cmp
aad
out
mov
mov
sar
lret
mov
xchg
jge
imul
dec
and
and
xchg
fisttpl
or
sub
daa
cmpb
sub
sub
mov
fldenv
icebp
cmp
stos
adc
cli
test
cli
fsubl
xchg
and
dec
fnstcw
jnp
outsb
imul
scas
push
xor
daa
and
cld
dec
fmul
cmp
dec
imul
fwait
inc
sbb
cld
or
adc
sarl
xchg
pop
in
mov
lea
in
jbe
cmpsl
push
jbe
mov
ror
add
test
test
sahf
fwait
push
icebp
mov
inc
aad
incb
imul
aaa
sti
cmp
into
and
inc
bound
sbb
and
add
mov
aaa
fdivs
out
mov
shr
out
sub
add
cmpsb
jns
sbb
mov
aam
in
mov
adc
pusha
in
sbb
or
jmp
pop
fwait
jge
mov
jecxz
xor
test
fwait
add
cmp
aam
in
dec
leave
popa
icebp
cs
inc
pop
sub
pusha
in
jnp
aam
shr
pusha
in
and
aam
jno
sub
jmp
and
mov
shlb
les
out
movsb
aam
jg
bound
into
gs
lock
lds
push
fisttpll
js
xchg
inc
mov
sahf
mov
negl
repnz
aad
add
sub
fstps
out
insl
loopne
jmp
and
mov
xchg
cmpsb
mov
cmpsl
popf
add
xchg
dec
test
leave
or
cld
jns
mov
sbb
cli
sub
sub
jmp
push
add
jns
iret
and
adc
cld
xchg
cmpl
in
inc
stos
sahf
fdivr
sbb
cmp
inc
mov
aam
xor
and
fsubs
or
pop
dec
jl
mov
fwait
inc
adc
cmp
mov
fwait
mov
adc
das
and
pushf
aaa
hlt
mov
bound
jo
testb
mov
mov
mov
push
xor
adc
xor
push
mov
ja
imul
and
inc
lahf
loopne
aam
dec
push
dec
test
jne
mov
ror
adc
xchg
fwait
mov
out
mov
out
jns
nop
mov
aaa
int
push
mov
add
sub
cmp
sub
sub
cmp
outsb
cmp
xor
ljmp
pop
or
cli
lcall
lods
dec
fisttpll
fcompl
test
lcall
sub
or
or
popf
pushf
add
mov
adcl
mov
jecxz
mov
or
dec
lret
loopne
or
inc
xchg
bound
sbb
in
mov
inc
sti
sbb
mov
loope
cmp
mov
xchg
mov
mov
ja
rorl
test
xor
jmp
cld
xchg
mov
pop
test
std
popa
std
mov
mov
fimuls
mov
sbb
pop
mov
mov
add
xchg
pop
xor
lcall
cmp
test
mov
ffree
lds
push
xor
lock
jbe
cmp
pop
ljmp
cmp
repnz
sub
mov
nop
xor
ret
fnsave
lock
adc
insl
dec
cmp
out
gs
test
lea
or
testl
mov
cli
das
mov
jno
shrb
clc
add
add
fldl
sar
mov
fiaddl
inc
mov
es
in
jmp
jne
out
lret
fs
mov
pusha
dec
mov
push
pop
add
cli
test
mov
jnp
repz
pop
sub
in
in
mov
sahf
xchg
add
add
fisttpll
test
negl
cli
stos
dec
and
pusha
mov
lcall
add
bound
shrl
mov
cmp
push
in
sub
imul
pop
mov
mov
inc
sub
add
or
inc
jo
mov
mov
mov
mov
mov
mov
jno
imul
fmulp
filds
mov
in
cmp
sbb
loop
cld
fwait
adc
pusha
gs
cmp
sbb
pop
cli
test
loop
or
fstpl
fucomp
jbe
mov
outsl
push
lock
out
jae
cltd
cmp
dec
sahf
mov
cmp
xor
lcall
popa
xchg
cmp
dec
push
jmp
ret
stos
sbb
inc
ret
mov
fadd
push
movsb
push
fucom
adc
cmpsl
int3
sub
jle
das
lret
xchg
xor
fsubs
in
in
xchg
add
xor
jl
dec
popl
std
hlt
push
inc
sar
into
xor
popf
test
in
inc
pushf
sti
sub
add
fstpl
lcall
test
sbb
fs
fucom
test
sahf
cld
add
xor
lahf
push
repnz
sbb
popf
lahf
insl
push
push
scas
xchg
pop
mov
pop
sbb
addr16
cltd
cmp
sub
xchg
mov
in
frstor
xchg
ret
jbe
hlt
stos
inc
add
xchg
mov
mov
jmp
sar
sahf
sarl
rclb
push
in
pop
xchg
sti
pop
mov
pop
imul
inc
pop
add
fcompl
jp
loopne
dec
mov
in
push
mov
ss
inc
cli
ljmp
aaa
sub
hlt
shl
syscall
mov
push
bswap
arpl
stc
and
test
or
mov
or
mov
or
or
xor
xor
adc
xchg
inc
popa
imul
lahf
das
out
jbe
mov
je
sbb
pop
or
imul
dec
lret
sbb
jae
out
pop
icebp
loop
jno
sub
adc
je
sti
sbb
jo
imul
popf
mov
sbb
out
sub
jmp
scas
jbe
dec
sub
popa
fstps
rol
rol
iret
insl
mov
std
mov
mov
and
push
aam
sub
lahf
std
cld
pop
mov
and
sbb
std
cmp
lcall
lret
aam
fstps
int3
std
dec
pop
fwait
or
adc
fstps
pop
mov
add
dec
inc
je
test
sub
jo
sbb
sub
or
ja
push
xor
or
dec
in
je
cmp
dec
mov
adc
ja
sbb
adcb
fadds
inc
iret
lret
cmp
sbb
push
jmp
mov
addb
sub
sahf
sub
push
mov
shll
cld
sub
mov
mov
ror
dec
pop
jno
lahf
inc
cld
lea
or
call
cld
add
rcll
mov
jns
dec
adc
sub
sbb
lahf
adc
mov
insl
mov
xchg
xchg
adc
jns
repnz
repz
sahf
fistpl
push
jl
testl
cmp
int3
icebp
flds
or
scas
mov
aaa
jo
icebp
push
jae
bound
enter
ds
mov
and
push
mov
cwtl
mov
rorl
rorb
add
in
pop
icebp
stos
and
jge
jl
cltd
cwtl
in
cmpsb
stc
sarl
dec
aaa
and
push
mov
clc
jne
cld
loopne
int
sub
and
sub
inc
fwait
pop
or
ss
pop
das
add
fisubrs
pop
sbb
mov
sarb
iret
adc
xchg
adc
add
insb
jns
movsb
test
cli
pusha
rorb
pop
mov
adc
pop
jnp
fstps
imul
sbb
jno
rcrb
test
sbb
mov
or
or
into
mov
add
lret
into
mov
fidivrs
in
adc
add
test
mov
mov
cld
mov
shlb
lcall
fisubrs
imul
ja
pop
imul
pop
jle
in
rol
fldl
dec
je
mov
in
in
cmp
ss
in
lret
fs
fwait
mov
xor
mov
lods
mov
rorl
into
pop
in
mov
mov
ret
pushf
inc
aaa
fcoml
aas
fcoml
sbb
sub
scas
sbb
popf
aad
fcmove
push
lret
test
sub
lods
mov
lea
inc
jo
aas
fldenv
pop
lock
and
add
fnstsw
mov
pop
lods
inc
fldl
inc
roll
or
cmp
jnp
pop
int3
adc
and
aas
mov
mov
pop
lock
cmp
xchg
xor
mov
xor
xchg
push
jno
scas
push
mov
hlt
js
jb
gs
push
cmpb
cltd
imul
push
arpl
aaa
sub
sbb
cmp
sbb
xchg
sti
fiadds
inc
push
inc
add
xchg
or
mov
imul
dec
jbe
fldenv
sbb
lock
repz
sbb
mov
pop
aas
popa
xlat
cld
dec
sbb
aaa
push
mov
lock
out
jnp
pop
add
xlat
inc
int3
subb
hlt
jmp
sub
int3
mov
jmp
insl
pop
fsqrt
pop
sub
int3
jmp
pop
popf
sub
sub
mov
in
mov
int3
cmp
stc
cmc
mov
cltd
cmpsl
jne
cmp
mov
sti
ret
dec
dec
scas
cmp
gs
push
repnz
jmp
movsl
jb
insb
sbbb
aaa
jmp
cli
fbld
fnstcw
pusha
enter
shl
xlat
and
sbb
popf
outsl
ret
pop
pop
ja
mov
popa
loop
popa
pop
ljmp
cs
sbb
les
pusha
insb
or
roll
lea
loopne
ja
xchg
test
hlt
test
xor
call
add
dec
jp
hlt
iret
sti
mull
mov
sahf
mov
adc
inc
sub
orb
sti
js
pop
mov
add
sub
dec
xchg
push
bound
in
sub
xor
dec
jns
popf
stos
dec
rolb
js
add
in
out
sbb
in
cmp
popf
push
call
mov
mov
jmp
loopne
int
loopne
fdivrl
das
sub
mov
iret
cltd
push
mov
faddp
push
xchg
int3
iret
jmp
inc
inc
inc
xchg
dec
test
mov
xor
fldcw
push
sbb
loope
xchg
fstps
mov
loop
add
jecxz
lea
or
inc
stos
sub
add
fwait
jns
lahf
fldcw
stc
jbe
mov
mov
ret
adc
mul
and
mov
push
dec
cmp
mov
or
and
sbb
repz
ljmp
cmpsb
into
je
lret
loopne
out
repz
push
shrb
ja
ret
adc
inc
jecxz
icebp
dec
icebp
jge
mov
adc
mov
mov
movb
in
popa
lock
in
mov
cwtl
jp
pusha
mov
pop
jno
add
cmp
les
mov
mov
in
ljmp
cmp
sbb
dec
add
push
push
test
loop
and
jne
repnz
jmp
lahf
pop
dec
push
add
or
loop
sub
push
sar
cmp
mov
ja
jne
cmp
and
xchg
push
pushf
mov
les
fldl
test
or
cli
or
cmp
js
movsb
sbb
dec
imul
xor
inc
mov
sti
ret
outsl
or
inc
dec
jno
lds
inc
call
xor
popa
adc
movsb
movsl
push
push
cmpsb
mov
test
sbb
cmp
add
aaa
cwtl
inc
repz
pusha
notl
xor
fs
jne
aaa
repnz
sub
loopne
mov
loopne
or
fs
stc
cmp
lret
jecxz
in
rcpps
mov
cmp
inc
xchg
paddb
xor
cmp
adc
mov
ss
cs
stos
test
inc
jno
test
and
and
jbe
repnz
sub
lret
adc
xor
in
sub
or
adc
test
dec
jnp
icebp
xor
push
and
xchg
out
outsl
jns
add
jg
mov
mov
mov
fwait
fdivs
popf
shlb
adc
cld
out
sbb
and
or
mov
cmp
lcall
call
inc
xchg
cmp
and
pop
mulb
dec
cmp
mov
xor
and
push
divb
fs
dec
dec
cmp
int
rcr
cmp
jl
mov
pusha
xchg
jbe
and
popf
sbb
push
xchg
pop
xchg
out
and
or
lods
aas
push
std
inc
aam
add
inc
and
cmp
movsl
dec
inc
cld
bound
xor
push
cmpsb
adc
dec
rcll
inc
js
mov
mov
push
adc
movsl
dec
cli
sbb
push
inc
fsqrt
and
and
xchg
jbe
rcrl
sahf
mov
mov
pusha
int3
cmp
jg
js
iret
stos
xchg
out
and
loope
enter
adc
in
xlat
movsb
arpl
add
sbb
mov
and
arpl
gs
addl
jge
sar
sbb
sbb
lea
or
out
mov
call
ret
in
fstpt
mov
adc
sub
icebp
jge
sbb
fsubl
rorl
inc
pop
je
pop
test
decb
fwait
mov
adc
mov
mov
std
outsl
xchg
dec
cmc
xchg
gs
pop
mov
filds
sub
jb
cwtl
jb
insb
dec
xchg
sub
mov
dec
cmc
mov
push
inc
ret
mov
arpl
test
je
test
repnz
ss
cli
mov
add
xchg
ret
cmp
push
arpl
xchg
xchg
mov
jns
rolb
cmpsb
punpcklbw
jne
xlat
sahf
xor
cmc
rol
mov
push
iret
mov
mov
lock
inc
roll
fnsave
cmp
add
fwait
xchg
sti
push
jno
imul
ret
das
jns
sahf
dec
pop
popf
shll
xchg
fwait
xchg
gs
cld
sbb
jno
pusha
shl
sti
insl
ret
fisttpl
shrb
clc
test
sub
xchg
in
std
sub
test
cld
cmp
inc
mov
dec
lret
push
dec
inc
mov
or
insl
or
cmc
cmp
mov
cmp
es
out
inc
in
ja
ds
call
fwait
movsb
xchg
test
add
cltd
sub
std
minps
cmp
inc
loop
cmp
dec
fstps
jl
or
jb
add
addr16
push
push
dec
sbb
movsb
push
push
fcoms
imul
call
push
adc
rolb
pop
sub
mov
mov
and
lret
mov
xor
sbb
test
cmp
mov
sbb
dec
lahf
lahf
adc
nop
stos
dec
insb
mov
mov
call
mov
fnsave
jo
mov
inc
xchg
jns
cmpl
clc
dec
cli
sub
or
jl
push
repnz
idivb
movsl
repnz
idivb
cli
dec
add
push
inc
push
test
mov
fistpll
jmp
imul
and
fldln2
sti
add
loop
mov
lahf
add
loop
or
mov
repnz
pop
mov
jge
sbb
imul
cmp
mov
ss
adc
mov
sub
sbb
push
fidivs
out
lret
arpl
lds
pusha
gs
jnp
std
call
inc
dec
mull
sub
cli
xor
popf
arpl
sbb
rcrl
dec
lods
cmp
xchg
jp
scas
lock
idivb
into
or
xor
imul
stos
jmp
repz
hlt
mov
lret
leave
inc
imul
pop
push
jl
xlat
repz
sub
loopne
jecxz
mov
insl
les
jge
pusha
pusha
dec
mov
xchg
lahf
add
mov
mov
xchg
loope
cmp
push
mov
fs
repnz
mov
movsl
mov
dec
psubd
jno
jge
fldenv
int3
sbb
addr16
jne
mov
xor
lret
in
fstps
test
in
daa
mov
roll
add
iret
push
bound
cmp
xchg
imul
loopne
dec
stos
pop
jmp
dec
jecxz
inc
mov
lret
adc
cwtl
lcall
add
cld
pushf
test
sbb
cmp
testb
push
fists
aaa
sbb
mov
cmp
leave
fldenv
fst
mov
out
iret
lock
jnp
aam
int
pusha
lret
mov
movsl
and
fwait
sbb
leave
mov
dec
mov
iret
cld
insb
test
mov
or
jne
inc
push
lret
cli
push
pushl
stos
sub
xchg
sub
in
sbb
add
push
adc
aam
sub
and
dec
std
dec
test
iret
jbe
add
mov
jbe
jmp
ds
mov
mov
xor
and
call
ret
xchg
jnp
and
cmp
push
add
dec
add
movsb
sti
roll
nop
aam
add
rolb
sub
in
inc
sar
aam
fcmovnb
xchg
pushf
add
xor
mov
fmuls
lret
jno
imul
ret
sub
mov
arpl
or
insl
dec
mov
in
xor
xor
mov
mov
insl
cli
sub
aam
repz
or
cmp
dec
movsb
in
adc
sub
dec
subb
fs
or
xchg
sahf
or
mov
aaa
and
ja
clc
pop
xlat
sub
jecxz
xor
test
loop
ficoml
pop
fs
push
ror
gs
xor
add
cmp
stc
mov
push
cmpsl
fnstcw
clc
stc
bound
stos
int3
popa
fsts
out
cltd
and
jmp
test
cmova
movsl
addb
xor
into
in
ljmp
fildl
push
inc
push
sub
out
and
add
ror
cmp
cmp
sub
stc
xchg
inc
sub
lock
jmp
sbb
mov
in
or
adc
jb
sub
movsl
mov
cli
loopne
jne
lds
int3
fsubrl
dec
lret
shrl
scas
lret
shll
out
mov
pusha
out
test
jl
dec
mov
jns
cmp
insl
add
lods
pop
mov
aam
pop
ljmp
or
xor
cld
xorl
mov
mov
jo
and
adcl
das
pusha
int
pop
cs
mov
fwait
les
int
inc
das
mov
add
cmp
cld
dec
mov
aad
mov
in
pop
daa
call
fidivl
iret
mov
inc
leave
pop
out
push
aad
sub
leave
inc
push
out
xor
out
mov
cmp
pop
ja
cmp
adc
xor
push
into
inc
imul
popf
int
test
mov
and
mov
test
and
fwait
push
mov
push
push
fnsave
sub
mov
loop
or
int
out
cmp
dec
loop
ljmp
cli
cmp
mov
cmpsb
cmp
mov
ficoms
add
push
js
bound
xor
sub
push
rcll
cmp
dec
lea
or
sub
fldenv
jmp
dec
cmp
bound
ret
and
adc
rclb
arpl
mov
add
mov
loope
cmpsl
jnp
sbb
mov
mov
jle
mov
mov
jo
sub
xchg
xchg
outsl
cmp
adc
mov
outsl
int3
scas
sub
aaa
gs
mov
repz
lds
mov
cld
aad
gs
lods
mov
mov
sahf
mov
imul
in
gs
imul
lea
shll
fldl
arpl
lret
fistps
inc
inc
push
push
or
jns
push
in
movsl
out
or
jo
and
inc
inc
push
sbb
xchg
insb
and
mov
sti
adc
xchg
add
adc
int3
ret
cli
or
imul
jp
pop
jl
mov
dec
inc
jmp
ret
cmpsl
mov
push
cmp
mov
jo
dec
cmp
pop
cmp
sti
insl
add
fwait
mov
cmpsb
push
in
imul
mov
xchg
mov
or
fcomps
dec
dec
sub
mov
addr16
and
add
fwait
xor
add
mov
lcall
addr16
dec
sbb
push
inc
rclb
inc
push
inc
cli
dec
jbe
imul
xchg
sarb
add
pop
inc
rcl
push
and
imul
mov
sbb
orb
test
pop
andb
mov
ljmp
add
fbld
jl
mov
add
mov
cmc
mov
movsl
aam
push
jmp
xchg
cli
bound
fucomip
fiaddl
cli
add
dec
aad
rcr
aam
fiaddl
and
rcrl
push
cmp
jo
xchg
pop
jno
fldenv
sub
mov
sbb
push
aas
xlat
mov
fnstcw
dec
push
pusha
inc
dec
das
jo
push
lahf
hlt
push
inc
add
dec
cli
lcall
or
fsubr
xchg
xchg
sti
arpl
and
outsl
fldenv
sbb
in
fistps
adc
ljmp
mov
loope
fadd
enter
cld
jecxz
mov
inc
mov
fcompl
popf
jmp
cld
mov
inc
pop
mov
repnz
cld
and
and
gs
mov
xor
je
xchg
push
cmc
aad
cmpsb
loop
add
jge
movsl
aaa
mov
int3
rorb
mov
sub
lret
fisttpll
pusha
cli
hlt
lods
dec
mov
decl
add
mov
xchg
inc
sub
or
pushf
mov
mov
pop
je
shll
xor
popa
or
cld
adc
mov
sarl
pusha
mov
repz
lret
test
sub
lcall
test
clc
js
fdivs
fmuls
cs
mov
jecxz
fsubl
cld
in
imul
aam
push
ret
jmp
cmp
shrl
imul
sub
cld
jne
in
pop
test
popa
mov
push
or
cmp
je
call
pushf
out
sbb
cmp
dec
mov
sub
push
add
xchg
mov
or
cmpsl
loop
lret
cmp
pop
push
sbb
iret
jns
out
xchg
pop
test
lods
pop
push
js
xchg
sldt
into
or
pop
mov
popf
and
mov
mov
sub
insb
loope
or
popf
cld
outsb
cmp
int3
int
fsubl
adc
xchg
in
dec
jge
pop
xchg
mov
jo
push
test
mov
xor
lods
insl
cmp
pop
lods
jge
dec
sub
dec
scas
mov
aaa
faddl
sti
mov
cmp
pop
in
inc
pop
add
imul
fldcw
mov
les
loop
lret
cli
and
out
jno
sbb
int3
ja
jmp
loop
mov
xor
mov
mov
xlat
jne
dec
enter
mov
fwait
jmp
adc
xchg
mov
fsubs
pop
mov
in
push
and
mov
popf
std
pop
xor
inc
fistpll
xor
inc
pusha
pusha
inc
sahf
fs
scas
xchg
cmp
lods
subl
push
xor
aam
fadds
es
out
xor
mov
loope
xor
jge
push
jmp
sbb
xor
push
push
xor
inc
mov
adc
xchg
jmp
lcall
inc
inc
add
xchg
lret
pusha
stc
xchg
mov
push
sub
sub
es
daa
cs
push
fistl
sahf
xchg
fldenv
dec
jnp
push
mov
mov
xchg
into
ss
sbb
bound
cmp
in
jmp
je
push
ss
cld
sbb
xorb
in
loopne
push
mov
cltd
out
js
cld
jns
fwait
mov
mov
stos
pop
in
sbb
sbb
add
inc
and
sub
subb
pop
scas
ja
insl
add
add
inc
mov
adc
idiv
push
cli
insl
and
sub
clc
out
sbb
jns
icebp
imul
ja
stos
mov
frndint
and
leave
in
stos
inc
add
push
loope
adc
int
push
leave
enter
jecxz
adc
aaa
push
dec
test
leave
sbb
in
or
jne
cmpl
jmp
inc
sub
mov
dec
shr
pop
in
shl
jns
cli
in
and
inc
sbb
loop
inc
addr16
mov
xor
mov
sbb
add
push
mov
mov
popf
sub
enter
insl
lds
addr16
xchg
mov
add
or
decl
push
mov
or
jns
add
in
lret
jno
pusha
cmp
and
mov
data16
sbb
stc
inc
clc
lods
mov
sbb
loop
mov
pop
lahf
stc
test
or
push
mov
fisttpl
push
push
pop
popa
adcl
stc
pop
add
mov
add
fnstsw
jg
mov
loope
pop
adc
fdivp
add
cltd
dec
sub
jns
cmp
popa
insb
stc
cmp
or
sahf
in
movsb
inc
mov
jmp
test
mov
cmp
es
cmpsl
jle
in
fbld
loop
lods
fimuls
xor
xchg
xchg
xchg
xchg
pop
decb
mov
movsb
popl
cli
vmread
addr16
cmp
paddsw
pop
xchg
jae
sbb
pop
sti
in
jae
jl
mov
aaa
adc
iret
inc
inc
aaa
jg
sti
xchg
jo
in
or
hlt
xchg
xchg
test
arpl
pushf
loopne
cmp
sub
clc
mov
mov
repz
cmp
bound
mov
sub
inc
mov
inc
cltd
push
mov
cmp
xchg
cmp
lret
jge
imul
test
aad
jbe
push
xlat
inc
cmpsl
xor
inc
adc
add
repnz
std
in
scas
cmc
cmc
nop
in
and
rcrb
dec
lods
inc
fisubrl
test
aas
fidivl
jecxz
mov
mov
jmp
repz
enter
jge
inc
pop
fwait
or
mov
jecxz
mov
gs
loop
into
lcall
out
mov
mov
repnz
fsts
mov
mov
sbb
dec
push
sub
mov
scas
inc
repnz
pop
aaa
sub
mov
rcr
jg
inc
xor
ds
decb
mov
sbb
shl
test
ja
je
or
repnz
add
dec
or
sbb
nop
inc
xchg
movsb
ficomps
imul
andb
mov
xchg
push
icebp
jnp
in
out
in
dec
add
mov
inc
enter
inc
inc
dec
lret
data16
daa
jl
data16
mov
inc
leave
or
inc
pop
fwait
mov
xlat
pop
mov
cmpsl
jns
push
frstor
sbb
or
and
iret
pop
shrb
gs
jnp
hlt
rcr
inc
and
fnstenv
jnp
inc
pusha
insb
icebp
xchg
add
cmp
cmpsb
fxch
mov
jp
lret
push
fldenv
js
sbb
cmp
ss
clc
nop
inc
mov
add
pop
gs
mov
add
jbe
cld
sbb
add
nop
cmp
jmp
mov
inc
cs
daa
add
sub
loope
mov
lods
dec
hlt
jl
aad
mov
mov
xchg
ret
pop
inc
adc
add
arpl
outsb
cmpsb
nop
dec
insl
push
stc
ds
outsb
sahf
sub
and
mov
sub
js
push
fs
nop
xchg
mov
xchg
aaa
std
or
fbld
imul
movsb
sbb
in
mov
jae
jnp
lods
inc
mov
mov
stc
inc
cmpsb
push
enter
inc
add
test
pop
loope
imul
dec
adc
push
cmp
dec
mov
cmp
int
dec
mov
popa
out
out
ljmp
add
lret
push
adc
push
adc
sub
les
mov
xchg
pop
movsb
cld
adc
fcomps
inc
jnp
mov
fistps
push
lods
pmulhw
test
mov
das
dec
jmp
sub
movsl
cmpsb
sbb
scas
popf
dec
mov
popa
or
es
sarl
adc
in
popf
lods
pop
in
sti
cmp
imul
pop
xchg
outsb
sub
xor
cltd
int
xchg
cltd
sbb
add
mov
pop
dec
inc
data16
xchg
hlt
in
add
and
or
add
pop
aad
cld
mov
mov
sbb
in
xchg
stc
imul
sub
or
sub
fwait
or
dec
sbb
fstps
add
and
out
les
mov
cmp
cltd
aaa
imul
daa
mov
out
mov
movsl
fs
repz
loope
out
add
shll
inc
stc
mov
es
fildl
and
inc
sti
in
sarb
add
sub
lcall
add
mov
cmpl
pusha
mov
in
outsl
or
js
jmp
lds
insb
inc
dec
and
xor
xor
popf
pop
mov
int3
sbb
aad
sahf
sahf
and
push
mov
dec
sub
mov
imul
hlt
into
sahf
xor
and
insb
fsubrs
into
popf
stos
or
stos
lea
xor
sti
leave
popf
jle
cld
inc
xchg
cwtl
mov
xchg
clc
jmp
sub
sahf
add
dec
iret
int
addr16
in
fsubrl
addr16
dec
icebp
add
and
sub
and
fwait
or
repnz
dec
cmp
jns
inc
stc
ret
popf
outsl
pop
mov
dec
mov
dec
sub
and
outsl
fcompl
sub
or
das
adc
jmp
in
jg
and
mov
jl
or
repz
in
cmp
movsb
add
sbb
pusha
incb
jns
cld
fidivrl
outsb
or
outsl
aaa
aas
jl
sbb
mov
sbb
movb
inc
inc
mov
mov
les
nop
dec
insb
add
add
mov
clc
jge
lret
test
mov
add
out
std
dec
add
icebp
pop
or
pop
xlat
fwait
in
or
pop
xor
xor
and
popf
cmp
ret
add
outsb
orl
stos
jg
fildll
insl
ficomps
push
mov
pop
insl
cmp
push
jnp
xchg
shrl
add
loop
pushf
jge
repnz
inc
mov
mov
xor
sahf
jnp
stc
add
aam
push
inc
test
mov
stos
xor
jle
pop
pmulhuw
jmp
add
dec
sbb
mov
ds
dec
in
push
inc
inc
repz
push
in
jb
test
call
jno
add
ljmp
shlb
cmp
inc
push
push
pushf
sub
stc
xor
into
sub
mov
mov
and
mov
jne
out
push
imul
in
loope
jo
in
xor
ss
ret
repz
and
xchg
or
in
sti
int3
scas
cs
rcl
cmp
es
ja
lods
push
mov
jp
inc
mov
xor
jle
lret
nop
mov
push
add
roll
daa
sub
mov
mov
mov
mov
jg
cmp
xchg
jae
cli
mov
inc
addb
fs
test
jnp
mov
in
out
mov
add
jnp
push
xadd
ja
int3
mov
jg
mov
cli
stos
jns
nop
mov
rcrl
mov
inc
mov
inc
dec
mov
dec
movsb
or
sub
mov
inc
into
repnz
insb
xor
mov
in
xchg
dec
xchg
mov
test
sahf
jbe
out
mov
int3
fwait
pop
fisttpl
in
test
out
insb
mov
xor
inc
fdivrl
mov
and
fnstsw
mov
push
pop
cmp
inc
mov
cmp
or
inc
pop
aaa
das
rcl
fldenv
push
dec
iret
cld
ljmp
and
fidivs
rcrb
xchg
push
xor
mov
popa
je
add
adc
cld
aaa
mov
nop
popa
repnz
popf
jle
xchg
arpl
fnsave
adc
add
pop
leave
or
sub
fsubs
sub
jl
sbb
mov
popa
or
inc
popa
aas
pusha
mov
testl
cmc
adc
cmp
push
lea
cmpsb
jecxz
lahf
ds
shl
call
fldt
add
pusha
or
in
add
push
xchg
add
cmpsl
dec
xchg
sbb
daa
popa
aaa
inc
test
jns
lahf
inc
movsb
popa
jmp
das
enter
add
mov
mov
scas
pop
mov
jge
std
fucom
dec
dec
arpl
jmp
dec
insl
andb
mov
adcl
and
cmp
mov
add
add
add
call
xchg
mov
into
mov
mov
dec
and
push
sub
jno
pop
addr16
fwait
pop
cmpsb
cmp
add
mov
xlat
xchg
mov
js
aad
lea
and
mov
leave
sarl
pop
cmp
add
push
xchg
inc
mov
mov
mov
dec
pop
inc
pusha
mov
ds
mov
jne
adc
call
pop
into
lcall
xchg
fstpl
sahf
dec
cwtl
jp
cmpsl
popf
pop
jne
pop
out
fcomip
xchg
movsl
insl
es
gs
rorb
mov
mov
cmp
nop
push
add
xor
pop
mov
fimuls
cmpsb
jbe
mov
mov
cmpsl
xor
mov
sbb
cld
loope
mov
mov
xchg
sub
cvtpi2ps
lret
mov
in
fwait
jo
dec
xlat
scas
hlt
push
sub
xchg
inc
das
mov
sar
mov
lods
mov
mov
dec
lea
xor
iret
dec
mov
inc
inc
sub
fbstp
aas
mov
and
hlt
stc
rcrl
pushf
push
mov
repz
cltd
push
repz
cmpsl
jno
mov
adc
jle
out
push
and
mov
jmp
std
push
repnz
inc
imul
mov
cmp
mov
cs
mov
dec
inc
in
adc
lret
popa
out
in
and
or
inc
mov
or
lahf
in
dec
insb
movsb
push
in
mov
shll
jo
aaa
xchg
stc
cmp
mov
inc
in
xchg
jmp
xor
fcomp
push
icebp
lret
loopne
mov
sub
jecxz
addr16
xchg
outsl
nop
leave
rcr
mov
mov
fnstenv
aaa
aam
inc
push
inc
lret
jmp
sbb
mov
push
mov
in
dec
sarb
jecxz
roll
fsubs
cwtl
xchg
dec
int
mov
fwait
pop
dec
jecxz
leave
lea
cld
out
jp
in
stc
test
mov
add
fstps
gs
gs
in
popf
mov
pop
fcmovnu
inc
int
xchg
icebp
loopne
inc
cmp
bound
mov
es
cwtl
jmp
mov
and
mov
ret
dec
movsl
mov
inc
jne
push
mov
xor
jne
pushf
movsl
add
push
int
xchg
shrl
and
add
jnp
lods
sub
adc
mov
xor
int3
scas
pavgw
ud0
iret
jo
aam
icebp
mov
ret
push
imul
jmp
out
sub
in
add
inc
pop
pop
lahf
pop
jmp
or
adc
push
movsl
xchg
push
aam
stc
movsl
push
mov
in
outsb
sbb
in
test
in
pop
adc
cmp
scas
push
mov
inc
shrb
cmpsl
xchg
loope
dec
mov
mov
jbe
mov
dec
sbb
mov
stc
xchg
xchg
mov
sub
popf
push
add
jno
popf
cmpsl
ret
mov
pusha
jmp
cmpsb
xchg
cmp
popa
push
jge
mov
xor
insl
mov
jnp
lret
or
cltd
or
test
and
fsubrl
sbb
das
test
mov
lret
mov
or
jecxz
pop
es
sub
lret
movsb
mov
push
sahf
repz
push
mov
fs
or
pushf
xor
sub
dec
hlt
in
add
call
ret
loop
push
fdivrs
or
loope
and
bound
xchg
jb
push
inc
outsl
repz
test
mov
mov
movsb
out
ret
fs
aad
or
xor
or
ret
inc
sub
dec
add
lret
std
mov
jmp
mov
jp
test
mov
insb
adc
lahf
repnz
out
push
popa
jbe
add
inc
ss
xchg
push
jne
cs
hlt
int3
aad
adc
add
mov
stos
cld
mov
adcb
or
bsr
into
cltd
scas
cmp
sub
cmp
cmp
cld
or
imul
inc
loop
adc
mov
mov
jo
inc
in
fnstsw
ret
sub
call
mov
addr16
ret
jo
pcmpgtb
testl
int3
dec
xor
and
sbb
xor
inc
cs
adc
cmc
fldt
lods
movsb
into
or
in
mov
mov
cmpsb
dec
add
adc
dec
jbe
fdivs
and
rcl
cs
rorb
adc
inc
jns
bound
push
leave
insl
movsb
mov
cmp
mov
dec
mov
sub
mov
mov
clc
in
push
mov
or
xchg
fmull
mov
cmc
shl
push
loope
xor
cmp
test
cmp
mov
lret
xchg
adcl
dec
push
dec
pushf
mov
pop
arpl
pusha
add
xchg
dec
or
cmp
leave
loop
cmp
enter
pop
dec
int
dec
imul
sbb
rcrl
mov
mul
push
pushf
popa
pop
icebp
mov
pusha
pop
pop
aam
mov
pop
xor
push
cmp
pop
inc
daa
and
mov
xchg
mov
repnz
inc
or
add
ret
cmp
sub
out
jmp
push
inc
gs
std
mov
mov
lds
push
mov
sbb
in
movsl
add
les
icebp
shlb
sbb
sbb
mov
mov
inc
pop
dec
and
mov
pop
rcrl
fstp
or
mov
or
or
mov
mov
jmp
out
bound
sub
not
gs
arpl
repz
cmc
lahf
inc
ds
loop
fsubrl
shll
jb
lods
movsl
popf
das
mov
in
and
shl
mov
pop
fcom
inc
inc
add
cmp
cmp
lcall
pusha
or
xlat
fldl
dec
in
xor
out
in
packsswb
pushf
pop
mov
cltd
and
jne
out
repz
test
movsl
push
adc
fistl
xor
sbb
movsl
mov
decb
loop
mov
xchg
fidivrs
dec
mov
sub
stc
pop
push
mov
faddl
jecxz
sub
jb
orl
mov
test
adcb
or
mov
pop
xor
sti
add
inc
mov
mov
jmp
sub
sub
jmp
or
jnp,pn
das
leave
test
aad
aad
int
mov
pop
arpl
push
sub
icebp
int
sub
inc
mov
dec
das
iret
inc
and
jmp
insb
out
ffreep
sahf
sub
and
out
mov
mov
add
xor
movsl
jae
mov
push
xlat
jmp
in
out
lock
fsubrs
scas
aam
int3
insl
cmp
and
pop
cld
mov
rcrb
lret
lret
lods
aad
hlt
xlat
pop
sub
movsl
insb
sub
in
fidivs
mov
pop
adc
lcall
in
mov
and
jne
cmp
jle
loope
push
mov
and
push
shlb
movsb
mov
dec
imul
jecxz
pop
mov
or
cmp
outsb
scas
imul
jl
mov
loopne
mov
call
scas
add
lret
aaa
xchg
rcrl
sub
out
fstl
cmp
insb
jecxz
add
mov
les
xchg
in
add
std
add
hlt
sub
mov
aas
leave
xchg
mov
repz
ljmp
cmpsb
dec
popa
repnz
cmc
arpl
or
dec
push
fsubl
loopne
dec
nop
push
sub
into
call
cmp
fmuls
iret
sarl
fdivl
inc
lret
das
lock
mov
das
pop
xchg
enter
inc
pop
sahf
mov
or
sub
int
mov
sub
fldenv
rcrl
in
push
cs
int3
js
cltd
push
nop
jmp
sbb
sbb
imul
fidivl
fdivl
dec
int
jl
xchg
xchg
sub
icebp
xchg
add
sbb
es
iret
repnz
int
or
fildll
sbb
aad
push
repnz
cmp
sbb
mov
sahf
fistl
clc
aad
mov
cmc
aad
push
push
lret
cwtl
ss
pop
adc
out
pop
lcall
in
das
test
rclb
repz
mov
cmp
fists
pop
adc
inc
incl
inc
add
nop
jb
out
sub
cmp
jmp
inc
pop
xor
cmp
xchg
xor
fistps
loope
jo
and
pop
loope
shll
jb
cmc
rolb
dec
jge
cmp
aas
movsl
pop
add
hlt
inc
cmpsb
mov
xorb
shlb
in
cmp
mov
mov
dec
loop
nop
arpl
test
mov
test
jl
mov
fsubs
lret
push
fisubl
fs
iret
inc
cwtl
std
lret
cmpsl
jecxz
mov
nopl
scas
jmp
mov
sar
out
movsl
lret
dec
std
out
test
fucomi
aam
fsubrl
lret
inc
std
mov
dec
fisubs
mov
cmpl
aad
movsl
nop
jo
xchg
ss
gs
inc
adc
lahf
adc
fdivrs
in
mov
insl
sub
in
mov
and
test
push
ds
push
insl
mov
dec
inc
push
cs
xchg
je
cmp
mov
lret
push
push
pusha
jb
push
xor
inc
add
insl
fs
loopne
sub
jb
mov
repnz
out
xor
int3
mov
lods
repnz
inc
imul
xchg
pop
xchg
pusha
sbb
dec
ds
dec
popa
cld
mov
popf
iret
sub
shll
std
add
or
lea
pop
andl
pop
imul
iret
lret
loope
inc
in
jg
jg
aad
mov
ja
jae
push
movsb
movsl
fs
xor
mov
xor
jae
push
jno
xchg
cmpsl
mov
mov
pop
and
sti
ja
jae
sti
nop
pop
cmp
jle
sahf
negl
bound
mov
jno
popa
sbb
push
bound
mov
push
dec
cmp
sbb
enter
in
mov
xchg
ja
loope
mov
out
inc
add
pop
sbb
arpl
or
leave
dec
xchg
test
add
add
int3
jb
add
imul
addr16
jb
xor
add
stos
add
and
mov
ljmp
fstp
mov
cmp
sub
sti
int
fisubrl
cmp
lret
in
aas
jecxz
mov
cmc
loopne
mov
adc
in
fsubp
cmp
aas
inc
lret
mov
inc
out
inc
pop
in
fisttpll
xchg
xchg
xor
shll
cmpsl
sub
clc
xchg
mov
ds
in
fldt
push
pop
push
mov
movsb
orb
andl
popa
loope
adc
push
into
xchg
push
adc
mov
inc
cwtl
into
adc
adc
mov
push
stc
push
xchg
call
mov
lret
in
lret
sbb
out
nop
scas
jnp
add
inc
and
lods
sub
mov
mov
divb
and
sbb
lods
adc
dec
pop
test
lods
xor
inc
inc
and
xchg
xchg
sub
add
loopne
inc
adc
pop
mov
leave
add
pop
frstor
scas
movsl
pop
mov
push
inc
shr
cmp
sbb
xchg
mov
loope
mov
lret
pop
dec
hlt
pop
lret
inc
sbb
loopne
stos
ret
icebp
sti
fidivrs
dec
call
flds
push
dec
mov
aas
andb
jnp
leave
adc
inc
mov
dec
cld
imul
cld
frstor
lahf
aad
cmp
inc
dec
push
pop
sti
sar
sub
mov
sar
inc
scas
inc
mov
xchg
sbb
fsubrp
mov
push
sub
or
clc
outsb
mov
test
loope
sbb
imul
and
lret
insl
xlat
arpl
cld
sahf
test
sahf
jp
stc
andl
cltd
pop
or
and
arpl
mov
xchg
mov
ret
into
lret
faddl
add
xor
cmc
repnz
add
into
gs
jnp
nop
lods
xchg
sub
sbb
lret
sbb
and
or
fcmovb
pop
jae
sbb
mov
jno
int3
mov
and
mov
push
mov
js
cld
mov
xor
shlb
jns
push
push
nop
mov
xchg
dec
cmp
ficompl
cmp
inc
int3
inc
add
fwait
pop
mov
mov
pop
or
rcl
jbe
lods
pop
movsb
int3
ficomps
int
inc
mov
fwait
cld
cld
pop
sub
stos
aad
pusha
out
jbe
jecxz
ret
ss
add
cmpsb
inc
int
push
cmpsb
mov
leave
push
pop
cltd
ss
or
test
aam
dec
xchg
mov
les
xorb
xchg
jge
cmp
or
icebp
xchg
mov
stc
and
xchg
mov
inc
cltd
inc
rolw
sub
sti
cmp
add
add
int
inc
lret
or
popf
insl
mov
or
out
adc
xor
out
cmp
pop
call
aam
enter
cmpsb
xchg
mov
imul
fcompl
inc
dec
bnd
in
out
icebp
xor
in
xor
cmpsb
mov
jbe
js
fidivrs
das
cwtl
mov
fstl
xor
pop
iret
fwait
divb
sub
mov
xorb
sbb
mov
mov
pusha
js
mov
stc
or
dec
aaa
mov
inc
in
js
mov
pop
push
cmc
lock
enter
sti
fisubs
inc
pop
xchg
popf
inc
dec
shrl
sbb
int3
dec
lcall
fiadds
out
psubusb
add
outsl
sbbb
xchg
sbb
mov
add
cltd
pop
lcall
xchg
aam
fstpl
fs
sub
xor
and
dec
js
jl
sub
mov
cli
icebp
in
jnp
int3
xchg
out
sub
out
xlat
sbb
in
cltd
pop
lahf
and
in
dec
and
xchg
hlt
add
xor
add
add
push
pop
mov
push
fsubs
pop
mov
mov
inc
hlt
mov
in
pop
add
stos
scas
fwait
mov
cs
push
out
cwtl
stos
ja
sahf
fcomip
jp
leave
mov
outsl
xlat
push
push
aas
push
mov
aam
mov
add
cmp
stos
adc
negb
repnz
out
xchg
frstor
lahf
jecxz
punpcklbw
loope
xchg
dec
and
lahf
in
mov
mov
push
and
xchg
push
test
loope
bound
bound
dec
mov
inc
leave
std
popa
push
mov
push
popf
cmp
subb
push
add
imul
adc
sbb
xchg
sbb
and
xchg
or
test
pop
sub
mov
sarl
leave
or
ret
dec
cmp
mov
popa
xor
lds
cmp
loop
mov
aad
dec
or
push
shlb
out
jecxz
inc
adc
int3
fcomp
mov
add
out
pop
rdpmc
clc
or
mov
cmp
nop
cmp
mov
mov
jmp
pop
aam
mov
mov
cmp
push
jge
dec
imul
xlat
mov
orb
mov
sbb
imul
adc
cli
mov
loope
shll
and
dec
imul
divl
add
cli
sbb
sub
nop
subl
repz
out
mov
mov
fs
stos
cmpsb
fldcw
icebp
fldenv
sbb
xlat
sbb
int3
gs
inc
shr
cmp
cmp
movsl
pop
aam
xor
stos
sahf
aam
and
test
popa
jmp
cld
or
push
push
push
ja
or
jbe
xchg
cmpsl
and
push
test
movsl
cld
dec
loopne
inc
mov
gs
or
ljmp
in
imul
mov
lret
mov
inc
jno
fs
mov
dec
sub
xor
xor
loopne
inc
dec
inc
add
mov
bound
aad
dec
call
insb
lcall
jns
in
mov
gs
testl
push
jp
dec
sti
pop
cmp
xor
xchg
cltd
mov
fmuls
aaa
lret
stos
ds
mov
cli
and
xor
sarl
fcmovnu
jns
xchg
pop
xor
movlps
dec
push
jne
into
cmp
push
jns
push
dec
mov
push
cs
mov
and
mov
aaa
pop
pop
pop
push
jo
aam
call
ljmp
xchg
les
out
scas
imul
cltd
mov
push
dec
je
xor
cltd
mov
insl
push
or
andb
xchg
enter
jnp
xchg
rolb
sub
dec
stc
les
xchg
les
clc
pop
jnp
loop
mov
mov
mov
jle
mov
jnp
scas
pop
jl
xchg
out
jecxz
jbe
loop
adc
imul
mov
lods
pop
pusha
dec
mov
mov
mov
enter
mov
iret
out
sub
cmp
push
jl
or
cs
lock
imul
or
fnstsw
pop
sbb
mov
incb
push
inc
sbb
rcrl
addr16
int3
out
jns
pop
mov
jmp
in
pop
mov
push
inc
je
sbb
mov
fwait
into
int3
bound
pushf
add
movsb
in
jmp
cmp
das
pushw
push
andb
jmp
fs
xor
testl
aam
lock
lock
jbe
xchg
loope
ja
aad
and
push
pop
repz
lret
add
fcmovnu
fstpl
mov
jecxz
xchg
pop
mov
les
mov
negb
fidivrl
test
rcr
loope
pop
sahf
adc
fnstsw
ja
pop
add
imull
repz
xor
xchg
loopne
aas
xor
mov
sub
lods
mov
sub
loop
dec
mov
rolb
ret
aaa
mov
testl
xchg
int3
cmp
scas
pop
jo
inc
js
repz
lea
mov
mov
popf
mov
negl
cmp
sub
mov
push
fcomp
fwait
ljmp
fadd
mov
mov
dec
cs
mov
xor
xchg
sbb
addr16
mov
hlt
fs
lods
mov
adc
pop
test
cmp
rcrl
dec
sub
aaa
lahf
cld
pop
fprem1
and
inc
outsl
loopne
add
mov
idiv
enter
pusha
movsb
cmp
sbbl
test
imul
jmp
repnz
dec
daa
cld
insb
add
idivl
xchg
andb
aad
rorb
xor
cld
pop
test
mov
iret
mov
pop
or
dec
incb
cmpsb
lcall
rcrl
loopne
inc
xor
pop
out
mov
add
cmp
pop
sub
loop
aam
push
mov
mov
xchg
loop
and
inc
inc
roll
stos
lods
sbb
add
out
or
push
imul
jno
or
lods
mov
dec
mov
mov
nop
mov
fwait
jecxz
loope
xor
and
js
scas
scas
iret
rorl
mov
dec
mov
imulb
stc
in
cltd
inc
and
adc
mov
fs
push
jmp
push
sbb
sbb
push
pop
sub
push
pop
fmul
cli
loop
aas
ror
cmp
dec
and
mov
mov
jbe
mov
pop
pop
mov
pushf
enter
and
into
sbb
xchg
mov
andl
shl
add
mov
gs
clc
xor
sub
in
inc
rol
and
add
mov
popf
and
int
cmpsb
jno
incb
stos
jo
adc
sbb
andb
stos
test
pop
jmp
mov
or
push
in
arpl
in
sub
and
hlt
stos
lods
fidivrl
inc
jmp
push
and
lret
pop
jmp
inc
cli
mov
mov
imulb
mov
cmp
push
sbb
jo
add
add
fs
mov
mov
sarl
fisttps
cmp
xor
loopne
test
sbbb
mov
dec
testb
out
pop
sahf
popf
leave
sub
inc
dec
mov
pop
sub
sbb
js
jecxz
repz
pop
cli
add
ljmp
mov
mov
xchg
hlt
in
subb
mov
mov
push
andw
xor
fstpl
and
dec
cwtl
je
jns
in
ret
rep
cmp
aad
outsl
jnp
cmp
dec
jns
add
stc
in
test
sbb
fnstenv
stc
fwait
sub
iret
sahf
stc
cli
sub
sbb
rcr
cmp
xchg
nop
leave
bnd
dec
xchg
inc
aaa
out
cmp
mov
imulb
add
sti
mulb
jae
sbb
lock
cmp
mov
repz
jmp
nop
scas
jne
and
imul
push
sub
mov
lret
push
dec
sbb
adc
mov
adc
adc
lret
clc
lcall
cmp
cmp
xlat
leave
sarb
outsb
lea
cmp
ljmp
iret
enter
mov
jbe
cmpsl
imul
out
adc
shlb
leave
test
mov
repz
cltd
mov
outsl
or
mov
jmp
dec
sbb
sahf
aam
adc
leave
pushf
dec
adc
lea
frstor
pop
test
mov
fbstp
cld
stc
fxch
add
shrb
mov
movsl
mov
stc
mov
roll
push
js
idivl
in
rol
fsubs
or
push
popa
sbb
dec
or
popf
adc
shll
and
and
lods
popf
scas
mov
neg
cwtl
lahf
cs
xor
jmp
cmc
jbe
cmp
sbb
lahf
popa
fbld
push
and
test
ret
adc
xor
arpl
leave
mov
mov
aas
pushl
push
mov
adc
bound
add
movsl
mov
xchg
mov
je
fldcw
push
lods
fwait
mov
in
mov
cs
jmp
lret
shrl
cmp
sbb
pop
dec
test
adc
outsb
or
jl
fldenv
cmpb
adc
dec
lods
or
mov
ret
loopne
loopne
cmp
filds
aad
dec
mov
sar
adc
mov
push
int
cwtl
and
sarl
cwtl
rcrb
mov
test
sarb
roll
xor
mov
jns
out
cmc
xor
xchg
jb
lret
and
xchg
sub
rcrl
cs
jns
jmp
incb
cmp
jns
sub
mov
sbb
mov
add
sub
test
imul
sarl
xchg
in
xchg
dec
popa
jae
or
jnp
scas
pop
cmp
lock
add
mov
adc
pop
aas
xor
cltd
sub
or
mov
dec
sub
popf
mov
lahf
mov
dec
xchg
pop
sub
mov
or
mov
or
push
inc
getsec
sub
mov
fwait
mov
pop
mov
gs
cld
test
gs
test
lret
movsl
and
jno
mov
stc
sbb
adc
lahf
fsubrl
xcrypt-cbc
cmpsl
adc
lock
pop
mov
cmc
jmp
mov
in
mov
pop
leave
add
xchg
add
push
mov
cmp
aas
imul
xchg
enter
pop
fcompl
sbb
push
out
push
pop
les
test
push
lock
mov
pop
jns
mov
jae
push
repnz
outsb
shlb
xchg
push
test
mov
test
jle
sub
enter
dec
lret
ja
out
pop
lods
inc
test
mov
xchg
mov
gs
mov
dec
mov
imul
mov
adc
ja
cmp
sbb
pop
lret
ja
mov
into
xor
push
loop
cmpsl
out
pop
lea
popf
lret
xor
cltd
lret
xchg
cwtl
popa
lods
cmp
pop
sahf
add
sbb
dec
cmp
inc
and
out
or
jl
cltd
inc
addr16
add
xchg
sub
mov
std
fdivs
push
mov
mov
adc
in
mov
loope
add
fadds
roll
xchg
fbstp
jp
mov
cmp
aaa
fpatan
xchg
pusha
jne
aad
cmp
adc
popa
lcall
repnz
mov
cmc
or
aam
adc
sub
cld
fidivl
adc
inc
in
ja
push
mov
jb
and
push
test
push
sbb
adc
pop
or
repz
lret
jno
insb
mov
adc
popa
ret
pop
xor
aam
into
mov
sbb
int
cmp
mov
lret
sbb
push
lea
sub
dec
pop
ljmp
sbb
jno
outsl
cmpsl
xor
sbb
push
mov
int
bound
dec
sbb
pusha
and
fnsave
cmc
mov
jns
call
psubsw
popa
das
test
mov
imul
mov
ljmp
fwait
sbb
xor
in
dec
dec
inc
std
outsl
pop
mov
inc
cltd
repnz
jbe
jecxz
fcmovu
jns
jb
popl
add
xchg
test
stos
sbb
out
mov
fldenv
ret
fdivl
popf
add
mov
loopne
dec
lods
push
dec
mov
in
push
hlt
rolb
sub
mov
mov
leave
mov
mov
mov
shrb
or
fisubs
bound
adc
mov
pop
dec
imul
ret
inc
cmpl
scas
jge
jne
rorl
cmpsl
lock
jnp
pusha
shld
dec
jl
xor
ret
dec
or
pop
jne
cmp
loop
or
rcll
movsb
add
in
xlat
mov
push
add
mov
lea
faddl
xor
jo
dec
scas
cmp
xchg
jle
mov
xchg
jmp
scas
and
imul
jg
mov
jmp
jg
sub
cmpsb
int
out
cmp
scas
ficompl
push
push
loop
sbb
stos
lods
xchg
pop
bound
mov
addr16
dec
cwtl
or
repz
push
push
mov
ret
xchg
xchg
jae
or
adc
decb
mov
lea
int
mov
mov
pop
addr16
sar
mov
movsb
hlt
sbb
inc
cmpsl
sahf
cmp
xor
shlb
in
cmp
and
add
pop
leave
push
and
jo
pushf
cmp
rorl
cmp
leave
jo
popa
ficomps
aad
pushf
adc
or
xchg
iret
iret
sarb
cmp
in
insl
mov
pop
fistpll
movsl
cli
cmpsb
pop
fs
ror
mov
jnp
int
adc
rcrl
cmp
loopne
inc
out
lahf
ret
xchg
pop
clc
jmp
dec
xor
aas
mov
or
out
pop
mov
inc
sbb
fisttps
movsl
jl
sbb
sahf
xchg
aaa
xchg
xchg
or
mov
push
xor
cltd
pusha
and
and
jne
out
lcall
inc
leave
jo
jbe
dec
add
dec
xor
movsb
in
add
xchg
popf
add
mov
mov
andl
mov
movaps
shlb
xor
sbb
incb
in
shll
cmp
bound
mov
inc
sub
jp
xor
sahf
xor
pop
sub
outsb
lock
int3
std
mov
sti
fucom
cmp
stos
rolb
xchg
outsl
stc
and
push
std
and
out
sbb
outsl
popf
push
mov
loop
in
pop
shrl
in
fstpl
jmp
mov
out
in
mov
mov
leave
in
jge
and
stos
insl
iret
cmp
xchg
inc
loop
sub
cmp
mov
mov
inc
adc
fldenv
xchg
pushf
add
jle
aad
std
in
mov
and
cmp
dec
pop
roll
popl
stc
xchg
hlt
cmc
or
jl
or
mov
scas
push
decb
jle
pop
mov
cmpsl
stc
add
scas
inc
and
ret
fmull
pop
mov
popa
xchg
xor
test
shr
or
xchg
out
or
nop
pop
popa
rcr
mov
jecxz
adc
sbb
lcall
pop
mull
pop
mov
xlat
cmpsl
test
add
cltd
inc
jo
xlat
mov
jne
scas
in
cmp
fnsetpm(287
packuswb
push
cli
std
and
or
xor
and
pop
push
rcr
mov
rcl
out
mov
addr16
test
std
dec
push
leave
cltd
add
rcrb
mov
int3
in
push
adc
shl
mov
decb
dec
mov
push
jge
fmuls
push
sub
data16
jno
aam
fadds
mov
addl
mov
or
xchg
iret
outsb
daa
bound
fs
into
test
mov
rcl
pusha
fwait
cmp
data16
jo
dec
jb
repnz
fsts
mov
jnp
mov
outsb
mov
mov
imul
mov
sub
leave
sbb
fcompl
sub
pop
sbb
fdivr
jno
mov
out
jecxz
fsubrl
lcall
dec
xlat
inc
jg
dec
mov
call
pop
lcall
into
in
xor
pop
mov
mov
mov
xor
rolb
out
lods
cli
frstor
nop
into
lock
xchg
and
push
or
adc
into
in
sbb
dec
int3
cmc
int
in
dec
pop
cltd
add
out
lea
out
gs
push
loope
mov
popf
cli
pushf
aam
mov
push
jb
inc
jnp
inc
mov
cli
adc
inc
add
das
or
and
lret
test
dec
jmp
fstpt
mov
xchg
rorb
mov
jmp
sbb
or
movsl
pop
mov
test
test
sbb
cwtl
loope
leave
out
xchg
aad
pop
fisubs
mov
rorl
mov
or
sbb
stc
xchg
call
insb
pop
out
in
sbb
aam
std
aaa
sub
fisttpl
mov
test
in
pop
pop
sub
arpl
add
xchg
gs
jmp
out
lea
and
ss
and
cli
arpl
dec
mov
scas
out
push
fsts
mov
and
jl
and
es
addb
pop
jmp
into
xorl
popf
popa
push
imul
repnz
pop
je
fcomip
jl
movsb
xchg
shr
mov
mov
push
je
pop
cmp
call
in
fwait
xor
sbb
push
push
mov
in
jbe
pusha
loope
bound
repz
idiv
dec
adc
jns
sub
fstpl
add
mov
fld
ret
popa
add
dec
pop
or
clc
adc
imul
insl
rclb
mov
and
test
mov
clc
sub
hlt
loopne
cs
loop
cmp
cmp
hlt
aam
shl
mov
subl
pop
pop
dec
fmul
bound
dec
in
repnz
sub
emms
mov
mov
pushf
pop
subb
cmc
in
xchg
in
add
xchg
lock
mov
sub
hlt
hlt
lds
imul
test
mov
push
loope
pop
push
sub
jmp
mov
lock
in
sub
sbb
aad
fwait
loope
in
push
and
aam
ljmp
cmpsb
sub
shll
fwait
mov
xlat
vmovsd
push
movsl
imul
leave
push
lods
adc
lahf
mov
shl
aas
mov
sti
jg
lahf
adc
popf
sub
sub
jg
jns
popf
in
xorb
mov
add
cmp
out
ret
daa
pop
movsb
pop
dec
or
cmpsb
xadd
cmp
and
jmp
add
xor
dec
add
leave
lahf
jnp
xchg
std
mov
push
daa
pushf
fwait
mov
dec
cmp
pop
lret
loopne
inc
mov
imul
adcb
rcr
fs
xorl
lock
out
lock
sti
pop
mov
gs
push
pop
jle
pushf
mov
mov
dec
sub
inc
addl
aad
pop
fs
or
fdivs
sbb
cmpsl
add
pusha
jmp
jp
push
xor
push
mov
inc
sub
lahf
push
aaa
pop
mul
cltd
out
loop
mov
jno
push
jnp
in
mov
cmp
iret
xchg
mov
push
xchg
mov
insl
testb
mov
and
insb
sub
lahf
lock
pop
jge
lods
jns
je
lret
mov
add
insb
push
cmpl
mov
xchg
mov
popa
shlb
lea
lods
or
std
hlt
dec
popa
jmp
cmp
sbb
daa
mov
pop
fs
call
into
popf
pop
or
jp
mov
fdivr
test
cli
mov
stc
xchg
iret
adc
and
or
or
addl
add
inc
mov
xchg
movsb
inc
xchg
mov
pop
jns
idivl
mov
aad
cmpl
push
sub
jp
imul
out
int3
and
add
popa
andl
jmp
lcall
push
cld
mov
int3
mov
fwait
sub
in
repnz
stos
call
aad
loop
inc
adc
shll
mov
movsl
cmp
dec
aam
xor
mov
adc
test
call
cmp
nop
add
test
scas
xchg
or
imull
add
lahf
rcrb
adc
aaa
ja
ds
test
fnstcw
jmp
sgdtl
cmp
sbb
fsubrl
xchg
pusha
popf
loopne
cmp
xchg
sbb
mov
test
leave
test
sahf
jg
mov
dec
aad
cmp
sahf
shll
out
test
or
push
jno
cmpsb
pop
cmc
out
inc
hlt
das
popf
dec
fiadds
aaa
repnz
aaa
cmc
sub
repnz
test
or
jl
pop
in
hlt
loop
pop
fnstsw
aaa
lahf
cld
ss
jno
jg
jmp
call
sub
aam
fnstsw
jno
push
dec
cmp
or
xchg
testl
cmp
xchg
sbb
adc
inc
gs
or
fsubs
into
push
aad
or
jg
dec
inc
cmp
jb
jge
scas
inc
out
jo
adc
pop
clc
jno
stos
adc
and
cmpsb
sub
popf
cli
and
dec
int
mov
pushf
adc
cli
inc
add
shrb
jmp
push
movsb
inc
sar
pop
mov
jge
test
leave
jge
add
jmp
ret
jge
pusha
dec
movsl
mov
pusha
lods
mov
add
mov
inc
shl
test
cmpsb
mov
cmpsl
ss
rolb
arpl
lret
mul
js
pop
popf
out
in
out
jo
cmp
xchg
sbb
or
inc
xor
xor
nop
repnz
insl
mov
or
or
pop
movsl
adc
cmc
xchg
cmp
mov
aad
cld
or
mov
mov
push
jne
ret
cmc
lret
test
push
sbb
mov
and
jmp
sbb
jmp
fldcw
xchg
push
jecxz
fdivl
xchg
dec
xchg
jae
decb
and
cmp
fcmovu
repnz
out
data16
pushl
dec
xchg
sbbl
push
dec
in
addr16
mov
out
jmp
sbb
cmp
js
lds
pop
jg
loope
sub
sbb
xchg
mov
popf
add
adc
lea
aad
sub
cmc
jmp
jbe
std
ljmp
dec
shl
adc
fisubl
fsubrp
inc
fsqrt
orl
xchg
out
jmp
outsb
outsl
jo
subb
xor
adc
mov
lret
jecxz
push
movsb
xchg
mov
arpl
sahf
xlat
push
jnp
testl
jnp
hlt
xchg
std
xchg
ljmp
xor
js
mov
or
insb
and
or
jb
sub
xchg
inc
add
pop
add
bnd
icebp
movsb
jno
lods
xlat
popf
jge
pusha
cld
bound
lret
mov
xlat
add
jbe
mov
popa
and
cmp
out
fwait
xor
sbb
add
mov
addb
sbb
jmp
clc
int
lret
sti
cvtps2pi
xor
pusha
add
into
jl,pt
add
jbe
sbb
or
mov
repnz
mov
aas
pop
inc
or
inc
out
fdivrl
faddl
adc
lea
sbb
out
adc
fucomip
hlt
in
icebp
cmp
xor
hlt
push
mov
popa
sahf
add
mov
cmp
in
fwait
iret
into
mov
and
jbe
jl
ret
ficoml
dec
jmp
push
pop
aad
push
popf
adc
dec
mov
in
aad
xchg
jle
mov
shl
cli
fdivr
rol
cmp
mov
loop
imul
leave
jmp
add
fldt
or
cmc
xor
fsubl
mov
fstpl
and
mov
push
lds
in
jb
shrb
int
cmp
push
adc
pop
lahf
fstpl
cmpsb
push
pop
jmp
pusha
dec
subb
int3
arpl
lds
jg
mov
imul
int3
les
push
out
ret
inc
xchg
in
jmp
add
sub
mov
lods
je
pop
jae
jno
sar
inc
adc
int
cmp
cld
xor
and
xor
pop
les
aaa
xchg
dec
push
fistpll
ss
cmp
shl
dec
xchg
cmp
aad
pop
mov
cmc
mov
stc
in
lock
sbb
dec
mov
lds
jo
arpl
add
jmp
fnstcw
stc
xlat
inc
std
lods
mov
xlat
add
inc
mov
or
jecxz
cmpb
loopne
inc
outsb
aaa
inc
nop
imul
sub
mov
scas
icebp
imul
cld
mov
lret
aad
mov
add
out
push
mov
cmp
aam
decb
aad
lods
mov
hlt
fadds
pop
icebp
lds
mul
mov
cmpsb
mov
cmp
dec
xlat
mov
dec
mov
aaa
fisttpl
fldenv
aaa
mov
add
cltd
cld
leave
shl
in
cmc
int
dec
lods
clc
shlb
hlt
pop
xor
cld
test
adc
shl
mov
inc
lret
dec
insb
mov
dec
pop
pop
jmp
mov
mov
shlb
or
dec
sub
jecxz
mov
lcall
icebp
mov
push
je
fs
dec
lods
sbb
inc
shrb
xchg
xlat
push
cmp
aaa
movsb
negl
jmp
adc
stc
xlat
sub
insb
sarl
adc
mov
xchg
scas
sbb
and
stc
arpl
xor
ds
jg
gs
jecxz
adc
jge
dec
ja
dec
xchg
andb
jl
ret
inc
mov
adc
mov
jne
sbb
es
lcall
mov
push
dec
cmp
rep
and
fldenv
out
mov
les
aam
mov
mov
movsl
inc
js
movsl
outsb
movaps
andb
mov
into
and
in
lret
fs
jbe
imul
push
and
inc
imul
shll
rcr
mov
in
cmp
sbb
clc
push
std
iret
fmuls
and
dec
jns
push
loopne
fs
mov
stc
imull
ret
lret
ds
jmp
cmp
fwait
shlb
dec
xor
popa
dec
fdivl
mov
push
sbb
inc
fwait
sti
jl
jecxz
cmp
mov
xchg
xor
insl
jecxz
cld
pusha
int3
inc
push
clc
in
sti
jnp
je
and
cmp
sbb
and
loope
dec
pop
es
loop
scas
push
stc
gs
sahf
lea
xor
imul
and
popf
mov
lret
fprem
cmc
add
jecxz
inc
aad
cmp
test
jecxz
ja
pop
pavgw
push
icebp
insl
addr16
xchg
sti
sahf
jecxz
pop
leave
push
mov
jecxz
jns
dec
cmp
push
cwtl
jb
sbb
bound
jnp
sub
popf
es
insb
mov
rcrl
sub
lcall
adc
test
cwtl
sub
arpl
out
sbb
ret
pop
cmc
inc
sbb
add
das
sub
mov
mov
ljmp
negl
xchg
ss
pushl
hlt
in
mov
add
movsl
nop
ret
int
or
xor
mov
add
adc
pop
cmp
xor
mov
sub
pop
jnp
jae
inc
xchg
jae
pop
cmp
lret
inc
ja
adc
jne,pn
ret
in
push
cmc
cld
loopne
sub
int3
mov
add
fnstsw
movb
sbb
dec
jl
in
mov
sbb
rolb
inc
leave
add
cltd
imul
arpl
inc
jne
mov
popf
sbb
sbb
xchg
loopne
pusha
jp
and
ss
mov
cmp
movsl
std
aad
inc
iret
push
in
jge
push
rcr
pop
dec
mov
gs
or
std
les
cmp
fucomip
pop
lods
lds
or
xchg
xchg
lcall
test
fildll
movsl
rcll
jne
lds
mov
xor
in
stc
cwtl
inc
lahf
inc
sub
loope
mov
cmp
inc
jmp
sbb
ja
inc
das
ljmp
cmp
jecxz
scas
add
das
lahf
iret
bound
call
pop
sbb
mov
aad
pushf
dec
lahf
jne
cmpsl
daa
push
dec
aas
or
in
sar
inc
cmp
cmc
mov
jl
in
sbb
in
sub
cmpsl
stc
xchg
and
add
insb
imul
in
aaa
pop
cli
sbb
pop
leave
fcmovnu
imul
iret
call
js
mov
rcrl
inc
jnp
cmpsl
das
enter
out
insl
mov
and
jmp
ltr
xlat
push
mov
mov
inc
xor
nop
das
dec
and
std
or
xchg
shl
sarl
push
mov
xlat
jle
and
push
leave
popa
adc
pop
out
pushf
cltd
and
dec
ror
testb
cmpsl
les
stos
mov
adc
mov
popa
cmp
add
sbb
jmp
add
ror
push
xchg
xchg
cwtl
ja
ret
rcrl
lret
das
sbb
mov
aaa
fs
movsb
xchg
cltd
lock
mov
push
add
mov
jle
mov
ss
aaa
pop
xor
mov
dec
mov
int
int3
jecxz
or
ret
int
btc
imul
rcll
lret
fsubl
int
and
add
aaa
fdiv
sub
in
fnsave
imul
out
jbe
aam
sbb
sub
outsl
add
lret
icebp
nop
outsl
shll
int
andb
std
mov
hlt
and
pop
mov
jnp
or
mov
fdivs
fnstsw
int3
adc
sti
or
aad
mov
popf
jns
iret
fs
inc
mov
addr16
mov
cmp
sub
mov
les
shrl
rcll
or
imul
inc
mov
dec
movsl
mov
push
pusha
leave
aad
lea
or
jns
fsubl
cmpsb
mov
loop
fbld
psubw
dec
xchg
movsb
push
shlb
insl
or
push
fldenv
xlat
cld
mov
jbe
adc
shrb
outsb
xchg
fimull
fisttpl
popf
add
outsb
sub
mov
xchg
lret
ftst
mov
or
and
xchg
inc
cmp
subb
cmpsb
outsl
xchg
movsl
cmp
loope
mov
jnp
out
xor
or
adc
arpl
hlt
popf
and
adc
adc
imul
cwtl
add
mov
fwait
sarb
aad
pushf
sbb
sbb
int
nop
fldenv
les
icebp
cld
test
cmpsl
lock
sub
flds
hlt
dec
add
cld
push
push
push
mov
mov
sbb
mov
dec
inc
ja
mov
repnz
fstl
jmp
scas
repnz
add
inc
add
xchg
cmp
cli
xor
sub
push
mov
or
mov
jbe
jmp
hlt
mov
add
pop
xlat
mov
stc
mov
lock
pop
cmp
xor
mov
sti
out
test
inc
divb
push
cltd
cmp
pusha
lret
bnd
ja
push
jmp
movsl
movsl
mov
pushf
in
scas
cmc
aad
js
add
jle
add
lcall
scas
bnd
call
dec
gs
cld
out
aaa
add
xchg
push
jmp
lret
mov
enter
mov
pop
movsb
dec
mov
cmp
icebp
pop
femms
test
daa
pop
cmp
push
xor
xor
and
xor
ficompl
jge
stos
mov
ret
jl
jo
cmp
mov
and
sbb
fstps
jae
imul
push
ret
cmp
mov
cs
mov
iret
pop
jmp
sbb
push
mov
mov
adc
sbb
or
cmpsb
sbb
adc
pop
jno
jmp
call
sbbb
out
imul
gs
inc
push
jo
mov
sarl
push
sahf
pop
mov
aad
in
movsl
rcl
mov
int
filds
pop
icebp
fisttpl
nop
mov
movsb
nop
sub
bound
scas
sub
jmp
mov
adc
sub
out
mov
ja
in
out
adc
int3
mov
movsb
int
int3
jne
mov
xor
stc
xor
mov
jno
push
mov
cmp
inc
out
jnp
cmpsb
imul
xchg
pop
or
cmp
jo
xor
ficoms
lret
hlt
ja
jl
push
pop
das
inc
fmull
mov
pop
jae
scas
adc
pop
cmpsl
adc
cli
mov
scas
add
loopne
mov
stc
xor
js
xchg
sbb
mov
or
mov
ja
and
js
fldl
mov
add
xor
pop
add
push
dec
das
push
dec
fildll
inc
add
fsubp
imul
subb
nop
aaa
sahf
lods
cmp
pushf
cmp
push
xchg
int
out
cmpsl
out
cmc
add
pop
sahf
in
ss
dec
sub
adc
lds
mov
cmp
out
add
or
in
fsubs
or
xchg
out
add
mov
cmp
dec
adc
fsubs
mov
enter
jb
sbb
jmp
mov
mov
outsl
fistps
scas
test
fnstcw
pop
adc
add
cmc
push
sbb
fistl
popa
push
test
pusha
gs
popa
cmpsl
fucomip
dec
lock
lcall
pop
int
inc
mov
or
pop
mov
xchg
jae
pop
push
ja
mov
adc
inc
das
aam
lds
int
add
rorl
mov
sbb
xor
sbb
pop
and
aaa
pop
inc
stc
es
clc
xor
sti
dec
das
and
push
jmp
aaa
movsb
in
lret
xor
push
ljmp
or
das
sbb
imul
cmp
test
scas
jmp
imul
pushf
jl
iret
cmp
lahf
pushf
pop
cwtl
shl
xchg
add
aad
cli
les
cltd
nop
xor
fxch
clc
icebp
cmpsb
popf
mov
push
xchg
aas
mov
iret
imul
cltd
std
rep
push
pop
xchg
pop
std
cmc
rcrl
cmp
lcall
sbb
fs
mov
xchg
js
cmp
mov
jo
stos
scas
inc
popa
ljmp
pop
jl
mov
subl
cmp
pop
pop
lahf
mov
pop
mov
cmp
lods
rolb
and
xchg
xchg
repz
jne
mov
mov
jo
std
adc
ret
cld
lods
pop
data16
cmp
jbe
sbb
gs
rorl
pop
pusha
sbb
pop
xchg
lret
ret
cmp
jmp
xchg
pushf
ds
jge
inc
in
inc
or
je
stos
mov
mov
sbb
mov
xor
mov
mov
outsb
xchg
stc
sub
xor
popf
hlt
sub
mov
cmp
ss
mov
add
jmp
cmp
ret
insl
xor
xchg
push
push
fsubl
ret
mov
fistps
fucom
fldcw
icebp
xchg
into
int3
adc
out
dec
jecxz
jl
int3
dec
mov
mov
mov
sbb
mov
push
imul
adc
in
nop
xchg
mov
clc
outsb
out
pop
ret
std
in
inc
movaps
stos
in
sbb
std
mov
sbb
rcl
mov
dec
das
mov
int
cmpxchg
stc
pop
mov
xchg
mov
nop
push
mov
dec
fsubs
pop
jecxz
mov
push
add
mov
mov
cwtl
add
adc
int
lcall
fs
popf
mov
push
jge
andb
imul
add
cld
pop
mov
popf
js
dec
rol
inc
mov
push
add
fmul
clc
loop
in
call
sbb
sahf
push
jge
push
or
add
xor
push
mov
lds
xchg
and
xchg
sub
mov
int3
fnstsw
fwait
lahf
aad
xor
and
pusha
ds
sbb
add
sub
test
popa
add
les
test
xchg
cmc
in
test
movsl
inc
loop
mov
out
add
inc
pusha
movsb
movsl
stos
dec
je
aam
pop
push
in
add
in
in
call
adc
std
jecxz
shll
add
lret
ret
and
lahf
icebp
push
lock
or
or
popa
leave
lea
stos
inc
jmp
sbb
or
sbb
icebp
and
xchg
scas
push
ret
mov
jmp
into
xor
add
lds
mov
add
dec
sbb
mov
dec
movsl
pop
clc
cmp
sbb
or
pop
repnz
stos
cmpsl
lret
push
push
xor
cmc
dec
insb
idiv
stos
sub
out
dec
mov
movsl
fdivl
fs
inc
sub
dec
sbb
dec
leave
jmp
inc
mov
cmpsb
and
mov
in
sbb
movsb
std
fistl
in
mov
fadd
sti
fimull
lods
stc
xchg
pusha
arpl
sub
pop
jl
popf
pop
xlat
sbb
pop
int3
or
cmp
mov
lret
jae
adc
add
mov
faddl
xor
loope
or
subb
add
fsubrl
or
neg
fistps
movsl
bound
loope
pop
loopne
fistps
adc
push
or
lcall
add
leave
icebp
rcr
sar
pop
int
shlb
xchg
push
fisubl
fnstcw
mov
in
jmp
fdivrs
lods
add
stc
jge
aas
movsl
xchg
adc
push
mov
fistps
into
fidivs
or
test
add
push
inc
movsb
adc
sbb
xchg
ret
or
mov
inc
mov
fdivl
cmp
and
movsb
xor
int
xchg
cld
fiaddl
xchg
fs
add
or
loopne
int
pop
cltd
std
or
xchg
or
add
daa
adc
adc
xchg
lret
test
jb
iret
shll
imul
and
mov
xchg
insl
fisubl
xor
mov
add
push
add
pop
xchg
sbb
movsl
in
rol
jo
lcall
push
pushf
adc
cmp
cwtl
mov
xchg
aam
in
in
jmp
fsts
cmp
repnz
shl
push
and
fs
nop
in
sbb
roll
push
fstps
push
mov
cld
mov
hlt
clc
fldl
icebp
mov
imul
mov
out
fucomp
xchg
hlt
jbe
adc
nop
orl
mov
jns
jecxz
call
jmp
sbb
mov
vcvttpd2dqx
inc
loopne
lret
pop
loop
jle
bound
lods
xchg
cmpsl
movsl
cmp
mov
ret
mov
add
xor
pusha
adc
xor
cmpsb
jmp
js
xchg
out
cmpsl
jae
mov
push
fs
lods
adc
inc
jne
pop
jp
xchg
shlb
xor
fs
xor
call
stc
adc
lahf
cli
mov
in
lret
mov
cmp
dec
xor
insl
pop
or
lret
jno
sbb
xor
jmp
loopne
cmp
sbb
cs
std
mov
jle
add
jb
xchg
jge
cmc
add
jecxz
and
jne
mov
mov
adc
fmull
jecxz
out
inc
pop
xor
pop
loopne
sahf
fdivrl
mov
mov
lds
jbe
pushf
mov
inc
cli
push
add
mov
sbb
dec
mov
scas
pop
pop
gs
xchg
push
jns
pusha
xlat
and
movsb
clc
outsb
jge
pusha
pushf
cmpb
lock
mov
push
test
test
dec
dec
sarl
sbb
pop
mov
push
hlt
jae
cli
ret
out
mov
inc
lcall
in
pusha
jb
mov
mov
adc
repnz
pusha
push
mov
test
xorb
sub
ret
push
loop
xchg
rorb
cmpsb
sub
pusha
bound
sub
sti
test
aad
dec
cmpsl
outsl
and
xchg
push
cmc
xchg
inc
inc
sbb
pop
lods
addl
xchg
adc
push
pop
fs
jle
mov
leave
sub
pop
jecxz
scas
daa
test
jmp
into
sahf
cmc
inc
dec
push
and
sbbl
cmp
in
in
nop
leave
mov
cmp
mov
rcrl
aaa
mov
imul
shrl
push
pop
push
sub
cld
imul
insl
mov
inc
jg
pop
test
cmp
add
dec
fs
cwtl
jl
in
arpl
insb
mov
cmp
movsl
lods
jle
sbb
pop
sub
or
loopne
ret
sarl
gs
into
cmp
and
cmpsb
fidivrl
pop
adc
out
mov
inc
gs
adc
pop
fcoms
movsb
adc
jmp
cmpsb
bound
push
mull
cs
popa
ret
clc
hlt
pusha
sbb
add
iret
xor
out
or
inc
jmp
dec
mov
lret
mov
lock
bound
scas
inc
iret
loope
xchg
add
in
lea
shr
shrl
xor
push
dec
push
dec
cmpsb
xchg
push
jbe
std
testl
test
dec
mov
mov
movsl
bnd
scas
sub
cmp
cmc
cmp
push
adc
fwait
jae
pop
ret
push
test
xor
icebp
movsl
outsl
fistps
mov
lcall
mov
decb
sbb
ss
add
pop
sub
push
pop
addb
fs
fucomip
popf
mov
cmc
aad
in
pop
xchg
fldpi
lods
push
jp
pop
xchg
inc
cmp
xor
cmpl
mov
dec
ror
push
mov
cmp
fwait
inc
jecxz
call
pop
push
fsts
and
shl
pop
or
int
icebp
or
fcoml
lret
jecxz
in
push
frstor
push
imul
add
in
sbb
cltd
sbbl
pop
push
stc
mov
jecxz
pop
mov
inc
popa
cmpsb
into
out
sub
and
pop
fwait
jmp
orl
mov
cmc
mov
mov
xchg
gs
repnz
loope
add
add
pop
adc
mov
cmp
xchg
xor
in
xchg
daa
jns
incb
adc
mov
mov
lods
repnz
imul
dec
mov
push
mov
pop
lds
repz
pusha
out
fisubrl
cld
cmpsl
xchg
cld
dec
dec
std
scas
inc
jnp
addr16
sbb
mov
add
mov
loope
and
jno
jae
mov
ret
daa
xchg
sbb
sarb
mov
add
stc
arpl
xchg
ss
mov
add
in
loop
xlat
sahf
ja
mov
cmc
ljmp
pop
adc
ja
sar
inc
jbe
sub
mov
jecxz
jne
pushf
daa
mov
or
pop
aam
mov
inc
and
add
pop
cmpsl
xchg
jno
fwait
icebp
sti
out
jecxz
fistl
add
in
in
fildl
pop
xor
in
aaa
push
test
add
loope
movsb
popa
dec
mov
lods
ljmp
test
fnstcw
dec
push
mov
xor
xchg
pop
jmp
dec
push
mov
or
or
inc
add
push
jmp
inc
scas
dec
pushf
and
mov
and
into
push
adc
xchg
insb
cmc
mov
add
aam
jo
mov
fldz
bound
test
loopne
mov
int
lret
movsb
lds
movsb
cld
loope
clc
cmp
xor
das
pop
or
fildl
and
icebp
sar
fwait
mov
jbe
xor
and
mov
lret
pop
cmp
lods
xchg
ret
mov
cli
push
shrb
and
add
test
fcompl
or
jp
mov
call
pusha
stos
in
lods
sub
leave
in
shrb
pop
decl
push
xchg
or
sbb
mov
dec
mov
les
das
pop
hlt
loopne
push
fs
or
fists
repnz
outsl
imul
mov
xchg
inc
fldl
inc
inc
fsubrl
mov
fnstenv
lock
movsl
imul
and
jne
sbb
mov
pop
in
pop
adc
push
mull
pmulhuw
shl
sub
mov
je
cmc
mov
test
nop
in
mov
pusha
neg
xor
shl
mov
jg
leave
in
in
mov
push
fdecstp
adc
mov
push
pop
dec
dec
or
jo
lcall
bound
stos
test
daa
xor
xor
mov
xor
add
sbb
ss
cmp
in
inc
fstl
int
rorl
dec
pop
mov
jle
mov
sub
mov
xchg
pop
mov
mov
cmp
in
loope
push
or
aas
jnp
dec
fisubs
xchg
fdivs
pushf
xchg
pop
dec
rcr
scas
mov
or
adc
xchg
jo
gs
and
mov
sub
mov
rcll
pop
xlat
cld
jle
test
into
sub
ret
in
xor
sub
sub
loopne
xorl
int3
xor
sub
xchg
or
lods
mov
dec
adc
and
out
and
call
xchg
and
or
dec
pop
negb
cmpb
cmp
loop
push
pop
or
addb
std
cmc
xor
ss
arpl
aaa
outsb
faddl
fs
or
pop
inc
loope
test
int3
mov
xor
adc
aaa
pop
imul
cwtl
ja
xor
xchg
lods
add
jnp
adc
ljmp
pusha
add
fs
inc
loope
in
pop
xchg
in
inc
sbb
cmc
mov
xchg
mov
mov
popf
lcall
rcr
jno
fwait
pusha
push
cld
pop
jb
into
jmp
push
pop
std
and
pop
mov
arpl
cmp
test
pop
bnd
dec
imul
inc
sbb
leave
ret
mov
ja
adc
or
jle
ja
fstps
inc
pop
add
sti
pop
sbb
shrl
cmp
xchg
filds
fs
push
inc
xor
insb
dec
popf
jbe
jno
inc
arpl
sbb
cmpsl
xlat
sub
sbb
ljmp
insl
in
cs
adc
inc
sub
test
pop
popa
mov
mov
mov
adc
into
jns
xchg
adc
adc
mov
xor
idivl
mov
enter
lahf
xor
repnz
es
arpl
lret
cmpsb
test
arpl
ss
sub
shl
leave
lret
call
mov
sub
jmp
mov
jg
and
sbb
pushf
push
inc
inc
push
sarb
push
out
lcall
test
jbe
pop
sub
movsb
add
lahf
sbbl
fstl
jns
jae
hlt
xchg
xchg
and
or
push
mov
nop
sub
mov
mov
cmp
jns
mov
hlt
divl
sub
jae
std
iret
dec
mov
jnp
push
aaa
jmp
mov
pop
inc
movsl
adc
fistpl
into
stos
inc
fisubl
dec
in
xchg
jmp
sbb
lea
pop
cmp
sub
ffreep
gs
inc
hlt
aaa
and
leave
lret
stc
movsl
xchg
inc
mov
out
in
jmp
fs
inc
or
sbb
cli
stos
cmp
sub
ljmp
icebp
add
mov
pop
nop
inc
mov
xchg
pop
int3
fidivrl
lods
icebp
pop
icebp
loope
lea
add
fwait
inc
aam
nop
jmp
mov
aam
aam
std
popf
sti
or
aas
hlt
jne
cmp
pop
lods
testl
sub
pushf
or
push
data16
push
inc
mov
subb
dec
push
cmp
inc
lcall
add
jb
scas
sbb
testl
test
dec
adc
pop
lahf
jge
push
dec
mov
xor
iret
test
mov
sbb
add
mov
out
sbb
fs
xlat
test
mov
filds
add
popa
pop
sbb
loope
lahf
inc
js
add
std
dec
or
dec
pushf
jle
cmp
sbb
jbe
xor
sub
jle
mov
mov
repz
dec
add
fistps
adc
dec
xchg
stos
loop
outsl
cmpsl
push
jge
call
fiaddl
aaa
sbb
cli
mov
aaa
inc
adc
dec
jecxz
sahf
sub
in
lret
test
sub
dec
cmp
inc
icebp
add
mov
cmp
push
adc
xor
jmp
repz
nop
xchg
xchg
push
ficoml
fldl
inc
mov
testl
cmpsl
add
decb
cmp
sbb
popf
test
mov
mov
xchg
xchg
aas
sbb
add
or
cmp
test
push
jge
leave
fmuls
mov
movsl
bswap
js
xchg
jmp
jle
mov
std
xchg
sbb
ret
mov
jno
xchg
in
cmp
push
repz
cs
mov
lea
push
fidivl
inc
lret
pop
in
dec
mov
inc
and
fwait
mov
dec
push
popa
mov
das
pusha
pop
fs
repnz
call
movl
aam
mov
add
jns
jno
je
aad
insl
ret
cli
rclb
push
ljmp
and
xchg
ljmp
jecxz
cli
imul
test
push
into
lret
jnp
int3
mov
jp
mov
ret
mov
mov
in
andl
pop
mov
adc
ret
jb
jmp
jge
mov
push
loop
sub
aad
iret
and
ret
add
push
lahf
into
mov
dec
cmp
push
fnstenv
fisttpl
cmc
stos
icebp
pop
sbb
leave
jge
mov
cwtl
mov
enter
jno
cmp
cltd
rorb
negl
outsb
mov
test
sub
movsb
sub
ret
lea
loopne
out
mov
xchg
shll
and
xchg
das
xor
xchg
fcos
mov
sub
incb
mulb
adc
inc
aad
sbb
and
iret
dec
mov
fimull
ss
gs
inc
xchg
sub
mov
add
add
push
or
push
jb
fwait
mov
mov
out
loopne
aaa
cmp
aaa
imull
jle
scas
push
mov
in
scas
pop
int
xor
decb
lret
dec
adc
mov
push
mov
jbe
imul
mov
mov
add
enter
add
mov
jns
ret
ror
sbb
clc
xor
repnz
int3
mov
movsb
roll
sub
mov
popa
add
aas
mov
out
in
arpl
rorb
subl
pop
cmc
jns
sub
push
and
xor
dec
cmp
faddl
aam
iret
mov
dec
and
hlt
in
mov
pop
xor
ret
jg
setae
mov
dec
sub
mov
mov
pop
out
dec
fsubl
int
adc
push
mov
cmpsb
sub
in
in
enter
and
inc
xchg
lret
inc
js
xchg
decb
gs
cmc
cmpsb
pushf
into
jmp
mov
push
push
inc
lret
out
sub
xchg
imul
hlt
sarb
cltd
aas
hlt
out
cwtl
shl
adc
cmp
or
fists
cmp
insb
mov
and
cmpl
pusha
daa
imul
xor
mov
cmp
add
pusha
jmp
inc
dec
iret
and
hlt
inc
lds
jge
sbb
popf
sti
orl
sbb
fstpt
add
pusha
lret
mov
mov
add
fcoml
dec
dec
dec
cltd
jae
shl
fidivrl
js
mov
mov
pop
cmp
addb
add
mov
in
dec
add
lret
icebp
hlt
mov
addb
adc
sbb
in
add
movsl
mov
xlat
loope
jecxz
jmp
pop
out
hlt
nop
mov
add
pop
pop
mov
or
or
adc
dec
mov
pop
fisttpll
adc
jnp
ss
sub
pop
mov
mov
push
mov
adc
pop
int
fnsave
repnz
add
bound
add
xchg
mov
out
cmp
ficompl
cs
mov
and
insb
push
leave
out
push
repnz
or
pop
fs
lods
lahf
js
leave
popa
mov
clc
cmp
daa
xchg
movsl
arpl
push
cwtl
and
insl
xchg
mov
imul
pop
pop
push
mov
rcrl
mov
pop
jmp
inc
dec
aad
pop
xor
add
lret
shll
fstl
xchg
int
je
jns
jae
and
jb
imul
cmpsl
push
mov
das
sub
xor
inc
dec
jo
jbe
insl
fs
xchg
loope
adc
fnstenv
ret
push
enter
xor
aas
mov
sbb
inc
or
and
ss
scas
test
and
mov
push
roll
in
and
inc
push
pop
bound
iret
xor
xchg
in
mov
dec
aad
cmp
fucomip
sub
adc
push
movsl
dec
pop
xor
mov
dec
std
ja
adc
adc
mov
fcomps
arpl
ror
dec
mov
lret
fs
dec
scas
movsl
add
fst
cmp
test
pop
or
jge
pop
inc
ret
xchg
cmc
pop
sbb
xor
add
sub
clc
mov
xor
ret
add
mov
mov
or
jbe
cmp
or
cs
xchg
dec
dec
xor
inc
push
jae
jge
xchg
outsb
sbb
pop
incb
loop
jg
xchg
inc
inc
int3
les
or
fidivs
add
mov
add
stc
bound
fiadds
orb
lods
jl
push
test
sbb
cmp
aad
xchg
add
fucomip
lret
sbbl
das
pop
lea
sub
and
mov
push
jne
outsl
dec
mov
mov
push
pop
mov
stos
mov
mov
gs
xchg
clc
pop
scas
pop
jnp
sbb
mov
mov
ljmp
add
sub
lahf
int
sub
adc
stos
add
pusha
mov
mov
mov
xor
test
nop
jmp
ds
daa
lahf
cli
lods
arpl
mov
shlb
add
xor
test
cmp
outsl
aaa
dec
inc
cs
add
cli
push
ficoms
in
rorl
outsl
movsb
mov
add
cltd
sarl
sbb
fildl
pop
lret
mov
mov
mov
cmp
ljmp
pop
and
dec
stc
mov
shll
xchg
cmp
mov
into
imul
or
cli
aad
or
xchg
xchg
lds
and
lret
mov
das
sub
fdivr
leave
push
adc
sar
jno
xchg
loope
pop
fbstp
popa
arpl
divb
jo
xchg
push
add
and
gs
fsubr
lahf
fcoml
push
mov
lods
call
add
shlb
push
hlt
pop
sahf
adc
mov
and
xchg
dec
jno
xchg
inc
filds
outsb
shl
cmp
jo
aaa
aam
stos
fs
fbld
add
lds
fstps
test
and
push
mov
adcl
call
dec
mov
mov
mov
daa
cmp
mov
xor
cwtl
icebp
jb
dec
inc
dec
cmp
dec
test
xchg
cmpsb
inc
sbb
call
out
add
mov
js
mov
rclb
pop
or
mov
cmp
hlt
lret
mov
push
mov
das
out
xchg
mov
jle
inc
or
jg
jle
cmpsl
fldcw
sub
lahf
push
icebp
outsb
popf
sub
in
scas
xor
sub
xchg
lret
cld
pop
cmp
movsl
cmpsb
jno
lock
lea
mov
lret
inc
sbb
scas
lahf
fld
inc
ljmp
inc
call
mov
imul
out
lret
cs
scas
jo
ret
and
in
repnz
hlt
fimull
xchg
push
and
push
jg
jnp
sub
ss
mov
inc
add
sbb
pop
test
jb
push
or
and
jle
xchg
or
xchg
stc
cmp
cmpsl
add
stc
std
cs
in
dec
loope
push
sub
lret
jmp
push
inc
fsubl
mov
ljmp
mov
movsl
cmp
inc
movups
mov
popf
rorl
or
in
sbb
or
xchg
dec
orl
mov
and
mov
pop
mov
int
sbb
xchg
cmpsl
pop
fs
in
sbb
adc
fs
xlat
out
mov
icebp
icebp
rep
cmp
fsubs
sub
in
mov
mov
shl
jnp
cld
sub
sbb
sbb
inc
cmp
incl
mov
xor
std
psubsw
mov
in
loopne
adc
movsl
mov
mov
insl
loopne
xchg
pushf
prefetcht2
mov
mov
xchg
xchg
pop
add
dec
rcll
pop
and
ljmp
sub
pushf
loope
pop
sti
jmp
cwtl
mov
mul
loope
ret
fnsave
mov
sub
pop
popf
and
mov
mov
cmp
fdivrl
cld
arpl
add
cmc
insl
iret
mov
xor
cmc
jle
test
es
inc
sahf
popa
xlat
pop
roll
inc
popf
push
mov
sub
icebp
and
insl
sub
cmpsb
repz
add
aaa
pop
movsb
xchg
sbb
dec
sub
mov
mov
lock
cmp
rcl
push
clc
or
mov
jl
shll
or
fisubrl
cltd
push
xchg
and
sarb
push
aam
sbbb
mov
adc
loope
out
call
xchg
mov
sbb
and
dec
mov
inc
mov
sub
xor
push
popf
mov
jne
push
insb
out
or
repz
fwait
jmp
and
or
inc
aas
mov
popa
pop
jp
lea
daa
pop
lods
popa
lods
cmp
cmp
or
mov
or
mov
arpl
clc
add
rcr
push
mov
imul
fdivrs
call
jnp
jns
mov
jbe
fidivrl
and
add
sub
sbb
pop
fisttpl
jns
mov
jne
flds
or
icebp
cmpb
call
pop
xchg
mov
outsb
push
mov
leave
dec
arpl
mov
stos
cmc
pop
test
or
outsl
pop
rolb
push
jno
lret
cmp
addr16
xor
mov
imul
push
mov
pusha
sbbl
and
pop
mov
add
and
mov
insl
jg
filds
add
sub
fcoml
addr16
das
lahf
xchg
icebp
mov
cld
cmp
shrl
pushf
sti
ds
fwait
mov
push
sub
xchg
add
in
shl
stc
push
das
and
cwtl
xor
fs
leave
testl
das
sbbl
mov
outsb
lods
leave
push
lahf
push
imul
add
inc
in
adc
adc
jnp
push
dec
fstps
mov
or
mov
ret
into
clc
sub
lock
jbe
mov
scas
in
jno
xor
fidivrl
cli
sbb
sbb
aam
gs
adc
push
out
and
mov
jae
jnp
gs
ret
les
mov
pop
icebp
sub
in
cmp
stc
mov
imul
ljmp
add
dec
out
leave
pop
pop
mov
jp
pop
mov
stos
scas
mov
or
push
loop
aaa
sbb
mov
jg
mov
popa
inc
push
pop
insb
pop
jno
jecxz
imul
push
dec
xchg
aad
test
in
inc
out
je
fwait
insb
mov
add
and
mov
iret
popa
icebp
xchg
sbbl
test
mov
movsl
divl
jg
xor
fwait
inc
jno
xor
clc
inc
ret
es
lcall
xchg
lods
or
and
lods
fucomip
mov
mov
std
jne
push
clc
into
push
sahf
jo
sbb
dec
sub
cli
mov
loopne
lahf
cmp
add
pusha
inc
xchg
cli
cmp
lock
cmp
push
sarb
jno
dec
or
in
jnp
mov
call
jne
mov
lret
xchg
dec
xlat
lret
or
fucom
cmp
mov
xlat
cwtl
push
cmc
rorb
cmp
in
mov
jmp
bswap
jecxz
adc
repnz
movsl
jbe
lea
popf
xor
push
pop
ret
pop
pop
iret
or
mov
cmp
or
push
maxps
lret
repnz
xchg
mov
pop
xchg
push
xchg
push
sub
pop
mov
xor
xchg
inc
dec
and
in
mov
dec
mov
jmp
sub
pop
stc
lock
orb
rolb
cmp
cmpsb
add
push
repz
sti
hlt
aam
adc
add
and
frstor
jns
adc
add
lret
fistps
aam
xlat
rol
out
sub
cmp
xor
sbb
cmp
mov
inc
stc
dec
testb
xor
call
mov
sti
push
popf
xor
xchg
sbb
iret
test
xor
stos
fdivl
scas
in
fs
popa
mov
dec
rcrb
fs
lret
xor
ficomps
xor
mov
mov
cmc
out
inc
xchg
jmp
fcmovnu
mov
nop
mov
xor
xor
mov
leave
roll
pop
in
sti
jmp
mov
inc
jnp
push
sbb
inc
aaa
fcoms
lods
cmc
cmpsl
sbb
fs
nop
sub
aam
rcl
add
mov
int
fdivrs
mov
int3
and
pop
lcall
insb
mov
add
imul
ljmp
xchg
fldenv
xchg
pop
in
pop
inc
and
cmp
cmp
add
xlat
fnsetpm(287
jg
in
fidivl
jb
outsl
lods
xchg
cmp
xchg
ret
mov
das
aad
lea
frstor
testb
or
jno
jmp
mov
pop
cmp
or
cmpsl
xchg
mov
cmp
or
lret
sub
out
loop
or
loopne
dec
int3
dec
xor
sub
in
outsb
out
clc
rsqrtps
into
xchg
xor
dec
sti
fwait
jge
out
lret
add
or
lret
je
shrl
pusha
inc
mov
mov
shll
js
lret
movsl
jmp
movsb
fdivp
iret
fwait
dec
ror
cmp
jbe
mul
lock
fucomip
ficomps
popa
jns
lret
loopne
fwait
out
add
push
test
xor
jnp
in
mov
pop
ror
test
xchg
dec
loopne
sbb
iret
xor
sarl
loopne
xlat
fidivrl
sbb
faddl
out
shl
jns
sbb
sub
aam
rcrb
sbb
mov
sbb
lahf
movsb
out
pushf
shlb
fsubl
push
and
xor
js
cmc
sbb
mov
cmpsl
jae
and
popf
test
aas
imul
icebp
sub
in
int
mov
or
fs
rol
inc
mov
std
aam
cmp
pop
or
loop
mov
adc
xchg
adc
imul
lea
cmp
int3
fs
or
into
hlt
xchg
insl
sub
in
test
push
outsl
add
sub
pusha
add
cmp
stc
fbld
inc
clc
pop
out
pushf
sbb
xchg
imul
pop
mov
inc
mov
pop
popf
and
dec
add
push
mov
lret
sub
jle
iret
fisubrl
or
cld
icebp
or
pop
xchg
push
pop
mov
ret
movsl
push
in
fldenv
rep
hlt
sub
jno
dec
xor
jge
jg
dec
dec
aaa
stos
fs
xchg
dec
or
imul
fists
adc
fstpl
lahf
add
ds
push
jmp
int3
inc
sbb
popa
fimuls
fimuls
in
dec
cmc
xor
push
js
mov
inc
jb
cmc
pusha
or
xor
repnz
scas
sbb
loope
adc
sub
iret
hlt
jg
mov
pop
popa
popf
fldcw
push
jae
push
xchg
cmpsb
ss
int
negl
mov
js
daa
and
and
add
loope
jno
sub
or
xor
pop
mov
jb
loope
inc
cpuid
or
and
pop
push
arpl
pusha
mov
lahf
dec
pop
into
daa
test
aaa
mov
mov
lods
mov
ret
or
lret
ljmp
mov
daa
mov
bound
in
out
ficoms
add
mov
push
mov
hlt
and
pusha
jne
scas
cmc
lret
mov
pusha
push
lret
push
test
xor
dec
jo
mov
scas
lods
bnd
sub
mov
shlb
inc
scas
push
mov
hlt
cltd
xor
movsl
movsl
jmp
daa
push
movsb
addr16
xor
inc
adc
divl
add
xchg
dec
outsb
mov
xor
fs
lret
cmp
mov
adc
pushf
test
mov
fcmovb
cmp
push
dec
inc
loopne
jecxz
mov
add
push
adc
sbb
dec
or
rcr
scas
daa
mov
test
cmpsb
mov
movsb
cmp
jno
cmpsl
arpl
jp
jb
gs
inc
data16
push
insl
add
call
gs
aad
std
sbb
iret
xchg
pop
xchg
imul
in
push
scas
xor
movsl
sub
pop
push
jnp
movsl
arpl
xlat
in
sub
dec
stos
pop
xchg
push
dec
sbb
insb
bound
shl
pop
and
cmpsb
mov
mov
xchg
cltd
mov
movhps
pop
adc
add
add
and
cmp
or
cmp
jne
mov
inc
iret
aad
sub
jg
jmp
jbe
add
or
dec
stc
or
inc
add
or
ljmp
push
loope
or
loopne
adc
cmp
mov
xlat
stc
mov
insb
cltd
push
rcr
xchg
adc
mov
and
adc
add
sub
ss
add
jge
pop
loop
leave
clc
mov
movsl
and
mov
rcl
mov
pop
push
and
xor
jbe
out
pop
call
xor
js
das
xchg
sub
push
mov
leave
nop
iret
adc
stos
frstor
lock
ss
mov
adc
lods
inc
jg
mov
jo
lahf
add
mov
pop
fldcw
cltd
xchg
pop
xchg
inc
repz
dec
movsl
fstpl
cwtl
add
cmp
aad
xchg
orl
imul
fs
adc
jge
xor
fldenv
mov
pop
mul
mov
mov
les
xchg
fists
xchg
out
jp
fisubl
sub
add
in
cltd
xchg
orb
mov
and
jecxz
mov
pop
ficoms
jecxz
in
test
aad
adc
add
mov
cmp
icebp
shl
movl
test
fwait
sti
add
adc
test
cmp
int3
test
outsb
sub
clc
jle
in
mov
inc
fistpll
std
into
inc
sub
inc
movsl
push
add
ljmp
mov
push
test
rorb
fsub
imul
std
mov
and
dec
test
in
leave
mov
sub
fadds
ds
daa
lret
lret
lcall
or
inc
add
dec
aad
cmp
int
cmp
push
out
iret
imul
mov
iret
inc
sahf
xlat
mov
jbe
and
in
das
insb
sub
jmp
cmpsb
sub
andb
or
push
fnstcw
adc
xchg
cs
scas
into
pushf
cmp
pop
inc
pushf
xchg
loope
bound
fdivrp
push
pop
mov
inc
ja
out
lods
adc
call
mov
or
push
divl
cmp
push
cltd
aam
scas
and
fcmovnbe
shl
dec
adc
rcrl
pop
mov
ret
stc
cmovbe
loopne
mov
mov
add
and
xor
jnp
cmp
sbb
in
adc
cmp
stos
popf
sub
mov
bound
push
add
movsl
fpatan
and
mov
jae
pop
fwait
inc
and
loopne
lcall
cmp
test
pop
bound
mov
fidivrl
and
lret
pop
arpl
movsb
push
xor
lods
sub
xlat
std
enter
xor
xchg
lea
mov
fwait
jmp
orl
scas
out
xor
sarb
mov
pop
jb
loope
sub
inc
mov
out
popf
mov
fstpl
pop
pop
addb
fwait
repz
inc
int
fimull
out
jne
dec
fiaddl
stos
orb
push
push
movsb
fimull
pop
fistl
daa
mov
mov
inc
sbb
fstpl
xor
dec
and
mov
jbe
lret
loop
cli
add
test
push
outsl
scas
aam
xchg
or
sbb
imul
mov
cmpsb
call
xor
in
hlt
pop
or
test
adc
add
in
imul
fisubl
add
fcoml
popa
and
out
movsb
pop
mov
hlt
sarl
mov
or
cltd
mov
cmp
push
leave
ret
in
jle
leave
mov
xchg
daa
ret
rcrb
incl
jmp
mov
jmp
pop
jecxz
test
and
xchg
cmp
mov
add
mov
lret
into
movsl
xlat
cwtl
cmp
hlt
mov
scas
push
pop
loop
add
push
dec
aaa
nop
fildll
imull
stc
inc
cmp
inc
cltd
jne
testb
filds
inc
pop
inc
outsb
lret
dec
lahf
sbb
fwait
xchg
add
mov
rorl
mov
ffree
dec
cltd
ds
pusha
fstps
sbb
movsl
imul
fistpll
aad
dec
aas
movsb
fs
add
jb
add
add
or
sar
jnp
inc
add
jp
sti
mov
adc
and
outsb
dec
mov
push
push
insb
ljmp
jno
fldcw
jne
cs
sahf
pop
cli
sbb
scas
mov
je
fs
imul
shll
inc
sahf
xchg
push
les
jne
test
ficompl
jecxz
xchg
lock
sub
mov
mov
fdivrl
xchg
hlt
ljmp
mov
int3
add
mov
and
daa
nop
mov
movsl
pop
int3
and
sbb
fnsave
or
xor
pushf
sub
jae
or
xlat
iret
aaa
sbb
mov
jb
imul
or
cmpl
xchg
movsl
cmp
push
and
jecxz
decb
dec
mov
aad
fs
stc
and
sub
int
push
in
pop
repz
in
dec
mov
call
pop
pop
mov
fisttpll
mov
cs
orl
pop
push
hlt
aam
nop
das
pop
test
inc
jmp
xchg
and
or
rcr
adc
mov
push
xchg
inc
xlat
lock
rorl
mov
xchg
sbb
ffree
inc
stc
dec
in
popf
cwtl
adc
out
cmp
loop
leave
les
xor
pop
enter
push
ret
cmp
lds
fwait
int3
loop
out
dec
push
mov
aad
jo
lods
adc
roll
shrl
aam
in
test
and
lock
sub
cmp
mov
outsl
ljmp
in
adc
add
fldenv
cmp
xor
pop
push
or
jecxz
pushf
fpatan
xor
mov
pop
imul
sub
ja
js
popf
fldl
in
push
gs
movsl
cmp
mov
sub
gs
dec
and
je
pop
dec
xchg
repz
test
xchg
gs
insl
mov
inc
xchg
aas
sti
movsb
mov
aaa
push
xchg
cmc
dec
repnz
sahf
ja
sub
sub
add
jb
mov
push
xor
xchg
into
dec
sub
aaa
xchg
lock
sti
fstpt
jecxz
sbb
add
pop
repz
pusha
jne
fisttpll
sub
inc
dec
adcl
test
lea
pmaddwd
fisubrl
xchg
adc
movsl
aad
dec
cmp
lods
cs
push
sbb
cmp
mov
cmc
add
add
inc
lock
and
mov
leave
pop
lret
cs
mov
leave
xchg
xchg
xchg
mov
sub
movsl
push
lcall
cmpsl
xchg
mov
popa
push
pop
mov
aad
pushf
fiaddl
in
or
add
cmpsb
dec
dec
xor
js
gs
xchg
movsl
ret
repnz
aad
mov
jo
push
and
xlat
inc
js
jg
fisttpll
inc
decl
push
das
jp
inc
cli
jg
mov
mov
stc
mov
out
ret
jmp
dec
daa
mov
shl
cmp
popf
push
mov
or
cmc
shl
loope
cwtl
fsts
fcomps
fimull
inc
nop
loopne
int
sub
stos
mov
insl
lret
pop
pushf
jno
fwait
pushf
or
in
test
add
popa
std
mov
fldl
sub
rcll
cmp
loop
ret
push
dec
pop
insb
pop
jle
movntps
xchg
fs
in
cmp
jbe
fisttpll
out
mov
out
hlt
dec
adcl
jo
push
jns
lahf
cli
dec
rol
dec
push
fldcw
xchg
jmp
mov
xor
sub
jge
push
xchg
in
in
fcomp
xchg
pop
mov
push
int
mov
hlt
aaa
mov
mov
frstpm(287
cmp
cwtl
mov
push
sbb
sub
cmpsl
sbb
pop
and
mov
scas
push
push
daa
into
daa
ficompl
call
insb
test
xchg
in
pop
negl
add
repnz
mov
mov
lcall
sbb
xchg
inc
push
pop
jae
mov
xchg
test
outsl
std
or
sub
fdivrl
mov
ljmp
adc
add
out
pusha
push
push
cmpsl
xlat
ss
jo
jl
cmc
dec
lcall
xlat
cwtl
pop
mov
repnz
lds
mov
popf
mov
call
out
scas
xchg
mov
xor
jecxz
mov
adc
push
xchg
sub
push
lahf
hlt
popf
pop
xchg
inc
icebp
pop
sbb
inc
dec
mov
fimuls
ret
fildl
aam
popl
adc
add
fsub
push
dec
mov
jg
inc
sbb
stc
dec
inc
mov
add
pusha
icebp
pop
lods
mov
and
lcall
in
mov
loopne
xchg
or
fsts
lahf
sti
pop
outsb
lret
and
movsb
or
push
mov
adc
cmp
and
inc
mov
xchg
int
jno
inc
lcall
push
jle
lahf
inc
jmp
add
mov
inc
jae
in
outsb
mov
ljmp
fiadds
int3
mov
jecxz
call
inc
js
lret
pop
mov
or
and
cmc
sbb
sbb
scas
frstor
aas
rcr
mov
mov
lret
insl
iret
call
into
xor
jecxz
sub
add
or
adc
cmc
lea
jmp
or
aad
adc
cmp
mov
aaa
out
popa
mov
xor
in
mov
sbb
or
and
cli
pop
mov
out
inc
or
outsl
push
xor
aam
scas
rolb
stos
mov
xchg
pop
inc
pop
mov
test
mov
xchg
push
dec
pop
leave
dec
push
dec
movsl
xchg
outsb
test
or
in
push
fidivs
pop
pushf
aad
xor
out
ficomps
push
std
and
icebp
xor
outsb
inc
ss
lahf
call
xor
jmp
add
mov
mov
lahf
add
cwtl
cmp
decl
pusha
cmp
cmp
rcr
dec
lahf
cmpsl
xor
or
ds
shll
sbb
cmp
pop
sbb
cld
adc
and
inc
loop
xchg
adc
aam
icebp
mov
or
mov
pop
call
shl
xchg
std
sub
aaa
push
out
sti
cwtl
and
in
test
cld
out
adc
lret
ja
cmc
jns
add
push
dec
mov
decl
negl
call
roll
xchg
lcall
fs
fsubp
aad
xchg
or
fstp
cmpsb
sbb
sbb
inc
cmp
adcb
vmovupd
inc
inc
or
xchg
je
pop
stc
cmp
mov
pop
test
pop
int
xchg
sub
cmp
cmpsb
je
stos
fwait
jbe
jl
mov
sbb
dec
in
mov
jo
pop
xchg
jne
lea
iret
into
in
add
shlb
or
stc
in
push
ljmp
test
mov
push
mov
jo
mov
mov
xor
cli
fcomps
push
xchg
lret
dec
test
push
mov
popf
dec
das
xchg
ret
and
lds
rcrl
rolb
insb
mov
dec
dec
icebp
loope
addr16
xor
sbb
mov
arpl
add
inc
loopne
jne
and
movsb
rolb
xor
dec
movsl
jb
adc
sbb
sbb
mov
mov
fwait
mov
iret
add
js
and
lret
mov
lods
imul
cmp
dec
js
rcrb
and
pop
mov
ljmp
inc
outsb
sbb
adc
mov
pop
lret
sub
js
rcr
fs
test
les
fistpl
sti
add
mov
jb
js
sub
pop
sbb
mov
jecxz
sbb
shlb
mov
popa
sbb
int
ja
popf
fstl
cmp
sub
dec
movsb
mov
lds
inc
fs
insl
push
push
test
clc
idivl
xchg
sbb
mov
mov
mov
sbb
sbb
and
rcrl
shll
xor
push
mov
inc
gs
lods
jle
int3
cli
and
test
in
add
div
push
xchg
xor
test
inc
adc
rcr
out
mov
lcall
xchg
push
ja
std
push
mov
inc
jo
xchg
mov
mov
add
das
pop
lods
cmp
add
xchg
roll
mov
pop
adc
cmp
jns
int3
int3
scas
dec
aad
xchg
or
adc
mov
mov
shrl
mov
cmpsl
add
jns
add
iret
std
xchg
add
and
push
lods
cltd
mov
repz
pop
push
flds
xor
push
push
ret
add
loopne
leave
jae
sub
xchg
lods
jl
in
das
mov
sub
sub
pop
mov
and
dec
lcall
mov
lret
in
mov
aaa
shlb
add
and
psllq
fists
lods
aas
or
or
shll
mov
fsubrp
jecxz
aad
mov
mov
sti
mov
adc
xchg
mov
mov
ret
cmp
and
iret
ja
pop
inc
test
cmc
cmpsb
push
lret
pop
sub
sub
cmp
push
push
jmp
icebp
cmp
out
bound
dec
cltd
mov
test
or
dec
in
jns
outsl
scas
inc
ret
aad
inc
sub
or
cmp
shll
inc
push
fucomp
jbe
dec
cld
push
pop
fwait
jae
cmc
call
jecxz
in
cmp
cmp
dec
sub
test
fbstp
fs
inc
lahf
in
sbb
xchg
push
aam
repnz
mov
cltd
je
cmp
js
imul
inc
ss
mov
int3
cmp
cmc
push
xchg
push
xor
jbe
mov
pop
mov
sub
push
stc
dec
popa
fnstsw
cmpb
sbb
push
jo
pop
push
iret
je
lcall
or
pop
stc
cmp
lcall
jge
je
cld
mov
inc
pop
fs
mov
adc
test
jo
pop
ss
movsb
push
in
lret
pop
fwait
push
sub
sub
mov
cmpsb
fisubrs
testb
inc
fwait
cmp
test
mov
arpl
push
popf
ret
lahf
aam
adcl
lods
nop
stos
stos
push
mov
push
cmp
or
pushl
xor
xchg
jle
mov
addr16
mov
adc
cmpsl
cmpsl
loop
mov
push
dec
cmp
addr16
dec
das
sahf
lahf
aaa
movsl
ret
sbb
je
in
mov
mov
hlt
out
repnz
inc
xchg
iret
pop
jae
loope
xchg
dec
std
pusha
out
sahf
in
enter
mov
push
cmp
push
cli
xor
jl
dec
ret
enter
cld
mov
adc
jl
sub
add
mov
insb
or
add
popa
fadd
sbb
mov
jmp
lret
pop
call
repnz
shl
mov
into
imul
sbb
lahf
hlt
rcll
push
or
movsl
icebp
and
pop
and
orl
jecxz
repnz
loope
push
jmp
iret
cmp
into
fs
and
sub
push
cmova
test
loopne
xchg
fldenv
mov
in
sbb
dec
mov
inc
pop
cmpsb
pop
mov
or
ds
insl
cmp
dec
adc
ret
ljmp
jno
fldl
std
test
or
jns
ja
push
mov
out
stc
mov
icebp
mov
add
mov
rorb
push
and
jnp
mov
loop
or
in
outsb
or
stos
in
jge
frstor
pop
sbb
jmp
xchg
jnp
imul
pusha
xchg
jne
imul
push
or
xor
mov
sbb
fidivrl
add
dec
or
pop
mov
xor
pushl
jno
cmc
jbe
and
repnz
sbb
pop
adc
bound
scas
xchg
jae
add
jl
cmp
add
jbe
fistl
out
cli
mov
xchg
ds
lock
arpl
sub
cmp
cmp
pushf
repnz
outsb
mov
jecxz
pop
arpl
sub
rclb
xacquire
shr
out
and
lahf
mov
cmpsl
and
add
jge
push
shll
pop
icebp
sub
shll
iret
lret
jge
sub
inc
mov
jnp
mov
imul
dec
fcom
push
and
out
push
push
and
movsb
dec
jmp
mov
jbe
hlt
xchg
cmpb
in
jno
mov
rclb
mov
add
xchg
or
jmp
pop
and
rorl
lret
loope
aam
imul
cmc
clc
mov
dec
xlat
js
fstp
mov
inc
and
aad
or
cld
sti
sub
nop
rcl
in
loopne
repnz
push
pop
pop
cli
lret
out
sub
dec
subl
fisubl
decl
mov
inc
fnsave
shlb
add
data16
cld
push
mov
repnz
add
pop
adc
scas
mov
mov
add
adc
aad
fidivs
imul
or
jmp
fimuls
cmp
xstore-rng
cmpsl
ret
in
lret
add
mov
and
or
cmp
scas
cmpsb
xchg
lret
bound
inc
xorl
add
inc
test
mov
mov
lods
mov
mov
mov
push
int
push
mov
dec
lods
lds
push
jmp
fistpl
icebp
or
xchg
je
or
repnz
pop
mov
rolb
inc
rcrb
cmpsl
icebp
lret
jb
test
xchg
rcr
jecxz
mov
nop
frstor
mov
and
sub
gs
out
or
sub
mov
repnz
cmpsl
inc
and
mov
jle
daa
pop
adc
sub
int
add
mov
test
pop
jns
int
xchg
dec
xchg
push
sub
sahf
mov
sti
mov
mov
mov
lret
fnsave
dec
sub
mov
aam
mov
fistpll
or
mov
xor
lds
in
adc
dec
andl
loop
fnstenv
cmp
aad
jbe
call
pop
xchg
icebp
push
loop
iret
inc
iret
push
movsl
mov
mov
dec
mov
shrb
add
cmc
hlt
cmp
add
pop
push
mov
ja
cltd
xor
in
jle
pop
ja
das
stc
lcall
clc
add
lahf
rcr
adc
mov
sbb
mov
int3
loop
cmc
add
dec
and
loope
sub
ror
popa
mov
sahf
test
lcall
inc
xor
xchg
jb
jg
leave
shrb
dec
xchg
cmpl
cmp
js
xchg
inc
cmpsb
inc
sub
inc
dec
sbb
xchg
fcompl
push
and
push
fsubl
repnz
jecxz
aam
std
repz
mov
push
and
popf
dec
imul
cmpl
or
movsb
dec
das
sti
js
mov
jns
daa
dec
and
sbbl
xchg
dec
rcrl
repz
pusha
sub
jbe
xchg
inc
xchg
adc
jmp
push
lcall
test
fdivs
push
jmp
cli
push
adc
cmpsb
mov
add
fwait
xchg
sbb
push
cmp
out
popf
rcrb
pop
jnp
nop
in
inc
int3
inc
mov
add
dec
jbe
jns
movsb
jmp
and
add
xchg
jecxz
flds
aaa
fidivrs
inc
add
les
sub
pop
aaa
adc
adc
mov
rcr
cmp
inc
in
push
and
je
sbb
bound
xchg
int
jge
or
in
sub
jb
cwtl
ret
ljmp
sbb
sarl
lret
les
inc
mov
mulb
mov
jne
arpl
mull
cmp
and
push
jne
test
sahf
add
push
js
and
add
leave
or
sub
pop
sbb
shl
and
xor
pop
pop
mov
fs
scas
cli
movsb
dec
jmp
js
add
xor
int3
cmp
jne
mov
hlt
push
lahf
int
adc
mov
dec
push
lds
pushf
lea
dec
sub
lcall
xor
repnz
xchg
sbb
clc
inc
add
mov
sbb
jne
mov
ja
mov
insl
sbb
mov
loopne
out
out
fstps
sbb
jp
test
std
adc
lret
xchg
sub
jae
and
sub
lret
jecxz
fcomps
enter
ja
dec
cmpsb
pop
adc
sub
mov
std
fadd
or
jl
mov
adc
clc
mov
mov
lods
ds
sbb
sbb
loopne
mov
adc
imul
mov
sub
sub
pop
xlat
nop
push
imul
xchg
or
and
push
jge
aam
int
push
mov
push
jge
sbb
cmpsb
fildl
into
test
mov
jns
insl
or
mov
filds
xor
les
test
fwait
pop
and
cmp
in
lret
push
push
or
inc
mov
cmp
cli
movsl
mov
test
inc
push
jecxz
mov
mov
aam
mov
aaa
lret
std
mov
popf
cmp
jb
xor
cmp
imul
popa
popa
push
pusha
cmp
je
jno
sarb
mov
out
frstor
mov
mov
or
arpl
fs
hlt
lret
stos
test
fnstcw
pop
js
xchg
popa
aad
lahf
enter
add
mov
dec
cwtl
insl
xchg
loopne
add
test
jae
outsl
in
arpl
fidivrs
and
test
cltd
push
lret
pushf
cmpsl
fistpl
and
adc
popa
stos
ret
cs
movsl
es
push
add
inc
mov
pop
cld
fucomp
mov
mov
movsl
rorl
xchg
lock
stos
subb
popa
pop
add
in
loop
ret
xchg
repnz
insl
repz
vpshaq
sub
sahf
inc
iret
xchg
sbb
and
mov
add
fs
xchg
nop
scas
inc
and
orb
std
ret
and
cmp
and
mov
push
out
lret
cmp
push
dec
xchg
mov
pop
fildl
addr16
mov
push
or
fdivr
adc
push
out
jne
addr16
xchg
cmp
sbb
cltd
cmp
shlb
lret
out
shl
sbb
fwait
scas
jmp
and
orb
dec
bswap
lahf
repz
iret
push
dec
mov
sub
adc
xorl
adc
mov
add
lret
ja
rorl
popa
ss
xchg
adc
fstps
outsb
or
dec
clc
lods
and
xor
into
bound
mov
and
movsb
dec
aam
insb
testb
stos
std
leave
mov
popf
xchg
lods
orb
test
xor
pusha
and
add
push
pop
jg
xchg
in
arpl
movsl
fcompl
inc
scas
mov
xchg
mov
adc
sbb
pop
loop
ljmp
test
pop
jmp
test
stos
sbb
xchg
aad
repnz
pop
cmpsl
sbb
and
repnz
lods
mov
loop
jecxz
push
or
dec
sbb
jmp
sub
data16
mov
lock
jg
arpl
stos
rcrb
lret
hlt
xor
outsb
jne
mov
mov
pusha
andl
jbe
jo
hlt
dec
mov
mov
push
fwait
jo
cmp
mov
mov
arpl
bnd
sarb
mov
popa
mov
in
jecxz
jecxz
cmp
outsl
mov
fisubs
mov
popf
loopne
jecxz
xor
in
fbstp
dec
fstps
jmp
dec
pop
iret
lret
sub
inc
jno
imul
or
test
leave
ret
jbe
and
lock
out
jns
pop
push
ror
and
aad
repz
lret
out
sbb
cmp
xchg
jmp
add
inc
inc
mov
adc
fstp
jmp
jne
jl
test
mov
adc
xchg
xchg
or
or
sbb
cmp
pushf
mov
pop
cwtl
aas
push
filds
inc
lock
sbb
cs
inc
or
arpl
pop
fimuls
cs
bound
popf
or
loope
sub
xor
inc
adcb
xchg
outsl
mov
sbb
leave
cwtl
fcompl
fnstenv
xor
rcr
sub
rcll
ret
cmp
xchg
cmpsl
sub
pop
out
dec
jl
test
pop
gs
frstor
adc
and
push
daa
pop
iret
int
stos
cmp
out
lea
sub
ret
cmp
sub
fistpl
xor
stos
inc
mov
shlb
push
ljmp
js
or
repnz
shlb
and
jl
and
mov
mov
inc
repnz
test
jno
dec
shll
jl
dec
sahf
stos
cmp
clc
adc
das
and
or
bswap
rcrb
sub
out
notl
push
jae
and
fs
test
or
cwtl
push
fsubs
xchg
out
pushf
mov
ret
icebp
sarl
mov
in
fldt
adc
mov
insl
aas
aam
mov
pop
fiaddl
add
icebp
lock
lea
xchg
vcvtpd2psx
pop
repnz
fs
push
dec
sub
add
mov
mov
push
popa
xchg
int3
inc
cltd
pop
lret
inc
sbb
data16
test
mov
inc
jo
nop
fs
imul
or
add
adc
cwtl
dec
push
cs
test
add
mov
ds
ret
test
cld
push
mov
sub
nop
call
int
xchg
pusha
loop
jne
ljmp
push
sub
not
fstps
loopne
test
push
inc
jmp
mov
mov
stc
iret
inc
jl
cltd
sub
pushf
mov
daa
aaa
rcrb
and
mov
rolb
ljmp
in
jl
mov
push
in
sub
mov
mov
or
add
paddsw
mov
lcall
test
rorb
inc
fnstcw
mov
xchg
inc
pop
lods
outsb
push
cmpsl
adc
pop
call
pop
push
aad
push
xchg
insb
imul
int
pusha
int3
in
pop
orb
push
mov
in
push
adc
sub
push
loopne
ret
lret
scas
imul
pop
xchg
push
jl
or
out
int3
xorl
mov
rcrl
push
pushf
sti
in
lret
pop
or
shr
fsubl
add
mov
inc
sub
jp
fmulp
adcl
int3
inc
fldz
push
push
scas
cld
pop
pushf
add
add
jl
fwait
insb
les
insb
mov
push
rcrl
mov
adc
xor
dec
mov
and
loope
fisubl
ljmp
add
sub
push
cmpsb
jmp
pop
jnp
fcomps
cmp
pop
xor
scas
int
fs
shlb
or
cmp
test
pop
mov
je
cltd
or
inc
not
push
jecxz
mov
les
mov
shll
fwait
mov
and
lret
ret
fisubl
push
fiadds
jno
ficoml
xchg
mov
ja
mov
push
xchg
in
mov
xor
and
xor
jbe
adc
sbb
lret
dec
and
aam
sahf
loopne
in
fsubrl
jbe
jl
lods
insb
ret
mov
lods
mov
add
push
shlb
pop
dec
popa
or
ljmp
movsl
xchg
cmp
jle
pushf
pop
jge
jmp
inc
cld
mov
popf
mov
insb
and
push
push
fstps
sbb
movsb
xor
mov
sub
in
movsb
in
repnz
loop
scas
iret
movsl
or
sbb
sub
cmp
pop
rolb
mov
pop
inc
pop
out
or
mov
sarl
mov
mov
xor
jge
mov
push
xchg
xor
aaa
fnstsw
xor
add
sbb
filds
out
inc
mov
mov
xchg
mov
loopne
mov
int
bound
clc
sar
pop
mov
jae
mov
loope
mov
inc
idivb
sahf
bound
sbb
cmc
sbb
xor
mov
fwait
mov
mov
outsl
mov
xchg
shl
cmp
scas
inc
sbb
fnstsw
jecxz
inc
mul
pop
inc
pop
mov
push
and
xchg
ljmp
jmp
out
mov
loop
cmc
popf
sbb
xchg
mov
fidivrs
lahf
test
lea
daa
out
fwait
mov
push
movsl
sbb
or
ss
mov
cmp
rolb
movnti
roll
mov
sub
fnstcw
sarb
add
jl
shll
iret
or
je
out
popa
popf
int3
loopne
mov
lret
mov
cmp
movsl
fisttpll
mov
jp
or
fs
das
dec
cld
xor
mov
loopne
scas
popl
cmpsl
pop
mov
popa
xor
ret
lahf
pop
ficomps
mov
mov
mov
ror
add
or
jl
cmp
cmp
inc
fldcw
mov
add
mov
mov
dec
add
xor
fs
mov
xchg
mov
cmp
and
sbb
adc
mov
movsb
dec
fcmovbe
repnz
arpl
addl
lret
mov
pop
repz
arpl
lahf
jecxz
sub
pop
xchg
cmp
int
inc
push
inc
sar
pop
sub
or
in
push
jl
lcall
mov
pop
ror
fists
sub
fidivs
das
lahf
shl
ja
push
shr
lahf
push
mov
popa
ss
or
std
pushf
nop
jbe
fldenv
lcall
inc
cvtps2pi
mov
fadds
mov
mov
stos
cmp
pop
mov
jno
in
add
add
sahf
jl
loopne
sbb
int
in
repnz
jnp
icebp
pusha
stos
idivb
test
sub
aas
jge
in
jmp
cmp
aam
jmp
jmp
pusha
jb
ljmp
gs
push
scas
add
inc
cld
inc
shll
ss
fbstp
call
mov
add
dec
sti
xchg
mov
push
imul
repnz
out
stos
sahf
jo
mov
jnp
jne
jmp
int3
gs
lret
fs
mov
adc
in
lahf
push
clc
adcb
loop
test
pop
xor
add
icebp
dec
int3
nop
fdivr
repnz
in
aad
call
add
pop
bound
or
pop
and
dec
or
xor
into
out
push
icebp
out
jp
iret
jmp
jl
mov
pop
das
cmc
into
mov
fs
mov
stc
in
push
pop
mov
bound
out
pop
pop
in
or
sub
repnz
mov
xor
pop
jge
aad
cmp
lahf
cmc
pop
outsb
cmpsl
pop
fisttpll
and
add
xor
mov
add
sub
cs
push
add
mov
cmc
push
flds
fmull
inc
dec
icebp
rorb
fadds
int3
loope
inc
add
sub
push
fldz
clc
in
stc
push
shlb
xchg
sub
cmp
push
adc
sti
loopne
mov
test
pop
dec
into
mov
pop
int3
test
lret
lret
shl
xchg
cmp
push
mov
add
test
sbb
int3
ljmp
lods
lock
in
mov
mov
loop
popf
dec
fwait
sub
inc
mov
fisttpll
sub
aad
scas
push
jg
dec
lods
push
and
std
fstpt
mov
mov
subps
ret
xchg
loopne
sbb
shrl
cltd
popf
cmc
loope
add
xchg
test
mov
mov
cltd
or
sub
pop
aas
push
push
jecxz
das
cmc
lret
jl
ss
test
lret
jge
addr16
xchg
mov
repnz
and
mov
xchg
sbb
jge
stos
add
es
cld
iret
cmp
pop
mov
add
add
repz
mov
fisttps
jnp
xchg
or
add
dec
mov
or
int3
jns
call
add
sub
pop
mov
dec
adc
sarb
pop
mov
insl
inc
mov
hlt
cmp
cmp
push
jmp
stos
lahf
sbb
shll
inc
inc
call
aaa
fmull
push
movsl
jae
hlt
cmp
xchg
outsl
or
repnz
fwait
sub
xchg
frstor
lret
das
sbb
les
mov
call
movsb
incb
stc
testb
fisubs
inc
loop
int3
imul
icebp
cli
call
test
outsl
std
clc
add
aam
fiaddl
mov
icebp
fisttpll
xchg
mov
pop
scas
sbb
push
jo
or
test
xchg
sub
cmc
lret
lret
pop
jecxz
scas
call
sbb
dec
and
stos
ror
and
repnz
fst
inc
int
call
xor
je
sbb
mov
dec
rorl
xorb
jl
adc
pop
cltd
repz
sbb
adc
mov
adc
jne
push
push
pushl
mov
hlt
loope
sub
pop
jg
jge
push
fucom
cmp
fs
push
sahf
jl
lods
dec
lret
outsb
cmp
into
and
fst
push
jecxz
add
or
lcall
jmp
xchg
rorl
jl
hlt
inc
dec
imul
lahf
js
bnd
dec
ret
lock
in
inc
ucomiss
call
pop
cmp
mov
scas
jnp
loope
nop
cltd
adc
in
sub
mul
in
fsub
mov
repnz
inc
stc
lret
sbb
add
cltd
add
jge
shlb
jle
mov
add
dec
mov
shl
xor
inc
cmpsb
clc
jnp
inc
mov
stc
in
js
and
pop
pusha
icebp
cmp
adcb
test
mov
mov
or
outsb
xchg
aad
int3
inc
int
or
xchg
push
adc
dec
jg
push
inc
test
adc
pop
and
ror
cmpsl
inc
mov
pop
mov
stos
mov
movsl
mov
mov
pushf
fs
jmp
push
imulb
and
xor
sbb
mov
lcall
add
cmc
mov
std
into
mov
aaa
or
dec
inc
nop
push
hlt
rcr
or
inc
clc
in
inc
out
xchg
inc
ja
cmp
outsl
ss
xchg
push
push
push
xchg
xchg
fucomp
mov
jecxz
mov
les
iret
adc
sbb
dec
aam
dec
xor
add
aaa
shlb
cli
bound
outsb
call
fbstp
shlb
fcomps
pop
into
mov
repnz
add
mov
int
stos
or
inc
jnp
sti
push
jp
fcoms
xchg
test
sbbl
ret
jmp
movsb
cli
ret
jmp
cmp
out
popa
inc
and
mov
js
std
adc
lea
fdivp
push
mov
divl
popf
stos
sub
shrb
popf
cmc
and
movsl
push
dec
cli
pop
mov
aam
in
jmp
lret
and
fs
ret
test
fldl2t
xchg
fildl
in
leave
movsl
mov
jp
mov
mov
jnp
add
lods
xchg
mov
lods
inc
push
mov
pop
iret
pop
cmp
daa
adc
sub
es
push
cli
bound
scas
fndisi(8087
aam
cs
lahf
jp
insb
cmp
jmp
jns
pop
jecxz
ds
pop
ret
out
push
mov
out
mov
mov
adc
xor
jne
int
push
loop
leave
mov
loop
add
hlt
aad
sbbl
push
lds
ret
leave
add
test
fidivl
ljmp
and
in
xchg
arpl
mov
sub
arpl
mov
cmp
clc
xor
fsub
inc
ds
push
mov
test
mov
icebp
or
lret
jl
adc
cmp
loopne
orl
xor
iret
std
dec
mov
mull
mov
mov
inc
mov
xor
inc
in
xchg
mov
icebp
add
in
push
aam
iret
fld
icebp
lcall
fidivs
jmp
stos
in
outsl
add
nop
push
ds
jno
leave
std
xor
inc
pop
jl
int
scas
xchg
mov
pop
add
ret
bound
scas
pusha
fisttpll
loopne
std
pop
jno
dec
pop
bnd
hlt
mov
jmp
jns
in
loop
movsl
mov
pop
push
xor
aad
cltd
ljmp
push
inc
jmp
ds
cmp
xchg
mov
mov
mov
stc
sbb
jae
cmpsb
int
or
setno
int
adc
iret
sub
xchg
lods
int
push
roll
fildll
lcall
repz
or
add
inc
sti
inc
movswl
or
incb
pop
ds
aad
cmp
fidivl
out
in
cmc
pop
pushf
cli
mov
aaa
test
fnstcw
clc
or
pop
mov
add
aad
sbb
mov
xchg
arpl
ljmp
and
or
add
insl
pop
mov
ret
sbb
loopne
sbb
xlat
add
and
push
imul
cmp
gs
ss
dec
or
add
icebp
lahf
dec
jle
pushf
fistpl
inc
dec
sbb
aad
mov
inc
sbb
inc
addr16
push
shrb
cmc
aad
test
shlb
shl
pop
fistpll
cmpsl
add
nop
fisubs
push
sub
fidivl
cmp
xlat
pop
or
out
loop
xor
cmp
push
ja
loopne
imulb
xchg
or
repz
and
add
mov
fcmovnu
std
add
jae
push
pop
fmull
repnz
movsl
aad
aas
cmc
aaa
inc
mov
icebp
pushf
mov
mov
push
cmp
cli
out
cld
loop
and
out
or
stos
lret
loopne
mov
dec
loopne
mov
mov
mov
loop
loop
cmp
xchg
iret
ror
mov
mov
inc
shll
pop
xor
inc
test
jmp
adcl
cmp
movsb
movsl
pop
inc
aaa
and
fsts
push
pop
adc
int
repz
push
in
pushf
jl
movsl
cmp
mov
mov
mov
cltd
and
lock
add
fnsave
mov
repnz
mov
test
or
push
pop
mov
mov
mov
mov
cld
mov
mov
push
jo
pop
lea
dec
jg
out
cmp
cmp
adc
or
mov
in
arpl
and
cmp
or
xchg
mov
add
mov
int
sbb
nop
inc
iret
inc
mov
and
xchg
push
popa
movsb
movsb
inc
sarb
push
icebp
add
dec
or
and
cld
jg
insl
xchg
inc
cmc
mov
or
mov
imul
xor
mov
hlt
lods
and
dec
push
jb
mov
test
in
add
jecxz
mov
mov
movsl
fdivl
lods
or
inc
pusha
rorl
cmc
and
fyl2x
fwait
movsl
incb
scas
push
xchg
push
inc
mov
aaa
sbb
clc
leave
or
loopne
sbb
or
test
shll
xlat
sbb
mov
jp
int3
lods
sarb
scas
jecxz
movsl
fs
fistpll
jp
sarb
push
add
sarl
call
repnz
ljmp
daa
shll
cmc
rcl
cmp
jle
cmpsl
lret
sub
les
and
mov
scas
sub
ror
int
inc
into
imul
int
call
add
loopne
int3
adc
call
jge
sub
pop
jecxz
adc
imull
das
pop
in
sbb
xchg
add
mov
mov
out
sbb
jl
xchg
or
loope
mov
cld
push
aad
push
movsb
fstpt
std
shll
dec
test
adc
inc
test
cmc
aaa
aad
rorb
xchg
call
das
dec
mov
movsb
repnz
orl
aaa
inc
cmc
dec
bswap
mov
and
test
pop
cmp
mov
jmp
scas
enter
jo
cli
add
fs
dec
xlat
or
sbb
fwait
in
or
dec
cmp
or
leave
dec
inc
stc
ret
jmp
test
fwait
xchg
cmp
mov
sbb
scas
dec
shl
or
cmp
jmp
jmp
xchg
xchg
mov
add
cmp
pop
cmp
lds
add
ljmp
imul
lret
dec
mov
mov
xor
push
stos
add
hlt
and
rorb
int
inc
fwait
aad
fdivrl
push
xchg
jg
or
jmp
rcrb
bound
adc
jmp
in
jp
lods
fnstenv
xor
sbb
pop
jp
push
mov
cmp
adc
cwtl
fsts
pushf
hlt
sbb
fcom
stc
frstpm(287
xchg
in
out
orb
mov
bound
rcrl
xchg
mov
push
ljmp
mov
mov
clc
mov
mov
and
pop
or
iret
int
xchg
insl
or
and
jno
push
js
arpl
add
add
or
or
add
lret
mov
sub
pusha
cmp
jl
pusha
sti
and
imul
stc
dec
pop
or
pop
cmp
rcll
orl
add
mov
mov
pop
push
sub
jl
mov
cmpsl
repnz
pop
fistpl
stc
dec
int
cmp
cmpsl
inc
sbb
and
xor
pushf
and
mov
ljmp
jp
or
or
pop
cmp
mov
jo
cmp
aad
into
mov
test
ja
repz
dec
sbb
out
loopne
idivl
add
xchg
push
jno
pushl
cltd
xor
roll
pop
stc
int3
cmp
adc
sbb
iret
mov
test
jge
int
add
cli
pop
out
ficomps
sub
push
repz
icebp
bound
into
mov
lock
and
mov
outsb
setns
sub
jle
shll
lahf
pop
pop
fistl
imul
mov
mov
xor
jne
cmp
enter
inc
leave
jns
pusha
or
lret
xchg
jno
pop
int
and
cmpsb
test
dec
sub
idivl
cld
js
mov
fs
cmp
or
enter
and
mov
xchg
xchg
scas
xor
mov
ds
adc
sbb
aam
push
in
sbb
jecxz
mov
jp
add
sbb
dec
or
xor
rol
push
jmp
dec
out
jmp
call
out
cmp
pop
sbb
sbb
add
and
push
add
cltd
in
out
sbb
outsb
inc
sbb
arpl
push
or
pop
mov
mov
fwait
inc
lods
add
lret
in
or
int
push
jg
rcrl
inc
inc
or
movsb
movsb
sti
and
dec
stc
xchg
jno
xchg
adc
add
int
lods
xchg
test
packssdw
pop
adc
inc
xchg
dec
mov
sarl
cmp
aaa
xchg
push
movsl
add
out
or
sbb
and
fcompl
out
mov
bnd
fisttpl
bound
gs
fdivl
mov
jbe
cmpsb
fdivrs
aad
lret
mov
in
add
xchg
jge
push
sbb
add
cmpsl
imul
cmp
push
jmp
inc
loop
mov
or
jecxz
shll
stc
mov
mov
dec
jo
and
pop
cmpsl
loope
xchg
mov
gs
sub
cmpsl
ud0
ljmp
out
cwtl
sub
cld
test
push
cmpsl
pushf
jecxz
ljmp
loop
out
xor
sbb
xlat
imul
cmp
aad
or
pop
mov
leave
ret
ja
dec
sub
ret
std
xchg
leave
push
push
or
xchg
jbe
jae
testl
dec
lret
das
cmp
dec
mov
cmpsb
adc
sti
sub
mov
inc
adc
enter
xor
mov
test
cmp
mov
sub
fs
nop
dec
pop
mov
jbe
cld
test
mov
xchg
pusha
and
insl
ljmp
and
aam
xorb
ret
int3
add
test
sub
sahf
clc
fstpt
lcall
sub
dec
inc
or
fs
cmp
inc
in
jge
push
mov
fwait
xchg
insb
mov
sub
mulb
popf
les
mov
xlat
daa
cmp
add
popa
mov
mov
push
xchg
sub
fs
cmp
in
pop
mov
or
mov
fwait
scas
or
sbb
call
xor
mov
mov
or
imul
mov
faddl
ljmp
jb
cmp
xchg
cwtl
lods
cs
jne
ficomps
lret
ret
in
mov
adcb
push
pop
pop
and
movsb
jmp
push
fisttpll
adc
repz
push
inc
push
xchg
jp
sbbl
add
movsb
mov
in
hlt
test
mov
test
mov
xchg
jns
es
fs
or
aad
inc
sbb
std
xor
rcr
loopne
aad
mov
iret
pop
fldenv
mov
adc
jmp
stc
aad
lret
mov
or
xchg
mov
popa
stc
lods
out
in
inc
mov
sub
dec
jmp
push
incb
push
imul
imul
lcall
out
lret
adc
cmp
jge
xchg
insb
hlt
dec
rcll
xchg
mov
pop
aam
std
ss
lds
sbb
xchg
sbb
scas
ffree
cmp
xlat
cmp
xchg
gs
gs
jl
push
lock
xchg
cmp
cld
cs
scas
mov
and
ss
xchg
aas
scas
enter
fwait
bound
sbb
repnz
fisttps
orb
jl
test
fbstp
cs
jbe
mov
mov
push
bound
inc
lock
cltd
stos
sbb
mov
and
in
push
fistps
cld
jo
and
in
lahf
in
sbb
cmpsl
out
dec
iret
lret
aam
mov
rcr
or
push
xchg
jnp
mov
mov
sub
pop
mov
sbb
push
fs
in
push
xchg
sub
aad
pusha
adc
lahf
inc
push
jecxz
movsl
add
lret
popa
pop
cmc
sbb
inc
cwtl
cli
test
inc
mov
cld
fucomi
inc
mov
xchg
stos
push
mov
cmp
fucomi
push
in
xchg
cmc
das
loopne
lds
stc
mov
movsl
sub
jmp
stos
dec
loope
and
add
push
aam
shr
mov
inc
in
out
mov
in
inc
sti
adc
xchg
lds
or
addr16
jb
cmp
cmp
jae
shrl
daa
loope
sub
sbb
mov
pop
and
stc
popf
shll
add
lret
sbb
sbb
push
sub
and
mov
das
dec
push
push
and
mov
sub
xor
sbb
mov
stos
outsb
add
rol
add
pop
jle
bound
aad
jbe
inc
add
icebp
repnz
call
and
out
push
pusha
mov
rorb
lret
hlt
mov
sbb
add
sub
mov
inc
xchg
or
mov
mov
orb
lret
mov
loopne
xchg
stc
mov
vmpsadbw
rorl
js
enter
imul
xor
adc
dec
mov
adc
or
inc
in
jo
fsubrl
mov
xor
pop
lea
movsl
orb
loopne
bound
lcall
mov
sbb
pop
and
hlt
add
movb
or
push
decl
mov
sti
jecxz
or
sbbl
push
movsb
ljmp
dec
xchg
out
mov
leave
xchg
faddl
mov
cmpsb
add
rcll
fcoms
add
outsb
dec
xchg
sub
and
jo
aad
mov
sub
jb
or
test
xchg
xor
xchg
cld
or
les
and
repnz
fwait
es
adc
loopne
scas
popf
inc
xor
xor
and
xor
into
testb
pop
dec
out
lcall
mov
popf
inc
fdiv
add
jl
sti
lret
std
cmc
xchg
repnz
pop
je
adc
jbe
dec
cmp
lock
push
sahf
or
push
mov
test
in
adc
mov
mov
sbb
xor
out
mov
adc
inc
push
loope
dec
xor
das
lahf
or
inc
jno
or
addr16
popf
mov
xor
mov
sub
inc
add
rorl
sub
jecxz
mov
arpl
inc
jae
rolb
sbb
mov
jbe
orl
ljmp
insb
int3
cmp
jne
ja
pusha
xchg
adc
mov
lret
jg
jb
nop
das
sbb
pop
xor
sbb
std
sarb
sarl
aad
fwait
loopne
cmp
jmp
es
fistl
xchg
mov
mov
mov
js
pop
xor
push
pusha
pusha
mov
fstps
push
hlt
lods
loope
rcrb
mov
sub
call
add
inc
movsb
xchg
adc
sti
scas
pop
shll
popf
test
xor
pop
inc
pusha
les
ret
iret
dec
and
cmp
fldl
sbb
std
push
adc
xorb
push
mov
mov
movsl
mov
clc
enter
jae
pushf
pop
roll
rorl
hlt
xchg
in
ror
lcall
or
add
sti
subb
popa
movsb
adc
mov
cmp
xlat
cmp
iret
and
cmp
xchg
xor
mov
aad
iret
mov
jns
jg
cmp
mov
in
pop
pop
movsb
jmp
mov
or
iret
push
adc
leave
dec
hlt
mov
or
sbb
cmp
mov
leave
pushf
fstpl
cmp
mov
or
stc
imul
in
push
imul
cld
inc
lods
jnp
xchg
addr16
lret
lcall
jne
inc
or
lods
cmpb
daa
test
cmpsl
cmc
mov
rcll
and
lcall
ss
rorl
mov
insb
adc
cld
xor
add
leave
add
dec
les
sub
inc
hlt
test
mov
sub
mov
add
shlb
mov
or
test
xchg
jecxz
push
shll
aam
xchg
jnp
sub
xchg
std
insl
fwait
adc
mov
and
ds
sub
xchg
shlb
lret
in
dec
jge
xchg
aad
mov
pusha
pop
aaa
fwait
fists
inc
push
pop
cmp
push
shr
dec
push
add
inc
mov
aad
and
mov
ficomps
add
add
sbb
add
roll
mov
iret
jg
adc
jle
adc
jp
cld
lods
mov
xorb
rorl
or
je
xor
cmp
xchg
popa
mov
mov
mov
sqrtps
pushf
dec
arpl
sbb
ds
sbb
sub
push
fstpt
cmc
inc
sub
add
fnsave
ror
test
sbb
xor
mov
into
xchg
jmp
in
fcmovu
ja
and
add
aaa
lret
pusha
mov
mov
push
adcb
xchg
jmp
push
sub
dec
jmp
ret
movsl
adc
pop
or
cmp
mov
cmp
icebp
cmp
fadd
lret
das
js
xor
mov
cwtl
xchg
ja
addr16
lods
mov
addr16
mov
sbb
imull
shll
call
sub
jmp
aad
inc
ss
xlat
out
jbe
mov
push
shll
out
jl
xor
add
pavgb
clc
aas
add
fiaddl
stc
jne
ja
push
xor
aad
xor
push
int3
mov
mov
jns
mov
adc
ficompl
pop
popf
xor
stc
out
push
xchg
cmp
pop
data16
or
aad
inc
and
mov
xchg
mov
inc
and
std
out
shll
lcall
sbb
imul
push
popf
cmp
shll
mov
xchg
and
mov
mov
fiadds
sub
jne
popf
jge
mov
ret
pop
cmp
sub
into
fcoml
cmp
je
fildl
push
aaa
inc
jnp
lcall
mov
jl
pop
sbb
xchg
addb
aas
pop
mov
sub
std
mov
and
jle
cmpsb
jecxz
inc
mov
push
adc
out
test
aam
jae
mov
icebp
mov
push
xchg
lret
stc
dec
adc
enter
jmp
lcall
iret
lea
add
jbe
adc
mov
push
aam
mov
dec
adc
mov
xchg
popa
das
into
shrb
xor
lods
adc
es
aaa
push
pop
jge
xor
jb
loope,pn
inc
addr16
or
push
pop
or
pop
out
mov
jecxz
jmp
gs
sbb
push
adc
mov
cmpsb
arpl
cs
sbb
in
mov
or
jae
fidivs
and
mov
aam
daa
test
leave
in
adc
add
rcll
mov
stos
out
out
mov
lea
jg
mov
cmp
cs
xor
mov
rorl
push
movsl
mov
pusha
and
fucomi
movsb
mov
add
hlt
mov
cli
add
in
mov
mov
sbb
xor
insb
xor
xorl
or
cltd
push
mov
xor
and
test
mov
ljmp
cmp
push
idivb
jo
sbb
test
sub
inc
mov
rcl
in
shlb
dec
rcrl
aaa
cmc
cmp
cmpsl
repnz
pop
popf
pop
inc
mov
fists
mov
cmp
mov
test
push
or
stc
pop
and
pop
inc
dec
mov
pop
cmp
dec
sbb
add
xchg
cld
das
pop
add
fcomp
fstpt
out
inc
mov
pusha
rcrl
mov
xor
pop
fldl
pop
xchg
mov
mov
in
mov
mov
cmp
push
mov
xchg
inc
fldenv
xor
or
cli
add
int3
ret
jmp
jl
testl
cli
mov
je
daa
repnz
fistpl
imul
fstps
sbb
dec
add
sub
cmc
das
rcrw
cmc
cmp
les
push
repnz
inc
cld
sti
in
mov
fnstsw
sarl
jecxz
popf
imul
cwtl
inc
dec
movsl
enter
mov
lahf
lods
sub
fdivrp
fidivl
nop
lcall
in
cmp
mov
cmp
mov
pop
xor
sbb
add
jp
pop
scas
cmc
mov
sbb
int
sahf
pop
ret
dec
les
sbb
cmp
dec
xor
imul
outsb
pop
dec
xor
aam
fcompl
mov
stc
pusha
and
int3
lods
aaa
cwtl
lret
or
jmp
pop
rcrb
inc
cld
push
leave
sub
xchg
sbb
pusha
ljmp
jge
test
add
in
aaa
inc
mov
mov
push
dec
cmp
xchg
lret
cltd
inc
out
sub
iret
clc
jae
sub
leave
sti
dec
popf
pop
imul
and
sbb
jmp
pop
mov
adc
cmp
popa
lahf
fisubrs
pop
xchg
dec
mov
dec
mov
mov
jg
cld
movsl
inc
je
jecxz
icebp
movl
lret
ret
imul
add
cmc
mov
and
jmp
mov
popf
insb
dec
mov
push
fs
popa
sti
bound
in
inc
pushf
testb
cwtl
lods
lods
stos
push
lret
sub
sti
outsb
sbb
addb
sub
push
xchg
sarb
xchg
jge
cmc
loop
ret
cltd
adc
sub
mov
mov
or
dec
and
das
mov
fcomp
lcall
in
aad
cmp
mov
fsubr
in
fisttpll
cmpsb
aaa
cmpsl
xchg
xor
pop
cwtl
xchg
js
lret
inc
dec
adc
mov
fisttpl
idivb
shrl
ljmp
sbb
push
inc
pop
mov
fsubrs
das
mov
dec
add
mov
xlat
repnz
int
ljmp
push
pop
push
pop
xor
in
add
out
mov
movsl
orb
lock
mov
es
jb
mov
fidivrs
sbb
popf
es
loopne
cmp
fst
mov
lods
jo
out
or
xchg
neg
cmp
pop
add
mov
fnclex
xor
jnp
sub
in
pushf
dec
pop
mov
mov
rcll
loope
mov
imul
loopne
sbb
mov
cli
sti
add
dec
dec
fdivl
sub
add
push
cmp
xchg
loope
insl
dec
add
mov
dec
xor
mov
test
movsl
fsubl
out
mov
push
xor
adc
idivl
loop
movsl
incb
and
jo
lret
jmp
cmp
jo
lods
push
inc
pop
and
pop
mov
cli
jmp
in
xchg
shll
into
add
arpl
add
mov
sub
idivl
pop
bnd
cmpsl
in
and
lret
push
dec
jb
pop
cmpsl
sbb
fwait
popa
mov
data16
rorl
imul
or
mov
mov
pusha
fdivr
xchg
pushf
aaa
mull
ss
insb
mov
ret
pop
jmp
lock
or
mov
inc
fists
push
dec
mov
repnz
fdivp
jne
push
scas
out
rorb
into
dec
mov
in
fiaddl
test
out
ror
add
into
jae
out
scas
popf
fnsave
push
adcb
xor
ficoms
sub
movntps
mov
jbe
push
fs
sub
inc
ljmp
xchg
pop
xor
jae
out
mov
xchg
xlat
call
stos
testb
fcompl
int
mov
popf
push
fnstenv
out
lea
scas
jmp
mov
shll
popf
in
dec
xchg
ret
push
std
fwait
xchg
decb
and
fstps
fiadds
pusha
mov
pop
movsl
or
out
mov
shrb
int
stos
push
sub
mov
and
std
ss
pop
inc
stos
mov
jecxz
add
push
mov
push
dec
in
hlt
fistpll
add
push
jge
fidivrl
aaa
and
jecxz
pop
mov
inc
orb
lret
imul
loope
dec
mov
cmp
or
xor
shrl
cmpsb
mov
cltd
repnz
int
xchg
scas
int
test
insl
mov
jge
jmp
cmp
fwait
mov
pop
outsl
sbb
lcall
mov
loope
inc
adc
aas
pop
cmpsl
add
fnstsw
or
sar
cmp
arpl
in
lcall
iret
lahf
jge
mov
cmc
cli
sbb
scas
and
cs
adc
push
inc
in
sub
inc
scas
aaa
jbe
fcmovnb
sbb
ret
xchg
lret
xchg
mov
add
mov
and
pop
aad
in
in
ds
xchg
sbb
inc
add
xchg
pop
sub
enter
idiv
imul
aad
shll
std
inc
mov
cmpsb
lret
cmp
jg
ljmp
sub
or
pop
jle
loopne
dec
cmp
sub
lahf
sub
cmpb
shll
mov
bound
imul
or
sti
mov
imul
sub
sub
or
xchg
sbb
insl
lock
aas
sbb
mov
sbb
sub
and
inc
mov
pop
mov
in
add
fildl
sti
inc
xor
xor
lahf
int3
out
mov
das
pop
rorb
aad
cmp
mov
pushf
mov
push
or
push
insl
jbe
fnstsw
mov
add
cmp
mov
aad
int
movsl
mov
sub
ror
pop
dec
inc
movsl
loope
mov
pop
movsl
hlt
mov
push
push
add
arpl
mov
int
in
pop
pushf
sarl
xchg
pop
std
xor
loope
mov
in
sbb
ja
lods
iret
fnstcw
bnd
jo
repnz
popf
adc
lcall
dec
shrb
daa
xchg
mov
jbe
movsl
jne
xchg
and
jns
lret
and
sbb
nop
push
ljmp
mov
aaa
mov
imul
xor
movsb
xor
cmc
jmp
lret
xor
sbb
pushf
add
imul
pop
mov
out
mov
aam
lock
mov
dec
rcl
xor
fcom
push
cs
add
mov
clc
or
inc
mov
or
adc
xor
in
jb
movsb
adc
pushf
pop
in
arpl
jecxz
dec
pusha
mov
xchg
mov
adc
push
fldenv
cltd
jecxz
inc
mov
insl
jne
imul
push
pop
sbb
pushf
xor
cmp
test
dec
dec
pushf
xchg
inc
pop
xor
and
xorb
push
pushf
pop
cmc
jne
pop
inc
dec
loop
in
std
push
adc
mov
xor
dec
cld
fsubs
leave
jmp
add
out
jmp
xor
sbb
push
push
mov
adc
pop
clc
add
mov
lods
add
pushf
outsb
sub
adc
sahf
and
sub
outsb
xor
inc
cmp
aad
xchg
hlt
mov
or
sbb
xor
loopne
clc
sahf
test
fiaddl
movsl
inc
lock
sub
push
fidivrs
jnp
or
sbb
add
xor
outsl
loope
aad
mov
aas
fstp
lret
cs
movsl
push
std
das
push
data16
lock
pop
sbbl
and
lock
fcomi
daa
stc
sahf
jbe
movsb
sub
pop
add
lcall
sub
mov
pop
mov
xchg
mov
iret
js
jb
std
push
nop
jg
cmpsl
lret
sub
pop
hlt
pusha
mov
add
scas
xchg
dec
movsb
cmpsb
movsl
aaa
lea
scas
mov
add
jo
orl
fiaddl
pop
test
iret
aam
fwait
push
fisubrl
xlat
dec
mov
pop
movsl
cmp
addb
jecxz
jge
icebp
iret
mov
pop
iret
jne
xor
mov
pusha
xchg
test
sub
inc
sub
aas
sub
mov
stc
scas
pop
and
out
jmp
outsl
and
push
sbb
int3
ret
ss
sub
stos
and
mov
adc
push
sub
jmp
add
inc
in
push
cmc
shll
popf
add
cli
mov
xchg
dec
daa
rclb
aaa
inc
fs
int3
ss
pusha
jo
ficompl
mov
add
nop
aad
imul
push
xchg
and
dec
scas
or
arpl
arpl
xor
inc
fs
fsubrl
int
sub
out
push
xchg
inc
lods
into
pop
xor
mov
int3
jae
imul
mov
inc
dec
and
shr
std
mov
dec
insb
movsb
dec
cmpsb
mov
test
mov
iret
inc
dec
popf
jnp
std
inc
pop
orb
out
xor
xchg
rcrl
mov
dec
fstpl
cltd
nop
add
or
cmp
in
repnz
subb
into
inc
xchg
push
or
push
pop
test
aaa
mov
lods
mov
mov
scas
xor
iret
flds
mov
insb
xchg
ret
add
jns
stos
mov
push
add
add
adc
popf
mov
cwtl
jbe
and
fstps
and
sub
xor
cmp
ds
outsl
xchg
hlt
mov
xor
in
in
in
sbb
add
mov
ss
jbe
sbb
push
or
adc
jp
ret
xchg
arpl
add
std
sahf
fidivs
mov
dec
cmp
pop
and
hlt
pop
add
push
and
lods
pop
pop
out
mov
xchg
cmp
push
in
mov
cli
mov
mov
loop
pop
inc
fwait
addr16
cmpsb
fsubrl
push
and
scas
add
seta
mov
mov
mov
mov
adc
inc
push
dec
insl
setbe
and
cmp
mov
jle
add
xchg
iret
filds
xor
sti
rcrl
stos
adc
popf
into
sub
jg
xchg
mov
aad
mov
or
imul
loop
adc
adc
iret
add
sbb
cli
add
cmc
ss
int3
outsl
sbb
fldenv
sbb
fldenv
cmc
out
arpl
cmp
cmp
call
xchg
jge
push
cwtl
xchg
frstor
sbb
or
jecxz
sti
mov
mov
sbb
pushf
mov
fimuls
and
cwtl
cmp
mov
les
cld
and
idivl
fildll
cmp
jecxz
mov
mov
or
subb
and
inc
push
mov
ret
jbe
dec
xchg
out
push
in
cmp
cmp
and
jb
mov
cmc
lret
orl
iret
out
bound
arpl
xor
and
jecxz
sbb
sahf
ds
mov
or
fdivl
push
popa
pop
mov
fstps
jb
jmp
or
add
lret
push
in
cmp
push
stos
cwtl
out
cltd
enter
repz
cwtl
sbb
inc
lahf
and
gs
in
mov
loop
loop
fdivrp
fwait
das
in
push
fistps
jno
fstpt
fidivl
lcall
add
adc
call
add
addr16
xchg
fnsave
sub
sbb
mov
gs
stc
sub
in
loop
rcl
mov
inc
fistl
aad
jmp
imul
fs
pop
xchg
pop
ja
cmp
inc
fs
int
push
loop
add
sub
cmp
sbb
or
and
into
popa
andl
aad
aas
inc
pop
xorb
lahf
sub
add
jo
mov
out
push
lret
pusha
das
jmp
pop
not
es
add
jo
push
shll
sbb
sarb
mov
or
lret
rcrb
pop
lret
in
int3
inc
jmp
and
cli
pop
test
sbb
add
inc
pop
push
test
cmp
cs
arpl
sbb
lret
rcrl
inc
jb
bnd
lahf
and
lods
or
mov
les
icebp
dec
mov
and
movsl
add
jmp
xchg
push
leave
lret
inc
lret
jno
mov
cmp
loopne
pop
aaa
inc
push
lahf
lret
loope
les
sbb
shl
imul
cltd
pop
mov
int
sti
pop
cmpsl
mov
stc
push
fsubrl
andb
jecxz
push
inc
mov
mov
testl
aaa
aam
cmp
out
icebp
jmp
sub
aaa
jg
lahf
lods
pop
xchg
ljmp
cmpsl
out
mov
orb
xchg
fsubl
mov
fs
jno
inc
stos
int
nop
std
push
dec
mov
mov
inc
cmp
test
aas
xchg
rol
shlb
stc
dec
sbb
icebp
stos
roll
add
cmp
lcall
out
loopne
hlt
xor
mov
sar
out
aas
repnz
lret
add
scas
or
test
dec
out
int
and
inc
cltd
setl
jo
lods
movsb
cmp
push
pop
daa
sti
push
out
mov
xlat
jle
xchg
ret
lahf
fldenv
or
sub
add
mov
adc
cwtl
pop
loop
loope
repz
int3
test
mov
decb
jl
jb
insb
xchg
or
call
xchg
or
mov
and
pop
ss
cld
pushf
jle
and
cltd
mov
shl
pop
inc
aaa
add
xchg
out
pop
push
cmp
sbb
lea
inc
loopne
lods
cs
fiaddl
dec
and
inc
pop
cmp
scas
repnz
or
addb
mov
and
sbb
push
adc
and
pop
rcrl
pop
jp
aad
xchg
int3
mov
mov
dec
je
repz
andl
hlt
sbb
rorb
addl
mov
jp
or
test
dec
mov
movl
mov
ret
stc
pop
mov
jno
push
int
mov
outsb
ljmp
inc
pop
jns
pop
arpl
xlat
sub
inc
or
cli
mov
popf
pop
dec
jp
orl
aam
das
loop
or
pop
pop
cmc
push
sub
sbb
cmc
cld
popa
imul
jecxz
insl
lret
imul
and
inc
filds
cmpsl
int
xchg
pop
jp
mov
mov
gs
dec
xchg
pmuludq
rcl
dec
add
add
insl
int
mov
mov
fstpt
iret
sbb
fwait
gs
or
sub
in
popf
inc
dec
das
in
or
out
mov
and
jg
mov
mov
or
jecxz
imul
lods
pop
mul
pop
int
shrb
xor
jge
jle
imul
push
jae
fs
rorl
sub
mov
popa
pop
out
inc
int3
loopne
lea
pop
fdivp
lods
call
mov
test
mov
pop
dec
mov
hlt
jge
add
mov
arpl
xor
push
jno
adc
jbe
sbb
sbb
cmp
das
push
lcall
dec
loope
and
mov
xor
dec
jmp
mov
fdiv
ret
ficoms
xor
in
fdivl
movsl
jmp
fwait
les
cmp
sti
lock
popf
repz
inc
in
and
pop
loopne
mov
jns
lea
in
loop
std
shll
xchg
xchg
pushl
ss
fs
push
dec
popf
pushf
push
stc
mull
rcrl
imul
inc
adcb
xchg
push
or
ror
cmp
and
mov
push
push
bswap
add
mov
jnp
xor
xchg
loopne
sub
pop
ret
loop
xchg
mov
xor
jmp
pop
jne
jmp
sarl
mov
mov
in
pop
inc
and
test
stos
gs
nop
aas
mov
dec
jae
movsl
push
adc
push
adc
sbb
or
pop
popa
fidivl
into
aaa
in
jecxz
jmp
and
ds
rcrb
loop
jecxz
in
movsl
or
mov
in
fs
sub
mov
jmp
inc
fucomp
push
dec
sarb
mov
add
mov
cld
push
and
rcrb
mov
ret
ljmp
out
push
xlat
xor
add
sub
daa
jmp
int3
iret
fnstsw
mov
flds
loope
icebp
or
leave
mov
add
aas
xor
mov
imul
push
dec
aam
mov
cltd
hlt
sbb
and
mov
dec
pop
arpl
adc
aad
inc
call
add
push
push
icebp
xchg
push
cmpsb
and
data16
xor
fimuls
push
mov
mov
mov
mov
flds
int3
inc
js
pusha
bound
test
mov
imulb
jbe
lock
clc
test
pushf
lods
cmc
push
jbe
pusha
into
imul
andb
loop
leave
add
cmpsl
mov
outsb
notb
jne
lea
lret
stos
mov
lret
jge
rcrl
and
loop
iret
test
aas
sbb
je
add
imul
popf
inc
mov
xor
out
inc
call
and
movsb
mov
cmp
pop
stc
fwait
and
inc
imul
fnstenv
out
jbe
cs
stos
repnz
add
jns
int
pop
push
inc
in
lret
fstps
inc
gs
shll
aad
inc
mov
sub
scas
int3
outsl
pop
xlat
out
aam
out
sbb
stos
lods
push
add
cmp
shll
idivb
mov
fidivrs
jg
fs
pop
fwait
inc
or
test
lea
fisubs
mov
sub
jnp
xor
dec
add
inc
aas
jl
cs
pop
sub
int
jb
mov
fstps
mov
popf
mov
imul
mov
pop
fwait
xchg
sub
int3
add
jl
xchg
aad
lahf
movsl
std
add
push
mov
aam
sbb
in
push
add
push
pop
scas
rcl
add
pop
insb
ljmp
inc
cmp
lock
mov
in
lods
int
cld
shll
add
enter
push
xor
in
nop
fisttpll
dec
jae
fwait
hlt
sahf
and
das
sub
ja
pop
aad
frstor
sti
mov
lahf
cmp
addr16
dec
xor
sub
pop
push
xor
lret
scas
xor
mov
aad
loop
pop
in
cmp
insb
or
pop
shlb
arpl
out
inc
and
aas
mov
aad
push
sahf
dec
das
mov
fsubl
pop
sub
aad
sub
cmp
pop
adc
pop
fnsave
aad
cmp
gs
popf
and
cmp
xor
fstl
add
xchg
test
lret
stos
or
test
pop
pop
ds
jl
inc
mov
cmp
leave
push
lock
popa
jb
pusha
push
xor
sbb
popa
mov
cmp
shl
mov
fucomi
or
fstp
gs
aad
and
test
xor
ret
dec
fisubrl
lahf
aad
or
xor
adc
mov
add
test
mov
lret
das
or
in
mov
in
push
sub
or
fucomi
shlb
subb
lods
clc
shl
insl
pop
add
ret
cmp
push
icebp
in
jmp
pop
mov
adc
nop
jecxz
rcll
jecxz
fmull
ret
andb
loope
dec
push
jnp
adc
mov
lret
in
jne
or
int3
add
out
push
lret
or
inc
int3
leave
fnstenv
popf
test
xchg
rclb
mov
test
dec
adc
or
ljmp
mov
mov
mov
je,pn
mov
mov
dec
fwait
jno
add
das
dec
sti
gs
insl
gs
inc
mov
pop
mov
dec
sub
fbld
mov
dec
data16
mov
call
in
lret
mov
sbb
ljmp
xchg
repnz
imul
jmp
mov
inc
les
mov
mov
jmp
ljmp
in
xor
pop
xor
or
popa
push
push
cmc
mov
pop
push
sub
cmp
mov
sbb
in
in
dec
imul
sti
sbb
dec
int3
cmp
iret
ss
stos
xchg
mov
sub
pop
fstps
movsbl
xchg
mov
mov
mov
mov
mov
fistps
push
dec
cmc
leave
adc
and
rcl
in
lock
movsl
push
pop
jmp
test
btr
mov
mov
decb
rorl
sbb
xor
xchg
movsl
inc
pushf
rcl
mov
mov
or
or
insb
pop
push
dec
std
jno
dec
rorl
dec
cmp
fs
add
sbb
cmp
in
lock
in
roll
xchg
cmp
fs
or
loopne
and
push
jbe
fisubrs
xor
jo
nop
sub
in
xor
popa
loopw
jbe
cmp
test
adc
add
frstpm(287
gs
sub
mov
or
inc
pop
jp
mov
pop
dec
loop
ds
daa
or
jns
arpl
dec
cmp
jmp
xor
daa
mov
fcompl
repnz
fmull
dec
mov
adc
inc
push
jmp
bound
mov
out
out
xchg
and
or
jmp
repnz
imul
loopne
rcll
xchg
imul
xor
push
mov
lds
in
ret
cmp
fwait
loope
sbb
sub
mov
popf
mov
push
mov
mov
push
call
and
sbb
repz
int3
add
std
or
das
sbb
mov
jnp
add
push
aas
dec
sbb
sarl
pop
sub
repnz
inc
mov
std
push
loope
in
cmp
xor
mov
jo
fdivs
shlb
or
fnsave
mov
xchg
pop
mov
out
cmpsl
sbb
xchg
or
adc
cmpsl
pop
cmp
mov
movsb
sub
test
rcrl
frstor
sbb
fcoms
jmp
cmc
and
mov
cmp
aad
das
rorb
sbb
pushf
mov
dec
shll
dec
cmp
je
pop
popf
sub
movb
in
in
int3
decb
jbe
adc
and
push
clc
popa
jo
arpl
xchg
sub
and
rorb
inc
pop
mov
xlat
add
mov
lods
icebp
imul
fs
mov
pop
shrb
scas
imul
lods
popa
add
mov
mov
dec
or
cmpsl
mov
add
repnz
std
mov
addl
fdivl
dec
xchg
mov
mov
in
push
push
js
xchg
xchg
push
das
mov
inc
popa
mov
push
push
fisubs
in
ret
leave
mov
jge
int3
cwtl
jbe
iret
sbb
fiaddl
mov
faddl
xchg
sbb
aas
pop
inc
hlt
push
push
aad
mov
or
adcb
mov
mov
mov
fisubrs
in
push
in
cltd
out
xchg
lea
mov
shrl
dec
inc
imul
add
mov
sub
test
cmp
nop
loope
sbb
call
pop
dec
sub
outsb
dec
inc
test
jg
jmp
leave
add
fcomip
jnp
jg
sbb
dec
or
pop
iret
mov
adc
pop
inc
add
in
ret
push
xchg
jmp
rclb
and
cltd
jg
sbb
mov
dec
adc
lret
mov
xchg
insl
or
lret
jmp
fisttps
fidivrs
dec
lret
sbb
mov
lahf
bnd
push
movsl
adc
inc
jmp
sub
xchg
jg
mov
ror
fisttpl
mov
pusha
cmp
mov
jne
mov
xchg
pop
mov
cmp
mov
jl
insl
xchg
push
mov
testl
inc
xchg
push
aaa
inc
int3
mov
out
sub
popf
mov
sahf
mov
cmc
repnz
xchg
mov
fs
imul
mov
or
or
or
outsl
in
dec
icebp
sub
sti
or
or
not
or
dec
out
js
add
push
lcall
dec
sub
push
add
cmp
mov
jmp
pop
jb
jmp
out
in
mov
pop
cmp
sbb
or
dec
or
iret
shlb
inc
or
iret
test
rolb
imul
clc
daa
ljmp
mov
pop
dec
pop
aam
lret
dec
rorl
push
stc
iret
adcl
cmc
rcr
fistps
repz
bound
jle
jmp
mov
int3
dec
test
dec
aam
cmp
out
dec
rorb
jmp
ret
cmc
lods
aam
test
fxch
popf
imul
test
add
inc
mov
cltd
adc
out
pop
insb
test
jnp
dec
pop
pop
aad
cmp
sub
sub
mov
adc
ljmp
jmp
push
in
popf
jg
fnop
pop
dec
rolb
addl
dec
xchg
jl
fucom
xchg
sbb
dec
jns
cmp
xchg
mov
shlb
lahf
dec
xchg
sub
jb
iret
add
imul
pop
pop
mov
cli
scas
jns
rorl
mov
pop
repnz
cld
add
test
mov
int
sub
sti
cmp
dec
mov
dec
mov
test
iret
lret
ret
push
dec
sbb
mov
imul
cmp
gs
ret
popf
int3
push
fimull
popf
iret
adc
rclb
pop
jo
mov
bound
movsl
jge
mov
cmp
jo
sub
aam
imul
stos
lret
xchg
pop
add
repz
xchg
fsubp
push
leave
cmc
and
mov
push
xchg
test
sub
test
dec
push
ljmp
cmpsb
pop
mov
gs
pop
aad
mov
pushf
movsl
and
jecxz
iret
nop
pop
xchg
add
cmp
dec
imul
mov
xor
push
jle
add
ret
pop
xor
pop
adc
cmp
xor
dec
mov
or
fdivl
push
repnz
test
adc
dec
mov
ljmp
sub
or
mov
mov
jle
dec
mov
mov
scas
xchg
ds
push
roll
dec
ljmp
in
push
mov
pop
gs
or
cmpsb
orb
out
hlt
lods
ficoml
fisttps
leave
fsubs
sub
out
lret
push
movsb
adcl
sub
add
mov
or
push
add
mov
sbb
inc
fs
fstpl
dec
xor
mov
lock
aad
mov
cmp
shlb
gs
iret
in
cld
push
shl
cmpb
bound
xor
xchg
sub
mov
cmp
push
xchg
xchg
ret
stc
cmp
fistl
jecxz
mov
pop
xlat
or
sub
add
gs
jmp
jg
dec
movsb
movsl
out
lret
xchg
lret
ja
mov
test
xor
leave
sbb
jno
or
mov
outsb
aad
push
cltd
sbb
dec
fsubp
push
cmpsl
cmp
ret
leave
sub
jmp
jne
aam
out
jno
sub
and
inc
out
imul
pop
cmpsb
push
loope
and
or
bound
xchg
fwait
dec
mov
and
jl
jno
in
mov
adc
lret
hlt
bnd
dec
pushf
inc
sbb
fsubr
adc
js
loopne
fisubrl
inc
out
lock
xlat
pop
psllw
and
xor
mov
in
repnz
fwait
leave
aam
xchg
ror
das
dec
rol
mov
lea
arpl
or
fstp
jne
mov
and
mov
outsl
lock
aaa
movsb
pop
jecxz
outsl
dec
loopne
or
or
mov
xor
scas
lods
mov
sub
ds
pop
inc
or
pinsrw
dec
xchg
xchg
movsb
xchg
or
sbb
shll
mov
mov
cmp
inc
icebp
dec
xchg
pushf
xor
xchg
add
sbb
jb
insl
mov
xor
call
leave
lret
mov
gs
shl
pop
out
fwait
rclb
out
clc
cmc
cmpsl
in
lret
inc
cmp
jecxz
cmp
imul
xor
movsb
mov
lahf
xchg
and
cmp
iret
dec
mov
clc
add
add
stos
addb
xchg
arpl
xchg
lret
aam
popf
jge
shrb
pop
les
pop
repz
mov
push
sbb
inc
cs
mov
nop
out
gs
inc
stc
dec
push
cli
repnz
loopne
bound
fists
aad
shll
fcmovnu
mov
mov
adc
loop
pop
inc
fbstp
sahf
mov
pop
jl
xchg
xchg
jmp
xchg
enter
jl
loope
xor
jns
xchg
lea
mov
mov
sti
cmp
out
in
mov
or
inc
jmp
xchg
or
das
out
push
or
int
fwait
aam
sbb
mov
imul
jp
xchg
test
inc
sub
mov
nop
aam
xchg
mov
or
sbbb
mov
inc
out
mov
jb
imul
sub
push
das
rcrl
dec
mov
xor
imul
fistl
scas
jle
mov
adc
sbb
push
ret
fisttpl
jbe
sbb
cmp
test
sub
repnz
loope
xchg
sbb
mov
outsb
xorb
lret
jl
add
and
movsb
xor
xchg
sbbb
push
sarb
outsb
mov
mov
sub
testl
outsl
jmp
stc
jae
sub
or
dec
pusha
or
jg
cld
or
scas
lods
orl
pop
cltd
mov
add
lcall
cmp
arpl
into
cmc
aad
lds
filds
mov
and
imul
mov
xor
popf
pop
andl
push
rolb
popf
sbb
icebp
sbb
lahf
lock
gs
and
test
dec
dec
or
addr16
gs
pop
pop
sahf
sahf
adc
std
stos
out
and
into
sub
jecxz
xor
aam
or
fdiv
sbb
pop
aas
enter
imul
jne
mov
push
imul
push
or
in
fimuls
sahf
leave
fcmovne
pop
mov
je
and
mov
lret
aas
xchg
fnsave
lock
xchg
aaa
outsb
inc
out
adc
push
or
pop
in
aad
jne
popa
arpl
mov
ja
jnp
fisubl
outsb
xchg
mov
bound
cltd
fs
rcr
mov
xchg
xor
lock
push
insb
ficoms
jmp
fcoml
mov
pop
jns
jg
dec
jne
scas
std
shl
jae
popa
fs
nop
pop
xchg
divl
and
in
xor
jge
cli
popf
bswap
mov
push
aad
jg
ftst
in
adc
pop
mov
mov
inc
pop
and
mov
paddsb
movsb
lock
xchg
xchg
mov
int3
mov
call
rcl
lret
dec
push
push
shrb
ljmp
rcrl
call
mov
fnstcw
push
jge
sahf
mov
in
sbb
inc
int
mov
arpl
js
xor
arpl
aas
push
movsl
int3
dec
in
out
jns
mov
jg
add
push
lods
imul
out
aad
movsb
mov
sti
inc
bound
pop
aad
xchg
push
pop
sbb
xchg
pop
andb
iret
dec
dec
mov
or
adc
movsb
inc
mov
movsl
xchg
inc
ret
sub
and
lea
mov
lret
jge
xlat
dec
insb
out
movsb
cmp
push
cmc
mov
mov
pop
add
icebp
cld
imul
loopew
push
pop
sub
mov
pop
and
int
jl
dec
lcall
lea
sbb
xchg
jmp
test
cltd
sub
jno
xchg
pusha
sbb
cmp
cmp
and
test
lcall
push
xchg
movsl
insl
inc
popf
pop
std
test
popf
pushf
mov
cmp
in
loop
dec
mov
mov
loopne
mov
insl
mov
fistpl
fwait
leave
push
mov
mulb
pop
and
adc
cltd
pop
loop
hlt
das
lods
fbld
mov
ret
les
popa
sti
lret
popf
push
push
outsb
mov
sbb
cmc
inc
enter
mov
xchg
push
mov
dec
bound
jnp
ret
mov
aam
into
xor
aas
jmp
cld
shr
xchg
ds
fucomip
jecxz
loop
das
cmp
inc
std
jae
xor
dec
xchg
add
pop
fistps
add
inc
in
sbb
in
mov
cmpsl
fisttps
sti
push
hlt
push
hlt
xchg
jmp
outsb
dec
add
lods
add
lods
aad
pop
dec
pop
loope
cmp
sbb
aaa
cld
xchg
dec
pop
dec
add
movsl
pop
ret
or
filds
or
ss
stos
xchg
jp
fldenv
xchg
fs
shlb
adc
insb
or
in
loope
jecxz
pushf
dec
rcr
add
add
push
add
aad
xchg
rcl
insb
mov
outsb
popf
and
enter
in
int
mov
out
add
mov
xchg
lea
push
dec
mov
arpl
shll
mov
add
fists
sub
dec
sub
vpaddusb
or
cmp
es
popf
jmp
and
cwtl
movsl
mov
sbb
leave
mov
add
test
popa
mov
or
cmpsb
icebp
xchg
push
xchg
cmc
xor
xor
pusha
inc
lods
push
or
mov
jmp
pop
mov
cmp
pop
mov
hlt
jns
mov
push
sbb
mov
loop
fs
lods
lods
in
inc
cmp
and
fmul
lcall
hlt
dec
pushf
cmpsb
enter
call
enter
rclb
fdivrs
out
fucomp
or
mov
movsb
shlb
sbb
in
sarl
in
popa
shl
or
xor
sahf
cmpsl
cmp
mov
xchg
movsb
dec
in
pop
loopne
pop
stos
mov
pop
rcr
call
cwtl
cmp
xchg
mov
xor
ja
pop
xchg
rolb
ja
int3
jg
outsl
cmp
and
addr16
cmp
rolb
jg
pop
roll
add
wbinvd
iret
leave
push
mov
sbb
sbb
ret
jnp
push
cltd
pop
call
fs
and
inc
xor
mov
push
cld
mov
add
add
dec
ja
cmp
ret
ror
or
add
mov
test
das
dec
cmp
fsubl
mov
sbb
les
test
lret
cmp
xchg
mov
ret
scas
mov
jo
jge
jg
scas
jecxz
adc
sbb
das
fists
addb
inc
cmp
jbe
add
lahf
ss
jl
bound
pop
or
pop
mov
sbb
aas
pusha
fisubs
mov
fs
aad
mov
xchg
ret
mov
fisubrl
hlt
test
negb
stos
dec
jge
mov
sbb
popf
fcmovne
cmp
jo
ret
jge
arpl
ror
aad
popa
bound
mov
add
pop
shll
and
data16
push
movsb
and
aad
scas
jecxz
add
mov
loop
sbb
fyl2x
shl
cmp
fdivr
fsub
cmpsl
lret
jl
int
jg
dec
loop
mov
ds
test
cmc
adc
lret
imul
xor
push
mov
pop
cmp
insb
out
xchg
jge
or
or
mov
jg
fimull
nop
pop
movsb
loop
lret
cmp
repnz
xchg
push
push
pop
jg
jns
jb
pop
negb
pushf
add
xchg
xchg
pop
pusha
ljmp
int
addps
xor
fldenv
mov
into
mov
subb
jmp
add
mov
scas
xchg
ds
sbb
mov
in
fmulp
mov
test
dec
insl
mov
filds
cmp
cs
sti
outsl
iret
add
into
sub
or
xchg
mov
pop
inc
jl
or
push
mov
mov
dec
jmp
ret
out
fs
or
jmp
adc
xchg
ja
cmp
pop
aas
xor
sub
gs
cmp
add
lret
pop
pusha
xchg
mov
pop
mov
lcall
mov
leave
xchg
arpl
add
fwait
jmp
cli
insl
movsl
mov
mov
stos
mov
push
outsb
repnz
imul
lds
subb
adc
fldcw
repnz
pop
push
mov
testl
push
xchg
fcmovbe
mov
pop
pop
addr16
or
dec
sub
and
mov
mov
psraw
cmp
nop
jle
xchg
inc
cwtl
xlat
cltd
fdivrl
std
mov
mov
inc
mov
sbb
jo
stos
lods
or
cld
jb
subb
cli
leave
ror
sbb
test
mov
sub
mov
sahf
cmp
ret
and
cmp
push
xor
jmp
shrl
xchg
into
fiaddl
push
add
lret
inc
cmp
jns
cmp
jle
adc
jl
mov
sahf
std
test
loope
sub
fbstp
jle
cmp
add
pop
lcall
ds
rcr
sub
push
inc
mov
jmp
cltd
sub
adc
aas
dec
mov
mov
and
aaa
scas
aas
daa
or
dec
std
xchg
cltd
sbb
mov
pop
cli
in
ljmp
mov
aad
or
dec
in
pop
and
fldenv
imul
lret
hlt
cmpsl
dec
add
subb
sub
dec
iret
inc
lret
xor
adc
push
inc
push
jmp
aas
cwtl
pop
adcl
cmp
mov
das
sub
data16
push
pop
mov
out
or
push
fidivrl
prefetch
in
aas
inc
inc
dec
cld
sahf
inc
add
add
ficompl
sub
divl
shll
cmp
cmp
fnstsw
push
outsl
push
cmp
ret
ret
or
sub
mov
test
sbbb
push
cwtl
add
out
nop
popl
sti
fwait
pop
out
bound
movsb
sub
fs
aaa
or
mov
aas
sub
jge
les
sub
outsl
inc
outsb
cltd
inc
addb
mov
fstpt
mov
cmp
inc
cmp
and
push
arpl
sub
testl
sbb
shlb
cs
cmpsl
loope
xor
cmp
mov
xor
add
es
mov
mov
jae
or
sbb
inc
stos
add
imul
adc
stos
leave
sub
or
sbb
mov
imulb
rcrb
loopne
push
push
movsl
cli
push
test
jge
cltd
cs
sti
pop
jo
shll
push
push
jne
push
sbb
inc
jo
or
cs
lods
xor
icebp
repnz
jmp
sub
in
in
movsl
xchg
mov
jae
imul
mov
pop
cmp
cmpsb
das
push
lret
in
cmp
and
mov
fdivrl
sbb
loop
inc
and
sbb
xor
int
or
push
int3
lea
mov
cmp
xor
push
insl
sbb
std
push
mov
es
sahf
push
add
dec
inc
arpl
mov
adc
mov
xor
iret
out
jg
dec
dec
adc
fistpll
lahf
mov
aam
ljmp
jp
lahf
mov
cmp
xor
mov
jo
inc
mov
adc
or
fisubl
cmp
in
les
inc
les
or
mov
adc
scas
popa
jmp
into
out
in
or
repz
inc
dec
sbb
xor
int3
bound
nop
aam
shrl
andl
sar
jg
mov
in
lret
test
cmc
popa
inc
ret
mov
out
imull
fldcw
inc
lret
fnsave
pop
push
in
mov
int3
int3
inc
cli
mov
push
cmpb
int3
add
outsl
sub
pop
sbb
mov
mov
arpl
mov
dec
or
adc
and
shll
aaa
movsb
inc
add
cli
cmp
hlt
into
adc
and
sub
mov
push
inc
call
cmp
loop
sub
fiadds
and
jo
dec
int
jge
loope
loop
insb
ljmp
lahf
fs
hlt
sbb
addb
jb
cmpsb
cmp
sbb
push
pusha
inc
push
fisubrl
into
mov
sbb
cmc
std
dec
aam
sub
or
inc
jne
jmp
inc
or
mov
int
pop
dec
cld
fldl2t
mov
popf
mov
xchg
push
dec
sbb
sbb
fs
xchg
sti
mov
and
push
mov
lods
mov
sub
or
out
adc
mov
lret
jg
lds
mov
push
pop
inc
in
sbbb
push
jne
cltd
je
movsl
movsl
arpl
cmp
pop
pushf
sbb
add
aad
fisttpl
fisttpl
or
mov
in
push
call
ret
jle
or
out
jmp
push
cwtl
test
mov
xchg
sarl
in
mov
iret
jae
dec
cmpsl
sti
sbb
in
inc
xchg
mov
cmpsl
and
rorb
fs
push
fwait
ljmp
pusha
sar
test
xchg
inc
bound
lahf
inc
rdpmc
cmp
mov
sub
ds
dec
subb
push
push
leave
fdivs
cmp
sub
out
ror
add
imul
xchg
jae
dec
or
fimuls
mov
mov
pop
popa
pop
xor
decb
sti
push
mov
inc
dec
lahf
insb
lds
inc
xchg
lods
mov
shr
imul
ss
fisubs
imul
movsb
or
ror
ljmp
imul
mov
cmp
inc
ja
cs
hlt
push
inc
xchg
in
and
mov
and
dec
cld
dec
dec
or
mov
popa
bound
scas
cmc
int3
repnz
or
popf
mov
fsubrl
pop
push
ret
stos
mov
and
incb
lods
mov
aad
pop
xchg
mov
inc
add
sti
pop
cmp
jnp
imul
mov
js
jo
testb
jle
add
cmp
add
mov
mov
test
into
fucomip
inc
lret
jecxz
xor
and
sub
or
cli
int
inc
xchg
mov
fstl
mov
movsl
jg
sub
cli
jae
push
lods
lods
mov
insl
movsl
inc
add
inc
sub
cld
add
das
ficoml
addr16
push
mov
cvtdq2ps
inc
lret
lret
adc
out
mov
loopne
sahf
into
mov
repnz
outsl
arpl
or
xorb
xchg
outsb
popf
dec
or
in
push
dec
and
or
push
xchg
dec
push
jmp
or
scas
pop
mov
inc
daa
aaa
adc
das
outsb
sahf
not
dec
xor
or
fisttps
shrl
inc
push
push
xor
mov
jns
lcall
xor
mov
iret
and
test
cmp
lret
dec
andl
push
dec
push
push
cld
cmp
cwtl
idivl
jb
or
int
dec
inc
sbb
addb
cmpsl
scas
lret
or
dec
dec
fstp
sti
fsub
cld
cmp
repnz
call
clc
xor
out
adc
mov
pusha
lret
daa
xor
jnp
sbb
ret
in
in
mov
outsl
and
add
mov
rorl
mov
ret
sahf
js
cmp
mov
dec
jmp
cmc
fdivl
and
or
cmp
popa
push
jae
mov
fiaddl
out
or
fsubs
jecxz
ret
loopne
rorb
xlat
lret
mov
add
ss
jae
aad
subb
ret
or
ficoml
loope
in
lret
or
mov
testb
fnstcw
std
data16
outsb
lods
jb
loop
outsl
pop
lret
outsl
stos
cmp
push
aam
cli
add
lret
inc
push
aad
sub
jecxz
cltd
jae
call
pop
in
aaa
xchg
pop
push
pop
inc
ret
lret
fwait
andb
fsubrs
pop
add
int3
adc
add
dec
int
mov
adcl
xchg
xchg
inc
mov
call
cmp
out
repz
mov
mov
push
stc
mov
imull
add
repnz
pop
in
cmp
lea
jns
sbb
add
xor
xorb
popa
cmp
jne
test
jns
dec
addr16
int3
mov
in
cmp
testb
mov
dec
adc
iret
adc
pop
mov
mov
dec
xchg
mulb
dec
xchg
clc
and
stos
test
fildll
add
push
test
mov
insb
sbb
ja
mov
add
aaa
iret
jl
and
iret
fisubs
ljmp
out
loop
fnsave
rcll
sbb
out
jecxz
int3
sti
out
xor
sbb
out
fdivs
push
cmc
pop
add
outsb
sbb
movsl
dec
xchg
in
cmp
ds
aaa
repnz
adc
push
loop
sar
mov
clc
mov
jmp
push
je
std
mov
movsb
movsb
stos
add
aaa
or
lds
mov
xchg
xchg
xor
dec
insl
inc
test
and
mov
sahf
inc
arpl
inc
jg
xor
dec
hlt
into
jb
inc
fwait
inc
cs
dec
inc
lret
fbstp
jae
mov
gs
lahf
repz
aad
sbb
pop
mov
mov
fimuls
aas
ror
jmp
dec
ret
movsl
test
xchg
in
jg
lret
cmpb
fisubrl
mov
cmc
xchg
mov
push
and
dec
or
lea
add
and
cmpsl
xorb
cmpl
outsb
pop
insl
push
ret
lds
mov
xchg
icebp
lret
mov
fdivl
fs
push
lahf
xor
out
test
or
add
int3
mov
pop
lret
cli
inc
xlat
aam
mov
jp
testl
popf
pop
adcl
cmc
std
push
jge
xor
fs
std
popf
rcr
and
filds
mov
mov
mov
dec
mov
lock
mov
add
push
cld
add
dec
aad
mov
add
jns
ljmp
popf
js
ja
dec
mov
jmp
iret
lahf
repnz
out
pop
out
stos
mov
sub
fstp
mov
popf
xchg
push
gs
lea
movsl
xchg
call
shlb
mov
sub
stc
fsubl
mov
jecxz
repnz
loopne
inc
inc
push
mov
rcrl
mov
sti
sbb
in
in
loop
push
inc
mov
lahf
shll
rcr
mov
int3
add
mov
lods
cmc
sbb
pop
mov
movsl
sub
mov
sbb
cli
xchg
adc
movsl
mov
xchg
iret
sbb
call
sahf
fcompl
dec
and
aam
and
jo
ret
ret
cld
xchg
aad
std
push
std
dec
fistl
mov
add
cmp
loop
add
inc
mov
cld
int
jge
lret
jmp
dec
cmp
popa
fidivs
add
jmp
aad
xchg
test
mov
rolb
repz
std
push
adc
in
f2xm1
xchg
mov
inc
push
inc
push
jmp
push
sbb
popf
in
cmp
cwtl
cmp
jae,pn
mov
push
mov
pop
rorb
push
dec
enter
and
testb
or
mov
ja
jno
adc
repz
pop
fbld
shrb
and
mov
into
inc
mov
fcmovnb
jne
bound
pusha
sub
pushf
cmp
imul
mov
negl
shr
add
xor
xchg
js
push
mov
rcl
pop
jecxz
fstps
mov
repz
addr16
and
fcmovu
inc
jb
mov
sbb
lock
in
lods
aad
adc
out
fiaddl
test
jl
add
ficoml
mov
mov
or
xchg
mov
fiaddl
mov
cmp
sub
and
stc
in
loope
and
xchg
fdivl
adc
lret
sbbb
xchg
or
mov
sub
cli
mov
imul
aaa
pop
pusha
cltd
movsl
jae
inc
mov
bound
pop
rcrl
adc
sub
xchg
xor
pop
neg
mov
jo
nop
icebp
mov
and
jns
scas
out
and
jne
outsl
mov
loope
in
hlt
xchg
test
pop
add
dec
sahf
jbe
imulb
outsl
call
shr
fcompl
adc
mov
pop
fmuls
jne
xchg
jno
movsl
jecxz
fdivrs
fnstcw
xchg
fstpl
ret
enter
repz
sub
loop
push
imul
adc
inc
or
fisttpll
popa
repz
cmpsl
and
sti
or
in
cmp
stc
mov
push
gs
xchg
jge
out
sbb
aad
repnz
mov
aam
xchg
jmp
inc
lret
popfw
shr
xlat
in
gs
lret
in
test
cmp
lcall
fs
lret
sti
lds
test
in
mov
jno
add
mov
int3
lahf
mov
dec
mov
mov
lahf
add
out
loop
fldenv
add
fwait
push
scas
mov
sti
cmp
insl
or
fidivrl
xor
cmc
push
in
adc
xchg
sub
out
data16
lret
inc
sub
push
pop
popf
iret
xor
xlat
xchg
ret
cmc
and
inc
repnz
xchg
aad
xor
xchg
sti
int
lea
divl
mov
push
xor
xchg
stos
push
lahf
int
cmp
sbb
loopne
mov
or
loopne
inc
jb
stc
adc
pop
or
aad
xchg
lods
mov
pop
test
push
add
hlt
jg
ja
push
mov
rorb
sbb
pop
ljmp
sbb
testb
push
and
xor
sub
jmp
mov
cmp
aad
add
push
test
add
sub
pop
or
pop
adc
add
jmp
xor
jecxz
stc
fwait
popa
mov
mov
mov
jge
mov
pop
test
aaa
shrb
shr
insl
inc
xor
ja
sarb
test
dec
and
jb
pusha
mov
mov
sub
fs
cmp
jl
call
cmc
test
xor
jne
pop
cli
stos
jb
or
scas
lcall
mov
xchg
cmp
mov
xor
ss
mov
inc
xor
jge
or
pop
jle
dec
mov
out
pop
cmp
stos
aad
lcall
in
cwtl
in
mov
add
cmove
out
in
es
inc
sub
inc
cmp
mov
cmp
arpl
fcmovne
loope
jo
stos
mov
inc
sar
ljmp
push
sub
stos
add
insb
gs
pop
out
mov
add
and
adc
fldl
lret
into
push
in
fnstenv
test
push
sbb
inc
incl
out
cmp
adc
mov
bound
stos
mov
test
push
repnz
stos
pop
stos
mov
mov
xor
sbb
mov
mov
inc
sti
lock
inc
mov
inc
jb
push
xor
out
cmc
sub
movsb
add
mov
pushl
imul
jo
aaa
mov
cld
mov
lds
sahf
shll
fsubrl
xor
push
lock
insb
mov
rcl
add
pop
and
mov
dec
movsl
jo
pop
insl
movsl
xchg
dec
cmpsl
mov
lds
pop
insl
movaps
pop
sub
cmc
mov
pusha
js
cli
jae
fwait
add
shlb
jl
test
testb
pop
pop
in
sahf
adc
call
cmpsb
ret
adc
divb
addr16
in
mov
and
outsb
inc
xor
mov
and
sub
sub
cli
cmp
pushf
jns
outsb
inc
les
repz
jmp
mov
pop
movsl
mov
sbb
repnz
out
popf
inc
inc
cmp
jbe
sbb
xor
in
cmp
mov
xchg
cs
sbb
mov
mov
pop
xchg
lods
std
pop
pushf
add
sbb
inc
mov
bound
xor
push
dec
sub
push
inc
lea
cmp
hlt
lock
mov
sub
popf
fdivr
scas
nop
dec
xchg
leave
inc
in
push
add
xchg
fmull
push
nop
mov
fndisi(8087
and
movsb
xor
leave
in
adcb
push
fs
sub
test
popf
mov
and
out
divl
mov
dec
movsb
lock
xchg
xor
or
cld
divl
push
shrb
push
add
xchg
jo
decb
xor
add
xor
jb
mov
clc
mov
sbb
push
scas
insl
enter
fdiv
test
xor
xchg
pop
xchg
sub
rolb
mov
sbb
insb
add
inc
shlb
jl
out
mov
fisubs
arpl
mov
and
or
imul
in
adc
clc
lret
loop
scas
lcall
imul
mov
fcoms
adc
push
jecxz
flds
sti
pusha
loope
cmpl
ds
jmp
and
fs
sti
pop
xlat
out
push
jnp
sbb
ja
ret
mov
stc
int3
call
xchg
jno
push
mov
push
lahf
add
jmp
lds
shlb
cld
call
cmp
sub
or
mov
or
pop
cmp
into
sub
aas
daa
cwtl
cwtl
into
das
cmc
adc
xchg
gs
inc
test
jge
insl
leave
imul
mov
xlat
test
outsl
mov
gs
lret
mov
add
mov
aad
jne
jmp
add
gs
push
cmp
out
push
push
mov
lret
loop
pop
fsts
mov
popf
fwait
push
leave
mov
jne
shlb
mov
pop
idiv
rclb
mov
mov
cmpsl
faddl
mov
in
inc
mov
out
adc
and
push
inc
leave
sbb
ljmp
hlt
xlat
aam
fisttpl
xchg
loope
outsb
mov
mov
adc
bound
inc
jnp
cmpsb
addr16
xchg
sar
dec
jecxz
icebp
push
rorb
int
pop
repnz
sub
cmpl
dec
jb
imul
out
data16
test
xlat
jecxz
cltd
fsubrl
in
cs
cld
es
psubsw
add
xchg
or
mov
mov
inc
in
bound
shlb
sub
jno
rolb
xor
xchg
mov
in
sbb
fstpt
pop
add
sbb
movsl
add
iret
lods
cmp
mov
and
dec
adc
push
mov
xchg
nop
and
rcr
popf
or
push
test
add
cmp
cmp
in
mov
aad
hlt
insb
inc
imul
xchg
jecxz
shl
iret
jl
icebp
popa
cmp
fsub
inc
jne
rcll
cmp
gs
fs
xchg
ds
lret
mov
jmp
mov
and
jmp
pop
into
ljmp
inc
dec
lret
mov
mov
cmp
cmpsl
sub
sbbb
aam
mov
loop
bound
lahf
pop
mov
icebp
mov
lret
shll
mov
cltd
add
arpl
data16
lahf
pop
popf
bnd
loope
lea
xchg
or
jno
sahf
or
dec
dec
cli
sub
fucomp
mov
test
add
mov
mov
inc
das
xchg
or
repz
push
mov
add
cs
pop
fmull
pop
dec
pop
bound
cwtl
shll
mov
pusha
push
jmp
sbb
movsl
aad
push
mov
mov
jbe
movsl
add
insl
lcall
inc
pusha
sub
outsb
rcll
adc
mov
stos
sti
icebp
push
jg
movsl
or
flds
mov
push
lcall
push
cmpsl
pop
dec
adc
mov
inc
mov
xchg
mov
iret
fidivs
cmpsl
das
call
push
dec
sti
mov
jmp
lret
sarb
pop
cmp
mov
mov
out
adc
push
pop
sti
idivl
imul
outsl
inc
scas
repz
mov
mov
sbb
rcr
lods
icebp
int3
shrb
xchg
mulb
lret
sub
sbb
mov
stc
dec
add
mov
xor
fs
cmp
flds
mov
cmp
das
popa
pop
mov
popa
jno
js
mov
fcompl
xor
and
add
pushf
fwait
scas
movsl
jae
inc
cwtl
or
in
jge
lahf
mov
xor
adc
in
add
inc
mov
mov
mov
pusha
pusha
sub
dec
shrb
adc
test
ljmp
xor
mov
fs
adc
movsb
push
loop
mov
mov
aaa
aam
loop
inc
out
push
dec
xchg
and
iret
sbb
and
mov
cmp
mov
push
mov
arpl
push
mov
in
mov
std
inc
pop
lahf
jo
mov
imul
jecxz
ljmp
fstp
mov
jmp
stos
sar
jno
inc
fnstenv
mov
dec
lret
popf
lcall
rol
push
add
dec
cmp
fistl
xlat
shl
aaa
shlb
popa
or
sub
sbb
xor
xchg
and
imul
ss
xor
add
sub
mov
mov
cmp
aam
cmp
push
leave
shl
inc
fs
repz
mov
xor
mov
std
das
sbb
movsl
int3
jbe
sbb
movsb
aam
icebp
cmp
test
arpl
and
add
es
sbb
fisubl
cld
stos
fs
stos
mov
and
loopne
add
add
jmp
out
or
or
repz
pop
stos
or
arpl
out
iret
iret
in
int
jmp
cmp
mov
sbb
iret
call
add
push
xor
rolb
or
sub
xorb
push
dec
lret
popf
cltd
inc
out
inc
sub
enter
cltd
jbe
addr16
xchg
lret
fildll
mov
xchg
fnstsw
ds
movsl
mov
sub
lret
push
in
test
cli
jb
out
xor
sar
xchg
xor
lcall
movsl
ret
add
popa
add
aad
sub
adc
fbstp
movsb
jmp
aad
out
test
les
in
pop
xchg
lret
or
test
mov
lret
mov
pop
mov
jne
mov
cmc
call
and
popa
bound
cli
and
icebp
add
shll
pushf
push
rorb
dec
cmp
fwait
xlat
xchg
sbb
xor
and
sarl
sub
mov
popf
cmpsl
adc
ljmp
sub
xor
dec
insl
aam
pop
insb
fnstsw
cltd
insl
daa
dec
fimull
mov
fs
int
in
ficomps
das
xchg
push
dec
pop
bound
push
rclb
repnz
xor
cmc
fwait
out
imul
fnstsw
fs
mov
or
js
dec
add
leave
pop
out
inc
pop
sbb
outsl
fs
out
aas
mov
nop
roll
adcb
loop
cmp
sub
cmp
cmp
push
repz
cmp
mov
mov
in
in
fs
sti
movsl
pop
sub
fisttps
int
loope
out
push
pop
loope
decb
push
bound
test
jmp
inc
popa
movsl
popa
test
mov
xchg
mov
scas
sub
lret
fldpi
int3
mov
cs
push
outsb
dec
popf
ss
push
stos
mov
mov
adc
bound
pop
in
jecxz
mov
movsb
sbb
movsb
cmpsb
aad
cmp
sbb
xor
fstps
les
dec
mov
loopne
push
cwtl
mov
lock
js
fiadds
jnp
arpl
push
ret
outsl
jecxz
xor
icebp
stos
jae,pt
fdivrl
mov
fdivrl
mov
loop
mov
arpl
jp
out
popf
les
jle
dec
movsl
mov
sti
inc
fsts
or
xchg
movsl
mov
sbbb
fisttpll
je
pop
je
lods
rorb
adc
pop
bt
cld
rcr
mov
add
in
jno
fcompl
or
movsl
push
jecxz
pop
data16
inc
pop
push
xor
or
fisubl
sti
lret
int
loopne
add
fcoml
aam
scas
lret
roll
jge
pop
jbe
cs
arpl
test
jge
mov
fs
add
out
sub
jge
push
jecxz
mov
xchg
pop
adc
dec
sub
call
add
xchg
cmpsb
adc
sub
ficoml
faddl
mov
push
loope
cmc
push
cmp
pusha
inc
movsb
lods
dec
push
movsl
rcll
ffree
mov
adc
jae
popf
shll
or
subb
jp
push
dec
out
sub
cmpb
idivb
add
xchg
fnstenv
mov
inc
cmpsl
inc
adc
test
adc
cmp
inc
hlt
loope
dec
pop
inc
and
push
mov
loop
dec
imul
sbb
mov
dec
sarb
mov
popf
test
add
sub
adc
adc
loopne
pop
shl
pop
xchg
pop
jecxz
mov
ljmp
push
mov
jb
jne
adc
cltd
and
xlat
cli
push
in
insl
ss
lock
mov
fmull
xchg
xor
aas
movsl
add
test
mov
and
mov
mov
rolb
das
or
addr16
sbb
jns
sub
mov
or
inc
test
lods
pop
pop
mov
and
push
lret
xchg
shlb
dec
les
add
dec
and
test
in
out
mov
insl
icebp
adc
lret
push
mov
jge
popa
in
out
gs
push
repnz
fs
lahf
pop
aam
ret
ja
call
xchg
out
int3
test
clc
loopne
mov
cmp
dec
lock
ss
dec
sti
xchg
mov
sti
dec
das
push
dec
cmp
loopne
lret
or
cmc
push
orb
imul
push
mov
mov
je
fwait
cmp
mov
fistpl
cwtl
xor
out
and
inc
pop
add
repz
mov
cli
negb
sbb
fsubp
sbb
dec
in
test
pextrw
push
and
leave
mov
push
leave
popf
sarl
fisubs
inc
push
fistl
out
cmp
xor
jno
jle
push
push
mov
dec
mov
inc
sbb
and
inc
aaa
xchg
fnstenv
test
jecxz
push
mov
mov
stc
pop
outsl
lds
sti
sub
orb
push
mov
push
push
not
xor
mov
cmp
aad
pop
pushf
in
ficoml
ss
in
jne
js
push
and
mov
fnstcw
repz
fucom
xor
and
repz
lahf
int3
fmul
loopne
test
mov
lods
cmpsb
stos
xor
ds
and
xor
dec
xchg
in
idiv
mov
mov
shlb
mov
incb
mov
jo
pop
dec
jb
aaa
lret
aas
jnp
dec
sub
mov
std
dec
mov
mov
rcr
les
in
mov
and
test
mov
inc
push
push
jge
jns
lods
sbb
adcb
test
test
pushf
clc
mov
push
jecxz
jne
orb
inc
das
jo
push
in
sarl
clc
fwait
cmpsb
cmp
inc
shl
push
pushf
lret
negb
jmp
popl
mov
or
xchg
imul
fsubp
jmp
shrb
cmc
push
mov
inc
sbb
cmpsb
das
pushl
scas
xchg
loop
mov
cmpsb
or
in
lods
in
cmp
arpl
dec
pop
les
xchg
mov
pop
movsb
rcr
mov
bound
xor
stos
xor
mov
jo
addr16
pop
test
fwait
imulb
and
sbb
mov
pusha
mov
iret
xor
cmp
cmp
xchg
xchg
cmp
fdivrl
mov
loop
inc
dec
inc
inc
sub
and
test
mov
std
push
les
jl
push
jmp
movsb
add
jno
cmp
les
xchg
mov
sahf
jae
mov
jns
cmpsl
xor
mov
sbb
out
mov
mov
add
sbb
lock
out
pop
fildll
jbe
repnz
fs
or
int3
and
das
sub
popf
xor
es
pop
jnp
xchg
add
mov
lcall
bound
mov
gs
sahf
mov
repz
lcall
cld
sub
cmc
int
push
jo
jne
pushf
pop
pop
movsl
dec
je
add
cmp
loopne,pt
scas
mov
idiv
ds
mov
aaa
in
dec
and
imul
pop
pop
xchg
sub
out
rorl
arpl
xchg
sbb
imul
mov
xchg
popa
or
rolb
fs
and
cmc
jb
mov
daa
aad
cmp
stc
int3
mov
push
movb
fiaddl
pop
and
mov
js
in
inc
mov
add
xor
test
pop
xor
xchg
jb
push
fwait
sbb
and
fdivrl
or
dec
test
dec
dec
mov
lods
dec
mov
ja
cmp
inc
pop
lods
or
xchg
mov
push
in
mov
push
sbb
push
or
cltd
dec
push
orl
xchg
and
ds
leave
mull
push
inc
sbb
cmpsb
fs
sub
fildl
xor
push
rclb
cmp
insb
daa
cmpsb
movsl
jge
fsubs
mov
cmp
mov
inc
fcoml
in
shrb
jae
inc
cmp
jg
mov
xchg
push
cli
xlat
gs
fists
dec
ds
decb
pop
test
dec
in
jne
dec
faddl
add
sahf
dec
mov
test
loopne
mov
adc
loopne
bound
sti
inc
leave
or
xchg
xchg
lret
test
push
inc
add
push
lret
lock
pusha
sub
jns
pop
mov
loope
loop
fbld
lea
sahf
int3
gs
pop
jp
bound
jl
ja
push
fldl
xchg
jle
adc
xchg
push
jbe
fcmovne
cmp
lahf
fidivrl
dec
test
movsl
inc
push
bound
repz
lahf
fwait
inc
sub
pop
call
pop
pusha
out
mov
iret
in
int
add
hlt
mov
add
mov
into
inc
inc
pop
aaa
or
xorb
mov
xchg
insl
lods
fstp
dec
fdivrp
cs
aam
push
cmpsl
incl
popa
loopne
aam
push
jns
and
aad
je
and
popa
pop
frstor
mov
or
leave
sbb
outsl
jcxz
push
lods
pop
inc
lahf
mov
xor
mov
jge
test
xor
sub
test
xchg
das
icebp
cmp
jecxz
outsl
cmc
mov
pop
mov
loop
out
xchg
mov
add
lcall
popf
adc
into
fisubl
out
leave
push
sbb
or
and
out
out
sub
xchg
jmp
mov
lret
xor
rcll
dec
inc
cmp
mov
adc
ljmp
or
mov
popa
and
into
xchg
xor
imul
xor
fstpt
mov
lret
fiaddl
sbb
repnz
or
clc
adc
adc
rcrb
cmp
es
aam
and
dec
add
sub
cmpl
cmpsl
outsb
mov
shrl
fs
pop
xor
mov
movsl
mov
cmpsl
mov
std
movsb
cmc
mov
sbb
cmp
gs
mov
ficoml
dec
inc
jns
std
add
idiv
xor
push
jmp
xchg
inc
dec
dec
imul
loop
sub
sub
bound
sub
in
filds
pop
push
mov
cld
fwait
push
inc
in
mov
mull
shll
aam
loopne
into
cmc
and
popf
out
jmp
inc
movsb
movsb
stos
mov
add
je
dec
xor
and
lret
jno
jne
and
in
fiaddl
xchg
cmc
std
cmp
inc
out
sbb
cmc
sbb
decb
mov
aam
lock
push
fistpll
sahf
mov
jecxz
mov
sub
xor
stos
cmc
sbb
mov
jp
cmp
and
icebp
fstpl
mov
inc
ret
and
xchg
push
sbb
fidivrl
lret
rorl
jecxz
fiadds
cmpsb
testb
hlt
or
mov
aas
or
fildll
and
pop
cwtl
sahf
adc
pop
mov
mov
push
inc
xchg
mov
fiadds
or
jl
out
and
push
rcrl
loop
nop
mov
pop
scas
add
xor
add
xchg
jge
out
scas
jnp
insl
add
pop
call
pop
or
xor
sub
adc
and
push
cmpsb
mov
mov
inc
popa
push
mov
dec
popl
mov
shld
cmp
aas
pop
lret
mov
ss
cs
xor
push
xor
or
inc
dec
sub
dec
mov
mov
pop
push
add
pop
mov
push
test
ljmp
imul
xchg
fdivs
rcll
jg
movsb
mov
popf
xor
gs
xor
fstps
pushf
xorl
cmc
push
mov
movsl
xchg
mov
lods
mov
mov
push
mov
out
mov
data16
xlat
push
cltd
std
in
push
inc
xchg
out
aam
rcrl
jp
aad
dec
cmpsl
adc
pop
frstor
cmc
aam
rcl
test
int
shr
mov
mov
scas
movsb
xchg
mov
add
mov
push
mov
push
dec
popf
or
mov
sbb
cwtl
inc
je
cmp
arpl
movsb
dec
fcmovnb
push
mov
or
jae
sbb
dec
loop
or
int3
fstl
jns
jp
push
or
test
ljmp
ret
add
pop
or
mov
rorl
pop
inc
gs
pop
mov
xor
sbb
nop
stos
add
xor
mov
pop
mov
lods
rcl
jns
out
iret
add
mov
or
in
cmpsl
sti
popa
or
jecxz
inc
push
iret
jp
pop
rcr
dec
ja
fcom
mov
xor
cmp
loop
mov
mov
adc
xchg
pusha
das
scas
mov
orl
int
or
in
xchg
mov
inc
push
xchg
in
in
or
das
cmp
mov
fisttpl
inc
cmp
mov
sti
mov
incb
rcrl
dec
gs
jp
xor
iret
jns
cmp
add
int3
hlt
mov
sbb
popf
cld
bound
or
loope
push
ljmp
mov
loopne
insl
outsb
mov
push
cmpsl
xchg
pop
lret
mov
fbld
es
jmp
or
mov
sahf
rcrb
mov
cwtl
dec
and
mov
fisttpl
loop
test
push
or
nop
push
nop
sub
add
adc
dec
hlt
ffreep
mov
fs
mov
aas
jecxz
mov
popa
jmp
mov
pop
addr16
and
mov
loope
jne
sbb
jb
sub
test
dec
xor
push
add
xor
xchg
or
scas
xorb
clc
sub
ret
stc
js
jge
mov
jmp
sbb
into
push
aam
xchg
mov
mov
mov
aaa
or
dec
and
insl
mov
std
popf
icebp
test
movsb
sbb
sti
jnp
out
mov
je
es
jmp
cmp
movsl
jbe
push
sub
dec
jb
mov
push
adc
xchg
filds
inc
aas
jno
cmc
xchg
and
out
mov
sub
ret
or
dec
mov
leave
test
inc
inc
push
stc
mov
mov
mov
sbb
leave
jmp
ret
mov
cmp
push
mov
sbb
cmp
test
mov
sbb
add
and
xchg
mov
push
das
sbb
and
flds
in
ficompl
mov
inc
pop
dec
loope
fnstenv
mov
push
mov
out
dec
mov
cltd
push
scas
mov
cmp
cltd
sbb
pop
or
sub
cmp
mov
sahf
arpl
lret
mov
cli
pushf
rolb
xchg
add
xchg
insl
push
pop
dec
sbb
adc
mov
xor
xor
shll
out
jge
xlat
pop
pop
bound
jmp
ret
aad
or
sub
test
or
inc
out
mov
data16
mov
lea
xlat
jmp
dec
lret
adc
dec
dec
dec
pop
add
push
lahf
or
sub
popa
dec
repnz
ss
sbb
jl
leave
xor
out
jno
or
aam
popf
xchg
cmpsl
into
mov
out
into
addl
fisttpll
sub
std
mov
fldz
clc
fwait
or
pusha
add
push
jg
sub
cld
xchg
int
iret
in
popa
test
sub
mov
aaa
str
dec
test
mov
jge
jl
cwtl
ret
repnz
or
data16
in
sbb
add
fistps
outsl
arpl
dec
out
hlt
cwtl
loopne
or
add
jg
aad
lret
mov
rcrb
mov
das
mov
dec
gs
pop
js
pusha
ja
fwait
mov
stos
jmp
cmp
mov
sti
or
cmp
pop
xlat
pop
xor
fdivs
adc
or
dec
mov
xorb
pop
jecxz
mov
push
pop
icebp
ret
lods
in
fsubrl
cmpsl
push
fistpl
fistpl
dec
lret
lret
push
dec
jns
dec
jl
int3
pop
inc
stos
mov
mov
or
ret
sub
idivb
jp
adcl
adc
adcb
sbb
ret
loopne
mov
dec
push
jg
movsl
lcall
js
inc
add
push
push
push
aam
mov
cmp
repnz
scas
ret
call
stos
ficompl
dec
jne
dec
test
xchg
jecxz
orb
movsl
jge
out
btc
cmp
fwait
pop
pop
call
xor
mov
das
imul
sbb
cmp
pop
adc
icebp
xor
insb
hlt
int
rol
dec
in
sbb
sub
mov
add
movsl
push
orl
add
add
pop
decl
ret
or
clc
in
pandn
dec
sarl
pushf
call
mov
pushf
cwtl
out
faddp
aaa
pop
cmpsl
or
repnz
xchg
adc
fnstsw
test
loope
or
gs
fnstsw
cmp
ret
xchg
fyl2xp1
enter
bound
push
jg
test
push
jle
inc
sub
xchg
mov
icebp
mov
fs
and
fwait
jecxz
decl
lock
sub
mov
filds
int
lea
and
sub
dec
cld
mov
or
out
pushw
cs
jmp
std
or
jg
dec
jae
int3
cwtl
dec
dec
arpl
ja
sbb
jl
movsl
adc
jo
mov
pushf
popa
mov
mov
nop
test
adc
xchg
fs
push
xor
and
loop
add
push
push
lret
jge
xchg
inc
pop
cmp
sub
push
rcrb
shll
adc
mul
sub
ss
xchg
arpl
jb
inc
test
sub
call
jecxz
mov
xor
lret
mov
mov
addr16
clc
jnp
jmp
adc
out
mov
int3
pop
daa
leave
int
cld
pop
sbb
mov
pop
aaa
xchg
aaa
addl
inc
add
jl
repnz
dec
jae
xor
pop
stos
in
ds
cmp
mov
push
imul
xor
dec
xchg
loope
fwait
and
mov
mov
mov
xchg
inc
fcomip
call
iret
fucomp
add
jmp
mov
gs
mov
into
faddl
imul
adc
adc
loopne
pop
das
popf
rcr
lcall
push
int3
jmp
test
cmp
popf
mov
dec
mov
in
sub
jge
jne
rcrl
inc
pop
movsb
lcall
mov
xchg
in
fstl
push
das
dec
lods
into
jge
movsl
in
adc
cmc
in
scas
in
sbb
sarb
into
loop
loope
pop
xchg
addb
fcomps
push
flds
or
cmc
push
dec
dec
hlt
fadds
int
xchg
jge
add
lods
mov
jecxz
gs
aaa
mov
xor
mov
push
cld
scas
ret
imul
outsl
cltd
xchg
stc
shlb
and
xchg
nop
out
repnz
out
dec
idivb
int3
sub
pop
pop
push
ljmp
and
xor
cmpsl
cmpsl
add
or
cli
xchg
or
rcl
mov
sbb
popa
dec
sbb
in
iret
fadds
mov
and
add
jb
out
and
xlat
jp
sbb
in
or
xchg
movsb
or
loop
orl
leave
orb
lret
imul
mov
inc
cltd
rcrl
mov
inc
mov
add
out
fcompl
xor
fsqrt
ss
fcoml
fidivrs
lret
cmp
xchg
das
pop
mov
sti
pop
mov
add
loop
pop
faddl
icebp
mov
cmp
in
enter
in
pop
repnz
add
push
fnstenv
mov
jno
mov
movsl
cwtl
cmp
adc
inc
repnz
cmp
shrb
push
repz
pop
sbb
out
das
mov
arpl
test
pop
bound
push
push
std
xchg
lahf
inc
and
xchg
inc
scas
mov
leave
jmp
add
or
dec
call
cmp
leave
fdivp
and
lret
icebp
mov
jmp
inc
pop
sbb
and
mov
mov
dec
mov
repnz
aad
icebp
filds
setae
stos
xor
nop
adc
jno
dec
add
repnz
cmpsl
xor
jecxz
movsb
lods
in
cltd
daa
cmc
hlt
xlat
fldt
adc
stc
mov
imul
adc
clc
sti
repnz
sbb
cmp
cltd
cmp
pushf
pop
add
inc
sub
loopne
push
xchg
lret
jmp
fwait
icebp
cwtl
add
push
in
sbb
int3
popa
cmp
outsb
sub
jbe
mov
sbb
or
cmpsb
xor
out
loop
mov
inc
mov
repnz
test
push
xor
mov
call
add
mov
jmp
cwtl
xor
inc
ret
lahf
jmp
adc
add
inc
or
rolb
daa
lock
aaa
cmp
icebp
lret
fmull
sbbb
rolb
and
add
outsl
and
jmp
fwait
xrstors
aam
sbb
fwait
lret
xlat
std
adc
sub
jns
add
pop
movb
testb
imul
push
jmp
pop
and
push
mov
xchg
jg
cmc
shll
jg
in
fisubs
pop
ds
jg
shlb
pop
hlt
ret
loop
inc
loopne
xlat
jmp
in
cld
in
mov
aaa
mov
mov
mov
cmp
mov
dec
mov
lcall
add
mov
and
mov
pusha
and
fsubl
inc
mov
mov
cwtl
imul
popa
leave
fldl
out
popf
in
jp
int3
in
rolb
popf
inc
lahf
fwait
arpl
jl
jp
xor
fwait
inc
dec
ror
popa
cmp
cmp
xchg
mov
inc
mov
cmp
std
mov
inc
rcrb
cwtl
xchg
ljmp
out
aad
fldt
mov
in
int3
into
mov
bnd
cmpsl
lods
jae
nop
jne
add
fcomip
mov
pop
xchg
mov
pop
lods
rcr
add
sbb
lods
add
test
sub
push
rclb
shl
jecxz
repnz
outsl
pop
in
or
loope
and
jnp
mov
cmp
jne
inc
mov
sbb
mov
das
lea
in
sbb
push
arpl
pop
push
mov
inc
push
add
push
stc
ljmp
movsl
mov
mov
mov
mov
cmpsb
mov
or
mov
aad
jl
jecxz
icebp
mov
scas
fwait
call
fldl
out
xchg
sbb
add
push
push
test
jg
mov
std
das
add
movsl
stc
pop
int3
pop
jp
cmp
arpl
cmp
push
sub
fistpll
rcr
inc
dec
loopne
mov
adcb
xchg
push
push
das
cmc
inc
repnz
int3
and
sub
mov
jecxz
lods
jg
test
xchg
fwait
ds
or
out
sbb
jl
aas
xor
out
psubq
cmpsb
movsl
inc
ficompl
pop
inc
es
les
inc
in
mov
inc
ret
mov
roll
jmp
outsb
arpl
in
inc
add
xor
mov
movsb
gs
mov
sti
cmc
bound
xor
inc
inc
cmp
es
inc
daa
mov
push
fisubs
sbb
jno
lock
pop
or
pop
int
jle
jmp
sub
movsl
aas
dec
sbb
fsubs
xchg
jb
pop
dec
dec
clc
jle
imul
mov
repnz
xchg
pop
push
loope
loopne
or
movsb
dec
jno
sub
push
aad
xchg
aad
in
ficompl
mov
jno
mov
movsl
sub
xchg
mov
jg
mov
mov
int
movups
js
jg
or
mov
repnz
inc
mov
push
pop
dec
pop
xchg
test
jae
jmp
sbb
out
mov
adc
sbb
scas
inc
cmp
dec
jmp
push
repnz
dec
test
sbb
pop
or
dec
jno
icebp
pop
jecxz
mov
cmp
xor
mov
jge
dec
push
push
push
sub
mov
add
cmp
je
bound
in
jl
pop
mov
lret
and
fnstcw
pop
fsub
fs
fst
in
jmp
into
fwait
shrl
jb
xchg
fcmovu
repnz
jo
xchg
pop
add
aad
inc
cmp
sub
cmp
andl
xchg
push
sub
jle
xor
cli
sbb
or
inc
and
es
xchg
xor
mov
iret
loop
pop
mov
loopne
push
push
out
mov
iret
mov
pop
mov
or
fcomip
mov
mov
mov
int3
ljmp
cmp
cmp
adc
pop
sbb
out
and
jae
mov
inc
test
andl
icebp
cwtl
dec
insl
popf
fs
cmpsb
cmp
in
xchg
cmpsl
xor
shlb
adcl
test
mov
call
xor
xor
cmp
rcll
adc
sbb
lret
inc
jle
sub
in
jb
scas
int
inc
jmp
std
mov
gs
push
adc
fisttpll
cmpsb
push
ror
insl
cmp
rcrl
cmp
lock
mov
lds
mov
in
sahf
in
scas
pop
push
cwtl
rol
sahf
cmp
adc
mov
jo
icebp
dec
jmp
push
lahf
push
leave
sub
out
adc
mov
pop
jp
movsb
sub
lahf
test
out
arpl
int3
fists
fsts
jg
rclb
sbb
push
sub
std
sub
xchg
mov
dec
int
jns
fstpl
shll
inc
xor
lods
lock
and
dec
jmp
mov
in
in
adc
cwtl
insl
sub
lret
ja
push
fchs
jmp
jns
ss
mov
es
jmp
scas
in
cltd
lods
or
in
mov
lret
fsubs
scas
and
lret
dec
dec
pop
push
shlb
push
test
test
daa
ja
cmp
mov
fwait
ljmp
pop
sarl
test
cwtl
hlt
pop
pushf
es
and
cmp
xchg
test
mov
cld
loop
cmp
rcrl
fildll
pop
cwtl
sti
mov
iret
add
out
adc
loop
in
jp
lcall
es
bound
add
into
hlt
lods
sub
clc
pop
cmpsb
mov
inc
mov
or
rorl
ffree
loopne
sub
push
cld
jecxz
cld
push
mov
outsl
fmull
in
ja
mov
js
sarb
imul
in
daa
inc
mov
popf
scas
les
mov
lcall
pop
or
mov
jnp
mov
inc
add
xchg
into
push
xchg
mov
push
xchg
xchg
ljmp
js
xlat
cmp
decl
mov
out
call
sbb
movsl
js
inc
out
pop
sub
add
aas
push
pop
mov
lds
loopne
ret
cwtl
pop
test
out
sub
and
jg
ss
insb
inc
in
mov
mov
ds
rcll
cmp
cmp
push
sub
inc
loop
mov
inc
inc
xlat
inc
scas
and
rcrl
xchg
pop
out
hlt
aad
ss
sbb
insb
nop
cli
out
xor
pop
cmpsl
xchg
sub
cmp
fsts
jae
jg
add
das
xor
jmp
test
push
and
sub
adc
xchg
add
add
push
aas
and
hlt
mov
mov
jbe
movsb
add
xor
sbb
or
ss
pop
fwait
dec
inc
icebp
js
fdivrl
mov
sub
xchg
jle
loop
and
scas
loopne
int
push
negl
bound
lea
rorl
sbb
int
pusha
or
repnz
mov
jmp
xor
mov
fbstp
mov
dec
imul
dec
in
dec
jno
lds
mov
aad
icebp
outsb
cltd
enter
cli
enter
pop
pop
mov
cmpsb
dec
xor
pushf
aaa
lret
inc
test
cmpsl
add
lret
xor
aaa
and
movb
mov
cmpsl
leave
mov
mov
push
or
popf
cmp
mov
push
aam
or
xchg
adc
test
and
int3
add
inc
inc
xchg
shrl
or
mov
mov
out
clc
dec
jo
icebp
loop
imul
loope
add
xchg
push
cmpsl
xor
xchg
lock
xlat
fildll
adc
imul
jne
movsl
mov
les
dec
aaa
lea
std
cmc
fdivrp
stos
mov
rorl
ja
mov
add
xor
cmp
mov
fadds
xchg
subl
js
aaa
jmp
add
cmpsl
out
pop
in
sub
in
call
or
or
inc
aad
lret
jecxz
pop
filds
bound
in
fs
aad
cmp
inc
daa
jae
cmp
xor
iret
movsb
lret
cld
mov
rcrl
popf
scas
xchg
mov
inc
mov
adc
shr
dec
das
mov
cmp
das
dec
push
hlt
movsb
arpl
inc
add
and
jbe
gs
xchg
mov
pusha
fucomp
imul
jge
ficomps
test
inc
sub
roll
jp
shll
leave
add
lcall
stos
incl
mov
mov
and
sub
inc
pusha
pop
xor
sbb
sbb
xchg
loope
test
fs
xchg
inc
add
sbb
leave
sbb
dec
hlt
lea
popa
daa
xor
stos
repnz
mov
xor
fwait
jmp
movsl
test
mov
or
sbb
mov
ret
fisttps
push
adc
fimull
std
aaa
fs
or
loop
dec
sti
popa
add
lret
cmpsb
aad
out
jmp
fs
push
test
sbb
out
lahf
cmc
daa
dec
mov
arpl
inc
sbb
scas
std
test
sbb
mov
insb
imul
or
fisubrs
mov
mov
int
or
je
inc
dec
std
cmp
jmp
add
dec
xchg
out
add
mov
fs
add
and
cmp
cmp
fcmove
pop
aaa
jmp
lea
fldcw
fnsave
mov
out
iret
pop
jle
clc
mov
xor
insl
sbb
jmp
shlb
xchg
jo
arpl
mov
push
add
xchg
cs
push
dec
test
fildll
lret
sbb
sub
lea
inc
or
fldt
mov
jmp
les
push
dec
mov
lret
addb
ficompl
aaa
lret
jb
dec
add
pop
push
loop
inc
cli
cmp
mov
mov
xchg
mov
jmp
lret
mov
jmp
push
inc
inc
dec
pop
jecxz
rclb
std
fwait
push
divb
xchg
adc
mov
mov
sbb
jbe
mov
add
movsl
jecxz
lret
push
pop
xor
addr16
or
cmp
fs
sbb
cwtl
and
bnd
pop
ss
lea
ljmp
cwtl
sbb
add
push
loope
fwait
and
jbe
mov
dec
sbb
jmp
xchg
test
mov
in
test
pop
mov
sbb
and
repnz
mov
push
insb
sahf
movsb
gs
stos
xchg
testb
push
scas
xchg
cltd
pmaddwd
mov
jae
jnp
fbld
sti
dec
loopne
inc
stos
mov
rolb
repnz
xlat
mov
test
add
sub
dec
stos
stos
add
jo
cwtl
push
cmp
mov
rolb
pop
inc
lret
add
or
int
repnz
daa
pop
les
or
dec
lods
sub
test
xchg
dec
test
insl
push
int3
push
mov
leave
or
adc
icebp
pop
mov
imul
inc
js
lret
out
jno
xchg
test
mov
imul
lock
sbb
pusha
leave
and
xchg
push
ljmp
mov
test
sub
jecxz
flds
sti
pop
jne
shlb
adc
add
das
daa
xchg
xchg
das
scas
ficoml
or
mov
push
imul
jno
xor
inc
adc
or
add
orb
jge
pusha
xorl
movsl
outsb
std
mov
mov
mov
and
mov
add
lods
xorl
add
inc
fs
or
fadds
xchg
insl
cmp
sbb
fldcw
adc
out
lock
cwtl
mov
push
incb
xor
sbb
push
dec
imul
mov
scas
mov
leave
add
fstpt
lods
repz
jmp
movsl
jg
xchg
pop
in
jnp
imul
stos
lods
cmp
push
xchg
xor
pop
fnstenv
push
dec
aad
fs
and
nop
fmulp
int
push
lcall
mov
jl
cmp
out
int3
bound
jb
sbb
in
cmc
or
mov
int
xchg
loope
lret
cwtl
cmp
sbb
and
xchg
or
in
cmpsb
push
push
mov
add
loop
pop
mov
mov
xchg
mov
fs
pusha
ss
push
add
xor
aam
fcmovu
repnz
adc
test
cmpsb
mov
repnz
lea
xchg
stc
test
dec
and
pop
test
int3
cmpsl
xchg
mov
sub
xchg
daa
mov
cmpsl
xorl
hlt
xor
mov
sbb
sub
sbb
mov
jae
std
lret
fisttpl
mov
mov
inc
fmul
in
sbb
movsb
sahf
xchg
popa
inc
inc
mov
cmpsl
xor
dec
arpl
lcall
inc
cltd
cmp
frstor
xor
adc
in
mov
out
dec
adc
xchg
pop
inc
lret
out
sbb
push
stos
add
repnz
push
test
aaa
cmc
jl
movsb
add
fisubl
stc
inc
mov
add
mov
jecxz
mov
mov
loope
leave
test
mov
out
mov
mov
inc
outsl
mov
shll
mov
sbb
sbb
pop
or
mov
sbb
sbb
hlt
mov
pop
jb
stos
cmp
xor
cwtl
je
dec
rorb
jmp
sbb
mov
xchg
pop
push
nop
inc
inc
insb
jae
lret
repnz
leave
jmp
sahf
fldcw
mov
lds
ror
movsb
fs
out
adc
pop
mov
adc
push
dec
and
js
jle
xor
lea
leave
or
adc
xor
xor
iret
xchg
cmovns
add
xor
add
push
bound
push
cmc
mov
sbb
jo
mov
push
inc
sbbb
out
pop
mov
shlw
xchg
fldl
lods
mov
pop
repnz
push
jbe
lods
or
jae
push
jmp
in
dec
lods
sbb
loop
mov
mov
push
adc
std
mov
or
sahf
inc
nop
cli
insl
in
js
pop
aas
xchg
add
stc
pop
repnz
int
inc
fsubr
lea
inc
nop
inc
jle
cmp
cmp
dec
xchg
in
std
xor
jno
cmpsl
and
jmp
jno
push
movsb
mov
aad
aam
hlt
mov
lret
mov
int
pushf
inc
xor
repnz
out
and
adc
dec
add
cmp
add
adc
and
int
negl
push
push
test
hlt
fwait
jae
mov
mov
fnstcw
sub
or
popa
add
mov
insb
outsb
jp
add
or
movsl
jb
add
or
lcall
adc
loopne
mov
xor
mov
insb
inc
mov
xchg
fdiv
mov
cmp
mov
scas
jp
addr16
mov
aaa
sti
neg
flds
mov
fsubp
hlt
mov
jmp
mov
adc
test
add
scas
outsb
pop
lret
das
fwait
add
push
aaa
cmpsb
add
mov
icebp
mov
jbe
dec
add
jbe
mov
mov
and
mov
or
mov
das
pushf
pop
mov
scas
aad
int3
sub
fldl
ficompl
test
into
push
cmp
push
loope
sbb
add
sub
fbstp
stc
lret
out
hlt
loopne
int3
xor
test
mov
lea
shlb
test
mov
add
repnz
out
mov
ret
lret
mov
aam
jge
push
fwait
sub
or
cmc
mov
fbld
push
fisttpll
push
orl
xchg
mov
push
sub
loope
std
rcr
cmp
mov
xrelease
scas
daa
mov
push
xor
jl
mov
imul
mov
sahf
sub
push
cs
xor
sbb
loopne
popf
in
aas
filds
pop
sub
ss
aad
fcomps
lret
inc
ja
stos
mov
jp
cmpl
test
in
inc
mov
movsl
cltd
mov
in
sub
fxch
popa
fcom
in
loopne
inc
loope
or
jl
mov
push
std
inc
sti
fstpl
jbe
rol
mov
movsb
repnz
js
call
jnp
out
mov
push
add
or
mov
es
xchg
in
cli
shll
inc
push
mov
push
enter
add
pop
cmpsl
sub
xchg
in
nop
mov
lods
pop
or
movsb
in
sub
mov
add
pop
adc
and
add
inc
pop
push
lret
ds
mov
xor
int3
mov
mov
jo
inc
loope
sbb
shl
mov
add
jo
into
inc
or
push
mov
cmp
pop
insl
add
out
popa
jno
negl
iret
add
mov
sbb
orl
xchg
or
dec
mov
xchg
pop
sbb
mov
mov
leave
mov
push
adc
fistps
jmp
hlt
mov
gs
jns
inc
jmp
inc
pop
ret
xchg
xchg
mov
xor
in
into
cltd
jnp
jmp
stos
fcomps
ret
stc
push
cld
leave
outsb
inc
scas
fldl
cmp
and
mov
lret
sbb
cmc
mov
mov
mov
mov
jbe
pop
aad
pop
xorb
pop
in
push
cmc
in
jmp
test
gs
push
and
xchg
mov
in
xchg
sub
bound
pop
sarb
fwait
pop
dec
imull
or
popa
mov
adc
add
mov
push
in
dec
push
leave
mov
and
sar
ret
lds
or
or
in
adc
repz
lods
std
lret
mov
mov
bnd
mov
jno
jnp
sub
addr16
test
add
mov
ljmp
add
dec
mov
insb
repnz
adc
mov
sarl
cmpsl
sbb
ljmp
mov
sub
mov
lcall
xchg
mov
and
pop
test
or
sub
jo
jmp
daa
mov
dec
movsl
pop
mov
push
aas
fs
jb
in
arpl
push
inc
imul
sub
adc
mov
lret
ret
cmc
dec
out
jbe
sub
sbb
arpl
push
xchg
dec
fwait
push
cmc
icebp
aad
fcomps
loope
xor
jmp
cld
incb
outsl
mov
mov
push
mov
loopne
popa
jmp
mov
int3
add
int3
inc
movsl
push
aam
sbb
dec
push
lcall
lahf
sbb
pop
scas
dec
mov
mov
dec
jge
repnz
cmpsb
inc
mov
fstpl
sub
xchg
or
mov
xchg
pop
adcl
stos
mov
dec
push
xorb
add
xchg
xor
jecxz
mov
xlat
je
mov
mov
imul
aas
mov
inc
dec
push
sbb
xor
sbb
outsl
xchg
pop
sbb
mov
xor
push
in
fimuls
pop
push
push
movsb
lret
and
and
out
pushf
and
movsb
into
xor
clc
stos
mov
stc
inc
dec
pop
sbb
cwtl
in
and
dec
or
pushf
sub
push
out
jle
js
mov
sub
out
or
call
sub
xchg
cmc
pop
shrl
adc
dec
shrb
pop
dec
jl
ss
dec
lret
out
inc
sub
mov
pusha
xor
out
mov
push
fsubrl
aam
cmc
adc
out
jecxz
iret
pop
fistpl
xchg
popf
imul
inc
dec
imul
incl
jne
sar
jp
in
xchg
out
mov
gs
mov
mov
or
adc
in
dec
out
push
jge
fstpt
arpl
cmp
sbb
fildl
adc
ret
loopne
pop
dec
in
jno
push
sbb
cmc
mov
leave
mov
pop
fimull
or
outsb
into
fcoms
jecxz
in
loopne
cmp
pop
dec
sub
sub
sti
mov
pop
mov
dec
lea
sti
pop
mov
jbe
lahf
xchg
mov
dec
pop
cmp
jg
in
jne
nop
je
fstpl
dec
jno
shll
pop
xchg
pop
cli
int3
scas
rcll
add
push
and
sub
xchg
mov
std
fdivr
cmp
fxtract
push
jecxz
or
cwtl
dec
push
js
mov
mov
sub
push
or
jle
insb
popf
inc
mov
stos
out
addr16
adc
pop
mov
jnp
sub
push
out
push
stc
xor
ss
shrb
sub
rorl
push
call
push
cltd
add
loopne
pop
jmp
cmp
into
mov
outsb
repnz
cld
mov
pop
jge
addr16
inc
cmp
sub
lcall
xchg
sub
dec
mov
pop
ss
push
mov
cwtl
in
cmp
into
mov
adc
repnz
loop
in
sti
add
push
or
vunpckhpd
inc
xlat
push
cmpsl
mov
xlat
mov
jge
xor
lods
adc
xchg
iret
cmp
pop
fisttpll
repnz
mov
sbb
insl
mov
hlt
aam
jl
xlat
bound
sbb
lock
jne
xchg
xchg
inc
out
ljmp
ss
xchg
push
cmp
dec
sub
mov
add
dec
cmp
aam
test
shrb
imul
push
int
or
dec
cltd
dec
xchg
stos
in
jge
jo
push
andb
add
ret
inc
imul
std
mov
sub
aad
aaa
push
add
pop
iret
dec
sti
in
dec
and
fisttpl
cmc
ret
cmpsl
mov
dec
adc
test
cli
bound
jns
popa
xor
add
rcrb
pop
test
jae
and
inc
inc
popf
sbb
pop
nopl
cmc
adc
hlt
xchg
push
and
jmp
test
adc
mov
icebp
sarb
add
cmc
cmp
cmp
stos
aad
ljmp
sti
mov
jnp
imul
jnp
pop
ljmp
mov
jno
dec
and
aad
clc
xlat
cmpsb
jge
adc
mov
bound
push
subb
push
rcrl
push
popf
mov
and
add
xchg
sub
jp
inc
enter
cli
mov
cmp
std
xchg
sub
dec
xchg
jno
imul
sub
sub
cmp
sub
dec
hlt
inc
mov
gs
xchg
in
cmp
or
dec
inc
cmpsl
dec
cmp
fcompl
xchg
lds
imul
mov
jns
cmp
hlt
lret
mov
ss
fadds
hlt
jmp
and
cld
dec
fs
cld
inc
inc
adc
jnp
xor
jnp
cld
jmp
sti
in
aaa
xchg
xchg
mov
lcall
mov
sahf
stos
jg
cltd
jl
lds
fisubrl
mov
jns
sar
ljmp
sbb
cmp
xor
cmp
imul
and
xor
out
push
mov
lcall
sub
or
dec
mov
push
scas
sub
cs
xor
mov
fs
nop
lahf
push
add
fildll
std
xchg
cmp
les
pop
mov
xor
mov
stos
xor
pop
inc
dec
inc
scas
test
and
movsl
push
add
mov
mov
cltd
outsb
mov
mov
ja
loopne
mov
and
ret
fwait
decl
adc
lcall
add
jae
notl
sbb
lods
mov
fisubrl
cmc
xchg
mov
stc
in
jno
mov
cwtl
pop
xor
cmp
xchg
fucomip
or
pop
jb
dec
mov
and
cmp
push
in
outsb
and
imul
sahf
cld
int
jb
fsts
xor
push
into
inc
pop
dec
jmp
pop
sub
shll
jnp
loopne
movsl
ret
popw
jl
scas
add
sub
dec
xchg
fcoml
ret
fildll
adc
mov
or
or
xchg
cmp
push
test
inc
or
mov
cmp
fsts
mov
pop
jbe
xchg
neg
adc
mov
rcr
mov
loop,pn
cli
sbb
test
scas
sub
loope
cmp
loopne
data16
aam
mov
fs
or
mov
xchg
aam
push
bnd
fstpl
shl
xor
jb
pushl
out
fisubl
jecxz
lea
test
cmp
add
xor
push
das
fisttpl
fs
adc
mov
cmpsb
xor
sahf
xor
mov
pop
push
dec
push
enter
jecxz
jae
mov
in
jecxz
adc
nop
or
popf
cli
mov
sbb
push
jg
arpl
out
inc
outsb
arpl
sub
mov
xor
pop
mov
sub
inc
xchg
fwait
jle
inc
push
paddsw
mov
and
pop
nop
add
fildl
ja
pop
out
mov
shlb
lret
cmp
lret
dec
xchg
add
imul
jns
rcr
loop
jne
popa
add
inc
adc
int
in
das
cmc
jge
stc
bound
fnstcw
lds
movsl
xor
popf
mov
es
ds
inc
lods
js
or
cmc
jmp
int3
outsb
shl
add
jae
pop
push
and
scas
pop
xor
mov
repnz
xchg
pop
or
jl
mov
addb
push
lret
push
roll
in
mov
les
test
mov
ret
in
popf
add
movsl
popf
jmp
ljmp
cmp
or
cmp
out
into
aad
incb
insb
lret
cmp
xchg
dec
arpl
push
inc
dec
sub
leave
add
xchg
ja
mov
cmp
jne
ds
xor
aad
or
push
lods
addr16
inc
cmp
shr
push
loop
mov
mov
ret
jmp
mov
in
outsl
or
cmp
fdiv
iret
int3
cmp
inc
fistps
inc
aaa
push
dec
xchg
push
push
xchg
mov
icebp
cld
lret
jb
mov
in
mov
xchg
ja
mov
dec
out
adc
fdivl
mov
xchg
push
ss
jbe
lahf
sbb
test
cmpsb
mov
out
shrd
popf
jo
sub
sub
mov
in
fstps
in
push
xchg
jl
cld
pushf
add
fistpll
scas
aad
repz
aas
mov
sbb
jmp
mov
xchg
xchg
xor
pop
mov
cmc
jnp
push
pop
add
movq
dec
xchg
inc
dec
push
mov
cld
loopne
pushf
daa
add
sbb
lock
out
and
cmp
int3
sbb
adc
dec
int
adc
in
xchg
mov
rcr
xor
push
mov
xor
loope
lret
push
dec
pop
sti
int
add
das
jmp
sub
outsb
and
xchg
mov
xlat
enter
popf
in
and
cmp
pop
iret
xchg
xchg
xor
inc
fs
nop
repnz
inc
sub
mov
cmc
or
fldcw
fildll
xor
pop
mov
loopne
mov
push
ret
addr16
jnp
push
aaa
mov
fcmove
scas
inc
mov
cltd
fs
cmp
in
fists
lcall
leave
mov
gs
mov
cmp
add
movsb
inc
dec
lret
jb
xchg
mov
pop
inc
cmp
xchg
lea
add
jno
loop
sbb
mov
out
sbb
dec
int3
out
fnsave
inc
add
push
sbb
mov
mull
or
out
cld
push
das
add
mov
in
loop
int
ds
imul
or
das
sbb
addl
adc
lret
xchg
xchg
fisubs
cmpsb
mov
or
xchg
mov
pop
jmp
xor
lock
in
cmp
jmp
andb
mov
mov
and
push
and
sub
into
jmp
aaa
movsl
pushf
clc
and
cli
push
add
stc
push
jl
push
cwtl
sbb
ss
cmpsl
sbb
sbb
cmpsb
hlt
hlt
or
fxch
das
xor
sbbl
or
out
cmp
dec
pop
adc
pop
sub
or
aam
sti
jno
test
jns
ficompl
test
and
insl
scas
aam
jno
cmc
orb
push
inc
adc
xchg
cmp
add
gs
sub
cmpsl
xchg
cmpsl
inc
sub
dec
fs
mov
sbb
int3
mov
filds
mov
dec
dec
sub
loop
lret
jl
in
nop
pop
dec
repnz
push
insl
movsb
jnp
insl
sub
in
cmp
adc
jo
inc
fnsave
mov
aad
sub
inc
lock
mov
movsl
or
hlt
pop
nop
or
inc
add
dec
add
pop
dec
sbb
pop
jge
scas
int3
mov
testl
add
inc
xor
mov
mov
bound
dec
test
mov
test
out
cmc
xchg
lret
cmp
and
scas
hlt
fstpl
dec
sub
sub
ret
cmpsl
add
out
xchg
jne
lahf
lds
fmull
mov
sbb
mov
jecxz
mov
ljmp
cmp
lahf
pushf
mov
pop
or
mov
mov
pop
popf
ret
mov
and
out
int
pop
mov
das
repz
test
sbb
add
jp
cmpsl
stc
pop
mov
popf
lret
aad
popf
dec
hlt
cmpsl
fsts
pop
push
iret
arpl
jae
and
push
add
mov
scas
mov
pop
sub
lahf
jecxz
xor
sahf
mov
mov
sub
dec
and
js
dec
out
movsb
daa
mov
xchg
aas
pop
xor
iret
sub
cmc
ret
sub
aad
mov
jg
and
lds
jo
in
pop
push
push
cltd
sar
mov
sbb
imul
pop
test
pusha
mov
mov
dec
loopne
add
std
fsubl
push
repnz
jmp
and
mov
mov
mov
and
cmp
xor
fisubl
imul
mov
addl
mov
cmpsb
dec
out
cli
jp
test
int
fdivp
cltd
inc
xor
cs
aaa
adc
leave
leave
fnstcw
dec
mov
jns
shr
mov
fisubs
add
jb
mov
xlat
push
jb
int3
mov
movsb
lds
dec
or
sbb
fs
mov
repnz
lcall
sbb
add
mov
mov
push
mov
in
push
inc
and
mov
cmpsl
inc
inc
les
mov
inc
cmp
lret
into
or
or
inc
adc
loopne
inc
fsts
jge
ret
add
repnz
inc
cmp
dec
xor
cmpsb
cld
jle
ret
hlt
popf
int
sti
or
jecxz
popf
loopne
pop
mov
das
sahf
fsubs
xchg
ja
pop
pop
fcomp
or
insb
aad
jo
ja
push
pop
pusha
scas
aad
mov
pop
into
pop
insl
out
test
mov
add
int3
or
sub
je
mov
test
push
cmp
add
inc
loop
xor
push
dec
or
dec
xchg
inc
cmp
xor
arpl
lods
divb
shlw
fildll
cwtl
xchg
adc
fstl
mov
roll
add
out
ret
push
into
mov
xor
xor
gs
in
sub
loop
jbe
mov
jle
mov
pop
cmp
add
mov
xlat
xchg
jmp
cmp
pop
jmp
rcrl
into
xchg
je
adc
loop
inc
adc
scas
mov
inc
ror
out
mov
orl
or
cmp
pop
pop
mov
jl
mov
aas
adc
pusha
mov
xchg
outsb
das
imul
in
popa
inc
leave
out
orl
cmp
pop
imul
jno
and
pop
sar
std
pop
ret
and
and
mov
mov
mov
jnp
dec
jl
push
pop
add
sub
sti
inc
mov
jns
shll
adcb
into
add
in
psubsb
sub
push
int3
mov
je
aad
mov
enter
push
lods
mov
addr16
enter
cmc
or
xchg
out
mov
adc
pop
sbb
dec
pop
xor
sbb
ss
aas
jns
adc
cld
into
repz
popa
xchg
dec
fists
push
jecxz
flds
das
xchg
lds
je
or
xchg
or
ret
cmp
xorb
sub
mov
jb
jo
out
js
dec
mov
jl
mov
push
mov
mov
fdivs
flds
iret
and
lods
cwtl
xor
push
push
dec
sub
mov
insl
movsl
addr16
sub
jb
or
mov
sub
mov
pop
xchg
sbb
or
scas
ss
dec
sub
in
js
xchg
stc
pop
cmc
dec
lret
movsl
cmp
push
inc
push
leave
fisubs
bound
ret
mov
in
arpl
pop
xchg
inc
outsl
loope
sub
sahf
mov
fnsave
sar
or
repnz
dec
stc
dec
jb
cli
hlt
pop
pop
mov
gs
inc
inc
cmp
popf
lret
cltd
push
pushf
cmp
out
mov
dec
cmpsl
ja
fisubl
or
pop
pop
in
ja
aam
movsl
pop
mov
pop
jmp
inc
xlat
outsb
push
cmp
mov
push
mov
add
icebp
in
ja
dec
dec
fidivl
pop
mov
xchg
cmp
arpl
nop
cmpsb
sub
pop
test
dec
mov
mov
loop
in
fcompl
xor
and
pop
cmp
mov
in
inc
jae
xchg
lret
mov
dec
mov
xor
xchg
or
cmp
pop
clc
dec
loop
loop
push
aad
add
aas
sbb
cmpsl
stos
loopne
loopne
and
ret
loop
popa
or
lret
sti
xchg
scas
sub
sbbl
mov
adc
and
xor
or
int
dec
imul
jo
mov
cmp
jne
int
sbb
int3
cmp
mov
js
xor
int3
sbb
and
dec
das
sbb
cmpsl
orl
fbstp
fcompl
sub
sub
gs
adc
lock
xor
xor
mov
orb
arpl
push
fisttpll
mov
add
int3
scas
fwait
mov
mov
mov
or
pop
data16
sub
pop
in
inc
dec
jmp
cltd
adc
int3
inc
adc
stos
jns
mov
or
lret
sbb
dec
xor
adc
stos
popf
xor
bound
fwait
jno
add
inc
cmp
movsl
in
and
int
mov
dec
test
loopne
mov
push
mov
mov
out
mov
pop
push
movsb
push
cld
sbbb
leave
loope
inc
jmp
cwtl
movsb
das
pop
mov
mov
pop
jbe
sbb
addr16
jnp
decl
movsl
lcall
mov
sti
std
sub
mov
mov
cmp
repz
xchg
cld
pop
mov
int3
in
in
outsb
or
mov
jmp
popa
sarl
add
push
sti
sbb
imul
in
loop
xor
inc
push
call
insb
cmpsl
sbb
fstl
inc
ret
inc
cmp
push
pop
mov
mov
cld
xchg
test
jle
push
sub
cmpsl
cmp
mov
fwait
jmp
cmc
jne
insb
daa
lcall
or
in
mov
dec
and
inc
bound
mov
cwtl
xchg
dec
sti
inc
into
pop
mov
cltd
fnstsw
pushf
out
cmp
insb
xor
insl
inc
pusha
lds
pop
xor
cmp
xchg
mov
inc
cmp
xchg
mov
sub
inc
pop
imul
xor
or
int3
rorl
insl
lods
and
pop
movsb
scas
fsts
frstor
pusha
mov
in
test
test
aad
lcall
ret
and
and
pop
or
push
dec
sub
mov
cltd
js
mov
push
je
add
lods
js
mov
mov
jne
popf
fdivrl
std
push
inc
cmp
testl
cmp
push
push
dec
mov
frstor
into
fcmovnu
xor
out
sbb
push
pop
mov
inc
jns
nop
mov
addb
ret
xorl
outsb
data16
fisubs
repz
jo
lea
and
xor
repnz
es
cs
sbb
cmp
pop
xchg
clc
xor
test
fsts
lret
cs
mov
push
inc
in
lret
lret
pandn
fsubl
lahf
push
dec
inc
inc
mov
inc
rcll
mov
arpl
pusha
mov
test
sub
rcl
sub
cltd
fisubl
mov
and
repz
test
testl
push
jbe
add
shl
inc
add
test
add
dec
adc
hlt
push
js
or
outsb
and
push
outsb
decb
pop
xchg
add
popf
int3
add
or
lods
pop
xor
push
fldenv
or
insb
mov
aam
sbb
jae
mov
add
push
xchg
xchg
repz
or
lods
mov
fldcw
push
mov
in
in
pop
fwait
add
push
cmp
pop
fwait
push
aad
dec
and
dec
xchg
nop
and
xchg
jno
clc
cli
add
inc
mov
dec
jecxz
push
lret
pop
jmp
or
xchg
cmp
stc
dec
jecxz
mov
mov
das
rclb
aaa
add
int3
jmp
shrb
or
in
or
add
jne
cmp
jle
in
in
inc
icebp
adc
mov
imul
jl
mov
stos
shl
cs
js
push
add
aam
and
push
cmp
xchg
mov
mov
loopne
fwait
int
rcl
jmp
mov
aad
sbb
testl
das
lret
sahf
jecxz
inc
cwtl
lcall
sub
jmp
shl
mov
push
bound
add
mull
mov
shrl
jmp
push
sub
sub
or
adc
inc
hlt
pop
popf
dec
push
rorl
aas
icebp
pusha
dec
and
pop
outsb
pop
jg
adc
int3
xor
jnp
lret
dec
xorb
push
sahf
loop
mov
xchg
das
lcall
inc
cmp
stc
push
push
inc
jge
gs
jnp
aaa
xor
cmp
int
lret
leave
add
jmp
push
push
xor
lea
decl
inc
cmp
push
int3
shlb
inc
add
add
pushf
lret
inc
mov
or
pop
out
adc
inc
pop
and
xchg
push
jno
in
dec
jge
subb
jg
outsb
ret
stc
pushf
sahf
out
rcll
mov
rcl
cmp
test
cmpsl
jnp
mov
sub
or
mov
int3
cmpsl
sbb
jae
int3
mov
roll
scas
add
clc
mov
ret
jle
cmp
xchg
xor
adc
rcrl
pop
imul
dec
push
mov
mov
xlat
jne
imul
inc
aaa
and
pusha
cwtl
mov
icebp
mov
lcall
movsl
ljmp
push
loop
sti
adc
xchg
sub
sbb
rol
nop
insb
ret
gs
adc
loope
out
nop
sbb
xor
shr
xor
sub
or
jmp
xor
jnp
hlt
lret
mov
repnz
mov
or
pop
cmp
rorb
mov
push
sub
test
sub
add
jne
orl
and
jnp
push
push
cwtl
push
adc
mov
insl
dec
imul
mov
xchg
cld
xor
lods
push
pushf
add
int3
popa
push
cld
aaa
gs
ds
fwait
sub
inc
fiaddl
push
imul
mov
std
jbe
sbb
or
int3
loopne
iret
inc
fistps
cld
sti
fnstsw
push
into
insb
cs
push
adc
or
mov
pop
push
jecxz
cmpsb
jb
xchg
and
mov
out
xchg
nop
inc
fisubl
vphsubdq
sbb
f2xm1
les
int
push
loop
fstpl
cmp
jg
arpl
mov
loope
push
into
pop
push
je
pushf
hlt
and
or
insb
out
adc
cmpsb
sbb
das
sbb
rcl
loope
int
lea
mov
sti
in
test
imul
dec
xchg
dec
cld
aad
push
hlt
lods
insl
negl
xchg
nop
xchg
jg
cmp
aas
push
repnz
fistl
cmpsb
pop
mov
jns
cs
fwait
enter
xor
icebp
repz
or
push
dec
stc
out
push
mov
mov
aaa
int
ljmp
lods
in
jne
mov
in
mov
scas
dec
jno
push
sbb
iret
and
dec
and
jmp
mov
aaa
imul
into
mov
lods
push
jmp
mov
pop
pop
jle
fidivl
stc
shlb
push
push
cmpsl
push
outsb
pushf
xor
jno
push
fsubrs
jmp
fstpt
push
cltd
rorl
cltd
int
repnz
mov
cmp
mov
into
ljmp
out
inc
shrb
pop
cld
fiadds
out
aas
inc
lahf
add
sub
and
dec
insl
push
sbb
imul
and
add
ficompl
fmulp
sub
pop
xchg
idivb
cwtl
movsl
negl
fdivrs
mov
lods
dec
into
das
test
add
cs
shlb
mov
push
adc
mov
add
test
loope
clc
cmp
stc
jmp
or
das
adc
pop
lret
ja
mov
int
cmp
subb
or
inc
xor
rcrl
sbb
shll
test
int3
mov
nop
add
aaa
cli
rcl
mov
cwtl
clc
mov
int3
mov
orl
pusha
pushf
in
lods
in
addr16
fisttps
jbe
out
testb
fldl
inc
add
negb
xlat
repz
inc
cmpsb
std
neg
fs
mov
fisttpll
add
ss
insl
sbb
hlt
cmp
loopne
sub
ret
dec
mov
xor
fisubrs
pushf
rcrl
add
adc
movsl
push
addr16
shrb
jnp
xchg
jmp
mov
push
int
and
push
xor
xor
cld
jmp
mov
iret
cli
jmp
xlat
in
das
test
shll
punpckhbw
in
popf
scas
or
cmp
mov
ss
or
jae
push
add
and
mov
add
lods
pop
inc
inc
push
xor
scas
inc
int
mov
call
daa
mov
lcall
gs
mov
addr16
pop
pusha
adc
sbb
dec
sub
std
or
push
xchg
mov
lds
loop
dec
popl
xlat
addr16
out
sbb
push
or
push
dec
mov
push
in
sbb
cmpsl
fstpl
iret
xor
loope
mov
sub
pop
xchg
mov
jle
test
push
mov
mov
ja
inc
fistps
or
in
js
sarl
fmuls
lret
js
sub
shll
lret
inc
in
jns
adc
and
add
and
fxrstor
lret
cmc
fs
jmp
lods
iretw
filds
outsl
ss
sub
push
loope
dec
fnsave
hlt
pushf
push
push
dec
and
repnz
jno
rcrb
loope
adc
shll
inc
push
pop
inc
shll
pushf
push
imul
add
inc
aad
jecxz
out
and
aaa
xchg
xchg
mov
jg
loopne
pop
addr16
inc
sbb
cmpsl
adc
jbe
fidivrs
adc
push
and
push
sti
sub
out
js
bound
sub
add
mov
cmc
movsl
jb
dec
loop
pop
push
lods
mov
xor
push
out
jo
sahf
cld
mov
sbb
jno
cld
cwtl
push
cmp
movsb
mov
lods
push
lret
out
loope
fwait
cltd
mov
inc
sub
and
fsubrp
sub
add
shrl
popa
mov
mov
add
push
pushf
push
rclb
mov
test
out
iret
cmp
add
lret
lcall
leave
xchg
nop
lahf
pop
ja
arpl
add
jne
mov
mov
xchg
test
cmp
xchg
inc
xchg
call
mov
mov
push
in
pop
aas
push
dec
outsl
std
in
std
int3
les
pop
ret
int
xchg
mov
fldenv
pusha
push
out
lret
leave
jo
mov
outsb
test
std
jecxz
fldl
pop
aam
iret
outsb
push
xchg
sbb
dec
or
rcr
jp
mov
cld
rcrb
lret
inc
or
mov
push
mov
xchg
xor
in
int3
mov
dec
xor
sbb
repz
in
test
cwtl
test
sahf
adc
xlat
aad
mov
xchg
ljmp
xchg
sbb
sub
andb
adc
pop
jbe
cld
test
outsl
mov
cmp
push
test
add
mov
int
cmc
lock
xor
call
jmp
pop
mov
sub
mov
add
mov
lcall
cs
inc
in
std
mov
jp
push
aam
daa
jmp
push
loopne
movsl
loopne
lahf
cmp
inc
sub
inc
and
sbb
add
xor
mov
test
test
ljmp
pop
mov
in
je
lds
adc
sub
imul
fxch
jno
jl
pop
mov
lcall
jecxz
or
stos
and
movsl
ss
fstl
add
mov
inc
inc
mov
insl
xchg
loopne
sarb
pop
iret
sub
leave
mov
push
fcomip
lret
out
jae
fadd
mov
jae
negb
stos
add
dec
imul
sub
fldenv
inc
add
lret
and
fcmove
test
push
iret
lea
and
gs
dec
pop
call
fs
cmp
std
insl
daa
movsl
movsl
repz
lea
ja
sbb
lock
nop
into
daa
inc
jb
mov
ljmp
mov
cwtl
sarl
lcall
hlt
lods
cmp
fnstcw
jcxz,pt
mov
inc
mov
ret
sahf
jge
inc
inc
fstpl
cmp
fimull
push
add
cli
xchg
add
pushf
ja
jne
pop
fadds
test
mov
bound
push
test
mov
sbb
xor
adc
mov
mov
cmpsb
aaa
stos
push
mov
jecxz
xchg
xchg
adc
and
xchg
mov
leave
in
leave
mov
in
rep
das
jnp
mov
ja
jmp
dec
je
xchg
js
cmp
pushl
or
dec
xchg
xor
mov
iret
jne
or
sti
in
mov
jl
hlt
outsb
push
add
sub
adc
in
out
adc
test
frstor
adc
call
std
sti
push
lods
shlb
or
fmuls
jl
jmp
adc
repz
cmpsl
gs
dec
rcll
xor
js
jne
sub
sbb
lret
sub
lock
fnstenv
imul
push
mov
popa
repnz
stos
mov
sub
xchg
orl
cltd
mov
scas
nop
pop
gs
cmp
jne
jae
xor
pop
xor
adc
fwait
in
mov
pop
mov
jne
fbld
stc
push
xor
arpl
pop
xchg
arpl
dec
fisttpll
mov
int
push
cmp
out
mulb
mov
imul
cld
push
popa
mov
mov
dec
or
das
xor
add
bound
lahf
faddl
dec
aaa
shll
mov
aas
das
popa
xchg
popa
and
fsub
das
mov
orl
pop
cltd
cltd
jecxz
out
sbb
fistps
iret
aas
pusha
push
add
call
mov
insb
mov
jmp
inc
push
fimull
loopne
leave
scas
scas
pop
cmpsb
mov
dec
xchg
push
popf
arpl
adc
mov
lret
mov
pop
roll
xchg
jmp
mov
pop
jge
imul
sti
rcr
or
orl
in
lahf
lret
js
xchg
pop
adc
hlt
xchg
popf
das
leave
jecxz
test
sbb
sub
test
cmc
pop
inc
int
insl
ds
push
push
mov
mov
push
fs
mov
repz
test
mov
frstor
sti
in
popf
mov
in
std
neg
sub
bound
dec
lret
sbb
sbb
test
cmp
fst
lods
lea
test
test
dec
pushf
pop
mov
mov
movsb
cmp
mov
jns
xor
scas
dec
jbe
push
hlt
fmull
cmc
or
sarb
imul
aam
ret
cwtl
popf
insl
ss
and
leave
hlt
add
imul
sub
stc
mov
es
iret
sbb
pop
xchg
jne
mov
pushf
cmp
push
lahf
cmc
inc
test
ret
lret
xor
push
test
outsb
fmul
bound
push
lds
addl
cmp
out
nop
popa
movsl
lcall
sub
push
imul
popf
add
sub
mov
mov
negl
test
mov
call
out
xor
mov
cltd
aas
push
scas
add
dec
fsub
push
cmp
or
nop
adc
orl
aaa
gs
mov
in
cwtl
shll
aam
xchg
add
je,pt
pop
icebp
fdivrl
pop
pop
xchg
std
lret
adc
out
add
or
test
addr16
shll
sbb
pop
nop
test
sar
cltd
iret
aad
sub
fstpl
cmp
and
or
push
loop
mov
pop
push
movsb
adc
ja
push
xlat
sub
lods
jecxz
push
pop
push
mov
jecxz
pop
hlt
orb
adc
cmc
jl
cmpsb
lods
popf
dec
dec
or
cmpsl
lods
movsb
test
cmp
inc
cmp
mov
fdivr
ljmp
lods
lahf
fdivrl
faddl
xchg
fs
xor
jmp
enter
dec
shl
cs
mov
lret
dec
in
shl
into
fidivrl
int
mov
mov
mov
ja
js
leave
stos
sbb
cmp
add
fs
test
jl
scas
lret
popf
xchg
xlat
pop
pushf
iret
mov
adc
in
cmc
roll
inc
test
scas
stos
leave
fucom
in
scas
jg
fwait
mov
mov
push
int
pop
inc
sub
mov
pusha
jp
cmp
rcrl
cwtl
or
jns
cmp
cmp
fdivrl
in
jb
dec
jmp
out
rclb
lret
inc
sbb
add
mov
sub
dec
xchg
int
fidivs
arpl
adc
nopl
jo
in
xchg
pusha
mov
cmp
roll
clc
dec
fsave
cmp
rcll
out
into
das
test
dec
dec
call
icebp
jnp
loope
mov
add
leave
push
xor
mov
sbb
jmp
mov
aas
cli
mov
movsb
dec
inc
sbb
pop
inc
xchg
push
jb
hlt
movsb
push
fstpt
test
imul
xor
bound
out
cmpsl
xchg
pop
fwait
popa
adc
int3
hlt
stc
ss
mov
dec
add
mov
xor
xchg
das
mov
or
or
jbe
sbb
mov
fiaddl
add
cmpsl
inc
sbb
cmp
mov
pop
hlt
cmpsb
loope
adc
push
and
jmp
adc
sarb
push
std
icebp
cli
pop
pushf
adc
adc
sub
mov
test
fcomi
nop
cmp
stc
out
sub
call
fistpll
ror
add
fldt
add
hlt
add
pop
push
fnstsw
test
push
sbb
mov
call
xor
sbb
inc
hlt
cwtl
mov
cmp
jle
mov
adc
fnsave
jmp
add
sub
jae
inc
adc
cmpsl
add
scas
inc
shll
roll
cmc
fldz
hlt
nop
inc
loope
jnp
es
pop
xor
inc
stos
or
mov
scas
cmpsl
xor
xor
lock
loopne
repnz
and
pusha
push
cmpb
repnz
or
das
lcall
nop
cmc
mov
mov
add
rcrl
mov
fisttps
cmp
mov
mov
fcoml
add
push
adc
inc
movsl
faddp
movsb
jmp
mov
mov
aas
popa
sbb
xchg
fistpll
cmpb
dec
aad
cmp
pop
in
cmp
daa
mov
packuswb
push
lahf
push
sub
push
jns
in
push
ficomps
popa
inc
jmp
sub
ljmp
and
sbb
mov
movsl
push
movsb
cwtl
lret
dec
mov
push
les
cltd
cmp
jmp
es
push
popf
test
lahf
lods
inc
notb
cld
pusha
js
mov
mov
stc
mov
adc
pop
lret
mov
repz
das
mov
pusha
int3
sub
ret
jmp
fsubs
xchg
mov
outsb
sbb
inc
xchg
js
dec
je
clc
cld
arpl
mov
sbb
inc
dec
fstps
lret
js
adc
jnp
cmpsl
aad
stos
pop
cmp
jle
repz
mov
subb
xor
lds
cmp
pop
cmpsl
std
cmc
mov
stos
mov
add
shrb
pop
adc
mov
int
int3
movsb
add
repz
mov
pushf
cli
mov
icebp
cmp
stc
fs
pop
ss
outsb
mov
push
test
clc
mov
and
scas
mov
fldt
stc
mov
insb
cltd
lods
orb
divl
and
mov
sub
inc
sub
dec
dec
pushf
xlat
xchg
leave
in
in
xchg
dec
dec
and
adc
rorl
or
pop
imul
cli
in
adc
ret
loopne
mov
add
and
int3
jnp
push
xor
test
pop
push
jecxz
iret
adc
inc
loope
mov
jle
shl
lret
jnp
shl
cmp
in
push
loope
push
arpl
sub
je
and
add
mov
bound
mov
mov
xor
loope
xchg
xchg
jnp
pop
sub
xchg
mov
pop
jne
fildll
lcall
sbb
sub
or
data16
adc
inc
cmpl
lret
sbb
or
icebp
and
mov
adc
pop
ja
lods
mov
add
mov
cmp
into
faddl
mov
sbbb
icebp
xchg
les
and
sbb
insl
mov
jns
shl
in
mov
shrb
aad
xchg
cs
orb
cmpsb
mov
mov
loop
cmpsl
cltd
in
test
xchg
mov
cmc
lret
mov
add
jge
xchg
sbb
mov
repnz
fdivs
test
lret
inc
xchg
jp
inc
jge
insb
enter
daa
in
xchg
shr
rcrl
jmp
rclb
xor
stc
pop
lahf
leave
cmpsl
sti
repz
pop
movsb
pop
stos
pop
aaa
xor
cmc
inc
sub
imul
shrl
pop
lods
ss
and
sbb
repz
jne
shl
gs
xchg
jg
bound
push
mov
int
mov
adcb
dec
xchg
loopne
and
xorb
fstpl
insb
push
push
xor
mov
mov
sbb
adc
movsl
xchg
loope
push
in
jne
cmc
sarl
pop
mov
push
jb
or
pushf
jns
aam
cmp
fs
or
xchg
int3
inc
rcl
jns
dec
xor
or
aad
rcrb
cmp
fldl
add
dec
pushf
cmpsb
cmp
cvtps2pi
xor
mov
cmpsb
cmpb
mov
popf
loopne
loopne
xchg
inc
push
fistl
jbe
mov
stos
aad
mov
dec
maxps
loopne
xchg
int3
push
repnz
int
loop
ffree
push
lahf
rorb
orl
and
jo
outsl
dec
rorl
dec
dec
mov
ret
jmp
xchg
ss
rorl
dec
out
adc
es
shl
test
movsb
test
add
loop
pop
in
gs
pop
fsubrs
pop
cmc
mov
mov
cmpsb
push
test
mov
cmp
mov
inc
orb
aas
jg
pop
sbb
fisubl
mov
push
mov
stos
sbb
data16
pop
fnsave
fnstcw
sbb
loopne
mov
dec
sahf
and
mov
fcoms
fxch
fldenv
imul
inc
push
test
mov
cmpsb
aas
cmp
cmp
mov
jge
jnp
mov
out
dec
lret
mov
xchg
mov
popf
insl
aam
das
fbstp
hlt
or
and
cmp
jle
faddl
xchg
dec
adc
in
dec
jl
shrl
lods
insl
push
inc
into
into
repnz
and
repnz
rorb
cmp
ret
aas
stc
outsb
loope
pushf
ss
sub
iret
cmp
push
imul
mov
out
aas
jge
rorb
dec
scas
mov
mov
dec
sbb
mov
ljmp
push
jecxz
pop
and
pop
or
lret
pop
lods
int
jecxz
das
xor
cmc
shr
dec
jmp
jmp
xor
fstps
shr
repnz
sub
xchg
sbbb
dec
mov
mov
pusha
or
das
fdivl
fisubrs
add
sbb
mov
cmpsl
inc
and
das
push
or
repnz
ljmp
aas
test
add
cmc
jecxz
mov
mov
jae
popf
popa
scas
shlb
mov
push
xor
les
sahf
dec
popf
xchg
and
xlat
lock
jge
outsl
pop
shrb
aam
add
fstps
test
pop
mov
icebp
push
pop
inc
rclb
pop
xlat
xor
pop
or
test
dec
pop
pusha
mov
or
jbe
in
add
add
test
cwtl
mov
push
cmpb
test
ret
add
int
sti
cmp
or
enter
xchg
and
mov
or
stc
stos
push
mov
out
mov
sbb
fptan
int
mov
mov
jne
add
or
sbb
test
fimuls
jns
sbb
add
add
popl
or
adcl
popf
mov
in
sbb
fcoml
pop
add
ret
xchg
xlat
xchg
cmp
adc
cmp
adc
cld
jbe
pop
in
push
movsb
adc
lret
test
insl
add
mov
mov
sti
and
mov
bound
push
push
fistpll
jnp
int
xor
in
lret
repnz
icebp
pop
xchg
adc
int3
iret
stc
lret
jmp
in
lods
inc
out
les
jnp
ljmp
xchg
sbb
out
sbb
sub
jmp
mov
cmp
jne
xor
fisubrl
hlt
lea
pop
sub
fldt
jge
fs
hlt
pop
ljmp
insb
mov
mov
movsb
aas
xor
mov
out
cmpsl
xchg
cmp
fs
mov
dec
ds
sbb
fidivl
adc
fcoml
sub
mov
xchg
lcall
and
cmp
ds
loop
rorl
cmpsl
repnz
adc
or
int
jbe
shll
lea
mov
lock
lds
pop
lods
lahf
push
xchg
cmp
dec
ja
xchg
sbb
fwait
and
popa
scas
pusha
mov
xchg
mov
hlt
std
dec
and
or
push
fwait
pop
push
xchg
sbb
mov
xor
mov
faddl
sbb
pop
push
mov
leave
stos
or
inc
sbb
inc
pop
shl
dec
push
popa
fisttps
lods
rcrb
or
test
jo
sti
mov
xchg
stos
mov
fs
inc
push
push
ljmp
add
xchg
shlb
pop
adc
cmp
fstl
xchg
out
mov
sbb
sbb
mov
repnz
scas
into
in
fdivrl
push
xor
push
in
in
bound
jbe
dec
mov
sbb
push
aam
and
hlt
leave
movsl
sbb
das
lret
push
das
cmc
xchg
inc
sbb
aaa
pushf
and
jge
jecxz
lret
mov
neg
cmpsb
mov
xchg
adc
or
lods
pop
fyl2xp1
jle
mov
mov
cs
inc
ret
cmp
xlat
xor
xchg
aam
cwtl
jl
pop
mov
push
in
cmp
xchg
das
ficomps
bound
mov
test
inc
add
mov
into
daa
jno
leave
leave
lret
nop
mov
sub
stc
xor
or
bound
dec
lcall
sub
fiaddl
sbb
hlt
mov
dec
dec
xor
sub
cmp
cmp
iret
sbb
insl
jge
repz
sar
dec
stos
adc
ror
shll
dec
jnp
mov
in
stc
ficompl
pusha
mov
mov
cmp
and
aam
add
mov
les
leave
push
mov
push
ja
test
sarl
popa
stos
add
inc
lahf
push
out
fdivl
test
or
jg
inc
fiaddl
push
sbb
aaa
and
adc
or
sub
sub
add
shlb
pusha
into
out
jbe
movsl
out
cmp
add
repnz
push
xchg
aam
mov
flds
xchg
add
xchg
xor
dec
lods
mov
into
or
dec
sarb
lar
arpl
mov
xchg
pop
pop
jmp
in
js
je
add
popa
js
and
inc
jne
pusha
mov
sub
sti
mov
rorl
lcall
mov
dec
xor
mov
dec
sub
sbb
lds
repnz
rorl
mov
add
sti
xchg
and
xlat
rclb
leave
mov
es
mov
cld
pop
rcr
cld
inc
sbb
xor
dec
xchg
shlb
movsb
adc
cwtl
xor
push
mov
mov
loopne
int
mov
dec
cli
jb
inc
jnp
idiv
es
aaa
icebp
dec
test
fnstsw
push
dec
jl
push
pop
mov
sub
inc
popf
pop
xchg
jecxz
jp
sub
and
shl
in
fwait
inc
sbb
out
in
mov
cmc
pop
and
xchg
iret
adc
ret
jns
pop
gs
push
jg
mov
nop
pop
in
cwtl
pop
sbb
loopne
in
push
jae
rcr
shll
rcrb
push
out
pushf
mov
jbe
icebp
leave
dec
stos
pop
cmpsb
cltd
xchg
or
pop
add
std
sbb
aam
adc
test
push
je
xchg
insl
cmc
and
gs
fwait
xor
inc
loop
aad
sub
arpl
cltd
mov
popa
jnp
or
stc
inc
lret
inc
in
pop
cltd
pop
stos
rorb
and
mov
sub
out
push
jbe
dec
rcll
jmp
addl
and
mov
aas
push
dec
sub
aam
leave
icebp
add
inc
mov
pop
sti
sbbb
dec
adc
lcall
imul
mov
insl
cmp
inc
sub
push
fisubl
sub
pop
dec
loop
ficomps
mov
loope
push
sbb
mov
cmp
jge
ss
and
or
loop
xchg
out
stos
loop
sbb
lea
hlt
mov
mov
sahf
and
cli
aad
fsubrl
popf
push
andb
outsb
mov
sahf
stc
pop
inc
sahf
push
dec
adc
repz
movsl
ja
adc
ljmp
jns
lcall
sbb
cmp
sbb
xor
dec
jp
xor
and
out
mov
sbb
cmp
pop
outsl
rcrl
add
jp
mov
add
jb
xchg
adc
ret
negb
sbb
mov
es
push
mov
imul
jge
mov
dec
rcl
mov
insl
enter
adc
icebp
xlat
sub
lret
sub
add
push
cmpl
or
stos
cmc
shlb
out
mov
jl
dec
pop
mulb
stc
or
push
movsl
jge
sub
mov
popf
aam
enter
cmp
mov
inc
dec
or
adc
or
sbb
fldl
stc
mov
inc
inc
testl
stc
inc
fdivl
divb
imul
fldl
push
fstpl
mov
mov
ret
sbb
call
test
inc
rorb
jge
jns
addr16
shlb
fsts
cld
lcall
in
aad
aas
lds
repz
sub
pop
sbb
in
and
imulb
fbld
loopne
mov
mov
hlt
mov
jns
xchg
imul
xchg
push
xchg
adc
stos
mov
jp
push
push
adc
test
jb
add
mov
stos
cwtl
loope
xor
xor
mov
dec
inc
cmc
sub
mov
adc
pop
pop
in
xchg
or
push
ljmp
mov
push
or
bnd
pop
sub
mov
cli
ret
int
movsb
or
inc
mov
cs
cmc
shr
rcrb
nop
xor
or
out
and
mov
add
imul
movsl
xor
and
test
cmpsl
fidivl
flds
jge
inc
jbe
mov
imul
jmp
loope
fstps
jb
loopne
testl
into
inc
lea
imul
or
cmovne
cmpsl
aaa
push
hlt
or
push
fdivr
add
pop
inc
dec
enter
dec
and
ds
cmc
popf
lds
jbe
inc
filds
xor
sub
and
fdivr
mov
mov
sub
xlat
xchg
push
stc
inc
nop
lods
fldenv
push
loope
lret
cld
pop
mov
ret
add
pop
pop
in
fbld
push
xchg
push
lcall
ret
test
and
jge
imul
inc
lret
bound
mov
int3
add
jmp
repnz
jmp
and
push
in
adc
jno
lret
in
imul
sub
jno
sbb
adcb
negb
sbb
xchg
std
sub
dec
lret
adc
and
inc
repnz
aad
push
stos
fdivl
xor
in
shll
fldt
cmp
dec
popa
repz
mov
loop
movsl
stos
mov
call
ljmp
andl
add
and
cmp
std
xchg
pop
mov
rclb
sti
or
dec
xchg
ds
pop
cmpsb
stc
fisubl
adc
mov
sbb
sub
repz
daa
inc
xchg
or
icebp
pop
and
xchg
adc
lds
sbb
cmpsb
jg
js
push
sar
sub
cmp
inc
ja
or
movsl
pop
cmp
add
aaa
fsubl
pop
mov
sbb
aam
int
xorl
adc
test
nop
pushf
inc
sbb
push
inc
cmp
into
fisubrs
lock
mov
imul
out
gs
mov
roll
or
out
pop
aaa
inc
mov
icebp
iret
in
stos
aaa
popf
into
dec
mov
or
loope
mov
mov
sahf
into
lret
cmpsb
inc
sub
or
outsl
push
outsl
jno
adc
or
jl
cmpsl
lret
and
sbb
push
jnp
mov
sub
fistps
xor
mov
jmp
mov
sbb
fldl
jnp
cmp
sub
sbb
lods
cld
rcr
dec
hlt
loop
mov
lods
fists
shll
push
fucomi
shll
xchg
frstor
jno
adc
push
cmc
les
lock
mov
inc
stos
jo
jae
or
out
mov
push
push
loope
add
push
mov
fidivs
ficompl
ror
out
in
inc
cmpsl
xor
cmpsb
fnsave
add
lds
pop
ds
shll
jno
stc
xchg
test
hlt
cmp
mov
jge
sti
and
push
enter
movsb
out
pushf
fistl
xchg
call
mov
call
iret
jmp
inc
das
or
mov
imul
jmp
iret
test
es
sbb
fiadds
sub
or
repz
js
inc
mov
cmpsl
jmp
in
dec
xchg
lret
in
jbe
movsl
mov
outsb
mov
push
pop
mov
test
iret
repnz
roll
xchg
fisttps
aam
fnstenv
frstpm(287
imul
xor
mov
push
aam
std
aad
sar
adc
cmc
and
cltd
mov
frstor
in
jmp
mov
imul
in
cld
jmp
pop
ret
pushf
cmc
inc
inc
mov
xchg
insb
add
ficomps
ret
int3
mov
mov
in
adc
push
lret
sub
int3
pop
xor
int
shrb
repnz
fs
xchg
push
jbe
cmp
xchg
xchg
push
mov
movsl
ret
lret
or
aad
dec
fs
pop
lock
inc
jo
xor
sub
je
or
xchg
test
mov
ss
jg
fimull
cmpsb
mov
imul
cmp
xchg
iret
push
loopne
decb
test
cmp
dec
repnz
aad
cmpb
in
xor
pop
arpl
ds
sub
and
sbb
test
xchg
jge
test
sbb
pusha
sbb
test
popf
cmp
fs
mov
movsl
mov
lret
ljmp
test
rcl
ja
jl
es
add
hlt
lahf
subps
icebp
hlt
mov
ja
jne
insb
idivb
fistpl
xchg
mov
rorl
jecxz
mov
add
fildll
and
rcl
leave
sub
int
out
test
xchg
jmp
jmp
mov
popf
add
or
std
inc
mov
mov
xchg
lret
les
mov
lcall
cmpsl
or
bswap
or
dec
dec
mov
scas
dec
lahf
outsl
mov
std
rcr
mov
push
mov
aad
lahf
scas
lret
ss
and
jmp
aad
mov
aad
sub
mov
lea
hlt
repnz
fdivrs
sub
popf
or
sti
cltd
sbb
jmp
in
fisttpll
stos
add
adc
add
mov
nop
ss
rcrb
cmpsl
push
adc
and
rol
lea
out
movsl
or
mov
jo
cmpsl
add
jge
fisubl
add
iret
call
shl
fisubl
jae
ljmp
sbb
push
add
outsb
dec
mov
cld
popf
add
mov
cmc
gs
cltd
mov
push
dec
scas
ret
add
add
sub
dec
test
lret
or
sub
push
stc
fstl
or
sarl
enter
adc
or
mov
inc
imul
lcall
lret
lret
incb
adc
fisttpll
aam
imul
pop
dec
xchg
incb
lods
sbb
fnstenv
movsb
lret
inc
sub
mov
cmpsl
into
int3
jo
mov
dec
lret
dec
lods
sbb
jl
push
add
std
es
lea
xchg
jecxz
fstl
cmp
btr
inc
leave
jb
xor
imul
subb
xchg
mov
or
sahf
shl
in
or
pop
ljmp
or
inc
mov
push
xchg
pop
icebp
fimuls
into
cld
cmp
sbb
xor
push
bound
sub
mov
inc
jmp
mov
lret
dec
xor
arpl
mov
movb
mov
dec
js
in
mov
std
stos
mov
push
cmc
imul
sbbb
push
sar
push
pop
ljmp
cmp
pop
in
repnz
or
repz
pop
loope
test
jge
push
ret
mov
push
scas
lret
add
cmp
aad
dec
push
rcll
mov
add
out
negb
inc
jne
cmpb
sub
fimuls
mov
push
fidivrl
movsl
psrlw
movsb
jb
add
aaa
cmp
jp
sub
js
test
adc
sahf
rorl
imul
push
int
and
shld
or
sbb
mov
std
mov
pusha
in
sub
ret
xchg
lret
pop
jne
sbb
push
mov
xchg
xchg
ja
xchg
mov
mov
stos
fldl
mov
xchg
sub
cld
jae
fstl
in
mov
lret
pop
fidivl
daa
lock
jb
pop
inc
inc
or
test
pop
add
movsl
leave
rolb
jns
sbb
fs
cs
cmp
ja
xchg
and
iret
sbb
sbb
mov
push
aam
push
push
fisttps
lock
inc
imul
mov
repz
pop
adc
in
repnz
mov
js
in
aaa
das
jl
sahf
mov
jmp
ja
aaa
hlt
lcall
leave
in
cmc
leave
aam
and
fcmovnb
scas
leave
in
bound
int
aaa
inc
gs
inc
out
mov
loop
int3
add
lock
fwait
adc
or
js
xor
cmpl
outsb
addr16
jo
sbb
xor
push
lock
mov
loopne
iret
or
int3
mov
es
push
mov
add
mov
icebp
xor
push
insl
sbb
inc
negl
cmp
shl
adc
in
sbb
xchg
inc
xor
xchg
add
shll
or
mov
add
ljmp
je
bound
sbb
shr
daa
push
scas
les
push
subb
daa
stos
call
mov
leave
xlat
inc
sbb
mov
inc
pusha
push
int3
jne
aaa
cs
xchg
flds
test
cmp
std
push
in
enter
pop
add
jne
cmp
in
repnz
sub
mov
or
lret
push
enter
mov
xchg
test
or
cmpsl
or
jnp
aam
cwtl
push
imul
dec
xchg
fadds
dec
arpl
cli
add
fbstp
int3
adc
scas
test
sbb
jo
je
xor
dec
std
mov
and
imul
push
into
lea
jae
xchg
test
fdivrl
cmp
sub
ret
jno
outsl
add
push
negl
or
mov
sar
lret
lahf
mov
xor
cs
fldt
mov
or
loope
in
roll
aad
add
push
leave
ret
setne
rol
mov
rcrb
mov
stos
out
daa
test
out
sub
movsb
and
mov
repnz
stos
in
or
cmpsb
iret
adc
lds
mov
dec
fs
addr16
subb
xchg
lods
fnstcw
cmp
xchg
hlt
or
add
mov
mov
mov
adc
mov
or
cltd
push
test
cmp
pop
push
int3
out
lods
stos
add
repnz
ret
sbb
cmp
ret
jb
test
or
jne
adc
pop
cmc
movsl
hlt
adc
mov
cmp
push
fldl2e
cwtl
xor
shll
incl
mov
mov
scas
jge
sbb
out
sbb
sub
mov
int3
cmp
data16
out
mov
clc
mov
cmp
dec
cmp
jb
jl
inc
not
in
jmp
ja
fstpt
test
ret
push
xchg
insl
ja
ja
fsubl
dec
testb
fimuls
mov
or
shlb
mov
pop
fidivrs
scas
adc
fisubs
cmp
push
pushf
add
sbb
hlt
xchg
add
daa
add
or
jnp
add
movsl
popa
cmpsb
sbb
addr16
and
mov
mov
arpl
sbb
imul
adc
fadds
sahf
cmpsb
add
test
into
stos
pop
call
incb
cs
test
movsl
mov
icebp
fidivs
fimull
popa
jbe
mov
pop
mov
xchg
mov
daa
cmp
cli
pop
push
mov
imul
cld
push
lods
and
xchg
cmpsb
adc
cmp
mov
jmp
dec
sti
mov
clc
shll
loopne
fs
jp
shlb
adc
fdecstp
cmp
loop
push
inc
scas
xchg
aaa
popa
and
nop
mov
dec
loope
cmpsl
in
mov
xor
not
pushf
mov
and
arpl
jne
ret
jecxz
mov
mov
mov
mov
popf
pop
sbb
cmp
dec
out
bound
xchg
icebp
loopne
shr
aaa
in
push
fucom
cmp
adc
aad
rolb
ret
fimull
pop
sub
popf
loope
jo
cmpsb
cmp
in
add
cmc
xlat
mov
cmp
pop
pusha
cmpsl
sbb
push
inc
jbe
and
testl
push
pop
or
mov
mov
pop
popf
pop
lahf
xchg
push
mov
cmp
inc
dec
fstl
out
cwtl
addr16
int
mov
push
jmp
add
pop
xchg
faddl
lods
ljmp
imul
push
jge
lret
sub
or
rcrl
mov
cmp
mov
sbb
insb
jg
outsl
lods
add
dec
jmp
xchg
xchg
test
pop
or
adc
int
push
or
fmull
int3
jp
inc
adc
add
inc
aam
bound
mov
shlb
jne
cmp
test
paddusw
adc
cmp
fstpt
dec
jge
and
adc
outsl
sbb
insl
fs
ret
xor
insb
ss
repnz
add
scas
rcl
call
or
loope
insb
icebp
push
inc
dec
pop
adc
fidivrl
xchg
imul
pop
or
sub
addr16
inc
fistps
stc
mov
sahf
std
popf
mov
mov
mov
push
inc
gs
fdivrs
es
js
jmp
mov
dec
test
mov
sbb
lods
js
sub
imul
or
movsb
push
out
and
wbinvd
std
xlat
scas
pop
mov
mov
adc
inc
movsb
pusha
scas
icebp
hlt
ret
addl
add
push
xor
sarb
push
mov
mov
sbb
mov
mov
sarl
je
add
fs
sti
pop
scas
or
fidivs
or
push
cltd
add
add
and
mov
add
imul
pop
out
cmp
pusha
mov
test
lods
fwait
adc
adc
mov
xchg
inc
mov
fwait
add
push
adc
or
jle
imul
push
ds
mov
jne
fisttps
pop
mov
or
sbb
and
bound
mov
jmp
and
ret
push
mov
mov
cmc
mov
fwait
bound
aam
ret
xchg
mov
fisubs
add
std
and
or
cmp
pop
movb
shrb
xor
mov
int
movsb
add
cmovbe
xor
outsb
jae
sbb
bound
lcall
lcall
gs
lret
insl
int3
fwait
ja
ljmp
xor
push
mov
fwait
js
test
cltd
and
in
cmpsl
push
jmp
xchg
and
rcrl
std
and
adc
adc
out
and
xor
in
mov
cld
inc
mov
sub
ja
andb
mov
insl
mov
nop
lret
ss
jle
jnp
scas
or
call
sub
cmp
sbb
scas
fbld
arpl
xor
fptan
jle
js
or
testb
shrl
fwait
jne
or
mov
fldl
lock
adc
bound
aad
test
iret
out
jns
call
int3
cmp
inc
cli
inc
loop
out
pop
out
dec
not
sahf
repnz
inc
dec
push
push
or
jns
aas
mov
adc
mov
push
dec
inc
pop
shrb
mov
xchg
aad
cltd
cltd
pop
in
cmpsl
int3
jg
lret
xchg
lret
xchg
jnp
mov
adc
dec
mov
inc
arpl
mov
insl
daa
mov
imul
xchg
cltd
xchg
push
lock
repnz
scas
xchg
add
sbb
out
sbb
cmp
add
lcall
rcrl
cmp
add
in
mov
out
add
pop
mov
jecxz
add
push
or
gs
out
inc
push
test
das
fwait
test
loop
movsl
cmpsl
add
xchg
or
mov
xlat
mov
movsb
gs
aad
mov
ret
jecxz
lret
test
cltd
jbe
add
scas
filds
mov
and
xor
aas
ss
les
cmpsl
cmp
sub
sbb
popa
rcl
arpl
cmc
and
sub
jns
aad
pushf
shl
sahf
rolb
mov
lahf
mov
push
lcall
cwtl
adc
mov
movsb
test
sub
mov
mov
stc
cmp
movsb
push
mov
and
jnp
pushf
sbb
xchg
bnd
push
or
stc
sub
mov
xchg
dec
mov
mov
fcom
cmp
mov
std
xchg
sub
pavgb
mov
mov
call
sbb
sub
mov
scas
mov
cmpsb
ror
roll
jecxz
test
mov
aad
push
cmp
pmaddwd
aas
lods
inc
pop
pop
mov
and
jle
sbb
in
inc
mov
roll
leave
rcrb
movsb
mulb
aas
and
dec
insb
mov
mov
fldcw
cmpsl
lea
fcom
add
adc
pop
fwait
mov
xchg
dec
pop
and
std
scas
add
cmp
and
add
or
xor
xchg
cmpsb
dec
inc
jmp
push
iret
mov
scas
push
mov
adc
xorb
mov
aam
mov
or
push
jae
dec
pop
or
sub
orl
jmp
jo
adc
ss
mov
popa
or
addl
insb
lret
ficompl
dec
pop
movsl
decb
out
dec
cld
cmp
mov
aam
cli
mov
mov
and
inc
mov
push
testl
subl
sub
mov
lret
push
aaa
cli
addr16
jmp
xchg
xor
xchg
dec
aaa
mov
bound
mov
xchg
sbbl
sarl
cmp
pop
dec
pusha
pusha
jge
loop
lahf
dec
leave
push
ret
dec
movsl
pushf
negb
sbb
js
cmp
pop
movsl
stc
or
sbb
rcr
jmp
jae
aaa
dec
pop
inc
cs
inc
push
shlb
mov
loop
mov
dec
cmc
je
jle
lds
ret
pop
cmp
out
fsubp
test
jecxz
out
cmpsl
std
cld
sub
leave
pushf
jmp
and
add
call
mov
mov
adc
test
mov
jbe
test
imul
cmpsl
ror
ljmp
hlt
jnp
mov
mov
push
pop
pushf
daa
add
iret
stos
cmp
pop
push
les
add
insl
andl
or
pop
leave
int
loopne
es
mov
sbb
sbb
jmp
push
pop
xchg
cmp
inc
cmp
sbb
push
fstpl
das
scas
mov
mov
xchg
xchg
int3
mov
mov
mov
cld
loope
push
mov
jl
aad
sub
movsl
sbb
call
sub
and
jbe
mov
cmpsb
pushf
fldcw
out
mov
jle
jge
in
inc
mov
push
loope
jge
fcoms
push
cmp
dec
pop
and
movsl
shrl
out
mov
out
dec
stos
jae
dec
enter
or
mov
mov
lretw
xor
lret
sub
jmp
mov
dec
fldenv
or
xchg
aam
rorl
push
test
jecxz
out
push
dec
ja
js
test
xor
mov
inc
jns
push
mov
lret
fwait
je
gs
pop
sub
jae
mov
dec
rcrl
and
fstl
or
bound
sub
call
and
push
mov
add
aaa
imul
mov
jno
jmp
mov
fstps
in
subb
jmp
sub
mov
into
out
add
and
pop
mov
loop
cmp
jmp
cmp
xor
insl
int3
pop
mov
sub
or
adc
shlb
sbb
pusha
sub
dec
mov
cwtl
jecxz
stc
cmp
sbb
xor
cmp
fwait
inc
dec
adc
lods
mov
repnz
pop
pop
rol
call
adc
in
call
je
test
sbb
xchg
xchg
adc
inc
push
or
add
into
sub
inc
stos
cli
ret
push
inc
sbbb
rol
sub
int3
insb
fs
inc
mov
mov
je
std
xchg
push
inc
jl
xlat
xor
bound
enter
imul
sbb
dec
or
pop
stc
push
sbb
pop
cmpsl
xchg
pop
ffree
insl
ret
in
rcrl
lods
fistpll
gs
pop
loop
fsubl
call
pop
pusha
add
stc
dec
inc
jne
test
pop
inc
loope
jno
lods
mov
inc
pop
inc
jbe
je
fimull
out
test
lret
jge
jle
dec
or
pop
jne
pop
mov
imul
lret
icebp
int
imul
xor
fsubrs
add
imul
push
out
xchg
cmp
movsb
mov
gs
xor
add
pop
cmp
pop
mov
mov
aad
pop
dec
push
int
mov
out
mov
lret
add
inc
push
shll
stc
and
mov
and
push
lods
add
sub
sti
xchg
sub
fnstsw
cmp
das
mov
inc
fadd
xchg
bound
mov
inc
jle
lcall
sbb
nop
cmpsl
adc
pop
mov
xor
leave
fcmovu
or
push
lret
loopne
sbb
lret
jo
push
lret
insl
xor
jne
pop
dec
or
push
push
testl
into
cmpsl
xlat
xor
or
insl
ret
pop
xchg
fiaddl
mov
pop
in
push
lods
xor
sti
jnp
mov
aad
inc
testl
lods
jnp
int
push
pusha
in
xor
xchg
cmp
nop
repz
daa
mov
outsl
rolb
ror
inc
and
in
xor
js
mov
in
cwtl
cmp
jnp
push
sub
push
jne
int
inc
mov
mov
aad
pop
popf
sbb
mov
fcoml
push
gs
fsincos
push
push
sti
and
adc
fs
add
pop
mov
rcrl
mov
sub
cmp
lcall
mov
aad
shll
adcb
loope
inc
pop
add
int3
cmpb
ret
imul
fldcw
sub
mov
loopne
inc
aam
jns
cmp
and
pop
xor
int
pop
scas
add
lods
push
cmp
pop
pop
sbb
movsl
aam
dec
mov
dec
jle
fcmovnbe
dec
pop
dec
decb
and
jg
pop
call
dec
sahf
cmp
fisubl
xor
lea
aam
in
int3
mov
mov
push
fdivrl
rcrl
xor
xchg
inc
out
mov
and
mov
cwtl
imul
mov
jmp
in
mov
pop
pop
inc
fsubs
sbb
sub
int3
aaa
cmp
popa
cs
cmp
inc
xor
movsl
jl
sbb
scas
test
dec
or
sub
mov
mov
add
outsl
lret
inc
push
test
leave
cmp
pop
pop
mulb
pop
iret
imul
pop
pop
sti
push
inc
mov
push
push
mov
cltd
and
xor
bnd
rcr
pop
adc
xor
lret
roll
shll
mov
ja
popl
pop
xchg
push
jnp
and
mov
in
mov
shr
fisubl
and
add
flds
mov
sub
jge
hlt
dec
aaa
in
cmp
subl
mov
push
jmp
sub
sub
out
lea
add
sbb
xor
inc
and
rcrl
sti
in
fwait
notl
int3
inc
fcompl
stos
popa
in
and
sarb
xor
stc
fcmovu
xor
int3
push
xor
jmp
pop
in
fsts
mov
sti
in
test
lret
mov
in
ss
movsl
xchg
jp
dec
stc
fists
fisttpll
push
cltd
pop
jmp
in
loopne
loope
ret
outsl
gs
cmp
popf
push
push
add
fs
mov
ror
fucomip
mov
push
xchg
cmp
add
lret
pushl
adc
mov
inc
mov
ret
inc
xor
cltd
loope
das
mov
movsl
cmc
mov
bound
pop
inc
cmpsl
mov
push
nop
jnp
mov
xchg
rorb
outsb
rorl
xorl
movsb
sub
lds
mov
push
ljmp
pop
add
fildll
stc
push
lret
jbe
sbb
outsb
cmp
data16
jae
pushf
int3
mov
scas
repz
repnz
rol
mov
das
add
xchg
call
repnz
rorl
test
fmulp
jg
in
and
stos
mov
pop
stos
inc
loop
mov
das
mov
lret
fstpt
jno
adc
cmpb
jecxz
push
jb
lock
jno
roll
test
jae
or
bound
cwtl
adc
cmc
jns
adc
or
mov
cmp
jl
or
in
mov
xchg
in
or
push
icebp
inc
in
jnp
cmp
sub
mov
movsl
push
shll
pop
dec
in
xor
aaa
cmpsb
scas
add
xor
leave
lret
or
pushf
aaa
cmp
cmpsl
push
or
loope
faddl
fdivrl
pop
es
inc
sbb
push
iret
test
cmpsl
adc
mov
bound
xchg
aam
out
mov
ret
add
dec
mov
leave
into
mov
aad
test
fldl
dec
xchg
imul
fsts
cli
sar
int
xor
jbe
sbb
shl
aaa
std
inc
pop
jnp
ss
jo
test
cmpsl
fiadds
or
push
add
shlb
inc
nop
stos
xchg
mov
aad
nop
lods
and
test
xlat
in
filds
rcl
lods
insb
stos
mov
cmpsb
xchg
fnstcw
movsb
rep
sbb
push
dec
mov
mov
pop
lret
mov
inc
cmovbe
push
fdiv
sub
and
jmp
nop
rorb
sbb
adc
cmp
fnsave
and
ficomps
sahf
ficoml
in
movsl
aaa
movsl
sbbl
adc
daa
cmp
fwait
aas
sbb
xchg
lahf
push
cmp
jg
pop
test
rcll
mov
ja
std
pop
jb
hlt
push
push
or
sbb
fsubr
inc
stc
repz
testb
mov
sahf
lret
fbstp
dec
xchg
mov
std
mov
inc
push
add
das
int
sub
xchg
fs
push
test
sub
sti
xchg
into
repnz
sbb
pusha
and
fnstsw
aam
sbb
gs
enter
adc
out
mov
jmp
fdivl
movsl
loope
lcall
outsl
in
in
inc
xor
lret
mov
cmpsl
cli
cmp
in
loopne
outsl
lcall
in
dec
out
scas
xchg
call
pop
mov
nop
add
pop
arpl
out
shrb
mov
adc
or
inc
mov
dec
arpl
sub
adc
mov
sub
rolb
jo
sbb
xor
or
sub
insl
xchg
push
arpl
pop
hlt
fistpll
sbb
or
inc
in
sar
jmp
lods
out
inc
adc
or
mov
arpl
nop
adc
lret
push
xchg
daa
xchg
pop
jmp
push
adc
sbb
inc
dec
lret
and
bound
mov
popf
testl
fwait
pop
in
fs
mov
add
push
int
xchg
push
loop
and
jl
mov
movsb
xchg
jp
mov
data16
ficoms
xchg
pusha
das
mov
push
iret
roll
arpl
push
pop
dec
test
pop
adc
sub
pop
pop
fimuls
aaa
leave
loope
jae
mov
lods
mov
test
dec
inc
pop
insb
fstl
sbb
xor
inc
jne
aas
fdiv
xchg
mov
xor
mov
dec
xchg
add
fstpl
movsb
pop
push
mov
adc
jne
sub
in
dec
stc
enter
dec
loope
bound
subl
jge
cmc
sub
dec
mov
mov
xchg
inc
mov
adc
aaa
pop
out
int
mov
sbb
fcmovnu
sub
or
repnz
in
popf
loopne
sbb
outsl
popa
js
popa
dec
lahf
or
xchg
in
pcmpgtb
and
xor
xlat
in
es
xor
push
push
cmc
sar
xchg
xchg
cmp
mov
and
and
fidivl
jle
lods
mov
sbbb
popf
pop
or
mov
push
sbb
iret
repnz
jnp
cmc
push
out
insl
mov
fnsave
jmp
and
fstp
adc
mov
sub
add
push
jge
pop
push
int
mov
sbb
repnz
or
fnstcw
fsts
ret
and
push
or
loope
jae
dec
jne
addr16
jge
sub
pop
int
xchg
add
in
mov
lret
hlt
frstor
mov
mov
sbb
push
sbb
lret
fptan
fimull
loope
push
ja
add
aam
mov
or
ja
mov
sbb
out
or
and
dec
std
fs
mov
fwait
jno
cmc
lret
xor
pop
jb
mov
mov
dec
mov
stc
jecxz
inc
add
jnp
loopne
mov
push
loope
into
cmp
in
rclb
cmp
inc
inc
lret
cld
out
cmovb
in
cmp
lods
mov
mov
cmp
shrl
aaa
daa
into
xchg
mov
sahf
add
xchg
aaa
sub
pop
aam
int3
lock
jbe
sbb
pop
sbb
cmp
dec
mov
jo
push
inc
clc
push
insb
sbb
icebp
iret
repnz
dec
in
hlt
cmpsb
jge
jnp
nop
cltd
data16
aad
jle
xchg
test
hlt
icebp
push
insl
mov
shr
mov
cltd
pop
fbld
push
sbb
movsb
nop
inc
fildl
pop
push
mov
mov
inc
roll
inc
lret
subb
filds
push
pop
movsl
sahf
frstor
lahf
mov
andb
int
mov
data16
cmp
dec
jl
mov
and
test
xchg
add
ds
xchg
pop
pusha
mov
outsb
out
insb
dec
pop
adc
lret
aam
out
pop
dec
outsl
jge
cmp
out
push
jg
aaa
sbb
inc
cmc
mov
xchg
dec
aaa
add
xchg
fdivl
in
arpl
inc
cmpb
add
push
rclb
fcoml
jle
push
out
jmp
dec
xchg
fstp
sub
iret
and
in
inc
jno
fnstenv
in
xchg
add
dec
add
mov
pop
xor
mov
and
sbb
xchg
mov
push
adc
cmc
push
lret
ret
ret
and
push
std
push
xchg
out
sub
mov
sub
into
fidivrs
jns
sbb
jmp
lahf
pop
stc
pop
inc
xchg
and
ficoms
push
hlt
test
movsl
push
movsl
jno
fs
cmp
add
lods
loopne
popa
loope
inc
std
stos
mov
or
cmpb
mov
sbb
addr16
mov
inc
mov
pop
sbb
sbb
xchg
push
xchg
add
movsl
fsts
cmp
insl
fmuls
or
xchg
mov
xor
adc
or
fcomip
movsl
shl
jecxz
popa
outsb
xor
loop
mov
cmp
popa
cli
fs
dec
mov
es
fs
cmp
adc
mov
inc
cmp
jl
push
aaa
into
lea
aaa
clc
hlt
add
xchg
test
pop
cmp
pop
push
pushf
ja
fistps
xorl
dec
sub
pop
push
fistps
repnz
or
idivl
into
aad
popa
cmpsl
or
fiaddl
xchg
sub
adcb
pop
jnp
in
repz
fs
stos
filds
mov
dec
mov
mov
fcompl
call
pop
lcall
popf
xchg
rcrb
push
aad
ds
imul
add
mov
mov
mov
push
sub
fnsave
push
jno
test
xor
add
and
push
filds
stc
ret
jbe
push
push
shll
push
xchg
adc
jbe
stos
fdivl
or
mov
mov
add
shll
ja
lea
lcall
sbb
in
xor
and
mov
jns
dec
mov
sbbb
stos
dec
inc
in
cmc
addr16
inc
pop
pop
xor
push
into
jge
lret
ret
popa
es
mov
jecxz
push
fs
hlt
loope
lret
mov
imul
pop
xchg
add
out
mov
inc
push
mov
pop
cmp
iret
fs
imul
dec
or
xor
fsubrp
pushf
fstpl
in
mov
jge
adc
sub
xor
ljmp
subb
mov
cmpsl
jge
js
fisttpl
and
lea
push
imul
mov
stos
or
xor
add
inc
imul
or
pop
inc
jmp
loopne
scas
std
and
fwait
lods
jmp
mov
mov
not
cmp
xchg
mov
and
sub
cwtl
inc
hlt
lea
mov
call
cltd
mov
insl
lock
sub
arpl
ret
les
jecxz
aam
cld
mov
cmc
pop
scas
mov
lret
ret
fmull
mov
loopne
sbb
fstpt
jmp
fnstsw
scas
add
sub
imulb
xchg
cmpsb
ret
icebp
sahf
pop
lods
dec
sbb
insl
add
jl
pop
pop
pop
push
mov
aam
aam
fwait
lods
fisttpll
mov
out
mov
leave
outsl
jl
mov
add
pop
rclb
test
mov
mov
pop
movsb
dec
or
xchg
movsb
in
scas
rcr
dec
inc
sub
mov
in
add
fnstenv
test
lds
fst
pop
movsb
or
fbld
lret
pop
xlat
ja
jecxz
jmp
mov
cmc
addl
jecxz
int
xor
cmp
sbb
jb
hlt
call
add
xchg
rcl
frstor
clc
cmpsl
fldlg2
aad
sahf
jmp
mov
test
mov
in
call
dec
xchg
scas
sub
xchg
iret
pop
packsswb
mov
xor
out
out
or
shl
bound
xchg
add
inc
mov
test
fsubrl
imul
mov
xchg
fisttpl
mov
cli
mov
sub
dec
ss
inc
mov
iret
arpl
int3
lcall
cmp
jb
loop
testl
or
adc
xor
ljmp
stc
and
xchg
pop
hlt
shll
sbb
repnz
imul
sub
pushf
ss
test
cmpsl
mov
ja
add
xor
out
dec
inc
xor
push
repnz
lods
iret
test
add
leave
fildll
mov
repnz
pop
add
popf
mov
push
mov
cmp
jl
roll
or
pusha
or
dec
pusha
cwtl
loope
movsb
mov
inc
mov
lret
cmpsb
in
out
inc
xchg
mov
lret
repnz
mov
stos
jmp
jnp
lahf
aam
loopne
cmp
fwait
mov
shrb
jb
rorb
mull
mov
dec
insl
fldenv
jo
mov
int
xchg
pop
jae
mov
dec
mov
add
jmp
mov
test
mov
mov
xor
loop
dec
sub
popf
rcrl
mov
test
or
pop
imul
mov
es
inc
ret
fldt
pop
iret
mov
mov
and
dec
push
mov
enter
pop
dec
inc
scas
mov
inc
stc
loop
cmp
mov
dec
inc
cmp
cmpsl
aaa
mov
subl
call
pop
jo
add
cmp
aad
add
call
sbb
mov
fdivr
movsl
rcr
std
mov
ret
fistl
push
pop
sarl
inc
jp
les
nop
sub
js
fsub
mov
add
repz
xchg
clc
push
lds
jmp
aad
jl
fwait
mov
into
jnp
lahf
imul
lds
jne
cmpsb
cli
jbe
out
mov
xchg
dec
fwait
pop
jg
mov
fs
pop
pusha
mov
adc
or
pop
push
push
mov
lock
out
jb
movsb
lahf
movsb
inc
das
lcall
jge
mov
shll
pop
roll
fs
mov
fistl
cmp
imull
fxch
mov
faddl
movsl
les
cs
jns
xor
fcoml
leave
icebp
and
fadds
shl
mov
sti
jmp
int
or
mov
jo
push
imul
addl
test
fnstsw
iret
fwait
aam
and
jmp
fisttpll
ss
insb
stc
or
or
mov
xchg
and
sbb
dec
dec
mov
or
pop
pop
xor
loopne
push
aaa
jg
xchg
sbb
lret
sahf
xor
fmulp
in
and
aaa
sub
mov
xchg
or
pop
push
dec
mov
popf
inc
add
push
out
dec
nop
mov
mov
fcmovnb
add
stos
mov
sbb
or
daa
scas
sub
add
jbe
add
push
hlt
test
push
stc
lock
cwtl
mov
sub
enter
aam
mov
push
shl
cmp
xchg
lahf
and
mov
loop
sub
pop
inc
or
test
inc
vorpd
pop
xchg
dec
out
push
mov
gs
or
push
mov
gs
scas
mov
mov
mov
icebp
repnz
inc
xchg
mov
mov
mov
or
sub
xchg
insl
mov
lahf
pushf
pop
jne
jle
pop
mov
adc
je
pop
pop
inc
out
fucomp
xor
jmp
inc
pop
mov
fs
aaa
loopne
mov
lahf
sub
inc
in
es
mov
cld
mov
ss
mov
dec
nop
push
or
xor
in
addl
dec
sbbl
mov
lea
push
notb
push
ficomps
mov
adc
jl
in
xchg
sbb
and
adc
adc
or
add
sbb
fbstp
sbb
mov
fwait
xor
mov
jle
xchg
lods
ret
int
pop
lcall
pop
pop
adc
fs
loopne
cld
jmp
cli
fwait
aaa
push
hlt
mov
jnp
cmp
add
mov
hlt
and
cmpsb
movb
popf
outsl
xchg
pushf
jnp
jp
mov
mov
int
add
push
add
cmp
fnstcw
cmp
ds
adc
add
mov
inc
pushf
xor
loope
add
outsb
int
sbb
test
sahf
fidivl
push
inc
mull
dec
sbb
pusha
sbb
cmp
scas
lahf
dec
filds
mov
pop
xchg
ret
popa
in
pop
int3
fs
sahf
fnstcw
sarb
incb
push
mov
mov
daa
sbb
dec
out
test
inc
jb
mov
sub
insl
pop
aas
popa
mov
jnp
rcrl
jl
add
imul
iret
push
sub
loop
cmc
pop
pop
fldenv
mov
in
lods
loopne
jmp
xor
sub
fidivl
iret
xor
lcall
sub
pop
fs
inc
adc
sbb
lret
mov
xchg
jmp
mov
sahf
sarb
adc
or
and
sub
scas
push
movsl
nop
cmp
jmp
stos
mov
loop
lea
mov
ss
sbb
lret
pushf
inc
push
add
jae
xor
or
pusha
movsb
ja
or
pop
add
fmull
mov
arpl
dec
sti
mov
mov
repnz
pop
push
sub
fdivrs
xlat
loope
mov
mov
inc
sub
or
jl
add
sbb
popa
lret
pop
popa
mov
push
adc
xchg
cmp
or
frstor
mov
jle
dec
cwtl
cld
aad
push
mov
std
cmpsb
push
xchg
mov
dec
mov
shll
pop
inc
dec
test
fmull
xchg
mov
fmull
fcomi
insl
sub
in
rorl
flds
fidivl
jns
arpl
pusha
adc
pop
push
pop
xor
fs
pop
or
scas
imul
pop
jge
cmovl
not
shll
mov
fs
icebp
nop
fucom
push
fbld
std
int3
jo
mov
sub
iret
in
fs
mov
sbb
aaa
lret
add
jbe
ss
push
sbb
cwtl
aad
adc
mov
and
popa
and
pop
pop
filds
sub
sbb
fs
xchg
js
out
or
cmc
movsl
fcompl
in
out
adc
bound
fucomip
lds
jmp
cmp
fldl
lea
pop
push
inc
test
add
in
adc
add
and
popa
add
xchg
pop
and
ss
out
pusha
test
pop
push
out
mov
mov
popf
popf
xchg
movsl
pushf
inc
mov
jp
testl
pop
cmp
lret
repnz
xor
mov
mov
jne
int
inc
jp
pop
adc
ficompl
cmp
xor
cld
add
mov
mov
jnp
shl
fisubrl
out
decb
cmp
cmpsl
insb
int
xor
dec
iret
fnstenv
sarl
ret
fwait
push
ljmp
sbb
cmpb
add
mov
inc
mov
jns
shll
cmp
xchg
shr
fidivrs
rcrl
pop
stos
jo
mov
sti
out
push
sub
push
fnsave
xor
inc
mov
jl
cld
inc
insb
mov
push
sub
dec
dec
hlt
icebp
idivl
add
push
pop
in
shl
dec
and
popa
inc
cmpsb
add
into
in
ja
fistl
mov
mov
dec
jmp
or
push
scas
shlb
cmpsl
leave
cltd
out
inc
fidivs
sub
cltd
xlat
inc
mov
adc
loope
push
pop
je
ss
sahf
stc
inc
shll
popa
xor
adc
movsb
stc
mov
arpl
loop
in
movsb
aaa
jg
fcomp
mov
or
pushf
arpl
ret
fsubp
hlt
loopne
shl
ja
jns
test
jl,pt
fldt
or
mov
cmc
addb
sbb
mov
fimull
out
add
and
sub
sub
lock
lods
mov
mov
cltd
and
mov
fdivl
hlt
fcoms
sub
bswap
dec
sbb
push
hlt
sbb
add
scas
decl
xchg
lea
mov
pop
hlt
je
fbld
movsl
or
or
addr16
cli
int
in
push
xchg
or
arpl
std
call
rcrb
cld
test
add
int
repz
mov
aaa
pushf
jno
adc
in
fcoml
mov
push
jge
out
out
sbbb
iret
testb
lea
mov
mov
mov
repnz
sarl
jecxz
mov
cltd
jp
in
jle
data16
loopne
mov
mov
and
jecxz
int
jge
pop
mov
scas
inc
outsl
cld
in
fstpt
cmpb
pusha
dec
mov
dec
dec
insb
fwait
jmp
inc
adc
inc
jmp
pop
and
jns,pn
xchg
cwtl
fsubrl
xchg
dec
push
lret
inc
andl
pmulhw
mov
and
fst
bound
cld
jge
fdivs
jp
xchg
movsb
pop
wrmsr
imul
negb
pop
or
pop
push
sbb
cld
cwtl
repz
add
out
inc
fimull
mov
iret
aad
test
bnd
jae
jno
push
mov
loop
fs
shrl
xor
push
fucom
inc
pop
push
sub
push
lret
push
cmp
aas
jl
pop
loop
add
xchg
shll
mov
inc
xchg
repz
sub
jmp
insl
xchg
dec
xchg
xor
push
in
pop
imul
sub
das
and
cmpsl
lret
sub
popf
jmp
mov
ret
filds
repz
pop
add
mov
out
ret
loopne
clc
mov
xor
cmpsl
shll
mov
mov
insl
and
jecxz
popa
mov
out
xchg
cs
sbb
jmp
xchg
pop
fsubrl
inc
sub
popfw
insb
sahf
and
xor
xor
test
js
mov
shlb
loop
std
xchg
lret
or
pop
add
nop
mov
fcmovnu
xor
sti
fs
pop
lcall
cmp
cmp
fwait
lcall
jb
or
xor
xlat
in
or
or
insb
add
inc
add
mov
sbb
test
mov
das
or
in
jae
mov
out
mov
push
lea
stos
icebp
cltd
in
mov
adc
stc
push
aad
inc
mov
movsl
sbb
push
jecxz,pn
xchg
dec
jmp
dec
test
jl
jmp
aad
mov
mov
jnp
add
pop
lcall
pop
outsb
popa
les
in
rcl
jbe
mov
std
push
sub
popa
out
mov
xchg
xchg
push
mov
lcall
ja
fidivrl
jp
or
aas
clc
push
sub
iret
roll
or
sub
data16
rcr
in
nop
xchg
xor
loope
ja
sbbl
fstpl
out
movsb
into
or
int
push
dec
and
aad
lcall
shll
mov
cmpsl
shrl
fcomi
lret
cmp
fnsaves
mov
hlt
in
cmpsl
or
lds
movsl
or
fcompl
jmp
or
insl
loopne
bound
jnp
loopne
sub
inc
ret
jnp
jae
sub
sub
add
pop
fcomip
mov
push
pop
fbstp
pusha
cmp
int
aad
mov
mov
ja
xchg
sbb
xchg
jbe
mov
jg
sti
add
cmc
dec
mov
arpl
movsl
test
add
cmc
jp
inc
push
lahf
fndisi(8087
cmpsl
outsb
jecxz
pop
or
dec
arpl
xor
xor
dec
out
xchg
xchg
addl
mov
push
jecxz
mov
lcall
int
out
dec
or
inc
pusha
push
bound
xchg
add
push
iret
insb
push
add
divl
inc
fs
cmp
mov
mov
or
in
fs
es
xchg
arpl
xor
mov
inc
pop
dec
mov
xchg
std
lret
add
mov
add
inc
mov
push
or
xor
or
push
dec
pop
enter
and
sbb
iret
sbb
adc
inc
ds
imul
movsb
adc
xor
dec
mov
bound
or
push
xor
cmpsl
std
push
push
xorb
mov
and
ss
imul
push
loopne
xchg
flds
mov
xchg
aad
push
sub
or
fstps
pushf
adc
add
adc
je
rcr
mov
or
ss
mov
std
ret
shrl
out
cld
cltd
test
fdivp
dec
mov
shr
push
push
in
scas
add
mov
ret
cmp
jno
sub
arpl
sbb
popa
repnz
inc
in
hlt
cld
xor
shll
lods
pusha
mov
iret
xchg
jb
fldcw
lods
jnp
and
push
cmp
pushf
in
mov
call
mov
in
cmp
loopne
lcall
int3
into
mov
fstps
xchg
push
ror
cmpsb
or
xor
inc
fs
pop
push
push
cltd
in
js
repnz
js
push
cmpsl
push
xchg
js
or
xchg
sbb
cmp
arpl
sbb
dec
movb
add
fidivl
mov
bnd
inc
adc
xchg
mov
lock
pop
lea
shlb
mov
jbe
add
push
add
pushf
lret
les
hlt
mov
lods
adc
add
in
adc
pop
int
outsb
jecxz
lods
lods
lock
faddp
cmp
daa
and
push
add
int
and
iret
mov
out
xor
push
sbb
popf
inc
sub
test
add
std
div
xchg
sub
cmpsl
ja
mov
int3
std
fdivrl
ret
fists
push
mov
push
jecxz
mov
jmp
and
adc
lcall
dec
shr
mov
icebp
sar
ret
int
testl
xchg
scas
pop
pop
push
ret
and
loope
jecxz
lcall
fsubs
push
and
sbb
mov
pop
mov
mov
pop
inc
inc
daa
mov
and
mov
cs
push
pop
or
iret
fiaddl
shll
push
dec
xlat
jne
sbb
mov
fsubrl
or
call
xor
imul
hlt
int3
gs
leave
jbe
push
addr16
xchg
rcll
in
push
fidivl
inc
or
pop
adc
in
jne
bts
scas
mov
popa
lods
inc
cmc
out
scas
fidivs
lcall
mov
sub
cmpsl
inc
ss
xchg
test
mov
fbstp
idiv
jnp
mov
mov
sarl
mov
fnstsw
fisttpl
aam
ror
push
call
fs
fldcw
pushf
pop
out
pop
mov
and
mov
loop
scas
mov
scas
add
sbb
pop
xor
fildll
cltd
add
push
cwtl
cmp
shll
out
ja
gs
cld
xor
sarl
cmp
sbb
sub
enter
mov
xor
shl
sti
push
sar
fwait
stos
push
int3
js
jl
lcall
dec
bound
xchg
test
push
sub
gs
jmp
sahf
std
mov
or
call
inc
push
xor
sbb
add
movsl
fbstp
mov
lret
pusha
add
jno
loopne
cli
das
sbb
pop
xlat
pop
xor
ja
jns
sub
in
mov
cs
xor
adc
inc
mov
sbb
mov
mov
int
mov
inc
inc
xchg
loop
mov
aad
sbb
cmpsl
lea
out
xchg
push
mov
jmp
adc
xor
dec
inc
lret
in
push
xlat
rcll
pop
test
pop
fiadds
popf
mov
std
sti
stc
cli
xchg
lock
mov
push
or
je
daa
mov
negb
fists
mov
sbb
lret
cwtl
sub
iret
das
cmp
adc
pop
push
fidivrs
adc
mov
xchg
cmp
xchg
xchg
mov
aaa
cmc
adc
lcall
mov
sub
in
sub
dec
mov
mov
js
and
mov
lcall
roll
mov
stc
mov
aam
xchg
sub
aam
loope
inc
fucomip
ljmp
add
stc
push
fiaddl
sbb
loope
lods
cmpsl
jecxz
lock
mov
js
cld
add
pop
jne
pop
push
imul
ret
fsubrl
test
imul
jnp
fcompl
scas
fldenv
jecxz
cmp
xor
sar
arpl
sub
fwait
sbb
xor
add
and
or
mov
mov
out
iret
adc
mov
add
stos
pop
movsb
cwtl
mov
pop
ffree
jle
add
arpl
push
pop
mov
dec
shll
xchg
cs
popa
aaa
push
pop
add
push
cmp
mov
adc
sub
lret
ficompl
gs
scas
cmpsl
dec
lahf
stos
adc
loopne
repnz
es
repz
gs
popa
mov
in
movsl
mov
add
std
sub
xor
mov
dec
loop
adc
inc
or
lds
adc
lret
stos
and
fimull
fisttpll
xchg
mov
xor
in
add
cs
inc
jne
jle
adc
repnz
ret
cmc
test
andb
mul
mul
or
dec
adc
pop
xchg
mov
push
or
sub
scas
and
das
out
mov
inc
sbb
sub
outsb
in
push
xchg
or
movsl
add
fcoml
scas
in
lcall
dec
test
pop
mov
fdivrs
dec
cmpsl
inc
xor
ljmp
ret
add
push
dec
pop
std
dec
lods
and
push
adc
fwait
sbb
daa
mov
fcmovnb
mov
int3
std
cmpsb
pop
sub
xlat
or
cmpsb
scas
mov
pop
add
insb
sti
popf
or
and
adc
rorb
inc
push
xchg
sti
ret
inc
push
cs
mov
aas
cmp
sub
and
xchg
xor
add
cli
sub
insl
xchg
or
cld
ret
xchg
mov
insb
insb
cld
cmc
repz
dec
cmpsl
mov
xchg
fisttps
cmp
outsl
cmp
sub
rorl
leave
popf
fistpll
add
test
mov
push
pop
hlt
scas
lea
cmp
mov
pop
sbb
std
out
bound
pop
data16
iret
fisttpll
xchg
es
in
repnz
enter
movsb
lahf
push
cmp
or
shll
pushf
xor
pop
push
rcrb
popa
lods
mov
nop
fcos
stos
lods
repz
enter
int
les
mov
mov
mov
dec
jno
mov
cmp
pushf
iret
xor
hlt
dec
adc
jnp
movsl
aam
negl
fldcw
sub
or
dec
and
sub
aad
stos
lret
into
jb
int3
dec
mov
leave
int
jmp
aam
sarl
mov
mov
or
cmp
pop
ret
jnp
outsb
popf
push
and
faddp
imul
sbb
push
loopne
je
jno
shrb
inc
insb
mov
int
int
gs
outsl
shl
add
lds
movsl
cmp
rcrl
idiv
addl
repnz
mov
pop
out
sbb
in
frstor
jne
mov
stc
xchg
push
xchg
xchg
inc
cmpsb
cmpsl
fwait
mov
cmc
xchg
jne
xchg
repnz
jae
aad
and
inc
pop
mov
adc
enter
repnz
stos
mov
loop
lea
mov
mov
mov
cltd
sbb
lds
outsl
aad
enter
jne
or
sbb
pop
push
push
cmp
repnz
jne
cmp
loop
in
xor
sub
rorl
sahf
sub
mov
xchg
imul
idivl
mov
sub
lea
pop
div
iret
jmp
sub
mov
dec
adc
xchg
pop
je
push
in
mov
adc
loopne
pop
mov
fstpl
ss
aam
add
movsl
push
cmpb
adc
adc
inc
inc
push
jo
cmpsl
arpl
add
pushf
insb
aas
pop
xchg
pop
sti
dec
out
cmp
into
adc
int
mov
or
stos
clc
loope
jge
icebp
sbb
outsb
jne
pop
jmp
jmp
jg
sbb
lret
lret
inc
aad
xchg
inc
jecxz
mov
cltd
pop
rorl
dec
fbld
aas
stos
fcompl
vpunpckhbw
xchg
std
ljmp
add
mov
pop
or
and
fistps
aad
mov
movsl
cltd
out
xchg
add
ja
push
leave
imul
shl
lea
inc
and
in
push
repz
sti
iret
fsubs
xchg
push
mov
in
xor
scas
dec
imul
xchg
sahf
inc
inc
bound
inc
dec
lret
aaa
mov
mov
xchg
xor
xor
jp
add
xchg
hlt
mov
scas
test
push
xchg
cmp
ret
push
mov
inc
loope
ds
ret
mov
bound
mov
mov
cli
cmc
mov
and
ret
out
loop
ret
loopne
jp
fistl
push
shll
stc
popa
cmp
fs
cmp
lret
mov
pop
dec
lods
frstor
cmpb
fldl
jno
adc
aas
scas
xorl
sbb
sub
std
cmp
scas
xor
cmpsl
dec
pop
outsb
push
test
insl
lret
xchg
xor
movsl
pop
pop
mov
sbb
mov
jmp
out
pop
popf
sbb
adcb
dec
xor
push
mov
imul
cs
jecxz
pop
imul
aad
jp
js
cmp
jmp
jge
scas
lea
pop
andl
or
cmp
sub
sub
dec
mov
aas
sbb
icebp
repz
in
shrl
and
cmp
or
xor
pop
repnz
sarl
jmp
addr16
cld
out
decb
scas
jmp
sarb
jmp
aam
ror
imul
lcall
mov
pop
fsubrs
fsubrs
lret
adcl
add
ds
pop
les
xchg
sahf
or
add
icebp
faddl
repnz
mov
mov
test
mov
addl
mov
pmuludq
outsb
inc
mov
sbb
nop
xchg
cmp
add
aaa
sar
pop
cmp
lea
jns
and
filds
int3
xor
imul
sub
loop
pusha
loop
ret
fldt
and
jmp
shll
sub
rorl
sub
iret
adc
xchg
ftst
push
inc
sbb
mov
jnp
dec
push
popf
inc
adc
adc
or
inc
or
cmpsb
hlt
inc
add
push
mov
jmp
test
dec
xor
roll
xchg
outsl
lds
adc
sbbl
sub
repz
fs
and
inc
les
xorl
test
icebp
pusha
adc
incb
cltd
sub
mov
lret
sbbb
or
stos
mov
dec
je
push
or
stos
lods
mov
das
mov
mov
call
pop
fnstsw
rorl
xchg
repz
xchg
xchg
repz
call
cwtl
lret
stc
in
popl
dec
out
sbb
jmp
into
dec
and
ret
ret
mov
jle
movsl
mov
aad
inc
decb
xchg
add
cs
mov
and
int
cmc
mov
insb
cmp
das
outsl
xchg
test
pusha
adc
mov
popa
int
int
rcrl
add
out
mov
adc
adc
mov
leave
repnz
jecxz
js
lcall
fcomps
loopne
ret
aad
dec
mov
jge
bound
hlt
cmp
sahf
pop
subb
and
or
pop
add
xlat
fisubs
not
cmc
aaa
lea
xor
inc
dec
push
pop
clc
lea
push
insl
ljmp
xchg
int3
cmp
iret
mov
int
jecxz
push
loopne
sub
loope
push
out
mov
mov
jp
scas
stc
lret
int
dec
cmp
adc
pushf
jl
add
lret
pop
and
or
push
leave
mov
inc
cmc
jmp
mov
mov
xchg
xor
jae
sbb
fiaddl
mov
push
mov
add
mov
push
out
sti
inc
ffree
mov
mov
xchg
pop
push
out
imul
aas
jnp
lds
imul
das
xchg
fwait
popa
icebp
adc
lods
add
and
pop
pop
jmp
pop
mov
pop
lcall
cmpsl
mov
aas
fcomi
cmp
sbb
sub
mov
fwait
pop
das
dec
mov
push
aaa
adc
in
movsl
mov
xor
mov
retw
mov
add
popf
push
jnp
in
mov
sbb
cmpsl
addl
add
inc
xor
cmp
jmp
ljmp
push
es
ljmp
jmp
pop
jne
mov
pop
or
dec
iret
loopne
jmp
stc
cmc
sub
aad
sbb
cmp
loope
jb
fcompl
sbbb
aas
iret
inc
inc
xor
lock
inc
js
ljmp
ficompl
jmp
xchg
mov
cmp
lds
cmpsl
shl
popf
mov
fldcw
push
iret
lods
ret
movsl
ret
loope
jp
shl
push
sub
aaa
cmpsl
iret
ficompl
fbld
repnz
pop
xchg
jg
aam
xchg
iret
cmp
or
dec
push
insb
movsl
repz
adcl
push
aad
pop
popf
push
mov
loopne
push
cmp
push
insl
fwait
xor
iret
sub
fwait
xchg
xchg
inc
shlb
pop
cs
dec
mov
enter
fcomip
movsb
jmp
add
gs
push
sub
rcl
pop
xchg
jae
sbb
pop
sahf
xor
sub
sub
iret
out
addr16
push
fidivrl
xor
fwait
rcr
test
loopne
inc
outsb
out
out
sub
in
and
jnp
movsb
nop
xchg
add
fs
mov
popa
jb
sub
adc
dec
xor
mov
movsl
mov
scas
iret
pop
and
in
jmp
insl
pop
cwtl
bound
mov
xchg
movsl
xchg
test
inc
mov
insb
pop
xchg
inc
mov
mov
movsl
dec
aad
fcmovbe
or
mov
pop
xor
push
popf
sub
pop
jl
jae
nop
sub
jnp
or
mov
xlat
fistl
push
dec
adc
arpl
xchg
js
push
lret
xchg
or
xor
jge
cmp
ss
lods
add
shll
sarl
outsl
lods
dec
aad
xor
ljmp
sub
into
aad
insl
icebp
xor
test
sti
mov
lock
and
into
jne
jb
fcoms
rolb
ret
mov
or
jae
fistl
mov
lds
lock
fisubl
lds
pop
cmp
mov
out
mov
outsb
leave
xchg
xor
jecxz
pop
clc
les
mov
lock
adc
mov
mov
sbb
enter
or
adc
xchg
cwtl
int
loope
mov
cmp
imul
inc
mov
cmp
lcall
and
add
adc
aad
fsubl
cmp
bound
dec
sbb
rolb
fsubrs
movsl
fiaddl
lcall
rcrl
shlb
lea
mov
mov
push
mov
xor
jmp
fs
lods
repnz
xchg
out
adc
jb
jl
rcll
mov
sahf
jmp
jl
mov
xchg
loopne
adc
pop
fmuls
ficomps
push
cmpsb
test
adc
mov
incb
inc
test
jno
sbb
xlat
rorb
pop
repnz
fsin
test
push
cmp
sbb
mov
adc
sti
add
sahf
add
dec
or
lcall
inc
xchg
sub
call
jecxz
or
popa
movsl
and
das
wbinvd
or
test
fcmovb
and
adc
enter
aad
add
dec
fstpt
mov
dec
shrb
pop
decb
rclb
outsl
out
je
fs
and
fs
fists
negb
fidivl
inc
test
dec
fwait
insl
mov
sbb
nop
mov
clc
leave
jmp
aam
mov
sbb
out
test
sub
jg
mov
loopne
cmp
cwtl
cmc
cmp
inc
ja
negb
int
incl
push
or
repnz
mov
sub
femms
or
cmp
fcmovu
mov
int
loope
pop
test
push
mov
jecxz
stos
or
ret
jbe
cwtl
pop
das
fdiv
cmp
push
adc
inc
dec
jae
mov
sub
push
mov
lret
inc
dec
nop
push
das
nop
add
push
lret
es
addr16
mov
mov
mov
mov
mov
ja
jl
bound
push
dec
test
fnstsw
push
hlt
arpl
and
and
or
popl
xchg
je
rorl
cmp
andl
xor
xchg
and
in
mov
pop
testb
shlb
aaa
lret
in
xor
sbb
jg
dec
and
das
sub
int
inc
inc
sbb
shr
mov
popa
out
rolb
cmp
inc
cld
mov
sub
lret
jge
xor
or
pop
dec
fistpll
out
adc
test
mov
inc
add
mov
test
cld
arpl
subb
pop
adc
jno
push
sbbb
ret
loopne
movsb
adc
mov
jmp
rcll
jge
imul
and
out
add
cmpsl
scas
sbb
sti
mov
add
sub
aad
int3
cltd
inc
int3
mov
in
mov
or
inc
and
int3
adc
pop
lds
mov
add
push
out
mov
jle
das
rcr
data16
mov
arpl
out
int
fldcw
sahf
ljmp
lcall
pop
sarl
sub
nop
out
into
adc
xor
cwtl
pop
and
mov
dec
sbbb
inc
inc
inc
pop
stc
sarb
rorb
dec
pop
lea
sub
and
cmpsb
jne
popa
mov
jl
jbe
and
int3
push
aaa
cmp
fmuls
iret
loop
divb
mov
cmp
movsb
mov
sti
repnz
pop
ret
dec
pushf
push
jns
popa
jb
inc
jno
jle
shrl
in
scas
dec
out
loopne
mov
and
dec
sub
outsb
enter
lds
inc
les
or
and
add
adc
pop
push
in
leave
or
loop
outsb
addr16
push
rcrl
lcall
fdivp
popa
aas
bound
ret
lret
pop
jae
loopne
inc
stc
pop
inc
in
dec
iret
test
imul
sti
pusha
bound
into
push
cli
mov
dec
popf
xor
and
test
cli
sbb
pop
mov
xchg
sub
add
inc
jbe
mov
pop
xchg
lcall
jmp
mov
loop
out
arpl
iret
xchg
mov
xchg
push
in
cli
push
pop
dec
aam
icebp
mov
lods
xchg
inc
xor
mov
or
mov
sbb
lret
lea
ja
mov
mov
fiaddl
andb
andl
inc
popa
mov
push
arpl
scas
mov
add
mov
push
sbb
dec
dec
test
inc
outsb
push
push
sbb
xchg
inc
push
aad
adc
inc
in
stos
adc
stos
or
ljmp
mov
lds
cld
and
outsl
in
dec
mov
mov
sti
icebp
xor
push
mov
add
sbb
movsl
push
ljmp
int
lret
dec
ficomps
lahf
add
cmpsl
pop
push
subb
or
shll
push
fs
out
hlt
addl
xor
sbb
inc
or
jae
scas
cmc
inc
sub
pop
mov
dec
dec
outsb
mov
dec
lods
jecxz
push
mov
add
jmp
movsb
loopne
add
sbb
ljmp
rorl
sbb
xor
xchg
loope
std
xchg
sbb
mov
inc
test
xor
pusha
hlt
in
xor
fcmovbe
inc
sti
push
gs
in
or
jo
insb
and
in
sti
sbb
lret
mov
inc
cltd
cltd
pop
mov
clc
mov
dec
pop
test
cld
jno
lret
and
pop
filds
inc
cmpsl
sbb
mov
cmp
push
stc
popf
leave
or
cmp
aaa
and
popa
xor
les
aas
xchg
out
mov
mov
clc
push
push
dec
loop
push
or
fists
push
sub
jecxz
add
movsl
pop
movsl
hlt
jge
scas
call
repnz
out
cwtl
call
test
inc
cmp
cmp
pop
adc
mov
mov
add
jb
sti
inc
divb
and
mov
cmc
popf
stos
fbstp
inc
pop
mov
pop
pop
int
sarl
mov
fcompl
pop
mov
aam
call
mov
jo
shlb
into
mov
testl
call
xor
push
and
jmp
sub
out
leave
popl
jecxz
xor
pop
cli
sbb
jge
call
mov
xchg
push
lods
or
mov
lret
adc
sub
mov
sub
push
test
dec
mov
pusha
popf
push
adc
mov
and
mov
cmpsl
cmp
xchg
xor
fs
mov
js
stc
sbb
pushf
pop
mov
and
push
das
pop
fwait
cmp
inc
fdivrs
jns
pop
mov
test
aaa
out
and
jl
and
stc
rolb
fldcw
pop
and
icebp
pcmpgtw
push
loopne
xor
or
jb
clc
cmpsl
ja
mov
adc
scas
sub
js
dec
sbb
add
mov
cltd
mov
push
inc
cmp
imul
pop
lods
xor
jne
cmp
stos
lods
scas
pop
lret
sbb
stc
bound
cmp
jecxz
pop
adc
mov
loop
cmp
mov
test
pop
cmc
jns
lea
fiaddl
xchg
mov
jnp
mov
cmc
mov
enter
popa
insb
sbb
sbb
stos
and
dec
jle
in
and
fs
mov
jecxz
inc
insl
xlat
sbb
fcmovnb
loopne
out
fstps
xlat
cmp
mov
inc
adc
cmp
mov
hlt
jg
insb
mov
mov
push
cmpsb
push
in
jecxz
jo
mov
sub
jecxz
jns
push
cwtl
test
in
pop
adc
cs
pusha
out
and
repnz
dec
cmpsl
jb
pop
add
imul
lahf
mov
pusha
lret
nop
sbb
popa
cmpsl
add
into
dec
hlt
add
cmp
mov
icebp
mov
rcl
cmpsl
movsl
mov
cs
push
lret
out
mov
arpl
sbb
pop
in
outsl
int
pop
pushf
popf
pop
lahf
xor
or
sbb
push
mov
xor
mov
xor
ret
xor
arpl
in
add
aad
test
pop
cmp
jbe
jge
fxam
mov
and
jecxz
icebp
int
rolb
inc
push
cltd
aad
cmc
arpl
xchg
mov
adc
xchg
stc
nop
xchg
push
jmp
inc
in
pop
jnp
mov
imulb
xor
sub
pushf
inc
inc
loope
xchg
rclb
popa
arpl
stc
sbbl
jne
hlt
inc
or
fnstcw
or
mov
clc
adc
jo
jnp
aad
and
fdivs
jp
lods
pop
loopne
xor
int3
or
push
jno
dec
push
aad
push
pop
icebp
jae
ret
outsl
arpl
push
faddl
fbstp
add
cs
mov
aas
mov
jne
cs
dec
fbstp
and
xchg
or
aas
das
mov
std
jno
pop
push
mov
mov
jmp
sbb
test
idivl
xchg
loopne
fisubl
sub
or
cmp
xor
mov
dec
sub
jle
aaa
lret
cwtl
subl
lret
je
sub
pop
add
filds
xchg
insl
cld
add
sahf
shll
gs
shl
inc
sbb
std
inc
or
scas
fisubrs
xchg
add
jmp
fstl
adc
and
mov
sbb
icebp
xchg
fstpl
mov
ds
sbb
pop
jecxz
dec
and
loope
mov
call
cli
cmpb
xchg
mov
movsl
aam
frstor
imul
repnz
mov
stc
fcmovne
ljmp
cmp
ss
cmpsl
cmpsl
inc
loope
test
sbb
dec
cmc
out
push
pushf
or
aad
fildl
out
push
lahf
mull
ret
or
test
add
jmp
pop
sbbb
cmp
fistps
loope
add
insl
test
push
and
fcoml
fmull
outsl
fcos
fisubrl
add
add
icebp
mov
or
outsl
xchg
xchg
sub
popf
out
idiv
std
iret
add
sbb
inc
or
or
das
in
ret
sti
mov
pmaxsw
lea
sbb
jbe
pop
fcomip
sub
pop
or
in
cmp
mov
incb
cmp
movsl
test
fcompl
ror
mov
jb
iret
fidivl
into
adc
movsl
cmpsb
fstps
dec
in
in
ficompl
fwait
sahf
dec
icebp
mov
mov
aas
jecxz
fs
mov
test
inc
adc
icebp
sbb
cmp
xor
add
dec
sti
call
enter
into
xor
or
or
inc
imul
inc
in
mov
sbb
xor
fs
sbb
mov
rolb
mov
testl
and
enter
add
or
add
dec
jecxz
fwait
sbb
cmp
repnz
mov
mov
mov
test
out
mov
pmulhw
in
or
mov
dec
fsubrs
fildl
mov
pop
ret
sti
push
or
pop
sbb
pusha
dec
sub
pop
mov
call
dec
xchg
dec
sub
pop
icebp
sti
lods
shll
pop
or
sbb
inc
push
jmp
cmp
push
sub
addr16
pop
sbb
xchg
push
mov
aam
sbb
inc
shrb
pminsw
into
out
add
pop
or
adc
mov
add
xor
outsb
adc
out
mov
ficompl
cmp
dec
lcall
call
sbbb
inc
imul
push
mov
cmpsl
pop
cmp
pop
shr
push
insb
add
leave
scas
and
pop
fwait
cmp
loop
nop
nop
xor
scas
pusha
mov
xor
scas
dec
mov
cmp
push
sbb
xor
mov
xchg
and
into
cwtl
jl
jno
lret
dec
orl
das
cmc
lret
mov
xchg
bnd
cmc
xchg
sbb
adc
aad
sub
xchg
push
cmp
cmp
in
push
into
enter
scas
int3
out
sub
mov
mov
xchg
jge
sub
mov
inc
gs
mov
mov
push
gs
mov
push
mov
nop
addl
mov
loopne
mov
cmp
jnp
mov
aad
sub
sub
mov
pop
and
arpl
mov
sbb
mov
push
rorb
add
popa
lds
stos
cs
xchg
fs
inc
fsubrp
inc
jp
stos
mov
fs
jmp
loope
cmp
cmp
cwtl
lret
test
mov
sarl
pop
repnz
idiv
in
and
xchg
repz
bound
mov
ret
fstps
mov
inc
or
int
mov
add
ds
jb
ja
mov
es
cs
fwait
cwtl
sbb
add
negb
ja
dec
and
lods
add
mov
lock
cmp
ljmp
inc
xorl
fidivl
lahf
mov
xchg
orl
dec
adc
lods
cmp
outsb
gs
fcmovb
and
mov
jo
fsts
insl
cmp
sub
add
cwtl
mov
aad
cmpsl
pop
fs
or
fnstsw
fisubrl
std
fadd
test
pop
adc
xor
icebp
cmp
xchg
out
dec
add
sbb
out
cltd
imul
es
pushl
add
push
dec
mov
shlb
roll
pop
lcall
cmpsl
int
in
icebp
inc
inc
in
sarb
mov
xor
jnp
loopne
out
dec
pop
mov
jnp
and
xlat
add
bound
jge
fimuls
cltd
xchg
pop
or
sti
je
test
add
push
jg
lret
std
xchg
mov
imul
lcall
lahf
push
jb
mov
pop
push
hlt
xchg
mov
repz
adc
xchg
leave
rolb
cmc
fistps
add
adcb
ja
fucomp
dec
mov
js
push
mov
add
jecxz
sahf
push
inc
or
xor
sub
xor
imul
sti
push
sub
pop
aas
arpl
test
test
jno
mov
insl
fidivl
sbb
popf
int3
lods
push
adc
mov
mov
adc
mov
xchg
in
mov
lcall
cmp
or
fs
lcall
mov
or
scas
sub
pop
sub
rcrl
cmpl
fwait
jge
jmp
cli
repnz
rclb
xchg
mov
pop
cwtl
cmp
mov
cmpsl
pop
pop
int
cmp
movsb
add
inc
pop
jg
loopne
or
inc
jmp
cltd
outsl
xchg
add
mov
popf
push
bound
xlat
ret
ret
les
mov
lock
cmp
shlb
aam
adc
xlat
mov
fldl
insb
scas
scas
xchg
mov
sub
test
rclb
loop
mov
pop
popa
xchg
cwtl
bound
cmc
ret
cmpsb
addr16
pop
cs
lret
stos
popf
pop
in
popf
fisttpll
inc
lret
inc
sbb
pop
cmp
int
mov
inc
stos
fcomi
ret
in
inc
jecxz
int3
imul
mov
add
in
gs
mov
jae
pop
aaa
out
jle
popf
fldenv
movsl
cmc
cmp
icebp
mov
push
xor
imul
adc
or
aad
fisttpll
sbb
shr
sbb
cmpxchg
int3
out
mov
xor
aaa
flds
inc
in
ret
dec
and
in
cld
mov
pop
insl
aaa
into
push
or
sbb
dec
clc
rorb
cmp
mov
frstor
outsb
pop
cmp
sti
jbe
adc
dec
daa
push
jmp
and
adc
repz
hlt
jl
rorl
mov
mov
mov
rcrb
std
in
jb
or
xor
mov
mov
push
icebp
push
stc
pop
lods
call
push
movsl
loopne
fsub
mov
mov
xchg
jo
scas
jne
daa
and
and
daa
and
cld
divl
pop
call
mov
xchg
ljmp
bound
fs
data16
loop
dec
jl
mov
lods
dec
std
aad
mov
mov
loopne
mov
fisubl
loop
xor
lea
in
jbe
xlat
mov
jae
arpl
ret
ja
mov
push
mov
icebp
insb
dec
fisubl
in
xor
imul
and
sub
push
pop
xor
fcoms
fildll
and
jge
jbe
mov
out
mov
cmc
sub
movsb
mov
pop
and
and
cmp
out
add
add
daa
ret
fldenv
or
mov
ret
icebp
aad
mov
xor
adcl
xchg
inc
movsb
cltd
add
mov
jo
jno
sub
or
movsl
fisubrs
lret
and
add
movsb
mov
pop
call
cwtl
in
test
lret
pop
push
jae
xchg
insl
jo
insb
mov
stc
out
xor
stos
pushf
insl
loope
xchg
mov
mov
cmp
push
lret
ja
jnp
mov
ja
and
sub
push
inc
icebp
adc
clc
mov
ror
xchg
insl
pusha
pop
and
cmp
adc
xor
andl
and
sbb
adc
mov
ret
pop
test
fnstenv
pop
enter
inc
push
orb
pop
cmp
pop
js
jecxz
rcll
adc
mov
mov
jae
lock
int3
addr16
cwtl
inc
dec
xor
add
aam
and
loop
test
adc
repnz
and
sbb
loope
adc
out
fwait
out
jb
popa
fisubl
adc
and
dec
filds
mov
adc
std
cmpsl
add
mov
fcmovne
sub
pop
aam
pusha
dec
outsl
jbe
or
popf
mov
pusha
insb
jl
mov
shlb
rcll
stc
arpl
pushf
imul
cs
add
fxch
mov
cmp
stos
scas
pop
xchg
lret
add
jno
jmp
das
lcall
mov
add
das
mov
pop
pop
mov
in
add
mov
stos
sbb
mov
or
insl
test
jno
aad
push
in
scas
out
repnz
cli
les
jbe
pop
adc
xor
movsb
shr
dec
mov
xchg
jg
xchg
mov
mov
lret
pusha
test
push
xor
xor
ret
cmp
lret
pop
shrl
sarl
lret
cmp
fisttps
xor
or
sti
repnz
pop
shlb
scas
icebp
and
imul
pop
int
adc
insb
movsl
adc
and
or
iret
cmpsb
fwait
cwtl
aad
mov
sti
cmp
mov
addb
inc
psubq
jge
lods
add
adc
lahf
cli
push
lahf
movsb
mov
int3
lock
mov
js
push
jae
cwtl
je
leave
mov
les
repnz
sub
int
scas
cwtl
ret
xchg
xchg
ret
pop
rcrb
sub
jle
std
jb
jnp
nop
cmp
xor
sbb
popf
ret
mov
mov
iret
xchg
xor
mov
aam
and
out
leave
mov
aaa
in
mov
dec
imull
pop
test
xchg
xchg
pop
lods
sbb
push
iret
hlt
out
inc
sub
sbb
fs
jnp
aas
std
or
pusha
fldcw
cltd
inc
inc
jo
repnz
mov
pushf
movsb
mov
hlt
es
mov
pop
mov
pop
inc
std
leave
out
lea
add
out
sar
adc
rorl
jne
loope
fdivl
popf
arpl
sbb
fisubrl
pushf
fs
push
repnz
or
sarl
hlt
loope
bound
xchg
xor
jmp
jbe
fdivrs
push
mov
test
aaa
lahf
enter
cmp
mov
jmp
pushf
popa
sub
add
out
or
out
mov
xor
test
aad
fwait
adc
sbb
cld
jecxz
and
xor
push
push
xor
push
cmp
and
jg
or
mov
int3
ffreep
out
sahf
xor
mov
fwait
add
dec
lcall
sbb
repz
popf
sarl
fsubl
out
push
inc
push
shll
and
fisttps
xorb
sbb
mov
shll
loop
sbb
out
je
stos
push
jl
in
lds
pop
std
call
cwtl
cmp
adc
xor
loope
and
cmpsb
mov
iret
and
das
mov
jle
and
mov
imul
pop
cmpsb
movsl
push
dec
dec
mov
sbb
push
stc
bound
inc
stc
mov
lds
adc
inc
hlt
and
mul
xor
rcrb
or
mov
mov
test
mov
test
fwait
aam
jno
cmc
imul
cli
push
das
imul
enter
jmp
bt
pop
pusha
cltd
sbb
sbb
fimull
cld
jecxz
repz
xchg
xor
inc
orl
push
movsb
xchg
sub
ret
sub
cmpsl
int
sub
test
fcmovnu
mov
pop
lods
push
adc
movsb
fistpll
mov
clc
adc
add
jmp
and
shl
addr16
push
pushf
ljmp
cmp
mov
lret
insl
movsb
jno
icebp
popf
or
dec
in
ficoms
add
mov
pushf
into
sbb
xchg
aam
stc
add
sub
mov
add
inc
sahf
mov
mov
popf
add
push
xor
push
mov
dec
xchg
fxch
xchg
ljmp
fdivs
out
pushf
and
cmpsl
mov
adc
test
jbe
mov
pop
mov
and
imul
sbb
and
sub
lcall
repnz
icebp
mov
mov
add
icebp
push
mov
repz
inc
add
fdiv
mov
repz
jle
pop
jmp
movsl
xor
loope
inc
jp
pop
jle
iret
pop
aad
xchg
inc
xor
insb
mov
addr16
jmp
xchg
cmc
dec
sti
outsb
in
in
mov
push
cld
mov
cmpsl
push
push
push
mov
xchg
push
cltd
ret
jmp
jmp
fcompl
addb
leave
push
cmpsb
cmc
or
xor
xchg
sahf
add
xchg
insl
xor
or
test
xchg
es
pop
and
popa
push
fsubrl
cmp
loop
lds
sbb
call
mov
in
hlt
lods
cmpb
or
or
lea
ljmp
xchg
jns
pop
cmpb
push
sub
sbb
jae
roll
adc
notb
out
xchg
in
mov
jp
xchg
sub
test
adc
or
jno
or
inc
push
imul
mov
rorl
mov
or
test
xor
or
dec
insl
dec
outsl
add
mov
push
inc
or
outsl
clc
ret
addr16
stc
push
jge
jmp
add
and
aas
mov
out
sbb
inc
aam
or
pop
subl
inc
sub
in
fldcw
lret
ror
mov
mov
or
sbb
pop
add
push
mov
and
call
js
leave
test
cmp
jecxz
out
or
pusha
cld
roll
sti
ja
cmp
mov
fwait
mov
sbb
xchg
xor
add
nop
mov
out
and
test
xchg
pop
pop
inc
jle
and
fs
and
testl
or
push
pop
dec
std
add
ljmp
cli
ljmp
sbb
add
and
cmp
shl
loope
fisttpl
lret
xor
daa
sti
shrb
mov
insl
inc
scas
jb
cli
int3
out
stos
xchg
jmp
inc
xchg
pop
mov
or
shl
into
enter
or
iret
divb
out
jg
mulb
inc
insl
bound
or
lret
sbb
jo
orl
ss
add
xor
testl
vcvtss2si
movsl
jmp
dec
fwait
mov
fcomp
roll
sub
cmc
popa
cmp
jmp
pop
icebp
pop
sbb
movsl
mov
js
mov
repz
add
jge
cmc
inc
adc
sub
ss
popf
adc
add
jb
mov
sti
sbb
adc
sbb
mov
lock
test
mov
aaa
mov
push
sbb
push
pop
test
movsl
int3
cmp
out
das
aam
fadd
in
lret
or
pop
insl
mov
xor
xchg
sub
mov
sti
sub
add
fildll
flds
push
dec
mov
fwait
ret
mov
jns
and
call
jge
hlt
nop
or
jge
dec
jbe
ret
popa
push
adc
shl
adc
jg
fldcw
and
int
jo
xor
mov
pop
jns
and
dec
scas
mov
jae
out
out
fmuls
lret
jb
roll
mov
ret
sub
jg
push
add
aad
mov
outsb
movsl
pushf
adc
push
add
ret
loop
cwtl
pop
mov
add
mov
sar
mov
rorb
lret
lds
fldenv
je
or
mov
ds
sbb
xor
xlat
mov
lcall
insl
jo
mov
addr16
stos
mov
adc
bound
bound
dec
pop
loope
cmpsb
pop
cmp
adc
mov
cmp
pop
jp
jge
xchg
push
lret
adc
mull
fsubrp
stc
xor
out
pusha
inc
mov
dec
jmp
jmp
fisttps
mov
hlt
lea
push
sub
add
inc
pusha
mov
add
sub
inc
ljmp
add
pop
pop
xor
movsbl
es
hlt
fidivrs
inc
fwait
dec
cmpsb
xor
add
lds
pop
aad
lret
mov
shrl
fcomps
int3
fdivr
pop
cli
sbb
lret
mov
mov
movsl
ret
stc
inc
test
lods
daa
call
inc
fxch
sbb
pop
movsl
push
xchg
mov
jbe
aaa
sbb
xor
test
cmove
sbb
clc
sti
inc
std
xchg
jb
orl
dec
jge
push
jb
pop
dec
js
mov
fsubl
lret
mov
arpl
or
mov
push
mov
xor
ds
jg
jmp
call
inc
int3
movsb
mov
jge
call
pop
mov
sub
sub
xchg
roll
imul
das
pop
mov
xor
mov
cmpsl
gs
dec
push
bound
inc
xchg
dec
mov
mov
xchg
add
andl
dec
aas
out
mov
movsb
jl
sbb
push
mov
lea
push
fxch
popl
sub
mov
sub
ret
cmp
mov
inc
sub
mov
mov
mov
lock
xchg
pushf
mov
pop
in
mov
data16
add
int
scas
pop
loop
into
pop
out
dec
pop
jnp
dec
pop
mov
and
lret
inc
mov
xchg
ficomps
push
pop
int3
movsb
mov
fwait
rcrl
mov
fcmovne
mov
movsb
test
pop
and
adc
xchg
mov
mov
pop
dec
aaa
add
in
xor
inc
scas
orb
cld
xor
mov
jl
dec
pop
sub
mov
enter
xchg
xor
out
sbb
popf
or
and
out
push
pusha
mov
inc
sbb
jg
or
add
dec
and
xor
jmp
cli
lret
into
xchg
inc
cli
lret
push
cmp
sub
xor
xchg
in
hlt
jbe
sbb
notl
sub
repnz
subl
cmp
mov
icebp
push
aam
sub
sub
stc
movsl
mov
in
iret
push
fs
imul
ficomps
cmc
loop
rcl
incl
xchg
xchg
sub
or
fdivs
rclb
jmp
pusha
inc
testl
mov
ljmp
pop
scas
lahf
xor
sub
jbe
clc
mov
std
mov
dec
lret
mov
stc
orb
pusha
sub
inc
loop
xor
mov
sarl
and
fstl
shl
inc
xchg
aam
ret
scas
test
pop
and
pop
cmp
sub
repnz
rol
out
mov
imul
jmp
imul
lret
ficoml
lahf
mov
push
add
daa
add
fnstsw
xlat
ret
mov
and
sub
incb
jl
out
sbb
punpckhwd
cmp
fisubrs
loope
mov
out
lret
cltd
jne
cmp
add
fnsave
ficompl
inc
mov
icebp
or
orb
mov
mov
pop
pusha
int3
fdivr
adc
pop
popa
mov
pop
cmc
mov
imul
mov
pop
or
xor
ljmp
xor
aaa
roll
inc
mov
repnz
inc
js
int
push
mov
in
rorl
out
fisttpl
test
iret
fstpl
jmp
lret
jmp
fldcw
xchg
std
repnz
mov
bswap
pop
addr16
sbb
jge
or
xlat
inc
lea
mov
sbb
fildl
xchg
pop
int3
mov
insb
iret
lahf
lock
jns
dec
mov
add
add
xor
fnstcw
imul
jns
sar
test
fadds
std
or
xor
adc
daa
push
sub
jle
cmp
lret
shlb
mov
cmp
sub
loopne
stc
xchg
jge
add
movsl
int
jmp
mov
jmp
mov
mov
mov
repnz
mov
dec
mov
add
lret
cmp
popf
test
inc
outsl
push
cld
and
js
aas
inc
sub
add
or
repz
xchg
in
ret
inc
ja
mov
mov
cmp
shl
mov
push
test
mov
scas
inc
inc
stos
ret
and
ljmp
cmc
xor
jb
cmpsl
mov
dec
inc
scas
add
frstor
popa
dec
cmp
nopl
clc
xchg
js
adc
push
gs
fstps
frstor
iret
pop
and
add
jl
inc
mov
push
mov
loop
fabs
add
inc
lret
sub
imul
cli
xchg
ror
push
push
sbb
jnp
mov
fldenv
sbb
mov
sbb
test
aam
cmp
test
xchg
xchg
aaa
xor
xchg
frstor
dec
cmc
cltd
xchg
rcl
add
ficompl
test
pop
mov
sbb
lcall
mov
jae
subl
or
xor
push
into
pop
inc
push
scas
add
or
jno
mov
jo,pt
xor
fs
lret
lods
insb
push
inc
xchg
ds
shll
xchg
inc
lock
scas
mov
ret
loopne
cmp
mov
int3
popa
arpl
xchg
stc
shll
inc
sub
cli
mov
cwtl
imul
mov
ljmp
push
shlb
cmp
lds
cmp
add
cmp
mov
leave
xchg
call
mov
pop
aas
pop
push
enter
sbb
sub
ror
call
inc
aaa
in
sti
testb
pop
add
sahf
mov
movsl
push
mov
cmp
in
or
inc
pop
dec
fnstcw
popf
xorl
dec
dec
adc
xchg
lods
cmp
scas
mov
out
fildll
popa
push
and
mov
mov
inc
mov
hlt
dec
mov
sub
popf
leave
ljmp
test
mov
jmp
xor
imul
imul
les
fs
sub
aad
sub
mov
test
sbb
fdivl
or
hlt
push
fildl
mov
xchg
out
addl
bt
cmc
fstl
out
stc
push
add
jb
pop
and
adc
push
subl
mov
xchg
imul
gs
mov
cvtps2pd
movsl
pop
cmp
or
ss
cld
push
mov
cmpl
dec
ds
movsb
or
cmpsb
imul
ds
xchg
pop
add
inc
stc
arpl
sahf
outsb
add
jno
fs
rcl
pop
int3
xor
aad
cmpsl
inc
aas
mov
cmp
sbb
popa
cmp
hlt
lds
mov
mov
sti
mov
std
adc
push
in
xchg
mov
cmp
in
xchg
jnp
mov
push
dec
aad
add
fs
test
lds
pushf
out
ss
pop
adc
mov
inc
daa
sbb
pop
or
sub
mov
push
aad
mov
lds
notl
push
inc
add
int
xchg
fiaddl
out
mov
stos
inc
jnp
fldenv
jg
sub
xchg
pop
dec
inc
pusha
fwait
aas
jmp
movsl
hlt
sub
pop
push
push
inc
mov
into
xchg
xchg
jnp,pn
inc
loope
lods
sub
fldcw
sti
push
call
int3
or
lahf
adc
lods
aad
sub
jae
and
pop
pop
in
ror
popf
repnz
cmp
lock
mov
fcmovnu
rorb
imul
xchg
test
pop
in
or
fadd
out
xchg
icebp
push
inc
push
jbe
fisttpll
adcb
or
mov
cld
imul
fidivrl
and
xor
scas
fimuls
lea
out
mov
jmp
fdivrp
loop
mov
xchg
aad
lcall
mov
sub
mov
int
fiaddl
les
cmp
adc
add
imul
mov
xor
inc
pop
mov
push
sahf
xchg
xchg
xchg
add
rorb
fiaddl
add
mov
dec
mov
jl
add
push
popl
fbld
fildl
cmp
roll
mov
leave
adc
xchg
mov
loope
push
lret
dec
xchg
dec
pop
jl
sub
mov
mov
lods
imul
loopne
jecxz
cmp
fs
jecxz
test
popa
sub
cmpsl
std
cmp
fcomi
nop
fstps
mov
add
jecxz
leave
das
pop
mov
sbb
fdivs
sub
mov
jb
popa
pop
jnp
push
dec
in
int3
push
test
das
cmp
fidivs
push
fnsave
fsubrl
jl
push
js
inc
popf
aad
cmpsl
icebp
repnz
xlat
and
fcmovnbe
fwait
bsr
fildll
aad
fldl
pop
repnz
dec
gs
fldt
mov
ret
pop
testl
xlat
mov
addr16
cmp
jno
sarb
subb
lods
fwait
mov
adc
movsl
ja
cmpsb
add
or
std
movsl
lahf
cmc
dec
and
imul
mov
call
xor
xchg
in
mov
jmp
leave
push
jp
icebp
jmp
mov
loopne
cmp
mov
pop
stc
pop
mov
lods
loop
shll
pop
insl
scas
push
sub
cld
pop
loop
shrl
test
or
lock
push
push
mov
mov
sub
arpl
xor
jno
jnp
scas
ror
mov
xchg
or
push
nop
mov
jae
mov
movsb
or
in
mov
cli
in
fwait
cmpsb
jae
xlat
mov
js
pop
lock
ljmp
hlt
dec
pop
cmpxchg
xor
mov
mov
xchg
ret
mov
lock
or
sarl
jecxz
cmp
jmp
aad
int3
mov
outsl
sar
roll
jecxz
inc
sbb
inc
das
mov
pop
jg
cmpsb
mov
in
popa
cmp
dec
int3
in
jmp
mov
push
int
jne
dec
in
int3
fistpl
int3
pop
call
or
pop
sbb
testl
cmpl
fucomp
cltd
in
nop
xor
outsb
pop
stc
js
fldl
cwtl
adc
jae
ffree
bound
nop
push
ret
mov
xchg
ficomps
jbe
daa
sbb
adc
aad
mov
inc
inc
aad
sbb
and
pop
fnstenv
add
in
into
bound
pop
jg
nop
sbb
sub
loope
andb
aad
mov
mov
xchg
jl
pop
cmp
push
into
cwtl
insl
adc
pop
leave
repz
popa
test
pop
je
jg
add
mov
sub
sub
loopne
or
jecxz
xor
dec
loopne
push
rcr
pop
jmp
shl
loopne
push
jecxz
xlat
fisttpll
in
and
fistpll
pushf
fstpl
or
push
dec
xchg
popa
or
pop
inc
jmp
mov
ja
pop
xor
bound
cmp
cmp
scas
pop
lcall
cltd
dec
int3
sbb
mov
lret
mov
mov
jne
add
xchg
std
fisubrl
js
dec
and
fcmovne
xchg
dec
inc
pop
sbb
adc
mov
jne
inc
cmp
mov
ja
mov
popa
sti
mov
aaa
mov
loop
test
mov
shl
mov
cmp
popa
repnz
jmp
jmp
adc
adc
mov
mov
fwait
ret
push
shll
pusha
mov
sti
pushf
sub
lahf
fldt
sub
adc
je
adc
shll
jecxz
pop
cltd
add
imul
push
scas
arpl
test
pop
ja
mov
push
popf
leave
aad
js
movsb
shlb
sub
pop
mov
xchg
pop
rcl
in
mov
sbb
sbb
jne
lahf
test
rcrl
in
xchg
xchg
test
pop
xor
jno
stos
xchg
jmp
aaa
and
adc
fcomp
mov
inc
int
sbb
or
cld
mov
pop
push
sahf
ffree
cld
inc
sub
loope
push
sbb
cmc
mov
pushf
mov
inc
iret
mov
repz
loop
pusha
js
lret
xchg
cmc
int3
and
int
inc
ret
outsb
jg
loopne
lret
dec
test
loope
inc
add
jg
pusha
repz
stos
lcall
push
jecxz
out
ret
pinsrw
or
inc
test
ja
mov
mov
or
nop
add
xchg
add
scas
sub
popa
in
and
test
out
cmp
dec
in
jmp
in
inc
sub
add
and
cs
and
cmpsl
lret
mov
push
jnp
push
xchg
dec
xchg
mov
aas
sub
lds
es
mov
pop
lret
mov
int
jmp
inc
cmp
mov
inc
inc
pop
in
int3
add
and
push
minps
cltd
xor
fistpl
add
mov
fdivrp
or
inc
int3
mov
sub
sti
stc
imul
in
fldenv
cmp
test
push
dec
inc
jmp
shlb
rcr
and
movsl
push
aad
fwait
inc
pop
cmp
leave
jecxz
jns
imul
mov
xchg
icebp
sti
ret
cmpsl
cmp
inc
movsl
xor
jo
fs
in
dec
push
sbb
push
arpl
lret
or
int
push
add
adc
inc
dec
dec
roll
adc
cmp
sub
repnz
mov
cwtl
sbb
int3
adc
mov
pushf
cmpsl
adc
data16
stc
addr16
into
mov
cmp
insl
data16
out
mov
cli
ret
jecxz
shl
nop
rcrl
pop
xor
clc
faddl
shlb
inc
lods
stos
inc
movsb
insl
push
xor
call
out
in
sub
out
sbb
scas
addr16
sbb
adc
inc
lea
sub
and
hlt
adc
mov
bnd
add
cmpsb
in
outsl
pop
dec
movsl
xor
push
xor
rcll
test
xchg
add
inc
cmp
add
in
inc
pop
test
frstor
movsl
aad
mov
rcrl
and
pop
out
and
or
and
or
or
dec
dec
loope
sbb
fwait
repnz
mov
out
cld
mov
hlt
sub
ja
cli
xchg
pop
imul
scas
xor
or
inc
add
aaa
shl
push
test
fs
mov
rcl
jne
adc
loope
cmp
mov
js
lods
xchg
cmpl
fiaddl
pop
xor
das
xchg
dec
sbb
outsl
icebp
and
sub
cwtl
sbb
cmp
or
sub
es
xor
cmp
inc
adc
aad
mov
fstpl
shlb
clc
in
push
mov
test
outsb
or
jle
nop
dec
push
bound
std
mov
jecxz
jb
jmp
int
xor
inc
mov
xchg
xorb
sbb
xor
sbb
icebp
pop
sbb
sbb
pop
lret
in
and
in
pushf
jmp
fiadds
fsubs
push
bound
cld
dec
mov
mull
xor
mov
cmp
scas
lret
leave
mov
in
filds
negb
mov
inc
mov
or
call
xorb
xor
jl
lret
int3
ljmp
mov
fs
daa
sub
test
cmp
movsb
fstp
lret
repnz
push
pop
cmp
add
cwtl
xor
xchg
lods
jecxz
movsl
stc
mov
mov
mov
dec
mov
push
xor
je
rolb
and
jnp
xchg
loope
in
sbb
and
cmp
pop
mov
or
inc
add
pop
ret
ficoms
push
mov
lret
xor
sub
aaa
ljmp
popa
flds
hlt
sub
jecxz
nop
das
inc
pushf
in
ret
test
bound
ljmp
or
pop
sahf
fimull
push
mov
js
out
fists
and
xchg
lret
pop
mov
clc
clc
into
lret
cmp
cs
jg
das
sbb
dec
cmpsl
insl
test
sbb
mov
cmp
mov
xchg
xchg
jb
cmp
push
mov
pushf
mov
add
xchg
or
movsb
bound
sbb
sbb
pop
icebp
mov
sti
and
movsl
lcall
mov
dec
mov
cli
lcall
popf
test
cmc
jnp
or
pop
ss
pop
scas
jle,pt
adc
into
dec
inc
push
insl
movsl
and
je
inc
xor
sub
shrb
cmp
push
xchg
xor
mov
add
add
in
dec
icebp
mov
xchg
shlb
rcll
inc
ja
dec
in
jne
das
lcall
cmp
xchg
sub
daa
arpl
in
dec
and
sub
je
pop
pop
mov
push
mov
in
lods
mov
xchg
and
es
or
repnz
push
cmp
mov
cmp
mull
and
add
push
or
or
cmp
iret
pop
dec
cmpsl
sar
push
aad
js
cmp
pop
jmp
jbe
jmp
and
xor
jns
xchg
bnd
xchg
aad
inc
cmp
popf
add
jge
adc
cmp
repz
sub
or
adc
loope
clc
or
and
xlat
cmp
ja
or
mov
mov
idivl
das
mov
stc
xchg
mov
mov
mov
and
mov
mov
repnz
push
shr
testb
cld
jo
fmuls
in
lret
add
push
mov
pop
mov
lret
sub
pop
aaa
ljmp
inc
sub
lods
mov
imul
mov
movsb
push
gs
mov
movsl
inc
sub
mull
cmpsb
mov
popf
ss
in
dec
loopne
js
cmpsl
cmp
push
fstl
jne
test
clc
pushf
mov
lahf
fndisi(8087
inc
mov
nop
repnz
and
jp
std
push
cli
pop
fptan
cs
xchg
cmc
cltd
clc
push
inc
dec
cltd
popf
mov
push
sbb
push
repz
inc
dec
xchg
fldenv
mov
push
inc
ret
pop
lods
lds
fs
scas
gs
cmp
jmp
int
dec
sahf
pusha
sbb
stos
inc
mov
cmp
sub
jp
popf
lods
shrb
pop
jge
add
movsb
ljmp
in
icebp
pop
inc
pusha
xorl
add
fs
dec
fmull
scas
enter
les
ja
pop
mov
rol
push
jns
mov
dec
pop
pop
mov
lret
cmp
out
lahf
or
xchg
ret
mov
pop
sbb
mov
xor
cli
cmp
bound
fdivs
cmp
mov
lods
fdivl
push
nop
dec
repz
xrelease
in
pushf
out
mov
cmc
and
gs
iret
inc
fistpl
jae
aas
clc
mov
jecxz
push
ljmp
inc
push
jecxz
test
and
cmc
pop
inc
das
mov
nop
pop
mov
mov
fcompl
inc
mov
sub
xchg
pop
mov
push
fdiv
ret
int3
xlat
sub
cmc
add
inc
sbb
inc
pushf
out
insb
cld
rcrl
mov
add
hlt
repnz
xchg
jo
jb
repnz
scas
ss
mov
clc
test
mov
test
or
mov
das
int3
imul
sbb
pop
addr16
and
mov
or
out
mov
in
jbe
inc
mov
das
xchg
dec
xchg
popa
push
mov
andb
mov
nop
mov
int3
pop
xor
popf
mov
in
push
cmp
sbb
inc
xor
fstl
loopne
mov
imul
test
and
inc
out
aas
aad
repnz
popa
push
jmp
data16
lods
in
add
mov
arpl
mov
sbb
fs
and
sub
movsl
or
push
xchg
dec
adc
fwait
lret
bound
add
fsub
repnz
ljmp
pushf
cmp
sbb
pop
rolb
or
pop
or
pop
mov
pop
pop
add
add
cmp
or
cmp
fstpl
push
cltd
repnz
rol
or
cmp
push
push
int
and
mov
test
mov
cmpsb
movsb
sar
mov
lret
or
xchg
in
sub
and
mov
ret
aad
out
ret
mov
push
add
int
lock
push
sub
mov
out
addl
xorb
adc
cmp
sub
ret
pusha
clc
xor
mov
xchg
call
loop
sub
dec
mov
and
mov
mov
xchg
sub
push
int3
sbb
mov
mov
arpl
push
xchg
das
das
xchg
adc
push
cmp
stos
mov
test
and
frstor
addr16
xlat
aam
dec
and
hlt
fistps
add
aas
pop
lret
cld
repz
mov
outsb
pusha
mov
pop
mov
out
push
cmp
add
cmp
int
mov
inc
mov
and
lcall
out
cs
and
xchg
fs
movsl
add
fs
jecxz
fsub
hlt
aam
sbb
popf
movsl
pop
shlb
cmp
inc
pop
adc
add
push
pop
cmp
add
fxch
out
lret
inc
cld
xchg
dec
js
lret
adc
cmpsb
jno
adc
add
or
stos
mov
dec
mov
aas
mov
in
inc
mov
mov
faddl
in
popf
sub
lds
or
or
cmp
prefetch
mov
cld
push
ja
andb
mov
sub
in
cmp
in
jae
outsb
std
xchg
loop
mov
loope
sub
and
sub
or
pop
dec
lcall
xchg
push
mov
mov
xor
mov
repz
and
jmp
inc
jb
in
xchg
sub
sbb
inc
mov
jo
jno
jle
mov
movsb
fnstenv
arpl
jb
in
cs
imul
mov
mov
lret
lods
fistl
loope
mov
mov
aam
ficompl
jp
mov
sbb
cmp
mov
dec
shll
pop
add
jnp
leave
mov
inc
sbb
fisttpll
mull
dec
cmpb
sti
imul
les
push
fnstcw
std
cld
sub
or
pusha
daa
sub
pop
out
fcompl
ljmp
push
fsts
jae
sbb
jae
stc
dec
pop
stos
xlat
dec
frstor
xorb
add
out
mov
and
je
scas
insl
adc
pushf
popf
mov
sub
stos
xchg
repz
jmp
add
ljmp
loop
pop
das
in
xor
rcrb
push
inc
and
push
add
or
fnstsw
mov
ret
cmp
and
mov
or
push
fcomip
repnz
loope
cmp
pusha
pop
mov
lods
sbb
jmp
mov
push
les
xchg
aaa
or
pop
je
cmpsl
repz
sahf
push
push
sub
and
mov
not
andl
int
mov
jle
xor
fwait
lds
hlt
hlt
scas
loop
mov
pop
add
and
int3
fscale
xlat
xchg
inc
test
in
sub
and
dec
xchg
outsb
movsb
cmp
out
cmpl
loopne
add
xchg
sub
int
jbe
pushf
jo
jns
xor
push
add
mov
mov
add
dec
pop
xchg
jmp
dec
adc
dec
fdivrs
cltd
sbb
popa
lahf
pop
movsl
mulb
mov
or
sub
in
flds
cli
adc
mov
iret
ss
lods
dec
mov
cmpsb
push
in
mov
inc
ret
cmpsl
aam
in
mov
loop
sbb
nop
lret
aad
pop
rcll
jo
stc
loopne
repnz
and
add
rcr
mov
jp
std
ret
pop
insb
leave
and
jb
inc
jae
sbb
xchg
sahf
xor
fdivl
ret
mov
stc
gs
roll
pop
sbb
mov
inc
jae
mov
leave
test
ret
inc
pop
jne
mov
sbb
jmp
loope
pop
cmp
in
popa
inc
xor
jp
cmpsb
mov
cli
jnp
stc
dec
loop
pop
scas
xchg
fldcw
mov
fstpl
mov
xor
das
xchg
imul
sub
pop
adc
mov
fs
mov
jbe
and
add
jecxz
pop
adc
mov
aad
add
xchg
mov
inc
data16
mov
xchg
mov
fdivl
add
sbb
in
fcoml
inc
push
add
xchg
sbb
ficompl
push
sbb
adc
cmpsb
cltd
sbb
mov
jae
rolb
cmc
scas
add
cld
xchg
into
jmp
sti
leave
frstor
adc
adc
mov
rcr
popa
test
xchg
cmc
inc
insb
sbb
xchg
push
int3
in
jns
jae
mov
sub
sbb
pop
lea
int3
adc
icebp
flds
xchg
flds
mov
xchg
ljmp
add
xrelease
jmp
movsb
test
cmpsb
xchg
mov
add
enter
out
sahf
test
mov
in
popf
jns
sub
and
pop
int3
out
fcmovnbe
or
popf
lahf
dec
mov
std
add
popa
jb
inc
or
popf
pop
dec
outsl
sti
subl
mov
dec
sar
out
jmp
fs
popf
jge
dec
sti
addr16
lret
xchg
or
popf
jmp
aad
out
int3
sub
or
popf
pop
dec
jae
jno
push
push
lods
lret
mov
dec
in
sti
sti
test
aas
fs
sub
jno
push
dec
arpl
mov
xchg
fs
lret
repz
popf
aad
in
xor
sti
in
test
int3
das
mov
shl
insl
outsl
insl
leave
add
xchg
int
add
xchg
sti
stos
mov
and
in
lret
xchg
jne
daa
dec
ret
sti
dec
test
in
xlat
lret
add
repz
popf
dec
xchg
sti
ret
test
lret
jge
mov
sti
cmp
jmp
fs
lret
test
push
icebp
sbb
push
int3
dec
in
lret
jns
sub
in
nop
loope
in
sti
and
lret
pop
or
jno
popa
sbb
inc
sti
dec
test
lret
jnp
dec
popf
arpl
stos
out
add
mov
fs
outsl
or
sti
stos
test
lret
sti
jg
ftst
aad
sub
popf
orl
test
lret
out
or
popf
int
out
int3
inc
ljmp
in
or
loope
int
xchg
lret
cmpsl
or
in
shl
or
scas
mov
in
lret
stc
or
popf
lret
dec
jmp
dec
test
lret
jno
jnp
pop
dec
pop
sti
mov
fwait
lret
add
pop
sub
sbb
lret
jns
jnp
dec
dec
mov
test
lret
cmc
or
popf
std
dec
xlat
sti
rcl
das
ja
cmp
fs
test
jnp
gs
mov
lds
lret
in
or
popf
xlat
dec
lret
sti
jmp
dec
sbb
test
mov
mov
sbb
fs
fldl2t
fsubrl
dec
or
test
lret
or
lret
test
dec
or
popa
pop
in
fwait
and
add
decl
leave
xor
adc
jge
fdivr
push
fbstp
out
in
fstps
int
sbb
outsb
push
aam
in
lret
and
and
jnp
jl
dec
test
dec
xchg
jmp
aam
xchg
jp
loop
fimuls
sti
fldcw
add
dec
rcrl
in
sbb
es
sti
in
jmp
in
fs
popf
orl
mov
fs
ja
or
sti
int
out
fs
lret
lods
dec
pop
sti
push
test
lret
dec
or
xchg
gs
sti
test
lret
lea
leave
popf
lds
dec
test
lret
and
adc
jmp
icebp
in
mov
popf
loope
dec
sti
jg
ja
fs
lret
inc
or
rorl
add
add
in
or
fidivl
dec
mov
ljmp
mov
sarb
push
push
push
inc
int
dec
pop
mov
push
push
xchg
outsb
mov
sbb
fcompl
lret
addl
xchg
mov
test
mov
rcrl
inc
ss
mov
mov
in
mov
int
ja
jp
pop
mov
int
int
sahf
pop
movsl
stos
scas
mov
std
or
push
ret
iret
ret
pusha
aam
adc
pop
and
int
mov
push
push
dec
jne
mov
lds
mov
negl
lods
ret
idivb
pop
push
pop
mov
enter
rorb
add
faddl
xor
cmpsl
out
shrb
mov
xor
cltd
mov
dec
lea
sbb
mov
aad
or
lahf
push
mov
mov
push
cmc
test
stos
enter
push
and
cltd
les
jp
imul
cmc
es
pop
sahf
and
fwait
inc
movsb
mov
fwait
out
icebp
test
leave
lahf
xorb
sarb
cmpsl
mov
leave
scas
stos
test
fwait
and
pop
mov
sar
scas
scas
mov
or
push
cmpsb
addr16
repz
push
sbb
test
lcall
mov
cltd
cmp
pushf
dec
mov
mov
cmpb
leave
mov
xchg
js
push
fnstcw
ret
in
imul
add
push
pop
fwait
in
fistpl
pop
aaa
inc
lds
or
fwait
lcall
out
mov
sub
push
jne
mov
xchg
test
in
dec
add
in
dec
sbb
and
jl
or
mov
push
and
mov
adcl
add
inc
xchg
call
inc
mov
lds
jae
or
cs
cmp
cltd
jbe
enter
lret
or
mov
movsl
mov
inc
mov
inc
popf
out
xchg
in
std
movsb
rcrl
mov
movsb
mov
sahf
mov
fstpl
testl
leave
fadd
mov
pop
cltd
mov
loopne
or
fcoms
mov
lret
jmp
movsl
addr16
pushf
sar
mov
std
fldenv
dec
mov
sub
imul
mov
dec
pop
sarl
mov
jecxz
sbb
xchg
mov
das
test
dec
inc
in
mov
ret
out
push
sbb
xchg
fisttpl
ss
mov
xchg
rorl
cs
fwait
cmp
pop
ret
std
add
add
mov
movsl
cmovns
inc
dec
shlb
jnp
movsb
pop
dec
jmp
sahf
popl
out
mov
cmc
inc
xchg
decb
mov
idivl
test
sbb
cmpsb
mov
test
int
lds
scas
lret
lcall
shrb
test
and
scas
jb
mov
mov
es
dec
or
and
xchg
jecxz
jmp
aam
push
cli
adcl
push
adc
mov
or
mov
movsb
xadd
xchg
shrb
jmp
mov
lock
movsl
mov
enter
mov
pop
scas
inc
xchg
jl
call
aad
out
dec
adc
push
test
idivb
scas
lds
icebp
push
aas
fwait
and
mov
mull
jns
sahf
es
xor
dec
mov
push
mov
xlat
scas
mov
dec
call
mov
icebp
pop
jo
lock
or
or
fsubl
mov
cld
add
stos
lea
mov
outsl
or
mov
das
insb
scas
or
mov
add
jns
pop
mov
adcb
mov
lret
imul
orl
add
fcmovnbe
in
movsl
bound
mov
pop
cld
jno
std
int
and
sbb
aam
sbbl
cwtl
pop
cli
add
inc
ret
mov
aam
into
sbb
xchg
xchg
lret
cwtl
test
ficompl
sub
mov
mov
sbb
fidivrl
stos
xor
lea
scas
mov
push
inc
cmp
shl
in
push
xchg
ds
mov
lret
ror
inc
xchg
test
fwait
mov
leave
fstpt
stc
mov
gs
or
push
movsl
sbb
fistpl
jno
shlb
roll
or
int3
ss
imulb
xchg
pop
add
mov
lret
imul
jb
jl
dec
push
shrb
clc
orl
jno
jns
mov
mov
mov
and
stc
jo
adc
mov
cld
stc
rcll
leave
mov
mov
jb
mov
lret
lea
add
sub
adc
popf
mov
sbb
inc
mov
lea
push
lds
fs
int3
fucomp
sbb
xor
push
cltd
cmpsl
jmp
mov
dec
dec
mov
pop
cltd
dec
add
lea
fxch
loop
enter
cltd
and
dec
jecxz
iret
inc
popf
loop
jecxz
sar
and
adcb
pop
test
addl
push
cli
out
clc
fwait
into
mov
cltd
notb
or
gs
addr16
popf
out
test
jmp
cmp
mov
lods
mov
test
bound
mov
jns
movsl
ds
sub
and
push
jmp
ret
fwait
mov
jmp
xor
sbb
fmull
in
cmp
dec
movsl
rcrb
mov
pop
lea
cmp
mov
cld
or
dec
test
jns
and
mov
mov
xchg
imul
int
mov
pop
fwait
mov
jg
popf
pop
inc
add
shrb
movsl
lods
mov
mov
push
stos
ds
imul
inc
pusha
mov
mov
mov
inc
int3
mov
dec
daa
orl
imul
fnstcw
pop
lret
cmp
adc
xor
leave
or
mov
nop
lock
push
add
fwait
popf
jge
cmp
mov
int
mov
pop
sbb
scas
icebp
test
pop
aad
cwtl
imul
push
mov
or
push
les
sbb
mov
out
loop
inc
and
inc
pop
movsb
pop
imul
repz
and
ljmp
test
stos
test
cmpsl
fcomi
mov
sti
mov
movsl
repz
icebp
roll
mov
inc
jecxz
jbe
ret
lds
mov
enter
test
std
cs
std
or
jle
jmp
cmc
lods
aas
icebp
push
and
stc
sub
leave
ret
ror
loopne,pn
or
ljmp
mov
inc
subl
and
sti
sbb
lret
subl
movsb
insb
mov
lcall
jo
or
mov
subl
popf
popl
cld
std
into
pop
add
in
addb
jl
sar
mov
add
cmp
mov
mov
sbb
in
dec
or
sbb
icebp
mov
lret
add
sub
cmp
xchg
fldcw
or
movsl
scas
imul
or
mov
or
mov
jmp
jns
push
imull
sbb
mov
test
test
mov
lea
dec
out
ljmp
mov
cmp
je
into
sti
or
shll
dec
push
or
imul
ja
cmpsb
xor
scas
dec
je
sbb
cmpsl
mov
mov
dec
push
sbb
dec
aam
pop
mov
insl
pop
sbb
cmp
push
cmpsl
inc
in
outsl
lcall
or
enter
aam
adc
mov
mov
fistps
mov
in
mov
sub
mov
jnp
or
xlat
mov
jge
test
push
dec
or
mov
mov
mov
lea
jne
mov
les
lea
sbb
popa
fists
mov
lret
hlt
dec
pushf
mov
imull
into
cmpsb
popf
sub
sbb
sbb
les
mov
and
fldenv
gs
addr16
adc
xchg
icebp
pop
shlb
shrl
push
mov
jp
mov
into
sti
mov
in
out
sbb
gs
dec
jecxz
pop
lret
lret
sbb
cltd
fs
cli
in
es
stos
xor
lock
mov
and
jmp
je
jno
xchg
lret
push
add
cmc
arpl
ljmp
mov
mov
mov
and
lcall
push
pop
lret
fwait
mov
or
push
pop
pop
ret
sub
mov
icebp
push
repz
cmp
mov
push
jo
inc
test
cmp
or
sbb
xor
push
ror
jp
pushf
fdivp
popf
and
jno
stos
jmp
fnstenv
mov
xchg
shlb
or
rcll
arpl
pop
sti
xor
pop
gs
mov
inc
popf
pop
fwait
inc
xor
arpl
sarl
rcl
add
cmp
jns
lret
shr
pushf
cmp
pushf
shlb
movsl
and
ret
mov
sbb
gs
mov
mov
in
dec
jge
pop
or
xchg
xchg
dec
into
cmp
out
inc
sub
pop
iret
fcoml
cwtl
dec
movsb
cmpsl
and
fnsave
pop
repnz
test
xorl
adc
lea
rolb
mov
scas
sar
dec
push
popf
add
pop
repz
movsb
dec
sahf
int
add
and
call
test
cmpsl
or
add
sti
pushf
aaa
push
xor
xchg
cmpb
push
push
fstps
dec
mov
mov
and
jo
sub
sbb
jecxz
sub
movsl
les
mov
mov
lret
pop
mov
ret
mov
cmp
shl
lds
pop
and
lds
xchg
imul
or
jmp
das
or
dec
stos
mov
mov
xchg
or
cltd
cwtl
sbb
xor
das
iret
leave
jno
mov
lret
cmp
repnz
push
lds
pushf
push
sub
lds
addr16
in
ljmp
int
fisttpll
push
popa
and
aad
ret
push
or
fnstcw
add
or
dec
push
pop
in
test
cld
stc
test
lods
jl
in
sbb
pusha
fildl
arpl
jno
outsb
and
mov
int3
sbb
inc
insl
repnz
out
jge
icebp
add
xchg
pop
pushf
mov
fmull
jecxz
and
int3
in
fcoml
pusha
ret
popf
lods
cmp
dec
pop
lahf
or
sbb
or
or
xchg
imul
nop
loope
xchg
and
lods
xchg
dec
and
and
cmpsl
in
adc
and
shr
popf
pushf
pop
push
and
call
and
push
cmp
sbb
sbb
sti
std
rcll
cmp
jl
lods
sbb
xor
dec
popf
jge
cld
jl
leave
shll
sub
outsb
and
in
push
std
in
dec
push
lods
lds
out
rcr
int
int
jl
fucomi
sar
popf
cld
int
lods
or
pushf
add
xchg
shr
insl
pushf
sbb
in
add
push
lods
sub
popf
xchg
std
sahf
cltd
push
lea
test
mov
jne
std
std
xchg
pop
jno
imul
dec
push
or
lods
cli
xlat
lods
pop
xchg
in
sub
imul
in
in
imul
int
pushf
std
dec
push
in
fmulp
cmc
cld
mov
int
mov
dec
sbb
xchg
jle
mov
int
xor
out
inc
mov
sub
mov
sub
xlat
test
imul
in
loopne
jnp
push
gs
mov
sub
jmp
jns
mov
fmul
loopne
std
test
sub
shlb
xchg
jns
mov
mov
ficomps
mov
sbb
pop
xchg
rclb
dec
xchg
pop
ja
and
and
scas
xor
sbb
cmp
out
fsub
loopne
std
sbb
aam
pop
and
cli
stos
andb
cmp
sbb
xlat
and
pop
stos
cmp
or
jecxz
or
or
pop
and
xor
pop
fiadds
push
std
mov
lret
push
xlat
cli
movsl
cld
fdivrp
movsl
sub
add
mov
cli
push
jmp
or
aaa
and
sbb
xchg
cmp
mov
ficoms
aad
fisttpll
mov
fstpl
dec
dec
stos
and
or
aad
fnstsw
jg
mov
sti
mov
push
cli
adc
sbb
std
int3
pop
and
int
aad
int
jg
lods
test
fstl
cmc
lahf
push
or
lods
stos
insl
je
inc
dec
int3
fcmove
mov
pop
jge
and
adc
sahf
popf
cli
lds
jne
cmp
in
addr16
xchg
cli
pop
dec
test
add
shrb
sub
xor
paddb
mov
cli
xor
popf
bound
popf
sub
aam
add
mov
test
cld
cmc
fisttpll
sub
clc
out
cmc
leave
fneni(8087
ficoml
lods
jo
and
add
sar
jp
jmp
jnp
imul
orb
popf
mov
mov
jns
movsl
sub
in
push
gs
xor
scas
fwait
iret
add
test
mov
push
inc
jl
xor
jmp
mov
cmpsl
fxch
pop
dec
cmc
test
adc
xchg
roll
push
loopne
int
and
fidivrs
push
pop
cmp
popf
mov
pop
movsl
leave
mov
pop
popf
in
mov
jmp
or
aad
fsts
cmc
dec
in
test
jnp
mov
stos
push
sub
jns
or
jae
xchg
cmp
sub
sbb
addr16
jmp
insb
int
pop
in
mov
or
stc
inc
mov
fadd
pop
lcall
scas
movb
xchg
sbb
mov
lret
ffree
sub
dec
adc
pop
shl
jmp
addr16
push
fcmovne
jl
sub
mov
hlt
mov
aam
roll
fldl
mov
jb
daa
test
xchg
imul
inc
push
or
ss
cmp
and
jmp
test
faddl
jbe
jno
add
mov
fimull
imul
push
fcoml
xchg
lock
nop
test
scas
shlb
mov
inc
cmp
mov
loope
test
mov
mov
inc
in
stos
nop
shl
out
fmul
loopne
jne
jg
test
dec
sbb
addr16
out
gs
dec
and
gs
cmp
xchg
pop
mov
cld
xchg
in
mov
jl
pop
pop
push
adc
mov
dec
jge
sbb
stos
adc
xchg
cmp
add
add
pop
es
dec
inc
lods
cmp
gs
push
mov
in
stos
xchg
daa
jne
es
fucomp
shr
or
in
mov
pop
xor
xchg
xor
sbb
loop
mov
adc
sub
mov
stc
aam
in
movsl
stos
dec
fadd
jns
aad
into
fdivrl
ficoms
fcompl
add
les
mov
lock
add
fwait
lds
call
xchg
sbbl
mov
fsubr
fwait
in
mov
int
fwait
test
leave
cwtl
push
rorl
mov
loopne
push
shrb
test
pop
stos
jmp
sub
out
adc
mov
pop
lahf
pushf
in
sub
cmpsb
lret
rol
mov
pop
pop
int
or
dec
int
push
aad
vsqrtps
or
adc
mov
imul
rolb
pop
enter
mov
hlt
leave
add
pop
jecxz
mov
push
in
sarb
or
dec
movsl
xchg
nop
test
out
dec
dec
test
push
les
lock
pop
call
stc
mov
jbe
lahf
inc
jmp
mov
lods
dec
aam
mov
rorb
fsubl
cmc
pop
leave
push
jmp
mov
repz
sarb
mov
mov
cmp
in
pop
xor
imul
cmp
pushf
dec
jae
int
cli
test
mov
aas
mov
lret
in
outsl
cmp
lcall
cli
mov
movsb
adc
mov
pop
pop
and
popa
in
cmp
mov
int
sbb
push
cmpsl
in
xor
mov
mov
popf
xor
mov
ret
cmpsb
and
into
dec
gs
mov
mov
mov
fsubl
nop
dec
test
fmull
in
roll
leave
int
lods
mov
xchg
es
jecxz
jl
inc
add
out
shll
xchg
add
loopne
test
jb
or
mov
scas
xchg
mov
popf
fstp
jg
add
adc
mov
mov
fnstsw
dec
shll
inc
lret
push
aad
mov
add
sti
int
fiaddl
sub
dec
rcrl
iret
pop
pop
push
sub
sub
loopne
xchg
nop
stos
shlb
mov
lods
fldcw
cmp
xlat
cld
iret
jo
movb
add
add
cli
push
loope
lods
mov
add
add
mov
mov
push
and
fcoml
in
cmp
loop
int
std
aad
and
sub
rorb
jb
pop
fidivl
fstl
or
psubusw
pop
aam
mov
mov
imul
push
popf
xor
out
add
int
xchg
add
dec
cmp
stos
imul
fwait
aam
movsb
mov
ja
mov
test
mov
loope
xchg
stc
lcall
add
lahf
jecxz
cmpsl
xchg
and
lahf
fists
lock
rorl
xor
shrb
add
aad
in
in
mov
mov
cld
mov
lret
dec
rorl
cmp
xlat
leave
sbb
lahf
faddl
dec
jmp
std
cmc
call
dec
aad
pop
push
xor
imul
mov
pop
mov
enter
test
movsl
xor
mov
int
stos
decl
push
mov
addr16
adc
xchg
and
mov
sahf
sti
sahf
dec
xor
stos
mov
stos
mov
sub
movsb
addr16
test
or
mov
xchg
xor
aad
xor
pop
push
popf
enter
pop
enter
xchg
mov
fnstsw
xor
adc
cmpsb
scas
sub
les
adc
xor
stos
mov
lds
andb
orb
lea
cli
decl
lds
aad
lods
and
mov
imul
iret
mov
idivl
test
in
jmp
in
fucom
and
pop
sub
mov
in
sbb
mov
insb
test
pop
sbb
aam
mov
mov
add
lcall
sub
les
pushf
push
mov
jmp
scas
mov
mov
std
xchg
add
cmp
mov
in
xor
add
pusha
int
mov
mov
jge
int
movsb
popf
fists
gs
push
fs
xor
add
push
add
in
xchg
jne
arpl
add
dec
cmp
aad
fstpl
add
dec
test
mov
lcall
dec
dec
clc
lods
mov
ret
imul
imul
push
dec
jmp
rol
andb
sti
testl
xor
movsw
sbb
cmp
jne
int
or
mov
xchg
lahf
jmp
mov
adc
mov
jmp
stos
xchg
lea
addl
or
icebp
mov
int
insb
push
subl
iret
jmp
pop
inc
adc
mov
and
gs
int
cmp
pop
int
les
dec
aad
gs
int
or
xchg
pop
popf
jno
sbb
popf
aad
dec
xchg
mov
mov
mov
aas
movsl
mov
pop
fcoml
in
mov
or
stc
xchg
mov
and
jmp
xchg
mov
sub
mov
js
scas
fbstp
mov
pop
lds
in
jle
mov
mov
jge
mov
mov
push
fcom
add
leave
std
dec
clc
pop
hlt
cmpsl
gs
js
mov
inc
std
mov
int3
lret
lea
adc
xor
mov
shl
rol
mov
test
cmp
mov
or
in
pop
icebp
aad
fisttps
fdivrs
xor
shll
int
roll
not
cmc
xchg
popf
lret
mov
dec
enter
jno
pop
mov
xchg
mov
lahf
les
lods
rcll
mov
aas
jmp
mov
sub
xchg
ljmp
sbb
sbb
sub
test
std
pushf
xchg
mov
jb
ss
mull
jb
in
mov
mov
mov
out
jmp
stos
and
imul
mov
imul
add
mov
adc
pop
nop
xor
daa
xchg
test
lods
jl
aaa
enter
add
jp
mov
test
or
fxch
dec
add
repnz
jo
in
push
mov
in
add
push
sub
popf
add
in
or
test
es
mov
xor
jo
and
loop
xchg
xor
push
fistl
ret
xchg
scas
sbb
ss
fisttps
fsts
mov
pop
outsb
jecxz
sar
imul
dec
jns
adc
push
mov
jno
aad
js
sti
push
xchg
sub
rclb
xchg
sbbb
xchg
stc
and
gs
fnstcw
push
stos
lds
push
fldl
jno
pusha
inc
jbe
jb
aam
sub
ljmp
mov
jmp
int3
mov
in
lods
or
fstps
mov
rcrl
lcall
ret
test
mov
fchs
scas
inc
adc
jmp
inc
fistpll
stos
int
jg
icebp
stos
jmp
mov
adc
jg
js
xor
std
nop
inc
cltd
cld
in
nop
fwait
lret
or
inc
inc
dec
std
fwait
lcall
sbb
sub
je
sahf
jbe
popa
inc
lcall
mov
fisubl
stos
mov
in
test
dec
xor
ljmp
mov
in
push
jecxz
popa
bound
adc
aam
dec
call
cs
scas
int
pushf
jno
enter
adc
or
popf
out
mov
sbb
mov
xchg
insl
inc
test
fsubrl
sbb
lea
sti
sub
jmp
sub
mov
or
fisubrl
hlt
daa
cmc
sub
lods
mov
es
std
aad
add
xchg
mov
xor
testb
or
gs
jmp
fdivrl
int
jo
js
sahf
mov
test
lret
pushf
push
jmp
int3
int
cmp
std
lds
or
or
cmp
cmc
leave
movsl
mov
lahf
jmp
dec
in
mov
add
mov
in
xlat
fs
lods
stos
fldenv
in
test
ficoml
adc
cld
fnstcw
out
int
popf
jecxz
dec
aad
in
icebp
pop
jg
add
mov
pop
pop
int3
mov
or
pop
lods
test
movsl
pop
jg
test
lds
jne
pop
xchg
adc
lods
fs
mov
movsl
stos
ficoms
mov
dec
and
cmp
test
into
fisttpl
into
int
out
out
int
out
sbb
dec
fstl
rcrb
loop
pop
in
es
adc
loopne
bound
xor
in
cmp
fcmovbe
addr16
repz
shl
jge
cmp
add
in
int
jbe
test
xchg
mov
cmc
shll
sub
sbb
sahf
packsswb
aam
or
inc
jno
add
ja
pop
mov
sti
push
test
lret
test
dec
lret
cwtl
sti
int
mov
int3
shrl
lret
add
popa
mov
mov
int3
mov
inc
lret
mov
adc
ss
std
test
jmp
loope
sub
sbb
repnz
out
fldenv
lret
icebp
mov
sub
mov
fs
test
fcmovne
cld
hlt
lock
in
addr16
lcall
and
xchg
xchg
push
loope
xchg
int
dec
xor
add
push
mov
and
pop
jmp
pop
hlt
imul
jl
mov
sahf
jle
outsb
push
pop
daa
aad
push
dec
int
rcl
roll
xchg
pusha
mov
sub
or
in
cmpsb
mov
test
lret
lods
or
jo
push
sub
int3
jmp
add
xor
negl
faddl
cmp
or
dec
faddl
in
mov
cmp
int3
jne
fisubl
jne
fcmovnu
sar
popf
loopne
out
dec
dec
in
arpl
rcl
int
fst
in
mov
int3
jmp
and
jmp
int3
fimuls
sbb
movsl
sub
aam
fdivs
int
sub
cmc
sbb
sti
shrl
lret
int3
or
lods
dec
insl
sti
mov
and
mov
push
jmp
int3
pop
or
in
fdivrp
xchg
gs
imul
gs
loop
jge
rorl
call
inc
lret
out
inc
in
push
aad
pop
in
int3
test
lret
mov
push
sub
in
rclb
lret
sbb
ja
sub
jecxz
and
dec
cmc
sti
or
lds
pop
or
popf
push
dec
lret
sti
insl
test
lret
cmp
pop
aam
int3
int
xchg
or
sti
dec
test
int3
add
fcomps
jne
or
or
test
dec
aad
mov
in
mov
movsl
shrb
fs
fs
cmc
dec
cmp
test
sti
sbb
ror
sub
call
sti
fsubrs
lret
add
lds
pushf
test
insl
fs
lret
and
dec
mov
cmc
out
fs
lahf
fcmovu
add
jae
xchg
movsb
lret
lods
or
sti
jge
xchg
jne
test
or
dec
cmpsb
in
out
movsl
test
lret
mov
movsl
popf
mov
cltd
xor
nop
or
dec
test
mov
lret
xchg
or
xchg
test
lret
cmc
or
sti
lds
lret
push
or
and
mov
les
ret
test
lret
mov
xchg
popf
enter
test
lret
lods
or
stos
dec
or
mov
mov
aad
scas
popf
in
dec
scas
sti
movsl
test
into
or
test
lret
sbb
dec
mov
sub
in
aad
fisubrs
int3
imul
lea
push
lds
pop
push
incl
insl
arpl
imul
lret
cmp
les
int
ret
dec
add
mov
xchg
lret
pop
or
dec
leave
gs
or
fs
adc
or
sti
inc
aad
shrb
lret
in
or
popf
movsl
dec
cmp
mov
int3
mov
dec
test
int
in
jmp
repz
or
sub
sub
out
std
mov
in
sub
mov
cld
pop
xor
out
jge
lcall
sub
fstpl
gs
popa
in
pop
dec
popf
idiv
lea
lcall
popa
insl
pop
inc
and
cmp
pop
sub
idiv
std
xor
out
popf
mov
lea
mov
pop
pop
dec
dec
idiv
jge
insl
out
jl
or
lcall
int
lcall
popa
lea
mov
pop
out
dec
mov
jge
insl
jbe
sub
sub
in
popa
std
pop
dec
in
idiv
popf
xor
out
mov
pop
gs
popa
jge
dec
insl
divb
cld
cmp
fst
idiv
int
std
out
in
mov
popf
sub
lods
pop
dec
pop
idiv
dec
xor
out
insl
mov
out
or
sub
loope
int
std
gs
popa
popf
pop
dec
idiv
mov
pop
mov
dec
sub
gs
cmp
gs
sub
sub
idiv
in
xor
out
lea
gs
popa
dec
pop
dec
jge
cld
insl
xor
idiv
or
sub
sub
out
std
mov
in
sub
mov
cld
pop
xor
out
jge
lcall
sub
fstpl
gs
popa
in
pop
dec
popf
idiv
lea
lcall
popa
insl
pop
inc
and
cmp
fst
pop
sub
idiv
std
lret
sub
ljmp
aad
mov
lds
in
inc
lea
inc
fldl
inc
cmc
lret
lahf
out
pop
push
cmc
lds
in
fstpl
addl
dec
sub
xchg
cmc
int3
mov
fmul
fsubp
in
jae
sbb
faddl
loopne
in
and
and
fcoml
psllq
jecxz
cmp
in
in
cmc
imul
pushf
pusha
movsl
arpl
jl
fucomp
loope
lea
idivb
sbb
jmpw
out
mov
pusha
mov
shlb
push
pusha
and
ror
lcall
jmp
mov
or
cvttps2pi
or
mov
mov
xchg
movsl
in
ljmp
loopne
or
test
aam
aad
mov
mov
stos
aad
jge
mov
aad
push
nop
aad
push
cmp
pop
jne
ffreep
mov
mov
add
adc
in
fstpt
and
hlt
gs
sbb
lahf
pop
aad
fadd
int
pop
mov
in
and
add
jg
in
cmc
movsb
push
pop
pop
rcll
aad
in
inc
sub
mov
cmc
loope
test
pop
dec
mov
insl
dec
and
sbbl
popa
mov
test
lds
cmp
fnstenv
gs
sub
cmp
lods
fcomi
xlat
add
in
xor
cmp
jp
aad
lcall
xchg
xor
inc
mov
pop
insl
aad
xchg
inc
add
jmp
in
fnstsw
out
in
dec
add
jne
popf
push
add
cmpsl
add
fxam
cmp
mov
push
mov
movsl
sub
adc
stos
add
push
ficomps
mov
insb
jge
fisttpl
aad
cs
aad
insl
popa
jmp
out
fstl
aad
lcall
lea
fucomp
shl
cli
mov
or
and
aad
movsl
insb
test
cmc
aad
repnz
sub
test
push
xchg
pop
test
mov
movsl
mov
fildl
sti
and
jno
fstps
insb
loope
icebp
jne
push
lds
cmc
mov
dec
push
test
lea
pop
imul
xchg
stc
pop
push
or
sbb
cmc
xchg
pop
pop
mov
sahf
push
fs
pop
and
fists
rol
aad
popf
ficomps
cltd
lds
aad
scas
cld
mov
add
push
aad
imul
jle
mov
daa
fnstenv
insb
mov
in
test
mov
addl
cld
xchg
lahf
cmp
jmp
jnp
ret
xlat
leave
add
jae
cld
mov
in
dec
fdivrl
movsl
in
mov
aad
lods
lret
out
jns
loop
lods
popa
andb
mov
xchg
cmp
frstor
insb
inc
sbb
pop
inc
push
mov
fldl
inc
aad
data16
data16
pop
inc
jge
frstors
lahf
out
mov
adc
xor
pop
mov
lds
xchg
call
rorb
iret
mov
mov
adc
leave
stc
ror
pop
or
cld
sahf
adc
loopne
push
add
inc
pop
out
mov
stos
jmp
rol
xor
mov
cltd
std
jb
mov
add
mov
xchg
loop
mov
imull
leave
int3
lods
loopne
pop
xlat
lcall
add
cli
in
mov
in
ret
cwtl
imul
imul
fwait
jnp
aas
jnp
xchg
mov
add
popa
imul
aad
adc
mov
mov
clc
icebp
mov
pop
out
or
paddsw
mov
imul
arpl
xchg
mov
aaa
in
cmpsb
add
mov
shl
int
xchg
adc
repnz
rcrb
jns
mov
xchg
lret
push
push
xlat
mov
mov
int3
arpl
mov
iret
stos
sub
das
aaa
and
add
xorl
cmp
imul
movsl
repnz
mov
jge
fwait
inc
mov
mov
dec
jge
mov
add
mov
lret
roll
mov
daa
popf
mov
adc
mov
mov
lcall
leave
add
sub
lcall
into
xchg
add
jmp
les
fisubs
adc
cltd
out
lret
aad
in
dec
mov
push
or
mov
pop
jle
inc
lods
out
mov
ljmp
call
clc
push
repnz
std
outsl
add
ljmp
push
and
test
stos
inc
mov
pop
inc
mov
dec
xchg
jle
lret
jno
mov
xchg
gs
xchg
pop
mov
adc
or
mov
sti
mov
mov
andps
rolb
jle
push
fcmovne
idivl
add
out
inc
pop
movsb
movsl
outsl
or
lcall
sahf
inc
dec
push
mov
cltd
arpl
sub
cwtl
dec
dec
stos
and
adc
sub
cmpsb
dec
stos
xchg
mov
stc
insl
xchg
jg
dec
mov
dec
enter
out
fbld
mov
add
cmp
mov
pop
out
sahf
mov
rcrl
jg
cmpsl
inc
rcr
push
fsub
aad
in
call
fxch
std
jmp
in
test
mov
mov
cmc
cmp
dec
fcmovne
jne
frstpm(287
out
jecxz
fisubrl
arpl
popf
fcmovnbe
lret
sub
lahf
scas
and
dec
fcoml
add
stc
pop
pop
in
and
pop
xor
fadd
push
out
inc
cmpsb
jmp
pop
jg
sub
or
lret
arpl
pushf
jmp
ss
mov
mov
fidivrl
jp
jecxz
lret
imul
adc
add
incb
leave
leave
fstps
cld
lcall
mov
pop
adc
gs
movsl
fdivrs
fstl
mov
movsl
lds
xchg
std
xchg
lds
lock
sbb
dec
fcomi
or
inc
pop
adc
out
pop
fwait
stos
dec
fs
icebp
mov
popl
mov
cld
and
mov
add
loope
fdivl
pop
lods
aaa
fcompl
cld
das
ljmp
out
inc
push
fdivrs
test
mov
or
xor
mov
inc
push
jmp
aad
andb
cmp
lsl
leave
mov
lods
push
icebp
mov
shl
xchg
lods
jmp
in
lock
fsubl
sbb
xor
psraw
mov
sti
cmp
pop
es
inc
jbe
stc
fildl
jmp
pop
aaa
inc
and
mov
popf
push
pop
and
xor
lcall
bnd
jecxz
lret
rcr
mov
jno
jo
stos
test
mov
test
push
test
movsb
push
mov
icebp
lret
fcmovnbe
decl
mov
jno
push
loope
std
gs
sbb
cmpsb
rclb
cld
std
pop
sub
mov
daa
test
adc
aad
mov
xchg
shll
xchg
dec
test
lds
mov
jecxz
inc
jno
pushf
mov
nop
pop
xor
pop
dec
shl
mul
mov
insb
cmc
jmp
loope
adc
push
xor
aad
push
insb
push
mov
or
notl
adc
test
adc
dec
outsl
cld
cmpsl
leave
call
sahf
test
outsl
hlt
and
leave
fnsetpm(287
xor
push
ficoml
in
add
mov
lds
cltd
je
fbld
sub
push
xchg
rcrl
rorl
inc
rcr
fisubl
fisubl
das
jae
rclb
inc
cmc
xor
fimull
sbb
rcll
xchg
xchg
push
lods
cmp
and
xor
repz
int3
push
mov
mov
ss
in
lret
sub
mov
pop
pusha
in
iret
lds
mov
in
lds
sub
add
sahf
jne
and
or
orb
mov
xchg
lds
cmp
adc
hlt
cwtl
mov
and
jo
xor
jge
push
adc
fmull
mov
ret
faddp
dec
cmp
in
lods
out
mov
loop
mov
stos
adc
cmc
xchg
mov
arpl
dec
xchg
addr16
sub
or
sub
jno
cltd
popf
loop
dec
mov
ljmp
or
adc
and
mov
inc
movsl
stc
and
cs
mov
jne
in
das
ror
sbb
in
int3
adc
mov
or
ret
and
pusha
in
add
cwtl
push
jbe
sub
dec
fdivrl
mov
lock
out
pusha
cmp
mov
lds
pop
push
insb
inc
int3
mov
sar
lret
cmp
mov
cli
fcompl
enter
aas
dec
mov
sbb
fadds
xchg
xchg
jne
fstpl
mulb
dec
inc
in
outsb
jge
jmp
fidivrs
push
sbb
in
add
jmp
dec
dec
data16
fstpl
xor
das
push
sub
adc
les
int3
pop
scas
or
mov
cmp
mov
out
into
inc
scas
mov
gs
mov
fwait
push
loop
dec
push
xor
fistpll
in
loop
sbb
inc
lods
mov
int
insb
test
stc
lcall
cmc
push
outsl
mov
push
cmp
cmc
add
movsl
stc
in
sti
xchg
es
rorb
inc
in
lret
add
or
aas
les
movsb
and
mov
mov
fisttpll
lds
pop
fstl
scas
lea
in
mov
aad
out
cmp
mov
sub
fsubr
xorb
mov
push
xchg
sub
pop
in
xchg
loope
aad
xor
in
add
or
add
sub
mulb
pop
dec
ja
jmp
jns,pn
xchg
aad
xchg
cmp
xchg
clc
xor
rorl
roll
rorb
mov
xchg
shlb
loop
sbb
mov
fildl
dec
cmpsl
nop
xlat
jnp
fmull
mov
and
mov
xchg
into
mov
roll
dec
push
into
mov
cli
in
xchg
movsb
mov
in
mov
jmp
inc
xor
inc
cmp
es
lods
sbb
and
xchg
mov
pop
mov
repz
test
faddl
in
iret
adc
mov
in
push
push
jl
enter
in
push
cltd
sub
mov
lods
pop
pop
fisttpll
lds
mov
mov
fdivrl
aaa
pop
fsubrl
inc
mov
mov
add
push
sub
xor
cltd
xor
fstp
xor
cltd
fiaddl
fisubs
fucom
mov
cltd
xchg
pushf
movsl
sbb
cli
out
sbb
pop
ds
data16
push
int
nop
loope
and
jnp
or
sti
sub
gs
lahf
push
imul
mov
cmc
into
and
jmp
stos
fisubl
jmp
mov
loope
mov
ror
jmp
lods
adc
adc
pusha
inc
xchg
xor
fnsave
mov
popa
imul
movsb
mov
mov
leave
in
fadd
int3
negb
fmulp
out
popf
testb
popf
cld
fisttpl
daa
inc
push
popf
sub
into
adc
daa
in
mov
mov
fst
fldl
in
and
cmc
cltd
jmp
add
add
movsl
aaa
sub
aas
aam
pop
int
xor
sub
sar
in
loop
pop
popf
insl
jmp
mov
paddusw
adc
cmpsl
inc
or
rcrl
push
pop
js
sbb
push
jmp
sub
into
mov
pop
stc
mov
xlat
mov
mov
push
jnp
fsubrp
dec
in
mov
jge
jg
idivb
stc
stc
aad
test
test
cld
shrl
cld
cmc
mov
std
gs
icebp
aaa
cmp
rol
mov
fisubl
jmp
out
pop
sti
in
test
xor
lret
or
sub
pop
cmc
cmp
inc
push
lcall
pop
sbb
movsl
stos
fsubp
test
sub
std
cmc
cmp
cld
fsubrl
mov
cmc
movsl
out
sbb
fucom
mov
aad
imul
in
in
cmpsb
scas
mov
mov
frndint
fsubr
jl
dec
add
xchg
inc
addr16
fisttpl
sbb
sbb
adc
repz
fnstsw
jecxz
mov
mov
out
fstl
pop
xlat
lret
outsb
out
ds
sub
inc
mov
imul
das
cmp
cmc
push
repnz
dec
int
std
movsb
out
add
push
xor
adc
mov
xor
cmp
int3
xchg
cmp
jecxz
imul
adc
out
sub
ss
es
imul
add
jbe
ljmp
jecxz
ss
pop
jle
aad
pavgw
ja
and
sub
stc
fs
sahf
xlat
push
mov
jl
andl
ret
fstp
lds
lods
pop
cmp
push
pop
cmp
dec
and
nop
in
pusha
xchg
lods
fmulp
out
int
mov
jo
aaa
jmp
out
xor
adc
leave
mov
pop
push
pop
mov
push
cltd
fucom
mov
push
lcall
ja
filds
in
pop
ds
repz
cmp
mov
mov
js
cmc
pop
xchg
fistps
outsb
push
jmp
aad
inc
imul
fnstsw
push
addr16
pop
insl
lea
call
push
lret
ret
lea
pop
rcll
call
xor
fs
rclb
mov
jmp
imul
test
call
lret
test
pop
popf
and
xchg
add
test
dec
gs
jno
frstor
popf
xchg
repz
lock
cld
fs
mov
mov
repz
jo
xlat
rcl
jl
filds
call
iret
aaa
call
iret
sub
lahf
mov
lret
and
icebp
jnp
pop
loop
out
out
in
icebp
jg
in
inc
pop
push
sti
jecxz
jmp
out
loope
test
push
in
ret
mov
and
sub
repz
iret
movsl
jecxz
leave
fldt
les
std
pop
repnz
adc
ret
bnd
ret
test
push
mov
xchg
fs
sub
adc
push
jle
push
scas
sbbl
jl
ret
mov
add
in
movsb
shrl
push
loop
mov
xchg
xor
dec
jg
push
cmc
out
mov
dec
mov
pop
jg
dec
mov
cltd
sub
test
loopne
jno
addr16
in
loop
out
add
cmpsl
rcll
push
insl
mov
lret
lret
pop
pop
or
xor
mov
int
adc
shll
das
xchg
popa
idivl
test
stos
ret
jp
pop
or
int
pop
jmp
jmp
in
pop
jmp
mov
mov
test
insl
out
inc
mov
jecxz
mov
stos
repz
jb
mov
mov
mov
adc
mov
test
xchg
inc
xor
mov
push
xchg
das
adc
lds
pop
pop
cmpsl
mov
mov
cmp
jno
bound
pop
std
mov
fstl
pushf
or
sub
jmp
mov
testb
int3
jnp
mov
sub
test
mov
in
push
cmc
std
fs
fxch
xchg
jecxz
xchg
mov
into
inc
pop
scas
std
fcomp
push
fisubrl
sub
in
push
fsubp
out
addr16
out
pop
pop
mov
in
test
loopne
add
pop
in
shll
int
in
data16
pop
jns
iret
aad
push
out
xchg
fs
int
cwtl
ljmp
das
mov
test
xlat
push
fstpl
jecxz
fpatan
jmp
jmp
in
iret
sbb
loopne
aam
lock
and
in
enter
insl
iret
cmc
inc
or
sbb
mov
out
pop
loope
fstpl
in
push
mov
sub
mov
sar
fnstsw
jno
stos
adc
and
test
jg
int3
loopne
fldcw
mov
cltd
mov
jns
lds
in
lock
stos
fnstcw
inc
pop
pop
fisttps
dec
mov
adc
jg
push
int
cld
subb
fucom
push
lock
imul
pop
push
lods
loopne
or
imul
xor
sbb
loope
cmp
dec
dec
pop
in
xor
imul
fs
jne
mov
adc
ljmp
fcoml
test
mov
pop
sub
mov
jb
mov
pop
jecxz
and
mov
sbb
mov
add
dec
dec
inc
push
jbe
cld
push
call
dec
fiadds
pop
add
ds
filds
outsl
mov
in
int3
mov
dec
nop
sub
call
sbb
ja
mov
test
jmp
add
xchg
mov
aad
test
sahf
jmp
push
jecxz
fwait
sbb
lret
imul
mov
loopne
and
and
adcl
lret
in
and
push
mov
jmp
fbld
push
sarl
jecxz
sub
cmc
ror
push
xlat
cmc
lcall
or
ret
loop
add
gs
test
xchg
fbstp
addr16
or
lret
jmp
sub
aam
setge
dec
or
mov
xor
pop
push
jl
sarl
inc
fs
negl
icebp
rcr
and
pop
aad
sub
mov
out
mov
mov
imul
call
lods
xchg
fldl
rorl
fs
sti
leave
pop
pop
or
in
xchg
in
jns
loopne
lahf
mov
das
aaa
xor
std
aad
mov
dec
shll
and
arpl
pop
std
clc
std
loopne
aaa
out
in
leave
pop
ja
fcmovne
in
jecxz
jne
inc
ss
leave
pop
call
icebp
arpl
xor
push
dec
mov
pop
fidivrs
jmp
sti
push
xor
jmp
jl
mov
and
out
aad
add
mov
xchg
mov
inc
and
pop
test
std
rep
cmp
cmc
inc
mov
sub
cld
cmp
jbe
shld
sbb
clc
out
ds
dec
adc
dec
repz
fsubrp
push
jg
aaa
xchg
mov
sub
stc
fstl
pop
fstl
out
xor
insb
ret
jl
div
inc
mov
sbb
push
pop
add
ds
pop
jnp
and
fwait
adc
movsb
lahf
shlb
push
jmp
mov
fwait
pop
jecxz
cmc
roll
in
in
mov
cmp
ja
gs
jg
orl
sbb
mov
aas
jns
iret
mov
mov
jmp
dec
pop
or
in
cmp
test
test
mov
fstl
add
data16
mov
nop
gs
or
pop
std
inc
lea
out
leave
fidivrs
test
cli
loope
sub
jae
adc
sub
lret
rcrl
adc
sti
push
aam
into
pop
push
rcrl
push
std
mov
sbb
mov
dec
lret
stos
dec
jecxz
fnstsw
sbb
out
inc
jmp
loop
push
aam
in
sarb
lods
xorl
loope
je
jbe
xchg
inc
ror
pushf
mov
dec
divb
popa
jecxz
inc
dec
add
xchg
loope
inc
repnz
or
xor
push
in
mov
sbb
and
rol
cmpsb
mov
xchg
and
fucom
mov
mov
cltd
jge
das
shl
iret
push
pop
xchg
pop
and
fstps
std
pushf
aad
ljmp
dec
xchg
add
xchg
lea
pop
std
mov
orb
jns
lods
std
adc
sbb
out
fs
mov
jno
mov
outsb
cmp
lods
insl
and
clc
ss
stc
mov
mov
stc
jecxz
push
lret
sbb
fnstsw
pop
in
sahf
pushf
lods
jmp
stos
jns
jge
out
into
cmpsb
jecxz
enter
movsb
xchg
js
inc
inc
mov
out
pop
lds
pop
pop
loop
xor
mull
push
fucomip
mov
sbb
dec
add
jecxz
jg
or
jno
fst
jbe
je
sbb
jne
sbb
filds
jbe
pop
xchg
push
stc
pop
fistpll
jnp
fimuls
lret
imul
xor
test
aad
pop
cltd
in
push
test
lds
in
gs
push
into
jbe
sub
or
sbb
push
mov
call
sbb
in
fldl2t
mov
ljmp
loopw
cmp
add
or
jae
jecxz
push
and
std
fnstenv
jmp
leave
adc
sub
sbb
daa
gs
ffreep
pop
and
jmp
fs
sbb
rorl
mov
ss
lret
pop
aam
inc
mov
test
sbb
movb
test
mov
add
andb
loop
daa
xlat
or
xchg
fldl
roll
pop
gs
in
popf
in
test
jbe
and
and
std
inc
jge
push
pop
in
mov
add
sar
push
xor
movntq
outsl
nop
popf
sbb
jnp
shll
in
xchg
mov
out
cmc
movsl
push
shrl
add
out
cmp
fadds
jge
imul
test
imul
fucomip
xchg
rorl
out
mov
arpl
out
jns
sbb
sbb
filds
xchg
push
jmp
add
mov
adc
xchg
repz
adc
xor
push
and
icebp
incl
add
outsl
pop
mov
arpl
imull
dec
in
fstpl
scas
sti
cmp
adc
xchg
addr16
jg
ret
leave
add
push
lds
adc
or
push
jae
aam
fdivrp
xlat
rorb
adc
cmp
pushf
idivl
scas
aas
add
fistpll
stc
or
cld
ss
cmc
or
pop
test
rcrb
adc
test
iret
push
xchg
inc
xchg
loope
out
movsb
sahf
int3
pop
cmpsb
add
mov
shrd
cmp
add
adc
ret
adc
fcmovnu
fcmovne
in
fistpll
sub
ret
loope
inc
out
jbe
pushf
pop
cmp
scas
divb
lret
sarb
sbb
add
leave
aam
xor
pop
iret
loop
xor
jns
add
pop
mov
sub
lods
leave
mov
lds
adc
jecxz
push
andb
dec
imul
ss
adcl
pop
leave
sbb
into
mov
shrl
xchg
push
inc
cmpsb
ss
rcll
xchg
jmp
lock
xlat
cmc
add
ja
loop
lock
mov
and
outsl
ja
jnp
flds
lods
cli
cmpsb
mov
xor
test
jo
lcall
adc
adc
mov
jmp
imul
scas
int3
mov
loopne
cmpsb
jbe
scas
lods
popf
lds
jmp
jecxz
sub
or
pop
cmpsb
out
std
ljmp
jecxz
xor
add
sti
add
jmp
inc
loop
orb
mov
mov
jbe
or
jecxz
aaa
sbb
pop
shl
arpl
inc
dec
adc
mov
jecxz
or
int
mov
incl
lret
add
iret
mov
mov
int
xor
sbb
adc
pushf
fidivs
incb
aad
mov
push
adc
int
test
iret
jle
xchg
sub
out
test
push
mov
in
and
cmpsb
mov
fildll
cmp
jnp
iret
xchg
test
flds
adc
test
jle
mov
mov
adc
pop
mov
test
popa
fmulp
cmpl
push
xor
mov
cmp
and
cmp
fisubs
stc
es
out
pop
jg
push
mov
dec
jmp
dec
jecxz
and
xor
xchg
and
sub
test
jecxz
in
mov
pop
mov
test
push
std
dec
stos
add
push
sbb
push
int3
lret
or
cld
mov
xchg
jns
inc
mov
xchg
in
rcr
add
sbb
out
sti
lahf
leave
push
or
mov
and
sahf
out
std
mov
sbb
scas
lahf
stc
fwait
xchg
imul
xchg
filds
movsl
test
cmp
adc
cmp
fcom
into
out
lahf
not
and
sub
mov
push
mov
rcrb
loop
xchg
fists
mov
loope
out
pop
xor
pusha
sti
fnsave
adc
test
repz
lahf
mov
test
std
mov
mov
repnz
add
jge
jns
jle
cltd
dec
add
leave
aad
aam
pop
test
insb
inc
xlat
cltd
scas
das
jmp
cmp
push
mov
jg
mov
dec
nop
js
mov
add
lahf
fdivs
dec
int3
mov
outsl
sbb
les
mov
shrl
movsl
cmc
cmpsl
push
dec
fldt
jp
push
out
rclb
push
aaa
or
repz
outsl
jmp
sti
or
out
in
dec
add
sbb
sub
cltd
aam
add
pop
lret
pop
in
fnstsw
daa
lods
int3
cmp
xchg
xchg
lods
inc
test
fnstenv
mov
shl
iret
and
test
fcmovu
jge
push
cli
in
outsl
add
imul
sti
adc
lcall
or
rorl
mov
inc
cmp
std
mov
mov
sub
out
outsl
in
imul
movsb
out
jecxz
in
jns
cwtl
jns
pop
mov
pop
add
jl
push
jl
and
out
in
push
iret
out
lfs
popa
mov
scas
cmp
pushf
sti
test
out
arpl
fstpl
aam
fstl
fstps
stos
mov
jg
pop
ffree
fcmovnbe
cli
lahf
or
pop
lret
test
out
divl
sahf
mov
jne
aad
std
cmp
mov
dec
sar
mov
dec
jg
ret
shr
cmp
mov
rol
mov
sti
into
lahf
leave
pop
mov
repnz
jecxz
jg
imul
or
cmpsl
std
imul
xchg
sbb
cmc
sbb
jge
fsts
pushf
popf
lret
jecxz
add
shl
sub
push
jmp
mov
stos
andl
lods
cld
sub
lahf
int
in
jmp
inc
stc
mov
add
divb
adcl
shlb
xor
jge
xorb
xor
das
lock
fadds
inc
fimull
lds
test
mov
aam
in
lcall
jne
mov
sub
jle
cmp
jno
sub
xor
imul
mov
mov
pop
movsl
inc
adc
xor
xor
insl
loopne
and
xor
or
in
call
or
add
inc
cmp
cmpsl
subl
xchg
cmp
push
rcrl
pushl
rcrb
sbb
js
add
in
xor
xchg
sbb
fsubrl
scas
jbe
push
mov
int3
int
sbb
jno
xchg
add
mov
xchg
mov
xor
inc
sub
jg
push
lsl
jg
mov
mov
rol
stos
fsubrp
jmp
cmpsl
jns
sub
pop
pop
aam
ss
shrl
sub
subb
stc
sti
mov
std
out
leave
cmovbe
pop
lds
test
inc
lea
iret
inc
rdtsc
lods
jnp
mov
stos
push
mov
sub
loopne
test
cltd
shlb
fisttpl
jo
in
dec
out
aam
mov
movsl
sbb
jmp
lahf
cmpsb
cltd
cmp
call
mov
shll
add
fucompp
mov
in
cmc
testb
jo
or
add
push
in
ljmp
pop
mov
sti
imul
loopne
lods
popf
inc
pop
cmc
mov
fstp
sti
mov
and
or
xchg
in
sub
jecxz
push
sti
inc
aad
loop
insl
add
shll
call
out
mov
out
push
in
in
mov
int3
pop
fs
jne
or
jmp
movsl
fxch
jns
int
sti
loope
adc
pop
ror
pop
sti
in
int
add
test
gs
rcr
mov
imul
xlat
sti
lods
test
mov
aad
mov
and
dec
popf
popa
pop
xchg
sti
int3
sub
std
cli
sti
push
test
insl
pop
add
pop
mov
dec
sti
popf
jmp
fnstsw
std
sti
push
aad
add
mov
pop
pop
lret
sub
jne
or
fstpl
xor
xor
out
mov
std
in
cmc
inc
fxam
jl
repnz
aad
int3
fnstenv
lea
cwtl
in
add
pop
not
pop
cld
icebp
lds
jmp
pop
popf
int
jge
fcoml
sbb
in
insl
fs
jmp
stos
inc
out
rorl
jo
xor
sbb
aaa
jnp
arpl
int
add
fmuls
and
add
jns
ret
fcoml
leave
adcl
and
leave
push
jb
cmpsb
sbb
add
ret
lahf
sbb
mov
sahf
in
aad
jmp
movsl
pop
leave
jnp
rorb
pop
inc
stos
add
jmp
loope
out
sbb
cmc
and
fucomi
leave
int3
pusha
leave
gs
jge
mov
cmpsl
andl
xor
rcll
iret
push
adc
leave
xor
stc
in
leave
popf
add
mulb
leave
mov
mov
jne
fucom
fmul
dec
sbb
mov
leave
add
fst
jecxz
int3
or
test
fwait
jge
dec
add
add
pushf
out
or
dec
leave
cwtl
pop
ffree
and
mov
or
pop
rorl
loop
pop
and
mov
add
aad
pop
mov
call
push
mov
popa
mov
jge
mov
int3
pop
sbb
leave
aaa
pop
call
xlat
inc
push
sbb
arpl
xchg
leave
push
xor
mov
mov
jle
in
jno
addr16
xor
std
pop
inc
jecxz
sbb
pop
sar
gs
fcmovnbe
and
pop
rorb
cmp
iret
or
dec
add
addr16
add
jmp
cmp
lds
out
pop
jle
nop
add
loop
into
into
aad
sbb
sub
mov
or
imul
int
mov
fs
mov
icebp
mov
and
jne
sub
leave
jge
dec
stc
pop
jle
sub
daa
lods
sti
adc
cmc
jecxz
mov
leave
pop
out
test
mov
fisttpll
add
iret
jl
icebp
in
mov
jmp
je
add
sbb
aad
stc
arpl
leave
test
in
sbb
in
stc
mov
leave
sti
sub
dec
test
dec
flds
sbb
pop
cmp
push
sbb
in
stc
cmc
sbbb
je
fsubrp
sbb
popf
jne
sub
sbb
leave
pop
pop
sbb
mov
sbb
fstp
sub
xchg
aad
ror
jae
lahf
fstpl
leave
cli
int
mov
and
sbb
cmp
iret
in
push
imul
add
mov
std
fwait
leave
xor
sahf
cltd
sti
jne
data16
inc
or
test
dec
leave
test
inc
lret
addb
add
hlt
mov
ljmp
fisubl
or
push
pusha
es
dec
jmp
mov
out
fs
fidivrl
mov
push
and
cld
dec
lea
movsl
mov
jno
mov
dec
xchg
movsl
inc
fs
add
or
xchg
cli
xchg
int
sbbb
jle
inc
in
mov
mov
leave
aad
add
jecxz
sub
push
cli
xchg
pop
shr
sub
sbb
test
lods
inc
aad
leave
lds
gs
mov
mov
gs
stc
leave
sbb
lock
gs
pusha
add
jge
xchg
test
pop
mov
push
lahf
and
in
jmp
jne
leave
cmp
subb
add
mov
xchg
int3
or
cmp
test
cltd
ret
and
jmp
pop
adc
movsl
add
jb
fst
fisubrs
adc
negb
cmc
repnz
cmp
mov
icebp
lret
mov
fwait
call
popa
add
leave
dec
and
in
mov
or
dec
enter
jmp
lea
pop
and
test
rcr
sub
rcl
push
aad
lds
jne
jle
inc
in
adc
and
mov
pop
leave
sahf
std
jmp
int3
fisubl
jge
adc
dec
jg
sahf
xchg
sti
stc
mov
jmp
sub
sbb
movsl
or
cwtl
cld
pop
ljmp
sbb
test
mov
lea
imul
adc
sti
mov
into
or
aad
mov
lea
lock
lret
lea
inc
sub
leave
lds
inc
aad
out
mov
pop
sbb
fsubs
or
stc
mov
xchg
mov
out
inc
lret
pusha
fsubr
mov
jmp
jb
flds
sbb
repz
xchg
jmp
mov
cwtl
loopne
pusha
in
negl
and
inc
hlt
push
and
inc
and
leave
adc
dec
imul
adc
jmp
arpl
icebp
jae
jno
dec
sub
add
leave
dec
mov
fxch
push
sbb
leave
xor
pop
mov
int3
jnp
rorb
push
dec
icebp
popf
in
jae
cmp
clc
pop
mov
in
clc
pusha
dec
insl
inc
mov
movsl
std
bound
es
pop
or
pusha
dec
and
leave
test
or
xor
jne
mov
cmp
andb
in
jge
cmp
mov
xchg
inc
fstp
sub
mov
inc
in
fldl
jle
mov
in
shl
cmpsb
leave
cmp
fwait
mov
cmc
fnstcw
lock
leave
popa
fs
cmpsb
sbb
ja
xchg
cli
sbb
sbb
movsl
stos
xchg
push
pop
cmp
push
leave
popf
add
and
adc
pop
mov
sub
lret
bound
ror
rcrl
pop
jle
nop
add
adc
gs
lret
leave
mov
pop
cld
cltd
popf
sahf
adc
insl
mov
lret
fisubs
sti
pop
inc
jecxz
popf
pop
orl
hlt
jno
int3
pop
sbb
mov
or
xor
sub
fs
jecxz
mov
cmp
leave
sbb
addr16
gs
in
jae
int3
fstp
pop
xchg
dec
inc
popf
dec
jae
jno
adc
ja
aad
arpl
dec
sbb
and
jp
pop
pop
jb
adc
lds
inc
mov
fimuls
stc
cmp
popf
ds
cmpsl
jmp
in
fistpll
lret
movsl
fisubs
test
leave
leave
sti
xchg
out
cld
test
cmpsb
pushf
or
loope
ja
ficoms
cmpsb
sbb
add
loopne
dec
add
add
icebp
dec
adc
cwtl
cld
leave
and
cmp
dec
fmulp
sub
and
leave
aad
add
loop
sub
cli
test
in
jge
and
fwait
sbb
mov
sbb
std
leave
xor
gs
sbb
loopne
popf
addr16
rcrl
adc
inc
ror
jle
dec
nop
pop
xor
leave
cs
push
add
inc
int
aad
into
mov
cli
mov
inc
loop
lods
xor
add
inc
std
fstl
gs
cs
test
sbb
dec
aad
cmc
add
jne
in
mov
imul
ffree
aad
xchg
jne
cmp
fstl
sub
sti
jno
insb
or
sbb
bound
lds
mov
xor
cmp
cmp
and
and
mov
add
in
adc
int
and
stc
pop
mov
cwtl
icebp
lret
xor
popa
test
mov
cmp
cmpsb
data16
or
xchg
pop
stc
adc
pusha
and
push
leave
xchg
dec
int3
xchg
and
rclb
call
mov
cld
adc
mov
xchg
icebp
sahf
lods
out
mov
pop
in
nop
in
in
fistl
pop
mov
in
push
test
pop
and
mov
jb
sub
push
add
mov
imul
mov
insl
cmpsb
leave
inc
cld
in
rcl
ror
leave
xchg
aad
add
leave
dec
and
out
dec
arpl
jnp
fcmovnu
fcmovne
shrb
mov
dec
dec
mov
mov
in
sarl
push
into
pop
gs
in
cmp
repz
imul
fisttpl
inc
jge
push
fscale
leave
adc
inc
mov
mov
int
cmp
dec
incl
sbb
adc
add
leave
push
inc
dec
cmp
fs
cltd
and
mov
enter
cmp
add
aam
loope
inc
cmp
jge
mov
fadds
test
leave
movsb
mov
jno
sahf
imul
inc
icebp
mov
xlat
sbb
arpl
movsl
sbbb
in
pop
xor
rcrl
mov
nop
iret
jecxz
cld
sbb
adc
mov
rcll
test
into
mov
and
jmp
stc
pop
dec
add
dec
imul
fst
push
mov
inc
mov
mov
lods
sti
popf
push
jo
jge
roll
mov
sbb
fsubs
int3
xchg
sbb
in
or
popf
ljmp
negb
testl
adc
insl
pushf
mov
mov
shl
icebp
push
movsl
and
xchg
aad
adc
aad
sbb
daa
add
lret
in
fildll
loope
adc
loope
mov
test
pop
rcl
int3
test
jl
mov
fdivl
imull
into
andl
xchg
int
leave
dec
push
sbb
icebp
fcoml
cli
jo
mov
or
int3
insb
ret
icebp
inc
std
stos
out
mov
cli
sbb
cmp
fcmovne
sbb
dec
imul
push
mov
cmp
mov
frstor
leave
sub
xor
push
jge
mov
lret
and
cli
inc
loopne
shlb
loope
int
cmc
fistps
xor
add
pop
fstp
sub
mov
xchg
push
sub
int
and
sub
rorb
imul
popf
dec
sub
sahf
dec
and
negl
scas
lds
mov
cmc
add
sahf
cli
cmp
cltd
loop
cmp
cli
insl
dec
dec
sub
ror
inc
dec
mov
aas
xor
add
pop
popf
call
arpl
or
in
fstpt
arpl
popf
inc
loope
jg
sahf
xor
and
into
dec
aad
mov
dec
push
cmpsb
or
outsl
int
jmp
scas
mov
mov
outsl
int
adc
fs
clc
add
int
pop
sti
inc
mov
mov
ror
int
mov
sahf
jle
or
mov
testl
test
in
fsincos
sbb
dec
test
aad
loopne
xlat
aad
rorb
std
cld
xchg
int
loope
lret
sti
imull
gs
pushf
push
fwait
test
push
insb
int
jge
dec
popf
imul
push
test
sti
sbb
in
int
test
lods
cmc
fisubrl
insl
aad
fnstsw
pusha
xlat
shl
xchg
push
adc
sbb
mov
fs
sarl
and
bound
ret
jge
pushf
int
cmp
fwait
cmp
lcall
test
cmp
imul
leave
cmp
mov
pop
xchg
fmul
and
mov
rcrl
arpl
inc
push
mov
popf
popf
xchg
sub
leave
mov
cmpsl
cmp
aad
adc
cmpsb
int
mov
sub
and
adc
andl
push
in
gs
popa
test
xchg
sti
pop
aad
cltd
int
sub
int
and
outsl
int
push
in
mov
dec
pop
jae
mulb
cltd
aaa
psubsw
sti
mov
insl
fs
lret
cli
testl
mov
mov
sti
movsl
sahf
jmp
popf
jmp
adc
lret
sub
cmp
lret
cmp
mov
leave
mov
sub
mov
push
mov
adc
lret
in
faddl
sbb
add
popf
add
int
mov
jg
sbb
adc
popa
push
mov
ret
jmp
mov
orl
sbb
int
roll
jmp
leave
outsl
int
lret
gs
mov
and
xchg
sti
add
mov
sbb
fcoml
movsl
mov
in
jb
jge
add
pop
rcr
int
nop
add
mov
bswap
sbb
data16
fmull
fcmovnu
sbb
fisubs
lods
mov
mov
aad
popa
fnstsw
in
add
in
lds
int3
mov
mov
imul
in
push
out
adc
pop
fldenv
and
movsl
flds
rcrb
in
loope
mov
fstpl
into
lods
add
aad
pop
aam
cmc
jp
mov
xlat
jns
cli
cmc
sbb
aad
and
lods
xchg
sahf
sti
imul
or
lret
xlat
mov
mov
cmp
call
in
cmp
stc
cmc
cli
jmp
in
sahf
add
add
mov
jl
icebp
mov
clc
dec
mov
rcl
sub
jp
imul
sahf
jmp
rcll
mov
test
add
rorl
in
shl
shl
pop
shrl
call
out
mov
mov
ror
ror
pop
fldcw
rcl
lcall
cld
aam
shl
lods
rolb
fmuls
movsb
xlat
fstpl
aad
lcall
mov
rolb
sar
pop
gs
sub
xlat
lcall
cld
icebp
dec
or
pop
pop
pop
push
sub
and
add
cld
stc
cmp
xor
mov
jmp
pop
inc
mov
fwait
les
jnp
dec
mov
aad
hlt
aad
not
int
mov
sti
movsb
lcall
popf
shlb
dec
inc
adc
vunpcklps
pop
mov
and
aad
push
dec
pop
int
gs
fs
mov
push
add
test
xchg
push
int3
rcll
sti
aad
add
cmp
cltd
jns
icebp
mov
fs
fldl
in
aam
insb
mov
orl
xchg
cld
aam
pop
xor
lcall
push
aam
jno
int
xchg
pushf
cmp
dec
test
mov
pop
aam
adc
push
add
xor
pop
mov
shlb
roll
adc
pop
insl
pop
inc
add
xor
cld
mov
jl
xor
in
add
dec
fldenv
fildl
mov
jl
movsl
gs
adc
jge
xchg
sub
and
divl
pop
movsb
jmp
and
xor
hlt
mov
in
les
hlt
gs
fs
pop
hlt
pop
shl
inc
cld
call
push
in
cmc
aam
lret
in
out
hlt
push
add
test
lcall
in
shl
vpsubsb
mov
fwait
test
xchg
test
stc
jle
mov
fcmovbe
stos
mov
dec
aam
stc
lcall
cmc
mov
cli
sub
fdivr
cmpsl
mov
fldln2
pop
lds
adc
dec
push
mov
pop
loop
in
add
sbb
cld
cmp
in
in
xor
xor
jmp
pop
lcall
in
scas
mull
stc
pop
cli
lods
pop
jae
fldt
orl
mov
and
cmpsb
stos
rclb
dec
jp
sti
pop
cmp
or
test
jmp
adc
lds
fcomi
add
loopne
dec
lock
lods
loopne
jl
jg
rcll
pop
mov
inc
fsub
in
lahf
push
mov
sbb
filds
cltd
mov
xchg
pop
leave
popf
mov
movsb
data16
hlt
cmpsb
pop
rcr
mov
outsl
testl
and
jo
cmc
rol
mov
jnp
dec
cmc
in
shrb
movsb
mov
insb
stc
or
int
cmp
lret
aas
rorb
add
loopne
rorb
xchg
and
xchg
dec
lret
and
lds
or
or
xor
xor
in
sahf
jno
outsb
frstor
jae
dec
cmp
loopne
or
xor
mov
inc
int
fldln2
es
or
ja
arpl
cmc
adc
add
mov
loope
cmp
imul
out
xor
sbb
in
jmp
jmp
mov
push
sub
pop
sar
mov
sub
jbe
insl
fdivrp
add
cwtl
lret
in
mov
std
mov
mov
adc
jg
cmp
vpsrlw
insb
mov
std
stc
test
sbb
and
popf
int
fscale
pop
cli
into
insb
mov
int
add
sbb
mov
popf
push
cltd
add
outsb
into
mov
ds
mov
clc
add
in
pusha
rcrb
xor
add
add
jno
xchg
add
nop
int
rcrl
pop
int3
rol
and
mov
cmp
movsb
movsl
jne
pop
sbb
add
std
add
and
insl
es
adc
test
cmp
jo
sbb
sbb
in
movsb
or
adc
inc
repnz
into
pop
lret
pop
cltd
scas
or
cld
mov
cmc
outsl
fistpll
xchg
test
jns
push
inc
fwait
xor
xor
mov
clc
movsl
dec
xor
sub
loope
fld
add
dec
int
fprem1
add
jno
arpl
iret
xchg
in
lcall
mov
loop
iret
pop
cmc
sub
add
jge
into
test
not
sahf
lds
aad
mov
sbb
xchg
vhaddpd
into
stos
std
imul
int
xchg
jg
adc
or
cltd
add
jmp
pop
aam
xchg
incl
inc
mov
movsl
aas
std
add
xchg
lret
sbb
nop
xor
pop
add
shll
fcomi
fwait
and
gs
mov
sub
or
cmp
rorl
std
pushf
stos
test
pop
inc
lds
push
add
jnp
nop
aaa
add
into
insb
push
das
fyl2x
dec
inc
repnz
ljmp
testl
cmpsl
or
jmp
add
in
sub
push
in
jne
enter
and
jns
jne
jecxz
in
push
and
xor
in
push
int3
test
pop
int
sub
cmpsl
std
fstps
xlat
sti
dec
pop
jmp
arpl
mov
out
pop
leave
into
arpl
icebp
testb
std
icebp
inc
nop
sub
ffreep
xchg
pop
xchg
std
xorb
into
sbb
add
inc
add
mov
and
ret
test
stc
in
aam
jmp
popf
sarb
xchg
cmc
std
into
leave
mov
je
dec
add
in
daa
fprem
in
dec
hlt
popa
stc
lds
rcl
xchg
sti
stc
pusha
bnd
mov
add
std
cmp
cmpsl
shlb
inc
cmp
stc
cmpsl
sbb
mov
loopne
pushf
div
into
mov
inc
pop
jg
fmulp
push
movsb
cmp
in
jns
sub
insl
sub
cmp
mov
into
jae
scas
cmp
mov
mov
mov
sub
in
mov
xchg
leave
lea
jno
std
mov
lahf
leave
imul
jge
nop
adc
jno
jge
pusha
loope
adc
arpl
fldt
pushf
cmp
ret
mov
stos
andl
or
fs
lea
mov
or
aad
jo
lcall
scas
stos
push
or
or
push
inc
rolb
xchg
loopne
dec
movsb
ss
cmc
icebp
mov
std
adc
rorb
stos
mov
add
or
dec
into
sub
std
movsl
jne
mov
dec
cmc
fwait
add
shll
lret
ds
std
nop
fcom
dec
je
fldenv
add
icebp
add
pop
test
mov
add
mov
ret
std
ljmp
mov
flds
push
sarb
cmp
stos
lahf
insl
pop
and
fstps
loopne
pop
or
lds
cmpsl
or
filds
mov
add
movsb
cmc
pop
xchg
int3
cmp
mov
out
xchg
inc
ds
leave
mov
xchg
test
movsl
inc
loopne
mov
popf
mov
lock
scas
xchg
jl
sbb
and
lds
sbb
xchg
push
mov
stos
pusha
xchg
fildl
movsb
cmp
mov
and
pushf
stos
stos
test
ror
jne
scas
mov
fwait
andl
jmp
fcmovu
cs
pushf
leave
pop
test
cmp
test
mov
mov
inc
scas
lods
push
and
push
fldenv
insb
mov
cmp
jne
sub
lods
lret
pushf
xchg
cmpsl
pop
cmc
mov
jns
and
mov
notl
fcompl
add
aaa
mov
rcr
scas
rcrl
push
jb
std
cmp
sti
shlb
ret
in
add
xor
ror
int
add
cmc
sub
scas
sbb
leave
sub
mov
rcrl
std
in
push
lret
jecxz
enter
call
or
in
dec
hlt
mov
leave
loopne
add
cmpsl
mov
push
cmp
jg
inc
fsts
jno
lea
cli
mov
insb
pop
in
mov
popf
sbb
fcoml
icebp
xor
leave
adc
pushf
jmp
pop
mov
stc
ja
jl
gs
in
push
in
pop
xor
fst
out
lock
mov
stos
dec
popf
xchg
dec
in
movsl
dec
lahf
lea
lods
mov
loope
gs
call
mov
fldcw
ja
lahf
outsl
mov
jp
jmp
std
ljmp
aad
dec
or
fnstenv
cld
std
popf
xchg
xor
add
jno
subb
add
stos
imul
lds
mov
rcl
mov
mov
add
push
sub
mov
or
jno
cmpsb
or
popa
sub
mov
popf
sarl
int
faddl
mov
mov
arpl
loope
pop
lret
add
adc
lods
push
jnp
xor
leave
mov
dec
aad
pusha
dec
jbe
mov
mov
les
js
test
in
callw
loop
push
test
and
dec
pop
mov
jns
mov
mov
icebp
lods
cmc
out
in
aaa
lcall
std
sub
fnstcw
and
fwait
loop
test
movsb
fstpt
xor
jnp
add
rorl
push
icebp
add
lcall
in
sahf
add
add
mov
jne
addr16
mov
jns
in
hlt
test
std
aas
repz
jmp
aad
or
imul
lret
mov
pop
mov
fwait
sbb
push
xchg
fs
dec
mov
aad
xchg
clc
mov
iret
add
scas
mov
mov
xor
add
out
call
dec
jmp
test
es
mov
cmc
mov
add
mov
stos
shl
mov
shrb
xor
pop
and
testb
ss
or
push
data16
aad
or
add
mov
popa
mov
jecxz
enter
mov
inc
std
cmp
mov
jp
xlat
and
fwait
jns
pop
cmc
nop
add
sahf
ret
fldcw
jno
cmp
cmc
add
clc
add
pop
sub
fwait
aaa
fs
insl
or
mov
or
out
test
jg
xchg
addr16
pop
fwait
aad
jns
fxch
add
lods
fadd
lds
xchg
mov
call
and
mov
stos
les
cmpsb
mov
test
mov
imul
cmp
fwait
mov
xor
inc
pushf
aad
int3
stos
add
push
sti
mov
jg
nop
xchg
cmp
mov
leave
fwait
test
cmpsl
dec
cmp
add
das
enter
repz
dec
fs
fcompl
or
lods
cmp
mov
cmp
cmpsb
cmc
outsl
stc
pop
pop
aad
out
aam
jb
movsl
inc
pop
fs
outsl
jp
xlat
mov
fstl
lret
add
mov
mov
test
ret
enter
jmp
mov
pop
mov
xchg
movsb
cwtl
out
sbb
jg
pop
cmp
xor
cmp
mov
or
aad
push
gs
add
fwait
mov
mov
adc
inc
in
imul
fcom
int3
xchg
xchg
lret
add
notb
or
xchg
fwait
rclb
adc
arpl
fs
mov
mov
push
cmp
fildl
add
aas
cld
test
nop
shlb
lret
sub
in
jo
in
xor
jmp
scas
movsb
in
dec
in
jge
int3
xor
rcll
call
movsl
push
dec
cmp
adc
cld
aam
jecxz
sub
enter
loopne
iret
loop
jg
sub
fisttpll
jmp
loope
mov
dec
mov
int
mov
lret
movsb
in
hlt
sahf
shrb
lahf
popa
lahf
loop
push
shlb
fiadds
fs
lods
rorl
dec
add
scas
cmp
cmc
pop
ret
cmc
lea
push
jnp
jns
pop
lods
inc
push
add
mov
add
into
pop
jno
cmp
mov
and
in
add
pop
adc
sar
lds
andb
mov
stc
inc
je
pop
inc
leave
jne
fimull
pop
mov
add
gs
cmpsb
mov
iret
and
rcl
cmp
mov
shlb
call
xorl
mov
int
std
lret
bound
sbb
dec
ror
nop
in
sub
lret
std
je
movsl
jb
mov
test
pushf
push
sbb
aaa
pop
push
std
rol
and
inc
push
loope
cli
push
xchg
std
sbb
mov
mov
jno
jge
rcrl
sbb
test
jb
les
loop
mov
cmp
in
inc
rclb
and
push
lret
mov
add
or
lds
lea
cltd
push
add
aad
fisubl
mov
fucomi
add
outsb
stc
gs
in
cld
aad
fisttpll
xlat
xchg
fucomi
cltd
call
pop
sbb
add
add
mov
lods
int
lcall
add
leave
or
in
xchg
rorl
pop
int
mov
ret
ljmp
push
mov
lcall
hlt
arpl
dec
sbb
fiaddl
rorl
fnstsw
dec
mov
or
fwait
sbb
jnp
add
push
jns
popa
sarb
add
push
xchg
orl
flds
pop
jne
push
dec
or
xlat
mov
in
frstor
mov
aad
cltd
mov
xchg
mov
test
shl
xchg
add
adc
iret
mov
aam
imul
test
mov
jae
and
pop
mov
dec
int
cs
insl
out
fwait
stc
dec
out
rcrb
cmp
icebp
push
ret
out
pop
push
out
fnstcw
xor
popf
mov
lods
adc
or
popf
sbb
cltd
lret
movsl
mov
vpavgb
adc
sbb
dec
cld
lds
adc
aaa
lahf
sbb
mov
fwait
stc
xchg
jo
pushf
out
or
imul
imulb
mov
mov
in
lcall
dec
nop
pop
into
cld
stc
in
call
and
add
mov
jnp
sahf
cltd
jecxz
fmulp
in
pop
pusha
cltd
mov
shr
cltd
mov
cmp
jne
add
jecxz
jb
mov
dec
loop
leave
jns,pt
cld
call
pop
cmp
add
addr16
or
lods
ljmp
arpl
dec
dec
lcall
dec
inc
add
pop
and
lods
das
mov
mov
pushf
pushf
stos
mov
popf
int3
pop
and
push
add
daa
add
sbb
pop
insb
out
xor
in
fsub
in
in
mov
mov
scas
je
and
std
mov
jns
push
add
dec
mov
das
in
imul
mov
or
jmp
push
lock
ds
rcll
xor
por
out
int
and
mov
stos
andl
mov
fs
mov
fnstcw
aam
cmp
movsb
in
int
movsl
movsl
lret
mov
inc
or
xchg
insl
aas
adc
inc
fimull
mov
cmpsb
sub
mov
loope
push
loope
mov
lds
js
add
mov
dec
stc
or
fbstp
and
pushf
icebp
lods
sub
jmp
test
xchg
pusha
clc
cld
imul
mov
cmpsb
imul
icebp
in
incb
in
iret
push
lds
adc
flds
movsb
movsl
xlat
lcall
pop
inc
std
jp
subb
xor
imul
iret
icebp
rcr
cmp
shrb
xchg
mov
std
add
push
xchg
outsl
xchg
mov
hlt
xor
mov
mov
test
scas
jmp
lcall
push
in
test
neg
add
std
fsin
sub
mov
fs
mov
ret
fwait
iret
xchg
adc
inc
xchg
cmc
leave
mov
pop
and
xor
frstor
xor
int
inc
jge
fcoms
gs
cmpsl
orl
add
iret
sti
rorl
xor
popf
mov
std
lds
adc
pop
add
jecxz
adc
popf
sahf
add
iret
pop
xlat
cld
int
mov
xchg
xchg
int
sub
popf
dec
push
ret
movsl
rcr
rcll
add
xchg
cmp
mov
fstps
sar
dec
popf
adcb
das
imul
add
mov
xchg
xor
add
popf
stos
cmp
int
sarb
mov
std
inc
ret
gs
jp
lea
xchg
add
mov
lds
roll
sbb
int
sbb
icebp
mov
arpl
and
stc
lret
fnclex
add
in
leave
stos
paddsb
jns
pushf
xchg
stos
ss
mov
mov
aad
mov
push
lcall
fld
fcomps
add
fmul
mov
fucomip
scas
in
insl
add
dec
fimull
xchg
cli
in
rcll
xchg
push
aad
cmp
add
or
nop
jae
add
adc
xchg
fld
mov
add
and
xor
and
mov
stc
dec
shr
mov
push
add
iret
lods
sti
cld
jge
adc
cmp
dec
stc
or
test
outsb
iret
lods
push
mov
movsb
jp
xchg
pushl
rcr
fwait
mov
add
fs
bound
pop
sar
stc
and
xchg
test
ss
pop
daa
aas
mov
in
push
pusha
push
movsb
in
rorl
push
out
orl
in
add
sbb
rorl
leave
sub
movsb
rorb
aas
jae
mov
popf
rcr
add
aaa
cltd
push
movsb
mov
gs
mov
gs
repz
fsubrp
rcrl
jno
pusha
sub
cmpsb
dec
movsl
xor
cmp
imul
push
fs
xchg
lods
inc
int
inc
movsb
fwait
daa
movsl
popa
leave
lret
ret
xchg
xor
pop
cmc
adc
and
mov
add
jnp
aad
out
dec
into
lods
ja
push
dec
das
popf
mov
leave
in
loopne
in
out
scas
sti
cltd
mov
jge
dec
imul
repz
int
pushf
mov
rcrl
leave
xchg
or
mov
xchg
rorb
jmp
inc
vmovq
jne
cld
add
pop
icebp
imul
lret
mov
jp
cmp
mov
std
pusha
test
fnstcw
cmp
addr16
mov
loope
jae
add
fs
fwait
jecxz
and
cld
adc
mov
push
icebp
add
popa
andb
mov
shrl
je
icebp
mov
sub
leave
iret
outsl
leave
cld
jmp
add
sbb
pop
jmp
stos
mov
xchg
decl
dec
inc
add
out
pusha
fadds
into
adc
lea
mov
fisttps
rorl
sbb
mov
pop
jp
jg
mov
dec
mov
imul
cmp
fwait
gs
sub
jns
xchg
sub
stc
adc
insb
xchg
call
iret
in
pop
mov
mov
jb
dec
pop
adc
mov
lahf
stos
mov
mov
in
int
lret
test
enter
adc
in
popf
mov
call
dec
pop
mov
fcmovbe
xchg
fsubs
imul
popf
cmc
mov
add
das
dec
clc
les
stos
add
push
add
xchg
push
int
cmp
xchg
sub
cmp
stc
sub
dec
xor
push
push
call
xchg
imul
dec
ds
cld
xlat
loop
cmpsl
xchg
ss
dec
icebp
jecxz
cmpsb
jno
scas
cmp
pusha
jb
test
dec
sub
add
add
fs
pop
int
jge
add
rorb
add
lea
add
jnp
aam
lret
xor
fildll
mov
pop
popf
test
mov
jl
fs
sbb
xchg
into
divl
test
pop
aad
dec
sub
movsl
lods
aad
add
fscale
movsl
add
sti
aad
lret
les
pop
xor
and
insl
pop
fldenv
add
dec
test
mov
dec
aad
add
mov
test
daa
mov
add
and
orl
test
push
push
pop
mov
fwait
outsb
jecxz
mov
shl
subb
imul
dec
test
add
rcrl
mov
xchg
fcomi
push
mov
hlt
lods
fcomi
test
cmpsl
repnz
sub
adc
mov
ss
and
and
pop
pop
cmp
add
mov
enter
sub
int
test
xchg
push
decb
dec
cmpsl
loop
imul
fsubr
jbe
jle
mov
aas
push
sti
or
int3
push
rorl
mov
aas
gs
pop
sbb
pop
cmpsl
mov
or
mov
push
push
mov
sar
sbb
add
pop
fdivr
cmp
cmp
jge
xchg
scas
daa
mov
add
fsubs
loopne
subl
pop
mov
xchg
leave
add
stc
flds
mov
rcr
add
scas
aaa
arpl
gs
xor
dec
jno
and
jmp
mov
and
fwait
lret
mov
jns
sub
cmpsb
movsb
lret
std
jns
mov
in
add
test
add
cmp
mov
iret
movsl
hlt
add
sub
xchg
sub
mov
and
jb
add
add
aam
lahf
mov
or
jnp
gs
add
mov
nop
mov
dec
stc
rcrl
xchg
cmc
fscale
je
push
mov
sarb
cld
cmp
lods
addr16
push
imul
cltd
les
dec
mov
cltd
jnp
cmc
lcall
test
in
push
lahf
xchg
dec
xchg
sub
loope
in
add
stos
jb
push
or
add
mov
adc
mov
imul
or
pop
movsl
pusha
mov
imul
xor
xchg
into
or
in
rorl
cld
push
scas
mull
xchg
xor
cli
arpl
rcr
add
fcomip
movsl
js
and
lcall
testl
xchg
into
add
mov
mov
roll
mov
lods
cli
pop
loope
orb
test
add
lds
popf
shl
clc
insl
shr
cmp
push
rcl
xchg
xchg
and
cld
xchg
repnz
or
jmp
cltd
idiv
imul
cmp
jns
mov
cmp
mov
cmp
subl
add
mov
add
lret
adc
sub
mov
adc
cmc
in
dec
cmpsb
mov
jecxz
cmc
add
mov
pop
lahf
mov
or
in
mov
mov
stc
lds
push
xor
mov
inc
outsb
imul
push
lods
int
or
in
fdivr
push
add
sti
sbb
xchg
sarb
xchg
mov
fidivrs
shr
in
pop
mov
idiv
jne
sbb
add
push
sub
mov
mov
sub
or
stc
add
in
pop
loop
mov
aas
dec
mov
sar
in
push
iret
pop
cld
std
jecxz
push
loop
stc
lret
pop
mov
push
int
pop
add
mov
icebp
add
popa
dec
scas
pop
cmc
jns
add
clc
in
or
in
leave
iret
xor
inc
cmc
add
lret
daa
pop
adc
outsl
gs
jmp
iret
std
add
or
jo
cmp
sti
xor
mov
cltd
flds
fs
sub
int3
iret
gs
fs
dec
add
outsb
iret
cld
sbbl
pop
fsubs
loopne
stos
pop
adc
inc
mov
cld
and
mov
fwait
jno
gs
lret
add
dec
aam
pop
add
sub
mov
aam
add
in
gs
int
imul
cwtl
mov
stc
jecxz
inc
hlt
rcr
stc
mov
in
in
and
lea
scas
test
sub
repz
xor
pop
insl
shll
add
movsl
push
cltd
insb
xor
movsl
mov
fstl
filds
dec
gs
inc
movsb
lds
cmp
out
inc
ret
sbb
push
sub
sub
insb
nop
and
dec
mov
fwait
jne
dec
jmp
add
mov
mov
fsts
and
in
lcall
pop
adc
aad
ljmp
mov
mov
xor
popf
sti
xchg
push
cmp
or
lods
popf
incb
sti
test
test
jmp
mov
iret
push
movsl
or
lret
jecxz
shlb
pop
sahf
shlb
test
dec
out
ja
popa
inc
loope
fs
mov
add
pop
push
add
cmpsb
add
cmp
jge
pop
fwait
rol
mov
loope
cld
fxch
iret
rcrl
push
popa
ret
mov
lods
aad
aad
ret
cmp
les
or
int
jge
lods
std
flds
mov
popf
sti
cmp
int
xchg
and
or
dec
jge
mov
add
push
fisubrs
sub
aad
add
push
sub
jno
xchg
pop
int
test
adc
lret
cltd
mov
mov
mov
cmc
int
movsl
ljmp
addb
in
add
stos
mov
cmc
int
mov
jno
or
mov
leave
xchg
int3
inc
in
mov
test
out
lret
inc
inc
test
dec
jns
or
push
flds
xor
stc
pop
mov
add
mov
xor
jo
cmp
inc
pushf
jo
ljmp
fwait
lea
jae
fildl
inc
push
xor
pusha
cmp
xchg
fdiv
and
adc
jnp
popf
test
xor
ljmp
pop
lods
dec
fs
bound
test
roll
jo
or
call
mov
test
xchg
cmp
scas
xchg
popa
jg
popf
jns
or
xchg
fsts
ss
dec
add
sbb
je
lret
push
or
loope
mov
xchg
outsl
mov
cmp
mov
xchg
pop
inc
sub
pushf
out
add
lds
gs
loopne
pusha
mov
shl
lock
xchg
lret
iret
fcmovnu
stc
add
iret
jae
rcrl
xchg
or
sbb
mov
aad
bound
lret
xchg
mov
push
hlt
xor
dec
sub
movsl
aad
sub
ffree
xchg
bound
jecxz
mov
dec
mov
ljmp
stos
popf
int
cltd
hlt
test
inc
add
jbe
stos
das
int
std
idivl
dec
scas
in
hlt
pop
fnsave
pextrw
icebp
mov
inc
movsl
fwait
jge
or
or
push
scas
jge
sub
sti
movsl
repz
movsl
inc
lds
jge
cmp
aad
jno
insb
shl
pushf
lods
sub
test
fmul
jmp
divb
mov
gs
aad
pop
xchg
aad
out
pop
xchg
stos
mov
cmp
leave
fisttpll
punpckhbw
push
mov
cmpsl
popa
pop
sub
mov
imul
mov
pushf
cwtl
insl
or
mov
adc
iret
jno
ret
test
rorb
jge
xchg
fldcw
sti
popf
popa
les
xchg
cmc
or
fmull
rcll
mov
fwait
leave
mov
gs
push
adc
dec
rcr
cmp
jmp
cmc
loop
add
jae
popa
jl
out
jmp
jl
rcrl
imul
ljmp
repnz
mov
je
inc
adc
shll
xlat
mov
or
xchg
push
ja
mov
jne
insb
in
stc
mov
popf
popf
aad
inc
stc
mov
aad
aam
fcmove
pop
outsl
stos
ret
loop
mov
cld
dec
mov
scas
mov
in
int
iret
sbb
repz
fcmovne
adc
pop
jns
and
add
fwait
mov
in
out
pop
std
xor
and
repnz
fwait
ja
mov
cmp
pushf
in
cmp
jbe
test
mov
sub
icebp
ds
int
sub
mov
insb
and
sarl
sub
pop
roll
movsl
call
or
sub
test
loope
pop
and
add
sub
aad
xchg
xchg
lds
nop
jbe
jns
mov
push
inc
lea
mov
jge
sbb
gs
shl
ja
nop
shll
push
add
mov
in
test
jge
test
add
mov
insl
loop
es
mov
or
in
mov
fnstcw
xchg
ror
xchg
lds
insl
lea
clc
push
add
pop
dec
shrl
lods
imull
shlb
jg
nop
mov
inc
rcrb
pop
adc
sub
sbb
jl
les
jp
xchg
sbb
in
sbb
in
lock
cwtl
dec
in
inc
in
jne
sub
add
xchg
mov
jno
int
pop
jl
add
jns
mov
cmc
in
push
adc
hlt
hlt
mov
pop
fmul
icebp
clc
hlt
int
in
int
sbb
mov
mov
stc
inc
lret
jb
stc
sbbl
aad
idivb
lds
mov
arpl
xor
xchg
jmp
pop
add
adc
mov
xor
jl
adc
mov
add
xchg
in
shlb
clc
cli
shlb
int
inc
testb
shrl
fldcw
gs
mov
test
pushf
sti
mov
mov
xchg
jno
in
aam
ss
pop
clc
gs
arpl
lds
mov
sti
test
xor
movsl
fucomp
imul
das
repnz
inc
sbb
loop
dec
std
mov
rorb
cltd
lcall
test
mov
call
and
fstl
je
sti
mov
ror
jecxz
mov
jecxz
add
lcall
or
imul
mov
pop
icebp
jns
add
mov
sbb
mov
icebp
jno
mov
in
xchg
arpl
lahf
mov
pop
in
jns
jbe
mov
mov
push
jge
pusha
popa
negb
adc
dec
sbb
add
outsb
mov
pop
std
cmp
pop
xchg
bound
jne
mov
add
clc
out
fwait
rorl
jne
jmp
stc
mov
icebp
pop
add
imul
fidivrl
xchg
arpl
cmpsl
cld
xorl
test
or
mov
ljmp
push
fwait
pushf
lret
in
rorl
jge
sub
adc
mov
decl
rorb
and
mov
icebp
mov
mov
mov
add
add
faddl
xchg
repnz
cli
fistl
aam
add
mov
bound
cmp
aas
xchg
hlt
jge
mov
out
or
jp
xlat
popf
in
jecxz
hlt
sub
popf
pop
jl
dec
not
sbb
stc
sub
fnstenv
cld
jge
ret
ret
mov
out
clc
cmc
sarl
gs
mov
add
mov
fstpl
mov
push
fstps
lcall
sub
push
xor
mov
mov
push
je
or
subl
js
insl
adc
add
jo
subb
lahf
sbb
pop
sub
dec
sub
jne
pushf
mov
add
mov
lret
aad
in
jmp
shrb
aad
add
push
cmc
or
xacquire
jne
pushf
xlat
dec
lods
sti
stos
jne
test
rorl
repz
or
fwait
iret
xchg
decl
mov
sbb
pop
push
test
jnp
mov
push
add
repnz
pop
pop
cltd
push
or
mov
fwait
test
push
mov
test
roll
test
mov
stos
nop
dec
aad
out
inc
xlat
and
mov
out
pop
add
mov
je
xchg
sahf
lcall
outsb
pusha
in
mov
hlt
in
pop
sub
push
sahf
enter
popa
add
aam
mov
pop
lret
lock
incb
loop
out
mov
cld
cld
push
loopne
mov
repz
xchg
sub
mov
mov
scas
rclb
cli
pop
add
mov
pop
lds
lcall
ja
pushf
xlat
setle
cmpsl
ds
mov
mov
sub
shlb
add
jmp
popf
gs
ljmp
popf
mov
leave
jle
outsl
lret
cmpsl
pusha
lea
add
fbld
adc
pop
les
into
stos
gs
push
shlb
inc
xlat
out
aad
sbb
jp
repnz
shll
jge
cmp
cmp
cmp
add
ret
andl
stos
dec
sbb
lcall
mov
mov
mov
sahf
mov
ljmp
mov
ljmp
mov
lds
nop
icebp
in
sub
aas
dec
movsl
adc
aad
leave
sbb
xchg
mov
or
jecxz
fwait
hlt
jnp
jae
sub
inc
lods
cld
mov
add
dec
lea
mov
pop
mov
push
dec
outsl
dec
jp
and
add
pop
add
mov
push
lret
jae
mov
and
rolb
push
add
jns
lret
icebp
add
or
mov
mov
or
lock
jnp
shlb
add
dec
popf
aam
jmp
shlb
pop
xor
dec
cmp
and
dec
scas
pusha
add
pop
pop
orb
and
ret
les
mov
xchg
aad
xchg
lcall
ljmp
addr16
dec
add
xor
jmp
dec
xlat
cli
cmp
scas
pop
mov
std
lret
and
push
aam
dec
mov
int
push
push
sub
mov
lods
aam
jns
imul
adc
push
mov
jl
fbstp
mov
pop
inc
movsl
aam
in
int
adc
daa
outsl
fwait
aam
imul
push
lds
mov
sub
jnp
mov
adc
add
xchg
mov
gs
mov
pop
into
cmp
jg
gs
sub
insl
add
mov
stc
sbb
les
cmpsb
ja
mov
jne
in
dec
lea
adc
add
pop
add
out
stc
je
mov
imul
enter
lods
orb
cli
add
andl
and
imul
jl
scas
push
gs
scas
push
mov
cmc
add
mov
xlat
negb
xchg
je
push
mov
outsl
lea
leave
sbb
pop
jg
popf
sub
cld
sbb
mov
jp
mov
into
int
stos
lds
jnp
leave
inc
add
adc
aad
and
jns
cmp
mov
dec
nop
xlat
in
arpl
negb
ret
inc
pop
cmp
jbe
jb
mov
cmp
xchg
pop
push
xchg
adc
sub
and
stos
mov
sub
push
xchg
add
sub
dec
adcl
ds
jl
lahf
lcall
stos
stc
fisubl
popf
loop
mov
xchg
cli
sub
iret
daa
addr16
scas
and
daa
xchg
and
mov
enter
cmp
cmp
and
repz
aad
add
xchg
cmp
mov
mov
hlt
repz
sub
jbe
mov
and
stc
insl
fldcw
mov
into
mov
enter
lock
cmp
iret
in
stos
pop
out
mov
jns
mov
pop
nop
jmp
stos
xor
mov
xchg
mov
push
test
popf
push
lret
aas
std
inc
push
jmp
popa
and
das
stos
xchg
sahf
push
mov
add
fldcw
or
lock
mov
in
aas
sbb
mov
pop
inc
divl
cmpb
fwait
dec
cmp
and
or
or
gs
fld
pop
sub
push
inc
mov
sub
xlat
scas
add
int
cmp
dec
or
add
jns
sbb
int
test
push
push
scas
mov
enter
fmull
pop
mov
jno
idivb
cmp
les
roll
mov
and
sub
out
pop
gs
cmp
leave
dec
sub
push
push
jmp
sarl
sbb
mov
xchg
sbb
test
and
imul
insl
mov
push
ret
loope
fsts
pop
sahf
aam
lret
add
ret
cmpsl
pop
cmpsl
mov
sub
test
jl
stc
or
rcll
nop
ja
mov
cwtl
and
add
sar
dec
or
popf
mul
mov
or
inc
scas
and
std
sahf
test
iret
xor
test
addr16
sbb
jnp
dec
add
cltd
xor
sbb
adc
lret
pop
push
hlt
sub
repz
mov
cmp
cmp
jecxz
cwtl
and
fldl
inc
pusha
xchg
fwait
sbb
lret
scas
nop
les
sbb
push
or
sarb
stos
popf
pop
mov
repnz
mov
cmp
es
movsl
sti
or
pop
push
mov
test
icebp
int3
sbb
insl
or
xor
je
scas
pop
sti
dec
push
xchg
cli
mov
pop
inc
and
aaa
loope
into
fisubs
rclb
sub
lods
add
lret
jl
pop
idiv
xor
jmp
push
sub
std
add
enter
int3
jns
mov
rcll
add
lea
push
xor
pop
add
scas
enter
inc
shrl
xor
adc
mov
js
pop
test
adc
and
jnp
add
xor
lds
rcrl
std
xor
xchg
mov
or
add
cmp
bound
and
scas
outsb
dec
ss
mov
sbb
pop
call
ret
sub
scas
jae
lcall
lea
stos
ret
stc
xor
adc
arpl
arpl
mov
ss
insl
jl
rcrl
enter
dec
cli
jnp
inc
mov
mov
out
push
and
loope
sub
shr
call
enter
or
inc
xchg
fldl
cwtl
inc
in
pop
dec
jmp
scas
jb
cmp
xchg
push
mov
add
pop
gs
xor
xchg
in
mov
cli
in
cld
pop
movsl
push
std
inc
or
jo
pop
das
loopne
rorb
cmpsb
cs
frndint
and
stos
repnz
sub
setns
add
cmc
inc
scas
xlat
push
mov
pushf
out
pop
or
outsl
loop
test
ja
sub
cmp
rorb
xchg
add
mov
ret
ja
pop
pop
hlt
dec
mov
out
ja
jg
xchg
adc
cmp
inc
jle
cltd
inc
mov
mov
inc
or
mov
add
sub
inc
cmpsl
mov
cmpsl
add
arpl
fwait
mov
or
or
cmp
hlt
stos
sbbb
lcall
cli
dec
fldl
sub
push
sti
int3
sub
xchg
inc
nop
mov
aad
xor
mov
mov
pop
lds
rolb
repz
popa
push
xchg
or
popa
xchg
add
mov
bnd
test
addr16
lret
xchg
pop
mov
sub
cmp
mov
cwtl
mov
inc
arpl
lds
adc
cltd
leave
loop
std
mov
sbb
jmp
mov
mov
mov
xor
adc
das
popl
inc
call
mov
les
mov
in
leave
push
les
movsb
movsl
out
mov
movsb
scas
push
sub
xor
imul
xchg
inc
or
cmpsl
test
mov
xchg
std
xor
jnp
pushf
pop
push
pop
push
pop
dec
shll
rcrl
mov
mov
cmc
mov
scas
add
imul
mov
ja
sub
push
xchg
dec
or
mov
push
jns
jg
dec
cmp
ja
pushf
push
inc
xchg
mov
add
pushf
xchg
ret
subb
mov
sbb
or
enter
add
flds
push
int3
roll
jg
fsubs
sahf
mov
fnstcw
in
ja
call
loopne
mov
adc
fidivrs
icebp
xchg
sarl
mov
in
push
in
sbb
cmp
les
or
fnstsw
push
cmp
jb
lds
and
xor
jg
jmp
leave
or
sarl
push
dec
test
mov
pop
mov
cmp
mov
add
popf
mov
aaa
jge
jnp
dec
int
push
leave
mov
fs
xor
cmp
xchg
sub
dec
add
loop
or
xchg
orb
adc
insb
imul
pop
popf
sarl
je
mov
and
push
pop
adc
mov
mov
xchg
lret
dec
fsubr
fyl2x
nop
mov
pop
push
mov
mov
andb
or
cmpb
into
ljmp
add
cmp
mov
or
leave
xchg
pop
std
mov
sbb
inc
adc
lods
sbb
push
out
push
test
mov
xacquire
test
shll
mov
imul
lods
pop
scas
add
arpl
cmp
cltd
insb
addb
mov
cld
sbb
sbb
mov
and
mov
or
mov
push
push
cmc
aad
mov
out
ret
push
adc
inc
mov
inc
mov
add
mov
jae
insb
test
and
mov
into
adcl
jae
sub
aad
rcll
cs
inc
or
and
das
cs
add
ret
xor
sti
stos
mov
rorb
std
cmpsl
adcb
in
lcall
jno,pn
lds
or
stos
mov
iret
or
push
jae
mov
push
and
call
mov
iret
dec
mov
subb
imul
push
xchg
push
add
sub
enter
movsl
ror
test
pop
mov
test
scas
xchg
dec
sti
sbbl
in
xchg
xor
mov
adc
cld
mov
pop
mov
push
inc
push
cmp
in
in
xor
mov
loopne
rorl
jno
dec
mov
mov
das
dec
and
flds
mov
mov
pop
je
xchg
fwait
pushf
cmpsl
mov
inc
out
fwait
mov
test
xchg
xor
add
movsl
cmpsb
imul
test
cmp
mov
dec
pop
sahf
mov
movsb
repz
repnz
inc
jle
fwait
test
stos
mov
mov
cmpsb
mov
and
mov
or
sbb
inc
imul
lahf
cmp
jnp
mov
lret
ss
add
loop
js
mov
aam
imul
add
jge
mov
push
pop
and
shrb
cmpsl
outsb
dec
stc
push
sub
daa
and
dec
push
mov
dec
jge
icebp
push
dec
movsl
inc
js
gs
cmp
jecxz
mov
movsl
mov
test
mov
inc
mov
and
dec
and
cmp
jns
xchg
stc
mov
xor
lcall
xchg
out
jae
inc
sbb
ss
fwait
push
and
add
jg
mov
mov
mov
std
mov
jns
rcll
lret
mov
sbb
mov
add
push
stc
mov
rorl
dec
jge
or
inc
dec
mov
aad
hlt
cmpsb
mov
inc
stos
pop
ja
xchg
fcmovb
mul
xchg
or
jns
enter
mov
fwait
add
mov
adc
test
dec
pop
push
out
mov
and
dec
insb
lds
test
mov
out
lahf
and
push
rol
pop
jmp
leave
pop
pop
mov
mov
xor
clc
adc
or
stc
addb
dec
fs
jp
mov
loopne
loope
mov
ficoms
std
mov
or
in
les
lret
and
mov
push
mov
pop
xor
xchg
mov
fwait
push
dec
sub
xchg
std
fs
xchg
icebp
and
pop
arpl
jle
test
movsb
lret
pop
xor
jns
cmpsb
jns
mov
push
mov
fadds
lea
cmp
mov
xchg
popf
leave
sbbl
enter
inc
test
hlt
push
shl
arpl
mov
mov
add
cltd
pop
xchg
decb
inc
add
jl
adc
inc
sub
push
imul
ljmp
adc
mov
cltd
fs
insl
or
xchg
dec
lret
movsl
test
stc
cmp
mull
outsb
imul
mull
movsb
mov
test
mov
cmp
test
jns
ret
jp
cmpsl
sub
pop
cmp
add
js
xchg
dec
mov
push
imul
dec
stc
add
push
lods
es
sub
mov
adc
subl
mov
sbb
pop
mov
bound
fwait
rcl
std
pop
cli
add
sbb
push
mov
mov
enter
push
and
mov
icebp
sub
jg
test
cmp
repnz
lret
test
lds
pop
push
jmp
mov
or
adc
mov
les
and
add
add
clc
xchg
loopne
sub
pop
lds
dec
fcomps
sub
pop
cmp
movd
pop
xchg
lahf
inc
test
scas
dec
mov
repz
mov
dec
pop
xor
sbb
mov
or
mov
add
cs
insl
cmpsb
into
dec
push
cs
or
add
dec
add
lret
jnp
dec
je
dec
push
xor
ret
leave
sbb
mov
arpl
in
mov
mov
mov
add
stc
adc
iret
addr16
or
sub
jo
add
dec
xor
je
xchg
mov
sbb
pop
repnz
adc
in
add
jg
inc
rcll
cmp
add
lods
sbbb
loop
enter
push
dec
mov
lds
mov
jae
mov
add
fisttpl
xor
loope
ret
ljmp
loop
mov
mov
stc
or
sbb
pop
pop
movsl
test
mov
hlt
and
lret
xchg
jp
mov
bnd
xor
lret
jge
outsl
and
jge
dec
mov
pop
ret
and
lcall
push
xchg
sub
jmp
push
and
ljmp
scas
cmp
outsb
shlb
push
movsb
inc
cmp
or
pop
fdivrs
das
xor
jno
imul
stos
mov
inc
lods
dec
and
out
mov
into
and
mov
mov
data16
cmpb
or
push
or
jle
scas
imul
jo
or
popf
aad
cmp
test
hlt
je
fisttps
or
in
adc
fnstsw
cmp
sub
and
jle
scas
retw
push
movsl
jns
inc
and
mov
cmpsl
mov
push
fscale
mov
int
leave
cmpsb
or
jb
lcall
scas
add
xchg
mov
add
inc
add
mov
inc
mov
lds
pop
out
je
lods
pop
dec
subb
jno
movsl
push
insl
dec
out
dec
cmp
xor
test
andl
addps
repz
dec
popa
mov
pop
mov
fstps
mov
dec
orl
pop
and
mov
adc
repnz
int
repnz
fldcw
jnp
cmpsl
mov
or
popf
mov
dec
ja
bound
adc
jmp
shll
cmpsb
push
jl
sub
push
dec
test
xor
jns
cwtl
dec
mov
cli
sub
xchg
and
lret
enter
arpl
pop
icebp
das
mov
in
addb
rol
mov
in
icebp
mov
adc
mov
sbb
mov
fidivrs
or
lret
dec
testl
aad
pop
mov
outsb
inc
lock
xchg
mov
pop
movl
cmp
hlt
push
mov
out
sbb
push
fsts
jecxz
hlt
fld1
int
outsb
hlt
sub
sbb
mov
xchg
aas
push
xchg
in
xor
jnp
push
aam
dec
mov
in
add
lret
or
gs
outsb
add
or
mov
lret
lret
push
iret
rolb
dec
xlat
push
aad
scas
mov
xchg
xor
or
and
stos
xchg
int
xchg
cmpsl
shrb
vpsubusw
loopne
adc
dec
ret
and
nop
jmp
mov
xchg
push
push
add
sub
push
sbb
movsl
stos
mov
jl
jmp
mov
ret
loope
flds
in
iret
mov
mov
pusha
xchg
cmp
js
out
sbb
shll
dec
inc
or
add
jg
xchg
std
xchg
xrelease
pop
add
inc
and
xchg
sbb
je
movsb
lret
xchg
rorl
les
into
stc
leave
cmp
fnstcw
int3
movlps
mov
ffree
shll
pop
jo
fs
cwtl
inc
add
lds
dec
jge
mov
bound
fwait
ret
lret
pop
dec
sub
mov
iret
movsb
test
fstl
add
xchg
cmp
fldcw
push
adc
mov
and
dec
and
mov
or
ljmp
fs
das
and
enter
es
ja
push
mov
adc
mov
lret
inc
test
cmp
pop
movsb
lods
pop
dec
inc
mov
repz
or
dec
mov
adc
mov
fs
imul
push
gs
mov
mov
das
out
stos
insl
out
jo
imul
or
into
mov
scas
jbe
mov
cmp
stos
andl
push
add
insb
daa
pop
push
inc
xchg
push
test
sahf
pop
dec
insl
aad
jbe
jne
mov
dec
xor
test
cli
fnsave
mov
sub
push
xchg
mov
and
shll
xor
mov
or
les
jo
lds
jnp
jg
push
mov
add
and
leave
adc
mov
add
mov
adc
inc
pop
jns
or
xor
imul
and
sarb
icebp
shrb
jle
mov
enter
inc
jg
adc
stos
lret
ret
mov
subb
stos
icebp
xchg
and
xlat
sub
ret
enter
pop
add
mov
fldl
std
mov
mov
addr16
push
ds
xchg
jecxz
jbe
jmp
outsb
incb
loope
ds
mov
imul
std
mov
jmp
push
xchg
in
notl
bound
cmp
push
or
adc
scas
pop
js
in
xchg
xchg
dec
mov
adc
mov
push
divl
ret
hlt
mov
dec
add
dec
bound
mov
jmp
or
lods
loope
xchg
push
xchg
xor
xchg
arpl
scas
lods
mov
lods
mov
cmp
and
jl
xchg
xchg
js
mov
mov
pop
andb
pop
push
loopne
ljmp
xchg
iret
lcall
or
or
pop
mov
vpminsw
adc
iret
sub
je
and
jb
lret
xchg
xchg
sub
push
shlb
testb
lret
movsb
sub
add
ja
inc
sarb
dec
lock
mov
pop
xlat
mov
sub
xchg
lahf
test
jp
jns
popa
mov
mov
xchg
stos
addr16
mov
ret
shll
xchg
jno
push
bound
rolb
sbb
insl
cli
je
mov
adc
nop
loope
movsb
add
push
add
mov
and
xchg
mov
jecxz
adc
cmc
iret
mov
jns
or
push
mov
mov
out
in
addb
and
bound
mov
cmc
mov
inc
push
sbb
cmp
push
in
fisubs
adc
iret
cmp
mov
imulb
pop
push
orb
ret
mov
push
sahf
mov
mov
mov
lcall
jle
repz
jge
xchg
repz
xor
dec
mov
fidivrs
jle
cmpsb
cwtl
adc
inc
pop
sbb
orb
mov
lds
rolb
mov
mov
cli
movsl
test
test
mulb
pop
xchg
jnp
dec
js
test
cmp
jmp
iret
lret
test
gs
dec
mov
ret
or
jb
lds
xchg
or
jb
in
dec
test
cmp
adc
or
setge
imul
xchg
sti
mov
cmpsl
push
cli
imul
pop
bound
call
in
clc
or
or
mov
cmp
insl
imul
xchg
lret
xor
jl
testb
sbb
inc
hlt
ss
xor
dec
mov
sbb
mov
jae
aam
mov
fs
testl
dec
mov
add
pop
pop
push
test
ds
fs
in
sbb
gs
add
push
cmp
dec
ja
jnp
jo
or
leave
xchg
adc
cmpsl
bound
push
cmp
leave
jo
inc
sarl
stos
dec
jb
cwtl
outsb
cmc
add
test
ret
aas
daa
xchg
add
xor
es
ljmp
jg
hlt
push
stos
push
and
fldenv
rorb
jns
dec
pop
movsb
pop
rorl
mov
popf
sbb
daa
out
imul
es
cltd
enter
inc
or
popf
jo
into
pusha
pop
add
jg
mov
xor
add
cmpsl
int3
or
inc
andb
fwait
cmpsl
in
mov
xorb
ret
xor
movb
clc
mov
cmpsb
jae
pop
mov
jns
cmp
rorl
leave
mov
mov
mov
xor
repz
xor
outsb
mov
shrb
imul
rorl
test
fnstsw
xchg
xor
jnp
pop
divl
adc
xchg
adc
fs
mov
dec
ja
xor
lods
xchg
jmp
dec
repz
stos
sub
aam
adc
adc
add
jle
in
add
lds
scas
or
cwtl
enter
xchg
jns
adcl
pop
std
stc
jns
mov
mov
in
push
inc
or
sub
and
pop
ss
arpl
dec
insb
dec
push
ret
and
sub
nop
xchg
cs
add
fdivs
mov
mov
stos
xchg
pop
sbb
push
add
xchg
popa
cli
or
test
add
out
pop
sbb
outsb
and
pop
test
or
or
cmpsl
xor
inc
jbe
leave
push
xchg
stos
or
imul
xor
test
mov
cltd
mov
push
cld
fs
fsubrs
jl
mov
div
add
leave
push
imul
daa
cmp
scas
subb
imul
mov
hlt
adc
iret
xchg
push
aas
sub
cltd
mov
cmpsl
xchg
adc
jecxz
mov
test
test
xchg
cmp
mov
repnz
and
repz
scas
jmp
int3
cmp
push
xlat
ret
jecxz
sbb
pop
jnp
mov
mov
cmp
pop
jo
das
cwtl
mov
mov
aad
aas
popa
in
jecxz
jno
dec
sti
lock
xchg
and
stos
or
fs
stos
roll
cmp
dec
and
pop
std
push
jmp
push
jmp
and
inc
or
icebp
repnz
pusha
and
mov
add
mov
xchg
repz
dec
les
mov
psubw
sbb
push
push
jmp
dec
mov
xor
pusha
stc
test
jle
mov
jp
mov
sarb
mov
movsl
jecxz
adc
cmpsl
mov
sub
repnz
in
sub
lret
out
outsl
or
popf
dec
inc
add
jmp
push
add
push
sbb
and
pop
fprem1
inc
mov
loope
jae
lock
sub
nop
mov
sub
popa
xor
push
cmp
cmp
jns
cmovle
aam
enter
mov
add
icebp
jbe
xchg
mov
insl
test
jge
lods
data16
aaa
fimull
dec
adcb
or
orl
xchg
movsl
insb
mov
xor
add
mov
and
leave
jecxz
adc
sti
repnz
mov
cmp
repz
cmp
push
or
subb
stc
inc
jmp
in
lods
fwait
aaa
add
xor
pop
push
adc
mov
repz
dec
jnp
and
lods
orb
cwtl
and
jns
aaa
daa
push
pop
aam
cltd
or
insl
test
aad
testb
mov
jno
cmpl
xchg
adc
loope
xchg
sub
js
mov
mov
imul
adcl
jmp
xchg
stos
enter
mov
xchg
or
inc
or
jnp
dec
xchg
mov
icebp
and
mov
adc
push
nop
push
push
jns
ss
sub
push
xor
into
loope
add
mov
dec
rorl
cmc
inc
adc
adc
mov
push
inc
fsubrs
ret
jae
jge
mov
lods
inc
je
mov
flds
add
mov
shrl
cltd
adc
dec
aas
or
aaa
dec
push
push
xchg
mulb
add
ret
rolb
insl
jne
mov
push
in
sahf
jns
inc
mov
mov
push
dec
sub
outsl
mov
scas
shll
sub
jnp
xchg
daa
imul
dec
push
int3
cmc
jge
cmp
dec
popf
loope
mov
loope
out
mov
movsl
repnz
loope,pt
mov
cmp
enter
and
xor
cltd
push
mov
push
dec
add
mov
push
or
cmpsl
cltd
xchg
mov
add
mov
cltd
dec
enter
mov
dec
xor
dec
add
icebp
movsb
or
push
aad
push
push
arpl
xchg
repnz
cld
pop
sti
push
dec
cmpsb
sub
das
in
xchg
mov
inc
mov
incb
and
nop
sarb
lods
lahf
pusha
mov
movsb
push
cwtl
je
mov
stc
sbb
addr16
shl
icebp
fnsave
outsb
fstpl
fdivl
mov
add
leave
in
stos
int
inc
push
mov
push
or
push
int3
call
pop
popa
cmc
stos
popf
std
int
call
rclb
xchg
in
addr16
mov
in
pop
frstor
dec
int
clc
stos
jge
in
add
mov
mov
jnp
fstl
push
fnsave
adc
int
fmul
sub
jl
and
in
push
int
xchg
fwait
xchg
jmp
fstpl
mov
popf
mov
nop
xchg
mov
pop
mov
fucomi
mov
in
popf
movsb
call
int
jmp
test
enter
cli
sbb
in
pusha
stos
cmp
in
sub
loop
fstp
pop
insl
dec
int
lds
out
fscale
in
jmp
xor
add
mov
arpl
lds
add
int3
push
out
dec
inc
push
in
cmc
mov
cli
sub
sbb
or
pop
add
in
test
lahf
jo
in
fs
int
addr16
in
jns
pop
in
dec
movsl
stos
popf
push
in
movsl
call
repz
push
sahf
vminss
popf
daa
sub
pop
gs
dec
jmp
adc
jge
in
xor
insl
cli
inc
pop
sbb
or
cmp
inc
jg
cli
in
in
add
lea
imul
aad
in
sbb
popf
add
and
mov
add
mov
cld
inc
mov
in
hlt
fcomps
int
jg
mov
int3
ror
arpl
mov
in
in
hlt
fmul
or
cli
mov
mov
loopne
icebp
or
fmul
aad
sub
lods
in
loopne
mov
xor
popf
jg
cli
and
sbb
int
hlt
lods
add
lahf
cli
pop
pop
lea
mov
mov
push
sahf
test
insl
pop
pop
fsubl
sbb
or
add
sub
fstp
xor
gs
insb
inc
add
js
popf
addr16
and
fistpll
push
in
das
in
lods
xchg
add
pop
in
mov
sub
adc
xchg
lods
test
xchg
sti
fnstenv
sbb
in
or
cli
cmp
std
cli
mov
cmp
mov
push
sahf
int
aad
cmp
sub
call
add
cli
xchg
dec
mov
lods
in
in
fcmovne
pop
jg
lcall
add
std
dec
int3
sbb
int
inc
sbb
or
sahf
cmp
sub
lock
in
xor
pop
std
in
test
in
lods
pop
add
popf
jg
sahf
movsl
cli
xchg
pop
xchg
int
mov
push
in
add
mov
roll
mov
cld
add
in
jbe
daa
xor
push
fidivl
add
sbb
movsl
or
push
cwtl
in
jne
out
imul
rorl
xlat
push
pop
fstps
aad
enter
sbb
push
hlt
cmp
cmc
into
shl
sbb
leave
pop
aam
xchg
gs
cld
or
sbb
sub
fstpl
shl
int3
popf
in
std
aad
nop
jmp
les
jns
fstps
jge
jge
inc
int3
rcr
call
xchg
test
les
lret
popa
jae
push
sbb
rolb
cli
mul
jmp
lea
xchg
or
dec
adc
xor
jne
sbb
in
mov
shll
mov
fchs
fnstenv
std
push
mov
add
or
mov
lret
gs
sti
fistl
loope
mov
jns
push
jns
sbb
push
gs
stc
push
fdivrl
jns
mov
test
add
add
fdivrl
loopne
push
cmc
lods
call
in
in
in
out
push
xchg
or
push
push
test
mov
cmp
fs
popa
push
movsl
pop
movsl
dec
mov
iret
jbe
or
stc
pop
ficoms
js
pop
in
stos
shl
movsl
fsubrl
test
pushf
in
hlt
jnp
jle
add
jge
mov
test
mov
fs
lahf
fistl
jnp
cltd
popf
pop
gs
sbb
or
nop
lcall
xor
popf
lods
mov
shl
push
jno
mov
fists
jnp
lea
lea
xchg
mov
shlb
xlat
lcall
xchg
lcall
xor
shrl
lahf
loop
jnp
cwtl
aad
gs
sbb
xchg
and
xchg
aam
shlb
xlat
lcall
xchg
lcall
xor
mov
shl
push
lcall
fnsetpm(287
or
jmp
fmulp
fisttpll
in
jecxz
loop
shrl
lret
in
xchg
ror
leave
in
popf
push
dec
push
sti
jns
sbb
shr
xchg
aad
in
or
sti
and
movsl
jg
sti
push
push
ljmp
inc
in
int
adc
aad
test
adc
sbb
test
jge
fs
lods
mov
mov
mov
mov
jge
mov
cmc
popa
cmc
pusha
xor
into
jmp
pop
mov
outsl
aad
or
add
sbb
sbb
sbb
jmp
jmp
in
mov
std
sbb
movsl
cld
mov
lcall
mov
xchg
std
xchg
mov
mov
add
mov
dec
loope
aad
cmp
xlat
test
lods
popa
mov
shll
mov
imul
push
stos
in
jno
std
or
lods
and
insl
push
stc
or
sub
lods
pop
xor
pop
dec
push
push
lods
mov
add
push
mov
popf
imul
mov
jp
add
add
jmp
pop
in
xchg
std
imul
std
in
jge
and
sar
pop
rcr
pop
in
cltd
rcrb
icebp
std
pop
pop
popf
fisubrs
sbb
lret
jge
std
push
aad
in
and
mov
push
fs
lret
insl
or
cmpsb
xor
inc
fs
push
test
push
dec
bound
test
shrb
push
idiv
push
push
mov
and
into
jmp
in
lret
xchg
std
dec
cltd
cmp
loopne
in
inc
dec
shll
cmp
sbb
xchg
jg
testl
jae
test
sbb
pop
test
lods
mov
rcl
mov
mov
sti
lcall
pop
bound
rcr
push
jne
cld
arpl
cmp
dec
cld
or
out
mov
and
jae
sbb
out
sub
push
jno
in
adc
and
push
test
jl
out
sti
jnp
lret
test
lcall
sti
lcall
mov
test
pop
lahf
int3
sub
dec
std
and
leave
int3
cwtl
sti
lcall
lret
bound
rcr
push
pop
in
sbb
sti
lcall
xor
dec
cld
xchg
dec
iret
jmp
out
mov
and
pop
lahf
int
into
jae
pop
pop
gs
sbb
popf
gs
rcl
jns
mov
mov
rcl
push
inc
out
rolb
dec
in
sarl
rcl
fcom
mov
mov
xlat
push
push
out
jb
sbb
pop
gs
sbb
sti
cld
rcl
sub
jmp
out
mov
and
pop
lahf
sti
daa
jge
ret
test
xchg
xchg
cld
add
ja
lret
or
popf
iret
dec
into
sti
int
aam
fs
add
fcomps
aad
cld
sti
imul
jmp
movsl
popf
lds
test
in
add
dec
fnstsw
sbb
inc
cltd
shll
in
dec
lods
sti
subl
jne
mov
pop
push
push
aam
sbb
add
add
sbb
popf
mov
jne
xor
dec
in
in
mov
int3
test
or
xchg
movsl
enter
lods
fnsave
pop
pop
dec
in
mov
in
sub
lret
pop
dec
std
mov
in
xor
test
repz
sti
push
lcall
dec
pop
gs
popa
mov
pop
mov
mov
imul
pop
mov
and
mov
sub
lret
mov
fwait
push
cmp
aad
lods
mov
std
adc
mov
xchg
push
mov
mov
sub
test
sbb
imul
adc
repnz
repz
or
and
adc
push
stc
dec
dec
fldt
xor
repz
jne,pt
pushf
jmp
popf
pop
rcr
mov
fcmovnbe
ror
or
inc
ficompl
xorl
jmp
hlt
lods
je
ficompl
mov
jmp
test
in
test
mov
jmp
hlt
push
je
loopne
and
and
lods
inc
adc
call
inc
ficomps
jns
fstps
sbb
and
mov
fisttpll
mov
push
inc
jecxz
push
fs
pushf
fldpi
cltd
add
lods
push
in
and
jns
inc
pop
test
test
pop
lahf
jne
loop
popf
cli
icebp
cld
rorl
test
inc
add
fwait
aam
shll
dec
xchg
push
icebp
loop
and
mov
and
movsl
lods
lcall
sbb
mov
lcall
xchg
inc
cld
out
jmp
aam
lret
lea
pop
sbb
out
and
fucomi
pop
inc
gs
imul
jne
pushf
fnstenv
lods
gs
imul
int3
xchg
and
adc
and
fstps
sub
fld
cmpl
lret
aas
jmp
shlb
and
lods
gs
sbb
sub
shll
iret
imul
lods
jnp
iret
lcall
dec
dec
jg
popf
iret
fwait
int
loope
into
and
jno
rcl
jle
sbb
sahf
jle
loope
add
and
add
test
gs
fadds
and
push
lods
shlb
sub
and
lods
gs
sbb
into
fnstcw
adc
pop
rcr
and
in
and
pusha
push
dec
mov
xor
cmpsl
and
iret
mov
addl
icebp
andl
rorb
aad
js
popa
pop
sti
xchg
mov
cli
pop
test
dec
orb
xchg
sar
and
lea
sbb
lret
test
pop
push
repnz
lods
and
and
imul
fcoml
mov
std
jns
or
js
imul
int
out
pop
and
and
pop
jns
std
shll
dec
icebp
push
and
add
jne
subl
xchg
fwait
add
add
mov
add
jnp
mov
icebp
mov
sbb
loopne
enter
add
jmp
and
js
add
and
popf
lods
push
leave
mov
cmp
pusha
gs
imul
lods
jnp
mov
cld
in
dec
mov
cld
dec
rcr
cmc
repnz
lods
mov
and
adc
sub
enter
jns
dec
mov
insl
loope
xchg
push
sbb
jmp
and
cld
xor
sbb
sub
int
je
lock
test
push
int
out
leave
cmp
out
aam
push
mov
jns
fldenv
pop
out
xchg
sub
inc
popf
push
popf
cld
in
leave
popa
jmp
aam
push
mov
and
push
jns
lahf
jmp
jmp
xor
ret
mov
fildll
in
sahf
jecxz
loop
rcrl
out
sahf
out
fistpll
int3
fwait
or
jg
sahf
lret
cli
lret
sbb
cmp
int
addr16
insl
cld
inc
cmp
aam
in
add
and
add
lods
xchg
jecxz
int3
dec
shrl
sarb
sti
test
add
lahf
add
cltd
dec
pop
sbb
cs
jae
leave
jns
dec
fs
or
incb
xchg
or
rcrl
and
popa
or
movsb
mov
sti
std
test
inc
in
int
push
cltd
xor
mov
cmp
test
lret
jmp
dec
jno
cmp
xchg
andl
cmp
shr
push
aam
loope
fildll
test
jge
dec
cmpsb
mov
mov
push
xor
icebp
fxch
add
mov
jmp
add
mov
hlt
mov
add
sar
cmpsl
movsb
test
cwtl
popf
fimull
xchg
pop
rol
pop
sub
test
frstor
inc
shr
imul
negl
jmp
mov
imul
or
xchg
imul
lea
icebp
push
cltd
and
cmp
fstps
loopne
push
loope
push
fildll
leave
fucomip
jns
mov
jns
mov
sbb
loop
add
add
mov
jo
mov
mov
mov
es
jmp
fldcw
xchg
jle
in
jl
imul
adc
leave
dec
in
test
and
and
subb
mov
gs
jecxz
or
mov
fs
pusha
dec
icebp
jmp
loop
or
and
gs
add
int3
inc
or
cmp
flds
clc
gs
lahf
fdivr
inc
lcall
test
call
adc
loope
sbb
xchg
sbb
jge
mov
dec
in
sti
mov
iret
push
adc
movsb
dec
int3
dec
in
sti
lret
pop
popf
in
imul
xchg
test
or
movsl
popf
pop
dec
adc
icebp
jo
fldln2
xchg
popf
orb
mov
outsl
sbb
mov
inc
test
sub
sahf
jmp
sub
or
and
lea
test
lds
or
arpl
popf
mov
mov
sub
add
sbb
or
and
push
cmc
subl
gs
push
add
xor
gs
stos
imul
popf
dec
je
inc
mov
and
in
int3
dec
jae
mov
adc
fnstenv
lock
test
add
cmp
mov
dec
movsl
pop
sbb
sahf
cmp
in
dec
inc
popf
or
cwtl
stc
int3
aad
into
scas
das
dec
mov
cmc
popa
lea
add
jmp
adc
cmp
test
jge
mov
bound
add
test
fscale
test
fmull
lcall
outsb
negl
sti
js
fsin
sub
xchg
ds
and
minps
jno
test
ja
mov
and
ja
cmp
imul
mov
dec
jmp
inc
pop
jbe
adcl
pop
sub
out
dec
das
lds
les
jne
xor
and
hlt
mov
pop
cld
test
mov
inc
loop
sbb
icebp
std
xlat
cli
sbb
inc
jo
pop
cmp
lods
jecxz
pop
push
push
lods
lcall
sbb
loope
aad
mov
pop
mov
lods
rol
and
pop
cmc
lods
out
test
sbb
mov
lods
out
and
and
sub
negl
xchg
pop
cmp
js
lods
xchg
es
cmc
lods
lret
and
dec
gs
lret
mov
push
mov
rcl
pop
fs
mov
cld
ror
outsb
and
imul
inc
push
adc
insl
fwait
cmc
lods
iret
mov
inc
and
fwait
int
loope
and
stc
add
popa
mov
test
int
pop
inc
in
imul
mov
jle
or
stos
mov
jbe
fsubrl
cli
mov
dec
or
stc
addr16
sar
dec
mov
jge
sbb
or
push
sti
in
mov
leave
adc
int3
inc
sti
int
cltd
gs
fucomp
int3
test
sub
or
loope
and
pop
and
dec
dec
and
jmp
dec
std
xchg
adc
cmp
add
std
sub
inc
sub
mov
inc
imul
xor
push
jecxz
in
lret
xchg
or
cltd
mov
adc
and
imul
sbb
fs
lods
sarl
ss
add
in
sub
sti
dec
mov
mov
dec
out
in
inc
fs
sub
mov
imul
std
lcall
mov
adc
sbb
sub
fstps
push
xchg
cli
js
jl
sub
xor
into
dec
add
pop
cli
adc
adc
and
cmp
mov
inc
mov
fsts
or
mov
mov
ret
adc
lods
fistps
das
dec
push
fnstcw
adc
leave
shl
sti
icebp
fst
xor
and
xor
loope
fisubs
xor
or
adc
add
dec
adc
mov
test
sub
cltd
arpl
stos
fcmovnu
and
jns
adc
push
test
mov
and
adc
add
shll
cltd
jns
scas
pop
and
dec
adc
add
jmp
sti
jmp
imul
add
and
xor
and
and
jns
mov
dec
mov
dec
sub
and
outsl
add
and
mov
add
cli
sub
mov
fnstcw
test
adc
push
sub
push
inc
mov
xorl
jecxz
add
mov
and
inc
cli
sub
mov
mov
dec
xchg
insl
jecxz
add
pop
push
inc
mov
mov
lods
cld
jge
xchg
mov
or
in
out
int3
aad
cmp
loope
adc
jl
sub
loope
in
ret
loope
and
mov
pop
push
outsl
fstpl
sti
xchg
and
xchg
mov
and
dec
cli
icebp
jge
lcall
or
jno
or
dec
and
add
push
add
arpl
or
add
add
repnz
mov
mov
rcrl
xor
pusha
gs
dec
xor
sub
or
cmp
iret
lcall
inc
sbb
out
fistl
ja
push
std
in
sub
jecxz
add
sub
add
and
add
and
iret
push
aas
sbb
cli
cmc
push
and
jns
iret
fwait
or
mov
les
sbb
jns
jle
xchg
push
loop
or
dec
dec
jno
jmp
inc
pop
jecxz
rcrb
and
xor
sbb
xor
and
popf
je
jmp
cld
dec
push
in
and
sub
jge
cmp
mov
jmp
dec
mov
and
lods
jne
fnsave
and
sbb
xchg
cltd
jecxz
add
daa
xchg
mov
fucomp
in
lret
cli
int
addr16
sub
xchg
mov
subb
cli
mov
cli
icebp
or
rcrl
repz
and
icebp
add
test
popf
es
pop
jmp
daa
inc
add
jmp
dec
leave
popf
pop
dec
and
jne
in
add
xor
dec
mov
mov
and
test
add
fwait
inc
xchg
sbb
jnp
rcr
fsubl
jge
sbb
or
call
dec
gs
mov
mov
insl
sub
push
dec
ss
sub
dec
or
cmpb
add
stc
cmc
and
les
stc
cmp
xor
pusha
gs
fstl
gs
or
in
sub
iret
lcall
sbb
sub
iret
lcall
das
add
test
in
mov
fprem1
fcmovnu
loope
add
and
and
jmp
aam
lret
sub
mov
inc
stos
sbb
les
shl
jo
dec
mov
stc
add
add
jge
hlt
sub
xorl
sub
lods
imul
dec
or
and
and
aad
lea
cli
adc
or
imul
sbb
and
xchg
and
popf
or
popa
punpcklbw
mov
adc
sbb
jmp
jnp
dec
mov
daa
or
lods
in
aam
frstor
mov
popf
pop
cmp
cmp
xchg
test
sar
sbbb
fwait
adc
out
dec
je
xor
pop
fwait
adc
adc
cmp
popf
mov
ret
pop
jns
adc
scas
pop
and
mov
and
inc
xchg
jne
push
push
popf
mov
push
and
imul
popf
mov
popf
mov
add
imul
popf
mov
insl
popf
cmp
cli
loope
sub
adcl
cltd
adc
adc
adc
icebp
dec
out
dec
insl
popf
xchg
cmp
popa
lods
cmp
arpl
dec
insl
popf
dec
out
dec
insl
popf
xchg
cmp
in
dec
insl
popf
dec
out
push
sub
rcrb
popa
add
or
mov
sub
dec
and
adc
mov
mov
push
inc
popf
mov
loope
push
popf
mov
inc
dec
cmp
jmp
cmp
cmp
lods
shll
pop
mov
lods
icebp
and
aas
int3
fldl2e
cmp
daa
jne
imul
add
and
icebp
xchg
xor
ds
mov
outsl
and
dec
jl
mov
and
dec
cmp
mov
pop
and
in
xor
in
insb
dec
out
fldt
icebp
push
gs
and
inc
dec
cltd
add
and
in
or
js
push
push
cmp
add
jmp
inc
sbb
jae
and
dec
inc
or
mov
jmp
push
mov
cli
xchg
jmp
jle
sarl
or
movsl
popa
push
jmp
push
out
std
fstl
sar
out
loope
and
ds
xor
int3
xor
out
push
sarb
dec
out
into
stc
add
lods
xchg
idiv
fwait
popf
insl
push
push
sar
sbb
into
fisttpll
xchg
fisttpll
rcrl
xchg
jnp
cltd
std
test
pop
hlt
and
mov
int3
jmp
sub
inc
sbb
popa
mov
pusha
roll
out
rorb
std
xchg
push
push
in
and
fnstsw
push
sub
ds
daa
in
and
lahf
loope
or
out
arpl
std
sub
inc
ds
and
cmpl
in
push
mov
stc
xchg
and
std
add
lcall
in
push
out
and
xor
loop
inc
in
push
push
mov
mov
in
and
xor
xchg
cld
or
lds
out
pusha
sub
and
and
cmpsb
daa
movsl
mov
jae
xchg
jne
stc
std
mov
dec
cmp
movsb
and
lods
icebp
sub
mov
sub
std
incb
xchg
stos
xor
jbe
mov
inc
loopne
pop
sub
lods
or
aad
pusha
sbbb
and
and
dec
jbe
mov
xchg
insl
les
and
icebp
sub
mov
mov
or
icebp
and
jo
mov
lock
lock
xchg
insb
inc
sub
and
movsl
xchg
dec
mov
cltd
cld
inc
lock
fcmovnu
cmp
and
fwait
adc
and
fnstsw
movsb
scas
pop
and
sub
xchg
inc
scas
pop
and
inc
and
insb
sub
in
popf
jno
push
pop
fldl
out
and
sub
rorl
repnz
pop
sub
or
and
sahf
pop
sub
push
mov
pop
and
mov
cltd
loop
sub
addl
cmc
loopne,pt
adc
xor
and
into
dec
mov
and
jne
std
notl
mov
and
popa
sub
cltd
lcall
mov
flds
add
cld
aam
test
jle
jmp
mov
dec
xchg
or
movsl
mov
or
jnp
and
loopne
jmp
clc
mov
mov
jmp
cmp
sbb
mov
dec
sub
fisttpll
xor
cli
out
sbb
and
cmpsl
leave
int
icebp
xor
cs
jns
lods
cs
xchg
inc
sarl
rolb
add
sub
and
mov
std
mov
xchg
xor
and
xor
gs
loopne
xor
div
or
sarl
pusha
dec
popa
add
mov
jge
inc
pop
sbb
add
cltd
movsb
xchg
pop
adc
sub
or
mov
sbb
into
pop
and
arpl
lock
lock
add
out
dec
je
sbbl
inc
lcall
mov
jmp
mov
jle
push
std
mov
mov
dec
add
out
jge
dec
mov
jno
xchg
inc
in
sub
xchg
loopne
popf
aas
or
test
mov
mov
cmp
fisttps
movsl
xor
inc
inc
adc
fucom
fucomi
insl
fisttpl
push
jle
cltd
pop
dec
mov
das
pop
inc
adc
inc
adc
xor
lret
mov
popa
add
xchg
jmp
jmp
loopne
in
mov
inc
loope
fists
andb
jno
or
insl
popf
jns
push
popa
and
out
jbe
cmc
add
push
xor
lret
in
lcall
std
jecxz
push
dec
xor
fldl
repz
sub
sub
or
and
pop
dec
out
icebp
mov
add
dec
shlb
lcall
imul
push
dec
int3
cld
and
idiv
lret
lcall
push
lret
mov
in
scas
rcr
cltd
or
xchg
adc
adc
pop
in
sar
aad
xor
adc
pop
in
leave
std
outsl
aad
xor
adc
pop
in
mov
imul
decl
insl
fs
adc
add
add
sub
ret
cld
rorl
in
mov
fcmovu
mov
dec
xor
inc
cltd
jle
sub
add
lods
mov
add
inc
jl
sub
daa
scas
xor
leave
hlt
mov
aad
mov
scas
xor
test
loope
aaa
add
out
and
std
add
and
dec
sub
mov
jns
add
sti
lea
cmovne
pop
and
mov
fmuls
std
lea
jp
jns
and
add
inc
aad
jge
dec
out
dec
ja
popf
adc
mov
and
lods
sub
lcall
cltd
mov
and
adc
cmp
add
and
in
cld
mov
repnz
and
fnstenv
ret
push
addr16
inc
stc
push
push
xor
out
cmp
paddw
jne
sub
dec
ja
popf
sub
mov
ja
paddw
jne
sub
dec
or
scas
out
insl
rorl
inc
loope
scas
pop
and
xor
xchg
jns
std
or
inc
loope
scas
pop
and
add
loope
nop
aam
mov
setge
xchg
fdivs
popf
xchg
lock
rcll
or
popf
into
pop
ret
aaa
dec
mov
inc
scas
cltd
inc
scas
and
xor
fdivs
popf
jmp
xchg
es
or
push
flds
jmp
xor
push
outsb
push
or
lods
cmp
leave
popf
inc
data16
jmp
sub
jmp
add
pop
stc
jmp
pop
xor
add
clc
leave
jl
sub
pop
and
jg
fwait
cmc
or
leave
and
lods
cltd
cltd
mov
pop
push
or
leave
mov
leave
gs
fs
pop
int3
fs
mov
push
cltd
push
jecxz
mov
leave
cmpsb
int3
push
and
xorl
dec
add
loope
push
cmp
and
test
repnz
xchg
bound
jo
leave
xor
xchg
or
fxch
push
icebp
ds
jns
and
mov
leave
lods
push
mov
push
adc
jge
sub
adc
and
mov
gs
push
push
mov
in
sbb
inc
out
dec
and
ror
addr16
or
mov
leave
repnz
sub
loop
lea
out
int3
insl
and
fxch
jno
cmp
cmpsb
stc
mov
insl
push
inc
stc
mov
arpl
fscale
mov
or
das
pop
and
aad
lods
int
stc
or
test
mov
inc
adc
nop
repz
sub
fnstcw
inc
add
icebp
jmp
sarl
xor
subl
sahf
jmp
inc
icebp
jmp
test
lods
mov
cmc
test
pop
in
xchg
fiaddl
inc
cmp
data16
cli
cmp
std
dec
cmp
aam
push
test
jbe
mov
dec
push
sub
xchg
add
push
fadd
dec
push
sbb
xchg
fcmovnu
popf
aaa
and
call
cmp
sbb
scas
jbe
and
jns
daa
cltd
push
imul
mov
popf
dec
pop
js
loope
popa
imul
xor
cmp
leave
pop
xchg
aad
das
and
pop
adc
js
jno
cmc
lock
push
insl
dec
add
imul
and
inc
imul
mov
or
sub
dec
pop
in
idivl
pop
xlat
test
mov
mov
test
test
aad
leave
xor
and
add
ret
jmp
in
popf
dec
std
lcall
in
mov
xchg
and
adc
in
loope
std
jbe
xchg
and
adc
in
addl
add
mov
add
sub
or
pop
fildl
mov
leave
mov
cmp
mov
repz
repnz
pop
dec
and
cli
mov
clc
add
icebp
std
clc
dec
icebp
xor
or
mov
dec
or
mov
add
xchg
inc
sub
sti
cltd
iret
test
pop
notl
add
push
xchg
inc
sub
add
fisttpl
mov
pop
push
pop
shll
cmp
stc
push
push
in
mov
testb
mov
sub
sarl
mov
xchg
inc
fimull
jle
add
lock
cltd
xchg
cmpsl
std
je
cmp
cmp
fisubs
mov
dec
mov
in
pop
loopne
inc
xchg
adcl
cmc
and
mov
stc
xchg
push
pop
andl
fwait
and
movsl
jmp
subl
cmp
lcall
xchg
iret
mov
push
cmpl
scas
sbb
lds
and
mov
and
aaa
jmp
jmp
dec
andl
dec
stc
xchg
andl
pop
and
dec
enter
sbb
mov
mov
mov
clc
and
in
orl
and
hlt
xchg
or
orl
xchg
and
inc
data16
cltd
lea
xchg
popf
std
leave
jge
pusha
gs
andb
dec
leave
xchg
mov
scas
mov
sub
mov
stos
leave
add
and
leave
lods
sbbl
fnstenv
js
loope
fadds
sub
dec
dec
add
and
js
jl
sub
xor
inc
repnz
jno
sub
jno
ja
mov
mov
lret
jno
fwait
add
lcall
cmpl
clc
lock
enter
xchg
or
adc
popf
and
xchg
sub
imul
test
and
xchg
insl
sar
mov
inc
and
aam
add
cmpsl
jo
xchg
sbb
or
and
and
test
lea
iret
shrl
and
pop
cli
fucom
mov
sbb
cmpsb
jo
pop
and
icebp
leave
adc
add
mov
stos
and
test
movsl
mov
fwait
xchg
and
movsl
test
or
mov
pop
iret
mov
or
mov
cltd
pop
cmpsl
icebp
fwait
push
sbb
mov
mov
shrl
lcall
fcompp
int
in
jge
jnp
aam
roll
int
jmp
mov
add
stc
in
out
add
inc
pusha
inc
mov
hlt
stc
loop
xor
and
inc
pop
lock
inc
mov
out
cmp
out
leave
cmp
lock
and
test
lcall
pop
cs
push
loope
mov
lods
out
and
cmc
ret
lods
repz
test
pop
pop
cmp
fstps
sti
hlt
outsb
and
test
lcall
fs
adc
and
lcall
lods
inc
ret
mov
jg
cmp
xchg
frstor
std
outsb
out
dec
sub
mov
mov
icebp
dec
or
pop
jbe
in
jmp
jecxz
inc
repz
xchg
add
fsubrp
fst
add
lahf
add
lds
and
jne
mov
pop
cmp
addl
jmp
rcrb
push
sbb
js
pop
push
mov
sti
adc
test
dec
and
lods
in
or
icebp
call
jno
adc
jbe
mov
cltd
in
in
lahf
adc
cs
pop
mov
in
dec
leave
inc
std
test
adc
xchg
test
lods
xchg
popa
test
and
adc
mov
and
sub
test
pusha
ret
dec
xchg
stc
frstor
lea
divl
popa
fwait
shll
lock
jno
xchg
lock
xchg
adc
sarl
rclb
and
sub
stc
popa
lcall
rcrl
sbb
and
shrl
mov
xchg
mov
rcrl
sbb
stc
loop
xchg
psrlw
lcall
mov
lods
xchg
flds
fstpl
pop
push
fwait
out
jnp
iret
xchg
in
sbb
adc
out
and
out
in
gs
sbb
imul
iret
lcall
imul
inc
pop
jp
and
jmp
cmp
aad
into
xchg
jnp
jbe
or
leave
stc
in
popf
shll
add
xchg
loope
mov
mov
cmpb
jbe
aad
lret
or
push
in
sti
sbb
loopne
loope
cmpl
jp
imul
pop
xchg
jle
sbb
mov
push
dec
xchg
or
stos
mov
jno
push
sub
add
and
lahf
jmp
jns
jge
xor
fwait
lock
lock
add
syscall
push
add
icebp
xchg
add
jge
mov
lock
in
lds
test
in
repz
mov
mov
mov
jmp
jg
push
insb
xor
xchg
imul
les
mov
and
mov
mov
jne
and
arpl
sub
rorb
loope
sbb
ljmp
loope
xchg
or
mov
ret
vmovsldup
and
lea
pop
in
imul
dec
adc
pop
mov
iret
in
pop
and
in
xor
sti
enter
and
mov
loop
ljmp
adc
xchg
inc
lock
test
inc
xchg
cmp
pop
and
mov
add
lock
jge
or
aaa
mov
and
imull
jge
mov
mov
sub
xor
jl
sub
cltd
push
rorb
cld
add
mov
fld
and
cltd
mov
mov
xchg
and
lods
gs
jo
adc
and
loope
xor
stos
lret
jns
fwait
stos
dec
xor
inc
fldt
in
inc
inc
jge
pusha
push
mov
add
lods
vunpcklpd
loopne
rol
and
sub
push
or
cltd
imul
mov
lods
fwait
dec
enter
add
mov
and
std
pop
sub
cmp
pop
and
fs
xor
lahf
scas
mov
insl
in
jno
js
pop
jl
sub
in
cwtl
mov
xor
mov
icebp
push
lods
inc
mov
and
adc
cmp
sbb
dec
std
mov
mov
addr16
and
xchg
addr16
sbb
sub
scas
test
sbb
mull
xchg
test
cld
add
mov
loope
aas
std
outsb
inc
cmp
jns
and
daa
cltd
loop
sub
xchg
dec
jmp
sub
or
mov
adc
sarl
mov
pop
sbb
cwtl
xchg
add
and
cmc
sub
xchg
lock
and
sub
sti
bound
stc
test
mov
pop
lock
clc
lds
jno
mov
and
push
push
andl
test
mov
and
lods
mov
jno
jno
jnp
add
and
mov
insl
cmp
add
mov
pushf
jmp
fsubl
cmovge
inc
stos
pop
mov
lret
into
push
jmp
sahf
sar
lret
js
dec
add
jmp
int3
popa
sub
ljmp
addr16
and
cmp
stc
dec
jmp
int
xor
pop
addr16
mov
and
mov
inc
in
lcall
sbb
leave
mov
loope
insl
popf
cmp
cmpl
aad
loopne
in
dec
sbb
mov
stos
mov
push
pop
adc
out
cmpsl
in
adc
out
adc
leave
cmp
adc
in
jge
cltd
lock
out
outsb
dec
leave
mov
xchg
gs
lock
sub
cmp
std
leave
pop
xor
loop
lea
sbb
sbb
test
dec
and
sar
pop
lcall
push
in
in
cmp
push
andb
sbb
imul
and
lds
xor
xchg
and
cmp
sbb
pop
sbb
sti
or
subl
imul
pusha
gs
cmp
cmc
add
pop
pop
pop
and
mov
pop
add
std
rcrb
stc
fs
out
push
xor
lret
cmp
bound
inc
and
jns
push
mov
ret
sbbw
movsl
std
mov
bound
loope
pop
lret
bound
ret
pop
icebp
xchg
xor
cmpsb
sbb
imul
dec
dec
in
in
cmp
cltd
jne
inc
and
sub
test
rorb
sti
pop
cld
shll
push
mov
std
and
xor
push
adc
in
mov
popf
mov
dec
aad
movsl
pop
dec
push
popa
dec
fs
out
dec
lods
mov
lds
int
je
jno
pop
stc
movsl
data16
aad
loopne
pop
in
es
mov
mov
es
dec
push
mov
fnstcw
ds
leave
cld
mov
loopne
push
lods
test
and
fxch
mov
sub
push
mov
dec
xor
outsb
and
loopne
xchg
or
xchg
push
jns
sub
orl
in
dec
cmp
andb
lcall
out
push
rorb
ja
push
xlat
push
push
xchg
inc
mov
and
lods
movsb
nop
fcoms
xchg
and
push
mov
out
hlt
lret
xor
movsl
mov
mov
inc
shl
cltd
xchg
loope
mov
and
cltd
cmp
mov
mov
adc
dec
loopne
in
hlt
push
mov
xchg
mov
mov
es
inc
push
xchg
cmc
cmc
fnstcw
mov
hlt
cmp
out
dec
inc
inc
cmpsb
push
push
sbb
sub
testl
jl
sub
lcall
fcmovnu
jne
fstpt
int
push
scas
sahf
cld
lcall
ret
test
mov
shlb
jp
cmp
mov
and
xchg
mov
mov
mov
mov
and
test
jmp
adc
std
mov
jnp
mov
fldl
cld
push
push
fsubs
js
leave
repz
cld
inc
rorb
add
jg
lds
imul
inc
cwtl
mov
cmp
mov
sub
dec
andb
fs
fldcw
sub
mull
mov
mov
cmp
and
mov
push
enter
cli
outsb
and
push
push
lods
lcall
fxam
inc
loopne
jae
popa
jecxz
push
cltd
pop
lods
add
repz
mov
andl
popf
cltd
les
jmp
add
mov
and
lods
cmp
outsb
sahf
jge
nop
mov
or
dec
jge
sub
mov
inc
push
xlat
push
jo
xlat
push
push
mov
bound
mov
int3
cld
and
jge
xchg
cmp
jno
xchg
and
out
mov
jl
sub
cmp
cmp
mov
in
repz
and
enter
test
rcrl
add
daa
test
adc
bound
fxam
int
repz
inc
jo
test
xchg
and
xor
sti
mov
test
jno
dec
out
push
adc
mov
and
bound
cltd
fwait
repz
test
jp
and
rcll
imul
sbb
imul
and
int3
xchg
addl
jo
mov
insb
test
insb
int
mov
push
mov
pop
sar
test
fdivrl
pop
iret
jns
jmp
push
cmc
jg
fincstp
gs
fdivr
mov
idivl
xchg
jo
sbb
loop
int
lcall
cmpsb
cmc
cmp
dec
outsl
xor
pushf
add
add
fwait
lods
dec
or
add
cli
xchg
nop
and
sub
repnz
lcall
and
cltd
icebp
lods
mov
dec
sbb
cld
add
mov
stc
sbb
in
lods
je
fwait
mov
rcrl
or
loop
pop
lcall
jae
imul
mov
lods
fwait
mov
jmp
or
jb
fwait
sub
mov
or
loop
pop
lcall
mov
pusha
movsl
and
in
imul
popa
cli
js
fldenv
mov
cmpsl
and
lods
cld
movsl
mov
mov
jne
add
cmc
pushf
fcomip
imul
mov
movsl
and
movsl
xchg
cltd
test
mov
jmp
imul
cltd
leave
and
fld
cmp
jno
cltd
sub
and
lods
sub
dec
ja
gs
std
mov
sub
rorb
imul
nop
and
fwait
lea
loope
leave
xchg
jmp
pop
dec
cmp
fnstenv
lea
lea
mov
sbb
push
xchg
mov
and
jbe
cmc
jbe
test
mov
test
add
and
in
js
movsl
jbe
gs
shr
sbb
xlat
sahf
xlat
cld
aad
cld
lods
mov
int
lahf
in
jp
and
add
inc
lods
and
sub
and
imul
jp
and
add
mov
sbb
cmp
aad
push
js
test
or
aaa
adc
dec
push
rorb
inc
shlb
xchg
jnp
sbb
sbb
dec
test
dec
test
imul
cld
xchg
dec
mov
fidivrl
sub
pop
and
dec
clc
sar
dec
xchg
sbb
in
movsb
dec
add
jo
xor
icebp
in
mov
add
fisttpl
pop
ror
int3
popf
sti
imul
mov
std
xchg
hlt
leave
in
fs
lret
pop
cs
mov
outsb
mov
loop
insl
push
dec
je
xchg
lea
test
imul
pop
mov
jae
pop
and
test
jmp
mov
mov
insl
jb
ret
scas
xchg
mov
clc
fildll
leave
fucomip
js
gs
fisubs
add
cli
ja
js
shlb
add
scas
into
jne
add
jecxz
cld
std
push
jecxz
push
sbb
add
daa
xchg
and
inc
add
mov
xchg
cld
mov
mov
scas
fwait
call
push
jno
dec
mov
cmp
iret
xor
out
mov
loop
cmc
dec
in
sbb
int3
push
inc
pop
xchg
enter
mov
sbb
add
inc
idiv
cmpsb
into
inc
jno
jl
and
xchg
xchg
xchg
std
cltd
js
or
cmp
popa
cmp
test
repz
inc
pop
pop
adc
gs
shl
adc
fdivr
xchg
sub
adc
push
xchg
sbb
sub
mov
or
dec
push
popa
mov
ss
gs
and
jge
inc
flds
sarl
clc
xor
push
add
push
jmp
xor
in
cvtps2pi
bound
andnps
sahf
push
or
or
lock
int3
sbb
cmc
add
mov
mov
shll
sahf
pop
xchg
dec
sbb
imul
mov
ret
imull
lods
popf
adc
and
sub
arpl
cmc
xchg
and
popa
add
mov
mov
pop
nop
int3
and
pop
mov
out
clc
into
mov
out
dec
sub
mov
pop
jnp
add
loope
adc
andb
and
js
pop
mov
in
sub
and
sub
clc
pusha
xchg
in
pop
and
loopne
sub
daa
outsb
inc
dec
sub
sub
out
dec
jge
xchg
es
add
mov
xchg
jp
jns
and
and
jmp
jns
repnz
lcall
pop
pop
or
sub
add
lea
and
mov
xchg
xlat
rorl
jo
frstor
or
sbb
out
push
sub
xor
sbb
dec
cltd
cmp
sbb
jno
and
push
aaa
jno
in
lock
movsl
mov
iret
jo
lods
adc
and
lods
sub
and
ror
cltd
mov
jns
xchg
bswap
in
jl
std
sarl
je
popf
mov
pop
in
cltd
sti
cld
pusha
popf
sub
dec
sub
or
lcall
fcmovnu
insl
nop
loop
sbb
xchg
in
inc
or
add
inc
xchg
dec
mov
loop
dec
jns
scas
inc
cmp
out
loopne
mov
sub
fwait
xchg
and
loope
jle
sub
add
pop
imul
lcall
sub
dec
pop
dec
pop
fsts
mov
jns
std
push
lea
and
pop
sub
mov
xchg
push
mov
add
out
dec
jae
gs
jg
xchg
imul
out
or
pop
xor
popf
inc
scas
sbb
outsb
shl
mov
int3
stc
cld
imul
cmovs
dec
dec
xchg
or
adc
jg
cli
jge
or
mov
in
or
leave
inc
mov
imul
jns
inc
lret
icebp
or
sti
add
and
and
pop
fwait
adc
adc
sub
cli
test
adc
xchg
in
inc
in
cld
cmp
add
out
xchg
mulb
rcrb
outsl
add
inc
ret
dec
pop
push
cld
pop
xor
add
xchg
dec
imul
or
fbld
cmp
aaa
inc
mov
mov
shll
inc
push
stc
add
xchg
sub
into
gs
jbe
and
xchg
xchg
adc
sub
xchg
xchg
adc
and
popf
xchg
nop
lret
cmp
stc
cmp
lds
and
mov
cmp
bound
aaa
add
lods
cmp
add
mov
xor
mov
sti
and
and
add
xchg
lcall
insl
lret
pop
xchg
inc
pop
pop
push
inc
push
sub
and
push
sub
xchg
xchg
ds
test
add
cmpl
cmpsl
jns
inc
addr16
outsb
out
mov
cmpsb
addl
jnp
outsl
lds
adc
fstpl
testl
jns
cltd
push
or
or
ja
sub
cs
sub
jge
movsb
jmp
jge
int
cmp
mov
paddusw
aad
out
cli
sub
sbb
push
in
mov
in
int3
xor
fnsave
push
insb
sub
cmp
lods
or
cmpsb
imul
in
out
insl
sbbb
add
mov
in
mov
mov
stos
xchg
std
and
or
jmp
js
cwtl
shrl
cmpsl
std
pop
jge
and
mov
and
std
outsb
jno
addr16
and
jge
jo
inc
mov
dec
jo
stc
mov
jge
mull
mov
xchg
std
rcr
and
rcr
roll
and
and
mov
mul
cmpl
ret
fs
mov
in
cmp
mull
mov
lret
pop
decb
out
and
mov
jge
and
test
and
mov
jo
lds
dec
jge
sarl
stos
xor
imul
movsb
mov
xorb
mov
js
cmp
loope
and
sti
lcall
leave
or
movsl
jo
mov
cmp
lds
gs
std
in
in
cltd
mov
aas
loop
stos
and
xchg
lods
dec
jl
loope
lods
outsb
scas
lods
sub
sarl
xchg
lret
frstor
jp
add
lods
adc
pop
add
sub
add
in
xchg
and
stos
pop
add
pop
and
add
lods
xchg
and
std
xchg
add
and
sbb
mov
jns
fscale
fsubrp
test
js
and
adc
int3
jmp
add
ss
add
jmp
arpl
outsb
shlb
push
jno
add
adc
iret
imul
scas
mov
xchg
jns
scas
jno
loopne
cmc
jnp
and
rol
cmp
or
or
push
outsb
int
movsl
inc
ja
push
inc
test
fnsave
jns
dec
add
lahf
cmc
int3
push
jecxz
rorl
sub
push
test
loope
inc
cld
mov
lds
add
push
addl
mov
sbb
xchg
adc
cmpsl
xchg
fs
cmp
jle
insb
dec
add
shll
gs
or
adc
inc
into
fnsave
jb
xchg
cli
loope
lods
imul
cld
mov
xchg
imul
and
sbb
xor
leave
mov
movsl
or
sbb
mov
paddw
mov
inc
loope,pn
jecxz
pop
repnz
add
mov
loop
pop
add
mov
lds
mov
sbb
inc
adc
sti
inc
pop
add
dec
sbb
pushf
mov
add
fstpl
lds
icebp
adc
xchg
adc
xor
push
pushf
jmp
pop
movsl
xor
push
dec
fisubrl
mov
xchg
push
je
cmp
pop
fsts
std
popa
cmc
push
pop
cmc
ret
cmp
lock
and
dec
adc
sub
into
loopne
std
std
fisttpll
adc
lret
rorl
mov
jecxz
fldenv
cmc
rcrl
lods
push
push
push
rclb
aad
shll
in
icebp
std
xchg
lcall
cmpb
xchg
add
fiaddl
jl
aad
lock
and
pusha
int
push
movsl
and
sub
sbbl
leave
xchg
or
les
sbb
and
call
outsl
subl
rcrl
leave
loope
push
repnz
push
adc
and
lret
jle
jns
and
in
rorl
leave
in
mov
orl
mov
mov
mov
adc
and
loopne
mov
jmp
lods
aad
repz
lcall
mov
add
jge
fbld
popf
and
in
push
fisubs
inc
cld
imul
and
loopne
arpl
jnp
add
inc
adc
add
in
cmp
cmp
and
sub
sbb
mov
iret
xchg
and
fiadds
das
jne
pop
mov
cmp
push
cmp
cli
and
jno
into
popa
imul
movsl
mov
and
iret
mov
int
mov
xchg
int
sbb
jo
jno
and
popa
jle
mov
xor
dec
aam
and
fs
push
insl
in
jo
cmp
and
aam
add
sbb
shll
add
mull
mov
repnz
cmpsl
cmp
cmp
lret
test
cld
add
jbe
xchg
pushf
fldenv
ljmp
aam
roll
pop
insl
leave
in
and
xchg
pop
loope
popa
loope
fcoms
sbb
push
in
gs
sbb
add
int3
adc
icebp
dec
jbe
mov
add
and
push
gs
stos
out
testb
mov
ds
adc
mov
in
fdivrp
in
ja
loope
and
xchg
ror
mov
push
cmp
sbb
stos
std
mov
mov
jo
mov
cmp
jmp
stc
xorb
int3
jge
push
cli
pop
fstpl
in
lds
push
push
xchg
adc
nop
jae
push
adc
pop
push
fs
jns
sbb
lods
add
fidivl
lds
mov
in
inc
cmp
push
in
mov
mov
cli
lock
pusha
sbb
lock
lock
lock
lock
lock
lock
pusha
inc
cld
or
stos
xor
into
lds
lock
sbb
lock
fdivr
arpl
xchg
or
flds
stc
push
fadd
hlt
std
enter
mov
dec
fwait
jecxz
std
leave
jecxz
sbb
loop
xor
loop
add
pusha
gs
sbb
icebp
in
pop
xchg
out
add
nop
push
inc
outsl
andl
push
loope
xchg
aaa
icebp
mov
loope
sbb
int3
xchg
mov
push
jns
push
xor
or
mov
and
xchg
loopne
inc
or
jae
pop
shll
cs
or
ret
test
fnstenv
dec
sub
add
cwtl
and
and
sbb
repz
testl
adc
std
sub
cwtl
dec
cmp
std
ss
cmc
and
adc
add
stos
cmpsb
std
sub
dec
out
dec
popa
cmc
xchg
testl
adc
and
lret
lea
and
lea
adc
pop
out
adc
in
cmc
mov
mov
dec
cmc
mov
cmc
les
xchg
into
and
mov
mov
mov
and
add
sub
xor
xchg
pop
out
sbb
aad
int
lahf
cld
int3
lods
push
dec
cs
cmp
lea
out
mov
imul
test
lret
mov
jne
and
fldl
push
jae
ds
gs
or
fldl
mov
mov
cltd
je
adc
and
cltd
or
ret
dec
xor
lahf
adc
xchg
lahf
lahf
inc
bound
inc
sub
imul
fucomip
loope
mov
popa
adc
cmp
add
sti
xchg
loope
mov
or
loop
mov
sahf
arpl
rol
add
lds
and
subb
mov
ret
leave
mov
stc
jmp
add
mov
and
scas
lea
lock
lock
sar
mov
push
dec
das
imul
ret
std
out
mov
sbb
sbb
xor
pop
mov
sub
push
loope
xchg
sub
cmpsl
clc
inc
out
dec
arpl
sub
js
test
and
pop
mov
mov
xchg
mov
cmp
and
push
xchg
in
frstor
shlb
fldl
std
add
in
cld
fsub
and
fnsave
adc
pushf
jmp
cmc
cmovae
gs
push
rol
and
mov
gs
sub
jmp
mov
xchg
in
rorl
repz
mov
popa
int3
cld
test
mov
xor
dec
xchg
cmpsl
int3
loope
mov
mov
adc
cwtl
push
mov
mov
and
jne
and
sub
cmpsb
cmc
aas
fwait
mov
and
out
mov
and
and
push
movsl
frstor
jne
mov
jmp
ret
mov
and
cmp
pop
mov
out
das
and
fnsave
popf
xchg
or
sub
cmp
xchg
sub
mov
mov
jmp
jae
lods
and
jge
jb
add
xchg
add
cmpb
cltd
xchg
xor
dec
inc
or
icebp
pushf
fprem
flds
leave
mov
jl
cld
xchg
and
mov
jge
js
dec
and
cmp
add
fxam
jbe
jmp
int
and
add
and
and
loopne
mov
push
mov
enter
stos
and
aaa
es
jbe
jmp
rorb
push
and
xchg
xor
cmp
and
vpunpckhbw
jns
sub
fsts
fcmovu
jmp
push
jmp
mov
frstor
and
cs
leave
xchg
mov
add
pop
jge
add
and
and
and
int
icebp
mov
dec
pop
icebp
ret
les
or
rcrl
cltd
add
pop
pop
rcrb
add
push
test
xor
mov
mov
xor
ja
push
sub
mov
roll
mov
popa
icebp
xor
xchg
mov
fldl2t
cli
int
and
xlat
rolb
add
insl
je
outsb
jmp
pusha
adc
cld
jmp
push
sub
loop
xchg
pop
popf
mov
loope
popf
jmp
gs
xchg
pop
fnsave
and
fidivrl
push
rcr
or
test
sub
xchg
leave
and
je
mov
ret
xchg
out
int3
jno
aas
add
setno
mov
mov
mov
loop
adc
cltd
icebp
leave
xchg
out
and
push
or
adc
dec
mov
imulb
push
icebp
rorb
jnp
aam
int3
mov
in
out
test
mov
cmp
leave
cwtl
jmp
mov
xchg
jp
mov
js
cmp
adc
pop
mov
cmpsb
je
push
jp
sub
fdivl
mov
dec
idivl
or
dec
gs
jae
mov
int3
leave
out
std
sub
add
in
or
sbb
ss
push
out
lret
mov
fdivl
mov
repz
repnz
hlt
ds
vunpckhps
add
in
fstp
cmc
out
xorl
lret
xor
fwait
and
imul
fstpl
aaa
ficoms
pop
dec
jne
sub
adc
fnsave
xlat
lods
cmc
test
fcmovu
stos
xchg
pushf
ficoml
jmp
test
fdivl
sti
or
out
dec
cmc
jmp
stc
movsb
pop
in
std
in
fnstsw
sti
je
push
mov
jno
mov
inc
cmp
rcr
lret
frstpm(287
fucom
pop
sti
fisubl
lret
fsubp
fisttpl
mov
push
fsubrl
out
fildl
out
mull
mov
or
aad
fstpl
fdivl
aas
inc
lds
dec
fs
add
cmp
vcmppd
test
mov
aad
lds
rclb
outsb
je
movsl
fstsw
les
push
pop
ljmp
xchg
repz
iret
cltd
pop
or
fs
std
aaa
aam
ficomps
mov
mov
xor
rcl
pop
mov
mov
mov
loopne
jecxz
mov
movsl
sub
aam
out
and
icebp
xchg
sti
adcl
sti
xor
cmpsb
andb
xchg
mov
call
cltd
mov
movsl
sti
mov
jb
out
cmpsl
in
xor
pop
dec
pop
mov
adc
and
dec
push
dec
lds
icebp
adc
xorl
mov
mov
jns
test
test
out
rcrl
std
andl
sbb
sar
pusha
inc
pop
sub
andl
mov
dec
mov
repnz
add
sahf
jecxz
popl
pop
jecxz
mov
movsb
pop
jl
repz
loope
cltd
imul
jecxz
icebp
pop
dec
pusha
add
cltd
pusha
jl
ret
or
lret
popf
mov
add
mov
mov
mov
jge
movsb
mov
das
cltd
ret
or
add
cltd
lret
push
stos
dec
jno
test
std
or
and
mov
sbb
mov
les
bound
sub
sbb
out
fildll
lods
xchg
dec
and
daa
add
stos
lods
pop
pop
test
popa
pop
jg
imul
sbbb
push
ret
add
stos
rcrl
push
sbb
push
cwtl
in
in
xchg
out
jl
ds
ret
push
les
sbb
stos
loopne
lahf
adc
loopne
aam
lea
leave
sub
xlat
imul
or
add
xor
fs
inc
repnz
push
sbb
jge
addr16
sti
or
jo
push
hlt
mov
es
adc
sbb
loop
xchg
jmp
cmp
in
xchg
sti
ljmp
fwait
sbb
dec
add
jnp
mov
or
in
mov
add
cltd
adc
cmp
aaa
andb
pushf
test
add
rorb
sub
sub
movsl
in
inc
jae
sahf
xor
or
mov
ror
pop
leave
mov
jmp
xor
push
mov
into
xchg
lds
movsb
pusha
aam
movsl
leave
icebp
cltd
xor
xor
ja
add
push
out
jle
pop
movsl
cmp
repz
jo
mov
cmp
test
lcall
ficoml
popf
test
fbld
test
andl
lcall
test
lahf
loop
test
and
ret
mov
scas
leave
gs
or
mov
mov
cmp
add
cmp
add
fnstenv
pop
rorl
imul
std
cltd
push
lea
ret
lods
mov
ficompl
sub
shll
adc
mov
mov
nop
test
xor
imul
lret
imul
xchg
jmp
imul
or
push
nop
pop
out
cli
imul
xchg
cmc
test
and
mov
fnsave
jae
dec
sbb
arpl
test
push
les
mov
mov
adc
pop
test
sub
lcall
jl
xchg
lahf
mov
rorb
dec
mov
stc
addl
mov
rcl
mov
mov
jno
xchg
inc
sub
dec
sti
lods
mov
frstor
test
mov
dec
lea
in
push
mov
mov
xchg
add
dec
sub
jmp
mov
cmp
adc
mov
test
add
test
std
sti
mov
std
and
rorb
mov
mov
xchg
mov
pop
xchg
in
mov
inc
cmpl
fnsave
in
sub
push
pop
dec
push
jnp
and
rcrl
imull
and
push
cmpsl
lea
fldcw
mov
std
mov
lcall
out
pop
xchg
sbb
mov
sub
test
pop
fcmove
ret
sub
cmpsl
rcr
call
adc
fisttps
or
cltd
test
out
cli
jae
sbb
pop
add
cld
adc
loope
ljmp
leave
flds
xor
outsl
and
jecxz
cmc
inc
jl
rcr
mov
repz
cmpsb
into
jae
jg
movsl
cld
fwait
shll
mov
add
in
iret
rclb
add
adc
lock
fsubs
cltd
sub
decb
imul
loop
scas
and
loopne
cltd
dec
fwait
out
fwait
sbbb
or
rcrl
adc
leave
scas
leave
jmp
lahf
es
and
pop
fs
int3
addb
push
leave
aad
lret
jns
jmp
movsb
nop
push
jns
push
hlt
int
add
jmp
dec
mov
push
push
pop
leave
sub
outsl
popf
cmp
test
pop
popf
xchg
rclb
or
les
dec
jl
sbb
xchg
xchg
cmp
mov
pushf
in
test
dec
les
shr
shr
arpl
cmp
pop
pushf
leave
adc
shl
push
add
lcall
xchg
dec
sub
mov
dec
adc
in
icebp
fnsave
mov
out
cli
in
test
lods
mov
mov
mov
sti
cmpsl
hlt
leave
mov
dec
pop
popa
cli
sub
jmp
push
rcrl
mov
add
fsubl
pushf
jmp
loop
xchg
add
cmp
mov
xchg
push
fs
mov
scas
data16
cld
adc
shrl
and
roll
dec
mov
jp
pop
popf
dec
fyl2x
cmc
jno
xchg
xchg
sub
cmp
xor
lret
icebp
add
icebp
dec
in
enter
dec
sbbl
add
insl
push
cmpsb
loope
shr
in
sbb
jecxz
push
icebp
faddl
iret
pop
sahf
inc
in
ljmp
sti
pop
sahf
xor
stc
cli
in
jns
loope
pop
pop
sahf
inc
lcall
enter
negb
leave
popf
or
cltd
rol
xchg
mov
or
inc
inc
int
testb
jecxz
rorl
stc
test
inc
mov
shll
aam
sub
sbb
mov
mov
rcrl
in
mov
mov
or
mov
test
stos
sarl
icebp
pop
movsb
inc
sub
push
sbb
icebp
pop
dec
inc
enter
test
cmp
add
les
mov
add
iret
sar
popf
dec
sub
dec
cmp
pop
add
fsubl
inc
andb
dec
lds
pop
sahf
pop
jmp
inc
fildl
daa
and
in
fnstcw
in
fwait
cld
and
xor
data16
xchg
xchg
add
lods
repz
pop
shlb
pushf
adc
or
mov
sbb
repnz
cmc
gs
xchg
pop
xor
jecxz
pushf
push
les
in
add
cs
incl
shrb
push
iret
sar
int
addr16
fcomps
jmp
daa
insl
pushl
sub
cld
lods
inc
jmp
inc
decl
sbb
adc
rorl
xor
push
cmc
les
xor
jge
rcll
decl
orl
jge
dec
movsb
std
add
les
mov
xchg
add
sahf
loope
shrl
mov
sbb
cmp
xchg
fucomp
mov
ftst
jno
leave
scas
addl
es
sub
leave
pop
test
enter
aas
sub
xchg
jg
push
xchg
cld
call
jp
dec
es
push
mov
insl
pop
and
lcall
xchg
test
jl
rep
shll
adc
lods
int3
pop
pop
jns
mov
ret
cld
mov
test
cmp
insl
mov
jecxz
adc
out
mov
cltd
add
mov
xchg
inc
test
jge
pop
adc
arpl
cmp
jge
dec
in
push
jp
add
push
rcr
push
add
jmp
aaa
repnz
or
inc
in
mov
fisttpl
sub
mov
sbb
push
ljmp
jo
imul
xchg
inc
mov
cmpsb
sbb
cmp
fsubr
movsl
iret
addl
sub
outsl
movsb
mov
fnstsw
mov
test
adc
std
hlt
adcl
xchg
rolb
in
xchg
aad
jo
mov
icebp
add
out
mov
add
xor
add
and
sub
or
fimull
stos
and
mov
hlt
loopne
andl
stc
icebp
or
mov
sti
stos
cmc
in
mov
lds
aas
xor
push
ljmp
sub
stos
loopne
push
or
dec
cmc
lret
lds
leave
negb
sub
jbe
lds
cmc
gs
std
adc
or
dec
test
out
add
gs
add
leave
xchg
gs
push
and
dec
js
add
xchg
sub
push
nop
or
and
leave
push
jns
push
leave
jns
sub
leave
pop
cld
pop
fimuls
push
push
fsts
shl
stos
pop
lcall
jecxz
shll
xor
call
mov
adc
add
cmpb
lret
movsl
andb
shrl
mov
and
cltd
mov
sbb
or
sub
dec
jp
jns
fdivr
adc
paddusw
movsl
sbb
sub
xchg
imul
xchg
pop
aad
xchg
or
stc
xchg
lcall
jae
mov
xchg
arpl
ret
pop
int3
lret
movsb
negl
add
dec
mov
shrl
pushf
pop
shlb
cmpsb
popl
in
push
mov
aam
arpl
push
jle
or
cmp
icebp
sbb
cmpsl
mov
int
icebp
hlt
fldl
movsl
or
ret
or
mov
lea
cwtl
jecxz
jbe
mov
or
mov
xchg
int
mov
adc
or
es
les
test
inc
loope
nop
cmpb
xchg
mov
mov
xchg
fldl
xchg
jno
fs
es
jnp
jne
int
movsl
cld
lods
inc
mov
ret
push
jnp
jns
pop
jne
imul
arpl
jecxz
stos
cmc
xor
rcr
dec
imul
ds
jg
lcall
mov
not
insl
mov
mov
adc
shr
ja
sub
mov
cmc
cmp
jle
mov
gs
sbb
sbb
pop
stc
mov
mov
sahf
cli
mov
stc
pop
pop
lcall
aas
push
mov
dec
call
rcrw
aad
scas
push
xorb
notb
movsl
xchg
aad
xchg
stos
fscale
lahf
rorl
dec
xor
mov
mov
jbe
dec
movsb
iret
mov
dec
sbbl
add
std
fstl
xchg
push
and
nop
sub
sub
loope
add
xor
cltd
lds
les
data16
in
sub
fdiv
cld
ret
movsb
jmp
test
out
out
shll
xchg
adc
movsb
fnstcw
fists
add
int3
cmc
loopne
rcrl
insl
add
stc
imul
ret
mov
xchg
ret
mov
push
xchg
sbb
push
icebp
mov
push
pop
cmpsb
jno
mov
aas
or
mov
mov
addr16
mov
mov
pop
faddp
popa
push
sub
insl
inc
add
xorl
std
icebp
lea
adc
in
dec
dec
imul
add
mov
repz
fadds
adc
push
xchg
sahf
cltd
pop
stc
mov
sub
cmpsl
ja
mov
movsl
xchg
loope
inc
dec
loope
out
iret
out
jl
add
or
sahf
adc
or
push
jmp
daa
jmp
ret
jmp
into
xor
inc
jns
adcl
or
mov
pop
mov
push
pop
ljmp
aas
mov
jecxz
xchg
mov
enter
mov
xchg
or
sub
push
xchg
cmp
mov
outsl
imul
push
lds
shrl
sbb
sub
add
add
push
pop
mov
add
mov
mov
pusha
mov
repnz
jnp
xor
imul
cwtl
stos
xor
scas
lahf
int
add
dec
std
movb
test
lods
in
jecxz
les
xchg
add
push
jo
icebp
movsb
mov
test
and
adc
rorl
mov
pop
mov
and
repz
jmp
push
push
mov
je
lea
mov
xchg
shlb
aad
stc
xlat
mov
iret
pop
imul
arpl
dec
insl
jge
dec
leave
mov
movsl
xchg
testb
mov
es
dec
jge
dec
add
repnz
out
gs
xchg
mov
jns
mov
pop
lods
pop
lcall
mov
or
ss
ss
lret
add
out
add
push
xchg
cltd
in
pop
fsubrl
aad
cs
fldt
popf
lahf
shrb
mov
mov
dec
xchg
adc
loopne
cmp
push
aas
pop
cmp
popa
insl
out
lret
inc
mov
cmp
xor
jbe
mov
aad
fdivrp
aad
shl
lds
addb
push
out
push
ljmp
jmp
sub
test
sbb
notb
movsl
sahf
and
add
pop
or
gs
stc
mov
aad
and
popa
inc
aad
fucompp
xchg
addl
dec
popa
cmp
daa
ret
and
mov
cld
push
inc
or
add
fldl
lret
pop
ret
add
add
scas
xchg
lock
das
stos
and
mov
test
mov
iret
iret
fsts
sub
lret
jecxz
xchg
dec
scas
mov
mov
xchg
adc
lcall
fstps
or
lret
sub
add
decl
jne
ljmp
pop
andl
iret
enter
setp
mov
pop
push
mov
into
adc
fnstcw
mov
mov
cmpsl
leave
push
jmp
out
icebp
lret
in
lret
lds
fdivrl
fadd
adc
and
and
xchg
lds
stos
pop
mov
int
aad
xchg
scas
push
sbbb
or
lret
and
xchg
cmpsb
push
xor
scas
sub
push
insb
lahf
aad
shlb
inc
sbb
or
addr16
dec
out
pop
mov
flds
push
notb
dec
enter
icebp
scas
sbb
test
cltd
pop
and
imul
push
sbb
in
pop
add
push
inc
or
sbb
inc
or
adc
or
fs
sbb
in
mov
mov
mov
mov
std
scas
ljmp
subb
xor
test
xor
mov
cmp
test
nop
ret
jg
pop
roll
iret
imul
enter
stos
rorl
cmp
mov
and
icebp
shll
jne
movsb
shll
mov
ret
xchg
lds
jmp
iret
shll
test
add
lret
xchg
dec
jnp
sub
nop
fstps
fistpl
in
test
sub
dec
mov
mov
xchg
pusha
xor
pop
push
insb
add
mov
out
leave
shlb
and
and
lahf
std
addr16
in
ja
jle
test
and
mov
loope
mov
enter
mov
aaa
stos
sahf
jae
iret
iret
clc
jne
out
shr
stc
and
daa
lahf
xchg
mov
mov
ja
xlat
jae
addr16
sti
cmpb
roll
jae
imul
out
jae
hlt
pop
mov
jne
leave
repz
pop
add
int
int
dec
into
aad
or
scas
push
scas
xchg
fists
loop
jnp
movsb
mov
fstl
push
sti
dec
outsl
sarl
xchg
sahf
imul
aad
mov
jnp
fs
mov
sub
ret
sub
icebp
popf
stos
jb
dec
cltd
adc
lods
aad
jmp
mov
bswap
loope
iret
mov
orl
lea
je
ljmp
shrb
or
and
add
inc
and
leave
jne
test
cmp
sti
fsubp
les
and
hlt
and
push
push
orb
sahf
inc
sbb
fwait
sbb
xchg
dec
mov
cmp
xor
mov
aas
xchg
sti
mov
std
cmp
mov
xor
outsb
mov
jge
addr16
inc
dec
mov
add
out
or
push
es
cmpsl
mov
test
sub
pop
or
ljmp
cmpsl
imul
movsb
adcl
mulb
mov
imul
add
out
leave
out
in
sub
mov
je
leave
pop
add
sarb
and
sub
stos
popa
les
xor
lret
mov
mov
mov
fwait
push
jg
aas
scas
dec
xchg
or
std
scas
jge
inc
test
mov
dec
push
daa
orb
jnp
push
shlb
mov
imul
or
jg
or
mov
hlt
ret
in
call
dec
cs
dec
scas
jg
dec
int
stc
fcoml
mov
mov
jg
xchg
xorl
lcall
add
adc
xchg
mov
xor
mov
arpl
aaa
and
jmp
add
das
push
ror
in
push
sahf
jnp
das
mov
stos
adc
push
sbbl
cmp
leave
stos
push
or
lahf
inc
imull
bound
ret
pop
mov
outsb
icebp
jp
add
lret
adc
cmp
icebp
jns
cmovnp
out
inc
popf
out
adc
mov
and
and
ret
jb
push
dec
aam
stos
daa
or
hlt
ja
push
add
sbb
loope
add
addb
sub
movsl
popa
orb
mov
shlb
and
cli
pop
cmpsl
or
loope
cmc
inc
out
insl
movsb
and
cmp
insb
cmpsl
flds
popf
xor
mov
test
shrl
sbb
dec
mov
cmc
rclb
lcall
add
and
mov
mov
int3
icebp
add
mov
xchg
stos
addr16
sbb
fwait
dec
and
outsl
adc
xor
std
add
sbb
xchg
jmp
xor
sti
mov
in
xchg
jge
add
sbb
mov
mov
xchg
add
mov
xlat
imul
leave
das
xlat
fwait
dec
ds
xchg
xchg
add
aas
dec
inc
adc
xchg
std
and
out
lods
jecxz
push
inc
scas
push
repz
pop
add
cmpsl
ret
or
shr
rorb
ljmp
mov
hlt
mov
dec
cmpsl
push
xchg
sahf
and
cmpsl
adc
push
adc
ret
xchg
push
jle
shl
push
or
sti
cmpl
iret
cld
stos
mov
sahf
or
dec
or
cmpsl
insb
int
pop
js
and
fwait
pop
xchg
hlt
push
mov
dec
pop
mov
xchg
hlt
div
xlat
push
lcall
sbb
adc
hlt
sarl
pop
aad
add
or
arpl
dec
and
mov
leave
cmc
mov
repnz
and
repnz
xor
sbb
andb
ret
mov
jmp
mov
mov
jnp
inc
and
or
sti
adc
incl
xor
add
or
add
test
pop
test
aas
mov
inc
push
imul
xchg
mov
dec
and
mov
mov
xchg
jp
jle
scas
pop
cmp
mov
lret
decl
push
cmp
mov
adc
push
lds
leave
ret
les
mov
pmullw
hlt
mov
stos
sbb
or
aaa
mov
lahf
cmp
stos
and
or
and
dec
in
dec
xlat
sbb
sbb
fisttpl
nop
mov
adc
inc
cmpsl
xchg
dec
adc
mov
orb
movl
xchg
push
stos
stos
ja
stos
rcrb
mov
adc
xor
fildl
out
mov
imul
rcr
add
arpl
push
sbb
cld
sub
in
mov
dec
repz
add
bound
adc
mov
repz
dec
and
lea
dec
aas
stos
push
xor
popf
or
jns
fcompl
test
outsl
dec
push
mov
dec
push
movsb
xor
movsb
adc
mov
pop
xor
jo
and
push
add
daa
mov
or
cmp
pop
mov
int3
fmull
cmp
jnp
and
mov
pop
xchg
repz
sarl
mov
cmp
std
cmpl
mov
andl
loope
adcl
mov
in
pop
movsb
daa
cmp
jns
and
lea
leave
repz
push
xlat
or
jae
add
cmpsw
push
les
jne
aad
and
lret
fwait
movsb
jge
iret
filds
insl
popf
xor
jmp
pop
stos
add
shr
sbb
leave
push
test
movups
sub
jnp
std
jg
daa
xor
lcall
push
adc
sub
adcl
pop
mov
rorl
mov
cmp
shrl
sub
and
mov
arpl
add
sub
fldenv
pop
cmp
mov
pop
movl
xor
jbe
imul
xchg
shrb
cmp
call
ja
xchg
leave
daa
sub
clc
jmp
repnz
xchg
orl
mov
dec
cmp
ret
push
sub
dec
jp
sub
adc
arpl
mov
inc
xchg
cmp
mov
stos
xchg
mov
push
pusha
cltd
sub
repnz
mov
daa
xchg
jg
jne
ja
dec
mov
or
mov
and
cltd
dec
inc
adc
test
iret
enter
shlb
iret
stos
adc
xchg
mov
adc
mov
jno
cmp
inc
cmp
adc
scas
mov
ret
mov
jle
stos
jecxz
fxam
xor
daa
popa
cmpsl
adc
pop
xchg
mov
movsl
pop
inc
sub
jge
push
insl
dec
neg
leave
insl
mov
mov
icebp
dec
adc
adc
mov
sti
mov
xor
stos
add
push
dec
cmpsl
mov
push
icebp
mov
or
push
movsb
or
sub
and
mov
mov
dec
nop
in
or
xchg
hlt
inc
mulb
iret
ret
mov
cmpsb
mov
xor
fistpll
add
lods
mov
cmpl
pop
add
gs
leave
jns,pn
arpl
scas
push
sahf
shll
popa
jge
mov
in
jmp
fisttpll
imull
testl
jnp
add
xchg
inc
or
or
stos
sahf
jmp
incl
push
pop
mov
mov
fwait
fwait
dec
cmpl
and
out
sbb
test
lahf
je
jmp
stos
push
int
cmp
dec
jmp
adc
out
and
mov
int
addl
mov
leave
xchg
ss
out
dec
bound
xchg
and
leave
push
mov
mov
add
js
sub
push
dec
mov
jno
push
arpl
stos
out
dec
mov
fwait
lods
movl
add
mov
jg
xchg
mov
movnti
adc
lods
and
mov
sbb
cmc
xchg
pop
xchg
movsl
jns
inc
movsl
xor
pop
cmpsl
lds
xchg
jg
xor
dec
jge
imul
lahf
and
stos
add
inc
pop
or
mov
std
arpl
jmp
xor
outsl
std
stc
mov
push
sbb
cmp
push
leave
xchg
mov
lret
mov
dec
and
push
test
dec
repz
stos
or
cmp
and
jae
cld
dec
cltd
jo
leave
mov
lods
test
stos
leave
cmp
test
movsl
imul
xchg
mov
lahf
mov
push
pop
mov
dec
pop
cli
cmpsl
test
sbb
popf
pop
incl
fsubrl
and
jg
call
push
jge
loop
out
or
adc
int
shl
popf
xchg
sub
popf
jecxz
and
mov
adc
mov
add
dec
and
cld
add
lret
leave
inc
mov
std
ror
xchg
leave
aad
xor
gs
push
outsb
inc
js
gs
iret
scas
mov
bound
or
jecxz
leave
sbb
xchg
sub
jmp
in
fwait
mov
adc
int3
push
xchg
pop
cmpsl
inc
push
rolb
or
xorb
push
das
in
lods
mov
xor
fldenv
arpl
sub
dec
sub
xor
mov
leave
icebp
xor
fstl
and
std
out
aad
pop
inc
flds
daa
push
enter
and
mov
fbld
xor
jmp
cmp
xlat
aas
xchg
sbbb
push
or
sub
mov
or
nop
sbb
stos
and
repnz
mov
mov
fisttpll
cs
jmp
outsl
stos
rolb
mov
add
hlt
imul
lcall
xchg
or
dec
cwtl
mov
test
outsl
cwtl
pop
das
in
data16
mov
jmp
xchg
pop
mov
sti
outsb
and
xor
outsb
negl
shrl
add
mov
lcall
xchg
and
xchg
mov
std
push
adc
and
inc
mov
addb
shrl
popa
leave
mov
mov
sub
dec
daa
cltd
adc
insl
sub
andw
xchg
inc
inc
ret
jns
or
jno
mov
test
jg
mov
ja
mov
in
js
mov
repnz
push
imul
lahf
mov
mov
xor
pop
nop
int3
out
mov
mov
lock
imul
imul
add
jno
push
and
or
inc
stos
stos
or
mov
fsubs
cmp
cltd
fs
mov
cmp
mov
cmp
sub
xor
addb
js
dec
insl
stos
push
cmp
stos
imul
and
outsb
imul
inc
subb
test
stos
mov
inc
cltd
imul
stos
push
jecxz
rol
stc
sti
sbbl
mov
je
dec
xchg
push
ffree
push
mov
inc
xchg
insb
push
loop
mov
adc
cwtl
pop
mov
nop
jnp
repz
subl
inc
mov
dec
in
pop
push
int
iret
mov
xor
punpckldq
mov
xor
xchg
and
cmp
nop
push
mov
xchg
sub
inc
clc
add
pop
sbb
scas
mov
dec
pop
xor
and
pop
repnz
add
les
push
dec
icebp
test
dec
adc
fldt
lods
dec
leave
xchg
insl
test
mov
movb
cmpsl
push
lock
jecxz
repz
adc
jno
dec
and
cmpsl
dec
push
mov
mov
xor
ja
cltd
dec
ret
jmp
imul
pop
movzwl
outsl
mov
dec
xlat
icebp
mov
std
xchg
push
xchg
cld
mull
stos
mov
xchg
scas
stc
dec
add
test
imul
mov
lods
and
stos
pop
stos
cmpsl
stc
cmc
or
mov
sub
in
pop
or
sub
cmpsl
mov
dec
mov
dec
inc
mov
jg
and
adc
mov
push
jl
neg
dec
mov
mov
push
inc
and
or
add
add
xchg
enter
push
mov
jns
dec
stos
addb
fsts
sub
or
addr16
xor
and
add
test
push
add
dec
dec
and
mov
mov
inc
int
push
mov
mov
rolb
xchg
inc
mov
imul
jnp
fadds
mov
dec
add
cmp
sahf
popa
shll
jo
icebp
js
mov
mov
jl
scas
lret
stc
inc
ja
push
add
popa
and
fistpl
hlt
mov
mov
mov
xor
nop
jb
inc
add
xor
std
push
enter
in
cmpsl
mov
dec
mov
xchg
xchg
stc
xchg
adcb
mov
push
sub
stos
pop
dec
cltd
sub
jno
js
xchg
js
push
xchg
jbe
jnp
inc
or
stos
andl
aad
inc
inc
mov
insl
lahf
dec
jae
jg
mov
mov
lds
icebp
mov
sub
mov
xor
test
sti
out
pop
cmpsl
jge
test
mov
pop
push
cmp
push
mov
mov
leave
xchg
mov
lahf
mov
jae
mov
stos
mov
xchg
mov
dec
mov
shrl
xchg
lahf
mov
ret
mov
in
xchg
and
aaa
js
dec
push
cli
sbb
pop
repz
dec
ss
push
push
push
js
jle
cltd
shl
mov
stos
sub
and
js
inc
cmpsl
aam
add
jecxz
aad
xchg
xchg
ret
inc
xchg
ja
xchg
loopne
aaa
cmp
push
xchg
mov
and
pop
scas
movsl
mov
xchg
add
dec
fs
and
loope
xchg
inc
data16
or
loope
jp
js
add
outsl
int
fists
nop
mov
enter
add
mov
push
xor
xor
and
test
stc
sbbb
push
sub
jbe
sub
movsl
mov
push
addr16
test
xor
xchg
sarb
aaa
xchg
in
les
pop
mov
repnz
dec
mov
ljmp
jmp
stos
xchg
jnp
jnp
cwtl
lock
add
mov
push
or
rorb
push
jns
les
xchg
push
popf
sub
sub
cmpsl
jbe
xor
daa
xor
lea
xor
mov
xchg
imul
inc
push
aas
push
mov
jo
mov
mov
add
leave
or
dec
jb
mov
push
jb
fnsetpm(287
lcall
pop
ficomps
push
in
out
imul
jnp
cli
xchg
inc
xchg
fbstp
push
xchg
and
nop
es
test
lods
dec
pop
add
xchg
jg
jae
das
xchg
jbe
xchg
mov
frstors
sahf
fistpl
insl
imul
or
push
pop
mov
cmp
cmpsl
idivl
xchg
xchg
mov
pop
jge
mov
pop
inc
adc
sbb
dec
movsb
mov
adc
mov
add
nop
ja
xor
aaa
movsb
mov
mov
sub
shlb
sub
inc
cmp
dec
xchg
pop
scas
test
les
ja
cmp
add
dec
clc
fists
dec
mov
dec
xchg
scas
push
pop
sarl
jo
adc
mov
xchg
pop
sub
les
das
xor
aas
pop
or
inc
mov
nop
mov
test
xchg
dec
movsb
cmp
xchg
mov
xchg
inc
daa
and
xlat
les
push
idivl
sub
scas
mov
add
mov
dec
in
cmp
stos
xchg
aaa
or
repz
xchg
scas
add
outsb
or
cltd
in
xchg
nop
adc
daa
push
sub
mov
lea
stos
aaa
mov
mov
leave
stos
mov
repz
adc
xchg
mov
inc
xchg
xlat
pop
mov
ja
arpl
stos
xchg
bound
sub
or
ds
mov
emms
fldl
push
xchg
mov
jmp
out
sbb
jo
xor
xchg
sub
push
xorb
mov
inc
xchg
mov
mov
xchg
sbb
jnp
int
in
fwait
push
add
inc
adc
mov
adc
sub
and
arpl
rcl
outsl
dec
dec
inc
inc
or
stos
mov
pop
push
out
inc
adc
test
mov
test
mov
mov
cs
jmp
test
cltd
dec
mov
scas
xor
nop
aad
stos
cmp
shll
dec
pop
imul
xchg
or
testl
jno
pusha
inc
mov
out
xchg
ret
rolb
push
repz
insl
pop
js
mov
xor
mov
and
push
xchg
dec
pop
dec
or
mov
mov
mov
jmp
mov
es
and
mov
sub
add
ljmp
clc
icebp
movsb
mov
xor
jnp
inc
inc
enter
les
push
jmp
add
mov
or
mov
lret
andb
and
mov
out
cmp
lods
cli
daa
mov
push
fdiv
cli
daa
mov
xchg
push
fwait
inc
jle
xchg
incl
mov
adc
out
out
add
aaa
push
test
xorl
add
push
lods
jnp
aad
mov
inc
lahf
cltd
mov
adc
mov
mov
iret
xchg
push
mov
adc
xor
iret
and
push
inc
imul
and
mov
sub
push
xchg
fists
dec
jnp
xlat
cmpsl
fldl
jb
stos
jmp
in
cmpsl
mov
and
inc
jge
movsl
mov
mov
movsb
adc
xchg
xchg
and
iret
cmp
push
repz
sbbl
adc
frstor
mov
cmp
rolb
daa
ja
xor
addr16
xchg
xor
sub
mov
pushl
nop
inc
inc
inc
mov
mov
mov
adcl
xor
jle
idivl
cmp
cmp
add
loope
mov
repnz
sub
sbb
mov
sbb
push
or
xorb
std
notl
mov
inc
and
push
lds
cld
jae
outsl
jecxz
sub
les
cmp
add
lds
adc
stos
jae
pop
daa
sub
sub
mov
mov
stos
scas
inc
mov
xchg
mov
int
mov
adcl
shr
add
cmovnp
xor
outsl
or
adc
pop
and
nopl
out
push
inc
mov
push
sub
mov
xchg
lret
jbe
notl
mov
icebp
and
inc
jnp
scas
inc
or
cmp
cmp
xchg
cmp
ret
xor
xchg
movb
jne
mov
inc
test
dec
in
or
cmp
add
jnp
mov
mov
ss
push
into
stc
and
std
in
filds
test
cltd
mov
int
xchg
add
jo
pop
xor
xchg
jmp
movsl
inc
mov
dec
cmpsb
mov
in
mov
icebp
jmp
movsl
xchg
mov
xchg
push
aaa
out
jge
pusha
std
leave
add
nop
outsl
mov
mov
lret
dec
lods
call
pusha
cmp
in
cmp
pop
idivl
xchg
out
add
dec
mov
sub
dec
cmp
adc
cmp
xor
xorb
mov
xchg
lock
sub
xchg
movsl
cmpsl
cmp
mov
dec
jb
sub
push
loope
mov
or
insl
xchg
xor
cmp
mov
xor
nop
repz
mov
or
sbb
pushf
push
mov
cmp
jl
stos
or
jae
inc
push
jle
mov
or
mov
xchg
pusha
cmp
ret
es
jge
cmp
es
mov
addr16
stc
push
and
popa
mov
sub
jno
sti
mov
nop
dec
inc
push
and
ret
mov
aam
pop
dec
ja
lahf
dec
orb
xchg
js
notl
sbbl
ja
jns
mov
cmpl
aaa
xchg
mov
int
loopne
pop
adc
sub
xor
sbb
mov
xchg
lds
sub
or
xchg
add
xsaves
or
lea
inc
push
mov
outsl
insl
dec
cmpb
jnp
loope
mov
mov
mov
pop
test
jnp
mov
leave
jb
idiv
fwait
cmpsl
mov
lds
add
leave
test
outsb
sti
and
dec
xchg
jg
cmpb
daa
sahf
imul
mov
mov
ja
test
adcb
adc
addl
sbb
mov
sub
fldcw
sbb
jnp
jno
adcl
push
jae
add
lret
sub
jae
jbe
cmp
repnz
out
pop
mov
xchg
fld
xchg
jle
rcll
insb
iret
ret
cmpsb
imul
add
inc
xchg
adc
orl
or
inc
xchg
rcrl
scas
xchg
cmpsl
stos
xor
aaa
mov
jns
outsb
jne
imul
cmpsb
arpl
ja
scas
aaa
cmpsl
test
sub
dec
movsb
sbb
sbb
push
lea
xchg
lds
push
iret
mov
icebp
nop
dec
ret
cmp
push
fwait
adc
flds
sbb
out
stos
sbbl
adc
xchg
jmp
dec
mov
push
mov
xor
dec
ret
sub
fwait
call
mov
push
fnstenv
jmp
and
lods
cmp
dec
jb
xchg
mov
push
je
ds
xchg
cmp
jae
pushf
enter
stos
dec
loope
jp
sbb
sti
mov
jb
jae
jmp
insl
mov
add
gs
orb
dec
rcr
pop
das
pop
fcoms
lods
sbb
jae
xor
popa
mov
or
xor
ljmp
scas
inc
popl
lahf
xor
sub
mov
or
dec
rol
nop
mov
lds
ljmp
adc
mov
inc
xchg
fbstp
or
and
inc
sub
addb
testl
inc
push
mov
push
rorl
xchg
jo
sbb
push
and
mov
popa
jns
xor
insl
xchg
mov
scas
std
cmp
cwtl
push
sub
xchg
jae
xchg
add
mov
and
lret
cmpsb
sbb
mov
xlat
mov
mov
jecxz
xor
and
pop
mov
or
mov
push
sub
mov
sti
cmc
jg
push
xor
and
jb
lods
ja
loop,pt
jns
adc
dec
rol
std
imul
mov
pop
loop
dec
test
and
xchg
mov
jmp
shlb
js
test
inc
in
mov
movsl
dec
xchg
or
mov
idivl
and
rorl
add
cmpsl
test
incb
or
or
stc
sbb
jle
cmp
arpl
sub
aaa
xchg
or
xor
cmpsl
ret
movsb
mov
fwait
xchg
sub
mov
sub
stos
xchg
mov
les
jns
scas
fdiv
add
push
pop
lods
or
dec
cmpsl
xchg
cmp
sub
inc
ret
mov
dec
inc
mov
rcrl
or
cwtl
and
push
je
jae
mov
mov
mov
cmpsb
enter
jae
mov
xchg
jno
mov
add
and
cmp
jo
rorl
shll
scas
inc
pop
lahf
xor
sub
cmpsl
xchg
pop
scas
xchg
sti
sti
lea
ds
or
dec
jnp
or
jns
testb
or
std
cmp
mov
cmpsl
test
out
popa
push
mov
imul
jo
addps
mov
mov
popf
sub
xlat
imul
stos
mov
mov
addr16
je
inc
mov
insb
cmp
out
dec
mov
mov
mov
or
lea
xor
inc
cmpsb
imul
adc
popf
mov
push
stc
pop
dec
jmp
test
cltd
dec
aaa
push
test
cwtl
ss
cmpsb
imul
mov
ret
int
ffreep
insb
jae
cmp
leave
fwait
aaa
jp
xor
and
andl
loop
push
popa
movsb
sarb
aaa
or
xchg
cmp
and
adc
mov
and
les
pop
mov
xchg
or
pop
aas
adc
enter
mov
sub
daa
mov
hlt
insl
leave
ja
inc
cmpsl
es
aad
cmpsb
mov
mov
test
mov
inc
jle
aad
jle
and
and
adc
or
jmp
enter
les
sub
mov
xchg
inc
sbb
pop
xchg
lcall
repz
mov
popa
jno
inc
imulb
roll
nop
sub
mov
xchg
or
sbb
lock
jmp
test
sub
pop
es
and
or
stos
jo
pop
inc
xchg
dec
leave
xor
iret
mov
xchg
sbb
popf
adc
mov
jo
add
push
roll
inc
rcll
mov
mov
sbb
adc
leave
shlb
out
cmp
fistpll
lcall
inc
push
push
daa
out
test
mov
lods
int
mov
add
push
inc
or
cmpsl
test
leave
inc
stos
ja
sbb
cmp
aaa
dec
repz
jnp
push
jne
gs
repz
or
jmp
and
shlb
xchg
mov
cmp
and
push
or
xchg
jo
mov
xor
adcb
inc
fwait
add
push
jge
shll
sbb
leave
jg
sbb
nop
dec
inc
mov
mov
popf
dec
push
jnp
mov
or
imul
pop
lea
orb
iret
scas
clc
jg
xchg
test
cmp
cmp
push
std
inc
icebp
shl
scas
xchg
movsl
hlt
mov
notl
mov
inc
inc
xchg
cmp
mov
aam
cmp
xchg
jg
push
cmp
lea
jns
pop
mov
dec
movsl
lds
push
mov
rol
mov
popa
stc
mov
lret
loopne
jle
xchg
push
test
cmpsl
das
dec
lahf
movsl
dec
jle
outsb
loop
pop
stos
fstps
adc
mov
push
jmp
cltd
pop
cmp
out
sbb
xchg
lea
inc
fs
sbbb
icebp
jge
cmpb
push
icebp
mov
and
aam
orl
xor
xchg
cmp
dec
dec
fisttpl
mov
ret
mov
lods
mov
xor
xor
cmp
jp
xorb
mov
mov
outsl
push
xchg
sahf
add
lods
push
dec
and
xchg
insl
insl
dec
mov
inc
sbb
jns
inc
or
or
pop
mov
syscall
cwtl
or
ret
cmp
add
mov
mov
jle
imul
xlat
imul
jmp
push
cmp
popa
push
pop
push
test
ja
cli
rclb
dec
scas
int
popf
fsubrl
mov
push
and
lahf
mov
xchg
push
in
jbe
jp
lret
movsl
dec
jae
cmc
int3
cmp
xchg
and
sub
sub
dec
push
add
or
out
fwait
shl
cmp
jbe
mov
mov
jnp
sub
jp
movsb
adc
xchg
mov
test
dec
das
pop
jo
inc
cmpsl
inc
or
ret
cmp
mov
out
les
jns
push
inc
test
mov
xchg
add
hlt
cmp
xchg
mov
xchg
dec
jne
add
fldenv
addb
dec
cmpb
cmp
mov
subb
shrb
cld
and
sti
lea
or
mov
cmpsb
mov
cmp
addl
and
scas
test
subb
cmpsb
subb
dec
xchg
inc
aad
lds
bound
push
mov
sbb
nop
jmp
and
add
popf
dec
inc
sbb
inc
push
shr
sbb
cli
mov
inc
sti
mov
xchg
sub
cwtl
adc
fistpl
lods
movsb
ret
cmpsb
jp
imul
mov
cmp
cmp
add
in
cli
mov
dec
jg
dec
insl
xchg
mov
lods
mov
mov
stos
xlat
insl
push
arpl
das
iret
loope
mov
cwtl
stos
pop
pop
js
repz
push
and
test
cmpsl
inc
out
xchg
inc
repnz
in
xchg
inc
arpl
mov
aas
add
sub
stos
sub
loope
dec
add
stc
jo
mov
sub
jae
ret
mov
cmp
mov
jle
xor
daa
les
std
jle
and
in
inc
mov
push
xchg
dec
leave
addl
clc
in
les
ret
cmp
ja
jae
jne
aad
jb
ja
int
jge
aaa
and
lahf
stos
mov
jmp
aam
add
jecxz
outsb
sub
rcr
xchg
cwtl
inc
testb
lock
xor
jns
dec
or
xorl
or
das
loope
stos
inc
andb
cltd
sub
push
xor
mov
adc
sbb
cmpsb
add
mov
pop
mov
xchg
add
push
scas
or
sbb
arpl
dec
daa
lds
rol
nop
ds
mov
repz
xor
cmp
mov
in
jl
rcrb
neg
mov
push
gs
mov
mov
inc
cwtl
cli
dec
add
js
adc
dec
aad
ja
jg
dec
dec
sub
insl
cmpsl
xor
testb
mov
or
jge
mov
pop
and
adc
dec
or
cmpsl
lea
mull
xchg
mov
jo
filds
xor
test
push
adc
cmp
jecxz
pop
jns
loop
icebp
mov
sar
cmp
cmp
les
pop
mov
fs
xorps
cmp
mov
jae
in
inc
in
or
cltd
xor
popf
jnp
mov
and
inc
cmpl
jg
mov
mov
xchg
insb
cmp
jae
push
xor
sub
inc
jg
mov
dec
inc
or
adc
mov
xor
scas
imul
cmpsb
xchg
xor
lods
cmp
js
xor
xor
gs
xor
movl
jb
xchg
mov
insl
sbb
xchg
mov
jo
popf
or
jae
mov
jmp
dec
or
frstor
push
mov
and
loope
lods
sbb
rcrl
sub
je
andl
js
cld
das
loope
mov
adc
mov
pop
dec
add
inc
cmpsl
mov
jno
mov
push
dec
push
test
sub
sbb
mov
das
popf
gs
mov
push
xor
xor
sub
jno
jo
sub
lods
or
ret
je
add
jns
xchg
mov
lock
jl
cmp
out
jecxz
jb
push
cmpb
sti
or
pop
and
andl
pop
mov
xchg
das
pop
adc
int
pusha
adc
mov
add
push
inc
cmc
dec
enter
or
xor
mov
popa
inc
push
enter
lock
nop
dec
leave
mov
test
sub
jbe
fcomi
xchg
adc
sarl
adc
dec
mov
mov
mov
jae
popl
jno
dec
cmp
popa
pop
dec
push
push
daa
xchg
mov
popf
aaa
push
inc
adc
dec
out
popa
mov
add
xchg
aaa
mov
push
jb
inc
jb
xchg
xor
mov
pop
xlat
mov
xchg
mov
sub
mov
cmp
and
mov
xchg
sbb
sarl
cwtl
or
push
in
and
into
movsl
xchg
cmp
enter
push
mov
into
mov
sbb
cmp
sbb
inc
add
outsl
stos
add
mov
jmp
inc
dec
xchg
cmpsb
stos
mov
mov
push
xchg
push
mov
mov
cmp
dec
mov
popf
xchg
inc
cmp
inc
adc
push
adc
test
sti
mov
adc
mov
mov
pop
arpl
mov
jbe
sub
mov
adc
jge
imul
sub
xor
dec
jno
js
mov
rcll
mov
jnp
pop
shl
push
xchg
add
stc
repnz
adc
and
lods
ret
icebp
or
xchg
jb
xchg
inc
bound
or
sbb
cwtl
add
jno
ljmp
or
xchg
pop
cmp
stos
push
mov
mov
aad
stos
mov
and
cmp
push
xchg
shrb
push
push
aad
outsl
or
xchg
push
and
mov
mov
add
pop
add
xchg
and
das
rcrl
outsl
mov
shrl
pop
fsubrl
fldl
in
popa
insl
xor
add
pop
idiv
js
addl
fadd
adc
out
loope
mov
pop
addr16
std
xchg
fldenv
add
sbb
popa
jmp
jecxz
mov
mov
or
fsubrl
add
xlat
ret
xcrypt-ecb
cmpsl
int
addr16
pop
leave
fidivs
leave
adc
fdivp
ss
loop
fmuls
repz
int3
scas
and
into
out
sbb
push
pop
fisttpll
sti
mov
movsl
fs
add
jp
mov
add
xor
shll
cs
adc
lret
pop
jb
shlb
ja
push
outsb
cmp
stos
lock
rcl
orl
dec
add
push
int3
adc
lock
add
jns
stc
cmpsl
push
lret
faddl
dec
mov
mov
xlat
sub
mov
push
lods
lahf
in
sarl
pop
add
rorl
mov
jl
push
jae
sarl
push
loope
and
scas
mov
sub
ss
lock
jno
jns
cltd
loop
push
test
shrl
sahf
push
mov
cli
sbb
dec
int
mov
dec
aam
jp
aaa
ret
ret
mov
add
int3
jmp
xor
mov
and
sti
cmpsb
test
mov
icebp
fldenv
scas
cmpsl
and
mov
fists
lahf
out
fsubrl
lret
mov
imul
adc
es
xchg
repz
std
mov
rorb
ss
aad
stos
push
mov
nop
cmpsl
dec
ljmp
jmp
in
fistps
pop
out
xor
in
mov
hlt
call
stos
scas
scas
lods
mov
mov
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jae
adc
stc
fdiv
sahf
hlt
out
dec
repz
out
out
repnz
mov
in
xor
hlt
mov
daa
pop
popa
pop
dec
repnz
and
test
clc
or
cmp
cmc
or
sub
sub
push
sub
das
inc
aam
dec
std
cmp
hlt
cmp
dec
popa
jl
jge
jno
test
popa
insl
popa
mov
popa
into
hlt
neg
mov
cmp
and
lds
out
in
stos
and
sbb
daa
ja
lcall
in
loope
xchg
repz
cld
repnz
add
or
in
div
div
idiv
negb
test
mov
nop
notb
shl
test
lods
divb
negb
mulb
testb
push
negb
jl
xor
testb
jns
pop
pop
in
and
dec
mov
push
jle
push
mov
clc
int3
sahf
push
xchg
sahf
jbe
or
and
fstpt
ljmp
inc
cmp
fcomip
inc
gs
jecxz
add
xor
shl
out
cli
repz
repnz
and
call
or
int
stos
mov
mov
mov
mov
mov
mov
mov
cltd
push
sbb
add
jge
icebp
and
mov
sahf
sbb
mov
rcrl
dec
repz
bnd
sub
movsl
xor
dec
xchg
cmp
insl
cmp
fcomi
jmp
loope
je
jecxz
ljmp
sbb
push
stc
hlt
repz
and
and
idivb
fdivp
and
and
out
or
inc
lcall
jle
push
pop
adc
shr
or
hlt
jmp
xchg
in
xchg
out
add
mov
mov
lds
push
sbb
adc
loop
iret
cmp
dec
cmp
daa
mov
mov
mov
mov
mov
mov
mov
movsb
xor
divb
out
neg
cmpsl
out
iret
es
add
xchg
fildll
add
fidivrs
stc
pop
bnd
push
movsb
movsl
mov
xchg
sarb
loope,pt
pop
inc
aas
sahf
dec
ds
jg,pt
mov
jns
jb
sbb
and
and
cmc
add
mov
scas
push
lods
add
fcomps
push
push
xlat
daa
push
maskmovq
testl
loope
mov
test
jne
sub
and
mov
mov
mov
mov
mov
mov
mov
mov
adc
fabs
int
add
std
mov
dec
xor
cmc
popa
test
popa
movsl
aaa
cltd
popa
lea
popa
xchg
popa
leave
cmp
sub
mov
popa
mov
imul
popa
dec
popa
cmpl
jge
jno
test
popa
insl
popa
mov
popa
sbb
mov
popf
inc
pop
sub
sub
lock
push
sbb
or
cmp
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
pop
sub
sub
dec
sub
sub
jno
test
jns
insl
sub
out
xor
out
out
mov
pop
addr16
and
cmp
dec
dec
jp
push
sbb
sbb
pop
sub
sub
sub
sub
sub
inc
cmc
test
mov
loope
popf
inc
inc
test
out
repnz
int3
addr16
out
cmpsb
or
adc
fwait
xor
xor
xor
xor
xor
xor
cmp
xor
xor
xor
xor
add
cmp
stc
ja
popa
cwtl
popa
mov
imul
mov
mov
test
daa
testb
test
jns
insl
mulb
negb
negb
testb
dec
idivb
idivb
imulb
repz
shll
in
fincstp
int
add
aad
push
std
push
icebp
dec
add
mov
push
imul
lods
xchg
mov
loope
mov
mov
lret
or
out
cmpsb
bound
es
dec
es
nop
jmp
add
mov
xchg
test
ret
popf
xchg
notb
idivb
inc
divb
out
in
in
shlb
es
cmp
popf
popa
cmpsl
popa
cltd
popa
xchg
imul
and
in
jmp
pop
jnp
test
xlat
sub
cmpsb
mov
sub
xor
rorl
jp
push
sbb
or
cmp
sub
sub
sub
les
scas
xor
popf
cmpsl
mov
push
jl
lret
or
iret
hlt
out
push
repz
and
cld
out
icebp
cmpsl
sub
sbb
hlt
mov
push
fcomip
in
dec
mov
repnz
jl
or
aad
clc
lahf
dec
sarb
idivl
jnp
dec
test
jno
fstpl
shr
cmp
dec
fwait
jp
push
sbb
jle
inc
cmp
inc
ds
ds
cmp
ljmp
add
inc
pop
fcomi
aad
jnp
mov
lds
popa
bound
hlt
stc
mov
cmp
pop
cmp
jnp
test
popa
adc
push
jno
sub
jbe
or
or
xlat
das
push
xor
loop
int3
mov
out
push
incb
in
add
cmp
inc
add
cmc
push
test
push
movsl
dec
cltd
cmpsb
das
shll
es
es
es
mov
imul
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
stc
mov
cmp
fnstcw
push
add
aad
or
std
ds
ds
and
cmc
ds
or
sub
sub
sub
ds
ds
ds
pop
shrl
and
loope
push
fdivrs
lods
add
and
pop
test
clc
cld
ljmp
xchg
cmpb
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mul
pop
rcr
or
pop
aas
mov
cwtl
xor
fdivp
out
rorb
add
gs
dec
in
mov
addr16
or
fucomp
rorl
jp
imul
sub
jmp
and
or
adc
cmp
inc
int
aad
or
xor
xor
test
xor
xor
xor
xor
xor
xor
xor
or
popa
mov
popa
mov
imul
mov
es
mov
jge
jno
xchg
in
sub
jns
xor
xor
xor
xor
stc
xlat
adc
test
sti
idivb
imulb
ljmp
xlat
fsts
add
movsb
daa
std
jle
add
and
cmc
dec
test
movsl
sub
xchg
xor
xor
lock
fwait
pop
push
adc
lret
dec
add
enter
pop
cmp
sub
sub
add
in
add
adc
out
je
xchg
cmp
mov
mov
lcall
adcl
adc
repnz
lea
inc
icebp
xlat
inc
dec
icebp
movsb
mov
cmp
mov
xor
xor
xor
and
negb
push
negb
notb
in
notl
mov
testb
or
pop
jmp
add
pop
xor
cmp
cmc
adcl
pop
pop
test
mov
inc
hlt
nop
repz
jae
jecxz
pop
mov
pop
push
xlat
xor
or
and
dec
adc
popa
pop
dec
out
loopne
stc
nop
dec
xchg
dec
enter
pop
xlat
addr16
push
pop
lds
test
sub
sub
pop
out
pop
xlat
fcom
or
xchg
out
sub
and
mov
sbb
pushl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
repnz
dec
movsb
jp
push
sbb
aas
xor
mov
hlt
clc
hlt
ljmp
mov
cmp
test
sbb
and
cmp
lock
out
les
jp
add
out
sbb
in
fadds
mull
dec
hlt
addr16
test
jo
cmp
and
dec
std
jp
push
sbb
or
jno
test
repz
repnz
adc
push
cmp
add
jmp
cmpsb
lret
fldenv
iret
std
ds
inc
add
and
popf
mov
mov
mov
xchg
shl
push
cmp
xor
sub
cmc
jne
jne
cmpsb
add
ljmp
mov
out
test
stos
inc
mov
sbbl
fbld
fiaddl
add
fs
dec
hlt
in
call
fwait
push
pop
imul
scas
lods
lods
mov
loope
mov
mov
mov
mov
mov
add
out
popf
pop
nop
rcrb
and
sub
cmpsl
fwait
addr16
lods
out
cmpsb
jge
pop
sbb
in
loop
sbb
lods
in
in
pop
pop
dec
dec
xchg
adc
rorb
cmp
or
dec
dec
mov
cmp
repz
pop
xchg
repnz
pop
sahf
push
mov
popa
cltd
cmp
mov
popa
jg
jo
inc
lret
and
fisttpl
fcom
fadds
push
add
lock
or
mov
scas
xor
lret
jg
test
cmp
les
loop
shl
pcmpgtd
movsb
xchg
decb
lods
ds
pop
inc
ja
std
adc
popa
call
scas
nop
lods
mov
jle
aaa
adc
rorl
cmpsl
lds
cmc
icebp
mov
stos
xor
add
cmpsb
repz
jle
lods
ds
ds
sbb
xchg
lahf
pop
add
mov
dec
ds
outsb
js,pt
inc
or
jecxz
shlb
fildl
cbtw
and
mov
sbb
push
dec
daa
adc
push
sub
mov
lock
pop
add
or
sbb
cmp
loop
fucomip
out
adc
cmp
cmc
sub
xor
xor
or
push
dec
pop
sub
push
sbb
push
cmp
in
rcrl
fdivr
push
push
xlat
repnz
mov
mov
lds
iret
testb
test
jle
push
js
pop
inc
or
sub
ss
call
out
lahf
repnz
mov
mov
addr16
xchg
mov
in
dec
mov
orb
and
hlt
notb
cmc
fdivr
in
movsl
in
xor
pop
ljmp
lea
mov
arpl
xchg
or
mov
mov
xchg
adc
lods
sbb
inc
xor
xor
xor
xor
xor
xor
mov
icebp
out
clc
lds
dec
push
jle
sbb
repnz
push
testb
jmp
sbb
mov
cmp
cmp
inc
and
xor
loopne
loop
lret
mov
push
lods
stc
mov
mov
xchg
test
daa
insl
push
out
jne
sub
sbb
sbb
or
cmp
xor
xor
xor
and
stc
mov
jno
test
insl
popa
mov
pop
xchg
mov
lea
inc
mov
leave
xchg
jl
imul
pop
push
dec
push
adcl
jno
and
lret
sub
outsb
jl
idiv
and
or
adc
mov
inc
fisubl
mov
sbb
sub
cmp
in
push
and
and
mov
stos
out
mov
dec
xor
icebp
adc
imul
std
push
es
es
imul
or
jns
dec
dec
es
dec
push
call
sti
pop
ja
inc
mov
lcall
dec
jle
out
jmp
lods
in
fabs
int
add
es
es
and
cmc
and
pushf
cmpsl
xchg
xor
xor
xor
xor
xor
xor
xor
xor
stc
sbb
or
imul
push
pop
push
dec
push
adcl
push
jno
test
push
insl
push
mov
push
sbb
push
sbb
test
dec
pop
cmp
dec
cmp
popa
cmp
jmp
jae
int
loope
aad
idiv
pop
add
and
decb
movsl
ds
lea
push
jne
dec
faddp
lds
or
loope
mov
stos
pop
xor
mov
imul
inc
jno
popf
jns
insl
xor
xor
xor
xor
xor
mov
popa
adc
popa
inc
jae
mov
cwtl
popa
push
hlt
jmp
in
pop
pop
xchg
add
cmp
or
punpckldq
inc
test
inc
dec
sbb
repnz
leave
or
pop
or
sub
and
fstpl
fstps
push
add
aad
or
dec
sbb
push
das
fistl
and
and
lea
leave
mov
cmpsl
mov
cmp
test
popa
hlt
clc
dec
out
testb
and
xor
mov
pop
lcall
mul
in
enter
jecxz
mov
shr
cmp
popf
pop
xor
dec
cmp
pop
dec
icebp
mov
pushl
dec
pop
lods
sub
dec
or
pop
dec
dec
dec
inc
and
lds
mov
jno
sub
negb
push
or
cmp
rcl
push
popa
insl
add
jmp
push
in
int
add
aad
or
push
icebp
push
add
and
jns
sub
lea
sarl
ds
ds
ds
ds
imul
mov
iret
sub
int
popa
sub
mov
cld
mov
xchg
push
aad
out
icebp
mov
sub
dec
insl
inc
pop
jne
pop
add
adc
push
pusha
sti
dec
push
or
int
sub
mov
add
mov
int
xchg
addr16
leave
sbb
lds
and
mul
divb
push
ds
pop
sub
push
or
dec
adc
xchg
adc
mul
imul
iret
fcomi
jmp
push
in
adc
popa
icebp
popa
add
ds
ds
dec
movsl
cmp
shl
icebp
leave
orps
push
lods
push
mov
imul
push
pop
push
dec
push
adcl
jno
test
imul
inc
jne
insl
negb
or
dec
popa
cmp
popa
sub
in
int
fcmove
add
shll
in
xor
sarl
add
aad
or
std
sub
das
fistl
mov
cmc
mov
mov
cmpsb
xchg
sbb
cltd
sub
leave
dec
mov
lods
sub
cltd
or
adc
sbb
popa
inc
popa
adc
ja
inc
push
cmp
push
popa
insl
add
jmp
push
dec
fnstenv
lds
popa
aad
or
popa
icebp
pop
loop
jmp
div
test
movsl
xor
xor
repz
leave
es
es
es
pop
es
es
sub
push
pop
lds
jno
test
jns
lods
jne
sub
push
adc
push
sbb
push
inc
push
adc
push
xor
cmp
cmp
rorl
dec
xor
pop
out
dec
fstpt
xchg
pop
fs
mov
jg
imul
and
or
lds
cmp
loop
int3
addr16
es
and
adc
std
push
add
dec
sub
sbb
sbb
pslld
xchg
ja
ret
add
jae
dec
sbb
sub
mov
cmc
push
pusha
or
sbb
cld
lods
std
repz
jle
jg
lret
mov
dec
js
flds
loopne
adc
push
adc
daa
jmp
test
and
addr16
repz
push
cmpsl
orl
xor
push
xor
lods
popa
inc
push
adc
aaa
push
out
push
inc
cmp
mov
adc
cmp
mov
pop
negb
jns
dec
mov
xchg
scas
cltd
xchg
arpl
and
adc
lcall
mov
movl
jg
in
je
or
ret
idivb
out
xchg
add
divl
scas
jbe
or
mov
iret
push
addr16
sbb
clc
cwtl
dec
mov
sbb
or
lods
jmp
lods
pop
xchg
push
pop
das
jle
mov
imul
mov
mov
cmpsl
adc
sarl
sub
loope
test
shlb
jnp
test
dec
outsb
ja,pt
and
or
adc
popa
xor
cmc
hlt
cltd
inc
int3
mov
lods
push
icebp
mov
scas
inc
mov
notb
fwait
hlt
jmp
cmp
or
mov
pop
ljmp
mov
icebp
mov
sub
fs
push
leave
test
sbb
icebp
adc
push
inc
dec
sub
add
pop
dec
fwait
cli
inc
add
movsb
popa
mov
mov
mov
xchg
ret
mov
push
pop
sub
dec
les
xor
xor
xor
ljmp
dec
push
cmpsb
jno
jo
ds
dec
dec
xor
mov
stos
dec
and
jg
hlt
pop
or
and
add
xor
jns
push
scas
dec
mov
dec
sub
mov
outsb
ficoms
es
adc
out
dec
sbb
repnz
jp
imul
mov
shll
cmp
fsubl
ficomps
gs
xchg
test
aaa
xchg
and
scas
xor
mov
ja
mov
insl
jae
imul
sbb
sub
mov
mov
jns
mov
add
in
jmp
leave
fcomi
sub
dec
jge
mov
dec
repz
mov
leave
pop
mov
loope
lret
pop
cmpsb
in
andb
and
push
ds
adc
push
ds
sub
cmp
int3
rcrb
movsl
cmpsb
cmp
cmp
outsb
and
adc
sub
ja
mov
and
adc
pop
dec
inc
adc
popa
faddl
scas
and
fcomi
rep
leave
popf
jg
mov
push
test
shl
loopne
repz
mov
mov
add
pop
mov
pop
push
xlat
dec
dec
push
sbb
jle
xor
aam
ljmp
inc
aaa
loope
sahf
movsl
sub
mov
imul
inc
test
pop
ret
in
inc
cmp
das
and
movsb
push
cmp
fwait
and
pop
mov
push
mov
and
popa
sbb
popa
inc
popa
xor
sbb
xchg
mov
xor
xor
xor
xor
mov
popa
inc
popa
aaa
popa
fcomip
in
iret
inc
pop
mov
add
xchg
imul
rorl
fucomi
mov
aaa
nop
dec
popa
les
sub
jbe
jns
repnz
sub
and
cmpsl
sub
ret
xchg
inc
fidivl
xchg
test
testb
in
adc
xchg
mov
mov
cmp
mov
push
jmp
adc
xchg
repz
mov
insl
push
jp
test
inc
lret
jne
icebp
cmovp
inc
inc
es
es
movsl
jmp
int
adc
pop
mov
mov
jmp
push
adc
sbb
mov
in
dec
cmpsl
jl
outsb
and
inc
add
sbb
inc
push
lret
cli
mov
push
sub
cmp
jmp
hlt
or
pop
mul
dec
push
clc
lds
mov
lods
stos
jle
pop
push
aaa
inc
fwait
insl
outsl
repz
shl
out
mov
mov
jne
mov
or
mov
pop
xor
rol
cmpsl
loope
cmp
cmp
in
leave
xchg
add
dec
jno
mov
insl
imul
sti
or
cli
aad
xchg
movsb
cmp
mov
addr16
xor
mov
and
clc
call
sti
mul
add
fs
movsl
fbld
in
repnz
mov
or
and
fcompp
mov
push
xchg
pusha
popf
push
inc
test
inc
cmp
cmc
adc
xor
pop
dec
adc
das
cs
ret
push
fs
mov
popa
mov
mov
dec
lret
sbbl
and
loopne
mov
popa
cld
inc
lcall
les
popf
or
std
arpl
mov
push
mul
xchg
or
test
push
xor
inc
mov
mov
jp
jns
sub
push
pop
test
xor
das
and
mov
mov
xor
jns
inc
mov
cwtl
mov
popa
xchg
cmc
loop
lds
lock
mov
push
scas
sbb
mov
add
outsb
pop
std
iret
and
loope
sub
sub
dec
inc
push
xor
call
test
mov
mov
mov
lahf
mov
mov
lea
adc
jmp
test
or
popa
rorl
in
lahf
pop
jmp
mov
leave
push
adc
mov
fbld
xchg
pop
push
fsubrs
push
decb
cmp
pop
dec
adc
shl
cli
inc
dec
mov
fs
mov
sub
sub
out
dec
loope
lods
cmp
test
jmp
cmpsl
jnp
cwtl
imul
push
ret
test
cltd
push
lahf
push
movsl
lret
pop
test
add
and
cmpsl
ljmp
adc
cmp
incb
mov
cmpsb
aaa
fs
lods
mov
sbb
out
fs
imul
pop
fwait
jp
add
lret
or
movsl
hlt
div
mov
mov
loope
cmpsl
pop
sti
mov
and
or
mov
pop
push
outsl
leave
cltd
mov
lret
jno
jbe
dec
sbb
jne
rep
jns
dec
push
jnp
xchg
lret
iret
inc
popa
das
dec
push
fsubrp
repnz
lret
sahf
aam
aad
lret
or
or
dec
cltd
mov
xor
xor
pop
pop
fwait
pop
sub
jl
scas
xchg
push
js
mov
test
rcl
push
push
orl
cmp
dec
outsl
adc
or
fadd
push
enter
cmc
or
pop
dec
adc
mov
fisubrs
loopne
add
inc
and
repnz
xchg
pusha
xor
sub
push
jb
xor
lret
lods
xor
mov
lea
pop
xor
cmpsb
out
pop
fs
and
mov
xor
test
loop
cmp
and
mov
or
pop
cmp
movb
sbb
out
pushl
or
adc
shlb
dec
jno
out
fisttps
dec
sub
mulb
dec
or
sub
jmp
jo
ja
and
jge
out
in
pop
mov
stc
mov
divps
jnp
repz
cmpsl
pop
fldenv
add
push
dec
jno
js
sub
popa
push
shll
int
iret
xor
lret
loope
cmp
xchg
dec
add
gs
dec
push
dec
push
jle
dec
jnp
imul
les
mov
je
pop
add
ret
ret
add
sub
inc
add
push
stos
scas
fs
pop
nop
lret
sbb
test
cmc
sub
int
and
mov
sub
cwtl
imul
mov
sub
inc
lods
sub
lods
xor
dec
in
push
dec
fistl
lods
sbb
push
fildl
imul
repnz
ficomps
push
mov
xchg
dec
shlb
add
data16
mov
xchg
andl
daa
sub
mov
mov
mov
aaa
in
repnz
pushf
dec
sub
pop
jnp
movsl
arpl
xbegin
pop
mov
leave
cmp
dec
sbb
xchg
popf
add
loopne
and
rcll
push
loope
fcoms
cwtl
cmp
xchg
loope
lods
lock
pop
loop
out
lea
inc
xchg
loop
stos
or
pop
outsl
test
inc
in
cmp
stos
repz
cmpsl
jb
sub
in
les
ror
xchg
push
lods
push
xor
or
nop
lea
ret
jne
or
divl
jb
fistpl
adc
leave
xchg
inc
std
pop
iret
jle
mov
pop
adc
inc
and
into
and
sub
mov
and
mov
movsb
adc
adc
popf
xor
dec
inc
adc
adc
scas
gs
mov
movsb
adc
popa
lds
dec
inc
das
stos
cmp
aaa
mov
scas
cmp
lods
sbb
icebp
bnd
sahf
sahf
movsl
rorb
cltd
pusha
sbb
and
lea
mov
popa
jo
imul
sbb
testb
and
cmpsl
jmp
pushf
mov
dec
ret
pop
mov
sub
sub
xchg
aaa
lret
xor
fadd
imul
add
out
hlt
es
sub
xor
cmp
adc
fsubs
pop
push
dec
cmp
int3
or
stos
add
jno
or
stc
ret
int
cld
in
inc
lds
jns
fisttpll
mov
inc
jmp
inc
repnz
in
repz
and
xor
xchg
inc
insl
jnp
test
jae
mov
idivb
dec
mov
loopne
inc
lret
in
in
js
push
pop
jmp
mov
in
insl
mov
push
sbb
xor
xchg
into
mov
and
out
popa
xor
hlt
aam
mov
sbb
sbb
or
sbbb
and
cmp
cmp
ljmp
mov
sahf
pop
ret
adc
js
xchg
repz
xchg
iret
ret
ret
ret
mov
jg
xchg
nop
xorb
iret
nop
xchg
cwtl
leave
adc
repnz
or
sbb
lds
iret
and
insl
int
mov
popf
push
jecxz
dec
cmp
jge
and
cmp
shlb
ja
xor
not
inc
mov
pop
leave
fsub
loopne
pop
mov
xlat
adc
into
inc
sbb
loope
or
mov
xlat
std
push
push
out
push
clc
push
sahf
push
mov
test
popa
mov
loopne
push
notb
idivb
testb
fmulp
lret
sar
sub
enter
ds
pusha
push
jg
popa
and
jge
mov
daa
in
lahf
xchg
test
mov
les
pusha
push
rorl
daa
xchg
pand
dec
dec
ret
into
jge
xchg
jnp
loope
inc
cmp
xlat
lock
add
cmp
fwait
mov
das
movsl
aad
add
imul
inc
out
sbb
shll
or
lods
push
dec
ret
mov
mov
movsb
pop
test
mov
and
jne
hlt
mulb
lds
fiaddl
mov
roll
xchg
mov
adc
mov
or
add
and
jp
imul
adc
cmp
roll
pushf
dec
cmp
sbb
lret
lcall
jmp
pop
rcll
andl
fcoml
out
adc
shrl
inc
xchg
cmpsl
or
xor
dec
jnp
out
sub
adc
cmp
mov
push
loope
push
mov
push
inc
scas
dec
out
xor
mov
and
adc
xor
mov
fistl
je
jbe
mov
mov
test
les
mov
mov
jae
daa
pop
popa
sbb
sub
aaa
pusha
iret
jmp
dec
jge
push
sbb
mov
outsl
aas
cmp
js
push
add
leave
in
mov
divl
mov
call
mov
repz
lock
fcomip
pop
idivb
test
xchg
inc
test
aaa
popf
inc
fs
cmp
xchg
mov
int
lods
and
sub
movsl
bnd
popa
xlat
sub
out
add
aad
push
lret
iret
dec
pop
inc
movsl
cmp
fwait
adc
lret
test
xor
mov
mov
mul
cmp
sub
imul
aas
movsb
mov
and
je
push
dec
test
mov
cltd
aaa
in
stos
mov
xor
push
into
je
icebp
bound
push
xor
call
and
lock
pop
pop
or
pop
in
cmp
sbb
sbb
adc
cmp
mov
clc
xchg
mov
sbb
dec
xor
pop
jge
jnp
sbb
inc
loop
sti
adc
push
mov
mov
ss
mov
sti
out
addr16
movsl
or
add
pushf
shr
add
pop
cmpsl
sbb
adc
dec
pop
jle
jae
sbb
pop
addl
fwait
mov
xchg
dec
mov
lret
jae
inc
mov
dec
scas
mov
sub
pushf
in
lock
mov
and
mov
repz
in
add
leave
leave
jo
outsl
sub
dec
loop
sbb
imul
neg
inc
stos
pop
jae
xchg
cmpsb
inc
push
andl
jmp
fildl
sti
hlt
in
ljmp
loop
scas
imul
scas
jl
dec
pop
add
hlt
stos
dec
cmpsl
push
jnp
add
xchg
jo
ret
outsb
mov
imul
push
cs
add
or
add
sbb
dec
jge
popf
movntq
in
add
sarl
imul
dec
repz
dec
pop
ja
xchg
out
andb
dec
push
fcmovne
aam
in
adc
repz
repnz
push
sbb
dec
sbb
inc
mov
popa
sub
aaa
cmp
and
and
xchg
andb
pop
out
add
shll
sub
pop
xchg
xchg
jnp
mov
lock
sub
xchg
loopnew
out
pop
jb
popa
push
mov
iret
jecxz
mov
ficoms
sar
sti
mov
cmp
mov
iret
add
or
iret
jae
pop
jno
or
lret
gs
mov
and
ds
push
mov
cmc
int
imull
jp
test
icebp
pop
dec
leave
in
add
arpl
xlat
jmp
dec
lahf
pop
fisttpl
ljmp
xchg
adc
testb
pop
sbb
mov
dec
pop
das
jecxz
jl
fbld
cwtl
ja
xchg
loop
subl
loope
sbb
sub
xchg
lcall
dec
mov
and
loopne
int3
gs
mov
pop
sbb
sbb
out
cli
dec
pop
xchg
dec
xchg
fs
push
mov
aad
pop
pop
fadds
adc
inc
adc
lods
leave
out
in
pop
mov
cmp
inc
xchg
lods
in
divb
data16
push
sbb
hlt
inc
dec
ret
and
jp
out
loopne,pt
repnz
pop
pushf
jnp
mov
or
pop
mov
cmpsl
lods
ror
idivl
test
incb
mov
in
insb
jae
rcll
lret
lret
xchg
mov
stc
dec
out
fsts
cld
mov
lock
lea
out
aas
adc
out
add
mov
gs
fs
xchg
std
mov
pusha
movsl
mov
rclb
mov
cmp
outsl
jae
push
ret
out
mov
test
hlt
movsb
push
sbb
ljmp
fdivrs
push
es
and
clc
push
and
icebp
sub
xchg
test
mov
jmp
test
jno
add
pop
cmp
mov
pop
fnsave
cmpsb
dec
nop
sbb
outsb
inc
mov
sbb
jnp
movsl
in
mov
imul
and
lahf
in
mov
mov
repz
fwait
push
movsb
fimuls
inc
cwtl
adc
gs
imul
sti
inc
jl,pn
in
loope
xchg
add
shlb
popa
add
push
xor
jmp
movsb
push
pop
imul
pop
scas
lret
mov
mov
pop
aaa
cmp
mov
pop
jns
jecxz
jnp
daa
sbb
xor
jecxz
int3
jne
xchg
repz
loop
insb
cmpsl
outsb
pop
mov
jp
imul
icebp
and
lcall
mov
mov
daa
sub
add
or
movsb
jbe
mov
jmp
loopne
pushf
mov
aaa
or
rcl
push
pop
pop
adc
push
mov
dec
or
addl
addr16
add
dec
push
jg
js
jb
ds
mov
fcoms
sub
sti
mov
xchg
lret
mov
lret
subb
mov
hlt
movsl
or
loop
mov
jo
sti
andl
imul
cmpsl
sub
pop
sbb
iret
addb
insl
push
cmc
pop
rorl
mov
inc
sub
push
movsl
jnp
ret
xchg
push
out
mov
inc
inc
das
add
icebp
push
inc
inc
cmc
dec
cmp
incb
mov
adc
imul
and
out
jnp
sti
sbb
bound
testb
movsl
sbb
sbb
pushf
mov
push
xchg
cli
cmp
stc
aam
push
out
dec
pop
mov
cmp
repnz
lea
cmp
xchg
add
add
lret
rol
aad
xchg
test
xchg
cmp
xor
dec
jmp
icebp
lahf
inc
out
shrb
inc
push
lock
cmp
pop
inc
sbb
xchg
iret
add
mov
or
into
or
dec
imul
out
test
int3
outsl
aaa
lret
mov
test
repz
rorb
jg
jbe
not
xor
cld
lret
insw
push
ljmp
cmp
inc
movsl
sbb
test
outsl
push
cli
pusha
jnp
inc
stos
daa
ja
loopne
testb
mov
rcll
add
pop
mov
icebp
shl
out
enter
jb
in
pop
in
loope
aad
lods
lods
xchg
scas
sbb
dec
sub
sbb
in
movsb
inc
in
dec
daa
jmp
aad
lret
pop
incl
movsb
out
and
sbb
cmp
lea
inc
out
repnz
gs
mov
mov
loope
mov
enter
mov
sbb
std
lret
insb
adc
push
loopne
fdivrs
jge
jns
mov
pop
xor
lret
dec
lcall
movsb
jno
mov
loope
push
adc
cmp
pop
lock
pop
jno
into
xor
pusha
sahf
push
leave
jle
fisubrl
lret
dec
mov
rorl
lret
mov
insb
test
inc
fcmovu
jnp
lret
repz
ror
mov
popf
adc
sbb
xor
fcomps
xor
loopne
movsl
movsb
pop
andb
sbb
xor
rcr
fcoms
bswap
cltd
pop
insl
mov
adc
cli
insl
hlt
mul
loope
jp
lea
adc
repnz
sti
lcall
mov
adc
cmp
cmp
out
pop
out
xor
pop
lcall
repz
and
xor
fdivp
mov
pusha
daa
jb
scas
cmc
ja
imulb
adc
cmc
test
mov
push
testb
lahf
and
ret
or
push
sub
inc
sbb
cmp
fists
dec
jbe
dec
test
scas
fwait
xchg
mov
adc
fistpll
popa
imul
dec
push
ret
push
pushf
negl
sbb
inc
jl
test
mov
fldt
and
jle
xchg
out
xchg
das
repz
jo
insl
pop
inc
incl
in
scas
imul
insb
fucomp
aad
add
add
aad
add
out
adcb
jmp
or
sub
or
lds
pcmpgtd
push
and
lods
pop
mov
mov
mov
cmpsb
and
mov
mov
and
jmp
dec
add
dec
add
adc
inc
enter
decl
or
jo
imul
pause
adcb
std
nop
mov
js
repz
mov
or
adc
cmp
mov
sbb
stos
iret
lods
cmpsb
outsl
mov
mov
xchg
sbb
pop
pop
mov
js
mov
add
mov
xchg
and
sub
sub
xchg
mov
dec
cmp
xchg
inc
xor
repnz
sub
sarl
ret
fnstcw
jge
or
mov
fwait
dec
stos
push
mov
add
mov
push
and
out
iret
pop
jno
jnp
pop
sbb
es
adc
cli
jnp
mov
lock
jae
popf
fsubs
pop
dec
fwait
jp
imul
ffree
jnp
imul
mov
out
mov
and
push
cmc
das
adc
add
fsubr
jb
push
jnp
sbb
iret
fists
test
loopne
enter
jp
dec
mov
or
gs
ficoms
pushf
int
mov
loopne
pop
fwait
cld
dec
add
imul
dec
dec
pop
inc
jne
push
or
fcoms
mov
lea
cmpsb
out
xor
repnz
jne
notl
gs
sti
jmp
ljmp
sub
mov
or
jae
iret
dec
in
push
pop
mov
inc
insb
jnp
mov
imul
mov
sbb
or
into
lea
xchg
or
cmpsl
jge
repz
push
pop
imul
and
mul
xor
out
cmpsb
outsb
fs
sub
sti
mov
inc
xchg
pop
movsl
stc
lret
movsb
in
push
pop
aaa
ret
punpcklwd
cli
ljmp
mov
and
mov
pusha
pop
inc
lret
loope
movsb
xchg
dec
or
mov
push
mov
sbb
loopne
ret
jo
cmp
mov
pop
lret
jmp
xchg
and
sbb
fistl
testb
ret
lea
pop
pop
cltd
push
lock
mov
pop
jge
push
cmp
or
dec
or
adc
pop
sbb
jp
rcll
fmulp
ljmp
icebp
mov
stc
xor
xchg
and
pusha
mov
mov
loopne
je
out
xor
shll
mov
sbb
add
and
sub
ljmp
lock
inc
mov
push
jnp
movsl
push
mov
push
xchg
in
inc
dec
cld
jns
fdivs
into
fsubl
lods
jo
sub
fwait
hlt
pusha
repz
out
inc
notb
push
imul
pop
dec
addr16
add
in
call
mov
fadds
add
dec
testb
dec
jecxz
sbb
pushf
xlat
or
hlt
hlt
testb
sbb
adc
xchg
mov
andb
push
loop
jae
adc
imul
mov
jbe
xchg
outsl
xor
jp
add
inc
into
scas
imul
pop
xchg
fs
pop
pop
mov
xchg
mov
add
sbb
xor
sbb
adc
leave
dec
and
sbb
lret
mov
xchg
aas
adc
push
out
pop
and
cmp
pusha
mov
cmpsl
fdivrs
testb
pop
cmp
push
fwait
xchg
movsl
out
push
lods
xchg
ret
into
in
xchg
fsub
out
lcall
fmuls
popf
pop
mov
and
add
fidivs
or
jbe
loope
xchg
stos
add
pop
pop
clc
cmpsb
notl
lea
push
shl
jmp
test
and
and
mov
lcall
add
pop
in
cmp
loope
push
repnz
ret
mov
cmpsl
pushf
xchg
dec
sbb
dec
lret
add
push
adc
cmp
mov
cltd
pushf
xor
stc
jns
subl
push
jge
fucomip
mov
hlt
ret
int
jns
repz
ret
cmp
jle
pop
lret
jns
bound
dec
pop
jle
es
pop
mov
je
dec
sub
mov
shrl
adc
jmp
fildl
xchg
cmpsb
es
aad
jns
mov
jecxz
in
movsl
jmp
dec
mov
push
add
popa
or
jmp
cmp
pusha
mov
push
dec
add
pop
inc
pop
and
or
cltd
jo
mov
jmp
mov
lods
popa
adc
jb
dec
push
dec
pop
push
sbb
out
pop
sub
pcmpeqw
lock
out
and
xchg
out
pop
es
sbb
jecxz
fcomi
mov
jae
inc
cs
inc
sbb
pop
cmp
in
repz
or
icebp
mov
lods
divl
stc
xchg
lahf
out
pop
fcmovbe
clc
in
dec
mov
mov
out
add
gs
mov
fldcw
test
sub
jge
aaa
loop
test
cmpsl
std
fistl
test
add
outsb
push
rcrb
pop
mov
jecxz
jg
stos
pop
cmp
stos
jmp
pop
cld
fadds
test
out
mov
rcrl
xchg
lods
jnp
mov
ja
jle
sub
inc
jecxz
jns,pt
stc
pop
pop
mov
push
repz
aaa
xchg
sub
dec
scas
xlat
inc
dec
std
adc
std
fcom
fcom
dec
in
cmpsb
jae
data16
and
adc
jge
gs
sti
lds
push
in
test
mov
cmp
imul
adc
test
jbe
pop
cmp
out
mov
and
pop
pusha
loope
add
arpl
xchg
notl
icebp
xor
imul
add
adc
into
or
test
lret
and
mov
fbstp
dec
lret
sarl
mov
dec
aad
std
insl
inc
lods
daa
xchg
jmp
adc
jnp
xchg
dec
shld
repz
or
aas
das
fsubrp
out
addr16
loopne
test
mov
mov
jae
xchg
jns
lea
loope
mov
iret
fcomi
ja
outsl
xor
pop
loopne
mov
bound
sbb
sub
adc
xor
jmp
dec
mov
xchg
pushf
mov
or
out
and
pop
scas
or
pushf
and
or
pop
pushf
jmp
pop
fucomi
jnp
setge
fadds
scas
push
cmp
ja
int
pop
dec
rorl
mov
dec
clc
inc
mov
loop
inc
xchg
mull
fistl
fxtract
mov
push
push
and
sub
xor
ljmp
pusha
cmpsl
cwtl
jge
and
push
fneni(8087
movsl
fsts
lret
adc
hlt
pushf
sbb
xor
cmpsl
test
xlat
sub
jbe
xor
bound
cmp
adc
or
xor
jecxz
or
out
dec
and
mov
mov
in
pop
clc
imull
je
and
sbb
adc
mov
outsl
add
mov
mov
pop
movsb
dec
lods
sbb
shr
mov
cmpsb
lock
dec
int
or
mov
inc
push
inc
repz
pop
sbb
pop
jno
xor
loop
sti
mov
leave
xchg
subl
hlt
std
ret
sbb
pop
adc
inc
les
inc
and
fcmovnb
inc
pushf
repz
movsb
iret
loopne
mov
arpl
ss
mov
dec
push
add
movsl
das
cmpsl
add
dec
mov
popa
jg
adc
in
cmpb
lret
loop
mov
push
mov
hlt
out
lcall
in
lret
pop
rcr
addr16
adc
cmp
or
dec
insb
loope
adc
inc
loopne
clc
and
stos
jnp
xchg
dec
cmp
mov
lret
inc
xor
jmp
aaa
mov
dec
sub
in
int3
add
fucomi
pusha
jmp
mov
inc
mov
pop
pop
mov
stc
insl
call
push
mov
mov
push
fwait
ja
into
xchg
sbb
inc
or
and
sbb
sbb
loop
cli
lds
xchg
scas
ret
and
js
pop
add
cmpsl
mov
addr16
jnp
xchg
loop
out
outsb
cmp
sti
adc
out
das
cmc
inc
and
clc
mov
add
in
cwtl
lds
xorl
add
out
inc
divb
loop
in
iret
inc
out
mov
sbb
fisttpl
push
jno
or
mov
in
stos
testl
imul
inc
iret
in
pop
aam
scas
imulb
jno
pusha
mov
mov
in
jle
outsb
jge
icebp
cmp
out
xor
mov
mov
sub
out
sbb
xlat
orb
imul
sbb
cmc
push
lea
pop
push
cmp
loop
repz
or
cltd
jmp
push
fs
aas
xor
in
mov
iret
adcl
mov
lods
add
lret
cmc
mov
shl
cmc
mov
cltd
pop
lret
and
and
fisttpl
test
das
push
decb
inc
add
aaa
shr
and
adc
repnz
push
mov
xchg
push
xor
inc
fsubl
decb
mov
push
shll
imul
sbb
pop
jp
imul
sbb
inc
out
aad
xchg
iret
mov
and
sbb
jno
or
mov
jmp
cltd
daa
iret
int3
adc
divl
mov
jnp
cmp
lock
xchg
push
inc
push
mov
jo
daa
fsubrp
loop
and
dec
pushf
int3
in
ror
or
push
sub
out
push
pop
mov
or
pop
jnp
mov
cmp
hlt
repnz
push
dec
xchg
enter
and
imulb
insl
imul
popa
pop
and
or
idivl
movsl
mov
mov
push
arpl
push
jmp
lret
idiv
and
add
sub
sbb
sub
xor
inc
popf
div
xlat
decb
imul
adc
lret
push
cmp
loope
xchg
test
bsr
popa
mov
iret
lret
movsl
push
sub
bswap
push
dec
and
pushl
mov
pop
out
loop
iret
mov
lock
inc
les
pop
mov
ud0
out
aaa
and
das
dec
into
pop
fwait
insl
jmp
into
jbe
addr16
in
out
int
add
das
pop
fwait
sub
leave
ret
pop
movsl
push
adc
lahf
inc
imul
nop
push
xchg
push
cmc
cltd
lret
idivb
inc
xchg
idivl
push
mov
loopne
cmp
add
inc
lea
xchg
ret
cmp
cmpsl
lret
int
jbe
add
mov
mov
pop
inc
push
stc
jae
push
fmul
mov
addr16
out
insb
and
rcll
sub
in
mov
jg
iret
lret
xchg
movsl
pop
dec
push
js
xchg
xor
ret
dec
outsb
pop
xor
push
push
sar
jnp
push
adcl
push
pop
test
scas
test
xchg
or
sbb
lret
lds
push
jg
adc
shll
push
movsb
pop
jnp
inc
jne
loope
ja
mov
or
jge
jb
sbb
jge
push
inc
loop
loopne
xor
fcomip
jecxz
out
add
xlat
mov
cmpsb
jmp
dec
xchg
loope
aad
aam
testb
mov
lods
add
lods
mov
adc
jl
sub
imul
jmp
popa
stos
pop
xor
stos
mov
fdivrs
mov
pop
movsb
pop
movsb
lods
inc
mov
jnp
or
mov
popf
shrb
xor
pop
aaa
xchg
ret
ja
push
or
xor
or
sbb
movsb
arpl
add
jmp
in
lret
fsubrs
repz
roll
lret
daa
test
xlat
mov
je
add
in
icebp
stos
testl
jmp
rorl
cmp
sub
mov
or
sbb
cmp
fsubs
or
adc
cmp
mul
and
push
or
out
popa
fistl
repz
sub
adc
mov
adc
xchg
loopne
testb
loope
loopne
add
jne
fucomi
into
dec
hlt
cmp
mov
xchg
gs
je
jmp
pop
sbb
dec
and
ljmp
xlat
sub
addb
ss
push
ja
jge
sbb
xor
shlb
adc
cltd
mov
cmpsb
push
sub
sbb
rolb
in
movsb
mov
inc
inc
aam
fistpl
pop
adc
cmp
icebp
mov
loopne
sti
xor
mov
or
or
push
mov
mov
pop
out
stos
sahf
loopne
out
lods
hlt
pusha
movsb
inc
and
mov
adc
pop
add
enter
and
iret
mov
mov
lret
sbb
xchg
cmp
xchg
ljmp
push
jno
mov
xchg
call
test
mov
add
out
clc
loopne
loopne
insl
add
imul
cmc
inc
out
das
imul
repnz
cmp
xor
cltd
add
add
push
movsb
enter
cmp
inc
adc
xor
and
push
push
sbb
dec
iret
cmp
popa
sahf
iret
xchg
cmp
mov
push
fimuls
cmp
les
sub
xor
movsl
jno
jmp
jae
cmpsb
mov
jecxz
jl
add
mov
insl
mov
adc
pop
out
aad
jnp
insb
dec
jae
fdivp
das
pusha
fadds
dec
adcl
adc
lret
outsb
test
sub
hlt
cld
jno
inc
in
or
dec
lock
loope
cmpsl
ret
sub
pop
ror
mov
pusha
mov
sbb
push
sbb
lock
out
sbb
and
mov
xchg
sti
add
mov
inc
std
cwtl
out
sub
sbb
or
and
clc
notrack
and
addr16
jae
sbb
xchg
adc
pop
leave
cwtl
loope
into
pop
lcall
jnp
loope
xlat
orb
sbb
jmp
or
mov
or
sub
cmp
dec
lcall
jmp
cli
inc
xchg
sbb
mov
or
subl
or
lahf
pushf
test
mov
push
or
out
or
mov
mov
imul
sbb
inc
jmp
xlat
inc
mov
iret
mov
dec
cli
dec
xor
mov
aam
sbb
xor
mov
xchg
mov
fisubs
inc
pop
or
push
xchg
mov
pusha
sbb
or
popf
inc
sub
sbb
adc
lret
jmp
sbb
xlat
cs
loop
adc
sbb
xchg
mov
leave
repz
sub
and
inc
fidivs
repz
mov
xchg
popa
aad
fistps
mov
or
jecxz
pop
pushf
test
jmp
repz
ljmp
imul
inc
pushf
xchg
xor
pop
std
pop
loop
repnz
loop
add
mov
dec
sbb
lds
xchg
sbbb
mov
add
jmp
ret
mov
scas
mov
jo
ja
aaa
push
dec
stos
add
dec
divl
pop
cltd
push
dec
jb
fsts
cltd
inc
out
xchg
inc
jecxz
jb
iret
repz
adc
out
push
add
cmp
pop
push
jbe
movsl
xchg
nop
xchg
or
jne
cmpsb
adc
cmp
or
push
or
adc
ljmp
fimuls
cmp
test
scas
cmp
pop
xor
add
push
adc
fcmovnb
test
sbb
sub
mov
lods
inc
gs
cmpsl
jne
mov
out
cmpsb
int
add
cmp
in
popa
and
test
dec
movsl
movsb
jnp
cmp
xchg
xor
repnz
mov
lds
popa
imul
dec
and
push
push
jno
jne
xchg
negb
sbb
mov
fildl
cmp
popf
and
lahf
das
push
push
xlat
mov
xchg
mov
das
push
push
int
inc
iret
jle
xor
and
jle
stos
adc
das
ret
das
js
adc
nop
push
mov
and
jns
add
ds
andb
pop
cmpsl
cmp
insl
adc
mov
cmpsl
cmp
jns
push
out
or
xor
popa
sub
cmpsb
addr16
dec
mov
cmp
mov
dec
mov
xchg
or
scas
jns
mov
mov
pop
or
mov
mov
fnstenv
in
xor
dec
or
and
jae
inc
movsl
sbb
adc
out
mov
loope
sbb
cmp
push
dec
repnz
scas
outsl
es
sbb
push
insl
scas
outsl
jo
jns
jmp
inc
int
filds
adc
movsb
aaa
iret
push
push
jns
mov
push
pop
mov
add
add
sahf
repz
out
mov
dec
pop
sbb
xor
push
mov
dec
loopne
mov
daa
add
hlt
repnz
outsl
mov
and
cmp
in
add
jmp
cmc
pop
es
and
sub
push
test
fisubs
repz
cmp
neg
push
in
push
fstpl
int3
xchg
or
aas
jo
xor
add
pop
pusha
jmp
lds
in
imul
movsl
pop
mov
pop
or
mov
jle
xchg
testl
movsl
in
add
pusha
fstpl
test
xor
fucomi
arpl
cli
pop
sbb
push
mov
stc
in
push
dec
sarl
aam
xchg
or
push
loope
fcoms
loopne
and
idivl
jmp
inc
dec
imul
mov
or
leave
cltd
int3
xchg
out
dec
icebp
ljmp
jmp
mov
int
lods
aas
lret
push
mov
test
imul
lret
mov
mov
pop
popa
sbb
or
adc
cmp
testb
push
xchg
rcrl
jns
lahf
fistpl
jmp
lods
pop
fimuls
in
xor
add
xlat
jl
jle
mov
in
xchg
cmp
fwait
in
scas
and
and
imull
out
sub
mov
rcll
outsl
dec
fcoms
andb
pop
in
or
adc
mov
sahf
dec
mov
cmp
loop
repz
jge
clc
push
incb
push
adc
repnz
push
sub
mov
cmp
adc
ret
add
in
rcrb
lret
dec
test
cmp
jmp
mov
hlt
fwait
movsb
cltd
testl
rcl
push
es
cvtdq2ps
dec
adcb
cltd
or
pop
pop
xchg
pusha
mov
push
push
pusha
mov
or
mov
push
adc
jbe
mov
in
mov
aaa
add
outsb
and
sub
loope
or
cmp
pop
dec
add
in
pop
cltd
cmp
xor
test
dec
aaa
addr16
and
lds
cmp
add
add
lea
cmpsl
sub
sub
adc
insl
lods
push
lea
jmp
lret
cmpsl
lret
jnp
sbbb
movsl
cmp
inc
inc
cmp
out
test
shll
sub
scas
out
iret
adc
sahf
outsl
cmp
jle
in
cmc
jg
repz
dec
mov
adc
jmp
sub
cmp
sbb
xchg
mov
scas
or
jae
and
fucom
push
imul
or
and
mov
pop
sbb
lret
ljmp
iret
fldenv
mov
cmp
bound
or
add
std
sub
cmp
sub
push
std
xchg
mov
adc
repnz
adc
or
repnz
cs
testl
inc
xorl
pop
sahf
or
cmpsb
or
dec
adc
lahf
fs
repz
ja
out
out
shlb
jbe
inc
sub
dec
cmp
pop
movsl
test
mulb
mov
leave
jge
outsb
imul
mov
lret
pop
mov
xchg
adc
insl
pop
mov
jmp
sub
in
xchg
lods
mov
mov
jecxz
cmp
pop
fbstp
data16
sub
mov
inc
sahf
aaa
mov
iret
add
sub
push
sti
repz
mov
adc
mov
jns
pop
cmpsl
adc
imul
out
and
mov
repz
imul
pop
mov
mov
adc
mov
mov
push
movsl
dec
cmp
mulb
mov
pop
add
sbb
push
mov
push
or
jo
in
push
or
push
lret
dec
loope
push
test
or
in
jge
jnp
xor
inc
inc
pop
loopne
push
sub
repz
xchg
cmp
ljmp
xor
in
pop
repnz
jmp
push
cmpsb
std
mov
and
fistps
out
dec
jp
imul
in
iret
pop
or
inc
aaa
mov
adc
icebp
mov
pop
sub
pop
daa
mov
imul
test
sbb
sbb
pavgw
jmp
push
orb
dec
or
loop
ljmp
pop
adc
inc
jecxz
adc
inc
jl
mov
jnp
loope
xlat
pusha
stc
in
xchg
xor
mov
add
scas
lods
mov
dec
out
movsb
icebp
stos
mov
arpl
icebp
jg
in
outsl
lods
mov
and
adc
out
loopne
clc
add
add
sbb
or
popf
add
stc
inc
out
enter
or
sbb
mov
repz
repnz
sbb
test
and
in
sbb
aaa
mov
xchg
popa
push
push
int
dec
movsl
push
push
loopne
out
add
inc
call
mov
pop
mov
xchg
cmp
cmp
shll
xlat
jo
out
push
inc
lds
repnz
lahf
mov
cmc
cmpsb
ficomps
fistpl
xor
mov
or
inc
test
jge
out
cs
mov
and
pusha
or
xchg
divb
jbe
mov
loop
or
fcmovnbe
pop
cmp
sub
add
mov
cmpsl
xchg
push
xlat
dec
fldl
mov
rcll
pop
inc
jmp
test
or
add
popf
aas
push
jb
int
lcall
push
cmp
push
cmp
pop
or
repnz
inc
dec
jmp
test
sub
adcl
xchg
cmp
inc
cmp
aaa
xor
out
cmp
fdivr
loopne
insl
pop
mov
bound
imul
cmpsl
sub
test
xchg
pusha
jnp
mov
push
out
mov
mov
out
mov
sbb
or
imul
sbb
add
arpl
xchg
fsubr
lret
out
adc
imul
jmp
movsl
mov
ss
adc
jns
sti
pop
xchg
stc
fsts
bnd
inc
mov
into
in
cmpsl
jmp
xchg
sbb
dec
xchg
xchg
loop
push
popf
add
adc
into
dec
pop
cmp
sahf
or
xlat
aam
je
fidivrs
fucomip
cmp
pop
hlt
xchg
enter
shll
add
cmpsl
cs
clc
movsb
lcall
pinsrw
test
and
jle
sti
inc
or
adc
cmp
movb
in
fimuls
std
aas
xchg
lods
jnp
hlt
jle
pushf
out
xor
data16
xor
stc
xchg
sahf
jnp
or
inc
sub
jmp
or
or
cmp
rorl
pop
fstpl
lahf
lods
hlt
jbe
or
xor
cmc
pushf
and
push
imul
int3
sbb
sbb
in
iret
mov
pop
pop
push
fidivrs
mov
and
rcrb
movsl
sbb
ret
cmpsb
xchg
out
arpl
jl
jle
mov
adc
fdivs
inc
xor
popa
das
popa
iret
hlt
stc
out
repz
push
sbb
inc
inc
sti
push
cld
sub
pop
bound
dec
pop
and
jbe
lret
mov
or
dec
push
push
xor
cmpsl
sahf
and
or
in
call
mov
repnz
push
clc
aas
add
cmp
call
insl
add
dec
leave
or
imul
cwtl
xchg
aas
notl
push
add
test
fstl
jno
faddl
jnp
repz
inc
pop
jae
mov
xor
lods
lock
inc
out
outsb
sbb
adc
jmp
cmp
and
push
hlt
sahf
xchg
mov
jnp
popa
push
imul
pop
out
outsb
inc
sub
stos
test
cmp
ret
insl
sub
pop
repz
mov
leave
xchg
popf
pop
lea
imul
xchg
dec
inc
push
jae
xchg
pop
sbb
xchg
gs
xchg
jno
mov
xlat
jo
xchg
dec
adc
aad
test
lcall
popa
fstpl
iret
jo
imul
out
mov
and
cmpsb
in
cmp
add
pusha
cmc
notb
cmpsl
inc
cltd
pop
out
jmp
addr16
out
mov
std
inc
pop
out
outsb
sbb
movsl
icebp
aaa
or
leave
pop
xchg
sub
stos
dec
lahf
sub
mov
dec
fstps
or
push
cmpsl
popl
pop
loopne
or
sti
xor
cmp
fdiv
lcall
or
iret
test
in
pop
xor
xor
add
mov
fxtract
repz
and
mov
loop
pop
stos
rorb
ja
loope
lret
jne
fwait
outsl
sbb
rorb
pop
xor
loopne
dec
cmp
add
mov
jns
sbbl
dec
inc
pop
stos
or
das
jne
fwait
inc
out
and
and
incb
clc
shr
jge
jae
fnstenv
mov
cmpsb
push
call
add
inc
popf
or
aas
mov
iret
or
imul
into
mov
dec
inc
cmpsl
mov
cwtl
ficomps
clc
or
loop
jns
shll
in
dec
fdivs
ja
and
jge
xor
movsl
stc
outsb
dec
cltd
js
jno
or
mov
pop
adc
push
pushf
pop
and
add
call
cmp
pusha
mov
cmp
stos
mov
repz
add
dec
pop
inc
testl
and
or
mov
add
jmp
mov
loopne
clc
xor
ds
or
inc
in
imul
in
mov
pcmpgtd
ficomps
sbb
push
in
lret
mov
or
and
sub
ljmp
sti
xor
movsl
xor
mov
outsb
int3
rcr
imul
push
add
das
sbb
cmpsl
inc
mov
dec
inc
push
xor
iret
or
adc
not
sbb
imul
push
rorl
das
cmpsb
inc
in
push
xlat
negb
mov
and
inc
push
xor
inc
out
pushf
fs
out
outsb
and
add
cs
std
roll
rcrb
leave
les
out
dec
andw
es
cmpsb
iret
test
add
arpl
loop
xchg
jge
fs
fnstcw
adc
ja
inc
stc
cmpsl
mov
aaa
adc
jle
sbb
call
cmpsb
movsl
push
mov
pusha
dec
dec
jl
idivl
sub
mov
orl
pusha
iret
sub
in
push
das
divb
mov
mov
cmpsb
imul
loope
icebp
stos
lret
lret
lock
out
aaa
out
test
rcrb
or
dec
push
in
in
jno
mov
loopne
dec
inc
sub
jmp
xor
inc
imul
mov
bound
ljmp
inc
adc
xchg
cmpsl
out
add
and
repz
sub
negl
ret
mov
cs
pop
and
cmp
push
dec
xchg
xchg
or
jecxz
lods
xor
xor
pop
add
cmpsl
andb
dec
mov
or
cmp
popa
pop
popa
dec
pop
mov
xor
or
mov
cmp
xchg
leave
test
push
mov
icebp
data16
idivl
outsl
pop
jae
mov
sub
mov
pop
cltd
imulb
arpl
pop
fisubl
aam
sti
test
inc
out
leave
cmc
mov
imul
setge
mov
cli
xor
adc
aas
cwtl
loopne
call
orl
fs
sbb
sbb
sbb
in
icebp
cltd
push
pop
or
inc
je
lds
dec
fmulp
out
mov
mov
sbb
pop
and
div
pop
or
xor
ljmp
out
iret
ja
xchg
mov
adcl
orb
out
jg
cmc
in
mov
mov
cmp
jmp
pop
jnp
mov
test
negb
add
pop
pop
repnz
bound
fisttpll
lods
in
imul
mov
arpl
add
xchg
adc
fxam
test
movsl
scas
xor
and
mov
incb
cmp
rolb
insl
insl
or
rcrb
in
jnp
jle
testb
mov
shr
sub
mov
jle
out
and
cmp
mov
cmp
dec
lods
iret
pop
pop
and
not
in
pop
add
mov
xor
ljmp
add
add
int
repz
repz
pop
subl
jo
pop
and
nop
jmp
sarb
add
scas
cmpsb
pop
in
mov
popf
daa
jg
aaa
pop
movsl
aam
fisubs
les
mov
shrl
sbb
cmpsl
xchg
es
inc
bound
sbb
cmp
pop
and
fimuls
pop
test
inc
mov
jo
inc
xlat
inc
out
in
lret
dec
cmp
push
add
out
and
jnp
rcpps
xor
adc
jmp
xor
or
sti
mov
inc
xor
fst
lds
movsb
cmpsb
in
sub
xchg
sbb
das
or
dec
repz
hlt
das
add
lds
xchg
jo
cmp
dec
jmp
and
mov
and
cmp
testl
out
jno
test
insl
mov
fldenv
imul
add
gs
loope
and
repnz
push
repz
and
push
xor
cmpsb
push
pop
pop
stos
inc
mov
fcmovne
xchg
inc
js
jmp
sbbl
and
stos
ret
out
push
data16
je
jmp
cmp
mov
xchg
movsl
scas
imul
xchg
mov
mov
xchg
shl
jnp
bound
imul
or
sbb
sub
cltd
nop
dec
in
push
js
push
repnz
test
inc
iret
push
xor
push
jmp
and
inc
add
pop
out
mov
stos
movsl
mov
fs
xchg
jae
iret
test
inc
xor
loope
test
fdivp
loop
lods
mov
loop
cmp
cmp
cmp
imulb
sub
cltd
fstpl
xor
aaa
inc
in
stos
xor
jmp
out
sub
pop
imul
push
ret
in
push
mov
mov
mov
outsl
ja
lret
xchg
loope
cmp
pop
and
pop
add
or
pop
rclb
jo
add
cmc
insl
leave
popf
ret
in
repnz
sub
aad
test
dec
popf
dec
sub
push
inc
fisttps
imul
adc
push
cld
or
aad
and
pop
fnsave
or
mov
stc
in
je
pusha
imul
cwtl
cmpsl
push
sub
xchg
or
lea
ss
adc
adc
add
adc
dec
iret
push
fldenv
sub
ja
inc
jmp
xchg
imul
pop
push
adc
cmp
sti
repz
or
cmp
push
mov
dec
sti
dec
mov
das
dec
mov
das
lret
andl
fldl
add
loopne
mov
sbb
pop
in
outsl
and
into
sbb
add
lods
pusha
and
add
mov
xchg
fwait
and
xchg
add
push
mov
pop
cmp
ret
pop
ret
test
mov
aaa
xchg
dec
cld
test
dec
add
lret
insb
and
popf
int3
push
leave
xchg
cmpsb
lods
test
jbe
or
pop
push
pushf
or
sbb
cmp
cmp
fdivs
leave
jmp
add
sub
out
outsb
jmp
xchg
adc
inc
jge
add
inc
ret
scas
push
lods
out
xchg
mul
jecxz
sbb
imul
or
mov
aam
out
mull
icebp
cmpsb
jne
std
aaa
mov
hlt
cmpsl
ret
adcl
jae
sbb
push
data16
faddp
or
insl
loope
cwtl
or
inc
inc
insl
mov
inc
fldcw
rorb
clc
inc
das
or
pop
mov
in
faddl
out
shld
or
xchg
inc
mov
outsl
mov
mov
mov
out
std
and
or
jge
cmp
sub
add
and
jnp
sub
add
sbb
fs
test
add
popa
jo
rcll
jnp
xchg
xchg
sahf
mov
inc
movsl
dec
xchg
in
or
movsl
dec
mov
sub
push
mov
inc
fldt
cmpsl
cmp
sbb
xor
testb
inc
dec
imul
mov
adc
add
sub
push
jmp
pop
jmp
loop
int
pop
cmpsl
ljmp
loope
divl
pushf
mov
mov
inc
inc
pop
popa
pop
popa
dec
js
gs
insl
jge
or
int
imul
mov
cmp
mov
push
leave
inc
outsb
sub
dec
or
mov
sub
inc
loope
mov
mov
and
mov
add
int3
adc
xchg
and
xchg
pushf
sub
sub
idivl
mov
fs
push
neg
mov
in
orb
mov
dec
mov
pop
xorl
or
xchg
in
out
cli
or
xchg
aaa
loopne
pop
repz
imull
push
jge
divb
push
xlat
lods
cmp
in
inc
lds
dec
mov
and
psrad
repz
pushl
cltd
jmp
sbb
mov
popa
mov
jmp
cmp
sbb
outsl
idivb
imulb
out
clc
movsb
mov
push
test
adc
pop
sbb
aam
add
push
sbb
pop
movsb
mov
mov
sub
mov
sbb
dec
dec
ficomps
rcll
or
iret
cs
gs
dec
inc
movsb
loope
lds
mov
or
pop
and
into
out
into
sbb
stos
std
lods
sbb
jnp
push
jb
aas
sub
adc
in
pop
aam
sbb
xorl
and
cmp
sbb
lret
inc
and
inc
pushf
mov
sbb
jo
pop
cmp
inc
xchg
iret
jno
data16
cmpsb
clc
bound
push
push
dec
popa
pop
jae
mov
mov
xchg
pop
sbb
mov
popl
popa
or
xchg
jbe
lret
inc
cmp
cs
or
inc
and
add
fs
dec
ja
jle
imulb
jne
ja
or
xor
add
sub
pop
in
fisttpl
push
cmp
push
xor
clc
xor
test
jge
cli
negl
jnp
stc
xchg
cmp
inc
mov
xor
xor
push
imul
xchg
cmp
push
xor
idiv
sbb
scas
xor
or
jmp
push
in
adc
das
xor
inc
jae
jbe
and
adc
imul
xchg
mov
or
andl
jne
mov
fmull
repnz
mov
popf
fcomip
das
in
clc
push
loop
out
push
sbb
dec
stos
add
cmp
jns
dec
cmp
pop
or
mov
clc
popa
loope
in
sahf
mov
jmp
movsl
das
scas
lods
ss
add
add
cmp
xlat
out
xor
cmc
addr16
loop
mov
dec
out
mov
stos
sbb
negl
aam
inc
jmp
out
pop
mov
xor
repz
sbb
jno
pusha
lret
sub
xor
and
sub
ror
jnp
or
aaa
jo
xchg
pop
cwtl
aaa
stos
outsb
ficoms
in
xlat
adc
cmp
test
and
cmc
lea
and
in
xor
pop
and
lock
iret
push
in
test
cmovp
or
and
imul
xchg
fbld
xor
andl
xchg
rorl
loop
out
pop
sub
push
sbb
xlat
enter
mov
xchg
iret
cs
pop
fwait
cltd
fcmovne
jecxz
out
icebp
bound
lret
mov
cmpsl
jmp
mov
pop
jmp
cmp
cmpsl
mov
es
and
jmp
adc
mov
jno
push
mov
imul
es
and
mov
lahf
cmp
pop
in
add
mov
in
icebp
and
iret
and
inc
mov
addl
cmp
in
and
pushf
and
adc
mov
popa
test
fadds
sbb
int
pusha
pop
movsb
mov
add
xor
std
into
add
std
mov
xlat
notl
xchg
mov
and
and
inc
pop
mov
dec
pop
popa
test
xor
fcomi
jmp
and
or
cmc
push
in
in
or
repz
dec
pusha
xor
adc
in
repz
mov
mov
add
leave
hlt
cmc
pop
pop
stc
jge
daa
cmp
dec
mov
add
lret
aam
sar
jmp
lea
in
out
lods
xor
int3
mov
test
lret
sbb
cmp
loope
lret
aas
loop
imul
imul
xor
fwait
jecxz
inc
xchg
xchg
ret
sbb
in
mov
sub
loopne
lods
repnz
stos
xchg
aas
dec
sub
xchg
jns
pop
imul
pop
and
repz
rorl
mov
fldenv
pop
and
bndstx
cmp
mov
add
fs
push
cltd
xchg
icebp
or
mov
sti
sub
add
test
jmp
nop
dec
imul
mov
movsl
aaa
aaa
sbb
lret
mov
dec
push
test
fdivrl
cltd
sbb
pop
sbb
inc
imul
fdivrl
insl
lret
stc
sbb
shll
lret
out
xchg
or
adc
repz
call
test
cmpsl
dec
sbb
sub
xchg
lcall
iret
out
div
cmpsl
pushf
addr16
and
aad
test
and
adc
aad
cmc
cmp
push
adc
sbb
leave
inc
outsl
lods
repnz
dec
and
in
lock
pop
xor
out
lea
ficomps
ret
scas
inc
push
push
and
xchg
dec
into
scas
cltd
push
int
popa
push
mov
iret
xorl
add
push
stos
adc
pop
jmp
xchg
test
cmpsb
fimuls
cmpl
dec
mov
fs
xchg
xchg
pop
pop
mov
cmp
pop
mov
xor
push
push
sbb
cs
std
lods
adc
sbb
push
lds
or
add
inc
push
sbb
push
or
sub
mov
mov
insl
mov
mov
sbb
out
cli
xchg
and
mov
sbb
xchg
or
cpuid
xlat
cmp
push
movsl
popf
js
and
cmp
dec
mov
jge
dec
pop
xchg
lds
jno
push
je
outsl
movsb
push
pop
divb
add
cmp
leave
push
fcos
mov
push
pushf
push
sbb
dec
xchg
fiaddl
fisubrs
decb
inc
sbbb
lds
push
movsl
ja
sbb
jle
pusha
addr16
mov
mov
fadds
push
sbb
pop
in
repz
add
das
mov
mov
outsb
and
mov
loop
jnp
mov
mov
loop
loopne
dec
adc
cltd
scas
jno
and
or
cmp
adc
test
mov
cltd
or
push
mov
sub
jbe
add
jae
push
sbb
xchg
mul
aaa
lock
push
movb
in
movsb
add
pop
insb
pop
iret
movsl
ljmp
fadds
enter
movsl
mov
shrb
jmp
mov
add
xchg
adc
test
jnp
fcomip
xor
clc
notl
jnp
mov
dec
imul
pop
add
cmc
or
imul
cmc
lret
or
cmpsl
adc
in
lea
mov
mov
or
insl
inc
dec
popa
dec
jecxz
das
add
cmp
das
cmpsl
int
addr16
insl
leave
add
iret
cmp
mov
sbb
push
rcll
jo
sbb
mov
mov
leave
mov
cli
jnp
or
xchg
mov
xor
dec
cmp
in
dec
mov
addr16
pop
push
loop
push
mov
bound
add
fistps
fstps
inc
adc
imul
in
sarl
icebp
push
loop
mov
inc
xor
pushf
add
lods
leave
and
adc
xchg
sbb
cmp
and
popl
xor
push
jl
mov
adcl
outsl
mov
stc
ret
hlt
and
sub
in
push
fwait
xor
mov
inc
jmp
dec
ja
imul
adc
fiadds
or
lods
sub
add
cltd
test
shlb
sub
sub
fnstenv
add
and
pushf
push
push
cmp
fucom
ret
cmp
stos
call
inc
shr
cmc
lret
xor
loop
loop
lods
xchg
xchg
mov
pop
stos
mov
push
cmpsb
and
fildl
outsb
pop
pop
shr
sahf
and
in
das
or
inc
push
push
pop
jns
sub
push
push
mov
repnz
iret
jne
sbb
dec
loop
and
scas
adc
pop
in
add
repz
out
testb
jns
pop
xchg
clc
test
aaa
cmp
arpl
test
in
jmp
pop
scas
or
stc
xlat
cmp
pop
cmp
lock
xchg
lcall
jge
notb
mov
xchg
in
loope
iret
mov
or
mov
push
xlat
aad
xor
cmpsl
repnz
or
repz
iret
sar
stos
mov
lret
mov
dec
pop
dec
insl
push
loop
in
jle
mov
inc
out
push
outsl
and
and
xchg
xchg
aaa
cmp
repz
iret
dec
and
imul
and
mov
adc
out
dec
mov
std
cli
int
jnp
les
mov
pop
mov
imul
cmpl
mov
mov
lods
cmp
enter
pop
push
bound
scas
dec
push
xor
push
nop
sbb
adc
pop
jmp
imul
cmp
mov
cmp
sahf
roll
and
into
inc
in
lds
xor
addb
pushf
popa
inc
ret
jmp
mov
xchg
into
pushf
sub
ja
jmp
mov
jns
repz
push
fdivrp
or
repnz
loop
cmp
mov
add
aaa
popa
mov
cmp
cltd
pop
cmp
ljmp
popa
lret
into
adc
add
pusha
cmpsl
inc
or
movsl
andl
pop
es
loop
jecxz
or
cmpsb
cmpsl
pop
and
or
repz
lcall
mov
xchg
mov
xchg
jle
jl
insb
ds
inc
mov
or
adc
dec
lds
xchg
sbb
mul
fstpt
jecxz
mov
dec
shl
hlt
push
popf
fwait
sbb
jecxz
mov
in
int3
stc
lds
into
lcall
in
lock
pop
sub
popf
sub
push
in
imul
inc
cmc
jmp
mov
daa
dec
outsb
insl
mov
pop
fimuls
pop
add
push
jge
imulb
add
gs
or
pop
mov
push
push
mov
imul
cmpsb
adc
lret
je
dec
push
sbb
xor
or
xchg
cmp
fidivl
ficomps
pop
dec
adc
aas
scas
popf
test
fmuls
cmpsl
and
in
lret
lahf
sbb
sub
dec
jge
mov
jae
dec
or
mov
loop
sbb
pop
add
sub
popa
shll
jnp
or
iret
cwtl
movq
in
inc
cmpsl
test
jae
push
sbb
lea
xor
icebp
outsl
out
and
push
out
jno
ja
imul
mov
add
cmpsl
push
scas
cltd
push
inc
xchg
ret
inc
mov
jnp
loope
lret
fstps
xchg
in
jl
int3
and
push
outsl
mov
and
dec
xchg
and
mov
mul
cmp
xor
jecxz
dec
cmp
mov
xchg
sar
jmp
lret
out
pusha
sbb
cmc
iret
ljmp
pop
sub
es
push
test
jmp
sub
popa
xor
dec
cltd
cmp
mov
test
in
imul
adc
sub
mov
cmp
inc
pop
or
cmpsl
adc
dec
xor
mul
sarl
icebp
cmpsb
ficomps
mov
xlat
orl
lret
mov
insb
notb
sub
aad
test
add
addr16
inc
pop
adcl
jnp
dec
mov
xchg
xor
stos
cmp
out
cmpsl
in
call
movsb
mov
and
xchg
imul
dec
test
pop
push
insb
jl
in
push
or
sub
into
xchg
popa
xchg
add
push
mov
call
mov
mov
jecxz
cmp
aam
aas
lret
jns
sbb
xor
or
fisubrl
or
add
sub
mov
or
lds
scas
jmp
xchg
sbb
les
push
pop
jae
dec
or
dec
popa
js,pn
and
sbb
loope
fcmovnb
jne
out
test
jg
incl
movsb
push
cmp
loope
pop
add
adc
jmp
xchg
push
fwait
ret
mov
xchg
sbb
popf
or
mov
mov
pop
cmpsl
sbb
mov
dec
repnz
fldz
jmp
addl
pop
aaa
stos
sbb
shl
add
test
das
push
lds
mov
cmpsl
vpavgw
mov
add
ljmp
mov
adc
jbe
xor
jne
stc
mov
lods
repz
adc
add
hlt
jo
inc
lret
mov
xchg
or
dec
jecxz
sahf
cmc
add
push
out
add
mov
shl
and
rcr
adc
jmp
frstor
mov
sbb
decl
dec
out
scas
mov
cmp
testl
xor
cltd
imul
int3
stc
daa
xor
mov
mov
pop
outsl
loop
ret
leave
fisttpll
xor
push
jge
mov
push
mov
push
inc
xchg
xchg
dec
add
push
cmp
mov
imul
dec
push
dec
lods
into
fadds
push
sbb
or
jecxz
sbb
stc
cmpsb
mov
add
loopne
jmp
push
sti
negl
push
jge
shl
stc
xchg
cmp
push
mov
loop
inc
mov
in
xchg
cmpsb
insb
cltd
jge
jecxz
repnz
divl
xor
jae
dec
movb
lcall
sbb
loopne
mulb
xchg
jge
insl
mov
cmpsb
aas
add
int
mov
into
cwtl
pop
movl
inc
xchg
cmp
rcll
popa
jne
ret
pushl
lret
mov
add
mov
cmpsl
repz
dec
pushf
pop
ror
mov
pop
inc
in
adc
push
cmpsl
out
rcrb
clts
cmp
add
fsin
and
add
cmpsb
mov
or
sbb
scas
sbb
into
dec
push
pop
push
xchg
push
xchg
jns
pop
outsl
mov
xchg
jae
jne
decl
ja
dec
movsl
and
in
add
and
std
lds
lods
push
in
and
dec
stc
adc
shll
inc
sbb
push
sbb
inc
stc
outsb
stos
jne
mov
and
and
xchg
pop
jge
or
xchg
or
leave
dec
mov
loope
vsubsd
xor
in
in
xor
and
arpl
xchg
and
mov
ret
mov
pop
js
dec
jge
daa
add
lea
jno
test
icebp
dec
iret
dec
fldl
in
xor
jbe
inc
movsb
aaa
inc
rcrb
aas
jns
and
in
xchg
sbb
leavew
and
mov
jg
imulb
or
mov
iret
inc
test
or
push
add
cwtl
or
inc
sbb
in
in
loope
add
dec
mov
sti
jmp
stos
sub
std
adc
adc
add
scas
dec
and
mov
packsswb
dec
jg
outsb
adc
mov
xchg
fnstsw
or
shr
popf
inc
lea
aas
mov
jge
inc
jge
sti
xorl
mov
in
stos
dec
aas
cmpsl
stc
sbb
sbb
ret
pop
mov
shll
push
or
jno
inc
jno
xchg
sbb
sbb
cltd
pop
int
lods
and
jo
out
and
icebp
jno
fldt
push
sbb
mov
push
popa
pop
popa
adcl
int
inc
lock
jae
xor
push
or
out
push
pop
jns
dec
jns
mov
jno
mov
or
imul
lahf
movsl
pusha
xchg
jae
mov
add
and
iret
add
cmpsl
fs
insl
fnstenv
sahf
mov
add
adc
lds
leave
imul
std
addr16
or
cmc
shll
mov
test
insl
add
jl
inc
adc
aad
jmp
test
push
clc
adc
in
cmp
mov
or
lret
xchg
jge
cltd
or
aad
pop
lret
repz
test
test
mov
lret
jne
mov
xor
xchg
lea
cltd
or
push
jmp
mov
lods
push
in
inc
neg
popf
icebp
xchg
orl
cmp
int
add
xor
jmp
jns
jmp
xor
das
aaa
mov
cltd
inc
xor
jmp
cmp
jge
mov
mov
mov
jo
mov
and
or
popf
stc
dec
test
mov
mov
ja
fdiv
in
or
fadd
mov
push
jbe
xor
mov
inc
sub
roll
add
in
pop
popf
dec
cs
fistl
mov
push
cmpsb
in
out
rcr
fisttpll
xor
addr16
mov
hlt
jecxz
sbb
and
mov
lret
mov
push
xor
in
mov
add
mov
pop
movsl
neg
add
jmp
xor
jl
mov
xor
mov
std
fucomi
scas
add
in
aam
in
push
inc
xchg
add
rcrb
add
cmp
pop
push
in
jge
mov
iret
pop
stos
les
aad
fidivs
aaa
pop
scas
push
ret
add
cld
lret
icebp
aad
and
add
add
fsqrt
repz
enter
mov
mov
lret
pop
scas
inc
mov
in
in
stc
add
add
pushf
stos
fwait
push
jecxz
xchg
xchg
lcall
jge
cmpsl
mov
leave
call
add
push
mov
xchg
mov
out
jmp
lds
rorl
push
mov
pop
push
inc
cmp
inc
mov
adc
jle
loop
int3
call
fidivs
inc
sbb
in
fdivrp
sub
adc
xor
das
pop
insb
pop
xor
mov
ret
lods
and
add
adc
dec
jmp
adc
out
pop
adc
out
mov
fchs
imul
jns
mov
xor
cld
xorl
jg
adc
in
or
hlt
push
fisttpl
mov
fimull
xor
push
dec
lret
mov
int3
in
sti
adc
push
sub
loop
push
mov
stos
xlat
cmp
fs
xchg
adc
xor
stc
loop
lds
mov
daa
inc
xor
fisubrs
std
arpl
dec
addl
in
data16
xor
sub
ss
fwait
popf
jg
gs
jbe
sub
dec
or
divb
clc
jno
scas
in
int3
mov
fcmovnu
fcmovb
stos
push
test
sub
enter
dec
cmpsb
jae
sub
lcall
inc
dec
cmpsl
jns
add
mov
push
push
mov
jecxz
adc
add
xor
mov
mov
lds
fucomi
pop
scas
mov
mov
rol
or
lods
clc
stos
add
xlat
aaa
sub
fdivr
rcrb
in
jecxz
fnsave
mov
mov
lcall
sbb
fidivrl
pop
mov
outsb
rcr
push
bound
jb
decb
fxtract
inc
pusha
daa
lods
add
fistpll
push
inc
xchg
dec
out
jo
mov
cld
daa
inc
cmp
push
lea
lret
fisubl
int
lds
dec
jb
adc
cmp
das
pusha
sub
bound
sbb
inc
ror
pop
cmp
test
adc
sbb
sub
out
mov
pop
mov
xor
pop
mov
xor
xor
out
sub
xchg
mov
mov
aaa
imul
clc
xor
sub
mov
and
push
xor
fsts
adc
ret
test
xchg
ja
faddl
divb
shlb
jl
xlat
pop
jmp
xor
movsl
pop
push
mov
imul
sbb
insl
pushf
adc
cmc
fbld
add
test
in
roll
mov
pop
or
pop
push
jg
stos
dec
push
sbb
mov
ja
in
push
fcoms
jl
aad
clc
inc
test
mov
pop
sub
inc
es
jno
dec
decb
iret
add
std
add
jmp
data16
rolb
out
mov
fists
mov
fdivl
or
mov
inc
adc
cli
dec
data16
call
ja
loope
aad
adc
mov
fistl
insl
repnz
jbe
mov
testl
lret
out
inc
cmc
mov
int3
ret
test
and
add
cmc
nop
xor
sbb
rcr
cmc
mov
or
loopne
mov
adc
or
mov
xor
sarb
cmp
aad
cli
or
and
pop
int3
or
das
loop
xor
cmc
push
loopne
mov
negb
lret
mov
fwait
in
hlt
and
test
and
add
push
fs
pop
mov
add
shl
pop
les
push
fxch
aad
fildl
mov
push
dec
test
por
add
or
dec
push
jg
nop
fadds
repnz
dec
lods
xchg
add
push
out
xchg
jp
xchg
aad
loope
adc
xchg
xor
leave
mov
jno
scas
and
adc
inc
sbbl
mov
mov
cli
psubusb
pop
out
fmull
dec
sub
mov
call
icebp
or
sbb
lahf
jecxz,pt
in
dec
cmp
jge
movsb
pop
fwait
cmp
xor
mov
jl
or
loop
repnz
movsl
xor
push
loopne
ds
add
pop
leave
dec
mov
loopne
mov
out
mov
jle
xor
or
mov
pop
repz
jle
mov
mov
dec
in
mov
out
jb
lret
xor
xchg
xor
jg
pop
test
xchg
iret
xor
ja
mov
push
aaa
test
mov
jle
xor
mov
lret
out
fbld
pop
aad
lret
daa
xor
andb
dec
aaa
lcall
mov
xchg
and
stos
push
cli
mov
and
clc
jne
pop
out
dec
sub
test
loop
push
lock
insl
pop
or
cmc
xchg
xor
dec
pop
data16
repz
cld
sub
dec
icebp
xor
mov
adc
mov
test
cltd
les
or
enter
adcl
loope
in
xor
aaa
xor
jne
and
xchg
aad
inc
mov
aam
add
add
ja
fdivrs
jne
mov
xor
shrb
mov
lcall
xor
mov
js
repz
jmp
mov
in
fadds
push
add
fcoms
mov
subb
cmp
mov
shlb
std
lret
lret
ss
pop
data16
dec
and
sub
dec
mov
jge
cmp
ret
negb
out
arpl
lock
rolb
add
pop
in
mov
in
test
call
jnp
or
cltd
negb
lds
lret
repz
mov
jle
push
mov
insb
push
ret
loop
cmpsb
jne
pop
or
sbb
aas
stos
into
xchg
pop
fnsave
dec
in
maxps
mov
out
idivb
loop
cmp
and
xor
inc
int3
pop
call
mov
mov
add
pushf
mov
leave
enter
push
pop
jecxz
push
sarb
pusha
cli
add
adc
mov
or
movsl
sub
push
mov
imul
out
xor
sbb
push
mov
enter
adc
xchg
stc
or
push
jl
cltd
xor
adcb
iret
mov
push
repz
xor
cltd
sbb
sarl
enter
mov
movsl
adc
adc
push
jo
cmp
movsb
sub
pop
inc
or
xor
nop
out
xor
mov
fwait
jl
movsb
cltd
mov
adc
dec
push
mov
jns
jb
sbb
rcrl
insl
stos
out
int
cmpl
test
test
cmpsl
xor
push
call
test
dec
push
xor
loopne
cmpsl
xchg
xor
sub
push
xor
lds
subb
rcl
fdivrs
out
cltd
fcmovbe
xor
adc
clc
jmp
xor
jno
fdivl
fdivrl
testl
lahf
inc
shlb
sahf
out
cmpsb
dec
loopne
mov
sbb
fidivrl
dec
in
or
xchg
lods
je
push
sub
lret
jg
stc
rcl
push
cltd
loop
lds
fnstenv
outsl
sub
inc
xor
cs
and
fldcw
call
in
arpl
fldt
xlat
jecxz
mov
pushf
hlt
mov
sub
or
sbb
mov
mov
cmp
pop
jbe
scas
cmp
aam
mov
stos
js
je
fstpt
hlt
xchg
mov
xor
push
popa
jnp
hlt
in
arpl
je
add
outsb
pandn
inc
insl
jbe
shll
cmp
xor
pop
pop
shrb
mov
test
arpl
jmp
add
scas
cmp
imul
pop
jl
repz
mov
mov
movsb
xor
cltd
mov
ds
test
fsubrl
ret
jno
js
jae
push
dec
xor
jnp
add
shll
jg
mov
shlb
cltd
arpl
mov
xor
test
jle
out
jne
inc
jnp
inc
in
jne
clc
add
popf
inc
xor
inc
or
xlat
ja
or
in
xor
adc
push
xor
jno
pop
mov
jbe
push
loopne
out
cli
cs
mov
imul
pusha
mull
inc
lea
push
loope
es
pop
inc
or
in
ja
aad
sahf
jl
stos
push
mov
mov
push
js
jge
int
cmp
clc
loop
test
scas
pop
xor
call
push
dec
aad
push
mov
daa
mov
sub
movsb
adc
sahf
inc
nop
sbb
out
lret
aad
inc
sub
xchg
or
add
jmp
and
dec
in
xor
inc
ficoml
clc
pop
fcomp
test
push
insl
cmp
mov
stos
pushl
mov
and
shlb
aas
cmp
fisubl
sbb
stc
das
sub
xor
sub
aad
mov
jo
fwait
or
and
xor
sahf
lods
aam
idiv
or
push
push
mov
ret
xchg
sub
loopne
mov
sbb
frstor
arpl
out
out
mov
scas
mov
pushf
fistps
ss
popa
sbb
es
add
adc
push
adc
xor
and
xor
add
fidivrl
push
sub
loopne
sahf
movsl
jecxz
dec
lret
popf
and
cmp
andb
ret
mov
inc
jns
push
or
xchg
insl
pop
mov
iret
test
cli
jmp
push
mov
lods
in
mov
cmpl
loop
mulb
fwait
repnz
hlt
cltd
or
imul
ret
iret
in
std
leave
mov
mov
jmp
test
stc
pop
ljmp
cli
cmp
cltd
xor
sbb
fnstenv
daa
cmp
ds
out
xor
push
push
out
mov
xor
cld
js
and
ds
dec
xchg
movsb
daa
xor
rcrb
jmp
jle
dec
xor
mov
push
add
sub
cmc
outsb
adc
xor
pop
outsl
std
inc
xor
lcall
fbld
mov
xor
inc
loop
cld
xor
jo
jle
xor
cmp
dec
int
mov
add
lea
xchg
cmp
icebp
cmp
clc
insl
cli
mov
and
int3
mov
push
fcmove
sbb
jne
faddl
iret
xchg
inc
xor
pop
addb
fdivl
push
xchg
mov
sahf
xor
adc
insl
push
shll
mov
dec
loope
and
xor
test
decb
pushl
xor
push
aaa
inc
xor
in
pop
jmp
xor
iret
xchg
repnz
scas
js
das
jp
push
pop
pop
add
fcmovnu
in
rorl
jecxz
fnstsw
xchg
loop
in
xlat
cmp
sub
pop
hlt
add
in
lret
jne
xor
arpl
xor
mov
mov
add
xor
push
stc
mov
push
xchg
into
lods
push
lcall
jb
pop
stos
in
sti
mov
je
scas
mov
push
sub
psubq
aad
adc
mov
gs
loopne
ret
adc
pop
xor
sub
sbb
mov
pop
and
or
stos
push
push
cmpsb
push
xor
jl
cmp
das
cmp
decl
cmp
inc
sbb
push
xor
cltd
or
xor
jbe
rorl
imul
orl
push
xor
mov
jo
mov
jb
or
jae
fnstsw
call
sbb
mov
fimull
stos
mov
adc
cwtl
sbb
dec
jne
lret
xor
into
ficoms
mov
sbb
into
adc
gs
out
inc
or
shll
clc
pop
das
cmp
xor
out
cmc
push
lret
xchg
fdivs
xor
add
cwtl
add
lea
mov
cmp
icebp
orb
pop
sahf
jg
ljmp
jne
push
addl
ja
xchg
add
loop
and
adc
loopne
out
xor
ds
xor
and
push
xor
xchg
xchg
and
pop
push
sbb
mov
xchg
fcomps
push
cmp
push
add
leave
in
xchg
dec
mov
adc
fbstp
insl
cltd
mov
cmp
lahf
jns
aad
test
jne
shll
pop
iret
repnz
lods
xor
jmp
sub
pop
xor
lods
in
std
fidivrl
and
mov
sti
add
lea
imul
imull
repnz
pop
xor
dec
hlt
rclb
jg
icebp
cmpsb
mov
pop
or
sub
mov
loop
std
outsl
aam
in
sbb
dec
push
inc
xor
hlt
sahf
inc
xchg
cmp
mov
aad
or
jge
push
gs
xchg
je
pushf
pop
push
sub
push
inc
in
gs
in
addr16
xlat
lds
inc
test
fs
aad
jae
inc
lock
test
rorb
xor
sbb
xchg
inc
ficoml
mov
ficompl
mov
add
mov
push
jg
mov
xchg
fmull
iret
or
lret
hlt
cwtl
jae
outsl
mov
mov
inc
mov
push
notl
cld
add
cmp
outsl
xchg
into
sbb
cmp
rorl
add
or
cmpl
xor
push
push
fdivs
out
insb
movsl
es
mov
push
dec
clc
call
mov
adc
pop
jg
loopne
inc
and
inc
push
or
pusha
addb
imul
movsb
fs
pop
add
loopne
jp
lea
sub
ret
addb
dec
iret
lock
mov
movsl
mov
scas
or
lret
shrb
aad
hlt
inc
rcr
pop
shl
adc
mov
inc
iret
sbb
js
fisttpl
cwtl
mov
loope
andb
xlat
cld
pop
std
rcl
dec
aaa
scas
lahf
jb
std
sti
stc
xchg
fcom
into
ret
int3
mov
mov
pop
pop
xor
std
jnp
pop
and
pop
addr16
jmp
negl
dec
add
arpl
cli
jae
mov
inc
jp
fildll
inc
lret
mov
mov
fldenv
movsb
ret
ret
xlat
js
add
mov
jb
roll
repz
repnz
in
gs
popa
mov
stos
xor
mov
pop
sbbl
xchg
jno
cmp
xor
add
cli
mull
movsb
mov
push
xor
loop
out
imull
add
mov
sub
cmp
daa
mov
pop
sti
std
shlb
in
mov
mov
int
nop
sbb
stos
pop
xchg
mov
fucomip
adc
and
cmp
pop
cmpsl
movsb
adc
and
mov
repz
xchg
sub
fistl
inc
or
out
aas
fucomip
icebp
fwait
jae
sub
inc
inc
inc
addb
jno
fcmovb
movsb
sub
push
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
xor
push
mov
sub
cmp
xor
cmp
call
cmp
jmp
dec
ret
dec
iret
arpl
icebp
sub
lods
lahf
mov
test
or
sbb
cmp
sub
repz
int
xchg
ret
sub
xchg
mov
std
arpl
shlb
test
pop
xchg
mov
push
push
and
cmp
sub
pop
dec
xor
or
or
test
add
shld
sbb
and
btr
xor
bsf
movsbw
pushf
mov
sub
pushf
sub
add
pushl
or
mov
cmc
stc
mov
pushf
test
pusha
pushf
call
cmp
pushf
xor
sub
stc
clc
call
pushf
cmc
cmc
cmp
push
pusha
movw
push
lea
jae
call
cwtl
cwtl
lea
push
push
push
pusha
mov
mov
cwtl
pushl
popl
pop
push
mov
pusha
cwtl
movsbw
mov
movl
movzbw
call
lea
jmp
cmp
jmp
add
dec
outsl
arpl
inc
jb
gs
popf
adc
add
mov
lods
push
add
movb
lea
jbe
xchg
shld
bswap
bsf
mov
clc
clc
add
movzbl
mov
cmp
add
neg
rcl
movl
and
mov
cmp
pushf
cmp
jmp
pushl
pusha
movl
push
lea
jmp
push
mov
movb
jmp
pushf
movb
mov
pusha
mov
mov
mov
lea
jmp
cmp
push
lea
je
cmc
call
xchg
sub
mov
cli
sbb
mov
aad
cmc
notl
xor
sub
sbb
rcrl
fstl
or
pop
mov
movsl
dec
mov
fdivr
adc
jmp
ljmp
or
pop
in
out
jb
std
or
scas
fstp
or
sbb
fstps
dec
jnp
test
push
xchg
push
xchg
or
arpl
mov
xchg
mov
sbb
outsb
pusha
out
mov
or
sub
movsl
mov
hlt
ror
frstpm(287
xlat
clc
std
incb
adc
push
inc
xor
stos
add
movsb
jmp
lea
jae
jmp
lea
jae
pushf
movb
push
clc
sub
call
pusha
pusha
inc
pushf
pushf
inc
movb
movb
mov
lea
jmp
jne
jbe
push
inc
push
inc
pusha
lea
jmp
push
movl
pushf
pushf
movb
lea
jmp
jmp
stc
shr
shr
mov
stc
bt
call
hlt
mov
aas
xor
add
jecxz
loop
jecxz
jecxz
repnz
adc
aas
out
ret
aas
ret
add
jb
aas
adc
repnz
shl
aas
jb
ret
and
jecxz
aas
mov
jecxz
repz
ret
aas
jb
adc
jb
rcl
and
mov
in
pushf
pusha
movb
movl
jmp
jmp
lea
jne
lea
movzbw
movb
pushf
sete
lahf
pushf
mov
bswap
mov
movzbw
pusha
lea
pushf
jmp
not
pushfw
popw
stc
and
shr
mov
jmp
je
test
cmp
pushf
pushl
lea
jae
jmp
movsbw
call
pushf
mov
push
pop
movsbl
pop
pushf
pushl
ret
lea
jne
and
bts
mov
test
cmp
or
jmp
lea
je
pusha
lea
jmp
call
popf
rdtsc
nop
pusha
call
pushf
mov
movl
call
pop
movsb
ljmp
and
sbb
push
pop
dec
in
push
push
cmp
movsl
and
xor
out
rclb
or
adc
pop
cmp
add
lret
push
jge
and
mov
push
cli
inc
ljmp
mov
mov
inc
sbb
and
nop
inc
dec
rcll
incl
dec
sbb
add
out
fstpl
cmc
inc
or
and
dec
pop
shrl
pop
mov
outsl
sti
pop
xor
pop
xchg
fwait
dec
fstl
inc
rol
push
sub
shl
cmpsl
lods
addl
mov
jns
int3
inc
nopl
dec
stos
dec
lods
lock
bnd
sub
imul
pop
adcl
lcall
mov
insb
popa
out
ret
mov
xchg
stos
adc
inc
data16
push
xor
inc
inc
push
add
gs
cmpsl
std
add
xchg
dec
sahf
sbb
push
fistpl
dec
mov
cwtl
ljmp
outsb
fisubrl
stc
ss
std
aad
sbb
sbb
cmp
cli
out
stos
fmulp
icebp
inc
jle
xchg
and
jmp
push
fisttpl
scas
je
jecxz
push
xor
mov
scas
or
add
jnp
imul
ret
in
or
popa
dec
in
jg
cwtl
lock
xchg
stos
jg
jns
sbb
dec
cmc
push
jmp
sbb
icebp
mov
jp
stos
mov
push
fcmovb
stos
add
dec
inc
mov
mov
push
lea
call
jmp
mov
bswap
bswap
push
mov
pushf
pushl
ret
jmp
lea
ja
inc
push
jmp
test
pusha
clc
pushf
or
lea
jle
pushf
lea
je
call
stc
adc
shld
mov
cmc
cmp
cmpb
pushf
mov
lea
jne
neg
sub
call
mov
push
pushf
pushf
pushl
ret
pushl
rep
jmp
xchg
pushf
pushf
movl
movw
movl
push
lea
jmp
jmp
call
lea
jne
pushf
call
pusha
pushf
movb
jmp
pusha
movb
pushf
lea
call
pushf
jmp
cld
add
pop
sbb
stc
pop
sub
ss
in
mov
es
sbb
mov
and
aas
insb
std
inc
aas
inc
push
bound
xor
aam
dec
repz
xchg
hlt
loope
mov
cmc
jmp
sbb
rorb
sub
fcmovb
lods
push
and
in
lret
in
sbb
test
enter
cmp
xor
aad
dec
jnp
or
xchg
hlt
loopne
cltd
pop
dec
rol
dec
cmpb
dec
mov
fwait
add
stos
loop
sbb
adc
pop
jnp
push
pop
enter
hlt
loope
ficomps
inc
clc
std
cli
pop
dec
sbb
fcmovb
lods
push
add
bt
test
sub
pusha
xchg
jmp
call
mov
imul
clc
inc
pop
data16
fs
aaa
push
fiaddl
jae
push
cwtl
test
sub
push
fidivrl
mov
test
stos
sub
mov
xor
dec
adc
inc
pop
ds
mov
ror
test
pop
xor
dec
cmp
dec
push
inc
pusha
push
cmp
jnp
add
push
adc
xchg
fbld
addr16
in
and
pop
out
movsb
fadds
dec
pushf
jp
jb
inc
in
or
ret
fsubs
push
pop
pop
insl
jle
add
lods
add
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
pushf
lea
je
setb
not
lea
pushf
movzwl
bswap
lea
movsbw
mov
push
jmp
pusha
xchg
push
jmp
pushl
lea
jae
ja
xor
pusha
pushf
pusha
jmp
js
lock
pop
in
add
cmpsl
popa
xchg
leave
mov
lret
jns
mov
iret
lock
out
dec
jo
sarb
js
bound
fwait
in
mov
out
rcll
xchg
adc
mov
aaa
sbb
pop
fidivl
mov
jp
xlat
popf
mov
mov
mov
lcall
inc
xchg
mov
scas
dec
fcmovb
lods
rcll
adc
scas
jno
sub
dec
and
lock
jb
jb
xchg
jle
or
test
xor
mov
push
js
mov
sarb
jp
fistl
push
scas
jno
icebp
icebp
xor
sub
repz
add
jb
mov
aaa
mov
dec
faddl
dec
test
jl
add
push
mov
ficomps
or
mov
add
aas
lea
sub
jg
push
adc
nop
xchg
dec
nop
in
xlat
dec
popf
shrb
outsb
sub
mov
ss
pop
mov
sbb
ret
inc
xchg
mov
adc
dec
gs
stc
fwait
pop
xchg
ljmp
jmp
leave
inc
repnz
arpl
ss
mov
clc
cmp
insb
aas
xor
xor
outsb
pop
xchg
push
ret
js
mov
mov
pop
and
scas
out
gs
setl
lods
call
mov
fcomip
repz
fcmovnb
dec
dec
pusha
insb
fbstp
jge
loopne
fidivrl
pop
sub
sbb
or
dec
pushf
push
mov
sti
in
ret
lock
mov
fmuls
adc
lods
out
fdivs
inc
cmpsl
xchg
pop
test
xchg
xchg
mov
int3
pop
fcmovb
scas
mov
cmovge
inc
push
dec
xor
inc
dec
dec
add
aas
sti
jmp
icebp
xlat
pop
mov
ds
xchg
insb
sub
dec
xor
jb
ret
jae
daa
dec
aam
and
add
sbb
std
jp
push
andw
movsb
ljmp
inc
repnz
inc
in
push
sarl
dec
int
fsubs
imul
or
or
fcomip
sub
loop
xor
gs
repnz
cld
fsts
adc
dec
aam
mov
mov
push
repnz
inc
push
jle
mov
sub
and
add
mov
lea
push
movl
push
mov
pushl
popl
pusha
push
pushf
movl
pushl
ret
movl
jmp
pushf
pushf
movl
pushl
pusha
call
clc
cmp
xchg
cmc
clc
push
lea
js
mov
call
cmp
adc
jnp
push
cs
repnz
clc
cli
add
in
decb
add
and
mov
xlat
mov
rol
outsl
test
and
inc
lods
mov
fld
int
mov
cli
fcomps
fcomp
in
and
push
add
stos
sbb
stos
inc
inc
enter
outsb
js
mov
fdivr
mov
mov
test
jbe
fcmovb
mov
js
pop
das
cmp
inc
sub
popa
dec
xor
cmp
jnp
xchg
dec
or
idiv
dec
mov
xchg
ret
add
inc
mul
cmp
jo
insl
cmp
out
pop
mov
and
cmovle
add
or
pop
dec
int
sub
bound
xchg
and
pop
pop
xchg
xor
popf
mov
or
pop
add
sub
daa
dec
jge
addr16
mov
ret
mov
iretw
pop
jg
in
popf
out
hlt
xor
adc
shll
int
push
add
adc
or
pop
add
jp
mov
cmc
mov
call
jmp
pusha
pushl
push
lea
je
not
pusha
pop
lea
mov
lea
movzbw
sete
lea
mov
movzbw
lahf
call
pusha
lea
mov
push
mov
mov
mov
call
movzbw
mov
push
push
push
pushf
lea
jmp
push
std
testl
adc
adc
xor
dec
gs
dec
shr
xchg
push
stos
lock
mov
jns
icebp
repnz
dec
sbb
sub
mov
out
jb
clc
imul
pop
push
popa
ljmp
fcmovb
mov
imul
aad
test
mov
mov
cs
or
in
lods
movsb
fmuls
jns
jbe
jb
inc
adc
ficomps
adc
lret
cmp
cmpb
fptan
neg
cli
sub
inc
jo
js
mov
test
jecxz
dec
sub
jae
mov
cmp
sub
jecxz
add
lds
jns
xchg
pushf
mov
fcmovb
mov
mov
jns
pusha
clc
std
and
popa
aas
and
mov
pop
jbe
adc
xchg
push
mov
sub
mov
stos
aas
je
push
dec
sbb
pusha
testl
xorb
lcall
cmp
fcmovb
mov
pusha
and
add
sarl
mov
pusha
push
movl
lea
jmp
pushl
setg
xchg
lods
dec
dec
shl
rcl
add
test
inc
sub
cmp
xor
not
bt
adc
sub
and
shl
rol
xor
shl
shl
neg
call
btr
add
xor
lea
bswap
pusha
push
mov
pop
jmp
call
test
sub
lock
adcl
popa
jnp
outsl
pop
imul
push
fs
jb
or
out
mov
clc
or
sbbb
in
xor
fistpl
sahf
inc
daa
lret
jl
mov
mov
lock
inc
xor
mov
mov
mov
pop
daa
cmp
add
lock
mov
mov
mov
xchg
and
aam
stos
xor
out
push
cmpsb
or
scas
dec
adc
popf
mov
adc
fidivl
movsb
cltd
sbb
add
out
movsl
inc
mov
orl
jno
mov
push
enter
stos
mov
mov
add
adc
mov
ja
movsl
leave
sti
shrl
mov
scas
mov
and
dec
repnz
cmovl
xchg
dec
test
dec
xchg
pop
adcl
scas
pop
mov
and
nop
movsl
lcall
ljmp
mov
mov
dec
mov
add
cli
or
pop
dec
inc
fs
enter
daa
mov
xchg
cltd
sahf
pop
pop
mov
scas
push
hlt
add
cmp
sub
or
add
loopne
mov
insb
adc
in
mov
push
das
inc
sub
int3
repnz
sbb
add
repnz
aad
movl
mov
bswap
lea
mov
mov
call
lea
ja
test
push
add
jmp
mov
pushf
pushf
mov
movb
lea
jmp
cwtl
mov
jmp
jmp
rorl
pop
scas
push
push
outsl
mov
sti
dec
push
inc
imull
mov
daa
xchg
xchg
lds
in
fidivrl
cmp
lock
mov
cmp
es
and
mov
sbb
jne
ret
out
sbb
cmp
push
add
icebp
test
dec
cmp
std
mov
fwait
inc
xor
hlt
mov
dec
inc
inc
fs
mov
push
jb
dec
sub
jle
pop
pop
outsl
cwtl
jne
xchg
mov
mov
push
movb
pushf
movl
movb
call
lea
jae
stc
test
xor
jmp
movl
pusha
movl
pusha
movw
lea
jmp
jmp
pusha
pushf
lea
jae
jmp
cmp
mov
pushf
pusha
lea
jb
stc
pushf
cmp
cmp
mov
jmp
lea
jbe
sets
mov
bsr
shrd
jmp
stc
bt
test
xor
pushf
mov
lea
call
call
bt
cmp
lea
jne
ja
jmp
stc
stc
add
mov
lea
jmp
call
push
test
add
lea
stc
cmc
jmp
mov
call
add
cmc
mov
shl
sbb
rol
mov
clc
pushf
test
pusha
cmp
jmp
and
std
cmp
mov
es
sbb
dec
push
cmp
dec
push
push
jb
out
xchg
push
mov
mov
mov
sarl
xchg
dec
sbb
or
cltd
icebp
mov
adc
sbb
cli
pop
dec
rcll
pop
rorb
out
jns
mov
cli
or
add
movsl
mov
and
je
pusha
movb
cmp
pushl
pusha
push
push
lea
je
pushf
pushl
lea
jmp
movl
movw
lea
jmp
cmp
or
jmp
mov
sub
ja
sub
sbb
cmp
mov
pop
push
mov
test
aas
adc
cmp
xor
mov
mov
jecxz
add
js
jg
mov
add
pop
and
das
fwait
mov
pop
or
outsl
lods
jo
shlb
jecxz
dec
xchg
sub
pop
push
pop
aas
cmp
dec
pop
pusha
les
mov
xor
addr16
jno
lret
cmc
clc
enter
rorb
xchg
push
ds
push
sub
fcoms
std
cmp
jb
dec
stc
push
pop
sbb
gs
xor
and
jb
fcmovb
mov
sub
mov
repnz
hlt
repnz
hlt
sbb
inc
xor
mov
mov
aam
daa
hlt
xor
cmc
dec
xchg
in
call
lahf
mov
xchg
fistpl
inc
push
call
loope
negl
into
jmp
mov
xchg
push
sbb
dec
popa
outsb
jo
cmp
stos
add
call
mov
cmp
push
ljmp
aam
push
pushf
push
jge
mov
subb
jle
sub
dec
push
rcr
mov
stc
dec
sahf
in
sub
sar
lods
jecxz
fidivl
out
scas
mov
subb
push
popa
outsl
jl
mov
push
jl
int
lock
xor
das
cmp
ss
imul
movsl
scas
mov
subb
int3
jle
push
inc
call
cmc
push
mov
or
and
call
jmp
call
dec
lock
lret
dec
ljmp
cmpb
test
add
mov
inc
jns
movl
mov
cmp
out
mov
mov
in
pop
mov
inc
xchg
mov
push
push
insb
imul
sub
jl
jno
xor
xchg
cli
dec
adc
mov
sub
jnp
enter
push
mov
repz
pushaw
outsl
xchg
es
cmpsb
xlat
clc
in
rcr
lret
in
in
pop
fcmovb
mov
push
xor
hlt
scas
dec
or
nopl
loope
and
pop
popf
outsb
hlt
mov
dec
mov
sahf
aas
sbb
rolb
lods
je
iret
sbb
inc
aad
mov
pop
sub
cmp
aam
call
sbb
xchg
lcall
inc
mov
jbe
mov
daa
std
sub
inc
pop
sub
dec
add
fsts
xor
rcr
mov
movsb
ss
ja
push
pop
pop
pushf
dec
push
inc
popa
inc
popa
jnp
addr16
outsb
mov
xor
jb
imul
mov
lret
mov
jl
out
test
cmpsb
insb
pop
ficoml
mov
sbb
cmp
mov
lods
shlb
clc
xchg
jb
out
fwait
loopne
insb
and
lock
push
or
xchg
scas
xchg
jno
and
jecxz
jb
in
lret
jnp
test
add
in
shll
jmp
mul
add
adc
or
mov
movw
pushf
pop
not
mov
jmp
cmp
pushf
pushf
lea
je
push
cmp
jmp
movb
movl
push
lea
jmp
str
push
pushf
pushf
movl
pushf
push
call
add
inc
js
je
jb
arpl
jae
pusha
pusha
lea
jae
bt
jmp
mov
call
lea
jb
push
pushf
adc
lea
pusha
pushf
pushl
ret
mov
lds
fnstcw
iret
loope
mov
out
pop
adc
ret
cmp
dec
push
ljmp
add
xchg
pop
dec
arpl
sbb
xchg
push
lds
add
xchg
adc
push
fistpll
cld
or
jge
or
iret
mov
push
jnp
cmc
mov
enter
stc
cli
idiv
lods
add
imul
jmp
addr16
sub
xlat
int3
mov
mov
fcmovb
mov
je
add
fs
call
pusha
pushf
pushf
adc
movb
lea
jae
call
add
stc
push
jle
jp
adc
ret
mov
call
adc
mov
test
gs
dec
and
sbbb
cs
jne
ret
out
jmp
mov
out
fsts
jmp
loope
arpl
mov
xor
push
movb
mov
pushl
ret
sub
rolb
scas
cmpl
ja
fwait
leave
stos
mov
add
or
out
inc
andl
lods
scas
test
and
inc
fwait
and
pop
sbb
inc
push
pop
fildl
shrl
sbb
in
fwait
test
test
bnd
cs
sbb
das
xor
loop
call
jno
cmpb
addr16
gs
sbb
fcmovb
mov
hlt
pushf
pusha
pusha
mov
lea
jmp
lea
jne
push
lea
call
push
movb
pushf
pusha
lea
jmp
push
cmc
or
call
push
call
call
lods
lock
out
rcll
loopne
ss
fsubs
push
enter
dec
cwtl
stc
mov
push
and
into
movsl
sbb
lods
pusha
popa
mov
rcl
insb
add
jnp
xchg
mov
or
jmp
rcll
daa
iret
sub
dec
popf
cmpsb
xchg
xchg
call
lock
or
mov
pop
dec
cmpsl
sbb
pop
mov
stos
sub
cwtl
rorl
pop
stos
and
pop
lock
stc
in
add
lods
lea
pusha
push
push
and
mov
xor
cmpsb
scas
xorb
push
fiaddl
inc
subb
out
xchg
lret
push
inc
jmp
adc
lods
mov
arpl
hlt
test
mov
nop
mov
dec
xchg
cs
jge
pop
mov
xor
out
and
push
int3
cltd
adc
mov
lret
or
jnp
cmp
ja
outsb
cwtl
mov
xchg
ficoms
fsubr
sti
jmp
outsl
cmp
add
inc
xchg
shl
icebp
pop
cmp
daa
and
mov
xchg
pop
push
cli
test
xchg
or
xor
lret
and
ss
mov
sti
mov
cs
sbb
sahf
fcmovb
shrb
sub
in
fs
js
sbb
subb
jle
xchg
movsb
lret
test
jl
jno
xlat
js
mov
mov
fsubrl
arpl
sub
das
jge
fstl
xchg
pushf
cmp
and
mov
shlb
add
push
mov
lea
jne
inc
pushf
movw
movzbw
mov
push
jmp
popa
pop
or
stos
gs
test
mov
sar
ljmp
pop
das
push
pop
outsb
inc
lea
cltd
mov
lahf
dec
sarl
mov
out
icebp
bound
cmpsb
lret
jno
lods
jo
clc
jecxz
das
jno
xchg
in
popa
xchg
stc
aaa
inc
addr16
fstpt
mov
fcompl
push
ss
dec
daa
pop
outsb
add
rcll
inc
push
mov
sbb
mov
mov
xlat
pop
mov
mov
sti
fs
call
cmc
cmp
push
jmp
lods
repz
aad
mov
in
lock
xor
es
push
pop
out
and
mov
lea
add
lock
xchg
mov
sbb
aaa
dec
push
cmp
ret
push
jae
push
or
into
dec
fidivrs
add
icebp
add
fidivl
clc
sbb
aam
push
stos
push
clc
adc
push
push
jbe
mov
push
ss
inc
xchg
jb
dec
testb
rcrl
call
scas
jl
push
cld
sub
jmp
sbb
cmp
in
pop
xchg
adc
out
fisttpl
bound
push
ljmp
mov
dec
mov
and
fwait
ret
out
je
es
adc
cmp
out
mov
xchg
pop
xchg
mov
mov
iret
mov
out
and
iret
xchg
add
xor
push
xor
xor
cli
fwait
xchg
in
pop
sub
dec
ss
call
cmp
and
push
jbe
and
clc
mov
and
mov
sub
fsubs
rolb
rol
out
pop
adc
jae
push
and
mov
mov
mov
inc
ftst
xchg
jmp
jp
push
call
add
and
add
aas
mov
jbe
ret
fs
cmp
jmp
jmp
push
icebp
aas
sarl
insb
lcall
rcl
fistpl
std
out
fcompl
mov
jmp
push
lods
pushf
pushf
dec
cmc
xor
clc
ror
jmp
lea
pushf
xchg
setns
push
movl
movzbw
cwtl
not
lea
mov
call
out
imul
cmp
cmp
pusha
bound
jle
mov
ret
cli
adc
gs
inc
subl
sbb
pop
mov
push
cmpsl
mov
movsb
xor
inc
test
sahf
or
sbb
loope
xchg
push
insb
pop
jne
pop
mov
pusha
dec
xor
jns
inc
popa
outsb
hlt
add
lahf
inc
add
dec
jle
xor
mov
dec
pop
decb
sahf
test
insb
mov
cmp
jecxz
fistpll
out
add
jp
mov
aam
fmull
aaa
or
add
dec
sbb
ljmp
jp
test
jb
jb
outsb
inc
inc
cmp
jo
jb
mov
sub
imul
xlat
lock
pop
out
lret
jb
mov
add
or
and
bound
andl
icebp
bound
hlt
pusha
lea
jne
pusha
call
movb
movl
inc
call
movzwl
bsf
mov
test
add
cmc
mov
jmp
pushl
pushf
stos
push
lea
jmp
imul
clc
cld
notb
add
stc
syscall
adc
mov
jb
cltd
xlat
int3
cli
mov
fiadds
sbb
js
jno
pusha
les
cmpsb
test
or
xor
inc
jae
fcmovb
lds
mov
jg
movsbl
mov
pushf
mov
bswap
jmp
pushf
movl
pushf
call
pusha
test
call
movw
lea
ja
push
pusha
lea
jb
jmp
push
shlb
jg
int3
popf
xchg
stos
test
cmp
into
cli
push
jp
pop
xor
mov
subl
adc
rclb
imul
sbb
mov
mov
xchg
adc
jnp
inc
inc
sbb
jae
lahf
xchg
and
shrb
pusha
popa
jbe
out
push
or
loopne
pusha
add
cltd
push
out
insb
jb
cmp
fbld
stc
inc
js
inc
cmp
and
dec
cmp
inc
sbb
or
dec
cmp
inc
das
inc
rcr
mov
xor
adc
lret
rcr
fistps
mov
and
and
sbb
xchg
inc
pop
and
add
fwait
cmpsl
lahf
add
aaa
jmp
call
fcmovb
ret
pushf
lea
je
pusha
pusha
pushl
lea
jmp
mov
pusha
lea
call
push
pushl
movw
lea
jne
setp
not
mov
push
pusha
movw
lea
jmp
setle
pushl
pushl
popl
pop
mov
pop
movl
mov
pop
not
lea
pushf
movl
push
pushf
pushf
push
pushl
popl
mov
movw
mov
pushl
ret
cmp
shr
add
sub
pusha
mov
cmc
push
or
mov
lea
je
xor
add
sar
dec
clc
rcl
sub
rcl
pusha
xchg
ror
shr
xadd
mov
bswap
rcl
and
dec
add
neg
add
sub
shl
sbb
mov
stc
cmc
stc
shr
cmc
stc
test
jmp
pusha
movl
pusha
lea
jmp
btr
lahf
aas
mov
cmp
shl
pusha
push
jmp
pushl
mov
jmp
pop
fwait
jne
dec
jge
adc
movsl
xorl
cltd
cmpsb
xlat
mov
inc
repz
sub
fistps
unpcklps
imul
inc
add
mov
dec
push
pop
or
neg
sub
insl
ljmp
pop
test
fcomps
loop
fldl
cld
sub
sbb
jo
or
sbb
jo
mov
fidivl
dec
mov
adc
cmp
cmp
push
cli
jmp
mov
fiadds
iret
in
pop
and
std
lds
aas
fcmovb
mov
fwait
push
add
push
call
clc
bsf
rcl
mov
pushf
pushl
push
mov
sub
pushf
pusha
jmp
cmpsb
xchg
outsl
adcb
fdivrs
mov
pop
mov
shll
pop
lret
xor
orb
inc
inc
push
cmp
dec
aad
js
arpl
sbbb
lret
xor
cmp
divb
pop
imul
sti
jp
cs
aaa
pop
aaa
and
or
pushf
popl
iret
adc
mov
sbb
cmc
push
add
aam
sbb
in
movsb
inc
mov
lds
or
xor
cld
mov
in
add
fwait
push
dec
fiaddl
xchg
and
addr16
rcll
sub
xor
mov
roll
inc
xlat
cmp
mov
xchg
icebp
es
push
push
or
adc
mov
sub
push
es
mov
or
in
cmp
pop
jbe
and
dec
jno
xchg
lcall
or
jp
mov
enter
mov
fidivrs
out
std
cli
push
movl
mov
xchg
xchg
jne
jl
jecxz
xchg
ret
out
icebp
or
es
mov
adc
push
add
pop
xchg
jl
jae
dec
inc
pop
push
or
arpl
adc
incl
or
fcmovb
leave
ja
sub
ror
mov
aas
mov
inc
jbe
ss
subb
jo
jnp
or
vpshrdvq
adc
cmpsb
shr
add
lcall
cmpsl
jg
sub
stos
push
adc
jo
inc
push
mov
clc
sahf
inc
jae
dec
inc
ds
popf
push
pusha
mov
cmp
cmp
jb
inc
dec
jbe
pusha
jge
shr
jge
test
mov
pop
cli
popf
stos
jae,pt
ja
test
lcall
jecxz
mov
mov
sub
loopne
or
sbb
and
hlt
repnz
ficomps
push
xlat
adc
mov
cmp
cmp
loopne
pusha
push
adc
xorl
popf
daa
adc
in
out
clc
icebp
cmpsb
mov
aam
jb
mov
aas
add
repz
out
loop
ret
add
jb
aas
adc
repnz
shl
aas
jb
ret
and
jecxz
aas
mov
jecxz
repz
ret
aas
jb
adc
jb
rcl
and
mov
sbbb
add
lock
mov
decl
imul
or
dec
jnp
int3
adc
jg
sbb
cmp
push
sub
push
jns
pop
aad
mov
loope
and
into
xchg
adc
jecxz
jnp
fstl
xchg
push
jg
mov
mov
xchg
xor
shrb
mov
or
rclb
mov
mov
sbb
xchg
fwait
inc
inc
in
xlat
aad
or
bound
fwait
in
ret
rolb
cli
pop
clc
popa
fcmovb
lret
movsl
into
orl
ret
jmp
lea
je
movzbw
mov
shrd
movzbw
neg
add
or
adc
mov
call
jg
pop
sbb
call
aaa
and
add
daa
fldenv
cmp
fidivl
rol
cmp
push
in
pusha
and
out
cltd
push
jnp
movsl
pop
xchg
add
sbb
mov
cs
jmp
xchg
push
cltd
mov
or
and
subb
popa
pop
and
stos
jb
add
sarb
dec
jle
movb
fildl
fs
sbb
sub
mov
in
paddsw
pusha
jb
pusha
and
imul
outsb
pop
mov
and
mov
fcmovb
lret
negb
add
add
jno
add
xor
add
jb
add
add
add
add
add
push
add
jb
add
add
add
add
add
jb
add
aam
mov
test
fsubs
out
mov
push
sbbb
idivb
push
jmp
fsubs
fsubs
pop
insl
jb
bound
sbb
loop
mov
out
call
push
fcmovb
int
movsb
bnd
call
lcall
fwait
les
aad
adc
sti
inc
push
sub
jmp
jo
or
mov
push
std
ds
stc
inc
outsb
imul
jb
xchg
jle
cmp
dec
push
and
enter
xor
fwait
push
movsb
xor
push
loopne
adc
inc
add
js
mov
push
jno
sub
dec
sbb
scas
ja
jo
sub
fcompl
push
dec
xor
fcmovb
int
sub
inc
outsl
mov
dec
mov
pop
mov
movsl
shrl
cltd
das
sub
cmp
out
dec
daa
xor
and
or
cmp
movsl
mull
sbb
lahf
add
rcr
fcmovne
std
cli
pop
adc
cmp
mov
gs
imul
ficoml
xor
mov
into
adc
or
lea
jo
pusha
mov
mov
lea
je
add
clc
inc
sub
rcl
mov
dec
aad
xadd
mov
shr
inc
call
xchg
add
insl
incl
inc
dec
pop
add
add
add
mov
stos
add
push
incl
out
jmp
jns
pop
adc
push
jae
add
lds
roll
adc
incl
test
add
push
incl
cwtl
mov
add
call
aaa
jo
mov
push
dec
incl
cli
jmp
add
dec
incl
pushl
add
mov
cmp
aaa
loope
push
test
add
sub
rolb
push
push
incl
mov
dec
pop
add
jl
add
in
add
add
add
testl
cld
pushl
push
xchg
push
aad
push
dec
incl
dec
sbb
andl
incl
inc
arpl
xor
mulb
adcl
and
push
xchg
add
pushl
call
push
dec
incl
arpl
incl
cli
push
mov
ret
push
popa
incl
das
ljmp
mov
push
incl
sbb
ja
push
outsl
incl
dec
decb
add
add
add
decl
add
sub
subl
push
add
jl
add
pushl
push
xchg
push
les
push
dec
incl
aaa
jmp
pop
fisttpl
add
test
add
jecxz
sti
add
adcl
cmp
pop
dec
adc
scas
or
push
jb
add
scas
lock
add
add
pushl
add
pop
incl
mov
add
inc
incl
pop
icebp
pop
add
mov
add
and
add
incl
je
or
subl
pop
incl
cmp
mov
add
pushl
cltd
nop
mov
add
fs
test
cmc
add
pushf
pusha
push
lea
jmp
mov
movl
push
bswap
lea
not
lea
lea
jle
pushf
pushf
pushf
movl
push
movw
call
jmp
movl
lahf
movsbw
lea
jmp
jg
add
repnz
popl
jg
mov
fwait
shr
shll
inc
popf
pop
inc
cmp
sbb
dec
cmp
ret
decb
jmp
fs
pop
xchg
ja
aaa
test
fucom
jge
mov
xor
ficoml
sub
push
sbb
popa
fs
imul
push
add
mov
enter
in
fcmovb
shll
shr
sbb
pushl
push
mov
pushf
repnz
cld
ljmp
or
inc
lods
jmp
icebp
mov
pop
icebp
push
add
orb
push
test
jg
je
in
daa
rorl
repz
cmc
cmp
mov
xchg
das
xchg
add
cmp
xor
jb
insb
jns
adc
push
pop
jae
rcr
sarl
adc
call
lea
jne
not
mov
push
pusha
pusha
lea
jmp
clc
rol
push
test
xor
movb
mov
pushf
inc
bt
test
bt
bt
mov
pushl
jmp
sahf
sahf
js
sti
repnz
subb
lcall
and
aam
mov
inc
test
dec
test
push
das
sbb
outsl
call
ja
xlat
iret
add
lock
mov
and
cwtl
pop
data16
adc
mov
fcoml
mov
js
mov
arpl
clc
mov
bound
in
push
mov
call
fldl
adc
adc
mov
pop
mov
lods
cmp
rclb
cmp
bt
pushw
popfw
call
push
std
add
jb
cli
movsb
mov
xchg
and
outsb
pop
inc
pop
data16
sub
add
pop
add
pop
dec
sbb
pop
ja
push
jae
lret
cmpl
mov
cmpsb
or
out
mov
sar
jle
xchg
into
mov
int3
movsl
mull
jmp
cmp
inc
fs
push
test
or
push
cmpsl
pusha
sub
stos
push
jb
xchg
test
pop
outsl
jl
arpl
call
leave
adc
inc
sbb
pop
mov
imul
in
mov
mov
jecxz
jmp
fcmovb
shl
outsb
mov
iret
inc
jns
shlb
and
sub
jmp
outsb
jmp
imul
shll
cmp
data16
inc
cld
cltd
hlt
push
aad
cs
jle
movsb
int
repz
fidivl
sub
test
in
mov
lods
shl
rol
fdivl
fcmovb
ror
stos
dec
cmp
or
pusha
jmp
in
lret
in
rcl
adc
movsl
jecxz
jnp
mov
roll
xchg
out
cwtl
fists
mov
cltd
cs
cmc
repnz
incl
lret
push
jmp
push
out
cltd
stc
jle
inc
xchg
mov
data16
adc
outsl
out
xor
mov
int
inc
sti
sub
pusha
insl
shrb
mov
std
push
cmp
mov
test
xor
iret
lds
test
adcb
incl
mov
cld
sub
jnp
aam
call
in
inc
sub
hlt
cmp
leave
loop
jne
pop
and
lret
sub
inc
mov
pop
mov
insl
inc
push
jp
mov
mov
mov
iret
insl
out
sub
xchg
sub
aad
add
cmc
mulb
adc
push
dec
mov
aam
testl
sub
fistps
das
cmpsl
aad
stc
testl
push
push
jg
push
sub
mov
int
jge
mov
lret
pop
pop
test
lcall
mov
int
std
mov
enter
pop
test
hlt
mov
mov
push
mov
fcoml
lods
adc
xchg
adc
roll
push
mov
mov
shlb
inc
popf
jb
imul
ss
int
jecxz
in
jmp
std
jle
aad
jmp
mov
stc
xor
push
call
pusha
lea
je
call
je
bt
test
or
jmp
inc
or
pop
mov
jmp
movups
test
sub
pop
sbb
dec
xchg
cmp
adcl
lods
add
fsubl
or
push
insb
or
pop
cmp
int3
mov
xor
or
sbb
jmp
mov
clc
call
and
arpl
jo
push
arpl
decb
mov
pop
mov
lds
push
jp
cs
es
hlt
dec
push
outsb
jmp
mov
pop
jbe
jmp
push
cmp
sbb
adc
fidivl
add
leave
fidivs
stos
imul
xlat
in
mov
cmpsl
inc
xor
dec
loop
sbb
lods
ljmp
xchg
movsl
push
stos
mov
aad
insb
lcall
call
outsb
je
ficompl
iret
jl
sub
arpl
insl
imul
mov
jnp
lcall
sbb
pop
stos
mov
aaa
and
add
push
dec
and
fdiv
cmp
pusha
inc
jge
mov
fs
add
mov
mov
mov
mov
mov
sub
and
xchg
in
sub
sub
pop
iret
push
imul
sahf
lret
int3
push
andl
insb
insb
shr
xor
xlat
fdiv
out
or
sbb
jo
xlat
xchg
mov
neg
mov
jmp
lea
jne
xor
ror
bt
mov
stc
cmc
bt
add
cmc
cmp
movzwl
sbb
mov
cmp
add
test
mov
cmp
cmp
clc
clc
test
pusha
pushf
jmp
call
jmp
lea
call
pushf
jmp
push
jmp
pusha
mov
setno
mov
mov
pushf
mov
mov
pusha
call
mov
inc
shlb
push
adc
pop
jae
jmp
inc
std
jecxz
push
aas
cmc
out
jno
xchg
dec
ja
lahf
mov
pop
adc
repnz
out
fst
fistps
or
add
cmc
test
mov
nop
dec
dec
nop
push
movsb
mov
clc
dec
and
test
adc
mov
mov
adc
outsl
je
jp
mov
fmuls
or
shr
test
mov
and
test
add
test
shr
bsf
or
movl
bsr
push
pop
shr
mov
test
cmp
pusha
call
call
push
jmp
clc
or
shll
shll
movsl
mov
loope
fsqrt
mov
enter
mov
inc
jp
insb
rorl
mov
xchg
fwait
sub
ja
dec
addr16
xlat
outsl
cmp
and
push
enter
xchg
imul
pop
mov
imul
jno
inc
push
shrb
int
push
or
mov
push
jno
add
and
sub
fdivs
add
dec
insl
jle
fstp
add
fisubrl
cmpl
xchg
fcmovb
fstps
pop
decb
mov
sub
jmp
movl
and
je
mov
movsbl
pushf
mov
mov
cwtl
mov
pushf
pushf
push
pusha
lea
push
push
pushf
movl
call
cmp
xor
call
pusha
adc
pusha
movb
lea
jmp
movl
push
lea
jmp
push
lock
std
std
mov
lods
ret
jp
cmp
mov
xchg
pushf
mov
pop
xchg
ss
add
cmp
jge
or
shrl
inc
test
push
into
add
loop
cs
test
scas
pop
xchg
icebp
sarl
out
and
inc
fcomi
in
xchg
push
push
stos
je
jb
jnp
test
pop
jb
jmp
adc
fs
jl
push
jno
push
pushf
pusha
lea
jmp
jae
xor
mov
btc
mov
ror
shl
neg
mov
jmp
call
push
and
inc
pushf
inc
pushf
mov
lea
jmp
pushf
call
dec
inc
push
xor
and
fs
cmp
fs
push
std
mov
xchg
pop
lds
mov
hlt
adc
xor
ret
lods
push
xchg
sti
sbb
pop
cmp
fcompl
rcrl
daa
sbb
fidivl
and
je
pusha
icebp
icebp
clc
std
adc
cld
data16
push
jle
xchg
imul
mov
mov
outsl
add
dec
dec
jge
mov
mov
mov
out
ret
mov
mov
cmpb
std
fcmovb
ficoml
pusha
adc
push
mov
push
call
scas
shrl
loopne
mov
test
aad
cmp
or
jle
xchg
sarl
int
inc
jb
call
jp
cmp
xchg
fcomip
jnp
jae
movsl
icebp
sub
iret
xor
inc
fsubrs
xor
stos
mov
cwtl
repz
add
or
ficomps
movsb
jmp
mov
cwtl
lea
jle
not
inc
call
neg
cmp
cmp
pushf
bt
shr
movb
push
pushl
lea
je
jmp
mov
cmpsl
test
fwait
test
sub
push
pop
jno
loop
pop
xchg
push
scas
inc
xchg
out
pusha
mov
fcmovnbe
rol
push
adc
scas
clc
adc
daa
shll
jo
rcll
dec
jge
mov
fadds
mov
out
int
ret
shr
test
xchg
aaa
lahf
stc
pop
sbb
push
cmp
or
mov
pusha
orl
xchg
push
jecxz
inc
cmpsb
jmp
inc
ljmp
sbb
jmp
out
jg
sub
adc
sbb
inc
hlt
mov
mov
lret
xlat
and
sub
mov
lds
or
cmp
addr16
out
push
push
dec
pop
aas
pop
push
pop
jmp
fcompl
cmp
add
mov
orl
sub
and
push
dec
jb
pop
jle
and
js
cwtl
mov
xchg
inc
pop
loope
fs
dec
push
inc
inc
push
in
push
mov
cmc
xor
mov
lods
rolb
xchg
inc
sub
jge
sub
test
sbb
mov
leave
and
mov
arpl
xor
bound
popf
push
sub
sahf
lret
and
mov
sbb
xchg
cli
mov
mov
dec
jo
inc
insb
sahf
negw
add
cmp
jmp
xchg
pop
xchg
mov
adc
inc
add
je
push
mov
out
hlt
mov
mov
lahf
mov
lcall
fsubr
push
mov
mov
push
jb
and
xchg
xchg
jno
mov
lock
out
or
mov
mov
mov
add
in
dec
lods
xchg
mov
jge
mov
sub
fcomi
mov
lcall
loopne
mov
in
negb
fnsave
and
push
negb
pop
out
dec
pushf
pushl
lea
jmp
mov
pusha
lea
jmp
fldenv
pop
clc
pop
jecxz
mov
mov
xor
jg
jnp
gs
enter
pop
inc
dec
dec
outsb
loopne
or
xchg
sub
lods
fisubs
sbb
push
movsb
pop
lret
pop
sbb
pusha
pop
pushf
dec
add
stos
dec
and
push
inc
or
aad
dec
mov
push
push
cmpsb
negb
jl
dec
xchg
ds
movsb
cmpsl
inc
push
lcall
stos
bound
jbe
in
xchg
bnd
outsb
aam
xchg
xchg
ja
lret
rclb
or
mov
inc
push
inc
mov
pop
adc
dec
pop
inc
xchg
push
loope
repnz
scas
mov
imul
and
ret
push
dec
in
rdtsc
inc
aaa
lock
pop
add
fidivrs
adc
cmpsb
or
out
call
lret
mov
enter
pop
test
dec
shlb
gs
pop
fidivrl
sub
and
repnz
fcompl
sbb
pop
and
or
mov
dec
jno
xchg
mov
fiaddl
les
mov
mov
mov
in
and
arpl
pop
jnp
xchg
dec
dec
lret
mov
loope
pop
in
in
jecxz
cs
ret
subb
inc
call
fidivrs
test
lret
mov
aam
bound
and
out
push
dec
shrb
add
aas
ss
sti
mov
mov
sub
movsl
mov
dec
or
and
sub
in
sub
inc
dec
leave
out
iret
repz
pop
int3
lods
push
je
mov
imull
pop
mov
repz
cmp
cwtl
insl
inc
out
jae
xchg
lret
adc
into
pop
stos
test
mov
repnz
add
adc
pop
and
test
in
and
sub
inc
mov
ficompl
std
lahf
pop
fcompl
sbb
in
out
ret
inc
push
std
shl
dec
sbb
pop
icebp
push
adc
test
mov
add
jne
jmp
mov
fsubs
pop
scas
push
shll
jbe
mov
bound
pop
ljmp
push
iret
xchg
xchg
sbb
pushf
pop
imul
adcb
jmp
in
sbb
cmp
and
stos
mov
xchg
andb
lret
inc
add
rol
or
not
xor
rcl
shl
call
cld
mov
mov
in
pusha
jbe
test
xchg
fsubrp
push
loopne
or
mov
movsl
pop
aam
ljmp
into
or
int3
add
xor
in
pop
adc
sub
lret
inc
cmpsl
js
add
and
xchg
lret
push
or
xchg
fildl
xor
std
aaa
test
xchg
and
xor
mov
mov
dec
js
adc
aas
xchg
in
dec
mov
in
lods
mov
mov
mov
push
and
adc
sub
lcall
movsl
mov
dec
inc
insb
jle
lret
stos
jle
push
test
and
fisttpl
mov
mul
dec
fcmovb
loope
xchg
aam
in
push
fsubs
ljmp
pop
mov
ret
test
mov
push
mov
aad
sbb
in
mov
lods
dec
mov
adc
lahf
in
inc
fs
xorl
mov
dec
pusha
push
push
lahf
mov
stos
aam
cmp
pop
icebp
or
fcmovb
loope
and
fs
call
push
adc
jmp
movl
call
clc
sub
clc
jmp
lret
xchg
jnp
repnz
out
lea
jno
xchg
xchg
jg
mov
arpl
in
xchg
cmpsl
add
xor
cmp
mov
call
xor
lahf
arpl
sbb
sub
lods
xchg
dec
iret
enter
xchg
sbb
lret
xchg
movsb
stc
and
leave
push
lcall
sub
pusha
mov
or
cmc
pop
movsl
push
mov
mov
cmp
lods
xchg
in
shll
lret
add
inc
pop
out
inc
and
outsl
cld
sbb
popa
xor
icebp
pop
sbb
mov
mov
icebp
or
dec
cmpsb
addr16
rolb
dec
lods
xchg
mov
cmpsb
mov
popa
inc
jle
xchg
lcall
mov
outsb
insb
push
push
aad
loop
sbb
fucomi
mov
clc
clc
and
cmc
cmp
call
sub
in
dec
mov
fidivrl
mov
stos
nop
lcall
jnp
testb
or
bound
mov
dec
inc
fcomi
cwtl
cmp
cmpsl
mov
pop
mov
roll
hlt
inc
inc
cmp
xor
rorl
pop
pushf
test
mov
ss
call
pop
ja
inc
pop
aas
insb
add
loope
iret
insb
xchg
jno
ss
loop
ficoms
test
loop
pop
test
call
push
movb
pushf
lea
jae
dec
mov
pusha
setg
mov
not
movb
inc
setl
pusha
pushf
mov
pushf
call
pushf
sub
pusha
stc
push
cmp
pushf
lea
jae
push
lea
jmp
mov
xor
mov
pusha
test
push
sub
cmp
bt
xor
jmp
pushf
jmp
movl
movb
pushf
mov
push
lea
jmp
push
pusha
stos
pushl
pushf
pushf
pushl
lea
jmp
mov
jmp
loopne
xchg
xchg
adc
jge
pop
js
mov
mov
repnz
sub
cmp
inc
into
xchg
mov
jp
mov
rorl
or
jbe
pop
ja
mov
into
inc
dec
mov
rcrl
int
repnz
push
pop
or
sbb
in
mov
add
xor
sub
jns
xor
loope
and
push
inc
xor
fcmovb
in
jl,pn
fs
jb
pusha
push
lea
ja
jmp
lea
je
call
mov
pusha
push
popa
into
out
mov
daa
sub
and
dec
ja
sbb
mov
inc
arpl
out
mov
pop
push
xchg
inc
sarb
mov
fistps
dec
xchg
add
int
sub
inc
inc
fisubrl
outsl
and
test
pop
jp
or
inc
lods
daa
adc
imul
stc
jbe
insb
stos
das
push
mov
mov
test
jle
jmp
mov
mov
mov
mov
jbe
imul
push
lret
into
stos
inc
or
and
dec
scas
adc
imul
xchg
in
daa
mov
adc
fidivrs
fistpl
movlps
xchg
hlt
mull
lret
cs
push
jmp
les
xor
jo
int3
sub
fists
popf
sbb
push
mov
lcall
add
fwait
clc
scas
nop
mov
movsb
cmp
cmpsb
xchg
rcr
popa
scas
lods
dec
mov
test
push
jle
mov
jle
pop
std
mov
add
insl
fisubl
push
and
add
imul
decb
fstpl
cs
imul
mov
mov
popf
push
xor
xor
xor
ljmp
sbb
cmpsb
jmp
jmp
mov
lcall
add
jmp
faddl
sbb
xor
mov
out
inc
inc
push
lea
jmp
push
sbb
cld
js
xlat
mov
add
add
daa
mov
and
lahf
enter
sbb
mov
push
sbb
sbb
mov
jo
in
inc
movsl
xchg
lea
sub
dec
loope
call
and
sbb
scas
fcmovb
out
sti
cmp
sub
pusha
movl
mov
mov
pushf
movl
mov
pushf
pushf
mov
lea
jmp
jne
gs
xor
fs
insb
add
rorb
lea
clc
decl
setg
jmp
sbb
addr16
xorb
xor
pop
andnps
addr16
into
inc
outsl
add
repz
mov
inc
or
imul
mov
ret
popf
stos
out
xor
out
xchg
fcmovnb
ljmp
loope
mov
imul
push
or
rcrb
iret
in
adc
insb
aaa
add
mov
mov
mov
mov
insl
xchg
push
movsb
fadds
loope
cmp
jnp
out
dec
lcall
scas
xchg
mov
stos
aaa
fcmovb
out
lcall
test
jmp
mov
or
mov
sub
sbb
mov
pusha
test
clc
sub
pushl
cmc
pushl
popl
jmp
call
call
cmp
sub
fyl2xp1
std
shrb
faddp
lret
call
jp
mov
sbb
test
dec
iret
fucomp
sbb
sub
mov
mov
mov
arpl
repz
inc
inc
pop
ds
fldcw
mov
test
inc
push
call
imul
mov
mov
icebp
out
add
push
sub
movsb
ljmp
insb
rcll
xor
adc
cmpsb
adc
in
cmpsl
mov
int3
imul
push
or
leave
or
mov
mov
or
inc
addr16
and
xchg
xchg
stos
rol
mov
xor
pusha
push
int
popf
lret
mov
fildl
shll
inc
shrl
push
imul
cmc
push
mov
xor
jnp
imul
fcmovb
jmp
cmp
cmpb
push
call
or
leave
lret
inc
in
pop
dec
mov
loope
in
sbb
and
sbb
stc
popl
adc
jle
leave
insb
jns
push
sti
lods
aam
jp
enter
xor
fcmovb
jmp
fucomip
mov
idiv
nop
adc
loope
loope
mov
sub
aas
inc
jae
das
mov
mov
pop
cmc
push
sub
xchg
mov
mov
pop
push
movsb
mov
cmp
add
arpl
pop
and
dec
pushf
lahf
lea
stos
xor
xor
mov
add
sbb
fstps
xchg
pop
lahf
and
add
shll
aad
cs
push
fucomi
jb
xchg
cmpsl
dec
ds
xchg
add
pop
adcb
cmpsb
movsb
lds
dec
pop
pop
xchg
fs
sti
mov
fcmovu
sbb
mov
cwtl
es
cmpb
dec
adc
sub
aas
xor
inc
add
mov
bound
mov
ss
pop
sub
rolb
push
outsb
push
pop
jge
jae
sbb
push
pushf
push
or
pusha
call
movl
movw
jmp
call
int3
popf
pushf
movl
movl
push
pushf
pushf
call
and
scas
cmp
xchg
jnp
outsl
mov
dec
test
pop
jae
xchg
mov
adc
int
push
sbb
xchg
mov
in
mov
mov
mov
pop
cmp
lahf
hlt
gs
mov
push
mov
in
mov
xchg
out
in
popf
data16
adc
fs
aad
add
faddp
in
sahf
xchg
sub
add
scas
adc
mov
sbb
mov
pushf
add
movb
bt
push
mov
add
not
mov
push
add
jle
push
cmp
call
xor
call
ret
pop
dec
dec
shlb
mov
or
nop
cli
loopne
hlt
decb
bnd
pop
jmp
xchg
mov
cli
fwait
iret
loope
into
add
pusha
jle
xchg
mov
dec
sarb
jp,pt
mull
mov
sahf
mov
call
std
dec
mov
pop
pop
sarl
dec
testl
lds
mov
lea
or
push
jmp
dec
insl
xchg
push
sub
shr
push
icebp
mov
stc
lods
mov
mov
and
cs
or
les
pop
sub
pop
jne
cmp
jge
shl
lock
scas
fsubrs
out
and
cs
das
mov
das
add
jae
enter
mov
fwait
not
mov
dec
cs
and
mov
arpl
mov
gs
or
adc
inc
jl
inc
inc
cmp
lea
sti
lods
jb
mov
addr16
in
lahf
aam
bt
cmp
pusha
pushf
lea
je
pusha
pushl
push
cmp
pushf
pushf
lea
je
pushf
pushl
pushf
pusha
lea
jmp
pushf
pushl
cmc
cmp
cmp
pushf
lea
jae
push
pushf
pushf
add
pushl
pusha
pushf
jmp
fwait
sbb
shlb
mov
mov
outsl
jns
xchg
xlat
lods
fcmovne
arpl
shrl
scas
jae
rolb
cld
inc
out
adc
cld
xor
xor
push
sti
dec
pop
fcomps
or
pop
and
into
cmpsl
enter
xor
cmp
or
push
cltd
push
fcmovb
in
call
and
pushl
pushf
lea
call
pushf
pusha
pusha
mov
pusha
movb
lea
jmp
pushf
movl
pushf
mov
mov
pusha
pushl
popl
movb
pushl
ret
fnsave
aaa
lock
xchg
arpl
xor
sub
push
inc
inc
push
bound
xor
jns
or
xchg
adc
test
xor
mov
pop
dec
push
outsb
out
mov
sub
mov
xor
popa
fwait
xor
fbld
add
imul
mov
stos
adc
movsb
pop
lock
test
ret
xor
and
pop
cmpsb
lahf
mov
xchg
mov
in
sub
aad
mov
cmc
fstpt
std
out
adc
rcrl
das
js
cmpsb
and
in
jecxz
sahf
pop
mov
inc
int
or
sti
sub
ss
mov
idivb
inc
ja
test
fwait
je
mov
cmp
pop
pop
pop
mov
dec
push
xor
pop
addl
out
in
shll
scas
mov
cltd
lcall
out
sbb
pop
mov
mov
call
mov
mov
lea
ja
pusha
clc
stc
imul
pusha
bt
test
add
pushf
movw
lea
jmp
lea
mov
call
neg
mov
bt
and
pushf
add
pusha
push
lea
jmp
stc
sub
pusha
test
cmp
movb
call
add
sub
inc
xor
cmpb
adc
jp
mov
jmp
aas
xor
rcl
cmpsb
cmp
push
mov
pop
iret
xor
push
jecxz
push
popa
add
dec
xor
insl
mov
jo
std
lret
push
scas
rcr
js
pop
daa
in
mov
loope
pop
push
pop
mov
mov
fcmovb
out
or
je
mov
lea
call
movzbw
inc
btr
push
mov
cmc
test
test
and
mov
stc
clc
add
push
pushl
lea
jmp
pushf
lea
je
test
bt
cmp
pusha
movw
movb
mov
pushl
ret
mov
lea
lea
push
shr
sub
push
lea
aad
stc
push
btc
or
mov
clc
clc
stc
bt
test
pushf
call
lea
je
shl
movzbw
push
xadd
sub
setb
cwtl
mov
daa
mov
pusha
bt
bswap
inc
shr
rcl
lea
rcl
mov
cmp
pushf
pushl
stc
or
mov
lea
je
and
and
btr
xchg
add
shrd
sub
shl
movsbw
shr
movzbw
mov
neg
sub
shld
add
bsr
not
rcr
add
rcr
pusha
mov
cmc
lea
jne
push
shr
pushf
pushf
movb
cmp
pushf
lea
je
call
popf
cpuid
nop
push
pusha
pushf
movl
pushf
movl
push
lea
jmp
jmp
pushf
mov
pushl
popl
movw
pushl
ret
jbe
pusha
mov
push
lea
je
pusha
pop
sub
pushf
mov
seta
lahf
sbb
mov
cmc
shr
sub
mov
jmp
not
setl
stos
pushl
setl
push
mov
push
lea
call
call
jbe
fidivl
popf
aam
insl
lock
leave
frstpm(287
cmpsl
icebp
wbinvd
daa
mov
and
lret
xor
outsb
popa
cwtl
xchg
adc
in
add
cmp
lret
aad
mov
xlat
arpl
pop
xchg
outsb
mov
add
gs
mov
inc
inc
pop
fmulp
es
dec
pop
std
and
xchg
repnz
inc
dec
mov
addr16
scas
jl
mov
mov
movsb
fmuls
std
sub
cmp
int3
push
inc
ss
and
inc
fistps
dec
inc
inc
fcmovb
repnz
daa
jp
les
or
sbb
sub
test
pushf
stc
cmp
push
lea
ja
pushf
imul
jmp
cmc
cmc
add
call
jmp
jmp
stc
bt
call
ficoms
div
push
xchg
out
cli
clc
sbb
out
and
mov
cmp
pop
or
outsb
lcall
adc
sti
rcrb
mov
add
shl
icebp
fdivp
cld
loope
or
sub
xor
repz
mulb
fwait
test
rol
repz
filds
jbe
stos
dec
xor
negl
pop
mov
les
popf
push
imul
push
pop
pop
add
fcmovb
repz
xor
movw
lea
je
pusha
jmp
jmp
lahf
lea
push
mov
pusha
mov
push
mov
push
call
mov
test
pusha
or
jmp
bswap
pop
not
bswap
pop
not
not
pop
pusha
call
clc
sub
bt
mov
clc
jmp
pop
popa
sbb
std
inc
sub
imul
and
sub
les
sar
movsb
movsl
popa
xor
sbb
movsl
into
repnz
test
mov
scas
xchg
sub
fs
and
pusha
mov
xchg
popf
jmp
fiadds
pop
cmp
incl
xor
and
loop
and
jg
hlt
xchg
sbb
xor
lea
jae
pusha
push
movb
lea
jne
call
pusha
pushf
mov
movl
pusha
pushf
movl
pushf
movl
mov
mov
lea
jmp
jmp
lea
je
shld
sbb
and
mov
setae
pusha
ror
bsr
add
lea
and
jmp
mov
scas
cmp
pop
dec
imul
clc
pushf
lret
inc
aas
and
lock
xchg
lds
callw
fsubrl
lods
pop
inc
lahf
jne
or
adcb
xchg
inc
mov
arpl
dec
arpl
hlt
add
cs
adc
jo
push
inc
je
sti
adc
push
lahf
pop
or
cmp
jae
test
jae
lcall
cmp
inc
jns
mov
test
jne
mov
push
inc
xorb
arpl
bound
outsb
fsubrs
pop
cld
cmpb
int3
cmp
cmp
dec
sbb
xchg
jg
sbb
pusha
sahf
pushf
pushf
call
pop
pop
inc
lea
data16
leave
xchg
pop
ja
cmpsl
mov
mov
jecxz
ret
sub
lret
push
outsb
rolb
xchg
cmp
mov
shl
mov
xchg
test
mov
ficomps
fdiv
cld
pushf
mov
rcrb
outsb
outsl
test
add
sub
shlb
rorl
jl
xlat
cwtl
push
rcrl
scas
in
mov
pusha
fs
out
dec
jo
fimull
inc
je
fwait
int
addps
jg
orl
jnp
jmp
push
lea
jne
jmp
cmc
clc
stc
cmpb
call
push
sahf
in
arpl
call
fwait
test
lret
jge
jnp
pop
jae
push
scas
insl
and
ret
inc
orl
jnp
mov
or
sub
add
mov
inc
in
int3
cmp
fldenv
cmp
fnsave
sbb
and
dec
movsl
sub
aaa
imul
or
into
jns
cmp
rcrl
sbbl
xchg
jle
mov
int
add
xorb
push
sbb
push
cmp
fcmovb
divb
and
je
sbb
push
add
add
leave
pushf
jmp
xchg
mov
call
call
jmp
stc
test
pushf
cmp
jmp
stc
stc
test
sub
jmp
mov
pushf
lea
call
jb
pushf
push
mov
push
movw
pushf
lea
jmp
stc
clc
cmp
pusha
lea
jb
stc
jp
cmp
jmp
pop
mov
sbb
jge
rcl
push
xlat
fsts
or
movsl
fucomp
jo
xor
dec
lea
in
ret
push
cmp
jnp
movsl
mov
fnstsw
jb
sbb
xchg
stos
arpl
das
adc
sarl
adc
lods
aad
stos
cmpsb
aas
in
fwait
lods
test
imul
mull
shrd
stc
mov
mov
mov
ror
inc
dec
mov
pushf
pushf
test
clc
mov
cmc
cmp
pusha
bt
neg
mov
push
jmp
push
setns
pushf
stos
not
call
pusha
movl
pusha
movl
push
pushf
lea
jmp
bt
pusha
cmp
call
push
push
lea
jno
pushf
movl
jmp
mov
stos
inc
jne
ret
inc
mov
jne
test
xchg
pop
mov
and
or
insb
pop
push
aas
arpl
mov
jmp
outsb
inc
or
insl
rolb
pop
out
mov
adc
out
bound
lods
jne
out
push
xchg
add
enter
test
popf
push
movsb
imul
pop
and
jbe
or
fcmovb
clc
aas
adc
jmp
mov
pushl
popl
pushf
movb
pushl
ret
cmc
call
cmpsl
cmp
clc
std
adc
rol
jle
outsb
push
sub
xchg
push
std
stos
push
loope
cli
mov
imul
sbb
bound
xor
mov
daa
int
out
add
mov
repz
in
into
or
test
es
fcmovb
stc
dec
and
stc
clc
cmp
jmp
stos
inc
rcrb
jge
push
xor
xor
cmp
inc
pusha
cli
push
push
jecxz
ret
inc
jo
in
fcmovnbe
inc
or
fdivs
fisttps
testb
jge
movsb
cli
mov
push
fsts
dec
lea
and
mov
jo
mov
test
cmp
jge
mov
xchg
jmp
fwait
mov
sti
sbb
es
out
push
in
inc
inc
jb
cmp
mov
adc
or
ds
fcmovb
cli
push
cld
fiaddl
fs
mov
inc
neg
rcr
xchg
pusha
aad
stc
mov
cmc
inc
not
mov
lea
call
jmp
movsbw
not
not
mov
lea
jnp
pushf
lea
call
jmp
jmp
push
sbb
mull
fstps
cmp
or
arpl
or
mov
mov
sub
xor
adc
imul
fidivrl
fs
mov
xchg
popa
or
xor
xchg
push
dec
mov
insb
push
repnz
aam
push
inc
sub
call
jno
jnp
pop
outsl
jl
xchg
stc
out
test
adcl
mov
push
cs
pop
data16
pop
pop
pop
pop
push
fidivrl
mov
cltd
sbb
pop
idivb
xor
pop
cltd
sahf
push
pop
data16
push
mov
movsl
xchg
icebp
es
hlt
test
mov
ds
inc
sbb
jp
fnsave
dec
push
inc
cli
push
push
jno
push
inc
jno
xlat
fcmovb
sti
das
inc
pop
pushf
movl
lea
jmp
jns
push
inc
into
mov
test
imul
movsl
cmpsl
xchg
scas
cwtl
lea
jae
xchg
aas
mov
jns
imul
dec
pop
outsl
jge
xorl
dec
sarl
push
adc
mov
xor
cmp
push
std
pop
addr16
adc
lock
das
popa
sbb
mov
iret
xchg
repnz
jne
es
cld
insb
xlat
mov
fldenv
and
mov
or
mov
out
or
sub
pusha
dec
jg
or
out
or
push
sub
xor
fcmovb
sti
cmp
pushf
pushf
pusha
lea
jmp
mov
addr16
jp
sti
enter
inc
es
sbb
xor
pop
xchg
jl
mov
add
cmp
xchg
bound
test
xchg
cltd
xchg
movl
in
rorb
and
adcb
into
or
cmpsb
push
add
insl
mov
mov
sbb
pop
mov
setnp
inc
mov
gs
stos
xchg
adc
ja
mov
mov
mov
xchg
cs
sti
fdivrs
pushf
lea
je
pusha
push
pusha
cmp
jmp
call
xlat
mov
shrl
idiv
and
or
cmp
das
dec
pop
js
pop
adc
leave
adc
add
jns
xchg
dec
pop
cmp
or
mov
cmp
mov
jae
fs
bound
insb
sub
fcmovb
sti
in
xchg
jne
idiv
daa
push
rol
mov
btr
aam
pusha
sub
jae
push
cwtl
and
not
push
lea
push
sbb
movsbw
lea
push
pusha
add
bswap
dec
mov
bt
test
pusha
jmp
mov
lea
call
jmp
pusha
movl
pusha
movb
movl
pushf
lea
jmp
push
lea
call
jmp
sbb
movsb
xor
cmp
sub
stc
inc
cmp
dec
mov
ljmp
in
xchg
nop
jbe
test
fists
mov
in
adc
fbld
adc
sbb
gs
adc
aas
cwtl
out
js
ret
mov
out
js
push
out
std
xor
lcall
inc
pop
push
arpl
sbb
test
inc
lahf
lcall
xor
adc
dec
push
dec
pop
push
pop
jmp
sbb
scas
fsts
inc
mov
ficomps
sbb
fdiv
add
in
loopne
mov
ljmp
dec
inc
push
in
ljmp
xor
gs
je
or
and
push
repnz
fbstp
xor
mov
popa
out
or
ret
insl
push
sarl
push
pushf
push
rolb
sbb
sahf
mov
int
jne
in
pop
int
js
mov
fcmovb
mov
fs
xchg
in
insl
insl
mov
enter
sbb
add
rclb
arpl
cmp
shlb
jns
push
or
cmp
pop
mov
lahf
movsb
lods
xchg
dec
xor
aaa
pop
test
mov
xor
pop
sub
pop
and
arpl
push
fcmovb
incl
jno
ss
lret
lea
scas
cld
stos
add
sub
adc
lock
cltd
push
or
jl
mov
fnsave
or
push
lret
sub
pop
fldcw
pop
jnp
xchg
ret
push
xchg
cmpsb
das
scas
mov
movsb
sahf
popa
xchg
std
jae
in
add
or
movsl
jo
out
ret
fs
jp
test
push
mov
jp
in
lret
mov
int3
mov
iret
or
push
nopl
clc
fwait
lea
je
pusha
pusha
movl
lea
jmp
add
add
movsbw
bt
bswap
shl
push
neg
xadd
shl
lea
mov
sbb
shl
call
movw
movl
call
js
mov
stc
add
fdivrs
lods
xchg
shlb
mov
pop
fimull
mov
test
inc
sti
add
xchg
and
xor
idivb
lock
scas
mov
dec
fcmovb
inc
nop
into
pop
out
push
aam
sbb
and
mov
mov
cld
ret
cmpb
hlt
jle
shlb
subl
xor
dec
push
sahf
lret
into
in
imul
push
movsb
pusha
and
mov
sub
jne
pop
push
xlat
in
aam
mov
jle
sub
xor
dec
dec
jbe
cmp
push
dec
loop
call
or
mov
xor
dec
inc
inc
inc
xor
shll
std
mov
stos
pop
mov
cmpsl
aad
insb
mov
insb
jge
cmpsl
movsb
loope
daa
fcmovb
fists
repnz
push
push
pushl
mov
lea
jne
mov
movb
pusha
cwtl
mov
lahf
lea
call
sbb
add
inc
movsbw
shr
push
movsbw
bt
mov
bts
rcl
cmc
and
add
push
not
not
mov
lea
push
pushf
mov
setb
pushl
not
lods
call
xor
dec
fcoms
in
or
adc
sbb
int3
and
add
ret
or
fwait
xchg
pop
cmp
xchg
xor
cli
stos
js
adc
and
sar
push
mov
ljmp
mov
or
sti
cwtl
fldl
daa
push
cmp
aaa
fcmove
add
clc
add
cmp
pusha
cmp
pushf
lea
jb
push
cmp
movw
pushl
pushl
pushf
lea
jae
cmp
cmp
mov
mov
lea
jmp
lea
je
pusha
pushf
pusha
mov
pushf
xchg
jmp
pushf
pushf
jmp
pusha
pushf
movl
movw
pushl
pushf
lea
jmp
movw
lea
call
call
jmp
pushf
mov
pushf
push
pushf
pushl
ret
mov
or
inc
mov
popa
jg
daa
insl
push
push
jg
pop
push
jno
or
aaa
adc
daa
or
loopne
hlt
xor
pop
add
outsb
fadd
push
pop
adc
push
pusha
bound
adc
xchg
ret
in
lcall
call
xchg
scas
mov
add
add
mov
rol
shr
shr
mov
or
call
lea
jne
bswap
call
lea
jl
lea
push
movl
pushf
pusha
pushl
popl
movb
pusha
pushl
ret
push
lea
ja
call
cmp
fdivrl
xchg
mov
imul
lea
inc
int3
je
xchg
popf
mov
repz
add
ljmp
fcmovu
jo
sahf
mov
mov
out
fcmove
add
sbb
cmp
sbb
mov
jno
mov
mov
int
fbstp
xchg
ss
enter
fisttpll
fucomip
pop
jl
sub
push
push
inc
outsb
jnp
dec
data16
xlat
daa
aad
sti
in
notb
dec
sti
xor
es
inc
xor
dec
pop
in
fadd
jmp
clc
cmp
pushf
cmp
pusha
pushl
push
lea
je
test
pusha
cmp
pushf
cmp
push
jmp
bt
test
cmc
cmc
shl
mov
pusha
mov
mov
lods
push
add
jmp
btc
xchg
clc
mov
jmp
dec
bound
je
fs
push
xchg
aad
xor
sti
pushf
loope
repz
jb
sub
mov
fimuls
insl
and
fnstenv
addr16
add
aam
pushf
add
pusha
mov
jmp
jmp
pushf
mov
setg
inc
call
and
xchg
pop
xchg
xor
inc
dec
inc
inc
test
sub
or
jae
jg
push
xor
inc
jns
in
inc
push
pop
das
inc
pushf
jno
scas
or
scas
xchg
pop
push
xchg
inc
cmp
lret
fimull
mov
pop
cmp
adc
cld
inc
out
mov
test
lret
mov
and
mov
scas
lods
add
add
in
testl
int
mov
mov
pusha
mov
lea
jmp
pop
lea
movzwl
pushf
movzbw
push
lea
call
pushf
call
outsb
adc
cmp
das
mull
lock
enter
or
or
push
lods
mov
pop
add
sub
adc
mov
test
stos
clc
test
pop
fwait
sbb
out
push
pusha
jmp
aas
jne
cmp
rcr
ljmp
fidivrl
fcomps
aaa
xchg
imul
testb
cmp
xlat
pop
imul
fcmove
add
sbb
idiv
push
pushl
ret
call
sahf
sbb
in
add
fcmovne
out
adc
testl
push
xchg
pop
shll
ja
out
test
out
adc
iret
dec
sahf
dec
and
sbb
clc
push
stos
cld
mov
mov
cltd
ret
in
out
in
and
fwait
lock
xchg
jg
fcmove
add
or
clc
std
jle
sub
xor
sub
int3
push
cmp
jbe
imul
arpl
popa
stos
pusha
push
dec
sbb
push
addb
in
mov
mov
jne
fneni(8087
int
fcmove
push
cmpsb
int
call
lea
je
bt
bt
cmp
pushf
lea
je
pushf
cmp
jmp
mov
bt
add
pusha
btc
pushf
shr
test
cmc
xor
mov
movsbw
jmp
pushf
pushf
lea
jne
shrd
shl
mov
jmp
push
pushf
movl
movl
jmp
cltd
and
loope
or
pop
mov
repnz
call
outsb
pop
xchg
subb
mov
xor
fdivs
scas
xchg
lods
div
pop
adcl
dec
jno
out
pop
adc
nop
pop
inc
cwtl
in
xchg
and
test
sub
add
jmp
cmp
jae
xchg
and
pop
js
sub
repz
inc
push
fstpt
fsubrs
rorb
jmp
inc
and
xor
pop
xor
xchg
pusha
lea
je
movsbw
sar
bt
add
add
neg
movzbw
xadd
sar
sub
xadd
sar
inc
dec
shr
jmp
pusha
rep
lea
not
mov
pushf
lea
jmp
pushf
pushf
pusha
movl
push
lea
jmp
stc
sub
sar
rcr
xor
bt
dec
neg
setge
stos
pushl
mov
pushf
sete
mov
pushf
pushl
call
jmp
pushf
push
lea
jne
push
stos
mov
movb
pushf
pushf
lea
jmp
pop
testl
push
pop
lcall
hlt
ljmp
adc
repnz
scas
xchg
fldenv
sbb
outsl
insl
xor
cmpl
nop
adc
add
dec
mov
cmp
jmp
dec
aaa
pop
in
inc
iret
pop
or
fs
orl
jae
loope
mov
enter
fidivs
or
xchg
cli
aad
dec
jge
jns
popa
addr16
imul
cmpb
jl
add
leave
pusha
pop
push
daa
movsb
into
or
subb
sbb
lock
pop
mov
xchg
scas
xchg
dec
insb
das
sub
jecxz
mov
pushaw
cli
fistpll
decb
sub
in
add
mov
add
pop
dec
mov
scas
pop
mulb
lods
ret
and
sar
mov
lods
add
loop
jecxz
dec
mov
ds
xor
loop
inc
mov
jp
or
dec
add
fcompl
push
icebp
jmp
shrb
into
sbb
inc
rclb
nop
cltd
inc
mov
dec
cmc
push
inc
sahf
std
cmp
and
mov
jecxz
xchg
insb
popf
jbe
test
fcmove
or
mov
iret
ja
fsubl
sub
and
pop
loope
div
push
inc
hlt
mov
lods
loope
sub
pushf
mov
mov
popf
sbb
xor
pop
add
xchg
dec
push
popa
or
out
aad
addr16
icebp
push
add
jo
dec
adc
mov
sbb
jg
movsb
lret
and
push
inc
xchg
push
imul
subb
or
dec
push
pop
and
or
arpl
repnz
jmp
push
and
lcall
pop
mov
push
in
inc
out
mov
ja
xchg
cmp
dec
sbb
xor
bound
fcmove
or
sbb
ret
leave
idiv
aad
rcl
mov
in
cli
clc
cli
scas
or
inc
rcll
xor
and
movsb
insl
orl
test
adc
decb
sub
push
sbb
daa
cwtl
mov
lea
push
mov
push
movl
mov
jmp
sub
mov
inc
push
shr
lahf
lahf
push
and
cmp
push
shr
shl
aad
sub
pusha
lea
jl
pushf
mov
lea
pusha
mov
push
jmp
add
add
dec
fld
loope
cmp
rcl
fcmovnu
pop
xor
leave
loope
cmp
or
adc
outsb
scas
popl
jno
sbb
test
mov
adc
sub
pop
cmp
xchg
ja
test
fcmove
or
jge
inc
and
imull
fiaddl
pushl
pushf
movl
pushf
mov
lea
jmp
add
dec
outsl
popa
fs
imul
add
stc
inc
push
pusha
add
sub
jmp
lea
jne
pusha
mov
call
jmp
cmp
push
sub
adc
mov
mov
fadd
fcomp
push
push
xchg
sub
not
mov
push
push
or
pop
inc
pop
jae
ds
std
and
mov
adc
pop
adc
shlb
stos
sbb
ljmp
inc
out
aaa
mov
mov
mov
push
cs
sub
cmp
cli
testl
or
scas
fdivr
scas
cltd
xlat
pusha
js
sub
insb
cmpsl
in
testl
aad
xchg
inc
fcoms
sbb
outsb
mov
push
ja
cs
mov
mov
pop
fcmove
or
shlb
mov
or
out
addr16
sbbl
mov
roll
xchg
push
stos
xchg
repz
xor
cs
ds
xor
mov
or
jmp
and
jg
sub
mov
pop
inc
negb
mul
shll
into
mov
mov
adc
jp
pop
das
sarl
pop
data16
inc
adc
rorb
or
xor
pop
cmpsl
sub
push
aam
frstor
test
aam
mov
inc
xor
insb
movsl
xor
mov
inc
das
clc
loope
mov
sub
fdivrp
pop
out
testl
pop
loopne
testl
mov
push
jmp
mov
cltd
and
sub
test
sti
lea
add
fbld
in
lret
cmc
sti
out
inc
ss
mov
inc
xor
mov
jge
bound
sub
popa
pop
je
push
in
xchg
rcr
pop
in
jmp
mov
in
mov
icebp
addr16
or
jp
xor
sub
and
movsl
cmc
mov
xchg
mov
cmpsb
outsl
fsubrl
xlat
xchg
add
lcall
sbb
test
fwait
lock
inc
scas
mov
stos
pop
leave
mov
int3
add
jmp
iret
mov
inc
stc
adc
mov
mov
adc
inc
int3
cmp
dec
out
shr
lods
cld
mov
in
xchg
pusha
aad
ret
add
fisubs
xchg
and
sbb
std
mov
and
popf
in
stos
dec
dec
mov
fidivl
cltd
pop
xorl
in
dec
adc
xor
push
cld
lcall
inc
cwtl
cmc
and
mov
mov
xor
add
push
insb
sub
imul
dec
or
loope
jno
std
aad
xchg
mov
xchg
push
fdivrp
shll
pop
lcall
mov
fstpl
pop
aam
push
in
pop
xchg
pop
cmc
inc
fwait
gs
adc
in
sbb
push
loopne
jecxz
daa
loopne
jecxz
fldcw
lock
out
jmp
add
add
pop
test
movsb
cmpsl
mov
lcall
mov
mov
sbb
imul
mov
icebp
cmc
imul
test
jmp
or
in
stc
in
fisttpll
dec
in
jmp
adc
lods
in
sbb
jmp
in
call
push
test
xor
jge
xchg
in
aad
add
in
dec
dec
cmp
in
or
movsb
or
jne
cld
adc
sbb
or
or
fs
dec
xchg
inc
int3
add
mov
iret
pop
int
sbb
icebp
cld
or
leave
int3
in
popf
movsl
jbe
lods
fs
lret
push
or
sub
xor
sbb
or
fs
int3
jno
fldt
sbb
leave
mov
pop
inc
mov
shll
or
std
in
add
rcl
stc
push
fsubrs
lahf
pop
fstpl
movsb
mov
jmp
in
cmc
pop
movsl
aaa
fnstenv
iret
je
sahf
repz
ret
jecxz
in
movsb
cmp
mov
cmp
out
dec
sahf
cmp
in
movsl
cs
and
icebp
cmp
lock
pop
in
es
icebp
and
int3
add
pop
add
les
sbb
pop
int3
xchg
mov
popf
stos
icebp
mov
jmp
pop
sub
in
inc
cwtl
clc
loop
mov
push
xchg
jecxz
cmp
imul
and
adc
xor
in
iret
xchg
and
cld
xchg
ror
loopne
int3
insl
call
pusha
imul
mov
mov
fadd
mov
or
add
sub
lds
insl
inc
or
je
pop
xchg
cld
mov
cltd
int3
popa
int3
fidivrl
test
pop
mov
sub
xor
adcl
aad
and
in
iret
jb
push
xchg
sti
in
test
shlb
dec
movsl
jne
rolb
cld
jns
xor
cmc
fcmovne
mov
repz
jmp
cltd
push
stc
int3
lds
sti
in
test
icebp
fs
rclb
in
lock
insb
lea
inc
push
pushf
shl
lret
mov
pop
add
jge
in
out
jmp
rcll
fisttpll
pop
in
or
jae
jp
notl
dec
in
sti
dec
adc
lea
in
lret
push
or
and
divl
cltd
fs
or
aad
lods
sti
and
in
lret
dec
sti
in
pushf
jmp
rcrb
xchg
orl
in
cld
ljmp
std
aam
std
in
cmc
es
sub
mov
sub
fstps
popf
sub
mov
fst
xchg
fldl
neg
mov
fisttpll
stos
out
push
fst
int
mov
test
mov
inc
and
in
sti
test
xchg
rorl
sub
iret
icebp
add
aad
sarb
pop
adc
sub
dec
push
sti
jge
in
test
lret
std
push
in
lods
cld
into
mov
insl
pop
jg
pop
std
gs
pop
pop
icebp
cld
and
int
lods
pop
dec
sarl
rcrl
shr
push
add
jecxz
adc
xor
sti
arpl
mov
shll
pop
std
mov
in
dec
sub
jg
jge
and
insb
sar
or
jno
fsubl
inc
mov
int
std
test
fildll
rorl
sub
jns
sahf
inc
icebp
jmp
gs
hlt
out
int3
roll
in
out
inc
sahf
mov
add
int
mov
movsl
cli
jne
out
aad
aam
add
jmp
sub
in
cli
mov
std
add
lods
dec
sbb
call
add
cld
fnstcw
test
fxtract
and
mov
sbb
sar
sbb
sub
std
int
fs
jmp
popf
jmp
xlat
sahf
sub
lea
popf
xchg
pop
cld
lret
std
insb
or
cmp
dec
inc
movsl
sub
push
rcl
aad
in
pop
lock
dec
mov
jmp
pop
pop
lds
sbb
dec
int
push
cld
and
push
lret
sub
fiadds
jmp
lcall
dec
lret
jle
jb
es
cmp
cs
icebp
test
lret
xchg
stos
pop
add
test
in
int
jns
lds
popf
std
inc
jle
aaa
add
add
jecxz
icebp
pop
cmp
mov
cltd
cmc
xchg
jmp
fwait
loope
xor
xchg
leave
mov
loope
aaa
fwait
adc
cmp
sub
popa
data16
add
mov
sub
cwtd
icebp
dec
xchg
add
sub
leave
pop
jns
xchg
rcl
testl
sarl
mov
xor
jno
inc
sti
imul
xchg
xor
dec
push
add
loop
xor
add
jnp
into
insl
mov
cld
mov
or
das
mov
andl
cld
insl
fdivrl
pop
lahf
addr16
fstps
in
arpl
frndint
aad
leave
dec
std
inc
mov
mov
pop
in
mov
or
inc
loop
or
fwait
inc
arpl
cmp
stc
test
mov
stc
aad
std
sbb
cld
jns
leave
dec
std
inc
fwait
and
frndint
push
test
in
cmp
xor
pop
gs
div
icebp
dec
or
cld
sti
mov
fwait
cwtl
jmp
xor
mov
in
sbb
add
outsb
fidivrl
cltd
jp
in
in
xor
add
in
icebp
rcr
push
or
mov
ret
out
mov
shrl
mov
add
mov
dec
pop
and
leave
mov
in
shr
lahf
fsubrs
mov
js
cmc
sbb
cmp
pop
popf
mov
leave
mov
lds
pop
pop
mov
pop
mov
pop
nop
pop
pop
mov
pop
xchg
pop
xchg
pop
mov
add
into
rolb
les
pop
cmp
faddp
loopne
insl
mov
or
sbb
scas
mov
mov
in
dec
jmp
ljmp
mov
push
rcl
adc
jmp
add
stos
sbb
aam
dec
mov
das
dec
push
or
dec
stc
in
dec
xchg
adc
adcb
adc
pop
lret
in
xchg
and
shlb
mov
leave
mov
scas
mov
movsl
leave
in
mov
sub
cld
lds
mov
sahf
sarb
cmpsl
mov
test
xchg
sbb
cli
xor
or
stos
das
mov
mov
ds
jns
or
sub
cmc
push
sub
cli
cltd
adc
dec
xchg
jp
add
pop
cltd
dec
sarl
sahf
pop
and
fistl
das
sti
test
test
jp
push
pop
fadd
scas
mov
dec
cmc
mov
and
mov
in
pop
mov
icebp
add
imul
sar
pop
sub
stos
enter
mov
aam
and
sub
roll
test
fstl
adc
pop
cmp
push
push
pop
loopne
stos
in
cmc
out
mov
enter
decl
shr
aad
mov
fxch
add
in
jle
jo
cli
xor
cwtl
lds
aad
sbb
push
jns
test
pop
dec
shrb
in
jecxz
ret
jg
lahf
mov
in
mov
and
mov
add
scas
push
aas
xchg
mov
jb
push
jecxz
fisttpll
pop
test
lahf
jno
fdivl
xor
lret
in
in
xor
jo
mov
push
popf
xchg
stc
push
lea
push
mov
push
and
or
mov
cmpsb
lcall
mov
push
pop
cmp
mov
enter
jmp
mov
mov
mov
sbb
in
mov
movsb
shl
jb
sahf
insl
in
and
and
mov
mov
fildll
pusha
cs
outsl
xor
ja
imul
dec
cmpsb
xchg
mov
adc
and
or
neg
insb
push
pop
sub
lcall
inc
jae
aad
imulb
aad
fdiv
mov
mov
mov
mov
mov
test
hlt
in
loop
mov
loop
xor
fbstp
push
cld
adc
sub
add
popa
dec
dec
xor
add
xor
jbe
add
add
push
fmuls
xchg
mov
stos
mov
loop
enter
js
dec
out
mov
imul
repz
aad
inc
push
in
mov
adc
mov
in
pop
lret
fucomp
dec
lea
stc
push
and
mov
int3
fucomp
add
addr16
or
std
icebp
popf
stos
mov
jmp
ljmp
test
in
push
int
jecxz
lret
push
and
hlt
out
add
pop
sub
in
gs
repz
add
out
int3
mov
or
and
mov
inc
mov
push
jg
subl
cmc
dec
popf
sti
xchg
test
lret
rorl
popf
leave
dec
mov
mov
pop
loop
out
lret
loope
mov
pop
mov
jg
mov
int
and
nop
rorl
divl
jns
or
stos
xor
in
std
push
pop
mov
lret
lahf
or
enter
or
mov
cltd
pop
pop
and
iret
mov
xchg
imul
jmp
iret
jge
pop
mov
rorl
push
in
jecxz
inc
int3
sti
repz
mov
mov
fstp
ss
mov
scas
repz
sbb
mov
sbb
inc
push
dec
sub
jbe
fld1
fistpll
lea
cmp
xor
imul
inc
push
cmp
insb
icebp
mov
test
cltd
cmp
dec
pop
mov
jp
fs
mov
xchg
fstpt
and
pop
fcoml
in
cmp
iret
inc
popf
mov
outsb
xor
out
mov
loopne
out
lods
add
mov
add
xor
loopne
movsb
add
sbb
sub
xchg
sub
push
dec
mov
fmull
ret
in
cmp
pop
mov
imul
cmpb
lods
xchg
push
lods
outsl
enter
lds
mov
push
or
add
int
cltd
lahf
pop
add
mov
aam
add
cli
jno
loope
inc
xor
or
xchg
in
out
lret
imul
ror
gs
mov
or
add
iret
cmpsl
xchg
mov
loop
cmp
imul
adc
gs
dec
jp
add
repz
jl
fistpll
fisubl
gs
pushf
fnstenv
xchg
xchg
popa
rcl
cmpsl
push
incl
fcmovne
mov
pop
add
push
xlat
jo
das
jbe
push
and
adc
faddl
test
jmp
ret
lods
out
sti
push
jmp
dec
fstpl
cmpsb
std
mov
mov
cmpsl
fadds
inc
call
movsl
shll
scas
jp
sub
cltd
cmp
and
jle
bsr
mov
mov
or
add
cmp
mov
mov
movsl
rcll
adc
xchg
mov
popf
lds
push
imul
int3
ljmp
dec
pop
mov
leave
int
insl
std
sbb
add
jge
push
sti
je
ljmp
jae
cmp
pop
std
fstl
data16
add
fwait
jns
cmp
mov
pop
enter
mov
xor
ljmp
aaa
enter
mov
stos
push
aad
mov
ffree
hlt
lds
enter
jns
add
pop
pop
lret
sub
sbb
cmpsl
fwait
lahf
lret
insl
or
pushf
inc
test
add
out
sbb
fwait
mov
enter
mov
gs
bound
sahf
lods
fnclex
cmpsl
mov
adcl
mov
sub
xlat
stc
fldcw
sti
sub
xchg
xchg
add
in
ljmp
cwtl
sbbl
and
mov
dec
scas
jno
push
test
ficompl
rcll
mov
popf
icebp
in
xchg
jmp
jo
cmp
out
fwait
hlt
cmp
mov
dec
jmp
inc
xor
sbb
flds
push
leave
mov
jnp
in
mov
mov
xor
test
dec
or
lock
in
lods
push
enter
mov
jb
shrb
lret
add
add
pushf
imul
inc
test
hlt
cmpsl
repnz
pop
mov
mov
add
rorb
pop
mov
loope
movsb
and
mov
adc
int
loope
add
lea
gs
inc
sbb
outsl
mov
adc
cmpsb
adc
ret
xchg
idivl
and
pushf
jno
mov
pop
in
mov
icebp
push
cmpsl
pushf
mov
jge
xchg
xchg
dec
test
dec
sti
ja
jo
inc
das
xor
jne
cmc
stos
mov
repnz
cmpb
add
test
or
pop
xchg
cltd
jmp
sbb
fildll
jno
imul
lcall
add
rclb
stos
cltd
or
pop
xchg
stc
mov
clc
jb
dec
jmp
stos
push
std
sbb
jns
jl
lret
repz
add
pop
cmp
leave
mov
movsl
jnp
mov
xchg
stos
stos
cwtl
cltd
cmpsl
movsb
adc
lods
in
or
lock
data16
jae
cltd
mov
cmp
and
and
or
cmpsl
repz
lret
leave
ret
fisttpll
pop
hlt
xchg
inc
sbb
xor
mov
lahf
dec
imul
scas
aad
test
xchg
testl
ja
push
aad
repz
sbbb
std
pop
xchg
sbb
xchg
and
shll
mov
sbb
mov
fstl
lret
sub
inc
outsl
sti
sbb
xchg
and
mov
fisttpll
rolb
mov
fldl
xchg
cli
xchg
aad
cli
in
adc
popf
in
cmc
loopne
cmc
nop
add
jge
ja
xchg
mov
lahf
mov
add
inc
and
enter
sti
fadd
popf
pop
or
xor
and
movsl
push
jg
xchg
sbb
daa
fldl
add
cmp
fnsave
inc
cwtl
push
push
icebp
or
icebp
shl
shll
in
cmp
cmc
push
movsb
sbb
cld
sub
mov
cltd
insl
lods
lea
add
adc
fnstsw
iret
inc
adc
movsl
rcrl
and
push
in
and
jl
dec
push
cmc
mov
sub
adc
or
or
sbb
popf
in
in
cmp
pop
add
push
cmp
cmp
xchg
dec
sbb
adc
and
fstpl
call
and
les
jge
adc
jmp
daa
gs
imul
pop
adc
xchg
jne
lods
mov
sub
sbb
ficoms
iret
xor
sbbl
xor
mov
add
daa
aad
add
lea
ja
rclb
fs
cmc
movsl
cmp
std
add
mov
dec
sub
adc
sbb
int3
cmpsb
or
mov
dec
dec
orl
xor
push
adc
jns
mov
and
cltd
xchg
pusha
fstl
pop
aam
test
lret
xchg
or
in
jge
inc
daa
hlt
add
aam
mov
xor
ret
push
divl
fcmove
and
adc
aad
daa
jne
or
sti
flds
or
cli
aad
mov
add
mov
aad
hlt
popf
stos
push
in
int
sbb
and
mov
push
sti
xchg
mov
cmpsb
push
lods
sub
stos
lea
and
subl
add
test
mov
and
stc
std
inc
fs
lods
ljmp
sbbl
and
mov
lcall
jae
nop
mov
mov
xchg
jge
out
or
call
popf
movsl
sbb
ret
xchg
popf
and
jge
fld
sbb
push
mov
cmp
dec
push
inc
push
or
imul
test
into
arpl
out
mov
fstpl
sbb
jne
add
cmp
insl
dec
add
dec
jo
jecxz
pop
mov
push
pop
fmuls
in
jge
cltd
leave
inc
add
dec
lds
ljmp
aad
ljmp
aas
int3
cmp
sub
sbb
or
push
imul
cmp
xor
in
call
out
aam
call
aam
sbb
lods
or
bound
cmc
mul
addr16
cli
mov
int3
jmp
inc
test
pmaddwd
das
and
push
mov
mov
fwait
push
add
ja
int3
dec
fnsetpm(287
push
lock
clc
xor
in
shll
lcall
clc
mov
pushf
mov
outsb
lret
mov
in
loop
ss
jp
dec
cmp
lret
fmull
addr16
test
lret
jl
lods
or
jbe
arpl
out
bound
mov
fmul
fs
loopne
pop
ss
js
cmp
pop
pushf
mov
mov
lret
pusha
int3
add
in
pop
out
mov
or
jp
mov
pop
in
inc
jmp
dec
mov
fcomps
lahf
rcrl
mov
pop
jl
adc
addr16
adc
fistl
int3
pusha
jne
rcrb
pop
arpl
ror
adc
jo
dec
loop
mov
jmp
movsb
pop
pop
sbb
in
loopne
lret
jbe
mov
in
and
mov
aam
push
xchg
xchg
std
int
pop
lods
mov
int3
jecxz
jle
shll
jecxz
std
dec
mov
add
or
es
in
rcrb
push
adc
xor
ds
mov
push
dec
or
cmp
mov
jmp
or
cld
scas
loopne
shlb
pop
adc
aam
fisubrs
aaa
outsb
aaa
adc
pop
call
adc
fxch
rorl
fldt
dec
out
or
pushf
fistpl
add
mov
fwait
out
dec
shll
aam
cmpsl
shl
mov
jp
pop
addr16
mov
jl
fs
arpl
push
int3
dec
aas
pop
add
bound
mov
push
dec
mov
int3
out
cmp
and
in
mov
push
das
dec
sarl
pop
xchg
lds
jge
pop
add
dec
aam
mov
push
jecxz
mov
dec
test
scas
in
add
mov
jo
aam
dec
jmp
clc
pop
popa
mov
sti
shll
int
add
shr
movsb
ret
stos
test
cli
cmp
push
rcll
aad
dec
jl
xchg
mov
cmpb
repnz
xchg
test
out
lods
add
out
dec
shll
out
push
idivl
pushf
rcrb
fisubl
pushf
dec
mov
mov
shl
divl
cli
mov
cmc
pop
push
mov
jmp
jecxz
add
test
mov
or
in
pusha
rorl
jne
in
and
mov
or
loop
sahf
inc
in
in
cmc
cmp
movsb
shl
addl
and
sbb
fsubs
mov
xchg
into
cmp
dec
addr16
lret
outsl
sub
or
and
pop
ror
xchg
test
das
out
adc
push
cmp
lcall
stc
push
in
aam
cmp
stos
mov
adc
iret
xchg
lcall
ret
add
scas
jo
inc
aam
lret
and
fdivr
movsl
jecxz
adc
lret
pop
mov
mov
dec
sub
fbld
lret
imul
rorl
and
xchg
pop
jmp
push
in
pop
shlb
push
pop
or
dec
inc
lock
mov
jg
jno
mov
cli
sti
in
adc
ss
push
lods
out
and
aad
sbb
std
outsb
mov
aas
int
gs
iret
and
sub
inc
gs
inc
fs
scas
fucomp
fsubs
sbb
call
cmpsl
andb
lds
bound
daa
xchg
add
dec
addr16
and
lret
cli
imul
mov
fsubrs
fisttps
popf
int3
out
mov
repnz
mov
mov
pop
aam
inc
jecxz
outsb
inc
add
jbe
pop
add
fs
xchg
push
popa
popf
andb
outsb
and
and
pop
fwait
insb
sbb
push
mov
dec
push
dec
pop
adc
lds
fwait
int
aam
mov
mov
addr16
push
repz
addr16
jmp
mov
fs
int
shr
lea
or
xchg
mov
push
mov
pop
psubsw
or
out
add
or
dec
shlb
sub
loope
out
mov
fdivrl
push
repnz
jbe
fnstcw
pop
shl
adc
daa
xor
jmp
aam
sub
mov
sub
aaa
repnz
bound
out
popa
xchg
call
dec
and
popa
pop
and
cmp
push
bound
lret
pop
jle
sub
out
movl
cli
fdivrs
popa
pusha
and
or
mov
int3
std
imul
sbb
mov
loop
fisubrl
and
jl
shrl
popa
leave
pop
jae
and
aad
bswap
bound
iret
dec
arpl
lret
or
mov
mov
jb
dec
repnz
fs
insb
rol
push
int3
rcrl
dec
cmp
pop
dec
cld
addr16
adc
in
and
xchg
bound
dec
add
aaa
xchg
sub
cld
mov
lahf
fidivs
xor
bound
rcrl
out
fsubs
jmp
jno
add
mov
mov
pushf
pop
xorl
mov
adc
in
mov
dec
test
push
mov
es
xchg
pusha
fisttps
shlb
sarb
lret
addr16
pop
mov
inc
std
adc
pop
in
pop
subl
pusha
cmp
aaa
dec
ror
sub
lret
shll
xchg
stc
fsubl
xlat
add
lock
loopne
jecxz
mov
in
addr16
add
jmp
call
mov
jns
add
pop
out
pop
cmp
popa
mov
fmul
repnz
push
mov
or
fld
idivl
roll
leave
bound
mov
pop
das
aam
jle
in
xchg
cld
bound
push
mov
dec
and
loopne
adcb
dec
iret
bound
adc
int
in
xchg
mov
add
mov
subb
shl
aam
pop
mov
pop
sub
dec
xchg
fiaddl
dec
add
bound
or
push
icebp
leave
aam
or
jg
data16
push
adcb
leave
lret
dec
enter
xchg
mov
sti
out
lret
movsl
mov
jmp
pop
xchg
jecxz
push
shl
xlat
cltd
mov
bound
pop
mov
push
fs
push
xor
popf
jecxz
sbbb
lret
dec
jmp
fs
add
or
mov
ret
pop
int3
mov
imul
gs
pop
shlb
into
inc
fsubs
ret
pushf
push
aam
in
jne
adcb
pusha
leave
push
sub
dec
int3
stos
lock
in
pop
into
sti
cmp
dec
pusha
xor
push
loopne
add
or
fs
sbb
push
mov
xchg
aam
jecxz
pop
push
xchg
mov
add
mov
mov
subb
fcoml
pop
inc
stos
test
jae
inc
pop
add
mov
in
sub
sbb
addr16
xor
jno
and
jecxz
test
pop
cltd
push
lahf
push
push
outsb
mov
movntq
xchg
fs
jmp
pop
fbstp
mov
fsubr
mov
out
lahf
aad
dec
aam
mov
fsubp
sarl
mov
pop
pop
jg
lods
pop
outsb
enter
xchg
jo
xor
inc
loop
aaa
mov
inc
out
fwait
pusha
lods
jo
inc
dec
call
outsl
fsubrs
mov
addr16
pop
dec
add
mov
imul
mov
mov
cmp
mov
mov
ror
rolb
gs
sbb
pop
ss
xor
jg
pop
and
or
mov
mov
fadds
call
xor
out
and
and
pop
xchg
out
test
jmp
scas
or
xchg
repz
aam
sbb
aas
and
in
fisttpl
push
rcll
addl
jle
jge
dec
xchg
push
mov
imul
or
fucomi
sbb
int3
int
lcall
mov
pop
loopne
cltd
jmp
div
add
adc
adc
fbld
jbe
and
pop
xchg
pop
pop
cmp
aad
pop
scas
dec
fldenv
mov
int3
call
xchg
cmp
negw
push
pop
stos
xchg
pop
bnd
push
rcll
in
inc
xchg
shlb
test
push
lock
jecxz
lret
pusha
dec
addr16
cmp
int3
data16
or
pop
jo
pop
addr16
lahf
pusha
xor
pushf
jnp
bound
sub
add
call
out
mov
cmpsb
dec
rorl
in
shll
push
xchg
sbb
jnp
fadd
mov
shll
call
jle
pop
mov
mov
sbb
mov
pop
js
out
cmp
dec
push
jmp
push
jecxz
movsl
insb
cld
pop
xchg
sti
test
les
mov
loop
insb
pop
icebp
outsb
xlat
shlb
fildll
pusha
frstor
pop
or
icebp
inc
aam
cmp
mov
jg
sub
add
sbb
jge
cli
jne
jmp
daa
ss
out
les
ss
pop
cld
repz
pop
fwait
pop
test
aaa
cltd
mov
dec
outsb
push
movsb
mov
ret
rcll
test
aad
lret
int
pusha
aam
fcoml
sub
stc
fbstp
inc
imul
push
mov
loop
add
push
popl
mov
icebp
dec
pop
mov
lds
xchg
xchg
pop
cmp
scas
mov
mov
or
sbb
cmp
push
pop
mov
dec
aad
int3
dec
lret
clts
dec
pop
fiadds
fdivrl
movsb
xchg
jecxz
fadds
add
mov
insl
add
mov
xor
add
sbb
fs
inc
mov
sub
aaa
sbb
pusha
testb
popaw
cli
pop
fidivl
cld
fsubrl
sbb
push
mov
dec
pop
mov
pop
dec
pop
loope
push
sbb
testl
cmp
sbb
aad
and
jge
xlat
cld
fidivrl
fldenv
imul
sub
in
sahf
mov
fisubrs
sbb
in
repz
in
les
xor
pop
add
fisubl
pop
jne
fistpl
xlat
sbb
hlt
cmp
hlt
sub
mov
push
lods
sub
mov
popa
std
cmc
sub
sub
addr16
fisubs
aad
sbb
adc
inc
mulb
in
in
fcmovu
lock
in
in
adc
out
pushf
xchg
idivb
pop
mov
les
pop
fisubl
in
jne
jmp
gs
add
ficoml
jle
aaa
mov
pushf
and
es
repz
mov
dec
sub
pop
in
xchg
popa
cwtl
in
aam
loop
xchg
jmp
jbe
dec
xor
jecxz
iret
sub
jge
inc
mov
cmp
cld
mov
xchg
in
jne
lods
xchg
aaa
fcompl
popfw
data16
in
inc
lret
sti
into
mov
cld
sub
in
push
jnp
std
popa
pop
in
lea
jge
pop
out
fs
xor
ficomps
out
push
adc
in
pushf
pop
add
xlat
mov
and
dec
pop
fsts
dec
rcrb
popa
push
imul
aaa
negl
pop
cld
popa
mov
cmp
adc
call
jne
cld
sbb
pop
popf
mov
mul
popa
cmp
sbb
movsl
inc
idivb
pop
sub
jbe
int
xor
in
fbld
stos
icebp
inc
pop
sub
or
in
pop
aad
movsb
pop
leave
aad
pop
ficompl
cltd
in
shlb
in
cmp
sub
leave
es
addr16
in
data16
xchg
and
icebp
ficomps
jmp
pop
jmp
clc
jge
cs
in
int3
aaa
rorb
adc
int
cli
cmpsl
xor
sbb
add
clc
sbb
inc
aaa
xlat
in
inc
jbe
fwait
loop
inc
out
sbb
add
gs
in
adc
int3
out
and
mov
clc
pop
imul
repnz
sarl
dec
in
pop
mov
jne
dec
pop
adc
fwait
pushf
js
dec
sbb
mov
jle
jmp
popa
push
in
mov
xchg
add
outsl
push
jb
sbb
cmp
sub
cmp
fwait
sub
fmull
out
test
vcvtps2dq
es
mov
bound
pop
in
fisttpll
sbb
fcomip
int
pop
fmulp
shlb
add
add
iret
or
and
cmpsl
pop
adc
shl
cmc
ljmp
out
int
fadds
cmp
xlat
bound
mov
add
cmc
and
in
lods
repz
push
add
mov
daa
mov
add
cmp
jecxz
mov
out
or
sub
pop
in
sarb
sub
hlt
cmc
fldcw
pop
fiadds
mov
fisttpl
mov
fdivrl
or
jl
rcrl
add
in
in
ds
sti
xlat
push
test
in
fst
inc
cmc
mov
in
nop
or
rorb
xchg
insl
in
lock
in
aad
sbb
movsl
mulb
dec
xor
lods
add
mov
in
bound
out
add
les
push
or
in
in
jns
push
out
sahf
add
cmp
loope
adc
int3
or
sbb
add
adc
out
jl
jp
in
in
into
cmp
orl
or
fisttpll
push
pop
in
or
add
or
pushf
sub
or
jmp
pop
hlt
mov
in
aad
jmp
test
jnp
or
xchg
icebp
into
sbb
cmc
add
cmc
jmp
jmp
fldl2t
icebp
stos
jg
sahf
push
in
orl
stc
mov
loope
icebp
imul
aad
adc
fildll
pop
inc
xchg
dec
shrb
test
aam
popf
jnp
jmp
in
test
rcll
push
inc
add
add
dec
out
push
pop
dec
sub
push
jmp
or
mov
shll
lret
sbb
in
bound
test
popf
jl
or
mov
or
cmp
add
and
cltd
daa
pushf
xchg
rorl
popa
aad
cli
movsl
mov
cmc
lods
mov
add
cltd
inc
mov
daa
std
mov
pop
insl
cmp
dec
imul
jl
imul
adc
in
jne
or
mov
mov
push
sbb
xchg
xchg
mov
or
loop
neg
iret
mov
into
in
js
jmp
popf
ret
cmpsb
out
movsl
inc
jne
leave
loop
mov
cmc
loopne
add
loopne
cwtl
xchg
xchg
loopne
xchg
xlat
jb
jns
fmuls
lret
jl
xchg
xchg
or
nop
jne
cmpb
mov
sbb
cmpb
mov
sarl
dec
pop
loop
in
pop
leave
ja
mov
movsb
frstor
bound
sahf
sbb
aam
fstpl
sbb
mov
xchg
divl
icebp
sti
mov
nop
loopne
cmc
pushf
in
dec
sbb
stc
lock
out
in
hlt
add
sbb
daa
cwtl
loopne
lret
in
pop
fsubr
in
orb
push
mov
movsb
not
ja
dec
out
int3
add
in
aas
fwait
push
loopne
mov
int3
mov
sti
cli
or
incl
xchg
test
cmp
int
inc
or
mov
rcr
mov
out
in
js
lret
adcl
fisubrl
rcll
jo
imul
xor
dec
fidivl
xor
add
sbb
mov
add
sub
pop
cmp
sub
cwtl
es
testb
pushf
push
cmp
iret
push
rclb
pop
cmp
push
sbb
jne
push
daa
mov
inc
fistpll
push
sub
sub
push
jg
cmpl
stos
jge
adc
cwtl
movsl
in
fstpl
and
int3
and
popa
dec
sub
pop
fsubp
int
out
mov
pop
in
test
sbbl
and
sub
push
inc
shll
es
push
pushf
cmpl
and
pop
jge
push
stos
dec
scas
popf
jae
mov
outsb
add
inc
movsb
jno
mov
test
mov
fucom
add
sti
movsb
fisubrs
push
in
cmp
popf
rorl
mov
std
daa
sarl
shrl
int3
jg
sahf
lret
cmc
fstpl
mov
in
jecxz
shr
sbb
sub
push
enter
hlt
xchg
inc
hlt
push
push
das
int3
lret
mov
mov
fnstsw
jg
mov
lods
leave
lds
jge
ljmp
out
shl
leave
int3
push
mov
xchg
iret
sub
cmpsl
fstps
cs
ret
push
sarl
shlb
and
mov
int
jecxz
adc
add
insl
jle
jns
fsqrt
aam
mov
inc
ljmp
mov
rcr
xchg
in
pop
push
rcrl
jnp
je
xor
fsqrt
inc
ja
add
rcll
or
in
fisttpll
in
mov
lret
add
insl
dec
xor
add
test
andl
sti
in
in
iret
test
fistpl
inc
cli
loop
lea
mov
xchg
outsb
mov
int3
std
sar
sub
sti
out
ficompl
aad
call
in
add
xchg
imul
cmp
into
or
pusha
mov
fisttpl
call
aam
ret
out
dec
stos
shr
in
mov
sti
cmp
jmp
pop
dec
mov
gs
sti
xor
sub
test
mov
sbb
hlt
push
in
mov
scas
pop
popa
arpl
cmp
and
xchg
xchg
faddl
mov
mov
daa
movsb
cli
adc
mov
pop
in
add
sbb
fldt
jae
into
orb
faddl
int3
cmp
mov
xor
push
sub
add
or
add
imul
jns
sub
or
es
lret
cmpsl
mov
xchg
adc
lret
fisubrl
add
movq
lds
cmpsb
cmp
mov
push
add
pop
xchg
stos
lds
inc
mov
xchg
pop
out
in
cli
push
xchg
lcallw
push
or
mov
pop
jne
test
and
lcall
or
sahf
adc
lret
push
out
xor
sub
mov
mull
adc
imul
in
addr16
repz
jmp
xchg
jne
movl
insl
jbe
mov
mov
out
jb
rol
std
daa
fcoml
cmc
pop
jne
pop
and
shrl
aad
sbb
lock
fmull
push
ficoml
enter
xchg
jmp
ss
cli
sub
and
in
mov
fsubl
adc
je
movsl
adc
push
std
lcall
and
cmpsl
ficompl
jne
sbb
fdivrl
imulb
mov
enter
dec
fiaddl
mul
cltd
test
sub
cmp
dec
lret
popf
or
and
cmp
jne
or
movsb
fisttpll
mov
jmp
jl
add
push
ljmp
or
shrl
stc
inc
fsts
and
sub
adc
sub
dec
lods
cmp
jne
ljmp
jmp
fsts
fsubrl
and
sub
pop
push
out
fidivrs
lret
push
mov
or
aad
adc
arpl
test
jo
mov
jno
pop
add
test
mul
cmc
sub
std
xor
in
mov
in
loopne
rorb
or
xchg
insl
gs
sbb
in
lret
std
push
movsl
lds
and
jmp
movsb
push
iret
jl
sub
cmc
in
roll
push
push
and
mov
xchg
dec
imul
push
or
imul
das
aam
jge
icebp
fsubrl
mov
sbbl
andb
bound
fcmovb
and
dec
test
pop
pop
fcompl
sub
fisttpll
mov
loop
bound
adc
ficompl
fs
adc
and
xor
ja
cmpsb
sub
pop
mov
scas
pop
sub
jo
mov
and
dec
or
movsl
mov
xchg
pop
mov
mov
lea
and
mov
inc
loopne
adc
int3
ljmp
inc
cmpsb
ss
jo
xchg
mov
popf
loop
fcompl
test
jo
imul
cs
sub
mov
movsl
sbb
dec
in
or
sub
push
pop
lret
adc
test
xchg
stc
mov
fisttpl
add
fxch
lea
xchg
gs
lds
test
push
lods
call
or
in
push
mov
sub
adc
pop
enter
inc
or
mov
aad
addr16
add
xchg
dec
loope
and
ret
jmp
std
cmp
fnsave
cltd
add
push
test
inc
mov
and
shrd
and
adc
pop
adc
outsl
shlb
sub
lea
shr
or
and
dec
inc
xchg
imul
test
stc
std
ss
adc
pop
fimuls
dec
mov
pop
clc
addr16
mov
cmp
dec
xchg
xchg
or
jno
inc
cmp
or
sub
inc
xchg
in
jmp
test
popf
add
in
xor
fistpll
adc
dec
adc
outsb
in
pop
adc
rclb
fxam
cmp
les
sbb
xchg
mov
and
and
ret
in
or
sub
mov
dec
push
faddl
mov
inc
leave
aad
pop
lds
insl
pop
sets
add
into
cmp
mov
cmp
xor
es
nop
or
cwtl
movsl
in
mov
stc
ret
dec
add
fcmovne
mov
les
dec
in
dec
imul
movsb
mov
add
hlt
mov
and
jne
push
dec
js
mov
pop
xchg
les
fisubrs
fdivrl
jmp
scas
push
inc
or
gs
cltd
push
mov
test
adc
and
pop
jno
in
call
jecxz
lret
es
std
movsl
xchg
and
or
sbbl
mov
loopne
js
movsb
stc
add
out
push
int3
mov
xchg
sarl
fldt
mov
or
dec
pop
cmp
pop
cltd
pop
scas
or
fisubs
lock
or
lret
lea
cli
mov
ljmp
xchg
loope
rcrl
or
popa
lret
loopne
push
les
mov
mov
cmp
loope
pop
pop
jno
push
xorb
in
adc
xchg
mov
fsubrl
cwtl
movsl
roll
xor
sbb
movsl
scas
loopne
mov
and
push
adc
push
sbb
ficoml
pop
xchg
adc
sbb
or
mov
sub
sbb
fs
aam
dec
jge
inc
xchg
sub
pop
in
xlat
sub
adc
adc
inc
inc
js
vandnps
sub
pop
lods
push
jmp
int3
setae
movsl
fldcw
ret
int
or
call
iret
adc
pop
rcll
xchg
inc
push
sbb
and
lret
fdivl
movsl
fstpt
daa
mov
mov
sbb
jle
test
mov
insl
icebp
pushf
jmp
jge
int3
pop
push
mov
shll
push
ljmp
xchg
dec
fs
dec
in
loopne
pop
or
and
mov
cmp
inc
dec
cltd
add
sbb
inc
push
add
ficompl
inc
fwait
or
loopne
in
pop
in
inc
push
enter
add
mov
push
xchg
sub
or
mov
ds
imul
stos
pop
mov
arpl
loopne
lea
xchg
fistl
jmp
lea
dec
adc
movsb
fnsave
xchg
in
cmp
in
shll
mov
adc
aad
and
and
aad
aaa
xor
jo
dec
add
push
in
in
sarl
movsb
sub
inc
popf
bound
lds
or
adc
lea
mov
mov
arpl
sub
dec
or
imul
movsl
insl
in
inc
testl
fwait
xchg
adc
mov
jmp
mov
nop
jp
fcmovb
arpl
pop
test
roll
ss
popa
movsb
mov
icebp
cmp
inc
mov
rorl
leave
or
sub
movsb
adc
sub
out
xchg
dec
in
movsl
int
ja
push
fisubl
shll
pop
and
out
xorl
adc
ficoml
inc
pop
imul
in
adc
or
mov
or
xor
and
add
popa
pop
movsb
jns
cmpb
mov
push
dec
fistl
popa
xchg
add
sbb
add
out
or
lea
fisttpl
mov
inc
cmp
pushf
fdiv
out
dec
push
es
pop
inc
sub
movsb
aas
in
pusha
stc
cmp
pop
pop
and
sti
and
fimuls
inc
jnp
fwait
popa
in
lret
cmp
jmp
test
fisttpll
push
pushf
or
xor
mov
jne
orb
or
or
invd
mov
adc
pop
std
and
sub
mov
mov
test
ss
adc
sahf
rcl
hlt
or
add
rcr
insl
in
or
adc
and
sahf
cmp
dec
pop
push
lsl
inc
push
loopne
or
xchg
mov
mov
test
pop
in
fistpl
lds
pop
insl
test
mov
mov
dec
fs
icebp
sub
jne
add
or
jne
fnstcw
rorl
popf
jns
and
cltd
arpl
cmp
bound
inc
lods
ficompl
popf
push
loopne
push
iret
cmp
or
xor
jle
inc
pop
jmp
loop
inc
sbb
mov
cmc
cmp
mov
clc
pop
lret
inc
cwtl
add
popf
lea
sbb
adc
and
adc
sub
push
mov
cmp
or
mov
mov
std
bound
xchg
fldcw
and
gs
inc
lods
dec
mov
test
sbb
jge
mov
push
mov
dec
sbb
lods
mov
jge
movsb
pop
mov
cmc
add
cmc
mov
xchg
dec
rcrb
out
lahf
or
in
aaa
or
movsb
jnp
pop
sbb
icebp
cmp
mov
push
push
mov
pusha
movsb
jne
add
adc
imul
ljmp
sbb
jo
movsb
xor
xor
dec
xor
lret
cmp
jbe
cmp
mov
jnp
cwtl
dec
add
test
lock
fldl
sub
add
jmp
mov
cmp
ficoml
in
xchg
xchg
cltd
jno
mov
sti
jmp
cltd
mov
cmp
das
gs
inc
sbb
in
jmp
test
push
or
popf
pop
dec
jle
scas
fs
popf
dec
idiv
out
loopne
jle
push
popf
fmull
shll
dec
sbb
mov
sahf
rcrl
add
shrl
push
jno
std
push
mov
incb
mov
movsb
sub
sbb
in
movsb
test
add
and
or
aad
and
sbb
jmp
leave
fidivrs
dec
and
dec
cmp
push
fs
mov
jne
mov
xchg
inc
or
jmp
scas
and
sbb
pop
jge
add
add
xchg
push
push
xor
jmp
pop
push
int3
jns
adc
inc
pusha
push
sub
test
mov
int
sub
leave
dec
or
and
lods
in
cmc
dec
dec
mov
or
gs
fisttps
push
into
mov
test
mov
fwait
jmp
jmp
jge
aad
loop
daa
add
fiadds
xchg
push
lret
mov
adc
outsl
sbb
pop
je
mov
mov
int3
insl
pop
mov
lret
and
pop
adc
add
adc
mov
mov
cld
imul
adc
setp
fcompl
or
mov
xor
dec
icebp
jno
inc
ja
mov
stc
fstpt
and
test
dec
lret
sub
imul
pop
fsubrl
adc
popf
loopne
cltd
shrl
xchg
or
xor
pop
jge
test
or
jmp
negl
jb
fsubr
adc
dec
cmp
test
icebp
sub
lea
in
adc
ds
fisubrl
lret
sbbb
pop
cmp
in
xchg
lock
es
or
out
jge
sub
pop
mov
mov
add
push
insl
leave
adc
xchg
arpl
scas
movsl
cli
std
inc
call
ficompl
dec
lds
test
pop
mov
push
leave
insl
movsb
dec
in
stc
mov
loopne
or
dec
add
mov
int3
icebp
les
dec
dec
aad
shlb
mov
cmp
dec
add
sbb
int
adc
mov
sub
adc
loope
in
or
and
leave
ret
adc
insl
xor
adc
aad
inc
mov
cmp
int
std
punpckhdq
in
leave
test
icebp
cmc
adc
jmp
imul
lods
add
lea
push
xor
jecxz
adc
sub
movsb
and
pop
jmp
push
stos
xrstor
sbb
std
sub
mov
add
idivb
ret
movl
cmp
cmc
push
loopne
popf
and
testl
int
insl
or
fucompp
adc
cwtl
bound
fxtract
or
mov
rcr
mov
in
and
jge
jecxz
hlt
cmp
ljmp
and
jne
dec
loopne
xchg
loopne
sub
sub
pop
filds
pop
andl
xchg
lea
jne
xchg
setno
mov
pop
js
xchg
frstor
dec
inc
les
movsb
shll
pop
lods
lods
call
xor
movsb
shrl
mov
mov
mov
or
or
outsl
insl
mov
inc
mov
fstpt
lret
dec
test
sub
push
in
add
cmpsb
std
pop
pop
mov
sbb
aam
lea
in
in
and
xchg
or
and
insl
fisubl
cmp
jge
cmpsl
fcompl
loopne
and
popf
sub
test
xchg
adc
loope
cmc
xchg
pop
aad
movsb
add
in
lea
push
out
fcmovne
jmp
in
or
dec
push
jno
aaa
dec
cs
inc
cwtl
mov
pushl
jne
popa
adc
or
jnp
pop
test
sbb
dec
lret
xchg
movsl
jns
popf
mov
icebp
xor
or
movsl
and
lret
adc
jg
sahf
rcr
adc
gs
std
pop
fisttpll
mov
vmwrite
xor
aaa
dec
gs
inc
adc
ficoms
sbb
test
jp
jle
jne
insb
in
inc
sub
inc
movsl
int3
and
cmp
insb
or
mov
inc
in
or
dec
sbb
sbb
movsl
adcl
push
loopne
sbb
repz
pusha
jns
mov
dec
cltd
pop
jne
sub
mov
pop
sub
shrb
push
sub
xchg
js
in
movsl
mov
sub
push
pop
in
cmp
push
jne
push
popa
leave
or
lea
jmp
movsb
xchg
icebp
add
cli
jno
sbb
imul
push
bound
repz
and
scas
sub
in
xchg
imul
pop
popf
or
mov
imul
popa
in
mov
loope
and
fisttpll
sub
das
add
lahf
mov
dec
testb
cli
popa
mov
aaa
fidivl
jmp
movsl
in
adc
negl
cs
aaa
arpl
int3
sub
in
out
imul
out
gs
inc
es
xor
aad
popa
pop
aaa
repz
pop
jecxz
mov
pmulhw
popf
leave
and
sub
sbb
cmpsb
fprem
int3
fsubrl
aas
pop
sbb
dec
inc
pop
imul
in
inc
cmp
inc
mull
xor
push
jl
inc
cmp
ds
mov
scas
gs
add
add
pop
popf
outsl
xlat
mov
push
sbb
test
dec
inc
jo
enter
jge
dec
dec
mov
loop
test
in
push
and
sbb
stc
leave
mov
inc
xchg
pop
sub
dec
ljmp
mov
cmp
mov
push
and
in
adc
add
and
in
mov
push
mov
adc
cmp
mov
vsqrtsd
dec
cmp
lods
sub
in
pop
or
jno
dec
push
mov
lds
or
mov
pop
insb
push
clc
cmp
sub
push
add
inc
in
dec
imul
insl
adc
popl
jge
in
mov
pop
adc
nop
jmp
add
add
les
and
fists
jge
push
adc
fimull
xor
nop
dec
xor
and
or
dec
fcomip
and
pusha
pop
and
mov
js
pushf
sbb
fsts
xchg
dec
in
push
xchg
xchg
sbbl
pop
sub
add
cmp
sbb
jge
lods
mov
rorl
mov
xchg
mov
shll
or
cmpsl
test
cmc
xor
aad
bswap
mov
cmp
sbb
dec
pushf
cmp
int3
or
icebp
pextrw
adc
push
sub
popf
mov
jo
adc
pop
push
jg
sti
adc
inc
jnp
cwtl
imul
pop
into
and
fldl
pusha
lea
pop
into
fwait
sbb
jl
popf
mov
lds
xchg
push
fsubp
lahf
iret
rol
std
mov
and
mov
aad
enter
js
mov
dec
add
sbb
fwait
xchg
jecxz
inc
ljmp
adc
cmp
popf
jne
mov
dec
adc
test
mov
loope
sbb
adc
mov
cmpsb
fucom
or
lds
dec
fcmovnu
imul
scas
xchg
cld
sub
mov
xchg
lds
nop
dec
inc
jmp
adc
in
mov
addr16
push
add
popl
ss
lea
mov
test
pop
imul
sbb
rcrb
pushf
sub
lea
lret
inc
mov
cld
mov
adc
jge
test
or
adc
mov
push
nop
xchg
adc
pop
mulb
add
mov
lret
or
cmc
sub
pop
leave
jmp
fs
fldl
fstp
incl
or
movsb
stc
and
xchg
push
mov
jge
xorb
or
add
xchg
dec
in
sbb
push
leave
xchg
jae
movsl
lods
mov
pushf
inc
dec
in
push
imul
in
lret
popa
mov
jmp
loop
popa
push
arpl
lds
in
fucomp
add
or
pop
add
mov
mov
cmp
and
jg
jmp
lcall
jo
repnz
and
or
ret
and
fisubl
sbb
cltd
arpl
shll
add
add
js
movsl
xchg
adc
in
lods
and
outsl
mov
add
leave
stc
or
inc
ss
dec
dec
dec
cmpsb
jp
or
lds
and
loope
test
cmp
stc
inc
loope
loop
lods
dec
add
mov
dec
jae
inc
pop
cmp
gs
fcmovnu
push
jnp
push
xor
aad
bound
xchg
push
pop
jge
loop
fcomi
adc
fs
cmp
jle
add
xcrypt-ctr
cmpsl
push
out
add
sub
dec
test
sti
popf
repz
mov
cmc
jae
jge
cltd
popa
lret
adc
cmp
sbb
fdiv
mov
or
movsb
xchg
cltd
adc
test
push
outsb
jno
fstpt
add
jo
push
prefetch
or
test
imul
iret
aad
xor
add
movsl
push
jmp
rcll
mov
loopne
adc
pop
xchg
inc
jg
dec
lods
push
loopne
cmp
leave
add
adc
mov
int3
cmp
bound
cmpb
fildl
xor
in
dec
xor
outsb
imul
cmp
push
or
or
hlt
xchg
push
or
jne
xchg
leave
arpl
fiadds
ja
insb
sub
inc
or
dec
inc
jnp
fwait
popf
sbb
or
enter
jae
test
jmp
lods
test
sahf
dec
in
add
mov
mov
stc
push
insb
jl
std
pop
sarl
sub
clc
and
cmp
dec
loope
int3
add
lds
cmp
dec
or
xchg
mov
lods
sub
pop
test
fnstcw
insl
sub
or
jmp
add
cmc
pop
jb
cmp
or
cmc
sbb
push
and
mov
dec
jnp
test
pop
inc
or
in
adcl
addr16
mov
dec
test
popa
mov
fstl
mov
and
dec
cmp
push
int
in
es
adc
pop
mov
cmc
pop
adc
dec
stc
pop
adc
sub
inc
int3
xchg
push
fistl
movsl
jae
popa
pop
mov
mov
inc
faddp
test
jmp
movsb
std
mov
mov
jp
fucomp
push
xor
mov
mov
stc
int
sub
cltd
cmp
add
inc
cltd
dec
aaa
addl
lret
lock
pusha
pushf
xor
push
aam
xchg
or
mov
push
dec
lods
movsb
cltd
int3
add
lea
in
leave
std
roll
shll
jmp
pushf
sarl
arpl
dec
xor
movsb
cmp
gs
cmc
push
push
lds
das
insl
dec
pop
mov
int
aad
imul
sbb
test
mov
insb
icebp
loopne
sub
movsb
lea
xchg
les
mov
xchg
dec
add
lea
or
dec
and
enter
or
fisttpl
mov
inc
xchg
push
mov
test
stc
dec
cltd
xchg
nop
ret
lods
or
loope
mov
mov
sarl
fmull
sbb
or
push
jns
lds
cmc
dec
mov
fsts
mov
mov
movsl
iret
shl
adc
pop
fldcw
aad
lea
mov
or
and
or
cmc
jle
add
cmpsb
mov
jp
push
push
or
mov
jne
cmp
and
or
cltd
or
dec
dec
jge
sbb
inc
push
jl
stc
mov
jo
and
or
or
mov
adc
je
or
clc
rorl
and
std
pop
mov
lret
rcrl
lods
cmpsl
inc
fldl
lock
adc
int
xor
test
mov
ljmp
rclb
in
mov
xchg
push
pop
stc
loopne
jge
int
daa
mov
movsb
mov
loopne
icebp
cmpsb
sbb
xlat
pop
add
fists
movsb
adc
push
pusha
or
inc
hlt
lods
jecxz
or
push
fdivl
mov
xchg
xchg
cli
popf
lcall
xor
sysenter
or
dec
sub
dec
ret
inc
inc
mov
mov
adcb
sti
test
gs
movsb
inc
mov
loop
and
or
fldenv
or
repz
repz
mov
rcll
jno
mov
ret
xor
cmp
pop
repz
and
bnd
pop
lea
or
popa
push
xchg
and
mov
mov
insl
cwtl
daa
push
mov
adc
dec
xlat
mov
and
fistpl
mov
push
dec
sub
or
mov
sub
sub
in
mov
cmp
and
les
jo
gs
loopne
adc
mov
xor
push
xlat
shl
rcl
add
dec
mov
mov
rcl
das
sbb
in
mov
inc
push
inc
leave
sub
jl
dec
frstor
pop
xchg
or
lea
cltd
pshufw
adc
lods
cmp
ja
in
gs
dec
addr16
add
mov
decl
pop
and
out
jns
mov
pop
in
or
inc
lock
xchg
push
in
cmp
mov
cmp
pop
dec
in
adc
push
loopne
mov
popa
out
insl
test
imul
out
cltd
repnz
jmp
int
mov
xor
mov
or
cltd
or
push
mov
mov
or
icebp
popf
push
add
inc
adc
or
lea
sub
adc
inc
aam
insb
dec
cmpl
adc
mov
mov
fs
jmp
xchg
mov
xchg
into
in
out
or
inc
loope
push
and
icebp
jne
push
sbb
adc
jmp
in
in
nop
cmc
jmp
add
out
rolb
sub
outsb
test
shll
mov
cltd
lahf
gs
lods
fistl
shll
mov
xor
add
or
dec
sub
std
test
jmp
aam
pop
push
shll
mov
pop
add
mov
cwtl
xor
or
les
sarl
cmc
andb
outsb
leave
xchg
cltd
xchg
sbb
pop
sbb
dec
add
inc
jno
stc
cltd
fldl
inc
lea
cmp
mov
test
mov
and
or
mov
or
sbb
push
or
mov
add
loope
imul
cltd
cltd
push
cmc
js
faddl
and
int
xlat
sbb
sbb
loop
pop
fsubrl
stc
cmp
inc
jge
xchg
outsb
insl
cmp
test
imulb
lock
subb
fstp
lahf
sub
data16
dec
jae
sti
add
jns
imul
fcmovnb
call
in
sub
push
insb
mov
fdivp
test
sbb
loopne
pop
xchg
ret
lret
out
mov
fcmovu
sbb
out
loope
icebp
test
in
fsubrl
or
sbb
and
cltd
mov
fsubl
lret
int3
jecxz
or
hlt
sub
faddl
pusha
or
mov
ljmp
out
fiadds
lret
fsubrl
pop
sub
jecxz
or
jmp
popa
lahf
mov
cmp
ss
or
mov
inc
and
cmp
jbe
lret
mov
lock
fdivl
sub
scas
adc
mov
xor
je
ret
sub
xchg
or
fs
sbb
rclb
shr
sar
fxch
push
xchg
jl
in
fucomp
pushf
leave
mov
aad
mov
es
sahf
lcall
aad
add
mov
push
xchg
in
lret
stc
in
push
in
add
fsubl
fistl
sarl
xchg
fists
fisubrl
xor
add
ljmp
ss
aaa
pop
ss
mov
popf
xchg
jnp
xchg
ss
movsb
cld
sbb
lcall
out
nop
mov
jmp
subb
daa
fnsetpm(287
pop
je
sub
hlt
loop
mov
ds
mov
cmp
xchg
cmp
lods
fsubr
test
out
in
or
mov
inc
lahf
loopne
imul
inc
pop
xchg
int3
fisttpll
cli
mov
mov
sbb
sub
div
cmpsb
xor
lds
ficompl
jmp
mov
mov
fadds
pop
pop
dec
inc
lea
aas
imul
ljmp
cld
lret
in
push
pushf
mov
jmp
xor
mov
ljmp
fiadds
dec
xor
mov
jnp
pop
ljmp
mov
into
or
push
sbb
mov
cmp
lahf
pop
mov
xor
cmp
inc
xor
xor
aas
das
out
sahf
xor
dec
jle
push
call
dec
pop
xchg
mov
lock
loopne
in
lret
jmp
lret
in
dec
fnstenv
ljmp
dec
stos
int
popa
stc
sub
add
pop
push
sbb
mov
into
cmc
pop
nop
out
mov
mov
pop
imul
jge
arpl
mov
xchg
cmc
dec
movsb
mov
inc
xor
push
xchg
push
hlt
cmp
adcl
stos
scas
lock
js
ja
inc
mov
jb
fcmovbe
mov
cmp
sbb
adc
mov
push
fsubrp
enter
cmp
xchg
adc
cs
mov
fcmovbe
out
xchg
leave
divl
xor
notb
pusha
or
cwtl
xor
bsf
into
pop
cmp
orb
ds
xor
mov
xchg
xor
sahf
jnp
jge
or
push
testb
addr16
mov
pop
mov
stos
rorl
lret
push
pop
lds
idivb
jbe
pop
inc
or
mov
xchg
idivb
cltd
or
sbb
lods
push
mulb
das
mov
out
xor
xchg
bound
shr
and
jae
rorl
or
mov
lret
lret
shll
mov
movsl
adc
divb
cmp
fsubrs
push
test
in
xor
push
rclb
xchg
xor
jmp
push
cmpsb
movsl
mov
leave
ficoml
shlb
out
cmp
hlt
aaa
sbbb
cmp
xor
lahf
pop
shlb
xor
push
add
pop
sbb
cmc
xor
out
inc
cwtl
fisubrs
out
push
repz
sbb
scas
xor
pcmpeqb
add
mov
or
push
shr
xor
jbe
bnd
mov
jno
xor
lahf
ds
jns
cmpsb
sub
dec
das
inc
cmc
xor
lret
mov
mov
dec
insl
ror
fcmovu
addr16
xor
jnp
mov
call
cmp
xor
cmp
sub
jb
xor
or
or
jb
jne
lcall
cmp
fs
lock
lret
inc
lahf
and
cmpsl
pop
in
or
out
movsb
and
stos
mov
pushf
fidivs
xchg
xor
lods
call
sbb
mov
or
cmpsl
fsubr
dec
xchg
hlt
pop
and
repz
adc
sbbl
xor
sahf
fcompl
xor
in
stc
test
xor
push
xor
stos
ja
test
xchg
xor
sub
fidivrs
add
xchg
adc
hlt
jle
mov
sbb
dec
popa
dec
enter
inc
inc
push
xchg
jo
xor
push
cmp
mov
insb
stos
fcoml
push
and
pop
xor
fstpl
xor
and
jae
outsb
rol
pop
mov
or
dec
pop
mov
xchg
push
mov
outsb
fidivrl
andl
sub
outsl
pop
cmpsl
pusha
addr16
mov
fcoms
add
out
in
sub
cmp
ret
jbe
scas
add
vpminud
sub
shlb
jb
ret
sub
cmp
pop
lahf
push
addb
addr16
out
fstl
icebp
imul
xor
push
inc
fdivl
sets
xor
xor
push
clc
fadds
xor
jbe
insb
loope
xor
fcompl
je
xor
and
push
sahf
xor
xor
and
xchg
push
inc
pop
adc
add
sarl
fldenv
xor
jnp
xlat
push
scas
bound
mov
adc
ret
xchg
mov
mov
aaa
pop
push
mov
in
jnp
repnz
mov
mov
ljmp
insl
aaa
outsb
push
dec
or
push
popa
jecxz
out
inc
jae,pn
xor
xchg
pop
cmp
sub
ja
aaa
dec
pop
xor
aam
jne
cmp
ds
push
push
xor
dec
arpl
iret
xor
jae
fwait
xorl
xor
mov
enter
mov
or
add
xor
popa
push
xor
jne
out
xor
negl
neg
lods
push
inc
imul
sub
dec
fmul
push
xlat
cltd
jbe
xor
jb
mov
enter
jge
loope
stos
int
adc
insl
dec
add
xor
mov
mov
popl
sbb
adc
cmc
sbb
and
loop
repz
pop
fiaddl
push
cmp
mov
mov
fimuls
xchg
dec
xchg
mov
shrl
lods
inc
or
adc
subb
xor
aam
jg
stos
shll
idiv
pop
xchg
xlat
mov
mov
shr
push
gs
cmp
jbe
inc
adc
jno
outsb
faddl
and
je
xor
mov
mov
jmp
xchg
mov
js
inc
sbb
out
push
mov
mov
cmp
shrl
ret
js
inc
mov
cmp
insl
xchg
mov
xor
lock
xor
mov
sti
stos
jge
push
dec
orl
pop
int
outsl
sbb
fsubs
inc
data16
divb
mov
xor
cmpsb
adc
pop
test
mov
xor
jge
adc
mov
xchg
insl
pop
cwtl
push
and
hlt
sub
loopne
ss
fwait
jne
mov
inc
fcomps
xor
idivb
and
cmpsb
or
sbb
push
xor
dec
clc
mov
adc
xor
aas
mov
jns
push
int
cwtl
xor
push
xor
xchg
cmp
sub
sub
lahf
xlat
int
cmp
stos
add
sub
or
mov
jne
es
cmp
xlat
arpl
mov
pusha
cmpsl
add
cltd
jmp
or
in
jl
jno
ret
fucom
movsb
push
icebp
xor
push
imul
in
out
or
das
cmp
aad
iret
mov
sub
testb
scas
arpl
jns
fisttpl
jb
dec
inc
shll
aaa
push
jge
inc
sbb
out
cs
push
adcl
in
cmp
sbb
adc
mov
adc
popa
sub
adc
xorb
jnp
sbb
es
mov
subl
aas
lds
mov
aad
inc
out
cmp
lods
pusha
xchg
cmp
dec
cmpsb
fucomp
div
ficomps
sub
xor
xlat
dec
jne
mov
ret
push
js
stos
imul
xor
mov
fiadds
fdivs
shll
lods
cmpsl
cmc
sbbb
cs
xor
cmc
mov
ja
mov
dec
and
and
fadd
sbb
daa
negl
xor
cltd
push
xor
fs
inc
inc
add
loope
iret
call
cmp
mov
movsl
out
adc
popa
sbb
mov
xchg
mov
ret
cmp
jmp
sub
xlat
dec
mov
adc
or
inc
scas
das
push
mov
add
xor
clc
in
xchg
enter
sub
ss
dec
out
adc
mov
in
fwait
lret
movsb
test
inc
stc
and
ficompl
fldt
or
jmp
add
mov
fucomp
call
mov
aam
cld
fisubrl
push
in
arpl
out
mov
out
gs
jge
mov
xchg
add
mov
call
jmp
jmp
fists
aam
out
cltd
sub
ss
fisubrl
lcall
loope
sti
cmp
aam
xlat
sti
out
and
fiaddl
faddl
sbb
loope
pop
pop
add
pop
add
stc
dec
mov
mov
mov
xchg
mov
mov
imull
mov
pop
mov
rol
mov
mov
fwait
mov
clc
mov
mov
fildll
cwtl
push
xchg
mov
loopne
mov
fsubrp
movsb
mov
stos
pop
fld
lret
adc
les
dec
xor
rcrl
enter
mov
fldenv
call
sahf
repz
ds
ror
ja
lds
push
or
aam
lret
movsb
enter
xor
stos
sbb
mov
stos
mov
mov
mov
jb
cmp
stos
popf
inc
test
add
and
pop
or
fcmovne
stos
mov
imul
rcrb
leave
jnp
push
scas
lcall
push
add
mov
dec
cwtl
sub
add
imul
in
cli
or
cmpsb
push
stos
or
or
sub
rorl
int
loop
add
std
movsb
in
fnsave
test
or
int3
and
je
fnstcw
sar
in
pop
mov
mov
add
int
inc
inc
inc
cmpsb
jmp
cld
aam
mov
cld
out
testl
xlat
movsl
fistpll
stos
mov
data16
xchg
std
lcall
mov
mov
cmp
jmp
fwait
stos
pop
mov
inc
enter
lds
sbb
mov
faddp
mov
mov
incb
jb
loope
leave
sbb
mov
test
sbb
mov
daa
mov
cltd
mov
leave
mul
and
and
mov
aad
mov
jns
xchg
bound
push
jnp
cli
cmp
sbb
lea
cmp
jne
or
in
lods
icebp
int
stos
mov
ret
pop
out
js
fmul
mov
test
jns
lds
pop
mov
lea
fistl
jmp
stos
or
clc
sbb
dec
in
les
jl
inc
outsb
or
aad
ret
stos
mov
lret
aad
in
jge
mov
xor
in
mov
hlt
shl
pop
or
xor
shlb
sub
mov
gs
shlb
sarl
into
repz
popa
testl
int
out
shl
and
daa
movsl
pop
jbe
mov
test
cld
jno
in
jmp
cwtl
shll
pop
stc
in
leave
pusha
aam
loop
push
mov
lds
ljmp
cmpsl
pop
shl
or
pop
push
vpsllq
stos
mov
in
flds
mov
stc
mov
loop
sar
push
shr
push
fnstcw
lods
add
mov
jp
ljmp
hlt
or
flds
nop
jae
stc
imul
lea
into
clc
ja
inc
ret
fldl
pop
imul
in
nop
mov
or
adc
inc
out
add
in
push
xor
push
add
loopne
leave
jecxz
mov
rcll
add
pusha
add
xchg
ror
sti
adc
mulb
pop
into
outsb
in
test
icebp
inc
imul
js
fs
lea
sub
mov
cwtl
mov
mov
pushf
flds
ljmp
inc
sahf
test
inc
xchg
mov
testl
mov
inc
popf
pop
stos
subb
inc
icebp
jmp
mov
sub
mov
jle
jnp
iret
popf
test
imul
into
shlb
ret
fdivrl
rolb
aas
outsb
loopne
scas
insl
test
xchg
fcmovnb
jl
jmp
mov
repnz
lcall
fbld
fnstsw
sub
fistl
call
out
ficoml
loope
push
inc
cmp
jnp
jmp
pop
add
add
js
mov
ss
loop
stos
adc
int3
jno
dec
cmc
cmp
fldl2t
jmp
jl
shlb
mov
mov
sub
lcall
mov
test
out
into
xor
or
xchg
pop
jno
aam
pop
xor
in
sub
sub
pusha
push
cwtl
sarl
in
popf
lea
jge
sbb
xor
mov
push
test
xor
repz
arpl
jae
lret
adc
xor
sbb
fnstsw
pop
and
pushf
loopne
imul
xor
inc
fstps
rorb
or
xor
mov
jnp
xor
or
cmp
mov
sbb
out
mov
nop
out
sub
pop
sbb
add
or
push
lahf
cwtl
addl
pop
dec
test
mov
xor
jb
scas
xor
subb
xchg
cwtl
out
xchg
ss
movsl
xchg
pop
ficoms
xor
xor
sub
pushf
cmp
repz
xchg
out
adc
pop
sbb
jge
xor
lcall
pop
mov
sarb
mov
inc
mov
testl
ljmp
xor
out
inc
cmp
es
fildl
aad
xor
mov
inc
out
xor
jnp
inc
dec
xor
adc
lds
call
and
mov
mov
xor
fstl
neg
xor
sub
out
xchg
xor
push
dec
in
clc
xor
push
mov
das
mov
xor
push
fldcw
xchg
cld
sbb
aas
add
stc
xor
into
sub
xchg
stos
sahf
lea
sbb
icebp
mov
and
mov
and
adc
lock
outsl
dec
sahf
lret
add
push
mov
fsubrs
jne
or
jp
hlt
in
imul
fisubs
cmpl
in
add
or
sub
clc
mov
mov
and
adc
movsb
pop
fs
xor
inc
ljmp
bound
repz
pop
cmp
into
xor
lahf
xchg
add
mov
mov
xor
mov
adc
pop
sti
ret
mov
mov
sub
add
out
test
insl
fcoml
pop
sbb
movsb
ja
sbb
or
or
ficoms
push
in
xor
fisttpll
push
mov
cli
lcall
es
out
lods
dec
pop
jne
pop
push
mov
or
mov
push
sub
xor
dec
stos
rolb
push
mov
gs
jne
cmp
and
xchg
push
aas
mov
out
mov
les
loope
sbb
lret
les
lret
shll
xor
lcall
mov
dec
mov
cs
push
sahf
sub
sbb
jp
xchg
jae
xor
and
fld
xor
test
xor
gs
and
jbe
fsubr
cmp
testl
mov
push
ret
or
test
stos
inc
int
adc
and
movsl
popa
push
adc
aas
negl
addb
shrb
or
clc
xor
jbe
js
jmp
push
mov
sarl
stos
out
cld
std
sub
fwait
inc
fsubl
inc
xlat
shl
cmp
mov
jmp
out
les
mov
aad
pop
dec
mov
lock
cmp
mov
lea
xor
inc
cwtl
sarl
sbb
dec
and
push
aad
pop
mov
outsl
add
gs
sub
pop
movsl
repz
lahf
hlt
lretw
xor
pop
jmp
nop
xchg
mov
xorl
pop
jl
mov
xchg
adc
outsl
jns
sub
loop
mov
movb
xor
mov
pop
outsl
pushl
inc
inc
xor
inc
cmp
mov
xor
imul
push
out
mov
mov
cltd
fadd
stos
push
into
sbb
xor
add
aas
mov
pop
jo
sub
xor
inc
in
mov
mov
lcall
xor
popa
fwait
sarl
cmp
push
cmpl
mov
xor
dec
xchg
mov
xor
push
out
pop
int
out
icebp
cltd
in
push
loopne
cmc
int3
jl
adc
iret
hlt
rcr
fistl
aaa
mov
mov
xor
jnp
mov
bound
dec
fcmovu
jbe
movsb
fistps
jnp
and
call
and
out
jne
insl
xor
sub
ret
jb
mov
not
inc
pop
fsubl
insl
mov
xor
adc
in
pcmpeqd
stc
xchg
xchg
jmp
xor
jo
xor
mov
adc
popf
int3
testl
movsb
mov
lods
cmp
push
aas
inc
aam
xor
and
scas
shll
jns
sub
xor
pop
xchg
push
push
xor
ljmp
or
xor
test
lods
shll
stos
sub
subl
in
pop
pushf
test
pop
test
insl
jecxz
mov
std
inc
scas
and
push
mov
mov
sub
ficoms
push
dec
jb
in
data16
divb
jo
cmp
cmp
mov
and
gs
sub
loopne
pop
xor
mov
jp
or
lock
in
int3
fdivs
xor
lret
movsb
fmull
fcmovbe
aas
cmc
inc
jge
sub
inc
cmp
adc
out
xlat
sub
and
pop
pop
gs
aam
jl
mov
push
xor
inc
push
xorb
adc
lcall
cld
jne
imul
push
xor
and
xor
insb
xorb
xchg
sti
xlat
jne
xor
sbb
cmp
push
stos
cli
in
jno
int3
jge
mov
scas
mov
orb
sbb
or
fdivr
add
xchg
scas
lods
mov
stc
sbb
jno
sahf
icebp
hlt
cmc
xor
aad
jg
repnz
loop
dec
pop
push
xchg
mov
and
mov
xor
mov
test
leave
lods
add
mov
jmp
nop
shl
xor
and
add
xlat
inc
xchg
and
test
xor
es
in
sbb
test
lds
sub
fsubp
mov
and
add
shlb
jne
push
inc
stc
xchg
cmp
in
inc
test
sbb
fstpt
subl
jmp
pushf
xor
jnp
push
fwait
cmp
and
out
mov
or
cmp
mov
push
push
xor
xchg
jp
in
loop
xchg
jne
xor
pushf
fiaddl
jmp
je
cwtl
ficomps
scas
das
sahf
inc
in
push
mov
xchg
and
xor
arpl
mov
ds
movsb
ljmp
inc
in
dec
cmp
xchg
pop
cli
mov
sysenter
push
movl
ljmp
jle
push
mul
popa
or
jl
lahf
pop
faddl
insl
outsb
mov
dec
xchg
out
push
ret
into
push
pop
xlat
cmp
inc
test
push
sahf
xor
mov
push
mov
aam
in
xchg
js
pop
xor
jmp
sahf
std
add
out
popf
xor
sub
jmp
daa
mov
les
cmp
mov
test
cmp
xchg
dec
xchg
leave
xor
stos
shl
ret
fisubrl
imul
fidivrs
repnz
test
mov
dec
sub
xchg
add
dec
lret
xlat
and
dec
fistpl
ret
sub
mov
xchg
mov
scas
sub
xor
notl
adc
test
shll
les
faddl
fldcw
xchg
hlt
and
cmp
lret
scas
xor
pop
inc
jmp
jae
mov
lea
in
call
pop
or
dec
pop
xor
mov
xchg
mov
xchg
add
pop
sbb
xor
incl
fisubl
sarb
add
jbe
ds
jmp
faddl
cs
aam
fbstp
cmp
aad
ljmp
mull
lock
daa
cmpsl
aaa
xchg
inc
xor
pop
aas
push
pop
das
mov
insl
shll
hlt
xchg
jl
pop
ds
outsl
stos
jne
push
sbb
push
pop
in
aam
popf
inc
repnz
and
mov
icebp
in
xor
pop
pop
inc
sbb
mov
jl
jmp
test
pop
insl
push
imul
pop
arpl
jae
movsl
outsb
jg
fdivr
sti
mov
xchg
mov
xchg
or
jmp
cmp
sti
jle
or
and
sub
lods
mov
dec
xchg
clc
push
mov
jne
rcl
and
xor
lods
popf
sbb
xor
push
xor
loope
jp
mov
sub
xor
pop
inc
stc
stos
cmp
jecxz
mov
daa
lret
in
in
hlt
and
xlat
add
cmc
xor
jo
mov
fsubrl
int
inc
lods
sbb
cmc
movsl
jne
add
push
mov
or
ficoms
adc
lock
jl
cmp
fidivrl
dec
push
pop
xor
out
add
xchg
imul
fdivl
testb
adc
or
fdivrp
pop
daa
jne
loop,pt
jns
push
in
mov
lret
mov
ljmp
xor
aad
mov
xor
mov
sahf
sub
mov
insl
mov
cmc
inc
fidivrl
rclb
adc
pop
andl
and
mov
lret
popf
push
cmp
dec
xchg
push
dec
dec
mov
aaa
fnsave
xchg
sub
js
sahf
ficoms
or
mov
and
xlat
not
sbb
push
popa
jl
xor
or
xchg
push
outsl
jb
xchg
xor
xor
jp
cmp
adc
sbbl
hlt
dec
inc
dec
add
shrl
mov
sub
and
test
cwtl
xor
fcmovbe
call
dec
insb
cmp
xor
sbb
daa
xor
xor
inc
repnz
push
imul
push
or
dec
xor
and
mov
mov
pop
sub
fiaddl
pop
push
out
xor
push
ds
xor
push
push
popl
sbb
dec
inc
jb
mov
std
dec
repnz
mov
aam
fwait
cs
out
xor
mov
fbld
mov
sub
add
test
negb
sub
push
lcall
mov
jae
push
or
stc
push
cli
pushf
jle
lcall
je
push
push
cs
mov
insl
mov
mov
cmp
fldcw
in
and
mov
inc
mov
xor
ret
xor
out
icebp
sub
es
cmpsl
mov
mov
xchg
jecxz
lods
xchg
in
jbe
popa
popf
orb
out
aas
jl
and
mov
clc
mov
cmp
dec
pop
adc
ret
and
fpatan
lcall
cmp
ret
dec
icebp
xor
mov
movsl
fisubrl
movsb
cli
sbb
in
xchg
xor
sub
js
push
out
test
lea
jmp
cli
jge
push
dec
sbb
mov
pop
push
jne
fimuls
out
out
jle
mov
mov
or
movsb
repz
xor
pusha
inc
inc
xor
add
les
inc
cli
dec
adc
in
jbe
mulb
pushw
imul
cmp
fcompl
sbb
hlt
mov
ret
sarb
and
icebp
lea
sub
hlt
lods
in
dec
fsubr
mov
sbb
sub
cwtl
xor
jno
scas
daa
testb
dec
xchg
push
mov
clc
enter
or
lock
clc
pushf
icebp
jne
xchg
outsb
fs
inc
or
push
or
xor
std
lret
dec
push
iret
jo
mov
das
mov
mov
in
pop
jnp
lret
and
test
jmp
out
xorl
aas
push
dec
aad
jl
inc
mov
xor
xor
outsl
iret
ljmp
xor
into
jmp
adc
xor
and
push
xor
stos
fcoms
xor
push
in
lret
out
xor
mov
mov
cmp
cmovb
mov
xor
test
add
gs
insl
push
inc
icebp
testl
aad
divb
andl
or
mov
std
or
in
sub
fcompl
hlt
mov
out
rol
pop
xor
mov
loope
mov
cli
outsl
ljmp
fwait
mov
xchg
add
xor
dec
mov
negb
divl
xchg
mov
mov
pop
out
xor
xchg
outsl
scas
push
mov
out
aad
fadds
xchg
xor
cmpsl
xorb
inc
mov
cmp
mov
adc
dec
enter
pop
lahf
hlt
cli
pop
xor
shrl
push
sub
xor
fsubrs
in
data16
fidivs
xchg
shrl
jns
repnz
popa
cld
fimuls
sub
xor
ds
out
js
dec
jp
push
inc
es
jne
stos
inc
lret
das
xor
jmp
mov
mov
in
xchg
mov
xor
jo
or
jne
addr16
daa
pop
fdivl
clc
xor
or
cmp
inc
pop
xor
jb
insb
push
je
or
flds
sub
out
pop
adc
xchg
imull
fstp
xor
and
xor
test
or
out
push
daa
es
ret
mov
sub
fidivs
cli
adc
sbb
das
push
sti
xor
mov
xor
or
test
fdivl
jg
sub
rorl
inc
das
push
stos
or
faddl
jb
sbb
aad
jg
sbb
pusha
out
ret
add
sbb
xor
ret
xor
xlat
outsb
mov
ficoml
or
aas
jne
dec
popf
xor
ljmp
xchg
scas
push
push
imul
ds
xor
or
icebp
and
scas
xchg
jo
xor
and
out
push
push
fcoms
mov
or
push
popf
fs
xor
sbb
aaa
sub
mov
les
xorl
inc
sbb
outsb
and
arpl
mov
in
xor
movb
test
dec
cs
fisubl
jge
dec
lret
fisttps
xchg
xchg
and
push
xor
es
movsb
lods
add
xor
xchg
jle
xchg
outsb
les
iret
cmp
divl
jno
cltd
in
xor
fsubrs
ret
stc
adc
clc
mov
cli
xor
pusha
mov
iret
test
rcrl
lahf
fstpl
loop
aaa
xchg
xlat
gs
xor
sub
and
inc
xchg
fimull
pop
cmp
lds
push
mov
lret
xchg
xchg
pop
add
imulb
push
xchg
push
bound
cmpsb
mov
xor
mov
pop
pand
popa
jl
out
mov
repnz
pop
xor
add
std
repnz
jbe
mov
movsl
jmp
sbb
push
sub
mov
mov
in
jmp
fdecstp
mov
inc
cltd
dec
jne
xor
adc
sub
push
mov
popa
cmp
jle
and
xchg
movsb
jmp
dec
leave
pop
faddp
ret
cmpsb
aaa
aad
adc
or
mov
xchg
dec
add
adc
or
mov
push
popa
test
push
jns
or
scas
inc
fimull
xor
fidivrl
mov
or
mov
xchg
enter
push
xor
xor
aaa
loope
sbb
add
jp
sub
or
clc
mov
adc
sub
aas
les
sub
insb
mov
mov
and
jbe
sbb
lds
adc
stos
scas
mov
xor
aas
out
xchg
clc
fadd
push
cmp
inc
or
repnz
test
movsb
out
in
mov
push
xor
cmpsl
pop
aaa
call
cli
in
lods
int3
movsl
in
jmp
pusha
fldcw
cwtl
mov
lcall
jg
stos
adc
pop
fs
je
jmp
cmpsb
repz
pop
gs
xchg
loope
addb
xchg
push
clc
xor
adc
cltd
xor
xor
xchg
mov
divl
or
leave
xor
fucomi
inc
mov
push
sbb
and
xchg
clc
xchg
sbb
sysret
push
lahf
adc
xor
mov
stc
repnz
in
jmp
xchg
shlb
aas
xor
jno
jnp
fcmovbe
sub
jne
pop
out
or
fsubs
sbb
popa
mov
xchg
bound
mov
in
xor
and
inc
push
jmp
ljmp
jb
insb
dec
mov
or
cs
sar
mov
dec
jle
adc
fmuls
insb
jecxz
enter
add
and
jge
jb
mov
out
test
pop
fisubs
dec
mov
rolb
or
shll
ss
dec
cs
jnp
mov
and
mov
out
mov
das
lahf
mov
test
aad
pop
add
iret
sbb
in
out
adc
fistpl
nop
mov
mov
fistl
jne
pushf
in
sbb
fcmovu
sub
fsubp
fildl
dec
inc
sbb
ret
imul
xor
cmp
pop
inc
cmpsl
jns
outsl
or
in
popf
xor
xlat
and
cmp
aaa
jbe
rcl
mov
in
sub
es
pop
adc
imul
out
ss
jmp
fsubl
cmp
mov
push
test
fucomp
fiaddl
pop
test
call
aam
in
outsl
pop
mov
xchg
test
mov
pop
sbb
jp
adc
loopne
mov
mov
inc
fsubs
movsb
in
xor
add
cmp
xor
lret
sbb
xlat
pop
in
mov
out
fdiv
lret
ficoms
jnp
int
faddl
test
cld
imul
call
pop
fadd
adc
outsl
imul
adc
pop
fldcw
test
xchg
pop
fsub
arpl
push
add
pusha
pop
insl
das
sbb
cmp
arpl
jbe
xchg
jecxz
sub
sti
in
out
ljmp
lcall
stc
iret
roll
insl
fnstcw
xor
in
ficompl
stos
stos
outsb
bound
mov
mov
xchg
fsubr
int3
sti
cmpsl
in
sub
movsb
rcl
addr16
lret
push
jo
dec
xor
int
ljmp
add
fidivl
mov
xlat
and
jns
mov
pop
jns
cmp
mov
and
and
scas
sbb
stos
mov
and
pop
mov
rorb
add
dec
push
movsb
into
insl
stos
idivb
and
sahf
insl
loope
adc
popa
or
imul
and
and
xchg
pop
sti
das
xchg
fsubrp
scas
inc
sub
or
sti
or
and
fiadds
mov
push
sub
out
outsl
call
sbb
dec
out
cmp
je
mov
loop
xor
xchg
mov
stos
shlb
sahf
popa
stos
sarb
push
add
jg
pusha
ret
or
and
int
les
and
adc
fs
jo
xor
sub
jmp
mov
iret
fcomp
fildl
and
mov
insl
fucomi
and
adc
inc
mov
mov
fmull
dec
subl
or
cs
adc
xchg
cwtl
in
or
dec
mov
fcmovu
stc
sahf
iret
mov
lret
jmp
int3
add
sbb
in
mov
call
shll
leave
inc
cmp
shrb
mov
cmp
pop
inc
repz
xchg
fwait
pop
repz
cld
lcall
fimull
jmp
rcr
jge
jp
imul
ja
std
pop
cmp
lahf
aam
jmp
pop
add
gs
in
in
xlat
fisttpll
or
into
fdivrp
imul
push
loopne
xlat
jne
in
lods
imul
fildl
fcmove
adc
mov
int
test
cltd
leave
lret
and
lock
je
and
fnstcw
xor
fmull
fdivr
sub
push
std
arpl
leave
lmsw
cmc
cltd
testb
sbb
sarl
adc
add
test
test
pop
aad
popf
sti
fldl
inc
cmp
cld
fsubp
jmp
fstp
or
dec
mov
and
in
subl
inc
repz
mov
loopne
dec
mov
fisttpl
sbb
add
sbb
xor
fwait
loop
pop
pop
arpl
cmpsl
rcrl
movsb
cmpsb
cli
xlat
mov
lret
std
adc
mov
xchg
cmp
sti
xor
add
add
lret
mov
aas
mov
movsb
fisubl
imul
and
icebp
daa
in
sub
mov
in
mov
movsl
stc
push
in
aam
int
cld
jno
shrl
lret
jns
xchg
lock
insl
add
mov
sbb
dec
fucom
cmp
pop
xorb
cmp
roll
aad
call
mov
fucomp
fistpll
mov
or
std
ljmp
add
out
jno
sbb
in
pop
int
loopne
jge
fucomp
mov
in
lods
mov
shll
mov
fcmovnbe
jmp
sti
loop
sub
inc
push
aas
or
leave
ss
std
stos
pop
pushf
mov
cld
fdivrs
add
push
lds
js
push
shrb
jmp
sub
xchg
insl
test
popa
aaa
aas
add
ss
punpckhwd
jecxz
jmp
xor
ret
pusha
filds
mov
cmc
mov
pop
lahf
rolb
aas
xchg
popf
jmp
enter
add
pop
enter
jg
and
int3
lds
mov
in
fstps
adc
outsb
push
and
mov
add
mov
fs
dec
or
cli
cltd
xor
jecxz
lret
jmp
adc
rcrb
push
flds
testb
jnp
leave
test
mov
test
xlat
mov
mov
shrl
mov
lcall
xchg
mov
imul
mov
xchg
out
iret
in
scas
into
aam
fldenv
js
aam
jmp
rcl
cltd
ja
cmc
loope
stc
push
mov
sbb
cltd
shlb
shll
stos
fld
icebp
fstl
insl
imul
or
mov
frstor
cmp
popw
add
pop
pop
jmp
adc
jno
jnp
sbb
cmp
test
jno
pop
fcmovnbe
or
stos
add
lea
xchg
cmpsl
leave
movsl
sbb
movsb
dec
in
cltd
and
push
xlat
aam
shl
jmp
into
mov
pop
mov
mov
pop
mov
pop
int3
orl
rcrb
pop
add
pop
out
cmc
add
int3
stos
in
xor
jmp
add
xor
imul
outsl
dec
lcall
mov
sbb
inc
inc
out
sub
sti
pop
out
pop
daa
mov
adc
jmp
lret
or
lock
cmp
mov
test
inc
daa
call
aas
addb
aaa
mov
mov
shrl
test
cmc
push
cmp
or
fwait
icebp
popf
cmp
mov
prefetch
aam
xlat
add
xchg
jnp
leave
cmpl
or
jae
sbb
xchg
inc
cld
add
jns
adc
test
sbbb
push
jmp
fnstenv
jmp
xor
cli
lock
sarb
nop
ss
and
mov
fisttps
jbe
cmp
cmc
xchg
mov
cltd
jno
lcall
xlat
add
push
mov
pop
arpl
lret
fstps
or
stos
fadds
push
sahf
cmp
addr16
fxch
cmc
sub
cli
mov
or
jb
xchg
loopne
in
pop
fidivrl
addb
movsb
in
pop
arpl
int3
xor
rclb
cmp
negb
fs
push
jp
xchg
pop
or
aad
push
xchg
outsb
in
std
fadds
sti
icebp
pop
fnstsw
iret
jge
in
shll
adc
add
popf
bound
cwtl
add
dec
jmp
ror
push
movsl
dec
cld
shr
in
xchg
dec
mov
outsl
shll
movsl
shll
and
fldcw
fstpl
and
shl
pop
test
lret
add
in
fs
or
dec
fcomi
stc
movlps
out
repz
popf
jmp
mov
push
lret
out
call
outsb
inc
mov
xor
push
xor
stos
fmull
add
dec
cmc
adc
addr16
and
loop
adc
in
xlat
into
and
clc
lcall
xchg
lock
add
fsub
lea
sarl
popf
ffree
inc
jecxz
and
mov
cmp
cwtl
aas
inc
lea
jecxz
sbb
adc
add
jecxz
xor
mov
imul
aam
in
leave
xchg
ljmp
sti
test
mov
mov
pop
ret
push
fnstsw
cmp
in
pop
xchg
xchg
mov
and
aaa
leave
mov
cmc
sbb
adc
mov
dec
movsb
outsl
mov
lcall
pop
xor
test
cmp
mov
in
das
mov
and
repz
rorl
fs
loop
fisubl
mov
mov
shl
iret
lret
gs
lods
test
sbb
incl
adc
fldt
or
out
shll
aam
cltd
dec
fucom
jmp
cwtl
pushf
lods
enter
sub
orb
xchg
int3
lea
mov
imul
mov
pop
mov
gs
or
imul
pusha
xchg
add
cld
arpl
fidivrs
jne
cmp
mov
stos
ret
adc
in
fmull
repnz
add
add
in
aam
pop
ror
aam
gs
pop
cltd
stos
dec
cmp
enter
stc
push
popa
mov
mov
dec
or
cld
dec
loop
movsl
fdivrs
lock
out
inc
mov
sub
or
in
mov
out
push
in
cmp
xor
and
out
scas
std
stc
rcrl
fcomps
in
into
sbb
xchg
cmp
xchg
jg
enter
imul
int3
dec
pop
test
cmp
mov
loope
loope
lret
in
dec
inc
imul
inc
xchg
clc
xor
addb
test
pop
or
or
sbb
movsl
out
stos
pop
cmp
pop
xchg
adc
aam
add
mov
mov
out
mov
loopne
loop
popf
adc
lods
jle
lret
in
sub
fwait
aad
cmc
loopne
pop
and
fistpll
add
jae
fwait
add
push
xchg
mov
xor
leave
sbbl
mov
xchg
stos
addr16
add
mov
out
dec
popf
shl
fisubs
jg
lods
fcmovnu
insb
popa
mov
xor
and
mov
cmp
and
repz
cmpsl
in
sub
xor
leave
fsubr
mov
lds
sar
cmpsl
fstps
fbstp
add
leave
aad
add
and
vmovdqa
mov
aam
outsl
ret
cmp
loop
push
xlat
test
add
cld
mov
cs
cmp
and
cmp
cmc
add
xlat
pushf
cmp
cmpsb
lcall
add
xchg
in
lcall
in
cmp
jge
subl
hlt
xor
inc
ljmp
mov
sub
pop
fs
pushf
cwtl
popa
and
sbb
add
dec
leave
les
lret
dec
or
stc
xlat
inc
cmp
adc
repz
test
clc
loop
push
mov
mov
xchg
fs
push
test
fxch
call
psrad
mov
mov
adc
shll
adcl
dec
pusha
lock
sbb
dec
jno
lret
or
in
aam
cmp
in
or
or
movsb
push
js
add
shl
fdivrl
insl
sub
out
pusha
push
fdiv
es
fldcw
xchg
fisubrs
inc
jbe
push
outsl
xchg
in
inc
inc
push
lret
adc
adc
and
fs
in
or
dec
fstpl
add
in
mov
pop
icebp
shl
dec
inc
add
fisttpl
icebp
lret
jle
std
add
invlpga
fistl
pop
lahf
shr
in
sar
nop
pop
add
mov
sub
idiv
leave
lods
jecxz
jge
gs
mov
mov
dec
mov
test
xchg
adc
sti
lahf
jbe
insl
je
test
mov
lret
sahf
mov
add
sar
or
dec
stos
xchg
test
cmc
and
sarl
push
sbb
and
je
adc
bound
xor
fldl
addr16
int
popa
fidivrs
decb
fwait
das
int3
cmp
jns
out
das
mov
loop
lods
and
outsl
or
sub
xchg
mov
dec
std
sahf
xlat
aaa
xorl
dec
mov
and
mov
ja
test
and
cmpsl
out
icebp
repz
imul
gs
mov
mov
sub
xchg
fbstp
orl
jbe
lret
sar
imul
mov
lcall
ret
aaa
lahf
fisubl
mov
jne
daa
sbb
es
and
and
shrb
fucomip
loope
cmp
push
inc
das
mov
xor
sbb
dec
js
xor
or
cmc
pop
inc
lret
add
pushf
out
mov
xchg
insb
mov
add
add
ret
mov
cmp
test
mov
jmp
movsb
les
mov
iret
fnstcw
loopne
in
cmp
lcall
fwait
jmp
cmp
mov
add
popf
insl
push
int
adc
rcrb
xchg
cltd
pop
push
testl
xchg
ret
pop
scas
jecxz
ret
mov
add
popf
dec
xchg
pop
test
xchg
pusha
add
fnstcw
pop
jno
roll
inc
adc
testl
mov
mov
pusha
cli
lret
gs
fisttpll
jnp
pusha
fcomps
jmp
lods
arpl
sbb
sbb
sbb
imul
and
out
xchg
mov
in
rolb
mov
add
repz
add
repz
ffreep
stos
pusha
leave
repnz
and
or
jecxz
rcr
pop
mov
clc
mov
lds
xlat
out
jl
neg
xchg
pop
dec
and
imul
cmc
pop
pop
in
sub
fwait
fwait
aad
fwait
rcll
pop
aad
inc
movsl
aad
pop
xchg
int3
mov
sti
leave
lahf
cmc
aad
test
inc
aaa
int3
push
lods
fcmovne
and
mov
xlat
out
jmp
fcomip
std
icebp
jecxz
dec
sti
xor
mov
pop
sahf
clc
popf
fldl
jecxz
aad
push
xlat
out
je
rol
leave
jmp
out
andl
fnstenv
daa
jne
leave
jmp
stos
stos
imul
and
cmc
dec
shrl
dec
cltd
test
in
xchg
daa
movsl
std
popf
add
mov
inc
or
lods
adcl
jmp
pop
imul
aad
fsubrp
inc
scas
jle
lcall
or
push
in
fildll
jle
pop
sub
popa
das
mov
dec
jnp
cltd
mul
aaa
xchg
repz
rcrl
dec
ret
and
xor
fimull
sub
lods
in
push
push
lea
inc
add
adc
sahf
sub
jns
aam
in
push
aam
insl
sbb
pop
xor
movsl
repz
rorb
dec
repnz
mov
mov
and
xchg
mov
ljmp
mov
leave
lea
idiv
push
in
or
mov
out
push
pusha
cwtl
sub
cmp
enter
pusha
out
xlat
sub
out
test
push
jg
mov
test
leave
jnp
iret
cmp
cltd
gs
testb
mov
pop
es
sub
pop
std
movsb
cmp
push
cmp
pushf
std
daa
mov
sub
mov
leave
pushf
in
push
jns
or
in
jb
add
arpl
inc
or
mov
xchg
test
or
pop
xor
mov
std
fcmovnbe
fcmovbe
enter
pop
clc
in
dec
mov
mov
repnz
aas
aad
daa
push
int3
repz
and
lret
dec
ficompl
in
int
mov
push
andb
cmp
xlat
sub
clc
dec
sbb
int
clc
in
jmp
xlat
push
and
loopne
jnp
enter
sub
fwait
shrb
mov
cmp
or
dec
pop
mov
fbstp
test
and
leave
inc
xchg
jmp
call
lcall
sti
in
test
pop
mov
test
lret
stc
or
shl
ret
inc
mov
jecxz
adc
dec
icebp
out
nop
add
inc
jl
in
push
mov
cmpsl
aad
jg
lahf
movsl
adc
mov
mov
add
jmp
rcl
data16
fisttps
stc
or
add
push
cmc
fnsave
or
cld
or
std
sub
sbb
movl
lahf
cmc
jae
add
jmp
pop
lock
lock
ret
mov
sti
movsl
repnz
aad
mov
popf
mov
imul
into
stos
aaa
pop
mov
scas
cmp
fmull
ljmp
mov
frstor
add
je
lret
xlat
data16
adc
mov
push
and
popl
mov
mov
iret
clc
xlat
adc
mov
call
fnsave
mov
jbe
lea
adc
faddp
xor
mov
fstp
jecxz
push
sub
in
push
lahf
dec
nop
aad
lret
push
mov
cltd
add
sub
out
add
dec
and
shr
inc
jecxz
ret
sbb
cmpsl
push
adc
fiaddl
std
xchg
lods
inc
jno
mov
or
insl
popa
mov
or
jbe
and
popa
ljmp
iret
jmp
sbb
mov
sbb
cmc
pop
add
pop
cmc
popf
sub
mov
add
shlb
mov
test
cmp
mov
push
add
push
adc
sub
adc
test
jecxz
flds
stos
in
pop
add
fcomip
clc
rolb
xor
fsubr
sbb
xchg
mov
inc
in
sub
bound
fs
test
out
pushf
xor
dec
dec
outsl
dec
and
cmp
sub
loopne
pop
movsb
lods
mov
xlat
pop
ficoml
mov
sbb
movsb
mov
out
jne
in
or
xchg
test
adc
ror
rcr
syscall
iret
imulb
adc
cmp
fiadds
daa
add
fdivrp
mov
fcomp
mov
sahf
fbstp
fstl
scas
cmp
mov
imul
push
jbe
xchg
pop
fidivs
or
dec
in
push
movsb
rcr
sti
das
or
mov
sub
mov
xchg
test
xlat
push
test
mov
dec
sub
mov
or
mov
lds
inc
sbb
mov
aad
xor
cld
scas
vpaddb
sti
adc
fmulp
cltd
dec
sbb
je
lea
cmc
and
leave
xlat
call
in
popa
movsl
lea
out
push
test
loope
adc
mov
lcall
idivl
test
push
pusha
add
loope
enter
mov
and
imul
loop
and
push
in
subl
add
pop
shll
add
aam
pop
sbb
and
rcl
mov
hlt
andl
and
pop
mov
jbe
aad
mov
js
leave
xchg
dec
mov
int
lret
jle
cmp
aam
and
jmp
aaa
mov
add
fldt
in
stc
adc
outsl
fisubs
xchg
sbb
repz
lock
jae
arpl
sub
cltd
push
cwtl
jge
mov
pop
pop
iret
sbb
jp
cli
pop
leave
fisttps
cmpsb
daa
add
cld
aad
mov
imull
adc
aaa
push
sbb
call
adc
leave
add
test
int
popf
and
sub
jmp
test
in
test
sti
std
cwtl
jns
cmp
or
push
mov
ljmp
shlb
dec
or
mov
shl
int3
mov
pusha
aaa
jnp
clc
int
repz
lret
cmp
movl
aaa
add
rcl
xlat
push
rcr
pusha
push
pop
mov
inc
in
lahf
icebp
pop
xor
lcall
adc
int
and
aaa
or
cli
inc
or
out
add
mov
cmc
xor
nop
roll
lahf
cmp
lahf
stos
xor
test
lods
pop
cmpsl
cmp
add
pop
push
nop
fbld
loop
fwait
lret
sub
gs
rcl
xchg
add
mov
lods
add
repz
cld
lods
mov
lcall
sbb
insl
fs
int3
icebp
enter
pop
pusha
and
push
adc
cwtl
dec
rorb
push
pop
iret
jmp
out
xchg
movsl
xorb
dec
cmpsl
sar
cld
and
loop
or
mov
pop
test
cmpsl
push
jl
in
cld
ljmp
add
pop
pusha
push
pop
nop
and
lret
and
bound
out
fistl
add
or
jl
out
mov
push
mov
and
add
sbb
pop
adc
lcall
pop
imul
sbbl
test
in
scas
push
adc
in
push
movsb
repnz
data16
icebp
mov
imull
add
int3
test
lahf
jnp
mov
pop
insb
inc
jmp
cmc
mov
push
in
mov
add
sub
mov
cmc
sub
mov
out
lods
mov
in
stos
cmp
or
adc
lods
lea
movsl
pop
xchg
xor
aam
mov
inc
cmp
leave
lods
out
pop
in
lea
popf
lret
cmc
in
std
test
int
fnstsw
jmp
sub
lret
or
insl
jge
ljmp
mov
enter
push
gs
adc
dec
aad
pop
mov
or
jae
push
xchg
sahf
iret
mov
stc
cmp
mul
pop
jg
mov
sahf
sbb
int
sahf
cltd
mov
xor
scas
leave
mov
popa
test
aaa
and
xor
test
fptan
mov
push
jmp
lea
or
arpl
out
fldenv
movsl
ret
test
xchg
out
in
jecxz
fsubrl
sub
push
adc
sub
dec
in
push
popa
out
pop
nop
add
jae
enter
jge
data16
and
mov
dec
xchg
loop
iret
cld
out
dec
jno
sub
lea
inc
out
pop
adc
movsl
repnz
and
das
jns
ret
hlt
movsl
add
test
xlat
mov
jecxz
sub
mov
loope
hlt
sub
loop
inc
ljmp
jle
dec
cltd
sbb
cld
push
adc
fst
mov
sbb
or
negb
and
leave
mov
cmp
cmp
std
cmc
add
pop
mov
xor
test
or
jl
add
int
fxch
and
dec
xchg
mov
and
outsl
shrl
push
cmpsb
ja
push
lcall
repz
jl
lcall
inc
cld
cld
loope
cld
insl
cld
sub
in
inc
cli
sti
sub
dec
popf
int
or
adc
gs
imul
insl
lds
fwait
xchg
test
lcall
xor
imul
in
mov
lcall
dec
xchg
int3
push
in
and
push
cmp
pusha
sub
pop
cltd
xor
fnstsw
fwait
std
jnp
fstps
in
cmp
dec
mov
cli
push
sub
sti
ja
sti
cltd
fwait
rorl
notl
call
push
sbb
std
xlat
pop
sbb
rcll
inc
sti
sahf
jmp
mov
pop
jno
aam
cmp
in
pop
in
jmp
lahf
decb
mov
sbb
mov
ds
movsb
rcrl
mov
or
lods
fnstsw
out
out
push
iret
xchg
mov
push
lahf
loop
add
cld
sbb
arpl
outsl
mov
ret
cld
ds
test
adc
int
cmpsl
xchg
and
push
fcoml
out
rcll
daa
in
iret
mov
mov
ficoms
clc
jnp
in
sbb
mov
add
sbb
imul
std
inc
stc
arpl
pop
fnstenv
test
cmp
sub
mov
je
and
shll
aam
mov
dec
pusha
test
int3
cmc
sub
sub
std
add
test
lods
clc
insb
jecxz
mov
xchg
clc
cmpsb
incb
jb
mov
jg
std
xor
int
cltd
icebp
add
dec
out
ljmp
mulb
les
nop
test
inc
lret
loope
inc
rcrl
test
mov
rolb
add
lock
fwait
out
sbb
stos
fwait
add
mov
or
or
mov
ret
mov
loop
sub
shlb
cmp
sbb
xlat
ret
fisubrs
ljmp
dec
loopne
sbb
bound
pop
test
ljmp
push
les
add
iret
add
xlat
jmp
xor
les
std
xor
test
decb
jl
pop
fsubrp
scas
xchg
adc
xchg
test
pop
daa
out
popf
xchg
lahf
icebp
insb
add
cmpsl
iret
addr16
pop
imul
mov
pop
out
and
cltd
pop
mov
dec
pop
adc
repz
enter
test
add
je
adc
ret
les
insl
cmp
and
inc
push
sbb
in
daa
jne
dec
popa
adc
in
ret
dec
xor
mov
testb
pop
mov
outsb
add
fildll
aaa
filds
stc
pop
stc
and
add
dec
or
aad
add
fs
into
je
es
icebp
push
xchg
xchg
lret
jge
pop
dec
lods
sti
lea
mov
or
or
add
fmul
inc
xchg
cmp
push
cmc
mov
inc
aam
ljmp
pop
or
fcoml
xchg
dec
mov
inc
bound
mov
mov
test
lret
call
push
cmp
int3
push
lret
in
aam
add
aam
in
push
aam
in
lret
sub
movl
lret
mov
leave
aas
sub
in
pop
fs
hlt
sbb
inc
fmull
pushf
jle
pushf
jne
cltd
out
add
test
push
cmp
rcrb
cmp
bound
arpl
nop
jmp
lods
xor
xchg
pop
rcr
mov
cli
xor
and
mov
adc
pop
and
pop
fucom
imul
xchg
push
ja
sub
cmp
rcrl
sub
iret
sbb
and
data16
jmp
add
ss
xor
js
pushf
mov
pusha
pushl
ret
cmpb
jmp
call
sbb
add
orl
or
cli
call
cmpsb
loopne
lock
dec
xor
shr
adc
in
lcall
sti
mov
lea
jo
psllq
or
imull
push
ljmp
mov
lret
shr
xchg
mov
xchg
fcmove
lcall
pop
sti
add
js
lods
add
notb
add
aas
adc
pusha
clc
stc
add
call
add
in
aad
push
movb
push
lea
jne
push
pop
mov
pusha
pushl
mov
lea
jmp
lea
jae
test
pusha
xor
mov
jmp
stc
mov
mov
bound
mov
popf
pop
xchg
mov
jg
mov
sbb
mov
xchg
push
stc
testb
repnz
adc
cmp
and
shlb
inc
out
icebp
sub
testb
in
mov
mov
pop
pop
inc
fs
pop
ds
fsts
outsl
sub
fistpll
testl
movsb
fdiv
xlat
inc
clc
adc
xor
mov
pop
and
jecxz
or
jecxz
in
fcmove
fwait
jne
sub
pop
cmp
cmc
test
pusha
call
xor
test
clc
pushf
repnz
pushf
pusha
push
lea
jne
pushf
mov
pusha
not
shl
sub
sub
movsbw
bsr
shld
mov
cmp
push
cmc
cmc
sub
pusha
pushf
bt
pushl
popl
call
push
pushf
mov
lea
je
bsf
shr
inc
rcr
xor
rol
mov
rol
mov
rcr
rol
jmp
in
data16
add
cli
mov
and
cmp
mov
mov
xor
shrl
add
psubb
lods
adc
sbb
lods
call
cmp
jno
ret
gs
mov
sub
arpl
iret
dec
sahf
fistpl
inc
lahf
and
sbb
mov
std
dec
dec
out
into
sub
test
dec
or
out
add
shll
pop
jo
cmpl
loope
mov
lock
notb
cld
sbb
enter
jecxz
fucomi
into
cmp
ljmp
add
rcl
sar
bt
bt
xor
or
sub
push
cmp
inc
xor
sar
push
sbb
neg
call
pusha
movl
pushf
push
jmp
lea
je
pusha
jmp
pusha
pushf
mov
call
add
dec
gs
popa
addr16
outsl
js
add
mov
push
xchg
clc
dec
orl
in
mov
adc
xchg
dec
popf
lcall
hlt
jp
pop
jg
inc
xchg
mov
les
inc
inc
outsb
or
mov
ret
xchg
pop
sub
pop
mov
adc
iret
je
sub
cmp
insl
out
fs
jge
xchg
mov
mov
push
add
pusha
xchg
aad
insb
ljmp
mov
jecxz
cbtw
pusha
popa
pop
pop
push
add
fcmove
popf
xor
lea
call
call
cmc
cmc
xor
cmc
movb
clc
cmc
ror
bt
test
mov
add
movb
cmc
neg
pushf
cmp
movsbw
cwtl
lea
pushf
pushf
not
movzbw
mov
jmp
mov
lret
pop
push
jbe
movsb
ja
cmovns
jae
jnp
imul
cmp
into
ret
adcb
jmp
inc
mov
xchg
stos
mov
fnsetpm(287
add
sub
or
aaa
hlt
subb
xlat
add
hlt
mov
xchg
pop
push
push
dec
pushaw
push
pop
adc
test
pushf
sbbb
jno
cmp
test
das
pop
dec
fucomip
mull
mov
push
ljmp
fmul
lock
lret
popf
add
test
stos
loop
cmpl
inc
clc
mov
xor
lds
enter
rclb
test
into
call
test
dec
dec
jecxz
dec
ljmp
ss
adc
inc
cbtw
jb
mov
repz
in
xor
call
xchg
aam
xchg
mov
or
in
lahf
mov
aad
iret
loopne
outsb
push
or
enter
xchg
and
fwait
xchg
imul
sbb
sub
ss
je
push
orb
inc
jno
rcrl
inc
gs
or
iret
lea
add
cmc
fiadds
or
mov
out
out
vpcmpgtb
add
hlt
sbb
loop
enter
hlt
pop
test
outsl
insb
clc
pop
cld
pop
jl
mov
push
jecxz
jge
das
in
lods
fmull
lods
subb
dec
movsb
fdivr
push
lret
jle
jns
dec
xor
inc
or
xor
jmp
inc
inc
das
cmp
dec
iret
fcmove
lahf
aaa
cmp
lea
pushf
movl
push
pusha
call
clc
scas
inc
stc
add
popa
push
lea
push
mov
insb
lock
pop
push
xchg
test
in
adc
or
push
cmp
push
or
jae
dec
dec
lret
fndisi(8087
das
pop
ja
jle
nop
cltd
mov
addb
xor
ja
inc
inc
push
call
or
movb
pushf
jmp
jmp
movl
jmp
mov
bswap
lea
jmp
stc
cmp
pushf
call
call
jmp
movl
mov
movsbw
pop
lea
jbe
pop
pushf
jmp
sub
insl
push
push
jnp
xchg
xor
cld
das
test
push
jae
sub
pusha
sti
sarb
mov
outsl
popa
cmp
fdivr
mov
aas
mov
mov
sbb
mov
push
inc
scas
shlb
popa
aas
rclb
outsl
fisttps
add
pop
add
add
lods
in
decl
enter
pop
jns
add
push
add
add
dec
imul
xor
inc
in
lcall
aaa
push
cli
test
xlat
or
xchg
ss
push
fst
mov
push
or
scas
mov
jbe
push
mov
in
xchg
push
std
pop
or
out
mov
out
test
aam
mov
int3
fsubp
jmp
in
fwait
inc
repnz
mov
and
imul
push
add
or
push
gs
mov
sub
sti
pushf
push
iret
fcomi
sbb
sub
cmc
add
pop
test
dec
xchg
imul
clc
xor
mov
sti
adc
ds
popf
in
jg
aas
add
mov
push
jno
push
scas
pop
enter
nop
shrl
enter
mov
or
test
in
ss
rol
mov
mov
bt
clc
test
or
push
call
mov
pushl
pushf
movb
lea
jmp
mov
push
pushf
pushl
lea
jmp
pushf
popl
call
movb
call
pushl
popl
mov
mov
lea
jmp
push
pushf
mov
push
push
push
lea
jmp
test
lea
cmp
movb
sub
pushl
push
pushl
pushf
mov
pushf
pushf
movb
lea
jmp
mov
call
pushf
popl
mov
push
pushl
popl
pushl
pushf
pushf
lea
jmp
jmp
mov
pusha
lea
je
mov
push
movb
pushl
pusha
lea
jmp
mov
bswap
lea
mov
call
mov
pushf
dec
mov
pushf
lea
jmp
not
bt
and
lea
jp
pushf
pushf
push
mov
pusha
jmp
add
mov
mov
lea
jmp
movb
mov
pushf
push
lea
jmp
pusha
sub
bsr
movzbw
notl
test
dec
mov
jmp
push
push
cmc
xor
stc
pusha
stc
rol
mov
clc
test
add
jne
add
pusha
mov
mov
pusha
pushf
push
movw
sub
lea
js
pusha
movb
mov
mov
movb
pushl
lea
jmp
sub
cmc
add
push
xor
movl
call
call
mov
mov
push
mov
lea
jmp
lea
mov
jmp
jmp
stc
mov
shld
mov
cmp
pusha
pusha
test
not
bt
cmc
clc
not
pushf
cmp
sub
bt
and
call
lea
mov
movw
call
push
call
mov
stc
mov
call
inc
mov
sub
mov
clc
stc
xor
neg
mov
pusha
cmp
test
test
sub
jmp
pusha
pusha
mov
mov
movb
mov
pushf
movw
mov
lea
jmp
pusha
inc
jmp
sub
push
cmc
cmc
neg
call
ror
mov
inc
mov
cmc
stc
cmc
add
pushf
jmp
pushf
pushf
popl
call
pop
mov
push
jmp
shld
mov
or
shl
shl
not
mov
call
pushf
movw
push
mov
movw
movb
pusha
jmp
cbtw
cmc
pushl
bt
pushf
cwtl
pushf
movl
test
test
sub
call
pushf
mov
push
pushf
lea
jmp
lea
je
pushf
push
mov
pushf
pushf
lea
jmp
jmp
sub
pusha
mov
jmp
mov
pusha
pusha
push
pushf
lea
jmp
inc
movzbl
inc
inc
push
stc
clc
lea
neg
shr
add
btr
add
bt
and
inc
xor
stc
mov
cmp
sub
push
pusha
call
dec
push
push
movb
lea
jmp
call
dec
mov
pusha
add
call
xadd
xor
cmp
mov
rcr
bt
add
push
mov
call
pusha
pusha
shr
call
pushf
mov
pusha
mov
pusha
mov
pushf
lea
jmp
pushf
popl
pushf
jmp
clc
mov
and
call
sub
movl
pushf
call
clc
sub
call
call
jmp
bswap
ror
aas
rcr
mov
shl
mov
bt
pusha
clc
cmp
not
call
dec
rcl
call
sar
mov
bsr
mov
jmp
bt
clc
jmp
bswap
mov
jno
mov
mov
pusha
divl
call
pusha
pushl
popl
pushf
pushf
lea
jmp
cmp
add
push
call
movb
mov
jmp
lahf
setg
bswap
movzbw
mov
pushf
call
pushf
pushf
popl
pushf
call
mov
cmc
mov
test
pushf
add
pushl
mov
pusha
mov
push
pushl
lea
jmp
push
xor
pushf
test
sub
jmp
btc
or
aaa
mov
cmp
bt
bt
add
pushf
pushf
popl
jmp
shrd
stc
rol
pushf
lea
cmp
stc
clc
cmp
pushf
pusha
push
push
lea
ja
lahf
pusha
lahf
inc
lea
bts
lea
movsbl
cmc
bswap
sub
xadd
lea
stc
bsr
sar
shl
and
not
rcr
shr
lea
sub
not
jmp
decl
pushl
push
mov
movl
lea
jne
pushf
mov
pushf
lea
jmp
clc
call
and
mov
cmp
pushf
cmp
stc
sub
jmp
jmp
push
pushl
popl
pushl
mov
movw
lea
jmp
pushf
mov
pusha
push
lea
jmp
xor
shrd
bsr
mov
bt
mov
pushf
clc
cmp
cmc
add
jmp
aad
inc
mov
rcr
shl
bswap
push
mov
pushf
jmp
xchg
call
adc
clc
rdtsc
call
mov
push
mov
lea
jne
pusha
pushf
mov
call
pushf
push
jmp
push
call
or
call
cmc
jmp
push
push
push
pushl
ret
add
mov
test
clc
add
pushf
pusha
lea
jmp
bt
sub
movw
pusha
stc
bt
shr
movb
jmp
lea
jg
popl
pushf
lea
jmp
push
mov
jmp
shr
sete
mov
rcr
add
add
shr
mov
neg
clc
bswap
bt
add
pushf
pop
call
inc
call
mov
movb
movw
pushf
pushf
lea
jmp
mov
pushf
push
lea
jmp
jmp
call
rol
push
sub
mov
mov
movb
dec
stc
test
call
pushl
popl
pusha
lea
jmp
movw
mov
pushl
pushf
movb
pushf
lea
jmp
bt
cmp
xchg
cmp
pushf
sub
stc
xor
pusha
ror
cmp
cmp
sub
mov
pushf
push
sub
test
bt
cwtl
lea
jle
bt
push
movl
sub
call
call
cwtl
bt
jmp
mov
pushl
popl
movb
movb
movb
mov
lea
jmp
push
lea
jb
mov
push
jmp
push
mov
pushl
pusha
call
bswap
btr
mov
or
and
mov
shr
mov
stc
test
push
sub
add
jge
cmc
shr
pusha
mov
lea
jge
mov
pusha
jmp
lea
pushl
mov
pushf
movw
lea
jmp
movb
lea
jno
popl
push
push
push
lea
jmp
stc
call
jmp
movb
mov
pushl
push
pushf
lea
jmp
pusha
pusha
pushf
mov
mov
movb
mov
pushf
pushf
pushf
pushf
lea
jmp
pushf
mov
jmp
pushf
mov
pusha
call
clc
cmp
sub
mov
bt
mov
pusha
push
cmp
sub
cmp
push
movb
movb
shl
jmp
movw
pushf
popl
mov
jmp
movzbw
call
sar
mov
clc
call
mov
movl
call
movw
stc
xchg
clc
mov
cmp
sub
pushf
call
push
lea
jae
pushf
pushf
popl
jle
pusha
pushl
popl
pusha
push
push
pushl
lea
jmp
pushf
push
rep
movsbw
lea
pushf
movzbl
mov
mov
or
pop
mov
test
pushl
popf
mov
mov
mov
lea
jmp
and
setb
movzbl
pushf
movb
cmc
pusha
xor
pushl
push
inc
jmp
jmp
mov
and
neg
movzbl
cmc
bt
pushf
push
xor
lea
jns
push
pusha
inc
pusha
call
decl
push
pushf
lea
jne
pusha
push
mov
pushf
mov
pushl
lea
jmp
mov
push
push
mov
lea
jmp
mov
pushl
call
lea
jne
inc
dec
mov
pusha
bt
pushf
pusha
and
call
pushf
popl
call
add
add
mov
test
pusha
cmp
call
cmc
mov
add
call
movzbw
bswap
mov
not
repz
popl
mov
mov
dec
mov
mov
inc
pushf
xchg
mov
inc
setb
setns
mov
dec
pushl
popl
push
movl
inc
pusha
mov
movzbw
dec
call
pusha
pushf
pushf
movw
mov
push
pushf
pushf
popl
movw
push
mov
pushf
pushl
popl
pushf
pushf
lea
jmp
cmc
sub
call
call
mov
pushf
pushf
lea
jmp
lea
jg
pushf
push
call
movl
jmp
stc
sub
cmc
bt
xor
pushf
ror
jmp
bt
call
lea
je
pusha
movb
mov
jmp
mov
movw
movb
movb
pushl
ret
shr
call
push
mov
mov
push
pushl
lea
jmp
test
cmp
pushf
jmp
push
push
call
xor
bt
bt
movl
cbtw
test
jmp
pushl
popl
mov
lea
jmp
rcr
jmp
pusha
jmp
push
pushl
popl
mov
pusha
pushf
push
lea
jmp
clc
cmc
xor
mov
bswap
dec
mov
sbb
mov
pusha
cmc
add
clc
pusha
shld
mov
pushl
mov
push
push
pushf
popl
call
pusha
mov
pushf
popl
jmp
mov
call
mov
mov
pushf
lea
jmp
adc
ja
or
mov
cmc
add
push
pusha
lea
jmp
pushf
mov
pushf
lea
jmp
pusha
pushf
popl
call
jmp
btc
rcr
movzbw
mov
clc
cmp
jle
test
add
push
lea
jmp
test
cmp
cmp
sub
pushf
jmp
dec
movzww
pushf
clc
xchg
jmp
movsbw
lea
shrd
mov
test
call
cmp
shl
add
add
mov
test
test
add
push
lea
jmp
pushf
pushl
mov
push
lea
jmp
pushf
pushf
cmp
add
pushl
push
mov
lea
jmp
mov
pushl
push
pushf
lea
jmp
inc
bsr
xchg
mov
adc
and
jmp
mov
pushf
pushf
popl
pushf
call
sub
movb
pusha
pusha
pushl
mov
pushl
push
mov
lea
jmp
push
pushf
popl
pushf
pushl
pushl
popl
pushf
lea
jmp
dec
clc
push
push
add
mov
pushf
bt
bt
sub
jmp
call
cmc
movzbw
mov
adc
mov
bt
test
cmp
sub
pushf
shl
jmp
lea
dec
mov
cmc
add
pushf
pusha
lea
jmp
jmp
push
mov
movb
movw
push
pushl
mov
pusha
lea
jmp
mov
lahf
mov
push
lahf
jmp
pushf
mov
mov
pushf
mov
mov
pusha
pushf
pushf
lea
jmp
add
add
pushf
mov
jmp
mov
pushf
pushf
movw
pushf
lea
jmp
jmp
call
jmp
pusha
pushf
cld
mov
jmp
cwtl
cwtl
cmc
aad
mov
push
add
call
lea
sar
sets
or
cmc
xor
bswap
ror
add
stc
rol
add
movzbw
push
pop
movzbl
push
push
setnp
pop
mov
mov
pushf
pushf
jmp
call
jmp
call
jmp
mov
call
clc
rol
dec
add
bsr
shr
setg
sbb
lea
shl
btc
or
sub
sbb
mov
xadd
call
pusha
mov
mov
mov
pushf
pusha
pushf
pushf
lea
jmp
pushl
popl
push
pushf
lea
jmp
pusha
add
pusha
cmc
mov
call
pushf
lea
jne
shr
shl
mov
bt
and
clc
pusha
push
cmp
movb
jmp
jmp
jmp
call
lahf
movsbl
cwtl
mov
pusha
pusha
mov
call
pushl
popl
mov
pushf
movb
lea
jmp
cmc
rol
call
pushf
mov
jmp
das
inc
xchg
shl
mov
clc
and
mov
jmp
lea
jne
jmp
mov
movb
pushf
pushl
push
mov
pushf
pusha
push
lea
jmp
pushf
rcr
push
mov
stc
sub
cmp
pushl
mov
stc
shl
push
call
cmp
btr
jmp
call
clc
cmp
mov
bt
add
not
push
mov
push
mov
pushl
pusha
push
movb
lea
jmp
call
sub
movw
pushl
mov
clc
cmc
push
sub
jmp
push
call
push
pushl
call
push
pushf
call
call
call
call
call
mov
jmp
push
jmp
sub
movl
call
mov
push
bswap
mov
jmp
pushf
jmp
pop
ss
add
pop
add
pop
add
inc
pop
add
pop
add
pop
add
pop
add
ss
add
pop
add
pop
add
cmp
sub
push
inc
pop
add
pop
add
sub
push
inc
pop
add
pop
add
pop
add
inc
pop
add
pop
add
ss
add
pop
add
pop
add
es
add
pop
add
pop
add
inc
pop
add
pop
add
pop
add
cmp
pop
add
xor
adc
pop
add
inc
pop
add
sub
mov
xor
cmp
cmp
add
xor
add
pop
add
sub
divl
pop
add
pop
add
pop
add
ss
add
pop
add
pop
add
xor
add
pop
add
pop
add
cmp
stos
xor
adc
pop
add
xor
add
xor
add
pop
add
pop
add
inc
pop
add
pop
add
xor
and
add
pop
add
xor
out
pop
add
es
add
pop
add
xor
add
xor
push
sub
pop
xor
add
pop
add
pop
add
cs
add
sub
mov
xor
add
sub
xor
pop
add
es
add
ss
add
pop
add
inc
pop
add
pop
add
ss
add
cmp
mov
pop
add
sub
sub
out
xor
add
ss
add
pop
add
sub
stos
xor
lds
pop
add
xor
mov
pop
add
and
pop
add
xor
add
sub
mov
cmp
mull
pop
add
sub
mov
xor
mov
xor
out
pop
add
sub
stos
cmp
stos
xor
dec
inc
pop
add
cmp
pop
add
ss
add
sub
mull
pop
add
pop
add
sub
push
sub
push
inc
pop
add
pop
add
sub
and
pop
add
pop
add
pop
add
xor
sub
mov
pop
add
xor
add
pop
add
pop
add
and
pop
add
and
pop
add
sub
jno
pop
add
sub
or
sub
aas
xor
mov
cs
add
pop
add
inc
pop
add
xor
sub
mov
pop
add
cmp
sub
mov
xor
add
sub
sub
jle
pop
add
sub
pop
xor
add
pop
add
sub
repnz
pop
add
pop
add
sub
push
inc
pop
add
ss
add
pop
add
xor
add
pop
add
pop
add
pop
add
sub
jno
pop
add
inc
pop
add
sub
sub
sbb
pop
add
pop
add
pop
add
pop
add
pop
add
xor
pop
add
inc
pop
add
and
pop
add
pop
add
das
pop
add
sub
or
xor
add
inc
pop
add
pop
add
pop
add
sub
push
inc
pop
add
pop
add
cmp
push
inc
pop
add
pop
add
inc
pop
add
pop
add
pop
add
xor
add
xor
push
inc
pop
add
pop
add
xor
add
inc
pop
add
pop
add
sub
push
inc
pop
add
pop
add
push
add
pushf
popl
pusha
jmp
call
btr
mov
bt
add
pushf
pusha
pushf
lea
jmp
or
aas
stc
mov
cmp
push
pusha
bt
add
jmp
push
jmp
clc
ror
jmp
jmp
sub
bt
sub
cmp
pusha
bt
stc
sub
bt
call
pusha
clc
add
pusha
movb
call
jmp
pusha
push
lea
jne
sbb
xorb
pusha
not
bswap
movzbw
mov
pusha
lea
jmp
pushf
mov
lea
je
pusha
clc
pusha
xor
cmc
call
shl
push
mov
jmp
pushf
mov
pusha
pushf
popl
movb
pushl
popl
pushl
lea
jmp
pushf
mov
call
push
inc
pusha
pushf
rol
jmp
test
jmp
call
btc
mov
pusha
jmp
inc
bsf
sub
bsr
btr
sbb
pushf
add
rcl
sub
seta
movzbw
xor
movzbw
shld
neg
bsr
rol
sub
inc
mov
pusha
jmp
movw
pusha
call
cmp
push
pusha
pusha
sub
pushf
movb
jmp
lea
jg
push
call
shr
movzbl
sbb
add
rol
sub
or
sub
movzbw
call
push
movb
mov
pushl
pushf
call
pushf
mov
pushl
pushl
popl
pushf
movb
mov
lea
jmp
add
pusha
push
pushf
mov
pushf
pushl
pushf
lea
jmp
lea
jne
neg
btc
pusha
xorb
not
mov
pushf
movb
pushl
push
lea
jmp
jmp
mov
cmc
mov
rol
movzbw
ror
mov
push
pusha
add
mov
movb
mov
pusha
lea
jmp
jmp
mov
mov
pushl
pushl
mov
movb
lea
jmp
cld
mov
not
jmp
pushl
popl
pushf
push
push
pushl
lea
jmp
pushf
popl
call
push
push
jmp
pushl
popl
mov
pusha
lea
jmp
pushf
mov
call
jmp
inc
clc
mov
cmc
stc
stc
add
pushf
pushl
pushf
lea
jmp
call
pushf
inc
bt
pushl
neg
pusha
sub
bt
mov
call
push
jmp
mov
pusha
pushf
popl
call
shr
mov
stc
add
mov
pushf
lea
jmp
call
pushl
popl
mov
pushf
mov
push
lea
jmp
pushf
mov
jmp
pusha
mov
mov
call
cmc
add
call
pushf
push
push
mov
push
push
lea
jmp
jmp
ror
clc
xor
rol
movsbw
rol
jmp
pusha
mov
rcr
xor
bswap
pushf
inc
pop
dec
movzbw
movzbw
movsbw
setae
inc
movsbw
rol
not
sar
sub
sar
and
bswap
xor
rol
neg
shl
movzbl
cmp
cmc
pushl
mov
jmp
jmp
popl
pushf
pusha
lea
jmp
pushl
popl
test
add
clc
stc
popf
push
lea
jmp
test
add
call
movw
mov
mov
lea
jmp
pusha
mov
pusha
push
mov
pushf
push
movl
lea
jmp
jmp
pushf
push
pushl
popl
pusha
lea
jmp
mov
movb
push
jmp
test
cmp
pushf
movl
call
pushf
pushf
popl
pusha
call
bsr
add
sub
dec
clc
mov
test
add
push
pushf
mov
push
pusha
lea
jmp
mov
jmp
pushf
pushl
pusha
mov
pushf
movl
movb
lea
jmp
clc
add
pushf
pushf
call
mov
movb
lea
jmp
pushf
cmc
neg
push
stc
sub
clc
test
lea
mov
sub
push
jmp
sub
jmp
jmp
add
pushf
jmp
sub
pusha
stc
pushf
push
and
jmp
stc
cmc
cmc
shl
stc
push
cmc
cmp
shr
cmc
movl
or
cmp
xor
movb
lea
jle
inc
push
call
add
pusha
mov
push
movw
lea
jmp
mov
call
push
call
pushf
popl
jmp
shrd
lahf
aas
mov
clc
pushf
sub
pushf
mov
pushf
pusha
pushf
lea
jmp
pusha
call
push
movl
call
mov
movb
lea
jmp
cmc
mov
pushf
cmc
cmp
add
pusha
movw
lea
jmp
movb
xchg
lea
jmp
xchg
aam
dec
movsbw
mov
bt
mov
rol
mov
neg
mov
push
pusha
cmc
test
add
jmp
mov
mov
movw
mov
movb
lea
jmp
mov
jmp
pusha
mov
jmp
stc
shr
call
jmp
dec
pushl
xor
cmp
call
sub
pushf
call
pushl
popl
push
lea
jmp
pushf
mov
push
mov
pushf
lea
jmp
pushf
popl
push
movb
call
mov
pusha
call
jmp
jmp
pushl
divl
pushf
jmp
stc
sub
mov
clc
clc
cmpl
push
call
cmc
rcl
pusha
mov
jmp
call
shr
cltd
std
not
mov
call
sub
jmp
mov
jmp
pushl
popl
pusha
push
pushl
lea
jmp
test
neg
mov
clc
cmc
add
pusha
pushf
lea
jmp
push
call
call
lea
jmp
pushf
pusha
call
jmp
pusha
mov
mov
pushf
pushf
lea
jmp
jmp
aaa
add
xor
mov
jmp
push
mov
pushl
popl
pusha
pushf
pushf
lea
jmp
pusha
movsbw
pushf
mov
pusha
jmp
pusha
call
pushf
movb
mov
jg
pusha
mov
mov
pushl
pushf
pushf
lea
jmp
call
call
jmp
mov
mov
mov
pusha
jmp
mov
pushf
pushf
push
pushf
lea
jmp
push
mov
pushf
push
movb
mov
pusha
movb
push
pushl
lea
jmp
pusha
jmp
sbb
aad
mov
push
call
movb
mov
pushf
mov
pushl
movb
lea
jmp
push
call
btr
cmp
adc
add
ror
and
rol
sub
bsr
mov
call
push
pusha
mov
push
lea
jmp
test
test
add
pusha
lea
jmp
pushl
popl
push
push
pushf
lea
jmp
bswap
bt
pushf
sub
movw
stc
pushl
lea
jns
ror
push
jmp
push
movl
bswap
xchg
bswap
pusha
xchg
jmp
mov
pusha
mov
jmp
setp
bswap
dec
movzbl
inc
and
pushf
neg
stc
setae
add
sub
dec
pop
and
movsbw
bswap
not
mov
bt
push
call
btc
mov
shrd
std
bsr
mov
shld
btc
pop
btr
mov
lahf
xor
shr
or
mov
xchg
stc
test
clc
mov
rcl
sbb
movb
das
pushl
popf
rdtsc
mov
mov
mov
mov
bswap
bswap
movb
mov
seta
movw
mov
push
pushf
pushl
lea
mov
movw
pushl
ret
pushf
mov
pushl
mov
call
call
setns
mov
pushf
call
inc
mov
mov
push
mov
pushf
jmp
mov
mov
movb
pusha
pushl
lea
jmp
pusha
lea
cpuid
test
bt
call
pushf
pushf
jmp
movb
mov
push
lea
jmp
jmp
test
stc
shrd
pushf
pushf
pushf
jmp
pushf
popl
jmp
pusha
mov
movb
call
