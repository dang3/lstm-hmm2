mov
xchg
outsb
insb
test
jo
or
pop
fs
js
ret
lret
push
cwtl
movsb
jno
lcall
std
mov
lods
aaa
and
stos
jb
dec
cmp
inc
jo
into
fstps
leave
sub
lcall
push
jne
adc
ljmp
es
mov
cmpsb
in
inc
lcall
or
ret
mov
pop
int
lock
cmpb
mov
lcall
leave
jne
mov
repnz
in
dec
jnp
cmp
icebp
dec
insb
or
movsl
int3
fldt
xchg
dec
jge
loope
dec
and
xchg
xchg
push
pop
mov
or
pop
dec
jmp
iret
arpl
aaa
mov
xchg
aaa
out
ljmp
ja
loope
add
mov
mov
mov
rorb
je
adc
jge
ds
stos
xor
jne
and
enter
or
push
inc
popf
mov
sub
jno
cld
xor
mov
mov
cmp
add
fwait
mov
pop
aas
out
out
dec
sbb
sub
loopnew
cmp
sahf
cmpsl
fnstsw
in
push
out
sbbl
repnz
scas
sub
pop
pushf
out
lea
movsl
mov
aad
fwait
movsb
jne
jp
scas
mov
jno
add
dec
and
lret
rorl
aaa
ds
bound
sbb
arpl
push
outsb
popa
popw
xchg
adc
xchg
fisubs
loope
cwtl
fmull
jb
stos
imul
addl
lock
mov
repnz
and
push
pop
ret
lret
cmpsb
jp
jnp
dec
sub
ja
and
pushf
lods
push
xchg
cmc
arpl
dec
aad
clc
mov
pop
cmpsb
cltd
adc
pop
mov
nop
in
aad
std
and
rcrl
jle
mov
pop
shrb
mov
lahf
in
imul
data16
dec
pop
and
bound
push
das
jmp
shlb
push
mov
xor
rcrl
jne
mov
ret
xor
or
lret
dec
lods
enter
jmp
xchg
cs
mov
cwtl
add
xor
sbb
push
dec
xor
inc
sahf
dec
scas
ljmp
add
jae
jb
jmp
inc
out
adc
jae
push
in
rcr
sbbb
dec
movsl
add
sbb
fsubs
bound
xor
mov
movhps
inc
mov
mov
xlat
xchg
adc
sbb
cmpb
outsl
and
andl
adc
mov
lahf
add
pop
repnz
adc
push
mov
xchg
nop
pop
fistl
pop
sub
fildl
shrl
adc
hlt
out
inc
mov
xor
mov
jne
fbld
ret
sahf
outsl
mov
fildll
in
inc
pushf
shrb
and
leave
and
lds
not
pop
scas
call
cltd
and
int
iret
es
sub
jne
nop
mov
icebp
xchg
mov
int
call
stos
pop
repz
test
xor
aas
push
idivl
gs
xchg
jl
insb
cmc
aas
jl
jp
mov
mov
stos
ss
andb
inc
and
pop
pushf
and
enter
cmpsb
loope
out
lret
fsts
or
dec
lahf
jg
shrl
mov
or
pop
int3
sbb
shl
frstor
mov
pop
lret
push
out
insl
dec
shrb
or
xchg
push
mov
test
mov
test
jbe
enter
inc
push
mov
and
pop
mov
cmpsb
and
push
adc
scas
add
add
inc
stc
mov
sti
jge
lock
mov
comiss
inc
dec
in
in
adc
cmovp
loopne
mov
pop
or
xor
mov
test
fucompp
dec
into
ljmp
cmp
cmp
inc
cmpsb
sti
sbb
loope
les
dec
pcmpgtw
testl
jge
jle
cmp
jp
pop
pusha
mov
arpl
adc
pop
sub
inc
enter
ljmp
or
xchg
imul
outsl
mov
mov
nop
pusha
dec
jne
mov
xor
xor
rcll
push
ret
loopne
ret
loopne
fistps
jb
cltd
cmp
adc
inc
scas
and
add
scas
push
loop
cmp
xor
sti
or
or
cwtl
xor
movsb
inc
mov
popf
shll
insb
adc
popa
xchg
int3
mov
xor
in
or
jmp
pop
in
les
std
jl
aam
adc
or
rorb
aad
jno
xor
jnp
jbe
adc
adc
cmc
cmp
sbb
mov
ds
jnp
xchg
clc
mov
icebp
outsl
addr16
lock
ret
cmp
sub
pushfw
cmp
ret
incb
mull
pop
outsl
lahf
mov
xchg
iret
out
insb
shrb
out
fs
icebp
ficoms
sbb
mov
mov
pop
or
fs
enter
inc
fdivrs
jb
sbb
sub
jp
or
int
sarl
fstl
sbb
push
fcoml
lods
cwtl
dec
mov
mov
push
fidivrs
aad
xchg
imul
inc
lock
movb
push
rolb
rol
lods
dec
shll
and
xchg
pop
pop
sbb
mov
and
mov
insl
test
mov
sub
sub
adc
or
das
add
mov
das
jmp
jns
outsl
pop
fs
xchg
adc
test
push
pop
aam
mov
aad
into
inc
addr16
mov
jo
jl
mov
pop
xchg
adcb
mov
mov
popa
push
jne
rcrl
shrb
adc
cmp
repnz
jmp
outsb
aaa
aad
dec
push
gs
out
jo
mov
adc
sti
hlt
sub
inc
xor
mov
ljmp
cld
pop
inc
bound
clc
lods
xchg
adc
mov
loope
stos
pushw
in
and
clc
in
push
cmp
repz
xchg
and
js
cwtl
add
jo
cltd
pop
leave
ljmp
subl
imul
stos
lahf
mov
leave
mov
mov
mov
jno
mov
pop
sbbl
jp
and
loope
jne
ds
pop
sub
mov
add
ds
scas
mov
fsubs
ja
and
imul
jmp
mov
adc
mov
lahf
imul
or
out
xchg
mov
sub
xor
insl
add
faddl
mov
sbb
in
shr
ljmp
or
enter
lret
dec
mov
pusha
sub
out
dec
sub
js
mov
in
sub
in
or
cmp
in
lret
adc
fists
iret
int
cld
fs
repz
dec
fdivrs
popa
and
sbb
and
es
xor
fcoml
imul
jb
dec
and
and
movsb
lret
sbb
inc
push
hlt
pushf
dec
imul
sti
out
out
faddl
nop
mov
outsl
data16
repz
cmp
dec
sub
jp
mov
lds
push
orb
inc
or
jmp
sbb
cs
pop
pshufw
push
inc
push
vcomiss
iret
xchg
push
push
int
mov
inc
cmp
or
fucomip
and
dec
insl
sarl
mov
dec
jno
cmp
fsubrs
xor
xlat
inc
xor
arpl
ljmp
pop
xchg
mov
or
pop
sub
xor
mov
sub
xchg
sub
popf
fucom
push
sub
aad
lcall
dec
mov
enter
sarl
test
test
jo
pop
pop
push
cmp
pop
test
push
mov
pop
xchg
clc
pusha
cld
push
push
test
pop
pop
push
pop
and
clc
lea
push
mov
pop
cmp
and
clc
rol
push
mov
pop
dec
inc
nop
nop
push
jge
shr
pop
push
je
pop
jle
push
and
pop
cmc
test
stc
stc
jmp
jmp
call
stc
xor
ja
jno
push
jb
nop
pop
push
jb
sar
pop
add
push
pop
sub
pop
push
and
pop
push
rol
pop
push
add
push
pop
pop
test
push
movzbl
jo
jae
push
push
pop
pop
jo
jne
sub
nop
cld
loop
pop
push
pop
or
shr
mov
xchg
jp
jae
and
je
and
cmp
push
add
push
pop
pop
push
movzbl
ror
loop
pop
push
push
dec
inc
pop
pop
push
inc
pop
and
push
je
jg
push
pop
pop
rol
clc
xor
add
push
push
push
or
pop
pop
pop
and
test
je
ror
sub
jmp
cmpxchg
ret
pop
and
out
sbb
movsl
jb
fidivrs
popf
hlt
jae
mov
out
test
in
push
push
mov
dec
sti
cmpsl
adc
lods
dec
push
add
pop
push
xor
pop
mov
sar
push
or
pop
push
shr
pop
lea
cmp
cmc
push
mov
push
xor
pop
pop
push
add
pop
jo
js
jle
test
jae
or
push
jne
rol
pop
and
push
xchg
pop
push
pop
xchg
pop
jg
ja
cmp
push
add
pop
jg
shr
cld
and
cmc
push
push
pop
add
pop
push
and
pop
jle
js
push
push
dec
pop
pop
jmp
inc
ret
mov
dec
mov
sbb
dec
jns
arpl
dec
cmp
loopne
jne
push
call
data16
xorl
sub
ret
in
in
in
push
sahf
adc
mov
aam
movsb
jo
mov
ret
mov
fcompl
jg
pop
xchg
movsl
fdivs
fstps
xor
into
outsb
mov
push
and
or
jb
sbb
rcr
cmova
push
fadds
inc
fcoms
sbb
jle
inc
xchg
jne
je
les
loop
jecxz
push
cmp
push
popa
inc
push
call
mov
pop
cmpsb
lock
mov
xchg
int3
stos
addr16
mov
lea
out
adc
sbb
lods
mov
dec
scas
inc
cmp
jns
in
adc
xchg
pop
sub
shl
cltd
or
sar
or
mov
xchg
cmp
out
leave
add
cmpsl
and
in
mov
push
fcoml
sbbl
les
jmp
push
or
pop
jne
jbe
jo
ror
jp
cmp
clc
or
lods
and
loope
jo
les
stc
jecxz
or
jmp
pop
dec
loopne
jg
lds
fiadds
push
mov
push
fcoml
fldenv
inc
clc
clc
int3
pop
cmp
pop
jg,pn
pop
add
shll
movsb
cmp
shrb
bound
imul
push
outsb
xchg
sbb
xlat
and
rcr
fstl
dec
or
adc
jecxz
cmp
test
icebp
cmp
rcll
imul
lods
mov
test
or
daa
adc
or
leave
idivl
andb
jge
xorl
jecxz
jp
mov
jg
fisttpll
test
pop
xor
bswap
push
xor
sahf
mov
adc
cmp
xor
out
or
xor
xchg
mov
mov
ret
sub
push
scas
rorl
es
push
and
loope
insl
hlt
sbb
leave
or
xchg
fidivl
leave
cltd
mov
and
cmp
gs
ret
pop
add
in
int
jae
int
jno
add
or
lods
push
int
test
mov
and
mov
jb
dec
dec
cmp
push
and
xor
leave
aaa
mov
test
out
jp
mov
dec
cs
and
dec
neg
insb
cmp
jl
inc
pop
and
jle
and
hlt
std
xlat
pop
data16
xor
pop
stc
fs
aas
jbe
cs
inc
leave
inc
into
add
sub
jo
mov
add
repnz
pop
out
jne
cmp
outsl
test
jge
push
jae
pushf
dec
ret
mov
mov
test
jl
jns
andb
push
jno
add
stos
pop
mov
sub
sti
sub
mulb
rorl
icebp
stos
xchg
push
repz
imul
push
insl
xchg
xchg
daa
cmc
cmpsb
rolb
int3
pop
add
popa
lods
pop
cmp
sarb
loop
cmpl
xor
test
jbe
call
lds
addr16
aam
xchg
dec
mov
or
mov
jno
mov
push
push
mov
sahf
or
clc
and
daa
ljmp
lret
pop
in
sahf
mov
or
push
mov
dec
xor
fbld
cmp
pop
xor
bound
test
mov
xor
test
sbb
adcb
mov
mov
cmpsb
movsb
popf
nop
pop
dec
and
or
ficoml
or
daa
js
cs
fimull
in
adc
stc
sub
stc
mov
aaa
hlt
sbb
xchg
mov
lods
movsb
cmp
in
addb
adc
aad
jmp
test
imul
jo
push
inc
sub
jns
push
sti
jb
jb
push
in
adc
jge
jge
sub
lcall
gs
adc
test
jp
fcmovnu
and
adc
icebp
push
sub
and
cltd
jp
nop
jp
and
sub
push
mov
popf
xchg
scas
cmpsb
lret
mov
aad
adc
xchg
jne
pusha
pop
add
cltd
push
mov
adcl
mov
ljmp
mov
adc
cwtl
rcrl
jno
std
int3
loopne
mov
xchg
push
cli
aam
or
fsubrl
mov
scas
rorl
sbb
sbb
gs
dec
mov
push
shrb
adc
fwait
repnz
lock
sbb
out
mov
pusha
ja
in
jns
mov
add
dec
hlt
push
sbb
outsb
pusha
mulb
leave
sbb
lret
xchg
dec
cwtl
inc
lret
jo
ss
jecxz
sub
jbe
or
xor
dec
shr
loop
pop
mov
push
dec
dec
fdivs
loopne
dec
cmp
mov
add
cli
out
dec
sti
jmp
adc
push
jo
int3
stc
out
addb
addr16
xor
repnz
ja
or
fs
jb
lcall
dec
cmp
mov
fsqrt
into
mov
cmp
in
dec
dec
jae
inc
mov
inc
mov
mov
xchg
mov
mov
stos
out
mov
jp
jge
xchg
nop
fstpt
and
mov
int3
cmp
xchg
enter
push
and
lods
aad
sub
adc
dec
insb
aas
ss
mov
repnz
outsb
inc
sbb
adc
incl
sti
or
mov
dec
jp
xor
in
mov
inc
insb
ss
imul
xchg
iret
out
fwait
add
ficoml
inc
filds
testb
test
test
push
pop
fstl
cli
mov
adc
in
jns
sub
lret
push
arpl
das
enter
jg
add
sub
xor
fisttpll
out
enter
mov
inc
add
lret
jns
lret
xchg
sbb
xlat
inc
inc
add
pusha
out
ss
cmp
enter
icebp
pmulhuw
mov
test
movsb
scas
shr
or
xor
sti
and
jp
pop
sub
ds
hlt
shlb
icebp
fs
fs
mov
stos
sti
jae
insb
iret
or
xor
push
lods
push
shrb
adc
lcall
xchg
bound
lea
mov
hlt
aad
or
push
shlb
xchg
push
push
pop
push
int
mov
xacquire
add
outsl
lret
dec
mov
pop
mov
sub
je
aad
jno
scas
xchg
ret
push
ljmp
push
sbb
test
dec
jbe
xor
mov
rcrl
lret
mov
cmc
add
lahf
shll
cmp
xor
orl
cmp
imul
call
dec
xchg
push
imul
fidivs
hlt
fs
pop
rolb
mov
in
pop
das
sub
mov
sbb
cmp
xlat
ret
add
and
mov
or
icebp
mov
test
cld
pop
in
cs
mov
or
js
mov
pop
or
in
stc
hlt
pop
shl
inc
mov
push
adc
cmp
fcmovu
shlb
and
dec
lods
pusha
dec
inc
ss
jnp
or
movsb
adcl
ficoms
orps
xchg
pop
inc
xor
data16
sub
mov
ret
movhlps
sbb
pop
mov
sub
pop
fsubrs
sbbb
out
imul
sarb
sub
mov
dec
out
ds
and
je
into
fs
sub
pop
mov
stos
jo
loopne
repz
bound
jle
cmpsb
add
add
in
mov
inc
cmp
mov
push
mov
fwait
sub
lahf
dec
and
in
mov
mov
loopne
rcrl
cmp
add
xchg
or
sti
jl
inc
rcrl
cmp
dec
cmp
stos
adc
ja
inc
aam
std
es
ficoml
sbb
data16
loopne
jl
inc
lret
aaa
inc
inc
cmc
sub
rcll
sbb
sahf
add
clts
jbe
fbstp
lods
adc
call
pushf
cmpsl
sti
sbbb
xchg
in
cmpsl
repnz
mov
shrl
xchg
orl
cmp
pop
sbb
dec
inc
into
int3
std
xchg
aad
test
ja
ss
arpl
sub
mov
pop
lret
sbb
add
xchg
out
loop
ret
cwtl
icebp
dec
xlat
js
pop
mov
shrb
mull
repz
dec
mov
push
mov
and
adc
gs
xchg
cli
dec
inc
jle
dec
sahf
clc
sub
imul
mov
mov
xor
lret
aad
jbe
orb
in
ss
cld
dec
daa
int3
iret
pop
fidivrl
fs
mov
mov
shlb
and
push
sbb
add
cltd
nop
sub
call
cmp
int3
lock
dec
in
jmp
ror
push
adc
test
in
mov
insl
pop
arpl
inc
jmp
xor
push
sbb
adc
dec
fistpll
and
jg
test
aad
ljmp
cmp
xor
sub
inc
mov
push
cmp
or
movsb
dec
inc
and
iret
dec
cmc
xor
sub
nop
pop
mov
xor
mov
lret
mov
cmp
fimull
lret
out
into
scas
push
xor
lahf
inc
repz
lret
hlt
xchg
or
mov
mov
xor
dec
lahf
mov
push
and
mov
and
lock
pop
scas
mov
pop
cmpsb
js
decl
daa
rcrl
call
out
xor
or
xchg
pop
pushf
loopne
sub
sbb
ffreep
or
xchg
es
cmp
popa
fcmovnb
hlt
cli
aam
mov
mov
jne
and
jmp
orl
pop
std
xor
mov
mov
cmp
es
mov
sbb
mov
stos
fmuls
or
imul
test
sbb
fwait
jb
shrl
subb
cwtl
leave
mov
leave
or
in
adc
std
inc
or
add
adc
int3
in
mov
cmp
jns
sub
xchg
imull
bound
xchg
and
add
test
cmp
lock
shlb
in
push
lea
aaa
sbb
mov
xor
pushf
cmp
pop
sti
fidivrs
adc
fcmovb
mov
xorl
shll
mov
rolb
loopne
lods
testb
inc
jno
sub
jbe
inc
outsb
mov
mov
and
and
pop
jo
mov
push
cmp
xchg
fbstp
jne
loope
add
push
pop
mov
or
vmovlpd
imul
push
mov
adc
mov
push
sbb
cmp
les
scas
mov
ds
push
and
adc
xor
dec
daa
sbb
cmp
cmp
sahf
jg
inc
add
push
and
repz
sbb
mov
out
imul
fstps
addr16
jbe
in
fidivl
xchg
insl
push
push
test
addl
or
mov
stos
cmpl
xor
adc
js,pt
aaa
adc
fmulp
imul
cmpsl
shlb
mov
dec
in
dec
test
or
data16
aas
jle
mov
scas
adc
adc
fistl
fldl
shll
fisttpl
fwait
sbb
and
mov
sub
add
aad
jae
sbb
aad
jl
into
lock
shlb
or
shll
inc
fcmovb
mov
jecxz
cwtl
pop
or
dec
imul
fidivl
nop
out
addr16
stos
mov
xor
sub
stos
jns
cwtl
out
addr16
adc
mov
ja
mov
push
adc
sbb
js
cwtl
dec
mov
mov
notl
in
repz
inc
cs
mov
mov
adc
adc
add
jle
addr16
test
jle
das
pushf
push
test
or
loopne
ja
xchg
inc
aad
in
mov
incb
or
shll
inc
sub
pop
cmp
adc
out
mov
test
fildll
fcoms
aaa
push
fs
test
daa
add
ret
sbb
test
mov
inc
inc
cmc
cmp
cs
or
add
fwait
push
das
pop
inc
and
jecxz
and
movsl
scas
mov
das
or
jl
push
test
outsb
imul
or
fsqrt
cmc
pop
leave
xor
jl
aam
ja
cmp
insb
punpcklbw
imul
or
aad
into
fwait
std
sahf
lea
sti
adc
and
repnz
jae
pop
pushf
jo
add
movsl
pop
xchg
sub
cs
inc
dec
xlat
std
lret
pop
outsb
repnz
jmp
idivb
jl
and
push
adc
loop
mov
loop
ja
fisubrs
jns
ljmp
and
rcll
repz
mull
jbe
dec
add
xchg
dec
jae
insb
rcr
adc
push
xchg
mov
stc
ss
jo
and
cmp
fst
add
pop
out
repnz
cmpsb
push
xchg
mov
or
xor
cmp
ja
push
mov
lods
push
into
dec
add
jecxz
pop
dec
mov
jge
pop
rolb
push
cmp
jge
dec
fld
stc
fildll
adc
add
mov
fisubrl
and
add
mov
or
and
shrb
mov
int3
je
fcomps
sbbl
aaa
in
push
cmpsb
insl
mov
in
testl
xchg
test
or
sbbl
fsubs
js
pop
push
mov
sub
dec
inc
pop
mov
cmpsl
idivb
mov
cmp
push
xlat
mov
outsl
xchg
mov
adc
dec
daa
push
lret
and
push
mov
add
cmp
lahf
mov
mov
lahf
int
shl
pop
adc
sti
daa
idiv
in
test
sbb
push
lcall
sub
sub
aaa
cwtl
adc
dec
imul
mull
or
lea
out
sbbl
inc
test
stos
mov
add
cltd
lcall
inc
insb
mov
inc
and
int3
std
cmp
inc
lret
inc
cmpsb
fldlg2
aad
rorb
mov
mov
pop
dec
push
dec
setnp
enter
push
mov
ss
cmp
in
mov
out
lds
out
leave
cmpsb
push
pushf
orb
ds
push
jecxz
xor
jo
xchg
inc
pushf
je
loop
aaa
jg
add
sub
std
fisubrl
sti
jbe
bound
int3
iret
push
stos
lret
jns
les
ds
jecxz
or
inc
push
xchg
add
xchg
adc
and
cwtl
and
cmc
jmp
mov
add
push
enter
mov
rcll
cmp
movsb
out
mov
mov
sbb
notb
cmc
insl
loope
ret
int3
add
scas
xor
into
addb
divl
cwtl
xlat
dec
lret
pusha
mov
adc
add
xchg
push
insb
scas
push
scas
fndisi(8087
dec
add
sub
fistps
sbb
scas
fisttps
cmp
push
aaa
icebp
dec
ret
push
movsl
dec
xchg
cmp
test
gs
shrl
imul
pusha
inc
lahf
clc
mov
push
add
add
outsl
and
dec
and
cmpsb
call
add
push
adc
lahf
add
je
inc
xchg
stos
movsb
rcl
jae
push
sbb
mov
push
xchg
inc
adc
jno
mov
rcrl
dec
cmp
jnp
inc
xor
jb
test
test
mov
inc
in
push
es
inc
shlb
push
sub
cmpl
xlat
sbb
rorb
stc
xchg
data16
jae
sbb
fbld
inc
in
ror
test
mov
adc
es
xor
add
cmp
push
cmp
xchg
and
cmp
mov
clc
mov
es
pusha
ss
les
jmp
xchg
inc
test
cmp
fisubrs
stos
adc
cwtl
popf
leave
push
sbbb
cmp
aaa
or
lds
and
es
push
xchg
xor
jb
outsl
leave
add
and
mov
xlat
or
jae
or
fldt
cmp
shlb
mov
jle
push
push
cs
arpl
mov
lods
sarb
xor
mov
push
pop
mov
ds
out
sbb
pop
ret
fidivrs
ficoml
icebp
loope
fnstsw
push
inc
ja
jl
sub
inc
dec
xchg
arpl
int
xchg
cs
lods
xchg
ds
andl
les
mov
fsubl
fisttps
std
fsubrs
mov
cmp
cmpsb
ds
icebp
and
rsm
jmp
test
in
adc
ja
fs
mov
lods
hlt
insb
test
dec
push
cmc
push
adc
mov
mov
jnp
jg
lock
or
inc
adc
iret
lock
jae
push
cwtl
leave
clc
gs
fbstp
sbb
mov
mov
xor
lock
divb
mov
xchg
push
enter
nop
sahf
jnp
mov
movsb
icebp
lods
stos
mov
inc
popa
add
push
pop
inc
mov
sub
cs
mov
fadds
call
mov
in
mov
fldcw
jp
imul
cli
shr
inc
loop
xchg
int3
and
jl
lods
pop
ret
ja
pop
and
js
les
fcom
sahf
lock
sub
lods
jecxz
inc
movsl
insl
sbbb
dec
out
mov
mov
jb
mov
xor
pop
adc
outsb
xorb
pop
lahf
jae
inc
imul
push
bound
lock
push
mov
mov
mov
jb
xchg
add
xlat
cmp
cmp
inc
xchg
cmp
push
ss
aam
sub
rol
xchg
push
and
adc
push
cmpsl
cli
push
rcrl
jb
cmp
adc
or
or
adc
enter
stos
dec
std
stos
xchg
or
ja
aas
scas
lds
daa
cmp
out
ljmp
mov
mov
xchg
in
cltd
fcoml
out
ss
inc
sbbl
pusha
mov
dec
xor
jle
add
adc
sahf
dec
cmp
sub
jmp
cmp
jno
and
fcoms
insl
push
mov
out
cmp
out
call
gs
dec
int3
in
sbb
or
mov
das
fnstcw
shl
adc
cs
scas
xchg
out
ja
pcmpgtw
dec
js
imulb
mov
inc
push
pop
test
inc
jl,pt
or
cmp
loop
in
ret
mov
push
aad
mov
push
xor
aas
aas
pop
popa
movsl
sbb
fsubl
stc
out
stc
dec
jbe
add
add
shlb
movsl
adc
mov
adc
adc
push
shlb
and
scas
xor
cs
mov
adc
inc
pushl
in
adc
sahf
sbb
fcomi
stos
mov
cmpsb
and
dec
aas
and
fsubrl
mov
mov
push
int
xchg
vmread
jg
push
mov
mov
inc
pusha
test
arpl
mov
imul
repz
jp
in
jecxz
jmp
pop
aas
out
loop
es
sub
sbb
and
sbb
mov
cli
inc
bound
dec
fsubr
stos
out
xorb
int
and
pushf
std
cmp
inc
xchg
out
mov
mov
jb
jo
adcl
sub
inc
inc
or
ja
inc
adc
mov
pusha
xchg
mov
inc
mov
in
fs
sbb
std
in
or
je
dec
xchg
test
xlat
push
aaa
js
movsl
aam
fwait
dec
dec
scas
mov
ror
into
dec
scas
or
ret
ljmp
mov
jmp
push
js
mov
cmp
orl
out
sub
stos
lret
mov
adc
push
shlb
das
insl
pop
jbe
sub
out
fbstp
inc
add
ret
das
mov
sbb
jge
xlat
lcall
out
js
inc
dec
lcall
cmpsb
dec
test
mov
lret
lock
push
shl
imul
into
outsl
or
popa
sbb
add
dec
jno
popf
push
jns
jb
daa
jl
leave
xlat
push
or
cmp
lods
negl
call
cli
inc
leave
and
mov
xchg
push
and
rclb
mov
mov
sbb
push
inc
ficomps
int3
lods
push
into
xor
leave
mov
iret
movsl
cmpsl
xchg
mov
cwtl
shl
sub
repnz
jbe
add
push
and
scas
jge
fidivl
frstor
mov
cmc
cmpsb
pop
sbb
adc
sti
call
rcr
add
push
or
clc
cmp
sahf
jne
stos
mov
mov
adc
dec
lds
push
jnp
dec
add
jecxz
js
mov
mov
cmp
pop
or
mov
or
jb
xchg
mov
xor
or
ja
movsl
adc
mov
push
sub
pop
test
ret
divl
cwtl
jp
lret
push
fwait
push
ret
dec
xor
mov
lock
sub
sbb
push
notb
iret
stc
xchg
arpl
jb
pop
pop
mov
mov
push
cmpsb
je
repz
fs
lea
push
addr16
jmp
test
sub
fdivs
repz
outsb
out
mov
lahf
out
mov
scas
clc
or
lods
lods
scas
ss
rolb
clc
add
ljmp
int3
in
adc
xchg
mov
lret
in
movsl
ja
outsl
inc
mov
inc
pop
enter
loope
inc
das
jb
mov
jl
loope
sahf
mov
push
dec
inc
dec
jl
insl
mov
les
jbe
push
rol
inc
push
pop
aaa
jge
mov
into
out
loopne
or
cmp
mov
push
scas
cmp
cwtl
inc
ja
push
aaa
dec
push
push
dec
shrb
sti
fcmovne
sbb
iret
pop
pop
dec
sar
aad
stos
shll
cwtl
clc
aas
rorb
in
xchg
xor
adc
mov
clc
and
icebp
xchg
pop
outsb
cwtl
pop
nop
jbe
xchg
adc
inc
ljmp
lretw
push
or
push
lret
sbb
push
mov
or
jl
sub
mov
pusha
mov
idivb
repz
sbb
adc
movsl
jg
sbb
outsb
jae
push
or
pop
mov
jne
les
loop
stos
orl
inc
pop
in
add
in
cmp
stc
inc
jp
jp
mov
shl
adc
mov
mov
fcoms
mov
into
movsb
and
jmp
mov
lahf
fisubl
push
popa
ja
mov
dec
mov
ds
push
rep
test
xchg
mov
and
sub
rcrl
dec
addb
jb
call
pop
es
clc
mov
or
add
loope
lcall
cmp
jmp
sbb
sbb
fsubrl
jne
mov
and
sbb
loop
xor
jmp
mov
pop
in
sub
mov
js
bound
rorb
cli
pop
pop
sbb
mov
aam
iret
imul
jg
add
and
adc
and
push
rcrl
pusha
popa
fildl
fwait
movsb
cmp
sbb
sub
adc
cwtl
adc
add
push
repz
mov
pusha
push
adc
int
push
je
mov
sbb
xor
inc
ret
mov
push
cmpsl
or
outsb
incb
xchg
mov
fnstcw
xlat
cli
cld
daa
pop
mov
loopne
popa
fcmovnb
cwtl
mov
outsb
sub
ret
shlb
xlat
cmpsl
xchg
hlt
or
jns
mov
lods
mov
in
test
or
mov
dec
pop
xchg
or
add
or
out
add
gs
popa
dec
xlat
cmp
daa
addb
out
fadds
fiaddl
into
mov
sub
jo
adc
gs
mov
pop
iret
jae
pop
or
orl
inc
insb
outsb
xchg
sbb
movsb
jge
inc
adc
and
sub
popf
test
push
popl
int
flds
mov
push
test
inc
mov
mov
ljmp
aam
lods
pop
rcrl
or
fmuls
and
cmp
popf
cmp
jmp
xchg
clc
dec
or
rorb
xorb
lea
je
cmpsl
fdivs
or
inc
lea
and
fs
outsl
cmp
pop
cmp
out
push
mov
dec
aas
xor
cs
pop
adc
mov
mov
loope
mov
xchg
pusha
xchg
pop
mov
lret
sbb
mov
mov
sub
movsl
sarb
sub
cwtl
adc
mov
bndldx
adc
push
sub
xchg
adc
mov
mov
jae
cmp
arpl
adc
mov
mov
icebp
xchg
or
jb
pop
cmp
hlt
insb
lds
push
rcrl
add
xor
sbb
dec
jo
cltd
icebp
movsl
notw
enter
aam
mov
and
mov
aaa
outsb
or
xchg
lods
fisubrs
xchg
xchg
repnz
pop
pusha
push
xchg
and
sbb
mov
push
sbb
test
xor
bound
xchg
and
dec
mov
test
sub
pop
iret
js
loopne
icebp
fucomi
inc
xchg
xlat
in
stos
and
fildl
xchg
sbb
ret
adc
xchg
inc
insl
jno
sti
pop
xorb
push
mov
negb
or
sarl
fs
repnz
xor
xchg
data16
cmp
mov
cmp
mov
cltd
xchg
in
lock
and
ret
insb
sub
je
into
sub
inc
popf
cmpsb
lods
jl
push
fs
sbb
push
daa
push
sub
repnz
and
xlat
mov
les
mulb
jae
add
je
fidivrl
icebp
push
lock
dec
pop
adc
jle
int
in
push
sbb
jbe
dec
or
jle
inc
jge
aad
and
or
out
inc
arpl
into
jl
add
jb
jmp
loope
mov
int3
mov
xchg
sti
mov
into
adc
cmp
and
outsb
ds
jae
stc
repz
jae
shl
push
xor
xchg
pop
pushf
in
test
xchg
in
inc
sub
rcr
sbb
cwtl
fsubl
lock
lods
adc
push
push
insl
in
cmpsb
push
fidivs
mov
aam
nop
xlat
add
mov
stc
rsm
pusha
mov
incl
insb
cmc
ret
aas
push
pop
dec
mov
pusha
dec
dec
or
push
int3
jbe
cmpl
outsb
popa
decl
enter
add
add
mov
stc
test
fstps
ja
xchg
imul
lret
and
adc
adc
enter
sti
imul
pop
sub
and
mov
shl
mul
cs
adc
dec
iret
mov
mov
test
lods
cmp
dec
mov
inc
out
test
insb
add
nop
fisubl
jne
je
push
clc
aad
sub
stos
xor
cmpsl
pop
mov
mov
mov
mov
or
cwtl
pop
fcmovnu
enter
mov
xchg
xor
pop
dec
repnz
mov
out
ret
iret
mov
jle
pop
std
adc
in
imul
jo
leave
jb
out
or
adc
dec
jmp
fs
xlat
popa
imul
add
outsl
mov
jge
pop
pop
ret
adc
xchg
int
sbb
es
movb
mov
das
mov
jmp
imul
test
aam
xchg
cmp
ss
inc
mov
mov
jae
cwtl
lahf
in
in
fiadds
add
jnp
push
push
loope
movsb
push
test
ja
xchg
or
fdivrs
lahf
out
xor
push
mov
lock
repz
adc
cs
loop
dec
ss
sbb
in
mov
sbb
gs
inc
fldl
insb
js
mov
xchg
push
pusha
rolb
jge
jb
mov
ret
or
outsl
cwtl
nop
scas
sarb
in
fmull
frstor
out
xchg
dec
xor
gs
dec
sbb
mov
and
push
xor
fistpl
inc
data16
xor
hlt
js
in
call
nop
inc
fcmovbe
in
xchg
mov
out
jmp
add
mov
mov
or
jb
cmp
add
jle
hlt
mov
cmp
push
pop
push
mov
mov
ss
gs
pusha
sbb
inc
loopne
and
jae
push
xchg
rorl
add
sub
sub
outsl
push
push
jne
xchg
pop
movsb
mov
mov
push
mov
sub
pop
add
sar
addr16
pop
xchg
enter
xor
xchg
cmp
xchg
push
fistps
fiadds
lods
loop
cmp
cmp
out
inc
mov
adc
or
lea
pop
push
xor
fiaddl
sub
xchg
std
leave
stos
cmc
sbb
pop
inc
add
and
popa
rolb
sbb
lcall
scas
ffreep
hlt
js
fcoml
fidivrs
fwait
test
xor
mov
ficomps
inc
gs
cmp
sub
push
insb
adcb
loope
xchg
lds
pop
or
jg
or
call
call
daa
dec
sti
insb
fldenv
inc
xor
xor
mov
es
test
add
repnz
stos
mov
pop
fidivs
jbe
pop
xchg
mov
bound
pop
in
pop
add
cmpsl
pop
js
push
aad
lock
dec
int3
pushf
out
cwtl
push
pushf
int3
jp
fistpl
jne
das
scas
jb
ja
adc
dec
add
bound
lret
mov
pop
mov
jns
arpl
push
pop
stos
push
add
in
cmp
fs
push
lock
stos
pop
adc
xchg
xor
lods
sbb
inc
mov
sbb
xor
aaa
xchg
jne
shld
std
push
xchg
xchg
imul
aad
xor
push
lahf
xchg
mov
imul
xchg
int
call
sub
cs
jge
jl
sbb
leave
mov
iret
add
pop
adc
xor
pop
and
jecxz
loopne
stos
or
stc
add
rorl
ja
in
push
dec
inc
imul
jl
xorl
cmpsl
pop
dec
add
imulb
dec
push
or
xchg
std
sub
sti
les
pop
jle
fists
xor
mov
testl
fcoml
aad
shr
dec
mov
pop
add
xlat
pop
xchg
xlat
ljmp
mov
mov
cmp
mov
mov
insl
mov
clc
cmpsb
push
or
fwait
icebp
and
out
push
adc
lea
mov
cltd
adc
aas
gs
lahf
mov
rcrb
jecxz
addr16
sti
movl
push
push
loope
dec
and
lret
xlat
pop
or
cli
mov
negb
lds
enter
out
mov
cmpsb
pop
adc
sub
bound
add
xor
arpl
mov
flds
sub
and
pop
mov
insb
push
fisubs
adc
rolb
dec
push
mov
repnz
mov
loope
dec
out
popa
dec
inc
sub
and
adc
fwait
add
dec
imul
dec
inc
mov
xchg
daa
ss
shll
cmp
xchg
ret
or
add
cmpsl
icebp
popf
adc
lret
add
mov
jbe
dec
scas
les
or
jle
add
add
push
mov
lock
jecxz
xchg
cld
fnstenv
pop
push
push
push
mov
dec
jnp
push
lds
aad
add
sahf
insb
je
lds
mov
addr16
stos
pop
pop
imul
pop
in
in
jb
adc
inc
pop
and
sti
dec
mov
push
jae
dec
imul
mov
and
pop
adc
push
pop
pop
aam
cmc
jge
sbb
inc
mov
lret
fnsave
das
xchg
push
xlat
pushf
lret
pop
ret
add
pop
jp
inc
cmp
addr16
lods
fidivs
cwtl
xor
lret
inc
mov
bound
jnp
push
mov
xchg
popf
std
in
iret
loopne
mov
scas
cmp
sti
pop
adc
sub
mov
les
push
fcmovnu
xor
jbe
inc
aad
xor
in
popf
xchg
xor
mov
mov
dec
and
pop
or
cmp
pushf
cwtl
cmpsl
shrb
inc
icebp
nop
mov
sub
xlat
and
xor
enter
popa
outsb
sub
std
xor
xchg
addr16
lea
das
xor
sub
or
dec
pop
cltd
popf
add
and
lret
iret
push
mov
cmp
xor
xchg
lcall
and
mov
cmc
lea
mov
imul
in
test
shl
cs
in
pusha
aaa
rolb
mov
inc
jo
or
xorl
inc
je
in
push
jl
mov
and
xor
repz
test
fxam
add
out
nop
pop
loopne
cltd
ret
xchg
pop
inc
pop
add
test
xorl
mov
into
fistpl
fldl2e
in
or
sahf
xchg
test
or
xlat
outsb
incl
jno
push
mov
xchg
pop
xor
mov
push
dec
in
in
dec
add
jns
fsubl
jg
popa
cld
add
cltd
cmp
jecxz
mov
movsl
arpl
enter
mov
xor
sub
das
dec
addr16
mov
bound
je
cli
int
push
sti
push
jnp
cmc
add
cmpsb
mov
jns
sbb
in
je
lock
dec
icebp
mov
fldl
mov
inc
notb
hlt
mov
add
or
nop
out
xchg
cwtl
mov
push
scas
push
add
add
in
cwtl
sar
pusha
fs
flds
scas
test
in
xor
xchg
iret
out
pop
test
push
jo
ljmp
sub
aam
push
sbbl
xor
cmc
adc
add
inc
rclb
cmpb
add
pop
xchg
fsubrl
loop
jmp
xlat
mov
jg
std
aam
notb
rorb
jl
jmp
into
mov
and
dec
mul
mov
jns
adc
cmpsb
sbb
enter
loop
mov
int
mov
lahf
mov
xor
inc
icebp
aad
or
enter
aaa
ja
inc
fistpll
dec
push
outsb
sahf
enter
cmpb
leave
loopne
mov
pop
addr16
adc
xor
lret
mov
mov
je
dec
int
imul
jb
lcall
gs
insb
xor
add
je
ret
loopne
inc
add
sbb
fucomp
push
dec
int3
pop
adc
in
aad
mov
lock
xchg
faddl
mov
adc
jae
sbb
lds
mov
je
inc
jns
lret
movb
les
lret
in
xor
mov
lods
repnz
sbb
lcall
nop
sub
pop
scas
sahf
addr16
test
xchg
movsb
mov
pop
mov
popf
cmp
cmp
push
inc
fwait
ja
aas
sbb
push
mov
ret
inc
outsl
ja
mov
add
add
shr
pop
loopne
pop
mov
das
pop
ficoms
jne
lods
fdivs
xor
mov
inc
mov
ficomps
repz
fidivrl
xchg
cmp
lret
pop
mov
push
aad
orl
mov
xchg
cmp
jnp
xchg
stc
dec
out
aam
shrb
stos
cmp
jle
repz
movsw
sub
and
add
push
jle
adc
cltd
stos
adc
scas
cld
in
sub
es
jp
clc
cmp
xchg
or
jnp
pop
fmuls
add
aad
mov
popf
jo
jp
imul
cmpsb
fcomi
dec
das
cmp
les
out
xor
fidivrl
xchg
jnp
adc
mov
xchg
mov
dec
out
int3
jo
xchg
lds
cltd
imul
shlb
aaa
cmp
add
sbb
in
lock
lods
imul
mov
into
scas
or
outsl
add
dec
out
jo
push
outsb
mov
testb
jmp
push
jb
mov
push
or
inc
ficomps
adc
jae
lods
push
jecxz
mov
sub
push
clc
jg
mov
dec
push
mov
adc
cltd
sbb
dec
roll
mov
inc
add
enter
dec
pop
and
lret
fwait
jbe
call
test
jle
cmpsl
or
nopl
ljmp
sarl
fldenv
xchg
fldcw
mov
insb
push
lcall
jp
xchg
ljmp
inc
jno
int
clc
xor
xlat
repnz
dec
pop
jo,pn
xchg
jno
adc
outsl
push
hlt
sub
dec
movsl
adc
pop
mov
mov
add
jecxz
cmpsl
daa
pusha
sbb
push
fld
mov
ret
jp
pop
push
lret
push
add
fs
mov
daa
and
pop
scas
sub
je
sbb
fabs
fimull
xchg
and
jnp
pop
sbb
pusha
out
into
cmp
sub
sti
push
inc
lods
stos
jp
inc
or
dec
push
mov
sahf
sbb
test
aad
ss
pop
mov
sti
movsl
nop
xchg
xchg
and
mov
dec
xchg
in
xchg
daa
das
push
mov
loope
add
dec
mov
cwtl
test
scas
xchg
addr16
or
adc
xor
jmp
movsl
shlb
stos
cmp
and
push
jg
mov
aad
repnz
outsb
push
cmpl
cmc
icebp
or
mov
or
test
lea
dec
or
test
mov
jo
push
addb
jge
jns
les
iret
in
inc
int3
and
out
cmovns
xchg
pop
mov
fcom
mov
mov
or
adc
lcall
mov
pop
lahf
adc
push
mov
dec
cmp
xor
inc
addr16
inc
pop
cmpsl
fimull
cmpsb
loop
lods
ror
xchg
out
nop
adc
insl
pushf
test
insl
mov
shll
scas
add
sub
imul
rorb
out
gs
faddp
hlt
xor
dec
je
dec
nop
pop
ret
test
push
fistpll
int
cmp
sbb
lret
xchg
sbb
mov
loop
gs
stos
sbb
in
xchg
testl
dec
jmp
lea
dec
push
dec
dec
js
das
movsb
stos
sahf
je
adc
cmc
jne
fcoms
or
int3
sub
or
repnz
jle
add
mov
les
adc
jno
inc
jmp
lret
les
cmp
repnz
dec
sub
das
bound
leave
pop
ss
pop
icebp
rcrl
bound
pop
cmp
xor
sbb
cs
inc
mov
add
cmp
out
repz
mov
popa
xchg
and
dec
pop
and
test
pop
mov
scas
dec
cmpsb
ja
in
dec
fdiv
sbb
xor
push
leave
sub
push
aas
dec
push
out
popa
xchg
outsb
movsb
rcr
jle
out
xor
cli
leave
adc
sbb
imul
hlt
loopne
mov
xchg
imul
push
arpl
mov
lds
in
jge
or
xchg
cli
repnz
pushf
push
jo
pop
mov
scas
mov
xlat
cltd
in
xchg
dec
jl
mov
cmpb
aas
inc
xlat
popf
ja
test
pushf
xchg
loope
leave
jo
sti
je
pushf
cli
cmp
and
imulb
sahf
or
jp
add
push
sbb
mov
push
lds
push
add
adc
scas
mov
loope
adc
dec
jae
mov
and
mov
jne
jg
jle
xor
mov
jnp
push
outsl
sbb
mov
sbb
outsl
dec
mov
add
jp
adc
es
int
pushl
xchg
gs
sbb
mov
ds
clc
lods
scas
shlb
cmp
rolb
imul
and
xlat
in
dec
mov
cmpsl
push
data16
rorl
xor
mov
out
aam
xor
popf
mov
repz
push
cld
mov
push
ljmp
pop
dec
in
add
idivb
mov
jne
shl
cmp
add
cmp
dec
xor
inc
cmp
push
or
shrb
xchg
cmp
icebp
cltd
mov
or
stos
push
lds
or
ljmp
mov
jge
sysexit
fdivp
jg
rolb
adc
sbb
call
cmpsb
lret
ret
popf
pop
and
icebp
xchg
test
and
insb
test
adc
aam
ljmp
mov
pop
push
ficoms
sbb
pop
mov
push
push
lcall
outsb
dec
pop
sub
pop
cmp
cmc
push
xchg
or
int3
or
icebp
stos
pushl
xor
or
ficompl
inc
aam
in
jge
jl
adc
nop
cmc
adc
sti
pop
mov
sbb
push
out
dec
in
dec
xor
es
loopne
jae
or
mov
icebp
loop
hlt
cmpsl
repz
mov
dec
jbe
sbb
push
hlt
das
lods
pusha
mov
dec
cmp
je
movsl
shrl
jg
aad
loop
add
sbb
int3
stos
sbb
lods
rolb
popa
or
add
cld
adcb
xchg
cmp
gs
pushf
lcall
fistps
pusha
rolb
mov
jo
mov
push
sub
xor
ljmp
cli
xor
dec
cwtl
test
inc
cmc
dec
or
je
mov
fisttpll
rcrl
fcmovnbe
sbb
sub
les
sar
adc
xor
outsl
mov
sub
xor
into
cmp
jle
lds
iret
push
loopne
inc
inc
push
push
jnp
xor
rcrl
iret
pop
mov
mov
jecxz
xchg
int3
cmp
pop
xor
adc
popf
js
xor
mov
adc
loopne
pop
ds
call
mov
pushf
pushf
add
out
in
cmp
lods
xlat
adc
and
dec
neg
aaa
sti
inc
mov
aam
pop
xchg
ja
out
daa
push
outsb
sub
jmp
xchg
or
int
xchg
add
mov
and
lock
mov
inc
cmp
in
jne
iret
dec
push
sti
push
jge
out
repnz
xor
mov
cmp
enter
lcall
out
repz
sbb
repnz
lea
neg
xor
jno
out
pop
pusha
shrb
into
les
lahf
cli
lret
xchg
loop
ds
inc
leave
add
jo
addr16
mov
int
or
pop
jecxz
or
or
jg
sub
rorb
jge
lds
data16
fwait
jne
imul
dec
push
dec
daa
data16
sub
sub
push
jnp
mov
cld
shlb
les
lods
and
inc
jmp
sub
pop
xchg
je
add
clc
cmpsb
xchg
in
sub
add
dec
sub
adc
aam
pop
jl
adcb
repnz
pop
inc
lret
sbb
repnz
or
out
je
stos
sahf
push
imul
pop
jae
sbb
imull
stc
test
inc
arpl
xchg
mov
mov
int3
notl
rep
pop
scas
lret
sub
push
sbb
add
pop
pushf
inc
movsl
or
push
jp
jnp
push
in
push
fildll
jle
test
mov
sbb
mov
jnp
fdiv
call
mov
ds
lods
cmp
insb
repz
inc
inc
js
mov
jno
mov
push
rclb
mov
test
sub
lods
sub
adc
xor
xchg
xchg
xlat
cmp
daa
das
xor
dec
sub
mov
pop
push
frndint
push
sub
pop
inc
xchg
pop
aam
pusha
ja
mov
or
and
aaa
hlt
fildll
jo
mov
arpl
loopne
jge
lahf
pop
addr16
in
inc
pop
sbb
mov
push
mov
xchg
das
fcmovbe
daa
cmp
lret
push
mull
cli
pop
lahf
popa
daa
bound
sahf
inc
mov
fmull
cmpsl
and
scas
lods
adc
adc
sbb
fwait
addr16
fs
ja
adc
sbb
aam
andb
insb
inc
adc
sbb
scas
aaa
sub
sub
jne
ret
adc
push
arpl
jl
xorl
ret
mov
mov
loop
bound
mov
mov
sub
mov
int3
call
jnp
push
js
pop
test
sbb
sahf
or
push
mov
stos
or
decl
jg
mov
gs
out
das
add
icebp
jbe
cmp
sbb
mov
pusha
jle
fwait
dec
in
adc
movsl
test
sub
xchg
ljmp
or
jae
mov
push
shll
call
push
nop
into
inc
ss
fwait
mov
adc
push
repnz
mov
dec
popa
dec
movsb
test
and
rclb
fsts
aaa
jb
push
jae
xor
lods
out
jo
adc
pop
mov
scas
mov
or
mov
pusha
test
add
lahf
dec
inc
xor
pop
fnstenv
dec
jmp
iret
xor
mov
lret
adc
ret
jg
stos
jmp
sar
cmc
mov
movsb
dec
outsl
loopne
lcall
sbb
adc
filds
sahf
ficoms
bound
cmp
in
fcoml
sub
fildl
fildll
cwtl
lahf
mov
xor
bound
cs
lods
mov
adc
add
mov
in
outsb
adc
xor
mull
mov
roll
jl
daa
mov
pop
sbb
leave
push
inc
frstor
push
shlb
mov
cwtl
sbb
sbb
pop
cld
or
incb
lahf
mov
dec
loop
shlb
imul
cwtl
mov
aad
xchg
cmp
xor
aam
sub
mov
pop
jmp
cmpsl
xchg
mov
adc
jmp
jno
mov
les
cmpl
xor
adc
pop
fldl
mov
fidivs
and
sub
incl
mov
jne
shlb
push
inc
push
loopne
pushf
shll
stos
inc
mov
push
push
jg
jbe
mov
arpl
cld
mov
aaa
cmp
shr
mov
mov
mov
test
imul
xchg
push
mov
pop
lcall
add
jo
jp
and
dec
pop
push
out
and
pop
adc
pop
mov
movsb
fstpt
xchg
in
test
scas
insl
xchg
or
rcll
jg
lock
adc
sub
lods
lds
dec
cmpsb
arpl
lods
hlt
inc
cmp
mov
sub
sub
mov
clc
in
fsubrs
push
mulb
mov
outsl
pop
xor
pop
sbb
scas
mov
mov
jb
mov
xlat
pop
insb
and
and
cmp
jmp
adc
add
daa
mov
push
jmp
jp
jmp
imul
jmp
lds
dec
adcl
xchg
les
scas
sbb
mov
or
loop
mov
mov
lds
mov
dec
gs
leave
and
cs
and
insl
gs
movsb
jle
subl
insl
sbb
mov
mov
popf
mov
das
xchg
rcl
push
ss
xor
mov
mov
cwtl
inc
and
test
add
lahf
pop
int
pop
fsubrl
in
ds
jns
out
aam
mov
and
ss
push
cmpl
sbb
int
pop
mov
adc
inc
divb
test
mov
popa
push
and
mov
and
cs
movsb
lret
sbb
push
shlb
je
jnp
loope
jmp
fwait
movsb
int3
push
inc
pop
adc
add
or
or
sbb
lea
mov
cmp
mov
mov
ret
cmc
cs
mov
adc
xchg
std
test
or
add
mov
stos
testl
gs
jne
sbb
arpl
mov
and
cmp
mov
jb
mov
fs
add
jae
and
aas
mov
pusha
shl
push
jecxz
ret
popf
mov
fcmovnb
push
mov
inc
divb
mov
xchg
sub
xchg
bound
adc
xchg
mov
clc
cmp
lods
cmp
pushf
fildl
pop
gs
lods
pop
cwtl
mov
mov
xchg
dec
inc
cli
push
inc
xchg
mov
pop
jns
cmp
loopne
ret
pop
shrl
in
jae
subl
or
sbb
daa
repnz
shrb
push
xchg
outsb
jp
shll
ds
icebp
jecxz
and
fdivs
aaa
cmp
and
push
in
or
jno
pop
push
mov
push
fwait
jmp
call
jne
mov
mov
outsb
sti
inc
cld
or
xchg
and
mov
add
outsl
jo,pn
sub
xchg
xor
jo
jno
int3
mov
cmp
inc
cmp
sub
mov
in
pop
jnp
movsl
das
mov
mov
push
nop
popf
cmc
sbb
pop
pusha
xadd
bnd
xchg
jbe
test
jne
add
test
xchg
inc
test
mov
ja
push
cs
ja
scas
fildl
inc
mov
pop
xor
jne
xchg
jns
movsb
xchg
inc
jb
lds
sub
leave
lea
mov
cmp
xchg
cmp
adc
insb
arpl
jns
ljmp
inc
mov
inc
fmul
les
add
int3
in
mov
das
outsl
fs
test
orb
rcrl
inc
add
sahf
mov
test
mov
dec
test
iret
movl
lods
cmp
jl
decl
add
cmp
cmpsl
push
stos
cmp
add
and
addr16
je
lcall
adc
mov
pop
sub
push
iret
xchg
mov
inc
pop
outsb
imul
aaa
cld
mov
out
popa
or
xor
fnstsw
frstor
jo
das
lods
imul
popa
stos
cmp
loop
cli
clc
dec
pop
add
mov
dec
mov
mov
out
xchg
mov
inc
add
inc
cmpsb
mov
sub
fwait
mov
loopne
or
and
in
dec
inc
pop
mov
xor
push
sti
fadd
leave
and
xor
aad
js
add
cmp
add
dec
or
les
in
sub
arpl
mov
adc
jae
jnp
daa
xor
cmp
adc
and
sbb
mov
mov
pop
push
rcrb
mov
inc
or
lock
leave
movsl
or
subb
dec
fsubrs
mov
sbb
and
inc
movsl
sub
fcmove
popa
and
sub
mov
xor
sub
sbb
iret
leave
cmp
inc
push
std
sbb
icebp
into
fsubs
in
std
cmp
mov
aad
sub
xchg
iret
mov
andnps
movsl
mov
xchg
mov
mov
scas
sub
outsb
rcl
mov
xorb
adc
imul
mov
fimull
sbb
mov
push
pop
arpl
insl
or
jl
sbb
add
push
pop
inc
movl
and
outsl
fimuls
mov
push
add
and
sub
sub
imul
or
outsb
stc
or
push
addb
push
add
repz
jg
mov
sub
add
ss
ljmp
movsb
push
lds
jg
xchg
cmpsb
jmp
ljmp
addr16
rcl
or
jmp
popa
xchg
and
dec
sub
add
xor
jae
add
sahf
mov
push
cmpl
mov
push
fwait
jge
pop
mov
xchg
mov
sbb
sbb
mov
addr16
mov
bswap
clc
sub
dec
stos
aam
and
pop
xchg
mov
xchg
fcmovnbe
mov
retw
into
test
xlat
xor
lcall
xchg
je
mov
les
mov
ret
xor
xchg
mov
push
xchg
xor
push
fdivl
adc
or
out
push
rcr
lret
test
loope
sarb
xchg
cmp
andl
fstl
lret
lods
cs
clc
lahf
sbbl
les
push
shrl
push
cmpsl
jbe
xchg
xchg
loop
sub
sti
fadd
call
cmp
mov
lcall
or
and
sbb
mov
inc
mov
push
adc
cli
pop
inc
cmp
jne
cltd
jbe
scas
in
add
xor
bsf
loope
ret
adc
lds
sbb
je
stc
in
loope
jge
xchg
divl
inc
adc
lahf
pop
push
sub
pop
daa
push
je
imul
push
jo
mov
pop
in
cmp
idivb
push
sbb
push
int3
imul
mov
sbb
popf
mov
xchg
add
mov
mov
outsl
and
fdivrl
mov
pop
inc
sub
push
pop
cmp
lret
clc
repz
popf
loopne
dec
sub
loope
inc
mov
sbb
mov
sbb
cli
pop
arpl
subb
movsl
and
dec
pop
xor
mov
in
xor
fcmovb
jmp
cmpsb
sub
pop
in
push
push
out
and
data16
in
push
into
pop
pop
add
imul
mov
iret
std
pusha
jg
int3
stos
pop
std
sub
mov
cmc
sub
test
cmpsb
int
scas
sub
pop
repz
sbb
stc
jmp
adc
lcall
stos
xor
popa
lret
add
pop
cmp
inc
sbbb
ds
inc
inc
je
inc
mov
mov
cmpsl
cmovle
pop
add
xchg
cmpsb
pop
lret
adc
jg
dec
mov
sbb
addr16
andb
jmp
dec
loop
lds
cmc
fs
frstor
and
es
and
fwait
inc
daa
enter
rorb
or
data16
mov
xor
xchg
mov
adc
pop
lods
out
sub
or
inc
pop
in
mov
lea
pop
mov
dec
cmp
cmpb
adc
pop
popa
jmp
test
fidivs
ret
in
inc
jg
stc
mov
fst
mov
or
fimull
xchg
mov
jmp
mov
mov
ss
aas
jns
mov
jo
push
or
adc
add
lods
fcoms
mov
sub
sbb
scas
mov
lret
push
mov
sub
and
gs
jns
inc
mov
push
cmp
inc
xchg
jno
adc
pop
iret
jecxz
in
cwtl
lcall
pusha
ss
fsubrl
mov
xchg
push
mov
dec
mov
or
cmpsl
mov
leave
and
sbb
inc
xor
je
pop
mov
adc
or
push
or
ret
pushf
rcll
mov
dec
dec
mov
pop
fs
les
sub
fdivrs
cltd
push
repnz
fsubs
cmp
sbb
or
popf
push
jb
test
je
inc
jne
mov
dec
sub
mov
int
inc
dec
fmul
stos
adc
mov
xor
mov
xor
fcmovu
push
pop
popf
daa
cmc
mov
repnz
sarl
aas
cmovb
not
lret
enter
stos
jb
add
out
out
ret
lret
xchg
pusha
xchg
xchg
mov
lret
dec
mov
inc
fsubrl
rorl
lfs
adc
mov
je
mov
push
mov
test
fmuls
in
movsl
xchg
shlb
stos
mov
xchg
in
movsl
inc
jae
sarb
jecxz
lret
fwait
idivl
mov
push
jmp
sub
negb
push
fbld
jl
ljmp
sbb
push
xorb
mov
test
js
dec
popf
sti
jmp
mov
lock
xchg
sbb
mov
cmp
mov
lcall
jne
and
push
inc
fstpl
adc
into
xlat
daa
cmp
enter
mov
lret
cltd
shll
xchg
mov
push
mov
xor
mov
and
mov
std
push
xchg
mov
movb
ret
popa
xchg
jg
dec
shr
push
ret
mov
xchg
pop
push
insl
stos
sbb
mov
movsl
inc
sub
lret
nop
jne
data16
negl
int3
popa
xchg
xchg
addr16
fdiv
push
out
inc
mov
jne
push
rorl
inc
fwait
sub
xor
cmp
stc
scas
xchg
xchg
xchg
jg
in
sahf
jo
xchg
stc
inc
call
mov
sub
fidivrs
sbb
rcrb
neg
push
jnp
int3
jae
aaa
lahf
ret
xchg
xlat
sarl
mov
pop
icebp
fbld
inc
or
aas
pop
mov
or
negl
ljmp
xchg
pop
add
mov
aad
push
shll
cmpsb
sub
xor
push
enter
dec
add
out
mov
mov
stos
imul
fstps
scas
mov
inc
adc
scas
movsb
ja
adc
pop
roll
mov
push
push
sahf
dec
rcll
movsb
int3
mov
in
lea
call
out
into
dec
int
push
adc
mov
aad
xchg
test
mov
sub
cmp
test
pop
gs
dec
fisubrs
inc
push
pop
gs
fdivp
mov
filds
cli
ficompl
dec
xlat
es
adc
add
movsb
mov
pop
fcoms
lahf
cltd
sahf
cmp
and
sub
jg
les
and
mov
rep
cmp
rcrb
fidivrl
enter
jo
adc
mov
fst
jle
jnp
push
or
sub
mov
out
fdiv
lret
push
shrl
in
add
pushf
in
cli
test
cmp
push
int3
lea
inc
aaa
sub
insl
sbb
test
in
les
ss
pop
stos
mov
fsubrl
jbe
pop
pushf
ret
jle
or
insl
and
stos
and
sarb
es
push
idivb
mov
call
dec
in
push
daa
aas
dec
nop
rclb
mov
or
cmpsb
lds
or
es
popf
icebp
cmpsb
mov
rorb
xor
jae
loopne
daa
aad
std
jle
mov
lds
pop
insb
xchg
sub
pop
sub
xor
mov
jbe
jp
xchg
mov
sbb
and
fdivr
orl
test
jae
jecxz
push
add
addr16
es
and
test
ss
mov
aaa
inc
std
xchg
mov
xor
ss
or
mov
cmp
add
rcll
mov
sbb
fcomps
and
sbb
std
cmp
aam
xor
es
cmp
outsb
fsubl
mov
jb
je
out
xor
sub
pop
orl
mov
std
jg
mov
add
and
ret
jecxz
jnp
adc
lret
mov
js
xor
jno
stos
jne
xchg
sub
mov
or
loopne
cmpsb
fdivrs
mov
jns
in
lods
dec
mov
xor
mov
lahf
nop
mov
mov
pop
inc
xor
pop
dec
mov
mov
xor
cmp
das
dec
pop
pop
push
jb
mov
xor
cmpsb
push
push
loopne
nop
jge
inc
enter
pop
sbb
push
push
mov
out
fwait
mov
icebp
xchg
mov
cmpsl
scas
leave
cmp
sub
es
jns
add
mov
push
xor
lret
mov
cli
testl
mov
mov
aaa
xor
push
cmp
ret
add
mov
pop
shll
fxch
xchg
mov
pusha
sti
addr16
push
test
dec
mov
popa
adc
add
mov
mov
cli
dec
push
and
jo
push
mov
jge
jb
scas
xchg
or
or
rcll
hlt
test
testb
sub
cmp
mov
pop
push
addr16
fcmovb
mov
mov
push
iret
inc
pop
pop
into
add
call
call
push
pop
add
popf
cltd
sbb
xchg
or
stc
lock
cmpsb
lahf
stos
sub
ljmp
outsb
fistpl
add
jmp
sub
jp
push
ss
inc
scas
pop
push
rclb
repnz
stos
aaa
idivb
adc
f2xm1
xor
jno
in
int
or
jo
and
dec
sahf
popl
mov
in
pop
fwait
inc
stos
add
loope
into
fcmove
in
mov
aaa
fisttps
dec
movsl
cld
pop
insl
mov
dec
inc
xchg
rcr
fidivl
push
ljmp
add
andl
cmp
mov
mov
les
or
jbe
jb
js
sbb
jno
in
movsl
fisubl
xchg
andl
scas
or
lods
arpl
shl
jb
xchg
mov
xorl
lods
push
jne
sbb
insb
add
jl
xorb
fiaddl
xchg
pop
push
outsb
in
sbb
sub
out
mov
jae
fiaddl
movsb
les
mov
cmpl
push
outsb
in
nop
jp
pop
inc
stos
leave
in
mov
mov
daa
call
out
inc
sub
xchg
pop
mov
xchg
shll
inc
xchg
popa
mov
mov
ss
push
xchg
in
rcrl
ret
sbb
mov
loope
iret
jecxz
inc
mov
mov
aas
insl
jno
dec
stos
pop
movsb
sub
data16
imul
pop
loopw
xor
les
or
hlt
pop
xor
sbb
fisttps
pop
pop
mov
push
mov
outsl
sub
repz
addr16
test
cmpsl
clc
add
cmp
mov
out
mov
sbb
inc
sti
adc
sub
xor
xchg
adc
into
decl
mov
jnp
or
push
adc
pop
or
mov
cmp
xlat
xchg
sahf
jo
add
aad
inc
in
out
push
jae
inc
jno
inc
mov
data16
js
jge
loope
add
cmpsb
jl
mov
sarl
and
push
inc
xor
dec
pop
dec
test
pop
addr16
inc
mov
leave
out
scas
dec
push
mov
jmp
fimull
lret
mov
xchg
sbb
jnp
mov
adc
pop
sbb
jecxz
dec
lds
jmp
insb
fucomp
lret
js
scas
cmp
jg
and
pop
sub
movsl
adc
imul
movsl
push
imul
shlb
movsl
je
addl
or
mov
pop
inc
cmp
xchg
jg
in
sbb
je
dec
mov
inc
imul
dec
inc
scas
out
pushf
pusha
or
iret
int3
andb
cmpsb
gs
adc
jnp
in
inc
jne
aas
lock
lcall
dec
push
adc
fsubrl
imul
cmp
sub
sbb
fldl
jo
jne
jbe
fsubrs
nop
je
in
mov
aad
ret
adc
imul
push
sahf
mov
xor
adc
popl
loope
pop
imul
rcl
sbb
mov
pop
mov
mov
sbb
outsb
xlat
sub
mov
and
sub
mov
add
push
xchg
iret
and
pop
jae
xchg
pop
call
inc
mov
scas
lea
mov
dec
jmp
push
jg
int
mov
movsb
sub
stos
cmp
mov
popf
mov
pop
pop
in
outsb
outsb
sub
jb
es
lahf
and
scas
cltd
cmp
xor
pop
orb
test
popf
in
or
rcr
push
sbb
mov
cmpsb
or
ds
loopne
fsubl
jne
ficoml
enter
or
cmp
stos
jg
fisubl
ljmp
incw
jl
sub
cltd
xorl
sbb
dec
addb
test
jmp
xchg
into
bound
arpl
and
shrl
aas
ret
movsb
push
jnp
fcmovnb
aas
sahf
sbb
scas
xchg
adc
dec
xchg
dec
inc
testl
cmp
pop
jbe
mov
jno
mov
insb
roll
mov
cmp
push
loop
xchg
rcll
add
aaa
add
out
xchg
popa
sub
pop
daa
mov
movl
sbb
fadds
dec
aaa
arpl
jnp
mov
loopne
sub
jp
imul
xor
lea
das
in
inc
and
ret
mov
dec
cltd
xor
pop
and
mov
mov
lds
data16
cmpsl
je
lcall
push
add
mov
xchg
pusha
add
sub
inc
lock
pop
sub
movsb
cmovne
std
sarb
out
push
faddl
add
test
and
and
xor
int3
mov
sub
or
js
test
xor
mov
mov
xor
shl
mov
jmp
xchg
mov
mov
inc
stos
xchg
jb
dec
mov
cmp
flds
push
or
push
add
pushf
imul
adc
and
cli
enter
mov
leave
jecxz
sbbb
pop
out
and
insl
sbb
mov
fidivrl
rcrb
and
xor
jl
lods
lock
mov
jae
mov
mov
cmp
and
pop
dec
insb
je
xorb
mov
stos
imul
lods
fcoml
jae
lcall
cmp
sub
mov
adc
and
int3
cs
or
jno
orb
movsl
xlat
lahf
or
jne
fadd
ret
push
outsb
ja
mov
cmpb
pop
pop
sbb
cmpsl
cmpsl
nop
data16
inc
cmp
bound
jns
xor
insl
ret
mov
mov
popa
cwtl
sub
jbe
outsb
dec
sbb
dec
sbb
daa
xchg
sar
popl
ja
jb
and
pop
test
xor
sti
and
insl
xor
test
aad
cmc
pop
loop
push
mov
in
mov
das
aas
jno
mov
mov
cs
cwtl
lahf
sub
pushf
mov
push
or
mov
inc
sub
pcmpeqw
movsb
int3
and
xchg
xor
pusha
aaa
leave
aaa
fisubs
les
mov
cmp
adc
movaps
cmp
rorl
shrb
push
std
icebp
and
mov
sbb
sbb
push
add
imul
or
jmp
cmc
shlb
add
pop
jp
inc
push
or
xor
out
jg
mov
mov
nop
in
add
add
out
and
daa
cltd
xlat
mov
sub
mov
nop
sahf
sub
test
sbb
cmpsl
inc
mov
fistps
cmp
aad
dec
into
out
add
sarl
add
mov
ror
pop
cmp
in
les
sbb
mov
test
jmp
jmp
pop
mov
dec
push
push
xlat
sub
int3
pop
aaa
mov
test
aaa
leave
xchg
mov
int
mov
cmp
cmp
push
mov
adc
dec
push
imulb
cmp
or
and
or
subb
call
xchg
out
aam
pop
adcb
cmp
mov
sbb
mov
mov
xor
or
xor
mov
mov
jb
fdivrl
push
in
mov
and
push
inc
pushf
lret
clc
inc
int
test
and
push
cltd
jle
lret
movsl
outsl
ja
jne
jbe
inc
inc
aas
mov
clc
jmp
adc
jmp
jo
sub
mov
xor
pavgb
inc
jbe
jns
mov
pop
cmp
or
sub
lret
jmp
sub
out
mov
jmp
sbb
or
sbb
out
popf
enter
sub
mov
into
popf
ja
pop
and
pop
outsl
popa
test
sbb
je
popa
cmp
je
pop
push
ljmp
call
cmp
cmc
jl
sub
outsb
fsubrl
xchg
and
add
dec
lret
movsb
jne
lret
sub
mov
cmpsl
cmp
movsb
dec
xchg
mov
into
jnp
fisttpll
rcll
pop
cmpsl
push
sbb
sub
mov
adc
nop
adc
sbb
mov
stos
fdivs
inc
imul
xor
pop
sbb
adc
movb
or
and
mov
mov
adc
arpl
ror
aas
cld
and
pop
or
cmp
fnstcw
pushf
cmc
cli
cmp
enter
adc
mov
pop
test
cmc
roll
ja
test
dec
loope
outsb
loop
and
cmp
jl
bound
lods
popa
push
in
jb
xchg
push
push
inc
lods
lret
xchg
inc
add
enter
ss
loopne
mov
repnz
data16
add
mov
add
cs
sti
gs
push
aas
arpl
rol
adc
sarb
loopne
mov
xor
bound
daa
jae
sbb
popa
cmp
sub
xor
test
imulb
xchg
es
sbb
out
jg
inc
loop
pop
or
jg
pop
iret
aam
popa
pop
jne
xchg
mov
outsl
scas
repnz
cmp
mov
bound
fidivl
push
lcall
cmp
movsb
movsb
sbb
test
addr16
ljmp
repnz
and
test
clc
cmp
add
es
push
int
mov
xchg
mov
shll
dec
mov
inc
ror
and
mov
aam
mov
pop
hlt
adc
mov
and
lods
lods
adc
and
dec
into
cmp
inc
movsb
test
pop
push
mov
insl
sarb
inc
out
mov
mov
stos
push
mov
jmp
stc
mov
fxch
sbb
cld
imul
jmp
loope
mov
pop
out
fimull
sub
sub
enter
cs
or
add
imul
sbb
xchg
pop
outsl
ljmp
ret
mov
jl
aam
hlt
add
aas
cmpsl
lret
pop
jbe
mov
repz
adc
gs
les
push
mov
lods
lcall
test
in
xchg
pop
mov
and
insb
test
pop
cld
jb
int3
mov
jmp
pop
or
jge
loope
xchg
in
loopne
cli
xchg
inc
mov
pop
xorb
pop
cmp
imul
adc
xchg
inc
popf
outsl
test
push
movsb
pop
mov
std
sahf
mov
lods
adc
rorb
cmp
fisttpll
fdivrl
fnsave
not
add
movsb
aaa
xchg
xor
mov
xor
outsb
divl
adc
cmp
push
enter
cmp
add
mov
mov
scas
push
adc
pop
into
shll
xchg
cli
cmp
xor
addr16
dec
jle
sub
hlt
adc
adc
jns
lods
add
mov
jno
sti
pop
push
in
cld
repnz
inc
and
mull
pop
pop
lret
rcr
ss
rorl
repz
into
sbb
mov
sub
push
popf
je
sub
outsl
pop
cltd
rcpps
lock
js
imul
out
xchg
popl
push
sbbl
or
jnp
subl
jge
fistl
aaa
push
das
sbb
xchg
inc
arpl
cmp
lret
and
shrb
mov
loop
scas
fsubrs
fsubr
inc
push
lret
fildll
in
add
sbb
mov
cmp
lret
jns
push
insb
fdivs
movsb
in
frstor
lock
xor
xor
xor
dec
movsl
and
les
popl
movsl
push
out
mov
jbe
lods
mov
fisttpl
js
outsl
and
xor
pop
mull
enter
sahf
lods
pop
mov
in
stos
scas
nop
popf
and
movsl
dec
and
aas
call
xchg
ret
ljmp
cmp
sub
rep
imul
sub
and
jecxz
stos
imul
clc
adc
das
call
aad
fmuls
jmp
xchg
sbb
dec
dec
rcl
repz
cmp
imul
data16
int3
adc
add
faddl
jo
aad
inc
xchg
jp
xlat
test
pop
ret
call
xor
dec
out
jb
rcrb
jne
pop
jno
subl
out
xor
rcll
pop
and
xchg
movsl
out
push
or
and
cmp
pusha
xlat
sub
into
imul
movsl
and
cmpl
orl
pusha
sub
int3
pop
xor
popf
popa
jne
jmp
cmp
xchg
sar
mov
std
out
jae
push
push
je
mov
fisubrs
and
pop
lea
push
xlat
sbb
dec
sbb
movsl
adc
or
sub
sbb
mov
popa
ret
imul
ss
movsb
mov
adc
xchg
hlt
ljmp
cmp
lea
pop
xor
gs
lahf
jnp
mov
imul
dec
cs
push
mov
in
mov
cmp
add
bound
inc
adc
pop
jg
and
ljmp
enter
cmp
mov
or
pop
test
dec
mov
add
cmp
enter
nop
div
jmp
scas
xchg
imulb
cmc
shrl
stc
or
pushf
xchg
mov
popa
jbe
adc
in
add
xchg
adc
in
icebp
inc
addr16
mov
inc
dec
aam
pushf
cltd
clc
pop
scas
push
std
or
xorl
or
jbe
or
lea
sub
xrelease
cmp
or
inc
add
mov
std
movsl
in
dec
inc
fimuls
mov
push
in
adc
xchg
call
addb
or
push
lret
dec
lock
adc
out
iret
cli
jo
mov
test
nop
ljmp
les
lahf
push
mov
int3
ja
mov
ja
mov
push
stc
sbb
cld
cmp
or
test
pusha
sub
inc
test
mov
pop
xchg
sahf
popa
mov
mov
stos
cs
mov
xor
cld
jns
mov
jg
mov
mov
sbb
data16
fcomp
xor
sub
cmp
xchg
lcall
idivl
int3
lcall
inc
push
lret
ljmp
push
dec
dec
dec
sub
push
repnz
lret
cwtl
idivl
push
pop
lcall
shll
mov
push
push
or
push
jo
inc
push
jle
cmovs
ljmp
mov
addr16
lea
pop
push
xchg
mov
dec
std
jbe
in
jp
subl
call
sub
imul
cmp
sahf
push
lds
cli
jecxz
insl
hlt
rep
adc
mov
fdivl
and
mov
out
ret
mov
mov
mov
push
in
dec
and
xor
xchg
imul
repz
outsb
mov
xchg
cli
lahf
daa
int3
add
clc
inc
jl
push
mov
xchg
cmp
dec
cmp
mov
cmpl
jmp
js
in
cmpsb
adc
outsb
cmp
cltd
mov
scas
lock
inc
pop
sahf
cmpsl
imul
push
xchg
mov
shl
ljmp
cwtl
push
in
jge,pn
out
fwait
lea
negl
or
adc
or
push
into
jecxz
fidivrl
push
mov
lcall
gs
or
jne
mov
sarl
and
ljmp
into
notb
ficompl
dec
pop
jo
shll
out
cmp
mov
or
xchg
fwait
gs
cwtl
add
movsb
imul
adc
int
outsb
push
xor
ficoml
lods
mov
xchg
hlt
pushf
int
imul
mov
push
es
xchg
popa
aam
test
jo
push
jmp
pop
and
push
leave
ficompl
pop
bound
cmp
imull
enter
clc
xchg
push
xor
orl
nop
loopne
cmp
mov
push
ljmp
not
and
ds
push
int3
andl
ljmp
lea
jo
das
xor
mov
aaa
mov
fcos
dec
xchg
popa
add
xchg
xor
mov
xor
xchg
mov
xchg
adc
pop
jmp
stos
cmc
clc
xor
in
mov
xorl
and
pop
push
ljmp
adc
pop
pop
mov
std
gs
inc
push
cmp
and
pop
pop
addr16
add
mov
mov
fmull
dec
cmp
loope
xchg
popf
stc
inc
cmpsl
add
mov
hlt
adc
dec
lahf
push
cmp
test
inc
mov
xorl
or
repz
roll
rcrl
jmp
clc
test
sub
add
int3
add
and
inc
fldl
ret
sbb
dec
xor
cmp
stos
test
sbb
sar
data16
out
stc
cmpsl
test
aad
add
pusha
mov
adc
or
in
sbb
pushf
or
aam
mov
pusha
inc
pop
clc
lret
shr
pop
repnz
test
popf
fimull
loopne
cmp
jp
jmp
lds
movsb
mov
clc
push
push
xor
jno
fstpt
jl
push
repnz
pop
push
jb
shl
mov
addr16
xchg
dec
sti
xor
insb
xchg
dec
mov
jle
pop
adc
in
mov
jg
test
test
inc
jnp
ficomps
loope
inc
ret
sbb
cmp
dec
in
push
add
jnp
stos
je
in
out
mov
fimull
sarl
mov
push
adc
xchg
fwait
pxor
pop
or
jno
pop
and
inc
cmpsl
fwait
lods
cmp
mov
je
rclb
jp
mov
xchg
dec
push
lret
fiadds
in
xchg
or
or
push
cmpsl
outsl
pop
adc
ret
mov
mov
ffree
push
xchg
dec
sbb
scas
sub
inc
dec
lods
lret
xchg
incl
jne
call
xor
mov
inc
out
xchg
cld
mov
jl
and
mov
cwtl
imul
call
mov
mov
fwait
mov
and
push
out
mov
pop
pop
repnz
push
dec
dec
imull
lea
stc
dec
andb
jmp
outsl
or
lea
sar
call
aam
sub
push
rorl
lds
and
jecxz
mov
adc
pop
rcrl
and
imul
push
dec
lds
xchg
jmp
adc
or
push
cmp
cmc
ficoms
mov
lea
outsb
test
mov
mov
insb
lahf
and
inc
xchg
jnp
inc
cltd
jp
pop
es
ds
das
outsl
pop
cmc
xchg
jge
pop
jle
add
mov
mov
jg
xor
push
mov
jmp
roll
daa
push
clc
pop
imul
jae
add
dec
cmp
bound
mov
scas
cmp
dec
sbb
leave
stos
mov
jl
cmp
pushf
xor
cmp
or
and
or
ret
jb
int
cmc
pop
cmp
cmp
lods
orl
inc
mov
pushf
xor
aam
xor
lcall
add
and
popa
test
ljmp
mov
sbb
popa
sub
in
fwait
cmp
and
rcrb
lret
xor
mov
adc
ljmp
lock
jo
js
xlat
and
inc
xchg
sub
adc
test
scas
push
in
push
movsl
loope
call
pop
pmullw
mov
in
inc
add
dec
inc
mov
pop
xchg
push
loope
int3
cmp
jnp
cmpsl
or
push
repnz
cltd
in
inc
lret
dec
or
cs
shlb
adc
aaa
sub
dec
adcb
in
mov
jle
into
clc
shr
popf
cli
mov
jnp
jb
lcall
enter
int
cld
pop
fisubrl
mov
jne
jp
aad
test
mov
mov
push
hlt
fldcw
and
lock
movb
aam
pop
clc
test
cmpsl
pusha
sub
adcb
lret
sti
mov
xor
cmpsl
xchg
and
sub
and
dec
frstor
mov
pop
repz
xor
mov
fiadds
lret
cmc
scas
push
aam
aaa
rcrl
pop
xchg
insb
filds
mov
xchg
xchg
push
dec
outsb
mov
or
jae
mov
pop
jmp
jae
stos
and
sbb
out
jg
sbb
cltd
mov
cli
int3
mov
aad
cmp
lret
push
ret
push
mov
sbb
enter
dec
mov
xor
mov
adc
add
adc
xchg
push
cmpsl
jp
sub
sub
push
enter
push
xor
pop
add
ljmp
mov
in
fwait
or
inc
jbe
push
cltd
arpl
out
aam
lods
push
ljmp
scas
adc
or
cltd
jne
mov
jge
inc
lret
jne
xor
xchg
xchg
mov
out
dec
jne,pn
out
add
mov
rolb
and
xchg
frstor
cmp
hlt
out
mov
xor
addr16
sbb
mov
adc
fsts
or
jb
adc
ret
mov
and
adc
ffreep
orb
lds
out
shlb
adc
push
pop
inc
loopne
arpl
outsl
xchg
xchg
lock
frstor
push
ret
mov
or
lret
or
and
pop
cmp
bound
out
sti
add
jne
add
scas
cmp
xchg
cwtl
rcl
andl
push
ds
scas
fcoms
test
mov
adcb
std
in
cmp
shrl
clc
mov
push
ret
jnp
jmp
cmp
dec
inc
cmpsb
out
mov
jns
jge
inc
in
repz
mov
mov
add
lods
jmp
pop
iret
je
push
dec
mov
or
cld
push
popa
ret
fld
idivl
cmp
sub
pop
jne
pop
inc
orb
es
xlat
test
push
rolb
mov
mov
cmp
cmc
inc
lods
adc
push
xor
or
jl
xchg
jne
pop
mov
idiv
leave
or
les
add
ja
stc
inc
sti
adc
fdivrl
or
fcom
jno
mov
in
pop
sbb
jb
lods
pop
pop
and
cmc
cmp
add
jnp
dec
cmp
mov
cmp
adc
ja
mov
rcrl
add
push
add
pusha
mov
dec
mov
stc
mov
notl
out
jge
adc
jno
sbb
xchg
addl
jno
lahf
push
scas
inc
icebp
mov
push
jge
outsb
imul
jg
mov
in
sub
xor
mov
adc
sub
stc
ret
lcall
cltd
jb
mov
or
call
dec
sahf
mov
push
add
mov
lcall
cli
ret
icebp
inc
mov
xorb
mov
lahf
pop
mov
sahf
imul
jns
popf
push
sub
out
or
push
mov
push
daa
push
jmp
sbb
jp
fisubrl
ret
lret
data16
imul
or
inc
push
inc
jno
xor
cmpsb
push
adc
inc
das
popf
cmp
add
xor
push
sti
push
add
jge
mov
jno
lret
sub
add
test
insl
imul
push
xchg
pop
pop
fnstcw
mov
in
cmp
aad
sbb
ficoms
sbb
arpl
and
stc
cmpsb
cmpsb
sub
sbb
xor
testl
inc
jmp
mov
test
mov
push
mov
or
addb
xor
jp
icebp
ret
lods
xchg
mov
mov
add
roll
ja
outsl
insb
or
push
mov
cwtl
sarl
mov
sub
in
ret
std
jl
imul
push
dec
mov
cmp
daa
gs
pop
xor
cli
mov
mov
sbb
jno
cmpl
daa
xchg
int
add
scas
dec
adcl
popf
repnz
inc
sub
mov
jns
sbb
push
shll
in
and
test
ret
and
fcoms
jns
test
mov
daa
or
aaa
jge
scas
push
das
popa
cmpsb
addl
dec
sti
int
fs
add
and
cltd
and
fwait
popf
add
dec
lds
pushf
scas
jb
cmp
jne
and
xor
or
pop
in
fsts
into
lret
mov
repnz
cmp
rclb
adcl
pop
leave
bound
rorl
push
pop
pop
daa
and
push
popf
and
push
rcrb
out
xor
arpl
pinsrw
mov
addl
les
xchg
mov
or
test
pop
cs
adc
aad
add
in
out
aaa
mulb
sbb
add
aaa
mov
mov
push
in
mov
add
loop
mov
add
fld
lds
jg
dec
or
daa
push
pop
xor
cmp
mov
sti
cmpsb
scas
mov
in
mov
adc
sub
xor
inc
arpl
test
xchg
sbb
mov
sarl
ret
mov
inc
jp
mov
dec
mov
out
nop
and
movsl
jge
inc
add
dec
jmp
xchg
adc
fisubrl
into
call
cli
mov
les
or
pop
cld
mov
inc
ljmp
jge
xlat
jp
stos
mov
jns
cs
adc
dec
adc
jnp
enter
jle
dec
xchg
ljmp
mov
clc
movsl
int
div
dec
loop
lock
sub
dec
add
loop
push
ja
rclb
ljmp
inc
icebp
mov
bound
jmp
dec
and
mov
sbb
or
add
sbb
ret
faddp
hlt
icebp
loop
subl
mov
mov
insl
fstl
cmpsl
cmpsl
es
pop
add
clc
mov
test
inc
mov
sub
jno
jnp
push
dec
icebp
xchg
cs
inc
xchg
cmp
cltd
xchg
popa
in
adc
push
gs
pop
cs
dec
out
notb
iret
es
in
lock
inc
mov
lcall
rorb
dec
jecxz
mov
cmp
cmp
jne
aam
cld
mov
popa
sub
ja
pop
xlat
mov
push
aad
dec
andl
wbinvd
jle
jp
lret
jb
push
mov
stos
xchg
cltd
add
mov
mov
in
adc
mov
and
adc
lods
xchg
sub
lret
subl
rorb
lret
ret
xlat
mov
cmp
fimuls
sbb
dec
out
ss
inc
data16
ret
push
rorl
ret
add
adc
int3
xchg
mov
divl
mov
iret
and
sbb
cwtl
addr16
sahf
ja
test
int
lret
dec
out
jecxz
dec
cmp
aas
xchg
fsubl
push
aaa
sahf
je
inc
call
inc
call
mov
mov
clc
aam
add
jmp
pop
lods
pusha
pusha
push
or
sahf
fcomps
pop
in
das
inc
pop
pop
mov
xor
pop
cli
push
cmp
xchg
pusha
pop
dec
push
fsubs
adc
jae
dec
out
add
add
dec
dec
xor
in
cmp
mov
mov
or
testl
inc
dec
pop
mov
adc
or
ret
ja
insb
adc
fidivrs
push
sbb
xor
roll
loop
sti
shr
jbe
and
adc
and
jne
and
adc
dec
push
pushf
or
mov
out
les
cmc
adc
out
fwait
jl
cmpsl
gs
insb
loope
sub
mov
and
aas
xor
adcl
testb
and
push
shll
lcall
jge
arpl
ret
hlt
mull
int3
xchg
xchg
mov
test
dec
fucomi
std
mov
lods
sbb
es
mov
inc
shl
inc
pushl
xor
cmpsl
cmp
mov
and
dec
ftst
sbb
inc
inc
adc
mov
mull
lcall
addr16
xchg
add
pushf
and
cmp
push
pop
popa
enter
sbb
xor
ss
and
dec
lods
xchg
enter
mov
adc
mov
mov
out
std
lock
mov
dec
jnp
loop
push
pop
es
hlt
scas
movsb
outsb
faddl
and
pop
scas
jle
cmpsl
sub
inc
nop
mov
mov
ret
shlb
push
test
inc
adc
adc
jae
fcompl
jmp
or
xor
dec
jmp
pop
jge
inc
call
rorl
xor
add
add
ss
cld
int
ljmp
pop
popf
pminsw
or
fiaddl
dec
add
adc
pop
pop
xchg
out
stos
in
mov
iret
mov
lods
sti
sbb
js
mov
scas
mov
mov
outsl
or
mov
out
xor
pop
xorl
push
adc
push
mov
mov
pop
sbb
fcoml
xchg
bound
mov
add
adc
or
jg
jl
shl
insb
or
or
rol
aaa
pop
xor
jae
mov
aam
mov
movsb
sbb
jo
aas
int
loope
adc
jno
lret
inc
fs
mov
sub
and
pushf
es
movsl
cmpsl
insb
push
add
mov
jno
xor
lods
mov
iret
lods
add
mov
mov
cltd
mov
aam
mov
fldenv
dec
xchg
inc
add
lock
loop
cmovg
pop
mov
and
out
sub
mov
jnp
test
jbe
jge
jg
lds
mov
movsb
pop
cmp
adc
jb
sbb
lds
jbe
pop
adcl
cwtl
jmp
into
inc
pushf
lds
dec
push
out
mov
lods
sub
and
scas
jbe
fisubl
mov
push
mov
mov
pop
loope
loop
scas
mov
test
stos
mov
push
ss
pop
imul
xchg
fdivrl
ja
out
xor
push
int3
mov
std
pop
push
inc
stos
in
xchg
loop
test
jecxz
ss
scas
mov
imul
les
popa
mov
dec
aam
ss
pusha
lret
test
cmp
ljmp
adc
cmc
xchg
in
xlat
adc
pop
iret
insl
outsb
nop
sbb
pop
loope
push
in
xchg
pop
sub
mov
xor
mov
test
sub
int
mov
jbe
cmp
in
mov
aam
lods
imul
jb
in
pop
dec
mov
dec
add
jo
movsb
cmc
or
sahf
mov
pop
push
int
cmp
xchg
add
mov
mov
icebp
test
xchg
mov
dec
pop
jecxz
push
cld
mov
inc
cs
mov
pop
xor
lret
pop
push
xchg
sub
int
add
rorl
loope
add
mov
mov
push
sub
push
aam
jnp
pop
dec
adc
xlat
xlat
aaa
scas
lret
pop
jge
mov
sti
adc
mov
xor
jbe
sub
fadd
adc
mov
ds
out
sbb
inc
or
pop
out
addl
push
pandn
adc
cmp
cltd
call
pop
insb
out
mov
push
out
cmp
loope
push
jl
dec
push
cmp
xchg
sbb
inc
int3
mov
aad
push
pop
testb
icebp
push
aaa
xor
rcrb
and
shrl
push
xor
movsb
or
negb
pusha
add
ret
xchg
loop
rcrb
mov
push
stc
xchg
dec
scas
lods
adc
outsl
jmp
shll
adc
xchg
push
cmp
push
shlb
xchg
fninit
out
scas
jge
cmpsb
add
stos
loope
sbb
lea
adc
rorl
out
jb
jno
xor
push
div
aam
sbb
and
inc
sti
xchg
jne
sbb
inc
xor
icebp
insb
ja
jbe
hlt
sbb
popf
inc
nop
or
add
push
fcomps
xchg
dec
jmp
inc
pop
inc
sbb
add
xchg
and
cmp
xchg
lods
pop
inc
sbb
inc
bound
inc
lds
sbb
in
mov
lret
mov
pop
add
cmpb
test
in
jo
jo
lods
cltd
mov
mov
pop
je
lods
dec
push
stos
mov
xchg
stos
mov
dec
inc
ja
and
fcoms
jno
sti
or
adc
orl
sbb
fcmovnb
mov
movsb
inc
lods
fwait
shrl
xor
test
outsl
jnp
ret
and
xorl
loop
movsl
cmpsl
repz
inc
lea
xlat
es
test
ss
sbb
lods
subl
cmc
shlb
mov
sub
mov
sahf
jmp
lea
stos
and
or
shlb
cmp
sub
sub
pop
int3
andl
out
sbb
fisubrs
add
arpl
mov
lcall
lock
testl
adc
add
cli
sub
xchg
push
xor
mov
mov
dec
sub
or
sub
das
mov
jns,pn
jecxz
fildll
sub
loop
aaa
xchg
adc
jns
pop
dec
mov
mov
enter
and
imul
dec
mov
movsb
je
mul
mov
jmpw
lods
pop
xchg
pushf
mov
stc
mov
lret
pop
lods
xor
insl
pusha
nop
ss
jg
out
xchg
sub
dec
fistpl
push
arpl
lret
xchg
pop
outsl
xchg
jne
xchg
push
cwtl
sbb
hlt
sub
cmc
pop
pop
add
and
cmp
mov
fidivrs
ljmp
loop
clc
jo
adc
cmc
mov
pop
xchg
shlb
lods
mov
sub
inc
ret
cmpsl
aas
sbb
jl
dec
int
pop
mov
stos
pusha
mov
dec
outsl
adc
push
xchg
jnp
ja
mov
movl
rolb
mov
clc
xchg
scas
and
pop
jne
add
stos
and
mov
push
cmp
out
popf
hlt
xchg
mov
and
addr16
shll
adc
fcoms
js
cmp
ss
js
add
aam
mov
aas
notb
pop
jmp
push
sbb
aad
push
loop
mov
movsb
pusha
test
clc
dec
pushf
dec
out
mov
paddw
jg
aad
adc
sbb
jne
and
adc
icebp
mov
xchg
pop
das
shl
mov
push
stos
jbe
aas
scas
pop
insb
call
arpl
xchg
fwait
jecxz
sub
fistpl
test
mov
std
jo
outsl
fsubs
push
pop
test
pop
adc
jae
call
prefetcht1
mov
in
scas
out
bswap
and
sbb
test
cmp
adc
push
lret
pop
aad
mov
or
in
dec
push
push
add
insb
pusha
xor
dec
inc
pop
xor
jl
shr
stos
rcl
test
in
mov
jb
dec
push
std
aad
lds
lods
in
jns
out
out
pop
es
std
or
xorl
test
push
or
shrl
xchg
popa
test
inc
outsb
lock
rcrb
mov
mov
xor
push
sahf
mov
ljmp
mov
ljmp
mov
and
cmp
mov
dec
loope
mov
lcall
mov
or
icebp
dec
dec
enter
std
mov
mov
xchg
pop
popa
pusha
or
xorl
out
mov
and
add
pop
std
dec
or
inc
cmp
enter
push
push
das
inc
sarl
cmpsl
fsubs
mov
arpl
mov
or
or
dec
sub
jns
ss
sub
mov
dec
sahf
cmpsl
xchg
insl
pop
repnz
xchg
pusha
mov
mov
mov
mov
push
ss
pop
xor
je
cmpsb
shrb
das
sbb
mov
pop
movsb
sub
jnp
icebp
cmp
lcall
xor
xchg
adc
int
or
adc
sbb
and
mov
sahf
shll
inc
leave
dec
lcall
mov
sbb
test
data16
stc
jnp
push
sbb
xchg
mov
repz
pop
in
xchg
mov
cmp
and
pop
and
ficomps
mov
dec
jge
cmp
dec
pop
adc
clc
call
add
loopne
js
xchg
pop
ret
int3
sub
cmp
jne
sbb
scas
adc
or
xor
pop
fnstcw
daa
dec
addr16
xchg
divl
cmpsl
in
mov
push
jg
lods
dec
or
lahf
pop
pop
sahf
loopne
xor
jo
dec
cmc
mov
ret
mov
stc
lret
pop
popf
xchg
test
loopne
sbb
pop
mov
movsl
fsubl
cli
mov
arpl
mov
js
clc
ret
jmp
cli
push
or
sub
xchg
cmp
les
dec
rolb
fdivrl
lret
or
mov
insb
mov
dec
mov
jle
fsubrp
add
daa
sub
jo
addr16
sbb
mov
pop
inc
iret
mov
mov
add
mov
fdivl
mov
mov
in
hlt
sub
push
std
mov
push
push
jbe
bound
pop
scas
pop
mov
or
mov
push
cmp
das
shll
or
popa
cli
inc
ret
cwtl
xchg
pop
sbb
xor
mov
insb
or
sbbl
clc
and
out
jo
pop
stos
dec
rcll
dec
std
adc
les
mov
es
xchg
bound
cmp
nop
out
les
jne
adc
xchg
jns
add
test
mov
fnstcw
repnz
sub
push
mov
insl
mov
inc
fs
jb
into
mov
xor
xor
push
aaa
jg
xchg
iret
and
inc
in
lcall
das
jecxz
xor
jmp
cmpsb
movsl
xchg
lock
repnz
jge
xor
mov
rclb
jge
adcb
jno
fdivrl
mov
cmp
mov
cld
mov
mov
jecxz
repnz
and
ja
adcl
test
add
aam
out
movsl
outsl
adc
and
sbb
pop
add
test
push
mov
fldz
sbb
and
mov
loope
xor
fwait
insl
in
or
mov
sub
ss
fisubrl
cwtl
dec
lret
repz
jecxz
adc
jecxz
xchg
aad
dec
or
cmc
std
ds
scas
pop
jns
pusha
lcall
movb
je
lea
cmp
aaa
aas
sub
jecxz
or
fs
add
dec
xor
jge
out
push
jg
mulb
and
pop
lock
adc
pushf
mov
push
movsl
sti
cmpsl
out
mov
xchg
test
pusha
fildll
pop
push
sbbl
jae
pop
sbb
mov
dec
lods
xor
xor
adc
lods
shr
adc
fldt
mov
popa
imulb
mov
pop
movsb
js
push
xlat
and
jg
popa
xchg
repnz
jno
pop
mov
inc
mov
pop
js
jno
and
test
adc
adc
scas
mov
dec
scas
test
jns
push
shlb
test
adc
mov
inc
idivb
pop
enter
js
sbb
and
adc
dec
push
imul
stos
xchg
adc
inc
inc
mov
pop
enter
or
xchg
mov
call
pusha
or
rolb
int3
leave
ljmp
cmp
or
mov
mov
xchg
call
aaa
adc
push
pop
hlt
stos
or
push
adc
sbb
call
xor
xor
filds
out
nop
nop
scas
lret
xchg
js
rcrb
arpl
dec
add
jnp
add
gs
popa
push
adc
lret
and
ret
inc
mov
adc
mov
cmc
mov
cmpl
lcall
mov
rcrl
movsb
mov
scas
push
or
mov
scas
scas
mov
mov
jns
arpl
setnp
sub
inc
fpatan
ljmp
out
mov
push
mov
and
mov
sub
mov
inc
sahf
lods
mov
icebp
loope
sub
pop
stc
add
cmpsb
and
in
mov
insb
jnp
mov
ret
insl
inc
out
dec
xor
push
mov
xor
test
mov
jbe
fmuls
leave
inc
mov
dec
pop
adc
mov
and
popf
stos
jmp
cmp
cmp
pushf
push
sub
pop
nop
rcrl
adc
dec
int
push
xchg
loopne
adc
cmp
shl
or
push
test
popf
dec
clc
mov
sahf
sbb
int3
adc
pop
and
mov
or
in
xor
push
jmp
lret
pop
add
aam
lods
xchg
lret
stos
fldl
adc
std
repnz
sub
mov
sbb
sbb
push
xchg
pop
imul
addl
jne
mov
push
sbb
cmp
jle
repnz
sub
je,pt
add
sub
jnp
cmpsl
xor
cmp
xor
lret
into
shrb
fmull
div
xchg
test
dec
or
push
cld
pop
adc
sub
pop
dec
dec
std
jecxz
mov
xor
test
orl
jno
xchg
pusha
pop
cld
add
ljmp
flds
popf
pop
add
add
fistl
mov
adc
in
mov
push
das
out
jo
jbe
mov
cmpsl
sbb
xchg
xor
push
arpl
scas
dec
mov
stos
cltd
aad
imul
xor
or
ret
cld
insl
fiadds
jno
or
inc
jno
xor
arpl
cmp
clc
pop
sbb
mov
sbb
pop
jno
adc
or
cld
je
mov
jne
lods
xor
sub
imul
mov
cmp
jbe
dec
xor
rcll
fstl
pop
pusha
or
hlt
push
jnp
div
inc
fs
xor
out
vinsertf32x8
or
in
xor
aas
idivb
outsl
cmpsb
mov
int3
xchg
pop
ss
fdiv
arpl
aam
lahf
addl
sub
nop
dec
in
das
xchg
mov
xor
std
rcrl
lock
pop
jbe
adc
fisubrl
sbb
add
cmp
roll
fcomps
mov
jae
lret
xchg
mov
xor
xchg
jno
ret
repnz
pop
adc
cmpl
inc
pop
repz
sti
movsb
sbb
jbe
rclb
ret
call
stos
sbb
ret
jne
out
ret
dec
inc
pop
jnp
arpl
test
jmp
test
and
gs
aas
adc
or
jmp
cmpsl
pop
in
pusha
sub
and
call
out
lret
pop
test
lret
outsb
pop
in
xchg
stos
cmpsl
cwtl
add
mov
bound
sahf
mov
out
xchg
mov
shll
test
and
lds
dec
rclb
cmpb
cmp
cmpsl
adc
pop
adc
call
das
jl
adc
pop
shrb
paddusb
dec
cld
iret
imul
sbb
inc
push
adc
xchg
xor
push
arpl
push
ljmp
push
ss
xchg
cmp
lock
and
daa
push
xchg
mov
push
mov
mov
xchg
imul
adc
sbb
mov
dec
sub
je
adc
push
in
cmpsb
lods
cmpsl
xchg
or
mov
aaa
push
jne
mov
push
out
loop
sub
hlt
notl
aam
imul
push
push
dec
or
loopne
out
stos
leave
adc
and
xor
xor
bound
push
scas
sub
ss
idivl
fisttpll
dec
bound
push
xchg
lret
movsl
push
enter
dec
and
fisttps
call
pop
mov
addr16
push
mov
sub
or
sbb
jno
push
lcall
dec
mov
jecxz
fsubs
out
mov
xchg
xchg
jno
pushf
cmp
or
pushf
movsb
shlb
mov
out
insb
lods
inc
sbbb
lods
sbb
mov
and
in
mov
dec
iret
dec
addb
hlt
call
pop
inc
or
adc
push
inc
int3
adc
sbbb
mov
in
mov
neg
int3
lret
mov
push
adc
fmuls
and
ss
int
and
hlt
mov
inc
arpl
in
loope
ds
adc
add
pop
cmp
mov
lock
cld
dec
sbb
ret
pop
add
sbb
int3
aam
sti
or
test
ljmp
test
sub
int
int
lods
adc
push
mov
mov
hlt
insl
rorl
mov
in
je
js
pop
outsb
aas
jne
sub
or
dec
rcll
pop
in
mov
fwait
mov
pop
js
and
sahf
arpl
es
loope
mov
in
call
insl
cli
fdiv
sbb
stc
dec
cs
ds
xchg
ffreep
mov
stos
lcall
jp
mov
sbb
mov
xchg
and
push
gs
sub
and
in
sub
mov
fwait
push
cmpb
lret
xor
push
mov
mov
pshufw
mov
and
stos
cld
int
mov
in
or
xor
scas
inc
lods
lea
les
add
inc
xor
sahf
mov
and
inc
sbb
lods
sbb
ja
jae
inc
inc
pusha
add
fiaddl
aas
push
lds
dec
jle
scas
es
cltd
stos
inc
call
lret
push
jbe
int
sub
pusha
xor
cmpsb
push
stos
outsb
iret
jno
jns
push
or
pop
push
xchg
and
jp
add
or
es
push
outsl
adc
cmpsb
add
jl
pop
cmp
xor
sbbl
mov
hlt
adc
popa
add
repnz
push
out
push
adc
pop
sub
or
test
clc
enter
loopne
aam
rclb
pop
xchg
mov
xor
es
mov
mov
aaa
mulb
roll
cld
sub
enter
inc
jns
or
stos
imul
mov
cmp
add
stos
daa
jnp
fimull
pusha
adc
mov
adc
add
das
xor
sub
mov
xor
fdivs
mov
or
subb
xlat
jno
and
add
xchg
out
outsl
jmp
mov
mov
hlt
scas
leave
jl
mulb
cltd
xor
lock
jge
rcll
lea
std
add
fwait
movsl
mov
jo
push
xchg
aad
bound
push
call
push
daa
ljmp
fsubl
fwait
sbb
pop
adc
xchg
lret
jo
imul
pop
lret
xchg
incl
dec
dec
repz
imulb
fs
sbb
sub
mov
nop
xor
mov
les
push
bound
aas
adc
or
jns
xchg
xchg
daa
sub
dec
in
push
pop
push
push
sbb
out
push
pop
aam
jo
adc
icebp
shll
imul
xlat
jb
enter
push
iret
lret
cmp
fmulp
pop
mov
in
mov
add
pop
adc
sbb
test
jnp
pusha
jo
enter
ffreep
jb
cmp
lahf
sub
adc
cmp
or
jl
iret
sbb
data16
xor
scas
repnz
mov
bound
jae
cmpsl
imul
xchg
inc
lahf
lock
ds
leave
adc
popa
mov
mov
jae
out
adcb
mov
inc
mov
nop
xor
bound
pop
lods
pushf
mov
pop
fidivrl
sarl
aad
pop
mov
shlb
jmp
mov
call
dec
xchg
or
xor
fadd
dec
imul
imul
cmp
out
lcall
and
test
mov
scas
mov
mov
pop
dec
lods
mov
movsl
xor
xchg
ret
jg
jne
sahf
xchg
xor
inc
loopne
pop
and
cmpsb
dec
cmp
mov
push
insb
and
jnp
into
cwtl
push
lahf
xor
xchg
push
int3
lret
in
push
mov
pop
inc
stos
pop
ja
stc
mov
and
xchg
xchg
mov
nop
ret
outsl
sbbb
mov
nop
fldl
rol
xor
ret
mov
xor
das
mov
sahf
ja
icebp
sub
jb
testb
cltd
movsl
aam
sbbl
out
mov
imul
ret
rcr
xchg
stos
pop
in
dec
cmp
sub
xchg
ja
mov
xchg
jb
or
cs
jns
jmp
adc
repz
xchg
je
jae
sbb
mov
popa
xor
cld
ljmp
jle
mov
fdiv
pop
out
adc
aam
inc
xor
call
int
sub
or
or
adc
nop
cld
sbb
lcall
cwtl
jecxz
rorb
lret
or
sbb
popa
push
jb
push
ds
pop
in
add
xchg
mov
cld
scas
rcrb
and
test
repnz
xchg
dec
push
fnsave
sub
imul
imul
out
icebp
fcmovnb
addr16
sbb
cmp
adc
mov
stos
jp
xchg
and
push
add
fs
je
jge
iret
ret
ss
mov
push
mov
dec
clc
imul
std
ret
movsl
push
mov
out
sub
inc
jnp
mov
and
push
xchg
pop
lahf
add
and
aad
popa
adc
cltd
dec
into
shll
adc
mov
mov
rcrl
jae
sti
in
push
jno
add
lret
inc
repnz
push
icebp
push
pusha
pop
pop
test
mov
inc
orl
neg
aas
repz
std
dec
out
repz
fbstp
pop
mov
xor
push
or
mov
cmp
push
sub
popf
cmp
scas
push
cmc
loope
xchg
xor
rorl
xchg
movsb
xchg
mov
and
std
pushf
sbb
pusha
jno
dec
mov
cli
lea
sbb
xor
test
movsl
mov
mov
sub
adc
xchg
sbb
inc
dec
loope
inc
mov
dec
pop
pusha
arpl
std
test
push
sub
movsl
jecxz
add
adc
fdivrl
lret
fcompl
enter
movsb
or
cmp
hlt
mov
jno
dec
std
std
jge
ljmp
ds
mov
pop
pop
hlt
insl
dec
int
jae
movsl
out
cli
jge
xor
lods
push
mov
nop
jmp
add
cmp
cmc
push
mov
pushf
jmp
or
xor
arpl
and
and
rcl
adc
mov
aam
cmp
std
cmpsl
in
sub
dec
jne
testb
mov
pop
data16
add
addl
fmull
jle
sbb
add
fisubl
jmp
pop
mov
cmp
lods
cmp
mov
and
or
mov
mov
aad
pop
sbb
ljmp
sti
or
and
inc
mov
int3
mov
jne
rclb
ret
cmp
scas
frstor
es
lods
cmp
or
sarb
dec
dec
sub
popa
mov
test
cltd
cmc
roll
push
pop
movsb
insb
hlt
lock
push
pop
or
adc
pop
sbb
lods
in
push
mov
sbb
mov
inc
push
mov
mov
shll
cmc
cmp
fldenv
push
sub
mov
mov
mov
daa
les
xor
sbb
and
xor
sti
mov
clc
jb
add
out
fldt
sbb
adc
nop
inc
or
jae
fwait
shr
mov
push
dec
inc
mov
int3
fs
in
pop
cwtl
mov
filds
cld
ljmp
mov
xchg
es
lahf
jecxz
mov
inc
jae
sbb
and
and
and
imul
int
dec
and
repnz
mov
test
mov
mov
or
lcall
scas
pop
or
mov
mov
in
idiv
adc
xlat
shl
inc
push
ds
out
and
imul
and
je
cwtl
test
es
lods
pushl
fstpl
cmp
cmp
jae
inc
adc
popf
add
ja
mov
jmpw
ja
fadds
mov
mov
mov
and
insb
bound
jb
int3
loop
mov
mov
pop
lea
dec
incl
push
pop
adc
ficomps
cmp
add
sbb
mov
insb
lods
inc
jno
mov
or
adc
out
std
jne
test
jo
in
subb
cld
xor
pop
push
outsl
mov
pushf
pop
mov
xchg
mov
rclb
ljmp
dec
sbb
icebp
and
xlat
fsubrs
xchg
lahf
dec
or
cld
movsb
cmp
mov
push
shl
jno
subl
and
stos
cli
jb
mov
pop
jb
jae
lahf
daa
adc
push
mov
mov
cltd
jecxz
lock
sbb
dec
push
mov
int
sbb
int
pop
lret
les
mov
nop
mov
dec
inc
outsl
outsl
sbb
lcall
fcoms
loope
syscall
lods
push
adc
cmp
pop
cmp
and
xchg
add
std
pop
mov
inc
inc
xchg
lock
pop
mov
mov
test
lods
cmpsl
ss
les
mov
xlat
mov
pushf
data16
xchg
mov
movsl
pop
iret
into
xchg
dec
stos
out
sbb
mov
add
jae
xchg
cmp
jo
fstl
fldenv
mov
cmp
ljmp
std
dec
jecxz
fsubrp
and
xor
pop
mov
or
jb
testb
push
test
adc
hlt
hlt
add
mov
leave
dec
enter
bound
test
xchg
scas
pop
out
loope
lods
or
lret
adcb
jb
push
adcl
xchg
adc
mov
ljmp
push
icebp
loopne
dec
jne
pop
data16
es
jb
and
out
repz
jbe
jecxz
fdivrs
je
out
add
add
cltd
aaa
cmc
outsb
pop
add
into
movsb
pop
mov
cmp
movsl
out
pop
nop
or
out
decl
add
dec
adc
xor
aas
cmc
imul
lods
dec
cmp
rcll
insl
cltd
inc
push
xchg
aam
lds
aad
movsb
in
aas
test
idivb
push
js
cwtl
addr16
or
repz
mov
repz
orl
jge
clc
sarb
outsl
xor
test
sbb
xor
dec
cmpsl
push
out
jne
int3
pop
mov
sub
mov
jmp
push
jp
push
inc
mov
sbb
pop
imul
push
mov
aas
pop
push
xchg
icebp
call
fcmovbe
sbb
and
dec
pusha
jmp
xchg
xchg
in
and
add
xchg
inc
add
lret
cmp
cld
xor
and
xchg
lds
jb
dec
mov
or
pusha
jmp
pop
fucomi
in
les
cld
sarb
or
decb
insl
xlat
fimuls
jne
add
mov
pop
rclb
pop
xchg
rolb
scas
jmp
pop
sbb
ds
imul
mov
enter
pop
cmp
jae
js
jno
cmp
mov
imul
subb
mov
mov
aam
fdivrl
add
into
cli
das
jb
xor
add
int3
daa
or
repz
fndisi(8087
scas
mov
fucomi
bound
fwait
and
bound
add
sub
daa
add
aad
and
jae
mov
jno
popa
out
mov
mov
ss
mov
jb
or
adc
fwait
lahf
movsb
cli
mov
jnp
in
jle
lock
imul
and
inc
or
and
pop
leave
inc
sub
mov
mov
sub
or
xor
and
stos
xorb
mov
icebp
or
out
jge
push
dec
jne
ror
pushf
imul
inc
rcrb
mov
fnsave
xchg
loop
loopne
mov
arpl
mov
jecxz
std
jl
mov
je
aad
out
jae
push
pop
push
mov
dec
mov
vmaxpd
daa
fcompl
jnp
lcall
add
push
dec
push
fildl
loope
andl
pand
out
icebp
inc
inc
inc
ss
sub
inc
mov
xor
dec
sub
push
or
sbb
aaa
outsl
push
das
mov
pop
sbbb
loopne
ret
iret
mov
jae
sub
pop
sub
dec
cli
push
insb
jp
fidivl
mov
arpl
pop
shrl
mov
cmpsl
mov
stc
cwtl
stos
pop
arpl
xor
xor
xor
dec
mov
insb
mov
test
mov
into
in
fsubs
push
jno
xchg
stos
cli
push
mov
mov
mov
and
add
add
nop
xor
xlat
popf
and
rsm
enter
mov
mov
fadd
and
stos
add
pop
sbb
xchg
inc
lods
sbb
fcmovnb
sbb
ret
jge
xchg
mov
out
shlb
jg
test
inc
mulb
lods
sahf
outsl
mov
inc
jle
pop
xlat
xchg
pop
sub
and
xor
ja
sbb
pop
inc
fldl
addr16
cmp
add
cmpsb
sarb
xor
mov
xchg
push
arpl
pushf
fiadds
push
xor
incb
xchg
testl
mov
es
push
and
push
xchg
stos
stos
pop
cs
mov
mov
bound
xor
sbb
ja
stos
sbb
mov
mov
fs
xchg
out
shrl
pop
pop
pop
cmp
mov
xchg
sbb
repnz
xlat
lock
pop
rcrl
sbb
and
in
fidivl
xchg
arpl
test
dec
pop
cmp
push
pop
bound
xchg
and
sub
cmp
and
out
fadds
js
outsb
mov
jmp
inc
icebp
shll
loopne
xor
adc
sbb
ljmp
pop
int3
mov
mov
ficoms
mov
push
xor
jp
add
push
cmp
test
add
inc
and
scas
xor
das
es
mov
movsb
mov
push
push
or
call
mov
lods
jae
add
mov
daa
jl
stc
sarl
fmuls
popf
std
movsb
mov
repnz
loop
xchg
cwtl
out
jl
insb
mov
lret
or
mov
iret
hlt
mov
cld
push
imul
inc
aaa
aas
jmp
mov
and
pop
xchg
or
stos
cmc
inc
mov
inc
dec
pop
dec
mov
sub
lea
dec
pop
daa
out
jne
loopne
ret
mov
and
shl
cmp
sbb
jns
xor
iret
stos
inc
leave
sbb
das
loopne
mov
push
add
cmp
in
add
ljmp
arpl
call
lcall
test
dec
xor
jb
test
cmp
leave
out
push
sbb
movsl
sbbl
movsl
pop
sbb
jo
ror
adc
dec
and
test
pusha
add
mov
mov
repnz
lret
xor
movl
xchg
adcl
cmp
ss
mov
fnstsw
mov
push
or
sti
push
addr16
mov
xchg
pop
adc
push
out
adc
ret
dec
push
sbb
jle
int3
sbb
daa
add
std
imul
ds
pusha
mov
sub
mov
xchg
into
in
repz
and
sti
pop
or
lahf
enter
leave
cmp
jg
jo
cli
ljmp
ja
ret
pusha
lock
rcll
into
sti
jb
pop
adc
push
push
jecxz
ja
loopne
add
mov
es
sub
int
mov
xchg
pop
mov
push
mov
test
mov
lret
mov
jae
mov
add
arpl
out
mov
mov
sbb
jecxz
insl
or
stos
mov
xor
mov
jbe
out
es
rcrb
cmp
sar
push
push
push
popf
adc
xchg
push
sub
cmpsb
pop
mov
stos
or
test
jo
hlt
xchg
sbb
aam
pop
jo
movsb
sbbl
addb
add
stos
fwait
aam
push
aaa
xchg
xchg
adc
push
mov
loope
arpl
cmp
es
adc
xor
ljmp
call
jle
and
add
adc
lock
aam
iret
xchg
mov
adc
scas
mov
mov
mov
mov
inc
clc
es
stos
rcrb
dec
jge
dec
inc
out
imul
xchg
addl
out
pop
nop
dec
out
push
out
popa
pop
int3
fsubrl
cmp
movsb
push
fcompl
out
insl
call
add
call
or
dec
adc
dec
cmpb
repnz
jmp
daa
data16
add
std
push
mov
lods
cmc
mov
out
pop
out
jnp
mov
aas
mov
shr
inc
jne
in
mov
je
std
pop
out
daa
iret
push
mov
insb
sahf
dec
mulb
mov
xchg
fsubrl
jle
jno
push
test
xlat
pop
push
fadds
or
aas
mov
push
clc
and
push
fimull
popa
xchg
outsb
sbb
fsubp
adc
push
enter
rorb
fcoml
je
cli
test
hlt
cwtl
mov
sub
stc
xchg
dec
orl
mov
clc
sbb
push
push
mov
or
add
xlat
inc
jmp
or
or
mov
and
cmp
mov
inc
cmp
ljmp
xchg
dec
sahf
sbb
and
sbb
xchg
dec
push
fcmovnu
test
outsl
push
imul
cmp
mov
cld
lock
fs
test
jbe
sti
xchg
sub
push
dec
fadds
mov
or
dec
or
and
repnz
cmp
jmp
xor
mov
out
scas
fisubrs
call
sbb
add
repz
jbe
adc
xchg
xchg
pop
out
mov
dec
gs
mov
hlt
nop
xchg
dec
int3
pushf
call
sbb
vminsd
mov
ret
cmc
inc
jp
ss
adc
and
call
and
cltd
xor
mov
add
shll
sub
fists
lods
lea
push
add
scas
imul
mov
in
sbb
jb
imul
cmp
aas
jno
orb
xchg
sbb
lcall
push
jnp
fildl
push
rorl
push
fcompl
mov
aaa
mov
jl
jne
mov
aaa
pop
pop
jecxz
fisubl
adc
je,pn
jns
fdiv
cltd
imul
out
mov
nop
xchg
insl
dec
je
jg
push
and
js
ret
dec
or
ret
std
aaa
dec
pop
cmp
mov
outsb
mov
arpl
and
mov
push
dec
and
in
push
sahf
aam
push
or
arpl
xor
mov
push
push
cmp
scas
insb
addr16
jge
lcall
xchg
sub
jmp
xor
rcr
dec
test
ds
je
mov
push
pop
cmp
out
pop
inc
aaa
lea
mov
pop
mov
mov
push
idivl
cwtl
mov
lret
push
out
cmpsl
dec
xchg
jl
rolb
out
jle
test
sub
movsl
dec
mov
scas
pusha
mov
mov
stc
fs
int
into
xchg
rcr
lret
push
hlt
add
lods
lret
movsl
pushf
or
pop
nop
aaa
in
mov
fbld
sbb
jae
dec
mov
mov
push
pop
sub
inc
les
dec
std
add
dec
mov
pop
ds
push
jb
dec
neg
jl
inc
lret
icebp
fcmovnb
adc
nop
hlt
sbb
push
mov
lds
mov
fistpll
inc
icebp
outsb
lahf
cmpl
cltd
clc
mov
scas
test
pop
pop
ss
push
rclb
cmpsl
outsb
adc
les
mov
icebp
push
cmp
cmpsb
add
sub
into
and
sub
scas
inc
stos
sub
in
cmc
xor
insb
cwtl
jo
gs
in
sbb
popl
adc
jbe
jbe
and
pop
xchg
push
mov
pop
xor
sub
mov
cmp
jbe
inc
popf
ja
jo
fpatan
jbe
orb
xchg
pop
mov
jb
cli
cmp
jb
rcr
and
js
repnz
outsb
sarl
pop
lock
sbb
loopne
es
sub
mov
push
shrl
cmpsl
cmp
lock
scas
push
cmp
mov
cld
leave
xor
loope
dec
and
mov
cwtl
pop
mov
cwtl
out
add
sub
pop
int
mov
adc
shlb
pop
mov
fstpl
cmp
pop
enter
adc
inc
mov
fidivs
js
test
jne
xor
mov
cmpb
adc
inc
sbb
cmove
xchg
popf
cmp
stc
insl
fs
mov
and
cld
bound
xchg
fisttpll
daa
bound
ja
push
or
pop
push
pop
in
inc
or
aam
in
or
jb
pop
pushf
cs
test
out
sub
sbb
cmp
add
jns
sbb
pop
push
inc
ljmp
cmpsb
mov
add
fcomps
mov
push
mov
adc
ret
cmp
lds
dec
cmpsl
js
decb
xchg
and
je
and
in
dec
mov
loop
adc
sub
adc
repz
lret
mov
or
jl
rorb
mov
jnp
push
push
cmp
cmp
cltd
cmp
sbb
imul
stos
cmpsb
xchg
mov
scas
or
or
or
pop
adc
mov
and
fadd
aam
pop
push
test
fidivl
mov
push
out
adc
sub
and
and
outsb
or
mov
insb
sub
mov
shll
sbb
adc
cmp
and
adc
out
cmp
inc
jecxz
cmpsb
adcl
jo
arpl
lcall
cmpsb
filds
dec
pop
mov
iret
xlat
inc
test
ljmp
dec
xchg
lret
push
ret
popf
adc
inc
mov
das
mov
hlt
addr16
dec
jns
ficoml
shl
inc
inc
mov
jno
cmp
and
js
mov
xor
sub
sbb
push
loope
ror
add
negl
loopne
push
or
push
inc
or
lods
inc
dec
inc
test
popf
sahf
add
imul
mov
inc
jmp
add
int3
popf
hlt
or
mov
mov
push
jae
mov
push
ss
scas
adc
pop
jo
fcom
loope
ret
sbbl
ja
loope
out
and
dec
jp
inc
cmp
cmpsb
fdivrp
orb
testb
jne
aas
fs
lock
mov
fstps
cs
pop
ret
cmp
loopne
decb
pop
cmpsb
fistpll
mov
pop
push
stc
fsubs
jle
repnz
or
push
xor
mov
shl
push
inc
call
jl
stos
and
repz
test
xchg
or
nop
imul
fimull
mov
fnstsw
nop
shl
mov
dec
in
add
mov
jo
and
cmpsl
push
inc
xchg
dec
leave
fcoms
inc
or
mov
pop
fsts
inc
sub
test
fwait
sub
push
sti
mov
loopne
dec
call
movsb
add
cmpsl
sti
adc
inc
jle
das
jbe
ja
pushf
xchg
pusha
lods
sub
test
in
sub
in
inc
ss
mov
icebp
data16
outsl
or
cltd
dec
punpckhbw
mov
pop
push
lcall
inc
test
lret
in
fiaddl
sub
or
clc
sub
aaa
sbb
dec
fs
dec
xlat
and
es
push
sbb
adc
clc
leave
leave
loop
rol
orb
ja
or
pushaw
scas
jp
xor
ja
cmp
aad
mov
xchg
adc
mov
daa
push
je
das
das
fcompl
cmp
out
dec
mul
cltd
xor
js
xchg
and
shll
dec
mov
cli
cmp
and
pop
pushf
mov
cmpsb
xor
jmp
lock
cmpsl
lret
rorl
dec
pop
mov
int3
mov
rorl
mov
mov
cli
pop
rcrb
pop
xchg
xor
nop
or
xor
ja
ljmp
jg
jb
and
sbb
jecxz
idivb
fldl
dec
cmp
in
dec
jae
xchg
into
mov
sub
mov
sbb
or
sbb
pop
pushf
jbe
sti
in
xorl
pop
mov
fcoml
shll
lock
int
mov
pushf
xchg
aad
mov
jno
push
hlt
js
icebp
fs
add
stos
dec
cld
fsubl
lods
std
mov
inc
dec
cmp
inc
loope
cmp
repnz
aam
mov
mov
push
mov
in
and
xchg
cs
xchg
pop
add
sti
inc
adc
sbb
xchg
adc
or
inc
add
push
scas
js
dec
push
mov
out
fistpl
push
and
mov
andl
andb
mov
push
pop
inc
cltd
cltd
mov
inc
sahf
push
data16
or
jp
ja
or
xor
daa
rdtsc
cmp
lods
dec
sbb
scas
mov
push
sub
jno
xor
insb
and
xchg
pop
and
adc
ficoms
mov
addr16
mov
mov
mov
clc
mov
or
pop
inc
cwtl
iret
andl
add
jge
rcll
lcall
popf
push
mov
cmp
push
adc
jnp
xor
mov
cmp
es
xor
test
fisttps
xchg
das
xor
xor
add
pop
xor
inc
sbb
pop
js
push
xchg
fs
outsb
add
das
sub
sar
jno
xchg
repnz
jo
dec
lods
popa
sub
out
push
fdivrs
mov
movsb
lea
pop
push
push
xchg
pop
mov
call
nop
xchg
jb
dec
sub
test
sub
adc
pop
xchg
cs
mov
xor
adc
dec
dec
push
cli
je
fisubrs
imul
pop
or
add
lock
icebp
aad
sub
jmp
stos
cmp
sbb
outsl
in
stos
cmp
call
mov
sub
or
push
jge
int
dec
push
test
xor
fldenv
sahf
orb
ret
aad
cmpsb
out
jbe
repz
in
ret
jbe
fcoml
fidivrl
and
xchg
dec
shll
out
add
mov
divl
mov
sbb
xor
add
push
fmuls
scas
imul
lahf
inc
mov
jg
jg
fs
and
ja
and
dec
fwait
jle
loopne
repnz
xchg
sub
mov
stos
pop
jb
mov
mov
dec
xchg
aam
jb
and
adc
arpl
mov
fwait
stos
mov
push
mov
mov
cmp
iret
push
mov
pop
mov
sarb
fimull
leave
mov
xchg
adc
adc
fs
add
es
mov
ret
adc
jg
pushf
ss
cmp
push
inc
adc
jne
icebp
adc
cmc
xor
push
sub
outsb
push
pushf
pop
jp
pusha
ss
scas
aad
mov
xor
outsb
fimull
inc
not
test
mov
jb,pt
outsb
in
push
pushf
mov
fsubl
pop
cmp
push
xchg
push
pop
mov
outsl
xchg
push
mov
and
bound
cmpsb
out
fsubrp
and
mov
adcl
icebp
dec
in
lods
sub
jge
loopne
cmp
pop
rorb
lret
sahf
addr16
sub
shll
sbb
repnz
test
mov
xchg
ja
aad
pusha
lahf
cmp
mov
pop
int
adc
andb
sub
jmp
popf
mov
jo
cs
and
shl
rep
rol
loop
jl,pn
push
mov
les
cmp
insl
shl
outsb
jnp
push
aas
push
popf
mov
cmpb
adc
jne
cmp
lods
hlt
ds
js
sbb
ret
push
mov
call
cmpl
andb
insb
std
fsubrp
cmp
addr16
jge
mov
mov
fidivs
mov
lods
push
in
sub
jb
cmp
in
xor
ret
movsb
call
mov
push
dec
movsl
xor
testl
or
sbb
and
shlb
push
aam
inc
xor
cmp
adc
mov
jne
sub
int
addl
adc
xchg
dec
int
cld
mov
xchg
or
pop
loop
mov
ret
xlat
push
sbb
subl
jae
add
jecxz
sbb
cmpsl
popf
adc
dec
and
sbb
sub
mov
ljmp
push
ds
sbb
mov
stc
mov
add
sub
sub
adc
adc
push
aaa
stos
dec
xchg
dec
pushf
add
jmp
shrb
push
insb
mov
leave
xchg
mov
dec
jno
xchg
rclb
pop
xor
jecxz
iret
es
xchg
inc
cli
dec
clts
pop
sahf
outsb
outsb
int
mov
adc
nop
mov
xor
xchg
loop
adc
xor
pop
imul
outsb
pop
dec
nop
push
fwait
pop
push
mov
add
movlps
fs
xor
push
sub
jp
lret
pop
sarl
loop
mov
jp
ret
cmp
add
push
xchg
cmp
notb
push
or
mulb
leave
add
xor
rol
ss
call
out
inc
je
pop
hlt
push
icebp
mov
loopne
clc
mov
pop
sbb
mov
enter
sub
out
and
push
fsubl
push
mov
adc
push
mov
imul
push
mov
pop
test
nop
clc
mov
imul
cmp
loope
pop
mov
pop
add
mov
mov
mov
rcll
push
sbb
fdivl
and
mov
nop
insl
pusha
lea
inc
inc
inc
jecxz
and
or
cmpsl
xor
jmp
aad
fidivrs
xor
inc
sahf
push
ss
mov
fiadds
xchg
fnstcw
sbb
in
negb
loope
into
sbb
in
dec
mov
rcrl
imul
mov
lcall
cld
or
fistpl
add
mov
jmp
and
inc
jb
mov
rolb
icebp
sti
mov
out
ss
dec
push
es
xor
out
or
push
loopne
test
sahf
pop
imul
or
adc
lods
xchg
jnp
xchg
jne
xchg
test
or
xchg
pop
lock
xlat
mov
mov
iret
xor
sub
xchg
dec
jbe
test
loop
jp
std
jmp
call
and
shll
imul
xchg
fimuls
or
dec
cltd
jl
aad
into
rorl
ljmp
fs
jl
inc
jle
ds
rcl
xor
into
aam
xor
dec
mov
insl
sbb
call
dec
fstpt
clc
xchg
pop
sbb
pushf
ret
std
test
sbb
test
nop
or
popa
rorb
mov
add
out
mov
sarb
stos
loopne
bound
fidivs
cmp
jge
and
jl
dec
cltd
xchg
cld
arpl
mov
or
add
pop
mov
lea
out
xor
fucomi
adc
ljmp
xor
dec
inc
bound
lock
xor
mov
mov
ljmp
fwait
sub
mov
gs
lahf
das
rcll
or
pop
jne
mov
push
add
das
in
pop
jg
out
js
stos
iret
pop
push
insb
insl
mov
mov
das
sbb
mov
adc
mov
mov
inc
pop
loopne
loop
hlt
xchg
xchg
pop
cmpb
call
orl
dec
adc
jge
in
adc
sbb
dec
inc
insb
mov
inc
out
adc
jecxz
mov
pop
das
int3
ja
mov
mov
push
sahf
sub
sbb
cli
movsb
idivb
mov
insl
out
and
xlat
aaa
jo
ljmp
mov
imul
cmp
lods
xor
fdivl
jl
mov
xor
xchg
popa
lods
xchg
cmpb
push
lods
sub
clc
inc
cmp
cmpsl
push
ja
pop
cmp
and
fnstcw
insb
fcomps
pop
inc
mov
sbb
out
test
sbb
mov
mov
or
mov
cmpsl
pusha
setae
stos
cmp
in
or
aam
jae
lcall
inc
sahf
inc
push
test
repz
repnz
sti
dec
push
movsl
mov
sbb
scas
pop
sub
fwait
or
mov
add
adc
mov
mov
cmp
push
outsl
adc
mov
pop
popf
pop
inc
call
in
lock
out
add
int3
sbb
xrelease
inc
loope
dec
sbb
fstps
fidivrs
lea
adc
psadbw
xchg
cmpsb
mov
js
xor
mov
hlt
push
mov
test
mov
pop
clc
or
sarl
sbb
sub
jp
and
stos
xor
inc
and
xchg
in
xor
popf
cmp
sub
mov
adc
jmp
or
lock
pop
into
mov
xchg
call
mov
pop
add
xor
pop
mov
testl
lock
or
mov
in
xchg
inc
mov
fiadds
xlat
or
int3
test
add
ds
sti
nop
sub
fmull
inc
adc
dec
dec
jl
sbb
adc
fwait
and
push
fucom
cli
mov
sbb
daa
mov
sub
outsb
sbbl
addr16
pop
mov
sub
push
aad
ret
dec
mov
hlt
ja
sbb
push
cmpsl
es
scas
xchg
test
pusha
mov
aaa
aad
daa
mov
mov
or
gs
cld
mov
flds
ss
popf
inc
call
sbb
fwait
mov
lcall
aad
add
jbe
cmpsl
int
sub
imul
nop
mov
loope
lock
or
jo
push
out
adc
int
ss
mov
in
xor
fsubrs
jp
loop
xor
jg
cltd
pop
cmpsl
mov
ret
push
mov
pop
cmpsl
sbb
mov
rclb
jnp
fldl
daa
xor
popf
xor
jg
mov
loop
pop
pop
out
ss
lea
xor
mov
xchg
pop
cmpsb
outsl
out
les
pusha
mov
adc
scas
sahf
nop
xor
inc
lret
sarl
mov
or
mov
pop
lret
out
stos
add
and
cmp
push
pop
pop
dec
fs
push
pop
das
clc
dec
xchg
nop
xor
frstor
and
pop
mov
std
icebp
std
int3
movsb
or
jns
push
and
push
mov
ds
sbb
insl
xlat
pop
mov
mov
sti
mov
in
or
mov
xchg
rcll
xchg
imul
popf
movsl
dec
std
pushf
cli
sub
jae
pop
mov
jne
mov
xchg
push
out
aaa
mov
cmpsl
in
scas
pusha
cmp
or
pop
pop
push
or
pop
imul
xor
add
je
add
jnp
iret
lds
lea
clc
jne
sub
dec
out
or
sub
shlb
sub
rcr
adc
adcb
ret
stos
and
adc
dec
cmc
cwtl
jne
sub
lea
jno
xor
xchg
scas
sar
ss
mov
add
dec
xor
pop
mov
dec
pop
movsb
leave
push
pusha
jmp
mov
pop
xor
xchg
fmuls
les
lcall
cmp
adc
pop
insl
je
dec
mov
and
push
cmp
sbb
popa
pop
shlb
mov
add
jl
pop
data16
pop
mov
ds
dec
xchg
xor
inc
pop
sub
push
push
fsubrp
outsb
sbb
pop
cmp
fwait
pop
mov
cmc
adc
scas
xchg
lea
mov
std
xor
jecxz
dec
sbb
push
inc
stc
sahf
push
jmp
add
fmull
test
fdivl
adc
and
xor
loop
cmp
sarb
cmp
mov
ret
or
enter
dec
aam
push
mov
or
xchg
fistpll
sbb
or
mov
and
mov
imul
cmp
sbb
add
mov
rcrb
push
ds
jmp
mov
ljmp
aam
in
pop
xor
stos
mov
mov
les
cmp
cli
pusha
fldenv
mov
pushf
mov
mov
pop
xchg
xchg
xchg
shrb
sbb
push
jae
fld
jmp
xchg
dec
cmp
mov
scas
scas
out
cmp
in
cltd
pop
pusha
xlat
mov
or
lock
lods
sbb
decb
inc
movsl
jmp
lret
test
jecxz
hlt
push
shlb
in
dec
repnz
lret
imul
fldt
push
pop
adc
cwtl
jge
mov
dec
mov
and
jnp
fs
dec
inc
mov
dec
test
jg
ds
inc
scas
push
jecxz
jne
loopne
jbe
jb
jecxz
pop
cwtl
adc
xlat
inc
cmp
mov
inc
mov
mov
fwait
dec
xlat
inc
cmp
dec
mov
mov
vmovss
out
mov
popf
push
jae
xlat
fadds
decl
in
adcl
divb
push
fcoml
jmp
add
dec
xor
out
xchg
mov
addr16
pop
cwtl
dec
stos
inc
inc
imul
pop
jp
rorl
mov
pop
sti
cmc
cbtw
sub
pop
mov
push
mov
pop
inc
imul
sti
loop
push
pop
add
fmul
rol
cli
cs
push
push
cmpsl
add
or
out
cwtl
or
ss
or
xchg
push
fmul
xchg
inc
out
sti
pushf
out
out
paddw
lret
cmp
int
mov
adc
mov
inc
xchg
inc
jge
addl
popf
mov
xor
jle
daa
insl
rorb
fdivl
push
mov
jle
jae
push
loope
cmp
lcall
addl
fcoms
cmp
shlb
xchg
xchg
pop
popa
test
adc
out
mov
mov
push
xchg
add
jge
loopne
and
cmpsb
jnp
jge
fs
jo
lret
cmp
mov
test
push
pop
xor
notl
pop
ret
add
sbb
test
mov
and
les
inc
mov
rcrb
cmpl
loopne
repz
jb
jae
sub
dec
fsubl
out
or
roll
jecxz
sub
int3
stc
or
lret
jle
xor
outsl
jle
mov
mov
pop
cmpsl
stc
jmp
pop
and
push
int
sub
jecxz
xchg
fsubrs
ds
pop
mov
lods
xchg
adc
repnz
out
push
push
movsl
or
pop
je
ds
xor
imul
scas
and
pop
sub
adc
pop
add
out
mov
jae
in
leave
push
sub
sbbb
daa
cwtl
jns
mov
cmpsl
mov
fnsave
icebp
in
sub
stos
in
sti
push
and
mov
push
testl
sbb
xor
in
sbb
iret
mov
loopne
mov
rorl
lea
inc
ja
mov
stos
popa
pop
jl
fsubrs
das
jmp
pop
dec
addb
out
pop
jnp
sub
dec
cmp
xchg
lahf
mov
pop
lret
mov
fnstcw
mov
jo
sub
out
inc
shrl
repz
adc
adc
cmpsl
mov
enter
scas
xchg
lods
cmp
sarb
pop
jae
fldl
adc
jae
sbbl
dec
mov
aaa
add
fdivrl
aaa
jb
test
mov
dec
sbb
xchg
ret
sub
iret
push
mov
pop
iret
ljmp
shl
aad
rclb
cmpsb
pushf
fsubr
stos
mov
pavgw
incl
lods
xchg
aam
neg
inc
es
xchg
xor
mov
movsb
es
es
pusha
adc
test
adc
mov
fucompp
jnp
cli
lret
dec
shl
or
lahf
insl
sbb
ljmp
mov
cs
mov
cmp
mov
sub
push
pop
add
inc
cli
jmp
mov
jne
push
sub
adc
and
push
sbb
xchg
int
add
xchg
outsb
mov
xorl
imul
loope
fadds
pop
hlt
scas
push
in
cltd
sbb
scas
loopne
fbld
mov
push
adc
pop
sarb
pusha
xchg
icebp
movsb
test
pop
mov
mov
or
fld
add
and
iret
jae
cld
push
imul
sbb
sbb
dec
in
daa
add
lret
mov
icebp
sub
push
lods
sub
mov
mov
pop
lea
push
rcrb
cld
sub
rorb
push
jl
cmp
cwtl
lret
cmp
dec
aaa
insl
incb
in
cmpsl
sbb
dec
ss
jns
pusha
cli
movsb
mov
inc
or
loop
loop
pop
add
add
xchg
jae
push
stos
push
mov
jae
inc
out
push
sub
dec
add
add
inc
icebp
sbb
jmp
and
test
mov
push
and
adc
enter
jo
sbb
int
out
xor
pusha
jge
movsl
loopne
lods
add
enter
test
iret
cmp
add
leave
jg
imul
mov
repz
mov
sub
outsl
xchg
shlb
movsl
hlt
mov
and
dec
and
enter
out
push
int
subb
fdivs
jecxz
xchg
js
xor
jo
loopne
sub
add
mov
cmp
lcall
movsl
mov
mov
nop
cli
add
adc
int3
pop
sbb
mov
xchg
loop
or
in
xchg
xchg
xchg
ss
loopne
int3
mov
jmp
lods
pop
cld
mov
insl
orl
dec
jp
jecxz
push
cmc
cmc
lea
les
add
jo,pn
int3
ss
sahf
inc
sub
fsubs
or
stc
add
cmp
pushf
inc
jb
arpl
inc
mov
aam
xlat
aad
stc
mov
inc
sbb
mov
in
cmpl
xor
and
jl
stc
loope
in
mov
movsb
push
jbe
in
sub
cs
movsb
scas
ss
stc
lock
mov
jg
mov
mov
in
loopne
jo
test
push
jae
jmp
mov
popf
mov
ja
scas
mov
pop
jmp
sbbb
jge
jno
sub
adcb
stc
shl
cld
sbb
xor
jle
mov
dec
sbbl
outsb
dec
xchg
jle
mov
adc
sbb
shrb
insl
or
xchg
pop
lret
out
jne
add
fstpt
mov
xchg
ja
cs
sti
cmp
stos
mov
mov
cmp
addl
popf
and
data16
cmp
xchg
outsl
jbe
int3
aas
fidivl
cltd
fs
fisubrl
mov
ljmp
iret
cmp
dec
pusha
mov
xchg
add
xchg
sub
pop
mov
add
push
pop
cs
lret
loop
jl
xlat
lods
addr16
int3
ret
cmp
xchg
mov
int
jns
nop
popa
mov
repnz
adc
out
mov
repz
jp
lds
jne
cs
movsl
repz
ljmp
xor
push
in
jo
adc
or
insl
mov
lea
wrmsr
and
adc
repnz
ret
xor
pop
mov
cmp
pop
dec
cmpl
orl
push
ja
sub
mov
das
in
sub
mov
ljmp
dec
stc
jmp
mov
adc
aam
jmp
ret
popf
or
inc
cmpsb
and
rolb
and
movl
int
jo
lods
xchg
das
mov
and
dec
data16
mov
inc
stc
clc
leave
orb
dec
je
mov
xor
push
shrl
push
xchg
jbe
out
call
cmp
inc
lods
and
adc
cwtl
daa
dec
cmc
insb
and
adc
lods
inc
fisubrl
and
out
mov
dec
and
pop
sub
xor
jl
bound
imul
insl
mov
jmp
leave
sarl
lret
fucom
inc
imul
imul
mov
and
push
inc
and
mov
mov
aam
and
push
add
cmc
pop
shrl
ret
lock
cltd
cmc
test
in
cmp
mov
shl
jae
lock
xchg
cmp
adcl
aaa
adc
adc
out
fisttpll
push
inc
sub
leave
mov
xor
das
jb
mov
xchg
aam
mov
sarl
les
cwtl
sub
pop
push
xchg
cmp
push
xchg
call
cmc
cltd
cs
mov
or
mov
inc
leave
mov
out
popf
or
xor
into
or
jne
inc
jp
pop
test
adc
ja
mov
clc
aas
push
mov
sbb
cmpsb
subb
fwait
xorb
in
sub
out
mov
jne
outsb
mov
inc
jp
cmpsl
fbld
mov
push
movsl
jl
pop
inc
fcoml
cmp
dec
insl
mov
fcoml
inc
fwait
mov
sbb
and
xor
test
pop
idivb
sbb
dec
adc
mov
outsl
and
add
xchg
es
cmp
pop
jp
subb
push
add
cmp
mov
lret
pop
repnz
sahf
ret
and
enter
popa
jnp
push
aam
cmp
jl
popf
mov
cli
cmpsb
gs
adc
int
mov
push
jnp
outsb
fisubl
aas
je
push
cmpsb
inc
sar
int3
or
adc
or
jne
mov
inc
and
inc
mov
xor
xchg
repz
mov
adc
push
rcll
inc
jnp
int
pop
mov
stc
out
adc
sub
aam
and
xchg
sbb
jae
jge
mov
popa
inc
movsl
xchg
in
pop
push
push
jns
aad
addr16
add
cmp
data16
call
loopne
lret
rcll
ja
mov
push
clc
scas
loop
fsubrl
fnsave
movsl
mov
arpl
rcll
pop
inc
loope
sbb
sarb
mov
inc
in
dec
jg
fisttps
lret
xor
xchg
mov
loopne
inc
out
mov
push
xchg
sti
inc
in
sub
mov
imul
xor
cmp
push
mov
mov
or
xor
imul
adc
lds
cmpsb
lods
xor
ds
dec
int3
adc
mov
outsl
xor
ds
or
iret
xchg
mov
idivl
or
inc
imul
adc
dec
mov
cmp
mov
out
and
mov
cmove
fdivrl
sub
adc
xlat
mov
out
leave
sarb
xor
rorb
xchg
mov
push
imul
and
ljmp
bound
sti
sbb
adc
pop
int3
inc
pop
mov
jno
fidivl
aam
into
arpl
mov
fsts
mov
test
in
mov
adc
inc
icebp
mov
pop
call
sub
cmc
in
sti
cwtl
dec
fstpl
adc
push
arpl
and
inc
xlat
icebp
fdivl
outsb
mov
imul
dec
gs
cmpsb
cmp
in
push
fcoms
cmp
mov
or
push
jp
leave
es
mov
rcrl
cmpsb
or
in
push
notb
mov
pusha
icebp
xor
arpl
xor
stc
mov
sub
pop
outsl
adc
into
jo
jecxz
adc
mov
imul
fdivrp
imull
pop
rcrl
and
sbb
loop
ror
pop
in
jle
rorl
mov
jo
mov
push
inc
cmp
inc
adcb
scas
or
ret
cmp
and
mov
mov
mov
mov
sarl
dec
jb
push
lock
sub
ss
mov
lods
aad
jle
and
loope
push
xchg
jg
cmc
add
xchg
les
mov
dec
outsb
cmp
and
and
sti
repz
cmp
sub
test
add
jbe
lret
mov
scas
xchg
jb
mov
inc
mov
ljmp
popa
loopne
adc
sarl
or
frstor
add
lcall
cmc
in
lods
in
shll
rcll
addr16
pushf
sti
sahf
or
and
adc
in
mov
movsl
add
adc
test
imul
push
sbbb
hlt
pop
inc
jne
push
vpunpckhbw
lret
jae
aaa
or
push
out
cmp
mov
push
adc
js
adc
vpaddb
filds
mov
xchg
adc
pop
pop
jge
jmp
stos
pop
setge
dec
int
into
or
lea
nop
add
into
sub
cmp
fmull
aam
mov
mov
pop
test
scas
test
pusha
in
iret
jns
mov
testb
xchg
sti
icebp
in
mov
push
xor
xor
cmpsb
lret
mov
and
pop
and
xchg
sahf
push
jl
ret
mov
sarb
dec
adc
adcl
mov
jge
lds
je
lret
mov
mov
in
mov
enter
or
nop
icebp
mov
dec
imul
movsl
and
pop
aad
inc
cwtl
cmpsb
add
mov
jo
enter
push
sub
enter
push
clc
cltd
push
cld
fwait
sbb
lret
clc
cmp
jne
push
adc
pusha
out
jo
jp
adcb
push
cmp
push
in
push
push
aam
push
or
jbe
hlt
push
idiv
data16
cmp
loopne
push
shrl
mov
sub
add
rclb
add
cmpsl
in
adc
mov
fsub
pop
dec
insl
dec
dec
lea
dec
inc
inc
fnsave
xchg
bound
js
arpl
sbb
imul
test
dec
bound
loope
insb
inc
or
xchg
mov
push
jecxz
and
jl
mov
mov
add
pop
mov
mov
mov
fimuls
push
out
xor
je
data16
xor
fsubs
stos
pop
push
enter
jge
and
mov
fcomi
cld
xchg
in
push
xlat
mov
in
cmp
sub
sbb
cltd
sahf
jno
mov
and
lods
xor
xlat
inc
push
ret
jge
or
xlat
adc
cmp
jo
in
xchg
sbb
test
dec
in
shll
inc
into
push
push
sahf
push
inc
fsubrs
mov
mov
sub
xchg
xchg
in
jecxz
hlt
cmp
sub
jmp
movsb
fisubrl
pop
xor
ror
xorb
repz
mov
sbb
sbb
sti
mov
or
pop
dec
stos
xor
mov
mov
imulb
daa
gs
jne
sbb
aas
aas
xchg
push
inc
mov
push
push
dec
and
out
sbb
mov
or
xorb
fs
aaa
jmp
out
in
leave
pop
leave
mov
push
fistpll
mov
loop
mov
pop
mov
in
repnz
xchg
imul
shll
mov
adc
mov
cmp
mov
push
pop
andb
jge
cmp
movsb
add
mov
pop
hlt
cmp
cli
imul
pop
xor
jbe
dec
sahf
iret
inc
mov
jb
sbb
scas
pop
xor
push
mov
add
or
es
pop
jae
std
jae
cmp
sbb
ret
scas
inc
and
inc
mov
xor
lods
sbb
dec
cld
add
decl
dec
or
cmp
icebp
inc
inc
pushf
lret
inc
cwtl
dec
mov
sub
int
leave
enter
lea
mov
aad
ret
sarb
insb
pop
mov
or
cltd
adc
jb
push
sahf
cmp
adcl
push
pop
xor
dec
lods
rolb
sbb
xor
iret
data16
push
and
nop
cmp
pop
xchg
in
push
testb
xchg
xchg
stos
insl
xor
or
flds
xchg
or
jmp
push
sub
pop
sbb
sub
push
xchg
xor
jae
mov
ja
je
fs
jb
mov
test
lea
daa
push
fistps
fistps
xlat
leave
out
mov
cmp
sbb
pop
js
push
or
cmpsl
negb
subl
xchg
xchg
xor
jge
xor
and
out
xor
add
dec
sbb
imul
xchg
xlat
shrb
jl
ss
jge
adc
sbb
out
cmp
jl
ret
or
movsl
cmp
adcb
sahf
into
jb
negb
push
mov
inc
loope
xor
outsl
mov
sbb
xchg
push
stc
sub
scas
jp
roll
mov
mov
xchg
test
cltd
sbb
fidivl
jge
pop
xchg
lea
and
push
in
loope
mov
mov
jns
shl
addr16
aas
call
int
ja
lods
in
in
lret
mov
fwait
push
fs
rcll
dec
and
add
mov
icebp
in
mov
or
dec
mov
subb
in
push
frstor
xchg
cmpl
lds
adcl
int3
movsb
inc
test
lahf
cmpl
xchg
iret
cwtl
xchg
push
jmp
in
inc
mov
jne
inc
jle
js
pop
ds
xorl
popf
pop
pop
ja
pop
repz
pop
stos
pop
mov
xchg
sarb
fs
sahf
adc
add
xor
xchg
shr
in
lock
sub
pop
rorb
mov
or
daa
or
and
dec
sub
inc
jmp
push
and
mov
scas
pop
jl
outsl
xor
mov
or
lods
sub
or
xor
fs
fwait
cmp
jmp
dec
xchg
add
adcl
dec
sti
mov
aaa
mov
test
mov
pop
dec
movsl
ret
mul
hlt
jg
repz
and
xchg
andl
pop
into
inc
jl
ljmp
cmpsb
xchg
jp
pop
lret
cli
clc
icebp
iret
aaa
out
jno
push
xor
sbb
pushf
mov
push
inc
insb
jg
les
jno
out
adc
sarb
cmpsl
faddl
adc
js
pop
ljmp
cs
mov
mov
imul
imul
lods
jp
sub
outsb
add
push
mov
ret
xor
push
sbb
sti
and
jns
mov
sub
adc
xlat
mov
data16
mov
into
or
inc
sbbb
bound
sbb
xor
repz
xor
scas
mul
out
mov
xchg
into
mov
sub
fsubl
sub
jg
dec
lahf
mov
popf
jne
inc
add
and
mov
rcrb
addr16
aas
lahf
inc
lahf
lret
nop
lret
xchg
int3
xor
pop
xchg
adc
loopne
inc
cltd
negb
outsb
and
add
jno
hlt
jp
jmp
sub
inc
mov
mov
push
fisttps
xchg
sub
push
and
shl
xchg
push
jae
cmc
adc
enter
jnp
stos
push
lods
nop
lds
mov
pop
ja
fcomps
xor
lahf
push
out
push
sbb
pop
popa
mov
dec
xchg
rorb
xchg
std
repz
xchg
fistl
mov
mov
adc
adc
sub
in
add
aaa
clc
xchg
mov
sbb
dec
cmpsb
lret
xlat
js
loopne
and
sub
test
aaa
cmpsl
ficoml
int3
rcrb
pop
mov
mov
sbb
scas
cmpsb
mov
cmp
fcmovu
sbb
add
jl
pop
mov
popf
ljmp
jbe
into
adc
daa
adc
sub
ja
and
fstps
outsl
cmc
add
loope
popl
outsb
dec
dec
jns
test
cld
jmp
sti
dec
adc
stc
fcompl
cmp
add
push
or
fs
mov
sti
fldcw
loopne
js
dec
push
mov
out
lock
mov
push
inc
push
repnz
das
fiaddl
insl
dec
mov
repz
sub
mov
negl
cli
lods
outsl
xchg
mov
out
imul
repz
mov
xchg
int
bound
jno
rorb
movsl
fiaddl
into
cmp
mov
jecxz
gs
sbb
test
lea
adc
stos
mov
xchg
iret
sbb
ret
inc
sub
pop
inc
mov
in
xor
pushf
cwtl
mov
sbb
jmp
lea
xor
cmp
sbb
and
inc
fnstenv
pusha
jbe
sbb
pusha
das
sar
xlat
ret
ret
popa
lret
mov
sbb
stc
es
jp
fstpl
cli
lock
mov
push
xor
cmp
mov
mov
and
out
mov
dec
and
inc
out
daa
fwait
jge
pop
jl
sbb
scas
std
jb
dec
lods
es
adc
out
push
shlb
fmuls
jge
or
lds
lock
inc
add
jbe
or
fnstcw
lds
out
xlat
mov
mov
push
lea
cmp
or
dec
inc
sub
mov
in
pop
das
test
pop
mov
add
dec
and
or
mov
cmp
leave
aad
lock
pop
int3
test
hlt
xor
hlt
sbb
cmp
pop
xchg
out
cmp
aas
test
outsl
mov
scas
arpl
sub
icebp
jnp
cmp
mov
inc
divl
inc
fldln2
in
ljmp
cmpsb
call
cmp
xchg
cmp
jns
lods
imul
leave
xor
test
imul
dec
or
jnp
ficompl
mov
cld
in
adc
fwait
pusha
popa
mov
cmpsl
addr16
daa
xor
loop
decl
xchg
mov
adc
repz
push
in
mov
and
and
push
lods
popf
adc
xor
lret
fdivrs
jp
sti
lock
adc
lret
dec
xchg
ret
dec
incl
xchg
xor
outsb
mov
inc
loop
ds
test
inc
xchg
push
call
ljmp
jnp
pop
push
addb
mov
insl
mov
pop
push
adc
xchg
ss
imul
test
fcompl
lea
test
mov
mov
push
push
cmp
aas
dec
sub
stos
daa
pop
sub
hlt
aam
in
xor
lahf
sbb
mov
mov
adc
xchg
and
mov
or
daa
or
push
sbb
ss
adc
ss
je
imul
pop
add
mov
daa
dec
scas
std
push
rcrl
lock
mov
not
cmp
jge
test
in
scas
mov
xchg
jo
mov
leave
mov
sub
outsl
ja
loope
icebp
mov
int3
pop
adc
mov
ret
push
loop
add
inc
xorb
sbb
lret
pop
lods
popf
cmp
cmp
jns
adc
loope
movsl
lcall
and
adc
ss
dec
mov
jg
jle
enter
jl
mov
stos
mov
insb
popa
fistps
and
dec
fdivr
mov
imul
xor
add
push
cld
xchg
pusha
imul
mov
hlt
jbe
lcall
push
test
lods
cmpsl
dec
jmp
rolb
lret
adc
cmpsl
inc
adc
adc
scas
sub
outsb
push
xchg
lock
add
xor
mov
ret
fildll
cli
or
pop
das
fst
dec
fsubrp
insl
stos
out
iret
ret
mov
lcall
call
imul
popa
enter
xchg
jns
test
stos
and
pop
rcrb
dec
lret
repnz
mov
dec
inc
pop
ja
push
addb
xlat
push
mov
frndint
sub
jne
inc
or
or
xor
aaa
pop
xor
jg
mov
fucomi
pop
idivl
jbe
inc
leave
xor
popa
or
pcmpgtw
jns
add
inc
rclb
xchg
mov
daa
mov
xchg
lods
inc
lds
outsb
pop
jl
xchg
mov
test
push
mov
fidivl
ret
bound
push
jno
jo
lcall
ret
shr
sub
lods
popf
mov
imul
cmp
mov
sub
push
out
sbb
xchg
scas
add
jecxz
imul
adc
add
sbb
mov
outsb
les
repnz
imul
adc
mov
ljmp
jb
jae
jno
adc
lods
jecxz
mov
push
jb
insb
cmp
mov
scas
dec
mov
jmp
hlt
rclb
dec
lea
loope
imul
xor
sbb
mov
mov
mov
xor
hlt
cmc
mov
rcl
cmpsb
inc
stos
xchg
mov
jbe
dec
sbb
lret
cmpsl
push
mov
mov
fcmovnb
dec
enter
or
fadds
sub
sbb
mov
push
ret
ror
je
inc
enter
loop
mov
in
mov
mov
mov
and
pop
mov
mov
pop
pusha
int3
mov
pushf
mov
or
cltd
rcll
mov
and
jecxz
and
or
icebp
or
enter
jmp
dec
data16
imul
stos
or
sbb
ljmp
loopne
ljmp
sbb
or
pusha
int
xor
push
sub
dec
popl
stc
inc
jmp
add
xchg
cltd
lahf
mov
out
sub
jno
mov
and
sub
xor
jbe
lods
xor
xlat
push
xlat
and
in
ljmp
aam
and
fprem1
stos
and
add
push
out
or
and
sbb
xor
mov
das
outsl
ror
fcoms
out
pop
or
stc
pop
jecxz
enter
hlt
leave
ja
scas
dec
mov
mov
pop
shr
xor
add
shlb
cs
cmp
xchg
push
inc
aas
in
cltd
or
ffreep
pop
daa
adc
dec
negl
inc
sarb
or
xchg
inc
out
into
fistl
mov
cs
mov
add
fwait
push
sbb
stc
push
daa
lcall
or
sub
arpl
lret
in
mov
sbb
push
fstl
loope
jp
aam
dec
cmp
aas
out
clc
mov
rcrl
cmpsb
or
xchg
xchg
lcall
hlt
jne
lods
nop
mov
xchg
fnsave
in
psadbw
fs
xchg
sbb
loopne
in
outsl
mov
mov
push
pop
pop
repz
cli
es
xchg
cs
sti
or
push
add
xchg
dec
xor
pop
mov
sahf
icebp
hlt
loope
sarl
or
lds
mov
cmp
mov
mov
je
js
popa
xchg
dec
add
je
or
pop
pushw
leave
pop
inc
stc
mov
pop
add
outsl
pop
jl
or
adc
xchg
cmp
inc
out
pop
or
je
mov
cmp
pushf
outsb
xor
push
lods
pop
mov
negl
fnstsw
xor
xor
jns
mov
in
xchg
dec
dec
sub
adc
cmp
int3
inc
mov
mov
out
fistpll
fisubs
mov
add
jmp
dec
and
cmp
sub
dec
fnsave
sbb
mov
test
mov
out
les
out
jno
add
imul
push
mov
sub
xor
aad
fwait
mov
mov
dec
jg
inc
xlat
cmp
xchg
sub
mov
std
xchg
sub
int3
inc
pop
data16
fisttpll
cmpsl
jmp
scas
push
loopne
jecxz
in
insb
sti
idivl
lret
mov
adc
dec
jecxz
push
pop
leave
sub
movsb
mov
inc
xchg
pop
mov
data16
jp
sbb
dec
ljmp
enter
mov
pop
les
jp
dec
test
mov
cmp
dec
mov
clc
xchg
pop
and
mov
inc
in
adc
lock
rcrl
test
mov
lea
cwtl
in
mov
call
mov
or
and
push
out
out
movsb
std
pop
dec
xchg
jae
iret
popf
aam
popa
ficoms
pop
xchg
nop
pop
cmp
pop
cmp
addr16
xchg
hlt
sbbl
in
pop
sbb
sub
cmp
sti
jmp
lock
scas
or
cmpsl
les
inc
lods
add
push
repnz
rorl
cli
cmpsb
int3
rol
stos
add
mov
dec
sub
mov
out
jecxz
add
pop
je
mov
adc
clc
inc
test
out
inc
in
andl
sbb
nop
ljmp
ljmp
or
adc
jns
ss
push
sbb
pop
mov
hlt
jbe
and
jge
lds
aam
sub
cmp
aam
sub
insl
pop
sar
add
test
mov
stos
mov
dec
adc
popa
xor
repz
mov
cmpsb
pop
leave
shr
inc
mov
and
out
and
outsl
pop
add
movsl
sar
or
xor
push
push
add
scas
cmp
lcall
push
sbb
rcl
push
mov
mov
push
lcall
xor
mul
cmovns
fsub
add
push
jle
inc
lcall
fnsave
arpl
inc
loopne
in
lods
lds
adc
movsl
pushf
mov
test
jae
pusha
push
xor
testl
mov
cmp
cld
cmpsb
mov
ret
cmp
add
add
cmpsl
outsl
push
xor
push
jnp
popa
rcr
das
repz
fmuls
cmp
data16
icebp
cltd
stos
test
aad
daa
xlat
inc
mov
adc
sbbl
lret
inc
adc
mov
aas
mov
adcb
push
data16
xlat
xor
adcl
or
xchg
inc
sbb
push
pop
fnsave
jne
test
rcl
xchg
xor
jne
adc
and
mov
test
add
sub
aam
nop
xchg
ret
rcl
stc
jmp
push
iret
xorb
dec
incl
rorb
mov
sbb
xchg
push
cltd
mov
dec
push
push
pushf
shlb
shlb
sbb
pop
ss
aaa
movsb
leave
cmp
fwait
ret
and
mov
fmulp
dec
mov
lret
decl
sbb
push
mov
pop
lods
or
push
mov
sub
out
pop
outsl
and
ret
cld
sub
clc
call
add
stos
popl
test
pop
mov
data16
in
adc
sub
or
jmp
fisubs
mov
lods
mov
inc
aam
and
clc
jbe
jno
mov
xchg
mov
lods
iret
and
sub
fsubrs
lahf
shlb
jb
pop
lods
cmpsb
loope,pn
negb
in
inc
mov
push
cmpl
cmp
jp
andl
shrb
pop
pop
call
mov
mov
pop
enter
mov
push
repz
mov
das
out
nop
pushf
es
pop
repnz
outsl
rcr
imul
push
push
pop
cwtl
ret
mov
cli
cld
imul
lock
fiadds
xchg
adc
mov
lcall
std
cs
jne
and
lret
inc
icebp
mov
aaa
imull
cmp
out
addl
mov
mov
mov
pop
mov
mov
mov
popf
iret
andl
lods
mov
out
cltd
outsl
dec
in
xchg
fistpl
movsl
inc
jg
std
inc
jl
xor
lods
add
xchg
xor
add
mov
add
mov
rorl
mov
xchg
add
stos
out
rclb
mov
jmp
add
mov
add
pop
imulb
push
sbb
movsl
cmpsb
iret
nop
and
popa
adcb
rorl
or
popl
push
xchg
push
cmpsb
stos
gs
int3
fs
jbe
dec
scas
pusha
stos
jb
push
mov
pop
aad
mov
cmpsl
out
add
pop
dec
or
or
cli
out
pop
xchg
ret
and
out
pop
xchg
daa
and
mov
mov
incl
insb
push
xchg
and
and
cmp
into
test
cmc
jg
repz
lock
xorb
jmp
ret
fwait
inc
xchg
pop
aam
sub
sbb
cmp
fucom
clc
loopne
xor
xchg
fucomp
out
sbb
sbb
inc
into
mov
mov
repz
mov
call
and
cmc
mov
aaa
mov
mov
loopne
fwait
cld
testl
xabort
dec
rcrb
or
loopne
std
jmp
popf
loopne
xor
inc
pop
je
pop
test
adc
fcomps
jmp
mov
pop
jle
clc
xchg
mov
testl
repnz
mov
inc
inc
movsl
or
imulb
pop
mov
sbb
dec
pop
add
jge
dec
add
and
push
inc
push
lcall
lcall
test
lds
mov
inc
and
jg
scas
and
jle
adc
test
xchg
jg
loop
movsl
mov
cli
ja
loop
xchg
mov
es
leave
mov
test
cmc
and
ficoms
divb
testb
movsl
cmp
add
add
inc
push
mov
adc
cmpsb
xor
ja
and
pusha
cmpsl
add
pop
fwait
xchg
data16
loopne
icebp
es
std
xchg
sahf
pushf
mov
sub
mov
sub
jecxz
test
ret
adc
in
lret
out
cmp
fcomps
inc
outsb
mov
rcrb
call
aaa
mov
insb
mov
adcl
jmp
das
and
test
cld
hlt
je
cmp
mov
jecxz
adc
test
pusha
es
xor
into
repnz
pop
adc
arpl
inc
cs
or
jecxz
cmpsb
insb
pop
jbe
xchg
xor
fildll
ret
push
inc
je
push
dec
stc
shll
inc
rorb
adc
pushf
mov
xor
not
aas
lcall
fwait
or
dec
and
mov
sarl
cwtl
and
movsb
dec
aam
ljmp
or
loopne
idivb
popa
ret
dec
leave
cmp
aam
stos
mov
lret
mov
movl
sbb
mov
pop
outsb
lret
pop
repz
and
test
cmp
into
mov
adc
add
data16
xor
shll
rclb
pop
inc
and
dec
outsb
sub
mov
sti
pushl
sub
shrb
scas
push
jl
mov
pop
andb
push
mov
xor
addr16
push
pop
pusha
add
jne
nop
sbb
lods
jmp
dec
lock
lds
mov
sbb
jmp
jle
sti
dec
rorb
nop
rcrb
sub
and
cmp
inc
repnz
mov
aam
out
inc
cltd
loope
or
xor
sbb
lock
shlb
mov
pop
int
mov
nop
add
daa
or
rorb
cmpsl
loop
xor
enter
inc
push
pop
or
push
pushf
dec
or
xchg
inc
push
js
stos
jl
pop
mov
popfw
ror
aad
jno
repnz
fimuls
incl
cmp
test
mov
outsb
int3
mov
push
cmp
lret
pushf
xchg
or
leave
cmpsl
movsl
in
push
rorb
mov
push
movsl
dec
mov
loop
loop
hlt
and
pop
and
inc
in
lock
jle
je
stos
jno
test
mov
mov
lret
add
les
xlat
test
sbb
fcomip
cmp
mov
test
fnstenv
or
imul
pushf
adc
int
stos
imul
in
and
pop
lret
cli
lds
or
movsb
cmpsl
add
fmull
icebp
out
icebp
or
outsl
sub
test
pushf
mov
popa
rcrl
mov
pop
add
mov
nop
mov
jo
mov
mov
das
test
pop
add
test
stc
push
sbb
adc
add
push
mov
xchg
jecxz
add
push
or
dec
cmpsl
push
cltd
push
out
add
pop
hlt
insb
or
lahf
dec
adc
cmpb
xchg
pop
pop
mov
loope
fisttps
mov
jne
mov
sub
ss
outsl
out
mov
push
mov
xchg
cpuid
repz
mov
stc
mov
mov
fwait
das
or
xchg
xor
ljmp
pushf
pop
xchg
mov
sbb
sti
roll
or
mov
add
xchg
pop
cmpl
pop
lcall
addr16
mov
sbb
cltd
cmp
clc
inc
inc
mov
std
data16
stos
jne
xchg
imulb
arpl
jnp
dec
cmpsl
loop
push
inc
rcrl
jmp
mov
jo
dec
mov
mov
dec
int3
ljmp
orb
out
mov
sub
inc
inc
pop
lds
js
inc
rorb
or
jle
repz
xchg
mov
movsl
xchg
les
cmpsb
mov
pusha
fidivrl
imul
insl
icebp
pop
je
mov
sbb
cmp
mov
mov
dec
xchg
xchg
jp
daa
mov
aad
and
xchg
push
aaa
in
mov
adc
fs
mov
cmp
aaa
into
dec
out
mov
push
popa
xchg
stc
jbe
es
imul
and
jne
push
add
vmread
outsb
mov
loopne
push
test
mov
jo
fcomp
jne
add
jmp
mov
enter
add
mov
rorb
dec
mov
adc
and
or
les
dec
cmp
xchg
adc
lea
imul
int3
std
stc
add
add
add
fwait
pop
push
test
pop
mov
or
adc
testb
sub
popa
stc
sbb
popa
subl
divl
jno
mov
movsb
insl
repnz
jns
mov
mov
cmp
add
push
pop
sub
daa
mov
inc
das
aaa
add
flds
dec
inc
and
adc
xor
rorb
push
aam
xchg
inc
cmp
ja
in
cmp
jb
xchg
call
shrb
push
push
lock
inc
aad
pop
jb
cli
cmovb
es
es
jae
sub
pop
movsl
pop
es
or
ret
and
push
push
pop
fnstenv
mov
and
pop
sub
fdivr
js
int
in
stos
pop
lea
aas
pushl
cmp
in
arpl
into
xchg
pop
push
xchg
dec
mov
and
mov
es
push
std
arpl
fs
insb
mov
jl
pop
dec
push
sbb
iret
pusha
push
mov
add
cmpsb
lahf
stos
push
lahf
mov
xchg
sbb
fisttpl
pop
in
call
mov
ja
jne
pop
xor
add
mov
stc
mov
sub
lcall
jp
insb
mov
dec
std
ljmp
mov
jge
addr16
inc
adc
loope
cltd
push
jo
icebp
fadds
push
inc
out
xchg
outsb
pop
out
lret
loop
in
cwtl
mov
jb
nop
fdivrs
mov
mov
sub
jnp
aam
cmp
lea
inc
mov
jno
das
push
adc
xchg
jae
ret
push
pop
xchg
in
repz
mov
push
or
int3
mov
inc
je
inc
push
aam
dec
push
fisttps
data16
sub
scas
nop
push
inc
add
ss
fs
mov
pop
mov
xchg
or
push
add
xchg
inc
shrb
push
xor
push
jo
ficompl
bound
push
jmp
rcl
adc
jne
sbb
mov
icebp
jnp
test
popf
adc
push
dec
icebp
and
and
enter
fldcw
aas
push
aam
and
rcll
subl
sbb
outsl
std
adc
pusha
cmp
push
cmp
xchg
outsl
cltd
mov
sbb
xor
push
xor
lock
js
sbb
jne
mov
mov
mov
and
adc
outsb
test
aam
js
movsl
pop
jae
lock
jbe
lods
lret
cmp
sbb
xchg
ja
mov
push
dec
cmp
test
mov
jno
mov
and
cld
dec
sti
rolw
xlat
add
daa
call
dec
into
rclb
test
rol
push
mov
cmp
popf
shrb
cli
mov
test
and
stc
mov
into
mov
cld
std
mov
inc
add
lea
jne
inc
rcll
popa
lods
xor
pop
pusha
aaa
fmull
push
and
pushf
sbb
push
cmpsb
jbe
xor
iret
shlb
pusha
pop
popa
push
mov
cmpsb
pushl
xchg
jno
das
and
mov
mov
leave
int
inc
or
decb
ficompl
jno
jno
enter
loop
popf
cld
inc
mov
loope
mov
xchg
in
out
shlb
xor
addr16
jnp
add
inc
repz
ret
xor
fcoml
fscale
xchg
bound
sbb
mov
add
out
fldt
xchg
xchg
idivl
push
out
js
insl
call
cmp
xor
jbe
out
sahf
dec
xlat
mov
rcl
sbb
fldl
into
inc
mov
fwait
pop
push
arpl
dec
mov
sub
push
dec
sti
xor
push
popa
mov
cmp
xchg
mov
inc
ret
cmp
inc
call
mov
mov
xchg
sbb
pop
bound
mov
jb
out
bound
sbb
inc
outsl
notl
jno
pop
fisttpll
cmp
in
aas
shlb
sub
add
stos
push
cltd
dec
or
out
mov
sub
sbb
les
adc
shlb
pop
les
cmp
dec
jmp
cmp
fstps
stc
mov
sbb
mov
shrb
xchg
add
sub
inc
clc
xchg
ljmp
fwait
push
out
sbb
push
jl
pop
sahf
jg
data16
ffree
mov
icebp
cltd
sub
cmp
scas
add
inc
into
cmp
sbb
jae
or
inc
testb
iret
mov
int3
mov
scas
pop
xor
std
icebp
pop
push
mov
dec
xor
jne
rcll
sbb
pop
inc
jae
mov
cwtl
inc
pop
cs
mov
stc
faddl
imul
or
xor
lds
add
das
cmpsl
pop
fiadds
std
and
repz
mov
mul
adc
stos
push
xchg
sub
xchg
inc
jb
xchg
push
nop
lea
push
jno
push
mov
jp
and
xor
dec
lret
aaa
pop
repnz
pop
dec
repz
popa
or
push
xor
cmp
sbbl
call
outsb
lds
xchg
dec
call
daa
cmp
out
xor
sub
or
xor
fwait
and
outsl
mov
sti
repnz
and
ret
gs
mov
mov
lds
xorl
hlt
int
cmpsl
and
in
jle
lcall
lret
or
roll
push
stc
je
in
mov
and
das
adc
sti
test
and
dec
iret
jno
cli
popf
mov
xchg
jle
add
cmpsl
test
mov
out
adc
orl
or
mov
pop
push
popf
ret
int3
daa
pop
lods
fnstenv
decl
daa
add
mov
mov
jb
fidivl
xor
dec
dec
xor
pop
adc
mov
imul
subl
or
add
add
or
into
test
cltd
xor
adc
mov
test
inc
arpl
cltd
imul
lea
dec
fldcw
push
sbb
in
mov
adc
xor
xchg
sbb
and
add
pop
lds
imul
adc
add
aas
mov
loop
pop
adc
and
rcll
fwait
mov
out
xchg
sub
in
inc
loopne
pop
test
mov
mov
dec
cmp
out
add
xchg
and
jne
xor
sbbb
pop
add
bound
sub
xchg
fbld
je
mov
lcall
scas
in
mov
icebp
cmp
dec
in
jle
roll
loopne
push
mov
loope
rcrb
xor
shl
push
sbb
imulb
int3
sbbb
call
in
out
outsl
sbb
outsl
dec
push
mov
mov
jmp
ds
stos
stc
int
xchg
lret
icebp
insl
inc
les
outsl
xlat
mov
popa
push
xchg
mov
out
mov
xor
mov
cmp
aaa
mov
sbb
xchg
jne
popf
mov
das
push
outsl
inc
fisubs
jae
int3
mov
jle
xor
or
jns
cmp
mov
lods
pop
loope
cmp
cmpsl
inc
fsubl
mov
jge
and
aaa
sub
xor
mull
insb
mov
shl
add
mov
inc
add
repnz
andl
jge
mov
daa
in
xchg
sbb
cwtl
mov
xchg
test
inc
jo
fdivp
mov
jnp
aam
lock
test
or
jns
gs
sarb
icebp
xchg
mov
push
mov
aad
mov
mov
nop
mov
hlt
stos
icebp
jge
jl
or
and
loope
in
sbb
repz
arpl
jge
xchg
cmp
adc
sahf
sar
mov
pop
xchg
cmp
jmp
inc
movsb
mov
jmp
aas
jmp
cmpsl
imul
cwtl
pop
out
lods
sub
xchg
cmp
fimull
outsl
pop
xchg
sti
test
fs
pop
gs
data16
sub
push
rorb
add
adc
int3
jo
in
adc
aad
push
inc
xor
mov
negl
mov
aam
js
test
divl
sti
aam
xchg
test
loope
cld
fsubl
inc
insb
cwtl
sub
je
jle
nop
dec
in
jg
or
in
inc
xchg
outsl
roll
mov
cltd
pop
cmp
jecxz
in
sbb
adc
dec
or
out
sub
loop
std
adc
mov
js
fists
fcoms
lahf
add
mov
adc
xchg
jb
int
jg
mov
jl
xchg
int3
sbb
inc
xor
daa
mov
fiaddl
and
fstpl
leave
mov
ja
jge
pop
orb
je
gs
loopne
mov
add
mov
mov
mov
or
in
dec
pop
popa
xor
mov
sbb
mov
fyl2xp1
fucompp
aam
cs
pop
enter
test
shrl
outsb
sbb
rorl
into
pop
push
push
pop
push
sbb
cs
xchg
sbb
sbb
pop
lret
clc
xor
pushf
popf
push
das
enter
sbb
mov
or
bound
outsl
je
call
es
call
or
aaa
xor
nop
imul
xor
push
lret
js
mov
sahf
insb
dec
pusha
lret
mov
mov
sub
mov
loop
daa
mov
movsl
movsl
clc
popa
push
fmull
inc
inc
add
imul
inc
mov
xor
call
scas
nop
movsl
cmpsb
jl
add
mov
movsl
cld
sub
dec
sbb
mov
fbld
cmc
aaa
jne
mov
or
mov
test
or
lods
loope
jge
xrelease
loop
and
adc
mov
lods
test
push
clc
leave
ja
out
inc
outsb
enter
lcall
testb
sub
ret
dec
push
das
adc
leave
mov
scas
in
iret
cmp
dec
push
pop
sarl
icebp
dec
jnp
mov
push
xor
lret
jbe
ret
push
testb
scas
jmp
pushf
imul
cwtl
inc
imulb
outsl
jmp
mull
mov
test
mov
int3
rorb
js
test
or
adc
hlt
jg
fstl
cmp
adc
mov
and
add
imul
shll
push
jle
call
inc
dec
test
and
push
rclb
shlb
lahf
jp
mov
pop
fmuls
inc
mov
mov
in
mov
sti
push
fists
imul
incl
hlt
adc
pop
rcrl
mov
pushf
insb
lahf
jl
mov
arpl
jmp
lret
shll
std
pop
dec
adc
loope
ljmp
out
cltd
jo
cltd
std
fsubs
sbb
sub
aaa
in
pop
jbe
in
push
push
xchg
pop
in
pop
sub
mov
test
sub
jns
loop
mov
dec
xor
pusha
bound
shlb
orl
adc
movsl
cmp
fsubl
mov
cli
subl
add
xchg
xchg
add
or
stc
je
cmp
pop
out
adc
mov
adc
int
and
jle
outsb
outsl
iret
out
in
ret
dec
pop
pop
fwait
jg
aam
pop
mov
scas
int3
sbb
push
mov
xor
dec
sahf
mov
jbe,pn
inc
jmp
push
es
dec
in
shrl
pop
add
or
stos
leave
fcom
mov
dec
xor
insb
mov
mov
pop
push
cli
aam
push
push
sbb
fbld
add
shll
test
out
lods
pushf
push
bound
sbb
adc
jae
sub
sub
adc
aaa
lahf
ret
xchg
jbe
jmp
lea
sub
push
or
fdivs
in
dec
cld
xor
pop
les
adc
hlt
fidivs
dec
xchg
rol
jne
mov
mov
and
in
pop
cltd
and
push
out
movsl
adc
iret
mov
repnz
incl
test
inc
mov
push
and
mov
cmpsl
mov
ss
shrb
jb
lea
cmp
xchg
call
xchg
xchg
mov
lods
setge
xchg
push
mov
jns
adc
aad
dec
int3
test
jne
pop
imul
sub
insl
xchg
xchg
in
lcall
cltd
mull
and
mov
aam
cmp
pop
nop
mov
out
add
push
mov
jno
dec
inc
adc
xchg
xchg
sbb
mov
daa
outsl
in
aaa
cmp
lcall
cmpsl
scas
imul
cs
and
bound
xor
in
fidivl
shll
movsb
mov
repz
add
imul
out
movsl
pop
lea
xchg
push
rorb
repnz
push
lods
scas
popf
cmp
pop
out
jae
adc
mov
aad
pop
mov
mov
add
pop
daa
mov
int
pop
or
or
inc
stc
xchg
test
push
dec
out
fs
push
icebp
xchg
rorb
gs
dec
test
lcall
out
xor
mov
jp,pt
add
das
sbb
mov
add
push
out
or
cmp
aam
jb
lock
ficoms
repz
pop
pop
in
out
pop
sbb
test
adc
cs
inc
xchg
jp
imul
or
test
int
data16
test
daa
fisttps
mov
pusha
sub
out
jae
sub
ljmp
adc
stos
mov
sarl
out
ja
or
cmp
adc
lds
inc
stc
xchg
cmp
and
fmull
add
dec
pop
loope
test
add
das
int3
pop
cmpsl
aaa
daa
outsl
shll
jne
test
arpl
jb
je
pop
cmpl
mov
dec
xor
add
mov
xchg
movlps
lret
inc
dec
pop
xor
aad
jmp
repz
loope
mov
adc
mov
push
nop
arpl
movl
mov
inc
add
aam
cli
mov
mov
iret
push
add
out
lret
fidivl
xchg
ss
mov
mov
cld
dec
and
dec
arpl
shrb
insb
loop
lahf
test
jb
loope
mov
push
stos
push
push
imul
xor
pop
frstor
movsl
inc
mov
cmpsb
in
dec
hlt
lret
data16
cli
cmpsb
fcoms
xchg
cmp
jo
shr
cmc
push
mov
test
or
push
arpl
cld
add
jecxz
inc
sub
push
ret
xchg
mov
inc
sbb
ror
popf
inc
bound
push
stos
jne
xchg
lahf
les
cmp
cmp
stos
test
lahf
or
cmp
pop
fmuls
push
jae
mov
cmp
sub
xchg
pop
shl
xor
pop
loop
add
adcb
pop
mov
movsl
addl
and
pop
ret
dec
cmc
jae
loope
cmp
fsubr
mov
or
inc
fmull
or
cmp
enter
mov
shrl
repnz
xchg
enter
push
sbb
xchg
loope
sub
cwtl
les
jg
roll
sti
dec
cmp
mov
std
cmovae
jecxz
mov
adc
out
rcrb
test
or
mov
sbb
sub
inc
mov
out
mov
aaa
inc
rol
lcall
aas
and
insl
fsubrs
or
jp
jae
pusha
mov
push
cmpl
addr16
dec
shrl
pop
fs
and
jnp
xor
stc
in
mov
cmp
xchg
dec
shlb
jnp
repnz
lahf
mov
xor
sbb
push
movsb
jmp
aaa
xor
fs
es
jp
lret
mov
dec
test
jne
iret
xorb
idivb
popf
dec
call
mov
xor
cmp
sahf
push
das
fcompl
into
jle
imulb
scas
aam
and
into
ret
lcallw
data16
sarb
push
dec
add
mov
je
lret
imul
popf
or
repnz
cmp
dec
pop
aaa
adc
fildl
in
cli
js
scas
arpl
roll
or
jae
call
pop
inc
shlb
add
jmp
ret
cltd
ret
push
cli
js
xchg
push
clc
sahf
push
mov
jmp
push
dec
xchg
dec
mov
cmpsl
and
or
mov
in
mov
fs
jne
cmc
repz
push
pop
ffreep
fs
call
and
cmpsl
fmuls
orl
repz
icebp
push
fimull
xor
mov
sahf
xchg
inc
lcall
mov
pushf
addr16
mov
push
call
xor
mov
dec
mov
das
pop
push
sbb
pop
inc
jne
adc
adc
in
lahf
mov
scas
mov
sub
mov
out
inc
jp
xchg
lods
or
jp
sbb
cld
push
pusha
insl
cmpl
sarl
adc
rcll
cld
jb
aad
bound
dec
out
arpl
shufps
divb
out
push
icebp
jmp
lea
roll
ret
fnop
roll
gs
bound
test
mov
and
pop
inc
test
aam
pushf
ret
dec
mov
lcall
cmp
test
mov
pop
dec
pushf
and
enter
idivb
aad
mov
sub
pop
movl
jnp
popf
dec
mov
out
mov
push
push
jecxz
lret
dec
lahf
lods
filds
dec
nop
ret
mov
fldenv
aas
leave
mov
pop
mov
lods
mov
push
lods
or
lea
ret
xor
adc
movsb
cmpsl
lret
or
out
push
xlat
ds
mov
mov
mov
int
fdivrl
xchg
sar
xchg
mov
xchg
or
xchg
cli
cmp
out
lds
imul
push
pop
pop
push
xchg
outsb
xchg
pop
lds
jle
adc
mov
mov
ss
adc
mov
fistl
imul
les
lea
xchg
rcll
insb
rcrw
sti
dec
test
scas
cld
mov
mov
mov
jbe
adc
mov
jle
xchg
mov
and
stc
inc
xor
shlb
sbb
pop
pop
and
les
les
lret
jo
lret
cmp
push
ficomps
inc
pop
outsl
inc
out
lds
hlt
mov
fsubp
adc
mov
bound
pop
mov
sub
mov
fistpl
fistl
aad
cmpsb
jno
roll
divl
frstor
mov
rorl
sbb
inc
je
and
out
or
movsb
movsb
mov
loop
push
pushw
ds
pop
lods
sbb
lods
jbe
add
dec
xlat
and
stc
frstor
lods
in
add
and
cmp
jecxz
nop/reserved
sbb
adc
shr
mov
imul
je
push
jbe
mov
int3
repz
mov
loopne
lods
pop
or
shlb
clc
fmul
mov
call
mov
dec
loopne
hlt
mov
or
outsl
jo
int3
lods
pop
and
idivl
jae
jge
and
cli
adc
mov
xorb
cmpsl
bound
data16
ret
addb
sub
jl
push
mov
jle
arpl
xor
mov
mov
mov
jbe
jg
xor
jl
push
inc
mov
fistps
cmc
sbb
gs
aaa
sub
shll
mov
das
mov
adc
pop
push
dec
shll
inc
js
pop
xor
aam
mov
xchg
mov
inc
mov
in
jo
mov
das
or
jns
test
pushf
pop
jg
inc
and
sbb
and
int3
dec
pop
pop
jmp
push
aaa
and
xor
sahf
or
xor
out
add
cmc
roll
sbb
cmp
daa
xchg
stos
fldenv
sub
pop
in
cld
scas
int3
jg
das
insl
shrb
fwait
pop
popl
cs
bound
cmp
pop
adc
insb
adc
ss
push
stos
pop
test
rcrl
jmp
inc
iret
dec
mov
jg
sbb
or
pop
test
push
dec
dec
stc
sub
sbb
mov
jg
imul
xchg
lret
test
and
ficoml
and
sarb
cli
aaa
je
xchg
jno
add
popa
mov
movsl
add
mov
mov
jg
mov
jno
cmp
pop
cs
inc
dec
enter
clc
shlb
jmp
sub
sub
mov
cltd
mov
xchg
mov
and
mov
lods
sub
cmp
outsb
xchg
fsubs
mov
repz
dec
jmp
aas
jbe
sub
sbb
lock
les
adc
lret
in
push
mov
xor
jge
jp
mov
sbb
pop
push
cmp
loopne
insl
pop
lds
xor
inc
or
lea
inc
dec
dec
mov
ret
dec
into
fldl
imul
mov
xchg
inc
mov
shrb
popa
rcl
mov
cmp
jl
mov
add
cs
add
push
lcall
dec
es
xor
add
pop
ficompl
enter
test
sarb
mov
popa
or
popa
adc
ret
mov
lods
mov
cs
mov
lods
dec
scas
cmp
cmpsb
fwait
or
outsb
cmp
xchg
cs
sub
jecxz
mov
fildll
mov
in
xlat
aad
jno
and
push
cmp
push
mov
cmp
jecxz
jg
mov
fstps
xor
mov
out
jmp
imul
test
inc
push
leave
setnp
mov
std
fldcw
jae
xchg
aaa
adc
xor
cmpsb
lcall
imul
scas
into
decb
nop
inc
nop
movsb
push
add
dec
jl
scas
adc
daa
gs
scas
adc
push
imul
pop
mov
sbb
push
xchg
loop
jno
mov
addl
nop
inc
dec
movb
xor
and
cmp
in
xchg
in
mov
and
mov
aaa
ja
dec
gs
push
sub
or
push
or
stc
lods
int
pop
cld
dec
xchg
stc
add
or
xchg
adc
fcomip
inc
ss
cmp
cmpsb
test
rcl
dec
fidivl
mov
fstl
mov
test
xor
jl
inc
cmpsl
push
rclb
or
pop
add
mov
adc
rorb
or
cmp
push
push
mov
fisubrl
lds
add
sub
lret
pop
adc
add
sete
adc
imul
test
lret
test
lods
inc
scas
cmpsb
dec
mov
outsl
test
shlb
push
std
fwait
je
fstps
aaa
inc
mov
cmpsl
movsl
mov
xchg
sahf
xor
cmp
pop
sbb
push
xor
js
test
sahf
pop
jb
lret
lret
dec
cmp
xchg
jecxz
stc
clc
xchg
je
inc
lret
and
sahf
repz
lret
mov
repnz
mov
and
lret
adc
mov
scas
cmpsl
dec
cmp
xor
xor
xchg
adc
das
mov
lods
int3
out
aas
loope
cmp
mov
jae
or
add
aas
cmpsb
mov
enter
das
mov
cmp
add
add
pop
jle
stos
push
into
sti
iret
cmc
bound
sbb
call
insl
dec
jo
pusha
shlb
fcmovne
rcrb
mov
push
sbbl
inc
xchg
dec
pop
mov
or
jae
scas
leave
repz
test
push
jo
lahf
add
insl
cmpsl
lods
mov
adc
shl
aas
in
dec
lahf
test
push
in
repnz
xchg
jnp
mov
jo
mov
add
inc
scas
xor
orb
inc
mov
pop
loope
bound
jno
and
mov
inc
mov
sahf
scas
inc
mov
or
pop
mov
mov
addr16
and
mov
nop
pop
ret
jp
ffreep
xchg
mov
sbb
xchg
out
adc
xorl
sbb
mov
rcrb
xor
adc
nop
out
push
imul
pop
scas
aam
pand
int
mov
ret
jno
test
dec
mov
mov
adc
das
or
imulb
inc
icebp
mov
mov
in
out
mov
outsl
leave
push
cmp
fprem
pop
out
test
push
cmpsb
jne
xchg
xchg
ja
mov
std
xor
outsb
xchg
repnz
jnp
push
dec
shr
fidivl
mov
ret
dec
notb
loopne
ljmp
loope
add
inc
ljmp
xchg
mov
shll
dec
xchg
int
sbb
scas
repz
add
sub
cltd
sub
mov
jecxz
push
and
push
in
sbb
pop
sub
mov
sbb
in
sbb
es
adcl
cltd
sub
add
rcrb
loope
leave
xchg
fnstenv
dec
mov
mov
shl
cmpsl
shlb
inc
mov
pop
mov
jmp
mov
xchg
cmp
cmc
js
dec
cld
pop
push
pop
sbb
cli
scas
mov
add
cwtl
jecxz
dec
hlt
mov
mov
xor
push
lods
arpl
jp
cmp
ljmp
icebp
loopne
rorl
aas
jmp
icebp
inc
cld
push
vpmullw
xor
mov
jecxz
hlt
jnp
adc
or
sub
adc
in
lcall
outsl
in
jg
jg
iret
and
in
leave
aam
pop
bound
dec
dec
in
and
pop
in
dec
iret
push
ds
xchg
mov
and
and
xchg
add
pusha
repnz
ret
int3
sbb
push
jecxz
mov
in
cmp
jle
add
lret
and
sahf
pusha
jmp
dec
fnstenv
lcall
ljmp
mov
jp
or
std
stc
insb
mov
ljmp
int
sub
xor
jecxz
sbb
aaa
mov
in
lods
imul
mov
divb
movsl
dec
js
inc
loop
outsl
insl
js
lods
lret
lcall
or
mov
clc
mov
mov
outsl
inc
mov
and
pusha
xor
aaa
and
mov
cmpsl
aaa
lds
xchg
cld
sbb
jmp
jge
in
jmp
fcmovnb
loopne
push
repz
leave
or
adc
mov
or
inc
ret
mov
fsub
sti
mov
dec
jb
adcl
test
cmp
aas
sahf
data16
xchg
jp
dec
lds
mov
pop
frstor
cmc
out
adc
fsubrl
sub
dec
cmp
jmp
fistl
lea
cmp
out
imul
cmp
xor
pop
add
dec
and
sub
shlb
inc
popf
inc
lea
push
js
mov
and
sbb
push
jecxz
xor
mov
faddl
or
js
cmc
in
cwtl
ret
xor
cmp
xchg
jmp
jp
out
push
les
xchg
xchg
lahf
ja
fldcw
sahf
and
mov
das
mov
fwait
or
out
gs
fnsave
cwtl
jge
cs
jne
mov
out
pushf
das
push
adc
in
test
adc
push
or
pop
imul
mov
jp
out
cld
fsubl
jecxz
addr16
xlat
sub
ja
hlt
das
rorl
inc
data16
shlb
or
fdivrs
jae
popa
fwait
xor
daa
cwtl
push
xor
pop
mov
adc
and
mov
in
shrb
rcl
fnstsw
or
fsubrl
negb
fcmovbe
jecxz
and
jnp
mov
scas
fistpl
xchg
stc
std
daa
push
xchg
sub
xor
arpl
or
ss
lds
leave
in
mov
sarl
stos
cs
cld
imul
imul
xchg
dec
xchg
xchg
enter
test
sahf
and
cmp
stos
cmp
push
js
std
or
push
testl
sub
mov
int3
jnp
fstl
sbb
adc
xlat
xchg
cld
sub
adc
xchg
mov
mov
loop
and
jnp
pushf
fcoms
pushf
or
aaa
ficomps
aaa
test
xchg
cwtl
xchg
pusha
fs
popa
xchg
xor
and
xchg
in
orl
stos
addr16
stos
inc
jb
cmpsb
call
rcrb
mov
das
mov
sbb
xorl
mov
ficoms
mov
sbb
pop
adc
lcall
test
aaa
mov
aaa
ja
nop
cmpsl
sub
mov
rorl
lods
adc
daa
fldl
ud1
and
mov
add
lret
cltd
pop
jmp
or
jecxz
mov
js
stos
orl
test
or
std
inc
inc
lea
test
mov
pop
imul
dec
dec
and
clc
pop
cmpsb
gs
and
sub
nop
xor
idivl
dec
xor
cmc
sub
mov
lods
aam
xchg
lds
xor
and
pop
ret
xchg
fwait
das
adc
mov
jg
inc
or
sub
jg
in
pop
xchg
orb
adc
sbb
stc
mov
sbb
mov
jle
popa
add
push
xor
and
out
push
dec
inc
je
mov
jg
out
cmp
lods
mov
sahf
xchg
fdivrs
jns
push
cmpsb
test
adc
data16
mov
das
mov
out
and
lds
into
test
cmpsl
scas
jl
in
push
or
mov
call
into
imul
adc
mov
mov
adc
inc
adc
outsb
add
dec
cmp
fiadds
pop
jns
jae
popf
sub
adcb
inc
add
inc
cmpb
into
out
jo
aas
mov
mov
and
ret
insb
xchg
dec
loopne
add
pop
int3
dec
pop
popf
cli
sub
test
shrl
push
nop
mov
add
aad
mov
xor
xchg
lret
mov
cwtl
dec
hlt
mov
insb
and
pop
pop
rcrb
sub
ret
mov
adc
and
xchg
je
jbe
cs
inc
xor
inc
in
mov
xor
mov
cmpxchg
push
xchg
push
mov
cld
xchg
dec
xchg
shl
lods
rol
insl
or
mov
add
cmp
jg
and
pop
lcall
ret
xor
inc
adc
mov
int3
stc
ficomps
sub
outsb
out
or
popa
dec
lcall
sub
repz
xchg
mov
xor
jecxz
dec
jp
mov
shlb
sbb
push
push
lds
pop
and
mov
jne
test
jno
add
mov
ljmp
pop
ljmp
rorl
in
mov
mov
mov
jb
pushw
add
cltd
sbb
in
fyl2xp1
dec
add
outsl
and
push
rcll
cmpsb
push
jnp
dec
pop
loope
rolb
dec
push
mov
iret
mov
mov
outsb
bound
sub
iret
inc
mov
jnp
push
push
sbb
pop
mov
mov
mov
xor
add
mov
or
clc
imul
mov
xchg
push
hlt
sub
incb
or
aam
lcall
pop
xor
pop
inc
shll
imul
in
add
cltd
fidivl
or
dec
scas
inc
sub
es
or
aam
popf
pop
addr16
repz
dec
sub
in
mov
outsb
movsb
pop
lea
push
ret
daa
enter
sub
mov
dec
cld
rorb
xchg
jno
add
or
into
fildll
dec
mov
ret
inc
aad
dec
mov
ret
es
mov
xor
adc
insb
stc
mov
lret
sub
dec
or
nop
push
icebp
inc
sbb
or
or
into
pop
push
add
adc
adc
add
mov
sub
sbb
adc
push
or
mov
pop
push
fnsave
mov
jnp
scas
jnp
or
inc
repz
ds
insl
adc
imul
testb
adc
pop
push
pop
loopne
push
call
push
or
int
push
cs
fldcw
xor
dec
data16
bound
adc
add
test
out
fidivs
and
popa
or
jl
sbb
pop
lods
jbe
mov
idivb
nop
xchg
lds
add
cmp
jb
mov
das
icebp
in
pop
pushl
push
les
cmp
xor
sub
cmp
lret
ret
fdivr
cmp
les
push
add
push
push
notb
sbb
adc
outsl
mov
adc
mov
xor
test
push
stos
mov
cmp
mov
push
mov
mov
lock
jb
pushf
jns
and
loop
xor
fisubs
sub
stos
mov
add
and
and
out
mov
xor
js
repnz
les
fwait
fs
insl
cmp
call
xchg
xchg
push
mov
add
jb
into
pushf
cmp
nop
les
pusha
test
sub
sbb
jbe
in
leave
jns
mulb
push
in
xor
insb
cwtl
cmc
or
and
and
shrl
mov
xlat
enter
iret
fdivrl
dec
aad
scas
dec
sbb
rorl
pop
popf
xchg
sbb
mov
cmp
xor
xchg
add
add
dec
or
dec
stos
sub
xchg
imul
cli
xor
cmp
subb
and
inc
xchg
shld
or
cmpsb
shrl
mov
mov
sub
dec
int3
add
mov
loop
aad
mov
mov
sbb
mov
insl
jnp
or
mov
addr16
je
or
sub
mov
mov
push
sbb
pop
sbb
push
pop
lds
push
cmp
cmp
loop
and
fs
add
mov
loopne
cld
dec
jecxz
into
lcall
mov
xor
ds
jle
lcall
pushf
aaa
aaa
cmp
dec
loop
ret
add
and
push
inc
mov
leave
ret
repz
and
cmp
sub
jl
sti
sub
std
xor
loope
inc
mov
jge
inc
out
adc
pop
mov
add
aad
in
loope
or
xor
fcmovnbe
push
ja
test
iret
adc
pop
adc
aas
pop
pop
add
pop
lret
dec
aas
or
subl
rol
mov
or
or
xchg
sbb
sub
call
mov
push
fmuls
pop
mov
mov
sub
mov
jbe
aam
nop
aad
push
mov
ret
push
inc
aas
in
mov
subl
cmpsl
mov
lcall
jbe
lret
ret
push
mov
fs
adc
and
mov
jnp
aaa
fidivl
cli
pop
mov
sub
inc
cltd
lret
xchg
cmp
bound
leave
mov
sub
andl
ljmp
ret
stc
insb
decl
out
cmpb
sub
cmpsl
inc
imul
cmp
ja
pop
and
mov
loope
outsb
insl
data16
mov
imul
jns
add
inc
out
sbb
add
es
dec
test
cmp
sub
xor
mov
popf
dec
call
sahf
xor
enter
add
jg
data16
inc
pushf
push
cmp
jb
adc
push
loope
neg
sbb
push
nop
push
jl
sbb
jns
xor
fists
sti
xor
stc
clc
je
cmc
sbb
fsubr
sbb
mov
notb
fnstenv
fcmovb
or
push
ss
adc
xchg
stos
fadd
ds
cmpl
shl
dec
push
aam
mov
mov
pop
das
adc
neg
mov
inc
jge
inc
in
xor
outsl
dec
xor
lret
outsb
outsb
nop
xor
jns
es
inc
fs
dec
push
sub
mov
js
shr
mov
cmc
lret
imul
dec
sti
dec
loop
and
jbe
les
mov
sub
les
test
dec
sbb
sar
jle
inc
scas
sbb
push
jo
or
dec
stos
push
pushf
and
in
mov
adc
dec
fsub
daa
outsl
push
mov
subb
mov
jl
cmp
aaa
pop
mov
xor
scas
out
push
sbb
je
div
loop,pt
xchg
stc
lods
je
cmp
dec
popa
cli
push
and
insl
into
push
mov
sub
cmp
outsb
sub
test
sub
xchg
push
xchg
inc
xchg
or
xchg
incl
xor
ret
fldcw
loope
push
lret
mov
lods
call
xor
cli
mov
fsubrp
into
std
or
test
mov
fsubrs
cmc
xchg
adc
cmc
call
xor
imul
lahf
pop
inc
push
and
int3
inc
and
adc
call
shlb
cmp
add
mov
sarb
inc
stc
in
push
inc
mov
shll
fs
adc
gs
lods
je
ret
mov
xor
cwtl
sahf
jns
jg
icebp
xchg
sub
mov
repnz
mov
sub
cld
jne
iret
out
inc
std
sahf
add
imul
enter
dec
cmpsb
adc
js
ret
divb
test
mov
icebp
imul
pop
in
mov
fs
sahf
and
lret
and
pop
aam
rolb
shll
bound
jno
outsl
arpl
inc
faddl
shlb
mov
test
into
idivl
pop
xchg
ja
jg
imul
mov
sbb
inc
inc
aaa
lret
cwtl
and
cmp
stc
lret
js
loop
lods
adc
sub
xlat
add
js
jl
pop
and
xor
mov
sbb
mov
inc
out
dec
push
inc
mov
dec
pop
loop
mov
in
cvtps2pi
out
jne
dec
test
std
xor
pop
or
cmp
push
cmp
jmp
outsb
mov
ja
imul
sbb
cli
cmp
gs
jg
jae
in
out
gs
cmp
push
push
cmp
push
es
cmp
imul
and
jp
outsb
es
inc
cmpsb
mov
xor
pop
cmpsb
mov
mov
shlb
xlat
push
lret
cmc
inc
mov
loop
pop
js
inc
bound
sub
sbbb
pop
jmp
test
push
mov
add
xor
fcomip
push
in
xchg
adc
stos
xchg
and
cmp
and
push
xchg
pop
add
xchg
mov
cld
scas
enter
pop
imulb
scas
mov
out
iret
jo
add
dec
bnd
inc
jecxz
subl
cwtl
js
icebp
jae
sbb
shr
mov
pop
mov
cmp
dec
call
shll
sub
dec
fdivrl
call
cmp
pop
in
add
aad
fnsave
xchg
cmp
scas
idivl
pop
mov
xchg
pop
jbe
and
inc
pop
jne
xchg
clc
cmp
cmp
push
gs
fnstsw
mov
mov
shrb
xor
out
mov
pop
pop
push
add
dec
dec
push
dec
sbb
ljmp
call
imul
mov
adcl
sub
adc
fsubl
xchg
dec
ds
cmc
push
inc
test
sarb
jp
dec
push
shl
push
push
mov
incb
or
inc
mov
in
add
push
jl
jne
cs
roll
inc
sbb
movsb
mov
jbe
sbbl
add
cli
jg
jg
mov
pop
push
xor
adc
pop
int3
xchg
lret
mov
jp
mov
fst
sub
stos
sahf
mov
inc
add
dec
loop
cli
jns
jb
or
add
loopne
test
loopne
fldt
addl
jne
lcall
int3
divb
es
inc
xlat
jno
sahf
xor
pop
test
mov
inc
test
cld
xchg
fstpt
adc
outsl
xchg
sub
mov
cmpsl
into
adc
pop
sbb
adc
xchg
bound
inc
lcall
shlb
inc
dec
add
or
unpckhps
int
and
aad
add
movsl
dec
lahf
call
add
push
gs
xchg
push
pop
sbbb
push
fs
sahf
xchg
aaa
repnz
andps
inc
cmpl
jbe
roll
push
xor
inc
shr
xchg
and
xor
jmp
popf
cmpb
xor
int3
sub
mov
push
shll
mov
aam
xor
xchg
lahf
adc
andb
popf
push
loope
cs
out
test
mov
push
rcl
inc
mov
das
xchg
adc
mov
sbb
sub
lods
adc
xchg
mov
cmp
dec
idivb
xchg
or
leave
arpl
clc
aas
dec
cmp
pop
cmp
jp
std
js
into
jmp
outsl
outsb
jno
push
cmpsb
adcl
rolb
fs
out
pop
xchg
arpl
and
push
cmpsb
ss
int3
ja
stc
mov
fistps
mov
aad
pop
inc
test
push
divb
xchg
push
mov
adc
enter
lods
pop
lret
push
jae
adc
mov
test
cmp
mov
jle
and
test
loop
mov
lea
ljmp
lret
scas
adc
mov
cwtl
inc
sub
sbb
cmp
cmp
fistps
jb
push
rcll
enter
mov
add
and
repz
push
and
rolb
add
ret
shrb
xor
xor
daa
lea
fucomi
popa
sub
cli
addl
jg
mov
add
mov
xchg
loopew
push
inc
iret
push
into
push
cmp
clc
addb
in
cmp
xchg
popf
in
inc
mov
or
mov
mov
faddl
xchg
aam
mov
fistps
jl
shll
xchg
cmc
fdivl
ja
sbb
mulb
and
dec
or
or
push
pop
jge
mov
popa
mov
les
clc
xor
fcmovnb
cwtl
jge
leave
cld
imul
pop
cmp
aas
ret
mov
bound
popa
int3
ret
jl
aam
out
fidivrl
lret
repz
ja
cwtl
sbb
fcompl
inc
push
call
dec
dec
xchg
jbe
inc
sub
cmpb
int3
repnz
add
int3
in
test
mov
xchg
dec
mov
xchg
or
mov
mov
or
loop
cltd
stos
push
and
adc
add
mov
imul
dec
outsb
and
or
pop
shlb
and
pop
out
mov
fs
push
jno
xchg
imul
jo
mov
leave
or
ljmp
sbb
outsl
std
push
leave
pushf
inc
mov
lahf
call
xor
adc
add
sub
inc
xor
adc
mov
and
movsb
les
nop
stos
mov
mov
mov
xchg
js
call
sarb
dec
mov
faddl
cmpl
cmpsl
or
jg
or
dec
sbb
jb
and
mov
hlt
jno
nop
or
mov
add
fisttps
ss
fimuls
call
sub
xchg
mov
inc
enter
pop
outsb
adc
mov
icebp
jns
mov
dec
inc
enter
mov
jl
add
sbb
mov
rorl
leave
add
cmp
jae
mov
arpl
mov
mov
call
int3
fcoms
ljmp
fsubrl
push
stos
cmpsb
sub
aad
call
xchg
cmc
stos
add
lea
dec
dec
ds
sbb
outsb
pop
adc
jecxz
std
arpl
adc
js
testb
mov
mov
orb
das
xor
sub
out
mov
sub
vunpcklpd
mov
dec
pusha
push
fcomip
js
icebp
ret
enter
xchg
ja
adc
in
adcb
sub
add
pushf
jnp
in
jae
fnstcw
cmp
sub
jl
dec
xchg
filds
sarb
mov
cmpsb
les
sub
xlat
shll
xorl
arpl
cmp
jecxz
mov
jb
or
stos
fidivs
jo
call
ds
jp
andl
shrl
or
xchg
push
xor
aam
sub
mov
push
cmp
adc
insl
sahf
lea
xchg
adc
mov
adc
addb
dec
int
mov
lea
rep
out
mov
pop
sbb
mov
xor
incb
jg
pusha
push
subl
xor
push
push
mov
sbb
rolb
jbe
mov
mov
and
mov
push
rsqrtps
sub
scas
inc
xor
dec
mov
dec
push
pusha
adc
popa
lds
sahf
inc
cli
jno
jl
aam
pop
cwtl
push
orl
cltd
ret
push
out
and
daa
aam
pop
jmp
jle
jno
out
add
fs
jmp
sub
dec
xchg
inc
pop
ss
mov
sub
xor
nop
add
pop
jns
dec
out
push
lods
add
and
mov
jecxz
pop
aaa
cmp
xlat
shrl
cli
out
jge
sbb
jae
sub
jbe
sbb
mov
xor
aam
shll
or
aad
adc
pop
aas
notb
iret
les
shll
adcb
sbb
fdivp
sub
add
lret
mov
insb
xchg
imul
sbb
pop
xchg
icebp
sub
push
push
push
or
jp
lods
loop
dec
pop
dec
enter
sub
repz
dec
mov
and
mov
pop
jmp
sahf
push
sub
xor
jns
push
cmpsl
adc
jb
add
xor
mov
cmp
adc
adc
sbb
xor
dec
mov
jecxz
mov
mov
mov
dec
les
push
hlt
push
dec
out
pop
cmp
xlat
mov
mov
push
xor
mov
ret
xchg
fidivrs
pop
jb
push
in
cmp
or
iret
incl
int
sbb
stos
sub
xor
pop
addr16
mov
sahf
fwait
and
lret
mov
mov
adc
lea
cmp
aad
popf
or
and
and
stos
movsb
bound
and
cmp
sub
daa
das
add
xor
rcll
add
imul
jge
xchg
aaa
pop
popa
push
and
out
mov
dec
lock
ds
jno
gs
pop
pop
insb
stos
cmp
lcall
push
push
adc
push
or
nop
inc
shl
lock
lcall
cmp
scas
jno
mov
paddw
iret
aas
xchg
stos
dec
test
jge
and
jmp
jmp
scas
cmp
xchg
mov
inc
pop
fiadds
mov
or
sbb
mov
inc
into
in
mov
pop
mov
fsqrt
repz
pop
or
jmp
out
popa
dec
andl
push
test
mov
test
pop
int
lahf
jp
mov
and
inc
ss
xchg
inc
sbb
xor
rcrl
sub
mov
cmpb
shlb
pop
mov
adc
push
mov
cmp
cltd
dec
mov
enter
scas
fs
fwait
pop
pop
lods
jo
inc
lods
hlt
das
dec
lods
xchg
lahf
cmovns
cwtl
mov
mov
add
pop
jmp
adc
jp,pt
inc
rorl
sub
sarl
stos
ss
sbb
sub
pop
jmp
jno
xor
cs
or
sbb
xor
lock
push
adc
lock
sbb
push
mov
je
mov
js
mov
imul
mov
push
push
std
cmp
lahf
and
jg
in
mov
and
test
pop
jge
adc
ret
adc
daa
mov
and
icebp
mov
lods
push
and
pusha
and
enter
cwtl
loopne
bound
movsb
push
arpl
mov
test
cli
lcall
scas
jecxz
jp
mov
pop
jl
negb
stos
mov
lret
xor
push
subb
push
xchg
xchg
and
out
push
sahf
test
jbe
mov
push
xchg
cmc
pop
ret
mov
repz
fildll
int3
or
ljmp
mov
dec
dec
jo
cld
aas
adc
cmp
lret
and
mov
or
and
push
in
or
hlt
add
out
es
dec
out
ret
cmp
das
xor
jge
fimuls
stos
cmp
fstps
mov
lock
dec
popa
jmp
std
mov
mov
clc
lea
xor
adc
or
xor
sub
mov
loope
gs
outsl
add
jb
popf
jo
imul
xchg
stos
das
jns
mov
pop
in
adc
push
sbb
cmpl
push
aam
sti
sbb
orb
faddl
imul
arpl
mov
lret
xchg
scas
jp
mov
into
test
fdivl
push
aad
cmpsb
outsl
inc
push
stos
jmp
xor
popa
xor
xchg
cmpl
aam
test
cmc
movsl
cs
ss
push
jne
outsb
cmp
push
movsb
mov
adc
xlat
pop
lock
mov
or
push
das
jnp
jmp
outsl
ljmp
xchg
mov
shlb
addb
push
rcrb
ret
sbb
xor
dec
jl
call
xchg
pop
ja
cmp
movsb
pushf
fldenv
xor
out
stos
mov
pop
add
pop
adc
daa
push
loopne
push
loope
sarl
rclb
in
cmp
jbe
pop
in
xor
xchg
dec
add
dec
hlt
rcrl
add
mov
push
xchg
xlat
les
jne
inc
in
lret
cmp
repnz
inc
add
cli
mov
jns
mov
int3
and
mov
adc
or
xor
outsb
andb
fdivrl
nop
mov
add
push
data16
leave
mov
push
in
jecxz
rcr
lcall
and
movsb
out
pop
nop
inc
rolb
shrb
sub
sbbl
rcrl
sub
fldl
loopne
lock
cs
dec
add
cmpsb
aam
hlt
pop
stos
add
adc
popf
or
les
lea
movsb
mov
cmpsb
lea
dec
mov
stos
cmpsb
and
jns
movsb
ja
pop
dec
mov
pusha
inc
lahf
mov
jle
jmp
inc
add
jo
mov
dec
jns
cmp
nop
xor
mov
gs
and
repnz
cmpsl
imul
or
push
fwait
cmp
mov
stc
jns
dec
sub
sahf
sbb
cmp
sti
or
pop
cmp
cmp
shr
mov
jl
cld
or
xchg
lret
aas
mulb
rsm
sbb
insb
add
decb
jb
in
aam
inc
ret
add
xchg
lahf
inc
movsl
mov
sub
add
dec
shll
lea
adc
cmpb
outsb
jl
test
inc
inc
sbb
push
sub
xor
scas
xchg
cmp
cwtl
fildll
insb
mov
sar
jecxz
mov
cmp
gs
stc
push
fcmovb
loope
test
cld
dec
inc
sub
out
aad
call
pop
inc
imul
inc
stos
stos
or
mov
xchg
mov
mov
shll
lret
jo
pminub
mov
idivb
sub
gs
pop
xchg
mov
dec
ret
xchg
data16
push
bound
mov
aam
lods
cltd
adc
in
enter
push
sub
push
dec
imul
mov
jae
test
and
loope
dec
fwait
mov
std
push
roll
push
jb
clc
xor
adc
adc
outsl
sbb
rolb
les
mov
mov
mov
test
sahf
imul
push
sbb
xor
lock
cwtl
rcl
adc
add
jb
pop
rcrb
push
ss
adc
adc
adc
mov
sbbl
xor
inc
push
adc
sahf
mov
aam
push
arpl
inc
jecxz
jbe
mov
les
adc
xlat
sahf
popa
jl
dec
scas
push
add
imul
sub
out
sbb
out
lcall
out
pop
sbb
inc
cmc
int3
mov
js
int
adc
pop
fdivrl
push
xor
or
push
push
insb
xor
je
adc
and
and
xlat
or
pop
mov
testb
icebp
out
scas
inc
pop
fsubrl
jns
ret
xor
lods
repnz
stos
stc
lahf
test
mov
add
jne
add
std
loopne
rol
imulb
or
addb
iret
push
adc
shll
adc
mov
mov
push
jns
and
clc
pop
or
movb
in
add
jno
fcomp
rclb
push
or
pop
jns
test
jp
cwtl
inc
out
sbb
hlt
sti
mov
cltd
push
mov
sub
xor
fistpl
pusha
nop
es
popa
int
lods
in
adc
jne
out
pop
in
cli
sti
adc
stc
aas
addl
popa
cmp
stc
mov
mov
movsl
xchg
push
daa
jnp
fdivs
repnz
pop
popa
aaa
ret
mov
cmp
aam
inc
cs
es
adc
jne
sub
int
jno
mov
jmp
push
aam
loopne
jecxz
pop
push
scas
push
dec
adc
mov
adc
test
dec
mov
mov
pop
in
out
mov
adc
add
in
dec
sbbb
mov
clc
adc
insb
push
fldln2
lods
lods
pop
xchg
mov
push
dec
mov
lea
mov
shrl
xchg
fs
fs
xlat
sbb
ja
call
testb
gs
loope
in
ret
adc
roll
and
sub
imul
movsl
gs
insl
lods
jmp
xor
pushf
int
daa
push
and
inc
dec
and
test
cmp
xor
ficompl
ljmp
out
sbb
lock
incb
enter
aad
push
xor
lock
fsub
inc
add
dec
push
sub
shrb
pop
sub
jg
es
sub
jnp
fneni(8087
sub
xor
je
pusha
shrb
or
adc
subl
in
pop
adc
pop
push
xor
lret
or
mov
in
scas
push
rorl
mov
pop
push
jno
aas
sub
dec
fildl
add
into
out
sub
frstor
popa
mov
in
rorb
and
iret
mov
test
rcrb
jmp
out
sbbb
dec
mov
xchg
cld
sahf
pusha
std
popf
es
mov
ljmp
aas
cmp
je
mov
dec
push
sub
add
xor
jnp
pushl
sarl
es
add
les
sbb
jb
cli
addr16
rcl
lcall
call
dec
mov
lret
mov
mov
pop
mov
daa
inc
sbb
inc
push
add
leave
scas
scas
out
adc
jmp
test
sub
or
mov
in
inc
jne
test
bound
addr16
fs
jns
inc
out
push
loop
jns
push
push
scas
push
imul
pop
sahf
js
lret
xchg
push
ja
pushf
pop
and
or
mov
xor
mov
lods
mulb
xchg
mov
movsl
cmc
sti
mov
imul
lret
lds
jmp
mov
andb
pushf
cltd
xor
push
inc
insl
cmpsb
jg
mov
mov
pop
pop
jnp
mov
movsb
push
pop
pop
in
out
xor
movsb
stos
lods
mov
shll
pop
mov
xchg
in
mov
jmp
ss
cmp
jnp
movsl
scas
shlb
mov
push
mov
inc
scas
pop
mov
push
das
inc
pop
fdiv
cmp
push
fwait
xchg
loope
dec
cmp
sbb
and
imul
test
cs
xchg
enter
shlb
nop
adc
dec
jno
cmpsl
jmp
mov
dec
outsb
shll
in
add
add
dec
pusha
xor
adc
cmp
xchg
pushf
lret
mov
xchg
fbstp
nop
adc
out
and
and
mov
mov
out
jecxz
and
jno
mov
aaa
lcall
inc
aas
popf
in
inc
push
cmpl
aad
cmp
pop
xorb
sub
leave
fwait
mov
mov
fstps
xor
jmp
mov
mov
ljmp
pushf
mov
mov
adc
adc
push
rclb
inc
xor
mov
cmp
xchg
insb
xor
pop
push
jmp
mov
xor
dec
rorl
or
adcb
leave
sahf
dec
jle
out
or
jo
rcrb
aad
adc
push
dec
stc
call
out
push
movsb
xlat
out
ret
aad
xchg
scas
ljmp
jne
ds
mov
mov
push
pop
roll
aas
mov
and
hlt
dec
bnd
enter
enter
mov
sbb
test
lods
fwait
adc
cmp
leave
jmp
dec
pushf
push
xchg
enter
leave
ret
cli
roll
mov
sbb
push
int3
sub
jp
xchg
cmpsl
push
lock
sub
xchg
mov
movsb
lods
mov
mov
mov
push
data16
xchg
loop
push
mov
lods
xchg
jbe
cmp
sahf
inc
sbb
outsl
pop
insb
fwait
sbb
mov
lods
pop
in
jg
sub
bound
aaa
loope
xchg
pop
outsb
push
adc
pop
out
adc
lcall
lea
cwtl
fsubl
and
and
cltd
add
stos
mov
dec
mov
pop
jb
mov
mov
movsb
test
jne
mov
jnp
pop
jmp
adc
or
xchg
sub
out
pop
lods
sbb
arpl
mov
mov
mov
leave
mov
mov
xchg
jecxz
push
pop
imul
xchg
repz
mov
cmpb
add
sarb
and
rol
inc
repz
in
test
push
and
or
lods
iret
aad
lahf
cmpsl
mov
mov
or
lcall
sbb
dec
ds
test
mov
push
fucomip
or
repnz
pop
sbb
jns
or
cmc
inc
and
cmp
jecxz
outsb
movsb
pop
mov
sarb
hlt
push
jae
pop
ljmp
mov
or
pop
imul
ja
cltd
ret
mov
mov
repz
and
jmp
in
lret
xchg
popf
jno
test
add
sbb
push
mov
test
shr
mov
dec
ja
repnz
bnd
loop
mov
aad
leave
int3
sbb
aad
pop
jns
xchg
in
cmp
mov
adc
push
sahf
sbb
jecxz
inc
into
scas
cli
xor
cmc
pop
cs
nop
lds
sbb
jo
cltd
ljmp
aam
test
xchg
fs
jmp
ljmp
sahf
ret
jp
jo
mov
outsb
cmp
dec
pop
adc
addr16
fs
movsl
shrb
insb
sahf
mov
jge
in
es
jge
mov
mov
mov
ss
mov
les
dec
fistpl
ret
and
out
ret
jne
into
and
push
mov
das
popl
xchg
popf
jbe
mov
or
scas
sub
repz
ds
in
cltd
scas
sub
pop
jecxz
mov
lods
int
xchg
addb
xchg
adc
in
mov
xor
hlt
fbstp
outsl
leave
imul
jge
lea
add
cmpsb
sbb
scas
call
mov
lcall
imul
push
sub
mov
push
sbb
int
addr16
mov
and
mov
cltd
xchg
inc
andnps
pop
out
adc
inc
xchg
pop
jns
dec
jge
mov
jbe
and
push
cli
movsl
pop
in
add
inc
daa
add
rorb
jge
loopne
insb
testb
cmp
dec
in
loopne
icebp
rol
dec
jl
arpl
or
cwtl
jne
jecxz
mov
rclb
mov
ret
push
cld
std
pop
in
scas
repnz
mov
jg,pt
mov
test
jl
mov
push
icebp
pop
sbbb
jp
cltd
mov
pop
stc
push
or
lea
mov
sbb
add
adc
insl
repnz
sbb
jge
push
sub
lcall
aaa
int3
lock
pop
push
loope
test
mov
rcrb
mov
adc
shl
call
push
in
ror
es
or
stos
pop
mov
jb
lret
aad
in
daa
fisubrl
cmc
jae
cmp
or
inc
mov
inc
jl
stos
cmp
mov
pop
jp
in
xchg
sub
mov
mov
pop
mov
push
arpl
mov
adc
leave
push
xchg
xchg
scas
outsb
sub
jns
fldenv
xchg
cmc
lret
movsb
pop
aaa
repnz
adc
hlt
xchg
mov
mov
inc
cwtl
xchg
gs
sub
outsl
nop
sub
outsl
inc
dec
fisubrl
mov
push
mov
mov
fdivl
adc
inc
sbb
sbb
pop
jo
or
cmp
repz
push
jnp
lret
in
dec
mov
adc
pop
dec
lds
in
fisubrl
mov
mov
add
std
lret
sbb
mov
inc
push
dec
cmpsb
sub
mov
mov
lods
jecxz
lods
xor
xor
mov
sbb
insl
lds
jno
stos
sbbb
loop
or
fdivrs
jo
or
and
mov
hlt
push
dec
jle
data16
sub
je
pop
mov
dec
xor
lahf
stc
push
sub
adc
jbe
add
push
cmp
pop
dec
dec
adc
ss
scas
into
pop
xchg
into
xchg
add
ljmp
or
clc
mov
push
mov
dec
mov
int
and
mov
inc
lea
mov
mov
std
xor
mov
sbb
cmp
xchg
and
fdivrp
hlt
and
jp
out
outsl
sub
push
push
lret
test
fistl
sub
into
dec
aaa
mov
push
ja
xchg
or
jbe
xor
out
pop
jbe
cmovp
aas
mov
lods
pop
sub
daa
loopne
movsb
jb
jno
dec
ret
push
mov
add
adc
jb
in
cli
push
enter
sub
or
arpl
shrb
mov
les
pop
enter
nop
lea
jb
pusha
insb
adc
lds
and
xchg
outsb
jge
or
or
xchg
pop
mov
or
imul
push
or
mov
sahf
in
and
popa
sahf
test
out
jae
lods
mov
int
and
and
sub
aaa
inc
mov
cmpsb
divb
jb
adc
push
push
fs
in
shl
inc
lret
jae
aas
mov
push
repz
adc
jle
fs
sub
inc
pop
sub
scas
out
add
stc
sarb
mov
rcrb
sub
cmpl
js
out
pushf
ja
fs
mov
lret
pop
aam
loope
pop
inc
scas
mov
add
inc
sbb
push
sahf
pop
imul
add
js
shrb
pop
push
test
fistpll
mulb
push
call
sub
dec
jmp
dec
jns
sbb
or
loop
popa
sub
push
call
push
mov
test
push
sub
mov
sub
xchg
rolb
test
push
clc
add
imul
cli
inc
insl
ja
adc
fistl
mov
cmp
aad
xor
std
jge
dec
lahf
mov
or
lods
adc
ljmp
aad
xchg
leave
ja
hlt
push
std
ret
ja
aad
jne
call
dec
pushf
push
cs
in
insb
inc
and
data16
jns
and
pop
mov
sub
cmpsl
test
fs
call
dec
pop
lahf
out
push
scas
adc
dec
aas
lret
and
xorl
or
cmp
scas
and
jne
addl
cmpsb
xchg
jb
mov
mov
sub
js
and
imulb
lahf
inc
inc
sbb
pop
push
imul
push
movsb
jmp
xor
add
xor
int3
pop
mov
enter
dec
sbb
mov
inc
idiv
in
rcrb
call
fwait
cmpsb
imul
lea
add
xor
imul
lds
and
stos
js
fs
push
add
or
ret
int
lds
push
xor
aam
sbb
aaa
xchg
push
add
scas
stos
push
ljmp
ds
lret
fisubrs
xor
cmc
pop
movsb
xchg
sbb
cmpsb
pop
adc
adc
push
cld
lret
xor
jecxz
cmp
sahf
int
stc
and
add
xor
fbstp
push
lea
lods
and
out
dec
enter
scas
cmp
ds
jb
outsl
les
daa
loop
iret
mov
in
ret
rolb
jecxz
fldenv
adc
sub
es
stc
add
push
add
test
mov
out
shll
test
adc
adc
call
push
pop
sub
ret
push
pop
lock
push
arpl
mov
test
jno
and
jge
ja
mov
outsb
adc
cmp
mov
popf
or
sbb
mov
lods
dec
push
pusha
sub
lods
xchg
sub
fidivl
fs
sbb
xchg
and
mov
lahf
pop
dec
loop
dec
fidivs
mov
cmp
fxch
mov
pop
and
daa
dec
leave
add
mov
pushf
push
and
cli
lret
mov
aas
call
in
jns
mov
imul
fstl
adc
inc
adc
nop
lea
inc
inc
mov
pusha
js
mov
pop
sbb
mov
add
sbb
xchg
sbb
outsl
pop
dec
les
enter
loope
mov
icebp
aam
jns
in
xor
pushf
push
fmul
imul
pop
in
add
pop
lret
ss
mov
enter
xchg
test
adc
mov
inc
and
inc
mov
jecxz
pop
and
fsubl
outsl
icebp
or
lods
aam
mov
adc
addr16
pop
mov
mov
inc
rcrb
mov
cltd
sahf
mov
push
pop
das
out
pop
mov
movsl
subl
dec
mov
jns
sbb
jecxz
out
jge
lahf
jle
xor
mov
insl
xorb
and
popa
dec
jno
test
and
das
inc
icebp
loop
jbe
repnz
jns
jns
jg
loopew
xlat
push
mov
xor
or
xchg
mov
outsb
pop
add
lahf
jns
stos
int
mov
cld
ss
jae
cmpb
push
inc
pop
push
jns
jbe
scas
daa
and
sarb
ret
fnsave
pop
mov
mov
jmp
mov
subl
mov
inc
lods
xor
push
fcomp
xor
stos
cmp
sub
mov
lret
les
dec
jle
cltd
out
jp
mov
xlat
popf
xor
xor
fsts
xchg
fnstsw
clts
jnp
std
lcall
imulb
mov
sbb
dec
les
andl
sbb
pop
and
pusha
dec
sbb
jne
sub
ds
popf
xor
jno
pop
pop
gs
xor
inc
lret
xor
adc
jmp
cmpb
lods
sbb
inc
mov
mov
cld
or
in
sahf
lock
jg
shll
pop
dec
jbe
outsl
pushw
adc
js
adc
mov
in
xor
loop
fsubp
sub
cltd
xlat
cli
in
outsb
add
repz
adc
nop
pop
popf
sub
cli
pop
pop
call
mov
jae
mov
popa
enter
in
adc
cmp
cmp
sub
into
pop
mov
pop
ljmp
test
adc
lret
sub
call
cmp
scas
xor
loop
insb
popf
push
aas
push
inc
out
fisubs
into
and
les
sub
pop
xchg
orl
stos
js
std
push
aaa
lcall
test
sub
sbb
add
faddl
js
xchg
mov
cwtl
jno
mov
aas
cmc
mov
xor
or
and
pop
rorl
sbb
sub
nop
push
inc
xor
and
inc
out
dec
mov
mov
mov
cmp
out
pop
pop
into
or
fcoms
pop
aam
andb
inc
jns
lods
pop
aas
mov
das
out
out
mov
sbb
adc
inc
orb
jecxz
insb
pop
in
cli
inc
dec
repz
stc
xchg
lcall
mov
lret
inc
mov
testl
in
pop
test
stos
sub
fcomi
xchg
push
jmp
push
fwait
sub
rorl
xchg
mov
in
sub
jmp
adc
roll
jno
xchg
add
push
data16
push
vcmpsd
mov
add
cmp
repnz
mov
sub
xor
andb
int
rcll
lods
push
fwait
mov
dec
adc
or
ljmp
adc
loopne
pop
dec
bound
dec
xlat
movsb
sub
adc
mov
and
pop
test
nop
sub
popf
sbb
lahf
imul
flds
fdivrs
fs
bound
xorb
popf
sub
jno
xor
test
inc
sbb
aaa
mov
pop
rcr
test
fdivrs
rcll
popf
xchg
mov
and
jns
js
mov
icebp
sbb
test
lock
dec
fldt
xor
call
cmpl
add
sub
mov
addl
mov
call
ljmp
outsl
test
in
pop
ja
gs
xorb
mov
dec
fsubs
push
lock
test
pop
push
movsl
dec
mov
mov
mov
fcoms
adc
jmp
jge
or
insb
ljmp
dec
xor
out
mov
lea
sub
flds
xor
sti
loope
sahf
je
jns
jno
push
aad
sbb
int
cs
cmp
mov
ficomps
rcr
cli
mov
and
fcmovne
pop
int
imul
and
test
daa
add
cmpsb
lods
mov
dec
jb
out
or
popf
jbe
addr16
dec
out
add
lea
dec
clc
sub
fdivl
adc
jne
cmp
test
pop
pop
fwait
and
sbb
inc
inc
xchg
aas
aaa
rcrl
nop
jno
insl
inc
lock
or
fistl
sarb
repnz
inc
push
cwtl
aas
mov
adcl
ret
push
add
mov
and
mov
inc
mov
scas
mov
rcrb
mov
out
push
dec
lock
movsl
jle
lret
ret
imull
popa
inc
sub
dec
std
cmp
ja
out
jns
mov
dec
lods
mov
addl
inc
pop
fs
mov
outsb
mov
iret
lods
addr16
sbb
jmp
dec
inc
or
out
fwait
sbb
sti
mov
adc
push
jnp
add
xor
sbb
adc
popf
repnz
test
std
outsl
dec
jno
pop
int3
aas
push
ficoml
les
mov
in
cld
xor
jle
xchg
sarl
dec
or
jmp
dec
daa
mov
or
bound
out
jge
or
les
dec
inc
xchg
orl
mov
fcomp
imul
dec
cmp
lods
pop
or
jno
inc
jg
or
test
mov
aas
cwtl
pop
out
rcrl
mov
in
movsl
push
lea
aaa
dec
add
aad
adc
push
andl
cs
xor
sub
xchg
sub
repz
icebp
jmp
sub
push
pop
gs
jmp
pop
xchg
cltd
mov
push
fistpl
in
arpl
lret
decb
dec
mov
lods
test
mov
fcomps
mov
mov
aas
int
push
xchg
jge
xchg
inc
mov
addb
jo
leave
dec
push
scas
nop
lock
mov
es
sarl
imul
xor
jle
jg
push
in
andb
leave
cld
test
lret
pop
inc
shl
cmp
inc
xchg
dec
inc
and
mov
xor
stos
push
xchg
into
orl
call
sub
xor
sbb
pushf
adc
jno
adc
pop
sahf
dec
sbb
mov
jmp
cmp
and
jae
cmp
dec
inc
es
sub
push
push
pop
dec
pop
pusha
ja
popa
stos
imul
xor
cmc
cld
in
outsl
stos
lcall
inc
jg
out
movsb
inc
cmp
mov
sbb
cmp
xlat
push
gs
pop
in
in
dec
ljmp
mov
fcomi
mov
and
push
int3
jb,pt
cmp
lds
push
push
push
int
pop
sarl
push
inc
dec
mov
pop
mov
sbb
fisttpll
cmpsb
dec
and
stos
mov
and
sbb
in
out
sub
push
push
stc
rcr
mov
jae
mov
movsb
adc
test
and
pop
mov
cmp
jo,pn
aaa
clc
dec
shrb
pop
fdivrl
push
js
in
cmpsl
xor
aas
subb
mov
outsl
and
sbb
orb
test
subb
push
dec
mov
add
cwtl
mov
sub
push
and
and
pop
aaa
loope
mov
mov
aad
aaa
pushf
test
dec
ficoms
jo
jno
cmp
repnz
or
jg
xor
out
dec
adc
fiaddl
ljmp
aam
pushf
mov
pop
push
xchg
incl
add
popa
mov
mov
lods
mov
pop
nop
popa
clc
outsl
daa
jge
repz
mov
mov
pop
addb
sbb
lock
icebp
inc
xchg
inc
mov
mov
cmp
dec
jbe
mov
jb
mov
sahf
sub
fsts
adc
push
sub
ret
mov
pop
popfw
mov
stos
and
faddl
xchg
inc
leave
sub
jge
cmpsb
xchg
sbb
sbbl
inc
cmpsl
mov
sub
adc
cwtl
icebp
cmp
out
inc
or
fwait
scas
lret
or
ss
loop
pop
shll
pusha
shl
add
adc
inc
or
loop
push
push
stos
test
pop
mov
dec
lcall
or
fmull
pushl
inc
dec
jbe
daa
repnz
lret
mov
adc
or
pop
cmp
mull
test
mov
jle
adc
aam
push
mov
dec
out
adc
push
lods
cmc
ss
xchg
jle
psubb
xchg
mov
out
bound
or
adc
cs
adc
loope
imul
xchg
dec
mov
lods
movsb
in
int3
dec
mov
push
xchg
std
icebp
into
add
idivb
sub
pop
fsincos
inc
add
sbb
inc
mov
lods
sbb
push
mov
fs
jl
sub
or
adc
push
add
data16
pop
lret
loop
and
cmp
ret
mov
mov
sbb
pop
xchg
es
shlb
ljmp
dec
or
rcll
aas
cmpsl
loope
ljmp
mov
fwait
or
push
mov
xchg
loopne
cs
push
xchg
jno
mov
mov
stos
repnz
mov
mov
repz
add
sbb
fildl
jecxz
push
jae
lcall
and
sub
enter
push
jno
cli
jge
sbb
adc
sbb
dec
push
sbb
lds
testl
repnz
insl
shll
push
dec
and
fdivl
cmp
sub
fdivrs
adc
mov
cmp
cmpsb
dec
inc
and
sub
dec
add
andl
sbb
fs
jecxz
push
mov
xchg
pop
sub
gs
ret
sub
dec
or
lds
mov
aad
pop
cmp
ja
fucomip
sbb
dec
stos
out
mov
jns
or
mov
inc
les
rolb
cmp
fwait
icebp
adc
add
ja
addr16
dec
insl
nop
cmp
outsl
dec
push
add
and
inc
adc
adc
out
lods
pusha
pusha
imul
cmc
cltd
out
enter
inc
cwtl
mov
sbb
sub
in
fisttpl
nop
icebp
or
xchg
jge
movsb
mov
mov
stos
jo
mov
ss
jmp
aaa
sbb
and
and
pop
mov
in
ss
jnp
adc
sbb
cmc
sbb
dec
mov
sub
stc
cmp
inc
outsb
or
jbe
and
repz
addr16
sub
push
aad
leave
lahf
subl
cwtl
fs
inc
stc
out
lock
repnz
xor
and
inc
adc
jle
jl
mov
xlat
inc
jecxz
out
xchg
fbstp
pop
jne
test
leave
or
push
mov
cs
push
lods
and
xor
adc
pop
xchg
cmpsl
jmp
mov
test
or
outsb
jl
repz
repz
and
or
push
jnp
cmpsl
aas
sub
jmp
jmp
js
cmp
ss
push
sbb
mov
jle
mov
pop
sti
jecxz
pop
mov
xor
ljmp
adc
xor
loopne
cmp
jnp
scas
int
push
in
dec
das
sar
je
mov
lret
into
jecxz
push
insl
shlb
fsubl
add
imul
fldt
xor
popa
mov
cld
fs
mov
and
scas
neg
jno
ja
sar
lea
push
std
call
or
sti
lock
test
repz
cmp
add
cmpsb
jp
cwtl
bound
sbbb
pop
jmp
daa
in
sub
xchg
jp
outsb
fildll
loope
rcrb
pop
call
outsb
fstpt
daa
ja
sbb
ja
aas
or
mov
and
imul
pop
ret
data16
add
out
sbb
in
mov
fcoml
lahf
ljmp
jg
stc
cwtl
xchg
inc
push
ljmp
outsb
mov
xchg
loope
pop
imul
mov
cwtl
fcoms
or
scas
lock
cmp
and
ret
fnsave
mov
mov
cld
sub
hlt
jmp
xlat
push
test
xchg
mov
movsl
js
std
je
daa
cmp
jge
fcompl
cmp
nop
mov
int3
rcr
movb
lahf
push
cs
sti
adc
cld
call
fcmovnu
pop
addr16
jbe
enter
jg
pop
aas
xorl
pop
sub
jle
repnz
push
arpl
aam
aaa
js
scas
adc
mov
push
adc
add
mov
xor
cmp
je
test
jecxz
cwtl
mov
sub
aas
and
add
mov
jne
xchg
adc
sbb
mov
inc
int
repnz
xor
xor
cli
mov
xchg
jae
fbld
bound
ret
jbe
inc
adc
xor
addr16
rcrl
imul
fisttps
mov
ret
add
xor
imul
into
inc
mov
rcll
mov
dec
gs
xchg
arpl
stos
aad
stos
push
aas
jle
push
push
mov
sub
xor
imul
pop
jae
sbb
mov
out
in
and
mov
in
call
lret
icebp
cwtl
hlt
ret
jl,pn
or
aas
repnz
add
push
addr16
and
jns
jmp
and
jle
cmpsl
inc
sub
dec
mov
mov
pop
les
pop
xchg
push
xchg
pop
adc
lea
mov
xchg
pop
lahf
outsl
dec
mov
jo
mov
jns
movsb
dec
lret
sub
add
jle
les
cmc
mov
xchg
cwtl
pop
imul
cs
sub
out
cld
mov
insb
repz
push
lea
outsl
inc
xor
add
mov
inc
adcl
or
dec
cs
mov
popf
adc
inc
dec
cmp
inc
xor
fnsave
imulb
ss
cmp
sub
out
shll
jnp
cmp
adc
cmc
sbb
push
inc
int3
mov
mov
inc
sahf
xor
sub
test
mov
aaa
lcall
push
sub
cs
in
cltd
stos
sub
aam
mov
jne
cwtl
movsb
sti
jne
mov
xchg
mov
sbb
out
cmp
add
movb
jae
outsb
mov
stos
add
pop
or
adc
or
dec
negl
leave
cwtl
jnp
mov
pop
repz
insl
dec
push
mov
push
and
dec
mov
int
nop
add
cmc
mov
sub
in
mov
mov
cld
pushf
xor
inc
xchg
xchg
outsb
movsl
imul
sbb
lock
jno
dec
out
sbb
test
hlt
adc
sub
xchg
cmc
dec
out
add
add
cmpsl
test
pop
xor
pop
aaa
out
pop
and
lods
pop
shll
testb
cs
pop
arpl
and
xchg
xor
out
orl
pusha
pop
dec
sbb
inc
cltd
mov
adc
xor
cmp
imul
push
lcall
inc
mov
hlt
pushf
jg
cmpsb
not
mov
pushf
hlt
les
mov
mov
push
jl
xor
fs
mov
pop
mov
xor
aaa
mov
pop
out
stos
add
jo
xor
cs
sbb
jns
xlat
int3
in
stos
sbb
lock
adc
sub
aam
fmull
stos
pop
mov
xor
jo
loopne
push
cmpsb
mov
xchg
scas
inc
stos
addr16
jb
notl
and
insl
push
lea
nop
xor
movsl
jmp
aas
test
mov
cltd
cs
mov
push
dec
xor
ficoml
cli
xor
movsb
setnp
sbb
cmc
stos
outsb
stos
addr16
out
in
stc
call
jmp
add
xor
outsb
flds
jl
mov
loop
sub
sbb
mov
jge
cmp
sahf
out
fcoml
sahf
mov
and
stc
dec
dec
fcmovu
push
nop
mov
mov
hlt
pop
imul
xor
jecxz
xlat
popf
cmp
inc
aaa
pop
add
jle
inc
mov
rolb
xor
stos
pop
mov
sahf
enter
call
shl
pop
cmp
mov
xlat
out
test
shrb
es
mov
test
lret
and
and
cmpsb
jl
xchg
xchg
pop
inc
xchg
pop
cmpb
scas
leave
repz
cmp
mov
cmp
pop
add
push
sahf
aad
sub
jmp
ret
fwait
jb
lea
popf
dec
std
cmpsb
fwait
jmp
dec
jg
jecxz
shr
dec
sahf
mov
insl
jae
ss
mov
add
addr16
cmp
inc
add
mov
dec
mov
lea
scas
jl
idivl
and
lret
stos
mov
mov
loope
fnstsw
add
outsl
or
mov
mov
out
fsubrl
aaa
xchg
insb
fxch
test
pop
xlat
mov
push
ss
inc
and
jno
lds
mov
push
xchg
push
jbe
movsl
fidivrs
pop
addb
popa
fnstenv
lcall
fimuls
pushf
jge
les
mov
mov
sub
jp
pop
in
adc
push
fwait
xor
sub
add
outsl
pushf
push
lret
shr
sbb
xor
pushf
pop
shll
sub
add
cwtl
enter
ja
fwait
push
add
pusha
popa
xchg
mov
stc
adc
jno
addr16
fs
sahf
pusha
fcmovnbe
inc
xchg
xchg
int3
add
mov
dec
dec
push
rclb
or
jae
test
mov
or
mov
jbe
or
sbb
push
or
sub
or
or
mov
xor
imul
enter
sub
out
push
enter
mov
scas
fmuls
push
or
cmp
mov
shlb
dec
xchg
daa
stos
scas
je
adc
inc
jo
aaa
fimuls
cmp
jg,pt
popa
jo
xor
fmulp
sub
or
inc
clc
fcoms
mov
mov
ljmp
pop
inc
pinsrw
or
in
xchg
cmp
pop
jne
mov
imul
out
mov
or
leave
popa
mov
adc
enter
inc
push
cmp
sbb
adc
push
mov
jnp
mov
lds
orb
add
filds
nop
js
repnz
lods
dec
or
and
add
lock
xchg
loop
xchg
mov
cmp
and
sbb
dec
in
and
xchg
stos
inc
sub
mov
adc
enter
lret
xchg
xchg
sbb
push
call
movsl
sbb
movsb
xchg
fsts
jae
ljmp
lret
outsl
pop
xchg
repnz
mov
and
push
sbb
xchg
addb
imul
aaa
pushf
pop
inc
movsl
movsl
sub
call
inc
stos
scas
orb
xor
cmpsl
cmp
mov
cwtl
outsl
pop
sbb
rcrb
std
ret
enter
test
inc
pop
ds
xor
add
ret
repz
dec
inc
jae
cld
sbb
jmp
fbstp
or
sub
pop
in
sub
arpl
pop
adc
dec
xchg
es
rcll
add
dec
mov
pop
jg
jo
jbe
mov
push
mov
mov
dec
or
cmp
add
loopne
push
pop
push
scas
mov
aaa
jne
ja
std
popl
sbb
addr16
testl
test
nop
mov
vmovntpd
outsl
into
mov
xor
loope
adc
das
lahf
sbb
mov
push
jne
inc
dec
icebp
scas
cmc
add
icebp
ljmp
mov
sti
imul
jbe
gs
fst
add
or
xchg
scas
pop
adc
jo
add
cmp
sbb
xchg
scas
test
dec
mov
sbb
aaa
test
cmp
hlt
mov
or
icebp
sbb
sbb
mov
or
lea
call
pop
leave
mov
pop
mov
cltd
imul
cmpsl
aad
xor
lcall
sub
push
cmp
mov
and
in
jne
dec
fxch
mov
mov
inc
pop
out
cmp
clc
pop
test
push
cmp
hlt
pop
inc
cmp
xor
jb
push
out
push
out
call
jnp
jb
movsl
movsb
xchg
sub
out
xor
into
out
popf
dec
fs
das
insb
aad
dec
imul
add
mov
jbe
xor
fs
mov
mulb
insb
mov
mov
xchg
out
icebp
push
fcoms
fisttpll
arpl
outsl
push
cs
ja
mov
enter
lock
shll
lea
lock
fdivrl
mov
jae
stos
test
and
clc
psrad
dec
in
mov
mov
sbb
fildl
push
lods
fldt
and
ret
xor
or
jge
inc
ja
or
mov
in
mov
and
aaa
sub
push
fistpll
xor
cmpsb
cltd
in
insl
sub
cli
mov
fdivr
add
mov
or
movsl
and
push
out
xchg
cmp
mov
int3
sarb
gs
out
rorb
xchg
outsb
stos
ret
sub
xchg
cld
sub
imul
popf
push
mov
sbb
out
out
xor
push
aam
mov
xchg
xchg
rep
lds
lea
hlt
aas
mov
mul
mov
pop
push
mov
dec
push
fisttps
ss
mov
dec
pop
sub
test
sbb
add
nop
xchg
cld
xchg
mov
pop
xchg
inc
pop
ja
sbb
scas
das
arpl
xor
pushf
jle
or
int
pop
jl
cmp
inc
add
cmp
pop
mov
int
add
mov
out
xor
cmc
arpl
mov
repnz
mov
cmp
lahf
cli
loop
dec
test
mov
mov
inc
mov
jge
xor
push
dec
gs
xchg
mov
sub
out
push
mov
faddp
pop
jb
mov
jmp
faddl
paddsb
mov
or
pop
or
push
push
push
lds
lret
pusha
push
mov
bound
leave
iret
mov
inc
dec
mov
pop
sar
adc
adc
mov
xor
addr16
pop
sbb
rol
sub
dec
aad
cmc
adc
mov
xchg
in
jnp
xor
cmp
scas
outsb
inc
sbb
cmp
sbb
repz
iret
fnstenv
ljmp
xchg
movsb
pop
je
dec
xchg
mov
cmp
das
sub
stos
cmc
mov
dec
popf
or
xor
xchg
push
data16
addl
mov
in
call
or
inc
or
imul
fnsave
dec
or
int3
and
aas
mov
out
xchg
movsl
unpcklps
int3
sub
adc
push
mov
and
shl
mov
lods
flds
adcl
inc
jge
jmp
aaa
or
push
fucomi
xor
mov
pop
sub
into
cld
in
clc
jo
outsb
adc
das
aaa
sbb
test
dec
or
fs
inc
mov
clc
or
movsl
dec
pop
adc
mov
sti
add
pop
in
add
sahf
xor
jno
insl
icebp
adc
in
mov
pop
mov
dec
adc
jg
pusha
enter
cmp
jo
cli
imul
mov
mov
aam
push
out
mov
sbb
cmpsl
jns
xor
lea
push
outsb
add
sbb
scas
in
int
sbb
xor
push
inc
imul
inc
cmpsb
mov
bound
je
jno
ljmp
mov
dec
xchg
xchg
popa
mov
or
add
es
xchg
pop
iret
test
sbb
adc
sbb
cmp
jo
xchg
pop
xchg
xchg
push
jo
mov
nop
cmp
dec
les
hlt
and
leave
cld
ret
cli
mov
sbb
mov
lods
or
cld
dec
pop
pop
fmuls
int
fs
lahf
adcb
int3
int3
insl
ja
das
or
jno
loope
dec
inc
aas
push
dec
lds
fmull
cmp
push
pop
or
imul
cmp
sbb
imul
cmc
pusha
mov
mov
pop
mov
or
jl
negb
sub
stos
int
out
jae
hlt
repz
jg
xor
aam
cs
dec
jge
iret
and
mov
xchg
loope
cmp
aas
mov
add
dec
jne
setae
mov
pop
rol
mov
push
pop
in
sbb
or
xlat
mov
imul
sbb
test
xlat
xor
sbb
inc
inc
insb
iret
add
imul
inc
push
or
lea
cmc
clc
xlat
dec
outsb
out
sti
adc
xchg
loopne
rcrb
loop
jmp
lret
test
or
mov
jno
sbbb
xor
jae
mov
repnz
and
stos
aad
sub
mov
cli
popa
cs
dec
mov
lcall
lds
pop
shl
fisttpll
shlb
repnz
sti
add
sub
mov
mov
add
cs
mov
out
dec
rol
mov
scas
or
aad
into
into
xchg
sub
stc
xchg
ljmp
stc
leave
mov
fdivr
dec
mov
lcall
adc
test
out
cmp
xlat
out
test
movsb
cmp
test
addr16
inc
cmpsl
push
xchg
hlt
sbb
sbb
push
int
movsb
ljmp
mov
in
adc
das
stos
cmp
and
cmc
xchg
mov
movsb
repnz
jns
cmp
or
jae
icebp
jmp
pop
ja
cmpsl
sbb
movsb
push
pop
in
jle
push
push
rclb
adc
cwtl
in
lahf
jge
push
shll
outsb
je
jmp
loop
and
add
int3
jbe
cld
fstp
inc
popa
sub
gs
push
inc
mul
sbb
push
and
xor
hlt
dec
outsb
in
lock
out
leave
ja
aas
push
shl
mov
ret
scas
stc
cld
fisttpl
dec
xor
dec
xchg
adc
fcompl
pop
xchg
pop
mov
sub
xor
shlb
cmpsb
mov
fcomip
bound
mov
jmp
mov
in
leave
mov
fwait
mov
test
jg
sub
push
and
sub
xorl
jg
dec
fiadds
sub
sub
xlat
data16
push
adc
push
out
xchg
repnz
rolb
shlb
push
adc
pushf
shl
outsl
mov
xchg
fildl
xor
int
mov
push
loopne
cmpl
sbb
into
or
mov
into
scas
shlb
ss
mov
je
mov
es
xchg
loopne
cwtl
aad
jne
fnstsw
idivb
stos
gs
dec
sub
mov
cld
mov
sub
lock
nop
ss
or
add
dec
push
mov
cltd
cs
pop
sub
leave
dec
inc
add
shlb
mov
jle
xor
lret
insl
lret
test
fsts
nop
jmp
xchg
or
fcompl
pushf
pop
dec
mov
ret
push
and
inc
lret
push
pop
repz
gs
xor
lock
sub
repnz
cli
cmp
cwtl
xchg
cmpsb
push
shlb
adc
outsl
and
mov
shll
scas
jno
out
mov
mov
leave
test
xchg
xchg
nop
rcr
ret
mov
mov
aad
jns
inc
push
jnp
xor
jecxz
fidivrs
movsb
push
xor
insb
sbb
sub
mov
push
scas
out
out
jl
bsf
movsl
fildll
inc
or
pop
out
mov
xchg
mov
and
bound
out
shrb
dec
mov
jno
pusha
cld
into
rcll
jge
test
mov
cltd
dec
imul
jmp
fs
jae
push
rorb
mov
jecxz
push
ficompl
cmp
into
mov
shll
adc
adc
daa
or
divl
xchg
sahf
sbb
mov
dec
divb
push
sub
mov
and
sub
roll
pop
mov
or
sarb
lretw
in
push
data16
xor
jo
shlb
adc
add
dec
xchg
mov
divl
cmc
adc
mov
imul
cli
cmp
pop
jns
fsubp
adc
scas
and
sbb
sbbb
cmp
pop
jnp
fldt
pop
mov
mov
shll
sbb
xor
mov
inc
or
xchg
fisubl
mov
adc
jl
adc
mov
fs
push
repz
mov
lds
push
pop
enter
mov
clc
cmc
cmp
add
xor
jle
jge
sbb
jae
out
mov
jl
js
test
lahf
rcrl
scas
outsl
int
mov
jle
dec
fdivs
pop
sbb
jnp
repnz
js
mov
mov
sub
dec
das
test
lods
inc
gs
test
push
in
adc
imul
cmpsb
inc
mov
enter
loopne
cmp
sub
sub
adc
dec
iret
jl
in
insb
in
mov
dec
sub
add
aas
push
das
xlat
inc
rcr
push
repz
xchg
and
mov
pop
repnz
ja
or
jl
adc
jne
fldcw
dec
pop
icebp
imul
or
or
je
jge
xchg
repnz
xor
orb
mov
add
jbe
or
inc
mov
outsl
gs
lods
sbb
push
es
and
mov
pusha
sbb
or
cmp
inc
aas
cli
xchg
and
fs
nop
idivb
mull
and
xlat
loop
arpl
dec
xor
add
mov
dec
push
xchg
call
push
das
lods
xchg
insb
inc
sti
mov
repnz
or
dec
lcall
inc
push
adc
pop
jmp
mov
sarb
rcl
mov
cmpsb
lds
xor
add
push
ljmp
xchg
xor
sbbl
insb
sbb
jp
xchg
loopne
aas
mov
sti
out
mov
shll
dec
sbb
mov
cmp
scas
mov
fstl
loop
pop
cmpsl
jmp
push
sbb
jae
cmpb
rorb
orb
mov
outsb
jle
sbb
push
sub
outsl
pop
mov
adc
jo
inc
and
idivl
lods
xlat
lds
out
mov
mov
push
lret
jbe
mov
lock
dec
dec
or
test
fisubl
xchg
mov
hlt
addr16
and
iret
cmpsb
subl
in
push
push
dec
sarl
xor
pop
call
imul
imul
scas
pop
ret
xchg
add
mov
add
cwtl
movb
push
in
or
mov
test
data16
inc
es
and
pop
and
or
mov
jbe
cmp
pop
pop
hlt
cltd
sahf
sub
inc
aam
jno
lret
jl
add
int
mul
std
movsb
dec
mov
sub
sti
sbbl
adc
jl
je
push
dec
xchg
add
int
ss
arpl
mov
jbe
addl
xchg
aad
sbb
xchg
lret
shl
das
inc
mov
mov
mov
test
xchg
cmp
xlat
push
and
pop
adc
addr16
lahf
pop
sbb
out
int3
pop
sbb
nop
test
and
lea
push
test
iret
sub
jne
test
sarb
sahf
mov
jmp
pusha
shll
inc
and
mov
lahf
xchg
add
or
and
cs
and
addl
arpl
lret
int
lcall
clc
movsb
fnstcw
out
in
or
cmp
ret
lret
repnz
shlb
sahf
mov
jp
add
mov
xchg
cmp
and
push
jge
add
adc
sbb
fldcw
add
pop
stos
mov
or
outsl
stos
mov
cli
daa
xchg
mov
add
and
pop
or
bound
vpcmpgtb
push
jne
jnp
fwait
cmp
inc
xor
call
xchg
jmp
mov
mov
sub
pop
andl
adc
xor
inc
daa
dec
and
or
sarl
pushf
or
mov
xlat
push
jecxz
mov
inc
out
xchg
mov
and
clc
int3
cmpb
mov
push
test
shll
rorb
inc
adc
cmp
enter
push
andb
arpl
xchg
repnz
lret
jge
scas
cmp
sti
adc
push
add
cmp
je
popf
xchg
repz
jnp
ffreep
and
mov
repz
jnp
adc
dec
lds
inc
cmp
ds
xchg
mov
mov
and
outsb
push
cs
sbb
sti
push
or
mov
and
mov
dec
mov
lcall
dec
pusha
mov
adc
and
iret
and
roll
cmp
ljmp
insl
xchg
sub
rcr
push
shrl
js
dec
fs
or
add
mov
push
fstps
movsl
jecxz
je
aad
out
jns
cmpsl
call
sahf
push
inc
xchg
mov
popa
xor
out
push
xchg
pop
xchg
mov
inc
add
int3
sarl
test
mov
jge
adc
xlat
sub
lds
fwait
xor
ret
mov
sbb
xchg
leave
mov
xchg
fucomip
xchg
mov
lock
cmp
outsb
sbb
andl
orl
xor
jbe
mov
cmpb
movsl
mov
xchg
fwait
loope
addl
add
cmp
in
xchg
mov
pop
lods
sbb
add
pop
std
test
jmp
pop
xor
mov
pop
sub
imul
scas
out
int3
roll
gs
push
daa
enter
insb
lock
lds
or
inc
mov
cmpb
and
xchg
xchg
sub
ss
jno
sbbb
aam
push
cmc
in
ljmp
lahf
scas
pop
cli
mov
xchg
cmpsb
cmp
jp
pop
add
jo
cld
shll
pop
jo
push
mov
shr
mov
mov
lods
leave
leave
push
fwait
das
cmc
pusha
jecxz
cltd
popa
in
mov
mov
xchg
sbb
xorb
adc
out
into
xchg
push
movsl
icebp
pop
add
addr16
data16
and
shl
sub
int3
mov
mov
cmp
pop
jle
jne
sub
ret
sub
cmp
jecxz
mov
xchg
cmc
bound
clc
add
add
lea
add
jno
scas
mov
cmp
movsl
ret
add
jmp
cltd
movsb
sysenter
xchg
out
loop
push
hlt
mov
stos
enter
push
mulb
xor
jbe
lret
dec
es
sarb
pop
xchg
fs
xor
jne
or
adc
stos
or
xchg
movsl
cmpsl
pop
test
rcr
xchg
jle
es
sbb
inc
fcmovnbe
xchg
ds
dec
ret
inc
push
pop
cmp
add
gs
jmp
cmp
pop
cmc
dec
cmp
push
cwtl
lret
fiaddl
dec
pop
xchg
in
push
adc
in
idiv
pushf
mov
out
insl
pop
ficoml
loope
lock
fs
cs
sub
sub
sub
xor
mov
iret
popf
scas
sub
mov
adc
mov
aam
mov
dec
cmpsl
insb
mov
cmp
mov
into
sbb
aad
stc
shll
push
xor
jo
and
jecxz
sub
test
sub
out
cmp
mov
mov
ss
into
sarl
mov
nop
xchg
lods
mov
mov
fiadds
rorb
outsl
jl
add
jbe
insl
inc
or
jle
mov
dec
pop
pop
fldcw
push
or
into
hlt
test
pop
mov
dec
dec
daa
add
mov
shrl
pop
xchg
ds
cltd
cmc
fs
inc
insl
int
and
jmp
sub
scas
fisubs
mov
fmuls
cltd
arpl
aam
std
jbe
push
inc
ss
daa
adc
stc
add
sub
out
rorb
mov
loope
ljmp
dec
ljmp
sbb
gs
push
fsubrl
mov
mov
lods
xchg
int
movsl
and
jecxz
leave
dec
aad
adc
xchg
js
jno
ret
cmp
dec
out
lahf
push
arpl
push
cs
add
mov
xor
call
es
sbb
push
dec
imul
scas
xor
adc
lret
fwait
inc
jmp
push
push
popf
and
mov
push
push
mov
xor
push
inc
aad
ss
clc
lret
outsb
mov
out
add
jmp
xchg
sar
mov
add
jle
cltd
test
push
testl
outsb
cmpsl
decb
mul
sub
dec
movsl
movsb
in
das
int
mov
jmp
jns
jmp
and
push
ljmp
xor
fistl
adc
mov
add
inc
bound
xor
pop
push
inc
shlb
push
ss
or
cmpsl
push
lock
nop
adc
addl
js
repz
and
mov
adc
sbb
push
fildl
inc
pop
fldt
frstor
jg
pop
and
aad
pop
out
xchg
push
or
inc
stc
cmp
adc
jbe
or
fadds
clc
cmc
pusha
popf
xchg
mov
out
insb
fwait
pop
idivl
pop
fdivrl
cmc
sbb
mov
add
push
pop
jle
cmp
or
push
dec
cmp
or
shl
mov
popf
push
scas
je
enter
pop
push
rolb
imul
pop
mov
pop
add
dec
sub
cmp
cli
loopne
mov
jno
mov
mov
mov
dec
xchg
clc
insb
cmp
outsl
sti
and
lds
in
add
addl
addr16
outsl
mov
shlb
out
and
jae
stos
call
das
mov
adc
ss
xorb
jle
cmp
or
pop
in
insb
call
out
inc
scas
sarl
addb
jne
and
setnp
pop
mov
jmp
lahf
pushf
in
sub
add
sti
xlat
cli
ficoml
std
adc
sbb
in
adc
ret
xor
dec
add
push
lret
leave
bound
and
mov
cmp
push
sub
inc
jne
add
push
test
xor
nop
ret
mov
pop
mov
dec
add
jnp
add
stos
jno
ds
frstor
xchg
loope
mov
sub
sub
dec
loope
mov
add
adc
mov
js
lds
adc
clc
pop
je
add
dec
xchg
mov
das
les
and
fwait
jae
mov
int
imul
mov
push
cmpl
clc
out
cmpsb
jge
xchg
out
add
fmull
outsl
xlat
inc
lahf
fistpl
jae
data16
inc
loop
cwtl
mov
negb
jbe
mov
orb
daa
shl
mov
outsl
jge
jb
int3
ret
leave
jge
add
mov
bsr
push
mov
sub
popf
je
ret
push
fs
mov
inc
clc
push
lahf
xlat
lret
push
pushf
out
inc
jae
mov
ds
pop
movsb
cld
cli
enter
out
push
mov
mov
outsb
mull
sbb
dec
int3
mov
jl
and
leave
xchg
es
mov
dec
or
call
jge
jbe
sarl
mov
out
stos
test
jl
sarl
sbb
mov
dec
sub
data16
out
cmpsl
repz
pop
mov
dec
sbb
pop
or
popa
and
fwait
xchg
insl
inc
jnp
scas
outsl
cmp
sarb
xchg
mov
sub
and
lahf
sub
cld
lods
sub
xchg
mov
mov
jnp
jmp
rcl
sbb
sub
pop
pop
push
dec
in
enter
sub
ret
scas
in
inc
pop
sbb
ss
mov
and
mov
cs
jb
cmp
adc
lcall
xor
and
in
xor
mov
adc
mov
test
je
add
imul
insl
pop
rcll
aad
inc
push
xor
out
push
pop
sti
mov
daa
je
push
push
lods
shll
dec
outsl
sub
ja
aad
pusha
xor
aam
repz
rol
cmp
insb
sbb
push
loope
and
jecxz
outsl
insl
cmpsl
aad
adcl
mov
mov
js
jnp
mov
jo
xchg
aaa
mov
clc
lods
insl
flds
jne
ret
xchg
sti
pop
lcall
test
lods
mov
mov
mov
bound
pop
aas
adc
and
add
cmp
cmpsl
outsb
imul
aam
repnz
scas
dec
arpl
sbb
dec
xor
bound
aad
inc
dec
scas
and
mov
or
mov
lahf
mov
sbb
mov
out
or
xor
xor
inc
mov
or
mov
xchg
stos
insb
add
and
cmpsl
jbe
lret
iret
fiaddl
jae
into
mov
inc
imul
andb
inc
jg
subl
pop
test
xlat
ljmp
pop
mov
cmpsb
out
repnz
xor
and
jg
mov
mov
int3
aas
and
push
dec
xlat
pop
pop
outsl
or
jecxz
jmp
sbb
mov
cmp
pop
movsl
push
clc
jmp
mov
pop
mov
sbbl
in
cmp
andl
xchg
out
push
inc
sub
push
sbb
mov
icebp
sbb
pop
es
push
add
xor
lock
push
fidivs
mov
push
pop
stos
adc
xchg
push
cmpsl
cwtl
dec
lret
add
or
dec
in
call
test
pushf
les
jge
outsl
insl
imul
aas
push
pop
inc
mov
sbb
add
dec
mov
rcl
mov
xchg
lahf
pop
cmpb
pop
rolb
adc
jmp
adc
mov
and
mov
lret
rcll
add
push
and
cmp
cmp
scas
icebp
stos
repz
jb
mov
jnp
sar
or
push
ret
in
out
ljmp
cltd
testl
nop
jnp
hlt
mov
mov
mov
rolb
hlt
jge
sbb
lods
insl
cmp
pop
pushf
sub
gs
pop
es
stc
pusha
insb
mov
jecxz
jno
dec
pop
xchg
sub
fldenv
xorb
sti
mov
cltd
or
mov
arpl
loopne
lret
jb
lods
ljmp
call
xor
ror
outsl
pop
rclb
sbb
sahf
push
jno
ja
xchg
imul
ror
mov
push
push
and
and
jno
notl
ja
sub
mov
ficomps
adc
movsb
jle
fs
mov
sti
addb
gs
cli
adc
popa
pop
mov
lret
cmpsb
leave
push
repnz
stc
divl
jbe
test
cmpsb
addl
test
loope
imul
mov
push
out
dec
movsl
push
nop
test
and
xchg
add
sbb
push
xchg
mov
stos
inc
push
adc
lods
popf
dec
add
movsl
addr16
xor
inc
jg
dec
iret
sbb
mov
push
push
jge
adc
adc
jo
sahf
or
xchg
mov
mov
lock
jne
mov
cmpsl
in
pushl
push
sbb
mov
cwtl
xor
lods
adc
mov
nop
out
shll
add
das
mov
lahf
int3
adc
imulb
inc
inc
jbe
inc
adc
push
rcrb
mov
sub
xchg
xor
ss
xchg
and
sub
cmpsl
sahf
aam
in
stos
pushf
insl
scas
mov
mov
ds
sub
rcrb
fnsave
lods
cmpb
fnstsw
testl
jmp
mov
dec
cwtl
cmp
lods
sbb
mov
jbe
sub
test
sbb
dec
xor
jp
pop
ja
shl
mov
adc
fnstsw
pop
xor
movsb
sub
jno
iret
mov
mov
push
cltd
incb
popf
repz
jne
pop
inc
push
mov
mov
mov
in
mov
sbb
je
mov
mov
and
dec
out
add
test
mov
leave
xchg
call
xor
in
xor
ret
int3
cld
and
enter
sti
test
or
and
push
cli
ret
imul
mov
test
push
mov
fs
xor
cmpsl
xlat
mov
mov
push
sbb
fdiv
pop
push
imul
outsb
add
cmp
push
fimuls
push
mov
repnz
in
fstpt
subb
sahf
jno
mov
or
into
pop
and
addb
mov
cmp
jbe
sub
pop
xchg
mov
jmp
pop
test
mov
cld
arpl
repz
imul
fwait
xor
lahf
mov
repnz
xchg
scas
xchg
cwtl
call
shr
mov
stc
test
mov
mov
add
popl
mov
les
cmp
call
iret
xor
ret
jo
ret
clc
sahf
loop
fs
or
sbb
sub
xor
or
mov
mov
xlat
push
ss
mov
repnz
or
test
xor
movsl
sbb
or
adc
bsr
out
inc
mov
dec
test
stc
daa
push
lret
ret
or
aam
inc
cmc
xchg
push
rorl
mov
outsb
jg
sahf
and
xor
xchg
cwtl
xor
push
push
icebp
mov
mov
stos
push
dec
jae
lds
jbe
add
jmp
loope
inc
pusha
lock
pop
push
cwtl
cld
or
mov
inc
hlt
aam
lock
and
jne
adc
cltd
sahf
loope
idivl
pop
xchg
pop
mov
frstor
mov
jnp
aam
pop
hlt
jnp
cmp
shl
das
cmp
pop
sbb
xchg
adc
mov
out
fstp
ljmp
adc
dec
fisubrl
jb
xchg
and
mul
inc
sbb
repnz
pop
gs
jecxz
inc
cmp
stc
rclb
xor
outsl
xlat
push
mov
pop
lahf
div
ficoml
inc
fbstp
outsb
scas
in
insb
cmp
sbb
mov
shrb
push
cmp
dec
cwtl
or
ret
jge
mov
testb
pushl
pusha
subl
in
or
push
xor
gs
xor
negb
test
movsl
out
jle
pop
mov
leave
adc
mov
cmpsl
inc
jge
cld
dec
or
sub
mov
fiaddl
fwait
shll
enter
sub
pmaxsw
sbb
mov
xchg
stos
mov
cmp
pop
test
imul
test
lock
fsts
nop
inc
sbb
bound
push
push
mov
add
lret
incl
sbb
sbb
lock
pop
and
imul
sub
xchg
je
xor
cmp
mov
aas
adc
inc
lods
and
iret
loope
inc
pop
roll
push
dec
imul
fildll
dec
inc
mov
push
in
mov
negl
mov
dec
lea
das
xor
es
jmp
orl
sbb
imul
add
loope
push
rorb
stos
insb
xchg
dec
sti
inc
sahf
outsb
mov
daa
mov
cli
or
dec
inc
pop
mov
mov
jb
loop
sbb
arpl
push
lods
fcoms
sub
in
lods
cmpsl
nop
inc
in
sbb
adc
lret
xor
sub
repnz
adc
std
push
or
into
mov
cmp
in
jo
and
into
daa
out
into
mov
push
stos
hlt
xor
inc
xchg
lcall
mov
or
dec
out
or
fwait
repz
inc
mov
popf
std
sarb
pop
push
mov
pop
pop
push
or
sbb
hlt
out
cwtl
int
movsl
jecxz
adc
sbb
loopne
adc
das
sbb
dec
incl
fwait
xchg
mov
mov
mov
jo
add
out
and
test
mov
repz
mov
push
push
pop
mov
dec
dec
in
leave
sbb
js
pop
xchg
mov
mov
or
jmp
and
push
and
dec
or
data16
mov
push
aam
adc
mov
pop
push
out
les
gs
mov
pop
mov
push
repnz
jecxz
jbe
lahf
push
dec
mov
fcomps
lret
push
loope
adc
cmc
outsl
clc
mov
push
mov
ja
imul
cmp
not
hlt
int3
push
int
dec
inc
stos
shrb
ja
pop
push
bound
jnp
and
icebp
bound
bound
push
cmpsl
es
dec
xlat
sahf
sbbl
scas
ja
test
inc
adc
jno
stc
xchg
out
hlt
cld
icebp
stos
out
sbb
les
push
xchg
mov
mov
fstps
into
pushl
push
pusha
daa
xlat
and
sbb
scas
hlt
xor
push
add
jbe
iret
mov
cli
mov
int
call
shlb
xchg
ret
leave
or
cs
mov
rcll
push
and
loopne
sub
sub
sub
outsb
fcoml
push
mov
mov
std
shll
loopne
cmc
xchg
xchg
aas
adc
cmp
arpl
sti
arpl
cmpsl
sbb
in
bound
cltd
cmp
dec
mov
or
xor
xor
mov
insb
mov
pop
push
adc
inc
adc
lds
loope
jp
sahf
add
out
in
mov
lret
jl
addb
push
xor
ror
loop
mov
out
fcoml
xlat
pop
fs
push
inc
push
pop
stos
adcl
push
test
in
lds
daa
fsubrl
jno
mov
dec
movsl
call
ss
mov
psrlw
inc
xchg
cmp
jne
mov
outsb
cmp
mov
pushf
add
out
cmpsb
xchg
orl
cmpsl
aas
xor
sbb
loop
gs
or
sbb
ds
add
call
xchg
notb
xor
dec
and
mov
aam
push
mov
pushf
or
mov
mov
sbb
loope
ljmp
or
es
ret
jmp
es
cmp
fsub
push
sub
pop
sub
clc
adc
jae
clc
arpl
iret
push
inc
leave
dec
push
push
jo
fs
outsb
sub
sbb
push
mov
aaa
add
add
dec
jmp
ret
add
ds
movsb
hlt
out
pop
push
mov
sub
lods
cwtl
xor
mov
mov
pop
xchg
test
and
jae
push
push
add
mov
setno
mov
push
out
and
pop
jns
add
mov
cmp
sbb
in
adc
lods
inc
fxam
fstl
popa
xchg
rcr
je
nop
mov
sub
inc
jo
sub
mov
int
xchg
mov
loop
pop
hlt
ss
es
rcl
xchg
cmp
popf
divl
pop
pusha
mov
fdivrl
jle
or
mov
imul
dec
cmc
jnp
or
xchg
testl
popf
jno
inc
adcl
imul
jno
lods
push
inc
test
jp
fstpl
clc
push
mov
pop
or
xor
and
test
jp
xor
inc
and
lea
adcb
or
push
bound
dec
push
push
adc
pop
xchg
pop
sub
xchg
sub
fildl
ficomps
aaa
xor
sub
ficoms
add
arpl
js
jne
pop
inc
inc
or
or
lods
subl
mulb
inc
and
sbb
sub
push
push
insb
push
mov
xor
and
shr
hlt
data16
or
adc
mov
ss
add
out
push
iret
cmpl
adc
sbb
jo
xchg
pusha
xlat
and
mul
cwtl
cmp
adc
cmp
xor
jb
mov
add
je
pop
mov
jge
call
jle
sub
xlat
dec
sbb
lret
scas
rolb
sub
adc
nop
mov
movsb
jmp
sub
sub
dec
sti
adc
sub
cmpl
mov
lds
add
mov
pop
roll
sub
testb
mov
xor
add
mov
lahf
fld
outsl
test
fmull
subb
push
mov
mov
lds
lock
add
inc
lea
cmp
sbb
sub
push
fwait
xchg
push
push
push
mov
mov
cmp
push
mov
push
fildl
andb
inc
xchg
pop
movsl
push
inc
fldl
mov
xchg
insb
sub
mov
pop
orb
push
xor
mov
movsb
and
mov
dec
fildll
adc
sub
cmpsl
cmp
jg
mov
add
jbe
shlb
ljmp
mov
xchg
dec
cmc
xchg
dec
pop
pop
fs
mov
push
stos
push
ret
mov
cmp
and
or
insb
cmp
or
int3
inc
movsl
jno
jl
xlat
push
push
call
jno
test
movsb
mov
mov
dec
sahf
pop
add
sbb
cltd
fsubrs
pop
xor
adc
xor
cmc
stos
push
push
ds
adc
jnp
fs
fistl
jnp
jno
outsb
test
xor
jnp
lret
cmp
push
rorl
je
lock
or
inc
xor
or
pop
sbb
faddl
inc
mov
add
xor
mov
adc
push
add
cmpsb
rcrb
jmp
iret
mov
adc
jns
shlb
jmp
lods
jl
ljmp
neg
out
fisubrs
lea
sub
fstpt
inc
mov
cltd
sbb
sub
adc
pusha
ficoml
mov
cltd
mov
add
sbb
loop
fsubl
mov
xchg
pop
pushf
add
jl
loope
hlt
jb
imul
scas
sub
adc
fbld
cmpsb
xor
inc
mov
sub
lret
cmp
ja
imul
dec
inc
out
pop
notb
into
mov
sbb
fcompp
les
ljmp
and
sub
movsl
fidivs
xchg
jecxz
cmc
outsl
fists
subb
adcl
fucomp
std
js
out
sti
lods
inc
movsb
mov
fmul
and
fstl
xor
sub
xchg
stc
xor
ret
scas
jb
icebp
ret
push
mov
addr16
ret
test
faddp
sbb
arpl
cmc
lahf
add
inc
imul
inc
mov
fisttpl
aas
mov
fnsave
fidivrl
lret
cmp
jge
inc
sbb
pop
sbb
inc
jne
cmpb
pop
scas
sbb
icebp
mov
push
pop
dec
xor
call
scas
cwtd
aas
in
loopne
jg
mov
cmp
or
or
ret
pop
js
adc
loopne
lock
sarl
cmp
xor
push
test
ds
xchg
sbb
or
test
jle
jg
sbb
inc
dec
call
pop
xchg
lret
cmp
scas
cld
pop
jmp
aaa
cmp
fpatan
mov
pop
decl
adc
and
sti
sahf
cwtl
sbb
push
pop
xor
clc
inc
sbb
stos
mov
shrb
push
jg
dec
inc
mov
mov
and
cmp
push
loopne
jl
push
push
stos
lea
out
outsb
dec
xor
loopne
mov
popa
hlt
mov
mov
xchg
das
pop
xor
test
test
cltd
cmp
cld
loope
and
icebp
xchg
jae
bound
negb
subl
negb
sbb
sub
jo
stos
and
shlb
int
loope
jnp
shll
fucom
imul
ljmp
dec
push
sbb
jb
lods
or
dec
sti
xchg
push
inc
jnp
shrb
jl
add
pop
popa
popf
and
mov
imul
pop
pushf
or
push
notb
mov
es
aas
mov
xor
add
pop
pop
dec
jg
repnz
lock
imul
sti
mov
or
mov
sub
cmpsb
loop
or
loope
test
or
mov
xchg
and
lods
and
sub
in
in
or
js
hlt
cli
add
pop
fistpl
addr16
aam
ja
dec
lcall
mov
xor
ds
cld
ret
div
sbb
mov
sbb
xor
enter
pop
cmp
lock
dec
mov
outsb
lret
or
addr16
mov
pop
pop
in
push
jg
pslld
inc
cld
sarl
xorb
and
adcb
loop
push
mov
in
cmp
ss
xchg
mov
jbe
lods
jp
mov
pop
dec
fsts
pusha
lahf
je
mov
lahf
inc
sar
arpl
ret
in
xchg
clc
cmpsb
inc
xor
pop
lock
test
or
jl
out
test
mov
or
adc
cltd
lods
add
add
xchg
mov
dec
push
xor
clc
dec
int
lea
cmc
mov
popf
jns
xchg
nop
stc
loop
dec
pop
push
fwait
addr16
and
jp
xchg
jnp
dec
adc
test
cltd
push
aaa
pop
faddl
adc
icebp
enter
icebp
cli
or
or
ja
xchg
cmc
mov
std
loop
mov
sbb
test
sbb
sbb
sub
cmp
or
cld
adc
ja
lock
jg
repz
roll
pop
repnz
jbe
sub
roll
and
fidivrl
jl
jl
sub
out
das
mov
addr16
dec
mov
lcall
inc
iret
add
mov
pop
pop
xor
in
inc
aad
dec
dec
lea
mov
jp
shlb
push
in
mov
mov
mov
lret
repnz
mov
mov
sbb
inc
stos
pop
inc
mov
xor
outsl
out
pop
xor
sub
mov
lods
adc
cmp
xor
cmc
cwtl
sbb
fdivl
subb
sbb
mov
xor
push
inc
pop
lods
mov
cltd
sbb
outsb
test
je
jbe
cmpsb
adc
mov
mov
pusha
adc
stos
sub
jbe
aad
jl
xchg
xor
xor
mov
inc
es
mov
fwait
orb
scas
dec
int
cmp
bswap
lock
lods
inc
pusha
mov
int
fisttpl
cmp
jae
inc
stc
push
divb
test
ror
outsb
push
add
sbb
fcomp
mov
cmp
mov
dec
nop
xchg
fwait
imulb
out
jo
pop
popf
or
push
repz
xchg
divb
leave
inc
and
sub
xchg
pop
movsb
in
shlb
and
mov
lock
dec
fdivl
mov
mov
dec
inc
jae
cmp
mov
in
data16
jae
cmp
mov
ja
dec
fisttpl
sbb
push
cmp
push
ficompl
pushl
leave
sbb
push
xor
cltd
push
xor
inc
mov
movsl
stc
fs
jne
into
ret
icebp
repnz
imul
int3
xor
lods
cli
lea
mov
jne
lods
pop
icebp
and
outsl
es
add
icebp
out
ljmp
pop
xor
adc
xor
cmpsb
cld
std
cmp
xchg
push
push
cmp
push
dec
insl
nop
or
pusha
call
stos
cmc
nop
xor
repz
xchg
leave
xchg
add
leave
mov
xor
test
pop
push
fs
into
mov
icebp
fldt
xlat
inc
notb
mov
scas
add
es
out
xchg
pushf
cli
mov
jb
addb
and
std
lods
cmp
mov
mov
cmc
int3
add
int
adc
mul
in
xrelease
loop
fcmovne
push
nop
int
popa
movsb
or
mov
int
xchg
inc
or
adc
rclb
cmp
push
cmc
mov
or
jno
pop
mov
inc
cmpsb
iret
lods
jecxz
es
push
pop
sbb
sbb
jl
test
cmp
mov
xlat
mov
inc
dec
ret
xchg
jge
pop
cmp
lahf
cmp
mov
inc
jne
xor
cmpsl
scas
enter
rol
fdiv
insl
lahf
cmpl
sbb
mov
jno
enter
out
mov
add
and
aam
mov
lcall
adc
daa
pop
nop
dec
dec
add
out
pushw
cmp
aam
pop
aas
jo
movsb
fcmovb
mov
mov
mov
lcall
lea
dec
fcom
cwtl
scas
cmp
loope
aas
jp
loop
and
adc
dec
push
push
sar
jb
xchg
into
ret
dec
cmc
out
shlb
mov
cmp
jl
in
andb
inc
roll
add
xchg
sub
inc
jp
out
es
pushl
loopne
dec
cli
and
loopne
movsl
popa
lock
movb
cmp
ret
mov
mov
bound
rcrl
subb
sub
sbb
lock
jb
or
add
pop
in
jge
decb
mov
jl
in
test
xchg
cld
xchg
sbb
pop
leave
fistps
add
and
cmp
mov
call
popa
mov
fmull
clc
int3
cmp
arpl
push
push
mov
mov
stos
rol
aad
adc
imul
or
stos
inc
jmp
jns
adc
clc
mulb
xchg
movsl
or
cli
out
add
negb
jecxz
fcomip
cmp
cmp
push
dec
rcll
xchg
dec
js
in
in
cmp
inc
imul
sub
popl
pop
mov
sbb
dec
outsl
cmp
stos
lods
sbb
fwait
arpl
xchg
mov
xor
lods
push
mov
and
mov
push
mov
mov
and
movsb
cmp
sub
sub
fistl
xchg
push
ret
adc
loop,pn
aas
stos
jmp
aas
subl
push
adc
cmp
rorl
popa
adc
sbb
mov
fdivl
pop
daa
mov
mov
loope
cmp
jle
mov
cli
jbe
std
add
jp
mov
insl
dec
mov
jmp
jl
imul
ret
inc
sarb
mov
dec
pusha
sti
push
mov
rolb
dec
xor
and
mov
sbb
mov
popa
stos
xchg
nop
jnp
fidivs
pusha
sub
nop
aad
dec
mov
imul
or
mov
outsl
ret
sbb
or
sub
xor
or
ja
popf
div
add
out
cmp
nop
mov
add
mov
pop
push
pop
adc
imul
adc
nop
cmpsb
jnp
xor
pop
aam
xor
mov
mov
pop
sarb
aas
xor
movsb
cwtl
pushf
xchg
sbb
out
jle
adcb
push
mov
cmp
jmp
fwait
cltd
sbb
and
or
out
out
xor
xchg
cmpsl
shlb
cmpsb
into
lahf
xchg
into
out
shlb
pop
push
jb
mov
movsb
stos
test
outsl
out
repz
inc
stos
addr16
xchg
in
pusha
mov
or
fsubs
stos
inc
adc
fs
stos
sar
sbb
in
aas
jle
jl
pop
or
dec
xor
pop
js
shl
pop
jge
dec
addr16
cmp
push
mov
mov
ljmp
pop
fwait
pop
pushf
movsl
xchg
stos
fsubl
mov
jp
xlat
shll
jb
mov
and
test
dec
xor
std
fwait
decb
sub
repnz
jne
or
pop
movsb
xchg
mov
cmpsb
gs
out
or
lds
dec
xor
popa
mov
fisubs
add
popa
or
or
movsb
ret
in
jmp
orl
pop
ret
movsb
cmp
lock
pop
add
cmpsl
movsl
rcll
pop
daa
bound
orl
jno
mov
bound
aas
out
and
sti
repz
xchg
pop
push
jbe
stos
push
dec
push
mov
xchg
ss
adc
sub
push
adc
sub
sub
mov
cmpsb
xchg
push
jp
mov
popf
add
mov
psrld
or
sub
and
sbb
or
dec
xor
cmp
sbb
movsb
andb
shll
fnstcw
xor
jno
mov
loope
idivb
icebp
jl
dec
call
dec
hlt
aas
ja
sub
jne
aad
out
pushf
mov
loop
xor
stos
lods
sbb
dec
int3
cmp
push
dec
rcll
aas
ja
mov
movsb
sbb
cmpsl
or
repz
or
lret
clc
mov
xchg
mov
push
fadds
pop
test
notl
in
cld
fidivrs
shrl
out
xor
inc
mov
jb
bound
test
aam
leave
sub
mov
ljmp
dec
fsts
sub
cmp
jo
fisubl
in
cld
sahf
in
inc
or
in
rcrl
sub
dec
rclb
addr16
xor
mov
pushf
xchg
pop
pop
je
sub
mov
mov
mov
mov
fs
jb
pop
jl
ffree
dec
vmovd
test
adc
push
jne
div
repnz
xchg
xchg
stc
mov
xchg
add
cld
xor
xor
lcall
aaa
cs
lea
push
push
xchg
xchg
stos
test
stos
enter
int3
mov
pushf
cmpsl
call
add
and
fdivr
es
insb
shll
xchg
pop
scas
sbb
test
mov
fdivp
jmp
bound
icebp
push
rorl
add
push
push
mov
sbb
mov
daa
jp
in
imul
push
mov
insl
mov
mov
mov
sub
inc
lea
imul
shll
push
sub
xchg
lahf
push
fdivrs
lret
sbb
les
mov
mov
jge
dec
sarb
push
inc
outsl
loopne
std
mov
pop
jg
adc
sub
lods
cld
cmp
push
mov
or
aas
dec
add
xchg
sbb
push
mov
imul
ja
sbb
pop
and
daa
lock
sbb
and
lock
jnp
inc
pop
das
add
cmpsb
jnp
fisubl
push
insl
imul
std
out
cmp
mov
pop
inc
test
jg
sub
and
and
adc
outsb
loopne
outsl
mov
inc
stos
adc
or
je
fsubrs
mov
push
dec
or
sbb
pop
mov
cmp
sub
sbb
int
inc
or
ret
jle,pn
stos
add
push
mov
jns
iret
idivl
push
inc
mov
and
add
aaa
xchg
iret
fdivl
mov
nop
adc
data16
xlat
jle
cs
push
aad
xchg
dec
cmpsb
cwtl
sub
add
out
sub
fnstenv
testl
adc
dec
mov
bound
out
or
push
faddp
and
jp
lods
pop
jmp
xor
mov
pop
stc
adc
xor
fisubs
mov
cmpl
loope
jnp
push
aam
add
pop
sbb
fidivs
repnz
add
sbb
insb
jle
push
push
lret
idivb
jl
jb
dec
test
pop
xchg
sub
call
arpl
iret
sub
mov
movsb
rol
jl
ret
and
mov
adc
add
iret
fisttpll
loop
cld
in
inc
cwtl
ss
push
xchg
add
mov
jb
icebp
pop
cli
mov
and
jnp
cmp
cmp
push
add
dec
in
insb
hlt
xor
ret
insl
mov
daa
push
out
lods
jecxz
test
or
insb
daa
mov
or
idivl
fldl
add
push
jo
xor
pusha
adc
or
adc
enter
jnp
inc
aaa
movzbl
push
xchg
lahf
pop
mov
jns
jae
popf
jo
pop
jmp
pop
stos
dec
mov
xchg
lret
inc
int3
insl
aaa
data16
xchg
test
insl
or
jns
push
dec
fcmovne
popa
mov
add
jg
mov
lods
xor
sub
adc
sahf
test
pop
test
mov
push
js
push
or
xchg
ss
movb
add
add
mov
mov
cmpb
repz
push
xor
out
lcall
leave
lock
pusha
fs
add
int
vsqrtss
jmp
jo
movsb
mov
xor
mov
mov
hlt
into
mov
and
movsb
and
mov
pushf
dec
dec
in
pop
cmpsb
push
insl
dec
xchg
mov
out
and
xchg
xchg
ljmp
lods
lock
inc
mov
cmp
aaa
xchg
out
or
mov
dec
mov
mov
rol
mov
pop
dec
fcmovnbe
insl
jg
mov
cmp
addl
and
mov
imul
or
fidivl
outsl
rolb
add
add
adc
mov
pop
clc
dec
lods
push
test
repnz
ret
inc
out
push
mov
inc
in
leave
nop
xchg
or
pusha
push
rolb
repz
pminsw
arpl
cli
mov
gs
push
or
sub
fisubrl
dec
or
out
repnz
sub
adc
popa
cld
testl
adcl
cli
mov
test
push
mov
add
jl
sbbb
andl
cmpsb
push
mov
aad
roll
lock
ja
sub
sbb
pop
dec
int
aas
sub
popa
in
int3
test
pop
add
push
mov
xchg
out
sti
mov
gs
shll
leave
mov
fiadds
dec
push
xchg
daa
adc
and
add
mov
scas
lods
movsl
xor
xor
inc
and
rclb
lods
push
es
insb
mov
cld
xchg
mov
mov
incb
inc
sbbl
and
cmp
ljmp
les
adc
add
insb
cmpsb
inc
inc
jo
xchg
pushf
jg
ss
test
cmp
xchg
int
imul
bound
dec
popa
pop
scas
or
adc
loop
mov
aaa
fsts
add
push
fstps
cltd
rcrb
dec
jg
shl
ret
mov
and
ret
push
xchg
cmp
cmp
xchg
sti
push
push
push
or
imul
out
gs
or
inc
pop
push
pop
xchg
xor
rorl
rcr
or
adc
imul
push
fldcw
xor
xchg
sub
push
pop
xlat
jge
mov
jb
outsl
xchg
call
dec
shrb
mov
adc
jp
fwait
in
mov
inc
jle
jb
data16
xor
gs
negb
jo
jge
dec
sbb
loop
push
push
es
xlat
jle
and
mov
arpl
cmp
arpl
mov
or
add
mov
jge
and
ds
stos
das
pop
test
add
addr16
push
imul
test
jp
add
xchg
stos
add
sti
jg
mov
movsb
das
test
add
stc
fstp
xor
and
lock
lret
leave
jae
pop
lock
sbb
or
fisubrs
fstpt
outsb
push
push
pop
xchg
mov
pop
jg
jbe
outsl
push
jge
xchg
jae
or
and
scas
aam
lahf
push
fadds
jne
out
mov
jge
jp
mov
and
imul
lea
and
or
dec
pusha
out
inc
daa
dec
dec
je
sub
mov
add
into
or
nop
dec
inc
cld
mov
xor
push
iret
int
jns
arpl
in
push
insl
ds
ret
sub
cmp
test
test
scas
mul
lods
lds
add
lahf
push
mov
ljmp
push
jae
push
push
stc
mov
loopne
cmc
pushf
jp
inc
enter
adc
add
add
lret
pusha
lods
lds
pop
adc
pop
icebp
cmpsb
mov
fsubrl
and
stc
in
dec
push
sbb
mov
inc
notb
dec
mov
jmp
and
stos
int3
fcomi
leave
cld
pop
repz
inc
fcmovnb
repnz
test
in
jp
cmp
popa
std
adc
xchg
sbb
lret
mov
dec
jno
mov
imul
in
mov
jp
push
push
mov
data16
rcrb
les
dec
push
jns
inc
mov
mov
into
clc
push
push
cli
push
xor
imul
mov
or
xor
pop
adc
inc
mov
dec
adc
pushf
roll
jbe
cs
mov
out
dec
int
rcrl
idivl
jp
dec
jle
cli
jae
rorb
mov
push
mov
jg
cwtl
and
xchg
lea
pop
xor
stos
mov
nop
or
jmp
out
repz
fbstp
cmp
inc
cmp
xchg
and
push
mov
pop
push
aam
xor
or
loop
out
sahf
xor
fsts
scas
and
hlt
insl
sub
inc
inc
jp
lret
out
insl
fnstcw
lock
mov
cmp
ficoms
ficompl
gs
inc
rcll
fsts
fwait
sub
loopne
cmpsl
hlt
add
scas
aas
pop
jge
adcb
clflush
test
mov
and
into
ret
mov
std
dec
push
pusha
sbbl
testb
cwtl
or
xor
fmul
arpl
stos
mov
out
jae
or
jp
test
add
push
sub
sbb
cmp
stos
cwtl
adc
cmp
mov
dec
mov
dec
or
lcall
ljmp
mov
fimull
lock
int3
bound
xchg
lock
push
and
decb
mov
xchg
repnz
jnp
in
cmpsl
or
jl
test
imul
push
in
ret
dec
scas
sub
aas
inc
popa
sahf
xchg
add
mov
mov
ret
es
pop
aad
movl
mov
jge
mov
xor
jae
bound
cmp
jno
in
das
scas
shlb
and
pop
fistps
inc
inc
stos
pop
jcxz
mull
int
xor
loop
mov
in
jle
lea
mov
add
adc
pop
cs
dec
pop
mov
and
out
enter
fnstsw
sub
imul
sub
push
xorb
enter
aad
sti
xchg
jne
mov
scas
cmpsl
mov
fistps
dec
push
out
sbb
ror
mov
mov
or
out
or
sbbl
lock
jae
inc
leave
sub
loope
movsb
add
fucom
add
test
test
mov
fs
test
xchg
xor
iret
cmp
xor
mov
lret
push
pop
lahf
xor
loope
or
xor
and
xchg
lea
and
scas
lock
aad
xor
pop
repz
rorl
ret
fistl
test
outsl
andl
or
mov
icebp
mov
sub
push
dec
xchg
shl
shlb
mov
mov
pop
repnz
push
dec
jae
in
pushf
rcl
push
test
sbb
mov
push
hlt
push
cmp
pop
ret
or
iret
jne
sbb
ret
push
xchg
jns
mov
mov
popa
ljmp
xchg
add
and
or
ret
jb
cwtl
cmp
mov
ljmp
cld
sti
test
mov
or
cmpsl
adc
mull
rcrl
jb
notl
cmp
sbb
xchg
inc
xor
test
aaa
mov
test
inc
lods
mov
pop
mov
xor
xor
or
pop
sub
push
fs
ss
rcll
cmp
push
out
aaa
pusha
pushf
jmp
cmc
pushf
pusha
lea
xlat
scas
jmp
pushf
mov
enter
pop
and
xchg
dec
lock
jle
xchg
lds
popf
repnz
arpl
mov
aaa
mov
test
jns
addr16
lahf
pop
jle
outsb
push
adc
adcl
fstps
cwtl
push
adc
push
cs
push
cmpl
and
nop
hlt
dec
aaa
mov
mov
and
aaa
call
out
mov
fists
sbb
sub
in
and
test
paddw
inc
stc
stos
pop
mov
add
or
std
mov
das
xchg
test
and
decl
test
inc
dec
popf
data16
mov
mov
pop
shlb
aam
add
hlt
mov
add
jns
in
sti
addb
xor
dec
cmp
push
pushf
dec
stc
add
jg
jnp
mov
dec
xor
xchg
mov
sbb
stc
je
jnp
or
leave
sarb
push
jecxz
cmp
cld
fidivrs
push
jo
mov
bound
or
test
adc
loop
dec
int
xchg
mov
popf
test
popa
xlat
mov
xchg
fldcw
into
mov
outsl
mov
inc
xchg
pushf
cmp
mov
jmp
stc
xchg
xor
frstor
push
insl
jmp
push
shlb
iret
dec
nop
faddl
inc
jge
data16
aad
ja
lock
mov
sub
lcall
enter
add
sahf
jl
sbb
addr16
sbb
xor
sbb
dec
rclb
call
stos
lods
push
out
std
gs
and
push
imul
in
fs
sub
xchg
xchg
mov
push
call
jle
adc
and
add
pop
mov
movlps
xchg
inc
stos
fnstenv
inc
cld
orb
aas
mov
hlt
jne
negl
fbld
inc
mov
repz
pop
incl
lods
cltd
xchg
in
repz
sbb
pushf
jl
pop
push
scas
adc
fidivrs
or
adc
xor
das
rcrb
ja
in
adc
jecxz
mov
shll
xor
and
lahf
stc
adc
fiaddl
add
sbbl
test
cld
or
and
bound
xchg
inc
mov
cmp
pushf
xchg
lods
mov
push
xor
leave
add
mov
pop
ficomps
mov
xor
popa
push
xor
lret
xchg
dec
shlb
addr16
adc
insb
imul
adc
lahf
stc
sbb
lret
xchg
mov
dec
imul
fistpll
sbb
rorb
mov
dec
loopne
mov
int
inc
push
ja
arpl
repz
test
pop
int
or
jae
hlt
js
jg
xchg
adc
add
xchg
push
dec
push
mov
xor
dec
js
rcrl
mov
js
lds
int
aas
addl
dec
jo
repz
pop
imul
or
cmpsb
add
rcrl
lods
inc
adcb
and
testb
cmp
iret
cld
icebp
mov
adc
push
cmp
xor
pop
pushf
cmp
jmp
mov
fldcw
lahf
leave
xchg
mov
add
out
add
outsb
xor
cld
jge
dec
nop
iret
std
insb
mov
jns
add
int3
js
movsl
out
mov
dec
lds
push
cmc
outsl
jp
or
or
fs
lahf
mov
ljmp
and
pop
ss
outsb
push
sbb
inc
nop
rorl
ficompl
fisttps
add
xor
or
mov
adc
and
cmpsl
pop
add
scas
inc
and
adc
mov
mov
mov
je
add
jns
aad
jae
out
dec
out
orb
mov
inc
inc
test
cmp
aas
js
js
mov
popf
add
mov
push
punpckhdq
adc
inc
or
jnp
cli
sub
bound
mov
and
xchg
sbb
sbb
xchg
repz
add
ljmp
push
push
mov
ret
xchg
lods
mov
jnp
and
or
movsb
inc
nop
inc
mov
sbb
inc
loopne
testb
clc
mov
dec
ss
dec
push
in
mov
cmpsb
cmp
jno
pop
dec
jbe
pusha
mov
stos
lahf
mov
add
dec
movsb
test
xchg
std
test
mov
out
cmc
adc
pop
stos
add
clc
mov
add
stos
adc
sbb
pop
xchg
pop
movsl
add
test
mov
xchg
imul
fiadds
cwtl
xchg
insl
fisubs
push
adc
xor
popa
sbb
imul
scas
add
stc
sbb
xchg
add
pop
iret
jo
jnp
jne
cs
cmp
into
mov
xor
fldt
sbb
pop
inc
or
bound
dec
cld
aas
in
xor
mov
cmp
icebp
imul
nop
adc
jno
andb
push
mov
sbb
ss
jnp
jmp
test
out
jns
jg
test
shrb
and
frstor
loop
fs
adc
cmpsl
adcl
mov
pop
inc
inc
fisubs
rcrb
imul
leave
call
cli
call
shlb
mov
xchg
dec
outsb
test
jp
push
jbe
iret
cmp
adc
cmp
or
jp
movsl
js
xor
mov
fldln2
mov
ljmp
add
imul
mov
hlt
sub
je
inc
das
mov
fsubs
mov
dec
sub
jg
mov
roll
jno
dec
std
fs
pop
sub
data16
sbb
mov
push
lea
jl
xchg
leave
jmp
movsb
jmp
xchg
into
xchg
mov
lods
rcrb
iret
ss
pop
sti
xchg
loopne
sbb
mov
sbb
and
mov
insb
or
sbb
push
xchg
pusha
cmp
aam
in
daa
inc
dec
in
add
sbb
pop
mov
pop
inc
out
enter
xchg
push
adc
les
jbe
imul
dec
aam
mov
cmp
sub
test
cwtl
pop
inc
sub
test
movsb
pop
jle
jno
jmp
cs
lret
dec
sbb
mov
lahf
rol
mov
movsl
xchg
loop
stc
sub
sarl
imul
or
inc
adc
pop
and
sbb
jnp
cmp
scas
mov
popa
ss
sub
push
inc
into
mov
fcompl
sub
pushf
inc
mov
xchg
adc
rcl
xor
mov
in
decl
xchg
push
cld
cltd
adc
sbb
adc
imul
push
fsubl
push
test
imul
mov
mov
sbb
mov
repz
js
mov
mov
rclb
mov
jnp
mov
push
pop
into
popf
inc
sbb
jnp
insb
mov
xchg
jl
gs
iret
push
adc
jb
jb
jnp
stos
fnstsw
fisttpll
ret
xchg
psadbw
mov
mov
sub
ret
cmp
int
cmp
sbb
mov
out
gs
call
sub
add
inc
jb
insb
add
call
idivb
pop
dec
dec
mov
inc
fdivl
sbb
jno
xor
xchg
repz
icebp
pop
outsl
rorb
in
dec
sbb
lock
enter
iretw
mov
std
jnp
cmc
dec
jl
xlat
ficoml
bound
fs
sub
lret
fwait
pop
add
sbb
fs
test
outsl
mov
jns
cmp
leave
or
and
jmp
sbb
cmp
imul
lret
ficompl
cmpl
dec
test
std
dec
cltd
lock
jnp
push
jnp
mov
js
outsb
aas
cmp
ficoml
mov
pop
leave
inc
stos
push
popf
xor
mov
mov
insl
insl
cwtl
lods
call
dec
mov
lcall
lea
in
imul
mov
ljmp
push
mov
gs
arpl
inc
ljmp
shr
xchg
mov
push
pop
lret
pop
jp
daa
mov
or
sarl
outsb
andl
mov
out
jge
pop
mov
shl
cmp
mov
and
js
xor
les
lret
test
sbb
hlt
push
push
mov
pop
cmp
xor
cli
mov
in
mov
in
and
pop
dec
xchg
pop
insl
pop
mulb
shlb
test
inc
mov
fimull
xchg
xor
xchg
pop
adc
push
leave
comiss
das
cmp
dec
xor
push
cmpsl
xchg
lock
test
fcompl
jae
insl
or
mov
aam
dec
std
jl
je
dec
aam
shrl
fidivl
cli
or
stc
dec
ret
add
gs
imul
cmpsb
stc
test
or
push
mov
scas
das
test
test
rolb
clc
pop
fdivrp
dec
aas
outsb
push
es
test
popa
sub
push
setp
sub
push
sbb
nop
mov
xor
sarl
pop
scas
repnz
push
jno
add
jp
pushf
int3
nop
stos
cmp
lret
rol
test
mov
cwtl
push
in
dec
push
mov
leave
push
push
test
cwtl
ja
test
mov
xor
mov
jno
cltd
adc
in
cld
fstpl
sub
push
mov
add
xchg
inc
sti
or
ja
mov
popa
inc
out
pop
add
test
dec
pop
xchg
and
mov
and
stos
movsb
mov
mov
sar
push
fst
in
stos
inc
adc
pop
and
dec
ret
or
jb
test
inc
push
les
movsl
mov
rcrb
imulb
orb
cs
fnstsw
push
xor
inc
xlat
repz
lret
shl
mov
push
mov
cld
outsb
push
lret
test
jmp
cmp
roll
jno
iret
mov
sbb
push
xchg
cltd
xchg
dec
aaa
jb
divb
repz
inc
sbb
sbb
push
daa
hlt
in
aam
or
push
cmp
lret
aam
inc
lea
hlt
in
xchg
inc
int
in
enter
cs
test
push
loope
in
dec
ss
out
jae
sub
call
lea
xchg
push
stc
fidivs
fstpt
adc
push
icebp
les
dec
ret
sbb
adc
loop
and
fisttpll
pop
xlat
iret
pop
in
movsl
pop
mull
in
je
pavgb
mov
data16
push
jb
and
gs
adc
sbb
fistl
testl
stc
test
pop
sbb
setb
iret
sbb
pushf
lret
inc
jb
lds
loopne
test
inc
mov
lods
out
push
stos
push
shl
hlt
push
or
fnstenv
xchg
jns
out
mov
push
insl
inc
jae
mov
or
stos
jge
mov
push
lret
stc
inc
popf
and
clc
push
pop
fdivl
arpl
jp
jno
out
pop
cmp
test
sub
cmpsl
push
ljmp
aas
ret
ds
lret
sahf
inc
sub
push
push
push
out
jno
jp
sti
jns
cmp
sub
dec
jb
test
pop
cltd
jne
sarl
lret
adc
add
int
rorl
mov
and
pushl
lock
out
xchg
imul
lods
inc
mov
sub
pop
repnz
dec
dec
dec
les
outsl
xor
push
push
fmull
mov
inc
xchg
xor
push
mov
lret
fstpt
jbe
mov
cld
dec
mov
push
ret
mov
stos
pop
sbb
mov
cmp
or
ficoml
mov
pop
sbb
cmpb
or
or
add
jecxz
or
mov
jmp
lock
pop
xchg
je
jae
daa
stos
or
dec
dec
jmp
call
sbb
push
nop
aas
inc
push
mov
lahf
and
addb
pushf
mov
fidivl
push
out
fcmovb
scas
mov
js
je
jo
sbb
xchg
add
add
cli
aaa
add
lods
lock
das
inc
lahf
movsb
pushf
add
out
ljmp
jp
imul
pop
mov
or
inc
jp
pop
outsb
jno
push
jle
cmp
out
packssdw
leave
dec
sbb
adc
rorb
jle
adc
push
daa
lret
fstps
dec
push
cmpsb
add
lock
arpl
outsb
jno
jge
scas
pop
push
or
add
cli
ret
dec
xchg
ds
stc
cmp
mov
cltd
and
jle
mov
cwtl
scas
push
mov
sub
pop
xchg
sahf
xchg
arpl
cli
mov
xchg
mov
cltd
les
mov
fstp
nop
in
je
loop
mov
inc
loope
xchg
rcll
lret
lea
out
jl
adc
add
sub
and
mov
je
sbb
jb
and
pop
xorb
pop
outsb
mov
cmpsl
push
pop
xor
rolb
push
movsl
popa
fisttpl
les
xor
cmpsl
fcoms
pop
xchg
aas
test
icebp
rcll
andl
dec
decb
pop
pusha
add
mov
xor
jns
fs
mov
test
outsl
inc
push
xor
sbb
inc
cmp
lcall
push
xchg
pusha
repz
sbb
jno
movl
xor
xor
cmp
cltd
add
jae
sbb
imul
add
mov
or
stos
mov
xchg
and
sahf
addb
data16
cmc
lods
sub
in
jmp
pop
or
pop
sub
pushl
jns
dec
cwtl
mov
lahf
gs
pushf
mov
hlt
or
in
lods
lods
mov
jmp
data16
pop
lret
jae
or
xchg
push
dec
xchg
sbb
adc
cmpb
int
insb
imul
rolb
inc
push
cmp
lods
and
movsb
orb
jp
cmp
lahf
pop
push
js
add
mov
xor
xchg
push
iret
jp
hlt
mov
int3
int3
xlat
stos
jge
pop
push
lods
test
imul
mov
cmp
ja
ss
out
jp
popa
lret
mov
mov
xor
stos
outsb
sbb
mov
fcompl
sbb
xor
mov
int
scas
dec
loope
jo
ds
xchg
fiadds
inc
mov
or
lahf
adc
out
sub
xor
cmp
mov
out
arpl
mov
sbb
dec
cmp
lea
push
mov
rcrb
and
mov
xlat
daa
jmp
icebp
mov
aad
mul
outsl
lea
cs
lret
pop
fstpl
lret
sub
mov
lcall
and
test
fbld
sbb
and
fistpll
pop
xor
cs
repz
out
lcall
bound
and
pop
imul
cmc
je
je,pt
ja
call
imul
cmpsb
xchg
jl
adc
jne
inc
movsb
mov
jnp
inc
mov
cld
add
lods
pop
cmp
insb
adc
cmpsl
and
enter
lret
mov
dec
pop
xchg
pop
and
xor
sti
outsb
inc
mov
bound
mov
xchg
push
imul
xor
out
lcall
test
lret
fdivrp
lcall
cmp
jns
mov
sub
pop
sbb
jge
and
decb
sub
data16
or
mov
mov
lcall
add
xchg
xchg
mov
cltd
shl
add
jno
aas
jo
cmp
ret
xor
mov
pop
fildll
inc
icebp
jle
fs
pop
xchg
jbe
xchg
int3
cmp
out
pop
test
pop
in
sub
inc
adc
xchg
xlat
jns
jmp
testb
leave
dec
rcrb
and
icebp
sbbl
cld
mov
fistpl
imul
and
dec
lret
xor
clc
xor
rolb
inc
push
inc
sbb
imul
xchg
scas
xor
jno
inc
sub
shl
jmp
and
adc
xchg
mov
cmp
stos
ljmp
push
movb
inc
push
popa
insb
loopne
insb
fsubr
ss
sub
insl
sub
xchg
xor
xor
dec
push
pop
inc
mov
inc
stos
leave
dec
lret
mov
fdivrs
shl
mov
popa
adc
jbe
cwtl
mov
mov
dec
sub
inc
cmc
and
jg
sub
fisubrl
sbb
jmp
adc
aas
and
popf
cmpsl
dec
lds
lds
push
out
std
imul
adc
add
sarl
rcr
or
shl
add
das
xor
outsb
pop
outsb
nop
adc
mov
pop
adc
add
loope
shll
cmpsl
pop
xchg
jl
jnp
sbb
stc
add
inc
mov
and
push
sub
or
test
clc
loop
adc
push
mov
int3
push
xchg
sbb
pop
arpl
mov
stos
or
pop
inc
cmp
shr
out
sbb
pop
jne
int3
mov
sbb
mov
test
cmp
ja
push
pop
or
callw
fucomi
mov
test
in
mov
scas
or
scas
ljmp
mov
nop
or
cmp
andb
out
jecxz
addb
jbe
icebp
add
pop
dec
test
push
mov
jns
or
dec
pop
inc
push
push
movsb
xchg
push
mov
int
pop
xchg
jb
in
cmp
jnp
loope
mov
pop
orl
pop
sub
stos
in
aam
sub
inc
add
sub
push
xchg
push
jne
dec
sbb
pop
push
add
xchg
pushf
sahf
mov
fwait
cmp
cs
sbb
pop
lea
cmc
jg
rclb
fwait
xchg
scas
mov
xchg
adcb
fcoms
pusha
jnp
stos
pushl
push
int
lods
cmp
add
lods
or
mov
test
xchg
fs
mov
and
mov
pop
inc
fadds
scas
push
and
aad
scas
aas
mov
mov
pop
sbb
lret
mov
cmc
inc
lds
mov
rcrl
mov
adc
in
inc
xchg
jp
mov
loopne
test
bndldx
loopne
xchg
push
cmp
cmp
fs
sbb
sbb
mov
or
mov
stos
nop
jbe
jmp
sbb
jae
jae
pop
mov
fwait
jne
in
call
pop
pop
adc
cmpsl
or
pop
test
test
lods
and
repnz
sub
lahf
test
pushf
sbb
push
pop
mov
adc
shlb
das
and
sbb
enter
lea
mov
xchg
mov
adc
cli
imul
lret
mov
push
mov
and
adc
test
xor
pop
xchg
mov
and
cmp
xor
movsl
rorb
out
mov
sub
push
fcoml
das
xor
decl
jno
cmc
and
sbb
bnd
out
dec
sbb
ljmp
aad
pop
and
imul
sbb
aas
or
enter
xor
cltd
dec
pop
outsl
jmp
sbb
outsl
lea
je
shlb
inc
and
shlb
shl
dec
mov
cltd
xchg
jecxz
sub
idivb
std
push
push
cmpsl
push
mov
loop
push
inc
jne
movsb
call
pop
dec
or
out
xchg
int
jp
push
je
xor
mov
ficomps
imul
dec
add
cmp
rolb
sarb
push
popa
jns
add
xor
fdivrs
out
pop
fwait
sub
std
inc
repz
incl
adc
fildl
pop
stos
mov
mov
mov
shll
xchg
xchg
push
setp
fmull
xchg
pop
mov
int
test
sub
insl
pop
insb
add
outsl
adc
xchg
xor
and
mov
mov
inc
dec
mov
rorl
mov
jecxz
popa
or
int3
mov
movsl
jnp
jae
fwait
repnz
add
roll
sbb
rcl
sti
mov
xchg
push
subl
add
lods
stc
imul
pop
pusha
addl
aaa
adc
fwait
jmp
add
adc
pop
mov
ss
mov
and
imul
aam
dec
xchg
xchg
or
xchg
mov
or
rolb
pop
jl
fs
aaa
cmpsb
call
mov
push
sub
sbb
stos
repnz
and
cmp
cmc
call
inc
xor
jp
popl
xchg
adc
cmp
out
mov
adc
shrb
and
xchg
int
fcompl
jo
mov
lea
outsb
movups
push
jg
jle
fld
popl
insl
lahf
pop
and
mov
inc
in
push
inc
popa
stos
add
xchg
xchg
inc
movsl
xchg
imul
nop
pop
or
mov
or
lock
mov
jno
sub
notl
xchg
repz
inc
sub
pop
mov
outsl
push
fwait
xchg
test
push
inc
mov
daa
shr
test
shrl
lock
sbb
data16
inc
dec
gs
and
lods
rcl
cmp
stos
loopne
xchg
add
daa
xor
imulb
jl
cltd
xchg
negl
jle
push
pushf
mov
inc
and
adc
mov
popf
popa
jl
repz
fsubr
lahf
jo
cltd
push
out
mov
into
inc
in
and
das
shll
stos
xlat
xchg
mov
cmp
es
adc
jne
push
mov
fs
fwait
arpl
inc
push
ds
xor
sub
stos
std
adc
fidivrs
sar
gs
cmc
jmp
and
jmp
enter
dec
decl
in
mov
rcr
stc
arpl
or
jp
arpl
aas
jb,pn
inc
sti
xchg
insb
clc
aam
leave
cld
pushf
dec
inc
mov
dec
cmp
fwait
out
bound
dec
data16
push
clc
cmp
add
add
rclb
iret
cmp
mov
inc
cmpsl
mov
sbb
mov
scas
lods
popf
icebp
outsb
fisttpll
in
sbb
xchg
aas
sbb
lretw
dec
xor
jae
lret
sbb
xorl
into
sub
mov
adc
push
or
lret
jae
mov
aas
dec
fnop
xor
push
pushf
shrb
pop
push
cwtl
lahf
testb
mov
rcrl
pushf
loope
popl
mov
popa
icebp
imul
aas
insb
insl
test
jmp
xchg
mov
cmc
xchg
mov
imul
cmc
or
mov
xor
and
movsb
push
jno
sarl
ss
jb
xchg
mov
loop
rol
push
stos
push
popf
xor
movsb
popl
es
push
jle
std
or
xchg
mov
mov
js
faddl
sub
sbb
adcb
add
push
andl
fidivrs
adc
pop
jl
popa
addr16
jae
mov
out
jle
cmp
adc
xorb
lds
pop
xor
and
sub
movsb
add
jp
idivb
and
push
and
je
repz
push
fsubrl
into
ret
lret
or
mov
shr
repz
bound
mov
jl
popa
hlt
xchg
cmpsl
es
js
aaa
push
adc
scas
out
aad
fnstcw
lods
clc
inc
mov
push
xchg
sbb
xchg
jmp
hlt
jno
add
aam
cmpsb
push
hlt
loop
icebp
shlb
jge
jno
jp
js
add
push
mov
push
sub
std
xorl
mov
add
adc
push
jl
mov
std
push
pushf
mov
ret
mov
cmpsl
jmp
cmc
rcrl
les
jb
pop
fmull
add
ds
dec
dec
mov
sub
mov
inc
pushf
push
int
inc
adc
add
xchg
pop
sbb
jecxz
dec
fwait
rcrl
inc
das
sub
das
ja
les
jl
add
inc
aaa
pop
iret
sti
inc
adc
mov
lods
inc
fwait
insb
mov
push
jns
push
hlt
ja
movsl
sahf
mov
ret
in
clc
and
leave
dec
or
int
adc
pop
and
cmc
inc
movsb
dec
out
jge
lea
jl
sub
out
pop
push
int
ds
fsub
mov
incl
stos
push
loopne
scas
int3
xor
and
js
rorb
into
jmp
sub
jne
jb
pop
mov
and
pusha
cmp
inc
add
or
jae
dec
pop
sbb
cmp
fdivl
icebp
push
test
mov
mov
or
lcall
cwtl
and
pop
xlat
jmp
out
lock
push
mov
pop
lea
cmpsl
inc
push
nop
mov
dec
mov
mov
addb
lock
mov
jb
push
mov
xor
jnp
andl
cmpsl
cmp
lret
inc
fildll
dec
sub
dec
neg
aaa
jg
subb
add
push
push
inc
add
xor
sub
mov
stos
or
insb
data16
push
ret
jno
mov
push
shll
outsb
inc
cld
add
pop
idivb
adc
inc
es
jle
into
mov
cmp
out
jl
inc
hlt
pop
rcrl
fiadds
mov
xchg
dec
push
mov
lods
rclb
scas
push
dec
mov
jne
sub
icebp
jp
ds
out
pusha
int3
popa
loop
push
adc
loope
jle
push
fstp
je
cli
xor
adc
sub
push
cli
push
mov
jmp
cmp
pop
push
mov
subb
fnstsw
movsb
sub
add
jg
pop
xor
leave
mov
pushw
sub
scas
test
incl
jae
cmp
mov
mov
das
popf
mov
das
sub
inc
add
clc
sti
test
scas
cli
adc
inc
jae
inc
jp
ljmp
dec
and
out
andb
ljmp
loopne
ds
int3
push
std
int
aam
ret
stos
dec
jg
add
mov
scas
and
jne
adc
fimuls
pop
inc
loope
stos
jns
pop
ret
sbb
mov
mov
and
sub
ljmp
mov
inc
dec
das
adc
sbb
mov
test
or
mov
addl
insl
mov
inc
call
xchg
push
push
cltd
je
in
lods
loop
into
ror
push
sahf
pop
out
xchg
cmc
rolb
dec
andb
cmpsl
popf
shrl
js
and
mov
mov
pop
jns
mov
add
in
add
je
cmpsl
add
ljmp
jp
std
inc
jmp
dec
insb
fistpl
outsb
ftst
addb
xchg
xchg
lods
addr16
cmp
add
addr16
mov
mov
cwtl
mov
mov
fnstcw
outsb
xchg
scas
daa
sub
mov
pop
fmull
mov
stos
sub
out
shrl
loopne
or
gs
sub
movsb
push
jg
pop
mov
ja
ljmp
mov
in
lahf
in
cli
and
cmpsb
ficompl
mov
shlb
jbe
jp
loope
inc
sub
jg
insb
dec
enter
mov
and
mov
xor
inc
dec
xchg
stos
lods
jge
xor
mov
pushl
cwtl
ja
call
push
lock
lret
push
add
pop
add
leave
lds
and
rcr
mov
aam
adc
std
sbb
in
outsl
sti
cmp
loop
push
pusha
mov
sbb
jl
and
frstor
mov
test
cmp
les
lahf
mov
pop
pop
cmpl
adc
xor
pop
call
xor
or
jns
jg
dec
insb
mov
cli
add
arpl
push
adc
cmp
adc
fstl
cmpsl
cs
pushf
int
outsl
in
gs
mov
or
ss
fisttpl
cmp
test
out
push
mov
out
popa
hlt
cld
jae
inc
xchg
test
cwtl
jl
add
mov
xchg
mov
xlat
pop
and
rolb
mov
int
fwait
jle
int3
push
inc
lods
jg
cmpsb
rcrb
call
mov
sub
mov
cmp
lock
call
or
xchg
pop
mov
sub
cltd
mov
adc
mov
mov
gs
cmpsb
bound
test
arpl
sbb
shl
jns
hlt
jge
jbe
pop
scas
cmp
add
mov
dec
ret
aam
out
jl
xor
shll
cmp
mov
loopne
lahf
and
add
adcl
mov
or
data16
repnz
push
pop
sub
mov
adc
fwait
in
mov
add
inc
dec
inc
inc
sbb
sti
mov
inc
xchg
push
mov
int3
push
lods
push
stos
cmpsb
mov
or
ficompl
inc
inc
inc
mov
inc
pop
ret
test
and
or
enter
or
adc
mov
push
hlt
aaa
in
xchg
fs
lds
gs
imul
aas
pop
loop
mov
xchg
sbb
sti
ja
dec
dec
sti
and
inc
repnz
pop
mov
lea
jnp
and
lock
ret
jp
push
loope
shll
in
push
or
call
jbe
sub
xor
mov
cmp
iret
hlt
out
inc
push
mov
push
mov
testl
mov
mov
adc
dec
dec
lret
rclb
xor
mov
imul
lret
jg
lret
or
sub
popa
jnp
push
mov
xchg
sti
pop
pop
mov
inc
pop
cmp
sub
aas
sbb
loopne
shrb
sti
mov
es
mov
inc
data16
sub
out
shrb
jmp
stos
mov
jle
xor
hlt
nop
es
and
xchg
cmp
mov
xchg
and
loopne
push
jnp
xor
aaa
stos
push
adc
pop
arpl
cmp
dec
test
cli
xchg
mov
fwait
or
data16
push
mulps
aad
jno
iret
movsl
out
sbb
mov
sub
loop
jecxz
cmp
aam
lds
out
repz
adc
add
cmc
leave
ret
ljmp
xor
pop
jbe
repz
cmp
cmp
jmp
icebp
adc
push
or
insl
or
das
cmp
out
jge
jge
insl
jle
push
outsl
inc
dec
push
cmp
push
adc
push
insl
ljmp
aaa
pop
icebp
lahf
inc
cs
popf
xor
cli
mov
adcb
mov
fildll
out
rolb
dec
jmp
push
jbe
mov
pop
jle
mov
out
rcr
xor
jmp
lock
add
adc
stos
sub
js
shlb
jbe
inc
adc
test
sub
fldenv
fcoms
sarb
test
jne
jae
pusha
ret
mov
cmpsl
lds
and
xlat
xlat
fucomip
pop
iret
gs
and
out
shr
pop
jae
out
cmc
cli
cltd
enter
xchg
xchg
and
fsub
lock
lahf
sbb
mov
inc
ljmp
clc
mov
fists
ja
aas
cmp
jne
dec
jns
negl
inc
push
shll
mov
cwtl
and
insb
jnp
out
jne
push
inc
cmp
rcrl
dec
xor
push
adcl
add
aad
dec
arpl
into
xchg
mov
jl
sbb
jl
cmp
push
mov
loop
mov
sub
hlt
mov
lods
sbb
jno
out
cltd
outsl
mov
add
iret
jbe
cmpsl
mov
push
lds
pop
mov
outsb
loop
sbb
aad
bound
inc
xchg
cli
mov
adc
dec
lret
mov
out
jg
xchg
shrb
mov
filds
iret
xchg
pop
test
dec
mov
or
js
loope
pop
xchg
cld
mov
xor
movsb
out
mov
das
sbb
jno
cmp
dec
push
roll
jge
pop
cmpsb
lcall
out
int
jl
test
sahf
ja
inc
pop
jp
push
cmp
mov
andl
icebp
xor
lret
dec
and
mov
jns
add
or
pop
outsl
or
sti
adc
iret
jbe
add
pop
mov
jno
and
pop
xlat
xor
jns
mov
mov
stos
adc
mov
pop
xchg
das
adc
push
nop
mov
ficoms
mov
lahf
or
std
mov
inc
sbb
push
mov
inc
arpl
scas
xor
sbb
xchg
jo
push
mov
lret
jge
pop
fistpl
or
daa
rcr
push
test
cltd
out
lock
cmc
xchg
push
lea
insb
pop
aas
xchg
mov
jnp
aas
cmpsl
cmp
out
pop
xchg
jl
int3
inc
cmp
insb
lock
sub
imul
daa
mov
repz
sar
add
xor
jp
jg
and
fldt
shr
sbb
sbb
aad
inc
mov
imull
adcl
add
dec
inc
jecxz
fildll
sub
notb
cmp
and
addb
xor
adc
js
bound
arpl
aas
gs
test
pop
xchg
push
in
mov
imul
mov
mov
mov
call
xor
add
xchg
test
and
fnstenv
xor
xchg
pushf
push
into
notl
sub
shll
or
loopne
popa
fists
mov
call
xchg
xor
add
ds
cmp
loopne
cwtl
push
inc
jecxz
sbb
xor
and
sub
into
jb
arpl
sub
out
cli
fdivl
sbbb
int3
and
jb
arpl
ss
les
lods
sub
or
mov
sbb
mov
scas
cli
pop
insl
je
out
lods
into
ret
cmp
stos
add
loope
stos
lcall
jmp
mov
ljmp
loop
and
adc
pop
loope
inc
sub
fs
dec
or
mov
mov
jns
std
cmp
sbb
jb
stos
scas
cmp
ss
movsb
cmp
sti
popa
cmp
pop
xor
sar
ficomps
adc
imul
lahf
aaa
jnp
inc
lahf
test
enter
imul
push
and
adcl
fldcw
out
ds
dec
or
dec
jb
mov
xchg
cmp
outsb
lcall
mov
mov
sub
lret
pop
std
mov
push
in
mov
adc
push
inc
sbb
ljmp
mov
and
lcall
je
mov
add
ret
sub
je
in
lock
pop
stos
rorl
aas
shrl
mov
call
sbb
inc
lret
adc
cmpsb
mov
ret
int3
fnstcw
adc
dec
mov
ss
or
sbb
dec
sbb
bound
lcall
data16
jle
fbstp
fsubrp
insl
loopne
loop
push
rcl
push
in
fadd
xchg
cmp
sbb
dec
fs
in
mov
pusha
dec
repnz
jl
icebp
aas
jp
les
jae
or
push
inc
loopne
std
stc
pop
xchg
adc
jle
movsb
mov
and
mov
leave
xor
lret
mov
or
xor
mov
loopne
movsb
dec
pop
lret
push
mov
popa
shlb
fwait
dec
cmp
jle
int
xor
mov
mov
sbb
mov
das
fwait
outsl
fsubl
fdivrl
add
pop
iret
jns
pop
push
lock
or
inc
dec
xchg
ret
xor
cmp
repnz
idivl
sub
idivl
packuswb
ret
pop
mov
aam
ljmp
sbb
mov
hlt
or
iret
inc
cmp
ljmp
add
subl
mov
mov
push
dec
out
push
popa
xor
sbb
cltd
aam
pop
xchg
scas
xchg
in
sub
sti
lret
mov
iret
ljmp
mov
enter
loope
aaa
dec
sbb
nop/reserved
jbe
idiv
inc
dec
stos
sti
pop
dec
mov
in
or
int3
sub
push
xchg
lret
mov
jecxz
leave
xchg
rcrl
stc
xchg
gs
orb
mov
lock
outsb
insb
fiadds
mov
loop
pushf
mov
cmp
je
flds
push
or
sbb
or
jnp
das
xchg
mov
test
andl
mov
ljmp
fcom
fisubl
push
cltd
add
cmpsl
dec
ja
xchg
dec
mulb
add
jecxz
xchg
ljmp
add
or
jle
mov
push
add
mov
stos
pop
int
in
cltd
lret
sub
dec
leave
xor
and
fcmovb
inc
bound
bswap
jne
xor
aam
pop
div
into
andb
push
mov
jns
outsb
or
js
jge
push
mov
inc
jnp
scas
es
mov
sub
push
clc
mov
mov
jecxz
aad
iret
stos
mov
xchg
arpl
sar
mov
sub
xchg
push
mov
fbstp
sahf
sbb
cltd
add
mov
jb
inc
into
jl
jb
xor
adcl
fst
popa
scas
jnp
xchg
and
in
push
shlb
jns
inc
add
seta
adc
pop
jmp
int
jecxz
mov
xchg
add
into
fcomps
inc
push
in
in
rolb
lahf
sbb
dec
inc
cmp
push
iret
clc
mov
add
mov
dec
pushf
mov
adc
cmp
cs
pop
xchg
loopne
cmp
sub
push
inc
add
lea
mov
cld
sub
ret
adc
cmp
dec
xchg
mov
fwait
orb
xchg
lock
cmp
enter
lods
shrb
arpl
dec
cld
mov
paddusb
pop
push
aaa
inc
mov
add
dec
adc
shl
mov
jge
in
xchg
dec
and
mov
xor
insb
fidivl
dec
xchg
mov
mov
push
jle
push
leave
loope
add
or
pop
sub
mov
or
ret
push
inc
and
in
cmpsb
rorl
popf
dec
scas
jns
lcall
and
in
cmpl
rol
ror
inc
and
notb
sub
xchg
cmpsb
inc
mov
sub
movsl
adc
jno
dec
sub
cmpsb
andl
jmp
jb
sub
dec
je
mov
into
movsl
fnstcw
les
jmp
sbb
les
or
push
jle
fwait
jmp
xor
js
mov
out
js
pop
mov
ret
jne
xorl
add
lcall
xchg
cmp
insb
ret
cli
mov
mov
lds
jo
add
push
sub
aad
sbb
mov
sbb
loopne
int
jl
adc
push
ficoml
out
adc
sahf
mov
test
jne
cmpl
lret
inc
inc
adc
add
xor
hlt
cmc
ret
cmpsl
pop
arpl
lock
mov
sahf
dec
cld
pop
ss
adc
sti
popa
insl
sbb
ret
dec
jl
dec
iret
inc
mov
mov
lea
les
lahf
aaa
iret
push
or
push
stos
adcb
sub
in
jo
pop
xchg
das
adc
cmp
jg
xor
nop
xchg
xor
aaa
jb
pop
mov
or
cwtl
fisubrs
mov
xor
insb
pusha
pop
aas
cwtl
sbb
enter
and
adc
lods
push
insb
ljmp
adc
ja
xchg
push
sbb
lret
aam
cs
mov
adc
add
cltd
cmp
xchg
xor
jbe
adc
mov
scas
aas
or
lods
inc
add
add
mov
imul
mov
pop
stc
data16
mov
xchg
ror
mov
rorb
inc
mov
pop
jmp
cld
add
adc
nop
lds
test
sahf
rcll
jne
mov
pushf
aad
in
pop
add
inc
data16
mov
jle
mov
leave
cltd
mov
mov
lahf
and
cs
dec
ret
pop
cmp
in
mov
mov
dec
dec
mov
cwtl
cltd
out
jl
mov
out
add
je
inc
inc
flds
jecxz
fs
popa
adc
dec
gs
jmp
clc
dec
lret
push
cmp
or
dec
cmp
add
push
ljmp
sarb
sub
rcrl
pop
lods
aad
pop
pop
pop
cltd
lock
jp
lock
add
popf
mov
cmpsl
je
push
sbb
jle
rcrb
mov
dec
sahf
adc
cltd
mov
repnz
add
inc
cmpb
pop
les
test
cwtl
add
js
insl
push
mov
ss
cltd
add
outsl
test
cltd
ljmp
sbb
in
jmp
sub
xchg
clc
iret
jns
pop
dec
cld
dec
mov
mov
xchg
lods
decb
push
fldcw
jle
pop
out
cs
shr
movb
aad
std
pop
cmp
jne
int
stc
in
cmp
lods
add
shrb
adc
sub
les
rcrl
fisubs
or
push
xchg
jnp
lea
loop
sub
sub
loope
cmp
fistl
inc
test
scas
int3
xchg
loopne
sbb
push
outsb
add
jp
pop
or
jle
sbb
adc
stc
mov
adc
xchg
je
loope
fs
sbb
xlat
xlat
sub
cmpsl
test
fldenv
push
arpl
icebp
or
les
data16
addb
xor
mov
inc
dec
jp
cmp
mov
icebp
jne
inc
lcall
xchg
xchg
jecxz
xor
adc
dec
rcl
cmp
jb
scas
mov
test
pop
gs
loope
gs
push
idivb
xor
imul
push
adc
mov
cltd
push
sbb
jp
jp
xchg
adc
jle
push
dec
into
mov
push
sub
sub
pop
mov
jl
bound
cmc
pop
xchg
and
mov
mov
inc
mov
ljmp
mov
test
push
adc
push
ret
lahf
les
ja
sbb
sub
push
ss
adc
jne
decb
jp
fisubs
add
out
and
pop
aad
mov
je
in
xor
dec
test
stc
fistps
cmp
mov
ljmp
imul
cmp
sub
daa
or
bound
fbld
fdivr
sti
int
lcall
scas
dec
push
test
clc
jg
fcomps
xor
lret
jns
cmp
add
dec
ds
adc
add
inc
je
cwtl
push
loop
ud1
add
les
sbb
cld
js
pusha
dec
pop
into
pop
xchg
cmp
push
lret
mov
cltd
add
or
aaa
xchg
lret
inc
scas
push
jnp
push
jmp
and
stos
mov
pop
inc
shlb
sbb
or
xchg
fidivrl
insb
fcom
xchg
xor
in
adc
pop
xor
std
mov
adc
std
jmp
sub
loope
inc
mov
cmpsb
pop
out
loop
test
fbld
pushf
lods
icebp
ljmp
or
arpl
jne
xor
xchg
sar
pop
cmc
test
adc
leave
mov
enter
psubsb
push
pop
repnz
imul
sbb
dec
dec
into
lret
xchg
out
push
repnz
cmc
iret
xchg
std
add
cmpsb
shrl
icebp
pop
push
fildll
sbb
and
jecxz
cmp
dec
xchg
pop
aam
out
jmp
call
fdivl
adc
xchg
jnp
mov
jbe
inc
xlat
fdivrs
in
cmp
fistpl
mov
popf
mov
movsl
xor
push
pop
cmp
clc
inc
mov
mov
push
push
leave
loopne
adc
call
mov
fidivl
or
lret
rcrl
xchg
dec
lea
push
add
cli
incb
xchg
cmp
xchg
pushl
call
das
cmp
cmpsb
mov
sahf
dec
jl
dec
sub
test
sbb
out
adc
xchg
dec
xor
je
pusha
jecxz
jle
cmp
push
xchg
xlat
add
out
xor
ret
into
and
imul
out
test
xchg
dec
mov
sti
outsb
dec
jl
mov
out
mov
and
adc
test
xor
pop
cwtl
out
adc
iret
or
xacquire
jae
push
dec
sub
xor
dec
jg
loopne
fs
push
jp
popa
in
dec
xor
push
mov
jp
int3
popa
mov
stos
push
jg
in
jo
xchg
and
sbb
fwait
sub
in
dec
jle
mov
rorb
fwait
lods
or
gs
cli
pop
push
pop
sub
je
les
ds
mov
and
push
xchg
or
sbb
cmp
sub
xchg
mov
push
dec
ljmp
movsl
xor
data16
cmp
adc
fmull
pushf
hlt
mov
dec
adc
jp
mov
lods
xorb
scas
pop
ret
jle
loopne
cmp
jo
out
mov
idivl
mov
adc
sahf
loope
adc
cmp
test
or
lahf
iret
push
leave
enter
aam
stos
insl
and
iret
enter
out
xchg
sub
dec
adc
pop
es
xor
mov
ret
mov
in
push
inc
adc
addr16
sub
int3
repz
pop
mov
cs
cmc
lods
mov
lods
loopne
nop
icebp
in
mov
push
or
add
jmp
mov
jmp
cmp
pop
or
xlat
std
ret
pop
mov
out
test
repnz
fstpl
push
addr16
push
mov
outsl
ret
sub
lds
lahf
es
push
pop
incb
sbb
fsubl
stos
rorl
les
in
push
or
cmp
arpl
pop
test
xchg
testl
cmp
cld
adc
dec
cmpsb
jnp
lcall
sub
outsb
pusha
popf
ljmp
mov
rclb
xor
mov
pop
lods
roll
ret
adc
fsubl
lea
or
xor
adc
cmpsl
les
push
repz
aaa
sahf
ret
aas
xchg
mov
arpl
add
adcl
movsl
dec
ret
repnz
adc
xchg
outsb
adc
push
xor
pop
xchg
push
pop
jb
das
inc
jns
xor
add
jle
inc
lea
call
mov
mov
cld
fs
js
aad
jb
inc
or
mov
insb
roll
xor
xchg
pushf
pop
stc
popf
xor
lock
pushf
inc
sbb
insb
or
dec
lock
push
adc
insl
sbb
int3
call
mov
popf
pop
stos
and
xchg
cmp
sbb
cmpsl
int3
lds
int
mov
mov
repnz
pop
push
sub
cltd
test
das
sub
adc
xchg
push
loop
cmp
sub
sub
nop
inc
stos
mov
sub
in
scas
outsb
jl
mov
scas
fs
lahf
dec
add
or
roll
inc
lea
xor
xor
and
rcrb
subb
jnp
daa
hlt
dec
dec
sub
pop
or
hlt
cmp
xchg
mov
push
xchg
sub
add
add
sbb
aad
xor
xor
enter
pop
loope
and
xchg
enterw
mov
lods
jbe
dec
fnstenv
addb
cmpsb
das
sahf
bnd
jo
int
cltd
push
movsl
mov
mov
cmp
es
outsb
cmp
imul
cmp
scas
repnz
imul
xchg
push
jl
outsl
inc
fdivl
shl
mov
adc
frstor
stos
sbb
xchg
imul
insb
out
or
xor
rcrl
fcomi
lods
sub
gs
jmp
or
fcmovbe
movsb
lods
cltd
out
xchg
std
mov
ss
cmpl
pop
sbb
repz
out
or
mov
movb
xor
push
mov
lock
and
clc
clc
and
push
aaa
lea
roll
leave
rcl
aaa
imul
inc
xorl
xchg
addr16
pop
dec
mov
clc
dec
push
mov
mov
repnz
inc
je
mov
pop
jbe
mov
jle
iret
iret
mov
mov
sub
xchg
and
push
sbbb
aaa
test
sbbl
sub
xchg
imulb
and
jp
push
add
fdivp
push
add
jle
xchg
pop
lahf
mov
cli
xchg
gs
mov
add
xor
je
movsb
xchg
sub
push
pop
adc
add
xor
nop
mov
jb
shrb
daa
sub
sub
fdiv
sbb
xor
xchg
rcr
repnz
sbb
inc
in
or
xchg
inc
jmp
mov
stc
xchg
data16
enter
gs
xor
or
push
inc
sbb
and
dec
test
das
lret
push
sub
shrd
loopne
add
enter
outsb
repnz
push
jns
nop
les
add
dec
insl
stc
inc
mov
loope
aam
xchg
and
outsb
mov
mov
adc
sbb
fistpl
ljmp
inc
cmp
rcrl
sbb
xchg
notb
test
jecxz
and
add
sub
ds
mov
xchg
and
cmp
pop
cld
mov
jle
mov
cmp
outsb
add
popf
pop
cmpsb
adc
add
daa
push
xchg
adc
inc
pusha
xor
xchg
mov
scas
hlt
cli
xchg
xor
enter
cmc
popf
je
loop
add
sbb
sbb
pop
add
lods
mov
scas
and
mov
dec
push
jnp
scas
adc
adc
and
bound
sub
add
shlb
in
inc
jo
or
cld
xchg
aad
ljmp
dec
add
fsubl
imul
cmp
lods
and
gs
popa
xor
and
test
cld
lahf
xor
jp
movsb
repnz
inc
xlat
mov
aad
adc
dec
es
scas
hlt
shll
lcall
aad
sub
jp
jns
rorb
scas
mov
jns
mov
fdivs
cmp
fnstcw
lret
inc
mov
rorl
es
or
add
push
lock
xor
pop
pop
xor
insb
push
push
dec
jp
or
push
push
ja
ja
mov
outsb
mov
pushf
sbb
leave
aaa
hlt
js
cwtl
nop
ss
in
push
leave
nop
roll
sub
lods
inc
cwtl
cmp
add
ret
pop
dec
out
int3
mov
mov
inc
ljmp
jbe
orl
lds
out
adc
sub
subb
mov
mov
jmp
lcall
fisttpll
cwtl
int
lea
in
add
pop
lcall
cmpsb
test
aam
test
xchg
mov
sub
dec
lahf
dec
sahf
xchg
cmp
xchg
sub
fisttpll
xchg
sarl
pop
pop
psubw
fs
inc
fs
jmp
sbb
cld
outsl
dec
orb
ja
push
mov
roll
push
lds
jmp
jo
push
xchg
loop
incl
pop
lds
dec
imul
movsb
lret
add
and
push
repnz
and
mov
cmpsl
xor
push
bound
andl
pop
test
inc
push
sbb
shll
pop
and
pop
shll
jbe
adc
cmp
dec
data16
andb
adc
fsub
mov
testl
cld
in
pop
loop
aam
jl
or
cmp
pop
stos
cmp
icebp
mov
pop
or
stos
int3
pop
lret
fcoml
mov
loope
or
sbb
xchg
test
pop
jge
insl
aad
mov
es
rolb
mov
aad
in
fwait
push
ljmp
in
lcall
in
adc
cwtl
cmp
aad
rol
xchg
and
cmp
fidivl
pop
mov
aad
cs
pop
cmp
out
inc
rorb
xchg
test
push
jo
mov
mov
mov
cmc
scas
push
ljmp
inc
sbb
xchg
ds
xor
xchg
sbb
jl
inc
iret
or
or
rorl
testb
es
push
mov
or
stos
sbb
mov
fcmovb
mov
icebp
test
mov
bound
push
and
and
not
pop
or
xchg
push
dec
popf
jo
pop
stc
xor
pop
sub
mov
jbe
jecxz
lret
fcompl
pushf
mov
aad
jno
sbb
inc
sbb
push
or
xchg
outsl
pop
push
sub
punpckhdq
lods
fldenv
fdivs
pop
pushf
mov
data16
push
pushf
sub
adc
and
xchg
mov
inc
push
mov
jbe
insl
aad
insb
popf
lea
fimull
sahf
cli
dec
shlb
mov
mov
inc
mov
push
movsb
andb
add
mov
xchg
or
jge
sti
xor
add
movsl
repnz
pop
decb
sahf
mov
ds
or
std
in
stos
std
test
pop
les
or
add
mov
fs
dec
mov
lods
jne
popf
std
fldenv
mov
pop
shr
popa
jns
loop
jb
jge
jns
mov
in
jb
mov
sub
and
and
jecxz
ss
aaa
stos
cmp
cltd
push
negl
xchg
push
rorl
cli
jge
stc
jno
dec
and
test
roll
xchg
adc
cli
jmp
cld
lcall
aam
mov
sbb
pop
addr16
inc
push
and
ja
aam
lcall
lods
sub
outsl
cmp
add
mov
sbb
cmp
rorl
sbbl
test
adc
pop
or
in
into
fld
sub
push
sbb
sahf
xorb
ds
xchg
das
sub
popa
dec
je
das
push
jb
jg
movsl
inc
repz
mov
sbb
addr16
mov
stc
dec
loopne
jo
mov
mov
lahf
or
leave
nop
inc
imul
nop
adc
cli
aam
push
fs
aad
or
loop
push
pop
and
mov
adc
mov
inc
pushf
xor
icebp
sub
aad
add
loope
mov
and
xchg
sbb
aam
fs
xchg
out
jb
cmpl
jae
dec
sub
jo
cli
mov
dec
roll
call
inc
es
hlt
xor
fistl
jns
mov
imulb
mov
repnz
sub
hlt
mov
scas
sub
shlw
stos
popf
inc
test
cmp
repz
jno
or
inc
daa
rorb
rol
loopne
jno
inc
add
aad
xchg
add
xchg
sub
pop
dec
add
xchg
push
loopne
fcoms
mov
mov
shll
push
aaa
mov
jg
jmp
mov
pavgw
das
mov
jl
jnp
je
into
sbb
ss
dec
sub
pop
mov
xchg
push
mov
fwait
cwtl
dec
mov
mov
mov
xchg
push
mov
ret
mov
rolb
mov
es
popa
test
std
cmp
inc
ja
pushf
decl
imul
inc
jg
in
xor
sub
aaa
push
aad
add
cmp
int
fisttps
loopnew
adcl
ds
in
loop
xchg
push
lods
pop
sub
sub
xor
mov
push
push
add
std
inc
inc
mov
or
dec
aad
rcrb
fdivl
out
out
out
pop
xor
mov
in
lret
aam
lock
sbb
jno
inc
or
mov
pop
cmp
popf
xchg
mov
push
in
pop
jb
mov
mov
sbb
pop
aas
lock
enter
jb
pop
lea
mov
pop
testb
stos
sbbl
ffree
in
mov
in
ret
jnp
subl
xchg
sub
push
inc
cmp
lret
adc
or
imul
sbb
add
xchg
jecxz
dec
leave
pop
cmp
enter
and
push
cmpl
cltd
daa
dec
mov
shlb
out
jae
push
ja
push
jbe
pop
lock
fst
push
out
adc
mov
add
sbb
shrl
dec
jmp
mov
mov
mov
fcoml
in
call
push
adc
xchg
shl
fistpll
push
insl
fidivrs
xchg
or
ret
inc
imul
shr
adc
out
and
xor
xchg
es
adcb
mov
sub
jge
clc
ja
mov
xor
pushf
adc
loopne
xchg
push
xchg
and
push
mov
popa
loop
shl
jno
push
inc
ret
sarb
add
sub
imul
cltd
mov
jg
sbbb
cmp
rcl
push
xchg
mov
mov
pusha
rcrb
push
xchg
sbb
shll
jecxz
xor
in
and
jle
lcall
aad
sub
push
mov
add
push
es
pop
incb
xchg
jae
cltd
push
daa
and
icebp
sub
fsub
gs
push
ficoml
clc
cmp
mov
je
jp
mov
push
mov
dec
xor
cmc
jecxz
push
xor
sahf
sti
insl
mov
pop
or
xchg
mov
leave
outsb
loopne
mov
xchg
inc
das
movsb
stos
mov
lods
dec
cs
sti
loopne
aam
ficompl
cmp
mov
js
sub
mov
inc
push
inc
cmp
inc
pop
test
add
mov
imul
mov
aam
shlb
loope
int3
inc
repnz
test
movsl
movsb
sub
dec
mov
mov
ja
pushf
and
xchg
lret
xchg
loopne
add
insb
daa
sarl
add
cmc
dec
mov
cmp
inc
xor
add
mov
mov
out
mov
sbb
in
mov
outsb
dec
fucomip
sub
add
mov
cld
mov
mov
xchg
loope
movsl
and
xor
mov
iret
in
dec
mov
pop
adc
testb
ds
xor
mov
pop
adc
mov
push
sub
or
ljmp
mov
out
rcrl
xchg
ja
and
mov
ret
sar
clc
cmp
sbb
or
lds
pop
sub
cld
fldcw
and
and
das
das
inc
xor
cmp
sarl
iret
iret
decb
cltd
adc
pushf
ja
or
hlt
cmp
add
lahf
daa
ret
cli
cltd
jb
push
jb
insl
das
sub
negl
xor
daa
ja
mov
sbb
sbb
push
icebp
fscale
mov
jmp
pop
bound
outsb
mov
std
into
dec
cmp
icebp
mov
or
repz
call
into
ja
pop
add
pop
xchg
or
rcrl
in
sahf
mov
mov
pop
mov
dec
shr
insl
sub
pop
mov
jl
add
cmp
sub
loop
in
mov
jl
add
lahf
mov
push
sub
sub
outsb
lods
std
lds
cwtl
in
mov
in
inc
rcrl
push
pop
mov
cld
test
xchg
mov
ror
sub
lahf
shrb
inc
cmp
pop
test
dec
ret
and
mov
pop
jne
jecxz
int
mov
jne
xor
push
jmp
cmpsb
mov
mov
frstor
jo
jbe
or
out
mov
frstor
bound
shl
in
pop
inc
lcall
and
push
insl
cmp
and
cmp
inc
daa
rorl
xchg
loopne
je
cld
or
pop
fistl
in
cld
jecxz
hlt
fsubrp
test
sub
bound
mov
xor
inc
or
or
daa
and
hlt
or
fdivrs
sti
adc
mov
dec
jno
inc
mov
icebp
ss
std
fs
or
enter
aam
sahf
pop
divl
movsb
sub
pushf
sub
pop
pop
das
push
fisubs
pop
testl
inc
addr16
or
mov
sub
xchg
sub
cs
ljmp
sbb
cli
jge
and
mov
adc
stos
cmp
push
scas
adc
mov
adc
mov
xchg
adc
mov
push
test
add
mov
decl
loope
popa
mov
lcall
jo
daa
loope
lret
lods
adc
sub
insl
ljmp
mov
lods
in
mov
fmuls
inc
mov
in
jnp
pop
dec
jmp
aam
mov
or
push
sbb
cs
dec
jb
stos
dec
ja
lock
aas
adc
test
cmc
pop
xor
loope
jp
mov
fsubrs
pusha
pop
jge
xchg
xchg
das
lock
and
pop
faddl
es
mov
cltd
addb
push
xorl
aas
rolb
rcll
jmp
xchg
inc
cmp
into
out
xor
and
lcall
inc
mov
int3
push
test
lret
cwtl
and
aam
sub
add
inc
int3
cmp
mov
ja
lods
and
pop
cmpsl
int3
shrb
and
stc
shlb
es
mov
xchg
adc
lods
ret
arpl
int
jo
rcll
xor
xchg
xchg
dec
repz
pop
adc
mov
loope
pop
add
mov
addr16
xchg
jecxz
imulb
test
pushf
mov
xor
xchg
sbb
out
adc
sbb
adc
out
dec
cmc
dec
pop
clc
and
pop
lahf
in
mov
mov
sbb
out
xor
cmp
cmp
and
push
mov
enter
push
scas
fldt
subps
cmpsl
or
into
mov
or
xor
fsubp
push
or
repnz
add
mov
inc
add
adc
test
test
xchg
jl
jecxz
cwtl
cmp
enter
mov
mov
stos
jecxz
push
mov
aad
mov
sbb
pop
mov
push
and
sub
call
nop
jne
xor
push
sbb
fdivrl
js
inc
jecxz
test
leave
jo
push
cmp
sbb
sub
loope
cld
fdivrs
scas
xorl
and
pushf
push
ja
shrb
repz
mov
pusha
mov
jp
inc
pop
mov
pop
pop
and
inc
or
repnz
inc
jb
adc
loop
mov
jge
imull
jle
pop
xor
xchg
inc
insb
je
jno
outsb
popa
fwait
mov
movsb
xchg
std
xor
fnstsw
inc
pop
stc
int
mov
mov
lahf
dec
insb
hlt
inc
ret
adc
hlt
mov
cli
mov
je
repz
sub
cwtl
or
mov
popa
sbb
rclb
adc
cmp
sub
enter
ja
out
scas
jp
pop
frstor
shrb
xchg
pop
xchg
add
sbb
push
cwtl
or
sti
jge
and
xor
shlb
cli
call
pop
pop
mov
jne
push
pop
mov
pxor
jo
hlt
sbb
dec
dec
shr
not
dec
mov
mov
or
add
push
fs
pop
fistpll
xchg
cmp
arpl
adc
aas
sub
icebp
les
lahf
scas
fucomip
mov
or
gs
cmp
xchg
xchg
push
and
rclb
xor
insl
jno
push
mov
in
jae
xchg
jg
ss
mov
xchg
pop
push
fstpl
std
movsl
xor
mov
dec
sahf
std
jl
clc
mov
dec
enter
int3
cmpl
aaa
ret
in
xchg
cmp
daa
dec
movsb
xchg
repnz
shll
popa
add
and
jg
pop
and
dec
idivl
movsl
adc
pushf
imul
hlt
xchg
stos
xchg
mov
outsb
sarb
imul
xchg
scas
jnp
jnp
dec
mov
mov
xor
enterw
push
mov
push
dec
xor
incb
pop
inc
adc
orb
xor
jnp
mov
in
cli
jl
pop
lock
cmpsb
movsl
cltd
adc
mov
in
cmpsb
cmpsb
flds
sbb
cmp
sub
add
aad
std
sub
jno
je
mov
mov
mov
cmp
test
or
dec
add
push
push
out
xor
lret
jb
add
cmp
mov
test
pop
jne
xchg
bnd
stc
cli
sahf
addl
inc
bnd
xor
inc
push
mov
or
int
cmp
pop
fsubl
outsb
dec
lcall
je
add
shlb
xlat
rol
mov
and
fucomp
mov
push
je
sub
cmpsb
sub
sub
scas
or
pop
add
fdivs
ss
mov
rorb
xor
fidivl
jne
lods
rcll
test
jp
rcr
dec
lret
testb
popf
js
lods
stc
xor
or
sti
fidivl
adc
cmp
pop
mov
leave
or
push
mov
and
mov
mov
mov
sbb
popf
lods
and
mov
fidivrs
popf
in
ss
fildl
sbb
mov
loope
adc
xchg
int
into
xor
mov
cmp
bnd
or
adc
pop
add
mov
pop
popa
and
idivb
iret
rcrb
imul
movsl
or
lcall
lahf
adc
daa
add
push
mov
xor
nop
sahf
and
shrl
popf
inc
xchg
sahf
adc
jbe
mov
ret
adc
insb
xor
mov
ret
xchg
sub
jecxz
jle
and
dec
dec
cmpsb
dec
push
cld
dec
pop
mov
mov
push
stos
cmp
mov
es
pop
cmp
sahf
add
shr
out
pop
cmpsl
les
inc
mov
mov
js
aas
pop
push
shl
push
sub
call
mov
push
fimuls
test
sbb
ffreep
inc
cmp
orb
stc
add
push
int3
stc
sub
andl
mov
xor
adc
pop
cli
and
sub
push
mov
mov
mov
pusha
push
loopne
cwtl
mov
repz
push
lret
insb
stos
push
cmp
nop
jnp
xor
iret
push
test
out
xchg
cmp
call
inc
xchg
rorb
js
mov
jbe
sbb
mov
mov
mov
or
loop
mov
mov
lret
enter
push
mov
sub
pop
lods
or
mov
dec
mov
sti
jnp
add
and
sti
cmp
inc
stos
cld
icebp
shl
mov
or
and
out
ss
loope
stos
cmp
outsb
filds
pop
stc
lcall
aaa
jge
inc
pop
pop
inc
xchg
push
sbb
sub
pusha
cmp
xchg
push
push
xor
add
adc
aam
cmp
movups
daa
mov
loopne
sbb
bound
xchg
cwtl
add
in
int3
pop
fildll
and
daa
insl
mov
xchg
out
in
push
xor
outsb
inc
popf
dec
or
imul
lahf
imul
popa
std
outsb
sti
mov
lods
lret
jae
pshufw
add
or
pop
jmp
pop
lds
arpl
jge
dec
scas
fndisi(8087
push
cmp
mov
lret
xor
fadd
pop
sbb
xor
jbe
cmpsb
mov
jp
jg
subb
adc
ret
ja
scas
fwait
and
sub
jge
push
popf
pop
push
repnz
add
vpmulhw
in
pop
dec
repz
xor
sub
lods
rorl
mov
add
dec
ss
inc
cld
pop
mov
mov
sbb
outsb
push
pop
sub
add
int3
pop
popf
add
stos
aad
in
push
dec
idivb
adc
and
adc
dec
aas
mov
inc
jns
icebp
cmpsb
xchg
into
push
popa
dec
xchg
clc
mov
or
jp
pop
cmp
inc
movb
stos
es
pushf
add
pushf
fwait
out
sbb
dec
ror
bound
mov
push
iret
cwtl
push
mov
ret
push
mov
fs
fwait
add
fwait
lods
lea
popa
in
add
and
pop
into
into
jmp
mov
inc
jb
push
and
push
inc
mov
test
adc
cmp
frstor
add
fimuls
sbb
or
push
jo
cmpsb
imul
dec
popa
aam
cmp
fldl
push
dec
inc
and
xor
inc
dec
lret
pop
or
dec
movl
lock
int
push
pop
pop
jg
xchg
int
adc
pop
sbb
mov
and
sub
pushf
mov
xor
or
pop
lods
loop
inc
out
pop
aaa
or
pop
stc
adc
mov
sbb
xchg
xor
mov
cmpsl
add
mov
or
flds
les
cwtl
jno
add
or
aad
and
repnz
imul
jnp
out
movsl
mov
mov
aaa
sarb
lds
aas
gs
sub
push
cmp
ja
sbb
sbb
cltd
sti
orb
jg
aas
mov
rcrb
enter
mov
idiv
fnstsw
mov
movsl
rcl
add
insl
test
bnd
fsts
scas
cmpsb
jl
shrl
adc
outsb
lret
and
mov
sbb
and
jno
adc
and
outsl
ja
xchg
or
jp
dec
hlt
mov
xor
adc
or
clc
imulb
loope
insb
out
xchg
and
in
mov
test
add
data16
push
push
rorb
mov
xlat
mov
imul
ljmp
jle
add
nop
push
stos
mov
fsubs
adc
pop
push
mov
push
ds
adc
daa
pop
les
pop
sbb
pop
pop
inc
push
jcxz
jns
pop
or
imul
and
inc
stc
adc
sahf
mov
xor
stc
adc
xor
mov
test
jae
cli
sub
cmp
mov
or
psubq
imul
cld
mov
lock
daa
fsubp
scas
stc
lahf
lret
mov
xor
leave
adc
mov
xchg
jb
pop
out
adc
in
xchg
mov
fwait
mov
in
mov
mov
dec
xlat
adc
mov
inc
jno
sahf
mov
add
inc
enter
in
iret
pop
sub
mov
lret
out
ss
jo
mov
rorl
mov
xor
loopne
mov
fbstp
stc
jmp
lcall
out
ljmp
cmp
mov
in
pop
loop
sbb
mov
inc
fcmove
or
dec
add
pop
subb
xchg
cmp
and
jno
in
or
mov
mov
push
aad
and
imulb
mov
hlt
shll
shlb
dec
add
rorl
and
inc
fisubl
sti
mov
jb
sbb
jle
add
adc
filds
pop
dec
adc
dec
mov
stos
lret
test
mov
mov
shlb
xchg
hlt
popf
sbbl
jp
lcall
xchg
mov
js
xor
xor
xor
push
call
xlat
xor
mov
adc
shlb
lahf
sub
push
ljmp
mov
sbb
mov
push
movsb
sub
cld
mov
dec
popl
sub
mov
or
push
dec
daa
jbe
inc
and
scas
sarl
ja
lds
dec
addr16
and
movsl
mov
xchg
cmc
das
popf
mov
out
sbbl
cmp
aas
jnp
or
mov
pop
pop
fcompl
mov
push
sub
push
psllw
mov
add
in
ret
fldcw
jo
sbb
ffreep
das
dec
mov
test
loop
popa
sbb
mov
jo
lds
mov
movsl
int
sbb
subl
push
dec
loopne
jb
hlt
imul
and
cmc
sbb
int3
decl
in
sahf
jp
or
pop
add
jle
shl
mov
cmp
cld
sbb
insb
inc
adc
push
add
icebp
xor
jecxz
movsb
pushf
jle
sbb
icebp
cmpb
dec
mov
sub
cs
inc
mov
add
sti
push
sub
jmp
addr16
inc
push
and
movl
out
aas
jbe
flds
outsl
addb
mov
sub
sub
dec
adc
inc
push
scas
jmp
std
jecxz
dec
xchg
fisttpl
imul
inc
test
mov
cmp
mov
stos
jle
lods
dec
imul
cmpsl
scas
sub
shl
pusha
insl
adc
lahf
pop
inc
mov
xor
pop
mov
add
mov
fadds
nop
enter
das
lcall
mov
rcrb
add
dec
sbb
jnp
js
stc
xchg
mov
mov
push
lahf
into
pop
mov
dec
rolb
jno
adc
xor
adc
test
pop
pop
stc
daa
cltd
dec
movsb
mov
jg
dec
rclb
sahf
fisttps
add
push
int
jl
sbb
lea
int3
cmpsl
jmp
mov
shrb
cmpsb
out
sahf
ljmp
mov
jno
push
outsb
movb
imul
roll
jb
dec
ja
cs
repnz
insb
inc
cltd
jns
fstpt
push
mov
bound
dec
sar
jno
and
mov
mov
es
clc
popa
inc
enter
inc
add
aad
je
lock
fstpl
cs
lock
push
cmpsl
cmpsl
pop
loop
out
adc
mov
and
add
xlat
mov
or
sbb
rolb
push
clc
push
mov
jmp
fiaddl
jae
dec
shlb
inc
sbb
insl
loopne
jl
push
inc
call
test
lods
sbb
loopne
scas
inc
jns
jmp
lods
pusha
shrb
cmp
sub
addl
testl
into
xchg
insl
aad
adc
jo
addl
sub
inc
dec
adc
cmpsl
les
xchg
arpl
rcrl
adc
xor
push
xor
filds
arpl
bound
or
dec
int3
data16
push
in
lea
mov
inc
ljmp
cwtl
ret
lahf
push
mov
into
jp
or
pushf
cli
cmc
aad
jb
icebp
lock
out
push
jge
sbb
call
mov
cmpsb
test
push
in
mov
idivb
adc
imul
lret
xorl
and
mov
xchg
loope
and
ljmp
xchg
xor
inc
out
in
lods
out
inc
inc
mov
jg
push
or
aad
lahf
rolb
add
sub
jne
ret
jg
add
pop
andb
dec
leave
cmp
psrlw
xchg
jl
mov
aas
shr
out
push
movsl
lret
jmp
cmp
mov
dec
movsb
fwait
jno
fadds
push
outsl
clc
cltd
jo
dec
inc
in
or
outsl
cmpsb
fildll
pop
loopne
sti
mov
jno
dec
inc
sbb
and
mov
stos
fwait
orl
ljmp
sub
fisttpll
testb
push
mov
in
or
sbb
mov
and
push
andl
mov
mov
in
fistpl
jle
mov
ss
imul
mov
xchg
sbb
mov
fildll
mov
nop
test
jg
in
mov
sub
add
ret
dec
repz
xchg
mov
adc
scas
lcall
xchg
sbb
xor
pop
cwtl
dec
dec
mov
stos
out
and
popf
ja
add
mov
dec
pop
push
pusha
ret
cmpsl
mov
icebp
sbb
mov
xchg
inc
addr16
fisubrs
and
sub
adc
inc
cmc
adc
jb
lods
lock
sbb
sbb
xchg
sbb
push
aas
gs
jge
dec
pop
into
jg
les
cmp
fstpl
and
push
mov
jnp
imul
xor
jp
mov
cli
mov
hlt
ret
cmpsb
addb
fmul
loopne
iret
in
inc
jg
push
sarl
xchg
mov
pop
mov
mov
push
xorb
es
shlb
mov
nop
pop
mov
pop
lds
ss
out
and
mov
adc
dec
cmp
pop
nop
adc
and
xchg
inc
cltd
loopne
mov
lds
cs
in
hlt
nop
jecxz
pop
sbbl
adc
js
pop
push
andb
in
ljmp
shrl
cmp
mov
add
xchg
pop
cs
adc
aad
cld
dec
adc
jecxz
pop
and
jl
mov
jno
pop
in
or
inc
aas
sub
clc
movsb
leave
inc
outsl
notb
fnstenv
sub
repnz
mov
insl
xchg
add
ds
mov
pop
add
jge
sbb
pop
lods
inc
jb
test
arpl
mov
mov
fsubrl
push
pop
sbb
and
outsl
in
or
pxor
enter
add
fnstcw
add
jb
mov
fisubrl
push
push
jg
pushf
mov
rep
repnz
arpl
pushl
je
cmp
cs
movsb
jp
scas
jae
test
ds
ja
or
mov
mov
aam
xlat
mov
lods
inc
pop
loope
jl
insb
pop
adc
xchg
movsl
mov
xchg
inc
sub
jne
dec
push
mov
clc
int
or
outsb
sub
inc
cmp
pop
jne
cltd
popf
add
fimull
xor
xor
cmp
mov
adc
fmuls
je
fnstsw
enter
lcall
mov
test
nop
mov
add
pop
dec
aaa
clc
call
cmp
pop
jb
lcall
sbb
mov
jecxz
sbb
push
fcmovu
xor
test
sbb
mov
jle
inc
jnp
and
and
push
push
dec
lret
ds
cmovge
xor
gs
out
xchg
std
lods
xchg
sub
xor
sub
lock
adc
popf
cmpsl
xchg
loop
mov
jg
addr16
dec
add
mov
fnstenv
pop
pop
push
sub
jp
jae
mov
cmp
xchg
into
dec
sahf
cmp
into
or
fisubrl
mov
shld
cmp
aaa
adc
or
popa
repnz
out
sbb
inc
mov
test
adc
pop
rclb
test
sarb
out
iret
popf
mov
pop
enter
insb
pushf
pop
lock
pusha
fldt
xchg
and
ret
fs
jmp
fst
sub
lcall
aas
repnz
inc
mov
cmpsl
mov
sahf
or
scas
cmp
pop
movsl
or
fisubs
pop
incl
out
jle
pop
sbb
hlt
push
pop
aas
idivl
push
aaa
outsl
popl
and
mov
int
xchg
cmp
std
clc
test
xor
push
sbb
popa
lcall
xchg
jecxz
xchg
sbb
repz
mov
fdivl
clc
lds
je
add
shll
xchg
mov
add
pop
mov
cmp
add
ret
mov
or
fists
lods
out
js
aaa
inc
ret
push
ret
out
xor
stos
sbb
repz
and
loope
xchg
or
fadds
xchg
pop
mov
fs
or
sub
jg
loop
add
incb
imul
inc
adc
out
inc
jle
fs
sub
in
insl
or
scas
in
jmp
cld
xchg
add
aas
push
lcall
push
in
mov
cld
je
cmp
adc
insl
leave
pushf
adc
jno
lock
pop
mov
sub
mov
mov
dec
sub
arpl
push
adc
inc
hlt
in
adc
rorb
nop
push
pusha
xor
roll
enter
mov
sbb
jno
pop
call
scas
test
frndint
mov
lods
pop
jbe
ljmp
add
mov
movsl
push
xchg
imul
mov
divb
mov
aas
jecxz
add
test
or
or
push
cmp
xchg
xchg
push
pusha
push
movb
push
loop
call
je
mov
cmp
ss
add
pop
imul
jno
push
and
scas
mov
cli
sbb
xor
mov
aas
pop
aas
fsubl
popa
je
jae
mov
in
mov
mov
inc
xchg
rorb
push
rcrl
sub
into
mov
adc
or
mov
mov
jg
adc
pop
pusha
pusha
loop
lods
scas
outsl
int
cli
inc
push
adc
clc
int
add
out
mov
sbb
ja
sbb
aad
or
push
xchg
jb
xchg
loope
jmp
nop
push
in
fdivs
daa
test
mov
push
out
and
mov
leave
and
mov
adc
cmpsb
pop
ljmp
xlat
insl
ljmp
aas
xchg
lret
pop
int
in
inc
int
pushf
in
pop
ja
fdivl
mov
popa
mov
or
lods
mov
or
push
sub
jmp
pop
xor
leave
sbb
adc
add
lods
sub
jle
cmp
imul
int
adc
xor
lea
push
cmpb
cmp
shrb
add
inc
clc
add
dec
test
setns
roll
mov
dec
adc
cmpsb
pop
daa
or
or
xor
popa
js
sub
repnz
mov
leave
shr
jbe
dec
adc
add
add
dec
mov
adc
jg
pop
loope
out
and
jae
lea
lods
jmp
adcb
movsl
sub
stos
jmp
int
dec
andl
pushl
xor
popf
int
sahf
insl
add
movsl
inc
adc
test
mov
mov
insb
push
orl
js
mov
mov
xchg
out
pop
fwait
sar
or
sub
in
stos
and
sbb
pop
imul
mov
and
sbb
out
xor
pop
adc
or
dec
xchg
not
int
int3
mov
push
pop
inc
and
jbe
cmp
jne
cmp
cltd
sbb
mov
out
and
jno
xor
mov
testb
xchg
cwtl
loopne
test
sbb
pop
test
stc
bnd
sbb
inc
sbb
dec
lds
dec
mov
lahf
sub
xchg
js
jp
sub
andb
pusha
in
js
xchg
insl
movsb
enter
in
movsl
clc
sbb
jl
out
push
xchg
data16
dec
out
ret
fcoml
in
mov
jno
dec
cmc
xchg
mov
mul
leave
jb
in
inc
xlat
xor
fisubl
je
adc
int
push
mov
cmp
inc
add
cld
inc
cmp
in
jae
int3
repz
and
adc
mov
sbb
pop
dec
lret
jnp
das
std
ss
psubsw
addb
mov
clc
mov
and
scas
es
test
adc
jb
jno
int3
mov
ds
ret
pop
out
dec
dec
enter
mov
loop
add
call
lret
out
and
add
scas
cmp
outsb
xchg
insl
int
loop
dec
inc
mov
jne
sub
arpl
and
mov
push
inc
jbe
sbb
popa
fnstcw
fildll
mov
std
es
xor
fiaddl
xchg
mov
sbb
sbb
loope
sahf
cmc
add
cltd
and
xchg
sub
ljmp
and
push
lods
shrl
adc
sahf
test
jns
leave
push
notl
jnp
loopne
sub
fwait
add
push
xchg
sub
pop
add
mov
gs
sahf
ret
imul
es
lcall
cltd
push
mov
mov
roll
lds
sbb
call
adc
sar
dec
or
push
mov
ds
and
int3
jno
std
jecxz
pop
jnp
mov
adc
cmp
rclb
movsl
add
int3
adc
shlb
stos
jmp
mov
cmp
and
fisttpl
pop
fidivrs
in
jno
cmp
aam
sub
push
cwtl
jle
nop
push
jae
sbbl
jb
cmp
sub
cmp
ljmp
daa
xchg
add
pop
call
hlt
inc
addl
push
sbb
dec
stos
or
mov
push
les
sbb
push
pusha
fstpt
sbb
pop
xor
jae
xlat
fwait
loop
pop
test
leave
xchg
rcrb
inc
lahf
pop
lret
test
ret
dec
cmpsl
jb
sbb
lret
adcl
sti
ja
int3
mov
mull
cmp
ret
aas
loop
dec
call
addb
mov
pop
pop
int3
dec
lods
mov
xchg
ds
xor
fwait
lock
es
nop
out
test
xlat
add
push
je
jecxz
push
or
repnz
and
mov
ret
push
mov
negb
in
stos
stos
int3
add
mov
dec
lea
mov
lods
adc
js
imul
sub
push
sub
aad
dec
or
push
mov
cmp
mov
js
pop
loope
fdivrp
in
insl
or
fstp
pop
push
orb
stc
xor
dec
and
lret
mov
or
jmp
pop
call
inc
aam
sub
mov
xchg
push
xchg
into
fdivs
test
or
lret
lods
orl
fstpl
pop
stos
repz
xchg
push
repnz
je
decl
xchg
bswap
mov
jle
clc
cwtl
pop
xor
adc
outsl
cmp
std
bound
lret
cltd
dec
mov
sbb
jmp
pushf
push
pop
testb
mov
mov
arpl
mov
scas
push
test
push
dec
aad
add
push
in
jmp
or
xor
icebp
jle
shll
add
out
xchg
push
rolb
push
jge
scas
adc
jmp
repnz
xchg
push
cmp
dec
pop
repz
stc
pusha
jmp
fwait
rcr
insb
pushf
sti
inc
mov
or
mov
jns
xor
xor
popf
and
addr16
shlb
in
out
ror
cmpb
xchg
outsb
xchg
jg
movsb
mov
pop
cs
xor
mov
xor
adc
dec
pushf
jle
pop
jnp
xchg
push
jl
cltd
inc
push
jo
in
sub
dec
mov
int3
jle
lret
and
popa
test
cmpsb
rol
aad
ret
hlt
mov
add
adc
nop
or
lea
and
scas
test
test
sub
pop
push
sbb
shlb
stos
xchg
aas
mov
push
xor
jo
xlat
mov
dec
cmp
lock
fs
pop
insl
shl
jno
call
add
pop
ficoms
xor
int3
roll
add
cltd
out
xchg
mov
icebp
cmp
nop
cs
fstpt
hlt
jle
add
add
js
mov
pop
jg
add
mov
fnstenv
sbb
jae
out
test
dec
xlat
jmp
or
cmp
ljmp
into
mov
pushf
mov
mov
sub
or
mov
int
mov
aas
addl
and
in
leave
jno
jo
mov
cmp
lahf
mov
enter
stc
rclb
xor
cltd
fldenv
into
and
lea
stos
jg
jle
jo
lods
jp
or
xlat
in
daa
pop
loopne
in
fwait
imul
fnsave
mov
dec
cmp
popf
and
mov
mov
int
ds
mov
popa
sahf
jae
cmp
jb
out
ffreep
sbb
jb
fidivrs
or
add
jne
dec
push
cmpsb
xor
jb
aas
out
mov
into
mov
rclb
ljmp
mov
dec
out
aam
pop
sbb
sbb
hlt
scas
ficompl
adc
mov
sbb
sub
add
imul
adc
push
inc
sub
inc
and
ds
call
mov
cmp
add
lret
pop
rcr
pop
cmp
inc
test
ljmp
jnp
mov
int3
inc
sbb
cmpsl
cltd
jo
cmp
xorl
je
clc
repz
pushf
scas
mov
scas
dec
lods
inc
gs
and
rorl
addr16
xor
out
pop
and
int
push
jle
test
and
xchg
add
xchg
adc
fwait
jl
xlat
lock
xchg
sub
jle
jmp
push
sub
inc
sbb
inc
aad
hlt
out
pop
pop
mov
xor
pop
cmp
lahf
jl
dec
cmp
fidivs
cld
addr16
jecxz
lds
add
pop
pop
push
arpl
out
xchg
movsb
lds
cmp
fsubrp
leave
rcl
jle
inc
mov
mov
in
rclb
nop
cmc
add
mov
jecxz
inc
ljmp
cvtss2si
js
jl
cmp
out
test
dec
xor
push
or
pop
out
movsb
pop
inc
push
insb
xchg
adc
shrl
cmp
insb
cld
out
aad
rclb
push
fnstcw
repnz
mov
and
or
xchg
sbb
dec
insb
mov
adcb
test
sbb
out
jp,pn
push
test
ljmp
loop
adc
push
addr16
arpl
stos
jmp
es
roll
outsl
iret
ret
xchg
sbb
and
shll
aaa
xchg
jne
mov
cwtl
aam
or
mov
xchg
das
fs
iret
popa
jno
jp
loope
fs
movsl
je
or
add
lret
push
adc
ret
popa
stc
xchg
bnd
add
inc
clc
negl
mov
push
imull
fxch
mov
stos
mov
jne
mov
popf
lea
aad
movsb
imull
aad
popa
jae
push
addr16
mov
xlat
adc
jg
mov
jecxz
sbb
mov
pushf
aam
std
cmp
lea
andb
add
sub
sbb
jle
xor
test
insb
add
jmp
xchg
sbb
jnp
out
lock
mov
sbb
std
mov
enter
fbld
sbb
aaa
add
cmc
inc
das
enter
cs
dec
aam
mov
das
pop
adc
pop
gs
mov
rolb
mov
shll
idiv
imul
jns
lods
sub
sti
stc
fs
jmp
lret
jne
xchg
cmpb
je
sub
pop
repnz
fmull
jg
shll
in
jle
push
mov
frstor
decb
xchg
sbb
int
jmp
in
sub
mov
aad
cmp
aaa
add
push
xchg
pushl
mov
jo
fsubrs
in
adc
fisubrs
jb
push
xchg
or
pop
and
mov
or
lock
mov
jae
add
mov
cmp
or
jno
and
cmpsl
in
add
adc
sub
mov
or
push
fwait
push
rolb
testb
arpl
dec
or
outsb
xchg
inc
loop
jo
je
in
sbb
and
imul
xchg
fisubrs
lods
ljmp
aaa
xor
mov
fimull
mov
mov
xchg
lock
lock
das
test
adc
jb
xchg
cs
jmp
pop
scas
pop
aam
mov
cmp
icebp
mov
adcb
mov
pop
aam
jae
repz
pop
and
int
jne
xor
mov
add
mov
push
dec
lcall
mov
inc
js
imul
push
cmp
dec
mov
jg
mov
xor
adc
cmpsb
addr16
cmp
ljmp
mov
sub
xchg
leave
testl
dec
mov
loopne
mov
data16
add
adc
dec
daa
mov
stc
cmc
or
test
sahf
lods
cltd
lret
hlt
inc
xchg
cmp
pop
sbb
dec
stc
aas
clc
mov
sahf
cmpsb
loope
fscale
out
fisubl
out
insl
pop
test
pop
sbb
mov
jo
lea
mov
jo
movsb
adc
out
jno
adc
or
std
push
ret
fwait
ljmp
mov
cwtl
bound
xchg
lods
adc
xchg
fwait
es
push
dec
add
xlat
test
mov
loope
movsl
or
fcomps
pop
dec
out
cmpsl
cwtl
mov
sbb
fbld
push
mov
cmpsb
aas
jbe
out
ret
push
jne
pop
mov
mov
and
or
push
push
mov
mov
mov
fdivr
cli
aaa
lods
dec
test
mov
sub
pop
inc
or
push
fidivrs
push
xor
fisubrs
push
mov
inc
pop
mov
movsb
inc
stos
fcmovb
push
xor
xlat
fs
mov
adc
movsl
scas
lods
test
dec
dec
dec
push
nop
call
sarl
std
and
stos
enter
je
or
sbb
mov
hlt
shrb
cmp
mov
push
lods
test
or
jg
dec
cmp
arpl
sbbb
inc
fucomp
add
xlat
movl
add
fisubl
enter
dec
mov
xor
repnz
inc
push
out
sub
sbb
and
mov
rcl
enter
push
test
aas
cmp
insb
movb
dec
xor
aaa
add
call
mov
ds
or
dec
insb
cmp
jl
arpl
pop
pop
mov
lea
mov
push
sbbb
insb
aam
jp
inc
push
andl
jno
mov
movsl
sbb
mov
ss
cld
pop
cmp
inc
and
lock
mov
pop
loope
insl
into
jecxz
mov
inc
mov
pop
adc
and
imul
and
dec
jnp
xor
sti
fstpl
arpl
pop
dec
test
and
ds
lods
sub
jg
mov
cltd
insl
jno
cmc
adc
repz
stc
les
mov
xor
insl
movsl
jo
rorb
adc
mov
iret
xor
imul
push
fsubrl
mov
leave
adc
push
xchg
mov
lods
or
sub
pushf
push
dec
or
es
adc
stos
pop
or
dec
and
pop
mov
xchg
stos
es
push
ljmp
lds
jnp
sbb
call
add
cltd
out
pop
popf
mov
or
cwtl
add
mov
add
cs
iret
push
cli
and
push
push
mov
out
imul
imul
jno
mov
data16
dec
cmp
test
notb
movsl
mov
mov
sbb
push
push
cmpsl
outsb
push
dec
fisubl
pop
aam
xchg
addr16
movb
cmp
jecxz
lods
adc
or
sti
mov
imul
popa
vpmacssdql
insb
push
mov
add
aas
mov
jmp
push
jl
sahf
rorb
or
pop
push
insb
sbb
loop
sub
sbb
hlt
decl
and
test
test
sub
je
sti
lods
push
out
mov
add
out
nop
pusha
jbe
fiaddl
xlat
ror
xor
xor
shll
test
dec
pop
insl
cmc
mov
ds
mov
mov
mov
push
test
xlat
adc
pop
out
iret
rcl
imul
stos
cmp
push
stc
add
jb
std
outsb
sbb
pop
lahf
xchg
and
nop
nop
jnp
sub
call
fnstsw
xor
cmpl
and
sbb
cmp
leave
enter
ret
test
sub
test
fstpl
fadd
sub
mov
sbb
cmp
jecxz
ljmp
jb
cmova
popf
push
push
pusha
inc
cmp
enter
mov
ja
xlat
cmp
or
out
pop
mov
fimuls
iret
fcompl
pop
stos
loope
push
and
or
nop
mull
mov
js
mov
es
push
push
and
les
cs
mov
out
stc
out
cmpsl
enter
mov
les
mov
imull
jl
add
iret
inc
lahf
push
movsb
movsl
mov
and
cmp
add
xor
push
mov
xchg
shl
lods
and
pop
js
cs
push
shl
sub
mov
sub
daa
sbb
jmp
adc
and
cmp
lds
xchg
mov
int
mov
aaa
out
jl
inc
adc
mov
pop
fldl
and
xor
sbb
mov
mov
mov
add
cld
inc
imulb
sbb
add
es
inc
lds
and
jmp
cmp
sbb
add
xor
lock
clc
pop
jmp
add
push
dec
sbb
test
mov
xlat
inc
xor
cli
in
push
pushl
mov
insb
sbb
xor
fldcw
mov
push
les
xsavec
mov
ja
out
xor
je
lcall
sub
pop
or
loop
dec
decl
dec
xor
test
lea
fwait
or
mov
stc
push
add
js
fdivl
stc
adc
dec
and
cmp
popa
cld
les
adc
mov
mov
lahf
repnz
xlat
aad
jne
ret
mov
mov
orb
je
movsb
push
lods
popf
das
push
xchg
xor
sub
pop
mov
add
loopne
nop
ffree
pop
leave
push
jecxz
sbb
inc
lret
fiadds
sub
dec
mov
push
sbb
push
int3
icebp
sti
xor
dec
adc
dec
mov
pop
fcomp
std
push
addr16
ds
lret
inc
test
fcmovnb
push
jo
cmp
rorb
dec
int
pop
and
ret
in
jne
push
outsb
scas
xchg
lock
aam
pop
test
dec
es
jecxz
fsubl
xor
sub
mov
dec
or
mov
rcrl
cmpsl
push
enter
or
pop
xor
adc
cmc
loop
lds
fwait
push
adc
xchg
jnp
repz
int3
mov
js
jmp
popf
push
je
jnp
bound
lea
aas
inc
rcll
push
repnz
leave
int
repnz
inc
add
sub
notb
cmp
out
pushf
and
mov
jl
popf
mov
jecxz
inc
mov
hlt
insb
ss
fdivs
adc
pop
add
or
test
arpl
jle
ja
in
pop
sub
lahf
inc
out
in
ret
movsb
pop
sub
and
in
add
pop
into
adc
sti
and
xchg
loope
lcall
mov
cmc
aad
fnstenv
cmc
test
rcrl
mov
jns
push
pop
push
jnp
in
addr16
sbb
stos
inc
push
rorb
push
xchg
cmp
push
cltd
es
mov
jecxz
mov
cltd
push
mov
jl
popf
cmp
xor
cltd
fnclex
xchg
in
xor
iret
sub
and
lret
aas
jns
subb
and
cli
cmp
sbb
push
into
lods
sub
js
add
jge
xchg
cltd
daa
repz
repnz
pop
roll
test
insb
in
sahf
xor
adc
inc
enter
xchg
mov
jge
cli
sbb
bound
in
xchg
cmp
cmpsl
flds
inc
and
inc
out
clc
lods
adc
push
jl
lcall
cmpsl
ljmp
lahf
mov
mov
mov
mov
cmp
and
gs
cmpsl
data16
je
fadds
adc
insl
pop
mov
addr16
push
and
jecxz
pop
sbb
clc
push
in
jg
pop
fidivrs
jo
adc
add
popa
cmpsb
stos
adc
jae
jnp
test
xlat
dec
jmp
dec
shr
mov
mov
sahf
jp
lahf
or
mov
dec
pop
out
js
and
pop
imul
mov
push
pop
loop
dec
pop
mov
rolb
jo
cmpsb
dec
icebp
push
sub
repz
loope
popl
jle
jae
les
cltd
mov
push
ret
inc
repz
ss
inc
lds
pop
jbe
cmc
or
mov
sarl
iret
adc
test
cmp
jno
xchg
adc
mov
adc
jp
jbe
jecxz
push
test
out
or
movsb
sahf
xor
xchg
push
xchg
into
rclb
adcb
jp
popa
or
in
push
and
jns
add
and
mov
jbe
outsb
dec
mov
lret
lret
mov
pop
jb
lahf
mov
outsb
clc
int
jo,pn
les
in
cmpsl
or
das
sbb
lods
jae
xor
arpl
mov
push
dec
pop
out
mov
aas
mov
dec
je
loope
push
mov
data16
fs
mov
cmpsb
jl
mov
loop
cld
xlat
mov
bnd
adc
sti
out
mov
jne
pop
cs
imul
add
flds
xor
sbb
adc
add
sbb
and
xor
sub
ret
mulb
movsb
arpl
mov
pop
jle
out
xor
inc
sub
std
shll
lock
cmp
movsl
neg
cmp
or
lcall
ret
xchg
xchg
sbb
outsb
lea
push
mov
nop
sub
push
je
and
lods
add
cmp
cmpsl
jmp
test
jge
cmpsl
cltd
enter
lahf
fdivs
mov
notl
data16
and
ja
enter
hlt
subl
es
jns
jo
jg
mov
popf
aad
pop
xor
lret
jo
push
mov
mov
push
mov
lahf
push
es
inc
add
pop
outsl
inc
scas
insb
pop
outsl
das
mov
or
cmc
pop
push
lods
sbb
xor
push
dec
cltd
aaa
xor
push
mov
cmpsl
pusha
inc
cmp
ljmp
push
adc
lret
jno
sbb
test
mov
sbb
aam
push
pop
mov
push
divl
bound
inc
push
pop
test
xor
mov
int3
adc
imul
rcll
xchg
pcmpgtb
sub
xchg
and
bound
xor
sub
mov
decb
outsb
into
or
sbb
sbb
or
into
loopne
aad
fstpt
sbb
js
mov
xchg
ds
daa
jns
sub
cli
test
dec
inc
test
test
repz
stos
sub
idiv
push
fisubrs
dec
mov
sbb
mov
shrb
mov
ret
and
loope
inc
cltd
xchg
outsl
insl
mov
cmpsb
pop
cmpsl
mov
mov
iret
scas
scas
and
test
mov
adc
jns
xor
jno
int
pop
jecxz
xor
mov
pmuludq
dec
cmpsb
ja
xlat
das
popa
lcall
cld
gs
dec
or
push
pushf
aam
lahf
jp
mov
xor
mov
sub
fisubs
iret
dec
lret
and
add
mov
imulb
sbb
jp
mov
sbb
gs
fcomps
or
and
or
sti
cmp
xor
cmpsb
and
adc
test
jp
popf
and
mov
lods
or
sub
xchg
aas
and
xchg
in
adcb
dec
xchg
push
push
jg
out
dec
mov
mov
popa
sub
xchg
sbb
xchg
in
push
add
pop
out
shrl
and
fwait
and
gs
outsl
xchg
popf
dec
mov
pop
ret
lret
adc
sub
xor
outsb
mov
mov
gs
sbb
shll
pop
sbb
adc
lret
andl
lods
mov
divl
aaa
cltd
ja
aas
pop
int
add
dec
mov
rcrb
pop
sbb
fimuls
hlt
cmpsb
popa
data16
adc
xlat
lods
inc
sub
inc
jo
fwait
xchg
andl
push
addb
sub
arpl
icebp
clc
cltd
or
lret
dec
sub
mov
push
inc
int
pusha
call
ss
mov
or
pop
gs
xlat
xchg
mov
shrl
adc
jne
jne
dec
rol
dec
sbb
push
lret
iret
es
sub
jg
cmp
xor
gs
dec
add
insl
pop
or
imul
cmp
inc
fucom
push
test
jns
xor
inc
dec
test
mov
dec
cmpsb
movl
mov
mov
out
xchg
iret
imul
dec
dec
pop
popf
cld
lret
inc
insb
out
sti
xchg
fcoml
cmp
cmp
mov
gs
or
jmp
lock
jnp
rcl
mov
pop
xor
fistpll
orb
popf
mov
fdivs
pop
inc
jnp
inc
push
cmc
jne
jne
out
xor
stos
mov
pop
pop
repz
mov
dec
push
dec
mov
je
jbe
pop
aas
lretw
cmpsl
jne
inc
ljmp
xchg
int
dec
imul
dec
pop
or
fwait
and
repnz
bound
sub
mov
or
lds
jmp
mov
es
mov
lret
lods
dec
xlat
arpl
sbb
sahf
jle
mov
push
push
cli
andl
ja
and
xchg
into
out
sub
leave
jb
pop
jns
push
push
daa
and
adc
sub
pop
sbb
push
push
inc
dec
addr16
pushf
mov
xchg
lock
push
data16
jnp
fstl
out
cltd
sbb
or
jp
xor
sbb
mov
xchg
adc
test
fs
jecxz
iret
cld
loop
push
sahf
mov
xor
jge
call
push
pushf
movsl
scas
pop
dec
mov
sbb
sahf
push
dec
adc
aad
lea
sbb
sbb
lret
xchg
pop
leave
stos
add
bound
das
lahf
mov
lea
cmc
imul
fdivrs
and
jbe
pop
mov
repz
push
mov
mov
mov
push
pop
cmc
dec
lods
inc
out
jnp
aaa
xchg
jle
push
lahf
sbb
add
stos
sub
inc
push
insb
ja
rorb
mov
dec
sbb
lret
daa
adc
dec
sub
sub
jns
les
xor
pop
jl
addr16
bound
push
outsl
arpl
pusha
xchg
sub
ret
aas
mov
shrb
out
push
sub
push
mov
xchg
aad
outsb
dec
cwtl
sbb
cmp
push
decb
mov
je
popa
dec
sbb
mov
imul
jo
sub
inc
mov
and
call
push
in
sbb
fwait
ljmp
sub
repnz
les
pop
inc
xchg
js
addr16
jmp
push
pop
mov
add
add
insb
or
adc
je
adc
mov
out
adc
inc
mov
out
bound
cwtl
jg
pusha
movsb
mov
xchg
js
dec
add
sbb
or
mov
ljmp
add
mov
into
push
add
push
call
xchg
xor
int3
inc
sbb
outsb
cmp
inc
sub
add
pop
fidivs
cmp
dec
bound
out
mov
adc
repnz
dec
push
movsb
popa
sub
pop
jo
arpl
jmp
lcall
in
movl
push
jo
clc
push
and
in
sbb
inc
fdiv
and
jp
out
scas
push
mov
pop
aam
jbe
push
or
int
fists
cmp
bound
or
pop
lods
or
cmc
imul
dec
push
xor
imul
out
rorl
loope
xor
outsb
inc
inc
popf
push
jle
in
test
fstpl
xchg
or
into
push
xor
aad
adc
or
sbb
mov
mov
scas
mov
imul
add
in
jne
cmp
pop
and
sahf
pop
mov
dec
scas
imul
add
jmp
adc
sbb
and
add
int
rorl
jge
mov
inc
mov
shlb
xchg
mov
loope
pop
outsb
or
dec
cli
and
nop
add
stc
test
pop
add
and
dec
in
jp
ja
lret
sbb
cmpsl
adc
test
xor
cltd
inc
ss
jl
cmpl
xlat
rclb
sarl
or
lock
ljmp
push
insl
scas
pop
and
rorb
ds
push
jp
stc
shll
inc
clc
in
lret
in
mov
xchg
scas
test
aas
movsl
mov
cmp
lock
movsl
stc
fcos
repnz
and
insb
out
rcrb
pop
je
xchg
jg
mov
insl
ret
cmp
dec
pop
insl
stc
mov
cmp
cwtl
xor
or
and
pushf
xchg
jle
xchg
jge
dec
mov
rcrl
pop
jge
pop
jmp
test
test
cmp
and
or
fwait
dec
or
mov
rcr
add
pop
push
mov
stos
negl
cltd
daa
inc
pop
imul
cmp
jge
and
aaa
dec
in
mov
out
les
hlt
cltd
ljmp
pop
ss
movsb
and
inc
or
scas
fwait
dec
jnp
dec
sub
sub
push
aas
jp
hlt
fwait
sti
cld
pusha
outsl
xor
pop
pushf
and
mov
or
and
sbb
or
cmp
lahf
repnz
lods
nop
mov
sub
mov
insl
add
inc
ffree
fldl
leave
or
mov
jmp
rolw
clc
jne
loope
and
hlt
out
test
and
aam
fsub
sub
je
out
or
and
les
or
fimull
xor
jb
xchg
les
repz
ss
adc
dec
aas
and
sbb
mov
scas
pop
orb
int3
mov
dec
sub
imul
enter
lea
mov
inc
dec
neg
int
je
lds
dec
mov
in
cmp
mov
xchg
addr16
nop
in
push
add
loope
cmpsb
stc
sub
push
call
and
xchg
and
inc
insl
or
mov
icebp
push
les
mov
inc
cmp
add
fisubl
jecxz
daa
scas
and
loop
inc
les
jbe
jb
dec
daa
out
xor
dec
sbb
add
xchg
inc
scas
push
je
lcall
pop
jge
dec
jne
int
test
cmpsb
jno
xchg
mov
mov
and
mov
pop
in
popf
pop
pop
shll
ja
cmpsb
loop
cmp
add
lods
aad
fnstenv
test
int
mov
xchg
pop
fnstenv
dec
mov
cmp
and
cmp
pop
push
xchg
mov
dec
rcr
push
jbe
adc
cli
push
fldcw
sub
mov
xchg
xchg
pop
jne
inc
mov
arpl
jnp
sbb
pop
dec
cmp
inc
cwtl
cmpb
xlat
shl
dec
pusha
repz
dec
cmp
aas
aad
mov
fwait
mov
cmp
mov
aas
jmp
fcoms
aas
pop
jae
xchg
je
popf
push
and
cmp
outsl
cmpsl
xchg
daa
adc
out
iret
fidivs
dec
popf
daa
imul
mov
mov
pop
movsl
or
inc
mov
incl
cltd
push
xor
push
jns
jae
jnp
out
cmp
pop
stos
add
pop
mov
pop
shl
dec
jecxz
adc
scas
mov
push
push
fidivl
inc
lcall
adc
xor
mov
ret
fnstsw
dec
xchg
cmpsb
int
dec
aam
lcall
jle
stc
addb
jge
dec
cmp
mov
push
mov
fxch
dec
sbb
negb
push
jmp
pusha
mov
mov
sub
xchg
pusha
xchg
aad
fsts
mov
sub
pop
mov
mov
xor
and
jbe
aam
mov
mov
jle
insb
inc
push
imull
call
fimull
imul
icebp
lret
outsl
push
mov
pop
fldenv
scas
js,pt
and
push
jge
sar
jnp
clc
push
sbb
sub
xchg
je
arpl
cmpsb
sub
pop
mov
hlt
shl
pop
push
popa
les
mov
pop
dec
insb
and
xor
es
jbe
stos
mov
sarl
sbb
sti
xchg
push
cmp
ja
stc
push
les
xchg
mov
jmp
add
fwait
pop
and
or
ja
or
and
jl
mov
xor
subl
jp
xlat
popf
cmc
and
jo
out
movsl
fildl
in
jo
mov
lds
and
jb
fiadds
leave
pop
ja
sub
popa
dec
xor
int3
inc
xor
mov
jb
inc
cli
xchg
add
adc
out
and
push
jne
jl
push
push
dec
popa
aad
mov
dec
pop
adc
xchg
sbb
lret
leave
add
mov
out
dec
hlt
mov
dec
fidivrl
inc
add
xchg
out
xor
fildll
in
and
aas
lods
xlat
push
aaa
iret
cltd
sub
jbe
ds
arpl
ja
outsb
xor
mov
sbb
imul
loope
movl
mov
pop
rclb
inc
cli
out
dec
in
mov
inc
stos
xchg
jmp
in
mov
dec
jg
xor
xchg
adc
aaa
mov
dec
in
dec
xor
popf
lahf
xor
dec
jae
outsl
xchg
jns
jp
aad
icebp
out
push
icebp
and
mov
enter
into
loopne
xor
scas
dec
jp
es
fcoms
mov
in
push
pextrw
lahf
bnd
mov
pop
outsb
xor
imul
data16
xchg
mov
push
ret
push
jne
or
sarb
frstor
test
mov
sub
push
sahf
cwtl
cmpsb
rcll
ret
in
xchg
sarb
adc
pop
sub
mov
sbbb
aad
inc
out
out
mov
decb
xlat
cmpsb
xlat
push
xor
mov
xchg
repnz
mov
loop
adc
xchg
jl
iret
jp
mov
stos
pop
xor
pop
cmpsb
mov
out
clc
mov
out
mov
in
idivb
xchg
push
cmp
scas
xchg
rclb
dec
popf
iret
mov
push
test
xchg
sbb
in
test
jnp
test
adc
mov
jnp
adc
sub
push
xchg
pop
sbb
fstpl
movb
jns
push
sbbl
sbb
popf
push
xchg
adc
cmpsl
push
pop
adc
push
dec
int3
mov
sti
shl
mov
dec
inc
mov
jmp
mov
out
push
popa
aaa
push
mov
icebp
jne
lcall
jb
push
adc
adc
mov
xchg
ds
test
push
adc
pop
pusha
daa
push
aas
mov
dec
sub
xchg
dec
fnstsw
aaa
sbb
cmc
xor
inc
outsl
fildl
pop
adc
bound
cmp
cli
out
mov
mov
out
aaa
or
sub
outsb
adc
push
jno
pusha
and
pop
mov
add
rcrl
cmp
adc
or
mov
xlat
inc
pop
jo
mov
test
mov
out
add
pusha
das
inc
jo
dec
ret
xchg
jle
adc
sahf
jns
jp
add
sub
daa
movsb
inc
data16
mov
loop
lock
push
and
je
jbe
jne
pop
jb
rcrl
or
pop
das
adc
repnz
hlt
cmp
xlat
and
cltd
push
pop
inc
fcmovbe
jne
movsb
sahf
jb
and
outsl
daa
inc
push
aaa
stos
pop
pop
sbb
mov
and
jmp
push
xorb
or
push
xor
cmp
push
enter
and
fistps
dec
pushf
sarl
stos
pop
sar
add
bound
in
daa
jle
call
mov
and
shlb
movsb
cs
mov
jge
dec
les
shlb
xor
out
pop
inc
aaa
mov
inc
ss
std
fbld
dec
data16
xor
adc
fbld
push
sbb
push
pusha
pop
push
mov
andb
sbb
popa
mov
add
xchg
imul
push
test
dec
jbe
enter
fldenv
daa
popa
xchg
aas
imul
sbb
sarb
or
daa
mov
adc
xchg
jmp
ljmp
movzwl
data16
xor
xchg
mov
cltd
or
scas
lahf
pop
cmpsl
rclb
mov
loop
inc
cmc
pop
xor
xchg
cmp
dec
adc
xchg
pop
adc
inc
sbbl
xor
sub
inc
sbb
not
adc
jg
mov
fiadds
insb
lea
iret
stc
push
cli
add
adc
loope
mov
cmc
jno
push
repnz
pop
xchg
ret
and
cmc
lahf
movsb
push
das
dec
push
and
imul
imul
mov
ss
fcomps
jecxz
pop
popa
mov
aaa
fldcw
jne
jg
add
in
movsl
jbe
out
jmp
loop
imull
dec
jle
mov
add
insb
stos
int
push
rcrb
cld
adc
rcrl
jno
mov
lds
ret
xor
jg
mov
fidivl
lods
mov
inc
dec
push
mov
js
cmp
sub
shrb
jbe
mov
pusha
xlat
sarb
fisubrl
jl
movsl
loope
outsl
pop
sahf
sbb
jno
inc
rol
movsl
push
dec
repnz
pop
jbe
rcrb
dec
dec
in
push
mov
clc
jle
hlt
jmp
ret
and
xchg
jmp
aam
adc
sti
in
sti
pop
out
mov
das
testb
incl
jo
push
mov
leave
cmp
cld
pusha
pop
scas
add
leave
mov
lods
xchg
psubw
inc
inc
test
scas
push
jl
addr16
scas
jl
lds
push
nop
sahf
mov
cwtl
sub
sub
ja
fnstsw
js
pop
sbb
adc
aaa
lods
cmp
mov
jnp
mov
jp
rcrb
pusha
push
outsb
sub
sti
cmp
pop
cmp
ret
sahf
mov
lcall
lods
bound
adc
jo
mov
adc
pop
mov
fcom
bound
pop
xchg
fidivrs
fnstcw
adc
sbb
insb
add
out
stc
dec
xorb
data16
mov
cli
sbb
cmc
es
lock
cli
shlb
sbb
ss
add
mov
adc
inc
cltd
xchg
lock
jl
nop
and
out
mov
xchg
mov
mov
sub
es
rcrl
jl
push
js
pushf
mov
jnp
xorb
and
dec
jp
add
inc
out
push
sti
cmp
push
or
mov
gs
mov
in
push
mov
scas
in
xor
ficomps
cmc
imul
test
inc
mov
inc
rorb
aam
xor
sbb
daa
adc
push
or
cwtl
and
adc
mov
dec
sub
mov
cltd
jb
hlt
pushf
ret
ret
bswap
pop
dec
push
ret
fimuls
shl
sbb
setno
mov
push
xor
push
cmp
push
fmuls
into
outsl
addr16
xorl
or
test
out
cs
addr16
xor
popf
addr16
fmull
mov
inc
add
adc
push
inc
adc
popa
dec
sbbl
test
fmul
and
fdivrs
shrb
or
pop
xchg
push
dec
inc
or
xlat
nop
mov
mov
imul
std
sub
or
enter
lds
adc
and
and
cmp
pop
cmc
sbb
sub
les
shrl
sub
cltd
lret
xor
adc
repnz
cmp
in
sbb
push
cli
mov
sub
aaa
fwait
mov
adc
sub
mov
fcomip
test
mov
xor
subl
ss
mov
push
ljmp
cmpsl
adc
out
cmp
xlat
push
in
mov
out
mov
jo
out
mov
pop
add
mov
outsb
lcall
pop
sub
add
cs
mov
xchg
adc
sbb
mov
outsl
dec
mov
mov
add
adc
and
push
imul
lods
pop
fwait
int
or
xor
pushf
push
inc
push
neg
add
mov
je
inc
testl
rcrb
lock
and
jp
loope
push
fildll
popa
jmp
add
ja
jmp
inc
sub
push
fs
inc
add
gs
add
and
insb
lods
lock
push
out
scas
push
xor
dec
jnp
adc
subl
pop
icebp
jb
daa
push
lret
inc
and
stc
cmp
xor
incb
nop
xor
cmp
adcl
push
adc
adc
out
jo
sbb
xor
or
stos
mov
icebp
ret
mov
sbb
mov
push
mov
push
pushf
inc
dec
inc
mov
xchg
sub
jnp
iret
cmp
in
fcomps
mov
test
mov
mov
int
jl
push
jle
std
gs
test
cmp
icebp
and
dec
fwait
test
test
jp
and
inc
sub
mov
jmp
notl
push
stc
add
pop
push
push
ret
mov
jo
lret
and
popa
or
shl
fcomp
add
or
daa
pushf
shrl
fcompl
sub
push
arpl
cmpsb
lret
mov
out
and
aaa
daa
jb
sub
mov
inc
xchg
dec
mov
aam
js
mov
rorl
adc
pop
nop
frstor
xchg
pop
movsl
lods
roll
outsb
xor
or
dec
mov
icebp
push
ror
std
sahf
push
popa
inc
xor
jecxz
cmovg
xchg
push
mov
cmp
jae
in
imul
dec
mov
aaa
xor
pop
mov
lcall
xchg
inc
movsb
sbb
cmpb
push
pop
enter
xor
push
mov
push
push
cmp
imul
out
pop
aam
pop
sarb
or
add
jmp
roll
mov
xchg
repnz
dec
dec
hlt
sbb
outsb
std
sub
cmp
jp
hlt
stc
es
mov
pop
fsts
ret
outsl
es
imul
adc
test
mov
add
mov
jne
out
lahf
dec
mov
pushl
jae
int
jbe
and
push
xchg
xchg
jns
mov
out
cmc
popa
repz
enter
jge
aaa
out
push
scas
lret
sbb
pop
cmp
enter
fwait
jle
scas
ja
sbb
adc
push
inc
dec
outsb
lret
mov
jmp
push
into
xchg
xor
sbb
jge
int3
add
xor
xor
imul
add
cmp
ja
and
inc
shll
mov
and
in
fldt
jo
cwtl
mov
xor
nop
mov
or
imul
mov
mov
aaa
and
jbe
adc
out
mov
push
pop
push
ss
dec
dec
mov
mov
enter
fs
insl
test
xor
std
mov
sbb
rcll
lds
repnz
imul
mov
push
jmp
sub
sub
push
sbb
push
sub
lret
xchg
dec
int3
sbb
adc
cltd
adc
in
int
mov
jno
in
inc
mov
inc
testb
jo
sub
popa
pop
ss
inc
or
sbb
inc
cmpsb
aad
jno
movl
mov
push
sbb
loop
pop
into
mov
fimull
sbb
outsl
dec
rcl
jne
out
xor
stos
testb
or
jle
int3
nop
sbb
mov
shlb
mov
les
mov
or
fwait
aam
fiadds
and
adc
lods
or
sbb
enter
dec
lahf
sbb
movsl
aas
mov
call
cs
pop
stc
inc
mov
imul
out
pop
mov
cmp
icebp
arpl
push
imul
outsb
andl
mov
movsl
jb
or
nop
dec
dec
pop
pop
jnp
jo
inc
test
je
dec
add
sub
xchg
cmpl
neg
cltd
je
je
add
cmp
insl
lods
shll
adc
inc
pusha
push
ss
push
mov
pop
or
or
cmpsl
xor
pop
out
and
gs
mov
pusha
repnz
inc
das
into
cli
outsl
loope
int
adc
inc
aas
shlb
mov
cmovp
icebp
dec
add
cmp
mov
gs
push
into
int
mov
test
dec
sbb
xlat
push
daa
lods
stos
add
leave
sub
lds
loope,pn
inc
sahf
mov
stc
mov
inc
adc
sub
push
test
rcll
cmp
dec
pushf
dec
sbb
leave
jge
enter
js
rcl
jg
pause
cmp
pop
iret
cmc
incl
test
mov
push
dec
mov
push
stos
int3
push
jo
adc
fdivs
xchg
call
das
or
imul
ljmp
jle
lods
std
movsb
out
mov
in
loope
or
mov
sti
jp
push
gs
into
or
cwtl
cwtl
add
dec
inc
iret
pushf
stos
js
adc
add
imul
add
sbb
xchg
mov
dec
push
adc
mov
adc
xor
in
and
inc
ja
or
imul
insb
push
test
cmp
cmp
jmp
pop
aam
fcmovnu
jno
jl
stos
mov
xor
idiv
loopne
shlb
xor
push
fwait
jp
loope
outsb
pop
xor
sub
jo
push
fbstp
shl
sbb
and
scas
sbbl
arpl
inc
mov
mov
mov
cmpl
ss
mov
xchg
ret
call
push
leave
xor
aad
sbb
adc
in
fisttpl
lcall
sub
cvtpi2ps
in
rcrl
sbb
push
add
and
pop
inc
mov
inc
sbbl
inc
fsubr
push
xchg
cs
jle
frndint
repnz
inc
loope
in
sub
sbbl
xchg
pop
andl
adc
pop
into
incl
pusha
sub
sti
aas
dec
mov
mov
sarb
adc
dec
adc
jo
sbb
cmp
and
inc
dec
jbe
repnz
data16
push
out
sub
pop
push
mov
sbb
clc
xchg
addr16
pop
jge
les
and
loope
xor
cs
pop
push
dec
aad
xor
int3
and
sub
add
xchg
jmp
arpl
ljmp
imul
xchg
add
mul
fildl
rol
inc
lret
movsl
test
fnstenv
sbb
test
mov
pop
sub
xchg
xor
aas
mov
add
push
stos
ds
arpl
stos
inc
std
and
mov
pop
pop
inc
xchg
xchg
adc
mov
jo
sbb
ljmp
cmp
sbb
xor
cmp
xor
iret
adc
add
and
cmp
bound
push
cld
repnz
clc
imul
inc
adc
fldenv
popa
xor
sub
and
loopne
shl
jecxz
mov
add
xchg
adc
shll
jge
in
or
mov
push
aaa
inc
lock
cltd
outsb
xchg
imul
sbb
sub
mov
cmp
cmp
dec
sarb
dec
les
jge
popl
mov
inc
push
stc
test
mov
jne
add
mov
jbe
xor
int
daa
push
jb
jae
sti
xor
cmc
inc
pcmpeqw
scas
jecxz
in
js
sub
lds
pop
lea
cld
popa
js
in
pop
stos
notl
clc
mov
inc
inc
pop
xor
mov
xchg
wbinvd
push
movsb
shrl
xchg
xchg
fstpt
icebp
cmp
orb
stos
mov
dec
inc
insb
xchg
pop
pop
push
push
rorb
xor
cmp
push
test
dec
cmp
and
fistl
mov
and
cmc
pushf
sub
into
test
xchg
sbb
cmp
out
outsl
out
push
mov
das
imul
xchg
rcrb
inc
push
xchg
fidivl
cld
psubsb
jg
rcrb
int
mov
aaa
in
outsb
dec
rcr
sti
aaa
mov
mov
das
and
mov
ss
arpl
xor
mov
xchg
test
movsl
jbe
xlat
out
nop
mov
gs
bound
scas
mov
pop
jg
push
xor
mov
xor
push
cli
cmp
push
xor
sub
mov
xchg
into
mov
pop
mov
cmp
sbb
lahf
inc
outsb
mov
and
sarb
mov
push
aam
scas
sbb
clc
cmc
inc
add
int3
or
or
test
xor
cli
loope
ljmp
push
aam
jne
imul
daa
inc
xchg
adc
jge
stos
shll
js
lds
mov
cmp
adc
jecxz
push
cmpsb
scas
mov
mov
iret
xchg
icebp
jl
dec
jle
leave
jmp
mov
mov
sarl
stos
pop
and
dec
dec
arpl
ret
cli
mov
imul
add
mov
cmpsl
ja
out
adc
push
shrl
xchg
sbb
jbe
js
xor
adc
call
daa
les
mov
xor
add
test
cld
mov
in
lea
sub
mov
and
inc
aaa
or
jmp
dec
in
mov
add
mov
push
xchg
and
and
loopne
add
cs
lret
movsb
push
insb
and
cmp
add
mov
jb
xchg
adc
adc
mov
ret
jmp
mov
rcl
jl
enter
mov
cld
in
push
addr16
fisubl
mov
stos
pop
and
nop
int
xor
push
jo
lods
dec
pop
mov
daa
sarb
stc
roll
std
pop
inc
adc
push
cmp
inc
cmp
rcrb
xchg
out
inc
lea
popf
xchg
inc
arpl
es
push
or
cmpsl
out
popf
xchg
dec
add
push
pushf
cmc
xlat
pop
lea
inc
push
mov
jecxz
mov
push
dec
add
in
fmull
add
roll
mov
inc
movsl
out
or
or
movsb
mov
inc
adc
cmp
in
loop
pop
push
lcall
xchg
cmpl
insl
mov
outsb
lods
xor
fsubr
testb
dec
and
stc
push
out
cs
fbstp
iret
out
inc
cmpl
mov
test
lahf
std
out
add
sbb
cld
lds
inc
clc
add
sarl
loope
popf
lcall
inc
cwtl
dec
imul
sbb
repz
mov
test
push
mov
xchg
push
popa
mov
loope
sti
adc
loope
inc
jp
loopne
cmp
rolb
push
cmp
push
cmp
ds
sub
or
adc
je
sbb
bound
inc
dec
sahf
adc
jno
insl
fisubrs
mov
and
mov
and
pop
fpatan
adc
mov
call
xlat
or
cmp
gs
arpl
sub
xchg
sahf
xlat
add
push
mov
jmp
mov
or
mov
mov
gs
in
jnp
push
inc
sub
call
popa
inc
cmp
lret
mov
into
andl
mov
cmp
imul
jne
in
leave
cmpsb
or
cmp
js
xor
subb
mov
xor
rcl
lret
test
bound
adc
into
filds
mov
cwtl
jge
bound
xchg
popf
lods
rorl
decl
mov
adc
jle
jge
lea
mov
movsl
in
mov
push
jnp
pop
adc
shlb
cs
xor
popf
daa
push
shll
adc
and
sub
mov
ret
fs
inc
xchg
call
and
push
scas
add
mov
and
shlb
pushf
or
cmp
lret
push
adc
out
pop
in
inc
add
push
fs
jmp
rclb
jmp
and
xchg
in
cld
bound
and
repnz
xchg
cmp
das
xor
lds
push
add
scas
hlt
gs
push
scas
xchg
and
sbb
mov
ret
push
push
nop
rcl
push
aad
test
jno
sbb
or
cltd
fmul
add
jecxz
scas
mov
add
mov
ds
cvtpi2ps
enter
jbe
adc
ja
cs
xor
push
or
pop
ds
pop
into
stos
mov
inc
sub
sbb
pop
mov
or
enter
cmp
aas
in
mov
sub
adc
loopne
mov
loope
and
cmp
aaa
js
and
mov
adc
sbb
dec
jecxz
inc
push
inc
rcl
xor
fmull
lock
rol
adc
int
arpl
dec
mov
jge
in
cmp
lret
mov
pop
push
or
and
inc
in
mov
mov
js
mov
test
out
movsl
pop
loope
dec
mov
dec
notl
dec
mov
or
cmp
dec
xchg
pusha
mov
shr
stos
out
inc
cs
pop
mov
std
ja
cmp
into
mov
sub
push
mov
in
js
fistpl
loopne
mov
mov
popa
sbb
xchg
cmp
int
pop
adc
xor
test
dec
test
mov
mov
sub
ret
das
xor
mov
mov
adc
xchg
leave
in
mov
out
mov
adc
loopne
mov
clts
aaa
dec
orb
clc
cli
cmpsl
mov
push
add
repnz
cld
rcr
test
dec
dec
ror
stos
or
or
pop
dec
das
into
leave
sahf
pcmpeqw
loopne
movsl
ds
xchg
es
pop
cmp
xchg
jno
ljmp
dec
mov
inc
addr16
dec
push
ret
cs
lock
mov
daa
pushl
sub
fwait
or
fdiv
outsb
int
mov
push
add
nop
data16
roll
lods
inc
test
mov
pop
mov
pop
js
sbb
pusha
jo
cmp
imul
jnp
mov
dec
jg
int
xor
or
lcall
nop
add
nop
fistl
aas
enter
idiv
sahf
arpl
cmc
inc
cmpsl
cmpl
sub
or
ds
mov
ss
loop
mov
out
push
mov
mov
ja
sti
sub
push
push
popf
and
ss
loopne
js
xchg
outsb
or
jl
lret
push
mov
stc
lock
int
imul
jo,pn
jb
inc
add
cmc
outsl
cmp
mov
mov
or
and
sbb
sub
sub
pop
dec
or
xor
mov
push
shl
js
mov
pop
sub
inc
aaa
pushf
sarb
lock
lds
es
clc
lcall
aaa
jmp
pop
mov
sbb
fs
test
lock
push
add
mov
jno
rcll
in
xor
sbb
shrl
ljmp
push
ljmp
cmp
cmpl
mov
adc
mov
xchg
mov
inc
mov
loope
mov
nop
aad
jge
add
inc
negl
xchg
jmp
sbb
sarl
pop
decb
cmp
adcl
jecxz
in
dec
es
clc
add
and
ja
mulb
lret
jae
mov
mov
mov
jp
mov
aam
cmp
std
jns
das
mov
scas
jbe
xchg
mov
leave
inc
std
or
popf
fs
add
cwtl
inc
mov
and
lret
into
inc
pop
push
insb
out
inc
imul
and
adc
lods
adc
xlat
push
lahf
mov
popa
out
iret
aam
adc
mov
clc
aaa
push
hlt
clc
add
xchg
mov
hlt
cmpsl
jae
xchg
add
movsl
mov
jno
notl
push
mov
or
dec
and
int3
jge
xor
cmpl
mov
clc
pusha
loopne
rclb
add
out
push
mov
cmp
sub
icebp
hlt
or
mov
lds
pusha
cmp
shlb
and
pop
mov
mov
or
lock
or
ja
inc
loopne
std
mov
adc
fsts
dec
pop
loopne
rorb
sub
cmpsb
xlat
push
lahf
insb
inc
cli
mov
out
enter
dec
xchg
sahf
addps
add
loope
enter
mov
stc
inc
add
out
loope
lcall
dec
inc
into
cmpsb
xchg
cmc
repz
mov
jl
pop
test
sbb
addl
xchg
xor
adc
andb
enter
loop
lods
jg
mov
inc
ficompl
test
push
cmpsb
cmp
or
xor
inc
mov
cmp
roll
sub
idiv
in
jg
fs
cwtl
add
jbe
scas
scas
add
nop
mov
lret
stc
ja
or
ss
enter
sbb
cli
mov
ret
inc
xor
push
setg
cmp
mov
jmp
addr16
fmuls
in
push
xchg
push
shrl
push
mov
fwait
push
dec
jns
adc
je
add
test
sbb
inc
aaa
lahf
jp
add
xchg
dec
mov
adc
mov
sub
out
xor
ret
sbb
fs
add
mov
loopne
ret
arpl
and
mov
jl
movsb
daa
or
inc
xchg
mov
aad
cmp
pcmpeqw
adc
jmp
pop
aam
scas
mov
fwait
in
pop
add
ret
fstp
sbb
imul
in
daa
dec
sub
fstpl
inc
push
lret
loop
sub
icebp
xor
mov
cltd
mov
dec
jo
test
scas
or
in
inc
mov
lcall
rcrb
push
xchg
cmp
dec
sbb
mov
lahf
jecxz
int
sub
pop
adc
lock
mov
xchg
mov
mov
cmp
jmp
rorl
xor
pop
rcrl
call
ljmp
std
and
push
outsl
gs
out
int
mov
insb
decl
orb
insb
cli
jb
dec
or
push
repnz
fistpll
mov
leave
fbstp
cld
mov
arpl
add
repz
dec
sub
daa
sub
movsb
repnz
jle
outsl
adc
push
jmp
push
rclb
inc
test
vpmacssww
jne
repnz
cltd
inc
inc
enter
nop
jb
data16
xor
lock
sbb
js
faddl
outsb
lret
jo
inc
xchg
popa
mov
adc
testl
or
ret
mov
test
inc
loope
add
leave
ljmp
jle
dec
imul
int3
push
jmp
xor
lock
cmc
fs
int3
xor
inc
ljmp
iret
outsl
xchg
fsts
jl
rcr
pop
aad
cmp
jne
popa
pop
push
lcall
ljmp
fcom
imul
insb
pop
mov
lods
fcoms
mov
or
dec
ret
les
jno
jo
dec
mov
inc
or
mov
xor
in
xor
out
popf
mov
xchg
test
mov
xchg
pop
jno
daa
add
mov
jne
adc
scas
lea
fsubrs
mov
out
lcall
data16
xchg
push
sbb
lahf
pop
and
and
or
repz
testl
mov
or
pop
xchg
xor
jnp
inc
jmp
adc
add
fiadds
add
add
cwtl
cld
and
jno
loopne
mull
or
pop
scas
adc
mov
ss
mov
repz
cmp
jle
mov
mov
sbb
xchg
xchg
cmpsb
je
inc
mov
inc
lcall
int3
call
and
repnz
loop
movl
dec
fnstcw
lahf
pcmpgtd
sbb
cmpsl
xor
imulb
inc
shl
cli
cmpsb
test
loop
mov
vpcmpeqb
inc
lahf
adc
js
mov
adc
insl
pop
or
push
ja
xchg
mov
dec
inc
add
scas
mov
push
adc
xchg
cs
cmp
out
mov
mulb
or
xlat
push
in
in
xor
push
jecxz
sbb
inc
mov
adc
sbb
add
sbb
sbb
sub
and
es
daa
fadds
cmc
test
mov
push
stos
lea
sbb
pop
mov
xor
adc
mov
xor
out
cs
sti
xor
adcb
pop
inc
shrb
jmp
mov
push
or
sbb
push
movsb
cwtl
out
lea
nop
mov
mov
pop
pop
outsb
pmulhw
stos
or
mov
xchg
jb
lods
push
imul
or
xchg
mov
or
jns
cwtl
and
push
pop
adc
add
mov
push
inc
fnstsw
call
repz
pop
mov
sub
es
dec
dec
pop
stos
cld
leave
add
mov
mov
cmp
ret
into
inc
pusha
pop
cmp
lret
daa
or
mov
mov
sub
sbb
clc
and
bound
mov
gs
cmp
xchg
es
sub
mov
push
xchg
stc
adc
or
imul
mov
loop
loopne
jp
sarl
mov
nop
std
ret
shl
scas
pop
mov
outsl
or
test
jbe
outsl
neg
sbb
cmc
mov
sub
add
es
jge
stos
cltd
push
repz
dec
or
ljmp
xor
inc
and
pop
lret
pop
cld
xchg
shl
out
mov
rcl
insl
mov
mov
aam
test
into
add
dec
dec
stc
add
xchg
inc
xor
sub
fldl
jae
mov
inc
mov
cmpsb
neg
jne
sub
fdivr
cli
xlat
sub
inc
hlt
push
int3
xchg
pushf
jb
popf
push
dec
scas
adc
fwait
test
inc
xchg
adc
mov
cs
scas
or
jg
pop
mov
pop
xchg
mov
push
push
mov
xchg
mov
mov
mov
pusha
out
js
jnp
mov
jmp
testb
adc
clc
clc
adc
movsb
lods
adc
fnstcw
inc
es
mov
cwtl
lods
cwtl
mov
mov
sbb
dec
xor
test
test
in
pop
pop
in
jnp
cli
add
clc
repnz
xlat
and
mov
add
xchg
andb
xchg
cmpsb
dec
dec
pusha
scas
sub
cmp
dec
imul
lock
das
sub
jg
xchg
or
lea
ret
xchg
sti
lea
iret
scas
and
push
movsl
push
js
lds
mov
add
sbb
push
push
aad
mov
popf
imul
and
adc
cmpl
das
lea
sarl
or
adc
mov
filds
push
shlb
add
sbb
sub
je
jne
mov
jmp
ljmp
ret
sbb
repz
ret
push
fcomps
addb
jns
aaa
ret
mov
arpl
or
push
lds
stos
outsb
fimull
adc
xor
sub
jo
inc
out
out
add
sahf
add
push
into
mov
das
xor
xor
mov
cmpsl
ja
clc
dec
push
cmp
sbb
shr
je
xchg
and
push
mov
adc
dec
mov
cmp
mov
add
cmp
sbb
jne
daa
in
negl
inc
adc
dec
cmp
xchg
mov
or
add
adc
test
test
enter
sbb
inc
mov
loopne
inc
inc
pop
mov
xor
das
int3
mov
enter
lds
xadd
fisubl
dec
pop
out
mov
mov
sbb
inc
loopne
jmp
xor
hlt
pop
ss
out
pop
outsb
jge
push
inc
pop
xor
popf
or
jne
add
and
xchg
aas
fsubp
add
jno
mov
lods
dec
sub
imul
add
sub
pop
jecxz
aaa
jmp
and
mov
int
mov
mov
cli
jae
inc
jmp
mov
push
push
xchg
ds
frstor
fcoms
out
popa
inc
fdivrl
pop
out
mov
cmp
xor
inc
adc
into
arpl
mov
push
orb
push
call
mov
jb
jge
jp
mov
sti
jnp
inc
jg
orb
pushf
sbb
daa
mov
push
cltd
pop
das
ja
cmc
cltd
cmp
in
repz
in
sub
int3
aad
pusha
xchg
loopne
or
push
adc
icebp
dec
rolb
repz
and
push
cmp
repnz
jmp
das
addr16
adc
sub
ss
jb
les
bound
push
and
add
or
testb
dec
cli
roll
movsl
call
call
pop
jecxz
mov
insl
cmp
xchg
in
enter
inc
push
add
cmp
add
stos
sub
pop
jle
mov
rcrb
fidivrl
inc
cmp
insb
cmpsb
fs
inc
stc
es
loop
aad
aad
inc
lods
push
cwtl
arpl
test
or
enter
lahf
pop
or
push
bound
addr16
lahf
loope
rorl
in
xchg
or
cwtl
stos
push
inc
and
fcomps
loope,pt
test
cld
fidivs
or
enter
push
sbb
pop
jecxz
jecxz
jg
pop
and
lahf
enter
pop
ja
mov
add
sub
jnp
sbb
pop
jecxz
scas
les
pop
shl
xchg
add
cmp
xchg
scas
lahf
or
jle
cmp
cmpb
out
in
rorl
and
jecxz
cmp
jno
jle
push
mov
inc
sub
and
ds
xchg
mov
push
sbb
sarb
jo
shlb
or
fwait
test
dec
scas
push
ret
fstp
popf
or
sbb
lcall
addr16
cwtl
fistpl
pop
cmpsb
nop
leave
je
mov
xchg
dec
dec
mov
sub
inc
in
jmp
cmpsb
xor
mov
in
push
roll
mov
scas
lds
mov
push
xchg
push
test
jb
mov
bound
loop
jl
lea
jnp
les
sahf
pop
xchg
push
test
je
inc
outsl
ucomiss
mov
xlat
rcrb
jecxz
imul
addr16
dec
sbb
fldenv
pop
mov
push
pop
sub
popa
gs
mov
ljmp
outsb
aad
cmp
cmp
loop
mov
add
rcl
sub
into
cmpb
mov
rorb
leave
dec
mov
jne
inc
adc
inc
packsswb
pushf
dec
rclb
inc
inc
jno
jns
mov
mov
stos
push
adc
aad
adc
mov
lock
imul
mov
mov
pop
sub
out
cli
sti
dec
or
popa
les
lea
dec
stc
mov
adc
pushf
xchg
ja
fs
sub
out
mov
out
mov
jnp
fcmove
mov
aad
mov
cmpl
into
pop
mov
call
in
repnz
inc
xchg
push
mov
jmp
test
pop
pop
or
pop
dec
cld
mov
lret
push
lret
pusha
pop
and
xchg
cmp
test
sahf
mov
arpl
push
mov
sub
fistl
mov
push
fdivs
int
adc
push
insl
xlat
mov
mov
xchg
xor
ja
lods
adc
mov
test
adc
xchg
ret
mov
add
pop
add
xor
cmpsb
or
fiadds
inc
imul
dec
outsl
xor
addr16
jg
inc
inc
testl
mov
test
pop
xlat
cld
pop
mov
pop
or
outsb
stos
lock
jmp
hlt
pop
add
push
in
cmpsb
xchg
and
xlat
jo
stos
lret
sar
insl
add
loop
cmp
stc
cwtl
enter
clc
dec
mov
ffree
pop
out
jne
lcall
movsb
pop
mov
sbb
ds
nop
pop
test
push
add
pushw
push
push
pop
mov
inc
shll
je
xchg
addr16
daa
cltd
out
and
xor
xchg
push
cmp
fs
pusha
inc
xorb
xor
lock
cmpsb
mov
dec
or
fcompl
mov
push
inc
mov
sarl
sbb
or
inc
scas
repz
push
lcall
gs
xor
mov
mov
pop
out
jo
mov
inc
mov
hlt
fldcw
mov
mov
cmp
aam
nop
ret
adc
lcall
xorb
js
repnz
popa
into
je
lds
in
mov
inc
je
outsl
sbb
lds
iret
mov
ror
mov
mov
test
testl
xor
jo
pop
or
ds
sbb
stos
cmp
sbb
inc
mov
das
cmp
mov
repz
scas
mov
and
out
and
insb
fsubr
imulb
iret
inc
loope
xor
lret
stc
ret
cli
xchg
cmp
fcmovne
aas
dec
cmpsb
sbb
jbe
jmpw
arpl
cmp
xchg
mov
sti
imul
push
sub
mov
mov
sbb
inc
pop
les
movsl
pop
fnstsw
jmp
dec
mov
add
je
cmpsb
inc
xchg
stc
mov
pop
inc
fs
push
test
outsb
sbbb
dec
popf
andl
jno
int
insl
or
cmp
push
fiaddl
inc
out
sbb
sbb
fistpl
jmp
cmp
dec
xor
stc
mov
xor
push
sub
roll
shl
mov
and
push
icebp
insl
es
push
test
nop
cld
aas
jae
and
jge
lods
adc
decl
push
sub
ret
ret
negl
cld
lahf
sub
mov
lret
sbb
sbb
adc
xor
ss
jge,pt
imul
mov
rcr
cs
pop
push
and
xchg
movsl
les
xchg
rclb
das
lock
sbb
mov
jns
imul
ret
stc
pop
inc
ljmp
movsl
add
jecxz
add
arpl
je
push
lret
lods
in
or
sti
sbb
sbb
loopne
jne
lods
pop
pop
lds
imul
sub
cmp
loope
orl
mov
pop
shll
adc
push
mov
sti
movsb
xor
xchg
sub
mov
lods
hlt
pop
add
mov
or
or
jmp
xchg
push
sub
mov
fs
fiaddl
push
adc
out
push
lahf
or
push
mov
and
fiadds
js
push
outsl
mov
xchg
xchg
xchg
int3
pushf
scas
sahf
jbe
div
out
sub
mov
and
sbb
arpl
imul
test
mov
mov
xor
in
scas
sub
xchg
loopne
daa
mov
popf
xchg
int3
mov
fadds
int3
test
adc
push
xchg
sub
mov
dec
outsb
pop
leave
pop
jne
dec
insl
xchg
pop
pop
jmp
jbe
dec
sub
xor
inc
cltd
sbb
mov
and
cmp
sbb
nop
lahf
mov
mov
and
jge
ret
fildl
call
xchg
dec
fs
push
and
push
jno
ret
aad
das
xchg
rcll
insb
lret
cmpl
stos
icebp
pop
sbb
data16
ljmp
inc
decb
xchg
or
lods
lret
sarl
adc
mov
mov
sub
adc
mov
jp
cmp
call
pop
aas
insb
sbb
inc
test
outsb
das
imul
pop
dec
sub
aas
insb
add
fyl2xp1
mov
xor
cs
enter
sub
sbb
or
mov
mov
mulb
cmp
shll
fisubrs
mov
ret
or
sbb
mov
mov
push
mov
pop
or
and
into
sub
fmuls
mov
push
test
pop
xchg
imul
dec
xchg
fnstcw
call
mov
sbb
push
mov
out
test
mov
lret
pop
fnstcw
pop
lahf
add
cmpsl
mov
mov
lcall
fwait
sub
jp
je
pop
in
rcrl
fwait
push
add
mov
cld
mov
add
pop
pushf
adc
cltd
adc
mov
and
jp
les
ss
add
xchg
xchg
mov
fidivs
ljmp
repnz
xchg
movsb
pop
or
bound
pop
dec
pop
push
daa
lods
fisttpl
insb
and
loop
xor
jg
adc
push
mov
inc
outsb
jns
shll
sub
pop
pop
pop
xor
inc
dec
lahf
mov
arpl
sbb
lods
cmpsb
xor
xor
inc
aad
mov
xchg
or
jle
fildl
jle
cmp
int3
inc
xor
test
sbb
gs
xchg
movsl
and
sbb
jle
outsl
mov
stc
cmpsb
lea
add
aas
cmp
cwtl
jg
mov
jne
jb
sub
xchg
out
xor
pop
mov
pop
sahf
outsb
push
lock
ljmp
cmp
outsl
push
repz
test
das
and
adc
jbe
aas
nop
push
lahf
mov
xchg
outsl
fisubl
cwtl
xor
mov
mov
inc
mov
push
das
pop
cltd
pop
jbe
xor
sbb
sub
out
lret
pop
push
out
ret
daa
sahf
sahf
and
imul
js
scas
movsb
enter
fmul
or
testl
jb
lret
arpl
arpl
jecxz
ljmp
adc
aas
inc
sbb
popf
sub
inc
and
clc
mov
repnz
ds
jne
sahf
movsb
mov
cmp
mov
inc
jno
insl
jecxz
insl
out
mov
dec
out
shlb
movsb
dec
jecxz
test
out
inc
push
jmp
pop
dec
jp
mov
dec
dec
xchg
lock
mov
leave
and
sti
sbb
gs
aad
push
sub
loope
xchg
push
xchg
mov
sbb
imul
cwtl
aaa
adc
sub
bound
inc
call
inc
out
jl
push
sbb
jb
mov
scas
inc
inc
jo
adc
push
xor
and
add
adcl
adc
mov
push
xchg
xchg
xchg
addr16
mov
xchg
add
push
add
pop
enter
ss
push
fs
mov
outsb
inc
mov
dec
jae
xor
test
mov
addb
hlt
inc
fwait
outsl
add
hlt
test
adc
insl
xchg
sub
leave
add
imul
dec
daa
mov
insl
ds
or
out
lahf
test
push
jo
and
cld
insl
fidivrs
cli
and
mov
push
mov
scas
mul
sbb
bound
nop
and
jns
add
cli
mov
and
push
popf
fsts
movsb
pushf
out
insb
shl
inc
andb
insb
push
repnz
into
xchg
mov
scas
aaa
inc
xlat
dec
dec
jecxz,pt
or
push
mov
vmovdqu8
push
test
mov
push
int
ja
sub
mov
mulb
dec
shl
lahf
fnstenv
pushf
pop
mov
and
int3
repz
add
dec
pop
mov
or
mov
in
pop
xorl
xchg
mov
shlb
popf
mov
inc
sbb
pop
movsl
dec
inc
inc
call
nop
arpl
scas
leave
jmp
lds
xor
mov
ja
adc
arpl
lret
jo
dec
ss
mov
mov
rcrb
xchg
sbb
pop
ljmp
push
cmp
jmp
mov
or
std
inc
mov
or
je
hlt
movsl
mov
nop
stc
mov
cmp
adc
sarl
xor
adc
test
or
jae
sti
call
pop
cmc
pop
jle
adc
add
and
imul
cmp
fcompl
xchg
aam
push
insl
sub
hlt
les
mov
pop
test
xor
mov
sti
dec
fdivr
jecxz
pushf
gs
addr16
lock
shlb
mov
aas
adc
sbb
mov
mov
mov
test
pop
dec
dec
cmp
lret
xlat
cwtl
xchg
mov
jae
jg
lret
fildll
lahf
mov
push
sub
repz
xchg
push
mov
fstpl
push
or
jne
adc
test
mov
and
cmc
sbb
fs
mov
movsb
sub
push
shlb
rol
push
in
bnd
pop
sub
sbb
jno
addl
inc
ja
adc
sub
jecxz
shlb
cmpsl
pop
mov
push
inc
mov
bound
shrl
das
mov
in
fiadds
repz
cmp
std
jg
inc
dec
mov
insl
stos
mov
in
aaa
lret
mov
daa
je
xor
push
add
fldcw
idivl
push
pop
out
into
pop
push
fcomps
push
adc
cld
xor
out
push
cmp
jp
insl
int3
inc
inc
inc
outsb
mov
int
jle
sub
jg
sbb
jge
cmc
adc
dec
pusha
adc
aad
cmp
int3
and
sub
js
mov
xchg
sahf
and
cs
aam
xor
repz
into
cwtl
popf
xlat
rclb
insl
and
jo
inc
or
mov
rcrb
out
push
dec
movsl
sub
out
cmp
inc
xor
adc
dec
stc
lea
pushf
add
push
mov
adc
push
fsubrs
test
xor
pusha
leave
lret
into
pop
mov
out
xchg
aas
cli
cmp
mov
mov
mov
fdivrp
jge
push
jnp
mov
mov
dec
aaa
or
ljmp
mov
js
and
shrb
fcmovnbe
and
repz
arpl
sbb
mov
stc
xchg
hlt
cmpsl
in
pop
push
push
pop
jle
xorl
into
adc
dec
cmp
and
xchg
xchg
sti
mov
sbb
pop
xchg
inc
mov
hlt
push
iret
loope
jae
shll
mov
pop
and
jp
in
sbb
sti
fstl
aas
rorl
pop
test
mov
arpl
mov
dec
and
je
push
ret
insb
sub
xchg
fsubl
mov
or
xchg
mov
sbb
data16
mov
roll
out
loopne
hlt
je
xchg
int3
mov
jg
lods
dec
jne
or
mov
fwait
and
jnp
inc
orl
rcl
and
add
test
pop
repz
mov
lods
cmp
outsl
leave
addr16
ja
push
pop
dec
mov
or
adc
out
ret
xchg
xchg
push
enter
adc
test
loop
dec
lahf
rorl
imul
mov
mov
jne
xor
lock
into
mov
mov
push
mov
sarl
and
fisttps
stc
data16
lock
mov
iret
out
fiadds
xor
test
insl
pop
prefetch
cmc
xchg
add
pop
cli
xchg
and
iret
lds
cli
push
sbb
sahf
lds
insl
outsl
aad
mov
scas
push
mov
adcb
sub
loope
mov
cmc
inc
push
mov
and
sbb
aas
jmp
fcomps
pop
add
push
push
inc
jnp
and
cs
push
in
insb
push
adc
test
fcomp
imull
es
jo
dec
sub
stos
fadd
cs
inc
es
or
test
push
dec
pop
in
daa
divb
jno
popf
mov
lock
xor
lahf
repnz
or
stos
cld
lret
loope
pusha
repz
mov
pusha
add
lods
sub
icebp
xchg
jp
in
pop
dec
jge
xchg
add
das
lret
ljmp
add
add
stos
repnz
repz
mov
and
cmpsb
call
jbe
push
mov
das
push
imul
outsl
jns
or
adc
or
out
in
pop
aas
pop
outsb
sub
mov
add
nop
xchg
test
cli
scas
push
loope
in
push
mov
and
add
add
push
loope
lods
fs
fisttpl
movsb
adc
in
xchg
punpcklbw
cmp
lahf
jno
push
stc
cli
and
pop
pop
sbb
jb
aas
sub
stos
mov
cmp
and
icebp
cmpl
mov
sub
lret
mov
xchg
dec
in
xchg
jge
pop
mov
inc
dec
movsb
std
sbb
adc
and
jle
out
inc
mov
insl
ret
mov
hlt
xor
test
mov
sbb
outsb
xor
test
jns
or
and
jns
rcrb
fsub
data16
push
mov
adc
lret
int3
jb
sbb
stos
jge
jne
dec
call
rorb
orb
or
in
or
inc
cmpsl
mov
cmovp
call
mov
pop
movsb
sub
test
leave
in
inc
subb
aad
lods
inc
rol
cmpsb
and
jbe
xchg
sbbl
imul
hlt
int3
sbbl
and
jbe
inc
cmp
xor
cmp
adc
sub
aam
mov
xor
or
add
rcll
mov
popf
inc
jecxz
mov
and
jo
dec
adc
popa
fldt
push
enter
inc
sub
xchg
dec
aam
leave
jno
imul
or
and
idivb
cmpsl
in
lret
pop
mov
mov
cwtl
dec
cmp
imulb
mov
pop
pop
fsub
in
scas
repz
ds
cmpsl
call
sub
outsl
push
jmp
adc
icebp
dec
pop
insb
add
stos
xchg
fstpt
sub
jl
mov
and
in
lods
cmp
sub
mov
rcrl
shlb
or
inc
outsl
inc
inc
movsl
or
or
movsl
mov
nop
jmp
popf
int3
cmp
adc
mov
gs
cmp
out
mov
jl
fcoms
dec
shrb
cmpsl
mov
push
dec
cmpsl
xor
fstpt
sub
mov
cmp
lock
fsubrl
lret
cwtl
test
push
lret
sub
cmp
xchg
dec
popf
xor
sub
idivl
stos
fistpl
cmp
add
xchg
lret
add
je
lods
or
scas
mov
adc
enter
stos
outsl
xor
sub
push
rorl
push
clc
scas
xchg
xor
adc
mov
inc
mov
or
fbld
adc
inc
test
push
sbb
pop
jg
clc
inc
sahf
loop
xchg
js
inc
mov
test
rolb
lock
push
sbb
call
repnz
inc
xor
mov
in
sub
loopne
clc
pop
xchg
push
sbb
push
mov
pop
stos
pop
in
add
or
inc
test
aad
and
mov
xor
sbb
and
or
aaa
or
out
inc
cmp
shll
inc
add
pop
daa
dec
testl
cmp
mov
int3
aad
jbe
pop
scas
sbb
sub
hlt
and
sbb
mov
aas
xchg
sbb
mov
repnz
push
das
testb
sub
loop
sbb
xchg
xchg
enter
stos
xchg
lahf
mov
es
push
ret
add
andb
scas
rorl
cmp
inc
push
xchg
movsl
cmp
pop
dec
scas
mov
aad
pop
or
inc
ljmp
xor
xchg
pop
xor
mov
xchg
xchg
pop
into
pop
lods
lcall
jl
arpl
mov
arpl
ret
cmpsb
iret
jno
cmpsl
push
sub
xlat
sbb
jbe
mov
test
or
sbb
loopne
xor
dec
cltd
dec
out
sub
adc
jge
mov
bound
inc
hlt
outsb
pop
lret
gs
cs
daa
push
add
test
jnp
scas
ret
fsubrs
es
fsubr
mov
lods
xor
dec
mov
adc
jmp
mov
inc
imul
cmp
mov
push
jp
add
and
out
push
rcll
sbb
jl
fwait
pop
loope
aaa
add
and
pop
inc
xor
adcb
xor
pop
mov
sub
pop
aas
inc
ret
lds
add
ret
xor
add
aam
xchg
pushf
pop
push
sbb
sbb
mov
or
aas
sub
loopne
sub
ja
lahf
xchg
jl
cmp
ljmp
aam
outsb
inc
or
jo
test
shll
push
es
in
jbe
cmc
stc
aas
xor
shrb
sub
movsl
dec
and
jge
dec
mov
movb
shl
movsb
out
cs
and
jl
cld
pop
cmp
call
mov
sbb
cmp
mov
cmp
movsl
fldenv
mov
jbe
ljmp
inc
mov
push
addb
and
sub
push
cmp
fdivl
push
stc
nop
cmp
aam
jno
test
jnp
loopne
addr16
sub
insb
mov
js
sbb
pusha
fcmovbe
push
or
adc
dec
xchg
bound
fs
into
aas
pop
jno
das
movsl
ds
mov
loopne
adc
add
sbb
xchg
push
out
sub
xchg
addl
scas
jne
and
les
fsubp
enter
adc
pusha
mov
adcl
mov
xchg
xor
scas
pop
mov
shrb
cmp
sub
stc
shll
ja
mov
pushf
dec
pop
push
sub
imul
inc
insb
xchg
jecxz
les
add
add
xchg
lods
xor
push
mov
fwait
jmp
pop
add
filds
mov
bnd
cwtl
mov
jae
stc
mov
std
and
insl
xor
or
push
xchg
jno
aam
dec
push
shr
or
aad
in
int3
jl
sub
xor
jecxz
rorl
js
dec
int3
sbb
fadds
mov
testl
pop
cmpsb
inc
mov
sub
popa
and
pop
adc
movsl
jecxz
addr16
outsb
cmp
lods
ds
cmpsb
add
loope
stos
mov
aad
jge
in
lret
stos
iret
jns
mov
cmpsb
push
jnp
xorb
flds
outsb
lahf
mov
cmp
ficompl
xor
in
mov
scas
aas
mov
xchg
test
ret
xorb
adc
mov
not
cmpsl
aas
stos
std
pop
iret
lret
fcomip
stc
xlat
dec
jno
mov
das
mov
pop
adc
pop
fwait
mulb
push
daa
cmp
cltd
mov
sbbb
push
cmp
enter
ja
and
nop
dec
pusha
jmp
lcall
mov
imul
mov
out
ss
add
cmpsb
insb
push
test
dec
stc
shll
insl
adc
mov
or
mov
and
int
dec
mov
stos
push
mov
xor
adcl
or
repnz
cs
loop
adc
inc
or
inc
subl
sub
mov
out
xchg
inc
adc
sbbl
xor
das
jbe
dec
cmc
pop
xchg
sarb
xor
daa
or
xor
shlb
ljmp
das
push
lcall
pop
xor
cs
cmpsl
cmpl
sbb
cs
or
xchg
gs
ljmp
fidivs
inc
pushf
popa
daa
pop
mov
bound
xor
out
xchg
ret
sub
outsb
test
stos
sahf
sbb
es
adcb
test
jmp
out
add
lret
lods
add
scas
shlb
in
enter
or
add
sub
jl
ja
rorl
jecxz
js
lds
and
lret
fistl
daa
mov
push
repz
and
xor
dec
sub
jmp
add
push
mov
fbstp
xor
inc
cs
std
stc
stc
xchg
mov
sub
fisubrs
mov
nop
xchg
pop
mov
in
xor
mov
scas
push
xor
push
adc
ljmp
inc
scas
mov
jg
push
mov
ffree
cwtl
mov
imul
jg
icebp
mov
xchg
jl
faddl
mov
dec
xchg
push
mov
cs
push
imul
nop
or
sub
pop
cmp
fwait
roll
pop
insb
lds
popf
push
das
ss
ds
jg
shll
nop
or
cs
enter
lahf
sbb
mov
es
in
cli
dec
cmpsl
mov
xor
and
xchg
sbb
sbb
jbe
pop
sub
push
mov
into
or
mov
mov
xchg
add
into
cmp
repnz
lahf
je
jns
daa
xlat
stos
sbb
sbb
sbb
enter
fstp
ljmp
shrb
jge
dec
dec
in
shl
stos
in
fldlg2
int3
leave
aad
jge
mov
mov
aam
mov
push
inc
pop
adcl
scas
std
fwait
sbb
lahf
insb
addl
and
xchg
push
inc
rcll
push
out
icebp
aas
xor
adc
xchg
daa
push
add
push
xrelease
movsb
out
xor
ss
shll
icebp
pop
stc
xchg
xlat
pop
pop
or
rclb
gs
mov
cmp
push
lock
cmp
xchg
cli
je
fwait
push
je
loopne
mov
and
std
mov
cmp
push
or
loop
rcrl
lcall
mov
in
xchg
cmp
mov
jle
cli
push
add
inc
cmp
stos
scas
movsb
bound
jl,pt
imull
pop
xor
andb
imul
fiaddl
push
or
mov
je
or
cld
out
push
outsb
xchg
mov
jbe
dec
jmp
cli
inc
jo
shrl
stos
or
jp
aad
dec
mov
cmpsb
mov
stos
cmp
ficompl
fsubr
in
or
out
or
lret
mov
push
mov
in
push
aaa
push
dec
inc
push
roll
mov
pop
add
jge
scas
dec
outsl
push
ljmp
cmp
lods
out
bound
adc
shrb
push
mov
mov
fistps
inc
les
xorl
sbb
sbb
out
dec
add
cli
xor
push
aaa
icebp
or
sub
jb
stc
push
js
push
rcl
xor
ffreep
repnz
stc
mov
xchg
dec
stc
aad
lret
xor
or
mov
sbbb
jg
or
pop
pop
cmc
jmp
test
stc
dec
dec
in
xor
inc
push
leave
jns
or
jmp
cmp
call
xchg
xor
mov
mov
cmp
insl
test
jno
cmc
sub
leave
push
jb
mov
repz
pop
les
xchg
loope
inc
mov
mov
cs
lods
nop
lret
iret
or
cmp
imul
rcrb
popa
cld
pop
push
mov
insl
sub
add
lret
sub
push
fdivs
mov
lock
push
fsts
data16
xchg
xor
inc
fstp
out
xchg
inc
popf
dec
or
stos
mov
cltd
dec
in
mov
mov
insb
ljmp
sbb
fnstenv
call
test
xor
das
and
addb
and
sub
sbbb
adc
sbb
pop
div
mov
and
lods
xor
dec
and
jle
jno
xorb
add
repnz
pop
sub
cmp
or
and
mov
pop
push
xchg
lods
cwtl
mov
test
adc
add
xor
fnsave
cmp
aad
aas
jne
cmp
jecxz
mov
stos
pop
jmp
clc
pop
mov
sti
mov
addb
pop
jmp
xchg
add
or
mov
inc
iret
mov
cmpsb
out
popf
pop
sti
jge
fwait
gs
gs
cmp
out
stc
out
mov
andl
push
orb
sub
mov
cwtl
jno
sti
out
fmuls
pushf
mov
scas
sub
pop
andb
xlat
mov
dec
inc
push
jg
mov
repz
out
pop
mov
xchg
push
into
loope
dec
lahf
and
icebp
pop
loopne
insl
lods
sbb
mov
pop
mov
je
in
xchg
repz
out
inc
loope
fisubrs
jne
dec
fadd
mov
ds
jo
push
in
inc
jge
push
gs
push
mov
cwtl
mov
adcb
mov
pop
lods
lods
mov
sub
or
int3
test
sbb
pusha
sti
xlat
pop
jmp
inc
popa
out
sbb
add
aas
insb
mov
fiadds
lret
mov
xchg
pop
rcrl
cmp
gs
fimuls
ja
cltd
es
inc
mov
sbb
push
pop
gs
sub
les
push
adc
in
daa
add
sub
insb
dec
shll
lods
dec
xchg
push
add
out
rcrb
adc
imul
adc
mov
test
sbb
out
mov
ds
sbb
testl
jp
xchg
je
mov
adc
xlat
and
movsl
cmpsb
mov
cld
mov
adc
jb
xchg
jmp
dec
mov
xchg
icebp
mov
sbb
pop
and
sbb
pop
in
cmp
jg
mov
and
shr
addr16
lret
push
sub
push
adc
ret
mov
jb
jecxz
jnp
sbb
or
mov
std
xor
xchg
jp
outsl
mov
xlat
das
test
mov
inc
sbb
xchg
fwait
outsl
add
xchg
add
fdivl
xor
cmp
xchg
adc
stos
pop
mov
adc
push
ret
std
or
in
mov
adc
dec
dec
jmp
lret
and
add
push
out
hlt
idivl
stos
mov
sub
or
shll
dec
lods
call
insl
pusha
mov
pop
push
lret
xlat
ret
jecxz
lea
fistps
leave
lcall
fcmovnbe
and
pusha
pop
clc
pop
xchg
pusha
pusha
dec
mov
cmp
push
loope
xor
pop
lret
rorb
xchg
dec
scas
pop
mov
mov
hlt
fdivs
sar
jno
mulb
xchg
lods
adc
je
push
popf
subb
enter
in
sbb
pop
les
inc
clc
int
nop
lret
pop
loopne
sub
xchg
cmp
rcll
add
aaa
repz
add
lds
inc
pop
ror
enter
xor
fisubs
adc
mov
into
rcr
jmp
mov
cs
jmp
inc
bound
xor
outsl
imul
leave
shl
mov
inc
sbb
shlb
es
add
sub
mov
and
sbbb
push
test
jae
jle
mov
stos
pushf
mov
cmovbe
pop
inc
or
f2xm1
out
cwtl
imul
aaa
int
inc
into
push
test
push
inc
arpl
aas
or
rol
fistl
sub
rcll
shll
jno
mov
jecxz
inc
fs
daa
sub
pop
xchg
jge
out
push
xor
sub
lea
scas
mov
data16
fdivs
xor
xor
push
jecxz
and
adc
mov
mov
mov
push
in
jl
cld
jo
mov
cmpsb
sub
dec
icebp
cmp
orl
mov
mov
dec
fadds
push
inc
aas
jnp
outsb
cmpsl
test
dec
xchg
xor
mov
jno
insb
nop
gs
insb
or
push
pusha
cmpsb
jmp
clc
xor
mov
lret
add
sbb
push
jae
je
adc
or
enter
xor
push
sub
mov
in
adc
pop
jmp
adc
test
outsb
sbb
or
add
jg
mov
mov
in
dec
mov
hlt
btc
dec
js
mov
sti
loop
out
push
addr16
sub
mov
out
lds
imul
lock
leave
sbb
les
sbb
xchg
xor
push
xor
or
mov
jb
fbld
cld
jge
pusha
sar
sbb
cmp
dec
push
in
imul
adc
loope
aam
mov
mov
arpl
bound
les
xchg
lea
in
movl
bound
leave
push
mov
add
sbbl
mov
leave
mov
mov
popf
sbb
cmp
test
ret
and
je
cld
pop
mov
xchg
mov
imulb
popa
aas
mov
xchg
jne
test
inc
test
mov
pusha
stc
xchg
sub
fs
roll
sar
jne
insl
leave
lcall
jns
pop
cmpsl
jecxz
cmpsl
push
imul
js
xchg
dec
lea
xchg
out
lods
mov
sarb
mov
addr16
push
mov
jbe
cmp
push
jo
pop
and
idivb
push
or
in
inc
out
ret
insl
mov
enter
and
arpl
sbb
and
cmp
fnstcw
adc
shlb
das
xor
dec
addr16
mov
cmpsb
dec
xchg
adc
faddl
and
mul
lret
cmc
pop
fwait
cltd
ja
xchg
movsb
shrb
jb
mov
bound
sarl
xchg
mov
shlb
add
es
movsb
fld
dec
cmpsb
inc
outsl
mov
std
lods
stos
loope
fcoml
mov
les
jae
unpcklps
divb
jmp
push
in
sahf
adc
fidivl
cmc
out
lock
into
cmp
fdivrs
mov
dec
jle
sub
push
mov
push
in
dec
mov
js
sub
and
fcmovnb
sysexit
addr16
leave
fdivs
add
push
mov
jno
lds
lods
les
push
adc
iret
push
inc
jg
push
dec
and
hlt
xchg
lods
jg
fwait
mov
stc
sbb
hlt
or
pop
pop
cld
fsubrl
mov
sub
cwtl
inc
jae
mov
inc
and
rclb
dec
stc
pop
into
subl
dec
mov
lret
leave
cmpsb
jo
scas
jecxz
jl
cmp
mov
mov
mov
push
out
jb
out
mov
mov
outsl
sub
push
cmp
test
xchg
adc
dec
dec
inc
sub
push
inc
popl
lahf
fs
ret
push
stos
cmp
sahf
loop
aam
jmp
sbb
lds
jmp
ss
sub
jns
and
sarb
lock
jbe
adc
mov
shll
fcompl
jo
in
aad
lret
and
test
jb
pop
lea
dec
pop
mov
int
lahf
outsl
dec
jns
mov
mov
jge
jg
or
push
sbb
pop
xorl
push
adc
insl
cltd
push
into
sub
fildll
mov
adc
aaa
sbb
jbe
cmc
ror
stc
xor
adc
adc
xchg
mov
inc
xchg
imul
das
lcall
pop
dec
cmp
outsl
cmp
lret
fists
mov
das
add
movaps
mov
mov
clc
mov
and
repz
in
ficoml
dec
std
inc
jmp
scas
cmp
jecxz
jo
leave
lock
cmpsb
stos
cli
jb
mov
inc
addr16
aaa
aaa
or
loope
mov
mov
and
bound
sti
loope
test
fcompl
movsb
cmp
lods
pushw
mov
cmp
mov
push
xor
mov
jp
mov
les
lock
inc
pop
mov
pop
addl
adc
mov
xchg
push
pusha
and
xchg
add
sbb
cld
ficoml
fs
loop
sub
xchg
addl
jg
sub
jo
sub
outsb
inc
sbb
ds
fsubrl
mov
test
and
pop
cmpsb
outsb
scas
fldt
ficoml
js
adc
fwait
pop
mov
jae
xchg
inc
jbe
inc
outsl
mov
xchg
movsb
inc
pop
mov
loope
out
sub
mov
out
stos
sub
xchg
ljmp
ret
push
jbe
imul
and
lods
inc
mov
pop
loopne
enter
outsl
mov
jns
mov
or
lret
cwtl
fiadds
jl
add
fyl2xp1
inc
and
lret
pop
adcb
pop
vpand
andl
xor
addr16
or
mov
xchg
cmpsb
xchg
mov
xlat
ja
pop
jp
loope
gs
les
xchg
and
sbb
sbb
sbb
add
sti
sbb
lds
mov
fst
sbb
mov
loopne
fstpt
mov
xchg
or
adc
hlt
in
insl
adc
mul
xchg
fnstsw
cmp
push
jg
icebp
jle
sub
push
aad
sub
dec
mov
xchg
outsb
clc
push
in
push
ds
sbb
clc
mov
sub
pop
adc
pusha
mov
jl
jbe
stos
sbb
repnz
arpl
test
mov
neg
je
outsb
adcl
movsb
andb
cmp
rcrb
cmp
enter
sbb
jo
fisttpl
lods
ljmp
dec
fdiv
mov
cwtl
lcall
fs
adc
mov
out
test
das
rcrb
insl
in
mov
notb
xor
jbe
xor
mov
js
outsb
sub
cs
add
push
fucompp
mov
mov
fsubs
pusha
inc
lea
enter
cld
test
push
aas
push
jl
jp
dec
call
and
push
xor
neg
out
push
inc
test
cmc
cmc
iret
sahf
les
and
cmp
inc
in
adc
push
pop
stos
jge
jae
rorb
scas
xchg
pushf
xchg
mov
add
mov
out
add
in
cld
in
add
inc
insb
bound
push
sbb
mov
aas
popa
jmp
leave
insl
dec
out
and
in
in
push
orl
dec
jo
dec
out
test
xor
pop
fs
js
pop
push
and
push
or
cmpb
fs
pop
movsb
push
or
xor
imull
scas
cs
cmc
arpl
pop
xchg
pop
jg
push
pop
xchg
mov
push
fcmovnb
ss
mov
out
ljmp
shll
lds
mov
mov
cmpsl
icebp
xor
inc
pop
leave
mov
sbb
aam
mov
ror
out
cwtl
js
mov
iret
cmc
arpl
jle
adc
xor
imul
xor
pop
and
aam
inc
mov
cld
lods
push
push
lahf
shrl
xchg
jns
mov
push
jecxz
pop
lret
ror
stos
cmp
dec
fisubl
iret
inc
dec
setnp
push
mov
mov
push
orl
cli
xchg
mov
inc
push
sbb
hlt
cmp
cmpsw
pop
jb
xchg
and
out
scas
dec
sarb
popf
jo
hlt
daa
push
in
jbe
stos
jecxz
pop
loop
fsts
pop
js
movsb
inc
jl
fdivrl
shr
xor
icebp
orl
pop
jnp
push
cmc
ret
inc
fwait
inc
outsl
out
jmp
movsb
arpl
push
scas
mov
js
insl
push
popa
fs
mov
cmovp
jg
xchg
scas
in
sbb
dec
adc
cmp
loope
repz
or
sbb
pop
lods
jg
js
jle
mov
xor
movsb
sub
cwtl
rcrl
sub
xor
ljmp
insl
mov
fistpl
adc
jbe
ret
mov
cltd
pmuludq
mov
sub
mov
test
cmp
xchg
dec
pop
jmp
movsl
mov
stos
sahf
into
add
shll
jne
pop
insb
ja
jl
out
mov
fwait
out
out
lods
adc
add
xor
push
and
jae
imul
loope
jl
jno
mov
popa
adc
mov
sarb
rcl
mov
pop
sbb
xchg
cli
rorl
mov
int
ja
aas
xlat
xchg
pushf
sub
lods
int3
in
and
mov
fs
hlt
sbb
repz
mov
divl
mov
sarb
inc
push
mov
sub
es
cmp
xchg
jo
rclb
mov
fs
mov
ret
xchg
and
dec
cltd
hlt
lds
sub
popa
jle
mov
jns
stos
xchg
add
inc
pop
push
insb
sbb
sbbb
imul
imul
in
jo
cmp
mov
jns
pmaddwd
xchg
cmpsl
test
je
jb
fnsave
in
rep
push
mov
push
fnstenv
into
xchg
cmp
stc
jge
inc
mov
push
insl
movsl
aad
push
xorl
loopne
imul
aam
push
jmp
xchg
cmp
icebp
scas
sbb
lret
push
sbb
xchg
adc
lea
inc
inc
cmovp
dec
cmp
cmc
mov
jo
cs
pop
mov
xchg
mov
jmp
clc
mov
fmull
or
cmpsl
cmpsl
push
out
sub
int
add
sti
mov
mov
aaa
xchg
popf
fidivrl
xchg
xor
out
ss
imul
xor
sbb
in
ja
xchg
sub
or
shlb
push
inc
lahf
jne
xchg
rcrl
sub
xlat
jg
jecxz
dec
cwtl
jns
sbb
pushf
mov
arpl
pop
and
xor
cld
fistps
fs
mov
decl
jle
gs
dec
jle
fdivs
or
negb
rorl
imul
ffreep
jg
jg
push
mov
out
cld
xchg
mov
fsubrl
jae
adcb
mov
in
lods
push
jle
mov
out
movaps
jno
inc
cmp
sti
cli
aad
ret
mov
cmp
leave
lock
ja
push
lcall
test
inc
pop
ja
xchg
jne
add
insl
jbe
pop
mov
mov
ja
movsb
add
inc
adc
sbb
pop
mov
es
pushf
data16
out
cmc
mov
push
jo
std
dec
or
std
call
sbb
and
mov
mov
dec
sbb
add
mov
add
outsb
sub
mov
imull
xor
fldl
mov
sti
mov
icebp
mov
sbb
cld
movsb
ret
xchg
sbb
xor
cwtl
mov
mov
cld
aaa
xchg
xorl
popa
add
add
dec
mov
cmpsb
or
scas
sbb
xchg
enter
push
and
xor
dec
push
dec
mov
push
cwtl
or
sbb
out
test
lahf
cmp
test
adc
lds
test
push
mov
pop
add
lahf
aam
cld
subb
cmp
in
cmc
iret
lds
inc
cmp
aas
stc
add
out
lods
jg
sub
or
test
mov
dec
movsb
test
jns
dec
or
push
pushl
mov
and
fucomi
int
mov
sub
stos
sub
and
arpl
outsb
in
insb
leave
les
jns
orl
jns
inc
xor
in
aaa
mov
js
insl
jo
fisubs
mov
inc
int
call
adc
ja
stos
push
lret
dec
int
cmp
mov
shr
lcall
jns
ret
cmp
arpl
push
mov
sub
inc
push
sbb
popf
pop
push
neg
mov
daa
pop
ljmp
sbb
in
das
in
pop
mov
int3
leave
jg
imul
jmp
push
push
fildll
sbb
cmp
scas
xchg
in
or
inc
push
push
icebp
xchg
sahf
adc
std
mov
inc
push
mov
fs
ds
enter
sub
jg
dec
mov
adc
cli
mov
sub
xor
cs
arpl
fs
dec
scas
mov
cmpsl
outsb
popf
cs
pop
call
xor
and
xlat
mov
adc
push
dec
sbb
xor
imul
aas
or
adc
out
jmp
icebp
add
fidivrl
std
sahf
cwtl
jecxz
jl
fists
clc
mov
insb
and
pushf
pop
lods
mov
sbb
stc
adc
xor
xor
or
and
test
fwait
mov
mov
in
adc
or
js
stos
popf
pop
nop
aas
ret
or
movsl
mov
movsb
dec
shll
fidivl
movsb
ret
aaa
nop
pop
push
add
mov
fsubs
je
fimuls
jecxz
adc
insb
stc
arpl
lret
mov
clc
rolb
ss
push
fwait
mov
rcrl
je
fsubrl
and
test
mov
sti
xchg
bound
mov
or
int3
jne
imul
sbbb
pop
sub
dec
imul
scas
jge
jecxz
insb
pop
xchg
dec
fs
rolb
flds
dec
mov
push
imul
jl
test
cmp
or
add
xchg
test
inc
jns
pop
mov
jo
cmp
pop
inc
sbb
test
dec
ss
xor
lahf
sbb
mov
insl
inc
add
push
and
jmp
push
rolb
cmp
aas
lods
xchg
mov
or
outsl
push
in
dec
out
pusha
jnp
push
mov
mov
xor
sbb
push
sbb
push
dec
cmpb
mov
pop
addr16
insl
jae
test
push
sahf
in
xchg
lcall
sub
cwtl
and
test
add
xchg
cmp
xchg
lret
pop
xchg
fs
dec
xchg
out
in
gs
out
push
xor
scas
mov
cmp
push
sub
jbe
or
repnz
mov
mov
cwtl
jns
lds
out
not
in
and
fnstcw
popf
dec
roll
push
insl
push
stc
mov
inc
icebp
mov
add
aad
add
test
cld
lds
mov
or
jb
jmp
cmpsl
add
sub
daa
pop
push
mov
inc
rcl
sub
ds
fimuls
pop
dec
xor
xabort
dec
jmp
clc
aas
mov
and
fisubs
mov
dec
cmp
inc
cmp
sbb
mov
decl
mov
fscale
rol
cmp
or
and
mov
movsl
lea
test
pop
mov
add
push
xor
mov
or
pop
iret
fcoms
cwtl
insl
mov
stc
mov
push
fidivrl
loope
xor
test
dec
mov
push
faddl
mov
jns
cmpsb
jmp
xchg
out
adc
inc
lcall
je
movsb
das
ret
inc
fstp
jne
xchg
scas
mov
jl
lret
and
in
std
inc
dec
stos
sbb
mov
xchg
icebp
addr16
loop
lahf
out
sbb
div
xor
movsb
dec
xlat
std
mov
fdivrl
or
test
es
mov
inc
sbb
lahf
fnsave
andl
scas
xlat
les
or
jg
ret
ljmp
lret
fiadds
and
js
cmp
jbe
imul
add
lea
sbb
dec
sbb
xchg
mov
push
cwtl
js
adc
mov
dec
adc
or
int
cmpsl
inc
and
sti
fists
repz
imul
dec
call
add
xchg
rcl
adc
or
jecxz
jnp
jmp
fadds
mov
mov
popa
sub
in
aam
ds
add
sub
cmp
outsl
fdivrp
push
test
addr16
jno
sbb
out
lea
stos
sub
xchg
push
xchg
sbb
data16
push
mov
cmp
add
andb
push
fnstenv
push
xchg
daa
mov
xchg
dec
lahf
test
xchg
mov
mov
push
lahf
xchg
stos
ds
xchg
inc
dec
fisubrs
xor
dec
out
jg
es
inc
enter
inc
or
and
pop
xchg
int
cmp
clc
adc
icebp
inc
ds
push
push
pop
and
mov
fiaddl
jmp
loope
pop
cli
nop
out
or
ja
dec
mov
daa
push
icebp
jg
add
stos
xchg
dec
xchg
add
shl
push
jb
xchg
push
push
cmpsb
std
sub
andl
dec
mov
jno
add
fstsw
adc
cmp
jp
arpl
add
xor
arpl
addr16
mov
leave
mov
or
cmp
call
dec
stc
dec
lea
popf
mov
ljmp
out
pushf
jbe
mov
fnstsw
jge
xchg
jae
clc
ss
dec
or
out
gs
inc
push
sub
movsl
dec
mov
or
pop
or
lea
fwait
mov
lcall
xor
divb
sbb
mov
mov
jno
imul
lds
out
std
sbb
mov
dec
xor
fmul
xor
jbe
add
bound
or
inc
cli
lods
bound
std
jecxz
push
fdivrs
ljmp
std
pop
fbld
pop
es
and
fwait
negb
repz
adc
pop
hlt
sbbl
rorb
or
aam
mov
aad
int
sar
xor
shll
jno
xor
imul
xor
pop
xchg
sub
ret
mov
int
xchg
int
paddsb
sbb
jle
sahf
xchg
pop
sub
fwait
les
pop
dec
addb
mov
insl
xchg
cs
repz
shrb
imul
pop
loopne
std
pop
push
test
cltd
fidivrl
mov
jecxz
sti
cmpsb
aaa
xchg
push
bound
pop
sahf
add
adc
imul
lret
insl
iret
mov
xor
xchg
mov
ret
fsubrl
into
xor
andnps
fistps
stos
and
in
pop
xchg
mov
idivl
jmp
cmpsb
gs
rorl
pop
aaa
push
push
fadds
and
or
push
popa
stc
jo
adc
adc
repnz
adc
es
ljmp
insb
cld
fxch
orb
mov
fstpl
cmp
jmp
shll
xor
scas
pop
ds
sbb
pop
lea
mov
xor
das
aam
cld
pushf
lcall
sbb
aam
jp
nop
cld
jo
shr
int3
sbb
frstor
outsb
sbbl
mov
dec
mov
stos
push
fnstcw
mov
andb
out
xor
pop
aaa
repnz
mov
adcb
cli
push
test
fcomps
push
lcall
xlat
mov
push
sbb
adc
imul
mov
ds
sbb
icebp
negb
clc
pop
xlat
mov
fs
mov
in
aam
stc
into
or
repz
jge
enter
jnp
mov
iret
test
adc
leave
movsl
inc
jp
adc
xchg
aad
aad
sahf
pop
push
outsb
pop
popa
ror
jo
cld
push
jp
dec
addb
cmpsl
adc
in
jne
mov
push
out
cmp
ja
mov
stc
fxch
inc
pop
out
mov
pop
jle
and
jle
out
cmc
shrb
cmp
push
out
xor
and
inc
add
sbb
xor
or
or
inc
sub
mov
pop
adc
movsb
sbb
pushf
btr
pop
xor
pop
scas
jbe
scas
inc
and
cmp
jl
mov
ss
mov
out
xchg
push
jno
adc
sbbb
push
fadds
sarl
mov
mov
jbe
insl
and
repnz
cmp
xchg
push
cmpsl
xor
ljmp
shll
add
and
jmp
in
lds
sbb
outsl
cltd
sbb
pop
fsubr
sbb
pop
shll
iret
fidivrs
dec
xchg
mov
or
andl
movsl
inc
js
xor
mov
lcall
js
lods
pop
xchg
push
imul
adc
lret
scas
pop
mov
data16
push
dec
jnp
out
sahf
scas
cmp
lret
xor
addr16
js
adc
inc
mov
sub
enter
outsl
add
jbe
and
jnp
add
ret
push
add
dec
stos
iret
push
push
push
jmp
scas
and
pop
mov
vcvtps2pd
imul
jae
pop
xchg
std
mov
jp
scas
shlb
sahf
pop
dec
sub
xchg
popf
dec
je
jno
adc
movsl
inc
jle
mov
or
les
adc
cmpsl
cmp
inc
mov
fsubr
movsl
sbb
arpl
out
pop
push
lret
lods
es
mov
mov
movsb
pop
ss
orl
pop
inc
mov
or
aad
pop
jbe
mov
movsb
xor
les
inc
and
int
rclb
or
xorb
mov
cmp
out
push
cmp
fwait
pop
insb
enter
int3
lea
xchg
aas
pop
and
jns
jmp
xor
out
int3
lods
mov
outsb
and
std
mov
jns
out
xchg
add
fcoms
imul
mov
or
xor
xorb
leave
inc
adc
aad
mov
cltd
fcoms
adc
jle
inc
push
leave
dec
cmp
das
in
add
mov
out
loopw
or
notl
mov
stc
test
push
push
pushf
ret
pop
pop
cmpsb
xlat
mov
out
and
sub
adc
jae
lock
shl
fdivrl
test
mov
repnz
xchg
outsl
mov
sub
leave
shlb
lret
pop
mov
call
out
or
and
mov
cmp
cmp
fwait
lds
dec
movsb
and
pop
fwait
enter
shll
hlt
jg
int
push
mov
bound
lds
loop
cmp
gs
push
pushl
mov
cmpsb
test
dec
pop
out
jle
ficomps
mov
ret
dec
daa
out
das
cmpsb
fiaddl
pop
cmp
ja
lret
pop
push
movsb
orb
test
fcomip
sub
inc
stos
add
xchg
in
push
fsub
nop
rorl
add
test
mov
sub
add
out
jno
ficompl
imull
mov
mov
push
sbb
mov
int
mov
sbb
lods
scas
shll
out
in
orb
ja
xbegin
cmp
outsb
hlt
pushf
arpl
loope
and
mov
outsl
adc
add
sbb
sbb
bound
insl
jg
into
repz
or
aam
aaa
mov
push
pop
notl
sub
pop
mov
mov
das
in
cmp
pushf
fiaddl
shr
ret
fwait
inc
cmp
push
xchg
mov
xchg
mov
xor
mov
push
outsb
dec
lea
add
push
adc
jnp
test
pop
stos
inc
jns
jb
push
inc
xchg
dec
aaa
lods
loope
jo
dec
jb
ds
xchg
or
les
inc
lods
movl
bound
ja
sub
push
mov
test
jbe
sbb
cld
das
mov
je
mov
mov
sbbl
pop
dec
mov
mov
fdivrs
push
push
aad
pop
sti
and
sar
mov
int
cld
dec
mov
push
push
jae
xchg
xchg
cmp
cmc
sub
pop
int3
mov
hlt
or
mov
test
addr16
lret
orb
dec
fcomps
pop
aas
out
push
or
sbb
xor
lret
es
loop
push
leave
mov
test
pop
out
test
cmp
cmp
scas
outsl
push
repz
in
pusha
mov
dec
pop
cli
cmp
cltd
loop
shl
sbb
xchg
sbb
mov
pop
add
call
xchg
cmp
popf
dec
pop
pop
ficompl
fsubrp
sub
add
loope
jb
and
mov
sbb
cld
daa
dec
or
push
mov
mov
dec
jg
in
mov
pop
mov
mov
lea
rcr
cs
push
clc
popa
andl
aas
push
inc
lcall
sbb
mov
add
xlat
jg
adc
lock
adc
xchg
fists
lahf
mov
pop
repz
loop
add
ja
pop
in
popf
xor
imul
stos
sbb
add
xchg
pop
add
dec
sbb
dec
aas
adc
movsl
jle
mov
fldenv
mov
shll
mov
jb
add
cmpsl
icebp
jg
rcrb
mov
lahf
mov
loope
xchg
aaa
cld
sub
jmp
fptan
cmp
int
mov
mov
call
fs
out
jne
add
repz
daa
mov
fistpl
aam
jae
sbb
inc
push
xchg
pop
push
stos
inc
mov
aaa
pop
stc
jnp
jmp
sub
sbb
mov
adc
jae
pop
das
lahf
sub
push
inc
adc
incl
ficomps
popf
insl
mov
dec
frstor
stos
xor
adc
mov
cmp
mov
inc
mov
xor
not
push
push
mov
push
adc
mov
cmp
cmp
cmc
mov
pop
adc
clc
inc
mov
sbb
bt
dec
pop
fldz
adc
rolb
ljmp
ror
mov
lods
into
mov
jbe
pop
call
leave
mov
out
js
and
lcall
mov
xchg
inc
lds
jecxz
enter
xor
scas
mov
mov
movsl
or
cmpsb
and
mov
scas
inc
in
jbe
dec
dec
stos
sbb
imul
or
mov
dec
mov
ljmp
ja
mov
push
adc
pshufw
add
cmp
int
xor
and
roll
pop
pop
xchg
scas
xor
sub
push
mov
fisttps
faddl
adc
jg
pop
add
dec
jp
add
sbb
stos
ja
jp
sbb
jmp
sub
pop
mov
adc
add
ds
cmp
fsubr
lods
sbb
pop
in
testl
xchg
in
fists
adc
in
std
dec
movb
mov
lcall
push
lods
mov
pop
je
movsb
cld
dec
imul
insl
mov
push
test
push
sub
fcoms
or
addr16
pop
pop
inc
mov
loop
cmp
xchg
xor
into
fisttps
pusha
push
fwait
cli
loop
jle
pop
push
and
pop
aaa
mov
jp
test
pop
xor
hlt
pop
adc
pop
and
push
adc
cmpsl
ret
loope
outsl
jne
mov
inc
adc
inc
mov
es
repz
mov
xchg
cmp
shlb
dec
cmc
ret
in
dec
xchg
pop
add
dec
shlb
mov
mov
cs
dec
sahf
lods
fdivr
stos
outsl
test
sub
fmuls
pop
sub
sub
push
jo
or
cmpsl
ss
or
xor
lcall
cli
nop
cmpb
dec
and
mov
mov
pushf
or
xchg
shlb
dec
out
cmp
push
add
fimuls
dec
imul
movsl
inc
xchg
mov
setbe
jbe
and
cli
jmp
roll
mov
cltd
fs
pop
das
in
or
jmp
out
push
test
inc
jp
test
mov
mov
and
mov
dec
xchg
pop
aam
push
and
out
dec
and
mov
movsb
out
mov
icebp
xorb
pusha
ret
jno
xchg
enter
ret
push
test
hlt
push
daa
push
std
mov
xchg
xchg
jno
xchg
je
cld
mov
push
jns
inc
xor
cli
imul
inc
stos
cmpsl
jge
enter
push
outsl
mov
mov
int
lcall
jnp
mov
aas
or
pop
inc
cltd
scas
fmul
jne
bound
sbb
mov
pop
push
ret
mov
sub
daa
mov
add
nop
loopne
inc
cld
and
fildl
mov
mov
mov
ljmp
out
sub
mov
test
lock
sbb
rorb
in
sarb
sarb
js
rorl
adc
iret
aas
adc
test
popf
xchg
mov
xor
mov
mov
push
fidivs
cmpsl
adc
fmull
scas
sub
and
xchg
jmp
sub
movsb
int3
lods
push
lods
stos
imulb
xchg
int
test
icebp
dec
jge
adc
std
loopne
mov
and
out
pop
divl
xchg
mov
stos
sbb
sub
mov
stc
fisubl
mov
push
call
pop
decb
lret
ficoml
in
movsb
sahf
test
mov
sbb
sbb
dec
stos
stos
sbb
aad
jae
adc
fs
cli
xor
loop
xchg
and
cwtl
cmp
lods
push
dec
cli
sub
fiadds
xlat
push
pop
pop
and
outsl
mov
das
bound
repz
or
push
shlb
pop
in
adc
jmp
inc
xchg
add
insl
add
in
xchg
lods
ss
xor
dec
fldl
xchg
push
int3
decl
lock
xorb
popa
cmp
cmp
mov
pop
dec
inc
cmp
bound
mov
jae
mul
mov
js
and
xchg
lods
push
loope
xchg
jo
lahf
sbb
sub
xchg
in
insl
shlb
dec
rcll
mov
sbb
jl
or
cld
add
inc
fs
gs
fbld
loope
adc
repz
rcll
les
jge
mov
mov
insl
js
iret
bound
jg
fwait
in
xchg
push
aad
arpl
push
xchg
repnz
repz
roll
mov
push
bound
push
dec
push
push
cmpsb
dec
imul
jge
mov
mov
repnz
ror
lds
lods
aam
mov
mov
sbb
loopne
sbb
pusha
lds
and
in
mov
and
cmp
stc
adc
pushf
pop
push
mov
icebp
add
xchg
dec
mov
pop
dec
jae
fstp
cmp
mull
in
test
out
shll
loop
ret
call
mov
shr
add
rcr
sbb
push
or
and
xchg
inc
dec
adcl
sbb
jne
fdivs
mov
rcrl
lahf
adc
push
std
call
mov
adc
mov
mov
scas
inc
es
ss
and
lds
pop
movsl
push
lret
outsb
out
dec
es
cwtl
int
lds
in
lcall
int3
cmpsb
cmp
in
fs
cmp
in
stos
mov
iret
add
xchg
sbb
movsb
xor
jle
pushf
sbb
js
cmp
and
mov
and
push
xchg
jo
ljmp
mov
inc
add
inc
sub
xor
aas
pop
jbe
sahf
imulb
imul
cwtl
bound
pop
and
mov
cmpsb
aad
arpl
push
adc
pushf
cltd
jae
rorb
sbb
sub
int
movsl
daa
and
pop
shrb
dec
repz
xor
push
adc
fadd
out
orl
push
lods
xlat
rsm
movsb
mov
mov
jnp
test
jmp
sbb
jns
jp
mov
nop
inc
xorb
xchg
repnz
cs
push
inc
mov
lret
outsl
xchg
lcall
jae
xor
and
les
cmc
jecxz
pop
jmp
sahf
and
xchg
ret
or
jecxz
or
push
stos
pop
imul
push
adc
jnp
inc
lods
out
pop
jo
ror
xor
push
into
fimuls
lret
dec
xchg
fistpl
rolb
mov
sbb
enter
test
lock
cmpsb
inc
sbb
sti
fistpl
jae
loope
pop
mov
in
loope,pn
aaa
dec
dec
adc
rcll
push
daa
ljmp
out
hlt
mov
and
mov
or
dec
popa
inc
cwtl
mov
inc
mov
and
lret
mov
mov
adc
and
adcl
hlt
push
mov
and
xor
mov
cld
xchg
mov
xchg
mov
imul
sbb
sti
gs
adc
or
dec
nop
add
insb
mov
jno
pop
cmc
scas
insb
outsl
dec
mov
cmp
xchg
mov
inc
xor
mov
xchg
xchg
movsl
roll
leave
inc
lock
cwtl
loope
je
ret
shll
sub
ficoml
nop
dec
xchg
lods
ret
pop
cmc
inc
xor
pop
ja
decb
push
push
sti
mov
call
inc
lcall
jb
cmc
xchg
ret
ljmp
add
mov
je
pop
movsb
shrl
pop
ja
push
imul
lret
div
sbb
test
test
jmp
and
push
sarb
sbb
test
ret
cmc
fs
movsl
ds
lds
or
adc
data16
push
insb
int3
movsb
sahf
jb
dec
dec
or
sub
cld
mov
lret
push
mov
mov
push
push
mov
lret
jg
sbb
sub
popf
fcmovbe
inc
dec
xor
leave
mov
mov
out
in
movsb
ret
enter
pop
je
mov
mov
sub
pop
jb
scas
jg
push
sub
xor
or
mov
xlat
addl
imul
test
das
mov
push
jns
movsb
mov
pop
dec
scas
ja
dec
daa
cld
push
xchg
xor
arpl
int3
mov
mov
add
jp
sahf
test
movsb
push
or
test
or
mov
or
lds
mov
push
movd
ror
push
out
cwtl
fadds
pop
outsl
popf
sbb
js
bound
dec
rcll
inc
icebp
mov
loopne
ja
mov
add
imul
cmpsb
popf
je
or
mov
cmpsb
xor
inc
arpl
dec
cmpsl
das
inc
ret
enter
jl
mov
mov
inc
div
lret
scas
sub
cmpsl
aaa
loopne
lahf
sbb
lods
ret
repnz
testb
pop
fcmovnu
cmp
push
in
mov
mov
scas
sbb
outsb
std
push
hlt
xchg
fnsave
jle
insl
pop
adc
leave
call
jmp
xor
jno
cltd
sti
sti
mov
and
lods
pop
or
ffree
pop
je
inc
outsl
rolb
sbb
or
sub
pop
dec
push
test
test
cld
repz
push
sarb
fnstcw
ret
in
cmp
addb
sbb
test
push
mov
loop
inc
adc
imul
out
mov
sub
adc
xor
mov
mov
jnp
repz
mov
adc
sbb
xor
pusha
xchg
sub
enter
inc
cli
dec
stos
mov
lret
ret
or
mov
add
or
jns
mov
or
inc
sbb
jae
push
sbb
leave
andb
mov
adc
push
mov
cs
lcall
out
or
adc
xor
mov
dec
push
jl
leave
add
xor
fdiv
pop
push
leave
sub
subb
adc
std
into
push
mov
cmc
jmp
test
gs
jo
mov
repnz
push
idivb
fildll
mov
lret
dec
or
inc
les
mov
test
xchg
dec
adc
push
mov
fwait
or
enter
lahf
hlt
inc
cld
xor
sbb
sti
mov
xor
ret
and
xorl
icebp
sbb
lock
pop
push
dec
inc
jp
mov
pop
rclb
inc
aad
mov
fcmovbe
stos
repnz
mov
or
inc
dec
dec
outsl
sbb
mov
cltd
loop
inc
les
inc
add
adc
stos
scas
repnz
xchg
pop
fsubs
mov
aaa
mov
mov
psubusw
mov
add
xchg
lahf
imul
cltd
dec
dec
sbb
cltd
mov
out
in
xchg
rcll
xchg
outsb
lahf
add
leave
leave
ds
xor
push
test
in
sahf
mov
xor
sahf
jnp
xor
pop
ret
adc
push
mov
bound
mov
stos
mov
xchg
ds
and
sbb
fs
popa
xchg
and
sub
sub
dec
mov
cltd
mov
cld
cmp
push
adc
lea
aas
add
loope
fidivs
test
dec
adc
xchg
dec
inc
mov
pop
xchg
shlb
cmp
pushf
xor
xor
lods
adc
incl
out
or
enter
add
test
mov
push
pop
int3
adc
pop
mov
or
xor
fisubs
push
loopne
mov
nopl
inc
clc
mov
sbb
mov
xor
inc
pop
nopl
scas
fistps
xchg
xor
loope
mov
mov
movsb
cmp
mov
jmp
ss
ret
and
mov
cmp
pop
loopne
jmp
loope
push
pusha
cwtl
xchg
jle
hlt
jnp
mov
mov
mov
movsl
frstor
mov
jo
cmp
inc
subb
std
popf
push
xor
jne
leave
mov
push
lret
add
mov
mull
ljmp
dec
je
inc
mov
inc
add
push
stos
sti
shrb
sub
add
das
jae
adc
inc
push
inc
lock
push
mov
push
pushf
jl
mov
xchg
mov
jecxz
mov
enter
sti
fistpll
pusha
pop
add
xor
mov
add
mov
jnp
sbb
push
inc
dec
pop
xlat
hlt
jo
and
testl
adc
scas
sub
or
dec
jae
xchg
test
adc
cmc
dec
loope
jno
rclb
sub
popa
jge
pop
jge
mov
lock
shrb
mov
push
movsl
jne
imul
das
imul
inc
push
mov
xchg
push
inc
inc
ss
mov
or
rclb
hlt
testb
jno
daa
xorl
insl
cmpsb
repz
outsl
cmp
cwtl
aas
arpl
lds
out
shll
leave
add
sub
ficompl
add
sti
jle
sbb
cmpsl
push
xchg
or
je
lock
bound
mov
jb
jmp
es
movsb
mov
arpl
lahf
xchg
test
fwait
jbe
push
lcall
xor
sbbb
cli
int
mov
mov
arpl
fiadds
fldl
or
mov
xchg
sbb
fs
mov
scas
adc
sub
ljmp
fmuls
divl
lods
adc
scas
xchg
fs
mov
out
in
push
and
xchg
sbb
push
sub
mov
xlat
sbb
inc
pop
mov
insb
mov
in
aam
xor
sbb
addr16
loopne
and
sbb
sbb
add
loope
add
in
in
insb
and
mov
xchg
jo
adc
sub
cmpsb
icebp
mov
shrl
stos
pop
sbb
pop
and
adc
xchg
adc
add
dec
sbb
pop
mov
sub
rcll
or
in
enter
mov
and
test
icebp
jle
aas
int3
or
mov
jp
inc
xlat
mov
mov
pushl
insb
and
fldlg2
stc
repz
push
pop
fisttps
daa
cmp
push
sti
lret
lock
pusha
cmp
and
int
mov
adcl
lret
mov
inc
cs
shll
fists
inc
mov
pop
mov
add
push
ficoml
push
cmp
mov
idivl
inc
adc
jno
out
xchg
push
fs
ljmp
push
test
stos
adc
repnz
xor
sub
and
and
xor
daa
sbb
cwtl
repnz
fisubl
cmpsb
loop
inc
mov
cmc
mov
cmpb
aaa
movsl
in
cwtl
push
mov
fwait
mov
pop
mov
adc
cmp
xchg
mov
data16
lods
and
iret
das
push
push
xor
ljmp
out
inc
push
add
lret
ret
sbb
and
mov
fs
sti
adc
mov
clc
mov
and
mov
mov
dec
mov
inc
sbb
lods
adc
subb
into
push
clc
repz
loope
push
in
movsb
les
dec
ss
inc
and
mov
jbe
push
stc
jnp
and
fidivrl
pop
popa
fdivrl
adc
iret
jbe
aad
push
pop
pop
mov
call
hlt
call
mov
pop
push
inc
or
fbld
mov
xchg
sub
mov
fmulp
repnz
inc
xchg
sti
outsl
popfw
jne
xchg
add
mov
sub
imul
aam
and
fnstenv
sbb
ffree
jmp
mov
or
outsb
and
out
or
out
sbb
mov
adc
cmp
mov
xchg
dec
push
out
lahf
inc
inc
cmp
xor
movsb
lret
sbbb
addr16
movsb
pop
in
into
and
fiadds
sub
xchg
jno
push
inc
xor
xor
mov
mov
mov
stos
cmp
jp
pop
rcll
fisttps
dec
out
push
outsl
dec
mov
insb
jbe
jge
inc
mov
sub
js
and
sub
scas
rorb
lcall
ljmp
inc
or
repnz
repz
sbb
pandn
ret
mov
addr16
push
jp
hlt
cmc
push
sarb
pop
lret
out
sbb
mov
and
imul
cmp
mov
aas
mov
stos
mov
test
je
mov
lods
push
sub
ja
jmp
dec
mov
scas
xor
add
cmp
pop
enter
clc
mov
xlat
adc
add
out
sub
mov
jnp
and
movsb
arpl
das
jge
push
cmpsl
call
cs
inc
jno
aaa
das
xor
lods
mov
popl
or
int
clc
adc
test
xor
das
out
test
in
ror
inc
add
sti
xor
test
in
outsb
dec
rorl
cli
je
adc
add
ffreep
sbb
in
xchg
into
repnz
xchg
addr16
test
adc
or
add
jmp
into
outsb
js
lods
cmp
sub
jge
data16
push
or
xchg
test
sarb
xchg
imul
aam
shrl
in
cmp
arpl
mov
cltd
cmp
or
les
cmpsb
fld
xor
dec
cmp
dec
pop
hlt
in
repz
sub
xor
in
cmp
pop
add
movsl
or
outsl
pop
arpl
in
pop
mov
and
jnp
jb
std
push
mov
rclb
adc
xchg
lret
fwait
lock
sbb
test
push
cmp
hlt
push
call
push
popa
into
insb
fcoms
push
pop
pop
sub
push
mov
rcrb
xor
mov
arpl
push
mov
xchg
iret
fcmove
rcll
bound
xchg
in
push
push
push
aad
pop
mov
mov
jo
mov
sbb
jl
es
outsb
mov
mov
repz
test
sub
cli
cmc
jmp
pop
push
pop
fisttps
push
out
pop
or
xor
dec
call
clc
das
enter
xchg
orl
push
sub
mov
aam
and
and
adcl
push
jae
sbb
xor
jmp
add
add
cmp
outsl
adc
pop
lea
and
pop
sti
jmp
mov
int
sar
and
jle
xchg
lods
lea
jecxz
adc
pop
adc
lret
cltd
cmc
inc
daa
mov
sbb
stos
pop
push
push
mov
jl
xchg
push
es
adcb
adc
mov
clc
sti
inc
pop
repz
rcrb
mov
mov
jne
cmp
mov
int3
cwtl
sub
addr16
and
inc
imul
inc
push
mov
aas
push
inc
mov
hlt
imul
sub
mov
imul
mov
push
es
mov
and
push
xchg
fsubl
xor
mov
pop
aad
mov
std
push
inc
lcall
es
pop
xchg
add
gs
fs
jl
push
orl
es
lods
or
cmp
rolb
arpl
push
push
push
mov
dec
sbb
cli
cmpsl
jns
jns
testb
pop
repnz
popa
mov
push
sub
lret
mov
fisubl
mov
inc
arpl
nop
pushf
xor
mov
movsl
sub
jb
mov
dec
push
and
loop
icebp
popa
inc
test
dec
dec
ja
into
aam
rol
jnp
jmp
or
divl
xchg
das
dec
cli
xor
sub
mov
push
in
push
pop
add
icebp
call
les
aas
mov
inc
pushf
js
jmpw
incl
das
sar
sbb
sbb
jae
iret
test
sub
js
push
outsb
movsb
xlat
mov
jb
ret
ret
and
outsl
stc
filds
inc
adc
lea
dec
les
adc
cwtl
lahf
jecxz
imul
push
add
jne
sub
ret
sub
dec
add
jne
jle
roll
pop
xor
push
pop
insl
dec
or
ljmp
add
cmp
lds
test
adc
inc
ret
out
pushf
mov
lahf
mov
adc
xor
push
add
bnd
add
out
and
cmovno
mov
push
sarb
scas
sub
xchg
mov
inc
jne
sbb
loopne
fcoms
cmp
hlt
xchg
push
sbb
nop
mov
xor
fs
pop
faddl
mov
sub
mov
icebp
sub
sub
inc
mov
dec
data16
mov
icebp
xchg
sbb
and
imul
in
lds
adc
mov
add
test
and
sub
mov
ret
insl
cmpsl
cmp
add
sarb
jbe
scas
sbb
inc
popf
repnz
and
loop
mov
add
shl
mov
repz
pop
cmp
addl
xchg
inc
sbb
xchg
push
dec
repz
push
test
mov
or
ret
int
xchg
ror
or
add
cmc
ret
in
scas
or
out
dec
cltd
ljmp
cbtw
add
scas
push
xor
add
lahf
inc
loope
or
jle
lahf
iret
push
inc
movb
aad
int3
adc
or
and
or
int
daa
jg
or
cmc
mov
xorl
sbb
mov
xor
and
ss
or
pop
inc
neg
in
es
cld
insl
cmp
popf
mov
cmp
mov
and
and
xor
lret
mov
xbegin
jge
testb
adc
mov
sub
add
loop
outsb
and
cld
out
mov
sbb
cmp
pop
jle
adcl
sub
dec
adc
rolb
fadds
gs
rcrb
icebp
jp
ja
xor
jae
pushf
xor
jmp
inc
mov
and
dec
inc
sbb
rcrl
scas
or
das
daa
jns
adc
test
xchg
xchg
addl
notb
push
push
mov
inc
adc
sbb
bound
lock
mov
cs
dec
repz
mov
in
sub
negb
aad
les
call
sti
mov
jg,pt
xchg
inc
inc
into
cmpsb
aad
xor
mov
cmpsl
mov
jg
pop
xchg
or
cmpsb
sbb
inc
inc
cmpsl
or
test
frstor
movsl
int3
andb
mov
xor
pop
adc
jbe
mov
adc
sbb
push
lds
push
jmp
dec
mov
out
inc
mov
mov
lods
les
mov
cs
pop
repz
sub
jb
jo
mov
in
out
jne
subb
out
mov
adc
stos
and
test
gs
push
test
adc
inc
mov
push
xor
lods
stos
aas
movsb
int
xchg
aad
mov
rclb
mov
cli
aas
in
push
or
repnz
sbb
mov
pushf
mov
or
call
xor
fisttpl
popf
push
shrb
jle
push
xchg
pushf
cmp
mov
and
loope
add
jl
out
mov
cmpsl
fwait
into
and
mov
mov
hlt
repnz
sbbb
mov
push
fbld
sbb
shrl
pop
sub
jo
ljmp
lock
pop
scas
push
xorb
cmp
stc
inc
mov
ljmp
cmp
pop
mov
repz
scas
shll
xor
add
ret
pop
xor
xor
inc
jle
in
pop
stos
pusha
nop
or
rol
cli
hlt
lds
mov
ret
mov
lahf
add
movsl
daa
pushf
adc
jns
pop
mov
sbb
shl
sub
insl
jno
shl
cmp
pop
mov
out
bound
sbbb
lret
mov
adc
dec
sbb
int3
add
jne
add
sub
jb
inc
and
sbb
aad
in
sub
push
and
xor
dec
loop
sub
cmpsb
cld
out
or
cmp
fcmovu
xor
push
push
mov
shll
pusha
int
push
add
xchg
mov
in
or
cmpsl
inc
sbb
pop
call
mov
test
pop
mov
inc
pop
cmp
jp
test
das
push
adc
add
pusha
fmuls
das
lock
jne
ret
popa
add
stos
dec
and
cmp
call
mov
imul
sub
and
sahf
mov
jo
xchg
pop
scas
add
dec
inc
dec
xchg
mov
mov
push
cmp
pop
int3
dec
and
mov
push
rol
and
cmp
daa
mov
imul
dec
aam
adc
rcr
push
adc
cld
push
cld
sub
fnstenv
pop
xchg
mov
push
cld
movsb
push
divb
push
js
mov
pop
mov
std
or
std
in
jns
fbstp
jo
cmp
dec
push
data16
cmp
outsl
int3
and
lods
bnd
mov
pop
jle
mov
adc
in
cmp
out
js
xchg
add
cli
call
mov
inc
jmp
fistpl
dec
xor
xchg
sub
stos
push
loopne
movsl
popa
test
xchg
std
addr16
imul
cmp
aaa
adc
or
push
xchg
dec
inc
or
loope
sbb
cli
lea
cmp
lock
out
cmpsl
xchg
adc
pop
out
add
xchg
fisubs
lea
ja
mov
xchg
imul
inc
movsb
mov
aaa
gs
xor
fs
ficoml
test
xor
lods
mov
mov
jmp
add
and
ss
fnstenv
es
out
cld
cmp
outsb
xor
sub
mov
push
dec
dec
into
lret
cwtl
xor
xor
jg
lcall
cmp
ss
ss
sti
int3
inc
dec
imul
pop
loope
adc
cmpb
push
lret
rcll
cmp
data16
inc
mov
cli
mov
stc
lret
cmpsb
fbstp
adc
xchg
mov
mov
outsl
in
lahf
cmp
mov
es
cli
rcll
wrmsr
jo
aad
push
mov
inc
mov
leave
jle
mov
add
pop
inc
xor
es
in
pop
mov
enter
sub
adc
fsts
ficomps
in
ss
or
pop
loop
mov
cmp
arpl
add
cwtl
jl
xor
dec
pop
xchg
add
sbb
popa
mov
dec
shrl
mov
mov
pop
lret
test
in
test
dec
movsb
and
int3
cltd
push
sub
jg
in
fcomp
test
loopne
dec
loope
push
xor
faddl
adc
inc
fistl
pop
lock
out
popa
into
fdivrs
inc
push
aam
out
jmp
or
adc
or
inc
dec
mov
les
mov
inc
adc
imul
nop
mov
insb
jae
pop
fwait
pop
sbb
inc
cwtl
sti
add
subb
mov
cltd
mov
jno
fldt
js
pushf
push
jge
mov
lods
jge
inc
aas
fdivl
imul
stos
inc
pop
sti
enter
insl
mov
jmp
sbb
fs
adcb
ja
xchg
fdivr
dec
push
sub
xchg
ja
mov
pop
add
inc
movsl
sub
test
sbb
insl
mov
imul
cmp
jno
xor
or
dec
mov
jne
dec
outsl
and
loope
sbb
mov
ljmp
dec
xchg
cs
jg
xor
adcb
jns
sbb
mov
inc
inc
jns
cmp
dec
icebp
dec
sbb
into
jg
xchg
sub
repz
sbb
stos
cld
imul
sbb
aam
subl
enter
sub
xor
movsb
mov
test
fldt
add
or
sbb
mov
popa
clc
mov
cmp
xchg
fwait
cmp
les
push
in
fdivr
mov
mov
xor
xor
imul
xchg
cltd
and
icebp
fs
push
and
scas
sub
xor
jns
not
sub
clc
pop
xchg
add
inc
pushf
dec
xor
xchg
inc
negb
cmp
ss
lahf
xchg
mov
xchg
shlb
sahf
adc
or
dec
ljmp
jb
mov
cld
add
inc
xchg
enter
rcr
js
xor
sbb
xchg
rorl
loop
sbb
and
dec
roll
push
call
iret
popa
and
aam
lcall
cli
sbb
add
cmp
fs
incl
jae
xchg
mov
or
int
mov
xor
lods
rorb
into
and
test
inc
cmp
cltd
xchg
cwtl
ja
push
cmp
aas
stos
push
inc
lea
mov
xchg
jl
test
mov
dec
imul
dec
les
pushf
fnstenv
lret
xchg
mov
popf
aam
mov
push
repnz
imul
mov
dec
scas
or
push
fwait
lret
iret
repnz
or
adc
lods
lds
cmpsl
popa
fwait
mov
or
test
mov
inc
jno
jmp
inc
pop
mov
push
cmp
pop
jle
pusha
shlb
add
mov
mov
mov
adc
test
push
das
scas
cmp
push
pop
insl
nop
sub
cld
insl
imul
mov
stos
push
pusha
xchg
xchg
cltd
psllq
sti
and
push
sahf
das
add
or
insb
mov
andb
dec
into
fdivr
cwtl
push
sbb
jl
out
ret
inc
mov
insl
xor
xor
dec
cmp
daa
or
xlat
int3
pop
adc
outsb
push
cmc
movsb
enter
or
mov
lock
rcll
aam
push
fsts
xchg
cmp
push
add
daa
cld
cwtl
jns
mov
enter
test
jp
push
adc
jl
leave
mov
loope
repnz
std
ja
add
sbb
cmp
call
dec
dec
mov
mov
aam
js
stc
ds
fbld
xor
outsb
lret
out
inc
aaa
lret
popa
push
cmp
arpl
sub
xchg
popa
mov
subl
ljmp
mov
pop
aaa
shlb
inc
inc
dec
sahf
orl
js
call
repz
pop
sti
or
roll
jns,pt
mov
push
inc
jb
out
pop
popf
inc
cmc
fwait
cmpsl
or
push
xchg
push
dec
in
imul
dec
in
sarb
sahf
sbb
cmp
mov
movsl
inc
adc
add
imul
movsb
sbb
mov
sbb
sbb
and
sti
lock
or
testb
cmp
fwait
push
aam
ret
enter
adc
inc
push
int3
aam
push
lret
aam
std
loope
pop
imul
icebp
push
movsl
hlt
imul
add
lret
pop
fucomip
cld
outsl
inc
pavgw
shl
test
repnz
pop
aam
repnz
out
movsb
lret
push
push
ja
push
dec
cwtl
mov
mov
gs
cmpsb
cli
movsb
in
mov
mov
imul
push
or
cmc
jbe
lock
and
mov
pop
lahf
adc
ss
xor
icebp
mov
arpl
daa
ret
add
sahf
ds
stos
sbb
adc
lds
stc
and
std
std
int3
mov
imul
inc
lock
inc
xchg
addr16
sbb
cmp
sti
enter
into
pop
xchg
xchg
jns
xor
gs
sbb
mov
aad
cld
clc
cltd
xchg
jmp
xchg
and
fwait
push
dec
out
cmp
std
sub
enter
add
adc
dec
repz
aas
or
xchg
cwtl
xor
iret
setae
xchg
stc
daa
xlat
lret
dec
scas
iret
decl
loope
cltd
push
outsl
mov
or
push
push
rclb
adc
int3
fistps
out
movsb
add
es
sbb
icebp
add
pushf
sbb
mov
icebp
jle
pop
stc
dec
inc
xchg
clc
adc
out
aaa
mov
push
stos
fstpt
call
add
rcrl
repz
push
fsubs
dec
or
lock
xor
jg
jns
mov
out
mov
insb
loop,pt
aad
cmp
dec
push
icebp
and
and
pop
sub
mov
test
sbb
aaa
cltd
push
imul
mov
or
ffree
test
test
add
addb
cltd
pop
xor
add
pusha
jp
outsl
lret
push
mov
cmp
mov
std
cmp
out
jnp
ret
cmpsb
dec
xchg
insl
iret
out
adcb
or
dec
sbb
arpl
je
mov
mov
jne
mov
cmp
xchg
mov
push
add
fcomps
push
push
nop
loopne
fcoms
sub
mov
add
lcall
nop
popa
into
and
cmpsl
pop
pop
stos
pushf
js
lods
cmp
jo
sub
and
cs
or
jne
popf
mov
out
test
rclb
jo
sub
and
les
sub
aaa
and
xor
ljmp
pop
adc
into
lods
in
arpl
cmpsl
outsb
dec
enter
outsl
push
jle,pt
mov
mov
ret
dec
addr16
subb
add
dec
mov
sbbl
mov
jmp
sti
adc
mov
lods
int3
push
jns
outsl
scas
inc
and
or
rcrb
jecxz
loopne
es
lea
xor
dec
lods
jb
setnp
dec
insl
jnp
mov
sahf
jg
mov
push
pop
into
imul
xor
push
jge
enter
insl
sbb
push
dec
in
jno
decb
jns
arpl
mov
lahf
xchg
stos
jo
push
ds
xchg
mov
mov
testl
xlat
mov
insb
push
xchg
je
mov
or
xchg
stc
inc
cmpsl
sub
scas
out
xchg
cmp
sarl
lret
cmp
xchg
ret
fidivl
mov
inc
pop
dec
in
fldcw
cmc
stc
mov
fisubrl
repnz
dec
icebp
push
mov
push
and
lret
xchg
mov
jle
outsl
or
loop
inc
add
lret
fs
mov
cltd
adc
adc
mov
popf
fiadds
xor
mov
mov
lea
lock
lock
xchg
cmp
ljmp
ds
jb
jne
cli
je
pop
imull
mov
mov
jmp
icebp
shrl
dec
mov
jecxz
ficompl
sbb
test
mov
sbb
xchg
fsubrs
repnz
dec
add
sarl
cmp
mov
pop
aad
lret
rcr
loope
sti
mov
mov
clc
cli
or
std
sub
insl
les
cmp
adc
les
mov
movsl
popf
fwait
lahf
out
inc
aam
xchg
dec
xor
test
cmp
or
shrl
dec
scas
out
cwtl
mov
mov
les
scas
stc
adc
loop
stos
jmp
clc
sarb
fsubp
inc
jb
fadds
aam
dec
cld
adc
sbb
sub
dec
mov
out
cs
out
mov
bound
sub
xorl
sbb
and
xchg
xsaves
add
push
outsb
xchg
ljmp
out
xor
jl
add
dec
rcl
fsubp
mov
cmpsb
lea
xchg
mov
mov
mov
inc
sub
add
xor
dec
sbb
aam
inc
and
jge
and
adc
xchg
iret
ljmp
add
lods
mov
sbb
dec
cltd
pop
sub
mov
lret
ret
and
gs
jae
mov
arpl
push
mov
cmc
pusha
inc
mov
mov
adc
dec
and
rcr
xchg
dec
fwait
lcall
testl
and
mov
insb
push
sbb
cmpsl
jmp
xlat
cmp
dec
push
inc
pop
and
aaa
je
cmpsb
xor
jb
mov
loopne
jecxz
fsubrl
sbb
les
insl
pop
sbb
leave
sbb
mov
mov
mov
mov
pop
stos
jo
adc
sub
pushf
lahf
fisubs
sti
mov
cli
je
and
loop
sub
adc
call
pop
push
inc
xor
sbb
dec
lds
xchg
push
inc
divb
test
fcoml
movsl
enter
js
cmpsb
or
aaa
sub
mov
xorl
jae
fidivrs
js
addr16
pop
push
in
mov
sbb
mov
outsl
ja
jge
inc
sub
dec
mov
or
pop
das
dec
stos
insl
incl
jo
xor
mov
inc
jbe
imul
aaa
ficomps
lods
movsl
sub
movsl
sub
sbb
xchg
add
iret
data16
bound
and
and
dec
stos
dec
sub
push
xor
and
je
test
pop
je
inc
sbb
popa
and
cwtl
cmc
xor
repnz
icebp
js
mov
and
jbe
dec
adc
fisttpl
push
mov
xsave
mov
mov
pop
xorb
test
inc
dec
hlt
out
in
hlt
test
lods
push
sbb
mov
stos
outsl
out
push
xchg
sbb
daa
mov
repnz
mov
lret
sbb
xchg
lahf
pop
mov
mov
add
mov
mov
sbb
dec
scas
fcompl
mov
lret
es
sub
scas
fstps
popa
pusha
push
popf
cmp
push
imul
lret
loope
lods
push
inc
cmpsl
cmp
pusha
mull
xor
loope
adc
and
cltd
outsb
int3
jmp
stos
cmp
dec
lds
insl
mov
inc
out
stc
mov
add
cmpsl
jmp
sbbb
inc
inc
stos
mov
mov
push
popf
and
and
pop
fs
pushf
or
pop
addb
popa
data16
ficoms
xchg
sbbb
out
mov
jecxz
sub
adc
push
adc
xor
in
xor
shll
or
imul
xlat
enter
mov
or
std
ret
lret
outsl
adcb
cmp
mov
lahf
lret
lods
jnp
je
popa
dec
pop
pop
fwait
movsb
add
sub
add
mov
jmp
and
fcoml
xchg
add
leave
mov
loop
insb
and
mov
dec
pop
les
jbe
shll
and
cli
loop
and
test
push
adc
in
xor
das
sar
sbb
jge
imul
fsubs
in
ljmp
jp
sub
out
out
and
sbbl
lret
test
and
and
cmpsb
out
xor
mov
mov
pop
adc
jb
xchg
fsubr
mov
repz
je
push
sbb
data16
jg
sub
mov
lahf
inc
hlt
repz
adc
mov
jbe
lds
test
repnz
sbb
stos
xchg
add
shr
rcr
pop
icebp
daa
stos
sbb
sub
in
xorl
aaa
enter
int3
incl
movsb
dec
insb
and
pop
mov
mov
mov
shll
mov
xchg
fcomi
sbb
out
pop
or
push
mov
out
pusha
xor
cs
int
fcmove
in
into
jg
addr16
fcmovbe
cmp
insb
or
out
data16
and
int3
movsb
das
cmp
xchg
stos
clc
and
test
testb
push
add
fwait
pop
xlat
mov
in
lds
in
or
jns
fistpll
imull
repnz
mov
pop
test
push
adc
ret
aam
call
adc
ficompl
lea
sub
jne
pop
addr16
daa
andl
popa
xor
int
sub
inc
pusha
xchg
pop
push
sub
inc
outsb
lcall
cmp
sub
jge
push
dec
arpl
cmp
dec
pop
aas
data16
andl
xchg
fistpll
pop
cmpsl
clc
and
out
mov
repnz
push
sbb
xor
jae
cli
lods
in
dec
repnz
lock
das
cmp
stos
ja
cmc
push
jge
xor
sub
nop
xor
push
fstpl
sbb
push
mov
pusha
lret
outsb
cmc
lock
testb
xchg
inc
mov
addr16
test
push
jb
addr16
cmc
jno
push
int3
mov
adc
jle
in
fisubl
rcl
les
mov
and
jle
hlt
push
mov
lods
xchg
xchg
mov
sbb
mov
lahf
lret
ret
js
std
cmp
jbe
jecxz
push
insl
ljmp
in
add
adc
jbe
fdivrs
mov
pushf
arpl
mov
cltd
icebp
loopne
dec
insb
out
cmc
les
cltd
ret
shrb
mov
inc
add
lea
loop
inc
mov
pop
sub
movsl
push
push
arpl
sbb
mov
test
ja
hlt
inc
sub
lret
mov
or
out
and
pop
or
lods
jnp
setle
jmp
sub
pop
icebp
jo
mov
push
dec
sub
pushf
xor
fisubrl
xor
pop
or
mov
mov
or
inc
imul
shlb
daa
cmp
lds
add
insb
shrl
lock
sti
imul
test
jno
push
fsubrl
dec
jmp
inc
push
cmpsl
mov
push
cmpsl
fcomip
inc
and
sub
mov
pop
mov
stos
push
dec
enter
inc
mov
dec
jmp
outsl
sbb
int3
mov
adc
int
and
test
fsts
lcall
fisttpl
dec
jle
sbb
sbb
dec
in
mov
cmp
les
outsl
loope
pusha
cmc
jo
push
lret
xchg
xchg
ss
xor
adc
and
shlb
lods
mov
aam
gs
stos
call
jmp
int
iret
aaa
xchg
ficoms
mov
test
out
mov
mov
fisubrl
lock
aad
icebp
xchg
pop
sub
sub
ja
cmp
xchg
dec
mov
popf
sub
adc
xchg
cli
pop
call
mov
sbbb
add
std
adc
lock
or
addr16
subl
xor
xor
fidivrl
lret
test
fwait
cmpsl
fists
in
add
int
push
lds
cmp
pop
cli
add
sbb
adc
jbe
ja
adc
mov
xchg
cmp
mov
shll
xor
mov
mov
jns
sbbl
lock
fcomp
insl
repz
sub
xchg
adc
inc
enter
cmp
decl
movsb
pop
subb
das
mov
pop
sbb
xchg
stos
out
cmpsl
push
mov
movsl
ds
mov
fs
loopne
test
push
and
das
mov
jge
xor
add
mov
inc
test
std
mov
rcll
orb
add
fbstp
mov
mov
push
sbb
out
mov
push
or
dec
sub
adc
push
add
mov
pop
mov
cmpsl
test
cmp
add
decb
loope
insl
pop
arpl
mov
aaa
insl
ljmp
fmulp
mov
add
mov
cmp
push
shrb
jo
jp
cmp
fistl
mov
xchg
xchg
push
fnstenv
jmp
jbe
hlt
mov
mov
fs
xlat
addr16
std
jne
rcrl
sub
orl
les
sbbl
or
or
add
xchg
jne
cmc
lcall
or
mov
cwtl
push
fwait
push
data16
data16
add
pop
nop
mov
dec
rcll
iret
jbe
loop
add
enter
mov
xlat
pop
jmp
mov
test
push
dec
adc
mov
pop
mov
outsb
pop
mov
adc
loope
sbb
mov
mov
aam
xchg
add
jne
movsb
ljmp
test
push
pop
je
mov
into
mov
js
xor
cmp
and
cmp
loop
cmpl
push
repz
cmp
fsincos
dec
inc
mov
cmp
cmp
fs
imull
push
repz
sub
push
testl
push
stc
loop
sbb
and
out
xchg
xchg
xchg
sbbl
fimull
xor
cmp
mov
ja
in
lods
movaps
mov
xor
out
bound
lret
enter
xchg
mov
outsb
aaa
clc
in
lods
loopne
push
add
nop
gs
cmp
popf
xchg
mov
cwtl
fwait
cmp
scas
lock
jbe
pop
sbb
lea
cli
mov
int3
mov
dec
push
fst
or
xchg
xor
lcall
and
mov
lahf
adc
fwait
cmp
das
std
sbb
sti
leave
jne
sbb
notb
mov
je
xorb
mov
dec
loope
rcrl
adc
stos
filds
and
jno,pt
int3
push
out
sti
addr16
enter
movsb
or
daa
aaa
pop
mov
shlb
outsb
hlt
mov
mov
pop
inc
mov
mov
push
mov
jmp
sbb
sub
cmp
dec
aaa
cmp
xchg
and
in
mov
rcl
jle
and
mov
mov
and
inc
xchg
sub
mov
fsubrp
push
ljmp
push
jmp
shll
fstpt
mov
enter
sub
push
mov
xchg
mov
and
fbstp
xor
push
push
add
in
daa
in
out
mov
xchg
sti
pop
cld
push
test
pusha
mov
fnstsw
ja
mov
and
xlat
mov
cli
add
in
mov
pop
add
repz
rcrb
loope
out
xchg
mov
test
xlat
fcompl
adc
and
pop
cmc
iret
in
ljmp
popf
xchg
mov
cmp
aas
sbb
out
jbe
int
push
in
pushf
outsl
push
dec
js
jl
push
in
or
arpl
int3
adc
iret
jp
pop
in
sub
int
lret
mov
clc
mov
sti
cmp
outsb
sqrtps
xchg
lods
loop
xor
ds
add
shlb
shl
inc
loop
dec
jmp
cmp
fdivp
sub
aaa
mov
lahf
add
andl
and
pop
roll
cmp
hlt
lcall
sbb
xor
inc
mov
loopne
lret
xor
hlt
enter
loope
fisubs
test
cli
cmp
subb
jbe
leave
lock
loope
test
clc
fstl
insb
dec
adc
sub
sbb
movsb
adc
movsl
test
out
cmp
sub
fwait
cs
popf
jmp
xchg
xor
arpl
inc
push
int3
xlat
loopne
sti
sub
cmpl
adcb
adc
pop
pop
add
lods
add
inc
stc
cmp
dec
cmp
mov
arpl
dec
jmp
scas
scas
jge
xchg
rcrl
in
jne
add
stos
rorl
sbb
mov
into
ja
shlw
sbb
lahf
fcmove
in
lret
repnz
lods
push
sub
or
mov
data16
daa
into
aam
pop
adc
jmp
xchg
mov
lret
sbb
rorb
mov
or
fwait
les
push
call
ret
push
xor
cmp
sub
cld
adc
hlt
xor
subl
mov
sbb
xchg
int3
nop
xor
cld
std
xchg
jge
adc
dec
mov
and
add
scas
mov
sti
imul
out
push
pop
push
mov
decb
fdivr
and
mov
out
ret
cli
int
jmp
inc
out
aam
iret
imul
je
cmpsb
stos
adc
jae
push
loop
adc
jno
push
xchg
pop
ret
mov
decl
out
int
adc
ret
push
andb
xchg
jl
pop
loopne
xchg
movsb
cmpsl
imul
arpl
xor
fidivrl
mov
mov
pop
mov
cld
xchg
cmpxchg
repnz
fisubs
icebp
mov
xlat
call
sbb
inc
rorb
mov
or
sarl
mov
mulb
sarl
test
ja
inc
fcomps
push
ja
stos
xor
xor
in
test
test
pop
fdivl
lods
popf
fs
leave
dec
rorl
cmp
push
mov
fnstenv
sub
fs
adc
xchg
sub
jns
insl
pop
adc
fcoml
add
push
adc
cmp
xchg
fstpt
je
push
push
aad
fs
xor
lret
or
scas
out
mov
fildl
xor
jae
loope
mov
mov
adc
cmp
fadds
mov
shlb
mov
arpl
jmp
jmp
pushf
or
seto
push
mov
sbb
push
scas
xchg
xchg
jnp
fstpl
mov
inc
daa
jns
testl
sub
outsl
sbb
xor
jmp
mov
push
in
fdivl
pop
fsubr
or
add
gs
mov
insl
bound
cmp
sbb
add
hlt
adc
imul
xlat
adc
dec
sub
std
jecxz
loopne
nop
test
or
out
pop
cmc
fisubl
mov
sbb
stc
dec
rorw
ret
xor
mov
addr16
je
dec
or
add
scas
add
outsb
sub
into
xchg
push
xor
jmp
div
ret
push
pop
stos
add
filds
ja
add
or
enter
cli
and
lea
jmp
push
sub
inc
mov
push
test
mull
mov
xor
lret
cmpsb
sbb
decb
mov
out
shlb
leave
adc
jae
adc
lods
fnstcw
xchg
push
mov
and
ret
imul
imul
fsts
mov
out
int
cmp
in
repz
imulb
xchg
mov
mov
cmpl
repz
into
xor
xchg
or
lock
ja
jmp
and
cltd
gs
neg
insl
push
lret
cmp
arpl
repz
pop
cld
ficompl
xor
lcall
data16
notb
dec
js
js
add
fdivl
aam
nop
sbb
test
adc
dec
repnz
int
in
stos
mov
xor
inc
dec
dec
sub
pop
and
sbb
and
shl
fs
sahf
mov
inc
inc
adc
lahf
fstps
xchg
sbb
stos
aad
fcoml
pushf
mov
pop
hlt
jb
iret
push
sbb
iret
push
mov
dec
and
stos
and
les
add
mov
les
xchg
es
adc
adc
jnp
loopne
dec
add
mov
inc
push
add
dec
data16
push
adc
out
push
ret
ljmp
inc
adc
or
test
das
out
sub
xchg
les
repz
je
inc
push
add
popa
mov
test
xor
pop
loop
ret
mov
mov
mov
xor
aad
dec
fsubrl
xchg
cmc
out
jle
pop
ljmp
add
xchg
fldt
sub
push
xor
mov
jl
mov
or
popf
int
push
imul
fdivrl
pop
cltd
xchg
lahf
les
arpl
push
pop
js
cs
cmp
cwtl
inc
pop
mov
dec
stos
test
lret
adc
cs
notb
sbb
imul
xchg
cmpsl
enter
addl
jge
into
cmc
leave
pop
mov
movsl
out
daa
pop
xchg
push
bound
faddl
or
cmp
jo
popf
push
pop
std
mov
out
popf
push
cmp
mov
mov
pop
dec
push
adc
pop
in
movl
mov
les
call
jge
in
xlat
lcall
and
xor
rcll
sub
ljmp
sbb
and
mov
xchg
mov
cwtl
push
push
sub
test
sti
mov
mov
out
data16
inc
mov
xchg
xor
js
xlat
cmp
mov
push
cmpb
or
mov
bound
jb
std
rol
cld
sahf
xchg
idivl
xor
mov
into
clc
lret
dec
out
mov
and
movb
cmp
std
push
sub
fdivrs
jae
fcom
push
ror
ds
cwtl
jns
mov
push
sbb
dec
mov
je
pop
je
cltd
inc
jp
test
sub
lret
movsl
sub
adc
xchg
pushl
cmp
xchg
push
mov
mov
dec
scas
jbe
push
fdivs
les
push
adc
jle
sbb
test
stos
ljmp
and
dec
sti
mov
dec
push
jmp
cmc
mov
sbb
es
sbb
popa
xchg
enter
lock
aas
loope
aam
adc
insb
mov
inc
std
cmp
out
pop
jmp
adc
jnp
mov
lods
push
sbb
dec
ss
mov
dec
adc
shrl
in
sub
cmpsl
loopne
sbb
cmpsb
int3
mov
mov
xor
pop
rorl
dec
cmpsb
fcomps
push
call
aaa
movsb
xchg
pop
mov
xor
sahf
xchg
repz
jbe
sbb
push
stos
mov
lds
daa
into
cmp
dec
mov
bnd
mov
adc
mov
jge
push
sub
fistl
lock
push
and
xchg
pop
nop
xor
roll
shrl
cmp
mov
shr
popf
leave
sahf
cwtl
idiv
jo
jle
out
cli
jae
das
sub
jbe
jle
je
stc
lock
idiv
mov
jp
ja
push
pop
test
jg
mov
mov
fstpt
outsb
shrb
adc
outsb
pop
xchg
jno
add
outsb
jae
in
cltd
jge
xor
in
rolb
into
lock
aaa
jmp
mov
push
pop
lods
mov
and
pop
xor
mov
subl
clc
add
scas
lods
xor
jle
or
sub
sarl
xor
push
clc
jl
pop
call
adc
sub
jmp
in
notl
add
push
test
loope
push
xchg
in
adc
rorl
outsl
andb
fisubrl
mov
cltd
outsl
mov
test
adc
sub
xchg
std
sub
in
nop
push
sub
jecxz
and
push
sti
enter
int
punpckhdq
push
mov
mov
pop
scas
lret
stos
sbb
insb
sbb
jae
pop
repnz
call
fwait
jle
stos
jae
xor
loop
repz
xchg
jle
rorb
xor
insb
push
cli
adc
cmp
popa
add
popf
mov
jb
xchg
cmp
inc
and
das
push
ret
mov
fisubrs
in
icebp
and
inc
mov
sti
mov
dec
sub
or
sbb
sahf
aas
call
sub
push
and
jo
scas
or
lret
xchg
addl
leave
daa
ret
push
mov
cmc
insb
push
ja
xchg
mov
les
out
pop
or
push
xlat
and
sbb
fadd
add
jle
faddp
imul
std
fucomi
xlat
cmc
stc
adc
and
xlat
ja
xchg
xchg
ficoms
loop
fnstenv
and
aam
xchg
ja
sahf
aas
test
lods
nop
cmc
stos
jle
jno,pn
sbb
shll
jno
loop
in
fdivl
xchg
push
adc
pop
jbe
mov
mov
jg
jg
loop
rclb
add
add
movsl
sti
sahf
jp
test
pop
cmp
movsb
mov
adc
in
hlt
push
inc
and
mov
adc
ljmp
mov
mov
inc
mov
pop
testl
fisttpl
sti
xchg
push
cmpsl
lret
pop
mov
and
inc
jbe
mov
mov
ss
mov
jp
pop
loopne
jle
xchg
lahf
neg
sub
push
mov
mov
xor
or
xor
pop
cmp
popf
rclb
pop
xchg
test
jge
xor
lret
shlb
inc
mov
ffree
jns
mov
cwtl
rorl
frstor
aas
imul
cmp
mov
xor
xchg
aaa
ds
mov
push
inc
jb
jnp
pop
icebp
insl
cwtl
jno
mov
bound
ret
pop
out
cmp
xor
fisttps
adc
and
sub
std
and
xor
lods
mov
mov
scas
addr16
hlt
insl
xchg
xchg
add
mov
push
xchg
ret
mov
sbb
mov
jne
pop
loope
in
out
mov
adc
mov
fistps
fistl
maskmovq
negl
sbb
loop
mov
ja
dec
inc
scas
xor
push
xchg
in
insl
mov
fldl
pushf
sub
or
mov
addl
xor
leave
iret
sbb
out
fldt
add
xor
or
jno
sahf
rorl
arpl
xchg
jns
dec
and
addr16
ss
adc
dec
aas
fdivrs
sub
push
js
movsb
mov
cmp
dec
push
mov
sti
in
in
dec
xchg
mov
stos
xchg
sbbl
repz
xchg
cli
mov
lcall
xchg
xor
mov
mov
inc
lea
jae
jmp
cwtl
xor
cmp
sub
jo
adc
cmp
iret
mov
mov
inc
and
lock
xor
divb
dec
sub
test
in
jecxz
ss
mov
mov
scas
mov
pop
je
dec
cmc
sbb
mov
arpl
loop
push
fwait
mov
push
mov
pop
sbb
sub
dec
lret
sbbb
sbbb
and
outsl
jge
mov
fisubrl
xor
cmc
fdivr
mov
mov
sbb
adc
insl
add
shll
or
cmp
imul
sbbb
cmp
arpl
mov
lds
push
movsb
cmc
push
sub
cmp
mov
pop
fstpt
invd
ja
mov
out
sbb
fadds
movsl
xor
jle
aam
lret
es
push
lods
sarl
mov
fcmovb
push
leave
repnz
cmp
adc
and
aam
scas
js
push
dec
and
roll
stos
mov
push
orl
idivb
sub
cmpb
mov
add
rorl
mov
sub
cmp
mov
mov
push
mov
lret
xor
push
or
dec
outsl
js
push
into
notb
adc
pop
fbstp
rolb
std
les
mov
popf
movsb
ds
or
test
jnp
jnp
mov
jge
xor
add
pop
lds
inc
mov
shrl
repz
push
fisubrs
testb
rcrb
xchg
add
jne
mov
call
movsl
mov
pushf
mov
xchg
lar
mov
shlb
jb
pop
add
mov
mov
and
xor
fstp
mov
mov
fiadds
mov
pop
xor
pop
scas
mov
mov
test
sarl
xor
pop
cmp
icebp
push
sub
cmpsb
mov
stc
mov
or
fistl
mov
sti
iret
xor
sbb
add
loop
dec
int3
push
xchg
push
negb
ljmp
xchg
in
aas
fnsave
push
xchg
xor
jnp
cmpsl
and
and
inc
sar
aad
cmc
sub
jno
pop
xchg
inc
sti
bound
inc
imul
pop
mov
inc
sbb
mov
lods
push
inc
lods
insl
sbb
jmp
push
rep
xchg
and
in
dec
jecxz
ljmp
cmp
push
ret
loope
movsb
pusha
xchg
outsl
jle
gs
mov
fst
test
cmp
enter
jnp
ret
jno
test
inc
sti
repnz
outsb
or
lods
inc
push
clc
fwait
jecxz
xorb
inc
repnz
adc
fiadds
dec
cmp
inc
repnz
jae
inc
ja
int3
scas
inc
sbb
sbb
xchg
test
imul
out
insb
mov
or
jmp
fwait
test
dec
pop
jno
pop
addr16
mov
push
cltd
in
lret
in
lods
pop
pop
das
adc
ret
sbb
inc
mov
ret
cmp
pop
pop
inc
leave
jecxz
jbe
xor
pop
dec
mov
test
cmp
cs
scas
push
stos
pop
jb
xchg
sbb
sub
movsb
bound
xchg
nop
mov
int
jle
push
cmpsb
xor
jns
xlat
das
mov
jo
ss
outsb
cmpsb
adc
repz
in
add
pop
mov
cwtl
mov
out
in
and
out
lock
lods
mov
sti
clc
dec
inc
fdivrs
pushf
sub
repnz
adc
pusha
lods
addr16
test
xor
sub
xchg
add
cmp
inc
inc
mov
stc
jnp
xor
popf
movsl
jb
and
or
lea
xchg
or
inc
cwtl
mov
xchg
add
jae
imul
pop
movsl
mov
and
sbb
cmp
mov
outsl
dec
mov
push
mov
out
lds
outsl
mov
sub
push
nop
dec
mov
ja
fsubl
out
mov
and
pusha
sbb
js
je
push
out
pop
mov
jecxz
stos
aas
push
jmp
mov
out
inc
pop
inc
mov
xchg
int3
pop
pop
fldl
lods
dec
test
loope
add
lcall
popa
mov
stc
stos
test
mov
scas
pop
sub
sub
adc
push
and
call
xchg
sti
leave
hlt
push
ljmp
pop
ficoml
mov
mov
jecxz
lcall
fcmove
shll
inc
mov
inc
into
test
mov
mov
setp
add
or
mov
or
inc
setno
cmp
cltd
jbe
inc
stos
push
lret
mov
add
pusha
shl
out
inc
clc
push
test
insb
mov
hlt
sti
cs
jns
jp
add
mov
outsb
sbb
nop
mov
sub
rcr
xlat
xchg
insl
xchg
sub
jmp
sub
pop
mov
outsb
inc
jge
jle
fsubr
jecxz
sub
jge
sub
out
push
lods
test
pop
sbb
jmp
jge
cmpsl
or
int3
aad
xchg
call
jecxz
stos
in
ret
mov
pop
and
adc
or
jne
mov
mov
movsb
mov
inc
in
pop
pop
sub
movsl
aas
sahf
jp
push
inc
in
in
jb
mov
xor
xchg
cmp
add
and
sub
fs
lret
cmpsl
sti
add
xchg
cmp
rcrl
jl
ja
loopne
push
in
jge
div
add
dec
sbb
lods
loopne
aaa
cmp
xor
mov
arpl
adc
test
and
loop
mov
rol
iret
mov
outsb
inc
push
int3
insb
test
or
mov
and
jno
inc
aas
inc
out
dec
push
add
jno
sbb
jg
dec
push
les
adc
push
sub
int3
in
pop
pop
test
mov
out
pushf
es
xchg
and
mov
and
fimull
xor
enter
add
inc
sub
subb
mov
je
in
lea
mov
inc
mov
or
das
pusha
inc
ja
fs
push
inc
int
mov
lods
loope
xor
sbb
nop
xchg
dec
loopne
fwait
mov
adc
jge
fs
add
and
test
imul
jb
mov
push
rorl
sub
cmp
fadds
lahf
dec
jecxz
jno
inc
mov
cmp
scas
jmp
dec
adc
pop
cmp
add
mov
js
fcmove
lock
lock
cmp
test
mov
add
add
push
mov
in
scas
das
rorl
xchg
push
mov
dec
mov
mov
repnz
cmpsl
into
xchg
movsl
push
in
lds
lock
jb
cmp
inc
pop
icebp
mov
lret
xor
xchg
cs
pop
cli
inc
fwait
imul
inc
push
sarl
or
cmp
lahf
lods
lods
jno
fxch
loope
push
sbb
fldcw
dec
cmp
sahf
std
cli
aas
out
jbe
movsl
lods
xor
test
cli
into
pusha
pop
mov
or
cmp
adc
and
fsubp
cmc
dec
aaa
sub
mov
or
push
sub
mov
rcrb
add
lock
xor
daa
xchg
and
jecxz
sbb
inc
ret
je
adc
in
call
cltd
sbb
adc
sahf
insl
and
pop
push
add
out
cmc
sahf
lret
inc
pusha
dec
pop
xchg
or
cmp
adc
sbb
lods
in
xchg
cmp
and
pop
mov
es
test
popw
je
outsb
adc
dec
xchg
scas
mov
cmp
xor
ucomiss
ret
push
mov
mov
mulb
cmpsl
mov
aam
jb
jns
pushf
imul
fs
jo
push
nop
mov
xor
xor
push
push
call
ja
pushf
mov
leave
int
subb
jg
pop
sti
push
adc
out
dec
xor
jae
xchg
and
rorb
xchg
nop
jo
aas
push
aad
sbbb
daa
cmc
push
pop
jne
rclb
test
lret
sahf
ja
or
mov
sbbl
mov
sti
cs
shrb
dec
or
sbb
and
push
aam
mov
sub
in
outsl
imul
movsb
in
pop
cmp
pop
sbb
es
fwait
push
push
add
cmp
lret
dec
out
push
subb
sub
inc
sarl
mov
scas
das
and
int3
test
mov
mov
popa
push
out
add
sbb
ret
js
fistps
pop
add
mov
push
popa
leavew
or
cld
out
incl
and
addr16
test
dec
test
addr16
aad
or
ficomps
fsubr
xchg
mov
in
mov
cs
sbb
out
mov
out
and
jae
lea
add
rolb
sti
cmp
xor
lret
repz
sbbl
jle
scas
jnp
xor
fiaddl
sub
sub
jp
cld
out
jecxz
jmp
clc
sbb
mov
mov
in
sub
test
cmp
jne
loope
loop
cli
mov
stc
cld
mov
das
push
push
add
jne
or
xchg
sbb
movsl
fsubrp
cmp
push
dec
or
orb
bswap
or
mov
sbbl
mov
nop
mov
cmp
in
cwtl
test
in
mov
mov
sbb
rcrl
dec
fsubrl
dec
push
lods
into
jb
cmp
imul
mov
in
lods
mov
loop
push
pop
mov
adc
andb
ss
notl
xchg
xor
aad
mov
cmp
popa
mov
les
je
dec
push
idivl
mov
push
mov
pop
daa
stos
call
cwtl
dec
mov
les
in
out
dec
push
push
push
ljmp
add
aaa
mov
pop
and
out
mov
pop
pop
dec
sub
cs
xchg
mull
mov
inc
stos
jg
decl
xor
pusha
jno
leave
add
addr16
sub
inc
int3
pop
and
mov
cmp
cmp
clc
sub
outsl
inc
int3
icebp
fwait
into
ret
test
cmpsb
pop
neg
adcb
rolb
repnz
ds
mov
jle
xchg
addb
insb
mov
movsb
mov
mov
ljmp
sub
cli
adc
push
fimuls
shlb
add
aad
jmp
inc
movsl
cmp
xchg
sub
movsl
pop
jmp
int
pushf
pusha
call
add
test
lods
push
rcl
add
jl
addr16
sbb
aad
jecxz
into
jno
insb
inc
adc
pop
mov
or
xor
jl
push
loopne
test
push
mov
fcmovbe
mov
jne
int
pop
mov
inc
or
cmpsb
mov
or
ljmp
push
inc
in
out
std
xor
stos
insl
sbb
inc
out
push
inc
mov
rcrb
int
mov
fildll
testl
sbb
mov
jecxz
repnz
jg
lret
inc
orl
enter
inc
fidivrl
sar
sub
out
nop
jb
xor
or
cmpsb
roll
pop
in
mov
std
xchg
rcr
xchg
pop
popa
and
or
push
rclb
adc
shrl
mov
jmp
add
xor
push
mov
and
loopne
cmpl
sub
or
jno
xchg
mov
lahf
leave
xor
test
scas
es
stc
icebp
or
jns
pushw
dec
cs
pop
cmp
cmp
repz
jns
es
or
push
pop
inc
jg
push
hlt
fldenv
insl
mov
xor
and
push
jnp
mov
andl
test
ret
cmp
xchg
jg
xor
mov
push
cmp
and
xchg
cmp
push
call
mov
loop
xor
or
or
and
jecxz
div
roll
mov
mov
aad
movsb
lock
xchg
inc
mov
scas
mov
popa
cwtl
xchg
insb
cmpsl
sub
lods
scas
insl
sbb
inc
enter
adc
imul
mov
cltd
jecxz
cli
add
jns
push
loope
mov
push
sbb
mov
pop
clc
push
cmp
cmpsl
ret
and
pop
mov
lahf
sub
mov
arpl
add
cmpsb
ja
enter
int
cmpsl
dec
lods
cmp
or
jno
jne
cmp
push
push
cmc
lea
in
icebp
push
sub
and
jno
orb
daa
mov
push
repnz
add
push
in
xor
pop
lcall
add
pop
mov
mov
sbb
testl
jecxz
out
mov
pop
arpl
dec
sbbl
xor
sar
iret
icebp
inc
or
mov
out
dec
add
outsb
pop
mov
xor
in
sub
fldt
mov
imull
jl
xchg
sbb
divl
push
xchg
xchg
rcrb
addb
mov
mov
insl
push
push
or
adc
inc
mov
out
mov
pop
lods
mov
push
leave
sahf
xchg
arpl
xchg
xor
sub
ja
jmp
test
gs
xlat
shrl
pop
xlat
cmpsb
sti
loop
push
push
sbb
rolb
sub
movsb
mov
jge
dec
mov
mov
aaa
hlt
sbb
fnsave
aas
inc
push
push
jb
setnp
mov
jl
imul
je
stos
dec
test
rcrl
add
scas
out
cmpsb
pop
pop
cmpsl
inc
jb
sahf
adc
mov
pop
cmp
dec
xor
xor
stos
fwait
inc
testb
add
sub
loop
lods
pop
adc
dec
add
push
push
sub
pop
xor
and
jge
or
shll
jmp
xchg
pop
push
shr
addr16
lods
das
andl
push
sbb
roll
and
das
mov
das
mov
or
jl
push
test
cmp
jmp
fimull
ret
mov
mov
mov
xor
mov
or
fstps
je
ret
ds
fcoms
mov
in
and
inc
mov
sbb
repnz
add
orb
or
iret
cld
sbb
out
jmp
imul
adc
pop
sub
fiaddl
cltd
push
lret
ja
or
pop
sub
addr16
in
scas
lcall
mov
pop
add
push
js
jp
shll
ds
push
xchg
ret
mov
cmpsb
movsb
sub
sbb
mov
pop
inc
pop
sub
hlt
shrb
mov
xor
xor
out
xlat
jcxz
mov
fnstsw
inc
addl
outsl
leave
lcall
mov
and
subb
inc
or
and
dec
mov
iret
sbb
arpl
mov
cmpsb
mov
sbb
popf
cmp
lea
push
cmp
out
dec
cmp
or
daa
add
ja
cmp
xor
inc
lea
sub
push
mov
pop
sbb
sub
add
in
outsb
xchg
cmpsl
roll
inc
test
repnz
inc
xor
jnp
or
clc
pop
ljmp
int
cltd
push
js
adc
add
loope,pn
push
sub
dec
xor
jbe
adc
sub
adc
mov
mov
dec
lds
xchg
es
pop
sub
fdivrp
xor
xchg
mov
subl
ret
sbb
cmp
jb
outsl
cmp
add
mov
sbb
mov
nop
or
lret
test
inc
call
scas
leave
mov
cmp
mov
dec
mov
movsl
inc
ss
xchg
into
xchg
xchg
lahf
mov
rcrl
add
ds
adc
lock
scas
mov
pop
push
push
jb
js
test
popf
xor
imull
das
add
or
adc
lds
xchg
mov
adc
cmp
rcrl
or
pop
lahf
mov
lods
addr16
dec
dec
pop
xchg
scas
sbb
jge
jmp
jne
or
pop
fmull
test
mov
or
mov
pop
sbb
ja
ljmp
lods
outsl
mov
sub
std
pop
mov
hlt
fistps
cmp
sub
and
mov
dec
jae
pop
push
loope
adcb
push
bound
and
jbe
lret
cli
fbld
cli
push
sti
sub
and
test
inc
sub
dec
cmpsl
push
cmp
push
inc
dec
jecxz
sbb
add
nop
add
and
dec
sub
push
pop
xchg
sub
mov
xor
xchg
fildll
into
xchg
xor
test
sbb
clc
stos
or
icebp
fwait
dec
test
aad
bound
cld
lret
fnstcw
into
cmp
xor
mov
mov
sahf
shr
cmp
shlb
sub
sahf
pop
push
data16
jbe,pn
les
bound
call
xchg
popl
mov
orl
push
inc
xor
mov
push
xchg
fst
sar
ficompl
mov
and
jnp
mov
lods
jns
pop
jp
jl
fdivl
pop
jecxz
in
loopne
lods
clc
stos
in
sbb
bound
testb
fimull
repnz
inc
mov
push
lret
xchg
fwait
adc
pop
ss
sti
add
xor
int3
push
mov
out
stc
or
das
andb
cmp
fbld
add
pop
mov
sub
dec
xor
xorb
movsb
mov
cmp
repz
movsb
popl
nop
and
aam
or
fwait
out
int3
aas
push
dec
adc
inc
pop
sti
jmp
aam
xor
mov
cmp
push
loope
and
flds
xor
dec
xchg
jne
fwait
imul
and
ss
cmp
stc
test
iret
popa
and
fldenv
cmpsl
add
pusha
mov
in
int3
xchg
sbb
push
pop
popl
pop
imul
test
roll
in
cld
rolb
gs
sbb
clc
andb
adc
es
xlat
out
adc
dec
imul
cltd
pop
lcall
jns
ret
sarb
iret
inc
pop
test
pop
push
mov
xchg
pop
add
adc
inc
mov
nop
mov
in
add
and
jnp
shll
xchg
push
int3
cmp
jle
test
adc
leave
lods
mov
mov
cld
dec
xchg
insb
repnz
adc
int
adc
sub
and
cmp
cmp
xor
adc
das
adc
jo
ljmp
test
in
out
mov
movsl
push
shll
sbb
popa
mov
push
sub
xchg
xor
and
adc
jae
mov
dec
mov
xor
fmuls
sbb
mov
test
lds
cli
out
fdivrl
pop
in
cmp
inc
cld
ljmp
xchg
mov
test
movsl
add
out
in
cmc
mov
xchg
cmpsb
arpl
sti
testl
push
pushf
fistl
mov
push
or
in
push
mov
sub
push
mov
jne
add
cmp
xor
and
inc
xlat
insb
jb
jns
fists
and
jno
dec
add
aad
test
std
lea
add
dec
or
int3
push
xchg
lods
dec
in
mov
mov
pop
popa
fsts
cld
mov
inc
mov
fnstcw
cmp
loop
cmp
mov
movsl
cmp
iret
dec
adc
in
fwait
sbb
xor
adc
pop
sbb
xchg
fcmovb
push
sub
cmp
inc
push
rcl
rol
sub
cld
add
mov
jo
popa
stc
cmpsb
sti
fs
lret
adc
jle
jae
cmp
shrb
or
pop
pop
lds
sub
jge
jnp
out
xor
popa
push
hlt
loop
mov
mov
movsb
xchg
test
jns
rcll
mov
insl
scas
lahf
mov
sahf
and
cmpsb
iret
scas
lahf
cmc
ja
ljmp
push
dec
lods
fadd
xor
pusha
sub
fisubrs
dec
pop
jle
pop
jle
imul
cmp
jno
cwtl
loope
lcall
jns
flds
mov
enter
outsl
subl
mov
sbb
hlt
jno
push
push
dec
bnd
repnz
xchg
in
xor
sub
lret
mov
jp
sbb
push
push
scas
adc
xchg
xor
jg
out
test
mov
pop
mov
jmp
int3
lahf
mov
shll
call
gs
mov
mov
jmp
leave
jns
ret
cmp
xchg
call
mov
es
adc
mov
mov
shrb
dec
pop
out
test
imul
dec
mov
nop
test
pop
add
subb
out
leave
pop
shll
sub
or
enter
dec
push
cmpb
rcrb
xchg
sub
xchg
push
daa
xchg
arpl
pop
sbb
sbb
iret
cmp
and
jp
stc
pop
test
mov
or
enter
cmovno
xor
sar
cmpsb
insb
add
fstpl
xor
adc
push
dec
xchg
inc
imul
mov
sub
aaa
lret
jns
push
jecxz
mov
mov
xor
fiaddl
js
or
adc
jbe
fcoml
dec
jl
and
test
or
sbb
out
addr16
sub
lcall
int3
xchg
jle
ret
ret
sub
out
push
cmp
pop
bound
hlt
push
inc
mov
shlb
and
in
dec
xchg
sub
add
xchg
stos
fs
outsl
stc
push
sbb
cmp
shl
aad
adc
jl
cmpsb
outsb
dec
test
test
stos
imul
jae
lret
jl
movsl
sbb
mov
call
stos
mov
pop
movb
mov
popa
or
xchg
mov
or
pusha
mov
ds
sbb
xchg
push
mov
push
jl
nop
addr16
push
xor
add
push
shlb
or
push
push
or
pop
mov
sahf
into
dec
sub
pop
enter
jp
jo
data16
pop
lahf
aam
push
iret
fsubrl
imul
rcrb
fs
test
cmp
pop
adc
out
test
sub
addr16
out
repnz
test
push
pop
mov
jnp
xor
jg,pn
test
aam
push
js
lock
mov
iret
mov
test
mov
js
push
push
xchg
and
fisttpl
xor
dec
lret
jb
ljmp
xorb
mov
or
mov
inc
clc
frstor
and
add
aaa
inc
out
ud2
adc
dec
or
and
cmp
call
jb
jge
push
cli
clc
sbb
add
push
sbb
mov
cwtl
enter
push
push
or
push
out
dec
mov
das
push
sub
mov
enter
jns
adc
lods
add
int3
dec
sub
orb
aas
sub
xor
sub
mov
adc
mov
and
push
loopne
mov
push
inc
adc
into
add
push
sub
mov
bound
adc
xlat
sarl
vmovdqu
mov
test
loope
xor
xchg
mov
dec
pop
or
das
or
push
out
jp
pop
dec
jl
dec
mov
fbstp
lcall
imul
dec
and
andl
testb
add
jecxz
adc
into
mov
insl
enter
mov
cltd
call
clc
data16
inc
movsl
sbb
fwait
enter
es
das
lds
inc
mov
pusha
and
sbb
pop
fbstp
nop
sbb
popf
sbb
fnstsw
inc
pushf
pop
xor
pop
dec
xorl
fistpll
push
inc
xchg
xchg
push
jecxz
push
xchg
test
inc
outsl
push
cmp
mov
mov
xor
fistpll
push
jno
push
notl
or
into
repz
shrl
fcompl
mov
jle
inc
ret
in
frstor
mov
leave
dec
sub
lea
sub
les
add
pop
test
rol
fdivrp
addl
adc
sarl
ficoms
xor
aaa
xchg
mov
stos
add
aad
cmpsb
fs
mov
out
inc
addl
push
jnp
inc
jp
mov
dec
or
movsb
into
sbb
mov
dec
and
out
dec
pop
xchg
cltd
pop
cmc
sarb
mov
mov
movsl
dec
add
cmp
cmc
fldt
xchg
scas
inc
or
mov
pop
xorl
mov
cmp
popf
les
int3
mov
in
push
mov
aaa
test
out
xlat
mov
gs
pusha
xor
cmpsl
in
test
or
dec
adc
adc
sahf
add
cmp
int3
in
mov
adc
sub
pop
je
insb
or
scas
mov
push
aas
mov
les
add
fmulp
and
ljmp
jne
sub
and
mov
notb
jno
push
or
jmp
dec
sbb
xchg
or
and
inc
fcompl
mov
dec
xor
xor
outsl
lret
mov
dec
add
inc
mov
out
jne
mov
dec
rcl
popa
dec
or
lea
inc
je
mov
push
imul
xchg
fsubs
popf
cltd
aam
xchg
cwtl
lea
cmc
mov
int3
popf
std
mov
xchg
in
push
mov
and
jno
mov
inc
pop
ljmp
inc
adc
je
testl
js
fs
jnp
aas
dec
test
push
stc
add
icebp
ljmp
roll
fwait
sub
loop
lea
loopne
mov
mov
pop
mov
outsl
push
lret
lods
mov
test
les
dec
jne
aaa
sarb
push
jle
pop
pop
cmpsb
cmp
mov
lods
and
imul
loopne
xchg
cmp
inc
stos
xchg
xchg
cmp
repz
pushf
stc
popa
add
xchg
sbb
pop
std
in
xor
roll
ss
fwait
in
mov
rcr
movsl
loopne
mov
icebp
insl
fisttpll
outsb
dec
imul
shll
icebp
mov
test
cmc
les
iret
push
jbe
and
push
mov
adc
jecxz
aaa
nop
aam
xor
xchg
stc
inc
cli
push
fsubp
and
cli
insl
inc
mov
mov
xchg
and
or
mov
inc
jmp
push
lods
addr16
fucomip
cmc
adcb
loopne
insb
mov
icebp
pop
jl
mov
inc
mov
sarb
inc
in
sub
clc
or
jb
push
mov
push
mov
repnz
jbe
xor
sbb
xor
outsb
xchg
cltd
in
ss
stos
and
outsl
and
cwtl
xor
call
dec
std
cmp
mov
daa
loope
or
inc
mov
cs
clc
jg
push
push
inc
nop
xchg
lret
imull
cmp
pop
ja
shlb
stc
mov
xor
iret
popa
dec
mov
or
sbb
out
mov
inc
push
mov
fldl
lret
movsb
pop
mov
sarb
lea
daa
xchg
sub
xchg
push
leave
addl
push
mov
xchg
jns
or
dec
out
sub
cmpsl
js
adc
mov
pop
push
dec
xchg
jno
xor
jb
outsb
and
push
lds
jne
mov
scas
xlat
cwtl
aam
or
insl
mov
inc
in
fdivl
test
cmp
je
mov
add
sub
mov
xlat
into
pusha
ds
repz
adc
addb
fistps
mov
inc
cld
ficoms
lods
cs
test
enter
mov
sbb
mov
cmpsl
aam
subl
push
mov
add
enter
mov
xchg
andb
loope
dec
movsl
push
or
sub
push
cmp
mov
lods
dec
out
add
lret
loopne
dec
cs
jb
out
mov
xor
mov
mov
int
leave
jns
add
lea
cltd
mov
pop
mov
push
push
pusha
or
mov
bound
mov
push
add
aas
sub
cwtl
lahf
push
jg
shlb
mov
and
cld
mov
dec
jecxz
js
mov
jne
out
stos
push
daa
mov
fisttps
jmp
pop
dec
scas
leave
enter
sbb
enter
out
xchg
fsubrl
push
test
fwait
adc
cmp
cmpsw
mov
mov
les
int3
add
fsubl
inc
adc
repz
clc
add
in
mov
jnp
adc
jno
push
stos
icebp
mov
push
push
jo
scas
mov
mov
fstpl
inc
add
and
scas
std
and
jle
cmp
push
stos
loope
jb
mov
adc
loopne
push
out
jl
mov
jge
imul
dec
nop
push
cwtl
mov
decb
lds
aad
inc
aad
inc
jb
jne
xchg
xchg
call
jecxz
cmp
call
inc
or
lock
dec
je
mov
adc
push
xor
popf
fisubrs
add
clc
into
sub
ficompl
stc
aaa
inc
cmpsl
jns
je
add
cld
pop
ljmp
jecxz
icebp
mov
add
test
lds
pop
gs
xlat
xor
fldt
mov
dec
pop
lret
sahf
test
mov
ljmp
out
push
iret
pop
pop
popf
jae
pop
int3
lds
into
or
xchg
mov
ljmp
jbe
mov
mov
inc
rclb
dec
out
mov
insl
leave
or
mov
dec
outsl
sbb
sbb
mov
or
inc
dec
mov
es
hlt
inc
pushf
pop
aas
movsl
popf
mov
xor
cmp
pusha
jecxz
adc
stos
ds
and
dec
inc
fs
lahf
std
inc
mov
mov
int
push
leave
sub
aaa
mov
lock
mov
xor
or
mov
xchg
xor
inc
roll
icebp
dec
xchg
push
mov
cltd
dec
jnp
test
stc
dec
shl
cltd
push
test
test
xchg
mov
loopne
sbb
iret
imul
daa
icebp
or
add
out
mov
lods
adc
xor
xor
popl
repz
add
cmp
subb
bound
orb
call
xchg
xchg
xchg
xlat
pushf
clc
shll
push
stos
cmp
stos
rcrb
sub
push
fs
push
lods
mov
int3
push
cld
leave
popf
fucomip
mov
push
adc
mov
mov
mov
hlt
push
dec
jb
cwtl
dec
jg
mov
add
jp
sarl
mov
ljmp
cmp
iret
in
je
hlt
hlt
xor
sbb
call
mov
data16
fbstp
mov
popa
add
push
lret
shll
cmp
xchg
inc
fisubrs
iret
movb
std
push
aaa
sbb
cmp
dec
nop
fistpl
pop
daa
cltd
call
mov
mov
xlat
push
xchg
add
dec
call
cmp
rolb
lock
mov
mov
rorb
in
scas
cmpb
test
push
jb,pt
xor
dec
lcall
xchg
jne
test
xchg
xor
pop
fucomi
push
imul
jb
fnstsw
iret
test
in
cs
pop
daa
in
or
test
addr16
adc
push
sbb
cltd
cmpsb
loopne
bound
xor
test
shrb
cmp
jno
pop
push
flds
inc
lea
mov
sub
sub
mov
shlb
in
mov
dec
and
addl
mov
or
sub
gs
mov
jne
cs
mov
lods
xchg
inc
cmp
fidivl
or
fnsave
lcall
hlt
xchg
xchg
mov
js
scas
test
or
mov
jb
push
ljmp
ss
leave
sub
and
xchg
stos
in
mov
sub
dec
sub
sub
popf
sahf
add
mov
insl
fsubrl
fists
js
adcb
aaa
dec
addr16
xchg
push
mov
insl
inc
adc
xchg
aaa
cs
dec
fs
call
lds
in
or
sub
pop
aas
fcmovne
push
push
out
inc
mov
or
mov
sti
lahf
sti
rcr
and
jg
jb
jecxz
inc
or
ficoms
stc
popa
push
repnz
outsb
js
cmpsb
sub
inc
in
je
bound
jb
aas
inc
mov
jnp
rcll
pop
xchg
pop
mov
lcall
cmp
das
js
inc
add
push
mov
ret
push
xor
cmpsl
lahf
orb
cmp
pop
pop
add
push
aas
lods
xchg
scas
repz
jae
arpl
jecxz
sbb
hlt
sbb
idivb
jl
mov
add
xor
mov
hlt
jp
mov
hlt
lahf
rorb
adc
xchg
scas
pop
mov
push
insb
inc
das
daa
pop
arpl
jne
cmp
repnz
dec
lea
sbb
mov
xor
dec
decl
mov
fcmovnu
adc
mov
std
icebp
or
cmp
inc
iret
sub
push
inc
xchg
aaa
xor
sti
in
add
aam
movsl
pop
sbb
faddp
orl
jge
fsubl
leave
push
leave
daa
leave
pop
movsl
dec
push
out
decb
lret
mov
inc
data16
ret
and
or
lods
cld
dec
cmp
lds
push
or
push
bound
stos
addb
adc
testb
in
fists
das
aaa
dec
pop
insl
sbb
cmovle
cli
cmp
lods
xchg
fnstcw
gs
sub
push
lcall
jnp
aaa
fisubs
lahf
mulb
testb
and
sbb
push
loop
cli
hlt
aad
jge
pop
add
pop
mov
test
and
pop
pop
das
xchg
push
lret
inc
push
xchg
int3
insb
xor
lcall
mov
cmpsl
roll
outsb
cmc
cmp
daa
xchg
inc
lea
push
add
mov
jno
mov
lahf
push
pushf
add
inc
or
aaa
inc
xchg
out
inc
adc
xor
push
fildll
rcrl
shll
cmpsb
xchg
adc
pushf
pop
inc
mov
out
hlt
jae
jb
xchg
push
fcompl
dec
ja
mov
shrb
cld
sti
and
pop
xor
movsl
sbb
sbb
adc
inc
mov
xor
jmp
jns
roll
arpl
mov
cs
xchg
mov
add
ljmp
in
pop
insl
push
addr16
lret
leave
fstpt
jmp
fnstsw
inc
shl
mov
pushl
or
jg
dec
ret
out
aad
sti
ds
movsl
mov
mov
cmpsl
lret
enter
or
enter
sahf
xchg
scas
adc
sub
jmp
push
scas
in
mov
and
lods
xor
mov
sahf
xchg
mov
lret
dec
xchg
push
xchg
or
push
mov
push
inc
inc
inc
ret
mov
loopne
xor
mov
pusha
adc
lcall
mov
xchg
or
in
nop
xchg
jge
lcall
lods
rcrl
mov
sbb
and
and
xor
pop
push
out
adc
popa
or
pop
mov
sbb
pop
out
arpl
sbb
adc
xchg
jle
jae
stos
fwait
stos
and
lret
scas
push
dec
aaa
pop
loopne
repnz
std
mov
mov
sbb
mov
jae
cmp
xchg
ljmp
dec
jle
cmpsl
in
fcompl
dec
popaw
pusha
cmp
cmpsl
jecxz
enter
aad
lret
sub
lret
xchg
xchg
imulb
ret
sarb
ss
ljmp
xor
add
nop
out
xlat
xor
pop
dec
jl
in
xor
inc
int3
lods
jmp
mov
outsl
pop
cmp
cmc
mov
pop
fisttpl
lods
adc
or
cld
sahf
push
scas
andl
loop
sub
xor
bound
ret
lfs
dec
xchg
mov
or
andl
mov
push
xchg
inc
lea
ds
scas
clc
sub
jb
shr
outsb
xor
jbe
dec
mov
push
hlt
scas
cmp
insb
and
out
mov
or
cmp
lock
push
stos
inc
jle
lods
mov
lods
loopne
out
and
push
mov
sub
push
push
stos
add
mov
mov
jmp
xchg
cmpsl
adc
sub
jae
into
flds
xchg
inc
adc
add
into
insb
js
sub
or
movsb
icebp
adc
mov
in
jne
sbb
xchg
cmp
loop
adc
dec
lea
lock
jnp
fadd
cwtl
pop
aad
jnp
ljmp
insb
push
mov
gs
test
bnd
jbe
jle
loope
inc
xor
in
jecxz
rcr
sub
xchg
pop
movsl
outsl
aam
pop
in
jb
push
inc
out
and
jle
push
and
xlat
test
push
push
push
cltd
test
mov
and
jo
push
mov
cmp
out
shlb
call
adc
repnz
pop
add
lods
fistps
xchg
dec
sbb
adc
push
lods
push
into
movsl
daa
ss
incb
mov
aas
fisttpll
movsb
stc
mov
mov
jmp
sarb
int3
sbb
repnz
mov
aad
dec
loop
pop
lea
and
popf
cmp
add
pushf
shlb
test
arpl
xor
ret
rol
dec
inc
roll
push
mov
sub
xchg
and
das
inc
push
mov
fisttpll
jb
pusha
in
sbb
mov
mov
inc
or
dec
mov
call
add
sbb
pop
fstps
ret
pop
rcl
js
and
fstpl
jge
aas
cmp
sbb
inc
lcall
imul
jmp
jg
mov
jle
mov
mov
mov
jo
xchg
sub
dec
jo
outsb
movsl
sub
or
stc
imul
test
xor
cmp
dec
pop
fbld
pop
xor
icebp
dec
jmp
popa
or
popf
mov
pop
push
into
sub
inc
mov
pop
cmp
push
dec
inc
and
in
iret
xchg
rcrl
pop
cmpsl
pop
fcomps
jae
adcl
inc
dec
fists
repz
je
and
push
jl
cmp
arpl
fs
pushf
push
fiadds
jne
push
mov
push
insb
or
xchg
adc
fdivrp
sbb
lods
mov
leave
lock
dec
mov
into
mov
mov
jno
fcmovne
loope
arpl
stos
xchg
loop
daa
inc
mov
lret
js
and
loopne
xchg
lahf
insl
insb
cmp
or
in
imul
add
pop
mov
sbb
xlat
loop
mov
in
out
fnstsw
sbb
ftst
mov
sub
lods
fs
lahf
fcmovnu
je
mov
sbb
mov
lret
dec
pop
loop
cmp
mov
inc
xchg
push
dec
test
cmpsl
outsl
std
push
imul
imul
xlat
mov
movsb
or
add
pop
mov
xchg
add
mov
imul
cmp
cli
jecxz
call
adc
mov
xchg
sub
cli
sbb
pop
pop
adc
xchg
dec
adcb
int
out
leave
xchg
adc
sub
mov
lret
imul
push
jl
pop
mov
sub
dec
imulb
mov
or
ljmp
dec
outsb
imul
nop
mov
je
mov
js
outsl
popf
sti
xor
das
mov
jbe
adc
stc
sti
mov
ds
xchg
jno
cld
mov
inc
arpl
adc
je
sti
fsts
in
xor
mov
stc
stos
movsb
pop
test
jns
dec
mov
je
movsb
test
adc
icebp
aad
shlb
xchg
in
sti
gs
hlt
shll
inc
shl
out
sahf
sarl
pushf
lcall
sahf
push
call
jg
lds
cmpsl
mov
je
xor
cli
daa
aaa
jecxz
cli
in
pop
push
bound
adc
mov
push
inc
cltd
push
fwait
cli
cmp
push
test
daa
imul
vmread
movsl
mov
fwait
pop
and
and
inc
xor
cmpsl
dec
and
call
sub
icebp
xchg
sahf
cs
test
into
mov
out
mov
and
or
add
push
out
je
movsb
add
int
dec
pop
push
add
test
pop
cmpl
out
or
sub
mov
addr16
sub
in
les
push
into
fldcw
sub
pop
ljmp
sbb
loope
ret
mov
mov
xor
xchg
dec
and
rolw
fxch
jnp
or
inc
ja
push
popa
lret
pop
mov
stos
sub
xchg
inc
das
pop
sar
jbe
inc
cmp
mov
jae
jge
and
mov
lods
mov
or
mov
sub
addr16
push
or
icebp
jno
loope
sub
mov
sub
mov
cmpsl
mov
fcoml
jae
mov
mov
loope
es
mov
clc
add
sbb
incb
dec
mov
pop
add
mov
movsl
pop
mov
jmp
cltd
test
test
jb
dec
push
jg
or
aam
psllw
sahf
push
jle
push
xlat
inc
mov
and
sarl
push
push
hlt
or
push
jg
lret
adc
sub
push
sahf
adc
adc
loope
sub
inc
movsl
nop
je
imul
and
xor
mov
in
int3
dec
aas
scas
sbb
push
daa
scas
cli
mov
mov
dec
out
xor
fnstsw
sti
mov
mov
popf
mov
bound
test
jne
cmpsl
icebp
loopne
add
popa
mov
imul
in
xchg
xchg
and
je
dec
int3
cwtl
sub
push
das
fidivrs
into
xor
push
stc
xor
aam
in
push
sbb
outsl
fsubl
mov
xchg
fadds
popw
jp
mov
dec
loopne
arpl
ja
in
mov
mov
jge
leave
loope
xchg
aad
call
mov
mov
hlt
and
repz
imul
repz
xchg
jl
icebp
push
jg
sub
popl
out
pop
pop
inc
test
jle
mov
mov
push
push
jnp
nop
mov
jp
xchg
push
mov
out
test
sbb
xor
or
cmp
leave
outsl
pop
jl
xchg
lcall
pusha
inc
test
xchg
jnp
mov
cmc
mov
in
inc
cwtl
loop
dec
mov
mov
push
out
xor
leave
mov
jne
cmp
and
add
icebp
dec
popl
adc
mov
lret
mov
mov
arpl
lret
movsl
add
mov
sbb
push
dec
into
push
shll
fs
pop
js
xchg
jl
jno
cmp
scas
mov
inc
lea
aas
jmp
pop
test
jmp
leave
lret
ret
ljmp
xor
aaa
insb
nop
cmp
cmc
adc
lock
and
mov
jl
lds
lahf
inc
xor
imull
fdivl
xchg
add
fistpll
push
cwtl
and
aas
sbb
cmpsl
ja
adc
ss
mov
movsb
dec
hlt
ror
dec
stc
lods
jmp
push
movl
movsb
xor
scas
pop
or
hlt
inc
repz
cmp
sbb
dec
push
daa
jmp
je
adcb
insb
cltd
cmp
xchg
mov
pushf
dec
pop
in
bswap
and
adc
xchg
add
add
mov
test
xchg
add
or
and
nop
sub
rcr
xor
shlb
je
push
push
push
mov
sbb
out
push
xor
xorl
lret
in
es
in
cwtl
xor
push
mov
or
ret
jb
mov
jle
mov
cwtl
add
xor
push
arpl
xorl
adc
xor
mov
leave
jge
add
jne
xchg
or
addr16
sbb
push
xor
push
and
stc
pop
fstl
pop
sbb
mov
enter
or
loop
or
sbb
add
mov
mov
dec
daa
push
xchg
sub
mov
sub
and
into
add
mov
pop
push
sbb
aas
aad
out
int3
shrl
in
ja
xchg
repnz
xlat
dec
xchg
push
test
xchg
pop
lret
xor
adc
outsl
cs
jnp
out
sub
inc
pushf
xchg
sar
mov
xchg
add
sbb
mov
pop
sbb
mov
lods
mov
aad
mov
lret
add
sti
fcmovnu
test
int3
inc
sub
insl
mov
adc
xchg
lea
mov
mov
dec
imul
push
int3
xchg
push
iret
pop
xchg
pop
and
and
mov
push
test
adc
mov
cmpsb
rcrl
popa
leave
dec
push
lcall
mov
pop
lds
dec
jge
mov
jb
pop
push
stos
sbb
ret
std
adc
fld1
inc
jle
mov
pop
stos
lahf
inc
and
in
les
cmp
into
icebp
xchg
mov
mov
xchg
subl
inc
fistpll
and
inc
adc
xchg
mov
idivb
mov
fistps
pop
pushf
xor
xchg
mov
cmpsl
in
into
jne
xor
icebp
and
rorl
jnp
sbb
daa
mov
out
pop
and
bound
repz
std
rcrl
pop
dec
sahf
mov
mov
adc
jecxz
ja
add
sti
and
push
xor
imul
adc
jl
popf
sub
sahf
and
adc
clc
inc
add
repnz
imul
ret
clc
jne
and
inc
popf
xchg
in
sahf
pusha
mov
test
fildll
imul
das
push
mov
ret
pusha
sub
repnz
push
add
cmp
and
insl
push
adc
xlat
jno
adc
mov
push
lds
pop
jge
repz
into
into
mov
cmp
sbb
mov
lock
inc
mov
sahf
xchg
cmp
cmp
cmpsl
cmp
jb
push
or
sbb
js
mov
bswap
adc
adcb
notl
jmp
in
enter
adc
and
xor
xchg
in
sub
clc
in
sbb
pop
dec
pop
enter
push
fnsave
nop
enter
loope
xor
iret
scas
xchg
xor
mov
mov
inc
dec
push
mov
adc
xor
lds
mov
pop
and
cmp
cmp
jno
xchg
pop
jecxz
pop
push
es
pop
mov
imul
pop
xor
jnp
sbb
dec
push
mov
add
es
add
lcall
addr16
into
cmp
pop
sti
adc
roll
fcmovnbe
pop
lcall
in
aas
test
scas
lock
xchg
ret
lret
cmp
mov
insb
test
test
push
sub
icebp
mov
pop
in
icebp
imul
lret
and
sub
nop
push
and
or
aas
sti
push
xchg
in
sti
lock
jmp
rcll
cmp
cwtl
cltd
mov
mov
aam
jecxz
xchg
into
lods
push
xorl
cmp
unpckhps
mov
loopne,pn
cmp
dec
movsb
push
cmpsl
xchg
test
or
int
fidivl
repz
pop
mov
rol
addr16
loop
fistpll
cmp
or
xchg
mov
mov
adc
or
jge
mov
ljmp
adc
xchg
add
cli
pop
mov
insb
xchg
push
mov
inc
sbb
pop
ja
xor
mov
loopne
aam
jnp
mov
jo
lret
ficoml
out
xor
xchg
cli
cs
insb
xchg
cmp
test
lcall
cmpsb
pop
xor
jmp
insb
cmc
call
fildl
xchg
ffree
mov
push
fwait
mov
mov
dec
stc
sbb
xchg
shll
sbb
test
pop
sub
jno
jmp
push
add
jg
in
pop
popa
push
inc
jle
jb
pop
xchg
cmp
mov
iret
jg
and
out
into
mov
mov
or
icebp
in
adc
pushf
ss
rcrl
test
adc
add
xchg
add
and
sub
iret
adc
pop
movsb
sahf
mov
imul
and
sarl
lds
add
ficoml
call
shlb
sarl
outsb
call
out
push
daa
xor
test
sbb
scas
shlb
cmpsl
sbb
out
outsb
push
mov
lods
push
or
inc
lret
xchg
adc
lds
loop
sub
rcll
shlb
dec
lret
test
or
mov
mov
repz
ret
dec
jbe
add
xor
pop
adc
into
test
push
std
jno
in
fadds
cmp
stos
rorb
push
jno
xor
das
xlat
mov
lods
in
push
sahf
xchg
or
mov
adc
xor
add
pop
inc
xor
dec
push
or
hlt
sub
adc
push
pop
pop
xor
ret
push
mov
push
stos
adcl
dec
in
push
movsb
loopne
inc
cmp
out
jb
pop
mov
rclb
lea
je
in
fwait
inc
gs
and
and
fldcw
rcll
inc
sbb
lahf
outsw
dec
push
xor
enter
movsb
fdiv
ja
shll
inc
stos
cmc
mov
cmp
push
push
and
rorl
mov
mov
jecxz
jecxz
add
inc
into
js
or
mov
aam
jnp
popa
rcrb
sbb
in
sarb
adc
xchg
push
jp
inc
mov
xor
mov
movsl
pop
cmp
cs
rorb
cmp
imul
xchg
stc
mov
lret
popf
pusha
xor
add
cs
rorl
jne
in
shl
sbb
shrl
scas
and
jecxz
xchg
cwtl
push
inc
jp
mov
cli
jb
push
dec
inc
adc
xor
rclb
fmul
pop
mov
add
int
gs
push
scas
loopne
cmp
ljmp
scas
inc
xor
imul
jle
mov
inc
jnp
jl
push
lock
cmp
inc
dec
pop
pop
in
in
iret
inc
mov
inc
mov
adc
jae
sub
sahf
fnstenvs
in
mov
clc
std
pop
lods
lcall
stc
dec
icebp
dec
pop
cmp
mov
jo
xor
clc
cs
push
test
or
sbb
js
xchg
dec
inc
repnz
fildl
outsl
rcll
lcall
gs
lds
pcmpgtb
xchg
pop
lods
adc
data16
daa
pop
into
shlb
mov
lret
insl
fs
push
fiadds
sub
mov
lds
inc
pop
subl
in
fimuls
jo
adc
jg
pop
xchg
xchg
fsubs
mov
in
inc
jo
dec
faddl
rorl
out
mov
adc
inc
push
aad
addb
dec
sar
adc
fwait
js
xchg
mov
mov
ficoml
cmp
aaa
add
dec
rcll
xchg
jle
sbb
or
pop
mov
push
into
repnz
push
cs
jnp
loop
addb
sahf
cmp
cmpb
and
popa
mov
popa
pop
and
inc
sarb
fistl
in
pusha
inc
inc
js
scas
mov
leave
add
in
mov
dec
sahf
pop
aas
cmp
fiadds
dec
dec
push
lret
sysenter
std
ja
dec
xor
icebp
shlb
hlt
movsl
lock
jnp
push
adcb
mov
sbb
sbb
jo
adc
lock
popa
mov
cmp
sarb
mov
mov
insb
sub
pusha
pushl
stc
imull
push
fnstsw
mov
adc
push
and
and
int
fcoml
lea
js
int3
jmp
jp
dec
out
stos
and
xorl
pop
mov
push
xor
xor
jne
ret
dec
mov
cmc
jo
mov
or
xor
and
rol
mov
xlat
rorl
push
mov
mov
xchg
out
xchg
ds
cmpsl
dec
out
blsic
jnp
jo
cmp
mov
mov
fcmovnu
arpl
int3
mov
and
sahf
ja
mov
jnp
push
int
and
add
dec
mov
paddq
bnd
sub
sbb
xchg
mov
mov
cmpsl
push
stc
test
xchg
ret
sub
cmpsb
mov
call
xor
les
and
mov
and
xchg
or
inc
aas
jns
aam
dec
in
pop
mov
scas
orb
out
push
imul
out
jns
popa
and
fnstenv
dec
out
xor
mov
repz
sbb
in
pop
pop
push
pop
popf
jp
lret
xchg
dec
dec
xchg
cmp
cwtl
out
sub
mov
fsts
sbb
mov
push
ja
fwait
out
addr16
sar
mov
cmpsb
dec
xchg
lods
dec
bound
shll
enter
movsl
lahf
push
dec
mov
jle
xchg
stos
js
push
ljmp
push
in
add
push
shlb
lahf
shll
push
mov
adc
loopne
cmp
addb
pop
and
mov
cld
inc
jmp
push
dec
or
and
pop
test
outsl
test
pop
mov
push
leave
je
lds
push
rcrb
stc
push
scas
add
mov
pusha
cmp
jecxz
cltd
and
dec
fs
int
popl
ds
mov
xor
pop
jo
in
xor
das
xchg
insl
push
xor
push
daa
push
xchg
repnz
roll
mov
imul
test
aas
aaa
mov
xchg
fucomp
mov
in
mov
xchg
out
mov
mov
outsb
sbb
push
stc
xchg
scas
iret
sbb
sbb
std
jecxz
sub
ret
pusha
cmpb
shlb
jp
dec
mov
and
fmul
jbe
rdmsr
xchg
pop
mov
jae
lds
das
push
in
pop
ret
fdivl
mov
iret
aas
xchg
jecxz
jae
mov
push
push
dec
jns
int3
lahf
cld
push
loopne
shr
popa
bound
popf
shr
jle
sub
add
mov
lret
shlb
and
jmp
add
aas
mov
cmpl
adc
lea
jl
imul
hlt
cmp
fwait
push
inc
xor
jne
mov
xor
pop
or
lods
js
inc
sbb
xchg
xchg
leave
sti
shll
mov
cld
mov
cmp
jg
mov
jg
ds
sub
pop
les
inc
aam
int3
add
cmpsb
sub
pop
jmp
add
push
mov
ret
mov
movsl
inc
lcall
lods
out
movsb
jle
cs
ljmp
jmp
dec
sbb
daa
add
popf
add
jmp
fnstenv
adc
insb
add
rclb
lds
lahf
outsl
aaa
ss
cmc
repz
mov
push
rorl
pop
or
aas
and
pop
mov
xchg
jp
andl
icebp
pusha
dec
lret
xor
or
mov
push
jge
jne
jmp
pop
aad
clc
xorb
adc
xchg
push
aas
mov
and
dec
call
lret
leave
mov
aam
push
repnz
inc
shrb
cmp
bound
push
inc
jl
pop
lahf
jbe
shll
jl
sbb
jl
jbe
jne
ljmp
imul
mov
mov
jmp
sbb
inc
adc
notb
jmp
addr16
add
mov
adc
out
add
cmpsb
mov
or
cs
pushf
xchg
int3
push
in
jp
inc
stc
fdivrl
enter
sub
scas
cmp
fldenv
mov
into
out
add
jno
and
repz
jne
sub
int3
sub
mov
add
inc
add
jns
or
fnop
xchg
testl
cmp
push
loope
push
sbb
xor
xchg
or
pop
dec
scas
test
and
fcompl
or
int3
fiaddl
add
sub
into
fnstcw
and
inc
popa
sbb
inc
addb
pop
mov
imul
popf
mov
push
dec
dec
ljmp
negb
leave
test
jmp
jnp
jb
mov
sti
pop
mov
mov
xor
mov
cmp
sbb
sub
out
imul
mov
ss
leave
dec
jae
mov
call
xor
dec
hlt
and
sub
outsb
rcrl
inc
mov
sub
or
sar
sbb
sbb
dec
push
clc
stos
lods
outsb
mov
add
shlb
and
fmul
repz
pop
pushf
pop
jb
hlt
mov
inc
cmp
jl
jle
mov
and
pop
jns
dec
mov
std
insb
popf
dec
mov
xchg
fisubs
data16
xor
movsl
adc
sub
das
cltd
pop
pusha
ja
iret
dec
dec
push
jbe
adc
aas
std
dec
aam
enter
cmp
dec
cmpsb
adc
lret
fwait
push
mov
jg
add
mov
enter
sbb
pop
addl
nop
ret
aaa
dec
fdivrs
xchg
sahf
stos
mov
pop
push
mov
xor
dec
inc
popf
test
ljmp
shrb
add
popa
insb
pusha
dec
mov
pop
adc
lret
jne
push
adc
into
push
xchg
out
sbb
push
inc
sbb
dec
in
add
subl
lahf
in
es
pop
sarb
int3
mov
in
lock
xchg
and
inc
outsb
outsl
xor
sub
fldenv
flds
pop
jno
push
dec
out
outsb
ret
jnp
jge
mov
and
mov
inc
push
pop
inc
ret
repz
mov
mov
jp
cmp
dec
xor
sub
add
jo
cli
xlat
jo
jae
dec
pop
loopne
pop
xchg
xor
sbb
add
imul
sbb
adc
adc
dec
shlb
xchg
sahf
ljmp
push
fildl
cmp
jecxz
loop
lds
aas
cli
mov
adc
lret
jmp
movsb
nop
mov
lods
mov
pop
fstpt
mov
mov
cmpsb
mov
push
std
leave
cmpsb
jnp
jl
xchg
pop
push
icebp
jnp
clc
add
scas
fidivs
push
push
jnp
movsl
dec
mov
and
cs
movsl
sbb
adc
ret
adc
cmp
or
xchg
sub
int3
or
add
pop
bound
cmpsb
xchg
int
mov
dec
push
mov
push
sysenter
pop
mov
sub
xchg
sarb
in
out
gs
or
leave
push
mov
mov
mov
fmulp
scas
aam
pop
mov
mov
gs
cmp
ljmp
testl
sbb
data16
sbb
loop
jbe
xchg
sbb
stc
and
test
sti
sbb
fstpt
stos
sbb
xchg
nop
icebp
mov
rcrb
push
aaa
ss
push
call
sbb
hlt
push
pushf
lcall
shrb
dec
xor
xor
dec
xchg
nop
mov
pusha
dec
movsl
dec
xor
in
mulb
xchg
cmp
imul
clc
dec
cmp
outsl
push
call
sub
sbb
jmp
dec
dec
jbe
cli
shll
sub
cltd
sbb
xor
lods
jo
lds
loop
mulb
repnz
mov
cwtl
loop
pop
test
dec
shlb
cmp
sub
dec
jne
lea
jl
and
jb
out
dec
sbbl
imul
adc
shr
xor
sahf
out
or
inc
ss
mov
adc
lock
xor
sbb
imul
fiadds
popf
push
mov
loop
adc
jo
out
js
mov
push
sti
cmp
call
sub
mov
fwait
push
shlb
ds
and
mov
cmpsb
mov
fwait
out
jge
loopne
mov
jecxz
repz
push
pop
mov
dec
andb
ffree
or
sub
push
mov
mov
out
add
and
cmc
cmp
or
in
or
pushf
test
arpl
test
arpl
xchg
roll
pop
push
aas
or
jg
lds
xchg
fisubl
mov
cmp
fs
hlt
xor
pop
fs
xor
inc
pop
repz
dec
cmpl
js
stc
jae
or
lods
jg
mov
pop
inc
mov
hlt
jnp
cmp
add
pop
push
addb
sub
lcall
ja,pt
jecxz
xor
sub
decb
mov
cwtl
or
popa
mov
push
fdivs
xchg
adc
mov
ret
call
stos
sub
xchg
or
jecxz
insl
jg
or
ficomps
adc
xchg
xor
sti
stos
push
mov
sti
ss
sahf
sbb
pop
push
out
inc
in
icebp
or
xchg
push
inc
and
inc
and
mov
dec
cmp
cmovle
push
cmp
mov
inc
xor
int
test
mov
dec
mov
sarl
mov
xor
mov
jl
sar
mov
jnp
mov
mov
mov
pop
mov
test
cmp
or
lods
dec
test
mov
adc
sbb
dec
add
push
std
test
xchg
test
or
sub
pop
rcl
mov
sub
xor
xchg
mov
add
imul
inc
add
fidivrl
std
lock
jmp
fs
test
mov
push
xor
mov
pop
and
xor
cmp
shl
mov
repnz
adc
add
sbb
out
jns
xchg
add
mov
sub
fs
iret
stos
sub
addr16
scas
stc
fsubrs
fnstenv
mov
dec
jbe
cmp
ja
out
invd
adc
mov
test
lahf
jb
js
cmpb
loopne
mov
enter
mov
jmp
xor
and
xor
in
jge
cmp
popf
sahf
lea
push
loop
sbb
xlat
lahf
hlt
mov
inc
sub
cmp
ss
xchg
inc
inc
lahf
dec
iret
push
dec
aas
add
dec
xchg
lods
add
add
hlt
push
in
sub
xchg
int
cs
shl
sbb
leave
daa
xchg
xor
arpl
sar
stos
popa
ja
lcall
fisubrs
jae
inc
nop
cmp
lahf
lock
pushf
sub
lods
hlt
or
imul
lock
mov
xchg
mov
inc
xchg
mov
inc
push
xchg
mov
scas
sbb
jno
ja
add
gs
cwtl
stos
jb
mov
pop
test
jns
push
and
insb
lods
cmp
pop
cmc
dec
add
push
mov
cmpsb
mov
inc
add
sbb
pop
xchg
xorl
dec
fnstenv
sub
add
sbb
xchg
pop
in
sahf
test
aad
loopne
pop
ret
and
cmp
movsb
dec
lods
inc
cmc
pop
xor
jbe
insl
mov
stc
xor
push
cli
into
lcall
sbb
ljmp
and
orl
xchg
sahf
mov
imull
lret
xchg
cmp
push
mov
mov
dec
mov
aam
jmp
cmp
add
test
pop
fdiv
in
xchg
pop
sub
cmp
push
pushf
lahf
cmp
xchg
dec
or
hlt
mov
cmp
or
inc
test
adc
ror
mov
lret
push
daa
fcmovb
mov
jae
inc
fidivrs
insb
call
pop
in
push
pop
test
jp
or
fisttps
mov
sbb
pop
scas
imul
sbb
fiadds
xchg
inc
xlat
fldenv
jno
mov
in
jno
movsb
ret
repz
push
jle
mov
xlat
ja
or
push
xor
out
inc
test
mov
mov
pushf
ret
popa
cltd
test
pop
scas
and
inc
fldt
stos
cmp
sbb
inc
pop
xor
ss
es
cmp
inc
mov
mov
rcrl
repnz
mov
cld
fidivrs
mov
inc
and
filds
mov
test
out
mov
movsb
xlat
mov
loopne
std
repz
xchg
loope
mov
lods
jne
es
rolb
cltd
mov
out
cmp
rolb
cmp
dec
idivb
add
push
inc
xchg
out
xchg
nop
xor
and
mov
stos
sbb
enter
inc
leave
push
sbb
ss
pop
jp
pop
mov
bound
out
fiaddl
mov
mov
es
jae
cmp
add
push
lods
pop
sub
push
notl
pop
sbb
loopne
adc
push
ret
lret
js
jl
lcall
xchg
pop
push
pushf
ss
mov
dec
insl
cmp
xchg
xchg
jecxz
cmp
aas
add
into
test
pop
pop
xor
adc
xchg
arpl
sbb
sbb
add
inc
lods
sub
imul
dec
and
jle
popa
in
push
repz
imul
pushf
mov
pop
fmul
lods
fimuls
pop
mov
cwtl
adc
ret
cmpsl
inc
adc
adc
in
ror
add
push
mov
push
add
hlt
push
iret
xchg
aas
adc
sub
les
fnstenv
ficoml
and
xchg
jecxz,pn
je
jl
inc
mov
dec
pusha
rclb
push
xorl
mov
in
or
sbb
bound
jae
ret
push
repnz
or
push
fists
pop
sub
xor
xchg
hlt
loop
test
outsl
adc
pop
rol
js
mov
pusha
mov
sti
jno
addb
jl
mov
out
dec
pop
ficompl
mov
push
hlt
lock
mov
cmc
sbb
jl
cmc
pop
dec
mov
scas
cmp
dec
bound
pop
pop
scas
insl
rcrl
fcoms
cli
imul
insb
ret
fstl
jae
loopne
xchg
push
data16
pusha
adc
sbb
add
adc
xor
dec
push
or
aaa
push
icebp
shrl
int
popf
mov
pop
adc
cs
into
lock
cmp
cmpsl
movsb
inc
adc
xorl
xchg
pop
mov
push
iret
dec
mov
sub
push
adc
xor
lret
mov
nop
dec
or
jnp
cmp
sbb
arpl
insl
daa
cmp
and
push
icebp
adc
scas
std
loopne
bound
push
outsl
push
cli
or
pop
mov
jmp
cmpsl
aam
add
xchg
push
mov
sub
popf
xchg
lahf
sub
xchg
add
icebp
cmp
lar
cmc
add
int3
mov
lea
fucom
sub
pop
repnz
mov
and
popa
je
jbe
shlb
arpl
jle
mov
mov
int3
inc
dec
push
xor
in
adc
cmp
sbb
inc
and
xchg
rolb
out
faddl
add
test
insl
mov
fs
cwtl
inc
jp
sub
shll
push
push
add
sub
aaa
xchg
sub
adc
int3
xchg
or
xchg
mov
aad
add
sbb
ret
nop
pusha
jp
cmpsb
js
xchg
call
push
mov
mov
das
mov
mov
push
mov
imul
ss
lock
sahf
into
sub
push
mov
jae
push
push
gs
nop
repz
xor
int3
andl
testl
push
lods
icebp
cwtl
icebp
popl
out
unpcklps
xchg
test
rcl
lahf
inc
in
roll
bound
test
mov
or
jle
addl
jle
stos
lahf
fnsave
ret
gs
fistl
sbb
aam
adc
push
fdivs
fnstsw
nop
sti
adc
insl
ss
push
xor
in
mov
andb
cli
and
inc
push
sub
push
fidivrl
mov
inc
cli
xchg
es
jg
xchg
push
pop
shl
fxch
jno
fcomp
xor
movsb
pop
pop
loopne
jmp
aas
cwtl
icebp
push
test
jae
sbb
sub
das
in
dec
adc
test
sbb
mov
sbb
pop
stos
cmp
mov
cmp
fcomi
inc
xor
fimuls
jp
pop
sbb
aam
test
cmpsl
add
imul
pop
sbb
adc
cmp
outsb
cmc
mov
cwtl
out
adc
into
adc
call
int3
add
inc
push
xor
roll
add
sbb
lcall
mov
test
inc
jg
pop
pushf
repz
imul
lock
hlt
pop
data16
fadd
stos
push
fucomip
fadds
fldcw
in
outsl
dec
arpl
or
dec
add
repnz
es
loopne
xor
inc
shr
in
or
ret
imul
mov
lods
pop
pop
adc
aam
pushf
mov
jecxz
push
orl
lock
push
scas
bound
xchg
jg
push
xchg
sahf
iret
inc
loop
cmpb
shrb
jle
shl
ja
push
aaa
and
xchg
mov
sti
shll
and
or
and
outsl
or
mov
stc
cld
mov
mov
fbstp
dec
or
xchg
cmp
sbb
add
pop
mov
daa
push
test
xor
mov
aas
rcrl
push
mov
or
out
pop
aad
and
pusha
jecxz
mov
jl
mov
addb
push
imul
adc
xchg
sbb
mov
pop
addr16
lock
enter
fidivrs
lods
rep
adc
or
cmc
hlt
std
sbb
arpl
jmp
fistpll
arpl
xlat
aam
xorl
inc
jns
mov
in
test
out
rorl
int
out
mov
pop
call
mov
adc
add
dec
and
imul
cmp
xchg
scas
inc
cmp
lock
adcl
dec
mov
mov
popa
ljmp
into
call
pop
aad
xor
and
sub
sub
mov
push
mov
popa
sbb
popf
bound
fisttpl
lahf
clc
call
rcll
cwtl
jbe
sbbl
push
loopne
cld
cmp
lods
into
insl
push
mov
imul
cltd
add
addr16
fadd
mov
dec
sub
das
ret
cmp
imul
sub
stc
push
dec
notl
cmp
inc
lret
mov
push
jg
sti
mov
dec
xchg
pop
orb
mov
cmpsl
repnz
imul
scas
in
sub
rcrl
pop
mov
lods
ss
sub
mov
mov
int
fists
das
sbb
pop
adc
push
movsb
jl
xor
xchg
addr16
cmp
bound
cmpsl
inc
pusha
pop
pop
mov
mov
ret
add
mov
jno
dec
mov
pop
xchg
lods
inc
popf
pminsw
jne
enter
in
xchg
jno
jae
jge
rorl
push
inc
aaa
sbb
sbb
mov
cmc
mov
jnp
in
mov
adc
inc
xchg
ror
sbb
or
mov
jae
add
jb
cltd
push
aas
xchg
sub
push
or
sbb
mov
test
mov
repnz
push
adc
outsl
or
pushf
cmc
cmp
pop
fdivrl
push
push
push
gs
xorl
push
jns
outsl
fidivl
nop
icebp
out
xchg
imul
test
and
shrl
mov
jae
cmp
outsb
js
out
add
jl
add
jg
fs
mov
xor
icebp
or
pop
insb
pop
enter
inc
mov
mov
shl
push
cwtl
mov
lock
test
shll
add
and
xchg
addr16
jno
pushf
pop
and
iret
dec
xchg
sub
mov
stos
mov
std
cmpsb
sti
push
sbb
ja
inc
jge
shlb
jbe
movsb
in
ror
inc
outsb
fistpll
sbb
in
notb
lock
pop
push
fmul
shr
mov
stos
jns
popa
sbb
xchg
push
sub
ss
xchg
xor
callw
mov
out
and
loopne
insl
jle
outsb
inc
imul
pop
jo
test
and
mov
das
sbb
push
or
jae
stos
pop
and
mov
push
cld
mov
adc
shlb
sbb
out
pop
sbb
cmp
add
mov
insb
push
cmp
out
into
adc
or
pop
addl
call
xor
lods
ljmp
test
push
insb
cld
cmp
cmp
sbb
inc
repnz
push
lret
insl
jnp
ret
fisubs
fmull
cmp
mov
push
sbb
mov
and
aam
pop
sti
andb
mov
in
mov
pushf
pop
mov
shlb
pop
test
cmp
xchg
into
in
lret
xchg
movsw
push
inc
jecxz
mov
adc
ljmp
inc
aaa
sub
je
jle
xchg
sbb
das
jl
jmp
jecxz
sti
bound
xchg
mov
aas
into
sarb
jg
das
dec
cmp
lods
sti
sbb
fsubr
fldl
sub
mov
push
loope
inc
pop
xchg
adc
mov
dec
sbb
cmp
lock
mov
sub
loopne
js
out
outsl
jns
icebp
push
inc
mov
popa
insl
loopne
pop
leave
cmpsl
ret
inc
or
inc
mov
jge
dec
cmp
inc
pop
in
outsb
xchg
xor
xchg
jl
mov
mov
cs
push
mov
add
movsl
and
into
mov
test
clc
xor
or
push
jns
cmp
sbb
jb
dec
in
movsl
sbb
xchg
sub
adcl
adcb
cld
lds
fsubp
jb
xchg
das
jmp
or
jns
fsubrl
scas
lahf
xor
xchg
push
or
aaa
adc
jg
inc
inc
popf
xchg
repz
mov
push
repz
lcall
mov
in
stos
add
mov
adc
pop
mov
fsubs
movsl
and
popf
or
cwtl
push
ret
pop
call
xor
push
mov
sbb
ss
inc
enter
jecxz
ret
jl
dec
in
gs
push
dec
push
mov
ffreep
daa
jnp
mov
inc
inc
mov
fidivrl
movsl
pop
jne
jp
ret
pusha
das
xchg
and
push
arpl
xchg
mov
mov
xor
jne
cs
scas
out
mov
add
jge
test
mov
dec
push
cmp
dec
nop
pop
push
push
push
and
jnp
jl
stc
sbb
mov
xor
cmp
jae
scas
int3
loope
inc
jnp
mov
popf
loope
jmp
daa
scas
das
sub
adc
imul
xchg
push
cltd
mov
sbb
aam
xchg
inc
cmp
mov
je
fidivrs
popa
ret
pusha
mov
jo
ret
scas
out
pop
sbb
jmp
aaa
pop
repz
pushf
cli
xchg
mov
cld
inc
icebp
push
rcrb
mov
mov
pop
mov
add
pop
sahf
fcmovu
or
lock
mul
fdivs
outsb
xlat
ja
orb
iret
sbb
sbb
jne
in
mov
jecxz
insl
push
in
rclb
fstps
jmp
pushf
repz
mov
adc
movsl
xchg
jbe
dec
aam
daa
push
push
jle
adcb
or
dec
mov
fisubrs
push
mov
sbb
cmp
mov
cmp
pop
insl
and
jnp
mov
xorl
mov
inc
lahf
stos
and
ficomps
dec
or
push
xchg
imul
fwait
mov
adc
dec
je
subb
jecxz
pushf
std
push
sub
lcall
leave
cmpsb
xlat
imul
cmpb
or
add
test
adc
or
pop
ja
out
movsb
pop
pop
sub
adc
sbb
xor
push
xor
paddd
mov
sub
roll
in
outsl
in
pop
xchg
adc
xor
fwait
push
cmp
hlt
fdivrs
xchg
xor
mov
xchg
mov
or
cs
lahf
cmp
in
sub
imul
stc
popa
je
std
xchg
testl
mov
das
inc
nop
xchg
ds
stos
sub
dec
mov
bound
dec
fwait
push
inc
idivl
ljmp
aaa
mov
dec
cld
xchg
xlat
out
testb
idivb
mov
fidivrl
xor
or
dec
cli
push
cwtl
or
in
mov
or
rcl
adc
cmp
xor
outsl
imull
inc
int3
daa
sub
lods
ds
cmp
arpl
inc
or
ret
lahf
jo
push
mov
popa
repz
sub
test
or
fcompl
iret
or
frstor
cmp
cmp
ret
mov
negl
data16
insl
xor
shlb
jle
nop
cmpsl
in
pop
movb
aam
hlt
and
sbb
lret
sbb
pop
jmp
sub
jl
add
pop
fildll
repnz
pop
test
mov
mov
inc
int
movsb
or
arpl
mov
repnz
icebp
xor
inc
sbbb
nop
imul
leave
jnp
bswap
movsl
dec
test
push
cmpsb
fldenv
and
insl
into
or
mov
xor
enter
lods
push
mov
fwait
cs
ret
sbb
mov
stos
mov
mov
jmp
sbb
jge
call
adc
scas
or
xchg
push
call
mov
lcall
xchg
dec
es
rorl
lds
dec
dec
inc
sub
add
cwtl
aas
push
xor
push
fucomi
lret
sub
dec
and
sbb
mov
sub
xchg
aaa
adc
dec
jl
jl
mov
adc
test
jecxz
sub
stc
dec
sub
xchg
shlb
outsb
dec
int
loopne
cmpsl
es
out
popf
push
or
sbb
lret
rcrb
jo
popa
jbe
push
test
sub
fwait
cmp
imul
loope
inc
fsts
dec
push
sub
xor
fiaddl
inc
insl
ljmp
mov
js
mov
pop
addb
lcall
cltd
clc
gs
mov
and
insb
gs
xchg
mov
and
rol
mov
or
xor
jne
scas
cmp
daa
out
out
aas
cmp
cltd
jmp
sub
outsb
cmc
mov
add
mov
inc
fidivl
ds
out
icebp
das
and
sbb
mov
adc
aas
lcall
lahf
inc
or
inc
jl
jle
inc
test
mov
or
sbbl
call
sub
add
adc
cmp
jne
dec
lock
aad
pop
mov
scas
or
fcompl
push
xor
add
jo
dec
test
insl
enter
add
xchg
out
mov
jns
cltd
popa
mov
hlt
inc
and
test
adc
add
in
push
lea
in
fwait
movsb
pop
xor
addl
pop
push
arpl
dec
inc
cmc
and
iret
aas
dec
push
lahf
dec
cmp
push
dec
notb
jl
enter
aam
pop
cmpsb
fdivp
scas
adc
movsl
xor
jae
mov
push
jg
lock
sub
and
cltd
pushl
xchg
dec
adc
sahf
das
push
cli
sbb
push
movsl
xchg
cmp
mov
mov
out
pop
adc
mov
jg
inc
les
xor
lea
push
lret
jb
cmp
sbb
aad
push
adc
mov
pop
je
adc
mov
and
sub
fistps
jge
lret
lock
mov
xlat
loope
jmp
xor
jg
mov
mov
and
andl
test
xor
jmp
jo
jl
out
pop
int3
xchg
mov
clc
push
cmp
in
mov
mov
pop
fiadds
add
outsl
push
dec
xchg
testb
mov
or
mov
cwtl
arpl
fnsave
lock
shll
mov
jno
call
aas
hlt
cmpsb
mov
in
mov
imul
mov
or
aaa
shll
dec
cwtl
rclb
lds
cmp
sti
addl
sahf
sbb
sub
shll
xor
cmp
scas
popf
es
fsubr
ds
aaa
and
mov
push
jb,pt
cld
mov
pop
jne
xor
movsb
xor
lret
fdivr
cwtl
fimuls
insb
stc
fcoms
sub
and
icebp
mov
leave
cmp
jge
cmpsl
ret
rcrl
cwtl
jno
xchg
adc
sub
sbb
int
in
mov
mov
sbb
jmp
xor
inc
mov
xchg
movsb
ret
lcall
jecxz
in
dec
and
xchg
or
jnp
aam
jns
pusha
ja
dec
into
bound
adc
jb
mov
loop
cld
aad
mov
cmpsb
out
and
fs
jmp
xchg
mov
pop
ja
lret
inc
push
push
adc
andl
cmc
lods
jmp
inc
movsb
push
adc
repnz
out
push
shl
mov
jns
xchg
das
push
xlat
inc
adc
jmp
call
or
push
lcall
add
dec
add
jbe
xchg
xchg
nop
sub
inc
in
sbb
inc
mov
fs
ss
xlat
mov
cmp
mov
je
andb
repz
and
push
and
fnsave
jl
add
push
push
cmpsb
mov
sub
clc
dec
repnz
stos
cmp
pop
push
mov
inc
jnp
add
adc
out
adc
dec
pop
fcompl
mov
in
mov
and
mov
push
and
gs
sbb
sub
addr16
inc
push
mov
pop
jo
or
ja,pt
sbb
push
mov
clc
cmp
cld
fs
mov
out
xchg
mov
js
inc
and
lahf
inc
cmpxchg
jns
cld
xchg
mov
jbe
sbb
jo
xchg
mov
in
xor
in
rcl
mov
dec
mov
sub
cmp
xchg
lret
pusha
imul
aam
and
enter
das
data16
and
inc
push
aaa
cmc
add
inc
lods
inc
adc
jns
out
mov
add
in
hlt
js
lea
fidivrs
lret
imul
in
adc
cmp
gs
rclb
dec
jecxz
std
dec
lods
jmp
and
lods
sub
dec
div
in
adcl
cmp
cmpsb
mov
bound
inc
pop
adc
pop
xchg
mov
or
xor
or
je
aaa
sub
push
add
aas
xchg
pop
ret
aad
add
mov
into
push
movl
mov
repnz
adc
ds
fwait
pop
in
or
mov
cmp
mov
cmp
int3
mov
xchg
jl
xchg
sbb
test
in
scas
jp
test
push
inc
push
cs
jg
cmp
icebp
aaa
loopne
ficoml
cwtl
ljmp
pop
in
daa
decb
cmp
sub
sub
add
dec
js
mov
dec
mov
push
mov
popf
xchg
cmpsb
mov
clc
jb
fs
xchg
out
xchg
mov
adc
insl
fiadds
cli
push
repz
popa
imul
adc
push
js
jle
sbb
mov
xchg
xchg
clc
in
imul
leave
test
rcr
aad
mov
stc
inc
das
shlb
dec
cmpsb
push
inc
adc
push
sbb
jo
clc
xor
dec
or
mov
mov
jl
sub
icebp
icebp
or
out
mov
pop
xchg
or
pop
iret
pop
mov
icebp
mov
repnz
pop
jg
inc
push
repz
gs
fs
es
and
jmp
mov
mov
aad
cmp
xor
pop
std
xor
in
daa
xchg
sub
inc
cmp
pushf
mov
mov
dec
pop
lods
jecxz
gs
repnz
fimull
sbb
pop
mov
std
jbe
imul
aaa
push
imul
and
add
cmpsl
repnz
sbb
movsl
cwtl
mov
addl
aad
push
push
ret
test
lock
add
push
or
shll
ja
jo
add
xor
icebp
mov
pop
add
mov
stc
sub
jmp
jge
lret
dec
in
leave
enter
pop
vcvtpd2ps
rcrb
push
lret
mov
repz
call
xchg
jns
clc
fsts
cmp
push
mov
mov
divl
in
push
fcomps
pop
lods
testb
pop
inc
push
sbb
mov
jmp
lock
out
aad
push
xchg
fstpl
je
pop
add
int3
shrb
mov
add
hlt
enter
ja
sbb
mov
cld
mov
dec
inc
in
jg
xchg
cli
and
xorl
pop
leave
push
jmp
sub
in
ljmp
push
pop
ret
or
dec
movsb
shrl
mov
movsl
loop
push
and
mov
cmp
and
jmp
fisubl
add
or
lret
cmc
mov
sub
inc
sar
cmp
dec
dec
xchg
mov
xchg
hlt
out
sti
jge
jle
and
or
and
sbb
sub
dec
jae
lret
or
mov
jmp
test
ja
lcall
add
lret
or
adc
fidivl
cmpsl
sbb
fs
or
in
sub
mov
dec
push
dec
mov
aas
sbb
bound
adc
pop
cmc
pusha
pushf
dec
or
movlps
ljmp
test
lods
pop
lds
cmp
std
aad
and
mov
sub
lahf
push
popa
dec
idivb
sub
les
into
mov
mov
or
ja
mov
enter
lahf
ret
adc
sbb
ret
pop
sti
imul
or
xlat
xor
in
add
jecxz
mov
ja
cmc
pop
jae
inc
xchg
nop
adc
pop
test
es
push
pop
and
inc
dec
cld
sarl
dec
loope
mov
and
mov
es
repz
push
cmp
inc
xor
fsubl
cmp
imul
fwait
loopne
popf
inc
into
fabs
jmp
jnp
movsl
cld
movl
xor
adc
lds
and
and
pop
loop
scas
push
outsl
adc
xchg
cmp
outsb
mov
imul
pop
incb
out
in
movsl
cmc
cmpsl
cld
cmp
insl
add
int
frstor
scas
mov
mov
enter
jns
out
pop
call
pop
sahf
pusha
gs
mov
lcall
add
inc
repz
aas
sbb
idiv
dec
sub
xor
stos
jae
cmc
cmp
insl
ficomps
inc
xlat
mov
dec
cmp
std
faddl
jbe
arpl
rclb
dec
repz
or
jge
mov
inc
movsb
stos
ret
mov
dec
loop
push
inc
dec
jle
pop
or
adc
mov
xor
in
aad
xchg
leave
mov
fistpll
dec
dec
and
hlt
ljmp
sahf
cmpsl
data16
xor
aas
cmp
test
sub
adc
push
push
jmp
jne
aam
in
and
pop
push
jl
add
and
popf
xchg
mov
mov
mov
lcall
shlb
jo
shll
cwtl
sub
movsb
stc
test
test
mov
in
add
or
add
adc
out
mov
int3
dec
and
cmp
sub
xlat
push
xor
test
mov
jecxz,pt
shrb
dec
lods
and
cmp
or
cmp
and
in
mov
daa
arpl
iret
inc
fnstsw
leave
ror
outsl
sub
test
sahf
dec
cltd
aas
icebp
dec
das
dec
and
jb
leave
jle
ja
scas
mov
leave
jmp
xchg
ljmp
push
out
mov
mov
pop
mov
or
mov
cmpsb
cmp
or
add
mov
jo
xorl
cmp
xchg
out
adc
sbb
enter
push
and
mov
xor
push
mov
les
fstpt
insb
cmp
cs
mov
inc
ret
mov
repz
xchg
mov
int3
scas
sar
mov
cli
xchg
stos
xor
cli
adc
ds
mov
lods
gs
and
out
jb
xchg
jnp
pop
or
and
jo
sub
add
int3
sub
lret
jns
data16
repnz
dec
ret
jmp
adc
and
cltd
add
mov
lods
cmp
nop
adc
jge
pop
mov
mov
sub
inc
ja
push
adc
iret
pusha
dec
inc
dec
mov
out
notl
push
inc
cmp
sub
mov
jecxz
scas
rolb
insb
cmp
fcmovne
loopne
or
fldenv
xchg
or
cmpsl
xor
cmp
cmpl
ss
xchg
out
shrl
arpl
out
push
into
lock
je
insl
rcrl
pop
nop
sub
jbe
jb
push
xchg
mov
dec
in
lret
cmpsl
push
sub
sbb
xchg
js
sbb
mov
xchg
dec
xchg
lods
shll
jecxz
daa
inc
inc
out
sub
push
js
jge
push
inc
and
stc
clc
mov
scas
popf
repnz
adc
popa
adc
cmp
mov
xchg
mov
xorb
or
jo
popf
popf
cmp
xor
jl
test
sbb
cmp
aam
mov
aas
ret
sub
xchg
stc
mov
inc
setp
in
mov
stos
lods
aam
lahf
pop
out
arpl
mov
mov
imul
mov
pop
and
test
lahf
int3
xor
cltd
hlt
addr16
mov
popa
xor
test
sbb
lock
fstps
ja
rorb
ds
mul
fld1
push
je
jae
add
popf
add
adc
pop
hlt
out
mov
fsts
sti
mov
shr
sbb
imul
dec
and
sub
sbb
rcrb
jmp
movsb
shll
lret
out
xor
data16
cmc
insl
shlb
out
inc
xor
mov
mov
mov
pop
rcrb
out
pop
outsb
pop
jmp
inc
aaa
enter
inc
iret
cmpsl
mov
repnz
mov
add
xchg
pop
shl
stos
stos
sub
fwait
popf
fwait
mov
add
sub
test
push
inc
dec
inc
ja
mov
mov
pop
jmp
push
es
or
mov
in
sbb
xor
cmp
xor
or
jg
mov
dec
push
cld
cwtl
mov
int
lcall
jno
inc
arpl
loop
sub
pop
mov
insb
fs
xchg
lret
sbb
pusha
js
mov
out
lock
jno
inc
jne
or
fnstenv
adc
mov
jnp
cmp
mov
icebp
es
push
ror
in
push
in
pop
cmpsb
fdiv
cmc
aaa
cmp
inc
fs
jae
sbb
mov
lahf
and
adc
sbb
out
stos
stos
mov
sub
xchg
mov
xchg
push
cmc
in
mov
aad
mov
jae
fbstp
js
fimull
jle
bound
mov
fcmovu
jo
jo
jae
mov
jo
and
mov
pop
mov
adc
iret
xor
pop
xorb
xchg
iret
int
mov
adc
fstpl
std
mov
jno
push
sahf
out
adc
mov
jg
enter
jns
adc
mov
ret
or
pop
jl
adc
pop
or
imul
and
outsb
push
test
fld
repnz
in
jns
jmp
xchg
dec
push
sub
into
stc
jne
adc
fnstsw
or
inc
adc
int3
cmpsb
cltd
popf
mov
jae
xor
adc
cmp
sbb
sarb
pop
stos
mov
jae
cmpl
push
inc
xor
outsl
mov
movsl
repnz
test
daa
cld
add
es
pusha
adc
jbe
jbe
add
fnstenv
outsb
inc
cmc
mov
jp
mov
xchg
cld
ljmp
test
jnp
dec
mov
jg
push
jmp
cmp
xor
dec
sub
notl
jo
lods
jo
loopne
pop
sahf
sbb
in
aam
adc
data16
cltd
movsb
incb
cmc
lods
jge
push
xor
adc
fwait
pop
xor
movsl
in
mov
fwait
jmp
cmp
pop
mov
xlat
insb
pop
mov
leave
or
sub
jge
xchg
push
and
loopne
mov
call
lret
and
cmp
insb
out
scas
xchg
mov
cmpsl
adc
xchg
fwait
sub
lret
push
pop
inc
aas
push
ljmp
xor
inc
test
lods
add
jle
ficoml
rep
insl
or
cmp
jge
les
xlat
iret
mov
dec
popf
push
fabs
pop
cmp
sbb
repz
cmp
in
rclb
nop
out
push
xchg
add
repz
push
hlt
or
popa
stos
mov
aas
pop
mov
jmp
insl
xor
pop
shrl
cs
dec
cli
push
dec
mov
movsl
mov
das
jmp
lcall
test
or
shll
test
push
adc
push
jns
xlat
sbb
shrb
pop
cmpsb
in
lods
insl
mov
sbb
xchg
pop
cmp
sub
fwait
xchg
test
cmp
and
out
xor
add
xor
sbb
or
mov
sub
jno
pop
and
mov
int
sbb
xchg
fsts
aam
mov
jae
xor
xor
push
out
repz
repz
sbb
je
fstpt
rolb
mov
out
mov
xchg
sbb
mov
jecxz
sbb
pop
test
cltd
repnz
call
addl
cs
jno
ja
ficoml
lret
push
push
outsb
mov
cmp
dec
dec
cmc
ja
jle
outsb
push
add
pop
daa
int
test
in
dec
adc
dec
adc
dec
outsl
js
idivl
cwtl
shrl
mov
or
xor
xor
fcmovb
arpl
jge
dec
leave
inc
arpl
aam
pop
push
xor
add
loope
pop
mov
add
ds
sub
dec
shr
sbb
push
mov
pop
fisubrl
adc
popf
mov
js
sarb
data16
lock
push
int3
adc
std
xchg
add
icebp
in
mov
add
adc
mov
mov
xchg
daa
cmp
adc
lock
addr16
sahf
xchg
jecxz
clc
jle
cli
mov
es
xor
aad
in
das
sar
movsb
add
mov
adc
jp
sbbb
mov
fwait
nop
mov
sbb
test
cmp
pop
xchg
fcomip
fcomp
cli
out
and
leave
mov
add
cmpsl
jns
xorl
push
inc
insb
int
mov
sbb
pop
sbb
insb
mov
nop
mov
jmp
mul
pop
push
mov
enter
or
fwait
ss
dec
fstp
out
hlt
mov
push
mov
cmpl
aaa
cmp
jl
mov
dec
repz
in
sbb
lock
mov
add
inc
dec
push
outsl
dec
call
ljmp
pusha
stos
and
inc
das
sahf
push
shll
nop
cwtl
cwtl
pop
xchg
or
cmpsb
add
ds
and
out
xor
sbb
jmp
fistpll
mov
out
cmc
mov
in
jb
pop
mov
enter
orl
aaa
mov
stc
pop
sub
inc
push
inc
adc
je
jnp
outsl
sub
es
adc
adc
pushf
push
insb
fnsave
stos
test
cmpsb
mov
sbb
cmp
push
inc
ret
test
jnp
push
sahf
add
mov
sbb
xor
mov
inc
popa
aam
aaa
fcmovu
push
mov
mov
cs
sub
sbb
dec
or
mov
xor
push
popf
out
lock
add
pop
add
lods
jnp
stos
cmp
pushf
outsb
ljmp
mov
aad
jp
paddq
aas
pop
in
and
loopne
adc
int
hlt
fmuls
push
mov
lods
add
rcrl
and
fs
sti
sbb
jl
jbe
stos
cltd
add
js
mov
and
dec
imul
mov
setl
ja
mov
div
imul
jp
push
fisubrl
adc
pushf
repz
sbb
jne
dec
leave
enter
push
insl
push
adc
cmc
mov
aam
jg
aas
xchg
push
pop
in
sahf
orb
loop
sbb
sub
pop
push
negl
pushf
cmp
mov
cmpsl
mov
es
pusha
dec
imul
fstpt
jle
out
cmp
sbb
adc
and
rcrb
dec
or
lcall
mov
sub
daa
or
xlat
fdivrs
mov
adc
test
mov
ret
dec
loope
jne
xchg
sahf
mov
push
xor
int3
cmp
aaa
inc
dec
ret
push
inc
and
fsubl
mov
sub
or
push
cmpsl
cmp
push
mov
imul
push
mov
loopne
xchg
loope
jno
sar
inc
inc
repz
xor
jecxz
lock
inc
cmc
daa
pop
mov
mov
test
popa
into
push
out
or
adc
sbb
inc
mov
jg
in
lds
aad
jge
mov
or
ret
fistpll
dec
leave
insl
rcll
lcall
lcall
push
or
adc
inc
xor
lret
cmpsl
out
mov
push
cmp
idivb
jb
push
dec
dec
sub
sub
subb
fldl2t
xchg
sbb
ret
pushf
cmp
inc
ja
adc
aaa
int3
xchg
xorb
aad
and
jle
into
jmp
jl
dec
sub
popf
imul
adc
stos
dec
add
cli
xor
mov
push
out
and
lcall
out
dec
cwtl
mov
lret
push
pop
out
jae
push
fmulp
das
jno
data16
or
shll
out
push
bsf
adc
and
and
ss
lret
fnstenv
jo
mov
xchg
mov
test
stc
add
lea
sbb
int
push
aad
add
je
cmc
cmp
inc
pop
cli
cmp
mov
sub
iret
cmp
stos
sbb
mov
push
loop
cmpsl
pusha
decb
jno
nop
lods
mov
mov
lock
pop
cmpsl
mov
imul
cmpsb
mov
insb
jbe
push
scas
push
ret
insb
pop
out
jbe
in
insl
shll
movsb
dec
fwait
xchg
pop
add
ds
pop
push
test
jnp
iret
stc
sti
mov
notb
jmp
out
xor
mov
sbb
mov
xor
jle
ret
or
push
pop
andl
lock
cmp
lea
add
pop
pop
cmp
popf
add
mov
and
xchg
ds
leave
sbb
sbb
sbb
jle
dec
mov
out
sahf
cltd
pop
jmp
add
push
mov
ja
mov
jbe
dec
aad
sub
popf
xor
fildl
inc
sub
les
or
idivb
push
push
ss
jne
fsubrl
inc
sub
es
or
adc
repnz
and
aas
and
cmp
mov
test
add
scas
push
jmp
cmp
inc
mov
aas
movsb
or
popf
add
adc
cmpsb
pop
dec
xor
cwtl
and
jno
repnz
orl
out
xor
pusha
jne
or
fs
mov
lea
push
addr16
dec
jns
scas
fimull
js
pop
fstl
mov
ja
xchg
cmpl
xor
jg
ds
and
arpl
add
mov
outsl
test
mov
add
lock
or
lock
mov
ret
pop
pushf
mov
cmp
fldcw
mov
mov
jecxz
aad
sub
cs
mov
ss
je
fistps
adc
lds
push
mov
pop
cmc
xchg
out
stos
shrl
jg
in
push
lret
dec
mov
ja
in
inc
push
jge
cmp
jns
repnz
dec
push
dec
js
adc
or
push
aas
xchg
rol
insl
in
xor
outsl
jmp
stos
imul
in
push
outsl
jo
cmp
shl
idiv
push
pop
data16
fcomps
js
ret
push
sbb
xchg
pop
inc
mov
rcrb
popa
jnp
ss
add
loop
mov
mov
cmp
xchg
sub
dec
iret
ret
sbb
stos
lock
das
addr16
scas
sbb
rcl
cmp
push
dec
dec
cltd
mov
icebp
xchg
ja
sub
int
je
rcrb
scas
jmp
rcrl
mov
push
and
or
mov
sbb
dec
ss
add
mov
test
mov
out
pop
ret
std
mov
data16
adcl
lcall
fcom
push
dec
jg
cmp
xor
scas
testl
adc
add
lock
dec
in
movsb
jg
shl
fsubs
pusha
fisubrs
or
jg
push
std
jno
pop
mov
mov
leave
divl
fwait
sbb
pop
je
lahf
and
sti
jne
negl
sub
xor
pop
push
les
inc
xor
jecxz,pn
inc
sbb
movsl
mulb
mov
sub
or
out
dec
cmp
scas
daa
in
xchg
jle
lea
add
lds
push
js
inc
popa
and
jno
xor
jmp
jmp
sub
sbb
mov
pop
push
cmp
or
in
cmp
xor
insb
addr16
in
adc
jp
ret
and
jb
shl
aas
cmc
stos
lock
sub
mov
push
dec
ds
mov
cmp
sarl
xchg
inc
push
fnstenv
push
jp
test
mov
jmp
cli
xchg
xchg
std
fnstcw
xchg
add
aas
cmpb
shr
lret
test
lcall
mov
inc
sahf
gs
pusha
mov
loopne
test
popa
jo
nop
push
mov
clc
and
push
outsl
mov
mov
jns
xor
out
pusha
or
inc
add
mov
mov
mov
add
cmpb
pop
dec
mov
mov
imul
sbbl
ss
and
fcmovbe
or
mov
shlb
std
mov
cmp
mov
dec
sbbb
sub
rolb
jo
push
push
mov
inc
add
fistpll
mov
test
lret
dec
mov
arpl
test
div
mov
fcom
leave
in
lock
dec
jg
imul
xchg
dec
jg
in
je
cmc
flds
rcl
adc
adc
addl
sbb
out
int3
insb
aam
or
inc
loopne
jnp
inc
int3
sbb
lds
addr16
outsl
loop
lock
repz
cli
aaa
shlb
hlt
dec
movsb
pop
add
cmc
stos
or
pop
shrl
fimull
inc
mov
fidivs
mov
jne
push
or
test
ljmp
and
mov
outsl
push
cmp
pop
cwtl
das
jns
xchg
ljmp
dec
fistpl
ret
cld
dec
and
or
scas
and
mov
sbb
out
flds
insb
std
xchg
in
outsl
dec
bound
xchg
sbb
adc
add
sbb
ja
cmp
jns
cmpsl
popf
lock
scas
xorb
xor
fucom
cmp
add
add
ret
pop
ljmp
push
sub
xchg
stos
fcoml
cld
pop
or
fistl
imul
mov
fsubs
mov
adc
loop
cmp
push
fldt
punpckldq
ljmp
jmp
icebp
clc
cmp
jge
pushf
jg
mov
jl
push
cmpsl
add
add
sbb
lcall
cmp
mov
jno
fwait
mov
dec
xchg
out
mov
push
jmp
jg
lods
imul
xor
cmpsb
xor
scas
test
pop
call
negb
ret
aad
xor
out
mov
ficomps
dec
out
repz
mov
push
sbb
add
jge
incl
test
pop
dec
cmp
push
scas
push
sub
push
sti
das
outsb
clc
pop
cli
push
bound
push
mov
jp
shll
and
xchg
cmc
insb
adcb
push
out
jae
or
fsubrp
jae
sti
or
in
inc
mov
arpl
andb
stc
mov
xchg
sbb
sti
ja
or
add
or
dec
in
stos
rcl
stos
das
js
outsl
inc
int
std
sti
pop
std
sti
and
fsubrl
sbb
das
xor
mov
dec
dec
inc
jle
sub
arpl
cmp
ds
xchg
jle
mov
mov
sub
dec
jmp
jp
mov
les
push
inc
sbb
out
jbe
push
sahf
mov
enter
xlat
cwtl
aam
add
sti
adc
shlb
inc
icebp
testl
dec
movsl
xchg
test
push
out
dec
das
lahf
jp
cltd
shl
add
xor
rclb
sbb
xchg
inc
adc
test
xchg
cmpsl
pop
push
or
out
test
bound
ret
daa
shl
outsb
sti
ljmp
cli
enter
scas
test
repz
inc
outsl
test
pop
and
arpl
ds
push
mov
pop
inc
mov
call
jns
sub
std
dec
call
jl
shlb
cwtl
sbb
ret
ret
ret
push
iret
xchg
sbb
xchg
sbb
iret
cli
add
test
repnz
test
pop
dec
std
imul
fistpl
ljmp
adc
jl
rolb
ffree
adc
pop
ret
push
xor
push
sbb
push
and
ljmp
mov
int3
mov
rcrl
dec
sarl
xor
ljmp
and
mov
push
or
mov
cltd
gs
insb
dec
cmp
lcall
xor
pop
in
loopne
and
out
dec
pop
pop
lahf
test
push
outsb
cmp
aad
gs
jo
dec
inc
cmpl
dec
xchg
out
cwtl
ss
popf
pop
arpl
fiaddl
add
push
movsb
or
xor
loopne
insl
push
test
repnz
pop
mov
jmp
cmpsl
lea
lock
mov
stos
cmp
xor
test
insb
sarl
mov
mov
enter
mov
es
sbb
inc
jp
and
cmpsb
arpl
mov
rcl
add
bound
mov
jp
rcrb
clc
cli
push
cmpsl
adc
movb
popa
ss
jmp
jecxz
adc
xor
popf
pop
push
xchg
ret
mov
xchg
pop
lock
jmp
cmpsl
je
xchg
cld
mov
loope
ret
mov
jbe
popf
enter
stos
add
or
test
insb
lahf
outsl
fs
inc
cmpsl
jns
ja
outsb
sahf
test
fiadds
adc
movsl
cmpsl
aam
mov
dec
push
ss
push
lret
sbb
jbe
inc
and
ret
pushf
sub
js
push
loopne
dec
mov
mov
pushf
cmp
pop
nop
fwait
pop
dec
pop
and
sbb
cmc
mov
scas
es
xor
popa
ret
inc
xchg
push
xchg
jg
aam
push
dec
scas
repz
pop
jle
cmp
inc
sahf
cmc
add
aaa
int3
sub
push
pop
stc
repnz
jmp
fs
xchg
out
shrb
pop
add
or
or
adc
push
fiadds
mov
fsubp
mov
lock
xor
mov
loopne
jo
aad
imul
cmc
cmp
cmp
pushf
cs
repnz
xchg
push
or
add
dec
movsl
dec
add
jl
xchg
hlt
lret
add
mov
cmp
leave
inc
mov
sbb
add
inc
stos
mov
xlat
or
aad
addr16
push
lret
push
ficompl
jns
loope
hlt
jg
or
xor
mov
notb
mov
loope
out
push
xchg
outsb
jmp
adc
int3
mov
fdivs
je
mov
incl
or
and
cmp
shrl
movsl
jg
jne
and
movsb
cwtl
push
ficoml
lods
ljmp
iret
popa
movsb
pop
or
je
ret
sahf
lea
rcrb
dec
mov
mov
add
cmpsl
inc
dec
xchg
dec
or
dec
sbb
dec
cwtl
push
sub
std
cmp
jle
das
dec
in
cmp
jno
xchg
pop
shll
xchg
roll
cwtl
dec
sbb
adc
xchg
cmp
push
xor
jbe
mov
mov
xchg
pop
mov
or
dec
cli
pop
leave
cmpsl
adc
jne
push
ljmp
xchg
xchg
andb
sti
push
ja
add
add
xchg
or
xchg
jg
push
icebp
and
jo
idivb
inc
jle
lahf
or
addr16
xchg
mov
test
jecxz
imul
subb
jae
jmp
loope
outsl
aam
fcmovnb
xchg
negl
scas
push
push
lods
dec
in
add
sahf
sbb
rcr
lock
imul
in
mov
mov
clc
and
mov
push
jb
xor
cmp
in
xchg
test
pop
jl
arpl
jb
lcall
pop
shl
cld
negl
xorl
push
xor
adcl
push
xchg
lea
lret
dec
cmpsb
out
iret
fs
rclb
mov
in
int3
jo
cmpsb
mov
mov
jmp
inc
pop
cmpsb
repz
fmul
adc
ljmp
ret
mov
mov
mov
cmpl
dec
into
cmp
adc
push
dec
movsb
add
xchg
pop
xchg
or
lret
inc
add
test
push
mov
or
jmp
aam
jle
inc
movb
out
push
dec
mov
nop
push
and
xlat
jle
pop
adc
hlt
cmp
cmp
lods
sbb
clc
jp
jmp
mov
jmp
mov
add
mov
sbb
fdivp
pop
jmp
add
cwtl
outsb
icebp
xor
pop
adc
test
fdivs
mov
xor
cli
cmc
es
lea
ja
fnsave
inc
xchg
outsb
dec
pop
lret
inc
cmpsl
mov
enter
movsb
loopne
cmc
movsb
push
inc
in
dec
xor
or
test
mov
dec
jg
lcall
in
dec
test
push
arpl
xchg
int
iret
cltd
and
mov
testl
inc
and
ret
cmp
out
or
dec
add
push
pop
imul
mov
or
stc
dec
addr16
or
lods
sub
lods
cs
adc
mov
mov
push
xchg
mov
aaa
adc
cmp
push
ds
test
jo,pn
mov
sub
adc
xorl
in
lret
pop
cmpsb
jbe
cmc
roll
loope
jecxz
cwtl
int
cs
hlt
jns
or
aad
adc
rclb
cmp
add
add
add
or
pop
outsl
inc
jmp
sub
cltd
stc
sub
gs
arpl
jmp
ja
xchg
inc
cmpsb
mov
leave
inc
or
es
dec
insl
push
imul
iret
hlt
fwait
in
pushl
adc
sbb
and
enter
pop
ficoms
ret
outsl
adc
mov
and
adc
cmp
push
add
hlt
sarb
xchg
jne
xchg
jg
out
fwait
push
mov
shlb
psadbw
xchg
jp
mov
pop
aaa
push
movsl
and
and
test
sahf
fwait
or
xor
push
addr16
fsubl
ja
inc
addb
outsl
xchg
push
gs
sti
or
psrld
xor
and
cwtl
push
mov
out
arpl
int
in
std
aas
je
xchg
push
or
xchg
sbb
jbe
xchg
inc
inc
cld
sbb
js
jmp
and
out
rcll
and
mov
add
andl
inc
or
test
mov
hlt
sbb
inc
mov
add
je
dec
lcall
mov
mov
or
dec
push
adc
dec
xor
movsl
push
add
sbb
xor
adc
inc
xor
outsl
in
add
nop
enter
ret
mov
lods
sub
jno
paddusw
scas
xor
negl
add
sub
loopne
jno
xchg
loopne
outsl
jbe
mov
add
or
aad
cmp
mov
stos
test
test
pusha
push
popl
inc
repz
fbstp
lea
push
lods
and
xchg
pop
arpl
stos
loopne
shrb
push
fcmovnu
ljmp
and
call
leave
ret
mov
xchg
int
sbb
dec
push
mov
dec
and
inc
ret
xor
and
add
inc
mov
pop
cmp
dec
popa
lds
push
inc
js
je
sbb
jp
mov
iret
scas
bound
sbb
adc
xchg
adc
mov
cmp
movsb
lods
jg
add
pop
mov
rol
loop
dec
adc
bnd
mov
aad
pop
cmp
pop
mov
div
push
in
mov
jmp
add
sbb
out
test
cwtl
push
out
adc
mov
popf
push
sbb
push
lahf
int
xchg
pop
adc
aad
loope
cltd
int
or
lock
sbb
push
push
mov
push
sub
movl
popf
rorl
mov
movsl
mov
shll
and
mov
mov
pop
fistl
jb
pop
sti
pop
xchg
mov
cld
popf
int
mov
je
out
pushf
imul
push
in
xor
dec
fcmovnb
adc
push
scas
inc
and
mov
mov
call
leave
pop
or
inc
ds
adcl
mov
dec
jecxz
or
sub
sbb
ret
xchg
cmpsl
sub
test
add
fwait
es
ja
mov
xchg
mov
cwtl
ljmp
je
in
mov
sti
popf
mov
inc
negl
mov
pop
sahf
ret
enter
bound
sbb
faddl
push
lahf
fcomp
push
fisubrl
cmpsb
push
imul
shll
push
pop
cmp
pushf
in
sahf
sarl
lret
adc
std
push
or
push
push
push
bound
out
scas
sbb
clc
sbb
aam
and
sti
add
in
mov
in
into
cmpsb
jle
hlt
adc
push
std
jns
jg
or
and
int3
cmp
insl
push
and
and
inc
iret
dec
jge
xor
jl
lahf
aaa
and
mov
cmp
into
adc
add
imul
aaa
int
out
mov
push
mov
sti
test
sub
inc
sub
lahf
cli
stc
ret
mov
xlat
cmp
clc
das
xor
cmp
mov
sbb
adc
jmp
jbe
aad
ret
push
addl
mov
ja
jb
jae
add
sub
adc
or
cmp
imul
std
lahf
cs
cmp
and
push
and
jo
mov
adc
and
cld
jl
push
mov
or
mov
lods
mov
mov
pusha
dec
ss
cwtl
jae
popf
cmp
inc
xor
test
test
mov
pop
or
call
hlt
inc
jmp
mov
lret
nop
hlt
mov
jmp
inc
adc
bound
mov
and
dec
imul
jecxz
fnstenv
adc
pop
nop
shr
or
pop
inc
sbbb
out
inc
mov
addr16
ret
mov
shll
lods
ja
pop
movsl
pop
sbb
leave
sti
shrl
xor
adc
pop
add
outsb
add
mov
shll
imul
jno
sub
stc
and
pop
mov
imul
xchg
adc
pop
sbb
pop
fs
lock
jae
movsb
dec
outsb
inc
jp
arpl
xor
dec
popa
jae
fdivs
jmp
addr16
cmp
fcmove
ja
xorl
sub
in
push
mov
out
sbb
adcb
inc
mov
jmp
bound
and
push
mov
lods
mov
push
scas
mov
mov
in
inc
stos
idivb
insb
mov
adc
push
xchg
or
fs
mov
mov
loope
loop
and
stos
out
mov
adc
xchg
int
xor
pop
es
das
sub
adc
loopne
add
jnp
dec
les
sub
xchg
jno
add
lret
xor
sub
push
cli
jb
cmp
push
nop
fsts
inc
push
sbb
or
fisubs
rcrl
nop
mov
pop
fimull
and
cmp
mov
das
or
xor
std
leave
lret
fdivp
xchg
adc
mov
rorb
xchg
sub
cmp
test
loopne
outsl
jno
ja
jge
adc
inc
jge
mov
mov
fdivr
inc
out
or
add
cld
xor
stos
pslld
int
adc
pop
test
push
inc
int
sti
pop
nop
push
adc
sub
add
sahf
push
pop
pop
lock
sub
add
into
out
push
cmp
bound
popl
repz
jmp
push
movsl
push
sbb
cwtl
mov
ss
loopne
inc
test
lahf
dec
xchg
jge
inc
lret
cmpsb
mov
mov
into
and
pop
push
ror
mov
mov
std
jg
xor
loopne
ljmp
nopl
movsl
imul
and
mov
int3
inc
fwait
pop
xchg
push
lods
in
enter
mov
in
aaa
lea
push
mov
call
bnd
inc
xchg
ljmp
jg
int
cmp
pop
jo
pop
sbb
xor
pop
dec
pop
sub
jns
push
sarl
inc
testb
jno
jge
rorl
push
lods
dec
inc
leave
mov
sti
mov
pop
mov
daa
movq
mov
mov
sbb
pop
and
dec
push
push
jge
jb
aaa
sub
jbe
cmpsl
sti
dec
in
mov
fwait
mov
jno
lock
pop
fwait
xor
aad
push
cmp
push
or
mov
or
dec
push
inc
mov
mov
sbb
iret
rcl
leave
or
adc
lea
xor
add
fsubs
add
pop
cmp
dec
rorb
cmp
leave
nop
mov
and
jle
adc
pop
jb
imul
pop
inc
stos
mov
imul
call
icebp
sbb
adc
cmp
insb
xor
dec
lods
sub
jnp
push
fnstcw
xchg
sbb
xchg
lcall
mov
repnz
xchg
or
mov
dec
lods
fnstcw
shlb
dec
fldl
cmp
or
push
sbb
popf
test
lret
or
sub
imul
adc
scas
mov
sahf
or
push
test
and
xchg
xorl
jno
xchg
jae
lret
test
sahf
sti
insl
and
add
jbe
lea
jb
movsb
in
mov
inc
mov
push
sbb
xchg
mov
mov
xchg
cs
in
sub
xor
xchg
xlat
sub
imul
ret
test
jb
sbb
dec
test
test
sub
loopne
push
insb
adc
fdivl
int
aas
mov
xor
mov
push
push
enter
movsb
mov
cwtd
dec
nop
mov
jge
xor
fidivs
jo
adc
sbb
mov
cmp
mov
clc
sarb
ljmp
mov
mov
test
sbb
es
xchg
ds
lcall
or
mov
mov
imul
call
cs
xchg
xor
outsl
xor
and
insb
jle
call
xchg
inc
cmp
das
out
mov
ds
add
lea
popf
or
inc
pop
test
leave
pop
mov
mov
inc
push
scas
out
xchg
sti
andl
pop
imul
scas
filds
mov
das
loope
mov
jns
jb
sub
sub
stc
push
and
pop
arpl
add
sahf
pop
nopl
das
divb
xor
mov
ds
gs
pop
and
pushl
jne
and
inc
imul
mull
daa
repnz
adc
sub
jno
inc
or
je
push
mov
mov
cmp
pop
movsl
jp
inc
clc
lcallw
push
mov
cs
icebp
jo
lcall
mov
mov
rcll
movsb
jbe
sbb
out
outsl
mov
and
pusha
sarl
les
mov
mov
dec
mov
mov
and
push
iret
add
int3
scas
pop
inc
cmp
test
sbbl
dec
or
lds
cmpb
mov
std
andl
push
and
lods
push
push
push
xchg
xchg
xchg
jp
je
add
mov
push
dec
xchg
fcomps
cmpsl
dec
arpl
push
jnp
or
out
call
shr
outsl
loopne
sbb
pop
sub
mov
cmpsb
in
hlt
inc
and
sub
and
test
lcall
adc
cmp
les
sldt
ds
aad
and
mov
aad
cmpsl
sub
stc
jo
push
xor
sbb
addr16
adc
pop
push
mov
xchg
arpl
testb
loopne
add
adc
rorl
jp
xchg
icebp
js
out
push
clc
in
jle
and
mov
loope
int3
in
jns
je
insl
inc
push
pusha
fimull
mov
mov
push
sbb
inc
sbb
cmp
sbb
sub
je
aad
movsl
dec
imul
mov
pop
and
fildl
cmp
push
sub
push
sbb
aaa
lock
sbb
inc
adcl
divb
dec
sub
outsb
stc
mov
daa
loop
imull
out
dec
add
idiv
loop
rol
fnstsw
sub
ljmp
faddl
fs
icebp
repnz
test
lcall
sbb
and
bound
mov
cmp
lods
lret
pop
adc
push
jg
notl
ret
cmp
cmpsb
loope
or
rolb
xchg
bswap
jb
test
mul
lret
add
or
notb
insb
sbb
stc
xlat
mov
lea
jno
insl
mov
std
out
bound
aas
arpl
clc
outsb
in
sub
jne
fimuls
cmp
movsl
int
dec
lea
rcll
dec
sbb
and
test
fnsave
std
insb
adc
inc
std
jo
mov
dec
xor
dec
test
or
lods
ja
repnz
bound
sbb
leave
fnstcw
xor
add
js
xchg
ficoml
fstpl
sbb
inc
das
in
dec
fwait
cltd
fwait
sti
push
dec
sbb
ss
push
adc
sub
xchg
mov
lock
xor
shll
test
mov
shrl
stos
fisubrl
rorl
lods
rcl
fucompp
inc
call
push
sub
loope
jecxz
mov
sub
jo
lret
iret
test
push
arpl
adc
test
ret
add
icebp
pushw
mov
ja
outsb
push
out
imul
fwait
rol
push
push
xlat
insb
nop
xor
das
cmp
dec
popf
in
in
push
adc
lret
aam
nop
push
pop
aam
shlb
cltd
rorb
and
add
mov
cld
fucom
or
mov
lds
mov
sahf
dec
dec
int
add
ds
sub
mov
and
js
call
sbb
fdivl
insl
outsl
sub
cmp
dec
pop
je
fdivrs
mov
jbe
lcall
cmp
and
mov
out
imul
icebp
movl
add
movsl
add
cli
outsl
fwait
or
les
sbb
sub
add
mov
cmpsb
jne
xchg
add
dec
jns
xchg
dec
outsl
movsb
mov
dec
cmp
mov
dec
mov
call
arpl
cltd
fwait
or
dec
imul
or
xorl
mov
popl
repz
iret
adc
shrb
push
xchg
cmp
movsl
cmp
lret
in
das
gs
pop
aad
mov
fisttpl
adc
xor
addr16
mov
shll
mov
push
mov
xchg
push
add
xchg
lcall
bound
mov
addr16
fidivs
xchg
daa
xchg
and
dec
mov
sbb
push
jne
lods
jmp
addl
sti
push
mov
sbb
sahf
cmp
test
and
sbb
cwtl
mov
clc
jle
popl
sti
testb
cmp
movsl
inc
mov
adc
outsb
pop
lds
xchg
pusha
push
mov
mov
and
call
jnp
mov
fiaddl
pusha
jecxz
adc
mov
sti
xorl
jo
push
mov
movsl
cs
shrb
xchg
sbb
push
xchg
sbb
add
pop
xor
loope
cld
mov
dec
faddl
mov
test
inc
lret
fldlg2
mov
insb
sbb
add
mov
cmp
arpl
xchg
loop
sarb
sub
das
mov
xchg
push
or
push
cmc
fdivrs
nop
cltd
sbb
cmpsb
cmp
dec
in
les
fidivrl
push
xchg
lds
mov
cmpsb
pop
dec
mov
adc
cmp
dec
inc
inc
movl
cld
add
loop
xchg
push
aam
dec
ds
dec
popa
pop
xchg
pusha
xchg
xchg
mov
fwait
imul
inc
inc
xlat
stos
cli
sti
lock
push
cmpsb
in
cmp
pop
ret
jne
mov
sub
fdivl
clc
push
pop
mov
cwtl
or
outsl
pushf
movsl
mov
and
outsl
int
dec
adc
or
pop
mov
pop
lea
or
mov
fcomip
push
push
inc
add
aaa
mov
xchg
xor
lcall
and
mov
movsb
sbb
pop
loopne
cmp
pop
mov
call
outsb
inc
je
rcrl
jecxz
scas
dec
inc
scas
jmp
rorl
fdivl
fistl
daa
nop
inc
pop
xchg
jmp
xchg
jle
dec
xor
pop
mov
sub
mov
rclb
dec
stos
enter
cwtl
pop
sub
stc
lahf
es
ljmp
fcompl
push
orl
push
fbld
or
mov
sbb
sarb
movsb
test
mov
xchg
in
cmp
movsb
add
mov
mov
enter
and
sbbl
pop
cltd
inc
pop
adc
aad
push
mov
dec
loope
ffreep
mov
ret
aad
cmp
divl
enter
add
je
sbb
and
mov
mov
movsl
mov
js
aad
and
mov
fdivrl
xchg
pop
notb
vpcmpgtw
rcr
aad
mov
test
sbb
pop
xchg
pop
scas
xchg
cli
push
test
test
mov
add
stos
sbb
jge
int
jno
repnz
inc
add
ret
mov
int3
cmp
es
loop
dec
les
cmpsb
push
inc
ja
jno
out
xchg
pop
sub
lret
sbbb
cwtl
ljmp
in
sbb
pop
addl
ss
mov
push
pop
and
dec
aas
lods
lret
pop
mov
movsb
mov
stc
cmc
cmp
sbb
push
outsb
mov
sub
cmc
sti
cltd
cmpsl
stos
sbb
sahf
int
test
movsl
or
fstl
ret
dec
xchg
arpl
inc
outsl
cmp
aas
cmp
mov
ja
aaa
repnz
pop
xor
mov
add
inc
jne
add
jge
int3
pop
inc
fsubs
mov
inc
rolb
adc
pop
add
xor
xchg
adc
mov
cmpsb
fdivl
push
les
pop
out
iret
roll
loop
xchg
icebp
mov
sub
cwtl
shld
sbb
int3
push
psubd
jns
addr16
and
nopl
sub
pop
shrb
scas
xchg
inc
cltd
push
movsl
mov
push
pop
jl
inc
arpl
xor
push
jmp
jo
xor
cmp
loopne
cld
sarb
fdivrl
stos
pop
inc
jno
shrb
cltd
pop
loope
loopne
xchg
dec
mov
movsb
inc
jmp
rol
lea
pop
jb
xor
dec
pop
adc
into
jns
sbb
push
xchg
xor
push
fadds
data16
mov
enter
mov
inc
adc
data16
mov
fimuls
jns
mov
iret
movsb
dec
pop
mov
jmp
scas
int3
lea
shrl
mov
mov
out
insl
stos
fs
loope
imul
or
test
lods
repnz
push
dec
jg
xchg
test
ja
inc
mov
data16
push
jb
scas
stos
in
outsl
lahf
xor
mov
enter
ljmp
xor
gs
rclb
and
out
cmp
adc
push
xor
xchg
int
cmp
fcomi
mov
and
pop
test
cli
lds
pop
std
add
xchg
mov
sub
xchg
mov
cmp
jbe
cmpsb
inc
loopne
imul
cwtl
push
or
out
cmc
mov
sbb
aaa
mov
xchg
dec
js
push
aaa
xchg
xchg
andb
or
pop
imul
jle
jmp
out
mov
jmp
out
cld
pusha
xlat
jnp
mov
frstor
daa
flds
pop
add
cmp
int
ja
push
mov
lahf
outsb
scas
arpl
push
push
xor
js
push
jp
and
pop
loope
and
xor
jp
pushf
dec
mov
cmc
stc
cmp
add
cmpsb
jno
cmpsb
loop
les
fxch
xlat
mov
pusha
lcall
int
or
dec
xorb
insl
push
daa
enter
pop
inc
aaa
fiadds
add
mov
ficompl
mov
ja
stos
inc
dec
pop
dec
push
outsb
inc
push
repz
sarl
ljmp
sbb
xchg
fildl
sbb
arpl
push
adcb
daa
mov
sub
sbb
mov
sarb
cmp
adc
in
xchg
loopne
test
in
gs
jae
movsb
in
mov
xchg
outsb
data16
jns
hlt
sub
pop
jo
jae
add
push
mov
inc
fidivl
cmp
push
ret
jnp
clc
aad
cmc
lock
gs
mov
in
mov
mov
mov
sub
in
mov
lret
sbb
pop
jo
pushf
jae
dec
pop
sbb
clc
cmpsb
sub
adc
subb
dec
stc
daa
xor
test
out
in
mov
push
xor
mov
inc
cmp
dec
xlat
jl
arpl
les
mov
jg
orb
pop
and
pusha
push
sahf
pop
mov
aam
out
pop
ds
imul
mov
sub
mov
fstpl
cmp
push
int
and
fists
jae
bound
jbe
push
movl
inc
out
movsl
and
int3
dec
cmp
int
add
mov
xor
and
aad
faddl
sar
popf
es
pop
inc
add
repz
pop
scas
push
push
jg
mov
xchg
pop
pop
notb
pop
push
cmp
cmp
or
insb
and
aaa
push
mov
out
std
jo
in
xchg
add
faddp
add
jmp
cwtl
test
rclb
pushf
data16
add
xchg
mov
mov
cs
push
push
shlb
or
movsl
dec
pop
cmp
sub
scas
mov
or
pop
scas
push
movsb
filds
das
mov
add
into
cld
and
sbb
into
sbb
test
lcall
cmp
pop
xor
ficoms
cld
add
in
je
mov
mov
cmp
test
call
cwtl
arpl
adc
mov
ja
stos
lock
add
and
adc
mov
ja
pop
mov
frstor
aas
and
lret
das
shll
cmpl
sub
pop
scas
test
xchg
fwait
test
cmp
add
in
sub
clc
pop
cmpsl
xor
jl
insl
adc
jg
repz
dec
lock
shrb
loop
xor
mov
mov
and
ja
push
fisubrs
int
aaa
aaa
and
iret
add
out
in
fistpll
push
and
cld
sbb
dec
into
mov
imul
enter
iret
into
or
jbe
mov
aam
shrl
fcmovne
sbb
movsb
mov
push
test
xor
xlat
push
xlat
imul
pusha
xlat
cmp
test
cmpsl
fldl
cmc
icebp
into
push
jecxz
or
jg
clc
call
in
push
inc
push
cmpl
inc
aam
int
nop
cld
jnp
cs
sbb
incb
dec
mov
dec
out
fisttps
sub
movaps
jnp
pop
cmp
insl
jb
rcl
add
cmp
sti
das
jno
bound
outsl
outsl
lret
xchg
sub
inc
fcmovb
daa
xor
jno
mov
push
call
cmp
sarl
ja
mov
scas
and
outsl
sub
xchg
call
fsubrl
rol
xorl
ret
xlat
out
xlat
iret
adc
fistpll
xor
push
dec
mov
mov
aaa
pop
aam
mov
ret
mov
dec
sarl
dec
ljmp
xchg
and
jnp
inc
or
pop
xorb
cmp
xchg
sbb
mov
out
push
add
insb
repnz
out
dec
sar
imul
xchg
push
adc
jg
fsubrl
mov
xor
mov
or
mov
enter
jnp
and
dec
mov
lods
cmpl
into
popa
inc
out
push
mov
mov
cli
sub
dec
roll
mov
dec
mov
xchg
add
jb
jbe
mov
adc
pop
jmp
push
inc
cmc
mov
enter
xorb
stos
mov
mov
ljmp
sub
mov
jecxz
jbe
into
in
rcrb
sbb
sbb
cmp
sbb
out
popa
stos
or
iret
mov
loope
sti
lahf
das
iret
pusha
adc
xchg
push
mov
arpl
and
pop
jmp
xor
mov
shr
aam
add
out
ljmp
or
or
pop
lock
and
cmp
sbb
lds
xchg
xchg
out
mov
lahf
icebp
lds
out
movsl
rorl
psubusw
mov
mov
jmp
movsl
push
push
bound
ja
pop
mov
jne
cmp
and
divb
outsl
inc
insb
sub
aaa
or
cmp
push
jb
lock
push
insl
ss
sub
jmp
psubsw
insb
dec
jb
cmp
rorb
aas
xchg
or
sbb
pop
loope
in
loopne
sub
outsl
and
mov
imul
ljmp
dec
push
push
movsl
nop
shl
scas
mov
iret
mov
iret
lods
imul
push
push
mov
push
pop
push
rcll
dec
add
inc
xchg
repz
hlt
mov
inc
lea
jno
loope
add
pop
xlat
andl
pop
pop
and
cmpsl
lock
push
cli
dec
notl
sbb
cli
fxch
in
ret
test
sbbb
pop
pop
mov
outsb
pushf
push
iret
add
nop
push
sbb
add
mov
bound
fistpl
sbb
lret
pop
pop
insl
repnz
shlb
mov
cmp
add
adc
fdivrp
add
pop
insl
test
or
ja
ss
aaa
push
or
int
movsb
dec
push
ret
push
push
insb
int
fildl
sbb
repz
push
mov
adc
imul
lea
mov
sbb
push
in
jo
stos
fstps
mov
sub
stc
orb
icebp
inc
mov
sub
xor
and
jle
jne
fdiv
lock
and
xchg
fnstcw
push
and
ret
pop
mov
xchg
lcall
inc
stc
cmp
das
loop
jmp
pop
cmpsl
jbe
pop
lds
sbb
adc
out
mov
fnstenv
sub
mov
adc
ret
cli
pop
pop
das
sbb
int3
push
jnp
shrb
cmc
mov
cmc
mov
js
mov
jb
mov
scas
push
pop
pop
insb
inc
cmp
cwtl
pushf
leave
mov
xorl
mov
add
mov
outsb
shll
ljmp
fsts
loope
ret
movsb
sbb
push
jno
dec
sbb
loope
jle
je
pusha
mov
push
sbb
ljmp
fucomip
sbb
mov
shrl
ret
pop
mov
and
leave
xor
leave
pandn
ljmp
testl
push
mov
cmc
arpl
mov
rcr
lret
mov
sub
popl
mov
scas
lahf
mov
mov
popf
jmp
lret
jl
subb
inc
mov
mov
cld
jns
inc
push
loop
cmp
and
adcb
dec
cs
mov
in
mov
add
sub
mov
enter
mov
jo
jne
data16
mov
call
js
xor
add
in
test
cmp
adc
or
loope
in
das
in
dec
sub
mov
out
lahf
pop
add
mov
inc
repz
cmp
sub
cs
sbb
inc
push
ss
xorb
push
imulb
xchg
add
pop
push
jbe
sbbl
stos
xor
and
popf
cs
push
xchg
hlt
xchg
xchg
or
add
adc
push
popf
repz
jp
insl
or
test
cmc
jmp
dec
lds
std
pop
dec
mov
pop
nop
out
or
rolb
cli
xbegin
or
mov
fldenv
mov
popf
xchg
mov
mov
pop
ret
inc
daa
arpl
testl
daa
inc
js
pop
jo
rorl
mov
sub
repz
pop
loop
movsb
push
mov
jle
js
and
mov
std
lods
fdivrl
loope
stos
into
cli
mov
adc
inc
inc
push
add
fs
cmp
push
rcrl
imul
fcmovbe
mov
andb
mov
jbe
lods
std
mov
js
add
orl
ret
in
adc
push
jmp
cmp
mov
cmp
insl
fstp
jmp
jb
out
aad
je
ud0
ss
pop
jp
dec
bnd
pop
and
inc
in
push
aas
sbb
mov
sub
in
jge
test
adc
jno
ss
and
stos
stc
pop
cs
xor
mov
stc
imul
pop
sbb
fs
loop
push
jno
movsl
xor
jge
xor
mov
sbb
push
mov
jne
adcb
test
xor
in
scas
cmp
add
cmp
popf
adc
lahf
arpl
out
je,pn
mov
cmp
imul
rcll
in
sbb
pusha
pop
mov
outsl
fnsave
push
sbb
jl
mov
jge
shrb
test
cmpsl
sbb
pusha
push
in
mov
xor
jmp
inc
in
fsubs
push
loope
adc
subb
pushfw
pop
cmp
daa
test
pushl
pop
pop
add
add
pop
int
mov
xor
cltd
dec
rolb
shl
xor
mov
push
scas
inc
xlat
rclb
sbb
push
enter
pop
jnp
outsb
mov
sti
into
dec
cmp
mov
outsl
adc
adc
sub
adc
sbb
pusha
cmpsb
aam
ret
dec
rcll
pop
jnp
adc
xlat
jae
outsl
add
clc
mov
inc
cmpsl
fmuls
lds
ss
jae
shll
jp
imul
mov
adc
xchg
test
clc
popf
iret
iret
fyl2x
xlat
andl
gs
inc
or
cli
filds
ja
push
pop
or
mov
inc
scas
sub
scas
mov
add
fisttpll
aam
mov
ret
push
lods
mov
inc
or
jbe
cmp
cmp
scas
add
and
mov
fcmovnu
pop
shll
lds
mov
dec
stos
adcb
mov
mov
insl
jg
xor
test
xchg
mov
mov
dec
add
or
rcl
pop
mov
or
rcr
xchg
dec
adc
or
mov
adc
pop
ret
lea
les
xchg
jl
xchg
pop
hlt
call
push
pop
and
in
add
mov
fcomps
add
adc
in
push
and
insb
cmp
jns
cli
idivl
jle
inc
stos
pop
icebp
sar
adc
mov
movsl
mov
popa
mov
lock
jo
fldl
out
out
xorl
sbb
or
lock
add
pop
loope
mov
popf
xchg
lcall
lahf
push
jno
bound
leave
push
sbb
or
dec
js
add
fadds
call
push
inc
ret
pop
ret
outsb
pop
rcl
out
xchg
outsl
lret
repnz
xlat
les
fmull
mov
sub
pop
add
stc
pop
loop
inc
add
pop
push
insb
xor
mulb
sub
mov
xor
fucom
jnp
jb
xchg
hlt
fwait
insl
clc
aas
sbb
sub
mov
pop
dec
add
int3
sbb
pop
jg
sub
sti
xor
stos
mov
cli
ss
pop
mov
lea
ss
rolb
jno
les
fldt
mov
push
notl
jae
mov
pop
adc
jp
jb
aas
adc
andb
xchg
aad
jle
sahf
jecxz
test
lods
and
sub
inc
lods
jle
mov
pop
in
dec
mov
repnz
dec
mov
add
imul
popf
xchg
sub
enter
dec
shl
pop
mov
fwait
je
cmpsl
push
jo
cwtl
test
xlat
add
or
jne
shlb
aam
xchg
mov
cmp
out
arpl
stos
adc
jb
lret
cmp
push
pop
iret
pushf
jmp
cwtl
or
mov
sarb
aam
mov
insl
push
pushf
pop
jg
mov
test
sub
xor
jb
push
dec
cwtl
mov
addl
xchg
dec
xor
fnstcw
push
shll
dec
insb
add
mov
jnp
inc
dec
test
mov
add
jbe
lret
andl
jp
pop
xor
dec
rep
imul
dec
push
inc
imul
into
ret
mov
lret
cli
add
clc
cmp
pop
jnp
jo
mov
xor
stos
lds
data16
clc
push
fsubrs
shlb
mov
arpl
dec
gs
add
and
push
cs
icebp
das
dec
enter
arpl
push
jno
dec
add
and
and
sbb
sub
pop
sub
out
inc
cmp
add
pop
dec
lret
add
mov
or
mov
adc
cmp
mov
inc
mov
adc
scas
jg
jle
leave
push
adc
cmpb
cmc
sarl
stc
fstpl
fmul
adc
mov
mov
push
test
filds
cld
xor
dec
xor
movsl
xchg
fdivrl
jnp
jb
std
lods
fadds
movsl
push
repz
into
clc
push
cwtl
cmp
and
jg
cmc
jb
out
sub
pop
add
aaa
xchg
xchg
cltd
aaa
out
and
nop
ss
jle
sbb
xchg
inc
rol
out
in
add
loope
cwtl
mov
cmp
int
cmp
data16
and
push
sub
jbe
stos
movsl
in
push
adc
mov
cld
fwait
jmp
mov
dec
sahf
jae
mov
mov
adc
in
push
sub
mov
or
push
es
adc
mov
push
mov
aam
sti
push
xchg
or
dec
push
adc
add
jg
ja
mov
test
out
pop
push
add
mov
inc
out
cmpsb
mov
add
push
push
dec
xchg
xchg
mov
jmp
in
jecxz
sbb
sub
fldlg2
pop
adc
fimuls
mov
xchg
imul
dec
sbb
jp
and
mov
jp
lcall
lock
test
inc
pop
xor
jnp
lret
jnp
push
ljmp
mov
xor
jg
pop
jg
push
dec
pushf
dec
xchg
adc
loope
cs
xor
jmp
stc
jp
or
xchg
inc
call
sti
insl
cmpsl
mov
fnstcw
aaa
ja
sbb
mov
push
mov
in
fs
lea
sahf
push
dec
adc
cmp
mov
subl
std
test
popf
inc
sti
lods
loopne
stos
neg
jle
push
arpl
adc
and
fisubrl
pop
push
into
xor
insl
add
outsb
das
scas
pop
mov
xchg
repz
ds
bound
dec
mov
cmp
fisubs
hlt
and
inc
dec
push
mov
cld
int3
mov
inc
insb
scas
aad
sbb
dec
pop
sbb
mov
adc
ljmp
enter
mov
sub
scas
unpcklps
test
and
cwtl
pop
ja
and
mov
push
and
jne
adc
or
push
xor
mov
out
ret
lcall
push
sub
popa
lods
mov
fisubs
cvtdq2ps
mov
arpl
pop
cmp
cmpsl
cmp
mov
cmp
push
filds
nop
sbb
pop
pop
or
scas
pusha
sbb
and
sbb
mov
outsb
mov
testl
xchg
inc
ds
mov
dec
pop
in
xchg
les
outsb
cmp
push
mov
inc
add
jl
pop
mov
incl
jae
xor
hlt
jp
roll
mov
in
mov
pushf
iret
movsl
sub
cmovns
aaa
loopne
cmp
jo
mov
inc
mov
mov
xlat
sub
cmp
and
xchg
inc
xabort
cmp
std
ss
pushl
cmp
and
shll
mov
mov
mov
rorl
dec
pop
leave
leave
xchg
pop
rcrb
pop
xor
sub
fbld
xchg
and
dec
push
lock
pop
adc
add
sbb
jg
add
jb
test
pop
mov
rcrb
imul
arpl
add
mov
xlat
cmp
mov
sub
rcrl
enter
sti
addb
pop
push
test
dec
mov
xlat
push
fidivrs
sbb
cmp
inc
lcall
hlt
xchg
jno
cld
sub
negb
mov
mov
jecxz
mov
jecxz
inc
cli
dec
and
and
and
ret
mov
sbb
out
jno
repnz
jge
cmc
mov
sarb
fbld
add
pop
loop
loop
test
mov
add
cltd
movsl
and
mov
ss
mov
outsl
dec
mov
lret
out
sub
imul
sbb
and
push
dec
lret
mov
mov
mov
scas
loopne
pop
mov
pop
or
les
pop
loopne
or
jno
push
lahf
pop
xchg
and
xchg
outsb
cmp
sahf
lods
xchg
push
mov
nop
push
sub
idivb
sub
mov
adc
add
popf
inc
add
rcr
js
arpl
inc
push
pop
push
sbb
aas
xor
and
mov
push
movb
xchg
and
cmpsl
lea
and
pop
lahf
push
mov
into
sub
orl
stos
ret
mov
out
mov
jno
loope
cli
gs
sub
sti
cmc
insl
push
xor
inc
pop
mov
orl
jnp
subl
ret
xchg
add
mov
stc
cmp
loopne
shlb
addr16
in
lock
sbb
hlt
jp
sbb
out
mov
stos
outsb
loop
dec
add
repnz
sub
pop
stc
mov
pop
and
aaa
dec
leave
ljmp
mov
orb
mov
inc
lcall
xchg
mov
cmp
pop
sti
imul
add
test
and
rcrl
jl
lahf
cli
jae
sbbl
cmp
jno
fdivrl
pop
sbb
inc
arpl
out
adc
dec
jnp
pushf
ror
out
mov
add
adc
sub
mov
inc
or
pop
in
das
xchg
mov
push
loope
adc
adc
test
insb
and
cmpsl
bnd
sub
push
adc
adc
cli
cs
test
add
dec
adc
in
subl
lock
or
pop
data16
cmpsb
loope
dec
dec
xchg
sbb
and
aam
jmp
jge
mov
and
mov
flds
aas
mov
shll
in
mov
xchg
iret
add
insl
push
scas
sub
sbb
and
call
mov
lods
inc
jmp
movsb
add
bsr
push
ljmp
lods
add
in
hlt
imull
lcall
popa
dec
fcomp
andl
loope
push
dec
mov
je
cmp
stos
mov
dec
jmp
in
adc
jne,pn
mov
pop
fisubs
mov
stc
test
stc
add
lea
jl
in
rolb
xor
cs
xchg
mov
pop
push
fninit
dec
jne
mov
shl
aaa
or
in
ror
je
es
enter
cli
movsb
jnp
outsl
sbb
mov
in
xchg
push
test
adc
jge
adc
push
jo
sti
xor
adc
gs
mov
mov
mov
sbb
sar
insl
or
push
pop
and
or
shlb
xchg
jns
inc
jns
inc
push
test
scas
mov
sub
and
pop
pop
dec
faddp
icebp
je
fbld
sbb
je
bnd
into
push
les
jns
mov
mov
pop
lcall
push
mov
movsb
pop
mov
sbb
lock
out
scas
in
outsb
jle
jbe
push
test
fdivs
inc
andl
inc
mov
cmp
scas
mov
adc
mov
jmp
sbb
xchg
cli
aaa
jl
cwtl
mov
sbb
mov
mov
dec
sub
rolb
push
push
mov
cmp
jnp
dec
cmpsl
xchg
insl
jbe
mov
xchg
mov
push
repnz
mov
xchg
nop
nop
out
adc
pop
addr16
in
mov
movsl
dec
into
sbb
flds
pop
shl
mov
gs
and
adc
pop
mov
fidivs
lock
mov
jb
cwtl
lret
repnz
insb
pop
enter
orl
mov
fidivrl
dec
pop
jp
jno
lods
xor
test
sub
inc
lahf
push
push
loop
mov
pop
es
cmp
push
pop
je
iret
xor
cltd
fbstp
mov
jmp
stc
insb
enter
ss
es
out
inc
insl
mov
push
test
dec
filds
xchg
inc
xchg
and
popf
testl
fisttps
stc
das
mov
lods
out
cmpl
fwait
push
cltd
xor
imul
shll
and
fcmovnb
addl
dec
test
popa
mov
pop
clc
xchg
icebp
jne
dec
data16
add
stos
fldl
push
inc
mov
jns
push
jecxz
pop
dec
popa
and
jbe
or
mov
mov
mov
dec
cld
jne
jo
test
je
push
pminsw
mov
push
es
push
xchg
sbb
inc
rcl
pop
mov
push
pusha
sub
and
cs
test
or
je
sti
mov
test
push
hlt
or
xor
int3
in
cmpsl
add
jmp
or
sbb
push
in
mov
fiaddl
push
icebp
sbb
dec
xchg
or
xchg
ficompl
cld
in
mov
mov
mov
shlb
mov
jbe
adc
mov
enter
fldenv
push
lret
lcall
mov
jg
hlt
dec
mov
outsb
leave
repnz
jmp
call
dec
sbb
xchg
test
jl
add
lock
add
adc
xor
cmp
sbbl
lods
or
test
add
mov
mov
ret
xor
sub
outsl
mov
shlb
lds
xor
enter
sub
ss
dec
insl
mov
stos
ja
sbb
outsb
test
out
out
mov
jo
sti
pop
and
sub
mov
lret
hlt
pop
fsub
inc
jle
cmpsb
push
cltd
or
xor
insl
lods
jmp
add
inc
outsb
mov
push
push
repnz
aad
xor
inc
adc
repz
rorl
out
adc
lcall
arpl
mov
cwtl
in
in
inc
cwtl
jecxz
sub
inc
ficompl
add
dec
and
popa
stc
test
mov
movsl
dec
test
push
sbb
jnp
repz
leave
xchg
lcall
jno
sub
add
pop
add
out
fidivrs
popa
fidivs
testb
gs
sbb
jge
fnsave
jne
xchg
xor
out
mov
cmovne
and
test
xor
cwtl
sub
jmp
push
movl
ljmp
jb
lcall
lea
cli
cmp
cmpsb
inc
add
lods
psubw
stc
jno
xor
enter
jo
sbb
popf
push
lea
hlt
imul
imull
adc
mov
push
add
xor
xchg
add
pop
std
or
aam
aaa
pop
lods
fbstp
clc
push
adc
movsb
or
sbb
xchg
movb
push
int
mov
xor
stos
mov
cwtl
xor
xchg
and
jg
stos
mov
dec
jbe
cmpsb
clc
xchg
push
jno
popf
xchg
sbb
push
mov
jo
adc
call
xchg
pop
call
ds
dec
icebp
cmp
outsl
inc
jnp
sbb
mov
inc
cld
push
cmp
sub
or
mov
mov
inc
cmp
inc
cmpsb
negb
iret
aas
pop
out
movsb
xlat
inc
rclb
cmc
or
jge
pop
jns
mov
dec
out
out
in
imul
inc
or
cs
icebp
sarl
pop
xchg
aaa
push
inc
in
int
ret
sbb
dec
mov
scas
mov
or
or
outsb
into
test
retw
inc
push
adc
data16
lods
cwtl
mov
add
xor
xchg
and
push
fnsave
add
aas
popf
xchg
ds
inc
push
pop
rcrl
mov
andb
jnp
shlb
in
scas
add
pop
cld
sub
jns
jae
mov
push
fidivs
adc
xchg
mov
pusha
test
push
mov
add
lea
pop
push
sahf
stos
popa
pushf
jl
lahf
mov
mov
adc
jns
loopne
sub
sti
fildll
hlt
jle
popf
stc
or
dec
insb
in
pop
mov
sub
pop
pop
or
das
mov
scas
out
cmp
push
cmp
out
sbb
iret
jne
cmp
add
dec
mov
jge
push
add
sub
xor
dec
or
enter
nop
mov
insb
xchg
mov
mov
jmp
push
popf
icebp
call
push
xor
sahf
sbb
push
shlb
lgs
or
add
sarl
aad
add
inc
xor
stc
jge
popf
adcb
xchg
and
mov
jae
sub
sbb
clc
pop
inc
cwtl
lahf
mov
inc
inc
xchg
shll
jmp
test
sbb
cmpsl
xchg
popa
lods
lcall
or
xlat
cmp
sub
adc
sahf
cmp
jle
mov
js
pop
inc
ret
jno
shl
stos
adc
iret
xchg
aaa
mov
outsb
scas
and
andl
lods
add
sbb
sub
push
bnd
arpl
xchg
push
arpl
gs
ja
push
sub
cmpsl
mov
add
inc
and
decb
mov
mov
cmpsl
test
sub
les
lods
add
in
cmc
adc
xchg
add
iret
dec
fisubl
inc
test
and
lcall
test
xchg
push
adc
adc
mov
imul
and
pop
pop
inc
xchg
fwait
test
vdivpd
mov
mull
popf
test
dec
stc
repz
xchg
xchg
test
sub
xor
in
push
cwtl
into
push
xor
and
mov
cmp
mov
xlat
test
outsl
iret
mov
sub
pop
std
pop
les
aad
dec
mov
push
add
out
mov
sbb
nop
aam
aas
ljmp
adc
inc
pop
jb
in
or
ss
mov
sub
xlat
xchg
xchg
test
and
push
mul
fstps
addr16
rcrb
xchg
mov
rcr
ror
out
add
xor
sub
cmc
jns
mov
fstps
or
add
xchg
push
mov
adc
dec
add
outsb
mov
mov
mov
fsubrs
dec
scas
cmp
aaa
clc
mov
lret
or
mov
jno
mov
push
stos
push
dec
jecxz
push
pushf
adc
adc
std
jb
push
fdivrs
jecxz
fwait
mov
pop
adc
sbb
jae
cwtl
cmc
data16
cld
mov
sarb
mov
insl
cmpsl
pop
mov
ljmp
pop
inc
out
decb
insl
mov
je
cmp
dec
jne
xor
mov
push
xorl
movsb
pop
push
inc
sub
jl
cltd
xchg
rorl
scas
mov
xchg
scas
sbb
cmp
push
or
sahf
jg
pop
pop
ret
loope
cltd
les
mov
mov
or
and
mov
adc
mov
fbld
hlt
dec
das
xchg
mov
and
fnstenv
fistps
iret
dec
dec
pmulhw
dec
sti
add
sbb
incb
xor
pop
jmp
pop
jg
cmp
add
xchg
cmp
cmpsb
iret
xor
insl
inc
cmp
pop
adcb
sbb
cltd
push
and
gs
cli
test
add
push
cmp
pop
pop
add
and
loopne
mov
lret
and
pop
fiadds
out
das
out
mov
xchg
dec
xchg
mov
pusha
sub
sahf
das
pop
add
inc
stos
cmp
mov
inc
fst
xchg
xor
xor
add
mov
and
jae
aas
leave
xchg
faddp
push
push
push
sub
dec
mov
cmp
jbe
es
in
inc
sarb
cltd
call
and
fsts
icebp
aaa
out
pop
lods
pop
cmp
flds
jle
mov
push
jp
cmp
fs
imul
addr16
cmpsb
nop
test
in
push
and
ret
ffreep
xchg
push
loop
shll
pop
in
fsubs
jbe
xchg
int3
cwtl
mov
lds
cmpsl
aas
mov
clc
mov
aas
rol
push
scas
imul
or
push
mov
mov
mov
mov
inc
jbe
pop
jno
or
test
jp
xor
sahf
stos
adc
xlat
rcll
mov
sbb
std
nop
lods
fcoml
jae
dec
js
xor
mov
aaa
adc
add
dec
push
cmp
push
dec
into
cld
cmp
xor
add
dec
in
icebp
repnz
push
mov
mov
xor
das
stos
call
jge
push
push
adc
dec
push
adc
in
sub
aad
insb
mov
push
das
push
sbb
push
stos
out
push
dec
enter
movsb
cld
pop
roll
lahf
pop
nop
jecxz
into
adc
icebp
jnp
sub
mov
push
aad
mov
pop
push
or
push
push
mov
mov
gs
and
clc
mov
outsl
pop
inc
jl
call
lock
xchg
sub
add
adc
jae
insb
pop
mov
aad
fwait
mov
pusha
add
jl
inc
pushf
cltd
xorb
pushf
mov
sbb
add
out
push
cmp
jmp
mov
and
xchg
das
and
xor
fstpt
pop
dec
cmc
sub
mov
idivl
les
push
testb
add
imul
xor
stos
push
ret
jo
mov
cmc
sub
fdiv
sub
add
lret
or
or
lret
jl
lods
inc
mull
pushf
jmp
mov
pop
adc
fldt
aaa
push
xchg
jns
jnp
mov
xchg
mov
cmpsl
fimull
jg
scas
fisubrl
or
push
addr16
mov
mov
lret
push
out
std
cli
dec
pop
popl
push
scas
cli
inc
orb
dec
out
and
adc
mov
out
rcrb
and
stos
ds
inc
iretw
aad
and
pop
stos
xor
push
js
xor
push
mov
in
imul
data16
int3
lret
stos
imul
push
add
fmuls
add
adc
sarb
call
mov
push
leave
test
mov
lahf
repz
xor
hlt
fs
ds
js
test
test
adc
sub
sahf
sub
popa
jne
outsl
push
ds
cmpsl
dec
es
add
xchg
nop
cwtl
or
inc
xchg
inc
mov
fimull
aam
shrl
jle
inc
fadds
cmc
sbb
mov
enter
xor
and
xor
jnp,pt
dec
mov
jne
in
lods
xchg
cmp
test
and
xlat
out
sub
add
sbbl
pop
and
orl
pop
inc
and
sti
std
shlb
sti
mov
shrb
sbb
lods
adc
out
push
jo
sub
jae
adc
inc
into
add
sbb
xchg
sbb
dec
mov
int3
or
jge
dec
icebp
lret
es
mov
push
mov
lods
jns
push
pop
jae
adc
jge
ljmp
pusha
and
sbb
push
cltd
push
push
andb
mov
aad
jmp
data16
mov
mov
push
adc
repz
jmp
imull
sbb
stos
push
loop
jb
pop
int
inc
mov
loop
adc
add
and
add
xchg
nop
inc
test
insb
das
shrb
cli
and
das
mov
scas
sub
pushf
dec
iret
cwtl
push
dec
xor
fdivr
nop
es
es
mov
xchg
aaa
cmp
xchg
lahf
mov
insb
imull
or
scas
ficoms
push
mov
aam
cli
mov
or
push
enter
inc
addr16
adc
iret
pushf
pushf
mov
sub
faddp
sub
lret
and
push
dec
xor
stos
lret
mov
mov
hlt
cmpsl
stos
or
enter
jns
pop
lea
push
sub
or
dec
cmp
or
dec
pushf
push
testb
push
fdivs
add
push
cmp
push
mov
sbb
cs
sbb
shll
js
jae
sub
inc
push
fwait
push
mov
aaa
xchg
aam
mov
and
fisttps
outsl
dec
adcl
pop
sub
adc
cmc
push
cld
fcmovnbe
xor
mov
cmp
sbb
dec
in
out
adc
mov
push
mov
cld
adc
push
sti
push
and
sub
int
push
and
pop
xchg
rorb
lods
pusha
jbe
inc
add
jae
pop
ds
fnstcw
rolb
icebp
add
xor
xchg
jg
repz
jae
mov
adc
out
push
mov
in
data16
addr16
add
lods
sbb
ficoml
popf
scas
fwait
sbb
fsubl
cmp
js
imul
xor
dec
mov
lock
std
xor
das
mov
andl
cmpsb
add
push
xchg
cli
and
push
fldl2e
mov
mov
jbe
dec
jmp
mov
popf
cmpsl
cmp
push
jae
xchg
mov
and
dec
sub
lods
xchg
stos
out
mov
subb
inc
mov
push
xchg
mov
imul
cmpsl
daa
cmpsb
test
push
fdivrs
cmpsl
test
ss
jnp
lock
jb
out
sbb
addr16
es
add
daa
fxch
mov
mov
inc
inc
in
inc
push
and
ret
add
mov
in
xor
out
xchg
addr16
or
outsb
ret
pop
test
cmpsb
dec
jge
fdivs
xor
jecxz
cmp
adc
out
xlat
cmp
loop
orb
inc
cmp
or
cmp
cmp
pusha
cli
pop
xor
call
xchg
mov
push
mov
mov
sub
mov
aam
out
xchg
lret
roll
push
sub
sbb
jnp
lahf
leave
add
dec
mov
bound
dec
sar
scas
sub
rcrl
mov
xchg
stc
cmp
xor
scas
aad
fsts
sbb
xchg
add
outsl
jb
pushf
push
out
pop
push
pop
adc
xchg
add
cwtl
lgs
in
pop
and
test
andb
test
test
out
mov
addl
pop
push
aam
je
gs
sub
repz
notl
push
ret
rcrb
pop
mov
testl
and
clc
push
insl
xorb
mov
fdivl
mov
in
and
pop
test
rcrl
pop
arpl
out
lds
jmp
mov
cwtl
out
jae
xor
mov
sbb
xchg
mov
out
cltd
dec
xchg
jo
mov
cli
sbb
imul
test
cmpb
xchg
sahf
outsl
jnp
inc
js
rcrb
je
outsl
cld
data16
or
jle
sub
pusha
icebp
test
mov
pop
icebp
mov
pop
push
sbb
mov
sub
dec
adc
pusha
shrl
adc
push
roll
or
aaa
dec
or
jae
mov
fisttpl
lock
push
pop
inc
mov
test
push
sarb
repnz
pcmpgtw
adc
addr16
sar
icebp
outsl
daa
xlat
dec
popa
stos
jae
adc
pop
hlt
das
rclb
jo
mov
inc
cmp
push
loope
mov
fiaddl
add
icebp
cmpsb
push
sbb
iret
in
mov
ja
outsb
ret
in
in
xor
icebp
loop
jg
adc
cmpsl
mov
dec
mov
cltd
outsl
cld
fsubl
push
fadd
dec
in
into
pop
lods
loop
jbe
in
iret
sbbb
sti
push
insb
xchg
xor
jne
cwtl
adcl
adc
enter
rorb
jae
popf
jb
pop
cwtl
bound
sbb
cli
push
jo
outsb
cmp
cltd
sub
ds
test
xchg
mov
aad
and
dec
and
or
jle
dec
cmp
imul
int
adc
shrb
sbb
mov
shlb
lods
sbb
mov
int
test
rol
jmp
adc
leave
gs
cmp
xchg
xor
lock
xchg
mov
push
leave
jo
out
mov
out
cwtl
lahf
leave
push
cs
out
and
rcrl
sarb
xchg
insl
pop
mov
add
adc
in
rcrb
rorb
ds
ret
xchg
xor
out
cmpsl
out
sub
js
jmp
ret
sbb
ljmp
xor
in
fwait
jb
mov
packssdw
fnsave
mov
cwtl
jl
fimuls
sub
divl
in
pop
jle
fnstenv
adc
mov
repz
sti
test
sbb
test
pop
into
adc
test
add
ds
ljmp
pop
repnz
inc
jmp
fldenv
jae
pop
inc
notb
repz
mov
rorl
jo
lock
jo
test
mov
ja
mov
ja
jo
mov
scas
jno
enter
aas
jnp
push
stos
daa
xor
pop
mull
dec
shl
mov
xchg
test
mov
xchg
xchg
orb
mov
cli
pop
lds
add
and
test
iret
popf
lea
lock
imul
jne
mov
mov
and
xchg
inc
push
loope
sub
fmuls
jl
sub
pop
push
push
adc
test
adc
xor
cmpsl
shl
cld
scas
push
out
idiv
adc
in
enter
pop
hlt
or
loop,pt
and
push
cld
sub
pop
and
and
inc
jbe
imul
mov
sar
inc
cmp
sti
cmp
js
clc
lret
cmp
mov
fnstsw
call
mov
out
roll
or
pop
or
pop
mov
sub
dec
jns
stos
or
add
sti
lret
mov
sub
cld
sbb
dec
and
je
addb
shr
gs
cmp
test
push
sbb
jae
out
call
cmpsl
jnp
inc
test
and
cmp
loope
lods
rcrl
xor
mov
sub
and
bnd
adc
jp
cmp
lahf
ss
ret
or
jmp
addr16
sbb
addr16
in
out
mov
xor
rcrb
and
loop
mov
adc
roll
sbb
jecxz
mov
pushf
fs
mov
add
dec
fdiv
inc
jge
fwait
pop
xor
sbb
sbb
leave
add
sti
xor
lods
jno
loop
outsl
jne
arpl
or
addr16
incl
fsub
cli
sub
sbbb
lds
jbe
js
mov
jge
insl
mov
dec
jns
pop
or
shll
rcrb
add
icebp
mov
cmp
sbb
popa
cwtl
imul
sub
dec
test
mov
popa
mov
jp
scas
loopne
je
clc
mov
and
lods
stos
loop
jl
pop
cmp
sarb
in
sbb
lret
pop
sub
fisubrs
jmp
pushf
stos
outsb
test
mov
push
dec
stos
ja
mov
cli
leave
shl
testl
inc
setp
fwait
push
ljmp
mov
cwtl
movsb
mov
pop
pop
mov
bound
pop
inc
cmp
mov
movsl
stos
loope
in
cld
imull
mov
sbb
or
cs
adc
jl
pop
lret
push
lret
stc
jne
cld
dec
mov
repnz
in
call
jbe
and
fldcw
inc
aaa
push
loope
xchg
xchg
dec
inc
test
pop
pop
arpl
and
jmp
pop
inc
and
mov
arpl
adc
pop
push
ss
negb
clc
push
add
pop
data16
movsl
sbb
jg
mov
push
sub
pop
jo
mov
movsb
pmullw
mov
or
sub
mov
fsubs
insb
jnp
xor
cwtl
imul
daa
mov
loopne
jno
rol
jns
sbb
int
adc
push
xor
shll
je
shlb
cmp
std
dec
jb
cmp
pop
or
insl
test
nop
xchg
pop
jecxz
pop
and
mov
int3
lea
leave
and
sahf
fstp
jno
mov
and
jl
mov
test
dec
aas
int3
sbb
add
mov
loop
jmp
xchg
into
fcompl
mov
or
push
xorl
ret
sbb
fildl
loopne
inc
arpl
adcl
in
lods
xchg
jle
fcomps
fstpl
dec
fldt
mov
out
push
mov
add
cmp
add
daa
rcrl
test
mov
push
je
das
fnstsw
inc
add
cwtl
iret
add
cmp
out
jecxz
push
mov
xor
dec
xchg
sti
sub
mov
mov
jb
sub
mov
xor
xor
mov
fildl
dec
sbbb
lea
mov
pop
mov
pop
divb
and
lds
mov
mov
addr16
ret
xchg
ret
add
lods
jne
adc
fstps
xchg
mov
sub
or
pop
adc
push
cltd
lock
push
pusha
loope
in
jl
xlat
lahf
out
mov
cmpsb
cmp
cmp
dec
aas
cmp
es
pop
mov
and
dec
in
mov
jg
sub
adc
mov
adc
mov
mov
jae
enter
test
insl
loop
sub
ljmp
sub
mov
clc
call
scas
adcb
mov
sub
jle
leave
xchg
fsubr
repnz
jo
mov
imul
out
push
jno
in
xor
imul
andl
mov
lods
cmc
or
push
stos
lods
and
sbb
mov
sbb
push
test
das
aam
sbb
stos
or
lret
inc
inc
fwait
or
jge
cmp
fldt
jmp
jbe
lods
mov
dec
loope
fnstsw
or
sti
push
ja
lock
shlb
scas
repz
int3
ret
pop
sbb
xchg
push
xchg
adc
mov
xor
inc
inc
in
and
out
push
fwait
inc
imul
mov
lcall
es
outsl
aaa
fmuls
or
lods
inc
pop
ret
cmp
cwtl
sbb
int3
scas
das
aaa
cltd
cli
shr
inc
mov
xchg
mov
in
xchg
je
add
push
or
fdivs
adc
jae
and
repnz
aam
ds
lods
dec
gs
dec
imulb
jns
outsl
scas
into
in
arpl
sbb
call
andl
sbb
cmpsl
dec
push
pop
mov
lret
cltd
aam
ficompl
adc
jmp
pop
in
mov
add
push
xor
sub
or
insb
dec
jmp
jno
rolb
jg
test
sahf
lods
and
addb
int
pop
cli
ret
xchg
loopne
push
push
inc
adc
sub
fwait
and
pop
mov
jo
pop
or
loope
cli
dec
jbe
push
jg
mov
mull
jp
in
xchg
stos
pop
xor
cmpl
iret
daa
addr16
inc
enter
xor
and
int
jle
pop
int
cmp
testb
xor
adc
xchg
daa
movaps
pop
pop
in
mov
shll
sbb
or
xor
popa
mov
loopne
ja
push
sti
mov
push
jo
loopne
and
orl
xchg
les
js
adc
jmp
iret
repz
cmp
xor
jg
fldcw
pop
add
jno
push
pop
enter
scas
lods
repnz
xchg
outsl
inc
jl
mov
sub
scas
jl
mov
cld
mov
inc
cli
cmp
dec
in
dec
out
sbb
iret
inc
mov
loopne
sbb
sarl
mov
cmp
mov
fs
and
cli
repz
mov
pop
jbe
push
fnstenv
mov
cmp
ret
ss
dec
or
out
inc
lock
out
outsl
sbb
dec
pop
jbe
mov
out
sbb
mov
pop
aam
adc
mov
pushf
adc
adc
adc
mov
dec
cwtl
sbb
inc
pusha
popf
je
xor
ret
ret
sti
mov
seto
push
jp
clc
push
sub
jl
addr16
loope
cmp
sub
xchg
lds
and
fadds
ljmp
shlb
mov
aad
mov
das
inc
mov
inc
divl
jmp
cmpsl
ja
add
adc
dec
gs
in
sarb
mov
andb
xchg
xor
icebp
call
test
mov
or
sbb
or
cltd
inc
pop
or
cmpsl
fdivp
lock
jnp
cmp
mov
adc
addr16
in
shlb
repz
jae
loop
aam
xor
flds
ret
mov
mov
ss
cwtl
sub
lret
ret
cmp
clc
jl
mov
cmp
add
xchg
scas
adc
or
mov
mov
test
jmp
cmp
mov
loop
cmp
jp
sbb
sbb
js
lret
push
subb
sub
mov
call
inc
or
lahf
cld
addl
inc
add
out
add
insb
popf
std
dec
push
or
ljmp
and
mov
arpl
test
inc
stos
and
mov
sbb
ljmp
sub
test
andl
cld
push
fcomps
cs
fwait
ja
mov
and
add
fwait
test
cmp
sti
and
shr
pop
ficoms
cmc
test
mov
sbb
xchg
push
pop
jle
push
inc
std
mov
or
sub
dec
mov
lds
repz
jle
lods
ret
cwtl
inc
iret
ret
xchg
movsb
out
cli
repz
xor
adc
pop
push
or
inc
outsb
rcrl
jae
scas
sbb
inc
xchg
addr16
jno
arpl
mov
test
jp
add
cwtl
and
inc
fwait
cmp
jnp
xchg
frstpm(287
out
cmp
aaa
push
pusha
mov
push
jle
xchg
loop
push
pop
lcall
adc
cmp
add
hlt
arpl
cmp
sbb
jecxz
clc
dec
xchg
fidivs
lcall
lahf
add
pop
jo
aas
cld
mov
cmpsl
iret
and
and
dec
fwait
cwtl
adc
xor
aaa
mov
fsubrl
js
ficoml
pop
push
aas
xlat
xor
push
jb
nop
jecxz
dec
and
jns
scas
hlt
ret
jnp
loop
pusha
push
cmpsl
mov
mov
cmp
lea
xchg
mov
push
ret
outsl
cmpsb
fidivl
pop
cld
leave
jmp
adc
or
sub
in
inc
adc
jge
or
xchg
inc
into
sub
int3
in
inc
or
fs
imul
dec
adc
lret
xor
cld
sysenter
daa
mov
in
clc
adc
cmp
inc
popf
push
add
pop
mov
cmc
idivl
cmpsb
xchg
mov
daa
sti
enter
push
dec
aas
mov
and
cmp
mov
mov
mov
xchg
xchg
jmp
adc
out
sub
cmpsl
adc
mov
mov
xorb
inc
aad
inc
imul
std
cmp
dec
lahf
xor
nop
loopne
dec
lods
jne
dec
dec
les
fdivl
cmc
lahf
pusha
and
into
mov
int
pop
sbbl
cs
orb
stc
mov
or
jg
mov
hlt
jne
sbb
icebp
lods
lea
cmp
stc
loopne
dec
sbb
pop
sub
stos
test
mov
pop
dec
xchg
das
lahf
data16
outsb
in
stos
sub
adc
pop
mov
jecxz
sahf
cmp
cltd
repnz
fmuls
inc
es
jl
cmp
stos
rclb
stos
push
icebp
pop
or
xor
dec
repz
mov
jno
xor
mov
push
push
dec
loopne
mov
xor
cmc
and
and
pop
dec
mov
aas
loope
pop
movsb
pop
jp
mov
pop
sarb
lds
or
lods
push
mov
xchg
loop
ja
mov
imul
lods
xchg
mov
mov
sub
mov
iret
mov
daa
repnz
mov
jbe
hlt
dec
mov
pop
enter
dec
fstps
sbb
mov
push
jae
xchg
enter
or
bound
mov
push
les
fadds
push
hlt
xchg
repz
subl
mov
int3
ret
outsb
sub
cld
mov
loop
mov
xchg
push
add
sub
or
das
sti
push
addr16
fistpll
push
ret
stc
stos
ss
das
cltd
sub
test
mov
cmp
shlb
xchg
add
rcr
dec
aad
jo
std
aaa
jge
fs
cld
pushf
push
aaa
lcall
pop
subl
dec
stos
add
mov
shlb
shl
fwait
mov
sub
incl
sti
push
sub
and
adc
push
faddp
push
stos
enter
add
sbb
fcomps
and
or
mov
xor
les
pop
enter
pop
lock
push
lds
repnz
push
cmp
test
jae
repnz
jmp
ret
jecxz
add
jnp
adc
cmp
dec
xchg
aas
cmp
add
jecxz
je
mov
inc
add
nop
and
ss
addr16
ss
xor
pop
mov
mov
sub
adc
test
in
movsb
loopne
jecxz
lret
add
in
inc
inc
jecxz
into
lods
cmpsb
push
jns
inc
and
add
sub
pop
or
mov
ret
jmp
dec
lahf
sahf
popa
mov
mov
movsb
repz
cmp
sub
in
aad
mov
inc
jp
sahf
cmpsw
insl
fsubrs
insl
test
shlb
add
stos
imul
mov
leave
nop
add
and
xorb
push
add
cmpsb
adc
sbbb
adc
sarl
pop
mov
aam
or
mov
out
pop
outsl
mov
ret
or
cwtl
and
mov
shrb
test
out
adc
cmpsl
out
enter
jp
aaa
lds
out
jbe
fildll
xor
dec
arpl
mov
lret
and
and
out
pop
arpl
int
adc
ja
jl
stos
int3
jg
sub
mov
jno
push
inc
aam
xchg
repnz
fstpl
lahf
jl
xchg
ficomps
sub
fwait
leave
loopne
add
or
cmp
addl
out
cltd
ret
mov
xor
or
call
and
jns
mov
jno
hlt
mov
fadd
sbb
xchg
sti
das
ds
cmp
hlt
dec
test
jnp
out
xor
mov
jg
cltd
loop
clc
jbe
out
stc
or
dec
fs
pop
xchg
lods
je
jns
sub
push
inc
dec
and
dec
jp
psubw
jge
out
adc
mov
loop
sub
inc
mov
or
fmull
sti
cmpsl
pop
rol
pusha
lds
push
popf
push
xor
fmul
enter
mov
xchg
jl
xchg
jecxz
les
xchg
lahf
fs
lds
mov
data16
lret
mov
aad
lods
mov
imul
xchg
cmp
pop
and
add
das
addr16
int3
nop
jnp
dec
pop
mov
xor
sbb
insl
mov
shlb
mov
movsb
fisubs
mov
popf
push
jnp
ljmp
jbe
adc
pop
daa
sbb
add
daa
or
mov
xchg
xchg
incb
and
mov
jp
sbb
sbb
push
sti
mov
bswap
mov
addr16
push
cli
xor
push
sarl
sbbb
jle
mov
inc
pop
xor
dec
mov
loop
mov
mov
lds
hlt
and
dec
stos
ja
and
test
pop
add
sub
hlt
or
sub
out
jmp
cmpsl
inc
imul
sbb
add
mov
cmpl
jae
and
imul
mov
cmp
arpl
sbb
js
add
pop
pusha
pop
repnz
clc
test
out
iret
mov
add
rorb
xchg
push
xlat
repz
cmp
sub
inc
ret
int3
and
push
das
cmp
or
jne
cld
inc
pop
xchg
inc
pop
icebp
loop
mov
stos
xchg
ficomps
adc
sti
mov
push
mov
mov
dec
pushf
inc
outsb
inc
and
push
push
repz
pop
inc
inc
and
testl
repnz
ja
mov
add
adc
loope
adc
fwait
sbb
ljmp
mov
int
fdivrs
call
push
in
fadd
jg
push
sti
loop
or
xchg
jle
mov
xchg
or
ficoml
inc
dec
jge
sub
outsb
inc
outsl
and
dec
lock
sbbl
scas
jns
or
loope
push
outsb
inc
ja
ficomps
andb
adc
lret
push
jle
dec
int3
popf
sbb
in
and
rorl
das
rcrl
sahf
and
in
aam
mov
data16
push
mov
daa
sti
insb
push
test
fisttpl
adc
call
fdivs
pop
rorb
inc
stos
xchg
addb
mov
subl
mov
jmp
adcl
aad
js
mov
cltd
pop
mov
int3
or
ja
push
sbb
cmp
in
mov
shlb
jnp
sbb
cmp
mov
sbb
mov
xlat
fsubrs
inc
xorl
ret
mov
push
and
dec
mov
and
mov
int3
ds
jecxz
push
add
mul
cmpsb
je
and
loopne
push
fs
fs
dec
sbb
fists
shll
mov
xchg
faddl
mov
fisubrl
insb
mov
xor
scas
dec
add
xchg
das
push
mov
outsl
push
add
xor
roll
ret
inc
pushf
xor
dec
inc
mov
xor
rcrl
mov
sahf
jp
xlat
cwtl
fs
xor
inc
lods
inc
push
mov
or
mov
lods
add
dec
jl
adc
mov
add
ja
out
flds
jns
pushf
outsl
cmp
pusha
jae
adc
rcll
addr16
fdivrl
gs
imul
shl
das
pushf
cmp
mov
push
lock
jle
ljmp
sahf
pop
mov
add
loop
repnz
bswap
xor
mov
imul
sbb
or
enter
cld
outsl
dec
and
popa
lock
adc
xchg
xor
or
frstor
jae
in
add
dec
pop
sbbl
das
adc
xor
rol
sbb
pop
cvtps2pd
mov
mov
lock
cltd
shrl
push
cmp
sbbb
mov
jbe
mov
aas
mov
ret
ja
hlt
imul
sbb
cld
repnz
data16
lds
fabs
scas
adc
pusha
cmp
mov
sbb
jbe
jb
arpl
in
mov
pop
popa
jge
es
mov
notb
iret
icebp
jo
sub
jns
cmp
push
push
add
mov
mov
cmc
rcll
cmp
arpl
in
pop
xlat
ret
lret
call
icebp
addl
mov
rcrb
sub
jno
mov
dec
cmp
mov
mov
cmp
pushf
mov
fsubrp
jnp
mov
faddp
xchg
test
leave
cmpsl
sub
outsb
sub
aam
xchg
jo
cli
mov
cmc
js
sub
ret
ljmp
xor
push
hlt
in
call
lods
and
dec
push
mov
pop
lods
jnp
and
jb
das
lods
push
push
arpl
jge
jmp
fdivrl
mov
mov
rorb
repnz
loope
mov
add
insl
aad
testb
cmp
jbe
cmp
insl
push
adc
mov
jb
shrb
popa
push
pop
cmpsb
mov
mov
gs
inc
stc
jmp
fbld
and
inc
lock
ljmp
in
mov
mull
adc
or
dec
pop
out
cli
lea
xor
insb
or
jb
and
and
out
mov
xchg
mov
and
out
sbb
dec
ljmp
jp
pushf
stc
mov
inc
pop
insl
mov
gs
adc
mov
push
inc
pushf
cmp
data16
xor
cmp
mov
dec
mov
lea
inc
sbb
shr
adc
mov
inc
inc
adc
jae
shll
test
repnz
imul
add
inc
ja
cmpsb
mov
stc
stc
jmp
movsl
mov
movsb
dec
pop
pushf
jns
inc
jl
test
lock
aas
adc
or
xchg
iret
mov
jecxz
jns
or
ds
pop
iret
sub
insb
ret
lret
dec
pop
fs
mov
sbb
into
inc
push
jb
mov
push
lret
arpl
rcll
push
jns
cmp
stos
xor
rclb
add
xchg
jge,pn
lcall
sub
cltd
fbld
jl
iret
lods
pop
hlt
dec
test
push
nop
cwtl
popa
test
cmp
nop
push
icebp
inc
fidivs
adc
aas
add
inc
cmpsb
mov
and
and
and
or
cmp
addl
nop
outsl
hlt
sub
inc
mov
pop
pop
dec
lret
and
push
sbb
pusha
sarb
andl
sarb
cmpsb
cmp
mov
dec
xor
add
jle
arpl
cltd
mov
lods
stos
mov
jmp
add
outsl
mov
and
xchg
push
scas
inc
dec
or
push
mov
shll
jg
mov
dec
sbb
test
fidivrs
pop
loop
jns
push
sti
ds
cmp
jae
lret
mov
lahf
pop
xchg
je
clc
inc
aaa
call
add
push
dec
mov
lock
sar
dec
ljmp
add
inc
ret
push
xchg
mov
jmp
add
icebp
fistpll
xchg
add
pop
push
cmp
dec
clc
inc
repnz
subb
fnstsw
xchg
push
mov
dec
sbb
cmp
call
mov
push
rorl
pusha
cs
xchg
push
test
sub
ja
lea
loope
jnp
add
aad
ret
cmpsb
mov
push
lds
ds
add
dec
or
xor
dec
adcb
jmp
mov
lds
ds
adc
arpl
dec
mov
lea
push
xchg
xor
fists
mov
or
and
sub
xor
shll
and
mov
pushf
sub
movntq
out
sub
test
popa
xchg
loope
pop
iret
mov
sbb
jae
fcmovnb
aam
lea
scas
add
sub
dec
adc
sbb
jb,pt
leave
push
pop
js
stos
add
mov
and
mov
mov
xchg
mov
imull
pop
and
cmpsl
xchg
cli
push
mov
mov
inc
jmp
insb
jae
insb
addr16
cmp
mov
xchg
pop
fisttps
pop
or
xchg
mov
imul
test
int
ljmp
jg
enter
mov
sub
popf
pop
lret
sbb
cwtl
in
mov
adc
mov
hlt
dec
ljmp
addb
sub
dec
inc
and
ss
sub
ficomps
dec
jl
sub
ss
lcall
push
out
adc
scas
pop
adc
inc
cli
in
jno
jno
in
pop
pushl
and
or
lahf
nop
jns
dec
pop
lcall
pusha
rorb
sahf
sub
jecxz
cmp
jnp
mov
sbb
pop
mov
int3
into
pushf
std
dec
inc
push
cmp
push
mov
dec
lcall
aaa
ljmp
and
hlt
add
ret
xchg
adc
cmp
lret
into
xlat
fistpll
jns
xchg
iret
or
rorb
mov
jno
cltd
mov
mov
or
test
or
repnz
xlat
lcall
add
cld
test
sub
fstpl
mov
lods
movsb
call
das
sub
incb
data16
jo
pop
mov
pop
imul
std
jp
cmp
xlat
loope
shll
lret
les
adc
in
push
push
out
jne
xchg
or
pop
pop
fbstp
mov
mov
pop
and
fisubrl
sbb
lds
jnp
jp
inc
mov
fdivr
adc
stc
lods
mov
xchg
mov
jne
xor
cmpsb
ffree
pushf
mov
std
loop
dec
mov
push
es
add
stos
sub
jns
mov
aaa
cmpl
sbb
mov
jmp
lds
sbb
movsl
jp
int
scas
mov
jg
mov
push
pop
pop
insl
shlb
int3
mov
scas
pop
movsb
mov
and
cmpsb
push
inc
dec
sub
push
dec
lea
inc
sbb
aad
popf
push
hlt
popf
jno
mov
xchg
lods
sahf
dec
or
stc
jb
lea
mov
jl
rcrl
in
mov
dec
adc
cmp
bound
push
stc
and
or
in
xchg
iret
movsl
out
cmc
fisttps
push
pop
sub
stc
lret
adcl
loop
mov
jae
stos
or
data16
adc
jg
push
inc
push
je
imul
and
xchg
lods
push
adc
iret
stc
fcmovnb
mov
fmull
scas
jge
sub
push
sahf
inc
cmc
lock
lret
inc
cli
inc
or
fs
clc
fildl
pushf
test
lcall
or
out
mov
lods
fwait
push
test
iret
movsb
aam
loop
adcb
in
push
xlat
mov
cmp
mov
sarl
jg
ret
repnz
fs
mov
mov
fcom
xlat
repnz
out
test
add
std
xchg
jmp
fildl
xlat
fldl
inc
dec
ja
aas
movsl
mov
fists
inc
jno,pt
xchg
xchg
aas
push
dec
cmp
cmp
mov
sub
and
popf
jns
icebp
pop
jge
in
arpl
popf
xchg
mov
outsb
int
fidivs
pop
inc
jge
add
lock
les
hlt
pop
std
inc
std
mov
xor
push
fistps
push
xor
cmp
xor
test
mov
jmp
addr16
ret
adc
aam
xchg
push
dec
testb
and
sahf
ficoml
cmp
je
out
cmp
or
sbb
fisubrl
and
push
mov
push
fcmovnu
sub
add
arpl
or
cmp
fsubl
and
xlat
dec
nop
pop
or
xor
jno
cmp
sbb
fisttps
and
test
hlt
inc
xchg
mov
mov
cmp
and
shr
xchg
movsb
push
push
add
jge
adc
cltd
or
ss
lods
sbb
push
inc
lahf
fwait
inc
pop
pop
dec
xor
jnp
pop
ljmp
mov
dec
sti
aad
xor
dec
insb
pop
jne
push
cmp
fdiv
cmp
jno
xor
outsb
sub
dec
out
inc
flds
inc
xchg
cmp
jno
xor
call
sub
add
int
push
test
cld
test
mov
clc
cmp
pop
lret
aam
mov
adc
sub
sbb
fimull
jmp
shl
mov
adc
stos
cli
roll
xchg
inc
fwait
sub
mov
mov
into
rclb
sbb
cltd
mov
cmp
nop
arpl
hlt
mov
test
into
std
jge
jns
shr
mov
pop
jns
jns
xchg
mov
les
pop
pop
or
lret
jge
fidivl
inc
cmc
pop
dec
in
jl
fistl
mov
mov
cwtl
imul
cmp
xor
pusha
lds
jl
scas
push
fcmovnbe
in
push
rorl
adc
mov
mov
mulb
lds
sub
rolb
scas
rorl
xchg
mov
push
cltd
dec
shrb
pop
jne
psubsb
xchg
shll
add
xchg
mov
jnp
fwait
jp
incl
popa
outsl
add
xor
mov
adc
je
leave
and
dec
mov
ficoml
xorl
fstps
xor
push
mov
out
or
push
cmp
imul
sub
sbb
xor
sub
pop
or
cmp
repnz
movl
cwtl
xchg
sbb
fwait
cmpl
sahf
imul
sbb
jnp
sub
out
or
in
pop
push
dec
pop
aaa
xchg
ret
lods
sub
sub
push
je
push
mov
lds
jle
xor
jne
jo
repnz
jbe
outsl
scas
pop
ljmp
scas
and
ljmp
push
pop
addr16
loope
xlat
faddl
xchg
ret
movsb
ret
scas
dec
test
sbb
mov
push
adcb
pop
cmc
push
push
fnstsw
dec
and
lods
xchg
mov
outsb
mov
ror
pop
shll
xor
mov
mov
and
fsubr
fs
fnstsw
mov
ljmp
push
and
xor
or
nop
bound
pop
pusha
mov
pop
xor
dec
sbb
adc
cmp
orb
lcall
and
push
jne
inc
sbb
xor
insb
jne
cltd
mov
dec
push
loopne
pop
pop
bound
fmulp
push
cmp
nop
repz
fs
ds
push
shrb
es
mov
popf
xchg
cmp
lea
rcll
sbb
sbb
insb
xor
jae
into
test
jl
xor
jge
pop
adc
lahf
fs
repz
stos
out
adc
loopne
add
lods
lock
dec
fcmovne
rolb
cmp
data16
in
cmp
aas
and
mov
sti
xchg
mov
lds
call
mov
xchg
dec
cmp
mov
and
gs
xchg
pop
dec
mov
movsl
inc
mov
lods
mov
mov
fwait
dec
adc
xchg
pop
or
adc
dec
push
mov
sbb
popf
fwait
aaa
into
jbe
inc
sub
push
inc
pusha
dec
out
jns
xchg
das
fwait
mov
pop
or
cmp
insb
popf
mov
jle
push
sub
jno
lret
push
repz
cs
mov
lret
lea
lahf
out
jo
push
outsl
ds
xchg
daa
stos
mov
mov
fsubs
fcomps
inc
or
or
leave
call
pop
inc
out
jle
add
mov
in
mov
inc
int3
into
insl
xor
push
sub
leave
lock
stc
lret
push
mov
and
xchg
cltd
or
pop
test
mov
pop
pusha
cli
mov
add
inc
fs
nop
mov
stc
ja
mov
pushf
fidivrs
jge
into
pop
psubd
adc
push
sub
add
out
daa
inc
iret
sbb
popa
mov
shll
and
jns
lahf
test
sbb
xor
jbe
mov
xchg
inc
push
jmp
and
dec
shll
push
mov
mov
or
lret
add
jge
int
mull
push
es
mov
stc
xor
je
ret
insl
sbb
loope
in
xor
inc
enter
jne
add
add
mov
daa
jae,pn
mov
stos
and
ret
je
add
pop
mov
mov
mov
ds
adc
roll
add
jnp
in
stos
fdivrp
pop
push
out
xchg
push
ljmp
and
aaa
imul
mov
rclb
mov
xchg
ret
jo
pop
ss
js
jg
mov
push
imul
ds
inc
das
cli
sbb
and
outsl
inc
je
pop
in
sbb
jnp
out
xor
add
insb
lods
cmpsl
sbbb
jae
div
lret
sbb
lock
daa
cmpl
xchg
loope
inc
mov
dec
sbb
lea
mov
jge
mov
scas
test
add
xchg
pusha
mov
pop
push
adc
js
xchg
cli
pop
and
inc
stos
jge
leave
ret
cltd
mov
aaa
cmp
push
scas
lock
mov
add
pop
mov
pop
fsub
andb
add
push
lret
test
or
or
shrl
sub
dec
gs
rorl
shr
lahf
push
push
sahf
push
jmp
movb
push
clc
xor
subl
insl
mov
lret
mov
push
dec
mov
movntq
sub
outsl
fwait
mov
xlat
leave
inc
rorb
jp
adc
xchg
sub
lea
bound
cltd
aad
inc
mov
leave
mov
mov
mov
pop
in
dec
pop
sub
adc
add
lcall
mov
pusha
lcall
jge
ret
out
xchg
and
mov
adc
push
mov
sub
mov
movsb
out
dec
push
loopne
fisttps
gs
mov
hlt
pop
xor
test
add
pusha
dec
ds
mov
pop
mov
divl
stos
push
popa
xlat
cmpsl
cmpl
sahf
test
jne
xchg
push
in
popf
and
popf
sub
jge
fucomp
dec
mov
ja
inc
jmp
in
push
inc
cmc
sbb
test
jp
test
jp
hlt
jp
test
lods
and
pop
adc
cltd
fwait
jnp
cmpl
inc
test
cs
fsubrl
inc
mull
pop
mov
or
lock
xor
dec
sub
and
mov
out
rcr
sbb
mov
cmpsl
jmp
lahf
jbe
inc
fwait
test
in
mov
sub
repz
mov
add
es
mov
push
fbstp
xchg
lods
mov
lcall
sub
into
fildl
push
jne
fldl
adc
pop
dec
cmp
fwait
adc
testb
out
addl
and
mov
arpl
xchg
mov
shlb
hlt
roll
outsb
push
push
mov
data16
icebp
ret
add
jns
mov
adc
lret
sbb
mov
adc
movsl
inc
xchg
cwtl
jecxz
dec
inc
int
lock
mov
pop
leave
mov
fst
movl
xlat
mov
movsl
aad
divl
test
jle
adc
push
or
add
test
ret
push
loope
inc
jg
jbe
mov
enter
outsb
mov
loope
fcompl
cmp
nop
mov
cmp
cmp
bound
xchg
dec
adc
sub
movsl
fdivs
in
jae
mov
shl
push
sbb
into
push
jge
loop
pop
xchg
push
mov
sbb
je
cmp
fildl
lea
xchg
test
push
mov
jp
int
jno
cli
mov
push
sbb
nop
out
push
gs
push
cmp
iret
div
jno
loop
das
adc
jbe
pop
sbb
mov
xor
inc
sbb
out
pushl
shlb
sbb
or
xchg
std
sub
add
dec
xchg
test
ljmp
jmp
cs
lret
hlt
mov
loop
ljmp
cmp
ds
int3
fs
pushf
sti
repnz
mov
push
xchg
lahf
insl
out
sub
aam
loopne
cwtl
addr16
insl
out
adc
xor
jb
xchg
je
xchg
or
mov
inc
xchg
cld
js
addb
mov
xchg
fsubrl
outsb
fcmovu
sti
dec
and
shl
in
fs
mov
lahf
div
scas
adc
push
pop
or
fcmovnb
add
sahf
adc
lret
mov
and
icebp
outsl
incl
mov
repnz
fmulp
xchg
aam
add
movsb
adc
jle
aam
cld
mov
inc
sub
sub
cmpsb
insl
jno
andl
jge
cmp
adc
pop
mov
xchg
push
xlat
ds
clc
dec
ds
repz
ror
xchg
divb
cmp
add
movsb
and
xchg
or
inc
sbb
dec
stos
push
add
insl
das
mov
cwtl
ret
hlt
icebp
add
inc
xor
jne
cmc
fcomps
daa
daa
or
xor
loop
mov
loop
mov
lret
sbb
shrd
adc
mov
dec
cmc
add
aas
or
mov
js
mov
sub
pop
fs
xchg
ss
aam
sbb
xor
cltd
dec
iret
shrl
inc
mov
lret
mov
fcoml
test
stc
xchg
dec
adc
es
in
in
xchg
push
scas
adc
loop
inc
js
negb
imul
pusha
mov
mov
xchg
sub
orb
aaa
inc
mov
loop
out
aaa
test
xor
scas
jle
jb
bnd
or
jmp
inc
xor
out
push
sahf
sub
ss
bnd
mov
jg
leave
in
add
push
sbb
push
stos
dec
dec
outsl
fstps
mov
xor
add
imul
pusha
adc
inc
leave
mov
lcall
fucom
or
xchg
sbb
setb
sbb
sub
popf
sbb
std
push
sbb
hlt
ljmp
cmp
dec
jno
cwtl
stos
xor
mov
rclb
insb
mov
push
mov
sub
or
push
jmp
inc
div
adc
das
rcr
cwtl
jecxz
lods
jne
fstl
shlb
roll
pop
jmp
aam
xchg
cmp
inc
mov
roll
mov
jle
ficoml
inc
jmp
add
dec
adc
dec
pop
divps
sbb
rcll
mov
lds
aam
adc
stos
mov
add
aad
add
shl
mov
push
stos
out
inc
mov
test
jno
xchg
rolb
je
ret
lret
addl
sbb
xlat
out
imul
cwtl
sub
xor
arpl
test
or
dec
mov
cvttps2pi
xor
xchg
adc
push
xlat
aaa
movb
loop
mov
fiadds
fucom
fsts
mov
push
stc
in
iret
xchg
inc
pop
add
jge,pn
jp
lods
lret
pushf
add
ret
push
vinsertps
push
sbb
mov
jae
data16
inc
adc
div
jmp
jae
jae
push
lods
lods
xchg
mov
or
imul
sub
sub
and
stos
pop
jmp
sub
fists
cwtl
nop
test
mov
dec
insl
rcrb
stos
aas
outsl
dec
sbb
jb
stos
xchg
jb
dec
loope,pn
jns
push
mov
data16
xor
cwtl
orb
mov
lods
pop
loopne
dec
popl
and
cmp
dec
push
or
into
mov
dec
ds
sbb
mov
cli
xchg
movsb
cmp
mov
dec
push
add
xor
inc
imul
call
jbe
jecxz,pt
lods
xchg
ljmp
mov
pop
sarl
paddd
fwait
jp
repz
inc
mov
pusha
call
cmc
mov
xor
pop
stc
xor
adc
mov
clc
pop
add
xchg
xchg
and
ljmp
push
iret
jg
jecxz
lret
adc
sbb
scas
repnz
and
mov
into
cmp
jp
inc
push
xor
ret
pop
out
scas
pop
mov
push
sub
scas
mov
je
inc
xchg
call
iret
mov
mov
lret
jmp
icebp
add
dec
push
lret
mov
insl
cmp
sbb
xchg
mov
pusha
cmp
push
xlat
lods
scas
mov
mov
push
cmp
imul
ds
fidivl
xlat
lea
mov
shlb
test
cli
dec
pop
cwtl
mov
in
decb
and
les
push
xor
adc
ljmp
jl
dec
pusha
mov
mov
dec
mov
aam
lods
jno
or
jl
or
pop
daa
push
lods
adc
out
dec
int3
ret
mov
shll
push
ret
outsb
mov
jl
adc
cwtl
add
adc
cmc
cld
mov
ficomps
xlat
adc
adc
sbb
or
test
xchg
cltd
je
dec
cmp
adcb
or
rcrl
mov
lret
dec
xchg
daa
pop
push
rclb
aam
into
loop
mov
xor
pop
or
in
dec
in
dec
mov
mov
stos
mov
jle
xchg
in
lret
lcall
orl
repnz
sahf
xchg
rorb
rolb
in
jg
jmp
inc
jge
sti
loopne
rcrb
adc
out
pop
pop
sarl
and
stos
mov
inc
or
add
test
and
sahf
cmp
icebp
rclb
xchg
enter
lds
xorl
mov
je
pop
pop
and
push
push
leave
popa
in
inc
mov
int
enter
jbe
ds
push
mov
dec
mov
dec
xchg
and
jbe
adc
daa
fwait
lds
in
or
imul
outsb
dec
cmpsb
call
or
pop
dec
loopne
testl
repnz
lods
push
xchg
mov
lds
pop
fisubs
rcrb
cmp
cmp
or
add
addr16
rcl
cmp
stos
cmp
cmp
sub
or
inc
in
inc
into
idivl
mov
ljmp
dec
sbb
inc
mov
popf
xchg
mov
push
rcrb
imull
aaa
cs
sub
cltd
sti
adc
dec
neg
in
cs
aad
icebp
icebp
aaa
xchg
inc
insb
pop
cmp
loope
sbb
test
cmp
in
bound
stos
mov
lahf
test
push
int3
fildll
jg
xlat
int3
repnz
stos
pop
xchg
cs
add
lods
insb
xchg
aas
sub
aam
push
outsb
incl
enter
sub
into
insb
mov
cmpsb
add
mov
cmp
outsl
dec
cwtl
lret
wrmsr
aas
push
repz
je
sbb
fsub
add
rcr
loope
cs
adc
push
icebp
sub
inc
dec
mov
push
out
pop
push
scas
jno
jecxz
inc
cmp
inc
adc
sub
out
pop
into
mov
bound
stc
add
inc
xor
xor
repnz
jg
and
fdivrs
popf
orb
mov
fsts
mov
xor
aaa
out
mov
lahf
cmp
icebp
xchg
clc
int3
push
inc
xor
dec
xchg
mov
dec
inc
xor
arpl
scas
jbe
jmp
pop
stos
add
dec
call
stc
sub
sti
jne
and
cmpsb
lahf
aam
pop
push
mov
clc
popf
pop
jmp
xchg
sub
andl
xor
jbe
adc
cmpsl
roll
xchg
or
push
xchg
cmp
in
pop
fildll
jecxz
imull
cmp
and
add
repnz
add
rolb
mov
jge
ja
nop
or
fwait
push
and
sti
push
cmp
push
vminpd
pop
mov
popf
mov
xor
lods
loopne
jns
jl
movsb
add
shl
je
mov
stos
int3
add
mov
xchg
lock
cmp
test
jo
or
xlat
pop
mov
stc
movnti
lock
cs
sub
shl
ds
or
imul
xor
aam
addb
xchg
daa
rcrl
js
and
inc
and
mov
imul
gs
sbb
or
inc
cld
cmp
and
and
shr
dec
jmp
or
lds
sahf
cli
out
jge
nop
mov
pop
repnz
scas
sub
pop
mov
bound
popl
test
nop
stc
mov
fcompl
xor
mov
inc
jno
in
fldpi
add
and
pop
fsts
popf
dec
mov
jp
push
or
es
je
shr
in
inc
jne
clc
xor
add
aaa
enter
mov
pop
lret
mov
je
xchg
cmp
test
pop
xchg
push
int3
int3
in
xchg
test
lock
pop
jg
and
fcmovnu
dec
test
mov
dec
fwait
pop
sbb
and
xchg
push
lahf
sub
hlt
and
insb
bound
mull
testb
test
pushf
dec
push
pop
sbb
adc
sbb
push
fwait
shr
inc
inc
andb
and
and
jmp
jl
ds
bsr
lcall
pop
leave
dec
dec
cmpsb
jecxz
adc
jp
pop
mov
enter
add
mov
mov
mov
mov
jbe
gs
pop
rclb
leave
dec
mov
cltd
or
xor
push
add
fucom
rcl
test
jle
test
adc
out
das
xchg
push
jmp
push
cs
into
add
jne
les
test
call
adc
mov
mov
test
mov
das
push
scas
sub
mov
scas
les
pushf
mov
ljmp
dec
push
divb
bswap
iret
inc
sbb
stc
mov
out
repnz
jge
insb
das
add
push
or
jbe
lret
push
loope
jp
mov
fistl
int3
cld
xchg
push
outsl
sbb
loop
xchg
cwtl
bound
mov
out
or
and
aad
push
mov
push
iret
mov
jno
loop
inc
sar
push
xlat
xorb
jl
jno
xor
sub
stos
and
or
loop
mov
mov
mov
dec
insb
in
jno
scas
jnp
gs
popa
xor
sti
popf
mov
mov
ljmp
sbb
sti
pop
pop
aad
inc
popf
clc
lds
cmp
jmp
xor
subb
sub
mov
sub
lods
and
push
jl
cmp
adc
or
pop
dec
jne
repnz
jmp
rcr
test
add
cmp
clc
add
shll
insl
mov
xchg
mov
mov
or
xchg
pop
add
mov
loopne
fidivrs
icebp
cmp
or
sbb
das
insb
inc
ljmp
jne
clc
mov
dec
inc
pop
add
sahf
repz
mov
or
test
sbb
fwait
mov
je
xor
scas
and
dec
stos
inc
jo,pn
ror
stc
dec
imul
push
jae
jae
pop
sbb
lds
push
pushf
xchg
test
pusha
ret
push
jmp
dec
push
imul
xchg
sbb
xor
lret
xor
jnp
int3
ret
fildll
lods
call
mov
sbbb
pusha
inc
in
dec
mov
or
cmp
ss
mov
pop
orb
sub
mov
inc
or
dec
test
xchg
dec
dec
dec
incb
hlt
sbb
rolb
xor
mov
les
xchg
sarb
negb
add
iret
mov
push
push
pop
mov
fwait
push
adc
dec
dec
fmuls
fmuls
xchg
add
jl
inc
sub
sbb
sbb
jge
movsb
cmp
addr16
pop
aaa
imul
cmp
test
jg,pt
mov
jnp
pop
sbb
jge
add
leave
ja
mov
mov
mov
adc
fisubrl
dec
inc
xor
jmp
jle
daa
fwait
outsb
ds
shrl
adc
addr16
fcoml
rclb
push
mov
push
pop
jo
and
je
push
mov
mov
push
into
dec
das
xchg
pop
stos
push
pushf
lods
aad
and
and
cld
adc
daa
lahf
adc
xchg
jne
pop
lock
and
sbb
push
pop
push
xor
out
inc
dec
pop
sbb
dec
adc
call
pushf
or
adc
xchg
int3
ret
loopne
push
jne
cld
push
sbb
and
xor
sbb
inc
pop
xchg
adc
stos
push
cld
mov
pusha
xor
nop
inc
mov
lods
call
push
fwait
test
pop
rcrb
mov
dec
test
in
jne
test
xchg
pop
or
stos
inc
je
in
jo
and
insb
addr16
scas
xor
scas
pop
ja
dec
mov
dec
lret
jnp
mov
sub
pop
jmp
in
gs
ret
mov
outsl
mov
sbb
subl
in
out
jl
sbb
add
push
jne
jge
dec
shlb
jb
scas
xor
in
dec
push
push
xchg
pop
stos
push
xchg
sub
mov
out
shrl
fwait
inc
fstpt
shll
xchg
mov
ja
xor
jae
js
push
inc
enter
jl
mov
pop
and
sub
in
clc
aaa
icebp
push
xchg
les
xchg
loop
xor
fsubl
mov
shl
mov
cltd
mov
push
in
pop
je
inc
fiadds
push
xchg
xlat
xchg
divb
bound
sbb
push
or
test
pop
inc
faddp
stc
or
inc
mov
lret
loopew
push
mov
adcl
pushf
mov
and
mov
stos
les
fwait
pop
test
lods
add
lock
and
push
push
inc
push
add
push
dec
daa
mov
insl
mov
lods
adc
pop
mov
sbb
jg
je
and
inc
sbb
addr16
mov
lods
fnstcw
out
cld
lret
in
adc
out
sbb
test
insl
arpl
inc
or
mov
data16
cld
dec
jae
fidivs
dec
xor
pop
out
fnstsw
jnp
and
icebp
jnp
dec
lcall
pop
test
inc
aaa
push
or
xlat
out
cld
je
cwtl
ret
pop
les
mov
ret
clc
push
orb
bound
inc
xchg
jno
mov
mov
repz
dec
popa
movsb
sbb
insb
je
inc
push
fdivrs
leave
and
xchg
inc
in
in
aad
hlt
ja
mov
and
xor
icebp
xor
or
std
push
xchg
sti
mov
add
jno
enter
inc
sbb
add
mov
ja
gs
rcr
mov
mov
xorb
cli
mov
fsts
jbe
movsb
fldcw
jecxz
ret
imul
std
adcb
arpl
add
xchg
in
cmp
cmp
or
xor
dec
leave
and
test
jns
jp
and
into
sahf
lret
sub
pop
data16
mov
dec
push
adc
dec
adc
cmpsb
popa
int
leave
das
jb
les
or
gs
lea
addps
int3
adc
xchg
mov
mov
loope
inc
xchg
sbb
jp
sbb
movsb
xchg
mov
and
into
aam
cltd
sbb
pushf
dec
adc
fs
xchg
xchg
add
insl
sub
outsl
cwtl
ljmp
aaa
lods
dec
jle
push
icebp
test
sub
jmp
ret
popa
xor
dec
call
mov
scas
movsl
xor
dec
mov
sbb
aad
negb
jle
icebp
push
xor
out
pop
fnstcw
rcl
jno
out
fs
ret
pop
insl
inc
cmp
fdivrl
add
pop
bswap
mov
lods
inc
and
mov
add
pop
mov
xor
pushw
lcall
lods
int
hlt
jmp
mov
lea
pop
fnsave
test
loopne
stos
test
stc
push
or
adc
out
xchg
shrb
push
jge
mov
pop
rclb
and
lcall
test
mov
cmp
imul
sahf
insb
loopne
push
roll
pop
mov
push
add
push
mov
bnd
loopne
cmp
jl
jle
ds
xchg
jg
mov
stos
mov
push
fildl
and
and
subb
pop
lcall
sub
test
or
and
add
sbb
loope
pop
lret
jle
bound
std
lods
in
pop
lahf
jo
mov
mov
mov
jo
push
movsb
xlat
jg
mov
repz
fdivl
test
inc
mov
das
xor
scas
std
mov
sbb
sbb
xor
test
cld
inc
repz
jmp
or
pop
in
push
jl
sub
cmp
xor
hlt
popl
push
sbb
adc
cmp
pop
adc
pusha
sbb
sub
cmp
mov
scas
or
cmc
sahf
std
or
int
push
imul
jmp
in
mov
mov
mov
popf
adc
push
into
adc
sarl
xor
sub
in
ret
xchg
xor
sbb
pop
adc
xor
dec
adc
in
pop
loopne
out
add
and
inc
cli
sub
stos
xor
shll
test
iret
xchg
xor
out
out
xlat
sub
cmp
int3
rorl
stos
aaa
fsts
lods
mov
jne
mov
pop
dec
xor
lods
cmp
pop
or
pop
js
mov
mov
xor
jp
push
out
dec
xchg
or
jecxz
adcl
push
jl
or
fcompl
fldcw
and
push
pop
push
pop
jne
lcall
sub
mov
cmp
jl
bound
adcb
aas
jl
xchg
sbb
sbb
ret
mov
outsb
and
inc
nop
aas
setbe
lahf
push
daa
jg
stc
adc
mov
or
lds
adc
add
push
pop
dec
mov
cmpsb
inc
int
ds
lock
insb
mov
add
push
mov
andl
fnsave
mov
jns
cli
lahf
add
outsb
jmp
sub
inc
ret
dec
sbb
pop
popa
sbb
outsl
cltd
add
push
ficoms
mov
push
in
dec
mov
clc
mov
cmp
iret
stos
sbb
mov
outsl
mov
lods
out
cmc
dec
sbb
js
xchg
inc
dec
and
iret
stos
mov
adc
rcll
and
mov
pusha
data16
lock
xor
ja
sbb
mov
mov
jmp
dec
fldenv
rol
and
mov
pop
xor
jae
push
mov
sahf
test
mov
lods
gs
jmp
std
lret
das
push
xchg
dec
mov
xchg
bound
imul
ret
sub
xchg
nop
das
aaa
xchg
xchg
jle
adc
rcl
push
pushf
test
jecxz
mov
sbb
pop
insl
fwait
clc
xchg
fstpt
add
roll
loopne
js
or
pop
cmp
arpl
test
jmp
movsb
aaa
js
lcall
mov
fsubrs
cmp
sub
push
inc
xchg
popa
mov
addr16
cld
mov
outsb
add
hlt
cmpsl
inc
icebp
jns
mov
daa
dec
minps
scas
mov
xchg
fstpl
test
add
push
push
add
adc
lea
aas
push
aam
movsb
push
outsb
xchg
dec
inc
mov
xor
push
into
imul
jp
push
add
leave
arpl
adc
cmp
daa
stos
cmp
rcl
or
pusha
dec
cmp
mov
adc
aad
mov
mov
cmp
mov
in
mov
mov
mov
xchg
mov
cli
test
xchg
out
xchg
push
cmp
xorb
cltd
cmc
fwait
loop
inc
push
in
sub
je
mov
int3
jg
cmp
mov
cmp
call
sbb
test
shrl
xchg
push
xchg
mov
or
in
push
sub
mov
sbb
mov
in
inc
mov
lret
ret
mov
popa
mov
out
sub
cld
sbb
stc
cmp
add
out
jecxz
test
adc
out
pop
ljmp
adc
pop
scas
mov
and
das
div
lret
stos
je
orb
sub
mov
out
jo
sbb
rorl
push
mov
in
xor
dec
mov
sbb
adc
add
and
push
mov
sbb
push
lahf
btc
cltd
pop
int
and
addb
or
xchg
adc
loop
dec
fdivr
adc
and
xor
push
cltd
jmp
cs
cltd
sbb
js
fwait
xor
mov
jecxz
fs
and
xchg
xor
adcb
out
js
sub
push
insb
add
sbb
cmpsb
adc
out
cmp
xchg
call
cltd
pop
out
cmpsl
sub
xchg
cmpsl
push
push
push
mov
test
ds
jne
or
xor
sarb
and
movsw
mov
cs
mov
mov
addb
sub
aam
repz
loope
aaa
sbb
mov
xor
sub
test
lret
mov
pop
adc
mov
scas
pop
in
inc
dec
sarl
jnp
aaa
adc
notb
or
push
icebp
mov
ret
insb
and
inc
mov
lods
idivl
testl
push
das
and
pop
inc
xor
adc
cld
push
sarb
adc
mov
lea
insb
sti
lcall
stos
rcrb
imul
pop
xlat
and
dec
ret
push
mull
inc
push
xchg
or
inc
pop
inc
push
cmp
push
mov
dec
cmp
imul
fldcw
adc
out
add
int3
ljmp
adc
repnz
das
push
jns
mov
adcb
pop
mov
mov
jp
pop
movsl
fmul
mov
sub
xchg
mov
xchg
xor
lock
es
aam
int
cs
cmp
mov
pop
or
frstor
sub
pop
mov
dec
aad
sahf
pop
jle
insl
cli
sarl
scas
jnp
into
cmp
and
mov
dec
inc
pop
adcl
pop
daa
pop
imul
out
idiv
outsl
push
aas
adc
mov
sarb
mov
in
not
inc
push
mov
mov
call
push
stc
sub
jae
int
pop
pop
lret
mov
jo
push
mov
push
insl
inc
fwait
subb
lods
sbb
jge
fildll
cmpsb
in
xor
xchg
addr16
sub
loop
mov
ret
push
jb
mov
dec
add
roll
jg
sbb
xor
mov
mov
push
mov
lods
test
cmpsb
sub
mov
mov
pop
daa
test
outsl
mov
jmp
push
in
push
aam
ret
nop
inc
xchg
sub
test
sahf
push
es
mov
add
jmp
clc
out
sti
jecxz
std
in
sahf
add
mov
or
sbb
das
or
int
adc
out
cmpsb
pop
adc
stc
jno
out
daa
jns
mov
call
lret
mov
mov
repz
adc
das
sub
aas
inc
mov
xor
cli
inc
inc
push
inc
push
or
lret
repz
push
jecxz
lods
divl
ljmp
pop
cwtl
mov
push
push
or
xor
mov
jle
enter
addr16
push
cmp
xchg
dec
or
sbb
xor
and
jecxz
and
and
adc
data16
lods
and
pop
jno
adc
ret
xor
adc
js
sbb
add
sub
xor
and
inc
or
imul
xor
fs
fiadds
ja
mov
sub
adc
jmp
adc
xor
add
or
sub
and
clc
sbb
int3
lods
mov
stos
add
sub
dec
mov
mov
mov
aam
test
fildll
push
push
adc
sub
push
fadds
jle
push
push
lods
jne
mov
loopne
xchg
pop
jg
shrl
add
push
pop
fsubr
adc
push
adc
dec
out
int3
inc
pop
jle
loopne
add
and
jbe
jne
fs
or
arpl
sbb
inc
fmull
xchg
jecxz
inc
mov
xlat
in
pushf
stos
cmpsl
cmp
adc
outsl
and
cmp
jecxz
sbb
outsb
mov
insl
pop
sub
loope
clc
mov
sahf
jbe
or
cmp
pusha
lods
into
sahf
xlat
push
mov
stos
xchg
repnz
push
xchg
sbb
ret
or
sbb
lods
inc
pop
xor
in
out
mov
nop
pop
fdiv
mov
into
outsl
addb
shll
lcall
sbb
repnz
out
mov
xor
sub
gs
jl
int
or
xchg
mov
fdivrs
dec
add
push
push
cmp
addr16
inc
roll
outsb
ss
mov
repnz
mov
aam
push
push
sub
jl
icebp
mov
push
clc
aad
adc
pop
scas
dec
rcll
push
xchg
xchg
daa
push
imul
int3
xor
test
dec
inc
sbb
call
out
push
cld
insb
insl
mov
sub
dec
aaa
dec
sbb
and
push
mov
mov
out
cltd
addr16
stos
pop
sbb
push
iret
xchg
hlt
sbb
outsb
imul
adc
adc
mov
outsl
sbbl
and
sub
bts
bound
sub
sub
je
inc
dec
inc
inc
add
sbb
mov
push
leave
xchg
sub
iret
xor
outsb
scas
dec
push
pop
imul
xlat
jb
adc
push
sbb
cli
adc
jge
sarb
xchg
sbb
jo
ljmp
cmp
notb
test
int
pop
testl
scas
popf
movsb
cwtl
xchg
or
push
aas
push
fidivrs
adc
xor
aaa
stos
fidivs
in
mov
push
out
clc
push
xor
mov
xchg
daa
pop
adc
enter
xor
xor
fidivrs
cwtl
fwait
mov
and
adc
sub
ret
out
lret
iret
arpl
data16
cltd
cmpsb
mov
mov
cltd
xor
pop
mov
pop
out
cld
and
dec
cmpsb
inc
orl
jmp
sub
andl
sbb
fcmove
jns
cs
dec
pushf
sub
div
mov
push
mov
sti
shlb
push
pop
pop
xor
or
push
pop
jae
cmp
mov
std
fisubs
push
pop
cmpsl
out
adc
sub
sbb
arpl
rolb
orl
addr16
fbld
mov
pop
jb
pop
loope
inc
jl
cmp
pop
outsb
sub
pop
mov
je
ja
jbe
test
jecxz
inc
add
push
mov
lock
cli
scas
add
stc
jge
jl
inc
mov
jnp
cmp
and
repz
mov
lds
jno
xor
mov
outsl
dec
and
mov
add
int3
int
mov
daa
loop
add
push
mov
pop
dec
jecxz
push
push
mov
jbe
xor
inc
subb
lahf
jb
sbb
hlt
xchg
jns
ss
jmp
mov
jmp
xchg
fstl
fsubr
sub
mov
fistl
mov
xor
scas
dec
xchg
mov
mov
inc
jecxz
movsb
or
cmc
bound
outsl
xlat
push
inc
xor
mov
xorb
outsb
mov
add
mov
cmpsb
int
or
pop
sbb
pop
or
jmp
mov
xchg
jnp
mov
clc
dec
dec
inc
sub
jbe
into
add
arpl
mov
cmc
push
fbld
cmp
mov
adc
imul
int3
mov
mov
int
fisubrl
adc
pushf
dec
xor
cmp
cmp
adc
dec
inc
push
or
shlb
mov
cmp
cmp
pop
push
insl
push
das
inc
sub
sub
out
stc
xchg
pop
sbb
iret
incb
adc
test
mov
mov
cmp
cmpsl
push
cwtl
mov
fnsave
sub
xlat
test
lahf
pop
lea
dec
pop
mov
sbb
xchg
sti
shlb
push
lret
repz
gs
cmpsl
js
push
xor
or
cmp
dec
jne
push
push
mov
push
xchg
xchg
inc
xchg
jne
mov
imul
lcall
stc
fcmovnb
fcoml
pop
aaa
pop
loop
out
aad
xor
call
sub
inc
push
push
in
and
daa
outsl
gs
xchg
test
das
jg
movsl
cwtl
or
mov
dec
rolb
or
inc
or
outsl
xlat
mov
sti
sub
out
aam
outsl
jno
pop
jl
sbb
jp
mulb
and
mov
xchg
daa
xor
flds
into
pushf
sbbl
pushf
jno
jge
or
daa
cmp
mov
cmc
in
fwait
cld
mov
mov
mov
popf
jl
mov
sti
fsubrp
pop
pop
movsb
or
dec
cmp
push
mov
xchg
jb
out
push
scas
pusha
sub
mov
arpl
fwait
sub
pop
sub
sub
test
jb
xchg
aam
add
push
xor
push
sarl
fidivl
push
leave
insb
mov
ljmp
mov
out
test
test
pushf
imul
xor
adc
fmul
mov
or
sbbl
arpl
fdivrs
jbe
es
cmpsl
jbe
mov
fwait
int3
jae
shrb
mov
adc
jbe
jl
mov
add
adc
lods
sub
sbb
jle
inc
and
daa
add
ss
clc
lahf
push
fistps
leave
insw
inc
stos
sti
mov
icebp
mov
xor
test
adc
mov
lea
jle
lahf
pop
or
add
jb
pop
int3
sbb
stos
jmp
nop
jmp
jae
inc
push
xchg
loope
pusha
popa
push
jl
cmp
addr16
inc
jl
repz
enter
repnz
push
inc
add
f2xm1
xor
bound
xchg
mov
inc
pop
push
mov
mov
cs
mov
push
inc
fbstp
pop
xor
icebp
mov
inc
std
lods
inc
and
adc
ljmp
fs
mov
mov
mov
mov
cmp
dec
shrl
fadds
ja
mov
mov
lods
lret
add
in
inc
mov
lret
mov
push
sti
divb
clc
or
inc
or
movb
sti
inc
mov
push
xlat
aaa
gs
mov
imul
add
pop
sarb
dec
mov
pop
add
dec
popa
fildl
add
jne
adc
xorb
xlat
dec
dec
mov
inc
ja
loope
rol
jno
and
ds
fiadds
dec
dec
xor
xor
xchg
lods
dec
add
sti
movsb
pop
xchg
mov
fsts
in
xor
aam
and
scas
fstpl
sbb
pop
enter
sub
lock
cli
and
add
push
ljmp
push
cmp
ret
or
jne
or
cmp
mov
sbb
cmp
inc
and
mov
xchg
xor
sub
inc
ret
out
test
lret
xchg
push
je
imul
pushl
sahf
repnz
jns
aam
test
iret
pop
js
clc
inc
test
adc
mov
add
adc
out
xlat
inc
cmp
sub
mov
test
cmpsl
pop
addr16
lods
pop
leave
verw
cld
aas
ja
and
jle
mov
inc
lock
pusha
and
jecxz
xchg
pop
aam
xor
sub
cmp
dec
loop
std
pop
int3
lods
inc
jae
cmp
sub
lods
stc
or
mov
push
imul
enter
dec
xlat
and
imul
ja
mov
jl
push
or
gs
sbb
mov
sar
xorb
mov
movsl
filds
cmp
nop
ret
xchg
add
int3
into
lock
notl
jge
and
imul
in
mov
sbb
fldcw
xorb
inc
into
jne
lock
aaa
stos
stc
xor
push
cmpsl
dec
mov
push
out
test
cwtl
aam
mov
adc
jns
push
push
push
push
pop
scas
shlb
jp
scas
test
sbb
addl
bound
pop
ror
rcrb
sbb
insb
sahf
or
sbb
adc
jnp
cmp
pop
inc
hlt
into
enter
xchg
insl
xchg
iret
push
cmp
mov
jno
repnz
push
in
inc
lcall
orl
lahf
and
inc
dec
pop
addr16
xchg
mov
adc
sub
fst
pop
inc
fdivrl
movsl
push
cmpsb
arpl
dec
xlat
jo
je
dec
xorb
out
mov
les
sbb
out
mov
les
pop
mov
jmp
mov
inc
mov
sub
fisubl
add
ss
xchg
jb
loopne
js
or
sti
adc
imul
pushf
lock
gs
inc
shl
sbb
jb
xlat
or
mov
loope
out
sub
out
imul
xchg
sarb
push
xor
and
pop
pop
and
mov
xor
fwait
mov
xor
mov
cmp
cmp
negl
dec
cmp
inc
push
pop
add
xchg
das
adc
std
or
add
jo
in
dec
push
in
xor
cmp
insl
lret
dec
xor
jle
icebp
cmpsl
mov
mov
mov
push
sbb
adc
add
sub
xchg
insl
or
int
pop
repnz
add
cmp
xchg
rclb
testb
xor
std
es
aad
jp
iret
or
loop
lcall
dec
es
movsl
aaa
push
and
fcomip
fnstenv
nop
subb
mov
sub
daa
stos
negl
push
and
sti
ljmp
sub
insl
arpl
sarb
mov
push
xor
roll
clc
sbb
mov
or
mov
fldcw
jno
ret
sahf
rcr
lret
dec
repz
xorb
adc
shl
xor
push
ror
add
adc
daa
mov
outsb
aad
xor
sarl
cltd
pop
xchg
mov
pop
xchg
push
jnp
test
push
and
inc
bound
mov
test
test
inc
dec
add
xchg
add
pop
lods
xor
add
test
adc
js
outsl
pop
dec
insl
aad
jg
mov
stc
addb
and
jo
fisubs
orb
xlat
lcall
stos
add
mov
ret
test
or
fs
inc
cmp
inc
lahf
insl
xor
imul
fwait
aaa
int3
jo
mov
aad
push
ds
pusha
mov
jno
mov
int
inc
xchg
xchg
lds
out
inc
xor
pop
and
std
xchg
jmp
adc
repz
xor
push
imul
lahf
js
mov
dec
mov
cltd
out
mov
pop
testl
push
and
insl
mov
pusha
call
ja
mov
jns
int3
jl
cmpsl
inc
xchg
adc
mov
push
test
xchg
lahf
in
mov
jne
into
jb
jmp
mov
mov
or
mov
sbb
xorl
xor
sub
repnz
pushw
mov
dec
filds
push
idivl
xor
bound
stos
push
bound
cmpsl
stc
xlat
jb
add
loop
sub
test
out
xor
cmpsl
bound
outsl
adc
mov
gs
dec
sbb
stos
fsts
and
cmc
addr16
insl
cmp
xchg
clc
push
lock
dec
jns
js
xchg
scas
mov
jmp
jecxz
clc
cmp
xchg
mov
mov
push
out
inc
and
add
shl
fcmove
sbb
ja
mov
mov
inc
in
cmpb
mov
inc
lds
popa
insb
in
sbb
ja
cmp
popf
lret
loope
daa
lea
scas
insb
sbb
inc
inc
mov
sub
fmul
in
fmull
pop
ds
mov
adc
mov
lods
inc
add
mov
lret
ss
cltd
imul
xorl
ror
mov
xlat
mov
ss
cli
jmp
clc
dec
xchg
fstps
adc
mov
push
add
ja
jnp
je
cmp
adc
mov
sub
push
cmp
das
insl
pop
mov
mov
jp
je
call
fldenv
xchg
sub
ss
add
nop
sbb
sub
cwtl
push
mov
jae
xor
add
pop
pop
cmp
pop
adc
aam
pop
push
shll
hlt
cmp
dec
inc
int
into
and
mov
in
jae
xchg
cmc
dec
outsb
fisttps
cli
cmp
mov
sarl
cmp
mov
shlb
xor
inc
jg
insb
jno
push
dec
ds
std
test
ljmp
xchg
arpl
aam
xchg
mov
sbb
cs
mov
add
mov
mov
dec
xlat
popf
adc
inc
xchg
jns
cmpsl
div
ja
cmpsb
test
jecxz
inc
adcb
stos
mov
xchg
mov
movups
imul
fmull
icebp
adc
or
cmp
addr16
add
out
add
ss
sub
dec
push
xor
aam
faddp
pusha
xchg
out
sbb
shlb
xor
lret
add
pop
mov
frstor
sub
movsb
test
pop
adc
call
into
cmpsb
mov
jbe
pop
xor
ss
mov
lods
aam
lea
stc
popw
mov
sub
jae
push
jp
outsb
notb
or
sti
negb
adc
pop
cmp
xchg
andl
sbb
mov
push
negl
mov
lret
dec
or
add
aam
jae
push
dec
or
stc
add
mov
xorl
jmp
sbb
or
dec
fdivr
scas
shl
push
das
loopne
cmc
jmp
cli
mov
and
push
xor
in
cwtl
cmp
gs
dec
pop
push
movsb
int
daa
mov
push
lea
and
in
outsb
in
cmp
adc
mov
add
insl
mov
xchg
mov
fstps
xchg
lock
int3
aas
cmpb
and
jae
outsb
mov
xchg
add
mov
add
sub
in
popf
fucomip
mov
fsub
dec
cmpb
mov
in
jle
sub
push
test
icebp
in
push
ss
fdiv
int
push
mov
ljmp
stos
in
mov
sarb
push
cmp
jl
mov
or
cmp
gs
popf
jmp
bswap
jno
bound
rorb
mov
push
imul
mov
rclb
in
and
loopne
outsb
lret
push
scas
and
inc
jns
dec
jmp
push
cld
das
ljmp
ftst
negl
and
adc
and
mov
ret
daa
test
cli
lahf
bound
sahf
test
loope
lds
jge
mov
dec
ficoms
adc
dec
andb
pop
sub
fmull
lds
mov
lea
jecxz,pt
test
pop
mov
add
mov
lret
mov
and
mov
push
scas
cmp
jne
or
in
pop
mov
dec
pusha
mov
stc
lret
sti
add
jmp
sbb
push
scas
idivb
cmp
std
jecxz
sub
jp
mov
dec
inc
pop
lea
test
fcom
lret
add
fwait
dec
pop
mov
imul
ds
inc
cmp
inc
push
cltd
cs
in
adc
fstpl
loope
inc
scas
mov
inc
push
xchg
pop
or
out
cmp
jnp
jne
push
xor
vpextrw
lds
mov
cmp
xor
jb
pushf
pop
lods
pop
adc
pop
fcomps
stos
nop
in
scas
ljmp
aam
and
add
hlt
push
push
dec
std
mov
and
daa
rclb
adc
mov
ds
test
xchg
xor
cmc
std
cmp
xor
mov
invd
sub
lcall
lock
lds
shrb
or
xor
xor
push
movsl
mov
push
fldl
xchg
mov
fyl2xp1
dec
jns
loopne
in
pop
loopne
xchg
test
sub
bound
into
fidivl
icebp
or
out
js
cmp
mov
adc
test
mov
push
cmpsb
inc
adc
and
dec
cltd
pop
jbe
xchg
fiadds
add
stos
xchg
push
xor
out
in
imul
push
lods
pop
adc
mov
mov
test
mov
mov
adc
jb
shr
sbb
add
pop
lahf
add
mov
cmp
xchg
insb
lods
ret
xor
je
xchg
pusha
andl
out
outsl
jae
jp
adcb
pop
movsb
sbb
loop
dec
pop
jo
mov
mov
notl
icebp
hlt
inc
lock
and
xor
pop
push
xchg
cmp
fiadds
cmp
test
cli
popf
movsl
add
pop
dec
out
mov
xlat
sbb
dec
in
lcall
dec
inc
jge
inc
mov
pop
sbb
cmp
pushf
dec
jmp
mov
adc
cmp
icebp
pop
jl
inc
sarl
dec
mov
adc
sub
arpl
sti
mov
and
or
xor
pop
adc
add
imul
repnz
insl
dec
xor
or
mov
dec
mov
aad
shr
int
std
divb
inc
ljmp
mov
clc
idivl
stos
insl
inc
clc
add
andl
adc
mov
cmp
add
xor
cmpsl
mov
inc
jp
jg
mov
stc
cmc
int3
lret
and
inc
and
jecxz
mov
jg
repnz
add
clc
sbb
repnz
hlt
mov
shrb
enter
adc
or
add
mov
sub
stos
cmp
adc
xchg
mov
mov
test
push
pop
inc
retw
xor
inc
dec
in
mov
pushf
jne
push
stos
and
je
push
xchg
adc
les
arpl
jecxz
cmp
ret
ljmp
loop
sbb
in
add
je
repz
mov
xchg
pop
sahf
ret
int3
movl
inc
pop
andb
jb
lahf
mov
lcall
and
adc
inc
insl
hlt
arpl
out
dec
cmp
mov
push
in
xchg
mov
leave
inc
and
iret
int
std
cs
in
and
clc
jmp
xor
shll
mov
pop
or
xchg
out
je
push
dec
repz
xor
inc
cmp
push
mov
xchg
and
adc
stc
shlb
adc
std
dec
dec
outsb
xchg
ss
push
add
popa
jo
mov
pop
jo
shll
imul
je
push
int3
jns
inc
cmpb
xchg
insl
fidivrs
jne
icebp
cmp
sbb
sub
push
lret
std
lods
inc
stos
addr16
out
out
lret
jge
test
xchg
cltd
enter
xor
das
repz
cld
or
cmp
mov
cmpb
ds
lods
or
lcall
or
pop
jge
push
or
pop
iret
repz
or
je
fs
stos
inc
inc
jne
push
mov
cmp
test
add
repz
imul
sbb
xchg
jl
xor
mov
pusha
loop
push
add
rcll
cmovbe
inc
jl
lret
jb
test
shrl
adcl
sti
in
inc
mov
mov
aad
bound
dec
push
jmp
dec
and
cmp
mov
inc
or
and
test
sbbb
loopne
mov
ret
imul
paddd
jne
sub
cmpsl
stc
mov
inc
out
jns
push
pop
cwtl
xchg
test
subl
out
lds
xchg
test
pop
xor
lret
or
add
push
mov
push
mov
cmp
cmpsb
xchg
pop
out
cmp
in
sub
lahf
enter
jb
push
loop
push
mulb
mov
arpl
adc
flds
mov
and
idivl
jp
push
inc
xchg
out
sub
mov
pushf
es
rcrl
pop
popa
repnz
fdivrl
dec
fidivs
cltd
leave
into
adc
sbb
inc
fwait
nop
adc
in
shlb
ss
xchg
mov
and
cmp
sti
dec
jno
pop
lods
clc
add
in
jle
push
das
call
sub
pop
mov
dec
jg
sbb
movsb
outsl
dec
or
out
inc
mov
cmp
mov
mov
lret
loope
rcrl
xorb
lds
mov
popa
cmp
faddl
mov
jae
mov
test
pop
and
movsl
sub
lods
mov
fldcw
icebp
in
sbb
mov
faddp
pop
notl
stos
mov
or
mov
fildll
dec
cltd
dec
add
sub
fidivl
mov
mov
out
mov
pop
hlt
out
clc
arpl
and
insl
xor
mov
aam
inc
addr16
jb
sbb
call
mov
lahf
stc
out
xchg
test
popf
add
jne
imul
pop
inc
cmp
cs
popa
cli
jno
xor
mov
insb
ss
add
pop
inc
push
enter
jle
enter
cli
pusha
div
icebp
xchg
mov
xchg
pop
das
cmp
push
mov
mov
arpl
test
sub
shlb
cmp
inc
jb
adc
add
or
cmc
sbbb
jbe
scas
out
lcall
adc
sub
cwtl
adc
aas
mov
cmpl
xchg
ret
inc
push
or
sbb
sti
jnp
aam
jle
arpl
and
data16
sbb
push
orb
lret
in
or
imulb
sbb
cmp
cmp
sbb
pop
jbe
mov
jl
test
cmp
int3
test
lock
jecxz
sbb
stos
jmp
cwtl
and
push
and
sub
outsb
mov
das
inc
pushf
inc
aam
movsb
sbb
sub
out
xor
lods
mov
push
repz
sbb
inc
push
mov
shrl
lcall
cld
std
ret
dec
dec
mov
rcr
pop
jbe
sub
mov
lods
push
ja
sahf
pop
aad
movsl
cli
ss
pop
aas
xor
jns
ret
jo
xchg
in
shlb
sub
jge
jne
repz
jb
jge
shll
inc
bound
andb
mov
lods
into
push
sbb
lret
adc
punpckldq
push
sub
add
push
test
push
push
notl
aam
push
ret
push
push
fdivs
lahf
inc
cmp
in
mov
pushf
jbe
daa
xchg
hlt
jb
xor
out
daa
test
push
push
mov
xchg
lcall
cmp
idivb
xchg
push
cmp
mov
int3
fadd
push
out
jae
push
cli
mov
add
sbb
push
and
loope
pop
cmp
insl
push
sbb
int3
jnp
in
mov
push
insb
daa
test
test
xchg
loopne
sarl
sti
jo
jnp
or
inc
popa
jns
push
addr16
jns
call
mov
iret
les
inc
loope
inc
test
jnp
sub
cmp
sub
mov
fst
inc
inc
movsb
popa
insb
kmovb
or
aad
and
mov
movsl
in
add
subps
fldenv
mov
mov
push
cmp
pop
das
scas
pop
push
mov
xchg
fisttpll
jge
dec
and
cli
xlat
aad
cld
mov
mov
aas
mov
push
sbb
aas
sbb
outsl
jnp
int3
ljmp
rolb
gs
cmc
adc
lods
cmp
sub
xchg
inc
nop
addr16
pop
mov
bound
and
cmp
pop
insb
cmp
fsubrs
xchg
add
addr16
movsl
sub
aaa
cld
mov
dec
mov
push
data16
jecxz
dec
push
lcall
rcrl
mov
ffreep
push
mov
dec
arpl
mov
push
cmp
mov
jle
jnp
cltd
xor
das
je
ss
and
jnp
lahf
sbb
or
test
bswap
call
nop
jns
shll
dec
mov
jp
mov
jmp
mov
lods
cwtl
xchg
js
pusha
push
cmp
jne
inc
fwait
sahf
js
push
enter
int
dec
mov
sub
push
push
cmp
xlat
mov
xor
and
es
ret
xor
in
pop
in
push
cwtl
ret
ret
loope
push
jb
ss
pop
inc
mov
sti
dec
push
lret
cmp
sahf
fwait
lahf
lock
ss
scas
sub
jbe
push
cmp
cwtl
inc
mov
arpl
popf
fcomps
sbb
pop
sar
popf
out
out
xor
fiadds
lods
push
mov
and
icebp
xor
cmp
inc
into
dec
push
mov
jp,pn
es
out
cwtl
dec
cmc
adc
int3
lods
scas
add
jp
sarb
add
adc
mov
cld
ret
or
pop
cmp
je
pop
push
xor
or
pop
pop
loop
in
push
pop
adc
sbb
lods
jb
into
lret
mov
shr
mov
jns
inc
cmp
cltd
lcall
sbb
or
stos
addl
imull
es
mov
xchg
mov
lret
mov
fcmovnb
jp
shlb
mov
or
mov
movsl
pop
xchg
push
xchg
adc
pop
and
rorl
jbe
inc
cmp
fs
adc
jbe
mov
std
and
mov
int3
lcall
xchg
mov
int3
mov
popf
mov
or
adc
push
sub
fsubs
add
ja
repnz
push
sub
lds
stos
nop
sbb
xchg
iret
mov
std
pusha
pop
pop
repz
lret
cmc
mov
cmp
stos
in
add
pop
cmp
data16
inc
mov
and
movsb
jle
push
mov
sbb
cmp
sub
pop
hlt
cmp
jecxz
lahf
fstps
push
test
xor
xchg
cli
addl
lds
sbb
sub
daa
inc
pop
cltd
in
mov
or
repnz
sub
ja
loopne
rcrl
mov
inc
in
mov
add
xor
cmp
loopne
jmp
add
xchg
scas
test
cltd
mov
cli
xchg
popf
inc
pop
inc
test
fstl
xlat
pushf
nop
ds
mov
cmpsb
mov
ret
xchg
xor
cmp
fs
cld
push
sub
cmpb
adc
insb
lcall
repnz
mov
loope
add
cmp
rcrl
ss
pop
jg
outsb
pop
mov
fstl
fildl
insb
fisttpll
adcb
inc
bound
and
mov
jns
push
mov
adc
loop
shl
push
sub
mov
and
movsl
mov
orb
cmpsb
mov
jae
pop
lcall
into
and
pop
psrlq
inc
ret
adc
scas
inc
pop
fiadds
adc
xlat
fsubs
and
jle
mov
mov
fsubrl
adc
push
test
movsl
jmp
sub
cmp
in
aas
and
rol
addl
dec
nop
cld
subl
jb
cwtl
sub
scas
add
add
sub
adc
cltd
adc
or
int
out
xchg
jg
scas
sbb
pop
lcall
repz
dec
inc
cmpsb
push
fimuls
subb
sbb
int3
mov
arpl
cmpsb
push
ret
mov
push
pop
cmpsl
test
jmp
mov
into
and
xor
rorl
jmp
sbb
call
mov
cmpsb
scas
jp
mov
mov
in
lods
ds
inc
cltd
xorl
call
jmp
dec
int3
movsl
lea
xor
pusha
sbb
pushf
aaa
dec
jns
scas
mov
dec
push
loop
push
jl
push
pop
out
cs
outsl
cli
jge
fcomps
ds
jmp
mov
fcmovnb
mov
add
xorb
ret
mov
xchg
paddusw
test
movsb
scas
out
xor
roll
xor
inc
xor
pop
imul
mov
pop
sub
or
aad
inc
mov
fsubrs
inc
xchg
mov
add
rorl
lahf
dec
adc
enter
sub
add
idivl
push
xor
pop
lods
cmpsl
int
iret
fsubrp
sbb
ja
icebp
int3
fcoml
lret
mov
jmp
mov
mov
lret
movsb
jl
arpl
xchg
mov
cmpb
std
fcoms
fildll
and
and
push
push
fwait
out
jmp
loop
mov
jmp
stc
cld
xor
imulb
aad
cmp
sbb
aas
xchg
lods
jbe
push
cmp
xor
js
mov
pop
sub
or
sbb
pop
pop
xlat
adc
idivl
pop
pop
mov
jbe
push
repnz
mov
loopne
mov
and
ljmp
mov
in
add
mov
sahf
fwait
jae
or
sbb
icebp
gs
dec
mov
xor
sub
pop
cmc
repnz
lahf
jp
mov
jo
je
push
and
and
in
pop
push
loope
mov
dec
int3
dec
dec
test
sbb
sbb
lods
icebp
ja
ud1
mov
push
mov
pop
sbb
loopne
xlat
shlb
push
dec
mov
and
or
mov
push
pushl
inc
fistpll
jecxz
sbb
push
aad
jmp
jns
xor
in
fucomi
fistpll
out
adcb
adc
stos
mov
rorb
jle
mov
je,pn
push
adc
nop
pushf
test
arpl
pop
ljmp
std
pop
in
inc
pop
mov
xchg
out
inc
jns
push
jecxz
cmp
insl
daa
rcrl
shlb
cmpsl
cwtl
jle
lods
dec
inc
pop
das
fcoml
or
insb
sub
jge
jg
cmp
adc
add
subb
aad
dec
mov
jl
pop
imul
mov
push
mov
mov
sbb
in
push
jno
decl
adc
js
or
shrb
je
sbb
xchg
scas
mov
movsl
push
xlat
mov
push
push
sbb
sbb
inc
jmp
cmpsb
outsl
pop
add
lea
push
aaa
and
fmulp
repnz
sbb
xchg
push
mov
in
mov
cmc
movsl
bound
frstor
inc
push
inc
push
push
inc
mov
movsb
stc
add
cmpsl
inc
aam
and
xorb
addr16
in
sbb
mov
xor
sti
imul
sahf
push
bound
lahf
sbb
cmpsb
data16
fld1
add
jae
enter
pop
jge
outsl
pop
aas
xchg
inc
push
arpl
call
cmc
shlb
incb
pop
jns
cwtl
nop
decb
pop
into
adc
cld
ljmp
clc
in
jns
xlat
cld
fimuls
push
scas
notl
xor
cs
xchg
mov
mov
xchg
daa
sub
fwait
mov
push
sbb
sti
pop
insl
call
ficoml
mov
pop
sbb
xchg
sti
insl
lds
sub
inc
adc
mov
add
pop
ja
inc
js
and
jmp
sbb
repz
out
mov
add
dec
xchg
xchg
xlat
ret
stos
cmp
ja
movsl
aam
inc
jp
dec
sub
loope
cmp
mov
pop
cmp
push
mov
mov
mov
xchg
adcl
push
push
xor
enter
clc
hlt
enter
mov
cmp
in
cmc
out
jb
jae
pushf
mov
maskmovq
mull
sub
pop
xchg
ss
mov
daa
pusha
cmp
dec
pop
leave
pop
test
loopne
stc
test
mov
ljmp
movsl
stos
addl
scas
mov
jbe
mov
cmp
je
xchg
mov
push
mov
inc
out
jl
cmc
fs
mov
int
mov
mov
mov
xchg
and
mov
pop
cld
adc
mov
pop
push
aam
insb
xchg
in
add
mov
add
jp
add
adc
pop
into
into
es
xor
mov
leave
mov
inc
std
daa
pop
add
cli
mov
lock
lret
mov
xlat
idiv
cmpsl
mov
fildl
stos
rcr
jmp
mov
ja
popa
adc
fs
pop
mov
rcrl
pop
mov
lahf
sub
ds
sbb
bound
add
push
or
and
add
mov
adc
cwtl
xor
push
pop
mov
aad
dec
out
dec
jbe
dec
push
in
add
mov
imulw
add
movsb
mov
out
out
and
cmp
push
xor
rcr
arpl
inc
push
mov
imul
sub
and
in
pop
ds
arpl
pushf
inc
mov
repnz
fiadds
lret
pusha
push
rcrb
pop
pushf
and
test
push
cmp
enter
inc
xor
cmpsb
out
and
loope
lret
dec
adc
outsl
jbe
psubq
pop
popf
test
fs
mov
out
sub
or
dec
lcall
cli
or
emms
pop
mov
jl
pop
int
lahf
push
adc
loop
push
mov
add
mov
xlat
inc
pusha
in
dec
cld
in
inc
dec
iret
xchg
mov
or
in
cmp
pop
imull
inc
loopne
mov
lods
mov
andl
enter
and
cli
test
sbb
pop
add
jl
push
and
cmp
xor
jae
add
addr16
sub
mov
xchg
repnz
repnz
cld
sbb
sbbl
cltd
cwtl
andl
mov
fwait
lds
test
pushf
adc
pop
in
clc
push
dec
xchg
adc
cld
dec
mov
cltd
ja
es
jge
scas
sti
jbe
movsb
nop
lcall
sub
sub
jae
dec
mov
jp
out
in
pop
daa
xchg
addr16
sub
xchg
loope
mov
fistpll
inc
stos
scas
mov
loope
les
pop
fidivs
addb
lcall
adc
jae
insb
pop
jnp
xchg
mov
lret
xor
xchg
push
adc
push
int3
out
cmp
inc
and
dec
sbb
push
push
and
jo
lcall
mov
add
and
push
xchg
dec
fbld
sbb
mov
cmc
or
adc
and
scas
mov
imul
push
mov
jns
and
insb
pop
mov
jecxz
fcmovnb
insl
hlt
and
or
xor
push
clc
dec
aaa
and
sub
dec
test
adcb
sti
out
cmc
cmpb
in
jmp
fwait
lret
add
adc
fistpll
cmp
in
imul
or
mov
in
sahf
mov
subl
cmc
mov
fdivl
pop
jecxz
pop
loope
popa
subb
inc
jle
and
cmpsl
call
clc
inc
mov
sbbl
movsb
les
loope
frstor
andb
jl
push
mov
xchg
rcrb
cmp
cld
bound
popa
in
xchg
das
fs
repnz
dec
cs
xchg
or
pop
mov
imul
test
gs
xchg
sub
mov
enter
push
pusha
outsb
insl
aaa
xlat
push
fisubrl
jbe
pop
push
mov
lret
inc
fstps
inc
sbb
leave
jno
and
and
out
mov
jl
inc
mov
pushf
iret
adc
cli
aam
cs
mov
je
dec
fisubrl
or
mov
pop
sbb
dec
or
jl
ds
out
lds
mov
sti
cwtl
add
jmp
pop
mov
jnp
das
std
sub
xor
inc
pop
mov
std
fsubs
jp
xor
mov
push
scas
cmpb
mov
scas
shrl
xor
in
mov
add
cld
or
test
ja
mov
jl
std
add
cmc
sub
cmp
mov
pop
scas
cmp
stos
pop
cld
in
les
ds
int
inc
rclb
push
into
cmc
stos
lods
pop
add
out
outsb
jns
jmp
sarb
and
mov
sbbl
rcrl
andb
into
lret
in
dec
inc
push
cwtl
pop
sub
push
push
out
movntq
out
stos
fnstenv
movsl
shr
xor
push
fstpl
jns
adc
pop
jl
or
pushl
fiaddl
cmp
cmpsl
bound
cmp
into
cmp
out
sarb
mov
lds
xor
lds
loope
or
jbe
push
insb
cltd
shl
call
gs
clc
fwait
scas
cmp
push
cmp
insl
hlt
xchg
data16
int3
jge
shl
mov
xor
insl
jecxz
pusha
xchg
inc
pop
fbld
rcll
push
outsb
adc
push
insb
aam
pop
fildll
dec
addr16
ljmp
lock
adc
movsb
lock
jo
mov
xorl
sbbl
dec
icebp
lea
jp
inc
sbb
imull
mov
gs
loopne
and
mov
xchg
add
sub
ss
mov
sub
fs
xchg
daa
push
pushf
pop
mov
clc
xor
inc
scas
push
insb
dec
gs
mov
mov
adc
sub
add
popf
push
orb
mov
pushf
adc
mov
push
pop
arpl
lea
or
lods
lock
jge
popa
dec
movsl
hlt
imul
ret
out
scas
jle
int3
mov
and
test
das
lret
hlt
scas
mov
bound
mov
mov
popf
sahf
inc
jne
outsb
fwait
out
push
sbb
pop
inc
jle
loope
stos
sbb
xorb
cwtl
push
pop
adc
sti
lods
sbb
xchg
loop
fistpl
lret
xlat
mov
dec
mov
pop
mov
cld
and
push
push
vmovups
xchg
popf
xchg
adc
mov
xor
cmp
pop
mov
jl
xor
adc
push
inc
adc
notb
movsb
fcmovnb
dec
adc
stos
inc
lods
test
mov
insb
clc
mov
test
testb
push
pop
gs
pop
aaa
xor
pop
mov
icebp
cwtl
mov
mov
mov
loope
aam
inc
mov
cmp
xchg
lahf
xor
in
ljmp
fistl
shrl
adc
fstl
inc
mov
jecxz
and
fidivl
jb
stc
hlt
jmp
mov
sub
jmp
jmp
mov
imul
insl
cmpsb
jnp
repnz
sbbb
sub
pop
cmp
push
jmp
testb
lea
cmpsl
mov
sbb
pushf
lds
fs
cmc
arpl
adc
jbe
push
aam
add
push
dec
test
dec
mov
lcall
and
aas
ss
jp
cmc
xchg
push
jb
inc
test
jne
mov
mov
inc
xor
sbb
loop
cmpsl
mov
sub
sub
movsb
inc
sub
mov
ret
inc
sahf
mov
fwait
imul
add
shl
inc
mov
xor
fwait
out
mov
add
xchg
sbb
cld
push
jb
inc
pop
jbe
push
mov
and
stos
aam
add
loope
icebp
pop
aas
xchg
bound
xor
into
lods
out
repz
mov
jle
dec
add
ret
sbb
push
pop
or
inc
repnz
pop
xchg
lods
popf
scas
fcompl
mov
js
pop
stc
arpl
and
into
inc
aad
out
pushf
ficomps
sahf
ja
adc
push
mov
outsb
aam
mov
and
cmp
rcrb
cmp
hlt
repz
js
insl
cmp
ret
fsubs
add
in
fildl
cmpsb
stc
push
jns
inc
lcall
std
pop
or
roll
es
or
dec
mov
test
jecxz
sbb
push
aad
cld
imul
xchg
in
xchg
test
mov
push
hlt
jae
adcl
push
shll
sub
adc
xchg
dec
jecxz
or
cmp
mov
pop
mov
negl
push
push
xchg
push
add
nop
incb
lea
pxor
push
dec
xor
cmc
push
negl
mov
jno
inc
inc
ja
cmpb
icebp
pusha
bound
jmp
shll
xlat
movsb
adc
out
hlt
scas
xlat
jge
xchg
mov
lsl
imull
int
idivl
inc
and
sti
xor
xchg
jmp
mov
mov
mov
popf
stos
xchg
mov
in
mov
cmpsl
and
out
mov
loop
dec
movsb
sbb
scas
pop
out
js
mov
push
ret
imul
out
test
je
pusha
xchg
xchg
mov
mov
push
insl
repz
repnz
cmp
fisttps
push
jmp
sbb
das
repz
adc
sarb
fisubrl
fs
sub
out
sbb
dec
dec
stc
mov
push
push
mov
jmp
xchg
sbb
aad
subb
enter
mov
into
pushf
jp
in
loopne
loopne
dec
add
adc
pop
pop
imulb
shlb
aas
cwtl
sub
out
jmp
inc
shll
mov
xchg
mov
inc
push
sub
cmp
incl
rcrl
inc
push
and
mov
and
fcomps
faddl
jmp
test
pushf
sub
add
dec
movsl
pop
mov
inc
add
add
popa
xchg
lahf
mov
mov
mov
das
mov
popa
lock
jmp
insb
jmp
mov
incb
mov
push
push
push
test
jno
inc
mov
notb
mov
sti
cmpsl
or
enter
imul
hlt
out
or
int
out
mov
je
push
bound
jmp
mov
loopne
sub
nop
incb
inc
mov
adc
flds
test
inc
in
xor
cmp
repnz
dec
cs
and
js
cltd
movsb
push
or
xor
movsl
ret
xor
imul
adc
aad
test
iret
hlt
aad
aad
shll
or
lahf
pop
mov
jl
jle
mov
mov
rcr
sub
mov
or
inc
cmp
movsb
adc
rorl
pop
mov
rcrb
cmp
idivb
and
stos
into
push
jmp
sbb
sub
int
scas
fwait
lcall
add
ret
pop
repz
sub
mov
or
xor
xchg
jmp
stc
mov
adc
mov
sub
cmp
popa
xchg
repz
jnp
fisubrl
fwait
adc
mov
pop
repz
cmp
leave
push
cmpsb
push
je
dec
subl
call
jns
cld
iret
push
sbb
orl
jl
mov
movsb
add
xchg
add
adc
pop
dec
cli
add
adc
or
int3
imul
or
cmpsl
push
mov
sbb
lret
mov
pushl
addr16
pop
dec
inc
and
inc
imul
pop
pop
xlat
xchg
sahf
and
mov
xchg
fwait
adc
cmp
mov
xrelease
inc
fnstcw
out
inc
pop
xor
dec
jecxz
xor
xchg
mov
jmp
rcll
rclb
dec
sti
jne
or
xchg
lods
and
dec
fcomps
scas
adc
fsub
movsb
lahf
jnp
loope
xor
cmp
in
dec
ficoms
jmp
loopne
pop
jp
xor
mov
call
add
lret
and
sbb
push
gs
cltd
arpl
in
daa
or
push
mov
stos
bound
push
popa
inc
add
adc
mov
push
xchg
test
xor
mov
inc
jno
ss
cmp
lock
pop
jl
dec
and
jmp
sbb
xor
inc
xchg
jno
cmc
dec
popf
setno
aaa
or
loopne
push
fldenv
pop
repz
push
and
push
dec
stos
syscall
lea
xlat
adc
and
mov
adc
cmpsl
call
push
adc
ret
jecxz
scas
negb
jnp
adc
jecxz
int3
push
jnp
mov
sub
and
push
dec
mov
inc
addr16
mov
jmp
cld
daa
ja
and
dec
cmpsl
lock
out
inc
stos
or
out
enter
clc
inc
add
rol
leave
jmp
pop
dec
loopne
cld
jo
scas
mov
jno
pop
adc
ret
mov
xor
add
xchg
std
or
scas
add
push
push
popf
add
bound
scas
out
loope
and
or
add
add
ret
fdivrl
jge
pushf
imul
addr16
cwtl
xor
xchg
push
mov
mov
mov
in
mov
popa
mov
nop
jle
out
ror
mov
add
xchg
push
pop
xchg
popf
or
xchg
cs
mov
cmc
push
andb
imul
aad
add
rcrl
adc
pop
orl
or
xchg
mov
std
cmp
push
mov
mov
inc
cmp
aam
add
cs
cmp
aam
cmp
mov
or
xor
lods
sub
lcall
dec
movsl
mov
addr16
ror
xor
push
add
cmc
inc
repnz
fistl
movl
out
aam
or
outsb
inc
in
mov
aad
lods
push
arpl
lcall
xor
mov
shll
cli
jnp
icebp
cli
or
mov
mov
mov
cmpsl
loopne,pt
pop
pusha
sbb
push
xchg
push
aad
push
pushf
cmp
mov
shlb
arpl
xchg
adc
into
pushf
mov
dec
xor
mov
push
adc
fsubrl
add
adcl
inc
out
cmp
sahf
inc
shll
or
je
sarb
mov
add
stc
lret
lock
jns
and
pop
dec
je
xchg
sbb
ljmp
mov
gs
xchg
sbbb
imul
cli
pop
dec
mov
dec
mov
cmc
cmp
scas
fistl
xor
scas
xchg
test
push
xor
pop
dec
mov
out
adc
push
xchg
out
cltd
push
jl
push
stos
nop
mov
mov
xchg
mov
add
jmp
nop
insl
push
idivb
aaa
arpl
push
sbb
jp
sarl
pop
outsb
xlat
in
pop
jle
stos
and
mov
lods
test
call
push
inc
pop
lret
gs
jae
testb
cli
sub
xor
hlt
cmpsl
pop
cmp
test
add
outsl
xchg
xor
add
xchg
push
mov
insl
sub
dec
add
hlt
mov
mov
insl
push
jns
cmp
test
out
out
cmp
cmpsb
sub
push
mov
iret
cmp
cld
jo
dec
sbbl
decl
pop
stos
inc
test
cmpsl
scas
adc
loop
inc
sbb
adc
loopne
imul
jno
bound
lcall
dec
fcompl
sbb
xchg
pop
push
mov
or
cwtl
pop
mov
setns
dec
or
xchg
dec
mov
je
mov
outsb
or
sub
pop
hlt
add
sbb
and
push
pusha
cmp
jno
decb
fcoms
jne
and
sbb
xor
dec
push
cmp
jp
jbe
outsl
push
mov
pushf
jg
lcall
sahf
sub
lods
lds
sub
cmp
sbb
xor
dec
stos
lahf
cmp
out
adc
call
lods
fcmovne
pop
daa
sub
xorl
fdivl
and
pop
inc
mov
sub
mov
lea
jmp
cltd
xchg
bound
ja
inc
jmp
sbb
pop
ja
lret
out
dec
fwait
jp
inc
stc
add
mov
ja
fs
outsb
mov
mov
push
test
aad
lods
add
inc
outsb
jle
and
std
and
mov
outsl
mov
dec
or
loope
dec
or
xchg
push
dec
sbb
adc
mov
push
in
sub
or
inc
aam
insb
arpl
inc
sub
data16
cltd
and
imul
mov
mov
dec
lret
pop
insl
addr16
enter
lcall
test
dec
repz
aaa
out
in
cli
mov
mov
mov
xchg
cltd
push
mov
shlb
push
sbb
fstl
or
push
mov
insb
adc
jno
lret
in
imul
sbbb
loope
mov
outsl
xor
outsb
and
dec
fsubrs
test
lahf
push
and
ljmp
jecxz
pushf
mov
push
jl
dec
mov
loopne
mov
mov
sbb
and
aaa
mov
jo
stos
cmp
dec
popf
lret
dec
add
jg
cmpsb
inc
add
lahf
sub
ja,pn
shll
nop
dec
dec
sahf
sbb
add
fstps
ljmp
mov
pusha
cmp
dec
mov
pop
mov
and
push
jo
xchg
movsb
inc
test
inc
dec
xor
mov
stos
xor
push
subl
push
test
or
dec
in
ret
pop
loope
dec
jmp
jnp
sub
push
test
int
daa
leave
rcrl
mov
xchg
mov
call
jno
or
hlt
data16
in
adc
pop
fsubrl
mov
xchg
aas
sbb
xchg
inc
fs
lcall
sbb
xchg
cltd
xor
inc
cli
mov
repz
je
inc
adc
adc
dec
aas
push
cmp
mov
test
lret
leave
es
push
out
adc
shr
push
outsl
fcmovnb
mov
mov
jno
aas
inc
movsb
call
popa
adc
push
leave
shll
pmulhuw
cli
xchg
mov
scas
xor
inc
rcl
jl
pop
shlb
cmp
aad
iret
and
aam
je
xchg
addl
mov
cld
xchg
daa
mov
or
xor
out
lock
xchg
inc
movsl
mov
pushf
test
cmpsl
clc
scas
mov
or
mov
out
aaa
sbb
notl
pop
cmp
jl
idivb
and
and
push
push
rorl
inc
test
aam
subb
xchg
cmc
aaa
xlat
aaa
dec
jecxz
sub
jecxz
dec
mov
mov
push
in
jno
and
inc
movl
shll
in
or
sub
push
push
movsb
xor
mov
mov
outsl
mov
scas
adc
or
inc
outsb
pop
setb
mov
arpl
in
and
cmp
popf
test
mov
mov
fs
push
cs
enter
in
lods
sbb
dec
mov
mov
popf
daa
adc
js
mov
pop
cmp
and
aam
push
add
sub
test
je
outsl
and
adc
sbb
cld
cmp
fucomi
and
loope
daa
imul
aaa
out
arpl
inc
mov
andl
xor
je
out
add
pop
add
sub
xchg
mov
std
ja
cmc
xchg
out
mov
cmp
jno
mov
jmp
adc
mov
jnp
jge
test
das
push
ds
mov
insb
jge
int3
imul
data16
push
adc
xchg
jo
fdivrl
iret
adc
xor
mov
aas
sbb
add
sbb
mov
mov
data16
jmp
sbb
andl
add
mul
aam
out
notb
int3
xor
add
andb
adc
rclb
xor
fmull
fstps
loop
in
pop
into
js
scas
add
nop
imul
pusha
lahf
mov
imul
or
out
fldt
das
xor
test
dec
mov
subb
int
mov
jmp
or
loopne
cmc
or
and
loope
out
test
xor
xor
clc
decb
dec
std
outsb
push
add
rcr
icebp
xchg
lret
pop
dec
add
sbb
xor
pop
pop
and
cmp
mov
faddl
xchg
je
mov
rcrl
mov
data16
pushf
add
cmpsb
cmp
xor
sti
rcrb
in
test
shrl
fs
mov
in
xor
sar
mov
mov
enter
mov
xchg
sub
xor
stc
bnd
outsl
call
xchg
push
sbb
jle
add
mov
ds
xor
ja
js
or
stc
loop
sub
jae
test
ja
xor
sub
pusha
xchg
sti
pushf
std
inc
or
cli
xchg
add
je
and
mov
shll
sbb
rclb
mov
xchg
repnz
stos
std
and
xchg
ret
cmc
push
and
push
jns
es
sahf
push
test
jae
xchg
adc
sar
in
mov
negb
daa
out
sub
xchg
inc
adcb
lret
xchg
jnp
dec
repz
sub
pop
adc
imul
je
shl
push
cmp
adc
sbb
daa
push
int3
addr16
mov
mov
std
add
bound
out
das
sub
rorb
mov
sub
stc
push
insl
adc
jecxz
mov
adc
sbb
aas
pop
xchg
aaa
idivb
push
lock
jbe
sub
arpl
pop
mov
or
mov
loopne
jb
scas
test
in
adc
ja
mov
lcall
ffree
sbb
push
rol
and
pushf
inc
cmp
push
fsts
aaa
mov
xor
or
insb
xor
outsl
sub
lods
scas
jbe
mov
aas
test
jle
bound
inc
sbb
call
test
jb
int
ret
fsubrs
fst
enter
cwtl
leave
jp
stos
aas
lea
loop
add
mov
lahf
jmp
lods
mov
sub
sbb
cmp
loop
je
out
jne
sahf
add
movsl
cmp
out
ja
mov
std
test
adc
add
rcrb
ret
xor
cmp
and
lret
sarl
in
adc
sub
enter
call
jbe
adc
sub
mov
bound
scas
arpl
sbb
aad
sbbl
test
idivl
lods
es
sbb
push
lock
or
pop
adc
pop
mov
imul
jge
xchg
fisubrs
or
fcomps
stos
repnz
es
adc
lret
push
ret
data16
and
rclb
js
push
sub
ret
lahf
popf
push
sub
pop
mov
scas
lret
xor
sub
sbb
push
pop
or
fidivrl
cli
sahf
fwait
mov
fidivrl
das
lods
or
push
mov
push
int
inc
scas
push
in
inc
sub
add
and
lahf
add
xor
cmpsl
sbb
lcall
insb
or
sbbb
mov
rorl
mov
outsl
cmp
lret
dec
dec
lret
mov
xchg
cmp
sbb
sub
cmc
cmc
lock
fstp
push
sbb
xor
scas
add
fistl
lods
cld
movsl
enter
lds
fisttpl
daa
lea
mov
xor
fstpt
ljmp
lods
cmpsb
inc
and
jae
xchg
or
mov
cmpb
in
push
inc
dec
dec
push
jne
cs
enter
enter
xlat
into
pop
out
in
daa
inc
cmpsl
dec
pusha
push
pop
and
push
jl
and
pop
add
out
sti
insb
or
aas
repnz
lds
movsl
inc
inc
nop
test
adc
nop
mov
xor
pop
or
add
stc
cli
dec
ficomps
xlat
pop
sbb
int3
aam
pop
and
imul
test
adc
add
aad
iret
loopne
xchg
xchg
ficoml
pop
sarl
dec
sahf
sbb
aas
push
iret
push
dec
call
std
inc
out
clc
mov
lcall
push
jg
pop
leave
xor
cmc
lcall
testb
ret
push
clc
pop
outsb
cltd
in
push
shlb
jmp
in
std
sub
and
fnstcw
dec
sbb
fidivrs
xor
lahf
mov
mov
jns
push
out
inc
lret
negb
pop
pushl
pop
outsl
push
dec
ljmp
movsl
mov
cwtl
repz
fs
fwait
lock
mov
cli
out
push
mov
lds
push
jge
fsts
push
sbb
cltd
nop
enter
sub
das
pop
sbb
xchg
ljmp
sbb
pop
push
repnz
cltd
cwtl
insb
sub
inc
or
add
stos
scas
or
push
xor
push
cmpsl
push
mov
hlt
aad
dec
jne
jecxz
test
jne
push
or
rcrb
jp
fabs
mov
add
mov
scas
xor
push
cmpsl
adc
push
jmp
xchg
add
mov
ss
fiaddl
sbb
mov
mov
pop
sub
xchg
in
add
stos
insb
data16
aas
ja
fnstenv
cmp
mov
fdivrs
fcmovnu
push
or
cli
outsl
jbe
xchg
sub
pushf
jo
je
xchg
inc
scas
push
add
mov
dec
loopne
into
popf
mov
push
aaa
adcl
leave
test
add
mov
cmp
add
cmp
cmp
push
test
dec
adc
lret
ficompl
sbb
inc
test
gs
fdiv
insl
clc
cmp
adc
imul
data16
or
xor
sbb
cmp
int
lods
xchg
ljmp
xor
mov
push
jae
stos
rclb
clc
xchg
lret
jp
rorl
fs
lahf
dec
mov
ds
loop
ljmp
pop
in
mov
xor
or
inc
neg
fldenv
jb
cmp
addr16
jnp
mov
mov
and
dec
sbb
repnz
push
jge
mov
repnz
std
mov
mov
add
sahf
xchg
mov
xor
and
or
dec
cli
pop
dec
mov
jne
and
dec
jecxz
xchg
xchg
xor
sub
and
in
add
or
test
or
ja
mov
mov
cmpsb
xor
mov
aam
cmp
ljmp
push
imul
icebp
ss
and
test
ljmp
arpl
push
mov
lahf
jg
pop
inc
sti
xchg
jg
or
out
mov
pop
imul
in
int
nop
jnp
adc
ljmp
cld
fsts
or
int
jl
add
xor
cmp
sbb
lret
push
repz
das
in
mov
mov
std
fistl
adc
and
cwtl
mov
lds
push
aaa
fsubrl
in
andl
dec
fcomp
cs
dec
jb
add
xor
pop
leave
sub
in
addr16
scas
adc
in
push
fcoml
pushf
sahf
xor
jae
push
jns
mov
dec
fsubr
test
sar
dec
fs
sub
test
cmp
sub
jnp
jecxz
mov
and
popa
push
mov
imul
out
enter
popf
cli
cld
or
clc
test
pop
dec
adc
insb
mov
daa
push
mov
ret
popa
xor
jno
pop
adc
jge
mov
into
or
add
mov
sbb
adc
or
add
out
jb
mov
pop
mov
xor
adc
je
adc
adc
sub
add
mov
xor
cmc
stos
push
xchg
push
and
repnz
or
subl
jg
test
shlb
inc
or
cltd
divb
jl
adc
adcb
and
pop
pcmpeqd
out
rcrl
aam
push
and
cmpl
jp
out
scas
or
repnz
pusha
xchg
stos
jge
in
ficoml
mov
mov
clc
lret
cmp
enter
std
mov
xchg
mul
pop
clc
test
xchg
lahf
adc
adc
adc
aaa
loop
adc
int3
sarb
mov
sahf
subl
ds
fidivrl
push
mov
xchg
mov
xchg
or
lret
imul
add
movsl
inc
mov
jl
movsl
jmp
mov
cmc
sbb
dec
sbb
insb
push
xchg
cmpsb
dec
imul
or
mov
push
xorb
loop
sub
xor
inc
mov
cmp
push
jp
and
mov
adc
or
imull
cmp
out
loope
jle
stos
mov
xor
es
ss
push
and
movsb
sub
push
jmp
xor
outsb
adc
and
inc
bound
mov
int3
into
scas
xchg
arpl
xrelease
sbb
movsl
icebp
xchg
and
xchg
fcoms
mov
sub
je
jle
mov
hlt
xchg
mov
mov
fnsave
shrd
andl
and
inc
iret
mov
andl
xor
scas
sub
in
or
add
loop
mov
aaa
rcl
je
jge
outsl
mov
into
dec
or
loopne
or
pop
dec
in
pusha
shll
mov
dec
out
lret
adc
lea
lret
fwait
sahf
lods
pop
jae
xlat
xchg
jb
ljmp
imul
cmp
pushf
adc
mov
mov
sbb
pop
int
push
mov
js
cmpsl
cmp
inc
push
outsl
fcoms
cmp
inc
in
arpl
loope
or
addb
jecxz
outsl
pop
mov
mov
cld
loope
sub
xchg
sarl
xchg
shl
test
cmp
inc
loope
in
loope
jne
cmp
bound
ss
inc
shl
mov
int
jnp
pushf
notl
sbb
jae
pop
cli
xor
jno
lret
dec
popa
scas
mov
repz
addr16
test
add
jecxz
repz
dec
inc
sbb
movsl
sbb
aam
insb
mov
inc
cld
enter
jp
cltd
pop
dec
pop
xor
ret
mov
or
daa
jns
mov
in
lods
enter
xor
and
lods
xchg
mov
mov
cli
xchg
pushf
jno
sti
pop
xor
and
sbb
push
add
arpl
dec
js
clc
xchg
xor
fldl
loopne
int
push
mov
out
and
adc
mov
leave
cs
test
aas
int3
inc
out
lcall
int
cmpsl
xchg
xchg
xchg
cltd
inc
sub
and
fwait
xor
or
sbb
sbb
cwtl
shrb
sbb
jae
fwait
and
jg
inc
ja
adc
inc
loope
mov
lods
clc
jmp
in
ja
xchg
mov
pop
in
sbb
jge
loope
lds
in
pop
loope
pop
add
rclb
andb
push
lods
add
jb
popf
and
lods
fmull
add
popf
outsb
mov
add
out
mov
fistpll
in
bound
es
shl
inc
popf
add
scas
inc
insl
movsl
push
inc
and
cmp
test
pop
jmp
mov
and
inc
js
cmp
inc
lcall
in
dec
test
dec
mov
inc
pop
dec
lock
lahf
sub
jle
sub
scas
out
xchg
rcrl
pop
jbe
arpl
lea
insb
push
jle
mov
cmpl
out
loop
mov
sbb
xchg
nop
push
shrl
pop
nop
dec
push
and
aam
sbb
mov
push
popa
js
call
lods
mov
mov
scas
cmp
in
imul
xlat
sahf
jge
push
mov
in
or
dec
mov
mov
rcrl
xor
out
add
std
xorb
in
loope
icebp
pop
popf
push
sbb
mov
dec
arpl
ret
loop
test
test
stos
cmp
shll
cltd
loop
loopne
and
in
sub
loope
inc
pop
mov
aad
push
jecxz
enter
xlat
and
insl
jp
add
leave
icebp
sti
jmp
mov
push
cmpsb
add
filds
mov
lock
inc
lret
mov
clc
mov
sub
mov
out
inc
mov
pop
xor
daa
xor
mov
clc
jmp
jno
aad
push
repz
and
fimull
jge
mov
mov
mov
or
test
iret
add
pop
popa
sbb
mov
nop
push
mov
or
test
rolb
clc
in
es
xor
idivl
sbb
scas
mov
xlat
mov
lods
jp
push
mov
mov
jno
xor
in
mov
mov
lret
or
lea
clc
mov
movsl
mov
adc
insb
add
xchg
and
cmp
movsl
sub
cld
push
ja
rolb
test
ret
cmpb
leave
push
mov
loopne
fimuls
or
push
loope
lods
cs
leave
mov
lock
xor
jno
sub
mov
incb
testb
mov
mov
xlat
stc
jnp
mov
daa
sub
add
lretw
sbb
push
lea
mov
fbld
popf
push
inc
dec
cwtl
xchg
incl
xorl
shr
and
pop
jge
sbb
pop
enter
sbb
push
jmp
xor
jge,pt
add
cmp
movsb
das
jmp
xor
popa
and
mov
shr
mov
jge
pop
mov
xchg
hlt
mov
push
cmp
adc
addb
dec
jb
inc
and
cmp
push
out
mov
imulb
loope
lock
jb
mov
loopne
fstpl
sub
lret
int3
std
fs
es
stos
les
pop
leave
xchg
sbb
pop
inc
fdivrs
popa
adc
and
adc
fbld
inc
push
mov
xchg
inc
in
inc
jbe
pushf
imul
pop
clc
adc
ss
cld
sub
and
cmp
out
popa
cld
dec
sub
fdivrs
xor
adc
repnz
aad
jns
sbb
dec
sbb
add
subb
xor
mov
std
and
negb
sub
add
xchg
clc
cmp
repz
sub
rcll
pop
mov
push
adc
or
and
sbb
fsubs
repnz
pop
repz
movsl
rcl
pop
mov
lds
lret
shll
pusha
mov
sbb
fists
cmp
mov
mov
push
jbe
push
lret
jb
inc
mov
pop
push
int3
std
dec
pusha
xchg
inc
or
push
ds
inc
xor
mov
push
dec
lret
cmpsb
adc
lret
cli
loope
into
je
and
mul
xchg
movsl
inc
sbb
add
shlb
add
jnp
push
daa
inc
ljmp
repnz
aas
cmp
adc
inc
in
test
fidivs
in
pop
rorl
cwtl
pop
lret
push
mov
mov
mulb
leave
out
mov
cmp
pop
xchg
sub
or
cmpsl
idivb
adc
add
cs
push
sbb
aaa
imul
add
lods
arpl
test
dec
js
iret
mov
or
mov
inc
push
xor
mov
inc
dec
push
pushl
jg
mov
mov
xchg
cli
jns
and
mov
or
inc
filds
loop
int3
mov
and
jmp
dec
cwtl
xlat
rorl
lods
and
xchg
gs
in
mov
aam
nop
sbb
jp
xchg
push
xchg
mov
cmp
loopne
add
push
jno
xchg
dec
xor
aad
push
rcll
fdivs
movsb
fimull
adc
push
add
sub
shlb
jmp
mov
lds
xor
add
sub
mov
jns
cs
jbe
and
and
mov
jl
push
and
out
push
test
mov
repz
daa
int
sbb
daa
cltd
mov
or
lock
imul
or
push
inc
pcmpeqb
stos
lea
gs
jo
imul
xor
jmp
aam
in
shll
in
es
outsl
mov
or
addb
xor
scas
fstpt
cmp
mov
in
sub
lret
sbb
data16
in
aad
pop
push
cmp
add
cmp
ret
stos
call
jnp
mov
inc
jo
sarb
and
or
jp
cmp
sub
out
xor
xchg
sub
cltd
movsb
or
add
loopne
incb
addr16
mov
scas
inc
popf
je
in
into
lods
hlt
fisubs
imul
mov
lahf
lock
addr16
or
test
xor
jp
arpl
stos
mov
pop
mov
or
pop
pop
inc
lret
jb
sub
adc
js
stos
test
pop
inc
scas
xchg
lcall
and
nop
shll
jb
dec
out
add
dec
sbb
push
pop
dec
orl
pop
mov
mov
jge
out
inc
aad
out
cld
cmp
mov
call
push
popa
int3
push
xchg
movsl
scas
inc
ja
jmp
daa
mov
scas
in
decb
ds
mov
jl
lahf
dec
mov
ret
dec
push
pop
mov
push
shll
iret
pop
xchg
aaa
xchg
sbb
add
fnsave
cmp
xchg
stos
push
ss
pop
popf
shll
dec
hlt
jmp
add
mov
imul
out
mov
leave
jne
push
fsubr
frstor
imul
fsts
fmul
sahf
dec
bound
and
pop
popf
cmp
lcall
in
pop
xchg
adc
or
mov
insb
push
stos
dec
ret
and
push
or
push
xor
aad
lock
pop
out
shll
aad
jbe
inc
or
push
xchg
fisubs
push
sub
fwait
clc
popa
jno
add
push
jmp
and
pop
mov
add
negl
divb
addb
add
clc
arpl
stos
xchg
aas
imul
loop
jmp
stc
xorb
in
test
sbb
pop
jbe
int3
rolb
bound
cmp
lock
hlt
mov
inc
pushf
add
loop
lods
rclb
cmp
mov
add
pop
cmc
adc
fidivrl
push
inc
in
cmp
sub
jmp
insl
xlat
mov
sbb
arpl
pop
add
int3
pushf
test
repz
cmpsl
sub
pop
pop
out
inc
repnz
mov
mov
adc
or
in
leave
and
mov
pop
or
mov
inc
into
pop
xchg
mov
mov
int3
mov
mov
into
mov
and
and
lock
jo
and
xchg
mov
dec
ret
mov
icebp
imul
add
aaa
adc
int3
and
push
inc
sub
dec
cld
mov
jo
es
sub
sub
dec
cmp
jmp
mov
ljmp
push
xchg
cltd
jae
mov
mov
outsb
jl
bound
inc
bound
in
into
jae
xchg
jecxz
in
jo
andb
mov
push
notl
daa
mov
sbb
inc
sarl
fwait
sub
in
repnz
outsl
push
or
mov
add
sbb
ds
lea
cmpb
jmp
stos
jno
jb
mov
in
out
mov
inc
add
iret
lds
jns
pop
enter
pop
daa
jle
mov
int3
sbb
fistpll
mov
lods
sti
xlat
jae
loope
stc
jge
push
adc
mov
ljmp
pop
cld
adc
or
push
xor
aam
cmpb
sar
fisttps
cmp
mul
jnp
mov
dec
sbb
pusha
movsl
mov
test
mov
dec
cmpsl
pop
mov
or
outsl
cld
mov
mov
out
jmp
push
addl
mov
rcll
inc
mov
cld
leave
or
in
repz
mov
ret
fwait
inc
mov
push
jle
add
mov
cmp
imul
sub
jne
insb
cli
push
or
or
jae
and
and
mov
or
movsb
cmp
mov
ja
dec
xor
adc
test
mov
fistl
and
mov
dec
in
sub
movsb
sti
cld
rorl
int
sbb
pop
sub
popf
inc
in
fsts
and
sub
mov
cmpsl
xorb
cmpsl
aaa
and
xor
jnp
inc
adc
test
mov
push
fisttpl
ret
dec
in
pushw
aaa
pop
push
mov
xchg
enter
pop
psraw
or
jl
std
mov
lea
nop
pmullw
stos
mov
lcall
shl
or
inc
dec
int3
in
mov
push
push
pop
mov
fdivrl
mov
mov
xchg
test
ja
ret
inc
scas
insl
lock
hlt
fstl
jmp
sub
fs
fnstenv
cmpsb
push
loope
xchg
sbb
repz
cld
imul
dec
divb
cmp
sti
inc
outsl
push
mov
pop
lea
nop
aaa
test
dec
cli
push
out
mov
fisubrl
pop
in
mov
sub
push
mov
rcll
arpl
cwtl
xor
jnp
call
xor
popa
add
loope
das
and
lods
jle
add
xchg
and
pop
in
mov
imul
xlat
mov
push
add
push
fstps
mov
sbb
lret
fwait
push
jecxz
and
loop
dec
fmuls
or
sbb
data16
shl
mov
pop
dec
sarl
jbe
or
loopne
add
ja
rorl
cmp
aam
mov
mov
mov
and
ja
mov
nop
lods
into
push
adc
clc
push
or
xor
daa
out
lahf
jnp
add
jp
xchg
bound
in
mov
imull
cmpl
sbb
mov
test
mov
cltd
or
rol
xchg
shrl
in
stc
and
mov
jne
and
mov
bound
inc
mov
push
push
pop
adc
cwtl
adc
inc
and
daa
lods
add
filds
push
or
fdivrl
fildll
dec
push
fwait
clc
lahf
dec
inc
and
imul
dec
loopne
loopne
cmp
inc
ja
or
push
or
sbb
je
je
jb
add
insl
mov
outsl
out
aam
and
mov
lret
sub
sti
adc
mov
sub
sub
insb
cmp
dec
inc
orl
in
cwtl
leave
loope
push
and
or
dec
or
mov
test
es
jg
gs
outsl
add
out
and
xchg
adc
sub
mov
loopne
fwait
mov
daa
xchg
stos
pop
addr16
add
jmp
test
inc
dec
int
vsqrtpd
shlb
filds
insl
aas
lahf
pop
inc
adc
mov
mov
mov
cmpsl
fadds
js
aas
lds
pop
mov
or
sbb
mov
cmp
xorb
test
lahf
cmp
fstpt
jmp
jns
push
push
sub
lods
dec
adc
jnp
sbb
std
add
mov
or
push
ror
arpl
mov
sbb
mov
repz
dec
cmp
mov
adc
push
nop
cmpsb
sbb
in
outsb
inc
icebp
pop
stc
push
dec
mov
push
fisubl
push
into
test
push
adc
xchg
mov
enter
sahf
mov
inc
push
inc
fwait
lahf
outsb
jbe
mov
lahf
xchg
dec
mov
js
mov
sti
xchg
pop
xor
and
cmp
aaa
scas
sub
mov
cmpl
into
ljmp
jno
jmp
shl
mov
xchg
inc
outsb
ja
lcall
and
mov
adc
loopne
loope
pop
xor
push
xor
js
stos
pop
dec
bound
jae
orl
cmp
jno
push
mov
imul
cs
je
xchg
in
shlb
or
bound
adc
jnp
or
out
xor
lcall
pop
xor
fisubrl
sub
int
pop
cmpl
inc
data16
xor
out
jl
aas
sbb
les
and
add
pop
sbb
mov
pop
pop
cli
fsubrl
aaa
nopl
sti
daa
mov
enter
lods
stos
adc
arpl
sub
or
aas
xor
push
aaa
jg
add
inc
jo
addr16
or
or
dec
jmp
scas
stos
sub
test
jmp
xchg
mov
popf
leave
xchg
pop
and
add
popf
jne
cs
pop
lds
pop
mov
push
imulb
lcall
enter
ret
shl
dec
xor
push
pop
test
mov
shl
shrl
inc
int3
sub
pop
jp
push
ljmp
jne
xor
sbb
imul
xchg
sub
mov
dec
lret
fwait
mov
sahf
outsb
ret
inc
sbb
scas
jno
aas
mov
loope
insl
add
pop
push
repnz
mov
aaa
movsl
cmp
or
test
push
movsl
mov
subb
cmp
jne
rclb
mov
push
cmp
setle
lea
push
sbb
push
popl
sbb
mov
mov
dec
or
aaa
mov
or
imul
repz
xor
xchg
inc
insl
cwtl
pop
push
dec
sub
ffreep
inc
fs
push
mov
mov
insl
pop
popa
xchg
lahf
cli
pop
xor
dec
icebp
rorb
pushf
mov
pop
push
fwait
subl
loop
and
out
test
std
std
mov
fs
inc
jne
mov
movsl
cmp
add
testb
jecxz
clc
outsb
cmp
cmp
push
subl
sbb
movsb
sbb
adc
pusha
add
xlat
call
imul
movb
pop
in
jb
cltd
dec
add
and
push
xor
jge
add
pop
mov
and
inc
jmp
push
cmpsb
jg
and
pop
iret
aad
aad
jmp
repnz
or
push
adc
jbe
inc
push
jg
int3
pop
scas
movsl
shlb
xlat
add
cmp
xchg
outsl
add
shrb
mov
jb
or
jo
das
dec
test
push
mov
scas
ja
jo
pop
in
out
add
or
jo
jge
int3
gs
arpl
das
pop
or
rorl
pop
jmp
inc
enter
orl
pop
mov
imul
jnp
jo
inc
xchg
insl
dec
cwtl
xchg
dec
jl
outsl
stos
lock
scas
jne
into
enter
int
lods
cmp
cmp
push
lock
cs
sub
insb
mov
inc
movsb
in
xchg
jnp
nop
scas
xchg
jg
inc
out
notl
mov
xchg
add
sub
sub
lahf
aad
xchg
shrl
dec
jle
push
xchg
lds
clc
xchg
aaa
cwtl
in
stos
divl
icebp
scas
in
jp
mov
je
sti
push
loop
movsl
mov
xchg
xor
sbb
inc
mov
push
xor
imul
in
shrb
fs
je
jg
ljmp
add
push
movsb
add
iret
dec
out
xor
inc
dec
insb
mov
loopne
or
xchg
jmp
inc
test
push
sbb
xchg
xor
mov
mov
test
repz
cmp
cmpsb
scas
sti
fxch
arpl
jle
addr16
mov
push
or
ds
cwtl
cwtl
xor
inc
or
sti
outsb
adc
cmp
xchg
dec
push
dec
sub
mov
adc
flds
cmp
shrb
int3
cli
pusha
push
cmpsb
inc
jecxz
test
nop
inc
sarb
mov
inc
mov
repz
inc
int3
add
jle
lret
movsl
enter
xchg
andb
mov
les
test
sbb
cli
mov
in
mov
push
sbb
and
mov
push
and
and
je
in
pop
lds
inc
lods
cs
inc
xor
push
sbb
sti
lods
inc
xchg
mov
pop
outsb
push
loop
mov
addl
push
sbb
test
mov
je
xor
mov
inc
sub
imull
aaa
sbb
jmp
ljmp
push
in
enter
lds
ficompl
sub
mov
push
xor
xorb
cs
and
cmp
scas
jno
loop
inc
ja
xchg
push
pop
mov
xchg
add
mov
scas
lahf
mov
inc
xchg
lcall
add
xchg
stc
pop
ret
push
lock
inc
sub
arpl
xchg
adc
arpl
push
fcmovnb
xor
test
add
lods
fadds
mov
or
sbbb
xor
out
xchg
cld
push
arpl
cmpsb
test
and
icebp
lea
mov
fcom
ds
lea
cwtl
or
cmp
gs
pop
mov
pop
mov
xor
popa
pop
dec
out
sub
and
push
sub
jmp
sbb
push
sub
leave
rcrl
adc
jnp
fisubrl
int3
adc
mov
aad
call
or
popa
push
inc
cld
loope
sti
ret
ds
pop
push
fildl
add
and
std
repnz
mov
int3
add
ljmp
push
xor
sub
jp
xor
decb
mov
jecxz
and
push
mov
fldenv
mov
shlb
fildl
rol
divl
jo
sub
inc
roll
stc
and
sbb
sbb
aam
xchg
cmp
pop
and
xor
fwait
cmp
mov
out
adc
out
int3
push
int
out
push
jne
hlt
stos
lock
pusha
lret
fdivrs
ret
mov
jbe
and
iret
push
shlb
sbbb
enter
mov
xchg
and
js
nop
fwait
push
adc
loope
test
sbb
inc
aam
jge
xchg
xor
xchg
leave
or
ffree
xlat
jns
movsl
in
pop
dec
fsub
mov
cwtl
loope
pop
lods
movl
repnz
lahf
in
outsb
or
not
scas
iret
les
rolb
jmp
mov
adc
add
out
cmc
xorb
rorl
inc
bts
out
dec
rorb
cmp
xchg
pusha
push
ficomps
xor
loopne
pushf
xor
jg
push
stos
movsl
shrb
sbb
andl
inc
mov
stos
mov
sbb
cmp
and
loop
mov
dec
test
pop
cmpsl
loopne
lahf
dec
je
jno
out
xor
rclb
out
lcall
das
shlb
mov
icebp
leave
cs
aam
and
lds
test
fildl
pop
xchg
inc
mov
lahf
push
or
xchg
lcall
imul
xchg
in
jbe
cmpsb
pop
jb
fnstsw
test
out
push
enter
in
les
mov
test
outsb
fwait
js
enter
dec
in
fcoms
and
fistpll
inc
inc
ljmp
fsub
pop
lea
push
subb
mov
call
push
orl
mov
sub
xor
xor
stos
xor
test
xor
fistpll
jbe
fdiv
jo
xchg
mov
icebp
inc
scas
cld
push
cmp
mov
sub
push
pop
mov
dec
shl
leave
lret
cmp
arpl
aad
movsb
mov
mov
cmc
jmp
mov
add
loop
stos
or
dec
xchg
add
sbb
xchg
inc
pop
iret
sub
mov
cmpsb
in
popa
jno
cs
mov
inc
aam
into
mov
mov
fidivl
jo
aas
sbb
nop
int3
jmp
sub
mov
cwtl
popf
out
pop
into
call
add
and
cmpl
pop
and
cmp
pop
mov
jae
sbb
repnz
dec
movsl
movsl
or
cmp
int
fidivl
stos
in
andb
mov
xchg
stos
jnp
mov
pop
push
scas
daa
loope
cmp
mov
sub
jmp
shrb
ja
sbb
sbb
lret
cmp
dec
pop
fcom
fisubrl
xchg
fcoml
test
hlt
cs
insb
cs
ss
aas
mov
jns
rorb
xchg
or
xchg
ljmp
push
sahf
cld
ljmp
adc
jne
xchg
mov
mov
cmp
scas
inc
in
pop
inc
add
aaa
sbb
loope
lods
movsl
and
add
test
mov
fucomi
sbb
push
and
sti
inc
pop
pop
dec
pushf
sti
add
test
push
push
xchg
cltd
loope
nop
and
rorb
rcrl
pop
pop
aam
aad
rolb
fs
push
push
sahf
inc
mov
cmp
add
icebp
mov
sti
shll
or
enter
enter
adc
sub
dec
xchg
jmp
pusha
pop
cmp
dec
dec
lock
and
roll
adc
and
sbb
and
daa
xlat
lahf
cmp
sbb
and
stos
mov
sub
pop
aad
mov
dec
fists
cld
jle
fmull
sbb
das
adc
xor
outsl
sub
out
sbb
sub
ljmp
pop
sub
mov
mov
rcll
jae
pop
icebp
jg
sub
clc
sub
push
and
jp
cmp
les
xor
repz
fadds
cmpsl
outsl
cltd
scas
pop
adc
jge
outsb
push
add
push
out
push
mov
sub
xchg
pop
and
popa
pusha
push
xor
int
mov
sbb
jmp
push
mov
int3
pusha
mov
loop
pop
mov
repnz
ret
sub
loope
fdivrl
lds
test
test
sbb
or
xchg
xor
xchg
sbb
clc
xor
push
movsb
shrl
sub
and
push
dec
fwait
roll
js
test
jno
cmp
fwait
add
xchg
mov
cltd
hlt
repz
mov
lahf
jb
cli
fs
cmpsb
mov
stc
mov
dec
shll
test
call
out
out
xor
fnstcw
adc
dec
push
pop
mov
adc
daa
ret
add
test
jo
fisubl
fimull
xchg
mov
outsl
add
dec
cmp
or
popf
sbbb
xor
mov
shrb
or
inc
or
and
cmp
aas
roll
push
xlat
inc
mov
out
dec
out
int3
mov
push
ja
cmpsl
ja
iret
in
xchg
jl
jb
mov
fmull
add
cmc
pop
fstpt
imul
movsl
scas
xor
adc
pop
int
dec
and
xchg
fisttpl
xor
stos
jae
sbb
fldl
cmpsl
outsl
lods
jb
stos
jge
cmpl
repz
adc
scas
fcomps
ret
lock
movsl
and
sbb
push
sub
sub
arpl
push
ja
popf
ret
xchg
xchg
outsl
lods
or
loopne
push
ja
push
pop
mov
cld
or
cmp
icebp
dec
fs
mov
xchg
lret
add
sub
adcl
mov
dec
filds
mov
outsl
xor
mov
rolb
mov
jb
mov
test
xor
loop
inc
arpl
mov
fincstp
aad
xor
andl
loopne
shll
pop
ds
jg
or
or
cmp
inc
push
inc
cmp
cmp
dec
sub
mov
mov
mov
push
fisubrl
sub
pushf
les
lcall
sbb
pop
insl
es
or
cli
xor
adc
js
inc
add
out
pop
fsubrl
push
fld
cltd
fistl
cwtl
test
push
lds
fiadds
adc
pop
mov
cld
mov
sbb
mov
sbb
lcall
dec
pusha
push
fcoms
pushf
adc
fcmovu
mov
inc
inc
adc
lret
in
dec
outsl
pop
shll
popf
outsl
in
sub
lret
xor
iret
add
imull
adc
inc
xor
repz
loopne
sbb
test
pop
jmp
inc
and
pop
aaa
fcomip
ret
push
es
add
jno,pt
push
subl
pop
leave
pusha
dec
mov
das
inc
and
cwtl
shll
push
jl
inc
xchg
add
xchg
or
push
sbb
sahf
stos
mov
test
fisttps
in
cmc
fstpl
not
push
mov
outsb
xchg
lahf
sbb
loopne
push
mov
cli
jae
sbb
push
loopne
mov
inc
sub
dec
jmp
movsb
xor
int3
cmpsb
aaa
cld
les
andl
pusha
inc
scas
sbb
xchg
cs
xor
mov
mov
sub
aam
dec
pop
lcall
dec
mov
mov
std
sahf
mov
repz
test
mov
repnz
idivb
int
int
rcrb
sub
pop
cmc
in
dec
test
into
jecxz
inc
lds
dec
xchg
cli
mov
jle
jo
xor
insl
in
cld
nopl
ror
cmp
clc
adc
mov
orb
inc
sahf
out
aaa
leave
out
push
stos
sbb
jle
mov
mov
les
jb
data16
cmp
pusha
cmp
lds
mov
fildll
inc
jecxz
lods
sub
push
subb
aad
call
push
inc
mov
mov
dec
pop
es
mov
adc
mov
mov
add
mov
lods
sti
mov
scas
adc
rcrb
mov
es
shrl
sub
xchg
jle
fs
loope
pop
cmp
push
push
in
adc
fcoms
arpl
cmc
stc
aad
dec
xor
ds
or
lret
int
out
jmp
cmpsb
cmp
out
pushf
mov
leave
mov
loop
push
sahf
sarl
jae
jnp
sbb
mov
push
and
mov
dec
fistpl
int3
cmp
push
in
ret
decl
loopne
cmp
movsl
mov
add
add
add
add
test
fnstenv
inc
jo
pop
dec
inc
gs
add
or
inc
testb
mov
mov
bound
in
popa
out
push
test
fists
xlat
mov
call
mov
push
add
ljmp
sahf
add
repz
sub
mov
test
inc
pop
mov
clc
sbb
cmpsl
jae
push
or
add
stos
and
nop
stc
jge
or
jo
or
push
pop
pop
push
adc
push
jo
sbb
jo
scas
mov
lahf
scas
lret
sahf
lret
lret
sbb
test
out
lret
jns
loopne
and
mov
sub
xchg
ret
rcrl
stos
inc
fmuls
push
insl
enter
adcl
push
call
jmp
bound
icebp
repnz
fiadds
and
jmp
sbb
ffreep
add
adc
out
add
pop
cltd
xchg
mov
imul
sbb
shll
push
pop
mov
inc
sbb
jns
jge
or
data16
test
add
inc
insl
adc
sub
jo
cwtl
int
adc
mov
dec
push
mov
insb
stos
sbb
scas
inc
cmp
pop
ja
adc
outsl
nop
jne
das
push
imul
jge
imul
sub
dec
xor
pushf
xchg
or
mov
push
lcall
sub
test
inc
inc
xlat
data16
sti
pushf
xorb
push
scas
movsb
fs
inc
cmc
rep
out
out
adc
pop
imul
into
loope
pushf
lret
icebp
lret
into
add
xchg
mov
mov
loopne
add
push
dec
push
in
pop
cli
push
in
mov
icebp
xchg
dec
jns
and
andl
adc
daa
enter
pop
stos
cmp
xchg
mov
insb
mov
rcll
popl
xor
jle
fs
scas
insl
popa
imul
fstps
or
fimuls
into
jb
mov
add
loop
push
nop
xchg
rolb
insl
push
push
mov
push
aad
mov
dec
xchg
adc
jg
mov
stos
pop
mov
and
outsl
rcll
mov
imul
jns
leave
mov
or
addr16
test
or
xor
sub
dec
loop
mov
cltd
push
pop
xor
jae
fidivl
cwtl
sbb
mov
xchg
dec
ljmp
mov
lcall
scas
mov
jl
iret
sub
cmp
sub
inc
sbb
cmp
stos
std
js
mov
dec
cmpsb
xchg
jp
jg
ss
lock
lahf
mov
xlat
jne
nop
hlt
adc
ja
nop
test
sbbb
stos
xor
push
pop
ljmp
call
mov
mov
adc
add
test
push
daa
mov
inc
and
in
std
xchg
pop
adc
pushaw
adc
cmc
xchg
idiv
xlat
lahf
xchg
testb
orb
int3
icebp
xor
rcll
js
xchg
sub
sub
int3
gs
jp
push
sbb
cmp
mov
mov
dec
arpl
pusha
and
movsl
das
lcall
test
cmpsb
in
stos
ljmp
mov
fldcw
mov
pop
ja
mov
jmp
orb
add
ret
gs
adc
fcmovbe
test
pop
mov
popa
or
adc
icebp
or
sub
mov
fdivl
aad
pop
movsl
pushf
jle
xchg
pop
adc
xor
xchg
lcall
push
ljmp
push
clc
pop
mov
cmp
push
xor
push
push
pop
cmp
xchg
ss
popa
mov
das
fnsave
cs
ljmp
enter
das
inc
push
outsl
cmp
cmp
dec
shr
xchg
subl
pusha
cwtl
mov
dec
dec
das
and
aam
dec
pop
int3
lret
xchg
or
fiadds
or
fsub
inc
add
je
mov
je
sub
add
pop
mov
xor
data16
mov
call
mov
mov
data16
and
nop
jle
xchg
ret
pop
xor
lea
mov
fmulp
inc
cld
ljmp
jle
xor
adc
cld
jecxz
push
mov
push
push
call
and
js
mov
std
scas
call
sub
and
fcomps
adc
jo
scas
test
arpl
ljmp
fcomi
scas
daa
jno
mov
sbb
dec
gs
out
dec
pop
jno
mov
cld
sub
mov
js
jo
push
inc
call
ficoml
and
insb
les
jg
fs
je
inc
jl
jbe
pusha
jo
mov
sub
xor
and
inc
icebp
nop
imul
jge
push
movsb
xorl
xchg
lret
xchg
jbe
xor
bnd
mov
loopne
in
fsubl
into
cmp
push
cltd
lahf
in
aas
jge
mov
pop
idivb
xchg
inc
mov
push
mov
out
aad
or
in
xchg
insb
jg
cli
les
jo
sbb
xor
lods
lahf
jp
pushf
or
push
sarl
test
ror
mov
lret
xlat
shl
negl
int
aam
js
add
stos
xor
jne
mov
outsl
and
xchg
rorl
lods
aas
mov
jno
out
dec
pop
ss
cmpsl
xlat
loopne
pop
shrb
gs
jge
lods
int3
divl
nop
clc
cmpsb
pop
lret
jecxz
loop
adc
or
inc
bnd
in
popa
rol
pop
pop
push
dec
in
mov
lcall
xchg
jmp
addr16
testb
push
addr16
add
lods
adc
gs
adc
jnp
test
inc
leave
sbb
mov
lds
imul
mov
add
test
mov
mov
es
xchg
cmpsb
pop
add
call
in
cli
mov
mov
inc
std
push
cwtl
int
mov
mov
or
push
jb
cmp
repz
mov
inc
ud2
scas
mov
xor
dec
outsb
jge,pn
add
rcl
fdiv
imul
popf
mov
movsl
and
pop
das
dec
int
lds
add
into
dec
pop
sbb
out
out
popa
mov
std
dec
or
add
fdivrl
aas
in
add
mov
repz
mov
fsubp
lods
adc
mov
xchg
daa
xor
or
cld
push
pop
xchg
pop
stos
mov
aaa
inc
adc
loop
push
dec
hlt
ror
mov
adc
cmp
pop
das
xchg
cmpsl
jne
enter
pop
mov
mov
repz
cli
movsl
loopne
sbb
and
inc
push
cmp
sub
jge
inc
mov
push
inc
inc
enter
iret
add
ss
sbb
mov
and
dec
clc
adc
pop
pop
xchg
call
mov
push
cli
inc
sbb
add
jge
pop
add
lock
mov
int3
cli
xor
pop
jge,pt
scas
jp
sbb
and
xchg
push
lret
push
ljmp
ss
fs
push
addr16
fiadds
imul
dec
pop
add
rcrl
fisubrs
cltd
fwait
cs
mov
das
cmp
push
jns
or
aas
loop,pn
cmp
push
icebp
addr16
pop
sarl
jp
or
movsb
test
mov
xor
addr16
jmp
inc
nop
sub
push
sub
mov
call
scas
push
loop
jp
clc
cmp
pop
ljmp
or
fiadds
xchg
push
cmpsb
fstpl
sub
mov
mov
cmpsb
pcmpeqw
add
jo
rolb
ficoml
adc
cli
jg
cmp
movsb
mov
mov
xor
and
sarl
mov
nop
mov
or
lock
jbe
aad
push
sti
adc
mov
sbb
adc
pop
dec
sub
fisttpll
push
cwtl
push
adc
scas
mov
test
add
sahf
mov
jae
sbb
hlt
mov
mov
jns
pop
mov
aad
hlt
in
sbb
dec
fnstsw
out
sub
fisttps
and
sub
xchg
aam
lcall
cmp
jecxz
les
lret
and
push
mov
mov
out
popf
mov
mov
lods
or
push
xchg
jne
jae
imul
test
dec
ljmp
jns
mov
push
and
cmpsb
addl
inc
sahf
sbb
stc
xchg
test
dec
adc
enter
in
ljmp
sub
daa
mov
fnstenv
imul
xor
sbb
dec
adc
dec
lret
sbb
push
cmp
fadds
xchg
out
cwtl
mov
jo
aam
adc
lock
xchg
mov
js
test
rcrb
push
aaa
lea
inc
mov
test
pop
fmuls
sbb
loope
lds
stos
mov
cwtl
adc
mov
dec
push
lret
inc
lods
fwait
mov
jle
xor
add
movsb
sbb
adc
leave
popf
adc
lret
sub
in
loop
mov
shlb
push
pop
xchg
xor
and
rcrb
dec
insl
add
xchg
fmull
out
ss
add
xor
leave
pop
fadds
pop
push
sub
xchg
shll
int
daa
leave
push
jno
xorl
push
jp
or
pop
push
pop
test
jge
ljmp
jne
dec
mov
add
pop
fadds
cmp
lds
lahf
in
dec
push
pushf
xor
and
lret
jo
jno
push
jge
mov
add
inc
jno
jp
int
mov
sbb
dec
mov
inc
movsb
cmpsl
incb
lret
cmp
or
pop
pop
mov
xchg
jb
shrl
mov
adc
jb
jae
shrb
adc
repnz
int
mov
mov
jb
or
push
dec
les
or
lcall
in
xchg
pusha
pop
std
push
sbb
add
push
leave
adc
sbb
scas
arpl
xchg
lret
mov
cmpsb
daa
adc
dec
mov
imul
inc
xchg
inc
out
js
sbb
sahf
popa
ret
test
pusha
gs
push
outsb
push
les
test
mov
xchg
dec
dec
or
cs
and
jb
fldcw
sbb
mov
jns
pop
jg
loope
add
fs
or
push
xor
into
cmpsb
inc
popf
std
dec
movsl
or
pop
icebp
add
dec
inc
leave
mov
mov
ret
mov
jg
movb
dec
sub
cmp
addl
icebp
repz
cmp
lret
mov
sub
fcompl
fidivl
xor
add
xchg
mov
mov
jp
cmp
fsubl
shl
lret
dec
cwtl
push
mov
pop
repnz
sub
inc
sbb
xorl
sub
adcb
out
lods
cmp
fwait
push
sbb
insb
lods
mov
mov
push
cmpsl
or
jmp
cmp
cmp
not
into
mov
ljmp
mov
fnstsw
mov
gs
mov
adc
imul
popf
xorb
add
popf
std
fdivrs
popf
scas
mov
call
push
sub
mov
xchg
lret
test
cmp
mov
dec
ja
gs
add
int3
add
sub
int
fdivs
stos
mov
adc
xchg
and
fwait
mov
adc
jo
jecxz
stos
mov
outsl
sbb
push
in
sub
outsb
ret
cld
loope
in
outsb
xchg
ljmp
lods
cmp
out
pop
clc
mov
or
sti
xor
ds
pop
nop
add
cmpsb
int3
movsb
pop
pop
mov
push
adc
jmp
loopne
das
sub
rolb
mov
xchg
jne
loope
pop
and
xor
jecxz
imul
lret
mov
sbbl
lea
in
in
shll
xchg
enter
sar
mov
jae
jg
test
std
jle
pop
cmp
cmpsb
es
lret
mov
loope
lahf
and
or
jb
in
inc
push
dec
and
add
xchg
pop
inc
lahf
gs
pop
aas
pop
loopne
aad
push
cli
shll
loop
xchg
lods
mov
cmpps
loopne
adc
dec
jle
shr
js
lds
loopne
hlt
jmp
cwtl
repnz
push
stos
mov
pop
and
xchg
pop
and
pop
jmp
dec
mov
pop
xlat
push
mov
or
fnstenv
jg
cmp
add
push
mov
cmp
push
xor
xor
pusha
test
sbb
add
jae
cmpsb
jecxz
mov
jl
cld
sbb
sbb
into
push
xchg
cmp
jg
lock
and
push
cmp
jbe
cmpsl
mov
or
je
mov
arpl
ss
insl
iret
xlat
ror
out
rcl
std
repnz
or
test
hlt
pushf
xchg
jle
je
or
push
adc
mov
cltd
mov
push
sub
add
jmp
outsb
loopne
mov
pushl
cltd
inc
out
add
test
loop
dec
lods
mov
adc
dec
in
cmpl
mov
push
das
pop
mov
pusha
cmp
movsb
sub
xchg
scas
stos
cld
mov
dec
int3
mov
pop
adc
and
or
in
negb
ret
xchg
push
in
fisubs
test
sub
inc
imul
stos
jns
jmp
in
and
ret
dec
imul
jg
dec
loop
out
and
bound
and
dec
sarb
cld
fst
insb
sub
cwtl
mov
add
pop
jne
push
ja
test
jmp
jo
mov
pop
mov
mov
gs
iret
cld
inc
and
xchg
or
xor
mov
mov
sub
pop
adc
imul
push
das
jns
ds
jge
ja
dec
mov
jae
mov
sub
or
dec
dec
sub
fsubs
jae
cmpsl
scas
xor
sub
out
xchg
arpl
inc
push
into
lcall
inc
inc
or
int
sbb
jne
mov
dec
iret
inc
aam
sbb
idivb
lods
inc
jp
and
insl
inc
sbb
ljmp
out
adc
or
xlat
sbb
mov
ret
jmp
cmp
add
cmpsb
mov
in
mov
in
repz
sub
inc
push
into
stos
pop
loop
rcrb
push
imul
inc
adc
add
lds
ret
das
inc
dec
jne
push
sahf
xchg
js
aaa
jbe
scas
test
adc
test
sbb
inc
sahf
popa
sbb
xchg
les
mov
dec
mulb
mov
or
mov
cmp
cs
mov
data16
xlat
inc
mov
int3
call
push
push
dec
aam
mov
out
sub
add
dec
in
ret
sub
repnz
fs
ljmp
test
test
pusha
jg
test
test
xchg
jge
sub
xor
sti
fistpl
inc
or
inc
loope
add
in
cmp
in
ficoms
jmp
sub
jge
les
jns
xlat
test
push
inc
ficompl
jecxz
notb
fwait
sbb
xchg
xchg
jecxz
jl
in
out
pop
cmp
lods
dec
test
ficomps
mov
in
pop
cmp
add
les
jmp
pop
inc
mov
jp
xchg
lahf
jne
mov
in
icebp
cld
lea
or
xchg
stos
xchg
pop
inc
mov
pop
inc
les
aam
adc
lea
jne
loopne
pop
stos
jo
cltd
sub
cmp
shrl
fs
or
negl
cmp
into
mov
sub
lahf
cmp
jl
mov
dec
xchg
icebp
xchg
cmp
lods
dec
cmpsb
arpl
lcall
lods
push
aad
xor
adc
repnz
repz
sbb
cmp
imul
pop
cwtl
push
js
jnp
test
not
imul
scas
mov
test
test
xchg
and
aas
inc
data16
pop
xchg
mov
sbb
push
cltd
xchg
inc
push
sbb
popf
xor
and
psubd
mov
push
adc
insl
pop
adc
fwait
adc
cmp
leave
pop
sahf
add
xor
repz
outsl
cpuid
lret
sar
pushf
mov
inc
ss
dec
bound
or
mov
fldenv
push
idiv
or
mov
push
inc
pop
lret
data16
add
sbb
mov
sahf
pusha
xchg
mov
stos
pop
pop
addl
add
jne
rcrl
and
dec
dec
inc
sbb
jmp
mov
int
dec
xchg
pop
mov
push
aad
ret
pop
outsl
sub
rorl
mov
mov
fcoms
push
cmc
sbb
push
rorl
add
clc
loop
imul
dec
push
mov
xchg
mov
ljmp
push
aaa
push
xchg
decb
xchg
ljmp
push
push
add
push
popf
repz
fidivrs
aaa
scas
scas
cmc
xor
aas
insl
insl
test
sub
inc
or
sti
pop
fbld
hlt
js
jecxz
xor
call
push
jb
aaa
lods
adc
pop
fdivrl
ljmp
jmp
inc
repz
in
pop
movsl
sbb
cmp
imulb
cltd
lret
js
std
pop
add
repnz
int3
subb
push
popa
sar
jle
popa
stos
pop
xchg
aas
push
xchg
sbb
hlt
fmull
cmpsb
mov
loope
test
stos
sub
test
sbb
call
xchg
arpl
cmc
dec
ja
dec
inc
data16
xchg
and
ficompl
sub
dec
sub
lret
inc
add
ret
add
xor
cmpsl
jecxz
aas
hlt
push
lahf
sub
sub
out
jno
inc
xor
sub
imul
lahf
xchg
sub
dec
popf
ds
test
lahf
dec
mov
rclb
mov
test
aas
mov
pop
fbld
inc
dec
push
push
xor
arpl
js
cmp
mov
mov
in
jne
inc
sbb
mov
cvtdq2ps
cwtl
in
icebp
pop
popf
sbb
push
cmp
fsub
pop
sub
data16
loope
movsb
jl
pop
in
dec
inc
push
cli
xor
addr16
fcmovnu
adc
push
repz
ds
sar
mov
dec
lahf
clc
lret
pop
sti
hlt
jmp
push
ja
xchg
fsubrl
mov
and
jl
lcall
cmc
in
inc
pop
adc
mov
lcall
jo
call
hlt
push
adcb
arpl
repnz
jo
pusha
into
repnz
roll
ja
pop
out
fmuls
fildll
mov
cmp
lahf
clc
lahf
sahf
sbb
cmp
clc
xor
das
cltd
sbb
sarl
xor
push
jp
dec
xchg
inc
dec
sub
xchg
mov
dec
arpl
inc
das
or
inc
test
out
mov
nop
imul
arpl
out
cwtl
inc
jecxz
xor
es
stc
adc
mov
rorb
lret
and
popf
movsl
or
cltd
call
bnd
cmp
push
faddl
fsubrl
inc
dec
fmuls
fisttpll
and
ljmp
cmp
sarl
fmull
dec
ljmp
lret
fsubr
stc
xchg
sub
add
leave
pextrw
imulb
popa
push
orl
xchg
xor
clc
sbb
in
lfs
inc
mov
fdivl
pusha
sarl
stos
sahf
push
ds
mov
pop
addr16
or
mov
mov
mov
in
in
into
cld
lret
push
pop
cmp
jge
add
inc
das
add
jecxz
pop
lcall
jp
inc
pop
fnstsw
sahf
mov
in
stos
mov
adc
lods
iret
and
popa
fs
xor
enter
add
lea
dec
xchg
mov
push
cltd
push
cmpsl
mov
adc
dec
orl
lahf
aad
iret
pop
negb
pop
sbb
movsl
or
adc
push
jecxz
xchg
mov
or
shl
out
sbb
pusha
mov
dec
and
loopne
mov
scas
addr16
testw
jo
xor
out
out
mov
mov
sbb
inc
filds
loop
scas
jno
adc
lods
call
push
or
stos
sbb
or
insl
push
inc
mov
xchg
in
sbb
dec
test
dec
inc
push
jo
and
add
inc
imul
aad
fbld
mov
arpl
cmp
scas
es
fnstenv
push
jne
jne
lcall
jle
push
fimull
xor
ficoml
and
out
jg
daa
test
das
and
pop
adc
push
cmp
subl
mov
and
repnz
jecxz
sbb
push
lahf
cmp
push
sub
std
sarl
sub
mov
xchg
addr16
aad
cs
lret
xchg
xor
xor
cmp
xor
dec
inc
aas
in
jae
adc
mov
dec
sub
mov
cmp
fbld
xor
int3
pop
mov
mov
lods
sbb
sub
and
shll
pop
mov
int3
iret
pop
pop
out
mov
add
jb
sarl
leave
out
je
sbb
or
jb
mov
inc
mov
add
gs
mov
mov
push
pop
mov
pop
adc
out
push
pop
adc
push
loope
inc
es
cmpb
mov
dec
fsubl
adc
fsubrp
sahf
jae
cmpsl
outsb
cmp
jns
cmpsl
lret
xor
leave
or
mov
aam
shll
movsb
and
iret
lds
das
pushf
cmpsb
push
xor
aaa
mov
jge
xorb
or
jo
xor
mov
mov
sub
sbb
rorb
dec
add
into
popa
std
out
dec
inc
jae
ret
sub
inc
mov
ja
or
pop
sbb
in
inc
es
and
mov
dec
repnz
ss
inc
jno
ljmp
loopne
adc
mov
add
das
shl
sbb
sub
icebp
adc
repz
add
mov
stos
push
fsts
and
xchg
ds
mov
es
repz
out
mov
imul
inc
movsb
pop
fcompl
push
fwait
aad
insl
xchg
jnp
cltd
mov
sbb
jl
rorl
push
lcall
fcmovu
mov
out
movsb
push
or
mov
xor
xor
pusha
add
rdmsr
icebp
gs
std
bound
xor
scas
mov
mov
xorb
sbb
cmp
fidivs
dec
sub
sahf
push
cmpsl
sub
mov
js
test
ja
ret
sub
leave
mov
adc
stos
rorl
pop
aam
test
stos
pushl
loop
outsb
cmpb
mov
negl
mov
in
shll
cmp
in
mov
mov
adc
jno
sub
in
dec
dec
push
jne
lahf
xorl
aam
daa
push
xchg
lds
cltd
fistl
arpl
add
xor
and
add
dec
fmuls
icebp
push
jo
in
mov
or
sub
xchg
add
push
scas
call
mov
xor
data16
pop
dec
xchg
call
pop
pop
arpl
push
fisubrs
jmp
outsb
ret
test
dec
mov
iret
adc
leave
jbe
jg
negl
icebp
sarb
fbstp
mov
jecxz
in
and
dec
sbb
or
and
mov
ja
rcr
cmp
hlt
fwait
jno
adc
push
rcrl
mov
sub
pop
sarb
lret
ret
mov
pop
inc
xor
in
ret
orb
inc
xchg
cmp
add
mov
fnstcw
loop
std
call
xchg
pop
pop
pop
bound
leave
adc
rcll
outsb
pushf
popa
test
lea
mov
or
jecxz
add
jb
push
lret
cmc
fisubrs
xor
ret
mov
les
mov
pop
xor
sub
aam
or
in
outsl
fisttpll
lret
sub
or
push
ds
adc
sub
aad
cmp
sarl
jge
xchg
xchg
cmp
push
dec
pop
mov
pop
pop
sub
popa
in
sbb
cmp
pop
js
ret
and
and
fistpll
in
scas
outsb
pop
popf
xor
in
and
cmp
enter
in
jmp
adc
in
pop
sub
ja
xlat
cmp
push
imul
les
cld
dec
pop
push
dec
enter
inc
outsb
stc
pop
sbb
xchg
mov
enter
aaa
shr
jmp
pushf
mov
pop
rclb
sub
cmpsb
jb
daa
push
aas
xlat
popa
cli
push
imull
notb
mov
inc
xchg
push
pusha
es
pop
dec
fs
inc
int3
cltd
cmp
lock
and
in
fimuls
fildll
cli
jle
into
and
dec
and
push
mov
fdivl
aas
aad
jge
adc
out
adc
mov
add
fstpl
out
lret
addr16
jle
mov
in
insb
adcb
mov
ret
xor
sbb
out
ss
mov
jae
sub
adc
pop
jle
jge
test
push
dec
jns
pop
and
fsubrs
cmp
lods
subl
mov
in
jae
sbb
pop
or
and
hlt
mull
pushf
and
mov
notb
sahf
cltd
xchg
xlat
xchg
pusha
imul
js
in
scas
daa
insl
sbb
cmc
mov
popf
dec
into
out
incb
jae
divl
cmpsb
sub
es
push
repnz
insl
jge
cld
shrl
mov
sub
lret
rdpmc
adc
xorb
push
fistpl
mov
scas
add
dec
adc
push
leave
jge
lret
xchg
int
rcrl
sbb
out
aam
mov
or
dec
pop
insl
or
inc
adc
mov
sbb
cmpsl
mov
bound
in
mov
mov
arpl
xor
sub
movsb
rcl
xchg
xor
sbb
stos
scas
jecxz
xchg
stc
movsl
in
arpl
in
jno
jne
cs
mov
rcr
inc
add
xchg
xor
icebp
pop
mov
stos
aas
jp
stos
mov
and
xor
pusha
and
xchg
sbb
push
pop
xor
test
into
cmc
pop
xchg
lea
adc
call
pop
sarl
pop
add
xlat
xor
fmulp
test
xchg
insl
or
dec
lret
aaa
mov
repnz
fcoms
icebp
out
xchg
adc
sahf
xchg
in
ja
call
cmp
daa
jg
and
into
loop
or
mov
test
rcrl
rorb
inc
ret
lret
jp
push
xor
dec
mov
sbb
sbb
insl
inc
push
rcr
mov
in
mov
sub
pop
outsl
or
ja
cli
loope
loop
aas
jb
xchg
std
ja
cmp
push
rcll
jecxz
je
mov
pop
sub
or
test
adc
outsl
loop
or
cli
or
adcl
sbb
jnp
dec
fs
mov
mov
je
pop
and
dec
ljmp
arpl
jle
lcall
sbb
out
scas
xor
push
mov
xchg
jo
cltd
cli
addb
pop
fmuls
insb
in
lea
into
fidivrs
xchg
push
cmp
push
push
add
jae
cli
mov
in
pushfw
cwtl
push
aam
push
popa
mov
rcr
mov
jg
mov
ret
or
and
rorb
fimuls
mov
jbe
lea
dec
mov
leave
imul
mov
xchg
pop
mov
dec
xor
or
sbb
cmpsb
sub
pop
lds
out
addl
in
mov
jge
imul
out
inc
andb
rcrl
sbb
outsb
cs
lcall
mov
fnsave
add
add
xchg
ficoml
adc
add
jecxz
mov
sbb
mov
xor
out
mov
sahf
dec
xlat
rolb
outsl
mov
push
push
dec
aad
jb
ret
adc
lahf
movzwl
mov
test
lds
addr16
out
std
xlat
test
pop
negb
xor
cli
cltd
negb
rorl
fildll
popa
out
lods
icebp
mov
lret
sahf
es
aas
and
xor
aad
xchg
shl
jecxz
mov
stc
jb
sub
or
add
lock
or
lds
pop
pop
mov
imul
sub
cwtl
xlat
int
sub
out
xchg
push
movsb
pop
and
lock
pop
push
push
repnz
mov
leave
ljmp
inc
fldenv
cmc
ja
add
daa
mov
aaa
mov
and
pop
add
clc
mov
xor
adc
orl
popa
rcll
jmp
inc
cmpsl
call
pushf
iret
push
mov
sbb
clc
or
adc
add
jb
add
cwtl
rolb
jmp
stos
pop
aad
push
mov
cmp
jmp
ljmp
xchg
repz
jl
dec
lods
sti
scas
mov
dec
mov
je
aaa
push
int3
dec
dec
aas
xor
sub
push
cli
mov
test
push
inc
fimull
enter
pop
cltd
xlat
pushf
adc
jp
xchg
add
push
xchg
push
jo
gs
cmp
fistpl
mov
push
addl
or
add
aam
cmp
dec
adc
add
fidivs
and
or
hlt
mov
bound
in
ss
cltd
pop
jge
jg
xchg
xchg
push
in
sbb
fcoms
jge
repz
pop
sub
aad
xorb
push
ret
les
fdivrp
loopne
fstpt
pop
sub
jge
cltd
xor
pop
xchg
negl
xlat
or
xchg
adc
xchg
inc
pop
push
in
stos
out
sbb
mov
movsb
xor
sub
push
add
cmp
jo
adc
mov
int3
inc
iret
mov
popa
rclb
imul
bnd
push
cmpsb
add
iret
or
fnstcw
adc
mov
imulb
pop
stos
outsl
cld
sahf
lock
int
imul
jp
dec
push
mov
mov
inc
xor
std
add
mov
ret
xchg
jnp
sub
push
shr
std
fs
mov
hlt
aas
lret
push
cltd
insl
es
inc
roll
xlat
imul
push
ret
push
and
or
outsb
xor
cmp
cmp
testl
insb
outsb
mov
jno
dec
xchg
mov
dec
test
mov
dec
sub
rol
inc
inc
pop
negl
iret
push
rclb
inc
adc
out
and
jl
mov
lods
pop
dec
fwait
and
jp
je
inc
aad
pop
add
scas
outsl
js
jnp
rcr
adc
xchg
arpl
sub
inc
jnp
inc
push
aad
push
sahf
negl
push
leave
sbb
sub
test
inc
cmpsb
mov
pandn
pop
pop
mov
jg
pop
and
roll
xor
jp
pop
pop
add
adc
mov
imul
adc
fsubr
cs
mov
cli
test
xor
imul
mov
shrl
imull
pop
shll
rcl
in
or
ja
daa
shl
jmp
or
pop
or
cwtl
xchg
cmp
sub
lods
mov
xor
outsb
fadd
or
push
das
fcompl
push
cli
int
cmp
out
mov
repnz
cmp
loope
js
scas
jl
stos
mov
sbb
sub
cmp
stc
pop
pop
fnstcw
mov
int
ljmp
imul
lods
subl
mov
or
dec
out
out
fsubl
inc
sub
movsl
push
imul
ret
mov
cmc
or
mov
xchg
repz
inc
mov
push
ret
push
push
adc
jns
push
mov
pop
repnz
push
push
push
pop
jecxz
xchg
arpl
mov
xchg
outsb
jmp
mov
aas
arpl
add
rcl
je
dec
mov
pushf
ljmp
scas
mov
lock
pop
push
nop
push
mov
dec
imul
and
pop
lret
jb
add
int
pop
dec
fstpl
faddl
mov
out
jnp
adc
pushf
incb
shlb
dec
jo
ficoms
outsb
pop
std
lock
mov
lahf
repz
push
fisttpl
pop
dec
insb
mov
jns
mov
xchg
jmp
ds
les
pop
push
adc
int3
leave
xor
jp
ret
ljmp
adc
mov
mov
into
jmp
rcrl
xor
xchg
frstor
lods
add
test
sub
out
jp
bound
fiadds
fildll
push
mov
lock
andl
xor
popa
mov
filds
stc
jae
fstpt
call
ljmp
mov
jne
jnp
repnz
pop
cmp
sbb
mov
fdivs
jnp
push
test
mov
hlt
lds
xor
xchg
scas
dec
mov
xchg
outsb
pop
xchg
imul
add
jecxz
test
shlb
xor
mov
cmp
lea
pop
std
shrb
cmpb
bound
mov
sub
popf
pop
int3
jo
mov
add
xor
nop
mov
loopne
pop
xchg
jne
push
mov
dec
idivl
xor
dec
pop
mov
cmp
lahf
or
mov
aaa
push
or
cmpsb
mov
xor
cmc
fucomip
dec
mov
scas
jns
fldt
xchg
pop
fildll
stos
push
jle
repz
and
mov
cmp
jge
cmpsl
inc
lahf
fcompl
or
or
cmc
rcrl
or
in
xchg
iret
sbb
inc
or
fnstenv
out
push
data16
out
sub
dec
or
jg
mov
sbb
sbb
push
adc
mov
pusha
add
pushf
cmpl
mov
into
in
push
xchg
mov
adc
add
mov
inc
out
fisubrs
push
ljmp
inc
mov
outsl
cli
mov
inc
mov
divb
pop
mov
cltd
adc
adc
dec
jmp
pop
dec
inc
in
shrl
xchg
mov
dec
pop
outsl
popa
ret
jg
mov
xchg
xor
fwait
xor
sbb
test
sub
je
lret
mov
ret
aas
call
gs
loopne
imul
adc
addr16
arpl
outsb
gs
adc
add
mul
cs
divb
mov
pushf
xchg
stos
cmp
adc
xchg
test
subb
sbb
adc
add
fwait
jp
push
add
out
int3
sub
out
xor
stos
push
xchg
mov
pop
mov
cli
adc
adc
xchg
int
mov
and
lock
xchg
adc
ja
lods
movsl
jg
or
out
inc
pop
int
jl
cmp
out
add
call
sub
mov
and
rolb
cmpsb
adc
int
push
inc
sahf
push
jo
sbb
test
mov
stc
sbb
adc
or
es
or
call
lcall
sub
pop
aam
std
mov
lods
aas
fsubrs
jno
ljmp
arpl
mov
and
leave
repz
mov
cmpsl
xchg
ja
rorl
jecxz
pop
rolb
insl
sub
icebp
push
das
mov
pop
adc
dec
or
movsb
fistps
push
out
or
mov
fcmovnu
mov
adc
adc
pop
cmpsb
pusha
test
orb
jle
test
call
jle
cs
push
mov
out
nop
add
mov
in
jp
mull
and
ret
mov
cmp
push
addb
pop
pusha
insb
cltd
lods
sub
mov
gs
inc
out
in
inc
jns
popf
orl
pop
mov
and
sbb
lds
inc
add
mov
push
adc
cltd
daa
outsl
inc
jmp
bound
jne
jae
mov
xchg
idivb
or
nop
jbe
mov
into
mov
fimull
mov
inc
xchg
rorb
mov
push
scas
xor
fwait
out
ds
sub
das
mov
jl
adc
or
fisubrs
adcb
fdivrl
add
jbe
mov
shrb
push
stos
lahf
push
sti
pop
lahf
js
cmp
xor
aaa
mov
jns
pop
xor
adc
lea
fcomps
push
xor
aas
xchg
adc
mov
bound
pushf
scas
mov
nop
push
insb
adc
ljmp
lods
xlat
inc
mov
mov
pop
lret
ror
cli
pop
movsb
or
stos
inc
loopne
cs
imul
dec
push
loop
push
shll
push
cltd
jge
addr16
push
outsb
test
cmpsl
jns
or
xchg
lahf
sub
rcrb
popa
jnp
and
insl
mov
mov
lahf
je
pop
jae
movb
orb
mov
mov
mov
sub
outsl
pop
or
xchg
sahf
inc
dec
fisttpl
arpl
add
or
fst
popa
pop
push
jmp
sub
in
cs
jecxz
pop
rclb
test
test
mov
mov
mov
cmpsl
std
xchg
cmp
inc
or
cmpb
aas
movsl
sar
lods
or
mov
mov
adc
xchg
clc
inc
loope
stos
lds
inc
cld
push
mov
stos
push
ss
or
or
and
arpl
mov
xchg
into
adc
pusha
repnz
dec
adc
sbb
sbb
cmp
in
push
fwait
gs
add
cmp
jnp
fmull
inc
hlt
and
cmp
rcrb
pop
dec
jno
movsl
pop
dec
leave
inc
sub
decb
ss
sbbl
jge
in
pop
ret
xor
test
xchg
imul
mov
cltd
push
add
xorb
adc
xchg
es
lock
pop
dec
lds
jp
cvtdq2ps
mov
mov
pop
ret
stos
adc
fnstenv
cmpsl
mov
sbb
pop
mov
out
mov
iret
and
adc
push
adc
pop
pop
mov
pop
das
loop
xor
jne
outsb
loopne
inc
xchg
fiaddl
loopne
add
push
sub
inc
rcll
mov
or
enter
cmp
mov
xlat
sahf
mov
test
js
in
push
popa
stc
or
and
sbb
lods
scas
cmp
pop
sub
es
loope
jge
pop
pop
or
and
fcmovnu
ja
aad
pop
daa
adc
cmp
movsb
adc
bound
push
outsb
xor
jmp
sub
cltd
lea
ror
sbb
xchg
xchg
mov
xchg
fcomps
push
sbbb
sbb
fcomps
ret
ja
xor
daa
jo
std
pop
pushf
xchg
repz
jg
out
push
pop
dec
fimuls
mov
sub
lods
jle
int3
shlb
out
push
and
pop
mov
cmpsb
roll
ret
outsl
cmc
movsb
mov
jl
movups
pop
and
cmp
jmp
data16
std
fcmovnu
adc
out
call
pop
test
sbb
and
adc
pushl
es
xor
aaa
lock
sbb
jecxz
shlb
mov
mov
mov
push
mov
mov
xchg
sbb
sbbb
push
pop
push
or
mov
inc
test
add
inc
cmpsl
iret
jno
outsl
inc
hlt
lret
or
or
pop
in
sub
and
andl
out
mov
rorl
in
or
lcall
xchg
repz
scas
fs
jg
testb
mov
fwait
ljmp
gs
pop
outsl
stos
and
push
popf
push
into
repnz
add
imul
lds
mov
cwtl
and
mov
mov
icebp
inc
mov
push
mov
cli
dec
lock
lods
push
push
movsl
jne
mov
pushf
add
cs
sahf
faddl
xchg
aas
fsubl
jge
xor
mov
mov
dec
xor
adc
xor
insl
jecxz
sarl
out
mov
cmpl
sbb
inc
and
mov
cmp
movsl
out
jns
sub
mov
jmp
aaa
push
in
popf
cmc
adc
jle
fdivr
sbb
push
cli
cmp
pop
pop
test
dec
dec
push
aaa
jbe
mov
lods
or
mov
mov
mov
xchg
mov
jns
clc
and
pop
mov
xor
sbb
jge
hlt
xchg
jge
push
sti
shll
int3
iret
dec
add
xor
movb
push
fwait
nop
arpl
popa
aas
add
mov
ja
insb
cmp
and
mov
mov
loop
mov
ret
and
pusha
jbe
inc
cli
outsl
adc
aas
in
sbb
sub
jbe
xor
push
ds
imul
test
sbb
test
mov
in
adcb
or
mov
pcmpgtd
cmp
mov
insb
mov
fidivs
das
inc
dec
jmp
and
xchg
repz
in
loope
add
xchg
fisubs
out
pmaxub
movsl
lret
in
shlb
push
mov
popa
inc
cld
es
mov
or
sti
fsubrl
sbb
in
inc
add
xchg
stos
cwtl
arpl
mov
test
or
cmp
push
imul
test
cmp
mov
mov
test
jbe
stos
cmp
adc
and
and
andb
inc
mov
subl
enter
push
push
dec
dec
mov
mov
xor
lea
test
gs
push
mov
das
xchg
mov
repnz
pop
and
mov
movsl
push
pop
aad
ljmp
andl
aad
testb
pop
cli
aas
cwtl
or
lock
pop
jno
sbb
mov
add
fs
scas
xor
fcoms
cmp
lahf
jns
xchg
jmp
shl
xchg
mov
pop
imul
out
jno
or
mov
xor
enter
sbb
mov
vmovdqa
ds
sarb
and
adc
mov
push
bound
testl
mov
sub
sbb
repz
sub
dec
fwait
mov
stc
xlat
lods
mov
fiadds
mov
sti
or
push
das
movsl
push
ret
lds
ret
pop
imul
inc
jge
adc
lds
adc
push
jne
lret
out
cltd
ds
or
jns
int3
push
add
lea
es
push
sbb
cmp
mov
mov
pop
xchg
pop
xchg
xchg
mov
dec
cmpl
sub
fstp
push
test
mov
jne
xor
ret
aam
or
faddl
clc
cmp
push
push
mov
and
lahf
enter
enter
es
aas
cli
outsl
mov
lock
pop
push
adc
int3
repnz
and
ret
nop
dec
movsl
xor
adc
inc
popl
in
or
cltd
adc
repz
inc
sub
ja
sub
and
iret
sbb
rorl
iret
or
les
jmp
or
sbb
mov
jg
das
icebp
clc
push
jnp
pop
or
popf
popf
js
dec
pop
mov
pop
loope
rcl
dec
xchg
pop
mov
jecxz
daa
addr16
loop
pop
sti
inc
add
push
rcr
pop
inc
adc
pop
cwtl
xor
mov
xchg
add
xchg
icebp
test
mov
dec
loope
pop
xlat
aad
test
fwait
psrlq
push
lret
mov
sbb
addr16
outsl
shl
xchg
fcompl
fsubl
inc
popa
in
data16
cltd
clc
or
xor
adc
addl
push
loope
insb
push
xchg
push
scas
rcll
cmc
xchg
hlt
cmpsl
sti
jg
mov
xor
lea
fimull
inc
movb
or
and
cmp
xor
lock
scas
sahf
mulb
mov
mov
jl
bound
pop
cmp
adc
or
mov
cmpsb
daa
xchg
jb
std
inc
mov
add
xor
imulb
repz
and
loop
jns
mov
out
or
and
push
jle
or
jnp
pop
fstpt
jge
pop
push
fs
jl
sub
and
sbb
call
inc
scas
repnz
jmp
scas
sub
sub
jmp
and
iret
mov
xchg
pop
ret
mov
shr
sti
data16
cmp
mov
or
mov
push
mov
push
out
addr16
jno
jle
xchg
xchg
cmpsb
je
repnz
push
fcomps
pushf
cmp
xchg
in
xchg
pushf
sbb
fsubs
jl
shlb
mov
push
xlat
pop
jecxz
sub
sub
test
xlat
xor
scas
pop
lea
fdivs
xor
push
sbb
mov
mov
inc
popf
mov
push
mov
clc
cmp
dec
inc
mov
arpl
sub
push
arpl
lods
mov
in
out
sub
pop
cmp
jb
xchg
push
fdecstp
pop
adc
shrl
xchg
movb
mov
stos
outsl
mov
popf
mov
jae
or
xor
inc
pop
jbe
xor
inc
popa
and
xchg
add
arpl
push
scas
cs
fcmovnu
push
pxor
mov
add
jb
mov
and
lcall
and
jbe
in
add
scas
int3
and
jae
call
lds
popa
popa
je
popa
cmpsl
xchg
mov
out
clc
stos
add
sub
daa
push
mov
lods
cmpsl
mov
and
ret
jne
sti
nop
enter
in
arpl
push
fwait
jbe
jecxz
cld
mov
sbb
divb
ret
adc
pop
es
mov
xchg
inc
push
rcrl
aaa
dec
daa
sbb
outsl
fistpll
neg
jo
test
int
xor
shrb
sarl
data16
push
dec
insb
std
pop
enter
out
sbb
int3
scas
inc
adc
fcoms
rclb
mov
xor
in
inc
cltd
insb
lea
jne
ret
pop
pop
mov
mov
jecxz
jb
shr
repnz
ljmp
jbe
mov
or
lret
repz
sub
pop
pop
xchg
ror
aad
cwtl
add
push
jmp
adc
lahf
add
popf
inc
or
ret
mov
and
mov
adc
fcomp
std
sahf
loopne
test
fadd
loop,pn
in
push
jmp
lret
shll
dec
cli
rcr
mov
xor
xor
push
push
pushf
cs
xchg
in
out
in
test
hlt
mov
scas
jb
pop
ffreep
jecxz
xchg
cltd
leave
int3
fisubrl
fs
fs
icebp
adc
int
movsl
aas
int3
aas
dec
out
push
out
pop
shlb
or
dec
xchg
aas
dec
and
sub
lock
cs
add
outsb
loopne
orl
sbb
inc
cs
leave
andl
jl
movsb
mov
movsl
cmp
push
or
fdivrl
mov
pop
cmp
mov
mov
mov
pop
inc
jnp
nop
iret
push
fs
sub
es
push
divb
int3
sbb
inc
dec
pause
sahf
add
stos
fcmovne
mov
adc
lds
cmp
es
outsl
sbb
insl
add
pop
cmp
fisubrs
dec
or
mov
dec
rcl
pop
ror
xor
sar
mov
call
fmull
cwtl
jns
xchg
pop
sahf
jp
int
add
push
loope
inc
ljmp
xor
and
jne
vmwrite
xor
cmc
mov
movsb
xchg
sub
and
pop
jmp
mov
mov
sbb
cmp
sbb
aam
jp,pn
dec
inc
push
adc
movsl
arpl
sbb
dec
popa
adc
pop
dec
aas
push
pop
sbb
add
or
or
adc
pop
jno
pop
adc
cmp
mov
sbb
out
xchg
jmp
iret
jge
xor
push
imul
out
cmc
dec
faddp
mov
fldcw
mov
jns
fstpl
mov
xor
pop
int3
dec
pop
add
xor
leave
scas
repz
rcrl
sub
mov
in
cwtl
jp
or
jb
cmp
adc
jle
jp
std
insb
push
mov
dec
inc
aas
adc
add
push
test
popf
pop
addr16
les
inc
test
adc
pop
imul
mov
nop
mov
pop
pop
out
adc
mov
data16
sbb
cwtl
add
sbb
fdivrl
outsl
push
lret
xchg
jle
xor
xlat
stc
cs
cs
lock
popa
shlb
add
dec
int3
nop
lods
cmpsb
add
xor
js
gs
pop
outsl
sbb
shll
push
pop
adc
push
pop
pop
jae
or
pop
insl
push
push
cltd
int3
mov
jns
push
hlt
in
cmp
mov
stos
roll
faddl
or
lahf
fstl
xchg
sbb
test
stc
mov
les
push
adc
inc
sbb
les
scas
loopne
mov
xchg
dec
mov
or
les
push
stc
lret
mov
sub
aaa
xor
pop
cmp
int3
fwait
sub
ret
ljmp
push
or
clc
popa
jno
into
adc
jl
pop
sbb
insl
mov
jg
fucomip
rolb
orb
icebp
rcrb
mov
int
repz
xor
subl
addr16
pop
xchg
imul
sbb
shll
popf
into
frstpm(287
bound
dec
popf
fadds
ds
stc
fiaddl
out
shl
xsha1
cmpsb
or
sbbb
xchg
sar
sub
cmpsl
arpl
sub
cli
and
mov
lods
lahf
inc
pop
and
fwait
xor
adc
fcom
movsb
mov
push
loopne
xor
dec
enter
lods
mov
push
cmc
jae
and
jge
pop
out
dec
dec
fstpt
cld
out
test
mov
popa
sub
jae
push
mov
roll
outsl
mov
and
lods
movsl
lcall
adc
cmp
mov
adc
inc
jnp
popa
push
pusha
rcl
xchg
dec
mov
lds
movsl
loopne
scas
xchg
or
cwtl
push
mov
sub
popa
test
xchg
shll
pusha
cmp
scas
inc
loope
dec
ja
jl
push
and
into
out
push
or
out
fdivrl
daa
add
sub
sub
inc
jne
jne
in
js
mov
scas
shl
sub
lods
dec
lea
addr16
jb
and
rclb
sbb
loope
pop
aad
aam
out
ljmp
outsl
cld
pop
inc
lahf
fldcw
js
mov
rolb
mov
jae
pop
notl
in
imul
pop
lret
div
scas
push
push
jle
jo
and
adc
jo
ret
inc
out
or
scas
xor
mov
mov
push
sbb
add
push
jno,pn
jnp
push
enter
pop
add
and
jp
or
repnz
jno
jg
js
add
push
xchg
jae
jle
stos
inc
dec
adc
mov
jg
xor
inc
scas
xchg
jle
push
std
ret
push
dec
push
sub
pop
xchg
mov
push
jo
xchg
sahf
fisttps
out
push
mov
pop
lock
loop
sub
stos
ss
pop
dec
insl
mov
inc
xchg
inc
dec
enter
dec
subl
test
fs
push
or
dec
add
mov
sub
or
pand
repz
adc
bound
push
push
cmpsb
adc
insb
jbe
pop
jmp
mov
out
clc
daa
ficomps
mov
out
rclb
es
push
mov
jl
testl
nop
jb
adc
inc
adc
fisubrl
outsl
jae
mov
test
xor
loope
jle
dec
sub
lods
mov
xchg
ja
das
pop
or
les
in
daa
fistl
pop
xchg
dec
xor
lahf
mov
xchg
add
out
ja
ret
aad
mov
fcmovnb
test
clc
cwtl
xchg
cmp
lahf
ja
pop
push
jns
adc
adc
sub
loop
sbbb
jns
mov
in
lods
jge
mov
pop
stos
add
cltd
xor
sbb
sub
insl
dec
xor
lcall
mov
dec
pop
jb
movsb
jl
cmp
shlb
jge
xchg
adc
pop
in
mov
adc
xor
dec
mov
sbb
mov
aam
mov
cmp
bound
es
aad
inc
and
les
in
and
jae
jl
out
and
sbb
pop
rorb
jne
int3
sti
es
mov
add
mov
mov
lods
int
es
loopne
pushf
into
jle
cmpsl
jge
sbb
jmp
inc
adc
dec
fidivrl
clc
jbe
icebp
ss
test
enter
cmp
sbb
lcall
test
cmpsb
shll
outsl
dec
inc
repz
fstpt
notl
jmp
mov
out
inc
push
and
stc
mov
xchg
ja
cmp
adc
xchg
pop
testb
mov
lock
mov
iret
inc
or
enter
xchg
hlt
add
and
pop
fsubp
stos
mov
mov
inc
dec
clc
and
mov
adc
lahf
mov
out
idivb
lret
popf
xchg
or
or
frstor
jb
ds
and
dec
decl
bound
push
or
xor
sub
sub
inc
je
mov
xchg
icebp
pop
adc
lret
mov
push
outsb
and
adc
push
jl
sub
mov
mov
xor
repnz
inc
sti
jb
push
push
cmp
add
add
test
push
rolb
inc
xchg
testb
mov
or
mov
aas
mov
pop
mov
push
xor
lcall
xchg
jecxz
push
adc
mov
mov
inc
out
dec
inc
sbb
int3
icebp
dec
repnz
fnsave
outsl
ror
lds
clc
cmp
jno
adc
mov
cld
mov
mov
repz
enter
cs
sahf
adc
fbld
mov
cmp
aad
lock
aaa
or
adc
adc
and
data16
mov
cwtl
push
cltd
dec
test
out
mov
fwait
pop
xchg
pop
dec
push
insb
pusha
fiadds
loope
js
cmp
shlb
mov
or
cmp
insl
jb
dec
fldl
dec
arpl
rclb
mov
mov
pushf
dec
scas
lret
iret
fiadds
dec
mov
jecxz
lods
in
xchg
aaa
decb
add
mov
in
push
xor
jp
mov
mov
pop
std
sbb
leave
imulb
es
imul
xchg
mov
xchg
fbstp
lret
xchg
cltd
pop
icebp
push
leave
push
inc
sub
cld
stos
sahf
gs
into
sub
xchg
jne
lods
hlt
pop
rcrl
repnz
movsb
nop
inc
pop
lahf
out
pop
pop
push
xchg
cmp
loope
movq
push
push
into
jmp
push
nop
nop
push
and
movsb
sbb
inc
or
xchg
sbb
lret
push
rcrb
and
cmp
mov
js
outsb
pop
mov
aas
inc
and
push
or
ret
sarb
out
mov
popf
cld
lea
test
mov
loope
dec
in
in
or
movsl
mov
pop
mov
push
lcall
sahf
jmp
movsb
dec
ds
mov
shl
jb
xor
lahf
rorb
sbb
mov
or
or
inc
lcall
sahf
mov
outsb
aas
push
add
les
ret
cs
mov
sub
movsb
cmp
adc
inc
fidivrl
insb
cmp
pushf
fidivs
sbb
hlt
sbb
push
and
jle
popa
test
lds
fstps
mov
int
clc
or
mov
pop
out
popf
test
movsb
daa
shrb
mov
push
dec
inc
mov
in
jg
lret
jmp
pop
adc
or
outsl
fs
imul
flds
ljmp
ljmp
scas
mov
ficomps
scas
or
push
pop
loop
jbe
sbb
pushf
dec
out
std
movsl
cwtl
fcomp
call
add
int
sbb
adc
fldenv
shll
or
cli
adc
mov
mov
jecxz
push
into
jae
cmp
movsl
shrl
push
inc
test
and
adc
adc
movsb
into
outsl
inc
adc
pop
std
cli
test
adc
fcoml
int3
jge
mov
shrb
in
jmp
mov
lea
mov
js
mov
sbb
adc
ds
inc
prefetchnta
jmp
jge,pt
inc
cmp
jnp
jp
cmp
scas
push
push
mov
cmpsl
test
jns
xor
dec
sbb
xor
add
scas
xor
leave
sub
pop
out
ret
gs
movsl
enter
test
mov
inc
mov
fwait
mulb
lret
ret
inc
out
ljmp
inc
test
pop
jle
mov
jns
ljmp
pop
mov
dec
loopne
lods
jo
add
mov
mov
outsl
jmp
pop
cmp
imul
fisttpl
aas
push
mov
mov
fwait
pop
daa
jns
mov
push
outsb
push
mov
psrlq
inc
aam
stos
mov
fstl
jo
pop
clc
jecxz
pushf
mov
test
xchg
in
cmpsb
sub
test
adc
push
inc
shll
sbb
sub
jp
cmp
jae
cmc
lock
push
mov
addr16
cs
sbb
or
push
in
jo
inc
add
in
xchg
cmp
pop
lcall
int3
push
scas
or
mov
and
loope
popf
or
lret
sbb
fdivl
sbb
jp
push
shl
sub
fsubs
lcall
mov
out
mov
or
sahf
ret
and
dec
imul
mov
xchg
repnz
cmp
dec
sbb
leave
cmc
mov
push
enter
aam
fisttps
push
push
pushf
adc
lret
shlb
xor
fadds
cwtl
and
sub
loope
sub
sbb
cmp
push
adc
aaa
into
ficoms
xchg
pop
xchg
dec
outsl
xchg
bound
or
mov
movsl
les
inc
or
lock
insb
imul
testb
xchg
into
sbb
arpl
push
iret
fildl
inc
popf
jp
push
fldcw
mov
movsl
xor
mov
test
jecxz
mov
jno
dec
mov
adc
add
push
fstp
dec
in
sbb
dec
loopne
pop
sub
or
push
push
mov
roll
out
insb
fisubrl
or
nop
adc
test
push
je
aaa
out
add
aaa
sub
sub
loop
insb
mov
sbbb
mov
out
mov
test
popa
push
jge
dec
stos
pop
push
jae
jle
dec
ret
es
cmp
inc
int3
pusha
cmp
xchg
xchg
add
cli
fdivrp
fidivrs
or
push
push
imul
or
mov
filds
imul
cli
pusha
xchg
popa
xorb
push
mov
and
fstl
out
jne,pt
shll
mov
aad
pop
pop
dec
pop
cs
or
inc
xchg
pop
out
pop
cmp
add
cmp
adc
jne
out
popf
test
jo
out
mov
jl
mov
adc
cld
packuswb
inc
cmc
repnz
dec
clc
rclb
cmpb
add
sahf
outsb
mov
push
jle
hlt
sub
dec
dec
inc
jp
stos
js
push
cmpl
push
bound
sbb
fidivl
shll
in
mov
jnp
jmp
adc
pop
loop
leave
imul
imul
sbb
xchg
jl
mov
cmpsb
pop
hlt
cli
xlat
mov
arpl
inc
loope
xchg
xor
arpl
and
out
push
subb
mov
mov
push
sub
enter
cltd
sahf
xchg
xor
test
jb
fdivrs
test
les
cmp
sub
mov
mov
test
sbb
fnstcw
loope
jae,pt
dec
xchg
fcompl
mov
stos
adc
inc
pop
mov
int
mov
mov
push
subl
or
ret
jp
imul
lock
fadds
clc
subl
xlat
inc
adc
cwtl
loope
shll
rorb
mov
add
sbb
mov
or
inc
xor
jmp
sbb
divb
mov
mov
out
shll
imul
int3
jae
push
pop
xlat
inc
xor
xor
push
divb
xchg
mov
sbb
mov
mov
and
sub
add
mov
push
push
add
outsb
xchg
cmp
mov
cmp
mov
jno
cmc
pop
scas
mov
push
cmpsl
adc
mov
cmp
leave
mov
pop
sbb
sub
push
and
xchg
jecxz,pt
mov
insl
push
dec
ss
in
mov
repz
and
sti
mov
ljmp
jae
pop
cmp
sbb
cld
push
mov
jmp
jb
mov
xchg
cmpsl
shrb
mov
mov
cmp
cmp
ret
push
and
int3
adc
cwtl
dec
xchg
pop
xchg
sub
mull
daa
rcrl
pop
int3
and
and
cltd
pop
lret
or
iret
dec
sub
lcall
pop
stos
push
pop
or
divl
push
std
jnp
sarb
inc
jae
push
lcall
sbb
xchg
sbb
mov
dec
test
pop
stos
and
rolb
sbb
xlat
jnp
cmp
int
xchg
and
cmp
inc
int
or
adc
push
mov
into
popa
sahf
pop
mov
or
inc
lods
mov
outsb
xchg
not
dec
out
mov
sub
das
jns
shrl
push
addr16
mov
pop
mov
mov
fs
pushl
push
xchg
pop
cmp
add
xchg
out
or
fsubs
nop
lea
mov
xchg
mov
push
insb
add
sbbl
sti
push
dec
xchg
xchg
mov
push
push
pushf
or
lock
pop
add
in
popa
lret
push
enter
or
jbe
mov
add
gs
repz
fistpll
fadds
insl
jns
in
mov
mov
popa
dec
dec
mov
jmp
jle
xchg
cmc
adc
mov
mov
jp
pop
lock
fsubrs
loopne
xchg
and
imul
sbb
adc
jecxz,pn
ret
xchg
adc
rorb
les
pop
mov
or
fstpt
xor
mov
dec
loopne
or
add
mov
pusha
shrl
xchg
in
dec
inc
out
pop
es
lea
sub
push
push
insb
les
stc
sbbb
divl
int3
and
xor
dec
aad
add
mov
push
fidivrl
test
or
scas
sub
sar
mov
roll
fisubrl
sti
sub
test
dec
lcall
push
push
mov
xchg
mov
popf
lds
pop
dec
push
fdivl
jae
xor
dec
not
sahf
xor
test
daa
fwait
aam
inc
mov
roll
mov
jle
sub
popa
lock
aam
pop
or
jmp
inc
leave
lods
into
and
mov
mov
mov
and
scas
mov
data16
add
inc
mov
icebp
xor
mov
andl
and
sar
pop
xchg
dec
roll
insl
xchg
es
sbb
enter
movsl
iret
addl
bound
add
xchg
test
jl
xchg
cmpsl
mov
inc
mov
sbb
jne
icebp
xchg
cltd
push
aas
adc
jns
shll
add
mov
push
ljmp
aam
mov
out
xor
cmpsl
push
sbb
push
mov
xchg
incl
lahf
jns
lock
dec
iret
inc
cmpsb
push
subb
fldenv
loopne
jecxz
mov
in
std
nop
cmp
lret
xchg
push
inc
es
mov
cmp
je
sahf
mov
movsl
dec
push
scas
mov
shlb
js
in
lret
pop
outsl
cmpsl
xchg
aam
pop
push
mov
lahf
pop
inc
shrb
movsb
sbb
fbstp
cmp
lods
inc
jl
mov
addr16
mov
in
outsl
mov
test
call
pop
adc
mov
sub
in
sarl
xchg
loope
lods
inc
test
push
jae
pop
jno
add
stos
call
cmp
daa
lar
inc
mov
inc
sahf
dec
shll
hlt
enter
movsl
popf
add
pop
dec
cmp
xchg
mov
popa
jmp
push
sbb
out
add
aas
lcall
jb
mov
icebp
or
aaa
push
xchg
add
adc
xchg
sub
or
call
sbb
cmp
dec
adc
or
inc
inc
movb
jne
or
ret
lock
sbb
jno
cli
or
cmp
out
adc
xchg
pop
cmpsb
cltd
insl
subl
jle
aad
leave
jge
je
push
cmp
and
fisubs
ljmp
roll
jne
icebp
sarl
insb
pop
repz
sub
adc
fisubrs
ficoml
add
inc
mov
dec
sbb
ds
pop
jle
lods
mov
cmp
pop
sbb
push
stos
scas
jnp
xor
sbb
sub
mov
jnp
in
inc
mov
xor
inc
push
pop
xor
je
push
jg
mov
push
stos
mov
int3
das
movsb
fiaddl
push
sbb
stc
and
push
out
jnp
insl
xor
std
jns
mov
pop
imul
ljmp
jbe
inc
aad
dec
cmc
or
repnz
and
and
cmp
cmp
mov
add
or
sub
mov
icebp
mov
inc
mov
cmc
push
sub
in
out
in
aas
or
and
adc
mov
icebp
cmp
pop
ja
xchg
cs
mov
mov
fadds
pop
and
das
push
mov
adc
icebp
addl
mov
adc
xchg
xchg
dec
dec
movsb
mov
mov
nop
dec
xor
adc
mov
mov
adc
loopne
or
inc
lock
pusha
test
aad
mov
jp
adc
jp
out
imul
pop
adc
clc
cld
je
out
xor
lock
push
cmpsb
shlb
stc
pop
out
loopne
bound
dec
es
sbb
adc
or
sub
push
ljmp
pop
mov
aam
dec
and
dec
sarb
cmpsl
ficoml
pop
push
imul
mov
cmp
lods
jae
pop
lods
cmp
out
ljmp
out
lods
jle
test
fmull
mov
sbb
js
testb
xor
out
mov
icebp
pushl
sbb
daa
in
sbb
scas
into
cmp
in
jl
out
cmp
inc
iret
add
sub
inc
fsts
fsubrl
into
inc
adc
hlt
dec
cmpsb
push
es
imul
inc
inc
dec
dec
gs
lods
fcompl
mov
loope
pop
imul
lods
addps
or
and
and
mov
sub
xchg
push
loopne
test
xor
xor
sbb
nop
jmp
shlb
add
negl
push
add
adcl
stc
sub
jle
sub
outsl
shlb
enter
xor
pop
xchg
adc
jmp
jns
jno
sub
pop
icebp
repz
jne
sbb
pop
mov
dec
mov
pop
xchg
and
pushf
aam
push
sbb
pop
or
pop
in
and
sbb
inc
jge
andb
mov
or
sbb
cli
or
fldl
mov
hlt
loopne
out
jno
xchg
stc
repnz
loopne
mov
jns
mov
test
and
push
or
nop
es
and
prefetch
in
lret
aas
hlt
mov
add
xlat
sbb
sbb
outsb
lea
sbb
lret
xchg
or
repnz
or
sbb
jmp
sub
out
pop
pop
mov
xchg
in
loop
cmp
nop
dec
stos
inc
sahf
inc
stos
and
dec
xor
push
cmp
fstpt
fiadds
mov
inc
insb
test
push
push
hlt
jnp
test
jle
add
packsswb
xor
bound
and
fstl
jne
ljmp
push
and
rclb
out
push
bnd
push
add
jmp
cmp
out
add
lahf
push
mov
call
xchg
imul
cmp
cmp
cmc
leave
xor
jnp
movsb
sbbl
adc
out
repz
pusha
das
ds
insl
push
ljmp
jle
xor
jle
and
lahf
mov
jp
or
push
ret
or
jmp
mov
int
adc
push
or
pusha
cmp
sub
sub
shrb
mov
dec
lock
add
sub
xchg
mov
aam
ljmp
lcall
test
mov
cmpb
adc
xlat
fdivrs
add
hlt
cs
mov
stos
inc
int
imul
loopne
fimull
sub
ret
or
repz
fnstcw
mov
mov
or
mov
jo
fwait
xor
jnp
imul
mov
cwtl
xor
call
movsl
and
cmp
in
stos
or
shl
dec
andl
mov
mov
loope
mov
cmp
in
xor
adc
xchg
and
mov
pop
cmp
push
push
fdiv
mov
xchg
in
pop
loope
sub
fbstp
outsb
dec
xchg
push
xchg
pop
xchg
jbe
mov
bound
inc
sub
movsl
mov
sbbl
lcall
mov
into
or
mov
mov
jmp
call
ja
fchs
repnz
pop
test
jmp
mov
xor
cmp
mov
scas
xor
pop
and
gs
roll
mov
sti
mov
js
lods
popf
out
rorb
cmp
movsb
scas
jnp
mov
andl
sbb
lea
inc
mov
std
pop
jo
rorb
popa
jg
xchg
fldl
sbb
stc
out
mov
mov
daa
sbb
aaa
mov
mov
lods
add
jge
in
loopne
dec
add
loope
notb
ljmp
xor
push
call
ret
and
fadds
popa
pushf
push
movsl
in
bound
pushw
stos
aam
push
scas
lock
mov
decl
enter
and
out
and
loope
jmp
xor
bound
and
pop
jb
or
scas
lcall
sbb
sahf
lods
icebp
jnp
stos
loop
test
push
or
push
mov
xor
scas
leave
insb
nop
xor
cmp
jnp
dec
jle
mov
xlat
xchg
addb
mov
xor
movsb
lret
and
and
mov
dec
lret
js,pn
dec
lret
cmp
daa
test
popa
xor
mov
cmc
jmp
add
cmp
sarl
pushf
bnd
dec
push
cltd
cmpl
and
movsb
dec
xchg
xchg
into
jp
andl
pushf
inc
sub
mov
test
insb
test
push
inc
sbb
jge
add
test
or
call
mov
push
cmp
stc
sub
in
repz
or
xchg
jnp
aas
mov
push
pusha
fcmovnbe
shrl
orb
sbb
aam
adc
adc
cltd
xchg
stc
sub
sub
ficoml
movsb
stc
out
mov
push
lods
jmp
and
repz
or
mov
ljmp
push
cmc
jmp
or
lahf
sbb
mov
cmp
pop
jecxz
cmp
pop
sub
jecxz
fcoms
xlat
cmp
mov
ror
lods
pop
ret
cmp
subl
or
nop
sbb
in
mov
ficomps
adc
adc
xorl
dec
jns
ds
push
xor
dec
mov
pushl
popf
mov
test
in
jne
in
push
dec
mov
xor
lahf
arpl
jmp
hlt
addr16
fcoms
jmp
add
lds
sub
loope
cmp
mov
jmp
outsb
test
mov
insb
je
fldl
mov
outsl
xchg
fbstp
and
add
mov
sahf
mov
fistpl
daa
adc
scas
jo
xor
divb
dec
aaa
add
sti
aaa
ss
mov
shrb
lahf
mov
adcb
lret
in
mov
subl
jmp
loopne
pop
sub
inc
mull
cmp
in
fmul
adc
insb
sub
mov
pop
sbb
aaa
adc
imul
add
pop
addr16
test
mov
jb
pop
mov
cmp
iret
iret
js
jl
sub
out
mov
mov
sbb
cmp
mulb
or
xchg
add
mov
stos
mov
fildl
xchg
inc
push
das
aam
cmp
mov
mov
pop
push
mov
fsubs
xchg
mov
pop
mov
ja
cmp
in
sbbl
into
inc
cmpsl
mov
lods
fisttps
pusha
push
push
outsl
stos
inc
enter
push
mov
aaa
mov
leave
and
jae
mov
add
pop
xor
loope
and
mov
dec
dec
xchg
push
repz
sbb
cs
stos
aaa
daa
sbb
les
push
dec
dec
pop
lret
jb
fildl
mov
es
ljmp
pop
mov
scas
sti
cmc
ljmp
jp
jb
cmpsl
adc
addr16
sbb
cs
fildl
xor
arpl
fcompl
cmc
cmpb
xor
cltd
push
push
in
adc
and
cmp
fs
sbb
dec
xlat
xor
push
sbb
fsubrs
cmp
cs
or
lahf
jge
dec
inc
or
fcoms
dec
push
add
push
outsb
sbb
sub
sub
mov
push
dec
adc
mov
hlt
lret
sahf
popf
push
subl
add
gs
and
lcall
dec
mov
fyl2x
fisttpl
seta
or
out
test
mov
faddl
es
or
cwtl
mov
mov
mov
push
cmp
mov
cld
f2xm1
adc
push
xorb
or
inc
sbb
cmp
adc
adc
popa
inc
jb
sti
aam
pop
push
sti
insb
push
bound
xchg
lret
cli
mov
cmp
or
xchg
dec
mov
adc
decb
data16
push
lds
out
sbbl
stc
pop
aad
push
hlt
fcomip
gs
lods
pminsw
cltd
inc
inc
lods
lahf
mov
xchg
daa
aas
sti
incb
or
push
fnstsw
sti
xchg
pop
iret
mov
jno
mov
lock
xor
ja
nop
stos
mov
je
push
pop
setle
daa
clc
lea
add
mov
imul
mov
jbe
movl
clc
repnz
adc
outsl
out
cli
popa
mov
insl
lods
or
xor
mov
sbb
jne
adc
mov
and
sub
xchg
popf
imul
pop
std
or
pop
cmc
lea
popl
ss
mov
add
push
shlb
data16
cs
push
roll
mov
sbb
sbb
loop
arpl
and
xor
adc
and
sbb
out
pushf
sub
movsb
or
out
pop
adc
sub
push
push
jmp
pop
cmp
add
cmp
pushl
cmc
sti
outsl
inc
ret
lret
adcl
dec
rcrl
cmp
js
mov
sub
bound
jbe
mov
aam
fsts
sub
aam
sub
aad
lahf
mov
or
pop
jp
popa
loopne
insb
fcomip
pop
sar
mov
mov
pop
addr16
es
inc
xchg
pop
adc
jns
clc
sub
pop
sbb
adc
cmpsl
add
movsb
add
sar
movsb
pop
pop
dec
negb
xchg
add
jbe
popf
adc
outsb
mov
xor
xchg
outsl
mov
mov
adc
orl
popa
sbb
jns
or
pop
pop
add
xlat
js
jne
xchg
les
cmp
shll
xchg
hlt
push
cld
test
out
mov
cmpl
mov
add
xchg
jo
pop
mov
mov
test
shll
inc
pop
into
xchg
mov
loopne
dec
pop
mov
jnp
dec
add
sub
movsb
shl
jne
icebp
insl
push
xchg
mov
dec
mov
mov
mov
arpl
je
je
jnp
shl
and
mov
xchg
mov
mov
insb
repz
dec
inc
jbe
imul
cmp
aas
add
cli
shrb
cmp
and
sub
or
scas
xor
shlb
rcrb
xor
out
or
ficoms
jmp
dec
arpl
xor
fcomi
push
cmp
jmp
loop
loope
push
dec
or
stc
mov
out
push
mov
rclb
cmp
cmp
arpl
loop
and
jmp
push
or
in
jge
dec
pop
pop
dec
imul
xor
or
xlat
cmp
popa
jmp
lods
lea
cli
inc
out
inc
sarl
dec
enter
xor
pop
sbb
or
sarl
dec
data16
test
nop
shlb
cmpsl
fdivp
mov
lods
mov
dec
add
xor
xor
pop
aam
pop
jl
push
sbb
bound
inc
xor
test
je,pt
clc
shrb
fldl
rcl
sarl
pop
mov
or
nop
pushf
cltd
cmp
lods
pop
and
jecxz
xchg
add
dec
in
mov
mov
jns
stos
mov
in
std
adc
jmpw
mov
aam
mov
inc
sub
jne
aas
inc
fisubl
sbb
xchg
push
rorl
jp
fmuls
xchg
fcoml
pop
lods
jmp
cld
loope
outsl
mov
cld
out
scas
mov
fnstenv
js
scas
leave
mov
shll
dec
jl
or
cmp
testl
or
in
inc
cmc
roll
add
push
fstl
insl
mov
pop
lahf
cmp
xor
and
add
dec
std
or
into
shlb
add
shl
sahf
int
fidivl
mov
test
inc
lea
push
jg
imul
mov
lret
add
push
arpl
mov
mov
push
sbb
push
or
fiaddl
push
inc
mov
pop
push
outsb
das
jmp
jnp
push
jne
int3
xchg
and
shr
inc
mov
mov
int
scas
push
cwtl
inc
arpl
cwtl
sub
jnp
call
loope
lret
sub
pop
loope
lcall
push
clc
mov
repz
sub
cmp
in
insl
aam
dec
xchg
xchg
mov
fnstenv
mov
adc
jecxz
out
jns
pop
jb
adc
or
das
mov
loopw
push
mov
or
cmp
sub
stc
mov
scas
jno
sbb
into
and
push
sbb
xchg
mov
dec
lds
mov
push
sti
sbb
mov
shlb
xor
xchg
pop
mov
dec
xor
and
in
push
psrlw
out
jb
adcb
xor
mov
adc
inc
lods
xlat
push
cltd
cmc
pop
xorl
aas
adc
push
pop
je
jae
pop
out
xchg
push
rorb
cltd
lcall
nop
dec
xlat
dec
out
jbe
ja
mov
popf
mov
lahf
or
or
or
sbb
push
jae
xchg
inc
fxch
lods
jl
add
insl
sub
push
xchg
xor
dec
xchg
cmp
daa
fwait
sub
mov
cmpsl
es
xlat
les
cmp
jle
xlat
cmp
in
cmc
push
sbb
enter
lahf
xchg
ret
mov
and
lock
sti
insb
push
mov
sbb
xchg
push
aas
jge
cmpsb
pop
loopne
mov
xchg
iret
cmp
add
clc
icebp
sahf
mov
dec
fldl
xchg
jno
dec
push
mov
pop
add
shl
enter
aas
popf
cmpsb
xchg
mov
xor
lock
pop
outsl
pop
mov
pusha
add
xor
add
xchg
inc
fisttpl
mov
rclb
insb
stos
into
sub
popa
cmpsl
lcall
pop
cmpl
sahf
sub
popa
arpl
push
mov
and
jo
push
notb
fdivs
and
pop
and
stos
std
jne
jae
aaa
pusha
out
in
imul
adc
fidivs
mov
add
clc
mov
pop
aad
push
imul
jmp
leave
lcall
andl
stos
jp
jnp
in
mov
arpl
or
mov
fistps
jae
jo
jg
xor
fprem1
adc
je
or
push
or
jae
sub
sbb
cs
push
sub
or
loopne
push
ret
mov
cmp
jae
sub
mov
push
cli
sub
test
mov
sub
jp
xor
dec
arpl
xchg
clc
add
lcall
mov
inc
ret
scas
aas
daa
fs
mov
fcmovu
jp
adc
add
sub
dec
js
cmpsl
xchg
es
mov
outsl
lret
sub
sti
adc
rorb
aam
xor
push
xchg
sbb
inc
cltd
lods
fs
cmp
xor
cmp
xchg
mov
adc
aam
leave
dec
fisttpl
sub
cli
jge
jp
out
psrld
addl
loope
mov
inc
mov
xchg
aad
xor
xchg
mov
mov
stos
mov
mov
sub
test
push
push
push
adc
sub
fdivr
shrl
sbb
push
pushf
ss
in
pop
bound
and
xchg
xor
pop
mov
push
pop
mov
cmpsb
add
pop
out
jae
xchg
push
cmp
lea
popf
lret
sbb
enter
push
fstl
outsl
movb
push
popa
add
mov
cmp
mov
jb
push
icebp
out
inc
pushf
dec
inc
mov
push
outsb
imul
dec
fwait
int3
adc
call
xchg
pop
inc
imul
ljmp
xchg
cld
and
xor
pushf
mov
sub
pushf
pop
dec
fisubrl
mov
popf
sti
mov
sub
cmp
ljmp
mov
jmp
xlat
fwait
mov
mov
in
mov
lret
lods
pop
pop
call
mov
popf
int
daa
push
loope
xchg
jo
inc
dec
mov
inc
addr16
in
xor
dec
xchg
ja
test
jecxz
imul
add
or
lds
mov
aaa
pop
push
fwait
mov
or
in
sbb
or
out
mov
or
popa
add
dec
cmc
inc
ss
int3
mov
es
dec
push
xchg
mov
js
sbb
pop
lea
pusha
sbb
lret
ja
pop
mov
int
outsl
ds
ror
inc
stos
xor
xchg
shl
shlb
add
jle
pop
adc
push
push
push
in
sahf
les
inc
fistl
aaa
xchg
ss
pop
bound
insb
sub
sbb
iret
and
fs
xor
jp
call
push
push
xor
ja
shlb
fldl
jg
nop
outsl
mov
jge
jg
movsb
or
xchg
dec
out
test
cmpsb
jg
iret
daa
adc
mov
test
fwait
and
lods
insb
mov
mov
jecxz
popa
faddp
les
std
xchg
or
cwtd
mov
xchg
or
loope
enter
cld
js
cmp
add
cmp
es
jae
lds
mov
not
mov
iret
and
jns
out
sbb
and
cmp
sub
sbbl
mov
xor
sbb
mov
lahf
dec
lret
xor
into
cmpb
cli
pcmpeqb
icebp
gs
xchg
cmp
cld
cmp
add
mov
movsb
fs
ret
add
and
leave
or
enter
stos
scas
mov
data16
sub
pop
adc
add
adc
jo
and
loopne
fildl
mov
cmp
lea
jns
xor
test
jo
lret
sbb
pop
ss
mov
test
pop
mov
xor
push
ficoml
sbb
lahf
cmp
mov
pushw
ret
and
adc
dec
xchg
loopne,pn
jns
inc
and
cmpb
out
ja
icebp
pop
shr
sub
sarl
or
shlb
dec
fs
mov
xchg
popf
and
jg
push
push
mov
add
mov
aad
push
mov
jg
mov
pop
inc
sbb
and
cli
xchg
scas
xor
jb
inc
jmp
imul
ret
clc
push
lea
inc
adc
lcall
aas
jno
push
scas
sub
xchg
sbb
imul
mov
xchg
adc
push
in
daa
hlt
mov
imul
rcll
stos
mov
or
add
add
in
xor
movsb
cmp
mov
mov
pop
adc
stc
push
repz
dec
mov
lds
push
popf
mov
outsl
repnz
mov
jle
das
xor
mov
popf
add
shrl
frstor
js
rcr
es
push
lret
pop
pop
pop
jmp
int
sbb
mov
imul
xorb
lods
adc
fisubs
and
and
iret
loop
sahf
test
lea
adc
ja
mov
or
jns
add
imul
mov
outsl
mov
popf
and
scas
inc
enter
pushf
and
stos
sub
and
dec
mov
push
scas
hlt
jae
ss
push
lret
jg
jns
in
cld
push
mov
lods
insb
lret
cmp
repz
push
cltd
jmp
xchg
fnstcw
push
pop
test
cmp
push
pop
scas
mov
jmp
pop
mov
xchg
stos
xor
push
jge
or
inc
mov
in
jo
stc
xor
rcll
cmc
mov
lods
cs
push
lret
push
icebp
daa
and
pop
push
imul
cld
mov
test
shll
mov
sub
mov
aas
imul
jo
insb
push
or
cmp
xchg
nop
pop
adc
push
mov
dec
adc
fstpl
call
insl
lcall
sub
repnz
mov
sub
add
push
loopne
adc
rcll
out
scas
hlt
popl
jns
push
mulb
daa
mov
pop
test
adc
imul
loope
or
or
adc
sbb
mov
xchg
aaa
dec
cli
aam
outsb
jle
cmc
inc
sub
stos
adc
stc
add
daa
outsb
push
and
xchg
rcl
pusha
adc
jns
xor
scas
daa
xchg
pop
and
fwait
es
loopne
popf
push
into
sbb
xchg
sbb
xchg
movsb
push
pusha
mov
or
addr16
mov
in
movsb
lahf
orl
loop
dec
xor
mov
and
das
lret
cs
mov
push
lods
jecxz
xchg
push
inc
in
mov
arpl
cld
fisubl
sbb
jg
cmp
icebp
popf
xchg
dec
sarb
gs
shll
jge
imul
ss
xchg
dec
out
sbb
or
mov
addr16
adc
jg
aaa
jecxz
pop
and
or
push
and
xchg
jp
mov
and
bound
nop
out
xor
push
add
add
lahf
fldt
mov
inc
or
in
sub
dec
xorl
sbb
out
jb
cltd
and
inc
in
test
popa
add
jo
js
adc
es
call
cmp
popf
insl
pushf
scas
mov
movsl
repnz
pop
sbb
int
or
cmp
cmpsb
push
adc
push
outsb
jae
adcl
push
jmp
or
rorl
xchg
repz
or
and
mov
push
daa
clc
mov
stc
mov
aaa
mov
xchg
cmp
push
mov
hlt
fsubp
popa
les
pop
iret
mov
inc
loope
and
cld
imul
pop
cmp
adc
adc
das
xchg
lods
scas
call
push
pusha
and
int3
popf
daa
mov
adc
nop
jp
push
inc
push
sub
les
and
out
adc
inc
or
addb
mov
push
dec
push
rol
adc
add
addr16
movsb
outsl
inc
out
mov
mov
int
gs
movsb
and
ret
push
fsubrs
mov
mov
dec
fimuls
test
mov
inc
pop
jle
pop
add
insl
out
dec
insl
xchg
cmpsl
inc
pop
andb
inc
popf
cmp
insb
pop
sti
mov
xchg
stos
cmc
jbe
cmp
fs
push
adc
jmp
in
pop
movsb
in
in
jmp
inc
rcrb
push
mov
mov
cmp
fistl
dec
push
sub
daa
cmpsb
out
out
sbb
mov
ficomps
xor
jmp
push
xchg
ret
and
aaa
adc
mov
or
mov
xchg
scas
jecxz
dec
mov
add
inc
aaa
sub
je
in
imul
popa
mov
call
mov
adc
je
mov
jbe
cld
add
mov
mov
icebp
loope
fmulp
and
iret
adc
stos
daa
loop
mov
aaa
test
jae
in
jg
ffree
push
add
pop
ret
push
nop
sub
and
fistpl
adc
fimull
hlt
in
pop
xchg
test
xor
lahf
pop
bound
fdivr
fwait
inc
mov
stos
cmp
repnz
cmpsb
les
mov
pop
addr16
xor
mov
fwait
repnz
fstpt
into
dec
insl
sbb
ljmp
call
fcom
gs
sar
rolb
das
and
fwait
push
push
push
pop
pushf
je
pop
out
jecxz
leave
fisttpl
push
cli
loope
adc
decb
mov
test
xor
insl
inc
sar
or
xor
sbbl
xchg
das
int3
add
shl
repnz
in
loope
stos
cld
pop
pop
or
ficompl
push
mov
mov
mov
cmp
xchg
rolb
sbbl
icebp
cmpsb
arpl
mov
nop
xor
mov
lret
cmpsl
push
xor
xor
call
mov
daa
lods
pop
movups
dec
inc
ds
sub
lds
rorb
mov
cltd
insb
stos
jg
xor
sbb
mov
dec
jnp
rorb
popf
sbb
adc
mov
iret
sbb
pushf
aam
jge
sbb
aas
add
xor
mov
inc
and
push
xchg
mov
aam
and
mov
stc
in
int
inc
sub
test
aaa
mov
shl
push
or
int
xor
xor
adc
xchg
lds
dec
and
xchg
push
adc
jae
lods
jp
adc
enter
js
jp
cmp
into
sub
aaa
in
cmp
test
or
push
cltd
dec
jbe
mov
cmpsb
enter
mov
testb
mov
pop
jnp
push
jle
sub
scas
pushf
add
dec
loopne
push
cs
mov
dec
out
adc
into
push
lret
mov
mov
je
cmp
mov
std
outsb
gs
or
outsb
xor
mov
notl
push
jle
into
lea
fmull
setns
xor
popa
pop
lret
mov
jno
sub
mov
dec
fnstcw
js
loopne
push
jmp
movl
aam
xchg
xchg
mov
push
fdivp
pop
sbb
add
add
sub
rclb
sbb
cwtl
jmp
add
jge
cmpb
mov
xor
sub
sub
xor
inc
mov
jne
enter
cmp
xchg
jmp
cmpsb
mov
dec
mov
xchg
adc
div
or
pop
outsl
mov
mov
sbb
xor
fldpi
sub
lret
mov
sub
nop
xchg
inc
sbb
jg
dec
in
movsl
aam
clc
rorl
xchg
bound
add
rcl
pop
decb
loopne
inc
xchg
sbb
out
imul
out
fmuls
xchg
cmp
or
mov
push
mov
cmp
push
jbe
ret
popl
fisubrs
sub
out
cmc
insl
xchg
xor
mov
cld
xchg
push
push
adc
shrl
push
adc
pop
inc
pop
daa
addr16
mov
adc
aas
dec
sub
into
mov
sbb
hlt
inc
pop
pushf
sub
lods
aam
mov
jle
sub
push
sarb
movsb
out
shlb
jne
jmp
sub
and
mov
lcall
decl
mov
cld
add
outsb
nop
dec
popf
xchg
xchg
pop
adc
xchg
inc
and
insb
xchg
dec
add
daa
sbb
dec
xlat
mov
adc
jecxz
dec
pop
xchg
mov
xchg
xor
xor
jg
lret
sbbb
stc
in
xor
int3
jo
scas
fisubs
outsb
dec
pop
mov
push
cwtl
jge
repz
lcall
xor
lea
cmp
imul
loopne
aam
push
loope
dec
mov
sub
dec
nop
cmp
test
lods
push
jno
mov
push
mov
pop
lret
mov
shl
add
add
dec
pop
add
mov
add
add
fidivl
add
cmp
mov
mov
push
pop
mov
fs
adc
aas
mov
cmp
push
loop
cwtl
sub
out
gs
and
cs
jmp
inc
inc
pop
dec
adc
jns
out
add
adc
outsl
shr
mov
sub
cmpsb
cmp
xchg
xchg
sub
inc
outsb
and
xor
mov
xchg
push
je
out
lds
scas
cmp
int
push
dec
fcmove
je
repz
sbb
or
ss
or
push
pop
pop
mov
jp
mov
mov
mov
push
inc
jno
adc
ret
out
xchg
test
xorb
add
pop
mov
inc
inc
stos
sbb
mov
sub
mov
sbb
ss
jge
mov
cwtl
pop
nop
comiss
jo
jo
and
and
sub
ds
push
popa
pop
pop
inc
mov
and
repz
rcl
dec
enter
xor
gs
and
in
xlat
lret
ret
and
add
pop
leave
pop
cmp
push
xchg
adc
test
mov
push
jge
gs
sbb
insl
sbb
xchg
lret
cmp
xchg
cmp
add
xchg
pop
xchg
iret
loop
mov
push
mov
in
cmp
ss
mov
mov
jae
cmp
leave
jae
adc
adc
loope
fldl
xchg
mov
jg
lret
pop
cmp
lret
mov
mov
push
or
mov
inc
mov
fsubl
xchg
test
iret
jg
pop
push
lods
sbb
lret
and
push
add
dec
aas
int
lods
cmc
pop
pusha
ja
push
int
test
sub
das
cmp
fisubl
repz
dec
sub
lea
mov
or
push
cmp
mov
outsl
pop
stos
mov
in
cltd
and
out
pop
outsb
mov
mov
movsb
cmp
adc
test
ja
cmp
ljmp
and
imul
pop
into
andb
lret
mov
mov
mov
inc
xor
insb
sbb
dec
dec
out
jl
xor
das
and
and
mov
push
push
les
pop
sti
mov
push
mov
xlat
out
addr16
repz
mov
inc
incb
inc
dec
cs
jnp
push
mov
pop
hlt
stos
sarl
jle
int
in
jbe
sub
mov
mov
add
sub
and
sub
repz
dec
lods
in
movsl
cmp
pop
arpl
loope
mov
sarl
outsb
mov
mov
xchg
xchg
pushf
pushf
mov
add
sbb
cmpsb
push
mov
pop
push
cmp
xchg
int3
les
jns
inc
inc
sbb
or
xchg
dec
pop
sbb
pcmpgtw
inc
mov
inc
cmp
jae
dec
lea
daa
aam
inc
dec
imul
push
adc
cmpsl
jle
adc
mov
xchg
lods
stc
hlt
mov
sub
nopl
stos
repnz
pop
mov
imul
push
loop
fbstp
push
xchg
fcoml
flds
dec
jl
jnp
addr16
jmp
inc
cmp
inc
clc
cltd
arpl
jo
push
call
mov
mov
mov
jo
sbbl
sbb
mov
ret
mov
mov
scas
jne
cmp
push
shlb
adc
je
leave
loopne
ret
add
aam
in
pop
xor
es
push
and
cmp
sbb
mov
jge
jae
xchg
testl
adc
sbb
dec
xor
loop
push
xor
mov
fxch
cmp
inc
push
out
dec
ss
xchg
stos
std
cmp
into
xor
movsb
pop
push
call
inc
bound
rolb
jns
sbb
stos
and
addr16
mov
lret
in
dec
imul
shll
andb
nop
lods
data16
jb
mov
pop
add
sbb
in
cmp
mov
adc
jo
push
pop
and
inc
fildll
push
sub
vminpd
mov
mov
adc
bound
sub
fsin
push
stos
sbb
cmc
insb
or
sarl
int3
stos
movsb
cmp
cmpsb
shrb
jge
fs
mov
mov
pop
into
rolb
test
or
fs
js
test
fnstsw
xchg
jo
xor
mov
cmp
mov
lock
clc
jb
jnp
push
push
ss
shrl
fmuls
ficomps
jl
call
sbb
push
pop
cmp
cwtl
xor
in
xlat
in
btr
push
sahf
out
cld
xor
jge
decl
push
test
sub
xchg
dec
sub
leave
js
aad
int3
mov
rorb
ja
data16
data16
sbb
mov
test
ficompl
dec
sub
outsl
movl
adc
lods
imul
sbb
mov
push
stos
xchg
push
jg
adc
jne
and
mov
loop
fiadds
xchg
shlb
or
pop
xchg
adc
test
push
pop
and
scas
xchg
push
inc
cmp
sahf
repnz
push
pop
adcl
mov
leave
mov
cld
or
adc
mov
pop
lcall
cmp
push
push
or
pop
sub
sub
je
pop
addr16
sub
sub
mov
pop
iret
pop
xor
jecxz
pop
aam
repz
jo
popa
xchg
jnp
and
push
jns
rol
neg
sub
dec
loope
xor
out
xlat
jnp
pop
notb
stos
push
jb
fildll
sbb
enter
pop
es
sbb
lcall
movsb
sub
test
cld
or
adc
xchg
stc
cmp
pusha
or
pop
inc
sbb
pop
fistl
mov
mov
xor
call
lahf
jb
dec
out
sub
shrl
adc
pop
shll
insl
into
pop
adc
sbb
push
js
cmpsb
dec
scas
cmp
jg
popa
popa
xchg
dec
dec
imul
popf
jbe
imul
mov
jns
sbb
sarb
or
std
or
rcll
xor
leave
xchg
push
jno
push
add
mov
bound
scas
movb
cltd
add
inc
xchg
mov
stos
push
testl
fstps
mov
and
mov
mov
stos
mov
int
repz
xchg
ret
movsl
cmp
ficomps
shll
lahf
addr16
imul
fnstsw
push
mov
test
xchg
push
and
sbb
cltd
fnstsw
out
pushw
mov
pop
sti
xor
and
xor
pop
pop
push
cmpsb
cltd
xor
test
cltd
jecxz
mov
stc
jns
or
mov
data16
dec
iret
mov
lods
add
fwait
mov
out
xchg
aas
mov
and
inc
xchg
sub
fsubl
loop
xor
icebp
clc
pop
pop
mov
push
and
push
ss
cmp
and
repnz
jns
and
push
sub
ret
das
jge
adc
mov
jmp
add
and
shl
les
jmp
push
cmp
fs
jno
lret
add
mov
push
or
loop
pop
fcmovne
fdivrl
cli
in
dec
das
sub
or
sub
dec
in
stos
jecxz
sub
data16
aad
loope
test
or
adc
movsb
repnz
jno
mov
inc
loopne
leave
inc
jo
cmpsb
dec
sub
out
aad
nop
dec
stc
mov
nop
in
loop
adc
std
jbe
jmp
dec
idivl
lcall
cmp
movsl
fadds
dec
cmp
cmp
fmuls
test
cmp
jecxz
xor
sub
pop
in
sbb
mov
das
shr
test
stos
jl
mov
sbb
mov
out
fdivs
and
mov
repnz
fcoms
xchg
xorl
mov
mov
f2xm1
ficoml
call
add
enter
jnp
popa
pusha
jg
data16
jbe
or
imul
outsb
scas
jle
pusha
dec
addr16
pop
orl
pop
mulb
mov
ljmp
push
lret
jmp
lods
mov
mov
in
dec
push
mov
dec
dec
stos
fiaddl
sub
push
cmp
into
add
pop
mov
das
shl
push
jg
enter
lret
ljmp
mov
in
pop
dec
and
dec
pop
pop
push
clc
gs
jae
mov
outsb
aaa
cmp
out
je
and
mov
add
sbb
cmpsb
and
leave
daa
sub
imul
movl
sbb
scas
sub
stc
fwait
mov
push
aam
cmpsb
cld
mov
insl
or
mov
std
pusha
adc
inc
fisttpll
mov
cwtl
push
jnp
or
bound
test
push
mov
outsl
xchg
sahf
cmp
vpor
and
subb
arpl
test
adc
sub
hlt
sub
adc
adc
pop
loop
pop
sub
xchg
sarb
lock
cli
dec
push
pop
icebp
pusha
xchg
fsts
pusha
fcmovu
dec
nop
lock
mov
mov
dec
in
sub
imul
pushf
inc
nop
cs
jg
add
in
mov
or
inc
call
jle
mov
sbb
mov
pop
andl
adc
imul
xchg
jge
ja
jb
fists
sbb
shll
fcomi
and
mov
in
mov
shlb
in
or
cmpsl
cwtl
and
xor
sub
scas
cmp
in
cmp
les
lret
mov
lods
jg
arpl
add
test
sbb
in
scas
xor
xor
test
stos
xchg
enter
and
fldenv
and
fmull
cmp
lret
or
je
mov
pushf
scas
cmp
adc
or
cli
mov
push
lcall
pop
cmc
bnd
daa
insl
dec
push
adc
daa
xchg
outsb
in
stos
ret
jmp
cmp
shlb
sub
cmp
adc
arpl
push
cmp
ret
cltd
mov
aam
pop
addr16
addr16
xchg
je
orl
and
push
mov
das
dec
sahf
inc
xchg
stos
add
jl
mov
cmp
cmpsb
jmp
push
pop
lahf
xchg
loopne
shrb
insb
push
sbb
jbe
xor
int3
sub
outsl
pop
mov
and
xchg
out
insl
cmp
sub
pusha
adc
sti
cmp
lahf
push
fdiv
js
mov
clc
test
sahf
sahf
and
jne
sbb
sbb
in
fstpl
pop
mov
ds
cmp
in
dec
shrl
or
sbb
imul
test
mov
jp
and
cmc
push
les
filds
sub
pop
xorb
dec
push
aas
popf
dec
push
adc
inc
nop
hlt
mov
dec
jns
nop
scas
into
mov
dec
out
cmpl
test
mov
xor
mov
xor
push
xor
sbb
sub
aad
fsubrl
cmc
jae
scas
clc
daa
mov
mov
jno
adc
ja
add
sub
fcomp
gs
push
inc
cmp
push
push
iret
or
mov
jmp
adc
ljmp
test
cmpsl
outsl
mov
push
xchg
stc
cld
loope
mov
mov
test
sub
xor
push
lock
cmp
outsb
pcmpeqd
pushf
cwtl
in
mov
dec
adc
mov
jl
sub
fnstsw
popf
pop
xor
aas
inc
xchg
and
xorb
fwait
mov
push
push
sbbb
jne
inc
lock
ret
inc
adc
cmpsl
in
push
fs
leave
mov
inc
cmpsb
dec
outsl
inc
clc
xchg
sub
sbb
add
jmp
mov
mov
cmp
loope
mov
mov
xchg
insb
sbb
stos
inc
test
jnp
dec
pop
dec
jmp
pushf
fimuls
je
decl
add
lcall
les
dec
xor
adc
dec
sub
loop
xchg
icebp
sub
pop
mov
mov
jge
mov
mov
adc
xor
ficompl
push
das
lds
mov
jge
fucomp
cmp
flds
cmc
and
mov
push
pop
push
jmp
fldl
adc
xchg
push
or
add
push
mov
int
in
mov
in
jmp
sub
imul
shrb
jae
mov
cld
or
cmp
out
cmp
sub
jae
shl
call
cmpsb
sub
roll
inc
pop
adc
add
sahf
outsb
rcr
push
in
cmpsl
repz
mov
and
and
sbb
in
cld
mul
and
mov
pop
imul
insl
dec
xchg
pop
inc
dec
js
dec
add
push
dec
push
cli
lock
repz
repz
fisubrs
inc
daa
arpl
mov
mov
jp
jmp
xor
into
push
xor
pusha
hlt
jo
xchg
mov
xor
rolb
xor
mov
sahf
jl
pop
and
rcr
xchg
repz
push
mov
adc
mov
scas
pop
jmp
or
mov
loopne
adc
pop
imul
loopne
outsb
insl
test
jge
mov
cld
push
add
or
jno
xchg
cmc
sub
leave
js
repz
and
incb
mov
nopl
mov
icebp
or
mov
cmp
inc
sub
sub
cmpsl
out
mov
jno
jmp
cmpsl
add
enter
negl
inc
pop
shlb
pop
ficomps
jg
xchg
popf
add
addr16
leave
dec
ja
xorb
mov
or
push
push
scas
ja
jl
rorb
push
fstl
mov
loop
je
leave
mov
fs
add
shr
xor
dec
cmp
and
mov
out
in
cs
mov
mov
test
ret
pop
sub
cwtl
mov
pop
push
loop
pop
push
in
fisttpl
shld
scas
cmp
mov
lret
adcl
sbb
mov
fists
sub
sbb
cs
xchg
or
inc
gs
push
mov
ja
xor
iret
pop
pop
push
dec
xchg
pop
icebp
or
outsl
aad
stos
rclb
mov
cmc
movsl
and
xchg
jbe
push
in
push
in
movsb
jp
sbb
mov
fs
lea
jl
push
rcll
cli
pushf
dec
loop
shrl
pusha
loopne
xchg
cmpsl
cs
inc
mov
das
lret
mov
aaa
mov
push
outsb
cmp
imul
pushf
shrb
adc
js
test
adc
inc
adc
cltd
xchg
pop
mov
sti
dec
shrl
stc
adc
dec
sub
jecxz
and
push
lds
dec
das
pop
mov
or
adc
jae
cwtl
ds
inc
xor
push
jecxz
mov
push
mov
xchg
iret
loope
add
push
inc
test
mov
push
mov
pop
gs
pop
cmp
shrd
mov
add
mov
cmpsb
adc
cmp
push
enter
popa
pop
popf
outsb
js
enter
inc
cmp
mov
cmp
and
daa
xlat
jmp
iret
cmp
insl
aas
jg
cmpsl
out
pop
cmpsl
xchg
push
lds
dec
fsubrl
add
in
or
daa
pop
outsb
push
pop
bound
inc
cwtl
jge
mov
adc
das
test
dec
sahf
lret
pop
mov
push
in
or
add
fs
popa
ljmp
dec
pop
add
cld
inc
insb
aas
inc
adc
lods
xchg
popw
cs
clc
push
or
mov
js
cmp
call
push
inc
push
fldt
or
stos
mov
arpl
mov
push
adc
cmpsl
xchg
jl
jmp
les
pop
cmpsb
nop
repnz
cwtl
mov
jl
in
pop
mov
mov
sbb
cld
mov
jge
sub
inc
xchg
add
jae
mov
cmp
sub
imul
iret
inc
scas
inc
inc
mov
stc
aaa
xor
mov
les
je
mov
or
insl
pop
fs
bound
xchg
fisubrs
adcl
nop
sar
jle
incl
jno
cmp
int3
lea
xchg
lea
push
jecxz
loopne
int
adc
sbb
in
int3
xor
xchg
pop
mov
or
imul
mov
loope
js
sarb
adc
and
jp
lods
pop
bound
std
mov
popf
jae
into
inc
push
xlat
arpl
adc
push
test
in
dec
pop
and
xchg
push
mov
push
sbb
xchg
inc
std
das
add
scas
mov
dec
or
jno
inc
adc
and
fs
sbb
or
sub
pop
ret
mov
mov
sub
mov
push
pop
add
insb
xchg
aaa
xchg
dec
sbb
std
fnstsw
fists
inc
jl
jne
shl
aaa
xchg
fistpll
cmp
fwait
loop
stos
dec
cmc
mul
push
cmp
xlat
cmp
fildll
cmp
inc
xchg
fisubs
out
jnp
pop
xchg
je
jge
arpl
jnp
jg
inc
inc
sub
xor
mov
inc
test
pop
push
popf
cld
jns
xor
or
stc
shl
mov
call
ret
fisttps
dec
mov
pop
es
mov
cmp
xor
clc
and
ja
enter
adc
lcall
add
fs
cmp
push
xchg
shr
cmp
pop
out
jl
cmp
loope
neg
ss
loop
sbb
test
pop
mov
mov
lods
shll
push
bound
fisubs
mov
stos
adc
mov
mov
cs
push
test
fbld
inc
and
shl
inc
aam
loopne
mov
or
sub
mov
repz
imul
mov
test
pop
xchg
daa
or
push
mov
ds
loope
js
in
mov
jge
je
push
cs
pop
lods
iret
mov
dec
lcall
aas
out
cwtl
inc
shll
aam
ds
popf
push
mov
aad
lds
inc
imul
lock
add
rorl
fnstenv
lock
outsb
or
clc
sbb
int
pop
mov
movsl
cmp
addr16
xchg
dec
jns
popl
cmp
lea
pop
aam
inc
imul
pop
stc
or
pop
add
mull
mov
dec
sub
inc
push
add
or
push
inc
enter
aas
ficoms
das
sub
lcall
push
nop
dec
out
xchg
dec
and
xor
adc
fnstcw
xchg
inc
mov
js
sbb
pop
pop
aam
or
cmc
loop
mov
dec
aam
ficoml
aaa
or
sbb
push
stc
loop
ds
lds
sub
xor
fwait
mov
and
adc
sub
nop
repnz
cltd
push
je
adc
cmp
sarb
push
dec
xor
loopne
jnp
fnsave
test
mov
sbbl
inc
jno
dec
fs
scas
test
sbb
sbb
fbld
aad
push
adc
xchg
stos
mov
dec
dec
pop
lods
mov
les
or
lret
inc
adc
sbb
or
dec
dec
and
jno
lcall
sub
mov
jbe
mov
add
cmp
sbbl
out
jmp
dec
mov
jp
popf
and
dec
dec
pushf
pop
inc
push
cwtl
je
xor
jb
lds
mov
je
or
test
pop
fs
jne
sbbl
icebp
mov
pop
inc
xor
mov
fidivrs
aam
sbb
xor
lods
mov
andl
or
add
outsl
sub
adc
push
sbb
cmp
cmp
dec
roll
addr16
fs
rcl
jnp
dec
or
cwtl
jg
sub
mov
mov
ret
cmp
out
aad
push
push
enter
cs
fmull
sub
inc
out
loop
fcom
clc
sahf
pop
cmpl
cmp
mov
mov
or
jmp
mov
cmc
pop
jge
idivb
dec
dec
call
fs
mov
lret
outsb
cltd
cmpsl
out
fdivl
dec
or
loope
daa
js
adc
mov
mov
mov
int3
ret
scas
movsl
mov
and
scas
stc
ds
cmp
into
repnz
sti
data16
out
out
and
mov
mov
jno
bswap
xor
or
push
xchg
jl
ret
mov
xchg
cld
mov
fnstenv
test
dec
pop
in
cmp
in
cmp
dec
addr16
cwtl
cli
xor
mov
icebp
xor
jl
sbbl
xor
inc
ret
dec
inc
xchg
xor
adc
movl
jbe
xchg
or
xchg
js,pn
scas
mov
jg
push
adc
mov
dec
out
jno
scas
addb
pop
cmp
jmp
lahf
xor
icebp
cwtl
fisttps
std
cmc
xor
push
or
push
xor
int3
hlt
jno
addr16
mov
add
push
rcrb
fsubr
mov
repnz
xchg
cmpsl
dec
push
outsl
das
cmc
sbb
cmp
fsubs
test
rdtsc
push
js
jp
jmp
mov
sub
shlb
je
dec
pushf
add
in
daa
dec
dec
pop
mov
xchg
inc
cwtl
fcmovu
jns
es
push
push
mov
movsl
dec
jns
pushf
adc
popa
cmp
pop
clc
das
mov
lods
lea
mov
lcall
inc
pop
aas
in
in
imul
fndisi(8087
stos
fiaddl
cli
mov
adcl
es
push
adc
cmp
sub
ret
pop
xchg
test
xchg
fsubrl
pop
and
push
adc
lcall
rorb
into
into
ljmp
aad
lods
ja
popl
lcall
xor
stos
mov
adc
lea
aam
mov
je
sub
mov
jge
adc
inc
cltd
unpckhps
mov
cltd
test
sub
mov
mov
sub
stc
mov
mov
and
push
adc
adc
mov
movsl
dec
mov
aad
push
dec
cmp
fbld
sbb
popa
and
loop
lds
push
addr16
push
das
push
pushf
adc
outsb
mov
push
loope
ffreep
jbe
jns
add
push
mov
movsb
cmp
and
sbb
xchg
popa
jp
xor
rorl
sbb
push
cs
and
in
cmp
ret
dec
or
and
pop
jmp
lret
xor
rcl
mov
or
adc
lds
add
aam
adc
into
fwait
addr16
aas
xchg
mov
movsb
inc
jne
mov
sub
shlb
es
xor
outsl
pop
cmp
jp
xchg
scas
xlat
cmp
pushf
push
aad
dec
out
cld
mov
push
rcrl
mov
sbb
sbb
loope,pn
xor
in
fildl
mov
xor
xchg
imul
nop
sarb
cmp
sub
xor
fsubl
addb
std
imul
mov
test
sbb
xchg
mov
mov
ljmp
std
stos
imul
rcrl
ja
bound
cmp
mov
repnz
push
mov
in
lret
push
out
lret
popa
xchg
aam
mov
push
scas
jno
mov
iret
sub
inc
push
mov
dec
and
mov
pop
mov
mov
ret
jo
in
stc
int3
aas
xchg
xchg
sub
enter
add
cs
fnsave
push
sbb
or
cmp
jmp
push
into
out
sbb
xor
cmp
cs
jnp
push
mov
or
jae
mov
andb
mov
icebp
les
push
cmpsb
popf
or
cmp
push
fbld
sub
xchg
ljmp
inc
fdivrl
and
fcmovu
sbb
out
dec
pushf
inc
lods
mov
arpl
ljmp
int
ja
lea
cmp
or
cli
and
ss
aad
push
aas
in
mov
testl
dec
fbstp
pusha
rorw
out
inc
xorb
ret
xor
movsl
inc
stos
pop
dec
outsb
js
fwait
mov
ss
repz
xchg
push
lcall
mov
ja
inc
sbb
pop
inc
jg
aaa
inc
mov
push
sbb
jno
out
mov
mul
dec
fwait
and
int3
lock
inc
sbb
shll
sbb
shlb
jge
cmc
call
rclb
pusha
adc
incl
shr
jnp
arpl
mov
aam
stos
or
pop
enter
fildl
rcll
sbb
xchg
in
sysexit
add
cwtl
push
cmpsb
mov
xor
incb
mov
push
mov
iret
push
mov
ja
leave
ljmp
push
push
add
movsb
arpl
inc
gs
gs
dec
or
jmp
pop
or
xor
pop
loop
sbb
adc
mov
addr16
leave
cmp
push
xlat
daa
jnp
lcall
into
sbb
lds
ficoml
ja
hlt
dec
cmp
inc
movsb
rorl
adc
lret
jecxz
sarb
xor
push
andl
orl
or
insb
pop
mov
js
or
pop
stc
outsb
pop
sub
lods
pop
mov
adc
ret
insb
mov
enter
mov
cmp
idiv
test
jle
push
inc
cltd
lods
test
inc
push
cmp
sub
lahf
ret
lods
xchg
sub
enter
enter
add
mov
xchg
aam
cmp
push
mov
inc
xchg
mov
push
mov
cmp
and
and
sbb
sbb
call
adc
xchg
pusha
or
jg
dec
repnz
bound
adc
out
mov
inc
mov
fs
fwait
loop
leave
mov
add
lods
imul
xchg
movsl
jns
push
call
in
mov
rcrb
lea
leave
xchg
shl
ror
fldcw
jno
fldl
fidivrs
mov
inc
les
lock
inc
test
adc
sub
jbe
sbb
sbb
jp
cmp
sub
or
popf
cli
fcmovb
int3
jmp
test
xorb
addr16
cli
test
xchg
push
and
stos
cmc
add
jge
es
dec
lea
ljmp
test
mov
in
testl
mov
mov
repz
inc
add
mov
outsl
out
sub
push
rclb
jp
jmp
pop
loopne
push
adc
mov
pop
pushf
cld
aad
cs
data16
sbb
inc
mov
adc
xor
adc
cltd
or
cld
sbb
in
sbb
mov
cmp
ja
xchg
sub
lea
into
jmp
std
pop
adc
inc
jecxz
and
push
in
or
cmp
jne
int3
add
jno
std
or
adc
pushf
sub
jl
jbe
scas
mov
test
or
dec
imul
dec
fdivr
lock
sbb
and
sbb
xchg
testl
sahf
out
js
sub
imul
arpl
imul
repnz
imul
aam
cwtl
insl
push
xchg
in
call
dec
pushf
aaa
clc
jno
pop
cwtl
outsl
sti
clc
and
ljmp
push
and
mov
pop
repnz
test
adc
add
jmp
sbb
lock
cmp
fidivrs
fxch
sahf
sbb
xor
push
sbb
jo
add
push
call
xlat
idivl
jne
test
push
scas
or
push
cmpl
sahf
loop
rorb
jl
movsl
and
gs
pop
mov
mov
lods
sbb
mov
push
iret
jle
test
sbb
mov
push
into
divb
mov
mov
sbb
sbb
mov
add
ret
jecxz
orb
sti
push
push
pushf
dec
fisubs
popa
hlt
cmp
fwait
iret
sbb
dec
lret
dec
fiaddl
pushf
ljmp
insb
test
jns
inc
cmp
jle
mov
sti
sbb
adc
imul
hlt
scas
imul
xor
sbbb
add
cli
inc
mov
adc
xchg
pop
mov
jnp
adcl
shlb
iret
jne
hlt
jnp
push
data16
add
fisttpll
xor
push
or
and
in
stc
push
outsb
imul
std
fists
xchg
jbe
aas
mov
sub
pushf
unpckhps
outsl
push
add
out
lds
cs
and
xor
pop
push
mov
icebp
pop
dec
or
in
decl
and
add
mov
insl
mov
cwtl
test
xchg
jecxz
insb
add
mov
mov
jae
or
jecxz
cmp
cmp
aas
push
xchg
or
push
inc
loop
leave
or
jns
incb
sub
adc
mov
adc
testl
jecxz
lea
pop
mov
mov
adc
je
loope
or
lcall
inc
xchg
mov
adc
movsb
pop
mov
stos
cwtl
or
xor
pop
and
lods
loope
lret
bound
arpl
lods
pop
sub
cwtl
xchg
push
sbb
sahf
push
or
mov
push
rcll
hlt
fsubl
cs
lret
sbb
mov
js
and
test
jo
popa
dec
cmpsb
adc
jmp
xchg
inc
mov
sbb
xchg
outsl
inc
adc
les
movsb
addr16
sbb
enter
ret
push
fisttpl
add
mov
or
in
fcoms
outsb
inc
rorl
outsl
in
add
dec
das
xchg
push
dec
mov
ror
repnz
sar
ljmp
sub
jbe
insl
cmp
enter
xor
ret
testl
xor
xchg
cmp
add
mov
jnp
gs
mov
arpl
and
dec
and
push
cmp
cmp
dec
cld
push
sahf
cli
scas
mov
rclb
insl
sbb
int3
shlb
call
outsl
gs
sub
push
push
pop
pop
mov
out
stos
jmp
push
lea
in
int
aaa
mov
pop
add
fsubrs
jmp
cmp
test
pop
ss
mov
fs
loope
lgs
scas
inc
cltd
mov
outsb
dec
dec
xchg
add
and
out
decl
mov
sbb
push
xchg
test
mov
mov
dec
cmp
mov
push
aad
shlb
fisttpll
and
mov
dec
jmp
xor
dec
push
push
jne
cmp
add
dec
pushf
xor
jle
or
xor
shl
add
lea
xchg
adc
stc
adc
jmp
out
es
out
loopne
or
push
test
dec
nop
xchg
adc
negl
sbb
cmp
adc
xchg
jb
xchg
fwait
and
and
cld
out
cmp
dec
dec
mov
int
out
mov
mov
mov
sbb
mov
cld
cmp
mov
cmp
sub
inc
xor
mov
pop
cmpb
js
sbb
insb
xchg
int
into
and
dec
ja
movsl
fisttps
sbb
incb
nop
add
insl
cmp
push
shrl
popf
pop
daa
stc
not
adcb
xchg
mov
int3
shrb
sbb
sub
push
xchg
cli
fnsave
sbb
movsb
or
mov
sub
jns
roll
xchg
inc
or
inc
or
mov
jge
rorl
inc
idivb
sbb
jge
pop
or
sub
mov
pop
mov
mov
aam
mov
pop
enter
xor
fstl
mov
or
mov
fs
sub
fwait
stos
mov
int
into
jae
mov
push
scas
aad
outsl
dec
sub
sahf
pop
mov
add
jne
scas
scas
jns
add
pop
subl
stos
loopne
pop
int
push
push
add
in
mov
les
jns
jne
mov
or
mov
aas
shrb
iret
cmpsb
pop
aam
in
fcoms
xor
dec
inc
bound
divl
or
mov
inc
lret
leave
mov
lcall
imul
xor
lods
xor
mov
sbb
lcall
push
lret
in
mov
adc
daa
mov
or
negb
cmp
loope
cmp
ficoml
xlat
mov
imul
push
repz
sub
fdivrs
jl
mov
sbb
daa
add
fucomip
js
addl
mov
bound
mov
ljmp
loope,pn
ret
push
ds
inc
popf
xlat
pop
xor
sarl
xor
clc
jl
and
call
fs
shl
mov
mov
dec
ret
addl
ds
pushf
test
pop
ds
stos
mov
xchg
in
pop
inc
sub
sbb
push
pop
js
jmp
jp
mov
jno
leave
cmp
push
pop
daa
push
cmp
loopne
adc
sbb
rclb
and
ret
mov
push
mov
jnp
into
dec
pop
xchg
sbb
hlt
mov
xchg
dec
lods
lods
sbb
pop
inc
jne
cli
push
jmp
mov
fsub
adc
lea
scas
mov
aas
out
mov
xor
sbb
shrb
imul
push
mov
and
jnp
sbb
jb
jle
and
xchg
mov
xor
loopne
jno
push
xor
or
test
loopne
mov
mov
lcall
jb
push
cmp
mov
mov
adc
sub
icebp
pop
xor
sbb
inc
add
sbb
xlat
mov
loop
shlb
mov
icebp
add
sahf
icebp
cld
negl
into
stos
icebp
rcrb
stos
and
or
fldenv
inc
jle
cmp
pop
fisubrl
call
jg
movsb
stos
lret
nop
scas
and
mov
pop
ja
inc
sbb
mov
cltd
std
int3
mov
jnp
sbb
stc
mulb
fstpt
jle
jbe
testb
mov
stos
shll
js
cmp
push
pop
lcall
sbb
hlt
push
jecxz
loopne
mov
das
or
cmpsb
push
filds
lcall
lock
fxch
pop
pop
fcmovb
fimuls
notb
in
jno
inc
out
or
add
pop
adc
sub
xchg
pop
sbb
pop
insb
xchg
mov
out
add
sub
insb
sub
fcoml
fldt
dec
int3
int3
xchg
adc
adcl
fisubrs
arpl
pop
push
inc
imul
mov
scas
add
sbb
add
pop
or
sub
enter
sbb
adc
adc
jbe
dec
xchg
pop
inc
flds
bound
push
dec
pop
pop
or
and
dec
fisttps
mull
pop
jg
fsubl
push
or
pop
pop
mov
lods
fiaddl
in
int
btc
sbb
movsb
mov
movsb
jae,pn
arpl
mov
adc
roll
dec
sub
sahf
stc
jmp
sbb
lea
mul
stos
in
xchg
mov
loopne
jae
pop
mov
jp
sbb
lahf
pop
sbb
jne
mov
rdmsr
fcmovb
sbb
push
dec
adc
mov
fisttpl
lret
xlat
mov
pop
outsl
push
and
push
pushf
dec
enter
inc
push
out
imull
mov
out
dec
jg
push
mov
push
adc
jnp
test
sbb
dec
adc
daa
mov
icebp
sbbl
cmp
adc
sub
cmp
ss
loop
lock
enter
lods
cmp
cmc
fsubp
pop
sti
xchg
mov
dec
xor
or
stc
dec
xchg
xor
ds
out
hlt
sub
push
lahf
pop
pmuludq
jecxz
jno
sahf
das
or
or
push
jp
dec
cmp
pop
ret
push
mov
pop
clc
call
ss
xor
stc
mov
mov
push
subl
push
xor
pushf
lods
out
xchg
repnz
mov
aam
fistpll
mov
bound
mov
mov
xor
and
push
clc
imul
adc
out
cmp
pop
pop
lret
and
loop
or
repnz
inc
cmp
sub
lods
jg
sub
not
into
mov
aas
xorb
jns
sti
shll
enter
iret
push
or
xlat
cmpsl
add
push
adcb
and
xchg
lock
mov
out
fdivs
xor
repz
cmp
pop
test
jne
sub
mov
or
ret
dec
xor
pop
dec
clc
xorb
leave
xchg
push
adc
push
and
dec
cmc
nop
ret
aaa
cmp
cli
jg
dec
pop
nop
cmc
repz
xchg
sbbl
imul
jle
adc
mov
cmp
and
adc
cmp
insl
cmpsb
inc
arpl
add
cmp
adc
pop
std
ljmp
jmp
adc
repz
xor
mov
push
mov
rcrl
xchg
sbb
movsb
mov
shll
aam
jne
les
daa
imul
jmp
out
pop
or
and
mov
mov
sbb
fwait
jo
mov
pop
xor
xchg
inc
xchg
into
rcl
lock
outsb
test
clc
ljmp
in
mov
daa
daa
std
jp
dec
add
and
icebp
jge
cmp
lahf
jmp
out
shll
inc
scas
adc
add
pop
addr16
xor
adc
mov
andb
push
inc
sti
xchg
mov
call
mov
inc
scas
sub
mov
xchg
adc
pop
push
ljmp
ret
movsb
gs
push
jmp
mov
inc
add
pusha
push
stc
push
dec
adc
push
rcll
mov
pop
out
inc
cwtl
mov
mov
test
sub
je
std
sub
pop
or
and
popf
pop
out
and
mov
push
push
es
push
mov
ret
fsubl
mov
leave
stos
cmp
jbe
mov
aaa
std
mov
inc
cltd
outsl
cmp
lods
dec
lock
ret
das
aaa
out
int3
jmp
mov
out
ret
add
fscale
gs
inc
or
mov
aaa
mov
mov
insb
mov
dec
mov
mov
sbb
lods
test
sahf
cs
in
or
lea
in
mov
dec
popf
or
shr
xlat
insl
cmp
add
mov
fisubs
stos
xor
lahf
jne
dec
fldl
fsubrs
sbbb
iret
rorl
fiadds
shrl
clc
in
xchg
cmp
and
cmp
stc
scas
cmpb
sbb
sbb
sbb
aam
pop
push
jbe
stos
fwait
pop
std
cwtl
sti
jg
test
inc
clc
sub
repnz
xor
fs
mov
imul
enter
loop
mov
xchg
and
mov
jnp
leave
iret
jle
imul
pop
imul
mov
shll
mov
or
mov
arpl
lret
mov
push
sbb
shlb
pop
mov
rorb
cmp
pop
stos
dec
mov
xchg
jle
ja
mov
out
push
aas
push
jae
mov
xor
hlt
int3
subl
sub
fisttps
inc
adc
sti
les
pop
mov
fnsave
inc
and
xchg
jecxz
fstpt
loop
xchg
jecxz
push
test
or
inc
jno
imul
add
and
and
jo
push
lds
shrb
stos
call
stos
add
ljmp
fsubrs
mov
movsb
and
jmp
test
pop
and
aas
rclb
es
add
loop
pop
int3
or
ret
xorb
nop
inc
mov
lds
adc
pop
test
aaa
pop
adc
xchg
mov
imul
imul
dec
cld
xchg
sub
push
ds
int3
test
push
aaa
rolb
les
jns
cmpsl
push
sub
mov
leave
xchg
push
push
mov
pop
adc
or
mov
jecxz
inc
aaa
mov
call
orl
cmpsl
cli
addb
cmpsb
int
xor
mov
rclb
fsubl
out
repz
out
pop
sbb
cmpsb
ljmp
fwait
xchg
fsubrs
jecxz
adc
fnstsw
movsl
ljmp
mov
push
int
insl
xchg
pop
push
pop
and
pop
xchg
lret
sbb
mov
mov
into
aam
and
in
pop
stos
jecxz
ret
mov
cltd
xor
add
dec
cmp
mov
inc
push
jno
sbb
fwait
xor
push
cld
sbb
bswap
and
jmp
rorl
and
mov
dec
dec
adc
push
lahf
mov
inc
xchg
adc
sahf
cltd
push
push
inc
add
insl
cmc
inc
lea
pop
pushf
aam
imul
dec
jb
push
lea
fwait
add
mov
sbb
xchg
pop
insb
sbb
cmp
movsb
sbb
loope
or
loope
adc
push
xchg
int
lods
mov
pop
leave
fwait
stos
daa
insl
inc
add
fcmovnb
lret
fldt
push
xor
mov
inc
imul
lock
pop
push
mov
jl
dec
fisttpl
mov
push
cld
jmp
js
mov
loope,pn
stos
jmp
into
loope
adc
pop
ficoms
or
xlat
adc
adc
jbe
arpl
jne
jb
lea
mov
xor
dec
push
jnp
cwtl
pop
stc
xor
xor
mov
jnp
fsubs
int
rorb
mov
jg
mov
fcompl
inc
inc
xchg
dec
cmp
fadds
mov
push
or
mov
movsl
push
jbe
stc
out
or
int
outsb
xor
icebp
push
lods
iret
int3
jno
mov
push
aaa
aaa
sub
add
jnp
mov
dec
fld1
mov
sbbl
mov
mov
jg
mov
inc
xchg
push
inc
imull
push
pop
pop
in
jae
jp
cmp
sbb
mov
push
pop
rclb
mov
fbld
pushl
test
imul
aad
cmp
or
adc
rcrb
sahf
xchg
arpl
imul
into
push
add
cmp
bnd
mov
cmp
inc
push
sbbl
dec
push
int3
xchg
cmpsl
jg
push
addr16
xchg
and
dec
jg
and
lahf
mov
sub
jae
lret
leave
mov
cli
add
fiadds
inc
and
pop
insl
not
gs
es
push
cmp
into
sub
mov
cmp
int
mov
or
jl
mov
rcrb
pop
mov
fdivrl
gs
into
adc
nop
shrl
jle
sbb
iret
mov
ss
aas
movb
inc
fndisi(8087
das
jo
push
pop
rcrl
ficompl
ja
adc
pop
movq
lret
stos
jl
mov
xchg
sbb
mov
cmp
lret
mov
inc
test
aam
sarl
test
retw
lcall
cmp
dec
cmp
jno
sub
fs
lcall
jecxz
rorb
jge
aas
fcmovnu
daa
cmp
dec
adc
cmp
add
sbb
xchg
addr16
movsb
mov
xchg
lahf
jae
xor
subb
leave
js
popa
imul
xchg
ja
fs
dec
jbe
bound
jno
xor
jae
cmc
mov
fs
and
xchg
jle
lcall
pop
xchg
movsl
dec
clc
leave
and
dec
push
xchg
mov
testb
sbb
mov
orl
dec
addr16
cmpsb
push
mov
iret
xor
fldenv
cmpsl
add
add
adc
dec
test
pop
xchg
fidivs
jne
pusha
dec
es
in
jp
cmp
je
in
cmpsb
repz
scas
mov
mov
insb
add
mov
arpl
sarb
mov
push
push
sahf
sti
inc
cld
ja
daa
insl
xchg
enter
sbb
mov
cmp
aaa
ja
and
pop
mov
popf
sbb
loop
xlat
movsl
in
orl
rcr
mov
je
clc
mov
pusha
inc
cwtl
fs
fs
jae
out
dec
push
gs
and
lret
xchg
xor
and
xchg
xchg
out
inc
loop
call
mov
test
xchg
sbb
repz
inc
adc
cmp
loope
and
out
xchg
test
or
aam
cld
mov
mov
or
push
out
xor
fcmovnb
hlt
loope
cmp
in
push
xor
cmpsl
cmp
mov
jecxz
cld
mov
popa
adc
lret
mov
enter
icebp
rcrb
pop
gs
jae
pop
inc
push
xchg
subb
sub
push
adc
push
mov
and
xchg
pop
notb
push
inc
sbbl
xor
pop
es
and
and
jb
inc
xchg
andl
xchg
ds
test
outsb
ficoml
in
in
pop
push
aaa
into
fsts
mov
enter
mov
stc
add
mov
push
mov
je
es
pop
mov
mov
ret
in
pusha
dec
add
mov
jno
into
divb
lahf
mov
in
in
sbbl
aad
mov
cmp
loopne
jbe
pusha
js
loop
jle
in
pop
nop
stc
div
mov
inc
fdivrs
call
daa
push
pop
cmc
lods
les
pop
mov
pop
lcall
cmp
mov
mov
mov
adc
and
jge
jbe
dec
adc
mov
sbb
pop
ss
jp
fisubrs
mov
imul
jmp
int
xchg
xor
and
cmp
and
or
mov
lea
repz
incl
and
inc
jge
xchg
adc
jl
roll
out
jecxz
xor
pop
shll
sahf
shrb
mov
pop
dec
xchg
xor
loop
push
adcb
fld
adc
mov
xor
ja
popa
cmc
outsl
sbb
sub
cld
popa
mov
shrb
into
pusha
cmpsb
xchg
sub
cmpl
or
xor
mov
loope
push
setl
lock
sahf
mov
outsl
sub
push
es
out
enter
push
dec
cld
nop
in
xlat
sub
std
ja
rol
jge
mov
jb
mov
xchg
mov
scas
imul
dec
mov
stc
lahf
stc
adc
mov
adc
ror
fisttps
mov
mov
clc
les
dec
popf
loop
jnp
shl
xor
pop
stc
xor
es
pushf
sbb
scas
jp
mov
add
push
jge
or
inc
sbb
dec
icebp
mov
roll
outsl
out
imul
mov
in
mov
xchg
in
pop
mov
inc
mov
or
leave
mov
push
jge
mov
inc
inc
lahf
iret
cmova
xchg
jae
and
sti
mov
jl
repnz
rclb
adc
jp
flds
and
cmc
mov
sarb
lock
test
xchg
push
loopne
psllq
testl
sub
scas
sti
and
jno
lods
xor
inc
stos
add
and
pop
mov
dec
mulb
loop
jecxz
lods
jl
jbe
mov
push
rolb
adc
mov
add
ja
push
push
hlt
fldenv
pusha
loopne
ret
push
scas
imul
mulb
jmp
addb
adc
fs
sbb
sub
mov
or
pop
fildl
rcll
mov
push
xchg
add
cmc
pop
jecxz
fwait
pop
and
test
sbb
repz
mov
mov
je
cmp
divl
std
push
add
fbld
cmp
xor
loop
inc
out
mov
leave
test
jno
ds
loop
popa
xchg
jbe
scas
ret
inc
push
push
add
jne
jg
and
test
ds
xor
sbb
and
fisubrs
loope
sbb
aaa
dec
sbbb
mov
addr16
sbb
push
and
pop
jb
jg
jp
or
or
loopne
pop
xchg
outsb
add
mov
mov
loop
stos
jno
xor
xlat
push
punpckhdq
scas
inc
xor
dec
jb
push
cmp
lds
shll
sbb
cltd
push
adc
int3
xchg
sarl
sbb
addr16
aaa
fisttps
sbb
sub
aaa
gs
decb
add
mov
mov
mov
dec
in
push
imul
stc
add
out
sbb
loop
rcrl
ss
mov
lret
pop
cmc
imul
outsb
xchg
cmp
insb
repnz
insl
mov
sub
inc
ds
loopne
xor
cmp
es
xchg
add
rcr
and
or
push
cmp
call
std
icebp
scas
pop
and
adc
mov
xor
fistpl
xor
mov
fwait
mov
inc
cmp
lcall
cwtl
cmp
lcall
cli
dec
xchg
mov
lods
bound
popa
mov
xor
sub
cwtl
cmc
inc
xor
pop
dec
mov
fisttpl
hlt
fnstenv
push
jnp
ds
je
or
int3
mov
sub
bound
jns
mulb
pop
dec
hlt
push
mov
push
push
cmc
add
or
clc
ja
jmp
xor
cmp
push
or
mov
pop
xchg
dec
jo
xchg
pop
sub
fistpll
orl
stos
push
cmpsl
xor
jne
aaa
testb
push
ja
fdivs
mov
movsb
repnz
fdivl
mov
fistl
data16
sub
mov
fmuls
jp
mov
or
sbb
xor
imul
repz
jno
xchg
jns
lds
bound
or
push
cld
call
sahf
mov
and
cmc
xchg
fmull
rcrl
add
mov
jno
pop
addr16
mov
int3
mov
jae
xor
mov
add
ret
movsl
iret
mov
lea
insb
cmp
jp
lods
mov
ja
push
mov
or
xor
jnp
jge
ss
lock
push
jg
jno
pop
mov
cmpsb
cmp
fistps
nop
xchg
xor
jnp
jp
les
add
sub
xor
jnp
bound
mov
or
add
dec
outsl
in
sarb
inc
push
fucomp
ret
je,pn
aas
sub
arpl
ljmp
and
shl
adc
jmp
dec
inc
jecxz
or
scas
into
scas
add
or
outsl
lret
xor
prefetch
fsubr
aam
or
push
push
pop
adc
aad
dec
mov
inc
pushw
inc
mov
adc
sahf
xor
pusha
mov
sub
mov
add
dec
mov
sub
xor
fnstsw
out
aam
or
sti
repnz
outsb
cmpsl
fists
mov
lahf
and
inc
pop
pop
mov
sbb
sbb
mov
cmp
pusha
mov
xchg
es
xchg
in
add
jns
pop
js
add
jge
incb
repz
inc
add
pop
inc
xchg
mov
addr16
lds
in
pop
jnp
lods
inc
test
and
mov
div
dec
cmp
in
out
add
imull
nop
pop
push
in
int
inc
les
jl
divb
cli
cmp
out
scas
imul
icebp
fisubl
mov
gs
inc
jmp
into
xor
ljmp
adc
lods
sbb
test
xchg
dec
js
and
rsqrtps
xor
push
je
in
jge
mov
and
push
aad
pop
repnz
sub
ret
insb
inc
pushf
mov
add
sbb
dec
movsl
ja
fdivl
cld
loop
rcl
dec
pop
mov
mov
adc
decb
mov
pop
cli
data16
stos
jp
shrb
cmp
dec
jmp
or
cmp
and
lods
loopne
out
xchg
aas
dec
jbe
jo
inc
fcomps
dec
outsb
adc
add
dec
xor
push
addl
and
sti
mov
out
add
xor
lods
xchg
and
push
std
out
pop
mov
push
or
into
mov
loope
lcall
out
aaa
sub
popa
dec
out
rclb
mov
mov
lods
idivl
rcl
popf
xchg
and
push
test
push
xor
inc
or
aas
fisttpl
xor
inc
or
in
lods
movsb
mov
push
push
ffree
popa
xchg
xchg
fxch
ret
cmpsb
sub
dec
mov
lret
inc
dec
cltd
addr16
inc
into
das
ja
add
inc
pop
xlat
addb
pushf
add
mov
in
adc
bound
das
push
cld
outsb
push
js
loope
dec
jae
lret
loopne
push
mov
mov
pop
xchg
loop
fdivrs
mov
push
imul
mov
dec
pushf
add
inc
sub
in
test
cmp
xchg
mov
push
xchg
mov
sub
mov
lahf
fs
push
loop
dec
inc
in
cmp
push
cmp
dec
fbstp
mov
pusha
jae
imul
or
pop
or
imul
push
or
lahf
arpl
sbb
cli
inc
mov
roll
ja
jae
aam
xor
subb
sbb
into
mov
mov
in
jp
push
xchg
fstl
clc
xchg
dec
sub
xor
stc
out
mov
dec
dec
mov
loope
mov
adc
push
pop
push
mov
ds
pusha
test
stc
in
push
push
jno
enter
mov
xchg
sub
stos
jnp
test
aaa
pop
and
jne
and
mov
scas
cmp
jno
xor
and
adc
jae
addr16
xchg
push
and
pushf
xchg
sti
cmp
js
les
xchg
xor
inc
cmp
shlb
mov
lds
std
test
cmp
xor
lea
mov
jmp
sbb
cwtl
and
call
push
xorl
out
dec
mov
mov
mov
or
imul
cmp
pop
sahf
sub
aaa
sub
xor
test
out
and
aad
push
push
sub
sahf
mov
andl
sbb
jg
outsl
cmpl
rcrb
mov
push
dec
push
and
adc
daa
lea
sti
jmp
ret
and
add
inc
adc
cmp
inc
pop
nop
pushl
push
jo
lcall
cmp
imul
enter
fdivrl
xchg
xchg
rcll
pop
scas
inc
inc
xchg
cmp
or
fsub
mov
sarb
stos
dec
icebp
sub
mov
sbbb
popf
dec
imul
pop
out
mov
jo
mov
jnp
cwtl
inc
stos
mov
cmp
insb
jge
jns
xchg
out
stos
or
and
mov
jle
aad
cmp
xchg
fs
pop
or
push
mov
loopne
aaa
pmaddwd
dec
mov
mull
mov
push
pop
mov
jb
movsl
push
push
jmp
mov
or
bnd
mov
loop
cmp
je
inc
jae
aas
mov
aad
sar
xor
fistpl
into
sub
bound
rclb
insb
xchg
dec
aas
sti
aam
in
adc
icebp
mov
sbb
push
jae
jmp
or
inc
ret
insb
or
std
movsb
dec
mov
sbb
iret
flds
out
dec
mov
daa
insb
jns
sub
mov
data16
sbb
adc
cld
xchg
lret
mov
inc
xchg
xor
dec
pop
push
enter
mov
call
fsin
pusha
in
inc
push
push
pop
inc
xchg
push
mov
or
xchg
out
outsb
aas
or
mov
mov
mov
xor
push
mov
push
sub
adc
dec
jbe
cmp
inc
dec
sbb
jle
lds
pop
xlat
dec
or
mov
mov
mov
shlb
popa
mov
mov
or
push
mov
aad
mov
jge,pt
ljmp
leave
xchg
inc
cmp
stc
jbe
mov
or
loop
mov
or
rclb
pop
dec
daa
and
outsl
es
ror
sub
faddl
fwait
push
and
and
sub
jne
xor
testl
mov
add
test
std
cmpsl
xchg
push
adc
adc
stc
fisttpll
mov
imul
incb
or
xchg
push
imul
hlt
in
mov
jns
fldl
dec
scas
repnz
jae
jno
int3
fisttpl
xor
aas
pop
fidivrl
pop
roll
add
iret
add
pop
push
sub
dec
fs
in
xchg
xchg
das
cmpsl
lods
fdivl
rorl
lret
xor
lea
arpl
aas
lock
sub
sbb
in
push
adc
setge
xchg
fsubrl
mov
add
jl,pn
mov
xchg
mov
xor
cltd
lock
cmc
pop
fidivrl
jnp
pop
popa
cmp
lret
inc
dec
push
dec
push
out
test
dec
out
dec
jnp
and
push
es
int3
mov
in
dec
mov
stos
stos
test
aas
imul
mov
xchg
xchg
mov
sub
xchg
inc
sub
mov
ja
test
inc
xchg
sbb
shll
dec
push
push
pop
adc
push
pusha
popf
and
xchg
cwtl
repz
inc
pop
push
loopne
insb
inc
xor
shlb
sbb
loopne
mov
xchg
pop
xor
fs
loopne
arpl
loope
jo
mov
rcr
push
mov
ret
sub
push
aam
out
or
mov
sub
aaa
out
sbb
mov
cs
in
xchg
mov
jl
les
xchg
aas
mov
cli
lret
int
inc
pop
cmp
enter
aas
sub
pop
and
sub
rcr
loopne
push
out
shlb
ret
leave
jmp
xchg
mov
aad
mov
mov
cli
in
jns
mov
jo
js
xchg
xor
push
adc
imul
rorb
int3
mov
aad
ds
pop
sbb
push
mov
out
push
jecxz
adc
stc
popa
sub
push
jp
sub
movsb
adc
lcall
ret
push
repnz
out
ljmp
xor
pop
ss
mov
jns
enter
cmpl
mov
push
daa
xor
out
stos
pop
pop
fdivrp
push
aad
out
cmp
nop
inc
call
fcmove
fwait
mov
cmp
rcrl
mov
xlat
jge
xchg
sub
xor
jmp
fcompl
push
fs
loope
pop
push
or
cmc
pushf
cs
push
insb
mov
push
xor
inc
push
fwait
jb
and
cmc
lods
adc
add
and
sub
mov
das
dec
dec
ja
xor
pop
shrl
add
sub
push
xor
stc
pop
lods
dec
lea
test
cmp
sub
shrb
pop
jnp
cmp
jnp
xor
into
push
lods
inc
mov
fcoml
and
add
xor
aam
nop
lcall
mov
and
dec
es
sub
sub
pop
sub
call
repz
pop
cli
js
out
xor
iret
imul
sbb
enter
fld1
in
fimuls
ljmp
add
and
xchg
ror
dec
mov
push
repnz
xor
mov
shr
mov
xchg
test
ds
aaa
inc
push
movsb
sarl
sub
inc
jmp
push
mov
pop
cmp
dec
std
fs
sub
and
cmp
sbb
ret
js
fwait
loopne
xchg
jns
jle
leave
cs
xor
leave
adc
xchg
inc
xor
cmp
pop
mov
movsb
xchg
xor
test
insl
js
pushf
jo
jle
loop
cwtl
sub
pop
or
rcrb
jb
xchg
adc
ljmp
imul
out
inc
addr16
sbb
loop,pt
adc
sub
sub
adc
icebp
movsb
sbb
jno
cmpsl
xchg
mov
cltd
mov
add
rcrb
pop
cs
adc
and
mov
or
sub
into
jns
adcl
sbb
jb
pop
lret
clc
mov
xchg
popf
sbb
xchg
mov
lea
push
aad
xchg
push
lret
and
lahf
jo
negb
mov
mov
mov
nop
dec
fisubrl
or
aam
cli
xor
pop
sbb
out
push
dec
dec
enter
cmp
cwtl
xchg
mov
insl
fs
aad
sub
sub
divb
xor
pop
testb
iret
nop
fnstsw
xorb
outsl
sub
mov
addr16
sub
in
pop
bound
enter
xor
out
sub
pop
jns
fidivl
and
and
filds
adc
or
pop
popa
loop
or
push
push
mov
cld
mov
enter
push
cwtl
mov
lods
js
shrl
cmp
mull
pop
aad
and
sub
jne
outsl
sub
xchg
call
faddl
dec
fidivrs
sti
int3
repz
andl
adc
inc
sub
mov
sub
push
dec
not
mov
inc
inc
lahf
xchg
mov
jg
decl
inc
pop
cmp
bound
rorb
add
jo
mov
sbb
xchg
mov
pop
das
jp
scas
mov
gs
push
aam
xor
inc
adc
pushf
int
inc
add
jmp
or
repnz
lods
inc
loope
lret
jns
xor
in
aaa
jo
push
xor
sbb
jmp
mov
dec
iret
mov
mov
testl
ds
cwtl
mov
jge
adc
jle
jl
aam
movsl
push
ss
mov
cmp
dec
in
mov
cmpsl
inc
test
inc
icebp
sbb
and
xchg
sti
inc
fbstp
insl
je
xchg
repnz
pushl
xchg
sub
xorb
push
push
and
adc
xlat
mov
xchg
sub
andb
push
data16
or
fs
and
outsb
adc
aad
inc
nop
cs
fs
int3
mov
xor
and
out
push
xchg
fs
push
and
sub
pop
mov
repz
ret
lea
scas
or
inc
lahf
sub
in
push
mov
scas
or
int3
sahf
mov
push
lcall
jecxz
push
sbb
rclb
jbe
int
das
ret
jns
mov
cld
and
outsb
pusha
gs
sbb
ret
cltd
imul
sbb
sbb
adc
je
call
jo
out
lods
fdivs
fimull
sarl
sbb
sahf
cmp
lahf
inc
jb
jge
mov
out
add
sbb
jmp
cli
ret
and
push
mov
cmp
nop
jge
xor
adc
inc
mov
or
add
daa
sahf
or
add
rclb
cli
sbb
inc
notb
bound
sub
sbb
pop
loope
insb
mov
xchg
cmp
pop
sub
test
mov
jmp
sub
lret
push
mov
popl
sub
mov
ret
fists
mov
pushf
mov
xor
out
sub
cltd
ficoml
push
add
inc
lcall
insb
insl
loop
xchg
lods
repz
inc
rolb
adc
mov
jo
add
mov
cmp
cmc
push
mov
sub
xor
sub
and
enter
cmpsl
fstpl
cmp
jnp
xchg
mov
aad
jmp
movsb
cmpsl
pop
shrb
sub
cltd
pusha
insb
add
movsl
fstpt
push
jmp
fistl
test
and
movsb
mov
mov
mov
mov
ss
loopne
insb
xor
in
dec
cmp
testb
jae
sbb
nop
push
inc
iret
sbb
lea
sub
and
pop
sbb
stos
xchg
cwtl
sahf
or
push
xchg
fs
imul
addb
push
lock
ss
cltd
add
xor
sub
jl
lea
or
mov
xchg
stos
cwtl
subl
sub
sarl
adc
pop
xchg
jns
xchg
sub
inc
and
sbb
fstp
ret
mov
push
xchg
or
inc
jg
jno
imul
jno
fidivrl
push
cmp
mov
jns
xchg
xlat
and
lods
mov
roll
js
inc
fistps
ja
sub
outsb
outsb
repnz
stos
out
hlt
mov
pop
clc
push
lahf
cmpsl
add
and
scas
addr16
pop
scas
pop
cmc
cwtl
pop
push
adc
jmp
inc
idiv
cli
lret
mov
gs
ss
mov
imul
aaa
stc
sub
xor
sahf
adc
movsl
test
xchg
mov
cmp
mov
mov
adc
fneni(8087
inc
lcall
push
pop
mov
pop
cmp
cmc
pop
stos
mov
xor
add
add
cmp
imul
inc
xor
jo
and
push
sub
xchg
xchg
add
dec
and
xchg
mov
shl
shll
jnp
aaa
sbb
mov
push
sub
adc
pop
test
sub
mov
mov
sbb
dec
sbb
imul
mov
sahf
add
add
les
xchg
pop
aaa
inc
into
loopne
or
nop
loopne
addb
mov
or
sub
xlat
jb
push
pushf
push
rcl
aas
and
jl
rcrl
xchg
nop
jge
and
add
xchg
sbb
mov
leave
push
xchg
leave
test
ja
shr
mov
jnp
sub
cwtl
xchg
mov
fildl
xor
ret
cmpsl
je
int
cld
xchg
or
fsubrl
or
dec
leave
movb
js
jecxz
mov
sbb
lods
sbb
adc
lret
pop
cmp
in
inc
pop
adcb
fistps
inc
shlb
aas
aam
andb
jle
mov
test
cmc
jo
jns
into
lret
popf
push
adc
aaa
push
sub
add
les
pop
ja
pop
insl
dec
dec
cmp
ret
mov
push
mov
cltd
into
jns
loopne
add
mov
cmpsb
push
clc
cltd
sub
pop
faddl
into
stc
jbe
pop
imul
test
pop
sub
out
inc
sbb
push
mov
sbb
sbb
addr16
pop
aaa
adc
fwait
mov
xchg
hlt
cmpsb
push
xchg
test
mov
lods
sub
sti
lea
jns
mov
nop
pop
jl
out
loope
dec
xor
push
push
sbb
mov
mov
test
mov
pusha
loope
cmp
int
xor
adc
sub
test
mov
inc
stos
jae
enter
movsb
mov
pop
adc
mov
setnp
sbb
pop
jb
and
xor
in
mov
in
sahf
and
int
and
mov
sub
adc
mov
jb
add
mov
mov
push
lods
pop
decl
scas
mov
sbb
int
xchg
sbb
mov
sbb
jg
dec
frstor
je
mull
lock
loopne
pushf
xlat
push
pop
jne
inc
mov
je
das
sub
arpl
pop
shrb
pop
fsubr
repnz
mov
fdivp
ljmp
sbb
inc
dec
dec
pop
cli
jge
jnp
push
loopne
push
mov
sbb
cmp
xor
je
mov
cld
and
jp
loop
les
push
fwait
inc
jp
loope
mov
mov
nop
cmp
mov
sub
xchg
lret
iret
mov
outsb
test
pop
xor
add
stos
cmpsl
pop
rcrb
xchg
mov
sub
lret
sbb
push
jecxz
out
in
leave
lret
jno
stos
push
cs
out
lcall
xor
je
cld
mov
scas
rol
or
push
cmp
call
sti
testb
pop
mov
add
addr16
cmp
pop
inc
arpl
cmpsb
sub
add
mov
test
repnz
push
loopne
jge
or
add
popf
aas
sahf
push
xchg
stc
jae
and
sahf
adc
data16
sarl
pop
jns
inc
push
scas
jnp
jnp
jp
out
cld
repz
gs
jmp
gs
lock
and
cmovns
add
adc
test
or
jl
sbb
andl
stc
xor
div
scas
testl
out
pop
inc
mov
notl
xchg
and
aam
cmpsb
add
add
xchg
mov
xor
inc
push
sub
fxch
adcl
out
inc
into
xor
shl
and
imul
sahf
ret
aad
cmp
mov
inc
mov
jecxz
sub
addr16
insl
sub
jl
add
adc
push
sbb
push
movsl
xor
mov
inc
and
scas
dec
lock
nop
add
pop
xor
sbb
ret
cmpsb
notl
xchg
loop
xor
daa
cwtl
rcrl
shll
cltd
push
mov
lea
sahf
repnz
mov
pushf
cwtl
pop
mov
push
rolb
sbb
mov
mov
adc
std
mov
cltd
or
repz
out
cmp
out
addb
mov
jle
js
sbb
movsl
cmpsb
orb
cmc
jge
inc
int
repz
ljmp
inc
and
out
das
es
pop
dec
int
ljmp
jecxz
mov
and
pop
xor
xlat
xchg
dec
jp
jecxz
sub
mov
inc
pusha
addr16
add
cmp
pop
gs
mov
dec
stos
into
fsts
or
in
std
fcoml
jl
pusha
sub
aad
sbb
cld
add
pushf
jp
shrl
fadd
mov
rcl
or
pop
js
test
fcompl
loopne
call
dec
cwtl
xchg
sbb
mov
push
adc
xor
lcall
jb
push
sub
mov
aaa
stos
mov
pop
sbb
rcr
push
popf
loopne
stos
movsb
icebp
int3
into
sub
push
lcall
sahf
jae
add
sbb
out
inc
lds
mov
gs
out
mov
dec
addl
roll
push
in
test
pop
aad
imul
popa
xchg
jae
sub
pop
outsb
cwtl
xor
or
and
in
jg
stos
adc
jecxz
adc
sbb
and
dec
idiv
mov
jg
or
cltd
insl
or
xor
jbe
sbb
push
sub
data16
mov
xchg
in
leave
cmp
jg
sbb
xor
cmc
add
xchg
adc
jmp
in
jo
lahf
adc
cmpsl
xchg
push
lods
cli
ds
cmc
hlt
push
bound
or
mov
pop
test
inc
ret
jb
jl
xchg
sbb
ret
adc
bound
and
or
cmp
dec
mov
ret
sub
push
popf
push
sub
xor
sbb
xor
mov
push
stos
push
xchg
adc
push
hlt
jno
push
out
push
dec
and
shlb
or
jle
or
lods
repnz
leave
pop
lretw
mov
mov
add
mov
xchg
popa
xor
in
fldenv
or
dec
test
xchg
leave
sbb
xlat
xchg
je
or
pop
sub
pusha
inc
outsl
mov
mov
push
adc
addr16
mov
inc
pop
in
sbb
es
mov
push
xor
sub
cmc
fmull
fs
imul
pop
inc
in
loop
popa
push
jae
inc
iret
push
add
xchg
scas
xor
ss
cld
add
ret
lret
cmp
pop
adc
push
cmc
lock
into
bound
pop
jecxz
pushl
les
push
jo
sub
nop
jns
outsl
inc
mov
xchg
aad
gs
enter
or
stos
jnp
lcall
scas
dec
hlt
imul
pop
movsb
jp
sub
add
imul
cltd
and
scas
mov
or
sbb
mov
popf
inc
repnz
popa
mov
jge
mov
mov
mov
pop
jmp
mov
lock
outsl
ret
mov
inc
out
or
push
dec
mov
repnz
push
push
sbb
gs
xchg
insb
test
out
dec
xchg
sahf
lret
or
push
xchg
popf
hlt
add
stos
mov
outsl
adc
rcrl
jns
aad
sbb
mov
std
imull
rclb
mov
mov
xor
sahf
lcall
add
addr16
es
push
dec
clc
fs
cltd
or
das
movsb
outsb
test
mov
add
xor
xor
popf
push
popa
js
xlat
dec
cs
lea
cmpsl
cmpsl
inc
adc
aas
push
mov
dec
push
xor
pop
push
ret
outsb
xlat
aam
sbb
inc
mov
jo
rcrb
hlt
pop
mov
xchg
mov
and
sbb
or
sub
dec
pop
xchg
enter
idivl
jl
sbb
xchg
adc
cmp
out
insl
push
add
xchg
cmp
sub
test
inc
pop
mov
lods
and
xor
out
js
add
jno
mulb
xchg
fimuls
push
jne
fstps
dec
jb
xlat
clc
mov
mov
cmp
inc
mov
jg
cmp
enter
js
mov
sahf
repnz
aas
es
popa
mov
ja
add
pop
jno
nop
push
mov
leave
ret
mov
mov
pop
aas
movhps
inc
ljmp
outsb
addr16
clc
add
mov
push
pop
dec
inc
mov
adc
xchg
inc
movb
mov
mov
and
cltd
cmp
lea
cli
icebp
or
add
xchg
movsl
test
mov
or
cmp
iret
icebp
adc
out
pop
repz
fcomps
mov
push
jbe
out
movsl
and
pop
cmp
pop
testb
pop
dec
in
sti
mov
push
jnp
sti
jmp
or
xor
pop
push
divl
push
out
dec
cltd
xor
xor
mov
or
cmpsl
mov
cmc
jl
inc
nop
inc
lcall
adc
mov
int
lods
xchg
and
rcr
fisubs
jecxz
jmp
push
jl
sub
mov
pusha
shlb
ficomps
ljmp
loop
pushf
adc
mov
sbb
sbb
inc
push
and
sub
decb
cmc
jns
ret
mov
je
sbb
and
je
sbb
lcall
jg
sbb
insb
ljmp
mov
pop
out
cmp
aas
jo
fisttpl
wrmsr
add
mov
je
ljmp
mov
test
hlt
addr16
mov
call
in
jne
insb
test
sbb
mov
rolb
adc
ret
mov
xchg
into
mov
pop
daa
lcall
or
mov
and
clc
mov
pop
push
sbbb
das
mov
mov
and
cmp
pop
jno
mov
jb
xchg
fs
popa
sbb
push
and
xchg
pop
dec
mov
sbb
pop
scas
cmp
xchg
outsl
pop
dec
inc
dec
push
out
aaa
sub
pop
mov
mov
mov
mov
dec
sarb
es
adc
ror
mov
mov
fidivl
cltd
push
cmpsl
shl
xor
push
imull
dec
mov
in
jae
pushf
mov
jmp
les
shlb
dec
lret
loop
add
jnp
inc
shr
xchg
pop
fdivrl
ss
lods
add
pushf
cld
aaa
xor
push
xchg
xchg
push
add
mov
push
test
andb
popa
sysexit
sub
sbb
int
lahf
subb
fldcw
sbb
addl
mov
mov
daa
pop
sbb
mov
hlt
stc
xchg
mov
mov
push
add
or
lods
add
fcmovbe
loope
call
push
xchg
clc
push
push
lods
jmp
shll
popf
cmc
sbb
loope
std
test
xor
ljmp
add
movsl
cmpsl
in
sbb
rolb
push
icebp
std
pop
in
jmp
out
leave
dec
xor
int
xlat
dec
push
mov
and
sub
aam
cmp
dec
cmp
push
rsqrtps
or
ret
add
adc
xlat
les
pop
inc
arpl
pop
jo
jae
pop
bnd
dec
mov
inc
out
or
jl
int3
push
fdivrl
xchg
mov
xchg
xor
xchg
shr
or
push
or
cmpl
inc
rcrl
sti
inc
negb
mov
outsb
inc
jbe
or
sbb
loop
push
out
dec
addb
icebp
pop
push
stc
lods
ss
dec
adc
insb
mov
mov
aaa
lods
sub
loop
lcall
decb
add
cmp
pusha
or
out
adc
push
scas
addr16
shll
jl
push
fwait
mov
fdiv
insl
rorb
push
mov
adc
add
insb
pop
lcall
sbb
jne
jno
inc
sbb
jg
movsl
in
imul
inc
ss
into
aaa
sbb
sub
push
jbe
movsl
inc
pop
cmc
pushl
pop
ds
sbb
push
mov
inc
es
dec
xor
pop
outsl
xor
cmp
jae
and
sub
outsb
sub
and
jb
mov
outsb
test
iret
bound
mov
adc
xchg
outsl
inc
js
inc
nop
inc
inc
cltd
out
inc
jb
add
mov
outsb
sti
loope
or
dec
out
dec
push
pop
xchg
aad
lret
cmpsb
and
mov
outsb
lods
mov
sbb
sbb
enter
jae
or
fxsave
aaa
call
insb
cmp
push
aad
push
push
or
fwait
xlat
jl
scas
pop
lods
repnz
pusha
xor
or
leave
and
sub
xchg
lret
or
mov
in
std
add
mov
repz
in
repnz
inc
loopne
push
cmp
and
into
push
sub
int
jecxz
adcl
inc
push
xchg
call
mov
repnz
stos
mov
out
ds
xor
xchg
cmc
xor
aad
cmc
mov
push
insb
xor
and
out
xchg
or
push
xor
loope
fs
stos
rep
mov
int
xor
xorl
cli
je
mov
pop
mov
aad
push
lods
jne
outsl
jo
sub
mov
mov
jecxz
cmp
fiaddl
add
sub
inc
push
fistpll
mov
out
jb
sbb
sub
pop
mov
ss
outsl
sbb
pop
sti
fnop
scas
xor
mov
mov
xorb
dec
stos
cmp
xchg
in
dec
out
aaa
cmp
clc
das
aad
shl
inc
ja
ret
mov
cs
in
fwait
mov
sahf
test
gs
pusha
fsubr
cmpsl
rcl
cmc
jno
popf
iret
es
roll
jp
addl
mov
rcrl
jbe
insb
int3
or
mov
cmp
and
aaa
xor
aam
add
fcomi
cmp
into
inc
cmc
jl
lcall
std
jge
iret
pop
daa
and
out
jnp
pop
dec
or
add
popf
popf
cli
push
dec
and
mov
adc
std
mov
sub
shl
imul
sub
and
out
xchg
mov
mov
pop
pop
faddp
iret
jle
push
int3
leave
mov
cwtl
in
subb
cmpl
std
in
inc
fsubrl
add
stos
shlb
or
cmpsl
dec
pop
mov
lea
cli
cmpb
gs
nop
or
pop
nop
es
ljmp
jnp
pop
lea
cmp
pop
jne
insb
in
icebp
jne
xor
rolb
mov
sub
cmp
mov
jecxz
notb
jmp
jl
mov
iret
aaa
enter
shlb
mov
fs
xchg
stos
pop
pop
inc
icebp
mov
mov
mov
adcb
shl
add
inc
cmp
pushf
mov
ficompl
and
gs
sub
pop
xchg
aam
fdivrl
in
repz
pop
sub
mov
push
ret
sub
fldenv
sub
rcrw
aaa
leave
inc
xchg
mov
dec
and
pop
pop
repz
xchg
data16
add
mov
xchg
sub
lret
sahf
loope
jbe
pushf
hlt
inc
mov
sbb
les
sub
mov
add
jno
jbe
mov
ds
pop
adc
or
xchg
cmp
ja
or
mov
lds
popa
xor
in
cltd
cmpsb
arpl
shrl
lret
in
fildll
sarb
xchg
jbe
sbb
out
fdivrl
sti
dec
std
enter
cmp
lea
and
repnz
push
pop
sbbl
stos
repnz
scas
pop
pop
aas
mov
es
lea
inc
loop
push
jo
das
xor
dec
fwait
and
push
repz
out
jmp
cld
add
ror
jb
jge
lret
shll
mov
sbb
int
adc
mov
jne
out
cld
cmp
test
pop
jnp
sub
leave
inc
ficoms
jo
out
xchg
xchg
and
test
clc
or
sti
add
push
mov
cmp
andb
ret
and
cli
icebp
stos
pop
inc
out
lds
push
jae
icebp
gs
cmp
arpl
es
cld
js
push
jmp
pop
test
jae
push
jnp
movsl
xchg
lret
stos
inc
inc
inc
mov
and
ljmp
ret
inc
out
or
jo
inc
xor
pop
call
adc
ffreep
inc
adc
andb
or
mov
fxch
jmp
ja
sub
movb
adc
push
xor
rcrl
rolb
sbb
cmp
sub
lret
xor
or
mov
das
push
inc
aam
outsb
push
push
adc
inc
push
sub
mov
pop
cmp
lods
in
sbb
xor
pop
cld
loopne
loopne
or
push
es
adc
jmp
not
scas
add
adc
fxch
stc
test
jb
dec
add
out
scas
mov
in
add
loop
sub
aaa
popf
je
add
js
insb
mov
fistl
or
mov
push
inc
sbb
ljmp
addr16
mov
jns
sub
gs
outsb
cld
lods
add
js
mov
dec
fwait
push
xchg
push
xchg
add
push
inc
lcall
push
stos
xchg
int3
fsts
bound
or
add
sbb
cmpsb
popa
je
es
mov
xchg
filds
aaa
push
sbb
mov
lahf
xor
mov
jae
dec
shlb
aam
mov
mov
mov
mov
data16
sbb
mov
mov
jnp
imul
xchg
movsb
mov
loop
dec
push
sbb
or
pushf
test
movsl
pushf
and
test
and
fsub
adc
pop
imul
gs
or
in
lea
xor
cmpsl
fldl
lea
pushf
lock
pop
and
mov
hlt
mov
jne
std
lods
xor
sbb
or
aad
adc
jmp
sub
das
pop
adc
out
push
mov
lock
push
sub
xchg
adc
fs
xor
and
fbstp
sub
xor
imul
enter
bnd
scas
mov
or
xor
mov
mov
mov
pushf
divb
movsl
in
mov
loope
adc
lds
and
xchg
or
cmc
aas
stc
cmp
daa
dec
xor
outsl
mov
push
outsl
sti
shl
pop
fbld
xor
int3
fildll
mov
adc
dec
ljmp
call
mov
xchg
xchg
js
aad
add
pop
hlt
bndstx
jnp
loope
loope
cld
test
cli
jb
jmp
gs
jge
sahf
mov
cmp
push
jno
ja
xchg
or
shlb
fimull
popa
xchg
dec
jle
xor
data16
jg
rolb
pop
sti
test
jg
or
fnstenv
xchg
shl
lods
cmp
sub
into
push
sub
in
add
xor
or
sti
cltd
fadds
int3
mov
push
inc
decb
idivl
mov
stos
mull
mov
sub
lods
xchg
pop
sbb
dec
mov
sub
aaa
or
sub
mov
das
dec
xor
cs
jle
insb
call
sti
icebp
xor
dec
fidivl
lret
cmpsb
push
or
in
scas
lret
and
jb
sub
aad
into
push
je
dec
pusha
repz
sub
mov
es
fsubrl
sub
rol
sub
sbb
shlb
mov
push
sarb
out
scas
cwtl
mov
outsl
pop
int3
add
dec
dec
xor
movsl
test
stos
ja
mov
movsb
cmc
mov
push
mov
xchg
mov
shll
shrl
inc
mov
pop
cmpsl
add
cmp
scas
push
out
popf
or
dec
arpl
pop
add
lods
je
sub
push
jbe
fcmovb
sbb
sub
cltd
inc
stos
ret
xor
aad
dec
ljmp
sbb
stos
mov
mov
in
jg
stc
movsl
fadd
lcall
xor
adc
out
popf
jmp
xor
sub
pop
jbe
xchg
fdivl
xor
faddl
repnz
scas
out
cmp
imul
inc
sbb
loope
inc
lods
int
rorl
xchg
sahf
inc
pop
in
adc
mov
sbb
inc
mov
jnp
shll
sub
sbb
test
fwait
cmpl
kmovw
inc
xchg
mov
xchg
bound
pop
test
inc
push
sub
jns
clc
ret
pushf
cs
faddl
arpl
fs
pop
inc
std
aas
xchg
js
into
lock
pop
movsl
push
sbb
pusha
jmp
cmc
mov
xchg
dec
call
into
imul
cmp
mov
call
imul
int
rcll
mov
inc
add
and
aad
dec
mov
mov
push
ret
sub
dec
push
jb
pusha
js
lcall
decl
or
xor
sub
movb
les
cmp
xor
cmpsl
ret
mov
xchg
jns
mov
fcoms
or
mov
lods
inc
pop
imull
leave
xchg
in
inc
push
addb
mov
lods
pop
shlb
test
mov
stos
add
pusha
or
lahf
mov
fisubrl
outsb
dec
jge
sbb
jge
xchg
cli
xor
add
adc
cli
fsubrl
lds
js
lret
rcl
adc
add
sub
sub
and
shl
pushf
jno
data16
sbb
ficompl
out
cli
cmpsl
sti
pop
jnp
rclb
jecxz
mov
ret
or
popa
or
dec
inc
pop
nop
sbb
push
scas
stos
out
inc
add
mov
mov
mov
fimuls
sbb
jmp
je
in
push
push
sti
scas
jb
mov
jae
dec
nop
das
out
or
inc
loop
cmp
mov
lea
cmp
loope
ss
scas
test
shrb
sub
faddl
inc
cli
xchg
xlat
data16
lock
out
xor
mov
ret
push
mov
aaa
fs
lods
cmc
push
add
in
mov
push
xchg
call
cmp
push
or
arpl
lret
push
loopne
mov
mov
scas
ljmp
aaa
int3
mov
fstl
xor
or
xor
inc
cld
push
sub
test
pusha
pushf
out
pop
jmp
xor
push
test
shlb
das
pop
inc
loop
nop
jl
and
je
clc
jns
gs
aaa
jge
lds
pushf
ss
push
in
xorl
divl
cmp
fidivrs
inc
push
dec
rcrb
cmp
hlt
into
push
out
rcll
lret
mov
lcall
fucomi
adc
cmp
lock
cld
and
popa
cmp
ljmp
pop
sbb
mov
push
push
movsl
xor
lea
add
pop
and
sub
cmpsb
adc
popf
rorb
xchg
xchg
dec
add
cltd
xchg
inc
outsb
push
mov
mov
test
fcompl
imul
mov
or
mov
outsl
sbb
lret
das
mov
mov
cwtl
inc
mov
call
mov
data16
mov
fcoml
sahf
std
or
mov
inc
leave
popa
test
jge
arpl
imul
lahf
sub
test
shrb
xchg
push
sub
jns
cltd
in
jae
pop
scas
scas
xchg
mov
int
out
adc
shll
shlb
mov
test
pop
in
cli
popa
punpckhdq
pop
jg
and
shl
jmp
in
or
push
cmc
fwait
pop
ret
sbb
int3
adc
in
shrb
movsl
cmp
mov
out
bound
daa
add
clc
fs
xor
mov
jb
jae
pop
mov
jb
push
lea
vminss
xor
test
pop
fsubs
pop
fwait
popf
pop
popa
or
ljmp
popf
ja
outsl
xchg
rolb
push
lds
push
and
pop
mov
jnp
out
sbb
add
push
or
out
dec
sub
lea
ja
and
ficoml
data16
jg
inc
inc
mov
inc
and
jne
fwait
movsb
mov
inc
adc
sarb
mov
pop
xchg
fs
xchg
pop
push
sbb
faddl
repz
xor
jbe
shrb
jmp
dec
mov
insb
sub
insb
lds
int3
push
mov
add
fcoml
add
xchg
out
inc
cld
lcall
in
fdivrl
jns
sub
arpl
addr16
push
andl
dec
cmp
ds
add
insb
orl
bound
or
add
push
lret
xlat
mov
sub
lea
js
xor
addb
test
sbb
jge
mov
jg
cmp
jbe
int
lcall
lods
fdivrl
into
in
data16
rolb
cwtl
add
insb
inc
loope
dec
adc
iret
orb
dec
clc
add
cmc
pop
fisubrs
cld
jmp
pop
pop
and
xor
jbe
insl
cs
fwait
sbb
mov
jnp
cmp
rep
ja
in
mov
rcl
mov
jge
shrb
cwtl
leave
pop
or
jne
dec
xor
arpl
inc
les
xchg
out
dec
inc
inc
sbb
jae
sbb
sti
sti
and
cmpsb
lods
mov
push
lahf
inc
hlt
sub
adc
sbb
dec
push
es
shl
outsl
push
push
cmp
sbb
stc
cmp
pop
jmp
mov
add
xor
push
test
mov
out
pop
mov
push
in
pop
test
outsl
xor
adc
loop
add
add
push
xor
rcrl
push
dec
adc
cld
xor
and
out
cmc
fisttpl
dec
cmpsb
xor
cmpsb
inc
jg
mov
lret
mov
sahf
xchg
rorb
cltd
in
xchg
or
jbe
mov
inc
out
adc
into
lds
loope
mov
pop
adc
add
push
mov
push
lret
push
sbb
aad
mov
fs
xor
test
icebp
ja
enter
das
outsl
sbb
sahf
xchg
out
mov
js
aaa
add
sbb
popf
rorl
lods
ret
cmp
adc
mov
das
movsb
hlt
push
mull
insb
mov
pop
sbb
int
or
in
xchg
cli
out
loopew
jmp
fidivl
inc
sbb
lret
xor
adc
jbe
repz
faddl
or
jp
xchg
rolb
lock
jo
mov
inc
add
and
nop
dec
cmpsb
fldt
inc
mov
push
sarb
gs
jg
int3
jecxz
inc
lock
or
dec
push
shl
jae
cmc
push
or
mov
adc
lock
push
out
jp
out
xchg
int
and
pop
push
or
mov
mov
and
mov
es
add
lods
mov
or
lea
inc
out
or
ret
or
jmp
add
pop
xchg
xor
inc
dec
in
sub
mov
xchg
lahf
pop
adc
scas
or
add
inc
test
push
fcmovnu
adc
pop
lahf
mov
mov
insb
sbb
cmp
dec
cmp
insl
aaa
mov
or
bnd
lods
dec
push
mov
movsl
mov
sbb
mov
add
icebp
sub
lock
roll
dec
inc
mov
std
inc
sub
arpl
pop
fwait
hlt
sub
mov
push
inc
xchg
add
jo
fst
frstor
in
push
cmp
repz
movsb
pusha
addr16
rcl
cmp
ds
jnp
leave
les
hlt
adc
lock
out
xchg
or
lahf
test
in
jge
rorb
inc
cmp
int
ret
dec
cmp
shlb
out
repz
pop
push
aam
mov
setge
adc
scas
out
stos
mov
mov
sahf
test
hlt
xchg
aas
stos
or
scas
sub
in
lret
mov
pop
data16
mov
jae
lods
cmp
jae
int
ja
cs
inc
int
push
jg
loope
push
or
call
mov
hlt
pop
in
adc
movsl
adc
jp
sbb
or
lret
out
in
pop
cmp
loopne
sar
in
push
iret
fwait
in
nop
loop
mov
jo
push
jmp
mov
push
mov
loope
addb
push
sbbl
inc
xchg
js
movsb
add
rcrb
out
push
rorb
stc
dec
js
jle
in
stos
lock
push
mov
pop
sbb
jns
imul
mov
cld
xchg
mov
dec
xor
push
add
daa
mov
ljmp
sbb
data16
insb
mov
push
scas
ljmp
mull
push
mov
arpl
popa
cmp
scas
js
fistpl
jns
imul
push
and
adc
lock
sti
jae
mov
pop
fmulp
mov
adc
push
mov
int3
sub
dec
xchg
dec
cld
sbb
pusha
xchg
push
in
ret
in
cld
mov
aaa
jmp
cmc
cltd
and
cli
mull
lods
repz
loop
js,pn
popl
sub
int3
jbe
test
cwtl
lahf
mov
mov
or
and
sbb
fnstcw
xchg
outsl
cmp
in
dec
cmp
les
inc
cmp
imul
xor
fwait
xor
xchg
out
xchg
das
ret
aad
lahf
and
or
pop
stc
xor
jns
popa
div
sub
por
lahf
add
fistpll
xchg
in
loope
or
call
in
jbe
imul
outsb
cli
sbbb
fstpt
or
out
adc
or
dec
mov
pop
ljmp
add
mov
xchg
mov
cld
shlb
fs
dec
sub
in
cmp
outsb
cmp
in
inc
fwait
mov
jp
or
and
xor
pop
leave
sbb
lds
or
xor
inc
sti
call
inc
neg
fdivrl
dec
push
xchg
insl
add
cwtl
imul
pop
sub
xor
les
test
mov
mov
in
add
sbb
sarl
imul
xor
or
mov
mov
dec
mov
inc
pop
lcall
dec
push
mov
shlb
in
push
push
addl
push
js
cmc
loop
std
sbb
lret
jo
cmpsb
mov
ret
stos
mov
cmp
repnz
dec
jae
jl
xor
hlt
lods
pop
mov
ret
sbb
fldl
xor
in
loopne
jae
add
sbb
ljmp
and
sub
jmp
xchg
js
ss
imul
stos
mul
add
lods
or
sbb
xchg
mov
fnstenv
les
dec
iret
out
jle
mov
rcll
pop
sub
sbb
into
mov
xor
jns
or
or
xor
mov
or
les
jnp
lods
dec
adc
sbb
inc
jae
push
dec
lahf
sub
inc
aad
push
adc
push
imul
xchg
adc
scas
lcall
xor
rcrb
sub
xchg
stos
pushf
mov
xchg
negl
stc
mov
jns
and
jg
pop
les
mov
int
andl
aaa
sub
xlat
out
test
mov
aam
mov
mov
cmp
mov
shr
push
mov
rorl
cmp
xchg
add
aaa
sbb
mov
in
pop
stos
gs
outsb
cmp
imulb
repz
hlt
or
xor
mov
lea
fbstp
pop
pop
loopne
test
jo
cmp
out
or
push
in
sti
cltd
add
addl
loop
out
xchg
icebp
imul
fstl
jns
imul
jnp
ret
iret
mov
cli
cmp
rcrl
ja
inc
mov
pop
mov
cmp
mov
mov
adc
daa
mov
sub
adc
out
cmc
test
xor
sub
pop
leave
aad
and
jl
out
push
cmp
add
lahf
gs
adc
cs
fisubrs
or
add
sarl
sbb
lds
data16
out
shl
fiadds
cld
mov
leave
add
in
mov
jge
fmul
stos
jnp
rol
mul
aas
mov
dec
pminub
leave
out
inc
pop
push
jle
cltd
mov
lock
xchg
rcrb
clc
jecxz
mov
gs
sub
pop
notb
mov
jne
das
jmp
rorl
lahf
mov
or
add
shll
mov
or
stos
mov
mov
addr16
ljmp
inc
test
inc
cs
mov
sbb
xlat
push
or
pop
loope
push
push
hlt
lods
or
aaa
or
lret
jns
mov
mov
stc
mov
sti
je
inc
or
and
notb
mov
push
sub
mov
xchg
sarl
icebp
jo
pop
in
pop
test
int3
and
call
bound
jecxz
mul
loope
jge
pop
mov
mov
sbb
adc
cmpsl
sub
insb
orl
inc
aam
repz
jb
pop
addr16
sbb
js
add
xor
aaa
popl
xlat
sbb
imul
and
das
and
or
iret
rcrb
lcall
xor
inc
imul
xchg
lcall
cld
sbb
mov
test
pop
ja
imul
mov
dec
push
aaa
xlat
in
push
or
outsb
movsl
out
xor
in
idivl
mov
pop
repz
dec
mov
data16
leave
fbstp
stc
test
fdiv
xchg
mov
mov
lock
pop
test
fcmovb
lret
lahf
out
and
lcall
xchg
add
in
outsb
fdivrs
rcrb
cmp
data16
and
ss
xor
mov
push
add
faddl
nop
sar
push
movsb
push
mov
das
fmuls
pop
movsl
dec
inc
adc
adc
mov
push
aas
pop
dec
xchg
sbb
mov
pop
cmp
dec
lock
xor
and
stc
orl
xor
inc
dec
mov
out
xlat
cltd
out
jmp
int
fwait
aam
das
lahf
decb
jmp
std
fcompl
or
sbb
jl
movsl
sbb
cmp
inc
add
inc
inc
mov
mov
adc
aas
inc
mov
pop
pop
mov
scas
xor
cs
xor
and
daa
add
jp
cmp
mov
ds
insb
jne
cmp
pop
cmp
sub
inc
jns
mov
es
xor
ljmp
stos
mov
and
jne
inc
mov
add
mov
mov
or
lock
mov
int3
xchg
cmp
jb
add
cmpsb
jno
or
out
out
in
dec
and
gs
mov
push
mov
fs
fisubl
dec
mov
andl
loop
sub
inc
or
dec
inc
lret
rcll
xchg
xchg
jge,pn
push
leave
loopne
and
lret
jno
aas
dec
add
cmpsb
add
mov
push
popa
inc
adc
jns
cmpsl
mov
mov
jbe
pushf
cwtl
inc
hlt
into
inc
pop
dec
or
inc
xor
clc
mov
xor
mov
shl
push
xorb
imul
adc
cmp
pop
mov
cmc
shr
pop
ret
cwtl
ficoml
or
subl
pop
add
scas
push
xchg
jne
ja
xlat
jp
xor
push
int
xchg
or
shll
loop
scas
add
xchg
sbb
push
scas
and
fistps
test
mov
in
sahf
mov
loop
repz
push
sahf
pusha
insb
jne
rclb
sti
push
ljmp
adc
imul
fisttpl
xor
mov
jne
add
lea
pop
das
jg
clc
push
shl
mov
das
pop
inc
add
dec
or
sub
stos
aas
pop
sbb
repz
and
and
push
adc
outsl
mov
inc
fnstsw
dec
lcall
jmp
arpl
pusha
out
xor
shlb
sub
aam
shl
fbld
jle
sti
dec
dec
pop
lods
test
push
jmp
ret
pop
mov
dec
sahf
outsl
stos
adc
mov
jl
pop
xchg
cli
das
push
pop
mov
jp
mov
dec
jbe
sysenter
inc
fistl
out
outsl
mov
xchg
mov
fs
pusha
imulb
ds
rorl
xlat
icebp
jecxz
cli
sub
cmp
in
add
add
mov
push
test
data16
cwtl
pop
dec
push
pop
ret
xchg
jge
subw
int
mov
jmp
inc
clc
jno
ret
iret
dec
and
sbb
lods
test
mov
out
out
mov
mov
sbb
cmpsb
push
push
sub
xor
adc
pop
cmp
stos
fbstp
es
or
xor
fcoml
sub
dec
out
popf
cmp
push
sub
aas
mov
jle
inc
xchg
push
inc
and
push
mov
xor
xlat
add
xchg
or
shrl
sub
rcll
rcrb
mov
push
sahf
inc
dec
mov
inc
cld
sahf
cmpsb
push
out
je
std
cmpsl
xor
jl
xorl
dec
fidivrs
pusha
pushf
adc
sub
pop
mov
fcoml
push
cmc
fdivl
jg
pushf
mov
add
pop
mov
push
inc
dec
mov
movl
arpl
out
test
sbb
mov
inc
fcmovnbe
es
dec
push
mov
push
imulb
sbb
into
out
xlat
rorl
push
out
mov
jg
sub
pushf
add
pop
sub
test
stc
and
sar
mov
stc
jae
ss
sarl
push
loope
pushf
push
dec
lret
and
inc
mov
in
cli
das
into
adc
imul
push
insl
mov
or
xchg
mov
cli
xlat
shl
out
aas
inc
jo
jl
inc
loope
xor
pop
inc
rolb
pop
dec
add
push
pop
in
shll
cwtl
jno
jp
inc
outsl
dec
sub
dec
in
mov
imul
jge
mov
push
jo
inc
cmp
jno
mov
shlb
in
pop
lahf
xchg
mov
es
leave
or
push
or
mov
enter
pop
insl
adc
cmpb
jns
adc
pop
dec
mov
psrlq
pop
adc
shlb
pop
iret
push
xchg
in
pop
dec
je
jle
inc
fs
pushf
sahf
enter
xor
jno
jne
cmc
repz
mov
jecxz
rcll
lock
mov
arpl
add
shll
int3
pop
idivb
add
mov
les
xor
js
ficoms
inc
fdivr
mov
cld
push
inc
sub
dec
pop
popa
std
push
iret
push
mov
dec
or
xchg
adc
inc
mov
loopne
int3
add
nop
mov
dec
enter
insl
mov
push
es
adc
push
out
dec
fnstenv
arpl
or
sub
or
push
push
movsb
jecxz,pn
pop
jb
jns
push
les
out
and
adc
cmpsl
inc
xor
cmp
or
out
pop
pop
mov
daa
in
cltd
jbe
movsb
ucomiss
adc
rcl
mov
jl
cmpsb
cmp
je
mov
imul
add
ret
mov
and
pusha
outsl
mov
or
nop
mov
jbe
fcoml
push
mov
insl
add
test
and
and
pop
dec
cwtl
out
push
sahf
add
push
adc
repnz
add
imul
mov
subl
test
pushw
es
out
data16
dec
in
mov
addr16
bound
cli
dec
addr16
test
dec
and
movb
mov
fsts
mov
scas
inc
sub
gs
test
add
xchg
sub
ds
jo
mov
xchg
mov
mov
pushf
push
jmp
call
sti
loopne
leave
cmp
or
rcrb
sbb
shl
push
cmp
sub
xchg
lds
addr16
loop
cmp
jp
iret
aad
pop
call
iret
push
bound
in
xor
pop
es
xchg
or
mov
mov
xlat
and
push
arpl
addr16
mov
cmp
cli
mov
or
dec
jb
xchg
ja
dec
cltd
xor
inc
sub
nop
mov
xchg
push
inc
xlat
fs
or
and
push
sti
xchg
fsubr
dec
jl
jns
mov
test
into
fistpll
mov
or
push
push
sub
sub
and
mov
call
cmpsb
adc
rolb
bound
dec
push
dec
mov
jmp
lahf
xchg
inc
int
mov
lock
cmpsb
je
cmc
repz
cli
push
jo
sahf
xorl
test
xchg
ds
shll
and
cmp
jb
call
mov
inc
fstl
adc
jg
mov
inc
xor
shrb
mov
movsb
pusha
adc
jmp
jne
sti
add
sbb
xor
fisubrs
adc
iret
outsb
cmp
out
jae
lea
sub
mov
insl
xchg
stos
outsl
xor
sbb
popa
ret
sbb
and
cmc
or
adc
ss
loopne
push
idivl
andl
fwait
pushf
lods
or
mov
popf
lahf
js
stos
rol
call
test
mov
jge
mov
rcr
shlb
push
sub
dec
out
inc
cltd
mov
adc
mov
xchg
jmp
outsb
and
pop
or
push
rcll
test
jno
fdivl
push
mov
sbb
test
and
pushf
mov
and
outsb
stos
aaa
test
pusha
mov
push
pushw
xor
inc
push
fcomi
aam
push
scas
pusha
lcall
adc
popf
in
mov
or
pop
aas
mov
dec
fstpt
stos
arpl
inc
int
loope
adc
shrl
ss
jno
jnp
sub
insl
adc
pop
ret
pop
jno
inc
and
add
cmp
ja
jno
add
loop
loopne
jae
xor
fstpt
outsl
imul
fcmovnbe
xchg
mov
push
xchg
lods
insb
xchg
sahf
xchg
fldt
mov
hlt
clc
add
jge
jmp
mov
scas
addr16
dec
add
pushf
jge
mov
sbb
clc
sbb
pop
mov
mov
xchg
adc
into
jp
mov
in
clc
jl
lock
push
leave
jb
pop
cltd
mov
dec
rcl
jnp
in
xchg
fsubrl
sub
mov
lock
adcl
lods
mov
cmp
pop
dec
lods
sbb
fdivr
dec
dec
add
pushf
or
push
mov
dec
xchg
mov
xchg
mov
mov
cmp
dec
stos
cmp
nop
adc
ja
or
fldt
test
rorl
mov
sahf
loope
jno
lea
mov
xchg
mov
outsl
pop
sbb
pop
mov
mov
insl
imul
add
shlb
jl
negb
mov
ja
mov
xchg
into
in
loop
push
xor
xchg
add
jb
add
std
or
sar
faddl
jg
jl
popf
mov
lea
xchg
stc
aas
loope
push
dec
scas
mov
stc
data16
mov
sbb
or
rcrb
loop
sbb
or
daa
mov
xor
and
mov
test
outsl
dec
mov
rcr
popf
sar
inc
orb
jae
aad
sub
jg
es
enter
or
mov
push
xchg
or
daa
mov
sub
jl
mov
mov
cltd
insl
dec
popa
andb
movsl
adc
lret
addr16
dec
ljmp
fcmove
rcr
sub
aaa
push
xchg
cmp
cmp
not
add
js
cmp
mov
and
notl
and
jecxz
jno
dec
test
lcall
insb
pop
or
mov
ficoms
add
ror
add
push
inc
push
leave
pop
cmpsl
push
fwait
clc
lea
inc
or
loopew
jo
cmp
xor
mov
or
mov
xlat
andl
cmp
xchg
cli
loope
pop
jmp
fstp
mov
pop
sti
inc
out
adc
lahf
es
imul
and
mov
xchg
mov
lods
test
pop
xchg
mov
jno
mov
iret
xor
cmp
dec
adc
xchg
lods
xchg
push
arpl
xchg
stc
pushf
mov
fisttps
fdivl
out
sti
pop
ljmp
daa
test
fs
fsubrl
popf
pop
or
fimuls
imul
mov
sub
sahf
popf
rcll
fmuls
and
movb
std
dec
fistps
imul
add
push
or
sahf
sbb
imull
mov
xlat
aad
cmp
cmc
sahf
mov
and
mov
ret
fstpt
cmp
or
pop
xchg
lea
xchg
or
add
ds
or
stos
xor
mov
jns
jae
js
mov
and
fcoms
or
out
add
clc
sub
pusha
fdivrl
aaa
xor
sub
popa
jl
mov
test
les
ud2
adc
mov
sub
push
sbb
in
adc
fwait
jne
mov
or
mov
mov
pop
xor
add
inc
mov
aam
imul
xchg
js
sub
imul
push
fnstsw
mov
or
jb,pt
push
add
sbb
mov
daa
test
js
xor
mov
mov
jo
cmpsb
lret
push
inc
jne
std
inc
lods
sub
loop
dec
cmp
sbb
stos
cmp
sbb
inc
mov
adc
cwtl
mov
dec
sar
mov
or
ljmp
cmp
xor
or
testb
jae
fdivs
adc
stc
dec
call
jnp
ret
mov
mov
adc
inc
mov
mov
push
es
out
xor
in
pusha
lcall
sbb
lahf
int
push
pop
mov
adc
adc
out
outsb
mov
int
loopne
sub
repnz
mov
xchg
push
push
out
push
jne
inc
aad
push
xchg
xchg
pop
fidivrl
loope
jns
fildl
inc
and
daa
cmpsl
scas
xchg
test
jo
ja
ret
jle
pop
xchg
sti
fiaddl
pop
cmpsl
mov
pop
in
rorl
subb
mov
mov
cmp
repz
push
inc
jo
pop
lock
inc
dec
and
jnp
lcall
push
mov
mov
mov
xor
adc
ja
cld
dec
and
cmp
das
cmp
imul
mov
mov
scas
call
mov
xchg
push
aas
jl
dec
pop
or
pop
sbb
mov
pushf
xchg
xor
cmp
and
incb
and
adc
push
mov
enter
dec
jnp
inc
arpl
mov
fs
xlat
pop
xchg
pop
pop
dec
lcall
jg
rcrb
rolb
jg
push
outsb
jb
fs
ljmp
imul
popf
sub
rcll
mov
sti
jmp
test
data16
bound
mov
lds
xorl
pop
outsl
ret
loopne
daa
xorb
mov
jp
out
push
or
je
outsb
imul
sub
sbb
jno
andl
cmp
cmpsb
jp
add
adc
xor
hlt
jp
outsl
loopne
repz
xchg
scas
jmp
jg
push
filds
and
fnsave
pop
adc
mov
iret
bound
pop
fimull
fisubs
ret
jae
push
and
lcall
mov
je
mov
mov
cmp
hlt
ja
shll
and
mov
add
cmp
mov
test
adcb
xlat
scas
sub
mov
ss
gs
push
mov
xor
out
dec
stos
lods
and
scas
inc
push
mov
in
test
jo
add
mov
adc
push
inc
pop
sbb
adcl
or
aaa
imul
shlb
ret
mov
or
cmc
mov
adc
aas
icebp
push
aaa
fwait
mov
lds
xor
push
decl
jb
dec
pushf
nop
hlt
addr16
cmc
push
push
lret
mov
or
test
pop
dec
adc
mov
xchg
out
leave
jecxz
test
pop
jle
jge
pop
and
fs
lods
add
mov
jg
pop
loopew
and
loope
dec
xchg
add
push
jecxz
scas
cwtl
add
jne
push
lock
rep
je
cmp
stos
push
lcall
mov
dec
test
outsb
xlat
lea
ljmp
dec
cmp
mov
mov
push
enter
dec
sbb
sub
xchg
orl
inc
sahf
jb
pop
jnp
jnp
test
mov
add
inc
inc
dec
jge
xchg
pop
pop
mov
int
mov
test
adc
jno
fisubs
pushl
std
clc
jge
pop
lahf
push
aas
jecxz
mov
and
mov
sub
test
pop
sbb
je
mov
pop
xchg
jg
pushf
stos
inc
fldenv
cmpsl
cwtl
negb
adc
pop
call
dec
fdivrs
push
dec
cmpsl
fcoms
movsl
inc
jne
jge
into
push
inc
sub
fisubrl
sub
inc
jg
mov
mov
sbb
cli
jo
ljmp
andb
fisttps
clc
daa
mov
jb
xor
push
lods
lock
clc
push
xchg
add
lcall
add
jge
les
in
jne
int
out
cmpsb
jge
mov
dec
mov
push
fstpl
fcomps
adc
test
lods
sbb
pop
xchg
js
sbb
xchg
mov
ficoms
push
mov
and
jg
mov
cmp
mov
stc
sbb
pop
mov
push
pushf
fwait
movsb
out
outsb
cmp
inc
sti
shlb
sub
arpl
push
pusha
add
clc
int
jle
and
inc
fmul
mov
inc
and
aas
lods
out
or
adc
lahf
pop
ficomps
lret
mov
das
call
mov
sub
dec
movsl
xlat
or
add
inc
int
call
mov
sbb
les
arpl
or
mov
push
and
adc
mov
jge
inc
push
incl
scas
jge
inc
out
dec
mov
fldenv
sbb
in
push
add
mov
js
dec
cmp
sub
jo
sti
call
push
sbb
mov
cltd
ja
out
fmull
pop
push
push
push
mov
and
or
cmp
mov
jecxz
pop
fadd
xchg
cmpl
lret
add
mov
sbb
cmc
fistl
push
or
xchg
mov
jo
movsl
sub
cmpsb
ja
shlb
and
enter
sti
fsts
jmp
jmp
je
adc
inc
push
cmp
cmpsl
stos
imul
psubsw
loope
fwait
insl
adc
sahf
fwait
or
arpl
cmc
jge
rcrb
cmpsw
dec
dec
mov
jne
jnp
lret
leave
fmull
out
cmpsb
bt
sub
push
mov
push
add
dec
in
or
pop
fsubrp
movsl
ficoms
int
mov
lods
insb
fisubl
pop
call
xchg
pushf
aad
cmc
dec
std
leave
mov
cmc
lret
outsb
cmp
outsb
sahf
push
repnz
scas
addl
cmc
mov
push
lea
call
xor
in
fldl2t
repz
out
fmul
scas
scas
ret
movsb
jb
mov
xor
sub
lock
and
xchg
push
mov
mov
inc
and
jb
mov
jns
les
fs
jns
int
fnsetpm(287
mov
fbstp
hlt
pop
and
add
push
sbb
stos
addr16
loope
in
xor
subl
xor
addr16
adc
test
aad
stc
pop
test
dec
aad
fwait
pushf
rorl
xchg
xchg
int
sti
int
or
cmp
sub
push
movb
outsb
and
push
daa
adcl
loop
dec
pop
out
aad
dec
mov
push
or
push
lds
cld
pop
push
adc
push
mov
outsb
orb
push
popf
into
das
cmpsb
insb
pop
or
aam
movl
sti
mov
push
icebp
pop
xorb
mov
sbb
je
test
mov
out
out
dec
sub
fistpll
sti
push
add
stos
call
pop
push
jp
addl
mov
dec
add
loopne
out
mov
pop
lds
adc
pop
inc
mov
cmp
or
popf
cwtl
mov
sbb
pop
lods
icebp
cmp
sti
loop
and
shll
imul
lock
dec
cli
inc
cmp
add
outsb
pusha
imul
push
xchg
pop
jb
mov
lea
xor
mov
mov
fsubrl
dec
nop
sar
add
mov
push
imul
fsubrs
mov
fcomi
fimuls
jmp
je
test
lret
xchg
mov
incb
or
jl
or
pushf
into
sub
jnp
ret
push
enter
aad
sahf
jnp
cmp
lea
imul
push
inc
shrb
push
mov
sub
rcr
enter
shlb
popa
xor
cmp
out
mov
jl
sar
jae
fs
sti
and
sti
std
mov
jecxz
mov
stc
add
cmp
int3
or
jne
testl
add
ficompl
shl
and
movsl
pop
sbb
bound
inc
dec
pop
jge
jmp
lods
cmc
adc
add
or
ljmp
lcall
cli
test
insb
shr
shlb
daa
xor
arpl
loop
lea
jns
insb
decl
mov
push
hlt
xor
xor
insl
sub
andl
mov
loopne
jecxz
push
cmp
push
push
adc
clc
ret
and
pop
mov
ja
cli
push
xor
mov
pop
subb
push
test
in
adc
bound
inc
adc
fiaddl
imul
or
or
mov
mov
cmp
xchg
loopne
nop
add
aaa
enter
fisubs
and
repnz
test
loope
shlb
inc
inc
pushf
cmpsl
je
inc
in
cmp
add
loopne
xchg
aam
pop
in
out
and
orl
pop
dec
ret
or
and
cwtl
mov
cmpl
sahf
icebp
adc
jge
mov
into
dec
xlat
lods
in
cwtl
sbb
push
adc
clc
add
hlt
xor
push
xor
mov
fcompl
lahf
dec
aaa
adc
adc
push
call
adc
mov
test
cmp
push
lcall
shrb
cwtl
mov
shll
andb
mov
movsb
mov
pop
cltd
sbb
shlb
idivl
gs
mov
inc
sub
jge
call
scas
stc
push
xchg
push
jge
mov
lds
test
cld
out
out
daa
inc
shr
add
imul
pop
sbb
popf
or
add
adc
adc
mov
lret
outsl
mov
test
add
mov
popa
pop
cmc
scas
insl
rcrl
add
outsb
test
scas
mov
arpl
les
push
or
fs
adc
daa
stc
add
stc
mov
roll
add
xchg
mov
push
ret
push
cmc
mov
rcr
insl
mov
push
shlb
xor
stc
and
int3
jmp
shrl
jg
bound
aam
cwtl
clc
xchg
mov
push
jb
das
leave
ficompl
push
inc
or
mov
xchg
je
push
jae
mov
mov
icebp
fisttpl
push
sub
andl
mov
std
js
cwtl
cmp
call
lret
clc
mov
inc
pxor
xchg
cmp
aad
and
mov
dec
pop
lea
sub
pop
ret
fnstenv
xor
in
push
jp
or
or
mov
and
insb
mov
mov
push
xchg
sti
fisubrl
fdivs
fwait
mov
dec
mov
jbe
and
push
adc
aas
lods
push
and
jmp
adc
fmuls
ja
xor
xchg
hlt
dec
mov
inc
cmpb
sub
xchg
dec
sub
pop
leave
jecxz
inc
lret
xlat
pushl
loop
mov
pop
xchg
js
mov
fcmovnbe
fisubrs
pop
mov
mov
inc
pop
mov
insb
mov
and
sbb
inc
aas
xchg
cmpsl
jmp
lret
iret
aad
dec
insl
sub
xor
in
in
sbb
mov
cmpsb
loop
cmp
inc
lds
push
negb
pop
inc
test
push
call
push
mov
push
test
and
int
sub
jne
int3
es
adc
in
dec
in
add
fsubrp
repz
pop
adc
dec
pop
lds
nop
outsl
lahf
xchg
jo
adc
mov
adc
mov
pop
cs
lds
add
xor
insb
stc
push
cwtl
fwait
pop
cmp
mov
icebp
xor
pop
dec
int
and
sbb
jnp
out
mov
addr16
push
push
sub
xor
fwait
jb
jg
idivl
push
int3
scas
sub
mov
aaa
mov
fwait
cmp
mov
std
pop
repz
arpl
xlat
bound
add
sbb
jbe
dec
jecxz
sub
fwait
cmp
call
int3
repz
lods
loope
push
test
adc
cmp
mov
mov
lds
insl
cld
das
lahf
test
fdivs
sti
sbb
jp
lea
push
push
lret
and
orl
inc
out
mov
xor
jle
or
int
mov
das
ss
lahf
mov
mov
sbb
and
lock
mov
cmp
out
add
sub
subb
popa
sub
sbb
push
xor
test
sar
mov
lods
mov
mov
mov
adc
jg
and
lods
mov
jbe
sbbb
icebp
pusha
ds
sbb
dec
in
or
lea
sub
notb
popa
addr16
pop
popf
push
cmc
inc
mov
push
cmp
stos
call
mov
vmwrite
cmc
xor
testl
fcoms
stos
cmpsl
mov
inc
cmp
into
stos
daa
sbb
lock
pushf
xor
lahf
xchg
movsl
pop
xchg
jo
dec
pop
loopne
addr16
dec
fimull
pop
mov
jnp
jno
int
push
lods
aad
test
sbb
roll
fcomi
outsl
cmpsl
mov
aaa
inc
dec
dec
sbb
cli
push
mov
test
jnp
push
xlat
cmpsb
aas
shlb
and
das
in
jecxz
add
lret
jecxz
aaa
out
sub
addr16
mov
sub
fcompl
or
xchg
push
add
loope
nop
pusha
out
popa
hlt
sub
jno
jmp
inc
fstl
clc
jo
pop
aas
dec
mov
stc
ss
add
pop
jmp
lods
dec
sbb
dec
ds
jnp
and
or
xchg
pusha
lret
inc
mov
dec
cltd
idivb
pop
mov
pushf
jae
mov
adc
stc
push
shlb
cld
jb
dec
xchg
jb
push
sbb
sti
int3
sarl
jp
aam
or
cmc
sahf
or
push
mov
mov
jae
pop
inc
mov
mov
popf
xor
int3
testb
std
shlb
xor
in
pop
lea
icebp
pop
loop
pop
orl
inc
jno
push
or
mov
adc
adc
adc
lret
mov
inc
mov
cmpsb
mov
jno
repnz
scas
or
sar
push
gs
decl
scas
pop
into
xor
xor
dec
mov
xor
jnp
insb
push
cs
cltd
pusha
jg
in
aam
icebp
and
insl
test
ljmp
pushl
lret
sub
xchg
push
imul
loop
push
faddl
adc
mov
dec
mov
or
insb
pop
lods
push
cmp
inc
or
xlat
push
adc
lcall
scas
jbe
and
nop
scas
adc
sub
pusha
dec
cmpsl
sbb
call
lods
ret
clc
cmp
hlt
sti
adc
sbb
aas
sub
inc
sub
sahf
sub
cmp
cmp
fcmove
pop
sbb
mov
xchg
daa
cwtl
pusha
imul
xor
sahf
xchg
les
xchg
xor
push
aad
add
loop
xor
push
ret
ja
add
mov
mov
push
inc
lret
push
add
enter
jmp
cmc
in
and
xor
push
or
xchg
dec
fldt
adc
mov
sub
mov
jns
mov
fcompl
pop
add
cli
daa
lods
jnp
call
enter
sbb
add
mov
xor
add
push
dec
sbb
shlb
xchg
jl
mov
movsb
jbe
mov
int3
mov
cmp
pop
scas
insl
stos
leave
mov
jp
fstpl
cmp
sub
xchg
cmp
mov
fwait
mov
sub
inc
add
idiv
mov
jmp
stos
ret
pop
rolb
pop
mov
cmp
and
dec
xor
dec
test
and
and
mov
rolb
adc
ret
inc
movl
fstps
push
pop
push
sbb
and
inc
mov
cs
data16
cmc
mov
jmp
cmp
ret
lds
dec
ret
sbb
jne
lret
jne
dec
mov
mov
sahf
fwait
insb
inc
in
ja
sub
or
mov
dec
int
pop
or
xchg
out
fcomi
test
int3
cli
cmc
daa
xchg
adc
mov
mov
add
xor
adcl
in
sbb
and
popa
pop
sub
cmpsl
cmpsb
fsubs
dec
insb
repz
mov
xchg
mov
mov
iret
xchg
out
mov
lea
outsl
jl
and
cld
cmp
jmp
shrl
xor
sar
xor
dec
movsl
pop
rcrl
stos
movsl
gs
inc
inc
sti
loopne
leave
int3
lret
push
push
shl
jl
push
cmp
adc
push
xchg
lret
arpl
xchg
add
add
dec
icebp
xchg
sub
pop
xchg
repz
jb
mov
rcrl
sbb
mov
cmp
enter
inc
jnp
dec
cld
push
popa
xchg
sub
loopne
repnz
jle
push
lret
inc
xchg
push
aaa
add
bound
inc
scas
leave
push
mov
cmp
cld
das
sub
xor
sub
push
stos
pop
ret
push
rolb
jge
dec
mov
sub
jp
push
scas
mov
mov
std
pushf
mov
cmp
dec
inc
sti
js
mov
bound
movb
push
cmp
mov
xchg
sub
jge
add
or
cwtl
imul
xlat
rolb
adcb
xchg
movb
sbb
add
sub
or
jb
jmp
fcoms
cli
push
into
mov
sbb
scas
mov
xchg
loop
fwait
add
test
xchg
test
inc
mov
cmp
jl
sbbl
jnp
lret
shlb
mov
scas
sbb
aam
clc
xorb
nop
pop
xlat
sub
dec
loope
sub
notl
mov
mov
sbb
aad
add
lods
mov
adc
jne
cmp
cs
sarb
xchg
aas
adc
mov
std
sub
pop
or
pop
cwtl
testl
scas
ja
or
jns
add
daa
inc
dec
fmuls
pop
mov
shrb
nop
cmp
sbb
mov
outsl
pop
jne
sarb
clc
in
xor
enter
cwtl
inc
loopne
sub
push
clc
gs
pop
pusha
call
push
gs
mov
xchg
cmc
jbe
fisttpl
pop
out
cld
inc
fsubrp
add
pop
into
push
lock
push
loope
rorb
inc
jecxz
jns
xor
push
in
mov
sbb
jecxz
pop
leave
mov
xor
dec
fistps
pushf
std
cmp
das
xchg
sub
lods
add
add
shr
enter
lods
es
mov
sbb
repz
and
xor
inc
xlat
mov
sub
pushf
lds
dec
ja
push
adc
xchg
das
mov
stos
out
adcl
fcoml
cmp
mov
xlat
ljmp
shr
cvtdq2ps
sahf
inc
push
or
pop
cmp
xor
inc
lea
push
shlb
je
pop
das
in
mov
mov
mov
cmpb
mov
shll
lods
outsl
lods
mov
add
inc
cmp
and
divb
mov
lahf
pushw
les
jne
xor
pop
mov
mov
inc
repz
dec
mov
dec
pop
jne
mov
popa
fstp
mov
test
bnd
mov
test
fcoml
push
int3
sbb
imul
mov
or
inc
into
mov
sbb
fs
rcll
sti
lock
sbb
add
or
sub
xchg
test
push
aam
jecxz
xchg
dec
testl
pop
std
xor
leave
inc
jl
lods
or
stc
cmp
jl
in
pop
lahf
or
and
js
mov
rcll
sub
jns
pop
fstl
xchg
cltd
push
jle,pn
movsb
sbb
sbb
adc
add
adc
addb
push
or
testl
sub
dec
xchg
lock
jo
lods
xchg
add
mov
ret
int
mov
imulb
sub
xchg
cmp
sarb
mov
mov
sub
lahf
movsl
xchg
loope
lahf
push
jae
pusha
test
repnz
pushf
add
mov
xchg
lret
arpl
jp
add
pop
insb
gs
mov
mov
xor
lcall
xchg
fldt
clc
lds
xchg
pop
pop
jle
jne
out
data16
jmp
repnz
out
jmp
stc
jecxz
shr
sahf
inc
inc
push
mov
push
jmp
mov
push
test
scas
adc
das
sub
out
pop
sti
inc
mov
iret
push
xor
stos
nop
fdivrs
aad
xor
xchg
jecxz
test
nop
sbb
xchg
add
fcomps
rcr
scas
sahf
mov
pop
pop
push
sub
movsl
aad
lock
lret
push
jo
inc
std
xchg
lahf
dec
sub
adc
dec
aas
jne
mov
lods
xchg
fisubl
cmp
and
add
or
sahf
bound
mov
lds
repz
popa
outsb
repz
repz
pusha
jg
int3
add
push
mov
stos
pop
cmp
push
in
imul
ret
icebp
and
aas
and
leave
sub
loop
orl
cld
sub
xlat
fidivs
out
pop
mov
add
dec
insl
jle
pop
jl
jnp
insl
sub
xor
jge
sbb
sub
cltd
sub
inc
lret
pop
cltd
jge
pop
sub
cmc
lods
mov
mov
fisttpll
sub
mov
xor
mov
push
fildll
mov
clc
or
lret
mov
pop
sbb
push
nop
fdivs
in
fisubl
or
lret
cwtl
mov
sbbl
arpl
inc
out
jno
repnz
adc
mov
inc
sbb
aam
stos
cmp
fisubrs
sub
dec
cmc
jmp
xlat
adc
addb
sarb
push
mov
pop
imul
hlt
imul
mul
cli
mov
andl
xor
jmp
mov
mov
xor
shlb
push
xchg
out
inc
repnz
inc
jbe
add
mov
pop
mov
fisttpll
sbb
lock
popa
dec
lret
hlt
adc
popa
push
jns
or
push
inc
xchg
mov
mov
push
push
sub
test
sbb
mov
add
cmpsb
in
mov
int3
push
aam
xor
outsl
sbb
xor
ja
mov
sbb
arpl
movsl
insl
out
push
dec
cmp
push
sub
adc
jmp
mov
repz
jo
pop
jp
push
mov
int
es
pop
test
and
ffree
cltd
in
inc
fildll
add
jb
mov
idivb
stos
pop
sahf
adc
push
pop
mov
or
pop
pop
add
add
jne
push
pop
xchg
xchg
js
shrl
ljmp
dec
jbe
iret
sub
pushf
mov
jle
or
decb
sub
cmpsb
sti
jmp
mov
loope
sub
ja
xor
pop
xchg
xor
in
je
push
cli
daa
add
pop
shll
jbe
pusha
int3
or
sbb
add
pop
pop
mov
adc
xchg
cmp
jmp
loopne
js
rcrb
pop
mov
gs
divb
movsl
fwait
iret
hlt
mov
dec
sarb
inc
shll
inc
inc
imul
add
fidivrl
shll
sub
mov
cltd
out
push
sub
mov
or
dec
cmp
pop
sahf
mov
lcall
sbb
subb
pop
adc
jne
arpl
mov
test
inc
xlat
mov
and
xchg
leave
sub
clc
leave
mov
and
xor
fwait
or
push
ret
or
mov
or
add
adc
cmc
cld
mov
sbb
lods
cld
add
bound
outsl
push
or
xchg
stos
jge
jb
scas
mov
inc
add
je
pushl
jns
dec
je
or
push
add
fwait
mov
in
fisttpll
enter
push
and
scas
loopne
mov
xchg
jmp
call
inc
pop
jne
pop
scas
ljmp
mov
xchg
add
mov
jle
sub
insb
add
mov
mov
push
stc
pop
xchg
jb
fsubrl
jns
jno
mov
popa
xor
xor
xor
repnz
xchg
std
bound
enter
xorb
xchg
adc
movsb
jo
movsb
dec
loopne
mov
in
mov
push
mov
pop
and
adc
out
outsb
arpl
mov
push
or
iret
xchg
inc
xchg
stos
cmp
aas
sub
and
stos
mov
mov
andl
mov
mov
cmpsl
mov
cs
push
push
push
addr16
aas
popa
cs
inc
and
push
cld
sbb
push
xor
lcall
rol
mov
mov
mov
clc
arpl
icebp
mov
leave
sub
inc
push
cld
shlb
insb
add
nop
insl
mov
cmp
and
imul
or
adc
mov
lcall
movsb
imul
fs
mov
pop
pop
push
dec
lahf
shr
nop
ja
push
adc
push
fdivrl
inc
frstor
imul
push
aam
pop
fsubl
mov
xchg
dec
hlt
inc
mov
cmp
sbb
push
adc
iret
sbb
das
push
adc
push
adc
cmp
in
popfw
pushf
pop
popf
jae
mov
mov
adcb
sbb
dec
outsl
out
sbb
xor
jo
push
mov
sbb
ljmp
out
xchg
dec
jne
or
sub
ret
mov
push
mov
push
mov
mov
getsec
mov
mov
push
pop
cwtl
out
sarl
jne
das
mov
cmp
cmpsb
mov
dec
and
pop
and
push
pop
and
data16
and
lcall
sti
xchg
and
or
mov
cmp
leave
inc
test
lods
cmp
sarl
push
daa
adc
cmc
bnd
cmp
bound
dec
push
mov
mov
fiadds
ja
mov
ret
jl
jb
adc
adc
pop
sbb
sub
loop
imul
push
or
jmp
push
pand
jl,pt
hlt
push
xchg
xor
fs
insl
in
stos
cmp
adc
aaa
sub
mov
xchg
jp
dec
insb
fcoml
aad
fidivrs
insb
fmull
in
jae
pop
icebp
inc
or
jo
push
fucom
out
xorl
jmp
mov
dec
xchg
repz
xchg
stos
xchg
push
stos
cs
xchg
movsb
cmpsb
add
push
xor
mov
jns
mov
dec
orl
inc
dec
int3
push
add
or
jbe
shlb
or
dec
mov
ljmp
jbe
arpl
ja
inc
hlt
into
dec
jmp
xchg
sar
loop
cs
shll
subl
mov
mov
push
mov
adc
dec
mov
test
outsl
out
je
push
mov
dec
lods
stos
sub
sbb
insb
mov
push
push
fidivl
popf
adc
mov
xor
or
add
lahf
outsl
or
mov
insl
mov
ljmp
mov
dec
shlb
loop
fldl
mov
push
lods
andb
ret
lock
xchg
inc
xor
xlat
outsl
rep
add
xor
xchg
loop
cmpsb
xor
stc
add
sub
mov
dec
sub
repz
mov
pop
add
push
mov
jns
inc
test
movsb
leave
dec
rcrb
insb
cmp
jg
mov
inc
addr16
pushl
mov
ret
std
std
push
xchg
les
add
cmp
pop
lahf
sbb
xor
rcrl
pop
aaa
pop
test
sub
mov
insb
in
nop
or
sbb
movsl
mov
movsl
jae
mov
xchg
lahf
out
popf
xchg
inc
xchg
xor
test
movd
adc
push
pop
sar
xor
mov
divb
in
and
xchg
mov
imul
ljmp
xor
sub
ret
or
xchg
leave
pop
adc
pop
dec
add
sub
add
pop
cmp
jge
adc
xlat
outsb
cli
in
icebp
sbb
or
mov
inc
pop
sub
leave
or
lock
inc
sbb
jae
adc
add
lcall
loopne
jo
xchg
mull
ljmp
mov
fwait
mov
clc
push
negl
push
dec
cmp
movsb
and
shrb
arpl
and
and
ds
pop
pop
mov
push
mov
mov
inc
sti
cwtl
add
shll
adc
out
and
and
sbb
push
loope
pop
pusha
mov
dec
sub
or
adc
mov
lods
nop
jl
movsl
and
xchg
clc
pop
fstpt
mov
sub
in
dec
xlat
jo
mov
jae
arpl
inc
out
xchg
or
add
xor
lock
std
mov
insb
sbbb
and
loop
cli
outsb
jns
andb
mov
leave
add
fcompl
ret
repz
pop
paddd
adcl
outsl
push
sti
inc
pop
pushf
test
jbe
add
movsl
sarb
scas
pop
lea
mov
pusha
arpl
xor
inc
pop
outsl
andl
lods
jb
fstl
pop
pushf
push
inc
lcall
xor
addb
add
mull
lods
divb
dec
test
popa
outsl
pop
inc
mov
cwtl
inc
aad
sub
js
xchg
xor
jecxz
testb
fsubl
loop
xchg
jns
adc
mov
pop
jnp
dec
fsubrl
lret
sbb
fsubrp
mov
test
out
adc
js
ret
add
sub
loop
arpl
js
sub
sub
mov
push
mov
mov
xor
out
sbb
pop
outsl
mov
cs
push
shr
pop
push
dec
lret
lahf
scas
ss
ja
sub
mov
and
mov
ss
push
mov
sbb
pusha
add
sub
inc
stc
cmpsl
mov
and
jbe
xchg
test
adc
lahf
fisttpl
mov
inc
js
cs
call
pop
pop
adc
mov
xor
and
adcb
nop
push
fcoms
add
xchg
xor
xchg
dec
int3
clc
inc
pop
fcoms
cmp
and
mov
out
xchg
repnz
and
gs
insb
inc
pop
out
dec
mov
bound
ficoms
aad
cmovns
mov
leave
inc
xchg
cli
adc
jns,pt
ds
in
push
jne
mov
jno
aam
sti
repz
sar
loope
in
mov
int
icebp
mov
hlt
jno
jnp
aas
inc
adc
jle
daa
push
les
pop
test
jno
fs
jb
leave
ja
popl
sbb
inc
pop
pop
out
and
push
data16
sarb
jb
push
xlat
inc
push
adc
cld
dec
mov
dec
test
push
jmp
out
push
pop
mov
sbb
arpl
sbb
lret
mov
inc
mov
orl
mov
push
jmp
jns
icebp
ss
fstps
in
movb
cld
push
xchg
jmp
jl
dec
mov
or
test
xchg
leave
mov
paddb
movsb
jns
test
rorb
js
jp
mov
aad
enter
xor
cld
inc
xor
mov
mov
stc
cmc
das
loope
inc
pop
mov
fmull
lret
sub
mov
sbb
pop
aad
pop
outsl
in
jle
push
jne
mov
sbb
test
imul
inc
dec
lock
fmuls
cld
leave
add
adc
mov
fdivl
nop
mov
push
dec
cli
add
out
sti
push
push
aad
or
into
pop
div
or
insb
pop
add
push
cmp
mov
mov
dec
push
mov
testl
push
mov
imul
sbb
add
das
sub
push
popa
mov
cwtl
imul
notl
in
xchg
push
icebp
add
aaa
mov
roll
mov
adc
hlt
inc
bnd
testl
and
sbb
fsubs
inc
es
and
xchg
sarb
dec
in
aam
imul
addr16
mov
mov
pop
push
inc
call
gs
or
add
es
dec
pop
jbe
xor
loop
push
xor
popa
xor
sub
loopne
sub
enter
int
add
xor
cmpsl
add
adc
mov
in
push
mov
adcl
or
jmp
mov
jnp
sub
mov
pop
shlb
addl
imul
cmp
mov
stos
push
xor
iret
cltd
movsb
setne
loopne
sbb
mov
nop
cmpsl
iret
push
mov
mov
jns
stos
or
jno
xor
cmpsl
fs
mov
fnstenv
loope
mov
xchg
jge
cmp
dec
jnp
add
jbe
fmull
test
pop
mov
cmp
nop
sub
repz
icebp
enter
sarb
hlt
jle
push
cwtl
dec
pop
shll
rcrl
jle
sub
mov
mov
scas
rorb
and
int3
int3
sbb
push
std
push
sbb
loope
or
mov
lods
push
enter
mov
pushl
ljmpw
and
aad
roll
ja
add
in
mov
cld
mov
push
and
mov
sub
fsubrs
test
mov
xor
mov
repz
add
scas
mov
or
cmp
iret
xchg
and
mov
lret
test
je
push
ret
add
mov
add
stos
shlb
pusha
jecxz
adc
sbb
mov
cld
mov
aaa
stos
lret
aaa
mov
xor
pop
loop
cmp
adc
roll
call
xchg
mov
mov
stc
rolb
outsl
loope
xchg
mov
and
dec
outsl
orb
mov
sub
xchg
mov
add
je
das
cmp
addl
je
fldt
shl
or
lret
idiv
mov
xchg
add
mov
pop
pop
lcall
pop
ljmp
test
xchg
mov
cld
sub
out
imul
cli
pop
xor
nop
sbb
mov
inc
sub
fwait
pop
fcmovnu
cmpsb
dec
and
ret
jp
daa
jns
sub
bound
lret
sub
fsubs
in
cmp
inc
mov
dec
xchg
aam
clc
or
pop
xchg
leave
aaa
lcall
mov
push
pop
out
pop
arpl
lret
add
adc
mov
data16
cmpb
call
jo
cwtl
sbb
dec
mov
adc
pop
push
cmp
xor
es
push
dec
jno
add
int
pop
iret
pushf
dec
repnz
in
ljmp
pop
lret
imul
fstpl
adc
cmp
divb
or
std
adc
or
pop
gs
cltd
mov
xchg
mov
ljmp
add
ret
fucom
or
fistps
test
sbb
pop
push
inc
fldl
lods
in
jnp
sbb
mov
in
mov
ljmp
cli
lock
insb
push
jp
mov
mov
and
dec
push
xchg
mov
movsb
mov
and
jmp
je
test
insb
insb
ret
dec
popa
inc
shl
movups
gs
pop
femms
sbb
mov
sbb
nop
adc
fs
lret
pop
lahf
adc
mov
dec
mov
repnz
sub
and
push
cmc
loopne
xchg
add
ficomps
insl
and
jge
inc
lods
jb
sbb
pop
cwtl
std
mov
mov
cmp
sub
nop
cmpsb
test
cmp
repnz
loope
adc
and
mov
rolb
stc
or
push
jns
mov
ror
or
jecxz
ja
xchg
add
mov
dec
rcrl
daa
movsb
hlt
inc
aad
push
push
push
add
and
inc
sbb
lcall
das
xor
je
je
xor
arpl
add
ljmp
pushf
sub
cmp
loop
mov
xchg
mov
mov
mov
xor
xchg
mov
mov
push
arpl
pop
sbbl
or
jge
pushf
jge
fidivrs
sbb
pop
movsb
sub
pop
lods
cmp
cmp
xor
pop
in
fisttpll
in
cmpsb
pop
jecxz
mov
mov
jno
out
and
push
test
mov
repnz
push
arpl
stc
lea
adc
cmp
cmp
mov
addr16
imul
test
and
pushf
xchg
xor
sbb
bnd
imul
inc
dec
xor
adc
pushf
jp
enter
jl
push
or
mov
xor
les
std
dec
insb
or
out
mov
sbb
add
fnsave
mov
cltd
push
std
jecxz
sbb
dec
cmp
scas
imul
in
insl
add
enter
add
cmpsl
jne
test
lock
sub
sbb
pusha
mov
or
push
sbb
addr16
sbb
inc
test
mov
sub
and
mov
jno
sub
std
sbb
mov
add
loopne
out
cmpsl
in
dec
xor
mov
fwait
lret
mov
mov
jbe
jbe
in
sbb
sbb
jl
pop
xchg
das
add
lret
cmp
dec
xchg
les
pop
adc
push
cld
mov
add
in
mov
dec
bound
xchg
cwtl
nop
and
sti
jno
xchg
jne
in
pop
sub
pop
push
out
push
pusha
fwait
dec
push
jne
incl
pop
mov
mov
sahf
and
push
fs
insl
test
es
test
movsb
mov
pop
mov
mov
stos
cmp
lock
jmp
lock
das
shrl
js
movsl
or
or
or
push
mov
xchg
stos
in
int
xor
fdivs
sbb
mov
mov
add
mov
sub
cwtl
aam
add
adc
mov
in
insl
clc
jmp
mov
dec
pop
adc
daa
ficoml
in
test
jp
push
mov
dec
lods
inc
adc
mov
and
pop
push
or
out
sarb
push
int
push
pop
jne
cmp
test
lret
xor
loop
and
inc
out
in
xor
and
sub
into
in
outsl
scas
jb
xlat
jp
nop
xchg
xchg
js
in
outsb
leave
push
xchg
inc
call
cld
push
mov
out
fcmove
push
mov
jo
cmc
mov
pop
stc
rcr
addr16
push
fidivrs
int
lahf
lcall
cli
xchg
add
adc
jb
test
or
push
push
pop
pop
xor
xor
or
ret
movsl
jne
xchg
mov
imul
pushf
imul
sbb
in
mov
inc
fsubrl
sahf
push
pusha
iret
sub
jl
out
ss
cmpsl
and
gs
outsb
stos
or
andb
xlat
adc
add
adc
fistpll
jne
loopne
ja
mov
dec
cld
pop
xchg
cmp
push
sahf
cmp
push
dec
and
arpl
push
pop
xchg
lcall
psrld
adc
jl
ret
stos
scas
sti
jecxz
xor
push
inc
adc
fdivrs
aam
nop
aam
xor
popf
aas
pop
enter
test
sub
loopne
ljmp
inc
or
cmp
inc
add
mov
or
mov
sbb
jnp
ror
push
shr
call
mov
xchg
mov
mov
pop
xchg
jo
push
bound
cld
push
jecxz
jecxz
int3
or
xchg
clc
xorl
push
iret
mov
cmp
ss
adc
scas
mov
in
ds
clc
mov
fldt
and
ret
mov
imul
dec
sub
push
mov
sarl
clc
xchg
pop
dec
xchg
into
inc
mov
out
fstl
mov
or
push
out
push
sub
and
aaa
nop
lahf
lods
mov
hlt
outsl
divb
push
lret
xchg
popf
lds
icebp
stos
or
pushf
cmp
xchg
dec
cmc
aas
lahf
ret
fdivl
push
dec
xor
popf
pop
call
imul
leave
sub
cmp
es
out
xor
push
xchg
sarl
jle
sub
jecxz
sub
add
push
iret
mov
jp
jmp
inc
cwtl
pop
xor
push
lahf
dec
push
add
sbb
insb
js
scas
iret
dec
lcall
xor
js
adc
adc
pop
je
clc
pop
pusha
jmp
mov
inc
cmpsb
mov
andl
add
idivb
mulb
cmp
pop
lock
sar
mov
mov
sbb
jl
jb
pop
mov
cld
or
mov
xchg
int3
mov
scas
adc
jg
rorl
cmpsb
arpl
das
pop
movsb
inc
test
pusha
mov
jbe
push
in
add
adcl
sbb
jle
lret
fnstenv
jae
pop
ss
out
scas
mov
xlat
lods
jecxz
mov
and
jns
push
cmp
xchg
xchg
lds
xlat
ret
test
mov
das
ret
mov
int3
jno
sbb
aaa
mov
sub
out
sub
sbb
stos
pop
popa
out
sbb
cmp
orl
test
cmp
or
mov
js
adc
push
fldl
push
mov
scas
cmpsl
or
icebp
out
push
sti
pop
dec
jbe
adc
imul
lds
ds
sub
shlb
fbld
xchg
sub
rcll
push
and
cli
xor
jle
shlb
test
mov
jmp
fnstenv
or
sub
and
icebp
ljmp
mov
mov
in
sti
cmpb
imul
ret
aas
mov
fimull
dec
fldenv
cmp
es
dec
xchg
das
test
mov
xorb
pop
mov
mov
rolb
push
xor
call
fmuls
and
jns
mov
loope
leave
inc
fadds
jp
sub
inc
cmpsb
hlt
and
or
adc
dec
clc
xor
sti
and
cltd
mov
int
inc
lds
arpl
dec
adc
fistpl
gs
mov
cmc
mov
add
push
cld
dec
mov
stos
loope
mov
call
mov
push
push
adc
inc
ret
lret
and
add
push
out
mov
imulb
inc
popf
push
pop
call
in
js
std
mov
sub
insb
pop
jg
ljmp
clc
fscale
or
jae
notl
pop
int
mov
pop
nop
data16
fiaddl
cmova
cli
fisubl
stos
aas
jp
jecxz
loop
xorl
std
ja
push
iret
and
loope
cltd
insl
aam
adc
icebp
lret
out
popf
or
cmpsl
movsl
push
adc
arpl
clc
imul
jp
scas
in
out
push
add
rcrb
adc
stos
addr16
aam
mov
jb
dec
psrld
imul
fsubrs
aaa
jo
icebp
sbb
aaa
cmp
cli
mov
in
cmpsb
mov
inc
nop
cmp
mov
lock
sbb
xchg
xchg
aad
test
and
sbb
lahf
scas
push
out
mov
adc
aas
jmp
cmc
push
xchg
and
mov
jmp
mov
nop
inc
mov
enter
jns
sub
jbe
je
shlb
mov
in
stc
jnp
xor
sbb
mov
mov
pop
aaa
gs
xor
sub
shr
inc
imul
inc
and
mov
push
mov
sub
cs
sarb
out
fidivs
aam
cmc
inc
lds
cmpsb
xor
pop
dec
dec
lret
out
cmp
shl
sub
xor
add
push
pop
xchg
dec
fadds
aaa
jmp
iret
test
ret
fcomi
aam
aas
xchg
sub
adc
imul
ja
mov
dec
sbb
popf
lahf
movsl
insb
jne
or
xor
pop
pushf
faddl
ss
push
mov
push
stc
push
scas
push
push
cld
inc
pop
add
adc
pop
pop
lock
push
add
cmp
pop
xor
lock
icebp
xchg
push
pusha
jle
pop
push
and
movsl
cltd
cs
dec
dec
jae
sbb
pop
shrl
out
out
lds
fsubrs
jl
mov
cmp
test
jl
into
icebp
daa
popf
cmp
dec
adc
in
shll
pop
xlat
xchg
mov
das
mov
ret
cmpsl
cmpsb
adc
xchg
aaa
addb
cmpsl
movsl
bound
cs
arpl
decl
into
popl
sbb
sbb
lods
imul
jle
add
ja
xor
inc
cs
es
stos
mov
push
pop
loopne
dec
cli
push
inc
icebp
fucom
fidivs
cmp
fistpll
fcmovu
add
sti
popf
mov
dec
cmp
enter
xor
outsb
add
insb
and
repnz
mov
push
jno
cld
into
addr16
cs
pop
adcb
mov
fidivrl
test
out
dec
mov
cs
dec
leave
ljmp
mov
in
out
xchg
pop
out
adc
into
sub
xor
test
xchg
jg
rcrl
push
les
cmc
popa
dec
mov
jle
or
fmuls
push
repnz
lods
xlat
add
popa
cmp
lahf
sahf
enter
ficoms
mov
dec
lds
ret
sbb
add
inc
enter
stc
inc
sub
push
fisttps
imulb
popa
dec
cmp
out
push
pop
imull
mov
fwait
cmpsl
pushf
jbe
clc
or
cmp
dec
ja
mov
and
clc
mov
inc
add
mov
dec
shrb
mov
dec
test
jno
cmp
cmpsl
cmpsb
js
jae
gs
mov
mov
data16
mov
lcall
je
inc
repz
lcall
xor
movsb
jg
push
dec
dec
cmp
and
rcrb
mov
xorl
cmp
and
call
jo
ja
roll
xor
popa
jle
daa
push
js
dec
or
outsl
mov
or
xor
cmp
into
sahf
mov
je
push
push
lock
dec
aam
rcl
mov
inc
mov
addb
frstor
jns
cmp
fldl
std
test
push
push
inc
pop
repz
jnp
dec
iret
outsl
fsubs
or
xlat
inc
add
fsubl
sub
pmaddwd
ret
mov
out
xchg
das
inc
cmc
dec
nop
clc
clc
mov
push
xchg
stos
mov
dec
xor
bound
ret
add
pop
aas
mov
lahf
or
xor
and
shlb
inc
xor
dec
iret
test
sub
mov
adc
sbb
push
push
sbb
xor
arpl
into
sti
or
pop
clc
pop
pop
nop
and
int
and
pop
in
fimuls
ss
test
fyl2x
dec
in
out
mov
fwait
scas
cmp
adc
aas
cmp
fidivs
or
sbb
inc
repz
aad
dec
ljmp
rol
lock
push
dec
lods
push
ds
pop
iret
push
into
jmp
push
shrb
imul
lcall
std
imull
mov
xor
gs
pop
sahf
fnstcw
jno
incl
mov
xor
scas
mov
hlt
filds
xchg
push
leave
mov
movsl
das
rolb
sub
and
pop
ret
dec
aad
in
imul
sahf
xor
pop
out
pop
test
inc
pop
push
sbb
cmp
outsl
mov
xlat
pop
jg
push
mov
and
fiaddl
out
mov
push
inc
dec
mov
into
loopne
je
mov
inc
add
cmp
pop
outsb
push
xchg
stos
scas
roll
test
jp
rcrl
cmpsb
add
rcll
lret
sahf
sub
nop
mov
loop
push
xchg
loopne
sbb
mov
xchg
pusha
shl
sub
mov
pop
lock
fldl
xchg
fs
sahf
ss
cmpl
pop
das
xchg
repz
mov
sbb
loope
insl
lea
dec
call
and
out
lret
sub
ss
in
sbb
mov
mov
sub
int3
leave
insb
mov
push
pop
stc
mov
inc
lret
adc
xor
rep
xor
and
dec
fidivrl
call
mov
ret
mov
popa
mov
adcb
mov
cmpsl
mov
xor
icebp
sbb
dec
loop
push
mov
xor
sbb
gs
hlt
sbb
inc
fdivrp
decl
inc
dec
out
stc
add
mov
add
or
lds
std
lret
rcrb
xor
add
movsl
dec
jb
add
sub
inc
les
daa
js
arpl
in
add
pusha
jns
add
xchg
mov
push
jecxz
loop
enter
cmc
mov
cld
loopne
aad
shlb
add
sub
out
lcall
mov
xchg
xchg
dec
aam
push
cmpsb
mov
cmp
mov
nop
ret
fdivrs
inc
out
cs
sbb
jmp
dec
test
test
fucomp
jne
in
ljmp
add
gs
ds
bnd
aad
mov
pop
loop
cmp
leave
lods
notl
inc
fldl
cwtl
sub
and
jge
pop
push
scas
in
out
les
cld
gs
xor
pop
lock
xor
sub
lcall
notl
fildll
dec
inc
out
push
inc
mov
xor
mov
push
adc
fs
or
lret
and
inc
popf
test
jecxz
data16
cs
lods
outsb
mov
inc
jo
and
clc
pushf
in
jbe
sub
pop
xchg
ret
push
dec
add
pushf
push
sbb
push
or
loop
in
push
jne
push
int
fidivs
push
loope
adc
inc
inc
imul
jg
sbb
sub
shlb
fadd
into
icebp
or
add
pop
shrl
adcb
clc
lods
stos
int
and
xchg
jg
mov
dec
lcall
sarl
cmpl
movsb
lcall
add
imul
mov
inc
add
ds
pop
sub
mov
xor
dec
bound
xchg
das
lret
hlt
xor
test
std
je
inc
mov
call
cmp
cmpsl
and
mov
inc
mov
data16
dec
push
mov
data16
icebp
xchg
pop
jmp
es
or
mov
test
ret
cli
mov
dec
insb
adc
jg
mov
mov
mov
pop
cmp
fldcw
mov
jb
shr
sub
bswap
push
pop
jb
ret
add
sub
int3
pop
xor
sub
adc
jbe
sbb
sbbl
pop
out
test
push
xlat
cmp
or
scas
jmp
in
jo
in
lcall
in
mov
adc
stc
enter
cmp
int
mov
scas
into
outsb
cld
adc
cltd
or
or
push
in
das
pop
neg
in
ret
and
xchg
sub
mov
inc
add
jg
adc
hlt
xchg
mov
and
lock
add
cmpsl
push
xor
out
fildl
pop
add
stos
ljmp
call
hlt
insb
adc
into
lret
inc
mov
xor
adc
xor
iret
scas
cld
mov
xor
dec
jle
mov
jb
aad
push
icebp
fcoms
popa
push
mov
push
lock
movsl
push
mov
pop
outsl
mov
stc
inc
aaa
addl
xlat
nop
aam
pop
mov
jno
and
imul
out
and
xchg
movsl
lret
add
add
testb
ds
test
and
sbb
je
ret
pop
dec
cld
cld
xlat
sbb
mov
or
lret
mov
pop
repnz
jmp
lret
lea
in
out
aaa
insl
cmp
mov
cmpsl
ljmp
mov
inc
out
mov
insb
pop
movsb
push
xor
xchg
cmpsb
mov
int3
pop
lret
aam
mov
xor
jno
pop
aaa
lods
ss
aas
sub
pmullw
push
sub
cld
or
repz
stos
pop
pusha
int3
mov
dec
dec
shrl
push
or
jns
dec
mov
out
mov
pop
enter
mov
or
orb
out
mov
xor
and
fldl
idiv
cltd
jno
jo
mov
sbb
adc
push
rcll
in
test
xor
arpl
out
lods
mov
cmp
fs
cmpl
xchg
push
jmp
lock
xor
call
pop
add
and
bswap
call
mov
dec
je
mov
or
test
and
mov
roll
lea
ljmp
repz
add
pushf
mov
pop
lcall
dec
bound
mov
add
sub
es
test
subb
dec
push
test
mov
and
mov
cmp
add
adc
int
sti
das
lcall
jo
pop
repz
insb
mov
jp
jle
or
subb
pop
hlt
sub
adc
icebp
call
cmp
cmp
sahf
arpl
cli
mov
addr16
add
fwait
inc
pop
stos
loopne
inc
jl
or
adc
push
std
cmp
jl
cmp
outsl
loope
rcr
lahf
pop
ss
sbb
ja
shll
inc
rorl
fnsave
push
dec
imul
xor
sub
mov
xlat
loopne
xlat
pop
mov
stc
loopne
cmpsb
xor
aam
mov
imul
and
xchg
iret
cwtl
cmpsl
out
sbb
mov
ja
lret
lock
pop
cmp
pop
jo
vcvtdq2ps
imul
xchg
mov
sub
dec
lods
dec
rcrl
stos
lret
mov
mov
dec
iret
mov
or
push
adc
mov
scas
pop
xor
cli
lods
mov
push
adc
xor
repz
mov
xchg
aad
insl
stos
fadds
sub
dec
sbb
or
sbb
aas
in
test
mov
lahf
mov
outsl
add
xor
mov
bound
push
sti
dec
adc
addr16
data16
jno
push
sbb
fbstp
add
subb
aad
inc
mov
imul
sbb
jge
push
sti
js
mov
test
cli
stc
cli
test
movsl
popa
popa
loope
jecxz
rclb
lock
int3
mov
mov
push
pop
mov
loopne
outsl
jo
jns,pt
mov
pop
jg
pusha
sub
xchg
sahf
pop
jno
mov
sbb
jno
xchg
or
int
sbb
insl
loope
shrb
or
jecxz
push
mov
mov
call
js
pop
adc
outsl
stos
std
xchg
cli
jge
cli
fildl
out
gs
mov
loopne
pop
sbb
in
es
sub
roll
push
push
mov
pop
fstpl
iret
arpl
dec
movsb
scas
inc
nop
pop
add
fdivr
and
jg
pop
inc
lods
rcrl
sub
inc
rorl
insb
stos
idivl
push
bound
mov
out
adc
mov
or
stos
cmpsb
test
push
je
mov
xchg
add
popa
aas
stos
mov
pop
inc
clc
imul
call
xchg
xchg
xchg
sub
sbb
daa
add
je
sub
xor
sbb
mov
jp
mov
mov
cltd
mov
rcl
adc
imul
jbe
popa
mov
test
ss
mov
cmc
idivl
or
and
mov
lock
cmpl
jb
in
sub
and
push
dec
mov
inc
mov
dec
mov
xor
mov
lret
jle
inc
push
jp
jb
push
iret
jno
pop
scas
sub
jle
maskmovq
sub
pushf
rclb
cld
pop
add
iret
lock
add
test
or
jns
dec
jo
add
mov
lret
call
scas
out
push
out
or
mov
push
and
sbb
dec
push
aam
push
aaa
jbe
fists
inc
push
pop
inc
orb
mov
mov
outsb
lret
cwtl
push
in
xor
jne
call
pop
push
pop
inc
dec
jne
fsubrl
cmp
xchg
xchg
andb
popa
and
sti
sub
xchg
adc
adc
and
sub
out
mov
sahf
inc
jbe
adc
lret
cmc
mov
or
add
and
xor
repz
loope
push
mov
push
mov
pop
ret
popf
in
scas
jmp
movsb
es
mov
mov
cltd
push
mov
outsl
add
xchg
dec
repz
inc
pop
cli
shrl
cli
jg
pop
cmp
rorl
fsubr
push
cmp
dec
mov
mov
sbb
test
inc
sbb
lret
testl
ds
ljmp
test
and
aad
jmp
fdiv
mov
cld
hlt
movsl
mov
jmp
cmpsl
loope
push
sahf
ret
ret
loopne
pop
enter
push
cmp
adc
pop
or
mov
inc
leave
sub
dec
mov
adc
mov
xor
xlat
arpl
inc
sub
loopne
or
xchg
sub
sub
sub
popf
scas
rcrb
cmp
imul
stc
cmp
pop
int
shlb
daa
cmp
rorl
cmpsb
or
add
mov
test
icebp
call
fcompp
or
nop
mov
test
inc
and
sub
adc
dec
xor
inc
sbb
add
lret
inc
mov
adc
mov
icebp
mov
mov
or
lahf
int
mov
mov
mov
mov
mov
pop
lds
daa
sub
add
mov
lods
xchg
xchg
aad
test
cli
push
icebp
test
mov
jnp
popf
push
push
bound
leave
pop
outsb
cmp
jmp
mov
data16
lds
fdivrl
inc
cld
in
xor
bound
pop
arpl
mov
adc
imul
cmc
mov
push
fimull
and
xlat
mov
mov
sbb
shll
lret
xor
ret
pusha
sahf
adc
xor
out
inc
mov
inc
pop
mov
addr16
mov
mov
loop
xlat
mov
ffree
push
xchg
sub
jnp
xchg
mov
mov
sar
jg
cmp
fldt
lcall
cld
xor
fcmovnu
push
not
push
es
sub
arpl
mov
dec
test
jo
jnp
or
aam
out
ss
rolb
inc
popa
xor
and
jmp
scas
lret
fwait
dec
push
mov
mov
loopne
push
dec
mov
inc
cmp
adc
cmp
mov
mov
pop
imul
xchg
jp
push
fistpl
pusha
and
imul
fisttps
popa
mov
inc
adc
add
loope
xchg
add
add
jg
adc
movsl
lds
aaa
xchg
mov
pop
or
push
cmpsl
mov
mov
push
xchg
and
ret
es
xchg
lods
push
dec
mov
int
or
outsb
mov
shrb
sub
ss
nop
bound
push
xchg
cmpsl
dec
in
pop
lock
jo
pop
dec
xchg
and
in
and
xchg
repnz
cmc
hlt
pop
dec
subb
enter
xchg
push
sahf
rcrb
test
call
and
inc
mov
cmp
jmp
pop
dec
arpl
mov
test
push
sbb
inc
jnp
insb
insb
andb
push
jecxz
push
adc
cmp
adc
pop
xlat
shll
lods
cwtl
test
dec
subl
mov
mov
mov
in
inc
cwtl
jne
inc
pop
sti
pop
mov
leave
cmpl
orb
cmp
inc
dec
mov
addl
bound
les
into
dec
mov
dec
cmp
pop
cmpsb
lahf
pop
jge
stos
jno
out
xchg
popa
pop
sbb
push
jg
mov
mov
mov
jl
adc
popa
leave
lea
int3
pop
jp
mov
jno
js
jl
inc
mov
mov
mov
hlt
and
jno
lcall
inc
pushf
push
sbb
cmp
xor
mov
xor
imul
jne
hlt
sub
jne
inc
out
fcoml
and
sub
adc
in
cmp
aam
mov
xchg
jno
inc
jp
nop
je
push
mov
add
lahf
pushf
jge
lcall
inc
lock
lahf
shrl
jmp
jbe
lea
add
testl
frstor
adc
jmp
sub
lcall
push
and
cmp
jnp
and
push
test
sarl
nop
mov
mov
insl
lsl
ficoml
out
or
subb
mov
movsl
test
sbb
lret
pop
test
repnz
sub
mov
sub
cmp
loop
jg
adc
mov
jbe
mov
inc
jl
jae
addl
pop
adc
out
fisttps
push
dec
vpmulhuw
std
pop
push
add
movsl
int3
ss
lods
loop
xor
enter
mov
pop
push
xchg
cmp
push
adc
pop
in
call
and
adc
jnp
cmp
jns
arpl
or
push
inc
std
test
ljmp
adc
out
stc
and
add
inc
inc
fs
fadds
jno
xchg
fldt
xchg
test
outsb
or
xchg
in
pusha
in
add
test
jge
mov
pop
ret
mov
dec
pop
shll
lods
ficompl
mov
lret
mov
imul
push
popf
jb
popa
popa
popf
dec
xchg
stos
mov
imul
sbb
mov
mov
dec
stc
mov
in
inc
dec
jmp
sub
stos
arpl
mov
pop
dec
mov
std
mov
shrb
das
pop
jg
loopne
pop
imul
icebp
push
pop
sub
ss
add
or
pop
and
stc
out
sbb
loop
cmp
inc
mov
mov
inc
fwait
or
mov
inc
add
fwait
pushf
xlat
stos
mov
icebp
push
sub
repnz
rcrb
imul
jb
mov
pop
sahf
test
sahf
or
sub
in
arpl
cmp
cmp
jl
sbb
push
xor
fdiv
inc
and
add
ret
mov
lea
cmp
xchg
and
pop
inc
xor
inc
subl
je
xchg
ljmp
jbe
movsb
adc
dec
xor
testl
mov
lcall
mov
aas
xchg
in
xchg
pushf
shrb
jno
or
sub
loop
lcall
mov
fldcw
aaa
outsb
sahf
push
mov
jle
aas
mov
xor
xchg
pop
ja
lods
lea
jmp
and
adc
in
mov
xchg
gs
pop
and
addb
push
dec
loop
cmpsb
mov
int
mov
push
and
xor
stc
out
popa
jae
add
xor
pop
test
push
adc
shll
imul
pop
add
add
mov
mov
sti
jge
call
xadd
jmp
mov
xor
lahf
call
shrl
pop
outsb
ss
out
and
push
xchg
imul
inc
xor
fcoms
ja
jmp
pop
mov
dec
dec
mov
add
push
in
call
mov
xchg
inc
sub
jne
push
ret
push
ss
scas
aad
data16
int3
inc
pop
aas
cmc
mov
mov
mov
mov
dec
ljmp
mov
pop
or
mov
pop
mov
insb
ret
gs
iret
xchg
add
cld
xchg
cmp
mov
or
sub
xchg
iret
xchg
xchg
push
sbb
xor
inc
daa
mov
inc
popf
cltd
pop
dec
fsubl
jno
repz
mov
pusha
scas
cmp
and
cmp
and
je
mov
out
mov
mov
push
js
call
pop
cmp
mov
or
push
and
push
cmp
inc
ljmp
pusha
jo
in
jnp
out
leave
fs
ljmp
sbb
add
or
dec
out
out
aaa
hlt
jb
pop
mov
cmpsb
stc
push
jb
out
imul
fs
arpl
out
mov
mov
cwtl
push
sub
sub
lods
adc
sti
shrb
jle
enter
insl
pushf
stc
cmpsb
adc
mov
js
fdivl
adc
outsb
mov
ret
mov
or
test
jle
jecxz
lds
shlb
sbb
cmp
xchg
insb
js
test
sbb
jne
scas
adcb
sub
inc
sub
mov
dec
jmp
lret
cmpsl
xor
dec
lret
mov
adc
stc
cvtpi2ps
inc
sbb
or
sbb
shrl
xchg
out
mov
lods
adc
pop
cmp
int3
insl
fwait
xchg
inc
jns
sub
sarl
pop
mov
stos
repz
in
cmpsl
xchg
int
fdiv
out
jg
mov
enter
cmp
cltd
mov
inc
xor
leave
and
fdivs
adc
lcall
add
fxch
out
pushf
testl
arpl
mov
aam
daa
pop
das
mov
or
or
and
jnp
ss
sub
addr16
sbb
cmp
les
decl
rolb
or
ds
fildl
inc
inc
pushf
or
pop
cmp
pop
in
pop
outsl
scas
xor
lock
lret
adc
pop
sbb
rclb
push
pop
xor
sbb
dec
xchg
sub
pop
adc
scas
mov
fs
pop
aad
loop
push
cwtl
aam
xchg
add
lods
jns
ljmp
xor
and
or
jae
mov
jg
in
jmp
or
lock
cltd
adc
in
or
jno
lahf
sahf
ljmp
insb
push
or
push
push
lock
into
sbb
jne
fistpl
insl
adc
push
cli
add
sub
pop
fldl
sahf
out
nop
add
dec
or
outsl
out
mov
jg
punpckhwd
test
sub
pop
loop
out
sub
push
push
inc
mov
scas
add
fsubs
jmp
xchg
add
xchg
decb
in
and
aad
out
ja
call
push
rcl
cwtl
sbb
push
iret
in
outsl
sbb
stos
mov
or
popa
out
je
cmp
rorb
int3
lds
pop
inc
pop
popa
or
mov
ss
lcall
fdivrl
out
testb
icebp
inc
pop
in
cmp
cmp
stc
stos
insb
hlt
mov
cmp
add
sub
fnstcw
adc
xchg
repnz
jmp
push
int
mov
xor
push
dec
pop
lret
pop
xor
je
mov
dec
outsb
test
sti
push
mov
in
and
sbb
push
and
stos
mov
je,pt
test
jge
jg
jae
push
pusha
je
in
arpl
push
pop
sub
movsl
sub
rcll
adc
push
int3
or
sbb
mov
push
cltd
jb
lret
lret
dec
fucomip
fsubr
and
notb
jnp
push
bound
push
subb
sbb
mov
inc
repz
call
inc
xor
adc
pop
sti
mov
jl
incb
sbb
xor
lock
mov
sbb
in
xor
bnd
or
mov
rorl
js
sub
aad
in
scas
mov
mov
xchg
out
and
loope
mov
inc
fld
pop
jp
out
xchg
bound
loope
xor
ss
mov
data16
movsl
pop
js
or
in
inc
mov
sbb
cmp
stc
nop
xchg
std
es
jge
mov
repz
add
sbb
inc
out
inc
mov
outsl
mov
pop
repnz
aaa
lret
adc
aas
adcl
vpmulhuw
jle
add
daa
push
shll
xchg
sub
aas
adc
mov
out
xor
je
fiaddl
gs
movsl
push
aaa
movsb
dec
fsubl
lahf
xor
jge
jb
das
imulb
das
pop
data16
jne
mov
insl
jmp
and
jg
jns
out
insl
vcvtsd2ss
es
ficoml
push
insl
std
aas
outsb
xchg
and
movsb
ret
dec
fistpl
stc
mov
sub
mov
stos
add
jae
nop
mov
cmpsb
shlb
or
ja
and
scas
and
mov
clc
mov
js
mov
movsb
add
cmpl
lret
lcall
inc
jns
jp
cmp
pop
mov
data16
and
notb
aad
test
cltd
adcl
sbb
push
pop
and
mov
fnstenv
dec
sbb
pop
sub
push
cmpsb
mov
or
mov
cmp
jp
xchg
shll
sub
jns
nop
push
and
js
arpl
test
je
push
inc
jp
ja
add
aam
das
xchg
sbbl
jnp
xchg
cmp
inc
shrb
pop
arpl
js
sub
or
jmp
add
or
mov
out
jne
inc
inc
mov
outsl
xchg
fcomip
or
fdivrl
orl
std
push
dec
mov
sbb
jle
pop
xchg
lock
xor
add
insl
add
or
iret
push
add
cmp
dec
mov
shrb
incb
inc
add
adc
inc
lods
jnp
inc
inc
pop
xchg
sub
sbb
je
add
jle
mov
jge
je
dec
jb
mov
and
jbe
lret
ficoms
outsl
adc
cmp
jmp
cmp
arpl
sbbb
inc
jne
rcrb
scas
ret
call
repnz
das
xchg
sub
add
iret
and
test
pushf
popf
mov
xchg
addb
out
lcall
and
mov
push
lahf
gs
and
pop
or
mov
mov
rclb
cmp
xor
push
lret
and
jge
mov
rolb
mov
add
dec
dec
icebp
sbb
imul
std
ja
cmp
pop
mov
push
mov
hlt
mov
or
push
inc
jae
data16
push
xor
sub
mov
inc
xor
mov
enter
inc
cmp
loope
and
xorb
sahf
in
sub
dec
mov
jge
aam
xor
inc
adc
js
fcoml
leave
xchg
cli
and
cmpsb
fistps
mov
mov
jge
dec
and
dec
decb
repz
mov
outsl
movsb
es
out
cwtl
fs
clc
mov
adc
scas
lds
stos
add
mov
mov
js
nop
or
sub
adc
cmpsb
inc
mov
mov
lock
mov
sbb
in
test
sub
push
subb
dec
sub
cs
dec
dec
jg
fdivs
rorb
dec
mov
ret
mov
pop
setp
pop
jae
das
popa
jmp
mov
aaa
repnz
jecxz
xchg
fs
cmp
daa
pop
jg
push
inc
js
clc
imul
and
or
push
adc
and
cwtl
data16
jge
mov
jae
push
cli
sbb
lock
inc
pop
pop
mov
or
jecxz
push
and
andps
adc
pusha
xchg
or
mov
sub
mov
sub
mov
jmp
test
ret
pop
in
adc
popf
out
outsl
pop
mov
cwtl
pop
aas
lds
cli
adcl
insl
pop
mov
mov
and
cmp
jb
movsb
dec
mov
and
pop
xchg
add
test
ds
xor
jnp
xchg
fwait
cltd
or
stos
mov
pop
lock
arpl
sarl
outsb
inc
pop
and
test
imul
subb
jb
in
pop
adc
jno
fsubrp
fwait
push
sbb
mov
outsl
mov
mov
pushf
adc
outsb
xor
xor
rolb
cmp
stos
mov
test
addr16
insl
sub
movsl
pop
aas
orl
mov
adc
fwait
aad
jecxz
mov
inc
ret
pusha
enter
lret
mov
pop
stos
push
imul
inc
in
xchg
adc
add
popa
xlat
mov
fisubrl
mov
inc
mov
push
lock
ja
negl
mov
pop
aad
jmp
push
mov
mov
andl
pop
cs
jb
test
test
pusha
jnp
push
js
lcall
pop
xchg
and
rolb
jecxz
hlt
sbb
push
orb
cmpsb
flds
xor
add
stos
paddsb
fadds
mov
aad
cmp
cmp
cmp
and
addb
cmpsl
insb
stc
sarl
icebp
mov
rorb
cmpb
fucomip
js
cs
pop
jb
shll
mov
iret
and
xchg
ds
pop
int
add
ljmp
aaa
and
ss
test
lcall
mov
hlt
push
leave
jle
or
in
insl
pop
in
in
adc
ja
mov
data16
add
and
pop
stos
mov
int3
out
shl
addr16
add
ss
mov
addl
call
jecxz
xchg
jb
jne
or
mov
xchg
ds
xor
xor
clc
mov
fadd
mov
mov
xchg
add
pop
push
cli
mov
push
adc
test
cli
mov
and
hlt
mov
mov
pop
pop
loope
vpcmpgtb
jnp
lea
push
fcmovnb
pop
push
adc
add
mov
notb
xor
in
and
mov
pop
add
lcall
xchg
enter
dec
sub
fisttpll
add
jecxz
jg
dec
dec
add
or
xchg
mov
mov
jno
sbbb
ficomps
push
inc
aam
ss
cmp
cmpsl
push
fcoms
jge
std
cmp
daa
jne
lds
test
popf
xchg
jmp
fsubs
lret
aad
lods
jne
fsubrl
cmpsb
shrl
cmp
enter
and
fstpl
ljmp
cs
mov
and
jo
call
inc
sbb
xor
jo
aam
inc
lock
lea
jmp
stos
insl
mov
xchg
push
jns
test
nop
insb
mov
int3
push
xchg
repz
sbb
cwtl
mov
movsb
pushf
lea
das
cmp
pop
icebp
cmp
scas
mov
clc
aam
xor
jp
or
repz
jge
inc
sub
push
enter
popf
push
add
pop
mov
or
or
into
sbbb
pop
pop
adc
jl
mov
stos
popa
dec
jns
inc
sub
inc
daa
cmpl
sbbl
pop
inc
cmpsb
test
xlat
loope
ljmp
nop
cli
inc
sti
hlt
adc
addb
lret
jg
mov
mov
cmp
inc
dec
cmc
ljmp
pop
push
dec
pusha
in
lea
cmpsl
jno
lahf
cmp
movsb
pusha
pushf
dec
mov
arpl
push
repnz
orl
mov
call
adc
jge
mov
mov
mov
and
adc
push
sub
ret
fwait
loopne
nop
sbb
xor
mov
xor
and
dec
pop
jae
xchg
call
scas
rolb
adcl
add
or
xchg
aaa
cmp
enter
sub
orl
jl
jg
lock
int
dec
test
inc
jle
push
dec
inc
out
mov
sbb
psrad
pop
lds
cmpsb
mov
enter
sub
repnz
popa
sbb
mov
jbe
outsl
mov
dec
repnz
jbe
mov
cs
cmpsb
xor
cs
popf
jge
dec
pop
ja
mov
xchg
cmpsl
adc
lods
sahf
test
push
stos
fwait
out
adc
xor
fsubrs
ret
movsb
pop
or
ret
ret
gs
fadds
cmpsb
mov
arpl
and
xchg
iret
repz
cmpb
and
leave
sbb
push
stos
pop
mov
mov
xchg
pop
jne
dec
xlat
adc
mov
add
mov
push
xchg
lea
sbb
imul
jmp
inc
mov
lret
cmp
push
iret
bnd
popa
test
xchg
in
test
je
push
jle
push
popl
cltd
rcrl
push
lods
test
add
xor
dec
jnp
shlb
jle
mov
pop
mov
imul
add
cli
int3
and
xor
mov
dec
out
dec
sahf
imulb
pop
insb
mov
pop
sub
js
lea
dec
jae
daa
nop
push
lods
sbbb
lcall
push
call
xchg
sub
gs
je
mov
xchg
pop
sarb
cmpsb
sub
aam
mov
push
out
scas
outsl
push
cmpsb
adc
inc
pop
aam
rorb
push
sub
pusha
adc
cltd
push
inc
getsec
cli
pop
popa
sbb
push
jo
flds
cmp
dec
cld
int3
cmp
lcall
lock
packuswb
ja
xchg
xchg
leave
call
mov
xor
and
loop
push
in
daa
add
addr16
adc
adc
xorb
pop
pop
das
sbbb
lods
cmp
push
aas
maskmovq
divl
sbb
es
cmc
into
cmpsl
ret
jb
mov
pop
jae
enter
arpl
fisubrl
in
addl
jecxz
sub
insl
bound
mov
fldl
push
xor
adc
pop
sub
rcrb
outsb
outsb
cmp
sbb
out
and
sbb
sti
ja
sbbb
pop
cmp
aad
out
out
dec
mov
rorb
ffreep
mov
pop
lea
mov
das
xchg
cmp
push
aas
dec
in
aas
clc
push
ret
and
icebp
movsl
sbb
imul
andb
xchg
in
packssdw
js
mov
imull
dec
fnclex
mov
inc
into
mov
imul
fnstsw
shlb
inc
std
repnz
sbb
dec
ror
dec
in
xor
test
jae
std
mov
bnd
ja
inc
jns
xor
xchg
pop
xchg
mov
sub
sbb
adc
jle
adc
push
cmpsb
mov
sbb
and
adc
leave
xor
inc
pop
xchg
pushf
lds
sbb
sub
bnd
mov
aas
orl
stc
mov
rcr
fsubrl
lcall
pushl
add
and
pop
sar
andb
outsb
xchg
loop
scas
inc
orw
rorb
sub
ds
sub
ret
aam
dec
cmp
cmpsl
addr16
cld
jmp
test
push
add
arpl
adc
mov
ss
shl
mov
stos
enter
sbb
enter
loopne
shll
xchg
mov
mov
cwtl
imul
insl
cmpsl
push
adc
shlb
push
add
out
jnp
mov
in
pop
lcall
jg
mov
mov
imul
cmp
fisttps
xchg
loopne
or
nop
add
cli
sub
mov
mov
popf
loope
sbb
sbbb
sub
aad
repz
hlt
pop
sbb
dec
test
pop
xor
pusha
inc
pop
push
add
jae
aad
sub
fbld
pop
rcll
mov
xor
cmp
shll
jnp
outsb
out
out
inc
fsubl
cwtl
sub
sahf
gs
mov
aaa
adc
mov
xchg
insb
cmp
int3
sub
push
out
mov
leave
push
add
iret
cmp
jbe
movb
sbb
jo
stos
dec
test
lcall
dec
fs
cmp
lcall
call
add
or
lret
push
incl
ja
pop
sub
sub
jns,pn
out
lcall
test
xor
shrb
jecxz
add
cmp
inc
in
mov
imul
sbb
xlat
dec
pop
mov
xor
mov
js
and
mov
movsl
mov
repnz
or
jp
std
xor
mov
mov
dec
data16
test
push
inc
lcall
pop
rcr
add
roll
mov
faddp
popa
insl
ret
cli
movsb
loope
jge
in
add
aas
jecxz
and
cmp
cmp
jmp
xchg
pop
mov
push
addr16
xchg
movsl
ret
mov
sbbb
pushf
jl
icebp
sub
mov
addps
jno
das
loop,pn
xor
orb
out
xlat
nop
jmp
jg
cmpsb
movb
loop
mov
mulb
outsl
sbb
mov
adc
xchg
push
dec
rolb
js
lock
lcall
xor
fldcw
jae
addr16
fwait
mov
repnz
mov
lea
pop
push
out
sbb
sub
jge
push
sub
push
lock
mov
fldenv
xchg
push
push
leave
stc
sbb
jmp
inc
outsl
adc
push
mov
mov
add
clc
ret
inc
test
test
insl
add
xchg
adc
mov
inc
mov
push
jp
jle
or
sub
ds
icebp
or
scas
mull
adc
test
xchg
dec
pop
adc
and
aam
inc
ds
push
xor
pop
or
xchg
sub
adc
jno
and
mov
lea
adc
adc
lods
add
std
and
js
imul
xchg
in
ds
push
sub
and
pusha
or
test
scas
jmp
lahf
add
xor
popf
stos
rcrl
out
movsb
outsb
push
mov
cs
or
mov
mov
xor
ficoms
jp
scas
mov
xchg
sti
or
idivl
and
mov
mov
pop
scas
cld
cwtl
sahf
inc
ret
or
gs
outsb
mov
jle
xor
xor
cmp
pop
xchg
in
add
lock
ljmp
es
jle
dec
jns
dec
ss
scas
int3
sub
in
inc
shll
js
in
syscall
pop
icebp
cmp
sbb
xchg
jae
mov
aas
mov
out
ja
xor
nop
add
or
out
cli
or
movsl
push
ret
cmp
fcmovb
addr16
push
mov
shl
jecxz
add
lret
inc
dec
or
movsl
cmpsb
add
mov
dec
xchg
mov
mov
shl
inc
cmc
loope
shrl
das
cmp
dec
shll
lea
sub
cmp
mov
test
mov
andb
or
rolb
mov
lods
push
and
adc
and
mul
into
dec
xlat
add
and
mov
inc
in
push
jnp
mov
cmp
sub
xchg
push
out
add
insb
inc
and
pop
sub
fldt
mov
mov
rcll
jp
push
fadds
pop
outsl
sub
push
cmpl
adc
or
out
cmpl
comiss
scas
cmp
mul
mov
scas
jne
iret
mov
inc
or
jecxz
jmp
ret
lea
jg
fnstsw
dec
std
ds
cmp
sub
cmp
sub
or
pop
add
inc
divb
lds
jp
dec
bound
cmp
adc
fnstsw
aam
xchg
cmp
loopne
loope
xor
cltd
jl
pop
mov
xlat
jnp
cmp
out
inc
xor
frstor
or
pop
pop
xor
es
mov
sub
outsl
xor
xor
scas
push
add
cmc
push
arpl
int
imul
sbb
sbb
cmp
xor
and
cmpsl
sbb
lds
mov
leave
sbb
inc
jnp
mov
mov
inc
jbe
out
cltd
add
shr
mov
int
leave
dec
jmp
or
adc
jmp
int
daa
stos
bound
movsl
mov
mov
pop
and
dec
push
std
pushf
test
das
addr16
test
fstps
xchg
subl
mov
inc
jne
popf
sbb
mov
pop
ficoms
gs
cld
and
roll
inc
fdivl
lea
out
scas
push
mov
arpl
cwtl
dec
aaa
popf
push
add
mov
jecxz
or
sub
xchg
jmp
mov
xor
and
enter
push
dec
mov
xlat
mov
lea
ret
fcmovu
scas
mov
clc
icebp
pusha
jmp
sub
push
mov
mov
cmpsl
int3
std
movsb
sbb
mov
mov
mov
mov
rcr
xchg
and
xchg
and
mov
mov
add
mov
dec
cmp
imul
lcall
daa
loopne
mov
mov
je
add
lea
inc
xchg
andl
cmp
sub
sahf
xor
test
mov
mov
cs
sub
aas
fbld
jg
test
xor
inc
shrb
jl
dec
mov
popf
mov
xchg
nop
lret
test
cmp
hlt
decb
je
pusha
fs
cmp
push
rorb
and
xor
leave
cmp
es
repz
push
icebp
daa
adc
out
addr16
shl
pushf
inc
testl
mov
pop
addb
fwait
mov
je
sub
dec
aas
add
lods
xlat
xchg
lods
cmpsl
add
daa
sbb
or
fsubrp
inc
sbb
sub
test
cmpsb
push
arpl
push
inc
dec
dec
xchg
dec
add
sarb
into
sub
leave
scas
int3
push
push
xchg
orb
popf
or
mov
lcall
mov
stos
movsl
aaa
aaa
sti
inc
int
and
lret
js
cmp
dec
lock
les
scas
cld
cwtl
fdivrs
mov
repnz
adc
push
out
call
pop
faddl
aad
cltd
gs
pop
or
xchg
inc
fldt
xchg
mov
or
stc
push
enter
ret
push
jns
pop
lahf
inc
pop
cmp
dec
ds
pop
iret
xor
add
jnp
ret
fidivrl
lds
adc
lret
jmp
pop
or
lahf
xchg
fadds
repnz
cmp
in
sbb
inc
lock
outsl
rcrb
adc
cmp
bound
xchg
mov
wrmsr
xchg
out
fistl
outsb
iret
arpl
push
aad
cmpsb
mov
andb
and
cmp
enter
loopne
add
add
push
dec
test
xor
and
sub
in
divl
ds
scas
mov
sbb
dec
fldt
cmp
ljmp
in
sbb
scas
cmp
jge
ret
jl
and
xor
es
lock
jle
push
bound
jne
scas
adc
ljmp
in
adc
push
out
mov
cmp
shlb
mov
sbb
or
dec
mov
fsubrs
repz
adc
mov
xor
or
fsubrs
cmp
hlt
in
aad
inc
adc
paddq
bound
xor
in
loop
mov
xlat
pushf
sub
leave
test
push
divl
lahf
sbb
mov
int3
fmul
jmp
mov
rcrl
aad
sarl
outsb
movsb
mov
lods
inc
lods
or
push
dec
push
daa
ffree
test
add
sahf
push
cmp
mov
xlat
imul
pop
pop
mov
push
mov
push
jno
ljmp
add
jne
mov
and
jmp
mov
fwait
sbb
mov
inc
test
hlt
jo
pop
push
push
jns
pop
je
loop
test
push
das
xor
lret
jge
out
loopne
mov
and
mov
mov
mov
xor
add
rorl
stos
rclb
into
cmp
add
lods
inc
cmpsl
int
leave
je
in
hlt
pop
test
cltd
test
out
loope
sub
xor
add
aaa
test
add
mov
pop
jmp
cmp
pop
jbe
stos
rcl
cli
lds
jb
xor
adc
loopne
int3
loopne
mov
pushf
mov
adc
mov
or
pusha
push
jge
loopne
xor
xor
out
push
pushf
push
push
sub
push
rcrb
aad
and
popf
and
xor
sub
sbb
sbb
pushf
sbb
imul
aad
pop
sahf
inc
add
loopne
ja
xor
sub
in
shrl
xor
mov
mov
sub
daa
mov
jnp
lcall
movl
imul
jl
pop
test
roll
stos
mov
sbb
lds
rol
aam
sub
arpl
push
jb
push
push
adc
mov
js
int
jle
arpl
mov
sti
sbb
js
lahf
mov
nop
cmp
push
sub
sub
test
sbb
popf
cmpsl
push
cltd
cmpsb
jno
add
push
insb
dec
push
hlt
pop
push
push
shlb
sarl
jecxz,pn
and
dec
add
add
pop
mov
cmpsb
add
pop
cmpsb
cltd
movsl
adc
loopne
pushf
mov
push
lock
jo
shll
mov
dec
adc
push
dec
imul
mov
jnp
jecxz
lods
lret
pop
sbb
imulb
notl
jae
mov
dec
jo
fidivs
dec
dec
mov
shll
adc
xchg
loope
dec
lock
and
adc
lret
mov
sub
cmp
stos
push
push
mov
or
xchg
inc
jno
mov
xor
or
xchg
loope
and
in
xchg
popf
into
cld
pop
lods
push
pop
outsl
mov
push
mov
cli
loopne
addr16
aam
scas
popa
iret
dec
dec
pushf
add
pop
pop
or
dec
arpl
pushl
cmc
enter
cmp
push
nop
sub
imul
shll
sbb
push
pop
sbb
jge
cmpsl
int3
jecxz
fsubrl
popf
jmp
repz
test
jl
mov
icebp
cmc
lahf
pop
xchg
jno
enter
xor
mov
mov
stos
mov
mov
ret
lret
loop
iret
jp
push
in
mov
pop
xchg
mov
jno
add
mov
dec
push
aas
daa
add
loop
adc
bound
jge
mov
push
iret
inc
ljmp
addl
out
jo
xor
test
rcll
les
addr16
into
clc
aad
aad
pop
jl
repz
mov
pop
cmpsl
pop
out
inc
icebp
push
cmp
addr16
into
and
in
mov
dec
lock
cmc
mov
push
adc
and
sub
mov
dec
jge
jo
hlt
mov
adc
mov
push
add
pop
lret
add
fsub
dec
in
rol
jb
adc
xchg
outsb
les
ret
in
lea
jp
push
inc
mov
dec
sub
lods
push
cmpsl
shl
test
dec
shll
xchg
dec
fwait
adc
loop
adc
push
imul
mov
push
int
push
out
push
dec
es
add
cmpl
cld
cmp
sub
loopne
or
test
test
dec
sbb
loop
pop
jge
out
push
xchg
cltd
xor
fs
mov
pop
sbb
push
iret
xor
divb
sbb
clc
flds
add
rorl
fstpl
loopne
icebp
pop
dec
pop
aam
mov
lahf
test
pushf
test
arpl
mov
inc
xor
xor
cltd
cmp
add
sbb
insl
scas
and
xor
popf
adc
jmp
ss
jbe
ja
mov
mov
mov
cmpsb
fldt
lock
lods
lods
inc
shl
sub
pusha
dec
sbb
fsubrl
xorb
loopne
jmp
daa
movsb
lods
arpl
or
nop
push
fsubp
ret
cmp
stc
push
fwait
fwait
dec
sbb
jl
cltd
push
cli
push
loop
xchg
lock
dec
out
pop
ja
gs
dec
jecxz
loope
push
leave
push
cmp
fmuls
divb
pop
shl
dec
jle
std
lcall
push
emms
gs
mov
inc
xor
loope
mov
add
cmc
mov
adc
sub
mov
fcomps
mov
stos
add
sub
js
pop
jg
fldl
mov
cmpsl
xorl
cmp
sbb
add
add
bound
xchg
or
or
dec
cs
mov
mov
dec
or
mov
sub
push
mov
xchg
lahf
lock
int3
or
popa
mov
and
mov
xlat
lods
loope
mov
jp
mov
in
mov
jmp
push
das
mov
inc
loope
pop
and
shrb
mov
adc
mov
arpl
dec
popf
mov
or
pop
jmp
push
repz
jecxz
adc
jo
sub
cmp
jmp
lcall
fisubrl
sbb
jns
sub
jmp
push
es
inc
lea
addr16
adc
jne
mov
mov
add
jne
add
xchg
stos
fildl
mov
mov
jmp
stos
mov
test
xchg
push
sar
cmp
icebp
cli
int3
push
gs
clc
out
imulb
xchg
xchg
jg
cmp
pop
out
ret
out
in
mov
les
call
popf
pop
cmp
push
sbb
push
jnp
mov
cmp
stc
xchg
idivl
sbb
mov
shlb
lods
gs
sub
fnsave
mov
pop
sbb
fs
pop
or
jg
pop
outsb
and
pop
ffreep
test
cmpsb
push
in
mov
mov
and
xlat
mov
cmpsb
popf
mov
jb
or
call
or
jae
fiadds
pusha
cwtl
lret
jl
lcall
and
add
aam
jne
or
mov
mov
jle
and
push
pop
sbb
push
mov
mov
cwtl
push
dec
xlat
lret
jl
lods
cmpsb
lret
outsl
roll
sub
sub
sbb
aad
add
or
pop
mov
pop
bound
movsb
incb
movsb
push
add
lret
and
jo
dec
addr16
sti
jmpw
mov
dec
jae
adcl
xchg
rcrb
es
mov
and
mov
pusha
outsl
pop
sbb
js
sbbb
cmc
fstpl
movsl
xor
adc
cmp
xor
insl
loope
test
cmc
or
cmp
add
fimull
fidivl
lds
aaa
dec
or
mov
popa
andl
mov
fwait
mov
outsb
cmp
sarb
hlt
pop
in
inc
popf
cwtl
pop
scas
push
sbb
pop
hlt
icebp
arpl
mov
cmp
mov
inc
cwtl
adc
out
addr16
pop
outsl
test
andl
sub
das
mov
dec
lahf
test
mov
cmp
dec
pop
loop
jne
pop
shll
or
sub
fwait
xor
ja
cmpsb
sti
or
jno
lods
scas
lahf
roll
xor
jne
pop
out
pop
pushf
add
push
sbb
jecxz
jns
push
imul
jnp,pn
mov
push
mov
stos
aam
pop
je
ret
jnp
inc
push
mov
aaa
or
sbb
mov
sbb
xor
js
aad
aaa
mov
mov
dec
rcll
jl
sbb
sub
jge
adc
inc
push
adc
or
xchg
call
loop
imul
sub
sbb
push
test
fildl
mov
xchg
lds
clc
fcoms
sti
mov
je
dec
cwtl
jnp
enter
movsb
push
push
add
add
gs
iret
cmpsb
outsb
ss
jo
dec
mov
psubb
ds
dec
jecxz
sbb
call
mov
xor
add
push
sub
dec
jo
out
mov
and
jg
fxtract
insb
push
call
decl
cmp
mov
leave
or
in
add
xlat
in
pop
popa
xchg
cld
sub
loop
and
pop
push
in
hlt
ds
jp
and
test
sub
sub
push
xor
add
mov
lock
push
testl
mov
cmpsb
sub
rcrl
movsb
rclb
cltd
jg
das
mov
jbe
dec
aaa
or
sbbb
cld
push
sbb
stc
push
ss
jl
icebp
cs
aam
lcall
subb
mov
inc
das
mov
shlb
lahf
push
jae
jae
test
and
scas
mov
inc
popf
sbb
xor
pop
cs
pop
sbb
adcl
cmc
out
ret
stos
or
imul
dec
xchg
pop
add
cli
inc
mov
jno
push
pop
lcall
loope
enter
clc
je
sbb
mov
mov
es
sbb
jl
imul
in
inc
sub
mov
leave
fsubrs
je
and
pop
dec
xor
pop
ret
pop
adc
aas
fstl
lret
fsub
pop
adc
pop
shr
push
xchg
inc
xor
inc
fcmovbe
sub
inc
mov
sbb
imull
sbb
adc
clc
xchg
sub
ret
jb
mov
cmpsl
push
dec
mov
lds
pop
or
mov
fisubl
xlat
insb
ljmp
push
push
out
popa
imul
je
loopne
fs
jle
lods
lods
insb
aas
lea
dec
mov
xor
xchg
and
cmp
mov
pop
dec
or
or
data16
std
rcl
mov
xchg
shl
mov
int3
pop
dec
enter
mov
cmpl
roll
lds
popf
ss
fwait
lcall
sbb
jbe
mov
lods
ss
mov
jg
dec
xchg
aam
sub
les
jg
add
arpl
iret
por
sbb
add
cmp
lret
xchg
call
aam
pop
sbb
scas
push
push
js
call
dec
out
add
or
rolb
movsb
inc
fistps
arpl
pop
fnsetpm(287
pop
mov
adcl
xchg
add
insb
fistps
mov
flds
lret
xchg
mov
pop
jno
cltd
sub
inc
inc
mov
sbb
mov
add
stos
mov
lahf
out
sbbb
fimull
jg
jnp
dec
xchg
adc
inc
sub
movsb
xlat
pop
xor
pushf
xlat
mov
leave
cmpsl
push
in
jle
inc
js
mov
adc
sbb
mov
sbb
rcll
aas
inc
popa
xchg
and
in
dec
adc
popf
data16
pop
addr16
mov
in
int
or
xor
lcall
mov
mov
mov
dec
testl
adc
xor
iret
ret
insb
pop
insb
push
in
shlb
in
orl
data16
xor
bswap
jge
mov
fs
pop
xor
clc
rorb
sub
leave
pop
sbbb
out
ljmp
mov
cmc
add
xchg
adc
and
out
lret
and
xchg
push
outsl
push
outsb
pop
xchg
and
jge
repnz
scas
mov
jbe
jecxz
adc
xchg
push
sub
jmp
inc
into
aad
inc
or
dec
jne
mov
ljmp
push
mov
sti
cmp
add
lcall
ret
add
stos
leave
inc
flds
imul
cmp
xor
jbe
ret
and
xor
imulb
js
xchg
inc
xor
cwtl
cmp
adc
test
les
mov
mov
cmpsb
fadds
hlt
cmpsl
clc
pop
adc
sbb
dec
adc
les
ret
out
cld
leave
int
xorl
jno
sbb
test
cli
add
jle
xchg
add
push
iret
js
push
cs
test
xchg
aam
testl
xor
adc
repnz
aaa
cs
sbb
mov
push
mov
xchg
pop
sbb
cmc
icebp
loop
addr16
sub
jbe
pop
jecxz
fcompl
sahf
in
jecxz
fstpt
push
lods
dec
imul
test
fisttps
pop
xor
jp
mov
testl
jno
xorl
dec
adc
adc
push
inc
movsb
xor
das
mov
cmp
hlt
pop
mov
push
or
push
int
insl
jbe,pn
pop
cmp
mov
and
jbe
bound
ja
fwait
cmp
mov
mov
or
or
cmc
sbb
jne
mov
push
jl
sarl
lahf
repnz
xor
or
sahf
adc
adc
lret
mov
arpl
and
repz
jne
mov
xchg
adc
shrb
dec
push
push
shlb
shrb
pop
push
sub
icebp
pop
andl
xor
enter
scas
dec
adc
adc
or
lcall
adc
adc
mov
movsl
inc
and
pop
mov
fs
push
repz
aad
mov
stos
mov
fwait
pop
mov
and
dec
es
out
lods
test
xor
jo
call
into
dec
aad
sbb
cmc
dec
outsl
mov
cmp
int
push
shlb
int
add
mov
dec
sbbl
fnsave
and
mov
and
out
ret
cmp
jmp
mov
pop
cmp
pop
xor
js
or
rclb
dec
add
mov
test
mov
push
mov
xchg
int3
sbb
lods
fbstp
lock
xchg
inc
adc
xchg
ds
add
cmp
mov
mov
lds
push
push
cmp
xor
in
add
iret
dec
or
or
aaa
push
xor
test
mov
insl
mov
in
ficomps
xchg
xchg
ret
addr16
sti
es
and
add
loope
fwait
icebp
pushf
add
push
popa
jle
cmp
stc
leave
xor
xor
movsb
divl
leave
divl
jnp
loope
fildl
lods
xchg
xchg
test
push
jmp
jecxz
mov
sbb
push
rcr
mov
daa
pop
clc
or
cmpb
das
cmp
pop
call
or
ljmp
or
sbb
push
dec
lret
jmp
cmp
in
stos
sbb
pop
or
out
gs
nop
std
lds
or
lods
stc
mov
subl
fistl
adcb
inc
test
lods
fistpll
jne
iret
add
jne
sti
hlt
push
ds
cwtl
cs
jl
movsl
mov
pop
fldln2
daa
jmp
jp
lcall
mov
sarl
popf
jecxz
lea
sub
je
sahf
fs
dec
pop
push
dec
in
xchg
and
div
push
test
pop
adc
je
jnp
mov
dec
gs
lahf
adc
imulb
loop
push
les
jp
xor
push
xor
lcall
fnstcw
movsl
outsb
push
add
in
adc
sbb
adcb
pop
jb
jg
jo
loopne
mov
cmc
popa
mov
fisttpll
outsb
mov
add
xor
aad
dec
fimull
addb
stos
mov
ljmp
push
sarb
add
xor
imulb
stos
mov
inc
loope
scas
adc
pop
loop
and
inc
aaa
cmpsl
push
add
enter
xor
out
dec
test
mov
xchg
adc
cmp
pop
cli
mov
jl
push
in
jle
pop
inc
cli
jmp
xor
push
sbb
sbb
push
cmp
dec
dec
or
data16
adc
xor
dec
and
aad
into
adc
je
test
cmp
cmp
push
mov
push
push
fmuls
xor
div
insb
pushf
jo
in
arpl
pop
jb,pt
push
cli
lea
int
mov
xchg
add
sub
in
aam
test
imul
mov
sbb
adc
mov
icebp
cmpsb
inc
cmp
fiadds
cmpl
scas
mov
iret
dec
fwait
out
xchg
shrb
xchg
ficoms
stos
cmp
mov
push
lahf
mov
ds
mov
mov
cmp
cmp
shr
loop
dec
and
rorl
arpl
cmpl
fsubs
mov
sub
add
push
leave
jae
mov
out
sbb
lods
push
and
push
icebp
inc
out
mov
mov
ljmp
and
cltd
inc
lret
insl
jnp
push
loope
jmp
pop
daa
out
shll
xchg
fildll
hlt
cmpsb
int
call
mov
dec
xor
daa
pop
dec
add
jb
int3
xchg
cltd
xchg
sub
fs
call
mov
cmpsb
in
jb
xchg
mov
mov
aas
or
leave
icebp
outsb
pushf
test
dec
arpl
cmp
push
push
aam
jbe
divb
lds
ret
jecxz
mov
mov
pop
cmp
aam
es
add
gs
outsb
cld
xor
and
ja
fidivrs
pop
mov
dec
repz
imul
jmp
or
adc
jmp
pop
push
pop
mov
push
or
icebp
gs
aam
xchg
test
mov
cvtps2pi
xchg
test
and
mov
dec
out
fistpl
mov
insb
imul
shrb
stos
and
loopne
xor
add
pushf
jns
and
push
add
out
pushf
test
push
pop
pop
xor
xchg
adc
push
outsb
rcll
jge
rcll
adcl
and
cmp
mov
pop
push
nop
push
das
xchg
sbb
sbb
ds
push
and
clc
aad
lret
pop
jne
mov
add
ret
sub
or
pop
push
cli
and
adc
les
insl
push
jns,pn
pusha
aaa
add
fldcw
xchg
cmp
notl
loop
outsb
bound
in
fwait
xor
xchg
jecxz
mov
in
mov
xchg
icebp
xor
ret
mov
dec
cmp
mov
iret
or
adc
pop
or
push
cmp
ret
adc
shlb
test
aad
enter
jp
jnp
sub
pop
mov
jmp
mov
pop
pop
and
cmpsl
mov
mov
fadd
or
das
fs
mov
jmp
repz
insb
mov
pop
test
in
pushf
into
in
popa
pop
lods
dec
mov
mov
mov
pop
inc
jge
xchg
or
es
push
or
bound
andl
jno
into
mov
and
outsb
pop
or
clc
mov
cmp
pop
sub
pop
push
push
imul
ss
aas
les
and
scas
and
pop
dec
jecxz
and
loop
aad
daa
rol
cmp
xchg
mov
cld
jecxz
sbb
xchg
repz
add
mov
lods
or
dec
cmpsb
jg
out
pop
fidivl
mov
sub
test
or
decl
fldln2
sub
add
clc
sbb
mov
and
and
imul
ret
xchg
shl
sti
adc
push
inc
or
pop
pop
pop
xor
push
push
mov
aaa
lock
inc
pop
jge
mov
xor
cwtl
or
dec
and
int
cmpsl
popa
loop
jl
push
test
call
call
push
xchg
incl
out
dec
jge
sbb
div
adc
cmp
in
pop
ret
vmovntps
sub
or
and
push
or
mov
and
insl
jl
ss
push
imul
out
cmp
mov
ljmp
dec
mov
fmul
testl
or
ljmp
lahf
das
or
mov
nop
aaa
pop
scas
sbb
nop
lret
and
push
push
stos
insb
add
push
jbe
lods
out
fcmovnb
push
mov
cmpsb
shlb
loopne
mov
cmp
sarl
xor
xchg
loop
cmp
inc
imul
std
mov
lret
test
push
jecxz
mov
aaa
push
dec
or
cmc
xchg
arpl
lret
out
mov
imulb
inc
dec
imul
lea
xlat
iret
dec
mov
in
mov
pop
lret
lods
fwait
and
mov
data16
inc
xor
jbe
sti
out
filds
pop
mov
std
mov
cmpsl
mov
inc
pushf
lret
cltd
jl
mov
dec
jo
dec
notb
and
mov
scas
mov
xchg
adc
jmp
movsb
gs
push
pop
sub
sti
cmpsb
repnz
or
test
loop
bswap
cltd
js
fnsetpm(287
fs
arpl
adc
inc
dec
sarl
scas
loope
mov
xchg
push
jne
cmpsl
fwait
ja
test
mov
xlat
popf
clc
xrelease
rcrb
stos
and
pop
ds
push
in
mov
in
gs
xlat
cli
insl
add
adcb
push
mov
les
adc
inc
js
std
fwait
pop
insl
pop
out
add
mov
pop
bound
arpl
mov
fiadds
das
sbb
sbb
mov
imul
cmp
orb
enter
mov
lock
rclb
xchg
adc
sub
sub
lret
lds
jns
arpl
jecxz
movsb
das
mov
mov
sbb
xchg
push
cli
jae
xor
gs
sbb
roll
jo
rcrl
inc
and
inc
or
imul
sub
mov
testb
test
push
in
fildl
xchg
and
mov
sub
dec
in
push
outsl
or
jae
das
out
inc
iret
roll
cmp
mov
orb
mov
cmc
or
out
xor
inc
and
dec
push
out
push
test
bound
stos
test
loop
mov
pushf
test
and
mov
push
xchg
inc
push
xchg
in
insb
and
in
cmp
push
nopl
jne
sbb
fldl
mov
xchg
jle
and
pop
jno
push
add
lret
jecxz
stos
std
rcrl
mov
push
and
jno
sub
es
sbb
inc
popa
nop
cld
add
arpl
addr16
mov
jns
or
je
mov
sti
adc
js
pop
mov
mov
mov
mov
mov
xchg
stc
push
imulb
scas
stos
xchg
lcall
push
and
test
inc
inc
mov
or
cmp
pop
pop
jge
mov
repz
mov
outsb
mov
out
pop
aam
inc
sbb
ja
inc
jb
adc
and
mov
mov
addl
lods
jecxz
mov
jge
and
leave
sbb
mov
ss
jns
bswap
fdivrl
push
xchg
int3
cmp
push
jne,pn
inc
mov
pop
mov
jno
cwtl
and
aad
push
mov
sahf
xlat
mov
mov
xor
pop
push
rol
push
dec
and
rcrl
aad
xchg
test
in
cmpsl
aad
push
fnstsw
add
mov
sub
pop
enter
jbe
das
mov
push
shll
test
mov
adc
ret
jmp
push
jb
push
dec
daa
insl
cmpsb
stos
adc
mov
cmc
jo
jne
or
inc
jge
push
sub
rcrb
outsb
xchg
ja
xchg
pushl
fs
aad
bt
or
jns
fadd
cmp
test
mov
test
push
mov
jno
dec
fbstp
and
addr16
mov
and
jo
in
cmp
inc
or
xor
enter
cmpsl
mov
sahf
out
loop
inc
lahf
dec
add
lods
inc
clc
mov
mov
adc
xchg
xorb
push
jl
lcall
adc
add
js
ret
daa
out
lahf
sbb
icebp
cmp
bound
cmp
inc
sahf
leave
cmp
insl
push
xchg
or
ss
sub
ficoml
mov
jmp
fildll
add
cmp
cli
fadds
push
dec
xchg
xchg
repnz
ss
sub
cmp
mov
addr16
inc
stc
lahf
adc
rclb
cs
aaa
in
or
push
pop
hlt
dec
jl
cmp
inc
inc
cmc
mov
jns
nopl
iret
nop
mov
insl
sarl
out
mov
jmp
jbe
outsb
js
imul
and
aaa
xorb
or
mov
or
out
popa
adc
mov
inc
repz
popf
adc
lret
mov
inc
scas
cmpb
inc
xor
jno
mov
cmp
push
mov
push
test
lock
xlat
push
mov
and
scas
jg
imul
movb
or
aad
movsl
pop
pop
dec
xchg
fbld
out
mov
outsb
jb
orl
or
mov
ror
mov
aas
daa
insl
mov
mov
pop
push
mov
js
loope
mov
add
lods
or
mov
jge
mov
in
pop
mov
cld
pop
es
sub
or
jl
cld
ja
dec
mov
leave
mov
cmp
xlat
fs
jnp
into
mov
aad
dec
cld
in
and
sub
stc
push
add
cmc
sahf
mov
mov
mov
xchg
fsts
sbb
mov
dec
dec
cli
rorl
cmpsb
sahf
in
mov
scas
scas
rcll
push
nop
subl
or
imul
es
ret
addb
and
cmpsb
clc
jae
sbb
js
pop
mov
divl
and
push
inc
mov
sub
pop
xchg
mov
adc
and
loop
pop
into
pop
out
and
mov
jo
xor
lcall
mov
add
js
mov
shll
roll
ds
rclb
cmp
sbb
mov
pop
clc
rclb
movsb
pop
mov
sub
outsb
aas
push
mov
stos
mov
add
decl
bound
std
adc
dec
fwait
mov
sub
loope
pop
test
popa
mov
mov
fcompl
cmpsb
push
test
add
xor
dec
jg
xchg
pop
pop
or
fbld
jmp
flds
adc
and
pop
or
cwtl
repnz
push
mov
adc
inc
les
adc
test
xor
scas
jge
out
scas
imul
add
enter
sahf
jns
mov
fs
xchg
test
sub
dec
pop
mov
push
stc
es
pop
mov
mov
pop
divl
mov
push
cmp
dec
jle
sbb
jne
pop
jg
mov
outsb
ret
fdivr
pushf
add
pusha
nop
mov
lcall
imul
sbb
xchg
pop
and
or
lock
pop
out
shll
xchg
stc
rclb
dec
jb
fcoml
pop
mov
push
and
add
mov
inc
mov
mov
ret
fstl
rol
push
push
xor
sbb
mov
adc
imulb
push
out
ret
push
adc
mov
in
loope
xorb
inc
and
adc
or
xor
cmp
loop
scas
into
add
dec
and
gs
lods
mov
add
fisubl
outsl
insl
outsl
mov
lds
push
lret
mov
mov
xor
cmp
mov
imul
jmp
or
add
inc
scas
hlt
xor
sub
mov
jge
out
loop
jb
mov
and
inc
xchg
test
xlat
dec
or
xchg
cmp
les
adc
adcb
push
out
jge
out
dec
xchg
dec
idivl
insl
adc
test
ss
push
adc
icebp
xor
jecxz
inc
push
sbb
cmc
scas
or
inc
adc
roll
xchg
ret
or
sub
int3
fwait
jbe
push
mov
stos
imul
mov
ret
mov
out
cmpb
outsb
xor
jle
adc
push
sti
in
lods
cmp
push
jae
inc
jecxz
and
mov
xor
sub
popf
push
push
xchg
mov
jg
pop
add
pop
pusha
adc
mov
push
sbb
sub
fldpi
ljmp
gs
and
xor
pusha
mov
mov
into
mov
rorl
mov
hlt
push
cmp
or
add
test
test
cmp
hlt
inc
std
sarl
sti
mov
push
cli
push
cltd
inc
push
jns
and
fnstcw
test
loope
movsb
filds
les
ret
aam
pop
lea
pop
jmp
leave
mov
pop
or
insb
fdivl
stos
jge
repz
jp
aad
add
push
fs
jge
cli
dec
lahf
shll
and
cld
dec
out
dec
stos
sub
mov
icebp
or
nop
negb
mov
movl
xchg
test
mov
clc
adc
idiv
pushf
pushf
test
adc
insl
movsb
mov
je
pushf
pop
push
adc
pop
cmp
mov
jl,pt
jg
shr
jl
lds
sti
dec
loope
mov
jl
inc
jae
insl
lds
cmpsb
loope
add
push
and
cmp
hlt
mov
in
int
clc
cmpsb
je
scas
in
jne
insb
mov
popf
push
mov
ret
mov
sub
mov
push
addr16
gs
add
cld
xchg
ds
pop
mov
aad
das
ret
xor
jae
popf
ljmp
imul
xchg
or
lods
mov
fwait
and
mov
clc
lret
cmp
cmp
repnz
scas
out
loop
adc
outsb
jbe
insl
add
adc
jge
adc
out
jecxz
cmpsb
testb
push
push
dec
pop
fdivr
sub
test
stos
push
cli
adc
jbe
mov
adc
cmp
dec
xchg
sar
jecxz
loopne
adc
sbb
sahf
push
dec
fistpll
sbb
imul
mov
jo
adc
mov
aaa
fcmovne
cld
xchg
fwait
ds
jle
cmp
lcall
popa
pop
repz
add
cwtl
cmp
aas
or
les
aam
inc
lcall
faddl
mov
mov
xchg
jbe
shll
xchg
xchg
jmp
fistpl
enter
add
mov
mov
sbb
push
cmp
addr16
and
sar
mov
mov
jecxz
pop
add
xchg
xchg
jnp
std
iret
lret
xor
out
cmp
xor
pop
loop
ja
pop
or
loop
sarb
or
and
mov
cmp
rcl
cmp
cmp
adc
mov
mov
out
fsts
daa
xor
cwtl
inc
pop
adc
xor
cmp
dec
add
sbb
add
and
mov
push
adc
pop
iret
addr16
lds
pop
test
add
scas
data16
outsl
enter
sbbb
sub
pusha
cmp
arpl
data16
xchg
push
jp
lea
jmp
call
add
sbb
movsl
and
sub
xchg
mov
in
sub
sub
push
sbb
lea
mov
dec
adc
mov
xchg
jne
fildl
xchg
call
test
cs
jecxz
ja
ljmp
lret
inc
or
cltd
stos
add
outsb
hlt
ret
xchg
push
aad
lret
fstpl
adc
cmp
sub
and
cmp
lods
inc
jb
idiv
loopne
aam
popf
mov
jbe
mov
mov
jg
sbb
and
fwait
pop
mov
xchg
mov
sbb
push
sahf
ja
lods
xchg
or
inc
popf
mov
out
insl
sub
out
nop
push
std
xchg
sub
sbb
add
stos
and
jno
and
and
cmp
cmpsl
mov
mov
test
ficompl
jns
xchg
pop
enter
imul
xor
inc
lea
push
aas
addr16
jns
lahf
jb
loopne
add
fisubrs
hlt
pop
movsb
pop
inc
mov
loope
adc
xchg
mov
sbb
cmp
xchg
adc
pop
cmp
pop
loop
ficoms
dec
loopne
push
push
cmpsb
xor
daa
or
mov
test
pop
mov
nop
cli
sbb
scas
and
push
xor
xlat
insb
insb
or
cmp
mov
aad
cmp
and
incl
adc
sbb
nop
cltd
or
jmp
icebp
in
fdivp
lea
mov
pop
sti
lods
mov
leave
sbb
pop
imul
xor
cli
iret
adc
or
jnp
popf
cld
dec
mov
inc
clc
pop
lret
pop
mov
rclb
mov
sub
sub
out
xchg
nop
and
leave
mov
mov
mov
pop
fsub
xlat
jbe
cld
lret
xchg
inc
test
jge
xchg
dec
iret
out
jne
dec
pop
fucom
iret
aad
mov
mov
rcr
mov
rorl
pop
lods
xchg
pushf
mov
add
mov
fcmove
ljmp
enter
push
cli
adc
xor
daa
test
inc
scas
pop
sbb
shrb
xchg
jns
xor
into
ss
push
icebp
loopne
dec
clc
sbb
mov
out
mov
mov
int
jge
jmp
mull
mov
arpl
jge
scas
push
or
push
mov
mov
cmpl
sarl
xchg
jmp
push
ja
jge
jb
jno
push
mov
into
mov
pop
imul
mov
dec
pushw
pop
fwait
jne
or
in
xchg
inc
pushf
xor
jns
push
jno
push
push
iret
inc
mov
sbb
pop
mov
dec
sbb
cltd
jl
imul
adc
cmp
in
fstps
mov
pop
pushf
out
sub
pusha
fidivs
cltd
stos
mov
cmpsb
lret
push
jp
cmpsl
inc
pop
ljmp
adc
mov
loope
test
inc
dec
xchg
in
add
adc
push
inc
or
mov
cmpsl
fisubrs
int3
fcmovne
clc
inc
fdivs
les
das
call
les
add
repz
imul
out
push
sub
or
sub
test
mov
adcl
push
inc
in
and
jb
lret
xchg
sub
mov
loope
jle
xchg
push
out
out
das
fisttpl
jge
push
ss
les
pushw
gs
and
outsl
cmpsb
pop
xor
cmc
cmpsl
in
mov
mov
ret
sub
out
mov
cmpsb
xchg
divb
outsb
xlat
out
lahf
and
add
in
lret
xchg
cld
pusha
adc
adc
adc
fwait
leave
enter
mov
daa
xor
sbb
sbb
mov
aas
mov
ds
hlt
lret
rcrl
cli
xor
insl
pop
lcall
jno
ljmp
icebp
push
jp
inc
addb
shll
fmull
daa
iret
scas
cmp
mov
leave
push
leave
cmp
mov
sarl
mov
test
add
cmpsl
xor
mov
iret
sahf
dec
mov
sub
sub
mov
push
push
mov
sbb
mov
insb
pop
out
jo
pop
addr16
out
adcl
and
push
stos
clc
xlat
or
mov
push
loopne
jg
rcl
add
jge
int3
std
call
jle
test
jmp
test
out
cs
outsb
or
inc
cmp
gs
add
out
out
sti
bound
inc
cmp
ficoms
adc
es
xchg
adc
sbb
negl
push
pop
loopne
jl
aad
ret
in
push
data16
scas
cltd
sti
jle
icebp
add
ret
jg
js
jne
rclb
out
push
repz
iret
ret
ja
cmp
sub
jmp
int
rorl
sbb
lret
fwait
hlt
lcall
jo
in
pop
out
ficomps
mov
lahf
dec
out
xchg
pop
test
xor
lds
fcmovne
add
imul
pop
movsl
stc
sar
mov
ret
cmp
cmp
add
insb
fisubl
adc
mulb
fisttpll
adc
adc
xchg
jno
sub
or
inc
xor
add
mov
lea
or
roll
aam
dec
lcall
adc
adc
aaa
bound
out
xlat
sub
sub
fwait
push
adc
jo
mov
daa
dec
adc
mov
repnz
add
mov
dec
cmp
pop
pop
insl
push
js
inc
sbb
jecxz
lock
pop
sahf
push
ret
mov
fprem
xor
add
push
rcrl
xor
daa
and
mov
mov
in
pop
or
push
xchg
mov
push
push
cmp
popf
rep
pop
movl
incb
faddl
insb
cltd
add
lahf
push
stos
pop
cmp
jo
cs
jp
inc
sub
xor
pop
movl
mov
push
push
mov
and
sets
xor
sbb
sarb
or
sbb
cltd
inc
fwait
lret
jmp
in
repnz
xor
das
sbb
ss
lea
es
test
lods
movsl
fnsave
rorb
out
flds
test
xchg
and
and
bound
insl
adc
hlt
sbb
hlt
sbb
mov
cmp
inc
mov
dec
push
insl
mov
je
jns
sub
mov
and
outsb
pop
xchg
mov
push
jecxz
add
stos
fs
cmp
rcl
cwtl
aaa
pop
jno
mov
out
sub
out
shl
lcall
movsb
call
jnp
sbb
mov
pusha
leave
xchg
ret
pop
inc
inc
jmp
fildl
popa
cmp
idiv
push
popf
mov
out
rorb
cmp
dec
cwtl
push
inc
loope
lret
push
jb
pop
insl
pop
call
push
lods
stos
aam
push
mov
lcall
rcrl
push
mov
ret
pop
mov
jle
mov
cmp
inc
mov
dec
xchg
data16
lods
adc
movsb
scas
xchg
ds
popa
ljmp
sbb
scas
mov
mov
push
push
fs
scas
and
sti
aam
lret
mov
cmp
push
fidivrs
dec
popf
cmp
fmulp
push
pop
add
cltd
stc
push
push
xchg
cld
jmp
jne
and
rorb
push
and
in
ret
movsb
jle
add
popa
mov
and
aas
jae
and
pop
sbb
pop
fisubl
dec
cmc
mov
cltd
iret
push
mov
fdivl
adcl
add
aas
xlat
rcr
add
mov
dec
std
rcll
movsl
test
lcall
dec
jecxz
rorb
or
lods
cwtl
insb
mov
push
cmp
jns
cmp
inc
mov
push
mov
inc
gs
cmp
int3
pop
dec
mov
push
push
out
out
jns
xor
and
jne
decb
xchg
fldl
xor
inc
bnd
jno
mov
inc
and
jge
or
out
mov
movsb
idivl
dec
or
push
cmp
cltd
cs
lea
addr16
push
xchg
scas
pop
rcl
hlt
add
aaa
pop
ret
push
xchg
jg
cmp
lock
mov
and
pop
jae
stos
std
arpl
dec
mov
add
dec
cs
dec
inc
cltd
push
aaa
jmp
das
outsl
jnp
stos
pop
subl
aam
pop
mov
xchg
inc
mov
jge
test
subl
sub
adc
je
and
loop
push
nop
jp
and
cli
in
xor
fisubs
pusha
in
mov
repz
shlb
fists
mov
xchg
and
popf
out
add
xchg
dec
rcrl
leave
xor
mov
jne
inc
inc
cmp
movsl
xchg
out
or
out
or
out
xor
clc
lret
or
mov
fcoml
movsl
fs
lret
jle
mulb
mov
mov
sbb
lods
or
add
sub
popf
add
cltd
jno
ss
or
iret
cmpb
out
loope
int
sbb
es
movsl
jle
xchg
popl
sub
fnsave
lahf
testl
inc
lea
inc
xchg
and
pop
in
push
fstps
stos
lret
mov
sub
mov
jo
pop
movsb
adc
push
loopne
shrl
or
bound
out
ljmp
sub
mov
scas
std
add
mov
cld
bound
cwtl
ret
dec
xchg
inc
ds
dec
mov
ss
repnz
and
xorw
in
iret
shlb
or
outsl
xchg
push
fbld
cmp
and
mov
data16
or
cs
lcall
enter
add
das
pushf
xchg
jns
xor
jne
in
inc
rclb
dec
insl
mov
das
jns
mov
arpl
fwait
xchg
mov
xor
mov
mov
or
jle
ficomps
adc
bound
std
mov
or
cmp
stc
add
or
or
or
cmp
add
popa
or
sub
pop
in
sbb
jmp
inc
ljmp
mov
test
sub
mov
lock
movsb
scas
pop
push
mov
iret
lea
inc
inc
ds
push
fnstsw
jno
inc
pop
mov
hlt
fs
in
xchg
fdivrp
dec
dec
jnp
add
daa
push
testb
fdivrl
and
les
inc
pop
xchg
xchg
jge,pt
aas
pusha
js
decb
std
outsb
in
in
shrl
testl
xchg
je
push
mov
mov
call
mov
sub
mov
sub
cmpsb
push
cmp
arpl
stos
add
out
cmc
sub
aad
scas
lods
in
jecxz
popf
cltd
or
hlt
mov
jae
pop
xor
inc
les
test
iret
stc
fnsave
xchg
dec
ss
lahf
inc
clc
pop
mov
add
jo
or
add
popa
xor
daa
lret
xlat
mov
or
push
jbe
stos
mov
mov
lret
push
loopne
mov
xchg
adc
data16
xor
xor
js
in
aaa
jl
mov
push
pop
jbe
imul
push
lret
dec
mov
jmp
in
out
jo
mov
fidivrs
fidivrs
mov
insl
adc
int
push
sarl
inc
es
adc
iret
pop
jp
sbb
dec
sub
std
insl
daa
jne
mov
enter
jecxz
add
popa
mov
mov
push
test
mov
xchg
dec
sbb
out
mov
movsb
mov
fcom
inc
mov
out
out
adc
adc
inc
jl
out
iret
sub
int
mov
je
cld
ds
mov
test
lret
jbe
xor
ss
ljmp
add
inc
sub
mov
shll
rclb
cmp
shlb
mov
and
shrl
int
es
mov
jp
mov
pushf
cmp
rcll
or
daa
xor
insl
push
daa
repz
dec
bound
fsubs
lea
int
xor
mov
test
mov
arpl
and
lds
mov
jl
enter
or
addb
push
mov
daa
shl
sub
notb
negl
fistl
pop
mov
shll
mov
fdivr
insb
and
pop
pop
jle
lret
icebp
xor
adc
rol
jae
lods
pop
and
push
cmpsl
inc
xchg
mov
xchg
push
loop
lds
cmpsb
inc
and
dec
pop
in
push
cmp
fwait
aam
aas
push
out
aad
push
stos
push
xor
inc
xlat
sub
imul
adc
stos
push
lds
sbb
aas
dec
movsl
loope
cmp
fisttpll
insb
test
and
ljmp
mov
mov
mov
test
push
js
inc
and
fmull
mov
ret
push
dec
out
pushf
hlt
sbb
xchg
cmp
xor
inc
fs
loop
sbb
lcall
mov
pop
add
out
mov
inc
into
xchg
adc
sub
and
test
and
mov
loope
dec
fwait
dec
or
popl
add
hlt
test
mov
push
adc
or
int3
movsb
inc
lds
fcos
add
lcall
mov
dec
pusha
lock
iret
lahf
and
cmp
push
mov
lods
ljmp
sarl
jecxz
add
insb
mov
rcll
repz
xor
data16
xor
adcb
mov
in
mov
mov
jne
movsl
pmuludq
scas
clc
xchg
daa
inc
int3
aaa
inc
add
gs
cmp
rcl
sub
jae
popf
lea
hlt
loop
stc
xchg
sbb
call
sbb
int
push
push
inc
xchg
xchg
pusha
jge
fstpt
ja
xchg
sbb
or
or
and
mov
inc
out
or
popf
mov
pop
stos
xor
xor
dec
bound
mov
push
fimull
lods
in
jecxz
cmp
lahf
shrb
pushf
nop
mov
repnz
pop
pop
adc
scas
insb
test
icebp
test
or
inc
sub
lods
inc
hlt
rcr
dec
push
inc
inc
pop
mov
push
or
fists
sub
sahf
push
jb
fistpll
mov
mov
imul
sub
cmp
dec
push
dec
pop
push
or
xchg
pop
xor
dec
ja
xor
shlb
jecxz
faddl
out
icebp
mov
and
ljmp
lret
ds
test
hlt
es
xchg
inc
xor
stos
shl
jno
test
sahf
outsl
inc
ror
jnp
inc
xchg
mov
les
jl
fldenv
fiadds
mov
ret
inc
popa
jb
repz
ret
in
lret
mov
or
jno,pt
add
cmp
inc
pop
inc
push
stos
lea
leave
and
mov
testl
int3
cltd
outsb
fcmovb
out
and
pop
xor
dec
jmp
je
sbb
dec
scas
xor
and
out
sbb
aaa
inc
pop
ja
push
pop
xor
add
jmp
push
je
int3
lret
std
mov
sbb
sbbl
mov
lahf
mov
bound
pop
jno
mov
sbb
enter
adc
insb
push
xor
hlt
std
pop
adc
xchg
push
test
xchg
ljmp
mov
xchg
add
repz
xchg
add
adc
inc
adc
std
mov
push
sbb
mov
mov
and
addb
in
outsb
jns
aam
mov
adc
sarl
pop
inc
inc
stc
add
rorb
sub
mov
mulb
adc
fld
scas
aas
add
lahf
push
push
xchg
pop
lock
ror
mov
pushf
into
loopne
call
mov
lods
mov
imul
int3
push
adc
push
jbe
push
int
push
sub
sahf
cltd
dec
cmp
shrb
shr
or
cs
js
and
mov
test
rclb
shll
sub
dec
pop
pop
sti
imul
or
xor
push
lcall
pop
push
scas
xor
insl
inc
cmp
jno
xchg
add
inc
stos
fstpt
push
insb
and
fiadds
loope
cmp
pop
push
add
outsb
data16
pop
pop
lods
sub
in
xlat
std
andnps
mov
sbb
adc
stc
shl
jne
loop
loopne
imul
mov
mov
movsl
fisubl
push
adc
dec
cli
xchg
insb
inc
out
push
jmp
mov
sbb
xlat
xchg
movups
jnp
testl
cmpsl
cmp
adc
enter
nop
sub
hlt
mov
xchg
stos
ja
add
test
sub
jo
inc
out
mov
addl
mov
ljmp
in
inc
push
mov
cmp
out
in
loop
fdiv
push
inc
movsb
testb
adc
pop
mov
lahf
pop
mov
cs
int3
cs
sub
dec
ret
ds
mov
inc
test
sub
dec
notl
enter
xor
mov
and
xor
push
mov
sub
insb
mov
cmc
cwtl
ja
or
les
pop
cwtl
cmp
mov
jne
stos
pop
adc
inc
jmp
dec
and
or
and
pusha
fstps
mov
pop
xor
insl
mov
aad
sti
imul
xchg
rorl
js
daa
sub
insb
mull
pop
out
cmpsl
stc
lahf
popa
xorb
xchg
test
cs
test
arpl
mov
and
inc
lods
xor
jmp
mov
jo
movsl
cmp
ret
scas
or
mov
fildll
mov
dec
ret
dec
pop
add
inc
rol
lcall
rcl
adc
sub
mov
add
dec
cmpb
inc
insl
rorl
gs
hlt
int3
addr16
or
xchg
add
movsl
and
mov
add
data16
mov
xor
pop
fucomi
mov
sbb
in
lret
xor
nop
test
cmpsl
mov
mov
daa
out
xchg
dec
hlt
mov
loop
push
rcr
add
cld
enter
mov
cmp
jae
enter
daa
pusha
gs
and
pop
lds
jne
test
mov
push
inc
stc
imull
stos
pop
push
xchg
pop
imul
imul
mov
leave
fsubrl
test
adc
xor
rorl
stc
dec
out
dec
std
pop
pop
mov
loop
pop
xor
xchg
pop
call
inc
rdpmc
je
pop
pop
xor
aam
outsb
dec
pop
add
lcall
mov
and
fs
stos
cmp
lds
sub
jmp
icebp
pop
sub
ja
jnp
add
jne
in
data16
or
mov
popa
cs
jnp
adc
xchg
dec
hlt
std
mov
jbe
mov
insb
xchg
lret
es
sar
inc
mov
icebp
xchg
mov
int
inc
pop
scas
xor
cmp
sub
xchg
insb
icebp
sbb
test
cmp
pop
and
adc
and
cmc
lcall
mov
int3
fcmovu
ss
adc
loope
ja
rolb
sub
bnd
test
in
lret
aad
in
cli
sub
leave
xor
push
ds
out
adc
jbe
xchg
cmp
into
sub
int
xchg
imul
mov
pop
iret
pop
jp
add
out
xor
mov
xchg
insl
xlat
aaa
mov
addr16
dec
dec
push
cmp
in
xchg
and
jno
jg
and
inc
sbb
jne
lret
xor
cmp
mov
lahf
sbb
pop
sub
enter
adc
testb
popa
cmp
in
int3
test
pop
movsb
lock
gs
in
pop
mov
inc
daa
adc
sub
insb
adc
cmp
imul
add
pop
jl
mov
outsl
es
int3
in
lods
test
mov
stos
sbb
cmc
mov
ljmp
mov
fcomip
pushf
push
dec
jle
cmp
and
cli
lcall
lahf
dec
jg
mov
lods
arpl
movsl
sub
sub
shlb
shll
xor
dec
shl
mov
inc
lea
call
sahf
mov
vcmpps
pop
pop
aad
or
dec
cmp
pop
sbb
stos
das
lret
lods
or
jb
das
fiaddl
sbb
inc
or
cmp
mov
lds
adc
cmp
jae
jno
aad
jno
xor
icebp
imul
jb
push
es
ror
clc
lock
and
lock
and
dec
jp
lock
subb
adc
clc
incl
mov
jmp
cmp
cmc
and
lcall
push
sub
jnp
in
mov
jmp
shlb
stc
outsl
or
pop
iret
jns
insl
fxam
xchg
cmp
outsl
int3
or
fdivrl
dec
cmp
xchg
fiadds
popa
dec
int
cmp
dec
cmp
mov
push
pop
add
xchg
daa
pushf
adc
sbbl
stos
rolb
and
jmp
cmp
add
cmpsb
inc
cmp
and
andb
mov
inc
jmp
push
or
mov
push
push
lods
push
ds
add
xlat
fsubrl
pushw
push
or
mov
sub
sti
add
xchg
add
jle
jp
divl
mov
insl
push
pop
dec
out
or
icebp
subl
lock
test
dec
fwait
les
xchg
push
add
adc
push
mov
dec
out
push
test
sbb
xchg
push
mov
adc
inc
cs
jns
ss
mov
cmp
inc
push
jae
xchg
adc
mov
xchg
jbe
push
movsb
call
add
iret
lea
ret
xor
sbb
dec
jecxz
aas
pop
out
mov
jns
push
leave
std
rcrl
mov
nop
std
push
loop
std
dec
xchg
shrl
add
mov
in
xlat
pop
lods
mov
mov
fbld
dec
loop
xchg
adc
mov
xor
xor
cs
adc
push
jge
sub
int
jns
aad
or
stos
or
adc
in
fimuls
pop
xchg
out
scas
sbb
xlat
movsl
sbb
dec
cli
xchg
cld
lcall
and
adc
cwtl
push
lea
mov
divb
adc
and
mov
mov
dec
out
push
pop
stos
test
push
repnz
or
push
xlat
in
mov
scas
pop
sub
loop
add
lds
mov
loop
inc
sahf
enter
scas
push
push
shlb
js
stos
dec
in
mov
insl
cmp
xchg
dec
das
sub
dec
sbb
xchg
ficompl
sbb
out
clc
ljmp
jae
sbb
mov
insb
fmulp
hlt
sbb
outsb
fidivrl
and
sub
fcmovb
cs
dec
outsb
cmpsb
nop
mov
jnp
push
cmp
enter
lea
xchg
in
in
lret
jp
cld
inc
pop
jp
inc
popf
in
lret
jb
sti
pop
pushf
add
sub
xor
shll
push
adcb
fistpl
pop
and
iret
aas
and
inc
xor
filds
mov
out
insb
mov
leave
movl
cmpl
movb
sub
mov
mov
daa
cwtl
xchg
and
mov
inc
sbb
jns
sbb
shrb
dec
sub
cmpb
aaa
aad
fstp
sahf
add
mov
and
gs
pop
iret
push
dec
dec
dec
push
pop
iret
xchg
nop
dec
fists
popa
and
push
inc
pop
mov
mov
popa
sbb
ds
push
jmp
mov
aaa
cmp
cmpsb
hlt
ds
jno
dec
mov
enter
mov
cmc
jno
pusha
in
push
cmp
sub
xchg
xor
sbb
jp
jge
iret
xor
int
cmp
sub
xor
pusha
stos
cwtl
xchg
inc
bound
mov
adc
stos
lea
sarb
loopne
adc
xchg
pop
xor
push
jae
insl
push
pop
pop
and
sbb
pop
arpl
adc
sub
push
repz
aas
xor
or
sub
or
pop
shrl
mov
mov
inc
in
pop
or
stos
xchg
sub
mov
stos
je
clc
xchg
bound
mov
rolb
mov
cwtl
cli
inc
pop
xchg
and
sahf
int
cmpl
sbb
sub
and
mov
stos
loopne,pt
out
rcll
jbe
cmp
or
lods
fdiv
mov
fistpll
inc
loope
mov
addr16
les
adc
mov
movsl
or
fbld
mov
mov
testl
mov
dec
mov
mov
inc
stos
shlb
push
xor
xchg
std
nop
cmp
call
xlat
sbb
inc
in
sbb
pop
test
outsl
fwait
js
xor
negl
jmp
and
in
jl
pop
sbb
add
pusha
popa
outsb
cmp
fnstenvs
lods
popa
adc
fisttps
sub
sub
xor
ja
xchg
dec
xor
pusha
jge
jb
es
enter
add
mov
mov
cmc
out
outsb
loop
and
ret
out
jmp
nop
repz
leave
addr16
insb
outsl
sar
rolb
lret
imul
xor
test
rolb
into
xlat
push
shl
lock
cmc
dec
popf
fwait
push
int3
mov
mov
pop
push
sbb
mov
jmp
push
movb
pusha
je
jbe
les
lcall
or
adcb
loope
mov
or
mov
les
push
ljmp
inc
outsl
xchg
icebp
and
popa
out
and
adc
and
test
nop
out
or
xlat
pop
stc
inc
lret
shll
push
sub
mov
sbb
mov
cmp
stos
outsl
inc
jmp
adc
lds
and
jno
jbe
mov
bound
and
loope
arpl
sub
and
adc
cmp
sbbl
jecxz
inc
dec
cmp
shr
imul
sbb
cmp
or
push
rep
mov
or
pop
popf
pop
in
adc
pop
push
jns
mov
cwtl
loopne
dec
sub
in
and
cmp
jg
cmp
test
dec
mov
fisttpll
jecxz
add
aam
mov
mov
mov
ljmp
shl
xor
cltd
sbb
inc
lahf
fsub
sbb
mov
sbb
cmp
xor
sub
jg
xchg
stos
stos
icebp
push
pop
mov
pop
and
pop
fcmovnbe
loopne
push
push
dec
pop
or
mov
xlat
mov
add
test
sub
jno
push
inc
push
lods
insl
cmc
fcomps
jecxz
push
call
push
insb
ja
dec
test
add
pop
mov
roll
jnp
xor
cltd
mov
add
cli
push
jo
aad
fwait
adc
scas
jle
and
mov
movsl
lods
dec
dec
push
das
ret
inc
out
or
pushf
fwait
add
ficompl
js
xlat
shl
push
push
addb
imul
adc
insl
jae
mov
fnstcw
lock
mov
movsl
mov
out
fwait
xchg
rcrl
xor
adc
icebp
arpl
outsb
mov
xor
sbb
push
out
cmp
daa
cld
adc
mov
xor
mov
test
sbb
jmp
dec
and
push
dec
test
or
mov
sub
lods
fistps
pusha
mov
jno
xchg
add
into
ss
cltd
and
add
pop
mov
cmp
push
andl
dec
cmpsl
xor
add
repz
inc
jae
jp
inc
movl
pop
lock
fidivrs
shlb
int3
inc
or
ja
inc
call
ljmp
cmp
arpl
dec
aam
xchg
sahf
xor
mov
lcall
pop
in
rcrb
cmp
imul
pop
int
mov
adc
pop
fwait
fwait
gs
mov
cmp
mov
inc
dec
mov
in
aas
adc
fsubrs
popf
dec
cs
inc
xlat
mov
mov
jne
xchg
icebp
popa
ror
dec
push
inc
pop
cmp
orl
jmp
sub
jns
sub
js
jnp
inc
mov
jmp
sti
push
in
cli
pop
rcrl
in
nop
popf
and
js
jmp
pop
insb
test
nop
cmpsl
push
mov
in
jnp
enter
les
ret
pusha
inc
je
adc
shll
out
xchg
mov
rorl
xor
push
ss
shrl
sub
xchg
mov
negl
mov
jle
test
fwait
inc
inc
and
jp
outsb
std
fsts
adc
gs
mov
sarl
test
and
and
xchg
sub
scas
cmp
test
jg
mov
sti
mov
adc
outsl
movsb
sub
xchg
sub
mov
cld
xor
add
mov
mov
aad
or
or
jnp
sub
jg
lods
jne
xchg
clc
or
xchg
lods
mov
popa
arpl
jne
jbe
pop
jbe
or
lret
stc
xor
cmp
xchg
imul
rolb
cmpsl
out
mov
adc
push
push
jo
out
xchg
stos
ss
add
sbb
xchg
mov
ljmp
int3
out
scas
xchg
pop
lret
and
arpl
ja
cmpb
sbb
test
dec
inc
cmp
movsl
pop
jge
sbb
dec
mov
scas
clc
pop
lret
cmc
in
cmpsl
mov
sub
lret
shll
inc
and
mov
pusha
cmp
sbb
repz
aas
dec
inc
push
mov
cmpsl
cmc
imul
lods
stos
stc
in
decl
cmp
xchg
lahf
cltd
mov
mov
cs
and
jmp
sti
mov
xor
mov
or
lods
jbe
enter
push
fcoms
cmp
lret
scas
test
lcall
lret
jp
or
push
mov
push
stos
cmc
aas
cmp
add
stc
loopne
and
cmp
xchg
jbe
ja
insb
adc
xchg
cwtl
ja
push
xchg
sub
popf
dec
sub
and
sub
aad
lcall
cli
imul
pop
dec
dec
pop
jo
popf
aaa
and
mov
push
jb
sahf
cmpsb
std
idivl
add
xchg
movsl
test
pop
fistps
dec
hlt
in
push
mov
jmp
jmp
test
cmp
mov
pop
add
add
cmpsb
lret
mov
call
lock
xchg
aam
cltd
jae
mov
cmp
xchg
jae
cld
push
cmpl
push
sbb
mov
int3
push
sarl
and
xchg
scas
adc
js
adc
popf
mov
call
insl
stos
adc
mov
js
add
mov
inc
fbld
ret
inc
repnz
push
mov
scas
jns
std
mov
enter
call
lods
or
bound
cmp
pusha
aam
mov
mov
into
divl
and
test
ss
nop
jb
and
lcall
mov
popa
inc
ret
sbb
stc
push
in
insl
imul
xchg
scas
je
dec
xor
push
data16
dec
imul
test
jnp
stos
test
dec
std
cmp
push
ljmp
aam
or
aam
lret
mov
inc
sub
jmp
push
std
ds
dec
xchg
add
cmp
mov
inc
addr16
mov
in
and
fstpt
push
inc
dec
push
stc
jbe
mov
js
lods
andl
rolb
int
daa
fmul
ss
xlat
loope
dec
jmp
xchg
sub
jns
in
clc
jnp
jp
dec
imul
movsl
test
mov
hlt
xlat
cs
in
ss
mov
imul
cwtl
iret
mov
jl
enter
in
out
push
cmp
fsubrs
hlt
push
push
fs
xchg
test
mov
cltd
mov
xchg
repnz
cmp
out
cmpb
ljmp
fs
rcll
ss
cltd
inc
or
inc
mov
xchg
addr16
fmull
jns
mov
iret
mov
xchg
mov
dec
es
or
add
or
testb
pop
out
test
or
or
mov
arpl
dec
shrb
mov
inc
out
popf
push
xchg
out
fidivl
jmp
dec
add
into
mov
push
cmp
ret
xchg
leave
rorl
das
rorb
fcompl
xchg
ret
push
loopne
adc
leave
imul
sub
addl
sub
dec
mov
and
push
adc
ret
mov
loop
add
je
rcrl
and
pop
push
inc
in
dec
or
insb
imul
adc
sub
push
push
mov
sbb
in
into
negl
das
lcall
push
xor
je
sub
movsl
icebp
in
stos
jno
fcoms
sub
cmp
pop
sbb
outsb
pop
xchg
mov
movntq
mov
sub
mov
cwtl
loope
out
aaa
sub
cltd
or
jle
out
iret
xchg
ds
movsl
or
add
xor
jno
call
pop
outsl
mov
rolb
fstp
inc
fwait
jns
jae
push
out
outsb
test
mov
inc
xor
shld
and
cmp
sbb
sbb
or
cltd
repnz
shrl
mov
ficomps
rclb
popa
jo
pushf
stos
xor
lds
sbb
mov
add
jg
pop
clc
adc
jp
hlt
mov
cmp
xlat
add
lcall
rorl
push
leave
jne
mov
add
xor
imul
push
rclb
loope
insl
ret
jne
push
mov
mov
pop
bound
sub
mov
outsl
fwait
dec
mov
je
add
sub
in
scas
adc
fdivrl
in
aaa
xor
arpl
mov
jmp
cmp
pop
adcl
jmp
shll
pop
or
stc
mov
inc
out
jecxz
loop
adc
imull
jns
imul
test
inc
hlt
test
or
or
and
mov
mov
lret
sub
or
jmp
or
dec
lret
adc
int
subl
lea
mov
pop
dec
and
cmp
mov
pop
mov
push
lods
xor
jae
adc
leave
push
aam
std
mov
mov
sbb
or
jle
mov
ja
mov
test
cld
inc
mov
xlat
shll
mov
cmp
mov
dec
cmp
push
jmp
mov
push
mov
subl
adc
loop
push
mov
in
addr16
ret
sbb
xor
lods
xor
push
add
pop
fwait
adc
icebp
jl
cmp
sbb
inc
adc
or
shll
mov
arpl
in
jnp
push
xor
xchg
fcmovbe
movsl
xor
mov
pop
adc
mov
std
xchg
add
jns
mull
mov
mov
fiaddl
gs
mov
and
int
movsl
jmp
aam
gs
aad
mov
stos
mov
stos
sub
fcom
mov
cmp
fsub
in
cmp
xchg
idiv
mov
and
nop
pop
sub
pop
xchg
cs
int
sbb
push
pop
sbb
jb
lcall
hlt
mov
int3
mov
fmuls
dec
mov
xor
push
inc
fwait
xchg
push
xchg
fwait
test
scas
insb
fmulp
aam
fcompl
sub
xchg
jg
cmp
sbb
shr
outsb
iret
insl
sbb
sub
loop
insb
adc
fiaddl
repz
push
pusha
lods
push
ss
dec
outsl
pop
mov
jno
pop
fs
mov
adc
push
cmp
or
enter
data16
jmp
adc
iret
or
insb
mov
sbb
je
xchg
cltd
cs
xor
cld
mov
clc
shl
dec
dec
xchg
mov
fisubl
lock
cld
lret
ret
loopne
fcomp
or
out
rol
enter
cmp
lret
or
fisubs
push
jmp
sbb
push
out
xor
xchg
jmp
popa
xlat
repnz
pop
pusha
int3
sti
xor
scas
inc
daa
dec
mov
int
mov
pop
add
push
push
cmp
sahf
cs
mov
dec
add
adc
dec
popf
aas
outsb
jo
mov
dec
sbb
mov
lretw
mov
in
push
push
xor
mov
loope
in
add
loop
ljmp
lret
in
inc
inc
xor
in
mov
repz
and
inc
lods
mov
add
in
pop
xor
xchg
int3
push
loopne
jne
cmp
mov
mov
jae
aam
loopne
and
push
inc
fcoms
lods
movsb
in
in
mov
lcall
pop
popf
std
ret
xor
xchg
daa
ljmp
push
jmp
mov
iret
mov
jbe
sbb
lds
xor
pop
movsb
ds
out
push
fs
mov
sbb
mov
mov
pop
jne
insl
fcompl
pop
vmovaps
cld
inc
inc
xor
mov
popa
lock
mov
ljmp
mov
je
push
test
xchg
bound
sub
mov
sbb
inc
cmpsb
enter
xchg
pop
shll
cld
or
xchg
lret
cltd
lock
pop
or
pop
mov
pop
sub
stos
mov
xor
lods
jmp
shrl
pop
or
lret
sub
mov
inc
inc
in
dec
lcall
push
push
xor
std
into
daa
mov
mov
lahf
fadds
push
pop
inc
scas
adc
inc
js
mov
lret
lods
dec
inc
js
push
push
je
and
adcl
inc
adc
paddsw
adc
mov
jg
cmpsb
inc
out
push
cmpsb
into
sub
pop
jle
sub
fimull
ja
pop
jo
outsl
mov
arpl
addr16
clc
mov
push
repz
mov
inc
pop
repnz
cmpsb
mov
xchg
inc
insl
or
push
outsl
push
sub
lods
sub
inc
ret
cmp
dec
mov
popa
add
test
into
fsts
jne
mov
adc
out
movzbl
dec
sbb
adc
xor
xchg
xlat
push
push
or
shll
lods
out
fisttpll
cmp
jp
test
loopne
lahf
jnp
loopne
push
mov
lods
repnz
addr16
push
sub
sub
test
sbb
add
inc
push
daa
xor
adcl
mov
negl
jle
rolb
jb
aaa
inc
pop
lea
imul
and
ja
sti
daa
or
mov
xchg
lds
call
mov
pop
mov
mov
cs
cli
data16
pop
xchg
not
dec
insb
popf
xchg
sub
push
cmp
imul
add
leave
leave
popf
scas
in
lret
push
insl
push
stc
movsl
mov
iret
sti
daa
xlat
or
or
xor
sub
jne
cmpsb
jae
dec
insb
insb
inc
repz
dec
jl
nop
movsb
xchg
leave
sbb
sahf
mov
mov
lcall
push
cmpsl
sbb
jecxz
jae
fldt
out
idivl
fnstcw
mov
and
cs
pop
fstp
ret
dec
push
add
cli
push
mulb
test
adc
fldcw
jbe
scas
popf
or
inc
jb
mov
in
dec
jno
out
push
lods
leave
inc
test
sbb
scas
shlb
cwtl
out
add
ds
sahf
xchg
pop
int
popf
cs
call
inc
pop
jle
sbb
stc
pop
xchg
cmp
mov
call
adc
lea
iret
xor
lds
push
mov
and
je
pushf
arpl
jl
insb
pop
je
icebp
push
or
xchg
lds
movsb
or
inc
push
adc
cmp
jne
arpl
test
dec
je
sti
jns
and
into
cmp
cmp
movl
pop
xor
xor
add
sahf
or
xor
or
addl
add
jo
imul
js
outsb
add
in
decb
scas
and
jo
jp
jge
hlt
xchg
dec
ds
mov
adc
xchg
mov
in
push
jmp
xor
leave
cli
data16
enter
in
ret
call
adc
fistl
cmp
fidivs
sbb
sbb
lret
ja
pop
xchg
cmp
imul
sbbl
clc
sub
cltd
aas
fcoms
mov
ret
pop
cwtl
mov
rcr
lret
pop
ret
rdmsr
mov
loop
daa
push
or
jecxz
cmp
lcall
repz
sbb
call
xlat
sbb
sbb
mov
stc
xor
dec
aas
int
adc
nop
xchg
rcr
push
xchg
cltd
iret
imul
mov
xor
jns
repnz
adc
or
ljmp
icebp
imulb
dec
inc
cld
enter
mov
mov
sbb
xchg
out
lcall
int
mul
out
aam
push
imulb
mov
fidivrs
call
xor
push
mov
mov
jo
sub
loop
push
xor
dec
lcall
mov
lods
in
pop
jle
mov
sbb
out
inc
cmp
loop
mov
cmpsl
aad
insl
sub
cli
dec
movsl
jnp
js
fldl
lea
mov
aaa
jle
cmp
dec
mov
stos
fistps
mov
or
adc
movsb
jg
icebp
push
stc
xor
push
inc
sarb
or
jge
jo
ss
xchg
pop
jecxz
jge
flds
shl
in
cmc
jb
xchg
cmp
dec
movsl
mov
mov
lea
fwait
daa
movsb
test
or
aad
xchg
scas
negl
inc
int
movsl
lahf
insl
decl
cli
jge
jp
jo
jno
sub
xchg
out
jle
jnp
cmp
movsl
call
jnp
mov
in
lret
xor
iret
shrb
pop
negl
lods
xchg
ret
inc
repnz
scas
cmp
jg
cmp
sbb
test
js
add
cmp
jbe
scas
call
in
push
addr16
sub
cld
inc
jp
call
mov
divps
push
mov
es
loope
sti
xchg
call
sbb
push
sbb
enter
fsubrs
adc
sbb
fbstp
lahf
dec
mov
std
mov
sub
in
sub
mov
and
sbb
dec
insb
mov
das
jle
dec
lahf
jae
xor
jmp
into
je
nop
fsubrs
mov
ret
jmp
sbb
jb
nop
xchg
hlt
rolb
repnz
ja
xor
sbb
pop
mov
int3
jae
es
movsl
out
inc
inc
int3
jmp
jbe
mov
ja
or
lds
mov
mov
mov
aam
push
jo
ret
dec
mov
pop
adc
jp
mov
dec
cmp
pop
mov
jns
dec
scas
mov
addr16
jge
data16
and
fists
add
add
cmp
sbb
ret
or
int
lds
push
jl
cmpsb
sbb
cli
repnz
int
or
mov
mov
pushl
movsl
mulb
cmpsb
add
sarb
enter
je
leave
sbb
jp
mov
cmpsl
stos
adc
mov
sub
call
jno
cmp
imul
addr16
sub
sbb
lds
js
mov
mov
mov
xor
xchg
in
iret
cmp
dec
jbe
cmpsl
out
push
shl
ret
sub
inc
pminub
sbb
mov
mov
mov
dec
clc
add
xchg
rcrb
mov
daa
addr16
test
dec
stos
pop
out
fisttps
cmpsl
imul
pop
cmp
cld
mov
jp
inc
aad
add
daa
out
xor
jle
lods
jno
lret
fstl
aas
xchg
std
shll
int3
jecxz
lods
cmp
dec
adc
add
or
mov
dec
mov
mov
das
loopne
outsb
popa
pop
hlt
push
inc
add
xchg
mov
imul
adc
xchg
mov
dec
out
mov
sahf
popa
sahf
idiv
push
outsl
enter
mov
fdivp
sbb
adc
shlb
cltd
pop
dec
sbb
scas
or
ficoms
leave
cli
testb
into
mov
add
insl
inc
pop
outsl
fs
test
jns
lea
mov
mov
dec
mov
sub
fsubrs
stos
pop
and
sub
repz
imul
xor
mov
pop
negb
popf
cmp
cmpsl
popa
xor
mov
mov
leave
ror
or
adc
addl
cltd
in
out
add
adc
jnp
mov
repz
mov
dec
cs
les
sbb
jo
push
ss
sub
add
or
fidivs
sbb
ds
sti
adc
cvtps2pi
stos
inc
inc
cs
mov
jle
xrelease
fidivrs
or
dec
jmp
pop
sub
cmpsb
dec
scas
pop
xchg
les
sbb
xor
in
inc
mov
cmp
xchg
fstp
scas
stos
mov
mov
adc
icebp
fwait
xor
push
loop
mov
xchg
push
and
dec
dec
cmp
lock
lds
or
fsubrl
and
in
testl
fsubrs
shlb
cmpsl
int3
xchg
inc
stc
push
out
xchg
lret
cs
push
push
mov
inc
rcr
xchg
adc
mov
jne
orb
pop
es
stos
mov
jmp
or
inc
jb
cmp
xor
sbb
jmp
jbe
mov
or
mov
mov
inc
pop
sahf
pop
sbb
std
test
jecxz
mov
inc
sbb
mov
xor
lret
push
movsl
in
pop
ret
movsl
iret
push
xchg
sbb
mov
sbb
loope
fsts
aas
fisubs
jnp
lcall
dec
inc
out
mov
mov
insl
iret
and
or
jnp
movsl
pop
xlat
sub
cs
cmp
repz
mov
mov
xchg
sbb
clc
test
stc
movsl
pop
lcall
in
pop
adc
cmpsl
add
int3
mov
stos
xor
pop
adc
je
es
add
jmp
int
and
xlat
repnz
sbb
test
stc
mov
je
iret
inc
cwtl
or
pop
in
sbb
xchg
aaa
pop
cmp
lock
pop
mov
int
call
mov
test
xchg
dec
pop
dec
pop
shlb
push
mov
in
fs
scas
fcomi
mov
aam
xchg
jne
xchg
dec
sbb
in
cld
into
xchg
in
push
mov
xor
jns
fmuls
adc
jne
fildl
xchg
movl
es
pusha
push
test
or
xchg
lods
mov
fcompl
inc
or
or
push
out
cmp
pop
outsb
add
rolb
jne
cmpsb
ds
iret
loope
shlb
jbe
cmpsb
mov
mov
xchg
sbb
fsubs
jg
iret
cld
inc
es
js
lods
mov
es
and
jb
push
inc
inc
xchg
dec
xchg
test
add
mulb
lock
ret
push
ja
insl
adc
roll
inc
shl
insl
dec
xchg
int
mov
xor
outsb
leave
mov
pop
jp
xor
test
xorb
mov
xchg
rcrb
fwait
enter
xchg
add
movsl
into
lret
mov
pushf
xchg
inc
test
pop
jae
enter
adcb
mov
call
cmp
enter
jnp
in
subb
add
xchg
push
roll
ljmp
xor
shll
roll
scas
int3
cmp
subl
inc
pop
aas
jl
ret
push
pop
xchg
popl
and
cmp
add
mov
mov
dec
xchg
and
fldcw
or
inc
sub
outsl
jp
add
loop
mov
cli
fdivs
call
cwtl
ljmp
shrl
retw
je
shlb
mov
mov
jmp
xchg
loop
cmp
hlt
in
sub
hlt
sahf
repnz
or
xor
sub
push
mov
sub
or
xor
loopne
cwtl
inc
pop
into
stos
add
sbbl
lahf
and
jge
jno
dec
xor
push
cmpsl
push
lret
clc
mov
shlb
into
xlat
jne
inc
int3
aam
les
add
sbb
dec
xlat
fwait
pop
mov
cltd
movsl
jae
mov
rcrb
mov
mov
test
push
mov
dec
pop
lcall
ja
mul
ret
movswl
pop
cmp
jl
pop
jp
pop
xor
and
inc
xor
bound
mov
je
jg
xor
push
out
cmc
stos
stos
or
stos
push
jno
or
cmpsb
movsl
xchg
push
cs
sub
lock
pop
cmp
cld
jle
subb
pop
pusha
repnz
xchg
dec
inc
rcr
jmp
adc
pop
lahf
or
test
mov
fimull
mov
std
icebp
dec
addr16
cmp
or
outsb
cs
inc
fsubrl
lret
rcl
mov
gs
dec
test
test
xchg
and
inc
bound
jge
aad
or
pop
mov
div
cmp
ja
push
call
inc
hlt
imull
fistl
leave
jmp
lock
out
sub
out
lods
test
add
pop
cmp
rcll
fildll
jbe
sbb
std
dec
push
xlat
lock
jno
scas
add
mov
push
ret
dec
sub
leave
fmull
iret
repnz
jle
shlb
mov
fwait
xchg
mov
inc
lea
stc
or
mov
xor
es
or
mov
pop
test
jmp
int
lret
jns
mov
jmp
fldcw
popa
cmp
sbb
dec
ljmp
and
outsl
mov
adc
push
and
xor
cmp
xchg
movsl
cltd
push
or
pop
rorl
inc
cli
sbb
cmp
adc
push
int3
in
mov
jae
and
adc
push
mov
sub
xorl
pop
stos
add
fildll
mov
sbb
subb
scas
mov
jp
push
sahf
je
lea
mov
stos
std
add
lret
pusha
mov
mov
mov
push
test
inc
icebp
xchg
push
inc
adc
or
into
int
std
fbstp
aas
cmp
add
mov
sbb
jo
dec
push
xchg
out
orb
stc
mov
push
add
rcll
int
push
dec
or
dec
fisubl
addr16
push
pop
mov
fcompl
movb
cmp
lcall
fcom
fwait
insl
sbb
pop
test
daa
cmpsl
ljmp
xchg
fimull
pop
daa
push
sbb
and
jl
mov
mull
and
mov
in
xor
xchg
aas
enter
lea
jnp
in
xchg
mov
mov
inc
dec
out
cmp
add
jg
fisubs
cld
xor
ds
cltd
ret
jb
dec
shrb
cmpb
jg
jp
scas
jb
shlb
cmp
nop
ljmp
es
fnstcw
mov
pop
outsb
ljmp
enter
xchg
and
add
jo
mov
rcll
cmp
push
dec
push
xor
lret
push
add
sub
mov
pop
imull
ljmp
or
arpl
stos
pop
push
sarl
or
dec
xor
fiadds
sub
sbb
std
mov
lret
rol
movsb
sbb
xor
jge
sbb
mov
jo
mov
test
pop
jo
add
pop
xorl
int3
out
sub
cmp
cltd
nop
or
jne
cmp
and
decl
pop
jnp
pop
pushl
add
push
jl
cmpsb
call
inc
shll
mov
sub
push
add
mov
xor
jb
mov
inc
stc
aaa
lock
nop
inc
pushf
rcll
les
adc
mov
rolb
or
xchg
pop
pop
and
pop
jne
inc
push
test
xorl
adc
cmc
push
pop
bnd
lahf
movsb
sub
dec
xchg
jecxz
or
sbbb
push
sbb
addr16
pop
jg
xor
add
add
mov
or
dec
arpl
add
dec
mov
mov
nop
cmpsb
mov
ljmp
or
push
fstp
dec
adc
inc
push
mov
dec
jbe
or
outsl
mov
es
rcr
test
mov
xor
mov
mov
fwait
lret
fstps
addl
cmp
out
cs
aad
jbe
push
ret
mov
pop
mov
iret
jmp
jo
and
mov
sar
dec
push
insl
aaa
xchg
pop
push
push
ret
jno
push
jo
cmpsl
cs
xchg
stc
fwait
xchg
repnz
dec
loopne
sub
jecxz
push
pusha
sbb
test
or
mov
or
mov
cs
ret
fbstp
mov
scas
xchg
and
mov
add
push
gs
lds
scas
xor
in
fwait
es
xchg
js
pop
dec
test
mov
lods
and
mov
mov
pusha
inc
pop
jge
mov
xchg
sub
inc
cmpsl
fs
jne
ja
movsb
cltd
add
xchg
shlb
in
xchg
pushf
xchg
ror
mov
cmp
jnp
movsb
test
pop
push
cs
dec
shr
lock
lea
inc
xchg
lods
push
mov
jle
cltd
mov
add
jle
outsb
fbld
push
xor
pushf
xchg
sahf
test
cmp
inc
pusha
sbb
out
lods
mov
inc
cmp
pop
stos
cmp
aaa
adc
mov
xchg
mov
not
and
cli
push
add
adc
xlat
mov
fucomp
pop
pop
jae,pn
pushf
ret
fsubrs
shlb
and
push
xchg
lods
popf
inc
add
imul
pop
outsl
hlt
or
cli
mov
push
sub
and
xchg
xor
mov
xchg
dec
dec
pushw
mov
popa
jno
xchg
out
in
imul
sbb
adc
jne
xchg
cltd
and
mov
mov
aad
or
push
mov
sub
cltd
push
dec
pop
cwtl
pop
ret
adc
rorl
fmuls
loop
cmpsb
js
adc
mov
or
fcoml
mov
clc
mov
xchg
jae
call
in
in
repz
lock
add
jg
inc
sub
cmc
loop
xchg
mov
nop
pusha
aaa
xchg
adc
mov
push
sub
cmp
rorl
loop
jecxz
mov
iret
lods
xchg
cmp
ret
cmp
and
and
shl
ret
addr16
xchg
stos
fcoml
dec
push
imul
insl
adc
mov
push
mov
inc
fwait
notb
add
inc
inc
loop
add
fs
mov
mov
jno
dec
dec
insl
push
xor
pop
push
xchg
cli
push
rol
xchg
adc
push
xchg
mov
and
lret
fs
inc
mov
xor
dec
jmp
lods
pop
xor
mov
lcall
sti
outsl
out
adc
sti
scas
in
inc
iret
cmpsb
cltd
lret
aam
es
jo
lods
inc
and
mulb
push
stc
mov
sbb
and
mov
mov
adc
data16
push
or
xchg
cltd
addb
fnstcw
or
fld
pop
insl
xor
push
shll
ret
jle
movsb
jnp
lcall
inc
add
sbb
test
test
sbb
ja
ror
xchg
adc
jge
or
arpl
jb
adc
scas
sbb
nop
sbb
js
pop
xchg
inc
aas
jmp
xchg
imul
mov
adc
es
repz
imul
push
jg
outsb
fisubs
ss
out
out
or
mov
js
idivl
mov
inc
push
stos
call
in
test
adc
push
sbb
pushf
adc
adc
or
out
mov
dec
pop
push
pushl
imull
mov
jecxz
mov
pushf
lret
xor
popa
mov
jb
sbb
test
inc
mov
fs
mov
aam
mov
clc
and
mov
dec
cld
sub
cmc
xor
pop
es
stc
lcall
std
aad
sub
mov
loope
ja
pop
out
adc
adc
inc
mov
fsts
push
leave
lcall
fwait
inc
scas
mov
fcomip
dec
rorl
outsl
push
mov
mov
pop
and
in
mov
in
inc
mov
sbb
push
sub
jns
cmp
mov
repz
movsl
aam
fldt
sbb
jl
inc
or
lahf
mov
sub
fadd
orl
jae
xor
ds
ja
scas
jns
loop
push
jecxz
pop
push
jne
iret
sbb
std
or
scas
jg
leave
arpl
adc
mov
mov
adc
pop
add
fistl
pop
out
out
imul
dec
enter
add
ss
adc
mov
pop
fmull
sahf
adc
push
shl
aas
imul
xor
dec
lds
ficompl
rolb
popa
mov
cs
mov
cmpsl
mov
cwtl
and
mov
cmp
jl
pop
jge
dec
lods
mov
mov
in
popf
test
sbb
out
mov
push
push
add
scas
add
enter
lock
mov
mov
sbb
xchg
sub
push
mov
sub
pop
ljmp
push
adc
pop
negl
adcl
adc
sub
and
adc
mov
imul
or
sbb
daa
fstps
dec
xor
scas
fcmovb
fistpl
fistpll
mov
pusha
movsb
pushf
leave
testb
xor
mov
jno
js
mov
push
test
push
add
out
ret
inc
mov
sub
clc
cli
in
in
push
into
cmpsl
ljmp
lds
sbbb
lret
inc
je
xlat
inc
ret
mov
sbb
jae
in
outsl
jo
lods
cmpsl
fldenv
outsl
or
cmc
pop
mov
jg
jbe
add
xor
xchg
cwtl
or
xor
sbb
inc
cwtl
daa
add
mov
cli
decb
js
sbb
out
shrb
xchg
mov
fldenv
dec
iret
cmc
leave
push
movsb
xlat
inc
fmull
fildll
mov
mov
aad
sarl
pushf
rcll
push
adc
ds
sub
mov
push
jg
or
push
outsl
xchg
or
aaa
mov
mov
cmp
add
sbb
cmp
addl
sbb
sbb
mov
data16
je
inc
mov
adc
mov
and
imul
aad
addl
jl
insb
xor
inc
decl
repz
dec
sbb
mov
gs
loop
lds
inc
xchg
jnp
push
lret
mov
jne
cld
sub
test
xor
push
fdivp
and
xchg
mov
jmp
sub
bswap
and
popf
push
clc
push
xor
or
out
std
icebp
out
mov
icebp
jo
mov
fwait
push
pop
push
hlt
and
sbb
mov
xlat
fbld
mov
pop
fwait
dec
pop
out
add
imul
stos
cwtl
adc
nop
cmpsl
add
mov
shl
inc
aad
sbb
xor
cltd
mov
xchg
iret
jmp
test
mov
cmp
dec
sub
dec
jecxz
cld
sbb
clc
out
inc
aas
fimuls
inc
push
pop
inc
mov
inc
ja
mov
or
mov
scas
dec
rcll
xchg
jae
jo
sti
sub
outsb
das
addl
pop
test
mov
xor
cmpl
push
ja
xor
shrb
pusha
inc
fcomps
out
lock
int
adcl
jp
leave
push
popa
adc
xlat
sbb
insl
cwtl
scas
cmp
inc
fsubrs
outsb
sbb
inc
out
mov
rorb
push
pop
push
fs
pusha
jge
test
or
gs
out
xchg
scas
fstpt
mov
cli
subl
popa
daa
mov
push
fdivrp
fisttpll
fisubrl
xlat
jno
adc
cmp
and
pop
dec
fdivr
xchg
lcall
or
adc
lods
stos
sbb
sbb
mov
mov
push
sbb
scas
xor
testl
sbb
adc
lcall
shll
mov
in
sti
sub
mov
dec
jb
jae
mov
ljmp
push
mov
mov
push
std
cld
sarb
lahf
lret
push
pushf
stos
mov
adc
push
out
adc
or
and
push
dec
inc
mov
xor
std
lcall
imul
std
cmp
insl
sbb
test
aam
inc
sbb
addr16
sbb
loop
lods
repz
dec
test
jae
or
sbb
and
xchg
out
roll
in
inc
imul
pop
fstpt
in
enter
pop
mov
and
jae
xchg
sti
icebp
stos
xor
mov
dec
push
inc
frstor
out
sbb
cwtl
jg
cmp
mov
push
mov
sub
leave
popf
idivl
mov
iret
mov
iret
scas
push
test
jmp
sub
adc
jge
out
ja
cmp
sub
sbb
imul
test
mov
push
ret
mov
int3
rcll
mov
or
jbe
pop
cmpsl
lods
sti
dec
sbb
and
lods
xchg
std
pop
repz
fwait
cmp
bnd
repnz
aad
inc
sbb
add
mov
lret
testb
and
xor
mov
aad
popa
cmpsl
movsl
inc
sub
cmpl
in
scas
pusha
adc
or
or
aad
add
mov
iret
and
inc
ss
movl
and
xchg
mov
adc
sbb
xor
in
imul
pop
fnclex
mov
adc
icebp
adcl
je
int
mov
neg
xchg
push
mov
pop
sarb
push
test
clc
xor
xchg
sbb
daa
inc
add
lods
mov
pusha
push
push
add
int3
pop
stos
outsb
and
cmp
pop
sub
mov
push
and
push
mov
loope
adc
add
std
dec
mov
clc
sbb
dec
sub
lret
xlat
shr
loopne
pop
pop
push
nop
out
stos
jae
ss
cs
scas
jmp
lods
dec
imul
std
stos
movsl
sbb
movsb
sub
pop
fwait
xorl
xchg
xchg
add
mov
int
out
dec
sub
adc
xor
sahf
sarb
into
iret
idiv
mov
orb
lds
push
pushf
test
rorl
inc
lret
ja
leave
xor
rcll
cmc
jb
jbe
pop
add
into
fimuls
dec
out
ds
xchg
push
and
or
cmpsl
push
pop
mov
fcmovnbe
mov
cli
pop
vpackssdw
rcrl
cmp
fwait
sub
pusha
inc
cmp
mov
adcl
jge
loopne
or
inc
insb
dec
stos
xor
ret
test
xchg
cmp
mul
pop
push
shll
pusha
cmp
pop
fsubp
pop
scas
and
inc
stos
xlat
mov
xchg
cmp
add
jae
out
test
je
in
mov
in
or
push
icebp
mov
pop
repnz
movsb
shll
jnp
je
ret
push
lahf
push
mov
mov
pand
jle
sbb
and
pop
or
in
push
enter
cltd
and
mov
jge
jp
test
and
stc
cld
dec
shll
push
je
jne
shrb
jb
out
pop
fsubr
enter
xor
pop
inc
jbe
xchg
outsl
inc
pop
inc
lahf
xlat
repz
sbb
imul
dec
daa
cmp
stc
mov
and
repz
sub
lret
sub
dec
inc
andb
mov
stos
push
iret
inc
ret
test
incb
and
outsb
icebp
sub
or
lock
push
stc
lret
and
outsb
cmp
les
jne
out
inc
push
pop
mov
xchg
out
sub
cmp
mov
arpl
loope
out
daa
stos
sbb
push
mov
xchg
ss
jle
cmp
out
fdivrl
sub
rsqrtps
fidivl
aad
leave
fisubl
xchg
dec
jmp
mov
cmpsb
test
xchg
push
fnstsw
popa
push
jns
cli
in
mov
pop
mov
scas
sub
mov
inc
push
ficomps
cmp
jmp
or
mov
insl
and
jns
and
call
fmulp
test
jb
imul
xchg
leave
call
movsl
sub
inc
notl
push
jmp
fstl
push
inc
xchg
inc
push
push
int3
mov
pop
stos
dec
jnp
mov
add
adc
mov
es
pop
push
addl
pushf
xor
jp
fdivs
or
std
cmp
pop
pop
xchg
adc
adc
jle
or
jmp
pop
out
je
cmp
fcoms
movsl
sbb
ds
js
mov
or
mov
fbld
adc
jl
jmp
icebp
stos
dec
ljmp
xor
dec
dec
push
xor
jae
add
and
xchg
movsl
jecxz
add
imul
stos
sub
shl
test
shl
pop
outsl
arpl
jb
sub
lret
leave
sbb
mov
stos
outsl
xchg
loope
adcb
mov
int3
mov
outsb
popa
cs
fdivs
idivl
xor
ljmp
iret
xchg
test
dec
cmpb
outsb
inc
pop
aas
ss
sti
call
and
ret
inc
bound
in
mov
lods
nop
aaa
popa
dec
popf
in
sbb
mov
or
daa
aas
mov
mov
inc
out
int3
repz
in
fs
out
call
push
imul
ret
sub
outsl
lahf
jp
mov
push
sbb
sub
mov
shlb
stos
aaa
pextrw
jle
inc
push
push
sbb
cmp
shrb
sub
in
lds
jns
fdivrs
cmp
jmp
ja
shll
int
rorb
dec
sbb
ds
xchg
jbe
xchg
into
in
mov
mov
push
test
icebp
xchg
adc
addr16
jl
repz
leave
pop
fdivp
test
pop
dec
mov
movsb
xor
test
dec
mov
push
rol
push
xorb
movsl
mov
dec
cmpsl
es
cmp
or
sub
mov
sbb
sub
js
int
test
sbb
shlb
icebp
or
mov
sti
inc
push
adc
inc
shrb
jnp
lods
pop
mov
out
addl
xor
sub
outsl
sti
movsb
push
xor
pop
pop
iret
in
dec
mov
adc
mov
dec
push
mov
mov
adc
aaa
popa
add
sbb
jno
cmp
mov
in
lret
rcl
call
push
in
decb
sub
xlat
rorl
ja
fbstp
bound
or
and
enter
fstpl
mov
fcomi
pop
dec
clc
add
jg
lock
repnz
mull
popf
movsb
test
sbb
cmp
mov
jae
push
cmpsb
std
iret
iret
sub
ret
cmp
add
enter
test
into
xchg
xor
sub
enter
adc
cmovle
bound
mov
fs
lret
mov
cmp
push
jnp
pop
out
popa
movsl
pushf
lret
pop
scas
push
movsl
shll
mov
mov
xchg
xchg
push
add
push
shlb
adc
mov
sti
push
outsl
pop
push
xlat
imul
adcb
adc
sbb
lcall
inc
mov
xchg
jle
int3
adc
jmp
dec
adc
push
fwait
arpl
ds
gs
jns
ss
ljmp
mov
les
dec
test
shrl
aaa
xchg
cmc
mov
jmp
adc
stc
out
pop
dec
or
mov
stc
pop
and
sub
outsl
mov
mov
jg
mov
sbb
dec
popf
scas
test
jb
push
push
sbb
mov
daa
jmp
pop
scas
aas
xchg
push
out
fiaddl
shlb
repnz
xchg
push
cmp
xorl
loopne
mov
fsubrs
jecxz
data16
cmp
js
jno
mov
mov
xchg
jno
xor
insl
gs
in
fisubl
out
push
ret
lahf
jo
fcom
cmp
adc
rcr
inc
shlb
dec
popf
cs
stc
xchg
scas
jnp
or
ss
aaa
adc
movsl
enter
clc
sub
movsl
mov
daa
in
inc
and
xor
jg
mov
lea
mov
mov
bound
fs
push
cmp
mov
dec
lahf
leave
sub
pop
andl
out
loope
mov
jl
cmp
adc
ljmp
pop
mov
mov
push
leave
push
push
mov
inc
pop
pop
add
jge
rcrl
adc
adcb
mov
in
jno
add
xchg
mov
fwait
bound
adc
and
mov
xlat
cltd
pushf
sbb
jo
push
insl
mov
nop
push
dec
mov
shlb
das
jmp
fwait
xchg
hlt
adc
jb
pop
popa
cmovge
pop
jmp
pop
cmp
ja
mov
push
pop
xchg
or
pop
inc
pop
push
add
inc
outsl
jl
in
mov
mov
or
loopne
lods
ret
pop
or
in
and
inc
and
rol
mov
enter
lods
adc
adc
xchg
ret
enter
jp
xchg
jle
sahf
cmp
mov
aas
test
mov
inc
jg
mov
mov
or
fistps
daa
pop
jne
repnz
imul
or
icebp
cmc
loope
mov
test
popa
gs
mov
repz
xchg
xor
add
xchg
push
mov
or
push
enter
dec
dec
loope
lods
ret
insl
xor
lods
sub
bound
lret
imul
xchg
outsb
push
mov
jecxz
cmp
in
push
ja
jl
xchg
pop
jp
mov
gs
aas
xchg
in
aas
popa
mov
call
mov
jl
loopne
sbb
in
jp
fidivrl
pop
push
call
mov
add
in
movsb
insb
and
push
mov
loopne
adc
fildl
sub
dec
movsl
enter
pop
jb
mov
loopne
push
std
les
jecxz
mov
cmp
mov
inc
loopne
stc
ja
cmp
rclb
adcl
jae
mov
int
jo
or
popf
lods
test
rcrl
lahf
jp
lods
ret
in
pushf
push
sbb
test
in
cmp
lret
mov
cmp
push
fisubs
mov
and
out
sbb
mov
nop
jno
jo
or
mov
mov
inc
aam
mov
fs
mov
inc
loopne
test
lock
lahf
xlat
jp
mov
cmp
sbb
dec
pop
adc
mov
dec
jb
test
popa
movsl
orb
sbb
inc
pop
lods
mov
sub
sahf
pusha
inc
aas
jno
and
adc
adc
jl
xchg
jbe
lret
aad
and
inc
sub
or
jns
xor
xor
sahf
adc
in
lds
orl
inc
jge
jmp
adc
xchg
mov
or
push
in
stc
fstpl
add
scas
adc
ret
stc
cld
fcoml
hlt
iret
ds
xor
sub
paddd
in
push
jp
fcoms
xchg
mov
xor
cld
push
mov
inc
dec
fimull
adc
jge
add
out
dec
mov
clc
push
or
lahf
mov
and
xor
xor
fmul
fisubs
outsl
and
cmp
test
sub
mov
push
pop
inc
sbb
cmp
inc
mov
loopne
ja
lahf
lret
bound
sbb
insb
ret
mov
adc
imull
outsl
push
mov
mov
sbb
aad
xor
test
cmpsl
jbe
sub
and
pop
jp
movsl
out
fstl
cs
pop
movsl
nop
or
cmp
mov
out
je
iret
sahf
mov
cltd
call
sub
rcrb
lret
and
or
mov
loopne
or
adc
hlt
mov
lods
rolb
cwtl
xchg
push
xor
movsl
sub
mov
pop
xchg
mov
xor
push
push
or
adc
loope
and
and
aam
dec
inc
jl
xor
lods
test
xchg
pusha
xchg
lods
adc
rcrl
adc
xchg
or
jae
pop
mov
scas
pop
xor
fstpt
in
imul
mov
pop
pop
test
jmp
sbb
test
cltd
out
fbld
loope
sbb
pop
pop
mov
pop
adc
daa
out
cmp
or
mov
jecxz
js
addr16
lods
inc
xchg
and
bswap
add
hlt
cmp
in
into
jns
idiv
sbb
xor
jae
cmp
xchg
insb
les
mov
pop
insb
lea
cmp
pop
fsubs
sbb
shl
push
xchg
in
push
popa
jno
fmuls
stos
mov
inc
out
xchg
inc
ret
repnz
dec
in
es
mov
xchg
ds
int3
clc
mov
orl
sub
test
sub
cmp
mov
xlat
xchg
xlat
scas
cmp
mov
pop
and
jmp
scas
sbb
or
mov
insl
in
mov
inc
shrb
inc
jmp
fmull
add
mov
stos
mov
mov
xor
xchg
icebp
mov
cmc
lea
cmp
insb
test
stos
sub
shl
notl
scas
inc
imul
dec
mov
and
pop
xchg
das
pusha
lea
test
notl
dec
aas
into
inc
and
fidivrs
sti
add
scas
lds
xchg
cmp
clc
lcall
fidivs
mov
mov
lods
push
push
fiadds
aas
insl
add
adc
jae
cmp
push
shr
mov
or
xor
pop
pop
movsb
stc
mov
sub
rolb
jbe
sbb
xor
or
loop
andb
gs
sbbb
cmp
leave
mov
mov
movsb
mov
and
das
mov
xor
pop
xor
repnz
cld
inc
mov
pop
ja
xchg
push
and
add
loopne
push
mov
test
cld
add
jl
imul
shl
push
adc
dec
push
jecxz
into
cmp
addl
xor
negl
xorb
mov
adc
notb
cmp
dec
sti
in
repnz
jnp
jae
sbb
cmp
int
and
aas
mov
pusha
scas
adc
and
mov
dec
sti
xchg
add
push
lods
inc
bound
jmp
ss
scas
sahf
add
xchg
insl
pop
sbb
sbb
lock
sub
bnd
ret
gs
pushf
mov
out
mov
sar
lods
mov
loope
fsubs
sbb
ljmp
cmp
movsb
adc
jb
push
fcoml
sub
mov
sbb
jae
xlat
jle
or
xorb
adc
mov
outsb
dec
fisttpll
mov
sbb
inc
add
movsl
cld
orl
repnz
nop
add
stc
pop
out
cmp
inc
jns
mov
xor
push
mov
hlt
cmp
sbb
cmp
inc
dec
adc
out
cmpsl
inc
lods
adc
int3
arpl
add
cli
pop
popaw
popf
jae
adc
loopne
adc
out
or
xor
push
dec
mov
aas
rcrb
icebp
xor
je
shl
rcl
mov
fiadds
xchg
repnz
fdivr
adc
xor
inc
sub
loop
stos
imul
adc
sub
je
into
cs
add
ja
mov
and
data16
lds
and
vmaxss
ss
test
dec
les
shl
sub
stc
pop
dec
arpl
xor
add
inc
outsl
div
mov
sub
xor
xchg
aaa
loop
mov
sbb
xor
aaa
and
mov
mov
test
test
leave
cmpsl
clc
push
xor
sub
jle
es
add
dec
push
inc
das
in
loopne
mov
cltd
adc
stos
xor
inc
test
push
mov
movsb
xchg
lock
jmp
lahf
sahf
and
cmc
cmpsl
pop
and
icebp
mov
sub
pop
icebp
fisubrs
fwait
jg
lcall
sbb
test
add
jp
sbb
pop
mov
add
cmp
daa
aad
push
test
outsl
pop
enter
inc
mov
dec
cmc
inc
lds
popf
push
sti
fnsave
push
cmp
cmp
out
aaa
sub
leave
push
sbb
cltd
inc
cmp
mov
pop
test
jmp
imul
dec
fisttpl
hlt
and
mov
out
xchg
mov
ret
jns
adc
dec
outsl
ljmp
jmp
adc
cmp
aas
mov
movsb
xchg
xor
adc
clc
enter
ret
andb
aas
gs
es
aaa
or
jecxz
push
sbb
lret
imul
push
aam
sbb
cmpsl
sbbb
insb
adc
or
jae
lds
jbe
sbb
pop
sub
inc
fidivs
pop
and
popf
int
mov
arpl
loope
ja
jno
ret
mov
rcll
pop
cmp
inc
les
mov
cmp
cs
sbb
cmp
xchg
cmpsl
push
insb
aas
inc
cmpsb
dec
inc
pop
dec
mov
inc
mov
cmp
xchg
push
jp
adc
imul
nop
mull
or
push
push
jno
adc
fcoml
mov
add
jle
ret
cmc
and
jmp
out
mov
dec
pop
cli
mov
mov
pop
and
pusha
call
pop
mov
or
xor
push
xor
pop
jmp
xor
gs
and
jl
dec
sub
cmp
lret
les
jne
xchg
movb
iret
pop
sub
shrb
push
inc
leave
or
ja
int3
sbb
or
xor
out
jl
mov
fiaddl
add
test
les
stos
subl
or
xchg
ja
lahf
cmp
lock
mov
je
lret
or
cmpsb
cmc
or
xlat
dec
push
in
push
inc
mov
data16
push
xor
lret
add
fistpl
pop
mov
add
shrl
pop
ljmp
movsl
icebp
push
pop
fsubl
cli
out
push
push
icebp
cmpsb
subl
cmp
mov
js
scas
ds
filds
orb
cmpsl
add
cld
push
and
repnz
insb
insl
mov
xor
cmpsl
loopne
push
sti
mov
imul
mov
xor
cmp
mov
fcomi
loope
mov
scas
les
sbb
mov
sti
fildl
ret
movsl
cld
xor
jbe
ss
mov
jecxz
jno
adc
dec
pop
rclb
mov
adc
icebp
xchg
jge
lahf
mov
push
mov
sbb
ret
dec
cmp
pop
out
jo
inc
repz
add
sub
call
dec
mov
addr16
mov
inc
psubw
mov
movsl
out
sbb
mov
mov
shll
pushf
sti
addr16
insl
iret
arpl
xor
fwait
sbb
mov
adc
cltd
sbb
mov
cli
lds
inc
outsb
ret
das
adcb
sub
fs
adc
pusha
push
mov
out
leave
sbb
imul
inc
in
sub
xchg
jle
sbb
rorb
cld
cmpsl
cmp
sub
xchg
mov
jo
daa
cmp
notb
daa
ret
push
leave
dec
sub
cld
sbb
insb
out
jae
cltd
loopne
inc
jno
popa
adc
out
and
fs
pushf
adc
ds
fpatan
mov
mov
rcr
or
es
imul
fdivrp
adc
and
loop
adc
sbb
push
dec
push
sub
insb
add
push
pop
test
cmp
lahf
xor
cltd
dec
mov
not
sub
aaa
sbb
sub
scas
movsb
or
insl
pop
int
sbb
les
jno
imul
lea
and
js
aaa
cld
sti
loop
psubw
inc
mov
jp
lock
jge
mov
mov
mov
popa
es
push
mov
ret
rorl
call
rorl
mov
pop
pop
xor
jae
call
adc
and
in
test
mov
imul
fnstcw
push
addr16
jae
mov
incl
mov
jmp
loope
sti
sbb
dec
sbb
jge
xchg
push
das
pop
and
mov
sub
ret
jo
add
rcll
icebp
stc
inc
int
cld
adc
jno
or
mov
adc
popa
rcl
lea
clc
roll
xchg
fs
sbb
ret
or
inc
sahf
vphsubbw
lock
mov
aas
adc
test
dec
sbb
or
divl
aad
mov
mov
adc
xchg
sarl
test
out
outsl
pop
sub
mov
into
test
xor
dec
cmpsb
cmpl
mov
pusha
cli
shlb
mov
xchg
rcr
jle
gs
pop
xchg
pop
lods
out
xor
fnstcw
mov
sub
stos
in
sub
mov
rorb
fbld
in
mov
mov
or
call
add
xchg
pop
and
push
xchg
add
mov
mov
int3
pusha
and
lcall
mov
inc
and
bsr
outsl
mov
mov
sub
sub
fwait
dec
jle
adc
loope
movsb
addb
in
mov
outsl
sub
mov
loop
shl
xlat
arpl
ljmp
div
sbb
jp
in
push
inc
ret
jnp
jmp
gs
ret
add
loop
scas
loopne
stc
jns
insl
shrl
int
movsl
in
dec
fsubrl
aaa
std
int3
sbb
test
cmp
sub
adc
aas
or
xchg
jne
fldcw
push
xchg
pop
pop
sub
mov
cmc
sub
jae
jle
lods
jae
add
pop
or
sbb
andl
imul
out
clc
mov
mov
jne
pop
cmp
stos
pop
ret
cmpsb
push
arpl
add
in
or
xchg
ljmp
add
inc
das
std
pop
mov
mov
sub
push
xchg
ret
mov
mov
les
mov
jl
nop
ficoms
mov
cmp
mov
mov
pop
mov
cmp
stos
inc
lret
sub
insb
xchg
xchg
xchg
pop
faddp
sub
jp
fbstp
inc
jecxz
xor
jns
aad
cmp
ss
aaa
jno
in
push
pusha
jb
cs
andl
fimull
sub
nop
fprem1
out
insl
jecxz
and
gs
cmp
clc
fmuls
and
inc
xchg
mov
cmpl
popa
push
cltd
mov
jge
out
jge
les
clc
test
es
inc
push
popf
cmp
fsubrp
aas
push
add
arpl
in
cltd
scas
push
je
addl
cmp
jno
add
mov
sub
lahf
jmp
push
xchg
daa
test
dec
and
dec
push
insb
lds
push
dec
je
dec
shll
loop
jge
sub
fcmovu
lods
pop
add
repnz
out
push
mov
and
int
mov
in
dec
jbe
push
xchg
pop
mov
mov
xorb
pop
mov
scas
jg
out
arpl
mov
cmc
ja
and
xor
push
rclb
ss
sarb
adc
mov
sub
cli
xchg
jmp
loopne
sub
wrmsr
push
jb
sbbl
sub
fldl
scas
cmp
dec
lcall
rcl
in
int
cmpsb
or
mov
bswap
sti
shl
popa
add
jb
scas
inc
pop
xchg
aam
mov
sbb
shrb
mov
mov
cmpsb
xchg
ret
sbb
repz
push
out
or
cmp
jg
fisubrs
dec
arpl
cwtl
mov
loop
sub
negl
xor
mov
mov
cmp
faddl
pop
mov
push
jbe
out
and
add
cmp
mov
in
stc
inc
loope
push
and
nop
fnstsw
sahf
adc
pop
lods
ret
mov
filds
sub
sub
lock
and
cmp
fs
test
adc
div
mov
lods
sub
test
jns
es
dec
jns
cmpsl
adc
add
hlt
movsl
movsl
pushl
shrl
mov
lahf
in
cmp
andb
pop
pop
mov
iret
cmpsl
das
aad
sub
in
in
xchg
or
and
jno
xor
andb
add
push
mov
imul
cld
enter
pop
mov
mov
pop
push
push
push
aad
outsl
aam
xor
cmp
push
and
lock
push
ljmp
lods
imul
cmpb
in
mov
scas
aas
push
fwait
or
cmp
add
es
mov
adc
xchg
pop
divl
push
orb
fcoms
xor
fsubp
mov
mov
outsb
icebp
sub
fisubrl
mov
dec
xchg
or
cmp
pusha
or
inc
loop
jne
lret
jg
out
mov
ret
jo
add
fwait
mov
movsb
shrb
stos
adc
lret
xor
incl
out
mov
jp
outsb
cmpsl
xchg
fs
mov
inc
push
sbb
pusha
mov
sub
mov
test
or
adc
mov
mov
or
xchg
mov
mov
fsubrl
fcoms
fdivrp
sub
lock
dec
xor
sub
in
fwait
xlat
fisubl
inc
mov
cmp
xor
jecxz
mov
sbb
ficoms
and
in
and
mov
dec
pop
aad
enter
dec
adc
test
jp
ret
in
jmp
shl
es
pop
insb
mov
cmp
cmp
sub
cwtl
sbb
fsubl
push
inc
stos
dec
push
sub
pop
loop
sahf
push
push
daa
dec
mov
adc
test
and
cmpsb
and
stos
popa
cmpxchg
pop
xchg
lds
mov
inc
int
pusha
mov
pop
ja
test
push
int
adc
add
mov
mov
pop
mov
addr16
jmp
jbe
mov
adc
xchg
inc
stos
and
icebp
repnz
sub
inc
jl
lret
push
mov
inc
pushf
pop
dec
sbbb
push
out
xlat
out
push
clc
aaa
rorl
sarl
inc
incl
repnz
mov
fldt
dec
clc
iret
and
rcll
aas
jmp
in
addr16
mov
or
mulb
lock
xor
stos
mov
test
mov
frstor
sbb
mov
leave
test
mov
push
mov
aaa
adc
fistpl
push
sbb
test
ds
lock
out
inc
dec
mov
sub
repnz
je
sub
mov
repz
lret
lods
lods
hlt
out
stos
push
dec
pushf
aam
inc
movsb
cmp
test
rcrl
sbb
idiv
adc
push
sbb
add
outsl
fbld
mov
in
int3
push
xchg
inc
xchg
add
adc
fs
movaps
in
jo
xchg
mov
push
in
mov
pushaw
test
xchg
jl
ficoms
loop
insl
push
inc
adc
aaa
xor
into
sbb
in
cmp
push
xchg
sbb
incb
xchg
dec
arpl
mov
jne
imul
lds
inc
cmp
inc
js
outsb
fcomp
fisttpll
adc
mov
mov
sti
lods
lds
mov
ds
pop
xchg
pop
and
adc
jge
xlat
inc
push
out
lahf
fxch
xchg
add
mov
xor
sbb
daa
shl
scas
fsubrs
or
js
cmpsb
icebp
mov
xor
or
xor
or
sbb
les
dec
test
nop
xchg
les
outsb
xor
fsts
loop
and
andb
pop
outsl
sub
add
jg
cs
bound
into
test
cmp
mov
fidivrs
dec
inc
movsl
or
adc
js
lea
lods
add
jecxz
jns
arpl
or
and
push
pop
fwait
xor
aaa
popa
adc
fsubrl
cld
adc
and
movsl
test
cmpsl
push
push
dec
insl
mov
jg
lock
std
xor
cwtl
insb
nop
and
dec
aad
dec
cmpsb
cs
sbb
xor
xchg
mov
test
push
mov
jle
or
insl
dec
loop
enter
je
lcall
adc
insb
sbb
pop
and
inc
add
xor
jge
test
mov
lds
xchg
out
insb
mov
sub
xchg
enter
mov
imul
icebp
fmuls
dec
repnz
mov
out
mov
adc
int
scas
test
leave
and
mov
rorb
loop
fadd
les
pop
add
sar
adc
out
lret
push
std
iret
mov
popf
sbb
std
xor
out
cwtl
xchg
mov
xor
outsl
mov
stos
ljmp
addr16
loopne
dec
sbb
shll
adc
push
jo
popa
mov
push
push
arpl
stos
xor
loop
inc
xor
push
lret
adc
and
aam
movsb
inc
frstor
shlb
shll
nop
dec
sub
sti
xchg
pop
outsl
or
mov
fwait
in
xchg
incb
call
pop
es
in
cmp
inc
pop
xor
dec
insl
jne
scas
scas
or
adc
sbb
cmp
add
dec
mov
pop
push
push
fisttpll
dec
sbb
test
push
adcl
mov
int3
add
cmp
adc
mov
loope
jbe
mov
fstps
jp
adc
push
pop
mov
pop
loopne
inc
cmp
inc
fdivr
add
mov
xchg
stos
jmp
call
in
and
push
fwait
test
into
inc
mov
pop
jne
push
add
push
or
push
and
cmpl
inc
jge
divl
pushf
sar
adc
addb
xor
mov
sub
mov
xor
push
and
nop
inc
mov
push
and
cltd
pop
xor
sbb
in
sbb
fdivs
jns
push
std
and
icebp
inc
inc
sti
lcall
outsb
imul
inc
call
xchg
aad
fwait
pop
add
dec
push
leave
movsb
mov
cmpb
dec
and
or
sub
xor
pop
pusha
enter
jmp
mov
in
mov
and
mov
ja
and
dec
cli
and
arpl
arpl
cltd
cli
jnp
arpl
int3
lds
sbb
mov
adc
mov
jl
push
lock
sub
stos
mov
hlt
scas
mov
jo
repnz
sbb
shlb
lods
sub
rclb
test
add
movsb
scas
mov
loope
ror
cmp
bound
cmp
int
cltd
icebp
push
add
mov
cwtl
int3
test
pop
fucomi
cmp
mov
xor
push
mov
pop
inc
add
or
pop
sub
push
or
outsb
jg
int3
je
test
jge
inc
adc
ja
jo
inc
inc
hlt
call
or
mov
jne
or
enter
cli
pop
push
popf
lahf
push
pop
dec
mov
addr16
push
in
cmp
push
fdivl
or
adc
scas
aam
mov
and
xor
cmp
jl
aad
idiv
mov
scas
pop
lret
ds
mov
repnz
mov
icebp
out
sub
inc
pop
and
outsb
out
or
sbb
jl
daa
jo
push
pop
repnz
adcb
rcr
mov
add
add
inc
dec
sub
jne
iret
jnp
fdivl
pop
adc
jb
pop
lcall
pusha
daa
mov
add
repz
aas
std
je
divps
ffree
cwtl
dec
scas
lods
mov
pop
rcl
push
enter
lods
out
xchg
fwait
mov
lret
inc
or
aaa
jns
lods
aaa
hlt
inc
sbb
das
xchg
pop
ljmp
jmp
inc
add
pop
xor
or
and
push
pop
mul
hlt
loope
jno
pop
and
inc
stos
into
mov
mov
incb
adc
pop
cld
adc
xor
lock
daa
icebp
pop
lahf
dec
mov
pop
xchg
cmp
add
and
sarb
pop
cmp
and
mov
mov
dec
data16
loopne
jle
jle
repz
push
ret
gs
or
jo
in
jp
push
or
push
std
add
pop
jne
add
push
mov
mov
mov
sub
mov
das
pusha
jo
repz
roll
and
hlt
ljmp
call
fldcw
or
xor
mov
in
fs
shll
inc
outsl
gs
cmp
stc
and
mov
popf
xor
or
in
mov
add
pop
into
call
in
inc
daa
sbb
fisttps
ss
mov
out
cmp
xor
sbb
mov
xor
mov
sub
xchg
pop
rol
in
xchg
movsb
jmp
fldenv
xlat
jle
stc
mov
push
emms
es
lret
stos
mov
push
mov
push
cmc
nop
mov
shll
out
mov
hlt
push
jne
fcomps
jl
lret
fmulp
cmp
ret
jmp
xor
sub
sti
cmp
addr16
insl
pop
leave
jmp
pusha
dec
adcb
icebp
mov
dec
mov
dec
push
repz
and
sbb
stc
jecxz
cld
xor
dec
mov
mov
outsb
test
mov
mov
pusha
orl
call
into
filds
or
aad
fcmovnb
or
and
frstor
jg
dec
adc
lahf
aad
cwtl
rclb
repz
adc
in
movb
dec
cmp
jns
test
xchg
aam
int
cmp
sub
mov
pop
ss
xchg
sbb
divl
xor
xchg
dec
mov
mov
xor
movsl
out
mov
daa
sub
enter
jnp
dec
and
sti
xor
imul
daa
sti
xchg
cmpsl
out
push
clc
cld
mov
adc
xor
movhps
pop
sbb
clc
mull
inc
mov
addb
mov
je
movsl
leave
jl
rcrl
jge
sub
adc
icebp
in
repz
dec
jl
xchg
call
nop
cmp
jle
xor
or
push
sub
inc
mov
pop
xchg
repz
mov
inc
mov
mul
fnstenv
push
push
cmp
scas
push
inc
push
sahf
fcomip
mov
subl
popf
mov
add
lea
add
test
sbb
pop
mov
inc
dec
sub
stos
or
mov
cmp
sarb
cli
test
push
fisubrs
mov
fistl
std
ret
mov
xchg
es
or
shlb
adc
cwtl
sbb
mov
popf
xor
mov
in
imull
pop
xchg
arpl
and
jns
and
pop
je
xchg
sub
sub
xor
movsb
sub
mov
xlat
or
lret
aaa
fcoms
into
imul
jl
loopne
and
add
sbb
icebp
lock
mov
test
pop
or
outsb
dec
dec
or
insb
je
data16
stc
cmp
jmp
adc
movsl
mov
and
cmp
push
iret
stc
mov
les
sub
mov
dec
stc
adc
icebp
push
inc
jne
out
aam
pop
popa
repz
stos
dec
add
jp
push
adc
imul
popa
xchg
es
sti
std
cmpsb
xchg
mov
sbb
into
push
mov
out
inc
imul
hlt
sbb
push
insl
mov
pop
mov
dec
shlb
bound
sysenter
in
pop
orw
push
mov
mov
dec
bound
sbb
test
dec
clc
cltd
jo
adc
out
lret
mov
bound
mov
and
add
ds
cmp
xchg
cmp
push
fs
aaa
call
xor
sti
call
dec
jns
jne
pop
mov
adc
cli
sbb
imul
inc
int3
jmp
dec
insl
jae
cmp
xchg
adc
fbld
and
jecxz
fimull
pop
out
jno
jo
push
subl
and
jno
fwait
xor
cmc
stos
mov
inc
xorl
aam
cmc
push
pop
and
pusha
mov
iret
xchg
ret
dec
imul
loope
mov
std
ja
cwtl
ds
jge
js
pop
out
lret
xorl
mov
dec
mov
or
mov
mov
addr16
addr16
aaa
mov
ficoml
fistps
test
jae
adc
je
adc
rorb
cmpl
push
loopne,pn
vmwrite
scas
roll
inc
xor
popa
pop
loope
andb
popa
push
xchg
cmp
xor
pop
idivb
cld
jmp
adc
pop
ja
out
lea
inc
cwtl
div
dec
mov
shll
push
adc
ret
in
add
out
mov
scas
jg
mov
push
pop
xor
inc
mov
aas
iret
xchg
out
pop
out
dec
or
adc
pop
inc
mov
andl
sbb
ss
dec
jmp
xchg
lock
mov
enter
fldenv
cmp
sbb
nop
or
and
inc
lods
data16
mov
pop
repz
mov
daa
jecxz
mov
sbb
jnp
gs
lea
jmp
cmp
sbb
jmp
dec
popa
nop
lods
ja
int
mov
rorl
push
sbb
sahf
pop
scas
sbb
insb
sub
sub
subl
or
mov
inc
outsl
sbb
movsl
jbe
and
ja
imul
mov
inc
and
pop
xchg
or
dec
add
mov
out
mov
cmp
addl
mov
sar
outsl
sbb
push
sub
sbb
daa
or
mov
movsl
mov
jle
push
pop
outsb
adc
cwtl
push
xchg
pop
pushf
sbbl
dec
pop
movsl
push
xor
pop
dec
loop
popa
popa
loop
repnz
aas
aad
and
seto
inc
movl
nop
lret
nop
mov
mov
in
andb
cli
xor
and
pop
adc
out
inc
xchg
jecxz
xlat
pop
into
or
pop
mov
loopne
lods
imul
addr16
in
push
pop
cwtl
cmp
add
movsb
ss
dec
notb
add
bound
xchg
pop
jne
es
inc
je
test
or
fisubrl
push
adc
je
add
push
scas
test
push
dec
outsb
fwait
aaa
xorl
push
xchg
insb
inc
subb
add
stos
mov
pop
es
push
cmp
iret
lret
cs
pusha
xor
pop
int3
cli
dec
mov
aaa
clc
pusha
dec
pop
loope
subb
mov
cmp
subl
clc
cld
add
sub
ja
xchg
mov
xchg
out
sti
cmp
and
add
or
out
pop
pop
lods
enter
or
insb
outsl
adc
adc
or
pop
mov
cmp
int
inc
jo
icebp
mov
or
jl
adc
testb
xchg
cs
push
jb
xchg
dec
js
leave
sub
mov
popf
stos
and
int
mov
push
iret
xchg
mov
xchg
into
andl
add
inc
popa
cmp
push
mov
jno
sbb
stc
lahf
cmp
std
inc
dec
adc
push
mov
mov
jp
inc
pop
flds
lods
push
mov
dec
adc
mov
lods
lret
mov
lcall
cmp
and
xor
jp
jo
or
jb
cmp
loope
sti
sbb
shlb
int
aas
dec
add
fs
and
mov
aad
ja
pop
insb
sahf
or
mov
fsubrs
pop
push
jae
fidivrs
sbb
int
dec
push
pushf
inc
mov
lods
lds
pop
roll
mov
pushf
leave
push
arpl
das
dec
in
xor
iret
loopne
mov
mov
ret
xchg
orb
mov
sbb
push
and
xor
adc
outsb
jge
nop
stos
push
push
sti
mov
fcomps
sahf
push
lds
cmpsb
ds
out
sub
push
nop
sbb
fists
insb
out
cmp
pop
ja
inc
jecxz
push
div
mov
add
push
call
imul
sbb
lret
loope
cmp
js
lea
iret
das
aad
loop
or
mov
push
mov
bound
cmpsb
stos
cli
sub
inc
push
add
ljmp
shll
push
jb
dec
push
icebp
outsb
out
iret
loop
movsb
jae
leave
mov
mov
pop
fisubl
dec
nop
stos
das
jbe
lret
mull
pop
cltd
dec
xor
mov
aam
jae
fadds
pop
adc
lahf
pusha
and
pop
jae
sub
data16
dec
fstpl
gs
jne
sub
or
fsub
arpl
idivb
inc
repnz
scas
or
nop
cmp
out
mov
adc
add
nop
mov
mov
sbb
fcomps
mov
cli
xor
mov
loope
es
roll
pop
jmp
das
daa
cmp
lret
in
pop
or
dec
and
pop
jl
cmp
test
dec
jnp
stc
ret
popa
clc
in
xchg
into
cwtl
add
push
add
mov
xor
enter
outsl
mov
out
int3
insl
jb
test
into
inc
shrl
inc
or
dec
mov
movsl
loopne
mov
cltd
aad
jo
and
jb
jecxz
popf
lods
adc
add
mov
push
mov
orl
sub
into
sub
pusha
aad
cmpsb
in
xchg
xchg
icebp
lcall
jbe
iret
push
jno
inc
aaa
pop
mov
ja
jmp
clc
andl
loope
out
or
dec
and
mov
pop
fiadds
xchg
clc
inc
jmp
subb
movb
push
mov
jb
xchg
rorb
imul
lds
push
push
pop
and
mov
leave
dec
aad
mov
cmp
mov
sti
cld
popa
sti
pop
jmp
jb
mov
in
push
fmull
mov
fbld
add
js
popf
ret
xor
push
mov
jmp
test
ss
push
sub
fdivl
inc
pop
out
pop
sbb
daa
enter
movsb
cmp
sbb
mov
lods
mov
dec
aaa
fbstp
out
sbb
add
sbb
jl
mov
jo
adc
aaa
inc
xchg
lcall
push
sbb
xor
bound
outsl
mov
ficompl
add
imul
outsb
mov
mov
aam
pop
insl
gs
lods
adc
push
push
mov
push
jb
xchg
popa
jle
out
imulb
lret
dec
scas
push
in
sub
inc
cmp
mov
sbb
push
and
lcall
enter
fdivrs
xchg
cmp
jl
lret
addl
mov
lcall
mov
adc
push
xchg
mov
cmpl
ror
call
mov
call
mov
mov
movsl
push
loop
test
sub
das
cltd
test
in
cmpsl
xchg
out
enter
xchg
push
adc
orl
sbb
call
pusha
imul
aam
outsl
fwait
lods
adc
xchg
dec
cmp
jle
testl
sub
add
xor
shlb
push
mov
insl
adc
outsb
mov
cmp
loope
jb
mov
dec
push
bound
mov
mov
add
sahf
xchg
ficoms
in
sbb
and
mov
or
adc
xor
mov
je
insl
addr16
pop
xchg
jae
fisttps
jo
in
std
mov
js
loope
popf
testb
push
cmp
rcrl
push
jno
mov
jg
jp
inc
shll
and
sti
sbb
ljmp
add
nop
loopne
out
mov
aad
arpl
xor
push
in
jb
js
stos
iret
and
mov
push
cmp
cld
scas
jmp
je
test
sub
inc
fdivrl
jns
fidivl
xchg
pop
sbb
das
cs
hlt
mov
or
mov
cmc
pop
xchg
std
fdivrp
jp
andl
jne,pt
lock
test
mov
add
cwtl
ss
and
insb
jg
inc
and
jae
loope
pop
or
gs
mov
sub
pop
push
cmpsb
mov
lods
adc
lods
sub
jmp
sub
filds
xor
movsl
inc
out
aam
inc
dec
inc
movsb
xor
mov
lods
das
mov
jnp
hlt
pop
jp
shrl
mov
add
mov
loopne
jmp
bound
xor
or
xor
jecxz
pop
mov
pop
sub
in
jecxz
mov
cmp
push
mov
push
sub
mov
lods
lret
jno
sti
inc
xchg
mov
int3
popa
and
mov
insb
stos
dec
enter
jg
pushf
push
sbb
clc
push
shr
push
scas
sub
fstps
fcoms
dec
dec
pop
rcr
mov
popa
cmpsb
sbb
inc
cmp
stc
dec
push
add
inc
fnstcw
cmp
push
ja
lahf
lock
repz
mov
loop
scas
subb
cmp
inc
hlt
mov
mov
test
and
dec
push
push
mov
pop
in
mov
sbb
aas
insl
addr16
sub
mov
and
add
ds
jns
je
cmp
jle
inc
xor
or
popl
push
and
hlt
pop
scas
jae
fstps
andb
pop
cmp
sub
div
jecxz
cmc
mov
and
movsl
dec
jnp
xor
jb
jmp
mov
lods
lahf
mov
aas
push
jge
mov
ret
mov
ss
aaa
es
daa
outsl
inc
icebp
push
and
nopl
sbb
jnp
push
fcompl
stc
sti
repnz
dec
fsubrs
cmpsb
jecxz
pop
pop
test
popa
mov
jmp
movb
data16
adc
pop
add
xor
xchg
push
or
loop
dec
and
notb
stc
cmp
loop
mov
lods
pop
lret
pop
cmpsl
mov
sbb
loopne
pushl
stos
jb
mov
push
orl
popf
mov
jl
test
mov
shrl
mov
test
or
push
sbb
divl
or
inc
daa
fcmovnbe
stos
out
push
adcl
and
rol
es
mov
inc
mov
ret
push
std
jge
sub
push
cltd
inc
add
jle
or
push
out
mov
pop
cmp
pop
fisubrl
pusha
popf
mov
sub
dec
imul
and
movl
ret
mov
sbb
cmp
lea
and
xchg
lods
dec
test
clc
fstps
cmpsb
ret
xchg
jno
jbe
enter
lret
inc
jge
dec
push
add
xlat
sbb
mov
and
in
bound
mov
mov
shll
dec
jb
adc
enter
ret
ret
dec
xchg
fs
fwait
inc
cmp
std
inc
ficoml
jle
jge
fucomi
iret
and
sbb
pop
mov
loop
arpl
lds
pushf
rcrl
mov
cltd
nop
dec
in
lret
add
mov
or
mov
cmp
movsl
push
mov
outsb
sbb
push
movl
push
mov
jbe
mov
mov
xor
add
dec
sti
addr16
jp
scas
jg
ljmp
int
cmpsl
mov
lret
outsl
int3
push
mov
decl
mov
lock
adc
and
lea
leave
pop
mov
test
add
mov
mov
jle
nop
push
add
loopne
push
and
or
addr16
xor
and
insl
arpl
std
mov
mov
mov
cwtl
or
movsl
xorl
in
mov
and
outsl
mov
and
aaa
xor
xchg
mov
std
push
and
mov
or
adc
cmovno
lea
add
cmpsb
mov
aaa
xor
mov
rorb
gs
mov
lret
dec
lret
fcmovnbe
out
mov
orl
or
mov
dec
out
stc
out
lea
scas
add
out
ja
add
xchg
pop
mov
inc
andb
dec
adc
xor
pop
lds
pop
jns
xchg
push
in
dec
jecxz
aad
pop
sbb
scas
out
es
loop
xchg
ljmp
movsb
aaa
pop
mov
into
pushf
stos
ud0
sbb
pop
jp
lahf
gs
and
and
sahf
sub
in
jmp
les
inc
hlt
out
call
add
and
loopne
adc
add
jle
lds
outsl
cmp
ror
pop
mov
xor
cmc
dec
dec
cmp
imul
jne
mov
xorb
xchg
mov
xor
loop,pn
mov
mov
mov
dec
ficomps
das
cli
push
mov
mov
adc
xchg
adc
cmpb
lret
jle
pushl
xor
or
xor
mov
test
add
mov
imul
shll
cmc
cmp
add
pushf
cmc
xchg
testb
cld
lahf
fs
mov
xchg
push
lret
push
mov
pop
sti
jno
leave
pushf
ds
into
call
xlat
xor
and
inc
adc
mov
shll
sbb
dec
xchg
imul
jp
sbb
cs
and
test
fs
xchg
lret
and
loop
cltd
xchg
cld
rcrl
lret
lods
cmp
add
mov
sti
cltd
shlb
imul
jns
inc
and
mov
xor
insl
call
shl
jb
mov
mov
push
inc
add
add
dec
in
ret
rcll
js,pn
or
in
push
adc
shl
orl
push
xor
and
dec
js
sarl
bound
dec
xorl
sub
inc
test
add
je
notb
pop
dec
lods
jbe
repz
or
jg
and
iret
leave
shr
jne
mov
cmp
sbb
clc
xchg
or
hlt
dec
insb
dec
jns
repnz
enter
cld
mov
add
dec
and
in
adc
loop
pop
or
jl
enter
subl
je
dec
mov
icebp
cwtl
stos
jecxz
inc
sub
stc
imul
xlat
push
xlat
lea
push
imul
sbb
pop
mov
jns
loopne
lahf
in
xchg
fs
roll
hlt
lret
jle
mov
pop
ficompl
int3
lcall
add
pop
pusha
and
push
nop
push
xchg
mov
testb
stos
mov
cmp
cmp
pop
sub
xchg
frstor
sarb
push
and
out
add
out
ret
pop
xor
fstpl
mov
imul
fidivl
inc
bndstx
scas
fdecstp
pop
popa
popf
daa
scas
add
cwtl
shrb
dec
pushl
push
clc
mov
shlb
roll
cmp
into
insb
jo
lods
sub
cmp
jp
pop
in
fimuls
lret
cli
and
jmp
jns
into
mov
pop
pusha
aaa
mov
and
mov
mov
mov
imulb
pushl
aad
adc
pop
rcl
or
xchg
test
mov
mov
icebp
subl
movsb
data16
ret
arpl
clc
lret
iret
mov
sub
cmpsb
lahf
mov
gs
into
xor
sbb
jge
das
repnz
sub
xor
mov
pop
stc
shr
mov
ror
or
push
inc
leave
fimull
push
test
int3
les
movsb
fildll
sbb
adc
jo
dec
push
ret
mov
jno
aam
pop
mov
in
in
daa
inc
xor
fdivrp
call
inc
lret
fistpll
test
xchg
mov
pop
inc
or
push
stc
adc
sub
jmp
sub
repz
adc
mov
mov
icebp
aaa
das
inc
jo
addr16
sub
imul
cli
adc
dec
cmp
dec
inc
push
push
jmp
mov
mov
cmp
pop
out
xor
jne
stos
pushw
out
mov
adc
andb
aaa
aas
or
lret
daa
xorl
cmp
lods
shrb
sub
hlt
mov
sbb
adc
mov
aas
cmp
int
jle
int
push
rclb
mov
add
andb
les
pop
insl
cmp
incl
rcrl
add
xor
push
mov
call
fdivl
stc
les
testl
fs
out
mov
or
mov
sbb
jns
hlt
pop
dec
or
out
mov
mov
mov
and
int
ds
inc
adc
mov
ljmp
jmp
sbb
cltd
cmpl
add
mov
add
fbstp
rcrl
xor
shrb
inc
test
or
inc
hlt
insb
into
push
jb
psubw
sbb
xchg
adc
in
push
sbb
sti
shl
adc
lods
gs
outsl
js
cwtl
int
cmp
xchg
xor
int
cmp
dec
mov
orl
mov
xor
cmp
ja
icebp
xchg
xchg
jne
inc
push
aam
int3
jge
cmp
lahf
jmp
nop
shl
or
jae
aad
sbb
ja
pop
jge
xchg
sbb
enter
fidivrl
ds
sbb
leave
in
xchg
sub
rolb
cmp
jle
inc
push
pusha
icebp
jp
mov
shl
sbb
insl
out
sbb
mov
dec
cmp
pop
imul
dec
mov
and
in
jge
inc
add
xchg
jp
loopne
sub
push
pop
jp
mov
std
je
jge
pop
ja
test
mov
imul
sub
add
ret
jge
mov
js
rclb
push
jno
mov
data16
pop
enter
inc
or
cmc
ljmp
ljmp
inc
jle
xchg
mov
jp
jle
cmpsb
cmp
stos
outsb
and
xchg
sbb
push
xchg
cmpl
cld
pop
mov
push
mov
test
addr16
sbb
mov
sub
ja
push
mov
dec
pop
cmp
mov
ret
mov
insl
lahf
lea
mov
bnd
into
std
push
aaa
xchg
sbb
xchg
push
xchg
xchg
imul
and
mov
lods
adc
sub
sbb
ds
and
popf
out
add
adc
orl
movsb
lods
push
sbb
dec
mov
pop
fiaddl
jl
xchg
sub
xchg
mov
or
cli
cmp
sbbb
dec
addr16
push
lds
cs
cmp
sub
pushf
dec
out
aam
mov
add
xlat
mov
and
leave
shll
ret
popf
push
mov
mov
mov
add
dec
inc
cmp
inc
cmp
xchg
movl
jae
in
jne
or
lods
adc
lds
fisttpll
push
dec
and
lea
push
mov
mov
in
adcl
xchg
mov
add
imulb
dec
subl
cmp
inc
inc
scas
cmp
frstor
in
inc
rolb
mov
push
dec
pop
inc
or
addb
jg
out
xchg
popa
hlt
xorl
push
add
jge
push
fisttpll
sarl
fmuls
imul
inc
mov
ss
pop
stos
repz
stos
fstl
dec
test
inc
loop
add
adc
inc
fbstp
test
pop
jecxz
xor
sub
jno
xchg
or
jbe
inc
push
inc
and
outsl
push
sub
inc
test
pop
scas
fdivrp
ja
jae
outsb
add
sbbb
fwait
xchg
call
int
or
mov
push
sarl
adc
pop
cld
mov
adcl
jb
sbb
xchg
adc
test
push
and
lret
cmp
xchg
push
pushf
loope
adc
scas
pop
fcoml
inc
push
sbbb
filds
jbe
int
daa
cmp
imul
in
mov
add
add
lea
and
imul
cmp
lds
repz
jae
push
out
mov
cmc
andl
jmp
in
lods
jne
pop
cmpsl
xchg
jns
lret
int3
mov
test
add
fiaddl
cltd
sbb
adc
or
xor
shrl
mov
or
jno
sahf
aad
pop
sbb
lods
push
xchg
cmpsb
jns
lahf
insl
clc
push
cwtl
mov
sti
cmpsl
rcll
mov
add
sbb
sahf
adc
flds
sub
cld
sub
push
or
sarl
xchg
ds
mov
gs
aad
movsb
cmovno
or
sub
jmp
int
mov
call
aas
lods
lret
and
das
cmc
pop
inc
outsl
inc
push
lods
mov
adc
jbe
cmp
not
cltd
push
outsl
test
push
std
dec
inc
inc
xchg
mov
push
test
push
xchg
and
xchg
leave
mov
mov
inc
mov
pop
lods
fdivrl
int
nop
jbe
pop
ljmp
and
outsb
mov
sub
data16
and
int3
imul
pop
pop
or
fs
mov
pop
nop
aam
cmp
leave
outsb
icebp
sub
adcb
jbe
fiadds
ljmp
cmp
test
xchg
test
cmp
adc
addl
sahf
xor
sbbl
les
push
sub
mov
pop
inc
ret
adc
ja
mov
jno
stos
lods
js
js
xchg
imul
sbb
push
mov
cmp
daa
into
jne
jmp
into
es
fwait
sub
es
fwait
push
inc
fsubl
mov
insl
cld
jne
nop
hlt
and
or
inc
cmp
jle
out
in
xchg
scas
sti
inc
fsubs
daa
push
mov
sahf
aaa
mov
jp
outsl
clc
das
dec
sbb
clc
int3
mov
ljmp
icebp
pop
jmp
cmp
or
aaa
dec
adc
fucomp
stos
xchg
adc
outsl
mov
dec
mov
adc
mov
adc
popf
jno
push
jo
mov
xchg
mov
or
shll
mov
in
adcl
mov
out
fs
out
and
sub
call
mov
sub
dec
aam
cltd
add
xchg
daa
sbb
pop
test
push
jo
dec
dec
out
cltd
dec
ds
orb
jnp
notb
es
pop
cwtl
sbbl
and
pop
mov
push
pusha
inc
into
xchg
xchg
outsl
dec
pusha
fimuls
cmpl
lea
push
insl
or
push
sub
cltd
push
lods
mov
push
insl
mov
jbe
not
xchg
or
jg
stos
dec
cmp
sahf
mov
cmp
mov
pop
pop
test
leave
or
jbe
addb
cmpsl
rorl
jae
arpl
xchg
jne
cmp
mov
test
jno
inc
cmp
out
cwtl
and
sub
dec
and
adc
sti
movsl
fwait
sbb
ja
cltd
dec
sbb
dec
mov
adc
cmp
dec
aas
inc
roll
pop
call
ss
xchg
cltd
sub
push
in
stos
adc
jne
fnstcw
pop
outsb
imul
mov
test
xor
cmp
xchg
push
call
cmp
flds
adc
out
pop
push
ljmp
mov
test
jb
das
sub
int
test
loop
sub
sbb
scas
cmp
lret
pop
cmpsl
mov
pop
push
gs
out
std
cmp
xchg
popa
xor
mov
cwtl
and
ljmp
repz
dec
insl
pop
orl
add
lcall
sub
fdivs
xchg
stos
sub
sub
clc
repnz
test
int3
std
leave
xchg
mov
jge
push
lea
dec
push
pop
sub
push
push
test
xor
scas
lods
xchg
pop
and
js
sbb
sbb
loop
push
mov
lcall
mov
lcall
and
nop
in
jle
dec
mov
push
xchg
enter
adc
ret
scas
fwait
mov
cmp
xchg
and
xor
pop
fwait
mov
mov
stos
pop
subb
and
bound
dec
data16
push
ret
mov
inc
and
ss
or
les
sti
mov
push
cmp
add
fmull
fisubs
add
scas
sub
mov
and
and
mov
repz
enter
add
mov
xor
or
xor
cmp
lock
movsl
sub
jno
mov
inc
adc
push
jbe
data16
or
jmp
mov
mov
xchg
cmp
cmpsb
pop
jb
push
adc
nop
repz
rcrb
loop
mov
das
dec
push
addr16
mov
sub
xor
xlat
in
call
jb
and
enter
mov
ljmp
call
in
jns
pop
xor
ljmp
push
cmc
add
mov
mov
pop
adc
test
mov
jg
popl
jne
out
imul
mov
psubq
add
and
into
les
mov
ret
dec
push
ljmp
add
repnz
std
add
xorl
in
xlat
in
sub
mov
jo
sahf
les
pop
mov
xor
push
lahf
and
aad
sub
fadds
xor
lcall
lret
test
jg
jbe
xchg
mov
into
mov
cld
jne
lods
push
dec
clc
push
int3
ljmp
adc
jl
push
enter
mov
jge
lods
cmc
ljmp
bound
pusha
jo
jno
cmp
in
cmp
mov
push
nop
ljmp
test
mov
and
je
int3
sti
pushf
std
arpl
pusha
je
rcl
push
sti
push
jecxz
in
pop
aam
xchg
fwait
shl
insb
add
int
add
iret
movsb
sti
mov
enter
fsubs
jne
nop
dec
pop
and
repnz
fs
xor
pop
jo
mov
push
dec
aas
loop
add
pop
outsl
mov
adc
ja
add
mov
in
cmpsl
push
mov
es
sarl
mov
call
pop
int3
jne
pusha
scas
sbb
add
mov
push
sbbb
mov
arpl
add
je
sbb
xor
div
xor
aaa
xor
insb
push
inc
cmp
jl
inc
cmp
pop
mov
fsubrl
xchg
cwtl
push
mov
xor
pop
lds
scas
mov
or
jp
clc
jb
and
push
pop
dec
imul
sub
pop
pop
pushf
iret
test
sahf
mov
pop
loope
in
loopne
arpl
add
enter
jo
arpl
lcall
dec
add
mov
sbb
out
loopne
push
xchg
arpl
mov
ficompl
pop
out
inc
aad
push
mov
mov
sbb
cmp
popl
cmc
pop
sar
icebp
mov
out
jle
rcrb
cli
int
test
sahf
dec
test
cmp
lcall
add
jno
fimull
fwait
add
mov
and
sbb
shll
lea
mov
repnz
icebp
mulb
xorl
scas
pushf
and
lahf
and
scas
mulb
mov
mov
fdivs
aam
sub
dec
jnp
sub
sbb
dec
ja
and
into
add
test
lea
sub
mov
sub
adc
dec
xchg
shl
call
addr16
bound
pop
push
push
or
sbb
test
mov
jae
lcall
adc
cmc
bound
les
lret
mov
mov
xor
xchg
add
push
loopne
ret
es
imul
call
adc
inc
int3
pop
adc
xor
dec
mov
loop
shlb
jo
out
xlat
dec
ljmp
jge
fucom
adc
fdivrl
shlb
xchg
mov
xchg
inc
or
jp
bound
movsl
add
daa
ja
int
pushf
sub
cmpsb
out
mov
xor
push
stc
mov
push
fnstcw
pop
out
mov
in
jae
fs
lock
mov
xchg
push
push
divl
xor
jp
mov
push
jle
ljmp
mov
call
dec
xchg
mov
hlt
pop
mov
push
shrl
add
dec
or
push
xor
ljmp
mov
xor
ss
inc
popa
xor
ret
push
stos
add
out
outsb
lcall
xchg
jnp
pusha
and
jecxz
inc
lods
pushf
incb
mov
loop
and
or
dec
inc
add
or
pop
fwait
sub
xchg
inc
stc
and
xchg
dec
sti
push
inc
inc
mov
or
fwait
mov
xchg
mov
shld
mov
mov
ret
dec
loop
enter
pop
in
cmp
mov
xchg
pusha
cmp
jae
pop
cmp
call
mov
mov
es
mov
cmc
add
cmp
jl
je
rorl
jno
ja
daa
push
lock
push
sub
sub
jno
push
jnp
xchg
out
sti
lds
jae
hlt
bswap
xchg
and
leave
xchg
or
inc
mov
sbb
sub
sbb
cmc
sahf
leave
enter
fldenv
sbb
sub
or
pop
shr
insb
loop
cmp
and
daa
dec
jmp
inc
pop
aad
inc
cmp
jns
ret
fldt
pop
pop
cmp
lock
xchg
and
in
inc
clc
jbe
sbb
inc
or
and
fucomi
cltd
jno
insb
add
pop
mov
cmp
xor
pusha
stos
push
xor
ja
in
in
xchg
inc
pusha
aaa
add
dec
dec
mov
dec
cwtl
mov
add
mov
popl
jmp
sbb
sbb
push
je
push
and
rcl
das
or
jmp
cmp
dec
cmc
jb
sbb
daa
jbe
pop
jg
jbe
jbe
test
mov
or
jbe
popf
pshufw
or
pop
jg
adc
iret
or
mov
dec
leave
jle
mov
and
idivb
hlt
cmp
adc
in
idivl
dec
repz
aaa
push
jmp
add
jmp
pusha
mov
lods
cs
mov
inc
mov
jno
sbb
mov
cmc
mov
loopne
xlat
out
gs
jnp
mov
out
gs
int3
cmc
outsb
add
sbb
ljmp
jp
lret
xchg
sti
add
insb
xchg
pop
mov
int3
decl
in
mov
icebp
push
mov
imul
and
sarb
push
jg
repz
into
out
dec
xchg
jnp
inc
mov
mov
cmp
jo
sbb
fcmovnb
sbb
xrelease
jb
insl
mov
imul
or
pop
lea
loop
je
jle
jp
shr
pop
hlt
les
int3
jae
popf
repz
nop
std
cpuid
mov
add
sub
shll
jo
jnp
mov
lock
pushf
aas
or
add
or
push
sbb
inc
scas
dec
xchg
inc
jne
shr
out
rcrb
pop
push
test
jb
mov
sti
mov
rcl
adc
mov
jp
mov
mov
push
loopne
xchg
lret
mov
dec
mov
test
mov
lods
fists
push
push
inc
faddp
jae
leave
in
xchg
mov
rcrl
add
cmc
fisttpll
cmp
dec
xorb
or
fs
adc
jl
xor
or
mov
sbb
mov
add
mov
and
std
dec
testl
fsubs
and
inc
xchg
test
adc
push
lods
popf
ss
shlb
sarb
mov
pop
fcoml
inc
mov
jp
mov
lahf
imul
mov
mov
mov
sub
adc
idivb
in
neg
pushf
sarl
repnz
aas
out
sbb
aas
pop
sbb
stc
iret
adc
hlt
dec
lds
sub
outsl
stc
mov
aam
out
sbb
inc
outsb
add
aam
inc
outsb
inc
in
add
les
jae
scas
cmp
fbstp
fmull
imul
rcrb
push
repnz
pop
mov
sbb
xchg
cmp
and
movb
push
fisttpl
xchg
leave
add
mov
lcall
sub
adc
roll
or
popf
jnp
add
loopne
data16
imul
adc
int
cmp
fsubrs
cmpsb
push
add
frstor
xor
cmp
mov
aam
out
mov
lcall
mov
and
jae
addr16
jp
rcl
jne
scas
lahf
repnz
cmp
xchg
push
add
mov
bound
shll
mov
push
and
imul
xchg
adc
test
pop
cs
test
mov
fistpl
jmp
data16
add
rolb
cli
mov
out
ja
hlt
dec
icebp
jmp
mov
adc
ljmp
out
mov
pop
xor
xchg
push
push
repnz
inc
mov
push
dec
les
dec
or
jnp
shrl
popa
dec
add
in
je
mov
movsb
mov
mov
push
sbb
aas
dec
fidivrs
push
mov
pop
mov
pop
xchg
mov
arpl
outsl
or
das
xlat
jmp
js
push
pop
repnz
cmp
add
jbe
iret
mov
int
scas
dec
fs
and
dec
arpl
mov
test
insl
enter
and
and
out
call
adc
shlb
add
popa
dec
out
mov
adc
aaa
ljmp
adc
and
xchg
jecxz
xor
xchg
jge
inc
push
jmp
push
cmpsb
ficomps
pop
ret
je
mov
sub
mov
fdivr
mov
mov
mov
mov
push
stos
js
push
fnstsw
xchg
scas
xlat
push
lret
adc
mov
push
fisubrs
xchg
scas
xor
jne
testl
dec
and
and
stc
pop
test
jo
ljmp
fisttps
insl
aaa
adc
and
and
clc
call
jne
sub
jo
jp
hlt
out
xchg
test
add
test
or
mov
jge
sub
pop
push
jle
mov
stc
and
in
cwtl
inc
push
or
push
cmc
mov
lcall
dec
nop
mov
fdivrs
pop
arpl
addr16
cs
pop
inc
jl
inc
mulb
ret
pusha
out
mov
cltd
xchg
testl
mov
jle
cmpsl
in
call
cltd
std
stos
les
jge
add
pop
sub
mov
das
fwait
mov
jle
mov
cmp
mov
xchg
xor
in
mov
cli
fstp
and
jmp
mov
test
mov
ljmp
out
stos
in
lcall
stc
xor
and
loopne
xor
jbe
in
push
out
fcom
ret
xor
xor
mov
pop
pop
push
jae
lock
cmp
pop
push
bound
sub
ror
fiaddl
xor
push
add
dec
xchg
or
les
xchg
icebp
adcb
adc
out
cmc
jl
mov
insl
or
test
sub
arpl
popa
or
pop
dec
inc
jb
notl
mov
test
inc
adc
aaa
jp
les
js
repz
and
and
jnp
sahf
push
inc
xchg
xor
mov
in
sbb
jae
inc
mov
push
dec
lahf
std
pop
jl
cmp
xchg
das
ret
bound
sub
pop
stos
push
decb
or
push
call
test
scas
rcr
inc
add
cmp
xlat
cmp
fidivrs
mov
call
push
roll
lds
hlt
scas
out
loop
cs
fbstp
popa
scas
cld
faddl
or
sub
aam
mov
mov
dec
dec
mov
jle
dec
dec
mov
sbb
fdivl
inc
mov
jbe
andb
mov
adc
aam
scas
sti
mov
push
sbb
sarl
cmp
inc
mov
test
lock
insb
add
inc
adc
inc
int
mov
movsb
mov
cmp
inc
jne
mov
xor
mov
jns
mov
mov
xlat
sbb
mov
jbe
xchg
adc
gs
cmpb
jg
cs
push
daa
jp
or
jae
fcmovu
mov
xchg
cwtl
sbbl
jmp
mov
xor
or
jg
mov
jno
das
hlt
test
mov
pop
add
mov
jae
sbb
mov
fildll
ret
repnz
fadd
fsubrl
xchg
cmpsl
lock
mov
fsubrl
xor
lods
dec
loopne
sarl
inc
push
sahf
push
ja
mov
cmp
clc
fildll
inc
lds
sbb
push
or
xchg
jl
mov
pop
jb
mov
outsl
mov
gs
push
fnclex
pop
mov
negl
mov
sub
and
mov
mov
cmp
ljmp
stos
jge
mov
ds
mov
aam
hlt
jmp
mov
aas
mov
cwtl
daa
and
mov
out
movsl
xchg
add
dec
mov
mov
ds
fcompl
in
pop
mov
xchg
inc
xor
sub
lahf
fidivs
mov
sbb
push
mov
cmp
cmpsb
pop
push
mov
cmpsl
inc
cwtl
lret
pop
add
iret
insb
bound
sbb
movsl
and
jl
xor
or
mov
adc
cmc
subb
jo
repnz
rol
pop
stc
enter
add
stc
popa
into
pop
jno
push
and
pop
repz
lock
ret
jo
lret
rol
scas
mov
jno
lock
mov
or
push
or
lcall
mov
jg
pushf
cmp
and
pop
push
dec
ret
es
loopne
jb
mov
jne
cmp
sbb
fidivs
jle
jae
bswap
lahf
insl
push
mov
dec
lods
xor
cmpsl
out
not
jmp
xchg
add
insl
xor
push
mov
into
jmp
lcall
or
cmp
stos
aad
sahf
xchg
and
call
xchg
inc
fdivl
fcompl
pop
xor
fsts
xchg
js
test
push
mov
mov
xchg
pop
xchg
arpl
in
sub
cmp
pop
loopne
pop
mov
xor
shlb
subb
scas
cmpsl
sbb
add
cmp
in
sarb
inc
xor
xor
cmp
fdivrl
fisubs
jne
cmp
jb
test
lret
andl
xor
fwait
bound
jg
push
xor
lods
ljmp
and
dec
inc
fcmovnb
arpl
add
fwait
cs
mov
fdivs
mov
sub
sarb
stos
out
mov
clc
lahf
mov
xor
sbb
xchg
xchg
push
cmp
int
pop
inc
adc
jns
jae
mov
imul
sbb
insb
dec
loopne
mov
in
pop
scas
rclb
imul
nop
jge
in
adc
movb
pop
rol
sahf
push
add
rolb
mov
test
es
cmpsl
ljmp
jle
inc
or
popa
jg
push
scas
sbb
mov
push
xor
mov
jmp
je
jne
adc
sub
sahf
clc
xlat
push
ss
jmp
mov
icebp
mov
cmp
int3
mov
ret
and
push
es
xor
lahf
addb
mov
cs
mov
dec
inc
inc
push
add
mov
cs
sbb
pushf
dec
popf
add
add
lret
xchg
push
sbb
insb
ja
aam
fnsave
xchg
dec
int
dec
add
mov
ds
mov
xchg
scas
sub
push
jae
iret
pop
push
mov
jns
lock
cli
hlt
dec
lds
add
pop
cs
mov
adc
mov
addr16
insb
dec
pop
popa
mov
mov
cwtl
arpl
inc
cmp
out
sbb
mov
pusha
pop
cmp
and
aam
inc
ret
push
out
or
lcall
test
test
pop
jecxz
jecxz
cmpsl
stos
mov
or
daa
cld
xor
cmp
iret
call
mov
fmull
inc
movsb
inc
sub
pop
cmp
test
decl
or
xchg
punpckhwd
lcall
pop
pop
xorl
into
inc
push
loope
xchg
in
fists
add
imul
adc
outsb
aad
ja
sbb
push
mov
jmp
fadds
sbb
cld
sahf
or
mov
stc
mov
int3
repnz
je
addr16
mov
pop
fsts
js
jp
jp
mov
push
inc
fmull
mov
jo
jnp
filds
popf
addl
push
in
into
shll
pop
mov
cmpsb
shr
ljmp
out
xchg
sbb
les
jp
adc
es
rorl
adc
bound
out
dec
sti
fdivl
ljmp
push
lods
inc
adc
les
push
mov
adc
push
xchg
cmp
dec
cli
fstpl
inc
sbb
mov
out
xchg
cmp
pop
sbb
jne
jns
xorl
adc
pop
std
aam
jmp
push
ja
xor
fisubrs
aad
adc
sbb
cmp
movsl
pushl
in
xchg
xchg
pop
stos
xchg
dec
push
in
xchg
aaa
fsubrl
lods
jecxz
sbb
ja
pop
push
inc
and
push
jle
mov
fists
aam
dec
scas
in
mov
mov
shrb
xlat
push
push
leave
cwtl
adc
stos
xchg
paddq
out
pop
in
xchg
mov
xchg
adc
fwait
es
les
aad
stos
xorb
push
pop
lds
sub
scas
push
xchg
push
out
adc
mov
sub
data16
test
dec
mov
std
ficoml
push
sub
sbbl
cli
pop
lret
mov
inc
jns
xor
lcall
es
ret
js
or
subb
addb
data16
and
jmp
loope
inc
cs
hlt
push
mov
dec
push
ss
cli
test
xlat
outsl
sahf
lahf
mov
and
lods
mov
push
or
fnstcw
mov
fwait
jo
push
adc
pop
pop
sub
adc
test
cs
cmp
lahf
popf
jl
outsl
add
movl
inc
jnp
mov
push
push
sub
push
cmp
push
push
cmp
add
or
ja
inc
cmp
sub
lods
mov
imul
shlb
insb
lock
loopne
xor
push
sub
pop
mov
pop
xchg
arpl
es
adc
jecxz
adc
pop
test
mov
xchg
xchg
dec
adc
and
insb
adc
or
cld
js
hlt
jb
or
add
pop
pop
jle
mov
outsl
cmp
xor
test
sahf
inc
xchg
jb
cmp
xor
std
sub
jecxz
scas
mov
out
dec
add
outsb
xor
sbb
clc
dec
fbld
adc
int
loop
lcall
or
cmp
xorb
jne
aas
pop
clc
int3
mov
push
fdivr
mov
mov
jno
shrl
and
or
mov
push
push
dec
mov
push
or
mov
mov
push
movsb
stos
outsb
arpl
and
frstor
in
stos
mov
pusha
and
dec
into
or
ja
mov
mov
test
xchg
in
scas
pop
lock
sbb
pushf
loope
fcmovne
bound
xor
and
sbb
or
or
cmp
mov
lods
xchg
in
sahf
cltd
sub
iret
sub
movsl
sbb
dec
xchg
push
test
push
mov
dec
or
xchg
stos
adc
or
rcrb
xchg
test
pop
inc
sbb
pop
pop
gs
jne
mov
movsb
mov
filds
push
or
jne
fdivrl
jmp
add
mov
xor
push
pusha
jb
je
mov
subb
jl
inc
insl
mov
ret
popa
dec
lret
in
std
pop
insl
dec
out
xchg
and
pushf
inc
inc
imul
fsubs
rcll
ret
inc
sub
adc
pop
xor
out
sub
pop
adc
out
jge
xchg
mov
bound
ja
mov
dec
popa
xchg
inc
adc
push
jne
lcall
jb
push
cltd
xchg
outsl
jo
push
adc
mov
lods
and
sub
jns
test
idivl
cmp
adc
leave
cmp
lcall
mov
stos
mov
jl
call
pop
jbe
push
push
lcall
sbb
dec
ljmp
cmc
pop
hlt
sub
js
sub
testb
add
call
test
lock
dec
scas
sbb
dec
cmp
and
mov
cmp
loop
daa
mov
or
loop
enter
lret
sahf
xchg
mov
push
loop
jmp
loope
js
loop
pop
mov
xor
icebp
push
jg
mov
mov
adc
add
or
inc
lock
mov
clc
es
push
sub
mov
or
les
shl
data16
repnz
jle
mov
stos
push
aaa
inc
and
mov
cld
imul
cmp
rclb
insb
stos
xor
sub
mov
adc
scas
jno
rorb
pushf
rolb
mov
jnp
movsl
inc
mov
xchg
add
stc
addr16
roll
mov
mov
pop
adc
dec
jmp
lret
dec
stc
sbb
xor
loop
pop
sbb
ljmp
mov
addr16
mov
sbb
add
rcrl
add
or
inc
cmp
addr16
dec
js
hlt
and
leave
xchg
cmp
test
xor
clc
jns
fucomip
add
es
dec
xchg
orl
adc
jno,pt
mov
push
fistpl
std
and
gs
and
adc
out
lock
add
fsubs
icebp
add
xchg
mov
test
cs
cmpsb
divb
data16
jbe
mov
cmpsb
or
fstpt
subb
xor
jns
and
ret
mov
sub
cmp
and
sar
sbb
cwtl
sbb
dec
in
add
jmp
cltd
ja
in
cmp
push
xchg
shrb
sub
push
not
out
ds
add
pop
je
dec
aam
mov
pop
bound
mov
fmull
lea
iret
aaa
cld
pop
lcall
imul
mov
jle
dec
aas
in
sbb
aam
insb
jp
test
pop
les
fistpll
jg
and
hlt
stos
pop
aas
pop
mov
enter
push
gs
leave
lret
mov
es
mov
xor
adc
cld
xor
lret
shlb
imul
call
andl
icebp
inc
inc
mov
loopne
cmp
inc
rclb
insl
lret
xor
inc
arpl
dec
ss
les
daa
inc
lods
mov
loope
lcall
fwait
pushl
std
lods
push
cli
mov
sub
mov
insb
cmp
out
cmp
push
ret
das
xchg
add
xor
scas
dec
push
fisttpl
rcr
xorb
loope
fcmovne
gs
mov
test
stos
mov
pop
sbb
mov
jle
adc
scas
jo
add
pop
mov
sbb
arpl
push
jmp
sub
and
and
fcomps
das
icebp
inc
out
cmp
fwait
xchg
sahf
int
jb
push
mov
inc
mov
loopne
negl
sbb
mov
xchg
jae
xchg
xchg
data16
imulb
pop
push
shll
mov
jg
in
dec
jae
test
rcll
pusha
mov
sbb
ret
imul
mov
xchg
push
xchg
add
or
adc
fisubrl
jbe
xor
mov
dec
test
mov
iret
jo
jno
cwtl
xchg
mov
or
outsb
ret
ja
xor
sbbl
add
xchg
aad
das
test
mov
or
mov
clc
pusha
ds
lret
idivl
inc
pop
jecxz
insl
xlat
call
test
xlat
push
adc
rolb
fbld
sub
jl
mov
rclb
inc
mov
inc
mov
xchg
in
inc
pusha
rorl
xor
popl
in
inc
stos
pop
cltd
pop
divl
mov
adc
faddl
imul
test
insl
sbb
cmp
cmp
cmp
or
cmc
xor
pop
imul
mov
mov
adc
xchg
mov
sbb
mov
ret
aas
adc
pop
cmp
xor
mov
push
test
push
push
pop
aam
ja
outsl
jno
or
loopne
mov
lret
xorb
xor
scas
add
subb
ja
mov
xchg
div
les
sbb
sub
sbb
or
popa
add
data16
mov
ljmp
test
and
mov
or
je
mov
mov
out
loop
jp
sti
or
xor
enter
test
adc
nop
inc
outsl
adc
add
jg
mov
aas
mov
scas
les
jge
shl
jge
arpl
adc
sbb
push
out
in
repnz
inc
out
jg
fnstcw
mov
mov
cmp
loop
xchg
cmp
js
and
stos
mov
sahf
jae
pop
jle
icebp
lods
dec
add
fistps
in
xor
sub
sub
adc
pop
add
insb
stc
pop
mov
ds
jp
test
hlt
stos
xor
loope
inc
pushf
dec
xchg
mov
xor
xor
mov
scas
ficoml
js
fistpl
mov
jae
pusha
sub
push
fistl
sbb
nop
jp
adc
fmuls
xchg
mov
insb
dec
mov
lea
lods
fwait
dec
mov
mov
mov
inc
xchg
push
push
push
fbld
adc
cmp
gs
sbb
dec
pusha
add
dec
mov
hlt
icebp
lret
sbb
xchg
movsb
dec
sbb
aas
imull
dec
pop
jae
dec
aas
push
sahf
mov
lods
cmpsl
in
lcallw
pusha
xchg
mov
cmp
repnz
inc
inc
mulb
hlt
call
outsw
push
fiadds
mov
lahf
or
push
jmp
mov
sbb
jo
sbb
inc
movsl
rcrl
jno
xor
push
xlat
jns
sarl
insb
add
pop
int
mov
fcmovb
adc
push
cmp
pop
pusha
pop
movsb
leave
in
xor
out
aaa
and
and
dec
je
sub
in
mov
and
mov
fs
add
rorl
cltd
cmpsl
cmpsb
rorb
xchg
push
push
fcmove
adc
cltd
jno
rorb
sbb
dec
idivb
pop
xchg
and
out
mov
div
mov
stc
jne
das
mov
push
daa
push
push
inc
repnz
mov
mov
xor
cmpsl
add
mov
add
popa
aas
fcompl
iret
mov
or
mov
ret
xchg
outsl
pop
lret
call
sub
inc
ljmp
xor
sbb
dec
cmp
rol
sub
pop
mov
lret
push
pop
rcrl
bound
mov
call
in
shl
cld
mov
sbb
sar
cwtl
lcall
imul
jl
mov
dec
mov
in
pop
inc
arpl
adc
les
mov
adc
shlb
mov
fisttpl
insl
sahf
stc
aam
mov
scas
in
dec
aam
jg
xlat
scas
outsb
push
test
dec
sbb
fadd
cwtl
sahf
add
pop
mov
jbe
shr
into
loop
daa
lret
pusha
mov
cmc
int3
int
inc
je
andl
in
pop
shrb
cmpsl
fcompl
enter
iret
dec
fldl
mov
imul
into
mov
xor
mov
sbb
fwait
inc
sbb
popa
xor
jb
in
push
arpl
stos
scas
dec
imul
fcoms
lock
adc
aam
fcoml
jge
cli
inc
out
xchg
repnz
jecxz
int
push
imulb
and
lods
pop
shrb
mov
test
stos
outsb
dec
inc
stos
mov
enter
jle
fld
push
leave
and
cmp
push
dec
pop
lea
dec
inc
movsl
loop
dec
mov
mov
fwait
push
sub
push
push
pop
ljmp
lcall
or
jmp
mov
sahf
cmc
into
adc
adc
adc
dec
and
sub
xlat
test
cltd
je
pop
mov
aad
jge
aam
in
sbb
shr
sbb
jmp
adc
sub
xor
mov
rorl
inc
sub
inc
ljmp
mov
mov
jl
test
adc
mov
hlt
and
fdivl
cmp
jmp
fmulp
push
mov
xchg
cli
push
mov
push
cltd
popa
daa
dec
lock
stc
adc
xor
pushf
cmp
daa
jb
shll
hlt
dec
js
jmp
push
sbb
adcb
lahf
inc
pop
jo
cmpsb
ja
xchg
xchg
cld
repnz
mov
jnp
lret
mov
xchg
in
add
or
push
out
je
push
dec
daa
jnp
in
nop
add
negl
sub
ret
in
imul
jns
xchg
fwait
xlat
rcrb
cmp
out
bound
and
jmp
and
call
add
inc
imul
or
lret
insl
cmp
push
sbb
mov
btc
inc
pusha
xchg
aaa
xor
scas
pop
add
or
adc
subb
xchg
add
test
dec
mov
sbb
lahf
cmp
aas
inc
push
pop
xchg
sbb
push
clc
repz
out
dec
xchg
rcl
add
jp
add
outsl
imul
add
inc
and
insb
scas
inc
cmpsl
inc
adc
call
leave
insb
push
mov
lret
add
pop
push
push
inc
in
outsb
and
jle
adc
movsl
ja
and
cwtl
push
adc
fcoml
mov
push
cli
jnp
out
adc
mov
mov
divb
mov
cli
jp
xchg
outsb
pop
xchg
fstp
test
je
add
pop
sbb
cwtl
mov
clc
test
or
add
fmuls
mov
popa
push
lods
sub
mov
mov
add
sbb
push
mov
mov
test
dec
imul
psraw
xor
jg
mov
dec
arpl
rorb
add
loop
dec
int3
inc
js
out
sti
xor
cmp
and
popf
gs
pop
sbb
sbb
jmpw
pop
aaa
lods
mov
fwait
jle
outsb
mov
sbb
jne
inc
fiadds
adc
cs
repz
or
popa
push
aam
mov
in
imul
mov
and
mov
aaa
mov
iret
mov
and
aas
incl
icebp
jle
insl
stc
in
mov
sub
cmp
adc
lcall
gs
cmp
and
cwtl
push
cmp
lret
or
mov
imul
out
sub
into
repnz
scas
test
mov
push
addr16
mov
movsb
aas
mov
aam
ret
mov
mov
xchg
fistpl
loopne
lods
negl
sub
in
ja
pop
cmp
fprem1
fnstsw
fwait
mov
push
ja
enter
jbe
inc
dec
mov
das
lods
inc
jns
push
lods
xchg
jmp
mov
mov
dec
movsl
push
lea
push
adc
dec
test
cltd
or
add
hlt
call
mov
jns
xchg
and
jne
fistpl
pop
outsl
dec
addr16
push
mov
out
mov
imul
jl
jecxz
mov
dec
fisttpll
divl
or
loop
mov
push
pop
cli
add
insb
pop
divl
pop
sarb
icebp
xchg
aaa
or
adc
mov
aas
movsb
cmp
sub
sub
xchg
loopne
cmp
adc
and
repz
mov
jno
xchg
in
xchg
inc
cltd
movsl
insb
xlat
cld
lret
in
sub
in
addr16
sbb
adc
jnp
mov
movsl
push
dec
fcmovb
shr
adc
insb
shl
sbb
out
sbb
pop
popf
mov
jle
shl
adc
inc
sti
cmp
mov
ja
ficomps
pop
adc
push
mov
lock
cmp
arpl
sbb
mov
fldenv
jmp
cmc
outsl
inc
sbb
rolb
xor
in
lods
jp
mov
push
xor
movl
mov
push
fprem1
mov
decb
push
inc
sti
xor
inc
mov
push
repnz
andb
cli
xor
cmp
loope
and
sti
mov
fwait
subl
mov
test
scas
dec
cmp
lret
mov
mov
adc
subb
loop
fldl
sti
enter
adc
ret
js
scas
mov
xor
mov
adc
lds
data16
sub
out
mov
inc
adc
pop
aas
and
push
sbb
aaa
mulb
xchg
enter
inc
mov
movsb
or
mov
rorb
hlt
mov
pop
call
xchg
cmp
movsl
mov
mov
mov
add
popa
dec
iret
jbe
sbb
pop
jb
mov
in
ljmp
cmp
lods
ret
iret
mov
clc
or
push
cld
lcall
mov
sbb
movsb
add
mov
dec
ret
jp
adc
adc
jo
sti
dec
jae
push
into
aam
adc
xchg
into
add
ret
fdivl
lods
cmc
inc
out
imul
mov
adc
inc
and
mov
inc
dec
cmp
xchg
xchg
jecxz
cmp
fsubs
xchg
flds
mov
icebp
pop
push
dec
pop
popf
mov
or
mov
add
cmp
adc
dec
mov
ffreep
outsl
xor
clc
insb
sti
pop
push
or
push
iret
test
jle
pop
xchg
add
repnz
push
aam
dec
in
sti
dec
testl
js
fwait
mov
jb
cmp
rolb
cmp
adc
lret
xlat
ljmp
xor
movsl
cmp
sbb
mov
rcll
lret
xchg
mov
adc
ret
aad
pop
std
pop
adc
xchg
mov
pop
xchg
and
pop
fidivl
enter
jmp
xchg
rcrl
fisubs
nop
repnz
add
adc
xchg
jbe
out
inc
test
shll
leave
leave
int3
insb
ret
fsubrl
mov
sbb
mov
mov
dec
pop
arpl
icebp
jbe
xchg
das
clc
sub
inc
cwtl
ja
mov
imul
cli
pop
icebp
jae
ss
mov
mov
sub
in
push
cli
and
cmpsb
jnp
das
ljmp
adc
fsubrs
daa
cmc
roll
add
xor
out
lock
loopne
pop
and
loope
jp
fsubl
xchg
gs
xorl
mov
ret
outsl
cmp
jg
insl
sub
jo
shlb
stc
mov
inc
mov
scas
or
push
test
jae
sbb
push
rclb
repz
sbb
sahf
subl
mov
jecxz
out
add
nop
mov
jle
insl
or
ret
test
dec
int3
cwtl
sbb
or
and
jl
sbb
dec
add
ret
mov
aad
out
push
pop
cmp
or
mov
inc
mov
xchg
mov
mov
push
lcall
dec
mov
lret
loop
fiaddl
insb
add
cs
fldt
xchg
dec
inc
adc
ja
imul
xchg
dec
popl
cli
in
inc
ja
xlat
add
insb
nop
dec
jecxz
daa
push
iret
jl
mov
fcmovne
std
insb
gs
aam
sub
popf
mov
dec
outsb
popa
push
sahf
movsb
mov
xor
stos
xor
or
sahf
mov
xlat
das
sbb
or
dec
sbb
xor
js
dec
pop
or
jo
sbb
lret
mov
out
stc
cmp
std
cli
outsl
xchg
jns
mov
jbe
mov
and
cmp
mov
or
pop
push
and
xchg
dec
xchg
push
scas
pop
sub
sti
aam
roll
subb
dec
jno
fstpt
inc
imul
pop
cmp
xlat
in
cmpsl
int3
jp
pop
loop
xor
ljmp
enter
clc
in
mov
mov
push
lcall
fs
arpl
out
cmp
fisubl
sbbb
or
xor
xchg
cmp
sbb
mov
fsts
or
xchg
jge
mov
xchg
loopne
mov
adc
aad
adc
or
test
pushf
pop
cmpl
mov
out
and
stos
arpl
lods
mov
adc
jmp
inc
xchg
rolb
cld
scas
sub
repnz
aas
add
shlb
mov
test
mov
mov
pop
gs
add
out
fs
test
das
mov
sub
sbb
cmp
pop
gs
cmpsb
imul
push
cmp
ss
sbb
sub
inc
enter
mov
cmpsl
fndisi(8087
mov
push
das
inc
jno
jns
push
movsb
and
or
mov
cmp
and
sbb
scas
shlb
or
sbb
lds
jo
push
call
arpl
sub
mov
shr
mov
ficoml
fiaddl
cld
mov
mov
push
jb
sti
dec
pop
sbb
loope
inc
dec
adc
pushf
scas
pop
orl
add
or
push
out
mov
push
test
rcr
fs
pop
xchg
push
inc
mov
pusha
fcomp
lahf
and
test
or
cmp
push
xor
into
cmp
dec
add
push
popa
test
cwtl
inc
push
adc
rorl
imul
sbb
xor
scas
pop
ret
pop
lods
popf
mov
ljmp
clc
mov
adc
aas
shlb
push
test
xlat
in
inc
outsl
xchg
je
add
ss
jge
out
dec
or
sub
dec
data16
test
repnz
lcall
jl
inc
mov
mov
inc
loopne
adc
jnp
sbb
add
cmp
stc
cmp
inc
mov
mov
mov
sub
mov
ficomps
scas
clc
push
dec
ja
xchg
mov
or
push
inc
adc
sbb
push
pop
hlt
sbb
movq
push
add
pop
gs
outsl
das
cmp
cld
pop
int3
mov
repz
xchg
adc
cmp
push
imul
movsl
mov
sbb
imul
sbb
push
dec
je
sub
sarl
fcmove
sbb
es
sahf
or
add
pop
in
jnp
popf
push
sbb
pop
aaa
mov
aad
cmp
loopne
dec
aas
pop
mov
mov
pop
daa
and
dec
jbe
pop
aad
push
int3
adc
rcl
adc
mov
jg
stos
or
dec
push
adc
jae
cmp
xchg
nop
gs
leave
or
push
sbb
loop
in
test
out
adc
cmc
adc
in
and
fisttps
mov
inc
in
jmp
xor
dec
mov
stc
mov
xor
cs
mov
xchg
es
fwait
push
push
cltd
lock
out
add
or
bound
add
add
out
push
push
sub
mov
cmp
mov
cltd
xchg
sahf
add
sti
add
sbb
lods
pop
dec
in
add
test
xchg
adcb
jecxz
cmp
jne
sub
push
adcb
aas
or
mov
into
mov
icebp
hlt
movsb
jp
lahf
in
inc
mov
aad
orb
fidivrl
cmpsb
and
mov
mov
mov
push
xchg
pop
pusha
mov
rcrb
sub
lock
mov
inc
in
movsb
stc
stos
popa
xchg
dec
arpl
daa
xchg
mov
push
je
xchg
test
jge
inc
push
cmp
js
jg
add
jl
adcb
hlt
fucomi
loop
pop
fbld
cltd
cltd
outsl
cltd
hlt
ret
inc
sbb
into
inc
mov
lock
jnp
dec
mov
xor
movsl
adc
push
and
in
jmp
push
push
das
int3
push
pop
xor
loop
ss
push
sub
ja
and
jns
pop
mov
push
push
mov
lret
mov
push
pop
xor
pop
cwtl
aas
test
mov
popa
out
arpl
xchg
mov
lahf
ds
xchg
sbb
adc
incb
out
data16
sbb
mov
mov
pop
mov
pop
add
in
outsl
lds
adcl
jae
jg
add
loopne
mov
mov
xchg
gs
std
sub
mov
xchg
int3
rolb
jne
mov
in
mov
fdivrs
sbb
cmp
in
push
dec
je
scas
repz
cmp
jle
mov
je
jle
ja
aaa
lret
pop
dec
dec
fucomp
sbb
add
aas
xchg
add
jo
in
mov
pop
xor
pop
push
pushf
popf
sub
in
cwtl
mov
mov
fstpt
mov
rol
popf
push
or
mov
aad
negl
lods
je
cmpl
mov
outsl
sahf
add
test
cld
xor
cmpsb
and
jb
adc
inc
std
dec
cmp
dec
addr16
inc
pop
loope
loop
push
xchg
loop
iret
jmp
sub
or
daa
fidivs
rol
dec
scas
pop
pushf
jp
addr16
out
pop
mov
jg
sub
js
cld
out
loop
int3
cmp
push
leave
push
stc
sbb
xchg
mov
cltd
fmuls
dec
call
repnz
jg
push
fbstp
jns
es
rcrl
aam
inc
fstpl
or
jge
adc
jns
lahf
xor
insb
popf
or
jp
pop
mov
and
int
xchg
in
aaa
clc
pop
xor
lods
and
cmp
mov
add
sbbl
mov
addr16
mov
mov
add
in
xor
pop
cli
inc
rorl
adc
mov
aam
jbe
aas
jge
xor
fistpll
sti
xchg
adc
lock
mov
sub
jge
imul
dec
in
mov
xchg
mov
sarb
adc
mov
shll
xchg
cltd
mov
sub
cltd
push
add
jbe
cs
mov
jg
outsl
outsl
jnp
faddl
add
push
xchg
xlat
lods
into
jb
mov
mov
push
add
pop
fwait
ret
stc
lret
aam
in
mov
cmp
test
push
movsl
lock
pop
negb
nop
xchg
sbbl
icebp
or
dec
mov
sub
xchg
int3
adc
sbb
int
imul
fbstp
push
lods
out
popf
jo
test
imul
fistl
hlt
faddl
pop
push
mov
insb
mov
jecxz
leave
leave
mov
mov
adc
pop
dec
pop
mov
repz
push
cmpsl
daa
fldcw
stos
fmulp
dec
adc
push
cmpsl
out
stc
scas
mov
xor
dec
xchg
adc
fdivr
dec
decb
xchg
and
mulb
or
pushl
pop
push
pop
inc
into
dec
lock
mov
lods
pusha
popf
mov
in
xor
ljmp
mov
inc
sub
sub
pop
pop
movsb
adc
xchg
stos
mov
dec
sbb
and
sbb
mov
fs
sbb
popf
mov
outsl
xchg
push
nop
dec
inc
sub
push
push
xchg
clc
mov
mov
mov
adc
adc
dec
push
inc
loopne
xor
stos
mov
pop
insb
push
jns
addl
out
jne
fisubl
lcall
cld
and
das
mov
sbb
inc
dec
pop
ds
jle
or
add
fwait
add
fs
test
jo
and
add
repz
int3
mov
int3
mov
test
xchg
mov
mov
popf
outsl
inc
je
mov
jbe
dec
orl
push
ret
shll
outsb
fistps
jae
decb
mov
addr16
in
mov
aaa
ja
xchg
push
orb
lahf
jbe
xor
xchg
mov
push
xchg
imul
loopne
mov
lret
and
dec
aad
or
je
lret
into
jmp
pop
push
insl
fcmovu
movsb
out
bound
or
sub
stos
add
and
push
out
ja
imul
scas
add
repz
aaa
cli
in
dec
xchg
push
and
xchg
dec
push
inc
or
testb
inc
mov
cmp
les
sub
mov
sti
pop
or
repz
mov
and
cwtl
popa
or
sub
inc
inc
out
daa
lods
pop
xchg
int
add
fsubl
ret
adc
insl
outsl
dec
jne
dec
sbb
adcl
push
repnz
dec
jnp
pop
cltd
sar
xorl
loope
das
sub
cwtl
jb
les
push
loopne
xor
dec
lock
push
pusha
rcr
and
and
jecxz
dec
sub
imul
mov
lret
push
add
push
adc
or
sti
pusha
cmc
push
xchg
xor
push
jno
xchg
push
cwtl
nop
mov
mov
jbe
popa
xchg
in
or
loop
fdivl
push
mov
push
aaa
push
jno
repnz
pop
inc
aas
mov
xor
stos
rolb
out
or
sub
mul
inc
sbb
pusha
mov
and
scas
cmp
cmpsl
jo
jnp
jge
and
cmp
fadd
xchg
pushf
sbb
sbbl
loope
push
xchg
lret
gs
mov
add
ret
jp
stos
sbb
dec
mov
in
sbb
push
popa
jmp
fcmove
scas
testl
pushf
fsubrs
jns
popa
pop
and
xchg
mov
inc
mov
dec
out
push
inc
mov
lds
pop
xchg
inc
sbb
mov
cmp
ds
cwtl
gs
ret
adcl
push
mov
cs
xchg
mov
ficompl
cvtps2pd
pop
cmp
push
or
test
je
fiaddl
jno
leave
call
sar
or
iret
jecxz
jecxz
in
pop
sbb
sub
pop
and
and
sub
mov
xor
jbe
sub
push
aam
sub
stos
mov
leave
add
pushf
sbb
pop
sahf
jns
push
dec
fs
inc
lods
cltd
out
es
jae
stos
div
mov
sbb
mov
sub
mov
icebp
add
rcll
aam
xor
mov
xchg
mov
push
add
addr16
sahf
push
and
mov
adc
ret
adc
jg
movsb
xor
das
and
xchg
lea
movl
scas
adc
fwait
popf
aad
adcb
fldenv
loop
std
leave
stos
push
dec
outsl
sbb
xchg
sbb
cmp
outsl
cmp
cmp
ret
pop
inc
ljmp
jl
test
pop
mov
mov
nop
daa
xor
sub
les
testb
mov
adc
push
push
lcall
xchg
icebp
xchg
shrl
shrb
aad
aad
mov
sbb
das
imul
push
mov
cmp
outsl
mov
arpl
inc
xchg
outsl
out
and
mov
ror
sub
pop
into
and
outsl
push
sbb
orb
dec
xchg
in
push
insb
mov
imul
fidivrl
fdivl
aaa
mov
inc
arpl
jns
mov
nop
ret
push
xor
jmp
mov
dec
xchg
out
push
out
adc
lods
mov
add
push
dec
push
dec
outsl
cmpsl
add
lods
pop
movsb
pop
mov
movsb
sub
scas
push
shl
pop
fsts
insb
imul
mov
mov
xchg
mov
pxor
jns
outsb
dec
mov
sbb
add
mov
sbb
pop
frstor
lcall
dec
lahf
in
and
repz
fs
stos
mov
inc
stos
cmp
sbb
and
bound
cld
jno
push
notb
sbb
cmp
outsb
push
sbb
std
sub
ss
decl
xorl
iret
in
or
or
push
push
ss
jle
xchg
push
mov
jmp
sub
scas
int3
push
ror
pop
dec
mov
sub
fwait
inc
mov
adc
shr
add
xor
sbb
insb
pop
test
push
sbb
add
push
imul
bound
dec
ss
mov
sbb
mov
mov
or
adc
lock
fsubrl
outsb
daa
push
leave
in
stos
pop
arpl
cld
push
js
aas
aad
pop
mov
jl
mul
cmpsl
mov
xorl
aaa
pop
inc
into
xchg
xchg
imul
icebp
fdivrl
cmp
in
sbb
jno
bound
push
adc
insb
int
xchg
adc
dec
and
cltd
aam
out
mov
jmp
push
xor
movl
inc
inc
push
notl
mov
sbb
jo
dec
dec
rcrl
dec
push
mov
cmp
pop
xor
xchg
aad
lock
xchg
cltd
ret
hlt
push
pop
fwait
cld
dec
mov
pop
add
sbb
mov
pop
xchg
inc
ljmp
std
push
mov
jo
sbb
jl
xchg
push
leave
clc
xchg
jns
lcall
jae
xor
jl
cmp
jge
aad
lret
subb
aaa
idiv
test
cmpl
shl
lods
pushf
ss
inc
pop
js
mov
jo
jmp
xlat
xchg
repnz
mov
inc
test
aas
jmp
pop
repnz
std
movsb
xchg
cwtl
mov
in
shll
nop
imul
loop
mov
cmp
or
mov
mov
mov
out
pop
out
push
xor
rorl
xor
lret
das
cmp
idivb
cmc
sbb
dec
bnd
and
sub
push
test
sbb
cmc
or
mov
scas
mov
lods
pop
jne
push
jle
call
test
xor
and
aad
mov
ja
in
jae
scas
pop
jge
add
mov
ret
out
lods
xor
cmpsb
mov
sbb
jmp
test
pop
and
push
pop
hlt
clc
shll
push
jbe
xchg
scas
in
shll
into
mov
lahf
jb
push
sbb
js
repnz
in
repnz
test
lds
cld
xchg
sahf
je
sub
mov
call
ljmp
mov
roll
sbb
or
sub
add
insl
jbe
pop
dec
insl
pop
lret
mov
xor
fstl
aad
movsl
cwtl
jle
adc
jl
add
mov
call
dec
shlb
mov
mov
popa
cld
pop
or
adc
call
int3
test
aad
mov
aaa
push
lods
jb
sbb
pop
mov
adc
fistps
mov
mov
int3
xchg
mov
push
leave
rcrl
imul
pushf
pusha
sbb
test
icebp
sub
cmc
jbe
add
pop
mov
aaa
pushf
enter
into
mov
aam
addb
aaa
or
xchg
dec
shlb
add
aam
adc
add
push
add
imul
enter
jl
cltd
cmp
mov
sahf
mov
out
shlb
mov
out
out
cmp
xchg
int
add
mov
lahf
xor
icebp
fcmovbe
rcll
add
lret
orb
mov
pop
sbb
clc
dec
test
adc
sbb
rcl
xchg
add
loope
insb
sub
aad
incl
lahf
insl
add
jp
ret
loop
test
popa
xor
imul
add
outsl
or
mov
repnz
invd
jmp
cmp
sti
sbb
ljmp
jno
repnz
repnz
cmp
repz
cmp
mov
aad
scas
and
cld
and
addr16
and
leave
jle
out
in
mov
out
or
fwait
cmp
div
into
adc
out
mov
sbb
dec
jecxz
mov
fdivrs
in
jmp
roll
das
fistpl
ficoms
sub
les
pop
push
jno
jae
push
jmp
cmp
sub
xchg
xchg
dec
data16
mov
in
bound
jae
arpl
or
jle
mov
ret
out
filds
into
test
data16
pop
rcll
mov
mov
imul
enter
in
nop
or
outsb
jp
fldcw
and
adcl
pop
fcomps
push
mov
in
std
jmp
stc
push
push
data16
hlt
in
mov
inc
aaa
sub
mov
repnz
mov
pop
ret
stos
mov
call
xor
xchg
or
cmp
mov
adc
pusha
mov
push
jmp
cmc
push
jecxz
pop
push
hlt
push
sbb
enter
in
aas
mov
adc
pop
loop
or
daa
adc
mov
ja
arpl
xor
ljmp
adcb
dec
int
pop
iret
scas
or
test
test
push
sub
cwtl
fs
xchg
dec
pop
mov
dec
sbb
cli
dec
das
mov
js
mov
dec
push
and
push
lods
xchg
add
cmp
cs
dec
pop
sbb
shll
push
mov
imulb
add
jno
dec
push
jmp
xchg
lods
mov
nop
xchg
shlb
loopne
test
inc
push
xor
sbb
sub
lock
mov
inc
ret
addr16
stc
mov
rorb
dec
nop
mov
xor
jo
ds
es
dec
inc
inc
notb
fmuls
xor
xchg
cmpsb
bound
dec
inc
or
insl
orb
sub
and
into
or
int
jbe
je
pop
and
dec
or
mov
movsl
in
lds
mov
dec
fsubs
adc
enter
xchg
fistl
dec
xorl
inc
loopne
ds
ds
sub
jle
mov
and
mov
movsb
aas
fs
je
std
cld
jno
js
lret
sub
mov
rcl
nop
xchg
fsubrl
aas
nop
inc
add
add
into
sar
shlb
subb
cld
inc
pop
stc
pop
mov
xor
cmp
cmc
in
pop
xchg
add
jns
iret
rclb
les
push
or
dec
push
rolb
xor
les
pop
outsl
push
push
pop
scas
ret
and
mov
cmpsl
sub
ja
fs
push
int3
sub
loope
bound
adc
rcl
lds
sbb
dec
arpl
imul
xor
or
fmull
lds
daa
push
fdivl
rorl
cmp
ret
dec
pop
pushf
and
cmp
int3
popf
xchg
xchg
ret
mov
sbb
jle
mov
pop
adc
dec
neg
add
fisttps
push
mov
xor
or
adc
inc
scas
aad
hlt
scas
sbbl
xchg
mov
sar
jmp
inc
lea
sub
or
mov
in
gs
or
sarl
lods
shll
loop
jg
fucomp
lret
push
pusha
cmpsb
jp
xor
andl
pusha
xchg
adc
fistps
xor
repnz
jp
aam
ret
xor
ret
loop
push
shrb
xor
inc
arpl
push
inc
xlat
inc
je
repz
iret
and
fsts
stos
push
sbb
push
loope
insb
cwtl
lret
out
test
sbb
push
push
rcl
inc
fldenv
jb
sub
add
push
fnstenv
sti
inc
stos
pop
fcmovne
repnz
mov
add
jmp
dec
and
ret
sti
push
movsl
jmp
lret
fiadds
inc
imul
inc
roll
das
cmpsb
mov
popf
subl
pop
cwtl
call
rorb
xchg
sbb
sbb
push
out
sub
icebp
mov
bound
or
push
ret
mov
xchg
js
dec
mov
and
pop
sub
mov
lcall
loop
add
inc
faddl
mov
popa
pop
aad
fisubrl
repnz
fnstenv
or
ficoml
xor
movsl
bound
icebp
mov
daa
fimull
mov
adc
test
jp
push
test
sbb
aaa
cmc
fs
iret
test
ficompl
and
or
inc
and
push
aaa
add
aam
popa
pop
adc
pop
mov
outsb
xor
nop
push
cmp
mov
mov
pushf
xor
in
out
sub
jge
nop
jns
cmp
jo
mov
jno
xor
xorl
mov
rolb
dec
cmc
lods
les
push
sub
or
adc
movsl
push
jae
test
adc
faddl
pop
push
mov
nop
dec
insl
or
pop
pmuludq
push
imul
mov
xchg
repnz
loopne
inc
in
mov
push
pop
sub
adc
xor
jnp
in
aad
loopne
aam
dec
xor
aad
scas
xchg
jg
lods
int
dec
outsb
xchg
add
hlt
test
dec
jle
xor
mov
cmpsl
inc
outsb
das
ss
lret
xor
cmp
movsb
adc
popa
push
push
fists
leave
push
sub
aas
enter
adc
ror
out
mov
adcl
icebp
mov
push
loopne,pn
push
gs
out
sub
das
and
adc
sub
movsb
inc
inc
push
push
sbb
inc
popf
sti
test
aas
nop
fbstp
imul
popf
inc
cmp
lock
mov
jo
les
add
sub
aam
pushf
xchg
inc
xlat
and
ds
mov
lods
pop
mov
adc
clc
or
inc
and
jmp
push
dec
stos
inc
icebp
sahf
pop
test
mov
xlat
mov
ss
gs
pop
addl
adc
into
and
pop
scas
fdivrl
sbb
mov
xchg
jo
fstpl
push
jne
inc
loop
pop
scas
in
inc
pop
test
push
mov
jp
rolb
aas
arpl
jns
aam
daa
lds
mov
push
ret
fldt
filds
sar
scas
dec
mov
and
daa
jne
das
pop
push
imul
fwait
mov
xchg
cmpsb
xchg
test
shl
ljmp
clc
push
or
int3
cmc
ja
popa
xor
and
jecxz
daa
jb
and
push
popf
aam
fcoml
and
or
in
stc
int
sbb
xchg
mov
sub
mov
mov
cmp
das
scas
cli
js
xor
jo
xchg
xchg
add
mov
add
jle
into
sahf
cmp
xchg
xchg
jecxz
std
out
sbb
fcoms
scas
add
fnsave
lock
shll
and
pop
sbb
stos
popf
xchg
and
scas
xchg
pop
fdivl
shlb
lahf
fimuls
imul
popf
lret
sbb
xor
es
fnstcw
insl
test
cmc
fsts
lock
jp
adc
xor
imul
imulb
aaa
cmp
adcb
push
dec
out
fldenv
cmp
dec
test
inc
test
enter
pop
xchg
push
add
rcll
add
xor
imul
mov
xchg
std
dec
bound
pop
es
push
mov
pop
das
out
push
std
imul
fxch
pop
mov
sub
call
lds
cmp
ljmp
fimuls
sbb
stos
cmp
pusha
fucomi
cmp
mov
repz
or
and
aaa
cmp
push
push
shl
shrl
pop
push
iret
bound
popf
push
inc
in
push
and
mov
frstor
mov
xor
jg
xchg
and
and
outsl
jbe
cld
rcl
mov
aaa
lea
adc
ds
bound
jne
sub
call
js
into
cli
cs
inc
out
add
jno
sub
xor
test
or
mov
cmp
dec
das
fnstenv
add
repnz
aas
data16
ds
gs
insb
jno
or
pop
es
push
dec
xor
push
jp,pn
pop
xchg
mov
out
add
mov
jl
add
cmpl
or
les
jle
stc
jb
aad
inc
adc
cmc
cmp
in
lret
ljmp
sub
and
mov
ss
or
push
jp
hlt
jmp
cmp
fisubs
loop
lods
outsl
add
insl
mov
add
repz
xchg
cmp
call
sbb
inc
mov
inc
lcall
loop
push
jnp
rorb
adc
in
cmc
add
daa
sbb
cmp
adc
mov
add
outsl
inc
sub
ljmp
lods
jno
mov
cli
or
mov
xchg
fcmovnu
stc
fdivrs
jecxz
dec
dec
cmpsb
mov
xchg
dec
arpl
pop
int
iret
mov
sub
pop
sbb
loope
or
cmp
xchg
ljmp
mov
stc
adc
jae
arpl
aad
xchg
sub
and
xlat
mov
jbe
arpl
push
mov
or
xor
loop
dec
cltd
inc
or
sub
rorb
shlb
out
testl
out
pop
sbb
pop
xor
int3
sub
scas
adc
loop
sub
sbb
call
faddl
mov
mov
mov
adc
ret
jecxz
dec
sub
fnsave
sbb
sub
icebp
adc
cmp
shl
xchg
mov
xor
jns
push
int3
fiaddl
adc
insb
rcrl
das
jnp
jl
into
nop
xchg
and
sub
fiaddl
xchg
pop
mov
jecxz
mov
daa
sahf
mov
movsl
ljmp
hlt
pop
lret
sahf
fiaddl
inc
fbld
xchg
push
mov
loop
stc
mov
sbb
add
aaa
mov
pop
dec
and
mov
iret
mov
fisubrs
popa
dec
xor
push
push
call
push
xchg
and
mov
into
dec
je
jbe
lahf
testb
hlt
hlt
cmpsl
loope
mov
pop
gs
rorl
jg
sub
ret
cmp
stc
jns
mov
cmp
out
out
sub
leave
jp
outsl
mov
add
psubw
pop
xchg
pop
std
loope
push
aas
mov
jo
sbb
es
dec
test
sti
mov
cwtl
inc
sub
inc
cmp
movsb
lods
imul
in
test
stos
jae
or
or
clc
enter
nop
push
mov
add
xchg
push
ret
enter
cmp
ja
xlat
xor
xor
pop
ja
repnz
outsl
loopne
test
popa
stc
sub
adc
mov
adc
cmp
fidivrs
scas
sub
mov
xor
mov
sahf
push
in
mov
and
jecxz
dec
mov
dec
dec
cmp
loop
pop
dec
inc
das
adc
cwtl
int
mov
cli
test
mov
aas
test
clc
xor
cmp
cld
sbb
fcoml
fisubs
outsb
inc
insl
cs
movsb
movb
adc
insl
sbb
fisubrs
nop
imul
mov
iret
mov
cld
insb
inc
aad
fildll
cld
fwait
test
mov
sbb
push
cltd
fnstenv
int3
adc
jnp
add
xchg
mov
les
lods
mov
sub
lcall
xchg
pop
or
fnstenv
in
ret
loopne
movsl
mov
pusha
scas
mov
cmpsl
enter
lret
pop
scas
ret
mov
adc
xor
xor
mov
fiaddl
sub
push
cmp
std
scas
pop
push
std
test
orl
sub
pop
and
jg
lret
xor
loop
cmpsb
xchg
inc
xorb
xorb
fidivs
adc
mov
cwtl
int3
adc
lret
or
out
push
fstps
jo
push
mov
int3
jg
jecxz
jne
cmp
pop
or
adc
sbb
test
imul
sbb
pop
imul
cli
xor
inc
lret
xchg
sbb
push
cli
dec
int3
loop
mov
fidivrl
pop
ss
push
jl
out
pop
ljmp
xchg
imul
mov
lcall
sar
mov
sahf
pop
push
xchg
and
adc
add
jle
aad
in
or
cmp
sub
mov
xor
mov
sub
push
mov
inc
sub
lods
dec
cmpsl
and
jmp
xor
xor
andb
xchg
movsb
rolb
pop
cmp
vpcmov
pop
scas
pop
lret
bound
shrb
mov
push
push
fs
decl
hlt
cwtl
and
es
std
stc
daa
lret
xchg
push
add
scas
rol
lret
out
adc
lods
cmp
pushf
jb
lea
daa
fcmovnu
ljmp
outsl
hlt
out
shl
push
cmp
hlt
nop
push
je
rcl
add
xor
dec
int3
inc
mov
popa
test
outsl
mov
cmc
mov
pop
xchg
or
sub
addb
inc
call
call
lcall
filds
fsubs
out
aas
jl
xchg
es
js
insb
lahf
jae
and
add
adc
inc
inc
lds
xchg
xchg
mov
data16
mov
mov
aad
push
jnp
rolb
mov
adc
inc
or
cltd
les
and
mov
je
xchg
cwtl
mov
fldenv
nop
mov
lods
popa
scas
pusha
insl
jmp
xchg
popa
stos
cli
icebp
mov
and
sub
fldl
inc
cwtl
xor
mov
int3
test
sub
mov
jbe
push
in
jo
loop
cmp
mov
mov
and
repnz
mov
stos
ret
daa
mov
daa
xchg
cmc
imul
mov
push
hlt
and
mov
push
lret
pop
mov
and
fs
and
stos
sbb
jbe
jge
dec
jp
xor
mov
jp
jns
xchg
jbe
add
cmp
add
jl
in
sub
dec
cmc
pop
les
jge
jnp
int3
mov
in
mov
mov
inc
cmp
add
pop
sub
jno
add
jp
lods
mov
je
add
sub
xchg
add
dec
bound
fstpl
dec
mov
push
push
xchg
pop
test
aaa
add
in
push
jmp
xchg
loopne
into
insl
ja
push
in
pop
dec
jecxz
and
push
sub
and
sbb
pop
shll
xchg
scas
mov
adc
mov
jno
daa
xor
das
inc
mov
popf
dec
mov
int
roll
push
add
add
sub
sub
xor
shll
int3
jge
dec
sbb
sti
mov
jne
inc
and
mov
hlt
and
stos
jmp
lret
add
cmp
cmp
stos
mov
mov
adc
btr
mov
push
adc
leave
mov
mov
pop
push
cmp
jecxz
fildll
pop
xlat
xchg
mov
xchg
cmp
dec
jmp
fldcw
incl
xchg
xchg
add
fimull
cltd
pop
sub
hlt
jge
cmpsb
das
stc
int3
lahf
jae
imulb
xchg
leave
int
and
jb
pop
arpl
rcl
icebp
sbb
inc
fistps
std
cmc
insb
mov
push
mov
jg
popf
lds
andb
addl
fists
inc
adc
push
pop
mov
imul
mov
xchg
loopw
ss
pop
sbb
xchg
js
cmp
scas
aas
or
sub
adc
mov
addb
rclb
xchg
xor
and
add
addr16
mov
data16
icebp
test
inc
xor
push
das
fwait
sub
pop
xor
mov
pop
mov
mov
imulb
pop
pop
adc
in
sbb
lret
aaa
call
mov
insl
dec
adc
cmc
jo
push
jg
testl
sbb
pop
mov
jne
cli
std
test
adc
push
or
ja
sub
sub
mov
cld
adc
ja
std
push
push
xchg
pop
mov
jo
sti
sbb
pop
jmp
sub
andl
shl
mov
cmp
push
sbb
dec
dec
fwait
mov
out
cmpsl
inc
mov
push
xor
xor
negl
cmp
cmp
xchg
add
ds
xor
xchg
add
call
push
jle
inc
lods
cli
adc
xchg
std
or
aas
das
iret
cmp
mov
loopne
mov
mov
fdivrp
pop
mov
adc
test
ret
shr
or
inc
mov
and
sbb
loop
aam
mov
les
aam
sarl
gs
je
mov
leave
es
popa
cmp
movsl
jp
daa
icebp
clc
fcomps
imul
cwtl
pop
push
xlat
adc
inc
pop
mov
xchg
xor
fwait
or
push
xchg
sub
in
mov
mov
cpuid
insb
xchg
push
and
into
pop
dec
and
and
xor
add
mov
pop
sub
out
mov
movsb
lret
add
loope
mov
pop
dec
adc
cmpb
cwtl
popf
dec
xchg
adc
loope
test
pusha
xchg
testb
mov
jns
fcoml
iret
frstor
jae
push
push
mov
pop
xchg
fwait
popf
int3
mov
mov
test
push
pop
imul
and
or
aas
or
sbb
adc
arpl
dec
scas
cmp
out
sti
lret
movsl
or
stos
stc
or
sub
and
jge
hlt
inc
out
sbb
enter
aad
iret
es
mov
lcall
data16
push
mov
popa
cmp
mov
lret
mov
popa
jecxz
je
fistl
cwtl
lods
in
mov
mov
and
sub
pop
loopne
and
or
or
jle
cwtl
ljmp
pop
push
cmp
je
test
xchg
in
dec
subl
ds
jecxz
jae
test
out
pop
scas
or
dec
push
inc
or
push
push
jge
jle
in
mov
movsb
or
xchg
mov
enter
loopne
push
adc
rcrl
sbb
movsb
inc
pand
mov
mov
or
testb
mov
sbb
dec
lock
mov
mov
jns
shlb
jmp
int
in
inc
repz
mov
add
inc
pushl
aas
mov
out
jo
push
push
daa
int3
cmp
jnp
aas
add
mov
lea
sarb
insl
ja
aas
jns
pop
int
repz
cmp
fnstcw
mov
push
mov
les
js
sbb
cmc
mov
outsl
mov
push
adc
insl
or
lret
lock
sub
out
lods
cmp
sbb
fisubs
into
pop
sub
inc
sarl
xchg
mov
je
fadds
or
das
out
xor
add
mov
adc
hlt
bound
adc
sbb
pop
sbb
mov
pop
pop
push
int
jno
cld
inc
sbbl
sarb
leave
cwtl
clc
pop
dec
shll
in
cmc
or
les
lcall
pop
adc
fnstenv
xchg
push
and
push
jmp
into
dec
leave
scas
add
je
and
ss
jno
xchg
mov
xchg
push
mov
push
loope
push
cmp
xchg
dec
test
insb
leave
insb
ds
push
leave
addr16
mov
jne
push
mov
and
and
cltd
emms
add
out
pop
lcall
lds
jnp
xchg
xlat
push
cmpsb
and
and
mov
xchg
lret
in
mov
add
pop
test
daa
loopne
inc
test
push
cmpsb
inc
mov
jb
sbb
jno
aam
sbb
hlt
rolb
aam
loopne
fwait
mov
sahf
mov
leave
pop
int
test
add
cmovne
cmpsl
push
nop
imul
pushf
mov
sahf
imul
push
sahf
stc
mov
call
dec
movb
fisubs
sahf
push
xlat
rcrl
pop
push
aas
or
xor
in
test
adc
mov
inc
mov
push
jb
test
scas
fisubl
sub
cmpsb
push
and
xor
popf
into
ret
add
cmp
xor
cmp
enter
adc
mov
icebp
mov
jge
adc
shlb
mov
ret
subl
addb
adc
mov
rcll
push
mov
insl
popa
and
in
aas
jno
das
add
mov
and
sbb
sub
imul
mov
movsb
xor
inc
sbb
xchg
mov
cmp
lahf
mov
inc
push
dec
add
adc
jae
divl
xchg
or
loope
or
test
xchg
mov
xchg
out
sub
sbb
mov
mov
or
add
mov
std
or
or
outsl
dec
xlat
es
mov
pusha
cmp
mov
jle
int3
dec
call
lcall
data16
decl
mov
jbe
and
xor
jmp
cmp
sbb
int
pop
cmp
das
pop
add
jl
int3
dec
fldt
fcmovnu
xchg
mov
xchg
inc
pop
pop
and
sti
insb
ja
jmp
inc
pop
fsts
jnp
addr16
xor
sbb
popa
in
hlt
outsb
cmp
sahf
daa
mov
fdivrl
enter
shrb
xchg
mov
mov
jp
cltd
push
add
lock
out
mov
and
mov
cmp
mov
jl
lret
jbe
add
fnstenv
adc
lret
inc
ret
les
dec
bnd
jnp
pop
movsl
pop
imul
addb
xchg
jbe
in
shrl
lahf
or
iret
faddl
inc
sbb
mov
out
shrb
sub
push
mov
mov
test
xchg
int3
add
pop
lret
in
push
cmp
pop
push
sbb
mov
test
pop
or
ja
data16
sbb
sbb
sti
adc
fimull
leave
pop
dec
scas
push
fsubrl
stos
fildl
xchg
sbb
mov
mov
nop
lock
mov
xlat
xlat
xchg
pop
das
adc
push
popf
push
js
pop
int3
xor
aad
cmpsl
les
lock
mov
stos
pop
lahf
movsl
push
inc
fisttpll
add
xor
xor
into
mov
iret
incb
add
sub
dec
iret
push
in
cmp
cli
outsb
outsb
repz
sub
mov
pop
mov
pusha
mov
push
out
jne
std
les
jnp
imul
jno
cwtl
sub
addr16
subl
add
sbb
sub
xchg
shll
push
out
push
add
lret
cmpsl
aaa
mov
adc
popa
dec
push
repz
pop
testl
cmc
mov
sub
jns
cmp
sub
movsb
sbb
repnz
sarb
psllq
mov
dec
adc
ja
daa
insl
pop
jns
xlat
push
mov
ficompl
adc
loopne
adc
fwait
push
in
ss
dec
adc
or
bound
pop
jbe
dec
nop
cwtl
add
mov
and
addl
pop
fisubs
xor
es
xor
aaa
sub
cmp
cs
inc
push
repz
lcall
or
daa
push
test
cmp
mov
mov
mov
inc
mov
push
mov
cmpb
or
das
mov
xchg
cmp
sub
add
jle
ror
outsl
fidivs
xlat
popf
push
cld
lahf
insb
cmp
jbe
fwait
daa
repz
mov
push
hlt
std
cmp
and
popa
or
sbb
sti
lock
mov
push
inc
cmpl
or
fsubrs
mov
xchg
fsubl
fmull
out
cmc
fnsave
sub
popa
or
std
inc
pop
push
cmp
push
xor
repnz
ja
sbb
imul
ljmp
mull
scas
stos
ret
jbe
mov
add
mov
cwtl
sub
stos
movsl
aam
cmpsl
dec
aas
cli
into
cmp
int
and
jne
in
pop
shrb
shrl
push
inc
or
and
shlb
mov
aam
mov
fwait
ds
cmp
cmp
aam
dec
add
push
sub
sub
leave
sbb
std
push
mov
lret
and
andl
sub
lea
lret
add
add
call
cli
repz
repnz
pushf
ljmp
test
mov
scas
ja
and
imul
mov
subl
mov
pusha
adc
sbb
push
xchg
or
sbb
movsb
adc
and
push
pop
dec
inc
outsb
push
dec
fcmovnb
lea
push
outsl
fildl
xchg
and
jl
cmp
nop
mov
sbb
stc
xchg
xor
in
push
pushf
sub
and
rclb
mov
push
fiaddl
std
jl
arpl
mov
lds
mov
push
sarl
pop
add
xchg
and
ret
cmp
mov
aas
mov
fnop
mov
mov
shrl
dec
shrb
mov
arpl
dec
out
cs
pushf
and
sub
stos
test
push
mov
lcall
fdivrl
mov
out
or
sub
jne
aaa
inc
adc
inc
mov
pop
pop
popa
es
ret
jg
stos
mov
std
ret
fdivl
bound
dec
gs
push
mov
sbb
movsl
arpl
cwtl
sub
cwtl
xor
jnp
inc
mov
aam
pop
out
cwtl
or
std
adc
sbb
sbb
xor
cli
pop
lock
fsubrl
aam
test
or
pop
lods
out
sbb
test
ss
mov
js
les
or
lret
and
imul
push
repz
lahf
xchg
insl
popf
daa
mov
lea
sub
stos
and
pusha
jne
inc
fistpll
cmp
dec
lahf
icebp
inc
in
cs
jae
sarl
pop
lret
or
pop
mov
arpl
imul
and
imul
lock
pop
mov
repz
sarl
mov
mov
andb
lret
arpl
bound
mov
xchg
mov
inc
out
imul
out
inc
aad
jge
das
outsl
sbb
pusha
pop
xor
push
pop
jmp
inc
xor
pop
mov
or
fidivrl
dec
mov
adc
fbstp
push
sahf
sbb
mov
scas
adc
movsb
adc
or
push
int3
or
sti
adc
int3
push
dec
pop
scas
imul
cmpsb
sbbl
mov
imul
ljmp
xchg
pop
in
lds
mov
mov
aas
pusha
cli
sbb
or
mov
and
adc
hlt
pop
pushf
mov
sbb
ret
stos
mov
loop
hlt
fistpll
and
add
inc
adc
std
xchg
int
pop
pusha
jnp
add
jo
fstl
sbb
cld
mov
pusha
aaa
and
adc
fiadds
mov
pop
movsb
sbb
jae
xchg
repz
mov
fs
fadd
xorw
aaa
pop
dec
subb
je
es
ret
test
mov
sub
xchg
pusha
mov
insl
push
cli
pop
notl
mov
imul
femms
adc
subb
out
and
pop
shrl
and
xchg
cmp
lret
pop
mov
movsl
sbb
add
mov
inc
sbb
pop
push
lret
les
jo
call
adc
xchg
outsb
add
fcomi
stc
push
sub
daa
repnz
xor
mov
mov
addl
addr16
xchg
xchg
rolb
pop
sbb
fisttpl
call
inc
or
lock
aas
cmc
nop
ds
insl
lea
sbb
imul
or
and
outsl
dec
mov
sbb
sbb
and
dec
fdivs
mov
sarb
adc
insb
jecxz
mov
dec
cmp
fs
sbb
xchg
jmp
popa
rorl
imul
lcall
pop
mov
bound
sbb
repz
jg
sub
and
push
mov
imul
fisubs
xor
push
pop
pop
inc
pop
pop
jecxz
or
dec
and
ds
push
pop
stos
pusha
fbld
repz
fwait
mov
jl
pop
popf
jb
loope
inc
scas
lret
or
je
inc
xchg
adc
push
ss
pop
dec
scas
loopne
das
mov
push
cmp
shlb
xor
mov
or
push
stos
adc
outsl
cltd
dec
mov
rcll
push
and
movsb
push
cld
mov
inc
orb
int
inc
mov
xor
pop
fstl
shlb
jl
das
dec
mov
psrad
pushf
lret
bound
xchg
dec
enter
data16
in
dec
push
fwait
sbb
pop
add
or
xchg
aad
pop
sbb
or
rorb
adc
and
adc
and
add
aaa
and
lods
loope
jns
add
mov
cmp
daa
push
jg
push
cmc
stc
xchg
mov
jecxz
inc
in
push
into
sbb
adc
pop
ficomps
xor
je
cli
push
mov
ret
pop
andb
sbb
jmp
and
xchg
or
pop
xor
pop
test
inc
out
xor
movsb
fistpll
or
jg
xchg
out
popf
filds
mov
dec
iret
imul
je
iret
ja
ret
xor
es
inc
addb
pop
outsl
popf
mov
ljmp
dec
inc
rcl
xor
fistpll
dec
clc
push
dec
sbb
sarb
and
add
sti
loopne
bound
andb
hlt
sub
cli
jl
fiaddl
movsl
mov
adc
cmp
leave
xchg
cwtl
lahf
adc
scas
cmp
dec
dec
xor
mov
or
int3
sbb
jne
inc
mov
pop
pop
dec
ljmp
loope
push
mov
mov
scas
out
adc
push
loop
loop
mov
jmp
jbe
xor
mov
and
or
add
cmp
stos
aam
sub
dec
sbb
xor
insb
mov
aam
mov
scas
and
fimuls
push
xchg
or
dec
lret
call
scas
push
xchg
pop
or
in
inc
repz
sbb
sbb
out
jmp
inc
cs
popf
and
push
repz
mov
push
or
cmpsb
ds
jge
divl
outsb
lret
int3
mov
aam
mov
add
jno
mov
mov
add
in
out
fidivl
repnz
int3
mov
add
jle
mov
dec
mov
add
inc
mov
jno
cmpsb
in
outsl
ret
sti
sbb
ret
jbe
in
sub
or
mov
push
mov
lock
iret
xor
pop
enter
sub
ljmp
int
xlat
int
sub
push
add
mov
pop
sti
or
popf
mov
adc
xchg
incl
das
fs
es
cmc
push
and
repnz
aad
cwtl
inc
testl
and
mov
pop
aad
push
rcrb
pop
add
ja
int
in
push
repz
movsb
mov
lcall
cmp
adc
jecxz
jge
lret
out
xchg
jnp
fimull
dec
lods
jg
sbb
lods
call
cmp
cwtl
jnp
out
xchg
call
sbb
in
mov
pop
andb
jp
jp
nop
mov
loopne
mov
decl
mov
dec
and
push
sti
movsb
add
cmp
repz
lock
xorl
movsb
mov
jle
stos
flds
adc
dec
mov
sbb
sahf
dec
pop
pop
dec
fiadds
loopne
int3
ret
aam
xchg
mov
xchg
push
in
lcall
out
ret
sbb
dec
dec
stc
xchg
pop
mov
cmpxchg
or
jno
inc
jno
pop
cwtl
scas
push
sbb
test
imul
cmp
pop
inc
and
loopne
sar
mov
lods
xor
dec
cmpsb
fidivrs
leave
adc
repnz
push
cli
loopne
je
adc
movsl
addl
mov
stos
sub
popa
cmc
cmp
lcall
push
xor
mov
call
in
dec
stc
add
aad
pusha
or
mov
mov
and
jns
idivl
xchg
cmp
dec
mov
sarl
sub
js
inc
jge
xchg
mov
js
cli
cld
ljmp
jns
mov
xchg
test
xlat
sub
mov
vpcmpeqb
xor
cmc
int
jnp
pop
gs
pop
fstpl
pop
xchg
mov
mov
push
lret
jg
mov
mov
inc
push
sub
and
adcl
fs
loop
inc
dec
mov
and
add
xchg
dec
bound
and
dec
cltd
fnsave
sbbb
mov
adc
xor
sub
mov
mov
insl
out
cltd
int3
mov
ja
jb
sbb
shrb
fimuls
push
xchg
sub
pop
mov
xchg
je
sbb
or
lcall
dec
test
mov
scas
mov
mov
mov
jmpw
inc
sub
dec
enter
outsl
mov
rorb
sub
jb
cmp
sbb
leave
es
repz
jo
add
loopne
in
arpl
fdivrl
cwtl
and
repz
add
dec
xor
movsb
je
scas
gs
stc
adc
data16
inc
pop
lock
xor
pusha
jge
decb
sbb
cmp
jbe
sbb
rcrl
dec
mov
and
bound
dec
stc
in
jnp
inc
and
nop
andl
out
or
xchg
sbb
test
ret
lods
int
out
fdivrl
sub
jmp
test
jg
data16
mov
dec
sbb
sbb
push
jecxz
and
pusha
mov
adc
jne
std
push
mov
xchg
adc
xor
aam
adc
dec
fistpl
xor
xchg
not
sub
mov
repnz
aas
hlt
das
jnp
cmpsb
fadd
scas
adc
adc
loop
popf
jae
pusha
bnd
sub
xchg
cmc
into
push
mov
cs
sbb
repnz
es
push
sub
mov
cmp
fwait
sbb
jmp
in
sahf
sub
iret
mov
das
arpl
and
aaa
cmc
test
arpl
mov
xchg
stos
dec
mov
lcall
jae
pop
cmp
call
cli
dec
push
add
xor
in
mov
jo
sti
popf
xchg
sarl
cli
in
pop
ds
adc
into
pop
jno
sub
adc
sub
sbb
pop
xchg
lea
mov
pop
mov
in
insl
pop
fcoml
repz
mov
dec
dec
lcall
add
lret
jb
sub
pop
sub
sbb
das
fimull
aas
enter
je
stos
jmp
cld
or
sbb
adc
mov
mov
rorb
clc
les
xchg
pop
scas
lods
test
fisubl
ljmp
mov
jb
xchg
leave
orb
vmovapd
mov
ror
clc
icebp
cld
sub
aas
mov
enter
lahf
jb,pn
daa
lods
loope
ljmp
inc
adc
js
xchg
js
mov
cmp
ja
add
inc
out
push
clc
inc
lods
dec
aad
hlt
scas
add
std
add
jo
or
data16
inc
mov
pop
lods
out
push
ss
sub
test
jbe
sbb
dec
adc
sub
mov
nop
mov
loopne
pop
insb
stos
mov
or
jne
adc
mulb
imul
jmp
add
out
cli
xlat
fcomi
sbb
push
dec
and
add
mov
iret
and
pop
mov
or
daa
mov
xchg
fimull
push
cs
xchg
mov
adc
fs
jns
jge
xor
jnp
cmc
das
adc
enter
lods
or
mov
in
and
shlb
std
and
mov
or
daa
push
ja
adc
gs
movsb
inc
in
sti
popa
mov
push
sub
cmp
mov
insl
lods
inc
clc
je
lods
mov
jp
xchg
popf
ljmp
fimuls
fstps
int
shll
sub
movsl
int
fs
adc
fcmovnb
out
jle
pop
loope
xor
mov
enter
clc
or
fsubs
ja
jl
inc
mov
jg
loop
lds
mov
mov
stc
pop
push
jbe
rol
pusha
in
loop
inc
call
pop
jo
dec
mov
pop
iret
pushf
imul
dec
pop
fadds
call
cmp
push
cmp
mov
mov
cmpsl
stos
aad
adc
and
jbe
add
rcrb
lcall
int
cli
jg
outsb
xlat
xchg
pushf
and
jbe
and
in
xlat
and
aad
cmp
pop
sub
aam
lods
sbb
stc
dec
mov
shr
cld
xor
les
inc
adc
repz
dec
sarl
subb
and
push
xchg
loop
mov
push
add
sub
lahf
mov
or
push
mov
cmpsb
inc
out
int3
inc
add
mov
or
int
sub
fwait
jge
addr16
pop
sub
in
push
mov
ficompl
sbb
daa
lret
add
arpl
add
lahf
out
aas
test
scas
xchg
nop
aad
xor
sub
cld
xchg
cmp
sbb
push
pop
xchg
in
jmp
shr
adc
cmp
das
fcmovnu
sbb
pushw
or
jns
aas
stos
cs
push
les
pop
in
dec
js
fldcw
call
shl
cli
mull
loop
lods
cli
scas
cmp
or
into
mul
or
repz
and
push
inc
and
fstpl
xor
pop
add
xlat
mov
fldl
inc
add
je
out
or
jae
mov
mov
inc
push
pop
in
sub
enter
pop
pop
push
adc
rcll
xchg
lods
mov
or
adc
xor
xor
adc
outsl
outsb
and
push
mov
add
ficoms
int3
int3
call
rcll
push
add
sub
pop
or
pop
mov
stc
inc
popl
jo
shlb
int
test
scas
mov
test
les
imul
mov
fisubrs
mov
int3
das
scas
mov
das
mov
in
cmp
ja
icebp
lds
dec
mov
push
inc
clc
mov
sub
pop
mov
dec
mov
add
not
jp
incb
jecxz
aaa
adc
inc
jo
lods
jge
sbb
xchg
push
mov
inc
scas
xchg
and
out
sub
fwait
jbe
repnz
iret
cli
push
mov
sbb
sbb
into
fnstcw
adc
out
pusha
xchg
dec
or
loope
cld
popa
push
fistpll
into
call
sub
outsb
pushf
ret
jmp
pop
jmp
ss
jle
or
push
icebp
mov
lods
shlb
les
imull
push
ja
scas
cld
cwtl
imul
out
aas
cmp
lds
push
out
fildll
into
mov
inc
add
adc
iret
testb
imul
ds
and
loope
xacquire
or
jb
jg
outsl
fildll
cltd
mov
cmp
fs
lret
mov
xlat
push
xchg
push
in
mov
and
xor
sub
pop
xchg
and
push
mov
dec
pusha
movsb
and
inc
dec
inc
js
inc
mov
pusha
pop
mov
sbb
sub
aas
int3
stos
mov
lahf
push
negl
dec
push
outsb
shlb
inc
loope
add
popl
adc
ret
test
rol
mov
cld
fwait
test
out
movsb
std
and
mov
fiaddl
or
cmpsb
add
into
mov
and
in
stc
dec
push
jmp
jmp
push
ds
add
fdivl
sbb
arpl
stos
popa
inc
xlat
push
xchg
xor
sbb
test
es
out
push
fistps
loop
jae
jg
dec
push
push
or
xchg
adc
sub
push
cs
jb
loop
jae
fcomp
rorl
xchg
jb
push
mov
push
cmp
daa
mov
mov
fwait
mov
jmp
dec
mov
je
or
add
mov
imul
push
clc
mov
inc
orl
jae
scas
ja
fdivrs
lods
loopne
notb
pop
pop
pop
push
mov
xchg
and
inc
imul
push
sub
push
fmull
imul
arpl
scas
leave
testl
xchg
mov
notl
adc
fstpt
dec
push
jnp
sbb
out
xchg
aaa
and
mov
jg
jns
test
inc
cmpsb
movb
cli
xor
mov
mov
ljmp
mov
stc
sub
int
loopne
xor
adc
pop
lds
or
cmpsb
nop
sub
popf
lods
sbb
add
stc
and
mov
ret
sub
adc
lretw
or
ss
popa
mov
js
mov
push
repnz
adc
dec
cld
scas
loopne
jnp
sub
mov
dec
lods
movsb
pop
adc
mov
jne
mov
adc
adc
in
adc
sub
jb
loope,pt
ret
sub
or
jp
cwtl
push
bound
adc
mov
xor
mov
push
xchg
and
mov
pop
cs
mov
sarl
push
xor
push
push
popa
idiv
stos
jg
xor
sahf
mov
mov
popf
jecxz
inc
adc
mov
rclb
cmp
jbe
mov
aam
notl
jl
jecxz
inc
jno
sbb
xchg
addr16
xchg
jns
sub
shlb
lods
shrb
jbe
pop
cmp
sub
in
push
andl
dec
and
rol
adc
cltd
call
ljmp
out
sub
xor
jae
jmp
mov
or
pop
jne
push
shl
insl
out
sbbb
aaa
loope
and
mov
mov
adc
movsl
sub
ljmp
jo
loopne
mov
mov
push
scas
mov
pop
adc
mov
aad
das
cmpw
nop
je
ja
mov
sub
xchg
cmp
dec
cmpsb
push
xchg
jae
jp
inc
sub
icebp
dec
out
arpl
addb
icebp
lds
insl
aas
jnp
mov
imul
mov
jp
sbb
cmpsl
movsl
cmpsl
insl
sub
xchg
lock
rcrb
repz
sbb
mov
jne
mov
adc
outsb
rorb
sbb
test
or
daa
jns
sbb
add
stos
sarb
fdivs
insb
int3
divb
cltd
add
push
out
cmp
imul
and
cmp
lret
xchg
in
sub
adc
inc
enter
lods
iret
push
push
dec
int
fcomps
push
fadd
adc
sbb
xor
loopne
inc
testb
ds
adc
adc
clc
imul
jb
dec
in
int3
xchg
pop
invd
in
sub
pop
dec
push
stos
in
loope
insb
xor
in
mov
int
adc
push
pusha
imul
aas
loop
push
pop
mov
mov
push
push
pop
or
lret
pop
push
dec
mov
adc
jb
call
cmc
and
jmp
adc
xchg
data16
lds
ljmp
in
les
pop
loopne
sahf
das
movsl
scas
fcmove
xor
xchg
icebp
xor
icebp
fs
cli
cmp
int
xor
enter
push
shll
add
mov
push
push
xchg
leave
sub
lock
and
push
dec
mov
scas
int
push
repz
jno
cmp
add
mov
pop
or
ret
mov
inc
test
ret
test
pop
cltd
xchg
stos
nop
xchg
cmp
pop
mov
xchg
fcmovnbe
fs
into
xor
or
sbb
rorl
pop
rorb
jae
dec
pop
and
insb
es
gs
push
mov
adc
add
loope
push
pop
push
rcrl
pop
hlt
mov
xor
mov
cmp
push
roll
push
xchg
or
push
add
stos
movsl
xchg
mov
fsubrl
call
mov
cmp
ljmp
pusha
imul
sbb
cli
mov
xchg
mov
pop
push
and
and
loop
int3
lahf
mov
push
jae
pushf
pop
test
fildl
and
xchg
les
out
adc
loope
mov
sbb
adc
pusha
out
fists
outsl
jo
xor
pop
je
movsb
jmp
or
sub
popf
xor
das
sbb
pop
pop
jae
mov
push
stc
fwait
popf
int
les
sbbb
xor
mov
imul
cs
rcl
pop
and
mov
mov
pop
sub
dec
ret
in
xor
sar
inc
jae
repnz
mov
inc
dec
in
mov
insl
negl
fucomip
jae
cwtl
pop
insl
sahf
je
mov
pop
push
xor
fcompl
jl
gs
pop
jle
stc
xor
stos
push
cmp
cmp
fldt
gs
inc
cmp
pop
daa
jp
inc
mov
jnp
sub
aas
xchg
ds
and
mov
and
mov
dec
aaa
cs
and
xorl
mov
xchg
out
dec
rcrl
test
dec
fistps
addl
push
sub
in
cmp
push
inc
sub
sbb
daa
gs
sub
loopne
lahf
adcb
inc
sub
mov
and
iret
lods
mov
push
push
scas
pop
ret
stos
jo
cmp
movsl
sbb
into
cmc
push
cmpsb
stc
nop
imul
mov
jmpw
cmpsb
pop
cmp
into
loopne
sbb
jl
enter
bound
icebp
mov
xlat
jge
sbb
das
cmp
scas
mov
pusha
shr
mov
mov
insl
xchg
nop
mov
pop
or
out
jae
shll
pop
inc
adc
lods
daa
mov
ss
negb
leave
lret
test
xor
jne
lret
xor
jg
cli
adc
xor
fs
loop
jge
ss
mov
push
pop
out
outsl
lods
outsl
popa
xor
imul
out
fldt
xor
xor
adc
mov
fmuls
pfrsqit1
push
pushl
push
ficoml
repnz
test
das
std
dec
inc
push
inc
cltd
gs
push
adc
in
push
jmp
cmovns
adc
ret
cmp
sub
xchg
and
imul
cs
jge
loope
sbb
jnp
sbb
std
imul
jae
xchg
inc
and
lret
mov
xor
or
rorl
cwtl
lcall
mov
enter
sahf
mov
loope
jge
push
pushf
lret
insl
add
jmp
mov
mov
popa
rol
stos
and
stc
jae
adc
or
jge
lret
mov
mov
mov
or
and
dec
pop
repz
out
out
fisubrs
stos
ljmp
xchg
sti
pop
rorl
mov
aam
loope
cmpl
mov
outsl
inc
or
jae
fnstcw
fmuls
in
sbb
jno
ja
adc
push
or
andl
jmp
lahf
les
testb
xor
mov
adc
and
jp
les
mov
ret
xor
test
add
fcomps
mov
add
xchg
mov
cmpsl
add
int
inc
sbb
stos
lcall
iret
mov
push
pusha
xchg
sahf
cli
inc
sbb
cmp
pushw
jno
faddl
add
mov
aam
jmp
aas
inc
test
notb
fld
sub
push
push
push
mull
arpl
push
or
xor
icebp
popf
xlat
inc
dec
adc
mov
dec
xlat
scas
aaa
mov
jmp
push
xchg
sahf
loopne
inc
loop
mov
pop
push
scas
iret
mov
shl
xor
mov
sub
popa
mov
adc
rcll
out
push
sti
cmp
inc
in
inc
cmp
dec
int
cmp
xchg
cld
shll
cmp
pop
push
call
pop
ret
ljmp
push
xchg
xor
push
out
lret
loope
out
xchg
cwtl
adc
aaa
xchg
mov
mov
out
mov
test
push
inc
or
sbb
aaa
dec
xor
inc
xchg
shll
rorb
push
orl
dec
xor
pop
jecxz
fstpt
xor
ljmp
lret
repnz
ret
out
or
inc
mov
push
int3
lds
adc
lods
addr16
push
mov
shl
rcrb
notl
leave
sahf
dec
sbb
inc
xchg
repnz
rcrl
dec
jno
movsb
sub
sub
sbb
scas
cmp
rorl
add
mov
and
adc
mov
aaa
aam
pop
dec
bound
mov
xchg
pusha
imul
sub
andl
jno
mulps
call
test
pop
or
inc
dec
jmp
sbb
test
imul
and
sub
movsl
add
mov
adc
aad
sbb
sbb
push
pop
and
mov
out
fs
and
testl
aaa
in
mov
pop
mov
lods
adcl
push
xor
jg
loopne
movsb
sub
jecxz
mov
adc
pop
jge
push
xchg
stos
hlt
neg
xor
std
xchg
mov
sbb
aaa
push
pop
push
mov
fwait
int3
imul
sub
cmc
into
loope
aad
ja
xchg
lahf
movb
jno
ret
mov
mov
inc
and
pop
xchg
jg
sbb
add
popw
and
mov
jae
mov
fisttpll
imul
jmp
popa
dec
lret
xchg
sub
lahf
js
cmp
mov
push
push
xchg
xchg
test
das
ss
cmpsb
fbld
and
dec
jecxz
fcmovb
xchg
icebp
push
push
leave
cwtl
pusha
lods
aaa
cmp
mov
addr16
icebp
mov
fisubrl
sub
ret
sub
stos
clc
movsb
xchg
mov
jns
and
pusha
mov
push
pop
dec
cwtl
adc
pop
decb
std
adc
pushw
inc
test
and
jmp
xchg
sub
popf
dec
sub
push
pop
mov
arpl
outsb
loope
sahf
stc
out
xchg
fdivp
subb
repnz
push
aaa
sti
sub
inc
rcrb
int
out
jle
xlat
sarb
dec
scas
pop
inc
inc
or
mov
and
or
cmpb
insl
lret
icebp
pop
lds
clc
cmpb
popf
movsb
mov
lret
push
testb
out
xor
sub
inc
push
sbb
stc
mov
xor
fdivrs
inc
add
mov
sahf
dec
nop
push
fcmove
and
dec
mov
mov
mov
xchg
jno
test
out
mov
jno
sbb
sub
mov
jns
adc
xchg
aaa
fstpt
test
bound
sbb
enter
push
lea
test
xor
pop
sbb
arpl
mov
inc
mov
jmp
xor
pusha
and
shlb
roll
sbb
in
pop
jne
imul
outsb
es
push
aam
cmpsb
push
sbb
std
ja
dec
cmp
ds
std
fcmove
pop
dec
repnz
out
out
ljmp
jno
cmp
ss
cmp
mov
outsb
mov
or
xorl
mov
pop
daa
je
rcrl
lods
decl
pusha
add
fwait
sbbl
or
or
jno
inc
and
aam
sub
mov
cli
icebp
shlb
stc
adcl
push
bound
loop
cmp
lods
fisubrl
jecxz
add
xor
aas
or
popl
mov
mov
les
lcall
mov
mov
lcall
cmpsl
cwtl
in
roll
mov
pusha
into
sub
scas
fisubs
lods
movsb
ja
pop
and
ss
mov
jo
lcall
sub
loope
fisubrl
sub
sbb
dec
lret
orb
std
jecxz
inc
and
sbb
pop
xor
sbb
push
ret
dec
and
cwtl
andb
xor
mov
roll
lcall
fucomi
stos
pusha
add
and
stos
in
je
jne
mov
iret
sbb
jb
sub
push
jg
xor
pop
insl
ficomps
rorb
adc
jns
jg
xchg
or
xchg
shr
adc
pop
pop
xor
dec
jae
mov
sarl
mov
inc
lahf
mov
iret
outsb
stos
push
cmp
fiadds
push
scas
ds
ficomps
lods
mov
jne
push
cmp
lea
cmp
sbb
rolb
pop
int3
jmp
push
insl
mov
movsl
stc
jmp
pop
push
imul
mov
loopne
rcrb
fnclex
leave
lds
adc
ljmp
inc
mov
or
push
test
mov
fsts
test
shll
sub
lahf
mov
mulb
mov
sbb
enter
test
sbbl
out
or
aaa
aaa
pop
das
test
push
inc
lea
stos
out
in
xchg
ret
jmp
test
sub
dec
mov
ficomps
lods
pop
add
sbb
out
cmpsb
test
rcrl
out
xchg
cmpsb
scas
sahf
dec
cmp
fcomi
popa
cs
jle
sub
out
and
jo
push
jg
hlt
xchg
mov
fidivrl
cmp
movsb
pop
add
mov
nop
notb
shrb
jle
mov
or
fisubrs
inc
jmp
push
mov
subb
out
shlb
cmp
or
sub
cltd
ja
sbb
in
and
pop
inc
mov
jbe
stos
lahf
xor
add
scas
cmp
adc
inc
cld
dec
ret
imul
dec
lods
push
jbe
mov
roll
jno
jecxz
cmpsb
jb
and
inc
sub
pop
cmp
loopne
flds
and
xchg
cli
jno
inc
rcrl
mov
pop
xor
xchg
les
lahf
nop
in
dec
outsl
mov
data16
push
mov
push
and
adc
jmp
and
add
jnp
shrb
mov
popf
outsb
cmp
pushf
mov
loop
push
xchg
cmp
mov
lods
insl
mov
scas
sbb
lret
and
xchg
rorl
mov
xchg
push
inc
or
js
stos
adc
jl
les
pop
les
lret
ja
in
out
lea
outsb
sbbb
aad
cmp
stc
pmuludq
in
mov
test
add
ss
fimuls
xlat
mov
cmpsl
in
jge
lret
lahf
dec
mov
mov
movsb
pop
ret
xor
and
xchg
lret
loop
or
adc
push
fldt
add
fdivrl
movsl
mov
xchg
dec
or
xor
fnstcw
pop
insb
pop
or
or
and
cmpl
jp
ror
ss
lahf
outsb
dec
dec
ds
jb
subl
mov
ja
jle
ljmp
jl
es
and
push
aam
mov
and
js
mov
inc
cmpb
cmp
xor
xor
mov
jl
adc
cmp
lcall
inc
push
mov
inc
lods
je
pop
lcall
sarl
inc
adc
outsb
inc
or
push
das
rcl
movsb
and
jne
adc
pop
lret
cmp
mov
mov
dec
adc
pushl
pop
nop
lods
jmp
pushf
mov
in
or
sarl
fcompl
push
in
pop
mov
clc
cli
shr
daa
push
lods
cmp
and
xor
mov
and
push
lods
popa
test
sti
shl
inc
stos
pop
mov
xchg
and
xor
in
fcmovu
int
cs
sub
cmp
setnp
mov
std
stos
adc
popa
adc
ds
rclb
push
nop
mov
inc
cmpsl
dec
xchg
pop
int
out
mov
stos
add
add
lods
pusha
mov
pushf
sub
mov
popf
imul
push
lret
cmp
dec
xchg
and
xor
jle
fcomps
ficompl
cmp
lcall
lret
arpl
push
jae
xor
icebp
jge
inc
xor
cmp
rcrb
xor
das
sub
sti
sbb
pop
adc
sub
adc
mov
jns
jmp
mov
sbb
dec
fnsave
xchg
inc
insl
sbb
adc
fwait
cmp
push
jne
leave
sub
incl
gs
or
jo
push
cmpsl
xor
jl
cmpsb
xchg
ljmp
sar
dec
pushf
leave
test
cmp
test
inc
sub
jecxz
in
psubw
fistps
inc
std
stos
inc
push
lahf
rclb
out
rcll
jbe
ret
aam
popa
or
mov
cs
lods
mov
or
pop
sbb
iret
add
pop
mov
addr16
pusha
push
sbbb
out
inc
mov
jge
icebp
enter
adcl
inc
fs
xchg
movsb
insb
add
dec
mov
sahf
push
cmp
aaa
push
dec
cmp
jl
or
ficoml
movsb
sub
or
jno
push
ret
and
or
andb
movsl
es
sahf
adc
jnp
xor
cmpsl
xor
je
sub
mov
or
std
push
mov
xchg
fwait
pop
cmp
xor
inc
sub
mov
shl
daa
test
push
in
xor
je
lea
call
loope
mov
push
xor
jp
and
jle,pn
rorl
and
lcall
test
dec
inc
push
les
insl
push
xor
mov
pop
out
xchg
mulb
movsb
mov
or
cld
push
pop
inc
in
or
xchg
jnp
inc
movb
lock
and
arpl
or
dec
dec
jne
nop
adc
int
fsubl
lret
pop
inc
sbb
inc
mov
and
outsb
aad
iret
mov
mov
shll
movsl
mov
xor
pop
ja
push
loope
jbe
push
loopne
push
sub
adc
jge
xor
test
je
cmp
pop
das
jle
mov
sub
arpl
mov
adc
and
sub
mov
fildll
or
jbe
jmp
xor
sarb
sub
inc
repnz
push
ja
inc
xchg
xchg
orl
cmp
pop
lahf
in
neg
inc
out
aas
or
cmc
data16
mov
lret
lahf
push
adc
and
jnp
mov
popa
inc
pop
pop
test
hlt
adc
into
jmp
jmp
repz
outsb
jle
mov
aad
xor
into
jno
mov
and
and
add
mov
lahf
or
cltd
or
imul
outsb
ljmp
pusha
scas
sbb
sahf
jle
stc
fistl
fs
int3
scas
mov
std
sbb
mov
enter
mov
test
add
xor
loope
add
xor
aad
mov
add
into
sub
sbb
leave
test
leave
sbb
mov
testb
or
mov
inc
insb
ljmp
dec
and
mov
ljmp
testl
daa
in
in
jnp
mov
xor
out
mov
movsb
cmp
mov
rorl
adc
jmp
cmp
push
loop
add
mov
addr16
es
clc
insl
out
xchg
es
push
scas
push
mov
add
jne
xor
pop
mov
inc
xchg
inc
pushf
push
cli
stc
mov
dec
repz
sub
testl
mov
mov
mov
lcall
dec
pop
add
jbe
add
iret
sti
bound
movb
pop
in
mov
call
dec
pop
mov
fcoml
in
aad
outsl
fstpl
cltd
pop
sub
pusha
dec
xchg
adc
push
imul
sbb
push
aad
rorl
les
xchg
pop
xlat
test
fdivl
dec
push
je
in
lods
sarb
cmc
out
fmull
in
push
or
pop
sbb
add
xchg
pop
lcall
mov
jnp
and
add
adc
es
lea
nop
aad
cmp
mov
mov
xchg
outsl
faddl
loope
jle
push
mov
rorl
push
pop
add
jae
pusha
pop
add
and
jle
or
inc
xchg
jbe
ret
icebp
pop
jecxz
xor
mov
cmp
xchg
nop
das
pop
jne
jns
sub
push
mov
push
aad
inc
idivl
add
push
sbbb
loope
or
cmp
shrb
mov
cmp
mov
insb
dec
lock
xchg
out
jb
or
cmp
data16
sub
fwait
xor
dec
adc
push
test
insb
pop
and
and
push
fadd
mov
and
dec
loopne
movsl
xor
iret
dec
push
mov
into
xor
test
pop
sub
shrb
mov
lods
inc
and
xchg
mov
xchg
aaa
fidivl
cwtl
fnstcw
bound
and
or
out
leave
cmp
mov
outsl
adc
add
in
movsb
iret
js
rcrl
sub
jnp
mov
hlt
fwait
dec
cmc
cld
jle
cmp
sbb
clc
mov
and
sub
sahf
sbb
arpl
fstpt
push
mov
jno
adc
imul
jb
add
pop
add
push
dec
and
cmp
and
jb
push
sub
mov
out
and
dec
xor
sarb
repz
fdiv
loopne
xor
sbbl
push
inc
pop
sub
popl
movsb
nop
mov
jb
cltd
pop
mov
hlt
bound
or
push
imul
roll
adc
push
cmp
ret
xor
iret
daa
int
hlt
adc
inc
stc
jae
mov
pop
movsb
cmpl
sbb
mov
rolb
mov
sub
mov
inc
sbb
sub
outsl
sub
and
arpl
lods
pop
fisubrl
push
cld
sbb
daa
jae
cld
mov
lret
unpckhps
out
das
cmp
fistpl
outsl
mov
pop
test
adc
or
and
in
sbb
aam
push
adc
inc
fimull
xchg
je
push
push
dec
fiadds
pusha
rcrb
sub
lcall
add
push
scas
imul
inc
repz
jbe
or
arpl
or
movsb
shl
xor
add
inc
bound
sar
dec
adc
bound
jb
daa
imulb
or
lea
outsl
mov
pop
leave
sub
xchg
adc
mov
movsl
dec
addr16
sbb
clc
jo
pop
shrl
jb
dec
xchg
mov
movsb
xchg
mov
push
jecxz
jne
cmp
mov
cmp
jg
insl
pop
jecxz
dec
dec
pop
mov
push
fiaddl
aas
push
sahf
push
inc
int
in
es
int3
mov
cmp
rcl
mov
push
rcll
inc
jns
les
test
in
dec
jbe
outsb
into
mov
push
inc
mov
inc
cmp
clc
and
jl
dec
mov
lods
repnz
fsubr
dec
aad
jnp
push
sti
lret
jl
lret
pop
push
push
pushf
pop
insb
fmuls
dec
gs
out
gs
movb
in
es
cmp
mov
and
mov
mov
shll
cltd
loop
fnstsw
add
fcmovnb
ds
stos
mov
scas
cmp
dec
outsl
mov
mov
sbb
xor
add
jno
jl
inc
in
js
push
cmp
aas
in
stos
pop
and
adc
dec
cmp
push
pop
test
sbb
outsb
pop
pop
mov
fsubrl
ljmp
inc
imul
pop
cmpsb
cmpsl
mov
jbe
aaa
and
mov
out
xor
scas
sub
xchg
popf
fstps
mov
sti
repnz
cmp
es
jno
rclb
test
fadd
fld
cmp
leave
push
nop
dec
add
pop
adc
jbe
mov
inc
xchg
inc
hlt
fadd
pop
adc
into
mov
jns
xchg
jo
and
filds
out
and
in
into
sbb
test
addr16
iret
push
xchg
pop
popa
xor
pusha
shlb
dec
sbb
adc
mov
mov
shll
loope
in
xlat
adc
adc
fdivl
sbb
pop
pop
shlb
adc
rolb
dec
sub
pop
inc
negl
arpl
sub
aas
xor
fwait
sti
cmc
pop
mov
cmc
and
hlt
add
sbb
adc
pop
shrb
test
jnp
cwtl
shrb
pop
repz
mov
jl
gs
das
push
icebp
jmp
sbb
xor
leave
adcb
lcall
dec
sub
outsl
xchg
xchg
out
jae
mov
cmp
cmp
in
scas
insl
jge
clc
inc
je
inc
push
mov
gs
insb
or
jo
push
xor
sub
dec
loopne
push
scas
xor
imulb
jmp
popa
arpl
pop
dec
outsb
out
fisttpl
ds
inc
xor
les
adc
subl
shl
mov
or
inc
stc
aam
iret
sub
icebp
cmp
sub
mov
mov
dec
or
imul
je
jmp
imul
iret
loope
push
mov
cmp
mov
sbb
xchg
jmp
int3
int
rorl
push
stos
mov
je
cmc
sbb
outsb
fcoms
lea
outsb
pop
movsb
mov
popl
dec
push
cmpsl
adc
out
mov
xor
fwait
or
imul
call
dec
xchg
cltd
sti
cmp
lcall
nop
cmpsl
push
jg
cmp
dec
inc
xchg
fs
addr16
xor
rolb
xchg
xor
shld
adc
int3
push
sub
stc
adc
stos
mov
aaa
mov
inc
movsb
add
sahf
jnp
pop
negl
add
fcomp
push
sahf
icebp
adc
subb
je
pop
ret
ja
jg
sub
push
in
test
xor
inc
nop
cmpsb
loopne
ljmp
inc
mov
cmp
ret
push
pop
jns
lock
gs
in
sbb
jb
pushl
jl
out
fcomps
scas
jno
call
out
js
xchg
push
fisubrl
inc
pop
cld
out
jnp
lods
incl
push
mov
add
adc
arpl
pop
arpl
jo
xchg
and
shrb
jle
fisttpl
out
jge
pop
dec
jne
shll
inc
das
gs
cmc
pop
rolb
mov
ds
sub
test
ror
test
cmp
mov
push
cmpl
test
ret
negl
bound
call
xchg
outsb
aad
fdivr
bound
mov
gs
jae
rdtsc
rolb
divl
fisubrs
pop
mov
sub
cli
ret
mov
jg
mov
dec
cmp
mov
dec
mov
test
xchg
sbb
mov
cmp
inc
push
sub
inc
movsb
les
fisubrl
pusha
dec
movsb
leave
xchg
inc
sub
mov
adc
fsubrp
fldl
or
out
pushf
fnsave
mov
cwtl
sbb
mov
sub
insb
or
sub
repz
mov
int3
adc
push
pop
xor
js
xor
push
jnp
xchg
rolb
push
hlt
jl
test
xor
xor
stos
mov
jl
in
or
or
jecxz
xorb
cltd
xorl
data16
cmp
sar
aas
dec
and
int
ss
sub
stos
loop
int
scas
icebp
sub
orb
jb
push
scas
js
test
fwait
sub
add
daa
test
out
mov
ljmp
dec
pop
idivl
inc
mov
insb
push
cmc
ret
dec
imul
or
sub
repnz
adc
aad
je
jg
sbb
in
mov
ds
adc
clc
mov
dec
test
lret
pop
xor
testb
cmpsb
mov
add
push
loop
jnp
loopew
and
lods
jns
int3
loope
or
mov
cld
inc
dec
mov
lahf
jmp
pushf
push
jne
pushf
jge
ret
cmpl
pop
sub
gs
jmp
dec
or
repz
test
fs
jl
push
add
xchg
outsb
xor
sarl
das
mov
jle
mov
stos
call
call
jl
push
mov
inc
popf
xor
cmpl
xor
outsl
push
stos
rolb
ja
add
loope
sarb
imul
mov
rcll
sbb
inc
repnz
pop
movsb
add
call
loopne
adcb
xlat
mov
xorl
aam
loop
push
inc
dec
ret
loopne
cmpsb
sbb
sub
mov
jo
push
pop
outsb
cmc
xor
xlat
and
rorl
adc
pusha
jne
push
movsl
xor
loopne
mov
jne
ja
cwtl
mov
lea
dec
jp
stc
xchg
lods
rcrb
pop
pushf
jbe
or
jno
not
adc
ss
scas
rcl
test
xor
daa
fcmovne
popa
add
popf
xchg
outsb
out
cmp
sar
xor
daa
ret
in
push
lds
clc
call
push
push
stos
dec
stc
xor
adc
lret
aas
cmp
mov
inc
add
lock
mov
jmp
jae
jecxz
lods
cwtl
cwtl
mov
pop
lds
xlat
or
adc
repz
jp
push
es
xor
mov
mov
arpl
jne
inc
leave
daa
mov
ds
sbb
mov
lcall
mov
rorl
sbb
xchg
mov
dec
sbb
mov
and
add
jae
inc
iret
jl
fistl
jp
xor
mov
jecxz
jns
fcompl
cmpsb
jnp
and
pushf
outsl
mov
hlt
xchg
stc
jmp
sbb
pop
xchg
sub
leave
out
repz
mov
or
outsb
xchg
lea
mov
dec
push
xchg
mov
add
adc
pop
stos
or
in
xor
cmc
sbb
xchg
pop
aas
sbb
out
arpl
dec
aad
ret
xchg
mov
out
popf
dec
cmp
cmpsl
adc
shrl
mov
xchg
sahf
dec
cmp
addr16
jge
sub
cmpsb
mov
lcall
clc
test
mov
or
scas
test
les
fcomi
movsl
clc
aam
loope
clc
mov
insl
fcmovb
inc
std
push
iret
mov
jne
pop
xlat
fnstenv
pop
jnp
add
jmp
dec
int
jg
xchg
inc
mov
jg
xchg
inc
loope
in
aaa
push
sysexit
cld
minps
pop
sbb
push
in
pop
divb
xchg
ficoml
popa
cwtl
das
addr16
lahf
mov
inc
adc
add
mov
cmpsb
add
mov
fdivp
jge
mov
sbb
les
add
xchg
or
sub
or
push
movsl
mov
outsb
jne
loop
or
aad
xor
into
jp
or
inc
mov
adc
dec
xor
adc
aas
mov
adc
lods
mov
jge
inc
clc
aad
push
cmp
adc
push
popf
sub
sub
arpl
or
mov
mov
aad
and
pop
fwait
out
enter
xchg
fimull
mov
repnz
pop
xor
and
cmc
loope
push
xor
push
sbb
sub
jns
lods
mov
jno
push
mov
negb
aam
mov
outsb
pop
addr16
mov
dec
dec
fptan
mov
fists
repz
add
fimuls
inc
emms
ds
add
sbb
sbb
adc
push
pop
mov
add
mov
adc
and
scas
jb
push
ss
jge
psubb
pop
loop
in
insb
push
xlat
lock
lret
testb
jb
std
push
lock
test
fisubl
outsb
mov
jp
pop
jge
xor
outsl
or
fdivs
out
sub
and
clc
les
or
jae
imul
test
ljmp
and
pop
mov
loopne
mov
std
xchg
insb
sub
call
mov
add
mov
push
iret
and
shlb
clc
pop
test
add
add
xchg
test
in
cmp
orb
orl
add
inc
sbb
lods
add
jecxz
pop
ss
les
inc
xor
cmp
mov
scas
aas
in
addr16
pushf
insl
outsb
push
jg
mov
insb
and
js
int
xchg
fcomps
mov
imul
orl
push
xlat
and
mov
dec
mov
push
loopne
in
push
ds
dec
lods
push
push
rcl
insl
cmp
or
xor
clc
int
jecxz
pop
outsb
jno
jae
fdivl
cwtl
xchg
mov
in
test
repz
shlb
in
jae
scas
fildl
push
in
jb
xchg
and
andl
mov
jb
mov
daa
out
cmpb
or
push
out
out
dec
out
imul
mov
lods
xchg
movsl
or
inc
enter
js
add
test
inc
xchg
stc
xchg
mov
mov
jmp
sbb
mov
mov
pop
imul
jmp
test
nop
leave
stc
ret
add
call
xlat
mov
movsb
movsb
js
mov
fsubrs
repz
movsl
sbb
lds
scas
and
insl
cmpsb
mov
add
das
mov
testl
fucomp
or
cmpsl
out
mov
mov
and
pusha
ja
xor
loopne
notl
hlt
pop
jo
fwait
mov
sbb
xor
sub
mov
test
push
pop
rorl
xor
sbb
add
mov
mov
inc
ret
aad
and
xor
jno
cld
jecxz
pusha
je
cli
sbb
sub
sbb
sarl
inc
sar
push
stc
mov
pop
movsl
jae
dec
out
in
push
xor
jl
cltd
pop
mov
aaa
std
sbb
jg
xchg
mov
test
push
xor
adc
push
orl
test
in
sarl
lds
dec
mov
iret
mov
stos
inc
push
stos
rcrb
and
add
lock
fistpll
cwtl
adc
js
daa
movsb
cli
outsl
aam
cmp
mov
push
sub
add
sbb
mov
daa
cmp
out
lods
lods
imul
or
idivl
aaa
or
adc
push
cmpsl
ret
aad
iret
push
mov
imul
or
pop
xor
repnz
push
mov
rcll
cmp
add
aad
lea
lret
ret
cmc
mov
xor
movsb
je
fmuls
adc
sbb
mov
jge
push
jns
pusha
mov
sarl
popf
xchg
cmp
daa
xor
sub
mov
aas
adc
test
imul
mov
inc
aad
aam
movsl
lahf
dec
sbb
out
fs
andb
lret
jg,pt
out
cwtl
jge
pop
sbb
fdivs
sub
jle
cmpsb
int
dec
add
xchg
mov
sti
adc
sub
out
xchg
cmp
pop
cmp
mov
push
jl
lods
or
push
jno
cltd
jmp
pop
daa
enter
jnp
mov
pop
mov
ja
out
in
lret
cld
test
fidivs
push
push
pop
neg
mov
adc
jo
adc
dec
add
out
inc
in
inc
mov
test
loop
in
imul
test
shll
aam
adc
idiv
popa
je
out
outsl
sbb
ja
sbb
cltd
or
push
cli
xlat
adc
inc
imulb
mov
loopne
stos
ror
faddp
jns
lcall
test
sti
xchg
add
pop
pop
add
push
dec
sub
xchg
mov
mov
sub
pop
testb
cmp
testl
jmp
stos
fisubrl
fdivr
xchg
jne
mov
xor
mov
xor
xor
je
cmpsl
movsl
jge
popa
jle
inc
inc
lahf
cmovno
out
addb
sub
lcall
std
xchg
and
and
inc
aas
cmp
jae
mov
mov
mov
adc
imul
pop
insb
jge
hlt
lods
dec
jmp
icebp
xor
cs
jns
inc
mov
jmp
mov
push
popa
insb
jo
add
inc
out
and
insb
aaa
imul
cmp
sub
out
in
dec
push
ss
jb
test
fwait
adcb
cs
push
ficoml
mov
mov
movsb
sti
mov
adcl
stos
mov
add
xorl
sub
out
pop
movsb
mov
into
test
rolb
cmp
insl
lds
fbld
push
lcall
and
xchg
inc
lea
lcall
cmp
imull
insb
call
inc
enter
cmp
inc
dec
cltd
mov
push
shrb
sub
int
pop
jecxz
lods
iret
movsl
fcompl
lds
jne
jmp
imul
lods
sub
psubusw
mov
jae
xor
inc
or
imul
and
std
mov
iret
push
aas
lea
ljmp
je
subb
imul
mov
imul
xchg
sub
jmp
or
dec
or
pop
and
sub
es
sub
push
gs
fmuls
mov
pushf
scas
lcall
mov
std
test
cld
push
mov
arpl
std
sbb
add
jg
sub
in
das
and
orb
push
movl
xor
ss
mov
lea
loopne
jae
ret
outsl
shl
rorl
lds
jo
or
xor
sbb
mov
inc
and
jb
pop
pop
and
mov
inc
nop
xor
cmpsb
push
dec
jne
addr16
xor
cmpsb
sbb
int
je
mov
inc
inc
mov
fs
int3
repz
cmp
dec
jbe
fld
pop
imul
cs
mov
push
shl
sarl
lea
cmp
repz
shlb
push
add
xor
jnp
in
xchg
jb
iret
fcom
inc
xchg
sbb
cli
rcl
mov
lret
lock
mov
jecxz
xchg
dec
and
lds
mov
testl
notb
inc
dec
inc
xlat
fdivs
es
mov
movsb
dec
push
inc
jo
add
in
xor
pop
sub
dec
es
test
inc
lock
xor
movsl
mov
cltd
das
in
scas
adcb
pop
fmul
or
add
call
sub
xor
pusha
xchg
mov
pop
outsl
pop
xchg
cmp
rcrb
les
jnp
xchg
mov
push
jl
daa
loope
cli
or
cmp
push
or
push
rclb
scas
push
cmpsb
mov
and
lret
ds
sub
mov
mov
mov
push
xchg
and
in
jmp
dec
negl
les
lcall
mov
sbb
ss
pop
movsl
cmp
push
fmull
into
and
mov
inc
ja
jge
pop
repnz
xchg
test
sbbl
mov
rcr
and
inc
cmc
push
jmp
sub
outsl
fidivs
ljmp
dec
mov
fs
stos
jmp
loopne
and
push
pushf
cli
data16
xor
mov
cmc
jecxz
out
mov
shl
lret
mov
mov
push
and
addr16
dec
xchg
and
inc
pop
dec
mov
cld
shrl
ret
sub
mov
out
xchg
cmp
aaa
lods
cmp
icebp
lret
add
icebp
push
adc
xchg
mov
int
loopne
loope
daa
mov
aad
and
mov
sahf
lds
push
rol
adc
adc
inc
mov
or
shll
movsl
dec
mov
inc
jne
test
stos
jecxz
bound
sbb
sub
push
lret
je
and
aas
and
shl
imul
or
ret
hlt
add
mov
add
add
adc
lea
lods
add
push
call
hlt
cwtl
das
jae
cmpsl
stc
inc
scas
mov
andl
mov
or
xchg
mov
cli
sub
nop
add
ret
pop
test
loop
test
add
std
cld
ljmp
mov
pop
cmp
or
xchg
sbb
rorb
cmp
sub
test
mov
mov
pop
cmp
sub
insl
outsl
lret
push
addr16
or
arpl
mov
or
mov
out
adc
into
ret
mov
xchg
cmpl
gs
pop
mov
mov
add
adcl
dec
dec
cwtl
iret
dec
outsl
mov
push
gs
xchg
add
jp
and
sub
fists
scas
stc
add
jae
add
fwait
rclb
shrb
fistpll
orb
inc
imul
repz
xchg
mov
sbb
adc
xchg
lds
add
sbb
dec
or
pushf
out
add
xchg
popa
lock
out
sbb
call
mov
pop
mov
mov
loope
mov
divb
cltd
sub
push
hlt
cli
mov
scas
mov
inc
pushf
pop
xchg
rolb
leave
and
js
mov
sbb
inc
or
push
ret
sbb
mov
pop
dec
sub
ret
jns
ja
aaa
fidivrl
cltd
outsl
fdiv
mov
mov
test
aam
xor
daa
mov
shl
stos
rcl
jp
lods
in
lods
push
sbb
and
int
lret
rcrb
pop
sub
or
insl
test
clc
fsubl
mov
jg
sub
dec
push
or
cmp
jns
das
out
dec
mov
jae
pop
popf
bound
jmp
gs
in
into
dec
rclb
mov
adc
outsl
or
adc
iret
mov
imul
sub
and
lcall
mov
jb
dec
push
add
mov
dec
mov
mov
dec
lahf
sbb
inc
out
into
int
mov
ret
daa
mov
pop
test
push
or
testb
test
mov
leave
negb
mov
add
aas
mov
or
insl
clc
stc
stc
cmp
pusha
sahf
aam
mov
or
xchg
imul
mov
das
mov
push
mov
icebp
inc
repz
jmp
into
rorb
lret
mov
mov
mov
mov
es
sub
ror
rcr
lock
push
notb
repz
mov
aam
mov
outsb
push
fwait
pop
or
cmp
dec
and
aas
ds
pop
xchg
fmull
dec
inc
in
nop
pop
aas
cmpsl
xchg
movl
addl
fcmove
inc
adc
sbb
stos
out
xchg
mov
je
int3
cmp
inc
cwtl
call
stos
jg
cmp
sahf
cmpsl
lods
clc
popf
cmp
xchg
imul
std
out
stc
dec
pop
xchg
int3
add
jne
add
rolb
push
icebp
cmpsb
pop
jmp
sub
push
ss
or
cmp
movlps
arpl
popf
cmpsb
loop
sub
das
ljmp
mov
push
lods
xchg
outsl
sbb
mov
ror
repnz
repz
cmp
imul
sbb
xchg
push
cmpsl
lret
pop
cld
loop
add
mov
push
mov
into
or
arpl
sbb
int
daa
iret
mov
add
xor
test
in
je
xchg
scas
inc
sarb
sub
test
nop
mov
push
leave
inc
aaa
adc
push
loopne
pop
iret
xchg
adc
mov
xchg
add
nop
inc
pop
add
cmp
inc
in
in
daa
pop
sub
push
dec
adc
lcall
xor
movsb
das
push
test
ret
cld
mov
loopne
call
jge
popa
xchg
cmpb
out
popa
rcll
xorl
por
loop
xchg
clc
sub
cmp
cmp
dec
std
mov
mov
cmp
xchg
mov
fsubl
xor
sbb
xchg
dec
int3
test
in
in
fistps
jae
and
call
pop
push
mov
jp
loope
mov
out
add
jae
lock
out
mov
push
stos
out
divb
mov
and
push
mov
rcrb
stos
fdivrl
dec
sub
or
ret
or
add
xorb
mov
jmp
addl
dec
lahf
test
jl
xlat
mov
mov
shrb
xor
add
leave
xchg
testl
das
or
rcr
jae
and
pop
dec
aam
or
xchg
rolb
or
cmp
sub
ret
sbb
movsb
lods
mov
cmc
jle
subl
jne
sar
cmp
lock
sub
rol
push
outsl
inc
inc
cld
sub
jbe
in
fbld
cld
sbb
mov
mov
jl
and
mov
out
jecxz
mov
jge
decl
mov
xchg
mov
adc
ja
push
cmpsb
pusha
lret
pop
push
into
pop
das
cld
ljmp
mov
xchg
xor
sti
and
setb
add
mov
cmpsl
pop
sti
mov
repnz
aaa
sub
jge
enter
xor
push
das
push
repnz
dec
das
imul
imul
xchg
pop
or
jle
adc
xor
fnstenv
or
and
mov
repz
jb
mov
xchg
push
lahf
cltd
daa
ret
rclb
movsl
out
int
scas
std
outsl
sub
push
push
or
jb
pop
pop
cmpl
cmp
negl
add
mov
fwait
les
mov
or
aas
out
test
fcoml
cmpb
jge
dec
arpl
das
add
lock
xchg
add
hlt
fstp
push
sbb
pop
and
push
cltd
pmuludq
fwait
mov
push
push
incl
mov
stos
ds
push
out
xor
rcrb
mov
dec
mov
mov
inc
adc
gs
push
clc
mov
loope,pn
adc
mov
test
mov
adc
mov
push
lret
inc
pop
lods
in
icebp
lret
mov
xor
jo
adc
push
ja
adc
subb
ret
mov
xchg
aaa
popa
and
or
repz
mov
pop
add
mov
and
jbe
xchg
andl
leave
insl
dec
pop
jp
cli
test
cmp
sar
jle
pop
pop
mov
fnstenv
hlt
test
imul
repnz
inc
mov
into
sub
rorb
sbb
shl
or
cmpl
adcb
cld
xchg
mov
jle
lret
insl
mov
push
push
pop
pop
xor
sbb
jbe
push
xor
fwait
inc
adc
lahf
sahf
push
addb
sbb
jae
lret
loopne
mov
mov
ss
jle
xor
aad
push
outsw
cmp
cmp
subl
sub
mov
lds
mov
pop
jne
fmull
ret
cli
ljmp
push
pop
dec
fs
es
xor
hlt
add
mov
loope
pop
std
fs
out
add
xchg
call
pop
inc
ljmp
mov
xor
icebp
mov
and
jns
push
arpl
xchg
and
std
sbb
int3
in
xchg
scas
pushf
add
ja
std
lods
test
sub
cs
pusha
mov
idivl
dec
pop
xor
in
out
insl
test
icebp
in
ret
mov
mov
aaa
shl
push
das
cmp
ds
ljmp
in
frstor
rorb
adc
fwait
sbbb
out
xchg
add
scas
or
jp
es
inc
nop
dec
ret
scas
sbb
ljmp
outsb
enter
add
enter
lret
testb
pop
cmp
xchg
insl
xor
fmuls
scas
pop
hlt
lret
push
js
mov
push
sahf
sarb
sbb
pop
out
insb
je
loop
mov
cmp
and
mov
mov
fcoms
les
mov
imul
mov
push
lods
mov
pushf
std
add
pop
pop
push
aad
pusha
outsb
or
adc
and
cli
inc
inc
in
enter
pusha
inc
sahf
jae
ds
shll
add
sbb
push
cmpsl
pop
outsb
mov
xor
outsl
out
fisttps
jne
and
addb
dec
aad
sarb
repnz
jne
repz
mov
inc
mov
sub
sbb
and
and
sub
mov
mov
neg
sbbl
mov
cmc
mov
orl
ffreep
jmp
fsubs
xchg
inc
movsl
jnp
mov
andb
in
loop
dec
call
mov
int3
cmpsl
lret
pop
jno
add
sti
lods
mov
jl
loop
xchg
inc
mov
sub
call
cwtl
shr
sbb
lods
sti
sahf
popa
dec
fiadds
sbb
lret
and
addb
dec
jne
sbb
pop
dec
xchg
cs
in
adc
in
and
xor
test
push
mov
sub
incb
ret
lds
mov
jb
jo
ss
push
mov
cmpxchg
mov
mov
loopne
mov
or
push
rclb
fisttpl
pop
jecxz
mov
fnstcw
fcompl
fwait
repz
push
sub
test
jno
loope
rcr
insl
insl
lock
jecxz
je
jb
inc
pop
ret
jp
gs
fs
movsb
nop
ret
call
stos
xchg
popa
inc
shr
add
enter
pop
sbbb
lods
pop
jno
mov
xchg
insb
into
fsubrl
stos
fiadds
call
shrb
sbb
scas
push
xchg
testl
xor
sbb
lds
push
mov
jle
mov
fldt
sbb
in
imul
cmpsb
push
arpl
sub
mov
inc
xchg
sbbb
test
cmpsl
sub
pop
push
xor
addl
out
or
xor
mov
addr16
cmp
push
pop
mov
push
cmpsl
sbb
add
int
jmp
sub
outsb
into
cmp
test
push
pop
push
cld
cmp
and
sbb
lret
out
ret
dec
fbld
jns
mov
adc
push
lret
adc
mov
fsts
test
and
imul
adc
add
loope
popf
and
ret
xchg
arpl
jle
mov
leave
repnz
fidivs
movsb
std
sub
into
mov
ficoms
int3
xor
fs
push
and
sub
in
fidivs
inc
adc
daa
inc
push
pop
aad
fimull
stc
stc
lock
ds
sti
scas
jbe
hlt
faddp
loope
inc
jno
popf
mov
into
loopne
loopne
fldt
call
sbb
popf
sbb
xor
notb
push
bound
mov
jp
movsb
fimuls
pop
cmp
mov
pop
sbb
loopne
pop
push
adc
sbb
lret
out
dec
mov
lret
xor
mov
stos
ds
or
testb
push
in
pop
pop
out
lods
push
mov
insb
std
testb
cmc
pop
fidivrl
or
sub
ja
mov
cltd
xor
and
loope
imul
mov
inc
cltd
int3
cli
mov
cmpsl
or
push
sub
adc
jg
jno
xchg
rep
fwait
add
std
dec
mov
movl
mov
cmp
xor
mov
rclb
xchg
mov
insl
sarl
add
dec
xchg
fwait
add
adc
sub
mov
js
gs
mov
adc
daa
push
pop
sahf
jae
and
fildl
jne
sbb
pop
mov
shll
fistl
cmp
lods
pop
dec
xchg
and
jns
repz
inc
test
lcall
mov
rol
xor
loop
jo
adc
mov
pop
cs
cmp
ljmp
pop
xchg
inc
mov
xchg
add
imul
shll
fwait
pop
shl
xor
or
repz
and
and
mov
dec
mov
push
fs
adc
add
dec
shll
sub
or
hlt
faddl
mov
jno
xor
test
sahf
mov
incb
mov
ja
loopne
insl
pop
nop
ja
fcmovbe
sbb
sbb
mov
in
lret
jbe
out
lahf
xor
lea
mov
adc
inc
lods
xor
pop
je
call
inc
iret
mov
rorl
xchg
aas
pop
imul
clc
xchg
mov
sbb
cmp
adc
outsl
cmpsl
dec
imul
push
rol
test
ljmp
in
outsl
decb
sub
pop
fcmovnb
jbe
sarb
jne
xchg
sub
movsl
sub
add
mov
xchg
stos
ds
pop
roll
fstp
out
js
outsb
inc
cmp
push
xchg
std
or
in
inc
repz
icebp
push
sbb
adc
out
adc
sub
imul
add
sahf
xchg
cmp
addb
dec
cli
inc
inc
idivl
cld
lret
fsub
sbb
lods
out
lret
cs
ret
pop
idivb
dec
lea
cli
dec
or
cltd
insb
jbe
pushf
clc
xchg
or
push
cmp
cwtl
inc
push
mov
mov
cmp
cmc
movsl
fsubs
xor
xchg
adc
leave
fsts
shll
push
outsl
ss
mov
sti
in
int3
stos
dec
inc
lds
or
into
repz
into
int
or
adc
stos
sbb
outsl
sbb
stos
inc
mov
cmp
mov
xor
or
shlb
imul
and
mov
popa
push
in
enter
push
cwtl
xchg
sti
test
mull
sysenter
fnstenv
mov
ss
jae
mov
rcrb
hlt
adc
sub
lods
lods
testl
mov
pop
or
jno
imul
lods
andb
outsl
or
mov
mov
mov
mov
xchg
int
jae
or
and
lock
jge
sub
jecxz
adc
lcall
dec
lcall
pop
add
dec
push
cli
cmp
sbb
jl
mov
cld
fnstsw
scas
ds
push
mov
mov
jb
test
xchg
cmp
pop
icebp
cld
mov
adc
in
sti
mov
push
push
sbb
mov
mov
mov
pushf
xchg
addl
mov
cmpsb
mov
nop
ret
mov
cli
jecxz
cmpsl
data16
out
jmp
jnp
mov
sub
subl
rcrb
scas
cmpsl
xlat
adc
sub
pop
xor
subb
movsl
arpl
push
xor
lods
dec
int
jl
fst
jmp
aam
mov
lods
cs
pop
out
ret
mov
xor
or
push
jnp
lret
sub
push
xor
ljmp
add
sub
push
andb
mov
ja
fldenv
lret
loop
mov
hlt
addl
clc
cmovp
sub
xor
add
xorl
sbb
ss
fnstcw
adc
mov
hlt
lods
aad
push
cwtl
mov
inc
cmp
mov
mov
xor
pop
dec
imul
mov
pop
stos
dec
sbb
outsb
and
cmc
or
cli
scas
decb
mov
xor
stc
scas
or
mov
test
sbb
cli
ret
or
int
lahf
stos
xchg
mov
mov
mov
loop
add
out
push
lcall
xor
push
stc
jle
outsl
ljmp
dec
popf
xor
xchg
jnp
shrl
mov
aad
icebp
aam
sti
and
mov
int3
xor
xor
call
cmp
inc
sub
sbbb
mov
inc
ja
cmp
js
lods
in
loop
cwtl
idivl
pusha
loop
fcmovnu
popa
out
jnp
ret
out
pop
and
pop
ja
pop
pop
out
pop
lods
arpl
jle
cmp
sbb
loope
sbb
push
cs
xchg
xchg
cltd
test
mov
push
shrl
inc
das
enter
shll
pop
xor
add
adc
cmp
fimuls
pop
dec
out
mov
push
xchg
aaa
dec
or
ficoms
jmp
dec
cmp
clc
fs
inc
fs
xchg
pand
popa
call
xlat
pop
les
repz
mov
stos
mov
lods
xchg
out
cmp
cwtl
and
or
xorl
lcall
insb
xchg
pop
push
xor
shll
sahf
test
jne
or
in
sbb
cmp
mov
inc
jo
pop
loop
push
sbb
push
test
cmpsb
insb
mov
mov
clc
mov
loop
js
cmp
push
in
test
xor
mov
movsb
mov
adc
mov
in
xchg
sub
jns
jne
push
pop
lods
mov
and
sti
jle
bound
mov
jecxz
shl
jg
ja
cltd
mov
inc
mov
aas
imul
scas
sbbb
cwtl
loopne
neg
sti
jae
sub
clc
cltd
fwait
mov
adc
in
add
xor
arpl
sti
mov
jmp
repz
xlat
lret
add
xchg
aad
xor
xchg
push
leave
xor
rolb
repnz
push
and
addl
xor
jl
negl
mov
dec
movsb
movsbl
inc
cs
stc
fidivrl
gs
sub
popa
add
sti
pop
adc
mov
jno
nop
dec
jns
cmp
and
daa
add
cmp
insl
stos
cmp
sbb
test
rclb
push
popf
push
adc
xor
movsl
adc
pop
dec
and
out
mov
subl
mov
and
sahf
insb
mov
arpl
adc
imul
outsl
cmpsl
dec
cmp
fmuls
dec
lock
mov
push
add
loopne
sbb
fucomp
mov
inc
js
mov
ja
shll
mov
stos
loop
pop
inc
mov
push
cmpsb
xor
mov
popa
push
pop
fwait
stos
lds
bound
outsl
incl
adc
divl
push
lea
jns
jne
cltd
lock
lods
mov
mov
ret
and
mov
les
ret
in
adc
push
xchg
rol
mov
mov
jno
shl
sbb
cmp
inc
xor
cmp
xchg
or
and
mov
fwait
adc
adc
outsb
scas
ret
roll
popa
lock
mull
xchg
and
orb
mov
or
add
push
xorb
inc
hlt
or
ljmp
pushf
dec
pop
mov
jno
je
loopne
rorl
pop
mov
or
dec
jmp
sub
popf
mov
imul
pop
xlat
aad
rorb
push
cmp
xlat
mov
mov
xorb
dec
out
outsb
outsb
mov
jo
push
xchg
xchg
pop
inc
push
adc
adc
sbb
outsb
inc
call
out
in
jns
dec
mov
call
icebp
cmp
sbb
test
add
mov
jno
cld
or
nop
push
add
stc
jae
ljmp
mov
mov
inc
es
imul
outsl
mov
mov
cmp
fsts
das
and
jecxz
aad
dec
cmp
in
cmpsl
inc
adc
cli
pop
or
xchg
repz
add
popf
shll
outsl
js
test
and
rolb
rorl
sbb
mov
pop
in
in
mov
sbb
addr16
ret
test
and
or
aas
lds
iret
sarl
xlat
test
pop
push
xor
mov
ja
mov
fnstenv
loop
ja
inc
aaa
mov
mov
or
xchg
jl
clc
pop
pop
sbb
or
inc
inc
inc
sbb
daa
jle
mov
add
dec
insb
je
push
or
in
imul
dec
xor
out
insb
push
sbb
xchg
inc
mov
aas
stc
sbb
movsl
xor
and
std
fstpl
cmp
dec
xchg
gs
shll
or
std
outsb
push
cld
ljmp
shl
data16
lahf
jp
test
cmpsl
dec
clc
fstp
sbb
adc
addr16
mov
clc
in
cwtl
and
enter
cmp
sbb
test
adc
push
jg
aaa
jb
cmc
xchg
inc
lods
sarb
xchg
scas
scas
pop
sahf
dec
xor
ret
push
enter
jo
dec
pop
fcmovne
push
mov
sbb
les
icebp
iret
lods
mov
hlt
lcall
nop
out
sub
imul
insl
je
push
in
mov
dec
repz
repnz
cltd
imull
pushf
inc
jge
es
inc
xor
and
pop
repnz
dec
or
les
and
and
jno
xchg
cmpsb
pop
mov
adc
movsl
sbb
sub
add
aam
adc
shr
inc
push
xlat
out
mov
dec
push
arpl
inc
push
sbbb
xchg
int3
stc
cmp
lcall
nop
cld
sub
lret
pop
jae
imull
loope
loope
push
mov
out
jae
es
scas
xor
insl
addl
roll
das
mov
in
mov
daa
pop
mov
dec
push
push
inc
dec
mov
rcl
std
mov
dec
mov
jnp
leave
loope
lock
jns
lret
movsb
inc
in
pop
jne
les
das
out
dec
adcl
insl
cwtl
jns
roll
jns
sbb
iret
test
out
push
push
ret
xchg
addl
jg
mov
mov
mov
std
mov
xor
or
leave
cs
loopne
and
push
xorl
cmp
push
mov
das
xor
in
insb
jmp
leave
xor
test
in
imul
jle
insl
jge
lods
cmpsl
shlb
mov
or
mov
lret
ds
fcmovu
dec
ficoms
sbb
imul
adc
popa
out
je
bound
mov
xchg
jg
mov
mov
stos
out
into
sbb
inc
xchg
xchg
and
cmpsl
stc
jae
mov
rol
pop
sbb
xor
jae
imul
pop
jmp
inc
shrl
iret
inc
mov
cmc
mov
aaa
jbe
and
leave
sub
popf
test
adc
jbe
daa
fldenv
stos
push
xor
fstl
xor
inc
in
sbb
loop
cmp
jmp
ret
js
mov
inc
adc
pop
andl
fwait
push
out
or
mulb
ja
xor
mov
sub
jno
mov
fwait
popf
mov
pusha
adc
mov
push
rorl
inc
adcl
imulb
sub
lods
enter
jb
movsl
mov
das
push
or
rol
push
scas
fsubr
push
jmp
pop
les
inc
pop
adc
cmp
out
xlat
lea
cmp
lds
dec
cltd
push
repnz
push
rcl
cmc
adc
lods
fwait
test
mov
pop
outsl
mov
idiv
mov
icebp
inc
sub
mov
int3
mov
out
gs
lock
push
sub
imul
mov
pop
sahf
loopne
cmp
adc
sub
xlat
in
mov
aaa
enter
jge
hlt
add
sbbl
es
jp
dec
stos
xchg
gs
mov
outsl
cltd
mov
cmc
jge
push
mov
dec
sbb
jp
cmpsb
cmp
insl
jp
and
push
repnz
aas
ret
test
jo
pop
push
lods
xchg
test
iret
movl
inc
aaa
and
mov
pop
pop
test
into
mov
mov
cwtl
mov
popa
adc
or
pop
sub
dec
and
jbe
fdivrs
jmp
xchg
jo
push
sbbb
add
dec
adc
fadds
outsb
addr16
in
ja
sub
loopne
cltd
xor
mov
aad
push
pop
adc
mov
stc
inc
lods
sti
daa
sbb
fldcw
es
fcomp
ds
popf
movsl
iret
jecxz
cwtl
push
push
adc
nop
in
inc
mov
addr16
mov
inc
fbstp
scas
or
sbb
dec
js
mov
je
out
add
jo
mov
mov
bound
dec
scas
out
push
lock
movsb
mov
xor
push
sbb
or
fldcw
xor
movsb
and
and
cmc
cli
pusha
sbb
sbb
xor
push
add
jmp
jl
clc
jle
jo
cltd
jl
test
test
adc
negb
enter
xchg
nop
fidivs
sti
lcall
fcompl
add
insb
ljmp
inc
es
loop
inc
mov
mov
sub
add
jl
adc
push
xor
subl
cmp
std
cmpsl
dec
ret
movsl
negb
add
add
stos
rcr
fisubl
pusha
hlt
out
push
add
dec
rorl
call
cmpsb
fs
out
ss
cmp
jl
orl
and
lock
aaa
cwtl
test
mov
lcall
movsb
pop
xchg
add
cmp
inc
jne
out
lret
xchg
push
pop
and
push
cli
shrb
pop
aad
ret
add
sub
test
addb
call
cmp
inc
loopne
in
inc
mov
or
hlt
iret
pop
push
jnp
push
sub
mov
nop
or
cmc
mov
movsl
mov
gs
stos
push
bound
mov
out
cld
stos
ljmp
mov
sarl
xchg
inc
movsb
pop
jae
push
push
push
sar
test
lret
lods
xor
pop
cli
jecxz
mov
cmp
xor
jne
mov
aaa
rcrl
lret
or
push
rcrb
pop
push
in
outsb
push
adc
adc
jae
sub
pop
dec
dec
cld
scas
cmpsb
cs
ror
out
mov
test
xchg
gs
or
das
add
scas
cmc
push
fmull
dec
jge
xor
mov
xchg
jnp
pushl
push
and
shll
lods
push
pop
push
push
sub
and
mov
cwtl
idiv
pop
repnz
jbe
xchg
sub
fucomip
cmp
and
mov
pop
sbb
nop
cs
stos
into
inc
jns
jo
inc
ficoms
cs
imul
inc
mov
dec
push
mov
add
xchg
pop
out
and
xlat
mov
jae
sti
loop
fadds
mov
jne
adc
fnstsw
mov
es
mov
addr16
xlat
mov
xchg
push
cmp
movsb
loope
pop
pop
rep
or
xchg
cmp
in
repnz
cmp
add
movsl
cmp
jbe
push
fstpl
pop
popa
pop
cmp
cltd
clc
shll
cmpsl
inc
push
cmc
mov
xor
addr16
pop
jbe
ficoml
adc
sahf
leave
jne
stc
jne
cmc
aaa
push
inc
or
ror
mov
mov
ljmp
and
mov
seta
jo
and
ret
mov
mov
inc
mov
add
sti
fidivl
pop
sub
mov
cwtl
sahf
sbb
movsl
test
or
ljmp
stc
into
out
push
add
loope
fsin
cs
out
filds
pop
in
xchg
push
divb
pusha
sahf
movsb
inc
push
imul
cmp
lcall
in
pusha
mov
push
xchg
pop
leave
adc
dec
icebp
int
movsl
dec
jnp
std
dec
lods
mov
sti
xor
in
adc
decl
xor
pop
cmp
mov
ffree
popf
dec
pusha
aas
imul
pop
jno
mov
xchg
es
mov
mov
jle
iret
filds
pop
in
scas
cld
xchg
ret
pop
into
pop
sub
and
push
push
or
pushf
leave
add
int3
jns
jmp
ljmp
mull
movsb
fdivl
lea
sbb
inc
call
mov
pop
push
jp
mov
jg
adc
sbb
push
sub
fidivrl
inc
jo
cmpsb
add
pop
imul
sub
mov
mov
dec
xor
daa
in
nop
sahf
in
clc
sbb
into
pop
add
or
imul
pop
dec
or
insl
xchg
xchg
dec
cmp
cmp
arpl
mov
jge
lcall
clc
mov
movsl
and
push
push
nop
sub
add
popf
fists
test
or
jg
ficomps
or
lods
jnp
sbb
ret
out
adc
sar
lods
adc
push
gs
xchg
in
cmp
dec
movsb
push
add
mov
aad
inc
pop
push
or
add
clts
ja
stc
leave
push
cmp
fimull
mov
inc
test
xchg
jns
mov
lods
repz
lods
xchg
jo
and
scas
mov
cmp
out
inc
lret
test
lods
pop
jmp
and
and
sbb
pop
dec
jo
cmp
push
or
stos
xor
inc
mov
lret
or
mov
or
or
mov
xor
inc
dec
jae
and
sahf
sub
fidivrs
fldt
fwait
es
jo
cmp
jge
insl
cs
dec
outsl
sbbl
mov
das
out
ret
in
jle
lods
mov
cli
inc
dec
inc
aam
mov
pop
sbb
in
nop
and
pushf
aad
aas
xor
mov
ss
mov
add
jl
push
push
pop
inc
pop
sub
jns
shl
popa
inc
dec
fbstp
add
or
es
sub
mov
add
push
and
and
jno
in
mov
into
pop
sub
xor
sbb
aas
fwait
stos
loopne
add
push
push
mov
mov
pop
and
push
sbb
pop
jo
insl
in
leave
mov
mov
sbb
mov
mov
sbb
mov
int3
push
add
jae
test
cmp
sub
ds
xor
jno
pusha
dec
mov
jno
out
das
sahf
mov
mov
out
out
or
aam
mov
das
inc
imul
enter
cmc
dec
das
dec
pop
jbe
xlat
jg
xlat
ljmp
lret
es
sub
pop
xor
in
jo
mov
cmpl
pop
cmpsb
ljmp
ja
or
and
jb
pop
pop
mov
lds
insl
push
push
inc
loopne
out
mov
lahf
popa
es
cmpsb
in
and
lds
js
add
xchg
pushf
mov
fwait
dec
in
adcb
cld
clc
call
ljmp
mov
popa
test
shrl
inc
ljmp
xlat
dec
aas
daa
dec
std
jl
shlb
fmul
lock
add
push
std
fidivrs
push
cmp
es
out
dec
add
arpl
fildl
jmp
mov
sbb
js
sbb
into
test
xlat
fdivrl
scas
xor
pop
inc
pushf
shlb
hlt
jmp
jnp
fsub
rcrl
int3
mov
xchg
daa
testb
jle
sti
test
mov
sbb
out
mov
push
inc
xchg
lds
push
mov
cmpsl
iret
shrb
xchg
in
push
push
aaa
bound
test
daa
xchg
push
sub
add
hlt
icebp
jns
jno
push
xchg
in
xchg
out
int3
adc
mov
push
insl
imul
sarl
mov
sbb
and
and
dec
mov
or
or
push
xchg
mov
sti
cmpsl
lea
sub
jae
ds
add
mov
jno
stos
sub
ficoms
repz
stos
out
mov
xor
lock
push
mov
push
xchg
movsb
stos
dec
shll
sahf
push
adc
cs
fistl
jmp
jno
lcall
call
out
add
push
fldl
sub
mov
mov
xchg
lcall
pushf
inc
mov
xor
shrb
int3
fwait
jge
push
in
xor
cmp
fwait
cmp
sub
inc
fcmovnu
sar
and
repz
cld
dec
test
push
pop
or
sahf
iret
xchg
jns
mov
push
inc
shlb
test
mov
addl
adc
xor
inc
fwait
movsb
shrl
imul
xchg
fnstcw
mov
sub
mov
les
adc
mov
push
jae
stc
push
push
decb
dec
stos
or
pop
pop
pop
pop
jecxz
ljmp
mov
daa
lods
scas
ret
lcall
test
jno
insl
jp
cmc
cmp
add
sti
xchg
sbb
shlb
stos
mov
push
xorb
mov
sbb
jno
xlat
ficoms
pushf
inc
in
add
or
push
dec
mov
or
das
sbb
xor
pop
and
xor
pusha
xor
das
filds
int3
lock
arpl
xor
sbb
out
pop
pop
push
xor
arpl
jmp
sub
notl
in
je
lods
cmpsl
mov
sub
cmp
pop
adc
ret
jbe
dec
out
cmp
jbe
call
js
pop
clc
mov
jl
adc
sub
jno
pop
xorl
shlb
inc
add
dec
nop
pushf
pusha
push
inc
loope
pop
ret
testl
jno
ret
push
inc
sarl
call
mov
outsb
adc
mov
js
call
and
push
imul
push
pop
push
mov
in
dec
dec
dec
dec
out
adc
jecxz
push
out
jl
lret
aam
mov
pop
lret
out
add
jae
pop
fisttps
adc
les
sti
cld
xchg
xor
push
cwtl
sub
stc
mov
mov
int
mov
lds
lret
cmp
in
add
or
adc
cmp
or
scas
adc
mov
dec
fistps
std
mov
xor
das
imul
or
aad
add
xor
pushf
test
and
cld
mov
and
inc
data16
iret
cmp
xor
mov
pusha
push
xchg
test
scas
loopne
sbb
cwtl
icebp
jne
movsb
dec
xchg
int3
arpl
pop
dec
mov
inc
fs
mov
lods
cltd
xchg
dec
push
xchg
adc
in
pmaddwd
ret
fnstsw
sbb
shrb
repz
mov
out
jmp
push
je
mov
sbb
cmp
pop
out
or
rolb
out
lock
sub
roll
fstl
test
jno
pop
lock
je
shll
pop
jnp
mov
inc
inc
shll
xor
add
push
xor
imul
repnz
mov
cli
rorl
out
xchg
test
mov
idivl
adcl
dec
jne
in
sbb
push
mov
test
sahf
sub
ret
shll
dec
icebp
out
dec
ficoml
shlb
push
push
xchg
leave
fsubrs
repz
cmp
test
xchg
out
ds
loop
jp
dec
lret
bnd
sbb
js
lcall
test
jo
les
pop
inc
mov
movsb
mov
inc
xor
shlb
out
xchg
int
add
dec
fmuls
push
xchg
adc
pop
push
dec
adc
xlat
daa
push
adc
loopne
mov
add
dec
jmp
dec
push
pop
arpl
adc
pop
mov
xchg
jo
xchg
jns
pop
xor
stc
fdivrl
ljmp
cli
xchg
push
xchg
sub
jmp
lds
dec
cmp
imul
int
lret
cld
mov
imul
iret
mov
jg
orb
pop
xchg
imull
jecxz
jge
outsb
jp
mov
lods
insb
dec
pop
push
jl
pusha
imul
mov
insl
cmpsl
lods
out
sbb
sbbl
div
ss
faddp
mov
insl
in
and
pop
ljmp
sub
adc
and
mov
faddl
pop
inc
mov
mov
cwtl
pcmpeqd
sbb
fucomip
cli
mov
add
cs
push
mov
or
inc
pop
xchg
jno
fwait
movhps
inc
outsl
jo
ss
cmp
in
jmp
or
add
push
adc
fsubrl
xchg
xor
jne
jbe
sbb
push
loope
ja
and
dec
push
mov
or
dec
mov
xlat
inc
popf
mov
xor
shll
outsl
cmp
lahf
inc
shrb
inc
mov
jae
sbbl
das
add
fwait
add
cwtl
xchg
stc
pop
int3
sub
les
repnz
lret
rclb
jecxz
and
test
xor
xor
fwait
popf
andb
pushf
dec
lahf
xchg
mov
jle
mov
cmp
lods
xchg
mov
add
mov
mov
adc
sbb
cmp
push
ljmp
sbb
cmpsb
ss
stc
add
or
loopne
lods
lds
push
push
mov
mov
pop
xor
pop
into
jb
ret
pop
repnz
pop
jbe
lret
pop
mov
dec
push
or
popf
loope
dec
sbbl
mov
jmp
pushf
aad
dec
or
sbb
add
mov
movsl
pop
cmc
and
fdivs
push
pop
loop
into
pop
dec
pop
push
adc
mov
insl
dec
cs
dec
mov
mov
call
movsb
nop
sub
je
push
cmp
iret
ror
out
sub
in
in
dec
add
pop
push
cmc
cmp
inc
les
pushf
idivb
push
cwtl
add
cmp
jg
push
movsl
jmp
mov
mov
mov
cmp
mov
negl
divl
sbb
push
movsl
mov
jne
jno
pop
rcll
or
cmp
fdivp
mov
stc
jmp
add
outsl
enter
idiv
lahf
lret
mov
mov
jne
fcmovnu
jp
inc
dec
ret
add
or
js
or
inc
and
scas
push
shr
inc
iret
loopne
iret
leave
fidivs
pop
adc
push
shlb
je
test
aas
fs
push
dec
out
mov
lret
xor
xor
mov
sub
in
push
int
das
xchg
add
jae
aad
adc
adc
jg
mov
sub
inc
mov
or
imul
dec
int3
popf
push
jb
mov
mov
add
dec
and
mov
leave
sub
adc
jne
jnp
sbb
mov
mov
dec
push
cmc
je
xchg
sub
push
xchg
fistpl
xchg
mov
dec
popf
dec
xchg
cmp
mov
push
push
aas
bound
jg
and
inc
ss
sub
and
cltd
insl
insb
sbb
xor
xchg
cmp
fiadds
je
jo
cmpsl
push
mov
popf
sbb
fstl
jmp
pop
js
mov
movl
dec
xor
or
xchg
jnp
cmpsl
dec
fistpl
lahf
aas
push
insl
mov
add
inc
sbb
inc
mov
push
mov
pop
pop
bound
repz
or
fldcw
fmuls
sbb
repz
fistps
mov
es
mov
xor
mov
frstor
or
xor
pusha
loope
sub
mov
sarl
pusha
movsb
dec
lea
or
mov
jne
out
jo
and
out
add
icebp
add
test
cmpsb
cmp
testl
mov
cltd
cmpsl
repz
bound
mov
add
cmp
push
fimuls
cmp
and
jmp
jle
out
int
sbb
jmp
int
jb
adc
pop
aad
inc
pop
add
and
dec
int3
push
push
lods
dec
insl
or
pop
inc
test
and
dec
xchg
and
lcall
push
cli
les
orb
inc
cli
mov
es
rclb
sti
add
aam
js
dec
cmc
sahf
cmp
add
xor
popf
popa
insl
lcall
pop
ja
iret
imul
xchg
mov
adc
xchg
adc
cmpsl
popa
cmpl
mov
scas
lcall
int
jbe
sub
sbb
xchg
push
pop
sahf
or
pop
dec
hlt
in
mov
hlt
sti
add
dec
lods
jmp
sub
xchg
xchg
xor
lret
icebp
daa
pop
or
cmc
pusha
sbb
inc
sbb
fnstsw
add
sbb
div
adc
push
sub
cmp
shll
and
mov
sub
pop
xchg
popf
notb
in
ja
aad
mov
dec
add
aam
mov
push
jns
loope
cmpsl
loope
mov
jecxz
push
fisubl
dec
std
loop
cli
gs
push
inc
jmp
xchg
pop
mov
dec
nop
add
je
and
arpl
jae
lahf
xor
jmp
cltd
xor
add
and
xchg
nop
xor
int
jne
jle
or
mov
ds
add
mov
sub
pop
fcomps
or
dec
inc
pop
popf
push
xchg
jp
in
je
in
repz
leave
or
popf
cwtl
jle
adc
arpl
push
mov
cmpsb
cmp
std
nop
mov
cmpsl
popf
pop
xchg
mov
mov
mov
rcrb
xchg
and
mov
mov
ds
mov
icebp
add
mov
pop
xchg
lea
and
pushf
adc
push
mov
aas
or
int
inc
cmpsb
ja
into
outsl
insl
daa
lret
cmp
rclb
mov
mov
repnz
int
loope
mov
popf
clc
les
mov
mov
sub
test
cmp
repnz
fdivrp
rorl
call
mov
cmpsl
sbb
int
add
xor
in
push
push
pop
es
les
cli
dec
xchg
lds
push
cmp
pusha
data16
aam
insl
xorb
imulb
dec
and
push
out
xor
or
fsubs
std
sub
cmpsl
mov
adcl
cwtl
pop
mov
popa
xchg
push
jmp
orb
or
ret
push
push
gs
mov
xor
test
xor
adc
cltd
sbb
sbb
lahf
and
pop
mov
out
cmp
sti
pop
jecxz
cli
loope
push
or
jne
cli
pop
int
les
mov
dec
nop
and
insl
stc
mov
inc
sbb
dec
pop
pop
test
scas
bound
and
xchg
rolb
ss
sbb
dec
inc
fnstcw
outsb
leave
mov
out
adc
xchg
jmp
test
adc
pop
shr
sub
mov
cmp
mov
sub
xchg
jecxz
stos
out
push
fisubl
sub
jmp
jae
int3
lcall
popa
add
in
sbb
stc
outsb
repnz
ds
mov
aas
pop
clc
dec
out
in
mov
out
enter
mov
andl
jae
lret
adcb
lds
jne
fstpl
push
mov
jae
roll
dec
xchg
jmp
test
push
push
pusha
adcl
loopne
inc
or
sub
add
int
nop
mov
pushf
sub
sbb
xchg
or
mov
loope
xchg
dec
mov
jnp
add
cs
rorb
mov
add
mov
xor
insl
enter
adc
call
scas
add
popa
xchg
ss
xchg
mov
pop
jmp
pop
or
mov
add
aas
add
inc
out
sbb
shlb
sub
jns
imul
sub
add
pop
mov
dec
lds
push
std
adc
adcb
and
ds
push
cwtl
sub
lahf
adc
inc
sub
mov
push
scas
leave
outsb
push
mov
lahf
sub
mov
movsb
pop
test
insl
ret
scas
dec
mov
cld
popl
push
aaa
and
jg
outsl
xor
fbstp
shll
push
and
and
jmp
push
in
xchg
xor
cmpl
lods
lock
sub
data16
insb
int3
js
pusha
jecxz
mov
fnsave
imul
xlat
sub
cmpsb
sub
push
pop
jl
mov
dec
sub
icebp
in
movsl
or
je
lock
loop
sub
ljmp
sarl
jae
decl
push
test
scas
jb
mov
mov
pop
test
lds
dec
sbb
ret
pop
push
inc
cmpsb
xlat
sub
outsb
inc
bound
mov
loope
mov
mov
jl
rolb
repnz
mov
ss
or
pop
mov
lods
sub
or
xchg
sbb
fldpi
pop
lret
sbb
pop
and
jb
arpl
push
jns
push
push
aad
addr16
sbb
lahf
popf
jne
mov
aam
and
lret
stos
sub
jns,pt
cmp
add
fstpl
jle
mov
leave
inc
std
ss
test
rclb
xchg
mov
push
mov
fmull
aas
jb
xor
cli
xor
mov
enter
sarl
sbb
push
gs
mov
add
dec
and
add
movsl
ds
call
or
frstor
sub
jp
sbb
shrb
pop
outsb
cmpl
ret
add
popa
inc
fidivrs
jns
push
stos
imul
int
sub
jmp
icebp
loope
jle
mov
mov
sbb
jno
arpl
mov
repz
fnsave
jg
gs
pop
mov
outsl
cltd
jbe
jmp
fs
adc
sub
jno
div
inc
lahf
mov
ja
add
addb
popf
or
insl
orb
popa
xor
or
ljmp
cmpsl
pusha
dec
cmp
add
mov
outsl
sbb
push
cmp
inc
push
pushl
outsb
adc
leave
stc
and
sahf
mov
scas
sub
inc
cmp
sub
data16
dec
clc
repnz
cs
jae
movsl
pop
dec
insl
jge
push
ja
in
inc
lock
inc
ret
push
mov
jnp
add
mov
dec
je
lcall
lods
testb
shrl
call
xchg
imul
test
xchg
mov
negb
pusha
or
out
and
movsb
in
fdivrl
shlb
loope
cmpsl
pop
sub
sahf
icebp
aam
sti
push
in
xlat
icebp
adc
mov
push
adc
jno
adc
pushf
xchg
mov
loopne
scas
gs
lret
lods
jg
cli
scas
cmp
xchg
and
inc
add
sahf
or
mov
cmp
cmp
js
cmp
outsl
push
mov
call
lods
push
clc
or
inc
mov
jg
fistl
xchg
xchg
leave
jp
push
and
cmp
and
popa
in
cmpsb
test
pop
xchg
mov
data16
cltd
cmp
insl
sahf
cli
push
adc
jmp
xchg
jmp
jbe
js
push
push
leave
lods
mov
cmpsl
adc
cmp
lods
test
lret
insl
scas
inc
pop
pop
jmp
dec
pop
sbb
mov
shlb
cmp
xlat
jmp
xchg
mov
adc
sbb
shrl
divb
xor
jns
lds
or
into
enter
enter
clc
cmp
mov
testb
add
lcall
pop
mov
sti
and
or
mov
out
lea
xchg
inc
jl
insb
xchg
movsl
push
je
mov
stos
jmp
out
xchg
add
loopne
into
lds
fxam
xchg
inc
jmp
adc
mov
and
adc
push
cmp
adc
popa
stc
dec
addb
jecxz
xor
lret
dec
push
pop
fldl
add
loope
adc
js
enter
ljmp
adc
pop
xchg
inc
sbb
sub
jp
cmp
ljmp
xchg
nop
ret
test
ja
adc
movl
aam
filds
pop
jne
push
xchg
push
div
cmp
pop
jno
sbb
loope
mov
mov
mov
sbb
inc
cwtl
lret
sbb
adc
test
push
loopne
in
add
mov
int3
subb
adc
pop
sub
and
cmc
add
cs
fimull
sub
sub
cmpsl
mov
dec
jp
in
adc
loope
cltd
repnz
cli
xor
pop
in
out
push
xor
call
loopne
mov
jno
and
test
stos
test
out
xor
andb
std
out
iret
les
mov
fwait
push
je
js
adcb
in
pushf
imul
xchg
test
test
xor
cmp
inc
adc
popa
pop
jno,pn
in
nop
push
int3
xchg
and
or
or
lcall
leave
es
clc
dec
out
lock
lret
adc
xchg
out
sbb
push
push
push
rol
hlt
in
les
dec
ds
out
sub
popa
jle
or
push
sarl
in
jmp
hlt
xchg
iret
sbb
fmuls
or
stc
in
push
aad
sub
cmp
pop
in
cmp
cmp
movsb
int3
lret
sahf
cwtl
inc
sbb
mov
enter
add
adc
std
repz
jecxz
jo
call
mov
cltd
fadds
jge
mov
das
jle
rclb
cmp
rcrb
pop
sbb
notb
push
int
lock
movsl
ljmp
cltd
and
cli
push
jb
push
shlb
fmuls
sub
fidivl
xlat
jmp
dec
cmpsl
mov
xchg
mov
daa
dec
repnz
les
in
add
sbb
imul
inc
or
push
cmp
sub
push
xchg
fnstcw
cmp
mov
cmc
pop
bound
test
sahf
sbb
hlt
shll
pop
mov
in
push
xchg
enter
lret
mov
pop
xor
lea
sbb
fidivrl
pusha
add
cld
lds
dec
xlat
andb
call
aas
jmp
xchg
enter
enter
cmpsl
mov
push
xchg
sub
pop
shlb
dec
xchg
iret
push
lret
dec
stos
inc
mov
aaa
jbe
mov
mov
mov
arpl
filds
xchg
insl
mov
add
pop
cmp
jecxz
adc
daa
sti
bound
xchg
mov
xchg
pop
xor
inc
pushf
or
sbb
pusha
xchg
sbb
sub
repnz
mov
or
cmpsl
mov
cmp
adc
mov
scas
cmovge
ret
mov
sub
xlat
imul
mov
testb
cmpsb
jno
pop
ror
mov
in
fwait
sahf
das
pop
das
shrl
ret
cs
dec
test
les
icebp
pop
jp
out
sbb
shrb
mov
push
pushf
pop
dec
mov
jae
jl
decl
dec
pop
test
enter
cmp
or
mov
stos
push
lods
cltd
dec
jo
push
push
iret
jo
sbb
mov
jne
pop
iret
cvttps2pi
cmp
sub
mov
iret
leave
bnd
inc
fstpl
xchg
inc
push
jno
rcrl
or
sbb
add
dec
rcrb
mov
inc
xorl
fadds
xchg
lock
inc
stos
xchg
insl
das
dec
outsb
aad
movsb
arpl
cmp
jl
adc
pop
xchg
mov
mov
mov
cmc
pusha
lea
iret
bound
nop
jne
insb
mov
lock
pop
pop
dec
fildl
xor
cs
ds
fisubrl
xchg
inc
mov
shrb
or
adc
addr16
lock
outsl
push
xchg
and
or
adc
imul
mov
iret
lea
inc
cmp
cmp
popf
add
out
mov
ljmp
movsl
popf
cli
add
mov
pusha
dec
xchg
outsb
xor
repz
add
arpl
outsl
jmp
pop
or
pop
dec
xor
aas
mov
andl
cmp
lcall
aas
mov
stc
fs
xchg
mov
xchg
cmp
sub
orb
push
jecxz
push
mov
fidivrl
push
adc
rcrb
nop
nop
loope
inc
mov
sbb
add
fidivrl
xorl
cwtl
movsl
lret
lcall
or
or
divl
xchg
xlat
and
pop
mov
fcmovbe
fsubrl
cmc
mov
mov
mov
test
add
cmp
xlat
sub
les
pop
dec
cltd
adc
fisubl
test
int
pop
mov
lock
xor
dec
lcall
mov
ss
in
loopne
add
test
and
fdivl
mov
pop
dec
inc
mov
sub
inc
inc
mov
mov
scas
test
stc
jb
and
mov
jo
and
fcomps
mov
shrl
jb
push
jl
imull
xchg
ds
push
lods
es
or
mov
ss
push
adc
add
cmpsb
jns
test
adc
int3
add
int3
cmp
add
cmp
cmp
gs
mov
ss
adc
rorb
dec
in
cmp
dec
dec
mov
xchg
mov
mov
repz
das
in
test
mov
push
mov
xor
repnz
scas
stos
lods
and
or
out
jmp
push
lds
mov
leave
sub
mov
mov
cwtl
test
negl
mov
sbb
mov
push
lods
adc
or
popa
imul
add
mov
stos
leave
cltd
cmp
ds
sub
sarb
pushf
pop
mov
pop
call
sbb
sarb
fstpt
xchg
ret
stos
sbb
shlb
pop
fmull
lret
test
cmp
stc
das
inc
add
mov
mov
ret
pop
notl
repnz
add
push
mov
push
shr
sub
add
aaa
or
in
xchg
in
ja
mov
pop
shll
mov
and
pop
bound
jno
dec
fisubl
arpl
mov
and
adc
mov
push
pop
add
sbb
subl
jae
lods
pop
stc
aam
adc
pushf
or
xor
imul
xlat
and
loop
push
jmp
lea
out
imul
and
icebp
ja
in
pop
cmp
cmp
mov
cmp
dec
lock
push
mov
cltd
cwtl
into
pop
dec
jnp
adc
mov
mov
enter
mov
gs
insb
inc
in
daa
loopne
sbb
adc
lds
stc
js
or
popa
inc
cmp
and
add
dec
in
ret
inc
cmc
test
out
stos
cmpsl
pop
jge
push
xor
jecxz
jns
jmp
shll
pop
adc
dec
adc
mov
stos
nop
xor
imul
movl
cli
mov
jmp
in
enter
pop
lret
inc
and
imul
ja
fcoml
mov
mov
jo
lret
cmp
mov
sbb
iret
enter
dec
xorl
jb
loop
outsb
sbb
push
repz
popa
lea
xchg
cmp
lods
or
shl
xor
aaa
dec
xor
movsl
ret
pop
xlat
fldcw
pop
mov
ds
jae
cvtps2pd
es
pop
iret
xlat
into
dec
mov
mov
gs
cld
ret
xchg
sbb
dec
adc
ret
xchg
jecxz
sub
jmp
dec
pop
push
mov
or
shl
xchg
inc
cwtl
push
xchg
jne
pop
mov
mov
fcomps
cli
pop
fisubs
sti
cmp
scas
adc
addl
or
stc
xlat
cmp
movsl
push
jg
ljmp
aaa
xor
gs
dec
add
or
jge
xchg
sbb
sub
movb
pushf
mov
pop
nop
xchg
push
push
add
cmc
fbstp
adc
fistps
mov
mov
es
imul
stos
iret
xchg
repz
fisubrl
xchg
enter
dec
adc
ljmp
loop
xor
jns
das
in
xchg
ret
inc
leave
xor
sub
fwait
insb
xchg
mov
stos
lcall
sub
xor
mov
push
push
cli
xor
cmp
leave
sarb
std
pop
cmp
sbb
mov
xor
fldl
lretw
jg
xor
pop
shr
dec
into
rcl
jo
push
push
idivl
xor
pop
stc
ja
jl
xlat
xchg
pop
xchg
mov
fdivl
mov
add
mov
sbb
add
inc
test
rorb
lahf
bound
ret
add
rcrb
clc
sub
fsubr
and
push
sbb
mov
mov
mov
ljmp
jns
jne
rcr
sub
arpl
scas
sti
pop
dec
cmp
lcallw
popa
jmp
dec
mov
inc
mov
ret
jle
add
hlt
stos
push
ds
int3
dec
pusha
mov
lock
cwtl
repz
cmpsl
jmp
scas
in
xor
call
pusha
or
lds
mov
fisttpl
push
jge
fwait
sbb
clc
test
std
out
mov
in
aad
arpl
cmp
push
insb
js
push
ret
mov
in
xor
cmp
mov
xlat
fdiv
scas
andl
mov
dec
lret
outsb
inc
cs
inc
test
sub
imul
sub
xor
in
xor
scas
jbe
stos
pop
sbb
mov
lahf
aad
icebp
jae
mov
sub
lds
mov
insb
sbb
sbb
loopne
out
xlat
inc
lods
psubsw
push
mov
cmp
dec
popa
loope
cmpsl
mov
jg
sarb
or
pop
in
lds
mov
xchg
lcall
xchg
cmp
lock
pop
mov
out
fsubrl
test
sub
and
in
mov
adc
aas
lret
sub
je
mov
pop
xchg
icebp
or
push
mov
jle
cltd
movsb
filds
fldenv
idivb
scas
mov
add
inc
mov
or
mov
bound
addr16
in
jbe
sbb
nop
sbb
pop
add
into
aam
jge
xchg
jns
loop
xor
negl
adc
inc
pushf
out
out
js
adc
outsl
push
mov
lock
loopne
cld
xlat
out
sbb
add
lods
or
ss
xchg
mov
or
lcall
fadd
iret
mov
push
lock
negl
push
loope
test
add
mov
push
iret
das
adc
sbb
fwait
into
pop
js
adc
mov
mov
xor
out
outsl
stos
cmc
ror
add
lcall
or
mov
mov
aas
scas
add
add
insb
mov
sub
cmp
dec
insb
ret
adcl
movsl
inc
test
push
out
mov
repz
loop
xchg
fwait
push
jne
and
movsl
outsb
cmp
ss
lret
rcrb
pop
sti
mov
adc
pop
arpl
dec
rol
mov
inc
movsl
xchg
jne
inc
mov
movsb
testl
cwtl
aam
scas
sbb
push
addb
scas
or
jge
mov
jecxz
fildl
inc
subb
xor
dec
pop
call
and
ja
mov
fwait
int3
mov
call
cmp
add
cmpsl
xchg
push
push
cmpsb
js
icebp
mov
lcall
xor
push
pop
das
rcl
cmpsb
rorl
in
movsb
cmpsb
or
aas
not
int
icebp
punpckhdq
and
stc
stos
push
nop
or
cmp
jmp
push
rcll
cmpsl
dec
lods
in
mov
repnz
jg,pt
cmp
inc
jne
lea
pop
ficompl
sub
test
jl
inc
loopne
jmp
xor
outsb
mov
xor
mov
or
cltd
add
pop
mov
jae
sahf
daa
push
dec
popa
inc
sub
pop
push
movsl
bound
xor
jne
ret
jle
or
sbb
daa
scas
scas
pop
bound
lods
jne
sub
enter
int3
mov
and
mov
imul
inc
imul
sub
mov
pop
enter
pusha
test
loop
and
lret
lahf
enter
fstps
dec
pop
fmul
xchg
loope
cli
pop
das
push
pop
pop
mov
xchg
loop
das
xor
xchg
aam
leave
cwtl
cmp
fistl
mov
sub
adc
clc
in
sub
les
repz
mov
loope
or
dec
xor
push
fdivp
gs
mov
rcl
mov
loop
inc
test
call
sti
testb
nop
jl
insl
sti
pop
push
push
and
push
cmc
fdivp
xor
in
mov
push
push
enter
dec
jne
fmul
movsl
rorl
shll
outsl
cmp
jmp
gs
ljmp
repnz
adcb
mov
add
int
mov
stc
xor
dec
repnz
mov
ljmp
mov
std
cmp
pop
mov
jmp
ret
jb
dec
pop
xchg
dec
adc
dec
jle
mov
sahf
out
add
insl
pop
sub
xchg
push
cmpl
pop
jne
push
jl
xchg
adc
rol
xchg
xchg
xor
dec
sub
sub
mov
jecxz
push
jae
sub
ss
jns
inc
cmp
shrl
and
lock
cltd
dec
sub
mov
mov
sbb
jne
sub
ljmp
push
push
std
arpl
and
je
lock
call
inc
dec
mov
mov
inc
lahf
mov
pop
xor
in
sbb
mov
fmulp
loope
cld
cmpsw
xchg
ret
inc
and
dec
rcll
adc
bound
sub
jmp
push
ffreep
add
adc
push
mov
ss
lods
pop
mov
pusha
jns
cli
xor
and
adc
jb
pop
scas
jb
lahf
das
pop
or
push
popa
sub
add
inc
mov
sbb
lods
mov
xchg
lds
sbb
mov
pushf
adc
jecxz
mov
incb
inc
push
xchg
sub
push
fcomp
mov
jmp
jo
and
mov
inc
cwtl
lds
inc
mov
pop
sub
cmpsb
scas
pop
dec
cmp
sub
inc
icebp
cmp
xchg
mov
push
xor
pushf
pop
hlt
sub
mov
movsb
inc
cmp
loope
out
imul
push
cld
pushf
or
push
mov
fidivrs
xchg
rcll
push
icebp
fsubr
jp
pushf
imul
push
xor
adc
ficoms
dec
ss
fwait
loope
pushf
mov
aaa
or
inc
ja
push
aas
cmp
daa
sub
mov
je
sub
inc
test
rolb
push
hlt
rcl
test
and
cmp
dec
loope
shll
int3
lcall
fdivrl
cmpsb
jle
adc
mov
inc
inc
daa
sub
mov
outsb
in
inc
xchg
push
aam
lea
push
jmp
inc
jne
gs
xor
ja
and
cmpsb
ret
sbb
dec
mov
daa
xor
inc
cs
cld
and
test
lret
pop
jno
push
inc
jns
cmpb
cmp
jbe
mov
test
lods
jp
jbe
adc
dec
jge
lcall
add
loopne
cvtps2pd
xchg
bound
inc
push
cmp
int3
mov
fisttps
cli
and
hlt
out
data16
mov
test
jl
cmpl
add
pop
ds
fcmovne
sbb
and
js
sti
jns
jno
sbb
mov
sub
inc
dec
xchg
das
mov
sub
fnsave
push
add
in
in
xor
xchg
ds
mov
mov
xchg
testl
leave
out
and
cld
movsb
sub
sbb
cltd
xchg
xorb
fstpl
mov
imul
inc
cmc
add
movsb
sub
dec
or
enter
mov
in
out
push
sub
push
mov
pop
sti
sbb
inc
sub
xchg
stos
ds
xchg
jo
pop
push
push
dec
add
es
xchg
popa
push
insb
lods
fists
or
pop
add
cli
add
push
in
adc
aas
fpatan
or
prefetcht1
test
cwtl
xor
filds
cmp
sbb
sbb
test
ljmp
jge
dec
pop
or
xchg
and
lret
jbe
xchg
leave
ret
out
inc
es
or
pop
mov
jne
fsubl
mov
les
sbb
xor
mov
ss
jns
mov
sub
lods
jle
push
nop
add
xor
mov
pushf
cs
aad
inc
push
stos
cld
bound
and
outsb
rcl
loope
mov
imul
jle
mov
int3
and
jp
in
stc
inc
ret
xor
sbbb
xchg
sbb
pusha
mov
mov
or
fists
sbb
jae
add
xor
adc
mov
pop
outsb
pusha
jmp
insl
jns
scas
insb
xchg
and
mov
ret
pusha
iret
sbb
clc
ror
push
test
arpl
sub
mov
out
pop
jmp
inc
sbb
adc
jl
cmp
jno
and
out
xchg
sti
and
mov
aaa
rol
dec
testl
or
cmp
aas
out
fidivs
insl
frstor
push
mov
xchg
jno
or
dec
dec
push
mov
pop
fildll
dec
dec
jbe
dec
loop
inc
mov
xchg
mov
push
aaa
ja
popa
xchg
faddl
in
sub
fcmove
rol
stos
ret
in
lock
jecxz
jns
jns
mov
pop
mov
pushf
jbe
aad
stos
mov
pop
loopne
cmp
out
out
outsb
insb
in
addr16
int3
xchg
sub
mov
push
or
pop
icebp
and
aas
mov
jne
dec
dec
push
mov
push
movl
and
sahf
cmp
or
imul
add
stos
filds
loopne
es
push
mov
or
repz
cld
pusha
scas
or
movsl
dec
daa
out
add
or
xor
mov
mov
gs
cmpsb
inc
add
decb
es
jle
jo
inc
ja
clc
xor
add
orl
daa
pop
xlat
cltd
sbb
jnp
inc
dec
adc
sub
mov
pop
adc
push
xchg
push
inc
sub
jbe
mov
and
adc
xchg
popf
inc
push
jbe
pushf
sub
daa
adc
std
je
add
xchg
scas
sub
pop
pop
push
xchg
enter
mov
cwtl
jae
loope
ja
cmpsl
test
mov
fs
push
push
xor
sub
push
les
push
fisttpll
stc
pop
test
cmp
add
fisttpl
sbb
sbb
inc
mov
or
daa
les
mov
pop
ret
sbb
popf
cs
scas
fs
jb
pop
mov
fwait
out
mov
stc
dec
inc
lea
ljmp
mov
jno
mov
xchg
cwtl
mov
add
adc
push
jno
mov
call
jbe
push
cmp
inc
add
lea
inc
jns
stos
insl
sbb
into
adc
stos
fwait
pop
imul
jo
fsubr
and
rcrb
xor
cmp
mov
mulb
ret
adc
aam
sbb
sbbb
out
sub
mov
out
sti
test
arpl
arpl
int3
mov
mov
js
fs
sbb
cmp
dec
lock
push
adc
push
pop
dec
xchg
xchg
lcall
and
sti
popf
cmpsb
add
daa
sahf
into
sub
mov
imul
mov
in
mov
mov
mov
ljmp
lret
cmp
push
push
inc
mov
inc
or
dec
xchg
fwait
pushf
mov
ss
int
cmp
fcmovnbe
imul
cmpsb
push
sbb
lods
pop
sub
stc
pushf
add
les
dec
push
adc
test
or
shll
dec
aaa
add
sub
or
lods
jns
imul
sbb
pop
mov
ficompl
and
inc
add
arpl
pop
nop
sub
mov
lods
jp
adcl
push
lods
sub
jl,pt
mov
insl
mov
and
lret
dec
sbb
and
lock
aam
sub
fucomp
lcall
lods
lock
stos
and
lods
sbb
fistps
sub
jge
jge
xlat
loop
adc
mov
or
dec
daa
mov
jnp
leave
mov
dec
push
fwait
les
mov
fs
adc
loope
loope
call
fidivrs
mov
fnstenv
out
push
leave
pop
pop
adc
push
imul
clc
out
cs
adc
cs
pusha
jecxz
das
push
sbb
flds
and
cs
xchg
inc
lret
scas
push
in
jmp
lahf
cmp
cmp
fmull
and
fs
and
mov
adc
mov
push
nop
pop
shlb
jmp
shr
fwait
sub
pop
addr16
xlat
xchg
sub
mov
ret
std
xchg
sub
out
xor
js
divl
negb
pop
push
and
pop
xchg
stos
mov
in
iret
jne
popf
add
shll
lods
cmp
push
add
push
movsb
push
lds
inc
imull
inc
dec
scas
pop
jbe
mul
xchg
fwait
testb
mov
in
pop
fistps
daa
outsb
inc
cmovl
mov
nop
pop
pop
pop
mov
lret
jmp
pop
add
das
cs
and
and
push
mov
fists
mov
stos
js
xchg
mov
aas
lret
sbb
jns
mov
out
call
mov
orb
cmp
sbb
xlat
lret
call
outsb
inc
push
and
xor
cltd
ja
jns
repz
sub
mov
fldcw
mov
push
and
aam
jbe
mov
or
dec
sbb
loop
adc
adc
cld
pop
sbb
inc
cmc
iret
jle
lea
mov
js
loop
shr
lgs
rorl
inc
insb
loop
sub
xor
mov
lcall
popf
xchg
scas
inc
cs
fiadds
add
sub
dec
imul
jno
mov
repnz
rcr
jl
jae
stos
push
xor
imulb
fstps
jbe
pop
xor
notb
dec
xchg
cmp
inc
xchg
test
mov
lock
dec
xchg
inc
jg
lea
jnp
or
jp
int3
call
push
iret
jns
cmpsw
mov
fistpl
mov
rolb
jle
aaa
pop
add
enter
pop
enter
in
add
jle
nop
and
inc
inc
shl
ds
pop
popf
pop
mov
inc
xchg
xchg
int3
fbstp
jae
pop
adc
imull
push
imul
pop
rsqrtps
push
mulb
ljmp
enter
outsl
ss
sub
xor
sbb
js
sub
aad
shl
pop
and
mov
subb
jmp
or
lcall
or
mov
sbb
loop
es
mov
push
out
cltd
adcl
push
pop
pop
test
sahf
daa
ljmp
cmp
xchg
sub
rcrb
ja
add
pop
test
call
mov
out
lods
sbbl
in
test
xchg
inc
leave
nop
fucom
sub
sub
imul
or
sarl
ret
inc
lds
lea
dec
fwait
cld
push
dec
pop
clc
adc
sub
dec
add
dec
aam
ja
sbb
jbe
sahf
ljmp
cmovg
pop
sub
xchg
jmp
nop
add
stc
xchg
sub
jmp
inc
cli
mov
out
pop
aas
adc
xor
scas
xchg
jae
shl
and
dec
outsl
mov
jl
out
lock
mov
mov
cmc
enter
repnz
push
aad
cli
mov
icebp
ljmp
add
daa
inc
jns
in
mov
lea
jg
ret
in
fcoms
dec
inc
out
imul
mov
int3
movsb
pop
mov
sub
imulb
imul
arpl
pop
inc
fwait
int3
push
mov
aaa
mov
pop
cmc
js
sbbb
sbb
fucomip
stc
cmp
jecxz
movsl
inc
mov
inc
pop
or
icebp
and
inc
push
popf
push
pop
jo
sub
inc
xor
push
and
sub
jno
hlt
mov
mov
xor
adc
pop
add
pop
enter
scas
pop
rcll
movsl
fbstp
push
leave
movsb
fstpt
dec
mov
or
sbb
sub
jg
lock
in
push
in
or
jne,pt
push
cld
fiadds
aad
mov
subl
scas
outsl
mov
mov
ret
cmpsl
push
pusha
ret
das
or
aam
mov
fistps
mov
clc
xchg
adc
lods
int
dec
mov
incb
stc
pop
icebp
cmp
ljmp
test
xchg
fcom
mov
inc
pushf
in
xchg
popfw
jl
jge
ficompl
out
loop
rorb
mov
dec
and
popa
mull
xchg
fisubs
or
add
out
int3
add
sub
mov
lods
iret
add
lods
xchg
fs
xchg
repnz
dec
arpl
dec
sbb
sub
ficoml
repnz
xchg
insb
ds
pop
ljmp
push
addr16
xlat
cmp
adc
adc
mov
fcomps
xchg
in
adc
cmp
arpl
mov
push
xchg
fsubr
divb
pop
lret
icebp
cld
jbe
dec
add
push
xchg
in
enter
arpl
icebp
dec
int3
xor
inc
cmpsl
inc
xchg
test
sbb
lret
dec
mov
in
std
xchg
adc
dec
bnd
mov
lods
invd
xor
or
xor
xchg
addb
mov
xchg
enter
and
icebp
sub
mov
insb
cmp
iret
pop
push
cmp
xchg
dec
rolb
imull
aad
sbb
shll
je
mov
cmp
add
adc
pop
inc
fdivl
stos
iret
xlat
xchg
jb
pop
dec
dec
cmpsl
jbe
mov
outsl
cli
imul
inc
mov
mov
adc
loop
mov
loop
inc
sbb
ret
sub
loopne
add
dec
scas
outsb
stos
pop
xor
jbe
loopne
aaa
push
and
and
and
xor
jl
jne
adc
xlat
adc
cld
adc
paddb
pop
daa
test
push
cmp
pop
mov
xchg
repnz
xor
sti
repnz
push
lods
scas
mov
imul
fs
jae
orl
adc
mov
push
jae
cmp
xlat
les
push
js
jne
lods
ljmp
xchg
or
cmp
cmp
adc
js
cwtl
es
jp
int3
or
add
stc
loope
mov
fisttpll
sbb
pop
jne
inc
jg
test
pop
negl
lcall
in
and
xor
jp
sub
in
int3
pop
adc
and
xchg
mov
push
ret
aam
loopne
in
and
jno
mulb
fs
and
adc
cmp
ljmp
adc
xor
jl
jne
dec
shl
out
sub
test
mov
or
jge
or
push
fdivrl
shll
add
pop
mov
aas
in
dec
out
and
xchg
jp
lahf
xor
sbbl
push
mov
aas
rcrb
or
pop
outsb
daa
or
and
ret
fs
sub
xor
mov
int3
mov
sbb
rcrl
test
mov
outsb
or
dec
test
lcall
scas
and
xchg
jle
test
insl
jbe
push
adc
inc
sub
jecxz
dec
xchg
sti
fldt
popa
sahf
outsb
sbb
orl
in
dec
aad
scas
pop
mov
sub
aas
or
xchg
gs
in
sbb
in
fstpt
repz
pop
das
mov
jbe
adc
hlt
xchg
mov
pop
or
jecxz
je
daa
pop
cmpsl
add
cmpsl
js
xlat
cmp
jbe
pop
jne
pop
jo
pop
lds
das
int
lret
aas
hlt
inc
adc
imull
cltd
aas
rcll
je
xor
shlb
cmpl
repz
test
xchg
xor
xchg
inc
mov
pop
stos
je
push
nop
mov
pop
or
sub
or
pop
aad
xchg
adc
test
repnz
mov
pop
inc
cmpsb
xor
das
ret
mov
idivl
sbb
jp
push
jmp
enter
je
lret
mov
jbe
call
mov
loop
aaa
xor
inc
add
lods
xchg
lock
sbb
cwtl
cmpl
inc
dec
aad
idivb
push
lock
jecxz
cltd
call
push
mov
or
inc
sub
call
call
or
adc
xor
mov
sbb
dec
mov
mov
test
xor
mov
inc
sbb
sbb
mov
es
mov
dec
or
imul
pop
shl
lahf
inc
addr16
aaa
add
loop
movsb
jg
sbb
jp
jae
addb
jl
es
push
fistps
iret
cmc
aad
jns
repnz
mov
fwait
dec
lods
out
mov
test
pop
ss
push
push
add
enter
cmp
test
cmc
scas
dec
mov
inc
pop
adc
cmc
push
dec
fdivrs
mov
loop
aaa
jno
mov
call
cli
xchg
adc
ds
not
push
mov
lods
sbb
test
arpl
inc
jmp
mov
ret
add
push
cld
rcll
xor
push
cmpsb
dec
stc
stos
std
repz
push
mov
or
lds
cmp
pop
or
adc
xor
inc
aas
or
outsl
pushf
xchg
mov
xlat
cs
bound
push
fidivl
mov
or
sub
ja
mov
fisubrl
mov
sbb
pop
rcll
insb
push
ljmp
push
sbb
mov
jmp
mov
jns
dec
or
jo
es
ret
jno
xchg
xor
ss
es
dec
sub
mov
fmull
inc
sti
notl
add
scas
mov
xchg
xor
adcb
xor
sub
inc
gs
ret
dec
jmp
clc
int3
push
movsb
jmp
mov
adc
adc
mov
testb
inc
mov
jns
into
jecxz
add
test
loopne
mov
cs
cmp
test
and
jne
push
push
icebp
enter
sub
test
push
test
sub
mov
push
pop
std
pushw
rcll
fiaddl
jns
cli
ljmp
jbe
addb
jp
fisttpll
cmpl
dec
mov
stos
imul
ljmp
loope
jo
inc
sahf
and
sbbb
leave
enter
mov
imull
shrd
mov
push
cltd
in
dec
lea
and
and
xchg
popa
mov
or
mov
dec
push
rcrb
ss
ja
hlt
sahf
mov
jmp
mov
dec
mov
test
loop
sub
pop
xor
dec
insl
dec
and
push
or
sarb
sub
and
push
rorl
rol
xchg
jmp
das
and
iret
ret
lods
int
les
mov
jnp
mov
mov
add
jle
dec
pop
and
inc
dec
ljmp
or
test
clc
enter
hlt
insl
cwtl
mov
in
ret
pop
xlat
rorb
inc
dec
or
ja
jns
nop
or
pop
iret
add
pop
mov
out
cld
fdivr
mov
push
mov
sub
sarb
and
pop
push
in
mov
popl
push
dec
movsl
pop
nop
scas
jg
sub
xor
call
sbb
cltd
push
into
mov
xchg
ljmp
xor
xor
inc
mov
inc
xlat
adc
test
sti
lret
scas
ret
imul
cltd
arpl
fimull
aam
insb
lahf
imul
xchg
dec
js
jg
sbb
sub
or
test
pushf
mov
cmpsb
cld
cmp
repnz
sbb
movsl
add
pop
enter
jge
dec
jno
xchg
lret
push
fnstenv
jmp
das
pop
fstpl
sub
pop
sbb
dec
bnd
pop
and
insb
into
addr16
pop
inc
cmpsb
repz
mov
push
xor
mov
xor
cmp
sub
jnp
mov
dec
into
sbb
mov
outsl
lret
dec
cmp
cld
sub
mov
repz
repnz
arpl
clc
mov
sub
testb
imul
data16
inc
push
or
lret
repz
data16
and
add
mov
sbb
cmp
push
mov
int3
lcall
repz
dec
xchg
mov
repnz
xor
xchg
jmp
fmuls
mov
push
cmp
daa
adc
adc
jae
es
lahf
pushf
xlat
movb
scas
push
sub
mov
adc
inc
or
inc
cmp
cmp
xor
jns
into
add
clc
and
cwtl
cs
icebp
scas
xor
xchg
or
iret
cmpsl
mov
push
adc
add
test
push
push
ss
stc
lret
ds
lahf
xchg
rcrb
clc
aaa
ret
xchg
jno
and
mov
test
sub
jmp
lret
mov
leave
test
mov
or
adc
out
sub
lret
hlt
xchg
aaa
jmp
mov
inc
inc
ret
aad
inc
add
addr16
push
dec
jl
fistpll
inc
mov
cmp
pop
fstpl
add
ja
add
loope
mov
mov
movsl
shll
fstpl
and
sahf
ret
in
add
dec
popa
sub
jae
ljmp
cs
in
sbb
push
repnz
mov
in
push
pop
jbe
arpl
inc
pop
nop
gs
ds
push
fnstenv
fs
push
push
mov
sbb
outsl
inc
aad
iret
pop
sbbl
cltd
or
inc
int3
sbb
fldl
cmp
jb
fwait
mov
das
fldcw
ret
shrb
jle
dec
xor
mov
ss
incb
push
mov
or
xchg
jmp
mov
mov
xchg
xlat
enter
popf
aam
mov
push
cmp
fistps
pushf
sub
and
pushf
cltd
ds
out
lret
bound
jno
sbb
xor
in
lret
fistps
jno
sbb
xchg
gs
dec
xor
mov
mov
and
addr16
adcb
je
mov
imul
sbb
jbe
push
push
jle
lock
xchg
pop
lods
shll
fs
and
orb
movsb
das
call
cli
lods
pop
mov
fisubrl
idiv
fstps
out
mov
cs
iret
pop
ret
testb
jl
sahf
xorb
fildll
test
jns
shrb
sub
jae
ds
jmp
push
pop
addr16
ja
xchg
adc
dec
push
pusha
sub
adc
sbb
sbb
sbb
js
pusha
mov
cwtl
es
cmp
lret
shll
sub
dec
out
lret
xchg
dec
addr16
sub
outsb
or
js
or
xchg
add
dec
sbb
mov
mov
js
xchg
aad
mov
inc
sub
mov
adc
xor
mov
lods
and
push
mov
jmp
pop
and
or
ja
rorb
or
push
cmpl
enter
fcoml
in
pop
mov
cmp
fldt
movsl
sbb
lea
xchg
fisubl
jmp
sbb
enter
push
xchg
out
inc
jno
jl
and
add
xchg
cmp
xor
hlt
xchg
pop
sbb
dec
insb
ljmp
mov
fs
pop
cmp
ret
mov
icebp
sbb
dec
mov
push
stc
jno
test
mov
test
cltd
sbb
mov
xchg
add
shl
lods
pop
mov
pop
inc
mov
mov
out
push
adc
sub
cs
jmp
scas
ret
rep
cli
pop
hlt
or
shrl
jmp
dec
aaa
cld
jbe
jo
xchg
mov
hlt
cmp
das
cmp
dec
stos
push
dec
mov
push
into
cmp
xchg
dec
test
in
sub
xchg
xchg
dec
jae
push
push
ret
aas
mov
and
mov
mov
or
lahf
outsl
add
jecxz
fcomps
or
mov
loop
push
loop
pop
ret
mov
icebp
mov
cltd
dec
jb
push
sbb
xor
push
test
add
mov
inc
imul
cs
shr
add
cli
pushf
pop
lret
icebp
pop
xchg
cmp
or
call
jecxz
add
adc
jns
aam
popa
and
bound
push
in
imul
sbbb
inc
andb
lds
and
xchg
mov
pop
out
mov
mov
pop
cmpsb
inc
fwait
test
cmp
xor
sbb
cmpsb
add
mov
mov
filds
lret
cmp
xchg
cmp
sub
jl
and
mov
sbb
jp
push
aad
pop
dec
jmp
pop
popf
rclb
sub
sub
repz
cmp
push
cld
lods
lds
aad
or
cmp
push
ret
out
push
aaa
adc
sub
xchg
daa
aam
mov
sub
js
xor
addl
jo
shll
mov
shl
add
mov
xlat
mov
test
push
xchg
ret
jnp
mov
adc
mov
adc
inc
popa
sub
push
jmp
cmpb
and
iret
or
inc
aad
cmp
push
jmp
jmp
movsl
jecxz
outsb
jne
push
enter
xchg
jo
mov
lret
sarl
pop
mov
sub
nop
cld
int3
jecxz
lods
or
jg
insl
inc
in
mov
and
and
cmp
stos
aad
popa
add
cmp
mov
jecxz
sbb
push
dec
aad
push
mov
mov
mov
dec
jnp
outsb
and
aad
dec
fs
mov
xchg
ds
fbld
jb
insb
cmp
cs
lock
pusha
pop
outsl
add
pop
xor
adc
in
outsb
pushl
sbb
arpl
jno
sti
iret
pop
scas
rcr
add
add
clc
push
cmp
inc
adc
xchg
orb
lret
jmp
xor
pushf
nop
push
inc
outsl
cmp
jp
ret
inc
push
ret
xchg
fs
mov
stos
push
idiv
lcall
mov
add
ret
xacquire
add
push
sahf
xor
rcr
mov
repnz
jnp
ds
jle
mov
sub
aaa
lea
mov
or
sub
mov
add
ds
hlt
out
mov
mov
inc
int
mov
lock
daa
dec
jle
cmp
jne
xchg
push
xchg
aaa
and
mov
mov
pop
cli
sbb
xchg
out
xchg
sbb
or
pop
fwait
mov
idivl
jecxz
inc
cld
or
mov
dec
jp
cmp
js
lods
ret
push
xchg
movsl
dec
imul
int
xor
inc
push
or
xor
addb
arpl
mov
or
inc
gs
sub
lods
sbb
xor
les
ja
lahf
pop
push
dec
dec
outsb
stos
cld
insl
sub
xchg
dec
sbb
mov
les
fwait
bound
addr16
aaa
popa
sub
dec
in
fiadds
mov
in
iret
cs
scas
mull
xchg
and
scas
lock
cmpsl
xchg
push
push
pop
inc
inc
jle
repz
out
out
push
adc
push
pop
jle
arpl
mov
mov
cmc
mov
push
push
rorl
repnz
xor
int
shll
and
rcl
popf
jmp
inc
adcb
xlat
popa
lahf
mov
jne
sub
stos
sbb
jae
data16
adc
out
fs
out
dec
daa
loope
fsts
in
das
int3
iret
inc
cmp
outsb
sub
mov
xor
aaa
sbb
inc
arpl
fsub
adc
movsl
xchg
cmp
ret
push
aam
outsl
and
pop
jmp
adc
data16
test
mov
and
scas
sti
pop
xchg
or
or
push
push
aas
js
imul
jp
pop
das
shll
loop
push
inc
dec
mov
int3
dec
pop
pop
adc
repnz
sub
in
lahf
jbe
sti
mov
jb
fwait
sub
ds
sbb
lock
ljmp
test
test
push
mov
xchg
jb
arpl
mov
push
sub
outsb
popl
xlat
xlat
fsubr
adc
insl
ds
lock
fs
iret
cwtl
jle
test
add
in
je
pop
xchg
scas
and
inc
outsl
jl
or
pushf
ret
ret
adc
vpshufd
aas
orl
mov
outsb
andl
out
cli
jg
fabs
xchg
push
sub
jmp
mov
ja
adc
dec
fstpt
push
aad
sbb
xlat
sub
fs
ja
add
scas
lds
xchg
pop
int3
jno
inc
aam
inc
dec
leave
ss
sarb
sub
insb
sub
pop
aaa
or
add
mov
imul
lds
shll
leave
shll
pusha
sahf
cmpsb
inc
inc
mov
mov
adc
out
pop
mov
sbb
outsl
roll
adc
bound
repz
icebp
push
push
push
xor
inc
push
repz
or
ja
dec
pop
jbe
mov
and
mov
pop
ret
or
in
out
loopne
mov
scas
mov
out
pop
jbe
jecxz
cwtl
mov
add
int
mov
out
pop
fs
fistpll
mov
sbb
popa
jae
mov
adc
shll
dec
outsb
andb
inc
pusha
xchg
f2xm1
push
ret
test
clc
cmp
mov
add
fdivrl
sub
pop
mov
into
inc
jb
jmp
and
repnz
sbb
repnz
lods
push
out
mov
scas
movsb
dec
shll
xchg
add
sub
fimull
ret
dec
sbb
insb
mov
sub
shlb
dec
test
xor
mov
iret
mov
adc
popf
inc
lahf
int3
out
mov
aas
in
je
out
push
sbb
inc
xor
clc
int
mov
jbe
cld
out
push
pop
mov
pop
jns
es
int
fidivrl
lods
lret
inc
or
xchg
mov
mov
push
jnp
fdivrp
push
out
iret
ljmp
mov
pop
and
pop
add
push
pop
iret
xchg
fisubs
mov
push
or
cs
in
leave
xchg
mov
into
fst
mov
out
sub
bswap
xchg
dec
fldpi
out
mov
shrl
jns
or
int
lods
xchg
jp
incb
adc
pop
in
jno
lahf
cmp
sbb
or
insl
shll
pop
lret
ret
xlat
stos
into
dec
sub
in
mov
jmp
add
loopne
dec
mov
push
xchg
and
sbb
cld
jmp
adc
sbbl
outsl
jg
mov
mov
outsb
and
mov
mov
push
inc
out
test
lods
sub
jae
mov
mov
orb
aas
xor
ja
cmpsb
or
sbb
mov
ja
add
hlt
jle
std
xchg
add
fcmovbe
pop
adc
pop
cltd
push
xor
icebp
movlps
pop
fisttps
xchg
cld
lcall
and
in
or
dec
cld
adc
jge
inc
fxch
sub
outsb
fisubs
in
setns
cld
mov
ret
stos
mov
xor
fiadds
into
inc
xor
into
test
cmp
or
cmp
lcall
cs
gs
dec
sbb
ljmp
int3
xchg
leave
clc
lods
fdivrs
mov
adc
sti
inc
cmp
imulb
jle
add
or
mov
cwtl
xor
test
imul
jae
std
jnp
iret
addl
ss
mov
jmp
add
loopne
lahf
mov
addl
pop
bound
js
mov
movsb
mov
mov
gs
in
jbe
shl
xchg
jge
sub
lret
psubw
popa
jnp
in
into
mov
mov
or
push
jo
mov
js
in
pop
sbb
insl
push
ficoml
pop
imul
in
fs
inc
in
nop
mov
sbb
into
dec
dec
push
fsts
test
repz
lgs
adc
jb
mov
adc
in
inc
int
pop
dec
mov
cmpl
jae
cmpsb
movsb
xlat
fisttps
idiv
lret
pop
fs
cmp
scas
sub
dec
test
mov
xchg
jb
rorb
fiaddl
rorl
or
repnz
mov
pop
mov
outsl
adc
ds
push
inc
lea
inc
sbb
stc
or
push
xchg
mov
cs
or
xchg
inc
filds
mov
add
sti
adc
stos
movsl
mov
cmpsl
in
lea
enter
mov
pmuludq
pop
dec
pushf
mov
mov
test
adc
aas
lods
iret
dec
lret
or
outsb
orl
loop
or
cld
inc
xchg
xchg
sbb
mov
jecxz
lock
mov
push
add
jge
jmp
dec
jne
bound
and
shll
pop
push
xchg
or
mov
push
sub
xchg
aaa
ss
pushf
scas
cmp
fld
imul
subl
xchg
xchg
mov
iret
mov
movsl
fistl
xor
mov
rolb
sbb
repz
add
shl
mov
push
test
jp
pop
cld
movsl
hlt
or
sbb
xor
loopne
lock
imul
lcall
imul
jg
fdivrs
dec
imul
fldt
xchg
xlat
pop
jno
or
rolb
mov
jo
loopne
dec
jge
sub
xchg
push
cs
mov
lret
cltd
aas
mul
test
cmp
push
lods
dec
dec
or
cli
cld
popf
ljmp
jmp
xor
and
lahf
mov
outsl
fsubl
cmp
scas
pushf
movsb
jl
ficoms
fidivrs
xor
aas
test
rolb
push
pop
mov
fcmovbe
dec
dec
das
movl
test
repnz
lods
cli
sub
and
dec
stos
push
pop
in
daa
jb
and
cmp
push
or
jnp
cmp
add
xor
cmp
adc
add
std
sbb
cli
and
lods
push
into
mov
sbb
adc
aad
adc
cmc
imul
mov
push
inc
jno
orb
inc
icebp
ds
scas
ror
dec
mov
bound
sub
scas
sbb
sbbb
mov
inc
xor
outsl
fistl
rep
jge
fistps
add
pop
mov
add
sbb
rcrl
movsb
aas
push
pushf
jmp
fdivl
xchg
outsl
inc
imul
shrb
pusha
pop
es
jb
imul
mov
mov
pop
fidivrs
andl
xrelease
or
lret
popa
test
scas
or
mov
lret
sbb
out
movl
jnp
add
jne
or
xor
and
mov
sbb
fucomi
je
nop
fidivl
out
out
insl
add
lods
dec
je
arpl
adc
scas
add
movsb
bound
mov
jno
fistpll
packsswb
lock
cmp
mov
lret
sbb
add
das
shlb
rorb
add
movsl
dec
in
add
movsb
cs
testb
sti
in
icebp
jne
dec
pop
adc
out
pop
sub
pop
stos
pop
stc
pop
mov
jl
push
xchg
cmp
xor
xor
into
les
mov
stos
imul
pushf
dec
xchg
jnp
mov
jns
or
adc
mov
es
push
loopne
push
or
push
pop
sub
out
or
or
repnz
cs
ljmp
cmp
mov
xor
adc
adc
sbb
imul
xor
mov
in
jbe
inc
jae
xchg
rcll
cltd
loop
mov
fidivrl
dec
je
out
cmc
sahf
or
aad
into
ret
stos
pop
test
cmp
fistpll
mov
in
lock
jp
shlb
cltd
cwtl
and
mov
jmp
sbb
ret
dec
cwtl
in
daa
add
cmp
sbb
xchg
jl
sbb
mov
add
cmpsb
jge
dec
ret
xchg
jno
std
pusha
inc
dec
cmp
cmp
sub
mov
adc
addr16
xor
enter
test
xchg
adc
inc
jb
fcompl
pop
lods
mov
enter
in
inc
mov
push
cmpsl
push
aas
mov
rolb
hlt
add
leave
popa
mov
and
jne
push
dec
rcrl
xchg
loope
dec
xchg
ss
jle
sbb
cmove
incl
lret
mov
test
shr
pop
mov
clc
mov
mov
fmuls
mov
or
enter
adc
push
and
ss
popa
nop
fwait
out
push
stc
push
push
pop
ja
xchg
add
rolb
mov
push
sbb
ss
popa
jnp
mov
jns
add
fldl
cmp
inc
adc
js
mov
push
dec
dec
mov
loope
mov
movsb
sub
jl
mov
leave
add
mov
xor
adc
fwait
pushf
sbb
mov
test
es
and
in
xchg
cmp
dec
rcl
fadds
sbb
filds
pop
cmp
jnp
adc
int3
nop
movsb
adc
jle
lahf
ss
xlat
movsl
repz
jge
sbb
in
movsb
mov
adc
jno
dec
ret
lahf
inc
inc
scas
xchg
or
outsb
fucomi
bound
aaa
ret
pop
adc
xchg
js
aas
sbb
loop
sbb
sbb
add
cmp
stos
adc
mov
leave
or
jb
add
push
jge
sbb
mov
lcall
in
lea
and
movsl
mov
mov
xchg
cmp
pop
cmpsb
jnp
cld
mov
cmp
dec
pop
insl
pop
or
xchg
test
aad
jmp
pop
std
enter
cmp
pop
adc
inc
lahf
dec
incl
pop
or
jne
dec
xor
enter
out
xorb
xchg
lock
repnz
loop
inc
rolb
sti
sarl
movsl
pop
push
push
inc
insb
push
out
roll
mov
cltd
mov
jg
pop
xor
or
movsb
inc
add
add
popf
push
sahf
jle
mov
mov
clc
sbb
push
std
and
jno
add
xchg
cld
clc
je
push
les
sar
loope
jne
mov
add
xchg
mov
push
cltd
adc
loope
aad
cmpsl
in
inc
jge
jne
push
dec
xchg
add
aad
push
repz
pop
dec
movsl
xchg
push
loop
adc
xorb
out
or
adc
ja
pop
outsl
pop
lods
xor
scas
adc
iret
xlat
adc
mov
push
pop
imul
icebp
or
scas
jne
push
or
loopne
popa
stos
outsl
ret
xor
push
or
sbb
rcrl
pushf
les
and
sub
push
mov
mov
mov
ljmp
clc
push
push
or
enter
es
dec
cmc
daa
mov
aad
pop
push
lods
adc
jecxz
cld
imul
fdivrl
clc
cli
popf
je
jo
orb
int
dec
cmp
pop
aam
shlb
es
scas
scas
and
stos
fistps
sbb
mov
lods
jg
pushf
test
repz
test
adc
ja
pop
pop
pop
fdecstp
pusha
shl
hlt
and
clc
scas
fisubrs
adc
ss
shrb
sub
shll
mov
mov
fmul
fidivl
mov
dec
sub
push
fs
mov
rcll
sbb
xchg
sbb
int3
sbb
inc
mov
sub
fsts
pop
ds
dec
test
fwait
add
popa
jp
inc
icebp
int
add
std
pop
xchg
test
mov
jno
adc
mov
fidivrs
aad
add
xor
xchg
dec
sbb
push
loope
mov
cmp
pop
ret
ja
aam
cmp
and
cmpsb
outsl
push
imul
or
mov
outsl
loopne
fcoml
push
mov
sub
sub
mov
push
add
cmpsl
hlt
fs
mov
push
pushf
repnz
cwtl
repz
dec
decl
cmpsb
mov
mov
ljmp
lock
xchg
or
inc
pusha
call
or
mov
cmp
lahf
fwait
mov
push
outsb
add
fsub
sbb
iret
ret
cmp
in
xor
je
das
or
xor
in
pop
es
or
add
mov
pop
sub
mov
mov
popa
xor
add
ds
gs
xchg
ljmp
mov
pop
mov
mov
ficomps
adc
add
sub
cmp
lea
jle
sub
idivl
mov
jae
fadd
and
rcrb
sub
cwtl
scas
mov
push
sbb
dec
outsb
sbb
and
push
lea
push
daa
pop
or
mov
das
hlt
mov
mov
or
dec
stos
xor
ret
shlb
test
repz
stos
out
ret
jg
pop
pop
fcmovnu
fsts
mov
cmp
mov
pop
add
rclb
jno
xchg
mov
dec
jl
dec
fstpt
fnsave
jo
xor
pushf
add
mov
stos
adc
and
xor
mov
mov
repnz
mov
int3
fcoms
mov
dec
je
mov
iret
mov
pop
cld
lods
or
das
and
stc
sub
add
mov
jne
dec
jge
mov
dec
aam
or
lods
test
movsl
dec
jg
mov
inc
ljmp
pop
dec
repnz
loop
divl
into
leave
enter
pop
pusha
out
push
add
xor
pop
or
popf
inc
pop
pop
pop
jb
push
lods
loope
jmp
inc
xchg
add
movsl
xchg
iret
jns
test
cmc
mov
mov
and
gs
adc
movsb
loope
in
jne
fimull
cmpsl
repnz
pushf
call
mov
sbb
aaa
xchg
aad
and
mov
push
add
dec
or
popa
pop
inc
add
popf
mov
repz
ss
scas
mov
enter
cmp
dec
or
mov
test
and
mov
jecxz
push
pop
add
dec
test
mov
sub
and
fisubrl
fs
dec
pop
mov
in
sti
lods
lahf
test
pop
inc
push
hlt
or
mov
push
les
xchg
outsb
ss
bound
mov
leave
rcrl
xor
pusha
mov
cmp
adc
sub
jo
fcoms
jmp
adc
jg
push
dec
jge
test
xchg
hlt
xor
leave
scas
movl
push
cwtl
mov
or
mov
fcomip
xchg
push
pop
call
cli
xchg
pusha
aaa
aad
incb
jmp
sub
je
test
xor
jbe
mov
or
mov
std
mov
mov
mov
xor
lds
xchg
or
inc
push
mov
movsl
stc
out
ret
in
mov
mov
sub
outsb
pop
lds
loopne
pop
outsb
xor
jmp
xor
mov
cmp
es
add
cli
push
sub
xchg
out
add
pop
or
ret
movsb
add
pop
fwait
aad
cmp
xor
sub
lds
or
mov
jbe
mov
push
stos
cmp
cmp
outsb
inc
mov
jb
sbb
out
stc
push
xchg
mov
push
ljmp
ja
add
dec
inc
pushl
test
inc
mov
dec
push
pushf
movsb
lret
xchg
mov
out
lcall
daa
mov
mov
cmp
repz
and
fsubl
aam
cs
mov
pop
add
fwait
add
mov
adc
push
rcrl
xchg
popa
loopne
les
cmpsb
inc
in
sbb
pop
orl
fdiv
add
mov
sub
add
or
inc
sub
test
and
shll
adc
push
mov
push
sbb
adc
push
roll
jo
lcall
mov
pop
adc
fbstp
andl
xor
test
clc
xchg
leave
scas
ficomps
cmp
sbb
imul
adc
jl
jp
dec
cltd
stos
sub
scas
sub
fsubs
add
dec
shll
aam
or
lods
mov
cmp
pop
mov
jl
jnp
and
mov
dec
arpl
ljmp
jmp
data16
xchg
push
push
xchg
inc
mov
bound
mov
sub
mov
mov
out
out
jo
adc
fcmove
pop
shr
pop
jp
fsin
inc
js
adc
iret
inc
and
sbb
or
mov
mov
enter
or
sub
loopne
mov
adc
add
cwtl
test
in
loop
jo
out
mov
fwait
cmpsl
push
xor
cwtl
cltd
jge
mov
js,pt
int3
mov
push
ret
mov
fldcw
das
test
fcompp
add
int
fcmove
jle
inc
fs
fwait
test
add
adc
addr16
or
adc
mov
and
or
inc
ficomps
xor
inc
mov
mov
ret
les
stc
aas
push
cmp
pop
or
and
dec
pop
pop
xchg
arpl
and
movb
loope
jb
add
popf
xchg
stos
jo
dec
mov
xchg
imul
movsb
lcall
xchg
push
push
lea
imul
lea
mov
pop
test
xchg
lcall
test
adc
xchg
or
shll
in
fimull
dec
mov
sbb
popf
xor
test
inc
mov
mov
mov
stos
sbb
pop
into
dec
xchg
mov
loope
push
adc
adc
pop
mov
jae
ficoms
mov
sub
clc
mov
in
repnz
sbb
pause
lea
pop
jle
cs
push
mov
imul
adc
mov
push
add
lods
out
adc
mov
jb
js
aas
xchg
aaa
xchg
mov
test
call
jb
and
pop
xor
cmpb
xlat
jp
push
add
jge
aas
movsl
mov
ljmp
in
cmc
sub
ficoml
gs
adc
xor
and
addr16
dec
outsb
ret
mov
stos
and
pop
std
je
sti
mov
adc
repz
aam
jbe
movsl
rorl
mov
lods
aam
and
enter
push
insl
lahf
push
dec
push
cs
and
orb
ljmp
lods
aaa
jno
punpcklwd
ret
mov
stc
inc
xor
pop
or
mov
repnz
in
sub
sub
repz
add
push
lea
jno
in
and
add
adc
icebp
dec
sub
dec
arpl
push
adc
xor
mov
jl
xor
or
xchg
xchg
and
and
push
out
mov
push
stos
movsb
popa
and
mov
std
add
mov
pop
shlb
lahf
inc
add
mov
jl
sarb
pop
in
mov
daa
scas
dec
inc
int3
ss
mov
or
add
pop
nop
fs
leave
inc
xor
push
or
repz
jb
mov
add
cmc
or
cmp
decl
pop
ret
fisubs
out
negl
pop
push
push
cmpb
dec
lods
divb
sub
pushl
mov
cmp
lods
push
test
or
inc
js
adc
dec
orl
mov
sub
neg
mov
rcrl
and
push
xor
xor
dec
push
mov
jp
sbb
jp
fwait
outsl
mov
jge
das
dec
mov
sub
test
loop
mov
inc
pcmpgtb
mov
out
scas
push
pushf
nop
inc
push
aaa
sarb
or
pop
rclb
movl
dec
js
push
adc
or
aad
rcll
repnz
imul
clc
or
fldenv
inc
push
dec
sbb
push
sbb
mov
mov
mov
fstl
cmp
and
sahf
outsl
sbb
nop
sahf
aaa
mov
lea
aaa
or
pop
pop
test
inc
movsb
insb
les
adc
xor
dec
adc
or
fs
ss
push
mov
lret
bsf
shrb
mov
ror
xchg
push
mov
mov
mov
mov
shll
std
cmc
jo
pop
push
pop
dec
sub
shll
jbe
outsb
push
int
movsl
data16
adc
es
adc
movsb
aaa
pop
pop
cmp
std
sub
ret
mov
data16
jnp
inc
cs
dec
movsb
push
or
mov
inc
ljmp
iret
lret
pop
scas
push
cld
jne
leave
xlat
xchg
mov
insl
fnsave
sub
push
leave
ss
jo
ret
sbb
ret
fsts
daa
in
push
orl
stc
and
dec
dec
mov
jbe
inc
mov
cmp
xor
cmp
stos
push
dec
xlat
enter
xchg
loopne
rol
jmp
pusha
add
jne
cmpsl
adc
add
mov
hlt
sbb
movsb
sub
sub
lock
insb
mov
mov
mov
rcr
cmp
cli
sub
fcomps
test
mov
mov
push
sub
das
or
mov
sub
or
iret
xchg
sbb
cwtl
int3
lods
imul
and
inc
imul
loope
popa
lds
add
fstpt
push
add
jg
fistpll
mov
and
sub
pop
dec
add
jl
or
xchg
add
movsl
or
sub
mov
iret
mov
nop
dec
push
popf
dec
sbb
or
sub
test
mov
sbb
lods
push
mov
rcll
fisubs
jmp
push
repz
je
movsb
mov
push
pop
sbb
aam
push
lds
mov
cmc
adc
add
push
push
sub
adc
xchg
mov
or
mov
pop
cmpsb
xchg
scas
mov
mov
gs
rorl
mov
minps
andb
sub
push
fildll
jmp
imul
add
or
mov
repz
and
push
repz
movsl
jl
popf
ds
jb
aaa
lahf
push
or
daa
jo
fsubrp
push
push
adcl
je
dec
fnsave
and
pop
mov
mov
jns
lods
aad
cmpsb
sub
mov
lea
jns
popa
gs
int
insb
addr16
das
dec
sub
xorl
mov
lods
xor
push
insb
cmpsl
adc
adc
pushf
push
xchg
add
adc
leave
lcall
les
lods
mov
pop
pop
adc
stos
stos
mov
rcrb
je
mov
push
dec
sti
dec
mov
jo
movsl
lods
mov
mov
popa
jae
rep
outsl
pop
mov
mov
repz
xor
adc
xor
ja
movsl
push
fistl
rcr
mov
jge
arpl
insl
and
lcall
jmp
testb
mov
jns
test
orps
mov
sbb
push
test
pop
leave
xlat
in
push
ficoml
cmpsl
pusha
cmp
pop
pop
xorl
in
jb
inc
inc
or
in
mov
xor
jo
push
jae
adc
call
in
xor
push
push
cmp
jo
sub
sub
mov
in
into
lods
js
mov
nop
ret
adc
das
ret
imul
mov
and
flds
inc
cs
mov
pop
push
enter
or
test
sub
rolb
adc
mov
outsb
in
ss
cmpsb
adc
mov
adc
dec
daa
out
cs
mov
ss
fistpll
fsub
jecxz
jg
mov
push
pop
aaa
fcmovu
adc
sub
adc
cmp
fs
jb
idivl
fadds
mov
popf
jmp
sbb
jnp
mov
repz
dec
pop
push
sub
fs
loop
ret
hlt
sub
clc
or
fcomi
ret
cmpsb
xlat
xchg
jle
and
nop
std
mov
xor
in
ret
mov
test
aad
push
nop
loopne
out
mov
dec
clc
pop
hlt
dec
scas
jns
mov
mov
jno
mull
lcall
jmp
jmp
cwtl
clc
ret
rclb
aad
jb
pop
mov
popf
bound
jno
and
jo
jmp
jno
sar
and
xor
inc
dec
xlat
jmp
push
into
pop
jecxz
rol
dec
popa
jmp
mov
jne
data16
mov
sub
adc
mov
lret
inc
jb
pop
xor
push
mov
jecxz
jl
repz
xor
jo
stos
inc
xlat
shl
mov
adcl
mov
inc
test
mov
test
leave
pop
cmpl
xor
dec
repnz
dec
xchg
pop
stc
inc
lods
stos
ja
mov
dec
cmc
push
jne
jns
mov
inc
sub
movsl
xor
or
dec
into
les
fisubl
or
fwait
cmp
xchg
dec
aas
jle
xchg
pop
mov
pop
jge
std
test
xchg
sti
mov
fs
dec
dec
and
sbb
adc
sbb
std
xchg
lods
xchg
lods
in
mov
sbb
andl
cmp
inc
fwait
xchg
nop
mov
xor
sub
and
and
xchg
adc
insl
int3
das
add
outsl
sub
mov
outsl
cmpsb
inc
bnd
adc
push
mov
push
cwtl
pop
xor
dec
insl
and
icebp
mov
popa
popa
lahf
mov
mov
test
xchg
pop
in
dec
or
jge
cltd
cwtl
xor
ja
inc
jns
enter
bound
imul
adc
arpl
cltd
rcrb
cmc
and
sub
int3
dec
mov
stc
xor
cltd
mov
int
stos
fistl
jnp
jne
decl
pop
cmpsb
lock
sti
pop
lcall
int3
mov
mov
lods
and
mov
adc
int3
ficoml
addb
insb
dec
xor
cmp
je
push
sbb
add
les
in
mov
int
fistps
sbb
jle
aas
lock
pop
jne
cltd
stc
insl
jmp
and
dec
adc
ret
push
imul
pop
pop
xchg
jne
sub
nop
outsl
dec
xor
xchg
stos
in
popl
test
sbb
int3
jecxz
adc
es
test
cmpsl
pop
in
jmp
stc
dec
pushf
inc
cmp
jp
out
push
jno
lods
pop
and
add
dec
cmp
push
xchg
adc
mov
popl
inc
lods
fisubrs
fsubs
mov
push
ja
push
inc
lods
pop
mov
and
lahf
and
addr16
and
pop
movsb
das
out
ljmp
cmp
jno
cmp
push
pop
and
inc
cmp
gs
int3
sub
mov
into
sbb
cli
sub
add
cli
cmpsl
fisttps
ljmp
dec
inc
push
add
adc
and
lret
xor
sbb
aad
std
mov
jmp
push
xchg
mov
data16
pop
ret
es
xchg
dec
mov
lea
fbld
xchg
push
pushl
testb
pop
shr
xlat
adc
stc
stos
push
adc
inc
in
push
dec
std
sub
fdivrs
push
mov
dec
and
cmc
out
push
dec
mov
insb
mov
insb
movsl
fistpl
out
outsl
dec
repz
pop
and
mov
inc
adc
pushf
pop
fld
pop
ret
sbb
mov
pop
or
negb
out
pop
sbb
cmp
mov
jg
ja
pop
test
aas
jp
xchg
mov
jbe
xchg
push
xor
cmp
scas
shlb
arpl
fwait
int3
push
movb
push
xchg
push
xchg
xchg
in
dec
add
loop
dec
inc
sar
mov
js
inc
fs
in
js
cs
xchg
sbb
mov
push
push
inc
sbb
jle,pn
sub
mov
ret
lock
stc
mul
dec
inc
ljmp
js
pop
das
loope
sub
bound
fstpt
pop
sbb
push
inc
pushf
cs
je
ds
xchg
pop
cmp
pop
pop
mov
ret
lret
mov
shll
adc
repz
into
out
outsb
or
pop
scas
dec
fisubrl
bnd
stos
shlb
fucomp
cmp
in
negl
shll
cwtl
push
das
and
sahf
sbb
sbb
or
pop
das
dec
push
ja
xchg
shlb
jns
mov
mov
push
iret
xor
inc
mov
inc
insl
mov
adc
xchg
inc
clc
pop
fs
mov
pop
sub
push
pushl
int
add
cmp
imul
adc
xchg
pushf
lret
mov
jns
lahf
xchg
adc
cli
loope
cmp
arpl
fadd
xor
stc
mov
cld
push
subb
add
cwtl
add
jne
test
mov
cmp
add
inc
out
outsl
inc
pushf
mov
imul
mov
mov
pop
ss
sub
cmp
xchg
imul
rorb
and
inc
push
add
pop
lcall
movsl
or
xor
cld
ss
cmp
jl
leave
fwait
push
call
aas
dec
nop
inc
loopne
xchg
out
or
incl
jge
adc
decb
mov
ljmp
mov
jb
xor
xor
mov
cmpsb
xlat
jg
cmp
in
mov
es
xchg
add
push
mov
into
sbb
pop
adc
jbe
fnstenv
xor
pop
jb
mov
js
push
jg
lods
xor
jns
jmp
push
fstpt
arpl
fists
add
ficoms
icebp
stc
shrb
xchg
nop
inc
or
jmp
xchg
pusha
subb
gs
fistpll
ret
in
stos
or
sbb
adc
xor
data16
mov
xor
addr16
hlt
enter
xchg
rcrl
mov
out
pop
push
jle
dec
aad
mov
scas
bound
adc
notl
and
push
ret
or
mull
push
cmpb
sbb
out
stos
mov
xchg
ljmp
pop
cwtl
into
ret
mov
pop
jle
shlb
loopne
cmc
xor
pop
cs
inc
test
xchg
daa
sti
sbb
aas
rclb
cltd
fisubrl
jae
xchg
fistpll
and
pop
xchg
rep
mov
cwtl
xlat
test
repz
popa
addb
mov
fldcw
lahf
jnp
mov
jbe
push
mov
sbb
mov
int
jmp
jmp
xor
pop
loope
push
negb
jb
inc
and
push
outsb
xlat
adc
fsubrs
insl
mov
mov
cmc
popa
xchg
adc
mov
enter
out
call
add
arpl
lahf
shl
ret
and
cmp
and
lods
pop
xor
loop
pop
cld
aam
das
push
mov
repz
jmp
scas
ja
xchg
or
mov
push
scas
pop
or
push
push
and
ljmp
push
aam
inc
mov
fwait
aaa
xor
mov
jg
jmp
subb
mov
lods
and
aad
push
sbb
or
aas
scas
nop
and
jae
sbb
sbb
jecxz
pop
mov
mov
subb
xchg
imul
cmp
jne
hlt
cmc
sub
pop
push
add
fs
push
scas
imul
push
lret
xchg
es
testb
sbb
mov
pop
jg
cld
pop
dec
sub
adc
dec
stos
mov
mov
mov
and
sub
iret
or
cld
dec
lcall
lcall
mov
push
test
cld
iret
iret
hlt
jg,pn
cltd
xchg
inc
pop
dec
addr16
mov
mov
xchg
push
gs
into
push
dec
fbstp
lds
sub
clc
xor
out
jno
push
subl
dec
pushf
inc
daa
xor
xchg
mov
mov
mov
mov
adc
rcll
sbb
mov
incl
xor
xor
out
cli
and
sub
dec
add
ss
decl
jnp
shrl
adc
loope
mov
pop
cmp
push
cld
jmp
rorb
jl
insb
xchg
cmp
mov
aas
test
aaa
popa
cmp
das
inc
lret
repnz
pushl
dec
pop
testb
xchg
mov
sti
out
or
es
cmpb
jno
out
fbstp
mov
loopnew
mov
pop
jge
pop
xor
jno
mov
nop
popa
pop
in
lods
lret
jmp
pop
push
inc
scas
sbbb
or
xchg
stos
dec
fwait
adc
and
sub
in
xchg
bound
or
inc
pusha
lret
out
xchg
cmp
mov
xchg
sbb
xlat
adc
in
add
sbb
sub
adc
leave
jmp
push
cmc
das
jle
push
inc
out
cmp
or
lods
data16
xchg
incl
ja
mov
call
hlt
and
fdivs
into
aad
outsb
and
mov
inc
cwtl
push
sub
sarb
stc
jnp
aaa
xchg
jmp
mov
in
or
cld
lcall
xchg
jmp
dec
pop
pop
inc
jmp
inc
xchg
pop
stos
dec
out
and
push
mov
fistpll
adc
and
jns
mov
or
dec
mov
arpl
test
addr16
sbb
xor
mov
test
int3
push
dec
mov
dec
int
xor
jg
testl
adc
ret
jl
sbb
xchg
call
or
lea
dec
pop
fwait
imul
addr16
enter
jo
ljmp
pop
dec
inc
aad
xor
cmp
mov
ret
mov
mov
mov
xchg
push
sub
and
movsb
sbbb
lcall
inc
data16
mov
mov
inc
or
outsb
outsb
and
cmc
daa
or
shll
push
std
mov
int
inc
lret
sahf
test
arpl
mov
lret
aad
in
cmp
lret
adc
out
loope
scas
subl
inc
xchg
lds
mov
leave
fisttpl
xor
mov
jno
or
cmp
ficompl
addl
nop
call
adc
js
push
stc
in
ja
filds
jge
dec
in
cs
sub
mov
inc
fdivs
or
lods
xor
jae
and
inc
adcl
hlt
pushf
sti
movsl
addr16
inc
lods
or
jo
sub
outsb
lret
std
gs
or
stos
inc
outsl
in
sub
pop
ds
mov
push
and
sbb
rorb
hlt
jle
popa
cs
mov
fisubs
test
mov
inc
mov
push
bnd
jge
inc
flds
das
movsb
popf
inc
push
enter
sbb
cmpsl
bound
dec
and
lret
mov
fcoms
jbe
dec
in
outsb
les
add
mov
movsb
inc
xchg
or
dec
leave
xchg
xor
insl
js
push
xchg
mov
xchg
bound
cmp
fldt
roll
jmp
mov
mov
pushf
dec
int
cwtl
cmpsb
jl
mov
cli
or
aas
call
push
inc
xchg
cmovp
xchg
mov
mov
shrb
fisubrs
sub
data16
or
aas
lcall
mov
jo
je
mov
mov
jecxz
out
push
jge
mov
es
cli
adc
imul
xchg
dec
pusha
dec
dec
xor
in
xchg
test
push
push
jno
push
jmp
pop
push
xchg
std
stos
lods
sbb
hlt
mov
cmp
shrl
ljmp
hlt
test
mov
jle
jge
aam
jge
iret
xor
jl
ret
xor
xor
out
sti
fwait
cmp
aam
pop
and
outsl
inc
jmp
ret
push
repnz
dec
andl
xchg
adc
cmpsb
lods
sbb
jno
pop
sub
dec
pusha
inc
pop
lds
pop
xor
ret
lods
dec
int3
stos
dec
xchg
rolb
xchg
dec
cmpb
pop
and
jmp
inc
ficoms
mov
icebp
inc
in
xchg
or
or
sbb
add
xor
pop
fsts
push
xchg
insb
ret
popa
pop
insl
mov
jb
sbb
adc
loop
push
into
xchg
bound
and
inc
sti
ljmp
aaa
ja
jl
imul
repz
sbbl
xchg
pop
and
mov
jnp
cmpsl
jl
data16
inc
popa
jne
jbe
push
mov
fisubrs
or
ficomps
jne
les
pop
xor
loope
sub
pop
jmp
xchg
pusha
push
push
mov
ror
daa
out
add
mov
cmp
jecxz
mov
neg
scas
jbe
or
loope
rcll
dec
xchg
movsl
imul
adc
adc
lods
inc
xchg
push
mov
push
dec
sub
loop
push
or
push
or
dec
push
pop
shld
pusha
mov
push
mov
out
mov
inc
jg
iret
rcr
mov
dec
sbb
ror
cs
push
into
xor
and
mov
fbld
inc
cli
jae
dec
jne
cmc
and
xor
push
dec
mov
cmp
dec
mov
mov
xor
mov
shll
mov
shrl
es
mov
push
icebp
adc
xchg
cs
into
rcrl
cmpb
pop
lds
mov
push
in
mov
mov
mov
or
pop
xchg
cmp
out
lret
sub
sti
outsl
shr
out
adc
jmp
push
es
dec
call
in
ret
sub
jecxz
push
push
cld
cld
add
cmp
aam
outsl
ret
cmc
fistpll
push
mov
dec
lret
cwtl
mov
add
pushf
lahf
lds
sbb
scas
dec
pop
mov
push
inc
imul
cmp
jecxz
rclb
pusha
aad
outsl
cmpsb
mov
and
out
xchg
push
rol
jmp
sbb
outsb
adc
outsl
movsb
cmp
orl
xchg
mov
sbb
addr16
clc
mov
jae
es
ljmp
lcall
rcrb
dec
test
inc
dec
es
pop
leave
adc
je
jle
mov
lcall
and
jge
jo
stos
fdivl
rclb
sub
jmp
scas
pop
push
imul
ds
lret
jnp
mov
pusha
cwtl
lret
mov
es
sbb
aad
inc
jbe
mov
sub
sbb
loope
add
pusha
mov
inc
sbb
cmp
pop
adc
test
adc
dec
dec
addl
sarl
sbb
into
lods
sahf
add
cltd
sahf
mov
fnsave
and
mov
mov
pop
adc
outsb
into
ds
jecxz
push
ja
movsl
push
lods
adc
cwtl
inc
mov
adc
pop
test
sbb
std
rcrb
add
cmp
bound
or
cmc
adc
xchg
mov
add
push
xor
shll
int3
negl
ljmp
aaa
and
insb
mov
pop
repnz
mov
mov
ja
ret
adc
xor
stos
pop
jmp
nop
fldl
jae
insb
and
enter
notl
notl
fsts
cmp
ss
add
adc
into
dec
push
rol
dec
add
movsb
mov
mov
gs
or
pop
push
ja
sahf
aam
shrl
cmpsb
cltd
sub
out
addr16
scas
cmpsl
sub
mov
clc
loope
mov
addb
rcrl
ret
in
dec
xor
outsl
push
das
push
inc
xor
lret
popf
repz
shll
push
rclb
add
push
insl
jnp
xor
cmp
pop
in
sbb
sbb
or
add
test
lods
or
cmp
xchg
sub
stos
movsl
inc
aad
call
outsl
mov
cmpsb
xor
fwait
inc
lcall
jno
mov
push
rcl
cmp
mov
pop
adc
incb
stc
rolb
test
pop
mov
iret
or
xchg
stos
xchg
and
rolb
sti
mov
mov
adc
je
sub
call
mov
pop
scas
jb
pop
xchg
aas
jns
adc
dec
and
stos
adc
dec
mov
xchg
mov
ja
xor
adc
jno
fs
test
mov
or
adcl
push
mov
icebp
or
sub
inc
imul
pop
std
stc
lfs
std
mov
lods
movsb
ftst
inc
stos
pop
xchg
hlt
and
out
xor
push
in
incl
cs
addr16
inc
cwtl
jmp
xor
xchg
lret
jb
cld
out
cld
pushf
rcrl
mov
adc
add
cmp
daa
xchg
lock
xchg
inc
xor
int
movsb
outsb
jns
test
outsb
insb
jle
add
xchg
jg
jnp
popa
jp
test
mov
add
lahf
test
aaa
mov
xorb
xchg
jbe
mov
loop
lods
pop
into
xorl
rclb
jg
pushl
add
insl
cmp
in
mov
and
dec
frstor
jl
mov
rcrb
or
mov
fxch
aam
mov
jmp
mov
lock
fildll
sub
ljmp
mov
andb
clc
scas
fiadds
cmpsb
fistpll
dec
xor
xchg
sub
dec
inc
in
pop
adc
jg
xchg
jo
stos
push
jb
aad
sbb
adc
fldt
es
into
push
lcall
cmp
rcr
jl
or
inc
mov
js
cs
test
jnp
xchg
push
cli
scas
movsb
adc
or
and
and
add
xor
outsl
inc
xchg
fincstp
scas
jae
ja
push
add
inc
loopne
shlb
cmp
nop
in
jns
stc
ja
aas
add
loope
fists
inc
xor
aad
filds
ret
mov
and
dec
inc
stc
test
and
pop
sub
fidivrl
fisubrl
pop
sub
sbb
and
imul
xchg
pop
aad
cli
roll
or
aam
movsb
cmc
lret
jmp
mov
enter
ret
dec
and
outsb
cmp
adc
loope
shl
jecxz
adc
mov
jne
clc
lret
bnd
jbe
xor
push
xchg
pop
jo
test
cmp
mov
fistpl
mov
dec
fmull
and
loope
test
adc
cmp
mov
mov
outsl
mov
adc
repnz
push
fldt
clc
paddusw
inc
pop
cmp
bnd
pop
in
rcl
dec
test
or
out
addr16
dec
leave
sub
sti
in
in
pusha
data16
sbbl
mov
fs
inc
and
out
and
cmp
sub
dec
mov
mov
lock
pop
jne
push
and
stos
pop
add
dec
or
xlat
out
push
or
lcall
mov
aam
push
std
jno
adc
inc
jecxz
adc
insl
inc
jecxz
xor
xor
call
mov
pop
fwait
aaa
or
xor
ret
dec
jl
testl
push
and
lea
and
pop
adc
cs
das
inc
lea
out
dec
test
mov
push
mov
push
or
je
pop
xchg
cltd
call
or
sbb
jecxz
and
cwtl
lret
sub
mov
xor
push
and
arpl
or
jmp
mov
pop
cmp
pop
stc
jecxz
jmp
jae
xor
adc
out
test
cmpsl
xor
or
daa
sub
mov
cmp
sub
in
jnp
leave
inc
popa
mov
lods
movups
clc
jae
test
shld
ret
lret
xor
xor
movsl
xor
scas
xor
add
js
call
rcll
fisubs
adc
imul
je
ficomps
aaa
outsl
sub
fistpll
loop
test
jge
cltd
loop
call
push
jbe
adc
imul
adc
test
mov
enter
xor
lret
sub
ret
push
adc
jbe
xor
arpl
push
test
xorb
fs
out
sbb
mov
daa
cmp
js
mov
jp
cltd
cmp
inc
dec
or
pop
out
sub
xor
adc
push
add
jo
pop
dec
and
out
testl
and
xchg
or
les
fnstcw
jne
fdiv
sahf
scas
test
sbb
roll
jp
pop
mov
xor
push
jl
cmp
in
popf
mov
mov
push
dec
fdivs
push
push
fwait
dec
movsb
pushf
lods
test
pop
js
gs
inc
inc
xchg
xor
xchg
mov
add
lret
movsl
sbb
dec
mov
sub
dec
sarb
sub
push
mov
pop
xchg
test
lahf
insb
lahf
insl
push
jp
pop
sti
jg
dec
xlat
aaa
xchg
add
popf
cmp
je
pop
push
insl
mov
sub
iret
cmp
test
bound
mov
mov
and
xchg
lcall
push
pop
lods
mov
jae
push
les
push
xchg
add
push
fcomps
rolb
out
adc
push
ljmp
push
and
std
ds
subb
mov
add
int3
xchg
movsb
push
mov
rcrb
mov
js
bound
pop
push
dec
ret
test
inc
shrb
mov
push
arpl
cmp
aam
and
inc
xchg
pop
gs
dec
cwtl
jbe
mov
jmp
add
clc
int
sbb
out
adc
push
xchg
es
mov
xchg
lret
and
call
pop
cmp
and
push
pop
jbe
sbbb
jp
repz
daa
test
dec
jl
mov
fdivp
push
das
jo
xor
lret
cmp
jo
insl
sbb
mov
pop
xchg
dec
popa
xchg
adc
cmpb
stc
outsb
mov
push
push
xchg
push
adc
jbe
mov
nop
sbb
jmp
mov
add
cltd
out
xchg
cld
adc
inc
insl
out
pusha
int3
pop
dec
lret
hlt
arpl
mov
pushf
xchg
out
pop
or
push
xor
call
xchg
mov
sub
sahf
xchg
ret
and
aad
cmp
roll
out
idivl
shlb
lock
repz
sbb
adc
add
test
push
shr
pop
sbb
mov
xor
and
sbb
jge
mov
fs
outsl
push
movsb
mov
hlt
jmpw
out
or
pop
es
pop
adc
or
push
push
xor
sbb
data16
cmp
cmp
inc
nop
and
sbb
repnz
imul
cmp
jle
dec
xor
sbb
cmp
or
aas
lret
imul
es
xor
push
clc
int
cmp
push
adc
dec
sub
sbb
xchg
xor
sub
ret
pop
loop
xchg
rcll
push
lods
push
lods
adc
incb
cmc
mov
pop
jecxz
mov
mov
mov
je
pop
repz
into
xor
outsb
sbb
rorl
dec
mov
xchg
in
cltd
add
and
sub
out
and
jnp
aaa
cmp
push
jge
mov
mov
mov
adc
in
test
xchg
or
fidivrl
pop
jg
mov
inc
jle
iret
push
aam
mov
mov
fnstenv
pop
and
fistpll
pop
xchg
xor
sbbl
fbstp
adc
xchg
lahf
inc
loopne
outsl
add
xor
or
in
xchg
pop
shlb
or
fmuls
popa
pushf
adc
mov
pushf
dec
xor
xor
shrb
xchg
inc
inc
push
enter
dec
iret
mov
dec
or
push
mov
mov
jp
xor
dec
push
pop
xchg
jo
cmp
mov
ss
popl
je
push
push
add
mov
push
push
dec
cmp
fstpl
inc
fcmovnu
imul
jle
mov
ret
sub
and
lcall
jo
popf
clc
push
pop
aaa
cmp
addb
cmp
dec
sub
cmp
xor
out
pop
mov
repnz
arpl
scas
inc
cmp
jge
gs
adc
test
nop
jg
push
mov
mov
jl
and
push
inc
mov
push
sbb
push
ret
js
cwtl
xor
imull
add
out
in
in
or
push
in
dec
ljmp
cmp
or
aam
and
jge
mov
cltd
mov
dec
ljmp
push
faddl
jl
mov
sarb
mov
jg
rep
jo
pop
xor
fcom
and
mov
loop,pt
dec
add
and
jo
inc
sti
les
iret
sbb
mov
stc
aam
dec
sub
push
mov
pop
out
es
dec
xchg
mov
in
pushf
dec
pop
or
adc
adc
sbb
inc
pop
jae
lods
or
or
xchg
jg
mov
loop
mov
mov
adc
lret
movsl
data16
ja
jp
and
and
outsl
jae
mov
jle
add
iret
mov
jmp
mov
call
std
cwtl
fcmovnb
jb
ss
push
dec
jne
dec
jae
std
notb
stc
mov
dec
mov
mov
pop
mov
bswap
or
mov
cmp
mov
mov
out
pop
mov
shlb
ret
adc
dec
js
cli
pop
push
jbe
sarl
fstps
ljmp
ds
inc
insl
insb
jnp
ljmp
dec
test
sti
add
or
int3
cmpsb
in
stc
bswap
out
mov
mov
adc
mov
aad
jnp
roll
jb
sub
fnstenv
add
xchg
inc
fwait
lds
mov
addl
imul
push
pop
xor
sbbl
test
fiaddl
xor
or
negl
aad
inc
shll
pop
dec
das
ljmp
testb
push
jmp
loop
icebp
and
clc
in
movsb
dec
jecxz
or
cld
pop
jo
cltd
out
mov
pop
popa
mov
jl
pushf
inc
adc
push
mov
cmp
movl
out
test
bound
dec
mov
inc
scas
lahf
pop
lret
imulb
inc
mov
aad
aam
rcr
outsl
cmp
call
and
aaa
stos
int
adc
mov
or
fadds
xchg
add
das
push
mov
inc
pop
fdivs
mov
fnstenv
and
call
popf
cmp
adc
pop
cltd
stc
repz
rcrb
mov
addr16
mov
lods
in
adc
cld
cmpsl
into
pop
fdiv
fnstcw
test
or
cmc
mull
inc
jge
mov
icebp
pop
lea
push
gs
mov
push
and
aad
shl
dec
addl
movaps
or
adcb
jns
imul
sbb
clc
xchg
pop
test
fs
mov
xchg
push
outsl
xor
lret
pop
pop
mov
sub
shlb
adc
mul
fcoms
and
mov
movsb
dec
jp
dec
gs
cmp
pop
adc
mov
mov
aas
repz
aad
push
repnz
repz
xor
repz
cmc
sbb
int
mov
aad
rclb
mov
jns
lock
nop
adc
dec
cltd
mov
add
addr16
cmp
test
in
inc
or
in
pop
cmc
data16
hlt
inc
pop
popa
cmp
clc
popf
int3
imul
inc
aam
adc
movsb
bound
sub
ror
push
and
jae
stos
jns
addb
xor
push
les
mov
mov
lret
ror
xchg
xchg
pop
andb
xor
out
push
mov
insb
or
fisttpll
insl
mov
bound
mov
mov
ja
dec
mov
movsl
les
fstl
outsb
insb
fcomps
push
rolb
cmp
jge
bound
cwtl
iret
dec
pusha
jns
mov
out
mov
xorl
clc
push
cli
roll
lods
xchg
cmp
adc
int
sar
or
adc
outsb
fstl
out
insb
push
rorb
ja
push
pop
mov
mov
mov
lock
shlb
movsb
mov
pop
mov
jno
add
xor
into
orb
in
xchg
popf
mov
xor
loop
adcl
lret
cs
push
sti
mov
cmp
xchg
mov
clc
dec
jle
pop
das
test
cwtl
scas
dec
jmp
les
mov
in
ficoml
imul
mov
notb
cmpsb
pop
in
xchg
pop
jne
pop
aad
in
icebp
jae
cmp
or
push
icebp
in
adc
shlb
outsb
test
fprem
notl
fmuls
push
inc
lds
movsb
push
movsb
pop
cmc
ret
fs
andl
scas
sbb
sub
scas
std
mov
cmpsl
data16
mov
sahf
push
test
mov
mov
in
ljmp
push
mov
inc
add
cmp
das
pusha
mov
subl
pop
mov
pop
call
push
or
sub
mov
in
and
dec
push
out
test
adc
xchg
add
sahf
xor
cmp
ds
repnz
inc
mov
shrl
push
mov
push
out
lahf
jb
ljmp
sbb
mov
cwtl
dec
sahf
mov
sub
adc
andl
xchg
aam
jnp
frstor
sti
xor
lahf
sbb
in
stos
mov
das
out
in
jle
sbb
repz
push
movsl
pop
mov
cmp
cmp
ss
lock
mov
mov
jo
mov
lcall
cs
dec
outsb
adc
mov
int
jns
push
and
jl
hlt
outsl
mov
pusha
inc
dec
outsb
adc
pop
mov
jmp
xchg
prefetcht2
xchg
ficoml
into
mov
xor
push
cmpsb
push
dec
scas
cwtl
jbe
andl
pop
mov
lahf
inc
addr16
pop
jbe
pop
scas
stos
fisubrs
dec
xor
mov
pop
idiv
pop
clc
test
mov
xchg
test
fsubl
pop
pop
mov
sbb
jmp
clc
pop
stc
outsl
scas
bound
jbe
fs
imul
repnz
out
lods
sub
cld
xor
jecxz
sbb
outsl
sbb
lret
mov
pushf
fcomp
loop
xchg
push
ja
jg
lods
pop
fisubrs
jo
mov
lret
dec
jb
or
pusha
fdivrl
add
lds
mov
mov
mov
jbe
jg
and
push
bound
dec
xchg
jle
pop
lea
in
std
inc
aam
push
cmp
hlt
xchg
inc
ret
aas
add
xchg
jp
int
add
mov
nop
pop
jl
adc
dec
fdivp
shll
pop
jno
rorb
lret
fwait
cwtl
in
adc
jg
push
add
fistps
dec
cmp
pop
add
sub
cmp
push
jge
sarb
dec
icebp
insl
cmp
sbb
mov
cs
lea
cs
add
add
adc
movsl
pop
aam
sub
imul
sti
es
and
add
xchg
aad
dec
and
adc
ljmp
jle
mov
test
xchg
mov
cmp
xor
imul
pop
test
sbbb
test
test
mov
enter
mov
xchg
dec
negb
cmpsl
cmp
xor
fmull
xchg
cmp
mov
ss
sbb
addb
lcall
jno
pop
scas
nop
sbb
push
cltd
mov
xchg
push
mov
add
xchg
lds
popa
or
sahf
inc
in
lret
sbb
shl
jp
stos
sub
popf
xchg
xor
pop
xor
fstpt
rclb
pop
iret
xor
cltd
or
dec
xorb
cmp
orl
cld
jbe
sahf
rep
xchg
add
jne
jl
fidivs
xor
int
or
sub
push
imul
incl
push
movsb
mov
es
stos
loope
mov
add
scas
ret
adc
fidivs
sbb
cmp
inc
mov
daa
inc
jnp
jns
jbe
and
pop
int3
dec
push
jmp
and
ffreep
andl
adc
imul
aaa
cwtl
cmpsl
push
test
cmpsl
jmp
push
insl
add
mov
mov
pop
push
pushf
mov
push
adc
loopne
fadds
sub
xchg
in
sarl
mov
pop
add
add
push
sti
push
push
jl
repz
lahf
imulb
or
pushf
pop
mov
test
jp
xor
inc
jnp
mov
fisttpl
pusha
cwtl
and
push
xchg
xor
test
jbe
fs
addr16
push
mov
loopne
icebp
xchg
sbbl
das
mov
out
pop
adc
outsl
test
push
sahf
aam
pop
test
add
inc
shl
les
adc
push
sub
mov
pushf
cmp
push
push
enter
jo
xchg
ljmp
jbe
fucomp
cmp
mov
int
pop
or
sub
sti
xorl
insl
lods
out
fisubrs
push
outsb
pop
pushf
sahf
repz
jg
mov
loopne
pop
ds
sub
xchg
cmp
in
pushf
cmp
inc
lcall
jmp
retw
push
fwait
and
sbb
xor
in
and
cmp
sbb
dec
cmc
stos
or
nop
or
adc
clc
cmpsb
cmp
inc
mov
mov
mov
pop
push
sub
mov
and
and
push
push
add
add
mov
xchg
sbb
insb
xor
pop
jle
dec
inc
push
jle
into
lock
add
xlat
lods
std
iret
inc
push
insl
push
jnp
shll
and
dec
sti
sbb
ljmp
call
push
outsb
push
pushf
jg
lahf
enter
inc
ljmp
dec
lret
sbb
jmp
inc
sub
xchg
popf
movl
lea
mov
cwtl
xlat
pop
or
fdivrl
lea
decl
lret
or
mov
clc
dec
cwtl
adc
jb
out
push
or
mov
in
rolb
jl
jo
mov
and
dec
cmp
or
cmp
mov
test
ds
loopne
fchs
push
push
or
mov
adc
les
push
les
push
aaa
mov
jo
gs
scas
data16
dec
push
mov
mov
jo
add
xor
sub
in
enter
pop
hlt
das
test
add
in
scas
lcall
jmp
gs
daa
inc
bound
mov
xchg
jb
xchg
in
mov
sbb
cltd
mov
fbld
or
sbb
rorb
push
hlt
mull
xchg
pop
mov
inc
inc
cli
fsubs
mov
inc
inc
adc
andl
cs
cmp
add
jb
push
shl
imul
incb
push
push
cli
jns
push
cwtl
mov
dec
repz
lock
int
jge
nop
pop
iret
sub
pusha
lret
stos
mov
rorl
stc
nop
sti
daa
mov
cwtl
cmp
jae
decb
pop
inc
xor
cld
sbb
sub
xor
mov
xchg
dec
jp
clc
dec
mov
pop
ror
sub
cmpsb
aam
fildll
add
inc
push
dec
pop
mov
pop
das
sbb
jns
test
int
jns
mov
dec
cli
cmp
popa
repz
push
notb
movsl
in
inc
mov
jl
cli
mov
xorl
push
stos
movsl
inc
icebp
push
push
stc
sbb
jl
xchg
sub
adc
cmc
insb
sub
aaa
js
lahf
push
mov
xor
fldenv
mov
dec
push
sub
nop
xchg
jl
dec
lret
rol
inc
cs
or
stc
iret
pop
orb
inc
mov
lret
lea
adc
shlb
and
test
lods
sbbl
adc
cmc
nop
or
cmp
cmp
mov
xor
pushf
jmp
xchg
cld
jg
nop
loopne
push
jns
in
sbb
nop
pusha
adc
ljmp
sti
insl
jp
mov
inc
or
test
mov
data16
out
adc
testl
adc
cld
scas
loope
or
sub
mov
and
filds
sbb
adc
push
mov
and
ret
imul
lock
mov
mov
pop
sub
sarl
inc
mov
mov
xchg
xor
pop
cmp
clc
inc
push
insb
repnz
push
sub
out
cmp
and
xor
cmc
mov
fbld
mov
movl
rclb
les
pop
mov
push
inc
xlat
lds
add
push
push
mov
mov
lret
test
or
movsb
push
out
imul
adc
add
sbb
cmp
cmpsb
loopne
jg
fwait
mov
mov
mov
mov
mov
mov
cmp
fadd
into
insl
cwtl
pop
mov
xlat
outsb
push
ret
ret
pmaddwd
jmp
out
addb
push
mov
dec
dec
sbbl
pop
lcall
sbb
repz
in
mov
inc
sub
iret
call
mov
mov
xor
arpl
movsb
and
lea
xchg
jns
push
cmpsl
sti
mov
or
pop
adc
push
scas
jmp
and
test
add
pop
sub
xchg
aad
daa
dec
fidivs
subb
mov
jle
xor
mov
cmp
ret
testl
pop
jns
push
pop
mov
mov
rclb
mov
or
adc
mov
lcall
js
push
pop
es
mov
jae
arpl
int
sarb
mov
shlb
pushf
ds
in
push
data16
or
mov
add
xchg
inc
out
xor
add
jp
xchg
cmp
jae
xchg
and
lret
mov
pop
or
movsb
xor
testl
or
inc
cmpsb
in
in
dec
movsb
adc
stc
lcall
mov
out
movsl
stc
adc
por
jge
mov
jno
push
scas
jns
andb
xor
mov
cmc
lahf
push
int
xabort
fwait
mov
cmpsl
cs
add
pop
add
xor
cmp
xchg
cld
roll
icebp
aas
mov
xor
sub
xchg
fdivrs
in
jne
stc
dec
pop
stos
lock
jo
inc
mov
cmp
adc
popa
xor
add
pop
jecxz
lea
clc
pop
aas
push
test
cmpsl
xor
xchg
gs
sub
mov
sub
mov
xchg
or
fldl
popf
inc
cld
repnz
imul
mov
add
xchg
jb
cmpsl
out
mov
jbe
stos
lea
push
das
sub
or
icebp
jl
sbb
clc
push
jb
ret
adc
imul
test
mov
imul
testb
andl
cld
pop
push
hlt
pop
xor
mov
frstor
adc
mov
scas
icebp
leave
adc
add
inc
leave
and
lods
ja
jae
call
jge
punpckhdq
fisubs
xchg
cmpsl
std
cwtl
outsl
mov
pop
xor
pop
mov
aad
or
cs
cmpsb
jmp
cmp
push
cli
out
scas
push
or
xor
dec
dec
add
fiadds
insl
sbb
sbb
or
in
jne
rcl
mov
cwtl
mov
adc
lock
xchg
scas
and
mov
jne
mov
cli
out
inc
aas
and
fwait
cs
scas
pop
add
popa
push
dec
popf
shlb
les
cmpsb
enter
push
pop
call
add
mov
jmp
jg
mov
repnz
jne
mov
aaa
xor
cltd
ljmp
movsl
push
jbe
inc
adc
ds
or
aam
cmp
sub
data16
pop
pop
add
add
ljmp
cmpsb
repnz
and
jno
mov
sbbl
mov
xchg
dec
dec
and
cmpb
and
iret
movsl
mov
xchg
outsb
xchg
lret
push
xor
cli
push
sahf
xchg
mov
jecxz
xchg
or
loopne
in
fyl2xp1
pop
leave
sbb
sub
movsb
dec
and
dec
subb
mov
out
mov
sbb
lds
jns
ret
sbb
cmp
dec
icebp
push
jb
faddp
repnz
sbbl
fs
xlat
les
xchg
add
les
sub
cs
sub
clc
cs
movb
es
add
ret
clc
dec
stos
popf
iret
inc
clc
test
mov
jns
mov
loopne
fwait
cmpsb
xchg
dec
adc
xor
jno
imul
xor
stc
xor
add
cwtl
pop
bound
sub
int3
fnstsw
sub
sbb
inc
int
mov
adc
xor
popa
enter
or
mov
inc
ss
push
mov
cmp
mov
inc
ds
loopne
cs
push
addr16
adc
push
sahf
and
jp
leave
mov
fbld
xor
and
push
push
push
fstpl
enter
les
aam
pop
pop
add
fnstcw
bound
lods
xor
mov
addl
sbb
aad
mov
adc
cmpb
outsb
mov
mov
cmpsb
mov
dec
movsl
daa
xor
push
orl
mov
jnp
xor
addr16
insl
lods
mov
ret
and
pusha
dec
aad
or
mov
dec
cmpsl
lret
test
mov
xchg
xchg
mov
negl
in
je
mov
dec
jns
popa
xor
sbb
mov
test
mov
dec
sub
repnz
icebp
xor
clc
test
sbb
pop
enter
dec
jnp
test
xchg
and
aaa
lret
sbb
sub
iret
mov
cmp
out
inc
daa
inc
inc
daa
stos
es
adc
xchg
flds
stc
xor
and
cmpsl
dec
sbb
xchg
push
xchg
xchg
mov
addl
incl
xorb
mov
mov
shld
mov
shufps
daa
mov
rol
scas
pop
testb
jno
pop
sub
sub
mov
addps
pop
lods
testl
mov
add
push
cli
sarl
jnp
rcr
dec
dec
jnp
js
sbb
and
loop
jecxz
test
or
dec
sub
in
cmpsl
add
enter
jae
pop
adc
popa
mov
xchg
mov
sbb
stos
imul
cmpsb
and
in
mov
gs
and
outsb
leave
cmp
add
pushf
or
call
movsl
mov
mov
andb
push
cmp
test
xor
das
cmc
loop
jmp
inc
xor
outsl
xor
mov
adc
lahf
lds
pop
mov
cmp
aaa
insb
adc
jp
fists
push
test
scas
push
push
shll
sub
fcomps
push
dec
jnp
mov
jl
add
fstps
outsl
pushl
fwait
push
or
pushf
mov
in
xchg
xlat
mov
adc
xor
mov
ss
mov
arpl
sub
test
mov
divl
mov
push
popf
push
test
sbb
ss
cmpsl
cmp
or
out
mov
push
arpl
loop
pop
cmpsb
daa
or
test
les
or
cltd
and
dec
and
es
test
pop
int3
fdivrp
sbb
shlb
rorb
das
dec
fs
aad
aaa
cmc
inc
push
in
roll
push
and
pushl
stos
mov
shl
push
pop
jg
mov
ljmp
adc
mov
dec
dec
jg
in
sbb
add
imulb
vandnpd
sub
aas
or
adc
ss
mov
in
add
scas
movsb
movsl
and
push
fbstp
sti
iret
loope
jmp
bound
or
add
add
popa
sbb
sub
or
scas
scas
into
fisubrl
cs
sbbl
jle
xchg
movsb
sbbl
jnp
sub
xor
cmpsb
ds
xor
test
out
idivb
les
cmpsb
inc
push
aaa
mov
xor
mov
ss
dec
add
adc
and
push
add
jo
int3
xlat
jnp
lret
pop
into
fsubl
sub
imul
popa
push
or
or
rcrl
rclb
mov
loope
or
mov
jns
icebp
or
std
xchg
dec
push
mov
inc
or
mov
addl
js
and
pop
mov
jl
jb
pop
push
add
dec
gs
mov
jmp
pop
outsl
test
fwait
test
pusha
mov
daa
ljmp
mov
or
pop
adcb
in
sbb
movsb
subb
push
aaa
iret
xchg
inc
hlt
xor
push
sarb
andl
push
aas
ljmp
mov
ds
ficoms
sbb
sahf
xchg
repz
aad
jmp
push
inc
add
mov
push
mov
adc
stc
mov
js
dec
mov
adc
mov
push
adc
inc
xor
arpl
add
or
push
fdivs
fiadds
push
test
enter
push
jae
je
into
jae
jo
out
imul
and
inc
sub
or
sub
addr16
cli
movsb
fs
jge
or
mov
je
lret
mul
pushf
mov
repz
mov
rorl
cli
out
ds
mov
sbb
jle
aam
je
lods
ret
test
push
jge
xchg
subl
fwait
adc
cmp
mov
xchg
inc
pop
ds
mov
enter
xor
cmpsl
xor
shl
hlt
mov
js
mov
nop
inc
sbb
mov
inc
repnz
cli
cmp
jmp
cmp
out
pushf
sbb
mov
xor
daa
out
adc
leave
sub
mov
leave
pop
bound
jmp
gs
pop
stos
mov
and
mov
cvttps2pi
push
das
add
fwait
pusha
cmpl
test
or
adc
adc
dec
pop
jae
fs
orl
into
and
mov
ljmp
pop
popa
call
jle
aam
push
loopne
cmp
xchg
and
daa
add
sbb
das
stos
xchg
fldcw
cmpsb
enter
fwait
arpl
push
adc
mov
cli
jl
mov
mov
push
mov
mov
clc
pop
mov
dec
mov
mov
pop
ljmp
push
lock
frndint
jne
xlat
pop
sbb
loop
cmp
mov
push
out
or
add
pop
test
pop
dec
rorl
jno
push
sti
cmp
dec
inc
int
mov
and
jnp
or
sbb
jp
into
mov
mov
ljmp
mov
outsb
insb
enter
xor
xlat
out
ret
orl
rcll
loopne
cmpsb
push
fsubr
stos
lret
mov
negb
mov
inc
das
decl
roll
inc
outsl
sbb
pop
int
repnz
add
out
or
dec
inc
xchg
or
sbb
and
stos
mov
sub
or
mov
shll
push
in
sbb
mov
leave
ss
inc
cli
push
adc
dec
xlat
pop
lods
aam
clc
push
gs
repnz
call
fsubrs
nop
mov
xor
inc
jnp
push
mov
daa
int
fbld
out
push
mov
mov
push
or
loopne
repz
cvtps2pd
mov
in
xor
cld
push
pop
dec
cmpl
movsl
xor
fildl
jns
cld
sub
das
xchg
mov
ret
xor
repz
sub
and
shlb
xchg
dec
loopne
or
jae
scas
sub
lret
pop
jb
pop
pop
jp
mov
lahf
movsb
icebp
xchg
lahf
xor
add
aam
in
loope
xchg
jno
ljmp
and
arpl
push
mov
out
xchg
call
mov
xor
ss
rolb
cs
push
push
test
cmp
test
lea
sbb
add
xchg
jecxz
sbb
sub
inc
test
mov
pop
icebp
or
push
neg
hlt
sarl
push
inc
dec
bound
pushf
sbb
add
add
clc
mov
mov
imull
push
or
jae
in
xchg
roll
sarb
aaa
stos
outsl
imul
pusha
bound
push
sbb
ret
mov
xchg
jmp
inc
add
xor
inc
insb
xor
cmp
push
sbb
mov
lds
lds
sbb
stos
cli
cmp
fnstsw
adc
add
mov
and
jp
dec
sub
in
jb
dec
and
loope
and
xor
cmp
fidivl
call
mov
jmp
mov
push
insl
mov
hlt
movsb
sub
decl
add
pop
jg
cwtl
xchg
out
fs
lahf
jmp
icebp
jb
cmp
adc
and
adc
out
pop
adc
shll
mov
push
negb
mov
shr
je
jle
inc
and
sti
or
sbb
daa
xor
or
rorl
push
add
xchg
ja
mov
sub
imul
push
nop
fwait
inc
sbb
sbb
mov
in
loope
imul
cmp
mov
mov
and
jne
fcom
ret
xchg
pop
rcrb
jmp
mov
inc
leave
adc
jp
sbb
mov
dec
cwtl
jmp
lods
std
das
repz
iret
pop
rcll
stos
jbe
in
dec
adc
stos
push
pop
xchg
pushf
mov
rclb
push
ss
lret
sbb
loopne
jo
xchg
push
push
dec
test
out
jl
adc
mov
cltd
inc
mov
xor
loope
or
es
loopne
subl
xor
jns
pushf
addl
in
pop
andb
cmpsl
sbb
dec
or
pushl
ja
scas
mov
xchg
xor
push
aad
inc
push
aam
cmc
lods
fdivs
pusha
bound
or
sbb
push
lret
cmp
xchg
jae
inc
pop
in
lea
add
pusha
loope
es
mov
daa
jge
and
movd
clc
out
dec
mov
cmp
push
cmpsl
sahf
or
arpl
stos
or
xor
xchg
dec
push
inc
out
mov
test
sbb
and
jl
mov
sbb
ret
mov
je
jle
add
jne
mov
cmc
cmp
sbb
mov
or
jno
ret
push
jnp
rorl
fwait
jmp
je
stos
test
fildl
xchg
in
add
add
add
sbb
or
insl
jb
clc
sub
mov
outsl
fimull
sub
idivl
and
jmp
in
shlb
mov
cwtl
inc
sbb
cmpsb
call
fstp
pop
pusha
shlb
jnp
or
repnz
rcr
xchg
gs
ljmp
shlb
mov
fldl
sub
dec
cmp
inc
out
movsb
xchg
mov
repz
out
cmpsl
or
inc
cwtl
iret
and
cmp
out
sub
gs
insb
xchg
stos
sahf
push
xor
clc
push
mov
dec
loopne
jbe
xchg
pushf
mov
addr16
js
xchg
into
dec
mov
outsl
js
inc
sbb
push
popf
inc
aad
shl
js
cmp
pop
push
pop
dec
adc
jns
sub
cs
sub
lods
and
adc
es
insb
rorl
int3
sub
cli
mov
adc
push
sbb
int3
aad
ljmp
lods
adc
push
ret
xor
std
roll
mov
shlb
or
pop
aam
mov
mov
or
test
push
les
adcl
outsl
lods
sub
mov
inc
inc
adc
daa
push
adc
movsb
mov
ds
insb
nop
orb
imul
inc
repz
rcrl
sbb
in
cli
jno
mov
cmp
addr16
xor
mov
pop
bound
orl
xor
out
movsl
xchg
loop
and
adc
dec
xchg
push
cltd
push
jge
fs
xorl
xchg
add
shll
push
mov
cmp
or
mov
test
mov
addr16
sbb
mov
or
enter
cmp
pushf
loope
inc
add
mov
std
pop
pop
fwait
sbb
cmpsb
out
jge
iret
jb
pop
jbe
add
dec
mov
push
loopne
xchg
sub
jl
sub
dec
mov
fucom
je
iret
je
jbe
test
testl
arpl
test
dec
loopne
jg
outsb
pop
enter
bound
sbb
xchg
sub
mov
pop
insb
mov
pop
dec
mov
cmpsl
jl
outsb
daa
fsubl
xchg
mov
rorb
xor
ljmp
lods
ljmp
jnp
imul
mov
pop
or
out
push
xchg
xchg
daa
xor
test
stc
jns
roll
push
negb
in
aas
cwtl
sbb
adc
imul
inc
out
loope
sbb
xchg
pushf
mov
inc
outsl
or
add
pop
mov
mov
out
mov
sarl
int
jnp
and
dec
pusha
cmp
cli
jge
scas
mov
add
das
adc
mov
push
cs
popf
repz
cltd
jle
sahf
cmp
or
loopne
out
das
pop
fwait
enter
lds
repz
mov
inc
das
or
lret
mov
rclb
clc
aaa
sub
sbb
and
jno
sub
sbb
out
inc
aam
popf
push
xchg
inc
xchg
mov
cmp
jo
out
mov
jmp
dec
dec
add
decb
push
mov
ret
out
fists
jnp
push
mov
push
ja
rolb
inc
fstps
sahf
fxch
pop
push
xchg
orb
dec
xor
fisubrs
lock
fcoms
dec
add
push
ror
fwait
dec
cmpsl
pop
lods
mov
jecxz
pusha
pop
add
std
lods
int3
imul
xchg
push
rclb
pop
shl
adc
sub
ja
inc
xor
shr
dec
out
jae
leave
mov
in
xchg
movsl
push
or
mov
lcall
outsl
and
rorl
into
push
pop
mov
imul
push
in
pushf
repnz
jl
mov
xchg
sub
icebp
jae
sub
in
dec
push
repz
popa
push
lahf
sbbl
mov
in
push
ror
outsl
mov
rcr
and
mov
shrl
pushf
and
daa
mov
pop
mov
and
adc
and
mov
adcl
in
aad
adc
mov
sub
or
xchg
lret
xchg
std
dec
idivl
call
sub
and
cmc
inc
sbb
outsb
or
mov
or
mov
ljmp
outsl
push
testl
mov
push
and
out
push
in
out
push
insl
jmp
jnp
nop
out
ret
xchg
pop
fdivs
shlb
push
jecxz
add
inc
sub
inc
rcll
push
lahf
cmpsb
sub
xor
insb
cmp
push
leave
inc
icebp
xchg
imul
jecxz
xor
mov
dec
imul
cmp
push
lea
lret
adc
dec
shr
and
pop
push
int
xor
dec
dec
inc
popa
sub
dec
or
push
adc
cwtl
in
mov
adc
inc
dec
aam
jbe
xor
sbb
cwtl
lret
lret
pop
or
and
xor
ja
arpl
fadds
pop
fsub
pop
cmp
roll
mov
push
cld
movsl
dec
in
mov
mov
jg
cmc
add
sub
xor
and
sbb
pop
rcll
dec
xor
movsb
imull
ror
push
lds
pop
popa
ja
mov
cmp
stc
xchg
clc
xchg
mov
fs
jmp
sub
ror
xchg
incb
sub
repz
jb
cli
int
pop
cmp
push
push
and
imul
pop
mov
movsl
fdiv
or
lods
out
sub
dec
jno
out
pop
sub
push
lcall
xchg
dec
jge
jmp
loopne
sbb
lret
jns
clc
mov
add
ret
mov
pop
rcll
cmc
into
dec
addb
in
mov
jmp
inc
pop
outsl
cmpl
lret
mov
jae
sbb
cs
push
call
and
jle
out
vmovupd
inc
or
pop
jg
xchg
sbb
outsb
fstpl
lods
int
leave
call
je
mov
adc
test
xor
je
arpl
sub
ja
push
inc
sub
mov
scas
in
cmp
pusha
inc
std
xor
pop
pusha
fwait
mov
ret
xchg
add
push
out
out
push
sub
dec
notb
jge
dec
mov
cwtl
adc
and
std
adc
dec
push
stos
std
mov
cli
sub
pop
inc
sahf
into
into
xchg
sub
or
mov
out
cmp
cwtl
loopne
cmp
mov
aas
xchg
sub
cmpsl
mov
lcall
xchg
adc
imul
jb
lret
movsb
out
xor
ret
aad
in
insb
pop
adc
jp
jmp
add
jo
decb
mov
loop
test
aam
push
arpl
das
and
icebp
popf
insl
xchg
fs
cmp
xlat
bnd
jnp
movsl
dec
out
dec
sub
add
add
sbb
mov
add
mov
out
push
dec
fdiv
xor
cmp
fucomip
mov
or
and
ret
shll
gs
mov
scas
xor
ret
fcoml
or
stos
push
enter
push
xchg
jae
mov
test
sbb
andb
popa
cmp
push
pop
xor
lea
aam
adc
xor
xchg
jecxz
dec
cmc
fwait
iret
add
mov
inc
and
cltd
lcall
ljmp
ljmp
adcb
jno
fcoml
jg
xchg
jg
xor
cli
push
insb
fnstcw
jmp
cmp
dec
jg
pop
out
add
cmp
insb
fs
pop
lcall
xor
mov
jae
mov
call
jecxz
jge
lahf
aas
out
popa
fstps
xchg
icebp
fwait
sbb
jl
lea
mov
lahf
adc
and
jmp
adc
sahf
inc
jp
jmp
jb
jle
inc
xor
adc
mov
pop
dec
pop
pop
scas
push
in
pop
fsubrs
arpl
aas
pop
xchg
and
push
jge
jo
sbb
mov
mov
test
subl
push
out
pop
shlb
sbb
loope
mov
test
xlat
xor
jecxz
add
pop
out
js
inc
and
cmp
add
out
dec
mov
iret
sub
mov
mov
jge
mov
scas
adc
add
dec
or
dec
rcrl
push
push
mov
inc
mov
dec
outsl
jns
data16
sbb
sbb
sub
insl
sbb
test
mov
sbb
rcr
cmp
repz
jne
cmp
mov
je
sbb
push
xor
les
mov
and
in
es
pushf
cmp
jo
or
or
lahf
arpl
rolb
jge
dec
inc
mov
lds
adc
insb
mov
jg
test
push
or
jmp
xor
ljmp
ds
jnp
stos
push
lahf
pop
mov
and
mov
mov
incb
mov
test
adc
arpl
fisttpll
jae
push
push
fistl
xchg
inc
in
dec
mov
cmpsb
push
inc
stos
mov
js
gs
xor
daa
rorl
inc
ffreep
js
mov
fisttpll
sbb
cmp
and
sbb
sbb
adc
adc
jne
notb
jnp
int3
or
pusha
shrb
data16
push
xchg
fists
test
fwait
cwtl
pop
jo
stos
xchg
adc
out
sbb
push
mov
mulb
xchg
stos
in
inc
out
out
pop
xlat
sbb
mov
ret
scas
insb
pushf
jnp
mov
clc
adc
insb
call
mov
mov
roll
adc
xor
ret
sub
sub
repz
outsb
pop
mov
push
xchg
insb
jb
jne
and
jmp
sub
and
push
push
fisubl
lods
and
add
or
sub
xrelease
cld
lret
hlt
iret
in
lret
leave
xor
adcb
enter
into
mov
mov
xchg
and
push
mov
mov
inc
xchg
out
inc
dec
data16
jge
xlat
pop
inc
push
lock
scas
xchg
mov
test
xchg
push
adc
popf
and
cmp
sub
xchg
decb
jp
fs
mov
and
jecxz
shl
or
test
jae
pop
jmp
jnp
test
jns
fistpll
pop
xor
out
mov
pop
mull
cmpsl
mull
aas
mov
dec
out
mov
pop
mov
xor
ret
mov
sub
sbb
xchg
cmp
fwait
inc
arpl
add
pop
daa
jg
push
push
adc
out
out
jg
out
xor
or
push
les
lret
pushf
adc
pushf
stos
mov
daa
popf
faddl
add
push
mov
mov
rolb
add
addr16
mov
cmp
dec
pop
call
into
int3
fdivl
pop
test
scas
in
dec
or
ficomps
xchg
jnp
rcll
mov
jo
cwtl
aaa
mov
adc
dec
ret
xchg
or
jnp
dec
push
ficompl
scas
adc
pop
jae
cltd
arpl
jno
push
sbbb
lret
in
pop
or
sub
cmp
xor
jecxz
push
dec
cltd
dec
sbb
inc
jp
mov
mov
push
in
add
scas
mov
mov
lea
pushf
push
jb
pop
in
ds
incb
out
mov
into
add
cmp
scas
test
rorl
mov
imul
aad
mov
fldenv
icebp
mov
push
pop
xchg
int
mov
mov
mov
fdivs
push
jae
jmp
sbb
lcall
xchg
lcall
sub
in
push
jp
cmp
lea
movsb
jb
xor
bound
push
sbb
test
xor
push
xchg
cmc
daa
fmul
popa
or
fcoms
pushf
fstps
jnp
and
xchg
movsb
aas
xchg
jp
push
push
nop
lock
shlb
and
loopne
push
pop
pop
pop
icebp
xchg
or
imul
imull
lock
pushf
in
push
dec
pop
mov
pushf
dec
loope
in
shr
sbbb
push
jo
mov
gs
jmp
sti
inc
fdivs
stc
lods
rorl
stos
fdivr
lret
flds
pop
xor
bnd
pop
ljmp
and
cmp
orb
inc
inc
sbb
nop
test
dec
rcrb
subb
sbb
ja
imul
jecxz
addl
fdivr
orl
jle
jl
enter
loopne
repz
insl
lret
cli
xor
shll
add
hlt
and
dec
or
out
sub
rcrb
repz
mov
loopne
test
sbb
loope
stos
inc
xor
in
dec
jge
xor
jl
xchg
sub
shll
into
out
jae
sub
in
lret
pop
and
andl
mov
jle
and
mov
in
sar
std
psllq
repz
cwtl
jmp
test
mov
add
or
push
mov
movsb
jle
pop
sbb
sub
pushf
repz
push
xchg
movsb
xchg
or
jge
movsb
lods
lods
dec
sub
mov
mov
adc
xor
stc
xchg
push
js
lea
stos
xchg
mov
gs
xchg
jns
jno
push
mov
mull
int3
fdivs
loope
xor
popf
inc
scas
or
adc
lcall
pusha
imul
clc
lret
or
sti
rcll
out
push
clc
jns
adc
pavgb
mov
inc
jae
push
test
mov
jge
mov
ret
stos
pushf
out
ss
dec
std
push
push
add
imul
inc
push
add
in
add
or
mov
pop
push
sub
jl
ljmp
sub
test
inc
ficomps
push
lcall
add
xor
inc
icebp
fadd
xor
sbb
lods
jmp
mov
add
jecxz
ljmp
repz
stos
out
data16
pop
imul
out
gs
pop
add
into
pop
mov
incb
dec
push
ljmp
sub
rcrl
jae
jne
dec
ficomps
adc
inc
or
jg
xchg
dec
xor
dec
jae
mov
push
fdivs
xchg
xor
in
shlb
xchg
dec
dec
mov
ficompl
and
ror
fstpt
test
repnz
int3
aas
push
xor
or
and
fistpl
out
mov
mov
movsl
mov
cs
rcl
leave
lods
mov
inc
and
bound
add
jbe
pop
fs
mov
lret
or
insl
and
xor
imul
idivb
aas
jbe
and
jp
jle
xor
jbe
mov
mov
mov
leave
xchg
bound
dec
pop
jnp
jne
jg
popa
fildl
jl
dec
rolb
je
mov
movsl
sub
jnp
jecxz
lret
addl
stos
push
cmp
inc
cmpl
int
ja
icebp
add
and
push
test
xchg
pusha
outsl
dec
add
rcl
loopne
stos
jns
pop
je
add
lret
sub
ret
arpl
mov
shrb
lods
sbb
pop
cmp
fildll
popl
inc
outsb
mov
iret
sbb
loope
xchg
mov
add
mov
jg
mov
mov
jp
stc
fisttpll
outsb
add
cmc
inc
lahf
loope
sbb
aam
and
adc
negl
sbb
push
test
shrb
sarb
sti
mov
and
or
aad
fimuls
inc
daa
sbb
xor
std
sub
xor
lods
scas
and
and
fs
pop
cmc
out
adc
stc
adc
sbb
push
cs
mov
mov
mov
push
leave
leave
jbe
xchg
and
fwait
shrl
adc
daa
out
aaa
sbb
daa
dec
lods
pop
dec
mov
test
daa
loop
or
mov
xor
stos
sti
rolb
ret
cmpsl
cmpl
lods
inc
scas
into
pop
cs
jmp
and
mov
mov
push
arpl
mov
xor
inc
in
xor
sarl
dec
fcomip
pop
loop
sbbl
add
cmp
sbb
cltd
jl
cmp
mov
stc
xchg
cmpsb
out
shll
icebp
mov
ja
mov
push
sub
fisttpll
test
sarl
jne
lret
sbb
repz
and
clc
xchg
dec
add
mov
xchg
mov
inc
inc
popa
push
fsubl
ret
pop
adc
cmp
jbe
adc
mov
jns
fs
cwtl
and
pop
mov
pop
lds
push
shll
aas
add
mov
dec
test
stos
mov
cmp
sub
cltd
cmpsb
lcall
inc
and
fstp
sti
or
arpl
push
cmp
cmc
fcompl
out
leave
inc
cmp
movsb
adc
mov
daa
out
adc
leave
je
loopne
imul
push
inc
ret
jns
mov
cmc
sahf
es
std
jl
add
mov
jmp
imul
push
rorl
jge
mov
inc
repnz
add
and
notb
and
pop
jge
dec
or
inc
cmc
add
lret
sub
inc
jae
gs
and
mov
or
insl
fcmovnbe
inc
xor
out
mov
ret
jge
in
mov
insb
in
int3
push
jbe
aas
and
xor
jo
fstpt
ror
arpl
ljmp
add
loop
fwait
daa
dec
lret
cmc
repnz
shll
adc
ja
xchg
adc
das
test
mov
orb
push
mov
push
insb
xchg
push
addb
and
pop
and
pop
mov
ljmp
dec
insb
rcr
leave
divb
sar
push
xlat
mov
das
ficompl
dec
enter
mov
inc
addl
insl
jbe
and
cmp
popf
cmpsl
std
sub
test
dec
inc
sub
sub
adc
shlb
or
mov
sbb
aad
pop
sbb
mov
cmc
mov
addr16
dec
push
fadds
div
leave
icebp
cmp
xlat
jnp
or
insl
inc
gs
hlt
call
orl
loopne
or
fimull
jmp
std
nop
jp
or
pop
xchg
loope
dec
xchg
out
xchg
test
sbb
aad
add
stc
lods
sbb
ret
mov
push
dec
fcomip
xchg
push
cmp
cwtl
pushf
sbb
aad
test
clc
loop
gs
stc
clc
and
fcomip
mov
push
cmp
and
loopne
jo
add
jnp
jl
sub
mov
mov
movsl
imulb
subl
subl
daa
aam
jo
mov
push
jns
add
cld
ret
xchg
mov
movsl
fwait
push
cmp
mov
mov
add
xchg
repnz
loope
mov
out
movsb
xchg
lock
mov
mov
inc
or
xor
insb
stc
xchg
cld
jno
bound
scas
xorb
xchg
jbe
xor
inc
cmp
mov
popf
jg
leave
inc
shll
cltd
xchg
jmp
mov
mov
lock
xchg
push
jecxz
out
mov
jl
in
or
jmp
xor
and
jle
test
stos
xlat
push
outsl
cmp
and
xor
btr
lcall
or
int3
int3
divl
lock
hlt
push
xchg
sbb
dec
inc
mov
out
sub
push
arpl
pop
imul
cli
es
dec
add
dec
outsl
sbb
or
xor
nop
push
testb
jnp
das
xor
daa
es
jle
gs
fisubl
outsb
cmp
cmpsb
pop
sub
stos
push
mov
cmpsb
hlt
cmp
xchg
cmp
in
pop
dec
adc
insb
push
cmp
movsb
int
mov
leave
mov
sbb
in
mov
jo
mov
sub
adc
add
adc
xor
or
or
jb
mov
push
mov
cmp
lret
dec
mov
stos
je
movsb
mov
movsl
fisubrl
cld
xor
sub
add
in
out
or
loope
inc
mov
adc
loop
cmp
mov
dec
or
fwait
jbe
cwtl
inc
inc
stos
rcll
mov
or
jno
in
das
inc
or
out
add
inc
cltd
fcom
push
fidivrl
filds
dec
xor
and
pop
shll
sahf
adc
jp
xchg
lret
out
sbb
fwait
and
pop
cltd
sbb
or
and
jg
inc
inc
or
pop
push
mov
fisubrl
xchg
add
sub
mov
int
cld
and
xchg
icebp
xchg
and
fimuls
add
push
jae
xchg
es
fldl
pop
flds
dec
in
imul
cmpsl
xor
mov
sbb
iret
cmpsb
jns
push
rcl
xchg
cmpb
loop
dec
fcoml
inc
inc
movsb
jle
jmp
mov
pop
lret
dec
ja
xchg
popa
dec
pop
cmpsb
ret
in
cs
jae
jo
mov
je
jg
add
jge
pop
push
mov
sbb
std
xchg
lcall
test
jmp
fisubrl
push
cmp
ret
xlat
imul
jle
adc
das
mov
in
add
add
mov
dec
aad
inc
add
mov
sbb
not
mov
adc
mov
imul
outsb
fadd
out
adc
in
push
aad
mov
movsb
and
sbb
push
sahf
cmp
pop
push
push
movsb
xchg
and
jno
sub
adc
mov
cmc
pushf
movsb
jecxz
leave
mov
sti
mov
inc
roll
repnz
les
in
pop
aad
pop
stc
cmp
stos
sbb
jbe
lds
or
xchg
adc
insb
loopne
mov
lock
repnz
mov
sarl
and
imul
inc
push
xor
xor
adc
adc
ja
pop
std
imulb
loopne
sbb
mov
push
fcomi
in
adc
add
xor
scas
and
lahf
xchg
cmc
sarb
mov
fwait
mov
xchg
nop
xor
push
mov
fwait
push
adc
push
stos
jb
inc
subb
test
xor
push
mov
cmc
mov
in
sub
pop
pushf
mov
rorl
icebp
mov
inc
adc
lahf
dec
and
xor
daa
dec
decb
cmpsb
je
fsts
or
push
js
inc
test
dec
and
dec
faddp
lods
pop
jl
xor
in
pop
mov
mov
idivl
add
inc
sub
mov
or
aas
int3
lret
adc
mov
mov
mov
lods
lea
xchg
push
inc
dec
test
jmp
jns
lods
cmp
je
xor
int
mov
jecxz
in
mov
inc
popa
mov
pop
enter
and
adc
pop
xchg
adc
and
mov
hlt
nop
and
and
sahf
lea
enter
fwait
mov
sbb
mov
inc
mov
insl
mov
inc
mov
mov
xchg
cmp
mov
sub
pop
jno
cmpsb
lods
xchg
dec
into
popa
mov
inc
and
add
jbe
insl
push
pop
sbb
jmp
imul
sub
jecxz
jnp
lea
adc
jne
in
lods
pop
dec
mov
jle
xchg
into
jle
dec
fwait
dec
jecxz
incb
cltd
sub
xor
scas
inc
sub
das
cmpb
addr16
sahf
jecxz
push
sbb
andl
mov
out
repnz
imul
leave
ljmp
repz
inc
push
inc
test
pop
bound
xor
xlat
push
inc
xchg
fstpt
daa
dec
fs
int3
bnd
xorl
jae
push
in
inc
mov
cli
and
or
cltd
push
outsl
in
jp
loopne
adc
sub
icebp
fcmove
movsl
cltd
lret
xlat
stos
xlat
jle
nop
cmpsb
divl
loopne
xor
add
xchg
lea
nop
mov
or
repnz
dec
cltd
mov
ds
xor
cmpsb
imul
out
addr16
sub
outsb
dec
mov
pop
mov
cwtl
mov
dec
sahf
push
cs
mov
cmp
mov
cmp
mov
clc
movsl
fnstenv
sub
movsb
fbld
push
inc
push
xor
sub
nop
movsl
js
clc
repnz
in
pop
pop
sbb
cmp
inc
inc
jae
xor
jl
stos
mov
in
pushf
fdivrs
sub
dec
cmp
mov
fstl
stos
leave
inc
cs
sbb
dec
mov
or
xchg
lret
pushf
cmp
js
push
fnstenv
or
xchg
repz
pop
mov
es
leave
xchg
inc
mov
cmp
sbb
in
or
inc
sbb
enter
inc
cmc
frstor
dec
out
arpl
mov
cmpsl
cmp
lcall
sub
or
aas
addr16
lock
sahf
popf
mov
orb
xor
fsubrp
int
fwait
js
inc
sub
cltd
lahf
inc
add
adc
pop
and
mov
push
cmpsl
jae
out
jecxz
lcall
js
das
xchg
and
not
xchg
mov
lods
dec
das
cld
pop
test
cwtl
out
shll
push
add
or
adc
sar
jecxz
and
pop
cmp
or
loope
dec
je
cld
mov
into
push
test
adcb
mov
punpckldq
push
inc
int
cmp
out
and
push
jne
mov
xchg
mov
pop
inc
or
leave
aad
sbb
in
les
pop
adcl
nop
adc
fisubl
xor
mov
cmp
mov
xchg
and
sbb
out
popf
mov
dec
je
pop
mov
xchg
in
in
clc
mov
mov
das
sub
loopne
and
jne
push
shll
inc
pop
subb
sarl
subl
bound
popf
popl
dec
inc
jne
fidivl
xchg
filds
loop
in
repz
lds
pop
sub
fcmovnu
cwtl
mov
pop
test
pop
inc
sub
int3
lods
cli
xchg
sub
mov
push
adcb
push
inc
adc
mov
iret
mov
push
xor
and
outsb
and
xchg
test
dec
je
icebp
adc
lea
call
stos
jne
ss
popl
push
sti
sbb
xchg
mov
nop
stos
lret
nop
cmpsb
ret
inc
push
arpl
sbb
ret
iret
popa
cmpsb
stos
test
enter
mov
push
inc
xchg
ss
das
jg
jo
gs
add
andl
cli
xchg
mov
rorl
shll
aas
push
std
mov
punpckhbw
jg
pusha
sti
mov
in
sub
and
mov
pop
push
sub
out
lret
out
jmp
sub
mov
or
fs
sub
jno
fs
or
jbe
and
or
scas
mov
dec
test
ret
aas
aas
js
mov
mov
add
pop
clc
cwtl
inc
jecxz
mov
scas
or
push
mov
mov
clc
lea
push
add
pop
dec
test
int3
add
jne
iret
repz
ret
mov
cmp
sbb
cld
fimuls
mull
pushf
cltd
pop
cltd
gs
loope
inc
mov
dec
lret
lret
push
jmp
mov
and
pop
sbb
insb
mov
loope
ret
push
test
out
data16
mov
add
test
dec
xchg
pop
add
mov
cmp
aas
das
pop
fnsave
push
cltd
mov
jle
std
xchg
sub
pop
jecxz
pushf
daa
pushf
jbe
movsb
mov
icebp
test
adc
cmp
inc
push
testl
leave
sbb
mov
shll
mov
xchg
test
push
aad
and
movsb
add
adc
mov
jno
lea
add
xor
cld
xchg
fwait
orl
jns
inc
orl
repz
jne
or
mov
clc
adc
and
inc
std
addr16
push
and
push
roll
cmpsb
mov
ljmp
pop
pop
jae
data16
push
fidivs
lahf
mov
push
xlat
pop
scas
fmul
xchg
or
push
call
sub
jl
push
cs
push
jno
enter
cmp
xchg
pop
xor
sub
enter
ret
sub
mov
push
repnz
sbbb
movsb
vpmullw
or
out
es
test
addl
push
adc
dec
lods
fdivrs
mov
repz
dec
or
movsb
repz
jne
inc
arpl
jl
movsl
mov
out
cmpsl
jae
jl
xchg
mov
jp
adc
sbb
imul
mov
nop
mov
arpl
xchg
mov
mov
cmc
sti
fstps
out
jg
imul
jmp
dec
jmp
cmpsl
fidivrs
outsl
jp
add
push
sbb
sti
jecxz
pop
mov
inc
dec
add
mov
stos
daa
sub
sub
out
xchg
out
xchg
aam
nop
jmp
jl
jmp
inc
lock
push
test
inc
mov
mov
int
or
inc
mov
xor
xor
scas
inc
add
lds
rorl
sbb
filds
pop
sbb
dec
push
lret
or
fwait
jnp
sbb
mov
mov
pop
je
mov
push
loop
shlb
jne
cs
cmp
popf
xor
lcall
mov
mov
ret
subl
fidivrs
or
repz
and
mov
mov
and
sub
popf
sbb
xchg
fs
mov
std
divl
dec
pop
xor
sahf
sub
mov
in
inc
outsb
andb
push
movsl
movsl
and
pop
movsl
push
mov
jle
mov
cmp
lds
in
xor
inc
test
shrl
add
push
lods
mov
xchg
dec
mov
cs
hlt
mov
mov
sarl
fs
adc
fadd
lcall
ret
ret
mov
xchg
testb
cmp
adc
or
icebp
clc
mov
in
lds
in
add
cmp
les
orb
xor
jnp
jae
adc
xchg
rol
xchg
lret
sub
sbb
sbb
out
xchg
sub
insl
mov
out
inc
pop
pop
pop
lahf
loope
pop
dec
sub
iret
mov
pop
lods
adc
sbb
insb
rcrb
pop
cmp
cmp
icebp
testb
test
cmp
bound
scas
enter
icebp
idiv
cli
in
mov
mov
ret
lcall
in
or
idivl
adc
mov
leave
lcall
sti
fsub
xor
xchg
dec
jb
out
dec
jns
mov
sbb
mov
pop
dec
pop
imul
out
adc
out
jmp
mov
mov
dec
stos
cwtl
or
push
xchg
or
adc
movsl
rcll
dec
out
imul
xor
aaa
mov
xchg
lods
cwtl
insb
movsb
mov
inc
xchg
or
nop
in
enter
or
pushf
adc
xor
pop
int3
mov
sbb
je
stos
and
sbb
fstpl
daa
mov
inc
inc
pop
push
clc
gs
fistpll
out
jo
dec
xchg
adc
cltd
test
lods
rorb
insb
jnp
testb
sub
dec
pop
push
sub
inc
add
xchg
mov
pop
pushf
ljmp
xor
fcomp
lock
adc
movsb
stos
jb
and
mov
js
dec
sbb
mov
mov
mov
jnp
test
nop
pop
mov
repz
sbb
xchg
mov
pop
dec
xchg
jecxz
xchg
inc
push
in
int
xor
pop
push
inc
out
sub
frstors
jle
jb
aam
jmp
jne
sti
addl
in
out
stos
jle
aaa
sub
enter
je
jae
fcomip
rcrb
lret
push
add
cwtl
cld
mov
push
or
xchg
pusha
xor
inc
add
sub
notl
mov
xor
out
ljmp
pop
lahf
mov
xchg
addr16
clc
xor
lret
push
mov
xchg
out
outsl
ret
sarl
or
xchg
fcomps
fstpt
int3
vcvtsd2ss
fsubrp
mov
ss
sub
xchg
cli
adcl
jb
fsubl
mov
out
outsb
cmp
stc
fwait
loop
lea
adc
add
pop
push
push
push
dec
lret
add
mov
jg
in
insl
imul
xchg
repnz
scas
icebp
sub
das
and
or
or
rorb
in
mov
jl
add
mov
cmpsl
clc
pop
cmc
andb
mov
or
inc
shl
adc
bound
sub
mov
adcb
rcrl
lods
out
ja
pop
mov
int
lods
push
mov
inc
lock
shlb
pop
insb
fwait
pop
ret
lret
sbb
imul
scas
iret
cmpsb
jno
cs
cmp
cmp
inc
push
int3
rolb
daa
mov
push
jecxz
addr16
ljmp
in
ds
std
int3
mov
add
cmp
and
inc
adc
js
dec
js,pt
and
mov
cld
mov
push
leave
jg
std
lock
arpl
sbb
call
jecxz
cmp
xchg
xor
cmc
xchg
es
imul
fisttpl
lock
lret
stos
test
mov
adc
hlt
cld
mov
leave
aaa
mov
hlt
stos
sbb
add
subl
and
jo
lahf
cmpsb
push
adc
pop
mov
out
jbe
stos
xchg
push
push
dec
pop
jb
aaa
outsb
push
pop
jnp
push
inc
std
jp
push
jmp
popa
cmpsb
inc
mov
jl
fs
adc
bound
jbe
shlb
sarb
lds
add
mov
ficoml
es
pushf
fsubs
mov
and
sbb
arpl
sub
push
test
or
ffreep
xchg
fcomip
mov
fists
or
addl
leave
jecxz
pop
jp
mov
inc
fwait
mov
and
mov
mov
mov
mov
xchg
cmpl
xchg
enter
aas
sti
cmp
fistl
dec
lahf
xor
and
out
dec
fimull
add
jp
outsl
aam
hlt
sbb
outsb
adc
ljmp
jp
mov
xor
mov
aaa
scas
jg
push
lret
leave
sub
jecxz
xor
mov
mov
data16
jge
pop
pop
jg
push
lods
stos
push
mov
lods
push
adc
dec
mov
sub
and
dec
ss
lea
push
push
int3
test
sti
arpl
sub
sti
fcomps
lods
imul
fbld
cmpl
lock
clc
mov
adc
fcoml
cli
push
and
mov
in
stos
mov
sbb
sub
in
push
sub
addr16
in
std
add
daa
shlb
cmc
das
cli
scas
testl
rcll
jg
mov
inc
popa
push
cs
xchg
push
jmp
clc
and
add
cmp
jmp
jbe
xchg
mov
test
pop
xchg
lods
lcall
cmpsl
push
pusha
xor
mov
cmc
xchg
xor
jmp
inc
ja
sahf
fcomi
sub
js
inc
sbb
cs
hlt
xor
sbb
pop
lcall
cmp
pop
or
mov
lods
and
rcr
dec
into
loope
movsl
sti
aaa
subb
outsb
cmp
lret
xchg
mov
adc
push
out
xchg
dec
inc
fmull
mov
xchg
pop
cli
mov
xchg
stos
sub
ret
pop
mov
ljmp
sar
dec
fdivrl
inc
cmp
movsb
jbe
shll
imul
xchg
dec
inc
add
sub
and
xor
out
loope
imul
fdivl
fdiv
inc
fcomps
js
sbb
es
out
les
loope
pop
es
ret
dec
adc
cmp
add
adc
bound
xchg
ret
jno,pt
mov
incl
mov
push
and
fidivrl
int3
xchg
les
ja
sbb
mov
jae
arpl
hlt
jne
xchg
push
das
das
bound
push
movsl
add
and
inc
jno
mov
icebp
loop
push
out
adc
mov
push
call
lahf
xor
ss
testl
shl
add
inc
mov
jns
popf
loop
adc
sub
xor
stos
lret
lds
xchg
das
add
scas
sub
xor
xchg
stc
insb
lods
adc
sub
pop
dec
inc
pusha
jbe
movsb
jge
fdivp
sti
or
mov
cli
scas
xchg
rorl
mov
mov
mov
jns
xchg
sbb
jecxz
xor
cmp
sbb
sbb
jbe
adc
leave
jmp
fcomi
test
xchg
add
sub
cmp
inc
adc
cmp
inc
cld
mov
xchg
or
or
test
lods
in
add
jo
push
cmp
push
stc
push
push
inc
lcall
data16
pop
bound
inc
push
negl
hlt
xchg
pop
mov
rorl
or
loope
fcmovnu
xor
js
mov
std
orl
jmp
jge
loop
dec
pop
pop
xchg
xchg
cmp
cli
mull
aam
int3
pop
cmp
jno
popf
rcr
cmp
inc
daa
test
xchg
in
xchg
and
cmp
iret
ja
imul
das
call
sub
dec
es
lret
les
or
in
movsl
stos
imul
or
das
jae
lret
int
cld
jb
lret
fcoml
sub
dec
inc
shlb
cmp
jne
out
mov
pop
xchg
movsb
pop
xor
vmovaps
mov
lahf
sbb
jl
push
lcall
dec
dec
add
sti
mov
shl
jbe
imul
test
jns
inc
sbb
inc
nop
cs
fcoms
push
fdiv
mov
ljmp
push
xchg
imul
mov
out
andb
outsb
mov
cmp
frstor
sbb
and
addr16
enter
rcr
lahf
and
sub
pop
or
push
je
cwtl
lods
or
dec
stc
test
jg
ds
mov
sbb
insb
ljmp
mov
inc
fs
arpl
jnp
jl
or
xchg
popa
mov
paddsw
or
je
aam
mov
pop
add
cmp
stc
fnstenv
xor
shrl
xchg
pop
sbb
push
insl
popf
push
ficomps
out
mov
pop
cwtl
call
push
mov
mov
xchg
cmpb
aam
sub
jbe
out
push
lods
adc
adc
adc
jne
shlb
mov
sbb
js
es
pop
loopne
lods
insl
xchg
cmp
popf
popa
outsl
lods
pop
mov
into
aas
gs
inc
out
sub
packssdw
or
and
cmp
and
xor
or
js
stos
iret
and
adc
test
addb
stc
movsb
cltd
cmp
lds
xchg
clc
mov
cmp
and
push
push
sub
testb
jge
dec
int
push
out
or
fld
clc
test
push
dec
jne
fnop
pop
dec
push
adc
mov
pop
sbb
pop
in
aaa
fstpt
test
fidivrs
scas
dec
fcoml
push
cli
or
daa
lods
lret
inc
xor
in
or
sub
cld
ret
popf
lea
scas
xor
outsl
xchg
daa
cmp
aas
push
out
lea
daa
sbb
push
pop
push
jno
test
sbb
lahf
mov
addl
loope
xchg
imul
sbb
outsl
lret
rolb
fimull
jge
jp
cmpl
mov
mov
xchg
add
stc
insb
gs
pusha
add
lock
out
and
push
mov
pusha
loopne
mov
jl
stos
sbb
push
test
cmp
push
xchg
adc
shr
sub
adc
je
cmp
es
xor
pushf
mov
fwait
insb
xchg
sub
mov
xor
daa
pop
je
outsb
mov
outsl
mov
or
xchg
wbinvd
test
sub
shl
divl
in
daa
and
fstpl
adc
out
add
outsb
aaa
arpl
in
add
fs
icebp
xchg
inc
insl
loop
in
pop
push
lods
or
or
sbb
adc
cmp
scas
mov
or
jae
dec
pop
jnp
add
rclb
adc
jo
lret
popa
push
int
outsl
cmp
bound
fimull
imull
bound
cmp
jo
scas
or
ret
xchg
cmp
fs
cli
sbb
lds
testb
xchg
dec
js
jno
icebp
jb
stos
jnp
dec
cmp
mov
cmp
cld
add
jecxz
stos
xor
mov
add
inc
dec
shll
je
scas
mov
pop
imul
sbb
out
jge
or
dec
hlt
jnp
rcrb
mov
add
dec
jns
mov
movsl
or
adc
mov
jb
fs
repz
jo
outsl
mov
cs
sub
enter
sbb
dec
mov
rcpps
and
mov
pop
aas
ss
push
loop
or
cmp
pusha
push
mov
pop
push
mov
jmp
cltd
int3
add
cmp
pop
rep
pop
lcall
loopne
push
data16
pop
jecxz
and
mov
mov
push
mov
test
lcall
jae
out
dec
cmp
xchg
pop
mov
xchg
or
gs
sbb
adc
push
lds
xor
jp
dec
and
loopne
shl
call
aaa
pop
mov
push
push
jns
mov
stc
mov
movsb
jle
mov
lods
repz
sahf
shl
clc
daa
pushf
adc
popa
mov
cmp
imul
mov
out
push
mov
jg
subl
sub
or
or
lret
mov
xchg
movsb
ret
pop
lods
sarl
jmp
dec
adc
inc
mov
fsubl
add
or
mov
jnp
daa
aad
sbb
or
and
sbb
jmp
lret
fadds
dec
iret
dec
pushf
cmp
mov
repz
test
out
into
xchg
fidivs
cwtl
pop
and
ret
lcall
cmp
mulb
loopne,pt
push
xchg
mov
push
inc
test
cmc
xchg
mov
in
leave
sub
jmp
pop
dec
ror
xor
cmc
test
js
adcb
nop
adc
negb
mov
jge
dec
adc
arpl
pop
xchg
mov
repnz
jns
sbbb
js
test
mov
cli
sub
stos
bound
pop
pop
sbb
ja
inc
aad
cmp
push
into
xchg
jl
pusha
std
dec
test
push
push
inc
cltd
scas
int
xchg
cmp
push
adc
orl
jmp
mov
int
mov
xchg
mov
push
jno
xor
pop
jbe
ret
mov
pop
aaa
cli
std
sbb
xor
xor
pop
ds
bound
lds
mov
lret
jecxz
scas
cmp
mov
dec
inc
ja
int3
adc
loope
dec
mov
push
stos
push
push
cmpsb
push
dec
adc
and
stos
je
mov
imul
ds
sbb
mov
ret
xchg
insl
js
fstp
insb
dec
dec
icebp
adc
mov
movsl
sub
jmp
out
pop
mov
aaa
adc
mov
xchg
adc
test
insl
and
cmp
sub
pop
push
push
jmp
in
test
bound
xchg
lea
pop
sub
adc
xchg
movsl
out
cmc
mov
loope
fstpl
ja
mov
outsl
jns
roll
add
add
mov
loopne
xchg
mov
ret
mov
sub
xchg
out
add
leave
loopne
pop
ds
jnp
cmp
pusha
or
xlat
pop
push
sbb
pop
cld
aad
mov
xor
pop
jae
loop
fisttpl
pop
pop
iret
bound
mov
mov
xor
jae
pusha
lds
scas
rorb
mov
jnp
jg
mov
jge
mov
adc
mov
add
shlb
sbb
insb
xor
sbb
je
sbb
cmpb
jnp
popa
fimull
mov
inc
pop
fldlg2
notb
dec
mov
ret
jecxz
cltd
push
inc
into
ljmp
jp
lock
aas
pushf
cmpsb
xor
outsb
dec
cltd
shlb
je
mov
test
mov
call
clc
cltd
mov
int
pop
or
jo
stos
jne
out
shlb
cmpsl
and
mov
cmpsl
and
not
lret
xor
mov
cmpsb
mov
inc
out
cmc
je
fldcw
cmp
enter
cmp
vpsrlq
cmc
mov
xchg
mov
mov
rorb
fidivs
or
outsl
jae
popf
cmp
mov
ljmp
pop
cmc
xchg
loopne
jge
aad
sbb
push
fwait
mov
mov
addl
and
pop
xchg
sahf
pop
imul
jae
data16
cwtl
imul
cli
sub
fs
xor
lds
push
je
pushl
movsl
or
sti
repnz
sub
or
fstpt
jo
repnz
mov
mov
and
test
or
jmp
and
lret
cmc
xchg
aaa
jl
es
cltd
inc
mov
into
mov
orb
into
mov
cmp
mov
testl
sbb
pop
add
es
jae
dec
mov
push
adc
and
mov
mov
pop
out
icebp
insb
dec
push
mov
out
insb
adc
xor
push
rolb
stos
push
jb
dec
dec
xlat
push
dec
cwtl
mov
sub
imul
mov
inc
out
mov
cld
repz
sub
adcb
push
xchg
leave
push
sbb
movsb
mov
pop
loopne
into
testb
movsl
repnz
sub
xchg
xor
jb
dec
lcall
and
xchg
in
xor
push
inc
fcoml
xchg
into
or
pop
mov
das
jp
sub
or
sub
stos
jns
sub
cltd
sub
movsl
cs
xchg
add
xchg
lahf
jmp
sub
push
or
mov
xor
mov
movsb
push
adc
inc
outsb
cmpsb
sub
adc
inc
xchg
push
fidivl
fidivl
mov
xchg
mov
loope
adc
gs
aas
iret
imul
cpuid
inc
inc
pushf
popf
cmp
jl
xlat
arpl
jmp
sbb
lahf
roll
or
imul
pop
pop
cwtl
mov
shrb
pop
hlt
or
cmpb
sub
test
shrl
ljmp
enter
mov
jno
fcompl
mov
ja
jg
lock
xchg
pop
and
mov
mov
xchg
ret
inc
lahf
dec
in
stc
push
out
fildll
cmc
mov
inc
push
cmp
xchg
rcrl
dec
in
lret
mov
xchg
sbb
xchg
pop
adc
shll
rcll
sbb
mov
pop
xlat
mov
sbb
jecxz
pop
xor
aam
push
xchg
cmp
cmc
cmc
inc
shlb
push
add
jge
in
lods
pop
loopne
push
inc
mov
push
shlb
xorb
inc
pop
in
push
shll
lret
mov
add
sbb
orb
mov
mov
pop
xchg
shl
adc
xchg
popa
lret
shlb
sti
xor
popf
jbe
jae
jge
lret
shrb
mov
in
pushf
jmp
mov
ds
mov
scas
aaa
pop
xor
icebp
pop
xorb
sub
xor
pushf
sub
das
cmp
push
xor
leave
icebp
push
cmc
push
mov
popf
jp
js
dec
and
sub
aad
cld
mov
xor
sbb
scas
lret
jb
sub
outsl
in
outsl
ljmp
loope
imul
mov
scas
jge
xchg
jb
and
stos
pusha
mov
imul
jg
push
and
cmpl
push
dec
cltd
lahf
push
sbb
adc
std
imul
push
rclb
xor
sbb
sub
mov
jp
hlt
testb
in
test
jmp
das
push
mov
lods
xchg
xor
or
mov
dec
int
mov
in
sbb
or
aad
and
cmp
adc
clc
xchg
push
xchg
shll
sub
jns
adc
push
jecxz
aad
aas
shr
shl
outsb
mov
cmc
push
test
popl
sub
in
pop
outsl
outsb
sti
pusha
lcall
data16
cltd
ljmp
daa
or
fs
inc
mov
dec
icebp
cmp
repnz
cmp
cmpsl
out
shlb
mov
lods
ds
fimull
jge
adc
subl
add
imul
sub
lahf
jp
into
fildll
sbb
fs
imul
popa
popa
push
lret
movsb
cmpsb
sti
sbb
push
imul
test
movsb
push
les
dec
sbb
jle
scas
inc
sbb
les
mov
out
sub
or
mov
mov
push
outsl
fdivl
in
je
and
xor
or
in
cli
xchg
mov
insb
add
mov
das
popa
cmc
mov
out
fnstsw
idivb
dec
xchg
repnz
sbbl
cmp
or
cmp
and
push
dec
in
push
cli
fwait
movsb
pop
int3
and
mov
mov
mov
xlat
xchg
sbb
cmpsl
sub
inc
xchg
lcall
inc
push
xorl
ja
push
andb
xlat
adc
hlt
scas
add
inc
in
loope
inc
jne
arpl
sbb
dec
data16
xchg
lods
ret
out
mov
xor
stos
and
inc
sbb
mov
jl
cmp
pop
adc
js
lods
push
pop
dec
cmp
out
lahf
cvtps2pi
aaa
test
stos
ljmp
push
sarl
popf
fcmovnb
jns
cmp
push
pop
testb
push
add
out
and
mov
pop
sub
roll
int3
or
lock
mov
and
push
test
adcl
inc
xor
insl
inc
addb
dec
mov
sbb
dec
adc
lret
adc
stos
or
xchg
mov
mov
shrb
xor
mov
std
aaa
jb
jns
bound
add
pop
arpl
incb
fadds
mov
or
lcall
sbb
push
cmp
stos
cmp
mov
mov
mov
cmp
pop
xor
mov
fwait
jns
stos
pop
scas
stos
lock
jb
stos
aam
pop
push
push
or
xorl
pop
adc
arpl
push
pop
mov
stos
mov
adc
ss
test
arpl
pop
shll
scas
inc
and
jno
dec
add
mov
dec
sub
es
aaa
stc
lcall
sub
adc
xchg
mov
jnp
cmp
rclb
add
icebp
mov
repnz
or
jle
pusha
mov
pop
mov
jb
jl
add
mov
xchg
jo
jle
int
xchg
mov
xchg
inc
push
das
xchg
pop
pop
aam
and
pop
enter
nop
fs
adc
push
mov
sbb
push
cmpsl
inc
lock
push
add
jns
sub
negl
movsb
ss
and
inc
push
hlt
lods
xchg
push
rol
js
clc
sub
mov
jb
repnz
sbb
and
lds
out
ljmp
stc
cmp
push
mov
xor
and
sub
xor
sbb
sbb
notb
movsl
pop
cmp
stc
cmp
or
mov
shr
cmp
inc
sbb
aam
pushf
fistl
imul
jge
push
xlat
mov
add
loop
lock
xor
jecxz
xchg
jle
sahf
jl
xor
mov
inc
in
sbb
lret
nop
out
xchg
pop
xchg
mov
jo
sbb
movb
lock
pop
pop
adc
mov
in
psubq
sub
cmp
inc
aam
xchg
fisttpl
daa
push
mov
pop
shrl
mov
xchg
sbb
popa
mov
add
xchg
mov
sbb
mov
jle
emms
mov
cmp
aas
fists
pop
inc
and
pop
jp
sbb
dec
loope
push
movsl
stos
pushf
sub
out
rol
pop
inc
mov
out
loope
repz
add
or
out
push
inc
mov
or
dec
adc
pop
jle
jl
cs
mov
lcall
imul
in
push
in
xor
or
daa
and
inc
shlb
popa
arpl
jle
jne
inc
adc
int3
cli
test
repnz
xor
fbstp
xor
outsl
dec
aaa
mov
pop
jo
outsl
push
in
lock
cmp
clc
xor
shl
pushf
aaa
or
popa
pop
rcll
insl
mov
jb
mov
cmp
lahf
pop
shll
push
dec
lcallw
stc
js
out
mov
inc
pop
sbb
add
test
mov
scas
icebp
call
mov
jmp
jle
sbb
jl
mov
out
andl
icebp
or
add
pushf
sub
addb
mov
les
mov
jg
mov
jns
xchg
ret
fs
push
dec
sub
loopne
jg
mov
outsl
les
fwait
loopne
fimuls
std
adc
push
pop
xchg
lods
push
cltd
mov
inc
repz
xor
sbb
and
xor
addl
jp
dec
in
inc
mov
sbb
xchg
fidivrl
in
jno
cmp
popf
popa
mov
call
xchg
mov
int
repz
inc
pop
int3
ss
xchg
ljmp
xchg
testl
out
and
lock
cmp
dec
test
sub
xor
push
push
incb
cmpsb
pop
mov
andl
mulb
xlat
aas
cwtl
js
jno
cmp
and
mov
imul
cmpsl
and
xor
icebp
fnstenv
pusha
clc
repz
or
push
fisubs
shrl
lret
movsb
popa
test
andl
xor
lods
cmp
gs
jno
xor
fcmovnb
xchg
aad
cmovnp
fistpll
fisttps
mov
sub
lcall
test
enter
add
push
and
sub
push
fisttpl
mov
movsb
lea
xchg
shlb
jbe
sti
scas
add
into
pop
push
jb
mov
push
xchg
jg
sub
je
jnp
or
pushf
sub
inc
test
cwtl
pusha
jmp
daa
pop
sbb
push
dec
loope
sbb
sbb
sub
pop
dec
dec
ljmp
jp
adcb
push
add
push
jo
dec
and
bnd
imul
pop
jno
shll
mov
or
jmp
lcall
movsl
lea
sub
out
mov
cs
inc
js
ljmp
pop
fwait
add
shl
inc
add
jae
ret
test
jae
cmpl
rorl
loop
lock
into
fwait
imul
jp,pt
add
mov
mov
dec
arpl
mov
shl
jge
repnz
in
addr16
std
lods
mov
or
scas
aam
mov
xchg
ja
jb
gs
xchg
cmpsb
lret
jp
loop
aas
jmp
mov
lods
and
mov
dec
fidivs
repz
loope
test
and
ret
outsl
add
sbb
outsl
cmp
xor
pop
pop
xor
out
and
mov
rcrl
in
icebp
or
mov
lds
bound
cltd
flds
cmp
pop
or
inc
loope
xor
sbbl
stc
dec
cmp
fsubrs
mov
jl
fsubs
pushf
loopne
movsl
pop
jge
shll
testl
insb
mov
mov
pop
out
in
adc
sbbl
cmp
addb
cmc
pop
bound
fidivrs
adc
lahf
int
popf
test
jge
gs
ljmp
out
out
inc
addr16
push
dec
adcl
mov
add
aam
int
mov
in
or
jne
inc
inc
repz
decl
dec
xchg
int3
scas
es
mov
pop
lods
adc
xchg
into
adc
pop
in
gs
ftst
outsl
dec
sub
lods
mov
adc
adc
xchg
std
mov
inc
stc
cmp
test
xchg
mov
fadds
push
ljmp
sub
out
fdivrl
sbb
inc
iret
hlt
add
test
sti
aaa
push
insl
adc
stos
mov
jmp
mov
jg
xlat
clc
add
inc
jne
dec
testl
rclb
in
adc
jnp
icebp
mov
pushf
inc
icebp
addb
insl
rol
sub
inc
test
mov
loop
cmpsl
lcall
pop
and
mov
out
cmp
mov
cmpsb
fldpi
adc
sbb
out
jns
minps
fidivs
roll
or
xchg
sub
lcall
pop
xchg
sbb
mov
sbb
xchg
ja
adc
mov
fstl
sbb
pop
cltd
or
iret
mov
int3
hlt
xchg
imul
fs
or
push
cmc
dec
mov
in
push
inc
add
dec
cwtl
and
pop
adc
je
out
jne
and
movsb
inc
ja
imul
lea
xor
cwtl
xchg
xchg
mov
add
add
aaa
xchg
mov
pushf
popa
lcall
dec
call
mov
sti
push
or
ret
into
insb
jno
lcall
aas
nop
adc
lods
mov
xchg
push
jbe
femms
or
sarb
enter
nop
cli
cmp
mov
fs
sub
test
inc
out
pop
xlat
lock
dec
push
mov
mov
dec
mov
imul
push
sub
add
pushf
pop
mov
mov
mov
inc
sbb
push
mov
dec
jle
mov
and
scas
jne
add
push
jmp
jg
ljmp
int3
insl
and
push
repnz
lods
call
das
inc
and
jmp
adcl
or
ljmp
mov
pop
lcall
mov
mov
pop
add
sbb
xchg
stc
adcl
push
add
clc
push
ds
sar
add
mov
stos
out
sbb
std
aad
nop
fs
dec
push
arpl
loop
ja
jg
or
negb
or
pop
sahf
and
dec
std
mov
adc
cmp
jecxz
sbb
jne
test
mov
mov
push
cltd
movsb
repnz
mov
scas
aas
shlb
jmp
jne
fildl
rolb
inc
loop
xor
imul
jge
jno
pop
sbb
stos
mov
addr16
lret
xchg
mov
xchg
dec
inc
daa
mov
imul
inc
pop
adcb
mov
sbb
ja
add
pusha
repnz
sbb
fsubrl
or
push
mov
or
xchg
in
in
and
xchg
std
in
mov
loope
scas
mov
add
jecxz
dec
dec
jecxz
dec
sbb
jl
xchg
jmp
inc
cmpb
ret
imul
sarl
jmpw
fistps
push
push
jecxz
fadds
xlat
das
loopne
or
mov
insl
push
dec
push
or
push
leave
mov
sti
jecxz
sarl
push
add
cltd
int
pop
in
sahf
repz
inc
call
xor
cmp
sbb
adc
push
cmp
push
pushf
push
xchg
add
cmp
xor
imul
in
daa
jl
sub
insl
mov
sahf
sub
and
out
fstl
sbb
push
mov
dec
clc
cmp
movsl
xor
lods
das
jo
sbb
push
iret
sbb
and
loopne
mov
and
push
ror
pop
hlt
rcrb
test
loop
cmp
data16
push
mov
push
sbb
in
and
or
cs
mov
aaa
pop
sti
sbb
insb
int
ljmp
sahf
aas
pop
dec
repz
insl
cmp
fisubrl
sbb
add
cmovg
push
pop
pop
ss
or
mov
mov
dec
jo
out
faddl
ja
shlb
mov
mov
jmp
jl
sbb
jbe
imul
adcl
clc
inc
shl
sub
subl
cwtl
les
xchg
bnd
in
shll
cvtpi2ps
push
lds
sahf
jb
loopne
lret
imul
popf
and
xchg
loope
inc
sub
out
imul
or
push
cs
inc
sub
mov
ja
mov
inc
adc
and
stos
imul
and
cltd
adc
pop
xor
cmpsb
mov
scas
xchg
push
xchg
xor
push
xchg
push
inc
or
sbb
shlb
push
dec
sub
cmp
bound
jl
cmc
cmp
cltd
and
sbb
pop
jnp
mov
xchg
mov
sbb
xchg
inc
mov
outsl
pop
in
or
popf
push
pusha
mov
xchg
dec
inc
data16
mov
in
ljmp
mov
pushf
into
jns
or
pop
ret
mov
movsl
lahf
nop
inc
jb
and
inc
das
add
sub
dec
mov
pop
shrb
mov
add
adc
das
and
jg
lret
xchg
testb
xchg
call
cli
gs
mov
nop
shr
push
push
mov
out
or
inc
mov
jp
jecxz
jns
and
jb
push
adc
loopne
push
adc
or
cld
lret
lcall
test
jns
push
mov
jmp
call
popa
push
mov
lock
out
push
adc
jl
fildl
push
data16
pop
jmp
pop
xor
cmp
pop
and
movsl
loope
leave
pop
mov
mov
jne
jmp
xor
ss
mov
xor
dec
cmp
push
xor
push
cmpsl
or
sub
inc
jo
jbe
add
xor
repz
pop
test
mov
pushf
pushf
xor
int3
daa
pop
adc
scas
test
dec
sbb
sbb
sub
std
andb
jne
and
mov
mov
mov
inc
or
out
or
sub
test
sbb
movl
adc
cmp
aaa
mov
pop
mov
sub
addb
and
dec
test
jg
dec
mov
inc
flds
pop
inc
xchg
dec
fwait
fwait
xor
ss
xor
addr16
jmp
xor
inc
dec
fnstsw
sbb
pop
xor
cwtl
mov
fstpt
and
sbb
mov
lahf
aad
jne
adc
test
lock
sahf
sub
shl
aam
repz
fucom
jne
dec
in
fwait
out
xchg
popf
ret
mov
mov
push
pop
sbb
insb
sbb
push
jl
fisubrs
popf
lock
sub
pop
gs
sbb
jae
add
rorb
inc
push
fnstcw
movsl
cmp
fsubrp
mov
xor
std
scas
inc
into
cs
mov
push
jo
mov
mov
jnp
not
call
xchg
insl
shrl
faddp
jmp
fisttpll
stos
xchg
xchg
shlb
xor
mov
mov
or
pop
loopne
inc
xchg
loopne
nop
push
insl
and
add
outsl
aam
inc
loope
mov
int
pusha
daa
stc
loope
fwait
scas
and
jnp
xchg
sbb
xor
mov
clc
pop
cmp
lds
movsb
add
add
cli
mov
inc
lods
jge
repnz
sub
xchg
adc
pop
sti
call
inc
xor
push
fadd
leave
repz
cmp
and
icebp
fnstenv
dec
cmpsw
and
jmp
sbb
out
rclb
popf
adc
push
int3
mov
lcall
add
jbe
dec
popf
sub
mov
outsl
sbb
inc
je
lret
imul
mov
and
scas
outsb
filds
mov
andb
and
int3
xor
cmp
pop
jmp
sti
lea
fsubrl
les
jecxz
xor
pop
das
mov
subb
adc
std
sub
in
mov
inc
mov
jae
js
inc
int
rcll
push
dec
push
nop
outsl
inc
repnz
ficompl
lods
inc
cwtl
stc
addl
daa
jmp
mov
repnz
shlb
aam
out
pop
shll
les
in
adc
xor
xchg
adc
push
adc
jmp
mov
icebp
inc
cmpsb
sub
out
mov
sub
into
xchg
in
push
mov
pop
push
rorb
sbb
int
pop
cmp
into
ds
mov
repnz
ss
mov
mov
in
inc
fdivs
and
or
mov
nop
idiv
and
pop
jb
sub
push
das
dec
out
dec
and
iret
pop
stos
andl
xlat
lcall
or
in
arpl
dec
inc
or
pop
and
shlb
lods
test
mov
inc
cmp
push
cwtl
xor
icebp
sbb
repnz
lock
lahf
xchg
cmpl
mov
mov
add
xchg
outsb
pop
mov
sar
into
loop
ret
sub
in
cmp
sub
stos
popf
adc
jge
add
clc
push
push
mov
jmp
xor
pop
sub
xchg
gs
mov
inc
adc
nop
push
jecxz
mov
xchg
inc
pop
mov
pusha
or
adc
out
or
mov
lock
test
dec
movsb
fidivrl
dec
jle
cmc
mov
out
test
lods
fwait
xor
mov
adc
xor
inc
sbb
mov
add
sbb
push
icebp
jle
in
out
pop
add
shrb
mov
and
xchg
cli
mov
adc
popa
lea
cmpsb
into
cmp
sub
test
inc
mov
les
loopne
jb
gs
cmpsl
stos
ja
xchg
jne
popf
or
xchg
and
out
sub
xor
cmpsl
lahf
in
push
fistpll
xor
addr16
xchg
gs
or
mov
pusha
xlat
into
add
sbb
adc
mulb
sbb
and
aam
jae
xor
sbb
fs
shr
mov
xchg
ret
mov
sbb
and
into
movsb
into
mov
mov
inc
lahf
pushf
jne
add
pop
movsl
dec
test
jg
add
cmp
push
xlat
add
pop
test
fnstcw
add
int3
and
mov
push
and
mov
stos
push
shll
vmovupd
stos
mov
mov
adc
addr16
xchg
enter
jno
test
aam
jno
and
cmp
imulb
mov
push
or
mov
lahf
cmp
xchg
test
jmp
cmpsl
test
mov
adc
nop
jnp
jns
push
test
dec
pushf
sbb
dec
sub
mov
fscale
jmp
and
push
add
push
cmp
pop
jae
mov
push
pop
subl
pop
pop
out
jae
es
jge
and
neg
jg
lods
jns
inc
repnz
push
int
out
pop
xorl
jno
sub
loopne
mov
loope
and
daa
and
sbb
loopne
pop
sbb
out
mov
fisttpl
cld
dec
sbb
xor
iret
inc
ret
inc
inc
xchg
mov
or
lea
sbb
ds
stos
sub
cmpsl
add
lds
subl
mov
sub
das
les
dec
or
imull
push
and
inc
cs
sbb
outsl
mov
mov
orl
inc
hlt
mov
push
pop
sbb
mov
pop
xchg
xchg
and
add
or
mov
cmp
lret
lret
push
lds
shrb
mov
std
inc
or
inc
adc
mov
or
fcom
les
ss
or
mov
push
popa
fidivl
dec
mov
mov
inc
test
sbb
push
mov
xchg
cli
mov
push
pop
and
insl
nop
inc
jecxz
or
into
insb
sbb
cmp
inc
sbb
jbe
call
lds
cmp
sbb
xor
sbb
in
loop
inc
and
ds
mov
lret
jbe
pop
sbb
loope
les
mov
xor
xlat
jge
dec
add
mov
xor
es
out
mov
sub
cmpsb
shrl
and
fidivrs
inc
mov
dec
jge
pop
mov
pop
pop
mov
in
cmpsb
or
roll
push
pop
push
fldcw
fmull
and
mov
jnp
pop
ds
dec
cmp
and
dec
dec
movzbl
sub
xor
es
mov
rorb
loopne
scas
fnstenv
cmp
sbb
loop
leave
cli
ds
push
retw
das
adc
andl
cmp
and
jne
in
mov
adc
mov
ljmp
pop
mov
imul
mov
add
push
testl
mov
stc
mov
int
dec
sub
push
lods
cld
scas
daa
rorl
fwait
rcll
jne
inc
adc
clc
adc
cld
lret
sub
test
je
inc
test
imul
and
mov
imul
popa
imul
xchg
movl
leave
or
jno
testl
fildl
jns
cmp
fdivl
shlb
inc
xchg
mov
ljmp
adc
repnz
jo
inc
leave
int
outsl
cld
jmp
test
sbb
lea
and
sub
add
and
scas
mov
dec
pop
pusha
sahf
or
push
sbb
push
icebp
jne
lret
mov
scas
cmp
add
stos
lahf
jb
mov
cwtl
or
mov
cmp
xor
jmp
pop
aaa
xchg
push
pop
lcall
jns
jb
fmull
inc
mov
js
out
loope
cmp
push
mov
imul
stc
sbb
mov
push
xchg
fcoms
aad
psllw
push
add
stc
fdivr
cli
push
xorb
fidivrs
addr16
test
popa
pop
sub
push
fs
arpl
sbb
movsb
or
pop
cmpsb
les
cmc
sbb
pushl
mov
jle
push
imul
lret
jbe
incb
push
pop
fstps
push
mov
mov
bnd
dec
jo
mov
out
dec
add
cwtl
inc
lods
mov
out
ja
outsl
in
and
sbb
adc
clc
add
rolb
xchg
ret
sub
pop
roll
xor
pusha
push
adc
test
mov
mov
cmp
stos
in
sub
out
lret
or
jecxz
add
push
fs
mov
test
mov
mov
sbbb
dec
jmp
mov
inc
in
ret
adc
pop
xor
cmpb
cmp
pop
inc
shl
into
adc
cmpsl
xchg
cmp
mov
ljmp
sub
movsb
sbb
cmp
inc
xor
pop
cmpsl
mov
scas
mov
movsb
scas
fwait
leave
es
out
ror
fildl
cltd
pusha
lods
sub
fnstenv
dec
adc
mov
jo
xchg
push
cmp
and
sbb
add
dec
mov
pop
cld
and
push
out
sti
or
in
dec
sbb
mov
push
jp
cmc
cmp
add
add
mov
or
xor
in
enter
lock
sbbl
loope
mov
jg
popa
mov
scas
pop
jmp
cmpsb
repz
xlat
xor
lret
cmp
aam
push
std
mov
cmp
sarb
cmp
jecxz
dec
mov
sbb
mov
adc
test
dec
push
sub
lcall
xchg
ret
pushf
fisttpll
daa
iret
push
std
adc
cs
jp
xor
movl
or
cli
or
cmp
outsb
or
shlb
int
ret
out
stos
push
out
or
jnp
sahf
xchg
sub
cmp
lea
jbe
mov
push
popf
pop
mov
push
pop
shl
jns
push
sbb
ret
xchg
push
xor
shl
or
pusha
mov
mov
push
scas
movsb
testb
pop
xor
xchg
ror
pop
xor
mov
addb
fisubrl
pop
pop
mov
ret
jecxz
sarb
sbb
mov
xor
mov
or
aaa
pop
dec
adc
fwait
std
stc
and
nop
dec
leave
mov
xchg
testb
jbe
outsl
jge
aad
fists
xor
jb
dec
dec
mov
movb
stc
pop
sub
dec
cmp
outsb
popa
pop
pop
fwait
insb
rcrl
movl
add
int3
imull
movsl
mov
xlat
pop
out
push
lcall
ljmp
jg
add
cmc
popf
mov
in
iret
push
mov
cmpsl
inc
pop
repz
out
xor
mov
adc
and
shrl
push
adc
aad
xchg
xchg
mov
dec
xor
fcom
add
repz
std
jge
cmp
jb
inc
xor
outsb
lock
dec
inc
mov
cmp
cmpb
cmp
mov
lock
les
stos
mov
xor
jecxz
push
rcr
pop
jge
sub
rorl
jnp
fstpt
bound
push
les
dec
scas
inc
fadds
push
jecxz
push
lret
lds
sub
or
loopne
cltd
test
pop
loope
fimuls
push
out
xor
lods
mov
or
inc
shrb
jp
jp
push
xor
fwait
adc
sbb
repnz
push
loope
push
cmp
pop
movsl
hlt
and
push
pop
inc
push
inc
gs
repz
push
popa
incb
int3
jb
xor
cmp
jp
mov
pushf
shlb
insb
mov
popf
outsl
push
andb
add
sbb
aam
cmp
xchg
movb
lods
dec
lcall
sub
int
xchg
dec
lock
mov
insb
mov
std
sbb
mov
inc
adc
test
in
dec
sub
lcall
dec
and
xor
mov
and
mov
adc
or
subl
push
xchg
cmp
mov
cmpsb
mov
jp
push
dec
into
push
sub
test
jno
cltd
push
push
mov
push
push
aam
scas
shll
lds
pop
arpl
and
cmpl
mov
js
cmp
das
jle
clc
sbb
pop
dec
fs
sbb
mov
dec
jp
lea
inc
mov
aaa
daa
ret
lret
dec
adc
cli
rol
push
pop
sub
loop
cli
xchg
or
sub
bound
or
push
pop
scas
sbb
jp
out
xchg
inc
out
jmp
adc
mov
mov
jg
cmc
jmp
cmpsb
or
cld
lds
loope
in
in
cmpsb
gs
int3
sbb
lret
fwait
mov
inc
cmp
mov
and
into
inc
fwait
gs
xchg
ret
arpl
int3
jnp
popa
mov
loop
cmp
popf
notb
pop
dec
adc
sbb
adc
mov
pop
xor
in
and
and
enter
es
pop
out
pop
jle
inc
dec
mov
dec
inc
lods
ret
mull
mov
push
cltd
iret
and
jge
mov
inc
popf
and
and
in
mov
rorb
clc
fsubrl
pushf
or
jne
pop
sbb
dec
test
pop
sbb
add
push
es
or
jo
dec
ret
dec
push
movsl
jmp
xlat
call
addr16
xor
cli
aad
jp
xchg
out
out
in
sbb
xchg
ret
or
insb
pop
mov
gs
or
std
pop
fdivrs
sub
sub
dec
cmp
add
mov
mov
mov
adc
pop
xor
cmp
data16
arpl
mov
in
mov
mov
xchg
sbb
lock
or
pop
pop
in
pop
lods
ds
pop
aaa
les
loopne
pop
fcoml
movsb
mov
jb
aad
mov
push
adc
push
andb
xor
add
or
call
cwtl
cltd
xor
xchg
jl
call
aas
data16
jg
mov
mov
pop
dec
add
push
fistl
fstps
xlat
sub
movsb
shl
add
sub
into
inc
dec
pop
ds
shll
sbb
add
jo
movsl
mov
jb
pop
mov
je
aad
rcrl
inc
ss
shl
stc
mov
int
in
repnz
dec
lcall
clc
cmp
movsb
js
dec
movsl
push
fnstenv
jb
int3
dec
xchg
mov
mov
and
sti
sub
xchg
imul
xor
and
pop
dec
cmp
inc
ret
inc
lahf
xor
pop
push
inc
repz
lahf
jb
sbbl
fadd
clc
insl
inc
inc
repnz
fisttps
adc
jmp
ret
scas
lods
scas
mov
mov
fidivl
adc
das
imul
push
xor
int
adc
pop
cwtl
or
pop
cli
repz
pusha
ja
lea
xor
sbb
rcll
aad
ss
icebp
cmp
std
insb
sti
pop
adc
addr16
fsubrp
xchg
xor
jmp
jns
in
hlt
arpl
out
scas
inc
inc
aad
mov
and
cmc
xor
lods
pop
push
cmp
dec
adc
sbb
inc
cmp
rcrb
in
fdivrl
mov
out
mov
sbb
mov
mov
and
jl
shlb
sti
jmp
sub
and
loop
outsb
and
insb
lret
mov
mov
wrmsr
lcall
in
js
ds
out
fstp
jns
sub
inc
sarb
scas
push
shl
pushf
rorl
inc
add
testl
add
mov
pop
jns
testb
nop
cmp
loope
outsl
js
and
sahf
cli
and
sahf
mulb
and
enter
movsb
adc
daa
in
test
jmp
clc
jne
sub
sub
pushf
add
fwait
ret
mov
insl
nop
lcall
in
ss
pop
inc
out
sub
jae
loopne
js
bound
test
into
daa
mov
add
xor
ja
leave
mov
fstpl
rclb
xchg
and
mov
mov
popf
pop
sub
mov
mov
popa
cld
xchg
and
cmp
adc
daa
or
and
xor
les
add
lret
xchg
add
cs
push
mov
in
bound
add
incb
ds
and
mov
pop
orl
jl
test
je
dec
dec
cmp
sub
dec
dec
ss
cmp
xor
push
mov
mov
add
xchg
daa
cmp
add
popa
movsl
ja
sub
cmp
out
adc
mov
mov
ljmp
dec
pusha
ret
fsubrl
sahf
dec
popf
notb
mov
push
ret
add
lret
ud0
sub
mov
daa
pop
inc
sub
push
xchg
mov
scas
sbb
sub
ja
inc
mov
lret
xchg
sub
mov
push
xchg
cmpl
jmp
das
mov
add
lahf
fistpl
std
in
sub
ffree
sbb
movsl
subb
pop
xchg
push
cmp
add
xor
pop
xchg
aas
fisttps
mov
js
sub
ret
lret
push
pushf
aas
adc
lcall
add
xchg
repnz
dec
pop
mov
jg
jae
inc
popa
adc
mov
rolb
mov
mov
nop
adc
dec
jmp
into
stc
pop
lods
gs
out
lahf
pop
mov
out
xchg
or
cmpsl
insb
jb
cs
or
mov
and
pop
mov
mov
and
push
cs
sbb
or
cmp
pop
loope
ret
daa
inc
sub
in
inc
mov
clc
lods
push
shll
cmc
mov
jno
mull
jl
jns
sub
nop
test
add
mov
aas
pop
ss
cmp
sahf
and
cltd
inc
cs
or
adc
mov
sbb
inc
aaa
fwait
mov
or
enter
mov
add
mov
push
stc
adcb
aad
sub
clc
je
out
test
xchg
into
dec
in
dec
adc
mov
inc
jns
mov
aaa
mov
in
jns
lcall
dec
stos
movsl
test
cld
lcall
sbb
sub
or
stos
in
pop
xor
xor
jbe
xchg
mov
in
cmp
sub
or
sbb
or
movsl
addr16
push
int
rclb
mov
xchg
inc
icebp
sbb
sbb
inc
jno
cmpsb
in
test
push
mov
test
lds
nop
mov
sub
mov
cmp
jecxz
loope
and
lea
stc
pop
push
jae
sbb
sti
outsl
sarw
in
jae
out
sbb
adc
std
jmp
adc
sub
std
out
scas
bound
enter
imul
adc
mov
sub
lcall
and
scas
imul
shll
scas
or
jae
lock
mov
jmp
testb
fs
and
mov
das
test
jb
out
pop
or
sub
or
fldenv
clc
pop
pop
insl
outsl
inc
stos
or
sub
roll
pop
out
vmaxpd
icebp
mov
popf
and
pop
fistps
push
or
call
xor
rcl
dec
lcall
sub
cmp
ret
fdivl
dec
in
xor
mov
pop
out
push
dec
push
pusha
cmp
decl
or
cs
push
and
sbb
and
shrb
nop
lahf
jb
ret
push
leave
sbb
ja
cld
sub
or
jmp
repz
mov
dec
mov
insb
pop
fwait
in
sub
addr16
cmpsl
mov
pop
idivb
lods
lcall
sbb
mov
das
sbbl
mov
mov
add
clc
jmp
stc
stos
xchg
mov
scas
sbb
sbb
lret
out
xor
inc
mov
movsb
jb
jmp
cmpsb
jg
pop
jmp
dec
shlb
popa
jns
or
pop
mov
mov
mov
mov
mov
lcall
out
into
call
and
inc
imul
jo
test
ficompl
jmp
xchg
les
ss
cmp
mov
xchg
stos
sbb
lret
sub
mov
in
mov
xchg
lods
or
sarl
inc
movsw
and
xor
fistpl
scas
negl
mov
cwtl
sbb
cwtl
hlt
xchg
sbb
lcall
test
inc
xor
add
scas
mov
arpl
cmpsb
pop
stc
enter
add
xlat
subl
pop
add
push
es
push
movsl
data16
movsb
mov
inc
push
pop
cmp
lock
cmpsl
cmpsl
movsl
mov
xchg
mov
cmp
adc
add
rorb
repnz
dec
jmp
xchg
popa
cmc
les
hlt
pop
sub
jo
std
dec
stos
xor
testb
call
fcomps
movsb
insb
sbb
adc
push
inc
daa
xor
movsb
rcl
pop
rolb
shrl
push
aas
push
shlb
repnz
pushf
cli
push
vmovupd
addl
repnz
fldenv
adcb
bound
popf
mov
cmp
jno
dec
imul
mov
push
pop
jge
dec
inc
fwait
mov
andb
ss
repz
movsb
jl,pt
ss
cmp
idivb
in
ficompl
sub
pop
mov
cmp
out
dec
mov
outsl
flds
add
fs
in
add
jnp
mov
nop
inc
ret
xchg
push
outsb
xor
cwtl
lods
push
mov
cmp
cmp
aaa
xor
cmc
inc
es
jl
scas
dec
ss
gs
icebp
fists
xchg
ja
ja
imul
xchg
mov
xchg
cs
pop
insb
push
sbb
subl
testl
lret
xor
mov
lods
or
lock
mov
test
cli
push
sahf
cmp
push
cltd
push
sub
mov
mov
jmp
jnp
sbb
ret
fucompp
test
mov
es
push
lock
pop
pop
push
push
lret
stc
imul
fidivrl
sub
mov
test
inc
ficompl
sahf
mov
pop
mov
scas
pop
and
or
fs
lods
or
or
mov
jmp
rolb
test
xchg
push
leave
and
sbb
inc
sub
loopne
cmp
arpl
neg
stos
das
repnz
outsl
cltd
jo
inc
xor
mov
push
xor
sbb
push
and
arpl
dec
jbe
cwtl
mov
cmc
sub
push
in
mov
les
stos
inc
outsl
test
rclb
mov
out
or
mov
xchg
xchg
hlt
xchg
leave
mov
mov
mov
lds
clc
int
jbe
jle
cwtl
mov
or
xor
cs
das
mov
dec
mov
xor
cmp
outsl
jmp
insl
push
jl
xchg
jae
inc
sbb
nop
mov
dec
mov
cmp
cmc
jne
mov
popf
cmp
push
add
in
loope
mov
xchg
inc
add
shl
adc
fisubl
mov
test
js
pop
sub
int3
scas
pop
push
in
fstpl
test
cmpsl
jge
sahf
mov
sub
jge
xchg
cmp
mov
mov
stc
cmp
inc
rcrb
adc
mov
shlb
jns
shrl
pop
and
pop
cmp
loop
lea
sub
icebp
mov
cmp
mov
sbb
pop
lahf
sub
lea
nop
ss
iret
mov
jae
fisubrl
jo
shl
jp
or
xlat
in
fiaddl
inc
inc
and
push
inc
sahf
and
xor
mov
leave
roll
mov
scas
sub
cld
mov
mov
xchg
pusha
and
pop
xchg
jge
mov
sahf
lea
pop
dec
leave
mov
cs
iret
sub
dec
mov
orl
push
into
bound
push
jmp
sub
shl
xlat
xchg
mov
das
mov
fcmovnu
xchg
lcall
fisubs
xchg
adc
pushf
sub
fcompl
jno
sarb
push
inc
mov
add
std
bound
dec
xor
pop
aam
imul
push
inc
add
jmp
inc
sete
gs
popl
or
test
fxch
fnstcw
mov
add
inc
insl
dec
mov
push
dec
xlat
dec
xor
repz
ljmp
xchg
xor
loope
add
loope
inc
xchg
fsts
cs
mov
pop
in
push
ss
inc
fisttps
hlt
pop
aas
sub
mov
xor
mov
lret
or
adc
xchg
jecxz
fs
cmp
ja
sbb
pop
inc
sbb
mov
mov
fidivrl
jl
or
jns
test
lcall
jmp
fcoms
sbb
movsb
clc
out
clc
out
inc
pop
inc
icebp
jno
mov
or
jg
jo
fnstenv
push
popa
mov
xchg
pushf
jo
xchg
xor
push
or
xor
or
jno
push
push
pop
dec
stos
or
pop
daa
aaa
in
jp
mov
pusha
jne
ss
out
jmp
sbb
add
js
or
pop
fwait
arpl
or
imul
xchg
aad
subl
pop
imul
inc
dec
shlb
gs
xlat
ss
and
mov
mov
lret
push
or
nop
clc
pop
inc
jecxz
adc
movsl
xlat
fs
mov
mov
or
jns
xor
arpl
loop
mov
clc
xchg
mov
sti
gs
push
xlat
jno
popf
out
and
dec
das
jb
pop
in
jg
mov
jo
outsl
dec
stc
jmp
inc
sbbl
pop
inc
loope
dec
mov
arpl
inc
add
cmp
and
xchg
mov
mov
adc
loopne
lea
push
sub
mov
std
dec
sub
push
aad
addb
dec
fildl
js
xchg
pop
xor
les
push
cmp
dec
insl
pop
fbld
and
popa
or
lahf
sbb
mov
dec
popa
in
xlat
daa
xor
insb
pop
test
mov
ret
push
lea
push
add
movb
xor
or
mov
fs
pop
outsl
jns
mov
loope
pop
pusha
mov
cmpsl
stos
mull
daa
gs
pop
xchg
cmp
in
lahf
in
cmp
std
fcmovu
mov
mov
adc
in
cli
ljmp
fiadds
std
jae
mov
stos
loope
xchg
or
add
daa
dec
mov
shl
es
mov
ss
shlb
mov
test
mov
lods
js
xlat
mov
jecxz
jae
push
fcoms
call
stc
les
das
shlb
mov
loope
push
adc
xchg
or
filds
arpl
push
pop
ds
xchg
je
cmp
ja
xchg
pop
leave
fists
mov
fisubrl
push
lds
pop
push
cmp
fcoms
pop
adc
adc
pop
and
pop
stc
js
jnp
setle
ljmp
insb
sahf
inc
dec
nop
mov
push
pop
mov
lret
push
mov
pop
nop
sub
inc
inc
mov
xchg
pop
sbb
cmpsb
sbb
movsl
adc
cld
pop
dec
sbb
or
out
adc
and
sub
adc
mov
jg
sub
sbbb
jmp
and
or
mov
or
push
lret
inc
fwait
xor
jbe
mov
mov
sarl
out
gs
cmc
pop
xchg
pop
cs
lret
shlb
xchg
mov
cwtl
shll
sbb
push
adcb
cmp
cli
or
or
stos
push
add
and
push
cmp
icebp
adc
mov
leave
ret
adc
inc
shll
movsb
cmp
or
or
ja
leave
xchg
xor
fisttpll
scas
add
mov
or
lods
fucomp
loope
dec
andl
out
mov
sbb
dec
cmp
inc
xor
pop
jl
ret
js
xchg
clc
dec
jmp
lea
jl
outsb
insl
pusha
fs
mov
ja
mov
jo
fcomip
add
sub
fstpl
cmp
or
or
inc
call
cpuid
rorb
mov
xchg
mov
test
daa
gs
stos
adc
test
inc
iret
add
xchg
adc
mov
imul
test
das
and
mov
sub
pop
int
out
jbe
xchg
roll
dec
mull
pop
insb
call
aas
addr16
cltd
lods
mov
pushf
mov
cmp
sbb
sbb
es
jbe
xlat
jns
outsl
add
loope
mov
aas
iret
pop
push
inc
in
sbb
lret
bound
xchg
iret
adc
cmp
push
add
outsb
sbb
insl
fsubrl
les
vandps
icebp
jae
dec
sub
sub
je
xchg
outsb
jl
test
push
xchg
popf
pop
and
xchg
into
test
scas
mull
mov
and
xchg
les
clc
push
pop
mov
pop
and
js
push
mov
adc
pop
leave
scas
pop
push
shlb
mov
xchg
imul
test
mov
out
inc
pusha
cwtl
ficoml
aam
ror
push
lret
in
add
filds
cltd
nop
inc
jecxz
sbb
subb
pushf
test
lret
cld
sub
shlb
ret
cmp
sar
enter
and
cmp
rcll
ds
movsb
or
xorb
xchg
xchg
imul
iret
xor
jecxz
sbb
out
insl
mov
mov
jmp
or
xor
sbb
out
aaa
push
inc
xchg
sub
sub
push
cmp
movsb
fwait
or
popa
xor
mov
inc
dec
rorl
cs
dec
sub
pop
cltd
adc
out
cmp
fstpt
hlt
insb
adc
mov
mov
mov
cs
out
sbb
iret
ljmp
movsb
lret
in
mov
mov
lahf
jecxz
dec
xor
pop
mov
repnz
je
stos
shlb
cli
hlt
fdivrl
movsl
jb
xchg
daa
dec
js
sub
push
call
pop
xchg
sub
movsl
aas
mov
or
adc
push
add
popa
inc
insb
or
stc
xor
cld
adc
dec
pop
mov
mov
xchg
sub
mov
xchg
repnz
jg
add
sbb
fimuls
push
jecxz
mov
add
lret
add
popf
aas
out
cld
test
test
adc
inc
cld
cld
adc
mov
sub
fnstenv
mov
decb
jbe
sar
add
test
shrb
fwait
shll
jns
mov
push
rol
dec
dec
add
cmpl
pop
aam
push
mov
cmpsl
test
mov
lret
sub
mov
xchg
mov
in
test
inc
decl
loopne
sarl
inc
xor
loop
jecxz
shrb
int3
popa
adc
pop
jb
pop
fcmovnbe
loopne
push
xor
aam
push
movsb
shr
addr16
pop
stos
or
ljmp
jno
pop
in
subl
add
adc
push
inc
push
enter
cwtl
push
leave
inc
push
inc
out
in
push
xchg
add
inc
loopne
mov
dec
mov
imul
pop
rol
push
xor
cmc
rclb
inc
pushf
mov
popa
rcrl
mov
mov
ja
ljmp
xor
cwtl
mov
xchg
into
xchg
mov
jp
fcmovnu
inc
cmc
sbb
das
imul
ret
sarl
push
cmpb
sar
mov
jl
pop
cmp
outsl
sbb
les
mov
lahf
xor
cli
ret
mov
push
test
aas
fldt
mov
inc
movsl
cmc
loope
add
push
push
xchg
mov
fsubs
mov
lret
jl
outsb
and
fsubr
dec
ret
mov
imul
cmp
jmp
cmc
and
mov
arpl
xor
data16
push
stc
cmpsb
adc
pop
data16
icebp
sub
popf
pop
or
adc
lea
xchg
xor
fisubs
xchg
icebp
cwtl
adc
jbe
stos
jbe
dec
dec
dec
cld
outsl
or
jb
leave
insb
leave
les
loope
pop
and
out
bound
fcomps
xchg
cmp
outsb
push
push
mov
cmpsb
and
push
outsb
jns
test
dec
push
cltd
xlat
jmp
insb
mov
push
push
push
movups
cld
and
adc
pusha
enter
lea
leave
dec
add
jae
xchg
hlt
insl
sub
dec
je
cmp
xor
fucomip
pop
xor
xchg
sbb
nop
dec
xchg
lods
aam
outsb
or
shll
iret
xor
add
mov
inc
repz
scas
out
std
fdivl
adc
loope
adc
xchg
jg
push
pushf
aaa
and
jo
mov
loopne
inc
pushfw
xchg
or
fcmovbe
and
push
xor
xchg
iret
add
fisubs
hlt
rcl
push
push
ror
out
cmpsb
inc
inc
sbb
sub
pusha
adc
jl
pop
push
push
dec
cwtl
mov
fiadds
inc
cwtl
pushf
pop
adc
pushf
mov
pop
sub
adc
jge
or
test
pop
orb
adc
stos
loopne
leave
adc
cld
adc
mov
mov
ljmp
inc
dec
pop
cmp
or
nop
sbb
cmp
mov
pop
push
lret
shlb
das
and
gs
mov
add
rorl
dec
jp
jne
js
inc
out
push
fisttpl
cmp
ss
cmp
sub
cmpsb
mov
add
sub
std
sbb
insl
mov
mov
lds
inc
out
push
add
mov
jle,pt
and
push
adc
xor
mov
inc
jns
test
es
sbb
aam
mov
pop
inc
mov
mov
and
cld
call
and
pushl
mov
repz
adc
into
and
imul
dec
push
mov
dec
mov
cwtl
int
mov
repnz
push
rorl
mov
popf
push
ds
mov
mov
sbb
mov
jo
je
sbb
scas
leave
pop
cmpsl
mov
jg
add
ds
mov
insb
inc
js
xchg
imul
sub
rorb
loop
fstps
enter
sti
add
mov
cmp
and
dec
int
adc
out
hlt
jmp
bnd
sti
mov
das
and
lds
mov
push
pop
stc
imul
lahf
cmpl
fistps
add
loopne
loopne
mov
mov
xchg
adc
fsubrl
imul
lods
mov
scas
push
jle
out
sub
mov
dec
sub
and
movsb
inc
fdivl
les
in
stos
in
mov
push
fisubrl
and
mov
sti
ffreep
mov
cmp
cmpl
jns
inc
xchg
adc
sbb
add
jp
fcomip
or
loop
pop
xor
fisttpll
jg
jmp
and
fists
adc
xor
xor
aaa
jp
and
scas
push
sarl
testl
cli
out
int3
cmp
xor
cwtl
in
sbb
das
mov
mov
sub
cmp
sbbl
mov
mov
push
js
es
js
and
push
jns
adc
cmp
pop
in
jne
movsl
jg
mov
mov
add
sahf
adc
jle
pop
ret
adcb
inc
mov
out
scas
sub
mov
inc
mov
lcall
aad
mov
rolb
jecxz
test
cmp
mov
sbb
addr16
cmc
add
clc
pop
das
clc
adc
push
sarb
sub
arpl
rorl
aaa
push
ss
sub
rcl
pop
pop
dec
clc
iret
les
pop
scas
sub
out
jmp
lahf
push
push
pop
xchg
xchg
cmp
dec
mov
popa
subl
push
jno
jl
filds
cmp
mov
lahf
push
movsl
or
ja
adc
xabort
loope
jne
jo
sahf
mov
sbb
dec
data16
jo
arpl
lret
jp
sbb
loope
lods
push
fwait
roll
pop
fidivrs
shll
jo
ret
mov
mov
push
outsl
rolb
incl
and
mov
dec
jecxz
out
or
daa
rolb
ljmp
rolb
push
lcall
ret
js
and
arpl
pop
in
add
aaa
lret
cmp
stos
mov
in
dec
dec
lret
xchg
add
sar
aad
mov
call
movsb
fdiv
invd
add
repnz
repnz
jae
xor
mov
pop
mov
mov
dec
push
lods
jnp
mov
les
bound
sub
dec
push
dec
and
mov
sbb
test
bound
scas
scas
cld
cmpsl
add
loop
or
push
dec
jle
mov
cltd
les
mov
leave
sbb
mov
and
lock
push
scas
fisubrl
add
cmp
xchg
jnp
loopne
sbb
pop
lods
adc
mov
or
or
fstp
imulb
mov
icebp
or
ja
push
inc
push
andl
inc
xor
sti
iret
pop
dec
jp
sahf
pop
push
mov
ficoml
and
test
ret
lahf
mov
add
loop
nop
insb
cwtl
jnp
inc
dec
mov
fs
sarl
mov
and
je
lahf
adcl
ret
outsb
mov
adcl
adc
int
adc
jo
dec
push
adc
dec
shll
mov
out
stos
push
filds
test
add
das
or
int
mov
pushf
xchg
jae
daa
aam
jl
dec
adc
mov
sti
subb
mov
mov
pusha
mov
sub
and
ficompl
pop
inc
icebp
popa
mov
add
jp
mov
mov
imul
push
je
ja
inc
xor
mov
inc
push
cs
sbb
aas
and
push
dec
mov
or
dec
lds
pushf
mov
gs
insl
or
jno
xlat
out
call
mov
sahf
iret
ret
ja
out
jb
jno
ss
or
in
sub
popa
mov
xchg
jne
jns
mov
sarl
xchg
mov
cmc
bound
test
pop
xchg
test
sbb
mov
mov
cltd
rorl
in
rclb
das
loopne
test
and
aas
aas
test
add
xchg
in
or
xchg
push
jge
cmp
loope
leave
ljmp
dec
adc
test
out
inc
cmp
jge
sbbb
cmpsb
cs
nop
xor
sub
pusha
fstpl
jmp
push
mov
add
mov
inc
mov
int
roll
mov
xchg
jmp
les
sub
test
test
cmp
cmc
push
add
repnz
in
fnstcw
hlt
jmp
xor
pmulhw
and
rep
test
or
aas
lret
imul
sti
cmp
in
mov
mov
data16
push
sbb
dec
push
push
lods
std
or
pop
push
mov
aas
mov
vaddps
pop
movsl
xor
push
pusha
ret
fbld
imul
mov
inc
add
cwtl
out
stos
push
cmp
push
jo
inc
inc
and
jmp
lret
mov
push
es
sti
sbb
xchg
and
idivl
mov
xor
aad
in
je
insb
lods
xchg
mov
imulb
pop
xchg
xchg
and
pusha
and
or
out
cwtl
or
out
jmp
jo
xor
aad
adc
lcall
sarb
mul
in
inc
inc
add
leave
jo
loop
outsb
push
push
push
fiadds
sbb
in
mov
test
inc
outsb
ret
int3
es
jp
imul
cmp
imul
xor
das
shrl
les
push
rorl
scas
ficompl
nop
push
bound
lahf
dec
in
enter
clc
lock
add
mov
fcoms
loop
xchg
jno
mov
das
das
jecxz
adc
lret
test
sub
xchg
lahf
mov
or
sub
into
sub
sbb
outsb
stos
push
les
xlat
cmp
rorb
pop
pusha
shr
insb
insl
cmp
jl
bound
sub
inc
clc
jae
mov
test
imulb
int3
push
bsr
jecxz
int
cs
mov
pop
insb
jmp
inc
cs
into
mov
push
repnz
mov
adc
loopne
push
pop
xchg
stos
mov
inc
xor
std
and
sub
loopne
inc
or
push
pop
daa
xchg
mov
insb
aas
out
pop
das
and
lcall
add
push
mov
insb
xor
aas
fiadds
lret
dec
xchg
xchg
dec
or
insb
xbegin
add
orl
ret
aam
loopne
mov
into
mov
add
mov
rorl
fimull
pop
imull
dec
push
and
sbb
out
inc
ret
mov
outsb
pop
movsl
xorl
shlb
and
jns
inc
xchg
lods
xor
icebp
leave
push
add
and
mov
pop
sti
dec
push
int
xor
cmp
pusha
dec
pop
jb
fadd
int
iret
jg
pusha
scas
push
ret
cmpsl
mov
cli
lea
pop
mov
cmp
dec
pop
outsl
enter
mov
or
fs
sub
cmp
aam
dec
pop
and
jecxz
ret
sbb
adc
lock
mov
push
sub
xchg
das
es
jge
sbb
xchg
gs
push
clc
je
push
mov
scas
std
lret
push
adc
and
mov
xor
push
xchg
lea
std
test
inc
push
push
fisubs
lds
jmp
pop
ficoml
or
pop
xchg
mov
mov
clc
or
arpl
mov
mov
or
clc
das
outsb
mov
xor
xchg
fcoms
cs
rcll
add
sbb
sub
fildll
jle
jbe
xor
jmp
imul
cmp
mov
scas
sub
mov
out
inc
test
dec
cltd
inc
dec
cmpsb
jge
lret
xor
aad
push
movsl
fnstenv
dec
imul
add
and
mov
and
sbb
xlat
inc
outsl
mov
je
or
mov
mov
out
fadds
xor
cmp
lret
jo
or
outsl
push
pop
mov
icebp
and
mov
daa
cmpsl
std
mov
imul
sbb
sub
mov
rclb
dec
iret
push
dec
ds
fs
jns
add
push
jg
jne
clc
sarl
xchg
mov
in
add
aad
stos
pop
add
fcmovnb
sti
addb
jp
repz
idivb
mov
xor
sub
clc
ss
jecxz
cmp
out
int3
add
xor
cmp
mov
ret
push
xchg
sahf
shrb
loopne
sbb
test
lret
and
andb
cmp
rorl
pushf
outsl
mov
bound
add
sub
addr16
xchg
cmp
wbinvd
fistpll
in
lcall
and
jbe
ret
sbb
sbb
insb
daa
arpl
cmp
jnp
arpl
imul
inc
andb
jae
xchg
movb
inc
jg
data16
sbb
test
mov
pop
sub
cli
mov
in
mov
aad
call
jo
sub
test
mov
push
in
inc
shrb
mul
mov
fs
lcall
dec
add
fs
adc
jne
xor
or
jp
insl
xor
or
insb
xlat
in
adc
lock
sbb
fstps
mov
and
xchg
mov
adc
and
cwtl
sub
pushf
and
mov
adc
mov
pop
push
out
mov
add
pop
jmp
addr16
mov
fcoml
aaa
dec
fldt
loopne
ror
sbb
sub
pop
outsb
cli
mov
inc
lods
int3
test
cmpsb
ret
push
jg
xchg
call
shr
stos
xchg
push
das
xor
bound
orl
pop
insl
inc
sbb
int3
sub
mov
and
fs
mov
fmuls
sub
jmp
jo
shlb
xchg
sbb
xchg
and
and
sbb
mov
add
mov
adc
push
add
sbb
sub
lds
cld
pop
jns
pusha
das
repnz
fcmovne
daa
jmp
pop
insb
fs
xchg
imul
sub
mov
repz
shr
cmpsb
mov
push
xlat
ror
or
mov
mov
mov
mov
or
xchg
lret
push
imul
push
mov
je
popf
lea
stc
pop
dec
out
fwait
test
push
push
mov
loopne
mov
movsl
gs
jg
enter
pop
fidivs
xchg
popa
fcoml
iret
hlt
sbb
jl
jae
mov
xor
shll
dec
mov
xorb
add
pop
inc
aaa
iret
adc
insl
cld
nop
pop
or
fs
push
lea
cmp
iret
ds
and
or
push
xchg
mov
ja
push
gs
scas
or
sbb
pop
in
es
out
mov
rorb
cmpsb
in
sahf
xchg
and
mov
aaa
pop
add
adc
adc
dec
xchg
mov
loopne
out
add
mov
and
inc
jg
or
cmp
cld
xchg
jnp
dec
dec
dec
mov
cwtl
dec
idiv
imul
mov
xchg
mov
pop
cld
or
jno
loope
and
jecxz
mov
cmp
xchg
jne
xor
sti
push
push
stc
and
mov
out
push
sub
std
cltd
fsubl
test
mov
adc
outsb
inc
mov
sbb
nop
inc
mov
and
inc
and
ror
or
push
es
or
jne
inc
cmpsl
xlat
daa
pop
sbb
push
mov
inc
or
xchg
and
mov
out
sub
add
or
sub
lahf
mov
jae
dec
cmp
push
push
es
jp
cs
adc
cwtl
add
arpl
dec
add
mov
xor
dec
jb
sbb
cmc
orb
sbb
jl
lds
and
ds
js
mov
outsl
jg
xchg
dec
dec
push
push
icebp
jle
cmpl
repz
ljmp
inc
xchg
mov
or
es
xchg
xchg
insb
mov
bound
xchg
push
inc
imulb
dec
jl
stc
cmp
mov
inc
dec
mov
pushf
jbe
movsl
jl
jge
sbb
lods
js
mov
and
mov
fs
repnz
adc
jge
pop
mov
jp
lods
add
pop
xchg
gs
aam
xchg
push
rol
in
jmp
jecxz
dec
and
ret
outsl
cmp
out
repnz
aaa
jecxz
push
jnp
pop
sub
dec
or
cmc
jge
push
arpl
fdivs
negb
je
fists
cltd
pop
adc
sub
or
mov
xchg
mov
ret
sbb
das
cmp
dec
xor
movsl
sbb
leave
jbe
xchg
mov
in
or
cld
jl
mov
or
stos
xchg
stos
mov
scas
outsl
xor
popf
nop
mov
mov
out
das
leave
orl
call
mov
pusha
push
inc
stc
jp
inc
fmuls
jp,pt
bound
inc
cs
lahf
mov
push
mov
xorb
jo
or
mov
xor
xchg
fwait
jle
mov
ja
mov
ss
in
push
cltd
movsl
jl
mov
fdivs
mov
ja
outsb
mov
shlb
xchg
or
inc
jle
inc
mov
gs
movsb
sbb
or
adc
or
ja
mov
mov
pusha
adcb
aaa
fidivl
test
add
add
std
sub
imul
sub
push
fldenv
sbb
out
jae
cmp
fs
add
andb
lcall
dec
mov
fildll
int
outsl
push
push
pushf
jp
add
inc
or
add
mov
data16
pop
push
jb
jae
adc
pop
add
jbe
in
and
xchg
mov
test
hlt
stc
or
cmc
inc
jo
rcll
adc
shll
jecxz
js
xchg
jns
pushf
cmc
push
ljmp
adc
mov
dec
mov
sub
dec
cli
sar
shl
sbb
sahf
imul
and
xchg
lret
sub
sahf
jne
popa
and
or
cmp
dec
sbbb
pop
imul
mov
aam
ja
mov
pop
cmc
xchg
xor
or
movsb
addl
fstp
dec
imulb
add
cmp
leave
cmp
xlat
push
call
pop
out
dec
mov
sbb
gs
clc
arpl
xor
dec
subb
pop
in
test
cld
mov
cld
lahf
xchg
sbb
pop
arpl
adc
lds
xor
in
push
sbb
sub
mul
lds
and
out
insb
xchg
push
hlt
mov
sbbl
xor
lahf
sbb
call
loop
dec
dec
ja
test
sbbb
aaa
xchg
iret
je
push
pop
out
inc
dec
jbe
jge
jle
xorw
mov
aaa
arpl
xor
loope
lret
cs
into
lods
popf
lds
add
ljmp
adc
mov
inc
rorb
fwait
lret
push
sub
cmp
rcl
into
dec
adc
loope
or
push
mov
int3
lds
lret
addr16
scas
xchg
inc
pusha
inc
data16
cld
sti
pop
jns
scas
ficomps
cmp
movsl
cmp
mov
xor
inc
clc
pop
and
pop
test
les
or
and
push
in
aas
mov
shlb
adc
xchg
test
mov
dec
scas
pushf
pop
je
cmp
pop
cld
aam
push
test
fstps
fwait
and
cwtl
and
inc
bound
push
mov
lret
push
jl
test
push
cs
mov
lds
pushf
lea
insb
leave
fmuls
idiv
jge
frstor
sbb
ror
cmp
scas
ret
push
cs
cli
icebp
enter
jecxz
jp
pop
dec
push
jmp
sub
inc
add
rorb
xchg
or
outsl
xchg
and
jnp
push
sub
jmp
adc
jnp
sub
adc
cmpsl
or
jmp
mov
shll
test
mov
cmp
sbb
rol
cmpsl
ret
mov
push
add
jne
imul
mov
lcall
adc
sub
dec
cld
push
or
jl
xlat
stos
sbb
sahf
das
or
pushf
and
out
imul
sub
xchg
mov
add
dec
jmp
mov
or
cltd
push
sub
dec
cmp
mov
jbe
ljmp
or
sti
mov
cmpl
push
mov
xchg
adc
sub
cmp
rorl
push
dec
or
test
push
clc
pop
jne
sub
cmc
std
stos
outsb
and
and
lcall
jbe
adc
insl
out
lahf
add
rcl
cmc
add
inc
lods
mov
xchg
inc
push
negb
add
sub
scas
icebp
xchg
xor
cmp
cmp
jae
call
out
mov
stc
mov
jbe
cltd
bound
cmp
xchg
test
inc
mov
and
ss
pop
or
ds
or
call
mov
inc
dec
imul
mov
cwtl
push
sub
call
mov
fwait
int
in
push
call
es
cmpb
push
loope
mov
scas
insl
std
xchg
mov
pushf
add
sub
imul
fst
ljmp
mov
sub
mov
pop
pop
movsl
mov
push
adc
out
scas
pop
arpl
xor
or
xorl
and
mov
das
sbb
push
lret
jl
jl
mov
in
inc
xor
jns
dec
les
mov
jp
aas
jne
jne
out
addr16
xor
push
adc
mov
insb
lods
sbb
sub
out
jmp
pop
push
push
pop
in
leave
dec
jge
mov
aad
inc
in
cmp
movsl
xlat
mov
cmpsl
dec
add
cwtl
adc
cmpsl
inc
fcoml
sub
andl
out
in
sub
pop
jle
mov
data16
test
adc
sub
nop
mov
stos
mov
xor
hlt
sbb
aad
sub
or
adc
sub
or
adc
xchg
sub
adc
jge
je
mov
popf
cwtl
stos
adc
test
jb
and
shrl
or
pop
aas
lea
add
into
sub
cmp
out
jp
xor
cmpsb
cli
movsb
in
mov
imul
lahf
jbe
and
push
movsl
push
pop
pop
mov
jnp
lret
shll
insl
insl
dec
int
adcl
pop
xor
pushf
sub
loop
movsl
inc
cmpsl
into
and
js
fldt
insb
and
mov
dec
popf
sub
into
mov
pop
enter
in
xchg
mov
push
xchg
pop
adc
xchg
lds
fs
int3
dec
push
mov
aas
std
es
push
inc
outsb
sub
push
push
test
movb
imul
jle
shll
movsb
xchg
fidivl
out
add
shll
push
lahf
leave
cmp
mov
cmpsb
cmp
add
or
loopne
dec
outsb
adc
xchg
jg
std
gs
inc
cmp
outsb
repz
add
inc
repnz
sbb
dec
add
call
add
loope
and
inc
xor
pop
andl
loope
mov
stc
data16
dec
lds
gs
sarb
adc
or
test
shlb
push
inc
movsb
jo
arpl
and
and
sahf
daa
sbb
or
dec
add
cmp
xchg
imull
ja
roll
cwtl
jb
les
push
inc
mov
adc
fistps
sarb
js
repz
fcoms
inc
imul
das
mov
xor
xchg
xlat
jge
mov
stos
pop
pop
sbb
daa
xchg
inc
mov
xchg
adc
dec
je
stc
sarb
jo
ja
or
out
fwait
jmp
popa
loope
int
rcr
jno
iret
ret
mov
jmp
es
or
sbb
test
ljmp
inc
cmp
ror
xchg
imul
jle
call
inc
sti
outsb
stc
mov
shll
fmull
mov
jecxz
ficomps
les
cmp
push
mov
xlat
xchg
or
js
mov
mov
adc
js
mov
sub
daa
pop
les
iret
add
inc
adc
push
sarb
adc
dec
int3
jbe
dec
pop
arpl
or
sbb
mov
das
sub
pushaw
mulb
cmp
in
sub
sti
cmp
rolb
cmp
and
daa
enter
clc
push
mov
stos
out
rcl
mov
adc
add
cli
inc
push
out
int
jbe
mov
xchg
jae
or
ret
rcll
movsb
push
mov
shl
fcmovnb
ljmp
pop
imull
mov
add
ret
and
out
js
lods
lods
jnp
jne
jg
orl
repnz
shlb
inc
inc
shl
pop
outsb
mov
push
cltd
xor
das
and
sub
inc
push
testl
insb
cmc
pusha
xor
xchg
xchg
movsl
icebp
xor
out
push
test
pop
subl
sarl
out
inc
cld
test
cmp
int
popa
xchg
dec
pop
ja
jo
sbbb
adc
sbb
pop
fwait
testb
shll
cli
sbb
cwtl
scas
xchg
adc
test
push
out
adc
mov
mov
add
and
movsb
jg
push
xor
pusha
pop
sahf
xor
sub
jg
push
mov
test
inc
and
fsubrl
dec
pop
lcall
mov
xchg
roll
mov
lcall
ljmp
push
in
fistl
jmp
mov
bound
sub
or
pop
aas
inc
and
hlt
outsb
jne
or
pop
mov
daa
cmp
push
les
lcall
lahf
mov
outsb
or
sub
out
mov
das
popa
movb
push
xlat
pop
or
add
mov
cmp
insl
stos
jp
or
or
shlb
shll
jae
adcb
loop
cli
mov
push
mov
jg
shrl
mov
loopne
jle
mov
jns
push
stc
push
scas
mov
movsl
in
cmc
push
or
cs
aam
gs
out
xchg
arpl
mov
jp
test
sbb
cli
cmp
sbb
lret
adc
cwtl
pop
cmpsl
cmp
inc
push
jnp
jmp
out
push
leave
jno
pmaddwd
sub
pop
push
jecxz
pop
iret
sub
out
xchg
mov
or
jge
mov
fbstp
cmc
mov
aam
pop
adc
je
jbe
pop
sub
js
mov
mov
fwait
cmp
gs
inc
outsl
pop
sub
lock
scas
rorl
lahf
lret
cmp
jecxz,pt
mov
inc
mov
pop
mov
daa
fistps
jno
dec
jge
sbbb
test
pop
sti
or
fs
sbb
add
pop
lahf
fcoml
loopne
out
lret
mov
push
dec
xor
or
ficomps
imul
orl
push
ret
add
xor
push
xchg
lcall
ja
mov
mov
imul
dec
inc
push
stos
sbb
mov
pusha
shlb
out
outsl
and
aam
mov
xlat
adc
and
lock
les
and
push
push
or
pop
adc
fidivs
dec
cld
sbb
xchg
stc
leave
cwtl
popf
sahf
sbb
rorl
loop
dec
jae
sub
mov
mov
push
fmuls
jge
clc
shll
int
int
outsl
push
sbb
sbb
sub
jo
imul
sbb
neg
mov
lea
mov
add
std
jne
push
les
scas
test
or
jecxz
outsl
mov
icebp
mov
or
popa
fnsave
cmp
and
fldl
or
mov
lcall
push
pop
cwtl
inc
loopne
dec
out
test
mov
pop
call
inc
out
jge
in
xchg
int
push
int3
adc
mov
add
outsb
xor
sbb
mov
xor
xchg
cmp
add
cmp
scas
push
arpl
fcomi
sub
std
scas
mov
shrb
xor
mov
lock
add
mov
and
jmp
inc
sub
or
cwtl
sbb
rclb
push
sbb
mov
push
sbb
mov
aaa
dec
mov
outsb
mul
pop
hlt
test
cmp
int
jnp
xor
cmp
ret
fwait
fwait
daa
in
movsl
sub
inc
push
ds
sbb
push
movsl
enter
inc
aad
push
shl
dec
mov
scas
insb
mov
cmpsl
outsb
and
inc
ja
xchg
outsb
in
push
sub
pop
enter
mov
lret
mov
pop
subb
and
ljmp
call
cmp
mov
jne
shl
sbb
cmp
xor
outsb
out
fdivp
cs
mov
je
mov
clc
mov
xlat
icebp
aad
insl
cmpsl
add
cmp
shll
gs
jecxz
mov
pop
cmp
jmp
pop
insb
das
shl
and
dec
lea
lock
and
and
mov
sti
sbb
pop
imul
iret
daa
xlat
mov
int
xchg
mov
lahf
icebp
lock
sbbl
jmp
cmc
bound
sub
pop
xchg
mov
inc
out
icebp
mov
aad
ret
enter
subb
fs
in
jo
xorb
jns
scas
insb
ja
outsb
insl
mov
jbe
inc
xchg
ficomps
data16
cld
das
add
mov
sub
rdpmc
push
lods
jns
or
out
repnz
mov
test
and
push
leave
mov
rcr
mov
add
mulb
mov
je
outsl
xlat
aam
ret
cmp
sbb
addr16
insl
jnp
cmp
cmp
leave
mov
and
rcll
into
cld
inc
aad
and
icebp
inc
hlt
jo
imul
push
bound
xor
and
xchg
pop
push
into
push
dec
xor
cli
lahf
in
jp
sarl
jle
popf
iret
js
xor
add
xor
stos
cwtl
jecxz
xchg
out
cld
mov
mov
mov
pop
in
stc
mov
sti
mov
fucomi
mov
push
or
and
mov
scas
in
ficoml
cmp
cmp
xor
outsl
adc
ja
mov
fimull
jo
jle
into
arpl
aad
test
ffreep
jbe
xchg
mov
pop
mov
push
mov
mov
cmpsb
jne
test
inc
daa
mov
js
xor
mov
cmp
mov
gs
push
insl
fisubl
mov
cmp
repnz
data16
push
imul
adc
fbstp
mov
sbb
inc
popa
mov
fsubs
addr16
in
push
outsb
ljmp
xor
es
aam
inc
cmp
push
push
fcomip
roll
mov
add
iret
or
adc
call
mov
mov
cmp
xorb
out
leave
inc
pop
mov
fcoms
xchg
hlt
int
push
stos
imul
ret
cmp
mov
jecxz
push
push
mov
mov
mov
xor
xor
int
mov
mov
sti
dec
cmpl
subl
jmp
push
popf
hlt
fadd
push
sbb
push
inc
aam
testb
push
sar
stos
test
push
push
imul
mov
jmp
out
bound
mov
outsl
stc
fs
out
orl
outsl
jmp
stos
xor
jle
sbb
lea
mov
mov
outsl
roll
mov
pop
aas
mov
nop
nop
cmp
mov
sub
add
orb
stos
push
pop
jg
xchg
sub
pop
test
movsb
pop
push
cmp
stc
inc
dec
fldt
shlb
mov
mov
mov
lcall
cmpsb
out
xchg
jns
sarl
mov
cld
ret
mov
push
push
fadds
mov
jb
fcmovu
push
cmpsl
lea
ret
xchg
adc
js
dec
mov
test
int3
out
add
adc
sub
sar
xorb
fimull
loope
push
adc
lock
sub
add
cld
popf
lock
and
pop
cli
jo
push
shl
es
mov
repz
mov
cmp
sbb
inc
in
lahf
mov
xchg
lock
sahf
call
dec
and
xor
fwait
repnz
popaw
inc
es
lahf
push
pusha
lds
test
xchg
jns
pop
daa
aam
popf
testb
push
and
jge
in
mov
mov
arpl
dec
cmp
icebp
pop
mov
loop
xchg
adc
nop
jmp
pop
mov
loope
jl
push
dec
and
mov
rorl
adc
adc
or
test
xchg
out
or
xor
int
inc
dec
push
jnp
in
mov
ror
aaa
loope
outsl
xor
inc
mov
fsub
push
test
pop
cwtl
pop
adc
hlt
and
fneni(8087
adc
lret
xor
data16
jbe
xlat
sbb
repnz
mov
gs
ret
xchg
rcrl
mov
xorl
dec
lret
cltd
mov
push
and
add
jbe
jge
mov
and
lret
inc
mov
pushf
movups
arpl
loopne
jp
xchg
and
dec
scas
lcall
imul
pop
cmpsb
inc
adc
out
add
lcall
push
gs
mov
movsl
repz
out
jb
sbb
test
cmc
pop
negl
sti
add
lea
sub
mov
push
mov
sbb
jp
mov
mov
mov
je
aaa
mov
notb
dec
inc
push
aaa
mov
sbb
pop
clc
mov
mov
cmp
aam
loopne
ds
xorl
xchg
fcomip
mov
addr16
jns
push
pop
or
jge
cmp
rolb
mov
ret
xor
mov
jge
or
out
je
xchg
mov
int3
inc
fcomps
rcrl
mov
sub
ret
jnp
push
sbb
imul
sub
mov
cmpsb
inc
je
pop
adc
call
or
xor
cli
cwtl
arpl
call
or
adc
adc
xor
cmp
mov
sub
mov
and
fnstenv
aaa
lret
adc
inc
addr16
xchg
xor
jg
cmp
mov
mov
inc
cmc
gs
movsb
push
jnp
inc
insb
mov
les
xchg
lret
lds
arpl
inc
testb
jecxz
dec
sbb
into
aam
xchg
mov
or
in
xchg
mov
and
test
xchg
repz
add
cmpsb
sub
inc
add
jl
loope
call
mov
in
pop
loopne
enter
out
sub
mov
cmp
adc
xor
or
xor
rorl
sbb
cmp
clc
loope
stos
adc
lods
push
jmp
loop
add
std
inc
aas
inc
and
setge
outsl
inc
in
cmp
shrl
cmpsl
mov
shr
xchg
mov
and
or
movsb
push
popa
stos
inc
test
jb
sti
cmpsl
adc
movsb
stc
mov
pop
in
push
sbb
roll
mov
clc
mov
push
push
movsl
pushf
mov
setbe
dec
cmp
add
sub
xchg
cmp
inc
jecxz
jno
lret
mov
push
repz
inc
add
cmc
or
mov
jae
movl
test
fisubrs
add
or
jno
lcall
add
out
pop
push
ds
insl
pop
dec
pusha
test
divb
mov
cmpsb
call
dec
or
jns
or
sub
subl
inc
mov
cmp
repz
mov
cltd
lret
or
xlat
popf
pop
cmp
loopne
cs
sbb
jmp
or
push
mov
out
test
shll
mov
push
cltd
movsb
int
inc
out
add
dec
cli
push
ja
cmp
imul
shlb
pushf
bound
and
cmp
sbb
xor
lea
cli
stos
inc
clc
xor
insl
push
je
ja
jbe
mov
inc
cs
cmp
leave
es
loop
adc
inc
inc
sub
lock
sub
push
jg
push
clc
loope
jmp
pop
dec
push
cmp
dec
repnz
frstor
push
inc
aam
or
xlat
pusha
jno
mov
pop
lret
gs
push
mov
gs
daa
push
insb
jp
notb
imul
adc
inc
pop
push
sub
mov
lds
rcl
cmp
fnstenv
fs
pop
adc
dec
dec
in
mov
pop
leave
mov
repnz
mov
mov
ds
cmp
inc
xchg
mov
ljmp
mov
xor
sub
lods
sbb
test
jo
cmp
int3
sbb
jb
in
lcall
inc
mov
into
add
xor
xchg
jns
sar
push
cmp
jl
adc
int3
pop
jle
jne
and
cmc
lret
inc
sub
js
sbbl
pushf
jo
fcmovbe
pop
lods
push
or
ss
cmp
into
enter
push
test
arpl
xor
mov
jo
adc
lret
pop
andl
sub
sbb
arpl
out
mov
and
and
cmp
or
orb
fstps
fbld
mov
mov
mov
pushf
pop
rcr
jbe
mov
loope
loop
cmc
inc
mov
mov
and
jmp
add
push
sbb
jg
cwtl
xchg
push
adc
mov
dec
add
mov
sbbl
gs
pop
cld
js
jns
das
dec
add
ja
mov
mov
push
fs
adc
and
pop
xchg
xchg
mov
cwtl
cwtl
inc
in
push
xor
xor
loop
cli
test
jnp
xchg
dec
mov
push
mov
sub
jg
fwait
mov
mov
add
pop
xchg
sub
cld
sbb
jg
mov
cld
shl
jmp
repz
das
push
push
xchg
xor
cld
inc
sbbl
sub
pop
or
xor
xlat
stc
scas
push
inc
and
aad
lock
ret
or
arpl
inc
ffree
mov
bts
inc
mov
xor
pop
cmp
sbb
repnz
in
xor
inc
js
enter
and
xor
xchg
test
push
xchg
or
cmp
ret
std
into
les
call
ret
push
sub
fimull
divb
leave
xchg
jle
rolb
stos
repz
mov
pop
xchg
inc
movsb
jle
inc
psrad
xor
mov
add
dec
mov
mov
pusha
fldt
int
adc
subl
ret
mov
mov
xlat
aaa
pop
dec
sar
inc
pop
sbb
fcmovbe
mov
push
cmc
sbb
mov
sbb
fcoml
fidivl
std
out
or
out
addr16
cmp
adcb
or
icebp
jge
aad
movsb
cmp
sbb
pop
int3
int3
popa
scas
sbb
lret
lahf
push
pop
sbb
xor
movsl
sahf
and
loopne
xchg
test
int
adc
movsl
dec
ret
fcoms
iret
fidivl
jg
fcompl
lock
sbb
loopne
inc
pop
mov
cmpsl
test
sbb
les
stc
or
ret
andl
jns
xchg
outsl
mov
sub
int3
push
es
fldt
bound
test
pop
adc
lahf
lods
cltd
mov
inc
dec
out
cli
stos
js
xchg
cmp
shlb
jnp
in
int
sub
dec
andl
pop
lea
mov
mov
sbb
lcall
out
rorl
dec
pushf
fisubl
les
out
jmp
mov
push
and
sbbl
imull
mov
jge
push
jecxz
dec
std
in
inc
in
xor
pop
sub
sbb
pop
test
mov
pop
pop
int3
in
push
inc
push
cmp
and
dec
in
pop
pop
add
out
adc
push
fwait
xlat
fwait
outsb
cmpb
dec
push
mov
pop
add
add
rolb
int
xchg
mov
cmp
jo
call
xor
cltd
mov
sbb
push
insb
fldcw
cmpsl
add
inc
data16
sbbl
rolb
dec
push
cwtl
iret
fadd
inc
pop
outsb
dec
clc
ret
lahf
fs
loop
ja
or
loop
push
cmp
xchg
sub
cmp
lret
ret
dec
pop
mov
xlat
inc
and
repz
mov
jge
mov
ds
adcb
sti
mov
pop
in
loopne
rorb
scas
roll
xchg
fsubrs
inc
movsl
mov
mov
inc
push
push
xchg
adc
cmp
aaa
inc
pop
je
fcmovne
push
lea
jl
pop
mov
pop
scas
jecxz
insb
cli
fistpl
xchg
jg
insb
lods
mov
jmp
aam
and
dec
inc
add
clc
fnstcw
xlat
mov
sti
sub
in
push
sub
adc
push
fstps
xor
fsubs
scas
jge
outsb
sbbl
fsts
cmp
inc
aam
push
icebp
stos
nop
xchg
inc
fwait
iret
fdivs
and
in
pop
jecxz
sub
pop
or
mov
push
aas
fsubr
insb
inc
orb
fisubl
push
dec
push
addr16
in
or
adc
cmpsl
adc
mov
mov
cmc
mov
scas
aad
cltd
repz
pushf
sbb
inc
push
mov
divb
push
data16
imul
pop
daa
pop
lcall
pop
jo
dec
lcall
or
fwait
mov
int3
mov
nop
clc
xchg
xor
pop
xchg
push
push
test
ss
test
aam
add
dec
addl
jne
or
arpl
sub
fiadds
xchg
xor
jae
lods
dec
xchg
scas
fsubrs
pop
fcompl
push
add
sub
lret
fldt
add
jmp
call
mov
arpl
cmp
cmpb
pop
call
add
jae
add
add
mov
test
test
jae
xorl
rclb
std
fstps
add
pop
leave
into
int3
rol
in
sbb
or
pop
adc
inc
leave
pop
jnp
jg
mov
scas
xchg
fs
jg
add
dec
std
push
pop
out
xor
mov
lea
dec
cmpsl
stos
mov
lcall
test
pop
cltd
push
in
xchg
jb
in
call
outsb
mov
mov
pop
push
adcl
mov
xor
iret
mov
movb
in
inc
cmc
xor
mov
mov
pop
fwait
pop
mov
and
in
add
mov
sti
ljmp
mov
dec
push
xchg
sbbb
mov
sub
and
stos
stc
popa
repnz
mov
xchg
jne
sbb
push
xchg
mov
push
test
adcl
inc
aam
and
xlat
test
mov
xchg
icebp
bound
xchg
jl
scas
out
or
jge
mov
cmp
shl
in
cli
icebp
ficomps
sbb
outsb
pop
mov
mov
xor
jp
ljmp
jb
jl
andb
adc
outsl
or
aaa
jmp
jne
push
mov
pop
push
mov
jne
dec
cmp
cmp
insb
js
or
ja
or
imul
lods
jmp
gs
mov
sub
pop
mov
jge
or
xchg
lods
sub
js,pn
ja
loopne
and
lcall
pushf
pop
ja
aas
dec
sarl
or
leave
scas
mov
lret
ret
sub
sub
ss
dec
adc
and
lods
inc
adc
pop
cltd
mov
out
hlt
lods
jge
test
icebp
test
adc
or
push
mov
pop
lret
out
sub
insl
fscale
xchg
adc
xor
call
push
gs
in
es
adc
test
sbb
cwtl
mov
push
dec
fdivs
roll
ret
lods
fldl
mov
loope
movsl
dec
and
pop
sub
mov
notb
leave
adc
imul
fldt
jne
ds
pop
pop
bnd
jo
imul
inc
aad
push
or
out
lds
sub
mov
das
cwtl
mov
push
cmpsb
add
out
sti
popf
xor
roll
es
add
push
xchg
cld
out
cmc
lock
xor
fnop
orb
aas
scas
inc
rcrl
and
xchg
jmp
std
mov
xchg
sbb
scas
les
stos
in
push
adc
mov
lods
sbbb
dec
fisttpl
or
insl
xchg
movsl
cmp
insl
in
scas
fnstenv
pop
popf
xchg
sahf
xor
mov
in
and
add
and
out
xor
in
ret
push
pop
xchg
jb
movzwl
or
mov
stos
in
repz
jns
push
outsl
ja
and
mov
int3
cli
fimull
cwtl
add
push
xchg
lods
les
mov
cmp
movsl
sub
and
add
punpckldq
cwtl
dec
js
out
dec
loop
repnz
in
xor
pop
mov
pop
and
ljmp
pop
jecxz
sbb
push
mov
xor
push
pop
sahf
adc
sub
insb
insb
subl
fs
js
jcxz
mov
jge
adc
jae,pn
or
cmp
pop
jb
cmp
sbb
repnz
xchg
loope
in
into
rclb
and
leave
cltd
lods
insl
adc
xchg
add
test
mov
lds
mov
imul
mov
inc
xchg
fldl
mov
adc
pop
mov
out
jmp
daa
jo
cs
jle
push
imul
int
jae
iret
jp
mov
add
xlat
or
loope
jnp
out
popf
enter
lret
pop
jns
nop
subl
mov
daa
sbb
sbb
xor
je
pop
outsb
loop
pop
push
and
xor
sti
stos
sub
sbb
in
roll
lahf
xlat
andb
cmp
inc
lret
fsubl
sbb
loope
push
je
cmp
add
stos
je
push
sub
mov
push
xorb
sub
dec
push
stos
mov
lcall
js
sbb
insl
bound
xchg
addr16
mov
scas
cld
in
and
fimuls
hlt
fstps
xlat
jb
inc
fadds
fimuls
jg
mov
mov
in
adc
nop
adc
jle
adcb
adc
xor
sbb
cmp
pop
xchg
stos
imul
sbb
shrb
push
xor
int3
fadds
cmp
xchg
dec
mov
mov
or
movsb
mov
sub
test
dec
lds
and
jo
enter
add
movsl
xchg
jne
or
lcall
pop
mov
push
imul
imul
fldl
incb
adc
popa
gs
jge
scas
inc
or
mov
cmp
popa
daa
filds
sub
or
cmp
aam
sti
mov
sbb
add
jbe
rolb
and
inc
sbb
jo
je
repz
sbb
xchg
cli
jl
subb
push
fdivr
push
scas
js
fsubp
xchg
mov
jnp
sbb
mov
in
and
daa
push
inc
xchg
xor
pop
mov
ficompl
stos
jmp
pop
mov
sbb
sub
aad
cmpsb
mov
jb
mov
push
in
push
stc
mov
cmp
enter
xchg
and
shll
mov
push
jo
es
lock
jns
sub
cltd
pop
insl
lcall
xor
insl
dec
ret
push
rcll
out
filds
cltd
sub
jl
or
mov
inc
mov
imul
pushf
fildl
jp
nop
inc
sbb
cmp
out
and
sbb
jnp
xor
movsb
push
scas
jo
jl
or
leave
push
clc
enter
dec
jg
mov
fmulp
push
iret
sub
push
pop
test
push
xor
adc
pop
inc
push
and
icebp
int3
cmp
sub
decb
or
sbb
push
xchg
jne
xor
xchg
movsb
sti
pop
enter
mov
shll
pop
jecxz
or
fdivp
xchg
pop
shrb
sub
and
fwait
push
dec
pop
hlt
ss
or
test
ja
xchg
mov
cmp
aas
jl
jb
mov
decb
iret
lds
add
sbb
aam
adc
or
test
popl
sub
cmp
mov
pushl
pop
aad
ret
imul
ss
xor
aaa
test
mov
mov
repnz
sub
and
xor
sbb
int
pop
ljmp
std
jge
or
push
push
notb
pop
cmp
cld
xchg
mov
pop
jl
pop
dec
sbb
add
push
jne
sbb
lock
mov
adc
arpl
or
jle
push
loop
mov
insb
jae
sub
outsl
cmp
xchg
and
arpl
xorl
mov
mov
jne
loope
mov
lds
sub
pop
push
jb
jmp
push
divl
cmp
push
push
sub
mov
scas
inc
call
and
jbe
cltd
mov
mov
adc
xlat
cmp
jno
pusha
notb
aas
lods
xchg
xor
or
ss
clc
movsl
and
aam
xchg
stc
fsub
sbb
add
mov
test
cmpsl
and
or
pop
or
and
jge
push
das
leave
push
fisttpll
and
mov
xchg
add
das
cmpsb
cltd
int
ja
into
and
xor
sti
mov
leave
adc
mov
pop
lds
movsb
jl
mov
js
sbb
loop
ds
xchg
cs
fcomi
adc
out
mov
shlb
mov
stc
push
jmp
xor
je
popw
xchg
repnz
fwait
push
in
cs
loopne
push
subl
loope
outsb
faddl
inc
adc
xchg
mov
std
loope
mov
pop
and
aaa
fildl
mov
mov
mov
jp
push
push
xor
dec
sbb
sti
pop
add
ret
or
inc
out
fwait
bswap
lret
inc
mov
jae
cltd
adc
sub
adc
and
in
dec
add
fldenv
xor
mov
test
add
in
mov
xor
sbb
stc
cli
jmp
inc
and
lds
and
movsl
xchg
pop
das
aas
lret
xchg
shll
pop
rorl
dec
movsb
add
mov
fistps
pop
cmp
shlb
aam
cmp
mov
mov
and
push
mov
or
testb
out
cmp
and
dec
mov
mov
lahf
mov
std
jmp
mov
xchg
sbb
fisubs
pop
popf
jno
fildll
fs
inc
jp
xchg
out
cmp
into
cli
pop
xchg
loopne
push
mov
mov
cmp
mov
test
int3
ds
iret
dec
aam
push
lock
notb
jg
outsb
dec
and
cmp
push
sub
stos
mov
cs
std
out
mov
imul
ja
jns
insb
fwait
out
push
lea
adc
scas
fbld
xor
adcl
cmpsb
nop
pop
inc
cmp
fs
push
mov
sub
push
addr16
cwtl
ja
pop
sub
or
lea
adc
push
cld
jge
push
cmp
cmpsb
add
dec
loope
nop
mov
rcrb
mov
pop
jae
push
sti
mov
push
aad
xchg
pop
adcl
repnz
insl
jecxz
xchg
inc
and
cmp
addr16
hlt
in
mov
test
out
nop
pop
mov
fistpl
loop
sahf
fs
sti
stc
aaa
jmp
push
jo
stos
iret
mov
call
jecxz
movsl
call
dec
sbb
loop
loope
es
cmp
and
adc
adc
pop
mov
and
sub
je
pop
std
lahf
mov
loop
enter
stos
cmp
inc
cmp
adcl
call
or
inc
add
mov
xchg
sub
jecxz
sub
enter
mov
jo
sti
lret
or
xlat
jmp
mov
xchg
cmpsl
push
adc
push
cmp
adc
mov
fiaddl
getsec
das
push
mov
ficoml
outsb
mov
aam
or
adc
out
xchg
js
mov
sbb
mov
insl
addb
dec
call
or
call
or
mov
xor
push
dec
lret
or
sar
cmpsb
dec
lds
cwtl
mov
into
mov
xorl
mov
sbb
fisttps
rolb
dec
sub
xchg
xor
pusha
icebp
icebp
mov
add
cld
mov
xchg
lods
insb
cmpsb
mov
loope
rcrb
insb
mov
gs
adc
and
clc
nop
out
shr
test
cli
push
mov
mov
adc
dec
jbe
xchg
sarl
mov
mov
xchg
enter
sahf
mov
mov
adc
add
cli
ss
cmp
cmpsl
inc
sbb
pop
jb
sub
sub
pop
add
sbb
jmp
cli
or
sbb
xchg
mov
fwait
ljmp
sub
in
mov
and
cli
fdivr
cmpsb
ljmp
pushf
push
lods
in
les
ja
rcrb
or
cmp
xor
push
repz
mov
dec
rcrl
pop
mov
sbb
insl
or
lcall
jecxz
sbb
pop
incb
test
popf
pop
dec
lea
jne
adc
in
push
inc
das
stos
sbb
in
push
xor
sti
mov
jge
leave
inc
push
mov
enter
sahf
mov
fiaddl
lret
and
fs
das
lock
fistps
leave
jae
inc
stc
gs
dec
jmp
or
jbe
clc
jo
lahf
cmp
xor
in
ror
push
out
ret
push
repnz
mov
mov
sarb
mov
xor
bound
mov
inc
jnp
push
or
sub
xchg
cmp
test
gs
mov
inc
shlb
loope
popa
dec
sub
lcall
pop
scas
aas
jno
aaa
push
div
dec
out
mov
mov
addr16
sti
test
test
add
movsb
aad
sahf
mov
jecxz
inc
add
xor
stos
cmp
sarb
jnp
push
xor
clc
xchg
mulb
out
jae
push
por
testb
fldl2t
jl
fisubs
mov
neg
loop
mov
mov
shrl
push
or
sub
jnp
or
dec
mov
movsb
daa
or
aaa
xchg
xor
cmp
mov
inc
push
jb
aas
pop
adc
sub
arpl
ja
push
inc
dec
fildll
scas
sub
fwait
rol
ja
add
js
and
aam
or
add
jbe
cltd
mov
dec
jbe
adc
nop
mov
loopew
sbb
xchg
dec
fsubrs
or
pop
mov
add
imul
aam
push
cmpsl
mov
cmpsl
mov
pop
int
ljmp
repz
dec
shll
mov
pop
xchg
nop
jecxz
mov
inc
pushf
aas
ja
stos
dec
inc
cwtl
xchg
lret
or
cmp
xchg
jns
push
mov
idivl
or
imul
test
adc
mov
scas
jo
in
icebp
outsb
fstl
jnp
xor
enter
jle
test
cmp
cld
push
sub
addl
jmp
add
dec
and
push
hlt
mov
dec
stos
cld
sbb
adc
loopne
test
mulb
lds
into
inc
fidivrs
cltd
push
pop
push
daa
mov
inc
stos
notb
or
fiadds
xchg
xchg
sub
push
push
or
dec
loopne
fidivrl
push
mov
sbb
into
push
mov
lds
lock
imul
mov
jge
push
arpl
pusha
or
mov
sar
push
movsb
ror
das
movsl
icebp
loope
push
loop
and
add
mov
jmp
lods
fldcw
mov
mov
sbb
jmp
data16
adc
ret
push
and
jmp
lods
pushf
push
mov
hlt
std
mov
xor
jge
dec
mov
mov
test
repnz
cld
and
lcallw
dec
jbe
jb
sti
inc
sarl
sub
sbb
xor
arpl
fstps
test
adc
mov
pop
pop
push
lret
push
in
je
in
frstor
fld
mov
sbb
loope
sub
mov
pop
xor
in
cmp
test
sub
fs
pop
pop
push
shll
out
push
cli
mov
imul
iret
popa
call
or
rcll
das
pop
rolb
js
je
and
sub
xchg
iret
out
dec
inc
jg
or
call
ret
sbb
jl
outsl
sahf
inc
fildl
inc
push
sbb
dec
inc
ffreep
scas
sub
into
pop
xor
and
fcmovbe
sub
mov
lret
shll
and
inc
xchg
loopne
sbb
push
enter
stc
jb
or
cs
aam
xor
mov
adc
push
lcall
fdivrs
jns
mov
mov
and
jmp
repz
imul
or
inc
mov
insl
adc
cmpsb
insl
in
xchg
pop
inc
and
adc
jb
xor
jne
outsl
inc
inc
inc
jb
movsl
pop
fwait
pop
rcl
roll
and
cmp
pop
adc
ja
cmpsl
fwait
sub
addr16
les
dec
xor
lret
jecxz
mov
loop
push
rorl
fldt
or
mov
mov
ret
repnz
es
or
testl
xorb
out
or
pop
lret
jnp
xor
jnp
push
insl
cmpsl
xlat
push
fldcw
add
insl
jecxz
jno
std
pop
push
xchg
stos
xor
push
xchg
nop
sbbb
arpl
dec
jne
jnp
loopne
insl
jnp
mov
lcall
repz
adc
das
inc
mov
js
syscall
loope
fstl
rcl
clc
subb
cmp
xchg
add
rcll
stc
dec
int3
lods
xchg
pop
insl
add
test
push
lret
mov
or
jne
daa
mov
hlt
sahf
or
mov
out
leave
imul
jns
dec
cmp
sub
sbb
fs
pop
pop
int3
cmp
jns
lahf
gs
sbb
aad
rorl
xchg
clc
mov
push
aad
xchg
andl
jle
pop
sub
aas
add
faddl
orb
and
cmp
jne
mov
dec
fadds
aam
enter
arpl
sub
lret
mov
cmpsb
jecxz
inc
ret
ficomps
in
icebp
test
mov
int3
cmp
lret
mov
sahf
imul
lret
imul
in
mov
out
xchg
mov
je
enter
inc
jge
push
leave
dec
iret
cmp
mov
mov
pop
fstpt
das
fistl
adc
jae
push
push
xor
inc
xchg
xchg
cmc
cmc
pop
popa
dec
enter
popa
inc
inc
mov
mov
ret
sub
sti
shll
cmp
fsubr
sub
pop
hlt
cmc
inc
sub
push
cmpsl
fsubs
mov
push
aam
jae
ja
and
stc
dec
test
mov
data16
cli
divb
movsb
arpl
out
lret
xor
nop
mov
aas
scas
add
addr16
mov
clc
cmp
test
mov
int3
xchg
dec
adc
sbb
test
movsl
cwtl
push
out
adc
ret
or
push
lock
loope
pop
mov
pop
sub
loopne
jmp
jmp
daa
xlat
inc
addb
sbb
inc
push
adc
je
inc
adc
bound
adc
or
fisttps
cltd
aad
insb
ffreep
lret
push
push
sub
shrl
lock
push
stos
and
push
into
xor
sub
push
dec
mov
popa
bswap
fcmovnu
sbb
ja
fmull
sub
cmc
arpl
imul
scas
xchg
mov
push
into
push
or
fstpl
cmp
sub
mov
mov
and
sbb
xor
fiaddl
lds
sbb
stos
mov
or
aam
fildl
mov
out
stos
mov
add
sub
ret
lret
or
sar
sub
popf
fadds
inc
fcom
sbb
sbb
out
jmp
mov
mov
lcall
xchg
pop
mov
sub
bound
dec
mov
fstl
or
xchg
push
dec
scas
es
ja
or
xchg
insl
jno
lahf
or
or
jnp
imul
insl
fs
inc
imul
cmp
addr16
and
jl
out
mov
jne
out
sub
jo
xchg
lds
es
xchg
daa
and
mov
xor
outsb
ficomps
xchg
cmp
out
pop
push
out
scas
and
rcrb
mov
cli
outsl
sub
jnp
jns
hlt
inc
or
ficomps
imul
leave
xchg
pop
ret
mov
dec
add
push
jno
xor
mov
push
int
sub
testl
and
cld
pop
hlt
in
xchg
fsubr
popa
jbe
iret
adc
fistpll
jns
lcall
adc
in
dec
push
xchg
cmpb
je
in
ficomps
pop
call
or
jbe
sub
jne
jno
jbe
lret
cmpsl
fcmovnb
lret
stos
fistl
push
fnstsw
sub
outsl
jmp
and
cmpsl
push
pop
mov
push
sub
or
movsb
pushf
sbb
cmc
mov
fnstcw
cmp
inc
sub
sub
notl
inc
shlb
fadds
into
sub
scas
push
ss
loopne
into
adc
pop
stos
push
cmp
and
fnstcw
fildll
ja
cmp
push
movsb
movsl
test
jg
xor
or
mov
icebp
sub
add
jno
testl
xor
lcall
movl
sahf
repnz
xchg
dec
mov
cmp
mov
dec
orl
jle
mov
outsb
not
dec
lock
aad
popf
sub
bound
jl
adc
out
mov
lcall
int3
popa
xchg
and
pop
push
scas
inc
cltd
or
iret
or
push
addb
js
hlt
push
mov
mov
xor
add
add
in
mov
repz
mov
push
jl
insl
in
or
push
xor
push
shll
loopne
in
jmp
pop
scas
sbb
and
dec
cmpsb
adc
mov
stos
out
aas
sbb
mov
jge,pn
stos
icebp
jge
imul
int3
and
xor
out
imul
dec
idivl
and
test
fsub
ljmp
mov
xchg
push
lcall
add
and
lret
sbb
out
cmpsb
faddl
push
filds
std
mov
fstp
sbb
add
data16
out
pop
insl
jb
lret
xchg
scas
addl
loopne
ltr
xor
fbstp
scas
cmp
aad
loopne
mov
and
daa
or
jbe
jae
mov
lods
xor
cwtl
pop
mov
je
out
ljmp
sbb
scas
cmp
mov
dec
fs
out
cmp
push
inc
cmp
jae
idivb
fisubrs
pop
lea
divb
andb
pop
hlt
sbb
pusha
sti
sub
in
mov
lret
xor
cmp
dec
pop
les
cli
push
dec
jne
repz
jl
bound
data16
jecxz
cmp
mov
inc
jbe
das
lahf
dec
xor
and
sarl
lds
mov
insb
lret
lock
and
jno
cmp
and
dec
adc
rcr
imul
mulb
pop
loop
push
adc
bnd
pop
clc
cmp
cwtl
fucom
fs
mov
jb
pop
jp
add
jno
inc
outsb
scas
and
out
hlt
cmp
sub
mov
mov
repz
fstpl
jns
pop
sbb
test
mov
cmpsl
fildl
inc
inc
hlt
out
adc
ds
add
xchg
cs
xor
xor
ficomps
faddl
mov
jne
cmpsb
push
push
jp
test
xor
mov
je
xlat
pop
ret
in
add
mov
adc
ljmp
arpl
scas
dec
inc
aam
jo
rcrl
sti
add
dec
xlat
cmp
divb
movsb
into
movsb
pusha
inc
jle
sub
xchg
pop
sub
pop
or
daa
jns
sub
xchg
leave
xor
in
lea
xchg
cmpsb
aaa
nop
fildll
pusha
sbb
cli
and
inc
inc
dec
pop
stos
fmull
push
test
jne
or
stos
cs
sub
test
sub
leave
fwait
push
fmull
push
xor
repnz
mov
in
jo
cwtl
xlat
fcmovnu
pop
jmp
in
push
or
adc
aaa
test
jne
xchg
xchg
ret
popa
push
dec
js
mov
fidivs
add
inc
or
out
jg
and
movsb
push
lret
pop
pop
cs
xorb
adc
mov
ret
lock
je
jo
testl
xlat
ljmp
in
lds
pop
aad
push
xchg
or
test
aad
xchg
addr16
andl
jae
cmpsb
ret
pop
pop
inc
leave
jno,pn
dec
lea
sbb
fiadds
daa
cld
inc
mov
adc
xor
fs
inc
xchg
shll
push
or
insl
and
mov
loopne
dec
xor
std
mov
ret
out
fdivrs
stos
add
jae
pop
cmpsb
shll
test
call
mov
fcompl
cmpb
mov
ljmp
jo
imul
fldl
push
cmp
adc
mov
inc
sub
orb
sti
xchg
popa
dec
gs
jmp
fsubl
pop
jno
jae
or
fwait
jecxz
jae
xor
pop
inc
push
xchg
sbb
popa
ss
push
jle
lods
pmaddwd
jl
push
pop
jle
adc
jmp
inc
vunpcklps
insl
out
lock
incl
call
insb
push
imul
sub
xlat
lock
sub
fimuls
ret
bnd
xor
push
inc
xchg
sub
sbb
mov
clc
repnz
sar
jl
rcrl
adc
xchg
roll
ror
hlt
lea
icebp
andb
adcb
pop
cmp
cmp
jns
into
xchg
push
adc
xor
daa
insb
cmp
inc
sbb
cmp
repz
mov
ss
xchg
sbb
scas
lods
mov
push
mov
push
outsb
cmp
xor
popf
jge
cli
mov
jg
std
aaa
pop
push
dec
fstpl
das
pop
iret
mov
outsl
xchg
int
xor
in
jge
aad
adc
xor
ret
xchg
push
cmp
adc
adc
mov
sub
push
add
push
shll
mov
or
shll
shlb
dec
out
cmpsb
popa
mov
mov
stos
les
cmp
movsb
movsb
add
and
and
mov
sbb
sub
pop
mov
xchg
out
pusha
sbb
mov
cmp
mov
ds
jo
lods
mov
stc
cmp
xchg
push
jne
inc
dec
mov
cwtl
shrl
iret
adcl
xor
cmc
sub
or
push
ret
inc
sub
dec
xor
pop
pop
cltd
add
pushl
mov
dec
mov
psubd
or
xchg
outsl
pop
mov
sub
in
iret
repnz
mov
jns
jge
xchg
push
sahf
jl
sub
adcl
fmuls
cmp
mov
popf
ret
push
adc
popa
out
pop
sbb
js
fistpl
sub
loop
lret
test
aam
sub
xlat
add
rolb
lret
sbb
stos
dec
les
xchg
shrb
fildl
sti
push
sarl
mov
sub
pop
pop
aad
aas
jle
fnstcw
pushf
jo
xchg
mov
ret
shrb
mov
mov
lea
pop
sbb
pushf
dec
out
repnz
fdivr
pop
mov
std
sub
xchg
cmc
int3
lods
mov
shll
push
sub
es
por
aaa
fnsave
push
pop
pop
movsl
test
inc
shrl
jae
and
cmc
mov
push
imul
imul
lea
cmp
jg
stos
xor
js
lea
sub
mov
ret
mov
push
iret
incl
dec
lods
out
mov
sub
mov
sti
or
into
jl
cwtl
subl
std
mov
daa
fsubl
int3
or
mov
add
int
adc
cmpsl
xlat
adc
and
jnp
movsb
adc
mov
je
and
addps
cld
pop
mov
push
cwtl
or
and
data16
xchg
dec
mov
cmc
mov
gs
push
jmp
inc
push
mov
mov
jbe
div
xchg
dec
cmc
mov
mov
out
insb
mov
mov
stos
jmp
orl
cmp
pop
add
pop
add
out
and
int3
lods
rcrb
mov
sbb
mov
pop
push
cmp
inc
and
jae
mov
sub
push
and
jb
ljmp
inc
add
not
pop
mov
les
or
test
jecxz
xor
push
cli
pop
aam
cmpsb
movsb
notl
ljmp
dec
cmp
push
icebp
aad
int3
inc
fstpt
jae
loop
mov
cmp
xor
fdivp
jl
pusha
das
lea
pop
fld1
movsb
inc
popa
mov
cli
ljmp
rcl
sbb
pop
push
jns
mov
sbb
icebp
pop
inc
sti
or
push
incl
dec
adc
or
lods
jle
mov
aam
fildl
mov
lock
out
pop
xor
insb
jmp
xor
pop
xor
and
cld
imul
inc
inc
pop
push
or
dec
incb
in
imul
shrb
sub
cmp
les
sarb
stc
lcall
push
popf
fcoml
push
xor
imul
pop
mov
or
push
xor
ss
sbbb
insb
pop
xchg
movsb
push
or
adc
ret
mov
cmc
sbb
inc
xchg
test
add
iret
arpl
call
pop
push
jns
std
add
aaa
imulb
pusha
aaa
push
adc
dec
adc
fildll
or
and
push
jl
test
xor
adc
out
cmc
or
xlat
jg
add
push
and
and
add
movb
adc
cmpsb
jo
insl
ja
pop
outsl
dec
test
xchg
add
dec
inc
outsl
add
imull
mov
jmp
fs
inc
test
icebp
mov
pushf
adc
and
pop
test
outsl
add
scas
or
movsl
icebp
dec
pop
mov
dec
scas
jmp
cmpb
imul
jmp
push
push
or
or
in
mov
and
inc
jl
lock
cmpsb
sub
stos
repz
sbb
pushf
inc
lock
mov
rorl
out
sbb
pop
inc
fwait
sub
loope
scas
mov
xchg
test
mov
push
jae
aad
insb
mov
pop
out
test
rorl
pop
add
or
pop
jne
mov
outsb
mov
cmpsl
pop
int
inc
orb
testl
sub
test
push
aaa
sub
mov
xor
and
insb
mov
sub
out
push
jp
cmp
add
popf
ja
mov
cmpsb
lret
lcall
divl
mov
stos
ret
cmc
push
rcrb
test
into
jbe
xchg
gs
ret
mov
dec
lcall
stos
fldl
dec
sub
jbe
cmp
or
pop
xchg
repnz
gs
push
inc
gs
push
mov
arpl
pop
les
fbstp
adc
inc
loop
and
adc
lret
jnp
or
lods
fwait
sysexit
mov
mov
mov
stc
adc
add
dec
sub
into
fdivl
inc
dec
and
rcl
mov
sbbb
jnp
cmp
pop
cmp
movsl
push
xor
pop
xor
xlat
pop
or
stos
ljmp
ret
pop
ja
inc
in
push
push
dec
insl
xor
or
aas
in
add
cli
adc
add
nop
xchg
pusha
dec
mov
add
addr16
push
and
dec
inc
dec
dec
sub
fnstcw
shrl
rcrb
cld
insb
loope
adc
jnp
and
nop
mov
dec
or
loopne
sub
fisubrl
jecxz
imul
jle
ret
int
stc
pop
jo
mov
lods
xchg
aam
cmc
in
pushf
test
xor
sub
cmp
cmp
push
mov
sub
movsb
or
outsl
mov
imul
insl
fcompl
in
xchg
shr
mulb
mov
mov
adc
loopne
adc
pop
or
inc
mov
mov
imul
orl
dec
cmp
lods
push
lahf
sti
adc
jge
ljmp
pop
mov
xchg
out
cmp
push
jp
cmp
clc
mov
out
test
adc
mov
gs
into
lock
add
ljmp
pop
or
mov
stc
sub
sub
jns
mov
inc
inc
inc
hlt
test
mov
xchg
outsb
mov
sbbb
xchg
mov
test
addl
jo
loope
ljmp
sbb
pop
addr16
cmp
orl
mov
out
sbb
iret
out
and
aam
mul
add
jp
cwtl
clc
push
mov
add
dec
shr
push
insb
loope
imul
xor
lret
rorb
shlb
leave
or
test
xor
xchg
lret
lods
sbb
sbb
xchg
insl
cltd
jp
mov
push
pop
adc
mov
mov
lahf
and
fldenv
jb
mov
insl
idivl
cltd
mov
andl
push
mov
push
stos
pusha
icebp
sub
cwtl
adc
in
into
dec
fwait
hlt
mov
lea
inc
dec
leave
add
ljmp
mov
push
jmp
xchg
xor
addl
lock
xchg
stc
push
sub
rclb
lods
cmc
push
out
ds
cmp
dec
in
mov
jo
mov
mov
sub
push
push
sti
cs
xchg
push
inc
std
sbb
dec
push
mov
jl
outsl
lds
ss
not
xor
pop
in
das
fdivs
xchg
lcall
pop
xchg
rorb
mov
pushf
sub
mov
test
jns
in
mov
bound
pop
pop
fisttpl
mov
lds
data16
pushl
je
jl
sbb
inc
mov
adcb
fstl
or
dec
sbb
mov
cmp
outsb
into
addr16
insb
mov
roll
ja
pusha
sbb
dec
loopne
jl
scas
rcrl
mov
into
adc
mov
push
lock
sub
mov
movsb
ficoms
push
js
cltd
add
jl
lret
push
mov
hlt
inc
popf
pop
data16
andb
pop
mov
lds
xchg
dec
mov
cwtl
gs
pop
pop
cmpsb
and
bound
aaa
xor
mov
mov
xchg
fcmove
cmp
pop
jg
lcall
arpl
add
fdivrp
cwtl
lock
loopne
ret
cmp
lcall
mov
nop
scas
and
jecxz
mov
lock
iret
sbb
rcl
fwait
insb
xchg
je
popf
dec
test
gs
psllw
in
sub
divb
lret
adc
and
xchg
push
or
movsb
inc
ja
mov
jae
lea
pop
ret
lcall
mov
je
nop
push
jo
outsb
push
adc
jge
cld
in
out
shrb
repz
imul
cmp
test
jl
es
cmp
mov
jg
add
xchg
dec
arpl
jg
sahf
fisubl
clc
je
and
dec
xchg
test
mov
push
add
stos
popa
cltd
adc
xchg
dec
aad
mov
shlb
fmuls
loopne
jae
or
addr16
nop
or
cmp
pushf
push
std
mov
sub
test
lea
nop
pop
dec
push
add
scas
out
jecxz
jle
cmpsl
lods
ljmp
jae
loop
gs
jmp
sbb
fimull
sti
mov
bnd
or
loop
sbb
xchg
pushf
repz
dec
js
hlt
in
icebp
subb
xchg
push
inc
in
imul
imul
std
rolb
mov
cltd
dec
idivl
insl
in
or
jp
mov
mov
push
insb
daa
push
mov
lods
pop
or
push
add
sub
popf
fucomip
lret
sbb
fdivrl
fldt
mov
pop
je
test
adc
xchg
in
inc
cmp
pop
cltd
xlat
lds
mov
loope
enter
jg
or
bound
ficompl
add
test
mov
jge
insb
nop
es
jns
xchg
fwait
lret
mov
mov
sub
pop
in
arpl
mov
cltd
roll
addl
sbb
sub
jge
out
pop
lret
int
xchg
arpl
cmp
jl
adc
jmp
sbb
mov
pop
jno
and
inc
jnp
rclb
ja
pop
lret
adc
inc
jo
mov
cmp
mov
loop
dec
rep
or
inc
insl
jno
push
inc
cmp
repz
pop
cmp
flds
out
lods
push
imul
push
mov
test
pushf
out
dec
adc
or
lcall
cmp
ficoms
jmp
or
xchg
je
inc
jmp
jnp
imul
and
push
jns
test
mov
push
outsb
aas
add
xchg
inc
lods
xor
cmc
jns
lret
gs
sarb
inc
adc
sbb
mov
cld
xchg
and
cmp
sub
mov
movsl
xchg
neg
cmpsb
in
xchg
push
gs
xor
sarl
jb
jo,pt
xchg
test
std
lea
int3
int3
xor
mov
adc
lcall
dec
pusha
jbe
loop
mov
and
nop
cli
mov
int
lahf
mov
push
lahf
dec
adc
cltd
lret
mov
and
adc
dec
or
clc
adc
aas
nop
adc
cmp
mov
inc
and
sub
mov
mov
pop
xchg
out
mov
cmp
mov
push
roll
and
jae
push
pop
sbb
jbe
je
sbb
out
aad
pop
mov
sub
xchg
xor
pop
or
les
icebp
jb
lahf
sahf
daa
sub
xchg
pop
test
ljmp
movsb
cltd
enter
mov
inc
sub
aad
stos
loopne
inc
dec
inc
ljmp
arpl
and
inc
xor
add
jp
cltd
in
movsl
std
mov
stos
adc
jo
or
adc
pop
push
ret
es
int
dec
adc
mov
adc
push
cmp
pop
aam
jno
sahf
cld
push
or
cs
shr
xlat
jbe
and
jmp
jns
push
and
push
or
aam
cltd
mov
mov
sbb
enter
jle
xor
sti
scas
mov
adc
cli
out
js
jae
pop
stos
dec
nop
jno
fdivrp
rorb
xor
hlt
dec
dec
pop
pop
and
xor
jmp
xchg
pop
xchg
pop
imull
test
mov
sub
xor
and
mov
cli
xchg
push
mov
lahf
aad
mov
test
jl
cmp
stc
adc
or
adc
jb
push
lock
lcall
xchg
data16
and
xchg
cmpl
mov
fwait
insl
pop
or
xor
inc
add
fcomps
repnz
adc
add
adc
pop
cmpsb
lea
mov
xchg
arpl
pause
sbb
clc
mov
jb
subl
or
push
in
mov
dec
add
sbb
in
cmp
adc
aaa
sbb
ret
cmp
out
add
repnz
insb
inc
jmp
jnp
ja
pop
mulps
cs
jb
imulb
cmp
lods
mov
stc
mov
mov
xchg
stc
pusha
cli
lea
jnp
je
lret
in
aas
jge
xchg
ret
lea
mov
shll
add
stos
mov
mov
cltd
icebp
cmp
outsb
fdivs
hlt
int3
sbb
jb
dec
scas
ja
scas
jle
xorb
push
sbb
cld
call
loop
add
xlat
imul
sbb
rcll
jbe
xor
outsb
dec
push
test
mov
push
pop
xchg
sub
pushf
sub
fistpl
arpl
pop
push
test
enter
mov
or
out
leave
hlt
lea
pop
push
or
jae
out
dec
and
fdivp
inc
adc
mov
sub
loopne
xlat
out
jle
push
inc
int3
je
cmp
jl
xlat
pop
cmp
push
xor
roll
or
loopne
jb
out
or
jmp
mov
js
dec
stos
sbb
pop
mov
gs
stos
xchg
ja
and
push
loope
movl
mov
mov
and
or
mov
repz
jg
dec
gs
in
addr16
and
aam
or
andl
in
dec
fbld
xchg
push
push
out
mov
pop
xorb
jl
adc
push
data16
fsubrs
push
cmpsb
dec
cmp
andb
dec
xchg
pushl
out
sub
loope
push
push
roll
push
out
pusha
loopne
sub
aaa
pushf
mov
mov
mov
test
mov
xchg
popa
mov
fcompl
adc
cmp
add
fadd
jg
and
cli
insl
fldt
inc
mov
clc
ds
sub
sbb
mov
std
ja
push
add
rcrb
hlt
fs
sbb
loope
pop
cltd
mov
loop
cs
mov
das
inc
sub
xchg
add
dec
mov
movsl
mov
jecxz
shl
outsl
lretw
jne
ja
mov
movsl
adc
lcall
dec
outsl
repnz
mov
jno
mov
ja
mov
pop
arpl
jb
movsl
inc
sbb
cwtl
sub
sahf
jns
gs
xor
cs
mov
add
and
enter
mov
push
jo
push
cmpsl
push
mov
lahf
aaa
jno
fimuls
test
or
ret
and
test
mov
pop
xchg
ficoml
fisubl
sub
adc
or
xchg
lahf
sarl
inc
xor
pop
es
loopne
or
in
jne
xchg
cmp
outsl
jecxz
xor
cmp
notl
jg
inc
push
notl
mov
mov
cmp
lea
jae
sub
jo
ja
in
lea
dec
lds
cmc
xor
mov
arpl
iret
jbe
data16
xchg
fmuls
pop
mov
dec
loopne
movsb
xor
jecxz
ret
mov
jecxz
fidivs
add
cmpsb
inc
inc
push
stos
mov
jg
in
push
push
pop
push
out
or
nop
cmpsl
push
xchg
cbtw
xor
inc
ljmp
mov
leave
sbb
rolb
inc
sti
sub
loopne
lods
mov
stc
out
xor
adc
clc
jle
mov
xchg
pop
dec
mov
mov
subb
mov
mov
pop
pop
sub
test
xlat
pop
rolb
mov
and
push
mov
sbb
fidivrl
xor
sbb
push
xorb
pop
shlb
xor
add
pop
sbb
ffreep
push
fdivs
inc
add
popa
pop
jb
xchg
dec
test
lahf
out
mull
jb
jp
or
in
pop
and
push
out
pop
out
push
cmp
fucomp
stc
jbe
pop
outsl
xor
fidivl
std
std
lods
push
inc
pop
aaa
cmp
add
cmp
dec
hlt
add
jle
push
mov
cmp
jl
loopne
test
sub
mov
sub
push
jge
aaa
testb
pusha
or
dec
aas
cmpsl
adc
pop
jle
shr
mov
mov
out
addb
stos
pop
shl
cmpsb
mov
mov
adcl
jle
out
xchg
sub
bswap
mov
jmp
cmp
js
mov
sbb
sub
sub
dec
push
test
nop
mov
sub
out
scas
add
loop
out
sbb
sbb
mov
sub
cs
adc
mov
je
xchg
jne
out
dec
shl
xor
cmp
in
test
adc
repnz
in
push
jge
test
ds
popf
cmc
push
lea
out
ret
sahf
add
mull
lods
cltd
mov
cmp
sub
xchg
sub
inc
pop
cmpsb
mov
into
stos
mov
mov
out
pop
imul
mov
lret
xchg
out
mov
xor
daa
jb
jno
repz
cmp
loopne
pop
lea
outsl
pop
sbb
insl
mov
adc
and
push
shlb
xlat
fcompl
fistpl
in
lret
sub
in
shll
inc
pushf
pop
mov
mov
dec
adc
les
dec
sahf
outsb
movd
testl
fcoms
repz
pop
and
push
mov
push
sbb
dec
insb
jne
inc
add
int
test
push
pusha
push
inc
cli
jl,pn
and
rcrl
pop
jb
sar
icebp
push
addb
and
pop
jg
sahf
test
bound
pop
sub
mov
xchg
loop
je
push
or
xchg
push
jp
leave
stc
icebp
xchg
outsl
xchg
lcall
dec
sti
mov
rcrb
push
mov
data16
enter
or
mulb
jns
or
js
add
cmp
adc
ret
add
cmp
inc
mov
mov
dec
shlb
test
sub
icebp
fistpl
pop
cmp
dec
mov
cwtl
jo
rorb
sbb
int3
popf
subl
cmp
shll
fnstcw
adc
das
mov
bound
and
sub
push
jmp
mov
xchg
psubd
fdivrs
sahf
sub
shll
subb
sbb
mov
cmp
iret
pop
dec
xchg
repnz
cmc
jge
in
orl
divb
mov
jns
clc
jg
std
and
and
pusha
xor
mov
inc
jl
xchg
js
sarl
mov
xchg
and
xor
test
adc
fnstenv
adc
mov
ftst
inc
adc
mov
jmp
inc
xor
or
mov
pusha
inc
aam
test
and
mov
push
pop
adc
stc
and
and
out
outsl
in
fidivl
inc
outsl
std
mov
das
lret
jno
jb
lret
xchg
rcl
hlt
popf
adc
nop
mov
into
xchg
loopne
mov
stc
pop
addl
jp
dec
mov
test
sub
arpl
pop
ljmp
rclb
scas
or
loopne
ljmp
aaa
mov
push
jnp
lahf
cld
inc
adc
lds
loopne
push
xchg
cvttps2pi
inc
inc
stos
int
cmp
insb
lock
xor
out
pushf
inc
mov
mov
dec
jmp
add
and
psrlw
std
pop
mov
dec
sahf
mov
out
cmp
mov
lods
imul
orb
pop
hlt
add
cmc
dec
dec
sbb
rorl
jo
sub
sbb
fsubs
and
mov
lret
mov
mov
push
ja
xor
sarb
jnp
insb
xor
stos
iret
cmpsl
inc
push
imul
add
rclb
dec
outsb
jmp
orb
pop
push
push
jbe
jae
cmpsl
mov
push
dec
ret
cltd
cmp
mov
mov
inc
and
rcll
push
subl
and
mov
cmp
fidivrs
push
or
cmp
clc
xchg
je
inc
test
mov
dec
sub
mov
pusha
adc
push
pushf
lea
pop
cwtl
and
mov
les
xchg
push
sub
cltd
add
je
arpl
inc
xchg
addr16
sar
pop
addb
arpl
lahf
scas
sbb
nop
addr16
loop
das
push
sbb
mov
arpl
xchg
add
mov
mov
xchg
das
lds
out
subb
dec
xor
inc
pop
mov
and
aad
jae
sub
sub
stos
lock
les
pop
inc
fisttpll
pop
sarl
js
xchg
rcr
and
aad
and
sub
add
xor
add
jge
mov
inc
xor
dec
push
addr16
loop
cmp
xor
jg
jmp
and
repnz
push
pop
mov
iret
adc
adc
jle
nop
cmp
lahf
sbb
jg
jbe
enter
stos
das
dec
pop
ror
mov
daa
out
movsb
mov
fcomi
lea
inc
ret
cld
inc
push
sub
andl
lcall
test
arpl
cmc
aaa
jl
jmp
sub
inc
popa
hlt
enter
jno
cwtl
xchg
loope
js
mov
insb
pop
mov
lahf
nop
or
add
mov
push
inc
daa
dec
and
mov
std
fdivrs
and
xor
cli
jecxz
enter
push
shll
and
or
ret
test
lea
nop
arpl
or
mov
lods
mov
mov
xchg
testl
mov
cmpsl
cmp
cmp
dec
xor
xor
inc
out
lahf
imul
lcall
sbb
pop
imul
js
mov
arpl
xchg
lds
sub
sub
cltd
xor
ret
jae
insl
push
adc
ret
push
mov
sub
pusha
adcl
cmp
inc
dec
mov
add
loopne
js
pop
aad
jge
push
dec
sub
pop
fsub
lods
bound
lods
add
jecxz
inc
xchg
iret
icebp
in
movsb
data16
push
sub
lods
dec
lahf
cmpsb
out
dec
xor
xor
cli
xor
fstpt
push
test
inc
jno
mov
hlt
lea
pop
in
cmp
sahf
sbb
and
pop
fwait
xchg
cmpsb
leave
mov
mov
mov
iret
xchg
adc
aam
push
es
cmpsb
mov
lock
xchg
push
out
in
inc
lcall
inc
inc
sbb
lret
data16
mov
dec
fisttpll
mov
dec
xor
or
nop
push
lock
lods
orl
lahf
mov
mov
jmp
xchg
addr16
cli
cmc
lcall
jecxz
je
pop
push
ljmp
ljmp
jnp
push
push
stos
and
mov
mov
or
inc
mov
dec
mov
xlat
add
loop
xchg
fildl
test
pop
repnz
mov
mov
dec
dec
and
lret
cmpsl
dec
mov
add
jl
xchg
repz
fcomps
popf
sub
add
xchg
iret
fistps
lods
mov
nop
mov
dec
sahf
sbb
mov
or
dec
mov
psubsw
sbb
pop
or
add
daa
iret
mov
and
ja
negl
fdivr
cli
push
dec
jns
outsl
or
sub
cmp
xchg
or
fsubrp
or
jmp
into
or
dec
cwtl
inc
sub
fadds
pop
stos
mov
ja
stos
mov
jnp
jg
pop
push
push
shrb
dec
mov
fwait
and
adc
xor
gs
bound
push
scas
xor
test
lcall
stos
aam
jmp
icebp
push
repz
fadd
ret
push
mov
or
aad
xlat
shll
insl
jo
mov
mov
fiadds
daa
sub
pushf
mov
daa
repz
cltd
fcompl
xor
arpl
scas
inc
jg
pop
ret
cmp
ret
add
mov
add
enter
xor
mov
add
xor
push
sbb
pop
xchg
mov
test
pop
pop
mov
ss
out
mov
mov
imul
into
icebp
xor
es
int3
xchg
cmp
and
pop
cmpxchg
aas
mov
and
xchg
dec
pop
jg
into
leave
fdivrl
xor
fisubrs
test
jmp
out
insl
inc
mov
clc
testb
fiaddl
cmp
mov
nop
adc
mov
sbb
sbb
jl
ret
popf
pop
or
imul
bound
cmp
xchg
jp
mov
cwtl
mov
sbb
dec
repnz
pop
hlt
in
mov
lods
mov
or
mov
dec
sub
mov
sub
add
les
sub
cmp
jns
sub
mov
rolb
pop
stos
xchg
bound
xchg
enter
xor
addr16
or
fcoml
cld
inc
dec
mov
adc
jbe
outsb
mov
jmp
inc
mov
push
cld
jns
sbb
stos
mov
jbe
jecxz
jl
xchg
fstps
mov
rolb
in
ds
sub
cmpsl
and
enter
mov
loopne
mov
jecxz
es
ja
mov
jbe
loope
xchg
and
pop
pop
jg
and
add
bswap
adc
xor
mov
xor
orb
and
cmp
roll
or
loop
ret
cmp
push
jle
pop
nop
ret
out
imul
aam
sub
out
sub
jns
loopne
imul
clc
cmp
dec
cs
ljmp
outsb
icebp
or
mov
dec
lret
adc
imul
xchg
pop
sbbb
repz
lahf
shlb
jbe
inc
mov
mov
mov
inc
dec
inc
push
mov
cli
adc
dec
pop
fldl
add
pop
and
push
into
fistpll
icebp
xchg
adc
dec
xor
ret
pop
xor
push
iret
in
xchg
ret
mov
add
dec
cltd
add
loop
je
insl
push
pop
repnz
sub
push
ror
dec
jg
mov
test
pop
int
push
lret
adc
out
aaa
push
inc
jge
adc
mov
das
mov
rorl
push
mov
iret
push
mov
clc
cmpsb
cmc
movsb
xor
loop
mov
sub
mov
push
jnp
lahf
sbb
or
jg
outsl
mov
addr16
xlat
pop
sbb
cmpsb
pop
aas
or
aad
ja
inc
inc
in
xor
test
and
imul
jle
pop
ljmp
test
mov
loop
lock
lret
inc
aaa
add
push
mov
dec
mov
mov
adc
sbb
xor
jae
mov
mov
test
push
imul
adc
jns
push
pop
and
cli
test
and
ja
jne
sbb
sub
sahf
loop
inc
or
push
cmp
dec
subl
lods
aas
aam
mov
push
iret
addr16
sbb
dec
movsl
mov
dec
movsb
add
loopne
push
cli
mov
or
shl
mov
neg
sub
mov
aad
cmp
xlat
xchg
out
pop
add
and
dec
push
sub
push
test
lds
pusha
or
addr16
cmp
jecxz
gs
data16
out
outsb
fdiv
lret
sarl
xchg
dec
cmp
dec
push
or
loope
shlb
lgdtl
cld
imul
ficompl
sub
mov
jle
fmuls
in
int
pop
xchg
inc
gs
ret
push
pop
push
test
push
aas
pushf
fcoml
js
dec
xor
int
sti
sbb
addl
mov
das
or
adc
outsb
add
out
scas
fcmovu
rcll
or
mov
mov
test
les
scas
push
mov
das
mov
or
inc
sub
rcrb
sub
cmpsb
inc
lock
xor
sarb
add
dec
cwtl
imul
rorb
and
dec
pop
inc
fs
pop
pop
mov
mov
ja
push
sub
iret
out
sbbl
inc
mov
scas
cmp
add
js
pop
add
adc
jg
mov
lret
out
xchg
push
outsb
or
inc
xor
cltd
jmp
jbe
adc
js
mov
xchg
sub
push
add
cmp
xlat
xor
push
jg
adc
push
or
lods
std
sbb
cmc
jae
lea
pop
jnp
test
pusha
imul
or
ljmp
sub
ror
push
int3
mov
pop
mov
cmc
jl
idivl
lcall
dec
inc
repz
cld
push
aaa
xor
ds
ljmp
and
cld
sub
out
lock
out
das
sahf
sbb
push
xchg
adc
mov
lahf
xor
in
jle
jp
push
cmp
push
jl
xor
pop
mov
cwtl
xor
rorb
cmp
mov
jl
sub
cmp
daa
test
into
movsb
shrb
cltd
shlb
aas
inc
push
mov
xchg
popf
ja
inc
sub
push
lock
fsubl
or
aaa
fdivr
pusha
xor
gs
jge
addb
repnz
scas
sbb
add
adc
xchg
mov
pop
pop
cli
gs
push
mov
dec
movsl
sub
xchg
ror
jno
lods
ja
dec
xor
mov
mov
lods
cli
ljmp
imul
xchg
sbb
pop
and
jmp
jg
and
lea
fists
rolb
dec
lret
ljmp
aad
gs
jmp
cmp
call
dec
jp
test
sub
dec
mov
push
adc
jl
jl
outsl
xlat
insl
data16
inc
in
imull
in
cwtl
adc
hlt
push
sub
ljmp
sbb
pop
jl
dec
into
bound
out
push
push
dec
pop
and
cwtl
adc
scas
and
decb
xor
popa
or
push
stos
pusha
push
test
pop
mov
fdivr
cmp
popf
pop
add
stos
icebp
pop
cmp
test
cld
mov
mov
mov
add
std
lret
sbb
push
dec
xchg
xor
cmpsl
cli
xchg
pop
gs
jge
ljmp
xchg
dec
cmp
sub
add
xor
pop
insb
sbbb
and
negl
cmc
sbb
and
pop
jg
loopne
and
js
adc
xchg
sub
bound
sub
movsl
std
cmpsb
inc
mov
daa
or
sahf
out
and
inc
fdivrl
in
push
ror
ja
fisttpll
aam
xchg
mov
add
jge
clc
jecxz
sahf
xchg
mov
mov
xcrypt-cbc
cmpsl
push
out
rcll
test
orb
pop
repnz
add
pop
shll
aam
push
inc
fs
cmp
int3
inc
sub
or
scas
fwait
aam
push
les
adc
xchg
cmp
pop
insl
or
adc
or
jae
mov
cli
lea
repz
xchg
inc
cmp
sub
pop
mov
jae
push
std
aad
cmp
js
adc
fsubs
push
addr16
js
xchg
mov
push
inc
jmp
cs
jmp
incl
and
pop
movsl
cmpsl
and
push
je
loopne
mov
lods
lods
shrb
insl
ds
xchg
add
xchg
dec
adc
and
shrb
data16
mov
pop
shr
push
icebp
fdivs
leave
popf
test
testl
mov
fsubl
mov
sub
lret
ja
lahf
adc
je
inc
jmp
mov
clc
imul
addr16
stc
vmaxsd
idiv
call
iret
add
loop
mov
iret
cmp
popa
push
inc
mov
push
mov
popa
dec
jae
sub
lock
inc
scas
push
int
cs
or
xorl
shl
adc
repnz
imul
cmpsb
dec
push
xchg
push
lea
pop
cmpsl
pop
xchg
sub
cmp
xlat
movsb
sub
mov
stos
cmpsb
and
adc
movsl
fstl
sbb
repnz
lds
cmp
lret
push
int
sub
clts
popf
jp
jge
lahf
call
jp
sub
sbbb
cli
inc
out
repnz
mov
cmpsl
fldenv
xchg
fstps
dec
fistpll
sub
rcll
jo
notl
dec
imul
sub
lods
jns
test
push
jnp
xchg
insl
and
imul
rolb
pop
cld
clc
jle
enter
imul
js
subb
cmp
cs
das
push
or
lods
jns
pop
xchg
das
cmc
ret
xchg
or
pop
mov
cmp
test
ljmp
mov
or
lahf
cli
fdivs
pop
push
imul
je
das
aam
fsubrp
bound
inc
in
xchg
inc
sbb
dec
je
mov
pushf
xchg
fldl
pop
std
inc
mov
sahf
lret
shl
popa
xchg
xchg
fwait
jl
push
loop
fcmovnu
jmp
arpl
sbb
loopne
jbe
adc
jae
jge
or
sbb
inc
fistl
out
xor
mov
push
out
cmpsl
adc
ljmp
dec
rcrb
incb
xchg
jno
iret
xlat
hlt
test
sbb
cld
lea
mov
pushf
add
xor
stc
mov
push
out
jnp
movsl
inc
loop
mov
in
adc
lret
testb
outsl
inc
lcall
xchg
mov
imul
push
movsb
in
pop
repnz
ret
jmp
jge
push
xor
mov
icebp
mov
mov
lahf
mov
pop
mov
mov
jo
mov
loope
mov
hlt
nop
pop
mov
test
sbb
xor
ds
sub
xchg
add
dec
hlt
xchg
test
loope
inc
repnz
mov
dec
loope
lods
ds
cmc
cli
push
jb
xor
pop
mov
jns
xchg
mov
mov
testb
fidivrl
pop
xor
inc
or
xor
pop
aas
inc
incl
lods
mov
mov
lods
into
lret
xlat
mov
jmp
sub
lahf
add
jg
aad
mov
inc
push
cmc
rep
push
add
test
mov
xlat
stos
out
cmp
loope
or
push
mov
pop
test
xchg
lock
push
daa
fimuls
rcrb
inc
sbb
inc
aad
dec
adc
xchg
popa
daa
inc
rcl
inc
insl
scas
xchg
xor
lock
aam
ljmp
mov
xchg
cli
bound
lock
scas
aas
mov
daa
sahf
pushf
scas
sbb
dec
gs
or
jp
dec
in
mov
movsb
sub
add
nop
fstp
add
les
mov
sub
ret
addb
jb
or
mov
cmp
cmpsb
jecxz
mov
shr
int3
insb
pop
shl
mov
lret
imul
jbe
hlt
int3
sub
fmull
sahf
xor
popf
adc
jmp
mov
fstpt
je
xchg
fnstenv
add
rol
xor
lcall
adcb
ljmp
movsb
scas
mov
push
insl
jno
loope
int
cmp
lret
pop
xor
out
xor
inc
xlat
jl
push
rcrl
dec
xchg
mov
sub
outsl
xchg
bound
pop
sub
lret
mov
in
inc
or
push
jl
cmc
neg
imul
push
xor
je
pop
lret
lods
mov
jne
clc
xor
addl
push
fnstenv
jbe
or
cmp
test
lock
psubq
iret
mov
push
ret
pop
les
imul
sbb
adc
mov
dec
mov
pop
pushf
sti
inc
clc
jle
cmp
fsubrs
je
call
push
push
or
pop
jae
mov
das
and
xor
push
mov
jg
jno
pop
dec
xchg
pop
nop
xor
cs
add
sbb
xchg
lahf
call
or
popl
jge
aad
rclb
push
and
inc
mov
insb
jns
ja
sub
mov
mov
repnz
dec
push
sub
push
insl
cmpsb
sbb
enter
adc
rol
adc
imul
js
and
cmpsl
fsubrl
or
xchg
push
inc
adc
out
fisubs
fistps
out
cmp
repz
stc
pmaxub
pop
mov
stos
fs
push
jnp
jbe
ss
ret
push
out
daa
pop
fdivrl
in
sbb
mov
sub
nop
jle
test
andb
xor
out
push
xor
jnp
hlt
sbb
lret
sbb
add
jo
lcall
ljmp
push
imul
pop
pop
ror
jns
divl
out
cmpsb
repz
data16
subl
sub
and
mov
pop
out
gs
lea
popa
inc
ficoms
enter
and
xor
sub
stos
mov
and
inc
leave
adc
sub
mov
stos
cmpsl
movsb
jb
push
dec
into
js
imull
mov
popa
fs
xchg
insl
jnp
pop
js
cltd
dec
pop
in
sbb
or
cmpsl
daa
imul
cltd
pop
insl
xchg
pop
inc
rclb
or
push
push
mov
notb
sbb
insl
popf
fidivrl
mov
aad
xor
lret
ret
inc
call
xlat
arpl
add
sbb
jg
dec
pushf
jmp
cmp
lods
sub
pop
movsl
aas
jle
test
dec
insb
inc
sub
inc
xchg
or
out
mov
sbb
cmpsb
insb
pop
fildl
fdivr
add
push
and
dec
jno
and
jmp
push
subb
mov
loope
test
sbb
int3
lods
add
inc
es
mov
inc
add
dec
fwait
ljmp
lods
inc
gs
pushf
iret
sub
pop
int3
pop
stc
mov
pop
jecxz
cld
inc
xor
cmp
mov
rolb
cmpsl
daa
or
sub
sbb
or
cmpl
and
pop
xchg
or
xor
sbb
mov
push
jo
stos
rolb
mov
dec
jns
movsl
xchg
xchg
or
or
jg
mov
adc
stos
int3
lret
xor
enter
xchg
and
lcall
mov
mov
fs
pop
xchg
adc
leave
mov
jp
adc
adc
insb
aaa
pushl
cmpsl
xchg
sahf
hlt
mov
or
fcmovnu
cmp
sti
nop
or
or
mov
negb
push
push
lcall
or
je
lods
xchg
in
adc
std
sub
scas
test
add
dec
mov
dec
mov
mov
mov
sarb
push
sti
push
divl
lea
mov
imul
xor
push
stos
pop
pop
xor
loopne
push
xchg
push
outsl
mov
es
aad
aaa
lahf
cltd
adc
into
push
fimuls
ror
test
mov
fstpl
or
mov
stos
inc
mov
gs
mov
add
out
scas
repz
loop
mov
rclb
shl
jne
add
test
js
jmp
jecxz
mov
mov
cltd
sbb
jge
test
dec
dec
jle
hlt
repz
popf
jbe
mov
movl
mov
xchg
std
push
push
shl
nop
jbe
jo
sub
lahf
sbbl
in
or
rcrl
lea
push
add
out
shl
mov
or
lea
mov
pop
add
push
cmp
fdivp
add
adc
stc
xlat
imul
or
sub
addr16
push
or
xchg
mov
pop
call
or
dec
xacquire
cmp
rorl
mov
aad
mov
or
mov
aad
outsb
rcl
aas
shrl
jb
push
cli
stos
fsubrl
in
dec
andl
mov
icebp
mov
insl
mov
es
and
sti
adc
cltd
pop
lock
jl
push
pop
sub
movsb
add
clc
cwtl
rcll
jne
jno
xor
xor
fldt
push
mov
push
xchg
adcl
xor
sub
mov
pop
in
test
arpl
jbe
icebp
cmp
cmc
jge
or
push
adc
inc
fists
add
push
or
subb
ret
outsl
inc
inc
ret
mov
jbe
xor
push
outsb
adc
cwtl
lds
dec
lods
hlt
test
out
ljmp
add
into
sub
mov
adc
inc
lods
loop
sub
in
cmc
lret
jmp
fadd
or
sub
rcll
jbe
and
scas
icebp
pop
xchg
push
sub
and
idivl
cmp
das
dec
add
or
movsb
cmc
into
test
add
lahf
xchg
test
xor
mov
mov
mov
sbb
stos
js
xchg
jg
idivb
aaa
in
mov
addr16
mov
sti
xchg
dec
inc
dec
dec
mov
mov
repnz
add
dec
push
fidivs
xor
or
je
nop
incl
jl
inc
shrb
sbb
mov
xchg
int3
adc
mov
outsl
nop
aas
stos
lret
outsb
jo
pop
adc
lret
and
and
scas
in
dec
sub
jge
loop
js
ret
sbb
sarb
aaa
jg
pop
push
pushf
rcrl
xor
aaa
std
mov
pop
leave
or
push
and
push
nop
push
adcb
pop
mov
das
push
sahf
out
sbb
jno
inc
add
es
call
into
mov
in
cmp
jo
test
or
stc
cld
gs
dec
fldl
test
add
mov
push
cmpsl
ss
data16
adc
xchg
jl
push
xchg
cs
cmp
or
pop
mov
insb
jg
lock
mov
clc
mov
jecxz
stos
add
pop
jecxz
sub
repnz
lret
add
mov
pop
mov
mov
pop
inc
ficompl
sarb
push
icebp
sbb
test
into
mov
xchg
loope
aam
aaa
sbb
fimull
cmp
jae
pop
bound
mov
hlt
adc
mov
aaa
mov
cli
inc
test
push
inc
outsl
aad
pop
inc
mov
rcrb
xor
in
stos
and
nop
clc
outsl
mov
pop
push
stos
add
sub
xadd
xchg
jb
cmp
mov
sub
pushf
push
lods
and
dec
pop
pushf
push
std
and
lods
adc
in
in
fcmovnbe
sbb
pusha
add
sub
mov
lcall
out
es
add
test
dec
je
mov
dec
add
repnz
mov
jecxz
pop
shll
lret
mov
or
sub
sub
xchg
xchg
sub
mov
xchg
aad
lea
xchg
push
and
jp
mov
xor
mov
jbe
fidivrl
stos
push
inc
rcll
jno
sbb
out
or
shlb
adc
call
jnp
and
dec
xor
push
inc
xor
jnp
jle
and
fisubl
hlt
addps
jnp
loopne
adc
add
sbbb
or
and
hlt
ja
fldcw
aaa
mov
dec
andl
add
xor
lods
jg
push
dec
jns
mov
add
pop
sub
popf
mov
lretw
sahf
inc
inc
add
xchg
mov
js
repz
pop
or
iret
aaa
inc
pushf
pop
hlt
mov
inc
inc
and
and
test
pop
pop
or
lcall
mov
sahf
add
xor
jmp
add
jno
movl
add
rcll
bound
pop
xchg
mov
les
mov
push
or
loopne
add
out
shll
mov
sar
jmp
enter
xchg
push
and
mov
mov
xchg
int3
stos
xor
test
mov
xor
xchg
lock
xchg
and
hlt
jo
push
call
pop
dec
pop
in
rorl
xchg
std
mov
scas
movsb
sbb
stos
movsl
cli
cmp
js
into
std
shll
ds
mov
push
xor
xchg
ret
out
sbb
add
jnp
cmp
sbb
aad
rcrl
ficoml
mov
imul
stc
test
js
ret
int3
sub
hlt
cli
push
rolb
xor
dec
or
dec
push
adc
push
mov
jl
push
fwait
in
cmc
cld
cltd
rorb
cmpb
mov
ret
mov
addl
loop
movsb
loope
rolb
outsb
or
mov
sarb
shlb
ret
mov
mov
push
sub
xor
lods
les
dec
pop
cmc
adcl
out
andb
in
fisubs
jne
mov
lods
xchg
pop
add
adc
js
mov
test
sub
push
jp
repnz
jl
aas
sub
jae
pop
xchg
ja
movsb
pop
adc
push
mov
stos
faddl
or
repz
les
mov
idivl
les
prefetch
or
and
inc
test
cmpsb
lea
adc
push
push
xor
pusha
jns
jge
movsl
in
pop
push
lods
ss
je
jecxz
inc
pop
mov
jo
inc
call
mov
sbb
cwtl
cmp
mov
daa
data16
mov
outsl
adc
loope
cmp
movsb
xchg
add
push
mov
mov
xor
push
sub
push
jnp
cmp
daa
xor
cmp
xor
xchg
add
pop
idivl
cmc
pop
js
adc
xchg
lods
bndldx
xchg
inc
stc
mov
jmp
pop
sbb
cmpb
dec
das
mov
mov
cld
inc
inc
in
je
mov
adc
jne
das
push
or
pop
push
fldlg2
xor
sub
adc
jb
sahf
mov
jecxz
push
inc
outsl
scas
aam
decb
cli
js
pop
dec
cld
das
push
leave
cmp
mov
xchg
mov
pop
or
popf
xchg
sbb
xorb
cmc
rorb
sbb
enter
dec
outsb
test
dec
jle
adc
xlat
sbb
pushf
jge
fs
in
xlat
test
sub
das
testl
lret
cs
dec
mov
adc
sbb
test
sbb
jne
push
add
js
in
faddl
sbb
jle
les
xor
loopne
lret
insl
inc
pusha
pop
stos
fwait
cs
and
cmpsl
ret
mov
repnz
pop
mov
xchg
call
cwtl
jge
mov
inc
dec
and
pop
jne
sbb
xor
adc
test
scas
xchg
dec
lods
in
stos
in
mov
push
scas
cmc
push
jge
lods
jnp
dec
ds
arpl
loop
sub
sete
xchg
sub
jno
iret
cmpsl
push
mov
fcomps
push
xor
in
mov
clc
mov
push
nop
pop
rclb
xor
nop
mulb
clc
int3
jne
outsl
stos
ret
mov
out
jno
and
rcll
xchg
inc
sti
mov
adc
dec
lcall
jnp
inc
pop
fnstenv
orl
repnz
leave
mov
inc
sbb
push
dec
rcll
movl
in
xchg
mov
and
adc
inc
push
mov
sbb
fs
cld
pop
cmp
aas
bnd
test
dec
sub
jl
inc
and
ficoml
cli
add
push
fldl
jns
fwait
subb
mov
rorl
repz
push
inc
pop
inc
mov
adc
out
cmp
jge
lds
and
sub
lret
sub
mov
movsl
imul
jnp
xchg
shll
mov
xor
pop
mov
mov
dec
mov
lods
jne
pop
push
mov
pop
push
sbb
push
imul
push
imul
xor
mov
jne
push
or
sbb
cmpb
enter
popf
faddp
lods
mov
add
lcall
mov
scas
in
pop
out
xchg
push
test
dec
test
jnp
icebp
mov
ss
xor
add
jge
ljmp
mov
cwtl
repz
adc
outsb
sarb
adc
cli
or
pop
inc
pop
es
mov
inc
dec
mov
or
out
gs
dec
jp
mov
hlt
pop
repnz
push
push
testl
sti
aaa
inc
inc
jp
mov
subl
push
sub
std
je
mov
aaa
mov
and
ss
jl
aaa
repnz
lods
hlt
push
or
aam
pop
dec
add
imul
cld
dec
add
adc
fistps
scas
adcl
push
mov
fistps
out
fstps
imul
hlt
jae
aad
mov
mov
outsl
inc
ret
cmpsb
lea
cmp
test
mov
sbb
jno
mov
push
aam
out
xor
ss
and
lahf
out
xchg
lods
lods
xor
inc
and
cmpsl
dec
lret
push
cmp
subl
inc
sbb
das
jmp
or
lret
fildll
nop
add
cmp
add
push
mov
ja
fsubrp
pop
jecxz
push
shll
and
mov
jb
lods
pop
pop
movsb
lods
inc
lds
stos
repnz
jecxz
cltd
mov
jne,pt
push
pop
outsb
mov
pop
lods
cli
push
cmp
enter
not
push
cmp
jp
xchg
inc
call
adc
sub
std
jb
adc
mov
push
test
jle
mov
add
or
and
test
and
testl
jbe
mov
adc
sub
cmp
popf
jle
arpl
sti
inc
gs
in
sbb
dec
push
out
pop
mov
iret
adc
cmp
and
xlat
sbbb
jae
pusha
mov
jge
add
cmp
mov
repz
mov
adc
and
dec
jg
pushf
push
xor
loope
push
xchg
add
js
or
ret
pushf
ret
and
cmpb
movsb
dec
stos
or
dec
xchg
sub
std
push
aas
xchg
loopne
push
jmp
and
and
imul
das
xor
sub
fiaddl
or
pop
dec
inc
xlat
pop
mov
mov
movl
out
pop
sbb
shll
dec
jg
mov
es
pop
cmp
or
mov
push
adc
aam
dec
push
pop
mov
out
stos
into
or
imul
push
jns
nop
inc
xchg
mov
dec
enter
xor
inc
rorl
add
mov
mov
inc
mov
into
and
xchg
inc
clc
icebp
popa
addl
or
push
outsb
fnstsw
lods
jl
sti
lret
daa
sub
inc
mov
sub
adc
dec
jae
jmp
pop
mov
xlat
je
rolb
sub
jnp
push
add
loope
sbb
loope
shlb
add
shrb
scas
movsl
xor
scas
je
int
in
cmp
xor
or
bnd
cld
lea
fs
jmpw
hlt
add
mov
xchg
mov
pushf
filds
pusha
dec
out
and
std
lods
out
pop
dec
sbb
pop
adc
add
cwtl
pop
push
cltd
aad
sub
hlt
xchg
popf
outsl
lcall
or
ja
cltd
rcl
es
std
loopne
aaa
jl
fildll
aad
push
cmpsb
push
in
mov
and
sbbb
xor
jmp
es
adcl
pop
mov
jmp
or
cmp
sub
mov
push
in
scas
mov
xor
inc
jno
cmp
arpl
into
inc
fs
mov
loope
adc
pop
jmp
sbb
rcrl
inc
mov
jne
fisttpll
mov
arpl
mov
mov
push
leave
imul
and
iret
shlb
dec
lret
mov
dec
mov
mov
pop
mov
cmp
lcall
push
loop
ljmp
cmp
addr16
mov
ficompl
mov
jae
xor
mov
xor
push
sti
xor
xchg
popl
neg
pop
enter
fisttpl
dec
inc
shlb
mov
das
test
pop
jno
mov
cli
out
subb
arpl
es
push
adc
out
mov
push
popf
pop
and
and
mov
inc
push
enter
iret
ret
inc
mov
xor
xchg
stos
mov
sub
sub
sti
mov
lret
fdivrs
jbe
aas
xor
pop
push
insb
mov
andl
out
daa
ret
loope
lea
dec
jno
pop
xor
int3
mov
addr16
xor
and
and
mov
dec
sbb
daa
dec
lret
pop
and
outsb
test
pusha
int
pop
push
cmp
mov
push
mov
loope
shlb
test
xor
or
mov
jae
adcl
mov
xchg
rclb
sub
addb
and
jmp
aad
aas
pop
outsl
push
mov
pop
test
ja
push
mov
or
jbe,pt
push
inc
insl
push
sbb
sub
xor
cltd
shlb
ja
xchg
or
insl
pop
das
xor
xchg
adc
push
cmp
scas
push
or
fsubr
ja
out
cli
hlt
push
and
mov
ficoms
mov
inc
insb
xchg
inc
fs
shrb
jge
sbb
imul
inc
ss
sub
out
push
push
scas
push
test
cwtl
call
lret
xor
andl
cmp
pop
fmuls
lahf
push
mov
les
pop
cli
int
mov
js
jmp
sub
mov
sbb
adc
loope
sub
or
push
imul
fsubrs
or
mov
jmp
adc
fnstsw
mov
mov
dec
cmp
pop
imul
mov
int3
mov
sub
sub
sub
or
push
insb
push
dec
or
aam
push
dec
sbb
mov
push
sbb
int
enter
jl
mov
push
into
test
ss
or
mov
ret
mov
add
push
push
int
mov
push
mov
sub
jns
int
std
pop
sub
jmp
dec
int3
xchg
sub
sub
cmpl
jo
pop
in
push
shrl
jb
mov
outsl
push
or
ret
flds
rep
fiadds
push
movsb
imul
pushf
jl
stos
cmp
cmp
inc
fistl
arpl
pop
push
rep
mov
aaa
scas
into
outsb
add
adcb
jae
pop
pop
add
cmp
mov
out
mov
psrlq
cmp
mov
sti
xchg
ja
mov
mov
xchg
sub
fisubrs
sub
dec
insl
test
push
lock
jb
jle
lds
jge
pusha
adc
daa
inc
dec
mov
lock
popa
js
pop
repnz
xchg
lcall
repz
mov
ficoml
movsb
std
iret
add
and
sti
dec
push
sub
push
rolb
jae
cld
lods
ss
into
test
jo
mov
stos
stc
aad
and
int
cmp
rcrl
ljmp
jmp
or
cmp
xchg
mov
mov
pop
sbbl
add
sti
mov
out
mov
in
movsl
push
data16
push
or
dec
push
movsl
mov
sub
adc
xchg
mov
xchg
popa
test
aam
jns
push
das
xchg
xor
jo
xor
fcmovu
push
mov
sub
lahf
ljmp
jmp
mov
pop
enter
add
pop
adc
pusha
shll
push
das
loopne
lds
inc
sbb
jle
rolb
sbb
add
push
icebp
and
addr16
adc
hlt
and
pop
ret
gs
cmp
jae
xchg
add
adc
xor
mov
dec
xchg
es
push
push
adc
stos
lahf
movb
cmpxchg
cmp
call
sbb
mov
int3
jge
inc
add
add
out
dec
and
out
mov
scas
sub
pop
mov
add
into
mov
int3
lahf
loopne
lock
sbb
push
xchg
test
mov
outsb
out
mov
xor
repz
test
jae
out
arpl
jbe
enter
ret
sbb
jbe
cltd
popf
mov
pop
mov
inc
inc
sbb
pop
imul
sub
daa
jbe
gs
clc
test
push
mov
jo
stos
in
cld
es
sbb
jecxz
xor
cltd
clc
jl
cli
sub
jle
mov
into
jnp
loope
inc
sub
mov
dec
mov
mov
sbb
adc
inc
scas
or
lds
je
test
fisubrl
sti
jno
ror
insb
inc
mov
jmp
cmc
dec
dec
arpl
push
adc
insb
and
fldenv
push
pop
mov
lea
cmp
and
xchg
xchg
mov
cmp
fcmovne
mov
ret
mov
movsb
mov
pushf
push
lods
adc
dec
shrl
scas
dec
or
lea
nop
jne
jnp
inc
sbb
lea
pop
or
fsubr
xchg
stos
push
xor
jbe
add
ds
into
push
and
iret
neg
andl
mov
leave
inc
popf
vcvtsd2si
xor
shll
push
xlat
and
push
pop
addr16
adc
push
shlb
add
sub
or
mov
mov
iret
mov
fstp
or
and
mov
aas
outsl
push
jl
ds
popa
dec
mov
xchg
cmpsb
rolb
lahf
mov
jl
sbb
ret
incl
rclb
cmpsb
adc
mov
xlat
dec
and
xor
or
pusha
push
inc
stos
or
mov
leave
add
negl
dec
sub
sub
push
icebp
pusha
or
test
dec
add
dec
mov
sbb
pusha
into
add
inc
cmpsb
aad
test
fisttpll
dec
test
leave
cmpsl
int
fcmovne
sti
punpcklbw
or
adc
negb
mov
mov
shlb
mov
cmp
pop
je
and
outsl
test
aad
orl
das
dec
mov
or
fs
jae
fistpll
mov
adcl
cmc
ret
cwtl
xchg
shl
icebp
cmpsb
xchg
sub
arpl
dec
cld
mov
cltd
cmp
je
sub
push
jmp
dec
jecxz
in
and
push
jnp
lods
lds
or
cmp
mov
push
sub
mov
jb
sti
pop
lret
mov
jge
dec
or
mov
out
sahf
cmp
insl
jae
and
push
nop
mov
notb
dec
out
push
mov
jo
xchg
sarb
in
mov
inc
lods
rcrl
dec
out
mov
add
xchg
lahf
fisubrs
gs
mov
xor
sarl
add
adc
leave
dec
imul
aaa
xchg
adc
push
dec
lds
stos
shlb
rorl
push
mov
dec
pop
mov
shll
and
ret
test
adc
xor
stos
iret
push
lcall
fs
insl
adc
jecxz
mov
jns
jle
mov
pop
push
sti
mov
push
les
jno
fucomip
pop
jmp
push
xchg
fadds
loope
in
mov
call
sahf
mov
push
cmpsl
jae
xchg
cmp
push
sub
mov
lods
cmp
test
inc
sahf
ja
mov
xchg
or
fsubs
mov
pusha
fld
xchg
cmpsl
out
sbb
pushf
in
mov
jne
out
add
sti
out
mov
inc
cli
inc
test
adc
mov
sbb
fistpl
or
les
add
cs
xchg
push
inc
cmp
lahf
stc
jl
pop
add
std
pop
cmpsb
enter
rolb
dec
loop
xchg
roll
or
xchg
adc
xchg
lcall
dec
xor
sahf
insb
xchg
ficomps
push
and
call
jp
aad
lock
lods
push
push
pop
mov
add
rcrb
andl
push
mov
xor
rcll
psllq
into
stc
add
aaa
scas
and
aad
repnz
ret
jbe
fs
stos
xchg
call
pop
pop
ss
mov
jmp
or
push
mov
dec
xor
or
mov
clc
test
pop
sub
lods
add
xor
sub
dec
mov
xchg
cmc
push
xor
push
jbe
xor
int
ljmp
jnp
les
cmpsl
arpl
in
xchg
push
xchg
addl
jb
rol
inc
in
call
inc
not
lods
jp
cmp
fnstsw
push
repnz
push
insb
outsb
into
dec
mov
scas
mov
mov
mov
into
lret
adc
inc
and
jg
fildl
loop
clc
mov
fisttps
rol
fs
add
dec
into
in
push
fsubs
sub
sbb
scas
cmpsl
inc
fdivrl
or
add
mov
adc
cmovbe
mov
sbb
test
lock
jmp
cld
and
aas
lret
jmp
cmpsl
iret
xchg
cs
data16
out
sub
sbb
mov
adc
mov
repnz
sub
fucomip
and
mov
outsl
sub
cmpsl
nop
int
mov
ds
mov
jns
mov
bound
lahf
mov
add
jg
stos
sbb
mov
les
cmp
decl
cmpsl
mov
or
fcoml
iret
fdiv
mov
mov
cmc
faddl
lods
jb
test
push
sbb
push
in
xchg
lods
push
mov
outsb
repnz
xchg
lods
inc
fmul
cmp
adc
loopne
xchg
inc
cmp
pop
ja
mov
xchg
or
test
jo
lods
push
sub
mov
int3
cmp
out
pop
lods
mov
in
sbb
lds
movsb
mov
ret
push
fucomip
lret
out
cltd
or
out
or
xchg
imul
cmpsl
fcmovnbe
pop
lcall
lea
ljmp
xor
sub
push
push
cmpsl
stos
enter
lea
lret
push
mov
rolb
add
inc
shll
dec
aam
or
ficoms
out
test
fsubrs
jp
add
sar
ret
and
pop
lret
sub
adc
pusha
testl
push
adc
fcmove
push
orb
push
xor
xchg
inc
add
xor
in
mov
xchg
div
mov
push
aaa
stos
out
int3
sbb
mov
clc
xorb
push
mov
inc
sbb
jmp
aas
add
jl
jns
push
cli
int3
push
ljmp
in
mov
in
loopne
fistpll
popa
add
aad
hlt
pop
jg
aas
push
ret
leave
dec
mov
int3
inc
imulb
loopew
dec
mov
ret
lds
lods
std
xor
jge
pop
mov
jo
and
push
shll
dec
icebp
outsl
xor
adc
lds
push
popa
outsl
movsb
cli
sbb
repz
mov
repnz
xorb
and
add
lret
or
jmp
mov
rcll
out
sbb
jnp
pop
lock
sub
scas
mov
lods
push
jg
mov
sub
imul
stos
repnz
stos
rcll
cmp
adc
movl
cwtl
push
pop
cmp
pop
xchg
pop
mov
aam
add
sub
je
jmp
pop
dec
pop
push
pusha
arpl
or
sub
xchg
mov
xor
push
pop
scas
jl
sti
jns
rcrb
pusha
je
pop
in
rcll
bound
loope
test
std
fwait
mov
mov
mov
jge
jecxz
mov
sub
or
je
iret
cs
dec
adc
and
frstor
push
mov
mov
sbb
pusha
jo
addr16
sub
dec
inc
xor
jge
dec
push
adc
sbb
je
scas
stos
sub
movsl
lods
pushf
lods
lret
sbb
push
cmp
std
sub
mov
dec
rcpps
xchg
mov
lret
into
out
jge
or
pop
pop
xchg
dec
lods
cwtl
cli
lea
dec
ret
cmp
pop
das
cwtl
data16
movsl
gs
and
fldt
xor
sbb
das
inc
pop
lret
xchg
data16
fildll
inc
loope
sbb
cmp
loop
movb
pop
addr16
sbb
jnp
jne
int
loop
pop
dec
or
push
sbb
mov
pop
xor
pop
repnz
das
push
dec
xchg
jnp
loop
lock
mov
lret
adc
js
or
jae
sbb
inc
xlat
jae
rcrl
xor
cmp
inc
sbb
dec
sahf
and
int3
inc
out
push
bound
popf
xor
add
rep
mov
stos
bswap
xor
push
mov
and
add
and
je
push
mov
push
aad
pop
pop
in
pop
leave
repz
call
ja
add
out
push
push
jne
fimull
fcoml
enter
ljmp
add
pop
mov
ret
mov
jg
in
ret
cmp
test
or
fs
ror
into
shl
push
setbe
fildll
push
les
dec
enter
aaa
mov
xor
movsl
sub
mov
pushf
pop
jnp
aas
jg
loope
out
roll
mov
sbb
sti
movsl
mov
movsb
subl
lea
or
push
mov
daa
mov
adc
arpl
ret
ljmp
xchg
into
fisubrs
xchg
dec
stos
and
jp
mov
outsl
sub
imul
xor
push
test
fiadds
sub
mov
push
in
cltd
cs
push
jmp
popf
push
push
pop
cld
and
sub
inc
insl
pop
pop
inc
popl
mov
insb
or
jae
imul
addr16
mov
adc
mov
cmc
mov
dec
mov
mov
xchg
out
rol
cld
cmp
cmp
pop
push
imul
mov
cmp
mov
ret
pshufw
fdivs
sbb
cmp
movsb
fcmovnb
sub
add
out
pushf
mov
stos
ret
push
jge
fcompl
inc
xor
lods
dec
clc
cwtl
dec
adc
sub
aaa
cmp
adc
fbstp
cwtl
pop
push
ja
sbb
arpl
dec
imul
dec
pop
out
jp
fdivl
das
test
cmp
enter
repnz
mov
push
call
and
cli
push
lds
call
in
jno
iret
lahf
ds
fidivl
or
dec
sbb
add
mov
divl
add
clc
add
je
add
cld
fisubrl
stos
mov
add
ja
and
sub
lock
jecxz
dec
adc
pop
iret
jae
and
loop
push
test
push
testb
mov
leave
sub
xor
sub
adc
test
cmp
pusha
stc
scas
add
mov
sbbb
push
mov
adc
jmp
cmp
scas
fs
pop
jp
adc
popf
sbb
out
mov
stc
mov
test
mov
push
shll
stos
std
mov
or
pop
movsl
xchg
pop
loope
adc
and
in
notl
mov
cwtl
cmp
mov
sbb
enter
inc
adc
dec
sbb
insl
jno
pusha
and
and
mov
fidivrl
cmp
test
and
adc
incl
and
cmp
in
push
roll
in
xchg
pop
in
leave
in
xchg
mov
subl
mov
push
hlt
pop
leave
imul
or
dec
sub
popa
imulb
xorl
xchg
cs
faddp
lods
andb
ljmp
and
push
popa
jle
sub
scas
jne
adc
mov
jl
test
aas
sub
cmpsl
ds
add
js
or
mov
aas
fisttpl
cli
add
cmp
les
in
pop
movsl
mov
test
aaa
stos
arpl
pop
inc
aaa
aaa
jle
dec
cmp
sti
mov
xchg
popf
aad
cwtl
pop
jo
push
dec
stc
lcall
test
sub
pop
mov
adc
xor
aad
pop
push
call
inc
es
xchg
sbb
cmpl
movsb
inc
out
jae
int3
fisttpl
dec
jnp
cs
rclb
xchg
test
ljmp
sbb
push
scas
scas
xchg
jae
or
or
not
adc
cs
data16
push
pop
in
fsubs
xor
fs
mov
repnz
cmpb
fdivl
sub
mov
mov
fisubrl
cmp
xchg
dec
paddb
cmp
gs
add
dec
lods
cmpsl
inc
in
outsb
jmp
and
into
pop
shl
cmp
dec
loop
insb
push
xor
pusha
fsubrs
inc
dec
sbb
std
mov
nop
fnstcw
pop
sahf
neg
test
inc
jge
mov
mov
stc
addl
lahf
pusha
dec
into
xchg
fcmovnu
test
jno
pop
orb
push
call
enter
scas
stos
cmp
pushf
inc
mov
sub
addr16
sbb
push
hlt
rcll
into
loope
sbb
dec
mulb
push
scas
lods
notl
or
add
xchg
int3
mov
fsubr
inc
in
mov
lret
sbb
aad
rorb
pop
aam
inc
sub
push
popa
in
shrl
movsb
push
adc
inc
add
lock
sub
fbstp
xchg
test
sbb
nop
inc
lods
inc
outsw
in
mov
sub
adcl
loop
sbb
sub
sub
and
pusha
push
out
clc
les
mov
sub
sub
clc
les
push
sbb
adc
and
jg
out
imul
sbb
pushf
sbb
jne
js
mov
daa
aam
xor
test
xchg
mov
ss
bound
out
cltd
icebp
xchg
dec
insb
ror
leave
mov
lods
out
enter
ffreep
inc
ret
mov
mov
lds
inc
adcb
loopne
cmc
iret
jno
imul
jne
scas
fwait
xor
inc
dec
inc
dec
cmc
insl
mov
repnz
push
jl
adc
xor
mov
mov
sti
mov
scas
jge
das
aam
sub
cmp
sahf
hlt
jmp
jge
shlb
shlb
std
push
dec
enter
jmp
push
setg
jl
sub
in
neg
mov
pop
std
sub
or
cmpl
jbe
dec
add
xchg
sti
insb
inc
mov
xor
lock
stos
ret
sub
pop
push
and
jns
push
roll
add
pop
addr16
mov
aad
fidivrs
lret
ja
xor
sbb
es
sbbb
insb
pusha
insb
xor
adc
mov
loopne
sahf
jl
repz
xor
fisubrs
out
mov
mov
stc
faddl
pop
pushf
pop
push
inc
std
stos
xchg
jne
sub
pushf
jno
in
repnz
jne
fcoml
mov
adc
xchg
inc
pop
push
xchg
aam
popf
adc
mov
iret
push
addr16
insb
inc
pop
lock
dec
mov
pushf
pop
popl
sub
mov
adc
sbb
dec
jnp
dec
rolb
cmp
loop
pushf
jno
mov
sub
inc
mov
js
pop
repz
push
out
xor
or
in
rclb
add
mov
test
xor
cmp
ljmp
xorb
xor
cmp
inc
push
pusha
lret
xor
xchg
dec
mov
lods
les
mov
and
jbe
sbb
and
iret
sub
div
xchg
dec
ja
leave
sbb
ja
mov
insb
outsb
stc
mov
mov
sub
adc
sub
out
or
negl
inc
aaa
clc
mov
fmulp
xor
push
out
xor
cwtl
and
mov
xor
popf
inc
insb
aad
pusha
aas
cltd
dec
hlt
mov
xchg
inc
fidivrs
xchg
repnz
mov
push
pop
dec
jg
xchg
mov
fimuls
je
sbb
mov
pushf
and
mov
notb
lret
int
mov
mov
ficoms
mov
inc
jb
mov
bound
jns
out
jl
dec
ds
ret
sbb
cmp
xchg
or
xor
pop
fxch
xchg
cld
fidivs
das
mov
xor
jg
push
dec
loopne
mov
adc
pusha
inc
adc
mov
inc
adc
les
movsb
ss
roll
outsl
inc
lret
lock
push
or
inc
push
push
mov
sti
sub
cli
icebp
mov
sbb
sahf
dec
lock
xchg
jnp
mov
fwait
lret
aad
push
mov
scas
ds
sub
mov
xor
ror
iret
rcrb
lcall
adc
hlt
faddp
lret
jo
dec
jbe
fwait
sub
pop
mov
push
mov
fsubr
repz
add
cmp
outsb
xor
jp
or
bound
ja
dec
mov
cmp
or
or
rcl
sbb
xorl
push
sub
jge
push
les
out
adc
ja
das
mov
int
pop
jmp
cmp
inc
pusha
sbb
dec
lcall
rorb
adc
xchg
clc
lret
xchg
and
scas
lahf
pop
hlt
cmp
loop
mov
test
sub
mov
jl
xor
mov
sub
dec
sub
xchg
push
mov
dec
outsl
loop
test
inc
pop
xchg
push
imul
mov
sbb
add
or
add
xor
les
repnz
jne
ja
mov
jbe
out
popa
imulb
adc
leave
push
fisttpll
pop
add
xchg
fdivrp
mov
gs
pop
mov
insb
fst
hlt
xlat
in
cmpb
popa
and
loop
pop
popf
stos
xchg
imul
sub
ret
xor
leave
mov
or
mov
lock
pop
sbb
xor
add
dec
gs
dec
ljmp
outsl
into
and
loop
mov
out
xchg
incl
loope
int3
scas
ret
pop
rep
cwtl
mov
mov
rcrl
ret
sahf
mov
mov
inc
clc
cld
or
adc
jbe
and
rcr
mov
add
ljmp
xor
outsl
jmp
repz
cmc
jmp
loop
add
outsb
out
lret
gs
dec
mov
mov
cmp
dec
call
out
dec
in
ja
xchg
lahf
dec
jne
clc
jg
lret
push
and
mov
lret
adc
adcb
pop
cmp
es
push
xchg
test
xor
push
shlb
cs
ret
mov
xlat
into
xchg
popf
lea
jp
aad
inc
push
sbb
sub
push
dec
push
push
rclb
push
cmovp
out
mov
cld
ss
adc
cmp
ret
int3
inc
ror
fs
cmpsb
cmpsl
stc
roll
pop
mov
mov
jne
fs
pop
sub
jmp
mov
movsl
add
mov
scas
out
popf
stos
arpl
push
push
push
jae
cld
jg
out
cmc
aad
mov
popa
jecxz
mov
or
shrl
lods
sub
dec
js
pop
std
inc
dec
push
pusha
jp
test
add
xchg
test
xorb
add
mov
insl
in
jns
sbb
cmp
cmp
and
adc
or
adc
xorl
test
mov
sbb
insb
mov
inc
add
cmp
add
cwtl
out
push
fwait
dec
push
fnstcw
mov
adc
imul
jmp
jle
or
pop
inc
and
bound
mov
pop
or
in
insl
and
pop
mov
sarb
cmp
jbe
mov
inc
sub
ljmp
lahf
cmp
aad
mov
cltd
cwtl
fidivrl
and
and
push
shl
or
mov
dec
in
or
cmp
xchg
push
fwait
mov
ss
sub
ret
pop
fwait
dec
mov
shrb
or
aaa
jno
shrb
jp
mov
or
lea
rsqrtps
mov
aas
lret
jmp
icebp
fildll
imul
inc
jns
fimuls
shrl
popf
movsb
int
push
sub
cmp
mov
dec
adc
lods
xchg
sti
push
adc
jp
testb
xor
imul
cmpsb
ficompl
xor
inc
pusha
sbb
xor
stc
pop
nop
sub
ret
xchg
repz
mov
gs
mov
repz
push
in
xor
push
mov
lock
add
jmp
sub
lods
mov
lcall
lcall
shrb
nop
fadds
sbb
mov
mov
add
mov
push
jecxz
pusha
push
sub
push
and
jnp
push
test
pop
hlt
fildl
orb
push
xchg
xchg
push
push
adcb
stos
enter
pushf
in
inc
mov
and
in
cmp
shlb
mov
xchg
dec
popa
xchg
sub
out
aam
les
leave
push
pushf
outsl
popa
jecxz
pop
mov
and
xchg
sub
popw
aad
sub
jo
or
jo
rol
in
push
cmp
adc
mov
aad
daa
pop
clc
jl
out
pusha
adcb
adc
adc
add
ret
pop
pop
stos
adc
ret
clc
adc
lahf
xor
dec
sub
mulb
icebp
push
sub
insl
cs
mov
push
cmpsl
les
fadd
add
xor
cltd
icebp
inc
rorb
iret
mov
cwtl
ret
jae
outsb
fisubs
and
loop
inc
cmp
jecxz
mov
or
sub
enter
cmc
xchg
jecxz
and
mov
fdivl
adcl
into
stc
push
jmp
jnp
pusha
xchg
lcall
push
cmp
lock
fdivrs
sti
xor
push
hlt
dec
mov
and
lods
push
pusha
mov
adc
mov
pop
lret
push
xchg
push
cltd
sub
frstor
clc
inc
pop
sub
cld
iret
dec
dec
xor
popa
mov
loop
dec
imul
punpckhwd
pop
vpunpckhwd
cli
xor
loop
pop
add
std
insb
or
inc
lock
lds
gs
mov
in
cmp
cltd
test
inc
sbb
movsl
out
mov
mov
ja
cmp
mov
add
xor
icebp
or
test
mov
xor
ret
lret
mov
cmp
aam
sub
inc
or
jbe
xor
inc
dec
mov
jmp
mov
fistpll
popa
emms
dec
and
dec
mov
pop
mov
lret
scas
inc
mov
insl
lret
jmp
mov
jnp
in
sub
test
call
and
and
pop
and
adc
xchg
sub
jb
inc
insb
lahf
and
dec
cli
push
push
jmp
dec
xchg
cli
mov
or
xor
mov
sahf
cwtl
mov
in
sahf
gs
jae
xchg
ljmp
add
or
gs
jecxz
adc
and
adcl
pop
xorb
loope
or
inc
sbb
mov
jg
mov
and
sbb
sub
out
adc
pusha
loope
fs
mov
mov
xchg
mov
mull
icebp
pop
mov
pusha
xchg
dec
ja
fs
push
cltd
xor
and
outsl
jno
test
imul
repz
ret
xor
jmp
xor
decb
aas
leave
mov
lock
mov
cmp
dec
push
mov
out
pop
mov
pop
fstl
int
lods
xchg
xchg
xchg
push
js
icebp
fcmovnu
sarl
ds
xor
cmc
and
cmpsl
jmp
sbb
mov
sahf
mov
adc
dec
hlt
and
push
or
outsb
add
adc
es
ja
xchg
pop
scas
lea
ss
fcoml
es
fisubl
dec
scas
mov
int3
jp
pop
dec
xchg
and
movsl
es
incl
mov
xchg
sbb
cmp
data16
push
pop
pop
icebp
into
pushf
in
fstl
mov
pop
push
repnz
outsb
fs
hlt
divb
test
cld
sti
cmpsb
cmpsb
iret
clc
in
icebp
add
imul
push
je
test
int
xor
xchg
push
xchg
mov
mov
mov
push
in
jne
pop
imul
xor
mov
sti
shll
aam
in
push
sbb
lea
cwtl
sbb
sar
inc
inc
mov
adc
loopne
les
add
repz
mov
sub
out
push
jle
dec
out
aam
insb
and
jae
mov
jnp
stos
mov
sub
jl
lods
outsb
push
in
cmp
cmpsb
aam
pushf
imul
popf
xchg
cmp
dec
and
add
push
push
outsb
in
aad
mov
enter
cmp
jne
lcall
lret
test
arpl
inc
pusha
outsl
sub
test
mov
movsl
repz
mov
pop
arpl
mov
sbb
pop
or
mov
sti
inc
sub
xorb
gs
or
sahf
xchg
fdiv
jns
call
pop
out
push
xor
cmp
add
cld
xlat
imul
jp
mov
ficoml
sti
ret
mov
aam
push
push
pusha
jg
dec
inc
cmc
add
enter
push
or
jno
mov
push
cmpsb
jge
sbb
lods
adc
sbb
jno
dec
stos
push
pop
movsb
int
jae
mov
aad
movsl
fistps
rorb
lret
mov
add
pop
das
out
mov
lods
clc
inc
adc
icebp
lahf
sub
cmp
pop
in
xlat
inc
jmp
sbb
mov
fistpl
call
pop
mov
loope
sub
cmp
loopne
jmp
test
pop
arpl
mov
movsb
and
xor
incb
xchg
and
pop
fistps
fisttpl
xor
pop
lcall
sub
pusha
or
fsubs
add
jl
rcrl
cmp
dec
adc
push
scas
ljmp
sub
out
subb
andb
pusha
xchg
popf
push
mov
jb
imul
dec
or
or
adc
push
and
push
aam
ja
push
gs
out
xlat
mov
pop
ds
mov
iret
inc
mov
or
push
xchg
pop
mov
or
jle
in
push
mov
js
cmp
mov
pushf
mov
lods
movsl
push
mov
inc
sbbb
xchg
inc
in
pushf
and
jmp
imul
jle
xchg
cmp
dec
movsl
sbb
inc
sbb
cmc
repz
lcall
andl
aam
mov
enter
test
ds
outsb
sbb
cmc
mov
daa
bound
movsl
pop
je
or
xor
fcomp
dec
mov
add
testb
cmpsl
mov
or
and
adc
into
sbb
jae
xchg
sarl
out
movsb
cmp
js
mov
adc
pop
or
and
cmpsb
sbb
jnp
push
addr16
pop
outsl
pop
and
das
sub
in
popa
dec
divl
call
add
test
daa
cld
inc
pop
movsl
lods
mov
push
xor
inc
pop
ja
rcrb
stos
in
mov
adcb
fimuls
in
insb
int3
rcl
stos
in
jmp
lea
cmp
loope
cs
sarb
movsl
sub
cmc
aaa
mov
sbb
js
sub
push
insl
mov
and
je
mov
adc
data16
je
pop
stc
shr
loope
push
jmp
mov
pop
inc
pop
and
loope
dec
jmp
or
jg
cli
dec
jb
rcr
in
lods
push
mov
inc
fimull
int
pop
mov
arpl
xor
rcll
or
into
test
cmp
lds
add
and
shll
xchg
push
inc
in
decl
clc
stc
nop
out
aas
outsb
jae
or
mov
mov
mov
cwtl
popf
and
in
imul
mov
cmp
fisubl
or
rcrb
push
out
mov
xchg
xor
adc
icebp
or
jmp
repz
pop
jmp
sarb
sahf
fisttpll
xor
dec
dec
xor
mov
cmpsb
and
sub
call
shrl
stos
sub
mov
jecxz
scas
pop
fidivl
fldenv
push
mov
aas
pusha
dec
and
dec
test
addr16
lahf
xor
dec
add
fldt
push
dec
jne
add
mov
mov
pushf
ja
sbb
mov
lcall
jl
xor
mulb
pop
mov
adcl
in
dec
arpl
sti
int3
cmp
push
aam
mov
adc
mov
xchg
mov
mov
ds
jmp
jnp
push
scas
sbb
add
pop
test
mov
jb
aam
int
insb
sarb
test
pop
scas
adc
shll
xchg
xor
cmp
inc
lds
scas
or
mull
lcall
xchg
sti
scas
dec
leave
add
ja
add
mov
jle
cmp
push
mov
cmp
push
shll
shll
bound
subb
ret
mov
out
out
cmp
xchg
jns
lret
lods
push
push
out
jae
out
and
push
xor
in
push
fcomi
femms
lahf
filds
or
mov
jl
xchg
pushf
xchg
movl
fisubrl
repz
cmp
jnp
in
push
push
jns
dec
testl
ja
bound
aas
enter
or
sahf
popf
lock
adc
adc
adc
inc
pop
dec
stos
dec
repnz
mov
ds
dec
pop
mov
outsb
test
bound
inc
mov
cwtl
repnz
add
sbb
test
stos
rol
out
pop
in
lods
popf
shlb
cmc
inc
out
aas
mov
add
subl
lds
cltd
xor
adc
mov
sti
popf
mov
pusha
mov
xchg
xor
xor
lret
enter
popf
adc
or
aad
mov
shlb
mov
dec
sub
inc
xchg
mov
aaa
cmp
lcall
and
hlt
fisubrl
pop
shl
aam
jo
inc
push
sub
jb
add
lahf
lret
adcb
rcl
jg
cmpb
lret
mov
add
ljmp
lock
inc
shrb
and
lahf
or
cmp
xor
repnz
or
pop
push
dec
cmpsl
bound
loopne
push
fs
iret
pop
call
icebp
sbb
mov
add
jbe
pop
pusha
mov
stc
cmp
fldcw
or
sub
insb
push
mov
ret
popa
jae
sti
out
xchg
subl
add
inc
shrb
sbb
inc
sbb
jo
ret
fimull
push
loopne
inc
lea
xor
sbb
aad
lret
mov
jmp
jns
and
push
ret
sbb
or
repz
inc
outsl
xchg
mov
int3
add
sarl
leave
cmpsb
jle
cmp
pop
int3
sub
movsl
mov
aam
sbb
lods
push
ja
jg
jl
cmpsb
mov
aas
add
or
sbbl
cld
or
icebp
xchg
call
ss
inc
cmc
inc
sbb
inc
push
xor
sahf
dec
pusha
push
jno
pop
outsb
and
iret
cmp
repnz
xchg
sbb
and
or
xlat
lret
or
push
orl
mov
mov
xchg
cs
cmp
les
scas
icebp
ljmp
or
jg
bound
xor
fdivl
je
xor
fwait
pushf
sbbb
test
mov
mov
mov
dec
scas
rolb
jmp
fstpl
das
hlt
ret
fbstp
loope
pusha
mov
xlat
mov
jb
insl
push
leavew
or
add
push
mov
fdivr
mov
mov
mov
mov
xchg
mov
add
inc
pop
push
mov
xor
and
mov
adc
jnp
xchg
pop
enter
sub
and
inc
pushf
mov
out
adc
adc
subb
inc
out
xlat
fidivrl
jmp
fimuls
nop
cmpsl
mov
xchg
std
jb
icebp
mov
adc
and
aaa
add
idiv
sub
cs
in
sahf
cmp
out
pop
enter
in
mov
into
out
mov
sbb
jo
sub
adc
sbb
xchg
pop
scas
data16
into
xchg
ljmp
jp
add
loop
popf
es
cmp
push
and
lods
inc
cmp
push
jns
idivl
stc
pop
insb
add
inc
out
push
mov
and
outsl
es
cmp
in
pop
ja
inc
push
into
rcl
jmp
lahf
xchg
or
ret
aaa
cmp
lahf
xchg
loopne
das
insl
jp
inc
cmp
repnz
rorl
jnp
sbb
aam
subl
out
cmp
rcll
test
mov
fidivrl
ret
dec
dec
repz
sar
cmpsl
add
pop
and
in
fdiv
es
jl
pop
add
stos
adc
pop
sbb
repnz
pop
outsl
iret
jbe
pop
popf
loope
out
shlb
jmp
mov
cmp
repnz
cmp
paddusb
aam
push
xchg
fnstenv
sahf
inc
out
dec
sub
xchg
add
mov
addr16
fimuls
rcll
out
and
push
jne
cmp
jne
add
add
out
jmp
ljmp
jecxz
sbb
ljmp
adc
hlt
clc
out
imul
jp
jo
xor
or
in
stc
xchg
inc
pop
dec
aam
pop
add
mov
aad
lea
testl
and
in
int
out
and
and
pop
xchg
dec
negl
push
mov
mov
scas
mov
std
sub
fs
loop
test
pusha
sbb
shrl
insb
add
sbb
mov
adc
fldcw
mov
sbb
clc
lcall
in
fiadds
mov
call
pop
outsl
mov
inc
out
movsl
push
xor
xchg
sub
mov
movsl
movsl
insl
sub
jg
xchg
loop
cmpsb
dec
out
mov
lods
add
into
jbe
test
fldcw
cmp
push
aas
pushf
sbb
xchg
mov
xor
gs
or
mov
push
xor
fsubrl
push
mov
movsb
cmp
clc
push
fsubrs
sbb
jbe
jae
push
test
fwait
inc
push
jle
inc
or
lods
cmp
das
pop
sub
jae
ret
sub
pop
xchg
loop
xlat
push
mov
mov
push
lahf
and
lods
bnd
xor
shl
or
loopne
jo
push
adc
lea
or
stc
or
fwait
inc
xor
push
in
popf
and
sub
dec
jne
sub
scas
push
dec
push
jnp
es
jnp
cs
mov
ret
stos
xlat
aas
rcrl
je
in
sbb
mov
cmpsb
out
test
les
inc
push
or
scas
jp
notl
mov
fnstenv
rolb
xor
loopne
adc
and
push
aas
mov
mov
test
divl
outsl
popa
inc
sbb
sbb
lret
repnz
xchg
cmp
ds
push
pop
pop
mov
dec
mov
sub
xchg
fxch
leave
push
and
nop
sub
div
into
mov
inc
mov
outsb
sbb
inc
jmp
repz
rorl
movsl
push
lock
jmp
sbb
xchg
ret
xor
xchg
loope
push
sahf
pop
adc
jmp
test
loope
xchg
imul
movsl
lods
and
scas
ret
mov
shll
cmp
in
mov
cmpsl
mov
int3
jecxz
mov
cmp
or
rol
add
orb
sahf
lahf
fiaddl
and
popa
xlat
rorl
jb
orl
inc
add
pop
das
leave
rcrb
pop
mov
and
fdiv
adc
pop
push
aam
mov
add
or
rorl
dec
jecxz
sub
and
fildl
mov
adc
sub
jmp
loope
mov
sahf
xchg
sub
dec
jmp
cmc
pushf
call
lods
jno
popf
dec
add
popf
pop
inc
or
inc
js
fwait
popf
aas
test
negl
lods
pop
push
or
and
imul
xchg
cs
ret
push
and
jo
addr16
addl
test
pop
insb
sub
loope
filds
les
and
stc
loop
and
sbb
jmp
sub
adc
or
movsb
push
sahf
cltd
sub
xlat
push
call
pop
dec
xor
rorb
into
dec
dec
xchg
pop
scas
lods
bound
sub
and
xchg
loop
scas
bound
int3
les
cs
in
jne
xor
inc
aaa
xchg
jo
cmp
pop
leave
add
in
out
sub
pop
xorl
xor
pop
nop
jns
stos
push
cltd
lods
push
pop
xchg
addb
enter
and
div
push
pusha
or
dec
and
fdivr
out
test
jno
adcb
outsb
pop
ss
jne
shrb
das
test
push
push
push
and
mov
nopl
sub
mov
lret
add
xor
dec
jb
js
gs
lock
push
outsl
outsl
lods
push
mov
cld
and
xchg
inc
arpl
pop
xor
aam
push
or
mov
aas
insl
pop
adc
cmp
mov
mov
in
out
enter
test
xchg
sbb
scas
cmp
sti
sbb
adc
mov
cli
xor
stc
hlt
pop
mov
jmp
stc
ficompl
js
outsl
ficompl
jne
shr
lea
rcr
out
fcoml
sub
nop
lock
imul
cmpsl
push
add
xchg
dec
dec
ret
mov
fdivr
pop
in
mov
stos
or
imul
or
cwtl
insb
movl
sbb
sub
loop
cli
fistps
push
sbb
bound
xor
out
rcr
les
daa
ror
adc
pop
fwait
aad
xchg
test
stos
or
add
insl
inc
popa
pop
cmc
lret
inc
ret
ror
jne
push
cmp
lds
dec
mov
stc
out
mov
pop
sbb
aaa
pop
xlat
loopne
bound
js
lods
inc
cmp
push
lock
fwait
dec
std
inc
jne
cmp
popa
ljmp
or
jge
insl
jge
aaa
subl
mov
sbb
sub
insl
addr16
hlt
into
xor
adc
pop
cmp
add
pop
data16
sub
mov
inc
clc
sbb
lret
int
push
aam
stos
andb
inc
sbb
idiv
fdivrl
mov
fstpl
adc
xchg
xor
in
nop
repz
loopne
dec
mov
testb
xor
je
bound
aas
jne
lcall
add
daa
sahf
mov
imulb
jo
xor
push
cmpsb
and
sti
add
movsb
push
hlt
mov
ja
inc
mov
gs
adc
and
push
in
sbb
addr16
ljmp
aaa
push
xchg
ljmp
mov
inc
popa
cmpsl
es
dec
mov
xchg
jge
push
rcr
inc
pop
push
cmp
add
adc
mov
cmp
push
add
sub
mov
push
push
jnp
mov
bound
push
ja
js
xchg
push
cmp
cmp
sti
mulb
call
xchg
pop
sub
pop
mov
fldcw
mov
cmp
mov
push
je
push
popf
push
ret
ja
daa
lods
adc
pop
fstpt
push
jle
mov
cmpsb
pusha
mov
sbb
test
cmc
jle
aaa
fcmovb
in
ja
jo
and
and
mov
cmpsl
and
jb
xchg
out
sbb
jl
xor
push
push
or
je
cmpsl
cli
js
test
dec
mov
pushw
repz
fwait
cltd
out
stc
in
add
cmp
jp
and
out
in
and
mov
and
xchg
push
or
scas
and
jno
pop
jp
fsin
jbe
lock
shl
loop
mov
aam
rcrb
dec
and
sub
dec
popf
push
divl
sbb
shr
sbb
cltd
xlat
jle
mov
leave
push
inc
fbld
scas
xchg
dec
iret
or
cmp
inc
outsl
sti
xlat
jp
mov
xchg
imul
inc
add
pop
arpl
popf
lret
sbb
inc
popa
ret
xchg
fwait
mov
int3
dec
add
jne
mov
lcall
insb
mov
or
shll
les
pop
xchg
jbe
xchg
aaa
hlt
popa
dec
mov
adc
inc
pop
cmpsl
mov
sbb
mov
lods
daa
loope
cmp
xchg
movsl
cld
dec
cs
jge
stos
das
dec
loopne
and
sub
add
es
fdivrs
mov
jnp
clc
mov
mov
cld
out
or
xor
fistps
push
mov
cmp
inc
cmp
test
out
mov
cmc
nop
mov
mov
test
data16
or
in
out
sub
cmpsb
mov
mov
loop
insl
mov
into
imul
push
mov
push
xchg
ja
push
pop
aaa
cltd
rorb
lret
push
mov
xchg
mov
fimull
popf
mov
or
test
sti
mov
xchg
loope
jecxz
sub
loop
mov
dec
loopne
cmpsl
dec
adc
inc
popf
insb
or
jne
sbb
nop
negb
loop
sub
fnstsw
pop
adc
mov
xor
fucomip
test
push
push
push
cmp
movsb
inc
push
push
out
xor
or
lock
fstpt
rcrb
add
mov
push
pop
cmp
mov
xor
inc
adc
xchg
loop
test
push
scas
das
xlat
ja
or
adc
scas
inc
roll
mov
cmpl
out
or
jnp
inc
push
adc
out
sahf
xchg
xchg
jg
loopne
xor
push
and
pop
fs
or
cmp
lods
hlt
jns
push
ljmp
cld
std
js
fdivs
ljmp
xchg
test
ljmp
sbbl
pop
and
out
jg,pt
pop
imul
push
loope
dec
lret
pop
dec
and
and
xchg
icebp
shr
outsl
jbe
stc
pop
pop
ljmp
ja
sbb
or
jl
ficomps
scas
push
imul
fistpl
test
xor
add
sub
push
pusha
fstl
jmp
or
into
push
popf
faddl
movsl
mov
jmp
std
rolb
jb
call
mov
and
rorl
les
cli
js
fildl
sub
imul
dec
notb
orl
pushf
pop
mov
scas
ret
enter
xchg
sub
test
js
push
inc
push
je
mov
pop
push
je
mov
rcll
push
mov
jo
mov
mov
mov
and
sbb
mov
fstl
enter
mov
std
aam
sar
or
notl
or
push
lret
mov
mov
jne
in
into
into
sub
jo
lahf
cmp
je
push
es
repnz
mov
push
push
push
push
aad
addr16
jno
xchg
dec
ret
mov
in
movsl
push
sub
arpl
addl
call
dec
test
pop
not
in
repnz
jmp
adc
mov
repz
lret
in
cmp
or
sbb
lahf
cltd
xchg
popa
push
jmp
push
mov
shrl
dec
pop
or
ffree
push
mov
sbb
dec
mov
mov
mov
push
mov
dec
movntq
lods
pop
lea
cli
pop
test
mov
mov
dec
mov
adc
out
xor
xlat
cmpsl
shrl
cs
mov
push
cmp
dec
mov
clc
jne
push
cmp
xor
adc
loopne
mov
je
loope
mov
add
cwtl
sahf
das
movq2dq
xor
or
mov
addr16
shlb
lds
test
xor
mov
xchg
sbb
jge
cltd
push
jb
in
ficompl
inc
mov
pushf
and
pop
cli
pushf
push
jns
test
xchg
mov
es
aam
sub
cs
mov
int
xor
sub
jnp
add
mov
xchg
push
ja
adc
sti
icebp
mov
fs
jae
dec
stc
incb
or
pusha
addr16
xchg
pop
sbb
lcall
lods
dec
bts
cmp
shrl
inc
sub
fs
les
sub
add
and
leave
push
cmp
sbb
sbb
push
pop
es
cmp
outsb
dec
add
inc
sbb
adcb
push
fnstenv
std
adc
mov
and
jge
aad
inc
rorl
sbb
lea
mov
out
sub
cmp
pop
into
out
insl
dec
xchg
adc
inc
lret
out
jne
push
pusha
jbe
dec
mov
mov
ficoml
sbb
in
mov
mov
movsl
adc
scas
test
push
in
daa
leave
xchg
push
fs
hlt
aas
cs
mov
sbb
pop
and
inc
movsb
aaa
lret
cmp
rorb
xor
cs
xor
sub
loope
mov
pop
add
or
mov
incb
daa
loope
adc
popf
movsl
mov
inc
call
xchg
dec
jmp
and
or
into
pushf
or
stos
cmp
lock
ret
jns
add
cmp
or
dec
fwait
inc
xlat
mov
aas
sbb
sub
dec
lods
add
sbb
push
lret
mov
aad
cwtl
cs
pop
std
in
loop
psllw
scas
dec
cmp
loope
mov
mov
bound
adc
cld
mov
xchg
add
mov
testb
shrb
jnp
inc
pop
inc
mov
dec
jo
outsb
jae
loop
or
out
leave
cmp
ss
and
xchg
pop
leave
mov
sub
sbb
int
dec
mov
gs
fimuls
cli
mov
jmp
shrb
pop
sub
aaa
movsl
add
sub
or
rcrb
ret
daa
sbb
fstpt
sbb
fcomps
and
or
rcl
jp
test
pop
out
out
sbb
sbb
pop
jecxz
fs
roll
inc
mov
mov
fisubrs
xchg
daa
or
inc
pop
or
and
pop
jp
test
pop
adc
test
in
xor
into
mov
push
xor
icebp
stc
inc
enter
and
sbb
repnz
ret
adcb
lods
mov
adcl
ja
aad
enter
loopne
jp
call
test
jns
pop
and
cmp
cltd
aad
mov
aam
cmp
dec
fbstp
jmp
jge
mov
out
out
in
xchg
out
jno
call
sbb
mov
in
jp
cs
je
xor
sbb
fwait
mov
dec
sahf
cs
popa
ljmp
inc
xchg
push
mov
js
out
rol
imul
stc
std
jo
leave
push
jge
and
in
push
xlat
clc
mov
idivb
in
jecxz
push
clc
mov
pop
push
stos
pop
pop
pusha
push
loop
into
jg
in
jno
add
dec
xchg
lds
fldt
loopne
lock
out
push
lret
cmpsl
dec
ja
loop
movsl
outsl
and
nop
push
dec
fnop
imul
aad
rclb
insb
loopne
lahf
pushf
push
xchg
cmp
sbb
xor
pop
add
es
cld
and
insl
mov
mov
enter
or
lahf
xchg
dec
and
test
xchg
cmp
lods
cmp
xchg
adc
sahf
in
and
into
in
pusha
cmp
dec
pop
inc
pop
sbb
in
shrb
xor
les
xor
popf
insb
leave
jg
into
sub
sub
add
pop
pop
inc
inc
and
fistl
mov
push
sbb
push
negl
lods
loop
jns
xchg
mov
pop
mov
or
pop
jo
dec
mov
gs
shll
mov
lods
add
fiaddl
scas
mov
push
xchg
idivb
add
cwtl
inc
cwtl
pusha
nop
sbb
and
push
inc
mov
push
out
bound
and
cmp
in
mov
adc
mov
push
loopne
mov
loope
jno
mull
dec
mov
lahf
push
loope
data16
and
mov
push
int
test
jns
in
pop
xor
xchg
cltd
push
stc
xchg
hlt
push
cmp
shll
sub
mov
in
sbbl
cmp
pop
shll
in
cmc
aas
push
lret
cmp
test
sarb
or
inc
mov
mov
and
ret
sub
rclb
xor
sub
enter
mov
mov
push
sbb
insl
int
loope
dec
inc
xchg
xchg
jne
call
push
adc
pop
xor
and
or
sbb
cmp
jo
shrb
sub
cmc
stc
push
pop
cwtl
inc
jle
std
loop
stos
lcall
mov
or
fnstsw
hlt
pop
mov
cmp
ljmp
cmp
mov
movsl
pop
out
cs
movb
and
addr16
ret
sbb
fwait
push
hlt
and
adc
jge
mov
mov
lahf
dec
push
mov
and
push
inc
in
mov
sub
xor
jg
xchg
ret
push
sub
sbb
cli
das
dec
push
iret
sub
add
adc
adc
adc
fldl2e
jbe
xchg
push
add
mov
xor
sahf
mov
in
dec
shlb
cld
jnp
jge
orb
jae
ja
std
fwait
aaa
shll
xor
jp
adc
xor
aam
scas
cmp
shr
sub
pop
cltd
mov
ljmp
cmp
jns
sahf
xchg
dec
jb
adc
bound
pop
imul
in
cmpsl
sahf
jnp
dec
repnz
in
sbb
lock
sbb
cld
cld
ja
decl
push
inc
mov
daa
jg
push
mov
dec
aam
or
es
fistpl
iret
jno
push
rorb
icebp
lret
mov
popf
call
jnp
sbb
cmp
das
sti
and
xlat
inc
stos
push
push
xor
mov
jae
sahf
mov
std
jo
jo
jecxz
mov
fisubrl
cltd
xchg
mov
inc
shll
mov
insl
fldenv
mov
mov
pop
bound
push
out
mov
or
cmpl
aas
push
movsl
nop
jo
mov
mov
push
gs
addr16
enter
bswap
jae
mov
lahf
jns
push
jmp
aaa
movb
shr
jae
scas
dec
insl
ja
repz
iret
cmp
push
cwtl
cmp
mov
scas
cmp
pop
lods
mov
xchg
dec
sbb
lret
sub
loop
es
sub
aad
adc
mov
and
lahf
leave
push
outsb
mov
push
fadd
sbb
push
mov
insb
enter
add
mov
sbb
pushf
std
jg
daa
mov
xchg
jb
lret
mov
test
sbb
ja
lahf
sub
rol
xor
rcrb
loopne
lock
iret
adc
nop
movhlps
xchg
nop
xchg
lahf
fimull
jo
fistpl
inc
rcrb
adc
pop
in
pop
icebp
xchg
shll
push
pusha
mov
dec
or
out
repnz
fstps
fstpl
cmpb
push
sbb
ljmp
pop
test
dec
dec
movsb
pop
addb
adc
mov
bound
clc
mov
test
leave
jae
mov
jecxz
adc
aad
js
imul
movsl
dec
lods
cltd
mov
mov
imul
add
out
push
enter
mov
push
jno
sub
int3
jnp
pop
lea
and
jge
pop
push
jmp
mov
loope
cmp
test
cmp
xor
xorl
sbb
lahf
adc
test
rcll
xchg
add
cmpsb
scas
jp
clc
xchg
mov
dec
rcll
jb
mov
aam
repnz
inc
xor
push
pop
dec
and
cmp
mov
push
pop
icebp
add
sub
out
lret
push
mov
loope
cli
jbe
pop
fnstcw
jl
cmp
cld
adc
dec
jle
mov
mov
jno
adc
fisttpl
sub
mov
mov
sub
jmp
movsb
xchg
daa
mov
adc
sbb
aaa
and
daa
inc
test
call
stc
imul
push
pop
test
mov
xor
mov
fs
in
call
mov
loop
jge
xor
adc
dec
jb
imul
push
lock
cmp
push
push
scas
fucom
bound
stos
inc
xchg
cmp
mov
xchg
jg
cmp
roll
jns
push
ret
sub
in
js
daa
std
pusha
push
mov
push
or
jecxz
leave
cmp
scas
and
lcall
inc
push
pop
mov
add
cmp
loopne
cmpsb
scas
jno
sbb
out
mov
fwait
je
sahf
push
lock
cmpsb
test
jecxz
scas
outsb
mov
cmc
jge
fadd
mov
test
scas
pop
cmp
stos
mov
push
out
jecxz
sbb
int
xorb
fidivrl
iret
mov
jmp
movntq
add
out
fs
jno
xchg
inc
ficoml
lods
ljmp
fsubr
arpl
aad
add
test
into
test
or
jecxz
sub
stc
js
jl
dec
daa
clc
jae
lret
push
addr16
and
and
inc
mov
std
adc
iret
adc
ljmp
enter
in
into
movsb
mov
aaa
je
aaa
scas
push
lock
jne
inc
insb
pop
mov
xlat
cs
adc
push
sub
pop
sbbb
cmp
xor
jbe
arpl
inc
and
sbb
ja
idivl
pop
xchg
jb
sbb
popa
daa
xchg
scas
xchg
jecxz
movsl
sub
pop
lret
jo
test
lds
xor
push
cmp
sarl
jnp
pop
int3
movsl
idiv
pop
xor
push
pop
fwait
add
loop
in
rorl
sahf
stos
sbb
aaa
dec
aad
push
ds
fs
dec
leave
add
adc
inc
enter
lds
test
add
mov
es
fstpt
xchg
cwtl
jno
jle
and
movl
jno
fwait
in
push
adc
add
cld
lret
jle
addr16
xchg
fcomip
adcl
mov
fsubrs
fstps
sbb
aad
jmp
push
push
cmpsb
xchg
cmp
sub
mov
mov
push
inc
jbe
pop
inc
xchg
jb
dec
jno
arpl
sub
int3
lcall
arpl
and
sbb
bound
cmc
addr16
negl
add
sbb
addr16
lods
insb
roll
mov
rsqrtps
ds
mov
jns
and
xor
in
cld
mov
dec
imul
xor
sbb
lds
mov
fdivrs
orl
mov
adc
adcl
pushw
sbb
ficoms
scas
fadds
lahf
sti
pop
sbb
in
fdivrp
sub
int3
xchg
adc
xor
lahf
cmp
das
loope
xor
add
shll
cmc
add
stc
xchg
lods
and
push
dec
sbb
jae
aad
xor
movsb
aam
mov
sub
fs
outsl
aas
jo
andl
subb
daa
cwtl
jb
mul
push
inc
mov
fdivr
jecxz
jns
xor
push
je
sub
cmp
mov
cmpsb
add
aam
cwtl
push
push
sahf
movsl
in
cld
fwait
insb
ds
movsb
mov
mov
or
lds
ficoms
std
jns
std
cmpsb
fisubl
inc
pop
mov
int
jg
aaa
push
jmp
int
or
dec
mov
dec
out
adc
push
int3
inc
add
out
mov
sbb
in
cmp
mov
jnp
je
cwtl
jbe
cmp
xor
sub
insl
stos
dec
pop
imul
push
adc
test
adc
int
leave
shrl
or
inc
movsl
popa
aas
dec
fs
sti
jbe
addr16
leave
sbb
outsl
outsl
jns
jge
adcl
pop
insl
js
sahf
mov
popf
ficompl
sub
in
stc
or
inc
or
mov
sbb
xor
xchg
ja
les
add
mov
or
repz
dec
data16
in
ret
jae
out
icebp
enter
ss
out
jmp
xchg
lret
jmp
aam
dec
jns
mov
daa
repz
cli
loope
frstor
push
loope
inc
xor
jae
pop
push
pusha
loope
mov
mov
fldenv
and
lds
clc
adc
test
push
pop
mov
sbb
adc
shlb
mov
mov
dec
repz
pop
sub
and
push
inc
xor
aaa
imul
rorb
xor
pusha
fnsave
in
dec
jae
scas
jl
xor
out
scas
xor
add
lds
dec
jo
out
and
cmp
pushf
pop
negb
xchg
pop
sbb
mov
jg
cmp
pushf
insb
lock
je
dec
jns
add
mov
lods
nop
cmpl
mov
das
add
jle
popa
int
add
inc
stos
push
jbe
sbb
cmpb
mov
or
in
jmp
ljmp
in
mov
lcall
aas
stc
andb
mov
add
add
or
ja
push
inc
jns
popf
cmp
jmp
dec
in
jne
xchg
pusha
imul
data16
add
sub
rcll
mov
mov
lret
mov
lods
inc
cmpsl
cmp
add
add
jmp
hlt
clc
push
scas
std
sbb
popa
xchg
dec
stos
pop
dec
arpl
push
pushf
das
xchg
and
out
adcb
sti
adc
inc
push
inc
sbb
adc
loop
jb
sub
bound
push
xchg
xor
iret
arpl
ss
sar
fisubrs
and
sbb
loop
outsl
stos
into
sahf
jge
or
lods
pop
push
and
sbb
mov
repz
mov
or
mov
xchg
xchg
sti
mov
jne
mov
sbb
fwait
dec
stos
movsl
and
rclb
aad
test
std
push
ror
dec
lahf
xchg
cmpsl
leave
mov
or
or
push
jae
stc
pusha
push
mov
cmp
out
aaa
and
mov
mov
fldt
bound
testb
fmulp
dec
and
pusha
push
movb
push
dec
xchg
mov
addr16
arpl
cmpsb
dec
adc
dec
push
inc
cmp
add
mov
push
aas
icebp
es
data16
xchg
not
fisttpl
inc
push
stos
mov
int3
les
add
jl
enter
std
jl
out
jnp
shll
rolb
mov
iret
int3
push
icebp
pop
sub
out
adc
jno
mov
mov
add
rcr
jg
bound
pop
imull
fwait
push
imul
cltd
out
insl
es
xor
push
rcrb
lea
popa
jo
bound
inc
test
sbb
bswap
ret
je
std
sbb
cmp
fdivl
movsb
mov
int
hlt
dec
mov
mov
mov
jl
hlt
stc
cmp
pop
xor
loop
divl
ja
or
cmp
add
bsf
sub
dec
stos
and
cwtl
sub
mov
push
scas
and
cltd
outsb
subl
xor
popf
outsb
cmovns
test
lcall
mov
jne
movsb
inc
mov
test
dec
sbb
scas
inc
xor
lahf
lcall
sbb
dec
xchg
sbb
pop
clc
inc
lcall
or
testb
sti
mov
ret
mov
add
jb
icebp
aad
call
pop
scas
daa
movsb
pushf
mov
sbb
inc
leave
mov
jb
push
cltd
mov
adc
js
push
push
repz
sbb
mov
and
or
aad
in
cmp
mov
adc
lret
sub
jmp
push
hlt
jmp
into
mov
sbb
pop
rclb
or
cs
test
add
bound
pop
repnz
add
inc
out
jp
add
out
ret
mov
pop
dec
jg
adc
pop
cmp
push
lahf
in
jo
test
push
xchg
testl
test
fs
cmp
fmull
jns
add
mov
xor
xor
cmp
aad
add
push
or
daa
mov
outsb
daa
mov
mov
or
dec
inc
icebp
ror
jae
xor
or
add
sbb
test
sbb
inc
cmp
stos
ret
push
fistps
mov
and
push
sbb
mov
mov
xchg
aas
or
pop
fnstsw
lcall
sub
adcb
iret
fstpl
mov
into
nop
lcall
pusha
dec
sub
jl
ljmp
xchg
stos
int
xchg
daa
push
pop
test
js
dec
mov
jecxz
pushw
pop
fwait
push
stos
dec
inc
jge
dec
mov
lods
mov
arpl
out
sarl
inc
in
repz
mov
in
gs
dec
ret
xlat
js
dec
out
sub
stc
data16
scas
dec
sti
ss
test
in
xchg
movsb
out
and
mov
mov
lods
pop
je
dec
adc
sbbb
in
push
cmp
mov
and
arpl
or
jnp
jmp
cmp
cmp
sbb
stos
rolb
movsl
xchg
test
sti
sbb
pop
lret
faddl
push
add
mov
popf
jg
not
xchg
or
loop
jl
jle
xchg
ljmp
andl
shll
mov
adc
adc
inc
mov
icebp
pop
aam
mov
mov
push
inc
cmp
lret
test
cmp
inc
ss
jno
and
and
jbe
gs
push
out
push
pop
sub
mov
bound
mov
hlt
out
aad
cmp
xor
xor
adc
cmc
xor
jae
rclb
adc
or
or
div
cmp
mov
gs
je
push
sti
jge
roll
sbb
iret
or
add
lock
cmp
jno
ljmp
in
in
insb
addr16
popa
stos
insb
lcall
out
mov
mov
dec
sbb
mov
leave
push
add
test
mov
xchg
subl
ret
cmp
cmp
and
inc
fld
jno
and
scas
or
dec
dec
ss
xor
pop
or
pop
insl
sub
mov
je
pusha
mov
pop
jmp
daa
testb
mov
mov
sub
add
popf
or
xchg
in
stos
imul
scas
into
jae
shll
mov
pop
pop
xchg
mov
cmc
aad
mov
jbe
addl
add
lahf
fistpl
cltd
mov
jl
push
push
push
sti
adc
or
icebp
lcall
sbb
testb
mov
mov
aas
test
int3
cmp
pop
popf
aaa
sub
cmp
cmc
popa
cmp
andl
xchg
add
push
inc
sbb
addr16
cld
clc
dec
dec
sub
push
push
pop
shr
sbb
sub
rcrb
inc
movsl
mov
mov
xor
sub
adc
push
in
mov
push
and
popf
xlat
shl
scas
inc
mov
lea
loopne
mov
cli
dec
stc
inc
and
into
jb
out
xor
xchg
ja
test
das
in
mov
not
mov
lret
jle
bnd
mov
push
jmp
mov
dec
fimuls
leave
dec
daa
loopne
push
icebp
mov
cmc
mov
out
xchg
hlt
fwait
xchg
mov
xchg
insb
and
es
mov
cmpsb
mov
idivb
pop
fldl
mov
popa
ja
arpl
xor
lds
sbb
imul
xorl
pop
icebp
inc
mov
add
cmp
testb
xlat
lods
mov
xor
mov
lods
push
xchg
xchg
mov
popf
lret
pop
rcr
ret
sahf
xchg
and
out
mov
fxch
pop
push
mov
nop
lcall
or
pop
out
jo,pn
add
je
pop
ljmp
in
mov
out
sarl
push
je
ja
test
mov
add
adc
pop
aad
test
sub
add
pop
enter
cmpl
xchg
sbb
imul
in
xchg
sbb
rclb
cli
popf
push
dec
movsl
jle
out
notb
adcb
lret
or
popa
sub
jecxz
pop
out
aaa
xchg
ss
mov
lcall
mov
iret
fdivrs
popa
sub
jge
ja
xlat
mov
movsl
push
cmp
repz
mov
sbb
adc
pop
jbe
fnsave
cmp
outsb
fwait
jg
push
mov
fld
xor
insl
movsb
cmc
mov
cmp
jle
cmc
adc
imul
cmp
dec
das
leave
aaa
mov
mov
xor
insb
mov
rolb
or
iret
cld
bound
mov
mov
mull
bound
das
test
inc
dec
mov
rcrl
xor
clc
cmp
cmp
addb
daa
out
xchg
lock
iret
cmpsb
test
into
in
add
stc
loopne
pop
jb
dec
shrb
es
sbb
std
pop
jmp
inc
mov
push
es
cs
orl
and
inc
aaa
mov
mov
pop
jno
cld
cmp
mov
mov
push
pop
jmp
jl
add
pop
in
sbb
mov
aad
jnp
pop
sbb
ret
aad
mov
ljmp
addr16
sub
xor
dec
xor
loope
fimull
daa
aas
incl
dec
sbb
ss
jnp
and
jge
xchg
sub
sbb
mov
mov
push
mov
rorb
xor
jle
stos
dec
jno
icebp
mov
dec
sub
imul
sbb
imul
lret
test
andb
fnstcw
pop
and
push
lea
xchg
jnp
pop
xchg
mov
ljmp
mov
ret
in
jb
or
hlt
pop
push
jl
idivl
loopne
repnz
push
xor
addr16
hlt
dec
fstl
jmp
insb
sub
or
dec
mov
scas
outsb
xchg
cmp
lods
push
and
lds
push
xchg
xchg
insl
aad
pusha
mov
testb
cmc
mov
mov
lods
mov
aad
push
out
insb
add
test
bound
or
leave
jno
dec
enter
gs
add
shr
clc
mov
out
in
nop
jae
cmp
sti
mov
rcl
push
movsb
cmp
sub
lods
cmp
sub
lods
in
sub
xor
test
mov
fucomip
jmp
rorb
scas
dec
mov
call
mov
repz
dec
popf
mov
inc
adc
cwtl
or
push
or
inc
popa
xchg
mov
scas
dec
mov
inc
popa
pop
sbb
insl
or
jae
push
mov
xchg
pop
push
ds
mov
rolb
and
lods
adc
adc
fcmovbe
cltd
inc
fistps
sbbl
jge
cli
repnz
dec
rorl
jb
dec
and
into
loop
mov
push
cs
jl
nop
jp
and
aaa
test
out
push
daa
push
popf
movsl
fs
dec
mov
jg
in
dec
lods
jb
sar
enter
push
into
insl
jl
and
gs
stos
mov
sbb
inc
aas
mov
fisubrl
dec
pop
cmp
push
cmpsb
mov
xchg
cmp
icebp
imul
jb
mov
pop
push
pop
imul
stos
mov
inc
push
lret
rcll
pushf
mov
push
mov
cmp
inc
jp
xchg
mov
sbb
lds
add
movsb
lods
cmp
push
and
jnp
insl
mov
or
nop
push
lods
cmp
dec
jae
mov
aas
ret
inc
dec
pop
aam
push
dec
hlt
in
fcmovnbe
movl
lahf
and
jl
mov
push
mov
scas
sbb
dec
es
jno
pop
jmp
mov
repz
test
xchg
dec
xor
mov
adc
sbb
mov
aas
fistpll
bnd
pop
cmpsl
sbb
mov
sbb
dec
dec
and
dec
dec
imul
mov
in
mov
push
andl
dec
addr16
lcall
mov
pop
adc
shll
pop
jnp
cmp
call
jns
pop
xor
inc
or
dec
fisttps
into
jle
add
jmp
sbb
lods
cmp
sti
outsb
sub
adc
lcall
jmp
add
loop
cli
lcall
jnp
mov
and
or
pop
mov
dec
scas
mov
out
fisubrs
lret
aad
movaps
in
dec
shlb
imul
lahf
jae
ja
or
pop
leave
hlt
mov
mov
shrb
xacquire
cmpsb
mov
cmpsb
mov
push
jns
fidivl
loope
daa
mov
shrl
push
sarl
into
repz
mov
sub
daa
loop
cmc
jae
je
fcompl
jno
popf
in
ja
shlb
push
and
jae
clc
push
pop
cs
jae
in
les
pop
mov
cmp
cltd
std
dec
in
cli
testb
loope
push
cmp
dec
mov
jns
sbbl
test
inc
and
ljmp
std
mov
pop
adc
xor
sub
pop
pop
mov
aaa
or
sbb
movsl
cmc
lods
adc
or
data16
adcb
push
scas
adc
jo
sbb
adc
dec
xlat
inc
pop
call
flds
nop
push
push
lods
stc
jmp
push
ja
xor
xor
pusha
in
sbb
out
cltd
nop
mov
lock
inc
leave
and
shr
outsb
push
scas
daa
ret
repnz
and
jl
pop
mov
add
pop
mov
or
add
lret
int3
sbb
pop
jp
jp
aam
jbe
bound
jbe
pop
cltd
insb
or
fucomi
mov
sub
or
push
dec
pop
cmpl
mov
xchg
test
xor
gs
mov
imul
xchg
lods
sub
inc
cltd
sbb
std
lcall
loop
xlat
out
shrb
xlat
rcll
stos
pop
insl
aas
sub
rorl
in
inc
jae
push
mov
sbb
adc
cli
std
scas
imul
call
daa
fwait
loope
orl
push
sbb
int3
sub
jle
gs
pop
ret
hlt
stos
mov
sub
dec
mov
inc
xchg
mov
push
sub
push
push
fs
aaa
fildll
cmp
inc
das
pop
icebp
inc
ret
imul
subb
js
daa
dec
insb
leave
aad
movsl
inc
mov
das
int
cwtl
enter
scas
popa
pop
loope
jnp
dec
arpl
jg
mov
xor
stos
call
int
jno
stc
shrb
cmp
push
jno
out
loopne
fs
fucomp
in
pusha
mov
xchg
enter
cmp
xor
stos
mov
pop
push
mov
inc
inc
rcll
mov
sbbl
xchg
mov
adc
aam
cmp
add
sbb
jge
dec
xchg
sti
cli
xor
lods
pop
lahf
test
data16
inc
rclb
push
int
fiaddl
dec
movsb
popa
dec
mov
xor
arpl
aas
push
and
pusha
int
int
frstor
fisubs
sbb
adc
cmp
scas
int3
mov
dec
rclb
add
rclb
dec
sub
movsl
addr16
lret
jnp
mov
jne
xor
repz
sub
or
sahf
insl
cmp
addr16
cld
fadd
fisubrl
pusha
xor
fnsetpm(287
call
into
jmp
mov
pop
mov
jne
add
pusha
sub
jb
aas
nop
iret
cmp
dec
flds
ret
jecxz
scas
add
outsl
stos
cmp
pop
push
sub
push
and
unpckhps
sub
inc
xlat
xchg
cmp
enter
sbb
out
jecxz
mov
notb
cmp
bound
jb
ret
stos
ss
mov
dec
cld
ja
out
push
inc
sub
sbb
das
std
pop
je
mov
cltd
add
roll
neg
inc
std
aad
jecxz
pop
push
std
cmp
sbb
lcall
inc
mov
lds
mov
loope
lcall
scas
pop
xor
dec
sub
rorb
mov
adc
lea
or
aad
or
mov
push
out
mov
fwait
cli
mov
jl
shll
js
mov
mov
mov
or
cmc
nop
cs
movsb
mov
and
sahf
loop
push
push
and
loopne
addr16
push
or
les
push
mov
jb
push
cmp
int
or
add
xchg
aas
aas
divb
push
push
scas
adc
je
movsl
fsubrp
adc
mov
xchg
jl
stos
sahf
push
push
outsb
andb
jns
mov
xor
sub
xor
jae
adc
dec
adc
mov
ja
add
pusha
inc
lds
pop
aaa
adc
pusha
dec
testb
or
adc
jae
or
push
mov
xchg
add
jmp
test
sub
cmp
mov
orb
add
pop
and
sahf
xchg
lea
push
xor
popf
and
test
test
xchg
cmp
ljmp
dec
lcall
call
popa
jns
rcr
cmpsb
push
and
xor
repnz
call
mov
incb
lods
sbb
pop
jnp
mov
mov
mov
jbe
aam
xchg
sbb
xlat
imul
cmpsl
xchg
daa
mov
or
and
or
cltd
scas
sbb
repz
adc
fdivr
mov
add
push
inc
lods
dec
lahf
cmp
add
mov
movsl
test
cmpsl
bound
xor
scas
cld
js
popa
sbbb
icebp
movsb
mov
xchg
pushf
notb
push
fcmovnb
test
sahf
xchg
cld
ljmp
xchg
je
mov
push
stos
lret
in
stc
adc
stc
setp
out
subb
or
pop
jge
aad
in
imul
mov
inc
je
mov
fildl
cli
jbe
sbb
xor
push
movsl
test
mov
jbe
orl
xchg
mov
fldl
enter
cmp
popa
mov
or
jg
aaa
cmp
or
sub
jns
lcall
jo
sbb
pop
jno
popa
inc
xchg
xchg
mov
xchg
xor
int
lcall
lahf
shlb
rcl
pop
idivl
mov
push
inc
sarb
mov
pop
fsub
aam
iret
xchg
mov
jp
xor
lcall
nop
jg
add
testb
pop
sbb
and
insl
xchg
sub
sub
test
les
pop
mov
sti
test
test
stc
scas
call
dec
negb
rcrl
cmp
repz
fldcw
outsl
mov
ljmp
mov
or
outsl
mov
ror
cmp
jmp
pop
lock
shll
test
inc
jp
jb
lds
test
xor
jl
popf
ljmp
mov
and
stos
xor
inc
movsb
in
rorl
in
add
addr16
sbb
aaa
aam
lods
outsb
mov
je
xchg
xchg
mov
cs
push
fmull
shrl
jecxz
push
out
sbb
xchg
loope
jge
or
xlat
xchg
mov
fstpl
movsl
mov
outsl
mov
lcall
cmp
data16
ret
mov
in
adc
xchg
xchg
test
lahf
push
mov
adc
pop
mov
push
push
fbld
out
pop
mov
fcompl
or
bound
adc
outsl
subb
mov
fstpl
push
add
push
xor
loop
pop
xor
loopne
jl
mov
jnp
cmp
or
mov
mov
lods
in
stos
cs
scas
xchg
das
push
inc
mov
push
push
sub
push
test
adc
scas
ss
out
rolb
fsubrl
jle
jns
jge
push
adc
push
out
je
mov
movsb
lock
cmp
jmp
sbb
loop
add
sbb
mov
cmpsl
sub
sbb
dec
inc
in
lea
fs
jne
flds
xchg
jmp
mov
pop
inc
std
lret
fimull
sub
push
aaa
adcb
xchg
in
lock
push
pop
add
or
daa
sub
dec
jbe
arpl
adc
adc
out
bnd
js
daa
or
jne
sbb
stos
out
out
or
cli
scas
mov
bound
das
in
aam
ds
pop
aad
int3
aam
add
sbb
movsb
jge
inc
jg
fimull
dec
mov
dec
fmulp
mov
inc
sbb
fmul
xor
bound
add
sarl
sbb
cmp
popa
mov
mov
sti
cmp
inc
insl
subb
or
xchg
rorl
sbbl
push
adc
les
rorl
and
cltd
lods
push
lock
ds
mov
icebp
repnz
xchg
out
dec
mov
cld
adc
ds
mov
sub
mov
dec
xor
dec
out
dec
mov
xchg
mov
xchg
mov
loop
sbb
cmc
jb
jmp
sbb
fwait
mov
inc
and
aad
sbb
and
aad
out
sub
jns
dec
xchg
lods
lods
lds
mov
movsl
nop
rol
popa
test
cli
sub
xchg
push
mov
add
push
insl
and
xor
sub
and
insl
sahf
sub
cmpl
jmp
in
in
test
inc
mov
or
rcl
add
out
pop
xchg
shl
xchg
int3
inc
loop
mov
cmpsl
lds
loope
sub
scas
stc
dec
jne
lock
aad
add
sti
hlt
lretw
fldenv
lret
and
cltd
xchg
ret
xchg
pop
icebp
das
inc
mov
mov
xchg
jb
add
inc
fldenv
hlt
cmp
sarl
jg
outsl
jne
mov
or
add
xchg
pusha
test
pushf
xchg
je
sbb
popl
dec
aad
xor
dec
mov
je
aas
mov
outsl
addb
xchg
test
sub
enter
cli
pusha
inc
jmp
stc
adc
stos
push
inc
xchg
lret
mov
orl
jp
jmp
movsl
push
movsl
jnp
cmpsb
outsb
or
outsl
inc
inc
dec
stos
push
and
push
mov
push
pushf
fs
fmuls
xchg
cmc
pop
xchg
xchg
movsl
inc
or
xchg
xor
mov
pushf
jb
sbb
aas
mov
hlt
in
or
mov
in
inc
xorb
dec
or
fwait
xchg
xchg
and
add
mov
dec
ja
dec
xor
sbb
pushf
inc
jne
addb
add
pop
cmpl
lods
ds
rcrl
aam
ljmp
andb
adc
testl
cmc
inc
adc
fnstsw
mov
in
movsb
int3
adc
ljmp
aad
int
and
outsb
dec
xchg
lret
mov
shlb
scas
xlat
add
push
or
add
mov
jecxz
nop
mov
ret
dec
mov
xchg
mov
adc
mov
push
dec
inc
lret
push
xorps
loopne
adc
fstpt
shll
sub
xchg
mov
aas
mov
sub
rcrb
leave
push
jge
out
sub
iret
xchg
adc
mov
clc
xchg
sub
add
faddl
pop
and
dec
jp
sbbb
or
daa
fldcw
mov
lret
mov
cltd
and
outsl
fs
add
ret
sbb
mov
je
dec
pop
int3
inc
jae
es
cmc
fsubrs
adc
ljmp
add
inc
sub
pop
mov
adc
iret
das
push
adc
lock
mov
popf
cmp
jl
loope
add
and
add
mov
les
and
push
ljmp
fcomi
xor
fnstenv
inc
jecxz
pop
pop
mov
jae
mov
xor
mov
mull
pop
enter
jae
outsl
inc
mov
pop
inc
cmpsl
lcall
sbb
push
add
hlt
mov
and
sub
jg
xor
in
daa
and
inc
push
jnp
repz
sbb
inc
mov
movsb
dec
inc
xor
test
inc
das
test
pusha
sahf
cmp
loopne
cs
ljmp
sahf
xchg
lods
notb
pop
imul
dec
cmp
inc
xor
rol
sub
or
cmpsb
mov
nop
scas
js
jno
lock
push
fdivr
cwtl
aam
aad
dec
stos
mov
loopne
test
xchg
and
call
and
repz
xchg
dec
jns
sti
imul
loop
repz
das
add
orl
cmp
jnp
or
fwait
dec
cmc
pop
mov
clc
cli
test
and
xchg
in
in
fmull
andl
pop
outsb
sub
add
movsb
imul
daa
popa
pop
stos
into
and
int
ficompl
pop
sahf
push
in
repnz
pop
scas
xor
xor
dec
xchg
mov
add
pop
add
mov
push
dec
movlps
push
mov
fs
xchg
lods
adc
xor
pusha
cmp
mov
in
cmp
pusha
jl
jecxz
pop
jbe
mov
and
fbld
sbb
hlt
pusha
add
mov
out
adc
inc
cwtl
pop
push
mov
imul
mov
pop
mov
dec
pusha
cmp
xchg
cmp
mov
repz
jp
movsb
lods
pop
jcxz
inc
int
push
push
es
jmp
lcall
loopne
ds
bound
data16
xchg
push
call
jg
push
popf
cwtl
ljmp
clc
test
sti
push
dec
mov
mov
fadd
pop
cld
add
sub
or
mov
repz
fsts
jb
add
or
push
lea
pop
pusha
popa
adc
fldt
mov
stc
mov
enter
xchg
xchg
test
imul
dec
lods
fldl
xchg
add
sbb
lret
repnz
lods
pop
rcrb
imul
aaa
and
and
pop
pushf
jno
sbb
in
cmpsl
xchg
movsl
gs
cld
iret
or
lods
sbb
jmp
or
sub
jae
push
cmc
adc
outsb
mov
pusha
orb
mov
test
cmpsl
sti
jecxz
or
mov
xchg
jo
sub
mov
cltd
shlb
popa
iret
push
push
rorl
pop
mov
sbb
inc
imul
mov
jle
je
and
fxch
js
shll
mov
fwait
xor
test
cmp
add
mov
je
xor
inc
shrb
in
testb
push
push
aad
sbbb
dec
dec
int
push
je
insl
mov
xchg
add
into
push
scas
out
hlt
jecxz
jne
test
testb
mov
cmp
mov
mov
nopl
sub
add
xchg
push
fcmovb
push
popa
fsubrs
jg
cltd
dec
je
jns
lea
clc
rol
xchg
jecxz
jno
into
or
sub
sahf
push
xchg
andl
xor
and
xchg
xorb
out
fidivrl
lods
cmp
inc
idivb
mov
int
jnp
aad
pop
adcl
xchg
inc
dec
inc
jno
nop
movb
leave
push
mov
xchg
dec
xchg
jnp
mov
xor
stos
das
call
test
adc
test
lret
pcmpeqw
sub
mov
je
movsb
xchg
ror
add
mov
test
add
mov
cmp
cmc
data16
sub
loop
pop
aam
cmp
and
xor
adc
stos
cmp
adc
mov
aas
pop
add
xchg
lret
xlat
pop
push
adc
shl
loopne
jecxz
and
jno
dec
jb
subl
jle
sbb
jae
sub
push
sahf
cmpl
sbb
lds
ljmp
dec
xor
pushf
loop
mov
ja
enter
int
push
jo
sub
jecxz
test
sub
loopne
lock
mov
jl
adc
adc
roll
jp
cmp
rcrl
pop
int
inc
add
cmc
sub
dec
imul
adc
pop
outsl
idivl
mov
imul
mov
cwtl
cmpsb
scas
adc
int3
sub
out
push
inc
iret
xchg
es
add
cmpsb
sub
sbb
aas
push
dec
jb
dec
pop
mov
daa
fimull
push
mov
popf
mov
subb
xchg
adc
insb
mov
mov
dec
adc
mov
jge
shl
adc
adc
inc
inc
out
outsb
lods
loop
ja
pop
rcll
dec
fwait
mov
mov
xor
dec
mov
sbb
mov
or
std
repnz
fsubrs
xchg
xor
out
imull
aaa
push
into
pusha
mov
lret
out
jecxz
test
in
sbb
mov
dec
aad
cmp
ss
pop
sub
xchg
std
add
push
add
int3
movsl
testb
dec
and
mov
pusha
orb
add
jg
mov
sub
adc
cwtl
xlat
out
js
aaa
scas
jle
lods
test
push
push
cltd
xor
pop
push
push
or
lds
call
cmove
push
pop
inc
xchg
cmpsb
pop
cli
push
testb
fs
fists
popf
fwait
ret
ja
mov
les
jne
addr16
inc
mov
aaa
xchg
adc
dec
les
cwtl
pushf
add
sarb
in
lods
insl
adc
push
cld
jmp
add
imul
loope
push
mov
lods
cmpsl
dec
and
push
sbb
lds
cli
xchg
into
xchg
mov
sbb
mov
mov
adc
adc
sub
xchg
in
sub
adc
and
and
jge
dec
xor
dec
push
movsb
ds
cmp
push
and
or
nop
sahf
xorb
lcall
repz
aam
sub
pop
xor
fildl
xorl
cmp
pusha
xor
jae
add
pop
fcmovnbe
sbbb
mov
dec
jnp
xchg
data16
mov
xchg
mov
loope
mov
add
cmpsb
xor
mov
push
cmp
cmc
dec
mov
pop
xlat
push
pushw
push
mov
inc
xchg
xlat
int3
push
xchg
repz
adc
and
out
xchg
and
adc
dec
ljmp
mov
mov
push
popl
call
daa
pop
out
inc
movsl
jl
inc
sar
mov
daa
jge
in
insl
add
jmp
popf
add
scas
lret
sbb
jge
jbe
cli
mov
pop
mov
rcr
cmp
or
fdivrl
sbb
clc
mov
jmp
or
inc
add
sahf
cwtl
pop
adc
dec
xchg
and
mov
adc
popf
movsl
int3
adc
bound
leave
xor
add
mov
push
jnp
sbb
jle
push
dec
in
pushf
ss
xor
scas
orl
lods
xchg
xor
inc
push
outsl
push
imul
iret
pop
inc
sbb
std
mov
xor
mov
mov
lahf
sbb
cmp
cmp
ret
cmp
lods
pop
and
sti
data16
add
push
sub
out
aaa
jne
xchg
mov
jae
das
jns
mov
aaa
mov
mov
pop
out
xor
add
add
jne
cmpsb
bound
adcl
test
sarb
sbb
mov
insb
mov
scas
push
dec
push
push
mov
mov
out
xchg
jae
pop
loope
cmc
out
jo
scas
mov
adc
lea
rcl
popa
mov
popa
add
imull
cmp
xchg
mov
push
pop
nop
lret
push
mov
dec
xchg
repnz
add
sub
pop
adc
cs
cmpsl
js
mov
cli
in
adc
pop
pop
cmpsl
test
fwait
in
and
dec
pusha
push
cmp
xchg
jne
lds
addps
enter
sbb
cmpsl
jp
outsb
pop
cmp
ljmp
xchg
lds
or
sub
mov
inc
push
jbe
or
dec
adc
js
adc
mov
pop
nop
mov
mov
xchg
jbe
test
popf
mov
cmp
push
test
enter
push
push
sti
ret
enter
push
push
push
cld
mov
mov
test
aam
shlb
sahf
popf
out
jns
stos
cmp
add
xor
lcall
dec
faddl
daa
loopne
movsl
push
xlat
sub
or
sub
rcrb
pop
lods
movsb
inc
out
dec
fsts
fcmove
popf
jnp
mov
test
fldt
test
pop
lock
jl
xor
jecxz
cwtl
fbstp
nop
mul
scas
call
cmc
xchg
loopne
clc
es
mov
sub
adc
xor
mov
scas
or
hlt
cmp
fiaddl
push
jl
dec
andl
jmp
mov
lods
sub
xor
and
mov
xchg
mov
std
mov
mov
dec
mov
cmp
jb
sbb
mov
cmc
adc
faddl
jmp
jmp
div
icebp
cld
jns
add
adc
sti
xchg
gs
push
adcl
pop
rcll
add
push
cmp
cmp
fs
dec
ss
loopne
or
stos
push
cmp
std
shll
push
mov
cld
pop
dec
jbe
xor
out
ret
add
dec
pushf
add
sbb
jp
jmp
negb
xchg
jmp
jle
sub
ret
dec
out
fisttpl
ja
mov
push
sar
jg
cltd
ficoms
xor
mov
adc
push
pop
fwait
adc
gs
ror
outsb
test
in
xchg
mov
repnz
cli
mov
cwtl
mov
push
pop
rcl
mov
push
sahf
and
out
xor
add
aaa
jne
cmpl
popa
int3
jne
xor
nop
jns
push
repz
insb
sarl
dec
inc
scas
mov
pop
dec
cmp
xchg
and
xor
icebp
inc
and
into
mov
sub
or
or
fisubrs
orb
and
outsb
inc
mov
push
out
and
or
loope
lock
sbb
js
lcall
add
lretw
xor
mov
mov
ljmp
push
add
push
or
cmp
into
cmp
les
out
pop
sbb
scas
ror
pushf
xor
lret
pop
jb
mov
idiv
mov
dec
std
gs
jmp
arpl
cltd
imul
xlat
and
mov
dec
cmp
fnsave
inc
dec
insb
jo
pop
push
std
stos
pop
pop
inc
pop
jbe
add
pop
xlat
lar
jmp
push
xchg
push
cmc
xchg
jns
or
or
and
ret
negb
insb
sahf
scas
push
hlt
jb
mov
call
adc
adc
ret
jbe
fidivl
imulb
jg
mov
and
mov
push
divl
xor
ds
jno
mov
cmp
push
test
or
add
enter
xor
mov
leave
mov
lret
data16
push
cmp
stos
cmp
jmp
push
pop
xchg
sub
je
in
popa
cltd
xchg
gs
lods
fyl2xp1
sub
fstpl
out
decl
lcall
test
pop
flds
pop
cmp
inc
sbb
xchg
adc
xchg
out
in
xchg
xchg
pop
jge
hlt
or
dec
icebp
lock
arpl
div
inc
repnz
test
testb
or
adc
mov
out
pop
inc
ret
push
pop
xor
sub
add
imull
or
nop
cld
in
xor
mov
scas
cmc
outsl
loop
sbbl
popf
cmp
aas
mov
cld
ss
pop
inc
ss
xchg
das
xchg
xchg
mov
inc
mov
add
lret
xchg
jnp
and
dec
jbe
inc
mov
rcll
gs
push
mov
ljmp
sbb
lret
js
and
jmp
sub
pop
add
shrb
jbe
inc
mov
and
sbb
fsubrs
or
loopne
mov
push
into
jmp
push
jle
sbb
cmp
outsb
mov
xor
leave
ljmp
addb
dec
inc
popa
push
in
mov
sbb
imul
stos
and
mov
les
aam
jl
loop
ljmp
shrb
enter
fcoms
lahf
cmpsb
sub
sahf
stos
insl
nop
lods
fstpl
pop
jg
les
insl
leave
les
in
push
xchg
or
dec
out
bound
orl
inc
xchg
int
add
sub
popa
out
pop
add
test
or
ret
daa
cmp
pushf
or
mov
add
xchg
xor
scas
xchg
not
stc
test
adc
pop
mov
ja
add
xchg
ljmp
repz
dec
sbb
test
fsubs
ds
jge
imul
cmpsb
in
xor
sbb
pop
jmp
or
sub
repnz
lret
xor
xor
fildl
std
pop
shlb
into
outsb
nop
push
test
xor
aaa
lds
outsb
jp
add
xchg
fsubrs
mov
jo
lret
iret
jnp
fisttpll
push
out
cli
mov
inc
in
jle
xor
xor
lcall
std
ret
jb
or
movb
cmp
mov
cmp
mov
ds
lods
aaa
pop
pop
cltd
test
xchg
mov
jle
push
es
add
jmp
pop
test
jle
not
xor
jge
iret
lods
or
jae
add
les
mov
push
ja
repz
shlb
scas
mov
adc
xor
mov
ljmp
xor
xlat
jns
push
in
cld
mov
repz
fdivs
in
shr
dec
shll
jle
lock
jne
lcall
and
shl
mov
jecxz
adc
fstpt
xchg
push
lock
ss
ret
cmpsb
aad
mov
lock
lret
push
stc
xchg
movsl
repz
loopne
cmp
pop
mov
pop
sbb
hlt
sbb
mov
mov
test
adc
cmp
pop
pop
sbb
lahf
mov
insl
sbb
fists
clc
jne
popa
add
push
sub
sbb
lock
ret
notl
push
aad
adc
int
fistl
inc
int
cmpsb
cwtl
add
push
and
dec
pop
jecxz
push
xchg
xor
mov
sbb
lock
xchg
not
mov
cmc
jo
test
jb
daa
pop
test
lock
out
pushf
add
lret
les
out
popa
aaa
inc
ljmp
push
subps
stos
mov
scas
lea
repnz
filds
les
call
and
cmp
sub
inc
push
out
jo
jae
ljmp
pop
xor
sbb
pop
test
sbb
mov
mov
jno
jle
fstps
out
jp
or
xchg
or
cs
jp
xor
outsb
into
in
jnp
pusha
cmpsb
shlb
sti
cs
and
lock
xchg
or
mov
popf
out
xor
xchg
push
out
add
nop
mov
icebp
fstpt
adc
sbb
cmp
sub
fildll
js
popf
jl
jge
stc
test
sbb
fwait
icebp
adc
pop
test
pop
test
cmp
xlat
and
push
sbb
jl
movb
push
fldcw
cmp
mov
notl
ret
movsb
xchg
leave
mov
loop
stos
mov
xor
push
sub
popf
pop
adc
js
into
movsl
cli
or
cmc
pop
lds
in
fst
pop
pushf
xor
jle
pop
les
dec
dec
data16
int
sarl
jbe
bound
popa
xchg
jmp
insb
fcoml
xor
pushf
sar
mov
inc
lock
nop
add
cmp
jno
mov
movsl
in
pop
pop
lods
adc
sbb
xchg
dec
jnp
addb
xchg
mov
arpl
jmp
scas
fadds
int3
dec
push
or
std
adc
jae
les
jae
lahf
div
pop
dec
pop
push
out
jne
dec
sub
out
pop
inc
ret
daa
push
mov
lods
mov
fwait
xchg
mov
out
mov
pop
xor
xor
sub
jmp
jnp
sbb
inc
test
mov
xchg
xor
jp
cmp
idivl
cmp
sub
lea
cli
xorb
jo
push
or
pop
adc
mov
lcall
imul
or
or
xchg
lret
decb
ret
xorb
xor
insl
pushf
and
fwait
out
int
mov
ja
pop
in
stc
sub
dec
mov
xchg
lahf
push
mov
lea
call
js
js
push
or
ficompl
pop
add
pop
fsts
and
push
mov
push
push
and
add
lea
inc
xchg
cmp
movsl
enter
out
xor
movsb
insl
pop
push
jne
push
outsl
inc
mov
add
in
xchg
mov
xchg
loope
cmpsb
adc
loope
push
push
xor
cmpsb
cmpsb
loop
push
lods
imul
int3
mov
push
cmpsb
mov
leave
sbb
fisubrs
cmp
jno
or
adc
pop
or
or
aad
inc
dec
xchg
xor
and
jg
icebp
xor
jg
xchg
sbb
or
out
push
sub
jl
add
das
or
mov
sub
jmp
or
inc
outsb
mov
push
jge
push
pop
add
inc
sub
push
jns
pop
pop
imul
jp
or
xchg
int3
mov
mov
or
lods
mov
test
push
xor
daa
sub
inc
xor
fwait
push
aam
pop
ficompl
js
cmpsb
imul
cmp
loope
pop
xchg
add
push
and
inc
test
push
in
loope
sub
sarl
stos
ds
fistpll
sbbl
daa
push
test
jno
sti
jl
sub
test
dec
mov
mov
pushf
dec
nop
xchg
push
out
push
sub
mov
inc
je
cmpsb
push
pusha
jne
mov
jmp
xchg
cmpsl
sub
sbb
sub
dec
in
push
pop
mov
pop
rcr
mov
outsb
inc
pop
adc
add
mov
fwait
sub
lret
mov
or
lcall
data16
push
pop
xchg
cli
jmp
ja
jnp
push
sub
pop
arpl
mov
xor
cmp
jbe
mov
xchg
lods
inc
int3
push
or
lea
jno
adc
adc
cmp
adc
push
ficomps
mov
test
mov
add
xor
rcrb
pop
movsl
mov
mov
sub
shrl
scas
or
insb
mov
ljmp
push
mov
test
cli
xor
fldl
sbb
cmp
xchg
dec
xor
test
push
adcl
sub
lahf
xor
inc
cmpsb
fnstsw
push
into
adc
inc
dec
sub
fldcw
insb
ret
lods
mov
mov
pop
sub
xor
xor
pop
hlt
sub
push
add
lahf
mov
or
icebp
inc
mov
int
jns
pop
jno
sub
inc
test
jle
and
roll
push
jp
addr16
mov
sub
adc
ret
arpl
call
and
pop
inc
mov
push
inc
in
push
xchg
add
xchg
mov
cmc
into
mov
outsl
cmp
repnz
shll
push
jbe
push
and
cmp
idivl
xchg
in
xchg
xor
aad
jae
fdivp
push
fsubrp
test
and
mov
mov
popa
sarb
movsb
adc
push
arpl
add
lods
fnsave
push
sub
repnz
mov
jg
dec
int
nop
pop
cs
mov
xor
loopne
sbb
inc
or
push
adc
add
mov
scas
stos
inc
cltd
xor
mov
js
and
xor
std
hlt
subb
xor
scas
dec
mov
stos
adc
jae
inc
aad
sahf
mov
cli
pop
mov
jno
adc
pushf
loopne
scas
dec
out
pushl
cld
mov
popa
jnp
pop
lods
nop
pop
data16
cli
jno
and
stc
fnstenv
movsb
pop
sub
dec
adc
ret
loopne
dec
les
movsl
xchg
or
xlat
adc
int
cmp
popa
test
xor
mov
add
or
push
dec
push
call
cmp
sbb
ljmp
outsb
inc
repnz
pop
popa
arpl
mov
lret
pop
loope
les
xchg
insb
repnz
cmpsb
out
es
xor
jecxz
push
mov
mov
sbb
dec
jmp
arpl
and
jne
jae
mov
jbe
push
xor
xchg
push
test
ljmp
add
outsb
pop
roll
add
xor
imul
insl
stos
sub
dec
leave
lret
jge
imul
cli
pop
xor
dec
mov
or
inc
fnop
xor
enter
push
cld
rolb
jns
jmp
fisubrl
cwtl
cmpsb
aaa
xor
fsubrs
jno
push
inc
inc
jecxz
push
jno
lods
mov
scas
mov
and
gs
scas
repz
test
fisubl
add
push
xchg
inc
stos
dec
mov
inc
cmpb
push
gs
add
cmpsb
jp
cmp
adc
decb
mov
dec
dec
fwait
inc
push
xchg
xchg
pushl
insb
pusha
leave
lret
push
lea
es
cmpl
mov
cmc
or
sub
fwait
mov
frstor
fsubrs
loopne
shl
pop
adc
or
xchg
loopne
xchg
push
cmp
js
xchg
stos
lea
mov
mov
es
adc
je
cmp
xchg
cmp
mov
cmpsl
dec
pop
insb
pop
loope
filds
mov
dec
dec
aam
adc
mov
es
adc
out
test
add
data16
lcall
add
rclb
jl
mov
xchg
out
pop
iret
jl
mov
jne
jg
push
or
sbb
out
cmp
ljmp
xor
mov
cli
lock
imul
enter
add
cmpsl
inc
xor
cli
lods
ret
scas
enter
aad
jb
mov
cmp
ss
and
adc
cltd
mov
loope
inc
jno
cmc
lret
mov
das
das
stos
test
push
add
push
test
test
mov
ror
jp
rcr
xchg
dec
out
sub
movsl
mov
cs
or
fbstp
mov
mov
mov
movsl
fsubrs
adc
imul
xchg
test
jecxz
or
andb
sub
das
test
jp
in
xchg
sub
popa
cld
rcrb
jo
iret
dec
xchg
or
insb
call
stos
int
ja
lds
jns
mov
xchg
lock
ljmp
jnp
fstps
push
mov
xor
sbb
jns
loope
pop
lods
cld
mov
decb
mov
daa
lcall
mov
in
mov
cmpsb
fsubl
or
jo
inc
add
push
cmpsb
dec
mov
aaa
add
mov
inc
push
xlat
lds
cmp
inc
cli
adc
cs
je
jns
mov
cltd
jno
roll
push
inc
je
xor
test
add
mov
mov
das
lahf
mov
hlt
mov
pop
jmp
les
inc
dec
mov
lea
jl
jno
stos
lds
lods
fidivrl
mov
pushf
nop
xchg
lods
mov
sub
mov
insb
orb
xchg
rcll
jnp
ret
jnp
iret
cmpb
ds
mov
cmp
mov
ret
adc
jbe
fwait
shrb
cmp
dec
or
push
arpl
in
push
bound
mov
lds
outsb
icebp
sub
jbe
dec
filds
xor
insl
sub
out
push
mov
add
xchg
arpl
out
ja
pop
dec
scas
loopne
cmp
cmp
aaa
cmp
pop
int
mov
dec
aaa
test
js
mov
iret
fisubl
adc
ret
pop
sti
push
in
inc
in
sub
cmpsl
sti
mov
pop
insb
mov
mov
cmp
sahf
repz
inc
or
xchg
adc
addr16
pop
and
cmpsl
aas
inc
loope
rclb
jnp
adc
mov
insl
shll
or
pop
scas
stos
out
divb
fs
jge
sbb
pop
pop
and
push
andb
sbb
inc
jne
shll
xchg
push
mov
pop
cld
xchg
mov
fxch
mov
inc
pop
sub
hlt
push
clc
ja
xlat
aas
add
jmp
outsl
and
sub
and
cmp
inc
insb
and
jp
cwtl
scas
call
ja
testb
push
mov
test
xchg
sahf
hlt
sub
and
cwtl
into
sti
push
push
sahf
push
sub
push
adc
in
mov
fndisi(8087
dec
xlat
mov
inc
cld
pushf
in
xor
cs
jbe
sub
and
sbb
aad
mov
dec
mov
add
daa
add
pop
data16
sub
inc
test
push
mov
sbb
idiv
dec
dec
test
jbe
in
out
inc
movsb
xchg
jnp
lods
idivb
push
mov
flds
test
ljmp
in
bound
jno
lock
mov
mov
pop
test
pop
lock
es
mov
or
into
loop
cwtl
xchg
add
jne
popa
fimull
dec
insl
add
in
shlb
xor
bound
xchg
ss
dec
sti
into
cmp
sub
adc
pusha
cli
insb
test
push
ds
lcall
popl
pop
call
imul
sub
outsb
and
mov
cmp
mov
dec
scas
jb
dec
int
xchg
lcall
aaa
xchg
mov
out
outsb
out
outsb
gs
push
test
xchg
sbb
xor
push
jo
jbe
int
bound
imul
mov
lods
inc
cmp
lods
jae
add
rcrb
or
jno
das
xchg
mov
xchg
mov
nop
rcrb
sub
stos
and
xor
sub
jns
ficomps
cmp
rclb
fistpll
mov
ljmp
dec
push
push
inc
jo
and
xchg
mov
jmp
sbb
hlt
jle
jne
outsb
mov
dec
sbb
adc
push
push
pop
push
pop
sahf
scas
sub
jecxz
push
mov
insl
mov
add
ljmp
and
add
push
das
xor
mov
nop
test
mov
push
push
mov
daa
sub
add
add
and
outsb
dec
and
push
push
inc
cmpb
xorl
pop
daa
in
pop
je
stos
aaa
lahf
cmp
enter
add
cmp
xor
add
leave
jnp
or
out
or
push
in
push
pop
jmp
popf
fimull
in
dec
fsubrs
sahf
push
imul
jo
and
es
jge
sbb
fs
xchg
adc
orb
repnz
hlt
dec
popf
push
outsl
inc
shrb
in
sti
push
or
mov
xor
imul
movsb
addr16
std
push
jg
pushf
mov
in
rclb
nop
dec
ds
lds
push
or
or
pop
cmpsb
addr16
push
icebp
inc
jo
rorl
sbb
jge
xor
aam
stc
push
fadd
mov
cmpsl
mov
push
cmp
or
mov
repnz
pop
mov
mov
add
inc
mov
mov
push
pusha
push
and
testb
decl
in
xlat
fwait
sbb
mov
aaa
mov
dec
push
xchg
mov
movsl
lahf
std
idiv
daa
push
sbb
push
movsb
incb
cmp
adc
inc
arpl
push
in
or
rclb
sub
sahf
push
sbb
nop
cmp
adcb
fdivs
repz
loopne
jne
test
mov
stos
inc
xchg
mov
arpl
jnp
pushf
scas
jp
inc
clc
movsl
xchg
mov
cli
lea
in
mov
pop
and
adc
lods
das
dec
adc
dec
adcb
push
dec
push
mov
ffree
or
nop
pop
sarl
xchg
adc
adc
out
shr
or
cmp
or
jmp
or
jno
sub
pop
cmp
les
call
push
aad
mov
dec
dec
dec
xor
pop
cwtl
ficomps
xchg
dec
ljmp
jns
mov
stos
stos
es
add
icebp
fcomps
mov
add
inc
cmp
hlt
mov
sbb
popa
aaa
out
mov
cmp
xchg
xchg
pusha
fsubs
cmpl
out
scas
fcmovbe
stc
out
mov
xlat
jg
in
xchg
mov
xor
and
lcall
or
cmp
mov
jge
pop
xlat
dec
jg
inc
imul
test
sahf
xchg
xchg
jbe
push
push
jb
orb
and
icebp
test
mov
popa
cmpsb
xchg
fs
std
scas
dec
imul
add
sbb
push
daa
popf
insb
je
std
ficomps
and
pop
xchg
rcl
sub
xchg
adc
aad
pop
fmuls
fiadds
cli
clc
pop
out
inc
lret
jb
sub
dec
mov
orb
xlat
std
popa
sub
lret
or
mov
pusha
add
in
or
gs
imul
mov
pusha
pop
in
pop
lea
mov
inc
test
out
aaa
adc
mov
rcll
and
stos
adc
mov
lods
jbe
popf
ja
je
mov
lods
push
aam
sbb
sub
ljmp
dec
mov
and
pushf
cmp
test
outsb
pop
mov
add
sbb
jno
push
outsb
sub
les
push
lds
add
jnp
aaa
fsubr
cmp
stc
jnp
jp
mov
outsb
js
cmpsl
popa
push
pop
cmp
sbb
sbb
fnstcw
jl
gs
mov
sub
inc
insl
cmp
pop
mov
cli
pop
loop
xor
repnz
dec
mov
mul
into
sub
test
sbb
adc
hlt
test
push
test
and
std
xor
std
sbb
test
loopne
add
test
sbb
mov
test
fs
mov
dec
imul
mov
loop
push
cmp
scas
aas
mov
out
pop
jmp
or
mov
test
insb
cmp
testb
add
adc
dec
orb
adc
movsl
jecxz
fyl2xp1
and
mov
mov
mov
xchg
mov
sahf
in
jle
mov
sub
leave
cli
cld
mov
sbb
or
mov
and
dec
test
push
pop
out
cmp
int
fcmovu
aam
sarl
ret
icebp
mov
pop
mov
add
or
mov
inc
testb
es
jae
mov
adc
bnd
mov
cmp
fnstsw
lret
dec
dec
mov
lock
outsl
mov
cwtl
jg
jne
insb
xchg
xchg
jp
sub
in
mov
jle
adc
pop
and
fisubs
mov
and
call
xchg
push
pop
rcrl
test
nop
jg
mov
mov
mov
sbb
jb
fsubl
adc
dec
lods
addr16
test
cmp
int3
fcoml
inc
mov
mov
aam
adc
sbb
mov
inc
test
mov
inc
or
lcall
int3
cltd
sbbl
popf
jge
pop
ret
or
je
xor
ljmp
inc
jl
aaa
in
lcall
sarb
adc
jb
aam
iret
ss
mov
decb
xor
sub
dec
outsl
jbe
outsb
movsl
sub
scas
nop
insl
inc
lds
xchg
adc
mov
pop
mov
cmp
and
mov
pextrw
das
cwtl
pop
loope
addr16
stc
lock
out
jl
jbe
pushf
loop
andb
ljmp
sub
mov
xchg
sti
dec
dec
sarb
jl
mov
adc
in
lods
movsl
xorl
mov
adc
xlat
icebp
mov
ds
enter
leave
aad
subb
mov
push
fdivs
and
or
notl
cmp
mov
aas
ret
add
jnp
aad
mov
pop
jp
std
dec
pop
out
mov
pop
int3
stc
clc
pop
stos
inc
jns
xchg
inc
and
mov
sti
cmp
das
imul
jle
cmc
mov
and
aam
push
je
std
jne
fidivrs
fimuls
test
adc
push
push
popf
fcompl
pop
add
rcll
repnz
add
jb
movsb
mov
lahf
push
mov
cmc
pusha
outsb
lret
mov
mov
xchg
xor
xchg
sub
and
pop
sbb
mov
lods
jg
arpl
imul
nop
outsl
dec
mov
dec
out
dec
lods
sarb
adc
fwait
xor
repz
loope
ss
and
dec
push
pop
vpmacssdql
dec
mov
dec
pop
sbb
cmp
add
push
xchg
mov
sub
fucomip
add
add
movsb
mov
dec
sub
popa
xor
or
in
loop
push
loop
xorb
cmp
xchg
sbb
lcall
shrl
mov
jl
out
inc
fdivrs
loopne
popf
mov
jnp
jb
sbb
imul
mov
jp
xor
dec
mov
push
dec
mov
clc
xor
jns
add
xchg
movsl
iret
xchg
ds
andb
adc
xor
sbb
call
test
frstor
jl
mov
and
inc
or
push
pop
popa
push
xchg
push
out
repz
std
xchg
adc
lods
inc
fisubs
pop
pop
es
mov
rep
test
jno
loop
into
in
ljmp
fimull
je
mov
sbb
loopne
push
push
dec
mov
in
or
sarb
loopne
mov
sbb
rcll
sbb
adc
cltd
adc
incl
sbb
test
in
adc
pop
xchg
aam
popw
or
sbb
fnstenv
xor
inc
or
out
cmp
jb
stos
pop
pop
jecxz
pusha
pushf
add
popf
pop
push
sbb
jmp
xchg
xor
or
imul
mov
adc
mov
mov
pop
js
es
leave
daa
lcall
rcrl
and
aaa
and
add
rolb
jo
jecxz
in
sbb
xchg
sbb
fldl
aaa
and
mov
ret
int
jbe
les
xchg
loope
adc
aam
arpl
aam
sub
test
sbb
test
adcb
ficoms
xor
pushf
movsb
cmp
jmp
push
or
pop
sbb
fmull
incb
adc
add
fwait
xlat
push
or
mov
insl
scas
xor
sub
jmp
xchg
mov
xor
stos
or
jnp
xchg
mov
push
adc
mov
ja
adc
rolb
js
adc
add
mov
pusha
sub
xor
or
lret
mov
push
imul
aad
dec
ret
push
mov
bound
sbb
dec
movsl
cmp
lds
adc
fdivrl
mov
addr16
cs
cmp
push
xlat
push
inc
rol
lret
into
popf
cmpxchg
mov
sbb
fisubl
aaa
and
or
popf
xchg
pusha
pop
les
cli
mov
xor
add
jo
lods
sti
mov
adc
add
jns
jle
cmp
aad
loop
movsl
es
popf
mov
or
into
mov
inc
mov
arpl
jnp
fstps
push
daa
test
js
xor
cmc
dec
mull
xor
es
fiaddl
arpl
inc
rolb
xor
scas
sbb
jl
mov
lahf
sbb
lds
cmc
adc
mov
les
lods
fwait
aam
loop
stos
push
jb
imul
mov
cli
or
xchg
cmp
mov
sbb
pop
xor
call
push
fmull
mov
push
test
andl
lahf
pop
push
out
or
add
enter
loope
aaa
fistl
inc
out
jge
jnp
adc
sbb
mul
pop
in
sbb
add
fldt
adc
repnz
lds
in
fsubp
cmp
insb
ret
std
and
dec
inc
mov
xchg
scas
add
cmpsb
jmp
popf
jp
fdivl
cmpb
icebp
in
sbb
push
add
dec
mov
jb
sysret
fs
dec
aam
push
decl
sub
pushf
mov
inc
push
enter
ja
dec
fisttps
push
sbb
jecxz
mov
gs
addr16
aam
into
jb
push
mov
mov
fisttpl
pusha
gs
lret
jne
xor
jb
pop
jno
rolb
imul
push
call
mov
enter
mov
inc
xchg
or
push
cmpsb
adc
lret
mov
jl
ss
mov
dec
cmp
add
shll
adc
test
sti
pop
lret
scas
out
loope
pop
lahf
add
and
mov
sbb
ss
insb
adc
mov
push
pop
inc
mov
fists
xchg
mov
pop
jg
dec
stos
daa
cwtl
outsb
sub
in
cmpsb
loop
out
insb
jae
fistpll
mov
data16
loopne
movsl
push
aaa
inc
lahf
mov
test
xor
mov
movsb
leave
push
shr
cmp
push
rolb
mov
pop
push
dec
or
daa
mov
test
mov
or
arpl
dec
lods
add
fstl
add
jb
xlat
repz
push
ret
in
xchg
fisubrs
pusha
add
loopne
mov
mov
mov
daa
pusha
out
xchg
out
testb
adc
or
adc
mov
sbb
ds
dec
xchg
push
pop
test
imul
sbb
push
dec
shrl
push
fwait
pop
lods
add
or
push
or
mov
add
mov
and
test
cmc
lds
add
es
xchg
sub
nop
xchg
or
aas
enter
jg
jecxz
adc
loope
xchg
bound
mov
or
mov
pushf
sub
mov
pop
daa
xchg
std
icebp
test
lret
js
push
jns
mov
aad
xor
fdivrs
mov
frstor
imul
ret
cmp
inc
push
out
cld
add
adc
fadds
cmp
mov
and
pop
add
sti
repz
out
inc
adc
sub
je
and
loop
cmc
mov
mov
fimuls
and
adc
out
cld
xor
mov
mov
leave
push
mov
nop
cmp
push
xchg
out
dec
lcall
test
shll
jns
push
and
sub
es
sbb
inc
rcrl
inc
bsr
cli
jb
mov
movsl
cmp
loope
or
mov
sub
cs
or
pop
inc
repz
sahf
and
popa
shl
mov
gs
cwtl
pop
sbb
nop
and
mov
jmp
lock
adc
insb
test
adc
inc
fcomps
cmpsl
mov
ja
xor
not
xor
loope
sbb
sbb
mov
or
inc
lea
out
push
mov
push
stc
sub
or
dec
les
cmp
movsl
cmp
imul
in
push
and
adc
adc
or
lahf
xchg
test
mov
mov
popf
jge
jge
lods
adc
xor
test
stos
jo
mov
enter
in
loopne
inc
cmpl
push
sbb
xchg
xchg
sar
lret
ljmp
sbb
repz
mov
inc
test
int3
imul
cmp
jae
mov
pop
mov
rcrb
jle
out
pushf
mov
incl
loop
lea
pop
ficomps
and
inc
adc
mov
leave
fdivs
pop
sbb
andl
cmp
cmp
inc
testb
aaa
push
lret
adc
pop
push
loopne
cmp
cld
dec
out
shr
mov
sbb
je
inc
ss
jo
xchg
inc
pop
push
insb
mov
cmp
ljmp
data16
pop
pop
orb
popf
push
imul
inc
cmp
pop
repnz
mov
loopne
push
xlat
je
inc
cmpsl
ss
inc
sbb
testb
mov
jmp
rorb
cmp
lods
jbe
push
dec
pop
sub
aad
and
jmp
bound
int
aad
fdivrp
pop
xor
sbb
jns
popf
adc
cmp
jns
mov
mov
dec
stos
xchg
pop
pop
cmp
jo
stos
push
cmpl
jecxz
xlat
ja
test
bnd
push
pop
pop
mov
movsl
aam
mov
mov
iret
dec
pop
ror
loopne
in
sub
and
in
inc
mov
aaa
rolb
std
jle
push
cmp
arpl
xchg
lock
mov
mov
aam
addr16
stos
xlat
sub
add
jb
fdivr
leave
mov
lret
cmpsl
mov
repnz
insl
or
add
std
jno
test
xchg
pop
lds
inc
dec
popf
jns
mov
xor
jle
sahf
sub
mov
fstl
lahf
push
jmp
test
sti
scas
mov
nop
xchg
mov
out
xchg
inc
mov
cs
xchg
mov
pop
dec
gs
and
dec
push
adc
mov
cmp
xor
and
xor
ja
cmp
cwtl
lods
dec
adc
fldl
or
cli
es
adc
cld
nop
arpl
stc
cli
ret
fwait
add
xchg
cs
lret
or
sub
and
cltd
cmp
and
call
insb
rol
stos
inc
xor
mov
out
sbb
popf
pusha
mov
ret
inc
and
mov
inc
xchg
jns
cmpsb
ljmp
repnz
les
xchg
iret
and
popa
sbb
repnz
pushf
adc
ss
std
cmpsl
dec
lods
mov
inc
push
in
pop
cmp
mov
pop
adc
adc
push
dec
pop
add
sbb
loop
pushf
mov
arpl
xchg
sbb
in
inc
daa
shll
dec
mov
roll
mov
and
cmpsb
es
cmp
or
adc
and
sub
or
ret
addr16
imul
add
jge
out
cli
imul
jns
dec
inc
xlat
rcl
enter
fistpl
xor
imul
enter
fcoml
push
or
dec
leave
xchg
fdivrl
flds
cmp
enter
std
stos
pop
cmp
pop
pop
ds
and
sub
xor
push
jp
xor
pop
push
bound
pop
sub
repnz
in
xchg
stos
jp
xor
cli
jle
std
jns
in
in
push
ds
lods
mov
add
cmp
adc
data16
inc
fcomps
pop
sbb
arpl
mov
mov
fcom
xor
inc
xor
jg
jne
mov
ud2
push
add
sbb
ss
lds
dec
mov
inc
andl
cmp
shlb
ljmp
mov
fldcw
jns
mov
popa
leave
dec
sbb
xor
lods
iret
scas
dec
and
imull
stc
dec
jmp
mov
icebp
std
push
mov
lea
outsl
or
sub
outsl
push
cltd
imul
hlt
dec
test
aam
mov
data16
stos
popa
adc
xchg
pop
dec
lea
fidivl
icebp
dec
notb
test
push
fsubl
sub
xchg
xchg
xchg
fucomi
jns
ds
sub
xchg
add
out
cmp
shlb
xor
ja
dec
cmp
in
mov
mov
pushf
xchg
out
push
repnz
or
int
hlt
shr
into
repnz
mov
sub
mov
cli
jge
or
xor
popa
mov
push
adcb
jle
aam
stos
enter
add
push
test
mov
negb
push
mov
adc
sub
int
cmp
pop
mov
pop
xchg
mov
or
mov
jo
nop
pop
jge
shrb
movsl
lretw
xor
sbb
cmp
push
mov
xchg
sahf
add
and
test
lds
das
stos
leave
and
rorb
lret
jmp
out
xchg
js
cs
lret
dec
dec
pop
and
enter
fnstenv
cltd
xor
push
push
pushf
andl
inc
pop
xchg
gs
sbb
pop
movsl
call
mov
mov
in
and
cmpsb
pop
mov
add
fwait
stos
bound
mov
lea
jl
xor
dec
mov
push
bound
clc
add
pop
cmp
jg
out
xchg
or
imulb
adc
outsb
mov
sarl
es
nop
push
cmp
js
movsl
and
movsb
js
movsl
xor
dec
in
mov
shlb
inc
mov
int
enter
nop
or
repnz
fs
mov
icebp
cli
lea
fs
dec
gs
mov
pop
lret
push
xchg
mov
push
xchg
sbb
sub
jmp
cld
andl
sub
imul
jne
xchg
push
cli
dec
insl
xchg
jne
mov
stos
mov
out
push
stos
outsl
xor
aas
cmp
test
mov
pushw
adc
pop
cli
mov
movsl
adc
mov
popf
js
int3
push
dec
and
mov
movsl
in
test
shll
xor
subl
xchg
mov
mov
hlt
out
int3
pop
stos
add
mov
mov
jge
int3
mov
or
cwtl
lock
push
mov
lret
sub
outsl
hlt
push
sbb
lahf
jmp
jp
into
pop
sbb
lods
xor
mov
aaa
aad
pop
in
cmpsb
mov
test
shll
jp
sar
adc
push
xor
and
pop
jne
xor
adc
sbb
dec
bound
bound
push
cltd
push
inc
mov
pop
cwtl
xor
or
daa
inc
pop
add
jge
sbbl
aad
aas
enter
pop
push
stos
roll
mov
iret
inc
scas
fwait
cs
dec
ljmp
push
mov
sub
lcall
addr16
add
xor
popf
inc
add
sub
mov
jae
cltd
or
push
pop
repz
dec
mov
mov
add
mov
mov
jmp
ljmp
movb
jle
jl
fucomp
inc
dec
aam
aad
cmp
into
dec
pop
movsb
push
cld
mov
mov
cmp
or
sub
push
adc
lret
jmp
insb
scas
shll
pushl
mov
lcall
dec
dec
jo
adc
into
mov
jns
push
sub
in
jnp
insb
mov
mov
mov
aam
push
dec
out
sub
hlt
test
loop
push
or
sub
andl
je
loopne
add
cmp
mov
push
add
lret
adc
cmp
mov
sub
dec
pop
call
call
sbb
or
and
sbb
dec
adc
loope
hlt
in
mov
pop
add
pop
pusha
std
cmpb
pop
clc
insl
or
js
mov
in
xor
mov
or
jl
add
dec
inc
jno
or
pop
add
add
lods
dec
pop
xchg
jbe
sarl
xchg
push
gs
test
clc
cmpsl
in
aad
test
repnz
cmpsb
dec
mov
push
call
cld
sbb
nop
xor
sti
pop
hlt
push
jnp
iret
bound
add
jg
mov
fisttpl
in
lds
jmp
movsb
or
insb
xor
pushf
inc
out
out
loope
das
out
inc
es
sub
dec
xchg
jg
out
out
arpl
lds
and
and
sub
pusha
rorb
and
ret
mov
shrl
ret
aaa
gs
inc
push
pop
lods
and
lea
fsubrs
outsl
pop
mov
in
push
int3
xchg
fcmovu
test
push
enter
pushf
jbe
push
scas
mov
cmp
iret
insl
jle
fdivs
xchg
cmp
push
stos
mov
orb
nop
adc
jecxz,pn
mov
mov
out
aaa
repz
mov
fdivrl
sbb
out
addl
rcrl
inc
jl
pop
and
clc
pusha
mov
sub
or
stos
adc
lret
loope
sub
lods
jb
cwtl
leave
test
rorl
mov
mov
sub
mov
jmp
fucomi
movsl
into
sub
sbb
repnz
inc
push
xlat
xchg
xchg
push
dec
or
cli
call
mov
ret
aas
insb
xchg
push
shll
xchg
inc
pop
out
out
les
cs
push
inc
pop
or
mov
inc
icebp
pop
fldl
outsl
incl
push
cmp
xorl
ret
jnp
nopl
or
push
sbb
and
lahf
out
aam
dec
jmp
bound
lea
hlt
inc
inc
cmp
shrb
or
sub
mov
mov
xchg
pop
fldl
xor
fisubrl
cli
rclb
enter
ja
sub
push
ss
add
popa
pop
jb,pn
jg
mov
sbb
jb
cmpsb
adc
or
out
mov
pop
jnp
aas
ja
add
pop
and
shlb
push
mov
xor
jne
push
cmp
dec
stos
mov
pop
add
mov
push
std
insl
and
adc
sub
xchg
js
xchg
repz
xlat
jbe
rolb
imul
cmp
enter
mov
repnz
add
std
inc
int
ljmp
in
xor
inc
ret
in
dec
or
xor
xor
xor
jbe
inc
xchg
cmp
mov
les
cmp
xchg
bound
out
test
aam
jo
insb
pop
cltd
xchg
push
popf
xor
mov
mov
push
lahf
lret
ret
outsl
in
or
and
gs
or
aas
and
push
jle
dec
mov
test
cmpsb
xor
sbb
fbstp
pop
leave
mov
pusha
ror
ljmp
jne
neg
les
lods
push
add
xor
test
in
call
push
aaa
out
inc
sbb
cmpsb
and
push
cmp
outsb
push
dec
lea
aam
push
cmp
das
push
push
into
jmp
cltd
cld
and
enter
mov
xor
sub
stc
imul
shl
mov
and
dec
lahf
icebp
js
jecxz
pop
shrb
inc
out
push
mov
xchg
out
addb
cmp
scas
or
add
jae
fwait
out
ja
mov
dec
loopne
xor
sti
imul
dec
inc
aam
jnp
sub
mov
fnstcw
loop
xchg
test
adc
mov
xchg
inc
inc
mov
adcl
xchg
xorl
insl
jmp
add
addb
insb
std
testl
orb
pop
adc
push
jns
sub
aas
stc
jmp
adc
jecxz
and
push
or
mov
div
addr16
jns
fdivrs
inc
sub
leave
pop
outsb
orb
xor
out
out
jne
or
cs
mov
sti
jmp
pop
xor
daa
pop
xchg
mov
in
test
mov
arpl
mov
mov
gs
ret
jo
pop
test
sbb
pusha
movl
sub
xor
jle
cmpsb
mov
push
aaa
and
pop
daa
test
loope
xchg
sbb
cmc
aas
or
and
mov
dec
sarb
test
mov
scas
ljmp
add
popf
xchg
test
mov
sti
pushf
scas
mov
stc
insb
xlat
mov
stos
sbb
fildll
std
jp
fstp
pop
nop
fldz
test
add
mov
in
sub
dec
jmp
or
sub
addr16
push
incl
push
jns
cmp
cmpsb
dec
cli
xchg
xchg
jmp
sbb
mov
stos
sub
sub
popa
fidivl
cmp
lea
nop
jnp
int3
xchg
sbb
cmpsb
xor
aad
lret
hlt
movsl
lea
movsb
add
cli
in
adc
inc
fidivrs
addr16
adcb
test
daa
jmp
pop
fs
roll
mov
xchg
adc
mov
inc
aad
sub
ret
mov
or
sbb
push
hlt
or
xor
mov
in
insl
pushf
int3
repnz
adc
shl
jnp
mov
mov
lods
cmp
add
push
and
sub
cmp
xor
lea
fs
adc
xchg
push
popa
aaa
add
xchg
sbb
pop
fdiv
jle
xorb
jne
imul
add
lea
or
data16
js
movsb
and
loope
mov
dec
xor
mov
push
mov
xchg
and
sub
jp
out
lret
aam
cltd
jge
fbstp
aam
shl
shr
mov
stos
xor
dec
mov
cmp
xor
filds
inc
fs
es
jns
sbb
mov
push
add
pop
dec
adcl
outsl
int
mov
loope
cmp
cmp
test
sbb
adc
movsb
mov
leave
dec
enter
inc
imul
push
lock
ja
in
inc
add
adc
clc
cmp
push
or
pop
jmp
lret
shlb
push
xor
mov
adc
imul
sbb
lea
movsb
mov
mov
mov
fdivrs
xchg
iret
scas
inc
mov
and
pop
cwtl
add
movsl
cld
in
ja
cmp
mov
sbb
xchg
test
int3
cltd
mov
fcom
pop
fisubrs
push
dec
xor
mov
mov
inc
into
ret
inc
jp
mov
mov
and
and
scas
inc
jb
test
dec
and
or
pop
add
cld
mov
lds
xor
leave
xchg
push
repnz
push
xchg
scas
scas
fsts
mov
jo
test
mov
addr16
push
or
mov
ss
movb
ficomps
jmp
iret
cmp
mov
fiaddl
icebp
pop
add
dec
cli
out
lret
xlat
mov
cmp
add
rcr
insl
loop
mov
fs
lods
enter
mov
ljmp
xchg
add
adc
sahf
and
dec
push
popa
std
cwtl
pop
pushl
adc
incl
movsl
in
mov
inc
scas
sti
or
loop
gs
and
mov
pop
mov
aam
sub
push
jb
dec
js
and
scas
repnz
inc
adc
push
mov
int
aas
sbb
popa
adc
rclb
add
add
and
add
in
adc
pop
std
mov
js
sahf
add
dec
call
mov
mov
mov
insb
popa
sbb
enter
fildl
jne
and
cmc
sbb
push
and
cmp
repz
fisubs
jl
sahf
call
mov
or
and
stos
sub
inc
xor
push
and
imul
arpl
cmpsl
dec
pop
xchg
test
xchg
and
dec
ja
lods
push
cs
sub
mov
stos
out
mov
test
leave
and
pop
mov
push
mov
lret
cmp
pop
mov
sub
imul
lret
sub
mov
test
jnp
xor
and
fcoms
cmp
sbb
adc
rolb
xorl
icebp
xchg
pop
xchg
repz
add
pop
or
dec
and
out
add
mov
mov
or
data16
cmpsl
ljmp
movsb
icebp
add
push
mov
jns
ljmp
arpl
adc
inc
jmp
xor
popf
jnp
pop
or
std
pop
movsl
push
cmp
and
cmpsb
xor
sub
fdivrs
pop
mov
cltd
mov
jp
out
xchg
cli
dec
popf
outsb
rolb
out
jno
out
pop
popf
jmp
mov
movsl
inc
push
or
rorl
out
cmpsl
mov
sbb
nop
cltd
fistl
cmp
lea
hlt
fisubrs
iret
das
sar
cmp
fwait
and
and
cmpsl
ret
cmp
inc
pop
jb
fidivrs
in
fimuls
mov
and
fs
jge
scas
inc
aas
adc
dec
mov
mov
xchg
pop
xchg
jle
mov
xor
jae,pt
test
movsb
or
loopne
in
repz
push
sbb
insl
xorl
sbb
adc
fdivrp
aas
sub
repz
fists
lods
cmp
sbb
push
pop
xchg
gs
fwait
das
in
jae
sbb
adc
gs
add
cs
mov
daa
test
ja
iret
data16
push
xor
cmp
mov
into
push
xor
addl
inc
arpl
xchg
push
out
shlb
push
add
xor
repz
xchg
cmp
icebp
sbb
frstor
push
mov
test
aad
rorl
into
sub
ljmp
movsb
aas
testb
ficoms
push
push
mov
mov
and
insl
mov
xchg
inc
add
jnp
mov
int
lock
jle
xchg
sbb
outsl
or
bound
hlt
xchg
ret
sarl
or
dec
fldcw
ret
ja
testb
dec
iret
dec
cmpsb
in
jns
jp
inc
sbbb
test
inc
mov
ss
mov
adc
jbe
push
pop
lret
mov
xchg
lods
pop
popf
fwait
xchg
mov
cmp
xchg
testl
xor
and
sub
out
hlt
push
xor
dec
xor
add
jmp
in
or
or
in
lods
cwtl
push
mov
incb
cli
mov
sub
adc
in
shlb
imul
mull
fadd
stos
in
in
movb
lock
es
les
adc
cli
and
lock
jmp
shlb
jmp
shufps
flds
mov
adc
fs
mov
adc
je
mov
push
hlt
repnz
stos
mov
insl
jae
out
mov
sbb
shll
mov
mov
or
add
and
in
or
stc
mov
out
mov
dec
fistl
daa
shll
sarb
inc
push
jle
icebp
lahf
add
xchg
popf
js
jecxz
fcompl
icebp
int
cs
insl
clc
dec
adc
sbb
push
imul
mov
mov
mov
sub
cmp
imul
xlat
cld
push
ret
mov
fsubl
aam
mov
xchg
jg
ret
cld
mov
bound
mov
in
sub
sbb
fs
mov
jns
xchg
or
mov
xchg
xchg
imul
aam
xor
lahf
xorb
push
sub
mov
push
in
push
mov
popa
aas
aaa
out
inc
jg
popf
jno
std
push
push
xor
rorl
dec
mov
adc
aas
imul
lock
pop
cli
xchg
adc
sbb
lods
mov
iret
sbb
mov
in
mov
test
fwait
mov
lret
dec
popa
call
int
jne
mov
and
cmpsl
cmpsl
or
adc
movsb
cmc
out
fs
scas
adc
add
mov
pushf
mov
pop
pushf
je
fiaddl
or
stos
jle
rcr
pop
jg
pushf
push
mov
inc
sub
out
jns
mov
ds
pop
cmp
aam
ficomps
shll
push
adc
sbb
xorb
mov
shll
lret
inc
fwait
leave
dec
scas
mov
shrb
sub
xor
testl
mov
add
scas
shl
jp
or
sub
dec
jg
jmp
dec
les
xchg
mov
ret
and
dec
pop
dec
push
sub
adc
daa
mov
movsl
sbb
sbb
cmp
adc
adc
or
xor
mov
repnz
jge
mov
sub
out
mov
push
add
inc
adcl
jmp
ss
xchg
sub
stos
clc
loope
lahf
mov
fndisi(8087
repz
xchg
mov
jae
sbb
sahf
ret
insl
iret
xor
fistl
cs
in
inc
xchg
mov
scas
ss
shll
xchg
or
mov
jecxz
mov
mov
loop
sbb
leave
daa
fsts
les
cmp
xlat
in
mov
push
jge
xor
insb
fs
and
pop
mov
inc
je
cmp
enter
sbb
cmp
mov
hlt
leave
stos
cmpsb
imul
cmp
shl
xor
div
xor
sti
or
mov
je
lea
popl
add
pop
push
mov
mov
mov
sbb
jg
pop
mov
dec
and
movsl
int
test
loopne
mov
xchg
xchg
or
daa
cmpsb
pop
push
add
cmpsl
iret
cwtl
dec
adc
and
aaa
popf
pushf
mov
imul
ss
movsb
fistpll
mov
push
push
and
cmc
cmp
add
rcrl
add
adc
pop
sub
inc
shrl
cltd
push
fwait
push
out
cltd
imul
lret
sub
sbb
or
mov
rolb
call
pop
popf
ret
cmpsb
daa
cmpb
fldl
jae
jecxz
push
outsb
mov
pushf
fs
fcmovnbe
push
xor
mov
ja
mov
or
sahf
jns
loop
dec
aas
add
add
jno
mov
dec
jnp
nop
xor
adc
sbb
loopne
cmp
cmp
mov
sub
lea
fidivs
rolb
addr16
pusha
je
mov
mov
jp
movsl
pop
jns
pusha
mov
sub
icebp
xor
mov
pop
cmpsl
fdivrl
stos
testl
ljmp
push
lret
inc
and
jbe
and
sbb
push
and
adc
cmp
sub
jbe
cli
xchg
pop
pop
jns
rorb
and
pop
popa
mov
ljmp
int
jbe
aaa
inc
sub
xlat
subl
fdivr
jbe
stc
adc
aaa
ror
xlat
in
sbb
cmp
shl
fildll
push
out
fnstenv
out
hlt
data16
popa
in
jg
pushf
jle
sbb
sub
in
std
std
loopne
jb
and
lea
or
inc
out
cmpsb
pop
leave
mov
ret
jno
push
pop
addl
xchg
fnsave
pop
scas
fstpt
xchg
cs
cmp
in
outsl
adc
push
add
jnp
mov
mov
add
dec
in
push
clc
fcoml
adc
ljmp
icebp
adc
mov
sbb
push
fwait
mov
fidivrl
sahf
cmpsl
or
insb
mov
push
or
sub
xor
pop
sub
call
ret
decb
or
pop
sbb
daa
insb
sub
mov
popa
fldt
xorb
outsb
jne
mov
sub
push
pop
mov
xchg
adc
pop
push
mov
cmp
ds
lcall
push
arpl
rcll
cmp
lret
leave
sub
xor
adc
pop
in
mov
and
adc
call
iret
int
sbb
pop
test
and
sbb
adc
push
fdivrl
xlat
mov
addr16
push
mov
outsl
mov
hlt
sti
stos
push
mov
dec
or
movsl
rol
mov
arpl
push
adc
jmp
mov
scas
pop
negb
inc
or
xor
lahf
push
dec
xchg
mov
lahf
repz
xlat
and
movsl
inc
add
add
mov
sub
clc
push
pushl
adc
xor
push
imul
lcall
fwait
jmp
xlat
sbb
jnp
adc
cwtl
jae
xor
insl
daa
imul
sahf
push
sbb
pop
mov
scas
and
shl
mov
in
xchg
dec
push
shrb
fsub
jmp
mov
dec
sbb
ja
sub
pop
test
movsb
adc
jb
aas
std
hlt
test
pop
mov
xor
mov
test
cmpsl
das
mov
lahf
pusha
xchg
in
aad
sub
push
sub
cli
mov
jne
dec
jo
pushf
scas
mov
jg
jb
ljmp
add
mov
subl
call
test
and
cli
sub
cli
sbb
call
fdivr
addr16
adc
cld
loope
xor
movsb
popf
adc
int
les
inc
rorb
mov
pop
push
loope
mov
jns
ret
mov
mov
test
jl
pop
xchg
adc
pop
mov
mov
cmc
cmpsb
iret
pusha
bound
mov
lret
std
mov
in
inc
imul
push
xchg
movsb
daa
pop
jno
xchg
dec
jnp
sti
pop
add
inc
mov
add
adc
das
js
inc
jbe
aaa
xchg
nop
dec
inc
push
repnz
push
add
jne
mov
push
cmpsb
xlat
pusha
imul
in
inc
pop
lcall
ja
sbb
repz
push
out
hlt
cwtl
out
cli
test
cmc
mov
lret
gs
mov
or
pusha
scas
push
call
push
xor
mov
icebp
jge
inc
loop
cmp
or
std
jno
sub
andb
or
ds
stc
fstl
mov
fstl
sub
ret
pop
inc
lcall
pop
dec
into
push
inc
xor
das
sbb
addr16
or
movsb
sub
hlt
mov
jno
jle
add
insb
jmp
loopne
mov
jl
out
mov
mov
fwait
sti
pushf
scas
inc
or
les
mov
lods
sti
cltd
in
mov
cmp
pop
ror
aas
or
mov
xchg
mov
push
lods
jnp
cwtl
shrb
jbe
and
xchg
sub
out
roll
push
stos
les
inc
jnp
sbb
inc
repnz
sbb
movsb
push
pop
imul
dec
push
out
arpl
aas
shrb
cli
pop
fxch
mov
enter
subb
cmp
jo
aam
and
inc
mov
push
mov
mov
aam
repz
mov
sub
js
xor
jge
aas
push
xor
bound
js
testb
movsl
pop
jb
outsb
mov
jle
das
loopne
xchg
push
insl
pusha
pcmpgtb
mov
dec
inc
cmc
test
mov
or
leave
pop
mov
je
or
jae
jnp
add
jns
xchg
cmpsl
fiaddl
dec
jle
ss
push
pop
mov
je
mov
out
in
andb
add
xor
jns
lods
aas
imul
mov
mov
fcmove
inc
ss
lock
xor
sbb
jo
ljmp
mov
rcrb
mov
add
xlat
mov
in
adc
jns
xchg
test
in
ret
es
test
out
mov
jge
dec
push
ljmp
repz
out
test
adc
xchg
jbe
xor
out
cmp
push
fidivrl
xor
int
mov
xor
dec
mov
push
mov
call
out
mov
inc
mov
xor
jbe
int3
cltd
popf
aaa
adc
push
pop
in
imul
push
or
mov
imul
push
cltd
imul
das
das
dec
push
das
in
push
dec
sub
lock
out
out
roll
inc
gs
inc
or
cmpsb
add
lock
icebp
lods
mov
sbb
dec
sub
mov
cmp
fsubp
ret
test
pop
jbe
add
push
sbb
das
dec
push
cmp
ljmp
out
vmwrite
js
pop
fmul
mov
or
int3
push
cmp
sbb
inc
idivl
xor
dec
lret
cltd
push
dec
and
push
test
mov
shlb
cmp
push
add
sbb
sbb
mov
loope
mov
idivl
adc
and
inc
add
push
movsl
aam
cmp
test
ficoms
lcall
mov
outsb
outsl
push
or
mov
rorl
and
xchg
pop
movsl
sbb
into
push
mov
pop
xor
mov
scas
dec
movsl
xor
arpl
push
push
add
jmp
pop
mov
fs
push
cltd
divb
add
test
add
cld
out
shl
in
sub
inc
dec
nop
scas
in
pop
popa
push
sti
test
push
jbe
or
ret
mov
je
and
sub
rol
mov
xchg
mov
mov
xchg
pop
push
cmpl
std
adc
and
and
mov
dec
lret
mov
popa
nop
mov
cmpl
enter
test
int3
push
add
call
and
imul
xchg
or
das
jae
lcall
inc
and
loopne
inc
jb
test
inc
xchg
pop
jb
mov
fdivs
jecxz
insb
outsb
or
cltd
or
scas
shr
jne
insb
dec
inc
shrl
push
add
pop
cs
lcall
and
dec
pop
mov
fs
xor
rclb
pop
mov
mov
mov
xlat
xchg
ret
push
mov
xchg
ja
movsl
hlt
pop
or
pop
fwait
int3
inc
movsl
rorb
test
fldt
push
ss
in
icebp
inc
or
sbb
sbb
push
mov
les
jge
jmp
data16
push
mov
jg
adc
and
dec
stos
and
push
stc
jg
dec
ret
push
shl
ja
int3
hlt
sbb
jge
mov
sbbl
sbb
cmp
aaa
hlt
or
outsl
push
pusha
imull
loopne
sbb
mov
jns
jl
sahf
jle
inc
lret
ljmp
ds
out
xor
les
xchg
fsubl
mov
outsb
pop
mov
fisttpll
stos
xor
pop
adc
and
fisttpll
dec
sub
es
and
xchg
dec
add
add
add
cmp
and
negb
daa
mov
mull
sbb
leave
push
lret
push
cmp
mov
rcrl
inc
arpl
inc
mov
rcrl
call
test
sub
mov
addr16
movsb
mov
dec
lcall
repz
stos
inc
jl
sbb
movsb
dec
daa
adc
in
inc
lock
xchg
out
into
adc
pushf
jmp
push
iret
ds
push
push
fistpll
clc
sahf
inc
mov
sub
rorb
subb
es
jns
outsb
jg
jbe
pop
scas
adc
mov
lea
jbe
lods
mov
ja
mov
lds
cwtl
cmpsb
pusha
or
cld
js
pop
imul
enter
daa
fistps
inc
rcl
sbb
pop
xchg
les
std
testb
pop
push
add
cmpl
or
imul
gs
add
enter
pop
inc
sub
sti
and
and
pop
arpl
jnp
push
std
std
sarb
mov
or
cmpsb
fs
cmpsl
push
xchg
hlt
int3
div
add
add
add
mov
xor
add
shll
cmc
xlat
test
dec
and
pop
sbb
ja
jne
sahf
pop
cmpsl
das
out
push
mov
xchg
mov
sub
lds
test
or
mov
and
sbb
daa
xchg
aam
push
testb
or
mov
fists
xchg
and
std
inc
adc
test
leave
adc
cmp
dec
cmp
fadds
jle
xor
lcall
adc
pop
cmp
cwtl
cmpsl
fmuls
outsl
xchg
nop
lods
sub
push
pop
jae
dec
psubusb
inc
or
stos
imul
cltd
inc
mov
xchg
aas
shll
loope
mov
sahf
shll
mov
xor
pop
dec
pop
jge
stc
mov
add
push
pusha
jmp
adc
rorb
bound
jp
pop
daa
ja,pn
inc
lret
popf
jecxz
pop
push
loope
test
rep
fimuls
das
or
and
push
xor
push
test
je
sub
adc
or
dec
shrb
test
pop
pop
jecxz
rcll
push
push
push
jb
adc
jb
ret
lock
fildl
scas
clc
stc
dec
gs
inc
cmp
jne
movsb
xchg
jmp
cmp
in
ret
add
loopne
add
into
adc
sbb
dec
fs
fmuls
push
mov
xchg
pop
xor
dec
inc
iret
shll
addb
sbb
popa
dec
cwtl
out
jno
movsl
push
adc
push
std
adc
mov
scas
pushf
jbe
inc
fldl
cmp
pop
lock
push
add
dec
mov
movsl
fst
js
iret
mov
loop
std
mov
gs
aam
mov
ljmp
decl
sbb
xor
dec
mov
sbb
add
fistl
pop
xor
and
add
dec
or
and
jge
ds
imul
cmp
cltd
jmp
dec
mul
inc
scas
cmpsb
mov
movb
mov
xor
enter
in
fisubrs
pop
pop
cmc
popf
adc
sbb
dec
aas
test
out
sbb
popf
ja
iret
inc
cmc
icebp
sub
stos
mov
cwtl
rorb
lahf
fcoml
pop
cmp
jnp
xchg
mov
xchg
stc
sub
or
pop
inc
push
mov
mov
pushf
maxps
jno
mov
loope
xor
adc
sub
inc
jb
add
xor
fcmovu
xchg
int
test
pushf
pop
movsb
data16
icebp
scas
pop
sbb
sub
xchg
inc
popa
cwtl
and
fiadds
stos
push
iret
out
jle
xchg
pop
addr16
inc
push
xor
insl
pop
adc
jne
sub
test
mov
xchg
and
imul
sbb
inc
aaa
sub
or
or
loope
dec
repnz
pusha
shlb
xchg
arpl
inc
inc
xor
outsl
mov
lret
mov
pop
push
dec
in
dec
movsl
jle
sbb
push
cltd
add
push
imul
pop
test
std
inc
fwait
dec
inc
dec
jne
fimull
insl
cwtl
decl
jge
or
call
test
jmp
nop
mov
lock
int
out
stos
xor
rcl
mov
addr16
jg
stos
dec
dec
arpl
mov
or
inc
sbb
pop
add
imul
cmp
ret
dec
xchg
enter
xor
inc
xchg
dec
jno
out
notl
aas
stos
sub
or
lret
pop
out
mov
test
and
adc
cli
test
mov
push
push
ret
xchg
cmp
add
mov
cmp
ja
mov
push
js
lock
xor
xchg
lods
pop
dec
mov
es
and
xor
pop
scas
imul
leave
jle
imul
test
mov
add
xor
add
or
cmpsb
outsb
inc
pop
sub
sbb
xchg
lea
adc
push
loope
lcall
stos
mov
jecxz
push
add
shl
push
outsl
fucomip
cmpsb
xchg
int3
rclb
in
and
pop
lcall
mov
xor
pop
dec
mov
mov
sbbl
stos
pop
ds
lock
jb
sbb
sbb
xchg
sub
push
pop
pop
mov
fimuls
mov
jns
or
pop
adc
push
nop
fldt
sub
scas
inc
pushf
push
fistpl
cmp
dec
aam
repnz
push
jns
jg
push
repz
cltd
das
divl
cli
cmp
in
jecxz
fimuls
push
jge
aad
imul
mov
aad
inc
ds
dec
xchg
movsb
cmp
sbbb
call
sahf
test
pop
xor
dec
jecxz
ljmpw
xchg
or
je
lcall
inc
xor
or
xchg
push
xchg
mov
imul
scas
push
shl
xchg
mov
mov
scas
fldt
push
pusha
mov
xchg
sub
mov
xlat
imul
rcrl
xor
inc
push
xchg
hlt
stc
adc
xchg
mov
inc
mov
push
jle
and
aam
xlat
xchg
out
pop
push
ret
inc
add
rep
or
jb
xor
sub
pop
push
lock
dec
das
pop
inc
out
push
xlat
jnp
sti
js
cmpsl
jno
fiadds
inc
nop
fmuls
mov
rclb
lcall
loopne
popa
pop
adc
push
or
test
and
xchg
pop
and
in
rcrb
pop
pop
pop
nop
xor
scas
mov
or
sbb
jmp
mov
and
inc
mov
pop
sbb
xchg
xchg
mov
sbbb
into
xor
outsl
int
sub
sbb
loopne
pop
sub
shl
or
mov
leave
sbb
jle
mov
sahf
push
sub
inc
jno
bound
jp
mov
mov
out
es
test
add
lret
mov
add
fwait
and
daa
push
enter
jl
mov
inc
push
fsubp
push
and
xchg
loop
push
cmp
fidivrs
dec
gs
rcl
rolb
lea
jecxz
bound
pop
cwtl
rorb
sbb
outsl
fstps
inc
sbb
mov
test
mov
mov
iret
pop
loope
daa
bound
cmpsl
jl
xor
imul
es
mov
scas
fucomi
popa
dec
hlt
mov
jmp
cmpsl
lret
push
push
dec
in
mov
lcall
std
out
fstpt
fwait
mov
sbb
mov
movsb
sub
push
jle
mov
or
fmul
insb
xchg
mov
dec
aad
inc
sbbl
xor
iret
fists
negb
cmpsb
pusha
mov
or
sub
in
mov
mul
gs
je
mov
mov
add
leave
add
insb
cmp
push
mov
ds
dec
and
mov
stos
mov
roll
sbb
mov
inc
in
orb
jo
cmpsb
and
cmpsb
lahf
mov
dec
fists
sbb
and
jae
and
lahf
jge
and
mov
xchg
cmp
rcrl
stos
mov
adc
fsubl
repnz
push
sbb
push
mov
andb
cmpsb
jge
daa
xchg
sbb
scas
out
push
xor
jmp
add
cmp
dec
dec
push
push
mov
push
mov
imul
enter
pop
cwtl
push
add
movsl
mov
movupd
mov
hlt
sbb
lea
dec
sahf
pop
lds
adc
aaa
adc
or
dec
xor
lock
insb
dec
add
cltd
insl
cmpl
jmp
iret
pop
xchg
adc
push
outsb
mov
ret
xor
xor
cmp
retw
mov
mul
out
push
in
push
fimull
mov
fisttps
mov
gs
jbe
push
mov
jns
mov
inc
lods
cmp
adc
cmc
rcrw
mov
stos
mov
loopne
ret
test
jecxz
cmpsb
mov
inc
mov
cmp
addb
sub
push
mov
into
sub
cmp
push
mov
andl
add
pop
into
enter
mov
aam
dec
cltd
inc
adc
jmp
iret
xchg
imul
dec
sahf
adc
lods
test
add
std
je
lds
inc
xor
or
jmp
push
lret
mov
repz
sbb
pop
stc
mov
push
mov
add
addr16
in
mov
inc
or
fildl
cmp
and
add
xchg
adc
js
lods
fisttpl
pop
inc
cli
test
in
pop
test
enter
push
adc
add
call
imul
xchg
movsl
mov
call
adc
mov
dec
or
iret
dec
xchg
jle
imulb
dec
mov
adc
mov
ret
ljmp
lds
shlb
cmp
push
ja
push
imul
fisubrs
pop
add
sbb
nop
xor
mov
stos
inc
pop
lock
jns
inc
loop
cmpsl
inc
xorb
adc
test
mov
xchg
fs
mov
xchg
loopne
out
push
adc
and
repnz
iret
stos
incl
iret
sbb
cmp
mov
gs
cmpsb
mov
jno
cltd
sbb
out
cmpsl
mov
jle
xor
push
and
call
pop
sbb
inc
int
push
aaa
icebp
test
sbbb
sub
mov
and
fcomps
xor
stc
mov
add
add
lret
jecxz
aam
inc
dec
jns
pop
add
pop
fcmovbe
sbb
int3
lea
mov
icebp
pop
add
and
mov
orb
ficoms
adc
subl
ds
inc
xchg
popf
sti
jnp
mov
sbb
movlps
mov
jg
sahf
pop
in
ja
xchg
bound
push
jl
or
push
dec
xchg
inc
adc
mov
sbb
mov
mov
out
inc
xchg
dec
sbb
lret
jp
push
dec
ds
xchg
es
fildl
js
mov
xor
and
sbb
xor
daa
push
je
xchg
mov
inc
pushf
pop
inc
mov
mov
dec
enter
movsb
insl
das
xor
decl
movsb
cmp
dec
mov
aam
mov
mov
adc
push
mov
pop
add
pop
lahf
push
inc
xchg
cld
adc
mov
cmp
inc
push
sarb
inc
out
push
mov
inc
adc
xor
icebp
cli
push
jns
sub
enter
hlt
fistpl
gs
xchg
adc
movsl
popa
movsb
int3
cmp
or
xor
repz
jne
push
jge
push
xchg
ja
xor
fsubrp
jecxz
dec
xchg
xor
or
pop
inc
inc
into
xor
and
jb
mov
pop
add
rorl
leave
lret
mov
push
cmp
dec
scas
icebp
jno
test
push
incb
inc
sub
push
pop
mov
nop
dec
in
fsubr
cmp
push
popf
push
clc
shll
pop
mov
xor
pushf
ljmp
fisubrl
cmp
xchg
mull
into
test
xchg
lock
imul
pop
and
sub
movsl
mov
mov
mov
negl
enter
sbb
jns
inc
push
add
fwait
test
aam
hlt
jecxz
pop
add
icebp
pop
cltd
lods
out
or
and
lahf
fldenv
cmp
dec
dec
xchg
cli
add
mov
movsl
push
out
testl
arpl
jo
ficoml
dec
mov
push
pop
out
fwait
sub
jle
clc
mov
push
sarb
cmp
jbe
fsubrs
and
xchg
ficompl
gs
adcl
xchg
xor
arpl
daa
shrb
adcb
scas
cmp
add
aas
dec
ss
add
repnz
mov
loopne
pusha
inc
push
pop
mov
add
add
nop
inc
imulb
pop
jg
ljmpw
int3
push
xchg
in
lret
test
cs
repnz
dec
and
jg
dec
mul
mov
shlb
mov
cmpsb
pusha
cli
movsb
sbb
sbb
sub
jp
or
xchg
xchg
add
rcr
lahf
fsubl
push
js
dec
push
inc
inc
pop
mov
cmpsl
pop
stc
mov
cmp
xchg
in
sub
je
in
les
inc
mov
mov
testb
fdivrl
mov
xchg
pcmpgtb
sub
test
lea
add
mov
mov
and
xchg
push
enter
jb
lahf
lcall
rcrb
mov
imul
pop
and
rolb
movsl
xchg
scas
mov
inc
cmp
or
add
xor
aad
mov
push
adc
int3
jo
add
xchg
sub
push
pop
sbb
ds
outsl
push
mov
sub
stc
xor
popf
sub
out
pushf
push
pop
idivb
leave
dec
mov
fmuls
fldenv
push
jns
rcl
scas
jnp
std
inc
movsl
or
xor
adc
lds
cmp
imul
stos
mov
rcll
jo
push
out
outsb
mov
cmpsb
repnz
ret
out
ja
mov
mov
test
fnstsw
mov
out
sarl
popf
sub
mov
and
pop
mov
sar
jae
lods
mov
iret
xchg
push
je
negl
xlat
jb
jecxz
js
push
andb
icebp
mov
xchg
mov
test
outsb
les
cwtl
pusha
xor
adc
out
dec
outsb
std
xor
orl
test
movsb
mov
arpl
jmp
fdecstp
add
rcll
cli
jl
mov
aas
shlb
loop
enter
aad
inc
lea
adc
repz
mov
aam
cmpsb
jmp
sbb
adc
mov
ds
getsec
pop
cmp
test
test
adc
shll
shlb
movq
scas
out
ljmp
xor
adc
cmpb
out
pushf
cld
daa
aaa
push
xchg
stc
enter
sti
adcl
test
mov
sbb
jecxz
pop
push
pop
ljmp
test
cwtl
sbb
std
test
fldt
push
push
das
adc
imul
inc
sub
stos
pusha
inc
out
imul
lock
shrb
fimull
mov
sbb
xchg
pop
jl
es
ss
sub
lret
insb
xchg
test
loopne
imul
cmpsb
push
shl
enter
sub
mov
les
cwtl
mov
jae
aam
cltd
mov
loop
add
xor
cltd
cmpsb
arpl
cmp
stos
push
sti
popa
cmpb
cmp
aas
outsb
lock
or
test
imull
or
xor
mov
jae
addr16
sarl
test
push
push
popa
jae
and
xor
es
ss
fsubl
or
jle
das
cwtl
daa
loopne
adcl
push
and
scas
sbb
mov
inc
inc
insb
ss
js
or
jns
xchg
das
outsb
xor
movsl
xchg
dec
and
cwtl
pop
cmpb
mov
adc
rcr
mov
jge
scas
bound
int
bound
jnp
xor
fcmovnbe
fnsave
lret
adc
in
xchg
jle
test
inc
stos
popf
cmp
sahf
ljmp
insb
and
pop
cmp
leave
aam
lds
jne
inc
push
and
mov
and
mov
sub
mov
or
mov
pop
hlt
mov
data16
cmp
mov
sahf
pop
xchg
scas
cmp
sbbb
and
xchg
sub
cld
repz
push
jmp
fwait
out
clc
cwtl
repz
cmpsb
inc
sahf
je
cld
fs
inc
or
cli
mov
fstpt
xlat
dec
or
push
fwait
inc
dec
dec
inc
push
fcomi
mov
popf
filds
adc
int
push
fnstenv
roll
xor
je
std
fldcw
lods
or
dec
sub
adc
pop
dec
push
movsb
push
pop
add
mov
fdivr
lret
out
lahf
sub
mov
and
cmpsl
or
lock
xchg
mov
icebp
xchg
add
or
push
jb
movsb
adc
mov
inc
xor
out
in
push
pop
out
cld
pop
cmp
cmpsb
pop
cld
movsb
cwtl
pop
sub
stc
les
pop
xchg
pop
faddp
movl
push
mov
add
or
addr16
lds
data16
test
iret
test
push
aam
push
sbb
das
push
in
loopne
pop
push
xchg
push
jb
repnz
mov
in
cmp
cltd
pop
sahf
pop
jmp
cltd
data16
sub
mov
imul
sbb
mov
adc
fildll
add
mov
aam
push
js
fpatan
push
mov
inc
and
sbb
imul
mov
mov
adc
test
mov
or
xchg
push
outsl
or
out
mov
or
sti
sub
inc
pop
lcall
or
or
dec
pop
push
fwait
inc
in
movsl
pushf
jecxz
mov
mov
loop
les
mov
push
lret
fdivr
lret
lret
mov
mov
js
into
jne
ss
mov
lea
std
stos
sbb
psubsw
arpl
shll
jbe
xor
addr16
adc
push
push
add
mov
notb
mov
rcll
lahf
or
int3
pop
dec
notl
sub
cmp
inc
pop
test
data16
jae
xor
loop
sbb
pop
xchg
cmp
and
or
dec
mov
bound
mov
sbb
mov
adc
xchg
fstl
mov
mov
mov
aaa
inc
pop
test
outsl
xor
lock
mov
mov
mov
dec
bndstx
or
fidivrs
fisubl
or
jg
add
adc
adc
shrb
negb
xor
xchg
xor
add
insb
popa
fldl
add
jne
cld
pop
fildl
pop
mov
sahf
push
lret
stos
dec
or
xchg
inc
imul
mov
adc
pop
sub
mov
shll
ja
pop
sbb
pop
enter
lock
cwtl
cmp
adc
dec
xor
and
stc
aas
sub
dec
xor
ds
jbe
repnz
push
mov
jnp
or
sbbb
sbb
int3
aad
sbb
xor
ret
inc
mov
loope
push
hlt
cwtl
fists
sub
les
shr
or
ret
cmp
jg
hlt
movntq
cmpsl
sbb
jo
out
lods
and
mov
in
test
iret
faddp
fwait
xchg
test
mov
push
jp
out
jle
lock
xchg
inc
push
cmp
dec
pop
mov
pushf
push
mov
fistpll
andb
push
repnz
xor
ljmp
mov
lea
mov
pushf
cld
lds
pop
fisubrl
xor
mov
xchg
fistpl
in
push
lods
scas
xchg
jo
movsl
insb
cld
insl
pop
rcr
adc
in
fldt
orl
cmpsb
hlt
sbb
aad
mov
int
cwtl
or
inc
outsb
insl
xchg
sub
mov
pop
jns
cmp
push
rorb
push
lcall
pop
mov
sub
int
dec
push
jmp
leave
clc
filds
movsl
repnz
hlt
xchg
je
and
mov
int3
ljmp
test
push
mov
outsl
std
ffree
rorl
pop
pop
ljmp
or
insl
xchg
push
outsl
out
and
aaa
fwait
in
add
scas
cs
clc
mov
pop
imul
sbb
andb
and
ficoms
xchg
push
daa
cltd
xchg
insl
test
cli
stc
mov
adc
call
pop
xor
jmp
iret
xchg
xchg
jecxz
push
push
popf
daa
dec
lds
aad
push
adc
scas
fwait
ss
repz
aad
in
jns
hlt
jmp
or
cltd
inc
inc
js
data16
fstp
insb
or
enter
aam
fucom
adc
scas
mov
shll
jle
push
stos
xchg
outsb
jl
mov
in
in
or
inc
out
jae
jge
xchg
insl
xor
inc
push
stos
pop
dec
lea
jg
int
xor
std
and
xchg
or
mov
inc
pop
out
add
ja
lcall
js
popf
mov
es
push
xchg
and
xor
aam
xchg
add
loop
dec
inc
mov
stos
addl
loop
mov
and
daa
mov
mov
xchg
push
in
push
out
in
addr16
and
in
cmp
xorb
scas
test
movsb
leave
pop
aam
ja
xchg
or
stos
test
scas
cmc
sbb
xchg
lods
je
mov
sbb
rcr
jp
clc
aad
outsl
fs
mov
test
push
test
cli
lods
repnz
adc
adc
les
mov
add
inc
mov
imul
imul
imul
psrld
in
sub
jb
aad
dec
lock
xchg
ja
popf
loope
sbb
push
mov
jmp
rcl
daa
fs
pop
jo
xor
xchg
hlt
jg
jmp
xchg
jno
inc
es
call
push
mov
test
jne
fs
dec
xchg
pusha
mov
lret
cmpsl
and
xchg
jmp
dec
cmp
repz
int3
dec
negb
popa
faddl
int
in
dec
enter
clc
leave
push
int
subl
jo
mov
and
clc
pop
mov
popf
xchg
mov
xchg
inc
cld
inc
subl
mov
xor
inc
mov
nop
pop
mov
lds
fbld
call
mov
sbb
fldl
push
in
es
fidivs
adc
jb
push
rcr
dec
mov
scas
sbb
pop
pop
pop
push
scas
cld
loopne
and
shrb
dec
int
push
and
inc
sub
adc
jo
in
dec
push
adc
jmp
push
testl
roll
xchg
int
lea
adc
and
inc
jmp
adc
cwtl
jnp
sbb
jecxz
shll
mov
adc
loopne
daa
and
mov
int3
into
loopne
or
jb
adc
aam
loopne
xchg
xchg
int3
in
popf
mov
icebp
or
push
fistps
or
incb
xor
stos
and
mov
outsb
ljmp
mov
insb
fildll
jnp
mov
jno
movsl
ljmp
aas
mov
cld
add
ja
ss
hlt
pop
pop
mov
adc
jnp
ljmp
dec
jbe
push
push
aad
cmp
out
cmp
and
js
les
mov
xchg
std
lret
idivl
sub
test
adc
ret
pop
xor
into
and
push
mov
pop
sti
xchg
mov
add
jbe
inc
les
stos
xchg
fwait
jnp
shl
pop
pop
and
aad
add
imul
es
repz
mov
jns
in
negl
push
pop
adc
mov
sti
aaa
or
cmpb
sbb
xchg
pop
xor
adc
and
and
shlb
aam
stos
rcl
aaa
add
daa
lds
sbb
jmp
sub
mov
sbb
out
movsl
xchg
popa
imul
addr16
sbb
push
fbstp
shlb
call
xor
fistl
xchg
xchg
pop
pop
test
xor
shl
add
xor
xchg
cmpl
in
cmc
xor
imul
cli
int
jne
cwtl
mov
mov
cmpsb
inc
ret
or
sub
lcall
stos
add
xchg
lret
shlb
and
inc
imul
push
lea
iret
int
and
mov
jg
rcll
popf
add
or
jge
jb
loope
add
les
adc
jmp
xor
xor
out
dec
add
mov
in
fst
aam
inc
jnp
mov
xor
xchg
mov
ret
inc
sahf
mov
mov
js
pop
inc
aaa
popf
push
xlat
mov
aad
mov
sahf
dec
sub
adc
lock
add
stos
mov
push
stos
jg
daa
out
call
repnz
daa
adc
inc
dec
ficoms
mov
inc
or
fcom
subb
mov
imul
jae
out
cmp
pop
outsb
sub
add
cmp
add
xor
mov
insb
push
test
nop
cmp
mov
outsl
xor
aas
adc
sbb
es
lds
sbb
inc
pop
push
sbb
sub
sbb
in
mov
jbe
aas
cmpsl
pop
xchg
in
mov
inc
testl
and
insb
push
daa
test
or
cmp
pop
mov
iretw
or
fiadds
inc
cmc
mov
jmp
fcmove
movl
aam
pop
pushf
js
push
sub
setp
das
sub
pop
cmp
pop
cld
fidivrl
push
loopne
mov
lods
lret
test
mov
idivl
cmp
inc
xchg
adc
icebp
pop
inc
xchg
sbb
aam
jmp
cmp
mov
dec
jle
mov
push
jmp
sahf
notl
scas
adcl
cmp
push
lods
movsb
cmp
lcall
mov
add
cld
fists
push
fisubrs
mov
and
loopne
cmp
test
pop
jl
shll
pop
jge
or
int3
xlat
adc
add
push
pop
push
xchg
xchg
mov
sarl
loopne
push
pop
cmpsb
notl
je
and
mov
fistps
xchg
sbb
mov
or
or
imul
notb
cmpsb
push
in
jo
ljmp
add
mov
dec
mov
jl
inc
imul
lods
inc
pop
nop
push
push
cmp
xor
xor
call
insl
push
fs
inc
pop
test
push
vmovdqu
or
jle
xor
lret
xor
insb
outsl
lcall
dec
cmpsb
inc
sbb
rcrl
in
jbe
mov
pop
xlat
clc
mov
dec
es
jb
es
lret
xor
scas
icebp
out
adc
subb
inc
lea
cmpsb
mov
pop
insb
stos
icebp
lods
xchg
imul
add
ljmp
xchg
aas
jbe
and
ja
in
inc
mov
cmp
popf
imul
dec
jno
or
fdivrl
or
push
orb
jbe
lea
dec
cmpsb
mov
cwtl
and
lret
inc
mov
dec
mulb
in
adc
sbb
hlt
ljmp
pop
cs
cmp
or
ret
out
out
outsb
ljmp
pop
push
in
mov
xchg
inc
jecxz
mov
or
pusha
jmp
and
lods
inc
dec
jle
xchg
or
pushf
cmp
sub
fildll
dec
cltd
fstp
pusha
mov
loopnew
cmc
and
jb
lret
popa
les
adc
ljmp
add
xor
push
shlb
mov
add
or
std
cmpsb
aad
addl
mov
test
xchg
insl
popa
dec
mul
push
imul
stos
sbb
daa
mov
nop
incl
inc
add
test
pop
shlb
sahf
hlt
or
sub
ret
out
cmpsb
xor
push
das
int3
lahf
aad
xor
jg
cmp
jo
mov
call
call
add
push
fwait
push
enter
and
aad
sbb
pop
mov
cmp
inc
out
lds
xor
cmpsl
jne
lock
cmp
cmp
adc
and
push
inc
in
fwait
gs
test
xchg
pop
mov
dec
ret
and
outsl
in
xlat
aas
fs
repz
xchg
or
mov
push
xor
xor
loop
cmp
jl
iret
and
mov
loope
pop
out
sti
jb
insb
dec
dec
inc
mov
stos
xor
or
and
dec
int3
ss
icebp
or
mov
mov
mov
add
jns
mov
sub
pop
ror
mov
xchg
shr
xchg
mov
cmpb
aad
pop
mov
movd
call
push
js
movb
out
in
inc
loope
hlt
lds
mov
pmullw
lahf
lock
push
sbb
or
loope
xor
inc
jp
sub
pop
sub
loop
test
push
clc
inc
sbb
and
push
push
xor
test
stc
mov
ss
cld
es
jp
sti
loop
xor
ds
pop
pop
sbb
sub
lret
cmp
fstpt
and
add
ds
scas
xchg
es
jl
xor
lahf
imul
aaa
fmull
cld
inc
xchg
out
dec
xor
mov
leave
lock
popa
xor
adc
js
xchg
ror
mov
jecxz
mov
inc
lea
cmc
adc
pop
arpl
xor
dec
lds
push
incl
mov
stc
dec
mov
inc
lahf
loopne
addr16
xchg
dec
lds
outsb
lds
mov
cmp
jo
add
ds
test
sbbl
xchg
mov
ret
push
jmp
stos
mov
out
xorl
inc
sub
xor
sarl
inc
inc
mov
sahf
ds
out
mov
inc
sbb
lahf
cli
push
jnp
subl
cmc
cmp
jo
lret
das
sub
jl
lahf
cmc
inc
ret
pop
xor
in
inc
or
or
arpl
and
dec
fldt
xchg
jmp
sub
insl
jp
scas
idivb
in
sbb
xchg
into
push
xor
stos
pusha
or
into
jb
cmp
and
movb
or
fstps
cmp
lock
and
or
insb
lea
jne
movsl
pop
cmpsl
mov
xchg
add
add
pop
xor
sbb
add
mov
test
pushf
adc
jbe
mov
xor
add
sub
cmpsb
mov
inc
jecxz
stos
xchg
lahf
notb
daa
jae
xor
mov
mov
into
jecxz
dec
sbb
jl
sbb
adc
sahf
add
cmp
mov
cs
imul
in
stc
cli
or
dec
in
int3
mov
aam
sbb
notb
mov
fwait
std
sub
push
out
inc
push
mov
gs
mov
jl
daa
lock
pop
jp
add
adc
and
mov
push
mov
scas
loop
das
sbb
cmp
push
fdivr
cld
add
jne
in
jns
jg
movsl
sbb
pop
test
sbb
lret
mov
mov
jae
cmc
lret
cld
fidivrl
jbe
addr16
mov
inc
lds
mov
and
jp
cwtl
xlat
fstps
mov
imul
inc
jecxz
mov
lods
ja
sub
mov
test
cli
fs
fcompl
lret
fwait
cs
jo
int3
fwait
int
jne
aad
stos
dec
rep
sbb
inc
shl
pop
movsl
sub
push
jne
jne
sahf
aam
dec
xor
inc
mov
mov
add
mov
cmp
push
jecxz
rorb
and
pop
inc
lock
jbe
dec
mov
sub
sbb
out
dec
jmp
mov
aaa
stos
jae
mov
sub
xor
lods
mov
inc
popf
or
xor
inc
xor
fsubrs
push
iret
pop
in
xchg
mov
loop
ljmp
scas
push
adc
fsubrs
test
fists
inc
mov
xchg
das
sahf
lea
rorl
mov
popa
sbb
pop
xlat
test
sbb
imul
enter
std
push
pop
je
or
icebp
imul
movsl
xorb
mov
mov
cmpsb
inc
jo
mov
xchg
int3
lods
lret
fiadds
push
decb
cld
xchg
mov
xor
adc
or
aad
dec
jg
jbe
sbb
cmpsb
jno
loopne
aam
pop
adc
and
jno
pop
cmp
hlt
out
jae
inc
mov
push
inc
and
in
xor
dec
mov
add
mov
loope
mov
jp
cmp
and
jbe
lret
pop
sbb
sbb
jo
lods
xor
fmull
addl
aam
jmp
cmpxchg
xlat
lcall
and
adc
mov
movsl
rcrb
pop
inc
es
ss
out
movsb
dec
adc
pop
cld
stc
das
sub
scas
call
movsb
cmp
repz
in
push
and
pop
push
xchg
arpl
sub
rorl
out
push
shrl
call
cltd
adc
mov
pop
daa
add
cwtl
push
jmp
or
call
xchg
in
idiv
jge
jle
inc
xor
in
or
imul
rol
jmp
sub
jmp
mov
fdivs
cmp
insl
pop
hlt
loope
movsb
add
mov
lods
aam
sub
dec
lods
into
dec
and
dec
add
or
push
sti
repnz
push
pop
push
ret
adc
jmp
or
rorb
sarb
mov
shll
rorl
sub
in
sub
dec
fstl
mov
xor
mov
xor
jo
sub
pop
daa
stos
dec
mov
gs
int
xor
jo
rcrb
and
sbb
pop
push
hlt
push
lret
fildll
xor
lods
mov
repz
push
xlat
jecxz
shlb
mov
lds
sbb
sbb
sbb
mov
js
lea
test
pop
sbb
xor
mov
out
into
mov
mov
push
dec
jl
xchg
xlat
aam
pop
les
sbb
mov
bound
iret
xor
out
cmpsl
outsb
xor
push
sub
pushf
in
inc
call
imul
lret
fs
jno
and
je
cltd
sti
mov
stos
in
push
pop
sbb
mov
inc
pop
mov
inc
push
inc
inc
sahf
jne
insl
dec
push
icebp
pop
into
xchg
sub
cmc
pop
int3
out
sbb
fdivrs
dec
pop
mov
test
pop
lret
mov
mov
rclb
mov
add
aam
je
outsl
pop
jmp
aaa
mov
cmpsl
sub
dec
adc
jp
pop
int3
inc
pusha
and
stc
sbb
in
cwtl
cmp
xchg
cmp
outsb
xlat
call
or
pop
pop
test
shll
jne
or
and
cmc
xlat
in
xor
xchg
sub
xchg
lods
jecxz
sub
stc
mov
mov
xchg
iret
cmpsb
ficomps
sub
pushf
mov
mov
std
inc
call
fwait
dec
fs
into
mov
scas
mov
sarl
inc
push
sbb
out
lock
inc
data16
jp
adc
xchg
imul
adc
xor
and
fwait
mov
inc
jge
mov
adc
flds
pusha
mov
out
std
inc
or
in
sub
pop
xchg
popa
lcall
test
enter
xor
xchg
call
sar
call
push
scas
pop
jg
mov
inc
xlat
dec
bnd
test
xor
out
pushf
mov
stos
inc
xchg
pop
fs
push
dec
sub
push
loop
xor
mov
into
or
xchg
xor
mov
sbb
xchg
mov
mov
adc
pop
and
push
mov
test
mov
pop
dec
mov
adc
movsl
xchg
cmp
outsb
call
push
rclb
ret
lea
and
dec
sbb
mov
jne
imul
push
adcb
stos
mov
aaa
mov
xor
mov
testb
pop
xchg
and
clc
ror
int3
outsl
adc
xor
or
xchg
repnz
out
sti
xor
add
sub
sar
adc
jns
sbb
pminsw
dec
mov
addr16
xor
test
dec
cmc
shll
push
and
testl
pop
xorb
rcr
sub
cmp
scas
mov
inc
pop
or
dec
pop
jmp
outsb
cmp
adc
cmc
jb
bound
repnz
mov
gs
and
push
fnsave
mov
xchg
jb
shrl
or
pop
push
adc
adc
loop
aam
cmp
out
js
arpl
jno
dec
pop
or
pop
xchg
testl
pushf
xchg
xchg
push
mov
ret
adc
sub
addr16
incl
gs
sbb
and
ficoml
test
xor
sbb
mov
mov
repz
jg
rol
into
daa
lea
pop
mov
mov
out
fs
fisubrl
shlb
imul
mov
add
fbstp
nop
minps
xor
mov
in
lahf
ljmp
adc
sti
mov
cmp
sub
mov
and
xor
daa
add
adc
addr16
dec
idiv
scas
fdiv
insl
cli
inc
test
fildl
add
jp
dec
icebp
pop
lock
inc
and
std
mov
repz
cld
sub
push
sbb
stc
mov
adc
bound
imull
xchg
mov
es
lret
ret
push
imul
inc
stos
xor
dec
leave
mov
jp
sbb
or
repnz
xchg
jmp
fsubrl
fst
std
ficoml
das
mov
adc
xchg
aaa
std
fcmovb
mov
popf
dec
jnp
std
jb
lahf
in
mov
mov
mov
dec
cmp
lret
rsqrtps
mov
ja
sub
mov
ja
scas
sub
stos
clc
insl
mov
mov
shl
mov
sar
in
sub
cmp
pop
scas
pop
cmpsb
rorb
mov
or
adc
aaa
and
jge
lahf
mov
push
inc
lods
xlat
mov
add
loop
push
and
lret
lds
push
popf
jmp
dec
dec
pushf
add
cld
adc
ss
out
push
pop
in
les
and
pop
insb
andl
sub
shl
fsubr
test
sbb
cmp
inc
dec
mov
push
add
sbb
int
sub
nop
sub
rcr
sbb
xor
or
mov
pop
xor
pop
pop
cld
cmp
fiaddl
lcall
and
es
cmpsb
out
cmpl
arpl
and
adc
aam
frstor
das
jns
push
das
repnz
push
lods
loop
add
imul
cmp
adc
xor
jl
or
cmp
push
enter
mov
test
mov
add
push
and
repnz
push
xchg
adc
inc
cwtl
mov
mov
lcall
fs
aas
dec
aas
ret
or
adc
and
in
aas
adc
jo
or
fldenv
cmp
out
mov
add
mov
sti
push
fldcw
pop
in
aas
leave
mov
cmp
hlt
shrl
es
ljmp
and
ja
outsb
aaa
jp
daa
add
test
sbb
pop
push
lret
xor
lock
ret
push
cmp
ficompl
stos
dec
testb
mov
sbb
cmpw
push
jl
and
lea
xchg
test
outsb
mov
adc
cli
cmpsb
ret
sub
xchg
cmp
inc
shrl
inc
or
dec
mov
fcoml
xchg
incb
int
out
or
sub
aas
jle
leave
or
cmc
add
add
push
stos
sti
xorb
sbbl
cmp
pop
jno
mov
push
or
adc
pop
lods
fildl
mov
pop
out
inc
call
int
sbb
leave
inc
movsb
adc
sbb
insb
clc
sbb
push
and
outsl
inc
mov
imul
or
adc
sub
pop
int3
or
clc
les
insl
mov
rolb
and
ds
aaa
aas
pusha
mov
sbb
ljmp
in
enter
les
dec
fwait
movsb
mov
pop
ds
test
mov
jge
fdivp
scas
inc
xchg
imul
pop
xchg
pushf
cmp
lods
push
icebp
inc
fidivs
inc
int
lea
iret
mov
out
rorb
xchg
cmpsl
fbstp
jl
stos
sbb
cmpb
push
in
scas
popa
loope
sbb
pop
fwait
jb
pop
lds
jbe
inc
push
orl
dec
sti
stc
movsb
or
cmpsb
push
rclb
in
inc
movsl
pop
loope
mov
test
adc
pop
and
jnp
sti
push
mov
bound
xchg
adc
pop
inc
outsb
stos
imul
test
imul
sub
mov
and
push
cli
cmp
imul
mov
nop
je
call
int
outsl
sbb
or
je
fsubrl
cld
push
dec
ljmp
push
jo
movsb
stos
xchg
psadbw
aam
in
lret
xchg
jns
aaa
loope
jp
pop
sbb
out
dec
gs
jne
sti
dec
fcompl
stos
cmpsl
xlat
mov
pop
cltd
mov
cmp
pusha
lods
jb
cmp
insl
xlat
cld
aad
or
cmpsb
test
sbb
xchg
loope
mov
leave
out
and
inc
jae
cmp
int3
in
push
cmc
sbb
js
xlat
dec
inc
inc
int
add
and
and
xor
cmp
mov
imull
mov
pop
pusha
mov
sbbl
pop
inc
dec
dec
sbb
jl
xchg
xor
fdivl
mov
test
repnz
rcrb
xor
jecxz
es
in
cwtl
in
stos
adc
xlat
daa
sbb
mov
and
pop
data16
sti
ficompl
push
pop
stc
rcrb
fisubrl
shl
mov
lods
in
loope
loopne
xor
into
jmp
in
pop
sbbb
popf
lods
xchg
mov
cmp
jmp
jge
mov
pop
xor
push
dec
add
and
push
pop
jb
fucomip
ja
xor
lods
jg
xchg
xchg
dec
sub
mov
jb
dec
inc
dec
fs
cmp
xor
xchg
jno
cmpsl
cmp
jbe
pushf
pop
dec
inc
sub
jmp
pop
mulb
jb
movhps
not
stos
test
pop
ljmp
sarb
xor
pushf
sbb
imul
stc
sbb
mov
pop
mov
popf
lods
in
lahf
pop
push
loopne
cmp
mov
push
test
inc
mov
lock
cmp
and
lds
movb
sub
out
pop
push
dec
jnp
stc
movb
sub
rcrb
dec
push
sbb
nop
jecxz
dec
dec
imul
addr16
jo
sub
ficoms
stos
mov
sti
inc
shlb
data16
pop
pop
jnp
jge
cmpsb
outsl
cmpsl
enter
adc
lret
pushf
enter
pop
or
lods
cmp
jecxz
test
movsb
or
jmp
sbb
sub
rorl
popa
jge
push
in
dec
push
jmp
adc
lret
jns
mov
out
notb
fwait
jbe
adc
inc
lahf
pop
popf
jne
jbe
lcall
xor
xchg
push
sub
cmpsb
popf
cmp
testb
lea
aam
or
cs
call
or
les
mov
cmp
mov
lret
fldenv
hlt
xchg
dec
cmpsb
loopne
aaa
fistl
loope
push
mov
add
sarb
rol
mov
cmp
lds
dec
and
call
gs
sbb
pop
mov
jae
imul
fs
cmp
sarb
movsb
mov
or
nop
test
mov
sbb
xchg
pop
test
mov
dec
mov
cmc
jmp
in
std
mov
and
or
sbb
int
addr16
add
mov
sbb
add
sbb
cmpsl
mov
cmove
inc
cmpl
pop
jmp
xor
scas
mov
fucomip
out
pop
adc
pop
test
cmp
into
scas
mov
adc
inc
cltd
dec
and
mov
push
ret
stos
mov
insl
inc
xchg
aaa
data16
mov
loope
mov
pop
xor
aad
or
out
xchg
in
sahf
std
push
sbb
sub
push
pop
jl
ret
inc
xchg
jno
sub
fs
cmp
pop
test
and
mov
pop
test
insb
fisttpll
es
testl
mov
lahf
jo
pusha
rorb
mov
and
and
inc
sub
sbb
or
adc
bound
ret
inc
add
mov
pop
dec
data16
popf
int
inc
push
xchg
pop
cltd
in
mov
jge
dec
xchg
mov
xchg
int
data16
in
xchg
mov
add
jmp
mov
jl
or
pop
add
jae
test
mov
in
mov
inc
or
push
push
iret
lea
sub
in
fcomps
stos
xchg
push
mov
int
sbb
inc
cmp
ljmp
lahf
in
inc
jo
rcll
push
lock
mov
adc
push
int3
lcall
xchg
pop
mov
jno
ror
mov
mov
cmp
add
stos
mov
fadd
cs
push
scas
into
std
jg
inc
movsl
push
scas
mov
imul
jbe
imull
gs
xchg
sub
xor
mov
roll
popa
in
sbb
in
ret
sbb
push
das
or
lret
push
scas
xchg
inc
insl
sarb
xchg
jmp
dec
xlat
xchg
mov
xchg
repnz
ret
rcrb
jnp
xor
orl
in
sbb
pop
mov
test
cmp
test
shll
lret
or
jae
mov
xor
push
adc
add
and
push
sub
mov
mov
mov
xor
cmc
ja
jmp
sbb
fs
bound
aad
out
lods
push
mov
lea
outsl
jg
cmp
insb
addr16
push
adc
cmp
shrl
cltd
mov
test
dec
xor
sbb
fisubrl
out
leave
lcall
xchg
mov
jg
inc
mov
adc
sub
insb
and
imul
adc
stos
shr
pusha
loop
xor
clc
mov
push
pusha
cwtl
sub
fisubs
and
gs
sar
inc
jle
std
aam
sbb
iret
mov
insl
push
jge
jo
stos
enter
push
fnstenv
cmp
or
imul
sbb
fsubrl
dec
sar
cmp
ljmp
cmp
and
das
ja
sub
jo
inc
aaa
jg
dec
push
mov
aaa
cmp
push
dec
fwait
push
or
clc
push
jbe
in
shll
mov
and
fistpl
cmc
push
cld
cmpsb
outsl
sbb
jnp
rorl
xor
lea
in
aaa
icebp
xchg
jb
bound
or
push
jae
icebp
call
jp
push
cmp
push
jecxz
inc
repnz
aaa
aas
in
int
loop
mov
jae
fcompl
xor
mov
ds
ja
mov
inc
addl
popf
xchg
call
ljmp
decl
ret
repz
sbb
cmp
popa
popf
mov
loop
push
test
test
arpl
mov
sbb
xor
lahf
push
mov
jo
jb
fistpl
adc
lea
test
loop
fistpll
fwait
int
in
or
rorb
pop
stos
xor
fiadds
inc
xor
ds
push
adc
jmp
xor
adc
adc
pop
stos
mov
dec
xor
mov
outsl
aas
cli
inc
add
mov
push
pushf
mov
and
xchg
out
in
xlat
or
scas
mov
pusha
and
fldcw
dec
lahf
loope
mulb
repnz
jl
sbb
shr
insb
lret
pop
inc
sbb
pop
lock
leave
cmp
imul
mov
mov
adc
xchg
sbb
xor
rcr
int3
lret
mov
jns
pop
test
testl
adc
add
dec
insl
iret
sbb
push
adc
mov
add
leave
iret
sub
sbbb
lods
ss
add
je
cs
push
fisubrl
call
sarl
sbb
xlat
xor
test
fidivrl
cmp
int3
subl
mov
insl
and
loop
cs
repnz
in
add
add
xchg
lcall
sahf
data16
pop
mov
mov
cli
xor
leave
hlt
cltd
cmp
jb
adc
negb
jge
and
addps
aad
jg
xor
xor
mov
xchg
mov
imul
push
loopne
test
mov
clc
bound
mov
outsl
mov
lock
mov
pop
dec
ficomps
push
pushf
xlat
xchg
jno
or
fnstenv
pop
es
stos
shll
xchg
das
lcall
pop
stc
jns
mov
jnp
movsb
adc
mov
fsubs
xor
pusha
outsl
pop
jle
es
shlb
popa
xchg
sub
pushf
out
sbb
cmp
push
ds
movsb
add
mov
adc
rcrb
mov
pushf
popa
dec
movsb
decb
aam
push
loop
test
iret
xchg
loope
dec
lds
jbe
push
punpcklwd
inc
sbb
rcll
push
xchg
repz
sbb
cmp
test
xor
pop
sbb
fcoms
add
mul
sbb
in
hlt
insb
dec
icebp
jo
popf
inc
inc
xor
test
mov
cmp
cmp
jae
dec
test
xor
bound
stc
push
negl
sub
sbbb
stc
sub
pop
mov
sub
andl
ror
mul
bound
je
ret
mov
sbb
ret
sahf
push
mov
mov
ss
sti
ss
lcall
pop
addl
jo
add
jp
xchg
lcall
cmpsb
inc
enter
bound
lcall
jbe
inc
rcrl
and
adc
cld
cmpsb
sbb
mov
sub
sbb
inc
dec
dec
test
inc
add
insb
adc
dec
sarb
xor
sub
adc
push
rcll
and
sub
adc
je
rorl
adc
cmp
jmp
dec
add
ljmp
insb
inc
jmp
cmpsb
add
movsb
mov
push
adc
in
push
mov
sar
adc
jp
lret
pop
popf
lods
scas
jmp
pop
cmp
or
daa
icebp
lret
mov
in
mov
mov
daa
jb
dec
sbb
insb
and
jmp
jmp
cmp
dec
jle
push
cmpb
fstpt
mov
test
and
sbb
das
mov
subl
inc
add
shl
aam
push
in
cmp
sub
hlt
cli
fisttpll
sub
cmp
int
lock
test
std
sti
inc
jno
hlt
push
mov
arpl
cltd
ss
mov
push
xor
mov
sahf
push
int3
pop
rorb
inc
gs
pop
sub
or
into
xor
xchg
addr16
cmp
aas
xchg
or
and
inc
dec
in
cmc
inc
and
adc
jo
pop
inc
icebp
lds
nop
cli
icebp
sbb
or
cmp
and
adc
dec
pop
adc
jo
add
and
fistpll
mov
lcall
cld
test
xor
adc
sbb
sub
loope
add
lcall
mov
in
in
movsb
push
lret
dec
cmp
stos
inc
adc
jl
jmp
int
xchg
lea
mov
outsl
pop
push
xor
int
cmpsb
sarl
pop
movsl
pusha
loop
jnp
sbb
and
loopne
subb
nop
xchg
xor
add
xlat
sbb
lods
flds
leave
ret
and
in
sub
dec
sub
or
fcomps
fnsave
mov
push
jmp
movsb
out
xchg
sbb
shll
nop
sub
scas
notl
xor
mov
jecxz
add
gs
sarb
pop
mov
fildll
push
clts
movsb
lsl
andnps
push
js
push
xor
dec
inc
lcall
push
js
mov
sbb
in
insb
fimuls
js
insl
ds
or
xchg
das
in
int
mov
outsb
cmp
mov
lcall
cltd
gs
push
repnz
pop
xacquire
int
xlat
cmp
mov
dec
or
mov
aam
stos
dec
jg
push
in
adc
cli
scas
ds
imul
pop
cmp
test
or
xor
mov
inc
insb
jmp
ljmp
rcl
aas
frstor
les
out
mov
adc
mov
mov
fcomip
sahf
push
bound
loopne
nop
mov
and
jnp
in
fs
out
cmp
daa
push
pop
sub
aam
dec
or
nop
xchg
lds
les
inc
lds
pusha
and
cmpsb
movsb
mov
inc
sub
fistl
fs
push
inc
ret
pop
aad
mov
ds
adc
mull
or
mov
outsl
loop
inc
popa
test
mov
repnz
sarl
jne
mov
jmp
xor
repnz
call
lret
adc
stos
addr16
sub
lcall
pop
aas
sub
adc
ficomps
sub
jb
dec
insl
add
jne
dec
ja
jnp
pop
adc
cli
lock
data16
cmp
pop
iret
in
es
push
popa
data16
addb
cwtl
stc
imul
icebp
inc
jl
mov
mov
cmc
or
notb
sub
sub
dec
push
and
inc
ljmp
push
sub
rolb
das
mov
jbe
das
out
leave
cltd
out
fwait
enter
push
scas
les
ljmp
push
rol
sbb
adc
or
mov
pop
lock
push
or
cltd
scas
aam
jp
jmp
and
or
xor
jge
fdivrp
inc
loopne
fwait
mov
adc
cmp
sub
cli
pop
bound
inc
jbe
push
add
mov
jne
pop
ret
ret
das
sbb
adc
mov
out
mov
mov
pushf
clc
repz
ds
lock
mov
sub
cmc
int3
push
or
test
les
mov
scas
bound
loop
mov
mov
mov
or
out
jns
mov
in
push
data16
xchg
mov
add
enter
ret
mov
xor
or
in
movsl
mov
adc
dec
jg
rclb
or
les
fwait
mov
jle
mov
loopne
fisttpll
andl
fistpll
movsl
pop
jae
pop
cmpsb
sahf
movsl
and
pop
pop
pop
cmova
push
cmp
adc
push
mov
mov
and
popa
sub
add
xchg
in
pop
lods
loopne
popf
pop
in
cmpsl
pusha
cwtl
out
xchg
ret
push
negb
cmp
iret
test
loop
push
in
mov
sti
dec
lock
shlb
jg
scas
iret
mov
xor
sbb
mov
xchg
fs
and
xchg
xchg
fstl
or
data16
mov
shrb
push
imul
xrelease
nop
mov
mov
jg
dec
lds
out
fidivs
rclb
inc
inc
insl
jb
popa
xchg
add
and
dec
cs
jbe
loopne
dec
xchg
jge
push
adc
mov
xchg
jnp
push
xorl
jo
mov
jne
test
leave
scas
xchg
mov
cmpsb
pop
add
push
pop
jmp
fcomps
dec
xor
js
mov
stc
fsts
shlb
bound
std
jmp
add
mov
insl
jmp
xor
xchg
lock
or
or
je
adc
enter
shll
xchg
lret
jl
leave
push
and
scas
or
js
cmp
subl
mov
mov
sub
fs
fwait
test
jl
ret
mov
xor
shlb
outsl
and
or
lcall
fnsave
scas
cli
push
testb
out
dec
xchg
int3
jns
fimull
sub
insl
les
insb
cmpl
mov
fs
dec
mov
xor
jb
lret
shlb
push
rclb
add
push
sbb
loop
ds
jl
inc
lea
inc
and
lret
add
pop
aam
push
push
dec
sub
fs
cmp
movsl
push
inc
mov
jno
sbb
loope
call
ja
or
jmp
les
inc
or
jecxz
mov
ret
pop
aad
or
test
or
outsb
int3
les
pop
pop
or
sbb
in
mov
shrl
popf
mov
cmpsb
mov
xchg
ss
mov
int
xor
cmp
inc
inc
and
mov
lahf
or
das
mov
add
mov
pop
cmp
mov
mov
inc
cmp
mov
rcl
sub
adc
std
xchg
lret
push
adc
add
add
pop
gs
push
ret
adc
jo
pop
and
xchg
sbb
or
xlat
js
stos
fcmovu
fwait
insl
or
icebp
lds
and
jnp
lcall
pop
dec
pop
mov
inc
pushf
pop
cli
or
ja
int3
sub
xor
sbb
sbb
hlt
movsl
inc
insl
loopne
jge
and
int
pop
mov
sub
mul
cmp
xchg
sti
lock
sub
enter
mov
addr16
mov
jle
lahf
shlb
xchg
cli
push
test
mov
out
fdivs
outsl
or
rol
imul
dec
out
mov
push
mov
add
mov
mov
push
cwtl
enter
or
mov
pushf
pop
inc
dec
shlb
add
ja
scas
cmpb
mov
add
dec
adc
mov
push
add
ror
sbb
push
scas
js
pop
insb
fs
inc
cmp
sub
int3
loopne
or
cmp
sub
mov
stos
and
cltd
lret
push
mov
lahf
lds
add
mov
dec
js
xchg
test
bound
jp
or
popa
shlb
mov
fwait
jno
xchg
push
push
movsl
adc
mov
fwait
int3
push
adc
shll
mov
xchg
dec
insl
test
imul
ss
xchg
pop
dec
idiv
mov
outsl
mov
out
lahf
mov
rolb
test
sub
cltd
dec
lahf
mov
push
icebp
pop
dec
jnp
sbb
in
xor
push
std
out
xchg
arpl
enter
or
push
mov
outsl
and
push
rclb
ret
int
std
xchg
movsb
mov
push
or
sub
addr16
in
shrb
sub
push
and
sbb
and
in
xchg
and
mov
mov
or
cmc
addr16
mov
jge
mov
inc
scas
push
xchg
ss
xor
das
rcrb
aas
push
jbe
pop
cmp
sarl
mov
data16
ljmp
int3
jp
int3
mov
mov
testl
dec
mov
es
push
aad
inc
sbb
xor
pop
dec
or
test
mov
mov
mov
cld
test
mov
adc
shlb
inc
xchg
test
cmp
add
or
ret
pop
stc
loope
push
inc
daa
cmpsl
mov
dec
jle
adc
iret
mov
fidivs
mov
jecxz
fisttpl
ja
aaa
aad
cltd
lods
fadds
int
and
push
stos
addr16
leave
aaa
mov
mov
movsl
xor
xchg
add
adc
roll
sbb
shll
repnz
push
jg
jp
jb
cmpsb
inc
xchg
xchg
add
mov
pop
lret
mov
ja
mov
mov
push
pop
dec
inc
dec
inc
push
fldl
mov
addr16
mov
stos
xchg
fiaddl
outsl
lahf
ss
sbb
lods
hlt
jnp
adc
loopne
in
pop
pop
repnz
add
jmp
cmp
xchg
and
sbb
xor
sbb
jecxz
xor
addr16
add
imul
clc
push
xor
addr16
mov
loopne
jae
push
ss
xchg
inc
cwtl
sbb
xor
out
int3
cmpsb
and
arpl
cmp
jo
jmp
cltd
fsubs
mov
test
in
fcompl
hlt
xchg
dec
mov
bound
sub
cmp
js
dec
inc
or
lahf
adc
jne
mov
clc
sub
push
mov
jno
cwtl
pop
fisubs
fadds
dec
inc
ljmp
in
jo
sbb
jg
and
ljmp
or
pushf
jno
sbb
jge
gs
loop
xor
testb
and
push
sbb
test
popa
cmp
or
aas
sti
loop
dec
or
das
ljmp
ss
outsb
push
ret
inc
mov
stos
icebp
into
stos
fwait
cld
pop
pusha
into
cwtd
sub
xchg
push
lahf
addl
mov
pop
push
add
scas
jle
insb
or
push
or
push
jns
outsl
das
cwtl
xlat
in
xchg
xor
in
or
xchg
add
xchg
iret
pop
clc
sbb
xchg
push
fsubl
negl
add
dec
xchg
insl
inc
imul
pop
pop
retw
mov
sbb
call
push
sub
stos
adc
into
push
scas
bound
and
rorb
lret
ret
daa
inc
mov
xchg
test
xchg
mov
mov
stos
test
pusha
pop
cltd
inc
lret
or
ret
xorb
pop
pop
xor
dec
pusha
iret
xchg
orl
mov
divb
cmc
mov
fdivrs
jg
js
ja
call
xor
lods
dec
lcall
in
lcall
push
icebp
lcall
mov
out
shrl
jg
ficoms
inc
in
add
psubsb
mov
int
jo
xor
sahf
enter
imul
push
aas
pop
lahf
sbb
lcall
push
xor
cmp
add
dec
flds
jno
movsl
fsubrs
mov
and
insb
jg
xchg
cmp
sbb
fs
cmpsb
xor
jae
ljmp
mov
jbe
add
popa
aaa
jbe
cmp
inc
xor
pop
out
aam
xchg
xor
repnz
jecxz
mov
cwtl
ljmp
jge
dec
insb
inc
out
add
ret
ret
mov
out
cwtl
inc
dec
sbb
jge
test
js
jo
mov
stos
int
jae
dec
ds
inc
push
rcrb
mov
mov
mov
mov
leave
enter
cmp
sbb
xchg
push
xchg
xchg
cmpsb
movsb
mov
sub
mov
pusha
sub
mov
xchg
rorl
inc
orb
push
pop
xor
jb
or
es
test
xor
js
lds
dec
jge
mov
mov
lahf
insb
lods
mov
js
xchg
fimull
inc
pop
stos
addb
xor
mov
push
adc
data16
inc
aad
fnsave
out
fstpt
addr16
or
push
xorb
or
leave
shrb
out
out
out
lock
cwtl
movsb
mulb
ret
jl
jge
jg
test
idivl
pop
leave
mov
call
cmc
fldl
jp
add
sbbl
jecxz
and
sarl
sub
in
sbb
sub
andl
jg
ss
or
movsb
cld
movsl
pop
push
das
jecxz
adc
xchg
lret
push
or
cmp
mov
add
stc
xor
add
pop
jno
gs
pop
in
and
xchg
addl
adc
ss
out
xor
enter
outsb
and
adc
push
aaa
pop
imul
mov
cmpsb
vaddsubps
in
rclb
inc
sub
js
push
cmp
dec
clc
xchg
in
imul
arpl
and
or
ficoml
ret
xor
cwtl
lds
xchg
mov
lahf
xor
jecxz
out
add
js
jnp
adc
sbb
jno
xor
addr16
bound
cwtl
dec
mov
mov
sbb
cltd
rorl
cwtl
sbbb
aas
cld
into
sbbl
mov
adc
das
mov
sbb
in
nop
sub
aaa
add
shrb
loopne
test
rcrl
cltd
push
test
in
aas
insb
and
cmp
xchg
mov
test
mov
loope
jns
pop
mov
out
push
insb
jb
pop
xor
popa
inc
xor
subps
testb
gs
inc
hlt
inc
mov
in
sbb
shll
clc
lods
notb
jae
cmp
sub
stc
in
xor
data16
jmp
adc
dec
push
inc
sbb
subb
jp
out
mov
mov
data16
inc
into
dec
xchg
inc
adc
jmp
lret
jno
ljmp
repz
or
subb
test
sbb
push
sbb
jne
jp
bound
aas
loope
add
aad
sub
movsl
adc
mov
inc
out
push
je
popl
pop
and
inc
das
lahf
out
jb
xor
pushf
negb
je
lods
cmpsb
sbb
and
pushf
push
xchg
sub
sahf
test
cmpsl
push
pop
mov
int3
adc
mov
sbb
pop
aam
add
cmp
scas
add
inc
and
clc
insl
lahf
loopne
mov
cmc
push
nop
insl
int
cmp
js
xchg
call
lds
dec
pop
das
lods
repnz
pusha
pcmpgtw
or
adc
adc
scas
shl
inc
insb
push
repz
int3
cmp
adc
xor
adc
and
ret
cs
mov
daa
stos
cmp
addb
add
popf
inc
popa
imul
popf
lods
adc
in
cmc
pop
stos
sub
lcall
std
or
loop
mov
and
arpl
jmp
mull
loope
mov
dec
lea
xchg
aam
std
push
gs
mov
stos
mov
aas
loop
clc
add
dec
mov
out
int3
orb
adc
das
repnz
xor
push
and
outsl
xchg
pop
shr
daa
pop
push
xor
add
jmp
loopne
push
adc
sub
mov
jns
rol
mov
dec
jmp
loop
fcoms
add
idiv
lock
clc
dec
rolb
mov
mov
cli
mov
mov
int
xchg
lds
repz
repnz
lock
es
mov
jno
jg
or
subl
pop
or
fadds
xchg
std
push
andl
cmpl
popa
pushf
pop
shl
dec
adc
jo
clc
pop
xor
popa
dec
mov
cmpl
stc
fnsave
xchg
in
and
out
mov
into
and
lret
dec
int3
sti
in
adc
lcall
sub
xchg
pop
in
gs
lods
stc
mov
test
xchg
cli
adc
js
sbb
push
lahf
mov
outsl
and
and
ss
cs
pop
mov
test
ljmp
jne
pop
dec
lea
cmpl
test
jl
cmp
push
mov
pop
hlt
mov
xchg
jae
push
mov
push
in
filds
mov
data16
testb
mov
inc
push
decb
lahf
aaa
xchg
and
xor
push
insl
in
out
fs
lret
outsb
aad
into
and
inc
gs
dec
outsb
out
hlt
lret
fidivrl
fs
sub
inc
fadds
xchg
jns
icebp
fldt
rcl
subl
sbb
sahf
out
lahf
fcoms
fisubl
inc
fdivl
mov
loopne
test
scas
mov
repnz
popf
stos
ret
aaa
jg
mov
jne
fdivs
aad
notb
lods
jp
loop
jbe
xchg
adc
cmp
add
push
cwtl
je
xchg
xchg
xchg
push
test
add
xchg
push
lcall
sub
aam
sub
adc
std
out
loopne
sub
pop
pop
cli
test
cmp
mov
int
cmpsl
jb
hlt
insb
jb
dec
cltd
and
leave
jp
mov
or
xor
sbb
sbb
iret
loopne
or
aaa
cs
cmp
mov
out
lock
pop
pusha
pop
hlt
sbbl
test
sbb
test
cmp
cmp
lock
mov
dec
or
or
adc
scas
xchg
add
dec
xchg
jmp
pushf
mov
pop
mov
ret
lahf
or
xchg
scas
and
repnz
ret
lea
adc
outsb
sub
imul
out
push
loop
sbb
pop
jns
xor
shrl
pop
dec
adc
ficoml
outsb
jp
in
sti
jbe
popf
lds
mov
inc
jmp
cltd
in
out
stc
inc
jle
xor
call
rcll
dec
sbb
mov
jne
hlt
pop
loopne
push
or
xchg
ss
gs
mov
add
mov
sub
push
mov
incb
decb
lods
stos
sbb
inc
les
xorl
jo
jae
gs
mov
ret
sbb
mov
sbb
mov
sub
mov
int
shl
pop
jl
cmpsl
push
mov
dec
adc
or
mov
aam
sti
divb
arpl
repnz
sub
mov
movsb
push
clc
sbb
pushf
mov
xchg
mov
aad
xor
jno
dec
sbb
cmp
and
and
inc
push
pop
xchg
sbb
jecxz
xchg
mov
xchg
stc
inc
fisttpll
mov
andb
mov
inc
cmp
add
push
cld
fnstsw
ds
loop
rcrl
mov
cmp
adc
and
adc
xor
xchg
test
and
addl
or
movsl
inc
xor
and
push
cmp
dec
lods
mov
shl
fimull
and
or
mov
mov
mov
and
mov
pop
lahf
push
mov
or
es
xchg
int3
in
lods
mov
and
dec
out
xor
leave
or
lock
out
fists
pusha
mov
outsb
loopne
in
sarb
js
loopne
pop
fwait
xchg
cmpsl
pop
das
in
xchg
inc
push
scas
sbb
adc
jo
iret
or
dec
xchg
decb
imul
dec
dec
inc
dec
cli
fsubrl
push
out
xchg
pop
pusha
in
inc
jg
arpl
push
add
mov
jno
push
incb
lret
rclb
pop
jle,pt
fcomp
repnz
adc
pop
addl
add
add
rorb
add
add
insl
test
pop
ficomps
and
dec
jl
or
lcall
lret
push
pop
xchg
sbb
inc
ret
xlat
sti
fbstp
test
pop
call
inc
ds
inc
into
lret
and
and
pop
imul
cmp
jp
into
push
inc
test
lcall
mov
test
sbb
dec
xchg
or
pop
xor
lods
pop
lahf
pop
push
imul
sarb
inc
add
pop
dec
lods
std
ja
rcrb
setg
jge
shrb
inc
xor
into
add
lods
pop
dec
mov
in
mov
sub
das
cltd
shll
test
push
jns
push
gs
scas
mov
sbb
dec
jge
rep
inc
sahf
xor
hlt
stc
mov
adc
pop
sti
jno
or
xchg
lret
movsb
leave
or
add
mov
mov
pushf
xor
ljmp
cmp
xchg
xchg
push
add
pop
xchg
lret
aas
ss
push
std
pop
fstpl
pop
rclb
add
das
rcr
adc
ja
orl
mov
sub
in
adc
jae
daa
or
fadds
sbb
pushf
jne
outsb
or
jl
push
ret
mov
add
int
ja
xor
repz
push
sub
pop
lahf
mov
shrl
or
cwtl
push
jl
mov
jl
lcall
sbb
decl
add
mov
fldz
cmp
sbb
or
jae
inc
dec
outsb
data16
addr16
xor
out
mov
sub
in
cli
push
jmp
cmp
xchg
sub
and
xor
cmc
fs
sub
pusha
xor
xor
lea
sub
aad
sub
push
mov
cmp
adc
or
subl
adc
jne
sub
add
loopne
sbb
loopne
mov
add
sub
jbe
pop
add
in
or
ret
add
sbb
in
push
out
gs
cs
sbb
xor
inc
mov
loop
cmp
idivl
sbb
pop
sbb
cmpsl
mov
xor
pop
fildll
mov
jae
mov
xor
mov
push
jb
pop
popf
adc
clc
into
push
or
out
ret
fimull
fildll
or
cld
push
out
push
add
cmp
xchg
mov
or
and
and
lahf
xor
pop
cmp
jmp
cmpsl
mov
inc
div
movsb
push
test
xchg
lods
push
inc
cmp
jno
or
scas
loope
xchg
ret
insl
lcall
sbbl
mov
sbb
shr
repz
mov
or
outsb
aam
lcall
dec
popf
imul
andb
xor
adc
mov
aam
fcomi
bnd
push
mull
out
adc
inc
xlat
daa
mov
push
imul
xchg
test
push
jns
addl
cmpl
and
es
pop
push
rclb
stos
mov
jbe
add
push
jmp
pop
mov
sub
mov
fistps
cli
rcr
in
push
pop
inc
sbb
mov
inc
je
pop
loop
sbb
pusha
push
pop
xor
push
xchg
jle
and
mov
pop
xlat
cmp
mov
ja
jg
adc
ret
push
leave
cltd
bound
cmp
mov
js
movsb
add
mov
xchg
mov
rol
iret
lods
adc
add
cmp
cltd
cmp
test
inc
sbb
aaa
outsb
sub
orb
sbb
sbb
xorl
adc
xchg
cmpsl
mov
stc
inc
push
ja
out
fldenv
add
xor
sbb
das
icebp
jmp
add
dec
pop
fdivl
push
mov
jmp
inc
pushf
sub
push
inc
sub
push
jnp
jb
arpl
push
jae
cltd
xor
mov
mov
mov
mov
js
test
cld
sbb
inc
les
lahf
sbb
push
xorb
rol
xor
xchg
shrb
jg
in
mov
xchg
pop
fmull
pop
fdivl
xor
push
sarl
xchg
or
dec
lcall
xor
and
add
pop
adc
pop
push
pop
stc
shl
cmp
jnp
into
cmp
addr16
inc
imul
sub
jnp,pn
adc
repz
xor
cmpsb
adc
xchg
push
mov
jg
arpl
test
mov
xchg
test
xor
jp
push
dec
push
pop
xor
in
lock
sub
lcall
mov
hlt
and
mov
mov
mov
jae
into
lods
inc
adcb
into
hlt
aas
aad
xchg
rolb
dec
dec
lahf
add
mov
mov
push
xor
out
push
popa
or
ret
mov
dec
inc
popf
fcoml
shll
cli
dec
movsb
dec
aaa
lds
mov
fcoms
out
and
push
or
das
mov
cmp
fisttps
dec
push
push
fmuls
cli
fiadds
fs
and
aad
adc
push
pop
out
adc
jp
pop
shll
jle
rorb
mov
hlt
faddl
ss
pop
jnp
imul
ja
js
stos
fbld
dec
push
xchg
adc
mov
in
lods
js
clc
pop
xor
cmp
adcl
dec
mov
jg
or
sbb
incb
fdiv
aaa
mov
adc
push
push
push
sub
es
pop
sbbb
fwait
aam
arpl
and
cmpsb
test
mov
and
repz
mov
outsb
jbe
dec
mov
xor
fmul
fcmovnu
sti
push
jns
push
add
test
pop
stc
jle
rcl
cmp
push
sbb
in
mov
jg
xchg
fdivs
xor
ja
sti
xor
stc
nop
repnz
aam
outsl
fs
mov
rorl
and
rdpmc
mov
sbb
pop
inc
repnz
in
cmpsl
imul
push
xchg
xor
ficoml
cmp
lock
push
data16
leave
std
jno
test
out
mov
or
dec
xchg
xor
dec
dec
inc
dec
lods
cwtl
push
or
pop
inc
jp
and
hlt
test
cmc
sub
pop
aam
daa
inc
jl
pop
aaa
sbb
sub
ljmp
jl
leave
fdivl
pop
adc
xchg
pusha
push
test
xchg
push
jl
scas
push
rorb
fists
insl
in
aaa
test
ss
js
cmp
clc
sub
pop
fsubr
testl
and
jg
in
push
xchg
inc
sub
outsl
push
mov
mov
andb
fs
and
addb
testb
ss
jl
insb
stos
fidivrl
cmp
xorb
push
mov
gs
adc
into
es
mov
cli
pop
xor
test
xlat
hlt
fnstenv
sbb
jl
lods
fmul
scas
adc
test
jae
cmpsb
add
or
mov
cmova
mov
jmp
ss
lahf
cwtl
xor
xor
lret
sbb
mov
call
jg
mov
xor
out
xor
push
mov
out
xchg
lret
repz
dec
test
mov
stos
push
sbb
mov
inc
jno
push
jge
xor
pop
xor
jo
push
add
pop
xor
cmp
js
cmp
adc
dec
xor
sub
cmp
pop
adc
sub
inc
inc
add
pop
mov
mov
xchg
rcrb
scas
or
pop
int
inc
out
push
pop
pop
pop
cmpsb
in
int3
sub
out
sbb
pop
fdivs
xchg
jbe
outsb
add
xor
lcall
jo
lods
lods
mov
mov
aam
ja
lret
lea
fsubrl
mov
dec
lock
pop
fldl
cld
mov
inc
ss
mov
jle
sti
pop
repz
hlt
pop
cltd
mov
pop
mov
mov
clc
push
pop
mov
enter
mov
lods
jge
push
aam
movsb
mov
int
mov
jae
fcomip
rorb
xor
jp
xor
and
push
in
pop
loopne
ret
out
pop
push
hlt
pop
icebp
jl
pop
lahf
sub
mov
sub
jbe
je
xchg
in
lret
xor
addr16
mov
leave
jle
clc
jae
cltd
jne
adc
call
cmp
mov
or
cmp
out
push
jo
lret
leave
pusha
dec
or
stos
cmp
pusha
xchg
pusha
and
dec
cli
mov
cmp
les
jecxz
subl
xchg
cs
shl
test
mov
sbb
movsl
mov
pusha
add
aam
xchg
push
outsl
scas
push
jo
sub
test
adc
pushf
scas
rcll
adc
sbb
out
inc
idiv
popf
sbb
mov
in
xor
adc
add
insb
cmc
ja
mov
lock
mov
orl
mov
xor
and
dec
movsl
repnz
fwait
inc
icebp
aad
xor
xor
jb,pt
mov
cmpsb
and
sbb
jbe
mov
inc
lcall
js
rcl
cmpb
pop
test
mov
fiaddl
clc
je
pusha
testb
shrb
cltd
cmp
nop
pop
loopne
divl
jle
mov
jle
push
jbe
xchg
lret
aaa
dec
enter
mov
mov
in
stos
nop
jg
andl
cmp
push
sbb
daa
in
mov
push
sub
inc
pop
xchg
inc
cmp
cmp
incb
aaa
jle
ret
push
fbld
sbb
outsl
loop
ror
insl
das
imul
sarb
pop
cmp
fidivs
mov
sbb
out
cmp
in
mov
aas
and
in
mov
push
inc
sub
and
rcr
icebp
dec
cmp
xor
cmp
dec
addl
lcall
lods
push
pop
cli
mov
sbb
cmpsl
add
sbb
into
in
mov
int
mov
lahf
mov
push
shrl
push
iret
lcall
cmp
lds
fs
inc
in
outsl
loopne
sbb
data16
subl
and
call
je
or
repz
and
fbstp
dec
int
inc
sub
dec
xchg
emms
mov
xor
pop
fnsave
push
adc
mov
xchg
cltd
enter
dec
imul
mov
cli
mov
xchg
sub
xor
inc
pop
jb
jecxz
dec
inc
rolb
gs
add
shrb
inc
movsb
or
push
fbstp
push
andb
sahf
add
loopne
pushf
aad
and
and
cmp
jno
outsb
std
or
inc
xchg
movsb
test
jno
cwtl
adc
std
test
jle
out
sbb
mov
fdivs
or
fistpll
mov
ficoml
lcall
int
pop
sahf
andl
pushw
shl
cmc
push
mov
and
fists
lret
jo
pop
out
ljmp
ja
mov
daa
pop
jns
in
inc
test
outsl
push
sub
and
lcall
dec
mov
int3
dec
data16
mov
test
pushf
xor
and
pushf
mov
pop
aam
mov
dec
das
inc
js
clc
aad
jno
jmp
fmuls
xorb
inc
rcrl
cld
iret
incl
imull
cmpsl
cmp
mov
jb
out
mov
stc
sbb
mov
es
add
imul
lods
rcrb
movsl
rcrb
jle
mov
cmpsb
lods
inc
ja
cmp
adc
out
and
xchg
inc
or
adc
sbb
pop
push
in
lahf
imul
pushf
add
lods
jnp
out
cmp
dec
scas
jp
imul
adc
sbb
cld
iret
cld
mov
sarb
adc
inc
pop
xor
dec
enter
pop
xor
mov
dec
xlat
xchg
in
call
xchg
call
add
test
sti
lcall
lods
into
xor
in
inc
and
mov
pushf
or
inc
mov
rorl
cmpb
pop
cmp
adc
movsb
push
jl
out
loope
sbb
xchg
xor
cli
fisubl
cwtl
and
jecxz
cmpsl
ljmp
js
push
push
mov
fnstcw
jle
sub
pusha
push
adc
xchg
scas
gs
add
cmp
mov
xorl
inc
mov
push
adc
mov
inc
mov
xor
and
enter
in
jb
cmp
add
xorb
adc
lahf
or
insl
add
mov
jns
xor
addl
rorl
push
mov
add
and
ds
lods
dec
xor
mov
xchg
sbb
dec
sbb
cli
out
add
mov
enter
stos
pop
inc
lds
and
inc
cmp
mov
sub
xchg
sbb
fcompl
add
add
int3
andl
movsb
dec
fdivrs
dec
je
in
xchg
xchg
mov
mov
adc
cli
or
xchg
fidivl
inc
push
fiaddl
lods
cmpl
out
ss
inc
arpl
pop
sbb
add
test
xchg
insb
push
testl
pop
nop
xchg
sarl
jnp
frstor
lds
mov
test
and
out
xor
inc
cltd
adc
dec
std
popa
mov
repnz
push
mull
adc
mov
in
push
jns
dec
out
stos
test
add
pop
jecxz
into
mov
pop
cmove
and
out
mov
jns
in
or
or
mov
lods
scas
loopne
aam
ds
and
pop
fstps
inc
test
pop
ja
add
or
mov
lahf
push
shlb
mov
sub
mov
dec
sahf
cmp
cmpsb
sub
add
add
cwtl
das
je,pn
add
rolb
and
aad
push
xchg
cmp
fdivr
or
dec
cmpsb
push
sub
mov
aam
lods
mov
adc
lds
mov
jb
cmp
bound
xchg
sbb
loop
out
loope
ficoml
add
push
xor
imul
xor
adc
pop
mov
and
and
cmc
or
or
out
cmp
sub
xor
pushf
punpckldq
inc
mov
pop
fs
sub
and
shlb
adc
int
jb
outsl
push
inc
xor
dec
xor
xor
test
pop
jno
xor
lcall
ljmp
push
xor
xchg
out
repz
dec
call
stc
sbb
mull
cmpsb
add
cltd
scas
fsubrp
cltd
sbb
push
aam
inc
push
test
cmp
add
or
mov
or
adc
call
cmp
mov
jae
ficompl
mov
call
mov
xorl
bound
adc
mov
mov
fnsave
mov
sbb
inc
inc
clc
cmpsl
xchg
or
inc
ljmp
sub
cmp
jnp
sbb
mov
mov
out
cltd
mov
test
sub
jle
sahf
mov
addr16
and
sub
xchg
inc
rclb
pop
filds
jmp
cmp
mov
loopne
mov
in
add
stos
loopne
aas
aad
mov
fnstenv
or
lock
mov
xchg
mov
mov
in
push
je
sub
dec
sub
mov
or
and
gs
fnsave
cmp
pop
mov
push
inc
fnsave
jns,pt
lahf
sahf
lea
mov
or
adc
mov
iret
mov
idivb
jp
test
pop
mov
stos
mov
out
xchg
je
fs
cmp
mov
xorl
adc
mov
push
sbb
and
and
jge
in
les
cmc
lods
loopne
jl
ljmp
fwait
je
add
xchg
sbb
cmp
decl
pxor
cwtl
out
insb
fistpl
popf
arpl
ss
push
loopne
adc
clc
inc
and
and
cmp
add
lcall
mov
mov
inc
repnz
xchg
inc
ljmp
xchg
cmpsb
xchg
mov
pop
dec
pop
push
lea
mov
lods
out
xlat
cmp
lcall
mov
outsb
out
jmp
mulb
in
js
inc
mov
jle
orl
outsb
xor
push
pushf
pop
insb
jne
push
sub
in
pop
inc
mov
arpl
add
mov
jle
sub
xor
mov
rorl
fwait
rorl
das
in
aam
cltd
dec
and
movsl
mov
or
pop
and
loop
mov
lea
pop
insb
push
cmp
dec
les
sub
push
jge
stc
hlt
xor
in
dec
mov
xlat
rcll
fldenv
add
push
mov
inc
jle
adc
stc
mov
pop
add
sub
in
add
sahf
out
fcoms
pop
push
mov
jle
add
and
adcl
xor
cwtl
sbb
lea
mov
xor
sbb
cmp
mov
popa
ret
stc
popa
mov
jae
xor
mov
lods
loop
repnz
insl
fcoml
outsl
mov
mov
cmpsl
xchg
and
xlat
lret
dec
inc
into
movsb
pusha
je
sub
lock
cwtl
aaa
fcomi
cli
pushf
pop
cwtl
lods
pop
es
pop
js
xchg
rclb
mov
push
test
mov
cli
mov
out
insb
jno
jmp
sbb
pusha
cmp
sub
psubd
in
sbb
lock
xchg
leave
adc
mov
push
adc
pusha
xor
add
popa
sub
pop
mov
lcall
cmc
mov
ja
int3
mov
mov
pop
jno
sub
inc
sti
pop
stos
andl
jo
push
add
imul
jnp
test
xor
inc
push
insl
jnp
xorb
mov
subl
das
sub
sti
jbe
adc
hlt
inc
dec
mov
adcl
push
mov
inc
xor
arpl
lds
int
pusha
jg
arpl
xor
popf
push
ds
inc
xchg
inc
add
subb
out
dec
enter
ss
mov
icebp
pop
pop
or
cld
jge
daa
mov
stc
xchg
add
dec
mov
ljmp
cmp
sbb
dec
ret
popf
dec
inc
pop
imul
dec
repz
insl
cmp
repz
adc
mov
ja
test
cs
cld
adc
dec
pop
mov
insb
inc
sub
cli
push
dec
xor
add
push
mov
aad
ljmp
push
add
dec
mov
sub
aaa
cs
inc
gs
adc
mov
adc
cmp
dec
orl
in
mov
push
popa
jnp
mov
stos
push
push
call
pop
xchg
out
out
push
mov
test
in
sbb
adc
xchg
jmp
or
scas
xchg
xchg
jae
lahf
fistl
fsubrl
popf
cmpsl
mov
push
adc
ljmp
int
jb
or
movsl
outsb
jp
jecxz
push
test
dec
mov
jp
sarl
test
enter
test
leave
leave
sahf
add
cmp
inc
pop
mov
xor
jno
sbb
and
push
add
in
fwait
and
js
adc
in
xor
mov
mov
mov
fstl
das
mov
icebp
ds
stos
in
sub
loop
fldl
loope
mov
pop
sub
lds
dec
enter
or
inc
push
scas
mov
push
dec
inc
fs
ret
jne
jbe
subb
gs
popa
sub
sub
fisttps
xor
call
test
das
xor
rcr
cwtl
mov
pop
sar
mov
or
and
xchg
scas
cmpsb
cmp
push
aas
jmp
into
out
cmp
aad
jno
fcomip
mov
xor
mov
mov
or
mov
out
push
pop
jne
lret
and
sub
aad
outsl
cmpb
rorb
and
mov
into
icebp
inc
push
cmp
sbb
int
jb
jns
mov
sub
into
sbb
mov
pop
cmp
sbb
sub
into
sbbl
lret
or
mov
arpl
sbb
ret
icebp
sub
jp
cmpsl
sbb
or
sbb
push
lahf
pop
mov
lahf
lcall
sub
dec
cmp
or
xchg
insl
stos
insb
jecxz
push
add
lea
jo
mov
cmp
jmp
sub
push
mov
mov
cmc
aam
add
popa
arpl
push
mov
stc
mov
xlat
or
add
sti
sbb
mov
cmp
gs
adc
inc
cli
push
dec
sub
aas
shl
out
shr
je
in
ja
popf
sbb
mov
and
ret
sub
cs
ret
cld
xor
lods
sti
jmp
fistps
icebp
sahf
sbbl
mov
sbb
das
mov
jp
aad
arpl
adc
loop
pop
clc
mov
xchg
sbb
and
mov
add
xchg
jle
jo
sub
inc
enter
or
mov
sar
mov
push
pop
sub
fcmovnu
mov
dec
push
cmpl
pop
dec
repz
pop
lods
filds
jp
clc
loopne
adc
or
iret
inc
inc
bound
add
mov
je
pop
xchg
lds
add
insb
mov
aad
and
and
pop
ret
std
xor
sbbb
xor
stc
outsl
pushf
dec
xor
cmp
add
stos
in
sahf
pop
cmp
and
dec
inc
fs
loop
dec
mov
inc
mov
push
enter
imul
stos
sub
inc
jle
sub
seta
stc
pop
and
pop
xchg
mov
cs
sbb
repz
inc
dec
adc
repz
xchg
pop
rcrb
mov
push
dec
scas
hlt
jle
aad
xchg
push
jge
lret
push
out
ds
fdiv
jno
pop
stos
xor
cmpsb
in
fs
mov
stc
loop
xchg
popl
xor
sub
shll
aad
sbb
pop
in
mov
rcrl
mov
mov
and
ss
or
jb
sub
movsl
test
xchg
jle
out
jl
aaa
cltd
fs
mov
adc
ss
lret
ret
aas
inc
dec
pop
mov
mov
out
repnz
js
inc
push
inc
pop
imul
shll
and
sahf
sub
inc
aam
adc
pop
mov
inc
add
xor
sbb
fcmovbe
push
push
jbe
cltd
daa
and
arpl
orl
decb
adc
mov
imul
cmp
out
xor
xor
bound
jg
test
adcb
int3
outsl
dec
adc
in
cmp
cmp
add
cmp
sub
hlt
cld
xor
sar
sub
pand
push
mov
push
cmpsl
sub
or
repnz
insl
cli
cmpl
fidivrs
outsb
jne
mov
push
sbbb
imul
adc
incb
mov
fwait
push
rcrl
daa
loop
dec
cmp
jno
gs
clc
jo
in
data16
cmpsb
and
dec
inc
aas
lcall
loopne
xorl
sti
ret
and
mulb
cmpsb
sti
pop
stos
jnp
pop
push
mov
cmc
inc
add
pop
fs
in
sbb
loope
ljmp
push
ffree
dec
ja
test
fs
pop
mov
adc
inc
inc
out
repz
push
lahf
dec
xor
pusha
mov
rcll
fldt
pop
jmp
jns
bound
es
xchg
dec
addr16
push
dec
and
imul
into
mov
aas
popf
mov
pop
and
adc
ret
in
sti
sti
in
ds
pop
in
dec
or
pop
lea
repnz
mov
sbb
cmp
mov
push
xor
sub
shll
xorl
xor
xor
fimuls
jl
or
cwtl
sub
dec
in
dec
cli
cmpsl
adc
cli
push
jp
loope
dec
adc
jmp
cld
shlb
out
stos
jnp
inc
sahf
xchg
lret
cmpsb
ds
lret
add
xlat
bound
sub
movsb
add
pop
fldz
mov
dec
test
out
lahf
jp
dec
std
popa
insb
xchg
jns
push
shrl
adc
push
in
cmp
mov
jg
or
sbb
jb
fdivs
out
cmpsl
decb
sub
fldcw
mov
jno
xchg
sub
cmc
sub
add
dec
test
cmpsb
loope
push
pushf
loop
adc
xchg
sbb
sbbb
add
bound
test
inc
mov
and
ljmp
insb
mov
mov
mov
gs
jle
jecxz
pop
push
inc
scas
outsb
mov
fwait
out
arpl
mov
or
mov
cmp
cs
xchg
mov
fdivrp
popl
lods
sub
rolb
sub
pop
movsb
sub
or
shl
mov
push
xor
and
cli
add
add
dec
fsubrl
popa
ret
rorl
xchg
inc
inc
pop
pop
popa
loope
cmpsl
cmpsb
loope
dec
mov
mov
popf
ret
mov
stos
lret
faddl
mov
jns
xlat
pop
fnstcw
xor
sub
hlt
imul
lret
movsb
mov
lahf
pop
loop
fisubs
popa
xchg
pusha
fildl
xchg
pop
pop
lods
mov
pop
gs
test
xchg
mov
data16
pop
pop
inc
pop
jo
pop
movsb
jmp
mov
inc
dec
mov
ljmp
push
aaa
mov
loope
mov
in
sti
loop
fmuls
mov
daa
adc
or
fwait
out
lods
mov
div
adc
pop
sbb
sbb
gs
aam
adcl
fisttpl
enter
xchg
shlb
push
cltd
jo
addr16
sbb
jmp
jno
out
xorb
jae
sbb
mov
add
cmp
cmp
sbb
adc
das
popa
flds
rcrl
push
lret
rcll
stc
xlat
inc
mov
lods
pop
jl
jmp
push
mov
std
and
push
sub
shlb
jmp
add
mov
jp
push
mov
aaa
dec
sub
or
and
int
stos
cmp
xor
jp
mov
mov
lods
movaps
adc
lds
nop
or
and
jg
nop
rcll
mov
mov
into
mov
test
dec
lahf
outsb
outsb
cltd
in
cltd
movsl
rcrl
loope
out
pop
pop
ret
mov
orb
shrb
mov
scas
sub
pop
stos
int
xor
jp,pn
xor
mov
pop
lret
jno
adc
push
adc
aas
and
test
fbstp
lret
fists
shlb
cmpl
and
cmp
sub
and
stos
lret
add
int
cmpsl
xor
stos
push
pop
jb
xchg
mov
or
mov
into
xor
xchg
xchg
test
or
in
inc
add
sti
lfs
andb
sub
rcl
fnstsw
ret
ret
ja
sbb
es
out
shll
lcall
mov
mov
mov
pop
xlat
out
pop
xchg
sub
mov
popa
mov
xor
dec
shll
subl
cltd
ret
pop
jp
rclb
xorb
sbb
mov
lcall
mov
leave
xchg
aad
imul
pop
arpl
sbb
cmc
push
movsb
mov
sub
shrb
pop
or
mov
inc
loope,pt
and
ret
inc
arpl
inc
dec
cmp
sub
jmp
bnd
cli
pop
push
incl
lods
stc
movsl
sbb
add
cs
outsl
fwait
je
mov
xchg
mov
jb
pop
mov
dec
push
in
mov
pop
adc
sub
test
add
pop
mov
into
inc
std
mov
test
mov
pop
jae
leave
xor
pop
pop
in
pop
pop
int
xor
xor
sub
push
mov
inc
dec
lods
ret
je
sbb
fdivs
pop
test
jne
repnz
adc
mov
push
dec
xchg
add
pop
iret
repz
sub
stc
mov
pop
dec
lods
hlt
mov
dec
bound
or
call
imulb
mov
jb
int3
arpl
clc
cmp
sbb
mov
sub
lahf
push
mov
ljmp
lret
loope
sub
sub
rclb
add
jp
add
lret
loopne
mov
mov
xchg
xchg
jbe
mov
pop
jge
jo
dec
mov
out
push
jno
test
push
lock
int3
nop
scas
sub
xchg
rclb
xchg
push
test
insb
push
outsb
in
outsb
jp
dec
adc
iret
xchg
cmc
icebp
in
mov
inc
or
jo
cs
push
lret
or
mov
push
dec
jne
adc
pop
mov
add
push
jmp
push
cmpsl
cmp
pop
loop
jbe,pt
xchg
jmp
loop
orl
sub
mov
push
lods
in
adc
cwtl
and
iret
mov
adc
xchg
adc
jne
mov
adc
ret
stc
loopne
in
les
mov
mov
cmp
sti
mov
inc
or
jno
aas
mov
sub
test
add
jle
aad
and
adc
cmp
dec
xor
mov
les
and
enter
pop
dec
lods
cltd
sbb
or
mov
mov
imull
fcomps
ja
pop
lds
lods
repnz
test
xchg
sub
sub
inc
dec
arpl
adc
sbb
mov
fldenv
sbb
mov
push
push
mov
test
dec
jecxz
sbb
ret
push
insl
push
clc
popa
or
fistl
cmp
sub
into
out
out
inc
push
sub
shlb
mov
rclb
out
and
mov
mov
dec
or
int3
out
leave
cli
std
add
loopne
jg
je
or
fcompl
out
xchg
dec
jbe
cmpsb
cmp
test
sahf
ret
and
push
lock
fisttpl
push
leave
push
bswap
sub
je
cmpsb
test
ja
js
test
xchg
inc
xchg
fildll
adc
mov
xor
repnz
jp
into
stos
push
es
push
cmp
jae
daa
test
pushf
mov
xlat
aaa
fimuls
in
fdivr
xchg
fucomip
popa
sbb
sbb
xlat
pause
dec
mov
jno
push
mov
sbb
dec
pop
mov
rcr
lret
fbstp
lret
shufps
rcrb
popa
add
xchg
rcr
jbe
xchg
ja
into
stos
push
sarb
fmul
adc
xor
fs
mov
sub
insl
sarl
jbe
movsl
add
push
mov
cmpsb
loop
cmc
loopne
push
jp
outsb
sbb
int3
ja
cmpsb
sbb
subl
sub
sub
jle
decb
test
jp
inc
rcrl
lret
dec
sarl
pop
je
xor
jle
add
fcoml
cmp
mov
sbb
inc
sahf
pop
leave
and
xor
inc
cmpsl
popf
arpl
ret
xchg
addb
push
fsubrl
sub
jmp
enter
imul
insl
mov
rol
cmp
popa
xor
inc
sbb
ds
fbld
arpl
mov
sarl
push
jmp
mov
mov
push
sub
mov
stos
in
inc
pop
lcall
xor
cli
mov
push
leave
mov
mov
cmc
bound
and
dec
mov
mov
dec
shlb
sub
adc
in
jo
inc
lret
pop
arpl
mov
xchg
iret
pop
sbb
add
xor
shl
test
outsb
jns
sub
ja
scas
mov
sbb
leave
push
push
push
pop
iret
jg
pop
ss
mov
jecxz
lock
xchg
int3
mov
xchg
js
mov
pop
arpl
shll
jne
inc
mov
les
jns
xor
mov
orb
dec
and
in
shl
dec
mov
es
push
mov
inc
push
adc
push
call
popa
addr16
xchg
jle
lods
movsb
ja
into
mov
arpl
xor
inc
outsb
daa
mov
repnz
and
add
xchg
pop
out
pop
mov
cmp
push
mov
ficomps
pop
xor
int3
pop
addl
mov
jmp
in
jne,pn
fiaddl
ljmp
add
xchg
cmp
cltd
xchg
andb
jbe
mov
inc
push
cld
adc
xchg
mov
xchg
in
out
ja
mov
in
scas
loopne
dec
pop
xchg
mov
mov
push
mov
in
popf
jns
loope
push
xchg
imul
test
iret
jb
xchg
cli
ficoms
adc
andb
and
lahf
rcll
pop
ss
pop
or
insl
sbb
mov
jno
push
pop
adc
jecxz
jbe
push
pushf
dec
push
cld
pop
push
sbb
push
lods
neg
das
or
aam
adc
mov
dec
xor
sub
int
fiadds
xor
movsl
dec
cmp
xchg
aam
in
jo
jae
cmp
xchg
push
cmp
pop
inc
stos
popf
sbb
lods
stc
cs
jo
dec
sbb
std
fistl
xchg
leave
and
orb
sbbb
jle
es
adc
pop
sbb
cld
mov
cltd
mov
cs
inc
cmpb
or
push
test
pop
popa
stc
lret
aas
xlat
fbstp
fldcw
push
add
and
shl
mov
sub
idivb
bound
jmp
or
ret
jne
in
mov
mov
rorl
mov
inc
mov
inc
enter
and
dec
mov
xchg
xchg
sbb
cmp
sub
out
movsl
xor
scas
test
testl
adc
mov
inc
les
roll
mov
push
adc
stos
cmpb
imul
lds
out
es
mov
ret
stc
sahf
mov
pop
movsw
xchg
push
push
adc
lock
cmpsb
repz
dec
cmp
dec
jb
cmp
push
adc
or
xor
push
or
dec
mov
sbb
into
dec
inc
mov
and
pop
or
cwtl
sub
rolb
addb
lock
pop
mov
xchg
sub
test
add
push
or
jns
imul
icebp
mov
push
fdivrs
jecxz
xchg
push
mov
push
push
stos
or
js
outsb
imul
add
mov
fimull
pop
out
sub
js
clc
cmp
jno
stc
popa
dec
push
test
negl
ficompl
push
insl
dec
dec
ss
adc
in
stc
jno
pop
nop
shlb
clc
lods
ret
in
mov
lods
push
dec
xchg
test
in
mov
mov
sbb
sbb
xor
aad
sub
cmpsb
lds
pusha
dec
jg
int
add
js
cmp
in
sti
pop
push
iret
jbe
stc
dec
adc
inc
loopne
out
cli
inc
xor
sahf
push
flds
pop
nop
pop
add
jne
test
les
aas
je
and
or
xor
mov
cmp
cmpsl
add
arpl
xchg
lods
inc
in
mov
pop
ret
mov
and
add
pushf
push
add
push
aam
loop
pop
lcall
mov
push
inc
xchg
fwait
cmp
xchg
jle
fs
cld
stc
cwtl
mov
push
fisubl
sahf
imul
test
and
rcll
insb
dec
mov
and
fwait
push
cmp
jl
addr16
imul
inc
mov
mov
xor
loop
rolb
nop
push
push
out
sarl
sbb
out
mov
push
icebp
sti
idiv
pop
test
idivl
cmp
jp
cltd
mov
add
scas
js
xchg
adc
sbb
jg
push
movl
inc
jne
add
loop
xchg
xor
dec
repz
scas
mov
and
xlat
jno
outsb
mov
and
lods
and
jl
jmp
push
aaa
out
scas
je
adc
mov
mov
out
outsl
pushf
fs
jge
inc
les
cmpsb
aad
inc
xor
in
push
repnz
daa
fcoml
inc
scas
dec
add
add
inc
imul
jns
les
cmpl
js
dec
pop
and
mov
push
mov
inc
outsl
decl
popa
mov
pop
sub
dec
lahf
lock
lds
sub
ret
idivb
mov
add
cwtl
iret
adc
mov
add
loopne
sbb
and
push
sbb
mov
fwait
xchg
cmp
mov
cwtl
repnz
enter
dec
mov
pop
lret
sti
das
jmp
jnp
add
cmc
adc
mov
fcmovbe
or
or
jae
ss
pusha
aam
mov
pop
and
fcmovnbe
mov
sbb
sub
cmp
sarl
rcrb
int3
and
jg
popa
mov
mov
mov
addr16
add
decb
push
out
aas
add
adc
add
ja
outsb
je
sarl
mov
in
pop
mov
fs
mov
and
jo
fcom
fistps
flds
jg
rorl
arpl
in
testl
push
xchg
mov
dec
jae
push
fadds
repnz
nop
sbb
mov
cmpsb
ret
negb
jno
out
mov
jo
aaa
lret
push
add
push
inc
jb
in
fdivrl
out
jnp
jecxz
mov
mov
shrb
outsb
mov
pop
xchg
stos
and
aam
rorl
stc
lods
in
mov
daa
inc
dec
loope
ds
dec
imul
add
popl
sarb
inc
push
aaa
hlt
imul
sub
fisttpll
inc
bound
int
jecxz
scas
mov
xor
bound
gs
adc
pop
jecxz
cli
test
cltd
stos
into
and
xchg
and
les
sbb
daa
cmpsl
dec
dec
xor
push
ds
cmp
lcall
lock
test
push
pop
jbe
ss
mov
sub
xchg
sti
lret
cli
mov
je
iret
mov
add
jge
inc
cmp
adc
rcr
data16
ret
and
out
testl
cltd
add
insb
jae
popf
push
xchg
dec
stos
cmp
ss
adc
loopne
shl
mov
inc
mov
or
std
out
dec
mov
dec
inc
pushf
out
adc
jb
and
hlt
push
push
dec
or
mov
mov
sub
prefetcht2
pop
sub
push
jp
add
ret
jl
sbb
mov
jns
imul
jecxz
adc
mov
scas
aad
jnp
icebp
cmp
ss
xchg
sbb
inc
or
pop
or
jbe
pop
les
insb
mov
lret
add
xchg
lock
pushl
imul
in
pop
inc
xor
dec
test
loop
cmpxchg
jmp
sub
ljmp
xorl
shrl
loop
xor
pop
andl
scas
ds
xchg
iret
cwtl
xchg
add
push
fsubrl
jb
mov
js
cmp
aad
sub
fwait
cwtl
xor
dec
dec
add
inc
mov
add
push
icebp
xchg
dec
push
cmp
in
dec
in
movsb
imul
imul
dec
mov
hlt
rclb
jecxz
out
dec
out
shlb
adc
jecxz
mov
and
xorl
out
subl
insl
subb
sub
roll
jge
inc
pushf
dec
cltd
jecxz
arpl
push
fldcw
jecxz
pop
frstor
loopne
push
xchg
mov
inc
insb
xchg
aam
mov
aam
and
mov
dec
add
repnz
or
pop
mov
cs
loopne
inc
add
into
or
or
out
and
dec
lret
add
in
into
test
test
imul
push
dec
lea
in
fwait
or
xor
add
or
mov
or
aad
inc
and
inc
inc
fsubrl
push
sub
loop
pop
mov
cmp
push
push
mov
push
add
in
mov
jle
fistpll
fiadds
xchg
repnz
jne
xor
arpl
stos
bound
mov
sub
jl
xchg
aas
pop
lea
mov
movsl
mov
lea
test
cmp
lock
stos
xor
leave
fadds
mov
stos
push
fdivr
push
mov
test
ljmp
hlt
out
popa
adcb
dec
pop
verr
mov
sahf
pop
xlat
xchg
and
lcall
and
xor
dec
clc
sbb
adc
scas
mov
scas
xchg
and
fsubl
rorb
mov
in
inc
call
mov
std
loope
iret
ss
mov
icebp
ret
and
push
cld
sub
xchg
mov
pop
adc
add
stos
outsl
jmp
mov
lods
or
cld
sbb
and
cmp
aas
loopne
jg
nop
and
mov
push
push
pop
and
jbe
in
mov
inc
loope
int
call
ljmp
sbb
js
sub
pushf
or
mov
mov
in
orl
mov
dec
pop
pop
fwait
loopne
test
fldenv
adc
or
mov
fsts
insl
xor
mov
out
cltd
ret
mov
xchg
dec
sub
leave
fmuls
xchg
jnp
jb
push
sti
leave
jmp
cltd
cs
mov
ret
inc
shlb
data16
stos
lea
fistpl
aad
pop
mov
pop
adcl
movsb
sti
sbb
sbb
mov
stos
adcl
push
cltd
mov
push
cld
out
adc
pusha
aad
shr
cmp
xor
cmp
sbb
rclb
xchg
stos
fsubs
loop
fs
mov
xor
mov
xchg
mov
mov
popf
cwtl
icebp
enter
pop
jmp
stos
aam
insl
dec
and
imul
or
jmp
add
sbb
xor
adc
push
xor
cli
mov
es
jmp
pop
fcoml
and
mov
pop
add
notl
or
addb
pushf
scas
test
pop
insl
cmp
aaa
dec
pcmpgtw
fstpt
add
mov
test
call
stc
jl
push
cs
shlb
fiaddl
push
test
lahf
hlt
inc
mov
sbb
jmp
int3
shr
pop
enter
and
pop
nop
pop
xor
int3
jmp
xchg
sub
cli
cmp
mov
mov
sub
sbb
fsubl
cmc
adc
pop
xchg
aad
popa
cs
jg
xchg
arpl
js
mov
loop
jg
mov
lret
adc
xor
jecxz
or
adc
inc
pop
and
adc
call
dec
fs
lret
and
test
jmp
jg
xchg
adc
and
outsb
push
ss
paddsw
mov
sbb
sub
test
notl
fwait
aaa
xor
xor
dec
rcrb
outsb
rep
lods
jecxz
cmp
pop
lods
push
xchg
fwait
push
notl
cltd
mov
arpl
mov
hlt
pop
aaa
pusha
mov
adc
push
xchg
mov
sahf
lret
xor
mov
sbb
jg
popa
aad
xlat
xor
lcall
xor
xor
add
movsb
push
adc
pop
pop
jle
push
lods
fsubrs
xchg
adc
js
jge
leave
xor
mov
mov
lods
xor
or
fs
daa
or
cli
leave
aaa
inc
jb
jecxz
xlat
push
or
sbb
sub
ret
jbe
mov
or
in
into
push
outsl
imul
inc
dec
jnp
or
dec
mov
pop
cmpb
fists
fcmovb
fcoml
test
cs
mov
std
fmull
insl
hlt
xchg
push
adc
loop
lret
insb
cmp
cmc
fbld
arpl
jnp
das
fbld
gs
xchg
fistpl
pop
aam
lock
fucom
mov
add
sbb
aad
jle
inc
sub
inc
cmp
jl
xchg
xor
push
orl
lret
fldt
inc
test
ret
daa
aas
mov
jp
lds
sbb
fnstsw
pop
mov
pop
arpl
sbb
in
lahf
jmp
addr16
push
out
sbb
add
cvtpi2ps
mov
es
lods
pop
xor
clc
cmc
xchg
leave
jae
insl
pop
push
pop
ret
and
lock
rol
cmp
xchg
dec
shl
adc
sub
and
insl
xchg
lock
mov
mov
xor
sahf
lds
lret
movsb
aam
pop
fwait
and
fidivrl
aaa
xchg
pusha
inc
div
add
outsl
fdivs
fwait
iret
jnp
filds
scas
sub
sahf
jp
fldcw
xchg
pusha
dec
cmp
or
jp
dec
hlt
pop
es
mov
mov
aaa
inc
outsb
or
inc
loopne
inc
jmp
ljmp
add
aam
daa
push
xchg
adc
and
das
mov
cmp
cmp
imul
or
cltd
push
or
test
pop
fdivrs
mov
sbb
mov
or
mov
xor
and
mov
push
into
je
cmp
roll
fs
movsb
insl
push
pop
add
and
lret
dec
popf
decb
ret
jl
fsubs
fcoml
int
ret
pushl
dec
cmp
mov
in
mov
dec
popa
cmp
add
je
xorl
loopne
movsl
dec
out
aas
add
fildll
stc
sbb
adc
adc
pop
repz
xor
negl
jo
fisubrs
imul
pop
or
mov
add
mov
pop
rorl
hlt
sbb
mov
pop
es
jo
rcll
lret
push
jl
je
and
mov
jno
fldl
xchg
cs
or
mov
pop
xchg
sbb
js
sub
int
mov
cmp
mov
jae
push
popf
test
aas
pop
mov
or
push
push
mov
jle
sub
lahf
pop
push
xchg
sub
int3
push
sub
std
movsb
stos
mov
xchg
push
jo
mov
push
mov
rorl
fwait
sub
dec
jmp
lock
cmpsb
cmp
cmpsl
and
jns
or
or
aad
pushf
sti
adc
shrb
push
addb
fsts
cmpsb
adc
adc
mov
xchg
fucomi
cld
dec
mov
xor
dec
lahf
dec
rcr
pop
loope
mov
dec
rcll
dec
pop
pop
lods
sbb
je
in
jns
adc
rolb
fwait
call
and
loope
nop
mov
pop
or
pop
dec
mov
shrb
fldt
repz
xchg
xor
cmp
inc
loop
sub
inc
push
jno
dec
push
call
xor
addb
out
push
cmp
cli
ja
pop
inc
fildl
test
inc
pop
push
xchg
stc
stos
jo
xchg
lods
cmp
les
or
xchg
aam
sbb
pop
icebp
push
jbe
fidivl
bound
mov
cmpb
stos
pop
jno
icebp
push
gs
mov
xchg
out
mov
test
push
pop
stos
pusha
ret
mov
je
xor
fistl
mov
lea
inc
or
shrl
es
pop
shlb
or
xchg
cmp
stc
cmp
xor
sub
push
popa
jns
sub
icebp
mov
divb
mov
jp
jae
lods
fucom
fcmovnbe
jne
cmpsb
aaa
mov
hlt
mov
and
cwtl
addb
insb
xor
dec
imul
add
mov
push
dec
push
scas
dec
mov
dec
shlb
inc
jmp
rcr
or
lds
add
ss
scas
mov
mov
push
pop
loop
inc
fstps
icebp
das
mov
or
fs
arpl
add
jecxz
mov
sbb
lahf
insl
popa
mov
ret
xchg
je
sbbl
cmp
lods
and
pop
enter
imul
mov
dec
xlat
sub
pop
repz
sbb
or
or
lods
stos
cmp
inc
std
sbb
enter
add
xlat
pop
lods
inc
leave
xchg
push
jne
push
mov
imul
cmpsb
ss
adc
scas
fistps
fidivs
push
xchg
pop
pop
idivl
mov
xor
push
or
das
repz
fs
xchg
out
xchg
xchg
dec
adc
xchg
xchg
es
push
cmp
fcomps
daa
push
in
or
mov
or
incl
arpl
xchg
xlat
sub
nop
jbe
mov
inc
popa
xchg
xlat
jns
xor
push
fsubs
sub
out
xor
adc
dec
cmp
cmp
adc
sbb
and
bound
jne
mov
popa
test
and
adcl
aaa
popf
test
je
popf
jne
inc
mov
data16
ret
daa
mov
and
sub
jmp
dec
mov
inc
push
mov
cmp
sub
cmp
mov
cltd
imul
incb
xor
repz
inc
xor
out
jbe
ret
lods
popf
or
push
add
mov
subl
pop
hlt
inc
les
repz
testb
shlb
daa
test
test
mov
rcll
pmaxub
xor
mov
jecxz
mov
mov
mov
pop
mov
dec
nop
les
movsl
sti
jmp
pop
pop
pop
adc
cmp
jnp
inc
jno
xchg
sarb
in
pop
pop
sub
out
pusha
jg
outsl
clc
pop
outsl
sub
setp
imul
stos
xorb
push
mov
xor
call
fstpt
sbb
inc
fistpll
es
and
xchg
adc
mov
in
jp
xor
dec
nop
cmpl
mov
cli
in
jne
mov
fs
lock
cltd
repnz
pop
mov
mov
int3
shl
cmp
aaa
dec
outsl
test
pop
inc
or
sti
inc
mov
xor
inc
ds
cmp
lods
mov
enter
and
mov
loopne
inc
lds
add
mov
lret
stos
je
idivb
cmp
xchg
add
push
dec
push
popf
cmc
xchg
test
push
icebp
call
ret
push
xchg
adc
hlt
mov
add
test
and
sub
and
aas
sub
enter
or
xor
mov
stos
cmpsl
pusha
mov
add
or
sub
adc
push
dec
sti
dec
pop
inc
test
pop
or
loope
ret
mov
inc
push
call
cmp
xchg
fbstp
out
clc
xchg
and
xchg
repz
jl
lds
call
cwtl
insl
xchg
xor
dec
std
fwait
in
mov
repnz
inc
mov
sub
fwait
and
lret
mov
hlt
xor
inc
push
push
ffreep
test
sbb
push
outsb
cwtl
mov
mov
mov
push
pop
scas
bound
rcrl
popf
cmpsl
pop
push
loopne
sub
cmpsb
andb
ljmp
xor
inc
lods
icebp
push
xor
mov
es
xor
nop
push
sbb
bswap
add
add
mov
adc
loope
push
in
dec
push
and
inc
pop
out
xchg
imul
sbb
sub
adc
adcb
inc
jmp
dec
jge
in
icebp
sub
dec
ljmp
cs
sub
insl
mov
int
cwtl
cli
ret
add
inc
sub
mov
jae
jmp
ss
cmp
pop
push
loopne
in
ret
das
adc
pop
add
decl
call
push
cmp
lea
add
sbb
mov
mov
xorb
enter
mov
insl
sub
lea
and
cmpsl
xor
fs
loop
sahf
xchg
pop
inc
jecxz
dec
xchg
outsl
decw
fstl
test
fisttps
pop
xor
or
imul
jmp
ret
jb
cmpl
fwait
mov
jmp
ja
sbb
daa
cs
loop
adc
jnp
clc
sub
mov
jb
xchg
inc
aas
ss
mov
sub
cmpsb
xchg
aaa
stos
pop
jl
jmp
or
xchg
out
clc
dec
addr16
xchg
xorb
stos
int3
aam
call
cmp
inc
inc
popa
push
cmp
jp
iret
addl
test
cmp
jecxz
jmp
mov
fadds
shrl
call
xchg
aas
push
sti
add
dec
cmpl
inc
ljmp
jns
jle
xchg
inc
add
bound
in
daa
stc
icebp
sbb
into
mov
shr
fwait
test
push
or
cwtl
sub
and
imul
or
inc
fucomi
dec
mov
addr16
xchg
ret
scas
jp
and
fdivs
test
dec
sbbl
cwtl
mov
mov
and
sub
push
sar
cli
pop
ljmp
xor
and
adc
mov
shl
cmp
add
ret
and
stos
insb
xlat
push
rclb
stos
hlt
add
test
cmp
add
rorl
pusha
enter
xchg
xchg
popf
adc
xchg
pop
lods
aaa
jmp
cmp
sub
outsb
jmp
cmc
or
cli
cmpsb
fsubrs
dec
dec
lds
and
xor
popa
cmp
inc
push
shlb
xlat
mov
cmpb
sbb
xor
loopne
lods
dec
rcrl
mov
fwait
pop
adc
dec
nop
cmpsb
adc
push
test
faddl
cmp
ss
inc
mov
jmp
out
addr16
aam
mov
rclb
xchg
stos
daa
in
les
dec
add
jp
nop
mov
cmp
inc
mov
subb
rcrl
aas
hlt
xchg
push
sti
js
or
adc
pop
lret
les
add
loop
mov
mov
clc
fcomi
jae
es
mov
inc
mov
xchg
jne
cmp
pusha
out
adc
jge
push
dec
cwtl
xchg
mov
loopne
fdivrl
add
out
mov
cld
add
adc
mov
inc
mov
cmp
ffree
flds
mov
sub
hlt
add
add
add
mov
in
mov
pop
out
mov
or
imul
loop
loopne
insb
pop
add
sbb
out
add
out
testl
fistps
adc
popf
dec
movsb
test
sub
mov
stos
stc
mov
push
ja
dec
inc
sbb
pop
loopne
inc
jns
xor
adc
test
push
xor
aam
mov
jbe
mov
imul
dec
pop
in
sub
jge
test
mov
insl
push
adc
mov
sub
movlps
insb
loope
loopne
out
outsl
or
in
das
icebp
rol
mov
xchg
loop
shr
stos
push
dec
insl
je
daa
popf
xlat
call
mov
jb
popf
outsl
adc
outsl
subl
fsub
dec
pop
into
inc
mov
and
or
jge
add
jp
mov
push
imul
lock
es
pop
fs
adc
repz
pop
mov
mov
ljmp
stc
jae
icebp
push
add
sbb
lock
ds
cmp
lcall
cmp
int
aas
call
jmp
dec
aam
in
lahf
fs
mov
mov
xchg
sub
fdivrs
or
push
inc
cmp
or
fcomi
jl
push
in
test
or
xchg
xor
stc
cs
mov
sbb
pop
les
jecxz
clc
or
sbb
ret
into
push
pop
jne
push
ret
lea
jns
pop
mov
xor
add
ja
aaa
jb
xchg
in
dec
test
cmpl
popa
push
xlat
jne
xchg
insb
mov
mov
movsb
mov
je
xor
add
jne
das
fwait
push
mov
push
das
sub
insl
and
jl
shrb
pop
mov
ja
sbb
push
mov
ja
jmp
pop
fdivrs
adc
enter
fstps
fiaddl
push
lock
sbb
out
sub
add
rclb
jmp
decb
je
pop
cmp
push
cmp
repz
inc
and
mov
sahf
add
push
and
pop
adc
mov
mov
lods
stc
sub
adc
sbb
dec
std
dec
inc
hlt
sbb
xor
inc
les
movsb
imul
inc
cwtl
sbb
push
mov
lret
shlb
cmp
and
mov
cmp
fistps
in
push
or
jb
jmp
imul
aas
jo,pn
les
add
jo
jno
das
ja
ficompl
and
das
cltd
pop
shrl
xchg
push
decl
outsb
mov
aam
mov
test
jg
pop
sbb
inc
mov
fdivs
push
shrl
pop
pop
call
pop
dec
adc
push
imul
jge
imul
out
dec
fs
push
xchg
sub
cmp
std
cli
sti
jecxz
dec
mov
cmp
dec
outsl
sub
push
pop
lcall
mov
or
loop
dec
mov
stc
cli
mov
arpl
cmpsb
repz
pop
xlat
inc
pop
divl
enter
pop
aaa
out
mov
in
pushf
add
sub
in
xor
jp
mov
int
xchg
clc
imul
push
jmp
lods
adcl
xchg
or
or
cwtl
test
movsb
push
sbb
lock
xchg
das
cmp
imul
sub
xchg
xor
pop
pop
inc
fmuls
mov
pop
int3
jb
sbb
and
and
pop
subb
sti
mov
mov
test
cmp
add
push
movsl
int3
pop
fildll
fcom
lds
fimuls
lahf
mov
mov
pop
and
push
sub
cltd
in
std
subb
cmpsb
fmulp
pop
push
xor
ljmp
mov
repz
loopne
ss
jp
inc
loope
repnz
mov
adcl
xchg
outsl
adc
je
inc
sub
jbe
pop
pushf
jl
js
movsb
mov
fstpt
movsb
sti
jmp
xchg
rcrb
mov
imul
xlat
lahf
loope
jp
jmp
push
mov
fcomps
push
iret
into
xchg
xchg
lds
popa
jp
cmpsb
out
pop
xlat
inc
lret
jecxz
test
adc
loopne
or
test
mov
inc
dec
das
xor
mov
sub
shll
sub
decl
add
push
inc
cmpsl
mov
push
aaa
into
lock
jns
loopne
nop
xchg
mov
jge
sbb
xchg
shrb
pop
mov
mov
jnp
dec
mov
or
std
xchg
mov
aas
and
mov
imul
ss
pop
jb
xor
push
icebp
xchg
nop
and
sahf
adc
cltd
push
je
ljmp
lea
mov
movsl
sbbb
out
xor
mov
in
dec
in
sub
clc
xor
jmp
inc
jmp
aas
push
enter
push
imul
mov
sbb
sub
add
out
mov
xor
or
push
mov
std
loopne
mov
jb
sbb
fsub
hlt
pop
cwtl
lods
jo
xor
ljmp
aas
xchg
jge
lods
rcrb
imul
sub
dec
fs
lds
push
sub
shrl
inc
mov
leave
add
gs
ret
add
jge
jbe
jge
mov
xchg
jmp
fsubrp
inc
xor
repz
cmp
hlt
imull
imul
lods
xchg
jnp
imul
xlat
decl
jno
arpl
sahf
push
jecxz
into
or
sub
jle
jns
and
outsl
test
mov
push
push
inc
fsubrs
inc
data16
fucomip
add
inc
and
imul
lret
xor
lcall
stc
fcoml
std
rolb
adc
decb
je
xchg
add
scas
mov
or
in
cmp
ffreep
lods
in
jl
mov
rorb
fwait
cmp
ss
int3
push
lcall
fs
inc
pop
push
testl
mov
sti
xchg
leave
mov
popa
lcall
fs
and
filds
push
ja
fwait
push
sub
dec
scas
adc
lea
or
fs
xchg
ljmp
mov
leave
lahf
pop
mov
les
jns
mov
jecxz
cmc
and
sti
adc
loope
push
sbb
arpl
pop
fs
push
divb
addr16
mov
sub
push
xchg
push
jne
push
jae
insb
adc
push
rorl
mov
imul
orb
and
mov
or
pop
inc
push
cmc
pusha
ret
mov
fisubs
mov
cwtl
mov
in
insl
mov
sub
lea
sti
bnd
pop
dec
loop
lods
pop
jnp
and
popf
scas
sub
insb
xor
fwait
pop
mov
jb
iret
add
inc
pop
pop
aaa
out
xchg
push
ss
xchg
stc
out
push
movsl
and
dec
addr16
and
inc
cmp
fnstsw
fnop
cmp
popl
xchg
push
dec
xchg
mov
leave
int
add
dec
subb
popa
xlat
call
sbb
lret
ljmp
adcb
push
in
push
sbb
ret
cmp
mov
repnz
pop
fsub
rcrl
andl
mov
pop
push
sarb
iret
mov
xchg
clc
into
pop
pop
repz
fs
dec
mull
push
mov
sti
loopne
lahf
jnp
mov
outsb
loope
mov
jae
cli
cmp
out
insb
mov
imul
pushf
rcll
inc
fnstsw
popf
mov
test
mov
clc
addr16
jo
push
nop
rorl
sbb
iret
div
cmpsl
cltd
hlt
xchg
lock
loopne
mov
xor
scas
jno
dec
dec
mov
in
jo
mov
insl
incb
rclb
addr16
scas
push
inc
data16
test
scas
xor
push
imul
push
lret
das
mov
movsl
js
mov
dec
ret
push
add
push
mov
sub
ljmp
cmpsl
mov
aaa
out
in
jbe
xor
jnp
ror
out
sbb
mov
jmp
inc
ss
dec
sub
dec
xchg
lods
xchg
mov
pushf
xor
mov
sti
mov
dec
adc
xor
out
je
std
bound
push
pop
cmpsl
mov
mov
mov
lds
div
popf
add
nop
pop
or
scas
insb
mov
inc
add
inc
arpl
inc
scas
xchg
push
icebp
sbb
xchg
jmp
mov
fidivrs
dec
or
pushf
mov
int
flds
sahf
xor
xorl
and
daa
mov
jp
jge
mov
repnz
divb
sti
in
xchg
aam
rol
add
jo
sub
and
mov
adc
std
ret
filds
xchg
popa
inc
out
sub
dec
int3
fimuls
scas
fcmovnu
jbe
mov
or
push
lcall
sub
add
cmp
in
out
or
sbb
mov
mov
ficomps
xchg
cmp
enter
das
aad
test
inc
or
jmp
inc
in
cmpsb
jns
fsts
fs
mov
repnz
jae
push
jne
cli
mov
pop
fcoml
sbb
fcompl
sahf
pop
sub
cmp
ja
push
push
out
pop
inc
add
lahf
sub
es
push
pushf
and
sarl
inc
mov
into
popa
dec
jg
jle
xlat
imul
mov
orb
sbb
cmpsb
push
pusha
push
xor
or
and
or
or
pop
lahf
jb
jle
imul
outsb
sbb
adc
nop
lds
out
in
pop
push
or
adcl
rcr
sbb
pushf
sub
push
xchg
xchg
push
mov
imul
dec
repnz
push
mov
jb
out
xchg
dec
mov
rorb
sub
or
sbb
mov
jmp
je
dec
or
xchg
add
and
je
pop
cwtl
dec
sub
mov
fists
insl
pop
shrl
repnz
std
mov
les
popa
addr16
mov
push
cli
dec
pop
xchg
cs
xor
cmp
xor
je
jo
test
dec
lock
decb
fsubrp
rclb
mov
jne
add
dec
mov
loop
dec
rolb
adc
inc
cmp
bound
push
ljmp
and
jbe
mov
push
mov
inc
adc
inc
xchg
sbb
je
iret
jo
add
sub
xor
scas
out
push
lock
std
push
popl
inc
push
inc
sti
jmp
cmpsl
loopne
or
add
negb
dec
jno
lds
jg
ss
repnz
lret
lods
cmpsl
xor
lret
mov
push
sub
xor
xor
test
mov
loop
mov
lret
add
mov
std
loope
push
push
testl
inc
sbb
ss
dec
cld
fwait
sahf
fisttpl
pop
xchg
lret
das
pop
insl
and
mov
iret
loop
inc
sbb
dec
pop
les
rcrb
bound
push
jecxz
sbb
cld
mov
lds
push
lock
jne
add
lcall
sbb
mov
cltd
outsl
and
js
outsl
mov
lret
mov
in
lcall
mov
inc
push
fmull
shrb
cmp
jae
loopne
rcll
sahf
sub
in
xchg
inc
xchg
jge
push
paddusw
in
push
jl
mov
or
insl
sub
add
lds
push
aam
scas
fs
stc
enter
test
les
lods
pop
test
pop
aas
repnz
cmp
addb
xchg
filds
pop
push
es
xor
mov
sub
mov
cmpsb
xlat
inc
das
mov
push
not
sbb
dec
or
lds
jae
sub
dec
lcall
iret
xchg
lret
adc
fwait
ret
outsl
cmp
push
bound
loop
nop
xor
divl
mov
ficomps
fsubr
inc
cmp
outsb
outsl
and
adc
dec
cltd
adc
mov
xchg
pop
in
test
int3
dec
xor
push
call
je
pop
mov
or
xchg
out
inc
loope
push
sbb
scas
mov
les
test
add
xor
xor
decl
pusha
or
loop
icebp
sub
mov
mov
and
mov
mov
add
cld
fidivs
rcrl
sbb
mov
pop
js
js
out
aaa
iret
icebp
mov
jge
and
or
test
lds
in
xor
aad
xchg
sahf
scas
mov
loopne
xchg
pop
int
lds
js
sbb
mov
dec
rcll
xor
outsb
mov
pop
xchg
loopne
jp
xor
mov
add
inc
mov
mov
fbstp
jno
cmp
xchg
les
push
mov
hlt
mov
stc
mov
daa
pop
add
leave
ficoms
sbb
xchg
push
loopne
lret
inc
mov
jmp
sti
repz
adc
fidivs
lods
pop
pop
fldt
jb
test
cmp
int3
xchg
inc
nop
and
or
lds
imulb
jmp
movsb
and
outsb
inc
or
popa
jg
push
lock
repz
mov
cmp
xor
mov
das
test
inc
outsl
dec
std
cmovb
cmpsw
inc
mov
pop
sbb
adc
and
xchg
or
fwait
cmp
sbb
xchg
jge
fdivr
mov
leave
outsb
push
add
dec
jne
pushf
cmpsl
sbb
sar
or
push
lcall
adc
fisubl
cld
call
sbb
les
lcall
add
sub
dec
xor
mov
dec
fisubrs
outsb
fidivrs
leave
add
xchg
push
inc
testb
pop
mov
sbb
jmp
flds
xlat
xchg
jns
jnp
push
aad
or
xor
ret
loopne
fs
cmpb
sbb
pop
in
test
ret
cmp
mov
cmp
ret
into
fsubrs
shll
jmp
out
jnp
push
mov
movsl
or
xchg
mov
andl
lock
add
psubusb
lock
xchg
xor
pusha
and
js
in
cs
push
or
loope
outsl
cmpsl
loopne
arpl
or
fisubl
cmp
das
es
mov
sub
movsb
dec
inc
cli
cmpsb
add
mov
pop
fiadds
cld
js
bound
pushf
popf
push
ss
enter
cs
sub
pop
jbe
lods
repnz
les
test
cmp
xor
out
aad
fdivrp
lret
mov
pusha
jle
faddp
shll
mov
inc
lods
pop
mov
movsl
lods
test
les
mov
outsl
inc
fildll
js
push
mov
sbb
adc
xchg
shl
fcomip
or
mov
lahf
mov
mov
push
mov
loop
cmp
sub
pop
xor
jecxz
add
xor
jmp
out
imul
xor
loope
inc
mov
inc
les
pop
fsubl
jecxz
sti
and
inc
mov
es
iret
jge
clc
aad
adc
sub
dec
adc
lret
fmuls
inc
arpl
mov
leave
call
imul
jle
add
lret
xor
lds
inc
loop
add
fadd
adc
jo
cwtl
inc
stos
pop
js
fdivrp
stos
or
repnz
repnz
lcall
in
dec
repnz
push
aam
fadd
imul
sub
xor
sbb
loop
shll
mov
and
insb
stos
and
hlt
mul
addb
cmpsl
add
test
inc
xor
je
push
shlb
pop
fistps
rclb
filds
arpl
mov
push
sbb
cli
xchg
je
jecxz
push
sarb
adc
out
inc
xorl
sub
fidivl
loopne
rcl
repnz
pop
adc
jp
arpl
out
inc
mov
pop
out
push
mov
pusha
adc
int
sub
cmc
add
inc
and
or
push
jnp
mov
sarl
xchg
xor
mov
pop
sub
add
pusha
xor
sub
inc
and
das
adc
cli
ljmp
xchg
push
cmp
cs
cmpsl
testl
mov
in
out
xchg
cwtl
sbb
scas
adc
sub
rorl
fsts
push
xchg
pushf
adc
pop
add
or
test
test
cld
ljmp
dec
sub
and
enter
in
ret
rcrl
aad
les
and
mov
dec
fsubs
mov
stos
push
testl
add
mov
cld
jecxz,pt
arpl
hlt
mov
pusha
std
mov
push
push
jnp
nop
xchg
loop
jne
sub
pop
gs
xchg
out
loopne
mov
jg
jmp
bound
adc
pop
out
in
sub
test
and
xor
xor
cmc
arpl
mov
mov
lcall
test
inc
cmpsb
les
mov
scas
xchg
loop
cmp
les
cmc
jo
sbb
inc
fs
sub
mov
adc
push
jp
pop
xchg
push
fidivl
gs
jae
je
mov
pushf
dec
xlat
pop
ret
mov
xchg
test
pop
cmc
jle
inc
cmp
loope
mov
or
push
inc
aas
adc
mov
xor
push
sbb
clc
mov
xor
out
jne
js
inc
and
sbb
andb
or
and
dec
in
push
repz
pop
out
jmp
and
out
inc
mov
filds
in
pushf
jne
cmc
sub
mov
pop
cmp
mov
add
cs
ficompl
mov
lea
cltd
movsl
cltd
xor
sub
loop
movsl
inc
ja
or
mov
inc
test
inc
shlb
pop
adc
dec
adc
jp
mov
in
push
mov
inc
cwtl
fsubrs
mov
fisttps
loop
leave
jle
fwait
sub
add
rolb
dec
popf
cli
pusha
pop
mov
pop
mov
xchg
and
ds
xchg
xor
sub
push
cmp
sub
mov
pop
fldcw
adc
mov
cmp
flds
jns
mov
adc
push
leave
bound
sub
push
ret
stos
popf
gs
outsl
call
movsb
or
push
popa
mov
lock
outsb
inc
and
cmp
les
pop
xchg
fsts
fs
imul
jl
mov
cmp
pop
fwait
pop
xchg
and
mov
inc
dec
cmp
cltd
mov
sbb
cld
jmp
aad
dec
paddusw
or
sahf
push
mov
jno
push
jl
dec
mov
mov
jne
iret
in
cmc
cwtl
inc
and
push
icebp
lock
jg
sub
into
push
adc
sbb
movsb
out
sub
adcb
adc
call
sub
cmp
pop
mov
mov
xchg
shlb
roll
push
mov
cmpb
dec
hlt
shl
lahf
cmp
inc
jmp
add
mov
testb
and
jg
mov
jge
xchg
stc
mov
adc
xchg
scas
mov
filds
push
insl
aam
pop
push
xorb
in
or
push
fisubs
jno
pop
sub
fcompl
mov
dec
xchg
ds
int3
pushf
sbb
mov
mov
cmp
repz
daa
xchg
add
xchg
dec
push
cwtl
clc
pop
ficompl
or
outsl
pop
cmp
sub
sbb
pop
sbb
inc
and
hlt
call
fs
lds
aas
out
lret
cwtl
jge
xchg
je
cld
adc
ljmp
xchg
sahf
cmp
jbe
sub
lret
sbb
sbb
and
imul
fldenv
je
iret
sarb
push
sub
adc
cmc
mov
fstp
mov
lret
mov
test
shll
xchg
mov
sbb
inc
stos
sbb
outsl
outsl
int
into
loope
dec
mov
and
jb
ljmp
xor
fcomp
xchg
xor
jl
inc
inc
mov
push
sarb
fcoms
adc
jnp
xchg
fsub
dec
sbb
jg
mov
adc
aas
mov
mov
push
cmp
scas
imul
movsb
push
inc
mov
out
fldcw
push
stos
push
pop
scas
sub
and
test
fnstcw
out
shlb
imul
cmp
insb
lods
repz
shrb
arpl
mov
cmc
push
sub
std
enter
xlat
cmpsl
add
jmp
cmp
add
mov
or
push
popf
inc
fsubp
inc
cwtl
mov
xchg
in
aam
ret
repnz
in
and
xor
outsb
outsb
neg
adc
test
dec
xchg
loop
cltd
or
mov
scas
movsl
mov
divb
dec
aaa
lcall
pop
cmp
pop
adc
push
test
dec
roll
sbb
pop
or
push
jmp
test
lret
sarb
and
out
mov
dec
mov
cmp
fstps
pop
leave
push
jns
or
fildll
sub
xchg
add
arpl
je
clc
pop
fsubs
sbb
cmp
cmp
xchg
cli
sub
les
ljmp
mov
jp
test
sbb
imul
in
inc
push
and
pop
inc
and
mov
pushf
pop
testb
mov
sbbl
int
or
xor
add
or
mov
movl
add
xchg
int3
leave
fsubrs
add
xor
pushf
xor
xlat
stos
push
mov
cmp
sbb
inc
dec
mov
cwtl
rorl
adc
int3
mov
aad
fcom
sbb
inc
pop
push
hlt
or
fisttpl
jo
sbb
or
push
xchg
xor
mov
imul
pop
sub
fadd
call
dec
mov
ljmp
xchg
loope
enter
pop
mov
sahf
repnz
mov
xorl
mov
mov
icebp
jg
add
xor
mov
out
aaa
inc
or
xlat
movsl
jmp
insl
lock
sbbl
rolb
les
pop
aaa
das
mov
pop
leave
fsubrs
scas
inc
shll
shlb
cmp
jo
iret
rolb
inc
dec
lods
xor
jp
dec
add
adc
insb
repz
movsb
sarl
cs
ret
popa
add
dec
fldenv
shrd
arpl
push
add
pop
pop
and
or
call
mov
mov
xor
dec
test
dec
mov
mov
inc
jmp
or
repnz
xchg
outsb
sub
aas
popa
dec
push
xor
in
mov
jnp
inc
cmp
sbb
push
xor
cmp
cs
add
jp
sbb
loopne
adc
xchg
mov
mov
fisubl
addr16
aaa
je
pop
xor
ss
pop
stos
jns
lahf
mov
in
xlat
jnp
inc
repz
or
push
cld
aaa
cld
add
pushf
xchg
dec
mov
orps
insb
ret
mov
pop
add
sahf
shrb
sbb
mov
sbb
hlt
xor
inc
mov
aas
jmp
sbb
inc
iret
out
push
or
mov
dec
xchg
xor
push
add
cltd
mul
daa
pop
and
dec
and
dec
mov
mov
cmp
mov
popa
mov
addb
adcl
jnp
rcr
mov
test
mov
filds
iret
fwait
or
nop
xor
mov
lret
movsl
mov
std
or
mov
movsl
sub
popf
ret
hlt
adc
outsb
mov
outsb
fdivs
repnz
mov
pop
add
dec
loop
mov
jecxz
cs
dec
sbb
fsubs
jne
imul
mov
call
mov
in
jb
popa
aam
and
cld
lea
mov
sub
dec
arpl
jmp
add
jb
fdivrp
idivb
fisttpl
adc
ret
mov
mov
lcall
jmp
nop
push
lods
pop
push
pop
in
ss
add
outsl
dec
inc
pop
jp
test
cmp
jno
jne
or
repz
ficoms
lahf
fnstsw
mul
mov
scas
inc
shll
sub
pusha
or
sbb
push
xor
iret
test
mov
xchg
pop
testl
mov
push
test
int3
outsb
mov
ds
loope
and
decb
inc
scas
mov
insl
mov
inc
clc
outsl
or
loopne
dec
push
mov
mov
adc
xchg
adc
dec
add
jb
inc
test
xor
cli
cmp
jns
data16
jno
mov
sahf
lahf
in
push
jp
and
dec
sub
aaa
sub
and
mov
leave
jno
ds
xor
dec
push
mov
fbstp
jo
es
inc
rclb
fistpll
mov
jg
xchg
test
mov
lea
mov
add
stos
mov
mov
les
imul
mov
mov
or
and
adc
outsb
inc
jnp
dec
push
sbb
dec
call
push
aam
mov
dec
push
stos
popa
js
leave
mov
mov
xor
xor
mov
mov
mov
ljmp
in
push
repz
les
pop
push
es
inc
jns
xchg
in
test
fs
sbb
sub
push
xchg
xor
mov
iret
mov
sbb
jg
mov
mov
loopne
xchg
fistps
flds
inc
into
mov
pop
js
sbb
inc
or
xchg
ljmp
inc
into
test
fistpll
popf
subb
mov
xchg
cmp
dec
jne
adc
jge
xor
ja
dec
sbb
frstor
lcall
imul
mov
lcall
cmp
imul
fwait
jmp
mov
mov
stc
pop
loope
inc
addr16
jp
fistps
repnz
dec
insl
jl
push
inc
stos
push
insb
dec
push
jnp
cltd
into
pop
lahf
insb
push
gs
jle
mov
cld
or
dec
cmpsl
jmp
inc
fwait
les
cs
stc
sahf
push
mov
push
popf
mov
gs
mov
imul
push
lret
add
add
push
jne
icebp
push
shlb
xchg
movsb
pop
insl
inc
push
pop
mov
jecxz
xlat
fs
inc
jnp
mov
subb
pushf
aad
stos
lcall
xchg
mov
push
lahf
lods
adc
pop
xor
in
dec
add
jg
rolb
cmc
clc
in
lahf
clc
rcr
test
imul
xor
jp
xchg
das
push
dec
nop
push
fwait
xorb
cmp
lea
sub
shlb
popa
rorb
sbb
pop
add
mov
or
into
sbb
xchg
push
out
push
in
clc
cmpsb
out
pop
aas
leave
pop
imul
cmp
xor
into
in
sti
xor
sub
mov
xor
xchg
or
icebp
imul
lock
pop
inc
sub
les
jecxz
pop
mov
inc
sbb
or
pop
popa
pop
pop
dec
fcomp
cmpsb
sbb
xchg
lahf
and
mov
rcrb
out
int
pop
insl
leave
sub
out
push
cmpl
mov
or
inc
int3
xor
sub
fbld
rorb
ja
das
divb
dec
imull
repnz
imul
adc
mov
bound
cmp
xchg
or
mov
fidivl
jg
scas
sti
sahf
in
inc
mov
adc
mov
fldt
shrb
inc
sub
inc
mov
int3
sti
cli
test
mov
pop
xor
mov
sbb
arpl
xor
mov
xor
cmc
popa
out
and
loopne
lcall
cli
stos
adc
xchg
movsl
add
adc
lret
std
test
xchg
mov
mov
mov
andb
push
pminsw
sbb
mov
es
stos
in
mov
cmc
in
cmp
lods
lea
jne
popf
sub
das
push
xlat
dec
mov
idivb
adc
in
roll
sub
jmp
rcll
lret
inc
out
sbb
mov
jp
pop
sub
pop
inc
pop
sbb
mov
and
and
mov
lret
cmp
sbb
loope
ficomps
pop
add
push
mov
pop
mov
and
cmp
pop
scas
pop
adc
in
imul
cmp
sbb
popl
imul
addr16
rcll
filds
fcoms
pop
sarb
xlat
ds
or
cmpsb
add
insl
dec
test
int3
loopne
inc
dec
and
int3
jb
cltd
pop
and
sbb
repz
mov
sub
xchg
push
repz
inc
mov
outsb
jge
in
mov
jb
inc
dec
outsb
or
sbb
sub
pop
gs
add
inc
adc
push
push
stos
shrb
cmp
cmpsb
hlt
fisubl
xchg
push
idivb
mov
js
fwait
bound
lcall
cmp
repz
loope
mov
push
jnp
jp
addr16
push
sbb
cmpsb
cmc
push
subl
add
cmc
xchg
mov
sub
shrl
pushf
movsb
aas
jmp
adc
push
test
aad
pop
add
js
fstpl
stos
clc
loopne
jle
mov
fs
and
rcr
mov
pop
xchg
shlb
mov
dec
push
xchg
inc
push
outsl
scas
adc
adc
dec
xlat
notl
gs
push
enter
pop
dec
scas
xchg
add
xor
in
mov
inc
repz
iret
aaa
icebp
xor
insl
rcll
lahf
hlt
orl
sbb
pop
mov
inc
pop
push
xchg
je
cli
fdivrs
push
cmp
dec
or
add
sar
add
cmpl
mov
leave
push
xchg
in
ret
icebp
and
pushf
jg
gs
call
lds
lods
lods
stc
js
call
arpl
bound
fdivr
lahf
dec
cli
mov
and
add
or
push
mov
jl
lahf
jg
int
xor
test
nop
call
pop
mov
stos
mov
mov
je
mov
stc
loope
mov
inc
mov
sub
mov
fidivs
pop
push
loope
fsub
jecxz
jecxz
cmpsb
jmp
jecxz
push
pop
ret
ret
dec
pop
cld
pop
xor
scas
bound
mov
ret
jge
leave
dec
cmc
adc
lds
pop
in
lret
push
stc
psubb
ds
ret
notl
fdivrl
xchg
xorl
push
int3
and
ljmp
lock
jb
xchg
push
insl
fildll
inc
mov
mov
loopne
jge
add
insb
sbb
cmc
push
sarb
loope
jmp
sti
iret
fs
push
push
cwtl
xorl
cmp
xchg
outsb
cmp
xchg
imulb
jp
mov
decb
sbb
mov
mov
and
adc
testl
jg
adc
lds
fcmovnu
or
adc
rorl
jg
cwtl
sbb
and
jle
out
dec
aad
test
out
dec
in
cmp
pushf
sarb
cmp
out
pop
lret
pop
and
lods
les
xchg
adc
test
dec
and
adc
sahf
inc
mov
fsubp
jmp
mov
inc
nop
jmp
in
jg
dec
es
fmuls
cmpsl
xor
ret
out
dec
mov
fisubl
lods
xor
ss
in
push
iret
mov
push
adc
mov
push
lock
rcrb
lods
mov
jbe
mov
rep
std
int
outsb
jno
nop
test
ret
mov
je
pushf
out
inc
add
dec
test
pop
out
jne
insb
mov
add
or
jl
mov
hlt
add
int
inc
icebp
sub
or
andl
in
lret
add
push
pop
cmp
sbb
outsb
xor
pushf
sbb
out
or
inc
or
xchg
pop
orb
lret
negb
movsb
movsb
sbb
out
rorb
pop
xor
leave
dec
mov
mov
fxch
jnp
nop
movsb
stc
arpl
jp
adc
nop
mov
fsubp
xor
inc
xor
xchg
cmp
pop
mov
imul
mov
jmp
mov
xchg
cmp
aad
cmpsb
test
dec
neg
pop
loopne
or
xchg
push
pop
aad
lahf
push
test
leave
cli
xchg
xor
leave
out
pushf
pop
pop
xchg
rcll
test
sub
mov
cmp
inc
or
add
push
xor
add
sub
dec
add
in
ds
or
adc
in
aaa
aam
popa
jo
jmp
popf
movb
pushf
pop
not
out
push
call
mov
ja
ret
cmp
push
jmp
mov
inc
cmc
xor
pusha
inc
dec
lods
mov
add
sahf
hlt
push
mov
dec
and
bound
jnp
and
shll
lock
dec
ss
add
and
xchg
pop
test
sub
add
adcb
xchg
int3
add
sbb
hlt
cmpsb
mov
movsb
mov
je
or
add
mov
and
add
or
dec
and
inc
adc
xchg
loop
push
sub
lea
fisttpl
rorl
insl
push
sbb
sub
ljmp
mov
imul
adc
sub
xor
shrb
mov
cmp
jbe
out
pop
mov
push
adc
xchg
aaa
mov
loopne
push
adc
into
das
push
ja
lods
subl
test
clc
cmp
push
ret
mov
sub
aaa
push
jbe
cli
cmp
decl
ss
mov
insb
push
push
jbe
cmp
or
fxch
sbb
cltd
in
and
inc
shrl
mov
dec
bound
sub
or
and
xor
mov
sahf
cmp
imul
push
inc
dec
cmp
or
cltd
mov
mov
lret
and
push
stos
push
fldenv
jno
cmp
loope
sub
fistl
xor
inc
in
stos
nop
mov
mov
add
or
adc
mov
repnz
sti
jbe
add
xchg
mov
aad
cmp
mov
jae
sbb
pusha
jbe
or
or
mov
aam
pop
and
stos
mov
lock
fisubrs
sub
jmp
out
jmp
test
arpl
xchg
adc
outsl
fwait
fwait
or
xchg
faddl
or
pop
mov
sbb
stc
cltd
mov
mov
movsl
push
repz
ss
jmp
imulb
mov
inc
fcmovnbe
pushf
int
lahf
mov
push
and
lock
inc
rol
cmp
xchg
fistps
pop
in
push
pop
dec
push
mov
movsl
cmp
xor
call
push
push
sub
dec
mov
mov
lock
push
les
std
idiv
int
fistpl
stos
and
push
and
xchg
cmp
and
dec
addl
aad
mov
sbb
dec
in
das
out
xor
push
das
push
xor
mov
pusha
nop
packuswb
inc
push
clc
and
movsl
mov
stos
cmp
jns
in
push
mov
jnp
or
mov
ja
xchg
and
mov
aam
scas
pop
or
jmp
inc
dec
mov
xchg
fincstp
clc
movsb
imul
mov
jmp
lcall
pop
pop
lret
insl
test
sar
test
push
cwtl
stos
aad
daa
repnz
cmp
push
jle
out
hlt
push
mov
das
mov
jle
in
mov
in
mov
aad
stos
cmp
mov
ds
stos
mov
cmpb
pushf
add
sbb
mov
inc
mov
ja
jne
xorb
and
mull
jge
lock
or
fidivs
inc
xor
mov
seto
les
aam
jmp
jno
dec
scas
and
cmp
comiss
sbb
dec
popa
add
and
inc
adc
movsb
mov
pop
push
cwtl
adcl
sbb
repnz
fiaddl
enter
mov
cmp
jo
and
jecxz
lret
sub
repnz
call
xchg
jmp
lds
lcall
testl
mov
cld
sbb
cmp
insb
and
sbb
xor
outsl
adc
mov
lock
xor
mov
push
mov
mov
test
divl
arpl
cltd
stos
mov
lock
xchg
jno
andl
xor
lcall
cmp
push
adc
test
ljmp
pop
push
jbe
insl
or
out
sbb
pop
cmp
mov
out
adc
or
mov
imul
mov
fnstsw
xchg
shll
mov
lret
repnz
inc
in
xchg
fs
dec
lcall
cltd
js
xchg
sub
push
push
mov
cld
lret
add
inc
adc
rcrb
aaa
jge
xlat
pushf
mov
xor
xor
push
clc
in
call
dec
cmp
rcll
dec
pop
shrb
in
int
out
push
add
and
std
dec
xchg
xor
scas
xchg
sub
js
adc
mov
sub
mov
enter
and
loope
icebp
out
repz
jecxz
test
je
ljmp
call
inc
xchg
cs
pop
push
ficompl
insb
pop
push
jne
fwait
mov
push
inc
xchg
mov
dec
sub
jno
cwtl
dec
rorb
loop
cld
outsl
dec
mov
xlat
sbb
and
inc
mov
xchg
test
aam
pop
sbb
lcall
xchg
and
sahf
sahf
test
mov
mov
push
insb
mov
jp
dec
inc
cmp
clc
adc
and
das
or
xchg
das
into
xor
jmp
outsb
xor
push
jns
xchg
popa
inc
cmpsb
push
xchg
outsb
rorb
mov
dec
into
pop
add
test
sbb
shrb
jns
or
movsb
mov
fsubs
pop
sarl
adc
push
add
inc
dec
sbb
leave
lret
lret
lods
xchg
fimull
mov
jmp
sub
pop
xchg
and
mov
lods
push
mov
pop
dec
xchg
mov
xchg
ret
clc
xor
xor
jle
mov
outsb
test
jl
pop
adc
negl
out
mull
and
shl
mov
push
mov
cmpsb
pop
sub
xchg
push
aaa
in
mov
in
mov
mov
push
xor
xor
leave
aas
mov
cmp
shl
jge
adc
jl
leave
adc
jl
mov
xchg
int
inc
sarl
arpl
sbb
jns
lea
lret
sub
arpl
in
imul
inc
sub
test
lds
shld
fldt
sbb
and
adc
xor
mov
shll
cmpsb
mov
fstl
xor
nop
pop
insl
mov
pop
xor
adc
push
cs
mov
or
les
ret
pop
jbe
mov
cli
jae
addr16
cmpsb
sbb
push
jge
dec
and
adc
sbb
repz
out
xchg
cmp
insl
ds
xchg
and
hlt
les
out
stos
out
jmp
shlb
ds
adc
xor
dec
shl
mov
lcall
pushf
jbe
mov
xchg
mov
and
out
bound
xchg
push
pop
fbld
sahf
pop
pop
push
mov
inc
fistpll
repnz
xor
cmp
sub
jae
sbb
mov
out
xchg
lock
or
enter
add
push
inc
sarb
stc
out
rorb
mov
je
nop
lds
xchg
jbe
stc
ret
arpl
int3
nop
push
adcb
adc
iret
push
int3
or
movaps
imul
lock
loope
cmp
daa
loop
dec
jl
out
jge
jp
mov
jge
sbb
and
bound
pop
sub
bound
outsb
cwtl
and
loope
dec
nop
fwait
iret
jmp
rcr
pop
in
imul
adc
fs
or
sahf
mov
adc
jo
dec
aaa
and
dec
xchg
lret
lcall
pop
idivl
pop
dec
xor
aam
cmpb
sbb
loopne
data16
and
shlb
push
imul
outsl
push
mov
mov
cli
ret
adc
mov
jg
mov
stos
xchg
mov
mov
addr16
push
add
lahf
arpl
outsb
ficomps
mov
and
pop
bound
lea
test
push
inc
out
ror
add
int
mov
xchg
mov
xchg
cli
jl
and
inc
mov
jmp
xor
fcmovne
cmp
je
cmp
jo
popa
setnp
lahf
outsb
cwtl
shll
mov
lods
out
movsb
sub
gs
push
xchg
jb
icebp
testl
pop
pop
mulb
or
inc
int3
dec
jb
xchg
jnp
dec
cmp
fstpt
pop
xor
sbb
sahf
push
mov
shr
or
es
and
jmp
out
and
shr
mov
out
xlat
sub
addr16
insb
cmpb
mov
out
movsl
js
push
inc
inc
jp
and
inc
ss
xchg
sahf
out
or
mov
in
in
sti
fldt
or
adc
mov
rorl
dec
mov
xchg
add
mov
incl
xor
xchg
in
int3
cwtl
aas
andl
je
xchg
call
inc
aas
mov
ja
push
les
ljmp
jns
test
nop
clc
mov
int
scas
rolb
cmc
push
popa
push
pushf
in
cmpsb
mov
xor
mov
in
mov
jns
addr16
lock
cs
rorl
add
mov
bound
ss
ja
xor
lods
xor
dec
pop
test
push
push
dec
add
lds
ret
or
mov
jmp
faddl
xor
push
mov
flds
sbb
or
push
divl
stc
fadds
dec
cli
mov
test
addr16
cmpsl
repz
push
in
test
cmc
or
sbb
test
mov
xchg
xor
xor
and
or
outsl
and
fwait
lods
ss
mov
jmp
xchg
addr16
mov
and
push
ss
jle
push
inc
push
cmp
xchg
call
jns
jecxz
sarb
jno
mov
cmp
jbe
sbb
mov
fbld
or
jbe
das
ja
mov
xchg
jle
ret
lahf
bound
in
adc
or
push
int3
adcb
mov
lahf
xchg
or
mov
dec
xor
xchg
mov
scas
js
popf
insl
mov
jbe
cmp
pop
dec
aam
shrb
sbb
pop
cmp
dec
adc
or
xlat
dec
insb
sub
in
cwtl
iret
out
inc
icebp
pop
xor
push
cmc
int
xchg
push
ss
repnz
loope
xchg
imul
popf
xor
jle
shrb
repnz
adc
out
into
fs
xchg
mov
xchg
or
push
and
inc
mov
inc
or
dec
shrl
cld
aas
lods
call
iret
sub
shr
jbe
inc
jmp
add
cmp
fwait
int3
sub
jmp
into
cltd
mov
cmc
push
cld
das
or
and
sti
movsb
scas
sti
repz
les
sub
xor
int
mov
fsts
push
mov
dec
jmp
enter
push
mov
imul
lcall
pop
push
or
testl
pop
outsb
imulb
ljmp
push
in
flds
dec
inc
cmpsl
cmp
pop
pop
dec
mov
push
sbb
incl
aad
mov
cmp
faddp
and
inc
mov
imul
std
sub
push
add
sub
fs
icebp
iret
push
fisttpll
adc
pop
jge
imul
sbb
fcoms
popl
psubsw
ss
and
add
xlat
sbb
ss
and
js
sbb
mov
sti
add
out
jg
push
jmp
mov
and
out
fstpt
je
jl
and
jnp
adc
ss
fldt
lcall
adc
lret
xchg
fwait
mov
cld
pop
fucomi
or
ret
xchg
lcall
out
mov
xlat
adc
cmpsb
fnsave
sub
mov
mov
sahf
imul
jns
mov
repnz
xchg
lods
ret
push
cmp
and
in
xchg
mov
cs
and
lock
arpl
jge
dec
dec
xchg
outsl
leave
outsb
pop
mov
dec
xor
sbb
lcall
shlb
cwtl
pop
imul
pushf
outsl
fidivrs
or
mov
add
xchg
into
mov
sbb
add
and
shr
pop
pop
and
adc
dec
cmp
das
jge
add
xchg
ret
ljmp
movsb
pop
jle
cmp
es
push
mov
out
jmp
adc
aam
sti
sub
mov
mov
aad
or
imul
in
mov
xchg
fs
js
add
rcrl
mov
or
fisubrl
sub
inc
jo
aas
cmp
inc
sub
sti
jl
mov
stos
adc
mov
das
pop
je
fidivrl
xor
outsb
mov
or
cmp
or
leave
faddl
xor
outsl
in
add
lahf
pop
inc
rol
addr16
mov
mov
lret
mov
dec
add
fdivp
sbb
repnz
add
jo
lfs
pushf
lods
adc
sub
sti
sbb
lret
notl
xor
mov
inc
mov
add
stc
or
push
cld
shrl
or
stos
jo
leave
test
mov
mov
push
es
rcrb
mov
notl
mov
addr16
test
sub
orb
ret
ljmp
adc
ret
xor
mov
mov
adc
mov
jmp
inc
jmp
div
into
insb
ret
fldl
and
notb
add
je
mov
lock
addr16
nop
push
ss
dec
stos
cltd
push
add
push
mov
arpl
dec
stc
pop
jle
test
es
es
int
orl
xchg
mov
sbb
nop
xchg
inc
mov
sbb
pop
or
adc
mov
les
lock
aam
fwait
movsl
pop
daa
in
jno
mov
or
mov
mov
mov
pop
inc
xor
dec
push
jle
jnp
dec
incb
mov
cld
dec
aaa
add
lods
out
pop
jecxz
mov
and
xchg
shlb
movsl
or
or
dec
adc
fsts
adc
divl
pop
sarb
dec
adc
outsl
mov
fsubl
stc
xchg
xlat
inc
mov
test
mov
jnp
ret
lret
mov
mov
lahf
nop
jle
mov
lds
inc
outsl
jb
xchg
pop
inc
rcrl
push
out
fsub
inc
xchg
xor
push
imul
cmp
sti
adc
and
and
add
add
test
cwtl
push
subl
hlt
jmp
jns
rcl
sbb
add
inc
ljmp
push
push
xor
adc
nop
pop
or
mov
jge
int
mov
inc
sbb
leave
test
scas
insl
fs
repnz
push
dec
cmp
call
xchg
cmp
adc
ja
insb
fwait
shll
dec
ret
jg
mov
es
movsl
mov
aas
adc
add
loop
push
not
sub
insl
mov
xchg
or
mov
xchg
bound
cmp
insb
push
fbld
test
cmp
push
sbb
jl
into
xorb
cmpsb
aam
aas
mov
inc
in
fcmovnbe
xlat
cmp
test
icebp
inc
testl
add
cmp
xor
psubb
out
aaa
jmp
es
out
shrb
jmp
jo
scas
mov
notl
dec
jae
and
sti
mov
jae
adc
stos
sbbb
in
les
xchg
call
shll
adc
cltd
fwait
imul
push
jns,pn
mov
inc
dec
ret
movsb
hlt
jg
xchg
jne
movl
scas
dec
mov
mov
xor
int
pop
outsl
xchg
fisttpl
cmp
jecxz
cltd
mov
mov
icebp
movsl
jg
xor
jge
inc
loope
fs
ds
add
sub
cmc
test
int3
jo
sbb
cs
in
pop
adc
lea
popf
jmp
stos
rcrl
mov
icebp
dec
xlat
pop
jmp
int
dec
loop
aad
sbb
into
stos
mov
push
and
jg
outsl
pop
das
sub
out
jb
in
ja
mov
ret
pop
jae
adc
movsl
iret
shrb
and
aas
repnz
pusha
loop
sub
test
push
sbbl
ret
push
mov
out
fdivrs
cmp
pusha
mov
add
into
mov
pop
cmc
xchg
dec
inc
inc
cmp
push
cmp
adc
jp
cmp
outsl
gs
xorl
dec
shrb
pop
inc
test
and
sub
lods
pop
push
xchg
addr16
mov
pushf
imul
shrb
adc
mov
jnp
ss
cs
in
and
push
pop
pop
adc
jge
sbb
leave
imul
out
sub
loope
sub
test
ficoml
ret
mov
dec
rcrb
add
cmp
bound
jbe
xor
mov
pusha
enter
add
nop
push
cmp
add
outsb
jge
loop
dec
jg
data16
add
icebp
and
imull
mov
movsl
in
mov
scas
lcall
fwait
jmp
in
shrb
mov
adcl
xchg
sti
outsb
gs
mov
inc
cmp
negl
adc
lcall
xor
jns
xor
loope
mov
xor
mov
push
jno
mov
insb
xchg
out
fmul
icebp
outsb
ror
sub
les
pop
cmp
sub
or
rclb
fnstcw
lcall
add
dec
cmp
sub
mov
lret
icebp
xchg
sbb
dec
test
cwtl
dec
push
lods
cmp
push
in
cmc
into
dec
ja
mov
test
lock
cli
loope
into
xor
push
sub
fnstcw
mov
lret
daa
incl
inc
adc
insb
call
dec
popf
jmp
dec
pop
test
aaa
aad
loope
int3
sbb
sarb
movsl
cwtl
mov
test
sbb
lret
jl
arpl
ja
cltd
sub
cmp
mov
arpl
push
stos
fisubrl
pushf
mov
dec
inc
and
pop
repnz
dec
test
mov
stc
mov
mov
mov
pop
ret
imul
sbb
inc
push
rcrl
outsl
mov
ljmp
push
mov
lods
aam
push
daa
push
fdivp
mov
mov
pmuludq
fists
fsubrp
push
inc
pop
mov
fsts
fsub
and
aaa
jecxz
cli
mov
fisubrs
iret
rcr
cld
in
scas
jecxz
push
gs
mov
mov
mov
scas
jg
jge
outsb
bound
jge
push
mov
mov
rcl
in
out
es
cmpsl
sbb
dec
mov
gs
shl
fists
xor
lds
sti
outsl
push
push
ds
mov
xchg
andl
push
popf
lahf
out
jae
inc
add
inc
xor
mov
or
jl
ds
mov
and
inc
outsb
cmp
mov
jno
and
and
sbb
push
fdivrs
jno
mov
imul
xor
mov
test
xchg
ret
xchg
or
fldenv
sub
push
fnstcw
out
add
jbe
xchg
xorb
pop
dec
lds
push
pop
sub
fsts
xchg
adc
mov
cltd
mov
push
int3
pop
xchg
push
xchg
xchg
fucomip
repnz
nop
xor
movsb
roll
adc
rolb
subl
and
xchg
popf
sub
rclb
leave
cmp
sbb
sbb
subl
andb
cwtl
or
cmp
aaa
test
icebp
loope
les
stc
popa
sahf
gs
xor
scas
and
add
xchg
jmp
jae
jg
in
into
dec
sbb
mov
jg
out
mov
jp
push
add
shlb
or
xor
jns
mov
push
cmp
xlat
jle
or
pop
jmp
inc
aas
int3
adc
cmpsb
cmp
cmc
pop
fidivs
add
mov
jp
xchg
loope
mov
xcrypt-cbc
cmpsl
push
mov
cmp
aam
call
push
cmpl
fisttpl
sahf
scas
cs
jns
inc
les
out
ds
std
mov
adc
mov
or
inc
sub
sti
outsb
push
sub
push
inc
mov
add
dec
mov
mov
mov
xlat
lret
lret
adc
scas
xor
mov
inc
jg
pop
shll
jbe
jmp
jns
adc
inc
inc
stos
jecxz
imul
mov
in
out
test
sbb
dec
je
xchg
fs
mov
adc
mov
or
pushf
jns
sub
mov
int
inc
faddl
push
lret
sub
mov
xor
dec
das
aaa
inc
fs
and
fimuls
xor
sub
adc
gs
sahf
nop
xchg
icebp
mov
stos
dec
stos
ja
in
insb
or
ja
push
push
sbb
lods
sbb
adc
pop
sti
mov
inc
dec
lds
cmpsb
popf
jno
in
cld
lret
mov
mulb
outsl
mov
adc
test
lock
lock
icebp
jb
rorb
sub
push
sbb
inc
pop
mov
mov
xor
pop
ljmp
xor
jb
jae
xchg
fsubr
ja
mov
inc
jo
nop
xchg
imul
push
sub
push
pop
sbb
dec
in
xchg
push
nop
push
out
cmpsl
scas
outsb
pushf
jnp
test
cmpsb
les
sub
mov
xor
adc
jae
icebp
push
sbb
subb
xor
ret
mov
cld
mov
sub
cmp
pop
imul
jge
adc
lret
cld
shrb
outsb
cmpsl
jp
lahf
adc
jbe
in
or
ficoms
insl
jns
mov
mov
repz
adc
inc
lahf
jne
data16
mov
decl
popf
pop
cmp
jne
mov
andl
push
ficoms
mov
jns
jno
xchg
pushf
fcmovne
mov
jae
aad
and
mov
add
cwtl
es
mov
sub
or
sbb
movl
setns
lret
roll
cmp
pop
test
clc
push
adc
cmp
jnp,pt
mov
movsb
sub
push
sub
gs
mov
add
int
adc
loopne
rcr
testb
xchg
out
mov
pop
cmp
sbb
shl
push
mov
cwtl
pop
sarl
pop
sub
cmp
xor
aas
mov
pop
cmp
ret
test
leave
xor
fildl
cld
dec
sub
int3
movsl
das
or
push
test
xor
xor
addl
lret
test
popf
jmp
push
cli
adc
mov
push
pop
fwait
addl
idiv
pushf
jge
imul
insl
daa
movsl
loope,pn
popf
mov
callw
sub
aaa
imul
shll
int
sub
push
cmp
mov
push
and
jp
sti
out
aam
aas
xchg
dec
stos
aam
pop
in
mov
push
out
in
stc
adc
lock
lds
ljmp
mov
push
fsubp
push
push
xchg
mov
sub
insb
dec
pop
pop
sbb
or
pop
out
test
add
ja
es
mov
int
mov
enter
out
pop
cmpsb
cmpsb
ss
pop
cmc
push
sbb
pop
lods
push
sbb
dec
lock
cmp
out
sub
movl
push
xchg
jg
jno
pop
cmp
arpl
jmp
pop
push
call
or
loop
pop
pop
cmpsl
jl,pt
and
jo
pop
mov
or
xor
cmp
add
aaa
shl
shrb
jne
ss
xorb
sbb
adc
adc
into
sar
or
pop
jnp
adcb
dec
push
icebp
mov
out
iret
std
cmp
push
fs
push
or
movsl
sub
cmp
idivl
sbb
add
dec
rcrl
xchg
jno
movsl
pop
dec
xor
mov
mov
pushf
push
inc
and
pop
cmpsl
and
xchg
inc
je
pop
inc
andb
lods
dec
sbb
iret
cmp
bound
rdtsc
mov
mov
stc
stc
movsl
leave
jp
pop
mov
loop
add
test
xor
and
add
mov
and
sbb
push
scas
mov
and
add
js
mov
add
mov
sbbl
call
jmp
cmp
shll
jbe
hlt
xor
je
and
int3
pop
movsb
sbb
fistpl
pop
ja
push
xor
rcr
loopne
or
xor
sbb
fsubrs
sub
sbb
std
jnp
lea
adc
sahf
js
and
pop
mov
jle
dec
repnz
leave
mov
xchg
jmp
enter
xor
add
mov
pop
ds
dec
xor
jp
jb
jg
add
push
mov
int
push
imul
jne
jle
fwait
fwait
or
lods
xor
jbe
mov
and
pusha
mul
xor
and
push
mov
adc
mov
loop
cli
jae
lds
or
orl
xchg
data16
shr
lods
mov
jns
mov
pushl
andl
push
mov
adc
andb
lds
nop
dec
jge
cli
outsb
add
enter
sub
notl
imul
je
and
loope
xchg
scas
fwait
add
imul
xchg
hlt
jmp
jg
fsts
inc
insb
push
int3
lds
pop
xor
mov
push
test
inc
sbb
iret
push
jl
sbb
jecxz
inc
inc
test
mov
inc
fdivs
push
mov
fisubl
jnp
icebp
mov
roll
mov
inc
inc
and
add
mov
dec
fcomp
push
inc
lret
imul
inc
orl
and
add
cmp
mov
cmovo
movsb
mov
push
and
push
jne
mov
pop
add
add
cmp
loopne,pn
pop
testb
push
lock
pop
push
adc
lods
cmp
sub
nop
in
pop
out
adc
cmp
fsubrs
ficompl
dec
ss
lods
cmpsl
or
xor
jb
add
adc
mov
pushf
jbe
mov
cmp
mov
cwtl
xor
adc
xchg
popa
cwtl
jnp
orl
jmp
addb
inc
dec
mov
jnp
adc
lret
sub
repz
pop
and
push
call
test
dec
cmpsl
xor
mov
cltd
lods
mov
mov
addr16
ljmp
je
mov
jb
mov
cmp
add
pop
push
inc
dec
rorl
add
in
jo
jo
fstps
and
or
bound
cs
test
cmp
mov
mov
or
mov
xchg
fldcw
mov
sbb
mov
xchg
shrb
pop
pop
movsl
jne
movsb
pop
movsl
lds
xlat
out
push
sbb
in
imull
ljmp
pop
mov
mov
pop
mov
jo
jbe
sub
pop
sbb
lcall
fstl
hlt
and
mov
and
das
adc
mov
xchg
xchg
testw
xor
fs
adc
rcrl
xlat
add
and
loop
mov
sbb
inc
lods
mov
jg
push
push
je
xor
or
imul
fdivp
mov
shll
pop
fbld
pop
mov
addl
out
sarl
out
jae
aas
dec
mov
popa
mov
mov
push
out
inc
and
mov
jge
pop
inc
test
mov
imul
sar
adc
outsb
imul
notl
outsl
xor
in
xchg
xchg
sbb
or
aam
sbb
or
mov
mov
daa
push
and
roll
int
or
sahf
ss
pop
mov
xchg
lret
pop
add
lods
push
push
cmp
jb
out
jl
xchg
imul
xchg
jnp
rcrl
out
cmpsb
test
fistps
int3
insl
sub
lods
sbb
pusha
inc
mov
inc
jecxz
mov
les
scas
leave
ret
cs
leave
ficoml
sbb
sub
xchg
cmpsb
mov
in
pop
push
cwtl
pop
push
in
test
pushf
cmp
push
xor
aam
js
add
or
out
das
jp
sub
fnstcw
in
sbb
dec
pop
jno
push
std
pop
cmp
cltd
lds
mov
jbe
fnstenv
pop
ficompl
mov
lcall
subb
dec
cld
pcmpgtb
mov
fsubs
or
test
mov
orb
fbstp
adc
pop
lret
mov
cli
test
and
std
sub
mov
or
xor
inc
lock
dec
sub
fists
xor
imul
es
adc
jle
lods
add
xor
movsb
jno
or
mov
es
fcomip
test
adc
xor
repnz
push
into
movsb
adc
cmpsb
lahf
fstp
dec
int3
or
mov
mov
dec
xchg
repz
adc
gs
fadds
lret
xchg
pop
call
clc
popa
pusha
mov
pop
mov
sahf
in
mov
mov
mov
sub
pop
dec
push
sbbb
ret
mov
push
cmpsl
sbb
jmp
fsubl
adc
cmp
outsb
aaa
xor
push
fidivrl
aas
pop
lret
fadds
adc
outsb
xchg
xchg
dec
loopne
sub
jo
filds
cld
call
fcompp
call
movlps
ret
pop
leave
pop
fsub
sbb
jo
pop
fisttpl
hlt
mov
mov
adc
in
push
pusha
gs
cmpsb
mov
jb
fs
cmp
jmp
mov
lret
or
mov
das
sbb
pop
fcmovb
and
loopne
mov
push
pushf
jp
idiv
mov
add
push
insl
pop
push
arpl
or
jbe
in
bound
or
sbb
inc
fmuls
sub
xor
popf
mov
repz
ja
jp
lcall
inc
pop
inc
lock
or
cmp
nop
outsb
inc
xchg
outsb
pop
mov
ds
dec
sub
jecxz
pushf
sahf
orl
ds
test
iret
mov
pop
and
mov
and
sti
test
in
cmp
ror
and
outsb
pop
cmp
sbb
test
or
xchg
dec
popa
dec
or
lcall
fmuls
rcll
arpl
mov
cltd
add
dec
xchg
movsl
xor
push
clc
or
sub
xchg
ret
andb
push
adc
mov
arpl
adcb
lods
mov
mov
jno
xchg
inc
les
je
mov
or
push
jp
sbb
push
div
adc
jecxz
cmp
dec
ljmp
adc
inc
sub
aam
jo
addr16
sub
pop
mov
jae
pusha
mov
add
pop
and
jge
movsl
hlt
or
add
in
fistl
lods
mov
out
mov
inc
add
inc
xor
or
cmpsl
push
ret
xchg
stos
mov
test
pop
in
cmp
inc
call
push
sbb
cmp
mov
mov
mov
inc
imul
mov
add
sbb
mov
and
ljmp
or
cmpsl
adc
xorl
fwait
inc
and
jo
es
test
jb
pop
cs
test
cmc
mov
pushf
xchg
sub
adc
mov
jne
mov
xor
mov
cmpsb
shlb
push
popa
lds
xor
lcall
loop
pop
pop
sub
clts
mov
pop
xor
mov
push
cld
fstpl
addr16
mov
cmpsl
mov
ss
orl
fisubs
loopne
sarb
inc
add
pushf
push
loopne
dec
mov
pop
mov
jb
mov
mov
jno
movsb
xor
sarb
push
mov
cwtl
xor
push
xchg
sbb
add
std
sbb
lar
xchg
sbb
push
stc
or
stc
pop
pop
mov
fwait
shlb
mov
xchg
inc
idivl
push
fldt
adc
shrl
je
outsl
inc
mov
push
das
cltd
out
les
mov
shll
dec
subl
push
aaa
sarl
pop
dec
ret
sub
insb
sarb
sbb
xor
xchg
imul
jg
mov
dec
jmp
xor
cmpsl
lea
push
lahf
lock
mov
repz
ss
jge
das
pop
jp
outsb
sbb
pop
pusha
arpl
adc
mov
fbld
fcompl
call
outsb
jl
cmp
mov
mov
and
fsubs
cmpsl
ret
imul
sub
sub
push
xchg
imul
cmpsb
in
popa
int3
js
sbb
add
jnp
xchg
fistpl
rclb
cmp
pop
out
lods
mov
xor
test
mov
aam
fsubs
es
mov
pop
movsl
add
orb
sub
roll
outsl
jg
xchg
inc
cmp
cmp
push
ja
xchg
cmpsb
and
lods
sub
cmpsb
lock
in
sub
dec
mov
add
mov
cmpsl
dec
xor
icebp
mov
test
out
cmp
add
outsl
and
es
add
and
mov
pop
push
cld
or
pop
push
pushf
test
repz
pop
outsl
add
pop
sbb
imul
movsl
insb
pusha
cmp
test
test
addb
push
mov
or
mov
call
sbb
sar
jo
pop
fidivrs
xchg
fidivl
push
cmpsl
or
push
pop
je
jnp
mov
sbb
das
cmc
xor
pop
mov
mov
aas
sub
addr16
add
mov
mov
mov
into
inc
outsb
cmc
insl
outsb
fldt
jo
mov
ss
fistps
push
or
loopne
inc
pop
fisubrl
ss
pop
repz
rcrl
jmp
jns
hlt
cmpsb
push
xchg
test
inc
fimull
mov
and
xchg
sbb
jg
pop
or
jecxz
dec
outsl
jecxz
jg
popf
push
mov
adc
jg
in
pop
stc
das
xor
jecxz
aaa
fisubl
lahf
sbb
hlt
or
stos
push
fsubl
je
insb
inc
push
pop
inc
sub
inc
mov
sub
push
dec
jmp
push
pop
dec
cmpsb
add
push
clc
inc
sub
mov
mov
sbb
lock
in
dec
insb
cld
int
sbb
dec
cmp
test
pop
lcallw
ljmp
insl
jbe
jae
mov
dec
push
and
outsb
nop
daa
mov
xlat
inc
ds
ss
push
insb
jecxz
sahf
push
lea
xor
lds
dec
cltd
cmc
loopne
sub
inc
ret
push
outsl
jmp
xor
fcmovnb
out
bound
insl
and
loopne
lahf
sub
sbb
rolb
add
cmpl
adc
lods
loopne
lods
fisubrl
pop
in
enter
fcomp
test
sti
mov
mov
jo
daa
push
push
mov
les
inc
fistl
in
mov
jecxz
loopne
popf
test
imul
insl
lret
pop
push
cwtl
dec
jmp
pop
mov
dec
jmp
enter
xor
out
or
stc
dec
push
outsl
push
jg
fs
fldcw
push
mov
in
cmpsl
jae
fmul
cltd
lods
cs
pusha
inc
mov
fstpt
fildl
inc
ret
fs
dec
call
ljmp
mov
movsb
or
movsl
mov
sahf
sbb
repnz
push
fdivs
mov
mov
push
call
cs
inc
xchg
cmpsl
lret
mov
mov
addr16
or
pop
hlt
push
out
cmp
adc
jb
loopne
test
gs
lret
ja
ret
inc
ljmp
mov
and
pop
adc
add
scas
push
data16
arpl
mov
imul
push
add
repz
mulb
dec
in
sub
leave
cli
fwait
mov
jb
loopne
dec
pushf
jmp
iret
std
xchg
adc
sbb
test
push
jg
inc
arpl
jmp
mov
ds
xchg
lock
testl
push
and
lret
and
mov
jbe
and
into
sahf
push
fcoml
and
jne
pop
ja
mov
neg
shll
in
mov
adc
mov
mov
out
push
cmp
jmp
mov
mov
pop
popa
add
inc
adc
xchg
xchg
pop
leave
idivl
test
mov
jmp
add
in
negb
out
mov
lods
inc
and
loope
adc
stos
fistpl
jge
jbe
mov
loope
stos
fstpt
lret
mov
sub
out
dec
in
jo
xchg
js
mov
jmp
sub
popf
push
add
sbb
xlat
xchg
and
xor
lret
cmp
or
adc
mov
xchg
push
sahf
xlat
mov
mov
mov
and
lcall
push
sub
push
inc
jbe
jl
cmp
aam
cltd
inc
jecxz
idivb
inc
aad
fldt
fcomps
or
or
adc
cmpb
cmp
fbstp
fcompl
cmpsl
xchg
push
stc
rcll
call
dec
cmc
movsb
mov
fdivl
popf
jle
es
inc
push
dec
arpl
cmp
mov
add
dec
push
xor
and
out
adc
sub
cmp
adc
out
std
out
lret
mov
addr16
jmp
sub
pop
pop
push
clc
mov
or
adc
jecxz
adc
or
jcxz
inc
lods
enter
push
jo
push
addr16
xor
adc
adc
int
fisubrl
cmpsl
pop
sub
inc
popa
ret
sahf
push
cmc
outsl
mov
fstl
push
das
jne
aam
fbstp
imul
gs
or
stos
sub
push
fs
imul
lret
dec
add
bound
les
andb
nop
pop
cmpsb
hlt
add
shrb
mov
in
adc
pop
movsl
mov
scas
adc
clc
scas
mov
mov
fmulp
mov
rolb
mov
ljmp
outsl
dec
dec
xchg
jmp
mov
or
rorb
nop
in
mov
les
dec
sbb
rorl
inc
mov
xor
add
inc
pop
sahf
mov
pop
pop
push
sahf
es
lcall
xchg
mov
movsl
jl
push
popa
jp
and
mov
stc
test
sbb
xor
test
inc
pop
adc
nop
xor
insb
add
lret
pop
add
test
adc
lods
fs
dec
mov
shrl
inc
xchg
xchg
into
test
push
test
pusha
sub
push
movsb
and
sbb
xchg
int
sar
gs
rolb
das
in
dec
shlb
pop
mov
cltd
mov
xchg
jns
popf
stos
popa
mov
jl
jnp
stos
stc
jb
xchg
adc
dec
in
inc
fwait
jle
outsb
imul
xchg
in
popf
dec
add
mov
int3
mov
add
adc
ror
xlat
incl
out
lock
lods
xchg
jmp
pop
dec
mov
inc
xchg
outsl
inc
push
xor
filds
les
fwait
dec
jmp
or
cmp
flds
sub
aam
mov
add
ljmp
repnz
icebp
test
imul
push
daa
add
jne
arpl
lock
xor
gs
cmpsl
jmp
push
enter
data16
es
cmp
fldenv
adc
push
mov
xor
sarl
or
add
or
jae
fs
xchg
repnz
xchg
cld
sub
lods
jg
sub
out
es
outsl
inc
rorl
pusha
xor
adc
ljmp
repnz
add
sub
jle
mov
push
daa
arpl
sbb
mov
pop
repnz
push
ret
and
jl
in
lods
dec
sarb
mov
mov
fsubrp
mov
pop
adcb
adc
addr16
jl
lea
pop
jp
cli
jo
push
clc
xchg
jmp
fldcw
pop
rolb
sub
in
add
paddusb
addl
jmp
fwait
jle
fstpt
mov
shl
inc
cli
push
adc
popf
aaa
mov
outsl
mov
call
data16
push
xchg
xchg
outsl
test
adc
data16
dec
and
popa
faddl
int
jnp
call
add
xchg
fisubrs
rol
mov
adcl
xchg
jb
dec
add
in
jecxz
enter
adc
cmp
pop
mov
push
sub
mov
inc
std
je
icebp
loopne
icebp
pop
pop
xchg
repnz
hlt
mov
push
inc
lock
cmp
cmpxchg8b
pop
pop
sbb
jne
mov
jae
cmpl
fadd
sbb
push
js
xchg
lahf
mov
mov
pop
jp
xchg
pop
jmp
out
stos
in
inc
dec
gs
mov
data16
icebp
mov
in
dec
adc
lcall
push
push
clc
mov
sbb
adc
cmp
mov
int3
orl
jae
pop
pop
daa
pop
push
jmp
stos
sbb
mov
scas
and
ja
mov
shr
repz
add
decl
jmp
lods
xchg
scas
dec
push
inc
pop
mov
ret
push
daa
xor
pushf
sbb
jp
enterw
sahf
xchg
fldl
dec
ss
movsb
xor
mov
sub
pop
inc
inc
stos
negl
push
xchg
push
mov
pop
xor
lods
push
gs
push
mov
xchg
xchg
or
xor
repz
mov
aad
into
ret
inc
mov
xor
add
lea
cmpb
sbb
inc
test
in
xlat
inc
inc
push
fdivl
lcall
js
dec
mov
push
cmp
mov
in
es
mov
xchg
cwtl
idivl
adc
or
or
in
jno
cld
adc
xchg
lock
push
inc
mov
mov
ret
mov
dec
test
lahf
fwait
imul
xchg
xlat
test
dec
sti
daa
ret
jns
dec
arpl
xchg
pop
test
sub
adc
aaa
add
hlt
or
jb
fistpl
jle
mov
lds
adc
nop
add
rcr
xchg
cld
das
scas
cmp
sbb
mov
aaa
and
test
divl
shlb
call
add
mov
stos
inc
lret
cltd
mov
aas
push
jbe
mov
icebp
rcl
loopne
popa
lcall
mov
and
ja
out
mov
mov
fninit
and
fwait
popa
in
adc
and
inc
push
out
loope
inc
lock
mov
jle
mov
int3
sti
push
xlat
pop
lock
stos
rorb
ss
loop
cmp
push
fnsave
mov
cmp
mov
in
xchg
repnz
std
subl
jb
mov
jl
sub
mov
fsubs
xchg
aas
popa
mov
or
jae
lahf
adc
lret
lods
pop
lret
ds
xchg
pushf
adc
dec
lods
xchg
jb
xchg
js
and
das
mov
test
inc
cmp
and
jmp
std
lahf
pushf
mov
push
cmp
xchg
push
mov
mov
gs
popf
push
scas
pop
das
leave
fcompl
adc
push
cld
mov
mov
mov
mov
push
nop
jbe
pop
lock
gs
out
add
push
lods
clc
in
or
sbb
xchg
xor
lds
push
aad
call
fistps
push
fstpt
mov
data16
jle
insb
js
ja
cs
shl
mov
xorb
data16
in
jge
fisubrl
sbb
sahf
int
aam
push
fldl
stc
in
lret
sbb
pop
jp
xchg
leave
ret
scas
cmp
mov
pop
sahf
loopne
xor
xchg
and
dec
xchg
add
push
jp
sarl
sti
cmpsl
push
sarb
aad
cmpsl
popl
aaa
mov
test
mov
int3
push
inc
pop
sub
stos
mov
pop
inc
leave
sub
popa
das
movsb
js
sbb
dec
pop
inc
jmp
mov
bound
fwait
cmpb
and
and
lds
dec
and
ss
mov
lock
int
push
and
sub
adc
in
ret
push
sbb
mov
pop
push
lcall
loopne
push
enter
and
mov
pop
add
call
out
scas
rolb
cmpsl
in
sbb
sub
xchg
call
insl
push
pop
clc
xchg
pop
cli
push
cmc
mov
scas
pop
push
pop
sub
vmovd
pop
shrb
adc
mov
outsl
pop
push
xor
pop
fldcw
mov
mov
adc
pop
lret
pushf
mov
loop
sub
xchg
jae
mov
aas
push
int3
rcll
jo
pop
push
mov
and
adc
js
sub
testb
xor
add
inc
pop
xchg
or
dec
sub
sub
inc
iret
pavgb
mov
inc
enter
jmp
and
or
jne
pushf
push
shrb
in
push
jmp
jnp
ficomps
repnz
cmp
jae
rorb
pop
rcrb
mov
pop
pop
and
sbb
xor
push
fwait
fwait
js
movsb
in
mov
and
adc
mov
aad
aas
push
mov
and
pop
shlb
sahf
ret
pop
and
popf
sub
pop
and
les
push
add
mov
nop
inc
lods
gs
inc
push
jmp
fmulp
gs
aas
sub
enter
adc
cli
mov
in
mov
xor
mov
lds
sub
inc
or
call
loopne
xlat
lret
testl
movsl
js
jae
mov
and
shrb
cld
cmc
adc
inc
rclb
jl
inc
aas
dec
mov
mov
lret
add
sub
rolb
leave
ret
sbb
scas
pop
sub
decl
mov
insb
mov
jecxz
mov
subl
inc
sub
repnz
pop
fists
ficompl
clc
mov
xor
cmpsl
sbb
xor
out
shl
bound
arpl
test
mov
out
call
cmp
sbb
sub
xchg
push
leave
push
loopne
adc
lret
push
loop
leave
pop
shll
add
scas
jmp
mov
bound
adcl
enter
mov
lods
cmc
rorl
dec
adc
stos
sub
fs
dec
test
test
sub
les
lea
clc
sub
xor
or
std
repz
fiadds
call
xchg
cmp
add
std
mov
xlat
mov
and
xor
addr16
push
sbb
pop
xlat
sahf
pop
or
inc
sbbb
rdmsr
mov
std
push
jnp
fistl
sbb
push
mov
mull
lea
cmpsl
or
cmpsl
pop
sub
cli
cmp
fs
and
lret
int
jbe
jb
adc
out
cmpsl
add
data16
in
add
fcomps
xchg
fcoml
or
mov
psrad
ljmp
fadd
fidivs
iret
sbb
cmp
arpl
inc
stc
or
mov
xchg
out
sbb
fs
pop
in
pop
cmp
test
dec
lds
idiv
ja
bound
cmpsl
push
ds
stos
push
adc
dec
insb
jnp
cmp
enter
mov
fcoml
sbb
hlt
pop
roll
jnp
mov
xor
and
and
sbb
cltd
xor
or
icebp
mov
aas
cmp
dec
sbb
ror
fs
clc
inc
or
cmp
scas
sbb
jecxz
pop
imul
sub
cmp
jbe
test
dec
pushf
repz
inc
pushf
icebp
out
in
in
xchg
jnp
cli
nop
addr16
or
mov
pop
lret
pop
aam
retw
push
sahf
iret
out
bound
push
push
repz
or
or
xchg
rorl
ret
rcrb
jmp
jb
into
or
xchg
fidivrl
aad
push
jge
inc
sbb
pop
xchg
pusha
cmpsb
dec
mov
ja
push
push
daa
lret
mov
lods
ds
cmp
push
push
jmp
jae
insl
in
out
dec
repz
xchg
movsl
data16
xor
cwtl
stos
test
aaa
shlb
cmp
xor
out
xchg
pop
lahf
cmpsl
push
jno
add
xor
mov
cmpsb
mov
mov
in
or
call
js
xor
sarl
fmul
out
push
xchg
push
cmpb
mov
loopne
shll
mov
add
in
imul
xchg
lcall
push
jecxz
lock
jnp
add
cld
mov
jns
sbb
mov
add
iret
popf
xchg
fs
lds
mov
sub
mov
rolb
pop
lods
jno
pop
inc
mov
push
xchg
xchg
inc
cmpsb
push
outsl
sahf
rcll
pop
outsl
lods
adc
std
dec
push
pop
pop
mov
fwait
test
mov
xor
cld
mov
sbb
scas
outsl
mov
notb
push
divl
inc
daa
mov
loope
add
iret
dec
test
pop
fxch
cli
jl
fnstcw
dec
dec
cld
xchg
sti
stos
push
pop
push
je
sarl
mov
cmp
xlat
imul
mov
ret
pop
mov
xchg
paddw
shld
and
cs
adc
mov
pop
push
jecxz
icebp
push
and
cltd
aad
cltd
rorl
test
out
loopne
cli
cmc
cmp
jo
sahf
xchg
pusha
out
pop
outsl
push
into
scas
adc
add
push
arpl
push
adc
and
gs
add
jmp
shr
jl
cmpsb
inc
mov
cmpsb
arpl
inc
out
cmp
popf
sub
mov
int
mov
lahf
sub
pushf
push
pop
pushl
adc
dec
dec
add
cltd
push
pop
add
sbb
scas
ret
test
out
sub
mov
mov
ss
xor
ljmp
cwtl
mov
cmp
fwait
inc
sbbl
das
out
gs
sub
mov
enter
jo
jle
add
hlt
mov
jne
icebp
jbe
dec
and
inc
sub
shll
test
and
inc
call
push
push
mov
adc
inc
add
jecxz
pop
mov
mov
pop
std
sbb
and
adcl
mov
ljmp
shl
adc
sub
add
in
sub
add
inc
inc
and
push
mov
in
mov
pop
ret
mov
or
xor
push
stos
push
mov
rcll
jl
sub
test
lock
adc
pop
mov
repz
adc
fst
popa
push
movsb
mov
xor
lahf
or
out
adc
and
xchg
adc
sbb
push
stos
mov
shl
or
loopne
xchg
pop
or
and
xor
pop
jne
mov
cs
testb
sbb
mov
jp
jge
sub
fisttps
jno
call
lcall
jne
or
rclb
fisubl
sub
mov
jle
dec
push
loope
jp
xchg
or
fcmovb
mov
mov
jne
mov
xor
outsl
addr16
insb
or
sbbb
jb
hlt
lret
xor
repnz
mov
lret
fisttpl
lods
scas
movsl
test
icebp
scas
xchg
rcl
xor
mov
scas
hlt
stc
adc
jmp
adc
test
std
mov
add
xor
jbe
shrb
pop
or
outsb
mov
xchg
adc
pop
out
mov
push
imul
mov
xchg
hlt
jmp
dec
xchg
jecxz
loopne
or
cmp
cli
lcall
jecxz
lock
cmpsb
lcall
dec
xor
mov
adc
outsb
test
fsubrp
mov
mov
in
jnp
data16
adc
test
ret
or
xchg
out
mov
pop
or
addb
std
in
add
pop
adc
dec
add
loope
cmp
sbb
fldenv
dec
bound
jb
and
fwait
push
ljmp
fildl
bound
rcl
dec
or
sub
cwtl
std
mov
in
xchg
outsb
loop
inc
out
or
scas
in
jmp
mov
out
pop
adc
sbb
in
test
sub
fistpl
in
mov
mov
mov
aad
fstpt
pop
sahf
les
mov
sub
jecxz
sbb
movsl
call
or
jmp
imul
js
mov
ds
enter
dec
lock
pop
clc
push
stos
sub
or
lock
in
mov
mov
mov
inc
jg
cmp
push
cmpsl
mov
dec
adc
mov
call
mov
cmp
gs
out
sub
popa
cltd
inc
or
push
into
push
and
xchg
inc
add
mov
in
xor
ror
mov
addr16
outsl
push
or
push
sub
xor
jmp
imul
inc
cmp
fildll
cmp
add
pop
xor
daa
push
xchg
out
leave
push
or
ret
push
dec
push
enter
adc
scas
mov
inc
add
test
subb
push
ss
fs
loope
mov
enter
push
xor
rcll
mov
mov
lahf
sbb
mov
test
push
push
push
adc
cmp
repnz
and
xchg
cmpsl
popa
xchg
xchg
cmc
pop
ds
pop
dec
push
pop
inc
xlat
pop
or
dec
cmc
stos
addr16
movsb
mov
popa
ds
aam
push
mov
dec
pusha
in
and
iret
mov
mul
adc
adc
cld
jmp
fsubs
int
dec
pop
mov
push
jbe
push
mov
sti
leave
jo
adcb
mov
jl
pop
inc
xchg
std
mov
xchg
div
incl
jle
icebp
push
out
cli
fsub
push
sarb
sbb
fst
lahf
mov
jp
jns
mov
pushl
cs
shl
call
push
cmpsl
int3
gs
push
fidivl
mov
pop
xchg
mov
test
mov
iret
jns
repnz
shlb
mov
dec
pop
mov
sub
inc
mov
add
adc
int3
test
dec
sbb
sbb
icebp
jnp,pn
mov
in
sbb
push
xchg
or
adc
mov
pop
cmp
lret
std
jae
pop
mov
mov
mov
addr16
loop
ja
vmwrite
jecxz
aas
aam
js
adc
or
aam
push
sbb
pop
data16
jae
pop
push
rol
jnp
or
sbb
inc
sub
xchg
cmpsl
dec
push
mov
shll
popf
scas
dec
aad
and
inc
push
pusha
xor
loop
sub
sub
fildl
in
dec
mov
push
insb
add
movsb
std
shl
push
inc
inc
push
movsb
jge
mov
add
out
xchg
jmp
dec
cs
nop
leave
setno
or
ffree
dec
xor
pop
imul
cmp
fnstcw
sub
call
pop
pop
jae
cmp
adc
xor
sub
push
arpl
sub
imul
jle
jbe
push
lcall
imul
sbb
test
mov
and
jae
fstpt
xchg
sbb
mov
mov
ss
cmpsl
push
mov
mov
test
les
je
imul
jns
pop
in
push
mov
sbb
push
sahf
sbbl
test
pop
jae
adc
sbb
adc
lods
dec
xor
jns
movsl
stos
repnz
inc
or
enter
cltd
jge
push
sub
dec
or
outsb
jo
fsub
push
and
shlb
daa
std
mov
leave
add
lret
push
rol
jecxz
cld
mov
arpl
sahf
loope
cmp
dec
clc
int3
mov
iret
jecxz
pop
loopne
or
testb
jmp
loopne
cmc
cmp
arpl
sub
aaa
xchg
lock
xchg
scas
adc
fs
pusha
add
sub
add
out
and
dec
or
cmp
ss
andb
adcl
in
cmp
xor
xchg
jne
dec
or
push
inc
or
jno
or
test
test
fisttps
ja
cld
fdecstp
jns
mov
push
mov
add
mov
inc
test
mov
push
and
imul
and
xor
mov
xchg
mov
cmpsl
fstpt
and
and
dec
and
pop
fsts
fsts
lret
jg
popf
fsubs
and
scas
movsl
jb
sub
mov
sbb
popf
insl
fdivrs
scas
sbb
add
in
cmp
pop
jg
arpl
jno
popa
mov
xorl
test
test
xchg
fidivl
rolb
mov
sahf
jmp
xchg
ret
movsb
xchg
test
mov
mov
testl
js
movsb
xor
push
lcall
cmpsl
inc
fsts
call
sub
cmpsb
cmp
mov
mov
jo
loopne
mov
in
jg
js
mov
lret
add
in
test
aaa
adc
ror
bound
cmp
sbb
mov
sub
add
sub
xor
ds
lds
jp
lcall
mov
cmp
movsb
fdivr
lcall
fidivl
pop
sub
cmp
int
fnsave
lret
jp
ljmp
out
mov
mov
outsb
inc
jle
enter
frndint
dec
ljmp
push
add
cmpsl
std
insb
testl
xchg
push
lcall
out
and
pop
or
lods
inc
inc
xlat
data16
inc
fs
pusha
mov
adc
xchg
jbe
cmp
or
iret
lcall
pop
cmp
adc
test
or
mov
insb
seta
outsl
fldl
sub
or
adc
mov
addr16
popa
repnz
ss
cmp
shld
push
inc
cmc
or
stos
popf
pop
xchg
cmpsl
icebp
xorl
sbb
cmp
ficomps
int3
out
sub
cmp
push
lcall
lds
scas
mov
popa
inc
or
loope
dec
adc
jmp
fucomip
orl
cmp
inc
xor
cmpsl
sbb
fwait
pop
sbb
cmp
je
mov
mov
xchg
js
popf
pop
mov
dec
mulb
stc
and
cmp
jmp
mov
xchg
or
pop
lock
xchg
xchg
les
loop
xor
push
ret
int
mov
cmp
push
jg
push
pop
cmp
sahf
xlat
cmpsb
dec
add
loopne
in
mov
dec
inc
int
mov
outsb
int3
jb
mov
inc
std
popa
fiaddl
mov
adc
or
pop
rcrb
cmp
fsts
push
xchg
sahf
push
int
and
or
in
ret
push
shl
push
cmpsb
cmpsb
repz
xor
jmp
jne
out
loopne
andb
mov
sbb
xchg
pop
and
adc
std
sbb
push
in
movsl
hlt
dec
imul
or
mov
dec
sub
mov
clc
loop
and
test
jne
or
test
lods
sahf
jo
dec
fists
pop
inc
sub
push
fwait
outsl
aas
and
data16
data16
add
lods
sub
cmc
adc
clc
imul
dec
loop
mov
push
std
inc
mov
insl
sbb
dec
ds
or
sbb
or
ret
mov
xor
enter
pop
fiaddl
addr16
and
push
pop
mov
adc
inc
test
pop
dec
sarb
adc
mov
call
push
out
or
xchg
mov
push
in
dec
test
dec
or
rcrb
sub
roll
lds
sbb
cltd
jge
jle
lret
fsubrs
fldcw
or
xor
dec
int3
or
mov
ret
je
inc
or
and
lea
out
jg
call
push
ljmp
aad
and
push
pop
cmpsb
xor
mov
xchg
and
push
add
into
xchg
pop
scas
cltd
jecxz
fld1
push
testl
pop
cmp
or
dec
dec
sub
out
inc
aam
aad
rcll
sbb
inc
dec
inc
mov
cmp
sub
mov
iret
mov
xor
xchg
cmpsb
and
sbbl
cli
sbb
lret
fcompp
lock
jp
ljmp
sbb
dec
xor
xor
xchg
ss
cwtl
mov
mov
icebp
sti
pop
js
cwtl
cmp
dec
loope
cmp
cmp
jg
scas
pop
ficomps
cmpl
add
mov
cmp
pop
scas
pop
mov
push
mov
jb
dec
xchg
cmp
mov
daa
aaa
push
outsl
mov
lods
repnz
call
add
push
and
push
cmp
test
sbbb
popf
mov
mov
out
adc
pop
push
push
inc
xchg
lods
test
add
decb
hlt
ss
jo
or
addr16
arpl
pop
mov
push
mov
aas
ror
and
mov
pop
push
data16
sub
test
aam
movb
lahf
mov
cmp
jne
imul
mov
fidivrs
xor
mov
scas
hlt
jb
mov
out
cmpsb
adc
je
addr16
bnd
js
jnp
lret
subl
mov
lret
jecxz
fs
fcoms
pop
jecxz
lds
test
std
xor
push
inc
sbb
scas
scas
fucomp
int3
aas
or
adc
sbb
int3
addr16
push
repz
mov
cs
fcomps
xor
pop
push
pop
cmp
outsl
push
and
clc
mov
xor
xor
notl
imul
mov
push
mov
xchg
cltd
mov
push
cmp
inc
add
mov
fnstcw
jmp
adc
xchg
xor
inc
ljmp
pop
or
cmc
mov
jecxz
in
cwtl
or
jecxz
sub
lar
leave
daa
adc
pop
data16
jle
es
dec
mov
xorb
iret
lods
jno
xor
dec
fsubl
ja
pop
jg
popf
push
div
xchg
sub
outsl
idivl
stos
std
mov
notl
incl
popa
lahf
or
mov
xor
cmp
mov
inc
imul
xchg
addr16
lds
test
or
repnz
in
push
sbb
push
out
out
popa
dec
mov
jg
xchg
dec
push
aad
mov
add
push
jb
inc
mov
adc
call
xchg
ror
mov
mov
pop
outsb
mov
lret
shll
ja
push
test
jmp
les
add
leave
mov
adc
pop
cmp
jmp
mov
movsb
and
and
push
ss
push
xlat
adc
cmpl
pop
cli
into
pop
in
in
pop
cmp
jmp
pop
push
add
jbe
push
fcoms
mov
data16
notb
inc
pop
cmp
ret
pop
mov
cmpsl
ret
mov
push
sub
sub
mov
mov
dec
mov
add
pop
cmp
sbbl
xlat
dec
mov
pusha
mov
arpl
shrb
aam
mov
adc
dec
int3
sbb
subb
sbb
cmp
lcall
pop
or
xor
les
out
cs
inc
inc
mov
in
cmp
lret
das
add
sbb
les
cmpsb
testl
inc
xchg
cmp
lock
mov
in
xor
pop
xor
cmp
jnp
incl
cmp
frstpm(287
in
bt
sub
nopl
pop
mov
mov
push
mov
mov
jmp
addb
mov
pusha
mov
fdivl
hlt
mov
out
aam
dec
ret
aas
pop
daa
movsb
bound
mov
cmp
loope
and
mov
jno
rolb
clc
out
add
push
lret
rcr
sbb
ret
jmp
add
icebp
fsubrs
das
push
push
jae
das
imul
push
sub
fsts
aas
mov
jae
pop
cmc
dec
pop
adc
xchg
xor
ja
mov
jb
cmp
push
insl
xchg
adc
adc
mov
js
xchg
fs
mov
add
push
xor
fs
mov
xchg
cmpsb
sub
out
adc
mov
into
clc
sahf
add
shll
int
sub
out
dec
outsl
les
mov
dec
jmp
sub
ret
xchg
js
mov
or
push
inc
lock
inc
lock
pop
mov
shlb
lock
cmp
add
mov
push
iret
and
fidivrl
jnp
out
jl
mov
cmc
sbb
add
shll
jge
dec
imul
aas
jge
lods
add
or
lods
les
stos
cmp
cmpsb
adc
pop
sbb
jns
mov
sbb
mov
cmovnp
adc
xlat
ret
lock
add
and
adc
inc
mov
pop
jle
pushf
push
mov
nop
sbb
and
sbb
mov
ljmp
mov
mov
or
xchg
imul
adc
jecxz
xor
xor
or
xor
out
cmp
jno
xor
pop
lods
mov
addr16
mov
sbb
sahf
and
push
xor
fs
mov
dec
xchg
inc
inc
shll
and
dec
out
lds
lret
inc
pop
hlt
decb
xlat
inc
adc
icebp
js
inc
ja
cmpl
xchg
mov
or
ficoms
xchg
and
push
xchg
imul
cmpsb
cmp
subb
int3
stos
and
in
jnp
fdivrs
add
imul
daa
js
mov
or
enter
mov
adc
rolb
xor
std
insb
pop
jne
popf
push
cmp
jbe
in
and
inc
cmpsl
or
mov
pushf
fucomi
push
cmp
lcall
shlb
mov
xchg
xchg
movsl
gs
lock
out
loop
sbb
jns
push
jge
fs
ret
arpl
in
jl
sub
jmp
or
scas
inc
jl
das
out
addr16
ret
or
movsl
into
in
xchg
xchg
icebp
mov
in
stos
mov
ja
mov
fstps
cmp
adc
sub
xchg
or
add
das
sarl
jmp
mov
xchg
pop
xchg
in
dec
lret
into
or
int3
xchg
push
jmp
aam
or
mov
pushf
fsubrs
push
in
icebp
cmpsw
push
jb
cmc
std
lahf
cmpsb
push
push
imul
cmp
ffree
mov
sub
xchg
mov
mov
lret
xchg
jae
ret
pop
add
pop
in
inc
sahf
jg
jg
std
repnz
stos
flds
mov
addr16
cmc
and
mov
popa
ds
mov
xchg
mov
shrl
or
lods
inc
and
ficoms
pop
das
fldenv
push
leave
outsl
out
jmp
mov
es
stos
xor
popa
lahf
sbb
mov
mov
gs
stc
dec
adc
push
fnstenv
aaa
and
cld
popf
gs
cmp
inc
addb
mov
sbb
ja
pop
stos
nop
les
push
pushf
push
and
ss
and
in
pop
mov
in
imul
lea
scas
bound
push
sub
cmc
daa
push
sbb
jo
xchg
or
daa
jno
lret
sarl
jb
mov
insl
add
jl
shlb
add
int
aas
push
mov
or
pop
aas
out
jl
fs
adc
inc
out
inc
inc
jo
sbb
mov
sti
jl
mov
cmp
cmp
mov
imul
sub
pop
adc
pop
dec
popa
jle
pop
rorb
popf
test
mov
pop
mov
add
jno
xor
das
mov
or
sarb
xchg
jg
mov
loop
dec
shl
ss
inc
aad
xchg
mov
inc
cmpb
push
jecxz
das
jp
mov
insl
bswap
outsb
loopne
dec
cmp
iret
push
fsub
negl
and
dec
test
inc
sub
or
int
outsb
push
or
stos
scas
inc
fld
ja
dec
mul
add
jne
divl
loopne
inc
lock
pop
xchg
out
lock
dec
stos
lcall
push
popa
ja
cmp
mov
jne
cmp
or
and
icebp
and
lret
sub
xor
or
popa
movsb
cld
inc
xchg
adc
enter
push
xlat
insb
inc
lret
add
push
mov
fmull
movsb
std
inc
sahf
mov
xchg
or
repnz
mov
mov
jge
mov
jne
sub
insl
push
or
dec
or
xchg
data16
adcl
inc
inc
xchg
cld
test
pop
in
std
mov
lret
ret
rorl
xchg
shl
cltd
mov
lcall
rclb
pushf
stos
lds
inc
pop
pop
int
push
mov
dec
or
dec
repnz
lahf
and
icebp
push
mov
or
push
dec
cmp
xor
mov
aad
out
add
adc
daa
and
cmovle
sbb
les
mov
ds
or
or
scas
jnp
mov
loopne
xchg
pop
cmp
movb
lock
dec
ss
mov
int3
rorb
stos
dec
adcl
xchg
addr16
dec
in
gs
xchg
push
add
test
inc
outsb
out
out
shll
imull
mov
fdivs
mov
shll
dec
lahf
and
sub
jne
push
jecxz
add
sub
loope
sbb
gs
xchg
adc
mov
idivb
adcl
inc
test
mov
mov
gs
enter
push
xchg
sahf
inc
fadd
mov
repz
add
or
ljmp
into
and
push
pushf
add
xor
pop
or
jmp
roll
shlb
push
jnp
fldt
cwtl
push
pop
mov
cld
xchg
mov
es
xchg
add
outsl
xchg
aam
adc
inc
push
mov
rol
push
inc
xchg
aam
mov
jno
mov
stos
push
shlb
in
repnz
dec
movb
movsl
pop
sti
out
xor
cmp
insl
dec
mov
popf
js
decb
jnp
mov
imul
enter
out
addr16
add
pop
mov
popl
stos
pushf
fdivs
cmp
int3
lea
cmp
dec
pop
push
out
dec
add
xor
aam
lea
mov
inc
add
lods
rorl
sbb
mov
or
mov
jns
cmpl
push
mov
cmp
test
arpl
std
push
cmp
mov
push
or
aas
xchg
fstpl
je
xchg
fdivl
add
or
pop
out
mov
cmp
sub
dec
out
xlat
notl
ret
scas
dec
mov
inc
aaa
icebp
inc
rol
mov
nop
aaa
mov
pop
sbb
xchg
aaa
fwait
xchg
or
sbb
mov
xchg
and
sub
dec
sub
mov
cmc
stc
pop
ret
and
insb
je
inc
cmpsb
loop
lret
push
push
dec
mov
xchg
ffree
mov
mov
push
das
or
mov
add
ret
xchg
push
cmp
xchg
xchg
push
fs
std
out
sbb
bound
rclb
ret
fwait
mov
pop
cmp
cmp
pop
dec
cwtl
bound
jns
xchg
or
push
addr16
xor
mov
or
push
in
loope
cmp
inc
mov
js
stos
lahf
xor
xor
jge
xor
or
int
shrl
sbb
je
xchg
mov
sub
push
fcmovbe
push
call
push
sbb
ja
faddl
lea
scas
jl
or
jl
rorb
inc
or
xor
mov
aaa
js
xchg
scas
push
pop
lds
fwait
xchg
adcb
or
sbb
and
pusha
in
inc
jno
dec
ljmp
jne
or
inc
ljmp
pop
pop
cmp
cmpsl
mov
jmp
add
ficomps
sbb
sti
mov
into
jo
jmp
sahf
aad
fstl
in
out
das
out
cmpsb
stos
cs
jae
idivb
aad
adc
movsb
adc
xchg
inc
cwtl
imul
xlat
rorb
mov
leave
aam
jbe
jne
sbb
add
les
sub
sbb
inc
mov
pop
sbb
xchg
mov
repnz
pop
test
out
pushf
call
movsb
sub
dec
cmpsl
jae
test
insb
pop
pushf
fwait
movsb
sub
mov
ficoms
xor
push
pop
leave
scas
mov
xchg
dec
inc
outsb
scas
jns
pop
xor
xchg
mov
adc
test
jmp
std
lea
data16
dec
dec
and
pop
das
and
data16
push
gs
scas
insb
mov
and
mov
sahf
in
dec
pop
sub
xchg
mov
or
xchg
inc
inc
pop
out
cmc
fistpll
and
cmpsl
imul
xor
cmp
lea
pop
mov
xor
aaa
pop
stc
stc
repz
ret
jmp
leave
rorl
mov
shll
push
and
inc
push
xor
xor
xor
xchg
pop
lods
cmpsl
cmpsb
fildll
repnz
daa
and
jmp
incl
xchg
add
adc
mov
das
sbb
cmp
or
sbb
mov
mov
sub
aaa
inc
bound
pushf
cmp
push
add
insb
mov
push
add
adc
fists
ja
stc
fdivl
or
repz
pop
xor
push
int3
pop
insl
sub
cli
insb
ficomps
xchg
popf
mov
mov
insb
mov
jbe
in
add
sbb
and
mov
mov
leave
lahf
icebp
mov
inc
mov
repz
mov
sub
sub
inc
fdivrl
mov
mov
stos
out
lcall
jns
fiaddl
xor
or
cmp
lret
sbb
xor
mov
and
std
mov
mov
test
daa
sub
aas
mov
andl
out
addb
insl
xchg
mov
adc
stos
push
push
and
les
jae
clc
jmp
pop
call
cli
push
jl
or
add
jmp
jno
iret
or
fmull
mov
mov
mov
jae
mov
test
test
lret
mulb
mov
fsubr
leave
nop
pushf
ljmp
fs
cmc
daa
fistps
test
cmc
mov
cmc
clc
inc
mov
xor
test
bound
adc
cwtl
sbb
mov
push
mov
mov
popa
push
ja
insl
xor
jns
lods
sub
addr16
inc
popf
pop
or
cwtl
outsl
jmp
testb
outsl
addr16
outsb
fsubrl
loope
fs
bound
sub
lret
lock
dec
cmp
cmpsl
sti
fildll
sub
les
sub
xor
clc
gs
jecxz
stos
repnz
cmp
lahf
mov
insb
into
lcall
sbb
in
sub
jge
daa
push
xor
pop
iret
lcall
subb
das
sub
sbb
mov
inc
push
fiadds
in
leave
cs
daa
add
mov
arpl
test
cmpsb
lds
jl
fstl
clc
mov
mov
mov
pop
ficoms
leave
cmc
mov
lods
decl
and
aad
push
or
jbe
mov
inc
loope
mov
xchg
shll
repz
ror
dec
lods
jge
push
or
mov
enter
inc
repnz
mov
outsb
inc
ja
ret
lcall
dec
adc
gs
mov
jp
mov
ds
je
dec
sbb
das
dec
push
adc
xor
sahf
mov
xlat
xchg
idivl
out
dec
mov
push
xor
int3
es
addr16
sbb
xorl
sub
pop
and
sbb
mov
scas
and
lcall
dec
adc
cmp
mov
inc
adc
xchg
or
mov
xchg
mov
mov
mov
cmpsb
jl
jo
rorl
and
jns
dec
or
out
sbb
mov
push
test
adc
push
adc
lcall
cwtl
add
sbb
and
sarl
add
jmp
add
jns
mull
or
test
insl
pusha
lcall
cmp
xchg
fwait
lods
inc
dec
jle
push
xchg
mov
cmp
sub
cwtl
lds
outsl
jg
mov
test
mov
cmc
es
cmp
and
movsb
ret
sub
icebp
data16
adc
and
popa
push
mov
dec
shlb
add
mov
xlat
sub
mov
push
dec
adc
add
push
lods
push
jl
cmp
add
inc
ret
pop
arpl
push
cld
pop
fsubrs
insl
std
ret
dec
jl
shll
ds
add
jo
les
jecxz
xlat
insb
mov
pop
stc
and
loopne
out
lods
push
ljmp
dec
mov
push
jb
jle
xchg
xchg
xor
xchg
mov
sahf
fcmovnb
jge
xor
or
aam
inc
sbb
iret
test
jp
mov
out
jns
and
mov
xchg
mov
lock
sub
xor
push
imul
add
mov
cli
jl
pop
xor
cmpsb
mov
xor
and
inc
loope
jns
or
and
lods
sub
push
jmp
andl
rcrl
mov
jg
xchg
rcll
sbb
shl
mov
std
xchg
pop
idiv
enter
test
sub
sub
sub
sub
lods
dec
adc
xchg
pop
aaa
je
push
pop
add
test
pop
pusha
mov
aad
ret
mov
jp
js
sub
outsb
pop
adc
imul
fildll
fldenv
pop
rolb
xchg
bound
push
in
sahf
push
scas
psubq
mov
pop
and
repz
icebp
mov
mov
and
cmp
or
and
pop
inc
clc
je
or
mov
lods
ficompl
fldenv
int3
popa
jne
cmc
repnz
cmpsb
jl
rcrl
dec
pop
push
decl
xchg
mov
xchg
xor
push
aaa
sub
mov
fs
mov
das
in
inc
add
push
ds
imul
shll
into
les
ret
or
xor
xor
es
scas
test
test
inc
xchg
xor
mov
mov
sbb
xchg
sahf
jns
inc
inc
adc
mov
adc
jl
inc
repz
mov
lret
and
fistpl
jle
repnz
mov
xchg
scas
pop
push
lcall
add
and
add
xchg
fldt
push
repz
pop
mov
hlt
pop
jge
js
lret
dec
mov
inc
call
fwait
lret
jge
stos
xor
mov
jns
xchg
lcall
inc
push
add
out
mov
std
fildll
push
andl
add
mov
inc
sbb
aam
in
int
push
jl
pusha
jb
ds
jg
xchg
dec
inc
lea
mov
bound
test
xchg
and
jecxz
dec
cltd
mov
out
shlb
out
ja
xor
mov
xchg
fstpt
test
fisubrl
or
and
jmp
cld
lods
mov
adc
push
dec
test
pop
push
mov
mov
pop
nop
lods
data16
and
push
in
pop
push
mull
lahf
mov
push
xor
mov
dec
bound
dec
cmp
pop
mov
add
lret
dec
loope
aas
cmp
rcrl
xchg
lret
ds
jp
mov
stc
inc
ret
ss
xlat
xor
cmp
out
pop
out
mov
test
or
loop
loopne
data16
cmpsb
jmp
sub
mov
sarb
sbb
mov
stos
mov
loopne
test
stos
cmp
pop
lock
inc
xchg
in
mov
leave
sub
push
lea
jg
xor
or
mov
es
xchg
mov
repnz
add
std
jnp
insl
pushf
fdivrl
popa
adc
fs
mov
mov
jle
call
or
xor
push
mov
adc
inc
cmp
and
sbb
xchg
test
stos
cli
xorl
lock
sub
insb
jo
cmp
pop
addr16
and
push
sbb
cmp
ficomps
std
or
pusha
pop
fists
push
in
loope
mov
jnp
dec
mulb
and
push
cmc
push
cwtl
mov
mov
mov
mov
cmp
in
and
xchg
insl
add
lret
in
sub
and
jecxz
cmp
pushf
mov
mov
xor
and
or
int
jmp
shl
into
mov
add
jno
adc
repz
leave
lock
call
inc
add
pop
loop
fcomi
lahf
enter
shrd
pop
test
lret
insb
mov
cmpl
js,pt
fisttpll
push
dec
jmp
pop
cs
xor
sub
sub
pop
cmp
jp
test
mov
mov
inc
mov
stos
inc
jns
push
repnz
add
mov
sub
mov
adc
xchg
sbb
sub
jns
inc
and
dec
test
mov
pop
dec
jo
scas
mov
jmp
enter
mov
sbb
cltd
add
cmp
sar
jge
jecxz
xor
stos
rorb
jle
into
inc
pusha
loope
push
cs
sub
sbb
xchg
subl
movsb
loope
call
mov
mov
cmpsb
enter
sti
gs
leave
aas
movsl
dec
mov
out
sub
aam
std
mov
cmp
push
mov
inc
ds
mov
dec
push
jne
mov
adc
notl
jno
push
lahf
mov
enter
mov
scas
xor
cwtl
dec
js
fidivrl
repz
addr16
iret
sbb
and
mov
nop
jne
std
add
dec
jae
mov
sub
fs
adc
aaa
sub
popf
popf
mov
sbb
mov
cmp
lcall
rcrl
call
inc
stos
mov
ficompl
xor
adc
sub
fcmove
jle
fdivs
adc
loop
cld
rcrb
in
mov
nop
cmp
fwait
xlat
or
inc
mov
or
in
out
fwait
mov
or
jmp
pop
push
loope
mov
ficomps
cmp
cmp
cmc
ret
pusha
dec
hlt
hlt
imul
imul
or
jne
pop
lods
add
pop
shll
repnz
jb
outsl
div
iret
js
les
ja
loopne
insb
cmp
sbb
pop
xor
cmp
inc
mov
xchg
mov
dec
mov
test
inc
or
fstpl
xor
mov
les
mov
pusha
dec
mov
add
popf
or
inc
je
pop
aas
aas
sbb
cmpl
cmp
lret
data16
jo
inc
dec
push
cmpsb
and
adc
push
add
ja
in
fstps
bnd
mov
out
inc
cmp
push
pop
push
test
add
jmp
popa
call
cltd
ljmp
lods
mov
cs
sbb
pop
outsl
pop
xchg
outsb
dec
imull
sbb
mov
push
mov
mov
ds
add
adc
add
or
cmpsl
insl
push
inc
mov
mov
dec
fistps
pop
flds
sbbb
fisubl
pop
push
adc
scas
xchg
pop
sahf
iret
jmp
sbb
and
push
xor
ljmp
stc
in
jb
pop
insl
jo
jmp
push
xor
sub
sbb
jo
aas
fidivrs
insb
sbb
mov
fiaddl
or
cs
fildl
test
fsts
add
daa
popa
add
add
adc
inc
xor
shlb
pop
cmpsl
std
out
and
div
sub
into
fstl
push
std
ds
out
ja
imul
in
dec
push
push
stos
imul
test
adc
xor
lahf
shrl
sub
adc
xor
cld
dec
orl
push
pop
jns
mov
mul
xlat
inc
jnp
mov
bound
xchg
xbegin
xlat
fiadds
scas
jns
call
jno
aas
pop
aaa
inc
gs
adc
xchg
fxch
push
jne
cmp
pop
sbb
pop
and
test
insb
jg
pusha
sub
sahf
testl
daa
cld
push
mov
xlat
pop
idivb
and
sbb
sbb
das
test
int3
xor
outsl
mov
cmp
sbb
shrl
sahf
popa
ror
xchg
mov
push
mul
cmp
push
push
into
push
outsl
js
pop
jp
sub
inc
cmp
int3
xchg
xor
sub
jecxz
add
mov
in
add
cmp
inc
add
test
dec
mov
sub
inc
xchg
add
or
sbb
orl
daa
cli
sbb
sbb
pop
cwtl
and
test
sub
testl
imull
and
cmp
and
cmp
mov
fidivrs
mov
loop
loopne
stos
and
cli
lea
repz
pushf
orl
outsb
ret
or
jae
xlat
int
sbbb
test
sbb
and
mov
pop
shr
push
push
mov
xchg
cmp
pop
in
lds
sub
or
fidivl
jb
imul
loope
shr
ljmp
adc
sti
jo
lods
sub
popa
imul
xor
and
rclb
fldl
into
cmp
push
xchg
mov
hlt
data16
push
loop
cmp
scas
stc
nop
mov
pop
dec
cmc
xchg
ja
cmp
mull
mov
nop
adc
mov
add
popf
fadd
fisttpll
or
mov
mov
push
pushf
adc
push
pusha
hlt
xchg
push
or
ret
nop
xorl
icebp
cs
jecxz
sarb
outsb
arpl
add
adc
xchg
jae
push
and
jecxz
cwtl
xchg
repnz
add
in
icebp
cmpsl
sub
jge
xor
lcall
adc
cmp
adc
repz
aaa
shrd
scas
fdiv
mov
mov
shlb
std
nop
mov
pop
adc
clc
das
push
mov
mov
fcmovnb
outsb
sbb
adc
adcb
mov
dec
mov
scas
lods
shlb
pop
and
jb
fwait
pop
pop
jns
mov
mov
fildl
mov
inc
test
loopne
stos
aaa
int3
or
jl
js
sub
and
aad
leave
inc
sahf
int3
add
add
inc
mov
xor
sarl
and
inc
and
sub
cmp
inc
adc
aam
jmp
ds
pop
pop
out
mov
loope
in
into
push
pusha
mov
mov
les
pop
or
pusha
xor
cmc
dec
and
loopne
test
lret
test
nop
sti
pop
movsb
sub
cmp
lret
ljmp
adc
das
push
mov
jb,pt
shr
sub
lahf
dec
nop
fmul
jl
jne
movsl
into
jmp
xor
push
pushf
sti
sbb
dec
xor
sub
cmpsl
in
les
jne
ret
jmp
xor
or
pop
je
dec
xor
or
cmp
and
push
xchg
js
or
xchg
dec
mov
jns
push
mov
cmp
jecxz
outsb
fs
imul
push
addr16
int
fildll
or
mov
ja
flds
in
jnp
rcrb
pop
icebp
shlb
xchg
fdivrs
stc
sbb
cs
mov
ljmp
pop
leave
pushf
inc
lahf
fwait
and
ljmp
int3
scas
rolb
push
aam
das
xor
lcall
jbe
lcall
mov
insb
xor
sahf
stos
push
lcall
jo
sbb
sti
dec
cmp
test
mov
cmp
mov
dec
dec
je
xchg
push
test
popa
and
or
mov
mov
jnp
inc
jl
fmull
mov
sbb
sahf
jb
add
div
sbb
mov
or
xchg
xchg
mov
js
lret
addr16
pop
adc
rol
dec
sbb
jl
es
fbstp
aas
pop
push
mov
push
or
adc
setge
aam
pop
in
sub
in
mov
or
inc
ds
ds
fildl
push
je
adc
inc
enter
stc
jno
les
test
decb
xor
imul
mov
es
out
xor
cmp
mov
cmp
xor
inc
hlt
jae
dec
jle
xchg
andb
mov
ds
dec
sub
mov
sbb
lret
cmpsb
jg
jg
js
jmp
mov
cmp
loopne
jne
cwtl
and
mov
mov
mov
out
add
or
fldcw
les
cltd
mov
cmp
inc
scas
jb
in
addb
rcl
mov
cmp
xor
push
sbb
aaa
lock
push
xor
lret
fmul
adc
icebp
push
xor
xor
or
mov
mov
or
cmc
ret
addr16
sub
adc
jb
roll
push
xchg
sub
imul
dec
push
and
dec
hlt
cmp
jge
inc
into
jl
ret
mov
mov
xchg
push
dec
scas
aam
xchg
jbe
mov
iret
lret
push
jecxz
bound
leave
jge
and
std
sub
xchg
xchg
ds
xor
and
xchg
int3
lea
pusha
aad
enter
iret
push
movsl
mov
int3
jo
stc
add
mov
push
inc
fdivs
xchg
sahf
xor
sti
enter
in
dec
lea
xchg
int3
xchg
pop
cli
in
push
sub
mov
add
push
mov
or
pop
or
mov
pop
popf
enter
cmc
sbb
or
lahf
xchg
xchg
or
sbb
lock
jmp
std
addb
mov
decb
push
call
pop
cmp
mov
adc
repnz
pop
out
imul
mov
xor
sbb
adc
gs
mov
push
sahf
out
cmc
je
jns
xor
mov
loopne
dec
mov
cmp
or
jmp
enter
xchg
push
add
int
cwtl
loopne
cmp
mov
fs
mov
sbb
jl
loopne
cs
inc
dec
jo
cmpsb
insb
repnz
pop
pop
test
mov
push
and
mov
xlat
fistpll
hlt
inc
insl
dec
mov
add
jg,pt
pop
mov
lea
push
in
aad
xor
fwait
push
sub
loope
mov
cmp
leave
mov
lock
mov
dec
cmp
stos
pop
jecxz
cmp
lahf
add
xor
into
and
mov
mov
sar
sub
mov
movsb
rcrl
xchg
out
loop
xor
cmpsl
mov
sbb
mov
adc
fisttps
and
sti
and
jcxz
insl
pusha
sti
bound
fnstenv
sbb
xchg
mov
lahf
jae
add
sub
cwtl
pop
sbb
mov
gs
test
ljmp
or
pusha
rcrl
insl
xorb
insb
jl
jl
jl
cwtl
daa
mov
lods
aad
add
jp
loope
lea
lcall
das
rcrl
addr16
pop
lock
xchg
roll
pop
and
jbe
out
cmp
les
ret
or
in
popf
rolb
adc
mov
pop
out
xchg
push
sbb
ret
adc
push
fldcw
mov
dec
or
and
lods
sub
sahf
jae
insl
divl
jg
aam
xor
or
scas
mov
out
adc
je
mov
ss
mov
mov
push
fnstenv
push
int3
push
sub
data16
mov
pop
test
xor
dec
lock
dec
jle
pop
ljmp
xlat
push
rorl
dec
push
jns
js
inc
movsl
jns
shrb
je
fstps
pop
lods
fdivs
jnp
gs
mov
sarl
insl
add
push
lahf
jge
flds
enter
push
ljmp
jmp
cmp
mov
and
test
sbb
out
insb
xchg
pop
dec
cltd
lahf
xor
dec
jmp
addl
aam
divb
mov
imul
or
jmp
add
jecxz
or
cmp
push
xor
add
sahf
or
fiaddl
fisubrl
mov
mov
sub
in
mov
and
ss
fbld
addr16
movsl
rcrl
shll
and
inc
jne
dec
inc
lret
xchg
mov
and
setne
cmpl
xchg
mov
inc
xchg
mov
hlt
call
pop
add
int
test
add
movl
xchg
dec
xor
out
or
or
sahf
call
in
aad
mov
sub
cmp
mov
aas
into
out
bound
add
and
mov
push
dec
jecxz
inc
addr16
dec
mov
pop
test
or
stos
xchg
lods
rolb
pop
cmpsb
sbbb
inc
fsubrs
in
dec
ror
push
sbb
push
xorl
cmp
inc
jmp
sub
xchg
test
dec
in
jbe
pop
xor
and
cmp
jo
cmpsl
shl
data16
cmp
mov
fsubp
neg
stos
sub
mov
adc
fdiv
scas
add
jbe
in
in
or
dec
bound
jg
imul
xchg
cmp
js
adc
cltd
lret
or
cld
mov
push
inc
outsl
dec
int3
pop
or
pop
add
add
icebp
mov
jns
or
cmp
pop
fbstp
jmp
cwtl
fldcw
je
xchg
cmp
xorl
repz
and
jbe
mov
jg
sbbl
xor
pop
mov
int3
ja
sarb
mov
es
movsl
inc
es
aam
push
inc
lcall
mov
mov
cltd
inc
ret
push
inc
jp
dec
xor
jo
dec
lcall
repnz
stc
fsubr
sti
inc
scas
mov
sub
std
cmpsl
cmp
jnp
or
mov
pusha
pop
mov
fcoml
cld
cmp
push
cmp
push
and
or
aas
jmp
xchg
lea
add
inc
dec
xchg
stos
in
cmp
dec
jg
mov
test
movsb
mov
mov
mov
sbb
mov
mov
test
add
mov
xchg
adc
outsl
cs
pop
cld
inc
icebp
mov
daa
jno
hlt
repz
pusha
sbb
mov
jecxz
pop
inc
gs
dec
jne
loope
mov
mov
aas
jecxz
or
jg
cmp
pop
xchg
dec
mov
shld
loopne
pop
push
dec
xchg
jbe
mov
lret
loopne
add
bound
pop
std
andl
into
pop
or
and
jno
shrb
fwait
mov
fsubl
xor
inc
sbb
clc
mov
fstpl
mov
jmp
sahf
dec
inc
sbb
cli
leave
lds
mov
pusha
aam
xchg
pusha
cld
mov
mov
xlat
xlat
pop
jle
jge
leave
aaa
mov
or
fbstp
fidivs
out
int
arpl
push
and
in
and
pop
aam
push
movsb
sub
in
cmc
jecxz
mov
out
sti
cmc
xlat
adc
fnstcw
fcomps
xor
popf
sbb
xor
jle
sub
out
cmpsb
das
pop
popf
pop
xchg
jle
xor
fwait
js
sarb
hlt
push
add
xor
out
pop
cmp
and
sub
jmp
lock
repz
cmp
insl
fcompl
xchg
mov
adc
aad
cmpsb
inc
mov
mov
lods
cmpsb
sub
jbe
ret
lds
aam
cmp
repz
push
xchg
std
push
inc
jl
loop
adc
mov
jns
nop
aad
andb
jecxz
xchg
xchg
popa
dec
adc
insl
and
hlt
lods
or
fisubl
mov
ja
scas
mov
add
jns
cli
xor
shr
fidivl
sub
lahf
adc
sbb
pushf
and
fsubl
or
lods
xchg
shrb
in
bound
in
mov
mov
add
clc
mov
imul
out
aam
pop
scas
dec
and
cmp
push
jmp
mov
rcr
jbe
mov
dec
rorl
fwait
sub
xor
in
mov
sub
mov
sub
pop
lods
jne
jns
mov
hlt
mov
mov
subl
daa
je
testl
mov
shlb
or
outsl
std
mov
jno
adc
sbb
jbe
cwtl
repnz
cli
sub
dec
aam
push
test
pop
aaa
add
scas
pushf
sarb
test
sbb
hlt
js
inc
repz
cmpsl
push
pop
push
arpl
outsb
mov
or
sub
push
mov
mov
pop
out
push
inc
and
adcl
ret
pop
les
jg
outsb
and
add
mov
push
push
into
xor
jno
cs
sbb
pop
mov
in
jnp
repz
movsl
mov
mov
cwtl
pop
sar
mov
mov
cmpsl
adc
js
jp
ret
adc
repz
pop
cmp
jae
push
mov
movsl
mov
shlb
movsl
je
push
scas
insb
jbe
xor
sbb
mov
sbb
push
out
fstpl
enter
js
cwtl
cld
xlat
aam
push
sub
mov
dec
out
adc
push
movsb
lea
sbbl
xor
inc
jnp
test
lahf
sbb
or
fisubl
push
scas
sub
cltd
andb
loop
push
adc
das
mov
cwtl
jns
xchg
fisubs
xchg
es
pop
mov
pop
pop
xchg
mov
or
mov
adc
push
adcb
dec
pop
incl
and
sahf
sbbl
push
and
loop
loope
cmp
das
inc
push
xor
xorb
out
cmp
ja
add
dec
faddl
push
inc
testb
out
mov
jnp
test
insl
jbe
loope
test
xchg
inc
mov
ds
pop
push
ss
fwait
andl
cs
xor
mov
fwait
cmp
add
sti
jae
sahf
sbb
loop
imul
xchg
inc
mov
pop
add
int
popf
lock
imul
sbb
adc
ficompl
xor
jnp
enter
sbb
aad
daa
out
insb
ds
push
mov
jge
inc
ja
push
inc
int
cmc
aas
jnp
sbb
sarl
dec
xchg
inc
xor
int3
pop
mov
sub
push
adc
or
mov
xchg
xchg
and
pop
jno
push
enter
or
push
sbb
or
stos
dec
addb
int3
push
mov
mov
jo
dec
push
inc
inc
push
imul
xor
add
xchg
mov
mov
push
push
and
pop
pop
in
add
into
push
add
add
mov
jbe
add
cmp
inc
dec
lock
shrl
test
mov
push
push
adc
push
cwtl
int
ss
lret
dec
popf
jmp
fs
mov
push
cmp
inc
dec
push
stc
imull
enter
test
pop
sbb
jo
ret
xchg
scas
pop
or
movb
test
xchg
push
dec
in
int3
daa
cmp
cmp
sub
xchg
push
dec
xchg
out
dec
int
inc
into
loop
pop
xchg
dec
add
dec
and
je
lcall
xchg
add
mov
popf
add
lcall
jg
cwtl
mov
sbb
sbbl
test
int3
mov
fisubrs
imul
pop
push
repnz
or
mov
std
cs
sbb
mov
je
adc
or
jo
ss
out
adc
inc
lret
mov
jno
jnp
loope
scas
imul
sub
xchg
mov
xchg
cli
pop
fs
in
mov
bnd
add
movsb
pop
xchg
cld
sbb
jge
popa
add
mov
andb
loopne
pop
mov
dec
lahf
xor
adcb
leave
icebp
aam
ja
int3
int
mov
or
ficoms
jl
lcall
pop
jb
in
jmp
dec
jno
repnz
xchg
pop
xchg
pop
aam
lods
outsb
mov
cs
enter
loopne
xchg
sbb
xor
xchg
scas
inc
xchg
xor
adc
sbb
sub
cmp
scas
pop
rcll
popl
daa
imul
xchg
pop
and
dec
adc
movsl
dec
mov
pop
jae
xchg
subl
and
jecxz
in
pop
ficomps
and
adc
mov
mov
icebp
jl
inc
push
imul
sub
pop
cmpsb
inc
ds
mov
es
and
lea
ret
aas
fwait
fs
stos
sbb
insb
push
stos
stos
mov
xor
ljmp
push
or
fists
inc
pop
je
cmpsl
xchg
fbld
jecxz
jb
cmp
lea
mov
loopne
or
jg
cwtl
sub
and
call
push
in
push
sbb
fdivr
add
dec
lea
adc
sub
mov
mov
cltd
jl
fwait
mov
push
std
jge
repnz
mov
cmp
add
jbe
dec
pusha
imul
aam
popf
xchg
pop
add
lds
adc
mov
cmp
ficoml
shr
lahf
push
rcrl
aad
pop
outsb
xchg
test
pushf
lods
fwait
jne
pop
pop
das
dec
testl
cmp
mov
pop
push
adc
adc
push
into
aas
and
es
xchg
daa
inc
or
mov
es
xchg
sbb
jnp,pt
adc
mov
or
pop
mov
nop
fwait
push
push
mov
adc
sahf
adc
loope
xlat
sub
xchg
jge
stc
in
pop
pop
mov
xchg
xor
out
pop
pop
add
fsubp
inc
xchg
xor
mov
and
stos
ret
mov
push
jnp
or
mov
mov
sahf
scas
dec
adc
inc
pop
int3
pop
push
outsl
mov
push
xchg
mov
mov
xor
cmp
lds
xor
int
xor
arpl
jmp
push
pusha
adc
push
dec
or
xchg
push
test
shll
jmp
aam
or
pop
mov
lods
cli
mov
into
pop
loopne
fsubrl
and
adc
jns
mov
out
dec
test
jno
cmc
xchg
int3
lcall
cmpsb
cmc
cmp
cmpsb
mov
xchg
mov
inc
xchg
pop
push
sub
mov
mov
js
jge
dec
pop
imul
shr
mov
dec
and
mov
daa
hlt
dec
rclb
aaa
lahf
test
fstpl
inc
inc
inc
dec
daa
roll
adc
mov
pop
dec
cs
and
ret
ret
js
or
cmp
jge
jb
jbe
fcmovnbe
inc
popf
mov
das
pop
cli
push
fbstp
imul
xchg
xor
and
rol
les
das
xchg
add
incb
movsl
gs
pop
or
push
xchg
xsavec
clc
sub
cmpsl
sbb
xor
rcrl
test
jmp
sub
dec
add
lea
add
addl
arpl
xchg
pushl
fcoms
pop
imul
sbb
fistpll
out
aaa
repz
and
jge
lcall
ljmp
dec
call
sub
rolb
std
in
std
jmp
aas
sub
mov
js
iret
jecxz
lods
inc
scas
inc
nop
fsts
cmpsb
lcall
jecxz
shll
rolb
inc
cmpsl
cmp
les
or
ds
mov
testl
out
or
out
sbb
lahf
decb
js
cmp
jl
push
jno
dec
or
xchg
mov
push
jo
leave
ds
pop
test
mov
cmc
xchg
add
int
rol
xor
push
and
lds
insb
dec
stc
fwait
aaa
fsubr
dec
cmpsl
mov
and
cmp
lds
js
sahf
mov
loopne
aad
es
insl
xchg
int
aas
push
and
insb
cmc
ljmp
mov
test
pusha
push
scas
inc
inc
test
push
mov
pop
adc
lcall
cltd
fucomip
in
xchg
test
and
rcll
jnp
fcoms
inc
shl
dec
bound
mov
mov
lea
push
pusha
fadds
fbld
call
pushf
dec
rcrb
popf
stc
mov
jl
sub
rolb
lcall
jb
bound
aam
idivb
jne
cwtl
decl
cmp
ret
inc
lcall
orl
sti
or
fs
dec
cmp
pushf
cmp
addr16
mov
into
mov
imul
in
inc
in
pop
imul
dec
loop
out
shll
xchg
push
fidivrs
adc
inc
mov
and
lahf
jmp
stc
xchg
cltd
jge
add
scas
sbb
or
stos
cmp
inc
in
jmp
mov
pop
test
add
mov
mov
sub
mov
mov
and
outsb
mov
inc
dec
sbb
inc
lret
push
xchg
mov
out
add
mov
stos
pushf
jnp
sub
xchg
lea
adc
jne
stc
or
dec
jae
inc
sarb
xor
clc
inc
sbb
inc
push
cmp
sar
ljmp
push
into
mov
rcrl
scas
dec
mov
jae
xor
cmc
pop
das
cmp
loopne
loopne
iret
mov
dec
push
cld
rcrl
jns
mov
bnd
lcall
push
rorb
cld
fwait
pop
or
push
dec
lea
hlt
add
mov
jmp
test
sub
adc
dec
cmpsw
inc
mov
push
dec
inc
cmp
hlt
out
movsl
cmc
shr
dec
lods
in
mov
leave
add
xchg
mov
or
arpl
dec
xor
push
sahf
inc
jns
or
or
sub
push
scas
jnp
dec
xor
cmp
lcall
repnz
mov
pop
mov
addl
or
fxch
xor
pusha
jo
and
jl,pt
dec
push
sbb
adc
cmpsb
sub
xchg
push
cli
push
dec
xchg
shrb
aad
imul
xchg
mov
inc
out
cmp
xchg
ljmp
out
jecxz
sbb
and
cmp
sti
repnz
xor
xchg
inc
fsub
and
push
adc
fiaddl
push
dec
in
cmpsb
pop
lea
inc
jae
stos
rorl
xchg
fnsave
jecxz
or
in
shlb
cmp
fdivr
ss
cmp
pop
or
mov
cbtw
lock
stos
cmc
lahf
and
fldcw
int
lcall
popa
rcl
fsubs
insl
dec
dec
jae
sub
popa
push
push
pop
sub
jb
mov
add
push
iret
xchg
pop
mov
loope
push
or
aam
andb
and
aaa
les
or
or
sbb
imul
loope
arpl
adc
leave
into
fwait
lods
jp
inc
push
inc
fsubrs
cli
pop
cmp
sbb
int
mov
or
cmp
push
scas
arpl
out
fs
pop
es
bound
xor
add
testl
fnstcw
cwtl
sub
xor
pop
and
daa
lods
lods
loope
adc
push
lcall
fisubl
and
nop
xlat
jne
fisubrl
nop
add
lcall
xor
out
ja
int
push
cmpsl
loopne
and
outsl
out
enter
iret
push
sub
mov
xor
movb
cmp
sbb
fildl
test
or
adc
mov
shl
mov
sub
xor
mov
or
mov
arpl
mov
sbb
sbb
ds
ror
ljmp
sub
mov
cmpsb
popa
ljmp
pusha
int3
in
push
xchg
mov
fbstp
push
insl
pop
dec
or
dec
es
cmp
push
nop
fbld
pop
nop
enter
xchg
xorb
rcrb
shrb
sbb
xor
fimull
cmp
mov
adc
adc
sahf
loope
stc
popa
ds
aas
or
cmp
xor
mov
sti
mov
mov
adc
daa
movsl
inc
cmp
cmp
fnsave
push
ds
movsl
xor
lods
mov
push
insl
dec
cmp
cmp
inc
cmp
mov
pop
test
sub
lods
and
adc
inc
jl
mov
pop
es
je
cld
pop
mov
fs
nop
out
jmp
and
mov
shrb
push
insb
add
movb
jb
mov
adc
xchg
data16
in
jge
call
sbb
out
and
idiv
mov
cmp
jp
popf
adc
insl
iret
add
scas
jmp
sahf
jle
dec
cltd
cmp
mov
lea
inc
xchg
out
pop
pop
adc
or
daa
lods
jae
ljmp
xor
and
ja
repz
int3
ja
add
dec
mov
in
inc
sub
mov
add
sub
xor
xor
dec
aam
jmp
leave
lods
aad
clc
fs
bound
addl
cltd
xchg
lcall
sbb
adc
xor
pop
inc
mov
sbb
mov
and
push
mov
sbb
lods
sub
lea
inc
vcmpss
rolb
jo
mov
lea
mov
push
fildll
cmp
pop
cmp
ljmp
push
adc
mov
xchg
outsl
lock
and
jge
rcl
sub
lea
sbb
cmp
xor
mov
mov
sarb
aad
fistpll
stos
fisubl
inc
test
popf
fdivs
sbb
cmp
and
push
cmp
fsubrs
mov
cmp
cld
xor
in
ss
adc
inc
add
adc
je
fdivs
xchg
ret
pop
sub
mov
vandnpd
cmp
movsb
enter
jo
push
mov
lcall
cmp
sub
les
in
sbb
aam
addr16
cld
sub
ljmp
mov
clc
inc
mov
cld
push
push
aad
mov
stc
stos
outsb
int3
adc
addb
outsl
sub
rorb
xor
jmp
push
ljmp
jp
jae
cmc
movsl
inc
fcomps
and
or
xor
lret
movsl
arpl
mov
movsb
jbe
flds
mov
dec
sbbl
scas
loopne
adc
xchg
mov
mov
fnstcw
xchg
xchg
adc
fs
cmpsb
add
inc
out
cmp
dec
xor
imul
out
hlt
nop
mov
jns
shrb
mov
aad
popf
mov
cmp
xchg
repz
inc
cmp
mov
stos
stos
shll
push
push
sub
push
and
xor
jmp
sub
jnp
popa
mov
pop
jbe
mov
jmp
subl
rcl
ljmp
nop
addl
inc
or
rolb
repnz
ljmp
pop
jo
stc
inc
js
jmp
mov
insb
mov
shll
inc
pop
sahf
lods
cmc
jp
fistpl
mov
add
ror
xor
mov
sub
dec
jge
sub
nop
jl
pushf
ja
rcrb
mull
movsb
aam
shll
or
aad
mov
add
jge
and
lods
and
out
in
nop
stos
or
lods
jae
pop
into
cwtl
xorps
pushf
lea
and
imul
comiss
xchg
mov
shll
idivb
cmpsl
xchg
mov
incb
adcl
and
fwait
popf
sti
push
lcall
popf
fisubrl
sti
and
stc
leave
xlat
lret
mov
dec
roll
out
bound
data16
lock
adc
pop
or
inc
out
int
mov
or
or
inc
dec
test
sub
repz
inc
pop
movsb
add
sub
push
mov
lcall
loopne
cltd
daa
sub
and
inc
in
xchg
popa
jmp
pop
and
xchg
scas
clc
fwait
and
inc
mov
popa
pop
movsb
sbb
add
int
push
arpl
push
push
xor
cmp
les
popa
mov
or
pop
iret
mov
stos
ret
mov
imul
movl
inc
cmpsl
push
lock
lods
jmp
push
fidivs
xor
push
xor
push
icebp
add
push
sub
in
xchg
loop
in
sub
sahf
int
add
xchg
test
dec
and
push
lods
add
xor
cmpsl
add
mov
in
cmc
arpl
das
test
and
mov
outsl
insl
aam
ficoms
push
bound
loope
push
loope
add
fsub
jge
cmpsb
xchg
pmaxub
dec
add
idiv
test
ljmp
int
jns
sbb
adcb
imul
lock
mov
cmp
ja
out
aad
inc
ljmp
rol
mov
push
mov
xchg
pushf
push
enter
fwait
push
xchg
insl
mov
dec
push
push
xor
mov
sbb
adc
mov
shll
cmpl
xchg
and
sub
jmp
pop
loop
add
lods
insl
mov
and
sti
mov
push
push
push
imul
stos
nop
push
lea
test
push
xchg
out
or
inc
insl
jle
adc
jb
mov
movsb
movsl
orl
in
push
and
mov
mov
gs
push
je
in
push
lea
sub
and
mov
jl
ja
dec
mov
sub
or
movsb
dec
lret
inc
stc
cltd
and
fildll
mov
ja
xor
jle
xlat
arpl
inc
sub
lret
mov
xorl
cltd
inc
adc
in
test
sti
lahf
pop
and
fbld
jle
fisttpll
sbb
or
fistps
add
sbb
inc
cmp
jbe
lret
push
psrlq
xchg
sbb
inc
std
nop
shll
shlb
push
inc
cltd
add
mov
fcompl
jmp
scas
sub
lds
je
adc
and
and
pop
push
cmp
je
ret
cmc
movsl
add
fsub
lret
xchg
sub
scas
in
mov
or
or
pop
push
lea
pop
insl
sub
jo
jmp
sub
mov
iret
nop
add
lods
sub
push
dec
dec
mov
aad
ret
sbb
inc
push
jp
lods
cmp
adc
adc
xchg
out
pop
jno
mov
add
cmpl
lods
and
push
or
dec
repz
mov
xchg
dec
in
outsl
daa
cmp
xchg
push
jg
xor
lods
mov
mov
mov
mov
outsb
inc
cmpsl
hlt
sub
popf
adc
mov
gs
ret
sbb
int3
mov
icebp
ret
shlb
adc
test
inc
orl
test
je
xchg
mov
xchg
lock
jmp
loop
mov
or
push
xor
shll
jo
sub
mov
add
gs
add
jmp
dec
push
idivb
sbb
lahf
scas
je
aas
add
inc
mov
fisubl
rcrb
arpl
dec
sub
xchg
sbb
ret
fsubl
xor
filds
cmpsl
jp
lcall
push
testl
enter
popa
xchg
xchg
mov
enter
adc
rcll
lahf
pop
mov
outsl
dec
pop
cmpsb
test
mov
xor
fimull
jb
or
loop
adc
stos
pushf
push
jno
mov
inc
add
scas
testl
xor
stc
das
cwtl
in
ret
lret
test
mov
inc
je
inc
push
sbb
fisubs
mov
test
dec
add
cmp
sub
cmpsl
repz
cwtl
hlt
fsubl
out
mov
scas
sbbl
push
push
insl
inc
mov
xchg
xorl
popf
insb
lret
sahf
cmp
movsb
jge
jb
addr16
filds
mov
add
in
mov
mov
mov
jbe
xor
sbb
dec
lock
leave
icebp
test
pop
push
xchg
inc
ss
cmp
int
pop
cmc
adc
mov
or
cld
and
in
mov
jp
aas
jg
mov
scas
xor
mov
fidivrl
shrb
inc
clc
fmulp
fadd
push
xchg
sbb
fimull
dec
pop
xlat
jne
ret
inc
sub
dec
ja
xor
and
lock
out
and
mov
push
cmpsb
jae
xchg
adc
iret
in
rcrb
inc
add
and
insb
cmp
cmp
xorl
push
dec
fabs
mov
ss
cli
les
cmp
adc
jmp
repnz
popa
sub
xchg
rol
or
pop
xchg
mov
add
fmuls
sbbb
mov
into
adc
fcompl
daa
mov
cmc
mov
stos
mov
in
sub
xor
pop
xchg
mov
xor
sub
cmpsb
pop
or
sbb
xor
repz
hlt
popf
scas
mov
addr16
xor
and
dec
xor
call
adc
pop
xor
lds
lahf
pop
ds
inc
mov
jecxz
pop
outsb
test
and
cmp
movsl
out
lods
ret
xchg
hlt
or
pop
lods
cld
rolb
nop
inc
mov
movsb
jo
mov
mov
push
repz
inc
mov
rclb
pop
or
add
loope
jmp
fbstp
ret
dec
aaa
out
ret
js
daa
add
inc
aam
stos
and
xor
xor
jmp
push
xchg
fsubl
call
mov
mov
mov
iret
sbb
dec
inc
push
sahf
das
shll
arpl
inc
cmp
jb
inc
xchg
bound
fsubs
scas
imul
fiadds
mov
andb
repnz
lods
add
pop
iret
test
sbb
leave
jmp
inc
cmp
popf
sti
push
xchg
inc
lea
cmp
iret
add
mov
or
rcr
movsl
scas
add
in
pop
popa
out
mov
pop
pop
push
jp
divl
dec
iret
lods
sub
pop
pop
rcl
pop
testb
icebp
lods
add
faddl
flds
and
call
mov
lock
addb
sbb
call
sahf
in
out
aam
mov
ret
jle
xlat
cmpsb
xor
add
adc
pop
loope
mov
mov
sti
shl
jg
add
lods
xorb
pusha
mov
add
cmp
cmp
or
andb
jbe
nop
in
push
mov
xchg
repnz
rclb
push
push
or
push
dec
lret
jns
cwtl
jne
lods
xchg
push
ja
dec
or
into
xchg
fstl
mov
lahf
repz
in
push
jnp
in
les
push
cmpb
addr16
jb
dec
int3
in
insl
xchg
and
movsl
into
push
repz
mov
push
aam
sbb
jg
sub
xchg
pop
push
jl
dec
sbb
mov
addr16
xor
jne
fwait
sbb
mov
in
jg
addr16
mov
sbb
cmp
mov
sbb
xor
pop
stos
pop
movsl
and
cwtl
mov
dec
sbbb
enter
lea
and
mov
xor
int
call
fnstcw
sub
push
xor
sbb
sti
sub
mov
stc
pop
mov
js
and
movsl
inc
sub
ret
loop
sub
cmpsb
ljmp
in
lods
xchg
cmp
inc
xchg
iret
mov
scas
inc
cmpsl
push
test
xor
jge
mov
push
aad
scas
xchg
jae
test
mov
dec
ret
mov
mov
pop
cmp
sbb
lods
test
lahf
insl
repz
faddp
fsubs
sub
add
addr16
or
dec
mov
xchg
loope
call
xchg
jbe
out
xor
sub
sti
add
mov
mov
jmp
pop
subb
sbb
cld
ret
push
cwtl
popa
jae
fwait
sahf
shl
mov
or
div
and
inc
xchg
or
jb
xlat
xchg
enter
and
xchg
aam
or
enter
push
and
add
and
sbb
sub
rorl
jle
sti
cwtl
or
sti
adc
pop
mov
ret
adc
push
lea
cmpsb
dec
je
sub
sbb
sbb
int
lret
or
xor
sahf
ja
test
add
jmp
addr16
lods
repnz
das
cmp
icebp
cmc
in
dec
ss
cmovb
inc
cwtl
jmp
add
mov
pushf
icebp
out
xor
call
iret
out
mov
add
cmpsb
lret
jbe
scas
int
nop
ss
xor
aaa
sub
sahf
enter
aas
jno
repz
icebp
jmp
sub
movsl
pop
aaa
lret
je
testl
enter
mov
cli
fucom
rcll
ss
push
inc
inc
lret
popf
inc
xor
clc
outsl
fdivs
out
cmc
inc
dec
iret
jmp
std
dec
mov
aaa
mov
dec
scas
lret
insl
scas
cmp
jle
and
adc
and
lahf
cmc
icebp
dec
repz
push
mov
lods
addr16
int
js
jmp
ret
xor
jg
je
xchg
sub
push
mov
mov
stos
mov
cwtl
sbb
jecxz
nop
inc
mov
add
leave
add
outsl
enter
sbb
xchg
loop
repz
sahf
shlb
dec
xchg
push
push
out
idivb
fmulp
sbb
sbb
cmovns
cmpsb
xchg
test
sub
lea
in
call
out
sbb
push
mov
fisttpl
les
sub
cmpsl
pop
adc
mov
fdivrs
test
mov
pop
and
int
mov
mov
decl
loopne
sub
jle
ret
addl
mov
lods
daa
cmpsl
or
insl
dec
mov
or
lds
je
sbb
pop
mov
insl
mov
or
loope
push
adcl
cmp
addb
jmp
mov
inc
dec
das
mov
jae
dec
and
iret
movsl
mov
std
push
lods
pop
icebp
popf
fmul
sar
loopne
mov
orb
fstpt
mov
aas
cmp
enter
fwait
ljmp
pop
popf
and
pop
shlb
out
push
cmp
movsl
cmp
shlb
divb
xorb
aas
and
xor
sbb
mov
pop
in
xor
or
scas
mov
andb
xor
lds
xor
call
icebp
sub
push
add
xor
push
mov
mov
and
sub
cmp
test
pop
arpl
or
pop
cmp
push
push
push
std
xchg
fsts
cmpb
cwtl
pop
hlt
inc
xchg
jns
jno
fcmovb
fidivrs
add
inc
xchg
arpl
and
inc
in
push
or
pusha
and
arpl
xor
sbb
inc
add
cmp
mov
mov
lcall
xchg
movsl
ficomps
clc
pop
jge
mov
pusha
in
push
imul
fsubs
jle
sbb
and
test
sub
testb
inc
sbb
lret
outsb
rep
test
inc
push
pop
or
cmp
push
adc
xchg
js,pn
bound
insb
adc
addb
pop
pop
jl
adc
jge
mov
dec
jae
pop
clc
pop
hlt
or
or
and
sub
and
iret
push
lds
pop
hlt
fwait
cli
xorb
mov
movsl
pop
int3
das
jmp
lock
repnz
ds
aad
insl
fcomp
sti
xchg
cmc
push
aaa
addr16
xor
push
sbb
and
dec
xor
in
imul
inc
in
push
out
icebp
jle
adc
js
dec
lcall
sar
imul
cli
mov
test
xor
xor
or
mov
mov
test
mov
popf
sti
pushf
push
add
cmp
pop
xchg
sbb
addl
aas
xchg
push
ljmp
adc
sub
mov
pop
ds
sub
dec
mov
lahf
fmuls
cmp
mov
jp
inc
xlat
jo
aam
aam
inc
test
pop
inc
and
inc
xor
mov
push
imul
mov
pop
mov
or
pop
hlt
jne
push
data16
js
lods
sbb
out
xorb
sbb
addb
cmp
fimull
push
aam
jne
mov
xchg
mov
mov
adc
jl
daa
xchg
or
dec
cmpsb
add
xchg
adc
shrb
add
and
mov
sbb
data16
dec
lret
pushf
pusha
cmp
push
push
mov
push
fnstcw
push
sub
leave
xchg
push
pop
mov
mov
mov
aam
mov
xchg
mov
push
daa
dec
in
inc
test
jae
ret
xor
fildl
lock
in
inc
pop
push
and
pop
pop
repz
pop
mov
mov
pop
pop
fstp
and
cmp
push
imul
sti
outsb
sbb
out
and
repnz
jg
jne
inc
call
cld
mov
xorb
fistps
sbb
repz
sub
jbe
cld
ret
cmp
cmpsb
scas
inc
pusha
xchg
jo
out
adc
stc
fstpt
cld
out
cmpsb
js
pop
stos
inc
pop
pop
dec
pop
mov
sbb
andl
movsb
dec
repnz
pop
les
mov
dec
fisubrs
sub
push
dec
icebp
int3
adc
scas
es
or
cli
fs
and
mov
pop
nop
cld
mov
adc
cmp
pop
nop
dec
inc
sbb
outsl
pop
loop
sub
xor
inc
xor
jne
xor
add
dec
shrl
sahf
xchg
cwtl
subl
mov
jo
cmp
test
in
rolb
sub
gs
roll
mov
es
mov
and
sub
shl
fdivs
sbb
push
call
into
fidivs
lea
xchg
aaa
push
out
lods
xchg
add
mov
outsl
imul
sbb
mov
jae
dec
in
movl
xor
sub
sbb
pop
jne
fcomi
stos
imul
lret
cmp
mov
and
add
mov
sbb
xor
imul
inc
mov
mov
push
pmaxub
pusha
fs
in
inc
clc
xor
iret
popa
mov
dec
mov
stos
call
add
in
pop
sahf
notl
dec
fsubrp
xchg
shll
test
add
je
bound
mov
xchg
mov
mov
aad
jne
aaa
mov
sahf
or
mov
jle
insb
lahf
dec
add
mov
std
imul
test
mov
add
push
stos
cwtl
push
mov
cmp
xor
aas
mov
mov
pop
stc
in
sbb
add
dec
in
inc
sarl
rcr
ss
sbb
or
ret
and
push
push
inc
mov
push
mov
sbb
out
cld
inc
ret
sar
mov
fcmovnu
jge
or
xor
fcompl
cli
mov
scas
mov
xchg
fmuls
mov
add
jmp
ud0
out
testb
push
inc
adc
jnp
inc
or
rol
insl
sbb
pop
inc
popf
sti
and
cmp
shrb
jae
push
sub
dec
scas
dec
adc
jae
out
sbb
sub
out
xchg
inc
adc
dec
pop
add
pop
sbb
cmp
mov
mov
dec
test
repnz
out
cld
jae
and
in
adc
mov
mov
jmp
aaa
cmp
dec
pop
cmp
fwait
leave
xchg
mov
jbe
xchg
daa
mov
sahf
sbb
inc
jmp
cmpb
sbb
inc
jmp
lock
cmp
inc
pop
jge
pop
sbb
xor
inc
fidivl
insb
push
scas
mov
pop
mov
adc
and
inc
sub
aaa
dec
cmp
and
or
adc
add
aaa
cmp
adc
xchg
mov
jge
sbb
int3
iret
notb
and
dec
call
dec
xchg
insb
sub
add
repz
sbb
std
cmp
pusha
xor
add
bound
bound
shrb
or
les
cmpl
daa
sub
mov
call
je
jb
push
sub
inc
push
or
sbbb
mov
scas
add
xchg
push
mov
or
xchg
data16
mov
mov
adc
and
adc
adc
shlb
in
xor
push
les
es
popa
and
sbb
call
outsb
inc
lods
mov
jl
xchg
mov
mov
adc
push
pusha
aam
fisubs
hlt
ds
mov
or
push
mov
push
test
and
gs
sub
jbe
fwait
cmpl
and
xchg
iret
sar
mov
lock
rorb
xor
mov
or
jle
cld
sub
dec
mov
adc
inc
push
inc
lcall
into
imul
sbb
xchg
sbb
loope
es
mov
or
clc
aas
idivl
ds
pusha
arpl
cmp
clc
dec
rorl
int3
std
and
pop
pop
inc
adc
test
sarb
pop
rcrl
sbb
sbb
cmc
mov
mov
fisubl
test
add
pop
or
mov
icebp
and
sub
pop
lea
mov
mov
mov
jno
and
pusha
push
mov
pop
mov
adc
pop
mov
sahf
mov
frstor
sahf
iret
and
pop
psubusw
dec
pusha
ret
or
sahf
dec
rcl
aas
push
dec
scas
repz
inc
mov
pusha
inc
out
pusha
jge
push
mov
push
std
les
icebp
cmp
add
sbb
sahf
and
xor
shlb
dec
and
mov
fstp
cmpsb
push
mov
inc
in
push
icebp
pop
mov
les
lods
pop
push
shrl
out
daa
addb
jo
jae
iret
jge
sbb
pop
es
push
adc
icebp
jecxz
ljmp
mov
xchg
xchg
push
push
xor
sbbb
push
ret
das
mov
add
xchg
jecxz
fsub
jge
fidivrs
fidivl
push
mov
sbb
test
inc
jge
out
mov
out
nop
xor
insl
ds
cli
sub
das
sbb
xchg
testb
repnz
fistpll
sbb
daa
mov
xchg
mov
dec
es
mov
stos
sbb
xchg
mov
pop
mov
jno
mov
push
xor
lods
and
daa
mov
ljmp
mov
call
push
pop
push
pop
sbb
hlt
addr16
xchg
cmpb
in
mov
xchg
lds
mov
jne
adc
int
int
pop
xor
hlt
push
pop
in
xor
in
mov
xchg
or
jg
add
js
jp
xchg
dec
dec
inc
dec
mov
xor
inc
movsb
xor
pop
sbbb
cmp
add
out
aam
mov
loop
cmp
lret
push
jge
je
ja
fucomi
pop
jbe
push
mov
cld
jecxz
cmp
jnp
ret
xor
dec
icebp
add
out
mov
pop
jno
and
jp
push
push
js
mov
lret
xchg
fwait
mov
or
lcall
rorl
mov
outsl
fsubp
mov
pop
cld
sbb
stos
shll
sbb
lret
insl
out
out
mov
jecxz
fwait
pop
orb
lods
ja
jno
stos
pop
lea
inc
lret
adc
jge
flds
addr16
inc
and
into
insb
cmp
or
mov
in
cmpsb
loope
cmpsb
sbb
mov
dec
push
bound
lcall
jae
cld
cmp
ret
xchg
sbbb
mov
je
push
push
clc
push
push
sbb
js
icebp
adc
lock
lcall
pop
xchg
fsubp
jmp
or
jnp
aas
mov
jecxz
fucom
adc
sahf
data16
dec
and
adc
inc
outsb
ds
mov
or
adc
clc
xchg
scas
mov
andl
sub
dec
adc
mov
sahf
divb
lock
cmpsl
jle
shll
inc
ljmp
movsb
cmpsl
dec
ds
cmp
lods
xchg
mov
aam
ret
inc
test
lods
jbe
test
inc
mov
outsl
in
fcom
sarl
lods
clc
cmp
sbb
mov
int
sbb
pushf
mov
jmp
mov
lock
and
xchg
lcall
je
incl
and
ret
in
aas
fcoms
inc
xchg
sub
adc
and
pop
mov
add
sub
push
aas
mov
std
pop
jbe
push
pop
fs
mov
adc
add
lret
dec
cmpsl
pop
stos
popf
lods
ret
enter
mov
xor
fstpl
dec
mov
sbb
ret
push
fs
push
lods
fimull
fisttpl
das
test
fldcw
lcall
sub
sbb
pushf
push
iret
jne
test
mov
js
ret
sub
in
jmp
xor
sbb
sbb
int3
add
pop
mov
imul
sub
inc
test
cmp
xchg
inc
lcall
cld
clc
push
mov
pop
and
aas
sub
shll
cmpsb
call
das
inc
inc
cmp
imul
dec
inc
add
movl
push
pop
popf
insb
aaa
inc
or
dec
pop
je
pop
mov
push
jb
sbb
stos
call
stos
out
ffree
loope
pop
popa
add
jnp
dec
pushf
pop
popa
stos
xor
or
ficompl
xchg
mov
movb
or
cmp
jmp
pop
insb
dec
and
or
imul
fcmovne
cmc
jg
ret
xchg
pop
ljmp
dec
adcb
mov
pop
or
les
add
cmp
in
rcrl
repz
adc
fimuls
xor
ret
xor
mov
ret
insl
ljmp
pop
pop
insl
push
or
add
jge
in
repz
in
jl
mov
sarb
push
adc
mov
push
cwtd
cmp
in
cmp
mov
test
cs
pop
std
aad
mov
lcall
sbbl
pop
adc
popa
and
and
gs
mov
scas
je
fcompl
sub
enter
sbb
subl
inc
gs
jbe
sub
push
cld
mov
and
insl
pop
jp
arpl
fldt
mov
shrb
ret
fidivs
jg
inc
pop
divl
and
loop
les
test
in
jge
dec
scas
and
in
test
and
mov
sbb
sbb
mov
and
in
dec
ja
mov
aaa
or
mov
dec
or
test
cli
lret
push
adcl
xchg
pop
pusha
les
imul
or
push
popa
out
or
bnd
lea
icebp
adc
mov
mov
push
or
test
cmp
fisubrl
aaa
xchg
int
insl
out
lcall
xchg
cld
sbb
shll
dec
mov
ret
dec
out
insl
stos
inc
jbe
rorb
xchg
cmc
jl
and
mov
add
mov
add
sbb
mov
mov
mov
pop
sar
dec
mov
pushf
xor
cmp
jo
nop
xor
popf
dec
mov
je
mov
stc
ret
in
repz
or
sub
loop
and
mov
push
ss
mov
lahf
stos
sub
mov
pusha
xchg
rclb
xor
sub
and
mov
lahf
jg
adc
sbb
je
xchg
cwtl
js
adc
pop
call
jo
mov
in
mov
inc
sub
cmpsb
jmp
fadds
dec
rol
push
loop
sub
rorb
adc
xchg
xorb
mov
or
adc
push
jno
or
mov
aam
aad
fildll
stos
push
jecxz
jo
sub
or
mov
add
jnp
cmp
dec
and
sub
nop
jecxz
dec
fnstenv
cltd
fsubrl
out
add
cmp
push
sti
add
sbb
add
aaa
lds
mov
repz
inc
mov
inc
mov
lret
jmp
inc
int3
mov
data16
sahf
or
outsb
imul
inc
push
in
cmp
shlb
sbb
scas
test
shlb
sti
gs
jmp
and
mov
pusha
add
xor
dec
loop
fmuls
fwait
ja
loope
in
cli
sbb
jl
hlt
pop
scas
shr
cmp
jmp
sub
rcrl
sub
jp
xchg
popa
cmpsl
inc
stos
pop
scas
js
test
cmp
fcomps
jp
xor
push
mov
icebp
in
xchg
jbe
pminub
add
lock
ret
xchg
jmp
sub
mov
outsl
outsl
cmpsl
sub
out
cmp
jle
inc
outsl
mov
mov
inc
cld
mov
mov
rcrb
fsubrs
cwtl
mov
mov
out
fdivs
sub
jge
repnz
idiv
clc
adc
xlat
cmp
dec
lret
push
xor
fwait
cmp
push
dec
nop
sub
xlat
xchg
aaa
icebp
mov
aaa
and
or
cmp
mov
jge
xchg
or
adc
imul
aaa
mov
push
mov
pop
test
into
sbb
xlat
js
push
inc
mov
inc
aaa
je
adc
idiv
sub
cmpb
lea
pop
xlat
dec
out
mov
test
and
popa
addr16
xchg
or
popa
aas
out
clc
aas
pop
popf
cmp
sub
cwtl
cmpb
jmp
and
sub
mov
mov
imul
jne
js
hlt
loope
inc
adc
imul
or
fcmove
imul
pop
cmc
adc
shrl
xchg
mov
mov
out
inc
je
xchg
adc
in
sub
mov
inc
sbb
mov
ja
adc
nop
sub
movsl
adc
sbb
sbb
sarb
mov
push
push
jns
jae
jmp
orl
into
mov
test
jbe
adc
cld
outsl
add
sub
arpl
mov
dec
rcll
mov
mov
mov
fcompl
adc
orb
adc
popf
cmp
mov
nop
pop
xor
es
inc
cs
push
xchg
fistl
andb
jle
jge
jge
mov
jl
loopne
repz
lock
icebp
pusha
ret
xlat
movb
sub
inc
shll
xchg
xor
xchg
rolb
add
xchg
subb
pop
mov
ja
xchg
bound
repz
call
aaa
sub
leave
inc
dec
fadds
sbb
orl
or
inc
lret
stos
xor
neg
ss
std
bound
lea
sub
sahf
pop
push
cmp
int
je
push
jns
cltd
idiv
shll
inc
hlt
add
push
cld
pop
mov
sub
inc
xlat
inc
insl
sub
lods
mov
lds
je
insl
add
fistps
leave
in
fwait
adc
and
inc
shr
enter
stos
sub
scas
or
inc
mov
mov
mov
daa
jecxz
fcmovbe
inc
out
inc
pusha
xlat
call
insb
push
in
sub
adc
cmp
fldt
leave
jnp
or
clc
mov
ljmp
fcoms
pop
inc
imul
ss
push
cmovge
jb
adc
jecxz
jp
push
xchg
or
sub
mov
pop
and
push
movsb
rcl
mov
push
jmp
push
push
stos
pop
stos
pop
xor
filds
aas
jbe
push
adc
push
jmp
jo
aaa
sub
add
inc
push
cli
jnp
or
lods
test
negl
mov
push
push
dec
mov
enter
imul
fmuls
daa
popf
push
adc
jnp
popa
and
push
js
popf
lea
jns
mov
mov
cltd
mov
sahf
adc
popf
cmp
mov
ret
mov
push
sbb
dec
loope
sbb
outsl
or
in
dec
in
cmp
shl
in
sahf
or
pusha
outsl
push
inc
adc
sbb
lods
add
jcxz
hlt
mov
lahf
jbe
inc
push
xor
dec
aaa
lcall
add
out
jg
jl
mov
repz
insl
mov
push
or
dec
dec
cmp
int3
cld
test
cli
decl
test
adc
insl
push
sbb
faddp
add
mov
cmp
mov
cmpsw
xchg
mov
add
imul
mov
cmpsl
or
sbb
aaa
pop
inc
adc
shl
mov
movsl
mov
dec
clc
ljmp
xor
bound
xor
xor
jl
push
push
test
mov
sahf
inc
sub
cmp
dec
or
push
dec
inc
lds
xor
pop
and
rcl
cmp
inc
sub
loope
sub
push
test
xchg
pop
sub
lret
lret
inc
test
and
xor
cmp
mov
adc
sbb
popa
push
pop
mov
and
daa
scas
aam
mov
sub
je
cmc
and
lds
mov
stos
sub
shlb
mov
jle
inc
ja
mov
pop
xchg
inc
xor
in
sub
roll
sub
hlt
loop
jbe
outsb
out
insb
mov
mov
xor
aas
test
int3
rorl
cwtl
outsl
add
cli
data16
lds
lret
ss
gs
arpl
into
mov
add
dec
pop
fdivrp
adc
inc
call
sbb
push
jmp
push
rcrb
test
adc
sub
test
push
aam
jns
aas
iret
inc
pop
xor
push
ljmp
test
out
cmp
or
dec
and
push
test
dec
lahf
daa
push
divb
fs
sbbl
int3
ret
sub
cmp
push
in
repz
popa
lea
push
out
test
sbb
rorb
mov
xchg
in
mov
icebp
jge
mov
mov
push
sub
xor
fptan
push
repnz
arpl
adc
jecxz
xchg
std
pushf
gs
dec
insl
pushf
lret
cmpl
enter
adc
pop
mulb
mov
jmp
movsb
cmc
lahf
jb
jae
or
xchg
push
sbb
cmp
out
outsl
xchg
dec
pop
push
iret
dec
pushf
je
pop
sub
cwtl
sbb
sub
in
cmpsb
push
sub
loope
mov
sub
scas
rcrb
loop
xor
cltd
mov
mov
jbe
test
inc
cs
push
fcom
add
sub
outsl
lods
dec
arpl
imul
pop
inc
dec
or
cmp
test
add
adc
jno
es
xor
mov
mov
mov
outsl
or
push
aad
push
mov
mov
shll
lret
movsl
or
movsb
cmp
scas
ret
sub
and
push
ja
adc
push
mov
xor
gs
xchg
clc
sahf
push
xor
xor
push
mov
outsl
mov
rorb
add
sub
push
fwait
xor
sbb
add
jne
cmp
push
mov
adc
inc
push
mov
xchg
orb
mov
dec
add
fs
repz
test
dec
xchg
in
pop
and
shrl
mov
adc
inc
xchg
shlb
imulb
xchg
inc
outsl
mov
daa
out
nop
inc
or
std
jl
arpl
inc
adc
xchg
dec
adc
je
scas
cwtl
stos
mov
xlat
adc
movsl
sbb
out
call
fsubrp
cmp
popf
or
xor
mov
out
aas
pop
mov
sahf
in
push
jl
jb
mov
inc
cmp
xor
or
pop
pushf
into
cld
or
mov
addr16
icebp
xchg
jno
in
xor
mov
fsubs
cs
mov
data16
jb
scas
out
mov
sbbb
out
mull
in
test
pop
cld
mov
lods
cld
pushf
push
aaa
sub
dec
std
inc
pop
dec
dec
ret
xor
enter
xchg
dec
stos
cmp
arpl
xchg
iret
cmp
sub
lcall
lods
adc
aam
mov
xchg
mov
sbbb
mov
mov
js
adc
in
jb
subb
aam
fcompl
ja
sbb
test
ljmp
dec
pop
hlt
push
or
push
xorb
sub
xchg
pop
jge
cmp
mov
sbb
lret
icebp
int3
sbb
mov
mov
cmp
jns
push
fwait
ss
mov
popf
mov
adc
or
lret
test
ror
scas
mov
outsb
dec
clc
lret
pop
inc
sbb
shrl
push
movsl
rcl
dec
lock
ret
push
mov
cli
cmp
imul
push
or
outsl
cmp
mov
add
jle
mov
adc
sbb
dec
test
xorb
sbb
imul
mov
in
pop
xchg
aaa
clc
pop
ds
pop
sahf
sbb
dec
int
mov
lea
es
add
push
into
adc
pop
ret
aad
cmc
xchg
clc
imul
fs
adc
mov
loope
sar
repz
iret
adcl
xor
std
cmp
jbe
adc
adc
ja
sub
ffree
das
sbb
mov
push
stos
pop
testb
xchg
pop
cmp
jecxz
pop
andl
insl
jmp
mov
jl
hlt
jno
mov
mov
out
sbb
les
jnp
xchg
outsl
jecxz
je
icebp
fisubrl
test
das
jno
scas
push
or
addb
call
outsl
test
pop
lods
loop
scas
adc
jo
dec
call
jno
push
push
ljmp
sbb
aam
dec
and
aad
pop
adcl
das
pop
mov
iret
or
and
mov
pop
sbb
mov
cmp
out
dec
in
pop
movsl
loope
push
lods
adc
add
mov
stc
int
sti
mov
adc
mov
sbb
leave
rcpps
and
mov
imul
insb
mov
sbb
jne
adc
fildl
push
push
ret
ror
pushw
pop
cmp
leave
jmp
inc
repnz
jmp
cmp
int3
clc
lods
add
push
push
sti
pusha
aas
inc
andb
xchg
mov
pop
es
adcl
test
clc
jb
cld
jl
mov
lods
adc
lea
imul
add
dec
ds
outsb
incb
stos
sbb
outsb
mov
xor
test
push
dec
jl
cmpsl
xchg
in
inc
fcmovbe
stos
lret
in
jno
mov
sbb
stc
iret
dec
sub
cltd
push
imul
movsb
sahf
and
mov
mov
pop
or
or
sbb
pop
jbe
or
xchg
jle
in
popf
sbb
scas
addr16
or
inc
imul
out
lret
fbstp
dec
mov
dec
push
adc
mov
mov
mov
fidivrs
cmpsb
popf
mov
cmpsb
sub
mov
fwait
mov
mov
fidivl
or
cld
sbb
scas
adc
pop
popa
lds
inc
mov
shrb
cmp
icebp
lcall
in
jmp
and
in
mov
jge
push
sub
push
xchg
mov
xchg
rcll
pop
sahf
inc
daa
lea
popf
xchg
movsb
sub
or
faddl
cmpsb
lock
in
pop
inc
fcoml
mov
data16
mov
add
push
in
sbb
sub
cmp
inc
cltd
adc
mov
iret
cmp
lock
dec
add
stos
jne
fs
popf
cs
push
mov
lea
push
pop
iret
insb
push
jns
xor
push
adc
add
movsb
lahf
mov
sti
sbb
jmp
ds
push
les
dec
or
popf
push
inc
push
fnstenv
cmp
inc
adc
incb
fldenv
leave
push
add
lods
out
in
popf
dec
adc
push
in
adc
lods
adc
mov
pushf
mov
xchg
call
ret
test
test
adc
movsl
mov
lahf
repz
push
pop
xchg
mov
pop
les
jae
mov
fstps
fsubrs
xor
sub
pusha
pop
scas
nop
sbb
mov
sub
pusha
mov
ret
pop
and
jne
sahf
pop
adc
iret
push
mov
stos
push
mov
dec
mov
or
mov
jecxz
mov
add
push
push
ficoms
jecxz
push
jb
mov
xlat
popf
mov
inc
movsb
xor
xchg
clc
sbb
jns
dec
xlat
imul
sbb
stos
cmc
or
or
sub
int3
push
enter
out
nop
or
pop
cmp
cltd
fdivrp
das
int
repz
test
es
xor
sub
mov
add
insl
add
inc
vcvttps2dq
push
mov
insb
call
mov
scas
ror
push
xchg
cwtl
xor
jo
out
mov
pop
or
sub
aas
push
pop
mov
inc
add
movsb
sub
andl
xor
int
test
stc
ljmp
aad
inc
inc
ret
das
cmpb
inc
test
loopne
daa
cld
jle
in
sbb
mov
xor
xchg
mov
lahf
mov
sub
in
data16
sbb
insb
xchg
lock
dec
or
test
fwait
xchg
das
cltd
or
sbb
aad
insb
test
or
lods
loop
jmp
mov
jo
mov
and
xchg
loopne
stos
popf
jge
dec
int
shl
lods
mov
lock
inc
pushf
mov
pop
lret
add
rclb
inc
inc
mov
push
jae
loop
jg
int
add
in
push
fs
pop
sahf
push
jle
sbb
popa
push
call
fildll
push
pop
scas
add
insl
sti
jecxz
insl
xchg
rol
aam
mov
add
dec
mov
cltd
jne
mov
scas
fildll
rcll
cli
test
lds
sbb
les
aam
add
and
xlat
repnz
insl
add
repnz
inc
jne
xor
jnp
inc
rorb
sbb
leave
sbb
inc
orb
call
rolb
pusha
jmp
mov
aam
sub
and
cli
and
sbb
mov
jns
je
inc
mov
popf
add
pusha
sahf
mov
scas
jecxz
pop
push
mov
scas
outsl
pop
mov
sbb
and
lret
shll
rcll
cld
int
scas
mov
test
sarb
or
js
ds
jl
xchg
jle
repz
addl
mov
fwait
inc
sahf
jmp
push
jno
jg
sti
adc
dec
cmp
mov
pop
cs
popf
xchg
arpl
mov
and
lret
ss
push
dec
jle
outsb
dec
pusha
jb
jne
and
cmpsl
das
repz
xor
mov
mov
pushf
cli
aad
std
jmp
fwait
sti
ret
adc
mov
fistpl
inc
cltd
insb
cmp
jl
mov
sub
cmp
cmp
ret
and
mov
inc
jbe
repnz
jo
sub
scas
push
lea
sub
sbb
fmuls
jae
call
stos
fwait
sub
in
mov
pop
into
test
inc
jle
mov
fwait
mov
lahf
cmp
fildll
sub
inc
jl
xchg
push
add
into
sbb
stos
orb
push
in
lods
outsl
dec
clc
and
dec
pop
popf
fidivrs
pop
leave
imull
cmp
inc
out
shrl
sbb
dec
test
adc
xchg
hlt
inc
fcmovne
jnp
mov
scas
push
or
adc
movsb
sbb
leave
mov
dec
adc
xlat
cmp
leave
lret
and
orl
out
cmp
push
fdiv
push
push
aad
lods
ret
push
jecxz
je
imul
xchg
cmp
cmp
add
inc
sub
call
jb
loope
insl
lods
push
js
loop
sbb
mov
or
icebp
mov
cmp
and
shll
add
mulb
cmp
xchg
hlt
adc
fadds
movsl
sti
add
cmp
push
sub
adc
cmpsb
mov
xchg
cmpsb
orb
lcall
push
sbb
insb
mov
mov
sbb
lods
adc
xchg
popf
divb
popf
or
dec
pop
pop
dec
call
ffreep
in
enter
stos
lea
pop
clc
jae
dec
cmp
cwtl
mov
sub
mov
xor
mov
mov
imul
movsl
pop
out
mov
push
ret
push
fs
into
inc
mov
rcr
dec
repnz
movsl
xor
jb
mov
aas
pop
add
mov
mov
mov
insl
xor
sub
mov
outsb
std
popa
lcall
mov
dec
fiadds
pop
rcrb
mov
dec
or
bound
sub
cmp
xor
out
popf
push
fs
and
push
pop
shrl
jge
std
jmp
les
xchg
leave
and
lea
mov
dec
sar
lock
jns
fsts
xorb
sub
das
sar
and
lret
cmp
push
push
mov
cmpb
fstp
pop
cli
dec
mov
jmp
out
ja
mov
inc
xchg
popf
cmp
mov
fsubp
pop
or
add
mov
lahf
pop
add
dec
push
jecxz
push
lds
mov
js
leavew
fcompl
inc
jle
jae
adc
outsb
fadds
inc
or
push
adc
out
orb
loop
mov
push
leave
popa
push
daa
in
xor
dec
loop
sub
sub
aaa
xchg
mov
mov
lcall
cmp
mov
rclb
cs
out
hlt
add
test
push
mov
movsb
js
adc
or
sahf
inc
enter
out
dec
inc
int
or
cmc
push
jge
add
int3
and
add
movsl
mov
fistpll
ffree
pop
les
and
flds
mov
shlb
sub
push
xchg
jae
sbb
sbb
xchg
xchg
fxch
adc
jg
lret
data16
jmp
cmc
mov
cli
sub
jmp
inc
sahf
sbb
dec
xor
pop
es
pusha
sahf
push
push
push
lds
xchg
sub
popa
fwait
xor
xchg
push
jge
loope
les
jns
in
test
and
nop
mov
les
xchg
mov
lock
mov
loopne
rorb
pop
stos
jb
aam
cld
adc
rcll
ljmp
iret
add
out
pop
adc
out
sub
push
out
js
stos
cmpb
pop
jecxz
dec
jecxz
vpmaxsw
add
das
mov
pushf
loop
les
cmp
xor
pop
mov
adc
push
mov
fidivrs
pusha
jl
dec
inc
leave
xchg
xor
mov
lock
stos
push
xchg
jecxz
imul
adc
pop
adc
rorb
jmp
sbb
clc
add
mov
lods
inc
fdivrl
arpl
pop
jle
xchg
clc
adc
xchg
lret
fistl
shr
icebp
fs
call
mov
jb
xchg
ret
lahf
cmp
or
xchg
pusha
in
out
dec
addr16
inc
inc
jl
pop
enter
pop
pop
addr16
jo
xchg
xor
cli
xor
dec
fwait
mov
das
cmpsb
mov
sbb
fisubrs
arpl
stos
sbb
outsl
fisttps
fistps
mov
or
push
push
lret
ja
lret
push
fstl
or
in
out
dec
outsl
stos
fimull
add
lods
inc
aas
cmp
and
jb
dec
xor
sbbl
scas
out
add
repnz
bnd
and
or
lahf
sahf
or
cltd
pop
cltd
inc
in
jbe
fsubl
sub
ds
mov
push
jl
mov
sbb
mov
sub
push
std
pushw
and
daa
mov
add
pushl
add
lods
fiadds
pop
dec
inc
pop
loop
xorb
clc
lahf
loope
pop
movsl
jno
mov
mov
add
cmp
out
daa
jns
inc
mov
mov
or
ret
xchg
adc
aam
testl
repz
dec
push
or
mov
imul
pop
in
mov
xor
aad
push
sub
pop
lods
daa
add
stc
xchg
fimull
push
push
sti
popa
jno
lcall
push
or
ficompl
xchg
stc
popa
xchg
shrb
imul
sbbb
jbe
mov
fwait
stc
ret
xor
xchg
cmp
nop
movsb
jle
out
test
ja
and
inc
sub
jge
pop
jae
popa
jmp
jecxz
gs
scas
inc
ss
fcomi
orl
xchg
out
dec
mov
pop
or
scas
negb
mov
push
negb
aas
cmpsl
test
loop
mov
shlb
mov
adc
fdivs
popf
xor
test
sahf
sbb
loope
jno
fs
shrl
add
mov
dec
push
pop
push
in
xchg
xchg
or
pop
stos
sub
test
jae
or
in
leave
sbbl
sub
jmp
mov
push
mov
lods
sbb
jecxz
fadds
movsb
push
outsb
je
mov
daa
cmpsb
adc
and
push
mov
pop
jno
jmp
shrl
push
loope
ljmp
push
mov
adc
push
push
jo
push
adcl
sub
inc
daa
hlt
mov
test
rolb
mov
data16
negb
shlb
stos
scas
push
push
push
je
cmp
dec
stc
pop
cmp
loope
xchg
dec
out
adc
inc
pop
hlt
insb
and
xor
das
jecxz
arpl
cmp
jp
dec
insb
xchg
in
xor
inc
sarl
xor
lock
lock
fcomps
jo
sahf
into
pop
pop
or
fisttps
lahf
push
inc
jb
scas
test
stos
xchg
notl
xorl
mov
daa
pop
setle
lahf
mov
jl
imul
xchg
into
inc
mov
mov
mov
fisubl
lds
and
addb
stos
in
bound
jne
lea
fnstsw
fstpl
pushf
or
fimull
test
fwait
xor
fisttpl
mov
cmp
stos
nop
lea
roll
pushf
xor
add
imull
fistpll
jl
pop
xchg
gs
ja
xchg
mov
cs
call
pushf
mov
mov
sbb
fwait
sub
jo
inc
pop
cltd
shll
aam
inc
mov
dec
out
jge
mov
xchg
xchg
int3
jbe
pop
pop
xchg
icebp
and
adc
clc
cmp
push
subl
sub
fidivl
sub
xlat
gs
push
cmc
cmp
jg
aad
shll
xchg
imul
lods
test
inc
rcrb
xchg
jge
xchg
scas
adc
popa
repnz
xlat
ja
jns
mov
push
je
scas
mov
or
dec
out
mov
ds
into
loop
sahf
sub
or
inc
hlt
sub
shlb
pop
or
dec
cmp
jg
jl
adc
inc
in
add
stc
test
pusha
je
inc
ja
in
mov
lds
and
sub
fdivrs
sahf
in
jp
pop
stos
adc
std
ret
mov
outsb
or
adc
int3
and
adc
dec
cmpsb
dec
aas
push
lea
add
in
xor
fdivr
cmpsl
je
inc
pop
xor
clc
add
insb
mov
dec
sub
dec
jno
cmp
adc
sbb
adc
mov
xor
pusha
jp
aam
pop
fcmovnu
stos
pop
sub
mov
pusha
ljmp
ret
pop
sub
xor
fwait
inc
lcall
mov
dec
cmc
mov
mov
pop
jns
mov
aas
stc
stos
mov
add
xchg
out
push
and
loop
arpl
ror
fwait
shlb
push
test
ja
add
jecxz
fildl
fimuls
push
dec
push
xchg
test
cmp
jnp
push
lcall
aad
mov
mov
mov
movsb
lcall
mov
ret
fnsave
movsb
test
cmpsl
dec
ss
fwait
sbb
adc
loopne
dec
dec
mov
sbb
into
and
out
repz
out
mov
cmp
imul
xor
sub
lea
pop
mov
mov
into
or
in
out
subl
pop
cmp
ja
push
sti
jb
adc
jno
push
enter
jmp
mov
cmpsb
ds
or
fdivrs
stos
neg
daa
adc
or
addr16
push
push
adc
loope
loop
inc
push
sbb
mov
xorl
int3
cmpl
loopne
popf
rcr
jmp
test
nop
sbb
es
imul
outsb
test
sub
test
stos
xchg
inc
jecxz
decl
popf
stc
jmp
hlt
sbb
pop
push
push
sbb
clc
jp
push
or
push
movsb
mov
pop
and
pop
leave
cmp
adc
in
xchg
mov
aad
jmp
jle
out
mov
pusha
pop
out
mov
mov
jl
dec
imul
das
out
sub
xor
mov
out
pop
inc
or
pop
sub
pop
cmp
lea
or
xchg
push
mov
mov
scas
sahf
pop
or
xchg
add
mov
and
xchg
outsl
adc
scas
jg
fmul
call
and
mov
pop
dec
sbb
inc
cmpsl
add
loope
xor
or
call
int3
add
and
push
out
push
or
pop
pop
inc
nop
fwait
jmp
out
or
in
adc
cwtl
addr16
mov
out
fsts
xchg
insb
inc
push
adc
inc
test
cmp
mov
jae
dec
sub
aad
fidivrl
dec
repnz
movsl
sarl
popf
xchg
fdivrl
adc
and
sti
xor
int3
stos
xor
lods
stc
push
cs
dec
and
mov
jecxz
dec
inc
sub
enter
jo
scas
push
mov
sarb
jmp
cwtl
mov
lret
mov
or
xchg
inc
out
mov
cmp
aam
push
xchg
adc
mov
std
jmp
aad
cmc
xchg
push
nop
notl
adc
mov
jns
syscall
testl
icebp
xor
add
outsb
sub
or
sahf
cmp
pop
lret
sarl
outsb
in
cld
and
sbb
push
shrl
jo
add
dec
inc
xor
int
hlt
out
xlat
lock
data16
sub
js
std
cli
and
jle
les
repz
ret
test
inc
mov
push
test
cmpb
dec
xor
out
xchg
adc
mov
sub
cmp
mov
popa
jmp
js
mov
xor
stos
or
add
jbe
push
scas
inc
sub
push
scas
aaa
outsb
shl
pop
das
gs
mov
push
lds
push
xchg
loop
mov
xchg
loope
pop
inc
cs
adc
and
dec
adc
int3
lock
pop
movsl
das
cmp
and
loopne
mov
lock
iret
jbe
sbb
mov
mov
inc
repnz
int3
and
inc
movsl
fwait
jecxz
mov
mov
push
roll
xor
rclb
in
xor
lret
or
dec
push
icebp
pop
popf
cmp
push
xor
cwtl
jmp
stos
mov
sarl
shrl
sub
popa
loope
test
add
stc
or
call
add
test
xlat
scas
gs
sti
mov
das
cmp
in
and
xchg
lods
cmc
popf
xor
test
aam
mov
or
lea
int3
push
lock
push
xchg
jb
xor
sar
adcb
stc
ds
jae
adc
xor
cmc
fidivl
stos
dec
sbb
dec
aam
cmp
xchg
dec
test
jno
mov
mov
cltd
pop
xchg
or
outsl
jb
dec
xchg
mov
add
imul
popa
sbb
add
repnz
xor
pushf
cmp
push
xchg
mov
cld
outsb
xchg
ds
jg
inc
addr16
outsb
in
fcomps
mov
mov
imul
mov
sbb
push
mov
mov
into
cld
mov
xchg
jge
mov
cltd
jo
pusha
pop
imul
das
ss
mov
adc
sbb
addb
xchg
outsw
cmp
xchg
add
mov
mov
push
sbb
insb
in
cwtl
enter
jb
jg
sahf
cs
ds
push
push
out
cs
insl
cmpsb
andl
mov
and
movsl
popf
in
and
je
and
test
lock
ja
add
push
je
les
mov
mov
movsb
push
fildll
enter
push
ja
inc
shl
xor
fldl
xor
ljmp
test
pop
adc
dec
push
repnz
repz
add
cmpsl
sbb
inc
mov
xchg
inc
mov
cwtl
xchg
xor
cmp
iret
jnp
jecxz
xchg
fnsave
cwtl
mov
sub
ljmp
mov
jbe
sub
pop
ret
and
mull
adc
lds
repz
mov
lahf
shr
sbb
idivb
cs
mov
dec
ret
call
movsl
ret
dec
add
inc
rep
icebp
push
mov
imul
in
jg
pop
lret
in
mov
sahf
jg
out
jge
jae
in
inc
push
xchg
and
dec
imul
or
inc
adc
mov
aam
xchg
leave
pop
inc
cmp
test
cmpsl
mov
test
sbb
and
and
repz
mov
loope
jbe
dec
push
or
data16
call
mov
mov
xor
into
aam
adc
mov
sbb
push
xor
mov
int
push
jmp
rclb
cmpsb
mov
leave
mov
mov
fmul
mov
flds
adc
std
dec
and
loop
pop
rcrb
jge
gs
and
mov
pusha
imul
inc
shr
loop
sahf
push
adc
sub
into
lds
jl
das
pop
dec
popf
add
mov
dec
push
adcl
orl
pop
lret
loop
imull
fs
in
mov
faddl
pop
pop
pop
lcall
loope
mov
sub
dec
lock
mov
shll
add
xor
gs
xor
lahf
sub
mov
repz
mov
es
sti
pop
roll
movsl
mov
mov
stos
ficoms
scas
divb
pop
cmp
xchg
push
fwait
mov
push
scas
cmp
mov
push
adc
fimull
outsb
mov
into
roll
mov
cltd
fldl
test
add
and
je
data16
mov
xor
pop
les
jg
push
add
add
dec
lea
and
mov
imul
jmp
subb
xchg
fildll
pop
sbb
mov
loopne
cld
and
aad
jae
ss
jbe
scas
cltd
jecxz
sbb
pop
aad
adc
add
repnz
fisubrl
xchg
pushf
call
xor
movsb
or
adc
aas
xchg
adc
insb
in
mov
rorb
xchg
imul
push
mov
pop
mov
cmp
rorl
inc
pop
es
dec
pop
loopne
jmp
mov
add
jbe
sub
shll
cmp
sbb
sbb
mulb
jle
dec
xor
loopne
push
into
int3
enter
mov
xor
popa
pop
scas
mov
push
cmp
test
jbe
and
outsb
and
xchg
mov
shll
jmp
negl
inc
scas
cmp
and
fs
push
decl
sbb
add
jle
imul
mov
xor
push
or
mov
add
into
bound
and
lods
cmp
jno
add
movsl
ret
inc
decb
jle
hlt
push
and
out
fsubrs
movsb
mov
and
xlat
push
pop
cltd
das
cmc
sub
call
loope
ja
mov
pop
sarl
push
inc
adc
pop
sub
dec
pop
xor
icebp
imulb
mov
push
fdivrs
jo
outsl
xchg
add
int
scas
sbbb
sbb
scas
sub
testl
testl
sbb
inc
ret
mov
jae
xchg
mov
jecxz
jae
movl
pop
pusha
sti
dec
shr
pushf
xchg
mov
dec
punpckhbw
gs
adc
cmp
xchg
shr
and
adc
cwtl
mov
xor
push
pop
dec
sbb
popf
adc
mov
dec
pushf
xchg
sbb
int
xor
add
ficoms
dec
ds
lea
or
push
cli
stc
lods
adc
dec
lods
mov
jl
repnz
mov
add
inc
add
xor
dec
ljmp
jbe
arpl
push
xchg
pop
fimull
xor
adc
scas
lds
mov
dec
fimull
addr16
inc
add
sti
cmp
mov
and
icebp
adc
jb
sub
cwtl
cwtl
aaa
jbe
jo
jp
int
out
stc
addr16
xchg
hlt
nop
mov
add
xchg
and
push
mov
daa
repz
test
mov
jo
jnp
fwait
xor
or
jb
sti
lea
mov
inc
aaa
out
rclb
out
sbb
dec
in
data16
xchg
sbb
fs
mov
adc
jne
mov
leave
shll
sub
mov
adc
imul
mov
jecxz
sti
inc
add
or
pop
pop
xadd
xchg
mov
rcrl
outsl
mov
dec
call
movsl
fwait
loop
in
adcl
lds
pushf
dec
push
les
jmp
mov
enter
mov
dec
pop
push
mov
popa
adcl
cmp
mov
inc
jge
push
movsl
pop
andb
mov
pop
inc
aas
pop
dec
fildll
xor
dec
xlat
int3
fs
mov
sbb
push
in
dec
xor
shlb
cmpl
cs
out
shll
jecxz
push
out
jle
sti
xorl
nop
or
sub
imul
xchg
mov
xchg
mov
mov
adc
mov
sub
out
mov
sbb
mov
push
and
into
mov
enter
aaa
out
test
pextrw
pop
mov
mov
or
repz
mov
js
stos
jl
call
push
sbb
sub
pop
inc
or
sbb
lahf
inc
mov
hlt
scas
mov
inc
cmp
add
test
fldt
push
or
popf
jmp
mov
xchg
jmp
movsb
test
popa
imul
xor
lods
jmp
lahf
leave
ret
negb
pop
pop
mov
ret
popf
cltd
inc
lcall
out
das
aad
stos
jge
pushf
mov
mov
ss
sub
ret
fisubrs
xor
jns
mov
mov
pop
out
mov
sbbl
dec
in
or
das
lock
ss
stc
insb
xchg
lret
jecxz
das
mov
rorl
inc
inc
repnz
mov
cltd
cmpsl
add
sahf
or
pusha
ret
xchg
fwait
sbb
shlb
lods
jmp
dec
mov
test
aaa
fisttpl
movsl
rolb
or
push
sub
pop
fidivl
movsl
pop
pop
jo
and
ljmp
dec
push
clc
add
mov
and
lea
jae
jge
sub
jecxz
fcoms
jb
stc
mov
loope
mov
sahf
sub
push
pop
sub
pushf
pop
jp
push
call
dec
pop
sti
icebp
nop
shl
or
mov
sub
rol
xorb
mov
pushf
and
fbstp
ljmp
pop
cli
hlt
push
xor
mov
sbb
cmpsl
xchg
int3
les
stos
cmp
and
ja
sbb
inc
in
jg
lret
mov
enter
mov
jbe
mov
adc
add
xchg
jecxz
out
out
lock
and
push
push
call
inc
pushf
out
out
inc
int3
cmp
dec
aas
andl
insb
out
sub
add
ret
into
aas
popa
jmp
test
xorl
dec
dec
xchg
aad
notl
xor
loop
test
mov
mov
pop
out
cmc
jge
sahf
push
mov
dec
cmp
dec
test
lret
cmp
sub
movsb
mov
cmpsl
xchg
jge
and
shlb
sahf
xchg
divb
test
sbb
sbb
leave
sbb
in
pop
sbbb
fidivs
mov
popf
aas
ffree
push
xchg
pop
xor
mov
aaa
add
sub
add
rorb
mov
jg
or
into
jb
in
inc
aaa
jp
push
inc
out
enter
mov
mov
or
mov
dec
addb
push
call
nop
push
and
addr16
mov
enter
js
push
or
push
pop
sbb
in
stos
xchg
adc
push
add
xor
xor
mov
mov
sbb
cmp
jne
ret
xor
mov
xchg
and
mov
scas
loope
xchg
and
mov
das
push
cmp
pusha
arpl
jmp
movsb
xchg
mov
aas
int3
adc
inc
repz
cmc
xchg
sub
mov
push
in
dec
and
clc
push
loopne
ja
cltd
xchg
ja
sar
push
sbb
jmp
in
cmp
dec
repz
out
sbb
into
or
jle
adc
push
pusha
fbstp
nop
rorl
es
push
clc
mov
int3
mov
ljmp
imul
stos
push
push
out
jl
mov
les
movsl
adc
inc
out
xchg
push
cmp
mov
and
mov
setns
push
and
push
push
movsb
push
cmpsb
imul
mov
mov
xlat
sub
push
push
decl
inc
sbb
dec
jg
icebp
scas
dec
pop
inc
xor
outsb
push
int3
daa
mov
mov
adc
insl
and
push
daa
jmp
and
mov
mov
sub
pop
pop
add
cwtl
insl
dec
outsb
mov
xorl
cmpsb
add
push
dec
dec
mov
jb
lret
or
mov
dec
cli
sbbb
mov
push
pop
test
test
cmp
mov
movsb
iret
ss
mov
jp
mov
enter
mov
jle
sbb
outsl
sbb
adc
stos
jp
popf
dec
mov
mov
mov
addl
xor
dec
loop
fs
cli
sarb
jne
mov
sbb
nop
mov
adc
iret
pushl
leave
adc
cmpsb
xor
add
loop
std
cltd
mov
popf
xchg
mov
pop
pop
mov
mov
pusha
out
jae
jmp
gs
inc
ret
je
add
cmp
or
or
scas
mov
stos
inc
int3
in
xchg
adc
movsb
adc
cmp
sub
lea
sub
lret
lahf
sub
cltd
daa
mov
push
fsubl
fmuls
imul
mov
stos
ds
dec
jo
dec
or
jle
mov
aad
mov
fadd
pusha
into
aam
mov
int
adc
test
ljmp
dec
sti
sub
jg
cltd
mov
cmp
cmovge
fsubrs
adc
jmp
lret
mov
push
testb
sti
sbb
and
clc
ret
fistpl
ret
repz
mov
mov
add
repz
sub
mov
add
mov
jae
jo
inc
movsl
mov
push
lods
push
and
mov
adc
cmpsb
sbb
andb
cmp
adcl
clc
jl
dec
inc
jo
in
xchg
ljmp
stos
sbb
inc
lods
and
and
adc
int3
push
jnp
ljmp
ljmp
cmp
cmp
jns
mov
shll
aam
adc
cmp
psubw
mov
fsubr
movsl
sbb
das
int
inc
das
cmp
repnz
vmwrite
mov
mov
jecxz
out
iret
or
mov
sbbb
fsubrs
notl
add
in
dec
add
mov
mov
mov
js
pop
and
lcall
and
sbbl
xchg
in
add
add
in
fwait
push
add
dec
leave
push
lea
lahf
filds
cmp
imul
pop
mov
inc
inc
push
ret
push
pop
jle
pop
or
cmp
push
lods
pop
or
shrl
lea
mov
jb
xchg
pop
sub
fsubrl
loope
mov
lahf
das
rcl
inc
or
cmp
mov
test
adc
mov
ja,pt
jp
xchg
pop
sub
dec
xor
les
ret
test
movsl
in
je
mov
cmpsb
outsb
sbb
sbbl
and
jmp
jne
ds
adc
shl
rolb
fldl
mov
dec
inc
js
mov
lret
adc
movsl
data16
push
add
inc
push
lret
pop
inc
gs
popf
aad
into
lret
sahf
push
xchg
fcompl
xchg
or
aas
lods
lgs
mov
fwait
out
and
icebp
xchg
stos
mov
push
jbe
xor
add
sbb
inc
fwait
in
test
repz
or
out
pop
hlt
cmp
push
mov
lock
or
repnz
push
unpcklps
pop
or
out
jecxz
inc
dec
push
inc
ljmp
add
cmpxchg
out
push
mov
in
xchg
js
inc
int3
dec
cmc
outsl
push
xchg
stos
cmp
or
sub
jmp
and
clc
and
xlat
xor
push
and
aas
sarb
sub
rorl
xchg
mov
test
out
sti
faddl
xchg
cmc
push
dec
into
fidivrl
lock
lock
sub
cmp
mov
lahf
mov
push
xchg
or
popf
xchg
jno
jle
cmp
dec
sub
in
movsb
test
stos
xchg
outsb
inc
xor
jg
pop
out
cld
cmpl
add
push
adc
nop
andb
cmp
push
ds
inc
es
pop
test
into
sbb
lods
stos
hlt
rclb
sbb
xlat
scas
sahf
ds
add
xor
dec
jo
or
adc
mov
mov
dec
and
cmpsl
fildll
add
pushf
call
add
les
or
fidivrl
pop
dec
pop
mul
mulb
mov
push
or
push
jae
jbe
cmovle
fdivrl
or
movsl
mov
ret
in
pop
loopne
or
pop
mov
popf
sub
pop
std
enter
cmc
push
pushf
inc
jnp
inc
inc
push
ja
cmovp
mov
xlat
cmp
cmp
testb
popf
jb
inc
add
loope
lea
sub
push
movsb
mov
mov
sbb
mov
fisubrs
ret
outsl
mov
sub
fnstsw
in
mov
jl
xor
pop
xorb
addr16
adc
fs
imul
movsl
jecxz
addr16
lods
loop
dec
in
xchg
mov
repnz
fcomps
sub
loop
inc
sbb
mov
jp
or
xchg
adc
cmpsl
clc
jo
xor
pushf
and
pop
dec
sub
inc
cltd
shll
cmp
cld
mov
mov
loop
lock
xorl
adc
adc
pop
jae
push
in
jno
or
jmp
outsb
pop
xor
jne
sbb
inc
hlt
out
sti
xchg
xor
cmp
mov
dec
ficompl
push
pop
jae
paddusb
mov
push
sarb
lcall
sbbl
test
jle
cmp
sub
cmp
in
fistpll
js,pt
sahf
xor
loop
xor
enter
inc
std
les
sub
lret
enter
xchg
rorl
dec
xlat
fiaddl
loopne
inc
stos
int3
or
xor
add
icebp
cmpsb
jp
mov
jp
stos
fcmovu
cwtl
shll
sbb
push
shrb
rcrb
in
out
cli
cmc
shll
push
cld
out
mov
test
cmc
mov
mov
lret
pop
pop
or
mov
push
mov
cld
out
outsb
fimull
fistpll
push
jae
into
popa
mov
sar
push
in
xor
jnp
sub
sub
mov
push
xor
push
sarb
push
call
loope
aaa
push
push
imul
addr16
mov
dec
icebp
pop
and
cmp
in
out
jmp
pop
mov
es
cmp
pop
in
nop
mov
pushf
test
imul
aam
cmpsl
mov
sub
int3
cltd
push
mov
movsb
sub
sub
mov
dec
pop
scas
and
mov
mov
cmp
push
sar
stos
mov
scas
push
std
sbb
mov
aad
into
sbb
fsin
in
mov
int3
das
cmpsl
cmpsb
push
mov
xor
jl
dec
rol
cli
and
jp
adc
imul
pop
cli
cmp
jnp
test
dec
mov
daa
adc
outsl
push
add
and
sbb
in
cmp
pushf
aad
inc
pop
xor
js
and
xchg
push
cmp
iret
xor
mov
add
xor
in
out
add
mov
xlat
xor
push
mov
outsb
push
ljmp
adc
call
lahf
pmaxub
imul
outsl
cld
insl
cmp
rol
test
int3
push
adc
sub
jae
fdivrs
out
call
cmp
pop
jnp
cmp
cmp
rorl
sub
arpl
ficompl
incl
daa
lahf
cmp
sub
inc
mov
pop
nop
outsb
push
sbb
lcall
aas
stc
cld
or
jge
sbb
pop
mov
fs
stos
push
xchg
push
out
std
xor
addl
idiv
pop
push
aad
popf
ret
sbb
pop
mov
xchg
nop
xchg
ret
sahf
in
cli
jmp
pop
cmp
dec
add
mov
mov
cmc
je
js
lods
pop
cli
popa
push
cmc
jnp
and
push
jge
and
cmp
pop
xor
movsb
mov
outsb
aad
loop
jno
aam
xchg
adc
rcrl
dec
and
xchg
inc
test
insl
xor
jbe
das
add
cmp
nop
in
cld
mov
xchg
fs
pop
jge
sub
outsl
push
mov
sarb
rcll
aaa
stc
clc
add
test
xor
cmp
mov
jecxz
mov
out
and
call
ret
enter
lock
pop
loop
repz
aas
shlb
xor
mov
dec
insl
lods
jl
mov
not
imul
mov
fstpl
inc
les
jl
hlt
or
int3
inc
stos
sub
push
fdivl
out
inc
movsb
jl
and
and
addr16
test
mov
lcall
add
dec
stos
dec
scas
pop
dec
movsb
gs
das
cli
rcll
xor
sub
push
sbb
mov
insb
jge
outsl
jle
cmpsl
fisubrs
rcll
adc
push
stc
insb
imul
pop
int
test
jecxz
fs
cmp
imul
imul
xor
cmp
lods
xchg
push
or
fisubrs
inc
mov
aam
jecxz
push
ja
sarl
ds
push
imulb
scas
enter
jae
mov
in
aas
andl
pop
in
les
mov
pop
jnp
cwtl
pop
inc
fdivs
push
insb
iret
mov
pusha
lods
stos
pop
aas
sti
xchg
or
sti
and
adcb
ljmp
jns
lret
dec
cmp
cmp
repnz
nop
cmpsl
aad
mov
dec
push
pop
js
cli
orl
repnz
out
out
sbb
xor
daa
push
shlb
nop
sbb
adc
pop
fiadds
clc
sbb
push
jp
push
and
std
jge
movsl
stc
cmp
xor
cmp
pop
pop
push
dec
mov
xchg
or
add
loopne
push
cmp
sbb
aad
xor
inc
out
sahf
insl
or
inc
andb
mov
arpl
icebp
les
cmpl
mov
push
mov
mov
cwtl
xchg
pushf
xlat
push
pop
mov
pop
push
mov
test
je
sbb
and
pop
add
in
sbb
cmp
je
loop,pt
ret
inc
pop
les
sbbl
sub
out
aad
or
push
inc
lahf
clc
clc
pusha
pop
test
pop
repz
aaa
std
pop
and
popa
icebp
pop
movsl
push
les
sub
inc
dec
aaa
daa
rorb
ljmp
pop
sbb
mov
stos
cmpsb
or
pop
loope
arpl
lahf
enter
lahf
pop
mov
mov
or
int3
inc
push
lea
imul
movsl
inc
rcll
lods
xor
pop
adc
mov
std
subl
out
jg
add
leave
mov
in
daa
jns
nop
or
jns
cwtl
or
xor
mov
jmp
or
jg
cmp
insl
mov
repz
daa
or
adc
jmp
cmp
call
loope
pushf
adc
hlt
aam
mov
pop
push
xchg
push
imul
sbb
out
and
cmp
mov
sahf
lds
push
jl
pop
loope
jbe
jae
dec
rcl
xchg
orb
lret
and
sub
testb
sbb
mov
xchg
gs
iret
lret
xchg
std
jle
cli
mov
insb
jge
push
cmp
jg
das
mov
leave
push
imul
mull
gs
xchg
adc
cmp
out
xor
or
or
xlat
dec
test
push
test
cmp
aaa
mov
cmp
fimuls
outsb
loop
decb
nop
daa
adc
sarb
push
andl
jo
dec
outsl
popf
mov
movsl
cwtl
mov
adc
sbb
das
je
xor
outsl
arpl
inc
adc
popa
xor
xchg
push
add
adc
mov
xor
mov
idivl
in
daa
push
cmp
sbb
or
mov
lcall
adc
pop
mov
fwait
xlat
mov
add
adc
lret
scas
mov
dec
lea
rolb
jne
scas
mov
ds
rorb
fmul
or
push
add
divl
or
mov
pop
adc
pop
outsb
lds
lods
pop
xchg
jp
gs
lods
arpl
adc
mov
xchg
xchg
inc
mov
pop
inc
adc
adc
sar
inc
sub
repz
xor
add
ret
sbb
adcl
ss
repnz
fwait
dec
fistpll
fisttpll
cmp
mov
mov
xor
loope
je
ljmp
jmp
cmp
mov
test
adc
in
movsl
adc
bswap
xor
or
ret
cmp
outsb
xor
xor
test
cmp
in
fndisi(8087
push
mov
jl
lret
and
ret
mov
mov
test
pop
xchg
add
in
divb
lret
or
cmc
mov
je
mov
into
loopne
jno
in
out
and
fistpl
das
push
dec
jecxz,pt
shlb
js
mov
cmp
mov
shll
dec
inc
mov
sub
outsb
sti
js
mov
push
and
xlat
in
addr16
inc
je
mov
or
xor
jecxz
mov
pop
stos
mov
cltd
mov
cmp
adc
mov
add
aas
mov
lret
mov
cmpb
jbe
cwtl
jbe
movsl
aam
xor
cld
push
and
int3
mov
in
jl
mulb
cmp
insl
sub
loop
adc
test
stos
add
out
stos
sub
outsb
adc
rcrl
ja
sub
fs
xlat
sbb
xor
es
xchg
and
test
jns
int3
pop
push
stc
pop
imul
mov
in
mov
je
sbb
sub
test
dec
xor
and
sahf
les
inc
iret
in
shlb
push
sub
sbb
jmp
pushf
inc
or
insb
fidivl
xor
bound
and
rcrb
in
jnp
add
ss
mov
sbb
sub
das
sbb
lahf
sbb
dec
popf
sbb
mov
test
mov
insb
inc
es
leave
sub
sbb
push
jbe
mov
je
outsl
pop
adc
popa
lret
dec
add
test
lahf
jnp
push
ljmp
xchg
add
pop
in
ret
mov
lahf
xchg
and
test
mov
movsl
dec
mov
jg
xchg
push
xor
sbb
or
into
jecxz
pop
pop
repnz
test
pop
adc
xlat
ja
pop
repnz
and
mov
out
sub
mov
push
neg
addr16
pop
ror
or
iret
cltd
dec
inc
aad
repnz
fbld
mov
xchg
inc
lahf
jns
sub
and
rol
sub
in
stc
leave
xchg
xchg
pop
adc
jnp
imul
sbb
xchg
jbe
ds
sti
jp
jg
cmpsb
mov
cmp
inc
mov
pop
cmp
clc
xchg
push
int3
pop
call
sarb
pusha
popa
adc
sbb
dec
or
mov
jg
aas
repz
sub
arpl
pop
push
ret
adc
mulb
and
mov
or
lods
xor
enter
cmpsl
and
and
ljmp
in
aad
mov
imul
repnz
xchg
mov
cmp
jmp
add
xor
xchg
fs
cmpsl
mov
data16
pop
mov
cmpsl
mov
ljmp
stc
or
mov
mov
adc
test
inc
push
leave
stc
mov
inc
pushf
sub
xchg
pusha
out
dec
loope
ret
cmpb
mov
pop
ds
adc
jp
lcall
ja
jp
dec
pop
mov
mov
xor
fidivl
mov
inc
ret
sarl
mov
rol
mov
sbb
inc
and
mov
or
enter
hlt
leave
jo
inc
ret
mov
inc
addl
adcl
enter
imul
cmp
inc
lds
daa
and
push
sbb
nop
insb
sbb
movsl
mov
xor
daa
cmp
scas
cmp
fidivrl
mov
xor
xor
lret
xchg
imul
inc
fs
jae
lahf
ret
loopne
jl
adc
jae
repnz
mov
sbb
mov
mov
popa
jb
inc
rcr
fldenv
aas
icebp
sbb
fadds
xchg
imul
aas
xchg
ja
lret
xor
pop
pop
mov
fisttps
cli
or
mov
xchg
repnz
dec
fsubrs
sub
xchg
outsl
mov
in
call
inc
xchg
or
adc
shlb
stos
or
adc
mov
mov
dec
sub
dec
dec
mov
out
scas
pop
mov
add
fisttps
dec
out
repnz
loopne
mov
pop
sbb
adc
repz
ja
sti
push
es
out
sub
push
cmp
pusha
cli
mov
pop
addr16
xchg
leave
daa
jno
push
mov
push
xor
out
movsb
mov
and
cmp
out
mov
and
xchg
inc
jp
mov
add
jbe
xchg
gs
jns
imul
mov
sub
pop
inc
or
xor
sub
gs
aas
jmp
cmp
ds
cs
xor
mov
repz
push
xorb
shll
adc
adc
mov
cli
call
enter
adc
adc
jnp
mov
xor
mov
mov
out
cmp
outsl
aad
inc
sti
adc
sbb
nop
sbb
mov
out
cmp
imul
cmpsb
adc
jle
enter
mov
sbb
push
sub
into
fnsave
pop
incb
add
loop
out
fstl
mov
xor
sbb
mov
pop
stos
xor
lea
jmp
fildll
and
add
sub
sub
mov
or
mov
lret
js
sti
jmp
in
das
fwait
mov
sbb
cmp
xor
clc
fdivr
repz
cmp
xchg
dec
xor
loope
sbb
add
es
jg
shl
das
adc
or
dec
push
std
push
punpckldq
into
lahf
mov
daa
and
add
aad
cmpsl
mov
imul
push
sub
nop
mov
inc
sub
sub
jnp
mov
das
arpl
xor
dec
fsubrs
mov
sbb
jmp
movsb
xor
pop
ljmp
push
xorb
jne
gs
adc
ret
xchg
int
mov
mov
nop
add
jmp
xlat
bound
mov
mov
insl
push
dec
insb
fwait
push
pop
nop
adc
push
sbb
xor
mov
hlt
aaa
add
push
and
pop
inc
push
inc
xchg
xchg
clc
imulb
jge
rorl
sub
test
scas
pop
cmpw
fwait
inc
das
mov
push
mov
add
or
lods
adc
adc
sub
movsb
dec
adc
mov
mov
ret
mov
repz
or
out
and
push
sbb
pop
sub
mov
fists
and
jae
jp
mov
mov
das
push
rcll
pop
repz
dec
pop
jo
cmp
pop
lea
or
stc
fisubrs
mov
sbb
ficoml
sbb
adc
jb
dec
fwait
test
inc
add
jle
xchg
mov
mov
cmc
test
sub
push
clc
xor
shl
dec
push
fwait
iret
xor
and
inc
mov
xor
in
dec
in
pop
mov
int
mov
outsl
scas
mov
call
adc
xor
push
cmp
fidivs
jl
rclb
adc
push
mov
push
add
test
pop
or
ret
mov
sbb
inc
testl
imul
nop
and
xchg
cmp
frstor
push
lea
sub
stos
roll
xor
push
cwtl
jecxz
sbb
fsubrs
lret
mov
mov
cmp
xor
jle
sub
fimull
xchg
fbstp
ljmp
rclb
sbb
fistpl
mov
lret
pushf
add
sti
sbb
pop
inc
xchg
into
sub
js
out
es
dec
fidivrl
adc
push
xor
aaa
fisubs
fwait
push
cmpsl
add
mov
cmp
subl
in
add
icebp
test
sbb
das
data16
mov
jl
jecxz
mov
nop
push
dec
add
popf
push
aad
aam
cmp
sbb
cmp
clc
push
out
mov
pop
jnp
mov
in
adc
popa
pop
sub
mov
push
fs
or
cmp
push
lret
cmp
adc
dec
cmpsb
pop
les
imul
dec
sub
inc
pop
push
push
les
jo
or
push
cmp
or
jp
lret
dec
cmp
cmp
push
shrb
mov
cmpsl
test
or
mov
cmp
cltd
and
cmpsb
jle
jne
push
pop
push
push
lock
outsb
sub
jns
xor
ss
xchg
inc
add
jo
jmp
repz
and
jecxz
or
xchg
and
push
xchg
dec
push
hlt
xchg
imul
push
cmp
jmp
into
imul
stos
mov
nop
cmc
mov
stc
movsl
push
mov
fsub
ret
icebp
mov
or
sub
bound
jecxz
lcall
inc
add
push
xchg
xchg
or
xor
insb
mov
test
movaps
xchg
out
xchg
mov
push
mull
call
pusha
sbb
test
xor
mov
scas
jns
repz
adc
enter
cmc
jns
jmp
ss
push
repz
sbb
xor
add
inc
fsubl
aad
cs
test
lret
bound
addr16
in
rol
les
jo
xchg
je
imul
iret
sub
xchg
cs
mov
adc
jg
push
xchg
dec
xchg
aam
iret
or
xor
in
inc
aas
push
das
mov
cli
jae
shlb
push
adc
adc
sub
frstor
and
add
mov
push
frstor
rcrb
loope
out
popf
ds
in
dec
nop
fs
jae
loop
inc
cld
sub
mov
mov
jo,pt
sub
xlat
mov
jnp
inc
hlt
push
inc
ja
ret
cli
mov
jl
orl
and
stc
into
lret
xchg
shlb
je
hlt
jmp
ja
rorl
test
cmpl
xchg
hlt
popf
shrb
popa
pushl
ljmp
lods
or
mov
std
mov
loope
les
add
xor
xor
xor
iret
push
lret
fdiv
jp
xchg
imul
sub
mov
cs
pop
enter
ficompl
aad
clc
jb
mov
jno
push
mov
jg
lods
and
cld
or
insb
jae
add
xchg
mov
movsb
dec
xor
add
xchg
xchg
repz
push
scas
jp
jnp
xchg
popf
sub
fs
fidivs
mov
ds
sub
mov
cli
or
nop
jp
inc
das
testb
pop
mov
pop
jns
cmp
dec
mov
jno
repz
sbb
inc
push
jno
or
fisttpll
mov
add
mov
dec
jo
mov
xlat
mull
push
jns
lahf
pop
jbe
inc
sbb
push
xor
pop
push
mov
jns
aad
sub
insb
add
adc
das
in
test
inc
aaa
mov
leave
mov
in
cmp
xchg
mov
in
and
out
dec
or
aam
arpl
sub
fbstp
decl
push
cmpsl
orb
fnstcw
push
cmpb
outsb
adc
lret
sub
cli
xor
push
movsb
xor
test
xorb
push
shr
and
pop
aad
mov
popf
add
imul
mov
fidivrl
rcl
and
rcrl
test
mov
imul
add
or
shlb
fidivrl
out
cwtl
ja
fistps
pop
ret
out
lds
mov
dec
mov
mov
fiadds
inc
push
scas
mov
cmp
adc
and
and
or
sti
loopne
mov
inc
js
je
loope
das
jmp
pop
gs
das
cmpsb
loop
les
dec
mov
mov
les
lcall
pop
xor
int
and
test
lods
push
test
xchg
adc
adc
ljmp
inc
shrl
es
dec
fimull
jns
add
iret
shl
sub
adcl
sub
dec
scas
mov
or
ja
sub
js
das
mov
movsb
push
mov
xchg
inc
icebp
xchg
adc
loope
dec
movsb
jecxz
dec
loop
xchg
inc
aas
or
mov
inc
jo
cmp
mov
jnp
in
scas
or
pop
pop
cmp
stc
stc
test
push
mov
or
fst
xchg
out
add
lock
out
push
mov
sbb
je
jb
imul
in
adc
std
pop
aad
in
or
roll
sahf
adc
test
inc
das
cmc
adc
popa
pop
or
add
std
add
jns
sar
sbb
jae
xchg
test
mov
inc
shrd
ror
push
mov
imulb
lea
add
or
js
popa
cmp
and
add
jmp
pop
mov
imul
jecxz
mov
jg
stos
pop
push
insb
push
repz
xchg
add
jno
sbb
sqrtps
push
stos
outsl
arpl
xchg
lret
mov
pop
sbb
fildll
and
lods
dec
jns
shl
mov
or
ret
int
enter
push
push
dec
loopne
pop
mov
mov
in
mov
sbb
scas
popa
jecxz
out
or
je
cmovl
test
lahf
xchg
inc
out
or
mov
inc
insb
rcr
or
insb
mov
mov
in
push
es
dec
outsb
arpl
xchg
mov
pop
icebp
cli
sub
or
xchg
nop
lcall
fiaddl
or
or
jnp
aas
inc
xor
cmp
gs
fwait
xor
mov
push
mov
ljmp
daa
cmpsb
scas
sub
pop
sub
and
mov
je
stos
mov
gs
jge
mov
insb
jmp
loopne
in
dec
jno
and
insl
nop
repnz
repnz
int3
movb
call
push
inc
sahf
hlt
xchg
lea
dec
jl
cmpb
sub
mov
sbb
inc
cmpb
xchg
rcl
xor
mov
pop
int3
mov
push
stc
fldenv
cmp
inc
mov
sbb
shlb
pop
push
popf
and
lods
xchg
ja
mov
xchg
call
nop
outsb
aaa
jb
cmc
testl
inc
sahf
xor
sti
stos
shlb
sbb
xlat
insl
fidivs
cmpsl
xchg
ret
dec
cmpsb
cltd
push
add
sub
fstl
nop
shll
mov
xchg
test
mov
shlb
mov
push
shr
push
or
mov
ja
shl
push
push
popa
je
int
mov
inc
das
fdivrl
das
hlt
inc
ss
add
push
mov
mov
int
loop
mov
adc
pop
lcall
mov
pushl
mov
mov
inc
mov
js
xchg
popl
fidivl
sbb
or
adc
aam
push
jb
in
mov
dec
push
bound
mov
push
push
clc
cwtl
popf
adc
test
xchg
test
std
in
shll
pinsrw
mov
pop
mov
stos
out
mov
xchg
sub
adc
out
arpl
test
ljmp
jo
jne
or
bound
mov
gs
pop
fs
and
xchg
mov
xchg
xor
divb
sub
lods
dec
dec
xor
aad
push
stc
shrl
xlat
js
cmp
notl
adc
mov
aam
call
mov
add
inc
mov
dec
icebp
lock
ljmp
enter
mov
push
cmp
xchg
enter
mov
adc
sub
dec
ja
and
add
js
mov
pop
mov
in
xor
sahf
stos
mov
lret
rcll
insl
dec
call
jl
mov
adcb
es
push
adc
xor
lds
cld
cmp
push
jmp
xlat
cmpb
cli
in
in
test
xor
jns
int
in
popl
aam
mov
fsub
jnp
mov
pop
inc
je
cmc
mov
pushf
outsl
sbb
shrl
popl
fstl
xor
mov
lods
adc
push
test
push
mov
fnstenv
inc
pop
and
adc
shrl
fdivp
test
lret
sarl
outsl
add
jb
outsb
pushf
and
push
sbb
rolb
sub
shl
push
cmp
and
jnp
loopne
cmp
rolb
or
stc
xchg
mov
inc
push
dec
arpl
ljmp
pusha
xchg
or
daa
sbb
mov
push
clc
jecxz
and
mov
jecxz
sahf
jne
push
jl
push
mov
sub
fidivs
cmp
cmpsb
inc
into
pop
aad
fwait
cmp
scas
or
sub
cmp
xor
cwtl
out
pop
xlat
mov
leave
adc
adc
into
pushf
and
xchg
lret
daa
jle
pop
inc
lock
mov
add
frstor
loope
jb
sbb
sbb
fistpl
add
lea
loope
jne
rclb
in
ljmp
lds
pop
cmp
out
cmp
mov
dec
ret
push
dec
mov
daa
fists
inc
push
aaa
dec
dec
ljmp
mov
testb
sub
inc
pop
ss
jo
sarb
out
and
pop
mov
mov
sbb
or
shr
push
push
lret
pop
jo
or
dec
mov
mov
or
jg
popa
fs
rcl
mov
je
lock
lret
sub
rclb
inc
hlt
loopne
mov
inc
dec
or
mov
pop
mov
inc
xor
or
aad
push
hlt
mov
sub
pop
mov
jo
ds
mov
scas
loopne
add
pop
ja
lods
rcll
shr
adcb
adc
addb
or
inc
aas
pop
mov
cmp
add
pop
mov
stos
xchg
add
ficoml
arpl
cmp
fs
aas
sarb
std
or
sub
mov
in
cmp
ret
outsb
adc
sbb
dec
mov
xchg
jmp
loop
ljmp
cld
lret
mov
js
add
adc
cltd
push
icebp
nop
in
dec
push
adc
test
mov
xchg
call
mov
stos
lock
and
fsubs
and
ss
xor
jecxz
nop
jo
ret
aad
loopne
xchg
fs
mov
push
pop
outsb
jnp
test
adc
xchg
lods
in
and
mov
nop
pop
in
lock
add
jle,pn
and
jns
int3
loopne
in
push
pop
push
test
mov
hlt
loopne
dec
fstps
push
movsb
outsb
in
push
cltd
rclb
fsubs
ror
and
ficoml
pop
pop
mov
sub
mov
movsl
xchg
les
fstps
int3
push
out
orb
mov
or
into
jmp
popa
ja
jae
loop
add
sub
push
adc
mov
fiadds
scas
popa
or
push
inc
int3
cs
mov
sub
inc
push
mov
test
sar
sbb
and
sbb
mov
push
bound
outsl
inc
mov
test
jmp
nop
xchg
ret
inc
inc
xlat
xor
popa
lret
push
in
push
cld
lods
jmp
roll
inc
push
pop
insl
std
cmp
aas
sub
mov
dec
mov
inc
test
cwtl
js
xchg
adc
push
aaa
cmp
or
je
push
push
rol
xlat
jp
aam
int3
sbbb
adcl
jbe
adc
push
addb
dec
enter
sub
push
adcb
les
mov
pushf
shlb
xlat
push
stos
jno
mov
out
xchg
push
fs
cwtl
inc
icebp
mov
dec
mov
fndisi(8087
xor
sti
movsl
cwtl
and
pop
daa
cmc
in
ret
sbb
mov
scas
mov
cmpsb
rcrl
les
fistps
sbb
mov
pop
cltd
nop
stos
xor
mov
push
loop
fwait
inc
pop
mov
out
lret
fisttpl
cmp
les
leave
push
lock
dec
loope
xor
pop
pop
ror
inc
or
popa
dec
outsb
rcl
in
cmpsl
jmp
mov
sub
lea
rcr
unpckhps
inc
sbb
test
std
mov
mov
lods
push
loop
punpckhwd
out
lahf
inc
pop
lock
pushf
dec
daa
mov
xchg
mov
sub
sahf
and
mov
fbld
lcall
push
mov
out
outsl
and
xor
mov
adc
outsb
mov
jae
xor
mov
xchg
sbb
lret
lret
dec
xchg
push
inc
add
sub
cwtl
jae
das
hlt
cmp
fsub
repnz
in
dec
pop
push
xchg
mov
movsb
test
mov
lods
int3
cmp
lahf
scas
sbb
out
mov
adc
ret
sbb
xor
xchg
addr16
push
pop
and
cs
jmp
adc
outsl
cwtl
adc
dec
int3
cmp
es
and
popf
jmp
xor
gs
stc
test
adc
movsb
clc
stc
mov
dec
ljmp
addr16
xchg
lods
out
dec
push
mov
xor
fwait
int
adc
and
cltd
xchg
insb
dec
test
into
test
je
fcmovne
mov
lcall
dec
in
cwtl
ror
out
add
xchg
rcll
sbb
mov
inc
xabort
dec
ja
fcoml
xchg
adc
orb
call
sub
mov
pusha
movsl
mov
outsl
pop
pop
fistl
dec
jb
scas
imul
push
pop
inc
outsb
cmp
mov
jp
paddusb
inc
xchg
cmpsb
or
in
adc
dec
lret
sbb
cmp
ret
push
in
xchg
dec
mov
sbb
mov
push
fcomi
ljmp
dec
lods
sub
or
lret
cmp
xchg
mov
and
enter
dec
loop
leave
xchg
les
cmp
push
pop
and
aam
call
jge
inc
inc
leave
pop
stos
jo
inc
xor
jecxz
hlt
aas
inc
lods
test
and
sbb
aas
sbb
arpl
nop
loop
rol
loopne
sbb
hlt
dec
or
jmp
mov
lods
cmp
push
ljmp
lret
xchg
xor
pop
ret
sahf
jae
adcl
dec
mov
xor
js
xchg
lods
mov
sbb
add
pop
in
mov
inc
cmp
or
out
push
jns
and
cmc
jo
imul
and
iret
sub
sbb
push
arpl
sbb
jnp
lods
xorl
in
in
ds
das
adc
xor
sbb
popa
inc
xor
loop
scas
filds
inc
xor
lods
cltd
mov
xor
push
in
pop
popf
repz
add
sub
subb
cmp
pushf
push
cmpb
imul
cs
xor
std
mov
imul
xor
movq
insb
mov
sbb
push
pop
adc
add
xorb
sub
adc
cld
jmp
sti
iret
push
sbb
pop
cmp
ljmp
les
pushf
dec
imul
iret
or
and
inc
in
or
loopne
adc
jge
push
xchg
inc
testb
xorl
jge
fwait
rolb
mov
and
jge
add
fcompl
xlat
adc
lods
and
cs
inc
scas
pop
lea
or
or
loop
or
add
xchg
rorl
jmp
in
xchg
fimuls
aas
add
ds
fistpll
ljmp
xchg
ret
les
add
mov
jp
addr16
mov
popa
sbb
push
and
fistl
sbb
or
cmp
out
js
xchg
pop
mov
loope
loop
roll
stos
sti
hlt
repz
xor
fstpl
mov
dec
pop
sub
test
popa
push
push
scas
das
out
mov
outsb
dec
and
inc
outsl
pop
jno
test
std
jb
xchg
or
inc
neg
lds
mov
sub
psubb
inc
insl
into
insb
mov
int3
in
push
shlb
pop
jecxz
sti
mov
bound
jns
xorb
pop
in
and
test
nop
out
adcl
dec
ljmp
jno
cmp
pop
test
lock
pop
sbb
movsb
leave
mov
popl
add
dec
in
das
jb
cmp
push
adc
mov
sbb
sarb
and
pop
mov
push
fldt
bswap
rcll
cld
repnz
jae
mov
rcrb
js
pop
jp
jge
popf
push
xor
lret
call
jne
and
mov
inc
negl
adcl
iret
nop
dec
sub
push
push
sbb
call
push
push
push
je
int3
or
xor
xlat
ror
aaa
cli
adc
cmp
out
cmpsl
outsb
jle
fstl
push
and
xchg
int3
cmp
mov
inc
sub
ljmp
fisttpll
jge
and
dec
movsb
imul
jl
mov
push
enter
bound
inc
movsl
xor
loopne
jl
or
lods
mov
and
dec
cld
insb
aam
les
or
cmpsb
jno
dec
jp
add
fwait
cmp
cmp
sub
cmp
aaa
fcmovne
iret
or
and
push
sbb
jne
shrl
push
fucomp
int
lcall
jle
call
mov
xchg
cmpsb
add
lcall
pushf
repnz
cmpb
jmp
addr16
mov
and
jo
xchg
mov
lock
mov
addr16
and
test
in
dec
push
aam
adc
outsb
movsb
test
or
dec
cmp
cmp
jmp
fs
and
sbb
add
push
mov
sub
push
and
jae
je
adc
xor
popf
dec
dec
mov
adc
pop
das
sub
dec
ret
inc
jge
inc
mov
cmpl
sub
sub
stos
repz
ja
packuswb
addr16
adcl
push
cmpsb
in
ret
cmp
lret
or
mov
mov
fs
pop
mov
pop
shll
sbb
int3
and
mov
out
jp
adc
incb
ret
jnp
lret
or
push
cmpsl
loopne
sub
push
mov
pusha
pop
cmpsb
push
fsubr
dec
adc
setle
in
mov
push
lods
jne
mov
dec
gs
adcb
leave
hlt
cld
or
mov
push
jmp
add
fcmovnbe
mov
or
sub
sarb
sarb
xor
lcall
out
fwait
dec
add
dec
out
cwtl
jecxz
shrl
arpl
mov
cs
adc
roll
and
iret
incb
sub
adc
clc
stos
es
adc
sahf
push
stc
out
cmp
iret
mov
aad
imul
and
clc
cltd
push
xchg
jo
pop
push
aam
ljmp
dec
add
mov
mov
push
or
je
lods
js
mov
add
mov
mov
pop
push
cmc
or
or
sub
leave
jecxz
cmpsb
cmp
das
loopne
mov
sbb
mov
inc
mov
ds
or
mov
or
ss
jo
pop
icebp
mov
daa
lods
mov
insb
cmpsb
test
pop
sub
cmpsb
dec
xor
hlt
dec
mov
mov
push
push
andb
adcb
pop
insb
in
jge
ret
inc
test
mov
jbe
mov
mov
mov
and
test
iret
mov
adc
push
in
push
data16
cwtl
sahf
cltd
sbb
dec
mov
es
arpl
dec
lcall
in
lods
fldcw
fnstsw
pop
sbb
add
aam
mov
xchg
jmp
xchg
xlat
pusha
insl
or
mov
fcomi
gs
sti
movsb
popa
popf
dec
adc
lcall
push
sub
jp
in
or
adcl
xchg
or
sub
xchg
in
or
sub
mov
ret
call
mov
and
mov
addr16
stos
add
xchg
cmp
les
xchg
mov
sbb
out
xchg
fidivl
mov
add
cmp
in
dec
movsl
or
popf
xor
jle
fisttps
add
push
lret
pop
mov
cli
inc
das
inc
jg
test
push
fmull
inc
cltd
fmull
push
dec
shrd
jb
movsl
lret
mov
dec
cmp
adc
cvttps2pi
add
cmp
or
inc
xchg
js
cs
jno
cmp
jg
addr16
xor
xor
push
mov
jle
loopne
ds
push
movsl
push
xor
mov
add
or
loopne
cmpsl
jl
xchg
inc
mov
mov
adc
push
add
lea
loopne
add
push
movsb
decb
xor
imul
jns
stos
and
xor
popf
addr16
mov
push
jne
outsb
notl
jg
repz
jmp
enter
sub
mov
xor
notl
loop
mov
popa
xchg
or
push
test
cltd
fmuls
jg
sbb
add
jp
pop
mov
stos
xor
push
rorl
and
mov
movups
add
mov
push
xchg
jb
insb
jbe
or
enter
mov
or
nop
pop
jecxz
mov
aad
int3
sbb
lahf
or
xor
icebp
adc
arpl
adc
out
add
push
lea
add
rcll
and
pop
push
pusha
pushf
popa
add
lahf
dec
outsb
ljmp
cmp
sar
daa
mov
scas
adc
movsb
mov
dec
inc
mov
and
pop
push
xlat
pop
xchg
adc
ds
jg
in
jp
fdivr
push
jo
sarl
imul
add
sar
mov
inc
push
mov
and
xor
xlat
dec
mov
rcrb
mov
add
ja
adc
pop
jg
mov
shlb
mov
mov
call
out
jecxz
lods
inc
jae
sbb
aam
or
push
outsb
cli
pushw
addr16
repz
push
sbb
sarl
loopne
push
repz
and
icebp
inc
jle
mov
mov
lcall
fcmovnbe
xlat
add
fimull
outsb
adc
imul
movsl
testb
jbe
mov
ja
sub
push
rcll
and
out
mov
dec
addr16
mov
aas
lea
dec
mov
icebp
iret
into
repnz
or
enter
mov
incl
mov
hlt
cmpb
and
mov
imul
and
aaa
sub
movsb
lret
neg
mov
inc
mov
cmp
jb
push
adc
pop
fnstcw
xor
aam
ljmp
int3
cltd
xorb
mov
shlb
rcl
mov
mov
cmpsb
xchg
mov
lahf
lods
sub
dec
je
call
aaa
les
sub
dec
xchg
lods
xchg
mov
ss
popf
xchg
push
and
cmc
add
outsl
pop
inc
jle
jmp
xchg
add
scas
mov
push
cmc
mov
in
jecxz
out
push
test
pop
in
shll
aam
xchg
in
ret
popl
xadd
subl
ja
mov
xlat
xchg
ss
cmc
mov
mov
inc
or
adc
push
ss
add
movsl
cmp
sbb
jge,pt
js,pn
mov
cmp
jbe
in
testb
test
fcomip
jnp
xorb
rolb
cmp
fucomp
call
xlat
push
mov
mov
xchg
sub
call
mov
out
xor
fs
mov
and
movsb
outsl
hlt
and
jecxz
sub
lds
scas
mov
int
jge
rorb
add
cmpsl
cwtl
pop
mov
mov
adc
dec
cwtl
sbb
cli
pop
sti
arpl
pop
loopne
jno
repz
call
dec
dec
int
adc
imul
lods
xchg
or
jmp
repnz
sub
out
or
push
lahf
lcall
pop
or
int3
stc
sub
mov
dec
jg
pusha
dec
cmp
int
cmp
jge
bound
sub
das
push
sbb
xchg
push
adc
bound
cli
pop
push
mov
repz
negb
test
push
lock
inc
push
xchg
add
fnstcw
bound
lcall
fmull
xchg
sbb
ror
test
fsubrs
sbb
add
add
fisttpl
movsb
lret
adc
std
adc
hlt
mov
inc
lea
fistps
cmp
jo
pop
scas
into
inc
cs
sub
dec
add
loopne
inc
and
xchg
inc
push
sub
sub
mov
dec
sub
mov
loop
hlt
sub
sbb
mov
push
sub
xchg
mov
imul
frstor
sbb
add
jmp
jge
ja
cld
mov
rcll
mov
xchg
jecxz
cmpl
fiadds
or
jmp
into
inc
dec
js
int3
xor
sub
jbe
imul
rcrl
sub
adc
addr16
les
jo
jno
sbb
lods
adc
pop
ss
fwait
xor
jp
out
rcrl
test
lock
adc
fcmovnu
pop
lcall
xchg
loope
jle
movd
ljmp
jae
pusha
lahf
dec
pop
xor
pop
add
sbb
pop
xchg
cmp
adc
sbb
js
jbe
add
push
jb
cld
cmpsl
setbe
mov
in
shl
pop
pop
ss
mov
jnp
mov
jecxz
iret
sub
test
jg
loop
lds
sub
outsb
sbb
lds
add
arpl
neg
add
data16
mov
fidivs
dec
inc
popa
leave
jbe
repz
scas
mov
imul
pop
xorb
push
clc
mov
add
fwait
sahf
enter
repz
and
shlb
into
lret
jecxz
jne
cmp
popa
cmp
negb
pop
fisubs
adc
out
rcl
outsl
pop
mov
out
ret
ss
jp
movsb
jl
xor
and
xchg
out
iret
jg
mov
add
xchg
filds
mov
mov
fisttpll
gs
jle
roll
inc
sub
icebp
dec
jo
xor
mov
jnp
shll
push
sub
push
mov
adcb
mov
or
fucomi
sti
xor
add
in
daa
mov
popa
pop
and
pop
pop
leave
enter
fidivrs
pop
add
push
mov
test
ret
cmp
xchg
adc
stos
dec
inc
sbb
mov
out
lcall
xor
or
push
addr16
pop
adc
cmp
or
notl
xor
and
je
add
sub
jecxz
int3
jmp
push
stc
add
scas
cmc
cmp
aaa
or
push
sarl
or
repnz
arpl
scas
add
mov
push
lret
add
lret
sbb
ja
fcom
je
xchg
jns
push
cmp
sub
push
lock
iret
push
sub
stc
inc
ljmp
inc
sub
cmpsb
inc
seto
sub
dec
pop
rcr
mov
mov
push
inc
and
jns
push
dec
fwait
jb
shl
cmp
or
jge
cli
add
es
inc
movsl
pushf
xlat
call
sub
or
popf
or
sti
sub
dec
popa
inc
dec
loope
mov
aaa
das
loopne
aad
or
mov
adc
mov
inc
jl
pop
dec
js
mov
dec
mov
push
inc
or
aam
fcoms
in
mov
cwtl
notb
xor
mov
iret
movsl
push
adc
inc
pop
out
clc
test
mov
push
and
jecxz
clc
std
or
pop
out
sbb
in
xchg
push
outsb
shll
jp
jg
dec
jmp
lret
mov
repnz
sub
sbb
adc
or
inc
adc
dec
icebp
xchg
mov
xchg
jge
and
inc
cwtl
push
lock
cs
pop
cmp
rorl
nop
ret
stos
fnstenv
cmp
ficomps
in
sar
fdivrs
inc
xchg
stos
push
adc
mov
cltd
in
xlat
in
pop
aam
or
cs
dec
test
loop
aaa
ds
inc
mov
fs
scas
ret
arpl
popf
enter
adc
or
int
into
sub
inc
and
cli
push
mov
inc
mov
pminub
jmp
dec
fsubs
xchg
ss
js
push
jo
icebp
aaa
bound
enter
inc
lret
and
inc
inc
cmpsl
mov
sarb
adc
and
adc
call
sub
mov
lds
jns
nop
cmp
fldenv
mov
ss
nop
insl
mov
cmp
push
or
sbb
add
sbb
adc
pop
mov
lds
popf
dec
in
stos
add
inc
inc
and
pop
incb
into
xchg
scas
adc
mov
jl
mov
flds
mov
sub
add
roll
pcmpgtw
lods
cmp
adc
mov
fmul
dec
ja
aam
jae
pusha
xchg
add
out
adc
fs
mull
mov
inc
inc
test
aam
loopne
or
push
pop
jge
add
popa
cmp
roll
out
add
mov
mov
andb
test
inc
lods
pusha
out
cmp
mov
inc
outsb
jp
fwait
mov
cmpb
inc
and
scas
hlt
and
xor
je
lret
pop
repnz
mov
cmp
test
aam
cltd
or
push
dec
js
pusha
mov
les
cmpsl
adc
sub
imul
out
fbstp
mov
cs
mov
js
fstpt
loopne
js
popa
dec
lcall
mov
cmp
or
dec
sbb
jae
add
hlt
fmulp
test
insl
xchg
pop
push
mov
in
sbb
cwtl
jl
dec
std
xor
repz
mov
dec
shll
dec
out
mov
arpl
je
dec
mov
insl
loopne
ret
dec
mov
jmp
stos
cli
jg
aad
add
xchg
loop
cmp
adc
mov
repnz
cmp
inc
adc
dec
int3
xchg
dec
push
lds
addr16
aaa
cmp
movsb
inc
add
mov
xchg
mov
push
mov
dec
sub
fnsave
popf
rorb
repz
outsb
jns
adc
fs
stos
sbb
mov
out
inc
pop
xchg
or
push
outsb
jb
lods
and
cltd
sub
mov
sbb
mov
rcrb
ret
loop
jo
mov
out
dec
adc
leave
jo
pop
movsl
dec
rcll
mov
add
pop
adc
das
pop
xor
subb
sub
repz
ret
pop
repnz
sbb
inc
inc
dec
insl
insl
les
mov
lcall
dec
lcall
inc
pop
cmp
imul
fcompl
imul
jns
cmp
rcrl
shlb
xacquire
lods
mov
stos
in
sbb
into
pusha
cmc
in
add
jecxz
inc
pop
lods
inc
popf
jae
xchg
lahf
clc
fstps
nop
mov
mov
stos
jl
and
imulb
push
jb
jg
or
inc
mov
sub
push
xor
mov
jecxz
ret
jae
loopne
mov
cmpsb
dec
sub
mov
xor
cltd
cmp
loope
push
jb
addb
shrb
int3
les
loop
lahf
ljmp
jae
mov
sbb
push
adc
adc
sub
rcrl
nop
subb
insl
xlat
lahf
out
xchg
mov
popa
mov
js
lahf
inc
mov
ljmp
cmpsl
and
add
mov
pop
cwtl
adc
mov
je
mov
ja
sti
sub
mov
sub
push
lods
sub
clc
cld
sbb
daa
xchg
or
add
jns
popf
ljmp
jo
xor
shl
sbb
push
jne
mov
out
jl
fucom
gs
enter
inc
sbb
cmp
and
fnstsw
adc
ja
cli
ret
pop
mov
jnp
stos
mov
test
pusha
mov
inc
leave
mov
cwtl
sub
fimuls
fisttpll
adc
push
and
ja
dec
dec
or
cmp
mov
lds
in
cmp
int3
mov
inc
jo
aad
xchg
ds
cmp
dec
stc
dec
les
les
imul
rolb
popa
cli
mov
adc
daa
aam
mov
mov
ret
sub
enter
xor
lock
mov
sub
cmp
and
lret
sub
outsl
js
pop
sbb
push
mov
pop
cmp
mov
inc
cld
mov
push
gs
adcl
inc
push
ret
dec
insl
xlat
pop
mov
mov
cmp
fsubrs
sub
inc
push
dec
addr16
sub
int
xor
push
xor
lcall
xor
xor
adc
sbb
mov
and
cmp
add
add
loop
enter
dec
fldl
pushf
mov
int3
and
scas
rcll
fsubrl
inc
clc
sub
nop
sahf
lock
pop
ret
xor
inc
mov
dec
mov
mov
dec
mov
lods
cwtl
sub
mov
adc
cld
loop
xor
xor
cmc
lea
lea
pop
pop
pop
int
or
lcall
mov
mov
adc
icebp
repnz
mov
test
sub
mov
mov
lahf
cmp
test
and
cmpsl
in
jp
outsb
cmp
mov
dec
enter
sar
mov
cmp
stos
sub
mov
fxch
mov
sarb
es
sub
mov
dec
ljmp
mov
mov
setae
mov
test
lcall
loopne
repz
pop
divl
in
jl
cmp
fcmovnb
std
in
outsb
test
xchg
or
mov
nop
in
sbb
pop
inc
stc
xchg
jne
adc
sahf
jae
xchg
add
bound
mov
mov
adc
cmc
aad
movsl
rolb
jp
ja
pop
inc
pop
xor
shlb
aaa
jp
mov
push
mov
aaa
xchg
add
lea
adc
nop
fnsave
ljmp
pop
adc
sahf
call
notl
sbbb
xchg
mov
aam
popa
loopne
dec
iret
into
sub
ret
xor
xchg
inc
pop
mov
cmp
addr16
cmp
xchg
mov
cmp
cmp
pavgb
push
add
in
pop
ja
out
pop
jb
ds
jle
mov
scas
out
daa
mov
sbbl
add
mov
mov
xor
shl
bound
mov
bound
icebp
std
cld
stc
stos
in
mov
fisubl
mov
sbb
dec
sbb
sbb
cmp
cmc
mov
adc
mov
in
repnz
pop
arpl
mov
fistps
pop
call
jne
xchg
jns
mov
add
aad
outsl
push
aaa
ficompl
lea
jbe
test
sbb
jmp
mov
cld
mov
mov
jmp
cmp
add
mov
fdivp
mov
mov
cmp
outsl
xlat
push
pop
cs
das
sarl
iret
sbb
stos
stc
xor
jno
icebp
add
pop
data16
rcrb
jb
sbb
mov
and
in
arpl
test
in
dec
sbb
mov
push
push
inc
bound
jl
leave
ss
jmp
jmp
decb
push
xchg
mov
pusha
mov
movsb
dec
gs
stos
xchg
dec
jnp
push
inc
fisubs
inc
imul
arpl
lods
or
adc
shlb
fldenv
sub
aas
movsl
add
push
std
or
push
cmp
test
mov
push
std
fidivrs
loopne
mov
mov
sbb
and
jbe
shrl
jne
lret
fs
fcomps
lret
cltd
mov
xor
pop
subl
repnz
mov
scas
scas
loopne
scas
sbb
hlt
ret
jg
pushf
mov
xor
mov
movsb
jl
xchg
cmp
sbb
jbe
loop
xor
dec
mov
rclb
jge
call
mov
or
mov
aaa
enter
dec
lock
pop
sahf
iret
lods
call
movsl
push
jle
cmp
scas
jb
xor
pop
mov
inc
gs
ds
adc
rol
pop
push
aam
imul
sbb
inc
fldenv
pop
xchg
push
fidivrs
loop
bound
lods
xchg
out
jmp
mov
adc
icebp
les
pop
popa
mov
mov
or
shrl
enter
jno
cmp
sti
mov
dec
data16
insb
adcb
xchg
xor
or
add
je
insb
in
test
dec
stos
punpckldq
lcall
add
mov
scas
cmp
pop
xor
mov
and
lahf
push
sub
aam
pop
xchg
add
scas
mov
mov
hlt
sub
aad
andb
adc
lcall
push
fnstenv
add
iret
add
sbb
sub
jo
nop
out
jmp
out
push
push
pop
outsl
inc
mov
movsb
pop
mov
lods
out
dec
add
out
xor
xor
and
mov
insl
in
sbb
push
or
dec
ds
mov
std
mov
movsl
outsb
xor
enter
mov
xor
shrb
mov
call
sub
mov
push
dec
dec
jg
mov
lods
mov
adcl
test
pop
cmp
repz
xlat
dec
mov
or
fs
lods
and
push
ror
enter
shrb
cmp
insl
mov
movsb
cmp
pop
xchg
mov
aad
adc
test
or
test
adc
adc
jge
inc
ss
dec
shlb
mov
iret
jnp
lock
or
jns
shlb
push
fstps
test
aad
jp
push
and
fisubs
arpl
test
in
pop
fildl
fistps
in
jmp
mov
pusha
or
cwtl
shlb
stos
out
loope
into
jno
out
mov
dec
sbb
popf
sub
cmc
nop
test
cltd
fists
sub
inc
test
mov
out
addl
aam
push
mov
jmp
inc
fcompl
adc
aad
fs
jmp
lock
sbbb
ret
push
push
outsb
adc
sub
ja
xor
xchg
sub
sub
aad
adc
stc
sbb
js
sub
sub
cmp
imul
enter
insb
push
cmp
out
push
pusha
adc
fdivl
pop
into
imul
outsb
aad
iret
hlt
aad
out
jb
sbb
push
mov
stc
cmpsb
call
les
inc
dec
cmp
dec
pop
cmp
jecxz
jns
adc
push
dec
push
lahf
pop
lret
lods
sbb
xchg
jge
xchg
das
jns
lcall
lods
lods
not
jns
jnp
mov
andl
test
xor
pusha
fnstenv
jecxz
lahf
roll
mov
jo
dec
xor
aad
outsl
mov
pop
out
aam
or
out
hlt
mov
jge
xchg
enter
mov
aam
scas
dec
xchg
jle
aad
fs
xchg
lea
pop
adc
mov
xchg
push
lods
in
xchg
mov
movsl
add
fmull
dec
mov
xchg
out
inc
pushf
ret
xor
and
adcb
scas
jnp
or
cld
pop
xchg
out
fsubrl
inc
cmpsb
jo
adc
test
pop
sbb
xchg
sbb
in
xor
ficoms
cld
mov
jnp
cmp
jnp
rcll
test
jns
and
insb
test
xor
movsl
mov
repnz
sub
xlat
cmc
add
adc
sahf
sub
sbb
pop
xor
sbb
inc
pop
pop
add
mov
loopne
adc
lods
fstl
enter
mov
lahf
sub
es
xchg
shr
or
loopne
jmp
fidivrs
fsubs
mov
inc
rcrl
or
inc
repnz
sbbb
inc
aam
sub
cmp
mov
in
shlb
adc
ficoms
jns
jl
mov
test
pop
jge
data16
or
cmp
inc
inc
aas
arpl
sbb
xor
xchg
jp
addl
jbe
bound
ljmp
sahf
leave
xor
in
push
call
add
icebp
call
rcrb
js
cmpl
push
fstl
insb
xchg
adc
push
xchg
xor
add
add
inc
push
mov
dec
push
push
push
sbb
arpl
lcall
mov
into
jns,pt
and
cmp
mov
into
in
mov
into
clc
ja
push
mov
sub
int
je
scas
mull
pop
pop
mov
mov
mov
sti
shlb
xchg
inc
jge
sbb
jle
mov
xor
in
jae
pop
push
pusha
add
dec
mov
in
int
xchg
out
sub
and
jnp
andl
push
out
or
int3
mov
jns
sub
ret
cmp
ret
faddl
or
jnp
pop
pop
adc
iret
mov
dec
hlt
dec
dec
inc
jp
sbb
fstpt
cld
bound
outsb
xchg
insb
or
fwait
jae
lret
cmc
inc
enter
shl
jmp
cmc
cmp
int3
pop
adc
in
push
inc
scas
push
jae
sub
test
sub
cwtl
push
insl
das
mulb
call
mov
xchg
or
test
in
fldcw
lock
daa
loope
shl
jno
inc
mov
sub
clc
sub
sarl
sahf
lahf
mov
sbb
pop
aas
faddl
mov
jge
cld
sbb
mov
out
sbb
cmp
popa
sbb
mov
mov
xchg
jle
pop
lret
test
pop
and
add
sarb
mov
sbb
sbb
iret
ret
push
insl
add
stos
or
stc
push
fsubl
mov
adc
mov
xchg
or
cld
lea
mov
lahf
pop
lcall
xchg
dec
push
lea
push
cmpsb
sub
into
add
sbb
xchg
sbb
mov
push
js
leave
in
ficompl
or
mov
xchg
mov
icebp
or
cmp
outsl
or
addr16
dec
cltd
jns
fists
out
inc
sub
loopne
xchg
adc
loopne
pusha
imul
jge
dec
sub
lret
or
or
mov
ret
mov
mov
push
jp
mov
cmpsb
enter
mov
std
rcrl
bound
add
pushf
mov
sub
sub
xchg
inc
push
mov
jg
je
push
adc
cmpsl
xor
fistl
jno
mov
pushf
pop
sarb
mov
cltd
repnz
scas
xchg
or
push
shlb
jo
and
and
dec
add
dec
push
jns
mov
mov
aam
and
mov
dec
dec
pushl
mull
fisttpll
inc
iret
insb
and
cs
repnz
adc
dec
push
movsl
icebp
outsb
pop
arpl
cmpsl
xor
mov
adc
jbe
stos
pop
push
jle
shlb
fadds
jo
jnp
lods
cmc
and
arpl
fbstp
cwtl
es
jb
xor
aad
push
xchg
pop
jl
mov
es
pusha
in
in
cld
pop
mov
push
ljmp
cmc
jbe
add
in
add
inc
push
jbe
sbbl
lret
add
arpl
dec
mov
fdiv
push
jg
out
fmul
or
ja
popa
fcompl
mov
pushl
and
fists
gs
fldz
adc
fidivrl
hlt
adc
orb
mov
aam
data16
rorl
xchg
mov
lods
sbb
aam
sub
stos
rol
pop
mov
mov
int3
adc
popa
and
jecxz
and
jno
rcl
push
in
mov
pop
or
or
in
cwtl
and
jbe
fs
hlt
pop
pop
adc
pop
fcomps
std
dec
mov
fcmove
test
push
dec
and
jp
mov
mov
ss
dec
cwtl
xchg
stc
push
dec
adc
xor
mov
mov
xlat
or
hlt
pop
adc
adc
push
pop
roll
lahf
movsb
fwait
cmpsl
pushf
jle
subl
push
cwtl
cmp
jmp
cwtl
and
cmp
mov
jo
stos
adc
ja
fwait
mov
and
ss
jle
xchg
mov
mov
cmp
jb
or
dec
or
mov
fsubrs
inc
sahf
ja
cmpsb
popa
fstpt
scas
mov
sub
ja
mov
negl
bnd
sbb
int
jecxz
sub
fs
and
mov
in
sub
sbb
sti
xchg
std
and
adc
xlat
mov
push
stc
adc
lods
lret
pop
lret
jae
fistps
dec
mov
test
into
aaa
xchg
push
xchg
push
and
mov
jmp
rorb
mov
sub
push
and
mov
addr16
sbb
sbb
pop
fildl
bnd
decl
pavgb
jo
repnz
outsb
sbb
jmp
dec
inc
jecxz
incb
mov
in
icebp
pushf
jnp
mov
or
cmp
ficomps
xchg
insb
movsl
lret
insl
adc
in
and
shl
adc
outsl
imul
test
pop
pusha
insl
mov
in
pop
pop
cmp
adc
add
dec
popf
mov
in
mov
sub
call
and
lods
repz
or
xlat
dec
xchg
pop
sbb
push
mov
cld
xchg
loope,pt
hlt
bound
lahf
lods
sbb
push
xchg
cltd
hlt
jle
xor
test
inc
mov
xlat
jnp
pop
xchg
dec
fbstp
dec
and
and
jecxz
dec
mov
and
mov
and
dec
push
sbb
xor
xchg
adc
arpl
mov
jg
andb
test
loope
outsb
sub
sub
sti
bound
sbb
movsl
aad
xor
test
adc
es
mov
pop
mov
pop
mov
or
lret
les
jmp
xchg
es
out
pop
push
jae
js
into
pushf
pop
cltd
xor
shlb
shr
pop
sahf
call
xor
mov
mov
stos
in
lea
int3
clc
inc
sub
cmp
sahf
sub
jg
pop
je
mov
loope
push
fildll
das
mov
mov
pop
or
mov
jge
mov
mov
adc
fstl
dec
xlat
sbb
aas
fimull
or
adc
push
rorl
xchg
cmp
lock
test
xchg
add
jb
lds
jbe
cmp
push
rorb
fisttps
pushf
fistl
or
mov
movsb
xchg
mov
jbe
fst
mov
pop
mov
ret
inc
jno
lcall
or
outsl
mov
out
pop
js
add
xor
rclb
jge
loopne
dec
mov
xchg
lds
cmpsl
mov
push
ja
and
mov
inc
nop
insb
cmp
das
and
add
dec
lds
movsl
fstps
mov
insb
add
ret
lret
pop
test
jecxz
jno
cmp
add
scas
xchg
push
xor
das
ret
cmpsb
out
sub
mov
inc
cwtl
mov
out
mov
int3
inc
push
sti
xor
sbb
hlt
inc
xor
inc
sbb
scas
lea
mov
mov
push
sbb
adc
aaa
orl
dec
mov
dec
push
ret
and
pushl
test
push
add
cmp
setge
je
push
in
mov
pop
push
leave
test
js
repnz
push
inc
push
mov
les
sti
ljmp
pushl
jg
jge
lock
scas
shlb
gs
pop
mov
pop
xchg
xchg
xchg
xlat
loopne
shrb
dec
pop
adc
in
ja
or
fnstsw
and
add
xchg
aad
imul
icebp
sbb
outsb
fcoml
out
inc
lret
push
rorl
add
mov
in
push
push
sub
adc
xor
arpl
and
nop
stos
jnp,pn
repnz
sti
lods
adc
ret
cmpsl
dec
jg
push
and
loopne
push
cwtl
cwtl
push
stos
push
xchg
pop
das
lret
sub
dec
icebp
and
push
sub
pop
in
push
ljmp
and
or
cwtl
scas
fsubr
xchg
cmp
or
imul
lea
mov
imul
pop
test
movsb
arpl
push
fisttpll
or
inc
arpl
inc
sbb
outsb
mov
sub
cmp
jmp
cli
add
cld
pop
fistpll
xchg
xchg
mov
popf
sti
fstl
dec
shlb
lods
xor
push
push
adc
popf
mov
movl
or
xchg
xor
inc
rorb
xchg
shrl
xor
or
cmp
cmp
mov
sub
aad
adc
sub
jge
pop
mov
or
popa
jp
push
mull
xchg
mov
xchg
rcrb
loopne
adcl
aad
loop
push
out
loope
push
jge
dec
std
leave
clc
lret
pop
push
xchg
pop
cmp
pop
push
rcll
sbb
popf
pop
mov
mov
jmp
lahf
lea
sbb
je
mov
cmc
sbb
jl
fildl
adc
arpl
cld
in
in
cmp
sbb
decl
and
mov
or
mov
nop
lods
sbb
stc
outsl
cmp
rcll
adc
pop
cmp
dec
lcall
add
xchg
dec
arpl
sbb
push
test
scas
data16
and
sbbl
mov
jl
xchg
add
and
pop
push
pusha
outsb
out
add
mov
fnstcw
cltd
pop
and
in
pop
arpl
dec
and
shrl
ret
dec
xchg
stos
in
xchg
orl
mov
loopne
pusha
xor
orb
ljmp
pop
lret
mov
repz
hlt
jne
push
add
mov
daa
sbb
cwtl
pop
repnz
int3
and
mov
mov
inc
mov
mov
fadd
jecxz
add
daa
iret
daa
aas
mov
jge
xor
popa
jno
add
subl
scas
movb
loop
pop
test
mov
jle
and
xchg
adc
and
mov
inc
rol
in
cmp
cmpps
jae
and
cmp
and
push
aaa
jo
aam
int
inc
dec
xor
mov
test
push
dec
int
jecxz
mov
and
icebp
jg
stos
inc
int
inc
andps
mov
mov
insb
push
mov
stos
jge
loopne
sti
outsl
xor
xor
iret
and
cmpsb
shlb
fimull
and
jns
mov
pop
ret
push
std
in
inc
or
mov
ss
add
in
sub
cs
fwait
adc
pop
arpl
int3
push
cmp
pop
push
pop
int3
mov
sarb
mov
sub
sbb
jp
lret
mov
mov
xchg
jo
dec
data16
pop
cmp
add
add
pop
mov
jae
push
pusha
test
xor
nop
mov
jmp
xor
push
gs
sbb
lea
insb
cli
jb
mov
test
fimuls
inc
andb
insb
imul
bound
sti
das
mov
ja
push
xchg
lods
jg
sbb
mov
pop
add
rorl
inc
jne
push
jmp
daa
mov
popa
lods
ret
mov
jle
xchg
mov
into
cwtl
jmp
mov
int
jo
xor
pop
ret
xchg
shll
sbb
push
cli
sahf
and
and
rorb
ja
in
out
aas
ret
jae
ret
add
mov
stc
lods
add
push
imul
fdivl
mov
xor
in
test
insl
test
mov
stc
mov
cmp
push
rorl
pop
push
sub
pop
xchg
stc
int3
mov
xchg
aad
push
pop
adc
rcrb
dec
fdivrs
sbb
into
cmp
push
repz
clc
hlt
pop
sub
xor
lret
xchg
stc
or
dec
mov
mov
xchg
insl
inc
cmp
lret
cltd
jbe
xchg
repnz
sbb
fwait
xorb
fldenv
pop
xor
inc
mov
fs
jne
cwtl
mov
idivb
lods
jne
mov
cwtl
push
xchg
inc
dec
ja
xchg
ret
scas
sub
cltd
lods
adc
mov
or
loope
cli
xor
adc
call
sarl
push
std
and
mov
xchg
hlt
adc
adc
fstl
sbb
jp
out
data16
rcll
into
mov
lahf
fcoms
pop
repnz
cmc
lret
dec
and
pop
push
inc
sahf
lret
outsb
and
loopne
push
stos
out
sbb
div
pop
outsl
ljmp
dec
data16
insb
xchg
daa
dec
pop
or
adc
or
les
adcl
mov
cmc
jmp
add
ds
rorl
adc
mov
push
stc
cmp
push
lret
mov
xlat
mov
dec
test
sub
sub
sbb
ret
insb
xor
movsb
shlb
adc
sbbl
sti
xchg
cmp
pop
mov
and
mov
mov
push
adc
stos
hlt
jbe
cltd
test
push
mov
ret
insl
testb
lcallw
int3
rcll
mov
rcr
roll
jle
inc
sub
push
xchg
data16
inc
mov
add
out
xchg
movsl
mov
sub
xchg
pop
mov
popa
cmpsl
into
aaa
add
pop
xor
daa
pop
push
cvtdq2ps
sub
out
add
mov
pop
getsec
mov
jbe
inc
xchg
xlat
lods
jg
mov
or
inc
sbb
dec
cmp
inc
mov
xor
mov
daa
mov
xchg
aad
lds
and
ljmp
add
jl
jecxz
sub
dec
dec
xchg
inc
jmp
in
mov
mov
test
xor
lods
pop
scas
push
mov
inc
inc
adc
fwait
cmp
fwait
sub
mov
pop
and
inc
enter
or
pop
inc
rol
cld
mov
enter
rolb
ds
push
xor
xchg
not
shll
and
out
pop
fsts
pop
push
push
pop
push
cmp
lods
sub
cmc
inc
inc
movsb
inc
das
lea
test
add
mov
add
fcompl
jbe
or
sbb
cmp
test
jno
sub
pop
call
orb
movl
lds
std
dec
jae
ret
cmp
push
xchg
pop
and
xchg
mov
cmc
iret
pushf
jb
cmpsb
movsl
mov
stos
mov
mov
es
xor
addl
lock
movd
test
lcall
clc
dec
test
ja
movsb
xchg
int3
xchg
mov
pop
push
inc
inc
std
icebp
xor
adc
jecxz
js,pt
mov
dec
jb
dec
push
in
push
lahf
ljmp
scas
std
sub
pop
loope
test
xor
lret
xlat
lahf
aad
mov
out
adc
cmp
enter
shl
add
pop
and
push
cwtl
dec
pop
push
xor
pop
pop
pop
roll
insl
pop
icebp
test
xchg
fistpl
and
push
jnp
sub
dec
mov
outsl
push
in
lret
dec
fsubrl
data16
pop
faddl
inc
out
xchg
dec
adc
sbb
filds
enter
cs
pushf
push
jbe
sti
mov
outsl
test
loop
sbb
adc
mov
stos
mov
xchg
pop
shl
pop
out
xor
xor
mov
in
sub
divb
pop
sahf
push
pop
fwait
dec
pop
pop
sub
dec
insl
test
xchg
stos
push
orb
dec
xlat
popf
test
xchg
pop
jne
mov
insb
mov
dec
sbb
or
cmp
int3
fdivr
mov
movsl
or
add
sbb
xchg
mov
cmp
sub
pop
mov
outsl
mov
test
or
mulb
mov
push
jle
sub
les
mov
shrb
mov
push
inc
std
out
xor
sbb
repnz
dec
sub
pusha
ss
sub
faddl
pop
in
hlt
sub
data16
push
insb
and
pop
stos
sub
cmpsb
inc
sbb
and
lods
and
scas
xor
xchg
cmp
in
scas
lcall
or
lret
scas
add
sub
mov
pop
in
dec
rolb
push
popa
shrl
stos
jge
stos
insl
cmp
push
mov
not
cs
xchg
insb
xor
sbb
mov
xor
mov
imul
or
xchg
fs
pop
rcrb
dec
mov
push
insl
sahf
xchg
clc
jmp
int3
xor
pushf
mov
xchg
data16
xchg
out
insl
out
aam
xor
lea
xor
xchg
mov
dec
pop
das
call
mov
jns
xor
jb
xchg
lock
mov
test
or
dec
roll
or
jb
sti
mov
in
ficompl
adc
sub
testl
iret
fstps
cltd
mov
jecxz
dec
aas
lahf
xor
push
push
mov
mov
outsb
and
jecxz
or
pop
aas
pusha
xchg
test
fimuls
jp
fstl
pop
jnp
jmp
sbb
inc
mov
into
jbe
lock
andl
in
xchg
lods
xchg
out
sub
imul
enter
push
sub
xchg
xchg
xor
sbb
jp
pop
js
cmp
or
xor
mov
pop
xchg
or
std
scas
mov
mov
pop
mov
or
pop
lcall
aas
mov
mov
adc
movl
es
daa
push
daa
sti
mov
std
sahf
rclb
and
je
jecxz
fidivrl
push
xor
lods
mov
and
pop
dec
shlb
fs
ss
std
fisttpl
cmc
push
mov
mov
mov
pop
xchg
cmp
shrl
sti
pop
and
leave
cmp
shlb
repz
cmp
icebp
fisubrs
or
pop
push
ss
ja
xchg
subl
mov
insb
jg
mov
nop
push
bound
xlat
cmp
mov
pop
xor
xchg
sub
mul
push
sbb
lods
push
push
inc
mov
scas
mov
cli
mov
pop
sub
neg
xchg
aas
int3
iret
les
cli
shl
lds
pop
xor
sbb
daa
insl
push
add
dec
aas
rol
popa
movsb
pop
jp
fidivrl
mov
mov
rcll
mov
mov
mov
cmp
loop
lea
iret
ljmp
add
and
les
je
add
lcall
adc
test
pusha
xchg
xchg
sub
pop
jg
mov
ljmp
sub
std
orb
jle
clc
xlat
add
and
push
push
out
pusha
xchg
push
sub
jne
movsb
push
mov
sbb
mov
pop
into
std
dec
or
push
fsubrl
sbb
icebp
movsb
sbb
jns
add
and
cltd
insl
mov
aam
loope
jp
outsl
jns
ja
fdiv
pop
lock
push
push
loope
nop
repnz
fmul
xlat
inc
pop
xchg
add
cmpsb
mov
test
sub
cmp
decb
mov
jno
cmp
aaa
ret
sbb
lds
shr
aam
pop
mov
jo
lock
daa
adc
movsb
repnz
sti
fdivs
aaa
fidivrs
mov
push
inc
inc
scas
cmc
xor
push
and
pop
jmp
cmp
mov
pushf
scas
aaa
pop
shll
xlat
fldenv
push
iret
mov
mov
mov
mov
inc
mov
xor
sbbl
enter
mov
cmp
je
or
pop
sti
enter
inc
out
mov
mov
aas
dec
mov
es
call
subb
rcl
push
in
fwait
lock
jmp
lcall
subl
or
lahf
movsl
mov
cmp
jno
push
adc
jae
push
mov
sbb
sbb
movsl
call
xchg
int3
shl
fimull
jne
leave
jno
mov
adc
jne
and
hlt
aad
arpl
xor
sarl
pop
dec
cs
xchg
push
push
lock
inc
out
xor
scas
in
stos
outsl
jg
maskmovq
idivl
dec
in
push
aam
xchg
outsl
and
pusha
test
and
aam
bound
and
xor
jo
or
mov
xchg
iret
arpl
inc
popf
and
or
popa
and
out
xchg
cmpsb
leave
or
pop
outsl
dec
imul
rcrl
or
in
push
std
xlat
push
dec
mov
or
iret
and
cs
push
push
dec
jo
dec
pop
cs
sbb
lret
sar
add
loope
mov
or
and
jl
xchg
ret
mov
repnz
and
mov
fistpll
data16
pop
sub
mov
aaa
xor
jb
pop
insb
dec
shr
popf
mov
push
push
adc
push
inc
adc
pop
daa
cltd
push
sbb
ja
mov
movsl
jecxz
lret
out
loope
lret
loop
jl
in
cmp
pop
leave
and
sbb
repz
inc
cmp
dec
ret
jo
cs
gs
mov
sbb
cmc
dec
testb
mov
mov
fisubrs
outsl
ret
cmp
pusha
rcrb
or
shll
xchg
inc
lcall
lds
push
jae
stc
xor
inc
aad
ja
in
enter
inc
mov
pop
pop
mov
loopne
mov
cli
mov
aaa
mov
incb
dec
push
insl
jnp
xor
adc
hlt
mov
xchg
push
sub
cwtl
lret
repz
jno
lcall
cli
add
cmp
daa
jae
push
nop
push
and
add
hlt
push
and
xor
ljmp
adcb
or
mov
or
pop
shlb
scas
jo
cmpsb
shrl
jbe
or
push
mov
lods
jno
mov
dec
jge
cltd
push
sbb
rcll
popa
in
jne
pop
test
icebp
pop
lods
iret
sbb
test
nop
out
dec
push
jne
pop
insb
mov
pop
mov
xor
in
lock
mov
mov
jo
push
test
jmp
sub
or
lods
out
jp
mov
arpl
jns
fsubrs
movb
mov
push
stos
adc
inc
dec
mov
jmp
sub
inc
lds
mov
and
mov
mov
pcmpeqw
popa
inc
in
and
in
stos
data16
sub
xchg
add
xlat
mov
push
xor
fwait
movsb
out
sbb
adc
loope
jno
into
icebp
fidivrl
andl
adc
push
mov
sti
add
push
xor
mov
pop
sbb
xchg
imul
and
lcall
jb
lahf
add
addb
iret
std
std
cltd
into
lret
out
addr16
add
jns
arpl
popa
test
cmpsl
jg
push
popa
out
mov
jae
into
icebp
lret
lret
pop
mov
out
jo
adc
stos
inc
in
ja
mov
sbb
sbb
outsl
dec
setle
inc
negl
mov
mov
rol
xor
call
mov
in
sub
addb
test
scas
dec
in
mov
js
sbb
xor
or
sub
out
mull
push
add
jbe
inc
pop
mov
push
xchg
std
dec
adc
cs
scas
jbe
jns
mov
dec
jge
fsubr
cmpsl
cld
sbb
jmp
pop
dec
inc
stos
stc
aas
cs
in
ss
mov
sub
test
cmpsb
popa
xchg
mov
test
mov
daa
push
mov
loopne
mov
stos
leave
testb
fwait
jno
xchg
push
and
lret
out
mov
repz
and
daa
mov
paddusb
add
sbb
popa
xchg
jmp
nop
ja
push
xchg
dec
das
cli
lods
div
in
std
or
xor
int3
push
sahf
dec
daa
dec
pop
inc
test
sub
mov
sub
mov
loope
inc
call
jbe
xchg
mov
fbstp
pop
aad
dec
xchg
jns
sub
cld
pusha
push
add
scas
fstpl
sbb
shr
ret
or
adc
cmp
inc
pop
pop
cmpsb
nop
lret
jp
sti
gs
into
jno
xchg
inc
xchg
jns
daa
es
or
sbb
or
fisttps
fstps
dec
cmpb
scas
push
pop
mov
imul
insb
adc
adc
ret
rcrl
lods
xchg
test
popf
mov
and
adc
add
lret
xchg
loop
sbbl
jp
ret
pop
push
test
lret
push
aaa
popa
and
jge
and
and
dec
ljmp
push
sub
push
aas
mov
cmp
cmp
sub
adc
inc
stc
pop
mov
inc
push
cmp
push
jg
ljmp
mov
aam
repnz
mov
insb
pop
aaa
jno
cmpb
pop
cltd
dec
rcrl
bound
lds
scas
cli
jp
pop
in
inc
dec
pop
aas
enter
negl
in
mov
ds
fistpll
push
rcrl
pushl
test
rcrb
test
into
jge
mov
repz
inc
mov
pusha
rcll
pop
xchg
sub
in
xor
mov
sarl
sub
jge
jl
scas
mov
jmp
xchg
call
addr16
gs
jmp
sar
sub
cmc
loopne
xor
test
clc
clc
ror
imul
lcall
enter
push
push
cs
data16
jb
or
push
pop
test
mov
jle
add
lret
lret
jg
xchg
xchg
xlat
pop
jle
mov
and
sbb
or
scas
outsl
xchg
add
decl
stc
xchg
loop
loop
movsb
push
cmc
aas
xor
into
dec
in
shlb
idiv
lods
sbb
cltd
fdivrs
rcrb
push
stc
jle
or
loop
popa
dec
bound
pop
sbbb
in
xchg
lahf
shrb
xchg
mov
pop
icebp
and
int
xlat
push
repnz
icebp
out
outsb
and
repz
mov
add
push
add
pop
push
dec
lahf
mov
adc
mov
or
cmp
cmp
ficompl
les
mov
arpl
push
jecxz
or
sub
dec
int3
xlat
ss
pop
aas
mov
pop
jg
mov
mov
std
andb
pusha
or
icebp
mov
enter
adc
je
pop
jp
sbb
xchg
mov
mov
dec
adc
push
sar
popf
sbb
dec
xor
push
cbtw
paddw
call
iret
pop
mov
in
fbld
std
popa
xchg
js
pop
cli
jbe
lds
mov
mov
idivb
xor
dec
adc
fs
ja
pop
shll
cmp
es
pop
sahf
xorb
scas
jmp
nop
sbb
ret
push
aas
or
inc
int3
imul
sub
jb
insl
jno
test
dec
mov
adc
lret
xchg
lods
lret
nop
push
lret
push
shrl
enter
and
in
pushf
jne
xor
fnstenv
test
adc
loopne
and
mov
push
push
dec
mov
or
das
mov
dec
mov
shlb
jae
iret
insb
and
push
aas
jo
mov
push
pop
pop
test
ret
xchg
cmp
push
dec
xor
out
popa
iret
aas
xchg
sub
shlb
dec
pusha
imul
dec
mov
hlt
add
jne
fimuls
js
cmp
xor
inc
inc
adc
lea
xchg
xchg
lcall
out
ficoml
test
or
pop
xchg
test
mov
cmpsl
dec
sarl
inc
mov
imul
test
or
sub
mov
aad
in
call
xor
push
dec
in
push
inc
arpl
xchg
js
push
xor
lret
mov
push
stos
add
movsl
pop
mov
sti
mov
das
xor
aaa
push
mov
push
decb
jge
inc
add
pop
inc
xchg
ds
inc
aam
fs
fdivl
ret
jecxz
xor
jmp
xchg
pusha
lahf
test
mov
in
xchg
mov
push
shlb
cli
add
inc
xor
sbb
sbb
aas
jne
cmp
mov
push
add
stos
pop
pop
sub
aad
test
xor
imul
xchg
cmpsb
pop
insl
clc
xchg
push
es
mov
test
rcrb
inc
jge
dec
inc
pusha
xchg
pop
or
ror
in
lret
out
or
mov
mov
cmp
popa
push
adcb
aad
adc
sbb
and
ret
and
sbb
out
scas
push
movsb
ss
lds
mov
loope
out
inc
in
push
mov
les
cmp
repz
mov
mov
inc
mov
xchg
setge
sub
fbld
ret
push
lea
les
mov
jne
test
push
mov
or
repnz
mov
mov
and
mov
cmc
movsl
and
lcall
jl
repnz
stc
xor
jmp
out
push
popf
dec
dec
sbb
in
mov
cld
xchg
repz
pop
aas
or
cmc
push
xor
and
mov
add
mov
lods
jo
mov
push
cld
mulb
das
xor
pop
aas
inc
icebp
repz
fdivr
scas
inc
sub
push
cltd
add
add
dec
add
test
or
mov
pop
test
cmp
call
into
out
mov
mov
lahf
fisttpl
cld
add
cmp
cli
pop
lahf
imul
lret
xchg
mov
mov
dec
in
dec
scas
and
xchg
inc
adc
lcall
lods
jge
mov
dec
sub
hlt
lahf
sahf
sarl
or
pop
sti
daa
mov
sub
mov
or
sub
popf
mov
jbe
xlat
adc
mov
sbb
shrl
les
cwtl
cli
outsb
jae
aad
cwtl
add
inc
repnz
andb
out
in
mov
stos
inc
inc
fmull
std
sub
mov
ds
mov
pop
cwtl
add
and
adc
scas
push
xchg
mov
or
mov
rclb
sbb
lds
cmpsb
loope
fimull
and
xchg
mov
js
fs
outsl
cmp
outsb
fnstenv
mov
lock
or
lcall
imul
mov
cli
jo
in
iret
sub
and
or
jbe
lea
jo
in
mov
inc
and
sahf
inc
pop
test
and
pop
or
xor
lds
dec
sbb
sbb
adc
push
and
xchg
cmpsl
mov
into
sub
lock
iret
xchg
and
jg
mov
scas
and
xlat
mov
pop
rorb
popf
cld
lods
addl
int3
lods
mov
pop
cmpsl
push
rorl
fldcw
jg
popa
sub
stc
ja
jg
xchg
jnp
in
or
adc
stos
imul
pop
es
xlat
jbe
enter
pop
sbb
inc
adc
std
stos
pop
stos
stos
dec
or
aam
xor
dec
inc
sbb
mov
iret
pop
jns
add
fucomi
or
les
adcl
jle
ret
jae
push
aam
cmpsl
loop
imul
shll
out
loope
cltd
setnp
cmp
jecxz
push
fldt
int
test
adc
inc
out
mov
sbb
xor
js
adc
lods
inc
ja
or
clc
subb
xor
pop
aad
fs
mulb
and
fldenv
loopne
stos
sub
xor
jo
std
mov
sub
orl
imul
jle
aam
dec
sbb
js
addl
rclb
push
cmp
jns
and
and
jne
sarl
mov
pop
xchg
mov
bound
std
stc
imul
outsb
fstp
xor
stc
push
dec
xor
mov
xchg
jp
repnz
mov
push
add
stc
mov
sbb
mov
inc
dec
shrb
mov
fidivrl
xchg
negl
cltd
icebp
lods
stos
test
mov
shlb
lods
ja
bound
in
mov
loop
pushf
aaa
fstpl
pop
push
sub
out
sub
andl
movsl
xchg
xlat
jbe
idivb
jecxz
mov
incb
bound
sub
iret
xor
movsl
mov
cmpsl
inc
mov
inc
insb
insb
pop
pop
cs
jo
mov
mov
xchg
mov
add
push
dec
popa
pop
outsb
push
mov
xor
xchg
imulb
shll
sahf
cmpsl
js
mov
js
pop
and
test
mov
adc
jge
pusha
dec
je
flds
std
pop
jno
sub
insl
out
fucom
loopne
xor
inc
sbb
call
imul
mov
fisubrl
popa
pop
push
nop
enter
test
test
lods
in
sti
ret
sarb
cmp
lea
adc
out
icebp
jb
adc
addr16
lret
inc
in
pop
or
add
xchg
cmp
popa
jno
mov
mov
xlat
jecxz
add
sti
movsl
fisubs
jne
push
mov
lcall
jns
jbe
jae
sub
fcomip
mov
clc
adc
jae
lods
push
mov
loop
insb
shl
pop
xor
xchg
push
fs
or
pop
push
lcall
sbb
add
xchg
jge
jnp
add
xchg
xchg
sub
sub
fisttps
jg
shrb
mov
mov
cmp
and
xchg
mov
fbld
cmp
jnp
xor
mov
push
pop
pop
add
inc
inc
pop
and
in
in
xor
xor
call
mov
pop
cmc
cltd
in
xor
cmp
stos
out
out
sahf
inc
inc
popa
jmp
aas
jge
ficomps
push
or
cmp
add
mov
mov
js
das
lret
fwait
shll
orb
clc
xlat
aaa
mov
in
xorl
int
push
mov
add
push
dec
js
aad
xchg
xchg
sbb
push
addr16
mov
inc
dec
gs
mov
aad
call
xor
iret
xlat
data16
cmp
mov
cltd
jp
xor
cmp
mov
mov
push
lret
fdivl
fdiv
cmpsl
lcall
lock
sub
and
pop
lret
dec
addr16
dec
lods
pop
aaa
mov
sbb
push
rcrb
mov
jbe
pop
jecxz
xor
aam
mov
push
push
ret
lock
aaa
stos
test
mov
sbbb
push
loope
cmpsl
xchg
roll
push
jle
lret
repnz
sub
rclb
cmp
in
fldenv
mov
push
mov
dec
ss
push
movsb
push
and
repnz
rcl
push
xor
bound
cli
int3
test
nop
sub
mov
call
mov
pop
stc
push
cld
jno
lock
xor
inc
mov
in
jmp
imul
ja
not
cmc
lods
jecxz
outsb
out
dec
jnp
enter
cmp
dec
scas
jle
loopne
push
mov
add
jmp
lods
stc
sub
xlat
sub
jp
xorl
clc
xlat
mov
and
outsb
fldl
xor
loop
xor
push
inc
outsl
add
incl
push
fmul
dec
les
add
aaa
lds
fstpt
pop
inc
jo
pop
lahf
mov
out
mov
shll
rorl
movsb
cmc
jg
mov
fistpl
insb
sbb
mov
ret
jl
mov
add
push
fadds
adc
inc
test
dec
xchg
add
fcomip
mov
xchg
cwtl
gs
popf
lret
push
enter
stos
std
jecxz
out
pop
idivl
div
pusha
or
in
dec
sub
xchg
xlat
shrl
movsl
xor
push
cmp
decb
xchg
push
hlt
jno
xor
dec
int3
cmc
push
mov
pop
mov
pop
jge
sub
addl
mov
mov
leave
sub
push
or
fcompl
fbstp
mov
repz
jg
pop
aas
lods
shr
add
in
xor
rorl
lahf
shl
add
push
push
mov
xchg
add
in
inc
aaa
mov
cli
add
movsb
sub
xchg
xchg
aaa
es
call
xchg
es
popf
cli
mov
fildl
daa
stos
mov
shlb
iret
test
fcmovnu
push
pop
and
fstpt
scas
lods
adc
mov
out
push
add
mov
ret
sbb
lret
jb
mov
ljmp
pop
adc
jno
mov
inc
dec
push
push
ret
mov
dec
pop
cld
xchg
arpl
lods
push
lret
pop
xchg
gs
xor
add
negb
lahf
repz
dec
pop
js
lea
mov
lret
dec
xor
and
addb
bound
mov
stc
add
or
psubw
lds
outsb
cltd
ror
xorb
mov
jne
inc
pop
in
dec
pop
cli
push
sub
ss
push
fbstp
outsb
jmp
lahf
icebp
adc
scas
out
push
nop
mov
fnsave
dec
enter
pushf
jns
insb
inc
lcall
outsl
sbb
out
hlt
popf
mov
pop
mov
mov
or
or
ret
cmp
mov
inc
fsubr
jle
or
push
xor
lods
in
jp
aaa
insb
inc
mov
jne
ljmp
jmp
andl
iret
jge
xchg
int
aas
cmpsb
pop
adc
stos
cld
cmp
orl
cmp
sub
popa
jnp
adc
cmp
rcr
cwtl
adc
jl
pop
dec
mov
pop
mov
jae
jmp
mov
mov
faddl
aas
lcall
iret
lret
and
dec
sub
stc
pop
fistpll
nop
inc
movsb
cwtl
cs
enter
orl
loope
fcmovne
insl
addl
dec
roll
stos
shlb
sbb
fadd
orb
inc
leave
in
mov
or
xlat
pop
pusha
je
pop
mov
add
outsb
jbe
insb
and
loope
outsl
pushf
dec
cmpsl
dec
jmp
jns
fisubl
out
adc
mov
pop
stos
pop
push
pop
mov
fs
xchg
pop
jne
test
dec
in
stos
xor
lods
sbb
inc
rclb
addr16
sti
movsb
test
ss
faddl
mov
pushf
lds
ja
test
sbb
or
fmull
dec
dec
push
lea
jl
setp
fsubrs
out
pop
pop
in
iret
jo
fistps
adc
outsb
inc
mov
orb
xchg
pop
test
jle
mov
sbb
xchg
xor
movmskps
cmp
mov
lcall
mov
fwait
test
push
leave
decb
pop
inc
push
arpl
pop
cmp
rcrl
mov
push
mov
pop
mov
cmp
and
out
xchg
and
icebp
mov
iret
dec
cmpsb
mov
dec
inc
jmp
mov
push
into
add
inc
negl
xadd
pop
jae
mov
adc
push
icebp
sub
xchg
sub
addb
mov
mov
stc
clc
jo
pop
pop
loopne
orb
gs
xor
dec
movsb
dec
cmp
or
cmpsl
loope
push
aas
xchg
push
mov
sub
and
mov
incb
aam
jns
shl
sti
lods
mov
ror
dec
and
fdivs
sbb
xchg
push
pop
jge
inc
ljmp
cmpsb
dec
dec
leave
stos
cld
xorl
mov
jnp
inc
pushf
adc
jbe
xor
xor
sub
lea
xor
insl
ret
iret
xor
loopne
jno
mov
push
jmp
std
and
fisubs
add
mov
ror
dec
lcall
pop
scas
mov
fdivs
sahf
shl
outsb
call
stc
fistpll
lret
subb
mov
mov
mov
aad
insb
fdivl
mov
mul
js
aaa
std
rcll
pop
mov
add
divl
or
pop
mov
outsl
outsb
repz
dec
rcrb
inc
enter
fnstenv
loop
enter
adc
fisubl
cs
lods
pop
je
sarb
xor
enter
lods
xchg
lock
push
push
mov
sub
mov
movsl
ja
or
xchg
aas
jecxz
pop
xchg
mov
xchg
pop
fmuls
inc
in
cmpb
mov
test
mov
jb
outsb
jno
lret
mov
in
pushf
add
adc
sbb
ret
das
jae
in
enter
das
ss
int
popa
test
lcall
jo
arpl
je
in
lock
and
out
add
stos
sti
and
pop
adc
insl
mov
mov
mov
out
sub
outsb
fimull
sbbl
and
inc
nop
mov
ret
leave
insl
sub
xchg
sbb
insb
icebp
add
mov
add
arpl
push
jb
fldl
add
or
xor
jl
std
cmp
popf
mov
ror
enter
or
sti
lods
rcrb
mov
pushf
out
dec
mov
sbb
dec
sub
shrl
cmp
into
es
push
lret
cmpsb
jecxz
mov
rclb
shr
mov
sbb
movsl
jne
es
or
cmovno
adc
fwait
nop
mov
adc
xchg
pop
xchg
pop
jmp
mov
sbb
mov
jge
pop
add
shr
xchg
mov
loopne
ljmp
fucomi
fdivrl
insl
test
adc
inc
int
jns
xchg
js,pt
mov
lea
daa
xchg
std
call
rol
xor
mov
inc
clc
sbb
xchg
icebp
test
pop
push
pop
into
jl
incl
ja
int3
push
clc
sahf
push
pop
loope
dec
cli
cwtl
cltd
xchg
sbb
lahf
xor
pop
inc
jno
mov
dec
mov
jl
ret
iret
or
jmp
or
sub
adc
aas
mov
cmp
mov
xlat
mov
mov
jns
cld
jno
or
fldt
jnp
nop
or
in
in
aas
aam
or
mov
add
mov
ds
push
gs
movl
cwtl
jecxz
xchg
dec
or
xchg
adc
sar
ds
jecxz
cmp
jmp
push
pop
xor
jbe
jecxz
lahf
add
adc
test
or
add
scas
add
dec
jmp
add
cmp
out
nop
mov
xchg
sub
jg
jns
std
test
popa
scas
lods
nop
sub
or
jne
js
xchg
cmpsl
add
shl
repnz
stc
xor
or
inc
fistl
popa
test
fs
cmp
push
sub
stc
cmc
pop
scas
std
sar
jne
pop
aad
in
add
sar
cmpsl
push
sub
hlt
aam
int3
xchg
lret
inc
add
data16
mov
jmp
and
lcall
shrb
jle
push
jecxz
scas
mov
sub
push
or
xchg
cmp
sbb
imul
fisubrs
xchg
dec
fisubrs
pop
fisttpl
pusha
das
add
mov
in
aam
sbb
call
sbb
cmp
inc
cmc
test
dec
push
cmp
negb
xchg
scas
aas
in
outsb
cltd
out
cmc
ficompl
int3
aam
icebp
nop
jl
jbe
mov
test
shlb
jo
sbb
xor
xchg
pop
testb
push
sub
cmp
fmull
popa
data16
and
add
xchg
hlt
out
es
cs
test
dec
stos
push
int3
fsts
xorb
rclb
outsl
dec
lds
xor
fisttps
in
or
les
in
adc
mov
xchg
inc
fistpl
arpl
jnp
movsb
loopne
out
loope
sbb
inc
sahf
push
adc
bound
push
mov
dec
adc
push
repz
mov
outsl
sbb
jp
xor
sbb
roll
iretw
subb
dec
mov
adc
mov
rorl
add
int
add
push
fiaddl
in
stos
enter
addr16
shll
inc
pop
faddl
xor
pop
jecxz
subl
fcmovb
sti
fcomps
push
xchg
hlt
scas
out
fucomip
rorw
mov
xchg
push
shl
cwtl
pop
decl
sub
add
xchg
jecxz
daa
cmp
mov
gs
xchg
insl
push
jecxz
cmpsl
pop
cmp
sub
mov
cmp
outsl
mov
cltd
mov
inc
cmp
pop
pop
xchg
inc
nop
xor
int3
bound
mov
jge
lods
pop
pop
xchg
xor
inc
add
insl
std
adc
jne
loop
pop
nop
sub
jae
cltd
movsb
mov
mov
movsl
dec
int
dec
adc
data16
movsb
jmp
scas
mov
lods
mov
sbb
dec
dec
roll
sti
pop
xchg
mov
push
pop
add
sub
roll
adc
daa
push
daa
inc
cmp
ja
xlat
out
jle
push
ficompl
mov
les
or
in
cmp
xchg
cmp
mov
ljmp
mov
sbb
sbb
inc
cltd
adc
int
jae
pop
rorl
jecxz
cli
adc
inc
outsb
addr16
jbe
sub
cwtl
mov
stos
jo
test
fldt
dec
lods
lods
and
jbe
cltd
add
into
scas
inc
cmp
in
fdiv
popa
pusha
pop
and
sbb
test
popf
xor
push
in
push
scas
test
mov
mov
lret
out
cld
sarl
inc
shr
cltd
stos
stos
push
clc
push
stos
and
int3
or
shll
sub
aas
psubb
imul
je
pop
xor
adc
int3
fisubl
xchg
out
add
ds
ret
outsl
mov
push
int3
sti
mov
and
xchg
cmp
jo
inc
and
cwtl
or
pop
imull
inc
lods
fs
les
xchg
and
dec
mov
inc
ss
mov
scas
xor
pop
cltd
rclb
aas
pop
push
call
cmp
xchg
jno
and
push
inc
int
inc
xchg
push
test
inc
sti
pop
xchg
sub
fwait
jecxz
pop
jge
scas
mov
into
std
sysenter
in
xlat
jo
dec
rorl
xor
sub
mov
int
push
sub
and
push
mov
clc
xlat
lret
sbb
aam
inc
in
jg
inc
cwtl
loop
clc
xor
mov
jecxz
xlat
fwait
mov
pop
data16
mov
stc
dec
add
ljmp
lcall
aad
lret
dec
mov
nop
adc
sbb
xlat
sarl
ja
es
lock
les
inc
add
iret
aam
out
iret
fwait
rcl
sbb
dec
push
adc
pop
push
fcmovbe
add
scas
cmp
dec
push
dec
sbb
jg
pop
mov
mov
pop
inc
dec
push
fxam
ss
or
jge
nop
inc
hlt
jecxz
jns
ds
add
fsubrl
fsubrs
jge
add
bnd
pop
in
xchg
inc
pop
pop
jo
xor
adc
xchg
outsl
push
out
lcall
out
pop
pop
pop
adc
or
cld
mov
sub
pop
lret
ret
popf
sub
bound
lahf
push
mov
pushf
dec
stos
xchg
mov
loope
sahf
je
dec
subb
push
loopne
cmpsb
fdivrs
or
dec
mov
or
push
aas
mov
sub
dec
push
pusha
mov
inc
je
cltd
xor
cmpsb
xchg
cmp
lds
fcoml
int
add
lret
sub
mov
fcmovnbe
dec
push
xchg
cmp
pop
pop
cli
mov
bswap
push
add
xor
push
les
ljmp
lret
arpl
in
rol
add
nop
jg
int
sbb
jle
inc
in
add
mov
jg
popf
inc
jo
pop
adc
jl
push
in
ret
pop
push
mov
mov
ss
dec
ja
push
mov
insl
vpcomuq
and
mov
shlb
test
enter
lods
call
stos
mov
mov
xlat
lods
ret
imul
arpl
jle
inc
add
inc
push
sbb
call
jecxz
jns
dec
pop
sti
push
adc
test
inc
stos
pushf
loope
ss
outsb
pop
imulb
pop
xchg
add
add
and
cmp
push
pop
aas
add
lret
mov
lahf
dec
lret
rcr
push
data16
cmp
dec
das
jp
movsl
mov
or
aaa
je
outsl
hlt
loopne
jb
sub
jnp
dec
dec
mov
xchg
rclb
push
inc
adc
lea
adc
jp
stos
dec
psadbw
adc
add
or
in
shrl
das
or
mov
jmp
push
lock
inc
pusha
dec
jno
mov
in
stos
adc
into
data16
jge
stos
lods
jl
lods
push
push
add
call
lahf
push
scas
fyl2x
xor
fwait
mov
add
xor
adc
loop
xchg
mov
jne
mov
popf
int3
cltd
lret
loope
cmp
jp
add
nop
jno
xchg
sbb
mov
popl
jae
movsl
loopne
sti
mov
inc
inc
jge
or
in
cmp
ret
in
adc
adc
or
sub
or
cli
orb
cmp
and
xchg
and
imul
xchg
in
enter
pop
inc
insb
das
and
cltd
mov
sub
sbb
jae
paddq
testl
add
pop
lods
mov
rclb
ljmp
fscale
mov
aad
cmp
inc
xor
mov
push
and
pop
mov
xor
lahf
fsubl
pop
mov
fldcw
mov
mov
push
cmp
int3
pop
pop
loop
add
inc
and
pop
inc
and
leave
mov
mov
je
dec
sub
push
ds
mov
cmp
incb
inc
mov
clc
or
push
pop
repz
imul
mov
push
sub
mov
jbe
sub
stc
aaa
into
pop
xchg
ffreep
dec
mov
out
fildl
mov
outsl
dec
mov
xor
dec
jmp
xchg
imul
or
das
or
popf
xchg
ljmp
dec
cmp
mov
inc
lret
out
cmp
scas
sbbb
in
jno
xlat
sti
mov
xchg
ss
pushf
ds
inc
or
js
push
out
lods
stos
adc
test
and
mov
xor
adc
out
es
sti
cmpsb
and
pop
jne
pop
sbb
or
jg
out
and
inc
cmp
aas
xchg
mov
mov
pop
scas
fsubl
dec
es
into
push
movsb
arpl
mov
clc
je
stos
std
jns
pop
stos
es
adc
mov
or
or
push
outsl
xor
insl
outsb
dec
xor
fdivl
mov
or
sub
out
dec
ja
jmp
add
insb
insb
pop
ror
data16
inc
enter
or
sbb
push
mov
pushf
daa
ret
sub
loope
sahf
and
ret
pusha
out
cmp
adc
cmp
lods
xor
add
lret
cmp
pop
jmp
sub
cmp
mov
adc
aad
push
outsl
outsb
test
cld
mov
jb
cmp
inc
fwait
cli
sarb
pop
out
or
stos
movsl
push
ljmp
push
pop
enter
and
xor
movsb
or
cmp
incb
loop
lret
ds
pop
add
jge
imul
mov
outsl
and
hlt
and
or
movsl
push
test
jecxz
xor
mov
push
xchg
mov
cmpsl
adc
stos
or
clc
cmp
mov
add
repnz
dec
loope
fcompl
imul
lea
cmp
cwtl
xchg
sbb
or
subb
pop
mov
xchg
out
cli
js
add
mov
pop
push
adc
outsb
out
and
loop
enter
jb
scas
test
fisubrl
insl
xor
out
enter
cli
add
pop
ficomps
sbb
inc
push
mov
mov
xor
fstl
or
repz
fdivs
pop
cmpsb
add
scas
lock
out
push
or
mov
shlb
or
mov
xchg
sub
mov
out
fimuls
xor
cltd
push
sbb
std
pop
jg
js
or
jl
cwtl
xor
cmp
inc
adc
add
imul
out
xchg
push
divb
push
push
lods
shll
pushf
inc
mov
sub
pushf
pop
hlt
jecxz
and
dec
das
lock
es
fisubrl
jno
jge
add
jns
out
push
aaa
xor
cmpsl
mov
adcl
xchg
sbb
scas
cmpsl
jmp
ja
andb
dec
andl
and
jns
sbb
sub
inc
hlt
fldenv
add
je
and
jle
rcll
stos
xchg
xchg
outsl
mov
adc
sarl
jnp
push
out
sbb
xchg
push
sub
and
adc
outsl
mov
cmp
mov
mov
fstpt
sahf
cmpl
stos
pop
push
icebp
mov
mov
cmp
iret
mov
aaa
cld
xor
inc
das
pop
outsl
leave
aaa
das
fcom
adc
pop
jb
popf
mov
iretw
sbb
inc
add
cs
cwtl
daa
ljmp
outsb
xlat
or
xchg
gs
dec
xchg
jge
jge
dec
add
dec
mov
jmp
fildll
test
mov
insl
add
sub
aam
nop
dec
clc
add
jo
insl
pop
and
cli
dec
cmp
sbbb
xchg
out
jns
cld
mov
fsts
sbb
aas
outsb
xor
jb
dec
outsb
push
mov
mov
rorb
dec
jbe
test
dec
xchg
adc
mov
testl
pusha
mov
xchg
xor
ljmp
mov
hlt
mov
pushl
repz
push
sub
cmp
jbe
mov
jmp
mov
mov
jge
add
jmp
add
push
adc
fsts
flds
gs
push
movsb
in
movsl
dec
inc
out
jae
dec
inc
cmp
lret
mov
filds
inc
loope
fwait
push
stc
mov
mov
adc
fsubs
push
dec
jmp
aas
jmp
or
jns
stos
dec
jo
dec
push
jle
lods
xor
mov
mov
xor
outsl
push
bound
cmpsb
push
lea
stos
rorb
cmpsl
cld
cmp
inc
jg
cs
cmpsb
scas
stc
scas
mov
push
sbb
pop
xor
pop
mov
and
or
out
les
mov
gs
inc
js
pop
mov
cmpsl
or
inc
fs
add
xorl
inc
xchg
call
sub
adc
repnz
push
shrb
mov
sub
aaa
addr16
pop
in
cmp
mov
pop
push
imul
out
xor
inc
pop
sahf
xlat
sub
imul
out
scas
roll
enter
pop
lret
mov
add
xor
jno
inc
test
xor
push
pop
xor
pop
dec
lods
adc
jbe
dec
leave
xor
dec
pop
testb
mov
sub
mov
adc
xchg
and
dec
xor
push
xor
es
sbb
std
sbb
or
adc
pop
adc
mov
lret
js
inc
aas
sub
das
add
mov
mov
mov
sub
pop
push
cmpsl
mov
in
ret
dec
and
leave
mov
jecxz
mov
sbb
push
add
inc
lods
xchg
ja
push
movsl
inc
ss
rorb
scas
cli
int3
pop
cmp
jnp
jbe
jge
daa
adc
adc
arpl
fbstp
jmp
jae
jge
push
or
jae
jp
sbb
je
popf
lock
fwait
imul
jae
xchg
out
dec
fisubs
mov
test
fisttps
mov
outsl
repz
dec
add
insl
ret
cld
data16
or
pop
popa
in
fwait
sbb
ja
xchg
xor
sub
adc
js
xor
mov
pop
xor
sbb
pusha
mov
fldenv
sahf
sti
sub
in
icebp
int3
pop
cmpsl
bound
dec
mov
sub
inc
adcl
sbb
pop
les
mov
jg
hlt
aad
and
lock
outsb
mov
jo
and
push
push
outsb
cmc
xor
sbb
aaa
dec
ds
cli
pop
lcall
push
jns
jl
test
pop
dec
push
cwtl
ret
xor
dec
inc
mov
scas
mov
ja
stos
xor
jle
stos
or
mov
popa
sbb
xchg
or
sbb
push
jne
cmpsb
xchg
push
add
xor
or
xchg
pop
cmp
jp
and
xlat
in
jno
test
cwtl
arpl
and
inc
xchg
je
mov
xor
push
mov
insl
sub
into
sbb
xchg
push
pop
arpl
movsl
adc
aam
push
and
mov
jmp
rorl
add
xor
mov
roll
sbb
or
mov
add
xor
jecxz
jp
fs
push
inc
jmp
jne
push
xchg
sbb
int3
and
adc
mov
and
int3
shlb
cmp
jo
lods
pop
xchg
add
pop
mov
int3
adc
dec
icebp
jge
xchg
sbb
mov
push
and
cltd
cld
sub
mov
divl
popf
mov
scas
sarl
push
aam
pop
sub
ds
out
push
adc
cwtl
add
push
popl
mov
cmpsl
fildl
popf
sarb
or
js
or
aas
imul
loope
fldenv
loopne
mov
cmpsb
fsubs
add
pop
mov
xor
and
cmc
xor
dec
iret
push
or
lods
hlt
inc
movlps
push
hlt
push
add
mov
imul
jbe
lds
pop
filds
xchg
mov
pop
or
jle
je
mov
testl
mov
inc
pop
or
and
out
push
add
sub
cmp
das
mov
fdivs
lock
inc
sbb
pop
insl
mov
iret
addr16
jnp
inc
mov
mov
cltd
int
push
je
movsb
lds
mov
test
mov
sub
jg
add
push
in
data16
fstl
rcrl
sub
jp
es
sub
outsl
bound
clc
fnstenv
sbbl
test
rolb
sub
mov
cwtd
insb
je
mov
pop
adc
cmp
stos
ds
cmp
pop
mov
pop
ds
xchg
push
lds
xchg
dec
inc
add
stc
xchg
dec
sbb
sub
test
loop
jg
push
push
mov
outsl
push
mov
xorb
aaa
rorb
adc
pop
pop
fstps
mov
icebp
inc
xor
push
mov
int3
or
xor
adc
xor
ret
xchg
xchg
xchg
aas
jmp
test
jle
in
clc
or
cli
pushf
in
repz
nop
rclb
mov
sub
mov
lock
mov
testb
add
cmpsl
stc
jmp
imul
mov
jae
stos
test
es
and
jo
test
lret
cmp
cli
cltd
lds
or
lret
dec
fldt
add
fdivr
hlt
rclb
mov
shll
fmuls
leave
push
mov
jb
iret
dec
dec
inc
pop
mov
mov
jae
dec
mov
int3
mov
mov
push
or
pop
xor
movsb
ret
clc
jg
sub
push
addr16
xor
fpatan
aas
push
pop
imul
inc
push
shll
adc
leave
sbb
call
subb
daa
push
fwait
lock
xorb
fsubrl
pop
pop
test
popa
push
hlt
ret
mov
fbstp
pop
push
sahf
jno
pop
cli
or
shrl
sahf
jmp
push
ja
sbb
inc
mov
and
in
pop
adc
popa
out
xor
outsb
push
sbb
jecxz
pop
push
lretw
arpl
mov
jl
fmull
add
data16
pop
lret
leave
jne
adc
pusha
rcrl
jmp
test
cmp
xchg
xlat
and
test
pop
and
add
daa
inc
rorl
pop
nop
sub
sub
mov
loope
xor
xor
bnd
loopne
in
cmp
add
lods
mov
in
jle
stos
mov
inc
scas
ficoms
lds
lret
xchg
ljmp
push
jbe
mov
jp
and
push
adc
fdivl
push
leave
mov
shrb
sub
mov
dec
sbb
aad
push
jge
push
or
outsb
xlat
sbb
outsb
flds
mov
sti
mov
inc
sbb
mov
mov
stos
idivl
sub
leave
and
xor
loop
pop
mov
and
dec
dec
ljmp
xor
mov
std
out
movsl
pop
adc
or
repnz
jns
mov
inc
sbb
mov
mov
dec
jle
rcrl
mov
clc
imul
add
inc
ret
ret
mov
fldt
or
xchg
xchg
add
inc
scas
jg
push
shll
cmp
push
cmp
sbb
es
pop
repz
push
cltd
aam
cli
movsb
mov
sar
pop
in
in
popf
adc
xlat
call
mov
jnp
repz
jno
mov
cmp
fsubr
sub
nop
nop
mov
addr16
sarb
adc
jnp
mov
sbb
js
sbbl
pop
scas
or
test
lods
daa
int3
push
xchg
or
sahf
sub
sti
movsb
dec
mov
lods
dec
lds
cmp
fst
inc
into
inc
pop
mov
push
cmp
mov
add
adc
insb
cmp
loop
dec
jns
sub
xor
jnp
jno
lahf
and
lock
inc
fmul
jne
sbb
fidivl
test
mulb
rcll
fsts
movsl
jp
test
add
sub
jmp
ror
stos
call
pop
nop
cmpsl
mov
and
jp
mov
cmp
in
pop
ljmp
mov
aas
fstl
mov
pop
adc
push
adc
and
mov
lea
stos
add
aam
mov
mov
pop
pop
cld
sbb
movsl
push
std
push
sbb
std
push
inc
pop
or
pushf
into
dec
mov
or
add
cmpsb
xchg
ljmp
sub
cmp
sti
lea
fwait
inc
xchg
adc
pop
dec
mov
push
sbb
pop
movsb
xchg
test
xchg
mov
outsl
cmp
cmc
int
mov
mov
or
sub
xchg
mov
lds
push
mov
lret
xchg
mov
jmp
adc
sub
jge
loop
sbb
xor
mov
push
faddp
lcall
mov
dec
mov
adc
js
mov
test
loop
fs
in
mov
std
repz
inc
test
enter
jmp
nop
repnz
sbb
sub
jb
loopne
inc
jp
leave
in
mov
add
push
jmp
loopne
int
fdivs
imul
in
jnp
jne
or
cmp
hlt
aaa
fmuls
mov
push
pop
mov
xchg
inc
fwait
xchg
loopne
sbb
out
pop
mull
bound
mov
bound
pop
out
mov
cld
pop
gs
adc
repz
mov
in
flds
push
stc
cmpsl
bound
xchg
call
int
pushf
mov
call
dec
cs
fdivs
cwtl
cmpsb
pusha
mov
inc
add
test
mov
arpl
inc
push
jmp
sub
repz
rcrl
fbld
mov
js
testl
das
adc
jnp
jecxz
gs
rcl
ret
inc
sti
sahf
jmp
inc
and
inc
push
jmp
inc
mov
or
or
sbb
adc
pop
or
stos
fwait
pop
ret
mov
ret
pusha
aas
icebp
push
out
fsubrs
adc
xchg
xor
mulb
hlt
cltd
lods
lods
mov
ret
lret
mov
cmp
dec
dec
ljmp
ss
bound
sub
dec
loopne
dec
std
jnp
pop
test
dec
imul
adcb
mov
ror
sub
into
ja
stc
or
xor
lret
test
mov
push
int3
inc
mov
dec
jns
ljmp
jmp
scas
loope
xchg
lds
mov
push
lahf
push
push
dec
mov
pop
mov
xchg
adc
ss
xchg
mov
loopne
push
test
jmp
push
stos
notb
leave
dec
lds
aas
nop
fidivrs
cmp
scas
decb
pop
sbb
mov
es
jmp
dec
cmp
add
pusha
pop
and
dec
mov
sbb
push
push
and
push
push
imul
sahf
or
lahf
jnp
inc
push
shlb
clc
jno
push
or
testl
mov
push
mov
cmp
jge
sti
cltd
icebp
adc
lret
cmpsl
loop
xchg
rolb
jg
cmpsl
mov
iret
adc
inc
test
dec
and
bound
shrl
fstp
fwait
cmp
lret
mov
mov
xchg
and
fs
mov
aaa
subb
and
cmp
pop
sti
jl
inc
hlt
sub
lret
pop
push
mov
mov
es
or
cld
mov
jge
xlat
cmpl
sbb
inc
sbb
pop
push
shrb
fwait
push
push
adc
push
test
sti
sar
push
pop
lahf
cmp
shlb
iret
xlat
mov
int
les
stos
sub
movsl
and
movsl
cmp
xor
fsubs
jns
sub
pop
push
ja
inc
or
inc
mov
in
and
cmp
mov
sbb
sub
repz
shl
aaa
aaa
sarl
mov
push
inc
cmovle
push
jns
add
and
dec
rcrl
dec
cmp
fsubs
mov
add
lods
mov
addr16
fucomip
es
inc
rorb
loopne
sti
dec
mov
test
cmp
call
hlt
push
and
enter
pand
or
fadds
inc
test
mov
pop
and
dec
push
in
xchg
cwtl
dec
test
mov
inc
out
call
xor
les
xor
cmp
lock
lock
xor
lods
and
es
jnp
pop
outsl
lds
cmp
dec
cmp
push
ret
and
mov
mov
out
xor
popf
mov
imul
cs
push
sbb
jmp
and
cli
insb
mov
ljmp
push
jl
lret
shll
mov
sbb
dec
xchg
jno
out
rcll
fnstenv
or
pop
push
pusha
cmpsb
jg
dec
scas
sbb
or
and
repnz
mov
popa
inc
popa
xorl
and
xchg
lahf
clc
mov
daa
jbe
mov
mov
imul
adc
jge
mov
cmpsl
divl
cmp
dec
xlat
sbb
xor
pusha
or
cltd
mov
mov
cmp
sub
mov
adc
jg
cli
movsl
and
in
outsb
lret
sub
scas
push
out
jmp
test
ss
or
fwait
cmc
test
mov
xor
call
pusha
lahf
pop
dec
xor
je
xchg
inc
fwait
test
or
out
mov
cmp
movsl
dec
add
or
bound
aam
dec
je
xchg
inc
sub
mov
shl
int
shlb
gs
sar
shlb
lahf
and
in
daa
push
push
call
ret
cmp
and
jns
sbb
js
adc
mov
pop
ljmp
add
mov
jo
inc
out
mov
xor
push
cmp
js
push
jno
mov
out
xorb
push
fcmovbe
scas
das
mov
dec
cwtl
mov
sbb
xchg
sub
imul
les
xchg
rorb
xchg
adc
inc
xchg
es
call
push
push
movsb
adc
clc
xor
jno
or
out
stos
lds
jp
mov
imul
or
fstpl
jg
dec
sub
clc
xchg
jae
mov
pop
test
sbb
ret
fwait
xlat
divl
push
loop
jo
jo
in
test
cmp
lods
jb
pop
repnz
xchg
out
rolb
shll
jl
iret
or
sbb
dec
daa
pushf
mov
imul
ret
push
push
fidivrl
add
and
inc
sub
cmp
mov
ficoml
loopne
ret
inc
and
loope
out
stos
cs
imul
pop
mov
pop
sahf
push
add
jno
mov
insb
adc
sbb
aaa
aaa
cld
popf
cmp
shlb
push
or
push
sbb
sbb
xchg
sbb
js
or
sti
sbb
aas
stc
mov
pop
xchg
scas
stc
and
push
loopne
int
pop
jbe
in
jo
xlat
ss
scas
dec
sub
sti
push
repz
inc
cs
test
mov
js
mov
fdivs
cmpsb
push
imul
mov
jmp
pop
test
xor
fcoms
pop
or
mov
daa
fwait
stos
lock
jp
pop
pop
ror
imull
jg
lock
mov
push
cmp
mov
and
cmp
outsb
jp
jle
adc
aad
ret
dec
add
cmp
in
inc
mov
into
jge
or
ss
rclb
add
mov
or
fcomp
cmc
adc
xchg
adc
xor
pop
ret
push
scas
or
loope
in
pop
xchg
inc
inc
scas
data16
pop
movsl
jnp
push
xchg
fildll
push
mov
test
call
lds
push
push
dec
cs
pop
jb
movsl
push
cmp
js
pushf
lea
les
add
stc
add
mov
xor
mov
inc
push
and
ret
imul
push
dec
ss
cmpsl
lock
mov
icebp
xchg
xor
cmp
xor
ret
pop
or
lea
out
pusha
test
les
hlt
pop
lods
pop
dec
adc
push
ja
fs
adc
xlat
pop
push
loopne
cs
cmp
sbb
adc
loope
jge
rcr
or
dec
cmpsl
and
jle
push
nop
icebp
push
lea
xchg
pushf
ja
aas
int
xchg
xor
loope
in
pop
int3
sbb
and
fmull
cmp
jbe
push
out
sub
scas
icebp
dec
push
jb
mov
imul
or
lret
lret
gs
jbe
or
scas
push
faddl
pop
icebp
lock
xchg
cmp
inc
push
jecxz
loopne
jmpw
rcr
addr16
pushf
andb
daa
mov
jns
adc
fstps
push
sbb
inc
push
mov
add
inc
mov
das
jnp
lahf
cmp
fwait
xchg
loop
fwait
dec
scas
inc
add
aad
ljmp
scas
insl
out
sbbl
cmp
fstpl
ljmp
fimull
shr
sahf
cmp
fsubp
dec
arpl
into
fadds
jne
aas
test
dec
frstor
ljmp
xchg
lea
into
daa
xchg
inc
ret
es
inc
lcall
dec
in
movsb
shll
fsts
imul
bnd
add
lods
and
movsb
inc
addl
das
outsl
sti
and
insb
sub
mov
add
out
cld
inc
popa
sbb
push
int
call
and
mov
stc
mov
push
out
pop
and
add
or
sahf
jg
cmp
out
fcomi
mov
push
imul
fcomi
add
push
adc
cmp
das
in
xchg
pop
popl
dec
test
mov
int3
xchg
fildl
mov
leave
push
in
xlat
inc
mov
push
xor
push
lcall
out
or
popf
jle
pop
jmp
push
xorl
pop
fcomi
and
xchg
mov
pop
loop
mov
push
scas
roll
enter
mov
jmp
addl
push
sbb
fs
jge
jne
lahf
and
dec
sahf
dec
mov
mov
outsl
push
mov
push
aad
inc
inc
push
ds
mov
fxch
push
dec
lds
rolb
ret
insl
in
lret
jno
inc
jnp
mov
xor
inc
in
stos
mov
into
push
add
mov
pop
xchg
adc
shll
hlt
test
repz
jmp
xlat
push
mov
stos
mov
adc
adc
cltd
pop
mov
jmp
sbb
hlt
imul
and
jle
lahf
mov
aaa
sbb
and
and
ja
scas
or
pop
test
into
imul
adc
arpl
sbb
jb
xor
cmpsl
hlt
insl
stos
aam
or
das
sbb
xor
dec
out
sahf
jb
ss
dec
jne
cld
repz
dec
and
cmc
or
adc
push
jmp
xchg
jb
aam
daa
dec
or
inc
inc
aaa
dec
jbe
stc
out
rcl
xor
mov
lods
inc
das
xor
dec
jne
fisubs
cs
jns
cltd
popa
stos
repz
inc
dec
xchg
or
push
and
shl
and
add
and
jns
dec
xlat
out
jne
xchg
cmp
mov
lret
adc
sub
popf
dec
cmp
push
add
xchg
leave
arpl
daa
inc
xchg
fcomps
lea
outsb
or
xchg
ja
sub
nop
rol
mov
push
sub
sub
push
jecxz
fs
cwtl
xor
mov
jae
sub
jecxz
push
insl
pop
cld
xchg
cmp
sbb
sbb
test
push
dec
xlat
fsts
andl
leave
decb
sti
hlt
scas
flds
insb
into
lret
cmp
sbb
call
rorb
xorl
psubusb
dec
hlt
mov
bound
pop
vpcmpgtw
insl
adc
test
inc
lods
cmp
adc
ds
push
das
data16
cmc
cmp
sbb
push
dec
daa
and
insb
js
repz
sahf
repz
movsb
data16
repz
out
dec
and
ret
jno
jp
inc
pop
hlt
pop
mov
xlat
aas
xor
scas
arpl
jae
adc
subb
pusha
dec
jp
outsl
daa
pop
jl
ljmp
mov
sbb
ds
out
xor
mov
filds
cmpb
decl
cmp
cwtl
pop
aas
add
xlat
sbb
pop
and
push
push
loop
mov
ja
cli
jge
in
mov
fs
add
and
dec
out
jl
push
out
cmp
mov
loopne
cmp
xchg
out
xchg
in
mov
mov
mov
inc
bound
push
ss
xchg
fstps
mov
add
jg
scas
int3
ret
mov
call
xor
mov
fidivl
push
fs
in
outsb
dec
mov
mov
stos
mov
mov
inc
loopne
and
neg
sahf
nop
mov
sub
cltd
lahf
xor
inc
and
xchg
div
push
enter
xchg
imul
push
cmp
cld
jl
test
sub
inc
andb
je
sahf
dec
cwtl
inc
jne
sbbb
xchg
mov
dec
push
sbb
push
lods
lea
negl
adc
enter
cld
sbb
xchg
stos
mov
sbb
js
test
or
movsb
mov
pop
mov
add
jecxz
fwait
js
fcmovnb
mov
inc
jecxz
xchg
cmpsl
lds
or
pop
lret
iret
xchg
sub
push
insl
cmp
ljmp
sub
mov
mov
xchg
fbstp
and
jle
ret
imul
rcrb
scas
mov
inc
fiadds
adc
jl
es
stc
push
gs
add
cmp
sub
and
jne
mov
adc
mov
jmp
pop
shlb
pop
das
mov
ds
add
mov
lret
je
add
push
repz
or
pop
push
shl
cmpsl
andb
cltd
mov
ds
adc
xor
jl
dec
pop
pop
sub
pushf
mov
les
or
mov
jmp
jbe
mov
pop
pop
fnstenv
add
cltd
jne
test
fisubrs
call
nop
outsb
mov
aam
sub
mov
mov
jbe
mov
fidivs
scas
pusha
testb
ja
xchg
lret
or
mov
lods
ret
fsts
cmpsl
add
aad
es
mov
and
sub
repnz
imul
jno
mov
xchg
sub
out
je
push
stos
jmp
ljmp
imul
loop
das
xchg
cli
dec
sarl
sub
enter
sub
mov
mov
in
in
push
out
push
lods
pop
pop
mov
imul
dec
pusha
sti
insl
cmc
or
aas
enter
cmp
jns
fwait
adc
dec
fisttpll
test
sub
push
in
pushl
push
addr16
mov
jns
mov
mov
repnz
mov
das
sub
dec
push
xor
adc
dec
addb
repnz
mov
adc
in
mov
mul
sub
dec
mov
inc
mov
mov
sub
jne
mov
mov
adc
mov
lods
pop
repnz
add
scas
adc
and
gs
sti
data16
out
and
adc
mov
mov
jbe
sahf
cmp
daa
mov
fadds
addr16
fnstenv
cmp
insb
cmp
lcall
and
pop
arpl
sbb
test
mov
xor
xchg
pop
aad
orl
xlat
lea
pop
jge
ret
shll
push
or
dec
dec
mov
clc
dec
adc
pushf
sub
jl
ss
adc
cmpsb
or
ss
push
je
sahf
adc
notl
lcall
sbb
pop
fdivrl
dec
mov
xchg
adcb
in
arpl
outsl
push
outsb
ret
test
ljmp
mov
pushf
nop
xor
mov
sbbl
pop
adc
push
loopne
sbb
xsha1
cmpsb
dec
enter
inc
loop
das
insb
je
cmpsl
idiv
cmp
add
call
jo
and
and
and
sbb
int3
imul
pop
ljmp
mov
test
mov
movsl
dec
jecxz
ret
cli
hlt
mov
mov
xor
xor
xor
xor
ret
cs
rcrl
out
negb
xchg
mov
loopne
mov
std
and
or
add
adc
sbbl
imull
xchg
outsl
icebp
ja
ds
std
aaa
or
jg
das
mov
pop
nop
gs
push
movsl
andl
xchg
inc
imul
adc
mov
test
enter
das
xchg
xchg
arpl
inc
stos
xchg
cmp
jge
inc
jecxz
lock
int3
fistpl
dec
xchg
imull
pop
jecxz
aam
loop
dec
jg
jno
hlt
mov
adcl
loope
adc
jo
scas
sbb
sbb
fbstp
arpl
les
cmpsl
in
mov
pop
call
repnz
ja
push
cmc
ret
pop
lahf
and
pop
push
in
outsl
icebp
jl
test
repz
push
and
xchg
bound
add
enter
adc
jge
orl
test
ficoml
outsl
pop
push
lahf
bound
es
and
pop
xor
xchg
aad
mov
aaa
fs
lods
decb
and
mov
sti
cmp
test
fstps
push
dec
add
je
add
sub
es
xchg
jge
mov
push
jp
mov
testl
nop
push
mov
imul
cmp
cmp
pop
out
push
shl
mov
fwait
xorb
lods
aas
cmp
mov
loop
lods
pop
and
jp
cmp
cmp
or
scas
jp
or
xor
ja
adc
pop
mov
jp
inc
fdivrs
sbb
bound
ljmp
cltd
mov
xor
dec
pop
adc
test
and
mov
mov
sti
icebp
dec
push
inc
arpl
xor
stc
add
sbb
xchg
pop
and
push
shrb
jo
in
call
in
add
insl
and
push
iret
lock
aad
pop
leave
les
aam
outsl
in
fldl2e
sarb
stos
pop
mov
push
js
xor
push
aad
xchg
pushf
je
pop
mov
mov
add
daa
xchg
stos
mov
pop
popa
shl
sti
cmp
into
cmp
lods
jl
inc
mov
push
cmp
xor
adc
cltd
xor
push
cmp
repnz
aam
sub
adc
sbb
sub
loopne
les
add
lea
mov
adc
hlt
rcr
movsl
sahf
jo
scas
inc
cmpsb
aam
xchg
or
pushf
mov
rcrb
loop
call
les
mov
pop
fs
xchg
int
and
push
stos
ret
push
ds
xor
add
aas
push
and
jno
mov
test
jnp
pop
xor
or
jecxz
dec
mov
loope
cmpb
rorl
into
into
cmc
mov
lret
pop
lcall
test
movsl
push
pop
mov
subb
pop
bound
outsb
lcall
test
adc
lods
fstpl
dec
les
mov
sbb
out
or
sarl
mov
aas
jb
adc
add
imul
cmp
sub
or
pushf
cmc
mov
jle
jnp
sub
ds
cwtl
lret
sbbb
mov
fs
jmp
fcmovne
pop
dec
xor
and
mov
mov
mov
and
mov
mov
scas
cmpsb
adc
notl
cmp
jae
adc
jle
sbb
push
dec
movsl
js
inc
jge
push
xchg
enter
jle
sbb
sub
cmp
fdivrs
loop
mov
lock
jno
lea
cmp
sbb
mov
and
or
mov
inc
leave
rcrl
dec
sbb
aad
sar
cmp
in
inc
imul
decl
push
out
adc
dec
and
insb
jge
popl
cmp
call
mov
and
xor
out
hlt
inc
out
push
sbb
xor
iret
mov
test
int
push
divb
out
insb
adc
mov
jecxz
jge
lds
aam
out
add
pushf
sbb
je
sbb
cmp
stc
mov
push
fs
das
sbb
or
into
in
sub
or
test
push
lods
xor
movsb
sbb
inc
mov
sbb
push
loop
add
jge
add
add
frstor
sbbb
inc
cmc
mov
mov
pusha
sarl
dec
cld
or
les
add
jnp
cmp
xchg
loopne
xor
in
in
test
mov
jne
jno
adc
in
les
outsb
and
pop
mov
xor
aad
outsb
out
or
adc
fldt
stos
arpl
ljmp
push
sbb
in
scas
mull
test
les
mov
outsb
push
mull
mov
cltd
xor
cmc
adc
call
mov
loop
fidivs
and
rclb
xchg
out
movsl
inc
pop
mov
fsubr
cwtl
and
add
add
psllw
sti
lods
xor
gs
pop
das
int
pop
xchg
loope
xor
fnclex
xchg
mov
call
dec
dec
push
push
xchg
push
add
incb
xor
loope
leave
js
dec
sub
push
cld
pop
sbb
inc
daa
pusha
mov
jae
xchg
and
cmp
sbb
mov
push
int3
fs
or
loop
popa
js
jl
mov
addl
pop
xor
sub
xchg
mov
scas
jo
xchg
stc
aaa
dec
jmp
pop
js
cmp
fcoms
sbb
and
mov
int
jo
and
pop
test
inc
std
cmp
sub
mov
loop
ret
lods
mov
subl
outsb
lea
and
repz
in
adc
pop
popf
add
inc
movsb
sti
jb
cltd
jle
xor
pop
cmc
fs
aad
lret
mov
jmp
push
pop
aam
call
cmp
mov
aam
rol
gs
adc
outsl
pop
mov
movsb
in
ror
jle
push
cwtl
jnp
push
iret
sbb
jae
mov
dec
out
add
fnstenv
outsl
lods
jns
ret
movsb
out
ja
dec
sub
rcrl
mov
xor
popa
out
loopne
cmpsl
jmp
scas
mov
and
or
sahf
aam
loopne
dec
add
add
inc
or
jnp
push
mov
inc
inc
rcll
and
test
cmp
mov
subb
das
push
dec
fmuls
xor
inc
mov
mov
movsl
aas
xor
bound
addb
or
movsl
pop
mov
scas
fstps
shrb
cmp
fwait
or
call
shl
shll
scas
and
jnp
mov
jl
xor
adc
bound
add
adc
test
xor
std
sub
out
xchg
pusha
cmpsl
cmp
xchg
mov
sub
das
repz
popf
fsubr
cmc
dec
loope
jno
ret
mov
pushw
adc
das
push
cmpsl
call
daa
pop
lock
loop
cmp
jbe
lahf
sbb
clc
lea
push
inc
pop
cltd
out
pop
in
jo
enter
adc
pop
repz
adc
jle
daa
cmpsb
enter
cmp
divb
jo,pn
mov
adc
fsubrl
sbb
popl
sbb
out
mov
rcr
clc
gs
cs
js,pt
daa
mov
cs
inc
inc
jle
mov
aad
and
pop
aaa
cmp
and
mov
jmp
inc
mov
sub
loop
dec
mov
in
and
ljmp
test
pop
scas
xor
and
imul
inc
sti
div
into
clc
sti
xor
push
xchg
mov
mov
outsl
imul
jg
cli
notb
mov
mov
dec
push
inc
mov
cmp
data16
movsl
test
adc
aad
hlt
mov
push
jnp
sbb
das
mov
dec
xorb
das
in
jg
fadd
das
movsl
cmc
xchg
enter
jno
rorb
xchg
or
ljmp
sbb
imul
sbb
arpl
adc
out
dec
outsb
xor
jo
insb
lea
sbb
bound
popa
inc
inc
es
xchg
jno
out
lret
mov
insl
sbb
aas
fisubs
pop
imul
lcall
xchg
ljmp
mov
xor
dec
divb
stos
icebp
push
dec
popf
stos
jecxz
cmpb
stos
les
sbb
jae
xchg
sbb
repnz
sub
dec
in
jmp
inc
rolb
rolb
not
fs
adc
and
or
hlt
test
add
sbb
xor
insb
cmp
je
cmp
mov
out
or
ljmp
xchg
add
icebp
imul
push
jno
push
outsl
repz
xchg
cmp
xchg
into
das
lds
jb
stc
sbb
xor
pop
push
mov
rcll
push
lret
fstps
xchg
shl
adc
mov
mov
xor
push
jle
dec
push
mov
fldt
jbe
adc
movsl
rolb
push
adc
xchg
ret
xchg
sbb
mov
dec
and
enter
mov
mov
push
xchg
arpl
stos
add
cmp
push
subb
and
inc
dec
dec
int
ds
pop
ja
mov
inc
ficomps
ret
cmp
mov
push
mov
push
jae
or
bound
lcall
lds
sub
call
add
test
xchg
cmp
sbb
pushf
cmp
adc
popa
testl
mov
jo
pop
pop
adc
aad
adc
mov
mov
jl
movsb
fwait
aas
mov
nop
clc
adc
mov
dec
test
push
mov
leave
pop
mov
addr16
push
or
pop
bound
std
fcoms
or
xor
inc
in
jns
shl
mov
mov
fnsave
xchg
ss
mov
jecxz
push
imul
jb
loop
sbb
push
jl
test
xchg
gs
push
shl
scas
sbb
test
jne
push
jmp
add
add
repnz
add
mov
cmpsb
int
xorb
add
pop
aam
ja
int
or
sbb
mov
mov
mov
jmp
femms
or
imul
inc
sub
cltd
pushf
jecxz
mov
loopne
xor
jbe
pop
mov
sub
sarb
xor
or
jg
and
mov
pop
std
cmpsb
sbbl
pop
iret
and
mov
add
loopne
lds
repnz
shrb
dec
stos
cmp
mov
cmpb
xorb
mov
sbb
mov
inc
divb
and
mov
xchg
in
jg
xor
jge
jne
push
or
mov
int
aam
gs
outsl
in
adc
leave
mov
arpl
jle
das
inc
shlb
xchg
nopl
cmp
loop
or
icebp
pop
mov
push
fildll
mov
mov
pop
insl
cmp
or
loop
sahf
pop
xor
jae
rcrl
je
movb
rol
ljmp
scas
nop
arpl
cmpsl
push
sbb
ljmp
popa
int3
pop
push
jno
jne
ss
stos
sti
mov
stos
pop
xor
fs
jmp
pop
ljmp
xor
fisttpll
out
sub
add
repz
jp
jl
xchg
aam
adc
pop
dec
pop
js
sub
xchg
jno
std
pop
repz
pop
insl
cs
inc
or
mov
jae
jp
fbstp
xchg
lret
mov
adc
clc
xor
inc
adc
xor
and
imul
mov
cmpl
stc
inc
mov
xchg
hlt
dec
imul
lock
jbe
test
inc
inc
jbe
push
out
enter
xchg
add
lds
jge
inc
daa
jmp
ss
xorb
lock
mov
mov
ja
shr
lret
adc
mov
mov
cmc
dec
add
add
je
out
les
fidivrs
push
or
icebp
sbb
inc
cmp
out
mov
dec
fwait
js
ret
mov
movsb
ficomps
mov
enter
test
dec
fldl
inc
cmp
pop
or
stos
fdivrs
sbb
pop
addr16
xchg
ljmp
mov
push
jp
mov
xor
pop
rcll
cmp
dec
insb
jl
dec
jmp
xor
and
sbb
mov
pusha
or
in
jno
pop
sar
mov
mov
jl
fisubs
outsb
sub
shll
and
add
std
fdivs
popf
inc
popa
bound
mov
push
addr16
loope
arpl
sbb
nop
jno
jo
imul
rol
xor
in
gs
adc
inc
js
push
fildl
jecxz
and
into
cld
rcr
fwait
mov
add
jbe
pop
or
out
mov
int
cli
push
inc
pop
loope
mov
push
lret
adc
xchg
push
xor
cmc
and
xchg
jo
scas
adc
int3
pop
xchg
lods
loop
out
loope
cmp
ds
shl
adc
dec
jecxz
aam
pop
dec
or
fwait
repz
or
xlat
ljmp
mov
push
jecxz
jns
mov
push
and
ds
jbe
sti
cld
aaa
lcall
aaa
mov
push
test
lea
out
ror
cmp
and
enter
imul
pop
push
push
sti
jmp
arpl
std
mov
push
insb
lret
inc
movsl
out
bound
cmpl
mov
es
push
xchg
lret
cmp
ret
std
movsb
loop
xchg
subl
mov
mov
shufps
xchg
lcall
mov
movsl
lahf
xor
jecxz
enter
pushf
int3
or
adc
adc
rcrl
scas
ror
test
xor
push
adc
sti
fisttpll
cmp
pusha
mov
out
jl
add
cmovg
pusha
xor
pushf
push
adc
scas
add
dec
push
cmpsl
aad
sub
mov
rcll
mov
push
out
scas
dec
cmp
clc
fsubrl
or
stos
cmc
lret
enter
push
dec
xor
sub
in
jmp
or
imul
insl
add
fimuls
xchg
mov
or
test
jg
sbb
pop
adc
or
imul
aam
adc
aam
inc
or
popa
adc
sbb
xchg
cmc
mov
adc
mov
dec
ljmp
addr16
mov
xor
test
shll
daa
sub
in
in
aam
xchg
pushf
cs
outsb
popa
push
add
jns
push
sub
popa
lods
xor
out
int3
enter
lock
lret
cmc
mov
pop
push
adc
sub
clc
test
fisubrl
lret
cmp
sub
cwtl
movsb
stos
outsl
jns
jp
and
mov
inc
inc
pop
mov
ds
push
sub
fdivrl
dec
mov
mov
or
and
in
jecxz
popf
outsl
push
cwtl
aad
ret
filds
mov
and
cmp
push
shll
push
mov
sti
daa
add
mov
add
movsb
test
lods
jge
pop
lds
insl
push
jl
aad
fsubrs
shr
pop
out
xchg
jl
insl
or
or
aad
xor
cmc
inc
jbe
pushl
bndstx
jle
sub
std
je
int
mov
mov
dec
sti
movb
inc
pop
in
jae
movsl
and
xor
dec
je
outsb
add
mov
cmpsl
push
fiadds
add
adc
cmp
aad
sbb
mov
mov
pop
and
dec
mov
adc
mov
imul
scas
pop
loope
xchg
aas
lret
fwait
cmp
daa
jmp
fwait
add
cs
dec
adc
sti
mov
outsl
push
mov
cmp
lock
and
call
mov
dec
cmc
into
mov
rorl
icebp
pop
push
jb
cmp
les
aas
test
jne
jmp
lcall
pop
dec
enter
lret
jo
mov
shll
xor
mov
lret
dec
jmp
mov
dec
mov
mov
cltd
adc
das
mov
movsb
sbb
push
idiv
jbe
sub
xchg
shr
test
jne
cmovno
push
bound
scas
push
lret
ss
fs
fiadds
cmpsb
stos
imulb
or
scas
in
jo
cmp
lcall
ss
int3
cs
test
push
stos
fdivs
cmp
cwtl
ret
rorb
in
dec
mov
cs
rorb
insb
dec
ret
inc
pop
lock
xlat
add
or
shrb
leave
sbb
stc
add
test
in
or
pushf
inc
div
sbb
cmpsb
mov
loop
dec
mov
jg
dec
pop
rorb
jmp
loopne
mov
jl
jne
and
inc
push
jb
adc
fcoml
je
lahf
repnz
dec
push
push
aaa
stc
xchg
mov
outsl
fsubp
jne
adc
jb
sub
xorb
adc
and
xchg
add
dec
fstps
dec
xchg
je
rcrb
cmc
jbe
mov
adc
inc
cmpsb
mov
mov
pop
mov
orb
and
pop
add
test
insl
add
xchg
das
fwait
imul
and
push
popf
xor
addr16
lds
dec
es
lcall
les
divl
jo
xchg
ds
push
xchg
lods
mov
push
inc
xor
xchg
jg
sub
cwtl
pop
push
outsb
sti
out
jmp
mov
pop
cmp
sbb
xor
imulb
sbbl
push
es
ljmp
mov
mov
jp
jns
cld
jecxz
call
sbb
mov
pop
inc
mov
jle
notb
push
jns
outsl
jns
out
gs
je
dec
mov
outsl
arpl
mov
roll
mov
cmp
stos
scas
xlat
pop
mov
mov
add
call
cmp
fwait
pusha
adc
mov
dec
into
jg
push
xorl
or
ss
int
divb
jns
or
ret
push
insl
xor
sub
lock
fwait
push
pop
clc
fdivp
std
data16
fwait
add
mov
mov
push
push
mov
pop
and
ljmp
inc
xor
lea
cmp
cmp
in
push
mov
fisttpll
mov
rcll
xchg
pop
cmpsb
es
xor
cmp
aaa
xchg
popf
addb
mov
mov
sbb
repz
and
push
lret
data16
pop
fmuls
push
mov
leave
jnp
lret
pop
stos
outsb
adc
iret
xor
xchg
jns
std
jo
std
movsb
push
xor
aad
sti
xchg
jbe
inc
std
scas
inc
pop
rolb
lea
adc
xor
and
leave
jns
lret
lahf
movzbl
in
inc
popa
sbb
add
imul
out
mov
cmp
xchg
mov
call
add
cmp
add
push
mov
mov
shlb
icebp
in
in
scas
mov
scas
dec
xor
lock
mov
ret
shrl
mov
xchg
or
cmp
xchg
fs
repnz
or
dec
sub
cmp
add
add
call
push
jmp
dec
mov
push
leave
mov
and
fsts
sub
in
out
cmp
xchg
xor
mov
test
push
inc
mov
cmp
movsl
or
in
dec
sub
sbb
jbe
cs
cmpl
cmp
push
aaa
xor
arpl
mov
das
or
aad
sbb
ret
clc
jae
push
jp
dec
or
insl
orl
adc
pop
and
push
add
push
aas
mov
mov
xchg
aaa
lahf
sbb
push
sbb
xchg
adc
pop
xchg
in
data16
add
dec
inc
add
clc
xlat
call
cmp
push
inc
les
inc
sarb
ret
pop
push
pushf
jns
leave
mov
hlt
ljmp
imul
cmc
cmpsl
testl
aam
adc
add
int
and
cmpsb
pop
mov
xor
cmp
test
jge
popa
repnz
loope
adc
mov
cld
shl
int3
lods
xchg
arpl
sti
lods
dec
int
aas
cmp
rclb
in
cltd
mov
push
data16
xchg
push
dec
inc
imul
arpl
ss
push
out
mov
flds
mov
dec
aad
lods
jle
fbld
mov
lret
imul
dec
jns
leave
jno
popa
cmp
xchg
mov
add
mov
jmp
ds
mov
jle
sub
push
mov
movsl
jmp
nop
int
push
xlat
gs
bound
xlat
enter
loopne
or
jno
xchg
lea
loope
inc
ljmp
push
icebp
xor
insb
mov
add
add
mov
jo
addr16
jge
stos
ja
les
aaa
xchg
pushf
adc
adc
xlat
xchg
pop
out
pusha
jns
mov
and
sahf
out
mov
cmpsb
mov
jp
aas
ja
push
push
enter
cmpsb
testb
cmp
scas
movsb
arpl
jnp
mov
mov
aas
sub
negl
adc
imul
cmp
mov
movsb
mov
out
cld
ret
mov
in
adc
call
movsb
xor
and
pop
test
arpl
ds
outsb
adcb
and
xor
and
xchg
xchg
xor
and
add
jbe
jae
cli
sti
ret
aaa
xchg
data16
jno
pop
cmp
int
in
outsb
sbbb
sbb
call
cmpsb
inc
es
stos
push
js
insb
or
inc
ret
xchg
lods
mov
enter
je
sbb
sti
add
push
xchg
or
pop
test
lods
stos
lahf
scas
sub
mov
movsl
js
insb
sbb
dec
mov
lods
add
inc
xchg
out
loop
lcall
daa
jb
jae
mov
insl
mov
dec
push
shlb
mov
adc
leave
int3
les
push
fnstsw
es
pop
fstp
mov
outsb
pop
jge
ja
add
add
in
jo
jg
repnz
popa
sahf
not
stos
and
fcompl
dec
add
push
in
out
and
or
push
jne
test
jbe
mov
mov
sarb
sub
xchg
fistps
shrd
pop
pushf
fmull
pop
enter
cmc
pusha
xor
mov
mov
or
sub
or
addr16
fwait
mov
mov
pushf
iret
push
adcb
mov
mov
arpl
scas
cmp
sub
and
dec
popf
ret
std
popa
dec
pop
add
sub
fucom
inc
lret
gs
ljmp
mov
dec
or
das
cmp
cmp
push
popf
aad
test
dec
dec
cmc
mov
loop
jne
jbe
jo
mov
push
lahf
adc
sbb
lds
add
or
rol
daa
push
mov
mov
mov
xor
loope
mov
push
popa
jle
xor
pop
push
add
jb
fnsave
subb
jo
dec
xor
cmp
mov
ja
es
enter
mov
ds
adc
cmp
imul
inc
sahf
loop
cmp
js
orb
push
cmp
sub
cmp
xchg
cmc
xchg
or
test
outsb
mov
push
call
fists
fisubs
xchg
arpl
lock
mov
mov
add
mov
fwait
push
and
xor
imul
rcr
adc
and
cwtl
xor
mov
mov
cmpb
jns
jmp
cmp
jecxz
enter
rcrb
inc
xor
je
xchg
xor
fidivrl
gs
xchg
and
mov
push
sahf
sarl
and
inc
aas
adc
lds
jecxz
adc
scas
in
mov
dec
gs
pop
sti
lcall
aam
int3
negl
sbb
filds
stos
enter
jmp
data16
jge
adc
int
xor
test
orb
jno
sub
xor
pop
push
mov
sbb
test
jne
dec
xlat
push
xchg
sub
lods
push
sbb
jl
inc
jl
sub
and
sti
repz
cltd
ret
mov
lcall
inc
jg
ja
mov
out
mov
shrl
or
es
das
sbb
movsl
bound
rcr
shlb
lea
rcl
lds
lock
fcoms
in
vpshaw
fisubrs
and
insb
add
push
movsb
std
ds
mov
add
aad
movsb
adc
push
in
mov
shll
mov
popa
xchg
insl
or
xchg
jno
xchg
xor
stc
sub
test
ret
jg
and
jns
iret
lods
rorl
and
mov
jne
fists
lret
push
lcall
cmpsl
or
jp
les
icebp
mov
shlb
out
sub
shr
and
add
lds
das
stc
pop
jb
xchg
or
lahf
das
ja
loope
mov
inc
adc
push
adc
test
jns
test
rorb
mov
ret
push
push
roll
test
mov
cwtl
call
mov
or
xchg
popf
test
gs
xlat
cmc
mov
arpl
dec
hlt
vfrczss
fisttpll
xchg
inc
xchg
arpl
dec
and
push
jmp
jb
shrl
and
test
js
fcmove
sbb
jo
pop
test
adc
int
fwait
mov
push
xchg
xorl
sbb
cwtl
or
add
das
das
pop
adc
test
fldl
pop
cld
pusha
inc
mov
adc
inc
scas
idivl
xchg
imul
sahf
mov
call
fstl
nop
stos
mov
sbb
jg
mov
loope
jge
and
into
push
jl
jns
adcl
adc
in
xlat
xor
push
popa
inc
xchg
xchg
ret
push
sub
imul
fidivrs
mov
repnz
into
sbb
sub
ffree
and
aad
out
jbe
iret
pop
inc
cmpsl
dec
mov
adc
jmp
mov
and
and
ret
jp
jne
inc
adc
ficompl
push
xor
xchg
call
dec
into
cmpsb
ss
int
push
sbb
loopne
mov
cmpsb
inc
push
jns
add
and
js
ret
aas
cmp
addr16
push
pop
mov
push
fcomps
mov
inc
push
fwait
push
aas
int3
pop
or
jno
fs
push
fisubrs
fst
xlat
mov
mov
cli
ss
lea
sbb
cld
adc
flds
movb
xchg
or
cmp
xor
ja
mov
dec
xlat
cs
adc
insb
into
aaa
subb
push
xlat
dec
pop
cli
ret
jo
add
inc
aad
jg
lods
cld
jmp
data16
lcall
out
arpl
inc
cmp
jbe
hlt
add
ss
push
call
xchg
mov
mov
outsb
out
cmp
jne
shrb
sbb
mov
inc
dec
nop
mov
jbe
push
testb
sbb
mov
bound
sbb
and
mov
cs
and
cmp
add
cltd
sub
repz
mov
mov
and
jl
and
mov
nop
push
cmp
sub
sub
lock
inc
jmp
inc
push
aam
push
push
iret
push
cs
inc
mov
dec
mov
push
enter
std
into
fdivp
sbb
add
outsb
adc
xor
outsb
call
cmpsb
xchg
jp
xlat
pop
fists
sbb
or
sti
aam
push
pop
testb
adc
pop
jb
jecxz
lret
xchg
enter
cmp
es
test
int
mov
insb
loopne
outsl
push
movsb
shlb
adc
xchg
das
jno
add
pusha
lods
shl
lahf
and
fidivrs
sbb
ficoml
call
cmp
and
les
adc
insl
repnz
xchg
cmc
out
add
popf
repnz
lret
lahf
sub
divb
push
mov
scas
out
cmp
iret
adcb
inc
arpl
mov
shrb
and
fmul
lret
adc
xchg
dec
add
add
in
out
movsl
jb
sbb
pop
cltd
dec
pushf
xchg
loop
adc
shll
xchg
div
ret
sbb
add
scas
stos
dec
cltd
cmc
orb
mov
daa
lds
and
das
or
dec
xchg
pop
imul
sbb
cmp
aas
push
xor
outsl
push
std
push
outsb
sbb
cmp
ljmp
lret
add
xchg
sbb
push
stc
inc
mov
sbb
out
add
sub
fdivrl
or
sub
cmpb
sbb
jae
mov
pop
insl
jg
iret
scas
icebp
dec
xchg
stos
push
and
cmp
mov
sbb
push
lock
mov
inc
dec
jns
testl
loopne
jge
cmpsb
pop
imul
inc
sbb
or
pop
or
movsl
mov
aad
in
and
mov
popa
orl
bound
fnstcw
pop
cli
test
les
sub
cli
cwtl
push
negl
call
fcomip
cs
movsb
adc
mov
int3
cld
xchg
dec
dec
stos
hlt
xlat
ds
xchg
ja
sbb
je
or
push
insl
jb
inc
jp
pop
sbb
sub
sar
sbb
cmpsb
mov
push
test
stos
mov
adc
lea
subl
jae
cmp
jmp
mov
fwait
xchg
sahf
out
mov
and
orb
jmp
jmp
addr16
imul
in
dec
jle
mov
mov
xchg
inc
xchg
das
and
out
mov
mov
mov
ret
js
cmc
xchg
jne
cltd
cmp
cmpsb
repz
in
sbb
loop
dec
mov
setle
mov
lock
loopne
ja
and
sub
mov
xchg
mov
int
ret
repz
mov
or
scas
shl
and
push
out
arpl
jb
or
or
mov
add
jbe
test
int3
add
jno
ds
ljmp
adc
in
adc
sbb
std
pop
add
test
lea
jb
or
add
push
je
fucomi
mov
sbb
mov
mov
outsb
aad
xor
je
loop
leave
or
mov
cmp
inc
fs
das
dec
aaa
je
sub
cmp
or
xchg
adc
jmp
or
sbb
fsubrs
jge
das
xorb
mov
xchg
cmpsb
data16
pushf
lret
xchg
xlat
inc
xor
leave
lods
in
outsl
xchg
adcl
stos
hlt
rcl
cld
sub
inc
xlat
out
mov
mov
add
add
jp
adc
mov
add
call
xor
call
mov
ljmp
sbb
les
in
pop
jns
and
movsb
hlt
mov
int
nop
mov
adc
adc
cmp
jecxz
das
push
jmp
push
test
int3
jge
jnp
and
ljmp
fistpl
idivb
or
fistl
sarb
in
cli
or
lret
fisubrs
int3
jno
jns
mov
mov
rclb
or
lods
iret
pop
xchg
lds
lcall
lcall
imul
or
adc
adc
inc
test
sub
ror
push
sbb
scas
cmp
xchg
stc
fcmovb
push
or
fisttpl
dec
js
loop
push
adc
xor
add
ljmp
sbb
sahf
dec
orb
mov
jbe
cmpsb
jge
inc
das
mov
std
incl
hlt
push
adc
push
adc
popa
scas
popf
pushf
sbb
loop
jg
ds
aam
mov
lods
xchg
idivb
or
xchg
jnp
test
shl
mov
sub
ffree
mov
cmc
inc
mov
xlat
mov
movsb
push
adc
pushf
repz
mov
test
push
sbb
dec
rol
adc
mov
pop
inc
inc
lods
lods
mov
icebp
ja
dec
sub
ret
arpl
xor
sbb
cld
lock
xor
ret
fimull
mov
mov
and
add
or
test
xchg
test
push
loope
jo
mov
push
lret
in
xchg
xchg
dec
or
push
pop
lock
nop
jg
shl
mov
aam
jnp
jbe
cli
pop
sbb
jo
stos
shlb
std
and
je
jp
sbb
mov
push
push
cmpsl
lods
insl
dec
xor
sbb
dec
outsb
lret
shl
adc
sbb
and
insb
inc
scas
enter
push
and
dec
out
jp
sarl
pop
shrl
lret
clc
or
or
xor
test
lock
mov
add
loop
adc
mov
imul
inc
push
iret
imul
mov
mov
sub
dec
outsl
jp
push
or
ficomps
sbb
ss
lds
data16
loope
or
mov
xor
sub
cmp
mov
popl
inc
cmp
dec
sub
pop
dec
mov
or
mov
push
aam
loope
rcrb
xor
lea
repnz
add
inc
cwtl
xor
data16
xchg
jp
push
pop
xchg
or
cmp
sbb
adc
fmull
xchg
hlt
out
xor
lds
sub
stc
rcll
mov
push
inc
sbb
insb
in
fsubl
dec
imul
sub
push
cmpxchg
out
mov
jno
movsl
rorb
jmp
mov
loop
xor
insb
and
sarb
mov
pop
gs
or
shll
push
push
jbe
jge
fmull
mov
sub
loop
les
frstpm(287
stc
enter
adc
cmc
add
push
repz
mov
jae
ss
inc
push
add
cmp
dec
push
jbe
in
adc
sub
and
data16
lock
in
inc
cwtl
adc
inc
lods
mov
add
cmc
call
push
shl
popa
mov
sub
sarb
mov
shll
jmp
mul
adc
pop
repz
cli
jb
shlb
insl
cmc
mov
mov
cld
int
sub
scas
xchg
jbe
mov
mov
int
and
icebp
push
scas
scas
jg
xchg
mov
cmp
lock
sub
stos
xchg
inc
inc
jo
lret
out
fcompl
dec
pop
popf
mov
sbb
and
movsl
add
push
mov
jmp
std
cmp
lods
repz
into
pop
jns
cltd
fcmovnb
push
pmullw
xchg
sbb
sub
xchg
or
dec
insb
xor
jae
daa
arpl
das
hlt
data16
mov
xor
lahf
jmp
mov
cwtl
fsubl
fidivl
repnz
jl
add
ret
fcoms
fucomip
adcl
push
jl
jns
xor
enter
pusha
loope
cld
pusha
xchg
cli
cld
sub
jmp
in
dec
outsl
iret
enter
push
mov
adc
jmp
mov
test
clc
xlat
test
js
adc
cmc
dec
lret
mov
jmp
mov
cwtl
pop
popf
push
xchg
les
dec
outsl
sub
and
jno
mov
cwtl
negl
add
fld
movsb
orl
jp
popa
sbb
rcll
xlat
mov
out
sahf
sub
push
subl
iret
push
xor
cmp
ror
push
stos
xor
jb
cs
sub
dec
cmp
xchg
aas
daa
sub
icebp
mov
pop
add
ljmp
push
and
push
fcmovnb
mov
js
scas
stos
ljmp
filds
ss
dec
sub
jbe
mov
ret
xchg
jge
scas
es
out
in
mov
cmp
in
mov
jb
rcrl
add
vpcomuw
out
dec
jmp
mov
sbb
xor
cmc
dec
je
gs
fcomp
xchg
imul
inc
jge
mov
decb
psubb
xchg
stos
mov
mov
add
adc
cmpsb
lock
inc
sbb
cmpl
jle
xlat
mov
xor
xchg
mov
xchg
rcrl
or
mov
mov
test
inc
ret
adc
dec
rcl
dec
sbb
sbb
das
inc
dec
inc
js
stos
cmpsb
mov
daa
orb
fstl
inc
sub
outsl
pop
shlb
inc
and
sbb
dec
add
loop
push
sub
fyl2xp1
cltd
or
push
xchg
xchg
push
in
lods
mov
jg
jb
jnp
aaa
dec
xchg
jmp
push
add
test
pushf
adc
and
pop
into
nop
nop
adc
mov
xor
dec
loop
inc
add
in
xchg
dec
or
xor
pop
dec
cmpsb
pop
mov
sbb
inc
adc
nop
testl
sub
cmp
stc
mov
out
rcrl
sub
dec
imul
and
sub
scas
cmc
mov
aas
sarl
ljmp
jge
mov
or
jns
movsl
int3
add
out
xor
dec
aad
sti
stc
mov
add
add
add
pop
or
cmp
xor
inc
push
sub
cmc
ror
sub
scas
xchg
push
and
cmp
xchg
push
cwtl
lea
inc
mov
je
inc
mov
push
add
cmp
and
addr16
stos
iret
jmp
arpl
sarb
mov
leave
iret
cltd
mov
lock
and
xchg
test
iret
jae
clc
cmp
imul
adc
cs
adc
fcos
cmc
push
xor
js
das
cwtl
xchg
shrb
pop
jl
loopne
xchg
dec
aas
hlt
mov
mov
cmp
push
xor
aad
and
rclb
cmc
out
and
out
or
dec
ror
addr16
xor
mov
ljmp
adc
pop
mov
popl
pmaxub
call
xor
push
inc
jge
dec
sbb
cld
fs
jecxz
call
xchg
push
pop
pop
adc
cmc
sbb
lds
adc
jb
dec
je
or
sub
xor
outsb
push
cmpsb
dec
aam
jae
pop
ret
inc
outsl
test
shrb
pop
inc
das
outsl
jg
adc
cmpsb
in
sbb
push
mov
movsb
pop
xchg
mov
or
cmp
pop
jo
xor
pop
imull
and
fstpt
das
inc
mov
mov
cs
ljmp
or
mov
xchg
or
enter
add
push
sub
xchg
sub
or
lods
dec
sbb
mov
jo
mov
push
push
fadd
daa
outsb
xchg
test
cmp
push
and
cwtl
pop
inc
popf
pop
aas
jmp
jnp
push
jo
cmc
push
xchg
jno
inc
lods
mov
ret
mov
add
mov
hlt
je
push
faddp
sarl
push
mov
and
mov
cmp
fdivrl
fdivrs
sbb
mov
sbb
push
dec
sub
adc
jge
or
cmp
addb
nop
sbb
loop
sub
add
add
jnp
repz
dec
lcall
inc
jbe
loopne
xor
ret
les
sub
fistpl
adc
pop
inc
lds
cmp
and
xchg
movsl
xlat
jne,pt
sub
test
ficompl
or
ret
in
out
jae
int
jmp
jp
pop
sub
add
cld
orb
mov
push
in
inc
mov
out
pop
and
aad
imul
and
pop
jge
cltd
stos
repz
fs
pop
subb
std
and
rcr
add
add
loop
inc
mov
or
test
hlt
ja
ljmp
cmpsb
mov
push
mull
sub
sti
incb
ret
bnd
bound
aam
mov
mov
add
sub
ret
mov
in
inc
into
ret
push
sbb
in
jecxz
fs
fmull
cli
dec
into
jecxz
xchg
mov
cmpsb
outsl
es
pop
or
jo
and
iret
int
jne
pop
lods
mov
outsb
les
loopne
mov
pop
mov
leave
js
out
inc
js
lret
cmpsl
mov
scas
push
xor
fidivs
pop
dec
or
or
push
inc
inc
inc
jne
mov
sahf
mov
pinsrw
xlat
cmpsl
rcrb
imul
xor
jae
pop
jne
scas
xchg
outsl
mov
pop
mov
cmp
push
push
ficompl
cltd
sub
hlt
mov
mov
xchg
aad
push
dec
iret
icebp
cmp
popf
pusha
in
xchg
test
loope
cmp
adc
ds
mov
push
xchg
and
xchg
pushl
push
dec
inc
jge
jg
inc
cmp
pushf
lods
rcr
pcmpeqw
adcl
dec
and
or
push
pop
popf
push
popa
loop
dec
jecxz
push
sub
pop
aad
aad
jg
xchg
xchg
jo
mov
mov
aas
inc
jp
arpl
test
ret
das
xchg
frstor
mov
xchg
sub
shr
fwait
dec
into
insb
je
mov
ret
dec
add
xchg
sub
fmull
out
adcb
in
inc
mov
sbb
xchg
or
push
addr16
rcl
loope
xlat
push
std
xchg
dec
repz
gs
mov
ja
out
insl
addb
pop
mov
scas
ja
scas
mov
sti
test
sub
or
ja
push
and
or
jae
and
fs
dec
fsts
and
mov
add
push
mov
jle
je
fs
daa
inc
mov
cld
mov
add
pop
mov
xchg
fidivrl
mov
lahf
push
loopne
outsl
inc
cmp
cmp
jae
mov
mov
jge
xor
cmpsb
les
jmp
dec
pop
mov
insb
pop
enter
lods
shrl
fnstsw
mov
adc
mov
ret
shll
je
xor
dec
cltd
sbb
add
pop
stc
or
jmp
imul
xorl
mov
xchg
pop
jns
adc
rorb
pop
xchg
call
push
cs
mov
arpl
cltd
sbb
icebp
xchg
pop
or
sbb
dec
dec
xor
jnp
mov
pop
adc
and
sbb
mov
sub
loope
stos
sar
leave
pop
sub
push
inc
or
daa
popa
movsl
sahf
cmp
les
out
cmp
popa
shll
rorl
and
cmp
jne
push
mov
aaa
cwtl
insl
negl
inc
mul
jle,pn
arpl
mov
push
outsl
adc
cld
sub
mov
xor
mov
pop
push
jg
hlt
stos
sbb
pop
xorb
jo
divl
sbb
jecxz
or
push
jecxz
lcall
loop
cltd
cs
sub
loop
pop
inc
or
dec
dec
add
sbb
pop
imul
roll
mov
call
inc
hlt
pop
mov
sbb
xlat
sahf
xchg
jae
outsl
add
mov
push
jle
loop
xchg
adc
mov
movsb
xor
sbb
lret
subb
dec
pop
xchg
mov
stos
xchg
les
je
sbb
dec
or
adc
mov
call
call
cmpsl
add
mov
movsb
sbb
les
popf
adc
sub
jns
leave
jecxz
mov
adc
lods
jmp
pop
fsubl
mov
sbb
mov
movsl
mov
inc
xlat
jge
jmp
out
sbb
frstor
xchg
sbb
adc
data16
push
inc
or
and
inc
and
bound
pop
cmpsb
insb
mov
push
jmp
push
pop
jecxz
out
cmp
sbb
pop
mov
fcmovnbe
jmp
dec
jb
lods
pop
sbb
pop
xchg
in
ja
and
xorb
add
jnp
dec
pop
rorb
add
cmp
dec
test
cmc
fidivrs
rorb
mov
pop
or
loopne
mov
aas
or
movsl
push
inc
ss
loope
movsl
mov
outsl
scas
loopne
fcomps
mov
ret
sahf
out
inc
mov
and
sbb
mov
in
je
or
mov
xlat
bound
jbe
fcomps
dec
inc
enter
xor
insb
pop
ret
or
lods
aaa
push
adc
jnp
cmp
xlat
rcrl
xchg
push
and
push
fidivs
push
mov
in
jbe
jb
loope
or
or
je
pop
stos
nop
dec
push
loopne
loope
aad
clc
sbb
push
push
adc
push
daa
std
std
iret
insb
mov
dec
push
xchg
shlb
push
jne
movsl
adc
test
mov
imul
mov
xchg
jne
pop
insb
into
popa
mov
loop
mov
repnz
inc
int
aam
mov
test
inc
mov
fisubrs
cltd
pop
cmpsl
push
jnp
mov
or
movsb
scas
out
add
jno
push
mov
mov
in
leave
jmp
dec
sahf
inc
ja
ds
jnp
lret
push
loope
lret
fldt
push
outsb
adc
jmp
das
daa
pop
adc
xchg
das
ret
inc
dec
aaa
cmp
mov
orl
outsl
fstpl
xchg
add
in
or
movsl
add
testb
xchg
xchg
pop
jle
push
lret
sarl
ror
jb
jge
dec
dec
xchg
sub
sbb
mov
xor
jg
mov
pusha
fcmovbe
js
in
jne
and
add
jno
mov
cmc
add
xchg
dec
sbb
imul
xchg
jne
scas
daa
mov
nop
cmp
xchg
pop
mov
out
cmc
call
lret
setno
push
into
cld
out
sarl
mov
dec
mov
orb
xchg
out
enter
ja
sti
call
mov
dec
inc
mov
add
insb
xchg
sti
add
inc
jle
jge
xor
shl
mov
inc
insl
or
inc
jge
js
scas
popf
mov
sbb
lcall
in
mov
pop
inc
fldcw
fsubr
popl
jb
mov
xchg
cs
lock
xor
das
lcall
out
pop
mov
mov
mov
shlb
add
ds
mov
in
leave
cmp
xor
aaa
and
por
rorb
test
xor
aad
inc
mov
les
add
shrb
add
cld
mov
and
movsb
xchg
sub
xor
imul
mov
aam
add
cmpsl
xchg
shl
fs
movsl
jne
mov
inc
in
sub
mov
push
xor
out
mov
sbb
xor
sarb
xchg
and
test
add
lret
inc
aam
xchg
add
popa
sub
fsubl
mov
pusha
loope
lods
sbb
and
push
mov
cmp
lcall
mov
das
jge
xor
jne
fwait
push
xchg
clc
sarb
sub
out
or
jae
clc
imul
adc
lahf
xchg
and
movsb
sahf
and
mov
cmp
mov
pop
dec
outsb
sbb
inc
pop
jg
mov
lds
out
mov
xchg
dec
data16
sbb
pop
pop
sbb
push
lret
mov
mov
push
stos
dec
daa
fcoms
arpl
fildll
xorb
mov
dec
inc
arpl
imul
int
push
or
push
cmc
loopne
and
aad
xchg
add
shlb
xchg
pop
jns
pop
inc
fs
es
jecxz
fwait
test
mov
mov
inc
inc
xchg
leave
jp
mov
xor
jp
jle
ds
and
rcrl
rcll
cmp
aad
or
and
lret
mov
mov
add
push
jg
jp
jns
lea
jmp
aas
clc
push
imul
and
sbb
scas
sbb
mov
into
movsb
clc
push
and
lret
in
dec
ficoms
jp
pop
xor
pushf
push
cmc
add
mov
pusha
jb
cvtpi2ps
pop
mov
mov
xor
cmp
add
pop
adc
jae
xchg
xor
xorl
pop
sahf
out
jle
outsb
xor
pop
lcall
fldt
mov
or
call
rorl
jle
sbb
mov
mov
mov
pop
pop
push
pop
mov
rol
cld
dec
ja
shrb
iret
sbb
jmp
xchg
xchg
sti
mov
xor
imul
loope
jae
loop
mov
mov
je
push
cwtl
mov
arpl
fmuls
in
and
fdivl
mov
test
sbb
in
push
dec
sahf
ljmp
int3
in
and
lret
mov
jae
xchg
xchg
in
jne
in
inc
int3
scas
inc
mov
lahf
fcoml
mov
imul
add
repnz
push
enter
mov
pop
push
push
inc
fdivr
xchg
cmpsb
jge
std
xchg
lods
ja
inc
mov
dec
xlat
fiaddl
movsl
jecxz
cwtl
lods
jnp
xchg
push
sti
xchg
aas
or
xchg
xchg
push
aaa
movsb
imul
jno
adc
inc
test
inc
aam
inc
pop
aaa
lock
inc
movsb
data16
xor
lods
mov
pop
mov
or
push
jne
mov
ljmp
sarl
in
into
test
pop
fldl2e
sarl
rcrb
jns
movsb
aad
sub
shll
insl
xchg
push
sbb
fucomi
sub
sbb
int
cwtl
dec
dec
inc
cmc
dec
push
es
adc
push
stc
push
pop
inc
or
sub
adc
jae
jecxz
push
xchg
sbb
dec
popw
mov
mov
xor
lcall
mov
out
lods
fs
and
xchg
sub
jecxz
dec
sub
test
call
push
es
sbb
ss
ja
and
lods
pop
mov
and
gs
dec
dec
movsb
shll
jae
insl
outsb
mov
out
fwait
scas
pop
pushl
jle
std
pop
mov
dec
pushf
imul
inc
std
dec
sub
mov
mov
xor
stos
jne
and
repnz
stc
jb
mov
jmp
mov
xchg
and
repz
adc
stc
repz
pop
mov
adc
rclb
rcrl
pop
pushf
stos
adc
ljmp
push
out
push
mov
popf
dec
stc
pop
push
loopne
push
add
inc
sub
icebp
ret
icebp
fists
inc
inc
sarb
sbb
sbb
jnp
rclb
loopne
pop
xor
lock
cli
pop
jg
daa
inc
mov
cli
fdivrs
mov
out
rolb
mov
xlat
mov
xchg
inc
rolb
in
cmp
jno
add
mov
dec
hlt
hlt
hlt
jl
sbb
popf
jns
pop
insl
adc
dec
push
or
fs
adc
mov
fmull
mov
out
scas
mov
adc
push
jno
sbb
pop
insl
scas
in
cmpb
ret
mov
pop
icebp
ss
adc
mov
in
ds
aad
jae
sub
jmp
cmc
mov
xor
fidivl
sbb
fmull
lret
mov
cld
filds
data16
xchg
cld
shrl
sbb
jg
into
pop
sub
sbb
jmp
dec
into
cmp
in
mov
sub
outsl
or
pop
or
mov
cmpsl
arpl
add
xchg
push
outsl
xchg
cmp
pop
mov
adc
cmp
daa
ljmp
negb
or
or
daa
sbb
cmpsb
jae
mov
and
das
lods
fwait
lods
lcall
ss
xchg
cmp
add
mov
mov
loope
mov
ret
cli
and
test
fs
cli
add
daa
enter
lea
cld
mov
xchg
xchg
xchg
fildll
push
xor
ret
add
inc
mov
mov
loopne
frstor
lahf
push
mov
mov
add
test
aam
outsb
das
xor
mov
dec
pop
and
test
jb
adc
or
sub
jecxz
cltd
sub
es
mov
push
or
int3
fs
test
imulb
mov
gs
xchg
fwait
insb
sub
pop
dec
jbe
ss
jg
jge
push
rorb
stc
cmpsb
xchg
push
cmp
pop
loope
mov
cmp
test
mov
das
add
gs
sahf
mov
adc
mov
or
lret
jge
lahf
jmp
sahf
jno
adc
jecxz
xchg
mov
jae
das
xchg
shl
mov
mov
sarb
add
subl
clc
ja
or
jb
pop
sub
lret
scas
subl
pop
mov
and
cmp
jg
int
sub
lods
in
sub
outsb
inc
adc
into
add
dec
std
outsb
stc
jmp
rcr
inc
ret
insl
pop
pusha
jl
popa
jne
sbb
aas
std
insb
out
lret
mov
aad
arpl
jg
cld
aaa
mov
cli
into
add
add
mov
push
outsl
cld
xchg
daa
jmp
add
das
hlt
cmp
xor
xor
cmp
dec
jne
pushf
cmc
or
stos
push
shr
stos
data16
mov
push
rcr
push
outsl
mov
mov
lods
cmp
data16
and
sub
jae
pop
outsl
bound
dec
stos
mov
jno
dec
je
scas
loopne
cmpsl
iret
test
adc
sub
fcompl
pop
mov
sbbl
jg
mov
in
and
cmpsl
sbb
push
inc
mov
mov
cltd
jg
dec
in
icebp
das
sub
push
mov
xchg
repz
andl
pusha
pop
pusha
std
daa
in
cmc
mov
adc
into
mov
cmp
dec
in
insl
adc
stos
clc
test
out
cltd
lahf
push
add
fcoms
mov
call
adc
add
std
sti
push
jmp
mov
js
pop
push
pusha
repnz
int3
sub
fcomps
clc
addl
mov
jb
int
mov
cli
imul
shr
nop
add
dec
jl
xlat
aaa
leave
push
ret
push
add
mov
fbld
and
push
mov
fdivrl
mov
insb
push
cmp
popf
inc
fadd
xchg
jmp
rolb
dec
xchg
cwtl
aad
mov
jb
inc
in
mov
push
mov
jo
sbb
inc
mov
cmp
pusha
arpl
and
add
lret
in
and
cwtl
mov
je
int
push
hlt
cmpb
mov
mov
sub
addb
xchg
ja
mov
mov
cltd
cmc
cmp
leave
and
mov
scas
scas
int3
rcrl
stc
into
aam
push
cmp
cmp
stos
jbe
jne
clc
jo
pop
xchg
sbb
lods
ja
ret
mov
mov
das
pop
xchg
mov
ja
jnp
cmp
rorb
push
and
shll
ffree
and
lds
sub
adc
xchg
pop
int3
out
sub
xchg
sbb
insb
inc
xorl
rcrb
mov
pop
adc
add
dec
out
setns
mov
push
mov
jmp
cmp
push
xor
scas
dec
xchg
and
inc
inc
inc
outsb
xchg
je
pop
shl
pop
push
push
outsb
mov
or
subb
out
leave
subl
fstl
mov
push
mov
outsl
data16
xchg
es
cmp
xchg
pushf
sub
cmp
xor
out
ret
mov
cmp
gs
xlat
adc
adc
jp
pop
sub
mov
inc
jge
cmp
cmp
int
ja
adcl
add
add
inc
negb
push
scas
push
into
sub
cmpsl
rolb
adc
push
repz
mull
lret
sti
daa
lret
fcmovb
jns
sub
jae
jnp
fwait
lea
ljmp
sbb
add
addr16
push
cmc
leave
or
inc
xor
aam
jmp
rol
orb
gs
das
adc
ror
loop
xchg
jno
popf
pop
mov
xor
or
and
adc
rolb
cmp
out
stc
pop
shrb
push
jle
jno
lock
mov
add
sbb
bound
xor
je
jbe
jge
pushf
push
dec
xchg
lret
xor
cmp
daa
int
cmp
cltd
cmp
fdivrs
aaa
call
jle
mov
stc
jns
mov
or
jbe
jmp
pop
or
cltd
cli
push
xchg
or
mov
gs
pop
iret
jecxz
xchg
dec
movsb
jns
rolb
andb
and
inc
pop
lret
fadds
or
orl
dec
pop
pop
xadd
pop
dec
xor
adc
jmp
xor
jnp
iret
nop
mov
and
pop
in
xchg
divb
mov
test
movsb
mov
int
fnsave
insl
lahf
aam
test
lea
repz
inc
cmp
out
hlt
lock
and
jns
pusha
jmp
sti
jge
xor
mov
iret
mov
int
and
flds
xor
out
inc
fsubrl
xchg
push
jo
dec
mov
cli
inc
push
out
xor
push
stos
testb
sub
int
int
adc
and
ds
mov
test
mov
xchg
push
sarb
pop
mov
cmp
mov
sti
adc
addr16
mov
call
xchg
rolb
bswap
out
js
push
pop
testl
mov
hlt
inc
and
mov
lea
std
xor
sub
pushf
jns
fnsave
sbb
dec
in
lahf
inc
pushl
cmp
out
add
jg
inc
mov
xor
pushf
mov
sub
lahf
pop
mov
adc
sbb
jecxz
add
test
mov
and
inc
xchg
push
push
mov
hlt
aam
push
pop
mov
testl
pop
into
xlat
and
pusha
popa
jp
xor
test
sarb
rcr
mov
sbbl
lcall
js
push
push
sbb
ss
ljmp
arpl
jg
stos
dec
rdmsr
lods
fwait
inc
xchg
ja
xchg
loope
je
push
jg
push
test
push
cmp
into
sub
rclb
adc
ffreep
mov
out
les
sub
xor
push
out
push
aas
imul
ds
inc
xchg
loope
in
das
dec
dec
xchg
adc
out
or
mov
out
adc
push
dec
sbb
out
push
in
fbld
mov
cmp
enter
pop
push
inc
leave
xchg
mov
lret
xchg
icebp
sarl
ret
rolb
pop
mov
sub
inc
mov
ja
mov
push
outsl
lahf
and
dec
mov
out
inc
dec
lock
inc
jle
int
loop
push
pop
jp
mov
pop
icebp
and
ljmp
push
xor
testl
xchg
sub
adc
mov
jnp
daa
movl
dec
popa
mov
aam
cmp
inc
int3
jmp
or
add
pop
or
repz
enter
push
sbb
inc
lret
adc
adc
dec
mov
imul
outsl
mov
push
mov
idivb
jb
xor
jb
arpl
mov
enter
cmpsl
hlt
pop
push
cmpsb
scas
call
pop
jno
popa
xor
stos
cmp
xchg
clc
movsl
and
or
cmp
cmp
sahf
xchg
mov
sub
jecxz
out
add
or
add
jle
outsb
and
adc
call
mov
ret
jno
sub
or
out
lret
fadds
nop
cwtl
sti
xchg
push
or
int
inc
aad
lahf
cwtl
lods
jnp
cmp
popa
call
stc
daa
hlt
and
sbb
jmp
pusha
fcmove
in
fwait
and
jno
ficoml
in
shll
fstpt
icebp
and
gs
leave
and
fwait
lret
cmc
inc
fiadds
or
lods
pop
mov
testb
aad
fisttpl
ret
push
dec
nop
xchg
sub
dec
and
clc
subb
aas
add
push
movsl
scas
scas
jne
inc
xlat
inc
movsl
and
inc
push
in
iret
xchg
hlt
cmp
fmull
outsb
cmpsb
ds
mov
out
pop
sbb
loop
int3
cs
out
sub
iret
ss
sbb
pusha
js
mov
and
pusha
sbb
pusha
pop
xchg
or
shl
cmp
out
imulb
add
xchg
repz
inc
jecxz
and
xchg
repz
fildll
inc
rorl
sbb
shrb
into
mov
push
in
ss
mov
mov
outsb
aaa
scas
shrb
dec
stos
ror
and
xchg
mov
lds
insb
icebp
imul
cli
enter
bound
push
add
outsb
loop
push
add
mov
adc
or
jbe
jne
sbb
or
jp
push
jmp
inc
jo
add
push
push
cld
mov
jnp
movb
arpl
out
daa
cltd
mov
shlb
pop
ret
or
aaa
push
or
sti
sub
add
in
cs
das
cmp
jle
xor
mov
jnp
movl
cmp
or
lock
jae
or
ss
sti
repnz
jmp
fld1
in
loopne,pn
sub
add
jmp
add
enter
addr16
cltd
cmc
pop
lea
cmp
loopne
mov
cwtl
mov
std
les
or
lretw
jmp
cmp
inc
jp
insb
fwait
hlt
or
mov
scas
mov
frstor
mov
cs
sbb
and
xchg
sbb
movsb
pop
or
outsl
sti
cwtl
stc
outsl
mov
insb
sbb
out
stos
shlb
and
jno
push
cltd
outsb
jo
aas
cmp
fistpl
in
fisubs
sub
popa
or
fldenv
sbb
mov
cmp
pushf
jbe
mov
fistpl
ret
jle
outsb
scas
pop
and
jmp
add
sub
ss
aas
out
lahf
pop
imul
shlb
mov
pop
xor
loope
xchg
loope
hlt
clc
add
dec
fistpll
out
jne
stos
or
jb
clc
jl
jl
stos
notl
int
jae
imul
mov
mov
mov
xchg
je
inc
dec
inc
or
and
insb
adc
imul
push
pop
cld
mov
pop
or
mov
std
mov
and
stos
cmpsb
xor
pusha
push
ds
push
xchg
call
adc
jl
or
roll
add
icebp
shll
idivl
fsubl
xchg
mov
shlb
arpl
push
dec
mov
xor
ja
ret
repz
loope
mov
lahf
and
sbb
lret
and
push
enter
sbb
pop
insl
add
add
inc
aad
ds
les
pushf
stos
push
les
mov
aas
cmp
xchg
std
outsl
daa
mov
add
out
out
mov
pop
hlt
andb
push
mov
mov
fdecstp
rorb
xchg
pop
inc
push
inc
rolb
xchg
jge
add
adc
dec
insl
cmp
ljmp
push
push
push
call
and
inc
and
pusha
add
je
test
loop
out
xor
dec
lcall
scas
outsl
into
and
popf
jo
xor
push
out
add
mov
cmpsb
xor
and
cs
in
stc
mov
fisubrs
jbe
cmpsb
pop
and
cmp
add
nop
movsl
into
gs
or
pop
es
and
push
shlb
int
lcall
push
mov
push
testb
sub
xor
sbb
pop
rsm
into
push
mov
sbb
test
repz
cmpsl
or
jle
adc
data16
bound
loop
js
cmc
sbb
std
ret
ss
stos
test
xchg
jmp
fstpl
loop
sbb
jp
mov
add
ljmp
imul
ds
mov
sub
fincstp
jb
mov
jmp
jg
out
lcall
jbe
cmpxchg
lret
push
pop
scas
jg
inc
sub
outsl
fcompl
mov
or
addb
test
insl
and
test
lock
sub
inc
ss
xchg
icebp
fidivs
ret
mov
sbb
imull
dec
push
rorb
lahf
mov
bound
outsb
sbb
dec
cmp
push
dec
jmp
mov
out
mov
sbb
aam
jb
mov
xorb
pop
xchg
jne
movb
pop
xchg
aad
sbb
mov
aam
add
clc
adcl
jecxz
scas
and
fucomi
xor
add
imul
cld
cmp
rolb
adc
jge
lea
sbb
xor
lods
xchg
jbe
shll
arpl
inc
mov
loopne
push
inc
icebp
subb
ficompl
sub
pop
jae
push
push
cltd
inc
js
aam
pop
mov
jne
mov
test
aad
push
clc
dec
sysexit
xchg
adc
sub
and
int3
clc
xor
dec
or
jmp
inc
xor
jl
add
gs
loop
cmc
dec
movsl
loopne
add
into
popf
jno
fwait
mov
jecxz
scas
test
std
rolb
pop
test
leave
inc
imul
add
mov
jo
xor
push
pop
or
xor
cmc
mov
mov
iret
mov
js
ret
adc
jl
push
mov
jnp
xchg
aaa
push
shl
sbb
pusha
in
pop
ret
movsl
pushf
movsl
mov
or
adc
inc
fisttpl
ret
add
daa
cld
pop
inc
dec
dec
pop
cmp
sub
divl
mov
mov
shl
bound
leave
lods
mull
dec
xchg
mov
shrl
cld
xchg
stos
sub
jne
test
cmp
sub
outsl
pop
mov
mov
hlt
xchg
push
and
mov
xchg
stc
push
mov
jae
pop
fisubs
and
scas
xor
mov
xorl
insl
xchg
stos
lock
test
mov
popf
daa
test
mov
in
mov
push
mov
inc
neg
inc
addl
inc
dec
xor
sbb
test
mov
pop
loop
cmp
mov
mov
mov
test
adc
inc
enter
rclb
sub
jl
mov
pop
hlt
shll
xchg
sbb
pop
pop
push
xor
fidivrs
in
mov
iret
in
ret
outsl
in
jge
inc
cld
lea
loopne
fidivl
xchg
jecxz
out
dec
push
addr16
push
xor
cmp
and
xchg
or
inc
adc
lret
adc
mov
outsb
fnstcw
lahf
loopne
sahf
mov
arpl
jle
or
jb
sbb
push
jmp
adc
cmp
jo
sub
push
into
fbld
cld
int3
jmp
scas
pop
frstor
mov
js
fldl
jp
fdivrp
inc
je
mov
push
sub
lret
xchg
mov
xchg
test
pop
sub
mov
stc
jns
adc
dec
xchg
es
jo
into
dec
js
xor
filds
rcr
mov
les
adc
movsb
addr16
xchg
cmc
hlt
mov
cmp
sbb
jnp
cld
insl
xlat
dec
dec
lds
cmp
sbbl
xchg
xchg
out
sbb
pop
push
hlt
mov
inc
faddp
stos
mov
lret
fdivrp
cld
out
jne
xchg
clc
jecxz
popa
mov
test
test
ja
xor
jl
adc
insl
cmpsl
paddsb
mov
adc
inc
and
sbb
mov
mov
mov
fs
das
inc
dec
adc
xor
push
fists
daa
pop
jo
xchg
into
add
sub
adc
jecxz
push
ret
imul
inc
and
and
icebp
xor
movsl
inc
sti
arpl
xor
or
pop
mov
jbe
dec
das
outsb
sbb
inc
leave
idivb
and
in
lea
xchg
aam
pushl
lahf
adc
sbb
mov
int3
jnp
outsl
mov
xchg
stos
xchg
enter
mov
mov
cli
mov
xor
mull
sub
xor
icebp
and
adc
orl
push
push
cs
leave
xchg
mov
pop
nop
sbb
add
xor
lea
add
inc
cmc
xor
adc
inc
inc
sbb
dec
inc
sbb
inc
gs
and
jns
mov
aas
out
pop
mov
inc
fildl
adc
das
fldenv
out
loop
push
xchg
inc
jbe
mov
ret
test
daa
decb
ret
pop
movsl
adc
stc
xorl
lods
xchg
cs
cmpsl
out
insb
dec
out
adc
lea
cmc
lret
xor
mov
gs
out
mov
lret
pop
pop
adc
xchg
push
mov
inc
ljmp
pop
jg
shrb
cmp
nop
ds
xor
in
imul
push
mov
aam
leave
sbb
mov
sub
or
popa
mov
lods
mov
lds
call
out
mov
mov
out
out
and
sub
imul
cmp
sbb
lods
jo
mov
daa
sub
negl
out
test
repz
xor
xorb
aam
add
leave
mov
arpl
orb
fsubrs
dec
pop
mov
dec
ffree
mov
daa
es
sbb
out
mov
addb
pop
imulb
add
mov
rcll
in
jo
or
inc
daa
aam
nop
ret
jns
cmp
mov
sbb
daa
pop
loopne
flds
add
pop
inc
inc
add
je
jge
addr16
mov
inc
jecxz
ret
xor
adc
cmp
mov
ror
sub
int3
mov
mov
jp
dec
addr16
dec
pusha
sub
gs
push
add
mov
daa
adc
cmc
js
in
loop
sbb
add
cmpsb
ds
fwait
insb
inc
sub
and
cmpsb
inc
cmp
mov
xor
push
sub
in
ret
xchg
int3
or
pop
pop
je
testb
stos
cli
imulb
mov
adc
mov
nop
enter
int
ret
lods
sbb
shll
fcmovne
fidivrs
leave
jge
or
andl
or
adc
aas
repz
pop
movsl
xchg
add
and
jp
sbb
cld
icebp
test
xor
mov
outsl
or
push
test
leave
mov
mov
push
std
adc
ret
mov
pop
xor
les
mov
movsb
add
popa
lods
and
hlt
addl
imul
lret
test
lret
daa
inc
and
lock
outsl
clc
js
xchg
dec
and
jmp
push
sub
or
push
bswap
popf
push
pop
xor
scas
jne
popa
jle
popa
inc
xlat
roll
scas
or
andb
insl
fisttps
adc
fistl
and
cli
lret
adc
cmp
stos
pop
dec
sub
jmp
jnp
adc
imul
cmp
cmp
mov
xchg
aas
insb
incb
jbe
rolb
scas
test
mov
mov
pushf
sahf
sbb
mov
inc
push
and
cmp
sub
call
inc
int
jns
sbb
dec
out
xchg
out
bnd
rcr
pushf
cmpsb
bsr
or
shrl
addr16
sbb
inc
je
pusha
movsl
stc
mov
push
sbb
hlt
in
xchg
in
retw
xchg
call
add
adc
loopne
lret
repnz
movl
adcl
sub
sub
lret
push
fildll
ret
rcrl
sti
mov
or
push
jno
movsl
mov
jecxz
dec
adc
daa
sbb
std
adc
out
bound
mov
xchg
dec
jl
je
cmp
test
mov
lcall
lods
imul
scas
inc
xchg
mov
in
mov
popa
push
cwtl
int
push
ss
sbb
ja
mov
xchg
jo
jg
push
lret
imul
mov
test
mov
stos
fadds
push
pop
mov
sbb
push
and
adc
aad
xchg
jb
sbb
mull
push
ret
int
push
les
mov
aam
xor
lret
push
and
xor
stc
push
and
call
mov
push
inc
add
cmp
and
call
addr16
lock
xor
mov
movzbl
hlt
outsb
push
pushf
add
scas
cmpsb
cmp
nop
dec
or
or
inc
ror
pop
out
cmp
in
xchg
shlb
cmp
insb
mov
jns
repz
sbb
insl
sarl
int
cmpsl
rcrb
iret
and
repz
mov
mov
cmp
pop
mov
xor
mov
rol
cmpsb
inc
addb
mov
cmpsl
push
aaa
and
adc
jge
into
mov
icebp
push
cmp
pop
pop
sar
push
mov
imulb
pop
jg
imul
or
sub
and
daa
gs
jmp
rorb
dec
jg
dec
popf
xlat
mov
andl
lock
clc
sub
mov
pusha
ds
in
insl
bound
xor
jns
sahf
test
into
ja
push
add
or
jecxz
test
xor
pop
call
lret
adc
enter
mov
scas
test
adc
add
xor
push
mov
mov
stos
push
stc
xchg
les
mov
fnstenv
inc
int3
sbbl
cmp
xchg
adc
es
dec
inc
push
jge
jle
dec
xlat
jae
jns
ret
push
push
int
aad
shrb
jne
add
mov
push
sbbl
or
fwait
repz
push
jmp
xor
ret
shll
mov
scas
lret
sbb
push
mov
cmp
gs
jge
in
das
dec
xchg
dec
ret
sub
cli
stos
add
sbb
xchg
lds
mov
adc
dec
fsubs
or
imulb
xor
lahf
and
pop
inc
les
jmp
das
int3
sahf
pop
jae
jne
jge
bound
jns
push
or
add
cmp
mov
mov
call
xor
les
mov
loop
hlt
roll
dec
fsubr
xchg
movsl
push
mov
lock
mov
into
fidivrs
aad
dec
xchg
jle
insb
pop
into
stos
rcl
out
into
add
and
dec
mov
sbb
add
mov
aam
or
push
ja
call
lods
sbbb
xor
jae
or
loope
inc
fwait
test
leave
push
loopne
repnz
jbe
add
mov
mov
xchg
pop
imul
je
cmpsb
arpl
xchg
int3
push
xchg
mov
and
sbb
adc
jb
loope
xchg
inc
aaa
into
add
xor
xor
mov
aaa
push
enter
lahf
stos
shrl
push
scas
out
pop
jmp
sub
sti
dec
push
lret
push
or
mov
shll
mov
inc
popf
mov
rolb
into
incb
jmp
mov
cld
subl
stos
dec
lret
pop
sub
pop
imul
lods
out
shlb
test
xor
dec
lods
jecxz
mov
sbb
jne
fcoml
dec
cmp
or
jmp
dec
out
pusha
pop
mov
int3
cltd
loopne
stos
add
pop
jp
sub
cmc
push
mov
mov
xor
cmp
adc
rcl
xchg
xor
subb
incl
push
xorl
les
push
icebp
es
xchg
cltd
das
or
std
js
fstpt
push
cmpsl
and
roll
clc
jp
cmp
pop
jmp
shlb
adc
inc
fdivl
jno
jns
mov
mov
mov
mov
mov
adc
jecxz
mov
xor
shr
adc
cs
in
arpl
adc
mov
xor
shll
adc
fdivs
jle
sub
shll
cmp
mov
jmp
out
lods
lods
das
popa
insl
pop
push
pop
add
imul
ret
push
inc
lds
add
lea
xchg
inc
ficomps
xlat
xchg
insb
negb
push
mov
imul
sbb
lahf
std
stos
jno
aad
ljmp
stos
cwtl
rclb
cwtl
fs
icebp
aaa
push
push
push
adc
pusha
pop
mov
adc
negl
or
inc
ss
gs
fcomp
lcall
and
ret
pop
jne
icebp
out
pop
xchg
aam
mov
or
imul
lahf
in
leave
jp
pop
push
insl
iret
jbe
call
mov
cmpsl
gs
xor
test
pop
pop
je
shlb
jg
sub
pop
and
sub
sbb
movsl
jecxz
fidivrl
lds
sbb
pop
in
sarb
sub
dec
jmp
cmc
ret
orb
cmp
aam
test
bnd
adc
int
iret
add
and
dec
and
mov
and
fnsave
or
jecxz
int
test
in
jecxz
ds
test
lds
daa
out
xchg
popf
adc
dec
jecxz
or
in
xlat
loop
mov
enter
pop
pop
lods
pop
xor
or
cmc
cmp
lds
sbb
add
adc
les
shrl
mov
xor
xorb
cmpsb
dec
je
dec
paddd
lea
arpl
mov
sbb
int
jle
cmp
inc
clc
push
movsb
add
repz
add
fnstenv
daa
and
cmpl
add
mov
loope
lret
pop
add
mov
push
mov
sub
and
xchg
sbb
movsl
mov
out
xchg
test
jge
pop
cmp
adc
cmpsb
sub
mov
sub
aaa
sbb
outsb
mov
cmp
mov
push
add
add
lods
or
cmp
pop
std
sbb
mov
mov
loope
scas
adc
jle
push
pop
lahf
imul
sub
mov
dec
xchg
pop
mov
aam
and
repz
mov
imulb
mov
repz
lock
fcmovnbe
dec
mov
adc
pop
pop
andl
scas
and
adc
call
inc
xorb
dec
mov
sub
mov
hlt
fwait
xchg
lret
jb
fs
inc
aaa
das
mov
outsl
or
int3
sub
loop
mov
push
test
inc
add
lahf
ret
dec
push
sbb
ljmp
pushaw
cltd
cld
ret
and
xchg
sbb
clc
sahf
jno
popf
int
cmp
push
leave
pop
pop
pop
fxch
xchg
sub
shll
cmp
in
sbb
test
dec
lods
lock
cld
arpl
jmp
jge
mov
leave
cmp
adc
pusha
xchg
andl
push
daa
mov
jecxz
and
mov
aam
popf
test
ret
arpl
jl
es
jge
out
sar
subb
in
and
iret
jno
ss
or
aaa
loope
xorb
rclb
popf
inc
ficompl
sub
mov
xor
xchg
jp
fstps
es
lods
arpl
sbb
out
in
pop
xchg
dec
in
xor
into
xchg
call
daa
xlat
scas
mov
enter
fisubrs
stc
cmc
xor
xchg
sbb
or
xor
incl
and
pushf
sub
or
or
push
cmp
mov
aaa
nop
sbb
aam
out
xor
dec
inc
arpl
aas
int3
mov
outsb
and
imul
add
sldt
mov
shrl
aad
ret
or
sub
jae
jl
or
cmpsl
inc
test
test
cmp
lret
cmp
or
std
scas
mov
cmp
lret
cmpsl
negb
mov
cmp
pop
mov
pop
std
mov
and
inc
pop
popf
sbb
inc
or
mov
lds
xlat
adc
mov
adc
leave
cld
push
imul
fiadds
sbb
in
arpl
aas
and
and
or
outsl
mov
int
popf
lahf
call
mov
imul
loopne
mul
lds
inc
cmp
aad
lods
out
mov
icebp
and
jnp
inc
or
arpl
je
iret
in
sub
and
push
mov
jge
mov
aad
dec
lahf
sub
loopne
cmp
jno
fisubs
mov
push
sub
mov
adc
push
push
gs
jmp
inc
push
pop
sbb
mov
add
in
mov
or
dec
ret
aas
je
lods
cmp
dec
jne
repz
inc
dec
in
and
pusha
xchg
clc
dec
into
cmp
sahf
sarb
rclb
sbbb
mulb
xchg
fsubrs
adc
ss
jns
push
bound
jg
mov
ljmp
mov
sti
mov
clc
testb
outsb
enter
jo
xchg
xchg
and
adc
faddl
cli
xor
popa
sbb
xchg
xchg
fidivl
movsb
scas
in
aad
push
xor
icebp
icebp
fbld
cmc
repz
data16
mov
mov
or
xor
xchg
lea
lret
xorb
push
push
jle
dec
mov
aaa
lods
inc
pop
fdivrl
jne
sub
pop
jbe
ljmp
jecxz
cmp
in
cli
jae
or
pop
cmp
das
sbb
adc
ss
sub
push
in
test
std
xchg
xchg
sahf
test
push
hlt
out
mov
jmp
or
jl
int
lret
gs
sub
jge
shr
jecxz
enter
cwtl
and
flds
outsl
xchg
xchg
cmpb
pop
sbb
mov
ljmp
stos
push
xchg
pop
sbb
mov
les
pop
jo
lret
inc
into
mov
mov
lret
cmp
fcmove
scas
lret
aaa
jg
lahf
pop
rcll
arpl
lods
hlt
rorl
mov
jle
outsb
mov
shll
mov
xchg
enter
xchg
sbb
in
hlt
push
jno
pop
lods
xchg
push
xor
addr16
dec
sbb
loopne
jne
dec
inc
mov
popf
loopne
stos
jmp
lods
data16
mov
mov
and
jmp
adc
adc
pop
jmp
mov
dec
mov
xor
insl
sub
scas
sarb
pop
inc
popa
push
push
js
movq
mov
dec
push
xchg
js
inc
adc
andb
in
xor
add
add
dec
xor
cmp
scas
jecxz
sub
mov
aad
xchg
sbb
xchg
jp
test
push
ret
enter
stos
xchg
fnstenv
movsb
cwtl
loopne
imul
pop
js
mov
cmp
aaa
inc
push
jecxz
pop
and
sub
pop
push
cmpsb
sub
mov
gs
jge
cmpsb
add
dec
sbb
lcall
inc
loopne
xor
jmp
outsb
xchg
mov
mulb
dec
iret
inc
inc
lahf
push
sti
shlb
jecxz
pushf
mov
push
mov
pop
xchg
xor
mov
jecxz
jne
popf
movsl
cltd
cmpl
andb
fisttpll
pop
jg
jecxz
cmp
mov
jg
test
arpl
lods
fs
ja
xor
add
xchg
mov
mov
or
pop
addr16
leave
add
lret
cmpsb
cmp
adc
arpl
cs
jns
add
sub
xor
cmp
jne
daa
lret
mov
xor
push
loop
lret
mov
pop
rcrb
cmp
adc
mov
lcall
and
stos
pop
sbb
and
fsubrs
je
andb
add
mov
jns
push
pop
mov
push
add
push
dec
popa
enter
add
test
add
addr16
sub
mov
pop
lahf
jb
xchg
cs
cmpsb
imul
repnz
dec
fs
add
test
ljmp
rorb
jbe
ret
sbb
or
pop
sarb
lds
mov
ret
stos
test
lahf
sbb
lods
std
push
xlat
test
leave
ret
shlb
cltd
xorl
sub
aad
jo
add
arpl
arpl
sub
loop
loope
outsb
push
pop
or
pop
push
ret
push
xchg
js
loopne
repz
fcmove
ret
mov
pop
shrb
jb
popa
mov
xor
lcall
xchg
popa
add
insl
mov
jns
push
inc
repz
scas
dec
dec
popf
call
sbb
mov
adc
dec
or
mov
aaa
fwait
push
mov
push
into
inc
push
stos
mov
repz
dec
add
cli
sub
inc
push
jmp
ljmp
insb
nop
push
and
gs
cwtl
sub
cmp
shr
movsl
lods
or
arpl
xlat
push
add
sub
mov
call
dec
add
and
inc
rolb
mov
test
std
jmp
hlt
jnp
push
mov
lods
adc
out
push
xchg
dec
xor
pop
inc
negl
addb
enter
cltd
add
jg
sahf
test
pop
out
mov
inc
mov
add
push
and
jecxz
in
dec
loopne
dec
ljmp
sub
pop
sbb
jno
sbb
enter
lret
pop
cs
jge
sub
inc
jmp
inc
mov
mov
addr16
fldcw
test
push
sti
js
mov
or
and
cmpsb
rol
push
push
fnstsw
out
pushf
pop
jmp
ds
fistps
nop
inc
lds
push
pop
fcomps
adc
fistpl
stos
mov
xchg
int
dec
mov
nop
push
icebp
jnp
cmpsb
je
dec
or
inc
jb
push
out
stos
sub
adc
xor
xlat
in
push
rcll
std
push
inc
movsl
adc
out
hlt
cld
sbb
mov
ja
push
xor
jnp
leave
push
lea
fs
mov
cli
or
fsts
cmp
test
test
mov
lods
pop
cmpsb
push
daa
jp
xor
mov
add
push
insb
push
sbb
mov
clts
add
pusha
cmpb
mov
lods
dec
clc
mov
xor
jmp
clc
fistpl
adc
mov
cld
adc
leave
aad
mov
repz
mov
outsl
dec
icebp
sub
mov
xor
sbb
push
hlt
in
jno
pop
test
fdivs
enter
cli
mov
jns,pn
and
pop
cmp
jmp
mov
inc
fadds
jecxz
cmp
mov
mov
add
jmp
in
inc
push
mov
jmp
dec
lds
stc
movsl
sub
cmpb
icebp
ljmp
and
pop
test
push
jnp
push
mov
std
cmp
pop
jbe
stos
push
sar
cld
sub
xlat
ficoml
rcrl
stos
jo
faddl
pop
into
pop
addb
ficompl
in
iret
cltd
mov
mov
fnsave
mov
in
inc
or
adc
fsubrl
mov
jb
pop
jg
jnp
pop
pushl
adc
cld
xchg
mov
push
je
push
mov
fsts
mov
cmpsl
je
fsts
mov
lds
pop
bound
dec
mov
pushf
kandw
outsl
call
push
imul
and
out
pop
cltd
arpl
cmp
and
int
sub
aaa
loope
xchg
movsb
iret
xor
pop
test
sbb
push
mov
int
scas
mov
xor
push
push
add
and
jle
cmc
cmp
inc
insl
or
insl
int
arpl
fs
pop
xchg
xor
inc
lcall
call
nop
rorl
das
call
sub
fnstsw
push
pop
fidivs
add
movsb
xor
push
xchg
test
popf
lcall
jp
jle
int3
ror
xchg
mov
inc
in
dec
xor
in
cs
stos
and
daa
push
fs
xor
mov
sbb
hlt
jl
fists
loope
mov
popf
xor
imul
pop
or
imul
mov
sar
ret
push
stos
je
sbb
pushf
push
cli
jne
adc
hlt
push
mov
aaa
por
cmc
sub
pop
mov
pusha
mov
or
push
xchg
push
movsb
fldcw
into
cli
ljmp
mov
pop
movsb
push
out
pop
outsb
int3
adc
arpl
cmc
adc
xorb
xor
stos
insl
int
lret
push
lret
in
mov
stos
mov
arpl
insb
int3
cmp
cmpsl
aam
popa
movsl
call
add
xchg
adc
push
mov
or
cmpl
iret
push
sub
adc
bnd
cmp
in
cmc
mov
ja
imul
insb
ror
jae
out
mov
jp
dec
push
addb
mov
adc
mov
lds
pop
or
test
sub
dec
pop
xor
out
ja
cltd
ret
scas
cmp
lea
das
in
scas
scas
repz
sub
leave
je
hlt
mov
add
xchg
lea
sub
ds
add
int
and
push
pusha
outsl
push
popfw
dec
sbb
cmpb
xor
test
xor
out
mull
test
push
movsb
push
xchg
aas
sub
sub
outsb
and
movsb
mov
inc
outsb
mov
movsb
mov
addr16
int
mov
inc
dec
testb
sub
mov
mov
jl
lcall
in
push
jns
aaa
ss
in
insb
int3
fucomi
inc
rcrl
xor
mov
repnz
js
mov
popa
add
std
and
shrb
dec
inc
jmp
dec
in
xchg
cmp
ljmp
jmp
ss
xor
enter
call
mov
cmp
cwtl
stos
adc
test
pop
xorb
push
push
sub
add
icebp
movsl
adc
cmpsl
sub
inc
je
inc
sahf
stos
ret
mov
outsb
in
jne
add
lds
loop
add
fidivrl
sub
fisubrl
nop
push
dec
push
cmp
inc
mov
sub
jo
xchg
mov
mov
scas
fbld
ficomps
gs
daa
data16
jecxz
or
stc
das
daa
lret
loopne
inc
add
dec
jp
xorl
sbb
dec
adc
cmp
jl
popl
cltd
mov
jl
int
sub
cmp
lods
out
lods
ljmp
call
xlat
push
pop
or
add
mov
mov
into
mov
out
mov
and
icebp
mov
xchg
aaa
lcall
xchg
fs
ljmp
jo
sbb
rcrl
pop
popa
xlat
icebp
inc
out
out
cmp
mov
mov
mov
sbb
enter
jne
pop
enter
ljmp
repz
push
sub
sub
add
lret
cld
ljmp
testb
adc
bts
mov
mov
jbe
mov
gs
and
stos
jb
sti
mov
pop
nop
mov
loope
repnz
loope
xchg
scas
rol
and
fbld
gs
stc
lahf
mov
int3
sahf
dec
jecxz
cmp
sub
or
popa
mov
mov
inc
fisttps
loopne
pop
rolb
sbb
mov
cmpsl
lcall
mov
pop
or
lock
and
into
ds
popa
or
insb
cmp
aam
sub
lcall
push
jns
and
push
mov
add
aad
and
jno
jo
jmp
std
pop
in
adc
mov
movsl
dec
std
sti
pusha
idivb
adc
pop
xor
mov
sahf
popf
sbb
inc
pop
dec
test
dec
test
push
cli
lret
or
push
or
pop
out
mov
cmp
adc
sti
pop
jle
and
xchg
cwtl
inc
mov
insb
imul
push
popa
add
mov
hlt
ljmp
adc
jae
mov
push
frstor
addr16
xchg
or
cmpb
call
test
fidivrl
jecxz
ds
xchg
jae
std
in
fst
into
fdivr
shlb
loop
int
test
outsl
xchg
push
sub
and
ret
or
shrl
push
and
jo
js
orl
arpl
scas
fnstsw
dec
jns
sub
cmp
shll
jge
xor
loope
mov
rcrb
jno
cmp
and
fstpl
icebp
cmpsb
jo
push
mov
popa
popf
daa
cmp
jl
js
popa
cmp
cltd
movsb
popa
sbb
push
mov
inc
shlb
push
cwtl
pop
cld
add
jp
loope
les
cmp
enter
adc
incb
or
jmp
pushf
push
add
shrl
enter
or
push
xchg
call
hlt
jp
enter
mov
add
sti
xlat
popf
test
push
std
out
gs
popa
or
in
mov
dec
rorl
in
sahf
imul
inc
xchg
sbb
jmp
push
jae
inc
jns
sbb
dec
push
cltd
inc
and
add
fwait
cmpsl
hlt
hlt
push
loopne
loop
push
push
xchg
popf
cmp
pop
icebp
sbb
stos
inc
popf
test
aam
add
and
or
add
and
push
jns
in
jbe
icebp
sbb
iret
jbe
testl
mov
xchg
cmp
hlt
sbb
imul
sub
mov
ret
jmp
cmpsb
call
xor
push
shll
pop
xchg
sbb
xor
lahf
cmpsl
out
adc
jp
xor
xor
mov
test
push
sbb
test
or
decb
sub
mov
stos
icebp
jnp
pop
jb
or
and
setns
std
in
push
das
fwait
cmp
mov
or
push
cmp
jmp
jae
mov
fdivp
aam
scas
push
jbe
jg
aas
dec
fwait
xorl
mov
sub
push
pop
movsl
or
jae
jbe
data16
mov
cmp
adc
arpl
fstp
aad
pop
imul
or
cmp
pop
jnp
adc
mov
das
outsl
cmp
jno
pop
xchg
dec
nop
inc
mov
mov
adc
push
pop
clc
pop
sub
outsl
sub
pop
subl
icebp
mov
test
xor
mov
aad
mov
sbb
popf
aaa
mov
cmpsl
data16
pushf
incb
movsl
sub
xor
lahf
enter
jp
in
rorl
aad
not
sbb
insb
movsl
fcompl
jle
push
xchg
pop
pop
stos
sbb
test
clc
icebp
lret
bound
jg
adc
jg
and
mov
lcall
lods
sbb
mov
fsts
fisttpll
jl
push
mov
insb
jbe
in
mov
roll
adc
outsl
pushf
and
call
jo
inc
sti
xchg
inc
sub
loope
mov
lahf
pop
cltd
ljmp
ret
divb
pusha
xchg
adc
and
lods
cmp
adc
sti
pop
jecxz
xchg
pop
insl
call
out
jne
mov
fucomp
or
jle
xor
pop
mov
cld
in
idivl
pushf
cmp
adc
idivl
jle
clc
xchg
fincstp
rcrb
cs
sbb
test
sbb
cld
inc
add
adc
mov
cmp
addl
cmp
jp
cli
aad
mov
xchg
and
push
mov
addb
push
ret
mov
outsl
sub
sbb
mov
jbe
lea
cltd
bound
xchg
test
shl
sub
mulps
cmp
mov
lods
push
cs
lods
and
cld
aas
and
test
inc
out
mov
sbb
bound
mov
cmp
outsb
aaa
sbb
pop
leave
jecxz
sbb
sbb
cmp
xchg
shlb
scas
not
fwait
loop
jp
fcoml
push
push
mov
sbb
outsl
cld
jne
ret
outsl
imul
xchg
push
mov
pop
fimuls
in
fsubrs
stos
loopne
push
mov
mov
pusha
shrl
fdivs
mov
mov
cmp
xor
pop
and
mov
lea
out
call
test
fildll
push
out
push
cmp
lds
imul
mov
push
sub
andb
mov
inc
ljmp
or
mov
pop
xchg
or
xchg
mov
rcrl
jo
arpl
shl
cwtl
xchg
cmpsb
aam
push
push
rcl
call
push
fcoms
subb
xchg
mov
xor
into
push
sub
mov
xor
sub
pop
imul
test
push
fnstsw
mov
aaa
pop
rclb
test
leave
push
test
jo
jo
mov
push
call
mov
out
mov
mov
push
sub
pop
ds
push
jmp
outsb
test
ja
fstps
cmp
push
cli
xor
test
imul
notl
mov
inc
in
xchg
sub
cmpsb
aaa
xor
enter
movsb
xlat
jo
xor
fwait
test
mov
testb
repnz
insl
push
or
out
daa
out
mov
mov
and
mov
shl
mov
pop
jge
mov
mov
jbe
mov
inc
pop
inc
push
loop
dec
cmpsb
in
icebp
fisubl
outsb
xorb
mov
fsubrs
repnz
sbb
xchg
movsb
jle
mov
mov
pop
or
push
mov
ret
mul
jle
cld
adc
int
fiaddl
mov
push
pushf
arpl
jge
add
fwait
mov
das
icebp
cmpl
xchg
cmpsl
jne
in
not
xor
push
ljmp
cli
sbb
mov
lcall
push
imul
adc
pusha
cmp
inc
mov
pop
les
mov
push
popf
flds
mov
pop
push
jmp
push
mov
mov
mov
iret
sbb
or
push
into
test
fwait
xchg
aaa
push
jno
ja
in
lcall
cmp
leave
cmp
stos
jo
fst
out
mov
cmpsb
pop
dec
xlat
xchg
add
repz
mov
pop
pop
mov
inc
fnsave
cli
sub
xchg
cmc
xor
pop
fisubrs
aad
sub
pop
or
sub
loop
scas
fmull
inc
cmp
aaa
fisttpl
stos
inc
lret
test
adc
dec
fcompl
pop
int
sub
mov
mov
mov
cmp
pop
sti
jle
fcmovnb
pop
mov
mov
fmull
test
frstor
cmp
and
test
sub
pop
scas
pop
outsl
popa
stc
or
and
jno
push
insl
mull
push
incb
mov
inc
push
push
dec
mov
xor
leave
and
sbb
pop
ss
and
adc
out
out
pop
icebp
insl
mov
ss
enter
data16
dec
mov
fimuls
or
cmpsl
mov
cmp
push
jne
fcmovnbe
push
add
xchg
mov
iret
add
hlt
cld
or
dec
rcll
mov
js
cmp
xor
outsl
xor
mov
int
pop
mov
lcall
cmp
sub
push
daa
and
pop
sti
xor
add
mov
push
mov
hlt
sahf
addr16
push
jg
imul
repz
enter
aad
dec
enter
js
addl
push
ret
sbb
out
into
dec
rcll
xlat
movsb
mov
sbb
loopne
add
es
pusha
adc
mov
and
dec
out
fbstp
push
inc
pushf
sub
or
jo
fmul
dec
xchg
pop
popa
xchg
dec
xchg
dec
outsl
xor
lret
or
data16
scas
out
mov
cmpsl
scas
dec
sahf
cmp
jne
or
push
sub
cmpl
push
das
nop
fisttpll
xchg
push
cmpb
stos
pop
addr16
pop
loopne
xor
jne
fisttpl
mov
sbb
leave
dec
xchg
out
jne
shlb
xchg
adc
adc
mov
jp
leave
fisttps
pop
xor
mov
lcall
addr16
push
pop
mov
aad
mov
outsl
inc
bound
push
ret
jge
cmp
gs
mov
xchg
push
mov
dec
mov
sub
in
inc
jns
fdiv
fwait
dec
push
mov
xlat
pop
jnp
inc
cmp
push
leave
das
mov
dec
mov
out
das
adc
push
add
cmp
lret
fmull
xchg
mov
mov
inc
sub
dec
xor
and
call
mov
imul
lds
dec
insb
mov
xchg
pop
test
ljmp
xchg
movsb
cmpsb
ds
cmc
mov
mov
jp
xor
push
and
pop
repnz
and
cld
mov
jmp
int
flds
dec
ret
lock
xchg
xchg
clc
xchg
push
adc
in
sbb
sbb
fdivr
jg
lcall
mov
mov
lret
sbb
inc
loopne
popa
mov
jmp
mov
jae
push
adc
or
and
addb
enter
xchg
push
xlat
push
ficoml
jae
mov
dec
xchg
sub
pop
lods
xchg
jno
pushf
mov
mov
jg
shlb
imul
mov
jecxz
into
lcall
jecxz
popf
imul
insb
pop
hlt
in
cmp
fs
fbld
ss
nop
mov
cmpb
data16
push
mov
mov
pop
cmpsl
subb
cs
sub
les
jno
leave
fwait
dec
pop
das
loop
cmp
imul
push
mov
ret
pop
inc
mov
into
test
adc
jno
xchg
scas
bound
inc
add
sub
jmp
mov
adc
je
fsubrl
pusha
lods
push
mov
jno
pop
arpl
mov
mov
lds
push
ficomps
xchg
jl
jno
int
inc
pop
bound
xchg
or
outsl
mov
jbe
sub
insb
ret
pop
mov
mov
jno
and
shll
test
je
mov
jbe
cmp
sbb
insl
cwtl
out
and
sbb
inc
sub
xor
outsb
lods
mov
out
iret
icebp
pushf
cmp
shrl
cmpsl
sbb
push
dec
sbb
jo
mov
aad
mov
xor
add
fwait
enter
hlt
scas
nop
adc
andl
and
inc
sbb
dec
cmc
ret
cli
push
dec
addb
mov
cld
cmp
cmpsb
aad
aad
dec
sbb
or
mov
frstor
cld
es
add
or
xchg
sbb
and
enter
sbb
cs
fisttpl
lret
or
mul
cmp
mov
rcrb
lods
sbb
out
pusha
pop
insl
jne
inc
insb
push
lcall
mov
push
lds
sbb
aas
and
jb
xchg
adcl
push
ljmp
loop
or
sub
fildll
mov
hlt
adc
mov
in
pop
xlat
fs
pop
xchg
jecxz
lcall
add
mov
leave
clc
fwait
movsl
movsl
mov
fmull
sbb
movsb
cmc
mov
xor
sub
ljmp
dec
sub
jmp
mov
xchg
int3
pop
lods
xchg
adc
adc
hlt
notl
xor
test
sub
mov
push
mov
dec
dec
cmp
push
adc
jb
lods
pop
xchg
pop
xchg
pop
jmp
xchg
mov
daa
popf
repnz
stos
push
adc
xor
addr16
jecxz
sub
jnp
or
add
imul
pop
in
push
adc
pop
movsb
orl
hlt
cmp
xchg
fs
pop
insl
rcr
push
dec
lret
inc
sub
scas
out
fbstp
or
mov
out
imul
or
ss
push
loope
inc
mov
mul
cmp
ljmp
pop
inc
pop
cmp
xchg
lock
adc
bound
lods
in
sahf
nop
ss
faddl
add
adc
vsqrtsd
push
dec
outsl
jo
push
inc
mov
clc
push
aad
dec
xor
mov
lcall
xchg
push
in
dec
lret
pushf
cmp
dec
and
xchg
leave
cli
cmc
push
test
push
ret
or
pusha
das
dec
fldl2e
in
adc
cmp
fstl
cs
jmp
repnz
or
or
sub
or
das
cmp
push
push
pop
push
icebp
lods
out
outsb
pcmpeqb
fwait
test
lods
jmp
ljmp
icebp
int
adc
movsb
sahf
push
cmc
data16
in
add
jge
test
xchg
movsl
rcrl
sbb
mov
jge
mov
mulb
loope
sarl
cmc
loope
into
dec
shll
inc
pushf
or
call
int3
add
inc
rol
mov
push
mov
mov
fwait
xchg
mov
pop
jmp
jle
inc
pop
testb
cmp
lea
pop
pusha
daa
testl
dec
xor
shl
dec
push
dec
pushf
loope
and
jg
mov
hlt
add
or
xor
sbb
jmp
ss
jmp
dec
lock
push
rorl
sub
sbb
cmp
in
pop
sbb
incb
divb
and
ror
sub
iret
enter
cmpsl
inc
imul
or
out
sub
andb
stos
push
repz
mov
repnz
inc
push
jecxz
jbe
cmpsl
sahf
cmp
int
add
cmp
and
dec
out
jmp
sti
sub
lea
xor
mov
enter
adc
add
into
lcall
push
in
adc
out
push
sbb
sbb
adc
outsl
inc
gs
mov
sti
pop
cltd
push
sbb
jge
aad
call
sub
pop
jg
mov
mov
aas
add
into
jecxz
hlt
lret
sub
dec
or
mov
or
adc
and
inc
jg
push
adc
sbb
jnp
les
push
cs
inc
rorb
mov
inc
push
lds
aas
test
xchg
dec
xor
cltd
data16
or
push
xor
dec
stos
push
cmp
xchg
pusha
cmp
imull
adc
loopne
push
insb
adc
dec
mov
xchg
pushf
imul
sbb
dec
movsl
js
mov
pop
addl
and
rorb
je
mov
cmp
shll
push
and
loop
push
xchg
mov
jge
inc
testb
inc
jb
inc
lock
aaa
add
adc
add
xchg
or
or
and
pop
or
sbb
cmpsb
fimuls
cltd
pop
in
jp
pop
push
sbb
fisttpl
push
and
cmpsb
aad
mov
push
insb
dec
push
ret
in
sub
insb
iret
add
sub
ss
jp
jp
jp
or
push
inc
mov
nop
jge
cmp
in
and
and
fwait
jne
dec
ds
dec
mov
ss
jno
pushf
mov
into
add
cmp
mov
in
sahf
dec
jmp
lcall
sub
js
shll
scas
push
cmp
out
fistps
pop
sub
cld
clc
adc
inc
dec
movsl
clc
jne
sub
in
icebp
cmp
jmp
and
mov
jg
adc
test
jne
xor
aas
in
fstpl
pop
pop
ja
sbb
lds
fildl
lea
decb
iret
sub
dec
add
add
lret
cmp
scas
and
dec
pop
pop
in
or
sbb
in
insb
jle
adcl
jne
int
lea
sub
dec
mov
out
jne
inc
jno
jnp
aad
ja
pop
lret
stos
out
mov
dec
pop
pop
and
sbb
cld
sub
lret
dec
pop
add
add
sub
repz
jo
jl
popl
mov
je
xor
mov
adc
mov
addr16
repnz
stos
inc
iret
in
and
imul
mov
jnp
inc
dec
roll
jmp
outsl
cmp
jno
pop
loope
loopne
leave
or
xor
jnp
popf
test
mulb
xor
fdivr
and
dec
fisubrs
inc
sti
aam
cmp
addr16
imul
jno
mov
stc
in
mov
pop
aam
lcall
adc
sti
dec
js
insb
inc
leave
lds
jge
out
leave
movsb
xor
xor
xor
in
std
xchg
lcall
popa
pop
dec
out
adc
mov
pop
movsb
test
mov
ret
sti
lcall
mov
push
popa
jno
inc
jne
cmpsb
xor
sbb
xchg
int
adc
in
clc
or
mov
jl
ljmp
rcr
jl
divb
sub
gs
cld
jge
push
adc
cltd
pop
mov
add
sbb
sbb
and
jnp
and
sub
sub
mov
sub
xchg
inc
adc
push
cwtl
pop
imul
pushf
pop
push
mov
dec
jge
jl
fildl
xchg
sbb
add
into
push
dec
sbb
arpl
in
mov
les
and
xchg
fiaddl
sub
test
sub
cmc
pop
jno
and
and
fnsave
outsb
xchg
mov
xchg
push
clc
loop
mov
fisubrs
dec
out
push
push
fcoms
sub
iret
push
push
ljmp
and
aas
jne
mov
test
cmp
cmp
fwait
out
jnp
adc
lds
dec
movsb
push
pop
ljmp
or
lds
dec
jp
das
cmc
xchg
fmulp
rclb
pop
jne
insl
or
or
adc
sbb
cwtl
int3
mov
adc
and
cmp
mov
lods
stos
sub
inc
inc
pop
fs
mov
add
bound
movsl
pop
in
sbbl
dec
loope
pop
lahf
bt
stos
imul
scas
adc
add
lea
daa
cmpsl
dec
stc
dec
inc
jns
imul
cmp
int3
jge
std
lahf
loope
repz
call
adc
cmp
or
jne
aam
xchg
xchg
cmp
pop
shrb
fnstcw
stc
dec
pusha
dec
test
xchg
dec
in
jmp
or
aad
inc
cltd
cmc
mov
xchg
fcomi
dec
stc
lcall
pop
stos
sub
lcall
test
sbb
mov
jmp
xchg
insb
icebp
out
jnp
push
fucomi
mov
xor
pop
mov
push
xor
pop
jg
adc
jecxz
imul
pop
sbb
movsb
insl
into
mov
rcll
inc
cwtl
pop
ret
or
clc
aam
and
mov
mov
pop
sahf
cld
shll
sub
pop
ror
dec
and
fiaddl
add
loop
or
cmp
mov
bound
sub
mov
orl
lcall
push
out
dec
out
mov
cmp
push
daa
mov
loopne
lret
cmc
mov
loopne
xchg
inc
or
cmp
jle
popf
xchg
push
lcall
das
mov
movsl
fldenv
lea
mov
sub
pop
js
xor
movsb
in
xchg
xchg
mov
ss
rorl
ds
pop
jne
jecxz
jns
lcall
mov
pusha
xor
add
and
mov
cltd
cmc
out
adc
out
shl
cmp
dec
xor
mov
xchg
mov
pop
xchg
lcall
and
jne
outsl
mov
jno
or
lahf
adc
clc
mov
mov
inc
push
int
xchg
scas
pop
test
jae
outsb
addr16
xor
xor
pop
in
fldenv
mov
mov
cmpl
icebp
test
adc
mov
inc
jmp
nop
cmp
sub
xchg
test
xlat
add
or
stc
sub
cmp
faddp
jl
fwait
add
mov
les
inc
inc
in
rclb
pushl
xlat
repnz
popa
dec
aam
xchg
adc
fmulp
pop
imul
addr16
dec
xchg
dec
cwtl
bound
push
ret
inc
rcrl
jne
lret
xor
loop
leave
jno
outsb
imul
fdivrs
in
xchg
add
lds
jle
addr16
xchg
cli
mov
pop
ret
pop
scas
xchg
push
stc
jle
cwtl
movsl
and
loopne
cmp
mov
lcall
enter
dec
mov
sbb
fsubrs
repnz
or
divb
mov
mov
arpl
inc
pop
jno
sub
mov
jl
loope
ja
push
sbb
adc
sbb
ret
inc
and
jl
dec
loopne
pop
sti
loope
dec
hlt
mov
cmp
das
sub
push
xchg
int3
and
mov
xchg
sub
or
sub
out
fmuls
and
adc
enter
inc
cmp
sbbb
dec
mov
jb
mov
mov
xchg
stos
pop
sbb
xchg
lcall
dec
push
inc
shlb
movsb
dec
movsl
popa
jp
pusha
adc
fstl
aam
jl
jns
mov
jnp
dec
cmp
test
int
dec
jno
mov
repz
mov
jge
cltd
sub
xchg
and
mov
xor
sbb
ret
jne
jl
inc
movsl
dec
fbld
call
and
les
fcompl
cmpsb
int3
jb
pop
add
or
push
jle
loopne
dec
adc
mov
bound
sbb
inc
pop
icebp
inc
lret
push
aam
push
mov
add
cmpsb
mov
mov
dec
sub
pop
mov
int
outsl
push
lods
lret
xchg
dec
sbb
out
jmp
shl
mov
call
jns
out
test
ja
and
dec
into
cmp
or
add
xor
sar
jae
popf
pop
out
hlt
mov
fisttps
pushf
cmp
cmpsl
adc
scas
mov
leave
fcomi
dec
pop
stos
and
fsubrp
outsb
mov
neg
mov
cmp
lods
hlt
mov
adc
in
test
popf
pusha
or
add
push
aam
xchg
or
pop
or
lcall
cmp
sub
sbb
inc
test
adc
test
and
pop
imul
pop
push
and
xchg
dec
aad
dec
aas
inc
mov
mov
or
sbbl
dec
ss
loop
push
pusha
sub
inc
hlt
pushf
push
cmpl
sbb
jecxz
rclb
mov
jns
subb
sub
aad
lahf
out
ds
mov
data16
test
das
movsb
pop
adcl
push
dec
out
cmp
hlt
test
push
imul
fmull
lds
aad
xchg
jg
test
add
lods
xor
pop
inc
jae
sbb
imul
fstl
stos
cltd
out
loope
pop
xor
rcr
and
inc
and
or
and
add
adc
lock
mov
push
jb
ljmp
out
shrl
int
push
fstps
cmp
mov
bound
add
xor
add
push
in
fs
jge
mov
in
test
push
scas
cmpb
fdivrp
mov
sti
jl
out
addr16
std
xlat
push
std
es
lret
mov
cmp
sub
xchg
dec
jae
dec
mov
es
dec
jmp
jp
xchg
add
repz
sub
mov
lds
pop
in
adc
repz
lods
fsubrp
inc
arpl
mov
lret
stc
in
jp
movsb
outsl
mov
pop
sbb
mov
add
sbb
adc
dec
jmp
cmp
adc
or
test
sti
loope
mov
inc
mov
cmp
nop
jl
shr
outsl
bsf
insl
push
push
xchg
inc
js
cmpsb
icebp
xchg
xor
pop
push
pop
divb
adc
xchg
stos
xorl
dec
imul
in
pop
pushf
cmp
je
cmpsb
jmp
pop
xor
mov
dec
movsl
jne
mov
xchg
mov
stos
jecxz
call
xchg
popa
mov
add
inc
data16
ljmp
xor
adc
addr16
add
nop
divb
pop
out
packuswb
xor
add
cmp
xchg
das
xor
mov
or
mov
icebp
cmp
jp
js
lahf
mov
dec
adc
jp
into
imul
or
shr
mov
and
or
sub
sbb
mov
adc
adc
xor
mov
xor
mov
adc
es
pop
fcoms
jo
jns
jge
mov
jecxz
aaa
test
and
cmpb
sti
mov
out
mov
cmp
pop
cltd
imul
out
add
js
push
cli
ds
addr16
xchg
inc
mov
movsl
sahf
mov
out
in
xchg
call
and
adc
arpl
sbb
loopne
mov
jl
push
xor
rorl
cmp
cs
lds
pusha
pop
popf
push
xor
xchg
sti
mov
mov
call
xchg
aas
mov
or
xchg
mov
push
popf
lds
mov
add
mov
mov
sub
push
xor
xlat
fmuls
xchg
push
test
aam
popa
cmpsb
push
rcll
nop
cmpsl
call
xchg
test
or
aad
mov
mov
push
shlb
xor
fidivrl
addr16
imul
lret
lret
or
test
pop
std
add
loopne
int
inc
cmp
cmpsl
cmp
push
repnz
es
ret
mov
push
xor
fmuls
push
pop
pop
les
incl
or
and
mov
mov
xor
mov
outsl
stos
push
mov
testb
not
out
fst
mov
xor
fwait
cld
insb
stos
xchg
out
push
mov
pop
and
aaa
repz
outsb
add
sub
addr16
xchg
and
arpl
insb
push
inc
jl
push
cli
outsl
pop
mov
jle
out
test
insb
cmp
sub
dec
shrb
mov
in
push
sbb
int3
xor
ret
shrb
jns
adc
sbb
fadds
add
mov
icebp
dec
notl
ja
push
jge
sbb
push
xchg
divb
sub
int
push
push
pop
je
test
and
xor
xchg
pop
add
push
and
lods
cmp
xchg
cld
ljmp
cmc
cmpsb
sarl
rcr
and
jae
jne
sub
inc
std
mov
out
in
inc
sub
sti
out
iret
dec
fwait
cmp
insb
lods
stc
fwait
sub
addr16
adc
pop
fmul
clc
in
aad
inc
sub
mov
outsb
dec
adc
es
xor
mov
jg
adc
int
add
jb
stos
iret
push
out
xor
loop
jg
push
jo
adc
fcomi
int
lock
pop
mov
mov
xor
push
mull
push
mov
push
pop
sbbb
lahf
dec
add
push
and
std
rol
repnz
out
out
movb
iret
dec
insb
daa
cmp
or
cld
scas
push
cmp
xchg
loop
test
ret
stos
adc
repnz
mov
dec
shr
mov
out
xlat
dec
and
decb
inc
mov
cmpsb
jnp
ficoms
adc
mov
dec
pop
leave
dec
mov
pop
stc
cmp
loope
rclb
mov
outsb
mov
xchg
jnp
faddp
and
in
repnz
sub
cwtl
mov
paddusb
mov
sub
sub
lcall
scas
arpl
sbb
jnp
cmp
loop
dec
orb
inc
and
jle
loop
cmpl
dec
inc
sub
in
lods
test
ljmp
inc
pop
dec
lret
sahf
pop
int
push
xchg
enter
inc
inc
addr16
xorl
test
pop
pusha
mov
xor
mov
mov
mov
stos
sti
inc
and
or
cmpsb
xchg
sbb
cmpsb
arpl
out
inc
test
sub
fistl
and
test
iret
xchg
xchg
pop
shl
sub
je
pop
lods
jo
xchg
push
rcrl
add
jb
pushf
jg
scas
cmpsl
jge
jae
ds
or
and
ds
ja
adc
xchg
mov
scas
xor
out
mov
add
ss
cmp
loope
xchg
jno
test
jo
lods
bound
adcl
imul
jnp
dec
mov
das
sbb
sbb
mov
and
rclb
loope
dec
pop
push
pop
inc
movsb
cwtl
je
or
xor
jge
pop
test
lods
mov
stc
int3
rcl
jp
clc
shl
into
and
rol
ret
int
adc
jmp
dec
dec
mov
adc
mov
int
in
adc
jns
movsl
aam
orb
adc
mov
sti
call
mov
adcl
inc
sbb
xlat
lcall
cmpb
in
out
xchg
lds
xor
mov
push
fsts
aam
jo
jle
mov
scas
jne
sbb
sahf
push
sbbl
dec
mov
adc
je
add
cld
ss
outsb
jmp
hlt
lea
mov
add
sub
sbb
sbb
push
repz
inc
imul
shrl
add
sbb
lock
lds
cld
and
mov
cmp
cmp
jnp
xchg
xor
mov
push
sarb
or
mov
adc
mov
ds
sbb
test
fiadds
test
xor
jg
lahf
js
mov
cmp
pop
bound
sub
sub
and
cmc
dec
roll
fs
adc
incl
call
push
cmp
fdivs
inc
xor
pop
cmp
dec
and
test
addr16
push
inc
sbb
and
les
pop
jno
dec
fnstenv
movsl
into
xor
cmp
outsl
mov
inc
fcmovnb
gs
jb
inc
adcb
inc
xchg
je
mov
dec
mov
cmpsb
sbb
cmp
cld
ss
aad
xchg
fldl
push
inc
scas
test
or
xchg
pop
ja
ljmp
mov
loope
loop
pop
inc
ret
fistpll
cmp
testl
aas
sbb
xchg
pop
or
and
xor
iret
xchg
icebp
mov
fxch
cmp
mov
lahf
int
dec
jns
mov
fisubrl
xchg
xchg
data16
jbe
cmp
clc
sarb
pop
xor
les
sbb
jp
jno
cmpsl
rcrb
xor
rolb
and
add
sub
fwait
xchg
push
xchg
push
cli
sahf
dec
or
sbb
mov
out
mov
sub
fcoms
pushl
int3
xor
stos
ljmp
xor
sahf
inc
sbb
das
es
or
xlat
out
inc
shrl
lret
inc
mov
cld
testl
jae
cld
loope
lods
aas
int3
sbb
adc
ret
jecxz
mov
xor
pusha
enter
push
cmp
rol
rcr
pop
sub
lret
xlat
cmpsb
push
lcall
mov
mov
inc
cmp
arpl
sub
jg
ja
xchg
cld
daa
data16
jmp
lods
movsl
fldl
adc
inc
divb
cmp
dec
mov
cmp
insb
xchg
sar
cmp
lods
or
ljmp
jg
adc
inc
imul
lds
aam
das
and
cmp
arpl
lea
sbb
sti
mov
imul
test
xor
xchg
loop
pop
and
fsts
add
push
sbb
pushf
jl
lea
icebp
sub
xor
mov
mov
xor
adc
jo
ret
cmp
and
loope
fsubrs
outsb
jge
ja
or
popf
and
mov
or
movsb
dec
cltd
jle
mov
insl
sub
ret
ret
shrb
inc
lods
mov
ss
movb
mov
jecxz
cmpsl
or
mov
dec
cmc
cmpsl
pop
jbe
xor
and
xor
push
out
jo
test
and
rcl
add
cmp
add
mov
pop
or
daa
stos
and
insl
pusha
dec
jbe
mov
daa
cld
ror
adc
in
notl
push
sbb
popf
push
inc
mov
mov
shll
mov
add
rorl
dec
mov
inc
inc
and
xchg
jb
aam
jbe
repnz
insb
in
mov
cld
cmc
jl
adc
xchg
and
push
js
insb
test
and
and
jge
mov
inc
xchg
jle
push
push
in
adc
mov
cld
insl
or
aam
mov
lret
sbb
cmpsl
cmp
loopne
and
faddl
inc
popa
and
sbb
xor
push
int
xor
pop
roll
adc
insb
xor
pop
mull
outsb
mov
dec
insl
outsb
push
ss
xor
jge
xor
or
push
dec
cmp
pusha
test
cmp
dec
aad
fidivs
dec
das
lret
lret
out
outsl
js
inc
cltd
and
mov
les
in
das
or
push
ficoml
roll
xor
jge
rcrb
dec
push
push
cltd
insb
lea
cmc
push
repz
popf
enter
clc
fmuls
addb
into
jnp
adc
daa
adc
clc
lahf
xor
xorl
insl
sub
aaa
aad
andb
arpl
and
je
inc
leave
lock
aaa
jb
fcomi
inc
mov
add
popa
in
imul
jmp
test
decb
mov
pop
push
adc
insl
aam
in
cmp
out
jmp
xor
inc
jmp
and
jnp
inc
adc
test
ret
mov
cmp
stc
lods
push
xchg
shlb
xchg
xor
xor
repnz
rcrb
sub
mov
dec
dec
ds
mov
fadd
jecxz
sbb
pushl
loop
mov
cmp
dec
pop
sbb
loop
push
dec
mov
das
ja
adc
jae
mov
push
popf
lock
fdivr
test
pop
movsl
jb
xchg
mov
repz
xor
jne
mov
inc
cmc
fnsetpm(287
xor
xor
jecxz
push
lock
jle
cwtl
jg
adc
mov
in
icebp
jl
jno
dec
sbb
nop
push
pop
fldcw
push
mov
add
aam
je
sub
pop
jg
and
rcrl
mov
rcrb
jge
scas
lds
sbb
fsubs
shl
cmpl
mov
stos
jno
dec
xchg
xchg
lret
lods
int
adc
in
xor
push
aad
pop
push
aaa
sub
mov
jmp
or
sti
push
cmp
ja,pt
iret
pop
jno
dec
add
sbb
fidivl
sbb
mov
fisubl
nop
push
mov
xchg
repz
mov
andl
xchg
out
push
popf
fiadds
cld
ja
test
cltd
rol
adc
sub
xor
cmp
icebp
xchg
imul
jg
ret
fs
xchg
sahf
stos
pushl
xchg
mov
lds
jno
adc
cmp
dec
aad
push
mov
lret
ljmp
stc
dec
daa
outsb
leave
lds
inc
pop
mov
adc
cmp
jge
lock
int
out
push
mov
inc
push
mov
pop
and
ror
inc
test
jno
and
fistl
mov
call
mov
mov
cmp
sbb
ret
pop
cmp
cmp
and
jg
inc
in
call
loop
pop
gs
sub
in
xor
dec
leave
cs
jg
sbb
pusha
lret
add
outsb
mov
in
mov
rcl
mov
movsb
push
sub
adc
mov
pushf
mov
movl
scas
mov
test
scas
pushf
or
dec
ja
lahf
cld
mov
cltd
adc
stos
mov
sub
cltd
gs
cmp
inc
lret
jb
outsb
frstor
jnp
arpl
pop
sbb
shll
out
pop
jb
xchg
jmp
push
ljmp
sti
xchg
jbe
push
in
or
jnp
cmp
push
roll
adc
aaa
sbb
xchg
inc
xlat
push
pop
ret
xchg
je
mov
xor
inc
pop
movsl
scas
xchg
sbb
mov
test
dec
decl
mov
pop
mov
mov
push
loope
pop
sahf
test
or
cmp
cmp
aam
lret
sub
hlt
dec
jnp
jle
adcl
jbe
lahf
out
mov
insb
scas
test
pop
test
gs
mov
push
jge
and
jae
mov
cmp
mov
in
ret
pop
cld
out
lods
ret
xor
ret
gs
shl
lret
outsl
aaa
sar
mov
push
xchg
push
stc
stos
aas
inc
cmp
cltd
xor
and
or
aad
lods
or
xor
leave
sbb
sub
adc
outsb
in
mov
pop
add
jbe
mov
jp
scas
shlb
xchg
in
sbb
pop
scas
ss
jmp
movl
jno
and
fistpll
dec
xchg
sub
push
shr
fstsw
sbb
sbb
inc
shll
sti
sbb
jge
addl
fwait
loop
fnstcw
push
pop
mov
aas
pop
pop
add
je
mov
in
sahf
fistl
sar
insl
popl
lds
ret
xlat
pop
adc
fdivl
loope
inc
jmp
jo
repnz
aaa
mov
or
sub
sub
fs
jne
fucomip
sub
or
enter
xchg
mov
loop
jno
pusha
loopne
mov
imul
push
test
insl
fs
jmp
add
fidivrl
jbe
lds
sahf
shll
in
lea
leave
in
sub
inc
add
aaa
dec
cwtl
das
lock
mov
push
sub
cmp
sbb
or
sbb
dec
jle
push
frstor
jl
xchg
or
notl
fldenv
imul
and
fistl
and
jmp
adc
adc
mov
jg
test
xchg
rcll
fbld
enter
jno
fisubs
and
xor
js
xor
xchg
jne
xlat
out
in
fs
pop
loopne
mov
aad
mov
jbe
cmp
or
xor
aas
mov
jb
push
push
dec
mov
in
add
mov
cmp
popf
rclb
and
xor
cmpsb
mov
stos
icebp
and
push
mov
xchg
xchg
aam
popa
out
pop
jmp
push
mov
orl
scas
xchg
adc
es
lds
push
mov
stos
in
sbb
mov
mov
push
inc
lret
imul
lds
out
das
and
daa
sbb
jns
jbe
and
jl
in
pop
sbb
mov
loopne
jle
xor
xchg
push
popf
xor
shrl
push
sbb
sbb
inc
ret
pop
or
lods
cmp
sbb
jno
xchg
test
add
jle
pop
out
xchg
lahf
ja
int3
xor
jb
fcmovnu
fcom
and
call
adc
jb
and
outsb
insb
xor
mov
lock
and
sbb
cwtl
loop
outsl
test
xchg
push
xchg
subb
out
sub
inc
aam
roll
or
mov
sbb
int3
add
sub
notb
cmpsb
pop
aam
jb
outsb
or
pop
daa
js
cld
jmp
dec
jo
mov
lcall
inc
adc
cmp
std
dec
add
jp
stos
mov
repz
jns
icebp
xchg
ret
push
cs
push
mov
lock
add
cmp
inc
in
pusha
and
inc
adc
out
push
mov
xor
mov
dec
adc
enter
mov
inc
pop
push
cmpsb
jns
adc
cmp
je
les
cltd
fwait
stc
xor
push
dec
aas
loope
sbb
jns
test
in
test
mov
lods
adc
jne
xchg
shrb
sbb
clc
test
inc
cmp
scas
loopne
push
les
and
imul
inc
sbb
jecxz
or
daa
xchg
in
and
jle
out
inc
mov
push
mov
add
adc
rcrl
and
and
dec
inc
icebp
pop
push
dec
sarl
and
sub
lock
stos
sar
sbb
je
sbbl
out
and
dec
mov
adc
lds
arpl
je
in
jg
xchg
fstpt
xor
add
test
cmpsl
push
xor
inc
pusha
push
mov
jg
jbe
xor
insb
dec
push
push
jg
cmp
ret
in
cmp
xor
cmpsl
sbb
jmp
xchg
sarl
xchg
mov
repz
push
adc
add
jmp
aaa
xchg
lods
jno
and
xchg
pusha
sbb
xchg
mov
in
test
aaa
mov
pop
rcpps
lahf
xlat
mov
mov
stos
cmp
cmovg
test
stc
mov
sbb
pop
les
sub
in
in
sub
add
add
outsl
sahf
jb
mov
lcall
mov
cmpsb
xchg
or
cmp
leave
stos
test
sbb
xor
cmp
movsl
clc
fwait
loopne
fsubr
jns
int3
or
loop
mov
push
push
cmp
repnz
dec
lock
leave
push
inc
in
jns
out
xor
aas
sbb
int3
xlat
fwait
mov
sub
stos
mov
hlt
movsb
cli
repnz
mov
add
mov
jle
nop
or
xor
out
xchg
adc
sub
insb
mov
sbb
stc
fimuls
sahf
inc
mov
mov
rol
int
xor
dec
and
orl
test
cmp
xlat
in
or
xlat
xlat
das
push
jle
imul
and
subl
fidivrl
sub
fcoml
push
sub
jmp
sub
rep
push
jae
sbb
lock
push
gs
dec
adc
and
lods
cmpsl
dec
jl
xchg
adc
mov
cmp
adcb
adc
mov
pop
jle
outsl
pop
xchg
mov
test
fcmovnbe
jmp
push
xchg
cltd
and
cmc
mov
inc
shrb
scas
jle
pop
push
les
jae
inc
sub
hlt
leave
movsl
xchg
insl
out
int3
popa
cmp
aam
jmp
jmp
rorl
cmpsb
insb
or
ss
into
pop
sbb
sbb
lods
outsl
sbb
or
pushl
dec
sub
lds
cmc
cmp
call
push
aaa
popa
loopne
add
movsb
dec
ret
xor
cmp
popf
cmpsl
loopne
pop
stos
mov
mov
or
jecxz
movsb
loopne
sub
rcr
rcrl
mov
push
push
ja
not
cld
push
ja
push
rorl
in
int
push
and
shl
push
push
mov
in
lods
fdivr
repz
fcmovnbe
xchg
push
pop
dec
adc
jns
test
pop
mov
dec
test
jle
aaa
jg
push
or
lret
mov
je
push
imul
push
and
call
add
jg
into
mov
ds
or
fimull
testb
push
inc
incb
pop
icebp
cltd
stos
jae
xchg
sbb
insl
testb
mov
push
adc
or
aaa
scas
fidivl
push
mov
cwtl
inc
rclb
scas
jbe
rorl
daa
xchg
jge
dec
push
pop
add
jno
push
xor
jecxz
xchg
pop
cmp
add
lret
add
loope
jno
ds
xchg
stc
xor
push
pop
pop
xchg
or
ret
xlat
sub
add
scas
ret
outsl
testb
cmp
pop
jo
sub
add
jns
jp
je
cmpsb
lahf
push
mov
dec
jge
subl
cltd
es
xor
clc
call
cmpsb
dec
shlb
test
sub
xchg
hlt
fnstsw
jl
sbb
mov
test
loope
in
cmpsl
sbb
arpl
mov
andl
jg
cmp
xchg
mov
rcl
mov
lock
daa
imul
rcll
scas
sbb
inc
sub
outsb
inc
push
out
out
and
in
mov
loop
pop
in
sub
movsb
or
repz
mov
mov
ror
jp
cmp
pop
iret
fsubrp
xor
sbb
pop
xor
in
or
cmovb
jno
sub
aam
repz
lods
dec
lock
andb
mov
ret
out
dec
imul
loope
and
test
jl
leave
in
ret
push
ret
push
out
das
mov
sbb
mov
xchg
xchg
pop
push
out
xor
aas
rolb
nop
or
dec
push
fisttps
imul
push
shll
adc
xchg
movsb
add
inc
or
add
sbb
push
xchg
cmpsb
inc
std
pop
ret
sbb
mov
stos
jo
cwtl
cli
imul
lret
cwtl
mov
lock
mov
pop
shlb
or
sbb
dec
xchg
add
sub
mov
mov
add
frstor
xor
fmuls
jne
push
mov
ds
dec
or
jnp
jno
inc
cltd
into
jno
xchg
jecxz
das
inc
sub
andb
cmp
lahf
mov
sbb
mov
mov
push
fwait
dec
int3
pop
sarb
outsl
pushf
cmp
pop
sub
mov
mov
inc
test
or
movsb
xor
data16
lock
dec
int3
aam
fidivrl
push
mov
push
shll
test
ds
data16
insb
test
pop
pop
xor
imul
fcomi
xchg
hlt
daa
mov
lret
mov
iret
sub
imul
andb
pop
icebp
aaa
mov
mov
cmp
cmpsl
loop
add
fildll
jno
mov
mov
jl
lds
scas
xchg
sub
xlat
add
sub
xor
pop
and
in
jecxz
cs
std
dec
push
fmulp
stc
pusha
fisubrl
jne
sarl
xor
xchg
imul
repnz
aam
wrmsr
inc
xchg
xor
pop
mov
movsb
dec
pop
mov
cmpsb
sbb
stos
adc
and
jmp
jbe
mov
out
ss
movsb
call
sub
int3
push
hlt
inc
cmp
aas
push
out
mov
adc
sub
bound
add
adc
xor
in
xchg
movsb
fisubl
mov
sbb
sbbw
imul
xor
into
ss
cmc
mov
push
ficoms
leave
ret
aad
mov
dec
mov
into
icebp
dec
jl
mov
in
pusha
sub
repnz
pushf
lret
sub
inc
mov
xlat
inc
mov
in
icebp
jo
movb
pcmpgtd
bound
jo
stos
mov
enter
dec
mov
ds
cwtl
mov
dec
rolb
xchg
fidivrs
ss
mov
insl
sub
addr16
inc
jnp
repz
mov
lea
out
jp
mov
lret
rcrb
add
push
adc
mov
mov
imul
out
sahf
sbb
ret
xchg
pop
or
sahf
addb
ret
dec
xor
mov
popf
xchg
mov
xor
mov
mov
or
adc
stos
sbb
hlt
ja
push
repnz
push
mov
adc
xlat
std
pop
push
push
out
imul
mov
cmpsl
mov
loope
jnp
inc
rol
add
dec
cmpsb
movsb
imul
cmp
loop
sub
loopne
mov
mov
jne
mov
scas
lahf
push
lods
lcall
xor
ds
pop
mov
lea
jmp
movsb
pop
ficompl
nop
and
cwtl
lcall
inc
aam
aas
inc
hlt
jo
js
mov
add
cmpb
cmpsb
stos
pop
xchg
sub
data16
sub
bound
mov
test
rorl
test
and
movsl
sub
inc
cltd
sti
sahf
inc
dec
aad
xor
stos
pushf
aaa
xor
addb
bound
enter
mov
out
xchg
add
out
leave
popa
or
push
cmp
ret
shrb
scas
lds
cmp
mov
jnp
mull
mov
and
decb
mov
mov
mov
fldl
int3
mov
jge
dec
pushf
mov
jns
add
push
ljmp
sbb
out
push
stos
inc
sub
shlb
and
xor
repz
inc
jle
bound
js
mov
mov
inc
mov
enter
and
movsl
out
cmp
in
dec
add
fcoml
xor
into
mov
dec
xor
mov
xchg
or
xchg
mov
dec
push
sbb
sub
push
jns
jmp
pop
lea
adc
out
icebp
sbb
popa
mov
test
mov
dec
pushf
mov
jne
leave
adc
lahf
loopne
xchg
mov
sbb
daa
fistps
jnp
jae
addr16
pop
xchg
js
push
pop
pop
inc
sbbb
xchg
pusha
mov
xchg
and
fwait
loopne
jecxz
or
jne
adc
jecxz
and
stc
loope
lods
push
mov
enter
and
fidivs
cmp
fdivr
push
negl
rolb
inc
scas
push
outsb
push
lock
addr16
pop
dec
dec
dec
pop
pop
xchg
aaa
add
insl
xchg
sub
sub
lcall
mov
fisubl
pop
popf
enter
outsb
sbb
pop
aad
es
shr
add
add
std
xor
adc
pop
jo
sub
mov
out
imul
mov
pop
xchg
outsb
repnz
cmp
lods
inc
or
lcall
into
mov
lods
paddusb
mov
inc
imul
lds
adc
loop
rclb
cmc
das
ss
fcoms
addr16
push
cmp
xchg
add
sub
lods
xchg
hlt
inc
cmp
icebp
or
or
push
jne
push
sti
cli
fucomi
xchg
cltd
stos
mov
push
test
add
aam
mov
rorb
ja
pop
xchg
aas
sahf
jg
roll
addr16
sahf
aad
aam
addl
jg
sbb
push
jae
sub
jns
xchg
or
or
xlat
jns
mov
xor
int
pushf
adc
out
scas
jno
stos
sbb
aaa
ret
rol
xchg
cld
dec
inc
jl
arpl
or
fcomp
inc
negl
add
mov
testb
je
lea
pop
ret
cmp
add
mov
jno
pop
mov
xchg
or
shr
xchg
pop
pushf
leave
cli
cmpsl
mov
push
cmp
shll
repnz
pop
jne
or
mov
xchg
frstor
cmp
fwait
fwait
das
outsl
out
and
sbb
sub
scas
test
mov
push
adc
xor
cli
add
aad
sbb
cmpsl
movsl
and
and
std
pop
push
inc
outsb
fisttpll
imul
rcll
inc
ret
repz
call
test
cmpsb
or
xchg
mov
mov
fcoms
or
xchg
fwait
add
mov
xchg
push
jmp
add
cmpl
cmp
or
loopne
sbb
ss
pusha
outsl
cmp
and
iret
arpl
cld
fidivrs
pushf
dec
mov
mov
pop
shll
xchg
or
mov
dec
mov
test
adc
orl
or
sahf
outsl
xchg
mov
xchg
fcmovne
jae
adc
mov
dec
adc
fwait
jmp
xchg
scas
mov
or
icebp
jp
pop
xlat
cmp
in
test
xchg
mov
loopne
flds
popf
cld
or
fimull
dec
jecxz
adc
add
or
sub
movsb
psraw
cld
ljmp
aaa
mov
dec
scas
jb
adc
mov
mov
out
lock
dec
push
push
sbb
int
pop
not
xor
mov
lret
push
mov
cmp
and
pop
stos
les
pusha
push
jl
or
mov
lds
outsb
leave
or
mov
lcall
daa
jl
sbb
xchg
shll
sub
dec
xchg
mov
cli
mov
imul
andb
movsb
jp
cmc
lret
sbb
cld
mov
cmpb
iret
std
sti
fidivrl
mov
and
or
inc
cmpsl
sbb
sbb
orb
shl
mov
inc
imul
cmpsl
fildll
fildll
test
mov
test
fldl
aaa
add
gs
mov
xor
adc
mov
pop
gs
mov
hlt
jno,pt
ret
xorb
lcall
test
pop
or
pop
or
dec
cmpsl
repnz
fstps
pop
dec
sbb
leave
mov
inc
in
js
cmp
repz
insl
and
push
pop
jp
sub
xchg
into
inc
and
dec
insb
inc
adc
push
pop
into
mov
sbb
daa
nop
push
pop
stos
rol
mov
cmp
inc
or
incl
jg
lret
add
div
and
lds
push
cmp
xor
cmpb
cmp
mov
lods
es
ja
and
cmp
xor
jge
mov
and
mov
das
xor
adc
xor
cmp
insl
insb
pop
and
jl
jg
mov
and
scas
add
sti
mov
push
cmpsb
cmp
add
test
insb
xor
mov
mov
cltd
imul
stos
rcrl
cltd
dec
out
movsb
sarb
jecxz
push
fldcw
mov
std
aas
out
and
pop
xlat
jbe
orl
out
imul
jo
loope
and
jmp
lahf
fidivl
out
xchg
cmpsb
or
ds
xchg
pushf
pop
cmp
ret
int3
out
ret
adc
sbb
decb
mov
dec
sub
xor
push
testb
insb
mov
mov
xor
fbld
dec
mov
or
ss
xchg
cmp
cmp
je
aad
jnp
jl
mov
mov
adcl
xchg
arpl
leave
jl
push
dec
inc
and
or
inc
push
out
nop
out
cmp
subl
and
inc
fnstenv
popa
xor
out
push
mov
or
movsb
rol
idivb
fadd
xor
ds
out
inc
stos
lea
dec
xor
insl
insl
xor
inc
mov
add
call
test
mov
mov
dec
mov
mov
mov
push
out
nop
scas
cltd
in
enter
push
out
imul
adc
dec
sbb
mov
lds
mov
dec
ljmp
mov
lcall
or
and
or
mulps
sarl
es
add
in
pop
pop
or
or
loop
jns
xor
and
jae
mov
lahf
stos
fstpt
jnp
push
pop
cltd
xchg
dec
xchg
and
fnclex
mov
mov
loope
int3
and
sub
dec
jmp
pop
jne
js
imul
ficoml
inc
loope
hlt
add
clc
dec
nop
in
mov
scas
push
insl
jl
jge
or
ret
cmpsb
push
and
loope
or
sub
mov
inc
add
jno
roll
mov
or
jno
fsubr
pop
xchg
mov
xor
test
add
jl
outsl
mov
pop
xchg
adc
lret
adc
pop
iret
mov
xor
mov
lods
jbe
mov
mov
push
jecxz
jmp
repz
dec
xchg
lods
fldt
sbb
xchg
mov
cmp
popa
js
mov
insb
pop
int
aas
inc
xchg
sub
fwait
arpl
xlat
pop
in
ret
jno
es
stos
pop
inc
test
shrl
arpl
test
add
cmp
adcb
stos
push
cmpsb
fistpl
lods
std
ja
xor
jnp
adc
inc
jmp
fucomp
or
xchg
ljmp
clc
pop
fistl
stos
pop
push
add
negl
fistpll
imul
pop
xor
mov
jl
xor
mov
lods
mov
sahf
xchg
int3
dec
xor
xor
in
mov
stos
in
xchg
jp
les
pop
outsl
sbb
sub
mov
add
fucom
nop
test
adc
cli
cmp
mov
sub
fninit
dec
test
insb
ja
cmc
fcompl
sbb
xchg
shlb
mov
std
xchg
cmp
xorl
into
repz
movsb
cmp
pop
shr
iret
mov
cmp
xchg
mov
dec
sarl
adc
jns
mov
adc
loope
mov
scas
test
mov
fdiv
push
pop
dec
push
xchg
sub
lret
xor
adc
sahf
mov
and
pop
pop
lret
les
adc
icebp
push
xchg
lahf
xchg
insb
mov
mov
fs
aaa
cmp
es
pushf
addr16
into
sahf
add
pop
and
out
into
cld
xlat
push
mov
and
popa
xor
cmc
mov
and
mov
fstpt
mov
stos
pop
inc
stc
imull
fcoml
call
or
and
inc
cmp
mov
push
fdivs
inc
mov
sub
pop
xchg
or
push
push
or
ja
test
or
ja
popl
mov
fistpll
sbb
cld
cmp
enter
inc
inc
imul
out
in
lock
add
jnp
and
pop
pop
sbb
and
cltd
push
imul
jae
bound
push
mov
lret
es
mov
stos
movsb
pop
addr16
add
in
or
sahf
fwait
xchg
jecxz
inc
cmc
pop
and
pop
sub
pop
mov
iret
insb
into
stc
ss
movsl
data16
in
das
push
dec
bound
sahf
pop
aam
mov
shl
sub
adc
inc
pushf
sbb
jns
fistpl
mov
cmp
cmc
cs
scas
fdiv
pop
push
mov
jl
mov
jg
movl
or
aaa
jb
cwtl
mov
in
or
xor
xor
jb
add
inc
repnz
dec
lock
adcb
mov
xchg
push
xchg
sub
mov
ds
sub
ret
enter
repnz
rcll
movsb
cs
mov
mov
jle
sub
pusha
cs
mov
cmpsb
in
mov
jl
cmp
mov
hlt
shrl
add
inc
arpl
icebp
mov
mov
adc
dec
repnz
inc
jbe
mov
push
and
sbb
subb
loopne
mov
sahf
ror
mov
mov
pop
inc
adc
imul
lret
inc
sub
cld
cmp
xor
pop
mov
shll
mov
pop
repnz
fwait
sbb
scas
push
stos
mov
in
pop
stc
pop
dec
call
lea
push
leave
mov
das
xchg
mov
add
out
dec
dec
xor
ljmp
aam
cmc
sti
insb
push
addr16
pop
test
test
lret
sub
inc
aam
rcrl
sub
insb
xor
popf
adc
and
xchg
mov
pop
adc
test
or
add
orl
jno
ss
imul
pop
cmpl
dec
add
mov
aas
out
dec
mov
aaa
loop
clc
shlb
jo
lds
insb
int3
add
add
leave
cmpsb
mov
jmp
or
cli
rcrb
mov
jbe
xchg
mov
jns
dec
lock
dec
cmpsb
sub
pop
sbb
jne
push
loopne
and
aas
repnz
leave
test
xchg
xlat
add
ret
ljmp
and
inc
inc
pop
sbb
jnp
insb
es
cmp
data16
fildl
xor
repnz
add
outsb
bound
add
xor
inc
pop
push
mov
dec
ljmp
sub
cmp
aam
cltd
xchg
mov
ja
in
mov
or
call
es
mov
call
jae
divl
scas
addr16
dec
imul
and
push
out
push
sti
loopne
ds
sub
jns
jnp
sbb
int
jle
lcall
hlt
andl
int3
insb
fldenv
and
mov
inc
test
mov
push
jbe
or
pushf
js
push
xchg
lcall
xchg
mov
add
mov
jno
mov
lds
add
lods
outsb
or
gs
and
fsts
vmovshdup
cmc
pop
movsb
arpl
pop
sub
jmp
adc
mov
sub
lahf
inc
xchg
push
repnz
or
adc
push
pop
inc
pop
mov
add
xor
es
add
cmp
add
andl
int3
dec
mov
icebp
sbb
push
sbb
out
jmp
aas
jecxz
loopne
or
cmpsl
divb
jg
sbb
pop
in
dec
and
outsl
call
cmp
push
test
ret
sub
mov
xor
pop
xor
and
adc
lds
mov
mov
or
ret
push
dec
jecxz
addr16
jne
test
pop
in
adc
lret
mov
les
pop
xorb
js
cmpsb
pop
jge
pop
aas
outsb
xor
loopne
and
scas
and
sub
pop
fwait
mov
fs
aam
mov
lahf
push
ret
push
push
add
push
fisubs
fcmovu
dec
scas
mov
scas
pop
in
mov
adc
xor
repnz
dec
fsubr
pop
sbb
cltd
daa
cmp
imul
jne
sarl
insl
testb
sub
mov
clc
pop
mov
push
mov
xchg
dec
fsubr
jl
divl
andb
shrb
dec
inc
cmpsl
loop
cmpsl
dec
arpl
movsl
fmulp
daa
ret
xor
arpl
xchg
int
push
push
mov
pop
cmp
test
push
jl
pop
push
adc
insb
or
jb
ds
add
push
mov
cld
push
orb
sbb
or
imul
call
jne
mov
add
jno
sbb
insb
jmp
adc
iret
es
sbb
fwait
scas
and
loop
mov
push
cmp
cmp
icebp
cmp
xor
push
ljmp
jecxz
or
ja,pt
test
out
dec
mov
lret
leave
pop
sub
cmc
push
notl
adc
stc
fsubrl
mov
sub
fucom
inc
inc
in
push
inc
divl
fnstcw
dec
les
in
dec
cmp
sbb
xorb
sti
push
lahf
lret
jb
aad
mov
cli
ret
daa
mov
dec
add
enter
bound
push
inc
push
scas
jp
imulb
and
rorb
andnps
loope
xor
xlat
xlat
mov
loopne
inc
jecxz
jecxz
ja
mov
push
cmp
mov
jnp
sub
icebp
sarb
aas
sbb
imul
sub
add
xor
out
or
or
dec
loopne
sub
push
sub
bound
addr16
dec
lea
and
jns
in
fidivl
xor
fistps
cmp
fdivrl
popf
or
in
arpl
dec
aam
dec
xor
into
movsl
scas
movsb
dec
xlat
aad
pop
jo
clc
push
mov
mov
rol
cmpsb
mov
add
aaa
leave
or
push
cmpsb
adc
int
push
pop
dec
lret
fwait
add
jecxz
lds
adc
sbb
adc
push
shl
dec
cwtl
shrl
pop
mov
xor
dec
inc
movl
orl
outsb
fwait
inc
sub
push
in
popf
push
cmc
jl
dec
pop
xchg
ds
leave
push
sub
mov
dec
or
test
shl
push
add
add
push
push
inc
xor
xor
sub
in
cmp
cmc
push
lock
out
pop
cmp
rorl
pop
aad
gs
pop
ss
or
jge
das
aaa
sti
xchg
adc
call
lahf
mov
insl
adc
mov
pop
mov
pop
add
adc
sbb
fildll
cmc
loopne
test
push
push
scas
add
mov
adc
dec
fwait
in
leave
test
std
mov
adc
mov
lcall
adc
jl
xor
adc
jmp
jge
cld
pop
xchg
xlat
fisubrl
iret
pop
cmp
imul
mov
sbb
sub
jp
sub
xor
pop
in
ljmp
scas
push
push
icebp
pop
adc
int3
jae
out
je
xor
cmp
scas
inc
cmp
ret
popf
xor
testb
scas
push
lea
xor
sti
mov
insl
sbb
cmp
out
mov
hlt
nop
sbb
dec
mov
cmp
sbb
cmpsb
jmp
lock
addr16
sub
mov
push
sahf
pop
mov
pop
insl
ret
xchg
or
loope
mov
inc
cli
push
and
sbb
notl
jnp
mov
mov
out
cmp
test
push
neg
mov
pop
cmpsl
out
cld
and
ret
mov
jb
iret
dec
cltd
aad
mov
dec
cmc
outsb
bound
insb
jle
sub
and
fiaddl
daa
mov
ret
pop
and
cmp
mov
sbb
cmpl
push
cmpsl
pop
imul
add
push
sub
jb
dec
or
push
in
test
mov
jo
js
or
jecxz
sbb
insl
pop
ret
int3
push
mov
cmpsl
push
mov
int
dec
lods
aad
and
outsb
mov
arpl
je
fidivrl
sub
mov
sub
pop
cwtl
xlat
arpl
pop
ljmp
cmpsb
inc
cld
mov
fwait
push
push
push
mov
imul
fcomps
and
xchg
cmp
jl
adc
inc
fists
mov
mov
mov
inc
cmp
cmp
lock
out
movsl
out
xor
xchg
inc
inc
or
jnp
or
jns
pop
push
mov
in
lret
lcall
pop
xchg
jno
push
jp
arpl
pop
js
xor
mov
out
dec
loop
xchg
and
mov
data16
lods
jns
pop
mov
jnp
adc
mov
outsl
scas
cmp
dec
cmp
mov
outsb
push
adc
jmp
lds
aaa
xchg
ret
enter
lret
popf
xchg
cld
outsl
cmp
dec
adc
push
cmp
push
nop
repnz
jle
xchg
jno
inc
and
jae
test
cs
push
dec
das
mov
test
sub
sbb
sarl
rorl
cs
adc
xor
sub
imul
inc
fdivl
push
cmp
push
outsl
mov
mov
jnp
lahf
push
jle
sub
ljmp
pop
das
cmc
jbe
subb
mov
repz
in
andb
inc
into
in
repnz
sbb
sbb
inc
insb
dec
add
sub
mov
inc
xlat
ret
sbb
pop
fdivp
insl
aas
outsl
icebp
lock
aas
pop
mov
push
fucompp
lds
imul
xchg
mov
adc
insl
dec
pop
pop
push
jns
testb
inc
sbb
lods
xchg
mov
jmp
push
pop
cltd
movsl
pop
ss
pusha
xor
imul
xchg
mulb
push
cmp
inc
ret
pushf
mov
mov
out
mov
mov
add
fnstsw
daa
adc
repnz
into
sti
xor
test
mov
push
push
in
movsl
jecxz
push
aad
xlat
jae
insb
int
sti
push
arpl
insb
test
dec
lods
fdivl
jle
adc
dec
out
stos
inc
inc
add
adc
xchg
fiadds
inc
add
das
cmpsb
nop
dec
in
cld
int
or
mov
pop
je
nop
xchg
rcrb
jae
test
out
lods
stos
or
push
dec
xor
outsl
inc
mov
fstl
xchg
pusha
xchg
sti
mov
and
daa
jmp
push
mulb
inc
insl
inc
jnp
addr16
fucomip
pop
inc
flds
fwait
sarb
cli
jmp
inc
adc
inc
lock
stc
outsl
popl
xchg
les
fnstenv
pop
mov
dec
adc
test
mov
push
sub
std
jae
xlat
add
std
pop
xor
sbb
mov
pop
cld
xchg
fisttps
sub
mov
test
push
jge
fs
das
stos
in
jo
test
and
jno
std
in
icebp
dec
mov
adc
dec
ror
add
ret
add
js
andb
repnz
nopl
mov
dec
mov
enter
repnz
popa
or
pop
ret
add
mov
and
ljmp
divl
lret
and
dec
fisttpl
inc
in
or
incl
rcl
mov
sti
xchg
idivb
fsin
push
pop
scas
fimull
out
mov
les
hlt
popf
sbb
iret
adc
and
jns
fcom
or
pop
xor
push
scas
jecxz
mov
jge
cmpsl
notb
stc
aad
dec
loope
or
push
mov
mov
fdivrl
test
das
cmp
mov
aad
loopne
mov
rcrl
insb
dec
clc
cmpsl
mov
pop
pop
rcll
push
or
es
mov
scas
jmp
sub
jg
aas
loop
xchg
int3
jns
xor
push
mov
adc
pop
push
popa
leave
push
dec
lods
xor
dec
and
lcall
sub
cltd
dec
addr16
sbb
cwtl
dec
mov
popa
push
insl
out
aad
xchg
pop
sar
addb
adc
inc
jl
scas
scas
mov
jle
xor
inc
rolb
in
loopne
loop
imul
test
loop
arpl
dec
inc
in
jecxz
popa
adc
inc
or
aaa
les
push
pop
dec
test
testl
sub
xlat
sbb
jp
adc
cs
xor
outsb
sub
push
clc
sahf
ret
mov
std
push
mov
or
aam
sub
rcrl
xor
mov
push
push
or
push
sub
xor
mov
jl
test
sbb
xchg
into
push
popf
in
int
xchg
shll
cltd
test
ljmp
push
testb
jmp
xor
cmp
and
mov
xlat
mov
mov
enter
pop
aam
cmp
pushf
mov
push
adc
ficompl
inc
sbb
hlt
loope
das
ss
gs
aam
xchg
sub
push
les
xchg
mov
push
jo
jl
scas
hlt
mov
mov
repz
cs
push
cltd
xlat
outsb
sahf
dec
inc
lods
mov
mov
fildl
dec
mov
std
inc
push
enter
sbb
xor
lea
jae
cmp
lea
dec
or
vmovdqu
aam
out
jns
pop
jne
jp
sbb
mov
pop
in
mov
cmp
mov
or
sahf
add
mov
sub
adc
xchg
outsb
daa
add
sti
stc
sbb
or
jmp
inc
outsb
pop
scas
mov
mov
pop
scas
dec
jno
mov
cmpsb
jmp
pop
or
ss
inc
out
mov
jge
and
movsl
lret
dec
inc
jp
not
xor
dec
push
cwtl
jmp
pop
mov
aam
or
in
cmp
rolb
pop
lret
add
xorb
shlb
lret
and
cmp
nop
loope
clc
lret
sbbl
test
data16
jmp
dec
xor
test
sub
push
loope
daa
sbb
mov
mov
fidivrs
dec
aad
dec
fxch
jno
lcall
in
cmp
xor
dec
lret
sub
jno
mov
cmpsl
xor
fcmovbe
inc
fdivrp
pop
aas
xchg
jg
ljmp
fidivrs
dec
sbb
dec
repz
loopne
test
push
cmp
dec
sahf
mov
insb
rol
xchg
push
inc
aad
mov
mov
cmp
in
pop
into
scas
sbb
bound
cld
xchg
xchg
and
add
push
or
dec
jns
out
jns
mov
inc
shrb
push
nop
iret
ds
sub
lcall
sbbl
xchg
push
or
rclb
mov
xchg
push
mov
daa
icebp
xchg
popw
adc
int
lret
popf
jbe
leave
inc
add
adc
test
and
jge
push
inc
push
cmp
pop
in
lods
int3
mov
xor
std
jmp
xchg
or
mov
outsl
je
nop
mov
dec
fisubl
mov
lods
insl
push
mov
in
fiadds
repnz
or
mov
popf
shl
cwtl
hlt
mov
call
mov
lret
cwtl
xor
sbb
out
mov
into
lcall
out
mov
sti
mov
inc
sub
adcl
add
out
cwtl
dec
clc
sub
push
aaa
out
lcall
adcl
push
jl
int
outsb
mov
xchg
inc
jle
sbb
push
sub
int3
aaa
mov
lods
mov
and
pop
adc
mov
adc
sti
insb
pop
xchg
mov
jno
cmp
orl
fdivs
das
rcr
pop
call
push
mov
dec
es
add
sahf
cmp
lods
insl
xor
jmp
into
ds
mov
int3
aas
sahf
jecxz
and
inc
pop
push
mov
mov
test
fildll
pop
xlat
or
add
aad
ret
daa
lahf
lods
and
add
imul
inc
in
mov
xchg
loop
mov
out
xchg
lret
push
sub
out
mov
sub
or
jb
loopne
aas
mov
js
adc
int3
test
fcomps
mov
loop
mov
xchg
repnz
out
xor
pop
mov
xchg
repz
lea
subb
jo
mov
or
loop
outsb
loope
jo
cmp
mov
cmp
daa
sarb
inc
add
pop
aas
pop
icebp
add
push
dec
jmp
aam
push
xchg
xchg
adc
adc
fdivl
mov
inc
xchg
sub
cmp
into
jnp
jge
sbb
and
je
into
ja
sti
idivb
movsb
mov
fdiv
sbb
jecxz
or
in
insb
add
adcl
xor
xchg
out
in
inc
xchg
and
leave
outsb
push
insb
or
out
xor
retw
push
aas
orb
aaa
and
adc
push
in
rorl
add
imul
test
ljmp
es
add
and
cmp
mov
shlb
mov
inc
mov
fbld
sahf
push
dec
fisttpll
addr16
jbe
jns
scas
mov
add
push
out
sub
xchg
ja
or
bound
add
sbb
mov
cmp
daa
push
xchg
ficoml
mov
sti
dec
dec
nop
cwtl
ss
int
mov
scas
jne
cmp
push
lock
sub
fwait
cmpsl
fldt
push
iret
mov
out
sti
pop
add
lahf
mov
pop
rolb
and
fwait
int3
movb
mov
lods
inc
in
cli
pushf
shlb
adc
pop
and
sub
adc
les
stos
push
mov
xchg
ss
pop
int
fcompl
les
push
sbb
pop
das
aam
mov
dec
sbb
jno
icebp
loope
cmpsb
adc
xchg
jecxz
xchg
dec
fists
dec
xor
test
insl
lock
jnp
fs
lret
sarb
in
aam
push
lea
out
or
in
sti
and
sbb
sbb
pop
into
xor
sub
pop
and
shr
roll
in
jle
enter
imulb
sub
add
jp
and
cmp
sbb
ds
sub
or
addb
inc
int
gs
and
xor
sahf
cltd
mov
scas
out
adc
mov
test
insl
sub
add
flds
sub
pop
lds
mov
sub
test
mov
push
mov
pop
jmp
jnp
jmp
cltd
ja
adc
pop
xor
add
xchg
outsl
pop
fisubl
das
test
daa
adc
mov
push
jg
jb
repnz
je
add
in
lea
rcl
xchg
imul
or
fldcw
mov
es
inc
jb
ret
stc
fldcw
xlat
bound
xchg
sahf
hlt
into
movsb
scas
neg
push
loopne
jne
pop
cmp
jg
bound
pop
movsb
cmpsb
and
push
sti
mov
sahf
insb
push
or
push
stos
dec
jecxz
xchg
sub
out
pop
mov
pusha
inc
pop
ljmp
insb
dec
add
xor
bound
inc
ret
mov
or
cld
push
sbb
mov
ja
sbb
sub
clc
jle
add
mov
mov
outsb
stos
dec
in
out
sbb
arpl
sbb
jge
dec
into
mov
sbb
add
mov
fs
in
enter
daa
sbb
popa
jne
sbb
inc
clc
cwtl
pop
xor
pop
sbb
insl
push
push
adc
fisubrs
daa
xchg
or
mov
inc
popf
jb
mov
jbe
dec
xlat
push
mov
dec
xor
or
stos
pop
daa
cmp
xor
push
mov
add
lret
and
into
imul
mov
inc
xor
or
hlt
daa
repnz
add
mov
adc
cld
repz
adc
or
pop
xchg
xchg
sub
mov
cli
lcall
mov
sbbb
ds
sarl
cld
jge
pop
pop
loop
mov
gs
push
mov
adc
faddl
mov
cmp
xor
xchg
push
inc
rclb
sti
dec
out
es
dec
jae
or
fwait
sub
add
lret
mov
mov
sbb
or
stc
mov
jle
adcb
mov
rclb
inc
es
cwtl
lret
push
fmull
pop
jno
mov
xchg
push
jl
test
ja
xchg
mov
movsl
inc
jnp
aad
jbe
test
and
sbb
cwtl
xor
arpl
xchg
int
fcoml
mov
test
lea
push
mov
movsl
fcomps
mov
xchg
notb
adc
sbb
gs
icebp
and
jne
scas
pusha
mul
orl
mov
pop
stos
incb
lods
and
test
sbb
cli
or
dec
les
cmpsb
aaa
dec
lds
pop
inc
inc
mov
es
mov
pop
sub
mov
mov
fcoml
mov
pop
cmc
in
inc
jne
jg
dec
push
je
int3
dec
xlat
jbe
gs
pusha
lods
ljmp
and
adc
repz
outsb
test
imul
adc
dec
mov
addr16
push
je
fimull
int3
gs
fstpl
push
popf
out
mov
or
sahf
mov
leave
add
cs
mov
xlat
call
notl
test
add
jbe
inc
shrb
fnstcw
nop
sarb
ret
dec
fwait
lods
sbb
fadds
jo
fs
dec
loopne
sub
sbb
es
out
xor
out
orb
aas
out
lods
notb
add
mov
sbb
lahf
add
out
mov
pop
sbb
movsl
jl
lea
pop
xchg
add
fldenv
inc
dec
xchg
lret
sub
dec
out
arpl
ljmp
je
in
call
mov
repnz
inc
xlat
inc
mov
rcrb
sbb
imul
mov
inc
jae
xchg
cmpsb
sbb
xlat
push
lds
hlt
xor
dec
jmp
push
or
dec
push
sti
xor
cmpsl
xchg
sub
fmulp
mov
dec
aad
paddw
mov
push
adc
sub
lods
or
fwait
xor
pop
stos
mov
icebp
adc
pop
fdivrs
jle
xchg
std
jnp
mov
mov
ret
iret
cli
cmp
in
xor
adc
inc
sbb
jle
dec
xchg
adc
mov
add
cwtl
je
mov
test
push
push
or
xor
insl
cmp
add
nop
outsl
mov
mov
rclb
mov
dec
cmpsl
mov
fstps
sbb
mov
outsl
jmp
dec
jp
and
push
popa
push
stc
sbb
pop
hlt
push
insl
dec
inc
rcr
outsb
std
and
adc
cmp
lahf
dec
mov
or
out
jmp
popa
pop
rcll
and
cvttps2pi
fwait
sti
cmp
in
ret
test
dec
lret
mov
xchg
add
mov
cs
rol
sub
mov
sbb
insb
push
movsl
andl
xchg
int3
fcoml
hlt
int3
push
mov
out
mov
pop
mov
stc
mov
and
bound
xchg
cmp
in
movsl
cmpsl
adc
cld
or
push
mov
or
dec
and
hlt
outsl
or
adc
xchg
dec
xchg
adc
jmp
clc
cli
cmp
out
rorb
jg
rolb
sbb
scas
lock
and
xchg
mov
gs
js
or
cmp
jb
insb
pop
mov
inc
es
mov
mov
mov
mov
sbb
mov
push
or
jbe
dec
cwtl
push
xor
jg
adc
pop
roll
scas
sbb
or
cmp
icebp
jns
out
adc
xchg
test
dec
fimull
jb
mov
mov
imul
mov
loope
add
jp
mov
mov
test
adc
out
cmc
xchg
inc
mov
xchg
sbb
or
or
pop
in
subb
inc
in
pop
xchg
hlt
or
dec
movsb
mov
and
ja
in
sti
sub
cs
lods
adc
imul
cwtl
push
test
popf
sbb
mov
ret
das
sbb
into
inc
test
mov
mov
stc
mov
or
fbld
xlat
jmp
sub
cmp
or
scas
ja
data16
xchg
cmp
pop
dec
cmc
test
out
or
jns
cmp
mov
fs
mov
int
dec
mov
test
cmp
and
je
mov
push
ds
sbb
outsl
mov
jae
pop
dec
xchg
pop
pusha
push
sub
push
repnz
cmp
stos
push
cmpsl
sub
mov
mov
fwait
xchg
mov
adc
mov
cmpsl
push
fisttpl
lods
cmpsl
gs
mov
ja
aad
mov
imul
fwait
lea
in
push
sub
pop
lock
xor
add
cs
sarb
lods
aad
fcmovb
in
fwait
sbb
and
pop
or
adc
pop
outsl
sti
push
mov
push
xlat
rcpps
leave
fbstp
loope
fildll
adc
out
js
sbb
cmp
testb
addb
pop
icebp
xchg
outsb
or
ss
inc
inc
and
jbe
and
add
int3
stos
addr16
gs
pop
xchg
pop
jb
xlat
dec
pusha
mov
loope
sbb
sbb
out
mov
pop
arpl
loope
dec
movsb
push
jnp
xor
xchg
xor
fwait
cmp
fcoms
mov
sub
pushf
fcmovb
add
and
cmp
repnz
xor
jns
test
jno
mov
mov
jecxz
jl
adc
je
daa
mov
test
push
pop
ljmp
or
call
xor
or
dec
xchg
adc
hlt
or
sti
pop
push
cwtl
clc
lahf
shrb
mov
sub
hlt
hlt
add
mov
pop
data16
push
cmp
std
dec
and
pushf
pop
sbb
hlt
xchg
lret
insb
pusha
int3
jno
arpl
xor
sbb
pop
pusha
cmp
ret
insb
lcall
shlb
sbbb
or
jmp
in
pop
mov
sub
mov
push
inc
aam
loopne
repnz
js
jl
filds
mov
pop
add
pop
pop
adc
insb
push
mov
insl
mov
add
sub
clc
push
mov
orb
insl
out
jb
stos
xor
lods
mov
jnp
sub
adc
mov
mov
into
push
jno
jp
jb
or
push
xor
push
in
pop
jne
jg
jo
sub
inc
mov
adc
nop
mov
dec
dec
push
sub
gs
sub
xchg
shll
stc
fiadds
int
push
dec
xchg
mov
jmp
fsubrs
inc
ret
cmp
paddsb
xchg
cmp
add
push
inc
xor
jmp
movsl
outsl
cs
push
sub
add
adc
arpl
add
cmc
lock
pop
fldl
test
aas
dec
xchg
adc
add
push
and
pop
adc
inc
cmp
and
inc
inc
scas
and
sbb
jae
push
icebp
pop
stos
leave
xor
mov
outsl
test
push
int
mov
daa
pop
xor
cli
sti
fidivl
fs
repnz
mov
inc
fimuls
scas
pop
and
inc
push
fbld
mov
jne
and
cwtl
pusha
out
dec
or
cmp
imul
iret
mov
inc
sbb
fwait
jbe
loop
stos
jnp
shlb
test
int3
aas
pop
xchg
pushf
ret
add
push
xchg
mov
add
pop
lock
rol
in
je
xchg
aas
mov
jl
test
test
test
rolb
add
inc
loope,pn
xchg
mov
push
hlt
mov
pushf
das
shlb
lods
adc
mov
sub
ljmp
mov
sbb
xor
cmc
outsl
pop
shll
sub
push
push
xchg
outsb
xchg
jge
fistl
pop
in
lcall
jl
sub
fucomp
xor
dec
stc
cmp
jg
lock
dec
sbb
insb
xchg
in
fcompl
and
in
hlt
xor
mov
stc
mov
add
out
in
push
in
or
sub
in
lods
mov
jmp
leave
enter
stc
andb
fnstcw
or
pop
add
mov
add
dec
popa
lds
arpl
popa
sahf
jmp
pop
in
aas
add
add
add
pop
inc
repnz
inc
and
jecxz,pt
insb
dec
iret
push
or
shll
imul
aaa
mov
lods
sub
les
stos
ljmp
iret
inc
push
sti
sub
popf
imul
in
mov
lahf
dec
ret
outsb
mov
pop
and
stos
xchg
mov
es
push
lods
data16
adc
xchg
inc
fstl
mov
jnp
jbe
das
mov
iret
inc
and
icebp
adc
cmp
andb
dec
cmp
aas
ret
sti
inc
pop
xchg
adc
sub
jl
push
mov
inc
or
scas
arpl
jge
push
sbb
jns
int
fsubl
ds
dec
dec
mov
je
jmp
js
push
adc
into
test
cmpsb
dec
ret
push
mov
push
jp
cli
aam
sub
or
or
dec
iret
cmp
test
jnp
jl
and
test
aad
loopne
test
push
lahf
dec
idiv
xor
mov
jno
pushl
les
cwtl
jno
enter
fucomip
outsl
clc
or
bound
cmp
orl
dec
dec
adc
add
push
mov
jae
xchg
mov
jno
out
add
push
jnp
out
sbb
into
mov
ja
xor
mov
inc
mov
shr
xchg
adc
orl
mov
mov
loop
mov
aas
int
jno
mov
lods
into
js
fildll
mov
cs
adc
mov
in
jb
stc
inc
mov
mov
adc
decb
lcall
ljmp
add
inc
cmp
stos
dec
pop
negl
inc
sbb
push
mov
push
rolb
fxch
xor
xor
push
mov
xchg
bound
lret
or
inc
or
adc
cmp
dec
dec
mov
loop
and
fs
or
xlat
test
test
stc
test
add
sbb
int
stos
bnd
mov
js
jbe
sbb
xchg
js
jns
push
lods
mov
lahf
addl
out
sub
sub
dec
mov
sbb
jbe
mov
lret
shlb
pop
lods
pop
outsl
out
jns
xchg
pop
test
adc
dec
fldenv
clc
add
bound
mov
and
inc
aad
aam
jle
adc
push
fwait
out
or
cmp
imul
imul
xor
mov
pop
mov
mov
shlb
scas
pop
inc
xchg
xchg
xchg
mov
loope
cs
leave
std
mov
daa
or
cmp
adc
addr16
mov
jge
jb
sub
cli
pop
and
cmpl
jle
aad
or
lret
fcomp
mov
sar
inc
lahf
fnstsw
add
sbb
adc
outsl
pop
fidivrl
cmp
arpl
xchg
pop
push
xchg
call
jecxz
mov
pop
das
mov
or
cmc
fwait
xor
call
mov
ficomps
xorl
dec
out
popf
outsl
lds
imul
jg
stc
pop
or
jg
jp
loope
out
xlat
adc
lods
adc
rclb
push
jmp
or
sti
js
pop
aad
mov
test
mov
movl
or
aaa
fs
inc
sti
and
mov
lods
cmp
cmp
in
add
mov
cmpsb
pop
cmp
add
mov
xor
insl
arpl
int
jmp
call
mov
incl
mov
mov
cmpsl
shl
push
dec
stos
test
mov
push
sti
dec
es
sbb
dec
jb
test
cwtl
into
vshufps
clc
mov
sbb
and
dec
and
lods
not
jl
push
movsl
lock
out
cmp
movsb
pop
shrb
js,pt
and
mov
testl
in
push
mov
push
js
inc
pop
sahf
je
pop
incb
mov
mov
mov
adc
pmaxub
pop
inc
xchg
out
lahf
xor
addr16
dec
sub
push
pswapd
sbb
and
es
adc
push
in
imul
mov
ret
inc
popa
les
cmp
xchg
out
pop
lods
loopne
insb
mov
push
cltd
dec
icebp
jp
dec
xor
push
or
cmp
xlat
pop
bound
hlt
out
lahf
cwtl
out
fistl
and
or
or
dec
das
mov
rorl
mov
nop
popf
jbe
push
dec
jmp
nop
mov
xor
call
lock
sbb
xchg
insb
pop
sarl
ret
fs
popa
orl
dec
or
dec
push
out
mov
mov
xor
cmpsl
idivl
push
ljmp
das
hlt
inc
pop
mov
adc
inc
repnz
pop
shll
ret
iret
rcr
mov
lock
push
sbb
cmc
cwtl
mov
aam
or
mov
sub
jno
lahf
inc
adc
mov
mov
lock
dec
repz
orb
mov
xor
decl
push
mov
ficoml
mov
sarl
jnp
xlat
sahf
jmp
test
jns
into
inc
mov
sub
test
xchg
dec
mov
push
dec
cmp
sub
rorl
jae
xor
fwait
xor
adc
mov
es
imul
fisttpl
movsl
sub
dec
jne
stc
test
and
mov
cmc
iret
mov
jge
dec
jne
mov
jmp
hlt
loopne
ret
dec
adc
inc
lds
out
aad
sahf
jle
jmp
insl
in
arpl
mov
std
loopne
gs
maxps
cmp
sub
push
je
inc
pop
nop
xor
out
mov
and
mov
stc
xchg
cltd
sbb
push
iret
add
cs
out
lahf
cmp
jp
push
inc
mov
in
sub
cmp
and
cmp
jnp
xchg
push
and
rcll
jle
jne
and
popa
and
in
das
sbb
adc
inc
cmp
cmp
dec
mov
inc
push
push
imul
sarb
pop
aam
xchg
add
xchg
mov
aad
outsb
fsubrl
lcall
lea
mov
pop
dec
sub
and
pop
lea
jae
mov
pop
xor
dec
xchg
xchg
xchg
outsl
mov
les
cmp
ror
cmp
lods
pushf
sub
push
arpl
adc
test
fsubrs
sbb
and
orb
inc
jbe
lahf
sbb
mov
ja
sub
addr16
pop
bnd
sub
sbb
sub
inc
adc
jecxz
mov
jae
lahf
aaa
cmp
mov
jl
jnp
sub
dec
bound
std
jae
in
mov
rcll
ja
mov
rcll
test
cmpl
jecxz
cmpsl
mov
aas
dec
imul
jno
stos
add
mov
or
insb
sbb
jns
push
std
inc
cld
or
pop
lcall
inc
stos
daa
cmpsb
mov
mov
mov
push
lcall
out
mov
pop
cmp
mov
scas
les
lock
ds
adc
rcll
pushf
xchg
jmp
xor
mov
pop
xlat
arpl
int
in
mov
pusha
mov
inc
jl
les
cli
mov
aaa
movsl
daa
aad
sub
sarb
fidivrl
test
roll
inc
add
test
rorl
popa
in
jp
lock
lea
clc
push
add
repnz
ret
inc
inc
int3
das
or
cmp
mov
mov
in
das
aam
dec
dec
xchg
iret
cwtl
loopne
xor
add
push
mov
out
clc
add
pop
xchg
mov
mull
pop
sub
push
mov
icebp
cli
inc
inc
cmp
pop
add
cmp
mov
or
sti
sti
insl
dec
and
xchg
dec
shlb
test
jo
or
gs
js
sbbl
dec
arpl
cmc
xor
fcomp
pop
pop
adc
loope
xchg
andl
mov
pop
inc
movd
cli
cltd
and
int3
or
pop
mov
inc
aam
repnz
jns
popa
loopne
idivb
add
movsb
and
hlt
sub
add
push
outsl
jns
push
jbe
test
mov
add
notb
push
andw
xor
or
jne
ja
pop
dec
push
fdivrs
and
mov
mov
movsl
inc
add
adc
decb
push
out
hlt
les
dec
mov
into
xor
mov
lds
xor
jmp
dec
adc
xor
arpl
dec
stos
test
out
fbld
dec
aam
xchg
xlat
xchg
mov
shlb
and
in
ror
mov
pop
dec
adc
or
ret
cld
in
mov
repz
in
ret
mov
mov
or
arpl
sbb
jae
cmp
adc
std
in
aam
andl
test
sub
ret
mov
ret
mov
addr16
jmp
imul
mov
adc
repnz
pop
cmpsl
jmp
das
inc
xchg
fiadds
out
addr16
or
dec
scas
adc
popf
mov
std
xchg
ds
ja
dec
push
cmpb
xor
test
mov
loop
inc
ret
pushf
xchg
add
jl
push
push
ret
inc
js
mov
cltd
dec
xchg
jo
push
xchg
adc
pop
sbb
lds
aam
je
popf
cmp
mov
push
xor
jae
push
mov
hlt
leave
sbb
imul
addr16
pop
sub
or
xor
ss
iret
fcmovb
sbbb
sbb
mov
mov
arpl
mov
adc
jae
cmp
fs
or
stos
jge
mov
stos
push
xor
lock
fabs
icebp
sbb
mov
icebp
loopew
pop
jl
xor
sub
scas
in
data16
xchg
loop
or
or
dec
rolb
sub
mov
push
mov
and
stos
cwtl
mov
ret
into
adc
dec
iret
lock
mov
inc
cmp
call
aam
push
xor
cltd
mov
mov
pop
jno
mov
cmp
xor
test
and
ja
push
iret
inc
test
jge
xchg
lea
negl
push
ss
or
mov
and
int3
fdivrl
ljmp
jl
inc
hlt
sbb
in
sub
popa
test
cmp
das
into
mov
ss
pop
sub
inc
repnz
mov
add
mov
jno
cwtl
xchg
push
jo
sahf
jl
adcl
popa
fidivrs
xor
mov
stos
aaa
das
add
cltd
push
push
adcb
xor
inc
and
dec
jae
or
sbb
out
jo
sub
test
imul
addl
fnstenv
sahf
insl
push
imul
lea
xchg
test
fistpl
mov
test
aam
pop
xchg
sti
mov
jne
shll
or
or
adcl
and
pop
stc
cmp
cmpl
push
dec
sub
push
out
mov
fs
cltd
push
dec
xchg
dec
loop
mov
push
cltd
xchg
pop
jne
repnz
pop
mov
sbb
adc
not
ficoms
sbb
push
inc
scas
xorl
sbb
cmpsb
call
inc
xor
jne
stos
push
mov
sbb
out
cmp
rcr
jp
jecxz
add
add
dec
sub
and
add
xchg
es
and
std
imul
push
mov
mull
fisubrl
fdiv
push
insl
ffree
pop
xchg
repnz
sbb
mov
mov
test
inc
out
cld
cmp
sbb
in
pushf
iret
mov
repz
sub
cltd
xor
jae
adc
adcb
jle
loop
xor
orl
pop
paddq
in
mov
inc
sbb
jns
js
dec
inc
mov
mov
push
loope
ja
in
out
loope
adc
scas
sbb
sub
xchg
dec
pop
sbb
and
sub
jno
cld
popa
or
add
push
inc
mov
xor
jne
loope
lahf
jl
mov
push
sbb
test
mov
das
shr
or
jnp
loopne
xchg
fwait
shl
dec
add
dec
jl
sbb
fidivrl
repnz
pop
adc
mov
andb
cmpsl
fdiv
adc
outsb
xchg
aad
mov
mov
jl
enter
pop
shl
jb
inc
test
ret
mov
mov
xchg
push
xchg
adc
arpl
ret
or
mov
cmp
add
insl
sub
sub
test
pushf
jl
push
shr
cwtd
add
arpl
push
pop
xchg
cmpsl
jbe
cmp
jp
fldt
fistps
cmp
fsubrl
mov
sbbl
rorb
cmpsb
fidivl
sbb
and
cmp
outsb
cmpsb
jno
sub
adc
fs
fwait
cmpsl
sbb
cltd
cmpsb
cmc
ds
loope
mov
jnp
mov
inc
dec
sub
bnd
call
cmp
data16
nop
mov
outsl
pushf
mov
clc
call
jmp
add
repz
mov
iret
or
repnz
xor
hlt
sbb
les
lret
mov
call
jle
cmpl
cmp
cltd
inc
aaa
sub
and
mov
and
movsb
mov
es
outsb
xchg
je
ljmp
movsb
shlb
fwait
cmc
cli
lret
outsb
xchg
pop
ret
dec
outsl
mov
xor
sbb
push
shl
outsb
fbld
dec
je
ja
gs
daa
add
xor
sbb
mov
hlt
sbb
jno
xchg
xchg
sbb
sub
inc
imul
loopne
loopne
fidivrl
add
dec
es
jg
test
mov
cld
sub
loopne
lods
mov
imul
rolb
jo
sub
sbb
cli
into
out
arpl
xchg
stos
lods
shrb
frstor
or
or
pop
cmp
int3
pop
xchg
mov
pop
mov
adc
and
jmp
js
xor
nop
push
mov
mov
xchg
cwtl
fs
mov
mov
adc
mov
orl
lock
mov
jae
inc
sahf
ja
xor
mov
sbb
xchg
pop
sub
shlb
adc
divl
inc
cmpsb
fldenv
movsl
dec
and
jo
adc
leave
xchg
lahf
das
adc
jae
fmuls
out
push
lock
sbb
das
inc
xlat
pop
call
stos
mov
fwait
leave
mov
pushf
les
cmc
pop
in
and
xchg
push
mov
xchg
iret
jbe
ds
mov
lea
cmp
out
sub
xor
shlb
aaa
out
inc
push
cmpsb
aam
mov
push
dec
cmp
popa
inc
stos
ss
mov
scas
shrl
sub
sarb
mov
inc
test
jbe
jnp
ret
popf
imul
loop
add
mov
mov
sbb
es
push
sbb
jg
inc
mov
pop
fs
test
adc
xlat
or
push
add
dec
inc
xlat
adc
dec
aam
xor
xor
adc
call
les
ret
or
js
les
jbe
jmp
inc
inc
jmp
or
lret
jmp
adcb
pop
sarb
ss
addr16
mov
je
insl
xlat
cmpsb
mov
pop
xchg
pop
cmp
push
xor
daa
fildll
inc
pushl
xor
pop
dec
xchg
ja
push
sbb
xchg
outsl
lds
ja
sti
dec
xchg
dec
xchg
xor
rcl
test
ljmp
pop
out
outsb
enter
fisttps
test
mov
mov
enter
xchg
addb
mov
into
mov
out
dec
pop
popf
test
incb
pop
mov
mov
dec
add
icebp
cmpsl
lahf
aas
sahf
xchg
push
mov
jg
scas
sbbb
inc
movsb
mov
mov
cmp
cmpsl
and
fsubrl
push
xor
stos
lods
ret
jno
add
xor
xor
shl
mov
sbb
sub
imul
insl
stc
sbb
imul
inc
out
add
push
gs
insl
adc
add
sbb
add
ds
or
mov
adc
enter
inc
scas
cltd
inc
sbb
in
or
inc
mov
push
insb
fidivrl
inc
inc
jb
leave
xchg
xor
add
stos
fs
pop
push
aas
cmpsl
lret
movsb
punpcklbw
lods
das
fxch
pop
adc
xlat
xchg
inc
addr16
into
pop
fldcw
cmpb
int
adc
stc
push
xchg
aad
sbb
jns
sbb
data16
or
jnp
sbb
add
fsubs
fwait
fwait
scas
addb
in
mov
es
arpl
inc
iret
loope
push
popf
popf
rolb
mov
cmp
xor
push
xor
push
scas
enter
dec
jno
scas
mov
std
mov
cmp
cli
loopne
out
sbbl
ror
sbb
mov
or
sbb
mov
push
in
aas
fs
lret
test
cmp
inc
push
mov
xor
push
sub
sub
xorb
mov
ja
mov
jne
ret
xchg
dec
leave
push
clc
out
and
and
mov
cltd
inc
mov
fadd
mov
inc
imul
mov
adcl
push
sahf
mov
popf
or
popf
shlb
fwait
scas
mov
nop
mov
aad
jp
inc
mov
fadd
dec
sbb
in
xlat
fs
cltd
dec
xor
mov
lds
lods
sbb
imul
sbb
add
lahf
je
jne
movsb
mov
rol
fadds
cmpsl
adc
loopne
xor
scas
mov
repnz
mov
sbb
pop
add
inc
cmp
iret
loope
sub
mov
and
or
imul
add
in
dec
outsl
notl
xlat
cmc
mov
cmp
gs
divb
mov
fcoml
subl
cmpsb
mov
jmp
shr
dec
fisubl
inc
aam
test
loope
jnp
xchg
and
jbe
dec
aad
mov
js
jle
xor
pop
fisubrs
or
add
pusha
add
fldt
dec
push
sub
iret
fcmovbe
aam
inc
ficoms
ret
jl
xchg
jp
movsl
add
ljmp
or
test
ss
sub
xchg
call
int3
imul
call
shll
add
sub
xor
lods
inc
sbb
inc
pop
stos
or
pop
sub
sbb
dec
decb
out
dec
stos
lds
enter
adc
pushf
arpl
mov
js
icebp
out
sbb
call
bound
adc
cs
popl
fstps
xor
inc
clc
add
cmpsl
sub
or
mov
imul
fs
lock
je
inc
xchg
xchg
popa
loopne
sub
popf
lret
push
out
out
xor
xor
push
mov
movsl
lahf
cmp
insl
pop
into
das
inc
fwait
or
daa
pop
jbe
test
sbb
ret
jo
sbb
adcb
pop
and
testb
push
pop
pop
rcl
push
clc
aaa
aaa
sbb
sbb
fimuls
les
cs
aaa
rcll
push
nop
xor
aam
or
mov
cmpsb
call
pop
sub
shrl
std
sub
sbb
jp
xor
sub
push
and
inc
push
pop
cmc
sub
push
stc
xor
cwtl
mov
in
adc
cwtl
lea
xchg
in
cltd
iret
and
sti
cs
and
or
mov
enter
xchg
inc
jl
mov
or
dec
outsl
adc
mov
outsl
out
stc
bound
cmpsb
into
shl
push
out
fidivl
dec
insl
lds
rorb
xchg
xor
mov
adc
sub
xchg
pusha
icebp
es
roll
push
jbe
andb
out
iret
inc
divl
ret
jge
imul
mov
enter
inc
jg
mov
into
inc
or
and
mov
inc
andb
loop
imul
insb
push
xchg
mov
xchg
xor
ds
and
ficomps
in
jp
xchg
cli
jl
pop
mov
icebp
push
jmp
dec
sbb
jp
int
int3
mov
lret
aas
int
test
iret
push
stc
andb
push
adc
mov
pop
adc
das
jp
sbb
out
sbb
adc
push
sub
dec
fwait
jno
xor
ret
dec
jo
sbb
xchg
mov
xchg
je
mov
adc
sub
repnz
jmp
push
cmp
xorl
pop
sbb
pop
insb
sbb
jg
scas
repnz
dec
and
ficomps
or
push
xchg
adc
mov
bound
cmp
test
sti
loope
xchg
jecxz
subb
sub
cmc
cmp
leave
cmp
push
imul
or
test
inc
mov
lea
ret
sub
dec
push
cmpsl
mov
mov
notb
inc
nop
mov
sub
fwait
mov
aaa
subb
movsb
xchg
rolb
adc
call
ljmp
out
lock
inc
mov
xor
loope
xor
xor
aas
sub
xchg
pop
sbb
lods
sbb
add
adc
dec
idivb
cmpsl
add
movsb
dec
es
jl
push
stos
sbb
out
dec
mov
or
xchg
stc
mov
mov
lock
push
mov
shll
pop
sbb
cmp
popa
push
mov
push
int
dec
mov
sti
adc
xor
ror
ljmp
aaa
int3
aaa
inc
clc
in
xlat
jp
sub
shlb
and
jne
enter
push
jb
es
add
mov
fstpl
xor
xchg
mov
loop
clc
call
aas
in
cmpsl
into
xchg
jb
mov
push
arpl
icebp
lock
push
push
push
inc
add
mov
pop
sti
and
dec
test
and
xchg
fildl
pusha
dec
and
sarb
mov
mov
in
xor
cmp
and
mov
ja
sub
mov
push
js
fcompl
cmpsl
jbe
dec
sub
aam
xor
movsb
sub
imul
and
cmp
xchg
push
movsb
inc
std
loope
leave
inc
arpl
fwait
and
scas
jge
hlt
and
pmulhw
pop
mov
or
inc
mov
popa
aaa
lock
and
jae
leave
mov
sar
js
mov
aas
adc
pusha
push
loope
push
fimuls
sub
mov
lcall
shrl
mov
mov
enter
and
idiv
test
mov
pop
adc
iret
test
mov
sahf
pop
and
dec
inc
jne
shll
ss
fcmovne
cltd
mov
std
mov
lahf
mov
dec
push
sbb
imul
aaa
shlb
push
mov
ret
leave
xchg
stc
and
mov
pop
popa
mov
imulb
out
rcll
pop
xchg
popf
mov
loopne
inc
dec
adc
and
mov
xchg
insb
cwtl
scas
push
xchg
std
jmp
mov
sbbb
cld
in
add
rcll
mov
cs
repz
xchg
lret
or
or
sub
into
mov
mov
mov
mov
inc
sarb
lret
lcall
pop
adc
fucomi
sub
enter
push
push
push
mov
add
or
xchg
enter
cmpl
and
mov
stos
mov
scas
mov
pop
xchg
shl
enter
clc
adc
mov
bound
sub
mov
inc
daa
mov
sbb
and
lds
sub
jle
addr16
fmuls
dec
or
and
jmp
fucomip
pop
scas
or
add
fisttpl
cmpsb
dec
cmp
adc
jge
pusha
lods
scas
push
jp
or
cltd
dec
inc
cs
inc
add
mov
sub
xchg
test
push
fsubrs
jge
push
aaa
sbb
dec
inc
jp
aas
sub
inc
xchg
push
inc
outsl
out
cmp
andb
jae
imul
outsb
inc
sub
ds
sub
mov
bound
push
aas
xchg
lahf
pop
jmp
dec
jge
mov
insb
lds
fwait
stos
dec
pop
mov
pop
or
inc
mov
pop
push
push
inc
jno
aaa
sub
repnz
fildl
stos
and
rcl
imul
pop
xchg
outsb
std
sbbl
pop
in
stc
test
movsb
retw
or
adc
pop
bound
xor
in
insl
inc
pop
hlt
lret
pop
cli
aad
push
push
fiadds
out
int3
fucomip
nop
popa
push
cmp
xor
cmp
jns
pop
inc
pop
je
out
cmp
sub
faddl
xlat
fildl
sti
jo
arpl
pop
push
xchg
pop
xchg
xchg
sbb
lcall
inc
mov
mov
add
out
xor
xor
fcoml
dec
shll
addr16
dec
nop
jnp
ror
adc
mov
jo
sub
mov
leave
daa
mov
sbb
inc
mov
in
mov
push
xor
xor
mov
sbb
sub
cwtl
out
and
arpl
insb
popf
push
lds
jno
mov
xchg
pushf
bound
movsl
jb
sbb
push
cmpl
jnp
xchg
or
imul
cmp
cmp
mov
add
mov
mov
cmp
lea
test
jl
push
repz
jb
xchg
fldcw
aam
lods
in
mov
xchg
lea
lcall
inc
sbb
mov
cmp
hlt
push
loop
jle
cmpsb
xchg
mov
fildll
rclb
popa
jp
aas
pop
dec
mov
popa
mov
mov
mov
enter
mov
shll
jecxz
fmuls
je
les
and
pushf
dec
aam
mov
mov
into
insb
sub
adc
cmp
cld
cli
std
pop
push
jbe
idivl
int
pop
mov
mov
sbb
sahf
test
stos
in
dec
push
jb
jnp
xchg
pop
aas
pop
iret
out
mov
pop
mov
adcb
shrl
xchg
cli
xchg
fwait
xorb
fistpll
ja
sub
inc
sbb
int3
mov
sbb
pusha
push
fiadds
xor
int3
dec
cmp
mov
loope
stos
cmp
jecxz
pop
pop
inc
mov
inc
adc
inc
mov
bound
dec
idiv
pushf
lcall
es
jp
cmpsb
gs
shlb
insb
out
mov
out
jne
xchg
std
xor
movsb
and
and
iret
fdivl
sbb
movsl
mov
sub
mov
or
push
sub
pop
jmp
punpckhbw
fcmovbe
test
lcall
ds
pusha
scas
xchg
stos
sbbl
push
fwait
sahf
or
daa
sbb
stos
inc
or
xor
inc
roll
sub
inc
inc
mov
push
adc
mov
cmc
imul
push
mov
outsb
fidivs
push
insb
sub
call
pop
mov
sbb
inc
inc
test
sbbl
jg
fbstp
mov
inc
jb
adcb
shlb
xchg
adcl
test
dec
dec
pop
mov
jl
outsb
out
mov
inc
cmp
ds
lcall
bound
loope
add
outsl
push
andb
mov
pop
sub
adc
pop
pop
pop
int
cmp
movsb
lock
push
dec
in
and
mov
rcrb
push
scas
cmp
jnp
call
in
fidivrl
add
xchg
push
je
adc
scas
cmp
cld
inc
mov
xorl
les
negl
mov
insl
mov
jmp
les
ficoml
scas
push
push
mov
shr
cld
sub
jg
mov
lcall
mov
jo
xor
sub
sahf
fcomps
xor
bound
jl
pushf
insb
sti
scas
incl
adc
push
or
inc
bound
xor
out
dec
push
mov
stc
rol
sbb
or
mov
int
xor
mov
bsr
push
or
idivb
loop
sub
adc
dec
lods
push
xchg
ljmp
sub
int
jo
mov
and
adc
jb
arpl
lret
push
popf
dec
outsl
mov
cmp
pop
dec
push
fiaddl
les
jp
mov
std
decl
test
xchg
fldcw
or
enter
cwtl
mov
out
adc
ret
dec
popf
cmp
pop
shlb
or
jl
xor
mov
sub
lret
add
in
rol
dec
xor
sub
movntq
push
mov
outsb
stos
dec
hlt
mov
sub
bnd
stos
xchg
fs
dec
js
mov
and
fcomps
sub
int
fcoms
cwtl
pop
test
pop
adc
ljmp
jmp
sbb
shrl
cwtl
sub
out
mov
adcl
add
cmp
pop
inc
std
rcr
je
jmp
inc
loope
xor
jne
inc
lock
inc
or
adc
sub
insb
daa
xor
fnstsw
pop
mov
cmp
test
or
and
imull
jmp
int3
icebp
fdiv
jae
je
fnstcw
sub
fldenv
add
push
enter
cli
and
sub
or
cs
mov
cmp
fldl
sahf
jns
ja
pop
repnz
js
mov
add
mov
xor
xor
movsw
cmp
frstor
mov
cmc
adc
fsubs
popf
les
mov
insb
xchg
cmc
std
push
shlb
in
lahf
nop
jbe
add
mov
sub
cltd
mov
sbb
jae
pop
pop
mov
aam
push
pop
sub
mov
or
pop
ljmp
mov
loopne
jg
pop
cs
jg
dec
int
outsb
shl
sbb
out
fistpll
rcrl
pushf
shll
mov
icebp
sarb
jge
mov
bound
sub
cmp
jno
pushf
and
push
cs
or
jl
shrb
or
jmp
lret
add
cmp
test
mov
daa
jo
daa
jo
je
and
pushf
fdivrs
xchg
imul
stos
adc
push
into
xor
repnz
jp
xchg
xor
cltd
in
mov
pop
mov
or
lret
int3
push
add
lretw
or
pop
cwtl
mov
insl
fucomip
fst
outsb
cmp
arpl
rcll
sub
aad
mov
mov
ret
cmp
xorb
js
in
imul
test
sbb
mov
imul
rcrl
sub
mov
jne
mov
add
in
add
outsb
mov
aam
out
xor
hlt
push
push
mov
aas
sub
mov
pop
dec
idiv
in
scas
xchg
mov
adc
adc
out
mov
gs
mov
xor
and
xlat
in
lods
fsubrs
pop
aas
movsb
popf
adc
fildl
jg
add
out
push
lods
stc
out
sub
add
add
xlat
cvttps2pi
fucomp
scas
lahf
rorl
jb
push
mov
enter
stos
push
les
subl
pop
cld
fidivl
movsl
xor
xchg
inc
popf
push
int3
ds
jge
fmul
fidivrs
push
jecxz
popl
sub
ljmp
cld
mov
xchg
lret
je
sbb
mov
push
dec
popa
or
mov
jb
mov
movsl
sub
repnz
sub
pop
out
dec
push
ret
orl
sub
inc
adc
sti
xlat
push
xor
fmul
int
jno
cmp
gs
fwait
je
pop
inc
hlt
sbb
outsb
push
push
xchg
ja
icebp
mov
sbb
imul
aad
iret
lcall
call
adc
sbb
test
or
loope
je
push
pop
scas
inc
mov
mov
fnstcw
mov
cmpsl
dec
xor
roll
movsl
out
out
nop
pop
sub
push
or
adc
jmp
xchg
jae
loope
loopne
push
or
cmp
xchg
loop
and
add
neg
xor
je
popa
pop
lds
loope
adc
das
aas
lds
cmpsl
aaa
cli
xchg
lock
lea
and
mov
jmp
sti
pop
ja
sub
imul
leave
fadd
mov
subl
fldcw
popf
dec
dec
xchg
adc
insb
movsb
add
cs
pop
shlb
pushf
mov
daa
out
lahf
cltd
mov
push
shlb
cmpsb
outsl
fcoms
xchg
sbb
and
inc
jmp
pop
sbb
test
jnp
push
stc
ss
pop
jbe
popa
xlat
imul
add
adcl
inc
aas
mov
pop
mov
aaa
add
je
in
loop
fnstcw
rcrl
insb
jb
and
cmp
inc
jg
pushf
test
mov
jl
sub
push
dec
ret
ljmp
push
fisttpl
mov
lds
push
jmp
ss
inc
pop
pop
inc
mov
jo
xor
xor
cmp
shll
lcall
daa
hlt
in
iret
inc
mov
inc
xor
cmp
pop
sub
mov
adc
dec
fbld
mov
xor
popf
ret
adc
sub
sbb
jl
or
call
sbb
frstor
shll
stos
mov
xchg
adc
xchg
fiaddl
jp
out
sbb
dec
movb
xchg
dec
mov
and
scas
rcl
loope
mov
jmp
or
add
mov
pop
pop
inc
adc
adc
subl
inc
ss
in
mov
push
jmp
scas
outsb
cmpsb
out
imul
or
dec
xor
push
jb
push
hlt
jecxz
cld
pop
pop
and
jmp
leave
jno
cmpsl
jne
clc
xchg
or
stc
clc
sbb
clc
je
sbb
mov
fstpt
push
paddsb
fildll
mov
insl
xor
push
jae
inc
add
int3
pop
je
js
mov
lcall
dec
ss
cmpsb
sub
fmull
stos
in
mov
mov
ds
add
leave
push
mov
add
mov
xchg
arpl
mov
loop
sub
mov
test
dec
xor
sbb
ss
jo
sub
dec
mov
sahf
or
fidivrl
push
dec
pop
xchg
cmp
outsb
imul
or
insb
leave
sub
or
adc
sbb
pop
jg
sub
divb
fcompl
ljmp
jecxz,pn
pop
notl
pop
xor
jns
xlat
mov
xchg
test
sub
jo
xor
bound
mov
lock
out
xchg
sahf
in
das
mov
push
les
aaa
and
jle
sub
ds
mov
jmp
and
xchg
fwait
cmpsl
icebp
xlat
inc
pop
push
jb
inc
jno
jne
fldt
fdivl
out
pop
enter
xchg
xor
push
jb
mov
dec
and
mov
out
into
and
cmp
mov
loope
jle
sahf
rcr
rolb
leave
fucom
add
mov
pop
sarl
cmc
into
rclb
or
cmp
sti
aaa
into
popa
or
mov
cmp
out
xchg
divb
or
or
fsub
hlt
cmp
fstps
push
push
push
bound
lret
repnz
pop
fucomi
ja
insb
jge
ds
mov
inc
cmpsb
jmp
vmread
jo
push
pop
and
add
fidivrs
sbb
push
or
xchg
out
or
test
stos
cli
jmp
rorl
cmpl
fldcw
sbb
jge
or
dec
divl
mov
push
cwtl
and
xlat
or
mov
decb
dec
and
sub
dec
jge
cmpsl
mov
xchg
push
inc
stc
out
mov
lahf
push
ljmp
pop
je
or
push
mov
jb
insb
xchg
or
arpl
lods
mov
pop
jge
xor
xchg
adc
pusha
mov
sub
xor
into
mov
push
push
add
jae
clc
mov
mov
dec
jle
das
pop
ficoml
icebp
std
sbb
rorb
dec
roll
lds
icebp
repz
lock
call
or
push
pusha
adc
mov
or
mov
jns
sub
xchg
mov
xor
popa
ds
push
scas
push
xchg
inc
fistpll
ljmp
outsb
movsl
xchg
bound
mov
xchg
jns
fnstsw
dec
mov
jge
cmp
rcll
dec
fchs
adc
push
sbbl
fisubs
loop
dec
repz
scas
mov
add
inc
xchg
jg
fcompl
fcmovne
inc
push
jnp
mov
dec
mov
mov
test
lods
cmp
fs
jl
mov
enter
xor
dec
lea
aad
loop
sub
mov
icebp
and
in
mov
cli
sbb
scas
jb
ljmp
sahf
cmp
call
insl
adc
test
xlat
popa
mov
cmp
sahf
loopne
push
dec
ja
cmp
repz
outsl
or
jecxz
xchg
in
in
xchg
test
push
jg
pop
fstpl
jo
mov
or
lcall
xchg
notb
push
outsl
lock
in
nop
das
rcrb
add
aas
push
pop
pop
inc
cwtl
aas
outsl
fisttps
jle
pop
cmc
xchg
pushf
rorl
push
fistps
outsb
popf
mov
and
mov
mov
xor
mov
cmpsl
cmp
adc
sarb
or
adc
xor
lock
mov
incb
xchg
addb
and
inc
sub
mov
cld
xchg
lds
into
push
lods
sub
test
mov
sub
js
lret
and
mov
int
adcl
add
pop
xchg
mov
out
xor
pop
fmull
inc
inc
les
das
cmc
adc
frstors
and
shll
out
popf
sarb
stc
xchg
push
cs
lret
clc
pextrw
push
jbe
out
push
cmc
nop
sbb
scas
stos
mov
sbb
xor
mov
test
sti
dec
loope
inc
bound
xchg
lahf
inc
lahf
pop
ret
outsl
pop
xor
xor
bound
in
pushl
push
xchg
sub
sbb
test
add
sbb
push
jnp
mov
in
daa
scas
push
jecxz
hlt
mov
sahf
xor
lods
dec
fistl
popf
fprem
jl
jle
call
rorl
aam
pop
mov
push
jb
rcl
mov
mov
xchg
loope
push
mov
iret
xor
xor
and
sub
jbe
ret
ljmp
jns
aad
push
aad
xchg
jle
sti
js
in
es
pop
adc
pop
cltd
adc
out
lret
jmp
decb
sub
sbbl
lret
jp
arpl
mov
mov
xor
push
shll
mov
or
push
pushf
cmpsl
mov
addl
int
call
dec
mov
ljmp
push
int3
push
fs
in
jb
jae
sti
arpl
cmp
and
lcall
or
pop
test
mov
fbld
mov
std
orb
cmp
outsl
inc
xchg
lret
push
jg
mov
dec
mov
mov
andb
adc
dec
ljmp
sbb
aas
in
mov
ficomps
mov
mov
or
push
int3
daa
adc
dec
insl
adc
adc
jg
aad
fsubr
in
lcall
or
test
inc
pop
sub
movsl
call
sub
fildl
pop
push
sbb
test
push
mov
scas
and
and
sbb
es
jae
lcall
lea
inc
shr
dec
dec
jns
bound
xchg
xchg
and
repz
adc
gs
mov
clc
insb
cmc
lds
popa
outsl
add
xor
les
outsl
popa
sbb
int3
pop
fistpl
addb
mov
push
jns
sbb
pop
mov
loope
ds
push
js
loope
mov
cmpsl
jg
lret
fidivs
sbb
add
sbb
shlb
mov
dec
xchg
test
loopne
call
je
xor
daa
mov
imul
push
inc
lock
int
push
shlb
lret
add
xchg
leave
arpl
dec
jle
adc
fists
push
test
scas
stos
xchg
sub
popf
cmp
inc
sub
popa
pop
clc
mov
jg
xor
ljmp
or
cmpsl
cs
daa
cmpb
rcrl
pop
outsl
movsl
cmp
xchg
test
loop
pushf
addr16
or
scas
cmp
in
rorb
sub
xchg
std
int
cmp
dec
lds
call
push
or
push
cli
pop
and
fisubs
pop
jno
in
lret
xchg
test
jae
mov
mov
mov
iret
loope
lods
add
jnp
les
lret
pusha
adc
imul
pop
push
ljmp
adc
out
imul
push
cltd
fnstcw
scas
scas
sub
scas
es
pusha
js
cmp
sbb
sub
out
loope
inc
insl
lock
add
xchg
dec
xchg
xchg
lods
adc
sub
xchg
adc
ds
mov
loopne
xor
dec
push
inc
jae
cs
sbb
lcall
rorb
sbb
add
mov
faddp
arpl
xchg
cmpsb
negl
in
in
loope
jbe
xorb
xchg
xchg
dec
out
outsl
xor
addr16
jae
rcrl
adc
shl
cmp
fadds
lea
out
in
psrlw
and
lea
jnp
mov
jg
mov
sbb
mov
outsb
inc
cmpsl
jmp
pop
idivb
lret
bound
ljmp
cmpsl
push
lds
fs
lcall
into
lcall
nop
mov
filds
inc
popf
pop
in
iret
inc
sti
mov
data16
data16
jmp
pop
test
test
xchg
pop
jl
aam
mov
sahf
out
mov
std
stc
pusha
xchg
xor
mov
mov
addr16
adc
mov
cs
sbb
adc
out
push
pop
pop
jae
pop
imul
mov
cltd
jns
lods
paddq
roll
sbb
mov
in
mov
faddl
xchg
xchg
xchg
jg
lods
xor
pop
dec
lret
gs
out
lret
mov
add
push
or
das
cli
scas
dec
adc
test
into
sbb
fimuls
jo
icebp
jb
inc
decb
and
jae
sbb
or
push
ljmp
xorb
ss
fnstcw
jle
xchg
dec
je
jg
das
push
into
mul
lret
mov
push
and
lret
fdivl
sub
mov
mov
dec
push
in
bound
mov
das
int3
xchg
sub
sub
mov
int3
or
xchg
pop
jge
mov
cmp
hlt
or
or
call
add
sub
test
xchg
add
or
insl
push
adc
cmc
loop
pop
push
lcall
je
ret
sarb
fsin
xchg
mov
gs
ja
jg,pn
movsb
lods
shll
icebp
cmp
repnz
pavgw
dec
cs
divl
pop
repz
lret
mov
loop
and
popf
out
aad
adc
mov
sub
imul
sub
inc
in
loop
cmp
mov
push
dec
mov
andl
gs
enter
das
in
pop
jp
cmp
sub
jle
push
dec
loop
bound
jnp
inc
mov
sbb
push
repnz
cwtl
maskmovq
notl
out
or
test
movsl
in
or
gs
cs
cmp
pusha
pop
pop
mov
pop
filds
mov
aam
push
push
xor
jecxz
in
inc
mov
out
decb
dec
insl
shl
and
in
add
je
out
mov
sbb
movsb
cmp
rorl
add
ljmp
popa
cld
xchg
wrmsr
inc
pop
jecxz
jg
sahf
aas
cmpsl
dec
jno
xchg
or
pop
mov
fisttps
xchg
and
sbb
adc
ljmp
sbb
repnz
add
dec
hlt
mov
stos
sarb
jl
lret
stc
hlt
pushf
jmp
xchg
ljmp
repnz
mov
cwtl
dec
sbb
sub
notl
adc
mov
jmp
mov
repz
movsb
add
xor
sbb
mov
dec
or
ret
call
cld
je
add
or
shl
cli
jp
in
movsl
or
rcll
mov
mov
dec
xor
and
inc
in
jmp
sub
sub
test
inc
insb
cmpsb
xchg
xlat
xchg
rcrb
ret
aas
leave
and
mov
add
jle
and
cmp
sahf
add
rcrb
xorl
or
fmuls
fstpt
sub
test
cmp
mov
nop
loope
inc
insb
pushf
cmc
lock
inc
xchg
mov
adc
aad
fimuls
mov
push
clc
jecxz
mov
ja
jne
pop
ss
sbb
and
adcl
or
pop
or
imul
xchg
stc
ficomps
aad
adc
fucomip
outsl
mov
js
adc
icebp
or
push
data16
std
test
and
dec
movsb
cmpsl
into
lea
pushf
xchg
or
pop
shl
xor
pop
jnp
push
imul
imul
dec
ficoml
fmul
mov
inc
sti
enter
xchg
pop
lret
pop
pop
xchg
jns
faddp
sub
insl
incb
and
stos
inc
inc
adc
mov
jg
cmp
cmp
mov
mov
gs
jge
jmp
cmp
aaa
pop
mov
arpl
int3
mov
into
imul
shlb
inc
cmp
mov
fcmovne
cmp
fcoml
es
subb
cld
je
xchg
sbb
mov
pushf
add
push
fwait
mov
mov
iret
push
adc
jmp
mov
or
sbb
or
push
pop
cld
call
pop
mov
mov
testl
dec
aaa
icebp
aaa
push
add
stc
inc
orb
das
sub
sub
xchg
cwtl
push
aaa
dec
add
cwtl
adc
cmovne
jle
aas
fwait
cmp
nop
and
add
ffree
mov
icebp
mov
lods
or
lahf
lret
mov
leave
push
out
xchg
or
popa
mov
push
mov
adc
jno
out
lds
sti
daa
in
jnp
shll
lock
jo
jne
sbb
cmpsl
idivb
inc
arpl
jle
or
aad
inc
jnp
cmp
mov
xor
sub
add
mov
lds
or
pop
xlat
repnz
push
adc
sbb
sub
adc
arpl
push
xchg
jns
push
push
cltd
mov
fcoms
cmc
shr
push
rcll
sti
rcl
xchg
divb
mov
lahf
test
out
ret
enter
xor
ret
fisubrl
jbe
stos
mov
sbb
cli
sub
or
mov
adc
cmpsb
mov
mov
bound
loopne
es
lock
pop
jmp
fildl
xor
xor
dec
cmpsl
cmpl
cmc
notl
adc
aad
mov
sub
mov
xchg
xchg
push
pop
cwtl
sub
and
mov
in
mov
test
mov
icebp
and
push
add
xor
mov
cwtl
and
lods
jo
sahf
repz
jno
jo
jmp
pop
push
or
int
cmc
sbb
jl
aaa
test
dec
sub
mov
test
and
mov
arpl
jecxz
pop
xchg
in
test
sub
data16
nop
adc
inc
push
cmp
test
lods
xor
insb
xchg
movq
es
scas
inc
jnp
cmc
adc
stos
pop
jo
sub
nop
pop
aam
add
xor
pop
xchg
jmp
jb
mov
popf
cwtl
lods
jg
mov
pop
or
jne
mov
xor
inc
dec
pusha
and
push
in
push
mov
cmp
lods
cmc
mov
xchg
adc
data16
mov
cmpsl
arpl
jecxz
out
pop
mov
call
cmp
lahf
les
xchg
in
movsb
sub
adc
jns
gs
inc
and
mov
cmp
aam
ds
test
mov
or
adc
mov
das
and
mov
inc
addr16
xor
lret
cli
clc
mov
sub
out
rorb
xchg
xor
mov
push
mov
addl
push
cmp
mov
nop
pop
fldt
aad
push
push
xchg
addl
pop
arpl
int3
add
xlat
xlat
loope
or
outsl
in
jbe
add
mov
inc
adc
push
jl
cmp
lock
ljmp
mov
loope
lahf
xchg
les
cmp
jmp
or
icebp
scas
jbe
outsb
jge
shl
aaa
sbb
ret
stos
fwait
jmp
xchg
sbb
mov
loopne
sbb
xor
jmp
sarb
xchg
dec
inc
fwait
outsb
pop
sbb
jle
add
pushaw
icebp
jbe
out
rcll
outsb
negb
cmc
push
cmp
dec
pop
pop
jae
adc
mov
jbe
pop
mul
xchg
mov
ja
jns
push
mov
test
mov
cmp
inc
lock
loope
pop
push
sbb
adc
jmp
mov
lods
cmp
push
xor
xchg
fsts
scas
xor
pop
adc
add
enter
or
loope
push
jo
sub
jmp
push
lds
test
cmc
stos
adc
push
pop
mov
inc
xchg
jae
out
dec
and
mov
das
pop
cmp
fidivl
in
pusha
mov
adc
fsts
test
scas
lcall
dec
cmp
sub
mov
cmc
in
popf
cmc
int
dec
add
test
fmuls
pop
dec
and
push
cltd
fwait
inc
pop
ficompl
push
jno
pushl
stc
jl
je
fwait
enter
pop
popa
aas
popf
mov
cmpsb
std
mul
aad
cli
test
aaa
loope
xchg
xchg
cli
xchg
loop
fisttpll
pop
lock
loop
fsubl
sub
leave
dec
sbb
add
cmp
and
fcoml
jo
aad
mov
jecxz
mov
xchg
pop
xchg
dec
inc
into
mov
xchg
jmp
inc
test
out
in
jnp
pop
inc
cmpsb
shll
cltd
pusha
lret
mov
ss
sub
push
jl
out
and
jbe
fcompl
imul
dec
out
add
sub
push
rclb
mov
push
mov
lods
sub
fwait
insb
xor
jl
add
xchg
xor
cltd
mov
mov
jo
icebp
inc
pop
cmc
adc
xorb
cld
add
push
mov
jne
push
jecxz
pop
mov
xor
in
mov
xrelease
pop
push
or
dec
jp
stc
test
call
cltd
fs
xchg
jae
pop
xchg
sbb
andb
and
add
sbb
out
pop
push
and
xchg
aaa
lret
loopne
loope
push
ret
cli
sbb
pushf
and
pop
push
add
mov
cmp
stos
xor
pushf
cmpl
cs
xor
insl
xchg
sub
mov
adc
adc
push
adc
mov
cmpb
sbb
fiadds
in
pusha
out
jl
push
and
pop
xorb
into
jge
test
cmp
push
push
mov
jb
xchg
sahf
out
addl
push
adc
xchg
xchg
adc
fwait
cmp
orl
test
xchg
and
scas
mov
ja
test
or
enter
imul
fstpl
inc
loopne
adc
push
loope
dec
jmp
jle
gs
dec
inc
sbb
fld
or
xchg
inc
add
xchg
mov
push
mov
adc
mov
mov
fistpll
subb
mov
psadbw
ss
out
inc
xchg
mov
outsb
js
push
and
jmp
in
lret
test
push
movsb
loope
out
cmp
lods
ja
xchg
ljmp
adc
xlat
adcl
xchg
xor
push
xlat
cld
in
test
push
mov
push
and
add
inc
loop
rclb
push
popl
cs
mov
lahf
inc
mov
mov
mov
sahf
mov
addr16
xor
enter
outsl
fstpl
mov
test
or
fwait
leave
inc
lods
nop/reserved
movsb
mov
xlat
cs
mov
adc
fistpll
test
hlt
frstor
and
das
icebp
dec
xor
cmp
sahf
pop
inc
and
push
iret
jb
es
addb
les
xor
shlb
mov
inc
adc
xlat
notl
jle
mov
test
dec
jno
pop
mov
in
jg
leave
push
aad
inc
aas
dec
mov
jge
out
jns
shr
into
and
test
ret
dec
jg
test
std
movsl
sbb
out
push
or
xor
or
add
pushf
js
push
roll
jae
adc
imul
insb
cli
shll
orb
fdivr
sub
cmc
push
inc
rorl
cltd
pop
sbb
jae
mov
sbb
add
mov
add
mov
mov
in
loope
mov
jecxz
cmp
lret
or
mov
mov
clc
dec
mov
add
sbb
adc
imul
enter
or
sub
push
sbb
cs
nop
das
in
dec
addl
shlb
and
int3
adc
mov
cmp
pop
add
sahf
imul
mov
popa
loope
shll
mov
pop
mov
lods
mov
jge
andb
mov
fwait
leave
into
mov
into
inc
movsb
jnp
test
stc
sbb
pop
jae
stos
sahf
lcall
push
repnz
jno
repnz
aad
sbb
insb
outsl
cli
sbb
xchg
cwtl
aad
lea
cltd
outsb
push
xlat
fcos
fs
pop
push
mov
jbe
leave
push
inc
cld
push
mov
loopne
int3
cld
pop
cmpsb
les
cmp
cltd
mov
inc
jae
popf
test
sahf
divb
mov
cmpb
rcrl
mov
out
lods
cli
cmc
xor
sbb
cmp
sbb
sar
sub
out
or
dec
ja
inc
mov
inc
ljmp
shlb
mov
in
leave
ficoml
loopne
aaa
adc
je
add
repz
fxch
pop
test
dec
jmp
mov
sub
scas
or
test
jb
adc
lock
inc
or
shlb
inc
sub
loop
dec
shl
push
jbe
mov
mov
rcrl
cmp
mov
stos
jns
adc
into
js
out
pop
ljmp
nop
cltd
cmpsl
stos
cmp
jp
call
mov
in
sub
decb
ljmp
push
cmp
mov
inc
and
popf
call
sbb
or
jmp
les
mov
ja
jl
dec
jb
repnz
adc
and
cmp
add
jns
dec
xchg
iret
movsl
jmp
dec
adc
and
scas
popa
lea
jecxz
push
rcll
dec
add
es
pop
sub
mov
shll
mov
jmp
mov
push
aad
inc
jnp
lock
rcll
lds
lret
add
shl
test
sub
pop
stos
jecxz
int3
int3
idiv
xor
imul
test
mov
lds
xlat
fdivrl
inc
jl
push
or
cmp
int
jp
inc
shr
jle
mov
sbb
aad
mov
jmp
sbb
sbb
mov
push
push
jg
xor
pop
push
cltd
inc
mov
ja
les
testb
test
scas
fs
xor
cmpsb
in
jecxz
lock
push
xor
cmpsb
aas
or
daa
adc
sbb
mov
jl
cmpsl
inc
mov
out
mov
inc
hlt
dec
fildll
xchg
fs
xchg
inc
jne
push
xor
lods
dec
insl
outsb
mov
pop
psllq
jbe
sub
cmp
ja
lods
repnz
mov
jmp
or
aam
inc
jle
and
sbb
dec
sbb
cmp
push
jge
lahf
add
mov
xchg
jae
shll
inc
insb
aaa
push
xchg
dec
push
pushf
sbb
rcr
pop
or
cmp
pushf
pop
stos
push
dec
mov
mov
lods
push
inc
leave
testb
cs
add
sahf
sub
outsl
fcoms
mov
xchg
inc
enter
aas
push
jo
mov
pushf
ja
out
mov
popa
jno
int
lcall
sarb
dec
xor
sahf
pop
fwait
mov
push
aad
out
and
pushf
ror
xor
mov
iret
sub
fiadds
mov
pop
xchg
mov
call
cmp
loope
ret
dec
mov
ret
dec
imul
and
ror
jbe
repz
xchg
cmpsl
sbb
mov
or
fdivrl
out
adc
mov
icebp
jmp
mov
ljmp
jne
in
lock
adc
cs
outsl
jmp
int3
cmp
cmp
push
lock
sti
pop
stos
fst
shll
push
and
jns
mov
jbe
scas
mov
dec
mov
test
fldcw
adc
cs
mov
inc
enter
fsubl
xchg
mov
sub
rcll
in
push
mov
shll
repz
push
adc
add
adc
or
xchg
aaa
sarl
mov
dec
movsb
mov
sub
mov
bound
ret
movsb
pop
mov
sbb
sub
sahf
rcl
pusha
pop
in
sbb
mov
adc
aad
scas
mov
inc
inc
dec
bound
mov
pop
dec
fnsave
push
adc
fstpl
xlat
stos
cmpsl
cmovl
scas
inc
mov
ret
adc
test
insb
dec
aam
loope
inc
mov
push
mov
jge
adc
or
aaa
pop
or
lcall
or
sbb
into
into
cmp
pop
add
mov
dec
icebp
movsb
cmpsl
dec
mov
sbb
mov
xlat
aas
sub
jg
movsl
data16
mov
ret
inc
fdivs
lret
jmp
cmpl
stos
dec
loopnew
incl
in
mov
aas
movb
mov
mov
cmp
add
sub
arpl
xor
mov
rcrl
imul
pop
pusha
sbb
xlat
pop
jecxz
cmp
icebp
test
icebp
cmp
xchg
mov
xchg
shlb
leave
es
sub
cmp
fistpl
sbb
pop
insl
mov
jl
adc
stos
cs
cmp
cli
repz
js
dec
lock
sub
ja
lods
jne
xchg
int
mov
not
mov
mov
mov
mov
jo
call
gs
jp
pop
ficoml
jmp
lret
pop
rcll
jbe
mov
out
mov
aam
dec
repz
adc
insl
or
push
int3
cmp
and
cmpsl
lods
insb
adc
aad
lret
fcom
lret
mov
cmc
das
xor
mov
xor
pop
push
push
mov
repnz
mov
adc
in
pop
icebp
loope
pop
or
push
lods
sub
nop
mov
jmp
sbb
adc
es
cmpsl
nop
jge
out
add
test
imul
int3
pop
hlt
jp
jge
mov
cli
lret
fstp
clc
loopne
xchg
movsl
push
add
pop
mov
stos
mov
stos
ret
or
pop
das
out
dec
outsb
subb
push
sub
dec
pop
lods
sub
pop
pop
aas
repnz
cmp
jbe
inc
movsb
aad
push
mov
in
xchg
movsl
dec
iret
add
repnz
aam
pop
aam
inc
mov
loope
jne
nop
pushf
mov
aad
pop
xor
test
mov
hlt
scas
add
pop
xor
jmp
scas
cmp
xor
jbe
sbb
fsubp
outsl
out
inc
bound
jns
cmp
popf
es
ffreep
cld
dec
xchg
sbb
sbb
sub
push
fbld
adcb
shlb
cmpsl
jmp
ja
daa
insl
hlt
inc
jg
pop
push
imul
fxch
out
out
sti
push
xor
les
lcall
sbb
iret
in
arpl
imul
sbb
rcll
push
int
das
jns
sub
pop
mov
loopne
sti
and
daa
mov
dec
push
mov
sbb
or
in
pop
jg
pop
xor
out
mov
gs
sahf
int3
pop
in
pop
xor
pop
and
aas
cmp
pop
enter
jne
rclb
aas
aad
jae
in
cld
mov
pop
in
cmp
adc
sbb
test
ret
push
mov
sub
jbe
scas
imul
js
sbb
insb
mov
fcmove
pop
sbb
fs
pop
repnz
out
mov
orb
and
ss
xlat
sub
pop
sbbb
ss
out
aam
cwtl
xchg
setno
test
mov
int3
mov
push
ret
dec
jg
jp
fcomps
fcmove
in
fsts
push
loopne
fldcw
sbb
aaa
push
lret
xchg
push
mov
addr16
aas
cmp
mov
jp
and
das
leave
xor
mov
push
jp
cmc
int
push
dec
inc
push
mov
imul
mov
pop
daa
das
jle
rolb
adc
out
jl
enter
pop
mov
pop
sbb
jg
fdivr
int3
fisttps
shll
insl
pop
rorl
aaa
xor
sub
xchg
add
or
adc
mov
jo
shl
repz
loope
pop
and
lahf
xchg
and
mov
jae
insl
pop
sahf
inc
gs
mov
push
ficompl
mov
neg
js
push
mov
pop
adc
dec
out
lods
in
mov
inc
push
testb
fwait
push
stos
popf
ret
adc
popa
js
imul
mov
das
lods
sub
mov
outsl
data16
push
or
repz
sti
mov
mov
pusha
ficoms
imul
mov
sbb
gs
cmp
cmpsb
cmp
iret
xchg
fldt
addr16
jmp
xor
push
std
lods
jmp
jnp
cltd
int
dec
call
or
cmp
fwait
or
jecxz
adcb
push
jo
adc
test
pop
push
and
mov
stc
sbb
adc
div
cli
adc
lock
jne
sub
adc
xchg
mov
lret
shr
inc
sbb
rcll
lods
cli
pop
and
pop
inc
cld
add
js
mov
xchg
insb
jecxz
mov
ds
pop
jmp
mov
es
cmp
cwtl
sbb
mov
mov
or
cli
mov
sahf
dec
jge
and
rolb
adc
insb
or
movsl
cltd
inc
and
rolb
aad
pop
mov
fidivs
in
ljmp
inc
jle
sub
and
or
cld
jg
aaa
jmp
int3
scas
sub
mov
xchg
pop
mov
or
insb
rclb
inc
iret
mov
adc
mov
jno
clc
jno
imul
jle
shll
and
lret
jle
mov
jbe
adc
xor
fsubs
sbb
nop
daa
cmp
xchg
mov
dec
ja
pop
insl
push
loope
aaa
sub
add
mov
out
pop
push
rep
out
sbb
add
aaa
mov
add
test
cs
rorb
insb
inc
sbb
ljmp
push
sub
das
repz
roll
in
rorb
dec
push
test
dec
aas
sub
mov
std
lods
add
or
or
jb
iret
cmp
jmp
fdivs
xor
pop
cmp
ds
inc
ficomps
lods
insb
push
xchg
push
or
scas
in
jmp
xchg
out
je
dec
or
mov
push
out
and
dec
xor
mov
xor
fdivp
mov
push
lret
push
dec
ret
xor
lock
or
mov
inc
bound
xchg
stc
fisubl
lret
adc
and
mov
xorb
ret
stos
add
stc
mov
bound
cmp
jns
repnz
in
aad
pop
js
les
and
jl
inc
mov
jns
cmp
ljmp
fiadds
inc
nop
test
pop
fnsave
push
jnp
fisubl
fwait
xchg
ljmp
sbb
out
arpl
pop
xchg
and
testb
push
adc
sub
xchg
mov
jmp
mov
pop
inc
lret
xchg
pop
mov
lock
and
cmpsb
sbb
std
mov
inc
fdivrs
test
cmpsb
xor
outsb
lret
mov
sbb
les
dec
jne
loopne
jno
test
test
push
loop
sahf
cmp
sub
fcmove
and
jecxz
negb
rorb
push
sub
jne
lret
dec
xor
and
popf
mov
mov
and
xchg
jb
shlb
stos
add
outsl
insl
sub
pop
mov
test
mov
out
inc
xor
jnp
mov
pop
mov
dec
jbe
and
inc
and
inc
pop
popa
sbb
mov
push
sub
adc
pop
fisubrs
cmovns
rorl
aas
mov
leave
pushf
ret
or
fisubrs
mov
mov
scas
and
fildll
xorb
bound
adc
mov
sbb
outsl
xchg
enter
stos
jnp
fstpt
popf
in
adc
push
pusha
mov
or
out
dec
out
push
sbb
mov
scas
mov
cmp
jmp
mov
std
loopne
adc
int
mov
xor
mov
cmc
mov
mov
mov
xor
leavew
fdivrs
cmp
mov
dec
leave
ds
pushf
lahf
insb
lods
fwait
dec
jmp
nop
aam
add
test
push
outsl
adcl
add
stos
inc
fs
adc
enter
pushf
out
inc
jmp
sbb
icebp
outsb
loop
pop
fcoml
stos
daa
pop
or
sub
pop
xchg
mov
jl
xorb
test
mov
jbe
xchg
into
fwait
pop
push
fbld
mov
lods
xchg
mov
xor
sub
shll
sub
sti
loope
and
sbb
hlt
xor
into
push
mov
rcl
scas
cmp
loop
pushf
cmpsb
hlt
inc
xchg
enter
xchg
movb
repnz
ds
sarb
lock
cmpsl
pop
shlb
or
aad
cltd
es
clc
add
xor
mov
xor
andb
jo
mov
add
lahf
ds
mov
mov
stos
push
data16
pop
mov
adc
xor
setae
jno
in
mov
inc
mov
adc
mov
jle
lock
int3
mov
mov
xchg
jmp
mov
repnz
sahf
xchg
rcrb
js
mov
jp
in
mov
into
push
xlat
xor
xor
sti
inc
adc
mov
mov
lret
jmp
loope
xor
add
lds
jne
hlt
mov
aad
jmp
inc
xchg
filds
insb
jp
imul
icebp
jno
stos
inc
or
rorl
xchg
lret
mov
pop
loop
xchg
ja
ds
lret
cmc
or
dec
lods
popa
jge
and
movsl
sbb
add
daa
and
push
inc
pop
mov
jns
dec
nop
add
mov
insb
or
pushf
loop
xchg
jbe
call
add
paddsw
inc
lods
ljmp
jnp
dec
or
or
daa
dec
repnz
gs
dec
std
orl
sub
mov
lahf
mov
push
pop
fnsave
iret
fwait
inc
leave
jns
xchg
dec
mov
and
dec
rcr
or
push
adcb
dec
aam
ror
out
push
cmp
dec
mov
mov
aas
gs
pop
cmp
mov
addr16
fcomps
sti
pusha
jle
xchg
xchg
inc
mov
ret
jo
je
lods
call
sbb
call
dec
icebp
xor
cmp
xchg
pop
lods
sub
xchg
fidivs
push
fs
mov
and
add
cs
negb
adc
jae
cmp
add
and
insl
leave
sbb
ret
push
adc
and
mov
push
fidivrs
int3
add
and
and
stos
pushf
jns
imul
inc
sub
mov
cld
popa
push
add
aam
cltd
lock
cmc
mov
sub
addr16
arpl
out
inc
jge
data16
out
sub
inc
lret
insb
fsubrl
pop
and
push
outsl
adcb
ret
in
stos
and
pop
daa
aam
cmpsb
daa
inc
dec
ficomps
adc
sbb
andb
mov
in
pop
push
jecxz
inc
cli
mov
pop
cwtl
jae
jp
loopne
test
aaa
pop
into
lock
or
inc
inc
shrb
add
loope
int
out
mov
push
mov
add
fisubl
mov
and
mov
fsubrl
push
add
dec
add
mov
jp
mov
pop
jl
and
lock
sti
mov
xlat
xchg
dec
push
mov
jb
mov
dec
xchg
clc
jmp
cmpsl
lahf
ja
mov
mov
in
test
jl
mov
pop
aad
cmpb
mov
push
repz
clc
stos
pop
cmp
out
cli
jbe
nopl
ficomps
xor
ret
lcall
jno
jo
scas
pop
rorl
ret
cmp
int3
iret
cmp
mov
ds
jns
fisttpl
fsubrl
cmp
pop
xchg
fildll
popa
in
mov
stos
xor
inc
and
insl
outsb
decl
ffree
leave
and
mov
inc
test
test
incl
mov
push
mov
cwtl
jo
xor
ja
or
pop
sbbb
adc
sti
in
sub
sbb
mov
aas
cmp
adc
dec
leave
and
lcall
cli
push
icebp
xchg
pusha
icebp
jmp
out
iret
arpl
lds
or
pop
sub
pop
sti
ja
in
xor
hlt
pushf
mov
mov
hlt
sub
or
lret
pop
inc
shrl
inc
loopne
jecxz
aaa
xchg
pop
repz
in
adc
add
cli
sub
push
mov
ror
jb
out
xchg
ja
and
mov
push
mov
xor
xchg
jb
cmp
add
gs
divb
jns
push
sub
add
xor
nop
xchg
jae
xchg
repz
icebp
loope
lahf
fwait
adc
mov
push
aad
js
mov
xchg
bound
ds
jno
or
in
or
and
mov
push
mov
cmp
xor
mov
cld
jg
sahf
dec
xchg
std
setb
stos
inc
dec
xchg
add
dec
xor
adc
enter
mov
je
fwait
loopne
or
jne
rclb
xchg
mov
cmp
mov
inc
or
dec
lcall
repnz
test
jae
sbb
sub
ss
pushl
test
jecxz
aam
push
outsl
push
xor
mov
pop
cmp
jmp
dec
or
scas
data16
out
hlt
lods
sub
ds
lret
lcall
pushf
loop
mov
inc
not
cmp
fs
sub
outsl
daa
or
mov
lret
rcrl
mov
sub
clc
mov
call
pop
fsubrl
leave
add
mov
in
pop
xor
and
jo
sub
scas
int3
scas
xchg
rcrl
pop
xor
loop
es
lods
sbb
mov
dec
pushf
aas
xor
movsl
int3
cmc
stos
pushf
out
in
leave
push
xchg
cmp
xor
leave
lds
sti
mov
sbb
out
or
scas
dec
pop
fdivr
test
aaa
cwtl
sbb
sub
mov
pushf
andb
lcall
mov
push
inc
mov
mov
and
stos
mov
adc
popa
pushf
pop
pop
cmp
icebp
xchg
adc
mov
pop
jo
mov
mov
mov
inc
jecxz
cmpb
cwtl
loope
ljmp
xchg
fildll
out
mov
xor
cwtl
out
cmp
mov
and
loope
in
mov
adc
dec
rorb
mov
xchg
fildll
inc
repz
int3
aad
dec
inc
out
daa
movsl
sahf
popf
push
js
lods
jno
int3
mov
std
xor
or
jno
jb
aad
cmpl
loop
popa
mov
outsl
and
sbb
imul
cmp
sbb
xor
shll
pusha
out
out
sub
movsb
cmp
test
mov
jnp
getsec
and
dec
and
int
jno
and
jg
inc
inc
mov
fsubrp
addb
dec
fistpl
push
verw
ja
jbe
dec
scas
mov
mov
xor
mov
push
adc
sahf
mov
loopne
or
mov
sbb
fistpll
fisttpl
or
inc
pop
lock
ret
or
add
or
movsl
mov
pop
loope
add
adc
cmp
pop
push
test
jge
mov
fisubrl
sbb
and
mov
xor
push
push
inc
frstor
insb
fisubrl
addb
sub
in
adc
loop
xlat
insl
frstor
mov
pop
xchg
mov
icebp
mov
mov
pusha
or
dec
xchg
lret
push
mov
repz
mov
mov
out
imul
inc
mov
push
js
cmc
and
add
int
mov
sub
out
out
hlt
add
xlat
cmc
cmp
test
daa
divl
sahf
or
std
sar
or
in
mov
testl
and
in
mov
jmp
test
cmp
or
sub
mov
dec
mov
jp
int
pushf
sahf
sbb
aad
mov
xchg
test
dec
cs
mov
sahf
push
inc
fsubrp
pusha
in
fistps
je
pop
mov
jl
int
xchg
arpl
mov
mov
ds
inc
add
push
cmpsb
dec
rorl
pop
mov
mov
rcr
lods
inc
mov
or
push
pusha
jae
addr16
jns
es
cltd
adc
into
xor
movsb
jae
dec
jp
movsl
dec
adc
hlt
sub
incl
lret
pop
push
sub
xchg
dec
icebp
minps
cli
pop
pusha
in
pop
out
or
sbb
pushf
inc
cld
sbb
mov
xchg
repz
clc
out
mov
fisubrs
test
fxch
popf
fstpl
and
addl
inc
mov
xchg
rcl
std
and
push
int3
addr16
mov
mov
mov
aaa
sub
mov
mov
mov
aad
dec
mov
jl
fnstsw
sti
test
cmpsl
and
outsb
pop
adc
stos
dec
push
int3
in
xor
in
inc
mov
jns
cmpsl
dec
fildll
push
in
inc
scas
jbe
subl
mov
jbe
fisubrs
push
adc
push
inc
or
add
inc
mov
lahf
outsb
mov
push
xchg
faddp
dec
push
mov
call
mov
sbb
fldt
inc
push
mov
out
xchg
movsl
add
mov
movsb
inc
stc
les
push
inc
mov
daa
xorb
mov
push
std
bound
popf
and
cmp
fcoml
sbb
xchg
or
sub
jle
shrl
addr16
lods
or
adc
xlat
pop
sbb
lock
imul
sbb
xchg
in
cltd
shl
cmp
push
xor
push
mov
fsubp
int
sbb
or
push
clc
in
pusha
mov
sub
rclb
lock
sbb
adc
in
test
in
sub
sub
sub
mov
pop
icebp
rep
push
dec
xor
pop
dec
pop
enter
xor
sbb
and
cmp
scas
or
insl
std
adc
cmp
std
ljmp
ljmp
repnz
stc
xlat
mov
testl
fsts
pop
and
cli
rorb
rcrl
mov
xor
in
pusha
rclb
shll
sub
aaa
push
xor
outsl
dec
rcll
imul
in
cs
push
cmp
lea
test
shr
jge
loope
hlt
stc
insb
cli
ret
fpatan
arpl
pusha
jbe
pop
subb
xchg
sub
inc
xor
test
aaa
push
mov
int
outsl
push
ret
fdivrs
and
dec
cmpsl
xor
arpl
mov
gs
push
sbb
push
jae
divps
mov
xchg
int
mov
imul
or
add
ja
in
pop
cltd
fcoms
out
inc
and
push
pusha
fdivrl
scas
xor
mov
stos
pop
fsubl
mov
jae
addr16
aad
loop
push
cli
or
std
es
push
jb
cmc
icebp
sbb
fs
arpl
cmpsl
shll
inc
and
hlt
xor
jl
ds
adc
push
les
lret
cmp
pause
and
lods
xor
pop
pop
dec
out
roll
jne
xchg
loope
rcrb
or
popa
iret
push
lret
dec
fucomp
shl
xchg
lahf
add
inc
das
pop
inc
loop
gs
cmc
dec
movsb
movsb
out
sub
std
fcmove
sbbl
pop
mov
dec
inc
jns
inc
cltd
push
inc
loope
cs
pop
cli
imul
popa
sbb
jp
jmp
mov
adc
shr
sub
mov
xchg
out
cmp
lret
and
jbe
inc
add
mov
rolb
or
ds
and
loopne
mov
pushf
daa
out
int
in
adc
mov
shlb
xchg
loopne
leave
add
ror
fistpl
subb
cmp
ret
out
sub
cmp
rol
and
pop
out
dec
es
fldt
cmc
or
mov
and
out
test
jl
jnp
div
inc
es
movlps
enter
cmpsb
stos
inc
push
fistpl
mov
out
mov
jmp
mov
add
aaa
repnz
mov
clc
das
xchg
lret
xchg
test
repz
fcomps
loopne
push
in
jns
aas
aas
pop
push
push
scas
jns
insl
and
push
push
hlt
push
push
jne
outsb
or
insb
push
push
sbb
jne
inc
jae
jmp
inc
mov
sub
das
or
push
call
stc
xchg
dec
lock
or
lret
jo
movb
push
insb
sbb
js
insl
stos
mov
std
or
pop
scas
repnz
je,pn
or
push
mov
jne
mov
pop
mov
repz
adc
mov
push
or
lahf
arpl
inc
iret
gs
shll
add
arpl
jmp
jno
test
adc
xlat
cmpsb
pop
mov
adc
xor
push
mov
shrl
fcomps
inc
or
das
mov
adc
push
push
adc
cmp
lea
mov
icebp
in
xchg
repz
and
and
arpl
xchg
clc
dec
jmp
push
ljmp
jle
cmc
dec
push
xchg
sbb
pop
inc
outsb
orl
nopl
xchg
gs
outsb
or
jmp
sbb
loop
mov
sub
adc
pop
cmpsb
mov
out
or
add
fbld
mov
movsl
call
push
adc
mov
fcoms
mov
mov
lahf
push
pop
mov
inc
push
ret
fildll
testl
pusha
xor
jmp
std
push
dec
xchg
addr16
jnp
inc
cs
jmp
enter
dec
adc
leave
dec
out
adc
mov
xchg
mov
mov
ds
cmp
sti
cmpsl
insl
dec
jmp
push
sub
inc
aaa
jae
leave
sub
pop
loop
fdivrs
inc
lret
mov
call
into
les
push
push
stos
pusha
lods
lahf
xlat
ljmp
in
mov
call
push
adc
inc
push
enter
mov
je
lea
inc
cmp
mov
insl
cmc
mov
ja
pusha
jmp
cmp
jb
stos
std
xchg
test
push
sbb
mov
fucomip
test
xchg
arpl
mov
insb
shll
mov
cmp
ss
or
movsb
fisttpl
movsl
add
inc
mov
dec
imul
dec
add
pop
mov
int
sbb
pop
popf
jp
in
adc
push
jge
stc
std
jp
in
cmpsl
jo
mov
or
mov
fs
dec
and
dec
lea
frstor
adc
repz
test
dec
rcrl
push
sti
lock
or
mov
fwait
out
sar
jge
adc
cmp
xchg
out
imul
orb
and
jbe
adc
adc
mov
or
movsl
mov
jbe
sub
sbb
mov
pop
push
clc
or
lcall
stos
imul
lods
mov
mov
push
push
scas
in
sbb
mov
loopne
pop
xor
mov
bnd
mov
int
jmp
test
push
sbb
pop
jecxz
decb
push
jo
mov
sub
shl
rorb
call
xor
mov
xchg
outsb
clc
pop
jmp
js
dec
daa
nop
or
add
lcall
or
ss
loope
lea
sbb
es
and
aad
mul
push
adc
mov
mov
sbb
ret
cmp
in
add
pusha
adc
cmpb
sub
shrb
push
mov
xchg
int
into
push
or
or
or
dec
lret
or
aad
push
inc
push
adc
rcll
jmp
and
call
mov
or
out
jp
lret
jae
pushf
loopne
add
adc
xchg
cmp
test
jne
xchg
dec
shrb
cmovnp
fs
push
clc
jno
add
and
dec
sahf
mov
imul
mov
sub
stc
and
dec
sub
mov
repnz
aas
push
lock
inc
mov
cmp
cli
dec
cmp
ret
pop
inc
mov
push
jae
decl
ss
fdivrs
pop
jae
push
jge
mov
or
rcrb
cmpsl
lret
adc
xor
lcall
shr
mov
pop
push
rcl
pop
add
and
rorl
xchg
mov
cmp
mov
xlat
dec
jnp
xor
lret
mov
xor
int3
das
outsl
cmp
jle
inc
jno
popf
fstps
mov
mov
lahf
sub
sbb
push
mov
xchg
jg
aaa
mov
mov
fwait
xor
sub
daa
js
mov
mov
lcall
fucomip
sarb
cmp
mov
lods
xor
adc
xor
mov
or
mov
add
imul
mov
frstor
pop
add
push
mov
or
mov
and
dec
imull
inc
mov
xchg
adc
mov
fwait
mov
cld
dec
or
fildl
popf
add
sbb
mov
ret
add
xchg
mov
jecxz
fs
mov
mov
mov
push
push
jbe
push
pushl
mov
fdivrs
xor
xor
xor
movsb
xor
cmp
dec
sub
dec
fwait
ja
inc
arpl
iret
sbb
enter
jle
push
out
push
mov
leave
shrl
int3
and
cmc
inc
mov
pop
xlat
gs
lcall
xchg
sub
fcmovnu
mov
adc
js
int3
lods
sbb
in
ljmp
pop
shrl
dec
push
cmc
pop
cmp
data16
loop
ljmp
jbe
jns
ss
cmc
push
cmp
or
push
jb
mov
stos
mov
adc
repnz
je
mov
addr16
xor
sbb
or
pushf
dec
mov
loopne
test
xchg
xor
ret
sub
subb
mov
stc
xchg
movsl
sub
add
pop
cmp
and
push
add
pop
mov
adc
popf
rcl
cwtl
and
xor
fisubl
jbe
push
push
mov
mov
adc
fnstenv
mov
movsb
loope
jmp
inc
adc
std
push
inc
sbb
test
pop
addb
scas
lcall
scas
lret
cmpsl
es
movsl
loope
in
mov
pop
push
dec
sbb
push
ss
inc
iret
pop
push
xchg
rclb
or
decl
fiaddl
pop
push
mov
lods
pop
push
or
pop
jge
or
fs
loopne
sbb
js
sub
push
lahf
xchg
popa
lahf
clc
insb
movsl
cmp
leave
mov
out
cwtl
or
enter
dec
pusha
ds
push
scas
sub
call
pusha
push
outsl
inc
jno
shr
dec
jne
clc
stos
push
jnp
popa
jecxz
movsl
lods
bound
jnp
pop
repnz
leave
xchg
scas
jg
repnz
mov
mov
repnz
aas
xchg
push
int3
mov
daa
mov
mov
out
js
xchg
sub
jb
rcrb
push
push
mov
rcrb
adc
inc
ret
fucomi
push
or
aam
dec
push
mov
movsl
cmpsb
inc
sbb
sahf
push
mov
rol
adc
add
stc
leave
sbbl
jb
pop
mov
jge
fstpt
add
loope
stos
shrl
add
add
sub
xor
ja
push
decl
sahf
fiaddl
into
inc
cld
adc
adc
xchg
mov
and
pop
enter
push
pop
stos
sbb
jb
push
jle
stos
les
push
ror
incb
pushf
jp
cmc
scas
imulb
fildll
xchg
push
nop
jnp
mov
fiaddl
cmp
ss
cmpsl
adc
js
mov
pusha
push
cmp
sahf
push
pop
cli
dec
pop
mov
mov
sahf
dec
insb
inc
push
test
add
xor
jecxz
imul
into
fmull
adc
dec
jbe
dec
int
out
add
daa
pop
and
pushf
add
jl
mov
movsb
inc
dec
lods
xchg
dec
js
fidivrs
mov
gs
mov
mov
xchg
dec
jge
enter
pusha
jecxz
sti
or
in
add
mov
dec
pop
repz
jae
xchg
imul
mov
rcll
into
pause
dec
popa
dec
fbstp
test
orl
push
stos
and
and
push
int3
xor
pop
loope
xchg
sub
shl
out
out
lea
mov
fidivs
xchg
and
pop
pop
jno
push
pop
data16
mov
in
cmpsl
inc
test
push
push
in
imul
lcall
jge
mov
ror
jp
jb
inc
xor
insl
loop
sub
inc
jno
aas
xor
pop
cmc
popf
lret
fcmovb
inc
arpl
mov
enter
scas
int3
jno
roll
aad
xor
mov
mov
adc
mov
outsb
xchg
adc
stos
cld
hlt
sub
xchg
push
sub
xor
mov
out
xchg
daa
outsb
ljmp
sahf
cmp
ret
mov
fstpl
inc
adc
jo
fcoml
shrl
lahf
jnp
sbb
inc
scas
ficomps
in
out
push
pop
rcl
or
adc
mov
addb
mov
or
fstpt
scas
inc
cmpsb
mov
cmp
jb
lret
sti
sub
xchg
inc
ret
cld
sub
sbb
cmpsl
or
jae
add
out
push
adc
push
mov
push
out
cltd
outsl
jbe
rorl
pop
lods
call
sbb
add
jbe
leave
cmc
arpl
xchg
and
sbb
jmp
ret
inc
mov
xchg
and
btr
stos
xchg
ret
dec
into
mov
insl
push
mov
nop
xchg
add
aaa
lods
sub
pop
insb
jle
jle
push
inc
mov
cmc
pop
push
jecxz
mov
mov
push
test
cs
fs
xchg
je
or
sbb
adc
adc
xchg
aas
mov
inc
push
mov
divb
xchg
inc
dec
aam
repnz
sub
data16
rcl
mov
xor
movsb
andb
or
sti
ss
imul
imul
scas
lahf
rcrl
jne
jge
outsb
notb
push
mov
test
roll
fmull
int
jecxz
jmp
int
and
pop
xor
add
aaa
sbb
mov
jmp
pop
int3
fcmove
xor
sbb
mov
jmp
cmp
notl
jbe
pop
ja
lea
mov
repz
mov
sbb
test
mov
push
inc
mov
rep
aam
jmp
xor
inc
jo
jle
aam
in
scas
or
mov
int
in
popf
out
cltd
xor
outsb
loop
or
sarb
jbe
mov
lods
jne
push
inc
fsubrl
paddusb
inc
ret
test
out
ret
jmp
test
pop
pop
or
insb
popa
loop
movsl
dec
pop
sbb
and
into
mov
or
xor
data16
mov
bound
add
mov
mov
sbbb
pop
mov
cmpsb
inc
jg
andl
add
aaa
imul
bound
insb
adc
inc
and
push
inc
out
adcb
push
xor
inc
mov
int
aaa
jecxz
xlat
fildl
lds
cmp
ljmp
pop
nop
xchg
and
adc
inc
pop
xor
jns
cmp
add
adc
dec
and
stos
mov
jo
xor
jne
repz
loop
dec
or
insb
into
fdivrl
and
jl
jns
fstl
jle
push
push
mov
xchg
adc
mov
adc
push
ja
or
lock
cmp
inc
cli
gs
xchg
sub
call
lea
and
xor
arpl
sti
shl
adc
negl
leave
leave
imul
fstps
xchg
adc
fsub
sub
push
add
loopne
add
dec
inc
aaa
mov
adc
stos
fstp
and
mov
je
inc
mov
dec
pop
aas
jmp
int
subb
outsb
cmp
lcall
jmp
xchg
sub
lret
pop
push
testl
jo
mov
adc
jo
xlat
imul
jno
sub
jb
lock
out
adc
fwait
sub
lret
addl
fsubs
fdivr
jae
insb
orl
cld
test
icebp
orb
or
jnp
int
ret
scas
xor
mov
mov
outsb
jge
sub
sub
xor
cli
ja
es
xor
adc
pushf
testb
lret
ror
movsb
fistl
mov
fisttpll
imul
pop
lret
pop
add
in
lret
test
sbb
out
sbb
mov
les
jmp
pop
les
pop
dec
int
int3
jp
rcrl
loope
imul
add
jnp
stos
adc
jne
insl
repnz
mov
jl
sbb
mov
and
mov
pop
mov
mov
out
faddl
flds
out
in
add
rcll
jl
scas
mov
addl
clc
mov
pusha
sub
lock
in
negl
xchg
lods
inc
pop
movb
movsb
mov
jne
loopne
mov
inc
cmp
push
ret
out
cmpsb
inc
and
aaa
andl
push
sahf
cmpsl
dec
or
add
fcomp
cmc
lods
xchg
aas
mov
push
cmp
push
out
sub
jno
mov
mov
pop
dec
adc
mov
es
in
sbb
push
outsl
xchg
lret
mov
pop
add
xchg
out
inc
fildll
mov
or
scas
push
mov
sbb
clc
mov
in
rolb
stos
nop
loop
int
sarb
mov
sbb
fwait
xor
xor
fidivl
pop
or
mov
cmovp
popa
add
lods
icebp
mov
pop
shll
jns
adc
sbb
leave
arpl
movsb
sub
mov
mov
lea
push
popf
dec
leave
lods
jnp
and
int
xchg
xchg
mov
cmc
aas
mov
lea
or
push
das
icebp
pop
sub
xorb
pushf
jmp
add
insb
push
dec
iret
mov
js
rclb
rolb
dec
inc
mov
test
pop
xchg
fwait
cmp
into
pop
out
cmp
imul
lret
leave
ret
loopew
pop
adc
mov
jb
inc
cmp
mov
test
and
mov
xchg
movsl
out
jne
imul
cmp
shlb
fdivrs
sbb
jle
cld
popf
push
push
cmpsb
xchg
pop
sbb
ja
dec
push
sbb
cmc
fisubs
mov
add
and
mov
mov
dec
or
sbb
sub
daa
cmp
adc
add
sub
and
jg
sbb
int
ret
std
lcall
push
push
in
push
push
xchg
xlat
repz
push
out
push
insb
mov
jecxz
pop
push
and
ret
xor
mov
push
mov
out
loop
jp
ret
stos
push
jge
mov
mov
pop
out
sbb
add
dec
inc
inc
dec
les
cmp
insl
push
dec
pushf
jnp
adc
add
mov
xor
jae
stc
fisubrs
pop
push
mov
mov
and
testl
ds
divb
mov
popa
xchg
inc
sbb
in
inc
sti
mov
addb
mov
sbbb
mov
orl
pop
imul
lcall
mov
rcr
out
cmp
rorb
mov
fcom
mov
in
pop
outsb
ja
mov
mov
outsb
xchg
mov
xor
pop
xchg
and
bound
mov
cld
dec
stos
xchg
movsb
mov
jbe
shrl
sbb
rclb
popf
leave
lock
mov
sub
xchg
cld
xor
rcll
inc
adc
xchg
out
add
adcl
movsb
pop
mov
or
test
repz
and
in
cmpsb
sahf
pop
into
test
sub
pop
int
sbb
sarb
xchg
push
pop
pop
or
imul
sbb
fwait
testb
insb
movb
xor
cld
mov
sti
cs
dec
rol
in
jne
pop
lea
shrb
xlat
adc
pop
pop
push
jl
in
popa
aas
xor
mov
ret
fstpt
test
roll
cmpsb
dec
push
inc
mov
fadd
lret
jb
sbb
shl
dec
sbb
or
inc
xchg
mov
cld
packssdw
add
mov
dec
push
mov
fstpl
test
inc
xor
pop
les
pushf
push
jno
push
ja
mov
push
dec
js
mov
adc
inc
scas
dec
mov
test
sti
push
call
mov
jmp
mov
xor
pusha
inc
outsb
fnstenv
xor
fdivrs
popa
add
jle
int3
fwait
pushf
aad
sbb
pcmpgtd
out
jno
cmp
movsl
xchg
pushl
movsl
cmp
xor
leave
mov
lods
rorb
mov
es
in
push
ja
test
mov
stos
movl
cmp
movsb
daa
icebp
sbb
mov
nop
lcall
sarl
adc
sahf
icebp
gs
scas
inc
mov
xor
into
fiaddl
and
ficompl
sub
ds
aad
iret
jmp
pop
outsb
push
sarb
mov
pusha
or
mov
aas
xor
sbb
mov
mov
or
or
pop
std
pop
jo
xchg
cli
dec
mov
movsb
mov
addb
push
mov
jle
push
cmc
adc
jns
pusha
push
mov
push
xor
xor
xchg
shlb
jno
idiv
addr16
xchg
cmp
lock
mov
xor
and
jg
fisubl
mov
dec
mov
and
mov
es
lods
mov
popf
sbb
mov
js
mov
fs
jmp
daa
outsl
rcrb
mov
ret
enter
aad
shlb
mov
cmp
test
add
sub
jmp
adc
dec
aaa
out
jg
jbe
push
dec
dec
fs
push
int
test
lret
and
js
imul
nop
or
aas
push
aas
repz
stc
shrl
xchg
lods
cmp
dec
fs
mov
leave
call
fisubs
fxch
js
mov
pop
cmp
mov
xor
jge
jg
and
inc
sbbl
mov
mov
sub
aas
mov
roll
call
lods
sub
jp
pop
mov
ds
fistpll
dec
pop
jp
stos
mov
sahf
push
push
ljmp
dec
pop
xchg
inc
cmp
cmp
push
imul
pop
jge
out
adc
xchg
push
gs
ret
pop
jmp
add
xorb
xor
in
pop
xchg
sbb
rcrl
repz
pop
jmp
cwtl
jle
adc
and
bound
adc
xchg
out
in
test
gs
cmp
jmp
stc
ss
push
int3
outsb
dec
cmp
sub
loope
es
shl
ret
sti
sbb
xchg
fstpl
fcoml
xchg
and
subl
subb
mov
int3
lds
fistpl
xor
pop
lods
mov
int3
push
es
or
jmp
es
iret
je
inc
jle
jns
test
mov
mov
jle
add
loop
shrb
xchg
dec
xor
in
popf
sti
lds
out
fisubrl
jno
mov
add
mov
jne
sbb
lock
push
lahf
push
pop
sub
add
rcll
lret
inc
hlt
cmp
inc
fsubrs
mov
jp
pop
mov
aam
cwtl
enter
inc
sbb
xor
and
ljmp
out
and
out
mov
in
repz
push
dec
xor
mov
es
sub
shrb
and
shll
mov
orb
lcall
jecxz
xchg
inc
aas
adc
jno
mov
jne
ret
mov
orb
push
ss
jne
popa
enter
fstl
sbb
add
aad
pop
and
and
iret
ljmp
arpl
aaa
pop
rcr
lods
dec
inc
fistl
loopne
in
inc
imull
idivl
pop
and
fmull
dec
xchg
or
cmp
pop
bound
gs
ljmp
xchg
lcall
push
mov
arpl
dec
test
sarl
dec
mov
and
xor
pusha
mov
pushf
xchg
aam
cwtl
sbb
sub
xor
adc
dec
mov
pushf
fs
adc
stos
stc
stos
cmp
adcb
inc
xor
mov
add
ret
or
stc
mov
jp
jp
nop
scas
subb
pop
scas
xchg
push
fstp
mov
and
lock
cmp
loop,pn
cmp
in
xor
es
sbb
fcmovne
sbb
adc
dec
mov
fldenv
in
int3
dec
repnz
lret
gs
insl
mov
lret
dec
adc
and
icebp
and
test
in
std
pop
ja
iret
enter
mov
test
or
les
xor
mov
pop
cmp
mov
cwtl
test
dec
dec
jnp
mov
mov
dec
cmpl
sbb
xchg
push
nop
test
sahf
addb
fsubrs
cmp
inc
mov
xchg
mov
push
test
cmp
dec
subl
and
jecxz
cld
xor
adc
pop
and
addr16
mov
arpl
mov
repz
data16
loop
pusha
sahf
cmpsb
fbstp
pop
push
outsb
icebp
dec
mov
data16
stos
or
sti
out
mov
jecxz
pop
mov
and
aas
sti
adc
stos
inc
add
fnstcw
mov
filds
stos
cs
int
xorl
or
dec
movsb
aad
add
dec
out
sbb
sbb
and
xor
push
lret
jecxz
cmp
push
aas
sbb
xchg
orb
lret
jmp
mov
clc
in
inc
sub
outsb
and
clc
xor
jmp
xchg
or
mov
or
les
and
shll
pop
test
lds
pop
mov
gs
cld
cmp
daa
shlb
push
cmp
xchg
inc
mov
sbb
xchg
faddp
or
xorl
pop
in
ficoml
xor
xchg
pop
mov
je
xor
dec
xchg
push
or
pop
lret
cltd
jge
outsl
addb
adc
addr16
pop
movaps
jl
aaa
mov
pop
jp
sbb
add
and
adc
dec
shll
xchg
into
mov
pop
sbb
mov
ds
jge
cwtl
pop
inc
dec
sti
int
fdivrl
cmp
sti
xchg
inc
loope
adc
imulb
pop
ret
mov
sbb
jle
test
xor
hlt
push
jg
imul
sbb
dec
mov
lahf
dec
in
xchg
cwtl
popl
pushf
ja
or
rolb
ret
mov
pusha
push
mov
fcoml
xor
or
rolb
test
lds
xchg
push
dec
pusha
jno
std
ffreep
sbb
xor
mov
adc
imul
rcrl
jno
sbb
fldcw
xchg
in
cmp
or
lods
xchg
push
or
scas
jl
repnz
lahf
std
test
mov
sub
repz
loope
movsb
or
xchg
adc
add
inc
xor
pop
mov
push
xchg
mov
sarb
inc
jmp
popf
pop
pop
pusha
sub
inc
add
mov
idiv
je
pop
repz
loope
test
xor
push
dec
xor
adc
jnp
jb
and
stc
data16
push
mov
adc
fs
shlb
mov
add
cmp
jns
rclb
mov
fwait
add
dec
pop
leave
cmc
clc
lods
popf
notb
ret
outsl
iret
in
enter
push
loope
lea
xlat
into
andb
jge
icebp
js
inc
add
or
out
cltd
or
loope
outsl
movntq
mov
fmul
xchg
out
mov
ja
gs
mov
into
push
mov
incb
or
or
andl
mov
adc
mull
lds
jo
pop
lcall
lret
push
pushf
fcoml
pop
inc
in
lods
xchg
lahf
rolb
dec
movsb
sarb
xor
push
fcom
xor
rcrl
scas
add
cs
test
cmp
icebp
xchg
mov
movsb
shl
sub
std
mov
test
cwtl
test
xchg
mov
inc
cmc
push
fdivs
out
cmpsl
or
cmp
add
test
std
mov
jo
xchg
mov
movsl
lret
roll
and
mov
cmpsl
test
imul
andb
loope
sub
lock
in
sub
sbb
cwtl
push
lret
mov
cld
and
pop
push
add
adcb
cmp
jo
cmc
testl
loop
add
sbb
rolb
in
sbb
sbb
xchg
or
mov
jmp
std
and
cmp
je
fwait
aad
and
in
or
push
adc
jae
andb
shrb
sub
mov
push
pop
mov
mov
ds
hlt
dec
outsb
jg
push
xor
mov
pop
dec
lods
mov
cmp
inc
and
or
test
push
cmp
shlb
mov
into
xchg
shll
jle
xchg
pop
aad
cmpsb
data16
ficoml
jle
out
jbe
shrl
mov
stos
and
xchg
xchg
add
fsub
cli
add
pop
je
sub
call
mov
push
out
inc
lock
jbe
xlat
cld
sbb
dec
inc
jecxz
adc
jnp
outsl
movsl
pop
mov
adc
or
aam
int3
iret
ret
add
pop
pop
or
enter
gs
in
dec
ret
ret
ret
xchg
ja
mov
imul
int
ja
imul
inc
xor
inc
lods
aad
add
adc
pop
dec
dec
xor
mov
cmpsl
pop
push
pop
and
fistpl
mov
pop
sbb
adc
push
shl
test
dec
imul
dec
fistpl
mov
dec
mov
sbb
ret
fildll
or
sub
ret
fmull
or
cmp
xchg
mov
xor
xor
cs
adc
lea
outsl
xlat
cli
mov
mov
stc
pop
pop
ret
jmp
insb
fmull
pop
cli
mov
sbb
push
mov
mov
or
cmp
mov
add
leave
cltd
push
mov
jl
and
xor
jnp
mov
lcall
xor
inc
adc
inc
adc
shrl
mov
jbe
xor
cmpsl
mov
jge
fwait
xchg
movsl
xchg
jnp
and
inc
pusha
pop
in
cli
adc
stc
lods
push
inc
and
sti
cmp
jno
xchg
stos
mov
and
pop
popa
add
imul
sbb
inc
xchg
aad
leave
pushf
inc
adc
fstps
sbb
jo
hlt
lods
aas
insb
pushf
add
cmpl
sub
test
mov
push
lods
mov
xchg
inc
dec
inc
addr16
lods
xor
stos
sbb
add
push
fdivl
in
fs
inc
adc
insb
cli
sarb
decb
iret
add
ja
jl
jno
or
hlt
push
cmpsb
stos
mov
insl
push
jp
aas
mov
loop
xchg
inc
aam
xchg
cmp
bound
fdivrs
test
sub
sub
rorl
ljmp
scas
sbb
pop
or
jno
movsl
je
cld
js
inc
xor
pushf
or
cmpl
sub
adc
jp
test
hlt
shrb
mov
sahf
lock
sti
xchg
lahf
sub
jns
cmpsb
rcrl
adc
icebp
stc
jmp
mov
jns
mov
dec
jns
add
or
push
and
mov
subl
jo
loop
add
and
xchg
jae
icebp
shrb
jmp
ja
movsb
sbb
dec
mov
mov
cmp
rcll
and
jecxz
int3
cs
cltd
mov
cmp
adc
or
cmp
add
sub
lcall
pop
xor
repnz
pop
xchg
scas
adc
push
mov
ss
mov
in
pushaw
or
out
jge
and
bound
imul
push
mov
mov
aam
push
pop
nop
faddl
stos
add
xchg
imul
mov
add
jo
leave
pusha
mov
cmp
pop
fld
cli
mov
mov
hlt
aaa
mov
jl
mov
mov
loope
aas
mov
dec
mov
or
cmpb
repz
insb
adc
pushf
hlt
in
enter
xchg
rorl
and
adc
push
jo
sbb
fcoml
push
rcr
int
mov
in
pop
and
je
shll
mov
subps
in
and
xchg
fcoml
scas
lods
ds
xchg
mov
das
ret
jl
loopne
push
cmp
add
scas
das
or
pop
sub
lahf
push
jne
mov
cmpsb
scas
xor
and
daa
shll
repz
push
aaa
lea
repz
xor
cwtl
imul
push
nop
je
mov
arpl
sti
xchg
adc
fisubl
xor
clc
add
adc
inc
xchg
jle
movsb
dec
into
xchg
or
idivb
push
push
mov
arpl
sub
int
mov
lods
adc
push
movsb
lret
mov
lret
movsl
jnp
gs
push
mov
push
xor
xchg
data16
daa
xchg
fs
aas
das
mov
xor
inc
neg
adc
bound
cli
test
xor
sbb
mov
imul
bt
movsb
mov
dec
jbe
xor
or
mov
mov
stos
jecxz
cmp
cmpsb
push
imul
lods
faddp
mov
mov
sbb
lahf
rclb
sti
mov
lds
jne
mov
out
cmp
out
ss
movb
sbb
cmp
sbb
loopne
pop
adc
ret
loopne
sub
cli
dec
stos
or
cmp
fstps
xchg
mov
sub
pusha
adc
jmp
sbb
pop
pusha
pop
ljmp
inc
test
ret
adc
loop
inc
in
jmp
das
jecxz
in
and
call
push
xchg
bound
cwtl
push
popf
lods
paddw
rclb
mov
out
xchg
je
es
xorl
cmp
repnz
shll
adc
mov
movsb
stos
inc
loopne
loopne
xor
xor
pop
jp
and
mov
pop
insb
xchg
cmpsb
or
and
stc
pop
in
aam
les
and
or
ss
fistps
dec
loopne
incl
scas
mov
pusha
push
lret
lahf
or
mov
in
adc
sbb
ds
push
out
jno
fimuls
adc
push
xor
mov
jbe
fs
cmp
xor
das
ret
add
jle
imul
jb
mov
xchg
cwtl
jl
loopne
rorb
xchg
das
aam
ja
icebp
mov
push
bound
mov
mov
inc
push
sub
test
repz
and
add
in
imul
push
add
fldl
outsl
mov
sub
sbb
jno
adc
sub
push
inc
mov
adcl
cmp
sbb
cmp
lods
and
popa
gs
mov
xor
cmp
xchg
push
call
jg
push
mov
pop
lods
pop
ss
je
sbb
pop
jp
mov
cmp
xchg
mov
sub
and
fbstp
cmp
add
out
add
fwait
mov
notl
xchg
ss
mov
mov
mov
data16
aaa
mov
aas
pushl
xchg
add
push
mov
push
or
add
and
pushf
out
in
pop
xchg
cmovl
daa
idivb
rcrl
mov
mov
and
stc
inc
int
call
xchg
iret
jle
and
hlt
sub
inc
andb
shlb
rcrb
imul
push
das
test
dec
je
stc
pop
pushl
push
sub
xchg
icebp
mov
xor
testb
jecxz
fcoms
arpl
icebp
in
das
mov
dec
mov
and
cmp
sub
sbb
mov
push
sub
add
cltd
jg
dec
out
jge
int
push
sti
pop
mov
rcrb
scas
inc
mov
push
xchg
cmp
inc
jg
iret
icebp
pop
stos
mov
call
out
inc
in
cltd
lcall
push
nop
mov
cli
mov
repz
pcmpeqw
sbb
xor
shlb
lock
push
pop
push
negb
pop
sbb
adc
jg
ja
test
cltd
add
xchg
push
ss
mov
cmp
popf
ja
lret
adc
inc
imul
ficoms
dec
fsubl
fisubs
dec
pop
pop
mov
stc
out
inc
adc
cmpsb
mov
pop
cli
int
stos
mov
mov
jle
ret
mov
fidivrl
push
add
ljmp
lahf
xorb
sbb
mov
add
movsb
push
repnz
insb
add
mov
jle
add
testb
popa
push
ja
ror
xchg
in
mov
mov
cmp
dec
lods
push
add
mov
fs
cld
pushl
jmp
lods
dec
cmpsl
xor
push
mov
je
js
bound
sub
notb
mov
sub
push
mov
shrl
xchg
jge
pop
inc
rcll
es
inc
push
mov
loop,pt
addr16
mov
lods
out
int3
scas
ret
cmp
mov
dec
and
inc
lods
sti
andl
and
shr
or
adc
push
pop
cli
popf
scas
jnp
fildll
cmp
jne
stos
ds
ss
jbe
insb
test
aad
outsl
mov
loop
mov
cmp
push
jg
jge
sahf
or
and
pushf
pop
and
cmp
pop
pop
jmp
sub
andl
add
or
mov
out
mov
aaa
into
mov
mov
xor
jg
cmp
dec
xchg
ja,pt
mov
sub
imul
mov
adc
ljmp
shrb
into
dec
jo
xor
sarb
arpl
subb
jmp
out
rcr
pushf
jle
jg
and
sbb
add
in
push
push
push
lea
jne
mov
jge
xor
xor
and
fmul
insl
mov
dec
mov
cmp
scas
sbb
shll
lock
mov
addl
xor
xchg
jg
push
sbb
sub
pop
loop
stc
aad
ljmp
dec
jo
out
test
sbb
sub
out
inc
cmp
mov
add
mov
call
push
pop
and
dec
jb
jmp
add
nop
xchg
mov
ja
jecxz
loop
inc
and
gs
mov
lret
out
in
sbb
add
dec
call
adc
stc
shr
fcompl
push
pop
mov
scas
pop
daa
pop
ljmp
jmp
push
cmpb
mov
pop
lea
in
mov
fcmovbe
mov
adcb
sbb
repz
xor
add
jmp
mov
mov
test
faddl
mov
ret
test
icebp
scas
dec
push
dec
jmp
lods
xor
pop
push
pop
ljmp
jmp
or
data16
push
inc
call
in
lahf
jecxz
mov
xchg
popa
sub
xchg
mov
push
sbb
pop
or
rolb
pop
insb
pop
jae
imul
cmp
xchg
iret
into
mov
repnz
push
stc
mov
ret
outsb
xor
inc
jp
aam
cmp
sub
aad
test
out
pushf
inc
stos
and
popa
or
out
fcomps
mov
add
push
addr16
mov
leave
dec
fs
mov
pop
bound
push
in
sbb
in
leave
xchg
sub
inc
insb
mov
sub
push
dec
sbb
cmpsb
mov
mov
in
and
xor
not
scas
mov
fsub
mov
out
mov
in
call
lea
adc
dec
mov
adc
cmp
sub
sub
jmp
adc
int3
fisubrl
mov
push
imul
xchg
ret
mov
gs
sbb
adc
cwtl
mov
mov
cli
push
mov
test
xor
jmp
sub
xor
inc
test
insl
xchg
jno
addr16
shlb
add
in
xchg
fdivrs
mov
jmp
cmc
popf
les
int3
xlat
in
ror
sbb
clc
enter
pusha
pop
mov
test
push
jp
sub
leave
int3
xchg
add
mov
stc
mov
subl
push
scas
mov
xor
in
pop
and
fcomp
aas
mov
sub
lcall
in
sbb
call
test
jmp
or
adc
xor
test
add
pop
ret
ljmp
in
pop
fs
inc
push
dec
fisubs
xor
pop
sub
in
lods
mov
pop
cmpsb
fsubrl
mov
in
push
mov
fdivl
dec
push
xchg
fdivrs
movsb
sar
jecxz
push
idivb
sub
stos
hlt
mov
xor
xchg
lea
lret
les
loop
xchg
test
or
lock
jl
gs
arpl
xor
cmp
cmpsl
popa
hlt
mov
sub
inc
jns
std
test
jo
mov
mov
jmp
cli
shrb
or
ret
ss
shlb
mov
adc
ss
sti
pop
mov
in
sti
les
pop
sar
lock
fisttpll
rorb
adc
into
mov
inc
iret
xor
fcoml
mov
popl
sbb
hlt
pusha
and
movsb
xor
xor
jle
or
xchg
sub
push
push
lds
sub
push
nop
dec
in
dec
hlt
sti
mov
adc
dec
or
dec
lds
jp
filds
or
jbe
sub
sub
xor
dec
rcl
roll
repnz
incl
jge
or
insb
je
xlat
mov
out
fdivr
inc
jne
aas
mov
mov
shll
js
int3
cmp
inc
fisttpll
mov
pushf
fucomip
rcr
push
iret
inc
or
sub
sub
mulb
aad
pop
cmp
inc
push
stos
idiv
enter
stc
lcall
outsb
arpl
sbb
test
pop
in
mov
jmp
rcl
insl
nop
push
jecxz
out
into
jnp
dec
mov
push
loope
jo
add
inc
mov
push
pop
add
test
loopne
jecxz
xor
adc
fistpl
mov
lea
push
xchg
ret
ret
icebp
dec
pop
das
and
out
jl
imul
inc
out
fiaddl
jecxz
cmpsw
xorl
fstpt
mov
mov
dec
sub
mov
mov
imul
pop
addr16
inc
sti
in
test
sub
jns
mov
cltd
outsl
movsb
mov
nop
pop
dec
insb
es
repnz
addr16
sbb
jl
mov
push
lods
and
insl
pop
arpl
out
push
int
test
test
dec
popf
sub
xchg
pop
cmp
ret
in
imul
movsb
sbb
mov
and
ret
movsb
mov
xor
dec
push
les
push
lcall
fcompl
inc
std
cmp
add
adc
subl
xor
mov
cli
mov
xchg
adc
fwait
or
shrb
jg
repz
mov
cmp
sub
aam
lahf
xor
push
adc
int3
mov
jno
pop
and
lcall
pushf
lock
aam
push
mov
loope
xor
testl
or
js
cmp
push
cltd
pop
dec
or
or
push
lret
nop
out
fstpl
pop
outsl
jbe
xchg
aas
push
xor
test
dec
xchg
xchg
xlat
inc
jecxz
or
sub
xor
pop
scas
mov
inc
pop
in
jl
in
cwtl
icebp
push
das
ljmp
sbb
mov
sub
daa
jbe
xor
lods
loop
shll
pop
imulb
cld
imul
mov
pop
scas
stos
or
mov
lahf
cld
jns
cmp
push
jp
mov
push
lret
adc
and
shlb
dec
and
dec
ljmp
mov
cmp
jnp
fsubl
dec
adc
movsl
mov
dec
pop
imul
xor
out
jg
adc
movsl
push
jo
jo
jne
mov
je
xchg
stos
enter
std
jae
push
sahf
daa
mov
push
xchg
mov
fistl
int
test
push
addb
popa
ss
aad
int3
xchg
and
ftst
int
loope
push
jno
mov
pop
add
xchg
mov
imul
das
cmp
fnstcw
std
mov
mov
inc
movl
sub
mov
mov
jnp
xchg
dec
xchg
or
ljmp
int3
test
rcrb
sbb
pop
movsb
lret
test
sub
fcmovu
xor
sti
shrb
mov
dec
fwait
inc
mov
hlt
mov
pop
cmp
in
insb
mov
jbe
cmp
jns
inc
sub
xchg
sahf
cmc
cmp
cmpsl
dec
sub
xlat
sub
sbb
aaa
cmp
nop
adc
push
outsl
les
and
jl
push
jg
stos
je
aam
mov
imul
in
xorb
arpl
pop
sub
ds
inc
cmp
add
or
mov
iret
xor
jmp
or
popa
pop
out
hlt
mov
sbb
mov
in
cmpsb
lahf
mov
aam
dec
and
and
sbb
jmp
inc
subb
mov
cmp
out
push
cwtl
sub
mov
mov
dec
loopne
insl
add
mov
sub
scas
fcmovu
jnp
cmpsl
pop
outsl
lods
shrl
loope
stos
lret
ret
lahf
movsb
iret
pop
add
lret
lds
ficoml
fisttps
roll
mov
lcall
lods
pop
sahf
xchg
repz
push
cli
push
or
incl
lret
js
sbb
xchg
aaa
lcall
fwait
lds
jmp
mov
andb
repnz
sub
insl
add
add
and
adc
sbb
mov
cmc
ret
in
data16
sbb
push
mov
pop
insl
jae
lods
cmp
cmp
xchg
shlb
inc
scas
hlt
mov
xor
test
cmp
xchg
pop
popa
into
or
stos
sbb
lret
cmp
sub
xchg
jmp
mov
mov
jnp
cwtl
mov
push
addr16
inc
inc
inc
push
inc
arpl
pop
jae
imul
add
mov
es
jnp
cmp
mov
fwait
add
xor
mov
push
hlt
out
les
mov
enter
mov
xchg
jb
lods
icebp
hlt
shl
cmpsb
rcll
std
inc
and
int3
lret
cmpsb
cmpsl
dec
sub
jmp
or
pusha
out
pop
push
sti
testl
adc
pop
or
in
and
push
fmull
xchg
xor
push
sbbl
mov
aam
xchg
andl
imul
in
add
ja
sbb
je
mov
mov
outsl
sarb
add
repnz
push
mov
call
cmp
test
pop
fiaddl
sub
mov
ret
or
xor
jmp
ja
cmp
call
xchg
lret
dec
nop
jo
negb
and
inc
adc
jl
cmc
out
mov
inc
ja
test
lcall
stc
dec
cmpsl
push
imul
aaa
dec
lcall
xor
cltd
add
mov
fistl
addr16
sub
jmp
js
inc
adc
jns
into
cmp
xchg
inc
push
into
and
push
fnstenv
push
push
xchg
add
mov
in
scas
jmp
sbb
inc
loope
movsb
push
jae
es
push
mov
inc
jge
faddp
out
mov
outsl
gs
push
addl
sub
inc
aad
xorb
in
xchg
orb
pusha
pop
mov
in
inc
dec
xchg
jl
dec
call
adc
rorb
xor
adcb
mov
xchg
hlt
test
aam
jbe
xor
mov
dec
rorb
imulb
stos
dec
jns
xchg
data16
lods
inc
push
mov
pushf
test
fistps
mov
cwtl
xchg
pop
sti
scas
push
push
push
fwait
lods
or
inc
mov
mov
xchg
cld
mov
jmp
push
dec
xlat
push
cmp
leave
add
rcrb
add
fisttps
push
pop
aam
out
ret
inc
inc
or
test
aam
xchg
and
hlt
ds
push
in
jle
leave
fidivrs
or
pop
leave
push
fdivrl
jmp
mov
lock
ss
pop
sbb
pushf
adc
xchg
push
shl
shll
test
adc
add
and
rcrb
cmc
sbb
pop
and
push
pushl
inc
jle
xor
sub
sub
jle
aam
mov
or
mov
shll
push
scas
mov
lods
push
pop
push
insb
mov
int
scas
xchg
mov
push
push
xor
out
jne
dec
jge
pop
mov
cltd
adc
sbb
out
mov
jge
dec
xor
xrelease
add
pop
xchg
sbb
dec
mov
inc
pop
xchg
adc
mov
mov
or
es
into
and
dec
cmp
dec
sub
mov
ss
adc
les
cwtl
ljmp
add
xchg
and
pushf
adc
enter
and
ja
jb
cmpsb
add
mov
jnp
in
xchg
bound
and
test
lret
push
dec
ficoms
adc
shr
mov
rcrl
add
xor
push
mov
jne
jp
out
out
inc
out
sbb
pop
gs
jns
mov
mov
aad
pop
adc
cmp
add
cmp
fwait
test
xchg
imul
sti
inc
jmp
add
mov
dec
lret
mov
mov
int3
adc
xor
push
dec
pop
iret
sub
add
mov
adc
in
test
cmpsb
xchg
add
or
pop
pusha
inc
pop
push
cld
mov
inc
ds
lods
add
lock
imul
mov
iret
xor
in
mov
movb
mov
mov
cwtl
aad
mov
pop
dec
dec
fists
mov
pop
jp
fwait
testl
sbb
mov
add
push
ret
js
xor
inc
gs
repnz
rclb
jle
fcoms
imul
xor
or
push
sbb
rol
cltd
daa
iret
loope
ret
xlat
inc
sahf
js
lods
fsubrl
in
in
dec
jl
xlat
dec
inc
movsl
sub
xlat
mov
pusha
setbe
addr16
addr16
ds
pop
pop
lahf
pop
bound
sbb
int3
mov
orb
push
stc
imul
mov
xchg
in
add
insb
add
ret
pop
dec
mov
repz
iret
aad
adc
mov
dec
xchg
jmp
pop
lods
ret
cmp
mov
popf
and
pop
rolb
dec
mov
mov
xchg
pop
pop
ficomps
mov
scas
mov
inc
bound
sbb
adc
pop
mov
sbb
jns
out
test
jb
mov
sbb
cld
dec
icebp
or
push
jnp
and
or
inc
mov
roll
ret
dec
or
bound
cwtl
inc
dec
divb
je
cmp
and
aaa
pop
stc
test
pusha
add
cwtl
insb
sub
sbb
aas
xchg
mov
cli
inc
mov
mov
xchg
cltd
fcomip
adc
or
xor
popf
xlat
sub
cmp
sbb
enter
in
mov
sbb
fcoms
sub
ret
faddp
mov
xchg
mov
dec
cmp
jbe
push
gs
and
enter
adc
mov
or
sub
mov
xchg
ret
scas
cli
sub
inc
je
cmp
in
xchg
lret
and
cmp
lret
lock
jecxz
xchg
addr16
icebp
pushf
jnp
and
cmp
mov
jne
dec
aaa
leave
push
add
scas
cld
fistpll
jmp
cmp
repnz
scas
loope
cld
mov
pop
sbb
loopne
aam
xchg
lock
sbb
mov
push
into
not
mov
fwait
shll
dec
popa
jl
add
sbb
stc
sub
in
jge
add
imul
loop
pop
ja
xchg
cmc
lahf
fwait
and
add
cmpsb
jmp
and
cltd
into
test
sbb
pop
nop
or
and
xor
and
adc
roll
fs
in
mov
in
loopne
fcoms
loopne
or
and
jbe
mul
add
roll
push
subl
adc
orb
adc
adc
out
insl
sbb
inc
and
push
and
bnd
or
ds
mov
js
js
scas
jecxz
test
push
dec
inc
cmp
push
je
sub
pop
dec
repnz
movsb
jb
je
and
testl
cmp
sub
add
loope
int3
int3
rol
repz
jo
adc
aaa
out
gs
mov
fsubrs
cmp
and
dec
dec
push
jbe
push
lret
mov
nop
scas
aam
push
or
mov
jmp
pop
stos
dec
mov
lea
inc
imul
mov
cmpsb
imul
daa
xchg
bound
add
dec
out
cmp
adc
inc
xchg
in
push
stos
or
xchg
lahf
dec
cmpsl
jl
add
jns
cltd
push
jnp
xchg
mov
xlat
cmpl
sub
mov
xor
mov
lret
lods
lret
add
adc
lds
dec
pop
ret
ljmp
jne
ljmp
pop
stos
lcall
in
dec
mov
push
fistl
jle
xor
dec
add
xor
cmp
xor
mov
movsl
out
lret
frstor
cmpsl
inc
and
sti
jns
cmpsl
adc
mov
das
push
orl
ret
test
mov
fucomip
dec
lock
push
cmp
and
fs
mov
dec
cwtl
fsubs
mov
cmp
fidivl
push
inc
cmp
lahf
xorb
div
xchg
movsb
dec
inc
inc
movsb
lds
sbb
cwtl
mov
and
mov
cld
push
jl
and
mov
jb
aaa
push
jmp
daa
es
xor
popf
push
sti
mov
jecxz
in
xor
test
std
stc
in
cmp
xor
sub
popf
ror
lret
call
mov
mov
mov
lods
pop
jecxz
mov
or
sub
std
in
xchg
and
sub
push
sub
imul
push
inc
xchg
xor
test
mov
cmc
sub
nop
sub
cwtl
mov
popf
aas
push
pushf
adc
enter
xchg
jecxz
xor
sbb
xchg
jnp
jne
imul
loope
ficoml
dec
cld
rolb
sub
push
lods
fucomi
test
nop
jae
dec
lds
adc
test
lcall
out
lods
int
jb
cmp
mov
daa
cmpsl
xlat
shll
xor
lret
cmove
mov
xchg
mov
popf
push
leave
lds
scas
adc
ret
outsl
ljmp
insl
sbb
stos
sub
cmp
aas
mov
inc
in
push
mov
leave
pop
pop
push
subb
push
mov
movsb
out
push
call
gs
mov
repnz
or
pop
lret
sbb
icebp
xor
test
inc
mov
arpl
es
shll
sti
test
jp
gs
call
fwait
int3
pop
xchg
in
push
pop
adc
das
mov
nop
mov
fidivrs
push
pusha
push
arpl
fs
or
add
lcall
shl
and
imul
jnp
jns
add
cmp
daa
lods
pop
addb
loope
xor
lret
or
pop
popf
stos
and
or
inc
adc
fdivrl
movsb
scas
mov
push
hlt
in
push
add
xor
dec
mov
ret
clc
jmp
aas
insb
jp
dec
xchg
aam
test
aas
sub
and
outsl
and
push
and
test
mov
xor
insl
add
inc
aad
dec
cmp
jbe
jg
insl
add
sub
es
and
repnz
mov
cld
mov
ljmp
xlat
das
sbb
push
call
jo
imul
arpl
imul
push
xchg
pop
xor
xor
cwtl
lret
xor
aam
xor
and
jl
decl
adc
cmp
push
xor
fwait
cmp
pop
xchg
orl
pop
movsl
lock
mov
or
dec
xor
shrl
inc
movsl
leave
xchg
sub
pusha
sub
xchg
inc
cli
xchg
cmc
shlb
ret
cli
xor
in
push
bound
add
dec
sbb
iret
iret
xor
push
xor
sub
aam
push
pop
cmp
fsts
sbb
xlat
fisubrs
js
addr16
popa
inc
mov
xchg
movsl
bnd
pop
imul
sub
in
cltd
fsts
fwait
sub
test
xor
jle
loop
and
mov
ja
repnz
adc
mov
mov
rcr
mov
pop
les
shrl
sbb
adc
imul
stc
ficomps
inc
and
loop
dec
data16
les
subb
icebp
in
pop
jmp
xchg
movsb
fmuls
cmc
loope
add
push
cwtl
or
shll
push
push
dec
sahf
mov
popl
xor
mov
icebp
cmpsb
mov
or
push
cmp
mov
inc
stc
dec
call
cmpsl
cmp
ret
int3
movsl
shl
push
mov
andnps
dec
cmp
daa
js
fs
mov
test
scas
add
xchg
dec
mov
cltd
cmp
call
and
dec
or
pop
into
xor
dec
xor
int3
cmc
add
xchg
jmp
or
pop
lcall
ds
in
jne
popa
out
mov
in
mov
fnstenv
insl
dec
mov
dec
xor
xchg
lds
xor
mov
cmc
sub
inc
jmp
cmp
mov
pop
ret
pop
frstor
mov
push
mov
cmp
cwtl
cmp
and
mov
mov
sub
xchg
mov
lock
stos
jg
cmp
xorb
pop
fbld
in
mov
out
xchg
clc
sbb
shlb
jle
jbe
ja
mov
pop
cmc
mov
imul
dec
ret
arpl
loop
test
xor
sub
into
lret
dec
mov
push
mov
adc
jbe
push
adc
cli
sbb
imul
xorl
lahf
pop
dec
outsb
stc
push
xorb
outsl
cmp
pop
addl
out
mov
or
push
call
in
jg
pop
mov
fcompl
fisubrl
pop
nop
sbb
jmp
fsubl
or
push
repnz
and
mov
jg
push
jle,pt
sbb
outsl
mov
pop
dec
mov
bound
lods
mov
ret
data16
fmull
lret
add
pop
scas
in
cmpsb
mov
movsl
sbb
jp
decl
inc
imull
es
in
repz
inc
int
xor
inc
jno
ljmp
shrb
xacquire
int3
mov
popa
cmpb
lret
fsubrl
adc
xchg
out
pop
mov
push
dec
nop
scas
pop
sub
arpl
mov
pop
add
sbb
push
xchg
pop
mov
jno
lods
popa
mov
aad
dec
scas
gs
lods
mov
mov
add
mov
es
mov
js
xchg
xchg
pop
dec
cld
sbb
cmpsl
jbe
int3
jno
out
lret
cmp
lea
jge
mov
inc
pop
jl
cli
fistps
fsubl
pop
jecxz
out
in
xlat
int
jmp
add
push
in
scas
add
into
lods
xor
jbe
mov
in
xor
jmp
jno
cmpsl
pushf
rcrl
add
mov
xor
cli
sub
nop
pop
mov
out
lock
loope
ret
and
xchg
insl
ret
nop
das
add
push
ds
stos
mov
arpl
shrl
xor
mov
out
ljmp
es
push
andb
das
imul
cmp
repnz
mov
ret
or
outsb
addr16
repnz
rclb
cs
xchg
hlt
lods
loopne
popf
and
mov
and
xchg
or
movsl
test
popf
into
cmp
mov
sar
adcb
add
jp
scas
push
sbb
jo
popf
stos
xchg
dec
mov
notb
mov
into
fldt
test
ja
jmp
mov
lock
jmp
mov
enter
xchg
lahf
xor
jge
mov
into
outsb
xor
cld
mov
dec
xor
mov
xchg
insb
pop
push
jle
cld
je
and
repnz
xor
inc
lock
fnsave
jnp
pop
and
std
sub
insb
jmp
jne
es
cmpsl
push
mov
inc
dec
ror
mov
mov
pop
jne
push
adc
int3
sub
mov
fstpt
dec
jge
mov
arpl
mov
std
fcomp
adc
int3
popa
jecxz
jbe
data16
mov
aad
sbb
mov
sbb
and
sahf
pop
push
lcall
sbb
adc
into
push
fsubrs
icebp
pop
repnz
fnsave
and
shrl
iret
aam
imul
pushf
sub
inc
xchg
fcmovne
inc
ljmp
imul
add
sbb
mov
leave
push
mov
in
cmp
add
pop
mov
loop
mov
stos
jg
lahf
popa
insb
aas
subb
out
jge
out
scas
and
xor
cmp
sbb
mov
ss
sbb
insb
call
cwtl
add
stos
push
pop
xor
cltd
int3
jo
ja
orl
push
sti
sbb
mov
jb
inc
jo
stos
jp
push
add
je
mov
mov
mov
popf
sub
push
arpl
inc
and
das
in
sub
add
arpl
mov
xor
loopne
in
rol
shrb
pop
pop
repnz
rcll
leave
cmp
dec
add
test
cmp
in
adc
xchg
and
mov
loope
and
mov
pop
xchg
push
nop
sahf
fbstp
insl
mov
loope
pop
add
into
push
mov
push
dec
jae
insl
stc
bound
inc
mov
lds
ss
inc
int3
mov
jo
cs
sbb
aaa
pop
mov
mov
cmpsb
subl
in
adc
jecxz
insl
cmp
fnstsw
addr16
imul
ljmp
xchg
insl
imul
fldenv
push
hlt
adc
movsb
mov
fisubrs
sub
rcr
push
insl
ja
fisubrl
pushf
push
inc
cmc
std
adc
mov
mov
mov
jae
jne
icebp
xchg
push
sub
shll
pop
lret
cli
outsl
and
push
add
test
xchg
rorb
pop
xor
fcoml
rcrl
ret
push
cmp
mov
sub
mov
std
jbe
lret
add
daa
push
idivl
pop
leave
or
or
das
push
dec
dec
sub
mov
or
adcb
loopne
movb
sub
fidivrl
inc
push
jg
jbe
lcall
mov
mov
adc
int
push
rorb
push
imul
shlb
loope
fistpll
ficoms
stc
and
or
inc
arpl
adc
ja
in
subl
int3
lahf
std
cld
mov
pop
push
add
push
dec
push
fstps
adc
xor
jp
jmp
scas
inc
out
jno
fcmovb
pop
mov
shll
pop
decb
in
pushf
pop
gs
sbb
jb
lcall
sub
mov
int3
out
push
filds
jmp
clc
push
cmp
cmp
dec
lock
stos
sbb
mov
pusha
scas
xchg
test
out
push
adc
cmp
cs
lahf
lods
popf
fwait
fs
sbb
dec
or
or
jp
jo
dec
pushf
pop
inc
jbe
mov
jae
xor
mov
scas
daa
sbb
mov
loop
xchg
das
mov
sbb
cmp
mov
cld
jmp
push
pop
stos
pop
loopne
fisubs
jne
xchg
mov
jb
fbstp
sub
mov
les
cmp
in
or
das
shlb
sub
dec
iret
mov
push
add
in
sub
idivl
xor
jl
gs
xor
fsubr
out
mov
xlat
jne
mov
push
jecxz
push
out
xchg
pusha
insb
or
and
test
test
cld
cmp
ja
cltd
or
cmp
je
xchg
jae
call
push
xor
jbe
gs
hlt
int
dec
outsb
arpl
inc
cmp
adc
arpl
out
pop
je
lahf
fcmovnb
cli
test
inc
or
int
movsb
xlat
sbb
aas
sahf
and
dec
fcmovnb
xlat
xor
rcrl
pop
push
pushf
pop
out
pop
push
mov
mov
bound
adc
mov
aaa
ja
call
push
loope
xchg
into
and
sub
cld
das
add
cmp
jl
js
push
sti
mov
sbb
push
ds
pop
clc
cmpsb
into
in
fstpt
xor
sub
cld
subl
pop
inc
in
xor
ljmp
push
arpl
jbe
mov
fsubrp
mov
and
cmpsl
push
sbb
cmp
fwait
aam
inc
fdivrs
jle
mov
mov
cltd
mov
fidivrs
push
enter
fs
pop
hlt
and
sub
jg
fnstenv
loop
in
push
ds
push
dec
fadds
or
jle
xchg
inc
sub
insl
and
mov
sub
sub
mov
inc
lock
lods
andb
xor
call
leave
jae
cmp
fs
in
mov
in
mov
mov
stos
test
add
adc
in
iret
sbb
mov
fs
push
cli
push
out
mov
inc
jp
push
sbb
add
mov
sbb
dec
shr
add
lods
xchg
fwait
test
imul
mov
aam
fucomi
sub
pop
js
stos
call
cmpsb
dec
hlt
xchg
fnsetpm(287
lcall
add
cmp
mov
lds
mov
jle
aas
idivl
fiaddl
into
lcall
cld
mov
stos
aas
jo,pt
loop
dec
inc
ss
dec
sub
mov
insl
notb
adc
lods
sub
scas
sub
dec
sbb
or
push
scas
and
call
or
enter
shlb
sbb
setp
cs
out
or
rep
inc
movb
inc
fdivrs
adc
enter
clc
les
sti
jle
inc
jbe
stc
mov
fcomps
adc
cmpsl
adc
cmpsl
and
outsb
xor
lock
ret
mov
mov
pop
in
out
push
jne
pop
mov
pop
push
xor
inc
inc
and
push
into
xchg
movsb
jp
sbb
cmc
clc
mov
mov
push
sub
je
jae
pop
enter
mov
aam
jns
or
pop
push
mov
dec
sub
ds
cmpsl
les
cmp
xchg
dec
lods
add
negb
inc
push
sub
test
sub
sbb
jns
imul
sar
ret
mov
cmp
cmp
dec
fcmovu
test
js
cmpsl
outsl
lret
and
adc
dec
sahf
pop
adc
mov
loope
dec
rorb
std
and
addr16
add
int
mov
movsb
in
ss
arpl
popf
jne
xor
push
mov
push
pop
bound
int
cmp
pop
clc
outsb
les
jp
push
cld
lea
mov
pop
cltd
inc
cs
inc
jge
mov
jno
ds
inc
cmp
outsb
mulb
test
mov
mov
push
fs
pop
pop
pop
fstpl
cmpsb
pop
aaa
sbb
dec
and
lret
outsl
cltd
cmpb
or
shr
or
xor
mov
bnd
inc
sbb
pop
jg
sti
xchg
cli
and
lock
in
dec
loop
outsb
js
xor
cwtl
and
pop
test
jg
mov
aas
mov
and
aas
dec
jo
les
push
xor
in
pop
jb
jg
popa
rolb
cmp
repz
or
push
sub
or
repnz
je
xor
mov
push
in
cmpsl
push
mov
pop
inc
jae
push
pusha
paddb
inc
rcl
jmp
shlb
add
adc
mov
es
push
cs
adc
inc
js
pop
inc
faddp
adc
out
inc
add
dec
movsb
jle
pop
push
push
sub
and
les
mov
add
or
shll
out
jno
push
imul
pop
fldpi
ret
lahf
cmp
nop
dec
lods
int3
fnstcw
cmp
or
mov
mov
and
xchg
mov
add
push
pop
adc
lahf
mov
mov
fs
sub
fdiv
pushf
fwait
and
or
and
jle
arpl
xor
pop
sbb
sbb
and
lahf
out
mov
aas
xchg
push
mov
dec
cmpsb
mov
push
pop
std
enter
mov
cli
inc
nop
scas
mov
pop
pop
aam
daa
jno
call
and
into
xchg
shrb
ss
add
jne
xlat
xchg
sub
aad
mov
aad
lods
cltd
mov
lret
jnp
adc
arpl
or
mov
andl
xor
inc
mov
lods
notl
fstpt
dec
adc
mov
xchg
fldcw
push
test
fimuls
xor
popa
jmp
add
negb
int3
adc
sbb
sbb
xchg
inc
adc
sbb
xchg
xchg
sub
add
jecxz
fucomip
cltd
fnsave
jge
or
test
push
pop
sbb
push
movsl
aaa
movsl
xor
jl
xchg
pop
pop
mov
mov
sub
dec
es
mov
enter
cltd
jo
xchg
jg
and
xchg
movsl
jge
xlat
fisttpll
dec
mov
in
cld
sbbl
adc
ret
jecxz
dec
sbb
popf
and
aaa
jp
cmp
lcall
out
and
pop
and
or
push
jecxz
mov
mov
and
dec
outsl
cs
push
jmp
dec
fisubl
xchg
outsb
out
push
outsl
jl
mov
mov
nop
outsb
cmp
clc
sbbl
or
fcomps
pop
ret
cmpsb
jne
add
inc
mov
lea
lret
sub
adc
pop
int
mov
pop
sbb
jmp
xchg
dec
imul
cmc
adc
loopne
push
adc
cltd
jno
mov
js
xchg
ficompl
mov
rcll
xchg
sub
cs
shl
add
fisubs
pop
mov
inc
push
xchg
sbb
imul
jne
mov
in
das
dec
in
es
xchg
jb
jo
or
inc
mov
hlt
pop
add
xor
xchg
rolb
mov
sub
lret
leave
aas
or
jbe
loope
out
dec
mov
hlt
cmp
inc
xor
push
aas
imul
or
in
mov
inc
test
punpckldq
in
cmp
inc
cmp
pushf
inc
and
adc
xchg
je
pusha
arpl
jp
jns
push
push
mov
outsl
es
pop
and
decb
and
sbb
jno
andb
scas
in
lock
adc
in
in
pop
imul
xchg
add
arpl
mov
pop
adc
cltd
inc
push
or
outsl
loope
xchg
xor
sbb
aas
cmp
jne
lret
mov
and
xchg
jbe
push
fwait
add
mov
mov
movsl
mov
clc
cmc
pop
sub
push
out
stos
add
fsubrl
pop
out
les
aam
int
xchg
mov
pop
fwait
cwtl
xor
imul
pop
icebp
push
lock
dec
push
dec
and
out
push
mov
push
xor
stc
add
sub
pushf
jp
insb
mov
cmp
pusha
add
xorl
pop
xor
xor
mov
lret
mov
inc
xlat
in
in
jle
lahf
mov
fistps
or
mov
mov
inc
leave
lods
or
lret
lret
jbe
cmp
insl
dec
mov
push
adc
shlb
out
ret
push
imul
out
push
filds
cmp
adc
inc
push
sub
inc
mov
insl
push
mov
cmp
sbb
jge
adc
or
test
inc
fnstenv
jne
cs
xchg
sub
es
sub
mov
jnp
push
fstl
xchg
push
pop
xor
cs
aad
push
lods
xor
sbb
or
xor
xor
cmpsl
push
pusha
add
xchg
mov
and
sbb
sbb
daa
xorb
push
cmp
sub
cmpl
cmpsl
mov
mov
mov
push
outsb
mov
scas
jnp
jb
fidivl
xchg
dec
push
pop
inc
loope
divl
ds
xor
mov
cltd
sbb
push
sbb
and
in
sti
js
pop
fcoms
mov
sarl
ljmp
cmpsl
push
jb
scas
sub
bound
out
sub
pop
sub
test
mov
push
sbb
out
xor
cmp
inc
inc
sub
fcomip
in
mov
push
lods
jbe
sbbb
mov
in
xor
xchg
ret
fcoml
js
insb
inc
lock
add
or
and
dec
rclb
repnz
sub
outsl
xchg
sbb
in
pop
xchg
xchg
xchg
jge
xchg
jne
cmp
cld
out
jno
add
std
mov
popf
loope
in
lock
or
out
xlat
popf
fs
inc
xchg
cmc
add
jae
ljmp
addb
xor
sub
push
fidivs
add
jo
clc
stos
adc
scas
pushf
inc
mov
xchg
out
into
loope
lcall
leave
xor
pop
shrl
aad
in
out
nop
push
and
dec
inc
inc
cmpsb
or
mov
cmpsl
push
movsl
xchg
inc
mov
in
out
mov
mov
sub
xor
xchg
stos
daa
icebp
add
pop
mov
jmp
sbb
mov
or
bound
inc
stos
xlat
sbb
mov
in
iret
ss
iret
pop
gs
dec
mov
jae
pushf
mov
xchg
or
aaa
loop
aad
push
rcll
xorb
leave
jnp
fistl
lret
in
adc
xor
pop
dec
xchg
pusha
add
or
loop
push
ljmp
repz
inc
xor
pusha
mov
xchg
jns
out
cltd
mov
mov
cmp
cmp
cli
stos
hlt
jne
pop
add
jnp
out
rcr
pop
dec
mov
cmp
pop
shll
mov
rcrl
stc
stc
cli
or
push
adc
nop
pop
push
cmp
xor
cmp
jecxz
xor
repnz
std
inc
jbe
test
movsb
push
hlt
loopne
mov
lcall
subl
xor
into
lcall
into
dec
out
imul
dec
fs
popf
push
clc
outsb
incl
sub
nop
in
mov
aad
xor
and
add
add
or
dec
xor
dec
cmp
imul
jg
cmp
inc
pushf
lods
ja
sub
scas
outsb
cmc
adc
add
xchg
movsb
fsubrl
subl
test
pop
sarb
pop
stos
adc
cmp
push
ret
lahf
andl
sbb
pushf
push
pop
clc
or
imul
sbb
shlb
mov
repnz
in
add
dec
andps
fdiv
xchg
xchg
test
loopne
mov
jmp
xor
rolb
int
add
push
jg
punpckhwd
mov
lods
mov
mov
in
jge
ds
inc
das
ljmp
movsb
adc
or
fisttpl
std
fildll
ss
mov
loope
mov
mov
adc
fxch
xchg
int3
fs
sbb
scas
adc
fmulp
or
add
jne
into
or
jo
or
out
or
sarl
add
in
imul
shrl
jmp
incb
sub
add
or
add
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
