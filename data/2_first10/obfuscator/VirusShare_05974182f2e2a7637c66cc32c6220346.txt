jg
das
dec
dec
fsubr
loopne
and
cmc
and
shrl
xchg
adc
in
jle
push
or
sub
pop
pop
into
xchg
pop
rcrl
cld
and
jbe
inc
frstor
add
add
scas
dec
adc
jge
mov
clc
mov
imul
ja
xchg
sbb
fldl
push
xchg
sub
test
pushf
imul
adc
cmpsb
mov
cmpxchg
xor
nop
jge
dec
test
and
nop
inc
dec
lds
mov
ljmp
push
and
jmp
andl
push
mov
push
add
jbe
out
faddl
xchg
and
and
repnz
lcall
or
sub
rcr
pop
popl
stos
mov
pop
mov
repz
sarl
mov
cmp
ret
push
adc
leave
repz
mov
mov
sahf
and
stos
dec
inc
inc
push
scas
push
and
cmpsb
mov
push
mov
mov
lahf
test
rolb
xchg
fcmovu
push
xchg
pop
pop
mov
pop
jb
repnz
call
mov
ljmp
pushf
and
test
call
mov
iret
and
jo
jb
add
xor
jns
push
outsl
pop
mov
mov
lock
cmpsb
jg
push
idivb
mov
inc
sub
mov
movsl
sbb
cmc
xchg
lret
push
pop
fdiv
outsl
push
out
insl
call
sarb
jo
lret
mov
dec
jecxz
inc
packuswb
jg
scas
mov
pop
pop
js
dec
or
xor
jns
pop
rol
insl
aad
mov
mov
fnstcw
or
sub
enter
or
dec
lea
mov
xor
mov
cmpsb
inc
jns
mov
jb
jg
mov
jge
mov
jnp
out
jae
mov
arpl
pop
or
rcll
imul
push
icebp
jl
jnp
dec
cld
scas
test
fisubrs
int
add
push
and
out
leave
aaa
addr16
lock
xchg
mov
popa
pushf
xchg
sti
daa
mov
sub
add
sub
std
les
es
out
dec
mov
jae
and
insb
fucomp
je,pn
js
repz
mov
mov
lds
push
shlb
sbb
push
xchg
loope
mov
jb
mov
mov
stos
int3
lret
sbb
cmp
pop
nop
shll
push
and
idivb
repnz
push
out
pusha
mov
inc
xchg
ficomps
add
push
push
xchg
mov
fnstcw
cmp
mov
mov
shll
fs
cmc
stos
sbb
mov
add
mov
cmpsb
or
add
inc
roll
pop
pop
cmpsl
insl
es
or
out
pop
sub
in
inc
dec
cmpsl
clc
arpl
aad
push
pop
push
loope
push
mov
dec
cmpsl
into
int
xchg
pop
aam
inc
xor
jae
stc
pop
push
or
inc
or
scas
je
jb
sub
dec
inc
ds
pushw
les
dec
out
push
iret
cltd
leave
fldenv
cmpsb
push
jmp
xchg
or
or
mov
dec
sbb
pushf
sti
sbb
push
out
cmp
jne
int
pop
pusha
sub
push
mov
cmpsb
mov
sub
jmp
dec
repz
aaa
jmp
add
sbb
rdtsc
ljmp
out
test
ficoms
call
jecxz
mov
adc
aaa
xorb
scas
mov
or
pop
lea
aad
out
xchg
lret
cmp
adc
in
and
mov
push
fnstsw
mov
cmp
pop
xchg
or
and
popf
mov
or
test
in
push
jg
cwtl
lahf
xchg
fs
popf
daa
mov
adc
fisubs
inc
mov
insl
outsb
or
xchg
std
pop
mov
pop
mov
out
or
ret
rclb
cmp
pop
ss
inc
inc
lahf
scas
dec
frstor
jecxz
adc
int3
loope
in
daa
push
adc
insl
jl
int
repz
insl
clc
adc
or
mov
and
les
lret
sbb
sub
lcall
les
popf
fmuls
push
or
jb
xor
test
mov
add
push
fldt
mov
mov
mov
or
jecxz
or
sub
dec
test
lret
aas
aam
mov
icebp
push
push
aam
loop
loop
in
mov
je
ds
sub
add
ja
scas
cmp
outsb
jmp
pop
sbb
bswap
inc
cmp
fs
cli
icebp
iret
pop
repnz
inc
and
repz
popa
dec
addb
shlb
cmc
xchg
jl
bound
cli
or
xor
sub
pop
das
mov
cmp
mov
popa
cmpsl
nop
dec
cmp
fcmovnbe
lods
pop
arpl
popa
lret
cmpsb
or
ds
push
repnz
sbb
clc
enter
js
daa
sahf
sbb
repnz
mov
dec
xchg
dec
or
and
push
inc
std
add
mov
fmull
jge
inc
shl
dec
add
jns
ret
aam
mov
dec
adc
mov
dec
ds
mov
dec
int3
cmp
popa
dec
push
rcrb
xor
push
inc
add
jae
inc
mov
mov
mov
std
out
mov
clc
or
dec
jbe
lret
scas
js
loopne
in
ss
mov
clc
jbe
stos
mov
loope
and
jno
and
sub
mov
mov
in
mov
in
jge
lret
les
stc
int
test
xchg
push
icebp
test
shll
subb
xchg
jo
rolb
xor
jo
cmc
pop
pusha
xor
into
sub
cmp
mov
sti
mov
dec
mov
and
inc
mulb
aam
out
inc
push
and
adc
xlat
das
jmp
fldenv
dec
shrl
dec
or
mov
fsts
inc
data16
pop
jne
sub
iret
sti
mov
jg
pop
xor
clc
or
add
fwait
xchg
adc
insb
jne
cmc
sbbl
mov
rolb
in
xchg
sbb
and
fadds
int3
lret
adc
test
dec
out
xchg
add
out
cmp
adc
add
pop
repz
cltd
push
rol
cmpsb
fnstcw
incl
stos
xor
enter
inc
enter
jecxz
gs
leavew
xchg
fcmovu
mov
int
loope
sbb
push
shlb
push
jo
mov
and
add
and
test
xor
call
xchg
out
jp
add
out
push
cld
stos
in
dec
lock
push
xchg
test
adc
and
inc
repnz
push
sub
popa
pop
es
inc
shrl
lret
mov
or
sti
dec
outsb
scas
ss
inc
xor
add
jbe
mov
sub
mov
cmpl
lods
movsb
xchg
mov
aaa
xchg
ret
jp
xchg
or
xor
cmp
bound
xor
adc
xlat
or
jno
imul
add
push
sbb
ret
push
es
sbb
sahf
lcall
aam
aam
pop
dec
pop
scas
pop
leave
jnp
and
and
or
test
fs
fidivrl
jno
test
imul
cli
and
shrl
ret
or
dec
add
rcrl
and
and
mov
push
inc
sbb
cmp
or
cmpsb
jle
and
cmp
repnz
pop
fimull
mov
scas
loopne
cmp
sub
mov
fmull
and
adc
cltd
lods
mov
mov
ss
cmovg
xor
mov
lcall
sub
int
xlat
call
lods
stos
nop
insb
in
js
dec
push
mov
je
pop
sub
das
mov
mov
jb
fcomi
icebp
dec
scas
mov
xchg
int3
enter
cmpsl
mov
into
aas
mov
sub
test
es
aas
je
cli
push
stc
xchg
push
push
push
pop
add
in
jns
xchg
fnsave
jnp
xchg
inc
je
cld
pop
sti
iret
xchg
js
addl
pop
jnp
xchg
mov
cmp
leave
loop
icebp
out
ss
mov
icebp
sbbb
shll
leave
xor
push
pop
scas
jge
inc
dec
into
sub
ret
jg
addr16
or
cmc
out
outsb
rorl
and
dec
leave
mov
cmpsb
mov
ljmp
xchg
push
fs
and
sbb
gs
ja
push
pop
push
or
nop
xor
xor
push
mov
ja
mov
sahf
int3
ja
sub
xchg
pop
outsl
jl
adcl
sub
ret
sbb
out
divl
jp
fsubs
mov
dec
push
mov
cmc
repz
aam
jmp
cld
and
notl
mov
mov
sub
movsl
pop
adcb
cmp
or
jmp
xchg
int3
cwtl
push
xchg
mov
push
repnz
adc
pop
outsb
lcall
adc
and
cs
push
das
fdivrl
inc
add
imul
popf
outsb
mov
xor
sbb
jmp
push
xchg
repz
add
mov
movsl
mov
inc
sub
jae
fisubl
xchg
mov
insl
xchg
sub
and
clc
pop
stos
add
pop
sub
mov
fimull
movsl
mov
and
ret
mov
arpl
pop
loopne
in
test
in
clc
insl
xchg
mov
jb
fsub
push
pop
test
in
ds
outsl
cmp
ficomps
imul
jle
nop
test
gs
pop
outsb
push
outsb
jge
jl
out
inc
and
scas
movsb
or
push
mov
icebp
std
sbb
mov
jns
mov
scas
in
call
decl
and
xchg
add
lea
and
sbb
xlat
idivl
push
fninit
clc
mov
in
and
sub
das
stc
jmp
xor
outsb
and
mov
cli
ficoml
in
cmp
jno
test
mov
sub
cmpsb
not
xlat
mov
fldenv
outsl
pop
ret
ret
shll
xchg
movsl
mov
pop
cmpsb
mov
pop
sbb
dec
and
pop
mov
cmp
jo
mov
jno
mov
add
std
enter
aad
and
sbb
cmp
pop
mov
and
push
xor
lods
outsb
push
jmp
pop
imul
jge
rolb
sub
mov
mov
fdivs
mov
jg
xor
lods
cmp
idivb
xor
pushf
pop
mul
xchg
movsl
adc
ret
mov
movsl
adc
pushf
loope
cmp
dec
data16
pop
ja
bound
ret
and
push
stos
lea
jb
cli
insb
lock
pop
in
fdivrs
in
mov
pop
cmpsb
and
popa
stc
adc
adcl
jg
sbb
adc
adc
ficompl
pop
mov
es
jge
jle
xor
or
dec
inc
fstl
mov
jg
mov
data16
int3
mov
xor
xchg
mov
push
jp
xchg
in
mov
aad
sar
xchg
fcoml
mov
push
lea
fcomi
loope
int3
dec
ror
mov
cmp
cmp
jp
xchg
xchg
testb
aaa
push
mov
ljmp
dec
dec
sub
dec
outsl
dec
shl
push
inc
sub
das
das
cmp
lds
shll
mov
loopne
testb
popa
xchg
shll
fisubs
into
pop
inc
push
mov
imul
cli
add
push
rcll
adc
mov
sti
stc
sar
xchg
dec
push
call
add
sub
ficomps
add
sarl
pushf
subl
mov
ror
jno
xor
imulb
mov
testl
fbld
xchg
fsubrl
aam
inc
scas
push
jle
out
lds
push
pop
sub
lahf
pop
jnp
fidivl
arpl
jg
sbb
jbe
jle
flds
xchg
pusha
xorb
aaa
aad
xchg
int
xchg
shll
pop
pop
xor
and
cli
movsb
sbb
mov
fucom
mov
sti
mov
js
ljmp
push
out
mov
cltd
arpl
repnz
cwtl
xlat
and
inc
jae
fisttps
ret
push
je
inc
cld
xor
aaa
aaa
cmp
out
into
stos
cld
addr16
daa
dec
incb
adc
and
push
adc
subb
adcb
aas
jge
or
mov
pop
and
mov
lahf
mov
sbb
call
lret
jae
mov
dec
push
lret
jae
gs
mov
push
push
or
pop
dec
push
mov
stc
push
cld
shrb
shl
xlat
and
fadds
add
and
push
jno
iret
movsb
test
dec
xchg
arpl
int3
xorl
subl
mov
idivl
push
loopne
rorb
adc
cltd
cmpsl
stos
mov
add
aas
jp
stc
cmpsl
add
cld
push
or
cmp
jbe
adc
or
loopne
jo
lods
test
mov
push
icebp
lret
imul
es
or
add
sbb
jg
mov
push
cmpsb
adc
mul
mov
jmp
nop
ljmp
fidivs
nop
sub
inc
sub
jae
jmp
fiaddl
add
outsl
bound
xor
or
orl
lret
or
sti
test
enter
sbb
lds
cmc
dec
adc
add
sbb
mov
mov
mov
roll
lea
shrl
inc
rcl
mov
dec
or
arpl
fildl
cmp
icebp
or
loopne
repz
iret
push
add
jl
xchg
lret
stc
out
cltd
sti
mov
push
cli
repnz
leave
sarb
sbb
icebp
sub
mov
fcoml
jb
push
int
xchg
scas
sbb
stos
jo
mov
push
rcrb
adc
dec
adc
jecxz
movsb
ret
bound
lahf
divb
cld
mov
inc
sub
mov
push
imul
pop
sbb
stos
in
cmpsb
sti
mov
mov
imulb
fiaddl
pop
ja
ret
sub
inc
pop
cmp
mov
fwait
add
leave
fimuls
xor
pop
ret
ret
cltd
hlt
inc
and
inc
inc
sbb
or
mov
xchg
push
dec
sbbl
mov
clc
adc
int3
push
sbb
adc
pop
add
movsb
out
and
xor
push
lret
jo
out
xor
std
pop
movsl
lret
mov
and
in
xchg
movsb
push
xchg
daa
enter
lods
adc
jmp
dec
testb
jg
add
xchg
dec
dec
and
lret
aaa
insl
and
or
out
fcmovbe
insb
aas
or
xor
es
mov
lret
sub
cmp
or
jne
cmp
in
arpl
jbe
stos
enter
or
adc
faddl
sub
es
outsl
and
lcall
dec
add
mov
mov
inc
subl
test
mov
cmpsl
data16
mov
and
es
add
xor
jnp
clc
pusha
pop
adc
sbb
add
mov
js
andl
or
xor
js
fcmovbe
adc
in
cltd
sbb
test
adc
or
cwtl
xor
test
test
jo
outsl
jbe
leave
das
lods
insl
sub
in
jl
inc
daa
sub
mov
daa
xor
push
cmpsl
js
bound
test
test
in
add
xor
or
test
insb
push
mov
bound
ljmp
lcall
mov
movsb
cmc
sub
inc
mov
mov
das
je
scas
and
push
lea
insb
fisttps
stc
jbe
adc
lock
test
fsub
pop
lea
cmp
inc
pop
inc
int3
bound
mov
add
popa
repz
pop
add
cwtl
test
lods
inc
adc
cmpb
pop
sbb
adc
adc
cmp
cltd
aas
fadd
jo
pusha
cwtl
xchg
xor
test
cmp
ret
inc
popf
push
pop
or
outsb
mov
int
in
iret
mov
cld
pop
pusha
push
nop
in
idivb
sub
ja
insl
cwtl
push
xchg
adc
stos
or
or
xlat
aam
push
daa
jp
lret
stc
push
jns
adc
aas
pop
popf
jp
hlt
incb
dec
stc
shrl
pop
sti
mov
mov
cmpsl
inc
test
cli
xlat
into
and
inc
dec
hlt
and
inc
imul
push
inc
mov
add
pop
cmp
out
sub
lock
mov
aad
jg
and
push
mov
aad
cld
sub
daa
test
shr
adc
pop
mov
or
mov
loopne
cmp
xor
and
scas
lock
sbb
or
and
push
fdivr
in
sti
xor
xlat
fcoml
js
and
les
xor
mov
scas
test
addr16
inc
mov
jg
xchg
xor
std
imulb
lock
sti
push
mov
mov
or
inc
stos
xlat
or
push
sti
xor
jns
mov
xor
call
movsb
push
sub
scas
in
sub
lret
cmc
add
mov
push
cs
frstor
and
sub
mov
lods
in
xchg
mov
loop
pop
mov
popf
xchg
xchg
and
andl
pop
xchg
push
mov
inc
mov
jb
xorl
ds
fs
gs
cwtl
sarb
xor
mov
mov
clc
inc
jle
mov
jno
pusha
divl
push
lcall
into
jg
adc
ds
jg
mov
pushf
inc
push
sbb
in
repz
lret
es
ljmp
cld
jg
into
sahf
fwait
dec
xchg
xor
mov
xor
or
cmp
add
ss
mulb
jg
in
sqrtps
pop
inc
jo
xor
loop
sub
aam
pop
fnstsw
push
out
xbegin
fsubrs
push
or
fnstcw
loope
lret
fimull
dec
mov
cmpb
lahf
stos
bound
jmp
dec
sarb
dec
xor
mul
daa
jmp
jns
loopne
lret
sbb
adc
movsb
rorl
out
rcrl
dec
subl
fwait
jmp
sub
stos
pusha
push
add
pop
jnp
loope
in
dec
lret
xchg
stos
xchg
lods
and
push
add
dec
inc
push
mov
orb
sbbl
lea
pop
les
and
mov
jle
int3
fmull
ds
fadds
cmp
pop
mov
inc
xor
sbb
jb
cmp
jb
iret
imul
cmp
pop
adc
cmp
push
arpl
inc
sub
jl
xor
mov
jnp
arpl
xchg
cs
fistps
popa
ds
or
mov
popf
sub
stos
add
push
cmp
push
and
fwait
gs
dec
pop
fdivl
or
jg
cmpl
fwait
scas
sub
mov
jecxz
in
test
dec
jbe
dec
es
in
inc
fidivrl
sub
pop
mov
pop
xor
push
mul
pop
movsl
loop
cmp
push
shrl
mov
jmp
cmpsb
mov
cs
inc
pop
stos
pop
lcall
sbb
es
and
mov
inc
ficompl
mov
xchg
aam
nop
imul
out
pop
outsb
or
pushf
mov
and
or
cmp
jl
ja
ret
jle
lods
xor
cmp
mov
mov
xor
bound
dec
stc
inc
sbb
or
sarl
ret
repz
lock
pop
inc
cmp
dec
sti
or
nop
stc
adc
sbb
push
cmc
arpl
fcmove
sub
mov
jb
test
cmp
outsl
outsb
push
pop
inc
jo
cli
sub
aas
cli
in
mov
and
test
push
les
jbe
adc
in
push
or
sarl
ret
xor
mov
mov
movsb
hlt
jmp
or
inc
xor
adc
movb
add
sbb
push
push
cmp
and
pop
in
rcrl
mov
imul
aad
rorl
dec
adc
test
pop
sti
aas
test
xchg
mov
stos
ljmp
pop
shlb
xor
jmp
or
push
sbb
sarb
xchg
cmp
sub
movsl
sub
in
lods
imul
or
xor
sbbb
test
mov
je
mov
xor
xchg
jne
out
push
icebp
iret
shlb
test
pop
sub
cmp
mov
arpl
andb
cmc
movl
test
jbe
ss
inc
add
mov
adc
packsswb
test
dec
mov
cmp
hlt
rclb
push
mov
out
stos
and
rclb
icebp
push
mov
pop
in
je
ja
xchg
enter
repz
xchg
and
js
stos
xchg
pop
dec
repz
aaa
dec
push
xor
xchg
mov
inc
imul
aas
and
cmpsb
mov
cli
and
test
ds
xchg
mov
jecxz
cmpl
rcr
ljmp
mov
dec
sub
fsubrs
push
lock
inc
sbb
sub
and
scas
jnp
push
jno
pop
adc
scas
aad
lret
insl
and
aad
ljmp
fs
xor
mov
or
sahf
jmp
lock
sahf
pop
fbld
mov
sbb
adc
xchg
xor
loopne
jo
loope
in
iret
sbb
dec
shl
lahf
mov
aam
enter
pop
add
fwait
push
cli
xchg
inc
adc
add
push
jmp
imul
fsts
outsb
outsb
push
and
es
jge
mov
out
test
loop
or
push
adc
leave
lods
xchg
xor
adc
aam
xor
and
push
pop
sub
fsubs
adc
xlat
push
mov
nop
cmc
mov
imul
mov
mov
in
int3
pop
mov
inc
adc
pop
cmp
xchg
mov
gs
pop
jbe
loop
jbe
aad
in
daa
push
jp
xor
adc
mov
cmpsl
test
push
in
ret
inc
inc
dec
jb
lret
movsl
pushw
es
fadd
andl
stos
add
movsl
xchg
scas
out
mov
outsl
mov
shlb
and
fdiv
test
inc
inc
inc
jmp
in
lds
jg
dec
push
aam
mov
adc
or
rcll
cs
mov
sub
nop
xchg
inc
adc
mov
enter
loope
mov
cmp
mov
or
and
mov
shlb
les
cwtl
test
push
inc
mov
testl
and
push
out
pop
mov
sarb
sti
stc
cmp
and
push
and
cs
addr16
dec
cmp
jns
jle
xchg
inc
ret
xchg
cmp
call
push
adc
out
aad
push
sub
xor
pushf
push
xchg
fwait
lret
jno
add
out
jecxz
push
mov
out
out
outsb
add
add
outsl
jp
or
jmp
movb
and
pop
rcll
mov
cs
sub
adc
sub
xchg
das
out
push
push
push
add
cmp
xchg
push
pop
int3
rorl
xlat
push
sbb
sbb
jnp
xchg
pop
scas
or
andb
add
out
das
push
call
enter
push
xor
jno
fistpl
js
popf
jge
jmp
addr16
mov
mov
cmp
jl
mov
outsb
adc
nop
call
lods
cmc
and
inc
fwait
adc
add
ljmp
mulb
lcall
enter
cmpsl
dec
mov
shrb
enter
stos
stos
jge
leave
outsb
push
add
jno
pop
arpl
movsb
fistpll
rcr
add
mov
and
call
xchg
aaa
fisttpl
mov
jbe
ss
xor
cmp
cmovne
mov
and
jg
add
sub
push
pop
cmpb
push
int
fwait
cli
push
icebp
cmpsl
push
push
xchg
scas
call
sub
xchg
lret
movsl
popf
sbb
inc
push
mov
cmp
lock
fstpl
test
add
cltd
imul
ljmp
mov
jecxz
jbe
and
mov
mov
neg
inc
inc
in
in
mov
pop
mov
dec
movsb
and
aad
pusha
add
or
outsl
cmp
sbb
std
mov
mov
sarl
push
push
loope
in
pop
lds
push
push
jmp
inc
cmp
dec
sti
mov
ss
push
test
fisubrl
pop
inc
pop
sbb
das
push
in
shlw
arpl
xchg
ljmp
lcall
movsb
subb
fimuls
xchg
and
cli
dec
dec
mov
adc
repz
inc
data16
loop
hlt
xchg
dec
xor
ja
scas
mov
adc
jl
inc
mov
pop
ja
popf
and
pop
hlt
les
ds
pshufw
addr16
push
daa
dec
clc
lods
or
push
cltd
sub
mov
jmp
mov
mov
push
adc
js
mov
scas
push
and
idivb
mov
adc
enter
xchg
mov
or
cmp
push
xor
jg
mov
push
mov
inc
mov
pop
pop
cmp
ja
and
dec
call
or
sub
outsl
or
jp
pop
mov
and
sar
icebp
bound
inc
sti
stos
cwtl
movsb
lods
dec
xchg
sub
shr
sub
dec
jnp
fs
cli
sbb
add
mov
cli
cmpsb
inc
je
scas
xchg
imul
or
dec
sbb
popa
mov
mov
ds
lock
scas
mov
test
popa
jne
in
popf
imul
loop
jno
das
push
adc
push
adc
push
aad
mov
jecxz
xor
fiadds
xor
aaa
lret
xor
faddl
outsl
push
loop
jl
inc
inc
jns
push
and
fnstenv
aaa
pop
jl
add
leave
mov
cmp
xor
dec
sub
inc
dec
out
data16
scas
sub
or
adc
inc
xor
and
je
sub
mov
pop
neg
jge
ret
pusha
xchg
std
rcrb
inc
data16
cmpsb
jae
pop
rcrb
mov
adc
and
scas
je
and
sub
ficompl
fcoml
jmp
vmulpd
pop
mov
push
cmc
daa
mov
jne
scas
ljmp
xchg
jp
sar
add
jno
push
sub
lea
test
mov
adc
pusha
xor
jle
pushf
xchg
jmp
out
movl
movsl
out
cmp
jno
mov
stos
dec
xor
jge
ret
mov
push
lcall
popf
jmp
js
dec
pop
fdivs
fisttps
push
mov
les
xor
push
fwait
in
clc
stc
inc
inc
aam
popa
pmovmskb
sahf
xchg
nop
hlt
sub
insb
xchg
add
sahf
divl
rcll
fistl
xchg
sbb
aam
jo
push
arpl
push
inc
push
rcll
aad
xchg
dec
lahf
cmp
adc
lds
out
push
pop
mov
shrb
in
out
push
cmp
jnp
lret
fmul
jg
mov
mov
xchg
imul
es
or
pusha
iret
jmp
cli
sub
adc
shrl
aas
in
sbb
lds
pop
xchg
ds
ficoms
mov
sbb
push
stos
test
push
sbb
jmp
ds
xlat
xorb
mov
fsts
mov
jecxz
fimuls
jo
enter
adcl
mov
ja
add
jmp
int
inc
push
or
jl
stc
push
not
add
hlt
aad
in
shrl
and
jb
mov
lods
in
inc
sbb
xchg
jl
andb
fiaddl
adc
fists
loope
lods
or
push
test
in
jmp
int3
sarb
rcrl
mov
orb
and
jo
lods
push
pop
shlb
mov
jb
sub
fcoml
std
push
sbb
inc
xchg
mov
lods
mov
ss
cmpsb
sbb
aad
xor
test
adc
lods
rorl
adc
cld
bound
mov
xlat
and
arpl
scas
and
test
xor
ror
mov
adc
loopne
xchg
mov
dec
mov
jns
cwtl
push
shl
sbb
jmp
loopne
and
push
adc
add
hlt
sahf
cmp
insl
jle
inc
dec
cmc
cld
dec
rorb
rcrb
jbe
mov
sub
sub
int
out
sub
in
xor
inc
mov
mov
rorl
daa
sbb
xor
adc
cli
cmp
mov
jns
push
xor
add
sub
or
stc
or
push
movb
int
js
mov
mov
jg
sbb
lret
jo
scas
sbb
or
mov
repz
dec
pop
out
test
mov
sbb
dec
stc
push
pop
xor
pop
dec
mov
push
lret
cmp
adc
ret
add
mov
xor
pop
mov
outsb
jg
cmp
and
cld
fsts
lea
es
add
fistpl
mov
sbb
je
enter
aam
stos
mov
add
lea
push
mov
pop
loope
jecxz
adc
stos
mov
mov
loopne
out
in
push
jl
adc
lcall
cmp
out
mov
ss
popf
add
or
pop
jg
mov
mov
sub
fstps
int
xor
fnsaves
mov
add
roll
popf
push
dec
les
sbb
iret
adc
stos
add
cmpsb
mov
mov
xchg
jecxz
push
xchg
xchg
mov
pop
mov
push
les
sub
aas
std
out
cwtl
lock
inc
fsubrs
mov
test
sbb
jmp
xchg
mov
mov
shl
aam
insl
pop
loope
dec
dec
cmp
mov
xor
fidivrl
lds
ja
in
std
arpl
out
das
jmp
je
cmpsl
fists
xor
dec
mov
adcl
jno
call
adc
xchg
mov
idivl
add
xchg
push
mov
mov
mov
mov
jl
out
and
lods
stos
rcrl
jle
push
les
ljmp
sbb
mov
inc
subb
jnp
jno
je
mov
fdivrl
pop
out
movsl
inc
mov
icebp
das
into
outsl
jae
xchg
and
xor
pmaxub
movsl
mov
xchg
lcall
adc
shll
divb
leave
xor
dec
jecxz
cltd
mov
xchg
in
iret
dec
sbb
into
mov
push
movsb
ret
aad
xor
cmc
jo
or
lahf
sub
mov
xor
sbb
aad
xchg
xor
lods
jmp
xchg
mov
mov
push
adc
or
mov
pop
xor
jns
jg
fmuls
ss
in
cli
daa
sub
insb
inc
int
inc
aaa
loope
cmp
push
fisttpll
jnp
daa
sub
test
jl
xchg
and
pusha
dec
and
lods
push
ficoml
mov
inc
cmp
pop
add
push
sbb
dec
dec
scas
shrl
pop
stos
mov
sar
push
or
in
lcall
add
xchg
mov
jp
push
add
mov
inc
orb
adc
dec
gs
cmp
xlat
mov
or
mov
mov
out
fsubs
jno
scas
push
push
pop
lock
loopne
mov
sub
jge
add
sub
imul
fnstsw
ja
aas
pusha
sbb
cmp
and
popf
pushf
imul
ss
push
lahf
movb
pop
loop
inc
mov
sbb
mov
aas
cli
fsubrs
js
pushf
mov
sahf
shrl
adc
dec
subl
inc
dec
loop
movsb
dec
add
add
je
imul
cwtl
add
adc
fbstp
hlt
loop
and
mov
mov
dec
repz
rorl
rolb
jle
jo
sti
int3
xlat
movsl
icebp
mov
dec
and
inc
inc
es
sbb
ret
xchg
mov
inc
inc
fwait
mov
push
pusha
sub
cmp
jg
dec
cmp
xchg
jl
mov
je
lods
ja
test
insl
push
xor
sahf
add
inc
jae
test
jnp
insl
lret
imul
pop
push
dec
xor
faddp
in
cmc
movb
out
int3
sub
dec
arpl
inc
je
push
mov
cmp
je
addl
adc
dec
xchg
dec
loop
and
mov
jmp
xor
push
roll
pop
cli
in
jl
mov
mov
sbb
mov
daa
cmp
xor
clc
xchg
fbstp
adc
ljmp
adc
out
mov
push
add
add
jmp
shl
sub
sbb
mull
push
out
pop
aas
fmuls
imul
stos
mov
lea
add
jno
mov
pop
jp
fisubs
xor
push
popa
mov
stos
mov
cli
div
adc
mov
add
es
dec
cmp
and
fidivl
or
jns
xchg
dec
mov
mov
cltd
mov
test
jecxz
dec
sti
outsb
push
lcall
or
cmp
data16
cmpsl
jle
mov
push
pusha
inc
push
call
mov
inc
xchg
in
sub
mov
js
dec
sti
ja
adc
in
test
clc
push
gs
mov
jp
or
mov
int3
call
mov
stc
pop
and
mov
cmpsl
cmpsl
dec
ret
lret
repnz
dec
andl
cmp
push
push
dec
addr16
out
clc
daa
xor
or
out
sbb
std
or
cmp
aaa
mov
hlt
test
or
lcall
nop
rcrb
and
std
ja
test
jl
dec
and
xchg
sbb
std
fwait
stc
xchg
push
in
add
mov
imul
jp
inc
repnz
int
mov
xor
aaa
repnz
fimull
mov
xor
cld
sahf
xor
lret
imul
shrb
sbb
push
hlt
jno
dec
cwtl
fnstenv
rolb
adc
dec
mov
mov
pop
xor
add
xor
xchg
push
pop
push
push
adc
outsb
mov
into
add
ficoms
iret
in
icebp
bound
mov
adc
adcl
cli
das
imul
jl
inc
adc
push
cmp
pop
cwtl
int3
test
sub
shrb
iret
ja
or
dec
xor
outsb
pop
cmp
sub
and
inc
mov
cmp
sub
jmp
rorb
int
cmc
xorb
jbe
adc
call
sbb
xlat
mov
mov
jg
sarl
dec
pusha
pop
stc
and
pop
daa
cmc
mov
jmp
inc
pushf
test
mov
fwait
push
and
jb
outsl
rol
mov
xor
fcompl
mov
mov
adc
cwtl
out
inc
ja
cmp
pusha
xor
lahf
call
inc
push
mov
or
insl
push
pop
popf
xor
jmp
lods
mov
andb
or
outsb
cli
push
push
pusha
mov
jg
repz
iret
jb
negl
std
dec
cmp
push
cli
jno
sub
leave
shll
lds
mov
xor
inc
mov
add
dec
icebp
popf
cmp
jle
mov
and
inc
pushf
pusha
loop
ljmp
mov
imul
xor
pop
push
ret
pop
jb
rcrb
jae
adc
pop
cld
jno
icebp
jno
and
jl
adc
dec
sahf
mov
sub
mov
out
int3
xchg
popa
sub
testl
fs
jo
je
and
jno
outsl
inc
mov
neg
inc
adc
inc
mov
dec
cmc
dec
ja
sbb
xor
nop
daa
mov
pop
cs
mov
test
ror
stos
adc
and
dec
test
push
add
sbb
movsl
shll
out
dec
js
dec
pop
sub
cmp
ret
jle
sbb
lods
icebp
dec
or
fisttpl
xchg
cmp
fistl
out
lret
xchg
xlat
iret
nop
push
fdivrl
fnstenv
mov
fs
iret
outsl
cli
mov
mov
mov
cmpsl
pop
outsb
or
ret
mov
adc
es
aas
inc
stos
outsb
xor
hlt
cs
mov
mov
xor
enter
test
pop
sub
xor
ja
jns
mov
cltd
adcl
lds
xor
jg
les
ss
hlt
fcoms
cltd
adcl
fidivrs
js
fistpl
es
xchg
cmpsl
ss
pop
cmpb
cmpsb
sbb
mov
aaa
sbb
int
jns
add
fisubl
mov
cmp
ja
call
call
repz
xor
movsb
and
negb
je
int3
fs
mov
jl
fisttps
sbb
jmp
scas
jo
xor
xor
mov
fsubr
mov
xchg
stos
rclb
push
xchg
pop
data16
sbb
xor
pop
aam
pusha
and
fldt
aaa
sub
mov
insb
loop
out
dec
mov
xchg
pusha
in
leave
dec
and
popf
fiadds
insb
movsb
sbb
fstl
add
cmp
mov
push
inc
and
mov
xchg
cmp
push
sub
add
and
enter
and
mov
in
hlt
scas
ret
rcll
lcall
mov
cmp
pop
xor
inc
mov
push
lret
jae
loope
lahf
push
sub
fwait
cmc
push
pusha
loopnew
popf
aam
inc
stos
dec
cmp
adc
pmullw
mov
pop
in
or
jnp
mov
and
mov
rcrb
add
data16
arpl
in
sbb
movsl
mov
mov
lcall
dec
push
add
ja
sahf
sbb
dec
mov
mov
add
pop
push
imul
addr16
outsl
adc
pusha
iret
add
adc
repz
cmp
mov
mov
imul
sub
add
lsl
push
jl
pop
mov
stos
mov
dec
xchg
filds
inc
outsb
es
fs
mov
pop
adc
lret
daa
test
fisttpl
fisubrl
pop
xchg
jg
cmp
adc
or
and
test
push
stos
mov
out
inc
mov
stc
in
or
sub
xchg
mov
lcall
sub
add
out
xlat
push
xlat
pop
ret
jnp
and
push
push
pop
incl
int
sbb
pop
fs
jbe
ffreep
scas
loope
stos
xor
push
or
mov
test
jmp
jp
or
sbbb
aam
fisttps
lahf
loopne
adc
add
dec
push
lret
stos
xchg
or
clc
loop
daa
fstps
jns
lds
popa
pop
or
sahf
pop
pop
shl
pop
sbb
loop
lret
dec
dec
dec
ds
pop
stos
mov
pop
cli
sbb
test
add
xor
fwait
pushf
cmp
and
adc
jne
leave
dec
test
or
mov
mov
cmp
insb
les
cli
mov
add
mov
or
add
aas
cs
and
bound
pop
rcll
inc
sub
sbb
jbe
jo
cli
pushf
sbb
les
lret
jmp
int
mov
mov
out
mov
outsb
dec
push
xchg
adc
xchg
inc
dec
iret
xchg
test
xor
sahf
in
ja
cltd
mov
mov
and
cld
jne
mov
out
jmp
fnstsw
dec
ret
divb
insl
mov
stos
ljmp
dec
movsl
adc
fistps
sti
stos
inc
cmp
adc
gs
ss
ret
pusha
lea
es
or
jmp
push
in
ret
lock
stos
ljmp
and
stc
lahf
jp
sahf
inc
cld
ret
sub
fdivl
ret
xor
and
and
fidivs
mov
sbb
or
or
rcll
test
mov
lds
mov
cwtl
mov
adc
enter
aaa
stos
xchg
or
fdivs
divl
sub
xor
aad
dec
out
mov
inc
popf
or
push
int
mov
push
ret
shl
das
adc
xchg
scas
addr16
popf
and
push
rorb
pop
loopne
aam
push
mov
xor
adc
cltd
or
xchg
addr16
pop
mov
lcall
enter
dec
xor
push
in
enter
arpl
inc
loopne
jbe
mov
dec
shufps
shll
inc
iret
iret
dec
gs
mov
mov
enter
test
mov
and
iret
mov
cmp
pop
insb
inc
pop
jge
inc
mov
xor
std
adc
daa
push
mov
push
xchg
inc
addr16
mov
arpl
jle
rcrb
popa
xor
jecxz
movsb
inc
pushf
jbe
dec
xchg
push
push
xchg
fimull
pop
mov
mov
mov
fidivrl
xchg
sub
lcall
div
xchg
mov
adc
jnp
cmp
lods
shrb
and
xor
lock
inc
sahf
cld
xchg
adc
mov
jne
lea
sahf
les
es
aam
cld
leave
das
push
push
shlb
mov
outsl
sub
inc
mov
iret
mov
or
mov
mov
inc
mov
int3
lock
gs
xchg
daa
sub
adc
mov
xchg
js
inc
dec
inc
mov
mov
mov
arpl
add
lea
pop
or
xchg
and
imul
ficoml
inc
stos
sub
hlt
iret
push
pushf
cmpsl
test
aas
cmp
test
inc
call
mov
dec
mov
mov
jae
shll
mov
jge
popa
add
xchg
cmpsl
mov
lahf
cltd
jbe
xor
add
cmp
hlt
or
popf
in
daa
aaa
fidivrs
adc
push
mov
stc
dec
in
jne
jmp
clc
aad
sub
mov
mov
cwtl
mov
fsubrs
pop
mov
idivb
or
enter
inc
sbb
jmp
mov
add
lods
outsl
fwait
and
lahf
icebp
lcall
xchg
push
popf
and
repnz
int3
sti
bound
xchg
jmp
cmp
push
test
cwtl
in
cwtl
xor
mov
cmp
test
cmp
mov
pop
int3
data16
xchg
notb
leave
stc
stos
xor
add
jg
addr16
sbb
es
xorl
xor
rorb
out
or
push
aaa
pushf
out
xor
popf
and
cltd
inc
jecxz
push
cs
sub
sub
cmpb
lods
cmp
imul
aad
xchg
fsubrs
mov
fstpt
cmpsb
cmp
popf
pop
imul
xchg
ret
movsl
and
xor
cmpsl
outsb
imul
adc
ja
popf
enter
inc
dec
inc
add
scas
je
out
cmp
shlb
rcll
xor
and
roll
stos
adc
loop
outsl
push
into
notl
scas
sub
int
and
leave
rcrl
fistl
cwtl
dec
je
imul
sbb
or
and
enter
ret
adc
or
popa
es
fisubl
xor
lds
pop
jle
mov
dec
adc
cld
out
pop
test
jg
mov
dec
lock
in
fs
scas
cmpb
popl
sbb
repnz
adc
test
shrb
and
push
dec
int3
xchg
imul
xchg
cld
xor
pushf
sub
fmulp
int3
dec
mov
ja
cmpsl
jecxz
xchg
call
jg
icebp
or
dec
sub
mov
cmp
or
cld
pusha
fwait
inc
hlt
test
mov
inc
lods
jl
daa
repnz
loope
rorl
lret
cld
and
push
in
es
pop
jne
gs
jp
push
mov
adc
lcall
pop
and
sbb
inc
pop
fcmovb
add
xlat
in
push
notb
lea
xor
sbb
jne
cmpsb
mov
sbb
scas
jl
lds
divl
shlb
sbb
fcomi
cmpsl
scas
stc
stos
call
pop
ds
aam
push
push
push
pusha
mov
push
std
popa
pop
mov
inc
sbb
push
xchg
das
fcompl
popa
shl
mov
repz
rolb
cld
loopne
mov
std
jno
mov
popf
fs
sbb
jmp
mov
loope
mov
ss
imul
ffreep
jmp
into
leave
and
stc
repnz
mov
out
ss
xor
into
pcmpgtw
ja
fcom
jl
or
repz
or
outsb
in
cmpsb
movsb
cld
inc
movsb
dec
or
popf
pop
popf
xchg
mov
adc
sahf
fwait
aad
mov
inc
cmpb
jbe
loopne
pop
push
sahf
or
push
fisubrl
repnz
mov
xlat
fwait
pop
gs
and
lcall
rcrl
cmpsb
add
vandps
orl
mov
xchg
out
push
shrl
sbb
xchg
or
jnp
idivb
xchg
jo
add
enter
xorl
int3
xor
add
mov
movsb
nop
je
das
jg
adc
or
xchg
add
inc
mov
pop
sbb
or
addb
pop
xor
mov
jno
enter
sarb
and
sub
inc
gs
xchg
mov
sub
inc
mov
cli
in
stos
pop
insb
jecxz
and
mov
add
ljmp
fs
rcl
cmc
jb
xor
mov
fwait
pop
adc
pop
jne
or
jge
push
insl
imul
xlat
or
imul
xchg
fildll
push
imul
icebp
ret
xor
cwtl
and
test
insl
push
ret
dec
scas
outsb
icebp
aam
lds
ret
sub
test
out
xchg
xchg
dec
xchg
jae
roll
adc
inc
les
inc
sub
push
xor
jb
pop
jno
andnps
mov
adc
mov
jge
subl
scas
push
dec
lea
andl
xchg
popa
aaa
lods
mov
push
test
or
leave
dec
push
mov
or
in
cwtl
ret
addr16
jb
mov
fistpll
xchg
jmp
add
fdivr
push
repz
sbb
adc
lret
sub
loope
dec
inc
sti
pop
repz
inc
data16
mov
jg
jmp
es
jp
bsr
push
les
push
arpl
dec
xchg
fwait
push
pop
or
scas
scas
call
or
xor
or
mov
cltd
insb
movsl
in
cmp
push
mov
dec
aam
fnstcw
push
mulb
cmp
pop
enter
out
ss
mov
iret
push
dec
lret
fdivrs
filds
adc
lcall
jo
stc
mov
jbe
dec
test
repz
enter
or
jle
fisubs
loop
out
dec
xchg
inc
out
add
jle
mov
jge
cmp
xchg
pop
push
test
test
adc
pusha
jmp
xchg
or
jnp
rorl
call
mov
cmp
popf
sub
add
mov
cmpsl
dec
jne
jo
add
inc
inc
mov
push
sbb
ret
sahf
cmpsb
stos
inc
cmp
pop
or
lcall
mov
or
fstl
cmp
mov
scas
pop
cmc
ret
pop
sbb
jge
jecxz
nop
mov
ljmp
mov
lcall
movsb
or
mov
lret
les
in
lods
sub
enter
sub
xlat
xchg
sbb
mov
out
subb
add
sbb
icebp
rcl
mov
std
mov
mul
pop
cwtl
pop
fidivrl
bound
xor
mov
xor
add
insb
jecxz
in
dec
pusha
jmp
pop
push
xor
push
sbbb
mov
mov
dec
sbb
mov
add
dec
pop
pushf
mov
inc
dec
sar
pusha
std
mov
stc
and
inc
in
mov
scas
push
jnp
pop
jecxz
ret
cmp
or
jle
out
loop
arpl
fisttpll
rcl
xchg
cld
sbb
in
nop
xchg
sbb
inc
lcall
imul
mov
push
push
ficoms
inc
int
or
lods
jecxz
jbe
mov
test
sub
filds
aam
aam
sahf
je
push
ret
insb
xor
fildll
mov
test
jmp
lret
stos
call
pop
and
push
in
ret
push
in
daa
jge
xchg
push
mov
adc
push
xchg
repnz
pop
outsl
imul
mov
js
jl
xor
jl
mov
push
xchg
cmp
sub
pop
sub
roll
scas
push
mov
push
add
push
in
jle
xchg
jb
dec
aaa
bound
popa
add
stc
xchg
and
dec
aam
loopne
xchg
addr16
xor
mov
fwait
cmp
in
data16
daa
sbb
jp
sub
decl
dec
inc
jle
fdivrs
sbb
add
lret
ja
xchg
outsb
mov
pop
out
dec
or
jo
xor
fidivl
xor
movsb
fwait
imul
mov
or
cmp
sahf
mov
aas
mov
lea
mov
jne
addr16
push
cmp
adc
gs
popa
dec
add
test
and
jae
ljmp
aaa
mov
faddp
stos
push
repz
dec
sub
mov
lcall
jae
aad
and
int
testl
out
cmpsl
push
test
lock
xor
pop
push
imul
test
push
test
popa
adc
fcmovb
or
out
pop
push
xchg
cmp
ffreep
les
repz
sbb
xor
jbe
cmc
out
sub
lcall
inc
test
pop
outsl
shl
lcall
mov
push
dec
out
xor
repz
add
xchg
adc
jp
ret
adc
mov
ret
rorl
fcomps
cli
insl
shlb
dec
lock
mov
and
dec
jb
dec
mov
sahf
mov
jmp
mov
xor
cmp
mov
xor
sub
push
js
sbb
jae
mov
xor
cmp
jp
pop
xchg
mov
pop
in
xchg
push
pushf
push
shl
lods
test
jno
lds
xchg
mov
jbe
push
repz
mov
popa
mov
int3
outsl
fdivl
cmp
ret
adc
inc
rcrl
jne
in
dec
jnp
shlb
push
pop
in
popf
mull
psrlq
clc
add
dec
ss
fists
cwtl
loopne
out
pop
das
cli
ffreep
adc
cld
aam
dec
imul
mov
mov
adcb
or
ljmp
lock
cwtl
pop
xorl
rolb
ds
es
dec
in
loop
fld
ret
xchg
or
divl
shll
mov
rorl
icebp
fwait
mov
inc
pop
test
lret
inc
insl
cmpsl
lret
jae
mov
mov
jne
inc
mov
rcll
movsb
les
or
adc
sub
jg
push
lods
ds
cmpsb
dec
mov
inc
push
int
stos
mov
int
fnstenv
and
in
fstp
mov
ficoms
hlt
faddl
cmp
inc
adc
repz
ret
mov
dec
outsb
xchg
xchg
lcall
test
jg
xlat
cld
popf
lds
mov
inc
shll
mov
lret
popf
imul
movsl
das
clc
xchg
jg
int
scas
bound
fsub
cltd
mov
in
jb
das
shll
sbb
dec
sar
loopne
dec
push
ljmp
sub
cld
and
sbb
lret
fists
push
loopne
out
int3
sub
mov
outsb
pop
lods
xchg
cmp
into
mov
cmp
pusha
sbb
std
fisttps
aas
jno
iret
mov
pushf
sbb
adc
std
lret
inc
and
fsub
out
fs
jno
sub
adc
aas
nop
lcall
sub
call
add
jbe
sub
ja
sti
adc
insb
mov
cli
aad
add
call
std
arpl
out
push
xchg
lcall
mov
jl
roll
sbb
sub
push
mov
dec
lods
mov
mov
mov
inc
movsl
nop
push
adc
jge
stos
idivl
lock
aas
gs
ret
imul
int3
clflush
stos
je
xchg
add
mov
and
push
sub
movsb
lods
mov
xchg
insb
cmp
jb
jle
clc
xor
mov
dec
adc
fyl2x
dec
add
mov
ret
jns
inc
mov
jg
jle
fidivrl
movsl
rolb
into
call
and
cmp
or
and
adc
fstl
sub
popf
into
inc
xchg
cwtl
dec
add
imul
push
pop
int
out
pop
mov
xor
jb
test
push
mov
idivb
insl
fmuls
repnz
imul
inc
roll
or
sub
inc
and
adc
shl
mov
arpl
cmp
pop
arpl
lods
ret
sarb
push
emms
scas
loopne
clc
cmc
and
aaa
dec
pusha
pop
out
lcall
imul
mov
shrl
icebp
fwait
aaa
in
rcll
cmc
cld
enter
addr16
lods
jno
into
sbb
inc
aam
into
jmp
jecxz
loope
and
mov
sahf
lahf
cwtl
flds
scas
stos
js
test
das
lods
cwtl
fstl
xchg
test
icebp
shlb
leave
push
cwtl
pop
stos
push
add
sbb
inc
mov
jg
ja
movsb
and
repnz
ret
adc
stos
add
test
mov
lock
xor
xchg
pop
movsb
mov
mov
les
lods
icebp
fs
daa
movsb
mov
rcll
popa
mov
xlat
cltd
pop
stos
outsl
push
imul
and
or
cltd
xchg
sarb
or
cli
lahf
setne
loop
mov
fistps
xchg
lock
xchg
mov
jl
dec
inc
cltd
repz
push
xchg
push
xor
into
jg
insl
icebp
push
mov
lcall
loopne
xor
and
mov
inc
sub
lret
or
jae
insb
jne
add
push
aad
push
popa
aad
test
das
pop
mov
adc
fnstcw
add
jo
incl
cwtl
pop
cmp
push
mov
mov
inc
push
insb
push
mov
fildl
arpl
aaa
inc
mov
sbb
mov
pop
sbb
shrl
inc
push
in
inc
and
adc
xchg
or
addr16
sbb
jo
cmp
push
mov
push
inc
xchg
sub
out
imul
mov
jmp
in
and
jb
push
add
cld
js
inc
xor
pop
cmp
pop
add
cmp
test
cmp
aaa
push
mov
xor
adc
mov
dec
pop
pop
mov
frstor
or
movsl
pop
sbb
push
adc
cmp
fcoml
xchg
push
or
loopne
andl
push
and
ret
aaa
cmpsb
leave
push
mov
pusha
aas
pop
adc
rcll
imul
clc
xchg
add
dec
or
lahf
xor
cmpsl
lods
lahf
add
or
ss
insl
fprem
sbb
jmp
push
stc
adc
or
out
shlb
mov
out
fisubrl
lahf
insb
int3
or
rorb
mov
push
sbb
cmp
sbb
cli
inc
mov
pop
call
dec
lods
sbb
lret
jecxz
in
xchg
sub
stc
stos
xor
test
pop
sub
jmp
xor
enter
jne
pop
pop
movsl
pushf
stos
negl
shl
je
dec
loop
sub
rol
mov
pop
das
lock
rclb
sbb
ficoml
dec
jmp
roll
pop
data16
pop
inc
xchg
cmp
pop
xorps
sub
shrb
xlat
sub
pop
sbb
cs
int3
data16
sub
cmp
cld
into
test
mov
ljmp
or
add
mov
mov
fisubs
jp
adc
cmp
push
fcmove
js
mov
push
sbb
divb
rolb
popa
bound
adc
cmc
dec
or
mov
ss
mov
pop
push
js
push
enter
jle
pop
test
pop
add
jle
xchg
pushf
mov
aas
rolb
dec
add
pop
jle
xchg
push
sbb
popf
push
mov
mov
loopne
test
out
les
adc
loopne
sub
stos
dec
mov
add
in
aam
cmc
outsb
movsb
lcall
mov
xchg
les
cmp
mov
test
mov
xchg
push
into
xchg
sbb
in
dec
shlb
and
test
dec
icebp
inc
or
roll
test
nop
inc
ja
aas
jp
inc
pop
popa
pop
mov
xchg
ljmp
and
xchg
cmpsb
test
add
push
and
mov
push
call
jne
xchg
jl
sbb
test
push
daa
and
stos
dec
and
mov
mov
ljmp
fisubrl
imul
sub
stc
flds
lahf
lret
mov
fimull
mov
ror
fisttps
sub
aaa
ds
lods
cmp
in
cltd
insl
cwtl
pop
stc
jl
in
mov
sub
push
loopne
rclb
dec
shll
dec
lods
sub
sahf
inc
mov
fildll
dec
mov
fwait
jge
adc
mov
mov
ja
mov
cwtl
adc
or
add
or
add
jmp
xor
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
rol
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
xlat
