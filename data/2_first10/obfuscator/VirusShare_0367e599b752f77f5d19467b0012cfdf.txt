rolb
dec
and
leave
and
fcoml
sub
aaa
ja
popf
push
sub
xor
mov
xor
in
inc
mov
add
or
shrl
dec
jmp
mov
mov
pop
shr
lret
ss
int
fstp
test
adc
arpl
mov
mov
imul
cs
clc
cwtl
scas
rolb
xor
gs
xchg
adc
fcmovnu
out
mov
test
jnp
idiv
pop
jne
mov
lahf
mov
std
imul
sbb
std
popa
pushf
cmp
stos
mov
mov
fistpl
sub
ret
repnz
inc
cwtl
jmp
pop
sub
mov
and
dec
outsb
call
cmc
xchg
bound
call
lret
and
testb
add
mov
cmp
cmp
subl
jl
mov
data16
add
es
std
fcmovb
push
hlt
xchg
xlat
lcall
jnp
xlat
cltd
es
pop
pop
sub
mov
imul
inc
jecxz
hlt
xchg
sbb
or
push
test
or
xor
test
inc
popl
mov
in
aad
push
lds
mov
pop
sbb
in
in
push
push
adc
cmp
sbb
mov
jno
jp
sarb
cmp
je
xor
dec
out
out
out
orb
push
ja
rep
and
mov
stc
jnp
js
test
push
pop
xor
jge
add
ljmpw
fs
cli
es
add
outsb
scas
je
jle
pop
lods
sub
and
or
stos
dec
outsb
call
push
jmp
addr16
mov
jnp
shll
and
add
jmp
push
mov
fs
jb
scas
adc
jno
xorb
arpl
aaa
jnp
jle
xchg
push
ret
stc
btr
dec
push
movsb
dec
cmp
inc
ds
cwtl
cmp
jecxz
mov
test
out
jns
enter
mov
mov
dec
mov
hlt
dec
dec
icebp
imul
push
ret
out
sarl
test
mov
out
inc
aad
ret
shrb
xchg
sbb
mov
adc
lret
int3
and
icebp
jmp
jb
mov
or
mov
pop
mov
xor
jae
sarb
cwtl
pop
stc
mov
adc
popl
lock
cmc
xor
or
mov
cmc
test
push
iret
add
lahf
enter
je
cmp
cmp
push
mov
icebp
pop
fs
xchg
dec
ljmp
lds
cmp
in
jl
push
pop
add
test
xlat
pop
xchg
jb
mov
cmpb
and
mov
or
add
icebp
or
xchg
je
sub
cmpsb
insb
adc
stos
sbb
sbb
into
sbb
pushf
mov
lods
jo
xor
mov
push
loop
and
and
fcompl
pop
ljmp
test
xchg
rcrb
sub
fsts
and
cmpsb
jb
cli
mov
and
ss
repz
pop
jo
mov
scas
jle
int3
or
sbb
stc
mov
cmc
cmpsl
loopne
xlat
push
loop
pop
mov
sbb
lds
mov
mov
fidivl
jbe
in
jecxz
movsl
dec
pop
stos
mov
inc
jp
xchg
pop
popf
movsl
stc
sbb
inc
cltd
cli
rorb
xchg
cld
add
add
dec
push
cmpsb
cwtl
push
sbb
fildll
lahf
in
pop
xchg
push
add
pushf
pusha
shr
dec
cmc
test
jmp
sbbb
das
movsb
add
repnz
out
aam
ja
add
add
or
ror
jne
shl
aaa
mov
and
and
in
aaa
lret
xor
jae
fwait
cwtl
sahf
adc
js
pop
and
adc
pop
xchg
fucomip
mov
hlt
sub
sbb
and
rorb
aad
xor
fs
push
test
fwait
mov
aad
push
xor
sbb
scas
das
jbe
lcall
push
int3
adc
in
stos
dec
mov
xchg
fdivl
pop
int
pop
int
pop
xchg
jmp
loopne
out
std
jns
inc
push
sbb
into
into
repnz
das
inc
popf
adc
jl
jmp
inc
test
adc
cltd
adc
mov
jp
push
mov
push
jl
stc
inc
fcomi
addr16
mov
repz
add
jg
outsl
dec
fsubrp
fistl
or
add
add
cmp
inc
jg
repnz
dec
inc
fdivrs
xchg
insl
dec
and
dec
lods
dec
mov
cmp
ret
lret
pop
movsb
mov
mov
stos
jo
out
add
pop
mov
int3
xchg
pop
inc
xor
adc
popa
jnp
movsl
and
stos
shlb
stos
pop
push
mov
push
jnp
sub
cmpsl
pop
dec
jne
clc
mov
testb
push
scas
icebp
xchg
test
fwait
cmp
inc
popa
fcmovnb
shlb
movsl
push
jb
mov
enter
aaa
jl
dec
movzbl
mov
int
jg
repnz
ljmp
pop
pop
xchg
imul
mov
xchg
sbb
pop
jmp
sbb
repnz
mov
scas
inc
scas
or
mov
out
mov
adc
and
psubsb
out
sbb
mov
or
mov
ret
shll
mov
cwtl
je
rorl
jle
lret
into
xchg
jge
imul
ja
test
pop
jae
add
test
test
jnp
jns
xor
push
pop
nop
push
test
pop
nop
inc
dec
lea
push
or
pop
push
jge
jnp
shl
pop
je
add
je
jbe
and
cmc
test
or
jmp
jmp
call
push
jle
jnp
shl
pop
cmp
stc
stc
add
mov
jle
add
cmp
push
add
dec
inc
cmc
test
push
add
push
pop
pop
clc
cld
push
sub
pop
cmc
mov
xchg
cmc
neg
neg
add
jle
push
or
pop
stc
push
add
mov
pop
shl
sar
test
cld
lea
mov
stc
jmp
jno
lcall
pushf
push
mov
inc
cmp
std
mov
add
sbb
mov
idivl
loop
ss
mov
lods
inc
test
push
mov
into
dec
out
test
je
jmp
in
jae
adc
xor
repz
clc
lods
mov
aas
jno
cli
rorb
dec
std
sub
jo
sbb
daa
push
add
pop
push
push
push
mov
pop
pop
pop
push
call
dec
mov
sbb
pop
cmp
mov
mov
mov
std
mov
fstpt
push
mov
xor
pop
cmp
js
push
mov
pop
cmc
push
xchg
pop
push
pop
xchg
pop
push
movzbl
jnp
and
jge
jno
push
fnop
pop
push
sub
pop
rol
jle
push
jo
cmp
pop
test
and
ror
nop
stc
nop
loop
pop
cmp
stc
cld
sub
jmp
lods
mov
ja
xor
xchg
test
sbb
xchg
je
mov
or
subl
mov
and
cmp
cmpsb
add
pusha
sub
jbe
int
std
into
int
add
inc
sbb
dec
push
enter
std
adc
sub
xchg
clc
test
cmpsb
cli
hlt
mov
adc
cmp
xchg
pop
and
lahf
fwait
daa
faddl
adc
adc
inc
xchg
adc
pop
jmp
lret
add
pusha
push
mov
jne
jne
push
test
pop
clc
ja
cmp
test
add
mov
xchg
jmp
loop
jecxz
pop
lds
inc
iretw
cmc
dec
xorb
mov
inc
loop
inc
or
dec
add
adc
leave
push
push
push
shl
pop
pop
pop
jnp
push
push
add
pop
push
or
pop
sub
xor
fnop
cmc
loop
pop
jbe
push
shl
pop
push
call
sbb
cmpb
cmc
sbb
inc
and
mov
ficoms
dec
xchg
jno
jl
mov
pusha
mov
fbld
mov
lret
mov
jno
pusha
pop
pusha
mov
mov
jp
dec
icebp
ljmp
ljmp
push
mov
stos
lock
repnz
xchg
xchg
fisttpll
sbb
fmull
cmp
jb
add
lret
mov
outsl
jecxz
xchg
stos
or
xchg
mov
push
mov
xor
dec
rcrl
lea
jne
mov
hlt
and
lods
add
mov
or
enter
out
sub
cmp
dec
cmp
dec
xchg
cmp
test
inc
and
jae
rol
jbe
or
test
xchg
ljmp
push
pop
or
or
or
mov
movsb
cmp
jge
xor
mov
mov
lret
mov
push
mov
add
jb
fnsave
jecxz
sub
adcl
mov
push
or
dec
test
test
add
and
repnz
cld
rcrb
xchg
pop
andl
ljmp
mov
inc
mov
inc
out
sarl
sahf
pop
push
test
lahf
xor
jno
lea
int
into
clc
mov
and
adc
fcoms
add
shll
cltd
imul
dec
subb
xor
and
adc
je
js
sbb
or
hlt
dec
or
popa
inc
pop
xchg
mov
and
lods
jo
cwtl
jno
and
mov
jnp
adc
cli
maxps
sbb
hlt
dec
scas
cmp
lcall
sti
mov
mov
mov
xor
or
push
in
sub
aad
or
out
cs
sbb
shl
adc
stc
fidivrl
popa
lods
loop
or
pop
or
shll
fstpt
jno
mov
push
and
dec
jecxz
dec
lret
lret
nop
out
xchg
fnstenv
stos
cmp
lods
aam
mov
fisubrs
fildll
jp
cs
adc
sahf
xchg
rolb
or
aaa
testl
lret
mov
mov
jbe
cmc
jbe
movsl
popa
push
movsb
adc
imul
leave
mov
mov
xor
xor
sbb
and
dec
and
add
pop
lock
xchg
push
or
xchg
xchg
repnz
jge
imul
test
push
xchg
cmp
shlb
es
sbb
fbld
in
popa
shlb
clc
inc
or
add
sub
adc
sahf
adc
pop
pop
mov
shrl
loope
ret
lret
inc
pop
pop
or
xchg
xchg
mov
adc
int3
jne
sbbb
push
in
pop
xchg
pop
inc
xchg
push
jle
stc
add
mov
in
inc
dec
out
repnz
jg
das
je
sub
xchg
fbstp
fsubl
push
mov
xor
sub
test
dec
outsl
in
jo
xlat
jno
pusha
xor
mov
outsb
in
jo
xlat
jno
dec
pushf
xchg
into
outsb
in
jo
addr16
clc
push
adc
xlat
jno
gs
test
outsb
in
jo
xlat
jno
inc
pop
push
push
lds
pop
push
cmpsl
inc
push
subl
iret
call
mov
xor
xor
mov
mull
jle
and
inc
or
mov
jne
mov
xor
pop
mov
pop
or
repz
mov
xchg
mov
jge
jp
sarl
stos
lret
mov
push
push
dec
pop
icebp
cltd
add
jb
fdivl
sub
and
arpl
mov
pop
mov
cmp
mov
fs
cs
in
adcb
xchg
mov
shrb
fimuls
pop
leave
lret
lods
or
adc
std
inc
out
xor
xor
test
cmp
and
jnp
jp
or
sub
mov
shll
rcrb
fnsave
dec
aaa
xchg
mull
cwtl
int3
push
or
mov
jmp
test
popf
test
enter
cltd
loop
cmpsb
or
cmpsl
dec
or
lods
jo
xchg
jno
mov
js
xor
sbb
cmp
scas
cmp
cmp
inc
mov
lcall
push
mov
push
push
xor
push
xchg
push
ds
adc
adc
xchg
std
sub
sbb
shrl
mov
inc
popa
cmc
xor
inc
dec
or
pop
hlt
lret
fildl
mov
pusha
ret
popa
rorb
fstl
fimuls
dec
lret
lret
nop
aas
mov
fnstcw
lods
aam
xchg
aad
lcall
fwait
lret
sbb
xchg
mov
hlt
js
pop
jbe
pop
lret
add
mov
jbe
hlt
jbe
in
pusha
push
movsb
pop
cmp
imul
leave
mov
xor
sbb
or
and
add
jmp
sub
fstl
cmpsl
icebp
ficoms
mov
xchg
jne
cwtl
cmpsb
cmp
cmpsl
cmp
cmp
or
and
mov
daa
fucomip
adc
in
leave
in
test
or
popa
call
dec
popf
adc
xchg
xchg
popa
std
xchg
pop
jle
mov
sbb
loope
or
inc
pop
lahf
sub
ret
int
lods
into
adc
adc
je
lret
push
sub
inc
xchg
push
push
jle
stc
dec
aas
cli
mov
in
subb
das
je
sbb
fistps
push
and
push
mov
mov
add
rolb
xlat
jno
xchg
pop
test
sbb
jo
xlat
jno
xchg
pop
test
push
outsb
in
jo
xlat
jno
nop
pop
test
adc
jo
xlat
jno
lea
in
adc
jo
xlat
jno
mov
push
or
inc
push
xor
test
lock
iret
lcall
add
ljmp
cld
sbb
and
loopne
lock
mov
inc
mov
xor
pop
sti
push
pop
or
inc
or
repnz
mov
fsubl
jge
ret
mov
inc
stos
lret
mov
push
dec
dec
pop
icebp
loope
bnd
jae
sub
repz
mov
movsb
mov
cmp
cld
in
in
jbe
in
sbb
adcl
or
xor
push
push
cmpsl
enter
mov
adc
adc
std
inc
out
das
out
mov
xor
outsb
cmp
and
jp
inc
jnp
ret
jecxz
call
hlt
shlb
sbb
fnsave
xchg
aaa
xchg
aas
and
call
sub
mov
inc
popf
test
adc
cmc
loope
mulb
push
xchg
dec
lods
add
jno
add
mov
ja
xor
add
bound
arpl
mov
cmp
mov
shll
push
popf
xor
sbb
jl
push
xchg
popf
cmp
adc
sub
sub
jne
sar
outsb
mov
inc
popa
cmp
dec
or
mov
mov
pusha
or
popa
sbb
fstpl
dec
lret
lret
nop
xchg
stos
leave
ret
lods
aam
xchg
aad
loop
fildll
or
das
fwait
adc
pushf
xchg
bound
or
cmc
mov
cmp
pop
pop
mov
inc
int3
or
repz
xor
cmp
imul
insb
enter
mov
js
pop
mov
pusha
and
dec
and
add
xor
sub
and
repnz
icebp
es
repnz
or
push
cwtl
cmpsb
test
cmp
push
mov
and
rorb
daa
fbstp
loopne
cmp
in
icebp
into
and
cmc
or
popa
xor
bound
xchg
xchg
test
jle
mov
arpl
loope
push
lret
out
or
dec
icebp
ret
int
lods
into
adc
mov
je
cli
je
adc
push
jne
pop
xchg
xchg
inc
xchg
push
push
jge
stc
xchg
ds
mov
jecxz
xor
subl
jp
jne
daa
pop
jbe
insb
pop
push
mov
in
jae
cmpl
in
fldcw
jo
jno
ficomps
in
popa
insl
in
jo
jno
fistpl
in
pop
insl
in
jo
jno
fcomps
in
pop
insl
in
jo
jno
aad
test
pop
insl
in
jo
jno
rcrb
push
push
cmp
push
cmpl
test
cmp
jmp
scas
jmp
xor
inc
sbb
and
loopne
lock
icebp
mov
mov
das
mov
ret
push
imul
inc
or
repnz
mov
and
cmp
jge
or
mov
lea
pop
icebp
sub
bnd
fidivl
mov
adc
mov
in
lahf
dec
cmpb
adc
arpl
in
mov
adcl
push
cmpsl
loopne
jnp
xor
pushf
sbb
lret
lods
cltd
mov
adc
inc
out
cs
cld
iret
xor
insl
cmp
and
jp
inc
jnp
or
sub
call
cmp
mov
xchg
popf
xor
pusha
sbb
ss
aaa
xchg
xchg
cwtl
int3
loopne
int
inc
mov
mov
shlb
negl
clc
cmc
sub
mulb
cwtl
nop
dec
lods
dec
xor
jo
xchg
jno
dec
pop
mov
emms
pop
xor
add
bound
dec
scas
cmp
xchg
cmp
roll
shll
pushfw
xor
sbb
les
push
xchg
in
xchg
adc
jge
cs
pop
sub
mov
mov
inc
popa
test
bound
rorl
lret
jmp
lret
fistl
lds
bound
fucom
pop
fimuls
dec
lret
lret
nop
iret
mov
stos
adc
lods
aam
xchg
aad
sub
das
fwait
pop
sbb
push
jg
mov
cmc
mov
test
pop
push
or
xchg
inc
int3
or
mov
jbe
repz
jge
push
movsb
jmp
lea
enter
mov
mov
xor
js
pop
sti
sbb
pushf
dec
and
add
jnp
sub
insl
adc
cmpsl
xchg
icebp
cmpsl
icebp
outsb
nop
repnz
push
mov
add
andb
push
and
and
and
sbb
daa
fistpll
in
enter
into
and
cmp
loope
pushf
dec
dec
popf
adc
sti
xchg
pop
data16
mov
stos
cmpsb
dec
loopne
xor
inc
pop
das
sub
ret
nop
lock
int
lods
into
adc
mov
je
cli
je
pop
pop
cwtl
push
mov
inc
xchg
push
sahf
jl
stc
fnstcw
mov
cmp
imul
jne
pop
jbe
mov
push
mov
out
into
test
and
jo
aad
andl
test
test
aad
andl
test
cmpsb
insb
in
jo
aad
andl
test
mov
aad
sbbl
in
jo
aad
push
sbb
push
popf
cmp
push
jg
push
addl
iret
ljmp
xor
testb
lock
icebp
mov
inc
adc
mov
cs
or
pop
mov
or
icebp
push
mov
insb
mov
jge
push
sarl
test
pop
aad
pop
push
fiadds
icebp
jno
icebp
jb
fidivl
add
adcl
cmp
mov
xor
dec
add
cmp
mov
fs
push
dec
in
subb
xchg
cmc
imul
xor
enter
sbb
lret
lret
lods
loope
scas
adc
xchg
adc
sti
inc
out
cs
inc
iret
xor
insl
cmp
and
xor
arpl
lea
call
test
mov
ficomps
ss
aaa
xchg
iret
pop
cwtl
int3
sub
jmp
test
fwait
test
mov
loopne
cmpsb
jecxz
cmpsl
dec
loopne
dec
lods
nop
xor
lea
pop
xor
xor
sbb
adc
scas
cmp
cmp
sbb
shll
scas
fwait
xor
sbb
or
push
xchg
sub
jge
cs
sti
cs
push
sub
add
mov
inc
popa
int
bound
sbb
lret
xor
lret
fcmovnu
mov
pusha
fwait
les
stos
dec
aaa
pop
fimuls
dec
lret
lret
nop
pop
mov
fsts
lods
aam
xchg
aad
jb
fildll
lcall
xchg
repnz
push
hlt
mov
int3
jbe
pop
dec
pop
pop
lret
fldl
sbb
push
lds
movsb
xor
movsl
xchg
or
insb
enter
mov
mov
xor
xor
sbb
in
and
add
ret
in
sub
mov
or
mov
repnz
popf
mov
dec
push
cwtl
cmpsb
adc
cmpsl
cmp
cmp
loopne
mov
bound
daa
ffreep
push
loopne
leave
in
or
stc
popa
shl
pushf
xchg
dec
popf
adc
test
xchg
cmp
xchg
pop
scas
jl
mov
rep
dec
loopne
xor
inc
jecxz
inc
pop
ja
or
fsubr
ret
int
stos
into
adc
adc
je
mov
sbbb
inc
xchg
push
out
push
stc
and
mov
test
das
je
pop
jne
mov
jbe
cld
pop
push
mov
cmp
out
push
into
test
imul
outsb
pop
test
icebp
imul
add
jno
imul
out
imul
add
jno
push
imul
std
aam
andl
in
call
aam
push
bound
push
in
pop
push
aas
push
or
test
enter
hlt
mov
addr16
xor
aam
mull
sahf
fisubs
lock
icebp
mov
inc
mov
sub
imul
inc
or
lock
mov
mov
cmp
jge
lcall
leave
pop
test
pop
sbb
inc
pop
icebp
mov
fnstenv
dec
pop
sub
lret
adc
mov
or
dec
orb
sti
mov
jecxz
in
dec
dec
in
xorb
xchg
mov
loopne
loopne
or
xor
sub
jg
lret
lods
sub
adc
cli
inc
out
sub
xor
insb
cmp
and
jge
jnp
lcall
call
int3
shlb
lock
fnsave
imul
xchg
pop
pop
cwtl
int3
jo
int
shlb
test
fwait
test
call
fcomip
cmpsb
sub
cmpsl
dec
sub
lods
jo
xchg
jno
fcompl
push
lahf
jne
xor
sbb
pop
dec
scas
cmp
and
rol
jnp
mov
mov
xor
sbb
push
cmp
cmp
cs
sub
push
sub
dec
adc
stc
inc
mov
inc
popa
adc
dec
or
jnp
lret
mov
pusha
jecxz
popa
ss
aaa
fnsave
fimuls
dec
lret
lret
nop
pop
mov
js
stos
mov
xchg
aad
mov
das
fwait
jmp
pushf
xchg
cmp
or
lahf
repz
adc
pop
pop
xchg
push
pop
lret
and
mov
jbe
icebp
jbe
or
cmp
imul
and
xor
adc
and
push
and
sbb
dec
cmp
jle
scas
cltd
dec
scas
jb
mov
out
iret
repz
mov
sbb
pop
mov
cmp
test
imul
lods
cs
ss
xorl
test
sub
lea
movsl
stc
lods
pop
imul
stos
or
pop
sbb
sub
lock
inc
pop
das
mov
loope
jbe
rcll
jb
sbb
sub
and
fs
cmpsl
adc
mov
cmpsl
xchg
aad
cmpsl
mov
les
adc
es
std
push
scas
je
lcall
mov
lahf
push
mov
mov
dec
and
loopne
icebp
mov
or
mov
icebp
cmp
mov
dec
add
xchg
adc
ficompl
mov
in
sbb
pop
jnp
pushf
jnp
jno
aad
push
stos
mov
push
sub
mov
push
cltd
imul
inc
mov
cmp
in
mov
mov
dec
out
and
and
mov
popa
pop
mov
push
imul
insl
sub
stc
mov
mov
cmp
loop
sub
test
inc
sub
sub
xchg
sbb
or
xchg
sub
inc
gs
ss
xchg
sahf
dec
aad
sarl
ss
lret
ja
bound
mov
cmp
jo
sahf
sub
loopne
inc
imul
mov
and
ja
scas
cltd
or
or
adc
icebp
mov
jns
jnp
add
imul
xlat
sbb
icebp
lea
call
shlb
outsb
icebp
xor
out
daa
pop
sub
icebp
adc
inc
and
divl
insb
aas
mov
fcomip
cmpsb
jae
in
jo
rcr
mov
mov
ror
loop
push
xor
ja
mov
pop
mov
jmp
jmp
nop
imul
cmp
cmp
repz
push
sbb
push
push
xor
jge
clc
fwait
adc
std
stc
lds
icebp
pop
leave
push
push
push
pop
mov
xor
adc
movsl
daa
jmp
mov
mov
fsubl
sbb
shlb
adc
shll
imul
xchg
cli
and
cmpb
outsb
movsl
outsl
jp
xlat
cmp
pop
sarb
sbb
cmp
shl
and
bound
xorl
fcoml
inc
mov
bound
dec
xchg
sbb
push
repnz
fstps
fstps
jp
into
mov
je
and
and
xchg
sub
sub
repz
or
sub
push
mov
aas
cmpsb
push
adc
jnp
mov
dec
test
jmp
push
movsl
and
repnz
or
push
or
in
xchg
xor
pop
ljmp
pushf
aaa
dec
popf
jp
xchg
adc
jp
inc
stos
pusha
scas
or
jae
ss
lods
inc
outsl
addr16
dec
ret
repnz
sbb
xor
xor
mov
data16
adc
cmp
xlat
mov
ficompl
pop
das
jne
adc
jbe
sbb
iret
add
cmp
insb
xor
push
mov
xor
push
outsl
in
daa
or
into
sbb
rorl
pop
jno
clc
cmp
in
jo
xchg
xchg
call
xchg
xchg
dec
ja
fldl
cmp
pop
ds
push
cmp
ljmp
adc
xchg
dec
pop
xchg
or
dec
lcall
pushf
mov
lret
inc
push
jno
mov
lds
sbb
aad
mov
sbb
inc
ljmp
mov
push
stos
sub
cmp
test
fadds
sbb
cmc
ficomps
pop
mov
push
stc
ret
dec
or
jae
mov
push
mov
or
movsl
add
testl
and
leave
pop
addb
adc
cltd
insl
inc
pusha
js
fbstp
cmp
mov
aas
xor
mov
fpatan
sub
incb
mov
pop
lds
imul
shll
inc
lret
mov
lea
mov
inc
js
dec
gs
mov
fnstsw
mov
cmp
arpl
mov
cmp
outsl
arpl
mov
and
cmpsb
mov
ja
push
adcb
or
cltd
mov
shlb
call
shrb
sub
loopne
in
sarl
jecxz
les
or
ljmp
dec
mov
test
call
push
jg
roll
ret
in
sarl
adc
mov
dec
rcll
adc
mov
or
or
or
xor
mov
push
cmc
lret
cmp
leave
inc
ret
and
cld
loop
dec
push
inc
cmc
xor
int3
dec
push
out
cmp
xchg
mov
sub
stos
sahf
das
sti
inc
fwait
gs
pop
sub
imul
mov
es
ds
js
or
push
mov
or
mov
stc
adcl
out
add
pop
sbb
mov
outsb
cmp
and
adc
test
push
loope
mov
sub
mov
push
cwtl
mov
jl
adc
lea
or
adc
mov
lret
pop
lods
stos
aas
lret
frstor
arpl
cli
loope
lds
sub
std
push
sahf
pop
fists
das
dec
je
xlat
adcb
lods
cmp
jns
cs
mov
jp
xor
push
imul
into
mov
imull
test
ret
int
sub
out
rorb
push
mov
mov
test
cmpsb
insb
add
stos
je
aaa
ss
inc
and
pop
cwtl
andl
jne
mov
cmp
sbb
lds
cmp
pop
jge
xor
sub
jecxz
int3
and
repnz
xchg
jo
sub
in
lods
imul
cmp
test
ret
orb
sar
push
std
test
out
in
sub
lods
mov
cwtl
lods
inc
mov
cltd
cmp
jle
pop
imul
cltd
jmp
mov
or
sarw
faddl
inc
cmp
cmp
mov
xchg
push
xchg
out
mov
mov
pop
les
out
aas
inc
dec
sub
xor
jmp
mov
icebp
jb
cmp
mov
mov
pop
push
jne
pop
inc
add
xor
sti
rcrl
lods
push
or
mov
or
outsb
sbbb
xchg
mov
cmp
loopne
jecxz
jns
outsl
rol
inc
add
jmp
out
sbb
insl
mov
dec
fildl
mov
mov
inc
dec
mov
jnp
cmpb
int3
xchg
in
sar
cli
in
lret
call
enter
enter
sub
testb
and
rol
aad
jl
ss
mov
push
repnz
fcos
and
mov
loope
mov
jo
mov
add
insb
std
mov
ljmp
adc
fwait
cmp
dec
pop
or
sub
aas
mov
mov
cmpsl
jge
scas
or
loopne
daa
jp
dec
jecxz
das
inc
ds
sub
inc
jle
inc
popa
in
dec
popa
cmp
or
cmp
inc
xchg
adc
and
shll
aaa
inc
push
outsl
mov
sbb
mov
inc
addr16
sbb
outsb
cmp
fisubrl
dec
je
sbb
mov
jecxz
psubusb
inc
or
xchg
ja
fildl
ss
in
movsl
lcall
loop
adc
jbe
mov
rclb
jge
outsb
sti
stos
fisubrl
andb
xchg
scas
fisubrl
fidivrs
push
jp
dec
mov
aad
or
mov
dec
test
pop
repz
sbb
mov
sub
ja
xchg
mov
mov
lods
xchg
jo
and
pusha
mov
fcompl
mov
sbb
push
pop
mov
insb
pop
or
pop
mov
jb
ret
adc
sbb
hlt
mov
push
insb
or
inc
pop
cmc
or
ja
fnstsw
push
xchg
push
fwait
jmp
mov
aad
sub
outsl
sbb
sub
jge
mov
shlb
mov
lahf
xor
test
iret
sbb
or
test
ss
aam
inc
popa
pusha
std
xchg
mov
movsb
in
push
loop
sub
aad
sahf
fsts
loop
cli
push
xor
in
mov
sub
push
fimull
aam
movsb
ljmp
fdivrs
stos
or
mov
add
mov
repz
mov
xor
iret
stc
icebp
daa
xor
inc
xchg
cmp
jns
imul
jl
fimull
idivb
mov
popf
popa
ror
bound
pop
test
pop
dec
push
scas
dec
sti
les
sbb
pop
sbb
stos
pop
cmp
and
lea
and
mov
les
sbb
pop
jge
jno
pop
jmp
dec
jns
iret
lock
dec
jle
inc
clc
cmc
cmp
push
aaa
push
lcall
sub
dec
dec
sti
jnp
xlat
ja
popa
mov
sarb
mov
insl
insb
jmp
fs
cmp
push
pop
cmc
xor
jl
xchg
int
adc
negl
rolb
and
fldt
cwtl
fs
pop
rolb
pop
aam
cld
push
mov
cli
mov
xor
sti
fldt
push
scas
sub
popa
sbb
jae
push
test
mul
lock
cmp
cmp
fwait
fs
jl
xchg
fnstcw
in
mov
push
mov
push
xchg
push
lods
jge
jb
jbe
int
arpl
xor
das
mov
xchg
iret
adc
jo
xor
mov
stos
inc
aaa
fstl
lahf
mov
inc
mov
sub
mov
lods
mov
xchg
aad
fucompp
mov
fwait
or
roll
jns
ret
jecxz
mov
pop
dec
cmp
ja
lock
pusha
xchg
push
xor
insb
xchg
cmp
sub
in
leave
mov
jae
lahf
fildll
imul
jge
mov
dec
lock
xchg
mov
mov
mov
arpl
outsl
adc
pushf
jae
insb
dec
or
test
jg
fcomps
loope
push
or
lods
add
jp
shrb
loop
mov
nop
lock
shl
push
cmp
sar
dec
mov
nop
imul
bound
ss
idivl
jecxz
cwtl
in
jo
pop
sbb
push
adcl
sub
pop
adc
cmp
mov
push
xlat
push
movsb
gs
mov
out
mov
test
sbb
mov
in
outsb
out
sub
and
cltd
dec
and
pop
popf
jmp
pop
imul
in
push
cmp
or
inc
add
ds
push
sub
pop
push
call
cmp
push
cmp
and
stos
mov
dec
sbb
loop
inc
inc
adc
mov
pop
dec
pop
inc
scas
loop
out
inc
mov
cmp
xor
adc
cmp
cmpb
sahf
dec
cli
pushf
lea
jecxz
pop
test
pushf
adc
cmp
out
fwait
loopne
fsubr
jp
sbbb
repnz
nop
xor
and
fs
mov
mov
cmp
adcl
sub
dec
jns
push
pop
and
out
lret
es
and
int
jl
add
xchg
out
mov
xchg
lahf
rcr
push
sub
sarb
add
mov
dec
data16
dec
mov
mov
mov
mov
sub
enter
push
call
aaa
inc
push
flds
cmp
cmp
push
dec
and
mov
push
xor
push
mov
pop
and
push
sti
xor
xchg
cmpsl
inc
xchg
adc
mov
jp
lret
cwtl
xchg
rorb
dec
pop
imul
aam
ror
push
aas
adc
aad
jge
push
cmp
xor
push
xchg
jno
ds
aad
inc
call
sub
mov
cltd
pushf
mov
sahf
leave
mov
sbb
cmp
outsl
cmp
xchg
mov
push
cmpsb
or
mov
in
sub
jecxz
lahf
fists
div
jp
icebp
adc
sahf
inc
icebp
out
stos
xor
cmp
pop
lret
lea
test
out
scas
or
insl
mov
es
sub
add
lret
enter
dec
xchg
dec
xor
jae
sbb
adc
and
test
ret
add
jae
sub
and
or
mov
repnz
dec
xchg
cmp
inc
cmpsb
les
pop
aaa
iret
loop
inc
nop
lcall
data16
lcall
in
jl
test
std
mov
add
pop
test
mov
fildl
xlat
mov
movsl
mov
loope
xchg
add
sti
fcomp
idivl
scas
ja
xor
into
adc
filds
push
and
cmp
movl
movsl
mov
fwait
and
aam
push
std
movsb
mov
and
push
out
test
roll
in
jo
xchg
lea
jnp
in
add
mov
jno
dec
xchg
pop
push
fs
stc
cmc
adc
into
fcomp
shll
ss
stc
clc
xor
aad
leave
and
das
leave
stc
out
cli
push
rcr
adc
xor
nop
cmpsb
cmp
jmp
push
in
xchg
push
bnd
leave
int3
arpl
cmp
inc
mov
iret
mov
mov
xchg
cmpsl
jl
cltd
jl
xlat
or
xchg
pusha
add
pop
aad
dec
pusha
sarl
aas
xor
gs
les
inc
pushf
mov
jno
cmpsb
inc
pop
addr16
fistpll
lock
xchg
int3
divb
or
cli
sub
in
test
leave
add
popa
sbb
dec
mov
jmp
and
and
pop
push
lahf
jmp
leave
mov
push
rcrb
movsl
lahf
repnz
xchg
add
mov
inc
cmp
push
cmp
dec
aad
insl
out
pop
popa
mov
xor
sub
aaa
sbb
aaa
push
dec
jg
or
int
xorb
jnp
sbb
or
fcmovnu
clc
adc
add
mov
bound
pop
and
sti
pop
inc
and
inc
scas
cmp
push
lahf
xchg
adc
push
push
subps
sbb
jl
inc
push
xchg
ss
push
pusha
rcll
imul
insb
adc
xor
ss
sahf
fldl
or
or
inc
int
repz
lret
fcmovnbe
imul
frstor
sbb
mov
xor
pop
scas
in
pop
xor
insb
push
mov
cwtl
push
cmpsb
into
dec
cltd
flds
xor
push
inc
test
stos
fs
inc
dec
dec
sbb
sub
adc
or
scas
or
inc
cmpsb
xchg
frstor
cs
movsl
scas
leave
pop
fisttpll
rcr
cltd
divl
xor
adc
popa
and
push
mov
adc
sub
int3
jno
xchg
sub
or
loope
dec
call
popa
dec
lret
cmpsl
cmp
mov
repz
adc
nop
mov
jb
aaa
dec
sub
ret
dec
mov
jae
enter
push
aaa
jl
add
mov
jg
subl
sub
xor
bound
push
jg
pop
add
add
inc
inc
inc
xorl
sbb
xchg
adc
sbb
aas
adc
jb
lock
push
cltd
jp
sub
out
push
cmp
std
push
mov
sub
add
insb
out
lea
jl
inc
cmp
mov
cltd
adc
mov
push
test
out
adc
xor
pusha
push
test
and
adc
sbb
pop
adc
fs
iret
jno
add
imul
push
cmc
dec
add
add
and
stos
arpl
mov
push
mov
rcrl
cli
icebp
mov
popf
xchg
test
imul
sub
jl
or
cmp
jb
mov
fmulp
jns
mov
or
xchg
adc
sbb
shll
adc
lods
xchg
lods
sti
jae
cli
mov
jns
xchg
hlt
pop
vpacksswb
push
xor
jne
andb
std
in
filds
and
lea
sti
dec
jno
pop
ficoms
jbe
sahf
push
and
inc
lock
in
mov
outsl
pop
shrb
cli
loopne
jne
push
jg
fs
roll
cmp
cmc
sbb
repnz
out
mov
cmp
fcmove
push
mov
bound
pop
je
mov
cli
adc
js
sarl
movsl
fwait
jno
dec
push
mov
sbb
out
and
popl
jne
push
jb
fimull
lock
test
addr16
insl
mov
sub
lret
aam
pop
sti
lcall
mov
inc
scas
fmuls
int
rcll
cmp
sbb
mov
adcb
stos
and
sub
mov
orb
push
sub
jmp
loope
or
and
inc
push
orl
sub
cld
push
nop
and
cmpsb
in
lahf
push
mov
orb
imul
xchg
outsl
dec
mov
xchg
jb
or
mov
fdiv
mov
sbb
nop
cmp
lahf
inc
fistpl
xor
jmp
imul
or
mov
or
cmpsb
pop
jp
shll
lods
loope
jns
pop
add
fs
jl
outsl
dec
add
mov
gs
insb
shlb
ljmp
idivl
and
sbb
sahf
pop
or
div
pop
push
sub
shr
xorl
imul
inc
stos
push
ds
ret
mov
movsb
bound
pusha
adc
int
into
aas
mov
stos
es
or
bound
pop
out
dec
jg
sarl
pushf
jae
xor
push
jbe
imul
fdivl
or
shld
lea
jmp
pop
int
movsl
pusha
xor
fadd
cld
cmpsl
and
repz
mov
cmp
and
adc
and
sub
std
mov
jae
aaa
in
in
cmp
out
popa
mov
inc
jmp
pushf
enter
mov
int3
fdivrs
lret
cld
nop
add
inc
sbb
inc
xchg
loope
xor
jo
rcrl
dec
xchg
inc
dec
out
or
xor
adc
lret
inc
or
in
icebp
leave
jae
cltd
fisubs
sbbb
xchg
cmp
mov
pusha
xchg
movsb
mov
adc
dec
cmp
dec
pop
mov
pop
jno
call
int3
mov
jns
stos
push
and
sub
and
inc
mov
lds
ds
test
or
dec
in
jbe
mov
lret
inc
cs
mov
jmp
mov
or
mov
test
popa
mov
insb
dec
enter
adc
lret
cmp
stos
push
aam
mov
mov
jmp
push
imulb
jecxz
mov
jo
mov
enter
inc
fsubl
jmp
mov
mov
int3
pushf
xor
jp
shrb
sti
pop
test
std
xchg
rcl
testl
jge
push
cmpsl
pop
jno
sbb
inc
cmc
push
cmc
mov
mov
mov
repnz
imul
xchg
insb
mov
mov
pusha
sahf
das
jmp
fmull
pusha
adc
arpl
iret
lret
sahf
fs
gs
push
adc
mov
stc
and
dec
and
test
mov
or
ljmp
jbe
aaa
mov
std
sub
sub
in
jbe
jbe
and
xor
adc
aam
pop
hlt
cmp
movntq
push
clc
je
and
and
mov
add
push
inc
pop
imul
mov
sbb
jo
loopne
and
rol
adc
jl
mov
xchg
adc
aam
xchg
mov
fdivrs
or
shl
cwtl
cmp
pop
xchg
loop
mov
push
iret
fsub
or
cmp
adc
pop
pop
cmp
push
lahf
lahf
dec
loopne
push
and
push
xor
imul
dec
sub
cs
jb
in
inc
and
cmpsl
nop
sbb
mov
pop
sbb
int
add
ja
cmp
cmp
cmp
jp
sbb
testb
xchg
aad
je
test
and
xchg
sub
addr16
outsb
cwtl
mov
test
outsl
mov
or
dec
and
add
outsl
lahf
inc
mov
imul
cmp
cmp
popa
pop
mov
push
and
jb
inc
sbb
mov
jp
movsb
mov
sub
orl
leave
movsl
mov
jp
call
sub
jp
int3
sbb
cmp
push
mov
dec
movsl
lods
push
mov
mov
sbb
out
lock
xor
and
mov
pop
or
mov
jo
das
fistpll
fdivs
cmp
idivl
orb
jmp
add
cmpl
testl
xchg
mov
push
push
stc
std
push
fwait
push
jmp
push
cmp
inc
fwait
int3
fstpl
movsb
imul
push
and
jae
push
adc
mov
repnz
push
adc
cmp
cmp
bound
jge
or
push
arpl
xchg
bound
dec
jl
mov
jmp
loop
fldenv
stc
outsb
jae
lods
pop
sbb
cmp
dec
cmpsl
call
push
sub
push
fmul
hlt
jb
xchg
call
cmp
lods
pop
hlt
pushf
pop
add
out
or
mov
scas
push
jbe
jg
repz
std
jne
cs
dec
xor
mov
sbb
and
adc
sahf
stos
loop
les
push
leave
inc
aas
add
push
xor
add
test
incb
sarl
inc
lds
and
imul
aaa
xor
cltd
mov
bound
lods
fwait
jae
adc
jecxz
lea
add
ss
dec
mov
aam
iret
jnp
daa
pop
sahf
shrl
arpl
insb
sbb
xchg
sbb
notb
inc
add
jo
js
shl
popa
pop
lret
insl
jo
inc
sti
mov
fnsave
lock
sub
lret
or
in
sub
test
cwtl
cmpsb
xchg
ja
insb
clc
add
xor
xor
sarb
out
sbb
mov
jne
mov
fcoms
jb
push
push
popa
cltd
lcall
sarb
jge
clc
add
dec
shl
mov
cmp
push
inc
minps
and
inc
pop
fbld
push
pop
dec
adc
sub
rcr
btr
mov
inc
dec
and
rcrb
das
sar
idiv
inc
or
sbb
xchg
mov
sub
jp
leave
adc
je
and
mov
pop
cmp
mov
or
or
mov
nop
sub
test
mov
stc
sahf
dec
and
out
add
es
fisubl
fstpl
pop
repz
adcl
insb
dec
loopne
leave
inc
scas
jae
test
or
pop
pop
mov
xor
addb
jne
sub
mov
and
cmp
and
xor
jmp
loopne
mov
push
xor
cmp
lcall
aas
mov
xchg
sub
adc
jae
jp
fld
test
sub
fs
fmuls
or
movsb
ret
adc
cmc
out
and
or
jns
pop
mov
clc
dec
stc
hlt
mov
mov
mov
lahf
mov
inc
mov
outsl
sub
movsb
adc
pusha
out
fwait
xchg
jb
sbb
pop
in
sub
aas
movsl
mov
imul
push
fiadds
push
stos
cmp
mov
leave
out
mov
dec
cmp
es
out
adc
mov
inc
icebp
shlb
je
xor
cli
or
ljmp
sub
gs
sbb
popf
aas
or
popa
in
xchg
mov
inc
cmpsl
lret
cmp
pop
mov
inc
nop
sbb
mov
and
mov
sub
push
push
scas
mov
cmpsl
adcl
incl
or
out
pop
mov
sar
xchg
jae
int
xor
jmp
xor
push
leave
dec
aas
sub
and
mov
mov
or
mov
insl
mov
cmpsb
mov
and
stos
pop
cmp
xor
and
cs
out
adc
jnp
aam
test
or
call
jmp
cltd
add
cmp
or
rcrl
and
das
add
shrb
mov
je
mov
push
jo
xchg
scas
leave
pop
push
and
dec
repz
andl
repnz
iret
or
inc
out
dec
or
psubq
insb
dec
cwtl
sub
xlat
xchg
cmp
mov
push
mov
jp
sub
lods
sbb
or
mov
sub
adc
push
pop
jl
mov
push
cmp
jns
inc
pop
jnp
xchg
dec
pop
mov
inc
and
mov
sbb
mov
neg
mov
fisubrs
xchg
cld
push
jge
int3
fbstp
dec
ljmp
cmp
lods
fisttps
push
mov
shrb
lods
or
or
cwtl
xchg
dec
or
mov
and
nop
shll
into
test
test
xchg
xchg
mov
jmp
scas
inc
jae
and
sbb
nop
movsb
mov
add
push
xchg
ficoml
insl
jbe
mov
push
gs
inc
movsl
mov
sub
fnsaves
mov
ja
fldenv
add
cmp
adc
jmp
pop
popa
cmp
cmpb
add
adcb
push
mov
cli
mov
fcmovu
aas
xchg
mov
sarl
mov
frstor
sbb
or
jge
lcall
cmpsl
jo
andb
dec
stc
popf
je
add
jle
jo
mov
ret
data16
mov
inc
aam
jbe
fdivs
movsl
cltd
aaa
sahf
je
xor
sarb
sbb
and
adc
and
cmp
push
test
jecxz
icebp
xor
adc
fs
lahf
in
pop
jp
insl
xchg
xorb
sbb
shll
add
cld
jp
in
ds
addl
add
and
add
and
mov
inc
out
mov
jp
add
mov
mov
sub
pop
cmpsl
dec
inc
loope
insl
icebp
mov
mov
pop
or
bound
cs
call
and
xchg
fidivrl
mov
inc
dec
shll
inc
outsl
mov
cmp
ficoml
rcr
push
out
inc
movb
stos
mov
mov
push
inc
jb
int3
xor
movsb
sbb
cmp
inc
xchg
adc
mov
inc
popf
dec
push
add
dec
mov
cld
out
push
movsb
adc
cli
jmp
daa
sbb
push
cmpsb
cs
xor
je
add
pop
pop
in
decb
cmp
data16
xchg
loopne
jecxz
xlat
fidivrl
lods
cmp
and
iret
xlat
addb
cmp
mov
lret
ds
test
and
add
pushl
iret
daa
ljmp
mov
dec
jp
in
ljmp
es
cmp
repnz
ret
sarb
adc
leave
xlat
ss
fcoms
imul
cmc
and
sbb
aam
mov
push
jo
sbb
cltd
jno
jle
or
test
mov
dec
scas
test
push
adcl
fistps
pop
mov
mov
sub
sarl
ret
pop
jae
test
add
cs
pusha
cmpsb
and
sbb
aam
push
push
mov
sub
and
inc
sub
icebp
into
fcmovnbe
and
and
inc
and
test
pusha
inc
cmp
inc
sbb
data16
xor
dec
sbb
fs
dec
sbb
adc
rcll
aaa
test
mov
inc
add
jbe
and
jge
std
hlt
insb
push
pop
xor
std
jp
and
xor
sub
mov
pusha
shll
cwtl
loopne
mov
test
les
idivl
aad
mov
cmc
or
cmp
and
out
jo
repnz
push
ret
sar
push
ja
and
xchg
inc
cmp
sub
add
cld
or
adc
in
scas
js
cmc
cmp
popa
scas
mov
lods
mov
pop
call
push
pop
or
xor
pop
add
pop
and
push
jbe
xor
or
aaa
insl
adc
fucomi
sbb
aaa
xor
add
sbb
lods
inc
out
sub
lret
jg
push
ficompl
push
jae
cmp
xchg
push
push
sub
dec
cmpsl
test
push
mov
nop
lcall
add
jno
movb
jne
sub
adc
fsubl
psubsb
push
ret
fs
adc
dec
jne
test
lock
adc
cmpb
nop
xchg
aad
push
push
cmp
shrl
pushf
mov
mov
daa
push
pop
mov
pushf
mov
cmp
push
leave
dec
inc
xor
aam
push
fildl
cmp
push
cmp
mov
mov
or
imul
pop
mov
aaa
sbb
adc
loop
pop
adc
pop
div
into
jbe
jle
xor
addr16
outsl
inc
dec
cs
ja
lods
lcall
ds
inc
add
mov
pushf
inc
mov
cmpsb
mov
push
pop
mov
and
out
out
and
hlt
repz
addr16
pop
xchg
cmp
mov
arpl
mov
pop
pop
inc
mov
cmp
mov
mov
stos
jae
or
insl
and
outsb
gs
jmp
xor
movsb
pop
aaa
push
mov
sti
cltd
loop
lcall
ds
rcl
cli
ror
dec
mov
mov
mov
mov
rolb
pop
inc
push
aaa
push
nop
cmpl
inc
in
decl
outsl
lret
xchg
and
inc
jle
xor
cmp
stc
adc
cli
in
stos
mov
repnz
or
adc
shll
add
sti
or
lods
jnp
or
ficompl
mov
jmp
ret
mov
xor
adc
in
sbb
or
orb
or
lods
sbbl
and
icebp
dec
pop
into
add
sub
addr16
xor
xchg
cmp
testb
push
sbb
aad
jnp
loope
icebp
pop
int3
clc
xor
les
test
test
rolb
mov
mov
pop
push
mov
lret
sub
fcomi
xchg
mov
shlb
inc
xchg
sbb
inc
jno
jp
iret
ret
pop
jg
jp
aam
es
pop
frstor
loope
or
test
pusha
cmpl
inc
sti
jmp
out
pop
mov
aad
and
push
inc
cld
xchg
jl
leave
repz
rcll
into
mov
lods
mov
mov
inc
xchg
push
arpl
add
mov
iret
sahf
addb
xchg
dec
in
in
enter
push
jle
cmp
xchg
mov
add
enter
xchg
dec
les
fldl
or
xchg
push
dec
add
jne
mov
imulb
sbb
mov
mov
adc
mov
insl
mov
loop
xlat
cmc
mov
mov
fadd
xor
psubusb
sbb
sub
push
cmp
adc
cmp
mov
inc
xchg
push
or
dec
mov
lahf
shll
and
mov
sbb
out
lods
inc
fisttpl
js
and
cmp
std
pop
pop
les
pop
icebp
movsl
fildll
add
iret
adc
lcall
mov
popa
aaa
out
xchg
dec
ds
xlat
xchg
stos
or
xor
filds
stos
lods
ss
adcb
dec
cli
and
mov
pop
cwtl
adc
push
push
push
lods
or
in
add
cmp
sub
or
jne
or
mov
lea
es
test
cmpsb
add
xchg
jmp
adc
xchg
jg
cmp
xor
aaa
movsb
fstl
and
das
xor
mov
and
or
jae
inc
repz
arpl
repnz
sbb
ss
enter
fs
loopne
shl
jno
xor
jae
pusha
or
cmp
fwait
lock
xchg
cs
xchg
hlt
push
cltd
push
jle
sbbb
repnz
sub
adc
jno
xor
arpl
movsb
and
aas
mov
sub
pop
ret
jbe
outsb
xchg
outsb
in
shlb
or
dec
aad
fs
or
adc
in
fsubs
cmp
pop
out
sbb
and
fimuls
fs
add
cmp
pop
scas
fists
xor
jge
push
pop
mov
lods
je
dec
mov
add
mov
lds
test
jnp
loopne
flds
movsl
sarl
cmp
js
ds
inc
or
dec
insl
add
xlat
outsb
fistpl
out
mov
ljmp
inc
stos
pop
int3
mov
aad
divb
adc
xchg
dec
mov
outsb
scas
out
jmp
pop
dec
out
scas
or
fldl
mov
loopne
inc
shll
xchg
mov
pop
fidivl
push
dec
repnz
mov
in
fwait
inc
out
nop
cmp
lock
push
xchg
xor
or
sub
xor
mov
int
jg
call
stc
es
negb
pusha
mov
shr
jecxz
dec
cmc
jo
adc
arpl
dec
loop
xchg
xlat
jl
xorb
mov
ljmp
sub
ja
dec
cwtl
cs
dec
mov
shrb
xor
mov
loope
push
arpl
jge
jbe
inc
dec
std
sbb
pushf
pop
cwtl
cwtl
sti
test
insl
aad
inc
push
inc
mov
add
mov
leave
pop
lods
stc
ss
cmpsb
push
pop
aam
add
mov
shl
sub
cmp
pusha
sarl
mov
push
testb
and
xor
dec
test
mov
push
das
sbb
rcr
stos
cmp
fisttpl
ror
pop
sbb
or
lret
decb
cld
fbld
adc
cltd
jmp
push
icebp
jbe
repnz
xchg
sub
mov
cmp
leave
repnz
sub
pop
aam
out
arpl
mov
ret
aam
fdivp
add
cmpl
in
xchg
repz
lcall
cmc
dec
cwtl
sub
cwtl
psrld
pop
in
dec
je
sub
fldenv
arpl
ja
andb
outsb
jne
dec
imul
mov
enter
jns
xor
pop
push
or
adc
lea
mov
leave
leave
dec
pop
test
and
ret
adc
sub
dec
stos
lcall
adc
fdivl
fstpt
mov
aas
adc
enter
xchg
push
add
roll
je
xchg
xchg
add
jno
ffree
sbb
mov
int
fs
sti
jo
inc
and
sub
popa
mov
sub
fs
sti
jo
inc
xor
sub
pop
cli
and
xor
push
add
repnz
jo
dec
mov
adc
mov
lea
sbb
aad
into
add
stos
int3
lret
cld
push
xor
testl
lcall
rcrl
inc
mov
test
or
ret
or
loope
mov
push
cmp
add
cmc
pop
jmp
lea
sahf
and
sahf
ror
enter
cmc
pop
push
mov
adc
cld
jo,pn
rcr
popa
jmp
ja
mov
mov
popl
cmp
test
dec
popf
lods
call
lretw
mov
sar
pop
ss
push
mov
fwait
loopne
push
pop
mov
test
cli
cltd
es
and
mov
sbb
fs
aam
inc
mov
push
inc
jb
xor
rclb
mov
je
xchg
mov
repz
dec
pop
xor
mov
rcll
divb
fistl
mov
and
dec
ret
dec
ds
test
jp
movsl
sbb
or
pop
mov
dec
pusha
test
movsb
fwait
jge
sti
ds
mov
iret
dec
push
aam
pop
fadds
cmc
xor
add
push
lds
mov
xchg
pop
ds
jo
pop
sti
es
lods
push
xor
pop
mov
cs
daa
mov
jne
and
cmpsb
fildll
mov
mov
loope
popa
dec
and
loop
mov
dec
xor
lret
sub
fwait
test
aaa
mov
lret
and
jmp
pop
imul
jbe
push
mov
in
out
xor
test
push
xchg
lods
dec
xchg
adc
loop
push
enter
rolb
aas
into
scas
rolb
mov
jmp
pop
hlt
jb
fldt
enter
jge
ret
sub
testb
insl
adc
enter
lret
addr16
insb
and
imul
in
imul
test
clc
jle
push
pop
pop
fstps
xchg
adc
test
mov
popf
arpl
dec
rcrl
les
addr16
popa
pop
mov
push
push
mov
cmpsl
jg,pt
pop
cmp
les
xchg
sub
add
insb
add
andb
cmc
or
jne
and
into
add
loopne
pop
lret
sbb
push
sub
mov
mov
fistpll
pop
jle
or
cmp
push
xchg
or
int
sbb
out
gs
jns
lahf
adc
jnp
jnp
mov
test
inc
and
outsb
jne
adc
leave
jno
loopne
or
xchg
lahf
adc
sub
cld
xchg
das
rorb
xchg
lahf
adc
imul
fucomi
pop
aaa
push
orl
or
push
xor
mov
push
or
pop
push
nopl
jae
cmp
jne
lcall
pop
sub
test
dec
dec
push
rcr
loopne
inc
adc
xor
testl
or
arpl
xchg
cmp
cmp
ret
je
push
xor
mov
int
call
insl
mov
mov
cmp
pusha
daa
fwait
adc
in
or
fisubrs
mov
mov
lret
and
mov
in
imul
jae
mov
cmp
cmp
jnp
lret
ret
cmpsl
dec
pop
pop
jp
cmp
mov
test
jb
mov
pop
push
dec
mov
or
pop
outsl
iret
int3
jg
movsb
xor
mov
nop
int3
lock
xchg
nop
pop
dec
cmp
jns
jnp
or
mov
popa
clc
cmc
dec
mov
and
orl
sub
in
ja
jb
lahf
mov
iret
les
push
cmp
pushf
sahf
scas
jg
mov
imul
sbb
dec
aad
jne
pop
out
cmp
cmp
arpl
pop
xchg
stos
imul
pop
cltd
jo
in
ror
fdiv
mov
inc
mov
push
cmp
shlb
mov
loop
cli
sti
add
xor
mov
xor
push
ret
xor
push
fsincos
inc
mov
repnz
sti
outsl
and
stos
sbb
pop
fimuls
out
add
or
ficomps
lock
xchg
mov
repz
sub
mov
and
xor
sbb
out
addl
popa
pop
push
shrl
xchg
fiaddl
jno
movsb
xor
ds
cmp
out
push
xchg
and
popa
adc
divl
mov
in
jp
mov
pop
jecxz
inc
insb
out
repnz
push
fiaddl
mov
mov
dec
jmp
sbb
adc
fimuls
sti
adc
loope
inc
sbb
stos
lds
sub
jo
sahf
ja
or
or
adc
adc
jne
mov
jp
inc
mov
repnz
sub
mov
jmp
stos
xor
push
pusha
xor
je
pop
inc
repz
test
nop
push
inc
fs
ds
add
cmp
jno
std
mov
aas
inc
loope
je
sub
std
adc
test
sbb
pop
dec
mov
into
lahf
gs
sub
mov
adc
lret
xor
add
dec
mov
nop
or
add
jo
xor
bound
adc
dec
mov
xchg
fsubrs
jno
lods
das
pop
aad
xor
push
mov
sbb
push
inc
cwtl
stc
sbb
add
mov
test
aad
xchg
int
rclb
cltd
mov
pop
in
dec
sub
lret
mulb
outsb
fnstsw
testl
dec
add
mov
popf
repz
iret
adc
aad
faddp
call
out
sarb
and
dec
sub
out
stos
or
decb
mov
cmpsb
jmp
aad
jbe
rolb
xlat
fs
imul
xchg
add
xchg
inc
push
aad
adc
hlt
subb
push
pop
pop
mov
add
mov
bound
out
push
mov
inc
jno
jp
shll
nop
std
push
icebp
rolb
test
popf
aad
mov
jo
pop
out
xchg
push
mov
cld
adc
cmp
mov
sbb
cmp
pop
fsubl
push
cmp
enter
or
or
xor
push
and
jge
lods
mov
add
mov
cmpsb
push
iret
popf
mov
out
dec
imul
pusha
mov
mov
es
xor
adc
out
lods
jecxz
push
add
shrb
push
mov
lods
jge
cs
shll
xchg
out
xchg
mov
test
dec
jecxz
pop
and
es
inc
mov
sbb
inc
fisttps
fdivs
xlat
xor
popf
out
fldenv
adc
dec
js
sbb
stos
das
fwait
mov
sub
mov
lret
lcall
and
fcomps
pop
jb
aaa
int3
or
sbb
pop
mov
andb
movsl
mov
xor
jo
fisttpl
leave
mov
aad
mov
adc
cmpsl
fldenv
sub
or
lods
jle
movsb
popf
lret
and
lret
xor
jge
pop
rol
pop
fs
imul
js
and
in
xor
xor
lock
out
mov
adc
xchg
test
push
rclb
stos
jmp
mov
or
cmp
addr16
xor
cltd
ficoms
rcr
iret
or
pop
test
fisubrs
cmp
imul
je
add
cmp
int3
mov
test
or
adcb
and
jns
push
ja
enter
mov
in
sti
push
xor
into
pop
subb
leave
lcall
pushf
jmp
dec
mov
aad
repz
clc
push
sahf
lds
cmpsl
xor
push
xlat
xor
sarl
into
jbe
push
mov
mov
sub
or
or
fs
shll
lock
stc
add
aas
or
sbbl
sbb
adc
push
daa
enter
bound
and
jl
adc
and
cmpsl
fidivs
mov
cs
xor
or
clc
into
push
mov
and
mov
pusha
mov
aad
mov
sbb
or
inc
adc
subb
mov
mov
ret
nop
out
cmp
pop
pop
sub
lret
lods
pop
das
sti
ljmp
inc
out
test
ret
bnd
xchg
outsb
mov
mull
cmpsb
pusha
fimuls
inc
in
push
movsl
test
ret
mov
arpl
ds
fnsave
je
std
push
push
adc
loopne
clc
inc
push
jnp
mov
mov
pop
mov
mov
add
adc
push
mov
ret
repnz
mov
cmpsl
xorb
out
push
add
jge
mov
jnp
and
adc
outsb
shlb
push
mov
inc
in
pusha
mov
adc
or
pop
pop
cmp
or
pop
push
cmpsb
loopne
xorb
fwait
outsl
xchg
repz
int3
loope
dec
sahf
add
faddp
push
pop
mov
inc
sbb
jae
lods
sbb
push
jnp
xor
jo
xchg
push
mov
jo
call
imul
lret
push
mov
sar
loop
xor
fsubrs
sub
sahf
hlt
lahf
nop
xchg
xchg
enter
jno
mov
int
jb
loope
ret
lds
jmp
out
popa
lret
push
or
loop
mov
mov
push
pop
stos
sub
sbb
jnp,pt
cmpsl
addr16
insb
jb
jl
movsb
lds
adc
adc
sbb
enter
cmpsl
pop
add
fistps
mov
mov
mov
mov
xchg
xchg
mov
sub
pop
scas
pop
fistpl
out
scas
mov
pusha
mov
push
cmp
dec
or
daa
in
sub
push
test
cmc
pop
adc
xchg
cli
jbe
rcl
cmpl
jo
shll
int
push
jg
mov
push
dec
adcl
adc
movl
shll
mov
adc
xlat
cli
cmp
add
nop
jl
dec
test
stos
in
mov
in
sbb
repz
rcrb
mov
xor
ficomps
push
inc
jne
test
bound
lods
fnstenv
add
mov
lret
mov
ret
stos
inc
psrlw
mov
lods
jbe
nop
cmc
repz
cmp
push
sub
adc
and
pop
dec
test
movsb
pop
xchg
mov
add
jle
int3
into
fcmovu
push
es
sub
or
lods
aaa
fwait
adc
inc
arpl
pop
xchg
mov
cmpsb
aaa
xchg
fcoml
movsl
lret
dec
fcoml
negb
xchg
xchg
call
inc
mov
out
insb
je
add
xchg
cmovno
push
xlat
jbe
stos
inc
mov
rorl
sti
loope
sub
bound
loopne
mov
dec
enter
jp
aaa
jno
arpl
ret
xchg
or
orb
or
cmpsl
lds
mov
pusha
daa
fldl
jne
xorl
outsl
jne,pn
xchg
jmp
mov
loop
addl
outsb
push
xchg
pop
xchg
shll
scas
pop
idiv
mov
lock
sbbb
sub
sub
iret
cmpsl
pcmpgtd
jne
or
sbb
push
mov
lods
cmp
sbbl
fcom
pusha
dec
mov
jp
inc
inc
loop
mov
or
lret
in
das
fsubl
jmp
stc
sub
aam
push
push
push
push
data16
push
mov
mov
add
nop
jecxz
pop
push
jecxz
lret
jge
xor
sub
std
add
shrl
movsl
xchg
and
outsl
lods
mov
inc
inc
ret
ds
int3
xchg
sub
mov
mov
out
cmp
data16
pop
push
xor
pop
int
shll
lahf
or
loope
and
pop
aas
xor
mov
mov
push
loopne
xchg
mov
ljmp
or
test
insb
add
inc
pusha
pusha
shlb
jb
push
pop
mov
push
insb
es
fld
xor
lret
inc
sbb
mov
inc
and
inc
pop
pop
cmpsl
add
js
dec
add
xchg
jl
jmp
fidivrl
and
adc
out
add
leave
sti
cmp
fnsave
or
lcall
in
dec
jbe
pushf
les
jno
addr16
fwait
sbb
mov
adc
cmp
stc
es
icebp
leave
sbb
adc
repz
into
repz
add
loop
hlt
ror
add
shll
js
pop
mov
xchg
pop
push
push
inc
fists
jns
or
jl
or
les
add
add
jge
negl
inc
shrb
jnp
add
jno
mov
scas
mov
jge
cmpsb
int
fstps
fs
fmuls
dec
fdiv
mov
lcall
mov
lds
cmp
test
adc
popf
sbbl
sahf
lcall
pusha
xchg
mov
test
dec
jne
mov
sub
mov
in
addr16
imul
cmp
xor
sbb
xchg
and
fsubl
lcall
adc
ret
sahf
or
arpl
and
xchg
int3
or
outsl
mov
pop
int
dec
sbb
dec
xchg
or
jecxz
xchg
or
xchg
movb
push
pushl
adc
stc
in
cmp
push
rcrl
aam
add
push
jle
sub
xadd
imul
ljmp
gs
pushl
aam
sbb
inc
ja
sarl
pop
dec
xor
xchg
add
scas
pusha
xor
push
pop
pop
roll
and
and
pop
push
aad
das
add
sbb
mov
call
inc
cmc
inc
push
pop
dec
cmp
sub
xchg
mov
cmp
pusha
sti
mov
or
fimuls
stos
inc
mov
adcl
std
fistpl
or
out
xchg
pop
jb
add
pop
mov
roll
jbe
pushl
fs
nop
addr16
sbb
insb
insb
enter
mov
sub
cwtl
ss
mov
xor
bnd
lret
roll
pop
push
dec
dec
mov
mov
jno
dec
pop
xchg
jl
sbb
call
repnz
stos
cli
ds
dec
jo
shlb
mov
mov
push
in
push
mov
xor
jae
push
jae
dec
pop
xor
stos
mov
pushf
stos
mov
pop
jl
jle
ret
mov
scas
movsb
mov
repz
pop
cmp
testl
setp
in
xor
std
jo
sbb
push
mov
cmpb
and
cmp
addl
sub
pushf
xlat
lahf
dec
jbe
test
cmpsl
adc
or
sbb
or
fsubrl
lds
push
dec
insl
outsb
fstps
cmpsb
xor
sbb
add
add
clc
mov
pop
in
in
cli
into
in
imul
cwtl
adc
pop
mov
sub
mov
scas
shrb
push
inc
mov
jo
xorl
push
mov
outsb
mov
cmc
cmp
sbbb
push
mov
mov
xchg
xchg
xchg
jge
imul
mov
pop
cltd
dec
and
adcl
aaa
pop
icebp
and
mov
cmp
mov
jo
cs
cmp
mov
into
mov
and
push
or
rcr
inc
xchg
bound
cmp
jns
xchg
mov
loop
es
pop
daa
adc
mov
mov
xchg
mov
sub
inc
sub
dec
cmp
xor
gs
or
push
push
mov
mov
stc
ret
xchg
sub
adc
ret
pop
int
and
push
in
imulb
sarl
das
mov
push
add
dec
add
mov
orb
xlat
sub
pushf
jp
incl
mov
bound
subb
cmpl
inc
cmp
sbb
mov
pop
test
out
inc
sub
xchg
mov
push
addb
mov
cld
pop
adc
sbb
pop
out
xchg
scas
rolb
sbb
cli
and
ljmp
sbb
dec
inc
xchg
repnz
imul
ss
mov
out
cld
cmp
add
adcb
dec
lods
fildll
lret
ja
push
push
jae
outsb
js
inc
mov
pop
mov
jl
xchg
nop
mov
incl
ljmp
lea
mov
inc
mov
mov
push
subb
adc
cltd
inc
scas
pusha
dec
iret
jp
das
xorl
movsl
jp
xlat
jns
mov
jae
mov
loop
jne
aad
iret
and
jg
cmc
pop
dec
xor
mov
stos
jae
jb
jae
push
call
sub
pop
stc
mul
test
bound
lea
faddl
rcl
mov
sar
repz
fs
mov
mov
cwtl
sti
imul
imul
xchg
sub
inc
mov
xor
adc
add
push
cmp
and
int3
out
and
je
orb
add
jno
insb
mov
or
pop
xor
vshufps
fyl2xp1
jbe
cli
into
aaa
ret
and
dec
xor
adc
mov
push
movsb
outsb
cltd
sub
cmp
jle
ud1
mov
xlat
sbb
jp
or
mov
mov
ret
add
cmpl
int3
adc
mov
xor
pop
jae
mov
dec
fldl
in
xor
ret
sahf
testb
in
leave
cmp
inc
adc
sub
loop
addr16
jp
inc
jp
dec
inc
cmp
lock
test
mov
sti
out
push
pop
adc
pusha
into
pop
xor
in
mov
rcrb
lcall
cmp
xlat
pop
ja
loop
and
outsl
mov
adc
scas
dec
out
sbb
mov
lret
lret
arpl
gs
sbbb
enter
adc
stc
rol
push
hlt
push
dec
arpl
out
scas
or
dec
or
push
dec
cmp
mov
mov
adc
movsb
aas
jg
mov
sub
xor
test
popf
or
popa
out
lds
clc
dec
iret
daa
fdivrl
and
adc
lcall
jge,pt
test
inc
call
add
mov
xchg
fadds
sub
push
xor
xor
lods
aaa
into
dec
into
adc
orl
divb
jmp
mov
fcmovb
cs
leave
sbb
or
mov
or
xchg
sbb
jbe
stc
and
nop
dec
fs
inc
sbb
ret
mov
pop
sub
or
push
xor
dec
jbe
loop
mov
bound
cmp
fildll
jno
nop
sahf
or
cmp
icebp
imul
jl
xor
cmpsl
sahf
aas
lods
inc
adc
mov
mov
clc
aam
sub
imul
movsl
sub
sub
clc
mov
and
leave
jns
aas
xor
inc
clc
into
stos
cmpl
fbstp
scas
mov
cmc
add
das
xor
cwtl
rcrl
and
ss
xor
in
outsb
dec
leave
push
inc
push
dec
sbb
rolb
into
cwtd
test
cmp
inc
adc
shl
sbb
fists
arpl
int3
test
cmc
cmp
mov
mov
mov
div
xchg
xor
xor
xchg
xor
imul
leave
sbb
pop
and
xor
insl
add
pop
dec
cmp
push
mov
imull
je
add
daa
or
adc
xor
into
sub
int3
int3
jmp
inc
sti
aaa
sub
adc
ret
sbb
jle
fildll
fadd
ljmp
stos
les
in
jl
mov
inc
pop
pop
stos
push
xor
add
add
ljmp
inc
or
mov
jae
or
imul
shll
jle
xchg
into
fwait
add
mov
sub
mov
xor
jp
inc
inc
xor
add
lods
sti
push
sti
push
stos
addb
loopne
shll
inc
or
mov
sub
or
jbe,pt
das
inc
jae
mov
sub
mov
es
into
mov
xchg
mov
leave
or
aam
in
mov
jb
addb
pushf
mov
pushf
pusha
sti
jo
loope
int3
add
jecxz
jno
iret
xorb
xor
or
dec
call
leave
imul
sbb
sub
gs
in
shl
mov
lea
add
mov
popf
inc
mov
pop
push
fldcw
iret
pop
cltd
xchg
push
adc
shll
movsb
cmp
add
inc
pop
rorb
mov
out
insl
pop
mov
push
shlb
inc
adc
cs
jae
sub
js
addr16
shrb
je
imul
mov
and
inc
lds
rcl
xlat
test
and
xchg
imul
insb
dec
mov
fwait
arpl
pushf
cmpsb
and
pop
pop
fisttps
lea
push
sahf
mov
or
out
lock
cmp
dec
jmp
lret
cwtl
shll
aam
clc
jmp
sbb
mov
mov
inc
ret
fsubrl
or
inc
movsl
sub
sub
mov
lahf
mov
pop
data16
movsl
leave
int
pop
aas
mov
sti
repnz
bound
loopne
outsl
push
scas
sahf
mov
dec
add
sbb
into
lods
add
sar
jmp
inc
pop
clc
pop
cmp
movsl
pop
outsb
cmpb
pop
push
or
inc
sub
out
shlb
xchg
ror
cltd
pop
push
lcall
push
push
jae
mov
push
stc
push
push
mov
fdivrs
ja,pn
cmp
adc
and
aas
mov
in
jecxz
addr16
enter
push
in
jo
ret
lcall
scas
fs
dec
and
mov
inc
cmp
and
mov
repnz
jns
jo
xsave
imul
sub
add
outsl
movsb
filds
js
inc
fldcw
mov
push
pop
sub
xchg
loope
es
int
mov
lds
jne
cmp
cmp
fmulp
push
rolb
std
fisubrl
and
jp
mov
lcall
sbb
test
push
lahf
test
scas
jne
jp
inc
jp
and
pop
loopne
into
into
adc
jno
aad
scas
ret
ljmp
lahf
xor
mov
inc
pop
faddp
dec
sbb
imul
pop
xlat
inc
jp
inc
in
sub
ret
or
inc
into
mov
lahf
and
or
xor
cmp
cmc
rorl
call
or
add
mov
mov
out
pop
and
call
sbb
sub
leave
pop
mov
sbb
into
jne
bswap
roll
cmp
cwtl
and
and
add
sbb
data16
xchg
and
test
inc
aaa
sbb
mov
cmp
scas
mov
cmp
psubusb
mov
cmp
push
cltd
loopne
cld
mov
jnp
pop
push
pop
mov
inc
sub
shrb
andb
cmp
aas
imul
jo
fnsetpm(287
aas
mov
cmp
aaa
adc
mov
popl
jb
pop
cld
outsb
cmp
test
out
movsb
pop
je
mov
inc
inc
jle
scas
bound
mov
jp
or
imul
das
je
jbe
fwait
loopnew,pn
test
lcall
mov
orl
push
or
out
inc
sahf
fisttpl
adc
dec
hlt
cmp
shlb
and
fcmovne
jle
mov
aad
jg
out
cmp
fs
stos
imul
ja
inc
mov
outsb
and
push
mov
bound
xor
les
sahf
repz
push
push
sbb
adc
push
leave
mov
nop
dec
fildll
imul
inc
inc
pop
das
push
fsub
stos
mov
sub
nop
out
movsl
frndint
sub
jl
jno
adc
and
jnp
fidivrs
cltd
inc
jge
xor
dec
loopne
adc
sub
or
pop
out
xchg
rcll
cmp
and
mov
adc
inc
inc
lcall
pop
in
sti
pop
inc
clc
mov
adc
sti
push
or
mov
adc
repz
ret
mov
ret
pop
fistps
sub
pop
pop
sbb
je
insb
mov
dec
aas
in
mov
mov
xor
lods
mov
mov
cli
sbb
lods
test
test
fiaddl
jbe
insb
or
mov
lcall
ljmp
adcb
or
out
ficoms
jb
repz
js
ds
test
movsb
adc
daa
mov
adc
in
aam
and
call
jle
test
inc
xchg
movsl
adc
cmpsl
xchg
leave
mov
ret
das
adc
sbb
fistpll
loope
and
test
pop
mov
mov
insb
je
xor
sub
or
fwait
sbb
push
arpl
and
nop
call
mov
cltd
add
fistpll
out
leave
clc
repz
mov
inc
adc
or
clc
cmc
dec
sbbb
cltd
pop
sbb
jne
sti
into
ss
jo
inc
mov
jg
inc
aas
mov
push
fwait
push
mov
sub
mov
xor
pop
addl
cwtl
jne
aad
popf
add
push
hlt
mov
push
push
aad
pop
es
lea
fidivrs
jae
jge
jmp
pop
in
dec
pop
mov
sahf
jae
in
jo
aaa
popf
popa
ss
xor
loopne
div
inc
mov
addr16
data16
cld
add
xchg
add
out
movsl
mov
fnstcw
out
xchg
punpckhdq
loop
xchg
adc
jg
ret
loop,pn
dec
ret
jle
xchg
inc
mov
mov
arpl
sbb
sbbb
cltd
jecxz
ror
pushf
es
shll
fcomps
xor
inc
push
data16
push
or
cwtl
xchg
xchg
pop
sub
movsl
icebp
push
mov
mov
sbb
in
adc
pusha
test
jecxz
test
insl
add
jo
cmp
push
lods
cmp
aam
out
lea
ljmp
insb
test
mov
mov
outsb
movsb
jmp
enter
jecxz
bound
sub
orl
int
cltd
repnz
jg
add
aam
jne
out
cmpsb
sar
imul
sub
push
xor
mov
nop
sub
mov
je
dec
fsin
push
mov
add
rclb
sbb
fisttps
adc
out
nop
test
xor
rorb
sbb
sti
push
cmp
mov
data16
xor
cmp
adc
clc
ljmp
ret
push
or
rorb
cmpsl
test
push
orb
mov
mov
jg
xor
fcomps
popf
xor
daa
jl
inc
inc
outsl
sbb
mov
add
dec
add
leave
push
sbb
mov
icebp
adcl
fwait
xchg
xor
ja
jecxz
notb
movsl
aam
inc
and
aad
fcmovu
sbb
or
sbb
jae
into
in
daa
adc
es
mov
dec
or
mov
mov
fdivl
fcmovnbe
fs
int3
cmp
add
jno
xor
iret
jo
mov
ret
inc
loopne
sub
sbb
mov
in
push
dec
mov
dec
mov
xor
pop
cmc
xchg
gs
jnp
add
or
fs
push
dec
xchg
repz
mov
push
das
adc
cltd
push
loopne
cmp
push
cmp
xchg
mov
jae
add
cmp
arpl
add
push
add
insl
push
stc
ret
or
cmpsl
add
lods
push
pushf
jge
mov
add
cmp
push
popa
insb
dec
mov
test
in
mov
lret
popl
dec
das
cld
pop
mov
sbb
shl
xchg
mov
lods
fsqrt
inc
sub
dec
ljmp
sbb
jb
xchg
mov
xchg
push
mov
arpl
mov
inc
lret
push
jge
pusha
into
xchg
scas
fcomps
stos
andl
add
aas
pop
mov
xchg
fldcw
bound
cmpsb
repnz
xor
mov
dec
sbb
and
pop
outsb
mov
cmpsl
cmp
and
gs
in
jl
mov
jmp
test
stc
cli
xchg
insb
inc
xlat
rorb
sub
push
loop
mov
sub
rep
outsb
ja
sub
cld
lock
dec
insl
inc
dec
xor
jno
leave
xor
adc
lods
js
in
aad
in
xor
cmp
ret
cmp
arpl
pop
insb
mov
imul
mov
jo
lret
ds
sarb
jl
sti
xchg
aas
or
sub
mov
adc
popa
out
addr16
jge
fistpll
xchg
fidivs
fwait
dec
or
or
push
sub
sub
rol
or
add
sub
pop
fs
lea
jne
mov
or
pop
push
shll
or
stmxcsr
mov
mov
sbb
inc
idivb
fstpl
test
iret
jmp
sub
pop
test
push
les
jmp
sti
div
mov
push
inc
mov
dec
inc
arpl
enter
inc
popf
add
or
push
fstp
cmc
rcr
mov
in
jge
jae
ret
shll
pop
mov
mov
xor
jp
cmp
std
dec
xor
push
fsubrl
sbbb
or
inc
shr
mov
dec
adc
aam
fadd
mov
sub
sub
icebp
in
mov
push
andb
sahf
popa
xchg
adc
ret
pop
mov
mov
mov
pop
pop
mov
xchg
divb
shll
in
icebp
dec
and
ret
rorb
cmp
jno
ds
push
int
push
jle
cmp
and
dec
inc
dec
dec
inc
lods
pushf
sub
loop
push
mov
shlb
sub
cmp
pushf
add
es
pop
adc
frstor
gs
add
sahf
aam
out
sbb
sti
adc
and
jmp
cmp
lods
xor
jo
dec
scas
xchg
pop
inc
fcomps
in
sbb
dec
insb
jnp
stc
ret
cmc
ja
or
test
ds
and
nop
sub
jo
add
cs
mov
cmc
xchg
mov
out
orb
or
in
or
jl
lods
aam
cmpb
fldlg2
shld
inc
cmpsb
shll
sub
jl
xchg
sti
imul
and
aas
xlat
xchg
les
pusha
fnsave
in
scas
lock
popa
cmp
and
mov
test
mov
hlt
sub
add
repnz
data16
ret
mov
sub
and
call
andl
jb
sub
and
outsl
dec
movsl
dec
imul
xorb
loopne
jp
mov
jno
adc
clc
and
add
jbe
arpl
lcall
rcr
pushf
mov
jnp
rclb
loopne
xchg
push
aam
std
aaa
lock
lahf
inc
pop
fbld
insb
pushf
inc
nop
outsb
sbb
mov
adc
xchg
xchg
xchg
sti
pop
sub
mov
sarl
lahf
mov
icebp
sub
fisubl
add
arpl
into
add
aad
rorb
sti
mov
inc
test
cmp
cmp
enter
pop
and
sti
mov
cli
mov
sbb
sti
mov
cli
test
add
xchg
dec
inc
push
faddl
scas
xchg
mull
enter
jmp
mov
mov
out
aaa
add
sub
sub
mov
cld
cmp
sbb
dec
jle
inc
lea
dec
xor
jmp
js
jno
mov
das
lods
ljmp
fwait
leave
xchg
jbe
xchg
lahf
dec
cmp
fmul
clc
jle
int3
imul
cs
out
or
int
lret
adcl
iret
fs
retw
les
sbb
std
test
xor
loopne
js
sbb
or
mov
outsl
pop
mov
aaa
mov
adc
out
shl
or
das
xchg
cmpsl
ds
push
dec
add
sub
in
vxorps
cmc
out
mov
loopne
loopne
sub
inc
mov
lock
cltd
inc
mov
mov
cmpsb
ret
dec
scas
shl
sub
cmp
outsl
cmpsb
add
mov
filds
push
mov
pop
mov
dec
stos
sub
pop
in
xchg
push
adc
inc
adc
add
testb
nop
push
out
pop
movsl
loope
sub
mov
mov
movsb
test
roll
cs
add
xchg
mov
cmp
xchg
push
sub
pop
jbe
push
pop
add
leave
shll
lret
sbb
sbb
or
jo
test
fildll
inc
iret
sti
fwait
mov
outsl
xchg
or
syscall
pop
add
pop
jl
mov
inc
pop
pop
adc
mov
movsl
dec
xchg
scas
loopne
sbb
es
in
cmp
lret
xchg
std
aam
clc
jmp
cltd
ja
fwait
dec
lret
and
mov
dec
mov
mov
out
inc
sahf
push
xor
adc
rcrb
jns
ja
movsl
out
cmp
cld
cmpl
ja
fisubs
and
outsb
data16
xor
scas
pop
sahf
pop
inc
daa
jl
js
xor
cmc
jae
and
pop
or
in
sbb
push
jge
mov
sub
enter
iret
adc
cld
adc
push
xchg
cmp
and
mov
pop
jne
mov
mov
cmpsb
cs
xchg
fisubrs
pop
cmpsb
shrb
pop
movsb
cmp
mov
popa
movsl
ffree
and
push
inc
xor
test
xchg
mov
cli
jle
lods
pushf
xchg
cwtl
push
mov
lods
or
pushf
mov
test
call
lods
cmpl
fwait
add
push
mov
adc
fisubrl
inc
mov
jns
pop
inc
mov
sub
out
addb
ljmp
dec
pushf
out
jnp
and
mov
mov
or
and
or
xor
add
mov
lods
mov
mov
cmp
add
out
pop
or
or
sub
pop
dec
aaa
pop
icebp
push
add
fcmovne
cli
outsb
xchg
int
stc
enter
sub
dec
movsb
or
push
xor
mov
pop
cld
arpl
into
mov
cwtl
dec
or
inc
insl
jae
bound
lea
cmp
fisttpll
inc
bnd
call
jno
cwtl
adc
in
insl
aam
popa
mov
push
jns
fdivrl
jnp
mov
pop
lret
fsubrs
push
sarb
fwait
enter
mov
cltd
int3
xorb
jb
stos
push
adc
movsl
and
or
imul
jl
movsb
jnp
loopne
mov
leave
xchg
jb
stc
fdiv
testb
iret
ret
loop
insb
xchg
push
stos
test
jmp
mov
outsb
mov
jno
fisttps
je
add
test
out
sbb
mov
mov
popf
es
inc
dec
in
push
mulb
adc
cmp
out
out
dec
mov
xchg
sbb
and
sub
imull
push
mov
xor
movsl
stos
xchg
shlb
push
xchg
pop
ror
lods
mov
fisubs
pop
cs
add
shlb
and
sti
adcb
mov
iret
xlat
hlt
shll
pop
sti
sbb
xorl
add
das
hlt
fistpl
loopne
mov
orb
mov
cmp
scas
push
push
push
push
jp
push
mov
jle
test
std
incb
and
and
cmpl
lahf
in
mov
push
daa
ja
jo
cmp
add
sbb
mov
in
or
hlt
stos
mov
stos
mov
fdivs
adc
in
ret
pop
jmp
mov
or
or
cs
mov
xchg
movsb
mov
mov
adc
cmpsb
cmc
push
out
aam
lcall
into
int
das
mov
fcmovbe
scas
sbb
adc
jno
popa
out
js
insb
andb
dec
movsl
jbe
pop
add
cmp
gs
cmpsb
mov
cmp
sar
enter
sbb
stc
cmp
sarl
adc
sti
cmp
push
data16
mov
cmpsb
push
fcmovu
enter
arpl
into
xor
fwait
hlt
fldl
scas
cmp
mov
add
and
inc
ja
pop
mov
add
dec
or
movsb
lds
xchg
in
dec
jp
fildl
mov
push
xor
add
mov
push
mov
les
fidivl
sbb
push
adc
sbb
in
dec
aad
mov
and
cmpsl
imul
movsb
bound
mov
push
out
lods
in
fcom
insl
lret
sub
add
add
push
add
xchg
enter
js
pop
push
xchg
push
insl
xchg
insb
pusha
int3
xchg
addr16
out
test
mov
mov
movsl
push
push
inc
repnz
mov
xchg
in
mov
fsubr
inc
or
fbstp
loop
and
sarb
pop
mov
lea
jae
sbb
popf
ja
fldl
mov
fdivrl
out
mov
fldt
inc
mov
test
test
or
ret
pop
aaa
sbb
in
pushf
dec
adc
lahf
inc
and
fs
sbb
adc
fmul
push
mov
insb
or
dec
stc
pop
call
shr
int
sbb
sub
fimull
inc
cmpsb
jg
xlat
sbb
or
adc
jb
insl
inc
jp
divb
mov
pop
mov
push
or
loope
shrb
or
mov
bound
dec
cwtl
push
jmp
push
add
mov
xlat
inc
cmp
add
push
push
xor
mov
and
ds
and
ljmp
xor
popa
negb
repz
pushf
mov
loop
fucomip
lea
lock
rorl
push
ljmp
sbb
aas
movsl
mov
xchg
add
push
out
jo
cmp
inc
or
popf
aad
lods
push
daa
movsl
push
jge
xchg
xor
in
mov
sarl
xrelease
inc
mov
outsl
out
sti
inc
and
pushf
imul
packsswb
push
xlat
movsb
push
lock
shr
mov
push
fwait
pop
nop
cmp
loopne
sahf
xchg
rcll
cmp
popa
mov
mov
lods
scas
adc
sahf
push
js
or
fnstcw
stc
push
inc
add
int
test
or
mov
shlb
insb
lcall
lods
push
dec
addr16
js
jmp
or
xchg
stc
mov
in
enter
push
cmp
and
xchg
adc
sti
out
cli
push
lret
dec
popf
and
push
or
fadds
mov
ljmp
or
shll
jae
mov
add
test
jnp
sub
pop
dec
iret
mov
adc
mov
mov
mov
call
div
xchg
hlt
rcr
or
xor
push
and
adc
ficoml
sbb
hlt
icebp
jb
jp
sub
subb
add
dec
mov
lds
enter
sub
pop
and
into
shr
mov
in
test
mov
sbb
je
mov
int
imul
cmc
push
test
cmp
fwait
into
hlt
pop
xchg
and
and
call
enter
daa
pop
and
mov
lods
mov
shlb
leave
cmp
push
bound
or
shlb
adc
lret
adc
mov
adc
mov
cmp
sbb
jle
add
scas
shll
out
inc
mov
pop
inc
popf
sbb
xor
jmp
and
sbb
sahf
mov
xchg
pop
sub
xchg
mov
ret
pop
in
push
pop
pusha
adc
inc
adc
push
inc
aad
jno
push
das
aam
outsb
sub
repnz
lods
push
sub
ljmp
dec
xor
mov
push
aas
rcrl
into
lea
ljmp
inc
mov
leave
test
push
out
xchg
and
les
sub
push
daa
push
push
imul
inc
push
cmpsl
jl
dec
push
dec
jbe
nop
sahf
xchg
cltd
cmpsl
and
jle
dec
inc
cwtl
cmp
inc
mov
xor
mov
mov
dec
pop
mov
or
jo
pop
outsl
dec
add
mov
xor
and
pop
xor
push
pop
jle
ss
mov
sti
sbb
rorb
adc
int3
mov
xor
inc
lods
jnp
loope
push
insb
fucompp
cmpsl
pop
push
call
adc
stos
les
mov
dec
frstor
push
sbb
push
xor
mov
pop
outsl
xor
push
sbb
mov
mov
popf
popf
pop
xor
daa
push
push
xchg
fmul
leave
pop
mov
and
add
dec
rol
and
cmp
scas
mov
add
arpl
mov
and
mov
mov
jae
ss
mov
test
pusha
fbld
jmp
test
lret
shll
adc
inc
fs
xchg
out
out
push
cmp
nop
mov
pcmpgtb
mov
xor
add
sbb
sti
stos
mov
mov
sbb
sti
mov
adcl
sbbb
rcr
in
or
pop
mov
cmp
imulb
sahf
sarb
test
into
pop
adcl
xchg
mov
test
je
mov
sub
pusha
out
loopne
mov
push
sarl
fistps
aam
xchg
les
pop
jg
fildll
movsb
xchg
inc
add
imul
negb
inc
lds
arpl
push
xlat
mov
cltd
mov
pusha
movsl
cmp
mov
jmp
out
mov
hlt
mov
or
inc
call
popf
cmp
into
mov
pop
insb
jl
rorb
imul
lret
roll
mov
rorb
jns
add
xchg
mov
cmp
cmpsb
cmp
nop
dec
pushf
aaa
loopne
rcrl
sub
jmp
imul
xor
adc
adc
push
dec
mov
iret
hlt
jp
in
or
lret
and
jns
xor
rolb
xchg
pop
xchg
pushf
pop
testl
in
sarb
jno
cltd
xor
movsl
jge
jl
rol
lods
sub
push
jns
out
inc
add
mov
addl
mov
sbb
fcomip
mov
sti
pop
inc
mov
loopne
mov
sub
nop
in
dec
fucompp
bound
cmp
out
inc
push
jnp
and
arpl
outsl
pop
sub
xchg
sahf
push
lret
out
adc
fists
aad
shll
or
test
cmc
sub
repnz
sbb
es
call
cmp
mov
mov
rcll
ljmp
xorl
cwtl
repnz
xchg
sub
inc
dec
lods
sub
mov
outsl
push
sbb
jge
insl
arpl
mov
stos
mov
push
push
push
sbb
movsb
sbb
enter
lcall
pop
int3
notl
out
mov
jmp
mov
dec
lret
fcmovnbe
push
fistpll
or
insl
xor
outsl
push
shll
cwtl
and
jb
scas
test
adc
jecxz
das
out
js
jnp
push
lods
test
stos
mov
imul
cwtl
xchg
push
ja
stos
pushf
pop
test
adc
test
shrl
addr16
mov
ss
cmp
push
xor
cmp
cwtl
dec
ud1
fildll
into
movsb
enter
add
sti
add
andl
lods
and
mov
and
out
push
sub
xchg
out
dec
gs
add
pop
sub
xor
ja
stos
mov
test
insl
pop
aam
int3
idivl
cld
sbb
js
addl
push
iret
push
adc
aas
insb
pop
or
add
cmc
aaa
ljmp
scas
aam
cli
scas
sbb
lds
adc
sub
push
hlt
push
ret
outsb
inc
mov
lds
xchg
xchg
jo
test
mov
sbb
mov
int3
mov
sub
mov
push
orl
push
xlat
ss
outsb
jae
int3
stos
dec
sahf
mov
adc
out
divb
xor
or
aas
jge
jge
scas
cmpsb
add
push
fcoms
or
push
or
and
mov
test
arpl
ret
cld
imul
xchg
push
mov
mov
add
mov
cmpl
ljmp
js
mov
call
xor
das
adc
and
test
pushf
pop
lock
add
add
shll
xchg
aad
jmp
cmp
sub
aas
xor
and
stc
jge
es
inc
mov
sahf
ja
int
das
ja
and
mov
fistl
lret
jg
sbb
mov
aaa
mov
fsubr
xchg
inc
sub
pop
movsb
decb
mov
pop
movsl
outsl
mov
shll
stos
mov
ret
or
or
aad
ljmp
adcl
fucompp
aad
in
adc
xchg
test
in
push
jbe
add
cmp
int3
mov
je
and
add
mov
aam
les
cmpsl
orl
out
into
and
mov
mov
and
cmp
jae
sti
int3
lahf
xchg
mov
mov
cwtl
loopne
jae
inc
jno
mov
jg
fwait
ret
shll
cmpsb
ss
lds
addb
cmp
shrl
stos
cmp
pop
mov
dec
sub
dec
cmpb
enter
pushl
int
push
push
xor
fstpt
jb
sub
popa
cli
mov
arpl
fstpt
adc
pushl
push
iret
cmp
dec
scas
outsl
mov
push
jns
and
lea
cmpl
adc
insl
orl
adc
aas
add
sti
fadds
sar
test
js
test
dec
cld
imul
pop
dec
lods
adc
push
mov
rolb
pop
mov
or
out
ljmp
mov
jge
mov
test
ljmp
and
jg
movsl
cmp
xorl
pop
xchg
outsl
aas
ss
mov
or
sbb
xor
idivl
std
dec
xlat
push
add
scas
adc
int
stc
or
inc
jp
roll
sbb
call
cli
mov
popf
xchg
int
xchg
mov
inc
sub
push
arpl
adc
adc
pop
and
daa
inc
pop
hlt
pop
mov
sahf
add
mov
nop
cmp
pop
stc
jo
inc
jge
bnd
es
jmp
pop
mov
add
sbb
cli
pop
mov
addr16
pusha
pop
movsb
dec
pop
rcll
test
mov
xor
dec
lods
push
decl
test
jp
shlb
mul
and
xchg
jp
in
xor
adc
setb
lock
sub
gs
dec
dec
addr16
jmp
fisubrs
adc
stos
xor
sub
rcr
negl
sub
mov
popa
movsl
push
bound
push
push
xchg
inc
inc
push
sub
or
sbb
fisttps
into
mov
adc
xchg
insb
in
adc
out
inc
xor
xchg
lds
and
xchg
xchg
pop
dec
fisttps
push
pop
mov
push
lods
stos
mov
pop
insl
shrb
movsb
sarl
jae
or
inc
xchg
lret
xor
jno
pop
mov
aad
inc
cwtl
js
and
and
sti
push
push
mov
jecxz
jno
pop
pop
adc
jno
xor
leave
pushf
popa
bound
cmpsl
pop
jmp
stos
imul
mov
pop
ds
lea
jne
add
fidivl
mov
in
pop
aas
insb
add
lahf
push
sahf
addr16
xchg
lods
xor
fistps
cs
xchg
shr
mov
jmp
aaa
push
cmp
adc
inc
mov
mov
dec
sub
call
mov
daa
sahf
push
fstl
adc
mov
jae
dec
maskmovq
idivl
jle
shrl
mov
or
jo
aam
sbb
jne
outsb
mov
mov
loope
aam
jbe
mov
mov
jno
out
test
cmp
into
fldcw
addl
sbb
pop
adc
sarb
ret
outsb
in
dec
pop
sbb
cmpb
pop
loopne,pt
fstp
rcr
shrl
inc
inc
mov
and
ja
jge
hlt
jl
push
pusha
hlt
mov
dec
add
inc
cmp
les
cmpl
xchg
ficoml
inc
stos
hlt
int
and
les
dec
daa
mov
or
mov
pop
sbb
pop
push
cmpsl
pop
add
or
mov
daa
shr
sub
lea
repz
mov
mov
outsb
lods
lret
jae
sub
xchg
xorl
and
mov
xor
scas
fstl
add
out
sbb
jl
into
adcl
cmp
lock
add
cmp
push
lret
shl
icebp
sarb
mov
mov
add
and
mov
mov
xchg
ds
out
dec
inc
pop
out
cwtl
adc
ficomps
test
jle
fdivrs
sub
or
push
or
outsl
push
jnp
jp
mov
inc
les
cmpsl
sub
sbb
bound
mov
dec
sahf
sbb
pop
xchg
andb
xor
cs
scas
scas
shlb
test
xchg
es
or
sub
mov
sar
xchg
in
push
int
aam
arpl
adc
decb
fmul
scas
repnz
ss
sub
jbe
mov
cwtl
and
cmc
pop
push
decb
mov
push
outsl
mov
jp
dec
ljmp
ljmp
xchg
xchg
movsb
push
xchg
adc
sub
into
adc
std
in
std
add
adcl
pop
movsl
sbb
adc
jns
sbb
loope
xor
xchg
xor
pop
aam
lock
addr16
mov
adc
out
jle
pop
mov
sub
and
mov
call
loopne
cltd
mov
xchg
std
in
lods
clc
andl
ss
jno
push
or
pop
in
loopne
test
lods
in
loopne
bound
adc
xchg
sub
pop
sbb
mov
mov
jecxz
sbb
std
pop
adc
out
xchg
lcall
stc
gs
pop
jg
shlb
mov
adc
in
adc
add
xchg
loop
mov
addr16
fcmovbe
push
xor
push
leave
jle
fldl
fsubr
lods
subb
insl
lret
xor
jmp
jae
repnz
mov
icebp
in
pop
adc
addl
je
dec
stos
cmp
and
dec
cmpsb
and
xor
push
outsb
mov
push
xor
and
jb
fcoml
adc
scas
pop
mov
scas
test
pop
int3
aaa
lahf
enter
shr
jns
mov
jne
mov
loopne
les
fistpl
sbb
cmp
js
inc
iret
out
and
push
mov
xchg
divl
notb
cld
mov
inc
jp
or
push
inc
cmpsl
pop
add
sarl
xchg
fistl
ficompl
icebp
mov
pop
shll
mov
sub
xchg
les
xor
test
xchg
hlt
pop
mov
in
lods
cmp
dec
add
daa
xorl
jl
lods
dec
jecxz
out
outsb
pop
xor
mov
sarl
ret
pop
pushf
add
aas
gs
cmp
mov
pop
enter
sbb
in
inc
sarb
ret
sub
adc
pop
lcall
cmp
mov
cmc
xchg
jl
cmpsl
jae
lds
hlt
stos
dec
les
lods
jae
pop
sti
shll
mov
mov
xor
jecxz
mov
jne
push
xchg
fsubrl
outsb
jno
addr16
cwtl
pop
and
fildl
inc
test
pop
mul
push
pop
rcl
sbb
popf
jmp
sbb
xor
pushf
or
dec
ror
rcrl
sahf
outsl
pop
rcll
push
sub
insl
pusha
aas
adc
aaa
push
ret
lock
outsl
stos
cmp
lcall
fnstenv
sub
test
cltd
std
icebp
test
pop
dec
fisubs
pcmpeqd
popa
sarl
sahf
mov
xchg
dec
push
ficoms
mov
lock
mov
adc
mov
std
sbb
ljmp
dec
sub
or
not
jl
and
and
icebp
mov
cmpsb
inc
sub
out
cld
mov
loope
jne
jg
mov
push
cmc
and
mov
xorb
ret
leave
dec
test
ds
cmpsl
mov
sub
jecxz
shl
mov
daa
push
bound
fcmovbe
arpl
lock
mov
dec
scas
inc
mov
aad
lds
fwait
adc
test
pop
mov
adc
sbb
mov
add
or
gs
mov
std
add
test
in
std
jo
orb
xor
pop
ss
sub
loop
cli
daa
mov
lock
sti
sub
int3
in
je
and
or
mov
push
push
cmp
xor
or
nop
ret
and
adc
ss
xor
dec
cmp
xlat
lcall
add
lods
mov
mov
mov
aaa
pop
jp
and
and
jns
orl
je
addb
mov
inc
stos
mov
xchg
sbb
mov
mov
fcomps
or
out
push
xor
pop
int
xchg
aad
xchg
int3
or
or
cmp
xchg
mov
ficoml
sbb
dec
sub
xor
jp
and
adc
inc
insb
jl
loop
rcrl
push
dec
mov
pop
jp
scas
ss
ljmp
adc
daa
adc
push
inc
jo
int3
mov
mov
cmp
les
and
lcall
lds
aas
mov
cmp
pop
insb
dec
repnz
or
es
iret
jnp
popf
loop
aad
and
cld
scas
xor
movsb
inc
mov
inc
orl
pop
mov
adc
pushf
xlat
vpsubusw
xchg
push
mov
jne
xchg
pop
gs
sti
sub
mov
pop
mov
sbb
mov
or
cs
push
pushf
push
and
popf
das
aaa
fstp
add
dec
sub
sbb
pop
fisubrl
nop
jge
xchg
fisubrs
mov
lea
adc
pop
jmp
ja
and
pop
pop
jne
mov
pop
adc
call
jbe
jne
fucompp
sbb
cmp
loopne
pushf
stos
lret
leave
mov
jae
out
pop
mov
fcoms
and
push
jp
das
cli
xchg
andl
iret
cmpsl
mov
cmpsl
icebp
in
cmp
and
mov
imul
cwtl
cmpsb
les
or
cli
mov
inc
dec
fnstsw
and
and
cltd
mov
push
mov
daa
mov
clc
xor
inc
mov
cltd
cli
xchg
aam
jmp
and
ds
and
push
pop
add
sbb
sbb
inc
xchg
lods
enter
lret
cmpl
out
clc
adc
push
mov
mov
cmpsl
insb
pop
jno
fists
cmp
aaa
test
inc
bound
sub
test
insb
push
inc
sbb
cmp
out
adc
jae
mov
add
scas
adc
fdivrl
test
sahf
push
and
jae
sbb
test
pop
mov
cli
or
push
adc
in
shrl
js
ret
fdivrl
mov
lcall
loope
cmp
sub
outsb
push
mov
popa
inc
loope
int
scas
in
dec
pop
mov
rcrb
push
inc
pop
inc
jecxz
lret
add
xorl
ds
dec
or
xor
pop
int
mov
pop
cmpsl
add
xchg
sbb
fwait
and
aas
add
shll
int3
bnd
push
pop
jg
in
xchg
loope
pop
xchg
popw
sub
jle
push
aad
fildll
pop
or
mov
roll
mov
cmp
cmp
into
imul
sbb
mov
mov
stos
pop
les
mov
lods
pop
push
out
fidivl
push
fisubrl
mov
xor
push
mov
dec
mov
xor
data16
mov
push
push
jb
scas
pop
or
dec
out
pop
and
mov
pop
ffreep
and
les
jae
mov
loop
iret
xchg
sbb
outsb
cmc
cld
bound
movsb
cmp
ret
adc
in
inc
rolb
jmp
dec
mov
addr16
lods
js
das
pop
mov
leave
je
and
and
xlat
imul
jno
mov
mov
movsl
stos
push
xor
sub
fcmovnbe
xchg
push
in
lahf
push
sahf
leave
sub
push
sbb
sbb
sub
jecxz
lock
and
sub
push
aaa
imul
cmp
rcrb
es
fs
loopw
fnsave
lock
cmp
aad
out
xor
mov
cmc
std
adc
lret
inc
das
lods
jne
insl
std
repnz
outsl
add
mov
push
dec
xor
push
int
xchg
jbe
fsubs
aam
fwait
pop
or
cli
aam
shrl
or
mov
sub
pop
sub
push
mov
xchg
push
cs
pushf
das
dec
cwtl
and
dec
inc
mov
dec
stc
dec
inc
push
push
xor
stos
jne
lods
pop
leave
lods
push
test
and
dec
cmpsl
jne
in
mov
jl
cwtl
cmp
cltd
jp
in
imul
adc
xchg
stos
mov
jbe
and
je
and
mov
cmp
call
xor
adc
push
int
test
pushf
roll
out
imul
fdivrp
mov
lds
add
mov
add
cmp
les
or
jne
sub
insl
push
push
dec
jnp
xchg
mov
inc
mov
hlt
adc
mov
jo
mov
test
out
push
andl
pop
in
les
or
add
mov
jns
jne
movsl
ret
mov
lods
inc
xchg
and
pop
les
xchg
lret
mov
mov
and
xchg
jne
loope
js
mov
mov
call
dec
xor
jb
aam
xor
add
push
pop
sti
jge
mov
insl
mov
sub
sbb
mov
jp
call
lea
rcl
dec
jb
dec
test
cmp
jg
xchg
addl
push
adc
inc
jle
fiadds
cmp
mov
adc
cld
push
mov
xor
fisubrs
xchg
test
mov
lods
out
outsb
movsb
mov
jnp
incl
aas
stc
cmpsb
test
insl
mov
push
sub
fistpll
dec
dec
and
jo
ret
ss
outsl
xor
popa
dec
hlt
push
dec
add
ds
jp
mov
push
jl
stos
or
dec
and
mov
mov
adc
pop
xor
push
outsl
cmp
les
jmp
lds
stc
in
shr
clc
das
inc
mov
adc
lods
lods
iret
fists
loopne
push
xchg
jmp
inc
push
and
mov
mov
jbe
int
lods
mov
cmpsb
shl
loopne
pop
pop
mov
push
pusha
ss
mov
dec
les
out
outsl
mov
lds
mov
sbb
rcr
mov
aad
es
shlb
cltd
xchg
xor
shrl
adc
pop
mov
test
out
add
mov
icebp
roll
xchg
aaa
sub
lods
jb
mov
mov
sbb
mov
sub
jno
xchg
sti
dec
xor
add
test
fstpt
jmp
rcl
testl
push
stos
push
or
cs
and
addr16
stos
call
lds
mov
mov
jge
stos
sbb
imul
jle
mov
push
sbb
cmp
pop
sahf
mov
in
shl
add
rclb
nop
fidivl
sub
fs
in
mov
sahf
cmp
or
push
and
test
pushf
rol
mov
stos
jb
add
movsl
mov
jnp
imul
mov
incl
pop
dec
addr16
shlb
cwtl
mov
gs
and
les
or
shrb
add
sti
push
xchg
and
and
addr16
fildll
insl
xor
imul
mov
jge
mov
fldl
aad
sbb
or
cmovae
xor
pop
pop
fs
xorl
dec
and
fnstsw
stc
pcmpeqd
xor
and
mov
in
xchg
mov
mov
notb
mov
xor
or
iret
or
scas
jecxz
aas
mov
mov
rcrl
cmp
andl
jl
mov
cmovns
push
xor
dec
sbb
outsl
jmp
fwait
pop
andb
xchg
lds
mov
mov
pop
int3
mov
mov
dec
insl
fstp
es
adcb
dec
xchg
dec
leave
and
into
xor
psraw
jnp
dec
jl
push
idiv
cmpsb
repz
test
and
aam
gs
cmpsl
push
dec
fists
lds
movsl
aam
add
mov
test
sbb
arpl
aaa
or
jp
pop
imul
call
outsb
mov
out
sub
mov
jmp
add
iret
fadds
mov
call
sbb
popa
imul
mov
pop
add
iret
fbstp
out
dec
imul
xchg
rorl
scas
aad
in
shl
test
jb,pn
cs
jns
lock
cmpsl
cmp
xor
xchg
push
inc
and
cli
loopne
adc
adc
fs
daa
adc
sbb
loope
aam
ja
mov
and
movsb
fimuls
jno
mov
mov
test
sub
ljmp
mov
or
pop
and
jmp
in
jg
xor
mov
pop
pop
pop
xor
scas
scas
scas
and
int
insb
adc
mov
and
add
rcl
mov
femms
pop
test
test
fldenv
xor
dec
cmpsl
pop
push
xchg
jp
cltd
mov
arpl
push
fldenv
mov
mov
lds
sub
xchg
adc
out
dec
mov
sbb
cmp
scas
sbb
fstl
scas
testb
ret
add
mov
xchg
inc
popa
jle
pop
xlat
adc
subb
fidivl
pop
add
outsl
stc
faddl
int3
cltd
lds
lods
mov
jb
push
clc
jg
test
mov
negl
cwtl
and
or
nop
inc
lods
jmp
jo
jg
les
xchg
pop
outsb
or
js
movsb
sub
push
aaa
leave
mov
or
jnp
mov
mov
or
mov
push
or
lea
out
js
push
or
jb
aam
arpl
sbb
xchg
inc
mov
movsb
jne
test
enter
into
mov
out
dec
push
mov
fnstcw
ds
and
enter
or
or
and
jge
out
mov
dec
dec
xchg
pushf
or
mov
jecxz
pushf
mov
push
jle
testb
arpl
dec
cmpb
shll
mov
sub
cmp
mov
adc
add
push
icebp
or
mov
ffreep
es
jns
inc
mov
inc
mov
mov
fs
sbb
inc
xorl
cmp
dec
cmp
adc
or
std
test
les
lods
cmp
incb
sti
xchg
mov
jo
seta
and
orl
lods
inc
pop
sti
psrad
mov
enter
out
sub
inc
cli
add
dec
cmp
pushf
mov
ljmp
xchg
jmp
pop
mov
jmp
inc
arpl
cmpsb
nop
xchg
popf
mov
into
inc
mov
jae
xlat
cwtl
fcompl
pop
mov
push
inc
aad
inc
mov
fisubs
loope
adc
xchg
jno
xchg
xchg
push
inc
dec
cmpb
sub
fsubs
es
ljmp
inc
into
cmp
sub
es
fistpl
mov
adc
fldenv
dec
lahf
fildll
push
push
clc
mov
mov
ret
sahf
lods
xchg
bound
ljmp
subb
add
or
pop
sbb
sub
in
icebp
add
jb
fs
mov
lods
pop
shlb
icebp
sub
xor
push
mulps
addr16
push
scas
stc
pop
imul
mov
push
mov
mov
inc
cmp
mov
popa
js
jae
bound
pop
mov
mov
xchg
stos
and
daa
xor
lds
int
popa
popa
cltd
mov
xchg
pop
jle
pop
inc
cmp
dec
ret
xchg
ljmp
int3
dec
hlt
add
aad
mov
pop
push
jl
pop
into
psubw
nop
xchg
insl
cs
sahf
cltd
xor
jge
jle
add
insl
lods
loopne
jns
push
lods
cwtl
cld
lret
adc
push
cltd
or
insb
outsl
into
sub
sbb
or
sti
fwait
mov
rcrl
std
sti
sahf
mov
rcrl
pop
std
add
cmp
nop
outsl
jp
and
cmp
push
push
cmp
and
jmp
adc
or
popa
push
sbbl
aaa
je
nop
cmp
idivb
mov
aad
xchg
sarb
out
call
inc
fyl2x
int
inc
out
mov
xchg
adc
loope
mov
push
xor
xor
xor
mov
iret
xchg
inc
daa
iret
cmp
das
mov
sbb
loopne
popf
mov
imul
lock
add
dec
mov
mov
fcompl
xorl
dec
adc
sbb
inc
or
std
out
lods
mov
test
xchg
push
arpl
xchg
adc
lock
fisttps
jg
or
test
and
ror
in
fidivrl
andb
mov
add
mov
into
leave
hlt
jge
inc
test
dec
stos
lea
adc
jge
or
jne
std
stos
jae
insl
dec
mov
sbb
add
test
stc
jb
push
xchg
arpl
mov
in
add
inc
mov
xchg
rcrl
add
sub
popf
pop
iret
bound
outsl
dec
cltd
insb
xchg
imul
lahf
jno
mov
fwait
adc
lcall
lock
push
popf
fsin
iret
sti
cmp
sub
fwait
xor
mov
jg
xchg
sbb
ljmp
and
dec
sbb
xor
inc
aas
sbb
or
mov
sub
cmpsl
mov
jg
into
inc
jae
imul
mov
dec
xchg
mov
jmp
xor
xorb
xor
cmp
adc
ficompl
ds
call
data16
jg
fldt
or
cmp
addr16
cmc
gs
cmc
sub
jg
push
rcrl
jo
out
pop
popa
jg
es
out
jno
sub
push
mov
xchg
mov
dec
cmp
loopne
jne
notb
sbb
stos
test
adc
aad
enter
sub
push
jmp
ret
xchg
add
pop
adc
ror
lods
test
shlb
in
and
decl
add
xor
xor
cmp
and
js
fcoml
scas
inc
sbb
fs
aas
pop
adc
mov
push
cmp
rcrb
test
bound
lcall
add
add
scas
ljmp
out
and
jno
cmpsl
mov
push
jb
jae
or
sub
push
xchg
sti
orl
shufps
lods
mov
sbb
add
push
mov
movsb
fstpl
pop
jl
xor
aaa
xchg
hlt
ljmp
mov
aad
pop
xor
pop
xor
mov
int3
aaa
cmpsl
int
decb
sbb
arpl
dec
push
stos
inc
movsl
and
jb
js
js
mov
sub
mov
ret
xchg
int3
cmp
jno
mov
dec
sbb
mov
decl
pusha
sbb
dec
mov
xchg
lock
mov
sbbl
fmull
fsubrl
mov
and
cmp
push
xchg
xchg
fsts
jns
xor
notb
sbb
movsb
loop
adc
emms
jle
scas
dec
dec
hlt
sbb
xor
lret
insl
fistps
sbb
cmp
fbstp
add
jb
or
fs
lds
adc
mov
dec
dec
scas
cs
jg
mov
ljmp
out
lcall
add
rcrb
jmp
test
sbb
or
push
nop
ss
pop
mov
xchg
leave
fnstcw
nop
adc
lahf
sbb
inc
inc
xchg
sub
add
add
push
int
cmp
add
lahf
aaa
push
scas
test
jno
iret
call
and
fcmovb
cs
mov
adc
sbb
notl
inc
mov
fwait
sub
xchg
rorb
repz
xchg
pop
sbbb
and
push
jecxz
adc
xlat
jecxz
popf
sub
scas
cltd
stc
mov
pop
cmp
aam
sub
lcall
inc
inc
ds
mov
push
jl
sub
push
or
dec
ret
sub
adcl
dec
xor
test
inc
mov
lahf
sbb
mov
int
mov
addr16
inc
or
xchg
lods
mov
and
mull
insb
add
repnz
dec
daa
fs
adc
xchg
lcall
sbb
lcall
and
sbb
pushf
ret
fnstsw
jne
xor
lds
imul
sbbl
outsl
or
push
lods
jge
mov
or
sbb
push
mov
cmc
std
sbb
lret
pop
push
or
pop
inc
or
mov
mov
mov
sbb
sbb
cmp
adc
push
inc
insb
js
lcall
into
xor
push
shl
test
xchg
xchg
mov
xchg
adc
mov
xchg
sarl
sbb
cld
add
xor
and
in
push
jge
push
add
jne
rcl
adc
xor
inc
mov
leave
pop
add
pusha
xchg
shll
cwtl
call
fdivrl
pop
mov
nop
cld
rcrl
hlt
xchg
add
test
int3
xor
js
mov
stos
xor
pop
sbb
sub
sub
repz
adc
fprem1
add
lcall
xchg
cwtl
out
sti
aam
aad
les
or
ss
dec
push
lret
rcrl
adc
and
xchg
sub
fiaddl
jecxz
adc
test
mov
stos
shrl
ror
sbb
pop
jge
shrb
sub
pop
repnz
push
sub
and
adc
sub
nop
mov
aaa
dec
inc
xchg
dec
stos
arpl
stos
or
ds
movsb
inc
movsl
pop
mov
add
sbb
dec
xor
jg
loop
stos
sub
mov
in
xor
xchg
pushf
jge
push
movsb
arpl
mov
xor
mov
jle
mov
imul
cwtl
aad
dec
xchg
int3
dec
xor
mov
stos
xchg
pop
movsb
pop
cwtl
jmp
ret
pop
or
or
xlat
and
clc
inc
push
sbb
xchg
mov
jmp
sbb
rcl
inc
sbb
xor
sub
mov
loopne
inc
sbb
cmp
xor
imul
inc
dec
daa
cltd
mov
lcall
push
pop
pop
jne
call
sbb
incl
out
pop
mov
scas
mov
loope
repnz
jge
addl
not
sbb
icebp
clc
leave
jne
sbb
inc
lds
arpl
adc
dec
into
aaa
sbb
push
icebp
cmc
icebp
sub
cmp
dec
push
mov
xchg
add
dec
xchg
pusha
test
jmp
shlb
cmp
push
dec
ss
jg
adc
sub
lods
addr16
pop
test
aad
mov
pop
jb
push
sub
out
xor
push
pop
adc
sub
insb
scas
dec
ja
sbb
out
addb
es
test
mov
je
in
ja
and
ret
sub
test
pop
cmp
adc
mov
mov
mov
lods
mov
jns
hlt
popf
out
inc
fsubs
out
inc
mov
and
xor
mov
mov
ret
out
roll
in
leave
cmp
mov
push
sbb
loopne
mov
add
jnp
cmp
mov
add
pop
js
cmp
ret
lock
aaa
int3
movsl
xor
mov
and
repnz
mov
dec
movsl
push
dec
pop
in
jecxz
mov
mov
add
pop
adc
daa
pop
dec
or
jo
cmp
mov
cmp
rol
std
mov
jnp
sbb
push
mov
xor
cld
mov
mov
dec
mov
xchg
adc
or
call
lods
fs
aas
les
test
ss
mov
mov
and
mov
scas
repz
xchg
bound
mov
dec
stc
push
xor
jo
into
xchg
or
cltd
nop
adc
aaa
shl
xchg
sbb
or
pop
fcomps
add
cmp
inc
aas
push
dec
jne
stos
mov
xor
inc
jae
int
sub
icebp
rcll
jmp
icebp
enter
icebp
mov
call
ret
cltd
call
mov
repz
out
dec
xor
add
daa
push
and
leave
mov
lcall
lahf
adc
push
sub
gs
hlt
mov
addr16
sbb
rclb
fildl
test
js
int
xor
orb
rcl
sahf
daa
inc
sub
into
push
push
jae
sbb
sbb
push
rcrb
subb
sbb
sub
test
mov
into
imul
outsl
nop
mov
sbb
jle
xchg
jb
stc
lea
mov
repnz
cmp
mov
pop
loopne
lods
cltd
cmp
xchg
sete
outsl
movl
pop
adc
insb
jbe
pop
popa
xor
adc
mov
xor
mov
dec
jb
arpl
cld
pop
loope
xchg
push
pop
sbb
jne
or
lret
or
fadds
mov
adc
inc
out
stos
cmp
loopne
pusha
jecxz
call
ja
enter
jecxz
insb
sub
inc
sbb
add
scas
jo
je
xchg
shrl
in
dec
cld
add
fimuls
js
daa
add
xor
push
jecxz
shll
aam
cld
sub
xorl
xlat
mov
mov
lods
sub
xchg
iret
sbb
stos
pop
or
mov
testb
xor
daa
jo
mov
pop
mov
xchg
xchg
jne
sub
testb
and
mov
pusha
pop
shlb
sbb
push
cs
push
arpl
xchg
out
daa
insb
mov
shl
aaa
test
dec
test
jne
loop
into
pop
jne
push
aas
hlt
adc
test
mov
aam
mov
inc
add
xlat
pop
dec
clc
inc
outsl
mov
inc
xchg
rolb
or
cmp
pop
gs
loop
push
add
add
retw
mov
and
movsb
mov
mov
mov
sahf
int3
add
cmc
push
mov
adc
aad
xlat
dec
aaa
mov
mov
pop
scas
outsb
inc
sub
and
mov
lock
pop
mov
test
insb
je
insb
ficompl
lcall
repz
lock
jle
fadds
out
sub
sub
lods
stc
jecxz
rclb
dec
leave
jno
mov
cmp
mov
sub
movsb
jns
inc
mov
mov
dec
mov
sub
xchg
cmp
mov
jb
and
ret
loop
rclb
mov
jmp
add
jmp
call
iret
pop
and
xchg
push
fisubl
pusha
pop
jecxz
shl
pop
push
out
insl
cmp
movsl
pop
jl
cmpsl
dec
rcr
rcll
cwtl
imul
cmp
push
mov
jb
pusha
cmp
out
add
popf
xor
pop
push
sub
adc
negb
jbe
jle
loop
sub
sbb
pop
xchg
xor
sub
sub
sub
dec
popf
push
jnp
lds
jmp
hlt
pop
lret
push
lock
push
sbb
xchg
dec
lret
xchg
imul
fwait
push
mov
or
test
rep
mov
fcoms
adc
aad
xchg
cmc
and
inc
jle
fisubs
or
lret
add
js
pop
jecxz
popf
loopne
jno
jp
sbb
nop
jl
andnpd
push
mov
rclb
mov
sub
addr16
cwtl
jmp
xor
xor
xchg
push
jne
xchg
mov
and
repz
inc
cmpsb
lret
loope
add
add
push
lret
addb
pop
dec
cwtl
sub
pop
fwait
lret
mov
xchg
movsb
sbb
adc
cmp
xchg
shrl
sbb
pop
lcall
jp
inc
mov
std
adc
lret
xchg
jns
subl
sub
sbb
gs
or
cmp
jnp
out
inc
add
inc
cmp
into
push
xor
adc
dec
xchg
jb
out
shll
push
mov
push
inc
mov
jmp
lock
shl
pushf
xlat
insb
sti
das
pusha
jge
or
fs
or
adc
or
jmp
xlat
loop
repz
add
jl
test
fyl2xp1
cmc
ja
xchg
jmp
test
sarb
lret
inc
or
hlt
pushf
mov
cld
inc
inc
cli
subb
push
test
stos
imul
jl
inc
jge
cmp
lock
adc
int3
insl
jbe
push
inc
movsb
xor
mov
out
mov
stc
jg
xchg
les
enter
adc
int3
mov
add
or
mov
icebp
sarb
inc
sbb
cli
push
mov
push
sbb
insl
mov
xchg
ret
ss
sub
lods
cld
push
or
mov
push
or
movsb
dec
cmc
repz
xor
mov
rcrb
fsub
add
adc
or
jb
and
push
mov
mov
jl
mov
imul
fldt
rolb
arpl
pop
incl
sbb
push
xchg
fdivrs
inc
push
insb
sub
mov
pop
enter
jp
scas
ljmp
jmp
ret
cmp
fbld
mov
cld
fisttpll
shlb
jne
sbb
fwait
push
addr16
stc
cmp
mov
ljmp
xchg
jb
xchg
int3
fwait
mov
gs
adc
fisttps
in
mov
push
push
incl
std
add
ret
xlat
jbe
ficomps
sub
leave
mov
adc
xlat
sarl
fsubr
jo
cltd
xchg
pusha
shr
pop
std
cli
sub
mov
pop
rorb
jns
and
scas
cli
faddl
cwtl
cmpsb
xchg
repnz
cmp
ds
cmp
rclb
mov
cmp
ret
and
test
push
sbbb
ljmp
jne
pop
xchg
jnp
mov
inc
getsec
push
orl
adc
push
sbb
shlb
sub
xchg
int3
xor
sbb
cmp
sti
pushf
fmulp
movsl
rol
pop
rcrl
mov
push
jbe
mov
mov
jne
xlat
xor
imull
mov
jecxz
and
outsb
mov
sbb
inc
fs
sub
or
lea
scas
ret
mov
mov
call
test
mov
sub
dec
and
stos
clc
push
or
lods
push
inc
sbb
pop
es
rorb
dec
inc
cmpsb
xor
jne
pop
negb
jnp
or
out
mov
repz
fimull
pop
pusha
and
push
fsubrs
push
dec
mov
leave
pop
mov
test
inc
sub
inc
test
dec
ret
mov
inc
mov
xchg
pop
sub
js
and
mov
sahf
aam
pusha
mov
and
ja
inc
ja
mov
mov
int
xchg
outsl
xchg
mov
mov
xchg
mov
jmp
mov
adc
adc
stos
sub
cs
mov
inc
jl
pop
test
fimull
out
dec
inc
mov
lods
jle
lret
mov
mov
push
popl
aaa
mov
incb
scas
das
sub
sbb
mov
addr16
sbb
lods
mov
outsl
mov
mov
rorb
fsubrs
push
push
mov
es
aam
gs
hlt
sti
cld
cmp
hlt
jmp
sub
ror
or
in
pushf
adc
pop
push
addr16
mov
sahf
fwait
cmp
pop
sbb
fwait
mov
pop
imul
repz
es
mov
out
mov
inc
jmp
xor
pop
sbb
mov
data16
adc
adc
jne
pop
pop
adc
adc
in
push
pusha
sbb
cmp
xchg
push
jnp
sub
addr16
mov
rorb
pushf
adc
adc
fists
aas
cs
pop
push
sbb
xchg
lret
out
lea
push
dec
sbb
pop
cmpsl
jmp
mov
push
gs
fnstsw
mov
and
and
aad
sbb
out
and
fisttps
push
inc
ljmp
cmp
sahf
out
sub
mov
and
ljmp
add
stos
popa
ja
imul
in
and
pop
push
adc
out
aad
add
jae
jo
jbe
jb
cltd
adcb
cmpsb
pop
dec
fildl
mov
push
adc
test
aas
or
ret
sub
inc
inc
out
add
rclb
push
pop
pop
mov
inc
push
stc
jmp
pop
dec
jg
decb
cli
mov
movsl
xchg
repnz
stos
cmp
mov
outsb
testb
xor
fsts
jo
cmp
outsl
enter
in
inc
cmp
jnp
xor
or
xorb
mov
mov
dec
mov
in
aaa
or
vfrczpd
inc
out
test
in
xor
outsl
push
in
inc
int
mov
arpl
lds
insl
mov
mov
dec
hlt
dec
pop
nop
mov
cmpsb
fs
test
jmp
pop
mov
leave
mov
sbbl
aas
inc
pop
xchg
test
test
push
cmp
aam
mov
int
pminub
pop
dec
mov
cmp
aam
inc
jbe
mov
pushf
arpl
iret
mov
mov
sbbl
fstl
inc
xchg
loope
shl
mov
xor
push
jo
push
int3
and
mov
pop
insb
mov
push
int
movsb
jge
into
shlb
test
aas
mov
or
fcmovnbe
fists
push
dec
faddl
mov
ss
push
xor
xchg
int3
cmp
inc
jge
outsl
push
dec
inc
and
sbb
jae
mov
jge
add
jge
mov
pop
lock
icebp
mov
and
inc
mov
pop
js
push
fcmovu
push
mov
xchg
popa
pop
pop
cld
insb
aam
sub
addl
into
mov
inc
aad
xchg
icebp
aam
fdivp
xchg
mov
loop
scas
jns
push
stc
rcl
push
shll
inc
mov
hlt
flds
dec
jb,pt
lahf
es
fistpll
ret
pop
mov
inc
in
add
es
add
push
sub
aaa
imul
adc
out
push
push
jo
sub
icebp
jno
addb
mov
outsb
mov
adc
and
aad
cmc
std
int
sti
repnz
insl
in
push
adc
xor
add
xchg
popa
clc
test
push
mov
mov
and
push
fwait
negl
dec
dec
lock
incb
xlat
fstps
adc
and
pop
lds
jne
mov
outsb
aas
test
lea
mov
fldenv
mov
adc
xchg
lods
adc
sahf
in
push
mov
fstl
daa
cld
jge
and
mov
ds
xor
and
lcall
out
addr16
adc
xchg
sbb
test
jp
sbb
addl
shll
jp
sbb
mov
mov
jbe
and
cmp
mov
mov
ret
mov
xchg
sub
add
and
jl
lret
xchg
jl
mov
mov
sti
mov
jnp
jne
xchg
cmc
dec
cld
fimuls
lret
sbb
nop
and
pop
dec
push
pop
sbb
int
fwait
xor
push
mov
fs
sbb
push
lret
and
ljmp
fwait
shll
scas
xor
mov
rorb
cmp
aas
push
lret
test
sarb
mov
lret
ss
jae
fwait
mov
fiaddl
push
xchg
dec
mov
inc
xchg
scas
stc
add
mov
xorl
orl
mov
dec
push
mov
ret
lret
jae
sbb
int3
stos
xchg
mov
punpckhwd
movq
jbe
push
mov
and
or
call
and
stc
xlat
mov
add
cli
fwait
xor
push
adc
jg
leave
add
sub
lahf
dec
out
inc
sub
cmp
xor
add
xor
aam
ret
xchg
mov
xor
pop
push
push
mov
mov
push
jge
push
out
pop
push
cmp
bound
imul
add
mov
jne
jne
hlt
icebp
push
insb
adc
nop
xor
xchg
adc
adc
mov
adc
jb
xorl
jmp
mov
into
xor
fsubl
ficompl
xchg
pop
push
xor
jo
adc
nop
inc
pop
sbb
adc
push
nop
cmp
movsl
mov
jg
mov
lret
push
sbb
inc
sub
push
and
dec
push
das
leavew
das
lret
fbstp
xorb
pop
std
lods
cmp
fsubrl
aad
pop
insl
mov
cmp
sub
jo
xchg
cmpsb
mov
jl
cli
adcb
cli
movsl
fwait
or
push
xor
pop
fld
sub
out
xchg
or
jecxz
xchg
inc
xchg
movsb
pop
cmp
std
xor
xor
inc
sbb
popa
lds
fists
fstl
ret
xchg
fwait
jle
into
mov
adc
imul
inc
or
mov
and
pop
inc
jb
lea
popa
inc
push
xchg
or
inc
and
in
and
pop
xchg
imul
nop
adc
popf
push
dec
movb
fbstp
movsl
sbb
lret
mov
lods
xchg
stos
stos
push
fsubrl
sbb
adc
mov
int
and
jnp
dec
xor
sti
push
dec
and
push
push
push
push
dec
mov
adc
mov
jge
fisubs
mov
cmp
xor
pop
and
nop
add
xchg
add
pop
loopne
imul
or
jle
rorl
fnstsw
pusha
adc
sbb
dec
mov
cmp
mov
inc
nop
mov
jecxz
add
inc
in
lds
or
ds
fdivrl
mov
lahf
mov
enter
lcall
aam
fisubrs
repz
ret
in
jle
jo
test
roll
push
cmpsb
daa
in
cmp
adcl
lret
sub
arpl
arpl
sub
lock
mov
push
dec
sbb
mov
mov
shrl
dec
cmp
js
cli
imul
cmp
add
pop
xchg
lods
inc
and
mov
mov
repz
lret
arpl
cmp
mov
das
out
cmp
cmp
pop
lret
pop
jns
inc
inc
jge
jnp
ljmp
test
test
popf
add
mov
arpl
cmpxchg
pusha
dec
shl
mov
jp
sahf
xchg
xor
pop
push
cmpsl
cmp
cltd
roll
stos
sub
pop
das
cmp
pop
and
sbb
and
stos
es
cmc
sbb
dec
lcall
add
daa
stc
mov
add
sub
pop
shlb
and
mov
aad
push
fdivl
mov
fs
xchg
mov
jo
imul
bound
cmpsl
ja
xchg
aam
jbe
pop
js
jl
jbe
and
mov
in
mov
adcb
pop
push
push
sbb
push
arpl
cltd
mov
or
neg
jl
pusha
mov
icebp
and
adc
arpl
sub
xchg
stos
cld
cmpsl
jp
cmpsl
sbb
mov
ja
mov
ficompl
push
aad
mov
imul
jno
aad
stos
dec
sbb
mov
push
and
push
outsb
gs
and
ljmp
xchg
adcb
pop
mov
pop
pop
les
mov
orl
push
inc
pop
pop
push
orl
addb
lcall
xor
fsub
scas
rcr
sub
lods
mov
pushf
mov
or
or
inc
bound
ds
jge
add
dec
jmp
bound
pop
int3
add
dec
mov
out
leave
add
cmp
jo
test
inc
loop
test
mov
jno
iret
jno
in
mov
fwait
xchg
and
jae
hlt
test
mov
cmp
or
push
roll
xchg
xchg
adc
jecxz
jb
gs
mov
pushf
jg
mov
hlt
fidivrs
adc
xchg
jns
mov
mov
dec
daa
leave
jle
fmull
lret
push
mov
test
cmp
xor
mov
sub
mov
xchg
ret
cmp
stc
andl
cwtl
sub
data16
mov
pop
jge
push
mov
pop
adc
fldenv
test
dec
xchg
jno
fists
insb
mov
push
gs
int3
neg
lret
inc
call
cmp
sub
pop
mov
push
adc
ja
ret
cmp
pop
out
in
addr16
inc
xchg
add
mov
xor
add
push
mov
inc
push
dec
inc
loopne
dec
out
jae
test
leave
inc
sar
mov
add
push
add
mov
leave
imul
push
arpl
push
sub
fcompl
sub
iret
popf
or
arpl
scas
or
sahf
or
adc
shlb
pop
mull
jg
push
jae
push
mov
sahf
fwait
in
ljmp
sub
pop
shlb
push
sbb
jno
inc
popa
repz
pushf
or
sbb
and
fsubl
xchg
and
aam
mov
les
jl
nop
loopne
cmpsl
test
out
in
lret
sub
sarl
test
orb
aas
pop
mov
subl
loopne
jae
fisttps
les
jle
enter
lods
rorl
filds
in
push
add
movsl
dec
out
je
mov
adc
and
cli
out
xor
cmp
sub
xlat
push
popa
xchg
jns
push
dec
pop
xchg
push
mov
jle
fidivrs
cmp
int
xchg
ss
mov
or
add
jg
aad
shl
xor
cmp
movsl
imul
mov
xor
adc
or
cmpsb
pop
fstpt
push
xlat
das
lods
ss
pop
arpl
mov
idivb
and
aas
jnp
cmpsb
nop
aas
nop
adc
sbb
and
pop
pop
push
xor
stos
xor
xchg
xor
mov
test
dec
shll
mov
test
sbb
out
imulb
or
mov
mov
cld
adc
mov
jno
faddp
jp
sub
clc
push
mov
enter
push
and
fcomp
jns
das
enter
push
mov
dec
aad
pop
pop
sbb
mov
add
push
outsl
lcall
stos
int
aaa
jle
fistpll
jae
fists
push
jbe
loopne
shrb
mov
dec
push
mov
pop
rolb
xor
sbbb
push
jns
adc
lods
jl
lds
cli
sarl
xchg
cmovge
mov
mov
jecxz
push
adc
inc
lret
xchg
in
and
repz
cmp
mov
push
jl
flds
ss
inc
into
scas
cmpsb
iret
jg
push
jb
add
sub
aas
insl
clc
adc
cmp
push
xor
daa
cs
test
pop
add
push
mov
test
sub
test
mov
and
adc
insb
dec
daa
inc
pop
call
pop
jbe
push
jbe
sbb
mov
jno
xor
and
test
call
and
jl
mov
jge
dec
clc
cmc
mov
std
pop
dec
adc
inc
leave
xchg
mov
scas
jo
or
push
sub
add
shrb
sahf
sub
adc
push
and
shll
es
int
repnz
push
cmp
push
pop
or
push
nop
movb
popf
aam
sub
dec
stc
cs
cli
inc
xor
cltd
cmp
or
arpl
inc
ds
dec
adc
xor
mov
lret
sub
xchg
pop
es
outsl
xchg
push
jl
aad
lods
sbb
cs
into
fistpll
insl
test
scas
xchg
sub
mov
das
lods
xchg
sbb
or
or
sar
aas
adc
jg
inc
movsb
popa
cltd
loopne
or
jp
jp
sub
mov
sbb
lahf
jae
lcall
dec
aas
jo
sub
push
inc
loop
aad
xchg
sub
mov
int
xchg
lahf
idivb
sub
test
push
ss
mov
daa
sbb
push
mov
mov
stos
mov
pop
call
or
movsb
xchg
shrb
aas
push
aam
stos
pop
sbb
dec
nop
or
into
push
scas
hlt
addl
test
sti
mov
xchg
pop
cwtl
mov
mov
fistps
jo
jnp
out
inc
out
stc
sub
insb
inc
movsb
xor
jnp
fdiv
xor
fstp
fcomps
out
aas
sub
in
into
mov
imul
test
stos
mov
mov
and
mov
mov
int
push
and
push
ja
in
sbb
sti
outsl
dec
repnz
xor
and
xchg
push
lahf
jns
xchg
int3
out
daa
outsb
dec
xor
pop
ljmp
cs
jl
xchg
jecxz
fcompl
pop
orl
movsl
subb
rorl
mov
repnz
fsubrs
cltd
xor
mov
mov
dec
xchg
and
push
fcompl
or
js
das
jp
pop
mov
fisttps
cmpsl
jo
gs
pop
jmp
popl
sahf
mov
xor
std
out
mov
out
aas
dec
mov
sbb
imul
mov
sub
ss
cmpsb
add
inc
outsl
cwtl
adc
out
adc
test
cmc
shrl
pop
clc
sti
jae
pop
xchg
ss
jmp
andb
jmp
lods
xchg
ja
mov
jp
adc
fistpl
push
or
inc
outsb
cmp
mov
pusha
xor
pop
mov
pop
or
test
stos
insl
lock
repz
mov
xchg
jp
mov
clc
mov
sbb
pop
xchg
sbb
je
mov
mov
lcall
cwtl
add
popf
cltd
lock
jl
pop
and
jmp
std
push
cmp
scas
cmpsb
xchg
icebp
push
ljmp
or
sub
push
mov
dec
xorb
and
nop
lods
sbb
push
lret
sbb
imul
mov
xlat
pop
pop
dec
gs
mov
lock
shlb
or
in
add
inc
pushf
std
xlat
mov
cmp
mov
or
xchg
mov
adc
out
adc
ret
push
insb
lret
xchg
inc
ret
jp
push
popf
loopne
xor
inc
in
push
and
mov
in
sbbb
cmp
dec
or
lret
cs
mov
std
out
ja,pn
mov
test
jno
cmp
cltd
jae
insl
xor
je
push
movsb
ret
dec
leave
in
jae
stos
mov
inc
jae
dec
out
popa
cmp
imul
mov
adc
data16
sub
adc
add
or
inc
shl
mov
xchg
nop
iret
fwait
subb
int3
push
mov
xchg
jo
fisubrs
sub
aad
out
cltd
adc
mull
cmp
xor
addr16
je
js
fisubs
popf
iret
add
roll
push
push
mov
xchg
cmp
xor
jnp
mov
mov
aad
data16
cli
add
in
sti
cmp
xlat
aad
pop
or
frstor
mov
pop
fnstsw
fmull
out
add
mov
mov
sbb
sub
jge
adc
lock
imul
cld
or
les
sub
pop
mov
inc
adc
outsl
cltd
cmpsl
xor
mov
xchg
repnz
lods
pop
add
adc
lods
sbb
rcl
jnp
mov
mov
leave
in
and
cmpsb
sbb
dec
orb
popa
adc
add
sub
int
inc
mov
mov
sbb
nop
mov
xchg
mov
decl
clc
adc
adc
mov
cmpsl
clc
fstenv
add
pop
or
addr16
das
mov
mov
int
lods
lret
scas
test
mov
lock
push
mov
jne
gs
ds
cmp
dec
jae
fsubs
fsubrl
fdivl
push
mov
iret
call
jl
mov
jl
push
mov
mov
push
pushf
pop
pop
sbb
adc
pop
mov
xchg
lds
push
mov
push
jnp
dec
pop
mov
cs
jo
jae
into
rol
ds
pop
call
sbb
jbe
jae
adc
push
and
fadds
sbb
sub
in
sub
lds
fdivl
jne
or
add
sbbl
push
adc
ss
mov
push
hlt
mov
dec
test
add
xor
sbb
inc
push
pop
jmp
fidivrs
fnstcw
fwait
arpl
cmp
jbe
lahf
adc
mov
inc
pop
int3
pop
dec
push
xchg
cltd
rcll
mov
lret
shr
loope
fwait
call
or
or
jae
mov
icebp
aam
inc
xchg
mov
in
xchg
outsb
arpl
arpl
or
cmp
test
mov
pop
popf
add
adc
xor
cmpsb
push
cmp
repz
sub
and
sbb
enter
fsts
push
mov
push
mov
lret
jae
cmpsl
in
popa
andb
pop
xchg
adc
pop
mov
pop
mov
pop
mov
fstl
pop
insb
fs
dec
iret
insb
mov
pop
push
push
sub
out
aam
ret
cwtl
sub
inc
sbb
push
jmp
pop
xchg
stos
inc
and
fcompl
inc
cmpsb
push
fisubrs
xor
andl
cld
mov
inc
mov
sahf
movl
mov
dec
cltd
push
das
xor
xchg
cmpsl
jno
mov
mov
jno
stos
fildl
loopne
mov
cmp
stc
jo
daa
xor
test
orl
xchg
push
push
test
mov
push
ss
cmp
xor
adc
adc
and
test
pop
add
fwait
sbb
mov
hlt
or
pusha
cltd
imul
sbb
xchg
dec
mov
fidivl
or
lahf
add
dec
stos
sbb
sub
outsb
sbb
sbb
repnz
fldl
cmp
push
outsb
repz
aas
xor
mov
inc
cld
ljmp
or
push
ja
fsubrl
je
lods
out
pop
xor
lahf
ret
push
inc
jecxz
mov
or
into
mov
arpl
int
mov
lret
outsb
movsb
out
jae
sti
aas
xchg
ds
repz
xchg
or
mov
cmpsb
mov
pop
fnstsw
mov
xlat
notb
push
cwtl
jmp
push
and
jae
xor
cmpsb
shrl
lods
jo
and
push
pop
push
shl
fwait
shr
mov
and
adc
jl
xchg
cmp
jo
repnz
push
lds
mov
int
xchg
adc
divb
push
loop
cmpsl
les
clc
subb
dec
int3
and
lea
std
stos
mov
cltd
xor
lret
push
mov
push
and
neg
mov
mov
or
fidivs
mov
and
xchg
pop
out
jg
fidivs
inc
mov
fisubs
push
pop
insl
push
or
or
mov
fstl
inc
test
inc
and
or
add
cs
fldenv
cmp
mov
mov
sub
dec
fstpl
dec
orl
lret
dec
outsb
clc
mov
sub
push
pushf
aas
lret
pop
jns
movsb
cmp
sahf
cs
rcrl
sub
ret
clc
inc
stc
mov
lods
lea
cmpsl
cmp
filds
sub
or
and
mov
clc
mov
xchg
loop
pop
pop
and
call
push
push
fs
sti
mov
xor
dec
jmp
enter
movsl
imul
divb
lahf
fwait
or
xor
aas
or
pop
scas
rcl
fistpl
stc
mov
fidivrs
mov
dec
dec
pop
imul
mov
mov
push
add
add
inc
scas
test
cli
push
sbb
es
cmpb
test
ret
jb
cmp
sbb
adc
paddd
in
repz
popa
loopne
cmpsl
jno
out
jl
movsl
dec
xor
xchg
fisubrl
enter
in
cmpsl
fldl
sahf
shll
movb
lea
cmp
and
cmp
cmp
in
push
out
cmp
push
or
fmul
aaa
iret
std
xor
loopne
sub
fadds
fwait
call
cmp
jb
add
push
xor
jnp
mov
hlt
xchg
insb
adc
mov
mov
sub
mov
inc
xor
adc
jnp
gs
outsb
std
push
movsb
incb
popf
cwtl
fcomps
insb
sub
cmp
lahf
xor
fildll
out
mov
leave
outsb
orl
mov
repnz
ss
test
lcall
sub
loope
dec
popf
insl
imul
leave
iret
adc
fdiv
arpl
aaa
jae
mov
add
ret
rorl
cmp
idiv
enter
sahf
jle
aaa
hlt
sub
push
in
pop
cmp
mov
es
push
mov
mov
pop
xor
mov
mov
loopne
mov
cltd
mov
xor
arpl
fistpl
loopne
and
sub
add
fcomps
stc
mov
push
xchg
sbb
mov
insw
cmp
stos
sbb
std
mov
bound
imul
sahf
orps
and
jno
fistl
je
sbb
inc
cmp
in
popf
adc
in
jl
sub
push
push
jnp
arpl
xchg
sbbb
push
push
enter
scas
push
les
xchg
pop
sbb
xor
dec
mov
std
sbb
mov
ret
sbb
jmp
arpl
mov
adc
into
dec
xor
movsb
xorl
sti
fldcw
xchg
les
in
mov
cmpsl
sub
test
sub
add
loopne
sub
nop
gs
call
and
push
arpl
lahf
test
adcb
and
push
pop
jmp
xchg
imul
mov
pop
xchg
fcomi
xchg
out
jg
jl
xchg
ja
inc
packuswb
int
or
adc
dec
movsl
stc
xor
sbb
out
pop
add
xor
jge
and
mov
xor
je
cwtl
andl
in
jnp
int3
mov
add
popa
in
mov
movsl
or
cwtl
push
movsb
cmc
sub
stos
cmp
mov
fidivs
jnp
push
inc
in
jo
out
xchg
add
or
nop
sar
fdivs
movsl
push
pop
xor
popf
sbb
pop
dec
mov
test
mov
jle
scas
push
xor
mov
ja
cmp
add
cmp
in
das
pusha
arpl
repz
rcll
outsb
xchg
and
std
je
xor
mov
mov
test
mov
xchg
adc
mov
inc
inc
jb
fsubp
lds
adc
dec
mov
ljmp
aaa
aas
repnz
jb
mov
faddl
push
clc
clc
push
mov
xor
divl
inc
call
imul
into
or
les
push
cld
out
push
icebp
into
clc
mov
mov
cli
xchg
stos
sub
repnz
xor
fdivs
inc
mov
call
inc
out
aaa
aas
xor
jecxz
cmpsl
hlt
push
mov
cmpb
and
add
out
in
dec
icebp
and
jg
stos
aaa
ficompl
incl
mov
pop
stos
xchg
sahf
jge
pop
jge
sbb
ljmp
mov
cmp
loope
dec
lret
add
in
and
xor
jmp
mov
cwtl
rcll
loop
sbb
les
out
pop
mov
add
mov
gs
mov
inc
lret
les
mov
dec
iret
push
inc
ljmp
mov
mov
xchg
lods
pop
insb
xchg
push
sbb
cwtl
fildll
mov
sbb
sbb
sbb
push
or
out
ret
loop
movsl
push
aad
and
mov
sbb
inc
loopne
hlt
cmp
das
test
xchg
inc
jmp
insb
enter
mov
fs
or
fcompl
out
xor
jg
push
adc
mov
int
inc
mov
mov
cmpsl
jp
cltd
jns
mov
outsl
cmpsb
pusha
ljmp
jo
ljmp
or
cmp
lock
sbb
in
popf
and
movsb
and
sbb
mov
pushf
lods
pop
gs
push
aam
and
xchg
pop
dec
les
mov
imul
inc
clc
lock
dec
daa
jo
ret
int
mov
or
shlb
adcl
xchg
pop
xlat
mov
cmp
mov
repnz
mov
push
or
cmp
mov
repz
fxch
fstp
push
dec
insl
dec
cwtl
rcll
push
lret
lea
add
sti
fimuls
or
inc
mov
push
cli
in
movsb
rorl
jno
adc
test
add
pushf
xchg
fidivs
fdivs
gs
or
fadd
xorb
lock
decl
xor
lea
nop
in
push
cmp
and
aas
xchg
add
and
jb
mov
or
es
jecxz
xchg
je
pop
mov
fbstp
mov
incl
xor
push
jg
jge
mov
or
neg
nop
xchg
aam
adc
insl
jb
cmpsb
rorb
repz
das
mov
and
mov
je
subb
insl
jb
jg
xchg
mov
sbb
dec
stos
adcl
dec
push
stc
repz
mulb
into
add
push
js
adc
mov
repnz
mulb
ss
out
insl
test
mov
lcall
hlt
movb
inc
and
roll
push
jge
dec
test
xor
lcall
and
xor
xor
mov
test
inc
jae
test
cmpsl
ret
ret
xchg
nop
shr
cmp
cwtl
loop
fwait
je
pop
hlt
mov
pop
fwait
je
in
add
ds
cli
loop
in
xor
mov
ficompl
inc
mov
push
outsl
gs
mov
pop
pop
pop
leave
push
inc
sbb
pop
ds
xchg
mulb
in
test
push
out
int
outsl
je
lret
push
or
ljmp
push
fmuls
mov
xchg
push
or
das
push
fcmovne
decl
cs
push
or
cs
or
adc
mov
test
pushf
fisttps
xlat
lods
jno
lret
mov
faddl
xchg
subb
adc
in
mov
push
insb
enter
add
pop
lahf
rcl
outsb
cmp
xacquire
cmp
inc
sbbb
call
and
mov
movsl
jmp
cwtl
popa
mov
mov
cmpsb
divl
gs
mov
push
fisubs
shrb
sub
in
pop
test
loop
and
xor
js
daa
jo
xchg
xor
pop
shlb
aas
add
pop
fadds
icebp
or
push
xorb
popf
inc
mov
fdivrs
adc
dec
push
pushw
into
xchg
aad
adc
xor
jns
fsubl
popf
adcb
lea
push
jns
sarb
movsl
push
out
cmpsb
mov
fiadds
cmp
int3
add
ret
add
or
lret
insl
clc
add
mov
add
lret
test
pop
mov
or
fldl
mov
and
in
sti
jno
shr
cmp
pop
test
repz
or
lret
or
aas
mov
xor
lea
lds
jge
inc
loopne
jle
sarb
xchg
add
push
pushf
inc
cmp
dec
jb
dec
imul
jbe
mov
mov
push
mov
dec
cld
mov
pop
aas
rol
mov
jl
jbe
outsb
aad
fisubs
xchg
icebp
jge
addr16
sub
and
cs
cmp
subl
cmpl
mov
xchg
xchg
test
xlat
gs
je,pn
jp
mov
push
dec
popa
dec
fwait
lret
sub
ja
adc
loope
popf
pop
xchg
jg
insb
jno
sub
test
push
mov
mov
aaa
out
cmp
dec
sbb
aas
dec
jmp
push
cli
js
pop
test
mov
adc
add
idivl
jecxz
je
popa
jbe
mov
mov
mov
cmpsl
dec
or
add
loop
push
fisubl
mov
mov
bound
cmp
adc
out
dec
xchg
rorb
pop
out
push
pop
xor
sub
fnstcw
inc
inc
push
xor
mov
sbb
repz
aam
add
ljmp
jp
mov
push
cmp
bound
add
addl
xchg
rcrb
and
jmp
orb
xor
jmp
fisubs
sbb
jnp
mov
orb
pop
adcb
mov
cld
push
xor
inc
sbb
lcall
and
xor
sbb
cs
ljmp
jb
sbb
push
push
sub
in
cmp
xchg
jo
pop
push
add
sarl
cmpsl
jo
pushf
repnz
dec
sbb
adc
sub
stos
sub
es
loop,pt
jl
clc
jmp
or
add
push
dec
out
in
push
test
mov
pop
in
or
dec
ljmp
call
nop
aas
nop
lds
rcrb
ret
sub
fcmovnb
jg
fisubrl
std
push
popa
es
push
cmpsb
add
push
push
fistpl
sbb
inc
repnz
xor
or
jle
jg
inc
cmpsl
push
mov
cld
and
mov
jbe
cmp
test
lret
test
movsl
and
xchg
xchg
sub
xor
xchg
xchg
sub
mov
sub
cwtl
data16
fs
cwtl
fs
mov
stos
test
fwait
or
sarl
pop
dec
xor
dec
mov
xchg
test
jg
divl
out
jno
mov
popf
push
inc
mov
mov
and
aaa
call
lds
roll
sub
jg
pusha
add
cmpb
add
stc
xchg
and
out
movsb
cs
jb
lods
mov
xchg
sub
repz
scas
loope
dec
daa
movzwl
aas
mov
arpl
jo
sbb
and
sbbb
gs
gs
jmp
mov
mov
ret
mov
pop
xchg
lcall
shrb
jle
push
addr16
ret
not
das
pop
lahf
ds
stc
jae
lock
add
testb
sbb
push
cwtl
aaa
sbb
pop
sbb
cmp
mov
push
or
adc
fisubs
es
arpl
mov
lods
jo
jecxz
popa
push
das
pushf
mov
imul
cmovnp
mov
mov
adc
loope
xchg
pop
mov
pop
and
mov
js
loope
mov
movsl
inc
xchg
popf
test
mov
xorb
cmp
pop
imul
jne
shll
sub
add
mov
jbe
popf
sbb
xchg
dec
lcall
cmp
pushw
xchg
jp
lods
and
lret
xor
dec
inc
push
out
imul
aam
scas
xor
sbb
lcall
sbb
jno
mov
mov
mov
or
gs
movsb
cltd
inc
movsb
mov
loop
jge
dec
out
pop
stos
popf
xchg
lret
ficompl
fists
cltd
xlat
inc
and
and
mov
scas
stos
test
ret
imul
loope
hlt
jge
mov
push
pop
pop
cmp
xchg
mov
lock
ss
fidivrl
and
xchg
imul
fwait
in
mov
mov
popf
mov
sahf
pushf
or
cli
sbb
mov
mov
or
dec
or
rolb
out
push
das
ret
xchg
lds
inc
pushf
push
std
sbb
cmp
and
dec
sbb
xor
loop
stc
xchg
pop
je
push
mov
or
pxor
icebp
outsb
incb
sub
in
int3
lcall
jle
push
push
push
jp
push
std
and
xchg
fisubrs
out
mov
rclb
sub
sbb
push
and
sub
sub
insl
mov
and
pop
outsb
mov
lahf
data16
jge
pop
imul
xchg
ss
add
mov
nop
inc
jge
cld
add
mov
mov
sub
sub
leave
js
in
and
in
or
cmp
enter
shr
push
cmpsb
mov
add
or
cmp
in
push
cmc
testl
in
sbb
and
lret
sar
popf
adc
add
sub
stos
insb
clc
jnp
xor
lods
stos
dec
xor
mov
cmp
cwtl
mov
fs
adcl
sti
outsl
loopne
sbb
dec
mov
lods
cltd
or
mov
stos
adc
lahf
xchg
pushf
in
movq
mov
movsb
icebp
mov
mov
lea
cwtl
push
mov
sarl
pop
fwait
int
aaa
cwtl
or
xchg
int3
loopne
cwtl
dec
jae
cmp
push
mov
cmp
or
jge
cmpsl
cmpsl
dec
dec
add
call
jno
lea
daa
inc
popf
pop
jmp
bound
aam
mov
ret
dec
ja
insb
rcrl
pop
arpl
pop
lock
out
in
cmp
fimull
fsts
xchg
iretw
xchg
cltd
mov
lcall
and
xor
dec
add
loopne
ljmp
pop
fbld
fistl
es
sub
mov
push
lods
in
or
mov
popa
or
outsl
aas
sbb
mov
lods
push
mov
sbb
or
adc
add
add
mov
int3
adcw
loop
or
adc
in
sbbl
and
dec
xlat
jge,pt
dec
mov
call
ss
push
push
cmp
test
xchg
movsb
mov
fldt
test
outsb
mov
jo,pn
je
mov
push
pop
imul
pop
outsl
mov
roll
stos
jecxz
mov
adc
stos
imul
iret
fdiv
lods
sbb
cmp
std
sub
mov
cmp
cmp
xchg
or
mov
sbb
shrl
and
push
xor
clc
ret
nop
ret
hlt
cmc
xchg
test
mov
pop
fdivr
sbbl
divl
add
adc
adc
movl
adc
shll
xchg
cmp
aas
jo
add
iret
mov
inc
bound
and
into
jnp
test
push
popa
andl
scas
or
in
jo
pop
cli
into
orb
or
in
jo
repnz
lahf
adcl
mov
or
stc
push
xlat
in
pop
and
mov
pop
daa
add
shrl
insl
pop
aaa
push
mov
sti
fcoms
sub
and
out
add
inc
cmp
mov
imul
mov
rcr
aad
mov
insb
lock
sbb
repz
rcr
or
test
fsubrs
pop
fs
clc
jle
pop
cmpsb
mov
das
mov
xor
or
test
mulb
aas
sub
dec
dec
or
sbb
sbb
xchg
mov
cmp
imul
in
inc
jb
lods
and
cs
in
pop
and
stos
icebp
xor
jnp
in
test
mov
fidivrl
xor
rcl
fdivr
orb
jg
in
jl
cmp
xchg
iret
xor
mov
negl
pause
pop
jns
jl
lahf
jae
xor
push
jne
stc
sub
dec
int3
addr16
rorl
pop
sbb
jl
sti
cmp
mov
ret
nop
jle
xor
dec
pop
pushl
out
repnz
jnp
inc
or
mov
and
sub
sub
mov
dec
stc
pop
sbb
jmp
and
dec
stos
je
sbb
or
add
jbe
xchg
ljmp
icebp
fisttpll
pop
movb
test
stos
pop
xchg
push
les
aaa
push
imul
mov
lcall
inc
jb
das
lea
out
push
sbb
pushf
popa
pop
sbb
ss
mov
ret
cltd
fcmovbe
lret
cmp
cld
arpl
add
sbb
mov
movsl
push
out
adc
push
push
movsl
pop
test
dec
mov
popl
jp
jne
pusha
push
daa
out
adc
jg
add
ss
push
popa
cmp
cld
cmp
sub
cmp
scas
lret
lds
inc
inc
enter
sahf
stos
mov
dec
out
sbb
fstl
sbb
pop
scas
rclb
cmp
cwtl
or
add
jo
cmc
lcall
jne
ret
int
xor
add
std
pop
push
out
outsl
rol
fistl
cmc
jb
mov
push
or
int3
out
mov
jg
cmp
xor
std
lahf
cld
lmsw
sbb
cmp
lock
test
mov
shll
push
aaa
in
jo
loop
cmp
test
shlb
test
dec
or
cmp
and
cmpsb
cli
push
ret
xor
loop
adc
into
data16
shrl
js
je
and
xchg
inc
inc
loopne
sahf
sub
jmp
cmp
push
pop
inc
int
push
int3
bound
shll
fsubr
xor
or
xchg
xor
xor
jp
xchg
loopne
dec
xlat
xchg
dec
out
enter
xchg
aas
push
dec
nop
aad
xchg
lds
jno
mov
inc
cmpsb
imul
push
inc
and
jg,pn
aad
and
stc
or
or
jae
les
data16
xor
adc
xor
aad
lret
mov
push
dec
dec
jmp
mov
and
movq
mov
cmc
fdivp
pop
xchg
ds
ss
sub
call
inc
sub
cmp
outsb
jecxz
jnp
jl
loopne
pushf
adcl
fiaddl
sbb
mov
push
jne
sub
cmc
mov
adc
lret
test
lods
pop
inc
add
aaa
int3
sub
mov
out
cld
bound
lea
shll
ja
ljmp
negl
add
popf
loopne
xor
xor
xchg
je
sahf
cwtl
imul
sub
scas
jno
xchg
in
jno
inc
movsl
inc
popa
xchg
jecxz
or
orl
mov
xchg
jp
std
mov
push
fwait
test
leave
xor
push
sub
cmp
test
ljmp
push
ljmpw
test
sbb
push
les
sbb
xchg
push
call
or
hlt
xor
bound
push
or
sbb
xchg
andl
mov
xlat
das
mov
mov
mov
fwait
mov
mov
sub
push
push
subl
loop
jne
pop
mov
stos
jo
outsb
adc
icebp
push
movsl
xor
dec
jmp
push
lock
push
jo,pt
stos
icebp
xlat
stos
movsb
pop
int3
fisttps
movsl
ja
pop
cmp
mov
clc
or
bound
mov
adc
scas
aad
insb
cmpl
jns
lret
je
loopne
out
leave
outsb
jbe
inc
inc
mov
add
xor
or
test
je
and
scas
fstps
lahf
adc
and
icebp
jno
je
mov
cwtl
loopne
lods
push
popa
cmp
cmp
push
inc
das
push
add
mov
pop
mov
out
push
nop
add
mov
in
sti
add
cli
adc
cmp
in
mov
add
sar
icebp
mov
push
sti
lret
xorl
addr16
das
and
outsl
push
xor
stos
and
pop
fldl
cmpsb
and
jns
std
mov
call
xor
push
iret
stos
dec
mov
and
push
enter
sub
loopne
ljmp
in
fimull
fstps
mov
pop
push
loop
lret
das
js
out
repz
dec
gs
and
xchg
mov
fs
sub
and
mov
cmp
xchg
faddl
jo
xorl
sbb
mov
aam
or
xchg
ret
adc
lret
popa
ljmpw
inc
jmp
mov
into
jbe
daa
mov
aad
rdtsc
pop
lds
cmp
pop
dec
loop
lds
jnp
jae
sbb
add
cmp
movsb
or
xor
push
insl
push
push
mov
xorl
aam
jg
in
pop
cmp
and
mov
test
lods
inc
xor
sub
enter
ss
mov
inc
mov
pop
push
or
mov
and
or
adcl
push
fnstcw
test
imul
test
ljmp
xor
les
jbe
fisubs
repz
imul
add
orb
xchg
dec
xchg
fsubl
sbb
nop
dec
fs
mov
mov
xchg
cmpsl
sbbl
clc
rcll
mov
pop
cmp
adc
xor
call
pop
inc
xchg
sbb
xchg
lods
out
addr16
stos
test
push
fidivrs
das
addl
and
sarl
jl
lahf
pushf
inc
cmpsb
add
test
aam
int3
sub
je
push
mov
rcrb
jle
into
cmpsb
add
jns
mov
outsl
out
sbb
gs
call
push
sub
sbbl
and
mov
cmp
jbe
or
push
push
adc
cwtl
ja
mov
ljmp
popf
adc
repz
cmc
shrl
push
mov
inc
pop
and
push
testl
adc
das
push
cmpsb
adc
adcl
mov
sub
jae
sbb
mov
testl
cs
cmp
adc
pusha
push
mov
pmullw
out
shll
xchg
add
movsb
jno
jne
je
enter
rcll
cli
mov
adc
fnstsw
xchg
clc
sub
xor
sub
mov
cmp
jnp
sbb
mov
adc
je
inc
loop
xchg
int3
fdivrs
mov
mov
mov
dec
mov
inc
push
inc
mov
sbb
call
fldt
mov
or
xor
iret
and
ljmp
testl
jge
inc
int3
push
xchg
pop
push
ja
pop
jp
ja
cmp
and
xchg
push
imul
dec
in
sti
stos
push
out
lods
dec
or
mov
test
adc
sbb
xchg
xchg
int
mov
fbld
mov
lret
jae
cmp
mov
popf
or
pop
mov
mov
test
xlat
sbb
jnp
enter
sub
inc
jmp
jp
or
ss
sbb
inc
or
jmp
push
cmp
or
test
aad
jl
dec
ja
inc
scas
cmpsb
dec
mov
sti
sahf
mov
sub
lods
push
mov
aam
stos
and
outsb
mov
sbb
jbe
jecxz
sbb
pushf
mov
shr
xor
xor
ljmp
fcompl
pop
mov
lret
cs
dec
sub
rcr
imul
aam
insl
xor
dec
mov
dec
push
inc
push
pop
xchg
fsubl
je
jnp
jg
dec
lods
stc
fisttpll
popf
inc
les
xchg
insb
ret
add
pop
call
or
shll
das
adc
pop
adc
ret
mov
push
sbb
cmp
add
dec
movsl
adc
inc
pop
out
inc
into
push
adc
fisttpl
pop
lcall
out
lcall
mov
punpckhdq
fwait
mov
dec
out
fs
mov
mov
cmpsl
fiaddl
repnz
sub
pop
loope
jecxz
push
mov
mov
xchg
fstl
lock
std
fs
mov
mov
pushf
fidivs
sub
adc
cmp
push
cld
jmp
std
ficoml
out
mov
xlat
xchg
pop
inc
jae
rorb
dec
mov
inc
and
xchg
cwtl
enter
outsb
cmpsb
mov
inc
inc
xchg
setnp
cs
je
aas
fcoml
pop
pop
jmp
sar
xchg
test
ss
mov
mov
aad
loope
aas
cmp
jne
lret
sbb
movsb
sbb
sbb
mov
insl
fdivrs
fisubrs
test
ret
fs
enter
dec
xchg
sti
jo
ja
or
nop
sti
jo
ret
mov
cmp
dec
stos
inc
data16
xor
lcall
pop
push
test
sub
je
mov
and
loope
jge
bound
dec
add
add
mov
inc
insb
sbb
sub
sbb
sub
js
clc
push
subl
add
test
cmp
mov
mov
jne
scas
dec
or
fidivrs
sub
sbb
aad
lea
push
insl
cmp
call
cs
lds
cmp
xor
sbb
add
cmp
adc
lods
mov
mov
popl
std
cmpb
mov
xchg
pop
cmp
pop
in
cmp
das
in
cltd
icebp
movsb
xor
push
jns
movsl
int
popa
and
dec
leave
and
insb
mov
insl
in
xchg
int3
dec
mov
adc
inc
jl
cmp
cmc
xchg
mov
cmpsl
roll
gs
mov
add
xchg
add
mov
inc
popf
je
call
pop
pop
out
notl
cwtl
jmp
shrl
ret
test
add
cmp
push
adc
dec
push
xchg
push
andb
dec
pop
mov
clc
xchg
les
xchg
movsl
les
mov
push
inc
push
jns
or
popa
divl
adc
test
cmc
inc
mov
inc
test
or
popa
aas
sbb
sub
ljmp
pop
imul
sub
jle
test
popa
ret
mov
push
into
push
in
pop
int
jmp
int3
subb
hlt
add
pusha
xchg
sub
in
sti
rcrb
andl
push
adc
call
lods
mov
adc
dec
xchg
test
stos
mov
icebp
jge
mov
fistpll
rcrl
mov
jmp
cmpb
pop
mov
xchg
dec
mov
lods
add
and
in
xchg
pop
pusha
pop
inc
mov
sbb
popa
mov
mov
pop
or
out
xchg
push
pusha
pop
lret
or
mov
mov
dec
loopne
add
negl
repz
mov
lock
pop
xchg
std
test
je
lea
stos
scas
add
repnz
jp
add
jne
sbb
sbb
dec
insl
clc
in
sub
xchg
js
mov
test
sbb
out
pushf
or
icebp
pop
push
jno
mov
stc
iret
lcall
inc
in
mov
in
jo
jmp
leave
adc
movsl
clc
jno
push
addr16
ret
sub
sbb
adc
sbb
test
add
add
fmuls
stos
or
mov
adc
fnstcw
fdivp
sbb
add
pop
or
sbb
cmp
and
rcrb
test
pop
fdivr
jo
hlt
int
xchg
cmc
ja
mov
ja
cmp
xlat
cld
das
add
dec
xchg
fimull
inc
sbb
mov
inc
hlt
and
kmovb
lea
push
aad
cld
loop
dec
fs
outsb
nop
test
pop
jmp
sbb
les
std
in
stos
fimuls
xorl
push
add
popf
rclb
out
add
inc
daa
xor
je
push
jp
lods
js
das
mov
jmp
pop
outsl
mov
or
xorb
adc
fsubrl
push
arpl
jne
mov
pop
inc
movsl
or
pusha
sbb
mov
push
mov
pop
outsb
imull
pop
aad
push
sahf
das
fisttpl
lods
lret
ljmp
xor
out
dec
and
arpl
popa
test
push
pop
dec
cltd
pop
sbb
sarl
out
jecxz
scas
jl
scas
mov
push
dec
imul
aad
sub
push
push
dec
data16
int
mov
popa
or
stc
cmc
lret
fwait
rolb
or
mov
xchg
mov
fcompl
rolb
fcmovne
ja
rorb
enter
xchg
ja
jg
sbb
sbb
cmp
dec
lcall
xchg
sbb
mov
dec
jmp
jge
jbe
and
loope
mov
lcall
in
mov
test
cs
mov
inc
mov
xor
pop
sub
cli
ror
ljmp
dec
scas
leave
ljmp
lods
and
xchg
mov
jg
je
adc
add
sub
sti
clc
xor
sub
push
or
ficoml
push
test
fnstenv
pop
hlt
jno
cli
sahf
pop
mov
fcomps
sub
fnstcw
cltd
jmp
mov
movl
xor
mov
cli
inc
lcall
jle
insb
cmp
cltd
aaa
cmc
imul
or
mov
notl
and
jp
stc
mov
dec
pop
adc
out
jb
repz
cmp
test
push
jg
jo
mov
test
sbb
pusha
cmp
sub
or
mov
je
xchg
fldt
jmp
cs
and
mov
mov
fimuls
sbb
icebp
aam
into
or
ja
mov
cmp
mov
push
sbb
jnp
add
jns
dec
lods
cmpsb
fstpt
arpl
mov
cli
ret
lds
orl
cmp
dec
cmp
mov
int
adc
stos
cwtl
stc
and
mov
sub
mov
loopne
orl
aaa
sti
xor
pop
adc
sub
insl
jb,pn
in
rol
mov
aaa
clc
jae
sbb
mov
sahf
xchg
jmp
jp
mov
inc
mov
int
xor
or
pop
pop
mov
jl
push
jnp
add
or
xchg
dec
out
cmp
fcompl
pusha
test
jae
outsl
mov
sbb
insb
lahf
mov
jecxz
mov
jle
mov
sub
pushf
fidivs
add
inc
add
popf
or
sahf
jl
lds
sbb
popf
cmp
ret
mov
cs
pop
repz
xor
aas
out
sarb
or
xchg
cmpsb
sarb
leave
cs
cmc
fbld
add
jle
jne
fs
pop
or
and
lcall
cwtl
xor
ret
jle
fbld
inc
cmp
inc
inc
sbb
inc
sti
lret
fxch
sbb
push
addr16
rcrl
out
ja
xor
add
addr16
lcall
dec
push
mov
mov
jae
popf
pop
aam
mov
mov
inc
idiv
jge
call
mov
lods
adc
or
scas
int
cmpsb
cmp
mov
imul
leave
sbb
hlt
mov
call
mull
mov
mov
xchg
into
popf
arpl
icebp
push
repnz
dec
or
xor
cmp
mov
sbb
mov
pop
sti
sub
add
imul
and
sub
popa
jo
mov
lds
imul
push
mov
mov
push
ret
enter
mov
add
fistps
out
std
out
mov
inc
mov
psubsb
pop
js
pop
cmp
jp
ljmp
mov
hlt
sub
jl
notl
push
lret
and
or
mov
pop
adc
call
hlt
xor
out
test
sti
hlt
jl
imul
shr
stos
cltd
inc
lahf
jb
test
inc
cmpsb
and
sub
push
xlat
dec
add
add
push
mov
addr16
cmp
mov
or
dec
fcmovu
xchg
mulb
push
paddb
mov
loop
inc
mov
js
in
in
push
pavgw
jmp
push
dec
push
xor
int3
or
xor
popl
lahf
daa
push
into
pop
int
fcmovnbe
andb
orl
aam
push
test
cmp
sbb
or
out
lds
add
adc
cmp
ss
ds
dec
push
rol
sbb
int3
mov
inc
lahf
fstl
lret
aas
aad
repz
cltd
sub
in
sub
fbstp
jno
clc
xchg
test
out
push
mov
pop
js
pop
stc
rcll
sbb
stos
int
mov
dec
cmp
sub
aaa
xchg
dec
loope
mov
mov
ffree
into
test
xchg
mov
sahf
add
xor
dec
fadds
insb
ret
shlb
mov
arpl
int3
iret
ja
cmc
and
cmp
pop
mov
adc
shll
cmpsb
sbbb
out
es
adc
jne
subb
or
movb
mov
mov
mov
dec
inc
inc
or
movsb
xor
mov
stos
iret
lret
xchg
orl
into
mov
dec
sti
sbb
sub
inc
cltd
xchg
or
push
cmc
lea
mov
xchg
incl
fiadds
idiv
stos
push
xchg
jle
mov
jno
loopne
imull
sub
int3
or
xchg
out
aas
sarl
enter
xchg
ja
jnp
dec
dec
insb
aaa
ss
xor
sub
pop
cmp
mov
adc
push
fmulp
add
leave
out
jbe
les
mov
stos
pop
icebp
xor
mov
cs
cmp
mov
pusha
push
loopne
mov
addr16
scas
clc
jmp
push
aaa
adc
add
xchg
and
mov
ret
sti
mov
pop
leave
sbb
fwait
lcall
sarb
push
cltd
arpl
mov
mov
aam
aaa
and
xlat
inc
adc
mov
jns
sarl
and
mov
lahf
lock
jno
mov
xchg
cmovl
mov
in
jnp
jo
inc
movsb
jl
cmpsl
jp
movsb
outsl
std
jmp
mov
mov
cmp
add
data16
jmp
fnstcw
jmp
in
popa
ret
inc
cwtl
cld
mov
mov
pop
adc
pop
jle
out
loope
in
std
ja
pushf
lods
movsl
dec
les
or
cmp
push
cmpb
dec
aas
jecxz
shlb
mov
ljmp
into
mov
les
mov
inc
cmp
sbb
es
sub
idivb
mov
inc
mov
jl
sub
push
inc
leave
xor
sub
rclb
jnp
lock
mov
cmp
sub
cmpsl
push
fimull
push
shlb
mov
rcrb
mov
int3
into
sbb
mov
insb
inc
aaa
push
xor
lahf
pop
int3
push
jge
ret
xchg
dec
lods
cli
test
adc
cld
xchg
dec
mov
mov
inc
sub
sbb
js
arpl
cmpsl
call
cmp
shlb
xchg
xor
pop
cmpb
xchg
mov
push
out
xor
dec
xor
stc
xchg
cmc
mov
shrb
and
insb
addb
and
and
adc
sbb
inc
arpl
pop
pop
into
popf
les
lods
testl
sahf
xchg
mov
xchg
sarb
jge
inc
testb
xchg
cmp
stos
mov
xchg
pop
inc
ds
sbb
mov
xchg
adc
sbb
push
dec
lret
push
adc
into
adc
inc
adc
lcall
pop
cmpsl
add
and
shlb
ficoml
adc
jae
sbb
push
jmp
std
roll
test
das
lcall
add
fdivrs
inc
dec
cltd
ss
pop
sarb
jno
out
xorb
pop
jno
jno
adc
mov
pop
sbb
std
pop
push
pop
sub
aaa
cmpsl
or
lock
jp
adc
xchg
das
out
xchg
rcl
lea
sarl
fcoms
aas
call
push
and
lds
fldt
ret
mov
dec
movsl
pop
rclb
popa
and
adc
mov
dec
cwtl
adc
hlt
movsb
push
fmuls
scas
sbb
dec
push
pop
js
fdivl
ret
jl
pop
jbe
xor
push
inc
dec
cmpsb
lcall
or
ljmp
orl
movsl
das
cmp
cmp
imul
shl
nop
insb
out
or
ret
lds
cmc
lods
dec
mov
repz
sub
js
cmp
pop
xor
in
call
xor
das
mov
idivb
mov
push
pop
in
push
outsl
xor
mov
inc
xor
mov
mov
in
mov
dec
adc
mulb
push
add
std
je
je
cltd
cmp
xchg
mov
lret
pop
std
out
push
or
xchg
hlt
insb
les
pop
ljmp
insl
jno
test
mov
lahf
sub
pushf
mov
cmp
jnp
lds
cmpsl
push
pop
or
cmp
dec
push
mov
mov
xor
arpl
leave
jmp
iret
jns
fdivl
outsb
jbe
inc
inc
pop
jp
push
cmpsb
mov
insl
cld
push
xor
das
sbb
testl
mov
xchg
xor
bound
cmp
add
aaa
mov
bound
jo
pop
add
pop
push
out
aas
faddl
push
jl
sub
xchg
push
imul
test
daa
mov
pop
out
sbb
stc
stos
imulb
loope
ret
add
xor
cltd
rorb
inc
mov
pusha
mov
aaa
mov
jp
xchg
fiaddl
xor
dec
cltd
mov
ss
adc
in
add
fistps
adc
pusha
outsl
hlt
jl
sub
sti
cmp
mov
adc
ljmp
mov
pop
adc
ljmp
outsb
scas
or
mov
mov
sbb
lods
push
push
push
mov
fucom
and
pop
out
dec
imul
sub
pop
push
mov
pop
push
arpl
add
int
mov
xor
add
loope
xchg
inc
sub
dec
inc
mov
pop
xor
mov
ficompl
adc
sbbl
mov
mov
xor
mov
clc
jb
popf
movsb
sub
sub
pop
cltd
add
xchg
add
jg
mov
stos
subl
lods
or
xchg
gs
movsl
mov
sbb
and
mov
shrb
pop
mov
jns
insl
movsl
clc
cmp
pop
push
mov
jnp
and
ds
lock
push
inc
push
daa
and
dec
adc
adc
test
inc
sbb
nopl
or
les
jno
cmp
cltd
cmp
xchg
test
mov
or
addr16
mov
cli
clc
cwtl
jne
arpl
adc
pop
cltd
and
mov
mov
clc
sti
and
in
hlt
stc
stc
aad
lcall
mov
sub
sahf
sub
xchg
js
cwtl
jne
arpl
add
mov
arpl
pusha
push
dec
or
pop
xlat
rorl
lods
xchg
pop
add
ljmp
pop
cmc
jne
and
mov
add
dec
pop
mov
mov
xchg
cmpsl
rorb
jl
xchg
mov
pop
and
pop
pop
out
mov
mov
rolb
jmp
loop
je
icebp
int3
xorb
cmpsb
xor
mov
pushf
dec
insl
push
xchg
int3
inc
nop
mov
adc
sub
mov
xor
pop
fstp
jg
imul
fildll
lods
sbb
movsb
lcall
pop
imul
inc
mov
ljmp
leave
inc
outsb
rol
cli
mov
rorl
fsubrl
inc
push
mov
jg
mov
xor
out
jl
cli
push
adc
lret
inc
dec
int
fmuls
es
addr16
js
sbb
test
mov
ret
inc
fstps
icebp
js
sub
mov
xor
mov
and
push
imul
pop
pusha
out
sahf
cmp
cs
into
mov
cmp
in
jl
jle
push
mov
jbe
popf
cltd
xchg
push
push
mov
mov
cmc
ret
inc
popa
push
mov
adcb
inc
mov
loop
gs
mulb
dec
call
mov
stc
in
or
add
push
or
aad
push
mov
pop
popa
sub
adc
mov
or
cmpsl
xor
int
lret
pop
scas
aam
inc
and
enter
jbe
icebp
jo
loopne
fsubr
loope
movsl
xchg
fcmovbe
inc
test
inc
xor
xor
jg
lods
in
and
ror
aad
pop
std
and
and
mov
inc
xchg
and
movsb
and
pop
jp
stos
icebp
jae
jmp
jecxz
fbld
movsl
loope
in
push
outsl
inc
and
popf
and
aas
and
int
sub
sub
in
xchg
add
pusha
stc
push
pop
mov
sbb
ret
dec
push
mov
shlb
sub
pop
jmp
xchg
push
jb
lret
jecxz
mov
dec
ret
inc
pop
arpl
out
popa
xor
xor
ss
dec
and
mov
test
cmp
mov
mov
mov
inc
enter
mov
stc
jno
fadds
mov
mov
fwait
sub
and
or
sbb
divl
ds
in
shll
daa
sub
push
xchg
jp
mov
add
outsl
fsubrs
inc
pop
scas
mov
js
push
dec
fimull
push
cmp
dec
inc
add
push
push
in
inc
mov
inc
out
movsl
adc
add
lret
add
cli
mov
jns
in
push
pop
dec
cmc
fmul
mov
clc
cmp
into
notl
xchg
lea
ret
sbb
jb
pop
insl
jl
inc
or
je
xor
lock
iret
mov
and
mov
ja
cmp
lret
add
sub
imul
call
adcl
mov
insl
lret
push
mov
sbb
sahf
lret
lods
or
adc
pusha
add
dec
or
not
fmul
or
aaa
cmp
cltd
mov
xor
cmp
out
push
add
mov
test
fcomps
xor
shrb
mov
leave
push
arpl
sbb
dec
ret
aad
loopne
shlb
mov
out
in
cmp
fisttpll
daa
test
sub
xor
in
jno
or
push
mov
pusha
aam
inc
xor
les
lcall
fisttpll
push
pusha
dec
push
mov
jmp
and
cmpsb
mov
and
push
xchg
sub
sub
lods
std
out
lods
add
fcmovnbe
xchg
adc
cli
inc
mov
stc
popa
pop
data16
dec
mov
dec
and
stc
jecxz
ret
add
les
outsb
jl
in
or
ja
pop
xchg
fbld
push
sub
insl
data16
jnp
inc
aaa
dec
xchg
imul
xchg
arpl
sbb
pop
rclb
push
int3
xorb
mov
push
inc
sub
fwait
cmpsb
xchg
imul
dec
lahf
push
adc
xor
shrb
movsb
out
sub
adc
fneni(8087
ret
jne
and
and
mov
mov
pop
xor
cmp
adc
pop
pop
lret
in
aaa
jp
js
and
hlt
dec
fistps
mov
sbb
sbb
add
cltd
stos
push
xchg
stc
jle
in
and
pusha
aad
cmp
mov
mov
imul
call
pop
in
clc
mov
inc
shll
jnp
jns
jl
cld
and
dec
ja
pop
adc
repnz
jg
jno
scas
shll
sbb
cmpsb
cmp
push
inc
loope
addr16
add
enter
data16
xor
aam
add
dec
leave
cli
mov
push
in
pop
mov
pusha
in
cmc
pop
andl
outsl
arpl
in
std
cmpsb
push
addl
insb
dec
in
jno
or
comiss
lods
jo
pushf
aaa
inc
adc
inc
push
std
push
cmpsl
inc
ret
sbb
andb
shll
xor
add
outsb
es
cmp
cmp
xlat
and
and
cs
sub
les
push
mov
jnp
loopne
les
push
les
cmp
sbb
ljmp
inc
mov
mov
mov
add
mov
lret
jl
stc
mov
enter
dec
jae
pushf
fidivl
and
mov
dec
stos
push
jle
inc
insl
mov
test
adc
test
add
stc
test
in
jnp
cmp
shll
pushf
lret
adc
cmp
jb
adc
test
inc
mov
cli
adc
shrl
mov
fwait
xchg
cli
push
enter
dec
lea
in
in
jnp
mov
std
in
je
or
nop
adc
adc
arpl
mov
mov
test
xbegin
mov
xor
xchg
in
jno
arpl
jecxz
and
fdivs
iret
popf
add
aaa
and
repz
xchg
push
test
mov
mov
test
cmp
popa
cli
jb
insb
xchg
mov
dec
mov
sub
xchg
cltd
test
cmpsl
dec
cmp
cmpsb
gs
inc
pop
fwait
jnp
lret
sbb
adc
adcl
mov
ret
shrb
dec
xchg
ja
xchg
fxch
mov
fs
add
mov
pop
rcl
mov
mov
insl
imul
dec
bound
les
fwait
ret
loope
jl
jbe
jg
aad
pop
ja
into
push
and
xchg
push
subl
stos
rclb
mov
cwtl
xlat
inc
dec
add
xchg
in
cli
leave
dec
xor
dec
imulb
and
push
jbe
rcll
or
cmc
mov
jnp
fstps
sbb
js
shlb
mov
push
sub
push
xlat
push
sbb
ficoms
or
and
cmp
fdivrp
push
xor
pop
arpl
pop
outsb
lahf
sbb
cmpsb
dec
mov
push
rclb
es
sbb
inc
pop
xchg
in
in
xor
xchg
int3
rol
std
add
in
scas
xor
pop
add
aam
jp
fwait
aas
loope
aam
sbb
mov
inc
and
add
pop
pop
add
mov
and
push
test
leave
xor
pusha
data16
repnz
adc
fs
jnp
xor
dec
xor
repnz
mov
push
out
or
js
fdivrs
popf
sub
insb
inc
pop
fldt
pop
push
lods
or
adc
push
loop
mov
imul
popa
lret
lcall
cmp
jns
cmp
sbb
test
push
push
mov
outsl
notl
cmpsb
xchg
scas
outsl
and
mov
lock
push
xchg
sub
nop
mov
stc
push
sub
and
add
xor
int
push
test
xor
cmp
gs
jmp
sahf
adcl
int
lock
popa
add
and
jge
xchg
dec
pop
inc
adc
add
jg
ror
icebp
mov
ds
aad
jbe
mov
or
sub
add
cmp
xchg
pop
inc
aam
pop
push
inc
ret
mov
in
gs
or
out
movsb
out
repz
jle
fcomi
adc
mov
pusha
push
sub
arpl
movsb
dec
cmc
xchg
cmp
xchg
push
mov
outsb
mov
cltd
add
sub
mov
loopne
iret
cmp
jg
lods
inc
mov
mov
pop
or
pop
sbb
sbb
rcl
mov
mov
dec
inc
dec
mov
arpl
add
nop
adc
scas
icebp
cmp
arpl
cmpb
xchg
out
inc
fwait
iret
dec
and
jg
cwtl
cmp
mov
pop
aad
ficoms
das
fs
les
or
mov
cmp
lret
pop
lret
test
pusha
ja
orb
push
ror
shll
adc
or
dec
add
pusha
mov
in
sti
aam
sbb
lods
inc
sub
mov
and
test
xor
jecxz
hlt
sbb
nop
sahf
and
cmp
aam
int
into
leave
data16
pop
pop
cmp
dec
rorl
pop
xchg
fimuls
nop
in
jo
dec
fcomps
cltd
and
cmpsl
adc
adc
cwtl
loope
test
aaa
jp
fisubrl
cmc
mov
push
adc
clc
hlt
pushf
iret
mov
aas
or
mov
inc
mov
mov
ret
mov
xor
mov
dec
lds
subb
and
cmpsl
fidivs
fidivs
test
andl
jg
push
mov
jo
popf
cli
mov
dec
vmovupd
sti
out
clc
mov
dec
jl
repz
xchg
jle
fsubs
test
sbb
jne
in
cli
xchg
xchg
dec
in
dec
push
imul
xor
jle
dec
push
add
or
or
jg
push
inc
fisubl
xor
xchg
xor
mov
add
or
mov
cli
js
cmp
out
cli
ja
pop
ja
pop
cli
sbb
popf
push
xor
gs
mov
clc
ret
sub
adc
test
outsb
aaa
test
push
into
push
cld
pop
dec
icebp
jb
xlat
jg
testb
mov
cmp
dec
inc
shl
out
pop
mov
in
sbb
popf
inc
in
notb
push
mov
int3
xchg
lahf
aad
xor
jne
out
adc
add
dec
sbb
or
daa
sbb
lds
popf
std
les
ficompl
sbb
sub
mov
mov
adc
fdivs
popf
cltd
mov
push
jns
ss
push
test
cmp
xor
inc
mov
mov
stc
sub
jnp
pop
xchg
or
insb
mov
test
mov
dec
pop
sbb
gs
aas
pop
inc
data16
in
jo
loopne
and
xor
cmp
sbb
shr
dec
xor
mov
mov
push
push
jns
or
icebp
popf
jnp
pop
push
test
and
pop
xlat
mov
out
fstps
push
gs
push
or
adc
xlat
adc
inc
lahf
stc
mov
push
out
jns
jecxz
lret
stos
add
cmp
jl
stos
push
faddl
pop
aad
out
icebp
fldcw
popa
addr16
fistpl
bound
or
mov
mov
xor
into
sub
cmpsl
add
cmc
das
xrelease
ds
daa
imul
dec
enter
pushf
divb
pop
sub
pop
or
push
lods
sarb
js
cmp
pop
jl
add
mov
or
dec
jle
test
stos
lret
imul
mov
repz
mov
xor
arpl
inc
aas
das
and
push
shll
test
push
or
fidivs
nop
push
nop
stc
aaa
out
addr16
add
aad
stos
nop
pop
sahf
inc
or
loopne
out
mov
mov
sub
sti
rol
roll
mov
pop
repz
mov
xchg
daa
sarb
push
cmc
int3
sbb
lret
add
mov
pop
xor
jb
and
daa
pushf
or
mov
test
adc
mov
sbb
pusha
shrl
xor
sti
mov
repnz
dec
imul
sbb
lock
fwait
shll
lea
popa
aam
pop
mov
fdivs
in
jo
pop
xor
xlat
fisubs
pop
pop
xor
xchg
mov
sub
cld
mov
cli
inc
pop
cltd
jecxz
sub
cmp
pusha
jmp
and
fimuls
mov
push
incb
sub
cmpsb
movsb
mov
jmp
dec
or
push
clc
jecxz
scas
lods
cmp
lahf
cmp
call
cmp
leave
rol
cmp
add
inc
pop
clc
fcompl
xchg
sbb
mov
jae
aad
aam
cmpsb
ficoml
push
cmp
into
xchg
inc
cmp
adc
cmc
push
or
mov
cmp
push
xchg
lods
push
insl
mov
push
push
loopne
jg
xor
sbb
into
dec
xchg
scas
mov
addr16
push
clc
mov
cli
inc
jmp
jl
int
adc
mov
mov
popa
or
dec
subb
lea
popa
pushf
mov
fistpl
xchg
pop
adc
cs
mov
loop
mov
inc
in
or
sarb
iret
repz
push
jge
jno
cmp
mov
bound
cmp
sub
call
jo
and
sahf
mov
cmp
mov
std
mov
movsb
mov
pop
in
hlt
xlat
aad
inc
xchg
push
adc
cmp
adc
test
mov
testb
push
pusha
add
cmc
lret
xchg
and
test
cmpsl
loope
loop
enter
and
loop
in
nop
les
test
int3
dec
std
test
mov
movsl
push
aas
fcmovu
mov
cmpsb
icebp
js
cmp
iret
sti
mov
add
pop
sbb
int
push
jnp
popf
call
fs
das
xchg
cmp
mov
imul
pop
js
fnstcw
xor
sbb
cltd
mov
jo
cmp
fadds
imul
sahf
out
gs
xchg
daa
xchg
xlat
lds
cmp
dec
cmpsb
call
jae
cmp
sti
enter
jmp
ror
lods
sar
pop
cmp
jmp
jmp
jmp
les
adc
inc
mov
jle
and
adc
movsb
in
sbb
dec
xchg
rcrl
into
jl
mov
xchg
imull
push
aam
xor
jae
adc
mov
and
mov
mov
dec
pop
stos
sbbb
std
mov
xor
add
inc
cmpsb
jb
stos
mov
pop
popa
andl
clc
push
sub
jo
gs
xchg
out
mov
arpl
sub
int3
sarb
popf
jno
jne
mov
and
add
lock
jbe
aaa
icebp
inc
pop
inc
lret
pusha
inc
mov
or
add
sub
cmpsb
push
or
jg
jbe
shlb
mov
into
ds
lock
mov
mov
push
negl
in
push
fisubs
jl
jnp
push
jl
xchg
jne
jo
outsl
lret
hlt
ss
or
add
mov
movaps
rclb
mov
xchg
sub
and
call
xor
repnz
movsb
mov
sub
call
xchg
xor
push
and
andps
fs
xor
ljmp
inc
das
ret
jbe
and
and
xor
sbb
clc
ljmp
jb
mov
movsb
mov
pop
mov
jo
icebp
aam
aam
leave
mov
daa
dec
arpl
mov
or
mov
lods
rcpps
in
popa
xor
std
das
imul
dec
call
jns
je
movsl
or
jbe
jge
mov
sbb
pop
jecxz
lret
rcr
fwait
jp
js
push
cwtl
or
inc
pusha
shll
inc
dec
loope
stos
paddd
pop
sub
das
push
and
roll
orb
cmpsb
stc
loop
lcall
xor
xchg
fs
enter
insb
lods
and
jae
mov
mov
lret
add
or
mov
pop
pop
xor
lcall
inc
or
iret
mov
jo
iret
xchg
sub
xor
repnz
jbe
push
je
inc
and
dec
adc
xchg
imul
cmp
stc
shll
enter
out
dec
cmp
add
push
sbb
inc
mov
and
and
cmpsl
icebp
xchg
cmp
adc
adcl
dec
and
sub
mov
out
push
gs
es
mov
imul
cld
and
or
ja
pop
push
pushf
xchg
mov
popf
push
shrl
cs
out
or
mov
mov
mov
jle
dec
cmp
hlt
ffree
adc
cmp
negl
addl
scas
cmpsb
les
cmp
xchg
push
in
mov
add
ljmp
outsb
jne
xor
cmc
xchg
insb
test
jne
nopl
out
xor
out
mov
insb
sub
push
sti
mov
aam
das
xor
adcl
xor
sbb
negl
out
xor
fisubs
stos
test
push
jae
pop
pop
imul
jecxz
lahf
pop
lea
mov
roll
push
mov
pop
imulb
mov
mov
jae
dec
std
pop
or
pop
or
clc
jge
sub
add
sbb
lcall
xor
in
sub
int3
in
scas
movsl
popf
or
mov
lock
test
push
xchg
and
movsb
sub
lods
mov
mov
adc
and
or
fiaddl
jno
stos
push
leave
push
lret
mov
and
in
xchg
mov
test
addb
pushl
icebp
add
mov
ret
mov
stc
add
sub
lea
or
nop
dec
int
mov
shlb
daa
and
jo
flds
xor
test
les
adc
xchg
pop
fwait
push
sub
into
and
pop
sarl
and
add
lret
aad
jb
xlat
ret
and
int3
mov
ffree
fbld
push
push
pop
mov
pop
call
cwtl
mov
sub
imul
mov
push
pop
add
pop
adc
dec
sbb
incb
sbb
stos
in
cmpl
lahf
jo
cmc
cmp
add
mov
jge
inc
movsb
pop
inc
cmp
mov
cmpsb
or
pop
lret
mov
mov
xor
scas
push
mov
das
and
jb
dec
pushf
test
scas
jo
nop
mov
or
mov
imul
mov
mov
push
inc
mov
shlb
jmp
and
fwait
push
xor
xchg
mov
and
xor
repnz
movsl
cmpsl
push
repz
shll
push
sub
jne
mov
pop
ja
imul
popa
fnstcw
leave
js
ja
mov
pushf
mov
in
inc
lret
xor
cs
push
iret
push
adc
sub
sub
lret
je
pusha
push
add
iretw
rcll
sbb
inc
sbb
xor
xchg
sbb
fdivs
rcrl
jns
add
ds
das
jmp
shlb
inc
and
lds
adc
ret
sbb
mov
das
pop
addr16
ss
cmpsb
push
cmpsl
rorl
add
mov
les
das
lock
lds
mov
mov
mov
outsl
inc
into
outsb
xorb
mov
call
les
add
or
test
xor
push
ret
push
pop
pop
aad
lods
add
cli
rorl
leave
aaa
inc
or
or
jecxz
fimull
jb
stos
adc
mov
dec
and
cltd
push
ds
daa
pop
jle
inc
in
fs
lcall
jne
cli
leave
mov
js
mov
out
jae
and
shll
and
decb
xorb
pop
fs
cmpsl
imul
loopne
hlt
fbstp
mov
sbb
sbb
mov
mov
pop
enter
and
or
mov
stc
sbb
repnz
enter
imul
or
fdivrs
daa
and
push
inc
mov
mov
sbb
mov
cmpsl
testl
jmp
dec
fucomp
shrb
inc
mov
in
lds
incb
mov
push
sub
mov
adc
in
push
cmc
jnp
test
cld
addl
or
mov
cmc
and
jl
int3
inc
jbe
aaa
bound
inc
pop
cmp
mov
dec
out
movsl
mov
pop
jg
shll
mov
ret
imul
movsl
add
movsl
jmp
sub
into
cmpsb
inc
popa
sub
bound
sub
jg
sbbb
or
cltd
mov
icebp
adc
sbb
test
into
jl
aad
fcompp
test
js
push
add
push
xchg
or
mov
scas
mov
into
pop
int3
ret
jge
int
push
inc
dec
sub
dec
ja
icebp
je
cmp
inc
jge
xchg
cltd
xchg
nop
call
test
out
jbe
mov
pop
jo
aad
jl
scas
push
and
sti
pop
outsb
clc
add
adc
pop
icebp
scas
cwtl
adc
jo
cmp
and
addr16
loopne
test
inc
dec
cltd
gs
inc
pusha
insl
out
es
aaa
data16
jne
and
imul
aaa
mov
popf
repz
adc
push
xchg
ret
mov
mov
xor
in
mov
int3
jmp
mov
xor
dec
cmp
out
aas
sahf
cmp
cli
outsl
cmp
scas
sahf
add
outsl
mov
inc
fdivr
xor
cli
mov
movsl
dec
jg
lret
or
movsb
mov
fdivs
push
mov
push
mov
cli
lret
jae
fldl
inc
jl
aaa
gs
fistpll
and
inc
jl
aaa
gs
fdivl
cmp
pop
imulb
mov
repnz
jno
in
clc
dec
fwait
sti
lds
ret
out
jae
in
push
push
mov
ljmp
stos
js
popa
stos
and
push
sbb
icebp
ljmp
sbbl
mov
or
dec
mov
shrd
jge
add
mov
jmp
sbb
sbb
sub
dec
jne
inc
add
cmp
inc
mov
shll
cmpl
cmpsl
xor
out
push
xacquire
sbb
sbb
rcl
jle
ficoml
out
push
adcb
mov
sub
sbb
into
rcll
or
test
fistps
int
mov
lock
int
ret
imul
xor
xor
rcr
pop
aad
mov
push
xlat
add
pand
test
pop
mov
mov
outsl
hlt
ficompl
pushf
aaa
xchg
xchg
and
xlat
int
mov
test
test
ja
inc
loopne
mov
mov
lds
add
add
and
cltd
cmp
xchg
cmpsb
in
and
push
pop
mov
popa
mov
sbb
inc
shll
and
add
and
adc
fnstsw
outsb
sub
sahf
and
fdivrl
stc
into
mov
stos
shlb
enter
push
es
add
xor
dec
aas
sbb
push
int3
dec
inc
inc
stc
inc
insl
call
testb
pop
or
fildl
pop
mov
dec
dec
adc
cmp
pushf
mov
mov
mov
pop
add
mov
sbb
enter
inc
pop
js
xchg
jmp
in
sub
mov
orl
cli
loop
adc
mov
jge
cmp
push
sarl
lods
out
mov
lds
out
pop
add
dec
xor
add
jmp
fwait
lods
arpl
jo
or
movsl
and
sbb
stc
xchg
and
cmp
scas
jg
adc
xor
xchg
sbb
test
sub
sub
loopne
cmp
cmpl
ret
inc
mov
test
lock
mov
fldcw
mov
inc
push
jns
inc
mov
cmp
rcrl
lcall
fnstsw
dec
mov
and
outsb
ret
mov
pop
aam
jo
adc
mov
mov
xchg
rcll
int3
mov
jns
subl
mov
sbb
adc
xchg
xchg
repnz
sbb
xchg
mov
push
xchg
sbb
daa
ret
test
and
out
cmp
add
dec
movsl
jle
insl
fisttps
xchg
and
xchg
push
int
fisttpll
icebp
lret
call
aam
xor
jle
adcl
test
inc
cmp
lock
cwtl
sbb
pop
or
xor
pop
push
jle
cld
negl
pushf
inc
jmp
aas
pop
and
sbb
or
push
adcl
sub
mov
rolb
orl
pop
jle
jp
fstpt
lea
adc
scas
adc
pusha
fisubrl
sbb
aaa
pop
jmp
test
into
xor
cmpsl
add
xchg
lea
mov
movsb
loope
repnz
mov
icebp
xchg
rorb
enter
add
xchg
addb
repz
xor
dec
add
mov
adc
rep
jo
nop
insl
cs
test
loopne
lcall
sub
xchg
fists
pop
jmp
sbb
out
mov
fstl
jmp
lret
mov
cmp
and
fisubs
ret
sahf
dec
cmp
inc
cmpsl
inc
popa
in
fs
repnz
mov
jae
das
lock
cmpsb
mov
sub
mov
fdivrl
es
push
scas
sub
adc
inc
addb
cmpsl
xchg
data16
out
jb
sub
push
pop
les
or
cmc
jno
lods
dec
iret
add
in
testb
xor
ja
push
xor
in
lods
sub
inc
scas
insb
xchg
stos
outsb
push
leave
add
mov
sbb
push
hlt
dec
and
loop
xchg
jmp
xor
aam
adc
scas
icebp
push
cmp
das
jno
pop
xchg
ret
xchg
into
and
push
lods
lea
adc
ljmp
mov
int
fiadds
inc
inc
jmp
mov
dec
add
dec
mov
shrb
js
mov
ret
xor
iret
lea
pop
aas
xor
test
xor
add
pop
and
pop
mov
add
inc
xchg
movsl
rcrb
aas
bound
push
fildll
mov
xchg
push
lahf
add
dec
inc
lods
jno
adc
or
lods
add
cltd
jno
xor
notb
out
repz
lock
or
add
fcmovb
sbb
lahf
leave
cs
jo
cwtl
mov
into
rcrl
lcall
out
inc
int3
or
call
inc
xor
je
notb
sub
mov
push
test
cli
xor
or
or
xchg
test
nop
pop
sbb
int3
rcr
and
pop
inc
ficomps
jl
aas
leave
lret
arpl
jne
and
shl
push
fadds
pop
cli
push
xchg
mov
pop
cmpsb
in
and
jne
mov
stos
ja
fwait
adcl
inc
insl
pop
int3
push
jne
push
int
push
dec
out
jne
outsl
inc
addr16
inc
xchg
aas
xor
jle
xchg
add
cmp
test
jmp
and
jp
sti
ud2
shl
sbbl
sti
cmp
lock
cltd
ja
nop
test
push
sbbb
sets
push
jo
jno
mov
jp
lods
cmp
negb
idiv
xchg
bound
in
push
stos
fistpl
fcoms
insl
lea
dec
add
pop
out
push
repz
mov
in
loop
movsl
mov
mov
adc
or
daa
out
ret
xchg
push
lret
mov
pop
sbb
sbb
jb
pop
bnd
dec
rorl
vpsrad
icebp
out
mov
ficomps
lock
in
and
mov
or
and
push
cmp
das
xor
mov
pop
ret
mov
mov
test
mov
inc
sarb
rcll
xor
iret
or
ja
cli
mov
aam
push
adc
jmp
inc
ds
enter
jno
mov
xor
push
fsub
enter
sti
dec
in
xor
les
mov
sub
ret
icebp
ljmp
push
xchg
adc
fadds
clc
jmp
jnp
mov
mov
stos
push
enter
pop
sahf
sbb
mov
inc
push
loop
mov
sub
push
insb
or
pop
pop
mov
cwtl
sbb
sti
enter
inc
bound
loopne
cmp
inc
pop
pop
out
jb
add
dec
insw
dec
jmp
in
inc
push
add
test
nop
lsl
mov
stc
mov
pop
xchg
add
fisttpl
mov
in
cmp
jmp
mov
lret
in
cmpsl
adcb
in
jb
addr16
nop
sti
lds
ret
in
push
push
stc
les
inc
out
push
jmp
add
mov
out
xor
sbb
subl
ljmp
cwtl
push
ret
aam
cld
aam
lods
subl
xlat
fistpll
add
add
adc
mov
jg
push
jl
push
mov
mov
icebp
jmp
mov
add
push
mov
mov
js
jnp
fsubp
cmp
pop
dec
das
dec
sub
mov
sar
test
sbb
rcr
std
fstpt
xchg
stos
inc
loop
cmp
jge
lsl
outsl
jb
xor
or
popf
xchg
adcl
mov
int3
lret
mov
push
fcompl
lods
jno
out
adc
sbb
xorl
call
cmp
dec
adc
stos
aam
mov
cmp
lock
mov
inc
pusha
cmp
call
ds
cmpsl
dec
pop
mov
xor
ret
mov
ss
adc
or
dec
sbb
pop
pop
lock
cli
jbe
mov
stos
mov
divl
je
push
cli
jb
ret
or
jno
dec
jns
mov
or
dec
xchg
inc
add
mov
cmp
pop
pop
lock
ret
adc
adc
xlat
jns
or
push
sbb
sarl
sub
pop
lret
jae
mov
dec
dec
addl
fwait
arpl
arpl
xor
mov
dec
mov
dec
dec
and
mov
and
lds
std
jae
cwtl
sub
xchg
fistl
shll
xchg
push
pop
or
icebp
mov
push
xor
clc
xor
out
mov
push
sub
lods
sbb
dec
shrb
cmp
pop
ja
xor
cmp
push
and
leave
mov
js
movsl
adc
mov
outsl
adc
sub
xchg
push
push
stos
int
sub
mull
xor
iret
stos
fcomip
rcr
out
mov
cld
hlt
lret
and
fcoml
movl
pop
push
jnp
jecxz
int
fldt
cmc
imul
aad
into
fs
dec
ret
xor
inc
mov
push
test
push
jbe
jl
xlat
pop
mov
add
adc
adc
fstpt
cmp
mov
js
scas
add
test
cmpsb
pop
and
pop
bound
xor
push
sub
ret
jl
bound
sti
add
popa
ret
xor
pusha
das
mov
and
vpunpckhdq
rclb
int
pusha
outsl
in
daa
mov
ret
push
dec
cld
inc
lods
jno
ja
adc
add
div
mov
dec
aas
push
jl
cwtl
mov
xor
out
fidivrs
fldcw
std
fwait
aad
shl
jne
leave
or
pop
dec
push
push
xchg
nop
jl
push
pop
fidivl
and
cmp
bound
divl
shrb
sub
lds
dec
xor
bound
xlat
test
aaa
aaa
jno
fwait
jae
nop
xchg
cmc
in
xlat
push
out
sub
cmp
inc
jg
pop
shrl
jno
out
test
push
mov
mov
sub
fcoms
out
mov
mov
stos
sbb
lret
mov
sti
inc
sub
push
xchg
jo
mov
fistpl
sub
push
pop
cmpsl
test
lock
hlt
mov
orb
mov
mov
xchg
mov
xlat
sub
pop
repnz
lock
repnz
loope
xor
ja
mov
out
or
cli
rolb
cmc
jmp
and
pop
push
dec
and
jns
pushw
lret
pop
mov
add
dec
aaa
loope
fisubrs
cmp
fnsave
int
mov
pop
sbb
sbb
inc
dec
mov
pop
sbb
std
xchg
adc
imul
bound
icebp
xchg
dec
sar
jbe
cmpsl
dec
lahf
pop
inc
pusha
inc
icebp
sbb
adc
inc
movsl
ljmp
xor
add
and
lods
inc
popf
and
xchg
into
jns
sub
xchg
xor
pop
xchg
in
mov
sub
push
fcomps
loope
mov
xchg
xchg
push
fsubl
push
cmpsb
or
clc
inc
mov
sbb
push
and
hlt
and
lods
ret
xchg
imul
pop
cmp
jb
xor
adc
jnp
mulb
test
stc
movsl
mov
popf
jle
and
pusha
sub
inc
pop
mov
cmpsl
sub
lret
sbb
in
cwtl
cmpsl
mov
xor
xchg
mov
jb
scas
ja
out
mov
cmp
aas
xor
mov
mov
bound
lock
jg
cmp
movsb
es
inc
int
out
es
es
cmc
mov
fcmove
inc
adc
int
out
or
mov
jbe
jns
and
mov
adc
stos
ss
jo
cwtl
xchg
frstor
mov
subl
sbb
jne
repnz
and
in
pushf
int3
jbe
outsb
cmp
mov
sub
sbb
in
push
imul
pop
in
gs
add
loope
cmpsb
mov
push
xlat
jo
mov
xchg
dec
jo
in
cmc
mov
cmc
jno
sbb
cmc
daa
pop
add
inc
cmp
fidivrl
cmp
jne
pop
aaa
xor
dec
imul
push
sub
and
leave
test
sub
clc
xor
cmpsl
sbb
push
fsubrl
in
inc
cmp
out
jl
jecxz
mov
push
sbb
or
mov
add
pop
jp
in
stos
repnz
lock
lret
pop
jl
ss
fisubl
jg
frstor
pop
hlt
lahf
mov
arpl
adc
testb
xchg
movsl
insl
pop
adc
shll
jns
pop
ss
neg
or
les
and
insl
fsub
push
xlat
pop
scas
pop
lds
mov
andb
sbb
xor
mov
popa
mov
pop
xchg
mov
js
mov
xchg
dec
negl
xor
push
or
stos
into
cwtl
cwtl
fdivs
mull
ret
subb
pop
aas
mov
or
jl
and
inc
mov
xlat
aas
mov
xor
ljmp
cmc
cmp
xchg
push
in
xchg
test
iret
sbb
cli
xchg
dec
xor
xor
pop
pop
rorl
jo
imul
icebp
cli
data16
jae
aas
arpl
push
cmp
mov
fistl
les
pminsw
aad
inc
in
and
nop
and
xchg
jg
and
jnp
or
cmc
iret
mov
andb
add
lods
out
mov
adc
orl
ja
mov
repz
sbb
or
jno
pop
icebp
divb
icebp
aaa
mov
sbbb
sti
sbb
pop
and
stc
rcrb
cwtl
lret
mov
movsb
je
cmp
aam
sbb
scas
dec
fidivrl
call
shrl
lret
jne
or
cmp
and
xor
or
push
jg
sbb
out
jae
add
and
out
mov
inc
pusha
daa
je
xor
dec
cld
loope
xchg
jne
cs
call
pop
into
in
stos
and
aad
ds
push
ljmp
adc
push
mov
lods
enter
les
sbb
mov
iret
js
pop
adc
dec
shl
jmp
add
bnd
mov
inc
hlt
es
sub
lret
pop
xor
dec
mov
lods
loope
test
mov
add
xchg
mov
rorl
popa
ret
rorl
cltd
adc
lea
pop
sbb
sub
jge
outsb
xlat
in
mov
sbb
enter
jae
mov
mov
jle
cmp
inc
xchg
fadd
adc
lea
mov
mov
adc
push
adc
mov
and
loope
loopne
cmp
dec
dec
cmpsl
xchg
imul
les
mov
out
das
test
mov
push
rcrb
and
mov
fildll
pop
fnsave
push
out
pop
icebp
jns
icebp
jb
lcall
mov
and
dec
cmp
dec
or
cmp
sub
arpl
in
xorb
xchg
std
sub
fbld
mov
in
lret
lret
lods
jmp
push
adc
mov
out
dec
xor
sub
pop
jp
add
pop
and
lea
call
mov
xor
mov
fdivl
sub
xchg
int3
xor
call
les
test
test
clc
cmc
jns
mulb
call
rep
jo
push
jno
pushf
sbb
xor
xor
fldenv
sbb
scas
cmp
cmp
and
rolb
jns
xor
fsts
adc
push
xchg
xor
cmp
cs
sub
or
jp
inc
scas
mov
popa
or
or
lret
cmp
fsubl
test
mov
aaa
fnsave
dec
or
lret
jae
fstps
lods
aam
push
aad
jp
fildll
mov
xlat
fwait
xchg
cli
inc
xchg
or
or
pop
mov
push
aam
pop
pop
push
pop
lret
in
int3
or
je
jbe
mov
push
int
push
movsb
cmp
movsb
xchg
adc
imul
enter
mov
jno
xor
fstps
in
pop
and
add
lret
lods
sub
mov
mov
icebp
mov
lcall
push
adc
cmp
cmp
call
and
push
es
into
roll
and
leave
clc
popa
enter
lahf
or
xchg
inc
mov
pop
mov
sti
gs
loopne
hlt
loopne
jmp
inc
pop
jg
pop
ret
loopne
ret
int
imul
pop
jbe
je
mov
cwtl
push
or
add
sub
stc
mov
mov
subl
adc
je
mov
push
push
mov
mov
jecxz
out
push
mov
push
xchg
jno
jbe
test
stc
sub
jo
xchg
jno
jae
test
imulb
in
jo
xchg
jno
jo
test
repz
jo
xchg
jno
insl
sbb
add
push
push
in
sti
push
push
iret
call
sar
or
sub
cld
jbe
addr16
test
xor
xor
mulb
cmpsb
sahf
and
push
lock
inc
mov
in
mov
pop
adc
pop
or
add
push
lds
mov
jl
loop
shlb
ror
push
pop
push
cs
pop
icebp
sarl
sub
sub
rcl
and
dec
test
adcb
sti
stos
sub
arpl
mov
in
cmpb
xchg
mov
call
mov
xor
fmulp
xchg
scas
adc
adc
mov
out
xchg
mov
test
test
jle
cmp
loop
jp
add
mov
mov
call
aam
mov
cs
xor
clc
xlat
fdivl
jae
aaa
xchg
pop
fists
call
or
mov
daa
pop
test
lock
cmc
rcrl
dec
xor
lods
loopne
lods
jo
push
jno
in
mov
cmpsl
xor
xor
fsubs
or
sahf
loopne
sahf
xchg
imul
into
cmp
mov
js
xor
pop
xor
fcoms
pop
cli
push
xchg
jge
xchg
adc
adc
mov
sub
push
rcl
stc
dec
jns
inc
mulb
popa
or
or
xorl
pusha
jmp
popa
ss
or
fnstsw
fisttpll
dec
lret
lret
jb
ftst
cmp
stos
test
push
aad
ret
cs
xchg
inc
inc
xchg
or
mov
push
sbb
pop
pop
sahf
pop
lret
sub
jae
jbe
mov
push
adc
clc
movsb
xchg
pop
dec
xchg
imul
leave
mov
xor
xor
fcomps
xor
and
add
adc
or
or
mov
fldcw
xchg
fnstenv
cmpsb
cmp
imul
mov
es
and
sbb
daa
fbld
mov
and
xor
xchg
out
pushf
adc
adc
adc
cmp
mov
loopne
fndisi(8087
inc
inc
mov
push
ret
repnz
int
inc
iret
adc
adc
jne
cli
xor
xchg
inc
xchg
push
jb
push
stc
and
clc
mov
mov
cs
add
je
pushl
xchg
xor
push
mov
aam
in
xor
or
test
mov
xchg
jno
inc
out
adc
lods
jno
mov
cmpb
adc
jne
in
cmp
in
jo
imul
push
lods
jno
xchg
jno
dec
out
test
in
push
sbb
push
sbbb
or
aam
add
push
inc
data16
xor
or
lret
icebp
cwtl
jmp
mov
xchg
mov
add
outsb
mov
sarl
xor
xchg
hlt
arpl
cmp
fsubl
into
pop
mov
pop
movsb
mov
pop
inc
sub
or
scas
push
cwtl
mov
les
imul
pushf
inc
or
mov
xchg
mov
es
enter
lds
cmc
not
lock
int3
lock
cmp
daa
sub
mov
cmp
shrb
inc
jp
mov
popf
adcl
cmp
push
fbstp
push
iret
cmp
mov
ss
int
pop
cld
insb
sbb
fimull
ljmp
dec
ljmp
jp,pt
icebp
arpl
fisubrl
dec
mov
je
sbb
out
dec
test
jp
das
jns
jge
or
test
sbb
pop
cmp
lret
xchg
and
mov
out
cs
inc
xchg
pcmpgtw
cmp
add
cmp
inc
pop
out
xchg
in
int3
xchg
sub
xchg
push
ret
mov
daa
mov
es
mov
int
lock
out
inc
pop
popa
mov
stos
inc
mov
les
js
push
pop
jo
dec
push
xor
imul
adc
fldt
popa
add
cmc
mov
stos
dec
sbb
push
inc
lock
pop
mov
and
xor
out
xor
adc
out
dec
dec
jne
hlt
cmpsb
jmp
int
pop
xchg
std
pop
mov
or
stos
test
je
sub
insb
test
sub
xchg
mov
pop
or
mov
add
push
sbb
cmpsb
std
lret
popf
and
scas
or
call
jle
cli
aad
push
push
dec
popa
jp
pusha
or
or
fwait
fwait
push
inc
add
sahf
bound
sub
ret
call
cmp
or
lahf
dec
pop
lds
rcrb
sub
and
lret
into
sbb
push
or
nop
shl
int3
pop
lea
xchg
cmp
jb
pushf
xor
xchg
ficomps
mov
cmpsl
cld
adc
push
mov
sti
and
sbb
fistps
in
xor
aam
pop
adc
cmpsl
push
js
push
dec
dec
call
scas
int3
bnd
cmp
inc
xchg
les
add
test
mov
or
push
jmp
mov
je
addr16
aas
loop
jp
test
inc
loopne
packsswb
lahf
std
lcall
cmc
fcompl
cmp
add
mov
ret
out
jns
add
lock
push
xor
in
xor
cld
popf
pop
out
adc
sub
subb
push
pusha
ret
rorl
adc
mov
int3
mov
int
xchg
int
xlat
add
rcrl
push
mov
and
dec
jge
out
fdivrs
push
push
pusha
sub
mov
pop
mov
mov
outsb
movsl
pusha
ret
daa
sub
mov
scas
loopne
and
adc
lods
jbe
ret
push
cmp
sbb
pop
pop
pop
xor
mov
dec
push
or
xchg
mov
fdiv
pop
test
aam
sbb
push
js
repnz
mov
mov
idivl
pop
inc
mov
sub
push
inc
loope
arpl
jp
mov
push
mov
shlb
mov
mov
mov
sbb
das
pop
sub
stc
pop
cld
lret
cwtl
gs
mov
xchg
je
push
or
push
mov
sub
fcomps
ljmp
mov
out
das
adc
int3
sub
repnz
mov
pop
in
adc
stos
inc
push
mov
mov
insb
jecxz
dec
lret
lret
jo
fnstenv
test
mov
fidivs
test
fwait
xchg
aad
xchg
xor
or
cmp
mov
mov
push
dec
push
pop
pop
sub
pop
lret
lods
add
or
mov
push
test
movsb
jno
in
loop
subl
in
enter
xor
xor
pop
and
lock
adc
mov
subl
mov
popf
out
xchg
mov
outsl
dec
imul
cmp
cmp
pop
mov
es
fildll
test
and
and
xbeginw
sahf
bound
inc
adc
cmp
sldt
repz
xchg
xchg
daa
jecxz
insl
ss
daa
adc
mov
fs
inc
sub
lcall
test
mov
lcall
add
stc
mov
lahf
mov
pusha
pop
subl
in
aam
jne
sbb
aad
push
mov
sti
mov
mov
out
jecxz
test
inc
sub
jo
xchg
jno
pop
pop
test
sub
jo
xchg
jno
push
pop
test
in
sub
jo
xchg
jno
jnp
test
lock
jo
xchg
jno
push
pop
test
stos
sub
jo
xchg
jno
rcll
push
data16
push
push
fs
push
orl
into
stos
sub
call
je
addr16
cmpsb
xor
xor
mov
mulb
jle
and
inc
enter
xchg
mov
xor
shr
mov
xor
imul
decb
push
pushf
scas
push
mov
xchg
pop
cmp
jl
js
sarl
gs
outsl
pop
push
add
mov
jae
das
sbb
addr16
mov
pop
pop
dec
sub
cmp
es
arpl
or
and
adcl
ret
xor
test
or
fmulp
pop
test
lods
push
jno
adc
push
adc
mov
out
jne
xor
sub
pop
jmp
jp
sti
and
lea
call
sub
pop
xor
rcl
fdivl
dec
xchg
xchg
neg
xchg
int3
push
xor
jmp
test
inc
test
leave
or
cmc
cwtl
lods
mulb
or
lods
jo
push
jno
mov
xor
xor
bound
outsl
push
cmp
inc
inc
xchg
shlb
jbe
xor
pop
xor
push
push
xor
push
xchg
push
stc
xchg
adc
adc
xchg
mov
sub
and
ja
inc
lahf
inc
popa
in
popa
or
or
push
scas
lret
fisttpl
jno
pusha
iret
andl
pop
dec
orl
repnz
jo
fnstcw
lods
aam
push
aad
lcall
fwait
lret
aam
xchg
sbb
or
mov
push
cmc
xor
pop
je
pop
lret
pop
add
or
or
scas
jbe
out
sbb
pop
mulb
xchg
insb
enter
mov
xor
pop
and
add
adc
out
stos
sub
fst
or
fimuls
jl
mov
xchg
je
cwtl
cmpsb
cmp
dec
cmp
or
xchg
es
es
lret
hlt
test
and
clc
popa
out
popf
bound
inc
adc
cmp
pop
mov
loopne
icebp
loopne
add
pop
ret
or
into
adc
adc
je
sbb
xchg
dec
std
xchg
push
push
cmp
dec
cli
stc
mov
lahf
mov
lods
push
subl
xor
je
fistps
jbe
and
push
mov
mov
add
out
mov
cs
jno
xchg
push
test
sbb
in
jo
xchg
jno
xchg
push
test
push
cmp
jo
xchg
js
lcall
jb
xchg
jle
adcl
in
outsb
xchg
jns
inc
push
pop
push
and
pop
push
inc
cld
pop
sbbl
incl
je
addr16
movsl
outsl
xor
or
mulb
and
fwait
sub
ss
inc
jle
dec
mov
jmp
call
mov
std
add
lods
pop
mov
mov
fbstp
and
mov
adc
outsl
push
push
jl
pop
icebp
push
mov
jnp
sbbl
sub
dec
out
pop
inc
cmp
mov
loope
hlt
arpl
insb
in
sbb
in
aaa
xchg
mov
bound
mov
push
arpl
xor
test
outsb
lret
ret
lods
sub
adc
push
sbb
mov
out
xor
mov
test
sub
pop
push
fists
ret
std
jb
and
add
out
loope
mov
pop
cmp
cs
ss
fcompl
call
mov
pop
neg
sub
cmc
iret
pushf
cmpsb
std
fwait
scas
dec
ds
inc
lods
out
lock
jo
push
jns
lcall
xor
aad
scas
cmp
cmpsl
cmp
push
xor
mov
shrb
fnstenv
fistps
push
pop
push
pop
xchg
cld
clc
pushf
adc
cs
mov
sub
shll
shll
repnz
daa
lahf
dec
popa
mov
imul
push
scas
ret
fildl
aam
addb
fstl
aad
pop
addb
bnd
outsl
cltd
fldln2
shrb
mov
fidivrs
test
fwait
sub
xchg
xchg
fildl
or
mov
push
cmp
pop
pop
cmp
push
lret
or
les
dec
jo
jbe
scas
jle
nop
sbb
cmc
lods
xchg
lahf
dec
fwait
imul
fs
mov
insl
xchg
cmp
cmp
aad
and
add
adc
leave
sbb
ds
and
test
add
jmp
cli
mov
mov
seto
lods
dec
xor
or
bound
es
lds
fisttps
test
and
sub
out
icebp
popa
and
adc
inc
sbb
cmp
dec
mov
mov
inc
loopne
lock
pop
push
out
ret
sti
lods
lret
push
sbb
jge
loope
xchg
push
jle
push
xchg
pushf
std
lcall
clc
lock
sahf
mov
cs
jge
or
jg
inc
sbb
cli
and
das
out
adcl
in
popf
xchg
js
xor
sub
jo
nop
js
inc
adc
in
sub
in
subb
jo
nop
js
out
adc
in
rcll
pop
push
cs
pop
push
dec
std
pop
add
mov
ret
sub
jmp
or
movsl
outsb
xor
cmp
ret
xlat
jmp
dec
fwait
sub
xchg
stc
mov
xchg
addl
dec
mov
ljmp
in
push
or
lods
pop
mov
ret
pop
xor
jne
sbb
fs
leave
sbb
sbb
push
roll
icebp
jle
clc
jb
xchg
jp
insb
push
and
mov
enter
pop
inc
or
mov
fs
insl
in
dec
or
adc
mov
dec
aaa
mov
fbld
xor
test
lret
ret
outsl
cmpsl
adc
sbb
mov
out
call
cmp
sub
pop
push
ficoms
add
jae
in
add
cmpsb
xor
mov
lea
fdivrl
aam
test
sahf
int3
aas
cmp
call
dec
mov
mul
sub
cmc
push
pushf
jmp
addr16
inc
lods
mov
movsl
jo
push
jbe
or
mov
das
xor
xor
aaa
bound
push
test
int
cmp
cmp
cltd
xchg
fildl
sarb
mov
jne
xor
push
ss
pop
aad
push
pushf
notb
notl
and
das
rcrl
jne
inc
dec
sahf
inc
popa
shr
or
add
int3
fistl
subb
add
aad
cwtl
addl
lods
outsb
cltd
fldcw
jle
aam
push
rcr
and
cs
subl
pop
rcrl
or
cmp
mov
mov
push
xchg
sbb
pop
lret
lahf
add
or
outsl
pcmpeqd
jae
imul
movsb
out
mov
imul
enter
mov
insb
mov
das
xor
aam
and
add
adc
enter
mov
sub
or
or
icebp
jne
mull
inc
inc
outsb
xchg
add
aas
mov
mov
fnstenv
sub
sub
adc
das
jne
in
mov
sub
aaa
iret
repnz
xchg
inc
or
sbb
insl
xor
jmp
mov
cmpsl
insl
inc
in
add
in
dec
xchg
mov
and
or
pushf
cmpsl
iret
rcrl
sbb
jle
js
mov
xchg
pop
mov
push
sahf
shl
sahf
pop
xchg
cmp
aam
hlt
mov
xor
and
sub
jp
fdivrl
popa
push
js
mov
testl
loop
es
mov
jg
sub
mov
cmpsl
sub
jle
sahf
jg
sub
sub
jle
sahf
jg
sbb
jg
lahf
jle
adc
mov
scas
sub
jg
lahf
jle
adc
clc
pop
pop
jo
pop
mov
sub
lock
lods
push
stc
sbb
cs
xchg
sub
xchg
push
add
cld
push
add
dec
popf
sbb
nop
ljmp
xor
scas
je,pn
and
fmuls
fldenv
into
jp
inc
int3
je
xrstors
push
call
xor
ss
cltd
aad
lods
and
lods
push
cs
push
lcall
out
xchg
test
sbb
mov
cmpsb
xchg
movsl
les
cwtl
das
cltd
shlb
rorb
pop
mov
pop
cli
push
cmc
cli
sub
clc
leave
cwtl
xor
inc
pushf
ret
sub
adc
push
xchg
outsl
mov
hlt
sbb
nop
test
ret
shlb
mov
mov
xor
insl
hlt
scas
mov
dec
cwtl
ljmp
jmp
incb
mov
repz
cs
insb
nop
mov
xchg
or
or
out
jg
or
mov
inc
push
cmp
adc
fnstenv
mov
mov
ficompl
stc
pop
fwait
cmp
sub
jl,pt
aas
cmp
sarb
pop
faddp
jmp
callw
mov
stc
jb
or
mov
enter
jne
mov
iret
enter
pop
fistpll
xchg
andb
mov
mov
ret
enter
cmp
lds
inc
and
dec
mov
push
aam
pop
inc
push
fiaddl
out
adc
ja
outsb
nop
mov
dec
fldl
dec
mov
adc
jb
das
jne
push
push
rclb
sub
inc
pop
int
cmp
or
or
int3
scas
pop
xor
mov
adc
mov
jmp
push
call
jo
pop
jno
push
adc
mov
lods
push
lods
cmpsb
sti
inc
movsl
cmp
cmp
clc
leave
and
orb
popa
ret
fwait
bound
aas
adc
aaa
pop
mov
stc
pusha
dec
loopne
out
loopne
in
addl
out
ret
int3
stos
ret
int
data16
adc
adc
je
mov
cwtl
push
xor
sti
xchg
push
cmpsb
ss
stc
jno
stc
mov
pushf
mov
cmc
push
subl
stos
shlb
pop
jbe
sbb
push
mov
clc
mov
fldt
orl
test
imul
jo
nop
jno
push
test
mull
in
jo
nop
jno
addr16
in
es
jo
nop
jno
dec
adc
in
in
jo
jno
add
es
jo
jno
bound
push
push
xbegin
or
and
push
ja
ds
xor
xor
aam
mulb
sahf
andl
mov
inc
mov
mov
cmpsl
rcrl
or
and
loop
push
hlt
and
jg
dec
subb
pop
sub
daa
ror
cmp
push
dec
cs
jns
push
mov
out
aaa
cmp
push
sub
mov
movsl
shrl
sub
sti
scas
sub
arpl
daa
mov
loopne
pushf
aaa
and
mov
rolb
aam
xlat
fmulp
cmp
xchg
pusha
and
aaa
sti
mov
add
ljmp
mov
adc
xchg
push
pusha
sti
jno
neg
mov
lea
inc
in
int3
mov
sbb
pop
jecxz
mov
movsl
enter
shll
aad
insl
jbe
cwtl
lahf
dec
xchg
aad
hlt
lahf
rolb
lret
and
aas
lds
dec
jno
mov
sbb
push
arpl
sbb
and
mov
popa
out
mov
sbb
pop
cmp
fwait
pop
sahf
jne
xchg
adc
add
sbb
mov
pop
mov
xor
daa
cmpb
push
push
test
shlb
mov
push
add
push
cmp
cmp
and
sub
lock
rcrl
xchg
lods
mov
pop
mov
out
lret
movsl
cli
notl
fwait
add
cwtl
mov
jno
mov
stos
inc
xchg
scas
sub
add
sbb
jbe
xlat
push
lahf
shll
push
popa
ret
leave
mov
pop
mov
jb
cmpsb
xor
jb
jno
mov
fs
sub
pop
jp
mov
cmpsl
icebp
lods
jg
xchg
stos
cltd
test
repnz
jge
lds
pop
ret
sbb
cmp
ret
fmulp
dec
cmp
add
cmovb
cmpsb
push
lods
arpl
in
fwait
mov
leave
sti
into
repnz
sub
or
jge
pop
jnp
repnz
xchg
push
cmp
add
add
xorl
mov
mov
test
out
pusha
in
pop
jbe
leave
ficoms
fs
and
cli
add
stc
cmp
leave
adcl
cmp
pop
movsb
inc
inc
sbb
mov
push
mov
and
xor
ss
mov
xchg
in
cmp
loope
lds
out
sbb
inc
mov
push
mov
sbb
add
ljmp
inc
push
mov
sub
xor
sahf
push
push
adcb
adc
jo
jnp
mov
cmp
cmp
es
jnp
imul
jle
mov
add
push
mov
xor
push
mov
dec
xchg
fsubp
cmpsb
loopne
out
sub
mov
add
cmp
push
lcall
mov
das
push
or
mov
loopne
insb
mov
push
inc
lret
adc
sub
add
icebp
das
xchg
fbstp
jecxz
inc
hlt
addr16
dec
xor
ret
and
iret
cmp
inc
mov
jge
adc
cwtl
fsubrp
loope
push
xchg
mov
dec
adc
inc
ss
mov
mov
mov
push
xor
push
inc
dec
and
in
test
cmp
and
or
adc
mov
push
jb
xor
test
mov
cmc
cs
test
popf
aaa
cwtl
jne
xchg
outsl
call
call
into
lods
mov
addr16
test
in
add
cmc
add
cmpsl
dec
out
outsb
dec
lods
mov
lods
jo
dec
jno
and
mov
out
pop
xor
mov
bound
das
jbe
sahf
cs
lahf
xchg
addr16
sarb
adc
mov
push
mov
push
xor
hlt
push
push
out
rcll
sbb
xchg
adc
push
adc
push
xchg
das
sub
imull
rcll
sar
inc
push
sti
inc
mov
pusha
or
or
inc
inc
frstor
push
pusha
ss
fstpl
fmull
dec
lret
lret
nop
outsl
inc
nop
fsin
sbb
stos
sub
aam
data16
repnz
fisubrs
and
lcall
push
or
push
add
push
pop
mov
pop
lret
sbb
lret
inc
or
test
std
xor
jns
movsl
xchg
lcall
enter
mov
jl
cmp
insl
inc
pop
ret
stos
ja
data16
sub
pop
inc
sub
lahf
and
xchg
and
fidivl
jg
push
mov
pop
fstpt
pop
repnz
xor
inc
subl
test
popf
data16
lea
xor
bound
pop
inc
icebp
mov
push
sbb
loop
add
or
inc
pop
mov
fnsave
jne
outsl
stos
jbe
fildl
jecxz
ja
push
stc
push
aaa
lock
fcoms
and
adc
sbb
push
int3
dec
mov
xchg
sbb
leave
inc
gs
imul
or
push
test
repnz
xorb
sbbl
mov
in
cmp
adc
mov
inc
lahf
add
cmp
xchg
jge
in
mov
stos
adc
lahf
jae
xor
pushf
cmp
push
stc
and
cmp
push
add
mov
bound
cwtl
sub
mov
test
jb
jecxz
test
aad
xchg
out
xchg
or
movq
or
sti
dec
xor
cld
xor
fwait
xlat
push
add
jnp
aaa
fidivl
pop
push
mov
popa
push
pop
in
aas
data16
lea
cmp
xchg
cmp
fs
sbb
sub
cmp
push
jb
or
clc
pop
lahf
fiadds
cmc
sarb
inc
out
lods
pop
cmp
inc
call
mov
cmpsl
enter
jno
aas
addr16
fiaddl
popl
mov
pop
inc
dec
dec
xor
mov
pop
push
outsb
arpl
sub
int3
call
cmp
icebp
inc
sarb
out
mov
inc
in
mov
mov
aaa
pop
xlat
xlat
loop
idiv
cmp
adcb
mov
in
xchg
cmpsb
mov
or
ret
push
sub
stc
aas
data16
jg
dec
xor
ja
cmpsl
xchg
or
test
push
jo
push
ljmp
out
push
xor
js
cmp
add
push
xchg
push
hlt
shll
gs
or
stos
sub
enter
mov
iret
ds
call
arpl
xlat
insb
arpl
sbb
mov
pushf
sbb
mov
mov
mov
jb
lods
aam
dec
xchg
mov
adc
dec
decl
mov
out
cmp
or
pusha
cli
inc
out
imull
jnp
or
cmp
dec
insl
inc
xor
jmp
mov
xchg
and
js
sbb
push
jg
loopne
ds
xor
subl
inc
xchg
mov
inc
scas
mov
sub
ret
pop
pop
stc
mov
fiadds
sub
mov
xchg
and
cmp
mov
and
and
cmp
fistps
in
pop
xchg
clc
pop
ret
cwtl
cltd
bound
cmp
xchg
pop
xchg
mov
loopne
in
loopne
mov
in
ret
mov
ret
int
fs
adc
outsl
adc
je
jp
cwtl
push
fnstsw
pop
xchg
clc
xchg
push
mov
cmc
stc
mov
lcall
adc
das
je
iret
je
adc
push
mov
testb
out
test
inc
and
jno
inc
adc
fisttpl
test
and
jo
lea
inc
adc
aad
jno
cmp
and
jo
lea
cmp
push
push
mov
clc
push
andl
iret
dec
outsl
add
mov
xor
lods
shl
and
and
cmp
lock
inc
xor
inc
mov
out
call
stos
or
cmpsb
stc
or
test
mov
jl
fidivrl
sbb
ror
pusha
lret
push
push
push
icebp
xchg
mov
jb
xchg
jae
and
and
pop
mov
push
push
dec
and
cmp
and
arpl
in
orb
xchg
mov
mov
xorb
aad
lret
lret
lods
add
in
dec
adc
mov
out
out
xor
test
test
dec
and
pop
jp
stc
jp
jb
or
and
jmp
das
push
xor
enter
inc
jge
xchg
out
xlat
xchg
int3
dec
cmp
call
fmull
test
shlb
cmpsb
add
dec
lods
mov
lods
jo
dec
jno
mov
mov
ja
pop
xor
shll
xor
scas
cmp
cmp
cmp
xchg
rcrb
jno
xor
push
xor
rcll
sub
push
xchg
dec
hlt
xchg
adc
adc
lea
sub
and
jb
inc
lcall
cmp
or
push
stos
lret
imul
mov
add
fisttpll
fisttpll
dec
lret
lret
imul
jns
lods
aam
dec
aad
xchg
jne
cs
iret
fwait
xchg
adc
or
or
ja
mov
in
cs
pop
outsb
mov
lret
or
insb
or
stos
jbe
in
push
movsb
push
icebp
movsb
xchg
sub
imul
enter
mov
xor
rcrl
add
and
add
jecxz
sub
aad
or
inc
repnz
mov
or
cmp
cmp
add
and
es
jmp
test
clc
movsl
sar
loopne
bound
cmp
xchg
pop
into
xor
mov
adc
loopne
in
loopne
add
pop
ret
clc
cmpsl
ret
int
arpl
adc
adc
je
ret
push
and
clc
xchg
push
push
xor
stc
inc
cmc
stc
mov
lcall
pop
and
je
iret
je
xlat
adc
push
sbb
push
mov
mov
sti
sub
subl
test
mov
orl
in
jo
lea
mov
test
push
and
jo
lea
mov
test
or
addl
in
jo
lea
adcb
push
add
notl
ljmp
call
add
mov
xor
hlt
shl
and
ret
lods
nop
mov
sub
adc
mov
jae
imul
clc
or
test
mov
aam
cmp
jl
mov
pusha
ror
pusha
lret
push
push
inc
push
icebp
fnstenv
jae
imul
and
mov
push
dec
subb
sti
ret
and
arpl
fwait
fs
outsb
add
adc
adcl
add
xor
xorb
aam
lret
lret
lods
dec
imul
push
mov
out
in
xor
test
xchg
and
pop
call
clc
jp
mov
test
jmp
das
inc
push
xor
adc
fdivl
mov
aaa
xlat
xchg
int3
nop
aaa
int
lock
jmp
test
push
test
or
mulb
dec
inc
dec
lods
clc
ljmp
cld
adc
xor
mov
bound
bound
lods
dec
cmp
cmpl
shl
xor
mov
jo
xor
push
xor
rclb
je
push
xchg
xchg
repz
adc
mov
sub
sub
insl
enter
jno
inc
push
lcall
addl
lret
fildl
fsubl
jl
adc
aaa
fstl
jge
lret
lret
push
frndint
xor
stos
sarl
or
fidivl
add
fwait
or
fwait
xchg
pop
cmp
mov
cs
pop
mov
pop
lret
inc
cld
lret
or
test
push
movsb
cltd
lock
xchg
jb
xchg
imul
insb
enter
mov
xor
rcrb
dec
jmp
jp
adc
sub
or
push
inc
repnz
add
or
cmp
fnstenv
and
pop
and
lret
fildll
xor
and
test
clc
in
sar
sub
popf
adc
adc
xor
mov
pop
pop
dec
loopne
jmp
inc
dec
addb
loop
ret
inc
cmpsl
ret
int
pushf
mov
mov
mov
xchg
or
push
insl
aaa
pop
xchg
notl
stc
mov
stc
mov
cltd
mov
in
push
subl
jb
je
pop
adc
push
fs
mov
inc
sub
xorl
in
shll
in
jo
mov
adc
imul
push
and
jo
mov
rclb
test
mov
pop
xchg
push
push
sbbl
xchg
mov
jbe
shrb
mov
jo
sub
xchg
jae
loope
pop
sbb
or
out
cmpsl
sbb
xor
sub
aas
imul
xchg
rcr
sub
pop
in
call
cmp
pop
or
clc
or
test
mov
sbb
cmp
jl
add
mov
xchg
pop
test
push
mov
push
icebp
and
jae
mov
sub
xor
and
dec
in
dec
xorb
or
cld
arpl
fs
mov
in
sbbb
xchg
mov
dec
pop
loopne
jae
xor
xchg
rcr
lret
lret
lods
aam
fsubl
xor
mov
in
mov
mov
mov
push
mov
gs
ret
dec
fwait
lret
mov
lret
and
pop
iret
fdivl
xchg
push
inc
ficoml
mov
mov
pop
and
test
aaa
icebp
mov
inc
rcrl
daa
cmc
pop
dec
lods
add
sbb
jp
dec
gs
push
iret
xor
mov
scas
cmp
ficompl
loop
xor
mov
add
add
xor
mov
push
xchg
cwtl
and
fnsave
adc
pop
rcrb
sub
lock
leave
sahf
inc
cli
inc
and
xor
or
mov
mov
popa
jp
push
sbb
aaa
fucom
out
outsb
test
fsub
mov
jge
fnstsw
hlt
lea
outsl
mov
testb
iret
es
push
mov
cltd
or
lea
sahf
mov
pop
rorl
push
loop
cmp
mov
jo
adc
clc
fwait
lea
push
fisttps
in
out
mov
or
sbb
cmp
shrb
push
movsb
mov
and
adc
inc
lret
and
pop
ja
sbbl
inc
mov
sbb
sbb
push
xor
scas
bound
and
or
push
shl
inc
dec
enter
sub
sub
hlt
gs
pusha
sahf
inc
add
xchg
jmp
xchg
pop
push
and
fdivrp
mov
ljmp
push
add
or
mov
push
sarb
xor
xor
push
scas
jo
mov
xchg
inc
mov
notl
cld
xlat
hlt
icebp
mov
cmp
loop
aas
gs
fsubl
jae
bound
add
mov
xchg
xchg
xor
movsb
in
pop
daa
loopne
mov
jp
sbb
sub
ja
test
adc
and
jnp
mov
sbb
mov
xchg
and
jnp
xchg
push
sbb
jb
xorb
sbb
lahf
repnz
pop
js
pop
lea
lret
int
test
add
adc
clc
mov
imull
dec
pushf
sub
adc
testl
stos
out
out
add
pop
orb
or
minps
pop
mov
lock
bound
lret
aad
movl
rol
pop
int3
push
iret
pusha
pop
sbb
negl
lock
jnp
lahf
jo
lock
sub
sub
sub
mov
sbb
outsl
adcl
mov
xchg
out
xchg
mov
cmp
xor
fcom
ret
and
bound
dec
mov
jmp
aaa
test
mov
aam
xor
and
push
jp
pop
jnp
std
jno
inc
sbb
andb
loope
and
mov
rcll
mov
jns
pushf
int
nop
les
aas
shr
push
mov
cli
sahf
sub
cld
arpl
lods
inc
roll
movsb
mov
scas
je
dec
je
xchg
mov
and
xor
repz
add
inc
aaa
popf
fstps
jb
sarl
lods
pop
xor
iret
pop
pop
add
push
lcall
sbb
pusha
mov
and
stc
iret
shl
clc
insb
decl
xchg
dec
addr16
sbb
cmpsl
int
shrb
xchg
jno
mov
rcr
inc
cmc
jns
lods
jmp
lcall
js
rcrl
jo
sub
ret
xchg
xchg
in
xor
mov
test
lret
das
sbb
push
int3
shl
ret
add
add
lods
jo
lods
adc
xor
mov
jno
and
inc
add
cmpb
mov
and
pop
sub
xchg
push
jae
stos
jbe
lods
fnstenv
xlat
movb
mov
ret
inc
repnz
clc
and
enter
sbb
sbb
das
stos
ret
aaa
fildl
daa
and
push
stos
test
add
testl
aam
add
scas
insb
clc
jl
dec
jnp
xor
sub
dec
xchg
fldcw
aaa
and
stos
sbb
push
jno
mov
or
adc
sbb
call
cwtl
push
xchg
pop
bnd
divl
and
repnz
or
mov
je
mov
adc
xorb
call
mov
test
fsubrp
sbb
adc
orb
adc
adc
xchg
add
icebp
inc
insb
in
mov
in
loop
data16
xchg
dec
adcl
xor
lahf
cmp
rolb
out
mov
test
outsb
inc
pop
sti
adc
popa
xor
and
lock
inc
mov
jecxz
call
fildl
pop
or
cmpsb
push
mov
mov
cmp
jl
loop
sarl
pop
lret
popa
pop
push
fdivrp
push
icebp
loope
icebp
jb
jae
inc
sbb
jnp
mov
push
push
dec
addb
sti
cmp
cld
arpl
xchg
fs
inc
add
subb
xchg
mov
cwtl
pop
loopne
add
faddp
rcr
lret
lret
lods
daa
imul
out
jmp
xor
test
and
pop
xchg
fistps
dec
idivb
xchg
adc
lret
cmpsl
call
cld
xchg
cmp
fdivl
xor
xchg
push
aad
int3
push
push
mov
mov
mul
sub
cmc
add
cmpsl
dec
sub
lods
shl
lods
jo
dec
jno
aam
mov
fildll
pop
xor
into
bound
orl
xchg
sarb
outsb
mov
mov
into
push
push
pop
notl
inc
icebp
xchg
adc
adc
fnstenv
sub
jno
sar
ds
inc
cs
inc
popa
pop
loop
or
lret
jae
lret
fstpt
fsubl
jno
ss
fisttpll
dec
lret
lret
push
fisubrl
loope
aad
divb
fidivl
fwait
or
fwait
xchg
bound
xchg
or
mov
pop
pop
mov
or
or
cmpsl
jbe
push
adc
and
movsb
xchg
dec
dec
xchg
imul
insb
enter
mov
xor
into
pop
and
cli
and
inc
ret
push
mov
sub
cmc
rorb
cmpsb
cmpsl
icebp
testb
sub
mov
xchg
orl
cmpsl
cmp
cmp
insb
push
mov
es
mov
or
and
mov
clc
xchg
mov
bound
xor
xchg
fidivl
pop
mov
xor
loopne
jmp
inc
pop
test
pop
ret
sbb
adc
insb
adc
je
loop
cwtl
push
daa
xor
xchg
push
add
push
stc
popa
sti
stc
mov
xchg
mov
lds
jle,pn
das
je
les
adc
cmp
push
mov
mov
sbb
out
stos
addl
mov
scas
push
test
imul
jo
xorb
push
test
cs
jo
mov
cld
or
cmp
push
test
sub
in
jo
mov
mov
icebp
push
push
push
repnz
sbbl
or
sub
lcall
add
xchg
xor
notb
mulb
push
and
mov
lea
mov
jecxz
call
pop
push
pop
or
decl
push
or
mov
jl
fistpll
sbb
mov
dec
pop
lret
outsl
pop
push
data16
push
icebp
stos
mov
jb
mov
mov
sub
jge
and
dec
mov
orb
das
sbb
fs
addl
adcl
push
pop
loopne
dec
je
faddp
rcr
lret
lret
lods
outsl
push
adc
mov
out
ljmp
insb
movb
fistps
mov
jp
ficompl
or
mov
jmp
das
pop
xor
lods
int
ss
jle
xchg
xor
xchg
int3
mov
int
outsb
push
mov
mov
imull
sub
cmc
and
xchg
cmpsl
dec
jae
dec
lods
sbb
lods
jo
dec
jno
sbb
mov
icebp
sub
xor
mov
bound
ret
dec
cmp
sub
cmp
mov
insl
mov
ss
xor
into
push
push
hlt
call
xchg
adc
scas
sub
sub
pushf
vpsubw
data16
inc
lods
xchg
inc
popa
pop
jecxz
or
scas
lret
fistl
push
popa
ss
fnsave
jp
lret
lret
addr16
fstps
fisubrl
sub
jno
and
fwait
mov
fwait
xchg
jp
xchg
or
xor
fbld
pop
pop
mov
lret
and
lret
or
cmpsl
jbe
sbb
in
movsb
xchg
xchg
dec
xchg
imul
mov
and
pop
and
sti
and
mov
cmpsl
add
or
movsl
cmpsl
icebp
ds
repnz
je
imul
cmp
cmp
fidivs
and
push
and
pop
mov
pop
jl
and
mov
clc
test
bound
xor
xchg
xor
pop
mov
jnp
dec
loopne
call
inc
pop
ljmp
int
popa
into
adc
je
sub
cwtl
push
clc
xor
xchg
scas
cld
xchg
push
pop
xor
test
xchg
mov
pop
dec
subl
xchg
ret
je
pop
adc
test
push
mov
das
out
cmp
test
icebp
sub
jo
mov
testb
jo
xorl
jbe
in
jo
mov
mov
and
jo
xorl
jo
in
jo
mov
ljmp
push
sbb
push
addl
or
sub
incl
imul
xchg
addr16
add
negb
and
xchg
and
mov
lea
mov
loop
call
jbe
pop
or
or
movsl
push
mov
xor
jl
fidivrs
sbb
mov
ljmp
push
push
cli
push
icebp
adc
sub
pop
sub
add
and
dec
pop
push
dec
add
cmp
sbb
fs
cmc
add
cmpb
xchg
mov
pop
pop
loopne
xchg
jne
fidivs
fmulp
push
jl
lods
mov
inc
adc
scas
inc
out
jmp
xor
and
pop
push
fistps
push
cmc
jp
and
or
shll
jmp
das
scas
pop
xor
sahf
int3
fdivl
mov
rcll
call
mov
test
jo
clc
cmc
xlat
xchg
mulb
repz
dec
lods
pusha
out
lods
jo
dec
jno
fs
pop
xor
xor
int3
bound
push
dec
cmp
cmpb
rorb
shll
jle
xor
int
push
fsub
push
xchg
imul
xchg
adc
cmp
cs
sub
sar
into
fs
inc
adcb
or
std
or
add
fsubl
jo
ss
std
fnstsw
fcmovu
dec
sarl
lret
lret
xchg
fldenv
stos
pop
jbe
aam
inc
aad
jne
fildll
push
das
fwait
mov
xor
mov
mov
pop
pop
push
mov
lret
mov
lret
or
outsb
or
cmpsb
jbe
xchg
sbb
push
in
movsb
xchg
fimull
imul
leave
mov
and
pop
std
int
and
cld
and
jmp
adc
int3
mov
or
xchg
mov
cmp
imul
cmp
mov
fidivs
and
and
in
mov
cmpb
push
mov
clc
cmp
bound
xor
xchg
mov
xchg
pop
jle
pop
mov
ret
push
dec
loopne
call
inc
pop
or
pop
ret
test
ret
int
pop
into
adc
adc
je
jb
cwtl
push
test
pop
xchg
idiv
xchg
push
cmpsb
das
push
stc
movsl
clc
stc
mov
xchg
mov
pop
dec
subl
fcmovb
je
notl
jbe
int3
sbb
cld
icebp
mov
stos
sub
sbbl
test
imul
jno
ds
in
jo
xorb
or
in
jo
mov
cmp
in
jo
xorb
or
in
jo
mov
xor
push
push
out
push
push
hlt
push
sbbl
lcall
xor
mulb
and
popa
mov
mov
cs
mov
loope
call
fwait
add
or
movsb
push
mov
xchg
push
cmp
jl
add
sarl
pop
lret
insb
pop
push
inc
stc
push
icebp
mov
jae
sbb
sub
adc
and
dec
add
dec
sbb
cmp
sbb
arpl
nop
fs
sbb
in
addb
xchg
mov
movsb
pop
loopne
mov
ficomps
iret
fmulp
sbb
lret
lods
shlb
adc
inc
adc
scas
inc
out
jmp
xor
and
pop
leave
rcrl
inc
hlt
jp
push
or
sbb
jmp
das
testb
imul
aaa
xchg
jecxz
xchg
int3
inc
cmp
call
aam
mov
stos
dec
test
mov
xchg
mulb
lock
dec
lods
test
lods
jo
dec
jno
lods
add
push
jae
pop
xor
int3
bound
push
dec
cmp
dec
cmp
mov
mov
movb
jle
push
push
jbe
push
xchg
push
out
xchg
adc
adc
jmp
ret
xor
sar
push
fs
inc
pop
xchg
inc
popa
in
popa
or
lods
lret
fstpt
fsubl
jg
ss
fldl
fisttpll
dec
lret
lret
xchg
fldcw
lods
aam
dec
aad
cwtl
jo
cs
das
fwait
sbb
fwait
xchg
pop
xor
mov
mov
xchg
sub
pop
data16
lret
test
jbe
movsl
jbe
mov
push
movsb
inc
in
movsb
xchg
and
imul
insb
enter
mov
fs
xor
int3
pop
and
repnz
sub
adc
pop
mov
or
into
dec
repnz
in
imul
cmp
mov
fnsave
and
es
mov
mov
mov
clc
out
clc
popa
fcomps
pushf
adc
xor
xchg
test
pop
mov
or
loopne
out
inc
sti
jae
pop
movsl
fiadds
ret
lock
ret
int
pop
into
adc
adc
je
mov
xor
aas
sti
xchg
push
mov
push
stc
cmp
stc
mov
xchg
mov
int
subl
and
je
cltd
pcmpeqd
sbb
add
mov
xor
andl
test
rcrb
in
jo
mov
xchg
in
jg
in
jo
xorb
or
in
push
push
in
jo
mov
rorl
test
or
in
jo
xorb
or
in
add
in
jo
mov
jp
push
push
push
out
push
push
push
and
or
push
iret
decl
xchg
addr16
add
imul
pop
xchg
and
sub
mov
sub
mov
imul
pop
cmc
add
out
or
mov
mov
jl
fnstsw
pop
sarl
pop
lret
insb
pop
push
jecxz
push
icebp
xorl
sub
sub
and
dec
mov
jecxz
sti
push
sbb
arpl
sahf
fs
push
popl
mov
mov
loopne
and
fidivrs
jle
lods
inc
scas
adc
adc
scas
inc
out
call
xor
pop
cmp
rcrb
mov
jp
mov
or
popa
and
mov
xorl
lret
fdivl
shll
xchg
and
cmp
call
sbb
mov
push
dec
test
add
clc
cmc
jb
mulb
inc
inc
dec
lods
lock
lods
jo
inc
jno
hlt
add
xor
mov
bound
mov
fstpl
rcr
shll
push
inc
xor
lret
push
push
aas
ljmp
lea
adc
mov
sub
sub
pop
ret
sar
pop
gs
inc
aad
inc
popa
jl
popa
or
or
xchg
lods
lret
fistl
fsubl
jle
ss
fisttpll
js
lret
lret
gs
fxtract
and
stos
xor
add
ficomps
jo
fwait
lock
add
xchg
or
scas
mov
jns
pop
pop
scas
mov
lret
sub
lret
or
outsb
or
movsl
jbe
jbe
push
movsb
mov
aaa
xchg
imul
insb
enter
mov
and
pop
push
std
and
jg
adc
inc
mov
or
push
dec
repnz
std
xor
cwtl
cmpsb
je
cmpsl
cmp
fdivl
and
fbstp
in
jp
and
ja
clc
mov
fwait
bound
adc
sub
fdiv
mov
loopne
out
inc
inc
jae
pop
ljmp
int
pop
into
adc
outsl
adc
je
add
cwtl
push
or
pop
xchg
xchg
xchg
push
imul
stc
and
mov
in
subl
push
je
lcall
mov
lock
cmp
test
cltd
sbb
jo
xchg
into
add
arpl
test
sbb
in
jo
xchg
fwait
or
in
push
jno
mov
test
dec
push
in
jo
xchg
ret
push
sub
push
jbe
push
andl
or
push
iret
pushl
imul
xor
add
divb
and
ret
mov
mov
mov
loopne
call
jo
pop
or
cli
or
mov
mov
jl
fdivrl
push
sarl
pop
lret
insl
pop
push
adc
push
icebp
dec
mov
jb
mov
stos
add
and
dec
out
dec
subb
aam
cld
arpl
fs
mov
popl
mov
imul
imul
cmp
fmulp
fbstp
lods
andb
je
adc
lods
inc
out
xlat
out
cmpsl
xorb
mov
test
and
cmp
rcrb
fdiv
jp
cli
sbb
lea
call
cmp
xor
push
lret
cwtl
jno
xchg
inc
rcll
call
mov
testl
mulb
xchg
lods
cmp
lods
jo
inc
jno
cmp
mov
fsubs
pop
xor
mov
bound
ljmp
xchg
inc
cmp
pop
imul
fmul
push
push
in
push
xchg
fsubr
xchg
adc
adc
dec
lods
sub
ret
cmpsb
cli
inc
rcll
or
stos
lret
fsubl
jle
ss
sti
ss
dec
je
dec
lret
lret
fs
fnstcw
fisubrl
dec
dec
aad
xor
jo
fwait
hlt
leave
fwait
xchg
lcall
mov
lods
mov
sti
sub
pop
divb
lret
or
insb
or
movsb
jbe
cmp
ljmp
add
insb
enter
mov
bound
pop
ljmp
adc
test
sub
or
or
add
std
lret
mov
xchg
testb
in
cmpsl
cmp
inc
cmp
test
pop
and
or
js
in
jae
and
sub
clc
popa
ds
bound
xor
xchg
loopne
xchg
pop
push
sub
aad
mov
loopne
in
inc
fdivrs
pop
push
fldl
ret
adc
stos
je
adc
cwtl
push
lods
aaa
pop
xchg
lcall
stc
xchg
jmp
mov
repz
jge
subl
ljmp
push
lock
xchg
out
mov
fbld
out
mov
test
inc
sbb
jo
xchg
dec
push
test
cwtl
adc
jo
xorl
or
test
gs
insl
adcl
stc
jle
adc
repnz
aas
outsl
xor
in
ja
sbb
xchg
mov
lcall
imul
adc
in
pushf
outsl
rclb
xor
and
andb
xor
jbe
adc
and
arpl
pop
adc
push
sarl
sub
jb
test
psrlq
repz
and
pop
lret
inc
and
loop
mov
add
testb
orb
xchg
mov
adc
xor
pop
fimull
icebp
cmpsb
inc
push
lods
fnstcw
and
inc
icebp
fisubl
xchg
jno
test
repnz
out
scas
movsb
push
ja
pop
sub
mov
sbb
incl
call
jne
mov
int
xor
lahf
leave
fdivl
sbb
aaa
xchg
mov
xor
call
push
xorb
outsl
sbb
mulb
das
pop
dec
lods
jg
lods
jo
cmp
jnp
mov
daa
pop
xor
xor
leave
bound
xor
aam
xchg
or
xchg
shrb
shll
sahf
dec
xor
lret
cld
jmp
xchg
sbb
adc
pop
lods
cs
sub
test
stc
jmp
cli
inc
xchg
xchg
inc
popa
mov
popa
or
sti
or
pop
mov
popf
popa
mov
test
fstl
rcr
dec
repz
lret
mov
test
fisubrl
sahf
inc
aad
bound
mov
fwait
rcr
xchg
loop
xchg
or
or
inc
movsl
mov
lods
adc
div
sbb
or
ljmp
lods
mov
shrb
gs
jnp
in
pop
add
sub
xor
mov
jno
jge
stos
add
outsb
shlb
andl
rcrb
jmp
add
push
popa
not
and
ret
xor
pop
mov
fdiv
sub
push
and
push
mov
lret
or
clc
adc
xchg
add
hlt
adc
call
inc
popa
icebp
dec
shll
imulb
push
jecxz
dec
loopne
in
inc
sarl
pop
aas
ss
ret
ret
int
pop
into
adc
adc
je
push
fsts
jns
xchg
pop
mov
adc
out
adc
dec
cs
dec
jg
dec
subl
cli
je
cmpsl
or
push
mov
out
mov
lret
and
cmp
test
pop
sbb
jno
pop
or
repz
pop
or
lock
pop
or
in
test
push
or
ljmp
push
aad
push
push
mov
push
cmpl
iret
jmp
add
cltd
xor
xor
lret
mov
lock
inc
dec
and
loop
mov
inc
push
imul
icebp
or
mov
mov
jl
sarl
adc
ror
pop
lret
arpl
push
notl
icebp
test
mov
cmp
and
jae
mov
insb
dec
dec
cmp
cmp
sbb
arpl
xchg
fs
ds
in
andb
xchg
mov
rclb
xor
js
ficomps
lret
lods
sbb
add
adc
stos
inc
out
fsubp
xor
test
test
sbb
mov
icebp
jp
mov
or
cmp
jmp
das
push
dec
xor
loopne
fdivl
pop
jne
xchg
pop
rclb
call
hlt
xorl
cmc
test
cmpsl
dec
sbb
lods
enter
imul
int3
or
xor
leave
bound
jge
cmp
push
aaa
xchg
shlb
imul
push
inc
jmp
xchg
gs
xchg
adc
adc
movsl
stos
sub
sub
cmp
push
inc
ficoms
popa
or
or
imul
pusha
shll
loop
frstor
fisttpll
dec
lret
lret
arpl
stos
xchg
jb
aam
inc
aad
stos
insl
fildll
shlb
fcmovnb
fwait
xchg
sub
or
movsb
mov
add
pop
pop
xchg
lret
or
or
mov
push
movsb
imul
xchg
imul
leave
mov
xor
leave
pop
and
clc
and
dec
mov
add
or
ret
or
out
aas
repnz
aad
imul
xor
mov
shlb
and
es
mov
in
mov
mov
bound
xor
xchg
pop
out
pop
mov
sub
loopne
in
inc
sbb
pop
scas
fildl
ret
adc
into
adc
test
cwtl
push
cmp
lock
push
push
sub
stc
pop
in
stc
mov
xchg
mov
mov
sbb
je
je
out
or
push
xor
push
mov
mov
adc
out
inc
jle
in
mov
test
cmpsb
or
cmp
test
es
jo
test
mov
sbb
jo
test
popf
or
xor
push
push
sbb
out
push
addl
or
sbb
ljmp
add
cwtl
xor
testb
and
mov
lock
inc
xchg
and
sub
mov
mov
pop
or
icebp
or
mov
mov
jl
sarb
adc
mov
push
pop
lret
bound
pop
notb
icebp
icebp
scas
icebp
jb
mov
orl
and
mov
dec
dec
addb
fistpl
cld
arpl
fs
xchg
in
sub
adcl
sbb
xor
xor
fs
fmulp
mov
lret
lods
popa
arpl
inc
cs
inc
out
fucom
xor
jle
test
cmp
rcrl
mov
jp
rclb
or
andl
xor
sub
fdivl
mov
iret
xchg
int3
test
int
or
mov
xorl
cmc
icebp
mulb
pusha
aas
dec
lods
adc
lods
jo
inc
jno
adc
mov
xlat
and
xor
enter
cli
scas
cmp
inc
cmp
fwait
ss
sar
sub
mov
push
xor
leave
push
push
mov
push
xchg
lods
jmp
adc
stos
sub
sub
test
sar
jle
cli
inc
es
inc
popa
dec
fbld
cltd
stc
or
mov
lret
fistpl
fsubl
je
ss
jne
lret
lret
bound
stos
fnstenv
aam
inc
aad
repnz
fildll
sbb
fwait
and
fwait
xchg
jb
xchg
or
sub
mov
dec
es
pop
into
mov
lret
pop
hlt
lret
or
mov
push
movsb
mov
movsb
xchg
mov
imul
insb
enter
mov
xor
enter
mull
xchg
mov
add
or
mov
repnz
sbb
add
cmp
cmp
pusha
dec
mov
es
filds
in
ja
and
jge
clc
add
nop
bound
xor
xchg
mov
sub
mov
jae
dec
loopne
jecxz
inc
arpl
pop
neg
pop
ret
pop
lahf
ret
int
pop
into
adc
adc
je
and
push
test
pop
xchg
cmpsl
out
xchg
push
sub
mov
xchg
mov
add
sbb
je
je
aaa
or
push
jl
push
mov
in
and
orl
in
jo
test
out
or
addl
outsb
sbb
jo
test
call
sbb
jo
test
in
test
push
test
loop
push
push
gs
push
inc
out
push
orl
into
dec
sbb
pushl
addr16
xor
push
leave
mulb
push
mov
lock
lock
mov
and
jb
mov
roll
pop
push
add
dec
lock
mov
mov
jl
sarl
adc
mov
lahf
push
lret
popa
pop
push
cmpsb
cmc
push
icebp
cmp
jae
lret
or
add
dec
orb
arpl
in
into
sti
in
xorb
xchg
mov
pusha
push
loopne
mov
fisubrs
lret
lods
test
inc
adc
stos
inc
out
fsub
xor
xor
sbb
pop
dec
rcrb
std
out
jp
sbb
or
leave
and
mov
xorb
fdivl
jmp
aaa
xchg
xchg
into
xchg
int3
lock
push
fs
test
sbb
cmc
cmp
cmpsl
dec
test
dec
lods
pop
loop
jo
inc
jno
pop
or
xor
scas
xor
bound
or
rcrb
rolb
shll
jbe
xor
enter
jmp
xchg
adc
sub
cs
lds
ror
mov
cli
inc
outsb
xchg
inc
popa
xchg
fisubs
loope
or
sti
mov
fsubl
jae
ss
ss
int
dec
lret
je
lret
lret
popa
xchg
fstps
stos
and
aam
inc
aad
cmp
bound
fwait
imul
xchg
mov
sub
mov
xchg
and
pop
lret
movsl
repz
or
bound
jbe
mov
push
movsb
stc
out
xchg
sarb
xchg
imul
leave
mov
pop
xor
xor
enter
mulb
fidivrl
add
or
or
jle
repnz
cmp
adc
cmpsl
cmp
cmp
test
mov
sub
xchg
jbe
and
and
dec
mov
bound
xor
xchg
add
pop
mov
mov
jecxz
inc
stos
ja
pop
aas
fiaddl
ret
mov
pop
into
adc
adc
je
push
cwtl
push
int
pop
xchg
out
out
xchg
push
scas
sub
jmp
nop
mov
dec
dec
subl
rol
je
jg
jbe
les
mov
in
mov
mov
jl
in
xor
in
jo
xorl
or
lret
xorl
or
enter
xor
test
mov
in
jo
xorl
or
ret
push
sub
push
push
lods
ljmp
xchg
in
or
sbb
mov
xchg
xor
negb
and
sub
mov
and
mov
add
pop
fwait
lcall
xchg
out
or
lahf
push
mov
jl
cmp
jl
bound
sarl
push
lret
pusha
pop
push
out
hlt
push
icebp
subl
sub
xchg
ret
dec
mov
dec
adc
cmp
pop
cld
arpl
in
cmpb
xchg
add
sub
xor
jbe
fdivp
lret
inc
jne
lods
icebp
popa
scas
adc
inc
adc
test
out
push
jge
test
enter
sbb
pop
nop
rcrl
inc
out
jp
bound
or
adc
mov
jg
das
out
dec
xor
mov
jae
xchg
xchg
int3
cmp
int
cwtl
arpl
mov
jg
test
dec
test
mov
clc
cmc
orl
dec
lods
mov
inc
jno
movsb
pop
mov
addr16
xor
bound
push
inc
cmp
sub
shll
mov
push
push
sbb
push
xchg
cmp
sub
jge,pn
cs
les
rcll
push
inc
popa
fstp
popa
or
clc
or
inc
mov
fsubl
jb
ss
int
dec
adc
mov
popa
xchg
fldenv
lods
aam
inc
aad
subb
stos
jne
fwait
mov
fwait
xchg
add
xchg
or
or
addr16
fsubl
pop
pop
mov
lret
in
repnz
or
bound
jbe
mov
push
movsb
inc
out
xchg
sbb
xchg
imul
enter
mov
pop
xor
pop
and
cmc
and
and
add
or
rorl
ljmp
mov
lods
cmp
pop
add
cmp
cmp
lock
mov
es
es
mov
in
xchg
jnp
clc
xchg
mov
popa
rorb
pushf
adc
xor
xchg
dec
test
pop
mov
add
data16
inc
repz
pop
xchg
pop
ret
call
pop
into
adc
adc
je
mov
cwtl
push
adc
out
xchg
push
imulb
push
stc
xor
stc
mov
mov
xchg
dec
subl
sbb
je
or
or
push
mov
mov
jmp
out
push
jl
in
jns
in
jo
xorl
pop
test
add
in
jo
xorl
pop
test
sbb
jo
xorl
pop
test
sti
sbb
jo
xorl
pop
test
clc
sbb
jo
xorl
pop
push
push
cmc
jmp
push
sbb
or
sbb
incl
xor
xor
in
mulb
scas
mov
lock
lock
inc
mov
fdivl
pop
jecxz
pop
or
out
or
sahf
push
mov
les
jl
sarb
adc
mov
das
push
lret
pusha
pop
push
ss
push
icebp
leave
lods
icebp
jb
xchg
pop
or
xchg
mov
dec
sbbb
arpl
xchg
fs
pop
cli
in
add
adcl
lock
loopne
sbb
fidivrs
fmulp
je
lods
cmp
adc
adc
test
out
pushf
jl
test
test
xchg
cmp
rcrb
out
jp
stos
adc
lret
lahf
call
fdivrl
das
ss
xor
add
fdivl
jnp
aaa
xchg
daa
int
int3
subb
mov
jg
test
dec
test
clc
sbb
cmc
leave
mulb
cmp
lods
jo
inc
jno
in
push
mov
scas
and
xor
lods
xor
bound
popf
inc
cmp
jae
xchg
rcl
sub
mov
data16
push
dec
xor
push
push
fs
xchg
adc
test
sub
sub
pop
mov
cli
inc
decb
popa
or
or
mov
fsubl
jno
ss
fldl
jae
lret
lret
pusha
xchg
fldlg2
fisubrl
stc
inc
aad
lret
bnd
fwait
sti
les
or
mov
pop
pop
cmpsb
mov
lret
xor
popa
or
lahf
jbe
sbb
out
xchg
bound
xchg
imul
leave
mov
xor
and
pop
fwait
pop
and
cmc
and
push
adc
sbb
or
push
cmp
mov
xchg
movsl
add
cmp
iret
mov
cmp
mov
and
mov
mov
in
fnstcw
clc
fnsave
bound
xor
xchg
xchg
test
pop
push
sub
xchg
mov
loopne
loope
inc
cmp
pop
iret
fadds
ret
xor
into
adc
cmpsb
je
cli
or
xchg
jg
xchg
push
sub
jns
stc
mov
mov
fldl
cs
push
das
je
les
or
push
or
push
jmp
in
pop
out
data16
in
rcrl
jo
xorb
push
test
dec
sbb
jo
xorb
push
test
inc
sbb
jo
xorb
push
test
inc
sbb
jo
xorb
push
test
inc
sbb
jo
xorb
push
push
push
cmp
in
push
andl
or
sbb
decl
addr16
xchg
addr16
cld
xor
sub
mulb
testb
mov
test
mov
pop
sub
pop
or
out
or
sahf
push
mov
or
cmp
jl
repnz
mov
ja
lret
pop
pop
push
jle
push
icebp
adc
sub
shll
aam
dec
andb
sti
adc
fs
cmpsb
stc
in
orb
xchg
mov
cmp
xor
xor
test
fmulp
xlat
jae
lods
andl
inc
dec
test
out
xor
jnp
test
cmp
rcrb
aad
jp
repnz
lea
lahf
call
and
mov
jle
xor
dec
ret
jno
xchg
outsl
int3
xchg
int3
enter
sub
mov
jle
test
test
inc
sbb
cmc
adc
cmpsl
dec
cmpb
xor
lods
jo
inc
jno
xor
mov
mull
pop
xor
lods
xor
lds
mov
scas
cmp
inc
cmp
mov
sub
mov
data16
dec
dec
xor
push
push
lods
out
xchg
int
xchg
adc
sub
cs
ret
sub
movsl
mov
cli
inc
inc
popl
insl
fsubl
mov
sahf
lret
fstpt
fsubl
jno
ss
divb
lret
fisttpll
dec
lret
lret
pop
xchg
fnstenv
fisubrl
inc
inc
aad
adc
cmp
inc
les
or
sub
mull
pop
pop
out
mov
lret
jge
lret
or
lahf
jbe
or
shl
movsb
xchg
stos
cmp
enter
mov
pop
xor
and
pop
jecxz
pop
and
hlt
and
mov
adc
arpl
or
push
cmp
mov
cmp
call
cmp
cmp
mov
into
mov
orb
cld
push
and
add
imul
and
lea
aaa
negl
fldenv
pop
mov
xchg
push
dec
loopne
loopne
inc
xorl
pop
fadds
ret
js
ret
int
pop
into
adc
bound
je
cmpsb
je
inc
or
xchg
in
xchg
push
xchg
push
stc
shr
mov
mov
fcoml
je
push
or
pushf
or
pushf
ljmp
scas
jp
in
or
in
jo
xorl
xchg
sbb
jo
xorl
mov
in
jo
xorl
mov
in
jo
xorl
mov
in
jo
xorl
test
push
push
addr16
push
subl
into
push
arpl
ficoms
push
cld
xor
je
mulb
mov
lock
mov
push
inc
mov
fidivl
pop
jae
pop
or
or
popf
push
mov
push
dec
cmp
jl
cmp
sarl
push
lret
pop
pop
push
repnz
icebp
pop
stos
icebp
jb
xchg
jmp
sub
imul
mov
mov
dec
subb
arpl
in
out
clc
in
adcb
xchg
fstl
mov
xor
enter
jae
lods
leave
pop
scas
adc
inc
out
xor
xor
sbb
pop
push
in
jp
cmp
or
jmp
jge
das
dec
xor
nop
fdivl
or
xchg
mov
xchg
int3
adc
mov
jge
test
sbb
cmc
pop
mov
cmpsb
lret
mov
lods
js
lods
jo
inc
jno
jl
mov
aas
and
xor
xor
les
cld
imulb
sahf
js
sahf
xchg
add
xchg
shlb
shll
xchg
inc
xor
lds
hlt
out
xchg
adc
sub
cs
cmpsl
cs
ret
in
mov
cli
inc
mov
popa
or
testb
sbb
fsubl
jo
ss
cmc
fstl
lret
fisttpll
dec
lret
lret
pop
xchg
fnstcw
stos
inc
outsb
lods
aam
inc
aad
pop
imul
fwait
mov
fwait
xchg
fisubrl
xchg
or
or
aas
mov
pop
pop
ss
lret
or
pusha
or
sahf
jbe
lods
or
sbb
movsb
xchg
repnz
enter
mov
pop
xor
xor
lds
int3
repz
cli
mov
add
or
pushf
cmpsl
icebp
sahf
cmp
mov
test
imul
sub
mov
into
mov
enter
inc
push
and
dec
mov
fildll
in
imul
popa
test
bound
xor
xchg
and
pop
mov
fistl
loopne
loopne
inc
lret
je
pop
pop
xlat
pop
ret
rcrb
adc
bound
je
movsl
je
mov
cwtl
push
in
sub
paddsb
stc
or
stc
mov
lea
cs
das
je
ret
lahf
or
in
push
mov
jmp
out
idivb
in
push
sbb
jo
xorb
add
in
jo
xorb
add
in
jo
xorb
add
in
jo
xorb
add
in
jo
xorb
add
push
push
scas
jmp
xorl
iret
fsubl
addr16
xor
xor
mov
mov
lock
mov
mov
inc
inc
push
inc
mov
fnstenv
pop
mov
in
or
pushf
push
mov
pushf
dec
cmp
jl
adcb
mov
pop
push
lret
pop
pop
push
push
repnz
icebp
mov
test
xor
sub
mov
and
dec
fs
dec
xor
cmp
adc
arpl
in
sbbb
xchg
mov
enter
repz
ficoms
fmulp
addr16
lods
adc
adc
inc
adc
cmpsb
inc
out
xor
test
test
pop
sbb
pop
mov
pop
jp
in
jp
orb
lea
and
mov
jl
das
push
dec
xor
fadd
fdivl
push
jo
xchg
dec
xchg
int3
pop
sub
call
in
jl
test
inc
test
rcrb
clc
cmc
mov
mov
lods
rcr
jo
inc
jno
les
push
xchg
pop
xor
les
inc
imulb
sahf
ror
xchg
dec
xor
mov
inc
xor
les
cmp
push
xchg
pop
out
adc
adc
popf
cmpsb
sub
ret
xor
gs
inc
lea
std
fisubl
dec
cmc
or
arpl
fsubl
outsl
popa
ss
fstpl
fisttpll
dec
lret
lret
pop
xchg
fld
and
stos
mov
aam
aas
aad
mov
jb
fwait
rol
fwait
xchg
and
xchg
or
lahf
mov
cld
and
pop
jle
pop
lret
or
pop
or
popf
jbe
cmc
or
popa
in
xchg
cmp
xchg
imul
enter
xor
les
adc
and
inc
mov
add
or
mov
cmpsl
icebp
out
repnz
int
imul
sub
mov
int
mov
mov
es
mov
fcomip
mov
in
mov
and
mov
clc
popa
lock
cmc
pushf
adc
xor
xchg
imul
mov
loopne
fnstsw
inc
adc
cmpsl
pop
ret
or
into
adc
movsb
je
rolb
cwtl
push
xor
jmp
push
push
daa
push
stc
push
call
mov
mov
subl
cmp
je
out
jbe
sub
push
mov
mov
or
test
cltd
pop
in
jo
xorb
add
in
and
in
jo
xorb
add
in
push
pop
in
jo
xorb
add
in
sbb
in
jo
xorb
add
in
sbb
in
jo
xorb
add
push
adc
ljmp
clc
push
iret
jmp
add
xchg
xor
testb
lock
mov
mov
inc
mov
fnstenv
pop
add
pop
or
jmp
push
in
fwait
push
mov
in
cmp
jl
lret
mov
dec
push
lret
pop
pop
push
push
icebp
push
icebp
jmp
test
jnp
sub
sti
mov
mov
lods
dec
dec
cmpb
sti
rcll
cld
arpl
fs
jle
in
and
adcl
adc
xor
jae
ficomps
lret
lret
lods
pop
pop
scas
adc
inc
cmpsb
inc
out
fsub
xor
test
cmpsb
pop
cmp
int
jp
jmp
or
or
call
cld
jnp
das
push
inc
xor
and
fdivl
fwait
outsl
aaa
xchg
inc
lret
mov
pusha
jmp
test
test
sbb
clc
cmc
jmp
mov
lods
or
lods
jo
aas
jno
or
mov
iret
and
xor
test
bound
mov
into
sahf
xchg
xchg
xor
ljmp
push
pop
les
test
push
xchg
movsl
out
adc
movsl
sub
sub
jge
sar
jbe
cli
inc
push
lea
inc
fisubl
xchg
hlt
or
stos
pushf
lret
fistl
fsubl
outsl
popa
ss
frstor
jo
lret
lret
pop
xchg
fisubrl
sbb
aad
ljmp
fwait
sbb
fwait
xchg
push
xchg
or
sub
iret
sahf
mov
inc
and
pop
mov
lret
push
out
lret
or
popf
jbe
cmp
jecxz
xchg
xorb
imul
insb
enter
mov
and
pop
mov
repnz
mov
add
or
fwait
cmpsl
icebp
cs
mov
adc
std
xchg
cmpsb
mov
cmpsl
cmp
int3
mov
pop
dec
mov
fidivl
inc
jb
and
ja
clc
std
mov
popa
cmp
pushf
adc
adc
daa
pop
mov
imul
into
fsubp
inc
pop
jae
pop
out
aad
ret
push
lcall
iret
pusha
adc
je
sbb
cwtl
push
jge
pop
xchg
lahf
ljmp
cltd
out
mov
mov
cs
das
je
shll
jbe
je
push
mov
in
sbb
addl
in
jo
jg
and
test
imul
jno
jecxz
test
pushw
in
jo
jg
and
test
arpl
in
jo
jg
sbb
test
pusha
push
in
jo
jg
push
fiaddl
push
push
pop
out
push
aas
ljmp
inc
push
iret
ljmp
addr16
addr16
stc
xor
dec
mulb
push
mov
lock
inc
rcrb
mov
fdivs
pop
dec
sti
pop
or
or
fwait
push
mov
sub
cmp
jl
adc
sarl
push
lret
pop
pop
push
sahf
lock
icebp
xor
jae
ret
add
and
dec
hlt
dec
dec
addb
arpl
in
imul
subb
xchg
mov
pop
push
loopne
xorl
movsb
fmulp
divl
lods
mov
inc
adc
movsl
inc
out
xlat
out
add
xor
push
cmp
int
jp
ljmp
xor
mov
jnp
das
sahf
inc
xor
push
outsb
aaa
xchg
call
pop
jmp
test
pop
clc
cmc
xor
cmpsl
dec
mov
push
add
xor
test
bound
add
int
xchg
xchg
sarb
shll
outsb
inc
xor
ret
push
push
int3
in
xchg
in
in
adc
adc
sub
shrb
lds
cli
inc
data16
fldenv
fpatan
or
repz
lret
fistpl
outsb
popa
ss
ss
enter
outsl
dec
lret
lret
pop
xchg
fsts
stos
sbb
popa
ds
xor
cs
jno
fwait
arpl
fwait
xchg
mov
xchg
or
sub
pop
sahf
mov
mov
pop
pop
push
mov
lret
popf
out
lret
or
pop
or
pushf
jbe
test
push
movsb
icebp
loop
xchg
lret
imul
enter
xor
and
pop
add
pop
and
icebp
and
shlb
add
or
or
jbe
repnz
pop
xor
xchg
cmpsb
aam
cmpsl
cmp
cmp
mov
int3
mov
mov
push
and
and
mov
and
and
inc
mov
popa
orb
adc
movsb
xchg
pop
outsb
es
mov
mov
dec
loopne
fsubp
inc
mov
aad
ret
cwtl
cltd
ret
int
push
into
adc
pusha
adc
je
bound
cwtl
push
lds
pop
xchg
out
xchg
push
cmpsb
and
stc
mov
mov
cs
adc
je
shlb
jbe
mov
out
in
sbb
or
test
sub
in
jo
jle
subl
test
mov
in
jo
jle
subl
test
scas
adc
jno
sub
test
stos
adc
jno
and
adc
jno
and
push
push
movsl
in
push
xchg
push
orl
iret
pushl
xor
notb
and
and
inc
sbb
mov
xlat
mov
adc
push
or
lcall
je
cmp
jl
pop
push
sarl
push
lret
pop
pop
push
out
push
icebp
jns
icebp
jb
xorl
add
and
dec
cmp
dec
or
cmp
adc
arpl
in
xorb
xchg
std
adc
fbld
jno
fsubrp
aas
jo
lods
jmp
aas
adc
movsb
inc
out
xlat
out
dec
js
test
ret
test
ss
cmp
int3
pop
jp
ljmp
jnp
call
mov
das
out
xor
mov
fdivl
sub
xchg
xlat
enter
sub
call
les
test
inc
test
test
clc
cmc
jns
mulb
call
fsubrl
pushf
add
xor
xor
ret
sbb
scas
cmp
cmp
and
xchg
rolb
bound
push
xchg
ret
adc
push
xchg
xor
adc
jne
cs
mov
sar
push
arpl
inc
scas
mov
aad
popa
or
repz
cmp
fsubl
insl
popa
ss
fnsave
enter
outsl
dec
lret
lret
pop
xchg
fstps
lods
aam
cmp
fildll
mov
rcrb
data16
or
pop
popf
mov
aam
pop
pop
push
mov
lret
in
lret
or
pop
or
fwait
jbe
int
push
movsb
cmp
movsb
xchg
adc
xchg
imul
enter
mov
pop
xor
ret
in
lock
sbb
add
or
cltd
cmpsl
icebp
mov
andl
push
cld
xchg
cmpsb
sbb
cmpsl
cmp
cmp
call
dec
and
push
es
mov
in
jo
and
mov
popa
enter
lahf
repz
adc
adc
and
mov
loopne
fucom
inc
jmp
inc
pop
jg
pop
ret
loopne
ret
int
push
into
adc
adc
je
stos
add
pop
xchg
das
jmp
push
stc
sub
stc
mov
mov
cs
adc
je
shlb
jbe
add
push
mov
mov
jecxz
out
push
ja
in
jno
in
jo
jle
xorl
in
stc
adc
jo
jle
xorl
in
notb
xorl
in
repz
jo
jle
subl
in
lock
jo
jle
push
push
push
push
in
in
push
iret
call
or
pop
mov
sbb
add
xchg
addr16
jge
xor
fadd
mulb
mov
mov
mov
inc
jo
mov
pop
push
enter
push
lds
mov
jl
lret
jl
sub
push
ror
push
lret
pop
pop
es
push
icebp
shll
jmp
add
and
sbb
dec
adcb
sti
cmp
cld
mov
push
cmc
in
cmpb
xchg
mov
fs
loopne
in
mov
and
fmulp
test
lods
xor
adc
adc
xchg
imul
xor
jae
ds
test
cli
xor
ror
jp
int
or
mov
jmp
cs
jecxz
aaa
imul
mov
sub
call
push
jp
test
imul
adc
mov
das
xchg
lods
cwtl
fldt
popf
add
xor
jecxz
scas
cwtl
repz
cmp
sbb
sahf
xchg
testl
mov
pop
inc
xor
inc
sub
jge
push
xchg
jge
xchg
adc
cli
adc
mov
sbb
rcll
sar
iret
std
sbb
pop
cmpsb
loope
imul
lret
fucomi
incl
ret
lret
insb
popa
ss
icebp
fnstsw
fisttpll
dec
lret
lret
pop
xchg
fldenv
fisubrl
mov
aad
ret
cs
insb
das
fwait
xor
bound
or
pushf
mov
sbb
pop
pop
sahf
scas
pop
lret
sub
mov
jbe
push
stc
push
movsb
and
xchg
imul
push
cld
sub
xor
pop
xor
rcrl
lock
bound
add
or
test
icebp
push
cmp
std
mov
xor
sub
mov
lret
xor
and
dec
fbld
jo
and
jne
clc
aad
clc
popa
pop
in
popf
lods
sahf
fstl
dec
sub
mov
fisubs
mov
arpl
loopne
fmul
inc
sbb
pop
out
shll
ret
or
out
adc
mov
mov
xchg
push
call
jne
push
in
mov
mov
cs
adc
je
mov
push
pop
push
inc
mov
in
sbb
fidivl
in
cmp
jge
cmpl
add
lds
subl
std
jo
jge
cmpl
add
jo
jge
xorl
jo
jge
push
mov
push
push
xor
push
push
push
call
or
adc
incl
add
nop
ja
scas
mull
divb
out
insb
xchg
mov
or
sbb
mov
mov
stc
pop
or
or
cltd
push
mov
push
dec
cmp
jle
call
push
ror
jg
ficompl
pop
pop
push
jbe
push
icebp
or
jae
fwait
add
shll
dec
sbbb
repz
arpl
fs
sahf
hlt
in
addb
xchg
mov
xor
xor
xor
jl
fmulp
iret
outsb
lret
lods
jns
scas
adc
inc
inc
mov
out
fdivl
test
cmp
adc
pop
sbb
pop
jp
call
or
cltd
sbb
mov
jbe
xor
inc
rcr
mov
xchg
int3
shlb
call
push
jns
test
test
cmp
mulb
js
dec
lods
sub
lods
jo
cmp
lea
mov
out
sbb
xor
shlb
repnz
cmp
cmp
mov
xchg
rclb
and
mov
popa
mov
inc
inc
xor
rcll
loop
xchg
adc
and
cs
mov
sar
xchg
popa
cli
inc
aas
mov
dec
xlat
popa
or
cltd
lret
fsubl
insb
popa
ss
icebp
ss
fisttpll
dec
lret
lret
pop
xchg
fldcw
fisubrl
cmp
xor
fwait
cmp
xchg
or
and
mov
fs
pop
pop
out
pop
lret
jne
lret
or
lcall
leave
loopne
xchg
mov
and
sti
enter
xor
pop
xor
rcrb
out
and
stos
mov
add
pop
xchg
sub
dec
mov
cmpsl
icebp
dec
aaa
repnz
xor
cli
xchg
cmpsb
lods
daa
cmpsl
cmp
cmp
js
mov
es
mov
fistps
in
outsl
in
sbb
clc
sbb
mov
das
repnz
adc
mov
pop
mov
mov
loopne
fneni(8087
inc
jnp
inc
pop
psrlq
ret
jo
ret
int
push
into
adc
pop
adc
je
cmp
push
popf
daa
pop
xchg
mov
and
mov
mov
cs
das
je
mov
jbe
xchg
add
mov
jae
out
cmpsb
jne
in
add
addl
test
mov
in
jo
jl
addl
test
xchg
in
jo
jl
addl
test
adcl
jo
jl
cmp
test
adcb
jo
jl
push
cli
add
jecxz
push
pop
out
andl
into
pusha
adc
decl
xor
imulb
and
xchg
lock
mov
mov
mov
sbb
mov
mov
jmp
push
or
or
cwtl
push
mov
or
cmp
mov
jl
inc
or
aas
jno
ror
dec
lret
pop
pop
push
pop
in
push
jno
cmpsb
icebp
jb
xorb
add
sbb
dec
andb
arpl
fs
scas
repnz
add
adcl
add
cmpsl
outsl
xor
push
ret
pop
outsb
lret
lods
rcrl
lods
cmp
inc
out
fsub
xor
test
push
adc
pop
pusha
lret
adc
push
or
adc
mov
jns
scas
lahf
dec
xor
js
fdivl
cmpsl
les
call
shlb
popl
ja
sbb
cmc
add
cmpsl
dec
test
dec
sub
lods
jo
jno,pt
je
mov
aaa
sbb
xor
mov
scas
cmp
rcrb
fsubrl
shll
mov
push
outsl
rclb
loope
xchg
or
xchg
adc
mov
sub
in
sar
fisubs
inc
xchg
popa
or
repnz
xchg
lret
fldt
addr16
mov
fisttpll
dec
lret
lret
pop
nop
fnstcw
fisubrl
cmpl
fildll
jp
das
fwait
cmpl
or
or
aaa
fwait
mov
lods
sbb
pop
lret
mov
pop
or
lcall
adc
movsb
xchg
ljmp
enter
mov
xor
xor
rcrb
out
and
repnz
add
and
or
xchg
repnz
je
imul
cmpsl
cmp
cmp
rolb
xor
mov
fbld
in
popa
je
clc
gs
popa
test
repnz
adc
sub
xchg
sbb
pop
mov
fimull
loopne
fsub
inc
ret
outsl
inc
pop
push
rolb
ret
mov
push
iret
adc
pop
adc
je
addb
push
in
pop
xchg
pop
out
push
and
loopne
mov
mov
cs
das
je
mov
ja
aad
push
mov
mov
mov
je
in
dec
adc
jo
jnp
addl
in
rcll
in
jo
jnp
orl
in
into
adc
jo
jnp
addl
in
fistl
in
jo
jnp
addl
in
enter
fidivrl
push
dec
add
push
in
push
push
cmpsl
out
subl
iret
call
pop
add
mov
jle
xor
mov
mulb
jle
and
inc
mov
mov
inc
xor
mov
xor
push
or
xchg
push
mov
les
jl
enter
or
mov
decl
pop
hlt
pop
pop
push
jmpw
cltd
movsl
icebp
jb
xorb
add
push
mov
sub
dec
sub
cmp
paddb
mov
repz
sbbb
mov
sub
xor
outsb
xor
or
fmulp
enter
pop
scas
adc
cmp
inc
mov
out
inc
je
test
test
push
adc
pop
andb
jne
jp
jp
or
inc
mov
mov
ja
das
push
inc
xor
sarb
ss
pop
rclb
mov
jmp
test
test
enter
cltd
xchg
cmpsb
fwait
push
cmpsb
dec
mov
dec
lods
mov
cmp
hlt
arpl
fwait
movsl
xor
mov
scas
cmp
leave
sahf
xchg
inc
sub
shlb
inc
xor
mov
push
xchg
jnp
xchg
adc
adc
xchg
mov
sub
repz
stc
es
cli
inc
into
mov
jge
pusha
or
or
pop
cwtl
lret
fildl
pop
fsubl
enter
out
fstl
fisttpll
dec
lret
leave
nop
imul
subl
ficoms
insl
das
fwait
lret
mov
xchg
or
or
push
hlt
sbb
pop
mov
pop
lret
daa
jmp
or
or
cwtl
jbe
std
lods
push
movsb
dec
fbld
test
insb
enter
mov
xor
mov
jbe
jg
inc
add
jmp
sub
sbb
xchg
cmpsl
icebp
xlat
xor
xchg
imul
xchg
jne
fsubs
add
lds
jmp
push
es
scas
je
mov
and
jae
clc
in
scas
pushf
popa
test
cmc
adc
xchg
adc
xor
dec
push
ficoml
pop
mov
xchg
repnz
push
adc
pop
inc
je
lahf
daa
xchg
stos
add
push
pop
es
sbb
notb
cmp
das
jecxz
mov
mov
arpl
cmp
jne
std
mov
inc
in
in
sbb
in
clc
adc
xor
out
in
jne
int
pop
jnp
xor
mov
jo
jnp
xor
icebp
in
xor
mov
jnp
sub
mov
jo
jnp
push
out
ds
sub
in
addl
cmp
jns
or
push
notb
test
in
mov
mov
jle
inc
mov
aam
call
fcomi
sub
and
push
out
xchg
jno
cmc
cmp
enter
or
leave
sub
pop
cmp
jle
sub
ja
andb
sbb
inc
and
fdivl
and
mov
mov
in
add
lahf
cmp
repnz
adc
repz
jnp
into
xor
outsb
ficoms
ret
aad
jmp
push
pop
adc
ja
jno
xor
icebp
rol
xor
je
test
mov
scas
adc
pop
ror
jp
out
or
xchg
mov
push
sbb
das
daa
inc
pop
fsubrl
test
repnz
xchg
push
lds
call
dec
ja
test
inc
repz
fdiv
xchg
test
dec
and
fidivl
cmp
lea
lods
push
mov
movsb
adc
mov
fidivrl
xchg
cmp
sahf
popa
leave
call
rorb
pop
fidivl
jo
inc
push
mov
daa
xchg
repnz
adc
mov
inc
rcrl
mov
stc
or
inc
mov
cmp
out
or
dec
pop
fwait
pusha
push
ss
leave
and
xchg
dec
adc
fldenv
mov
jmp
cmp
cs
pop
fwait
addr16
cli
or
and
scas
cltd
jmp
sbb
insb
pop
fldt
or
pop
sub
xchg
add
movsb
sbb
loope
mov
stc
lods
mov
sbb
pop
mov
inc
adc
mov
add
push
xchg
pop
or
sub
push
xor
int
js
or
std
and
pop
mov
aad
cmp
mov
scas
inc
fistps
mov
in
insl
lea
xchg
jb
clc
aad
andl
lock
sub
int
mov
ja
cs
sub
loopne
flds
pop
xchg
shlb
ret
cmp
stos
adc
pop
ja
mov
adc
push
pop
and
mov
cmp
xor
mov
lea
aad
repnz
push
pop
je
mov
jl
dec
add
mov
pop
movb
adc
jo
jp
subl
jo
jp
subl
sahf
jo
jp
cmpl
ret
jo
jp
cmpl
mov
jp
push
mov
loope
push
pop
in
adcl
into
sbb
mov
addr16
xor
mov
inc
lock
xchg
mov
pop
data16
rcr
call
divb
push
dec
xchg
cmp
cmp
push
jl
adc
fs
mov
jmp
ljmp
jmp
icebp
dec
movsb
xchg
jb
jle
sub
add
sbb
rorl
inc
popa
cmpb
adc
std
xor
in
push
icebp
pop
sbbb
nop
xchg
scas
push
insl
inc
rcrb
fildll
dec
mov
xor
pushf
rcr
out
imul
cltd
pop
scas
adc
push
inc
pop
mov
sbb
jl
jnp
repnz
pop
pop
push
enter
in
or
js
pop
xchg
in
ficompl
mov
xchg
inc
xor
imul
int3
std
pop
xor
rcrb
adc
test
inc
repz
test
dec
icebp
xor
lods
sub
cmp
dec
decb
shlb
out
xchg
push
lds
push
xchg
repz
rclb
mov
xor
inc
inc
push
and
jge
lret
loopne
adc
and
cs
mov
test
mov
inc
jle
mov
or
xchg
movsb
pop
scas
pusha
jae
dec
ss
out
sbb
out
fisttpll
dec
lcall
cld
fnstenv
lret
stos
xor
push
sub
cmp
daa
insb
pop
fwait
jnp
mov
test
mov
mov
cltd
dec
test
pop
pop
in
lods
fxch
stos
jmp
cmc
mov
xchg
xor
add
xchg
loop
loope
jo
or
and
stos
mov
sbb
pop
sti
mov
in
xchg
lret
add
inc
xchg
xchg
or
mov
div
sysenter
andl
popa
clc
mov
stos
and
cmp
sarl
pusha
dec
inc
cmp
mov
call
jb
clc
dec
scas
mov
test
pushf
and
out
adc
lahf
out
adc
aas
mov
mov
fld
inc
enter
inc
shlb
xchg
nop
int
push
mov
je
sahf
je
pop
add
xchg
mul
adc
pop
stc
in
push
dec
sbb
subl
ret
and
movl
xchg
xchg
push
sbb
in
inc
adc
orl
in
test
jns
shll
incb
jo
jns
addl
jl
and
in
jo
jns
sbbl
in
jo
jns
push
pop
pop
push
bound
test
std
in
and
lock
repz
addr16
mov
es
xor
sub
ja
push
andl
inc
scas
aam
push
jge
inc
outsb
mov
call
mov
pop
pop
xchg
or
xchg
jbe
fidivs
adcl
sarb
test
pop
cmc
push
cs
mov
mov
add
add
and
cmp
dec
adc
sti
add
fwait
adc
jns
xchg
xchg
or
sahf
dec
mov
jecxz
inc
fiadds
imul
mov
adc
lahf
inc
out
shl
popa
inc
jae
test
mov
xor
test
pop
js
push
xchg
in
jb
lcall
inc
inc
fsubrl
imul
int3
and
pop
fnsave
push
aas
shl
leave
adc
cmpsb
ret
adc
xchg
xor
lods
loop
mov
cmp
cmp
aaa
xor
mov
pop
scas
out
cmp
cmp
mov
in
xchg
outsb
sub
rorb
and
xor
mov
push
xchg
and
xchg
adc
pusha
rcl
push
jnp
insb
mov
stc
cltd
pop
xchg
inc
ret
xchg
mov
out
jp
inc
xchg
movsb
fldt
push
push
fstpl
scas
dec
push
cmp
rcr
lret
push
xchg
fsts
adc
pop
data16
aam
cmp
das
push
imul
mov
daa
repnz
and
cmp
jp
cmp
sub
mov
pop
pop
jbe
xchg
add
add
movsb
xor
lods
xchg
inc
xor
imul
enter
mov
scas
xor
mov
and
adc
add
or
in
pop
push
ss
mov
in
pop
xchg
insl
imull
cmp
cmp
dec
mov
cmc
inc
test
es
push
fldenv
inc
mov
sbb
addr16
xchg
test
lods
clc
popa
movl
imul
pop
mov
repz
dec
loopne
fdiv
inc
pop
insb
jnp
mov
clc
cmp
xchg
xchg
int
dec
stos
adc
pop
js
push
popf
push
xchg
roll
std
push
ja
cs
inc
in
push
pop
ss
inc
loope
mov
test
xor
out
cs
inc
je
mov
add
add
xchg
loope
in
adc
mov
jo
jns
orl
in
orb
jo
jns
sbbl
imul
mov
xorb
add
popf
je
orl
in
loope
mov
push
paddw
push
mov
ja
mov
xor
lods
bsr
aam
popa
addr16
mov
xor
repz
divb
addb
scas
pushf
mov
jl
inc
jp
xor
call
mov
in
push
leave
xchg
cmp
fldl
jle
adc
in
or
leave
adc
push
jle
addr16
add
sub
mov
mov
mov
dec
or
aas
andb
sti
rorb
and
addb
or
lret
ffreep
dec
xorl
insb
pop
fimuls
mov
push
push
lods
pop
push
iret
adc
jg
sahf
gs
rcll
test
movsb
cmp
jp
lods
xor
or
xchg
call
mov
inc
pop
fcoml
push
loop
push
and
mov
jne
test
icebp
test
xor
sub
dec
lods
in
cli
jo
cmp
ret
jmp
aad
inc
bound
mov
ret
cmp
cltd
cli
xchg
push
sub
shrb
pop
xor
and
fidivs
xchg
push
fbstp
sahf
pop
sub
inc
shrl
mov
inc
cwtl
test
popa
jbe
add
popa
in
or
jnp
leave
mov
push
fsubl
addr16
jecxz
sub
mov
imul
nop
es
mov
mov
mov
andl
fmulp
pusha
mov
fwait
cwtl
mov
loopne
iret
and
cli
xchg
scas
push
jns
jo
repnz
cmp
add
push
outsb
jbe
xchg
pop
push
arpl
jno
or
rcll
push
push
enter
mov
push
loopne
mov
inc
pop
stos
mov
dec
adc
jge
js
and
or
xchg
ret
xor
push
sbb
add
xor
mov
inc
inc
shlb
test
es
lods
push
fildll
mov
and
jo
clc
mov
test
pushf
mov
repz
sub
in
sahf
in
pop
pop
ss
push
dec
and
mov
insb
daa
pop
lahf
into
imul
xchg
movsb
int
dec
test
stc
pop
xor
push
xchg
test
cli
push
insl
and
push
pop
pop
jns
dec
loopne
mov
test
cs
jne
incl
push
sub
jnp
add
adc
loope
fisttpll
int
bound
cmpl
jo
js
adcl
mov
js
adcl
xorb
push
or
icebp
in
pop
setnp
js
push
xchg
jae
add
jns
and
push
adcl
or
bswap
scas
cmp
add
mov
xor
inc
or
subl
jnp
inc
les
nop
call
jne
cmp
jns
jg
jbe
pop
mov
mov
jl
lds
rclb
xchg
leave
or
pop
or
xor
sbb
mov
push
sub
incb
jbe
add
dec
mov
sti
lret
or
in
loopne
mov
in
loope
cmp
xchg
xor
mov
mov
push
push
fistl
jl
jle
dec
sahf
ss
rol
xor
loope
mov
sbb
cmp
test
adc
mov
stc
call
pusha
je
das
sbb
adc
dec
mov
inc
xchg
ss
frstor
stos
call
bound
addr16
lock
jne
xor
imul
lods
adc
lods
jo
aaa
lea
push
mov
js
insl
mov
add
lret
in
fdivrl
cmc
cmp
inc
repz
les
loopne
imul
mov
pop
xlat
xor
pop
push
jno
cmp
frstor
xchg
iret
fdivp
adc
pop
jl
popf
push
sub
mov
cmpsl
stc
jmp
mov
test
jae
push
or
xchg
cwtl
fisttpl
pusha
dec
addr16
dec
in
push
fucomp
sarl
pop
fmul
nop
mov
sbb
stos
std
fs
cli
aaa
mov
shrl
mov
decl
andb
mov
sbb
mov
xor
add
mov
jbe
xchg
adc
movsb
mov
xlat
xchg
mov
sbb
call
xor
pop
pop
repz
inc
adc
scas
jnp
add
dec
or
inc
cmpsl
cmp
xchg
mov
dec
sbb
movsb
and
out
les
and
dec
sub
fcom
fldenv
aam
mov
sub
and
jo
clc
inc
lods
fsubs
orl
dec
in
call
xchg
leave
popf
xchg
pop
sub
fucomi
mov
dec
push
loopne
aad
pop
adc
pop
jle
je
and
stos
int
dec
mov
je
fwait
add
xchg
and
fsubp
loopne
add
data16
mov
stc
mov
test
cs
or
lods
mov
mov
call
adc
xorl
in
jo
ja
sar
sti
sub
push
nop
jo
ja
adc
jl
decb
mov
adcl
in
jo
ja
xor
cmpl
call
push
mov
test
xlat
loop
xorl
iret
incl
popaw
icebp
xor
inc
mov
sub
xlat
aad
jbe
jnp
inc
cltd
adc
mov
rcl
call
add
sub
push
insl
xchg
and
xor
jl
les
pop
inc
out
insb
dec
ror
dec
jg
in
push
push
push
lods
xchg
jmp
jb
jl
sub
std
sub
mov
mov
mov
dec
popa
inc
jg
arpl
jg
mov
test
push
xchg
subb
xchg
mov
sbb
fbstp
loope
fwait
push
faddp
mov
lods
sahf
sub
in
and
pop
inc
out
popf
and
iret
xor
inc
test
mov
push
pop
cmp
aaa
jp
jecxz
or
add
lea
dec
jae
das
out
jp,pt
jg
and
jnp
jnp
enter
and
push
mov
lods
cmp
clc
cmc
imul
mov
call
aaa
adc
dec
sti
enter
jb
and
mov
leave
cmp
lds
shlb
ds
pop
mov
lods
out
pop
push
xchg
fdivl
xchg
and
pop
je
and
dec
rcr
mov
stc
push
pop
jnp
jle
inc
popa
test
lahf
or
in
xor
xor
pusha
jae
popa
ss
lea
rcr
scas
addr16
xlat
adcb
sbb
aam
ss
cs
mov
clc
or
outsl
mov
out
lret
sbb
push
test
stos
or
xchg
jbe
popf
add
or
movsl
ret
xchg
imul
jns
ret
mov
sub
sbb
push
jmp
ja
fcompl
or
mov
cmpsl
fistl
fwait
mov
jne
imul
and
mov
les
fbstp
push
fcomip
mov
in
imul
popa
incb
out
adc
es
js
stc
pop
jecxz
xor
dec
lret
inc
dec
loopne
loopne
mov
int
ret
rclb
xor
scas
pop
push
je
fwait
add
mov
loope
push
leave
sbb
lahf
mov
adc
das
cmp
cs
or
mov
add
call
aam
mov
mov
in
out
test
cmp
jbe
cmpl
mov
andl
in
in
mov
cltd
jo
jbe
addl
mov
imul
and
repnz
pop
sti
xor
fstl
pop
loope
shll
or
or
push
repz
into
icebp
xor
lods
mov
and
dec
jp
inc
add
mov
ret
dec
pop
stos
mull
pop
loopne
pop
or
xchg
push
call
push
inc
es
ret
jb
jo
ds
xor
or
dec
movsb
pop
xchg
push
cmp
xchg
out
icebp
xchg
mov
jno
and
sub
ret
dec
stos
mov
leave
sti
test
out
mov
or
mov
roll
xchg
imul
xor
lods
jne
iret
adc
pushf
pop
out
iret
xorb
jo
test
movsb
cmp
les
jp
loop
or
imul
pop
fwait
mov
jb
das
xchg
cmp
mov
xchg
add
in
call
cld
jb
test
push
mov
incb
xchg
xor
lods
fst
into
jo
add
ja
pop
xor
clc
loop
mov
scas
cmp
out
sahf
das
les
sar
sbb
cli
xor
mov
and
push
jbe
pushf
push
sub
inc
roll
icebp
stc
push
pop
xchg
inc
mov
xor
rorb
or
sub
adc
mov
ss
fldl
rorb
test
movsb
nop
inc
push
mov
out
mov
aam
xor
pop
jle
push
stc
xchg
pop
and
repz
xchg
mov
in
pop
pop
pop
out
test
fwait
std
in
or
push
push
filds
movsb
xchg
sub
xchg
imul
push
enter
add
pop
jge
mov
adc
jbe
negb
sub
mov
cmpsl
xchg
cld
mov
cmp
hlt
stc
cmpsb
push
and
cmp
cmp
add
jo
inc
and
xchg
stos
ja
mov
xchg
sbb
and
clc
lret
stos
mov
adcl
adc
xor
sbb
into
dec
pusha
inc
dec
loopne
aad
inc
add
push
xchg
int3
pop
ret
adcl
out
mov
lcall
inc
and
xchg
loopew
push
jae
aaa
stc
das
ficomps
enter
das
or
mov
ja
sbb
push
mov
filds
rcll
mov
sub
out
jne
int
inc
jbe
cmp
ljmp
jbe
subl
int
jl
adc
in
insl
or
pop
push
mov
fnsave
push
test
aas
orl
jl
gs
push
xor
lock
testb
push
lock
jns
inc
push
adc
mov
iret
nop
call
shl
cmp
mov
insb
push
scas
xchg
xor
fcmove
cmp
inc
pop
jl
ret
sbb
add
mov
pop
sbb
out
icebp
in
lahf
fbstp
jp
sub
add
mov
scas
cwtl
dec
scas
aas
jp
sbb
cmpsl
sti
jecxz
xchg
arpl
in
test
xor
repz
and
xor
push
fisubs
mov
lret
lods
dec
push
scas
adc
adc
push
outsl
das
test
or
js
cld
loope
or
add
lea
push
test
xor
mov
pop
xchg
pop
shl
in
mov
mov
jb
test
cmp
idivl
push
shl
sbb
jp
xchg
dec
data16
enter
jecxz
or
fsts
js
test
mov
ret
cmp
aaa
push
sahf
popf
ret
mov
mov
sbb
mov
pop
fidivl
jo
dec
push
xlat
mov
push
mov
sbb
pop
sub
push
rcrl
idiv
inc
pop
xchg
inc
pusha
andl
rorb
or
ljmp
bound
addr16
fucom
mov
sub
js
scas
nop
adc
sbb
stos
mov
xor
in
cs
push
test
or
push
mov
pop
das
pop
xchg
cmpsl
jl
sub
movsl
or
xchg
adc
cmp
xchg
sbb
add
mov
push
mov
pop
stos
mov
fucomi
jp
adc
jmp
jecxz
pop
mov
cmpsl
inc
xchg
xor
xchg
xor
mov
jo
sbb
adc
sarl
mov
pop
mov
ret
es
cmpsl
inc
push
mov
scas
lods
in
push
and
mov
xorl
adc
icebp
pop
fs
mov
loopne
aam
inc
dec
imul
jb
iret
int
dec
into
adc
xchg
je
cltd
aas
xchg
or
xchg
push
insl
and
loop
push
dec
sbb
test
int3
add
xlat
inc
subl
and
add
mov
in
adc
add
test
aad
in
jo
jne
sbbl
movsb
jo
jne
cmpl
jo
jne
xorl
xorl
adc
aas
or
jo
jne
push
cmpsb
stc
ss
aas
fsubl
push
das
loopne
cmpl
into
adc
cmp
mov
test
push
testb
and
and
lret
stos
icebp
fxtract
js
inc
fsts
jl
push
mov
or
jnp
and
fnstcw
jl
ret
xor
aas
ss
dec
test
push
pop
push
mov
push
icebp
and
jae
pushf
sti
and
mov
aam
mov
ds
add
loope
jg
xchg
arpl
fs
mov
in
sbbb
add
sbb
xor
and
xchg
push
scas
adc
in
mov
ret
xor
cli
add
mov
or
ret
pop
jp
loopne
or
lea
stc
call
push
jno
das
loope
inc
fdivrl
fs
xchg
adc
movsb
call
push
jno
test
cmp
mull
or
mulb
ret
das
imul
add
bound
xor
push
bound
ljmp
inc
ret
lahf
ret
xor
cwtl
rolb
sbb
mov
pop
mov
mov
mov
push
xchg
fstp
xchg
adc
sbb
cs
fwait
js,pn
mov
shll
cmpsb
add
popa
xorb
add
jecxz
lret
fisttpl
arpl
jmp
rorl
mov
cmpsb
sub
xchg
push
hlt
fldcw
sbb
aam
xor
fiadds
mov
and
fwait
cmp
in
outsl
push
js
push
push
insb
pop
fwait
cmpsb
cs
sti
in
or
xchg
inc
push
pop
popa
movsb
rcr
xchg
aad
loope
sub
repz
mov
push
divl
add
jl
mov
jo
jo
imulb
sub
sbb
push
mov
cmpsl
mov
repnz
dec
sub
cli
bnd
cmp
rol
dec
add
xor
sarl
shll
jl
pop
es
test
mov
or
insl
inc
clc
sbb
fsubs
sbbb
ljmp
fstps
jp
mov
inc
or
addr16
inc
repnz
fs
loopne
jecxz
add
adc
je
cltd
xor
push
xchg
pop
sub
sbb
stc
mov
adc
cs
or
fbstp
jne
lods
std
push
mov
out
mov
or
jo
je
sbbl
pop
hlt
outsl
jo
je
cmpl
in
testl
jno
sbb
sub
or
jo
je
sarl
stc
loop
mov
mov
push
ret
push
adc
fsubrp
into
or
stos
jmp
xor
testb
lock
stos
loop
jl
mov
in
mov
int
call
icebp
lock
sbb
nop
xor
sbb
mov
jl
sarl
shr
dec
sbb
pop
xor
xchg
icebp
and
jns
sub
mov
mov
lods
fmuls
and
xor
mov
orl
nop
jmp
andb
xchg
in
or
fists
addr16
fimuls
mov
xor
lods
adc
lcall
inc
outsb
adc
or
pop
js
pop
jp
loopne
or
or
xlat
adc
mov
jo
das
sub
iret
and
pop
ss
fs
xchg
test
pop
scas
call
shll
iret
cmp
cmc
imul
sbb
sarb
lea
or
dec
adc
iret
popf
repz
scas
or
scas
cmp
ss
pop
sahf
xchg
adc
shrl
sbb
mov
pop
loope
ret
cmp
out
mov
and
sbb
or
sub
std
scas
pushf
stc
movsl
pop
fiaddl
andl
or
jmp
mov
pusha
xchg
arpl
mov
mov
dec
lcall
lahf
fsts
sahf
sub
xor
cs
data16
fwait
fwait
mov
xchg
ljmp
mov
sbbb
adc
fmul
xchg
jecxz
or
jbe
xchg
sbb
std
push
movsb
sub
movsb
xchg
add
imul
in
cwtl
inc
repz
outsl
xor
inc
fisubs
out
adc
lods
adc
mov
mov
cmpsl
mov
or
push
sub
cmpsb
jle
xchg
dec
cs
mov
rcr
stos
cmp
inc
es
lods
mov
loope
xchg
push
insb
inc
clc
sbb
bound
and
xchg
xor
pop
mov
adc
mov
mov
bound
addr16
dec
lret
mov
movsb
int
dec
mov
je
cwtl
push
xchg
sti
sti
stc
push
cltd
push
js
js
notb
jne
insl
fcoml
sbbb
out
cs
or
cs
jne
sti
sbb
cld
xor
xchg
in
in
adc
xorl
in
adc
test
jae
adcl
jmp
mov
int
mov
addl
mov
jo
jae
sbbl
in
jecxz
in
jo
jae
sbbl
in
loopne
out
and
jae
push
add
pop
push
and
aam
xchg
fucom
into
movsl
or
incl
xchg
adc
mov
inc
lock
ja
inc
aaa
adc
mov
int3
fld1
daa
hlt
sbb
out
pop
or
fisttps
push
mov
push
mov
sub
mov
shlb
int
xchg
ds
mov
pop
push
push
in
icebp
cltd
popf
icebp
jb
js
sub
cli
sub
jnp
mov
hlt
aas
dec
addb
sti
fwait
pop
cld
arpl
andb
in
subb
sub
sti
pop
xor
popa
lret
lret
lods
loope
outsb
adc
mov
xor
test
xchg
or
pop
aas
ds
jp
and
lea
adc
mov
outsl
mov
push
cmp
fsubr
mov
arpl
xchg
movsbl
call
cld
outsl
mov
pop
cmp
cmc
mov
mulb
and
dec
lods
rcl
lods
jo
cmp
add
pop
pushf
pop
xor
mov
es
mov
sahf
xchg
pop
sub
shll
out
cmp
push
iret
mov
fistpl
push
xchg
adc
adc
lods
xchg
rcrl
ret
ret
stc
ds
mov
dec
mov
mulb
nop
pop
ficoml
insb
pop
scas
popa
ss
addb
inc
sbb
push
xchg
pop
addr16
pusha
and
sub
pop
fildll
fisubl
push
and
loope
out
or
xchg
xchg
adc
adc
sbb
pop
push
push
mov
add
movsb
xchg
dec
sub
add
dec
xor
jnp
in
sub
call
add
ret
mov
les
pop
les
das
jno
sub
stos
cmpsb
adc
cmpsl
push
cmc
icebp
nop
es
push
stos
cmc
inc
sub
mov
pop
cmp
sub
push
enter
jno
sbb
add
mov
pushf
bound
and
pop
mov
rcl
xor
xor
push
shl
mov
outsl
mov
sarb
add
ret
pop
jmp
xchg
loop
pop
fwait
mov
xchg
pop
addr16
imul
sub
mov
xorb
sbb
je
mov
jne
cli
jne
cmp
lods
xchg
icebp
in
adc
orl
in
test
jnp
subl
in
jo
jnp
hlt
faddl
in
jo
jae
subl
gs
mov
adc
cmc
adc
pop
pop
push
push
fidivrl
push
push
clc
ds
test
cmp
iret
clc
hlt
push
add
mulb
push
popf
xor
in
enter
or
lcall
lock
mov
jo
mov
imul
or
cmpsl
or
notb
push
scas
mov
jge
mov
mov
enter
pop
mov
sbb
lock
arpl
jae
mov
and
jecxz
mov
mov
aad
sti
and
cld
arpl
fs
mov
in
xor
adcl
and
dec
fnstenv
insb
add
lret
lods
push
adc
jmp
adc
pop
test
sbb
xor
insb
int
insb
inc
test
mov
les
rcrl
fiadds
lea
jb
mov
jmp
das
data16
fdivl
mov
ss
bound
pop
fbstp
lds
addr16
xchg
mov
outsl
mov
imull
xbegin
cmpsb
imul
lods
sbb
icebp
lea
inc
ficoms
xlat
xchg
xor
push
xor
jb
cs
and
mov
xor
out
sbb
in
push
sarl
cmp
std
sahf
pop
sarl
push
xchg
fcoms
mov
sbb
cs
adc
shll
sar
jle
cli
inc
addl
into
popa
or
or
ja
lret
fldt
popa
popa
ss
out
fnstsw
fisttpll
dec
lret
lret
rcll
stos
push
fisubrs
clc
pop
decl
xor
fwait
das
mov
xchg
jp
xchg
or
or
ficoms
pop
pop
aam
pop
lret
gs
or
nop
jbe
insl
cld
push
movsb
mov
sub
enter
mov
adc
pop
and
in
adc
daa
add
or
mov
icebp
adcl
jmp
aad
push
cmp
rol
mov
mov
inc
and
mov
dec
lods
push
gs
or
clc
or
jle
adc
pusha
adc
xchg
sbb
cwtl
in
pop
sbb
rclb
jnp
dec
insb
adc
out
imul
ret
pusha
inc
ret
add
dec
adc
lahf
fnstsw
ss
pop
popa
adc
sbb
mov
or
orb
cmpsl
je
js
mov
test
push
mov
out
sahf
jecxz
in
push
imul
jo
lea
push
cmc
sub
or
jo
jno
cmpl
sub
or
jo
jno
xorl
sub
or
jo
jae
andl
sub
or
jo
repz
adc
pop
push
push
dec
fstl
push
fcoml
js
sub
test
in
xor
je
mulb
ss
lock
mov
cmovbe
fcomi
push
or
or
mov
hlt
mov
jl
add
mov
ror
inc
jne
sbb
pop
push
outsb
and
icebp
rcrl
stc
jbe
sub
pop
sub
hlt
stos
mov
sti
cmp
subb
sti
aam
add
andl
jb
xchg
lds
xchg
mov
loopne
push
and
mov
ret
pop
fcom
adc
inc
out
push
out
mov
mov
mov
test
push
pop
shl
sbb
or
cltd
or
dec
or
cmp
outsb
xor
scas
mov
lods
ss
aaa
sahf
pop
xor
int3
icebp
test
xor
mov
outsb
mov
scas
fsubrp
divl
clc
cmc
dec
cmc
jle
dec
test
lods
cwtl
shrl
pushf
cmc
lea
jmp
pop
xor
mov
scas
and
scas
cmp
xor
sahf
xchg
daa
and
ret
xor
aaa
push
push
push
xchg
cld
fadds
cmp
sub
aad
sar
into
push
cli
inc
out
sub
int3
wbinvd
jmp
sub
fucomi
push
test
ss
out
fisttpll
bound
lret
movsb
nop
orb
adc
mov
inc
pop
ret
xor
fiadds
fildll
push
scas
fwait
pop
sbb
xchg
andl
or
jns
push
xchg
mov
pushf
adc
pop
push
mov
mov
stos
push
or
and
inc
js
cmp
imul
arpl
arpl
mov
mov
outsb
mov
cmp
or
out
dec
imul
mov
sub
in
test
jb
repnz
into
ljmp
insl
sub
sbb
sbb
cmp
sub
mov
mov
mov
xor
rclb
int
pop
test
mov
or
cmp
or
jle
fistl
add
or
sub
outsb
jno
insb
rolb
xchg
test
mov
mov
dec
jge
into
data16
int
fbld
shll
push
mov
in
cltd
xor
lds
jg
out
cmp
push
nop
hlt
sbb
xchg
mov
push
and
rorb
rcr
push
mov
rolb
jmp
sbb
ja
pop
dec
into
inc
mov
std
mov
and
mov
test
mov
push
inc
popa
sbb
hlt
cmp
xor
dec
cmp
fsubs
aas
lods
dec
scas
xchg
mov
jo
into
mov
jns
jmp
lds
dec
mov
jns
jbe
fptan
sbb
push
xchg
popa
cli
push
aad
push
jmp
sub
adc
mov
pop
sbb
and
pop
in
aad
adc
leave
jmp
sarl
xchg
imul
movsl
mov
push
adcl
mov
imul
push
imul
pushf
shll
mov
out
cmc
pop
cmpsb
mov
out
mov
dec
mov
and
loope
xchg
sub
inc
test
add
inc
in
sub
and
add
cmp
add
mov
push
cli
xor
xor
jo
mov
lret
sti
clc
aaa
jno
and
sub
cmpsb
or
mov
fsubl
lahf
jmp
out
adc
and
lds
jmp
mov
call
sub
push
test
and
pop
cld
aam
rcrl
out
fstl
repnz
push
cli
ret
pushf
jno
fdivr
pop
jbe
push
cmc
lds
aad
adc
int
pop
out
mov
outsl
rcr
add
ss
cmp
repnz
bound
or
addr16
adc
jp
dec
pushf
nop
xor
ret
fucom
or
jns
pop
mov
rol
xchg
fistl
add
xor
mov
jnp
push
push
divb
leave
sarb
push
jae
push
pushf
push
aam
ss
in
sbb
mov
jnp
sub
push
dec
mov
sub
add
int3
pop
add
loopne
push
jl
call
inc
sbb
mov
imul
rolb
pop
sbb
xchg
stos
je
in
adc
and
les
xchg
dec
lret
jno
out
dec
lret
lret
xchg
mov
aad
imul
pop
mov
pop
loope
push
push
loope
add
mov
insb
popf
pop
cmpsb
mov
outsb
pop
mov
xor
mov
adc
or
push
leave
sbb
jns
and
sbb
and
jle
cmc
rcr
out
fdivr
or
cmp
push
xor
outsl
sbb
and
sub
lret
out
sbb
fmul
out
aaa
and
mov
xchg
inc
dec
cs
and
aam
xchg
clc
mov
orl
bnd
fisttpl
bound
push
pop
push
sub
mov
sbb
lock
sti
pop
xchg
pop
ficompl
adc
pusha
lahf
push
pop
mov
xor
mov
xor
ja
add
addr16
mov
dec
cmp
sbb
jp
adc
clc
les
jle
push
jb
icebp
sahf
es
adc
mov
js
inc
int3
jmp
jg
cmc
fld
adc
cmpsb
and
dec
mov
cmp
stos
fdivrs
pusha
insl
mov
pop
adcl
fnstenv
cmpsb
out
jae
cmc
xchg
mov
bnd
rolb
out
dec
mov
shrl
aaa
addr16
mov
sub
les
fstpt
lret
aad
sub
popf
outsl
jg
jo
imul
pop
cli
outsb
test
mov
insb
cmpsl
dec
or
fsubs
mov
push
test
push
inc
jnp
scas
filds
jbe
mov
fstps
lcall
dec
cmp
sbb
popf
dec
in
mov
enter
sbb
es
jge
sbb
cmp
cmc
mov
mov
shrb
jnp
or
cld
lret
rcrb
mov
outsb
out
dec
pushf
scas
mov
xchg
and
mov
inc
scas
and
inc
iret
mov
les
mov
jae
push
lods
inc
dec
mov
or
ds
mov
cltd
idivb
sarb
pop
jecxz
sub
das
mov
cmpsb
pop
daa
outsb
je
xorl
fisubl
push
or
pushf
jle
arpl
aam
jl
jl
inc
ljmp
push
dec
cmpsl
jp
push
cmpsb
lcall
test
sub
sbb
and
dec
push
lahf
push
loop
loope
pusha
ljmp
jns
sbb
jbe
fsubs
xchg
or
cmpl
idivl
stos
je
sub
adc
xchg
jmp
jmp
mov
mov
ds
das
pop
imul
adc
add
out
lods
and
ja
lahf
adc
adc
inc
js
cmp
cmp
dec
inc
and
movsb
adc
add
sub
lret
jnp
jp
in
ficompl
dec
std
sub
pop
adc
ret
cltd
bound
inc
and
or
push
in
lea
ret
push
push
cmp
adc
xor
loope
sub
ja
cmp
ds
dec
jns
mov
mov
push
mov
pop
mov
movsl
out
js
push
out
inc
fwait
out
daa
mov
pop
test
pop
mov
xor
xchg
scas
xor
push
sub
push
pop
out
ret
iret
push
sbb
or
push
flds
xchg
push
hlt
adc
test
cmp
scas
fsubrs
outsl
jl
push
aad
xchg
sub
enter
inc
sub
sbb
xchg
mov
adc
iret
add
dec
or
ss
and
aam
shll
cmp
push
test
jae
pop
aaa
dec
cwtl
mov
pop
jle
xor
fsubr
mov
jmp
imul
push
ds
xchg
gs
daa
ret
fcoml
cld
dec
mov
rcr
sbb
cmp
cmp
mov
cmc
xchg
jno
cltd
add
push
popa
mov
mov
dec
shll
inc
jae
and
pop
test
mov
dec
outsb
jns
cwtl
lds
test
in
mov
pop
out
aas
xchg
adc
sbb
jle
aam
add
sub
dec
scas
hlt
xchg
jo
mov
and
dec
mov
xlat
sub
cmp
adc
subb
mov
sti
add
push
pop
fmul
xor
mov
push
in
sub
dec
in
lret
xor
pushf
pop
and
mov
and
sarb
pop
aas
sbb
clc
in
mov
xchg
loopne
or
pop
jns
mov
mov
ret
lock
mov
inc
dec
lret
shlb
push
decb
call
out
cmp
div
and
or
add
data16
ja
fldenv
cmp
pop
sub
xchg
inc
inc
or
lea
mov
sub
sub
xor
sbb
lods
push
into
xor
int
inc
aad
add
add
adc
nop
xchg
loop
push
fs
aaa
in
sbb
stos
fs
add
outsl
addb
pusha
out
jp
or
jg
mov
stos
or
jb
pusha
enter
xchg
aaa
int3
lcall
rolb
push
and
test
out
mov
jbe
fisttpll
cmp
jl
out
int
xor
shr
cli
dec
lods
mov
mov
xlat
cmp
test
xor
shr
fldenv
xlat
outsl
leave
test
push
xchg
lods
fstpt
push
cmp
std
mov
fcoml
adc
dec
pop
enter
and
aad
jl
xor
lcall
into
aaa
xor
mov
pop
repnz
xor
movsl
mov
push
jge
mov
popf
into
imul
fdivrl
push
adc
clc
pop
cmpb
sub
sbb
sub
test
addr16
push
icebp
xor
in
pop
push
inc
or
cmc
rcrb
inc
push
push
sbb
int3
ret
ds
mov
cmp
ja
jb
adc
divb
xchg
sub
stc
fs
es
cmpsl
test
decb
divb
and
sbb
sub
add
imul
add
sub
inc
dec
repnz
push
test
dec
ljmp
inc
jbe
in
sub
popa
or
in
xchg
ds
and
movsb
push
and
inc
pop
dec
push
add
orl
cmp
lret
push
mov
cwtl
add
mov
xor
add
sbb
rolb
fstp
sub
scas
or
sahf
pushf
adc
in
sub
repnz
fdivl
push
cmp
mov
dec
sahf
fs
cld
gs
ss
ss
scas
jecxz
sbb
cmp
movsb
mov
into
data16
test
aad
dec
sub
inc
fcomi
pop
or
dec
jbe
in
not
addr16
addr16
nop
je
call
xor
shrb
adc
pop
or
stc
insl
sub
movsl
arpl
xor
mov
test
leave
out
mov
mov
lret
inc
popf
ds
pusha
pop
push
fs
inc
jne
mov
add
jp
aaa
cs
aaa
cwtl
mov
xchg
xchg
pop
xor
insl
out
mov
es
cmp
ljmp
and
repz
loopne
loopne
inc
adc
jnp
dec
mov
in
or
fcomps
clc
mov
les
popa
jmp
sbb
aaa
les
jno
in
mov
lods
enter
mov
push
ret
mov
gs
or
jb
mov
adc
sbbb
lret
pop
xchg
jl
popf
and
sbb
pusha
sbb
into
xor
outsl
xchg
sahf
je
test
aas
ret
ret
shll
out
popf
inc
or
mov
cwtl
fdivl
rolb
jge
push
dec
dec
adc
fwait
adc
fsubrs
mov
inc
ficoml
jg
jmp
and
cmp
scas
out
or
inc
mov
pop
cltd
je
dec
mov
sub
xor
push
jp
imul
adc
jmp
adcb
repz
jne
shrb
push
or
mov
gs
outsl
cmp
call
push
dec
xor
out
popl
jnp
xchg
or
xor
fwait
lea
push
jmp
pop
inc
inc
faddp
test
into
sbb
jle
movsb
movsb
adcl
pop
adc
mov
dec
loope
sbbl
ljmp
decl
xchg
jmp
fsub
ret
scas
adc
out
imul
lret
hlt
xchg
mov
cwtl
push
mov
sbb
xlat
jns
pop
scas
pop
inc
or
adc
lods
sub
sti
data16
push
sub
fstl
in
fwait
test
int
push
jns
fcomps
mov
nop
ret
add
imul
inc
or
cwtl
rorb
push
or
insl
in
sbb
das
push
inc
and
mov
out
jnp
movsl
shlb
daa
add
out
cmc
mov
adc
mov
stc
lea
push
lret
in
in
fiaddl
mov
mov
adc
jo
adc
negl
rclb
mov
and
out
adcb
mov
jnp
les
stos
xor
mov
jecxz
mov
mov
jge
add
in
test
insb
ret
jge
sbb
or
iret
inc
imul
stos
inc
lods
aas
pop
loope
scas
ret
xchg
cmp
insl
faddp
push
popf
pushf
js
dec
sahf
lds
outsl
mov
std
xchg
jne
and
fistps
or
mov
cmp
xchg
dec
fs
lods
insl
pop
gs
lea
lods
test
sub
jns
pop
iret
sbb
jnp
xor
mov
hlt
into
jp
sarb
sub
mov
andb
inc
and
and
scas
sbb
inc
subb
xchg
mov
xchg
mov
xor
movsb
iret
cmp
push
jmp
mov
pop
push
adc
mov
sub
inc
push
addr16
movsb
ljmp
add
sbb
push
stos
cmp
das
pop
mov
lock
mov
cwtl
push
mov
jl
mov
sbb
fwait
pop
mov
jge
or
jg
fldcw
clc
ja
inc
sahf
or
test
arpl
ja
stos
aas
in
pop
push
jmp
xor
sahf
push
xchg
sub
icebp
sbb
subl
jns
jl
jmp
xchg
mov
cs
scas
ret
mov
ss
inc
or
add
fwait
adc
sahf
lods
adcb
aam
pop
and
out
jecxz
jl
xchg
loop
iret
cmp
scas
lds
fadds
and
mov
sub
fadds
cltd
jmp
mov
popa
sub
jl
mov
outsb
bnd
outsl
std
fcoml
mov
adc
js
repnz
xor
lcall
enter
push
mov
mov
shrb
out
into
adc
jl
scas
push
mov
add
sub
jb
roll
jg
inc
mov
insl
and
outsl
push
pusha
cld
popa
pop
xchg
and
cs
mov
add
into
sbb
xor
sub
add
or
loope
pop
mov
or
fildl
ret
gs
dec
dec
adc
call
push
loop
jg
inc
test
adc
daa
inc
push
fdivrs
fadd
movsl
daa
aas
addr16
sbbb
or
xchg
rcr
xor
jns
in
jo
xor
mov
outsl
sahf
jge
mov
fwait
cmp
sub
enter
jecxz
addl
adc
mov
pop
add
inc
ss
pop
bound
adc
sub
push
dec
dec
hlt
pop
insb
sub
pop
repnz
les
mov
aad
loop
test
movsl
pop
jge
pop
test
ljmp
leave
fsubs
popf
test
cmc
cmc
dec
gs
stos
les
pop
mov
push
insl
aam
jns
push
xchg
call
jns
mov
push
nop
cmp
sub
xchg
push
sbb
cwtl
rcl
sbb
push
mov
fbld
or
fwait
add
test
arpl
cmp
cmp
movsl
xchg
mov
ret
call
inc
icebp
xor
and
pushf
mov
pushf
imul
jl
lahf
adc
mov
dec
xchg
daa
push
fisubs
dec
ss
lret
jo
xchg
dec
mov
mov
repz
punpckhbw
xor
jg
xlat
addr16
rep
fcompl
xor
cli
push
or
or
pop
cmpsb
hlt
xchg
loopne
jbe
cmp
inc
lahf
or
xchg
cld
pop
aaa
loopw
mov
repz
arpl
or
std
jns
cmp
jmp
or
push
mov
rclb
call
stos
lods
jnp
out
push
mov
adc
mov
pop
fsub
mov
fmull
enter
mov
and
loop
adc
shrb
loope
sub
mov
shlb
aam
mov
mov
leave
cltd
dec
imul
push
or
xchg
jmp
lods
rolb
leave
into
ljmp
shr
adc
ffreep
inc
loope
jae
push
dec
rorl
xor
arpl
pop
fldcw
jae
pop
sbb
dec
nop
sub
fwait
in
test
sti
sub
repz
sub
jg
mov
fcomps
inc
stos
lods
fdiv
mov
fwait
out
push
ret
nopl
pop
xchg
inc
jge
sbb
les
leave
addr16
push
icebp
xchg
les
shlb
fistpll
mov
fldl
xlat
movsl
add
out
sahf
pop
cltd
add
xchg
into
addr16
mov
xor
xchg
add
and
and
sbb
int3
xchg
mov
ret
xchg
loope
inc
mov
push
adc
sub
js
repz
add
mov
or
dec
mov
lahf
call
mov
push
push
lret
dec
add
jbe
xchg
jg
lret
inc
xchg
mov
ljmp
cmp
pusha
and
xchg
int
jg
mov
inc
enter
xor
pop
xor
idiv
jmp
ret
mov
mov
fstpl
testl
xor
and
fidivrl
xchg
push
test
sub
sub
out
inc
orb
add
xchg
int
xchg
shlb
sti
mov
pop
rcrl
mulb
pop
add
push
sbb
cwtl
push
fnstcw
dec
stos
popa
in
sti
jns
fsubl
gs
jmp
int3
sub
shll
cmp
pop
xor
cmp
mov
dec
adc
cli
xor
call
sbb
rcrb
xchg
xor
sbb
fnstsw
in
xchg
movsl
adc
movsb
xor
in
iret
cs
dec
int
in
dec
loope
pushl
jns
mov
inc
shrl
les
clc
fidivrs
xor
pop
bnd
xlat
stos
lcall
test
cmpsl
ja
test
int3
sbb
into
movsl
les
stos
nop
scas
adc
movsb
std
inc
pusha
mov
hlt
jnp
xor
xor
les
pushf
sbb
xor
push
frstor
xchg
test
bound
test
push
ret
mov
cmpsl
mov
movsl
icebp
cmp
out
mov
mov
or
loop
jle
sub
jmp
scas
mov
lods
rolb
mov
out
push
sub
jae
or
repnz
loope
mov
push
mov
iret
mov
adc
imul
push
dec
nop
mov
cmpsl
pop
daa
stc
xor
out
adc
cmpl
mov
add
jle
aaa
mov
sbb
pop
xchg
cmp
xchg
xchg
cld
je
dec
sbb
les
pop
mov
add
divps
mov
cltd
lret
in
fcomps
dec
cmpsl
lret
ret
and
add
push
jnp
rorb
pand
arpl
mov
mov
ss
inc
mov
mov
xlat
mov
out
icebp
enter
rorl
popf
dec
mov
cmp
mov
sbb
push
cs
arpl
cmp
pop
xchg
jae
sbb
fildl
cmpxchg
out
and
mov
cld
lahf
stos
sbb
jae
arpl
jge
ljmp
mov
xlat
scas
repnz
repz
push
adc
jne
fdivrl
arpl
int3
mov
stos
insl
mov
pusha
jb,pt
dec
xchg
ficomps
into
sub
in
or
add
cmpsl
xor
stos
pop
repz
loope
bnd
mov
adc
insl
pop
inc
adc
mov
cmp
lret
pop
dec
push
xor
jne
dec
pop
xchg
or
sub
imul
dec
and
test
sub
imul
mov
dec
xchg
inc
fdivrs
push
jl
jmp
mov
insl
nop
sbb
stos
aas
aas
pop
sahf
pop
fs
repnz
pushf
js
dec
loop
lds
add
jl
xchg
subl
xchg
xchg
enter
cmp
data16
in
ror
push
mov
out
or
mov
mov
cmp
scas
test
dec
sbb
jno
fcom
xchg
scas
add
push
sbb
jne
icebp
clc
jle
lret
stos
addr16
shlb
out
call
test
mov
inc
stos
mov
hlt
loopne
cmpsl
mulb
fnstsw
jge
sbb
xor
hlt
adc
in
cmp
jb
sbb
mov
pop
cltd
test
imul
push
mov
jmp
sub
and
jl
aaa
jb
hlt
in
pop
and
mov
pop
push
inc
or
lahf
push
adc
push
cmpsb
arpl
data16
pop
sahf
mov
faddl
xlat
mov
scas
mov
jne
scas
push
ficomps
xchg
cmp
sahf
aaa
rcr
mov
addr16
stc
xchg
rolb
adc
inc
sbb
mov
insl
sarb
aam
xchg
push
pop
outsl
enter
pop
aaa
sbb
and
add
outsb
xchg
out
xlat
jmp
mov
lret
add
ret
mov
adc
jne
fs
add
test
out
aad
lahf
lahf
stos
lods
jnp
aad
adc
nopl
test
pop
popa
cli
repnz
sbb
imul
mov
negl
push
fidivs
adc
add
call
inc
adc
mov
push
pop
rcll
data16
fiadds
inc
pop
test
es
jmp
mull
enter
jp
sarb
push
push
add
inc
stc
sbb
lahf
cmp
add
in
cmc
cmp
mov
imul
imul
adc
add
sub
notb
cs
or
out
rcl
pop
rclb
adc
inc
inc
and
fidivrl
pop
dec
mov
cmp
push
inc
add
mov
sbb
jne
subl
add
test
imul
fisubrs
dec
cmpsb
sub
or
push
int
rorl
pop
jg
and
or
test
dec
push
push
cwtl
lahf
scas
aad
cs
add
inc
test
insb
icebp
lods
test
fisubl
test
sti
jle
jp
jnp
pop
popf
sub
ds
inc
ficomps
adc
andb
mov
lock
fcmovbe
enter
ljmp
dec
fwait
jp
mov
mov
push
sub
inc
into
pop
adc
mov
leave
dec
mov
inc
or
out
sbb
les
repz
add
mov
jl
mov
mov
cltd
inc
xchg
imul
repnz
xchg
mov
mov
outsb
xchg
sub
jnp
in
dec
push
shll
sbb
cmpsb
xchg
or
mov
lods
pop
hlt
and
pop
xchg
xchg
addr16
fistpll
jg
push
dec
sbb
push
xchg
sub
sbb
jb
add
add
scas
idivb
xchg
pop
jecxz
xor
xor
or
shlb
scas
mov
inc
repz
mov
sbbl
mov
xor
pop
push
adc
stos
int3
xchg
cli
cmc
insl
stos
fsubrs
xchg
int3
fcmove
aad
jb
xchg
jnp
mov
je
shrb
ficoms
push
dec
xlat
enter
pop
adc
or
xor
inc
push
icebp
out
roll
test
adc
inc
out
push
inc
movsl
mov
inc
cmp
loop
cltd
scas
inc
dec
out
mov
add
cmc
imul
sub
cli
sti
mov
jp
xchg
and
sub
es
cmp
or
adc
in
add
mov
in
add
jb
xor
and
xchg
stos
and
and
movsb
rcll
adc
mov
lret
das
xor
pop
pop
int
int
and
and
inc
data16
add
movl
aaa
cltd
fsubl
idivb
imul
adc
jmp
negl
xchg
in
and
push
xor
aam
mov
pop
jne
mov
lcall
dec
mov
mov
fwait
xor
out
adc
jmp
push
push
cltd
outsb
or
lock
ljmp
outsl
xor
aam
jne
add
or
loopne
cmp
inc
popa
inc
sbb
idivb
mov
mov
jo
popf
cltd
ljmp
test
dec
fadds
lret
adcl
sbb
dec
sbb
push
cmp
lahf
ds
call
lret
and
int3
mov
xchg
test
push
jecxz
fsubrs
pop
popa
imul
jecxz
pop
or
sti
xor
mov
jp
mov
std
faddl
aam
pop
outsb
and
ja
cwtl
fists
sahf
or
mov
shl
inc
int
xchg
push
stos
fiaddl
les
push
sub
out
lret
xor
or
fstps
cmp
inc
mov
xchg
fistps
cmpsl
in
dec
push
sbb
push
testb
test
pop
or
sub
add
jge
test
insb
xchg
push
mov
fbld
les
rolb
and
fldl
jnp
mov
loop
sub
mov
scas
cmp
and
stos
pop
pop
aaa
clc
int3
sbb
repnz
gs
push
cmc
inc
mov
mov
xchg
fistps
fs
push
je
pusha
testl
adc
mov
nop
jp
sahf
cmpsb
clc
pop
loop
cmpsl
cwtl
add
mov
and
or
jle
outsl
cs
push
push
in
movsl
mov
mov
mov
out
jmp
inc
pop
mov
movsl
inc
es
mov
and
aas
adc
inc
push
xchg
push
loopne
xor
lock
xchg
pushfw
in
orl
and
fs
arpl
aaa
fidivrl
lret
push
addr16
adc
pop
push
int
add
mov
cmpsl
mov
lock
mov
outsl
mov
pop
push
aam
push
jle
sub
jnp
push
jge
js
addr16
nop
jp
adc
jg
in
fstl
fistl
aam
adc
mov
xchg
scas
clc
mov
loopne
test
fmull
jge
in
push
shlb
iret
xor
outsl
bound
mov
jb
push
scas
adc
sbb
outsl
lret
arpl
and
jno
movsl
xchg
test
dec
inc
lods
sbb
out
lahf
push
je
pop
cmp
lret
ds
push
jle
js
xor
pop
ds
adc
mov
pop
cmp
pop
xor
mov
data16
out
bound
mov
sbb
mov
mov
rcr
sbb
clc
icebp
fwait
mov
jmp
and
cmp
adc
test
in
cltd
mov
jp
fwait
ja
mov
jo
mov
add
xlat
bound
movl
and
mov
call
jecxz
mov
xor
test
out
adc
mov
in
mov
sbb
sbb
jnp
add
imull
or
mov
add
movb
dec
loop
xchg
dec
ja
cmpsl
push
push
insb
cltd
fisubs
dec
es
dec
aam
jg
push
dec
int
dec
dec
fwait
jae
in
push
jle
stos
pop
lock
pop
pusha
sbb
bound
imul
mov
call
sbb
mov
jp
xchg
std
fwait
add
div
lret
lahf
dec
jb
imul
dec
pop
stos
mov
test
lods
lret
in
pop
in
mov
cmp
popa
ret
push
or
or
in
dec
mov
rcrl
pop
cmp
pushf
adc
fmuls
fiaddl
in
ret
cmpsl
push
inc
adc
push
fnstcw
mov
push
push
fwait
shlb
shlb
divb
nop
mov
jle
loope
sbb
sti
add
jo
sub
or
std
mov
aaa
sti
ja
push
xchg
sbb
lret
repnz
push
or
js
jns
pusha
xor
adc
outsb
and
mov
dec
push
sub
inc
test
arpl
add
stos
test
je
lcall
pop
imul
mov
adc
mov
fwait
inc
mov
or
sub
mov
pop
stc
cmp
cmp
insb
je
pop
dec
pop
mov
add
sub
pop
dec
mov
lret
fcmovne
imul
or
fwait
sbb
shll
ss
sarl
cmpsl
sahf
or
loope
cmpsb
adc
push
pop
or
fstps
or
ret
into
and
mov
rcrl
loope
insl
out
and
or
dec
adc
ror
fimuls
inc
add
scas
pop
jecxz
das
popa
mov
xchg
enter
cmc
lret
pop
int
dec
dec
int3
scas
push
test
popf
xor
mov
adc
xchg
add
dec
inc
rclb
outsb
addr16
adc
sub
js
pop
js
pop
mov
sub
nop
call
lock
movsl
subl
movsb
fdivs
dec
scas
and
addr16
add
rolb
inc
dec
add
es
adc
loope
imul
mov
repnz
scas
lock
cmp
shrb
add
mov
clc
cmp
xchg
mov
je
sub
addl
sbb
roll
push
addr16
sub
outsb
pop
xor
mov
pop
add
mov
xor
lods
xchg
pop
cwtl
dec
or
jnp
lahf
xor
arpl
hlt
mov
fisubrs
add
sbbb
or
and
out
mov
cmp
clc
push
sub
inc
xchg
mov
test
cltd
lret
sbb
icebp
mov
push
clc
mov
and
in
mov
orl
sub
test
sbb
pop
sub
sarb
adc
lods
inc
nop
mov
or
xchg
xchg
negl
xor
inc
jb
mov
stos
and
sbb
mov
stc
mov
decb
xor
and
cmp
jbe
xor
cmp
sub
dec
xchg
divps
add
sub
xor
mov
push
cmp
xchg
xchg
aad
pop
or
pop
jmp
dec
sbb
dec
mov
push
xor
xchg
xchg
repz
cmp
or
data16
xchg
cmpsb
mov
imul
adc
gs
xor
shll
es
cmp
js
mov
orl
les
mov
frstor
jecxz
jno
daa
repnz
rorl
sbb
dec
neg
add
sub
test
leave
imul
ja
sub
ljmp
cmp
xor
sbb
insl
mov
lds
sbb
aas
dec
fisttpll
jmp
or
lods
mov
icebp
sub
out
sahf
lock
cmp
outsb
pop
xchg
test
jp
pop
jb
cmc
jns
xchg
hlt
mov
fs
hlt
scas
insb
jge
inc
pop
fnsave
xchg
jbe
xchg
enter
outsb
repnz
out
call
loope
ret
sub
sahf
ds
sub
and
out
loope
fiaddl
mov
push
int3
ss
push
cmp
dec
repz
pushf
mov
jl
imul
sub
mov
js
adc
dec
pop
xor
sbb
inc
rsqrtps
inc
xchg
mov
xchg
push
insb
pop
lock
arpl
dec
inc
push
mov
addr16
addr16
mov
into
xchg
enter
ds
mov
or
jae
call
arpl
mov
divb
aas
stos
jp
jmp
imul
push
idivb
ljmp
fsts
xchg
xchg
ret
jbe
mov
pop
push
push
cli
jnp
stos
ficoms
mov
sub
pop
jno
iret
into
adc
int3
arpl
adc
sub
jne
loope
shl
ljmp
pop
pop
out
push
sub
jb
lods
mov
adc
adc
sahf
aam
cmp
pop
sbb
pop
aam
mov
fs
sbbl
cmp
xchg
mov
mov
scas
mov
inc
pop
ss
lock
cmc
add
adc
xchg
sub
mov
mov
call
test
lcall
adc
inc
push
cmc
je
or
jae
cmpsl
test
push
lods
fwait
gs
mov
lds
mov
scas
enter
test
fidivrl
leave
jl
xlat
mov
pop
outsb
push
and
in
xchg
inc
add
fadds
cmpsb
jg
inc
pop
and
inc
sbb
add
pop
stos
jl
cltd
dec
sub
insb
push
sbb
and
push
push
test
pop
pop
adc
push
add
jl
popa
call
mov
ret
push
int3
pop
xor
rcrb
jmp
xchg
sub
test
bound
jle
into
jp
push
mov
jae
adc
cs
adc
dec
iret
xchg
roll
mov
mov
test
add
mov
push
mov
adc
gs
adc
mov
dec
push
pop
and
jae
cmp
lds
sahf
pushf
iret
fwait
pop
cld
xchg
jno
pop
push
add
fadds
insb
or
or
cmp
aas
lock
mov
test
xor
popa
sarl
dec
add
jnp
pop
aad
stc
lcall
cwtl
subl
pop
ret
xchg
fbstp
je
stos
nop
sub
pushf
test
ds
ljmp
js
push
stc
cmp
inc
sbb
ljmp
dec
push
icebp
fadd
cmp
std
and
cmpsl
pushf
fcmovne
adc
push
inc
lods
sub
les
or
iret
pop
lahf
and
repnz
stos
scas
outsl
std
or
xor
push
test
pop
vmwrite
das
dec
push
test
jns
cs
jl
test
jmp
jl
xchg
mov
jmp
cmp
arpl
pop
loope
sub
stc
fbstp
movsb
dec
int
push
gs
pusha
push
adc
sbb
cmp
loope
enter
push
and
dec
cmp
push
aad
popf
pop
sbb
xchg
xchg
sti
out
bound
and
ret
icebp
pop
in
or
shll
jmp
jl
add
sbb
mov
mov
inc
sub
mov
adc
out
shrl
push
repz
jecxz
mov
out
xor
aad
mov
push
stc
insb
fdivl
in
push
cltd
mov
pop
fldl
mov
and
mov
fwait
or
popf
ljmp
and
sbb
mov
icebp
out
adc
mov
fistps
dec
cmp
inc
insb
popf
insl
or
or
fsubrp
xchg
xor
mov
iret
fwait
sub
xchg
dec
adcl
scas
push
sbb
test
in
pop
jl
xchg
test
mov
test
xchg
arpl
movsb
jg
pop
adc
mov
inc
mov
stos
and
cmp
in
cltd
lahf
jp
adc
das
jae
pop
outsb
add
hlt
ds
and
mov
or
test
mov
mov
cld
jne
int
out
inc
mov
inc
clc
jns
out
pop
in
fbstp
lret
sbb
ljmp
add
cmpsb
mov
cmc
pop
xchg
leave
sbb
dec
mov
fsubrl
mov
mov
orl
das
aam
push
jo
ljmp
out
mov
cmp
mov
loop
sub
fldt
sbb
out
mov
dec
stos
roll
lea
jle
mov
push
jns
sbb
or
xor
inc
rcr
push
add
mov
sub
test
pop
ds
mov
outsl
ret
jno
or
aad
mov
out
pop
fwait
mov
in
mov
ja
pop
fwait
ja
inc
pop
adc
mov
inc
lds
repz
inc
jge
xchg
leave
xchg
insl
cwtl
xchg
push
cmp
mov
inc
sbb
push
mov
pop
call
stc
sbb
mov
jnp
movsb
add
add
cmp
push
hlt
add
sub
aam
cmp
aaa
repnz
fst
mov
sbb
mov
rorl
cmc
dec
xchg
adc
sub
dec
js
lret
fdivs
inc
add
ss
sub
mov
scas
pop
mov
push
adc
cmp
dec
repz
push
insb
xchg
lods
pop
lret
test
mov
adc
mov
dec
neg
out
adc
ficoms
sar
lea
sbb
push
sbb
movsl
add
frstor
les
add
sbb
aad
insl
lret
in
adc
dec
iret
cmp
or
fisubrl
mov
dec
or
sub
movsb
push
in
sbb
sbb
call
or
push
push
out
shl
clc
jle
sbb
test
cmp
push
cmc
mov
sub
ds
jae
mov
or
ficoml
pop
jge
les
outsl
repnz
xchg
cwtl
mov
and
or
ret
test
gs
rorl
sub
inc
push
sbb
xchg
shl
push
or
out
or
mov
inc
ret
lods
inc
sarl
add
cmp
in
inc
or
push
xor
cmp
stc
lret
adc
inc
mov
jmp
sbbb
pushf
prefetcht2
rclb
inc
shrl
xchg
pop
test
sub
imul
mov
int
adc
lea
jns
and
add
in
lret
sub
das
xchg
or
mov
ret
clc
es
sbb
fisubrs
in
or
lret
mov
lcall
cmpsl
dec
leave
jno
jl
das
imul
sub
fistl
jle
mov
sahf
push
jo
fcompl
out
inc
jae
lods
cld
daa
test
scas
xchg
fnsave
dec
sub
ds
inc
in
xchg
mov
xchg
iret
pushf
ja
mov
stc
sub
test
mov
push
xlat
fcoms
xchg
dec
xor
mov
adc
or
add
repnz
jo
xchg
lds
adc
dec
xor
aaa
jecxz
cmp
test
outsb
movsl
jb
cmpsb
xlat
fstps
mov
mov
stc
xor
inc
test
mov
mov
std
sbb
out
das
insb
sbb
push
js
gs
or
sub
xchg
adc
inc
pop
cmp
test
lret
cs
adc
jmp
std
dec
ja
test
sub
push
ds
and
and
xchg
data16
daa
fildll
mov
std
or
dec
cwtl
std
testb
inc
xchg
jae
das
and
popf
out
push
popf
loop
and
data16
pop
es
repnz
xor
pop
stc
and
or
shll
stc
and
shrl
jp
aam
sub
mov
sti
sub
loopne
sub
dec
xor
inc
ficoml
lds
adc
out
pop
mov
aaa
inc
add
adc
fisubrs
add
orl
repz
push
cmp
out
notl
push
push
mov
mov
and
std
push
sub
fwait
inc
es
scas
and
arpl
dec
jae
mov
adc
jns
stos
add
cmp
push
cmp
ror
gs
or
mov
mov
outsb
lcall
adc
dec
inc
inc
popa
inc
pop
leave
push
pusha
pop
sbb
xchg
addl
pop
add
lds
sbb
sbb
mov
xor
mov
mov
pop
andw
sub
dec
cmp
xchg
push
lret
add
pop
loope
lret
sahf
push
cld
popa
mov
pop
push
stos
inc
push
orb
fsubl
mov
ja
scas
lods
movsl
sbb
leave
call
xlat
mov
stos
pop
inc
mov
inc
sbb
cmpsb
mov
xchg
inc
sbb
dec
cmp
jmp
mov
jp
movsl
push
pusha
stos
jae
xchg
rcrb
repz
adc
outsb
cmc
mov
leave
push
sub
in
imul
hlt
sub
add
cmc
cmp
inc
ficomps
adc
jg
movsb
mov
inc
mov
pop
jo
cwtl
xor
push
rorb
leave
jae
dec
test
cmp
mov
ds
xchg
inc
and
or
iret
mov
dec
sbb
xchg
sbb
push
pushf
inc
inc
jg
jnp
add
aad
test
outsl
mov
cs
fldl2e
fwait
xchg
inc
es
and
mov
movsb
and
ja
mov
push
add
sub
pushf
jnp
ficomps
stos
jo
dec
movsl
push
jecxz
cs
sbb
dec
jae
cmp
push
vaddps
push
rolb
ja
daa
cmpsb
shrb
cwtl
jo
jo
repnz
ljmp
ret
loopne
shr
sbb
mov
es
jmp
pop
and
xchg
aam
lods
rorl
std
shl
ficompl
mov
xchg
jle
popf
pop
add
mov
outsl
and
jno
rorl
xchg
jp
std
mov
cmp
xchg
adc
pop
and
loop
cmp
shll
jo
js
rcll
daa
sbb
adc
loop
test
arpl
stc
jle
and
rclb
aam
enter
popa
pop
add
out
test
sub
shrl
dec
push
roll
shl
dec
jnp
aas
xchg
aas
pop
mov
sbb
or
adc
js
xor
ret
sbb
lret
jne
mov
fucomp
loope
mov
add
hlt
sub
cmp
inc
add
lcall
icebp
add
xor
ret
xor
cli
mov
bound
fs
cmc
out
mov
jecxz
in
pop
sbb
aas
adc
jo
sarl
jecxz
push
xchg
insb
sbbw
testl
sahf
jnp
cli
out
lcall
or
mov
xchg
pop
or
lock
lgs
jno
je
push
icebp
das
mov
lods
or
icebp
pop
or
lretw
jbe
sub
mov
cltd
lcall
or
pusha
lahf
jns
loopne
scas
lods
loope
jns
cltd
mov
mov
imul
cmp
pop
and
sub
add
in
fwait
sub
push
mov
jge
xchg
sbb
adc
cmc
mov
fdivrs
cmp
pushf
lock
test
std
push
adc
es
pusha
inc
dec
pop
xchg
jns
stc
divl
das
shlb
shl
or
daa
lret
or
mov
pushf
push
icebp
stos
jmp
test
lock
inc
jge
nop
xor
adc
les
and
stc
out
aam
adc
pop
mov
dec
xchg
mov
push
mov
and
xor
lret
ret
imul
sub
pop
stc
xchg
mov
pop
xchg
jae
in
mov
int
jnp
popa
xorl
in
lret
mov
push
popa
test
xchg
jmp
inc
ficomps
adc
xchg
insl
mov
push
notb
jb
mov
cmp
fs
mov
pop
jb
ret
jne
and
testl
test
cmp
lods
ss
negb
and
dec
fnstsw
mov
test
sub
cmp
inc
sbb
sbb
pop
and
int3
sbb
push
adc
mov
jno
dec
call
jecxz
push
aam
jno
mov
mov
test
jecxz
xor
and
jecxz
sbb
lock
bound
and
pop
jno
in
notl
das
mov
shrb
mov
dec
pop
fucom
push
cmpsl
push
xor
fsubrs
flds
xor
jae
jnp
xchg
sbb
es
xchg
test
loopne
ds
insl
sub
mov
cmpsl
xchg
xchg
sbb
outsl
pop
sub
inc
push
pop
lds
loopne
stos
rcll
jg
and
jp
cmp
and
loop
jnp
jecxz
mov
jp
cltd
inc
pop
mov
mov
lods
add
mov
nop
mov
adc
or
ss
cld
loop
xchg
jcxz
push
fsubl
addr16
push
clc
jno
xlat
push
stc
mov
pushf
stos
imul
lret
ret
jb
aam
fldcw
or
push
enter
lret
pop
lea
insb
ja
orl
mov
add
inc
jge
pop
xchg
enter
test
fimuls
push
mov
cmp
shlb
xor
dec
mov
xor
scas
jecxz
inc
loopne
push
xchg
mov
popf
rorb
sbb
imul
add
in
inc
pop
ljmp
xchg
pop
clc
arpl
lods
scas
xchg
jge
sub
xchg
fadd
nop
mov
adc
xchg
fwait
inc
cmpsl
mov
mov
xor
push
and
jns
dec
inc
loop
mov
movsl
insl
push
cmpl
and
divb
inc
mov
mov
jae
pop
jbe
jp
mov
mov
sub
adcb
jns
pushl
test
jecxz
ficompl
outsl
loopne
push
sbb
mov
insl
stos
es
inc
xchg
and
getsec
add
stos
scas
mov
jb
mov
and
rorb
and
mov
cs
es
inc
mov
and
fistl
lcall
into
sahf
fcompl
mov
jle
shll
aaa
xor
dec
in
mov
jp
jnp
shl
test
dec
inc
fisubrs
flds
mov
inc
out
mov
addr16
stos
jno
lock
cmpsl
push
repz
xor
cmpsb
mov
mov
inc
mov
in
dec
pop
lock
pop
ja
jp
jo
imul
cmp
cmp
loope
dec
dec
inc
cmc
and
outsl
push
aas
aaa
and
mov
or
imul
lahf
pushl
andb
jmp
inc
jl
pop
sbb
adc
mov
add
mov
mov
adc
lock
ljmp
mov
dec
fsubl
cltd
push
icebp
pop
adc
cmc
lcall
lock
dec
fcmovb
add
js
fcmovnu
int
lods
cmp
pushl
push
push
int3
xchg
or
push
std
or
xor
inc
sub
lret
mov
xchg
sbb
jle
mov
jbe
ret
mov
je
mov
data16
or
fsubrl
dec
ljmp
cli
inc
push
push
jmp
inc
push
mov
cltd
dec
push
leave
scas
fs
jge
into
stos
or
add
repnz
dec
jne
add
aad
loop
jns
mull
subb
push
gs
inc
ffreep
cmp
sub
mov
fwait
push
push
imul
sbb
xchg
cwtl
dec
jnp
stos
lahf
testb
mov
push
mov
movsb
shl
sarl
cmc
int
movsl
adc
pop
jmp
mov
or
stc
aas
leave
inc
fdivl
shlb
rclb
inc
jg
inc
lds
cli
mov
outsb
in
gs
out
stos
xor
popf
xchg
imul
sbb
rcl
adc
sub
push
xchg
into
push
lea
xchg
add
enter
ss
xlat
lds
lods
dec
scas
or
ret
push
test
pop
mov
cld
cs
scas
stos
xchg
and
lods
adc
shlb
add
mov
or
xlat
sbb
ffree
jns
daa
lock
add
dec
mov
test
leave
pop
sbb
filds
jecxz
or
pop
mov
mov
adc
iret
sub
leave
adc
inc
js
inc
inc
pop
mov
movsb
lea
push
in
mov
outsb
in
ret
cvttps2pi
sahf
hlt
push
sbb
jns
jge
xchg
loopne
les
and
mov
lods
dec
xchg
pop
test
fcmove
in
ljmp
pusha
stos
addr16
loopne
sbb
dec
sbb
mov
ljmp
insb
xor
sbb
fstps
mov
mov
mov
cli
imul
xchg
push
adc
xchg
xchg
fstpl
inc
inc
out
gs
lahf
movsb
fs
hlt
mov
inc
sti
movsb
xchg
in
or
or
imul
mov
xor
leave
lods
sahf
sbb
xchg
cmp
inc
pushf
dec
lret
mov
pop
scas
push
push
adc
mov
and
inc
in
mov
pusha
outsb
jnp
je
mov
and
inc
jb
pop
imul
sbb
movsl
jg
push
cld
inc
mov
xor
shr
arpl
push
pop
or
xchg
insl
mov
cltd
jl
dec
sbb
stos
cld
lret
outsl
push
cmpsb
mov
lcall
push
das
in
pop
jmp
jae
hlt
loopne
xchg
cmpsl
xlat
adc
pop
lea
int
inc
aad
xchg
pop
cmpsl
mov
rorl
mov
mov
das
pop
jecxz
jnp
fcompl
mov
mov
test
jp
imul
lods
xchg
add
xor
xchg
push
test
sub
lcall
pop
push
je
shrl
jae
inc
pop
bound
add
fwait
je
movl
loop
out
jmp
rcrl
loop
fcmovnbe
sub
inc
je
sbb
imul
push
xchg
stos
or
jge
push
xchg
inc
out
pop
iret
aas
push
aad
cmp
pop
dec
pusha
das
stos
pop
imul
jb
xchg
scas
movsb
xchg
xchg
loopne
movsl
sub
inc
bound
sbb
mov
repz
push
ret
fldl
inc
cwtl
dec
jmp
mov
es
mov
in
cmp
mov
lods
dec
daa
pop
addr16
out
dec
hlt
repz
ret
outsb
pushf
cmpsl
div
ds
out
leave
mov
xchg
mov
jecxz
push
sahf
mov
mov
out
addr16
mov
mov
cmpb
mov
pop
inc
ror
cmpsl
js
mov
pusha
mov
pop
adc
fldcw
hlt
jbe
mov
int
icebp
mov
push
jmp
inc
in
loope
es
movsb
cli
mov
xchg
sub
xor
fistpl
push
xor
push
lret
sub
sub
mov
add
cld
mov
testl
cwtl
xchg
xorb
sti
push
dec
mov
pop
push
mov
in
mov
outsb
dec
movsb
lock
push
fdivrs
sub
mov
push
loop
sahf
jae
les
insl
pop
mov
pop
dec
lds
push
adc
mov
or
push
scas
sub
fidivrs
jmp
in
sbb
test
inc
enter
std
mov
push
mov
jle
popf
cmp
xor
sub
mov
mov
mov
dec
cmpsb
push
adc
fmull
mov
jno
xchg
pop
cmp
mov
xchg
mov
pop
cmp
cld
xchg
mov
fwait
push
and
add
add
pop
shl
xor
in
icebp
xchg
into
aam
nop
pop
adc
iret
sti
pusha
nop
xorl
and
jo
xlat
push
loop
dec
adc
dec
mov
mov
mov
sub
mov
ds
mov
vmovlpd
shrl
push
call
call
ja
xor
sbb
add
push
inc
dec
jno
pop
dec
xchg
push
add
adc
hlt
push
xchg
or
rcll
cmp
mov
push
and
mov
add
fists
adc
inc
pop
arpl
mov
fdivrl
mov
psadbw
xchg
and
and
xchg
jp
jg
call
fcoml
test
sub
outsb
js
test
dec
imul
pushf
cmp
push
and
aas
push
aaa
push
pop
push
cmp
fidivrl
jg
dec
enter
aad
imul
shlb
push
push
jb
enter
cmpsb
jge
sub
cld
adc
push
mov
fistpll
inc
or
das
xchg
sti
das
pusha
inc
rcr
insl
and
xchg
pushf
loope
into
inc
jge
fnstenv
repnz
ljmp
push
mov
dec
cmp
push
pop
in
xor
push
pusha
roll
pop
nop
fistpl
mov
stos
xchg
fisttpl
fstl
dec
jg
cmc
adc
lds
test
clc
sbb
out
push
cmp
lea
xor
inc
daa
xor
push
mov
cltd
rclb
xlat
pop
pop
cli
xlat
test
mov
mov
mov
jae
inc
xchg
enter
adc
cmp
dec
mov
cmp
push
in
into
adc
cs
and
lret
sub
and
lods
jecxz
loopne
aam
fists
cmp
add
out
lret
inc
and
sbb
mov
cwtl
shll
mov
jo
lds
add
jb
jnp
dec
mov
xor
sti
or
push
in
repnz
outsb
sbb
xchg
and
callw
mov
dec
or
inc
adc
xchg
inc
scas
pop
push
aam
lcall
jge
cmp
mov
insl
add
lcall
xchg
inc
inc
bound
add
mov
xor
cmpsb
test
mov
fimuls
pop
xchg
adc
mov
or
pop
push
xchg
ja
scas
or
aaa
or
jge
xchg
push
add
mov
mov
das
pop
mov
sbb
mov
shll
lret
dec
cwtl
fs
or
aam
in
lret
in
inc
or
xchg
pop
test
mov
arpl
dec
adc
mov
cld
mov
sbb
loop
leave
sti
insl
fsubs
out
mov
movsl
jecxz
push
mov
xchg
aad
fidivl
xor
movsb
push
sbb
test
push
and
push
test
aam
std
fwait
orl
and
and
enter
cmpsl
push
xchg
adc
mov
mov
jle
push
mov
pop
xor
xchg
jecxz
xchg
mov
out
in
mov
lret
jl
loop
lods
mov
xor
insl
push
cmp
xlat
enter
shlb
out
test
pop
and
cwtl
sub
and
out
mov
outsl
mov
push
lcall
ss
out
cmp
outsb
dec
std
lea
xchg
iret
inc
jmp
fsubrp
incb
push
mov
xor
xor
fimull
int3
outsl
adc
adcb
dec
mov
and
dec
and
loopne
inc
in
jmp
sub
test
mov
xchg
xchg
lret
pop
adc
in
inc
push
xchg
sub
mov
jae
xchg
out
and
rorb
test
jno
aas
pop
popf
mov
pop
incl
cltd
cs
in
push
int3
jnp
push
shll
mov
sub
push
mov
insb
adc
clc
xorl
daa
insb
mov
push
dec
movsl
mov
sub
push
lahf
notl
pushf
call
outsb
lea
fabs
mov
mov
jb
xor
fadds
pop
cli
enter
push
shll
dec
fs
shl
xchg
repnz
sti
and
les
and
addr16
aad
xchg
pop
fwait
lock
xchg
mov
sbb
cmp
cmp
or
in
repnz
pop
pop
and
sub
into
cmp
insl
jl
xor
int3
outsl
flds
or
sub
lahf
push
hlt
scas
pop
push
and
inc
jne
push
jg
fbstp
jns
leave
addb
mov
pop
push
popa
pop
push
sbb
mov
out
cmp
xor
push
xor
lods
fstps
das
mov
stos
sub
cld
adc
je
enter
jnp
jg
pop
lods
push
lock
in
dec
inc
mov
jns
sbb
repz
and
shlb
push
inc
mov
mov
jle,pt
push
js
adc
jmp
pusha
sbb
enter
test
lods
ja
mov
ficoml
rcrl
fwait
mov
push
lret
loop
loope
js
fdivrs
and
test
data16
inc
fistpll
xor
ffree
aaa
jge
negb
sti
jl
std
mov
loop
in
mulb
cltd
dec
mov
fldcw
jmp
rcll
out
sbbl
jmp
push
xchg
xor
jmp
loopne
mov
test
scas
mov
push
dec
inc
xchg
lret
int3
mov
insl
fstps
fisubs
sti
dec
bound
icebp
mov
arpl
shr
adc
outsl
inc
scas
ret
xor
mov
aaa
je
loopne
sbb
aas
stos
and
aam
loopne
fcmovnbe
sub
jg
or
js,pt
pop
add
addr16
nop
mov
addl
sub
xchg
mov
scas
sahf
add
div
cmp
mov
in
inc
iret
dec
push
pushf
and
inc
imul
dec
mov
or
daa
mov
sub
dec
into
sahf
cmp
ljmp
mov
xor
loopne
rol
inc
pop
loopne
jmp
cmp
imul
mov
xchg
cmpsl
sahf
loope
rorb
aas
loopne
fsubr
sub
out
call
int3
xchg
add
push
dec
nop
cmp
in
and
pop
into
lret
and
sbb
or
mov
mov
pop
mov
and
inc
push
icebp
iret
cmp
mov
mov
xchg
dec
out
stc
enter
movsl
mov
pop
cltd
xchg
sub
es
sub
xor
ds
popf
cwtl
popa
iret
clc
pavgw
rorb
adc
stos
or
stos
mov
xchg
iret
cmpsb
push
dec
dec
xchg
mov
leave
dec
loop
dec
fists
ror
lcall
arpl
in
xor
test
adc
mov
aas
fsts
dec
add
mov
lds
inc
bound
in
sti
push
outsb
jmp
pop
mull
rol
fcompl
mov
movsl
mov
enter
cmp
or
aaa
pop
pusha
sbb
loop
xchg
sbbl
stc
icebp
mov
shrl
pop
sbb
xor
pop
fisubrl
sub
inc
into
mov
sub
les
dec
adc
cli
xchg
pushf
adc
outsl
inc
aaa
or
sbb
pop
xchg
fidivl
aaa
ss
jae
dec
test
es
jge
mov
mov
push
sub
push
sti
dec
jbe
mov
sub
in
jl
or
fisttpl
sbb
insl
inc
clc
adc
ret
xchg
cmpb
and
orl
jo
jp
int
shl
pop
ficompl
stos
popa
sbb
loop
mov
mov
call
int3
dec
cmp
push
imul
fs
cwtl
popf
adc
fwait
cmp
cli
xchg
ret
cld
sub
loope
test
rolb
fs
enter
adc
mov
or
in
xchg
cmpsl
sbbb
add
incb
mov
test
pusha
sbb
cmc
xchg
xor
movsb
cltd
sti
lds
jecxz
mov
push
mov
loope
inc
mov
aas
xchg
pop
es
add
add
and
int3
xchg
mov
pop
es
aad
dec
push
imul
loopne
push
cmp
and
test
in
cmp
lret
or
scas
pop
cmp
and
sbb
pusha
lds
fadds
cltd
fucomip
xor
mov
dec
ja
rcll
test
in
mov
xchg
xchg
pop
and
lods
xchg
mov
mov
mov
lods
fnstenv
sub
data16
dec
cld
pop
pop
cmp
lcall
scas
lahf
std
loope
mov
push
inc
faddl
sub
mov
mov
fisubrl
cmp
inc
xchg
bound
push
mov
push
popf
lods
sti
ret
sbb
xor
push
xor
icebp
push
stc
mov
ss
repz
popf
fstpl
std
mov
cs
xor
stos
mul
enter
push
inc
and
out
mov
sbb
hlt
cmp
rorl
jo
mov
add
sar
or
pop
xlat
and
cld
es
rcrb
xchg
cmp
popa
ficoms
aaa
insb
sub
xor
jg
es
mov
movlps
cmpsl
lret
scas
loope
das
sbb
sub
jmp
in
adc
dec
cld
gs
mov
push
jg
or
inc
add
xchg
or
std
js
dec
test
pop
xlat
sub
in
iret
mov
jbe
andb
ss
imul
loop
imul
or
cmpsl
mov
mov
fdivr
inc
sub
mul
adc
rcr
jb
aas
inc
lahf
lret
arpl
icebp
popf
mov
movsl
adc
arpl
dec
or
adc
or
daa
add
xchg
cmp
rorb
insl
bound
dec
or
or
pop
iret
daa
sub
test
fstpt
push
mov
mov
pop
insb
loopne
in
lahf
adc
cmp
ds
outsl
mov
mov
std
gs
pop
sbb
mov
and
inc
dec
dec
test
cmp
loopne
jbe
or
cmpsl
jle
push
lahf
mov
orb
jle
test
pop
adc
lret
mov
fmul
xor
rorb
or
imull
fistps
jb
dec
sub
xchg
pop
lea
sub
mov
inc
xorb
xchg
dec
fs
jle
scas
ret
add
mov
pop
or
mov
js
push
inc
push
xchg
dec
inc
dec
cmp
mov
insl
mov
repz
jmp
pushl
rcr
shlb
sub
aam
mov
pop
mov
mov
or
pop
lods
scas
mov
sub
sbb
cltd
jb
sub
or
subb
or
test
in
ficomps
dec
mov
mov
daa
jmp
mov
aam
jne
inc
xor
add
mov
imulb
out
in
push
movl
leave
aad
lret
add
push
push
and
pop
test
out
enter
hlt
and
jae
pusha
shl
cwtl
icebp
adc
mov
sub
les
cmc
push
sarb
test
cltd
sar
xlat
xor
mov
jae
scas
mov
and
popf
incb
test
jp
adc
inc
cmp
int3
mov
or
xchg
adc
fiadds
je
xor
in
insl
and
in
mov
insb
adc
lods
shr
loopne
mov
imul
mov
aas
popa
imul
leave
fld
fwait
pusha
fdivr
sbb
in
dec
loope
pop
pop
and
dec
pop
cmp
sbb
out
xchg
addl
cmpsl
aaa
jle
jb
xchg
mov
dec
mov
inc
lods
out
xor
sbb
arpl
and
scas
sbb
sarl
out
dec
testl
inc
mov
lcall
mov
xchg
loop
sub
lea
mov
or
xor
add
inc
adc
rol
mov
push
test
rorb
dec
stos
mov
mov
adcb
push
es
xor
inc
lods
xchg
sbb
pop
sti
mov
and
add
sub
out
mov
cmpsl
push
inc
rcl
or
loope
pop
adc
xchg
loope
notb
rorl
mov
push
loope
add
sbb
loope
dec
aas
inc
mov
push
pop
ja,pn
push
lds
push
add
inc
call
andb
and
gs
fdivs
loop
jb
mov
jae
adcl
push
testb
lds
insl
lock
mov
jg
testb
push
inc
jl
fdivl
pop
sub
shll
jns
xchg
lret
jge
test
or
adc
mov
leave
mov
imul
ficomps
pop
add
lods
mov
in
jne
cwtl
pop
sti
rorb
loop
in
add
pop
enter
push
pop
mov
in
jbe
jle
movsb
loopne
pop
jl
ret
repnz
xchg
rcrl
xchg
je
movsb
ror
pop
pushf
rorl
jp
sub
mov
enter
jbe
ret
shlb
adc
pop
mov
test
call
movsb
test
inc
mov
lcall
rorb
xor
jne
addb
push
xchg
xchg
test
sbb
cmpsb
call
mov
cmp
gs
dec
inc
repz
in
xchg
shll
pop
jno
sarl
dec
push
cmp
push
ret
add
xor
into
push
push
inc
enter
insl
ret
ret
sbb
ljmp
mov
sub
call
in
lahf
or
mov
pop
push
out
outsl
push
mov
add
lock
in
mov
push
fisubrl
enter
stos
mov
movsb
xor
lret
cmp
push
imul
fwait
mov
repz
push
gs
jecxz
fwait
mov
hlt
mov
negl
mov
mov
dec
xorb
hlt
test
jmp
jo
nop
cmp
inc
icebp
xchg
aaa
pushf
push
adc
in
shll
jnp
xor
adc
mov
rcrb
adc
shrl
ja
dec
xchg
out
das
mov
sahf
pop
incb
ja
adc
add
adc
add
or
je
jmp
das
mov
push
call
and
into
cmp
loope
mov
movb
mov
fdivs
movsb
mov
sarl
mov
add
dec
mov
mov
sub
mov
aam
out
lcall
movb
loop
push
out
mov
jg
mov
mov
adc
cmp
adc
test
jmp
mov
push
jns
push
adc
dec
ss
lahf
stc
outsl
mov
jg
cmp
out
imul
cltd
je
jnp
dec
cmpsb
into
mov
push
mov
in
sub
cmpsl
ja
xor
dec
loop
shll
cmpsl
test
int3
pop
sbb
in
jns
fnstcw
lock
jecxz
adc
js
test
sub
add
loopne
xchg
adc
dec
inc
les
lds
push
clc
fnstsw
scas
gs
inc
movsl
fmul
or
mov
repz
imul
sub
mov
sub
add
sbbb
stos
cli
in
xor
pop
daa
inc
and
das
mov
mov
xor
and
stos
or
pop
add
mov
frstor
fs
dec
pop
cmp
mov
movsb
xchg
into
mov
xchg
mul
push
jle
pusha
push
test
lock
in
xchg
xor
dec
push
dec
add
mov
loop
les
push
es
fisttpll
xlat
movsl
xchg
sbb
daa
test
cmc
xchg
or
test
outsb
fstpl
popa
adc
rsm
ds
stos
pop
les
push
jmp
jl
cmpsl
sub
subl
adc
shl
xchg
int3
add
dec
pusha
shlb
scas
repnz
push
jl
mov
movsl
sbb
mov
addr16
xor
das
inc
outsb
mov
jns,pn
clc
push
push
push
aas
xor
push
data16
adc
mov
lds
dec
rcr
jns
xor
xor
adc
addr16
sbb
cmp
add
fcoml
insl
sbbb
sub
shr
dec
aam
fstpt
inc
mov
stos
cmpsl
int3
test
pop
in
mov
mov
into
jmp
aaa
pop
cmp
dec
pop
not
sub
pusha
jecxz
addb
movsb
jp
jp
bnd
aam
push
data16
ss
inc
jne,pn
fsubrs
xchg
in
mov
or
jp
and
and
imul
cmp
popf
ja
mulb
leave
lret
and
insb
dec
sub
shlb
add
out
sub
imul
xchg
int
sbb
and
mov
lret
shlb
fisttpl
mov
or
sub
jo
jmp
pusha
rclb
and
xchg
add
cmp
and
xor
clc
rol
lcall
pop
pop
aaa
xor
or
push
dec
fnstenv
cmp
dec
aad
xor
cmpsb
inc
jmp
in
push
xchg
js
inc
pop
mov
push
pop
shlb
rolb
jnp
push
add
and
add
push
sbb
adc
mov
push
jmp
divb
add
shrb
in
les
push
jno
insl
jbe
in
xor
jmp
push
mov
mov
shll
inc
jge
or
and
icebp
sti
pop
lcall
testb
in
push
test
mov
repnz
sub
ss
or
add
push
xchg
sub
push
fistpll
xchg
mov
cwtl
sub
sbb
fs
pop
fstpl
inc
fmuls
mov
loopne
add
jbe
sar
into
rcl
add
int
pop
xchg
pop
mov
movsb
test
mov
repnz
mov
es
add
imul
bound
push
lret
mov
stos
repz
mov
daa
popf
dec
pushf
and
lahf
loopne
push
filds
pop
and
mov
sub
xorl
xor
loopne
mov
pop
call
jge
mov
stc
cwtl
push
ja
shlb
int
or
pop
xlat
jp
sbb
mov
les
push
stos
mov
cs
pop
out
dec
sub
nop
xchg
jb
enter
roll
loopne
xchg
fwait
loope
in
cltd
adc
loop
or
mov
and
xor
out
jmp
pop
ret
jbe
add
pop
jbe
fstps
xor
fwait
popa
xor
cli
push
arpl
lahf
call
add
add
jb
int
pusha
nop
dec
dec
xor
sub
enter
and
sub
ja
or
in
push
or
daa
int
hlt
jle
jge
enter
dec
sahf
js
pop
daa
fdiv
idivl
or
or
xlat
mov
jb
cld
andb
outsl
sbb
pop
push
adc
pop
lret
add
pop
rcl
mov
xchg
push
test
popf
inc
inc
jg
and
jp
inc
shrb
dec
leave
mov
lahf
arpl
out
add
or
pop
cmp
push
mov
dec
repnz
hlt
or
es
mov
jecxz
push
mov
dec
aad
adc
movb
xor
add
insb
cmp
sahf
das
and
mov
jbe
xchg
mov
add
rcrl
repz
jbe
iret
pushf
out
inc
call
je
xchg
lods
fucomi
push
bound
wrmsr
sub
and
push
mov
mov
or
mov
lds
orb
or
or
or
and
rcr
test
in
jecxz
fcomps
push
and
add
fistl
test
das
ja
aam
lcall
pushf
push
movsl
sub
push
push
adc
dec
adc
inc
shrl
inc
mov
xlat
add
insl
mov
cmp
pop
adc
inc
inc
cltd
add
push
jne
and
bound
mov
jg
in
sahf
jg
lods
out
lahf
pop
arpl
aas
xlat
aad
imul
jns
cld
mov
nop
in
loop
sbb
stc
outsb
sbb
mov
push
jno
sbb
lret
push
dec
das
cmp
nop
aaa
pop
cmc
mov
pop
mov
pushf
stos
pop
jno
insl
cmpsl
mov
jl
test
aam
cld
cmp
out
sbb
xchg
sarl
cltd
lret
shll
or
xorl
lds
scas
adc
leave
sub
ljmp
out
push
push
andb
ss
out
push
hlt
sub
pop
movb
sti
adc
xchg
call
mov
mov
ret
xchg
add
imul
jecxz
cmp
icebp
cmp
mov
das
xor
or
ss
cmp
aas
xchg
dec
or
call
jo
cs
fadds
jnp
ss
aam
jns
in
push
or
xor
outsb
movsl
mov
pushf
xchg
cwtl
test
shrb
test
mov
xor
inc
or
sub
add
fbstp
xor
pop
in
out
push
dec
xor
dec
sub
mov
std
inc
icebp
cmp
push
pop
arpl
push
lods
inc
mov
adc
nop
push
mov
sbb
leave
rcr
push
or
jnp
shlb
inc
shlb
cmp
repz
push
bound
xchg
out
test
nop
add
lds
shrb
or
fstps
daa
jae
rcr
fstps
sbb
push
loop
popf
imul
sarb
push
mov
insl
lods
loop
or
gs
dec
xor
xchg
ljmp
aaa
sbb
in
push
fdivrs
xor
je
mov
roll
test
scas
rep
xor
mov
add
sarl
lcall
jle
lret
test
aaa
pop
icebp
cmp
test
stos
mov
dec
dec
mov
push
out
mov
sbb
inc
mov
mov
push
cmpsb
mov
callw
dec
dec
fldenv
add
enter
adc
dec
pop
dec
popa
cmp
repnz
add
pop
push
ret
popf
or
imul
insb
fsubs
mov
xchg
mull
adc
dec
push
pop
popf
cld
xor
fiaddl
pop
jecxz
int3
fs
mov
dec
jne
ss
sahf
enter
push
add
or
sarl
in
inc
pop
mov
int
pop
fstps
jmp
cwtl
or
jne
add
ss
pop
stos
sar
cmpsb
leave
stos
lret
and
or
sub
fadd
lods
jp
sbb
xlat
repz
outsl
fwait
das
adc
xchg
out
test
mov
adc
fdiv
sbb
adc
das
pop
add
inc
je
enter
int3
ja
out
jns
inc
xchg
push
int3
adc
in
adc
test
push
adc
mov
xchg
mov
cltd
fwait
in
loopne
xchg
pop
test
filds
loopne
fisttpl
xchg
push
in
jno
mov
pop
repz
adc
push
movsb
mov
ja
out
popa
mov
sub
fbstp
cmpsl
daa
mov
or
test
sti
push
push
jns
and
jo
pop
imul
jo
inc
in
mov
adc
popf
and
pop
jmp
iret
jnp
inc
test
and
mov
mov
pop
daa
xchg
pop
les
out
cmc
cmp
rorb
ja
xchg
mov
jl
adc
or
sti
jne
pop
sbb
ret
andb
pop
ss
lods
and
cmp
call
inc
inc
jg
popa
ret
mov
outsl
sbb
inc
mov
push
adc
dec
jo
out
sub
inc
xlat
mov
roll
mov
mov
jp
mov
push
inc
stos
pusha
cmp
mov
jbe
pop
jge
pop
adc
xchg
ds
add
cli
jecxz
enter
lret
and
fwait
add
xchg
jo
or
cmp
cmp
push
or
sti
andb
cli
mov
shl
fabs
inc
push
mov
cmp
dec
cltd
loope
dec
dec
xchg
add
push
aad
loope
loopne
inc
jge
xchg
sub
mov
gs
pop
xor
mov
mov
loope
push
xchg
add
adc
add
clc
mov
mov
or
subl
addl
fstp
mov
add
or
sbb
jecxz
out
xor
xchg
xchg
push
shlb
aad
int3
sbb
in
sbb
dec
sub
aad
je
push
inc
movsb
es
mov
js
fnstcw
insb
pop
loope
fisubrs
xadd
addb
jns
jge
dec
nop
bound
out
imul
aam
lods
xor
pusha
dec
rcrb
or
stc
popa
adc
int
ja
stc
daa
dec
mov
inc
cmc
push
sub
cmp
pop
sbb
and
add
dec
or
ret
out
jge
sbb
push
cmpl
mov
mov
jbe
ret
xor
test
pop
idivl
mov
adc
xchg
cmp
cmp
loopne
stos
arpl
jmp
add
inc
mov
sarl
dec
jb
fsubrs
clc
mov
sub
push
cld
stos
inc
mov
mov
out
nop
dec
popf
sub
fstps
pushf
mov
clc
push
inc
aaa
and
mov
ss
adc
mov
rorb
xor
insb
mov
inc
dec
mov
jp
pusha
call
adc
pop
cmp
js
mov
lods
mov
or
lea
outsb
shlb
fisttps
push
dec
outsl
in
movsb
je
fcmovbe
in
loop
inc
ret
aad
cmp
mov
out
inc
mov
sbb
mov
les
xorl
and
pop
push
outsb
push
outsb
in
mov
dec
int
mov
cmpsl
idivb
insb
or
loope
jp
leave
mov
mov
pop
fsubs
add
push
sahf
or
inc
xchg
stos
jp
push
inc
rorl
in
inc
fadds
fisubl
and
xor
test
and
mov
mov
cld
cmc
jno
jbe
push
sub
ss
ss
pop
fwait
and
movsb
fsubrl
inc
in
cmp
push
xor
and
xchg
clc
imul
movsl
add
push
mov
icebp
push
add
sub
pop
xor
cmp
jp
jecxz
jg
outsl
and
push
sub
lds
mov
std
and
mov
les
jecxz
sbb
loopne
xchg
xchg
mov
inc
mov
fs
jp
sbb
lea
push
sbb
mov
arpl
mov
and
cli
stos
lcall
cmp
or
or
push
inc
int3
push
xor
pop
cmpsb
fiaddl
push
out
jmp
js
or
loope
jp
push
push
ret
and
jle
lods
adc
jecxz
and
mov
fldt
xor
das
addl
test
nop
icebp
adc
mov
mov
adc
jnp
cmc
inc
xor
jg
adc
pop
cwtl
sbb
jne
test
jecxz
mov
cmp
mov
decl
cmp
push
pop
inc
mov
je
adc
loope
out
mov
xlat
jg
in
pop
xor
ficomps
stc
add
test
cs
dec
mov
push
sarl
aas
inc
arpl
sub
xor
ds
mov
int
jl
rcr
mov
mov
dec
push
adcb
lahf
jno
jl
cmpsl
daa
mov
pushl
xor
jecxz
inc
jmp
mov
test
mov
dec
pop
ljmp
jo
ror
lock
js
ljmp
lahf
xor
push
arpl
fimull
xchg
pop
addr16
outsl
andb
jno
dec
fdivs
stos
scas
adc
popa
shll
adc
mov
jmp
xchg
movsl
inc
jo
movsl
ds
inc
cmp
xor
mov
xor
test
cwtl
jns
std
xor
xor
popa
jge
jecxz
dec
cmpsb
cmc
call
pop
lret
xchg
cmp
sarb
adc
sbb
inc
dec
movsl
mov
movsl
test
aas
jle
push
pusha
and
int
mov
stos
inc
mov
inc
adc
into
sub
and
gs
fldl
dec
scas
out
aas
xor
aas
out
hlt
dec
cmpsb
incl
add
mov
fwait
sub
xchg
adc
loopne
add
and
jg
mov
jne
decb
pop
lret
jb
jnp
rcrb
fs
call
mov
mov
aad
movsb
xor
xchg
arpl
imul
jae
or
jp
pushf
push
int
push
movsb
outsl
mov
xlat
xchg
push
es
pop
clc
cmp
call
push
mov
push
repz
and
jl
push
adc
adc
movsl
flds
gs
out
add
or
dec
imul
mov
pushl
sub
psraw
sub
lods
in
nop
fiadds
fsubl
sub
mov
loop
mov
mov
sub
push
popf
gs
dec
add
xchg
ds
loopne
roll
mov
les
enter
mov
mov
mov
punpckhwd
sub
lahf
sub
and
add
rcll
pop
push
adc
in
sub
or
pop
xor
and
in
inc
mov
mov
sub
aaa
imul
lods
and
pop
sar
inc
or
fisubrs
js
dec
sahf
mov
rcl
and
inc
jmp
pop
sbb
dec
sbb
cmp
std
or
jge
lock
cmpsb
mov
or
and
cmc
sub
push
stc
add
lret
inc
loopne
cmpsb
mulb
mov
xchg
jmp
push
subl
mov
mov
adc
lods
push
data16
dec
mov
mov
sti
jne
cmpsl
gs
mov
and
dec
lods
inc
shl
js
xchg
jge
inc
ljmp
daa
movsb
ret
pop
add
aam
xchg
leave
test
and
ja,pt
dec
and
sti
je
sbb
pop
ljmp
imul
add
outsl
neg
gs
sarb
mov
sbb
cwtl
mov
sbb
lods
shlb
fwait
push
insb
xor
jl
or
jae
pop
out
push
jmp
test
cmpsl
mov
cmp
adcb
sahf
cmpsb
test
mov
repz
inc
add
and
lret
addb
inc
dec
stos
pop
cmp
mov
aas
mov
push
jle
call
xchg
sar
inc
sub
into
cmc
mov
pop
push
into
nop
pop
in
xchg
sub
xorl
out
ret
push
faddl
out
and
inc
idiv
xchg
mov
cmp
pop
repnz
sahf
outsl
ror
sub
fidivs
mov
insl
aam
ljmp
aas
shl
adc
mov
jbe
pop
cli
dec
jp
inc
cwtl
movsl
and
repnz
xor
dec
es
pop
rcl
inc
push
sahf
mov
inc
cmp
mov
and
test
pop
shll
call
cmpb
pop
pop
pusha
dec
int3
mov
jno
and
inc
sub
inc
outsb
sub
faddl
sub
leave
sbb
scas
enter
out
pop
or
ret
and
pop
inc
push
sub
test
sbb
inc
gs
icebp
push
or
stc
pop
pop
call
jno
jp
jae
mov
in
xor
out
pop
insb
test
into
das
xchg
loopne
inc
imul
pop
sbb
push
jecxz
push
rcrb
in
mov
pop
scas
ljmp
add
ficomps
dec
and
gs
shll
mov
push
in
dec
xlat
xor
inc
data16
mov
jge
sarl
push
sub
inc
insb
mov
sbb
hlt
xor
sbb
mov
xchg
mov
in
jae
repz
stos
mov
mov
dec
das
mov
mov
shlb
push
mov
lcall
sub
cmpsb
push
mov
pop
insl
adc
xor
loope
mov
popa
addr16
insl
push
lret
pop
xchg
sub
mov
test
xchg
jno
clc
xor
jno
imul
es
and
adc
aad
mov
lods
xchg
pop
rolb
mov
cltd
sub
in
div
add
in
cmpsl
and
add
mov
mov
push
test
rcrb
mov
sahf
mov
fimull
cmpsl
rorl
and
mov
arpl
mov
repz
add
mov
sbb
mov
pop
scas
add
mov
sahf
xchg
cmpsb
inc
int3
addr16
cs
out
or
imul
ret
das
repnz
adcl
fldenv
in
subb
push
cmp
pop
dec
nop
mov
adc
push
mov
stos
in
push
inc
or
and
lea
mov
lods
aad
xor
mov
dec
stos
pop
sub
push
sti
scas
sub
inc
xchg
std
cmp
jge
cmp
divl
dec
push
inc
or
out
subb
les
push
out
mov
stos
testb
mov
incl
mov
hlt
mov
pop
mov
and
mov
mov
pushf
or
out
push
push
mov
push
jle
mov
mov
lahf
pop
clc
xchg
dec
sbb
jns
addr16
shll
je
hlt
scas
pop
adc
and
and
out
xchg
popf
add
ror
jo
andl
sahf
ljmp
lds
cmp
in
mov
adc
dec
sti
jg
shl
jl
sbbl
pop
lret
or
and
push
lods
dec
or
test
push
xchg
lock
inc
xchg
cmp
and
lock
push
xor
sbb
add
sbb
push
add
leave
sti
outsl
mov
mov
lds
mov
and
into
and
aaa
pop
push
iret
stos
mov
scas
aaa
or
icebp
push
xlat
pop
sub
cmp
enter
leave
nop
xchg
ficomps
fldenv
in
and
cmc
xor
pusha
loopne
pop
jmp
rolb
imul
inc
movsb
outsl
inc
aas
repnz
ret
xadd
sysret
push
cmpsb
sub
cmp
mov
lret
dec
mov
rcrl
push
das
cld
les
loopne,pt
ss
out
mov
enter
push
push
leave
in
and
pop
push
ja
imul
roll
scas
loopne
adc
inc
andl
or
push
dec
mov
and
adc
out
jne
and
jne
aaa
push
jno
cmp
mov
scas
mov
mov
jae
cld
xchg
call
scas
addl
mov
adc
cli
mov
cltd
enter
jmp
pop
mov
add
imul
inc
test
mov
push
rolb
fisttps
xor
xorl
loope
mov
lahf
das
sub
xchg
jl
dec
out
mov
fimuls
pop
aaa
mov
aas
mov
jb
jbe
mov
int
nop
popf
cltd
and
mov
inc
sub
xor
arpl
scas
popa
stos
dec
xlat
iret
fldenv
push
ret
sbb
outsl
inc
andl
or
adc
add
into
jbe
jo
movsl
icebp
xchg
mov
test
sarl
mov
cld
xlat
push
lret
sub
lock
push
xchg
xchg
mov
stos
lret
aad
orb
movsl
adc
xchg
inc
inc
lock
or
cmpsl
mov
es
cmpsl
idivl
and
leave
aaa
adc
notb
popa
cli
ror
daa
dec
int3
jmp
pop
ljmp
lret
push
test
repz
inc
sub
das
push
mov
inc
cmp
pop
push
xchg
sbb
popf
push
imul
repz
jmp
adc
int3
insl
pop
dec
outsb
addr16
aaa
mov
inc
int
xchg
push
dec
xchg
sbb
addl
sub
cs
cli
popf
lea
pop
test
stos
jnp
mov
lret
push
imul
cmc
call
adc
out
mov
adc
inc
stos
fxch
cmpl
scas
and
stos
rdtsc
and
pop
xchg
mov
jecxz
loope
lret
mov
loopne
aas
mov
mov
lods
hlt
adc
repz
fwait
push
test
dec
xchg
mov
je
jno
or
adc
jae
fidivrs
aas
sbb
addr16
adc
adc
andl
test
mov
leave
lahf
negl
stc
jne
pop
loop
push
in
mov
sbb
and
lods
or
imul
sbb
orb
pop
fs
mov
cmp
lret
pop
xchg
cmp
shrb
orl
cmp
stos
repnz
xchg
dec
jnp
and
shll
xor
in
pop
mov
cwtl
dec
push
xor
adc
mov
push
add
fidivs
add
popf
adc
push
int
call
lahf
or
test
inc
sub
pop
nop
repz
repnz
inc
jnp
jp
loope
mov
mov
sub
push
pop
stos
fucomp
mov
cs
iret
mov
mov
jecxz
scas
pop
push
ds
or
jnp
and
adc
mov
test
cs
push
mov
aaa
and
cltd
jecxz
fisttpl
lock
cmp
pushf
icebp
push
test
lods
pusha
push
addl
cmpsb
out
test
aas
sbbb
pop
inc
sti
mov
push
ja
pop
repnz
test
mov
adc
dec
int
loop
mull
mov
aaa
adc
xchg
pop
shll
icebp
sub
imul
xlat
jl
sahf
jb
sbb
jae
aam
fidivrs
in
loop
out
xchg
adc
or
out
sbb
shr
insl
jae
popa
inc
rorb
stos
aad
insl
ret
dec
shlb
aad
and
pop
cmp
and
sub
mov
xchg
ud2
xchg
cmp
repnz
fldl
cmp
rcrb
mov
in
jns
sub
sbbb
dec
cli
arpl
xchg
push
shll
push
push
lcall
cmpsb
or
in
es
int3
and
lea
fs
xchg
cltd
cltd
rclb
jno
mov
or
jge
jo
jecxz
mov
aad
test
xchg
nop
fcoml
addl
into
out
movsb
stos
or
int
mov
adc
lret
in
cltd
adc
icebp
lea
into
xchg
adc
rcr
dec
loop
adc
cmpsb
loopne,pt
jmp
jne
inc
jge
adc
movsb
out
mov
jmp
gs
pop
xor
dec
inc
sbb
jg
push
jb
decb
lods
nop
outsb
movsl
or
loop
cmp
and
mov
inc
or
sub
ss
test
cmp
sbb
lods
dec
pop
mov
cmp
lahf
scas
push
mov
and
fs
divl
push
fsubrs
inc
and
fs
int3
cmp
dec
or
cmp
std
mov
xchg
xorl
xchg
push
inc
adc
pop
pusha
test
and
sbb
mov
or
cltd
jecxz
dec
dec
jg
and
dec
mov
call
shr
xor
cmc
shrb
je
sub
ljmp
cmp
push
test
and
xor
dec
scas
push
push
outsl
adc
inc
and
push
fwait
adc
ret
and
sti
lods
mov
push
icebp
insl
scas
pop
pushf
and
or
dec
jbe
push
adc
sbb
sub
aad
pop
repnz
aad
sub
inc
cmp
add
pop
mov
pop
push
pop
add
add
pop
xchg
sti
inc
mov
cmp
jl
pop
iret
stos
stos
mov
push
scas
rcrb
addb
movsl
sub
sub
addr16
fsubs
add
and
mov
cmp
inc
xorl
xlat
cmpsb
mov
mov
or
jle
adc
adc
movsl
insb
dec
divl
push
int
je
xchg
push
orl
aaa
roll
aaa
stc
les
and
dec
jge
je
repnz
ss
jge
mov
mov
sbb
jecxz
out
fisttps
mov
movb
or
bound
sub
xchg
and
xchg
inc
xor
lcall
xor
das
inc
adc
pavgb
in
jge
jge
rorb
pop
jb
js
dec
nop
push
pop
jge
mov
cmpsl
mov
fnstcw
pusha
mov
push
dec
repnz
aad
fldl
gs
out
addr16
push
daa
ljmp
fimuls
inc
je
push
nop
testl
sbb
mov
adc
fcoml
xor
add
sbb
add
mov
mov
or
in
stos
xor
outsb
push
xchg
and
sbb
add
cmp
pop
mov
data16
jbe
popf
jo
iret
lcall
aam
mov
pop
jl
push
lods
in
pop
iret
addr16
and
lds
push
jno
cmp
fcmovne
xchg
inc
adc
leave
jge
fnstcw
notl
or
into
repnz
jl
mov
mov
mov
push
adc
adc
dec
add
xchg
subb
add
and
jg,pn
ds
and
xchg
mov
out
aaa
jmp
je
pop
fcomps
into
and
and
lcall
jle
lret
jp
rcll
lock
sub
mov
addb
pop
push
jo
sbbb
pop
dec
fstps
push
add
ret
xchg
hlt
pop
shrb
dec
je
inc
daa
or
popa
hlt
sub
or
jmp
test
pop
sbb
std
push
cs
cmpsl
inc
sub
jge
xchg
adc
mov
lahf
aad
daa
loop
sbb
and
pop
sub
jbe
lock
xlat
outsb
daa
cli
adc
adc
xchg
push
inc
cmp
int3
and
xchg
scas
cwtl
les
sbb
jmp
call
mov
push
pusha
into
shrl
xchg
cmp
cmc
sbb
cli
xor
enter
hlt
cmp
movsb
pop
xor
mov
ljmp
and
roll
imul
xchg
fldenv
js
lds
sub
mov
outsl
andb
mov
dec
in
cli
jle
cltd
xchg
sub
aam
mov
adc
pop
pop
add
xchg
mov
pop
lahf
scas
addr16
adc
xlat
mov
imul
sbb
push
xor
testl
sbb
mov
sbb
add
push
xor
mov
mov
push
mov
mov
sbb
dec
insb
scas
call
xchg
jge
clc
and
mov
pop
or
xchg
xlat
das
mov
pop
fsubp
fwait
push
out
idivl
add
scas
lcall
pop
gs
lcall
and
mov
mov
je
pop
loopne
mov
lods
pop
push
or
enter
inc
ss
adc
loopne
rcrl
inc
loop
icebp
and
int
in
sti
lock
xchg
push
mov
mov
mov
test
imul
mov
xchg
es
icebp
xor
jbe
shll
adc
adc
je
int
lods
adc
gs
das
mov
stos
loop
add
mov
nop
mov
or
neg
enter
dec
push
mov
push
hlt
mov
push
mov
jnp
sbb
ds
xor
pop
inc
xcrypt-cbc
cmpsl
push
push
mov
lcall
pop
cmp
stos
js
push
add
out
in
lock
into
cmpsl
dec
adc
jecxz
cli
mov
cmp
push
adc
push
sbb
mov
mov
push
stos
movsl
repz
mov
mov
adc
add
mov
xchg
cmp
mov
sbbb
xor
inc
xchg
pop
divb
movsl
in
outsb
je
daa
test
or
stos
adcl
mov
xchg
xlat
into
xchg
shll
dec
xor
push
mov
testl
and
adc
ja
push
daa
mov
ret
dec
adc
aad
rcll
jmp
pop
daa
imulb
movsb
push
leave
or
sbb
js
movsl
dec
lcall
xchg
add
and
inc
mov
mov
popf
mov
xchg
adc
enter
and
pop
mov
scas
pop
jp
sub
xor
sbb
and
xor
pushf
jo
fidivl
shlb
addr16
jns
xchg
cs
ja
or
aam
notb
inc
mov
cli
or
ss
fldl
jge
into
sbb
lret
fiaddl
sub
jl
pop
ret
ret
dec
push
dec
sbb
clc
ljmp
push
push
shlb
mov
insl
push
sub
jo
test
sbb
cmpsb
stos
dec
pop
lcall
negl
cltd
insl
shl
clc
dec
push
xchg
loope
ss
and
rorl
and
and
sar
xchg
xchg
inc
gs
sarb
sbb
and
xchg
je
rclb
jb
and
out
xor
jnp
divb
adc
cwtl
out
fisttps
outsl
pop
lods
mov
cmpl
rcr
sbb
pushf
sub
dec
cmc
mov
mov
xchg
cld
daa
push
and
lret
push
and
or
ret
jecxz
rcl
popf
cli
push
adc
sub
sarb
test
data16
pop
stos
dec
xor
pop
call
lds
rcrl
add
into
xchg
lahf
pop
sbb
imul
inc
pop
orl
ja
insb
rcll
adc
inc
lret
int
jo
mov
jo
jno
or
push
jg
dec
cmc
pop
clc
in
mov
push
lea
in
fsubrs
pop
adc
inc
jnp
sub
mov
sub
inc
dec
pop
mov
xchg
mov
cld
imul
pop
cld
das
iret
gs
xor
int3
cmp
es
clc
lods
nop
adc
sti
cmpsl
pop
mov
push
and
xor
lods
mov
scas
sbb
lea
jnp
lds
lds
out
aad
mov
js
lds
dec
mov
sub
stc
cmp
loopne
xchg
pop
mov
pop
sbb
sbb
xor
sbb
pusha
mov
ficompl
rorl
jmp
out
movb
mov
cmp
call
es
mov
add
or
inc
and
and
das
in
xor
rcl
or
push
sub
jecxz
jns
sub
fs
loopne
and
or
and
xchg
and
fistpll
sbb
xor
and
les
dec
lret
jl
cmp
imul
orb
or
and
pop
stc
and
jne
rcrb
ljmp
jp
or
add
dec
jg
fsts
ljmp
outsl
arpl
cld
and
jne
lea
jecxz
jp
and
out
fwait
stc
sbb
in
je
pop
enter
xchg
lcall
and
xchg
dec
fistl
sub
pop
pop
cwtl
mov
push
fcmovne
push
and
mov
inc
or
inc
push
movsb
lret
pop
mov
lcall
and
nop
fidivs
push
ds
sbb
add
push
lock
jbe
cmp
mov
mov
sbb
scas
pop
mov
test
xor
rorb
jnp
dec
jp
mov
movsb
popf
or
mov
popf
dec
in
sub
leave
out
imul
repz
lods
scas
and
xchg
cld
add
ficoms
pushf
adc
adc
js
push
or
sbb
test
and
pusha
or
fdiv
pushf
dec
sub
cmpb
push
in
push
push
enter
or
fldcw
aas
mov
dec
inc
sub
jecxz
inc
mov
gs
sbb
xchg
ret
cmp
cmp
mov
xor
decl
call
mov
out
stos
xor
lock
jns
cmpsb
xchg
sub
add
out
jns
ret
das
test
cmp
stc
outsb
push
jbe
jge
jl
xor
test
add
aas
sbb
mov
mov
gs
pusha
stos
push
dec
popa
jbe
xchg
add
test
pushf
leave
cmpsl
icebp
add
cmp
lock
add
aaa
mov
sqrtps
and
push
inc
ljmp
popa
xor
adc
js
jns
push
leave
jmp
pushf
add
inc
jnp
ret
std
sbbl
repz
and
push
loope
aam
xchg
mov
scas
and
pop
les
enter
iret
mov
test
fdivrp
lock
adc
inc
inc
cmp
pop
mov
cmpsb
cmp
test
cs
inc
ud1
popa
xor
cs
movsl
cs
cmpsb
lds
data16
mov
jmp
loopne
out
cmp
test
mov
jg
mov
scas
loopne
aas
ds
fdivl
inc
mov
push
mov
inc
jle
fs
pop
sbb
xchg
fildl
xor
ret
ds
cli
ret
les
or
mov
daa
mov
adc
xchg
pop
or
addr16
xor
mov
sbb
sarl
push
xor
mov
cmp
movsb
stc
mov
rcrb
in
ret
sub
sbb
aaa
jb
mov
movsl
xchg
pop
xchg
xor
loope
sub
xchg
rcr
lods
and
push
insb
cmp
adc
mov
xor
cmp
mov
and
sub
lret
fs
adcb
lret
gs
xor
stos
pop
scas
xor
add
adc
jp
adc
and
sti
pop
cltd
cmp
push
mov
jg
aad
hlt
jle
je
xchg
mov
add
int3
orb
mov
mov
je
xor
sub
mov
or
test
out
lds
inc
jg
sahf
sub
outsb
sbb
movsl
pushf
je
cs
cli
inc
call
push
fwait
out
cwtl
int
ret
jo
xor
sti
mov
push
fcmovb
sbb
jnp
and
lock
fwait
sbb
dec
pushf
fstl
fwait
mov
jns
mov
or
cmp
into
xchg
push
add
push
or
pop
aas
mov
in
in
dec
jae
jl
cmc
fisubl
adc
add
enter
sub
add
xchg
fcompl
cmp
orl
std
pmaxub
pushf
dec
loop
xchg
clc
push
in
sbb
mov
mov
sub
push
out
xchg
repnz
mov
lret
scas
cmp
xchg
and
int
addl
xchg
push
idiv
test
movsl
cmp
addr16
xor
xor
mov
fwait
mov
fldt
sub
or
movb
mov
fisubrl
add
dec
int
fistl
mov
dec
dec
movsl
push
cmp
scas
flds
outsb
rclb
push
std
inc
loop
int3
and
sub
push
scas
jle
or
repnz
cmpsl
test
push
imul
insl
pop
add
push
sbb
dec
xor
and
or
and
scas
sti
out
mov
pop
and
dec
cmpsl
sbb
xchg
pop
les
push
hlt
pop
or
add
mov
dec
jno
lret
sbb
pushf
mov
pop
inc
popf
mov
cmp
and
scas
mov
inc
rolb
insb
add
inc
sbb
mov
xchg
imul
push
pusha
or
xchg
pop
add
insb
lea
test
movsl
inc
mov
test
rolb
push
movsl
pop
addr16
sbb
inc
sarl
nop
idiv
loope
sbb
fnstenv
inc
dec
les
push
mov
repnz
out
push
cmp
into
jbe
mov
add
aas
lret
loope
jmp
cs
sbb
and
shlb
xchg
and
cmp
or
jae
dec
out
push
inc
les
push
push
out
fcomip
lcall
xchg
rclb
test
dec
je
clc
push
jp
mov
rclb
lock
imul
inc
test
pop
jp
dec
and
ja
xchg
insl
lahf
cmp
sbb
sarl
xchg
dec
push
mov
aad
xchg
mov
pop
add
imul
int3
push
test
pushf
cmovs
mov
repz
mov
xlat
pop
cmpsl
aaa
mov
inc
addb
mov
sete
adc
jbe
push
ret
push
out
xchg
add
in
adcl
cltd
mov
ds
cmc
xchg
sub
ret
xlat
push
add
inc
loop
cmp
dec
pusha
jae
pusha
mov
sub
sti
mov
nop
mov
or
adc
in
fnstcw
push
jne
jne
inc
test
aam
test
jo
cs
sub
cwtl
ja
inc
and
mov
push
sbb
adc
push
repnz
lock
aaa
sbb
arpl
aas
hlt
push
jge
ret
call
and
ljmp
scas
dec
inc
test
adc
push
aas
push
sub
clc
cmp
movsl
sub
lds
lret
jae
xchg
jo
fnclex
imul
xchg
test
adc
adc
jb
popa
add
popa
mov
push
xchg
cmpsl
push
push
dec
arpl
into
imul
out
imul
sbb
out
inc
push
push
add
pop
push
lods
cmp
adc
xor
sub
add
aaa
fmuls
add
pop
fsubs
jns
xchg
fidivrs
test
and
rcr
aad
cmp
adcl
scas
jle
fadd
movl
dec
pop
inc
jle
ja
jmp
mov
mov
mov
adc
xor
dec
je
ja
mov
bnd
les
adc
jle
inc
or
or
mov
mov
mov
dec
lret
cli
add
imul
mov
or
fildll
das
lea
pop
sarb
xchg
ja
inc
mov
pop
sbb
pslld
filds
cli
xchg
dec
push
mov
sbb
mov
in
and
jns
daa
mov
push
pusha
jbe
pop
lods
test
cltd
popf
inc
out
add
setl
aas
mov
clc
cld
xor
sahf
xchg
clc
xor
mov
fs
ffree
stos
mov
mov
mov
or
mov
mov
pop
nop
xchg
iret
add
lds
or
xchg
lret
call
shlb
jp
jne
decl
push
push
sbb
inc
add
inc
orb
rclb
lods
xchg
mov
ret
inc
testb
xor
sbb
adc
les
ljmp
push
jae
and
ret
sub
inc
les
sub
out
icebp
fsts
imul
jo
xor
jg
movsb
out
rcrb
pop
mov
cmp
in
jbe
fneni(8087
out
push
xor
jg
fnstsw
mov
cmp
int3
cwtl
push
xchg
or
cmp
pushf
or
lock
loopne
shlb
ficoms
xor
loop
xchg
push
xchg
push
popa
in
and
scas
idivb
add
push
mov
jno
push
push
xchg
or
lods
xchg
out
aam
sub
decb
mov
push
pop
mov
les
and
adc
fstpl
push
push
cwtl
fstps
mov
jle
dec
dec
inc
lcall
nop
lret
push
jg
arpl
enter
insb
cmp
insl
mov
inc
push
gs
adcl
rcr
jle
xchg
lods
sub
cmpsb
addr16
mov
jle
rdpmc
sub
int3
cmp
inc
into
addr16
push
pop
cmp
sub
sub
pop
xor
mov
in
cmpsl
inc
jns
fyl2xp1
jp
xchg
cmc
mov
fwait
add
dec
iret
je
int
in
mov
in
test
das
lret
and
xor
cmpsb
repz
aam
and
outsb
cli
jge
xor
jae
sbb
mov
xor
jns
loopne
jns
dec
stos
inc
sub
test
in
out
sub
push
inc
insl
mov
nop
mov
inc
in
mov
sbb
dec
cmp
nop
adc
insl
add
inc
frstor
xor
lret
and
pop
repnz
add
lcall
scas
cmp
fcoms
inc
rcll
xlat
fsave
das
push
shrb
pusha
aaa
xor
stos
pop
dec
int
push
jecxz
test
mov
mov
sub
or
inc
mov
jo
nop
push
sbb
fs
adc
push
loopne
mov
mov
jle
inc
mov
adc
lret
and
fdivp
aam
mov
xchg
rol
dec
es
out
ljmp
mov
out
or
in
mov
sbb
loope
outsl
and
inc
roll
fistpll
mov
mov
cmp
push
mov
cld
inc
xor
jmp
mov
push
insl
repz
mov
es
add
and
cmpsb
xor
mov
pop
stos
push
xor
pop
fwait
sub
adc
aaa
outsb
xlat
jno
jbe
in
jp
xchg
leave
lcall
lock
les
test
push
mov
sbb
pop
outsl
fs
cld
insl
cmp
int3
xor
xor
adc
mov
std
mov
adcl
push
std
mov
xchg
pop
mov
add
sub
mov
inc
adc
insb
dec
adc
pop
mov
test
popf
cmp
and
cwtl
shrl
shrl
push
or
push
fnstcw
rolb
dec
inc
mov
adc
in
sbb
sbb
jg
add
push
cld
sbb
sbb
jg,pt
in
sub
mov
into
pop
mov
jmp
mov
push
lds
test
sbb
movsl
and
int
inc
sub
in
js
cmpsb
push
jbe
sahf
pop
leave
add
push
loop
rcrl
pop
and
pop
push
or
stos
in
mov
nop
ss
add
movsb
dec
jge
mov
mov
pusha
fcoml
daa
ss
ljmp
mov
decl
xchg
fbld
sahf
pop
xor
mov
xor
add
xor
and
sbb
lea
dec
mov
push
sbb
mov
mov
mov
test
pop
test
cmpsb
mov
mov
pop
mov
adc
stos
xor
inc
ss
and
int3
lret
lds
lcall
xor
mov
inc
mov
arpl
lcall
add
or
inc
xchg
mov
sub
adc
lahf
loope
in
push
loop
xor
cmp
cli
ja
dec
xchg
sub
xlat
popa
or
and
push
movsb
mov
rorb
mov
add
jge
xorb
stc
fldcw
stc
cmp
sub
mov
push
lahf
inc
push
ret
inc
jno
repnz
addl
push
push
cli
movsl
push
int3
aad
push
fs
pop
dec
jl,pt
push
sub
dec
aad
push
mov
cli
add
mov
jl
out
adc
lret
mov
lock
dec
lahf
fld
divb
andb
jo
jge
mov
jmp
je
lods
push
adc
lea
repnz
adc
push
loopne
pop
xor
jmp
scas
jp
leave
pusha
push
xor
and
cs
rorl
fucompp
sbb
xchg
mov
call
push
js
cmp
xchg
leave
push
pop
popa
in
mov
adc
jns
call
add
xchg
movsl
in
inc
ja
jne
adc
flds
sbb
mov
out
aam
test
and
xchg
and
out
jno
inc
jecxz
enter
repnz
and
pop
mov
dec
repnz
or
xor
inc
aad
add
push
jg
xor
pusha
jmp
fbstp
inc
or
iret
call
clc
outsb
in
sti
rorl
cmp
mov
or
jb
push
add
neg
jo
pop
and
outsl
inc
iret
imul
push
aam
subb
xchg
push
cmc
sub
add
shrb
lret
cmc
dec
jge
cmp
sahf
xor
loope
out
mov
and
lds
fnsave
dec
rclb
add
movsb
xor
imul
pop
pop
andb
dec
mov
test
in
or
push
jg
nop
push
pop
lahf
sti
jno
xchg
xchg
jecxz
and
int
aaa
lea
in
ljmp
out
mov
adc
ret
dec
out
pop
repnz
or
addr16
pop
pushf
mov
or
push
std
adc
mov
xlat
int3
fs
sahf
sub
mov
fistpl
pop
sbb
sarl
sub
push
cmp
ja
cmp
sar
das
cmp
cld
out
dec
cmp
mov
lcall
cmp
arpl
sub
into
sub
inc
movsl
and
jbe
jge
popa
scas
jge
mov
adc
lret
push
add
mov
cmp
dec
daa
call
push
mov
adc
mov
mov
cmp
cmp
xchg
mov
cs
cmpl
dec
fisubs
mov
inc
xchg
xchg
ja
sti
sub
gs
push
dec
cltd
jmpw
pop
jge
scas
jle
test
cli
jge
leave
popa
sub
lret
iret
cli
insb
sbb
sarl
dec
je
not
xor
leave
data16
mov
add
das
mov
mov
in
repnz
mov
mov
rclb
cmp
ret
mov
cmc
in
aaa
inc
icebp
xchg
mov
mov
push
call
das
pop
ret
adc
push
insb
and
lahf
add
adcb
ss
push
das
popa
jg
sbb
inc
push
insb
hlt
xor
mov
orb
dec
jle
jg
sub
outsl
std
push
ss
js
cld
rcr
pop
mov
xchg
push
add
insl
jnp
ffreep
xchg
orl
bound
test
mov
push
out
mov
adc
xchg
inc
or
inc
push
call
jnp
and
push
pop
repnz
icebp
insb
and
fcmovnbe
roll
inc
inc
mov
cmc
pusha
push
xchg
dec
xchg
popa
inc
inc
prefetch
lcall
rcrl
icebp
inc
dec
sbb
lret
idivl
mov
les
mov
fs
daa
mov
aas
movsb
shlb
jb
pusha
cmp
loop
subl
rclb
stos
xlat
cwtl
push
repz
xor
mov
jmp
ficomps
std
iret
mov
xchg
jecxz
fmull
les
fadds
scas
lret
push
fwait
outsb
pop
sub
test
sub
hlt
add
stc
ret
out
loop
lret
call
jnp
divl
pop
fidivrs
mov
sub
mov
daa
mov
mov
out
cld
icebp
into
lret
mov
sbb
push
mov
or
jnp
cmpsb
cltd
push
aad
sbb
push
sub
mov
cmp
and
mov
mov
mov
and
lods
and
sub
lds
loopne
out
inc
fstpl
stc
lods
iret
jecxz
jae
cmp
sbb
subb
mov
into
sbb
jne
dec
push
adc
mov
lock
fbstp
rol
xor
lods
push
int3
mov
cltd
xor
xchg
fwait
sub
int3
or
movsb
xchg
push
std
jne
mov
push
mov
mov
jo
push
sub
scas
scas
sarb
outsb
add
sbb
outsb
xchg
adc
sub
xchg
les
js
mov
sti
arpl
into
fwait
mov
push
sar
in
adc
in
sub
dec
lea
mov
jl
mov
pop
mov
xchg
cs
inc
mov
xchg
stos
out
leave
jnp
push
cmc
xchg
sub
enter
psubd
mov
xchg
emms
xor
or
outsl
pop
incl
lods
mov
inc
lahf
in
lds
push
xchg
mov
adc
mov
and
xchg
cltd
jge
addr16
push
mov
adc
lahf
adc
jle
div
sbb
add
lahf
add
stc
sbb
fwait
add
dec
jecxz
pop
pushf
cmpsb
mov
mov
rcll
sbb
jbe
pop
ljmp
orl
popa
lret
pop
jnp
pop
cld
inc
test
inc
dec
mov
and
sub
push
mov
dec
loope
int3
ljmp
xchg
xchg
and
daa
mov
jb
jle
xchg
xchg
push
push
loope
jl
jge
pop
test
aad
inc
in
outsl
rcrb
mov
jnp
push
fimull
ss
push
and
inc
xor
mov
or
stos
popa
notl
imul
sbb
and
lock
std
lods
fmulp
ficompl
adc
addr16
sub
pop
cmc
test
or
and
sbb
add
xor
lods
add
pop
mov
lea
inc
jb
push
lahf
mov
les
inc
xor
jecxz
push
cli
pop
push
subb
dec
inc
movsl
repz
test
adc
sub
loop
or
int3
cmc
mov
push
sbb
sbbb
adc
adc
stc
pop
or
mov
adc
inc
lahf
push
test
mov
mov
ljmp
or
lahf
iret
mov
es
aad
and
sbb
sbb
test
aas
and
testb
test
popf
push
lahf
lods
lods
dec
push
cmp
cmpsl
data16
inc
and
adc
jge
cld
call
or
adc
into
jge
xchg
pop
or
es
mov
mov
cs
ret
test
dec
or
jg
in
sub
movsb
mov
divb
nop
add
and
mov
incb
sbb
scas
xchg
cltd
xchg
ljmp
popf
mov
mov
push
mov
sbbb
fwait
mov
int3
xchg
sbb
mov
enter
shlb
sub
jmp
pop
shl
out
movsl
aas
adc
js
cmpsb
cmpl
or
or
xchg
jmp
and
dec
pop
pop
lods
repz
popa
incl
xchg
mov
rcl
mov
and
sbb
cli
in
ds
and
sbb
jb
sbb
lahf
shlb
sar
jg
dec
out
xor
cli
cmp
adc
adc
sbb
je
cld
daa
add
into
lds
mov
xchg
cli
lods
inc
mov
shl
in
dec
ret
dec
push
das
lods
or
mov
std
mov
mov
xchg
scas
sub
xor
push
adc
sub
xor
lret
idiv
dec
int3
inc
jmp
stc
mov
xchg
push
jno
mov
loop
pop
aad
ret
xor
das
scas
cmp
mov
lea
or
mov
hlt
mov
dec
ret
lods
in
pop
push
push
arpl
cmp
dec
hlt
mov
rolb
stos
test
sub
and
imul
sahf
xchg
cmp
loop
inc
add
es
cmpsb
push
stos
pop
test
test
stos
ror
dec
int3
cmp
sbb
mov
stos
dec
lret
xchg
jmp
sti
sbb
mov
dec
inc
leave
jecxz
mov
mov
jne
roll
sub
cmp
adc
sahf
adc
adc
jmp
sti
cs
aaa
jg
push
xchg
pop
enter
mov
jno
sub
add
filds
repz
mov
loop
jmp
dec
adc
mov
cmp
hlt
pop
cmc
jecxz
add
repnz
nop
and
fs
push
enter
nop
out
sub
sub
mov
out
sub
es
test
lcall
mov
hlt
jnp
cmc
cmp
scas
dec
addr16
mov
cmp
sub
pop
jns
aam
cmp
lahf
icebp
sbb
adc
aad
test
loop
enter
mov
int
push
jp
push
addr16
inc
jecxz
jg
push
adc
in
stos
loope
pop
or
dec
lds
mov
xchg
invd
or
mov
pop
andl
push
push
cmp
neg
add
adc
mov
fstps
movsb
repz
jl
arpl
push
push
sub
test
lods
push
movsl
xchg
cwtl
jmp
fcmovnbe
add
dec
push
daa
mov
data16
xchg
sbb
push
lods
add
in
jne
pop
push
xor
jnp
les
adc
aad
adc
cmp
mov
cmp
stos
dec
add
mov
lds
shl
add
pop
jl
jge
mov
pop
pop
jge
lret
ret
outsb
pop
fwait
lods
push
ret
int3
sbb
push
and
pushl
cmc
mov
xchg
mov
lret
insb
outsl
xchg
ret
sub
inc
dec
mov
std
orb
cmpl
cwtl
adcl
inc
repnz
inc
loopne
sub
jbe
stos
cmp
xor
mov
mov
pop
cwtl
pop
test
cmp
lret
aaa
push
ss
js
hlt
outsl
sar
addl
mov
decb
mov
push
push
lret
pop
sbb
ds
dec
fnstsw
cmpsl
sub
movsl
and
push
inc
aad
mov
pushf
inc
fdivs
fs
sti
fwait
push
imulb
scas
push
andb
jle
jmp
iret
out
xor
or
pushf
fs
int3
repz
push
jecxz
lret
push
xor
rclb
push
mov
xchg
mov
add
push
mov
adc
fbld
add
xor
fidivrs
addr16
loope
xchg
mov
jns,pt
es
gs
pop
pop
or
sbb
cwtl
sahf
sbb
pop
add
dec
mov
xchg
int3
sti
pushf
out
enter
nop
cmp
cs
jns
mov
arpl
das
mov
sub
stos
out
pop
pushf
xchg
dec
jp
jne
mov
mov
repz
aam
adc
mov
in
loopne
xchg
into
enter
sub
pmaxub
xor
cmp
repnz
sbb
js
imul
into
mov
jno
loop
and
cmp
icebp
cmp
xchg
adc
sub
pop
mov
aam
mov
iret
shlb
sbb
jae
rorb
mov
cltd
aaa
loop
xlat
mov
xchg
jno
jge
lret
push
out
and
imul
jp
xlat
sbb
sub
sub
lahf
loopne
mov
je
jmp
jo
pop
stos
mov
xor
push
stos
iret
adc
js
insb
rclb
aam
push
dec
arpl
fdivrp
shlb
imul
cmp
stos
insl
scas
outsb
aad
into
test
rcll
jp
outsb
fcomps
xchg
xchg
mov
push
sub
sarl
jns
lods
insl
lods
dec
mov
pop
shll
movsb
sbb
scas
addr16
inc
jp
jg
or
into
push
jnp
xchg
jb
fstl
fldcw
arpl
pop
sub
dec
lretw
mov
mov
mov
aad
clc
in
jbe
cmp
lahf
test
jmp
inc
int
sub
push
popa
insb
fcomps
test
lock
push
mov
mov
mov
out
mov
and
xorb
add
mov
lcall
add
sarl
mov
inc
outsb
or
and
enter
sarb
dec
mov
xchg
jo
dec
jmp
add
in
mov
jmp
or
pop
in
or
movsb
push
or
dec
inc
push
movsl
js
xorl
mov
lds
and
lret
scas
scas
mov
ror
sbb
fistpll
fidivs
push
mov
shlb
jp
cwtl
jns
sub
mov
sbb
iret
mov
xchg
jecxz
pushf
fucomip
cltd
jmp
das
inc
dec
cmp
cld
fucomi
jmp
pop
mov
or
fwait
adc
fistpl
xor
xor
jno
xor
jns
repz
loopne
je
mov
test
add
jmp
mov
in
mov
mov
pop
mov
mov
and
fcmovb
push
sbb
inc
or
xor
cmpsb
fwait
mov
ja
sarl
xor
call
mov
mov
int
and
and
aaa
sub
int
sbb
fstps
insl
or
ror
mov
sahf
adc
jmp
into
es
push
mov
incb
xchg
mov
dec
pop
ljmp
mov
jno
shl
xchg
dec
lret
in
sbb
push
add
add
adc
adc
xchg
sub
scas
jo
orps
int3
pushw
test
ret
push
leave
pop
shrb
jp
std
and
iret
mov
es
cmp
jmp
add
pop
mov
add
jb
adc
push
and
inc
aam
xchg
mov
xchg
cmp
fsubp
aam
jae
pusha
mov
scas
xchg
mov
arpl
lret
aaa
pop
jmp
test
das
and
or
xor
repnz
pop
aas
fnstenv
inc
and
in
sbb
dec
loop
dec
mov
dec
mov
inc
test
or
lret
and
jp
xchg
or
xchg
jge
idivl
dec
jnp
adc
fwait
mov
push
jae
jno
stos
push
aaa
mov
mov
add
lret
cmp
and
orl
mov
push
mov
sub
xor
inc
lret
jecxz
mov
cmp
ljmp
lahf
movsl
adcb
sub
fsubrs
outsl
cmp
mov
fisttps
jno
test
mov
testl
and
fs
adc
dec
popa
fs
xor
mov
jle
and
inc
popf
xchg
jmp
ds
es
pop
lret
sbb
or
in
loopne
loopne
mov
mov
pop
dec
xor
or
adc
pop
notb
adc
xlat
int
ljmp
mov
cmp
push
arpl
mov
or
popa
jecxz
shrl
dec
leave
sub
push
jnp
jg
xor
outsb
bound
sbb
outsb
inc
adc
loop
test
shll
sbb
xchg
insl
mov
sbb
and
hlt
stos
sub
jmp
pop
xor
xchg
push
out
mov
push
adcl
add
jo
cs
stos
les
mov
jmp
dec
je
mov
dec
cmc
push
xchg
out
das
test
in
mov
lea
mov
push
insb
and
pop
mov
inc
fsubs
jns
xchg
negl
jne
out
rolb
testl
ja
mov
imul
xchg
in
pop
sub
loopne
test
iret
arpl
fcmove
pop
popf
push
adc
mov
pop
js
xchg
jb
mov
cmpsl
scas
into
stos
dec
inc
sbb
loopew
js
add
cli
mov
pop
mov
adc
fcmovbe
add
xor
mov
inc
inc
jbe
gs
arpl
cmc
cmp
call
repz
mov
iret
pushl
pop
adc
jle
in
cmpsl
mov
imul
subl
mov
xchg
jmp
clc
test
push
adc
cwtl
cli
je
cmp
aam
pushf
cld
jnp
jg
loope
inc
and
jg
stos
or
push
mov
push
inc
add
jle
shlb
xchg
cltd
xchg
cmpl
jg
clc
dec
cltd
leave
mov
jne
in
das
popf
or
xchg
flds
push
mov
sub
cmpl
loope
dec
xor
dec
in
lret
iret
iret
fwait
clc
cld
jno
mov
into
add
mov
lret
mov
stos
push
js
ss
pop
add
in
das
repz
lcall
jp
stc
popa
jae
fisubs
shlb
sub
lds
or
out
cld
and
clc
ja
repz
stos
pop
add
cmp
lea
sbb
aad
inc
push
cmp
std
sub
jae
push
mov
test
pop
mov
push
sub
call
xchg
into
sub
xchg
sbb
out
mov
out
roll
sbb
mov
cmp
mov
or
or
scas
out
std
testl
negb
imul
xor
jo
pop
pop
sarb
dec
pop
fwait
sbb
mov
xor
rol
out
mov
sbb
shlb
sub
pop
cmp
adc
push
dec
mov
out
inc
lods
cltd
outsb
loopne
xchg
or
dec
loop
std
dec
xor
cs
imul
mov
adc
outsb
push
in
stos
pop
mov
mov
int3
xchg
loopne
out
mov
pop
int3
jne
xchg
divb
stos
xchg
decl
push
pop
push
ljmp
ja
cltd
sbb
cmpsl
cli
dec
sub
aam
es
dec
in
jnp
les
in
pop
dec
adc
sahf
ljmp
je
xchg
outsl
cmc
test
push
and
push
lcall
js
movsb
pop
mov
mov
cs
icebp
popf
icebp
ja
popf
sbb
mov
sbb
xchg
stc
les
pop
xor
xchg
add
in
fcompl
adc
movsb
xor
push
mov
xchg
fiaddl
or
call
lock
lret
xchg
xlat
jp,pt
lcall
jp
mov
int3
ljmp
mov
insl
push
sbb
mov
add
fs
leave
jmp
mov
jmp
inc
rcrl
mov
and
xor
mov
ja
cmovbe
mov
pop
outsb
ljmp
out
out
mov
and
jbe
inc
stos
fwait
cmp
push
out
fsub
push
adc
xor
mov
aam
pop
inc
mov
mov
sbb
cmp
fnstcw
outsl
sbb
mov
push
xor
aaa
insb
rclb
sbbb
fwait
les
mov
mov
adc
adc
dec
in
cld
jnp
mov
adc
lock
test
or
add
pop
repz
lds
pop
adc
pop
frstor
jno
mov
sub
icebp
arpl
xchg
enter
sub
imul
stos
int
xor
and
idiv
lcall
out
adc
xchg
jl
test
repnz
push
mov
dec
xchg
mov
loopne
loope
cmpsb
cld
out
mov
inc
mov
add
cld
mov
jns
adc
sahf
cltd
imul
xor
push
sub
or
stc
ret
mov
stos
inc
push
fs
popa
pop
shlb
addr16
dec
das
andb
pusha
xor
and
mov
and
mov
pop
loop
inc
push
fs
in
out
scas
rcll
add
cmpsl
push
fsubr
push
daa
jae
test
in
jle
sub
dec
imull
xchg
mov
push
ret
test
cmp
je
icebp
cmp
jnp
bound
xlat
mov
adc
insl
adc
test
stos
inc
cli
or
lods
jl
push
loop
dec
stos
shll
mov
adc
addr16
pop
sbbb
in
aad
mov
mov
into
lods
pop
repnz
push
icebp
jp
sub
fwait
dec
insl
test
ljmp
mov
jl
inc
or
mov
outsb
lcall
or
jg
mov
dec
cmp
cmp
loop
jl
lock
test
roll
push
xchg
ljmp
fmuls
and
dec
int3
repnz
cmp
inc
mulb
jle
shlb
xor
test
mov
adc
jge
sbb
icebp
call
fisttpll
test
dec
out
xlat
pop
adc
pop
lea
push
pop
push
iret
pop
repnz
jl
or
cmp
mov
repnz
je
insl
ret
or
jbe
add
fldln2
sub
and
arpl
mov
insl
adc
mov
imul
cmp
mov
lock
ret
das
pop
lock
loop
subl
test
subb
cwtl
loop
fbld
or
push
andb
dec
mov
push
ret
jl
push
scas
mov
enter
inc
jmp
xor
and
cmpsl
enter
insb
iret
aad
cs
imul
fistps
cmp
sub
mov
cld
frstor
push
fmuls
in
sub
loopne
shl
mov
adc
mov
and
or
loop
nop
dec
jge
int3
pop
jbe
mov
js
mov
int
jnp
mov
loope
mov
xor
es
adc
jmp
xchg
inc
mov
sub
inc
imul
xchg
sbb
test
pop
rcrb
fbld
cmpsb
jns
cmc
call
xchg
mov
mov
sub
outsb
and
loop
lods
in
sahf
fcmovne
cmpsl
mov
je
jb
jg
ret
frstor
pop
scas
cmp
popa
sbb
in
fidivs
stos
push
or
jno
out
stos
in
mov
pop
xchg
in
push
sub
mov
push
pop
cmp
cmp
sti
mov
jno
cmp
test
pop
push
mov
mov
sub
inc
repnz
lret
jns
scas
lods
rorb
jmp
lahf
push
lahf
in
test
out
std
subb
cmp
inc
and
xchg
movsb
mov
mov
dec
lods
or
stos
xor
cmp
jle
popf
cli
aas
mov
loop
cmp
in
movsb
pushf
movsl
xchg
xchg
xchg
je
dec
cs
inc
aad
mov
int3
jae
dec
xor
sub
bound
add
adc
shlb
cmp
cld
out
in
add
lock
mov
inc
into
movsl
pop
shl
divl
loop,pn
xchg
lret
ljmp
out
test
jnp
and
push
out
test
push
add
movb
loope
pop
shlb
xor
push
push
jae
out
test
lea
out
sti
mov
cmp
push
sahf
aad
cmpsl
push
bound
xchg
pop
adc
cwtl
pop
insb
cmc
push
sbb
xor
fisttpl
jecxz
sahf
bound
clc
sub
pop
enter
pop
cmp
cli
jae
jl
cmc
inc
mov
push
pop
loop
les
cltd
jle
lock
ss
mov
inc
jne
pop
imul
mov
sti
dec
subb
xchg
stc
clc
flds
push
add
pop
dec
lock
mov
add
cmpl
lahf
lahf
mov
pushf
pusha
pushf
scas
mov
mov
leave
sub
mov
scas
lret
pop
cmp
sub
mov
mov
out
in
clc
divw
pop
das
shl
fildll
pop
xor
sarl
in
orl
into
notl
inc
sti
testb
mov
pop
imul
sarl
push
push
sbb
enter
fstsw
mov
pusha
ret
add
int
jns
jns
lret
insb
inc
adc
add
xor
mov
orb
xor
push
xor
jns
nopl
lds
xchg
stos
roll
xchg
pop
jns
mov
push
push
xor
cmp
push
jbe
dec
mov
out
jle
cs
pop
jns
fcmovnbe
push
pop
stos
xor
add
outsl
pop
aad
das
adc
cmp
inc
mov
pop
je
leave
dec
inc
jge
mov
shl
pushf
inc
outsl
js
sbb
enter
ror
pop
inc
imul
cmc
pop
mov
sbb
pop
fwait
cmp
cmp
or
dec
imul
frstor
in
bound
add
gs
push
out
dec
jmp
mov
mov
std
insb
rorb
dec
mov
adc
jae
jmp
pushw
enter
pop
add
add
outsb
pop
jbe
sti
sub
xlat
sbb
ss
arpl
or
std
rcr
xor
dec
int
in
mov
mov
mov
or
aad
nop
aam
xchg
ds
mov
push
lods
bnd
push
loopne
and
repnz
popa
pop
leave
shrb
out
cmpsl
mov
pop
sub
andl
fldenv
mov
push
jnp
push
dec
mov
idiv
fnstenv
pop
pop
push
adc
xchg
imul
cmpb
loope
dec
rcll
sub
or
pop
ret
movsl
mov
mov
jmp
xor
shrb
add
cmp
nop
fldt
imul
icebp
inc
test
mov
jp
mov
rorb
jno
mov
lea
xor
push
jg
cmp
and
xor
mov
into
cmp
xchg
sahf
subb
popf
aam
adc
sahf
test
jmp
enter
jb
xor
les
rcrl
stos
lea
pop
mov
sub
mov
decl
fildll
pop
fsts
sar
jmp
sub
inc
pop
hlt
movsl
xor
pop
mov
popf
shlb
pop
mov
adc
cmpsb
xchg
es
mov
sbb
add
pop
cmp
jae
in
push
and
jb
and
push
xor
lcall
xchg
in
dec
incb
cmpl
jo
repz
and
out
push
mov
xchg
xor
loop
add
and
lock
add
int3
cmp
sub
sub
cmp
sub
icebp
push
shr
sarl
lcall
in
rcr
jae
cmpsb
imul
ss
adc
mov
sub
std
pop
pop
je
call
adc
xchg
mov
sbb
jecxz
xchg
dec
ja
mov
mov
repnz
pop
insb
into
ds
or
scas
pop
out
pop
jae
push
pop
out
scas
lret
mov
stos
xchg
push
decl
inc
xor
jnp
and
les
jns
cmp
mov
mov
cli
jo
aas
int3
xchg
pop
ljmp
xor
call
mov
mov
cmp
ret
incl
xchg
mov
add
adc
test
pop
sbb
xorb
or
or
cmpb
dec
adc
jg
mov
out
jl
xor
stos
inc
dec
sub
mov
add
mov
add
push
or
cmp
pop
ja
movsl
arpl
rol
jbe
and
popa
lods
inc
add
dec
movsl
in
rolb
lret
dec
add
aad
pop
ss
jno
jbe
shlb
cwtl
inc
xor
jmp
xlat
mov
pushf
pop
jb
lret
js
mov
dec
cli
aaa
pop
fisubs
outsl
test
mov
push
or
mov
mov
jle
adc
pushf
xchg
adc
mov
shl
xchg
fdivs
and
dec
clc
ret
scas
jmp
cmovbe
inc
and
loop
loope
stos
in
mov
iret
fisubrl
adcl
mov
xorl
and
adc
jp
hlt
mov
sbb
mov
pop
sub
ficoml
and
pushf
dec
push
push
push
out
sbb
lret
lods
in
mov
jle
je
nop
lods
sarl
ljmp
jmp
loopne
out
notl
push
cli
xchg
jl
out
pop
aas
pop
loopne
mov
or
xchg
or
out
mov
mov
daa
in
and
incb
jp
inc
pop
in
fildll
movsb
cmpsl
or
sar
add
cld
xchg
loope
inc
adc
inc
repz
lock
mov
add
cwtl
test
cmp
or
enter
pop
orl
inc
nop
fbld
icebp
ds
fnstsw
addr16
ja
repz
adc
jp
adc
jbe
xchg
adc
sub
mov
daa
and
xchg
iret
xorb
fldt
mov
in
jnp
adc
xor
pop
mov
hlt
xor
jge
lcall
aad
and
in
data16
sarb
jp
push
lcall
pushf
mov
sub
and
dec
jb
cs
and
loopne
lock
sub
test
aam
jo
xchg
imul
add
or
or
add
aaa
test
sub
cmp
fs
and
dec
mov
or
es
cld
divb
mov
xchg
cmpsl
out
sub
mov
xchg
inc
cltd
popa
addl
xor
out
jecxz
add
or
rolb
and
jbe
cmp
xlat
pop
cltd
insl
mov
es
orl
jge
jae
cli
jg
shrb
lds
mov
sub
mov
daa
pop
call
sahf
ss
mov
jecxz
test
je
adc
lret
jecxz
andb
xchg
xor
int3
or
mov
sti
icebp
movsl
mov
aam
fwait
pop
loopne
cld
mov
fldl
into
jl
sub
jge
mov
ret
test
scas
adc
int
cld
stos
inc
xor
pop
dec
scas
or
pop
push
lcall
jmp
aas
movsl
stos
cwtl
xchg
push
or
outsl
insl
pop
cmp
adc
push
xor
stos
cltd
jne
and
shll
adc
cltd
push
mov
mov
test
jnp
repnz
pop
test
mov
testb
inc
stos
shll
jl
inc
jbe
or
jge
mov
adc
fidivrl
sbb
movb
mov
mov
pop
stc
cmp
ss
loope
sbb
cmpsl
lahf
data16
pop
mov
mov
xor
lcall
ret
cwtl
lahf
ret
xchg
inc
adc
scas
ljmp
in
dec
dec
scas
pop
ja
fdivl
stos
negb
xchg
sub
out
adc
mov
mov
fwait
pop
stos
jnp
lods
mov
fwait
jge
push
mov
inc
test
inc
push
mov
pop
mov
and
subl
cmp
cmp
mov
jge
sbb
popa
neg
movhps
add
jecxz
shl
pushf
arpl
cmp
hlt
adcb
fs
jl
lret
mov
ror
fisubrs
sbb
xor
test
loop
test
xchg
stc
or
aam
dec
fsubs
cmp
fsubl
lahf
mov
sub
imul
stc
xor
jmp
and
jmp
int3
imul
ja
out
inc
loopne
adc
xor
arpl
lods
test
xchg
mov
mov
inc
int
pop
push
fdivr
sbb
out
shll
fiaddl
jnp
pop
pop
fistpl
hlt
mov
test
sub
jmp
popf
mov
imul
dec
mov
and
and
pop
add
sbb
pop
sub
fsubrl
ficomps
aad
inc
cmp
mov
lcall
addb
cmp
fcmovb
jp
or
mov
inc
aas
xchg
jp
std
idivl
lods
out
jb
add
scas
in
aas
rorb
mov
mov
test
lods
mov
notb
cmpsb
adc
stos
inc
xor
outsl
pushf
ss
inc
cmp
fwait
pop
or
xor
ret
inc
xchg
inc
ljmp
adc
fwait
cli
xchg
lock
jno
cmp
nop
jne
dec
mov
fiadds
gs
in
inc
sbb
xchg
leave
in
outsl
hlt
or
shl
icebp
hlt
mov
es
dec
test
in
leave
and
out
inc
incb
sub
imul
adc
int
movsl
or
push
fsubp
divb
in
adc
orb
push
iret
push
addr16
inc
ret
cli
inc
jnp
or
sub
add
pop
mov
dec
leave
xchg
push
push
mov
jbe
ja
dec
pop
and
cmp
ja
cmovs
out
ficomps
dec
jae
imul
mov
loop
mov
outsb
pop
and
loope
jle
insl
sarl
dec
jg
xor
xchg
xchg
push
push
jb
mov
enter
in
es
mov
leave
cmp
test
mov
sub
cmovs
mov
pop
out
sbb
addl
jnp
pop
inc
xor
adc
adc
clc
pop
rcl
stos
or
add
test
fisubl
add
cli
cltd
or
aad
jg
jne
cmpsl
add
jns
add
aam
xchg
fs
loope
negb
cmc
cltd
imul
sbb
es
adc
jno
jecxz
lret
xchg
cmc
mov
adc
xchg
and
jo
pop
mov
aas
sbb
loope
int3
xchg
lock
out
jno
pop
dec
lock
dec
push
idivl
or
lock
insl
dec
dec
jmp
mov
and
push
mov
icebp
adc
pop
jl
enter
or
popa
push
inc
cmp
xchg
cmpsl
cwtl
push
sbb
popa
dec
xchg
xchg
ret
rcl
sbb
lcall
mov
pop
or
mov
xchg
jnp
dec
xchg
adc
push
dec
cs
dec
orb
add
mov
fs
stos
fdivrs
mov
out
xchg
mov
inc
mov
fisubs
test
inc
imul
sub
push
adc
loope
or
cltd
in
push
and
daa
loop
int
adc
cmpsl
or
or
fstl
stos
jo
push
aas
push
push
mov
push
xor
mov
repz
add
or
cmc
or
call
xlat
adc
hlt
mov
jno
fimull
mov
jno
add
loop
mov
push
rolb
lds
xchg
or
or
int3
or
cmpsl
pop
lods
shlb
repnz
clc
push
xchg
jno
dec
fs
adc
pop
push
popf
xor
push
or
push
cmp
jp
cltd
cmp
and
cli
jae
jmp
push
int3
fistpll
dec
mov
je
dec
jno
data16
add
rcrb
push
add
cs
dec
push
add
sub
push
in
pushf
mov
jle
popa
pusha
adcb
sbb
mov
mov
sub
inc
mov
inc
add
push
sti
sbb
jge
pop
xor
cltd
mov
enter
or
push
jns
sbb
ret
sarb
ljmp
sub
inc
pop
int
mov
ret
pop
dec
xor
mov
and
insb
rcrb
cs
mov
dec
imul
not
dec
jecxz
sub
pushf
imul
mov
repnz
addr16
xor
mov
mov
xor
inc
jp
push
lds
mov
sbb
popa
popa
adc
repnz
out
int
pop
and
int
add
daa
ret
xchg
jns
cmc
fistps
cmp
repnz
push
pop
mov
xorl
jg
sbb
leave
cmpl
cmpsl
test
mov
arpl
cmpsl
pusha
push
jmp
out
jnp
jmp
sub
lret
lret
sbbb
adc
sbb
iret
adc
cmp
sbb
push
push
ljmp
cmp
stos
xor
sbb
test
rcll
clc
adc
fsubl
cmp
idiv
sub
add
adc
sub
push
scas
push
scas
xchg
cmpsl
insb
cmp
call
or
cmp
add
into
insl
outsb
hlt
pop
mov
xlat
hlt
stos
pushl
jbe
cvttps2pi
adc
das
icebp
or
incl
mov
pop
test
mov
mov
movsl
loopne
mov
subl
and
lods
lock
aaa
in
or
inc
jb
mov
push
das
mov
popf
lock
lds
gs
push
shlb
xchg
cmp
cmp
aad
jae
mov
xlat
push
xor
test
pop
ficoms
pop
loope
ja
mov
mov
inc
jo
test
cltd
cmp
add
pop
jecxz
fcompl
jae
insb
jno
in
adc
pop
cmp
inc
stc
aad
imul
xor
dec
lods
xchg
fsubrp
add
or
cmp
setae
in
jmp
out
push
cli
xchg
shrl
mov
shll
xchg
fwait
push
push
jle
ja
jbe
stos
add
addr16
bound
push
push
lods
leave
push
adc
movsl
mov
fidivs
push
xor
pop
mov
mov
adc
lcall
repz
lcall
and
movsb
lods
mov
add
shrb
dec
cmc
mov
pop
xor
outsl
cs
mov
iret
add
orl
mov
bound
mov
js
in
xor
jo
push
out
das
add
push
movsl
vpmaddwd
shl
enter
fcmovne
adc
mov
ds
mov
xor
movsb
shlb
arpl
ret
imul
lcall
scas
jg
aaa
jmp
mov
fnstcw
ds
mov
xchg
pushw
jns
sub
cmp
xor
mov
mov
fnsave
fists
pop
imul
test
cmp
and
ss
cmp
mov
fmul
out
push
test
data16
xor
test
pop
add
es
and
pop
or
jbe
jl
sbb
int
aam
dec
jmp
sbb
nop
clc
mov
push
scas
xchg
insl
fwait
inc
in
pop
mov
push
lcall
mov
xor
sbb
leave
icebp
jle
fmul
lds
xchg
mov
dec
les
push
or
imul
or
push
pop
or
icebp
inc
xchg
inc
push
jb
inc
adc
push
jecxz
pop
mov
push
jno
repz
xor
pop
into
cmp
or
sbbb
mov
add
imul
add
mov
jecxz
jb
inc
fld
sub
push
pop
dec
lahf
lds
outsl
jmp
daa
out
lahf
xchg
pop
gs
ds
xor
outsl
neg
out
cmp
ret
lods
jo
sbb
ret
aas
repnz
into
aaa
xchg
mov
adc
sub
add
mov
out
in
inc
scas
mov
cmp
xor
mov
ja
popf
shrl
xchg
sbb
lock
aaa
mov
roll
mov
cmp
xor
ljmp
mov
jbe
stc
loope
gs
jmp
shrl
pop
nop
in
fmull
mov
or
lcall
mov
js
push
and
out
mov
sbb
sar
ror
inc
push
aam
push
outsb
dec
jnp
mov
xlat
lods
pusha
adc
out
fs
icebp
loop
data16
sbb
push
cmc
aas
lock
xlat
fs
sbb
jle
into
std
and
cld
jge
adc
jne
lahf
enter
orl
mov
xchg
inc
mov
cmp
lcall
pop
mov
dec
add
xlat
aam
mov
xlat
rclb
mov
jns
out
or
fadds
fwait
je
repnz
xor
shrl
imul
test
xchg
clc
jae
sbb
test
adc
pop
pop
stos
jg
push
jnp
cmc
fld
mov
xchg
lahf
lret
subl
lret
insl
mov
add
mov
add
ret
inc
mov
mov
sub
dec
das
es
aaa
in
add
icebp
add
jl
pop
test
push
mov
lahf
inc
mov
add
or
add
hlt
in
loopne
sarl
jb
mov
outsl
cld
inc
frstpm(287
insl
incl
pusha
lea
fisubs
scas
pop
hlt
jg
shrl
and
lret
pop
jmp
push
fwait
sbb
jp
popf
xchg
repnz
test
fwait
mov
lret
out
adc
mov
out
cli
cmp
pop
mov
jbe
or
fimuls
aam
mov
outsb
stc
in
fcomps
test
cld
and
adc
xchg
cltd
adc
xchg
pop
test
pop
xor
mov
sub
imul
mov
cmc
cmp
arpl
lds
jge
jg
xchg
cmp
xchg
jmp
pop
cmp
int
movb
add
cmp
sbb
mov
cmpsb
pop
pop
lods
outsb
leave
mov
inc
les
dec
and
mov
dec
jge
cmc
imulb
out
jno
mov
cmp
inc
and
popf
dec
movaps
lods
cmc
inc
add
mov
int
xor
es
cli
mov
xor
and
mov
ficomps
out
cmpsb
mov
push
into
loopne
add
or
pop
test
mov
mov
or
xchg
in
adc
lcall
loop
sub
sbb
pushf
push
and
int
adc
jb
insb
dec
pushf
sub
push
icebp
xor
aas
in
out
add
stos
aas
adc
jne
add
mov
inc
jns
mov
arpl
mov
push
outsl
out
aaa
add
push
add
inc
pop
mov
push
adc
cltd
lahf
xchg
and
jns
out
jne
mov
loope
xchg
mov
pop
arpl
loope
loop
xor
sbb
sub
push
cli
leave
jle
sub
mov
and
stc
push
test
fbld
fcmovu
cmp
pop
xchg
addr16
mov
insl
xor
xor
cmp
pop
dec
add
sbb
or
les
and
cs
shl
aad
mov
jno
jno
insb
data16
gs
rorb
adc
xchg
rol
cs
cmp
xchg
or
enter
push
push
popa
xor
jl
sbb
sub
adc
sub
enter
xchg
mov
sti
loope
and
pop
in
les
stc
aas
push
sbb
xor
es
shrl
dec
enter
scas
mov
mov
xor
cmp
xorl
cld
das
scas
pop
xchg
push
loope
daa
clc
sti
sbb
movsb
pop
sub
mov
ja
fidivs
test
int
sub
shlb
adc
inc
add
and
push
xor
leave
xchg
push
push
push
xor
or
lds
repnz
lahf
dec
stos
dec
sbb
xchg
stos
orb
dec
aaa
or
outsl
rorb
aas
push
mov
in
adc
inc
subb
scas
dec
pop
dec
sub
mov
ret
jae
mov
push
cmp
jb
inc
cmp
sbb
jbe
push
sub
lods
stos
cmp
or
sarb
push
jl
insl
and
je
xchg
das
inc
adc
roll
push
outsb
mov
shlb
imul
mov
fcoml
out
xor
push
push
dec
mov
mov
pop
mov
jbe
aas
pusha
out
mov
push
push
mov
xor
inc
push
add
ret
std
mov
sbb
imul
jg
ss
xor
in
rcr
xor
mov
cs
xlat
mov
hlt
jnp
and
lods
lahf
xor
sub
jmp
in
cwtl
cmp
outsb
add
jmp
pop
add
sbb
arpl
mov
iret
rolb
mov
test
movsl
xchg
and
lahf
ret
inc
out
repnz
insl
jl
in
loopne
loopne
and
sbbb
cmp
xlat
xchg
addr16
adc
shlb
xor
movl
and
sub
out
and
mov
fsubrp
cmc
hlt
hlt
jo
ss
xchg
push
mov
fcoml
dec
mov
aas
pop
pop
lret
pop
fnsave
rorb
into
pop
xchg
out
jge
mov
in
out
sbb
or
mov
insl
js
mov
lahf
ja
loop
xchg
data16
mov
xchg
daa
jge
pop
sub
pop
xor
test
sbb
or
aaa
jns
push
mov
jmp
lret
dec
adc
jle
and
arpl
ret
add
sub
pusha
mov
inc
xor
jne
or
inc
popf
sbb
je
mov
xchg
movsb
arpl
mov
mov
mov
cmp
out
xlat
push
testl
inc
subb
xchg
aam
inc
mov
adc
cmp
and
add
int3
hlt
ret
aad
pop
repnz
cmc
dec
test
dec
fildl
mov
add
je
push
jns
mov
data16
aaa
jle
je
inc
mov
fs
cli
cmp
mov
icebp
mov
imul
lock
popf
fistpl
stos
push
mov
sbb
mov
add
or
fldl
mov
add
cwtl
or
mov
or
test
jbe
pop
fwait
pop
dec
out
mov
insl
popa
in
lret
jb
ljmp
cwtl
add
push
bound
es
mov
andb
pop
sub
adc
cmp
call
cmp
popa
in
dec
mov
push
mov
mov
cwtl
mov
push
loop
fstps
dec
mov
dec
test
ljmp
pop
hlt
daa
cmp
shrb
aaa
iret
xchg
rorl
pop
int3
mov
xor
push
aaa
and
enter
pusha
xlat
lds
or
ljmp
sub
stos
add
cmp
mov
jb
inc
inc
dec
or
cmp
test
sbb
and
xor
adc
adc
cmpsl
xor
shll
into
xchg
or
pop
std
xor
cmpsl
mov
pop
xor
inc
pop
cmpl
lahf
pop
mov
adcb
divl
outsb
lds
shlb
and
int3
adc
lcall
dec
scas
test
in
in
push
cltd
mov
mov
pop
push
int
or
cmp
push
mov
jp
jl
push
fsts
mov
lret
sahf
mov
xchg
pop
scas
lods
mov
stos
adc
adc
cli
pusha
test
dec
sbb
popf
dec
inc
push
xor
jns
fnsave
test
movsb
addl
sbb
mov
ret
daa
ret
das
push
dec
inc
jmp
cmpsl
sub
pop
aam
outsl
add
dec
in
je
and
mov
jp
adc
or
pop
andl
mov
xchg
mov
repnz
sbb
push
xor
jns
and
inc
adc
cli
push
fists
jno
mov
xor
lcall
mov
lea
pop
sbb
ljmp
sbb
pop
cmp
in
jbe
sub
pop
mov
pop
dec
cmp
inc
repz
stc
sub
mov
sbb
and
mul
dec
pop
push
lahf
jge
pusha
or
adc
or
das
cmp
mov
outsl
push
js
adc
int3
lret
pop
add
mov
jp
mov
out
call
jnp
lret
sub
outsb
mov
in
pop
pop
loope
repz
push
cli
mov
adc
or
dec
in
jno
pusha
jmp
cmpsb
mov
ret
xor
add
xor
enter
cmp
jle
xor
mov
mov
inc
mov
scas
inc
mov
mov
out
es
jo
pop
pop
dec
sub
mov
mov
sbb
mov
bnd
int
mov
test
incl
sub
add
cli
mov
pop
lea
sbb
aas
iret
mov
cmc
std
fildll
push
jnp
test
daa
and
and
mov
push
adc
sbb
inc
cmp
in
push
ret
lock
shll
mov
sti
mov
ret
jo
dec
mov
push
mov
xchg
pop
mov
pop
mov
es
sahf
mov
test
cmp
add
std
call
adc
shl
mov
sbb
xor
push
pusha
icebp
mov
cmp
or
mov
stc
xchg
mov
add
rcll
cs
fnsave
and
mov
sbb
sarl
shrl
es
dec
and
or
daa
pop
loope
jle
sbb
push
test
lahf
xchg
cli
jnp
sub
ret
cmp
push
fisttpl
fidivs
pop
push
in
pop
jmp
cmp
inc
push
lret
scas
outsb
jmp
nop
in
jmp
ret
sbb
xchg
jo
movsl
sahf
pop
xor
stos
xchg
dec
add
mov
push
mov
outsb
xchg
shl
std
andl
test
rolb
push
mov
dec
cmpsb
dec
call
sub
iret
mov
repz
cwtl
out
ljmp
cmp
mov
movsb
jno
fdivrl
jns
dec
inc
call
ds
jp
js
es
mov
popf
push
jl
fisttps
cmp
xor
iret
mov
mov
jb
ret
dec
pusha
dec
and
les
or
dec
out
cli
das
popa
rorb
xor
mov
stos
and
fdivr
loope
add
fimull
mov
inc
push
cmp
repz
clc
cs
sbb
and
mov
pop
test
jne
lret
or
cmc
dec
ret
pop
sbb
xchg
js
push
jne
lahf
pop
and
push
fcoms
mov
cmc
dec
lds
addr16
aad
insb
push
int3
jbe
sbb
out
cmc
lds
xor
notb
mov
mov
lret
leave
pop
in
inc
out
xchg
in
jecxz
andb
xor
cwtl
dec
mov
sbb
dec
jle
push
inc
mov
pop
push
add
clc
mov
sub
insl
mov
dec
pop
sub
lcall
adc
mov
in
mov
inc
lds
repz
adc
mov
mov
je
push
push
inc
movsb
fldt
cmp
je
sbb
inc
scas
cli
mov
cmp
and
lahf
neg
insl
inc
mov
add
or
xchg
xchg
incl
or
rclb
das
lds
mov
push
push
inc
cmpsb
roll
xchg
push
andb
mov
pop
add
sbb
push
enter
cmp
lea
cmp
repz
mov
push
pushf
fldl
mov
fwait
popf
popa
xchg
jg
loopne
movsl
aaa
mov
test
test
jb
out
sub
cwtl
addr16
mov
dec
sbb
pusha
mov
mov
mov
in
fcoms
mov
push
xor
mov
mov
and
mov
hlt
xchg
adc
sbb
xor
add
fmull
shrb
push
out
mov
inc
jle
add
lods
stc
aaa
ret
xchg
pop
popf
jmp
sbbb
adc
dec
pop
mov
add
adc
adc
or
xor
mov
andl
mov
cmp
negb
shlb
dec
in
mov
scas
js
jnp
stos
scas
mov
lea
iret
add
and
and
cmc
es
repnz
dec
inc
pop
and
sub
pusha
pop
adc
cmp
test
mov
mov
nop
pop
aas
push
xor
xor
xchg
in
js
repz
out
cmp
cmpsb
inc
stc
and
and
outsl
cmpsb
cli
xchg
xchg
stos
imul
int3
xor
fsts
mov
xchg
push
mov
test
dec
mov
pop
add
fstl
popf
push
adc
or
xchg
pop
or
push
and
fildl
mov
into
pop
enter
in
inc
add
lods
mov
pusha
rcrb
xor
cltd
repz
cld
xor
mov
xor
jg
and
into
sub
rcll
lds
shrl
push
xchg
hlt
leave
cmc
movsl
and
mov
out
imul
jae
mov
cmp
jno
lret
dec
enter
subb
in
dec
dec
in
or
incl
pop
aad
in
or
inc
dec
jl
xchg
sbb
cmp
mov
xchg
jmp
sub
sub
idivl
out
mov
fcoms
xchg
sbb
xchg
sarb
pop
mov
sbb
cmpsb
sbb
test
aad
out
aam
lcall
or
adc
sbb
fdivl
imul
popa
clc
in
inc
inc
rolb
int
shrl
jbe
mov
adc
xlat
jl,pn
sbb
mov
sbb
inc
xor
or
sub
sub
push
xlat
xchg
popa
lahf
imul
clc
call
mov
xor
mov
adc
add
xorb
repz
mov
push
sbb
mov
lds
divl
int3
and
fidivrs
ja
test
int
dec
int3
push
repz
mov
negb
mov
fadds
ret
xlat
xacquire
aad
sarl
imul
sahf
fidivl
xorb
and
push
jle
mov
mov
fwait
cli
es
int
ss
adc
dec
int
pop
jne
push
and
push
xor
mov
stc
addb
cmp
fwait
sub
sub
adc
mov
mov
gs
imull
aam
mov
icebp
sbb
cli
mov
mov
std
sbb
mov
dec
cmc
mov
icebp
cltd
jno
or
cmc
insl
stos
mov
iret
sti
sbb
ss
dec
add
inc
mov
lock
inc
mov
mov
sbb
sbb
xor
scas
add
loop
dec
mov
dec
ljmp
push
push
aad
popa
pop
stos
sbb
fdivs
xchg
js
notb
clc
mov
mov
leave
push
push
add
pushf
pop
orl
ror
mov
in
into
arpl
mov
ret
hlt
arpl
cmp
mov
mov
out
popf
cmp
dec
test
imul
prefetch
movsl
mov
cmpsb
stos
sbb
push
lds
mov
pop
rcl
sbb
adc
lds
or
inc
aam
inc
inc
int3
and
or
push
imull
ljmp
jge
xor
push
cltd
sbb
push
in
daa
mov
xchg
pushf
xchg
aaa
addl
movb
fdiv
stos
cmp
sbb
fs
gs
std
jl
enter
into
jns
fadds
mov
lods
adc
fmuls
push
data16
std
gs
mov
shr
or
cmp
sbb
cmp
or
jl
push
test
push
and
pop
mov
cs
mov
and
iret
mov
rolb
or
xor
xchg
xchg
fcmovb
xchg
insb
sub
fs
pop
sar
sub
std
jb
sti
or
mov
enter
jge
dec
fisubrs
and
outsl
into
add
mov
xchg
idivb
dec
rcll
cld
call
mov
push
lahf
cs
das
int
jae
jl
gs
hlt
mov
dec
aaa
mov
pop
mov
repnz
mov
stc
xchg
xor
fisubl
xorb
add
nop
dec
xor
ja
cmp
mov
or
jle
test
rorl
cmp
sub
xor
repnz
mov
dec
mov
inc
enter
xchg
or
add
sahf
scas
leave
or
mov
pop
out
pop
ret
push
idivb
jbe
xor
push
xor
cmp
push
sub
idiv
es
xchg
addr16
jne
cmp
pusha
mov
mov
outsb
mov
xchg
nop
cmp
pop
inc
dec
pusha
aas
cmp
jge
mov
dec
mov
mov
mov
inc
adcb
in
cld
testb
add
into
xor
outsl
push
icebp
in
and
ljmp
adc
fcomp
iret
icebp
jbe
test
ja
repnz
fisubrl
in
call
sub
pop
xchg
xor
jae,pt
jns
andl
enter
and
xchg
fnstenv
cmp
inc
mov
shll
stc
movsb
sub
bound
addr16
mov
push
aaa
mov
dec
inc
lea
imul
out
xor
push
mov
ja
daa
mov
xchg
adc
dec
adc
jbe
sbb
dec
into
inc
push
cmc
lods
js
mov
adc
fistps
sbb
inc
shrl
inc
inc
xor
inc
insb
enter
pop
pop
mov
mov
cmp
lret
mov
dec
gs
push
mov
push
rorl
test
into
xlat
js
sbbb
pushf
or
or
mov
aas
inc
hlt
cmpsl
fdiv
or
push
lods
clc
push
fwait
mov
fisubrs
in
ret
mov
mov
lea
in
jo
push
and
rcll
jg
vcvtdq2ps
add
in
leave
pop
cmpsb
add
cli
pop
mov
repz
jge
jmp
lock
or
ja
jge
ficoms
xchg
outsb
mov
sub
add
pusha
aam
arpl
inc
clc
jbe
push
lds
addb
push
xorb
cli
mov
or
xchg
test
sub
jb
testl
icebp
mov
xchg
leave
fwait
in
lret
cltd
pop
jae
rcll
jg
sub
icebp
pushf
dec
xchg
push
xchg
xor
shll
mov
sahf
and
mov
ret
pushf
sub
cld
cmp
xchg
dec
push
mov
mov
cmp
jae
mov
adc
cmp
ljmp
add
mov
dec
cmp
mov
or
dec
lods
sub
rclb
lahf
test
rcll
aam
pop
into
dec
xor
movsb
and
jns
adc
jo
jge
shlb
inc
xchg
lret
push
xchg
fucomp
jbe
xlat
xor
adc
iret
vmovntdq
out
lcall
divl
mov
or
mov
jle
mov
mov
add
fdivrl
add
loope
bound
mov
pop
rclb
add
and
pusha
iret
andl
xchg
sub
enter
fnstsw
iret
fildl
dec
xchg
insl
addr16
sbb
sub
add
add
or
out
jg
inc
or
add
push
bnd
add
cmp
cmp
movsb
insl
add
cmp
xor
jle
push
sbbb
sub
inc
jns
xor
xlat
int3
mov
aam
and
imul
mov
cld
or
ficoml
sub
lods
cmpl
pushf
fwait
ss
fs
stos
pop
cmc
inc
into
out
xchg
xchg
cs
je
leave
test
shlb
popa
sub
push
nop
jae
cmp
aaa
xchg
loope
or
pop
or
xchg
sbb
fyl2x
jb
push
out
icebp
cld
arpl
sbb
lret
cltd
popf
mov
xchg
and
push
pop
orb
stos
stos
addl
popa
fistps
cmp
out
xorb
scas
xchg
sub
push
add
mov
add
cmp
jmp
mov
cmp
xchg
aas
outsb
xlat
add
push
pop
mov
out
out
mov
arpl
mov
mov
sarb
xor
dec
lret
xorb
jns
adc
jbe
repz
ja
cmpsl
push
mov
mov
and
cmp
adc
pop
js
ret
loopne
cmp
cld
mov
xor
adc
or
loope
pusha
jae
and
popa
imul
mov
stos
ficompl
movl
sub
fst
cmp
cmp
shl
push
sub
dec
cmp
or
rclb
add
adc
cld
sbb
insl
in
mov
pop
icebp
je
inc
mov
hlt
les
cmpsb
test
jge
mov
mov
xchg
mov
push
inc
xor
das
adc
test
mov
filds
mov
jg
das
stc
adc
js
cmc
push
jo
xchg
aas
notb
dec
or
adc
in
mov
jb
ss
push
cs
push
push
mov
sub
int
lock
pop
hlt
inc
jo
fsubl
sbb
pusha
mov
pop
pop
push
xchg
push
sub
jo
popf
xchg
clc
sbb
rol
and
fimull
inc
es
pushf
in
lds
fbld
icebp
add
mov
fisubl
lock
not
inc
push
xor
xor
outsl
add
cmp
scas
outsl
movsb
and
push
push
daa
sbb
popf
xor
mov
pop
pop
mov
lea
cld
xor
xor
popf
mov
aam
adc
pop
mov
sti
jmp
add
dec
jge
cmp
mov
imul
dec
rorl
jb
fmulp
sub
and
test
jmp
pop
sbb
fs
sbbb
cmp
push
js
sahf
call
fisttpll
ret
enter
and
and
loopne
out
clc
add
jl
and
jb
mov
outsl
sub
xchg
dec
movsl
test
ret
push
sbb
pop
sub
or
pop
cld
sti
test
sbb
out
outsl
cmc
rol
out
jbe
push
aas
sbb
loopne
enter
and
out
sbb
decl
adc
loope
loope
hlt
sbb
arpl
subb
inc
mov
loopne
lods
inc
xchg
divl
jmp
jae
jecxz
jmp
and
push
das
mov
adc
pop
or
sahf
mov
repz
clc
in
push
imul
add
pusha
popf
outsb
mov
add
add
xor
fwait
lahf
fwait
hlt
cmpsl
ret
fxch
dec
gs
pop
jmp
xor
jle
xor
add
mov
push
clc
sahf
pop
rcrb
push
xchg
push
jmp
adc
add
mov
xor
pushf
test
mov
mov
xor
mov
mov
cltd
sub
popf
cltd
or
jo
jnp
inc
lea
aaa
adc
jmp
jae
jno
repnz
xchg
mov
and
cmpsb
pusha
push
lret
jp
jne
jno
push
jle
ss
addr16
movsb
int3
repz
or
jl
les
in
inc
push
repz
sahf
les
inc
xchg
ja
test
cmpsb
mov
and
jp
aas
lods
cmp
mov
sbb
mov
enter
mov
out
mov
sahf
mov
mov
add
loope
cmp
adc
cmpsl
sub
xlat
cmc
rcl
pushf
add
cmp
cmp
rcll
jle
out
cmp
push
cmp
jnp
cmp
fs
sub
stos
sub
std
dec
xchg
dec
jno
mov
adc
push
push
outsb
mov
sbb
addr16
cmp
mov
cwtl
cli
in
fcmovu
dec
cli
mov
sbbb
mov
into
xchg
mov
pop
xor
or
inc
icebp
xchg
sahf
aaa
imul
scas
imulb
imul
loop
out
pop
rcr
repz
pop
sahf
jno
add
mov
out
add
sbb
sub
inc
sbb
or
pushf
enter
and
mov
xchg
inc
enter
mov
mov
adc
pop
scas
fdivl
jmp
loop
push
icebp
sbb
jno
jbe
xchg
fdiv
movsb
or
adc
mov
in
xor
cli
inc
mov
insb
adc
jecxz
ss
fstps
cmp
sbb
rorb
jp
xor
out
in
mov
dec
mov
push
jge
and
mov
jnp
pop
push
push
sub
jno
xchg
lahf
fidivrl
jb
mov
xorb
or
xchg
lret
push
pop
in
sbb
pop
imul
in
mov
mov
in
sbb
inc
arpl
bnd
and
mov
cwtl
adc
out
add
fcmovnu
push
shrb
fisttpll
mov
popa
or
sub
sub
shrb
cmpsb
pushf
mov
fildll
aaa
imul
jbe
jp
mov
icebp
dec
loop
or
pop
cmp
or
xchg
dec
scas
cmpsb
push
pop
xchg
push
xchg
push
cmp
ret
mov
pop
xor
pop
dec
loopne
adc
loop
sbb
dec
mov
and
pusha
jns
mov
daa
push
data16
jno
test
fsubrs
mov
dec
int
push
mov
arpl
ret
pop
inc
mov
inc
scas
inc
fsubrp
fnstsw
mov
adc
xchg
aam
mov
repnz
or
mov
loop
sub
jp
icebp
dec
std
je
pop
ja
and
aad
test
mov
ret
sbb
xor
shlb
sarl
enter
mov
loope
cmp
pop
push
inc
fidivrs
flds
cmp
jns
or
sub
call
cmpb
cmp
xchg
sub
mov
push
or
sub
add
adc
or
aam
and
pop
jmp
bound
arpl
or
arpl
pop
int3
push
sbb
into
dec
jb
mov
mov
pop
repz
adc
jl
int
insb
pop
mov
ja
aam
popa
fsubr
inc
test
dec
cltd
cwtl
lods
pop
int3
mov
push
jae
out
adc
dec
add
pop
add
and
jg
mov
movsb
div
dec
xchg
push
pop
int
cltd
xor
sub
loope
dec
add
inc
in
imul
xor
or
aaa
mov
xchg
icebp
lret
mov
adc
scas
xor
mov
addps
push
movsl
rcr
je
iret
std
and
or
sub
or
sub
cmp
add
jp
ret
leave
xor
aaa
loop
lods
add
bound
mov
sbb
xchg
mov
ss
push
or
inc
sar
mov
add
mov
pop
popa
addr16
data16
aaa
stos
int3
clc
mov
cmp
popf
imul
push
rclb
inc
push
push
pushf
adc
movsb
mov
cmp
mov
into
jmp
add
sbb
jnp
leave
add
adc
xchg
add
mov
sub
inc
jbe
mov
arpl
aam
lock
fldt
sbb
test
into
repnz
and
imul
cwtl
xchg
jp
imul
call
dec
out
sbb
into
jp
xlat
push
pop
push
ret
xchg
xchg
xchg
mov
xor
ja
mov
jne
imul
aaa
cltd
add
arpl
cmp
stos
jne
fidivs
cmp
jg
incl
dec
movsl
int
push
imul
test
xadd
popa
add
xor
jmp
jp
mov
in
xchg
int3
out
jle
pcmpeqb
outsl
jg
sub
jb
add
xchg
aaa
lret
repz
xchg
or
push
jge
bound
adc
addr16
and
jmp
fwait
adc
mov
scas
out
mov
and
mov
sahf
mov
out
fcompl
lahf
push
cmp
or
xchg
sub
inc
and
fs
gs
ss
dec
dec
adc
movsl
ljmp
push
das
xor
push
stc
outsl
pop
jb
ficompl
mov
outsb
mov
xlat
and
fimuls
pusha
ljmp
jmp
lea
add
mulb
imul
xor
mov
and
jo
mov
loope
loop
pop
mov
lods
pop
xor
push
icebp
daa
testl
sbb
pop
movsb
or
cmpsl
sbb
and
lods
cmc
mov
inc
cld
lea
xor
push
pop
xchg
cmp
call
scas
popa
jbe
add
mov
inc
add
loop
lahf
lret
arpl
ficoml
sub
add
addr16
shl
inc
lods
bound
jg
adc
in
mov
mov
inc
mov
mov
sbb
or
dec
in
insb
insl
fnstenv
inc
or
pop
fwait
inc
pop
xlat
outsl
adc
mov
psubb
jne
aam
mov
lea
fstps
and
inc
or
mov
sbb
pushf
and
or
mov
adc
xchg
xor
sub
insl
jno
jnp
push
mov
add
ja
fs
fldenv
inc
jne
clc
mov
les
sub
shll
xchg
loope
sub
mov
fldcw
lock
cltd
sbb
push
rcll
pop
or
andb
insl
mov
mov
dec
bound
bound
data16
outsl
out
push
jnp
mov
pop
xchg
dec
sbb
fsubs
mov
jb
xor
cmp
aas
mov
outsl
mov
inc
mov
add
xchg
push
aam
aaa
enter
cmp
pop
loopne
leave
in
ret
int3
addl
fimuls
xchg
enter
or
push
dec
dec
jge
push
mov
gs
and
inc
push
test
mov
and
ret
inc
sbb
mov
jb
xor
imulb
mov
mov
inc
loopne
mov
in
pop
sarl
bound
insl
pop
inc
sub
js
movsl
pop
gs
dec
pusha
test
xor
dec
dec
fwait
pop
mov
jp
sub
xchg
fdivs
push
rcrb
arpl
int
cwtl
rcrb
cmp
mov
push
es
mov
test
arpl
mov
mov
shrl
xor
les
popa
push
inc
cmpsb
data16
insl
inc
jp
pop
sub
aaa
jmp
call
or
aas
repnz
cmc
popf
gs
push
mov
fmulp
adc
mov
aad
pop
test
ja
xor
fsin
mov
int3
sbb
xor
or
sahf
mov
icebp
in
push
pop
xchg
imul
add
xchg
imul
xchg
lods
fwait
jl
mov
pop
in
movsl
test
mov
out
les
cltd
jns
insl
sub
cmpl
shrl
inc
pop
js
pop
mov
mov
xchg
add
or
fmuls
pushaw
sbb
dec
inc
cmc
addr16
out
mov
data16
aam
push
add
dec
xchg
add
rcr
stos
clc
out
mov
pop
adc
sbb
stos
cwtl
lret
mov
outsb
push
movb
xlat
fcompl
mov
jae
cli
pop
ret
and
mov
jae
mov
xchg
inc
add
int3
or
cmp
ss
inc
inc
daa
ljmp
gs
cmp
andl
aas
call
mov
lods
pop
sub
cmp
into
cs
lock
pop
cmp
inc
push
xchg
pop
mov
sub
and
dec
or
pop
sub
cs
add
mov
pop
js
test
xor
ss
inc
sbb
mov
test
mov
pushf
bound
pop
jmp
scas
imul
xor
mov
mov
jl
hlt
out
adc
mov
inc
outsl
test
rcrl
mov
mov
cmpl
mov
popa
mov
aad
push
imul
pusha
jns
mov
div
or
cmp
sub
in
iret
out
mov
inc
sbb
test
cmp
mov
jno
add
scas
leave
js
gs
aad
jp
sbb
cmp
imul
mov
adc
insb
icebp
pop
dec
and
mov
mov
lods
cmc
jp
inc
pshufw
das
pop
test
icebp
jns
lcall
js
xchg
xor
mov
in
dec
jg
ficoml
out
jge
jns
push
dec
xor
jno
adc
sbb
test
cmp
xchg
scas
pop
ljmp
mov
daa
pop
int
sbb
sarl
or
jbe
pop
push
fdivr
pop
std
arpl
imul
cltd
sbb
pop
repnz
icebp
mov
clc
push
mov
pop
adc
repz
shlb
push
mov
inc
sub
in
pop
ljmp
stc
xor
adc
in
int
mov
mov
dec
xchg
mov
or
outsl
push
cltd
fadd
xchg
testl
mov
xlat
cmp
sbbl
mov
test
xor
sub
pop
mov
mov
idivb
adc
sbb
adc
dec
cmc
pop
icebp
dec
fcoml
stc
pop
out
cltd
push
cld
mov
push
jmp
inc
mov
jnp
or
adc
xchg
leave
mov
cmp
jne
adc
insl
aas
push
jae
lret
loope
imul
jne
add
inc
dec
jg
mov
test
repz
add
fsubs
insb
iret
mov
mov
adc
and
pop
fwait
adc
ja
xchg
sbb
leave
fdivl
lea
dec
outsb
jp
or
cmp
cwtl
clc
js
std
ret
lret
mov
xchg
aam
test
cmpsl
js
je
cld
mov
push
jne
gs
aam
scas
and
mov
ljmp
push
shlb
shlb
into
inc
ds
sbb
push
jmp
sti
mov
scas
cltd
rolb
jnp
int
js
mov
insl
testb
mov
inc
jae
pop
push
repnz
mov
jmp
jno
imul
sub
js
shl
inc
inc
xchg
adc
sub
jo
jle
sub
push
push
dec
jg
or
fiadds
pop
and
into
push
mov
mov
mov
dec
test
repz
aas
iret
mov
xchg
sbb
and
push
xchg
and
loope
xchg
mov
xchg
mov
adc
jne
and
mulb
in
pop
scas
pop
dec
mov
xchg
es
cld
pop
das
fwait
push
dec
fimull
dec
jb
fistpll
cli
sar
imul
jmp
pop
add
push
js
div
int3
inc
or
push
jecxz
adc
and
adc
inc
jge
xchg
loope
hlt
les
lret
pushf
xor
movsl
or
fldt
out
cs
jne
test
push
jmp
ja
loope
adc
je
and
in
rolb
jnp
pusha
ret
ret
and
xchg
cmp
pop
xchg
mov
ficomps
jae
std
outsb
ds
mov
add
jne
push
mov
sbb
outsl
out
test
in
sbb
ljmp
loopne
jge
cmpsb
fstps
mov
stos
es
ss
jge
jo
test
pop
into
pop
insl
lds
dec
setbe
pop
inc
icebp
popw
lcall
dec
xor
or
sbb
sbb
cmc
clc
mov
cmp
jg
int
shll
aam
cmp
push
lea
push
or
or
sub
imul
fists
jne
fs
and
ret
jmp
vmwrite
out
lret
imul
push
shll
push
dec
mov
mov
arpl
loope
push
out
xor
hlt
mov
mov
sub
std
aam
and
mov
adc
inc
inc
out
frstor
xor
push
mov
dec
imull
in
lret
jnp
test
fisubs
stc
mov
test
inc
je
mov
jcxz
das
xchg
int3
cmc
call
adc
mov
pop
addr16
push
push
divb
daa
jmp
dec
sbb
outsb
iret
xor
push
fnsave
out
jg
and
iret
pop
imul
sub
test
push
not
ret
imul
iret
mov
push
cmp
test
dec
mov
xlat
xor
xchg
test
or
jne
push
mov
jae
rcrb
js
les
imul
xchg
or
shrb
xor
inc
lea
arpl
inc
repnz
jno
js
xchg
push
dec
dec
shll
push
fsubr
sbb
adc
pop
jle
enter
push
push
in
test
sbb
lods
fstpl
fwait
pop
std
leave
cmp
xchg
inc
lods
xchg
repnz
fwait
xchg
cli
ljmp
push
mov
mov
push
cmp
cld
pop
add
dec
add
out
jns
in
insl
ljmp
and
push
pusha
cli
jns
fistpl
adc
cs
add
push
pop
sub
push
in
pop
mov
popa
or
push
out
movlps
in
jmp
or
cmp
into
shll
arpl
pop
mov
sbb
cmpsl
cmp
pop
outsl
repnz
xor
fs
std
js
nop
fsubl
sbb
jl
test
loop
inc
cli
arpl
test
xor
movsl
mov
push
lcall
sub
pop
into
push
cmp
stos
jmp
ret
adc
pop
jnp
cmp
push
push
xchg
push
ret
movsb
out
sbb
into
push
mov
inc
or
cltd
xor
and
repnz
aam
push
and
popf
mov
xor
ret
ja
add
arpl
push
cmp
dec
or
sub
add
sahf
dec
cmpsb
push
inc
jp
jnp
push
mov
cmp
push
sti
sbb
repnz
sti
ss
add
pop
stos
cmp
loop
cmp
ret
loop
inc
adc
xchg
out
xchg
push
loopne
dec
sub
add
div
imul
ret
call
xchg
push
xlat
jnp
and
jl
xor
rcl
cltd
pop
and
inc
in
cmpsl
add
test
mov
out
bound
cs
cld
test
test
out
cmp
loop
aam
repz
orl
sub
stos
rcl
cmp
cmp
rcrl
push
icebp
test
jae
out
mov
ret
iret
int
call
stos
add
stos
sub
push
fmul
loop
adc
aad
and
ljmp
push
popf
mov
jmp
repz
mov
xchg
bound
pushf
leave
jo
pop
push
sbb
inc
xchg
pusha
sti
add
mov
sub
xor
rclb
std
jecxz
ret
lods
cmpsb
and
mov
cmp
popl
push
and
fdivr
inc
dec
sbb
mov
pop
dec
das
movsb
imul
adc
xchg
push
arpl
dec
fistl
repz
push
cmc
in
mov
pop
sbb
arpl
mov
repz
and
repz
sub
pop
sub
idivb
out
add
hlt
pop
lock
out
cltd
dec
test
icebp
repz
cmp
movb
loopne
and
mov
sahf
in
pop
pushf
enter
jnp
inc
test
bound
ja
fcoms
or
pop
or
loope
popa
inc
stc
dec
out
xchg
adc
test
test
ret
out
dec
and
es
outsb
or
or
mov
call
and
inc
adc
clc
pop
rol
dec
xchg
or
and
lcall
rclb
nop
xchg
jmp
mov
jb
sub
bound
jecxz
into
inc
cmpsb
test
xchg
mov
cmpsb
lahf
push
cli
loope
adc
daa
outsb
aaa
imul
push
in
inc
adc
mulb
das
or
cmp
sbb
xor
inc
jbe
in
jecxz
shrb
xor
push
push
call
xchg
icebp
cwtl
xchg
fucomi
pusha
push
mov
rcll
addl
and
popf
pop
mov
and
jg
or
sub
movsb
gs
daa
mov
addr16
add
jno
aam
popf
lcall
mov
iret
scas
ja
inc
xor
insl
pop
mov
hlt
pop
add
and
sub
dec
xchg
lods
mov
inc
dec
cmp
inc
inc
ficompl
mov
ret
insb
fwait
lds
sbb
jnp
jno
inc
das
out
inc
sbb
shr
insl
daa
adc
pop
dec
push
push
push
mov
dec
outsb
clc
scas
sbb
mov
int
adc
fdivl
and
out
or
cwtl
aas
das
xor
clc
gs
cli
xchg
xor
sub
jp
cmp
jo
push
mov
movsb
dec
add
push
shrb
cmp
or
xchg
out
inc
dec
fstl
incb
neg
pop
adc
jns
mov
inc
sbb
mov
add
out
mov
lds
ficomps
stos
push
xchg
cmp
jb
iret
ret
ljmp
inc
js
mov
mov
add
in
mov
pusha
test
mov
imul
data16
fsubrs
mov
xor
outsb
fiaddl
dec
and
jno
mov
out
and
lock
imull
cmc
cmpsl
mov
imul
incb
push
ja
xchg
aad
test
push
sbb
xor
hlt
mov
test
fsub
ja
cmp
xchg
lods
mov
lret
fwait
stos
cld
movsl
leave
xor
imul
movsb
adc
or
iret
nop
cmp
xor
pusha
jmp
mulb
xor
cmp
mov
insl
dec
les
jne
sbbb
repz
out
leave
leave
mov
xchg
call
cwtl
bound
lock
popa
cwtl
fimull
push
lds
jg
jmp
pop
insb
in
les
out
icebp
or
mov
or
push
xor
mov
mov
add
cmp
lock
movsl
dec
xchg
pop
push
movsl
cmc
fildl
pop
fsubs
incb
or
int3
jns
jnp
push
inc
lock
push
ds
dec
aad
jae
mov
or
stos
test
int
cmp
pop
int
ss
inc
ret
dec
push
mov
addb
add
test
fisubrl
cmp
insl
jg
loop
add
inc
cwtl
pop
or
mov
aaa
mov
push
cmp
dec
jno
push
nop
mov
cmpsb
imul
mov
iret
lds
or
push
shll
mov
pop
je
jl
mov
int3
mov
mov
and
outsb
fidivl
mov
outsl
push
addl
sahf
xor
mov
das
jbe
test
xchg
hlt
daa
mov
fstps
jmp
scas
test
adc
cld
scas
cmp
xchg
cmc
in
fdivrp
mov
and
shrb
jbe
cmp
imul
jmp
nop
adc
xor
mov
inc
aaa
leave
push
js
xlat
cmp
cmp
sbb
popa
sti
push
shll
ficoms
mov
shl
out
add
push
popf
ds
movsl
mov
insl
inc
faddl
cmc
outsb
mov
or
sub
mov
fldl
div
cltd
cli
and
cmpsb
dec
aaa
jge
ret
sarb
in
lock
in
or
sbb
fiaddl
sti
int
cli
or
fcompl
bound
int3
cmpsb
cmpl
enter
cmp
out
adc
xor
jmp
sbb
xchg
xchg
inc
mov
pop
cmpb
sub
add
das
adc
mov
xchg
push
lods
sbbb
pop
es
xchg
lcall
lahf
subb
xchg
and
xor
inc
cmp
in
imul
xchg
lock
cmpsb
jo
mov
add
ficomps
enter
adc
iret
xchg
mov
xor
loopne
ss
mov
lods
jbe
adc
push
dec
push
shlb
dec
out
movsb
testb
fs
dec
inc
push
mov
mov
sub
stos
push
pop
repnz
xor
add
jmp
nop
inc
push
push
in
mov
aaa
xchg
add
ret
popf
fsubl
jns
jnp
jno
or
cli
sbb
rcrb
mov
mull
addr16
or
inc
inc
adcb
cmp
roll
and
lea
inc
sub
fs
dec
fnstcw
aaa
jl
pop
lret
lods
jo
cmpsl
test
fwait
sub
adc
dec
xor
mov
js
push
cmp
iret
cwtl
or
jns
out
cmp
jle
ljmp
sbb
shlb
sbb
jne
sub
cmp
and
outsb
adc
push
push
in
lcall
daa
pop
rolb
test
jne
or
pop
rorl
push
adc
gs
fidivs
stos
inc
inc
ja
push
pop
inc
and
mov
js
mov
adc
xchg
xchg
shll
mov
ficoms
dec
pushf
mov
fcoms
clc
in
lea
imul
or
mov
sbb
sarl
shl
test
push
scas
icebp
movsl
dec
lods
add
dec
popf
ret
jne
pop
cmp
cmp
movsl
stos
fmuls
cmp
xor
cld
sbb
or
cmp
stc
cmc
or
xor
sub
dec
mov
icebp
sub
xchg
pop
test
sar
mov
out
movsl
or
aaa
rcrb
lret
subb
gs
push
add
out
inc
nop
test
lret
cmp
jmp
adc
push
pop
neg
je
mov
enter
adc
dec
jnp
sti
xchg
mov
je
push
jne
adcl
scas
aaa
mov
cs
adc
je
cmp
dec
out
fdivp
arpl
scas
mov
lds
mov
scas
mov
mov
lods
mov
aad
lret
enter
ss
add
std
pop
imul
movsl
mov
mov
ja
lret
dec
add
pop
jns
xchg
xor
xlat
popf
jmp
rcrb
jl
cmp
cvtps2pi
sbb
lea
imulb
sub
adc
push
xchg
and
xchg
pop
jl
gs
dec
adc
je
push
and
clc
aad
jae
testl
shll
mov
dec
call
loope
xchg
call
jbe
mov
inc
std
imul
inc
ss
ja
add
cmp
insb
insb
push
aaa
cmp
xor
cmp
jecxz
lea
xchg
and
mov
lret
xor
aas
fmuls
sbb
mov
push
mov
rcrl
pop
dec
rcll
sbb
cwtl
xchg
ret
cwtl
add
cmc
add
pop
sbb
sub
mov
mov
xor
jecxz
or
aam
test
or
mov
stos
je
xchg
xchg
or
or
sub
dec
iret
imul
rcrl
pop
das
push
mov
out
lret
rol
add
hlt
lret
push
ret
mov
repnz
pop
scas
push
std
or
xchg
das
insb
in
addb
cltd
call
inc
std
inc
sbb
lods
fwait
jb
test
jne
loopne
and
stc
jmp
fdivr
push
xor
mov
cmpsl
in
push
les
dec
out
pushl
aas
in
stos
push
inc
mov
roll
mov
mov
fcompl
dec
adc
dec
push
fcomps
sub
push
xor
jne
push
jbe
inc
rcl
mov
fs
paddsb
cmp
sub
push
movsl
fcompl
lock
add
mov
mulb
xchg
pop
jns
mov
fisubs
icebp
push
xlat
subl
cltd
sti
imul
lods
das
inc
pop
xchg
pop
dec
mov
mov
fdivp
jmp
in
and
sbb
jbe
push
mov
xor
sub
pop
mov
imul
pop
sbb
bound
shl
mov
adc
shr
xor
push
fstps
cmpsb
mov
ljmp
jns
xchg
iret
sub
cltd
and
adc
frstor
jl
mov
sbb
inc
aam
lea
imul
fcomps
shll
xchg
inc
sub
jl
nop
iret
push
ror
cld
lock
or
arpl
mov
jl
sbb
mov
stos
xchg
add
pop
sub
xchg
es
xchg
ja
mov
xlat
iret
pop
mov
pop
dec
inc
lods
out
pop
adc
xlat
lret
xchg
mov
lea
mov
xor
push
push
add
cmp
adc
sub
xor
test
sub
dec
cmp
je
aaa
pop
stc
loope
push
jmp
inc
cmp
pop
stos
adc
jnp
add
lahf
add
pop
out
mov
and
cltd
fs
dec
mov
adcl
mov
jns
cmpsb
mov
and
adcl
cwtl
xor
jge
fistpl
mov
je
filds
lret
jo
rcr
sub
add
dec
sbbl
lret
jg
mov
aas
jecxz
inc
outsl
jbe
xlat
in
shlb
add
dec
or
sti
dec
movsb
mov
cld
mulb
out
loopne
fnsave
bound
shll
mov
repz
push
in
push
pushf
and
test
mov
jp
jnp
daa
and
outsl
sbb
add
push
fs
sub
or
ja
xchg
cli
lret
cld
jge
mov
lock
sub
push
adc
sbb
fldenv
or
xchg
cld
js
out
out
mov
sar
mov
loope
cs
push
pop
rep
push
mov
je
in
popf
adc
int3
dec
aaa
pop
stc
ret
dec
jo
mov
insl
mov
ret
mov
mov
shrl
movsl
dec
cmpsl
xchg
sbb
call
mov
pop
push
test
sub
xchg
xchg
inc
aaa
mov
mov
jne
sbb
xchg
lods
or
xchg
inc
push
outsb
fcoms
or
mov
sarl
push
scas
sti
aam
das
imul
adc
rol
nop
popa
mov
movsl
push
call
popa
or
addl
sahf
cmp
mov
scas
mov
out
mov
arpl
mov
lahf
fidivl
scas
mov
loop
xchg
pop
fwait
fs
test
test
rol
ja
push
sub
jmp
jmp
inc
stos
lods
pop
lcall
mov
popa
sub
mov
lods
ja
rolb
daa
xor
lds
aas
in
jnp
movsl
fistps
xchg
adc
push
inc
inc
push
test
fdivrs
pusha
adcl
popf
adc
sub
sti
loop
movsl
pop
cli
pop
jmp
jae
dec
adc
fsub
in
sbb
pmulhuw
cmp
fs
loope
mulb
enter
jp
xchg
push
clc
inc
addr16
outsb
xchg
pop
or
into
jecxz
aad
pop
stos
test
iret
inc
fsubrl
jge
scas
idivl
repnz
stc
sbb
ret
divl
sahf
mov
push
mov
cli
es
hlt
pop
std
loopne
scas
mov
shll
outsb
xchg
test
sub
adc
outsl
jg
and
inc
or
sub
scas
addl
lods
dec
pop
inc
xchg
sub
push
jnp
dec
jmp
negl
pop
int3
not
and
fiadds
pop
addr16
in
adc
jne
mov
cmp
dec
mov
sbb
sbbl
and
push
inc
or
mov
rorl
jl
les
test
mov
and
mov
stc
xlat
ljmp
fsubrl
pop
jo
xchg
xlat
add
push
mov
dec
mov
cmp
xchg
imul
push
int
call
xor
xchg
and
mov
and
cmc
fiadds
outsl
cmc
shlb
lret
aam
or
cmp
stos
daa
movsb
lahf
jnp
or
into
jp
and
les
xlat
push
jp
addr16
inc
insb
push
mov
sahf
add
and
iret
dec
cmp
xor
mov
xor
adc
imul
gs
sub
and
mov
jg
out
rcrb
lds
ret
jnp
mov
gs
cs
loopne
cmp
mov
xchg
and
fadds
or
jle
mov
mov
jne
iret
mov
int
aad
inc
je
push
and
jbe
mov
adc
push
sub
xchg
pop
sub
pop
and
push
inc
mov
dec
sti
in
add
xlat
jmp
jno
mov
lahf
mov
jno
insl
aas
imul
mov
push
sub
inc
sub
mov
or
pop
rorb
aaa
mov
pop
xchg
xchg
jns
and
xchg
or
and
movsb
push
cmp
stos
mov
clc
pop
cmp
cmp
adc
xchg
add
call
push
repz
out
dec
jmp
outsb
mov
pushf
ds
add
sub
pop
dec
lds
pusha
sub
inc
xor
or
pop
and
rorl
mov
jmp
fistpl
mov
xor
pop
hlt
jl
mov
movsb
or
lds
rcrb
lds
lods
adc
jno
pop
fdivp
xchg
repz
and
inc
or
repnz
add
subb
xchg
add
mov
arpl
sub
add
adc
out
fwait
mov
test
xchg
jns
icebp
lods
mov
add
incb
loope
or
pop
adc
dec
ret
jns
push
mov
add
shlb
stos
inc
xchg
fisubl
hlt
ds
cmp
push
jnp
movsl
arpl
xor
int
push
in
pop
aad
cli
add
inc
fwait
inc
stc
mov
popf
mov
sbb
add
or
cltd
pop
cmp
xchg
decb
fxch
and
adc
je
push
std
adc
lret
fisubrl
xor
stos
mov
shlb
cmpb
fs
xlat
xchg
lret
jecxz
sbb
adc
push
js
xchg
xor
stos
mov
mov
pop
stos
sub
jg
dec
lahf
push
push
hlt
popa
fisubrs
or
xor
xchg
cwtl
aad
xchg
jns
jl
pop
lods
adc
xlat
dec
adc
enter
mov
in
repnz
jb
stc
lahf
lahf
xorl
mov
mov
mov
pop
jle
incl
inc
jmp
mov
jb
xor
push
outsb
add
jns
ljmp
repz
push
pop
jne
or
ja
sbb
push
mov
cli
pop
repz
in
cmp
sahf
bound
push
int3
ja
add
dec
add
jns
adc
sub
or
fdivr
mov
mov
jne
and
jo
jno
lods
xchg
cmc
int
lcall
cmpsb
decb
popa
movsl
jmp
loop
xchg
shlb
adc
sub
mov
or
jle
mov
lahf
and
and
rcr
mov
insb
mov
sub
mov
inc
dec
mov
mov
subb
push
je
and
pop
clc
xor
loopne
and
loope
jl
mov
mov
push
sbb
pop
clc
xor
ljmp
adc
add
jg
outsl
lcall
push
mov
push
mov
shll
pop
scas
imul
clc
mov
cmc
cmp
lret
out
xlat
outsb
lods
pop
jle
jle
xchg
jmp
push
dec
pop
pop
mov
jl
and
cmp
pop
out
pop
xor
inc
cld
fdivrs
test
inc
fdivrl
adc
cmpsl
add
outsb
pop
cli
hlt
in
test
xchg
js
or
xor
das
cmp
movsb
pop
push
push
fldcw
std
stos
cli
xor
lock
lock
scas
les
jno
rcrb
jb
mov
xchg
inc
jmp
xchg
jmp
shrl
loop
push
and
test
xchg
lds
sub
mov
sub
sbb
loop
dec
mov
in
push
sbb
mov
cli
pop
test
xchg
imul
cmp
pop
jnp
adc
inc
popa
xor
inc
cmp
pushf
int3
xchg
jl
xor
push
xlat
lock
mul
decb
ret
mov
test
into
mov
xor
out
push
cmpsl
jmp
out
cmpsb
mov
lods
xchg
orb
lcall
and
clc
mov
sbb
push
jp
sbb
stc
sbb
into
popa
insl
adc
sti
jp
pop
mov
in
xor
cmp
sahf
arpl
mov
addl
add
xor
pop
dec
sbb
cmp
and
scas
adc
pop
sbb
loop
lods
or
jnp
inc
bound
adcl
dec
je
xchg
dec
xchg
aaa
mov
js
rcl
bound
popf
push
push
push
shrl
das
mov
mov
and
inc
popf
add
outsl
and
out
idivb
pop
mov
loop,pn
push
adc
xchg
jmp
aad
or
pop
sti
sub
cmpsb
bound
fmulp
mov
test
out
xchg
push
lock
clc
xchg
lods
insb
mov
sub
lret
sub
inc
xchg
jg
imul
fldcw
scas
pop
ficompl
pop
std
loope
lods
pop
jb
mov
and
lods
popa
ljmp
cltd
pop
sub
cmc
dec
in
ljmp
cmp
inc
dec
jae
out
xchg
iret
shlb
dec
jns
mov
add
sbb
fldcw
leave
je
sub
mov
pop
lock
xor
movb
mov
or
sti
mov
int
cmp
or
or
push
dec
clc
or
sti
test
addr16
cwtl
lods
out
dec
test
je
outsb
out
fs
cmc
and
dec
jbe
fimuls
and
scas
arpl
xor
sbb
hlt
lods
popf
pop
out
inc
pop
outsb
mov
push
push
mov
in
and
fsubl
sbb
xor
pusha
push
cld
ljmp
sub
lret
xor
xchg
adcb
jg
addb
push
mov
testb
in
mov
jb
lcall
enter
sbb
push
jg
jmp
es
xor
mov
adc
cmp
and
add
into
les
test
fwait
lds
xchg
dec
sbb
je
fists
push
ss
popf
dec
fisubs
test
sub
jb
mov
mov
xor
stos
shrb
dec
dec
pusha
clc
out
add
xchg
lods
nop
fistps
pop
and
push
adc
pop
cmpsb
pop
xor
mov
sarb
in
ljmp
test
in
das
inc
mov
xchg
mov
adc
mov
pushf
push
scas
cs
pusha
cmp
pop
ds
lret
or
icebp
pop
rsqrtps
pop
mov
ret
cmp
push
outsb
inc
pushf
bound
rolb
xchg
fildll
sbb
ss
clc
sbb
dec
inc
js
mov
pop
adc
fnstcw
or
sub
gs
cmp
test
add
popf
iret
xchg
fwait
adc
push
cltd
push
lret
stos
shlb
push
jecxz
lcall
rcll
aas
push
jbe
and
daa
mov
and
in
divl
push
sub
dec
lea
sbb
push
jl
sahf
test
frstor
inc
push
xchg
inc
xor
xor
xor
xchg
outsb
pop
cmp
mov
fdivrl
insb
push
adc
adcb
xchg
rclb
into
iret
int3
jno
addr16
dec
sbb
xor
popa
dec
or
das
into
mov
mov
push
push
out
jbe
and
cmp
push
movsl
cmp
pop
dec
sub
icebp
dec
mov
push
mov
sub
inc
idivb
add
movsl
loop
push
push
popf
mulb
push
sbb
jo
pop
xchg
outsb
test
sbb
call
adc
cmp
fnsave
int3
mov
xlat
inc
xorb
pop
fbld
dec
js
ficompl
jns
push
repnz
test
push
fs
xor
push
das
lea
or
insl
fstl
adc
ret
shrb
xor
scas
sub
push
push
push
insb
nop
dec
ret
dec
nop
fcmovnbe
hlt
rcll
daa
cmc
jge
inc
dec
ljmp
cli
popf
jnp
xchg
mov
xchg
fidivl
mov
pop
dec
mov
std
test
rorb
jecxz
dec
and
sub
loope
orl
cmpsb
pop
int
in
sbb
mov
mov
xchg
sarl
or
fsubrs
jbe
mov
loop
mov
dec
add
lods
and
loope
es
push
das
js
add
jo
jge
dec
sbb
cltd
movsl
push
mov
adc
xchg
lods
shlb
stos
mov
adc
adc
cmp
loope
call
fwait
popa
ret
es
les
out
pop
ret
mov
aaa
push
dec
jnp
mov
ljmp
mov
sub
inc
ret
inc
mov
dec
pop
xchg
push
cs
ss
lods
pop
inc
idiv
aam
xchg
cmpsb
stos
ss
repnz
shr
mov
dec
inc
out
xor
push
out
xchg
imulb
add
jns
mov
jae
xchg
lret
rcll
frndint
enter
je
lods
andl
inc
popa
lahf
addr16
and
sahf
xor
mov
or
jbe
push
insb
inc
dec
ss
dec
out
loopne
ds
jmp
fnstenv
cmp
adc
pop
jle
cli
adc
push
in
mov
ja
bound
lock
mov
inc
ret
or
xchg
aam
lcall
jo
xchg
iret
inc
shlb
rcrb
fistpll
mov
add
add
aas
int3
mov
dec
pop
cli
mov
ds
shl
fisttpl
pusha
mov
jg
mov
lret
xchg
and
loope
adcb
adc
and
pop
lcall
jb
xchg
cltd
sti
pop
push
sub
les
leave
jb
inc
and
xlat
roll
test
int
xchg
arpl
lods
stc
shr
icebp
sahf
xor
adc
jg
pop
aaa
mov
mov
pop
mov
inc
push
cmpsb
int
inc
cltd
loope
push
push
in
cld
mov
data16
inc
fisubl
notb
or
add
mov
mov
push
adc
push
daa
jecxz
or
mov
sbb
mov
jmp
cwtl
pop
xchg
adc
mov
xor
lcall
add
js
sahf
jne
sub
fwait
pop
jl
push
pop
loop
add
mov
jb
or
xor
jo
sbbl
repz
push
or
in
popa
xor
xchg
xchg
jbe
mov
or
or
out
push
jecxz
vpcmpeqd
cmp
xchg
lea
repnz
test
and
js
xchg
ret
push
mov
scas
ffreep
dec
jmp
lahf
mov
lods
test
jnp
mov
arpl
filds
mov
add
mov
push
mov
add
add
sbb
clc
stos
loope
or
or
out
cmp
popa
pop
mov
mov
lds
fcmove
ror
pop
js
jnp
cmp
sbb
jae
or
mov
in
xchg
call
jg
lock
fsubrs
push
mov
popf
lds
add
and
repz
neg
add
xlat
and
sub
pusha
mov
andl
rolb
sub
add
adc
data16
loop
rolb
jno
ret
xchg
hlt
stos
fldl
dec
inc
stos
loop
pop
mov
mov
stos
inc
ljmp
sbb
pop
call
rclb
fs
nop
outsb
test
out
lret
and
lea
jecxz
sub
push
fisubrl
mov
sub
popf
subb
dec
in
jp
out
movsb
jecxz
push
fsubrp
pop
jg
mov
jg
push
lods
inc
cld
fnstsw
imul
imul
sub
dec
mov
aam
std
add
push
add
inc
cwtl
and
mov
xor
shrl
int3
sub
mov
add
and
jae
insb
repz
jne
xchg
inc
rclb
jne
ja
lahf
imul
push
xorb
xchg
loope
rcr
xchg
sub
jo
call
retw
aas
push
xchg
push
shrb
dec
fisubs
cmpsl
int
inc
add
dec
les
addr16
push
pop
inc
or
nop
das
lods
xor
popf
mov
sti
imul
xchg
jp
jnp
addb
jb
mov
ffreep
mov
push
jg
arpl
dec
push
push
shll
dec
cli
in
jmp
inc
jecxz
mov
push
cmp
mov
push
shlb
jl
xor
outsb
iret
and
leave
add
aaa
mov
mov
jge
mov
inc
sbb
xor
sub
jmp
jg
adc
cwtl
lods
mov
jl
or
push
pop
out
je
or
xor
out
loop
add
in
inc
ja
add
mov
jge
out
jmp
enter
push
popf
aam
movsb
xor
mov
cmp
jmp
fs
jecxz
flds
cld
sub
xchg
test
aam
pushf
fs
rcrb
cmpsl
test
imul
rorb
in
ja
faddp
mov
cltd
inc
mov
stos
std
adc
adc
jmp
push
or
cmp
jge
dec
dec
push
adc
arpl
adc
lcall
pop
pop
dec
roll
cmpl
or
xor
xor
adc
mov
add
imul
xor
shlb
jne
clc
bound
repz
mov
test
inc
jl
and
movsb
test
push
lret
dec
loopne
pop
sahf
in
push
adcb
adc
in
test
inc
pop
and
aaa
inc
xor
add
mov
sti
add
rorl
fisubl
in
xchg
dec
jle
out
lcall
in
pop
jle
pop
xchg
or
and
inc
outsb
iret
jae
jo
add
cmp
mov
loop
dec
outsb
hlt
lods
xor
or
cs
je
mov
cmp
inc
cwtl
rorb
stc
inc
pushf
das
xorl
pop
jle
mov
pop
scas
xchg
pop
sub
and
sub
test
mov
pop
mov
lods
fadds
bnd
add
push
data16
das
pop
jne
inc
into
jl
test
pop
adc
repnz
cmp
popf
jle
call
stos
mov
xorl
cmc
push
jb
ds
test
jnp
mov
sbb
pop
scas
mov
sub
int
insb
in
out
jb
jmp
xchg
into
imul
std
test
mov
sbb
cmp
cld
lcall
les
mov
aad
lret
xchg
jnp
imulb
push
push
jmp
aas
test
in
out
xchg
insl
stos
movhps
faddl
test
jmp
push
sbb
add
sub
cmp
fucomp
scas
xchg
insb
add
pop
cmp
push
mov
mov
push
and
adc
mov
jbe
pop
dec
jge
fistpl
inc
movsb
bound
xchg
lahf
imul
rolb
lcall
xchg
sub
es
mov
out
and
or
sbb
mov
adc
push
test
jmp
add
xorb
loope
push
dec
push
stc
mov
loope
pop
test
fstpt
push
push
and
sbb
sbb
es
add
js
xchg
lods
roll
pop
aad
out
jmp
jecxz
cmp
int3
and
add
sbb
xchg
rcrl
jg
out
dec
stc
scas
clc
push
lret
pop
mov
mov
repnz
pop
jmp
dec
mov
fwait
cwtl
std
xlat
stos
dec
mov
pop
mov
dec
jge
lods
ss
sbb
mov
out
fcmovnu
adc
fadd
scas
and
push
inc
jl
in
ss
bound
out
xlat
mov
inc
xchg
sti
jb
movsl
mov
cli
mov
and
fsts
xacquire
cmp
pop
rolb
in
adc
jmp
in
inc
imul
xor
test
testl
daa
dec
jo
out
shlb
mov
pop
insl
and
insb
inc
cmpsl
cmp
mov
out
lea
shrl
inc
pop
or
das
and
cmp
xor
xor
hlt
sbb
mov
inc
pop
cli
pusha
ffreep
iret
jg
pop
jp
xchg
cs
xchg
mov
jb
lock
dec
cmpsb
xchg
scas
sbb
add
pop
inc
ja
test
adc
ret
out
jl
rcll
outsb
aam
insb
repz
test
or
mov
lods
push
shll
pop
mov
jl
fdivr
or
ss
punpckhdq
inc
sub
fs
jne
xchg
sbb
cmp
sahf
jmp
sti
pop
mov
adc
push
cmpsl
das
lret
sbb
ret
inc
dec
pop
jge
add
je
stos
and
insb
out
pop
and
jl
popa
dec
push
pop
adc
mov
outsb
cmp
xchg
push
jge
cmpsb
test
lcall
ficompl
shl
xchg
mov
mov
push
lcall
lahf
cld
mov
mov
leave
xchg
push
movsb
adc
shl
or
push
insb
adc
lods
or
lret
bound
scas
cltd
mov
test
jle
push
xchg
jl
negl
inc
cld
dec
inc
mov
hlt
stos
jne
outsl
jp
add
jle
lahf
ds
inc
lea
mov
mov
lods
inc
cs
mov
xor
movsb
adc
pop
in
push
and
adc
icebp
outsb
xor
arpl
icebp
adc
in
ret
fs
lahf
pushf
mov
ja
aaa
fimuls
or
xchg
das
jg
pop
lods
sbb
xor
data16
movsb
out
push
repz
ror
jp
repnz
cld
xor
mov
loop
nop
loopne
adc
dec
mov
and
cmp
inc
add
in
pusha
inc
cmc
pop
shlb
das
add
add
je,pt
mov
imul
mov
sbb
popf
mov
jge
repnz
gs
inc
movsb
and
jmp
scas
cmp
mov
pop
jae
xchg
sub
mov
mov
xor
inc
mov
mov
pop
cmp
push
rorl
sub
lahf
ja
sub
jns
pop
mov
push
add
lods
jb
dec
lock
adc
xchg
xchg
pop
dec
push
icebp
test
imul
sbbl
sbb
mov
test
adc
rcr
mov
jae
or
xchg
jae
je
outsl
sbb
pop
cmpsl
lcall
push
repz
mov
jo
repnz
test
sub
outsl
jno
repz
mov
xor
ficompl
cmpsl
xchg
aad
xchg
movsb
cmp
pusha
sti
popf
xor
xchg
jp
adc
pop
xchg
imul
daa
cmp
pop
out
inc
imul
adc
stos
clc
push
inc
icebp
mov
fwait
jg
add
out
fstpl
mov
push
mov
or
pop
cmp
inc
subl
movsl
leave
add
fildl
push
andb
inc
xlat
or
cltd
out
pop
and
or
mov
ljmp
lret
mov
ljmp
sbb
mov
cmp
or
sahf
mov
arpl
into
dec
push
cli
call
aad
jg
dec
std
iret
ljmp
imul
into
xor
xor
xchg
or
pop
push
addr16
shll
stc
inc
fcompl
pop
xchg
sbb
in
xor
fsubl
int3
repnz
add
test
sub
fwait
adcb
ds
xor
add
into
mov
mov
rsm
and
mov
test
stos
pushf
ror
ds
push
iret
sbb
mov
cmp
hlt
dec
imul
scas
and
and
jb,pn
data16
xor
pop
mov
pop
xor
int3
gs
lahf
mov
inc
fidivrl
sarb
inc
jbe
stos
fistps
mov
mov
into
sbb
mov
imul
mov
mov
lret
sbb
enter
push
cmpsl
cmp
push
pop
push
imul
mov
in
mov
int3
aam
test
wrmsr
mov
xor
roll
mov
sbb
add
mov
adc
add
adcb
push
shl
mov
pusha
sbb
xchg
test
mov
lret
jp
decb
daa
pop
imul
mov
fmull
int3
pop
ud0
divb
push
mov
mov
push
and
jmp
lahf
fs
lcall
xchg
or
sti
xor
sub
arpl
lods
in
add
dec
es
cmp
xchg
cltd
sub
rclb
clc
xor
fiadds
test
imul
les
test
dec
push
enter
aad
sub
dec
adc
nop
gs
sbb
inc
pop
outsl
jno
mov
push
jo
mov
sub
cmp
notl
adc
and
jp
imul
mov
xchg
out
stc
sub
mov
add
into
pusha
pop
sub
sbb
mov
imul
ds
mov
and
mov
test
and
bound
pop
adc
jle
xchg
idivl
push
mov
gs
je
jle
cmp
dec
popa
pop
mov
imul
mov
gs
lods
stos
push
sub
push
mov
test
into
xorb
pop
cmp
jnp
data16
imul
ljmp
sub
cli
sub
popa
xor
push
cmpsw
pop
es
sarl
int3
or
xchg
and
adc
daa
adc
sub
push
add
or
add
cmpsb
hlt
fadds
jae
adc
cmpsb
dec
andb
js
gs
cmp
mov
push
imul
call
test
jmp
orl
jo
repnz
or
xor
xor
dec
insb
loop
stos
add
mov
xor
sti
jns
js,pn
jecxz
insl
lods
leave
int3
lret
jmp
arpl
enter
xor
scas
insb
inc
mov
adc
jecxz
dec
gs
xchg
les
jns
cmp
js
mov
pusha
js
and
bound
sub
mov
lahf
lds
stos
jne
sbbl
movsb
in
jecxz
imul
mov
leave
outsb
xor
repz
addr16
and
cltd
cwtl
jno
cwtl
in
icebp
dec
andb
sub
dec
bnd
cvtps2pi
lret
test
push
leave
ljmp
mov
adc
mov
push
incl
imul
cmp
aaa
inc
pop
mov
mov
shl
push
mov
xchg
sahf
out
push
xor
push
push
nop
adc
addr16
pop
inc
testb
leave
jae
xor
in
mov
cmp
dec
pop
and
addr16
pop
ficomps
hlt
sbb
stos
fnstsw
dec
repnz
test
add
cmp
add
sbb
aam
mov
add
shl
sbb
and
loope
push
mov
int3
cmp
jns
jno
inc
xchg
sarl
dec
movl
lods
iret
rorl
lcall
int3
jo
pop
pusha
insb
add
sub
stc
mov
sbb
insl
mov
sub
adc
sbb
test
mov
xchg
test
lret
sub
out
addl
int
pop
sub
addr16
adc
pop
jmp
shrl
add
cli
dec
dec
out
jno
sbb
and
mov
int3
sahf
ljmp
adc
cmpsl
push
push
push
getsec
mov
es
push
addl
adcl
dec
xchg
repnz
xor
clc
sbb
cmp
ds
outsb
lahf
jae
lret
popa
int
and
lcall
imul
dec
sbb
xchg
add
push
jb
cli
mov
xor
mov
push
push
sub
mov
cmp
dec
ljmp
add
mov
insb
rcrl
ljmp
gs
gs
adc
sbb
loopne
pusha
loop
je
rolb
enter
or
fisttpll
cld
pop
cmpsl
mov
ret
dec
lret
sarl
hlt
add
fcmovu
sbb
pop
sti
jno
jo
dec
push
add
xorl
sbb
cmp
push
pushf
jmp
jb
insl
push
test
inc
jo
inc
dec
xchg
or
mov
mov
cld
inc
pop
jmp
dec
mov
scas
fisttpll
jo
pop
daa
inc
cmp
xlat
xchg
adc
sti
xor
movsb
sub
xchg
mov
adc
in
mov
iret
xchg
dec
push
rolb
mov
mov
iret
mov
jle
adc
mov
sahf
cmc
dec
popf
adc
leave
add
inc
sub
sahf
dec
adc
or
lea
or
cmp
pushf
mov
cmp
test
sub
addr16
dec
jmp
sub
ljmp
xor
pop
lods
pop
push
dec
dec
push
dec
imul
xor
cmpsl
pop
in
inc
pusha
mov
cli
icebp
xchg
adc
aaa
pop
and
jne
jno
sbb
cmp
notl
mov
push
std
ss
bswap
cld
insl
or
dec
flds
test
inc
add
lret
add
out
hlt
cs
negl
mov
loopne
pop
dec
pop
mov
div
pop
arpl
pop
sbb
fists
mov
fs
out
fldl
and
fdiv
out
inc
addr16
pop
and
inc
out
iret
popa
push
cmc
and
sub
jecxz
sbb
push
pusha
push
inc
mov
mov
inc
push
xor
pop
jb
xor
jmp
adc
cwtd
and
imul
sbb
sub
cmp
testl
fwait
repnz
jno
xlat
mov
out
in
mov
fdivp
inc
ljmp
subl
pop
and
inc
or
push
dec
ficoml
gs
rclb
cli
insb
rcrl
adc
leave
xchg
test
xchg
mov
dec
ljmp
imull
cmp
pcmpgtw
xchg
pushf
mov
push
fdivl
xchg
pop
int3
mov
mov
xchg
pushaw
outsb
xor
dec
mov
or
pop
or
out
xchg
inc
cmpsb
in
inc
jecxz
aas
push
pop
push
bound
rolb
ss
adc
push
sahf
adc
push
dec
and
lea
push
in
sub
add
mov
xchg
and
aam
int
dec
repnz
lret
aaa
testl
hlt
std
mov
push
push
fisttps
in
sahf
dec
jnp
lret
mov
adcl
leave
mul
and
cmp
and
push
rclb
sbb
or
ss
pop
mov
insb
das
mov
jmp
xchg
in
out
lds
and
pop
ds
pop
push
cmpsl
test
cwtl
lahf
mov
mov
jmp
and
es
mov
out
xor
jmp
inc
xor
dec
mov
mov
fadd
and
cmp
xor
arpl
mov
out
push
add
neg
adc
mov
sub
inc
movsl
push
cmpb
mov
pop
insb
dec
mov
xchg
stos
int
adc
xchg
les
sarl
lods
xor
fwait
mov
mov
pop
push
pop
out
jp
insl
pop
jno
in
aas
or
cmp
add
or
and
xchg
sahf
add
xchg
xchg
popa
es
pop
mov
inc
test
fmuls
mov
ss
push
fiadds
xchg
or
filds
lods
mov
das
dec
mov
push
pop
in
je
mov
xor
xchg
data16
adc
mov
repz
cwtl
rcl
test
mov
mov
sub
cli
add
out
jecxz
xor
xchg
mov
lods
jecxz
pop
jne
icebp
leave
add
and
sbb
and
movsb
cmp
stos
icebp
xchg
fsubp
mov
jbe,pn
sbb
pop
mov
jg
cmpsl
data16
cmpsl
mov
lret
pushf
daa
xchg
jne
out
rolb
mov
cmp
test
push
xchg
mov
mov
js
jae
repnz
leave
test
int
outsl
xchg
inc
jl
xchg
xor
jg
inc
orl
fidivrl
lcall
pop
push
add
xchg
cmpsb
ja
or
xor
je
cs
push
pop
dec
lods
rcll
push
dec
ds
dec
addl
jne
lsl
test
jecxz
lods
movsb
test
mov
mov
ss
xchg
xlat
insl
cld
shlb
stc
out
int
or
divb
out
mov
jecxz
sbb
pop
push
xchg
pop
pop
lfs
ja
mov
xchg
sti
pop
mov
mov
xorl
repnz
cltd
test
psubsw
inc
xlat
and
bound
pop
negb
lcall
xor
stos
mov
fildll
fisubrs
call
into
add
rcl
mov
pop
push
push
mov
jg
mov
leave
cmpsb
pop
fisubrl
pusha
cwtl
mov
sub
pop
jecxz
dec
jle
mov
adc
dec
ds
insb
ret
dec
add
test
xchg
xchg
add
mov
and
aaa
xor
lds
movsb
rcr
pop
cmp
inc
jbe,pt
mov
dec
ret
and
add
cmp
pop
fiaddl
push
mov
std
lret
jne
sub
dec
js
adc
ret
fildl
cld
cmp
mov
js
jnp
add
sti
xchg
push
test
pusha
and
mov
mov
sbbb
pop
xchg
and
pop
pop
sub
and
pop
cmpsl
cmpsl
mov
xor
dec
or
push
add
mov
lcall
fwait
push
sbb
cmp
mov
push
cmc
sub
fpatan
cmpsb
cmp
shl
adc
rorl
jmp
sahf
scas
add
inc
mov
scas
sbb
sub
sbb
jg
lods
add
clc
daa
push
sahf
mov
nop
rcll
push
mov
adc
leave
popa
pop
test
jae
rcll
mov
add
cs
ja
cmp
fcomps
lods
jp
and
sub
sub
dec
xorb
push
sahf
pop
cmp
cmp
cmp
cmp
mov
inc
jae
jmp
add
mov
sub
dec
sub
sbb
fdivl
or
cmp
lret
ret
outsb
rcll
add
dec
xchg
pop
enter
push
int
push
xchg
stos
jno
mov
mov
cmpl
mov
ror
xor
loope
jge
or
adc
movsl
call
das
add
dec
dec
cli
cli
mov
push
adc
xchg
jmp
std
repnz
cs
or
xchg
lock
fs
shrl
adc
cmpl
push
cli
clc
test
jle
push
fisubrs
stc
sbb
and
jo
or
enter
ja
mulb
in
push
jbe
dec
lods
loop
xor
mov
int3
shll
push
ds
mov
jecxz
pop
jns
sbb
fistpll
mov
loopne
outsl
sbb
and
arpl
pop
js
sahf
pop
repnz
cmp
jo
dec
rolb
sbb
lret
nop
in
enter
or
jp
enter
jg
pop
lcall
shl
fsubl
add
mov
fistps
ret
out
mov
imul
in
inc
fwait
imul
mov
sub
gs
aam
mov
xchg
pushf
test
scas
and
push
icebp
inc
ds
fidivrl
jmp
test
cmc
xchg
fwait
sbb
arpl
cmp
fwait
sbb
ret
cld
jno
pushf
in
and
sti
mov
inc
cmp
inc
mov
arpl
popl
cli
int3
daa
idiv
push
xorl
mov
ss
pop
or
int
xor
cmpsb
and
movsl
pop
or
pushf
push
dec
movsl
mov
and
flds
sbb
push
push
stc
push
clc
xchg
aad
lahf
rcrl
jl
push
pop
push
or
or
and
in
loop
icebp
test
aaa
notl
dec
add
sti
xor
lcall
bound
imul
sahf
aad
and
and
push
or
or
notb
xor
sbb
push
aam
sub
jp
ja
sbb
cmp
jecxz
lock
mov
imul
jecxz
cmpsb
mov
je,pn
or
sbb
lcall
push
daa
ja
jg
rclb
pop
fstpt
adc
dec
adc
inc
push
arpl
es
rol
sbb
jge
insl
ret
ljmp
add
xchg
sub
pop
leave
inc
xchg
cmp
andb
fnstcw
inc
inc
sbb
mov
xorb
andl
leave
popa
cld
jb
shl
xor
cmp
fucom
mov
add
dec
or
out
subl
popf
mov
scas
std
lret
or
out
sub
int
mov
scas
cmc
outsl
xor
sbb
and
negb
pop
fldcw
cmp
jmp
cmc
sbb
fsubrl
xor
push
in
xor
loope
push
in
mov
cwtl
lds
insb
cwtl
mov
mov
sbbl
sub
data16
fldcw
ja
lret
sti
fadd
add
xchg
mov
ja
adcl
xchg
xor
cmp
sub
mov
dec
dec
orl
std
scas
aaa
inc
cli
push
jmp
aam
cmp
sub
lock
and
jg
js
call
dec
cld
or
scas
js
ljmp
cmp
or
inc
emms
es
mov
xor
push
out
iret
mov
sahf
or
rcl
cmpsb
add
mov
mov
and
scas
mov
lret
enter
add
call
leave
dec
add
std
mov
je
lods
sub
mov
jo
dec
mov
dec
jnp
ret
loope
arpl
pusha
pop
dec
jge
mov
sahf
das
fsubs
mov
dec
and
cmp
frstor
loop
shlb
lret
das
rcrb
movsb
mov
dec
popa
cwtl
push
push
xchg
adc
clc
fsubrl
addr16
dec
sub
pop
cmpsl
and
movsb
xchg
inc
pop
cmpsb
stos
paddq
test
ret
pusha
dec
repz
sub
push
ror
xchg
push
push
xchg
xor
and
aaa
push
mov
mov
jb
add
ror
add
or
jns
pop
dec
mov
jcxz
lea
sub
mov
arpl
call
scas
jl
lock
xlat
adc
xchg
imul
fnstenv
mov
sbb
push
jp
xchg
cs
ret
mov
add
int
add
mov
mov
jg
lods
and
popa
push
jg
add
pop
clc
mov
add
push
repz
sub
cmp
icebp
loope
xor
xor
pop
inc
pushf
lret
jle
or
sub
fstpt
int3
ret
and
jnp
mov
jne
enter
nop
fcompl
iret
outsb
fcmovnb
and
cwtl
mov
ficoml
aad
adc
inc
pop
icebp
inc
clc
mov
jns
xchg
xlat
sub
pop
jne
pop
push
sbb
xchg
mov
outsb
adc
jecxz
loope
neg
xlat
in
push
loop
cwtl
mov
lods
dec
ret
inc
sbb
shr
mov
leave
jge
outsb
scas
das
lods
lock
add
sub
inc
inc
push
push
xlat
sbb
inc
sbb
imul
movsb
leave
iret
dec
and
hlt
add
pop
ja
ds
shrb
scas
jo
outsl
jbe
xor
inc
popa
sarl
pop
pop
outsl
adc
and
sarl
mov
lret
int
mov
and
push
push
mov
dec
lcall
fmul
aad
insb
pop
imul
lret
and
inc
lods
mov
lods
leave
cmp
addl
pop
adc
xchg
xor
ljmpw
mov
gs
dec
or
stos
fcoml
aad
push
pusha
mov
xchg
adc
and
imul
aas
test
aas
outsb
ss
pushf
sbb
iret
jmp
push
pop
cld
cmp
fsts
mov
xchg
in
hlt
cwtl
xor
scas
pop
in
dec
jbe
jo
push
inc
mov
xor
fdivs
sbb
aaa
cmp
and
mull
ljmp
pop
cmp
icebp
es
fs
aam
push
aas
roll
jecxz
arpl
pop
jb
inc
test
mov
dec
push
outsl
mov
xor
movsb
adcl
in
sti
lea
jns
out
out
adcl
pop
outsb
add
rcr
lea
in
imul
mov
aam
pxor
push
hlt
add
fdivrs
pop
js
push
test
adc
jge
sbbb
mov
out
in
movsl
inc
rcrl
lahf
outsb
lea
subl
jns
mov
sbb
mov
aam
sub
sahf
ds
fcmovnb
movsl
cmp
iret
mov
inc
insb
aas
push
scas
test
adc
pop
mov
ret
push
add
xor
scas
dec
fdivrs
into
aas
in
cli
xchg
xchg
fstps
inc
cltd
incb
loopne
mov
or
pop
adc
mov
mov
or
and
jg
xor
lcall
orb
fwait
mov
mov
pop
data16
stos
mov
pop
or
pop
pop
lods
jmp
jb
jae
inc
out
pushf
sub
xor
dec
lock
mov
roll
xor
test
imul
lret
xchg
or
leave
in
es
inc
addr16
out
xlat
xor
cs
sarb
and
in
sbb
aam
push
and
push
jae
jecxz
xchg
pop
or
lock
push
mov
pop
mov
cmp
fdivl
iret
push
sti
sub
imul
adc
jnp
fnstsw
bound
pop
jno
and
push
xor
mov
int3
add
sbb
movl
push
dec
lahf
dec
enter
lret
pop
idiv
pushf
daa
dec
adc
mov
mov
cmpsb
fsubrs
movsl
sahf
dec
cmpsl
pop
adc
clc
lds
lret
inc
andl
bound
mov
outsl
clc
cmp
inc
mov
dec
mov
lea
xor
cmp
out
push
cmp
xchg
jg
inc
cmp
mov
and
jp
js
pop
jne
call
ret
add
mov
xchg
movsl
arpl
loop
aad
jae
dec
mov
sbb
dec
push
xchg
mov
pushf
push
jle
cwtl
mov
fisubs
dec
fadd
sbb
adc
jne
sbb
pushf
fldenv
clc
fistpl
xchg
ss
xchg
scas
or
popf
cmpsl
cmc
sarb
push
fiadds
xor
mov
push
ficomps
movsl
pop
cmpb
or
das
xchg
xor
and
vpmovsxwq
das
ds
jbe
jno
inc
test
je
lahf
aas
cmp
movsl
dec
and
les
scas
sub
ss
fimuls
xor
daa
sahf
fidivs
inc
repnz
inc
iret
fsubrl
xor
gs
aaa
jb
popf
xchg
adc
imul
or
mov
add
mov
sub
and
dec
adc
push
add
enter
cmpsl
or
aaa
sub
jp
roll
cmpsl
mov
lock
jnp
and
mov
lret
sub
jmp
sahf
pushf
add
mov
push
mov
adc
dec
ror
lret
or
int3
mov
rorb
sbb
gs
adc
push
test
notl
repnz
ds
mov
loop
dec
mov
or
stos
jmp
aad
mov
aas
stos
sbb
xchg
fwait
out
push
leave
jp
decb
or
inc
sti
push
add
mov
bound
int
xor
mov
pop
lods
pop
ljmp
repz
fnstenv
pop
mov
dec
cmp
mov
dec
jb
fisubl
call
xor
loop
test
pusha
cwtl
out
pop
inc
pop
jecxz
enter
cs
inc
and
das
arpl
int3
mov
hlt
xchg
out
fsubrl
push
nop
pop
sub
insl
test
xchg
jae
xor
inc
inc
dec
adc
into
out
fst
jnp
pop
lret
xchg
and
int
mov
stc
std
or
xor
sub
add
xchg
insl
push
test
mov
in
jne
cmp
js
popf
mov
gs
mov
cmpsl
add
hlt
add
dec
shl
and
fadd
xchg
adc
in
and
stc
rcl
dec
xchg
pop
subl
jge
add
pop
mov
sbb
clc
jg
push
or
loop
inc
mov
mov
pop
mov
aad
pop
sbb
push
shlb
mov
cmpsb
add
mov
mov
sub
jle
cmc
dec
cltd
push
pop
inc
inc
lods
loopne
and
and
aam
rorl
mov
xor
nop
leave
rorl
dec
inc
jb
add
adc
clc
fidivrs
cmp
sarl
push
arpl
jg
js
push
mov
ret
push
movl
dec
jge
xchg
popf
or
sar
movsb
out
fldcw
out
xlat
cmpsl
sahf
js
ds
sub
or
jg
aaa
cmp
call
fs
test
lahf
sbb
andb
pop
and
ja
xchg
cmp
iret
mov
sbb
movsl
or
cmp
addr16
mov
cld
bound
xchg
jp
sub
jl
cmc
mov
xlat
push
adc
and
dec
mov
pop
add
frstor
or
cmpsl
cld
out
mov
adc
int
xchg
stos
ficoml
in
jnp
cmp
push
das
push
mov
cmp
es
mov
lods
repnz
sbb
jmp
sbb
jge
inc
iret
xchg
inc
pop
popa
jg
jno
lret
sub
shrb
jne
test
sub
sbb
aaa
inc
cli
xchg
ja
xchg
adc
lret
data16
mov
mov
icebp
test
adc
xchg
inc
add
mov
mov
mov
dec
mov
outsl
sahf
cmp
xor
mov
daa
pop
aas
fidivrl
mov
jne
xchg
xchg
icebp
pop
dec
leave
sbb
test
push
push
xor
out
fs
movsl
xchg
aas
xor
pushf
mov
cmp
imul
inc
push
dec
jnp
mov
out
or
dec
popf
shlb
pop
and
ret
nop
fs
cmp
adc
push
testb
shl
cmp
jmp
pop
or
cmp
mov
subb
xor
es
sub
inc
add
jbe
std
or
push
sbb
mulb
sbb
inc
and
jecxz
mov
negl
mov
pusha
les
xchg
shlb
sub
test
xchg
mov
and
and
sar
xchg
fs
push
and
clc
lods
cmp
jae
sbb
mov
jl
clc
jmp
lcall
arpl
pop
pop
outsb
fsubs
cmp
sub
mov
ss
out
loope
mov
ja
test
cmp
std
sub
add
xchg
mov
push
cmp
pop
or
mov
lret
adc
pop
lds
leave
mov
fisubl
mov
call
xor
out
mov
sub
pop
mov
cmp
inc
push
or
mov
xchg
pop
ja
cltd
or
mov
jb
jno
mov
pop
notl
aaa
push
mov
sub
nop
inc
lock
push
mov
xchg
sbb
push
mov
popf
jge
test
fsubs
xchg
push
subl
add
jnp
ljmp
insl
ja
dec
fwait
ljmp
xor
out
pop
sub
pushf
mov
rclb
push
xchg
push
roll
ds
cltd
aad
testb
jg
push
lahf
xchg
outsb
rclb
xchg
cmp
insb
cli
rorl
sub
jno
dec
and
mov
sub
inc
div
ss
mov
jmp
into
sti
adc
into
cmp
pop
imul
xchg
cli
jg
adc
jnp
test
insb
nop
js
out
or
movb
xlat
mov
adc
in
ja
push
mov
pop
mov
mov
lock
pop
scas
mov
push
fwait
pop
or
sbb
repnz
adc
pop
jle
fwait
js
int3
in
lahf
leave
jecxz
pusha
jns
les
mov
push
sub
add
add
in
popa
pop
jbe
inc
xor
cmp
dec
mov
in
push
jge
xor
push
inc
les
imul
das
data16
cmc
sbb
mov
pop
xchg
lock
ja
stos
sbbb
push
out
xor
and
leave
pop
push
mov
mov
add
dec
pop
sar
pop
lcall
pop
add
mov
push
mov
adc
mov
gs
jecxz
lahf
xchg
fildll
pop
or
loope
lds
scas
out
sub
fs
jle
test
test
add
std
stos
jno
push
xchg
mov
dec
or
dec
sbb
mov
cmp
or
leave
jle
ret
push
xchg
negb
adc
adc
jmp
cld
js
add
mov
push
stos
in
pop
dec
pop
in
lret
push
sbbb
mov
or
nop
xchg
sbb
push
push
push
xchg
cli
loopne
sub
das
sbb
cwtl
mov
js
xchg
insb
es
dec
jle
push
jg
pop
out
sbb
repnz
dec
shll
in
sarl
loope
mov
mov
pop
or
cmp
enter
and
cmpsb
fsubp
je
mov
aaa
push
insb
cli
adc
jl
dec
mov
push
jmp
jne
sub
out
or
icebp
sbb
adc
jle
in
movsb
sbb
mov
jmp
out
xchg
xchg
std
pusha
jmp
insl
add
addb
leave
and
push
sbb
lock
es
xchg
push
dec
mov
or
in
push
aam
into
add
repnz
jae
mov
out
and
and
in
imulb
out
ljmp
lods
push
sub
testb
lcall
xor
push
fcoml
andl
lea
push
pop
out
int
je
insl
push
mov
sbb
daa
push
mov
in
movsl
lret
mov
cmpsb
cmpsl
vmovq
test
mov
test
mov
aas
je
mov
push
aas
pop
pop
aam
xchg
push
jle
pop
or
out
adc
xchg
pop
sbb
dec
mov
jp
and
into
repnz
iret
mov
in
push
adc
or
sti
scas
or
add
sbbl
sbb
push
insb
jecxz
mov
mov
scas
stc
mov
xor
add
icebp
fldt
mov
or
push
mov
or
sbb
xor
movsl
xorb
fwait
xchg
sbb
mov
xor
shlb
push
cmc
jbe
fsub
jmp
and
mov
mov
mov
mov
and
mov
ljmp
clc
int3
or
sbb
ja
xchg
push
iret
ljmp
and
outsb
loop
pushf
enter
or
add
jo
fcoml
in
inc
or
xlat
cltd
add
rcl
orl
and
inc
add
mov
xchg
sub
inc
sbb
push
jb
sti
add
lret
jno
push
pop
test
sbb
sbb
fs
xor
pop
xor
mov
test
pop
cmp
in
es
punpcklwd
outsl
shlb
out
cmc
mov
inc
into
test
xor
push
pop
jecxz
sub
cmp
andb
ds
mov
daa
outsl
jnp
and
cld
and
xor
mov
sahf
mov
testb
imul
dec
mov
inc
xchg
push
push
out
push
popa
sarl
dec
cmp
out
dec
test
je
iret
cmpsb
ds
pop
ret
push
mov
jl
xchg
sbb
fadds
popf
mov
gs
pop
scas
ljmp
mov
xchg
in
sbb
sti
mov
inc
icebp
lock
movsb
mov
movsb
stos
push
xchg
or
jne
lea
mov
jmp
aaa
sbb
mov
fwait
cmpsl
adc
pusha
and
dec
pop
insl
mov
push
aas
sbb
dec
mov
adc
adc
xchg
jo
sub
test
inc
xchg
ljmp
lock
loopne
int3
filds
mov
xor
mov
push
push
cmc
jecxz
pop
int3
push
std
mov
insb
sub
int3
lea
mov
shrb
rorb
fstl
leavew
mov
xor
and
inc
enter
xor
scas
loope
pusha
test
lods
out
repz
jns
data16
ret
pusha
loopne
clc
or
push
daa
lcall
pop
xor
fisubl
popa
and
fwait
aad
mov
rol
jae
frstor
inc
dec
lds
jne
jle
jne
adc
bound
inc
fnstenv
or
push
into
mov
leave
mov
mov
xchg
stos
leave
jne
clc
jmp
jnp
popa
mov
sub
je
lods
mov
testl
cmpb
add
mov
clc
inc
inc
outsb
mov
in
pushf
popa
lcall
sub
imul
adc
imul
faddl
sub
cmp
std
je
add
mov
fstpt
xchg
fwait
xchg
cltd
daa
ja
mov
in
out
jno
add
mov
jp
sub
jle
dec
sti
xor
pop
nop
ljmp
das
pop
push
or
cmc
jl
inc
pop
cld
andnps
aaa
aad
jne
rol
cli
cwtl
and
sub
scas
mov
cltd
mov
dec
or
imul
dec
out
xor
mov
adc
rcr
jae
inc
stos
addb
adc
mov
add
das
push
jle
and
pusha
cmp
stos
jg
es
in
clc
mov
jecxz
mov
rcrb
loop
xchg
jns
out
into
add
or
out
xchg
pop
sub
andb
lret
pop
loopne
fdivl
int
sbb
imul
or
lods
or
nop
rorb
into
aam
or
js
testl
cs
add
add
or
lods
imul
orb
outsl
in
push
fiadds
jl
int
call
xor
pop
mov
shll
cmpsb
popf
jmp
mov
xlat
ret
popf
stc
mov
loop
sub
loop
clc
add
out
filds
aas
push
test
dec
outsl
pop
add
inc
cmp
inc
fidivrl
add
js
sbb
mov
out
push
loope
cli
adc
in
adc
and
stos
andb
push
data16
or
cmp
out
mov
cmp
sub
or
lds
xchg
pop
imul
mov
mov
je
mov
mov
mov
mov
jg
jmp
fdivrs
mov
into
xorb
repnz
adc
push
push
adc
or
int3
pop
loopne
out
mov
dec
mov
sbb
test
sub
mov
into
shlb
fimull
adc
mov
xor
adc
mov
lcall
or
popf
daa
xchg
pop
xor
mov
jl
sahf
inc
dec
jo
adc
pop
add
xor
jo
add
dec
movsl
jne
push
cltd
and
push
scas
or
mov
cmp
in
mov
into
fwait
sti
mov
cmp
test
lcall
in
mov
sbb
shlb
pop
inc
dec
push
inc
orl
jle
orl
push
adc
lahf
pushf
or
jge
loopne
insl
and
and
out
push
jo
rclb
add
xchg
add
bound
push
std
push
pop
push
ja
out
push
mov
sbb
mov
cmp
lods
pop
iret
cmovbe
jecxz
ss
add
repnz
daa
add
mov
pop
cmpsl
ret
mov
les
cmp
xchg
stc
ret
out
inc
inc
insl
imulb
adc
add
pop
addb
lahf
in
mov
stos
arpl
insb
test
pop
sub
es
xor
jbe
mov
jg
test
sbb
sub
pop
insl
dec
lahf
sub
jg
movsl
pushf
aam
mov
jle
fstpt
ljmp
push
imul
push
mov
jmp
xor
pop
pop
pop
xchg
xchg
mov
mov
dec
sarl
mov
and
aad
out
rcrb
sbb
add
int
mov
cmc
sbb
inc
lock
rcrl
dec
cwtl
xor
fsub
outsl
sbb
pop
mov
adc
adc
mov
xchg
jne
mov
aas
je
xor
pop
aas
mov
cmpl
push
jno
cmpsl
stc
jb
fs
and
shlb
loopne
aad
arpl
sarw
cmp
mov
clc
cmove
mov
cmc
shlb
test
pop
push
jmp
xlat
mov
xor
adc
movsb
jg
sar
cmpsb
loop
fldt
loope
insb
cld
gs
dec
mov
scas
les
decb
std
enter
push
jmp
fcomps
lock
cmp
insb
scas
pop
cmp
mov
mov
jns
rclb
ret
lret
jecxz
loope
adc
or
add
jge
xchg
inc
popl
mov
imul
scas
jne
mov
pop
pushf
jo
inc
insb
insb
sbb
mov
test
pop
xor
popa
rcrb
imulb
ds
divb
dec
dec
and
mov
dec
lock
fisttps
divl
jnp
fwait
rcll
movsl
cmp
daa
test
mov
jl
fcmovnu
in
int3
inc
in
cmp
jg
mov
shl
fwait
sbb
pop
dec
das
adc
add
imul
inc
pop
outsb
xor
pusha
or
pop
dec
mov
fs
xchg
mov
pop
lret
pop
xchg
jle
push
out
cmp
xor
jb
jae
mov
mov
lret
inc
xchg
jnp
push
loope
inc
mov
stos
popl
and
fsub
aam
cmp
enter
dec
iret
pop
jl
dec
cmc
jnp
sub
stos
rorb
fistl
lods
add
push
in
add
jmp
add
out
cli
pop
jno
or
or
fld
add
jle
aam
mov
hlt
pop
push
add
insl
xchg
adc
lret
aas
lahf
push
mov
add
pop
out
dec
sbb
fldt
rcll
add
or
clc
stos
xchg
inc
sti
jg
and
in
push
adc
cli
call
jae
adcb
push
loopne
adc
mov
ljmp
sbb
sub
test
ja
das
xchg
addr16
imulb
std
jge
sbb
ja
xor
hlt
push
cmp
inc
std
cmp
mov
jmp
push
xchg
cmp
mov
push
xchg
mov
cmp
test
push
inc
out
push
sarb
pop
sbb
out
adc
pop
out
movsl
sbb
dec
jae
dec
aad
xlat
fwait
push
in
aas
test
add
bnd
in
jp
adcl
mov
xorb
cmpb
out
cli
lret
push
jbe
mov
adc
push
push
adc
outsb
jnp
adc
movsb
adc
pushf
movsb
loopne
hlt
lods
ficoml
or
lds
mov
xchg
sub
xchg
rolb
inc
rorb
in
icebp
push
or
imul
leave
jne
icebp
add
pop
add
popf
psadbw
andb
fimull
mov
sub
adcl
inc
xor
lcall
jns
add
or
shll
jnp
enter
fcomps
push
outsb
clc
loope
into
fsts
jmp
push
mov
push
and
mov
sti
cmp
clc
lea
mov
dec
sarb
hlt
and
mov
fmul
xor
mov
xchg
mov
mov
sbb
popa
cltd
pop
pushl
cmp
pop
loop
sahf
pop
cmc
mov
aam
aad
add
mov
adc
out
dec
cmp
pusha
dec
xchg
inc
mov
pop
movsl
js
mov
out
or
frstor
aaa
loop
xor
mov
std
add
frstor
in
mov
lods
push
movsb
mov
jmp
dec
mov
push
std
mov
pop
xlat
xchg
aas
lcall
xor
dec
andl
fdivs
sub
sbb
pop
jecxz
xlat
testb
mov
mov
and
aad
xor
scas
sbb
jmp
out
mov
xchg
dec
push
add
cmp
mov
inc
xor
cmpsl
inc
into
stos
push
push
dec
sbb
mov
std
xor
cli
clc
pop
out
jp
jnp
xor
and
sub
pop
push
cmpl
mov
fcmovbe
mov
das
cmp
mov
mov
mov
sub
xlat
ljmp
mov
lock
shlb
cmc
pop
imul
add
xchg
fsubl
adc
outsl
jno
in
cltd
fmul
pushf
jp
aaa
icebp
cmp
jg
stos
les
es
data16
lock
add
std
jmp
pop
push
and
lods
sub
pop
lock
movsl
inc
fmulp
jb
jg
repz
pop
mov
lcall
and
cld
fwait
loope
stc
jb
rcrb
jge
rcl
xor
sub
adc
shlb
aad
outsb
lcall
and
iret
fcoms
fdivl
and
in
pop
jp
pop
and
xchg
mov
xchg
pushf
sbb
mov
jge
push
aas
sbb
jno
sbb
xchg
loopne
sub
std
mov
arpl
mov
bnd
out
inc
and
bound
sub
pop
add
and
dec
cmp
dec
push
cmp
mov
loope
lds
dec
out
mov
mov
mov
shlb
sub
xchg
add
ja
push
or
fnstcw
fmul
stc
mov
fistps
fsubr
int
out
cmp
mov
idivl
imul
xchg
dec
ret
mul
sbb
fmull
push
cmp
pop
jmp
je
pop
cmp
push
cmpsl
xchg
hlt
mov
stc
jns
mov
mov
pop
add
sbbl
push
mov
jae
mov
adc
jnp
lods
push
mov
ljmp
int
dec
andl
aaa
enter
jg
push
push
push
int3
repz
and
popf
and
cmp
pop
dec
call
pop
aas
xchg
mov
test
enter
cli
mov
sti
add
xor
fdivl
adc
repnz
mov
aas
and
popa
lds
fnsetpm(287
cmp
adc
sub
jle
push
in
test
arpl
mov
and
in
sbb
adc
sbb
addr16
pop
in
dec
ret
sub
sbb
add
imul
mov
out
xchg
lahf
ret
aaa
mov
pop
cmp
adc
js
test
jnp
xor
cmp
mov
xor
out
inc
jns
cmpsl
jge
int
jp
test
push
shrb
or
imul
in
popa
xchg
xor
addr16
ss
aad
daa
cltd
lret
aam
scas
sbb
clc
pushw
aas
rorb
leave
xchg
paddusw
pop
test
add
inc
aaa
push
push
mov
pop
dec
fdivl
sbb
jge
push
ror
aad
and
jae
dec
loop
lahf
xor
jae
insl
or
hlt
xor
fucomi
aam
add
mov
mov
xor
fs
es
pop
loope
xor
push
pop
xor
jmp
jbe
out
outsl
xchg
call
adc
cld
sub
push
leave
sub
popa
pop
std
push
jb
mov
mov
push
push
stos
jnp
or
jno
sbb
and
push
int
mov
add
bound
lret
sub
je
ja
das
cs
loope
inc
fcmove
mov
out
sub
mov
ret
mov
cli
and
daa
out
mov
mov
adc
mov
stos
xchg
outsl
push
ret
in
loop
push
into
or
xor
js
in
mov
pop
std
jle
inc
sbb
sbb
into
sub
dec
sub
movsl
ret
arpl
inc
fsubl
or
jbe
stos
in
call
jg
pop
ljmp
ficomps
dec
mov
xchg
pop
dec
jnp
cmp
jle
cmp
movb
in
cli
int3
cmp
push
or
loop
icebp
mov
mov
cmpsb
jb
ds
repnz
xor
bound
sub
popl
jbe
repnz
rolb
jmp
out
in
cld
shl
adc
sbb
shrb
jno
adc
jmp
jle
inc
push
andl
pop
stos
int
fsubrs
dec
cmp
clc
adc
int
mov
lds
push
push
jle
icebp
test
pop
lds
mov
pop
cmp
jbe
mov
mov
xchg
or
or
lock
daa
xchg
adc
ret
pushf
mov
and
repnz
add
test
jmp
enter
mov
les
hlt
or
aad
push
cwtl
popf
xchg
pop
nop
nop
push
mov
repnz
jl
push
mov
roll
sub
fbstp
inc
lea
pop
xchg
test
mov
sub
jg
inc
fstpt
repnz
fdivr
cs
movl
iret
pop
sub
xor
pop
cmpsl
loop
xchg
dec
orb
fmull
push
sbb
fistpl
pusha
adc
xor
lsl
pop
mov
ds
fisubrs
lea
dec
xor
fldl
pushf
dec
pusha
add
push
or
imul
sub
cld
aas
fs
push
mov
int3
aad
arpl
adc
xchg
sbb
jecxz
xchg
push
pop
fwait
lock
mov
jp
xchg
xchg
pusha
push
xchg
pop
imul
orl
es
lock
mov
fs
stos
roll
push
mov
jo
lock
mov
xlat
xor
repz
xlat
cwtl
stc
inc
ds
sub
sahf
mov
push
mov
out
nop
fsubs
call
sbb
sti
ret
mov
inc
sub
adc
fidivrl
and
add
sub
sbb
int
gs
xchg
in
push
xchg
sbb
aas
lret
cmp
cwtl
cwtl
jb
inc
and
inc
shll
cltd
sbb
mov
scas
lock
and
cmc
lret
jbe
dec
sbb
sub
pop
mov
data16
xor
sub
out
inc
pop
fcoml
push
pop
movsb
jg
add
adc
js
movsb
cmpsl
sub
mov
xchg
pop
xchg
sti
mov
xchg
fs
imul
mov
mov
cmp
sbb
add
xchg
pop
add
aas
scas
xchg
js
jle
xchg
out
lods
in
sbb
lret
sbb
mov
ja
adc
loop
lret
data16
in
add
vorpd
int3
fnstcw
cmp
iret
fs
aas
adc
loop
mov
jecxz
pusha
push
out
ss
fwait
jmp
push
sub
pop
subl
and
pop
jecxz
in
dec
lahf
mov
fsubrl
pop
pop
movb
push
std
xchg
out
sub
mull
test
cmp
sbb
stc
lahf
adc
sbb
xchg
ljmp
and
aas
ret
addr16
in
xchg
mov
push
adc
xor
lods
cmp
xor
add
sti
pop
pop
lcall
jmp
add
stos
add
sub
mov
in
cli
lret
mov
stc
jge
std
jne
xlat
inc
sub
out
aam
stc
sub
mov
mov
mov
fldcw
pop
mov
outsl
push
shll
mov
lret
fs
testl
sub
lahf
or
rorb
pop
fidivs
popw
inc
adc
testb
pop
jbe
cmp
or
push
inc
or
leave
mov
adc
xchg
push
lock
push
int
arpl
in
mov
push
mov
ja
shlb
cs
out
cmp
add
sub
bound
lock
push
scas
nop
lods
xor
dec
xor
jbe
sbb
xchg
loope
movsl
das
aaa
std
xlat
sar
inc
or
adc
xchg
mov
pop
xchg
das
jns
stc
sbb
xchg
ljmp
xchg
mov
push
cmpsb
mov
leave
inc
cli
xchg
cmp
add
pop
gs
sahf
iret
xor
xchg
adc
inc
mov
fsubrl
sti
adc
xchg
insb
jecxz
testl
mov
jmp
jecxz
push
mov
popf
inc
mov
sbb
dec
repnz
pop
outsl
sbb
shrl
add
inc
ds
jno
fcmove
dec
jbe
jl
flds
mov
cmp
xchg
inc
pop
sti
aam
xor
adc
movsb
jle
pushf
adc
movsl
cmp
and
cmpsb
jnp
and
push
mov
mov
jnp
pop
add
movsb
pop
xchg
cltd
addb
movsl
mov
mov
sub
scas
pop
out
fdivrl
inc
sbb
divl
arpl
and
adcb
mov
jge
sbb
mov
nop
mov
jbe
mov
fistpl
adc
push
rclb
push
in
fadds
dec
and
lahf
rcrb
sub
mov
fdiv
fwait
add
mov
subl
xchg
sbb
or
std
mov
lahf
lds
jl
jle
std
jle
insb
leave
xchg
test
in
repnz
rcl
adc
movsb
sub
xlat
popf
push
hlt
push
fs
sub
push
mov
and
jge
out
and
sbb
or
mov
xchg
test
test
push
out
fiaddl
sbb
out
add
jns
ja
inc
cmp
aaa
xchg
mov
mov
sub
int
xchg
bound
test
loop
cs
fldt
or
daa
jg
das
pop
lahf
xorl
inc
arpl
or
mov
cs
mov
lret
jnp
repz
cltd
into
loope
mov
and
pop
lret
mov
ja
cmp
aad
aad
jmp
out
lds
lds
adc
icebp
stos
push
rcrl
and
xchg
lcall
call
mov
cmp
jl
div
adc
hlt
iret
push
dec
enter
xorl
dec
out
loopne
dec
jno
les
jae
aaa
jnp
call
and
aas
adc
mov
mov
push
or
jmp
adc
and
cmpsl
out
jge
je
pop
fcompl
cmpsl
popf
sbb
mov
or
loop
xor
add
fidivl
xchg
in
out
pop
dec
fcomps
shll
loopne
mov
shr
test
sbb
jb
outsl
insl
test
jg
add
mov
jmp
outsb
les
scas
imul
or
jnp
add
fdivrl
dec
push
xor
shll
sbb
pop
sbb
sub
xchg
mov
or
adcb
mov
outsb
cmp
mov
out
aam
rorl
out
or
imul
pop
sub
stc
mov
lret
jmp
outsl
pop
jmp
xor
outsl
dec
xchg
pop
cmp
lahf
cmp
insl
andb
xorb
in
sbb
jmp
popf
inc
insl
ljmp
lret
ss
xor
hlt
stos
iret
sub
mov
xor
adc
fstps
mov
jno
push
ret
test
xchg
jecxz
mov
xchg
cmp
out
daa
hlt
sbb
jnp
sahf
je
ret
xchg
fiadds
mov
inc
nop
in
stos
xlat
jns
cmpsl
fcmovbe
xor
inc
mov
push
push
mov
mov
fldt
sub
aam
jb
in
adc
lahf
fiadds
sbbl
add
into
hlt
or
imul
incb
scas
jb
jnp
dec
lods
out
in
loop
clc
jl
or
mov
iret
fwait
mov
jmp
or
xor
hlt
outsb
mov
dec
inc
dec
xor
jns
pop
loop
mov
pusha
rclb
loop
lret
mov
mov
xor
adc
aam
test
sbb
pushf
mov
inc
add
add
pop
movsl
daa
mov
stos
imul
lret
dec
pop
insl
aaa
lock
insl
or
xor
psraw
push
cmp
jmp
movsl
sbb
and
sub
mov
jae
arpl
daa
mov
lock
pop
xchg
mov
jb
clc
lea
ret
insb
or
dec
je
mov
fwait
pop
scas
imul
mov
xchg
mov
adc
and
inc
push
ficoml
out
arpl
cmp
jno
out
xchg
mov
push
push
fimuls
call
sbb
mov
jecxz
adc
repnz
movb
test
cmpsb
je
xchg
cs
mov
cltd
xchg
cmp
ds
pop
push
jo
dec
hlt
flds
bound
xchg
dec
mov
icebp
mov
bswap
in
clc
int
les
lods
cmp
movq
dec
adc
lret
and
and
test
mov
or
push
push
push
je
push
or
jecxz
in
test
xchg
dec
xchg
nop
fdivrp
ss
sub
push
repnz
test
rcrb
fucomp
cmp
fwait
jge
or
or
dec
xchg
jb
adc
les
mov
repz
or
pop
cmp
loope
sbb
push
das
scas
cmpsl
hlt
xchg
pop
out
mov
jb
call
test
fwait
mov
jb
loope
loopne
inc
or
loope
imul
and
fsubrs
out
sub
or
mov
xor
lds
sbb
xchg
xorb
jp
dec
sbb
fsubrl
ljmp
add
cli
fucomip
js
outsl
insb
pop
stos
mov
jbe
imul
setge
mov
or
pop
xor
add
push
push
jmp
add
les
jmp
and
aad
daa
mov
xor
xchg
push
dec
std
inc
scas
or
fs
sbb
insb
fldt
push
sbb
inc
xchg
inc
add
test
cbtw
fmull
dec
sahf
in
out
mov
cmpsl
sbb
fsubrp
or
adc
les
push
outsb
ret
add
push
fidivrl
pop
rclb
or
icebp
mov
rol
fsts
sarl
ja
jmp
adc
push
xor
fildl
mov
bound
scas
icebp
inc
or
add
jmp
icebp
repz
dec
fdivrl
jbe
sbb
pop
dec
fmuls
pushf
adc
mov
sarl
pop
add
inc
cmc
dec
ret
pop
xchg
push
repz
dec
and
jecxz
ss
sub
push
add
test
xchg
lahf
movsl
out
sbb
push
or
dec
fidivs
xchg
and
xchg
movsl
cmp
push
mov
test
dec
pop
mov
push
sbb
cmp
std
loop
dec
fbstp
mov
jmp
addb
jb
xor
jae
sbb
xchg
ss
mov
pop
outsl
xchg
cmpsb
sbb
sbb
jne
add
andl
lea
fwait
mov
jp
gs
jnp
or
call
fst
cmp
push
lret
sbb
andb
push
pop
mov
lods
inc
sbbl
mov
xor
fcoms
mov
mov
pop
pop
mov
adc
je
data16
ja
adc
jg
clc
inc
xchg
sti
std
shrl
sub
iret
enter
in
jnp
sub
repnz
pusha
popf
mov
mov
iret
push
pop
push
test
mov
add
in
add
pop
ror
lcall
lcall
or
add
orl
pop
jg
and
out
cltd
je
lods
jmp
mov
sti
je
lock
popf
pop
adc
jmp
mov
pop
call
nop
fs
add
scas
or
repz
rorb
pop
push
int
xchg
aaa
mov
sub
push
or
and
pop
push
and
filds
incb
test
test
sbb
jns
cmp
sub
jne
xor
push
test
mov
call
inc
mov
andl
inc
mov
push
jecxz
movsb
fmul
pusha
int3
mov
push
inc
shrb
add
xchg
out
pop
push
inc
js
rcrb
sti
loope
test
xchg
cmp
xchg
movsb
fwait
andl
sub
ret
or
adc
push
jbe
fdivp
sbb
or
pop
and
jmp
push
lea
aam
dec
dec
mov
xchg
adc
enter
or
ja
mov
push
add
out
ret
inc
leave
jg
es
xchg
sub
push
daa
pop
push
pop
jb
and
xchg
push
xchg
stos
add
es
sbb
pop
clc
ja
pop
push
sub
out
mov
or
mov
inc
mov
loopne
imul
mov
out
jecxz
push
mov
inc
xchg
popa
les
or
and
pusha
add
popa
outsl
push
xchg
in
mov
pop
or
mov
pop
inc
insl
cmp
loopne
lret
xor
or
add
aam
test
mov
test
adc
jp
dec
popa
mov
pop
xor
xor
mov
popa
cmpl
mov
sub
push
mov
inc
xor
lock
jmp
mov
adcb
movsl
loope
and
arpl
sbb
sub
ds
jmp
sbb
pop
inc
mov
push
nop
pop
cmc
cmp
movsb
lods
dec
dec
and
sbb
adc
push
fstl
mov
inc
dec
fimull
into
lods
out
xor
or
jge
ss
sbb
dec
pop
sbb
stc
lods
stc
and
sbb
cmovl
stos
jo
mov
sbb
out
jns
int
mov
cli
insl
test
idivl
std
jp
cmpsl
cli
cmpsl
push
insl
xor
push
cmc
inc
dec
lahf
ljmp
sbb
inc
stos
ljmp
dec
fldenv
xorb
fsubs
sub
std
mov
fldl
jae
or
lret
addr16
sbb
adc
add
aam
cs
pop
mov
test
cmp
daa
jbe
push
repz
cmp
xor
or
ljmp
jne
ficoms
inc
push
fiaddl
test
push
xchg
mov
aas
sbb
cli
xor
dec
insl
mov
cmp
add
shlb
dec
dec
out
push
adc
xchg
dec
aad
ja
imul
push
lds
xlat
pop
adc
ret
pop
jmp
ret
pop
xor
ds
sbb
scas
aaa
push
fcmovnbe
mov
cltd
into
in
cwtl
or
stos
mov
sahf
pop
mov
fincstp
fsubrl
push
jmp
xchg
dec
das
xchg
xor
mov
jae
aam
mov
cmpsb
cmp
cmp
mov
add
sub
repz
data16
mov
push
movsl
out
jbe
test
fmul
mov
out
sbb
frstor
push
and
cmp
movsb
or
lods
sub
adc
ds
cmp
gs
nop
mov
xchg
xlat
das
cwtl
lods
lea
mov
fwait
in
arpl
cmpl
scas
test
mov
add
aad
cmpsl
ljmp
fucomip
push
or
test
and
nop
imul
mov
cmp
jge
jge
jle
push
pop
aaa
outsl
cmp
inc
xor
cmp
test
cs
dec
and
das
jp
xchg
jno
addb
jl
xchg
add
and
and
xchg
add
stos
aad
sarl
push
out
ficoml
or
xor
cs
jns
je
xor
in
add
je
inc
cmp
cld
cli
arpl
das
int
mov
jb
xor
cmpl
rcrl
test
push
xchg
lret
ficomps
out
js
xchg
mov
xor
insb
stc
bound
push
mov
xchg
push
aas
scas
mov
sbb
sbb
out
adc
pop
cmp
repnz
push
je
and
popa
xlat
inc
cmp
shlb
xor
jl
jecxz
add
in
adc
in
push
sub
mulb
sti
les
push
inc
fs
rclb
daa
nop
cmc
push
pop
mov
push
sbbb
hlt
jecxz,pn
xchg
clc
mov
nop
push
lret
outsb
ret
push
mov
stc
cmp
inc
lods
push
ja
cmpsl
je
int
pop
mov
xchg
push
mov
jnp
loop
jbe
cmp
es
fsubr
xchg
scas
inc
cmp
idivb
imulb
and
fs
cmp
lods
adc
lods
adc
push
xor
popf
sub
stos
mov
mov
jp
sub
leave
sub
xchg
mov
mov
test
in
daa
cmp
andb
push
dec
in
mov
pop
loope
or
inc
insl
jle
mov
mov
test
mov
xchg
ss
stc
insl
cmp
les
mov
xchg
int
mov
jno
testl
ljmp
mov
or
enter
mov
jno
ja
xor
adc
cmpsl
dec
int3
out
ficomps
sub
sbbl
imul
aaa
cs
scas
mov
inc
cmp
outsl
sbb
jg
test
dec
mov
in
lcall
daa
mov
fwait
ja
mov
mov
fdivl
sub
iret
test
movsb
dec
stos
insl
mov
sbb
adc
adc
sahf
pop
cmp
mov
xchg
decl
cltd
push
cs
scas
adc
push
dec
scas
iret
inc
je
or
rcrl
jmp
push
or
or
int3
xchg
dec
test
jl
out
sbb
add
je
gs
cmp
fistpll
mov
je
cwtl
jl
rolb
lahf
icebp
ror
fcomi
imul
inc
out
repnz
push
add
popf
or
mov
popf
pop
test
fsubrl
pop
int
cmpl
inc
pusha
mov
inc
cmp
and
mov
cld
das
fs
push
and
sub
lahf
mov
sub
insl
xor
jb
cltd
insl
test
mov
xlat
inc
jp
pop
adc
in
and
xchg
repnz
ret
in
int
pop
xor
aaa
data16
in
pop
sub
andb
pop
mov
sub
fidivrl
add
cld
inc
test
into
xchg
ret
xlat
sub
loop
add
clc
adc
inc
outsl
add
pop
mov
addl
sbb
xchg
mov
shll
popw
cli
test
push
movsl
lcall
scas
xchg
add
dec
in
les
rorl
jle
jmp
ss
adc
adc
insl
cld
adc
add
pushf
mov
dec
push
push
iret
xor
cwtl
je
adc
loopne
xorb
aaa
insb
icebp
imul
in
mov
mov
out
out
xor
sbb
fstpt
sub
testb
addl
mov
movsl
inc
inc
shl
and
ret
xchg
enter
dec
fidivrs
fsubrl
push
sbb
fimull
ror
nop
mov
cmpsb
push
pusha
fisubrl
pop
jmp
mov
xchg
or
mov
mull
cmpb
fs
and
xchg
div
lds
movsb
scas
push
mov
xor
lock
sub
scas
in
cmp
mov
std
mov
push
jl
je
lret
imul
pop
lods
fs
adc
outsb
rcrl
lods
fdivr
mov
mov
cmp
outsb
cmpsb
sbb
test
loope
lds
xor
jnp
pop
lock
dec
cmp
mov
leave
xor
insl
lods
push
aam
push
in
scas
sub
jns
leave
rolb
adc
hlt
mov
test
or
and
push
pop
and
mov
fcom
ret
inc
pop
lock
das
cmp
fmulp
xor
dec
xchg
lahf
repz
imul
popl
pop
aad
mov
dec
das
sub
mov
stos
rcl
sub
mov
nop
roll
int
mov
push
dec
lcall
pop
dec
sub
cmp
mov
shll
sti
mov
lods
pop
xor
mov
push
pop
in
dec
or
into
or
in
push
xor
rclb
and
add
popa
jo
xor
xchg
fsubl
push
adc
arpl
imul
leave
lret
inc
je
mov
mov
fmul
cmp
or
in
test
cmpsb
mov
stos
andl
cltd
lret
dec
mov
sbb
lret
jmp
sahf
sarl
xor
in
dec
or
pop
cmc
sbb
decb
add
int3
sahf
fs
into
cmp
sub
xor
mov
or
icebp
in
lea
push
ljmp
sub
cmp
push
push
or
xchg
push
das
lcall
scas
push
push
pop
lret
mov
or
ja
and
jnp
shrl
divb
shrl
fs
jecxz
dec
jo
cmc
stos
mov
pop
pop
jne
fimull
xor
hlt
movsl
and
lahf
jb
dec
aad
xor
in
push
adc
cltd
vshufps
lret
rorb
arpl
lds
inc
and
pop
xchg
mov
fisttps
xor
jne
jg
test
mov
lahf
inc
lcall
fists
scas
imul
fbld
adc
cmpsb
int
daa
jmp
push
ret
mov
or
mov
jecxz
jl
testl
dec
sbb
jno
lret
outsb
hlt
push
mov
pop
dec
and
lods
dec
add
pop
call
shrb
clc
dec
jns
pop
mov
jb
out
int
or
and
mov
cmp
lods
hlt
dec
inc
cmc
daa
adc
in
jns
sbb
lahf
out
cltd
test
pop
mov
sub
clc
notb
and
call
popf
lret
dec
mov
mov
lods
xor
dec
mov
out
xor
nop
leave
mov
in
mov
jne
xchg
gs
mov
or
or
scas
pop
jno
ja
fstps
fs
or
mov
push
cmp
das
adc
pop
sbb
lcall
push
test
cmp
adc
and
sub
aas
movsb
pop
adc
push
imul
mov
mov
mov
mov
fildl
hlt
adc
push
ret
dec
push
dec
xchg
dec
aam
loope
jl
pop
push
das
push
pop
sub
lock
inc
lds
or
lret
xor
lcall
mov
pop
adc
adc
daa
es
sti
mov
addr16
sbb
adc
cltd
setae
les
sarb
xlat
sbb
imul
stos
sbbb
push
add
pop
adc
push
mov
aas
and
fst
sub
mov
add
push
jecxz
stos
pmaxub
cmp
mov
inc
push
xor
and
fdivr
dec
fnclex
dec
add
mov
sub
loop
inc
cmp
stc
in
jmp
ret
scas
sub
clc
in
dec
lods
adc
push
pop
test
std
or
mov
fimuls
add
call
adc
jl
test
jl
pop
aam
fcoms
aad
dec
pushf
pop
mov
fisttpll
lcall
popa
outsl
pop
xchg
daa
in
add
push
pushf
push
mov
bound
loopne
clc
mov
xchg
out
in
mov
push
je
sbb
add
jne
inc
sub
adc
add
push
dec
loopne
enter
xor
cltd
clc
pop
mov
adc
scas
mov
pop
fmul
mov
push
es
popf
js
add
cs
adc
inc
sahf
inc
bound
imul
sbb
mov
mov
scas
arpl
in
and
jg
xor
and
add
loopne
mov
adc
movsb
adc
mov
sbb
mov
push
sub
cmp
add
loop
enter
ljmp
insb
cmc
pop
mov
decl
cmpsl
pop
mov
daa
mov
loopne
mov
ret
fs
pop
xchg
mov
add
or
inc
pop
jle
stc
dec
xor
add
inc
dec
arpl
hlt
inc
cwtl
lds
cli
lock
sub
push
mov
add
jp
jmp
xlat
fisubrs
arpl
faddp
ds
pop
xchg
lahf
ss
enter
repnz
fwait
sbb
sbbb
add
out
sbb
repz
leave
enter
cwtl
mov
into
pop
pop
int
or
aad
pop
sbb
mov
mov
add
rclb
rclb
xchg
xorl
sbb
repnz
bound
cltd
xchg
out
scas
pop
cmc
or
jp
test
in
call
mov
mov
jbe
push
out
jbe
inc
push
sbb
stos
sbb
mov
jle
xlat
fdivrl
mov
inc
jle
inc
test
push
jmp
pushf
pop
sbb
scas
adc
cmp
insl
cmpsb
int3
dec
cmp
sarb
mov
repz
ret
fiadds
out
in
aam
adc
jl
call
and
pop
jle
and
test
or
jbe
mov
stos
cmpsl
and
mov
xchg
ficoms
fwait
aam
addr16
jp
cs
stc
call
dec
mov
jnp
xchg
movsl
mov
lock
outsb
daa
sub
fstpl
push
inc
jp
jbe
loop,pt
and
call
inc
pop
sub
cmp
pusha
push
pop
lea
mov
das
or
lahf
test
push
mov
out
adcb
cmp
push
cmc
test
das
out
mov
sub
lea
push
pop
imul
sbb
xchg
into
ja
orb
call
xor
push
cmp
aas
jp
push
push
sti
pop
xchg
scas
push
adc
pop
and
shl
fwait
dec
pop
lcall
push
push
shr
inc
scas
xchg
sti
lods
jo
mov
clc
cmp
inc
jo
imul
pusha
enter
mov
ljmp
clc
divl
push
jmp
rorb
cmpb
in
cmpb
xchg
into
js
pop
cltd
adc
sbb
xlat
fs
cli
pop
mov
inc
fmuls
jno
sub
repnz
jne
jne
xlat
sbb
pop
scas
sub
adc
dec
inc
pop
mov
in
stc
imul
adc
mov
lcall
mov
mov
mov
sbb
and
mov
pusha
out
push
je
repz
jl
in
push
jle
xor
xor
cmc
cmpsl
dec
sbb
mov
or
dec
fisttps
push
stos
jmp
xor
lea
or
or
inc
orb
lock
sbb
fucomip
repz
int3
or
ret
mov
cltd
and
or
mov
xchg
dec
stos
lods
jae
sbb
es
pop
fbld
adc
aam
pushf
sbb
and
jbe
in
insl
cmp
imul
cltd
push
mov
insb
lods
subl
shlb
mov
xchg
inc
lea
and
pop
inc
pop
test
arpl
cltd
cwtl
push
add
adc
out
adc
mov
arpl
into
popf
xor
mov
sub
bound
and
mov
loopne
test
jns
fisttpl
adc
cli
iret
out
jge
stos
pop
std
fisttps
notb
cmpsb
sub
or
mov
inc
sti
xlat
mov
repnz
jl
mov
jb
dec
push
nop
adc
or
inc
mov
jnp
dec
mov
mov
fcomip
shll
push
or
xchg
push
cmp
test
pop
cmp
sbb
sbb
add
mov
add
jmp
mov
push
repnz
and
mov
dec
or
shll
mov
inc
push
sbb
xor
pop
icebp
call
pop
or
jns
fwait
mov
mov
test
andl
lds
and
mov
das
cltd
lret
jbe
and
popa
pop
push
rol
movsl
aad
jno
dec
mov
or
inc
faddl
inc
pop
clc
xor
call
ja
sub
lds
mov
dec
bound
pop
pop
or
in
repnz
test
sbb
xchg
xchg
lcall
jg
lret
jecxz
out
dec
mov
jle
addr16
sbb
pusha
mov
push
mov
dec
pop
out
xchg
adc
scas
add
in
in
cmp
pop
lret
xchg
aam
mov
xor
rorl
lea
cwtl
dec
arpl
and
int
and
sti
fisttps
loopne
dec
adc
fxch
xchg
adc
data16
xchg
cmpsb
cmp
jbe
clc
jbe
out
pop
stos
mov
mov
mov
lret
call
pop
cmp
add
xchg
daa
adc
pop
inc
inc
jnp
sub
pop
popf
pop
cmp
xor
int
incb
test
pop
hlt
scas
out
dec
stos
or
push
gs
cmp
push
lret
fs
aam
sarl
popf
push
pop
in
inc
xor
and
jl
mov
ja
mov
rolb
jae
hlt
mov
fs
mov
push
lods
pop
mov
jno
js
pushf
sub
xchg
sbb
aad
or
or
hlt
fwait
sub
sub
out
xchg
sbb
push
or
jnp
fwait
cwtl
dec
out
in
add
sarl
mov
mov
add
out
push
add
jle
inc
ret
push
outsl
sbb
sahf
repz
cmpsl
loop
mov
movsl
adc
dec
mov
fbld
mov
push
push
dec
mov
xor
stos
push
xor
jmp
ret
mov
jecxz
lods
xor
add
popf
jno
adc
test
inc
dec
test
clc
int3
dec
xchg
clc
mov
push
test
dec
dec
enter
lret
add
jg
xor
stos
testb
ljmp
and
add
aas
in
hlt
xor
pmullw
xor
mov
in
fmuls
xor
bound
cmp
jp
sub
add
in
pop
mov
sahf
inc
mov
ss
adc
cmp
jg
fs
into
dec
push
xor
int3
inc
scas
sbb
mov
mov
adc
cmp
jbe
fmulp
shll
sub
scas
sub
mov
lahf
mov
inc
loope
cmp
in
jo
shlb
cmp
jp
inc
lock
mov
test
out
movsl
mov
xchg
cli
jge
adc
inc
pop
shll
aad
adc
iret
mov
dec
movsb
das
dec
lret
in
add
repnz
ret
mov
rclb
into
sbb
adc
inc
pop
cmpl
inc
mov
pop
pop
push
sub
scas
xchg
fwait
jg
fisubrl
adc
mov
mov
in
sub
out
add
je
pop
addb
xor
fcoml
gs
mov
loope
push
pop
mov
inc
push
lret
imul
scas
mov
fdivp
sbb
mov
je
jecxz
mov
iret
lock
ret
gs
je
push
pop
push
pop
xchg
insl
push
push
fcmovnb
call
shlb
sbb
movsl
imul
mov
jecxz
cmp
fidivrl
sub
xor
shl
enter
fwait
adc
and
xchg
mov
push
mov
mov
ss
cmp
test
scas
sbb
cmp
jecxz
jecxz,pt
insl
adc
jno
dec
ret
sub
push
push
fwait
icebp
cmp
outsb
aaa
mov
push
inc
mov
aad
cmpsb
lret
mov
bound
xchg
inc
lods
xlat
daa
shlb
mov
push
dec
or
lods
adc
lock
ja
repz
xchg
ret
ds
or
jecxz
cmpsb
popa
sub
cmp
inc
pop
int3
adc
icebp
fldenv
xlat
jo
mov
push
loopne
mov
or
push
xchg
jle
clc
lret
mov
and
cmp
xchg
dec
xchg
test
inc
out
add
imul
lods
sahf
sub
push
in
sub
sbb
shll
mov
push
and
aad
jno
mov
imul
jno
stos
les
fdivs
scas
inc
lcall
xor
lahf
add
push
aam
jbe
lahf
push
movsl
mov
fidivl
repz
test
jmp
add
ret
lahf
lahf
dec
mov
dec
sbb
fcmovne
aad
jbe
sarb
stos
push
xchg
test
or
call
adc
out
into
jns
cwtl
aad
repnz
stc
mov
mov
addr16
je
mov
pop
jno
cs
outsb
cmp
arpl
loopne
clc
iret
sub
ss
int
out
mov
test
loope
mov
je
mov
inc
sarl
push
cmp
jbe
mov
lahf
aad
lea
sub
mov
test
mov
imul
sub
jns
test
sub
aad
stos
mov
mov
push
dec
addr16
mov
icebp
jae,pn
push
cwtl
mov
subb
xchg
test
popa
ss
lods
cmp
and
dec
adc
repnz
shlb
hlt
pop
pop
in
adc
mov
pop
filds
inc
jb
cli
in
xchg
int
lock
push
and
xor
fstpt
or
xchg
das
mov
and
or
mov
int3
jnp
sbbb
mov
push
leave
fadds
jb
push
push
fildl
in
or
jno
je
sub
in
push
ljmp
mov
call
in
xor
push
insl
loope
sub
pop
and
addr16
fsubl
xchg
add
fbld
rcll
popa
mov
jge
rcrl
jge
setbe
shrl
dec
or
add
je
into
cmp
sbb
out
repnz
dec
decl
mov
dec
mov
insl
jp
mov
enter
outsb
and
xchg
data16
loope
ret
jno
or
sbb
ja
or
jmp
mov
sarl
arpl
dec
push
mov
gs
mov
nop
and
es
pop
arpl
idivl
push
mov
pop
cmp
cmp
jle
mov
xorl
xor
sub
std
sbb
inc
lret
pop
loopne
outsb
or
adc
sti
jns
mov
mov
jno
fdivl
outsl
pop
jne
loope
push
sub
jne
aad
and
sub
sahf
push
add
cmp
clc
dec
push
lods
test
scas
popf
or
push
aam
adc
adc
gs
out
push
xlat
nop
pop
mov
test
jecxz
cld
in
pop
fdiv
mov
outsb
decl
adc
push
lds
js
and
lds
int3
sub
cmp
inc
or
sbb
test
dec
popf
int
xchg
mov
cmp
cmp
jmp
mov
mov
fadds
mov
xor
xor
dec
addl
insb
es
negl
loope
outsl
pushf
cld
mov
push
mov
push
les
fsubl
ret
les
ud0
loop
fistl
xchg
pop
sbb
pop
jmp
mov
xorl
daa
sbb
or
cs
or
dec
inc
push
pop
mov
mov
jle
gs
mov
dec
mov
cmpb
xor
and
or
imull
add
lods
or
and
mov
xor
push
and
dec
jge
fisttpll
leave
daa
out
xor
pop
sub
test
lret
jno
out
cli
imul
mov
adc
push
sbb
loope
cli
rorl
add
fnstcw
add
cmp
mov
pop
adc
xor
test
enter
call
repnz
sub
popf
mov
repnz
shrb
jne
dec
movsb
jbe
jae
push
stos
mov
hlt
push
and
push
out
pop
and
imul
out
cmp
mov
and
movsb
adc
or
repz
call
mov
push
mov
xor
jge
loope
xlat
fs
sbb
push
push
test
fwait
xchg
xchg
jns
jne
mov
or
mov
mov
ret
jmp
pop
rcl
pushf
mov
fwait
add
cli
vcomisd
push
roll
and
jnp
jno
mov
divl
fucomi
mov
xor
dec
and
sbb
clc
adc
or
dec
adc
jae
adc
pop
xlat
incb
mov
out
mov
jb
ljmp
sahf
xor
xchg
xchg
inc
rcrb
ret
iret
sub
push
jl
sbb
add
push
pop
sbb
xchg
adc
inc
pop
fdivrs
and
sti
mov
mov
or
xchg
aam
sbb
hlt
or
stos
movsl
xlat
jno
adc
and
std
mov
pop
stos
mov
scas
popa
or
mov
or
icebp
inc
or
insl
out
pop
cmc
mov
sub
mov
mov
aas
mov
fildl
cmp
cmp
mov
ret
mov
mov
pop
cmp
fwait
sub
jb
icebp
pushf
or
scas
push
mov
inc
popa
sbb
jbe
je
inc
jnp
jb
test
jnp
mov
push
push
pop
ret
push
sti
pop
mov
adc
mov
popf
nop
xor
inc
out
adc
test
inc
dec
push
jge
sbb
es
sub
jmp
sarl
hlt
jae
shlb
fiaddl
add
adc
lods
adc
ret
into
into
ja
xor
and
dec
push
push
fildl
ljmp
fisttpll
adc
enter
jmp
jge
jp
push
mov
sbb
cld
aaa
ja
add
mov
inc
scas
jp
mov
out
int
lahf
rcrl
pop
cs
xchg
dec
scas
and
clc
or
mov
int3
inc
mov
scas
sbb
or
add
mov
fwait
sub
ret
push
and
clc
lcall
ljmp
adc
mov
in
mov
or
lods
mov
fisttps
mov
es
icebp
sbb
or
xchg
sarl
dec
iret
stos
cwtl
sbb
fwait
scas
push
inc
push
mov
stc
shrl
sbb
mov
cmp
cmp
or
mov
dec
push
hlt
xchg
sbb
xchg
rcrb
and
in
stos
popa
sbb
cmp
adc
push
or
dec
je
jmp
stos
xchg
scas
push
mov
xchg
jp
aad
pop
xor
gs
and
sub
enter
mov
jle
push
or
push
mull
jae
push
cltd
cli
xor
dec
sbb
inc
or
xchg
sub
adc
sbb
add
push
rcll
adc
adc
lock
ljmp
sbb
pop
jo
shlb
popa
pusha
mov
mov
cld
lock
fsub
jmp
push
test
div
push
arpl
into
popa
cmc
roll
idivb
enter
sbb
test
icebp
mulb
test
fsubl
sbb
stc
data16
daa
and
mov
inc
mov
sbbl
mov
mov
loop
pop
mov
out
out
out
mov
push
dec
and
in
testl
xchg
es
and
xchg
mov
inc
ja
mov
cmp
mov
push
push
hlt
mov
insl
lret
les
test
xchg
out
add
push
rcrb
adc
cmp
in
mov
mov
pop
xor
ds
mov
cmp
int3
and
in
aam
sub
je
push
pop
scas
repnz
fidivs
out
jl
ffree
ss
iret
jp
sbb
cmpps
lahf
in
push
push
and
test
mov
aaa
mov
jl
pop
add
movsl
mov
mov
daa
push
fwait
es
es
mov
test
sti
lea
push
add
pusha
dec
push
std
or
fstl
cmpsl
cmp
stos
add
xchg
arpl
push
rorl
pop
mov
pop
std
gs
sahf
cld
shll
js
lret
orb
lcall
lods
cs
inc
popf
sarb
xchg
xor
neg
adc
jp
push
lea
orl
and
jp
add
sub
fstpl
fs
subl
cmc
mov
out
arpl
mov
daa
sbb
ret
push
xor
sub
cwtl
xor
into
xchg
out
mov
lret
out
movzbl
das
xor
dec
adc
test
add
mov
jb
push
pop
data16
call
arpl
jl
sbbl
mov
popf
xor
out
ljmp
stos
xchg
xor
push
in
loopne
fldl
shlb
loop
popf
outsl
jecxz
frstor
daa
cli
jecxz
xor
jge
jnp
jnp
leave
fwait
push
xor
inc
mov
arpl
push
adc
adc
jg
jbe
shlb
adc
lock
insb
dec
inc
js
mov
fs
xchg
xchg
inc
xchg
and
dec
imul
enter
pop
iret
in
lret
sahf
outsb
pusha
xchg
repnz
sbb
push
sbb
movsl
mov
stos
or
daa
push
in
std
xchg
pop
lods
repz
rcll
ficompl
mov
dec
xor
and
add
and
bswap
in
mov
xchg
shrl
je
sub
movsb
adc
xor
in
aad
jnp
lret
mov
aam
sub
jg
fisubrs
repz
pop
sub
gs
jnp
fdivrl
xor
js
mov
lret
sbb
jg
rcrl
test
cmp
testb
cmp
cmp
push
test
push
mov
repz
inc
outsl
dec
dec
lret
push
pop
fcomi
lock
adc
mov
lret
mul
in
xchg
dec
adc
jle
hlt
push
jmp
insb
sbb
imul
pop
xor
sub
inc
jge
jne
mov
cs
movsb
dec
adc
and
mov
cwtl
je
inc
mov
jge
pop
in
push
mov
jns
sub
dec
mov
aam
push
dec
jnp
jge
stc
sti
push
push
std
ds
aam
aad
lock
xor
mov
push
adc
jl
cs
arpl
mov
push
insb
out
mov
jo
push
sbb
daa
mov
ret
mov
sbbl
jmp
iret
popf
repz
in
inc
push
mov
or
cmp
out
mov
gs
pushf
arpl
ljmp
add
pusha
inc
sbb
cmp
mov
popa
sbb
addr16
fwait
out
into
jge,pt
sbb
mov
sbb
cmpsl
cmp
repz
sahf
je
movsl
push
ss
xor
fnsave
jecxz
stc
jb
inc
dec
lea
mov
or
rcll
scas
xor
jnp
jbe
sub
or
aas
loope
gs
xor
or
add
fstpt
mov
leave
adc
adc
scas
in
inc
or
daa
call
pusha
jae
cmp
adc
popf
jl
add
mov
sub
and
lea
mov
and
movsl
mov
jno
cwtl
jne
leave
jg
sbb
sarb
pop
and
or
xchg
decl
lahf
data16
stos
jbe
test
aad
mov
pop
sub
sarl
inc
mov
int3
rcr
fwait
pusha
adc
cmp
scas
inc
call
add
cmpsb
or
pop
outsb
loopne
mov
add
gs
cmp
out
ljmp
loop
fwait
jae
in
xor
int
call
mov
ljmp
shlb
nop
inc
xor
add
inc
cwtl
int3
or
leave
xor
icebp
xlat
cli
std
dec
iret
jne
mov
mov
mov
lods
cmp
jno
ds
mov
stc
mov
pushf
fistps
stos
stos
insl
fldl2t
jp
inc
es
ljmp
ja
lds
int3
test
or
jb
xchg
rolb
push
and
loop
shlb
mov
and
push
mov
pop
ret
fdivrp
sub
sbb
add
xchg
int
stc
jne
daa
cmp
push
xlat
int
pop
into
pop
pop
cmp
pop
inc
dec
jno
cwtl
test
and
mov
push
mov
xor
bound
flds
scas
arpl
cmpsb
pusha
das
mov
sub
xor
mov
sub
rorl
add
jmp
lods
cmp
into
mov
add
jnp
pop
lock
aaa
icebp
rolb
jmp
rdpmc
shlb
int3
adc
jl
xchg
stos
mov
leave
adc
ret
jg
fnsave
into
jmp
mov
cltd
xor
aam
xor
pop
gs
lods
mov
mov
jecxz
pop
hlt
loopne
enter
lahf
out
xchg
hlt
push
jns
push
mov
fs
or
inc
or
insl
leave
fisubl
mulb
xchg
pop
push
inc
js
mov
jmp
and
stc
inc
cld
lea
push
adc
nop
pop
sub
pusha
loop
dec
mov
fcompl
jo
mov
jmp
xchg
arpl
mov
and
xchg
and
sbb
mov
mov
xchg
lock
inc
test
loope
pop
cmp
cmpsb
jge
repz
andb
js
daa
mov
dec
push
les
mov
ja
xchg
shrl
dec
xchg
pop
pop
dec
push
cltd
fwait
pop
aas
les
bound
dec
xchg
out
das
push
aaa
sti
cs
ds
mov
dec
pop
mov
sarl
mov
inc
dec
aad
in
loop
popa
push
jmp
xchg
leave
adc
das
push
xchg
fistpl
es
push
add
inc
fldcw
in
xchg
notl
mov
add
mov
mov
push
shll
pop
mov
test
dec
cltd
push
rcrl
sbbb
popf
les
out
incb
scas
or
addb
sbb
lds
mov
es
out
mov
cmp
lds
cmp
xor
cmp
sub
mov
or
je
shrl
popa
movsb
mov
cmp
in
outsl
movsb
mov
push
push
push
or
in
jbe
push
mov
je
xor
push
mov
or
mov
iret
jno
mov
or
jle
pop
mov
insb
add
test
stos
std
mov
ds
addr16
jbe
push
sub
mov
or
rorb
pop
sub
lock
jg
iret
add
jae
pop
xor
xor
insl
out
or
or
orb
test
sbb
cmp
ret
mov
imul
lahf
inc
mov
repnz
lock
xchg
je
arpl
or
push
lahf
cmpl
add
xchg
add
movsl
inc
loope
and
dec
ljmp
shlb
aaa
mov
xor
scas
pusha
in
pop
mov
dec
lods
into
jbe
hlt
sub
movsl
imul
lods
adc
ret
mov
mov
nop
cmp
ds
add
out
clc
or
or
ljmp
jbe
loope
ja
aaa
dec
push
pop
sarb
outsl
out
lret
xor
or
mov
jae
lret
and
outsl
jmp
hlt
stos
jnp
stos
mov
sbb
inc
push
sbb
push
sbb
jmp
popf
push
sub
xchg
out
outsl
nop
jmp
into
xor
out
popf
call
ljmp
mov
dec
mov
mov
in
add
test
adc
xchg
imul
xchg
pop
imul
sbb
ljmp
icebp
xor
andl
cmp
dec
mov
cmp
orb
mov
cmc
pusha
sub
mov
sahf
xor
lds
jmp
repnz
xor
cmpsl
lcall
fcmovbe
xchg
pop
adc
push
loopne
cmp
or
mov
adc
xor
jo
iret
pop
es
inc
push
or
xor
fisttps
mov
ljmp
cmp
pop
leave
jge
adc
or
inc
mov
into
cwtl
mov
dec
sub
clc
mov
loop
xchg
push
fwait
mov
loop
and
add
pop
fiadds
mov
xor
mov
ret
mov
push
dec
xor
adc
inc
xchg
outsl
data16
ja
cmp
and
mov
cmpsl
jg
dec
out
into
rorl
mov
idivl
sbb
lock
and
pop
fcmove
jae
dec
aas
mov
xorb
lods
cld
ja
xor
dec
xchg
roll
inc
in
dec
xchg
pop
rorl
mov
shl
jo
mul
insl
mov
cmovge
fiaddl
mov
imul
adc
sub
push
frstor
test
or
jns
inc
out
mov
cwtl
cmp
inc
xchg
and
ret
jecxz
push
sbb
adc
test
daa
ljmp
add
inc
sub
pop
cmp
test
repz
mov
scas
jb
pop
jne
add
rclb
pusha
sbb
push
fsubrs
sbb
sbb
cmp
inc
xchg
push
sub
mov
in
push
push
mov
fidivl
fmull
in
push
mov
xchg
lcall
rolb
adc
or
xchg
lods
jnp
aam
or
inc
imulb
movsl
xchg
mov
mov
push
imul
int3
jbe
mov
mov
jp
sub
mov
pop
jb
and
xchg
xchg
jnp
insl
or
jne
fmuls
jp
dec
fildll
mov
mov
push
jmp
ljmp
and
xchg
and
lret
imul
pushf
cli
imul
ds
ljmp
lods
ss
add
pop
mov
mov
xor
adc
mov
jmp
mov
cmp
jle
jne
pop
cs
dec
mov
stos
aaa
pop
fdivl
jbe
dec
mov
push
fidivs
jle
xor
or
lret
sbb
stc
popf
cmpsb
sub
aad
paddsw
xor
shr
mov
jns
enter
sar
pop
insb
movsb
push
sbb
subl
jnp
cli
adc
out
stos
jno
xlat
cmc
xlat
cmp
or
fsts
inc
mov
lds
outsb
push
pop
lods
push
iret
xchg
das
jle
or
out
and
and
cli
loopne
imul
add
xchg
aas
les
sub
enter
insb
gs
in
outsl
pop
andl
sbb
cld
aam
pop
repz
out
mov
xor
sub
repnz
jo
sbbl
cmp
inc
movsb
in
inc
int3
int
stos
arpl
mov
lods
pushf
lock
and
dec
xor
fdivrl
mov
lods
dec
push
push
sub
push
xor
add
in
xchg
repnz
cli
pop
mov
es
cmpb
popa
or
roll
imul
les
jmp
loopne
push
or
or
mov
push
sub
movsl
xchg
jle
mov
aas
jl
ja
shl
pop
inc
movsb
ds
xchg
jle
addr16
cli
jl
test
mov
xchg
or
xor
and
dec
dec
test
mov
mov
popf
cmpsl
sub
pop
imul
rcrl
scas
xor
add
add
dec
rcrl
jne
jecxz
cld
add
mov
in
pop
add
insb
enter
gs
mov
cmpsb
iret
enter
cld
js
push
div
jg
push
adc
xchg
aas
sub
aad
jbe
pop
pop
fidivrs
mov
and
shlb
dec
mov
mul
enter
cmp
aas
mov
jge
in
in
lock
jb
test
lret
out
adc
pop
mov
in
leave
pop
cld
cltd
imull
mov
sbb
idivb
or
jmp
pop
pop
jle
pop
inc
xchg
sub
mov
enter
add
mov
test
dec
leave
addl
dec
roll
add
gs
leave
sahf
adc
fidivrs
push
ret
ret
push
test
sub
mov
movsb
adcb
popf
inc
xchg
pusha
icebp
xor
ss
push
mov
xor
mov
mov
add
hlt
das
xchg
push
mov
jg
into
sub
roll
mov
push
push
mov
xor
int
add
pop
shr
adc
jl
arpl
mov
mov
sub
mov
gs
xchg
data16
jmp
add
and
xor
lret
insl
push
jge
sub
pop
jb
xchg
push
popa
adc
xchg
inc
movl
push
mov
and
daa
hlt
test
or
or
filds
divl
xor
jl
xor
imul
sub
not
in
pop
nop
in
adc
inc
sbb
push
fistl
xor
adc
icebp
mov
adc
dec
repz
add
das
xchg
in
push
outsl
jb
ret
xchg
mov
add
sbb
mov
int3
sbb
or
cwtl
pop
dec
out
test
nop
into
sahf
je
pusha
mov
in
dec
dec
addr16
mov
push
insb
or
outsb
int
mov
lahf
in
mov
xchg
ficomps
cmp
sub
in
je
out
pop
jns
sbb
lahf
mov
ds
sub
pop
xor
adc
ja
in
inc
cmpsl
insb
mov
std
mov
popl
fnstenv
push
mov
in
jl
push
xchg
dec
int3
cld
and
or
sub
or
lahf
fs
sahf
lea
cwtl
scas
fldcw
mov
sti
xchg
outsb
mov
xchg
push
lret
std
add
addps
mov
ja
sbb
imul
or
sub
push
push
pop
push
insl
sub
and
fiaddl
sbbl
fmuls
pop
cmpsl
mov
push
movsb
nop
rorl
in
int3
dec
add
bound
jnp
mov
clc
roll
fwait
ss
pushf
out
insb
daa
mov
or
gs
push
pusha
jle
out
push
add
out
jge
mov
jo
stos
lock
mov
dec
or
pop
in
stc
dec
subl
in
push
popf
fstps
mov
pushf
mov
lods
orb
add
add
or
popa
add
or
dec
mov
adc
fsub
sub
arpl
mov
int3
add
shlb
mov
repnz
arpl
rol
sub
push
mov
mov
fdivrs
cmc
in
fwait
cvtpi2ps
xor
adc
sub
or
push
pop
cmp
clc
xchg
stos
inc
data16
jnp
push
pusha
das
mov
add
test
pfadd
shrl
lods
adc
cmp
cmpsb
icebp
sbb
xchg
int
shl
hlt
faddl
push
add
out
lahf
mov
push
enter
loop
jne
and
add
scas
push
in
popa
and
xchg
or
mov
mov
jne
sub
ret
in
std
pop
sub
adc
add
shrl
jmp
jae
mov
roll
mov
cltd
dec
adc
xor
inc
aad
mov
insl
hlt
xchg
push
mov
outsl
inc
insb
sbb
test
mov
xor
loope
mov
jne
cwtl
mov
inc
sub
lret
stos
cmc
jb
scas
or
lret
bound
cs
in
lods
push
ret
pop
arpl
or
ljmp
int3
scas
mov
aad
movsb
into
add
clc
aas
notb
bound
sar
push
aas
pop
addr16
xor
push
adc
xchg
or
clc
mov
and
adc
jno
fdivp
into
push
mov
into
es
lock
adc
inc
iret
or
ljmp
xchg
js
sbb
xchg
xchg
xchg
xchg
icebp
sarl
insb
add
or
lds
pop
xchg
xor
adc
test
subb
sub
xchg
xchg
push
cmpsb
test
push
andb
jecxz
inc
cld
sbb
or
roll
mov
sbb
xchg
mov
lea
jge
scas
sahf
in
testb
xchg
rolb
in
adc
adc
mov
jns
xor
xchg
ds
data16
pop
pop
insl
daa
sbb
push
jle
or
nop
popf
xchg
push
mov
pop
aaa
dec
or
cmp
lods
mov
lea
fadd
push
pop
sbb
aad
lret
in
cmp
jmp
fwait
adc
jo
shll
and
push
push
cld
inc
stc
push
mov
pop
inc
fnstenv
mov
loop
daa
fs
xor
add
mov
ds
int
inc
shrl
mov
mov
dec
movsl
push
push
pop
subb
sub
mov
fists
adc
mov
in
adc
jns
adc
jg
clc
add
add
test
mov
movsb
add
xor
fwait
add
xchg
adc
lods
ret
mov
fnstenv
testb
mov
xchg
in
add
push
adc
inc
leave
out
xchg
push
and
dec
bound
xor
test
enter
rcrb
jge
das
outsl
enter
push
clc
test
es
pop
push
fidivl
mov
fwait
es
loopne
pop
les
sbb
sub
push
mov
mov
clc
out
andb
je
cmp
jmp
sbb
jnp
cltd
push
and
cmpsb
icebp
aam
out
int
inc
je
xor
cmp
out
jno
int3
and
push
add
cs
jmp
sbb
sarb
dec
cs
ds
pop
mov
adcb
push
insl
sbb
cld
adc
mov
and
mov
loopne
cs
test
sub
mov
inc
push
lock
call
cmc
out
lret
insb
push
daa
fwait
lret
lcall
pop
xchg
push
adc
mov
rcl
mov
xlat
insb
mov
mov
or
popa
pop
in
icebp
test
xchg
iret
sbb
mov
out
xchg
mov
mov
add
mov
jl
mov
or
lods
mov
cltd
sub
sti
mov
adc
dec
aas
pop
lahf
in
call
mov
loopne
shrl
xor
imul
dec
sahf
mov
jmp
out
test
cwtl
ljmp
movsl
mov
cli
iret
into
fadds
xor
sti
add
rol
adc
fidivs
sbb
popf
repz
ficoms
xor
loopne
stos
ds
mov
loop
ret
and
adc
js
pop
mov
jae
add
mov
sub
mov
inc
xor
pop
loop
jae
imul
sub
jmp
pop
push
pop
push
loop
jae
outsw
push
cmp
pusha
lods
shl
in
lds
rcrl
push
test
dec
sub
jge
push
jle
frstor
loop
and
mov
loopne
fstl
lcall
add
xor
lret
incb
stc
pop
adc
inc
jo
pop
xchg
cmp
inc
adc
xchg
lods
rcr
dec
or
sbb
in
dec
sahf
mov
mull
inc
adc
rolb
jle
stos
out
push
mov
daa
daa
call
fldcw
mov
in
mov
insb
dec
pop
dec
dec
aad
ds
cltd
cmp
shl
jmp
ss
dec
int3
mov
mov
ret
xchg
inc
mov
popf
push
mov
test
pop
cmp
xor
pop
je
sbb
sbbb
out
jns
arpl
mov
jne
cmp
xchg
fisubl
scas
orl
or
repnz
sbb
fwait
dec
test
xlat
mov
adc
xor
pop
imul
lea
dec
sub
lds
in
dec
mov
mov
mov
les
mov
popf
mov
add
pop
out
inc
fisttpll
sub
repz
jp
pop
jp
mov
and
seta
testb
mov
testb
jae
ds
mov
mov
repnz
jo
call
ja
imul
stos
fisttps
hlt
andl
inc
addr16
pushl
stos
fwait
push
insb
and
movsb
pop
repnz
sbb
dec
add
mov
lods
mov
mov
xor
outsl
pop
cmpsl
leave
mov
inc
int
cmp
push
mov
in
test
lret
mov
xchg
test
lret
and
sub
mov
cmp
xor
and
dec
rolb
shlb
scas
cltd
adc
cmp
xor
lret
sbb
add
mov
or
xor
aad
push
sahf
les
mov
push
jmp
jo
and
mov
adc
and
cmp
jl
xchg
gs
stc
and
mov
repz
aaa
fistpl
pop
mov
and
adcl
inc
add
movsl
mov
cli
leave
aaa
jae
or
iret
dec
pushf
test
sbb
out
inc
cs
push
sub
inc
notl
jecxz
orb
cmp
pop
jo
sarl
int3
jnp
sahf
mov
xchg
sub
jp
inc
mov
pop
push
cmp
ja
in
iret
push
adc
imul
mov
cmc
jbe
adc
stos
popa
inc
push
call
push
sbb
xor
xlat
arpl
mov
mov
adc
mov
push
sti
lock
xchg
inc
call
lds
rclb
daa
test
aad
cmpsb
sbb
jbe
xor
insl
jbe
lcall
jno
inc
addb
or
xor
cmpsl
jae
sbb
xor
dec
test
mov
mov
and
call
int3
lcall
pop
pop
aad
fstpl
cmpl
inc
mov
xchg
outsl
inc
jno
lcall
cmp
divb
mov
ja
add
mov
test
xchg
mov
xor
scas
pusha
inc
mov
stos
mov
in
mov
stos
cmp
rcrb
out
lds
and
mov
or
mov
pusha
sbbb
adc
pop
add
cmp
and
mov
inc
outsl
lcall
xorl
cmp
sbb
cli
cli
inc
dec
jecxz
xchg
rorb
and
fs
xchg
push
jp
movsl
mov
push
xchg
into
enter
mov
lea
jmp
jo
xchg
and
inc
aam
xchg
mov
lret
and
pop
and
addr16
dec
sub
adc
push
arpl
cli
icebp
inc
leave
or
es
push
out
xchg
or
cmp
fldl
addl
adc
enter
jb
jno
push
jle
in
or
push
mov
xor
push
pop
push
xchg
movsl
fs
pop
or
xor
sarb
addr16
lret
mov
pop
aad
out
pop
add
push
mov
daa
insb
pop
xchg
mov
loopne
mov
bound
mulb
es
orl
jl
das
jmp
sub
dec
lahf
mov
mov
cmp
lret
mov
and
or
les
push
fsubs
or
mov
xchg
mov
js
bound
mov
jmp
cwtl
rclb
rcrb
in
jbe
lods
cwtl
mov
test
mov
push
or
adcl
sub
fstpt
js
rolb
push
sbb
stc
roll
mov
sbb
xchg
aad
bound
ds
inc
inc
ja
xlat
cmpsl
push
repnz
dec
icebp
or
push
adc
loope
mov
adc
cmpsl
or
pop
sbb
fwait
mov
test
mov
pushf
adc
dec
test
xchg
insl
adc
fwait
insb
jb
mov
pop
icebp
iret
icebp
lret
pop
inc
fs
cmp
dec
mov
or
fldenv
push
xchg
mov
xlat
xor
or
aam
mov
sbb
mov
cli
cmp
and
mov
sub
insl
dec
pop
loopne
in
leave
add
or
pop
sub
rcrl
dec
iret
push
mov
inc
hlt
pushf
sub
mov
dec
pop
sub
js
dec
and
out
pop
out
push
jg
fcomps
rcrl
mov
popf
repnz
lods
call
orl
repnz
into
dec
daa
push
cld
cmp
xor
into
shlb
rorb
adc
decb
xchg
movl
jl
jmp
scas
leave
stc
add
lock
sub
push
out
mov
pusha
sbb
in
test
mov
xchg
push
xor
scas
setp
imull
cld
sbb
cmp
pop
shll
scas
sahf
mov
rolb
add
imul
sub
pop
ja
pop
mov
mov
roll
cpuid
push
je
in
inc
test
pop
ss
jnp
repnz
lret
popl
int
gs
sub
push
aas
cmpb
mov
xor
mov
mov
jecxz
jns
push
stos
loope
xchg
jmp
jno
inc
inc
mov
cmc
xor
loop
loop
xchg
and
pop
and
sub
in
xchg
arpl
sub
pop
sahf
sahf
rcrl
fidivrs
in
fisubrs
lcall
and
movsb
pop
mov
xor
cmp
js
mov
fwait
push
adc
pushl
pop
mov
imul
xchg
pop
gs
xlat
packssdw
orl
xor
xlat
shll
insb
sub
mov
fiaddl
xchg
shlb
xlat
je
add
sbb
add
dec
xor
cltd
jmp
xor
mov
mov
movsb
inc
xchg
sub
jp
in
stc
lods
jo
mov
pop
fdivl
add
aad
add
addl
xor
mov
lcall
mov
push
mov
add
inc
or
gs
clc
xchg
xorb
mov
xor
cmc
sbb
ds
inc
xor
insl
fwait
inc
and
or
pop
sub
or
xor
roll
int3
enter
mov
mov
outsb
outsb
sub
mov
fistps
adc
daa
mov
aaa
bnd
lods
xchg
lret
iret
adc
shrb
pop
sub
xlat
jmp
inc
mov
addr16
mov
lea
and
pcmpeqw
mov
mov
jecxz
je
jge
jmp
sarb
aaa
adc
ret
and
jge
fld
dec
dec
and
cwtl
test
test
mov
scas
pop
cmpb
pop
jae
mov
push
adc
and
hlt
pop
jns
or
out
arpl
xor
and
out
push
sahf
add
arpl
and
jmp
mov
jns
pop
jnp
fildll
cmp
stc
xor
push
jp
mov
insb
std
or
push
mov
fstpl
fcmovu
xchg
and
sub
pusha
mov
inc
lcall
int
daa
push
pop
inc
pop
imul
xchg
sub
mov
jbe
stos
and
mov
sarb
loope
mov
loop
andb
fs
mov
mov
imul
jns
mov
and
or
jmp
insb
aas
sub
mov
std
pusha
insl
sub
icebp
push
pop
jbe
flds
adc
jecxz
pop
imulb
mov
add
cs
add
in
leave
movsb
adc
cmp
jmp
fidivl
shlb
pop
lcall
cli
sub
jmp
fdivrl
fld
out
stos
cmp
cmpsb
xor
loope
imul
mov
aaa
test
in
mov
push
repz
xchg
mov
jns,pn
ss
jnp
mov
pop
push
movsl
xchg
xchg
test
sarb
outsl
in
loop
in
push
ret
xor
pop
fmuls
pop
mov
cmpsb
and
dec
insb
std
jbe
adcl
adc
call
add
les
std
or
rcrl
jnp
mov
cli
bound
dec
or
xor
les
push
loopne
outsl
ss
mov
out
scas
lahf
faddl
add
test
les
lcall
dec
mov
popf
adc
scas
mov
mov
mov
adc
fwait
test
fnstcw
jg
repz
sbb
mov
xor
mov
push
xchg
leave
mov
pop
push
push
push
mov
pop
and
insb
ljmp
or
scas
dec
adc
imul
arpl
sbb
xchg
flds
stos
fs
inc
or
movsl
data16
add
sahf
mov
mov
out
iret
jle
push
push
mov
lods
add
push
mov
je
jo
cmpsl
jmp
jecxz
inc
fsubrl
push
mov
push
ss
sbb
mov
repnz
cwtl
xlat
adc
pop
icebp
mov
mov
add
jecxz
jmp
lods
jnp
mov
outsl
pop
into
pop
push
inc
jge
ficoml
jp
aas
and
repnz
lahf
ja
stos
mov
jnp
inc
lods
push
sub
jbe
mov
pop
jecxz
les
test
aam
adc
mov
imul
in
pusha
scas
test
sbb
jnp
and
add
or
and
into
pop
dec
sub
xlat
mov
push
jns
and
dec
mov
outsb
imul
das
fcmovnu
add
jmp
fmul
roll
dec
lcall
jno
mov
mov
ret
into
and
inc
loope
subl
insl
bound
shrl
mov
and
mov
cmp
xchg
inc
pushl
xlat
mov
popf
adc
xchg
add
fld
out
dec
pop
pop
xchg
stc
enter
icebp
and
sub
out
sub
clc
sub
mov
lods
mov
adc
shrb
ret
imull
in
xchg
popa
xchg
adc
mov
inc
rcll
mov
or
sahf
loop
push
pop
idivb
fdivp
add
mov
test
ljmp
xor
xchg
push
cmp
add
cmc
xchg
cmp
test
add
pop
jge
lock
cmp
je
insl
mov
pop
adc
push
dec
xchg
test
nop
cmp
adc
sbb
lcall
movsb
dec
inc
adc
mov
xlat
addr16
dec
loope
pushl
enter
outsl
and
push
andb
or
pop
jo
sbb
fs
bound
test
cmpsb
mov
pop
or
pop
lods
pop
and
mov
leave
xchg
hlt
data16
shrl
shrb
mov
testl
mov
fwait
mov
jp
pushf
fstps
or
rolb
push
add
aaa
insb
sub
scas
push
add
xlat
decb
out
xor
out
loop
sbb
sub
out
mov
mov
iret
mov
in
xchg
test
inc
stc
push
movsl
test
sub
int
rcrb
in
pop
out
dec
add
and
imul
rorl
mov
or
mov
out
jmp
xor
jnp
lea
jo
data16
cltd
aas
fs
mov
xchg
in
or
clc
incb
inc
and
pop
stos
lcall
adc
jb
push
mul
dec
jnp
pop
popa
xchg
or
call
dec
sub
cmp
add
mov
fldenv
cmp
lods
or
mov
mov
or
push
mov
inc
push
xchg
daa
ljmp
movsl
add
mov
pop
inc
jns
aam
ss
mov
iret
rorl
mov
push
mov
mov
pop
pop
or
mov
sub
jbe
fisubrs
scas
pop
or
mov
aas
jbe
fwait
aad
pushf
and
push
inc
xchg
arpl
jns
mov
shr
cmp
cld
add
or
mov
pop
add
out
inc
les
adc
jg
scas
clc
data16
pop
mov
adc
cs
std
or
push
test
jae
fistl
repnz
gs
in
mov
shl
mov
clc
movsb
out
sub
insl
xchg
pop
inc
inc
cld
pop
jns
cmc
mov
xrelease
adc
aam
imul
lahf
add
inc
adc
ljmp
jo
ret
ss
cld
xchg
shll
cmp
outsb
imul
jno
inc
and
inc
cltd
xor
xchg
imul
cmp
mov
mov
jge
inc
fimull
rep
push
push
mov
daa
cmp
adc
pop
imul
pop
or
push
decl
or
mov
test
sub
jp
sbb
dec
add
mov
stc
jp
fsubrl
cmp
stos
mov
xchg
sbb
add
aas
lahf
xchg
out
into
xchg
add
push
fstl
popa
mov
addl
test
push
pop
ret
mov
es
jb
outsl
test
cld
and
repnz
and
cltd
in
lret
neg
xchg
pop
sbb
nop
leave
inc
fidivl
int
cmp
inc
dec
pop
rclb
repz
jmp
cmp
aam
into
dec
cmpsb
pushl
mov
call
sbb
out
das
fiadds
mov
and
or
sbb
and
dec
sbb
pop
lods
or
out
xor
cli
stc
pop
add
arpl
or
jb
jecxz
jnp
filds
cli
lds
rcll
fists
jb
adc
pop
fwait
sbbb
cltd
scas
add
jne
push
pusha
xchg
pop
dec
mov
xchg
inc
imul
orl
jae
into
cmpsl
jecxz
std
sbb
call
xor
mov
pop
cmpsl
cmpsl
movb
ror
test
rcrb
jae
dec
push
and
mov
js
or
das
fcmovnbe
ds
sub
dec
insb
xchg
push
push
jo
push
mov
cli
jecxz
jl
mov
iret
aad
pop
arpl
ret
insl
das
outsl
in
loope
xor
pop
mov
dec
push
test
pop
call
aad
popa
dec
xchg
pop
cmp
loop
xchg
arpl
add
adc
mov
xlat
mov
inc
shlb
outsl
inc
pop
rcr
mov
out
ja
dec
ret
sbb
xchg
fidivs
jmp
add
inc
jb
rcrb
jo
rcrl
adc
loope
popf
aas
push
cmp
outsb
sbb
xchg
loop
jo
adc
mov
sub
frstor
mov
out
dec
cltd
in
or
push
and
nop
lcall
loopne,pn
fidivrs
jecxz
ljmp
or
jnp
and
mov
mov
mov
iret
or
xchg
push
or
outsb
into
and
xor
or
pushf
sbb
out
cmp
test
mov
fwait
jo
pop
push
sbb
std
adc
int3
jnp
mov
loope
lods
mov
push
imul
mov
dec
dec
rorl
add
push
add
aas
insl
mov
sbb
push
popf
clc
ret
sub
sbb
call
cmp
push
push
dec
in
scas
arpl
push
test
jle
xchg
test
rorl
xchg
xor
stos
and
mov
mov
into
sbb
adc
xchg
dec
shlb
decl
dec
add
sbb
mov
mov
and
jp
shlb
xchg
dec
cli
xchg
lcall
cmp
mov
mov
add
sti
xor
push
cwtl
adc
and
mov
call
lea
inc
cld
scas
lds
ja
jno
test
addr16
cmpsl
sbb
cmpsb
scas
push
in
testb
out
out
int3
rorl
insb
in
movsl
mov
lea
pop
icebp
aaa
rolb
in
mov
mov
xor
std
pop
push
push
jge
mov
or
stc
repz
mulb
dec
inc
or
out
sub
shll
sub
xor
rcl
loopne
xorb
shrb
loopne
xchg
dec
cmp
repz
and
fs
pop
mov
movsb
inc
inc
call
lods
sbb
xchg
clc
cmp
call
sub
jge,pt
lock
mov
bound
icebp
inc
lods
scas
loop
stos
clc
jne
xor
cwtl
fdivrs
adc
and
lahf
sub
gs
movsb
ja
lds
sti
test
sub
xlat
daa
cwtl
clc
aad
lods
mov
outsb
fcompl
roll
rolb
dec
jo
stos
fisttps
dec
es
or
testl
cmp
push
cmpsb
push
fidivrl
xlat
rcrb
xchg
test
aas
popf
mov
cmp
cli
adc
inc
stos
stc
fistps
push
mov
inc
je
sub
xlat
or
inc
fimull
dec
stc
jecxz
adcb
jae
xchg
mov
and
or
outsb
mov
and
jmp
inc
cld
jns,pt
sbb
sbb
xor
insl
or
jbe
jo
sub
mov
inc
push
xlat
mov
adc
cmp
sbb
rcll
inc
fimuls
xchg
xchg
pop
subb
mov
in
push
shll
out
daa
xor
push
mov
sub
pop
ds
cmp
sbb
jmp
or
dec
ds
push
dec
jo
dec
gs
movsb
shl
mov
mov
adc
scas
std
movsl
in
inc
xchg
cmp
mov
xor
xchg
inc
fdivrl
xchg
adc
aam
xchg
adc
int
jecxz
add
int3
lcall
nop
repz
shl
dec
leave
lds
inc
dec
cmp
add
ja
xor
inc
jae
sub
adc
pop
aam
test
test
subl
or
out
outsl
stos
add
mov
mov
pop
insl
cmc
fnstsw
dec
mov
int
movsl
mov
xlat
inc
imull
mov
jne
lea
jp
xor
adc
sbb
sub
and
mov
dec
cli
jb
imul
cmp
add
test
jne
repz
push
xlat
xchg
cld
adc
ret
icebp
leave
xlat
outsb
cmp
sbb
pop
fistl
or
push
data16
inc
andl
aas
pusha
dec
pop
lds
inc
outsl
fisttpll
push
lods
fcom
inc
inc
ficoml
test
mov
shlb
dec
mov
cltd
pop
ret
jb
int
int
jmp
jb
dec
test
fldenv
shlb
add
pop
lock
cld
repz
sub
pop
jge
add
lds
mov
fucomi
or
int3
push
push
pop
mov
movsb
fdivrp
lret
and
pushf
mov
and
mov
add
and
out
in
and
cmp
push
outsl
call
cmc
ret
in
inc
push
nop
inc
adc
sub
mov
jno
repnz
lods
xchg
das
mov
stc
int
int3
inc
dec
add
mov
ja
mov
mov
jns
mov
clc
je,pt
jmp
hlt
xor
pop
scas
aas
call
sarl
xchg
pop
into
mov
pop
imul
sbb
sbb
add
pushf
sbb
or
dec
jl
arpl
pop
mov
xchg
fidivrl
jno
cmc
cmp
inc
adc
xchg
dec
lahf
scas
in
gs
or
test
sbb
push
shlb
jge
adc
movsb
jne
push
jmp
adc
lods
xor
stc
aad
jmp
cmp
bound
orl
rorb
pop
fs
or
xorb
push
enter
xchg
insb
pushf
repnz
test
jp
fs
scas
or
xchg
pop
loopne
sbb
bt
shl
pusha
or
sbb
jae
mov
in
push
and
in
dec
ljmp
mov
rorb
sub
lock
or
or
incl
lahf
cmp
iret
xor
fs
mov
cmp
xlat
cmc
fisttpll
cmp
lahf
push
dec
mov
test
mov
addr16
pop
mov
jno
pop
cmp
lret
dec
cs
push
test
pop
mov
push
jecxz
jo
es
jmp
push
je
repnz
mov
push
je
popa
testb
xor
movsb
jl
and
fisubrl
out
bound
mov
outsb
adc
ret
scas
mov
xchg
addl
sub
aaa
sbb
pop
sub
daa
sub
fcmovne
mov
mov
mov
and
inc
adc
out
flds
outsl
rcrl
mov
fs
sub
cmp
pop
fildl
in
rorb
iret
xchg
pop
cmp
sbb
test
mov
xchg
adc
fdivs
cmp
rcrl
stos
dec
aas
pop
xchg
sbb
push
or
pop
rcr
push
nop
mov
mov
add
daa
shl
dec
in
cltd
add
sbb
adc
test
jnp
shll
cmp
into
xor
fnstsw
sub
adc
push
xchg
jae
arpl
and
mov
call
pop
pop
mov
rorl
sub
mov
out
xor
cld
xchg
outsl
jb
jns
mov
mov
clc
mov
and
fcoms
pushf
sahf
pop
loop
jno
sti
movsb
mov
sub
jmp
repnz
sbb
sub
dec
mov
pop
push
mov
adc
xorb
or
sub
in
lahf
dec
ret
scas
sub
xor
jmp
mov
inc
lret
cmpsl
mov
stos
les
xchg
sub
inc
xchg
xchg
pop
pop
sub
mov
sbb
shll
mov
and
test
mov
das
jmp
cltd
push
jne
cmpsl
andl
push
imul
sub
sahf
add
lods
mov
sti
bound
adc
insl
lods
dec
mov
int3
in
faddl
aas
loope
lret
xchg
push
mov
imul
cmp
or
fs
xchg
pushf
and
pop
mov
rolb
mov
mov
popa
test
shlb
inc
fnstcw
je
outsl
xchg
leave
mov
leave
addr16
mov
and
inc
xor
add
lods
mov
imul
or
jo
or
shrl
in
inc
or
push
fstps
or
loopne
inc
dec
xchg
out
shlb
imul
push
into
jnp
push
fcompl
push
cmp
jne
mov
jo
nop
push
cmc
inc
clc
out
push
rcrb
sahf
push
out
pop
leave
push
xchg
or
ret
sub
dec
das
gs
jae
jbe
std
mov
mov
cmpsl
insl
mov
imul
hlt
push
shlb
push
rorl
mov
or
sbb
sub
dec
fldenv
test
fstps
pop
fwait
sbb
pushf
loope
dec
push
push
xor
nop
jb
dec
lds
sub
adc
das
ds
cs
shrl
pop
lahf
xchg
dec
pop
push
jecxz
pop
sub
sarl
lea
mov
mov
fsubs
mov
xchg
push
push
jmp
movsl
sarl
jecxz
ja
pop
xor
adc
fnstsw
or
adc
rcrl
stos
adc
mov
adc
lret
enter
jmp
inc
pop
jecxz
out
lods
in
divb
sub
inc
mov
sbb
sti
movsl
and
mov
push
cmpsb
jno
add
or
jge
mov
cmp
xor
add
inc
pusha
test
xor
mov
or
sub
ja
dec
fldl
jle
ffreep
adc
nop
xor
test
mov
clc
dec
out
dec
fwait
ss
mov
clc
bound
push
xchg
subl
pop
outsl
ret
inc
inc
pop
pop
mov
pusha
adc
idivb
in
xchg
add
cltd
pop
aaa
pop
cli
cmp
push
psllq
std
or
es
idivb
xchg
adc
jb
sahf
jb
stc
mov
leave
jbe
int3
aad
sub
icebp
sbb
adc
mov
pushf
ret
popa
ljmp
data16
pop
pop
or
sub
sbb
mov
inc
rorl
ret
pusha
dec
xchg
mov
imul
push
sbb
fldcw
sar
pop
ficomps
push
test
ret
and
inc
fstl
dec
mov
xchg
inc
dec
ret
mov
insl
pop
ds
jne
mov
push
cmp
fs
shll
mov
leave
sbb
jmp
xor
sub
xchg
rol
popf
sbb
or
fistpl
cld
dec
sbb
push
add
push
fs
push
mov
ret
test
dec
mov
jno
inc
in
push
cmp
movsb
in
shl
dec
daa
jns
adc
mov
out
call
and
push
cmp
fldenv
cmp
repnz
sub
mov
cmp
movsb
jmp
andb
aad
ret
movsl
test
dec
fists
notl
dec
test
call
inc
loop
clc
cs
popa
and
sub
or
jnp
cmp
lret
jp
xchg
and
inc
push
mov
mov
sub
shl
and
xor
inc
rolb
iret
outsb
mov
imul
ljmp
fcmove
insb
dec
rorl
fstps
cmp
ret
xchg
icebp
push
pop
imul
cli
stc
js
jecxz
rcrb
scas
dec
call
adc
xorl
add
jecxz
jnp
ds
xor
lea
into
aam
sub
addr16
data16
push
arpl
lcall
arpl
inc
and
imul
sahf
lret
push
fisubl
xor
mov
aas
sub
orl
add
clc
mov
lods
sub
out
inc
cmp
adc
int
mov
arpl
sbb
test
inc
push
rorl
and
cmp
adc
jae
hlt
lock
mov
bound
ss
fsubrs
fnstsw
or
push
jmp
cmp
fwait
cltd
in
aas
int3
int3
pop
add
xchg
lock
test
daa
mov
xor
in
or
inc
loope
xor
sahf
push
mov
inc
mov
cmpsb
aad
ljmp
push
dec
mov
sbb
jns
pop
sub
stc
mov
or
and
mov
adc
ja
lock
or
or
fisttps
dec
int3
jb
fstpl
jae
jecxz
pushf
les
rclb
mov
out
jmp
arpl
mov
cmc
popa
lds
in
aam
shrl
xchg
test
jge
fnop
js
mov
ficoms
lods
jo
or
hlt
stc
arpl
inc
mov
inc
cmp
inc
in
shr
mov
mov
hlt
sahf
mov
sbb
and
out
dec
jae
inc
xchg
das
cs
dec
push
mov
mov
out
or
stos
rclb
inc
loope
sti
pushf
arpl
shll
stc
mov
cmp
sbb
pop
cmp
pusha
xchg
push
push
sbb
mov
imul
xor
inc
fisubs
in
mov
sbb
dec
inc
repnz
insl
hlt
mov
and
cmpsl
mov
xchg
mov
ja
shlb
push
pop
add
mov
repz
mov
and
movsl
gs
pop
pusha
dec
xchg
pop
dec
lahf
inc
sub
andl
vmwrite
cli
nop
mov
mov
mov
orl
fmull
lock
jl
cmp
and
iret
jae
addr16
test
ds
jl
outsb
cmp
mov
push
adc
cmp
lock
inc
push
shll
dec
pushl
xor
mov
lcall
mov
add
dec
pop
jge
mov
out
push
and
ret
jbe
jbe
pop
xor
push
or
push
inc
mov
les
sbb
push
leave
dec
std
jecxz
dec
aad
test
hlt
sahf
jae
mov
or
mov
pop
icebp
cmpsl
xchg
mov
insb
pop
mov
movsb
pop
outsl
andb
adc
std
sarl
pop
sub
loop
movsl
inc
adcl
push
pushf
sbb
lret
mov
repz
imul
pop
ds
cmp
xchg
dec
inc
sti
lretw
jp
daa
adc
sbb
sbb
jne
repnz
icebp
out
test
jecxz
mov
mov
into
cld
mov
pop
filds
jecxz
and
test
test
or
and
aaa
test
jo
inc
or
add
push
movsb
xchg
pop
jnp
bound
in
in
test
and
shlb
pop
pusha
lods
pop
xor
push
repnz
les
xchg
aas
dec
jnp
in
jle
push
add
or
shlb
mov
push
push
lods
cmp
fldt
aas
and
lock
insl
js
mov
push
stos
repz
ss
adc
xchg
hlt
test
pop
push
and
add
das
dec
cmc
lds
xchg
fwait
and
stos
or
insl
mov
cmp
and
lods
std
test
enter
aad
pop
or
jno
mov
xor
cmp
xor
mov
cli
clc
ficomps
mov
cmp
in
sub
mov
stos
push
mov
jg
xchg
jae
jl
orl
fisubrl
paddw
pop
leave
dec
push
cmp
cltd
scas
outsl
aas
fwait
push
pop
mov
mov
inc
mov
xor
cmpsb
add
mov
iret
fistpll
loop
xor
shr
fs
das
push
imul
popf
or
xlat
adc
jecxz
pop
mov
dec
fdivr
jl
xor
adc
sarb
frstor
sbb
rcrl
fbstp
push
dec
mov
cltd
clc
jb
or
ss
push
mov
add
loope
decl
pop
xchg
cmp
mov
push
roll
add
mov
lret
and
stos
fnstcw
enter
mov
insl
mov
or
push
dec
mov
push
ljmp
lahf
or
inc
test
shll
les
sbb
pop
rorb
dec
xchg
rolb
mov
inc
lret
clc
into
cmp
push
pop
inc
lcall
orl
out
outsl
or
out
mov
shll
sub
push
mov
mov
ficompl
adc
int
popf
outsb
stos
stc
or
dec
add
stos
lods
stos
add
inc
rorl
xlat
push
adc
lcall
fcmovu
jecxz
jge
push
into
add
pop
push
push
add
in
push
bnd
cmpsb
inc
cmpsl
inc
pop
inc
jecxz
sbb
and
mov
fdiv
les
or
mov
add
fs
xchg
xchg
push
lods
fiaddl
sub
lcall
mov
push
sti
outsb
xchg
sbb
jecxz
pop
mov
adc
fsubl
out
cltd
sbb
cmpsl
pushf
test
inc
dec
dec
pop
sub
cmp
rolb
mov
mov
and
pop
lret
dec
fdivrs
pusha
outsl
xor
pop
xor
jmp
jno
pop
mov
or
fsubr
shrl
clc
pop
sarl
iret
inc
arpl
push
jae
in
int3
pusha
push
arpl
xor
sub
xchg
xchg
inc
daa
mov
mov
or
popa
or
xor
mov
aas
fwait
cltd
lods
sti
mov
xchg
push
mov
faddl
xor
out
jne
mov
push
cmp
dec
xor
sbb
jmp
mov
lret
push
dec
mov
sbb
mov
add
push
and
and
jne
call
pusha
push
cmp
xchg
xlat
adc
mov
mov
sbb
jle
push
dec
cmc
xor
jecxz
pop
int
out
bound
ss
xchg
dec
arpl
jl
jge
and
rcrb
icebp
dec
xorl
sti
rorl
or
sarl
xor
adc
cmc
jp
stc
fiaddl
out
in
fisubl
jb
outsb
xchg
push
jg
cmp
loopne
xor
push
adc
sub
pusha
jb
test
inc
cmpsb
sbb
xchg
dec
imul
push
cmp
test
in
inc
les
jns
jge
sub
xor
inc
test
jo
xchg
adc
rolb
jbe
ss
inc
mov
mov
les
icebp
loopne
int3
arpl
inc
idivl
mov
add
loop
mov
out
outsl
mov
cld
popl
insb
xchg
fmulp
ljmp
std
js
cld
sbb
jp
jo
mov
and
inc
lods
int
cld
sbbl
dec
xor
xchg
jne
sbb
flds
xor
sub
insb
jns
inc
push
ja
mov
add
push
xor
nop
push
inc
dec
imul
cwtl
jmp
pop
sbb
repnz
jo
aaa
mov
dec
aad
hlt
jecxz
inc
popf
adc
dec
out
cli
in
jmp
inc
sub
inc
ds
push
dec
inc
fwait
cmovle
jae
xor
out
leave
enter
bound
inc
push
sub
popf
cmc
hlt
ja
fcmove
sub
sub
add
inc
out
shrl
sub
xorl
fists
js
pop
bound
push
pop
xlat
andb
scas
xlat
int3
jne
jne
or
fwait
adc
push
scas
in
dec
push
ljmp
stos
inc
mov
adc
movsl
imul
add
cld
leave
in
sub
and
out
dec
and
mov
sarb
stos
sub
fnsave
ljmp
mov
pushf
jmp
leave
mull
lcall
fiaddl
sbb
xor
sbb
fldt
sahf
pop
jns
push
push
mov
pop
adc
and
jno
or
xor
pop
popf
mov
jecxz
xor
ja
gs
sbb
nop
cmp
jle
int
xlat
popa
loope
adc
push
add
fsubrs
enter
arpl
pop
mov
ret
in
inc
loop
pop
pop
mov
inc
mov
in
sub
cmp
sub
stos
add
pushf
xor
pop
mov
fisttps
and
pusha
loop
push
hlt
icebp
adc
xor
neg
pop
cld
sbb
cltd
push
mov
shlb
and
dec
sub
inc
jo
xchg
inc
sarb
or
fadds
inc
cmp
or
mov
pop
stc
mov
mov
and
ja
orl
popf
jmp
xlat
jno
sahf
lock
hlt
movsb
imul
out
mov
sub
hlt
into
popf
dec
sbb
ja
imul
adc
movsl
mov
pusha
xchg
in
ljmp
mov
adc
sbb
dec
scas
out
jle
xchg
xchg
test
subb
dec
jae
lods
dec
mov
and
jo
fimuls
sbb
push
jns
xor
les
cli
das
xchg
stos
xchg
ficomps
fidivs
dec
mov
jp
xchg
push
inc
stos
jo
loope
scas
inc
cmp
mov
push
cmc
jl
icebp
ss
xchg
mov
insb
xlat
jmp
lods
fisubrs
xchg
mov
mov
clc
lcall
push
clc
andb
mov
pcmpgtw
ret
neg
test
pop
out
cmpsb
rclb
xor
mov
imul
mov
sbb
or
mov
mov
mov
mov
or
mov
and
add
sub
pop
push
rcl
pop
jbe
or
or
add
push
fwait
dec
sub
xchg
cmc
fmulp
sub
mov
xchg
cli
movb
xor
nop
sahf
shll
xor
in
push
lods
lock
lods
je
sbb
or
mov
setns
fprem1
jae
stc
rorb
sub
sbb
popa
or
fs
lahf
mov
das
push
sarl
jnp
rorl
cmp
dec
dec
inc
pop
cwtl
les
inc
sbb
cmp
xchg
inc
fidivrl
orl
push
sub
push
fiadds
ds
push
mov
cmp
inc
cs
fimuls
test
add
jo
jmp
dec
fcomps
mov
rclb
aam
arpl
jecxz
sbb
test
mov
repz
inc
xor
stc
or
xor
cmp
jp
pop
ret
popf
mov
mov
lcall
rclb
imul
adc
es
and
jecxz
cmp
loop
mov
mov
or
rcr
gs
stos
jo
xor
pop
call
popf
push
lahf
sar
test
lods
push
jp
lea
addr16
push
pop
aad
loopne
ljmp
xchg
push
lcall
ljmp
fwait
inc
inc
pusha
mov
and
and
jnp
mov
fldcw
mov
xchg
add
mov
fsubr
jp
outsb
jmp
jg
in
mov
fidivl
mov
sbb
jle
test
insb
add
aaa
jo
push
jmp
cmp
pop
jle
push
into
mov
and
mov
fwait
mov
and
xor
or
fwait
les
mov
fnsave
lds
inc
xchg
sbb
jo
into
mov
mov
leave
sub
inc
jae
xor
insb
push
aaa
mov
mov
xchg
aas
roll
sub
mov
mov
push
inc
and
outsb
push
outsl
lcall
cwtl
jge
jp
subl
dec
ja
adc
shrb
ret
mov
cmp
ja
jg
pop
pop
in
jle
int3
xchg
je
dec
cld
inc
iret
dec
cmpsb
outsl
test
push
arpl
popa
adc
push
lods
imul
mov
xor
xor
aaa
push
mov
movsb
cld
xor
xor
sbb
sub
xchg
mov
push
repnz
or
les
sbb
push
ss
imul
cli
add
add
mov
std
mov
enter
ja
aad
iret
xchg
mov
xchg
inc
jecxz
ljmp
xchg
stos
inc
and
fstpl
jb
sahf
outsl
xchg
jb
adc
cmp
add
cmp
or
xor
or
sbb
in
sub
insl
sub
mov
push
mov
push
sub
lock
jp
ret
or
dec
mov
or
inc
inc
sahf
add
test
add
or
pop
push
xchg
push
int
aaa
xchg
scas
pop
mov
fisubs
shll
int
scas
stos
sbb
hlt
xor
mov
dec
add
sub
mov
cmp
jmp
mov
xchg
fiaddl
mov
mov
lock
mov
or
clc
lods
dec
pop
xorb
dec
imulb
pop
jecxz
cmp
jl
add
inc
inc
in
sbb
insl
test
pushf
sarl
out
out
mov
push
stc
lock
out
and
sbb
lock
cld
mov
cmpsb
inc
cmpsl
or
data16
clc
cli
inc
sbb
lock
inc
dec
cltd
or
add
and
test
xor
shll
inc
mov
xor
loopne
adc
lods
repz
xor
add
in
lock
mov
mov
cmp
and
adc
mov
mov
cmc
jl
lahf
or
jnp
fildll
sub
divl
sub
jl,pt
das
pop
sbb
pushf
mov
jno
add
aas
xor
dec
inc
and
sbb
dec
js
cwtl
lods
int
and
jmp
xchg
cmp
xorb
xor
xchg
lahf
mov
xchg
add
shll
mov
mov
outsb
mov
inc
cmpsb
mov
or
mov
push
xor
cmp
or
rclb
jecxz
icebp
sbb
mov
add
ret
out
add
negl
and
sbb
cmp
jo
mov
push
cli
fwait
xchg
pop
dec
adc
or
dec
pop
shrl
xor
lcall
inc
adc
fs
dec
jb
flds
sbb
data16
gs
je
fwait
jno
fidivs
mov
daa
jp
mov
jbe
lret
leave
stos
cmp
or
test
mov
sub
adc
std
arpl
xchg
inc
dec
push
mov
or
or
mov
and
mov
and
out
icebp
mov
std
clc
outsb
mov
int3
inc
dec
cmp
pop
xlat
aaa
insl
inc
sbb
jmp
fcoml
sub
in
clc
xor
sbb
cld
pusha
out
stos
mov
push
pop
mov
xor
xor
jne
inc
pusha
fs
jno
sub
mov
inc
xchg
mov
cmp
cs
sbbb
lock
cltd
das
popf
xlat
xchg
in
mov
xorl
test
push
dec
mov
inc
sub
jl
loop
mov
pop
add
cltd
sbb
cmpb
xlat
jmp
nop
push
stos
push
add
fwait
xlat
xor
xor
sub
jno
sbb
jmp
cmpsb
adc
lock
push
movsl
out
int3
xchg
iret
inc
es
movzbl
push
cli
jne
lret
fldcw
dec
and
lahf
rcl
fs
stc
cltd
leave
out
fwait
mov
pop
add
int
loope
cmpsl
pop
mov
test
add
cmp
mov
mov
icebp
cmp
js,pn
loope
out
fwait
clc
repz
testl
jnp
mov
leave
push
xchg
mov
xor
pop
popf
imul
or
movsl
inc
js
inc
rcrl
mov
and
mov
orl
mov
and
add
andl
inc
or
mov
mov
inc
scas
or
jne
jl
and
cmp
sub
sti
iret
push
aaa
inc
dec
jmp
jmp
pop
add
inc
pop
cmp
mov
call
inc
xlat
pop
mov
in
mov
add
inc
pop
mov
push
push
ljmp
jnp
xor
test
adc
push
or
push
test
ds
xlat
popa
stos
divb
data16
pop
out
cltd
xor
imul
ds
mov
fstl
xchg
aas
in
lea
hlt
pusha
fsubr
cmp
sbb
xorl
push
mov
pop
ja
bswap
and
popf
movsl
push
mov
mov
mov
dec
sub
jo
popa
les
pushf
push
adc
sbb
out
pop
xchg
filds
pop
cwtl
lock
mov
sub
sbb
jecxz
adc
addr16
arpl
int
dec
lock
popf
and
xlat
test
xchg
fwait
sahf
xchg
cmp
mov
push
xchg
pop
mov
mov
xchg
into
pop
test
std
and
pusha
jbe
cmp
lcall
mov
subb
clc
jnp
cmc
inc
adc
sbb
lret
cmp
addr16
addl
ljmp
pushf
adc
mov
xchg
adc
cltd
xor
inc
lods
xor
fldl
ret
cmc
test
xor
xchg
add
xchg
ja
jnp
stc
pop
cmpl
fwait
mov
inc
outsb
sub
mov
js
aaa
pop
cmp
repz
sti
jle
cli
inc
xor
enter
lods
jp
cmp
aam
and
lret
inc
aas
inc
daa
add
ss
pop
cmp
fisubl
cld
sti
mov
push
push
push
fwait
dec
dec
jno
data16
cmp
dec
rorl
roll
sbb
pop
jns
fcoms
sub
adc
push
imul
push
shll
movsb
ss
cli
mov
ficomps
mov
fisubl
test
out
test
sbbb
dec
push
imul
xlat
lea
inc
aaa
out
adc
mov
cmp
push
lods
cli
sahf
lahf
pop
adc
mov
into
lahf
xor
cmp
out
cmpsl
mov
ficoml
ljmp
mov
call
jmp
xor
pop
gs
movsl
cmpsb
inc
test
shrl
fstps
xor
dec
and
cs
insb
sbb
xchg
mov
inc
aad
pusha
xchg
lods
xor
push
cmp
mov
xor
ret
mov
xchg
mov
and
orl
fnsave
sub
xchg
sub
push
xorw
int
negl
adc
cmp
adc
adc
push
xchg
lock
mov
loop
and
adc
sbb
jnp
adc
popf
call
ret
cltd
sbb
mov
sbb
adc
leave
mov
xor
xchg
jl
rcrb
and
lret
in
sub
xchg
xchg
out
imul
jmp
lock
sub
mov
cmp
pop
and
repz
pop
jne,pt
add
pop
cmp
jge
cwtl
imul
sbb
fimuls
in
shl
pop
xchg
out
adc
in
xchg
jnp
cwtl
icebp
loopne
jnp
jnp
iret
dec
mov
xchg
aam
add
cmp
addr16
and
jmp
outsl
dec
jns
aam
in
adc
push
sub
in
arpl
test
mov
xlat
shr
and
in
clc
xor
stos
jbe
outsb
lods
test
shll
jbe
fcomi
mov
jmp
in
fcmovnbe
test
test
shl
or
pop
inc
cwtl
ss
loop
push
xchg
daa
pop
lret
pop
push
dec
test
cmpl
or
xor
or
orl
add
cmpsb
test
pop
and
out
je
cmovne
ja
xor
in
andb
adc
lcall
cmpsl
leave
and
xchg
fbld
lods
lods
sahf
ja
mov
push
daa
xor
test
mov
mov
in
dec
and
mov
adc
out
mull
aam
or
xor
sbb
pop
inc
aaa
xchg
repnz
pop
adc
and
aam
loopne
mov
jns
addr16
push
cmpsl
es
into
js
mov
loopne
lcall
push
jno
rcrl
rorl
lea
and
subb
das
ret
hlt
push
mov
mov
test
lahf
scas
shlb
stc
mov
or
push
xchg
lock
xor
dec
icebp
in
sub
xor
into
cmp
gs
enter
pop
outsl
cli
xorb
out
testb
push
push
and
add
sbb
aaa
mov
leave
sbb
in
hlt
pop
incl
into
addr16
outsb
popa
jle
lret
and
sti
in
subl
mov
pop
cmp
xchg
call
lock
pop
or
and
rcrb
xchg
jle
lcall
das
js
pop
fdivrl
push
jbe
jno
bnd
pushl
or
movsl
std
and
mov
lret
cli
popf
fs
stc
repz
mov
dec
adc
imul
cmpb
fbstp
jge
fmulp
cmovns
pop
lahf
enter
jge
push
mov
es
arpl
shl
loope
arpl
lds
cmpb
adcl
int3
cmpsb
xchg
pop
push
leave
xchg
xor
sub
xor
mov
sub
pop
mov
lret
and
jo
jg
and
add
adc
lock
xchg
push
ljmp
xlat
aad
mov
push
mov
and
add
push
xchg
jbe
popf
mov
jns
xchg
push
xlat
jae
mov
aaa
xchg
sub
dec
ficoms
xor
sbb
push
fldl
das
dec
mov
aad
mov
idivb
repz
pop
aad
hlt
or
and
mov
lret
push
idivb
mov
ret
or
int
push
outsl
xchg
lods
cmpsb
mov
mov
push
cld
ds
mov
fstps
clc
out
jb
sbb
mov
in
sub
cmc
dec
rcll
hlt
out
jle
mov
shlb
imul
out
in
mov
push
ss
stos
and
cwtl
sti
arpl
call
dec
xchg
xchg
out
mov
jno
mov
ljmp
fs
es
xchg
repnz
in
push
xchg
xor
pushf
imul
pop
or
mov
jmp
je
sbb
jmp
jmp
fs
es
mov
cmp
les
cmc
addr16
popa
in
push
push
or
sub
sub
pushf
mov
loopne
ret
outsl
dec
mov
fs
hlt
into
mov
test
push
pop
idiv
in
xor
pop
fdivrs
test
mov
pop
mov
push
test
mov
sub
push
jns
or
addr16
inc
sbbb
into
mov
mov
loop
pop
jno
aaa
aaa
imul
fnstcw
mov
xchg
loop
ja
push
ficoml
fildll
in
sub
mov
mov
mov
lods
int3
cmp
mov
outsb
movsl
pop
shll
incl
jg
cmp
xor
shrl
stc
pusha
cmpl
mov
inc
pop
ss
add
pop
js
inc
pushf
push
leave
or
clc
push
out
and
push
rcr
loope
icebp
pop
add
lods
xchg
cmc
push
int3
dec
sub
outsl
loopne
or
mov
mov
mov
jne
cmp
adc
mov
notb
jg
jmp
and
addr16
movsl
jl
aas
mov
pusha
and
and
or
push
mov
mov
and
add
lea
jp
or
in
cmp
inc
mov
push
lock
dec
mul
dec
ficomps
and
xor
mov
or
fadds
nop
imull
push
idivl
mov
cmpsb
lcall
ds
popf
push
mov
roll
aas
inc
mov
jbe
lock
adc
add
jle
pop
pusha
xor
movsl
inc
dec
cmp
mov
insb
in
sti
je
jnp
fists
adc
inc
orl
test
andb
sub
shlb
jne
mov
push
jl
jns
mov
cld
fists
rclb
push
sbb
mov
outsb
mov
sub
aas
pop
fsubl
out
fucomip
in
outsb
std
stos
imul
push
lahf
jp
out
push
dec
mov
mov
insl
mov
fistpll
mov
pushf
cli
clc
loope
shll
cmp
or
xor
add
add
pushf
add
jbe
xor
mov
inc
dec
ljmp
mov
aaa
out
in
mov
fistl
push
jge
xorl
movsl
xor
xchg
push
fdivrl
imul
addr16
iret
mov
imul
and
cwtl
push
pop
add
out
xor
xchg
in
mov
add
xor
movq
add
cmp
test
mov
stos
mov
inc
bound
xor
data16
push
lahf
and
jmp
and
xchg
pop
stos
test
pop
int
adc
popf
xchg
adc
cltd
inc
in
jno
test
inc
dec
add
inc
adc
jp
sbb
mov
mov
shl
loopew
dec
scas
mov
sbb
or
aaa
orl
into
ja
enter
aas
or
popa
push
inc
xchg
ds
lcall
cli
jns
ret
cmp
push
cs
push
out
pop
mov
cmp
pushf
sbb
pusha
pop
xchg
sbb
pop
out
fdiv
aas
sub
add
pop
outsl
and
stos
mov
pop
sbb
add
andb
mov
dec
ja
clc
mov
fisttpl
sbb
inc
sbb
bswap
cld
addb
ficomps
ds
cmp
mov
cmpl
ficomps
outsl
sbb
adc
pop
mov
insb
test
push
test
sahf
pop
and
xlat
inc
mov
incl
lock
aad
out
rcll
fldcw
int
cmp
mov
mov
bound
pop
jge
inc
pusha
enter
outsb
rclb
ja
les
inc
mov
test
repnz
push
push
cwtl
add
dec
pop
mov
jl
xchg
enter
push
dec
lods
js
xor
push
inc
xchg
xor
std
sub
insl
push
or
jno
xchg
or
and
aaa
push
shll
lret
paddusb
scas
add
xchg
pop
dec
leave
jp
cmpsl
xor
add
or
sub
push
xchg
mov
pop
mov
into
cmp
adc
jge
lods
xor
mov
stc
int3
fstl
dec
js
jbe
cs
adc
mov
add
sbb
sub
sti
cmp
push
loope
aad
imul
cltd
es
push
push
scas
adc
cmp
out
xor
dec
jmp
loopne
insl
sbb
cmp
aas
sub
mov
ljmp
stos
mov
dec
jle
pop
insb
lods
xchg
xor
aam
sbb
mov
push
dec
xchg
mov
jnp
nop
jp
cwtl
es
adc
in
jp
in
jne
ret
into
sub
inc
inc
fcom
mov
and
scas
mov
sub
mov
lds
dec
sti
pop
mov
push
sub
sbb
data16
nop
push
stc
sub
cli
sbb
dec
cmpl
lahf
cltd
or
rorl
sarb
shlb
pop
mov
jns
jge
or
pop
sub
xchg
mov
js
shrb
sub
jmp
addl
and
push
es
nop
pop
test
imull
push
cmp
or
fcmovnu
pop
jg
xchg
sbb
lcall
rcll
scas
bndldx
shrl
ficomps
mov
in
mov
insl
jmp
push
ljmp
mov
popf
roll
xor
sbb
stc
cwtl
aaa
frstor
ret
dec
sbb
scas
xor
rorb
cmp
sti
mov
add
repz
test
cmpsl
push
sbb
jmp
lods
lret
test
adc
pop
inc
leave
lock
inc
lret
es
inc
pop
jecxz
shll
push
adc
jbe
mov
and
imul
movsl
mov
into
les
dec
jae
push
lahf
mov
cwtl
loope
ds
inc
jae
xor
xchg
cs
repnz
jle
fcomps
cli
mov
dec
sub
dec
jns
jp
aaa
int3
sbb
inc
pushf
mov
mov
mov
aas
int
jl
fistl
jae
mov
pop
clc
test
jle
aas
adc
mov
sub
daa
pusha
imul
sahf
sub
adc
pusha
xchg
sub
and
mov
xchg
push
int
in
jb
dec
scas
pop
jbe
lahf
pop
sub
leave
ret
adcb
push
and
xor
pop
xchg
pop
jae
mov
xchg
in
stos
mov
mov
fistpll
shl
jle
dec
xchg
jle
pusha
outsb
mov
cs
aaa
jl
in
push
inc
sub
daa
add
mov
mov
push
push
daa
mov
sbb
mov
inc
sbb
mov
stc
sub
jge
ljmp
stos
jns
inc
or
push
xchg
mov
mov
xchg
sbb
inc
ss
stos
mov
add
shlb
adc
inc
cltd
dec
je
outsb
addr16
cs
jl
stc
cltd
dec
push
mov
cld
mov
xchg
cmc
cmp
pop
mov
rorb
movsl
std
dec
cltd
push
xlat
mov
push
pop
movsb
and
fdiv
insb
and
mov
lret
xor
scas
mov
sub
and
fs
rorb
js
out
push
loopne
mov
pop
mov
add
lods
rol
jecxz
lods
push
fidivs
pop
push
mov
dec
cmp
xchg
ljmp
loope
xlat
cld
scas
std
aam
aad
jecxz
push
test
movsl
enter
aam
adc
stos
cmp
sub
insl
ret
out
add
movsb
hlt
jnp
mov
sbb
pop
lods
fstpl
cmp
or
mov
mov
pop
jns
inc
adcl
pop
orb
int
fadd
dec
or
jbe
mov
cwtl
xor
dec
mov
lret
in
adc
rorb
or
out
movsl
sbb
int3
lock
sti
loop
jbe
or
out
xchg
pop
je
decl
je
xchg
mov
pop
int
in
jle
add
add
into
cmpl
or
xor
push
in
sub
pop
es
adc
push
push
sbb
dec
mov
xchg
and
aad
inc
or
cli
jae
sub
pop
imul
mov
xchg
mov
sbb
jmp
jns
cmp
das
repz
fistl
in
inc
jp
rclb
xchg
jg
push
int
in
out
loopne
xor
cmc
adc
push
lahf
and
insl
add
das
push
jnp
fs
sbb
cwtl
insl
mov
popf
shrw
hlt
sti
inc
shlb
add
xchg
scas
sbb
pop
mov
daa
insl
ss
adc
sub
dec
dec
stos
dec
enter
jp
cmp
mov
or
into
ret
negl
aam
pusha
lret
push
mov
das
xchg
mov
sub
jbe
sbb
inc
imul
aaa
sub
testl
fisubs
or
mov
test
movd
sbb
push
icebp
daa
test
sbb
aad
adc
fcomip
or
daa
jle
aas
fadds
xchg
ret
aas
push
jg
cmpsl
mov
sub
stc
jge
insb
or
lods
jo
pop
ja
decl
push
inc
dec
mov
imul
cmp
xlat
push
sbb
xchg
push
sahf
dec
sti
jbe
int3
sahf
in
xor
and
popa
pop
dec
subl
cmc
inc
sub
lock
popa
pop
leave
jbe
jne
sbb
das
sbb
mov
sub
jnp
popf
push
dec
jecxz
dec
sub
jnp
lods
imul
and
iret
adc
mov
jo
es
ds
xchg
jg
mov
addr16
aam
popf
fcmovnu
lds
push
sub
fistps
insb
inc
add
movl
mov
cmp
iret
pop
std
jb
jnp
pop
cli
cld
mov
cmp
inc
sbb
pop
ds
test
mov
push
sti
les
cmp
in
mov
sub
test
neg
pop
pop
fnop
mov
push
js
out
adc
push
rol
xchg
jmp
outsb
mov
stos
cmp
jg
ficoml
sbb
adc
xor
pop
jne
push
loopne
rclb
mov
jb
mov
cltd
imul
jge
imul
mov
mov
out
sbb
enter
dec
push
sti
cs
ljmp
sahf
and
dec
push
ss
and
insl
mov
add
jno
xchg
xor
xchg
cld
or
ds
push
mov
ljmp
sahf
adc
pop
pop
pop
dec
idivl
imul
loopne
clc
ljmp
adc
jle
adc
adc
test
pop
insb
outsb
jne
das
int
iret
sbbb
dec
sbb
cmp
mov
cmpsb
jns
jo
or
shlb
xor
test
xchg
mov
inc
cmp
push
cmp
mov
jns
jp
adc
mov
arpl
or
loope
orb
and
cmp
loope
lret
adc
inc
scas
insl
sub
and
test
das
repz
stc
outsl
and
inc
mov
dec
mov
xor
into
sub
scas
cltd
mov
cmp
cmp
sbb
daa
sub
fstpl
xor
add
inc
lock
cmp
roll
lea
bound
push
jnp
pop
add
adc
push
arpl
je
bound
inc
clc
mov
sub
fstl
mov
mov
add
or
out
push
jne
jmp
js
and
jne
fisubs
jae
mov
dec
dec
rclb
jb
inc
nop
sbb
aad
imul
and
insb
cld
out
ljmp
roll
shlb
dec
addr16
iret
aaa
push
and
mov
adc
lahf
and
push
lret
ds
enter
adc
cmp
push
xchg
mov
icebp
scas
ss
pop
je
jp
mov
out
inc
inc
inc
mov
in
xchg
decb
mov
jno
cmp
ret
loopne
je
pop
xor
mov
sbb
mov
push
jmp
pop
sub
es
and
cwtl
mov
push
jp
mov
jecxz
pop
mov
xchg
dec
aad
pop
hlt
jmp
jmp
repz
add
jmp
mov
push
es
or
mov
fs
popa
mov
sub
es
out
cli
push
add
das
test
nop
cli
mov
loope
dec
fcoms
jl
mov
icebp
sahf
out
das
cltd
testb
inc
sub
int
push
call
or
ret
cmp
pop
inc
jl
shll
adc
push
adc
push
mov
js
stos
mov
push
into
imul
mov
arpl
sahf
pop
lahf
int3
out
cwtl
add
or
and
ret
imul
lret
sbbl
inc
push
dec
daa
adc
xor
mov
scas
fsubrs
loopne
add
jnp
pop
pushf
sub
mov
in
xlat
sbb
mov
jne
scas
stc
adc
loopne
pop
jns
movsb
fwait
nop
mov
jnp
pmaddwd
mov
inc
faddl
scas
inc
neg
add
mov
into
inc
adc
loop
nop
loop
mov
cmp
les
jecxz
and
iret
sub
add
leave
roll
cmp
insl
mov
mov
inc
sub
lret
lds
push
gs
mov
push
sbb
test
pop
sbb
push
dec
jae
mov
sub
out
mov
lock
jmp
mov
addl
dec
loope
cmpsb
outsl
push
testl
div
pop
push
pushf
jmp
lahf
xchg
adc
gs
ret
jae
mov
push
pushl
jle
subl
in
lods
sahf
insb
es
or
test
icebp
dec
shr
mov
fs
cmp
aad
cmp
jb
stos
jp
push
pop
shlb
dec
nop
cltd
shl
adc
jge
add
or
xchg
sub
cmp
lcall
jnp
aas
test
xor
dec
mov
jp,pn
popa
xor
js
pop
insb
pushf
movsl
loopne
sbb
push
jmp
into
fistps
add
jae
xchg
arpl
xchg
lock
jmp
rorl
cmp
dec
mov
mov
das
adc
pushf
add
popa
sbb
sub
and
mov
scas
adc
scas
mov
fnstcw
in
aas
aad
jle
loopne
jb
pop
cmpsl
dec
jne
mov
push
clc
mov
fdivp
fcmovb
popa
jecxz
in
pop
cmc
inc
dec
scas
mov
lahf
mov
sub
frstor
cmp
xor
jne
rolb
cmp
jb
xchg
cmpsl
imul
sarb
leave
inc
addr16
cs
ljmp
fdiv
popf
inc
aaa
inc
lods
or
adc
dec
xchg
dec
movsb
mov
dec
paddsw
xchg
fcompl
and
dec
mov
stos
dec
test
fnstcw
lds
dec
mov
psrld
push
cltd
call
daa
sahf
mov
push
daa
cmp
jb
icebp
dec
icebp
lret
in
fisttpll
pop
stos
fs
repz
dec
hlt
shrb
int
sub
dec
xor
sub
pop
dec
sub
jno
adc
push
and
enter
jo
out
cmc
aam
popf
repz
lods
jae
dec
sahf
movsb
mov
decl
xchg
jle
mov
es
or
ljmp
push
inc
lds
imull
cmp
sbb
jecxz
fs
adc
mov
shlb
add
cmpsl
mov
sbb
mov
push
push
test
jecxz
or
aaa
or
mov
iret
mov
int
mov
xchg
test
xor
jle
stc
pop
xor
pop
cmp
and
scas
jmp
jmp
dec
inc
sbb
mov
fidivrs
cmpsl
cmp
in
fsts
pop
sar
xor
lahf
movsl
and
shlb
cmpsl
aaa
mov
mov
test
push
rcrb
adc
imul
test
sub
stc
imul
or
lea
std
les
int3
xchg
out
jle
dec
in
fldl
xchg
adc
jne
fstpl
pop
mov
adc
adc
in
ficomps
pop
sarl
mov
sbb
xchg
jne
rolb
cld
dec
mov
jb
dec
jne
and
and
jge
mov
lahf
mov
cmp
adc
cwtl
inc
mov
add
or
mov
lods
adc
mov
test
fiadds
cld
arpl
enter
rolb
mov
mov
jg
es
orl
lods
daa
xor
iret
pop
jecxz
sbb
insb
adc
mov
js
mov
stos
mov
jb
inc
les
lds
mov
leave
xor
rcrb
fs
pusha
leave
ss
inc
sub
out
sbb
rcll
sub
push
xchg
hlt
sbb
cwtl
jge
aaa
fs
push
xchg
ja
inc
mov
pushf
in
test
xlat
notb
dec
loopne
sub
adc
imul
mov
daa
sbbl
xorb
sbb
test
movsb
or
sbb
iret
fmuls
dec
jmp
cmc
mov
cmp
ficoml
inc
mov
jle
push
xlat
fistl
cld
mov
mov
jae
mov
mov
jno
xchg
mov
data16
sbb
pop
ret
dec
mov
mov
mov
test
loope
test
mov
lret
js
hlt
push
xor
cmpsl
pop
loope
xor
xor
adc
push
and
and
dec
dec
pop
cld
insb
add
dec
and
sahf
das
mov
jmp
inc
enter
imul
sub
bound
ficompl
and
jae
stc
imul
push
sub
cmpsb
cs
sarb
int3
pop
shlb
insb
dec
sbb
push
insl
dec
add
das
cmp
dec
aam
jl
jecxz
jecxz
icebp
add
jl
insb
jnp
and
jb
sti
loopne
xor
inc
or
adc
inc
sbb
fcomps
cmp
xchg
mov
jo
addr16
jecxz
mov
xchg
jmp
js
adc
xchg
mov
jmp
push
and
adc
push
sarl
sahf
or
jno
in
sar
jl
lahf
jo
shr
loopne
mov
stc
xchg
mov
sbb
xchg
sbb
dec
xor
popf
bound
push
filds
inc
push
mov
jns
or
or
int
push
mov
adc
not
pusha
push
fstp
popf
ret
push
enter
daa
pop
bound
test
data16
ficoms
mov
mov
ret
or
into
mov
push
mov
je
fwait
mov
jmp
shrl
xchg
mov
jecxz
out
dec
cmp
mov
pusha
in
push
lahf
data16
shll
lds
lds
jb
rolb
and
dec
test
inc
ja
imul
sub
mov
rclb
in
xor
push
jg
pop
push
js
jnp
loope
xor
cmp
stc
mov
nop
cli
out
push
arpl
ss
mov
push
cmp
adc
retw
sbb
mov
sub
mov
ror
push
jae
rorl
fnsave
stos
hlt
mov
pop
mov
or
lret
mov
clc
call
lods
pop
sti
pop
repnz
out
fmull
sbb
in
outsb
scas
ds
xor
pop
mov
cwtl
out
mov
cmpsl
outsl
shrb
outsb
inc
cmp
xchg
mov
les
dec
fimull
jnp
xlat
sbb
sbb
push
insl
cmp
add
lahf
repnz
ljmp
cli
jae
adc
sub
lods
subl
outsl
lahf
cmc
fwait
int
adc
roll
f2xm1
pop
test
push
jecxz
mov
jae
xchg
arpl
sbb
cmp
adc
scas
enter
lcall
push
xchg
xchg
sub
movsb
imul
jp
shll
out
push
scas
fyl2xp1
push
mov
sub
imull
rsqrtps
fcmovnbe
jle
jb
and
xchg
push
pop
cmp
mov
jns
push
lret
adc
lea
aaa
add
into
inc
jns
rcl
adc
xchg
cmp
jle
in
insl
das
jns
sbb
lcall
inc
stos
jno
xchg
mov
das
lock
pusha
add
pop
mov
stos
cmp
xchg
push
jp
icebp
sub
pop
insl
repnz
xchg
or
fwait
sbb
and
aad
out
aaa
pop
call
mov
inc
adc
scas
sub
xchg
mov
pop
stos
pop
in
out
lahf
std
andl
xchg
ja
mov
mov
out
jl
fsts
cmp
adc
out
mov
mov
mov
lods
jb
out
es
push
lea
sub
sbb
mov
mov
xlat
in
sub
cmp
shlb
fsub
les
push
scas
sbb
or
aam
aad
and
pop
mov
mov
and
wrmsr
inc
fcoml
or
jb
pop
xchg
jo
jno
aam
idiv
inc
ret
inc
fistps
jl
shll
dec
dec
cwtl
mov
sbbb
fisttpll
dec
scas
into
arpl
popl
cmp
sbb
jl
sbb
cmp
sub
cmp
in
or
ljmp
pushf
push
xchg
mov
jbe
fisttps
pushf
inc
testb
enter
mov
inc
dec
popa
outsl
xchg
sbbb
mov
lea
mov
sahf
imul
jno
cld
push
cmp
adc
sub
cmp
lock
xor
loop
ret
out
xchg
cmp
add
adc
test
and
fiadds
mov
mov
sub
mov
std
push
jbe
fwait
add
repz
cmpsb
sbb
nop
ds
in
test
insb
popf
jbe
mov
and
jmp
out
adc
stos
lods
adc
lahf
cmc
inc
aam
or
outsl
xlat
pop
dec
jl
mov
cmp
cmpsl
orb
popa
lret
sub
in
jle
add
sub
adc
adc
push
stc
jae
out
lret
mov
pop
cmc
and
jno
inc
sbb
cmpb
repnz
sub
outsl
push
add
ss
and
loop
dec
mov
inc
sbb
sbb
pushf
mov
or
sbb
mov
sahf
mov
inc
mov
dec
inc
sbb
arpl
cmpsb
lret
pop
dec
out
aaa
adc
jno
pusha
dec
lds
mov
cmc
mov
popa
jecxz
push
cltd
xor
xor
dec
sub
or
mov
rolb
scas
push
in
xchg
add
in
push
rcll
jae
push
pop
mov
inc
jmp
dec
mov
jmp
test
pop
scas
psubsb
cmp
and
add
dec
jae
lret
fbld
repz
mov
ljmp
jmp
bound
daa
popf
gs
mov
cmp
adc
popa
imul
jle
xor
ret
push
pop
ret
inc
adc
xor
pop
jp
inc
mov
popa
and
inc
dec
pop
xchg
ret
faddl
or
add
dec
ss
out
lock
mov
jae
popa
xor
js
rcl
push
enter
pop
fstpl
lret
scas
js
dec
or
hlt
scas
or
jne
push
loope
test
bound
mov
mov
ljmp
je
in
clc
inc
mov
xor
mov
xor
mov
pop
mov
sbb
filds
test
cmc
adc
jg
adc
jnp
xchg
cmp
sbb
mov
mov
mov
outsb
ss
mov
out
mov
loop
or
mov
jl
cmp
negl
addr16
ljmp
in
pop
daa
notl
stc
pop
or
mov
ja
movsb
ja
cltd
ret
cld
movsb
jo
aas
xchg
adc
stc
mov
cmp
bound
or
test
pop
or
mov
lds
inc
adc
jmp
sbb
mov
stc
and
cld
xor
bound
stc
je
imul
xchg
ljmp
or
add
das
dec
fwait
xchg
shrb
icebp
clc
xchg
push
ss
xor
or
icebp
fdivl
mov
arpl
dec
iret
mov
xchg
stos
add
cmp
daa
dec
stc
sub
dec
add
lret
leave
jp
adc
loope
sub
xor
cwtl
pop
jg
pop
mov
mov
mov
pop
pop
xchg
fs
xchg
out
jae
fists
inc
aad
pop
push
aaa
and
out
inc
add
js
pop
mov
mov
cwtl
fnstsw
insl
adc
aaa
lret
pop
out
mov
out
mov
neg
movb
add
jb
fcmovne
cli
cmp
shl
icebp
adc
dec
repnz
fstpl
in
cmp
lea
lods
push
aas
mov
cmp
mov
sub
mov
cmp
cs
add
adcl
aas
xchg
inc
rcrb
fsub
xchg
je
rcl
pop
pop
dec
dec
imul
pop
aam
shrl
cmp
jns
mov
cs
cltd
cmp
push
cmpsb
or
xor
outsb
add
and
mov
leave
pop
or
pushf
and
fsts
pop
xchg
adc
dec
in
lods
or
xchg
pop
push
test
mov
lea
ficomps
mov
stc
dec
mov
sbb
sub
pop
negb
mov
sbb
aad
ja
popf
movsb
and
iret
pusha
mov
movl
dec
push
leave
sbb
mov
jge
jbe
sbbl
aam
sbb
push
dec
stos
insl
sti
cmpsb
xor
and
inc
outsb
inc
mov
lea
cmp
push
int3
sbb
xchg
and
dec
pop
pusha
test
cld
fsts
sbb
mov
rcrl
fdivs
or
inc
dec
inc
shrl
jae
xchg
inc
jno
lods
mov
and
mov
push
data16
pop
dec
gs
pop
pop
iret
cmpsl
icebp
mov
test
jns
faddl
aas
and
inc
movsl
adcb
negl
jecxz
mov
mov
or
cmp
addr16
repz
pusha
clc
jp
loop
in
loopne
mov
jbe
or
and
aad
push
iret
call
jno
outsl
push
and
mov
aad
leave
pop
les
mov
fcoml
adc
inc
push
mov
enter
sub
push
incb
sub
or
std
lahf
push
repz
xor
adc
iret
pusha
mov
xchg
roll
pop
xchg
xchg
xchg
mov
testb
or
adc
std
cmpsl
pop
pushl
push
sub
mov
iret
and
repnz
fldt
pop
in
sbb
ficomps
fdivl
outsl
xchg
out
cmp
xchg
cmp
xor
cmp
and
sbb
inc
inc
xlat
cwtl
test
inc
jmp
jno
fld1
inc
add
sbb
fbld
fcomip
sub
pop
into
and
mov
mov
fildll
push
icebp
push
test
je
scas
xchg
shrl
mov
test
lods
int3
sbb
adc
jl
out
add
ret
outsb
inc
push
loopne
jno
cmp
xchg
stos
push
dec
add
pop
aaa
push
mov
jecxz
jmp
test
jecxz
sti
sbb
fcomip
aas
pusha
add
rolb
xor
pop
inc
sbb
in
aas
jno
aaa
or
push
mov
xor
lret
sti
adc
ret
iret
lea
insb
pop
and
test
jp
int
inc
xor
adc
and
mov
mov
loop
fcoml
divl
add
stc
sbb
sbb
subl
sub
imul
add
push
into
cmp
out
js
and
fs
push
jmp
and
pop
jmp
mov
jl
adc
sub
cmp
mov
push
or
loop
add
ss
test
inc
int3
arpl
push
cmp
mov
test
mov
mov
lods
cltd
dec
jg
cld
je
scas
std
insl
adc
add
cld
int
inc
cmc
pop
add
push
fs
sub
mov
xor
mov
jge
inc
pop
push
outsb
das
ret
push
xchg
adc
filds
jmp
jge
add
add
pop
jns
sti
xchg
ds
jb
xor
test
ja
dec
lret
jmp
cmp
ret
nop
sahf
dec
jbe
sub
xor
sbb
std
ja
xchg
stc
or
adc
fucomp
leave
fidivrl
push
jae
ds
add
mov
jge
out
pop
faddl
into
les
lret
out
xchg
pop
and
ds
dec
add
or
jg
loope
cmp
xor
pop
mov
rcrl
add
rclb
lods
jle
es
and
add
stos
mov
pop
and
and
jnp
fldl
int
adc
inc
xchg
add
pop
jb
xlat
cmp
test
aaa
loop
cmc
cmp
icebp
sbb
sub
fwait
sub
fistpll
test
add
adc
and
inc
sbbl
mov
xchg
mov
es
and
mov
xor
sbb
nop
imul
lock
sti
lods
dec
or
jmp
adc
clc
mov
and
inc
push
pop
sbb
pusha
mov
jmp
push
dec
xor
adc
stos
call
movsb
and
pop
loopne
mov
push
ds
loope
fcoml
pop
dec
fnstsw
fisubs
cltd
mov
pushf
cmovg
decb
test
imul
lret
roll
les
fwait
stc
dec
push
xor
or
sbbb
insl
dec
int3
arpl
inc
lea
adc
aad
xorb
or
cmp
or
pop
cmpsb
fwait
xor
sub
lahf
dec
aam
cs
xchg
lods
rcr
xlat
adc
int
enter
test
push
call
out
fadds
lcall
dec
mov
pop
adc
mov
aas
repnz
xchg
lahf
sti
mov
mov
in
mov
repz
das
aad
mov
test
inc
arpl
repnz
out
shl
xchg
add
jbe
call
lahf
jl
or
sub
repz
lret
jns
mov
test
fs
dec
stos
addr16
test
scas
call
mov
into
pop
imul
dec
int3
pusha
ja
cmp
loopne
gs
mov
sahf
mov
ja
subl
test
sub
cmc
sub
aas
imulb
push
xor
sub
in
adc
dec
pop
leave
es
mov
push
inc
sbb
add
mov
pop
outsb
mov
jnp
cmp
and
lahf
jp
mov
testb
jbe
in
test
jle
mov
fcoml
pushf
xchg
cltd
ficoms
repnz
lret
pop
xchg
jge
dec
sar
jb
and
scas
mov
pop
mov
hlt
cmp
out
dec
xchg
and
scas
outsb
flds
das
pop
fildll
pop
repnz
mov
mov
scas
loope
and
in
push
pop
fists
aad
mov
mov
mov
jno
jae
ffree
sbb
pushf
or
popa
cmpsl
jp
inc
dec
test
jno
popa
cmp
jb
cmovne
jg
push
push
pop
adc
gs
push
in
fnstsw
test
or
loope
out
xchg
push
add
stos
xor
movb
cmp
in
jbe
movsb
dec
hlt
fldenv
mov
test
xlat
add
mov
jl
sbb
and
out
es
mov
sub
filds
and
in
sub
lods
fidivs
mov
les
mov
into
sub
sbb
push
fucom
sub
mov
xchg
mov
les
repnz
mov
js
mov
and
xchg
xchg
aam
mov
xor
sahf
add
outsb
sbb
xor
insb
sahf
insl
ja
repnz
out
add
test
int3
jo
cltd
push
mov
push
jne
add
stos
dec
outsb
sub
mov
stos
jae
adc
xlat
adc
enter
js
in
jle
es
pop
xor
sarl
jnp
imul
push
jmp
notb
int
test
pop
mov
jp
aaa
adc
imul
mov
mov
adc
cmp
icebp
lods
xor
popf
jl
and
xchg
loop
push
adc
cmp
ljmp
stc
loopne
cmpsl
les
mov
mov
in
dec
test
sub
sub
std
pop
adc
addl
mov
xchg
xchg
les
aam
test
ds
xchg
rorb
out
notb
insl
dec
or
sub
iret
pusha
mov
sub
push
data16
call
adc
adc
test
call
pop
jl
jbe
or
out
lahf
popl
jb
repnz
fldenv
movsbl
das
pusha
dec
pop
daa
clc
mov
cwtl
imul
subl
push
hlt
mov
mov
mov
mov
jne
mov
xchg
adc
das
add
mov
mov
daa
aas
mov
sub
and
movsl
or
xchg
mov
cwtl
aam
dec
mov
lcall
in
mov
popf
push
test
scas
ficomps
mov
mov
mov
xchg
adc
xor
push
xor
subl
mov
fisttpll
outsl
fwait
or
mov
push
push
cmp
ljmp
ss
mov
push
cwtl
cmc
push
ret
inc
or
fs
jle
or
repz
idiv
mov
ret
out
sub
push
xor
jb
je
loop
in
rcrw
push
sbb
addr16
arpl
inc
add
arpl
jl
pushf
xchg
jnp
stc
sbb
sbb
push
push
das
fs
repnz
jge
xchg
shl
out
dec
and
int
mov
sub
and
mov
fcmovu
arpl
pop
xor
add
xor
aaa
jl
pop
mov
sub
pop
sub
cmpsl
and
jb
sub
dec
sbb
enter
mov
sub
sbb
movsl
fnstenv
and
add
das
sub
add
mov
xchg
call
mov
popa
pop
mov
dec
mov
xchg
mov
pop
mov
or
add
ss
jnp
out
push
add
jl
lods
filds
mov
ficoms
push
scas
decb
popl
mov
imul
push
add
pop
repz
aad
sar
enter
cmp
insl
aaa
mov
aam
movsl
mov
jbe
out
sarb
loopne
popf
fadds
pop
dec
pop
cwtl
or
xor
push
mov
cmp
dec
mov
xor
icebp
xor
push
outsl
loopne
test
pop
lret
push
loope
cltd
loope
adc
negl
bound
nop
xchg
mov
jge
in
leave
fidivl
sarb
push
jp
fiadds
adc
sbb
int
and
mov
jno
jle
cmpsb
mov
fisubrs
mov
push
jo
fwait
adc
xchg
jb
pop
push
jns
add
adc
xchg
das
cmpsl
pop
nop
ret
cmp
cmp
push
fidivrs
fmulp
and
or
push
pop
sub
fs
scas
js
popf
xorl
out
pop
pop
cli
push
or
mov
inc
jp
pop
cs
jo
inc
and
dec
xchg
jle
add
add
sub
sub
xchg
fildll
push
insb
xchg
cmp
jae
mov
in
lds
sahf
xchg
xchg
popf
pop
sbb
mulb
pushf
fs
repnz
jo
test
mov
lret
ret
sbb
ss
xor
xor
pop
adc
and
mov
push
adc
rcr
xchg
aam
mov
inc
sysexit
mov
out
shll
jb
push
cmpsb
or
cld
sbb
jb
daa
mov
mov
cmpl
jle
mov
out
imul
mov
shr
mov
mov
jecxz
xchg
cmc
mov
push
push
out
jb
fwait
shll
mov
push
icebp
sarb
movsb
cld
pop
lock
adc
mov
or
imul
lcall
aas
add
adc
fidivl
cmp
mov
pop
dec
adc
push
push
push
xchg
ret
mov
and
inc
sbb
cmpsl
dec
cli
movsl
or
inc
pop
inc
sub
int3
test
dec
mov
and
jge
dec
fs
add
jae
xchg
into
mov
mov
movsl
or
jmp
pop
sti
inc
jnp
add
adcb
or
dec
dec
sbb
mov
cmpsb
fldenv
push
and
adc
mov
enter
xor
dec
sbb
ret
in
negl
xlat
clc
nop
jb
cwtl
icebp
dec
loopne
popa
repnz
sbb
and
out
pop
xor
add
xchg
hlt
lcall
xchg
mov
xchg
jmp
pop
movsl
std
inc
xchg
bound
das
adc
stos
fidivl
jo,pt
fsubr
jnp
lods
pop
imul
sub
pushf
jb
mov
lret
std
mov
incb
xor
push
mov
insl
jge
fldl
divl
mov
jae
push
inc
xchg
fsubr
lock
mov
pop
jns
je
arpl
pop
mov
jecxz
xor
imul
cwtl
test
leave
push
dec
adc
sbb
sahf
das
call
aam
dec
pop
dec
mov
jne
add
fisubrl
cli
ja
out
mov
sbb
push
sbb
cmp
dec
jl
and
scas
fnstsw
aad
fbstp
int
mov
jecxz
fdiv
int3
dec
adc
cmp
fisubl
fimuls
push
out
mov
and
push
lock
iret
mov
and
out
xchg
jl
ret
imul
aam
imul
dec
repz
mov
dec
pop
scas
mov
repz
sub
out
inc
xor
xor
adcl
xchg
xchg
daa
sbbb
jae
jl
adc
cs
and
sbb
xor
outsl
or
hlt
pop
jo
add
inc
cmpsl
fwait
bound
xor
mov
cltd
adc
lea
repz
aad
test
mov
out
xchg
aas
xchg
jne
sub
jno
imul
lea
mov
lret
mov
sarl
in
inc
xor
test
mov
sbb
pop
test
xor
rolb
push
enter
push
out
jae
mov
mov
in
jae
cmpxchg
sub
daa
js
or
dec
scas
pop
les
sub
daa
fisttps
sbb
insl
add
lds
push
push
test
lea
mov
out
cwtl
xor
xor
cli
movsl
sbb
mov
push
sti
out
in
hlt
xchg
lods
pop
jnp
dec
fcmovb
push
pop
adc
cmp
jge
addr16
ss
dec
pop
pop
or
jnp
and
nop
or
push
fcmovnu
add
repnz
add
xchg
fwait
mov
add
pop
sub
and
push
fldt
pop
dec
in
mov
js
scas
jp
fs
call
mov
add
daa
ret
jo
int
xlat
call
or
xor
enter
adc
into
fnstcw
iret
inc
ficompl
xchg
xchg
dec
es
mov
pop
push
fwait
fsubr
leave
push
add
out
mov
popf
sbb
inc
xchg
xchg
scas
ja
mov
test
and
sub
js
jp
je
mov
sub
mov
push
sub
xchg
jb
sub
adc
insb
dec
mov
outsb
fisubl
push
mov
mov
dec
or
jae
hlt
pusha
xchg
push
and
clc
fists
push
mov
jp
add
sub
fistpll
iret
cmp
sahf
out
mov
movsl
xor
cmc
pop
mov
cmpsl
movsb
sbb
nop
cli
mov
inc
mov
mov
fistpll
out
xchg
adc
pop
mov
dec
les
repnz
in
dec
call
pop
pop
mov
int3
xlat
xchg
shrl
jmp
inc
or
pop
xor
jnp
loopne
jo
mov
sti
sbb
loope
mov
jo
xchg
paddw
xchg
imul
dec
lcall
test
jle
adc
setle
mov
add
and
cvtps2pi
cmp
test
andb
sub
aas
adc
cmpsl
mov
pusha
adcb
adc
mov
stos
adc
jns
push
push
clc
shlb
sbb
fcomps
lcall
fcompl
lret
es
push
sub
mov
mov
std
push
js
fisubrl
imul
dec
sbb
mov
xchg
and
pushf
adc
js,pt
lahf
gs
push
mov
ja
pop
mov
xchg
test
dec
rorl
js
mov
dec
inc
jl
test
cmp
mov
divb
add
mov
sub
scas
out
mov
mov
xchg
test
xchg
pushf
xor
push
movsl
les
sub
xchg
repnz
out
fadd
push
fwait
pop
lret
mov
xchg
mov
mov
shlb
push
or
fistpl
pop
dec
stc
fs
push
pop
outsb
and
out
aam
xchg
loop
inc
mov
jne
imull
or
xchg
sbb
shlb
jnp
xor
das
push
xchg
cwtl
mov
or
popf
gs
lret
xchg
xorl
in
push
xchg
or
fimuls
cmp
sbb
xor
mov
js
mov
pop
sub
icebp
ljmp
out
loope
sbb
dec
cli
adc
push
sbb
in
mov
dec
pop
lea
sub
js
jge
ret
dec
in
outsl
psrad
lds
ja
xor
roll
mov
xchg
js
mov
xchg
xchg
scas
cmp
cld
jecxz
ret
popa
mov
mov
ja
adc
jno
ret
jns
cmp
adc
js
pop
adc
sbb
shll
sahf
data16
or
lods
jmp
rolb
cmc
push
xchg
cmp
scas
jno
in
mov
fwait
or
push
into
cld
add
dec
jb
arpl
mov
sub
push
dec
out
pop
xchg
popa
ss
dec
sub
inc
inc
add
lock
insb
mov
push
dec
fidivrs
sbb
pusha
mov
enter
or
icebp
test
adc
mov
adc
test
sahf
imul
adc
xchg
leave
sub
aad
push
js
orl
out
mov
aaa
cwtl
mov
loopne
jo
daa
movsb
test
cmpl
imul
adc
pop
sub
inc
or
aad
int3
mov
scas
into
rorl
fisubrs
lods
in
das
mov
sub
dec
ror
lahf
cmpsl
mov
lds
test
or
fbld
sbb
push
or
xchg
dec
loopne
imul
fisubl
ss
pop
xchg
stos
and
ret
movsl
jg
xor
inc
outsl
and
xchg
jmp
mov
jb
adc
push
pop
add
xor
outsb
and
jl
and
mov
or
inc
jp
test
or
js
lcall
push
movsl
pop
and
add
iret
sub
andb
xor
test
push
ja
push
add
aam
incl
pop
mov
push
lea
push
mov
xchg
xor
in
or
xchg
jbe
dec
pop
jae
push
jecxz
arpl
jecxz
lods
jecxz
sub
pop
lret
fcoml
xchg
bound
mov
adcb
xor
xor
sbb
insb
imul
sahf
repz
adc
inc
inc
outsl
jbe
insl
inc
stos
sbb
inc
sbb
les
push
ffreep
xchg
rcrb
rcl
mov
fwait
pushf
and
stos
sbb
push
dec
push
jb
gs
xchg
insl
or
ja
mov
xchg
push
iret
lds
xchg
sub
pop
pop
lods
cs
or
pop
cmpl
mov
jb
mov
jmp
push
inc
push
negl
das
mov
imul
fcomi
mov
adc
fisttps
testb
mov
fmull
or
sbb
incl
inc
push
ret
dec
leave
and
out
outsb
cmpsb
inc
mov
mov
mov
fimuls
cld
pop
inc
xchg
int3
test
mov
mov
mov
out
cwtl
push
add
pop
insl
jne
add
inc
push
pop
jmp
mov
lds
cmp
add
jb
jne
imul
fwait
outsb
mov
shl
out
fldt
dec
aam
popl
repnz
outsl
pop
push
push
or
pop
cmpsl
dec
lock
and
test
push
lcall
push
rorl
dec
mov
je
jl
or
xor
std
xor
les
daa
mov
xlat
sbb
jmp
test
int
les
icebp
lea
push
mov
out
adcb
aam
mov
mull
loope
mov
mov
pop
mov
movsl
dec
inc
sub
outsb
mov
out
int3
pop
pop
lahf
in
ret
sbb
fadd
fs
pop
adc
jl
add
dec
add
test
daa
scas
aam
sbbl
xchg
cmp
inc
test
jl
lahf
or
lahf
imul
lock
stc
inc
shlb
rorb
sbb
adc
imul
xor
std
dec
push
push
sarl
aad
push
int3
or
mov
sbb
pushf
jnp
stos
dec
imulb
and
add
inc
mov
mov
into
jl
mov
idivb
test
mov
imul
push
loopne
in
in
bound
add
addr16
mov
jecxz
aad
cmc
inc
xchg
repnz
cld
arpl
sub
mov
into
scas
adc
add
and
cwtl
push
dec
mov
negb
sarb
sub
cwtl
aam
pop
into
mov
leave
mov
pop
mov
pop
push
rolb
push
leave
xchg
loope
mov
addr16
fmull
mov
or
scas
sub
or
push
mov
mov
cwtl
push
lods
loop
mov
arpl
xchg
data16
inc
mov
jo
xchg
fimull
xchg
imulb
xchg
out
cwtl
jle
or
repnz
int
jp
mov
push
int
fwait
mov
scas
xor
cmp
jno
inc
imul
sahf
pop
cmp
out
daa
add
jb
cmpsl
stc
mov
push
mov
push
adc
cmp
out
enter
scas
movsl
cwtl
jp
mov
mov
cwtl
mov
popf
out
adc
repnz
pushf
lcall
mov
ret
fnsave
pop
sbb
outsb
mov
xlat
or
fmulp
jo
sub
test
sub
incl
or
xchg
jmp
rorb
int
sarb
test
aaa
pop
fistpl
js
pop
inc
jecxz
insb
stos
mov
mov
push
clc
xor
lret
push
aas
jno
fwait
mov
sbb
loope
hlt
mov
mov
sbb
inc
mov
mov
pop
mov
outsl
lcall
cmpb
push
imul
cmp
adcl
xor
mov
iret
mov
sti
push
andl
out
loope
decb
xor
push
xchg
xor
ljmp
push
mov
pushf
mov
loope
pop
aaa
adc
xor
adc
je
jno
popa
mov
or
frstpm(287
or
lahf
sbbb
stos
fadds
pop
cmp
push
aam
push
xlat
cli
cmc
in
dec
in
mov
inc
arpl
enter
je
dec
in
in
faddl
roll
mov
inc
lret
sbb
push
mov
in
icebp
lock
in
pop
cmp
pop
int3
dec
int3
fstl
iret
xor
ficoml
mulb
push
test
sbb
scas
sbb
cmp
test
add
ljmp
dec
insb
or
mov
iret
push
subl
mov
mov
dec
add
js
loopne
es
xor
iret
push
or
cmp
mov
fsubs
popa
dec
xchg
and
pop
clc
mov
inc
js
sub
dec
and
xchg
xor
cmp
lds
mov
mov
xchg
adc
dec
sub
pop
cli
movsb
test
sub
stos
sbb
cmp
xor
mov
mov
inc
out
adc
cmp
mov
xchg
add
ret
dec
or
push
xor
out
jle
xchg
xor
dec
and
and
xor
scas
cmpsb
pop
sbb
shr
jnp
xchg
sub
mov
mov
push
mov
or
mov
adc
lods
jne
imul
pop
mov
mov
fidivs
xchg
jle
adc
lret
mov
fcom
dec
out
cld
enter
inc
jno
lret
and
stos
test
movsb
fsts
mov
in
sbb
and
addr16
xor
lahf
push
sbb
das
mov
xchg
add
inc
or
dec
inc
pop
jb
lods
inc
sarb
jg
inc
jnp
rorb
fstl
loop
push
mov
pop
jecxz
add
insl
xchg
arpl
lret
cmp
mov
mov
or
jecxz
jb
inc
inc
repz
cld
test
mov
mov
jg
mov
popf
pop
and
int3
cmpl
push
int3
sbb
jp
ret
push
arpl
push
hlt
repnz
xchg
mov
pop
jo
lods
aaa
and
xlat
insl
loope
dec
outsl
in
loop
xchg
ret
leave
jecxz
data16
repz
mov
int3
mov
ret
pop
xchg
repz
je
xchg
movsb
mov
push
xchg
mov
cli
xchg
mov
inc
inc
into
int
adc
cmpsl
ss
or
pop
aad
dec
insl
shrl
fcoms
xchg
lcall
movsb
xor
lods
inc
jp
pop
xchg
jne
dec
jge
sbb
add
je
daa
inc
sub
xor
fisttps
lcall
sbb
ja
sbb
and
xor
cmp
adc
mov
iret
add
push
es
adc
fs
mov
pop
or
jae
scas
xchg
addr16
jmp
imul
sbb
rcrl
nop
pusha
push
mov
mov
mov
nop
lahf
jecxz
imul
and
stc
add
lret
add
pop
orl
shr
mov
sbb
cmp
insb
faddl
dec
in
and
scas
add
jle
sub
pop
sahf
pop
mov
inc
lret
outsl
addr16
or
int3
dec
mov
push
mov
pop
aad
sbb
sbb
ja
sbb
dec
in
xchg
ljmp
fisubrs
add
inc
mov
test
sarb
fnstcw
repnz
or
mov
bound
fsubs
rorl
sub
inc
add
cli
shll
and
dec
movsl
insb
mov
inc
cld
sub
dec
dec
ret
xor
stc
shlb
iret
mov
cltd
outsl
and
push
mov
mov
push
pop
adc
in
ss
xchg
ds
fldenv
pushf
leave
sub
popf
ljmp
adc
push
and
test
cli
insb
filds
jo
adc
jb
add
mov
pop
mov
inc
mov
bndstx
imul
ja
sarb
xlat
es
mov
aam
nop
mov
sub
lret
vpperm
lret
icebp
xchg
pop
cwtl
mov
cmovo
daa
inc
pop
lods
scas
repnz
mov
lock
jle
movsb
mov
xchg
dec
adc
outsl
out
add
ret
xor
rol
imul
mov
pop
push
add
xchg
orb
add
inc
movsl
lds
aam
jl
stos
jae
and
aad
mov
repz
mov
cmpsl
icebp
les
bound
ret
jl
jle
and
int3
jl
push
and
fdivs
xor
shrl
xor
pop
pop
cmp
mov
jae
ss
ss
xchg
mov
mov
adc
into
mov
mov
mov
sarb
lods
gs
bound
out
inc
jne
es
stos
cmpsb
pop
fcoms
and
popf
mov
jnp
lds
mov
or
out
lock
scas
xchg
jp
push
xchg
xor
or
imul
and
ss
test
and
mov
pop
iret
subl
addl
push
mov
subb
and
dec
and
mov
xchg
je
cmp
hlt
and
pop
stos
sbb
dec
mov
inc
test
fistl
imul
jo
lret
insb
sbb
xchg
sub
loop
pop
cli
lret
out
push
fs
cmp
out
ss
jne,pt
and
lahf
add
ljmp
in
mov
inc
xchg
lahf
decb
in
fisttpll
popf
movsl
cmc
loopne
jns
cmp
pop
stc
divl
xor
les
imulb
pop
push
sub
es
sbb
jno
sub
or
arpl
push
inc
test
testb
das
add
pop
cltd
movsb
jle
jp
out
in
aam
ret
scas
aad
push
add
fldcw
movsb
jecxz
dec
test
dec
sub
dec
daa
outsl
outsb
cli
sbb
mov
mov
pop
mov
xchg
das
xchg
jmp
imul
mov
adc
test
xchg
mov
jmp
and
sbb
cli
sar
in
cmpb
xchg
sub
xchg
clc
popf
inc
nop
icebp
cmpsb
pop
call
movsb
negb
xor
jp
ljmp
dec
stos
fdiv
xchg
jbe
cmp
mov
rcll
bound
mov
stos
xor
push
push
cmp
ror
mov
in
mov
lret
rorb
sbb
mov
jno
mov
test
cmpl
data16
jl
call
sahf
lret
dec
xor
jae
mov
fldlg2
add
mov
stos
repnz
fwait
mov
inc
enter
mov
aam
ljmp
mov
sub
rorb
adcb
bound
in
adcb
pop
push
and
loop
adc
sub
mov
inc
jb
fbstp
or
lea
xchg
push
jb
xorl
mov
in
cmc
mov
or
cs
jns
fmulp
outsl
jp
enter
lock
pop
adc
and
jb
sub
xorb
xchg
mov
push
dec
lahf
xchg
outsl
inc
xchg
dec
add
scas
sbb
out
mov
jge
iret
jnp
mov
jno
hlt
jp
jae
mov
ficoml
enter
adc
lock
pop
cld
add
addr16
movsl
jae
cmc
fxch
pop
fidivl
pop
test
mov
dec
loopne
xchg
sarb
cltd
lock
adc
pop
xor
xor
shlb
adc
aad
inc
pop
fistl
inc
lahf
out
mov
ret
pop
cmp
test
test
push
and
shl
imul
lods
xchg
rcl
and
movsl
adc
in
xor
mov
adc
add
rorb
push
dec
or
mov
movsl
data16
cli
mov
addr16
test
sub
stos
mov
movsl
push
popf
jb
lcall
jecxz
ret
add
imul
imul
dec
sbb
lock
mov
cli
push
sbbl
rcll
dec
sbb
clc
fmuls
mov
inc
xchg
xor
bound
mov
fnstenv
push
dec
cwtl
or
les
popa
out
scas
cmp
pop
in
fwait
dec
sbb
outsb
fmull
jg
andb
push
sbb
gs
add
fiaddl
std
mov
xchg
loop
nop
sbb
dec
mov
lret
cmp
dec
push
sbb
jae
mov
inc
jle
cltd
out
sub
loope
or
xchg
sbb
push
add
dec
leave
jmp
cmp
jo
aam
incl
jnp
gs
push
std
dec
push
cld
mov
cmpl
pop
jmp
sub
mov
scas
cmpl
lcall
adc
cmp
mov
int3
loopne
jnp
idivl
mov
mov
data16
call
sub
addb
jnp
sbb
fldt
int3
add
jbe
dec
arpl
js
cmc
mov
pop
push
push
fists
adc
sub
mov
mov
mov
add
inc
or
xor
cmp
int
loop
jne
lock
mov
int3
pop
mov
loop
and
or
mov
push
outsl
sub
ja
loop
sbb
push
decl
mov
xchg
lcall
pop
push
or
ffree
js
dec
inc
rcrl
push
imul
jns
in
push
push
lret
xchg
xchg
adc
das
pushf
adc
lock
incl
jp
stos
mov
mov
lods
pop
jnp
ret
jns
popa
lahf
popf
mov
in
mov
lret
shrl
out
pushf
mov
int
dec
xchg
add
out
inc
xor
popf
sub
pop
mov
pop
es
loopne
mov
pop
xchg
mov
cmp
sub
into
mov
mov
push
or
sub
hlt
not
push
arpl
stos
jg
xor
fwait
lret
or
or
push
in
xorb
jno
insb
xchg
jp
mov
icebp
mov
xor
rorl
inc
adc
jo
enter
ljmp
push
pop
xor
jno
and
push
iret
in
xor
xchg
sbb
pop
and
cltd
xor
test
xchg
jmp
int3
repnz
push
int3
shl
repnz
mov
pop
xlat
int
pop
aas
aam
push
int3
mov
cmp
jno
inc
add
jecxz
sahf
repz
movsl
loop
stc
insb
pushf
inc
or
gs
and
fcoms
xchg
push
or
stos
push
sti
mov
fstp
and
movsl
out
inc
je
mov
xor
xlat
mov
ret
call
out
or
dec
and
stos
imul
xor
mov
push
pop
out
mov
inc
cmp
add
push
jge
int3
std
shll
xor
mov
push
mov
xchg
push
lods
jbe
inc
fldl
arpl
xor
sbb
rcrl
enter
adc
cmp
outsb
fcomps
pop
lret
into
fsubrl
or
push
sahf
xor
push
in
addl
inc
cmp
ss
fnstcw
mov
or
push
fildll
sub
cmp
push
or
or
bound
adc
out
dec
xchg
add
les
sub
pop
mov
or
ljmp
mov
dec
daa
mov
add
movb
cld
stos
mov
xchg
jmp
popf
fiadds
sti
fcompl
jg
mov
addr16
rcll
sbb
fimuls
test
mov
imul
mov
dec
enter
pop
pop
mov
iret
jle
sbb
xor
push
jecxz
arpl
and
pop
mov
adc
lret
xchg
jbe
xchg
rcr
fisubrs
push
and
jae
and
mov
push
fimuls
test
jno
test
outsb
aas
mov
cmp
mov
adc
xchg
mov
int
add
sti
xor
mov
pop
ljmp
test
cwtl
push
out
dec
rcl
jmp
int3
adc
xchg
sbb
aad
cmpsb
mov
add
pop
lcall
pop
sbb
rcll
add
or
mov
mov
pop
and
gs
icebp
rcrl
sub
sub
mov
dec
test
cmp
xchg
arpl
add
imul
mov
mov
les
ficomps
stos
lret
ljmp
mov
inc
fwait
sbb
out
dec
mov
icebp
in
pop
test
lock
mov
pop
addl
negl
or
andl
cmp
das
jp
dec
fcoml
inc
xchg
pop
ds
sahf
test
mov
lcall
mov
sahf
cmc
lods
nop
cmpsb
cmp
scas
push
adcl
in
mov
lea
xchg
jg
lods
sbb
bound
sti
mov
sahf
popl
xchg
add
lock
xlat
xchg
xor
aaa
es
and
pop
mov
push
fwait
jge
rcrl
inc
sub
dec
shll
das
mov
inc
add
popa
outsl
dec
push
or
sub
cmpsb
adc
pusha
scas
loop
fisubl
fstl
cmp
sub
nop
or
out
les
ret
mov
fisubs
in
fwait
xchg
xor
cld
or
pushf
mov
xchg
push
pop
lock
mov
jbe
adc
push
jp
movsb
stos
push
notb
ret
enter
mov
iret
ljmp
aaa
ss
push
adc
sub
push
sbb
popa
or
or
insl
cmpsl
pop
psrlw
outsl
scas
xchg
mov
int
or
inc
sahf
iret
cmp
lods
dec
mov
inc
xlat
mov
leave
les
daa
je
jno
mov
jbe
nop
and
pushf
popa
jge
or
mov
cmc
pop
mov
popf
dec
xor
loopne,pn
push
xchg
inc
pop
out
pop
mov
push
mov
adc
pop
sbb
xor
rclb
cmp
push
pop
lea
mov
imulb
jmp
xor
adc
insb
jl
mov
pop
test
cmpl
ljmp
repz
add
adc
dec
mov
cwtl
ja
in
push
mov
adc
cmc
in
pop
mov
jo
repz
push
fnsave
push
push
pop
aas
push
aaa
pop
and
jae
in
jo
mov
lretw
push
adc
notb
frstor
mov
sub
inc
fcoms
fucomp
jae
pop
push
outsl
js
jl
insl
push
sub
push
cwtl
cmp
pop
jl
inc
xadd
lahf
leave
or
mov
push
pop
fs
jge
xchg
jb
testl
and
mov
pushf
dec
mov
out
lcall
in
cli
push
xorb
xchg
incb
rcr
inc
les
ficoms
cmp
lods
pop
rol
adc
mov
inc
sub
and
fimuls
xor
idivb
scas
mov
jno
ss
pop
push
or
orb
adc
call
jae
shrl
mov
test
xchg
add
sub
rcrl
dec
mov
xchg
cmc
imul
cmpsb
adc
enter
push
pop
push
les
mov
lea
fstl
iret
xchg
jo
bound
pop
scas
fisubrs
cmp
inc
notb
bound
fdivl
aas
mov
add
pop
xor
adc
sbb
sub
xor
shr
mov
inc
dec
add
inc
dec
add
shlb
lret
mov
sar
pusha
inc
loop
ss
addr16
fnsave
jecxz
lret
cmpsl
nop
shl
flds
stc
stos
sbb
aam
mov
fidivrs
mov
fwait
push
xor
cld
or
adc
push
or
and
lret
push
bound
inc
adc
movsb
cmpsb
push
lret
stos
mov
enter
mov
xchg
adc
cmp
gs
adc
sub
sbb
or
sub
sub
sub
lahf
mov
adc
jo
cmpsb
popf
movsl
cmp
aas
mov
ss
arpl
fwait
es
fistpll
stos
in
in
and
push
clc
imul
or
adc
mov
icebp
pop
xor
ja
int
decb
ret
loopne,pn
push
mov
out
pop
addr16
retw
add
jecxz
dec
leave
mov
je
push
adc
push
mov
pop
push
pop
cltd
cmp
rcrb
mov
inc
cmpb
mov
xor
jne
jp
push
cld
jnp
mov
pop
test
add
mov
jo
repnz
in
mov
subl
in
jecxz
int3
jo
repnz
out
sahf
jo
repnz
sbbl
lds
repnz
jbe
push
or
pop
xor
into
inc
mov
test
imulb
aaa
mov
lock
xchg
mov
sti
inc
xchg
es
dec
fucomip
cltd
jb
pop
inc
outsb
or
pop
imul
push
cwtl
cmp
aas
or
push
subb
lds
xlat
arpl
xor
fbstp
divl
sub
xor
cmp
ret
mov
mov
arpl
add
imul
mov
adc
mov
lret
fidivs
in
lods
scas
rcr
adc
and
lcall
test
mov
inc
sub
xor
andb
sti
call
add
shrl
mov
scas
ss
cmp
int3
insl
popf
scas
call
call
mov
mov
ds
andb
lods
cmp
adc
mov
lea
jbe
push
pop
xchg
jg
and
bound
sarl
mov
sahf
add
xchg
pushf
mov
mov
xor
mov
aaa
push
sahf
push
and
lcall
ljmp
stc
popf
inc
hlt
ljmp
popa
fisttpl
mov
lret
jp
mov
pusha
psraw
jecxz
pop
fnstsw
test
lret
scas
nop
xchg
iret
mov
stos
pop
ffreep
aam
mov
fidivs
lods
cs
in
fwait
in
xor
xchg
mov
mov
dec
fwait
outsb
mov
clc
push
lds
jb
mov
test
xchg
shrb
jbe
push
xlat
jnp
movsb
arpl
xchg
subl
enter
mov
into
std
xor
xchg
inc
pop
push
ss
fs
adc
sub
lds
imul
or
mov
popa
cmpsl
aam
aam
loop
nop
mov
sbb
movsl
mov
lods
pop
mov
aas
mov
arpl
push
es
es
sub
and
pop
clc
add
fsubs
std
adc
mov
mov
test
int
cmpsl
ret
pop
push
mov
in
pop
ja
daa
ret
cwtl
or
int
enter
shll
and
jns
push
lds
push
out
je
sub
fnstenv
or
pop
je
xor
jne
jns
push
stos
jp
mov
mov
in
imul
hlt
in
mov
icebp
push
cmpl
out
mov
icebp
push
cmpl
out
mov
icebp
push
andl
lock
call
icebp
push
push
xor
push
movsb
pop
cmp
pop
jp
fcomps
into
lds
lcall
insb
inc
test
fisubl
push
sti
inc
lock
orl
dec
shr
inc
jb
pop
mov
or
pop
jo
in
sub
mov
dec
jl
ds
sbb
leave
ffreep
test
sub
icebp
ljmp
sub
and
adc
mov
clc
sti
sti
test
in
push
imul
xchg
insl
xchg
mov
cmpsb
ret
lret
in
fisubrs
scas
lret
mov
adc
pop
daa
out
dec
xchg
xor
adc
mov
fdivrl
cmp
pop
push
or
sub
add
enter
jne
pop
fdivl
loope
xchg
test
repnz
and
mov
in
xchg
test
mov
mull
cld
shlb
lods
push
xlat
dec
fidivs
mov
aad
jecxz
xor
adc
xor
mov
or
call
rolb
aad
xor
xor
jae
jp
loope
cmp
pop
sub
dec
roll
mov
inc
jecxz
popaw
orb
sub
lret
sub
mov
pusha
scas
loopne
mov
cmp
lret
ljmp
xchg
stc
stos
in
mov
fldcw
mov
mov
outsb
mov
jmp
lcall
lret
sub
or
sarb
aad
push
push
int
jo
jns
test
test
dec
enter
mov
inc
pop
or
add
sbb
xor
cltd
or
std
das
jl
insl
or
cltd
mov
mov
outsl
mulb
sbb
sbb
addr16
inc
es
push
fistps
jecxz
and
jmp
mov
cld
or
mov
mov
movsb
cwtl
cmp
xor
dec
push
push
cltd
inc
add
bound
mov
or
int
in
adc
xor
push
xchg
ljmp
xchg
outsl
pop
mov
cs
je
and
mov
dec
add
cmc
cs
test
pop
xor
jne
js
push
push
jp
mov
loopne
mov
decb
push
cmp
icebp
in
inc
mov
xorl
lahf
jo
icebp
push
and
jmp
jbe
xorb
add
in
xor
sbb
jne
push
bound
push
fwait
pop
aas
sbbl
out
call
rcr
inc
add
xor
xor
add
stos
rorb
mov
dec
nop
call
lahf
insb
cmp
push
nop
or
mov
lods
mov
or
loop
scas
mov
les
push
sub
icebp
xchg
sbb
sub
ja
and
fsubrl
mov
idiv
mov
incl
adc
mov
add
out
popf
xchg
es
cmp
adc
jnp
lods
lret
cmpsb
lods
xor
ret
adc
ja
ds
gs
dec
xor
ss
lock
jp
pop
adc
lods
jle
ret
or
fwait
mov
in
shrb
sub
mov
xchg
pop
cmp
int3
mov
movsl
call
add
fildl
mov
cmpsb
jg
xchg
stos
aas
lods
outsb
dec
lds
mov
lea
in
push
stos
xchg
jp
ret
sbb
sbb
scas
stos
data16
aam
dec
sahf
gs
mov
rolb
aam
xor
inc
push
shll
push
pop
push
jl
call
cwtl
ja
mov
xor
sub
stc
dec
aad
inc
ss
and
dec
or
lret
or
mov
sub
add
jbe
inc
cmp
cmp
nop
jmp
xchg
stos
stos
lods
aam
mov
fiadds
jecxz
fwait
jl
jmp
or
movntq
push
xchg
xor
jl
bound
or
or
cmp
test
imul
mov
xor
xor
and
arpl
adc
sub
xor
pusha
sub
or
or
pusha
cmpsl
sub
icebp
push
stos
andl
fsubrl
cmpsb
loopne
xchg
shrb
mov
mov
and
filds
in
jecxz
and
and
popa
adc
or
mov
mov
jge
ss
add
and
inc
and
xor
mov
ret
cmp
mov
and
in
adc
shll
je
adc
xchg
gs
push
or
and
mov
cld
push
and
mov
nop
mov
mov
jne
js
push
add
mov
in
lea
in
mov
mov
lock
cmpl
xorl
je
in
jle
sahf
jo
lock
xorl
sahf
jo
lock
pushf
jo
lock
push
mov
push
add
adcl
into
push
xchg
call
rcrb
xor
xor
inc
lock
repz
inc
ljmp
call
xor
pop
pop
jp
or
push
int3
cmp
push
jl
cmp
loopne
sub
ret
jmp
push
loop
ss
dec
sbb
sub
jbe
and
stc
sub
adcb
hlt
sti
jb
cwtl
arpl
incl
addl
xchg
lea
fbld
mov
fdivrp
aaa
mov
lods
test
inc
adc
and
mov
jmp
loop
movb
jp
pop
or
lea
lods
call
sbb
shrb
mov
fmull
xor
xchg
hlt
cmp
int3
lea
xorb
mov
negl
xchg
cmc
pop
sti
xchg
cmpsb
mov
stos
cmp
sub
scas
and
pusha
xchg
bound
dec
sbb
xor
scas
mov
mov
sahf
cmp
ljmp
xchg
mov
xor
xor
push
lods
push
xor
xchg
popa
cs
xor
leave
sub
inc
cmp
and
dec
xor
mov
fs
test
fcomi
into
sti
pusha
adc
add
pcmpgtb
mov
mov
enter
adc
nop
mov
xchg
stc
stos
aam
scas
mov
cs
loop
fwait
xor
call
or
js
jnp
out
push
call
and
lret
pop
cltd
or
or
jo
lea
xchg
stos
cmpsl
in
jo
sbb
and
mov
xchg
pop
pop
mov
sub
daa
ja
ljmp
or
cs
cmpsl
loopne
shl
dec
stos
xchg
mov
and
mov
movsl
lcall
arpl
lret
and
inc
es
and
fistps
loop
and
dec
clc
pop
and
popa
or
gs
adc
jns
xchg
pop
fmull
shlb
push
rolb
and
inc
inc
jb
cmc
or
adc
jne
cmp
xchg
sub
push
rcrb
mov
ljmp
mov
cld
mov
xchg
orl
xor
push
aad
xor
testb
jb
cltd
jo
out
push
addl
in
mov
add
out
int3
jo
out
add
in
movb
cmpl
in
int3
xchg
push
je
and
push
and
inc
pop
jbe
sahf
pop
xlat
into
call
rcr
data16
adc
idiv
xor
and
stc
add
jae
orl
lea
mov
dec
fsubrp
js
or
or
pop
addr16
dec
or
and
mov
jl
cmp
rclb
mov
xlat
ret
aad
pop
push
fisubs
icebp
jno
icebp
jb
hlt
jb
add
and
cmp
mov
xor
dec
add
cmp
cmp
mov
arpl
push
addr16
subb
xchg
cmc
adcl
cwtl
rcr
ret
loop
fsubp
ss
aaa
loope
lods
loope
lods
adc
mov
inc
scas
adc
out
inc
jmp
test
xchg
pop
cmpb
or
or
add
mov
fidivs
fdivl
and
ss
iret
cmp
call
mov
mov
mull
cli
cmc
cmpsb
jecxz
cmpsb
dec
loopne
dec
lods
nop
dec
lods
jo
scas
jo
xchg
jae
push
push
nop
push
xor
xor
xor
adc
scas
cmp
cmp
sbb
shlb
scas
mov
push
xor
or
push
xchg
sub
xchg
adc
insl
adc
sub
add
sar
inc
cmpsb
cld
inc
popa
int
popa
or
fs
xor
fcmovnu
int
pusha
fisubs
stos
arpl
cmp
dec
add
dec
lret
lret
int
fsts
stos
aam
scas
aam
jb
fisubrs
lcall
xchg
repnz
xchg
or
or
int3
nop
push
pop
dec
and
pop
lret
or
into
or
or
push
lds
movsb
xor
xchg
or
imul
outsb
enter
mov
jle
xor
xor
in
and
adc
adc
ret
pop
sub
mov
or
mov
icebp
mov
popf
movsl
push
dec
insl
xchg
cmpsb
adc
cmpsb
cmp
cmp
loopne
mov
bound
es
sub
in
loope
and
and
popa
sar
pushf
xchg
fs
adc
sahf
adc
xchg
pop
mov
repz
loopne
jecxz
inc
pop
ja
pop
ret
fmuls
ret
int
vmovupd
adc
je
mov
lcall
out
push
stc
and
mov
sti
mov
test
je
xor
jbe
push
cld
ja
mov
push
mov
fisttpl
sub
xchg
jo
out
jo
outsb
jae
in
icebp
test
jo
out
jo
imul
out
test
jo
out
jo
push
test
jo
out
jo
gs
in
call
out
jo
bound
push
in
push
push
pop
push
or
or
test
push
sar
data16
outsb
imul
and
and
mov
inc
mov
inc
mov
push
outsl
push
or
pop
or
or
insb
push
mov
jl
cmp
rcrb
mov
pop
sbb
pusha
push
icebp
mov
repz
dec
jne
and
andl
dec
jl
dec
orb
sti
mov
std
arpl
dec
data16
xorb
xchg
mov
loopne
fbstp
or
xor
sub
fmulp
jg
lret
int
adc
adc
adc
out
inc
out
mov
xor
xchg
pop
enter
jge
jp
lcall
call
int3
ljmp
lock
ss
xchg
pop
cmp
call
add
mov
pop
mov
imul
xchg
cmc
mov
clc
cmpsb
dec
sub
lods
jo
scas
jo
fdivl
push
lahf
push
xor
xor
pop
fs
cmp
cmp
xchg
arpl
shlb
divb
push
push
push
push
xchg
jne
xchg
adc
adc
mov
sub
xor
rorl
sar
inc
sar
inc
out
sti
inc
popa
adc
arpl
lret
jnp
lret
int
pusha
jecxz
pusha
repnz
fnsave
fisttpll
dec
lret
lret
int3
nop
xchg
fldcw
jmp
fisubrs
loop
cs
jmp
fwait
xchg
cmp
or
adc
push
pop
xchg
and
pop
lret
or
or
or
or
push
movsb
xchg
push
cmpsb
xchg
imul
enter
mov
nop
xor
xor
sub
and
pop
adc
or
sub
std
sub
cmpsl
and
cmpsl
icebp
test
mov
in
push
xchg
insb
xchg
cmpsb
pop
cltd
cmpsb
cmp
cmp
and
fisttps
adc
in
leave
out
clc
int
clc
popa
or
popa
pushf
fbld
adc
adc
xchg
pop
mov
cmp
loopne
sub
inc
pop
mov
or
int
int
lahf
iret
adc
je
ljmp
xchg
outsl
pop
xchg
push
cs
push
stc
imul
or
subb
subb
push
xor
jne
push
inc
ja
mov
in
mov
adcl
in
mov
in
jo
out
jo
mov
sub
test
jo
out
jo
mov
sub
test
jo
out
jo
mov
sub
test
jo
out
jo
lods
jb
in
xor
jo
stos
jb
push
sub
pop
push
adcl
or
test
cmp
jmp
add
mov
xor
sbb
mulb
out
and
stos
and
mov
icebp
mov
mov
cmp
call
sbb
or
pop
or
or
mov
mov
jl
cmp
jge
mov
addr16
gs
pop
push
outsb
pop
push
icebp
add
icebp
jb
bnd
xchg
je
and
lret
es
les
cmp
cmp
in
xchg
gs
cmp
adcb
xchg
mov
xor
xor
je
fmulp
lods
jno
lods
adc
inc
ds
out
inc
out
aam
xor
test
pop
adc
jp
pop
jp
loop
or
xchg
mov
mov
ljmp
cmp
fdivl
mov
ss
pop
cmp
call
dec
ljmp
xor
cmc
cmpsb
jae
cmpsb
dec
jo
dec
lods
and
ret
lods
jo
and
lea
out
push
xor
sbb
bound
arpl
sahf
and
xchg
stos
lahf
xchg
rorb
xchg
shlb
ds
push
pop
xor
pushf
push
push
xchg
mov
xchg
adc
std
adc
sub
sub
xchg
sub
stc
mov
stc
inc
ss
inc
popa
pop
dec
popa
or
or
fldt
frstor
cmp
fnstsw
fimuls
dec
lret
lret
nop
fldenv
fldcw
xor
fisubrs
sub
cs
xor
fwait
xchg
sbbb
out
mov
pop
push
pop
ficomps
pop
lret
insl
pop
lret
or
or
push
ja
movsb
rcll
lcall
enter
mov
nop
xor
xor
je
and
mov
adc
or
or
inc
test
mov
sub
imul
shlb
mov
jo
mov
repnz
fists
in
loopne
and
out
clc
adc
stc
popa
pushf
daa
arpl
leave
adc
mov
mov
loopne
jae
inc
pop
pop
inc
pop
ret
push
int
out
adc
je
xor
push
xchg
cwtl
push
xchg
mov
xchg
push
jbe
push
stc
mov
stc
mov
cli
mov
adc
subl
jne
jne
push
mov
mov
in
sahf
out
in
stc
test
jo
in
jo
jno
in
addl
in
jle
in
jo
in
jo
clc
jno
in
jnp
in
jo
in
jo
cmc
jno
in
js
in
jo
in
jo
bnd
push
jne
push
push
push
pop
push
sbbl
into
pop
test
incl
addr16
addr16
fs
and
mull
lock
mov
mov
mov
addb
jecxz
push
or
or
or
cld
push
mov
jl
cmp
jge
mov
scas
ror
lods
lret
mov
push
icebp
dec
pop
icebp
jb
bnd
and
adc
mov
or
dec
sbbb
arpl
in
fisubs
inc
in
adcb
xchg
mov
xor
xor
lret
lret
lret
lods
adc
inc
out
inc
out
sbb
xor
test
pop
pop
cmp
or
jnp
lea
call
pop
jmp
das
faddl
fdivl
xchg
cmpsl
aaa
xchg
int3
add
call
test
test
cmc
dec
clc
cmc
cmpsb
mov
cmpsl
dec
lods
push
lods
jo
insb
jno
push
das
mov
xor
xor
xor
in
bound
sahf
push
sahf
xchg
rclb
shlb
xchg
push
push
in
push
xchg
add
xchg
adc
inc
adc
sub
cs
sar
sar
inc
jle
inc
popa
movsl
inc
popa
or
popa
or
or
lret
fsubl
andb
push
aaa
fisttpll
dec
lret
lret
lret
insb
xchg
fldcw
jns
aam
dec
aad
jb,pn
cs
jnp
fwait
xchg
lret
or
xchg
or
movsb
mov
pop
es
pop
lret
mov
lret
or
lret
or
or
popf
jbe
movsb
or
xchg
loop
xchg
imul
enter
mov
push
xor
xor
mov
and
add
fwait
add
or
mov
mov
xchg
and
xchg
cmpsb
cmp
cmpsl
cmp
mov
mov
fistps
in
pop
in
clc
pop
and
popa
cwtl
clc
popa
pushf
outsl
bound
adc
xchg
pop
xchg
dec
lret
mov
loopne
mov
inc
pop
ret
mov
ret
int
ret
int
das
into
adc
je
jp
xchg
push
fstl
xchg
push
mov
push
stc
mov
stc
mov
pop
mov
cs
je,pn
je,pn
je
push
aam
push
mov
push
mov
mov
in
out
sub
test
jo
in
jo
inc
jno
in
leave
sub
fucomi
jo
inc
jno
in
movb
addl
in
ret
sub
aad
jo
cmp
sub
shr
jo
cmp
push
mov
push
push
andl
into
dec
into
jmp
add
inc
addr16
lods
xor
and
and
cmp
lock
inc
xor
mov
sub
pop
stos
push
or
or
inc
push
mov
jl
cmp
jl
mov
idivl
pop
push
pop
push
icebp
xchg
push
icebp
jb
icebp
jb
and
and
pop
and
dec
and
cmp
cmp
lods
sti
arpl
es
orb
xchg
mov
mov
fbstp
fiadds
fmulp
push
fmulp
lods
add
lods
adc
lods
adc
adc
xor
xor
test
test
dec
test
pop
mov
pop
jp
jb
or
and
mov
mov
fmul
das
fdivl
inc
fdivl
xchg
out
ss
int3
dec
xchg
int3
call
fsubr
mov
divl
div
xchg
div
cmpsb
add
cmpsb
dec
add
lods
jo
lods
jo
mov
lea
ja
push
xor
xor
xor
scas
cmp
cmp
cmp
sahf
push
jge
xor
repnz
imul
mov
xchg
or
pop
push
cmp
jno
cmp
push
clc
push
push
pop
testl
sub
add
inc
loopne
add
add
dec
loopne
add
add
add
add
add
add
add
add
jb
gs
xor
cs
insb
add
inc
gs
jb
arpl
fs
jae
add
dec
outsl
popa
fs
imul
