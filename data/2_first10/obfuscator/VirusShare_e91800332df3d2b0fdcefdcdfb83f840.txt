and
addb
adc
or
add
add
add
adc
add
inc
mov
and
and
test
add
stc
andb
adc
xchg
add
and
bound
and
add
adc
inc
add
add
enter
add
or
inc
or
adc
test
inc
or
test
add
pusha
orb
add
add
inc
add
inc
add
orb
test
add
inc
mov
andl
and
inc
add
test
mov
and
sub
adc
add
popa
pop
test
adc
xor
add
and
push
or
xor
inc
add
adc
sub
push
inc
ret
xor
adc
inc
push
test
enter
dec
mov
andb
adc
push
and
and
inc
jns
add
add
add
inc
push
and
mov
sbb
adc
adc
and
and
inc
inc
mov
add
inc
or
mov
and
orb
inc
add
and
rorb
sbb
add
sub
add
add
mov
adc
addl
add
ljmp
add
sbb
add
pushf
add
cwtl
add
pusha
lcall
loopne
xor
shlb
or
jle
pusha
add
or
pop
pusha
add
or
dec
inc
and
add
and
loop
adcb
or
shl
inc
andb
loope
and
add
or
add
dec
addb
sbb
add
add
xchg
inc
add
add
add
or
add
inc
inc
inc
push
ficoml
movsb
fdivl
add
add
mov
adc
nop
nop
or
adc
add
subb
inc
adc
dec
shrl
or
and
and
mov
mov
inc
subl
adc
and
add
add
inc
adc
cmp
and
add
adc
add
nop
adc
mov
add
adc
mov
push
add
pusha
or
add
roll
push
xor
sub
or
add
and
addl
test
or
or
add
mov
js
mov
inc
jmp
dec
adc
add
inc
xor
inc
add
mov
add
or
sub
addb
lcall
adc
movsb
or
add
inc
movsb
dec
inc
add
shlb
xor
add
sbb
add
movsb
aam
and
adcb
and
xorl
add
dec
cmp
add
adc
inc
andb
sbb
inc
mov
adcb
stos
xor
xchg
insl
inc
xorl
adc
add
cmp
add
cmp
push
inc
fldenv
dec
jmp
mov
and
add
add
sub
xchg
and
add
add
add
inc
inc
add
in
add
mov
pop
xchg
cmpsb
mov
or
inc
rclb
add
dec
mov
or
dec
mov
inc
inc
inc
add
add
add
mov
inc
inc
nop
cmpsb
rclb
dec
insb
and
and
or
inc
add
add
inc
and
add
xor
dec
inc
addb
add
add
dec
test
nop
add
add
orl
and
or
add
add
pusha
dec
add
add
mov
xchg
and
or
add
or
in
adc
push
push
add
inc
adc
add
sbb
add
or
add
mov
adc
adc
je
lods
dec
jno
add
inc
mov
adc
add
add
adc
add
add
add
rorb
sbb
sub
push
orb
inc
and
nop
sub
add
add
xchg
and
addl
adc
adc
inc
movsb
pushf
popa
sbb
add
dec
addb
add
sub
jp
add
mov
and
inc
jae
enter
adc
adc
test
push
pusha
inc
sub
add
add
mov
dec
rol
xchg
adc
rorl
inc
xorb
orb
andb
and
add
or
or
or
push
add
push
sbb
loope
movsb
mov
verr
add
shlb
addb
addb
inc
add
rolb
and
andb
add
or
mov
repnz
addb
shlb
push
sub
xchg
sbb
mov
mov
and
xchg
test
mov
adc
or
inc
test
and
add
shll
sub
jo
add
and
add
push
sub
add
or
aad
add
adc
or
and
pop
test
mov
add
adc
and
popa
add
adcl
add
lock
adc
bound
test
nop
jns
sub
adc
add
sbb
add
add
fs
lret
add
add
nop
push
cwtl
or
add
xor
inc
and
inc
inc
sbb
or
sub
inc
push
subl
adc
add
add
pusha
add
add
adc
sbbb
pusha
sbb
or
ror
mov
add
inc
add
inc
andb
or
movsl
adc
add
push
add
add
cwtl
add
ret
lods
inc
es
dec
add
mov
adc
adc
and
sbb
cmp
push
pusha
rorb
inc
adc
xor
orb
inc
mov
loopne,pn
subb
add
mov
adc
add
and
mov
test
push
and
sub
add
dec
inc
xor
xor
inc
adc
add
adc
inc
add
adc
add
adc
arpl
les
xor
pusha
and
pusha
test
popa
xchg
adc
xchg
add
add
add
and
cwtl
and
add
lock
jns
add
cwtl
and
andb
addl
pusha
enter
push
sub
add
sub
and
add
jb
add
mov
stos
inc
addb
roll
test
and
mov
andb
shrl
add
add
adc
cmp
xor
sbb
add
jmp
rolb
and
adc
and
or
add
jo
adc
addb
mov
adcb
or
mov
adc
add
add
movsb
add
scas
add
add
add
adc
adc
adc
inc
push
add
inc
test
enter
adc
inc
and
sbb
xchg
addb
mov
or
sbb
or
push
inc
push
scas
adc
mov
add
or
inc
add
adc
orb
or
inc
add
or
adc
pusha
push
pusha
inc
xor
or
add
and
mov
adc
andl
and
xchg
add
inc
and
rclb
xor
and
push
adc
inc
push
add
movsb
or
xor
fs
add
add
pop
add
pop
es
pusha
inc
or
adc
pop
test
add
add
inc
dec
add
rol
add
and
cmp
inc
add
add
or
or
jmp
lea
sbb
orb
and
add
pop
add
add
pusha
loopne
bound
xor
xchg
or
or
pop
inc
roll
inc
call
inc
xchg
test
aad
inc
pop
adc
and
and
push
andb
sbb
xchg
add
add
and
add
inc
push
mov
sub
add
addl
adc
addl
fs
addb
test
and
add
addb
add
ds
cltd
sub
addb
adcb
inc
and
dec
add
push
adc
cs
addb
or
and
add
dec
push
imul
and
push
push
and
add
and
inc
add
xor
and
or
and
mov
add
adc
and
dec
push
xchg
or
adc
add
sbb
add
cmpl
add
add
loopne
adc
add
cmpsb
addl
sub
and
inc
adc
add
adc
je
lcall
add
dec
and
adc
or
sub
or
mov
and
add
xor
cmp
cmp
push
addb
sbb
dec
and
xchg
push
add
adc
in
add
inc
mov
add
add
or
push
add
sbb
cmp
ret
push
add
mov
addb
and
inc
mov
or
sub
adc
add
dec
pop
push
add
add
add
add
sub
cwtl
inc
outsl
add
mov
rcll
and
add
test
addb
adc
inc
addb
and
inc
lcall
or
mov
or
add
inc
and
add
mov
or
add
dec
andb
or
add
and
loopne
rclb
add
add
ret
and
add
adc
push
movsb
sub
add
pop
rorb
inc
and
push
inc
push
add
addb
push
add
sub
pop
sbb
addl
adc
and
pushf
dec
and
inc
adc
shr
dec
adc
mov
add
and
inc
sbb
addb
add
add
inc
dec
mov
adc
pop
adc
add
cmpsl
xchg
inc
jmp
push
sbb
xchg
and
add
ret
add
mov
rclb
rol
push
and
push
add
orl
and
adc
adc
pop
and
rolb
push
add
pop
lea
inc
adc
out
add
and
and
icebp
add
mov
jne
adc
faddl
inc
add
add
adc
or
adc
inc
xor
add
rclb
add
mov
leave
inc
xor
adc
sub
add
inc
or
orb
and
addb
lods
cmp
or
sbb
inc
pop
and
subl
and
push
add
dec
sub
nop
inc
test
inc
add
dec
andl
inc
inc
sbb
or
or
imul
inc
add
push
and
stos
rorb
lock
addb
pop
add
dec
adc
xor
dec
mov
sub
add
or
dec
sub
adc
mov
add
sbb
xor
add
repnz
adc
push
or
or
add
and
adc
add
adc
in
cmp
and
adc
cwtl
addb
nop
loopne
or
add
and
and
xor
and
sbb
andb
add
add
adc
inc
jg
or
and
add
inc
or
and
add
imul
adcb
cmp
adc
mov
pusha
inc
sbb
popa
add
addl
push
add
mov
adc
add
adc
sbb
int3
orb
inc
adcl
sbb
add
and
add
adc
pusha
and
and
and
ret
adc
add
rorb
add
inc
sub
add
add
inc
add
nop
adc
add
xor
add
add
addl
mov
and
inc
and
sbb
cltd
addb
add
loopne
mov
adc
and
test
xor
fs
xor
lret
test
add
andb
test
pop
add
sub
add
or
loopne
add
add
and
add
push
and
or
nop
and
or
lcall
shrb
adc
hlt
and
add
add
sbb
dec
add
or
pop
sub
shlb
inc
and
or
sub
cwtl
push
mov
sahf
xchg
nop
mov
adc
fcoms
add
xor
add
inc
and
and
jbe
add
xchg
or
add
add
dec
add
adc
adc
and
adcb
adcb
pusha
adc
add
or
adc
adc
push
adc
mulps
test
add
add
add
add
adc
inc
rolb
inc
pusha
addb
adc
subb
sbb
addb
and
dec
and
or
dec
inc
mov
and
sbb
lea
adc
nop
add
or
pop
and
add
pusha
pusha
dec
pop
and
add
add
rolb
sub
push
js
loop
xor
addb
inc
and
adc
and
andl
inc
rcrb
or
or
and
inc
add
add
add
add
nop
xor
add
inc
addb
adcb
or
inc
add
lods
adc
nop
and
adc
sub
addb
and
add
add
fs
sbb
inc
leave
orl
or
add
mov
add
mov
andb
sub
rolb
bound
andl
adc
mov
or
roll
adc
xchg
add
pop
add
add
sub
xor
or
jb
and
add
jecxz
add
lcall
test
add
call
add
addb
add
add
sbb
sub
sub
and
loopne
and
xchg
push
or
pop
adc
or
or
push
adc
and
adc
inc
and
push
ret
and
rolb
and
add
cmp
mov
and
sbb
add
rolb
or
mov
dec
dec
pop
and
inc
popa
or
add
test
xor
sub
adc
mov
movsb
stos
and
add
sbb
rcrb
and
add
test
and
popl
and
add
add
or
and
ret
test
add
add
add
add
and
push
add
mov
adc
inc
add
inc
mov
adc
mov
xor
or
rcll
and
add
and
or
add
sbb
add
nop
orl
or
mov
jb
inc
roll
and
rolb
xor
jo
nop
addb
out
bound
sub
nop
or
add
add
orl
add
and
fsubl
orb
add
inc
sbb
mov
add
push
inc
inc
rorb
and
push
add
sbb
and
add
inc
add
inc
adc
and
dec
adc
es
add
nop
and
and
dec
add
inc
inc
and
test
addb
and
or
adc
adc
or
add
inc
fadds
adc
add
inc
adc
add
inc
jno
cwtl
add
mov
mov
add
push
add
add
add
mov
or
ja
and
add
shrb
inc
add
adc
and
adc
or
mov
sbb
pusha
and
inc
inc
add
and
add
sub
and
inc
add
inc
orl
add
sbbb
add
dec
or
int
add
and
and
adc
push
inc
inc
add
add
inc
dec
or
mov
add
dec
xor
push
add
mov
and
sbb
rol
addb
add
inc
add
xchg
add
inc
adc
add
jb
adc
and
add
sub
mov
add
add
add
add
add
inc
push
add
add
dec
nop
mov
stos
and
add
push
movsb
add
inc
mov
mov
sbbb
or
addb
stos
inc
pusha
mov
addb
mov
je
dec
add
add
add
add
inc
pop
nop
add
xor
add
nop
and
add
add
add
add
or
and
or
sahf
jbe
add
adc
inc
add
add
and
add
or
and
add
lods
adcb
add
xorl
add
sbbb
xchg
add
push
inc
nop
sub
add
add
adc
imul
addb
and
inc
adcb
inc
dec
dec
and
sub
push
add
je
adc
and
mov
inc
add
addb
add
add
andb
inc
pop
sub
push
stos
add
sub
add
and
add
in
or
cmp
add
orb
or
or
pusha
add
push
mov
push
add
push
mov
mov
add
add
inc
or
adc
add
add
adc
lock
add
push
add
sbb
push
adc
cmp
push
adc
adc
add
xchg
mov
adc
adc
add
fadds
add
or
sub
adc
andb
xor
or
add
cmp
sbb
and
add
sbb
test
dec
push
add
cmp
and
inc
adc
or
or
and
add
sub
add
adc
inc
adc
popl
mov
add
test
dec
cmpsb
add
inc
gs
or
addb
dec
les
add
adc
inc
cwtl
sbb
or
push
mov
or
push
and
and
rolb
and
lea
and
inc
test
sub
addl
dec
adc
and
and
adc
stos
adc
add
inc
or
and
or
add
mov
dec
add
xchg
adc
jo
inc
pop
adc
add
or
inc
or
dec
lds
andb
addb
and
push
add
add
add
andl
push
inc
sub
mov
adc
xor
or
test
or
and
or
add
add
mov
adc
xor
bound
push
pop
add
daa
adc
bound
add
push
int3
test
add
add
inc
add
inc
test
add
or
and
mov
add
push
xor
or
inc
mov
xchg
mov
shlb
cmp
mov
inc
in
dec
inc
inc
inc
andl
inc
pusha
or
push
push
add
and
rolb
add
or
push
and
andb
and
or
rcrb
and
add
xor
adc
or
add
pusha
pusha
adc
addb
ja
mov
add
add
adcl
adc
add
add
rorb
addb
add
or
add
or
add
mov
orb
mov
pop
sbb
bswap
mov
dec
or
bound
xchg
enter
adc
movsb
or
and
enter
or
nop
shrl
add
pop
shrb
or
or
add
xchg
add
rolb
test
add
or
sub
sub
imul
and
bound
nop
add
lock
add
cwtl
inc
add
add
adc
inc
roll
sub
addb
and
sbb
add
add
add
add
add
inc
loope
pusha
adc
adc
or
bound
mov
add
add
and
add
addb
orl
dec
dec
add
add
roll
mov
add
or
into
xor
and
pop
lock
icebp
test
add
mov
and
sbb
sub
xor
and
xchg
add
or
add
sbb
dec
and
inc
and
push
inc
pop
add
cwtl
xchg
xor
sub
sub
add
add
add
and
adc
and
test
sbb
cmp
dec
add
add
add
inc
sbb
or
add
add
add
and
or
adc
add
jno
and
or
rolb
adc
hlt
nop
cmpl
or
dec
add
xor
push
rorb
sbb
adc
and
movsb
sbb
and
add
add
dec
stc
inc
movsb
add
xchg
add
push
and
sub
sub
and
or
add
and
inc
add
inc
and
sbb
sbb
sbb
or
or
sbb
and
jno
rorl
add
add
xchg
mov
inc
add
inc
dec
sbb
addb
inc
or
sub
addl
test
adc
add
cmp
pusha
mov
push
addb
test
and
addb
inc
addl
push
dec
and
movsb
add
add
add
and
add
add
push
movsb
les
dec
and
add
leave
cmp
sbbl
or
push
adc
inc
mov
add
mov
add
cwtl
add
loop
or
rolb
xor
add
sbb
or
add
adc
xor
xor
add
add
add
add
xor
or
and
pusha
fiaddl
sbbb
add
adc
mov
sbb
imul
adc
or
pusha
dec
or
in
push
add
mov
push
add
nop
dec
inc
push
rolb
or
mov
test
add
test
add
and
addb
add
rclb
add
adc
push
add
mov
and
pop
inc
add
add
les
or
jge
addb
dec
shll
inc
inc
inc
xor
and
xor
xchg
nop
add
inc
add
movsb
add
add
sub
inc
dec
and
push
adc
mov
add
adc
inc
les
add
add
add
add
and
add
and
faddl
or
xchg
push
xchg
and
addb
add
or
sbb
inc
pop
and
in
or
or
loopne
or
addb
sbbb
add
nop
icebp
add
sub
sbb
adc
push
addb
or
and
xor
add
add
or
mov
or
mov
inc
test
xchg
or
jo
pop
nop
dec
add
mov
dec
push
push
lret
addb
add
cwtl
inc
add
test
sarb
sub
sbb
mov
add
add
les
add
or
add
sub
cwtl
adc
push
push
add
loopne
or
add
add
and
xor
pop
add
add
and
or
cmp
sub
pusha
or
popl
push
adc
sub
popa
les
mov
add
add
add
add
sbb
adc
add
inc
and
push
add
inc
andb
add
sub
add
and
orb
add
xchg
inc
pop
dec
and
add
cmp
and
and
and
test
stos
and
push
add
add
add
add
and
or
and
or
or
add
push
adc
xor
push
add
adc
add
inc
add
inc
add
xor
add
mov
add
push
add
adc
inc
mov
add
adc
adc
mov
adcl
adc
sub
add
adc
push
sbb
jo
add
and
add
inc
mov
mov
adc
rcll
inc
and
inc
add
add
or
and
adc
and
les
push
adc
add
and
sub
adc
jecxz
add
add
add
inc
or
adc
inc
adc
add
and
adc
inc
inc
sahf
sbb
or
andl
inc
nop
and
inc
add
add
or
mov
cmpsl
add
dec
rcll
add
addb
sbb
xorl
inc
or
mov
and
mov
int3
add
dec
orb
adc
xchg
or
add
cs
cmpb
or
cmpsb
cwtl
or
mov
and
inc
add
subb
mov
and
add
inc
dec
inc
add
adc
add
and
mov
nop
dec
add
mov
mov
or
add
adc
or
inc
inc
push
mov
or
add
inc
and
or
xchg
nop
and
add
sbb
and
dec
adc
fimull
add
pusha
imul
mov
addb
addb
add
xchg
adcl
adc
repnz
inc
and
adc
or
clc
dec
and
add
adc
mov
or
sbbb
cmp
lret
inc
adc
add
add
xchg
add
add
add
mov
les
addb
pushf
adc
add
adc
add
add
mov
add
imul
and
and
loopne
test
inc
inc
and
xor
push
sbb
enter
jno
or
cltd
fs
roll
cltd
sub
push
add
movsl
sbb
jecxz
add
adc
add
and
pusha
addb
inc
or
mov
add
or
inc
or
mov
popa
and
add
or
pop
inc
add
or
dec
mov
adc
add
adc
orb
and
inc
or
dec
mov
add
and
add
xchg
inc
add
xorb
stos
inc
or
or
adc
inc
sub
and
test
dec
add
xor
bound
adc
pusha
add
addb
xor
mov
adc
mov
add
add
adc
int3
add
and
adc
add
add
inc
addl
sbb
and
adc
add
addb
add
rorb
add
adcl
movsb
inc
shlb
push
rolb
and
inc
orb
cmp
and
add
nop
xor
or
and
sub
inc
add
rolb
add
xor
cmovo
add
dec
ret
sbb
mov
inc
cmp
and
mov
adc
and
add
and
or
gs
and
add
or
or
inc
cmp
xor
or
add
and
enter
addb
or
xor
add
mov
add
inc
inc
popa
adc
insb
add
cwtl
test
xchg
or
dec
xchg
xor
add
or
mov
inc
sbb
sub
and
test
and
add
or
xchg
pop
push
and
mov
xor
mov
mov
adc
add
sbb
inc
or
pusha
roll
add
and
add
popf
mov
dec
pusha
je
sub
add
inc
add
test
push
add
or
add
movsb
xor
inc
rorb
adcl
push
push
add
adc
or
xor
addb
cwtl
adc
mov
xor
and
nop
push
addb
inc
or
dec
insb
adc
sub
inc
xchg
or
add
les
push
lret
pop
add
loop
roll
rorb
push
add
sub
inc
and
rorb
add
add
push
add
add
adc
int
or
test
test
test
add
and
adc
add
add
andl
or
popa
xorb
push
add
add
add
sub
mov
addl
xor
adc
adc
sbb
adc
pusha
adc
add
nop
and
adc
add
loopne
nop
inc
or
addb
lea
push
adcb
xor
addb
add
test
push
inc
inc
add
or
js
and
adc
adc
add
mov
pop
xor
sbb
and
or
loopne
fcoms
add
test
inc
xchg
push
pusha
xor
shlb
in
adc
shll
add
or
and
push
xor
add
stos
mov
or
addl
enter
and
add
or
roll
dec
test
leave
add
movsb
add
adc
push
and
js
adc
inc
add
inc
add
sbb
pusha
and
sbb
inc
add
mov
add
dec
add
xchg
fadds
inc
xorb
addb
add
add
dec
adc
adc
xor
xchg
and
and
pop
and
inc
rolb
rclb
adc
push
adc
and
and
sbb
mov
jb
add
add
dec
mov
dec
cwtl
add
and
dec
add
movsb
add
add
int
and
xor
or
mov
adc
inc
push
add
adc
add
or
mov
adc
add
xchg
orl
add
add
push
int3
add
inc
inc
adc
inc
pusha
mov
dec
or
lcall
popa
inc
add
dec
sub
push
and
inc
add
pop
and
push
push
stos
ret
pop
add
and
imul
and
inc
or
and
dec
xor
rolb
and
and
add
add
adc
dec
add
adc
add
and
mov
jb
add
stos
pop
pop
and
add
add
sbb
loopne
and
adc
dec
flds
push
push
rcl
movsb
dec
adc
and
and
or
and
adc
movsb
cmp
add
sbbb
add
mov
add
add
add
add
mov
add
addl
inc
push
push
or
push
inc
dec
inc
or
or
add
add
add
add
mov
add
or
add
add
add
inc
inc
add
cmp
and
or
sbbb
test
adc
add
inc
and
ret
loopne
adc
xchg
dec
add
roll
add
pop
mov
add
xchg
add
or
adc
add
add
add
add
inc
add
mov
add
xor
or
mov
adc
dec
dec
adc
add
adc
and
adc
imul
add
add
andb
lea
add
push
addb
and
adc
add
add
sbb
add
add
push
pushf
inc
adc
adc
jge
adc
push
add
add
or
push
mov
and
adc
push
inc
subb
mov
addb
addb
add
inc
and
loopne
xlat
test
adc
or
mov
add
push
orb
mov
and
and
adc
add
sub
inc
add
mov
test
inc
add
add
inc
inc
nop
add
andb
add
and
cmp
add
add
add
inc
andb
adc
mov
inc
mov
adc
push
add
and
add
cmp
push
imul
lock
add
inc
add
xchg
sbb
ret
add
addb
or
or
add
addb
mov
roll
and
inc
inc
loop
add
xor
sub
add
and
adcb
inc
add
push
add
mov
or
add
add
mov
cli
clc
add
jb
arpl
aaa
add
adc
or
xchg
add
add
adc
adc
aam
xchg
add
jno
imul
adc
or
push
and
or
loopne
loop
nop
add
cmp
and
add
inc
adc
nop
add
and
enter
push
or
les
addl
test
inc
push
jo
add
inc
lock
and
xchg
orl
dec
test
sbb
sub
sub
nop
inc
and
and
add
and
add
push
pop
andb
adc
inc
xchg
sbb
add
or
add
test
add
xor
pop
dec
inc
and
adc
test
arpl
add
inc
add
inc
add
sub
add
xor
and
test
add
fadds
mov
addb
adc
test
addl
xor
dec
and
add
xor
testb
nop
xchg
or
or
add
inc
pop
pusha
ret
and
add
fwait
inc
test
and
adc
or
sbb
inc
add
or
inc
addb
add
or
or
add
add
or
add
add
add
roll
push
mov
mov
push
add
nop
inc
add
inc
and
and
xor
add
mov
add
xchg
or
add
xor
push
xchg
push
add
nop
inc
add
adc
mov
mov
xor
add
aad
sbb
and
add
or
inc
adc
cwtl
push
add
push
push
add
inc
cmpb
add
add
push
or
add
test
add
add
sbb
sbb
inc
add
add
sub
or
mov
inc
orl
add
dec
add
and
add
jmp
sub
enter
inc
and
inc
orl
or
add
and
add
add
orl
dec
ficoms
adc
add
push
push
add
add
mov
add
rorb
or
inc
xchg
mov
add
call
add
or
or
or
shlb
pop
push
add
add
add
addb
add
sbb
add
shrb
pusha
adc
add
and
add
add
adc
dec
add
push
loopne
add
add
mov
dec
mov
mov
rolb
mov
and
or
or
adc
xor
adc
add
inc
sbb
pusha
sbb
add
test
mov
and
inc
sbb
mov
cmp
xor
add
add
inc
adcb
add
mov
add
inc
add
push
es
ret
add
inc
add
shlb
and
and
adc
add
and
inc
inc
push
adc
and
mov
push
add
add
xor
push
les
add
inc
push
add
adc
inc
add
add
or
and
or
sub
push
inc
or
test
and
adc
subl
mov
add
xchg
ret
add
sbb
and
add
mov
adc
cwtl
dec
adc
inc
or
inc
xor
or
nop
add
inc
addb
add
dec
and
or
and
add
inc
test
inc
mov
test
pusha
add
xchg
add
or
pusha
and
add
add
inc
pop
xchg
and
mov
addb
inc
push
test
and
sub
sub
inc
jp
nop
andb
add
add
xor
adc
cwtl
inc
add
or
add
push
mov
subl
and
or
cmp
test
or
and
or
add
or
push
add
or
add
mov
inc
and
and
pop
sbb
adc
add
mov
adc
orb
and
or
add
inc
xchg
add
adc
or
pop
add
adc
inc
inc
push
push
dec
add
or
add
add
pop
add
lods
add
fs
or
addl
push
mov
add
xor
adc
and
sbb
mov
sbb
add
sbb
xchg
xor
add
add
push
mov
add
repz
and
add
and
mov
andl
enter
xchg
add
les
cwtl
add
add
shlb
inc
imul
or
or
inc
add
sbb
mov
sbb
push
push
add
or
inc
add
add
add
add
pusha
inc
aam
add
add
sub
cmc
inc
push
and
or
sbb
sub
test
addl
adc
and
and
xor
add
add
add
or
or
sbbb
addl
and
and
inc
inc
adc
mov
adc
and
add
and
or
dec
or
or
cltd
or
inc
inc
add
mov
inc
push
inc
mov
inc
or
add
xchg
inc
and
add
orl
push
add
dec
add
adc
adcl
pusha
inc
sub
and
mov
sbb
adc
mov
and
add
add
add
adc
and
bound
add
or
xor
inc
rclb
orb
add
add
or
push
xchg
add
xchg
add
inc
add
cmp
inc
inc
add
and
add
roll
add
or
adc
inc
cmpb
add
xchg
add
add
pusha
add
or
bound
adc
mov
pusha
add
ret
inc
or
inc
pusha
add
add
adc
or
adc
or
pusha
and
in
add
pusha
adc
add
add
nop
xchg
and
and
xor
enter
xor
add
or
test
add
add
call
adc
or
rolb
or
add
pop
xchg
adc
add
ret
sbb
or
add
add
lock
push
adc
add
adc
test
mov
and
add
addb
add
add
or
add
sbb
or
mov
dec
adc
add
push
and
popa
and
and
sbb
mov
and
inc
add
dec
shlb
or
addb
nop
shrb
sub
and
add
int3
sbb
jno
inc
jno
add
adc
inc
add
fs
adc
adc
mov
add
push
add
and
or
add
andb
mov
arpl
or
adc
add
test
add
add
or
inc
mov
and
add
xor
sub
mov
or
push
or
add
add
daa
add
mov
and
sbb
adc
add
push
mov
aaa
dec
add
addb
orl
rclb
mov
xor
push
or
add
add
cmpsl
add
adc
mov
and
and
adc
and
or
or
es
test
sub
adc
push
mov
mov
inc
sub
pusha
add
sbb
sub
add
adc
movsl
add
add
and
add
sbb
jno
add
inc
andb
mov
push
xor
inc
push
adc
nop
add
inc
add
add
add
mov
rclb
add
cmp
or
or
add
mov
pop
and
orb
xorb
push
mov
add
movsb
inc
add
add
adc
add
cmp
add
ret
mov
adc
xchg
xor
ret
mov
add
mov
andb
or
push
push
inc
inc
add
pop
xor
and
adc
and
push
dec
adc
sub
sbb
add
and
adc
add
add
xor
adc
movsl
and
add
mov
gs
xor
add
add
bound
add
add
add
int3
or
subb
ret
or
adc
and
and
add
add
mov
xchg
adc
and
js
add
or
adc
sub
insb
shrb
push
mov
xor
outsb
andb
cwtl
add
or
or
pusha
add
mov
add
adc
popa
xchg
add
or
mov
inc
adc
add
xor
cmp
add
mov
and
adc
movsb
add
add
inc
add
push
push
aad
or
mov
xor
adc
nop
loopne
add
sbb
xor
shlb
pop
add
and
or
or
add
sbb
call
les
add
pushf
lds
and
add
add
cmp
inc
shll
adc
sbb
mov
adc
rcll
daa
inc
or
adc
sbb
inc
add
dec
add
and
adc
add
inc
xor
or
mov
add
mov
add
inc
sbb
adc
add
push
or
stos
add
les
add
or
ss
add
pusha
fs
cmpsb
add
andb
and
les
dec
inc
aam
adc
add
xchg
addl
and
adc
or
and
add
add
sbb
inc
push
add
lret
or
and
adcb
or
rclb
and
and
adc
and
rol
fadds
xor
pusha
sub
add
add
pop
add
inc
test
inc
add
sub
addb
roll
adc
push
and
sub
jo
push
aam
add
inc
push
pusha
adc
add
lcall
adcl
push
andl
sub
adc
mov
add
add
adc
sbb
loop
call
and
add
orl
inc
mov
or
add
add
andl
or
test
or
adc
inc
addb
add
roll
test
sub
mov
inc
add
nop
and
cmp
xchg
sbb
add
inc
sub
xor
adc
or
adc
enter
and
xor
or
adc
inc
rolb
sub
xor
add
inc
add
or
dec
xor
adc
mov
and
and
adc
add
adc
add
je
and
nop
adc
ret
add
mov
add
and
or
push
sbb
push
xchg
adc
add
xor
or
add
and
enter
addl
add
or
inc
mov
add
xor
and
lret
inc
dec
or
add
push
sub
mov
push
sub
and
xor
xchg
and
add
movsl
add
int
or
add
dec
add
add
add
add
jo
add
add
sbb
mov
adc
mov
and
dec
or
pop
mov
xor
mov
add
test
add
inc
add
add
pop
pusha
jmp
pop
add
addb
adc
and
add
add
sub
mov
or
add
inc
mov
inc
ret
or
shlb
add
add
jl
or
push
or
mov
pop
or
enter
add
add
add
mov
and
add
inc
xchg
add
adc
mov
or
push
inc
and
mov
lldt
nop
adc
sbb
and
add
push
pop
xor
mov
sub
add
push
and
and
add
jl
test
sub
cmp
bound
andb
xor
add
subb
es
sub
xchg
add
mov
addl
inc
mov
andl
inc
adc
add
adc
jo
cwtl
orb
or
adc
adc
orl
and
andb
adc
addl
inc
bound
and
add
loop
fadds
adc
add
sub
inc
adcb
addb
sub
adc
test
add
cwtl
add
xchg
and
mov
add
or
lret
inc
add
imul
add
movsb
and
nop
add
push
addb
add
test
add
push
add
xor
inc
add
xor
pop
add
inc
add
add
addl
dec
add
and
adc
inc
adc
adc
ficoml
cwtl
andl
xchg
or
add
addb
adc
addb
sub
add
test
inc
xor
dec
add
and
and
nop
test
or
adc
sbb
xor
xor
addb
sbb
and
or
inc
pop
and
add
call
inc
sbb
add
and
xchg
inc
adc
add
add
dec
adc
inc
mov
and
inc
add
inc
dec
mov
adc
fwait
adc
inc
inc
and
sbbb
inc
and
add
dec
and
je
and
add
push
add
add
inc
and
and
xor
add
add
pop
adc
cltd
addb
loopne
shlb
inc
pop
push
add
adc
inc
sbb
pushf
add
add
add
adc
add
adc
push
adc
and
adc
add
xor
or
and
add
adc
xor
add
inc
dec
and
push
and
or
add
and
popa
xor
or
add
shlb
adc
sbb
xchg
add
mov
add
xor
add
add
and
lea
sub
mov
add
addb
mov
and
andb
add
pop
roll
adc
pusha
or
add
nop
adc
add
add
ret
and
adc
bound
insb
or
add
inc
addb
add
xchg
loope
add
xchg
add
bound
add
adc
sub
push
add
add
add
add
and
add
add
xor
movsb
xor
add
xchg
orl
add
or
xchg
add
adcb
inc
test
add
add
or
pop
or
adc
mov
inc
add
add
and
add
add
mov
movsl
add
and
add
add
inc
bound
add
adc
add
sub
push
addb
pop
sub
bound
push
or
lods
loope
or
inc
or
mov
push
add
and
xorb
add
inc
mov
adc
or
inc
xor
and
dec
add
inc
cmp
orb
pmullw
add
add
nop
addb
pop
mov
cwtl
dec
mov
data16
add
and
adc
add
sub
add
mov
popa
add
push
and
adc
andb
add
and
inc
test
mov
fcomps
inc
pop
add
adc
add
pop
adc
inc
test
and
xchg
pop
roll
dec
add
adc
or
inc
orl
or
add
adcl
and
push
adcb
adc
add
add
addb
add
and
adc
add
adc
push
adc
xchg
inc
add
addb
add
or
sub
pop
es
adc
and
add
mov
adc
adc
or
rolb
add
add
add
cwtl
add
push
add
add
orb
inc
push
and
les
inc
add
add
and
pusha
add
inc
add
adc
add
inc
or
push
add
sbb
mov
add
mov
inc
add
or
push
mov
lea
xor
arpl
jo
enter
cwtl
lds
push
mov
add
add
add
or
add
sbb
addl
xchg
add
orb
add
inc
or
pusha
and
outsb
and
and
add
adc
add
add
sbb
and
mov
adc
nop
and
add
add
add
dec
push
mov
test
inc
add
sbb
add
add
add
sub
nop
addb
inc
push
and
mov
adc
addb
or
shlb
jo
and
add
xchg
pop
mov
inc
jne
addb
add
addl
xor
rclb
or
add
mov
sbb
or
add
adc
add
pop
adc
add
adc
add
inc
push
or
inc
addb
adc
add
or
and
add
shlb
inc
inc
push
add
sub
mov
or
sbb
rcrl
imul
dec
or
mov
push
addb
sbb
mov
orb
xchg
or
and
mov
add
inc
push
inc
mov
add
mov
xchg
add
adc
inc
pop
shlb
add
loope
pop
add
cmpsb
fs
and
mov
add
lret
add
mov
and
add
xchg
stos
inc
add
add
push
pushf
mov
addb
add
mov
add
sub
and
adc
xor
dec
cltd
inc
add
test
add
add
and
add
push
and
xor
adc
add
adc
and
xor
adc
adc
push
or
inc
add
inc
add
xor
add
adc
adc
dec
loopne
add
mov
add
jae
add
add
and
inc
jne
xor
lcall
xor
or
add
adc
andb
or
nop
add
enter
and
push
or
or
nop
add
sbb
add
dec
add
add
test
inc
add
andb
mov
push
add
adc
mov
add
sbb
test
or
adc
xchg
cmpsb
inc
add
jno
lock
and
nop
add
jo
xchg
mov
pusha
add
add
or
addl
add
add
add
add
rolb
inc
add
cwtl
pusha
and
push
addb
nop
ss
xor
add
xchg
adc
add
inc
jge
adc
addb
adc
bound
pusha
adc
xchg
add
add
sbb
add
pusha
inc
add
mov
add
nop
add
sub
les
popa
inc
or
adc
inc
add
sbb
ss
dec
add
inc
sub
fwait
add
add
or
and
inc
roll
sub
add
pusha
add
push
rolb
sub
xor
sbb
push
xor
add
cwtl
adc
add
xor
or
inc
addb
add
xor
pop
and
xor
or
or
or
push
add
dec
add
sub
or
add
or
or
inc
and
nop
pop
add
xchg
test
inc
mov
add
inc
addl
xchg
sub
adc
and
add
and
xchg
add
and
nop
inc
add
push
add
push
or
add
adc
or
adc
add
addl
lea
inc
xchg
insl
add
adc
add
inc
sub
mov
adc
inc
addl
add
adc
add
or
and
orb
test
inc
xchg
and
or
add
and
sbb
add
add
adc
mov
enter
add
rcll
add
add
addb
push
and
les
add
add
add
push
add
add
add
adc
and
xor
add
inc
add
xor
adc
sbb
add
add
add
push
inc
mov
addb
xor
adc
add
cmp
push
and
adc
mov
or
adcb
adc
push
test
cmp
push
and
enter
add
or
adc
pop
add
add
add
inc
jae
add
add
insb
inc
add
and
dec
add
push
and
inc
rolb
mov
add
add
sbb
sbb
adc
orl
rolb
adc
adc
add
or
sub
add
add
sbb
jmp
adc
add
adc
sbb
nop
test
addb
adc
addb
add
mov
adc
subb
test
or
add
or
add
andl
add
or
add
and
add
add
add
add
test
addl
test
into
adc
push
or
add
pusha
add
or
or
sbb
rolb
lret
adc
shrb
les
add
add
nop
sub
sbb
adcb
add
mov
adc
or
inc
add
adc
mov
mov
orb
push
sbb
push
add
cmp
push
shll
sub
nop
bound
add
inc
adc
adc
adc
rcll
add
adcb
dec
mov
xchg
sbb
shlb
push
sub
and
add
mov
add
addb
sbb
xor
add
and
mov
or
add
lock
test
nop
pusha
adcb
xor
add
add
ret
add
add
cmp
mov
and
add
add
and
inc
add
mov
add
rolb
or
shl
xor
and
and
add
das
add
inc
add
dec
adc
or
add
or
add
add
and
add
nop
or
les
adc
and
add
add
add
call
adc
sbb
nop
xchg
orb
add
push
xchg
cmp
dec
and
or
add
adc
and
loopne
add
and
rol
add
xchg
nop
add
push
add
orb
sbb
addb
jo
lds
add
or
inc
mov
inc
add
inc
xor
jo
or
add
rolb
rorb
and
xor
add
inc
add
add
mov
add
adc
and
rclb
xor
add
add
add
add
or
and
les
add
and
add
pop
xor
add
addb
imul
and
rolb
or
adc
jo
rorb
xor
inc
sub
nop
inc
add
push
or
sbb
out
add
addb
inc
sbb
sbb
add
cmp
and
mov
mov
adc
mov
add
add
add
add
adc
movsb
adc
rclb
loope
or
in
pop
add
xorb
orl
push
add
add
nop
add
xor
inc
sbb
inc
add
add
mov
or
lds
add
adc
movsb
lods
sbb
nop
xor
add
xor
adc
add
xor
add
add
and
test
cmp
mov
cwtl
add
add
mov
push
add
push
add
adc
add
mov
adc
adc
add
add
dec
cmp
int3
adc
add
inc
push
add
pusha
and
cmp
add
add
push
add
addb
inc
jae
inc
cmpsb
or
add
or
mov
add
pusha
adcb
add
add
add
mov
sbb
insb
and
add
add
adc
or
add
jo
rolb
xor
mov
and
sub
adc
add
add
add
inc
and
or
mov
mov
lcall
add
inc
add
add
add
add
test
add
mov
add
adc
or
popa
inc
adc
sbb
add
inc
inc
inc
dec
cltd
add
adc
dec
sub
and
xor
push
adc
shll
mov
sub
add
and
loop
inc
push
mov
add
sbb
adc
or
andb
pop
cwtl
add
nop
subb
je
int3
orb
add
push
cmp
and
addb
push
inc
inc
add
add
dec
add
add
inc
and
rorb
pushf
or
adc
inc
addb
dec
addb
movsl
add
nop
adc
pop
push
sbb
rolb
nop
and
les
out
add
inc
add
dec
adc
mov
inc
sbb
inc
inc
inc
adc
adc
sub
adc
orl
add
sub
xor
add
add
add
mov
addb
push
dec
add
nop
xor
and
add
inc
push
pusha
and
and
shll
repnz
add
add
sbb
and
mov
add
cltd
addb
add
or
in
or
sub
and
sbb
xor
cld
add
push
and
add
cltd
mov
add
flds
or
push
add
add
push
add
mov
add
adc
mov
xchg
sub
imul
push
dec
add
add
xchg
add
adc
sbb
dec
add
adc
add
push
add
or
or
sbb
add
mov
sub
inc
add
inc
pop
add
cwtl
add
add
popa
sarb
adc
add
add
pusha
add
pusha
add
ret
inc
bound
or
add
or
push
or
sub
and
add
adc
sbb
nop
inc
mov
mov
push
add
add
add
adc
add
sbbb
shll
or
mov
and
shll
add
add
inc
and
andl
adc
push
addb
push
add
dec
or
add
add
and
or
or
push
adc
add
add
and
add
add
inc
and
adc
pop
pop
or
mov
pop
mov
pop
push
andb
mov
leave
or
cmp
or
add
push
inc
inc
adc
and
add
mov
add
xchg
xorb
nop
inc
adc
addb
cmp
popl
sbb
inc
shlb
add
jb
addb
xchg
push
add
test
orb
add
add
push
leave
enter
add
and
or
stos
addb
add
and
inc
or
add
jo
xor
add
add
andb
add
adc
xor
inc
add
add
adc
or
or
or
pop
add
add
add
bound
sub
fs
sbb
adc
adc
nop
push
add
jecxz
subl
nop
sbb
add
add
mov
cmp
and
int3
repnz
push
xor
cmpb
xor
or
inc
and
push
cwtl
xchg
jo
or
and
or
addl
add
push
xor
addb
js
or
or
sub
mov
inc
pusha
and
ss
xorb
push
sub
add
sub
inc
inc
popa
rolb
adc
add
inc
sub
add
movsb
dec
and
insb
add
or
inc
sbb
addb
add
mov
adc
add
ret
add
and
dec
add
or
xor
adcb
add
add
adc
push
add
adc
or
and
add
xor
mov
sbb
add
cmpb
add
and
adc
aas
push
inc
add
xchg
adc
imul
shlb
add
and
adc
add
add
add
int3
add
add
or
add
inc
add
add
mov
inc
mov
and
add
add
pop
add
xor
adc
add
pusha
adc
and
add
mov
xor
add
and
and
inc
adc
add
adcl
test
mov
dec
inc
add
add
or
push
adc
test
add
add
addb
and
or
addb
add
test
add
xor
rolb
add
add
pusha
and
xor
dec
nop
inc
adc
addb
or
adc
sub
cmp
xchg
and
or
adcb
or
add
cmpb
bound
pop
xorb
mov
nop
add
adc
cltd
push
mov
inc
adc
lea
adc
inc
add
cs
adc
add
push
add
add
cmc
andb
add
mov
mov
push
or
or
add
add
inc
sub
insb
and
pop
and
addb
add
add
addb
inc
add
add
add
and
and
add
and
add
adc
add
add
mov
or
adc
add
mov
movsb
add
shlb
push
push
mov
subb
pop
add
add
add
add
add
xorb
sub
add
add
add
adc
adc
orb
and
push
add
adc
adc
sbb
mov
add
pop
inc
add
push
add
xor
nop
dec
add
adc
add
add
push
inc
addb
inc
add
xor
add
cwtl
xor
rolb
mov
and
bound
inc
addb
inc
inc
dec
inc
adc
je
add
icebp
or
pop
inc
adc
add
addb
adcb
orb
inc
sub
add
xchg
adc
mov
adc
sub
xchg
add
and
inc
push
inc
push
sbb
aam
lea
push
add
and
and
add
and
popa
or
lock
jo
add
or
and
add
add
inc
add
or
dec
inc
push
push
adc
add
xor
dec
add
xor
sbb
addb
add
cmp
mov
and
inc
and
nop
add
pop
addl
add
stos
adc
add
and
or
and
add
add
push
adc
and
add
xor
add
adc
and
add
inc
add
add
add
xor
adc
adcb
dec
mov
inc
add
adc
add
and
inc
int3
mov
add
movsb
pusha
inc
dec
andb
or
adcb
adc
mov
and
inc
inc
addb
sbbl
add
and
sbb
push
inc
add
or
add
nop
inc
push
rolb
inc
add
add
addb
mov
xchg
add
adc
and
sbb
subb
push
mov
and
xor
adc
add
add
scas
add
or
or
and
inc
add
add
add
adc
add
pushf
adc
or
sub
xor
adc
xor
or
ss
adc
inc
add
inc
add
and
push
adc
adc
adc
add
add
movl
add
dec
inc
mov
add
or
sbb
xor
add
add
nop
leave
sbb
or
add
nop
pop
dec
adc
add
addl
jo
and
cmp
int3
add
inc
or
and
nop
inc
add
and
add
adc
add
add
add
add
add
add
and
adc
rolb
or
xor
popa
and
inc
test
adc
xchg
and
loopne
pusha
sbb
add
push
dec
adc
adc
inc
les
test
test
or
add
add
add
and
inc
or
subb
test
and
add
mov
pushf
mov
add
push
add
inc
adc
or
pop
push
add
and
adc
sub
movb
or
loopne
mov
add
or
push
adc
push
inc
or
inc
dec
xchg
addb
add
mov
add
pusha
nop
add
mov
inc
add
and
andl
dec
sbb
adc
add
stc
and
mov
mov
and
adc
and
test
inc
and
adc
sbb
addb
adc
push
push
test
dec
addb
add
cmp
add
add
pop
or
test
add
and
enter
mov
or
push
inc
inc
xchg
test
test
adc
add
xchg
dec
or
and
add
and
mov
sbbb
add
add
and
or
add
add
inc
adc
ret
add
inc
and
inc
add
mov
add
inc
adc
xor
adc
add
jo
xor
sbb
or
adc
sbbb
ljmp
adc
add
fs
add
and
add
add
int3
in
jno
push
cltd
mov
sbb
adc
inc
test
dec
add
sbb
add
xchg
add
add
or
pop
jo
add
adc
add
adc
dec
add
mov
add
dec
sub
inc
sub
adc
sbb
addl
sub
sbb
add
pop
dec
push
inc
sbb
or
sbb
or
adc
add
mov
and
add
dec
or
rolb
add
inc
orb
and
adc
xchg
add
test
jo
xor
ret
popf
sub
sbb
xorw
add
shll
inc
push
sbb
and
pushf
orb
inc
pusha
add
add
xor
adc
adc
sbbb
rolb
and
test
enter
adc
subl
test
add
mov
or
rolb
rolb
add
add
sbb
les
inc
sbb
sub
dec
add
add
and
add
add
adc
add
add
sub
adcl
push
add
movsb
xor
adc
add
add
push
and
add
rolb
pusha
push
and
test
add
adc
and
xor
add
test
add
dec
xor
or
or
loop
and
mov
xor
and
add
ret
inc
mov
pop
pop
addl
inc
dec
mov
and
rcrl
sbb
nop
rolb
add
inc
or
inc
movsb
andl
add
cwtl
adc
fs
adcb
inc
xor
push
dec
inc
enter
sahf
inc
rorb
dec
add
add
addb
addb
add
inc
cs
adc
mov
add
pop
add
dec
jb
add
mov
adc
andb
adc
popa
adc
mov
dec
pusha
and
inc
xor
push
add
inc
or
pop
sbb
and
test
pop
inc
and
or
add
adc
pusha
inc
bound
xor
addb
lods
sbb
add
nop
and
xchg
add
add
add
add
add
push
add
subb
or
or
sbb
add
sbb
or
enter
add
and
adc
inc
add
and
xor
push
push
add
pusha
adc
or
adc
add
or
inc
sub
or
add
add
inc
sbb
sub
and
inc
or
adc
inc
dec
dec
adc
push
leave
add
add
mov
add
inc
nop
daa
push
add
add
add
mov
inc
inc
add
mov
pusha
and
mov
add
loop
inc
or
mov
dec
add
add
add
jo
or
add
add
pusha
dec
add
push
push
popa
addl
add
inc
sbb
lahf
add
add
add
add
and
inc
orb
and
add
push
rclb
add
pusha
add
add
add
add
and
orb
adc
inc
inc
pop
xchg
mov
inc
push
addb
or
addb
addb
or
dec
add
and
sbbb
pop
dec
sbb
add
add
inc
add
push
add
add
nop
inc
add
addb
mov
inc
add
add
addb
inc
adc
inc
xor
or
add
add
or
inc
inc
add
faddl
inc
inc
add
or
mov
add
add
add
and
add
orb
add
add
orb
add
add
add
inc
add
add
add
and
and
add
add
and
or
add
or
inc
add
movsl
scas
addb
add
or
dec
xor
and
add
add
and
add
bndldx
addb
and
int3
or
sub
add
lods
adc
addb
add
add
add
or
sbb
or
add
add
push
add
or
add
or
add
adc
add
add
out
add
add
add
movsl
add
or
or
add
add
xor
add
add
add
adcb
push
or
add
or
mov
add
add
add
rolb
lds
rolb
addb
mov
or
add
dec
add
add
add
add
add
or
add
dec
or
adc
adc
add
add
inc
sub
inc
xchg
and
add
inc
push
add
sbbb
add
and
addb
add
xor
orl
and
adcb
loopne
add
add
add
adc
addb
adc
add
inc
add
inc
sub
add
lea
adc
jmp
add
push
pop
inc
add
xor
inc
add
xorb
inc
addb
pop
inc
add
shlb
add
add
add
add
add
and
or
or
sbb
dec
add
and
adc
add
add
push
or
inc
or
mov
or
inc
or
or
add
test
add
add
or
add
mov
add
add
mov
lret
enter
add
aam
add
cmp
and
add
add
adc
pusha
sub
test
add
add
or
add
popa
and
add
addb
add
inc
inc
add
inc
and
or
mov
xor
add
lret
andb
add
adcb
inc
add
or
inc
dec
push
add
test
inc
add
add
addb
dec
addb
orl
adc
add
inc
add
push
inc
and
js
or
push
inc
add
adc
add
add
inc
add
inc
add
add
test
xchg
add
adc
rol
and
mov
or
add
add
nop
add
sbb
add
fs
xchg
sbb
add
or
push
add
test
add
add
and
or
add
push
add
adc
add
mov
orl
add
and
mov
add
add
or
adc
sbb
addb
adc
and
adc
inc
or
or
sbb
bound
inc
andl
adc
adc
add
les
add
add
add
inc
add
and
loop
add
inc
jo
add
add
add
pusha
xchg
add
inc
dec
add
add
add
add
or
shlb
add
add
rorb
test
add
add
adc
mov
inc
add
add
mov
add
inc
add
and
add
inc
add
add
add
add
adc
adc
adc
add
or
or
inc
add
andb
inc
or
fisttps
adc
or
xorb
inc
cmp
inc
push
push
mov
pop
xchg
add
or
or
and
add
andb
add
or
nop
roll
test
add
loopne
add
add
add
add
inc
or
add
andb
add
inc
mov
and
addb
inc
add
inc
add
add
and
inc
push
dec
add
rolb
add
add
add
or
adc
adc
mov
add
addb
add
inc
add
add
pop
add
and
mov
and
ret
movsb
add
add
adc
add
add
lea
add
xor
add
and
add
bound
xor
and
add
addb
or
add
sbbb
add
add
or
inc
add
dec
arpl
add
bound
and
and
add
shll
adc
or
add
add
mov
and
popa
loopne
adc
sub
or
add
add
add
add
pusha
and
test
add
add
add
adc
add
adc
pop
inc
inc
or
add
and
loopne
arpl
add
or
add
test
and
add
and
adc
add
dec
push
add
and
inc
adc
xchg
add
mov
inc
sbb
inc
add
into
add
dec
loopne
inc
add
add
push
inc
xor
add
add
add
or
nop
mov
add
add
adc
mov
and
and
add
add
add
add
add
addb
add
mov
add
mov
pusha
and
adc
jo
stos
add
mov
mov
add
add
daa
add
add
add
adcl
add
or
or
add
addl
inc
add
inc
add
addb
nop
and
add
sub
adc
inc
inc
add
add
inc
add
test
add
inc
addb
mov
sub
add
add
add
push
add
dec
add
les
adc
push
add
add
inc
sub
and
add
and
add
lret
add
and
sbbl
or
add
add
orl
addb
add
adc
add
sbb
or
add
inc
lock
add
add
or
test
add
cmp
push
inc
inc
and
xchg
add
push
or
pop
add
inc
add
lods
add
stos
or
nop
add
sub
push
inc
push
mov
mov
inc
and
and
and
add
es
add
pop
and
add
addb
add
and
add
and
add
and
adc
or
or
add
and
and
in
push
add
add
add
inc
inc
add
adc
add
or
push
add
or
inc
andl
add
adc
mov
roll
add
or
adc
sub
add
add
inc
add
add
add
adc
inc
adc
add
addb
and
inc
loopne
adc
add
add
add
add
dec
add
or
inc
add
or
push
or
addb
add
xor
or
inc
add
or
push
add
add
mov
add
inc
add
dec
push
add
orb
adc
add
add
add
add
and
inc
and
add
inc
popf
adcl
add
add
adcb
inc
adc
add
sbb
and
adcb
add
pusha
add
dec
movb
and
add
add
add
sub
inc
add
add
add
add
lock
loope
inc
mov
add
inc
roll
add
add
inc
pusha
add
adc
mov
ljmp
add
add
adc
inc
fcoms
add
mov
add
or
add
adc
les
adc
adc
add
adc
add
inc
inc
inc
js
addl
mov
add
movsb
add
and
and
xor
and
pushf
add
xchg
add
push
or
nop
ret
and
add
add
and
or
add
add
add
add
add
push
adc
add
add
or
add
jb
add
add
inc
popa
or
xchg
add
loope
shlb
add
add
addb
push
inc
mov
or
add
or
pop
add
dec
and
add
add
mov
adc
nop
and
add
add
mov
add
or
pusha
mov
adc
add
adc
add
and
bound
enter
add
add
adc
and
adc
add
orb
mov
add
add
in
inc
push
push
xor
add
add
test
or
sub
adc
sub
inc
daa
pop
add
add
add
inc
add
or
mov
cmp
or
add
add
add
add
add
incb
add
data16
out
rorb
pusha
dec
mov
rolb
inc
adcb
xor
xchg
add
add
and
xor
and
or
inc
add
pusha
add
pusha
nop
or
loopne
add
add
inc
add
inc
add
add
add
add
cmp
sub
or
adc
add
mov
or
sbb
add
add
inc
sub
or
and
push
add
adc
add
add
inc
add
adc
addb
add
and
add
add
and
or
inc
addl
add
sub
inc
inc
xorb
add
adc
add
add
addb
inc
add
mov
sbbb
rclb
popa
and
adc
add
add
sbb
adc
add
push
adc
and
adc
add
inc
xor
add
jo
or
adc
add
xor
adc
addb
push
adc
add
add
cwtl
add
nop
add
adc
add
add
xor
xor
and
mov
or
push
adc
andl
and
add
adc
add
add
or
mov
push
xchg
inc
add
adc
add
add
inc
add
mov
inc
add
popa
add
addb
add
add
test
or
add
add
addb
add
push
mov
addl
inc
adc
or
adc
add
add
or
add
add
or
pop
int3
or
inc
add
or
push
add
add
add
dec
rol
add
mov
inc
orb
push
loope
ret
mov
add
imul
push
mov
xchg
and
add
xchg
add
add
adc
add
dec
inc
add
add
adc
inc
add
add
pop
mov
popa
and
sbb
sbb
adc
nop
add
add
in
adc
inc
push
adc
add
add
mov
add
pusha
addb
addb
add
add
or
add
dec
add
add
adcb
enter
or
adc
add
add
es
test
add
or
and
add
add
add
add
add
test
add
or
add
nop
loopne
add
addl
add
push
push
add
rolb
inc
add
sbb
or
add
addb
add
ret
inc
add
rolb
add
inc
or
push
shll
adc
lock
inc
add
add
and
adcb
enter
inc
add
add
cmpsb
add
add
add
or
mov
and
add
push
add
push
adc
and
dec
sbb
or
push
add
add
rolb
and
add
inc
rolb
ret
inc
add
adc
movsb
add
and
sbb
inc
rolb
inc
add
add
add
adc
inc
inc
and
add
or
nop
adc
add
rolb
add
inc
test
sub
inc
popa
add
or
inc
add
add
dec
adc
adc
add
adcb
dec
mov
add
loopne
sub
push
adc
inc
add
add
add
add
push
add
add
add
add
add
xor
add
or
inc
loopne
add
add
add
mov
add
adc
add
and
add
adc
add
add
addb
mov
add
dec
gs
test
adc
add
dec
add
add
add
inc
jb
add
popa
add
mov
pusha
stos
rolb
imul
add
add
add
adc
inc
inc
xor
add
addb
push
addb
rolb
add
bound
and
addb
and
add
or
inc
add
addb
and
mov
add
rolb
add
push
add
inc
bound
add
add
inc
sub
inc
cmpl
xor
inc
adc
inc
add
add
add
add
and
add
add
inc
mov
add
add
or
add
add
and
adc
add
add
add
rolb
or
xor
push
loop
add
inc
mov
les
add
add
aad
sub
std
ja
mov
or
cld
sub
out
mov
xlat
aad
jecxz
movsl
lret
ds
aas
mov
pop
xchg
push
clc
aaa
pop
mov
sub
push
fisttpll
cmpsl
or
mov
or
outsb
jmp
pusha
aaa
mov
cmp
aaa
lcall
push
push
dec
jb
push
dec
ret
mov
jmp
aam
push
push
icebp
aas
imul
cmp
cld
shr
fisttpl
lods
lea
sbbb
pop
cli
mov
pusha
add
inc
leave
dec
lret
aaa
and
call
and
inc
lcall
inc
pop
push
inc
sbb
fmul
lods
subl
test
pushf
loopne
loope
iret
mov
test
pop
enter
push
mov
sbb
data16
lods
dec
pop
mov
ret
enter
jp
ficoml
daa
dec
pop
les
shl
cmp
lahf
jmp
das
push
fdivrl
cmp
xchg
push
cmpl
int3
bndldx
pop
pushf
filds
cli
and
bound
movsl
add
xor
and
fstpt
pop
and
bound
pop
xor
and
addr16
and
pop
jno
ds
inc
pop
pop
fnstsw
add
dec
pop
push
lds
pop
dec
fistpll
stos
les
testl
fdivrl
inc
sbbb
aaa
lcall
test
and
es
aaa
or
dec
inc
mov
fistpl
aas
lea
sbbl
lods
scas
add
push
es
fdivrl
aaa
cltd
fdivl
pop
ret
pop
mov
pop
cli
mov
pusha
add
cmpl
fsubrl
outsl
out
mov
loop
das
rcr
and
mov
fcmovu
cwtl
lock
cmp
dec
fcmovu
movb
ds
jmp
ds
in
or
sarl
cltd
xorw
nop
decb
fmul
mov
push
imul
cltd
mov
jge
cltd
nop
sbb
fcoml
aaa
aad
pop
dec
fcmovu
dec
mov
cltd
nop
and
fsubl
repz
in
cltd
fadd
jl
call
inc
aaa
lcall
xor
jg
jge
test
fmull
aaa
cltd
sbb
and
add
aaa
lcall
icebp
fdivrl
test
pmulhw
mov
loopne
jae
push
jp
and
and
ret
inc
adc
mov
mov
add
xor
pop
in
lods
mov
cmp
sbb
sub
loop
mul
inc
xchg
jmp
andb
mov
mov
pop
pop
in
mov
mov
and
movsb
xor
and
mov
pop
dec
ret
inc
lods
mov
mov
xchg
sbb
fdivl
mov
cltd
fmul
ret
cmp
rcrb
fnstsw
ret
dec
sub
mov
out
pop
inc
fidivrl
inc
lock
lret
hlt
pop
sbb
rclb
push
jb
push
mov
sub
popf
push
inc
cmp
in
inc
pop
push
pop
inc
push
int
test
ficompl
xchg
inc
cmp
sahf
xchg
fdivrl
mov
and
in
xchg
pop
xchg
imul
movsb
inc
push
inc
push
aaa
or
shl
fnstsw
ret
inc
ljmp
inc
mov
mov
sbb
shlb
inc
jmp
inc
mov
fdivrl
dec
sarb
inc
mov
popf
pop
loop
lcall
ret
cmp
ljmp
inc
ret
push
mov
mov
aaa
and
addr16
adc
cmp
pushf
fdivrl
ret
ds
lcall
inc
nop
push
push
in
pushf
mov
cli
inc
mov
cltd
lods
lahf
and
fdivrl
ja
xchg
xor
ljmp
jg
push
xor
leave
mov
sub
loop
movb
cmp
dec
lcall
aaa
lcall
aaa
lcall
aaa
add
movsl
add
in
bound
fcmovnu
cmp
rcr
mov
sbb
add
in
ds
mov
fdivp
inc
addr16
cmc
sub
pop
dec
mov
inc
mov
or
scas
cmpsb
add
movsl
fdivrs
push
cld
inc
popf
aad
pushf
outsb
mov
xchg
dec
inc
cmpsb
incb
inc
lods
out
iret
ficoms
cmp
in
mov
cmp
and
sbb
inc
lahf
add
jl
pop
pop
mov
scas
push
jne
pop
test
in
imul
int
mov
xor
movsl
cwtl
and
jl
in
pusha
mov
mov
or
fnstsw
dec
rclb
sbb
inc
int
dec
daa
dec
xor
add
add
stos
into
insb
inc
cmpl
das
inc
imul
mov
jge
sbb
push
and
cs
mov
repnz
xor
sbb
push
fscale
ds
out
sub
adc
and
push
or
pop
mov
xchg
dec
or
add
aaa
mov
mov
in
ds
data16
pushf
inc
jns
mov
ja
fldenv
js
lods
scas
pop
loop
std
inc
dec
lret
cmp
cmp
fstpl
addr16
and
mov
mov
pusha
sbb
push
test
xchg
outsl
xlat
or
aas
fwait
push
inc
das
sbb
cmp
xchg
cmc
pop
into
repz
mov
call
jb
add
inc
sbb
xchg
ja
fisttpl
jge
negl
pop
aaa
and
test
mov
fcompl
ds
xchg
int3
sbb
negl
lahf
mov
cld
lea
push
jmp
mov
test
mov
jmp
je
sub
aaa
psllw
mov
inc
gs
sbb
rol
jb
notl
lock
inc
jne
call
leave
mov
std
repnz
pop
frstor
inc
cmp
stos
lahf
add
cltd
dec
inc
orb
mov
cs
cmpsb
mov
push
icebp
test
pop
repnz
xchg
cmp
fdivl
shr
inc
outsl
stc
subl
push
sub
or
lods
mov
add
lcall
ficoms
arpl
fwait
push
loopne,pt
daa
cmp
divl
test
pop
sbb
and
lret
pop
mov
pusha
mov
or
inc
cmp
sbb
cmp
lds
cmp
adcb
fnsave
lahf
and
or
gs
ret
insb
icebp
repz
insl
mov
and
jo,pt
dec
lds
push
jnp
ja
ds
xor
jle
out
mov
gs
dec
mov
inc
mov
cmp
and
sbb
ss
sbb
mov
js
call
cmpsb
sub
cli
pop
xchg
push
bnd
jae
loopne
push
or
jge
out
cmp
mov
or
cli
pop
shrl
dec
lcall
stos
push
loopne
xor
ds
das
aas
sahf
xchg
add
inc
adc
pop
cmp
lods
rol
stc
sub
mov
jge
pop
pop
fnstsw
pop
mov
fsubp
popa
jmp
inc
js
int3
dec
shll
lods
mov
xchg
stc
and
and
inc
cltd
loop
ret
data16
inc
and
jo
pop
in
push
jle
inc
popf
popf
loopne
ss
rclb
ja
in
nop
xchg
push
aaa
mov
cld
adc
loope
ret
notl
out
jg
lea
xor
pop
xchg
aad
push
jo
popa
aaa
or
add
out
xchg
mov
sbb
cmc
leave
scas
cmp
lea
rdpmc
sub
mov
inc
dec
adc
pop
and
loopne
lods
stos
std
testl
ja
pusha
fnstsw
lahf
addr16
test
dec
cs
mov
data16
mov
xor
dec
dec
inc
or
mov
cmp
pop
aas
lods
mov
pop
mov
cmp
xor
aad
ja
arpl
int
out
inc
lods
movsl
leave
sahf
mov
in
inc
sbb
xor
stc
std
cmp
add
imul
and
ffree
mov
fdivrs
fcoml
jp
push
pop
ja
orps
mov
gs
dec
push
fnstcw
lods
push
adc
sbb
adc
xchg
and
lds
fisttpl
mov
pusha
push
or
push
popf
dec
push
stc
mov
and
xor
xor
insb
cmp
lods
test
inc
mov
push
inc
inc
dec
xchg
or
adc
pushf
xor
sub
popf
call
pop
or
fst
mov
jecxz
ret
ds
addr16
push
fs
inc
aas
pop
jne
lcall
ss
fsubr
sbb
add
test
js
mov
sahf
inc
mov
in
sahf
aaa
or
dec
inc
pop
lcall
cmp
lcall
addr16
pushf
xor
movsb
js
and
inc
inc
fwait
pop
in
and
dec
aas
aaa
in
sub
and
cmp
stc
cmpsb
adc
push
vpcmpeqd
pop
pop
cs
lcall
mov
cmpsb
cmp
repnz
hlt
dec
dec
inc
add
mov
cs
pop
insl
out
ret
daa
mov
fdivl
gs
cmc
push
lcall
popf
je
mov
fistps
jmp
push
sbb
xor
pop
pop
fwait
cmp
repz
out
fcomp
pop
jecxz
dec
pop
in
sar
subps
sarb
or
in
add
pop
inc
or
xor
sahf
push
jne
scas
aas
aas
daa
sub
cmp
push
mov
fnstsw
stos
gs
movsb
cmp
ja
mov
cmpsl
xor
pop
ds
ljmp
aaa
or
ret
pop
mov
jae
pushl
es
mov
scas
lcall
and
ljmp
repz
leave
sbb
clc
pop
adc
mov
mov
mov
insb
lcall
in
adc
sbb
inc
stos
test
inc
push
sub
scas
roll
push
jmp
mov
pop
jbe
lret
mov
pop
imul
jnp
mov
daa
out
or
sbb
aaa
or
jp
mov
loope
or
leave
mov
inc
or
mov
cmp
mov
lahf
and
fistpll
cmp
fucomp
cmp
mov
fisubl
push
das
pushf
test
fstl
mov
pushf
mov
inc
add
in
popf
and
andl
outsl
cmp
xor
aad
mov
mov
cs
aaa
in
xor
ja
sbb
iret
inc
out
aas
int3
and
mov
mulb
std
inc
jnp,pt
inc
in
mov
aaa
sub
xchg
out
test
imul
pushf
push
jmp
leave
mov
in
lahf
jbe
cmpsb
mov
in
lcall
pop
mov
in
cmp
repz
movsb
mov
and
call
ds
mov
mov
clc
fistpl
mov
fbld
dec
fildl
dec
sbb
inc
push
pusha
push
mov
mov
or
rcrb
xchg
sbb
inc
sub
outsb
mov
dec
test
aas
push
adc
lea
pop
push
mov
daa
push
mov
shll
adc
push
fimull
test
mov
pushf
xchg
push
push
addb
out
sbb
push
adc
push
sti
pusha
adc
xchg
lcall
mov
stos
sbb
pop
jno
scas
mov
loope
insb
mov
mov
push
push
push
enter
movsl
jbe
mov
ret
movsb
inc
mov
sub
push
sbb
jle
pop
testl
mov
rcrl
out
aaa
xlat
mov
cmp
cmc
push
lds
in
cld
popf
aad
dec
aaa
or
mov
jns
sbb
inc
sbb
lahf
pop
int3
mov
cld
enter
stc
lcall
aas
popf
cltd
pop
push
adc
jb
ds
std
jns
dec
lds
cmp
push
inc
mov
sbb
stos
mov
inc
aam
lds
mov
cli
movsb
push
cmpsb
cmp
or
pop
pop
in
scas
mov
mov
push
or
daa
xor
cmp
pushf
ljmp
cltd
lods
push
iret
inc
adc
lea
cld
mov
es
jns
jmp
les
ss
sbb
or
jne
xchg
cmp
icebp
movsl
and
fistpll
jp
das
dec
cmp
or
pop
inc
cmp
and
cs
cli
rcrb
ja
mov
pop
mov
push
pop
fcmovb
stos
fmull
lods
adcl
push
sbb
sub
or
inc
nop
mov
xor
ljmp
jno
mov
xor
das
sbb
mov
dec
popf
test
jge
xchg
push
bound
iret
push
xchg
daa
lcall
mov
int3
mov
jg
test
sub
jmp
xor
enter
cmp
insb
fildl
push
fstl
in
lods
and
cmp
test
sbb
push
loopne
cmc
mov
pop
cmc
lcall
add
cmp
es
push
inc
mov
and
cs
pmaxub
add
pop
test
sbb
jp
je
stc
leave
repz
cmp
test
cld
sbb
js
ds
popa
mov
mov
xchg
jmp
arpl
dec
test
mov
test
adc
jmp
popa
mov
sub
push
push
in
adc
and
and
adc
loop
ret
xchg
jp
xchg
inc
jl
inc
lea
pop
push
jbe
aaa
pop
or
sub
fstpl
cwtl
mov
pushf
in
mov
outsb
or
push
ffree
cmp
addr16
pop
pop
mov
bnd
stos
adc
jo
pop
xchg
ds
aam
cmp
jecxz
sarl
dec
data16
push
lcall
std
push
fstpl
test
fists
mov
cmp
sbb
push
jp
scas
test
enter
insb
mulb
cwtl
out
lcall
xchg
stos
fdiv
and
add
xchg
cmpsl
mov
fcompl
push
aad
mov
out
pop
addr16
lcall
push
dec
pusha
add
mov
pop
mov
sti
imul
dec
aam
repnz
push
call
call
shl
lret
sub
push
in
fnstsw
sub
push
rorl
xor
aas
and
ret
notl
insl
ja
jp
mov
jg
mov
negb
insl
xchg
data16
pop
ljmp
mov
mov
cmpsl
mov
int3
aad
stos
stc
lea
lock
jns
lcall
outsl
mov
xor
sbb
int
cmp
iret
scas
int
xchg
push
xor
in
lods
out
xor
xchg
lcall
setl
xor
xor
insb
test
pushf
aas
ljmp
shll
loopne
imul
mov
mov
mov
fisubs
mov
rorb
addr16
mov
fimuls
add
cmpsl
xchg
mov
mov
jecxz
ficompl
leave
mov
aaa
wrmsr
or
sbb
ret
lcall
imul
push
mov
enter
mov
ljmp
scas
push
test
jmp
shrl
sub
cmp
add
cmp
xchg
cmpsb
xor
bound
cmp
ja
add
inc
lret
jbe
add
popf
scas
jno
repz
push
fstl
pop
xchg
mov
lcall
test
in
idivl
lcall
mov
call
ds
pop
fistpl
xchg
cmp
pushf
cmp
shlb
aam
pop
inc
dec
xlat
jnp
mov
frstor
mov
bnd
pop
insb
pop
cmp
mov
add
addr16
inc
dec
in
lcall
push
iret
les
js
int3
ja
ljmp
xchg
lock
pushf
popa
push
push
fs
push
notb
mov
lcall
js
in
xlat
shlb
inc
or
mov
scas
mov
gs
cmp
pop
retw
push
ds
fcoms
push
les
lret
lcall
cmp
call
add
in
fcoms
sub
test
mov
mov
sti
or
cs
jne
mov
stc
loop
cmp
shr
jp
ds
push
pop
test
fdivrp
repz
test
ljmp
dec
pop
lahf
sub
call
mov
int
decb
pop
fistpll
add
fisubs
scas
ficompl
out
lcall
popl
lret
dec
mov
jl
lea
sbb
inc
xchg
mov
ret
dec
stc
xchg
andb
lret
lcall
jae
fdivl
jns
sub
mov
ds
mov
in
aaa
fwait
and
lret
loopne
pop
add
leave
xchg
lock
aaa
xchg
in
ret
lret
out
mov
and
push
cmp
ds
aad
jmp
inc
shl
lret
in
test
jle
jns
sar
jne
pushl
mov
xchg
ja
das
into
notl
in
pop
mov
shrl
bound
cmpb
xor
mov
test
xor
adc
cld
call
dec
stos
sub
and
sbb
test
fstps
icebp
je
aaa
inc
cmp
xchg
arpl
shlb
add
cmc
imul
inc
push
add
adc
add
push
aaa
js
insl
in
mov
pop
jo
add
fbld
mov
xchg
dec
loop
mov
sub
ss
inc
xlat
add
add
dec
jno
pop
bound
fstpl
cltd
sub
popa
iret
inc
fidivl
sbb
pop
fstpl
sbb
cmp
jno
in
aaa
sarl
mov
lcall
mov
lret
xchg
loopne
js
in
pop
mov
pop
mov
stos
mov
mov
negl
sti
pop
pop
mov
cmpsb
lcall
ror
mov
and
ret
mov
cmc
cmp
xchg
cmp
cmp
push
mov
cmp
enter
inc
enter
aam
loop
cs
sbb
ss
mov
inc
cmove
in
cmp
add
jecxz
popf
cs
aaa
loope
iret
add
push
aaa
mov
mov
add
in
fbld
pop
pop
test
test
jo
and
addr16
jmp
or
lcall
mov
sti
call
ds
out
mov
add
pushf
jle
jb
inc
mov
pop
pop
imul
je
aaa
and
dec
pusha
dec
xor
nop
lcall
inc
in
dec
jns
and
lock
in
adc
cwtl
jno
loop
pusha
push
aam
mov
lcall
mov
sbb
fstpt
or
xchg
jmp
cmp
mov
jne
jge
rcrb
adc
stos
mov
mov
insb
ret
cmpl
inc
lcall
jp
mov
jge
mov
push
in
jl
fisubrs
jge
rcr
lds
xchg
mov
pop
sbb
aas
sbb
mov
in
jne
stc
xor
add
mov
pop
imul
or
ret
mov
and
jbe
scas
fistpll
ljmp
inc
adc
jbe
mov
ja
gs
call
xlat
fsub
out
xchg
xor
fdivl
mov
lahf
inc
stos
xlat
lcall
cmp
xchg
aaa
gs
inc
mov
mov
sub
addr16
jb
fidivrl
dec
add
lcall
dec
inc
incb
mov
mov
dec
and
jnp
ret
pop
sarl
jns
add
mov
mov
mov
adcl
rcr
dec
out
ficoms
inc
sub
add
adc
jns
lea
mov
pusha
lcall
mov
fdivrl
scas
les
sbb
cmp
int3
cmpl
dec
inc
cwtl
dec
and
sub
mov
aaa
pop
jge
std
pop
mov
loope
mov
cli
les
bound
sti
lods
out
adc
insl
mov
lods
jae
cwtl
aas
ja
jno
stos
and
inc
fsubl
dec
sub
pop
pop
daa
push
addr16
fistpll
xchg
and
lea
aaa
int3
cmpsl
lods
idivl
sahf
inc
aaa
mov
push
addr16
lods
mov
sub
rcrl
inc
adc
and
sbb
jns
mov
add
jae
pop
lret
sahf
mov
aaa
xchg
mov
sbb
rol
jno
lods
sbb
cmp
aad
imul
xor
mov
loopne
hlt
push
mov
incl
int3
lret
xchg
sbb
andb
pusha
cmp
and
push
stos
cmp
ja
pushf
dec
daa
aam
js
mov
sarb
pusha
cmc
adc
scas
data16
dec
sti
aad
jns
popf
fdivl
jmp
insl
mov
loopne
and
lahf
xor
cmpsl
loope
shlb
mov
sub
das
mov
mov
mov
lret
mov
cwtl
xchg
mov
push
call
or
push
ror
mov
pop
insl
ss
xor
sub
mov
data16
xor
mov
ds
test
push
or
testl
mov
decb
push
scas
sahf
pop
and
enter
vcmpeq_osss
pushf
push
aad
hlt
mov
fimuls
dec
insb
and
pop
popa
mull
sub
mov
mov
adcl
xor
cmp
or
cwtl
stos
rol
pop
or
ds
lret
stos
mov
js
jb
push
pop
and
dec
pop
repnz
arpl
sub
test
mov
fisttpll
lods
jmp
sub
mov
add
jl
mull
mov
data16
mov
aaa
mov
lahf
cmp
cmp
jb
sbb
ds
sub
cltd
mov
movsb
imul
vpsubusb
lods
push
movl
ret
mov
inc
out
mov
adc
in
cwtl
pop
mov
inc
dec
adc
lcall
jecxz
fcompl
popf
icebp
hlt
in
rcrb
and
push
pusha
sbb
fcompl
xlat
jge
dec
out
dec
cmc
pop
cwtl
dec
or
inc
xchg
call
pop
ds
cmpsb
xchg
fidivrl
sbb
dec
aaa
or
cmp
add
cs
ss
leave
sub
ud0
lcall
loopne
fsubrl
aad
mov
add
inc
jae
mov
jp
call
mov
cmpsb
movsb
push
lahf
or
push
push
fsubs
xor
stc
ret
popf
pushf
dec
outsl
push
pop
xor
insb
ds
shr
mov
jae
pop
mov
daa
leave
scas
adc
sbb
fsub
mov
idivb
jne
pop
data16
lock
roll
mov
push
inc
lret
imul
ds
mov
mov
adcb
aas
lea
fsub
dec
sbb
mov
xchg
mov
ds
test
dec
scas
mov
xchg
adc
in
xchg
mov
shrl
out
push
scas
and
fcoml
sarb
clc
rcr
dec
lahf
pop
out
aaa
and
adc
lea
dec
loop
cli
push
cmpsl
adc
cmp
bound
rcll
lcall
xchg
sbb
jnp
outsl
xchg
cs
cmp
mov
dec
ret
lods
mov
mov
jl
inc
adc
lds
das
lret
mov
mov
shlb
add
stos
push
int
dec
add
dec
inc
inc
aad
dec
cmc
mov
or
dec
ds
shrb
inc
jp
scas
test
inc
in
jl
loopne
jae
nop
movsl
sbb
or
xor
dec
jle
nop
bound
add
stos
iret
cwtl
pop
cmp
lock
cli
or
aas
push
adc
mov
jge
mov
mov
dec
cmp
mov
outsl
dec
aad
lods
stos
fwait
fs
icebp
xchg
xchg
in
in
jns
adc
add
adc
lret
dec
out
ljmp
or
out
jnp
test
cld
jecxz
lcall
stos
arpl
fnstcw
cltd
pushf
out
movsb
outsl
and
and
lock
int3
cmpsb
fdivl
mov
inc
stos
inc
movsb
lods
and
inc
pop
add
loop
call
jb,pt
push
dec
pusha
fs
aaa
negl
mov
aam
call
push
in
shll
inc
xlat
mov
cmp
sbb
cltd
sub
sbb
in
leave
pusha
inc
xor
xor
fcompl
mov
mov
jbe
sbb
jne
cld
loopne
xchg
pop
imul
stc
aam
out
jns
mov
lcall
fsts
clc
mov
adc
dec
mov
sub
mov
ds
xchg
inc
stc
daa
sbb
mov
inc
pushf
mov
cmp
jmp
dec
inc
pop
add
push
clc
mov
dec
shrb
aaa
push
gs
loop
scas
xlat
dec
dec
pop
xchg
cmp
test
fldenv
daa
sbb
xorl
ds
xchg
test
rcrb
fsubs
movsb
imul
xor
in
dec
fwait
mov
fs
xchg
cmp
xchg
aad
jns
icebp
addr16
push
and
mov
adc
push
pop
iret
inc
hlt
sbb
xchg
pushf
dec
mov
mov
dec
stos
lods
fbstp
aad
sub
cmp
cmp
cmp
push
pop
aaa
sbb
in
shll
and
dec
mov
loopne
stos
dec
mul
daa
shrl
sarb
in
dec
cli
sbb
aaa
push
out
sbb
pop
mov
mov
jnp
fsubrs
cltd
mov
out
lds
cmp
ja
push
movhps
aaa
jp
pop
xor
push
push
pop
lcall
push
jg
fdivrl
sarl
loop
pop
hlt
and
scas
lcall
cltd
jp
fwait
lcall
xchg
mov
xor
jno,pn
or
dec
int3
bound
push
add
jle
imull
dec
inc
mov
pusha
or
lahf
hlt
jno,pn
dec
dec
and
pop
mov
fmull
fnsave
pushf
add
lahf
loopne
dec
pop
or
rcrb
mov
shll
mov
adc
sub
mov
push
mov
movsl
pop
cmp
or
scas
aas
lcall
bound
sub
and
sub
add
jle
fwait
leave
ds
mov
dec
scas
mov
lcall
inc
ja
pop
mov
faddl
fnstenv
sbb
mov
inc
fst
dec
mov
fisttpll
ret
push
lahf
pop
sbb
push
lea
jno
stos
xchg
es
pop
inc
in
rcrl
out
jno
int
shrl
ret
and
dec
je
clc
mov
push
pop
sbb
out
push
aaa
pusha
dec
mov
mov
js
dec
outsb
mov
mov
fidivrs
cmpsb
fdivl
lea
jecxz
xlat
lock
faddl
mov
in
mov
lcall
cmp
loopne
nop
mov
mov
lcall
xchg
mov
dec
mov
pop
fldl
jmp
popf
xchg
pop
adcl
leave
test
pop
jge
cmp
jb
fnstsw
in
rclb
add
xchg
dec
sub
xchg
test
ss
sti
adc
dec
mov
testl
popa
mov
or
push
jl
fwait
inc
mov
mov
inc
push
sub
pushf
fwait
popa
sub
cmp
adc
mov
ds
in
xorl
sub
jp
mov
dec
xchg
notl
mov
cmp
pusha
data16
jb
cld
adc
lock
xchg
xor
push
jne
cld
imul
in
sarl
cmpsl
inc
pop
cmp
aaa
repz
mov
popf
push
pop
mov
ja
pop
cmp
or
insb
daa
xchg
lea
push
mov
mov
data16
mov
xchg
ds
push
mov
or
cmp
pop
cmc
xchg
sbb
jp
jmp
push
das
popf
aas
outsb
into
popf
ds
ficomps
das
push
adc
push
cmc
fistpl
adc
ds
pop
jne
punpckhbw
jbe
js
out
inc
vcvtdq2ps
in
push
cli
pop
gs
jle
cltd
out
and
and
aaa
adc
pushf
and
dec
fcoml
andl
push
lods
rcrl
jg
lods
pop
xor
jecxz
pop
cmp
pushf
out
mov
inc
pop
xor
cmp
mov
cmp
mov
push
mov
fimull
xor
cmp
in
add
shlb
mov
or
mov
mov
xor
movsb
and
dec
inc
enter
lcall
fimull
fldl
fcomps
jno
push
repnz
fs
fmull
mov
jmp
cmpsl
jmp
andb
and
pop
xor
push
aaa
loopne
push
mov
pop
jb
mov
push
into
push
rorb
sbb
dec
in
cmp
adc
sub
add
rclb
push
scas
add
lock
jmp
or
test
ds
mov
push
arpl
add
jl
cmpsl
jo
sub
jmp
mov
add
clc
pop
loop
ficomps
cmp
jb
dec
aam
mov
xorb
sbb
xor
clc
mov
cmp
dec
ds
int3
add
pop
lods
adcl
pop
pop
lgs
or
in
sub
ret
xchg
idivl
mov
and
xchg
test
sbb
sbb
lock
ljmp
mov
int
fsubl
adc
lcall
std
xchg
outsl
cmp
push
sub
fs
lcall
adc
add
ds
scas
fcoms
ss
jecxz
icebp
dec
negl
cmp
jb
push
or
push
ss
pop
mov
ds
xor
mov
cmp
push
scas
jo
push
dec
xor
and
sbb
fmull
fdivrl
int
hlt
and
ret
push
shll
dec
jle
mov
jnp
popf
cmp
push
cmp
push
xor
lcall
addr16
mov
lret
sbb
jno
jle
mov
bound
or
sbb
sub
pop
gs
push
push
xchg
in
lcall
jg
cli
jno
jmp
xor
mov
xor
push
je
jb
cmp
mov
or
fs
mov
sub
lds
cmpl
mull
push
push
out
xchg
fistps
sub
pop
sahf
sbb
out
push
dec
pop
mov
lock
ds
sbb
mov
mov
sbb
mov
out
sbb
ds
sub
add
stos
sub
dec
sahf
in
or
fadd
aaa
aas
int
cld
dec
mov
mov
out
loope
enter
lds
repz
icebp
aaa
insl
std
xor
test
mov
inc
iret
xchg
test
fdivl
repz
inc
xchg
test
dec
xor
fwait
add
in
xchg
nop
ffree
add
in
push
mov
loopne
js
fcmovu
in
lahf
xchg
dec
xor
mov
jae
cmp
lcall
or
out
in
inc
inc
cmp
out
jmp
and
pop
adc
push
aas
fisttpll
ljmp
ds
addr16
jp
push
mov
adc
test
into
mov
mov
sarb
les
out
push
jge
mov
aaa
ljmp
pop
mov
inc
xchg
imul
dec
push
ficomps
ja,pt
inc
mov
pop
shlb
pushf
jb
pop
out
faddp
cli
sti
add
call
xor
insb
push
repz
and
dec
mov
das
repz
in
test
divl
test
pop
lds
dec
jmp
jo
mov
sub
or
ds
out
lods
fmul
pop
rcr
clc
hlt
push
adc
jp
mov
jb
and
fdivl
inc
xchg
ds
jp
int3
rclb
gs
dec
xlat
popf
out
adc
lods
adc
clc
mov
xchg
dec
jp
popa
and
and
pop
push
mov
mov
pop
mov
mov
mov
fldl
fcmovb
xlat
push
mov
xchg
mov
imul
mov
dec
mov
push
aam
cmpsb
enter
lcall
aaa
xchg
out
sub
jl
adc
mov
je
pusha
int3
std
ret
jl
cs
std
push
and
sub
xadd
and
pop
outsb
and
enterw
out
rcl
cmpb
mov
rorb
inc
sbb
push
pop
data16
pop
pop
push
fnstsw
out
pusha
pop
lds
cmc
dec
push
pop
lea
pop
ret
or
jne
push
jecxz
pop
aam
mov
out
xor
cmp
rcll
pushf
inc
dec
lahf
in
adcb
leave
mov
out
adc
mov
xchg
push
notb
out
ret
sbb
in
add
test
ds
lcall
nop
in
dec
and
dec
mov
ret
sti
mov
in
les
mov
mov
cmpsl
mov
mov
loopne
lcall
push
mov
pop
add
lods
lcall
jmp
pop
in
xchg
jb
js
stc
fdivl
jb
fldl
push
fdivrs
jp
pop
idivl
jns
arpl
gs
dec
ljmp
lock
mov
mov
sbb
xor
mov
cmp
les
sbb
sbbl
mov
mov
scas
inc
xchg
stos
mov
dec
cli
enter
dec
sahf
lcall
cmp
fdivl
rcr
sbbb
sub
enter
jl
aam
sub
cwtl
out
mov
jl
pop
xor
xor
leave
in
popf
sub
jp
scas
das
outsl
in
dec
aaa
inc
inc
xchg
jns
sarb
adc
dec
pop
lds
pcmpgtd
popf
sub
fucomip
cmp
repnz
mov
xor
cmp
pop
sahf
lahf
shrb
fs
xchg
mov
sahf
out
jp
cmp
push
adc
ret
or
and
out
fstpl
int
pop
dec
add
mov
mov
out
pop
out
clc
jmp
sub
jno
lock
mov
bound
aam
lret
shll
inc
xchg
lock
enter
lock
js
add
pushf
nop
pop
jmp
adc
xor
jl
push
push
cmp
and
xor
or
aas
ds
push
repnz
rorl
lcall
rolb
push
and
cmp
loop
outsl
sbb
repnz
adc
pop
outsb
repz
sbb
lods
sbb
subps
pop
test
dec
and
push
nop
mov
mov
lods
pop
sahf
cmp
lret
cmpsl
cmp
xor
add
jp
cmp
lahf
shlb
xchg
int
push
pop
push
divb
loop
popf
icebp
mov
pop
mov
jo,pt
inc
lret
jbe
frstor
xchg
and
and
popa
sbb
mov
jmp
mov
fcompl
pop
sbbl
jmp
je
pop
push
push
stos
mov
mov
sahf
jns
xchg
lahf
dec
inc
not
jne
movsl
lcall
mov
outsb
aas
fwait
mov
mov
push
xor
ja
ret
movsb
std
cmp
dec
inc
add
cmp
in
or
dec
idivl
int
testl
aad
inc
test
fimuls
adc
sbb
js
insb
ds
sbb
inc
cmp
mov
fs
mov
mov
clc
inc
das
sti
sbb
jg
aad
out
xor
ds
and
outsl
test
notl
sbb
imul
popf
mov
mov
outsl
out
in
aaa
insl
cmp
sar
cmp
popa
cmp
mov
xlat
imul
add
js
in
jno
xlat
imul
jmp
aaa
adc
sarl
cmp
push
or
mov
stos
nop
leave
sub
push
push
das
in
mov
dec
inc
iret
push
pop
fidivs
or
sub
test
cmc
imul
push
lahf
std
sbb
out
mov
add
mov
ds
jb
dec
xlat
roll
ljmp
enter
lcall
aaa
dec
es
xor
lock
shrb
cmp
xor
mov
and
insl
jae
push
push
push
cs
lcall
rorb
and
jb
in
negl
stc
cmp
mov
inc
push
stos
sub
xchg
sub
aam
ds
mov
and
xchg
and
push
lcall
add
cli
sub
inc
int3
add
ret
and
enter
popf
sbb
fldt
inc
lcall
das
aam
add
jb
cltd
mov
add
jae
pop
mov
sbb
xchg
xchg
movsb
out
lcall
push
mov
negl
int
mov
push
int3
and
cmp
cmp
adcl
rcrl
jb
ljmp
adc
fsubrl
xor
int3
inc
sub
testb
lret
dec
cmp
jle
mov
pop
dec
into
mov
fs
xchg
mov
or
bound
daa
out
mov
jmp
sbb
sub
hlt
iret
ror
push
xchg
fdivrl
arpl
sbbb
push
cmp
adc
jle
fistpll
aaa
repz
decb
fdivrs
sbb
pop
inc
aaa
mov
insb
push
sbb
test
push
lods
mov
mov
aaa
and
adc
js
ds
mov
mov
in
adc
ret
imul
imul
xorl
xor
bound
stos
xor
cmpsl
imul
cmp
or
addl
lcall
cmp
insb
insl
cmp
lcall
cmpsl
adc
mov
dec
mov
sti
sbb
mov
push
int3
adc
sbb
jnp
addr16
push
insb
fidivl
js
inc
pop
push
or
insb
mov
je
roll
push
mov
jp
dec
push
or
sbb
push
push
das
sub
cmp
lret
lods
mov
popf
cmp
shrb
lret
and
mov
xchg
fiaddl
cmp
ret
jecxz
stc
faddl
push
pushf
push
rcll
inc
popa
inc
push
dec
fisttps
pop
inc
xchg
shl
mov
pop
push
call
lcall
jo
fnsave
inc
imulb
pop
ucomiss
mov
push
mov
xor
sub
iret
xorb
movsb
pop
mov
push
jl
lods
xchg
inc
jae
out
test
xor
xchg
std
lret
jp
xor
mov
pop
pop
or
test
inc
pop
outsl
enter
clc
or
sbb
mov
adc
jmp
add
in
vpunpckhqdq
jmp
xchg
add
cmp
push
test
in
sub
enter
lods
cli
inc
xchg
add
adc
jl
or
pushf
dec
or
add
loope
mov
popa
jge
orb
inc
ljmp
movl
mov
jmp
and
jg
mov
dec
cmpl
pop
adc
insb
fsubrl
sub
jb
or
outsl
xor
call
dec
jg
push
fidivrl
xor
ja
mov
or
fstpl
fbld
daa
inc
rolb
jnp
mov
fcompl
cs
ja
aaa
cmpsl
insb
xchg
mov
mov
test
and
jb
dec
ja
cmp
xchg
cwtl
fmuls
call
dec
sub
rcr
push
xor
xchg
cmp
aad
adc
popa
sub
pop
test
dec
aas
clc
nop
sahf
popa
cmp
sub
fcompl
adc
sub
push
mov
sbb
enter
inc
pushf
movsl
lea
or
jns
add
xor
push
and
xchg
inc
daa
popa
pusha
test
test
bound
or
sub
leave
lcall
inc
lock
mov
add
icebp
inc
fucom
jae
subb
bound
jp
inc
aaa
sub
mov
fwait
adc
mov
sbb
outsb
imull
or
ds
outsb
insl
decb
pop
xchg
add
outsl
rcrl
mov
cli
int
int
jne
add
sbb
aam
pop
lcall
stos
stos
shl
mov
iret
stc
dec
and
aas
in
repz
es
add
into
push
push
dec
add
sub
pop
mov
mov
fstl
mov
add
lcall
cwtl
stos
fstp
repnz
inc
test
mov
and
cmp
hlt
in
ret
orb
shll
das
ds
mov
loopne
cmp
arpl
cmp
aas
push
mov
loopne
stos
clc
mov
jl
xchg
sbb
mov
pusha
xchg
mov
cmp
xor
insb
mov
inc
mov
mov
and
faddl
push
push
cmc
lret
lret
repnz
cmpb
fcompl
cltd
leave
inc
aas
push
clc
lock
inc
sub
add
sbb
jge
cs
fistl
ds
mov
jle
inc
cld
inc
or
add
and
repnz
fwait
pop
push
ficoml
xchg
pop
push
pop
lcall
ficomps
outsl
popa
mov
cli
jl
lcall
or
fstl
push
inc
dec
push
test
adc
sbb
push
in
nop
shrl
incb
loope,pt
lret
stc
rcl
mov
ficomps
ds
lods
test
xor
pop
jle
jle
scas
outsl
jl
inc
push
add
mov
fwait
xor
aaa
push
xor
in
test
or
xlat
cmp
mov
pop
lds
cmp
jbe
xor
lcall
adc
fldt
and
xchg
push
divl
je
icebp
pop
add
jp
leave
add
adc
in
aam
das
cwtl
data16
test
jg
sub
xchg
cmp
js
jle
aaa
mov
or
fwait
xchg
movsb
push
fsubr
mov
dec
push
ret
test
ljmp
mov
pop
addr16
sti
imul
loopne
test
dec
cmp
lret
ret
sbb
insl
loop
dec
movsl
out
in
cmp
test
push
notl
test
jp
add
adc
int
sbb
negb
inc
ss
xchg
or
jnp
test
pop
cmc
pmaddwd
and
jle
lcall
aaa
pop
or
cld
cmp
cld
inc
mov
inc
xchg
inc
idivb
jno
mov
sub
test
pop
xor
fadd
sub
mov
push
or
inc
addr16
jmp
icebp
fmull
mov
hlt
dec
cmp
lcall
es
das
bound
dec
sbb
std
jnp
fisttpll
inc
inc
sbb
sub
movsl
ds
push
shll
push
sub
fsubr
inc
cmp
xchg
pushf
lods
cmp
test
fimull
adc
inc
mov
sti
pop
lods
pop
fs
dec
int3
fmull
lock
mov
loop
cmpsb
test
dec
std
push
mov
jmp
mov
test
jg
ljmp
pop
mov
ds
xchg
hlt
inc
gs
out
aaa
int
std
push
fcmovnbe
out
lcall
mov
cmc
fdivl
dec
adc
ds
adc
cmp
sub
push
pop
out
lock
lcall
insl
jg
lea
cmp
loope
mov
adc
mov
push
loop
mov
cmpsl
dec
testl
sub
sbb
add
sbb
jecxz
jg
inc
mov
cwtl
adc
lcall
dec
stos
mov
jbe
pop
mov
xchg
faddl
icebp
call
add
and
sub
popa
insl
rclb
inc
xchg
clc
add
xchg
popf
mov
sti
test
dec
pop
xor
cmp
mov
cmp
sbb
inc
cmp
test
cmp
insb
adc
loopne
movsb
mov
lods
sub
mov
xorb
xlat
lret
nop
or
lcall
mov
in
pop
test
jecxz
add
mov
add
fcoml
stc
dec
hlt
popa
out
add
hlt
dec
loop
loop
mul
add
mov
in
push
mov
mov
mov
xchg
pushl
fnstenv
xor
push
ds
mov
movsl
dec
push
mov
ds
inc
cs
lcall
pop
inc
ret
inc
push
in
js
ja
lret
dec
outsb
mov
dec
ljmp
aaa
shlb
sub
lcall
mov
enter
scas
pop
aam
lahf
aaa
out
xor
stc
lock
aaa
sbb
outsl
jbe
push
nop
lcall
and
add
pop
push
test
pop
xchg
push
pushf
inc
clc
and
aaa
ds
xchg
inc
test
lods
adc
add
or
loop
pcmpgtb
push
stos
jmp
push
xlat
mov
sar
push
stos
arpl
loopne
inc
cltd
inc
fists
mov
rcrl
add
cmp
shrl
cmp
or
push
jmp
outsl
mov
lds
jg
fadd
mov
xor
imul
and
push
out
out
in
and
xor
shl
sbb
jnp
cmp
mov
mov
ds
add
movsb
pop
cli
xor
fistpl
mov
lcall
lea
mov
inc
stos
cltd
pop
xchg
mov
sub
negl
mov
lretw
pop
fwait
cmpb
mov
hlt
fdivl
lea
or
sub
mov
mul
ds
aaa
mov
in
stos
xchg
mov
leave
insb
mov
fdivr
lods
and
std
clc
mov
push
mov
jnp
rcrb
mov
or
enter
pop
xor
xchg
lcall
das
xor
inc
popl
repnz
js
pop
cwtl
ret
add
out
popf
cli
jle
rcrl
or
dec
loopne
or
pmaddwd
outsb
aas
sbb
push
cltd
add
mov
mov
cmp
lcall
push
and
hlt
lds
jmp
sub
push
fisubs
add
mov
fistps
sahf
stc
and
cmp
jns
fiadds
xor
cli
mov
stos
dec
push
fnstsw
movsl
adc
scas
add
lcall
call
xchg
inc
mov
mov
adc
cmpb
fnstsw
mov
adc
stos
and
cs
or
int3
cli
paddusw
mov
das
jl
jbe
arpl
jns
fldt
pushf
cmp
add
push
in
mov
es
xchg
dec
mov
inc
xor
push
mov
daa
fidivs
nop
popf
xchg
and
hlt
das
jmp
gs
pop
faddp
ds
add
sbb
inc
test
and
sub
pop
cmp
push
jns
pop
fwait
inc
mov
fstl
repnz
dec
aas
or
mov
add
fnsave
jge
mov
mov
push
mov
jns
push
pop
stc
outsl
sbb
in
mov
aaa
inc
inc
and
xchg
fisttps
fdiv
test
adc
ds
pop
jp
mov
mov
jp
lcall
std
fsubr
pop
nop
adc
jle
addr16
adc
cmpsb
fidivrs
std
lcall
xchg
shl
fs
aas
dec
pop
pop
fiadds
popf
xchg
cmp
sub
scas
mov
mov
fisttps
clc
mov
rcrb
xchg
pop
ds
cmp
mov
cmp
mov
sbb
add
adc
mov
test
mov
shrb
cmp
int
mov
xor
mov
lcall
jge
sbb
or
fwait
mov
sub
in
mov
sbb
push
push
and
popa
inc
cmp
decb
iret
jb
mov
pop
scas
adc
xlat
fwait
addr16
cmc
in
pop
inc
xchg
jle
jae
aad
pop
andl
cmpsb
mov
inc
js
loopne
cmp
mov
daa
div
inc
dec
xchg
jecxz
lcall
push
and
jg
mov
ljmp
js
inc
imul
out
fcompl
add
add
jb
movsb
repnz
jmp
loopne
fstps
cmp
into
xor
aad
lcall
xor
insb
in
in
fs
cli
loop
fildll
cmp
pop
mov
faddl
lret
ds
pop
pop
mov
pushf
fsubl
dec
cwtl
bnd
add
or
pop
sbb
cwtl
xor
sbb
int3
lock
test
cwtl
xchg
xchg
mov
popf
cmp
aaa
leave
push
test
mov
cs
or
push
mov
jnp
mov
ja
shl
xchg
sub
aaa
mov
mov
lcall
std
fcmovnu
pop
inc
sbb
push
push
mov
cmp
mov
test
xchg
call
in
sbb
inc
mov
in
pop
leave
pop
aaa
xor
push
imul
push
push
addr16
orb
addl
test
ds
scas
insl
mov
aaa
adc
dec
mov
lcall
add
pop
inc
aaa
xlat
or
test
push
lcall
and
cltd
ds
test
fwait
sbb
fnstcw
out
in
mov
faddl
outsb
cmc
cmc
les
jmp
push
inc
fstpl
outsb
mov
ja
in
fsubl
mov
sbb
push
add
dec
enter
inc
bound
add
sub
and
cmp
dec
adc
jle
scas
dec
dec
pop
rolb
lods
sub
fdivrl
push
push
push
ret
cmp
pop
pop
mov
fstpt
mov
int
icebp
pop
jbe
or
daa
loope
fnstcw
mov
push
loopne
jmp
lahf
enter
push
adc
sahf
shrb
inc
jg
push
xchg
cmp
mov
sub
inc
inc
ds
aas
pop
sbb
mov
addb
adc
sbb
cld
jo
popf
jp
pushf
and
xor
subb
pop
and
mov
cli
sbbl
leave
add
frstor
psubusb
push
push
jle
loop
add
inc
add
cmp
cmc
dec
adc
jns
pop
out
mov
test
fbld
dec
and
test
sbb
adc
sti
shlb
addr16
xchg
aaa
xchg
dec
shr
gs
outsb
ds
and
cmp
enter
xor
xchg
dec
pop
movsl
in
or
lret
rcll
ds
xor
je
pop
loopne
outsb
cmp
xor
push
mull
adc
lods
dec
mov
aaa
je
mov
inc
lcall
ds
fdivrl
stc
aas
inc
pop
xchg
data16
lcall
adc
sbb
mov
das
movsl
and
imul
and
nop
jo
or
inc
xchg
rcl
aaa
scas
cmp
cwtl
lcall
fsubl
ret
stos
xchg
xor
inc
mov
xor
loopne
insl
std
les
pop
jno,pt
adc
push
dec
enter
rcrb
pop
leave
lods
insl
scas
das
lods
in
lcallw
rcr
aaa
testl
repz
mov
or
test
aaa
and
push
inc
shr
push
adc
mov
lods
jnp
je
fiadds
sbb
daa
dec
dec
pop
mov
mov
std
pop
das
add
inc
scas
pop
pop
notl
dec
sub
cs
mov
xor
push
adc
dec
xchg
in
jbe
adc
lock
cmp
std
jne
lcall
jg
jecxz
jmp
pop
xchg
inc
mov
out
adc
jne
sbb
lret
div
lcall
lahf
xor
sbb
adc
aad
fmuls
pop
ds
decb
xor
aaa
sahf
push
sahf
dec
push
xlat
push
xchg
sbb
and
fnstsw
and
mov
faddp
inc
repz
push
lahf
inc
inc
push
lcall
gs
cmc
in
mov
jb
lcall
aas
mov
lea
sbb
sbb
dec
inc
fwait
aaa
faddl
sahf
int3
mov
push
pushf
sti
xor
pop
dec
insb
in
push
sti
cmp
arpl
mov
dec
bound
inc
testl
mov
fcmovnbe
jecxz
aaa
add
xchg
or
sarl
dec
out
test
mov
sbb
shrb
bnd
clc
xchg
fisttps
push
mov
pop
push
sbb
add
sub
mov
push
fisttpll
xchg
mov
jnp
mov
mov
push
xorl
push
mov
jb
jp
lcall
xchg
ror
xor
jecxz
adc
or
push
and
not
jmp
ds
dec
sbb
lock
test
ret
cltd
cmp
xor
sub
lret
xchg
push
das
mul
nop
mulb
les
loope
stc
mov
int3
or
push
mov
adc
jnp
jge
dec
adc
bound
lcall
xchg
sbb
aaa
mov
jns
nop
lcall
lods
loop
cmpsl
inc
std
mov
ds
dec
mov
pop
mov
mov
test
lcall
loopne
fnsave
fisubrl
insb
dec
sub
ds
rep
cld
mov
popa
inc
mov
pop
fstpl
xchg
inc
jge
jle
ljmp
imul
inc
js
cmp
sbb
xchg
jl
cmp
mov
push
test
sarl
jge
daa
and
nop
rcrl
mov
popl
push
mov
cli
popf
jmp
loopne
xchg
sbb
xchg
inc
sbb
jae
loope
cmp
mov
push
aaa
outsb
xor
loopne
lahf
hlt
push
jle
test
faddl
ret
inc
cmp
in
aas
cli
dec
push
push
lcall
neg
fldl
push
bound
repnz
lcall
cld
xchg
mov
xor
push
mov
sub
pop
into
push
and
in
pop
cmp
lcall
and
stos
sbb
xor
int
xor
sbb
adc
fisttpll
cld
push
cmp
mov
into
add
inc
mov
fbstp
mov
das
leave
aad
push
movsl
mov
hlt
mov
cmp
data16
mov
imul
and
nop
jno,pt
cmp
and
popf
and
xchg
loopne
aam
mov
leave
push
cmp
in
sub
dec
xor
movsb
adc
xchg
push
sub
lcall
icebp
mov
aaa
sbb
inc
inc
or
ds
imul
bound
dec
aas
sbb
jecxz
pop
or
iret
lods
fcomp
sbb
pushf
ja
add
mov
stos
fmull
push
xchg
test
aam
xchg
not
push
lds
imul
mov
mov
inc
xor
scas
cltd
std
sbb
cli
dec
pop
mov
inc
sbb
lcall
ds
ljmp
aaa
dec
adc
lea
dec
adc
test
jle
outsl
add
or
xor
jge
dec
outsb
das
sbbb
mov
pop
sahf
sub
lcall
ret
ljmp
xor
jb
inc
pcmpgtw
ja
mov
xchg
push
movsl
inc
sub
cmc
xchg
frstor
jecxz
int3
shlb
ljmp
sbb
xchg
sbb
pop
rclb
push
pop
add
push
fs
mov
jno
sub
andl
push
fmulp
testb
mov
ret
inc
inc
bound
cs
addl
lcall
mov
fldl
mov
ds
call
loope
push
pop
leave
mov
and
sarl
lock
jo
loope
cmp
pop
jb
mov
test
lret
cmp
cmp
push
inc
inc
dec
fiadds
sub
dec
popf
mov
jle
xor
faddl
jns
orl
in
jge
jmp
xor
and
in
clc
push
popf
das
popf
inc
push
mov
push
sub
mov
xor
pop
nop
nop
ds
cmp
int
cli
fwait
arpl
or
in
or
jl
dec
jae
cwtl
decb
loopne
inc
aad
out
pop
adc
adc
mov
jmp
lock
clc
repnz
out
mov
cmp
pop
aaa
ficomps
push
flds
das
fadd
lahf
xor
sub
into
push
nop
pop
stos
fdivrl
hlt
jnp
sbb
cmp
cmp
inc
movsl
aaa
dec
sbb
inc
push
fldenv
cmp
ljmp
xor
adc
sbb
inc
in
sub
lods
lcall
add
loop
icebp
mov
lret
dec
and
icebp
jnp
sbbb
cmp
xor
dec
pop
cmp
jo
mov
lret
cmp
ret
stos
movsb
popf
mov
ficomps
mov
xchg
jmp
scas
mov
cmp
xchg
inc
into
imul
movsl
mov
out
pop
pop
movsb
jmp
lcall
add
lret
mov
dec
pop
lods
sub
mov
popa
faddl
lea
mov
push
lods
mov
je
sub
adc
test
cmp
add
fdivrp
xor
testl
xchg
test
jl
jg
ss
dec
adc
push
push
jp
xchg
jnp
or
mov
repnz
loope,pn
ds
pusha
loopne
rclb
cmpl
and
pop
shl
xchg
aaa
xchg
push
dec
and
pop
sub
lds
cmp
loopne
dec
cmp
stos
pop
ja
les
lods
ljmp
mov
lahf
pusha
jl
dec
fisttpll
fsubr
mov
inc
sub
pop
sub
pop
mov
cmp
pushf
fsubl
frstor
pop
inc
mov
in
xchg
sbb
cmp
test
adc
xor
mov
or
ja
stc
pop
cwtl
out
and
inc
jbe
jle
in
inc
adc
sbb
cmpsl
sbb
stc
sub
lods
sti
inc
dec
sbb
xchg
jle
pop
mov
cmpsl
xor
mov
ja
pop
cmpsb
sub
inc
xor
cli
mov
jns
mov
leave
les
or
adc
mov
cmc
or
or
adc
clc
fwait
jbe
mov
mov
mov
fmuls
and
jne
lock
inc
mov
mov
jge
stos
fstpl
cmp
testl
dec
fdivrl
mov
jno
sbb
js
jmp
lret
fwait
nop
cmp
and
aaa
add
push
arpl
test
aad
out
jle
in
fisttps
sbb
pop
and
js
ja
sub
push
push
cmp
aaa
sub
outsb
push
ror
push
cwtl
pop
lods
push
sti
pop
inc
popa
mov
out
push
rcll
sbb
xchg
outsb
lea
add
cmp
rcrl
fstl
repnz
cmp
dec
test
fsubrs
mov
push
push
popf
test
or
mov
out
nop
repnz
cmp
push
mov
push
negl
in
or
lcall
mov
pop
jmp
aaa
mov
jbe
sub
sbb
dec
ds
pop
out
pop
jle
ss
sbb
fimuls
sbb
lret
sahf
jb
popf
xchg
mov
aaa
adc
adc
mov
or
out
mov
xor
cmpsl
push
sbb
js
insb
sub
jbe
dec
push
sbb
xlat
inc
mov
repnz
scas
test
lock
lret
dec
jmp
test
pop
pop
out
pop
pop
out
lock
pop
btrl
cmpsl
sub
jl
push
dec
mov
addl
sub
mov
pushf
shll
mov
into
mov
clc
dec
push
mov
out
pop
lcall
das
mov
dec
xchg
pop
in
pop
pop
lcall
aam
push
inc
mov
pop
scas
out
add
adc
filds
outsl
lcall
inc
mov
shll
cltd
xor
adc
cmp
dec
and
scas
cmpsl
bound
aaa
jb
jb
mov
loopne
arpl
das
fdivs
push
dec
pop
pop
insb
rol
cld
aad
and
and
xchg
ljmp
jmp
or
jae
cmc
rolb
jmp
aaa
sub
push
loope
test
mov
and
cmp
jp
aaa
js
push
movsb
aam
test
idivb
outsb
ret
ds
xchg
into
lcall
push
xor
xor
cld
pop
iret
cmpsl
aaa
dec
mov
inc
and
ret
jl
jl
push
movsl
clc
dec
jne
cmp
xor
and
aas
mov
cmp
pop
aad
and
mov
adc
dec
sub
inc
inc
inc
pusha
dec
test
cmp
popf
adc
mov
aaa
mov
push
adc
cmp
lret
dec
inc
movsb
xor
xor
sahf
cmp
push
lcall
dec
rcr
jl
outsl
mov
or
xor
jp
mov
jg
cmp
in
testb
ja
sbb
pop
pusha
lret
mov
int3
stc
dec
jnp
fcoml
lods
ljmp
xchg
fstpl
ja
jp
aas
jns
pop
test
or
jb
bound
int3
sbb
push
cmp
push
inc
fmulp
cmc
and
pop
mov
inc
sbb
cmp
push
dec
jecxz
gs
aaa
ficompl
push
data16
mov
mov
or
or
sbb
jp
outsb
fisubl
cwtl
push
cmp
cmp
xchg
ljmp
gs
jg
sti
jle
call
or
jo
cmpl
xchg
dec
jne
sbb
loopne
and
xchg
in
xor
xchg
sub
jge
mov
fnsave
arpl
subb
pushf
ds
push
decl
inc
daa
cmp
mov
cld
rcrl
scas
fsubrp
mov
inc
clc
fistl
test
mov
das
aam
mov
ljmp
inc
xchg
push
fstl
pop
into
inc
ds
jmp
rolb
push
cmp
in
push
lcall
arpl
cli
outsb
stos
jl
mov
pop
or
sbbl
lods
push
adc
lods
test
push
pop
jne
cmp
adc
sbb
ds
mov
mov
inc
icebp
pop
test
xor
repnz
call
fstpl
fwait
xor
mov
clc
cltd
cmpsl
dec
je
aaa
jl
jbe
sub
mov
fwait
xor
movsl
sbb
mov
pushf
dec
jbe
cmpsl
cli
jecxz
push
in
icebp
adc
dec
push
lret
lock
lcall
mov
push
push
cmp
nop
dec
daa
mov
cmpsb
mov
popf
mov
into
ljmp
sub
sbb
push
mov
mov
fwait
je
cmp
mov
inc
icebp
jns
sbb
es
test
dec
stos
popa
pop
push
stos
loope
gs
xchg
ror
adc
cmp
hlt
test
cmp
sbb
fistpll
inc
sbb
gs
or
std
dec
loop
jmp
cmp
jle
inc
cmp
call
das
sbb
popf
jl
mov
sahf
sub
adc
aaa
dec
outsl
pop
dec
and
shll
movsb
jecxz
int
andnps
dec
pop
inc
loopne
in
ja
push
push
mov
xchg
xor
fbld
dec
gs
and
iret
pop
dec
clc
fwait
addr16
aaa
pop
test
and
inc
idivb
and
cmc
cmp
out
jae
mov
sbb
mov
dec
push
das
popf
lcall
les
push
mov
ljmp
or
lods
mov
push
xchg
pop
inc
gs
dec
pop
jbe
mov
xchg
xchg
mov
jbe
pop
stc
test
sahf
cmp
out
dec
add
jl
loop
xchg
cmp
repnz
xchg
leave
xor
adc
insl
sbb
dec
out
sbb
fadd
in
ror
cmp
mov
cmp
ret
dec
pop
outsl
mov
push
stc
into
jp
xchg
add
pop
pushl
popf
dec
mov
aaa
lds
je
jp
sbb
enter
push
repnz
ss
cmp
push
lret
pop
push
pop
sbb
rcrb
repz
jb
inc
xchg
mov
clc
xchg
xchg
inc
mov
cmp
pop
fwait
dec
fisttpll
jl
add
mov
xchg
sbb
fs
gs
mov
xor
jbe
rolb
scas
aaa
pop
push
mov
jecxz
dec
test
mov
loope
and
bound
cmpsb
sbb
mov
aas
xchg
jle
pop
fldt
jo
lcall
aad
push
popa
mov
inc
sub
mov
out
hlt
mov
ror
cmovo
and
movsb
bound
scas
jae
cmp
cmp
lods
cmpsb
pop
pop
add
shll
test
stos
cwtl
inc
pop
lcall
mov
fmull
inc
mov
mov
mov
mov
jmp
pop
mov
pop
fldenv
lods
shr
scas
inc
cmp
xor
adc
dec
inc
stc
or
push
imul
aaa
inc
and
mov
adc
nop
in
dec
out
mov
mov
aaa
cmp
je
lret
jle
mov
pushf
jecxz
and
out
xchg
cltd
jmp
pop
scas
mov
cmp
ficompl
test
jg
pop
imull
imul
jbe
sti
test
clc
xorl
push
adc
mov
js
lods
lcall
ret
pop
add
nop
lock
sbb
adc
fwait
leave
inc
add
fst
outsl
pop
mov
cmpsl
ret
xchg
cltd
das
sub
das
cmp
xor
sahf
adc
les
and
jo
dec
lcall
or
sub
std
jno
fcmovb
lcall
mov
xchg
push
je
mov
jp
pop
mov
leave
inc
lods
fstl
popf
sub
mov
aas
iret
cmp
pusha
loope
mov
daa
cltd
cli
push
sub
js
xchg
mov
sub
cltd
daa
and
iret
test
cmp
xor
psubq
add
arpl
adc
and
aaa
aas
or
mov
fists
lcall
in
fildll
adc
pop
push
cltd
lcall
aaa
rcr
adc
gs
popa
xchg
dec
lds
inc
pop
je
sti
scas
je
push
clc
movsb
dec
mov
lock
pop
ds
mov
mov
repnz
rcrb
jg
mov
lds
pushf
shrb
test
mov
xor
pop
or
or
cmp
mov
fldl
add
aas
and
sbb
push
popa
sub
lods
test
scas
cmp
aas
adc
inc
scas
fstp
test
hlt
push
xchg
mov
ds
push
enter
hlt
sub
hlt
test
jmp
jle
call
scas
inc
test
add
pop
js
mov
or
popf
xchg
pop
notl
lcall
dec
paddb
cmp
arpl
popa
pop
cmp
popa
adc
test
lods
clc
xchg
mov
pop
out
xchg
mov
adc
icebp
dec
pop
es
gs
dec
test
inc
cmp
jo
popa
push
stos
or
ds
out
fsubl
mov
xchg
mov
jmp
imul
pop
jb
jge
scas
jg
jmp
les
mov
dec
insl
cltd
cmp
rcrb
add
jo
stc
ficomps
jle
test
inc
lahf
mov
imul
cmp
cmc
sbb
add
xchg
sti
sbb
or
adc
shrb
sub
lcall
mov
dec
dec
mov
xchg
sub
sbb
sub
fistps
cmp
inc
fcmovu
xchg
int
and
rorb
fidivs
or
lds
add
cmp
or
in
jle
lods
and
cs
ja
pop
pop
int3
sbb
push
sbb
out
cmp
icebp
add
ss
arpl
lods
imul
rcrl
sub
lret
aaa
pop
push
lcall
mov
dec
push
push
pop
pop
jno
aaa
pop
xchg
pop
popf
xor
and
pushf
xchg
dec
aaa
icebp
add
mov
daa
mov
mov
inc
mov
hlt
ds
jbe
push
loope
fsubrl
pop
mov
cmpsl
aas
mov
lds
xor
mov
mov
jecxz
mov
or
mov
daa
out
test
inc
and
ret
sbb
ljmp
jae
sbb
cmp
add
je
push
stc
push
arpl
stos
popf
call
je
cmp
icebp
jge
paddsb
add
std
xchg
iret
xchg
fstl
pop
das
dec
inc
mov
jmp
mov
cmp
fwait
out
es
popa
pop
fwait
jnp
push
pop
fsubrp
xor
into
lock
cmpsb
mov
movsb
les
jo
add
cmp
or
and
sbb
aam
insb
sahf
dec
mov
cltd
pop
push
pop
jmp
divl
mov
cwtl
mov
ret
mov
jnp
in
sbb
lcall
in
cmp
jle
and
push
dec
sbb
sahf
cmp
mov
pusha
addr16
mov
sub
shlb
mov
dec
rcrb
push
sbbl
aad
lcall
cmp
fistpl
mov
mov
or
xor
clc
call
pop
sbb
in
pop
clc
jp
dec
mov
insl
and
scas
inc
nop
mov
adc
js
out
adc
scas
mov
loopne
loope
mov
popf
mov
pop
push
sub
shrb
push
cmpsb
loop
and
fcompl
out
pop
push
insb
mov
lods
cmp
cmpsl
dec
loop
pop
mov
cld
mull
fiadds
sarb
fidivs
out
sbb
push
lret
add
add
ret
out
std
jo
xchg
mov
hlt
xor
daa
lcall
sbb
rcrl
mov
and
cmp
repnz
aaa
cmp
xchg
pop
lcall
jl
loopne
pop
outsl
mov
xchg
daa
ds
mov
jb
aad
xor
addr16
inc
and
ret
sbb
cmc
adc
popa
out
outsb
ret
jns
dec
stos
lds
jecxz
push
fs
pop
xchg
lods
dec
cs
cmc
xchg
xlat
push
aas
into
pop
jbe
ds
adc
inc
jnp
pushf
xchg
mov
jb
popf
cmp
inc
stos
xchg
or
xchg
aas
scas
or
imul
cmp
arpl
orb
xor
lods
adc
int3
xchg
aas
mov
fildl
divl
cwtl
pop
sub
mov
repnz
xchg
ds
ficompl
pop
addb
fcoms
mov
pop
dec
dec
sbb
inc
mov
mov
lock
xchg
lock
outsl
jb
ds
cli
inc
jge
pop
push
mov
push
lcall
out
xchg
fnsave
fmulp
sub
pop
icebp
or
mov
jmp
inc
or
arpl
aaa
cmp
les
mov
mov
jne
and
clc
insl
inc
jnp
adc
mov
mov
mov
fcompl
int
mov
dec
scas
out
mov
fidivrs
add
arpl
lods
cmp
test
jp
loope
push
test
sbb
mov
shr
dec
inc
paddusw
jle
in
jmp
push
jae
adc
xchg
dec
mov
ds
ficoml
addl
aaa
pop
pop
cmp
fcomip
mov
cmp
sub
aaa
mov
jp
adc
or
enter
faddl
loopne
pop
in
dec
xchg
push
aad
aam
data16
stos
mov
ret
fimuls
adc
loope
adc
mov
icebp
pop
inc
mov
fimuls
popf
mov
aas
mov
fiadds
fwait
sbb
mov
cmpsl
aam
js
adc
cmp
jne
in
sub
push
push
cmpsb
mov
inc
lods
cmpsb
add
ds
pop
lret
shr
push
out
cmp
pop
nop
pusha
ret
ds
jb
cmp
lods
push
cwtl
aaa
and
test
mov
jo
lock
jbe
sub
cmpsl
mov
ret
dec
jmp
mov
out
std
fnstsw
sti
pop
jmp
lret
push
push
ret
add
ss
jnp
jle
xchg
pushf
pop
rcrl
dec
sbb
ret
addr16
das
push
pushf
sti
movsb
std
aaa
enter
ret
cmp
setp
sbb
stos
mov
nop
xchg
cltd
push
mov
dec
mov
and
aaa
inc
jg
sbb
lcall
shrl
pop
mov
in
fldl
pop
add
imul
jmp
testb
adc
stc
pop
cmp
mov
inc
lcall
hlt
shl
mov
mov
dec
mov
lahf
mov
lahf
enter
or
sti
inc
mov
xchg
lods
add
lcall
repnz
jmp
lcall
ret
jecxz
push
fsubl
daa
inc
mov
fisttpl
lock
cli
add
shl
fsubrl
test
or
das
stc
mov
cmp
testb
add
popf
dec
shrb
insl
test
pop
add
repnz
lahf
adc
cmp
cmp
insl
pop
fnstsw
dec
push
adc
mov
push
and
in
mov
subb
mov
dec
mov
inc
mov
sbb
lds
and
push
mov
xlat
inc
dec
cmp
xor
or
jecxz
adc
jns
sub
sbb
cmpl
fcoms
mov
outsl
je
inc
or
repnz
jae
sub
jnp
and
push
sbb
mov
xchg
sti
pop
out
mov
push
fwait
test
add
enter
inc
aas
ret
push
xchg
mov
ja
into
push
dec
aaa
bound
mov
sub
es
or
sub
mov
jae
lahf
mov
out
pop
cmp
lea
pop
aas
in
or
pop
mov
enter
fnstsw
daa
inc
mov
fmull
sbb
xlat
and
cmp
hlt
fildll
jmp
rolb
inc
aas
sbb
mov
loopne
push
lahf
sbb
lcall
das
xlat
add
dec
cmpsl
fdivr
sbb
rcrl
fucom
and
cltd
cmp
push
fdivrs
dec
mov
lods
aaa
sub
sbb
push
xor
jbe
pop
dec
mov
lods
aaa
dec
fwait
stc
pop
xchg
mov
jle
push
sub
setge
dec
sbb
das
int
rcrl
testb
or
xor
inc
fmul
popa
aaa
je
scas
fidivl
pushf
cmp
add
push
and
sub
jp,pt
loop
aas
popa
in
sub
into
jnp
push
pxor
mov
pop
aam
aam
stc
enter
mov
es
xchg
popf
mov
fwait
jnp
mov
repnz
movsb
push
pop
mov
inc
pop
mov
stc
sub
fldl
loopne
cmp
sti
fdivl
loop
xchg
pusha
adc
pop
js
add
sub
sbb
sbb
cmp
hlt
push
dec
in
clc
insb
mov
jnp
test
add
enter
into
cmp
in
push
xchg
sbb
ljmp
pushf
in
out
and
sbb
dec
mov
pop
xchg
lret
fwait
ja
test
inc
loopne
pop
insb
jae
or
jb
not
push
shlb
dec
mov
and
mov
pop
jle
mov
je
jbe
push
stc
and
adc
fcompl
mov
fwait
dec
sub
out
jns
push
mov
pop
stc
inc
decb
dec
or
aaa
mov
repz
jmp
adc
cmp
jg
jp
repnz
xchg
ljmp
int3
lahf
cs
loop
les
mov
imul
aaa
sub
add
jge
xchg
mov
pop
aam
dec
lret
jmp
mov
cmp
lahf
mov
mov
inc
lea
inc
cmpb
hlt
out
or
jge
sub
out
lock
fwait
out
lods
ficompl
push
cmpw
repnz
shrl
jae
cmp
push
dec
pushf
inc
lods
fs
pop
pop
or
movsb
cmp
aas
iret
fwait
xor
sbb
sbb
ds
mov
jmp
mov
call
cmp
jns
les
inc
mov
pop
inc
jmp
and
lcall
add
inc
fwait
jl
mov
pop
data16
aaa
adc
arpl
lcall
jg
mov
jbe
mov
sub
ljmp
push
outsb
push
movsb
mov
inc
cmp
or
and
push
xor
loop
pop
mov
or
fldenv
sub
add
sbb
andl
add
and
pop
pop
mov
pop
fbstp
mov
push
lds
in
xchg
jb
mov
or
xchg
inc
ljmp
mov
inc
data16
leave
fxch
and
mov
cmpsl
mov
ds
mov
inc
and
aas
std
sbb
dec
cld
xor
lea
and
jbe
pushf
jo
ret
and
in
mov
int3
xor
test
cld
aad
sbb
cmp
mov
cwtl
pop
aas
jae
jo
pop
mov
fcoml
loope
jnp
dec
fstl
test
push
mov
mov
scas
mov
icebp
lcall
cmpsb
xor
loopne
fmull
ss
jae
ds
xchg
sub
dec
cmp
fiaddl
dec
dec
push
orl
pop
cmp
lahf
cs
jp
cwtl
or
push
cmp
ret
xchg
jb
dec
popa
jno
or
sub
pop
outsb
hlt
adc
mov
dec
iret
inc
aam
cmp
push
jecxz
cmp
ret
jecxz
addr16
adc
inc
add
mov
imul
int3
inc
leave
pop
inc
in
jne
add
adc
gs
inc
int
pop
out
mov
orb
mov
pop
js
scas
fwait
out
movsb
out
sbb
xlat
jle
and
in
adc
pop
xchg
sub
mov
cmp
mov
lds
stos
lcall
sub
faddl
pop
xor
jne
push
xchg
xor
mov
pop
jno
xchg
pop
dec
rcrb
mov
outsb
mov
pop
loopne
mov
popa
lods
add
mov
cmp
scas
dec
mov
push
loop
sbb
popa
ret
aad
inc
mov
fisttpl
jne
stos
aaa
sbb
into
lcall
mov
dec
loopne
jno
jns
jae
shll
sub
and
or
les
nop
xchg
mov
xor
test
add
dec
ret
and
fldl
fmull
negb
mov
mov
ds
inc
dec
ja
insl
divb
ds
pop
bnd
sub
aam
mov
ds
sub
dec
dec
enter
pop
sub
outsb
xor
add
cmp
cld
dec
loope
daa
lcall
loop
sahf
xor
jbe
mov
and
lcall
imul
shlb
ljmp
lcall
jne
in
add
daa
jl
push
dec
and
pusha
lret
xchg
xchg
sbbb
xchg
cs
jge,pt
mov
mov
sub
cmp
xchg
cmp
imul
insl
inc
pop
add
stos
aas
cmp
lcall
fsubl
test
inc
cmp
cld
jae
cmp
mov
call
jp
cltd
pop
xor
push
aad
add
push
lock
jmp
out
and
pop
adc
adc
bound
lcall
fimuls
and
inc
ret
pop
mov
and
leave
out
aaa
fwait
or
mov
daa
loopne
push
aas
push
aad
mov
jb
stc
fidivs
sbb
add
cli
inc
jmp
mov
xor
orl
cmp
cmpsb
fnstsw
or
je
jp
cld
pop
sub
dec
mov
test
add
in
adc
lcall
ss
fnstsw
lahf
mov
ds
imul
push
test
ret
fisubs
lcall
mov
fmull
sub
mov
cmc
fimuls
stos
loopne
cmp
ds
js
in
shlb
jl
pop
insl
test
mov
or
mov
orb
fstl
in
or
sub
cwtl
dec
daa
loopne
fwait
mov
lea
fcos
ret
lds
dec
jle
jecxz
and
fbstp
cmp
lds
jg
xchg
sub
in
andl
cmpsl
sti
rcrb
loope
xlat
dec
cld
sahf
inc
test
cmp
ret
fwait
mov
das
cld
les
pop
daa
xor
jne
cmp
lods
call
or
jp
push
aaa
mov
xchg
lods
dec
adc
xchg
into
and
out
fmuls
mov
push
sahf
out
sbb
sbb
inc
fldt
es
fldl
push
sbb
dec
es
jns
inc
mov
sbb
in
aas
test
pop
hlt
cmc
xchg
and
adc
inc
push
jge
es
cmpsl
data16
push
pushf
outsl
or
xchg
je
cltd
gs
xor
fidivrs
jp
lods
mov
bound
xor
cmp
test
daa
pushf
dec
sub
scas
mov
std
sahf
add
repz
or
xlat
xchg
ret
dec
mov
xchg
push
xchg
ds
jns
xor
and
lret
mov
cmp
pop
shlb
xorb
dec
inc
mov
lcall
or
fldl
or
call
je
daa
mov
test
out
cmp
loopne
repz
cld
add
lcall
lret
in
lcall
in
mov
jo
sahf
rcr
sbb
out
sub
jno
cltd
ds
mov
cltd
cmpsl
xor
sarl
adc
pop
les
rcrb
sarl
adc
ljmp
mov
push
mov
inc
out
sbb
sub
loopne
jmp
xchg
into
repnz
push
sahf
mov
pop
push
mov
lock
sub
or
push
mov
adc
pop
negl
stos
push
ja
add
jb
dec
jle
and
leave
mov
out
leave
or
inc
pop
xor
pushf
cltd
popf
and
mov
fwait
sbb
loop
pop
mov
pop
lods
sub
jb
daa
ds
loope
outsl
jge
cwtl
and
lcall
dec
hlt
faddl
hlt
loope
cmp
ds
imul
adc
js
bound
ds
xchg
push
push
out
addr16
cmp
mov
divl
push
aam
int3
adc
sub
mov
pop
adc
fstl
cmp
ljmp
mov
repz
decl
mov
test
dec
fidivrs
outsl
fists
dec
mov
lcall
inc
mov
lret
or
mov
mov
inc
or
scas
pop
mov
lahf
jno
stos
dec
and
and
arpl
inc
xlat
test
xchg
test
sbb
testl
push
cmc
icebp
jo
stc
sahf
jl
push
dec
pop
pop
xor
dec
decl
fwait
push
mov
aaa
test
movsl
arpl
push
dec
pop
mov
dec
pop
sahf
mov
pop
jmp
adc
xorl
xlat
loope
ret
outsl
popa
xchg
ds
sub
fdivs
mov
jns
into
stos
sarl
or
imul
and
push
or
aaa
xchg
or
mov
lcall
subl
rcl
out
jnp
lock
add
popf
mov
mov
clc
xbegin
lretw
aas
mov
sub
dec
lock
stos
sbb
imul
or
push
js
and
call
xor
stc
rorl
mov
out
testb
subb
sarb
aas
inc
js
fsubrp
test
mov
jmp
sbb
add
in
movsb
jns
pop
movl
cmc
xchg
ss
push
jp
nop
fwait
repz
fwait
cmp
repz
mov
pusha
ds
add
lea
push
jmp
push
and
push
push
scas
inc
mov
stc
enter
repnz
mov
nop
fs
lcall
cmp
cmp
mov
jb
jb
push
lds
in
nop
cmp
es
pop
test
dec
les
std
mov
mov
rorb
bound
or
lahf
clc
out
gs
push
inc
jp
inc
pusha
xor
mov
and
imul
push
rorl
xor
fs
push
aaa
lret
fisttpll
cmp
subb
xchg
loope
xor
dec
pusha
inc
lcall
shrl
fstpl
ret
mov
in
clc
xor
std
mov
lcall
mov
sub
lret
push
mov
jmp
ret
pop
cmp
mov
test
ffree
inc
call
sbb
adc
sarb
jbe
cmp
jbe
cmp
sbb
inc
push
pop
jmp
mov
lcall
mov
sbb
ror
or
fstpl
aaa
or
out
in
clc
cmpsb
aas
push
imul
test
mov
pop
outsb
mov
add
fnsave
or
sahf
or
sub
and
jbe
das
jbe
enter
lcall
inc
ficomps
add
and
dec
js
xor
mov
mov
fisubs
jle
das
ljmp
push
mov
jo
cld
cmp
aas
imul
outsb
mov
pop
icebp
loop
push
jno
pop
lret
xchg
jnp
and
fsubl
nop
dec
xchg
cmpsb
loopne
inc
sub
inc
mov
dec
pop
cmp
bound
loope
mov
in
lahf
fcompl
jmp
aaa
fwait
sub
adc
inc
push
pop
pop
in
movsl
xchg
jb
into
out
leave
push
push
ljmp
add
in
dec
cltd
cmp
scas
hlt
js
adcl
lods
or
pop
call
out
xlat
or
in
cld
movsb
lcall
cwtl
sub
fidivrs
mov
faddp
inc
les
mull
imull
sbb
les
xor
dec
sub
mov
pop
push
cli
sub
es
stos
pushf
icebp
mov
lods
lcall
xor
xchg
xchg
mov
push
ss
sub
or
out
jno
adc
test
adc
jmp
jb
ljmp
push
add
aas
cmp
add
jmp
out
fmuls
cld
int3
je
xchg
inc
stos
or
fs
mov
ds
sbb
ljmp
sub
mov
mov
fsubrl
jb
int3
inc
push
movsl
je,pt
xor
and
das
jbe
jno
mov
in
or
mov
repz
and
aaa
daa
mov
fdivr
es
setae
pop
aas
lcall
jbe
loopne
mov
dec
dec
ja
aam
dec
cmp
mov
and
ds
inc
enter
cld
cmp
lcall
xor
lcall
dec
aad
lock
jmp
lret
aaa
scas
data16
inc
jae
cmp
test
out
stos
ret
mov
push
loop
aam
xchg
neg
test
mov
dec
push
xorl
clc
adc
cmp
xchg
mov
lret
out
insb
lea
jmp
mov
sar
xlat
fnstsw
lcall
xchg
scas
loop
xor
loope
add
jbe
push
aaa
ret
repnz
mov
jl
sbb
in
ret
mov
jmp
pop
fnstenv
pop
movsl
push
cmp
cmp
mov
xchg
lret
add
imul
addr16
adc
mov
push
xor
mov
repnz
mov
xchg
jnp
sbb
dec
push
in
cmp
fwait
inc
inc
mov
fsubp
jmp
cmp
out
sbb
mov
notl
cmp
xor
mov
dec
xchg
push
mov
hlt
mov
mov
in
cmp
fs
ljmp
das
mov
adc
and
xchg
scas
cli
scas
inc
lock
mov
ja
jmp
fmull
sbb
pop
cmp
pop
pop
cmpl
lds
lahf
aaa
aas
jge
xchg
mov
xor
movsl
inc
pop
jle
sub
dec
add
in
xchg
dec
fdivs
cmp
jae
outsb
dec
pushf
lret
pop
fstl
mov
mov
add
test
ja
fs
int
xor
push
stc
outsb
ljmp
jle
fldcw
pusha
mov
leave
inc
inc
mov
mov
adc
aam
and
inc
xor
jp
cmp
enter
adc
cmp
fldl
jg
mov
call
sub
iret
ss
xchg
inc
pop
and
lods
fsubl
cmp
sti
cmp
fcomps
bound
inc
data16
sbb
fcomi
imul
gs
sahf
js
int3
fcompl
je
test
jecxz
cmp
iret
aaa
sbb
dec
aam
lcall
cli
ja
sti
ss
sbb
test
pop
aas
push
mov
aaa
lods
inc
loop
mov
outsl
jmp
mov
mov
fisttpll
push
lea
or
aad
cmpsl
and
sbb
sub
push
imull
popf
in
sbb
out
xchg
xchg
stos
inc
lcall
aas
sbb
sub
mov
jl
cs
icebp
jp
cmpsl
cmpxchg
sbb
in
dec
ljmp
jne
lcall
pusha
xchg
fisttpll
movb
and
cmp
ret
mov
sub
test
inc
std
jg
fisubs
test
xchg
inc
push
sub
inc
mov
movsl
adc
mov
int
lea
jo
pop
mov
aaa
iret
xlat
and
test
mov
cmpsb
aaa
pop
test
inc
shrb
clc
fstps
aaa
rcll
mov
repnz
jge
push
rcr
and
dec
or
lcall
movsb
pop
fdivrp
fildll
dec
adc
mov
fnstenv
fsubrs
or
mov
pushf
lock
lods
mov
insb
fildl
lock
in
test
sub
mov
lcall
or
sbb
lcall
add
mov
pusha
leave
xor
stc
xchg
lock
mov
lcall
jg
mov
mov
push
fistps
test
insb
aas
cmp
pop
cmp
sbb
push
lcall
cmp
mov
fsubrl
js
loope
fimull
dec
xchg
aad
cltd
xchg
and
clc
pop
test
and
pop
popa
lcall
sbb
fwait
push
mov
dec
sub
inc
insb
lcall
cmp
sub
adc
push
mov
mov
or
pushf
js
mov
shrb
inc
adc
std
call
lods
sbb
jbe
pop
or
insl
ljmp
jns
mov
loopne
sbb
or
push
xorl
inc
std
pop
xchg
push
lods
repnz
sahf
cli
pop
pop
ret
sbb
test
les
fsubs
fmull
rcll
lcall
in
fsubrl
cwtl
push
push
inc
sbb
push
icebp
repz
add
into
xor
jbe
popl
mov
ja
sbb
adc
mov
xchg
pop
cmc
fs
ljmp
and
pusha
in
mov
pop
ss
pop
sbb
out
jg
cmp
cmc
add
cmc
jbe
test
mov
pop
in
sub
arpl
aam
mov
stos
pop
xor
ds
push
outsl
sahf
jp
andb
negb
movsl
xchg
scas
push
add
xchg
pop
add
inc
lcall
lcall
rcll
scas
fwait
bnd
out
xchg
outsb
xchg
addr16
cld
pop
mov
cltd
fsubp
lcall
ret
mov
lock
aam
es
fwait
mov
mov
pop
mov
dec
cmpsl
jle,pt
out
leave
pop
and
in
ss
push
mov
inc
shrl
add
cmp
xchg
xchg
mov
in
sub
xchg
mov
pop
aas
ret
mov
fcoml
push
inc
adc
dec
cmp
cmp
in
add
bound
loopne
sub
test
cmp
mov
test
inc
repz
out
lods
lock
cltd
push
pop
fstpt
adc
jnp
cmp
leave
out
les
mov
into
xor
inc
sub
jmp
pusha
rep
sahf
mov
xor
and
pop
mov
out
into
inc
mov
clc
faddl
or
inc
ljmp
mov
mov
mov
push
je
arpl
xor
stc
out
inc
std
mov
int
fwait
mov
cwtl
push
in
loope
xchg
dec
cs
and
jne
sti
jg
mov
mov
lods
aas
fstl
dec
dec
in
push
jmp
ds
pop
sbb
mov
aaa
stos
inc
cltd
cli
lcall
out
mov
pop
es
fiadds
in
xor
repnz
push
and
insb
jo
inc
cmpsl
nop
dec
lcall
outsb
test
call
negb
data16
pushl
xchg
mov
xlat
dec
addr16
sbb
fucom
cmp
loop
jle
pop
and
mov
cmp
pop
das
sbb
fstp
lret
mov
fldl
jo
xor
xor
sub
pop
pop
pop
xchg
add
push
fnsave
bound
push
adcb
cmp
dec
ds
inc
mov
pop
ja
shll
and
sahf
call
icebp
mov
repz
inc
lahf
stc
or
ficompl
popf
into
cmp
fisubs
mov
movsb
sbb
cltd
insb
out
imul
inc
adc
jno
out
push
jo
loope
dec
ja
mov
mov
adc
int
ficomps
xchg
add
cmpsl
std
xorl
push
mov
pminsw
inc
xor
rcrb
cmp
lcall
fsubs
fldt
ret
inc
icebp
fcoml
out
lea
pop
mov
divb
fisttpll
outsl
jg
mov
jle
push
out
mov
add
sbb
add
jb
cmp
iret
and
adc
ds
iret
arpl
push
mov
mov
pop
mov
aas
lcall
fcmovnb
ljmp
and
out
aaa
sub
aam
lahf
stc
aaa
jmp
or
ret
mov
dec
jne
cmpsl
mov
pop
pop
sahf
fcompl
repnz
enter
test
aaa
pop
xchg
sbb
test
out
leave
add
add
adc
scas
in
shlb
mov
aas
outsl
sbb
or
popf
cli
fwait
jo
aad
fmull
cmpsl
lods
mov
pop
lcall
inc
call
sti
jge
sbb
mov
popf
adc
leave
popl
sbbb
in
in
xchg
nop
and
hlt
lcall
inc
stos
adc
push
sbb
jle
test
js,pt
cli
dec
jp
aas
loopne
mov
mov
push
pusha
cmp
ret
sahf
xor
and
xchg
popf
sub
lcall
pop
or
insb
dec
lcall
ds
fnstsw
scas
mov
cmp
jle
int3
pop
and
aad
js
sub
in
ds
mov
sub
ja
loop
mov
movsb
inc
mov
jp
es
popl
mov
aaa
mov
test
sbb
dec
bound
nop
fwait
pop
iret
ret
popa
adc
ljmp
mov
addb
cwtl
mov
pop
cmp
mov
int3
sti
arpl
xchg
sub
fidivrs
jp
sub
add
popf
dec
das
dec
scas
insb
mov
in
push
pop
dec
or
scas
fdivrl
dec
hlt
insl
outsl
aam
inc
pop
mov
xchg
cmc
in
out
dec
fs
mull
mov
ss
lcall
stc
mov
or
mov
push
mov
inc
add
fildl
hlt
jbe
pop
mov
ret
adc
loopne
ret
sarl
dec
xchg
mov
add
mov
xchg
mov
fs
or
lods
mov
pop
add
push
js
in
fisttpll
outsb
fisubs
fs
xchg
out
lds
dec
mov
sbbb
mov
pop
cli
fs
sbb
dec
pop
fldl
out
movsb
aad
mov
leave
cld
daa
jp
popf
dec
lcall
and
jp
mov
lods
mov
add
xchg
inc
xlat
xchg
jbe
pop
push
xchg
cmp
daa
test
mov
cmp
in
loope
stos
mov
lods
scas
enter
loopne
inc
xor
cmp
mov
mov
out
std
aaa
pop
push
jl
push
push
xchg
cmp
pushf
mov
push
and
push
mov
adc
dec
inc
mov
pop
cwtl
sub
xor
outsb
icebp
gs
dec
push
adc
stc
add
push
test
test
stos
sbb
aaa
push
cmp
pop
lcall
ljmp
pop
mov
jno
sub
mov
inc
aas
ffree
das
rcrb
loop
imul
test
das
ret
xor
test
mov
jne
data16
push
jnp
cli
jecxz
jmp
pop
ret
mov
jle
and
ret
xchg
sub
push
cltd
push
xchg
out
out
cmp
sub
inc
xchg
popf
inc
lcall
sub
mov
xchg
aas
notb
je
jne
gs
aaa
test
sub
sbb
pop
dec
fbld
cmp
and
and
and
push
lds
xorl
loopne
in
lcall
push
paddusw
or
lea
cli
pop
cmpb
mov
or
xorl
and
mov
mov
push
push
add
mov
subl
dec
fdivrs
filds
mov
cmp
lcall
imul
test
pushl
xor
shll
pop
push
mov
cli
test
adc
push
mov
sub
negb
lods
lods
cmc
sub
and
cmpsl
dec
push
notb
cmc
shll
sbb
mov
call
mov
movsb
sbb
mov
test
mov
aas
mov
add
sarl
cmp
int
test
in
jno
push
inc
xlat
mov
inc
int3
out
movsl
lcall
sub
inc
mov
pop
cmp
mov
fisttpll
mov
lock
dec
and
dec
push
in
inc
mov
std
lods
pop
bound
ss
mov
lea
inc
sbb
mov
test
jp
or
mov
add
test
movsb
sub
mov
imul
out
fwait
xchg
xorb
xlat
cmpsl
pushf
lcall
sbb
pop
and
jmp
out
fildl
cmp
nop
pop
popa
push
lret
ret
addr16
aas
enter
and
pop
call
ds
mov
and
push
pop
cmp
push
push
mov
out
ficomps
cwtl
les
pop
adc
xchg
jmp
xchg
sbb
inc
inc
in
and
shr
sub
cld
fistpll
in
int3
rolb
shl
pop
mov
aaa
mov
mov
dec
adc
and
pop
fs
adcl
sbb
adc
jb
push
push
mov
std
in
mov
cmp
mov
jns
fcmovnbe
cmp
jnp
push
repz
ds
pop
fsts
mov
fldl
outsb
setbe
aas
aad
mov
jmp
insb
mov
xchg
nop
aaa
jle
dec
mov
loop
je
sub
mov
loope
daa
jecxz
test
lcall
dec
cld
ficoms
sbb
jge
pop
mov
add
jns
dec
loopne
inc
fwait
xor
dec
test
es
in
pop
ds
mov
jle
outsl
repz
out
cmp
add
lcall
jg
mov
fadd
mov
subl
mov
cmp
mov
cwtl
lods
or
test
and
icebp
dec
ds
aad
cmp
or
inc
outsb
mov
xchg
popa
sbb
int
mov
psubsw
imull
testl
sbb
xor
or
jo
hlt
jl
push
call
test
inc
ror
arpl
mov
jmp
xlat
jne
push
sub
enter
push
inc
jnp
push
outsb
pop
shr
inc
mov
pop
mov
add
testl
adc
push
pop
mov
int3
loope
pop
test
dec
cmp
or
mov
insl
es
add
stos
jmp
pop
add
hlt
add
pushf
inc
js
aaa
test
adc
aas
repnz
pop
loop
fstpl
sub
cmp
and
lods
xchg
mov
cli
scas
xchg
or
pop
popf
in
pop
ds
pusha
add
push
inc
mov
mov
or
jecxz
rcll
inc
cli
and
pop
fldl
pop
add
dec
jbe
fists
inc
stos
loope
cmpb
fidivs
inc
xchg
sahf
xchg
incb
jne
mov
lcall
je
jecxz
push
sbb
jbe
fcomps
bound
stc
sbb
outsb
mov
mov
cmp
and
fdivl
xchg
mov
mov
test
jl
fsubl
xchg
aaa
pop
inc
xor
test
adc
jb
incl
int
nop
daa
sahf
jg
rolb
push
pop
sahf
daa
test
out
std
std
xor
aaa
inc
sub
loop
inc
push
test
push
popf
pop
loope
or
faddl
lahf
jl
cmp
cmp
mov
icebp
ljmp
imul
xchg
xchg
pop
pop
gs
cmp
imul
pop
or
mov
shrb
outsb
add
mov
cmp
pop
shll
popf
int3
clc
inc
addr16
cltd
xchg
jno
push
aas
cli
push
mov
iret
ret
pop
shl
ss
jae
dec
push
aaa
sbb
loop
ret
aad
lret
gs
mov
ret
push
adc
pop
xchg
imul
or
cmpsl
sub
jle
out
xchg
mov
mov
xchg
enter
aad
xor
pop
fldl
xor
in
xchg
sti
into
and
jb
push
nop
push
mov
mov
push
lods
aaa
test
cmp
scas
push
push
aaa
jb
dec
inc
push
jno
mov
insl
lahf
sub
loopne
mov
and
xchg
into
pop
add
lcall
adc
jae
test
cwtl
push
fisttpll
mov
lahf
inc
fstps
movsl
jnp
int
jp
fdivr
cld
mov
adc
push
repnz
jae
dec
jecxz,pt
jecxz
clc
xlat
and
push
mov
test
notl
iret
or
out
fdivrl
pusha
and
push
or
dec
xchg
cmp
loop
pop
std
int3
sahf
test
idivb
bound
ds
mov
jg
lcall
xchg
aam
scas
bound
and
bound
in
mov
mov
xchg
fdivrs
call
movb
push
aaa
xor
mov
dec
add
mov
call
fsubl
mov
sbb
inc
inc
enter
mov
enter
xor
mov
or
inc
data16
into
jo
stc
sbb
lcall
aas
lock
sub
inc
pop
incb
inc
andb
inc
cmp
pushf
jge
out
pop
xor
mov
shlb
push
mov
dec
movsb
xchg
mov
popf
pusha
pop
sbb
clc
pop
mov
mov
mov
jmp
pusha
xchg
scas
jmp
dec
inc
jo
jb
pop
mov
push
lret
pop
sub
fildll
ds
lea
pop
push
dec
loopne
add
lcall
mov
cmp
mov
mov
cmp
push
fmul
aas
lods
sbb
aad
stos
repz
dec
mov
das
adc
lods
pop
inc
push
fwait
push
movb
in
mov
push
clc
sub
pop
divl
popa
mov
mov
int
jns
mov
mov
cmpsl
leave
test
jp
clc
mov
pop
aam
adc
lret
sbbl
fimuls
dec
dec
adc
or
dec
mov
mov
push
jp
cmp
jo
loope
in
popf
cmpsl
fwait
or
das
ficomps
icebp
jp
ds
push
lahf
push
mov
fisttpll
adc
jne
sarl
mov
inc
arpl
int
adc
shlb
inc
lcall
sbb
ffree
mov
inc
fisubrl
inc
dec
sbb
imul
mov
cs
xchg
adc
and
or
popf
das
inc
fsubl
dec
arpl
testb
es
or
in
movsl
int
add
btc
sarl
mov
xor
addr16
dec
call
aad
sahf
repz
ds
mov
cs
jecxz
loop
sti
inc
out
bound
xchg
imul
sbb
mov
lcall
or
mov
pushf
mov
pusha
add
pop
fwait
into
imul
or
popf
lcall
and
int
sub
fsin
enter
mov
out
loope
filds
stos
add
clc
jp
ja
gs
daa
negb
repnz
inc
add
dec
pop
jp
inc
jge
dec
dec
dec
fistl
xor
fldlg2
adc
add
jno
xchg
sbb
enter
cmp
mov
fcoml
movsl
jle
inc
in
sti
aam
call
outsb
out
dec
sti
aaa
push
pushf
test
sahf
pop
mov
and
mov
xchg
fstpt
pop
pop
hlt
inc
mov
and
sahf
cmp
sub
mov
mov
mov
inc
out
sub
xchg
jge
mov
mov
and
ret
pop
loop
mov
imul
sbb
fimuls
jecxz
je
mov
push
inc
sti
and
cwtl
ss
pop
dec
aaa
mov
lcall
pop
pop
cltd
fidivrs
sub
mov
out
mov
push
add
in
dec
imull
mov
into
and
mov
aaa
add
adc
inc
in
fisubrs
cmp
test
mov
imul
pop
pop
sbbl
mov
insb
cmc
stos
pop
mov
inc
mov
das
or
in
outsl
cmp
xor
fmull
pop
mov
push
ja
lds
push
add
jp
sbb
out
and
mov
lret
cmp
xchg
out
fmull
les
repz
out
xchg
sub
mov
mov
inc
lcall
add
out
out
mov
divb
cmp
xlat
gs
mov
sbb
lea
lcall
shll
imul
lcall
inc
loopne
aad
ret
jecxz
mov
mov
or
stos
dec
imul
or
and
mov
inc
cmp
bound
into
imulb
lahf
cmp
rorl
xchg
push
push
sbb
aaa
and
sbb
mov
xor
lcall
sbb
fistl
cmp
and
inc
and
sub
les
fldenv
ss
ds
jb
ljmp
pop
pop
add
popf
push
das
lea
cli
hlt
pop
shlb
imul
xor
bound
pop
jg
lcall
fstpt
loopne
xor
es
and
ljmp
aam
outsb
les
insl
xlat
cltd
sub
cmp
mov
hlt
xchg
fistps
sbb
cmp
test
imulb
adc
ret
aaa
aam
fisttps
les
mulb
adc
outsl
mov
sbb
out
in
jb
adc
mov
mov
mov
enter
test
movsl
ds
orb
xor
dec
fcom
fstpl
and
pop
cli
push
add
mov
push
sub
and
lret
mov
pop
push
jnp
pop
daa
push
lcall
es
pop
sarl
push
fsubrs
daa
lcall
sbb
scas
dec
call
xchg
inc
rcrb
shl
xor
push
add
movsb
ljmp
movsl
mov
add
xchg
nop
fisttps
js
data16
idiv
lahf
mov
sbb
sarb
ljmp
sbb
cmp
sub
inc
int3
xor
and
mov
mov
jl,pt
cld
jmp
or
adc
pop
test
je
push
xchg
inc
xchg
mov
iret
adc
inc
leave
mov
les
fldenv
js
lods
push
lods
lcall
push
frstor
rorl
pop
mov
mov
js
dec
aaa
jg
cld
xor
cvtpi2ps
adc
pop
pop
andl
sar
push
fcomps
insl
dec
or
fistpl
fistpll
mov
mov
popf
dec
mov
mov
xchg
es
mov
subb
adc
mov
jp
aam
aaa
in
mov
push
inc
subb
int3
pop
mov
call
fdivl
or
push
push
mov
and
jle
lahf
les
cmp
fstpt
lahf
lcall
inc
sbb
lea
lds
sub
fwait
jae
sub
stc
decb
dec
out
lret
sub
out
jecxz
pop
cwtl
ret
loope
lret
ljmp
and
adc
adc
and
ds
pop
imul
cmc
out
fs
xchg
lods
push
dec
fldcw
lea
fdivs
mov
mov
aas
push
out
inc
xrelease
imul
sub
loopne
dec
mov
cld
lea
test
lcall
in
dec
push
aaa
inc
fistps
sbb
enter
testl
popa
pop
test
jns
fidivs
dec
ret
push
fdivl
into
fsub
out
push
pop
or
push
inc
imul
repnz
jns,pn
jmp
lahf
xor
daa
clc
sbbb
jo
daa
mov
push
fisubrl
jb
jne
jl
cmp
rcll
push
cmp
add
or
mov
imul
add
inc
xchg
aaa
sub
mov
cwtl
and
pop
ds
outsl
xchg
aas
inc
shl
mov
fsts
lods
fcomps
mov
test
inc
push
out
and
mov
std
push
and
and
fdiv
inc
les
xor
incl
repnz
cmpsl
ud2
jne
jns
jno
cmpsl
cmp
lcall
xor
insl
je
xor
dec
ret
lahf
lcall
inc
jge
mov
inc
mov
rorl
test
lret
ds
sbb
push
decb
sahf
aaa
mov
test
jg
fdivl
loopne
cli
ss
data16
popf
das
push
lcall
pop
int3
shlb
arpl
negl
pop
inc
xor
test
shll
fldl
cmp
ds
dec
sub
sbb
mov
xor
fdivr
jg
fdivrl
xchg
lret
mov
and
push
fisttpll
js
pop
dec
inc
sbb
dec
dec
mov
dec
ds
cmp
scas
insl
push
push
cltd
or
pop
jb
add
xor
sbb
jge,pt
sbb
dec
push
jp
aaa
ja
lds
sbb
mov
bound
fidivrs
je
shll
leave
js
pushf
jecxz
adc
int3
pop
ror
faddl
sbb
hlt
sahf
sti
cmp
sub
subb
sbb
push
mov
shlb
inc
mov
leave
scas
neg
inc
inc
cs
loopne
adc
ss
fwait
hlt
inc
xchg
loop
mov
jle
inc
in
mov
sbbl
sarl
cwtl
aaa
jb
or
xchg
pop
mov
shrb
push
aaa
cmp
lods
and
pop
jb
and
jae
inc
inc
mov
loopne
sub
sub
mov
pop
dec
mov
bound
cli
lcall
jb
jne
cmp
mov
or
movsb
test
test
sub
and
pop
jp
enter
mov
xchg
mov
xorl
pusha
scas
loope
mov
into
adc
dec
ja
fstl
mov
add
cmp
inc
mov
pop
ret
pop
lds
test
pop
adc
loope
inc
xlat
mov
inc
or
fcmovnu
pop
push
mov
dec
cli
fcompl
in
dec
jge
mov
fistpll
neg
lahf
jecxz
adc
ds
or
sbb
cmpsb
jecxz
pop
add
mov
xor
jp
idivl
pusha
cli
and
inc
jp
xchg
xchg
mov
add
push
pop
mov
xor
inc
sub
pop
mov
mov
int3
dec
cmpl
jbe
stos
xor
ds
jo
cli
shl
jp
fistpll
and
popf
xchg
leave
xor
fidivrs
aas
and
inc
lods
test
and
lret
sbb
mov
hlt
xchg
arpl
push
jbe
mov
mov
stos
jp
and
push
mov
jp
stos
push
or
cmp
push
cmp
sub
movsb
or
sbb
mov
inc
aas
test
mov
sbbl
stos
push
mov
call
mov
push
orb
mov
mov
call
imul
lcall
cmp
add
jp
or
mov
adc
jp
mov
push
insl
test
stc
pusha
jg
pop
cli
inc
inc
cmp
aaa
insl
push
push
xor
inc
sub
rol
in
xor
sbb
and
push
inc
clc
lcall
dec
in
jecxz
dec
mov
mov
lods
xchg
pop
and
insl
loop
cmp
jl
xchg
lcall
lock
cmp
pop
dec
stos
fs
sbb
xchg
sbb
push
aaa
or
sarb
cmp
jmp
mov
orl
divb
leave
xchg
dec
mov
testb
js
inc
cltd
stc
mov
arpl
fdivrl
or
lcall
pop
jg,pt
adc
aaa
mov
mov
mov
bound
in
sahf
and
fmull
imul
pushf
int3
xor
mov
in
in
mov
mov
sbbl
mov
dec
mov
pop
cmp
fistpl
pop
lcall
add
or
dec
das
cmp
scas
in
scas
in
sbb
ret
sub
in
push
imul
ds
leave
xor
mov
in
test
cli
je
pop
push
into
lcall
arpl
fsubrl
lods
adc
sub
ds
insb
test
call
xchg
mov
xor
out
lea
pop
out
popf
mov
into
popf
jo
dec
pop
stos
enter
mov
mov
daa
and
ret
shll
mov
and
dec
jns
cltd
lret
push
neg
popa
dec
ljmp
pop
or
imul
mov
stc
mov
aaa
pop
mov
jb
aaa
mov
sbb
pop
pop
push
ficoms
pmulhuw
int
cltd
lcall
cmp
mov
jecxz
cmp
pop
insl
or
out
outsb
sti
mov
sarl
mov
mov
imul
fs
in
rcll
lret
mov
es
shrl
push
or
fisttpll
mov
jp
mov
mov
test
les
cmc
call
cmpsl
enter
mov
xchg
pop
es
dec
rol
vaddps
pushl
inc
push
bound
repz
hlt
aas
xchg
dec
mov
and
sub
pop
out
sub
ds
das
sub
inc
adc
lcall
cmp
mov
add
lret
push
pop
jne
ds
cltd
stc
adc
adc
rcrb
sbb
daa
push
ljmp
dec
cmpsl
jmp
inc
push
mov
insl
push
and
inc
ja
movsb
sub
inc
cmpl
movsl
popf
xorl
push
jecxz
xchg
lcall
mov
push
movsl
leave
sub
outsb
mov
push
test
int
push
push
push
aaa
cmpsb
push
mov
adc
mov
mov
movsl
adc
leave
cmp
lret
pop
mov
pop
mov
xchg
sub
inc
mov
lret
mov
xchg
adc
push
mov
jl
pop
lahf
loop
mov
mov
or
outsl
popa
xor
inc
and
cmp
scas
loop
fs
inc
loop
xchg
jge
mov
jmp
push
sbb
sub
add
mov
fisubrl
mov
mov
and
pop
sbb
aaa
ret
data16
pop
push
mov
mov
add
in
sub
sbb
or
lds
push
jns
out
in
setle
fldenv
jb
fmuls
mov
cmp
imul
pop
sbb
insl
xchg
lret
sub
ss
push
xchg
out
into
cltd
je
mov
and
jnp
adc
scas
mov
pop
dec
mov
xor
es
push
mov
pop
push
inc
in
das
pop
cmpl
push
sbb
pushf
pop
add
jl
sbb
inc
sti
outsb
mov
sub
or
pop
pop
jp
ss
push
ds
daa
sub
fcomp
insb
inc
aaa
push
pop
leave
mov
cmp
lods
aad
mov
or
int3
mov
in
xchg
or
aaa
leave
sbb
mov
mov
sbb
movsl
aaa
pop
inc
lcall
dec
mov
mov
ds
sbb
adc
shrb
adc
out
cmp
pop
hlt
jns
aaa
icebp
addr16
mov
lods
arpl
or
in
je
cmpl
xchg
lret
imul
sbb
mov
pusha
and
mov
add
scas
push
add
je
pop
popf
imul
sar
pop
or
icebp
iret
pop
and
cmp
in
and
iret
subl
dec
fsubs
push
cltd
sahf
cmp
ret
sub
gs
pop
mov
cmc
adc
lret
mov
push
pop
fcompl
mov
mov
add
lret
jno
loopne
pushf
push
push
inc
imul
pop
pop
test
movsl
xor
cmp
repz
incl
inc
push
mov
dec
stos
repnz
adc
stc
scas
ret
mov
cmc
xchg
lcall
mov
fmulp
jp
jecxz
addr16
in
cltd
lcall
iret
sbb
mov
leave
in
xor
aam
out
stos
test
or
clc
call
push
outsb
test
leave
mov
fildll
dec
ds
negl
cmp
cmp
mov
scas
mov
sub
movsl
dec
stos
mov
mov
dec
mov
les
movsl
jmp
fisubl
sub
int
sub
jno
mov
inc
inc
mov
jp
and
testl
mov
xchg
mov
and
fnstsw
or
bound
dec
inc
or
and
aaa
out
mov
cmp
sbb
and
loope,pn
push
ljmp
cmp
sbb
mov
xchg
pop
push
cmp
xchg
fldt
sub
aaa
rol
sbb
es
mov
out
cmp
inc
cs
fcmovu
xor
xchg
or
jns
stos
pop
pop
movsb
cmp
jno
stos
mov
dec
push
sbb
lea
ds
enter
cmp
je
aaa
xorl
inc
or
sbb
pushf
fsubr
cmc
adc
push
out
mov
insl
and
pusha
sbb
mov
rcrb
push
adc
sbb
dec
lret
cs
inc
test
shr
sub
hlt
popl
pop
int3
faddl
loope
addr16
rcrl
xorl
cmc
xor
adcb
mov
xchg
ficoms
push
sbb
fnstcw
push
bound
cmpsb
mov
cmp
repnz
sbb
out
sahf
xchg
cmpsb
clc
mov
cld
dec
mov
lock
jge
lcall
dec
cmp
ja
js
mov
ret
outsl
mov
mov
add
xor
gs
in
dec
lock
jmp
and
inc
cmp
add
and
fbstp
iret
testl
xchg
jae
and
cld
xchg
and
int
mov
nop
jle
loop
cli
cmc
add
out
ja
cmp
pop
mov
dec
mov
add
mov
jg
pop
and
pop
daa
xchg
fsubl
mov
cli
dec
hlt
mov
adc
push
daa
xor
hlt
fcompl
cmp
das
jecxz
xor
and
mov
movsb
jb
mov
mov
cmpsb
lcall
mov
stos
sub
push
push
je
pusha
xor
pop
mov
mov
add
cltd
or
mov
xchg
sarb
aaa
inc
in
xchg
sub
push
mov
and
cli
adc
test
add
push
adc
cwtl
mov
popa
cmc
cmp
xchg
mov
fdivrl
xor
mov
rcrl
mov
pop
scas
fdivl
mov
mov
andb
inc
insl
idiv
add
mov
cmp
adc
cmp
jbe
lret
and
jle
add
popf
or
std
loope
and
inc
sbb
mov
jg
and
pop
loopne
sti
dec
cmc
dec
aaa
xchg
push
cmp
sar
lcall
js
fldl
rorb
arpl
jge
scas
ja
sbb
movsb
pop
popf
orl
pop
repnz
push
stos
pop
mov
xchg
in
push
xchg
clc
repz
add
cmp
push
ret
jecxz
or
ds
cmp
push
pop
mov
mov
dec
adc
out
add
cld
jecxz
fcoms
push
aam
jns
fs
push
mov
inc
or
adc
inc
repz
ret
jno
sbb
dec
mov
pop
and
dec
mov
fcomi
shrl
fisubrs
and
imul
fcomip
lret
shll
inc
mov
push
aas
es
fisttpll
xchg
mov
ljmp
xchg
cmpsb
inc
cmpsl
fdivrl
sbb
jo
repnz
pop
mov
gs
outsl
arpl
ficompl
pop
daa
sub
rorl
pusha
push
data16
mov
pop
lcall
cmp
movsb
push
mov
fidivl
inc
pop
sahf
jne
fisubrs
xchg
push
jge
push
aaa
mov
fcomps
mov
nop
imul
jne
lods
shll
and
sub
and
pop
ret
inc
push
fisttpll
ja
dec
imulb
sbb
insb
dec
mov
stc
movsl
aaa
add
push
sbb
sbbb
jge
push
pop
sbbb
pop
lock
inc
mov
fcompl
cmp
pop
xchg
and
mov
addr16
inc
inc
daa
pop
push
stos
jbe
mov
inc
add
mov
mov
mov
out
push
ds
xchg
dec
xlat
ss
xor
xchg
out
inc
jmp
cld
aaa
pushf
loopne
dec
shl
mov
inc
mov
xchg
stc
aas
add
sti
pop
clc
dec
hlt
enter
inc
mov
stc
aaa
fwait
subb
fisttpll
xchg
sbb
fldt
int3
jmp
cmovg
push
push
pop
mov
inc
push
aaa
cli
enter
ret
sub
or
dec
pop
hlt
addr16
mov
idivb
clc
mov
imul
pop
push
js
fidivs
cmp
std
repnz
jae
jnp
sub
xchg
daa
pop
push
pusha
jae
fildl
push
addr16
ljmp
push
sbb
jecxz
in
ret
cs
out
mov
push
aaa
adc
jmp
pop
rorb
shll
cmp
inc
or
add
inc
push
mov
rcrl
cld
fiadds
adc
insb
movb
data16
and
jbe
dec
in
and
mov
popf
mov
ret
test
inc
cmp
loop
js
xlat
in
jb
ds
xchg
jno
push
scas
xchg
pop
test
xchg
dec
test
sub
fldl
iret
lret
push
icebp
xchg
ja
je
or
mov
imul
fwait
int3
out
addr16
push
cmpsl
push
sbb
push
aam
std
cmp
sbb
or
cmp
and
ror
jne
inc
mov
scas
inc
add
sub
jae
popf
aaa
loopne
dec
lods
adc
cmp
lcall
inc
mov
ds
test
lahf
inc
leave
scas
sysenter
sbb
cmp
imul
out
mov
rcrl
sbbb
adc
xor
fistpll
push
ds
and
aas
push
cmp
loope
jp
pop
ret
push
sbb
xor
lcall
sbb
cli
ljmp
push
jns
fwait
je
push
mov
xor
andb
lods
fnsave
fnstcw
xlat
push
xchg
push
and
mov
out
mov
pop
or
mov
popf
ret
mov
inc
jg
pop
fnstcw
push
sbb
xchg
fldl
jns
and
cmpsl
mov
test
jmp
pop
inc
and
sbb
dec
sarl
ds
add
ret
stos
or
in
movl
fstpl
stos
sub
dec
sbb
and
mov
test
jmp
aas
xor
xorb
sahf
mov
xchg
aaa
movsl
out
movsl
outsb
jle
aad
in
fiadds
or
lods
mov
in
or
lds
cmp
mov
and
test
popf
sarl
add
popf
adc
sbb
lods
sbb
cmp
enter
pop
mov
lcall
xor
adc
mov
add
inc
lret
push
jb
jmp
cmpsb
mov
push
push
aaa
int3
in
xor
fwait
jns
scas
add
fwait
adcb
cmp
jp
out
push
push
add
test
fldl
inc
icebp
jle
inc
movsb
int3
jle
mov
lret
dec
fbstp
pop
test
cmp
loopne
mov
sti
push
dec
mov
out
cmp
adc
test
int3
cmp
es
push
fadd
dec
lock
aaa
pop
imul
jnp
pusha
cmpsl
xchg
mov
rcl
cmp
jle
shrb
out
xor
push
out
jp
push
sahf
cld
cs
and
xchg
sbb
out
mov
push
mov
mov
shlb
repnz
add
xor
mov
je
xchg
cmp
and
arpl
push
mov
jge
push
cltd
or
pop
int
js
in
lods
jecxz
leave
cmp
lock
mov
ljmp
test
push
add
pusha
jbe
outsl
xor
sub
or
or
sub
leave
xor
repnz
push
mov
nop
out
push
cmp
loope
lea
repz
andb
in
jecxz
rcr
push
mov
mov
mov
push
sub
repnz
adc
lcall
mov
lcall
in
sbb
fisttpll
or
inc
fisttps
mov
or
fsubrs
cmp
mov
pop
pop
popa
mov
ss
fidivs
mov
lahf
mov
mov
inc
xor
add
movsb
jb
push
gs
lea
sub
dec
lret
xor
mov
cwtl
cmp
outsb
enter
mov
push
mov
jae
lock
aas
and
int3
mov
repz
cmpl
mov
lods
xchg
sahf
test
dec
lods
push
addr16
dec
mov
xchg
aaa
xchg
xchg
mov
xchg
inc
xchg
mov
pop
movsb
mov
cmp
imul
mov
test
ds
fidivrl
fmull
add
fadd
adc
lret
ss
arpl
mov
orb
out
lock
cld
jb
xchg
lret
pop
repnz
pushf
inc
movsb
mov
push
sbb
mov
addb
pop
or
daa
xor
test
pop
jbe
fstpt
push
out
mov
movl
not
pop
ss
mov
pop
lret
or
xchg
cmp
mov
in
jle
cmp
lcall
mov
rcrl
in
mov
std
daa
aas
loop
and
mov
rorl
icebp
xlat
pop
cld
aaa
push
dec
movsb
div
jne
aaa
mov
mov
jno
stc
jbe
lret
fsubr
mov
ds
mov
ljmp
inc
cmp
pop
jp
pop
cmp
sbb
mov
and
hlt
mov
pop
cmp
into
jp
fnsave
ds
push
mov
outsl
pushf
imul
fwait
mov
dec
dec
loope
aas
jle
and
sti
xchg
mov
jl
mov
cs
xcrypt-ecb
cmpsl
dec
xchg
ds
pop
lods
jb
cmp
mov
mov
leave
adc
xor
mov
add
jns
pop
test
popa
inc
mov
popf
jbe
fldl
negb
lods
inc
ds
xchg
dec
inc
push
jecxz
pop
popf
es
ja
ficoms
jmp
sbb
fstl
cmp
les
lods
push
sbb
in
std
mov
mov
adc
hlt
lcall
inc
add
inc
pop
pop
sahf
mov
imul
cmpsb
mov
movl
dec
mov
dec
mov
cmpsl
idivb
lahf
xchg
mov
dec
lcall
in
idiv
in
ss
jns
cmp
or
cmp
push
mov
inc
loopne
pusha
arpl
pop
inc
lods
mov
cmpsb
cmp
popf
mov
sub
call
aaa
scas
dec
jo
push
movsl
ficoms
xchg
adc
test
dec
add
mov
mov
outsb
or
pop
push
lcall
lods
loop
sbb
push
out
adc
jle
stos
shr
cmp
lods
data16
sbb
popf
jg
bound
pop
cmp
mov
lret
cmp
daa
mov
nop
push
dec
push
cmpsl
call
push
mov
mov
xchg
or
mov
mov
sbb
and
data16
xchg
dec
cmpsb
in
mov
mov
ret
pop
stos
pop
push
mov
dec
sti
lcall
rcrl
frstor
repz
lds
cmp
mov
pop
jno
imul
nop
jb
and
pop
lea
aam
xor
jns
or
pop
dec
es
jp
mov
mov
fldl
pop
aad
clc
adcb
xchg
fwait
addr16
mov
clc
stc
aaa
aam
push
inc
insl
or
mov
rolb
leave
mov
jbe
movsl
lods
pop
lods
inc
inc
mov
dec
pop
ja
mov
xchg
dec
push
inc
fldl
ja
aas
pop
adc
xchg
aaa
adc
xor
cmp
push
mov
jne
push
mov
shrb
test
jge
pop
es
xor
jmp
lds
out
enter
push
cmp
ficoms
and
ja
push
inc
pop
ss
xchg
add
mov
movsl
xchg
frstor
push
rorb
stos
sub
dec
xor
pop
jnp
jne
fnstsw
adc
insb
inc
pusha
mov
ficomps
cld
pop
xchg
adc
pop
push
mov
mov
cli
push
in
pop
scas
cmp
fs
pop
mov
cmp
dec
outsl
mov
push
pop
inc
push
pop
mov
pop
mov
dec
sub
xor
aaa
cmpsl
or
lcall
pop
xor
leave
stos
icebp
pop
bound
es
push
push
cld
pop
pop
ja
mov
leave
mov
repz
push
leave
sub
imul
push
fldl
aad
mov
pushf
jb
mov
add
cmpsb
mov
adc
cmp
inc
int3
cmc
push
inc
or
add
xchg
sbb
xor
popf
inc
loop
cmc
jmp
in
or
leave
cwtl
jmp
xor
jbe
or
mov
mov
cmp
push
push
int3
pop
push
inc
sub
and
ja
scas
pop
movsl
xor
add
in
jecxz
pushf
jne
insl
aaa
push
pop
jmp
ds
hlt
push
mov
push
dec
aaa
out
jae
add
mov
aaa
lds
pop
jnp
mov
arpl
and
sub
outsb
inc
sub
scas
adc
je
lcall
cmp
dec
lods
jge
and
inc
sahf
inc
jg
jge
add
inc
dec
sub
adc
adc
and
jle
and
dec
movsb
or
fisubrl
jmp
xchg
push
stc
xchg
sub
stos
lahf
lcall
mov
and
pop
jae
fcoml
dec
notl
cmp
leave
push
es
dec
insl
fwait
mov
lcall
lods
scas
push
aaa
sbb
jnp
idivb
fwait
cs
test
daa
mov
jb
out
fmull
or
mov
jle
push
ds
andl
bound
notb
mov
roll
sub
pusha
ds
or
mov
jb
je
mov
aas
in
xchg
jns
xchg
jnp
pop
sbb
inc
cmp
pushf
sbb
mov
fisubs
enter
pusha
jno
sbb
xor
ds
lea
lret
jmp
dec
inc
cmp
test
fstl
icebp
add
ds
addr16
inc
scas
iret
mov
add
aaa
sub
add
xchg
loopne
xchg
sbb
dec
mov
bound
push
addr16
xchg
insb
iret
jp
sub
jl
mov
push
in
push
test
sub
jp
push
inc
jle
popf
xchg
loope
aaa
inc
mov
ret
mov
sub
sarb
insb
std
add
fistpl
lods
and
add
or
dec
out
fildll
mov
sbb
pop
lds
jle
lea
push
imul
popf
cmp
jb
shlb
test
push
jg
fisttpll
stos
rcll
lret
jo
mov
jl
jns,pt
xchg
mov
push
mov
sub
les
mov
mov
sarb
clc
mov
ret
shlb
enter
mov
fdivr
inc
sub
hlt
inc
sahf
test
imull
lcall
xor
fistl
lcall
mov
testb
aaa
pop
cmc
inc
mov
bound
add
lcall
push
sbb
lea
test
pop
adc
mov
fstl
cmpsl
mov
mov
mulb
pop
dec
dec
sti
jbe
cmp
sarl
add
push
leave
fisttpll
aaa
jmp
cmpsb
stos
push
xor
sbb
cli
aaa
mov
push
jnp
mov
jnp
fidivl
popa
adc
in
mov
sub
fwait
adc
mov
xchg
cmc
or
shll
loope
lods
testb
aam
loopne
lds
mov
repnz
mov
inc
jb
push
push
and
mov
popf
shrl
or
sbb
loope
ds
mov
xchg
jnp
addr16
push
and
push
int3
inc
ds
and
ficompl
es
mov
jbe
and
inc
popa
test
mov
push
adcl
inc
cmp
sti
loopne
fmull
push
jg
pop
push
sub
int
dec
xor
cmp
notb
cmp
cli
push
mov
pop
push
lods
push
movsb
pushf
and
imul
dec
cld
lret
sti
pushf
inc
mov
jo
arpl
test
pop
in
insl
pop
mov
clc
mov
mov
pop
cmc
ljmp
mov
popf
mov
pop
leave
push
fwait
add
sub
cmp
into
jl
add
jp
xlat
mov
cmp
sub
push
sbb
cmp
sbb
pop
cld
cltd
jle
hlt
push
enter
fidivrs
aaa
imul
mov
idiv
fadd
or
sbb
into
dec
mov
xchg
js
dec
jecxz
xchg
aad
or
push
mov
and
sarb
pop
outsb
xchg
dec
fldl
in
decl
jne
inc
push
in
cltd
cmp
xchg
fsubrl
mov
insl
ljmp
mov
xorl
or
popf
fmul
jns
mov
in
fistpl
xor
mov
mov
popa
push
push
int3
ds
pusha
jbe
push
xchg
jge
mov
xor
xor
popa
icebp
jne
mov
hlt
ffree
pop
pop
imul
enter
add
stos
adc
mov
lods
and
adcl
mov
add
stos
fsubrl
mov
jl
lcall
je
sbb
add
and
mov
add
outsb
and
push
dec
fucomp
mov
daa
clc
push
cmp
inc
aad
test
iret
imul
out
daa
lods
xchg
test
cmp
push
andl
shll
adc
js
ret
clc
mov
shl
dec
mov
cld
fdiv
or
arpl
inc
ljmp
mov
decl
jmp
sub
pop
bound
in
addr16
jp
add
ds
fucom
adc
mov
movsl
pop
gs
lock
bound
dec
lret
push
popf
jno
rcl
add
or
xchg
pushw
outsb
jbe
sahf
fwait
les
test
dec
cmp
dec
sbb
ds
cmpsl
aaa
jb
es
insl
lds
dec
int3
ret
or
cmp
aas
push
mov
xchg
pop
aam
push
pop
mov
imul
push
cmp
or
inc
dec
sub
push
fildl
ror
cmp
mov
mov
lcall
dec
sub
jg
and
aam
cmp
fwait
cmpsb
dec
mov
mov
sub
jmp
cmp
jne
aaa
mull
imul
outsb
add
into
mov
push
cmpsl
movsl
cmp
and
xor
pop
out
rclb
arpl
mov
leave
in
adc
scas
fsub
ficoml
movsl
insb
cmp
daa
mov
bndstx
repnz
adc
pop
cmc
lds
or
data16
jge
inc
mov
fwait
cs
push
xchg
and
xchg
and
mov
pushf
daa
frstor
xor
mov
int
enter
inc
out
push
dec
enter
aaa
enter
xchg
lods
adc
test
enter
test
jl
out
jno
in
jp
lods
insl
mov
into
sbb
enter
popa
sbb
mov
ds
int
and
cmp
mov
into
sub
xor
adc
cmpsb
pop
inc
ret
jecxz
jg,pt
pop
faddp
imul
xor
push
xor
cmp
outsl
sub
gs
in
cmp
lcall
sbb
or
cmpl
pop
mov
inc
pusha
push
scas
adc
mov
dec
test
loope
push
sbb
cmp
push
mov
sbb
xchg
mov
cmp
pop
out
xor
mov
cld
mov
iret
cmp
dec
xchg
jg
add
popf
decl
adc
lcall
lret
inc
fstl
xor
cmp
inc
shl
int
jecxz
rcll
pop
or
les
loop
mov
fimuls
outsl
cmpsb
test
fdivs
mov
insb
out
cmp
ljmp
mov
fnsave
ret
jmp
mov
sub
shlb
lea
in
push
imul
sbb
faddl
hlt
js
inc
adc
add
leave
lods
jnp
dec
addr16
stos
popa
fnsave
sbb
xchg
dec
bound
enter
aaa
xchg
pop
dec
rep
jne
sbb
jle
loope
add
fnstenv
out
xor
mov
out
pop
fstps
sahf
iret
xlat
xchg
ds
and
popa
xchg
pop
stos
fucomp
js
subb
push
shrl
pop
loopne
pop
mov
sub
add
pop
ds
jge
cmp
inc
aaa
ss
inc
fwait
cmp
cmp
outsl
aas
gs
adcb
xchg
sahf
jb
inc
cmpsl
bound
je
add
pop
aas
nop
dec
add
sbb
jo
sbb
sub
inc
stos
aad
clc
sub
cmp
data16
sub
cld
jecxz
es
push
or
jmp
jns
stc
adc
test
fmul
call
lahf
jb
push
aam
add
das
movsl
push
or
cmp
popf
cli
lcall
rcrb
sbb
mov
push
inc
int
inc
pop
ds
cs
dec
fwait
sub
mov
sub
repnz
sarb
sub
ds
cs
lahf
mov
xor
cmp
addr16
mov
jmp
int
pop
aas
lods
cmp
test
inc
imull
and
sbb
pop
pop
inc
cmp
and
test
dec
push
mov
pusha
cmp
popf
pusha
jb
add
add
js
add
cmp
mov
mov
loop
mov
mov
fnsave
fs
inc
inc
cmpsl
mov
enter
cmp
negl
repz
push
out
mov
ja
mov
pop
lods
bound
repnz
push
sub
jle
or
cltd
ljmp
pop
shlb
inc
pop
push
or
das
cmpsb
mov
push
scas
mov
js
xchg
cmc
cmp
pushf
mov
lcall
das
inc
cmpsl
leave
pop
push
neg
xor
movsb
pop
ds
jecxz
add
arpl
fidivrl
sub
das
push
repnz
dec
jle
xlat
sahf
test
xchg
add
pop
sub
aas
sar
sti
stos
fmul
aaa
xchg
jne
dec
or
pop
lods
sarl
adc
pop
sub
cltd
mov
jns
nop
dec
mov
fisttpll
inc
push
jb
push
lcall
sarb
cmpsl
pop
adc
mov
int3
cmp
cmp
cmp
sbb
jl
dec
stos
cmp
pop
cmp
clc
fstpl
xor
in
push
fiadds
in
rclb
mov
leave
mov
pushf
mov
lock
pusha
ds
aas
jp
out
inc
lcall
jmp
into
ds
lahf
sub
fcmovnb
jne
lock
mov
and
and
lcall
dec
pop
fnstsw
cmp
sbb
mov
jecxz
shlb
cwtl
jmp
and
ljmp
sbb
adc
adcl
sahf
rclb
jb
ljmp
fbld
mov
mov
imul
xchg
xchg
mov
and
stc
mov
sub
pop
es
mov
mov
pop
push
push
jae
jmp
fs
jbe
push
loop
and
lds
fstpl
and
mov
and
popa
add
loop
mov
aam
repnz
mov
mov
loopne
cmp
sbbl
lock
and
fisubs
imul
add
aaa
stos
fbstp
push
or
or
or
daa
push
fstpl
mov
cmp
ret
push
fcom
shlb
pop
into
jae
push
pop
aam
mov
mov
fs
cmp
fstpl
fdiv
sbb
or
scas
xor
mov
dec
cmc
loope
fimuls
mov
cmpsb
and
daa
pop
das
fisttpll
out
mov
dec
jecxz
enter
inc
mov
sbb
inc
ret
adc
mov
stc
pop
cmp
pop
cmp
test
sub
mov
inc
mov
sbb
lret
hlt
insb
repnz
xlat
cltd
inc
pslld
adc
ret
fsubrl
cltd
in
stos
pop
aaa
sbb
sbb
lcall
cwtl
icebp
cli
pop
fnsave
les
idivl
stos
mov
out
cmp
js
stos
or
fwait
ja
mov
paddsb
mov
outsb
and
push
push
xchg
sti
or
loope
jecxz
cmp
mov
aad
lret
daa
xchg
lcall
xlat
and
xor
mov
pop
mov
jae
shll
lret
mov
cmp
jb
aas
cmp
pop
popf
cwtl
push
int
mov
je
and
jl
daa
ret
or
or
xlat
mov
or
mov
bound
mov
lcall
scas
jb
out
jbe
and
repnz
sahf
bnd
sbb
out
xchg
mov
sub
push
cli
mov
loopne
dec
pmaxub
dec
repnz
pop
aad
mov
jo
xchg
repz
mov
pushf
and
jmp
shlb
dec
notl
adc
xchg
dec
mov
jo
in
jg
push
and
sbbb
mov
aad
add
aas
jmp
lcall
pop
rorl
in
pop
push
lret
cwtl
out
mov
jge
in
fdivrl
xchg
int
into
arpl
cmp
cmpsl
faddl
jnp
pusha
nop
cmpsb
xor
sub
push
adc
js
push
jbe
aad
lret
aaa
lret
fdivl
xor
outsl
cs
jbe
lcall
dec
mov
pop
adc
sub
inc
fisubrs
mov
or
jnp,pt
push
inc
add
fucomip
xor
cwtl
insl
sbb
sbb
push
mov
xorb
sti
scas
sub
xor
dec
aaa
push
lcall
fwait
sbb
push
div
out
sbb
sbb
ret
out
jnp
mov
mov
mov
inc
lcall
fdivr
push
or
aad
daa
or
testb
inc
pop
inc
inc
aaa
in
sub
xchg
rcrl
ja
mov
fsub
inc
and
in
cs
and
ljmp
inc
sub
mov
mov
lahf
or
lea
out
aaa
mov
adc
ja,pt
inc
ljmp
popf
bound
aad
push
lret
add
pop
xorl
rorl
outsb
mov
xchg
cs
xchg
sub
push
mov
popf
jmp
mov
mov
aam
cmp
aas
push
jl
inc
stc
dec
dec
cmp
stc
hlt
adc
js
add
in
loope
out
inc
das
cs
pop
sahf
mov
xlat
push
ss
cmp
inc
mov
mov
sahf
addr16
dec
cwtl
fucom
mov
lcall
sbb
ljmp
lcall
sbb
in
ja
sub
cmp
decb
mov
icebp
movsb
xchg
lcall
outsb
jle
divps
inc
aaa
mov
pop
sub
jmp
aaa
push
jecxz
adc
add
sub
add
xor
sub
vpmaddwd
mov
lret
jl
es
lods
inc
gs
sbb
or
clc
cmp
xchg
xchg
into
leave
aaa
sahf
jno
mov
lcall
inc
xor
pop
fidivs
hlt
inc
push
push
in
mov
or
push
sar
cmp
inc
xor
inc
inc
pop
xchg
std
sub
xchg
jmp
cltd
clc
insb
test
stos
cltd
jo,pt
pop
xchg
scas
mov
ds
popf
mov
mov
cmc
inc
mov
xchg
mov
divb
rclb
scas
inc
shrb
and
fcmovu
xchg
flds
mov
mov
push
lock
mov
mov
je
mov
jae
fwait
ds
and
push
es
jp
ffreep
rcrb
cmp
mov
lock
fildll
and
iret
ret
pop
fcomps
xchg
cmp
cmc
push
pop
mov
stos
aas
lcall
sbb
fisubs
daa
imul
dec
jmp
mov
pop
popa
jns
push
and
fisubrl
push
lret
mov
and
aaa
pop
imul
mov
in
cltd
add
sarl
add
push
lods
faddl
jb
rcrl
jns
popa
fstpl
jp
pop
out
test
jne
popf
shl
and
push
ljmp
or
test
pusha
jae
ja
mov
arpl
sub
add
sti
cmp
mov
xor
sub
push
sahf
push
sub
gs
add
shll
shr
jb
fstpl
js
mov
cmp
dec
pop
sarb
or
pop
adc
aad
cltd
fstp
sbb
sub
cmpl
dec
cmp
jno
sub
xlat
push
icebp
mov
pushf
or
pushf
mov
jmp
dec
mov
sub
adc
ds
push
out
mov
cmp
outsl
sbb
xchg
js
cwtl
or
enter
xchg
push
and
cmp
fs
cs
cmp
inc
lcall
inc
mov
dec
sub
jmp
out
rol
xchg
dec
mov
aaa
jle
mov
lcall
jbe
fstpl
sbb
sbb
cwtl
fiaddl
xor
inc
arpl
or
stc
popa
movsl
mov
cmpsl
dec
xor
push
cmpl
lcall
mov
pop
fidivl
std
mov
adc
pop
jmp
shl
jle
aas
or
push
lea
cmpb
sbb
push
adc
ja
cmp
lahf
lahf
lcall
jns
fldl
pop
mov
stc
mov
inc
je
cmc
aad
rorl
test
cli
popf
inc
xchg
sti
push
in
aaa
inc
jecxz
mov
fwait
lret
je
icebp
jnp
mov
sbb
aaa
cmp
lods
test
sbb
sub
jmp
xchg
cmp
dec
test
cmc
imul
jecxz
mov
push
add
adc
jne
cltd
jle
dec
sbb
mov
loope,pn
push
das
in
aaa
add
jb
sbb
movsl
jne
and
push
loope
cld
aaa
mov
and
lahf
bswap
cltd
test
cs
ljmp
pop
sbb
inc
mov
inc
rcrb
inc
cmp
or
dec
jp
mov
lahf
out
jl
jg
push
mov
movsl
pop
clc
and
mov
push
and
pop
mov
fwait
ja
jno
in
fadds
lock
test
cmpsb
mov
popf
enter
push
ret
in
xchg
cmp
inc
pop
mov
addb
lcall
inc
test
xchg
or
cmp
cmp
cmp
fnsave
sub
lock
leave
mov
mov
inc
pop
notl
sub
jl
ds
cmp
pushf
sbb
inc
insl
dec
rolb
in
lcall
cmp
fldt
fdivrl
cmpsb
dec
lods
mov
mov
lcall
andb
in
sub
sbb
or
fst
jg
mov
sbb
hlt
push
jnp
push
in
mov
pusha
pop
stos
mov
sbb
sub
pop
adc
jo
mov
pop
mov
sub
pop
out
fwait
sbb
nop
rcll
push
sub
dec
xchg
inc
daa
pushf
fcoml
lcall
dec
pop
int3
idivl
fnsave
fwait
push
out
fimuls
cmp
mov
inc
out
mov
mov
push
mov
push
mov
pop
pop
stos
in
mov
mov
xor
ja
dec
ds
int
lcall
push
mov
pop
orb
out
lcall
ffree
scas
mov
or
cmp
mov
inc
mov
mov
data16
je
pusha
cmp
push
aaa
pop
jmp
dec
push
mov
cmc
ljmp
lret
hlt
addr16
inc
iret
rorl
andl
cmp
cld
or
adc
into
push
mov
mov
idiv
xchg
inc
jp
clc
addl
popa
push
aaa
gs
pop
sbb
jp
adc
sbb
and
lds
in
das
stos
mov
sbb
es
scas
sub
fprem1
inc
mov
addr16
mov
jmp
adc
ret
sbb
sahf
push
fucomp
mov
lock
std
aas
enter
jle
out
sbb
pusha
icebp
loope
aaa
mov
inc
mov
jmp
mov
xchg
adc
ficoms
jecxz
rcrb
dec
fcoml
pop
adc
jne
jp
and
mov
mov
sub
push
push
test
subl
push
lcall
pop
cld
xor
icebp
mov
ds
mov
stos
ret
sub
dec
xorl
daa
sub
cmp
jle
sbb
xor
add
lods
aaa
test
sbb
pop
lds
test
mov
iret
mov
jns
nop
cmp
xor
aas
sub
cmpb
shlb
adc
push
movsl
pop
sub
and
flds
mov
es
sbb
or
movsl
lea
lret
and
pop
int
pop
mov
cltd
inc
sti
sbb
cmp
orb
rcl
in
mov
or
xor
jns
stos
jp
push
add
fistpl
sub
stc
lods
jo
inc
std
inc
pusha
xchg
jno
pop
shll
sub
adc
jle
mov
mov
and
pop
icebp
mov
movsb
sbb
cmp
or
pop
fbld
insl
test
push
mov
dec
loope
jp
add
cmpsl
cmp
sbb
lret
in
jno
mov
aaa
sub
mov
mov
push
repz
fisttpl
adc
fcmovnbe
jbe
fimuls
es
or
lea
add
repz
and
int
fsts
les
scas
fidivl
out
in
dec
rorl
mov
add
pop
enter
pop
jecxz
dec
fnstsw
hlt
push
pop
mov
dec
das
aad
xor
ds
inc
cli
cmp
sub
stos
popa
xchg
xchg
lcall
imul
jns
jne
push
js
fdiv
inc
loop
cmp
and
sbb
xchg
sub
pop
cmp
insb
addr16
cmpsb
dec
aas
or
mov
xchg
icebp
xchg
cmp
sti
lahf
jge
out
inc
add
sub
test
push
sbb
add
sbb
cmp
pop
xchg
fstpl
xchg
jne
pop
adc
fstps
out
xchg
sub
test
sbb
push
xchg
lahf
and
push
xchg
into
int3
fmull
outsl
sub
out
jbe
mov
push
mov
xorl
fsubr
aam
and
cmp
pop
andb
push
adcb
insl
adc
or
cltd
mov
and
cld
cmp
mov
cld
stc
sbb
cmp
add
subl
sbb
mov
mov
cmp
stc
out
and
andb
cli
fisubrl
jns
shrl
clc
in
jnp
mov
and
lods
mov
cmp
pop
outsl
xchg
sub
data16
popf
sub
xor
pop
lods
cs
arpl
pop
push
fists
dec
stc
outsl
mov
adc
add
lret
mov
ds
lahf
scas
mov
cmc
es
pop
jo
or
cmp
or
adc
pop
hlt
inc
loopne
gs
or
ds
pop
sbb
xor
pop
sbbb
enter
arpl
push
icebp
arpl
mov
je
pop
ds
popf
add
mov
call
cmp
xor
ljmp
jle
add
addr16
fldl
ss
inc
or
jp
inc
lods
mov
sahf
out
fists
lret
shll
cmpsl
sahf
pop
lcall
dec
fnsave
js
stc
pop
and
jb
scas
iret
scas
sbb
xchg
bound
pop
fsubrs
aaa
ret
pop
and
push
push
mov
xor
lret
lea
xor
loop
cmp
insb
je
cmp
cltd
arpl
les
das
push
push
aaa
pushf
clc
sub
adc
xor
add
inc
aaa
sahf
xor
pop
jp
inc
fst
out
xorb
rolb
cmp
insb
mov
pop
jno
inc
lret
inc
movsl
stos
shrl
xor
adc
ds
fwait
ja
insb
mov
pop
jo
push
test
pop
cmp
sbb
sub
jbe
sahf
in
push
or
mov
pop
pop
fucomp
fldt
xchg
adc
fnsave
jp
pop
aas
push
in
cmp
outsb
push
sub
sub
xor
ds
pop
push
pop
rorb
les
sbb
sub
and
jl
inc
mov
lret
in
push
push
test
inc
sub
sarl
mov
push
das
mov
jg
ffree
jp
ret
dec
inc
leave
mov
lods
test
add
push
hlt
fcompl
mov
loop
into
lahf
insb
div
mov
xchg
mov
jmp
mov
mov
adc
sbbl
loope
push
test
inc
ds
or
push
aas
push
loop
xor
add
imul
add
inc
mov
in
pop
dec
pusha
aam
dec
call
sarl
mov
in
cmp
ss
sub
shll
pop
xor
sbb
dec
jg
popf
sahf
test
lds
hlt
faddl
mov
xchg
jecxz
jmp
popf
cmp
fdivl
aas
scas
jne
inc
out
outsb
aas
mov
fnstcw
je
mov
jns
pop
mov
pushw
cmp
sahf
sahf
imull
inc
inc
xor
mov
outsb
icebp
and
mov
pop
mov
icebp
pop
cmpsb
ds
out
mov
fidivs
clc
inc
lea
out
pop
fidivrs
aaa
mov
movsl
nop
xor
jae
and
jmp
push
mov
cld
int
inc
cmpsl
cmp
hlt
sub
in
ffree
xchg
lahf
nop
lock
mov
mov
aas
and
js
lcall
adc
or
mov
in
xor
testb
cmp
incl
jle
add
mov
rcrl
jnp
and
repz
adc
sub
push
pop
arpl
aaa
imul
dec
cmp
or
rorl
push
add
xlat
mov
fistpll
jae
jns
hlt
jp
and
mov
roll
ds
pop
jmp
fisubrs
arpl
jmp
xchg
dec
je
push
loop
xchg
jmp
notl
fisttpll
mov
inc
mov
xor
mov
xor
sbb
out
shr
inc
dec
or
test
sti
iret
ja
cmp
cmp
fidivs
sbb
lods
data16
aam
adc
pop
dec
out
jge
sub
jmp
fcoms
cmp
mov
fsubr
mov
cmpl
int
sub
aaa
shll
jl
in
insb
lcall
mov
fdivl
lock
jns
sbb
jnp
jo
in
test
mov
sub
lcall
aaa
shll
sub
inc
xchg
inc
ficomps
mov
int
sbb
fidivs
inc
icebp
aam
mov
pop
mov
daa
pop
add
adc
cmc
in
push
shll
inc
jge
in
imul
aas
mov
cmp
pop
or
jg
movsl
ss
test
cmp
sahf
push
aad
pop
insl
dec
es
leave
xor
mov
test
sbb
mov
cmp
loope
inc
std
or
pusha
xor
jae
xlat
mov
fisttpl
cwtl
scas
jle
fcoml
mov
les
popa
mov
jbe
jns
bound
cmp
inc
negl
pop
cwtl
loop
loopne
pop
rcrl
xchg
pop
pop
shll
dec
lds
mov
in
test
pop
fnsave
dec
test
repnz
mov
shlb
aas
xor
jecxz
jnp
test
push
pop
out
pop
test
fcompl
aas
push
xor
les
in
repnz
sbb
jb
cmp
sub
xchg
mov
fstpl
cltd
das
leave
push
ret
repz
adc
mov
inc
loopne
pop
mov
or
adc
ss
mov
dec
push
push
out
dec
icebp
push
mov
pop
movsb
outsl
sub
loopne
sbb
cmp
hlt
cmc
or
jbe
ficompl
push
in
pop
movsb
mov
aaa
hlt
popfw
sbb
mov
mov
jl
lock
test
pushf
pop
aaa
mov
push
loop
pop
fwait
in
and
lcall
inc
pop
popa
outsb
cld
lret
ds
push
pop
adc
xchg
cmp
mov
cwtl
int
lahf
xchg
shll
dec
mov
push
mov
pop
bound
jnp
and
mov
testb
fisttpll
jns
pushf
out
jae
cmc
add
btr
hlt
dec
mov
imul
insl
sbb
icebp
mov
lret
and
ficoml
test
pop
jle
jno
jmp
hlt
arpl
fcomp
and
scas
mov
enter
push
pop
mov
xor
fbstp
imul
sbb
lock
les
fcompl
and
sbb
pop
maxps
fnstsw
lahf
enter
add
andl
aaa
jecxz
insl
scas
sub
icebp
cmp
mov
mov
sbb
mov
ror
mov
mov
cwtl
add
pop
inc
imul
call
pushf
inc
xlat
pop
das
xor
movsl
mov
pop
loop
cmp
or
andps
test
notl
fs
bound
mov
add
fnstsw
ljmp
mov
jl
lcall
aad
int
aaa
fcompl
pop
push
loope
setnp
imul
dec
sbb
les
test
rcrl
shr
adc
xchg
xchg
cmp
xor
mov
dec
dec
lods
sahf
sti
sbb
jmp
ds
dec
sarb
mov
lret
sub
push
in
xlat
lcall
js
std
sbb
movsb
mov
ja
shlb
pop
gs
daa
sahf
xchg
loop
jg
mov
aas
rcrb
adc
int3
ret
arpl
shll
mov
adc
aaa
add
outsb
dec
fisubl
and
lock
cs
popf
out
cmp
orl
aaa
dec
fcmovbe
lock
fsub
fldt
fsubl
mov
or
cmp
push
adcl
push
inc
fisttpll
lcall
mov
jg
test
popf
mov
cmp
mov
pushf
pop
pop
cli
xor
nop
jmp
pop
pop
pop
mov
pop
xor
jmp
stc
dec
test
xor
out
in
push
fwait
mov
mov
add
mov
aas
fcomip
stos
rcr
push
sbb
mov
mov
mov
fcoml
pop
mov
ds
icebp
xor
jno
insb
cmp
test
mov
cmp
inc
fidivrl
aaa
push
jns
adc
sub
push
and
mov
loope
scas
mov
inc
sahf
mov
ds
jne
popf
pop
add
mov
mov
fwait
loope
cmpb
cmpb
cmp
xchg
stos
bound
dec
roll
mov
outsb
lret
xchg
shlb
jb
enter
push
decb
and
pop
jp
dec
xlat
inc
mov
add
clc
push
out
cmp
pop
jns
int
inc
lret
andb
push
lea
mov
mov
fnsave
adc
mov
inc
leave
add
shrl
push
mov
imul
xchg
xchg
xorb
das
shlb
in
aaa
pop
sub
scas
icebp
lods
cmpsl
lcall
cmp
pop
dec
aaa
dec
inc
xchg
inc
in
scas
pop
dec
icebp
sub
jge
inc
push
add
push
call
out
push
pop
data16
bound
sbb
aas
ss
les
insl
ja,pt
jp
in
pop
sbb
mov
mov
inc
mov
out
aad
mul
test
ljmp
push
ds
push
push
xchg
jg
scas
pop
pop
inc
ffree
into
in
mov
js
or
ds
adc
aad
sub
pop
pop
fstpt
jle
and
dec
cmpsw
hlt
and
inc
adc
lahf
cmpsb
lock
cmp
mov
xchg
inc
aaa
mov
sbb
mov
jo
inc
mov
stc
push
push
and
cmp
pop
in
lcall
jl
dec
mov
push
fistpll
jle
bound
aad
popa
push
jae
or
push
mov
add
in
fistpll
add
pop
fdivrl
cli
addr16
outsl
addr16
imul
cmp
stos
pop
add
push
mov
ficomps
sub
sbb
cli
xchg
lock
clc
fldl
outsl
xchg
or
adc
xchg
insb
movsl
adc
xor
popf
int3
push
jo
mov
pop
cld
adc
ss
fidivs
inc
dec
pop
fs
pop
call
mov
xor
call
fcoml
pop
inc
mov
ficompl
pop
repnz
push
jmp
jecxz
daa
ret
imul
and
mov
dec
adc
mov
sarb
test
cmpl
lods
cmp
scas
adc
arpl
aaa
sub
push
negl
aas
push
sti
pop
dec
ss
dec
mov
push
push
sub
cmp
dec
jp
mov
jmp
ds
and
cmp
dec
dec
ds
push
cmp
push
fimuls
notb
mov
clc
sarl
xchg
push
movsb
pop
cmp
and
adc
cs
inc
pop
pusha
mov
or
ljmp
movq
inc
mov
lcall
dec
mov
loop
adc
mov
cmp
bound
mov
pop
add
and
fstpt
mov
repnz
sbb
cmp
test
scas
into
push
sub
inc
std
repnz
lcall
mov
call
sbb
pop
and
jne
dec
sub
xchg
sub
mov
ljmp
pushf
sahf
jns,pt
sbb
mov
and
mov
mov
mov
inc
test
mov
push
add
xor
inc
js
and
mov
rol
and
push
sub
pop
popf
loop
pop
cmp
add
mov
aaa
mov
test
xor
pop
sbb
aaa
js,pt
loopne
jle
daa
inc
aaa
shr
pop
stos
sti
xor
jl
lea
push
bound
cmp
xor
out
sbb
outsb
movsb
stos
push
pusha
dec
push
and
push
inc
call
mov
cmpsb
gs
jne
or
push
dec
push
fstpl
cmp
bound
jl
jecxz
mov
push
in
cmp
mov
push
fwait
push
dec
scas
lods
cmc
inc
sbb
outsb
sbb
xor
testl
cltd
push
push
adc
push
add
dec
fnstcw
add
out
imul
scas
dec
sbb
push
mov
test
cmp
xchg
rcll
lods
pop
jl
pop
jp
ret
jp
lret
pop
cmp
addb
scas
in
cmp
adc
jmp
rorb
test
sub
mov
popa
push
mov
mov
icebp
cmp
mov
ret
fstl
mov
fwait
mov
clc
daa
cmpl
shll
ret
cwtl
push
push
mov
inc
aas
mov
jnp
data16
aaa
testl
and
jp
xchg
mov
sbb
cmp
mov
cmc
push
cli
std
cmp
and
sub
sub
pushf
in
lods
dec
jp
ja
sub
aaa
sahf
add
imul
pop
xchg
hlt
jnp
outsb
aad
hlt
jbe
lret
or
faddl
push
popf
loopne
mov
pop
mov
sbb
aas
mov
dec
push
add
xchg
aaa
jbe
mov
sarl
cmp
ss
mov
aam
dec
xchg
pop
lret
mov
je
test
sbb
mull
pop
lods
jp
fcomps
insb
fs
or
xor
scas
aaa
mov
mov
lcall
je
fmul
test
sbb
lock
or
cmp
push
ljmp
jge
sbb
or
cmp
jb
sbb
dec
scas
hlt
and
mov
stos
ds
int
sete
xchg
add
sbb
or
mov
jno
mov
addr16
iret
ret
pop
ds
and
push
cmp
out
lds
arpl
cmp
fstl
inc
or
mov
insl
out
scas
xor
aaa
call
inc
sahf
fcompl
int
std
add
jns
jmp
jle
cs
rep
inc
cmp
pop
lahf
fimull
xchg
cmp
sub
mov
insl
adc
js
dec
xchg
dec
mov
lret
or
into
sub
fstp
scas
or
psubsw
cmp
mov
aaa
movsl
jmp
or
fisubl
jne
fisubrs
lahf
imul
xchg
mov
mov
mov
inc
mov
lcall
testb
cmc
and
xor
sub
sbb
aaa
divb
pop
jmp
add
mov
push
stc
les
fdiv
ret
pop
movsb
fwait
lret
test
cs
ljmp
inc
push
push
sbb
sbb
cmpsb
getsec
in
pop
ret
mov
and
cmp
mull
pop
fincstp
lea
or
sbb
sub
mov
das
sub
lods
insb
xchg
jmp
cwtl
adc
push
pop
aaa
xchg
pop
jle
scas
xchg
mov
mov
pop
les
je
stos
outsb
push
bt
loopne
dec
pop
cmp
sbb
es
std
iret
mov
pop
sti
adc
gs
call
dec
and
jbe
pop
pop
adc
sbb
inc
dec
popa
ds
jl
test
movsb
jbe
xchg
fisubrs
aaa
notb
insb
or
xor
cmp
pop
xchg
push
stos
in
cmp
out
xchg
xchg
lcall
out
jg
push
cmp
jp
mov
add
jle
adc
add
scas
fisttps
push
jp
sahf
cli
lcall
pop
in
jmp
jge
lds
mov
or
pushf
cltd
scas
cmpsb
jg
pop
ja
insb
mov
push
les
pop
inc
sbb
imul
push
out
aam
or
mov
fidivrl
movsl
adc
or
je
lock
aad
jnp
jl
enter
xor
lea
loop
cmp
dec
mov
aam
fstl
shl
test
fildll
decl
pop
rcrl
lock
bound
popf
repnz
sub
test
xchg
pushaw
mov
jno
aad
testb
insb
dec
xchg
adc
inc
loop
inc
push
outsb
mov
cmp
push
orb
fisubrl
mov
clc
dec
mov
rorb
mov
daa
idivb
xchg
imul
mov
rep
pop
cmpsb
adc
and
mov
mov
sbb
repnz
ss
jmp
inc
pop
fnstsw
dec
dec
ds
or
xchg
inc
dec
and
jg
push
sbb
lods
lcall
inc
in
inc
aaa
popa
dec
iret
pusha
stos
cmp
inc
mov
mov
sbb
cmp
loopne
adc
repz
lcall
mov
sti
ret
pop
dec
xor
push
aaa
movsl
mov
mov
push
jo
repnz
pop
sbb
or
xchg
aad
loopew
pop
mov
xor
out
rcrb
inc
aam
in
add
cmp
xor
cmp
jle
rolb
popf
les
cld
int
dec
ffreep
push
aaa
adc
cmp
mov
adc
xchg
sub
xor
sbb
mov
clc
lcall
pop
mov
push
or
fisubs
sub
cmp
fisubrl
mov
push
hlt
xor
cmp
cmpsl
clc
cmpl
ffree
xor
ss
ss
icebp
sub
xchg
js
inc
xor
sub
aaa
inc
inc
jb
inc
push
lcall
aaa
sar
add
gs
out
cmpsb
js
and
dec
push
xor
scas
jne
cs
pusha
cmp
cli
mov
lcall
jns
out
aad
aad
mov
fnstcw
in
jge
mov
push
or
test
and
push
out
sbb
shl
lea
les
xlat
popa
cmp
leave
out
mov
test
das
sti
aaa
mov
xchg
mov
mov
das
fstpl
fcoms
xchg
jno
sarl
cli
ret
push
out
or
adc
lcall
and
push
jno
idivl
xor
dec
add
shll
xor
mov
dec
pop
fwait
repnz
mov
push
fsubrs
imul
icebp
std
cmp
arpl
out
ret
imul
jecxz
ret
mov
cli
cltd
lret
out
in
rcrb
dec
dec
test
dec
xor
stos
xlat
sti
aaa
in
pop
cmp
inc
lret
scas
or
cmp
out
push
or
in
idivl
xor
cmp
les
lcall
jecxz
cmp
push
push
mov
mov
cli
pop
pop
outsl
xchg
mov
mov
scas
loopne
clc
cld
sbb
jl
imul
in
fiaddl
call
ss
scas
pop
ror
or
iret
mov
andl
mov
hlt
sbb
dec
push
sbb
notb
inc
fldl
jo
jmp
mov
cmp
xchg
test
cmp
cmp
arpl
xor
inc
mov
imul
mov
inc
je
mov
inc
or
cmp
fildll
cmp
mov
sbb
lods
shr
and
inc
loop
mov
dec
scas
ds
xchg
cmpsb
cmp
stos
adc
and
mov
xchg
pop
pop
xor
inc
dec
adc
and
pop
dec
in
vpaddw
xchg
aaa
cwtl
mov
roll
and
lock
fsub
push
fldcw
sub
ret
inc
jmp
loop
sub
popw
inc
inc
and
push
lcall
mov
xor
or
and
dec
xchg
mov
jns
aaa
xchg
cmp
test
push
mov
cmp
inc
outsl
lcall
inc
push
pop
cmp
sbb
lea
sub
jl
inc
aaa
mov
imul
cmpsl
lods
addl
repz
les
mov
mov
mov
adc
mov
xchg
pop
divb
out
insl
fiaddl
jecxz
cmp
add
mov
jno
and
cmp
push
mov
testl
push
sbb
cmp
or
mov
mov
ds
aas
pop
cmp
imul
mov
xchg
into
mov
cmp
mov
xor
jno
lcall
xchg
adc
out
sbb
call
imul
mov
cs
jge
imul
notl
pop
out
addr16
mov
and
aaa
sub
mov
lret
mov
lcall
loopne
frstor
dec
movsl
push
das
lock
aas
push
jmp
into
sub
les
aad
ds
lcall
cmp
add
and
loope
mov
jecxz
fimuls
popa
adc
les
movl
push
daa
sub
jl
movsl
ss
jmp
inc
mov
mov
cmp
mov
push
or
sbb
xchg
add
dec
pop
fwait
aam
pop
sbb
cmpl
scas
pop
and
cmp
adc
ret
out
sti
mov
xlat
rcrb
filds
mov
nop
cmpsl
cwtl
popf
pop
ficompl
mov
in
mov
es
sub
xor
cmp
push
mov
aaa
add
clc
bound
in
in
lcall
cmp
test
mull
ret
and
pop
pop
in
sbb
jo
fldl
stc
ja
adc
pop
mov
cmp
nop
outsb
aad
or
pop
dec
cmp
shl
enter
mov
add
sub
xlat
jmp
ds
aaa
pushf
cmc
dec
xchg
or
mov
and
movl
test
pop
push
inc
xlat
gs
imul
add
dec
push
jge
inc
adc
subl
mov
dec
inc
adc
push
aaa
fistps
in
idivl
popa
scas
lea
pop
outsb
lret
or
dec
aaa
sbb
aam
call
lock
mov
sbb
push
push
xor
ds
into
cmp
scas
jg
mov
ds
lcall
mov
sbb
pop
mov
movsl
imul
mov
lcall
cmp
or
movsb
or
sahf
inc
inc
dec
jecxz
in
xchg
in
fidivl
addb
jmp
aaa
pop
nop
bound
xchg
pop
test
add
pusha
jge
cmp
xlat
xchg
adc
cltd
cmpsl
lret
inc
ds
sbb
sbb
ljmp
sbb
lods
add
into
mov
rclb
mov
mov
jmp
and
stos
sbb
dec
push
imul
mov
icebp
mov
lcall
cmp
imul
ds
hlt
imull
aaa
js
daa
mov
mov
jge
inc
arpl
ljmp
aas
mov
movsl
outsb
daa
in
fcomps
popf
mov
enter
inc
mov
arpl
stc
cmp
pop
cmp
stos
push
push
ljmp
inc
xchg
fisttpll
subl
rorb
inc
out
adc
aas
leave
scas
sub
cld
leave
loopne
data16
cmp
shlb
push
inc
aas
iret
arpl
pop
jl
ror
add
bound
mov
lcall
cmp
jecxz
pop
aad
rcl
cltd
fisubrs
or
mov
lods
push
rcrb
jg
fisttpll
dec
inc
sbb
and
push
cli
adc
loope
or
and
ljmp
lock
clc
jb
fnsave
shll
js
jnp
mov
sub
add
out
es
cmp
jns
jle
inc
lods
pop
popa
sbbl
enter
sub
xchg
sbb
jne
nop
mov
punpckldq
cld
loope
pop
cmc
fidivrs
adc
mov
mov
mov
mov
push
mov
lcall
adc
ja
xchg
push
xchg
das
js
cmp
cld
and
sbb
inc
inc
adc
mov
mov
sub
fdivrl
dec
xor
lock
dec
aaa
mov
mov
mov
movsb
cwtd
mov
cli
lock
mov
dec
pop
or
ds
in
andl
and
ljmp
aam
dec
or
stos
cmc
sbb
add
pop
repnz
pusha
sbb
aaa
pop
ret
sbb
lcall
repnz
push
adc
outsl
inc
lret
scas
pop
rorb
dec
in
adc
sbb
ret
clc
rol
mov
fadd
pushf
sub
imul
sbb
adcb
fidivrs
cmpsb
dec
popa
xor
aam
sbb
decb
sub
cmp
fdivrp
std
jmp
add
mov
cmp
insb
out
ja
shll
int3
fidivl
and
inc
ds
std
sbb
fisubrs
popf
mov
cmp
fs
daa
rol
dec
das
call
xor
push
pop
in
mov
mov
insb
clc
pusha
lcall
daa
inc
fstl
stc
jae
int3
icebp
ljmp
ss
adc
jns
pop
cmc
aas
repnz
and
jecxz
or
fs
cmp
jbe
fdivrl
and
xchg
sub
int3
in
fmull
add
pop
lods
loop
or
repnz
sbb
movsb
iret
inc
aam
scas
jo
data16
jp
test
fldenv
mov
pop
and
in
popa
testb
icebp
mov
add
or
fwait
stc
mov
loop
xchg
lods
lcall
push
pop
xchg
sub
mov
inc
pop
sahf
mulb
in
aad
adc
and
jmp
inc
add
mov
mov
push
pusha
jl
push
stc
sbb
aam
xor
inc
daa
push
pop
and
xchg
push
push
lds
dec
std
inc
shlb
and
out
fisubrs
push
insl
lret
cli
clc
lcall
in
hlt
cmp
mov
bound
sub
push
addr16
inc
repnz
adc
sbb
je
lret
fsub
mov
pop
hlt
sbb
inc
cli
jl
cmp
pop
jbe
jmp
dec
ret
loopne
leave
rclb
scas
popf
jmp
mov
sbb
aas
in
call
std
add
pop
fstp
pop
xor
ds
cltd
in
cwtl
jns
adc
pop
cltd
xchg
mul
sbb
push
and
or
pushf
pop
stc
loopne
push
int
inc
push
cmp
xor
cmpsl
aaa
sbb
and
arpl
cs
shlb
mov
xor
popf
and
mov
sarl
sub
mov
ljmp
mov
dec
frstor
xchg
mov
movsb
cwtl
cmp
push
cmp
int3
inc
inc
adc
xchg
cmp
lods
test
sbb
cmp
fcoml
imul
dec
fwait
shlb
xor
movsl
fdivl
xor
cmpsb
xor
imul
pop
in
popf
daa
mov
notl
out
imul
loope
mov
mov
mulb
dec
dec
pop
movsl
mov
push
lahf
push
and
into
movl
scas
fsubrl
or
cli
lcall
sbb
mov
ljmp
or
lcall
loope
gs
idivl
arpl
cli
add
mov
dec
loop
sub
loopne
cmp
daa
cmp
outsl
frstor
sti
repnz
xchg
ficoms
jg
mov
adc
movsb
mov
mov
lock
imul
dec
shl
mov
jmp
aaa
sbb
loop
gs
sahf
clc
dec
aaa
adc
xor
jle
push
ljmp
out
sub
ss
add
clc
adc
mov
add
stc
jl
stos
mov
lcall
cs
cld
mov
pop
popf
outsl
jns
fs
adc
sahf
dec
or
xorb
adc
sub
ja
and
cmp
mull
iret
fmul
mov
mov
lcall
jnp
je
and
mov
cmc
cmp
bound
cmp
sub
lock
xchg
jge
mov
add
jp
and
enter
ds
push
jle
inc
sub
jo
ljmp
mov
andb
pop
pop
or
fsubrl
sahf
enter
jmp
pop
dec
mov
loopne
jge
jmp
inc
imul
dec
daa
lcall
cmpl
dec
xor
push
cmp
adc
loopne,pn
push
mov
fnstenv
shlb
dec
lock
pushf
inc
jbe
das
test
aas
push
cmp
jle
pop
cs
inc
pop
xchg
push
mov
dec
popf
fdivrl
scas
das
andl
addr16
push
or
add
pusha
ljmp
out
pushf
inc
stos
mov
push
sub
inc
insb
adc
cmc
push
cmp
lds
in
jbe
cmp
fwait
and
fildl
xchg
mov
xor
pop
push
sub
into
pop
jne
ljmp
cmp
ja
dec
pop
push
mov
sbb
out
adc
mov
inc
test
insl
aam
jp
shlb
push
je
adc
pop
inc
push
mov
xor
and
jo
cmp
aas
jge
sbb
lods
jns
push
bound
adc
fwait
hlt
and
sub
int
and
shrl
mov
call
lcall
dec
stos
dec
js
pusha
dec
cmp
sbb
cmp
fwait
push
inc
aaa
mov
cmp
test
adc
iret
inc
sahf
or
xorl
jo
popl
fidivs
jo
mov
movsl
jne
ds
mov
cs
pop
cmc
inc
movb
push
imull
in
jne
jmp
fimuls
mov
pop
xchg
lcall
ret
jns
xor
sub
je
dec
mov
ss
or
inc
sub
push
inc
jo
sbb
mov
scas
mov
popa
leave
gs
or
outsb
popf
shl
dec
cmc
orl
fisubs
vpor
sub
jl
std
call
xchg
out
pop
pop
ret
ds
push
repnz
inc
repz
cmp
cld
fistps
xor
push
fldl
sub
adc
cwtl
fisttps
xorl
mov
mov
jmp
sbb
ds
push
fimull
or
testb
rclb
cld
pop
push
aaa
jecxz
mov
and
lcall
clc
ds
lds
inc
cmp
lcall
sbb
mov
mov
les
cmpb
mov
shll
outsl
in
xchg
lret
in
xlat
popf
aas
xchg
adcl
fstpl
mov
push
arpl
test
add
push
mov
jmp
pop
outsb
pop
add
inc
lcall
cmp
fisttpll
cmp
xor
xor
xor
fwait
add
lods
push
test
sub
dec
repnz
iret
xor
sahf
cs
ror
stc
dec
ds
cmc
insl
in
fnstsw
jl
mov
jmp
sarb
sti
and
ds
sbb
cmp
ds
push
out
fwait
aaa
pop
dec
cmp
repnz
push
adc
fidivs
and
daa
pop
mov
xor
jb
mov
cmp
dec
or
test
aad
xchg
xchg
cmpsl
xor
or
mov
cli
pusha
je
lcall
xchg
dec
sti
push
sub
fwait
adc
je,pt
psubb
sahf
inc
test
mov
xor
xor
fs
inc
and
in
lods
leave
pop
test
rcll
mov
push
inc
and
or
jbe
into
cmp
or
shl
xor
cmpsb
jo
das
mov
insb
pop
loopne
aaa
lods
loop
add
mov
fnstsw
inc
inc
test
mov
sbb
sarb
jle
mov
push
push
cmp
mov
loop
rcr
sub
push
fildl
loopne
loopne
sbb
rolb
mull
pop
out
rclb
pop
fnstsw
dec
mov
xor
dec
inc
jl
aad
pop
sbb
mov
adc
insl
mov
cmc
cmpsl
adc
mov
mov
mov
fwait
les
push
ds
mov
sbb
push
sbb
popa
lret
sbb
dec
mov
mov
add
call
xor
je
cmp
fadd
xchg
inc
ss
test
loope
push
xchg
fnstenv
aaa
mov
xchg
not
dec
repnz
lcall
jle
xor
cmp
sub
aam
es
adc
test
or
push
arpl
push
sbb
je
jle
pop
mov
nop
jle,pt
mov
adc
js
and
das
push
aas
clc
xor
dec
jecxz
divps
in
scas
cmp
ss
sbb
inc
inc
mov
or
pop
push
and
out
jmp
in
cli
inc
clc
and
inc
mov
xor
adc
mov
cmp
jb
adc
add
or
incb
or
sbb
or
inc
pop
adc
dec
hlt
daa
or
bound
outsb
les
test
in
mov
lcall
adc
mov
jbe
fdivl
push
ret
stc
repz
fwait
push
sarl
cmc
inc
dec
pop
mov
lods
mov
lcall
in
out
add
sub
cmp
pop
sub
aaa
mov
aam
mov
fwait
lcall
adc
frstor
and
mov
and
push
sti
xchg
test
add
scas
push
mov
pop
loope
jnp
loop
stos
mov
loope,pt
cmp
mov
xchg
mov
lret
cli
loop
test
jb
pushf
or
cmp
jecxz
inc
fnstsw
lahf
movsb
inc
mov
dec
fisttpll
or
xchg
sbb
insl
mov
jmp
stc
lcall
inc
dec
fisubrs
mov
stos
mov
stc
out
push
ficomps
je
aaa
lret
movsl
lds
in
pop
pop
lcall
jnp
fnstsw
test
and
outsl
imulb
cld
mov
imul
pop
cli
cmp
out
adc
in
fsts
inc
mov
std
lods
mov
fstl
sbb
pop
stc
popf
out
fstpl
lahf
aad
push
lcall
inc
mov
adc
call
lcall
inc
ret
int3
sbb
testl
test
xchg
jecxz
inc
call
jge
cmp
push
dec
lock
mov
ljmp
ljmp
jbe
or
stc
inc
xchg
enter
int
stc
jg
sub
mov
into
aas
dec
js
or
xchg
and
xchg
fstpl
and
or
repz
es
icebp
pop
out
fcoml
aaa
stos
clc
xchg
add
pop
fistpl
ljmp
xor
ds
mov
aad
jle
mov
adc
ljmp
mov
rcl
pop
cmpsl
inc
mov
xor
cmp
call
sbb
add
adc
rclb
or
popf
pop
jg
push
adc
xor
aaa
inc
push
scas
lods
lods
sub
cmc
push
mov
inc
pop
ret
pop
data16
add
adc
mov
sub
shlb
pop
push
fstpl
ret
inc
cwtl
popa
loop
jnp
push
jp
call
or
out
shrl
xor
cwtl
jbe
xchg
fnstsw
bound
pop
sub
outsb
pop
scas
repnz
int3
dec
arpl
movsl
jp
out
jp
sbb
inc
cmp
jp
das
lret
xor
pusha
and
insl
jno
cmp
inc
js
mov
mov
or
xchg
sahf
jb
cmp
int
jg
jge
dec
adc
sub
mov
sbb
mov
add
shrl
ds
push
mov
lds
out
add
cmp
mov
sub
mov
push
mov
cmpsb
pop
arpl
push
jp
xchg
push
sub
loopne
fisubs
ret
adc
mov
mov
sbb
in
mov
sbb
and
sbb
lds
sub
mov
loope
dec
hlt
pop
xchg
sbb
gs
add
ret
push
aaa
lock
pop
adc
xor
jb
jecxz
push
mov
aas
xor
aad
pop
xor
push
ds
pop
xchg
lods
hlt
ljmp
adc
xlat
cmp
or
out
pop
cmp
sahf
ds
out
sbb
jb
xchg
jb
push
ds
and
mov
test
sahf
push
je
ljmp
jbe
xchg
mov
mov
lahf
fldcw
mov
ror
cmp
js
fsubs
sub
mov
and
mov
sub
cmp
push
or
xor
xchg
fcmovb
popa
sbb
pop
fnstcw
mov
adc
aaa
in
cli
lods
loop
sti
sub
pop
test
sub
stos
sub
mov
mov
movsb
js
je
cmp
mov
mov
jg
fidivrs
aaa
mov
ret
jecxz
add
mov
lock
or
les
sbb
xlat
jne
sti
push
mov
fisttpll
inc
out
mov
mov
and
adc
mul
jle
lcall
jns
dec
mov
sub
pop
jbe
bound
xchg
call
jp
sbb
and
jo
outsb
ret
ds
enter
push
mov
adc
gs
dec
or
push
push
mov
ds
in
inc
aaa
loopne
data16
hlt
dec
mov
fs
xchg
sbb
divb
jle
fs
push
cs
pop
dec
dec
mov
xlat
loop
mov
pop
and
xchg
dec
jns
dec
mov
mov
and
cmc
movb
addr16
aas
or
bswap
jl
pop
insl
sbb
movsl
mov
insb
shl
jp
mov
mov
xor
fdivrl
pop
add
jl
movsl
ljmp
bound
popf
xchg
cmp
inc
mov
sbb
xor
cs
jo
inc
fcmove
jns
loope
lcall
cli
lcall
leave
sbb
movsl
xor
int3
icebp
mov
lcall
popa
imul
aam
and
js
dec
aas
jns
cli
adc
xchg
lods
adc
fstl
cmpsb
adc
and
lcall
dec
stos
jecxz
mov
hlt
negl
adc
ds
mov
adc
arpl
mov
sbb
mov
xchg
stos
xchg
fstl
sub
hlt
cmp
adc
and
pop
sub
push
out
hlt
sub
jno
out
scas
inc
ja
pop
js
rcrb
in
rorl
fcoml
mov
add
call
push
pop
jbe
nop
rcr
dec
ds
mov
icebp
inc
lods
push
push
fwait
push
xchg
test
lcall
out
stos
out
mov
in
and
lcall
adc
cmp
pop
push
push
xchg
or
ds
jmp
and
sub
jecxz
mov
cmp
jmp
push
push
fnstsw
data16
push
ljmp
nop
pushf
fwait
mov
xchg
popa
mov
xchg
mov
fcmovne
sahf
adc
sub
xorl
mov
mov
shll
add
and
xchg
lret
stc
adcb
call
lcall
xor
xchg
jae
fidivs
aaa
pushf
loope
clc
cs
and
mov
popa
fbstp
aam
jle
in
push
cmp
fs
fsubp
and
ds
les
scas
jecxz
ds
inc
mov
pushl
cs
sub
xor
mov
sahf
cmp
repnz
mov
lcall
mull
call
inc
test
jecxz
test
notl
push
aaa
icebp
xchg
mov
and
or
out
popa
sbb
mov
cmp
ds
jno
sub
cmp
lods
adc
or
es
call
das
enter
sub
inc
fisttps
imul
dec
mov
jp
clc
insl
insl
jbe
lcall
hlt
scas
faddl
inc
cmpw
xchg
mov
mov
cld
loope
dec
push
jg
or
js
adc
cld
sbb
lcall
imul
mov
mov
cmp
cmp
dec
gs
fcoml
daa
ds
cmp
xchg
push
cmp
xor
inc
push
bound
lahf
cmp
jp
lahf
repnz
jae,pt
and
iret
pop
lods
push
jbe
add
inc
xor
push
mov
sub
fcomp
sub
adc
sbb
sbb
or
outsl
imul
jb
mov
jg
pop
push
sbb
fcompl
adc
das
scas
jle
dec
fnstenv
outsb
call
aam
mov
pop
cmp
jg
dec
int3
mov
fcompl
rorb
ds
push
lods
push
cli
xchg
mov
cld
call
inc
push
mov
push
rcrb
int
jg
cmp
pop
mov
pop
jp
and
repnz
cmp
fwait
mov
cmp
lret
jge
pushf
inc
mov
mov
sub
inc
jbe
push
fnsave
inc
mov
cmp
cltd
popf
or
aas
loop
jns
push
fstl
cmpsb
push
mov
std
xchg
mov
lahf
fcoml
inc
push
fdivrs
dec
aas
jno
and
and
sub
mov
or
xchg
ds
and
cmp
jle
call
mov
or
push
jle
add
xor
jl
mov
and
sahf
inc
inc
mov
jmp
mov
mov
push
jecxz
popa
pop
dec
pop
loope
aaa
or
push
sti
add
pushf
js
fs
stc
dec
fisttpll
std
adc
inc
adc
cmp
push
lods
dec
fwait
add
cmovns
mov
mov
inc
xor
jge
mov
ffreep
jg
push
lret
pusha
lahf
xlat
fwait
incl
push
mov
aaa
sbb
insb
or
lcall
jecxz
fstpl
push
dec
inc
repnz
adc
mov
fadd
repnz
mov
aad
mov
xor
insb
mov
movsl
fldenv
mov
aaa
scas
pushf
or
lcall
jmp
mov
lock
inc
sub
xor
push
aam
das
and
stos
test
jbe
push
xchg
repz
hlt
jle
ljmp
cmp
sub
clc
fsubr
insb
push
sti
push
xchg
cli
mov
int
gs
cmp
mov
mov
mov
xor
jl
add
int
adcb
cmc
cld
test
mov
sbb
inc
mov
pusha
push
std
cmp
leave
je
mul
test
rcrl
out
jnp
pop
test
jg
inc
fincstp
das
pushf
dec
inc
pop
jb
ds
mov
jle
cs
push
jbe
rcll
mov
mov
cmp
outsl
popf
sub
jb
pop
lret
mov
or
les
ret
or
fwait
push
inc
mov
jne
iret
lcall
fsubrs
and
iret
mov
mov
sub
outsl
ljmp
mov
std
scas
push
mov
aad
xor
pop
mov
repz
and
cmpsb
mov
pop
lds
dec
fistpl
inc
dec
notl
fsts
dec
lods
jmp
aaa
mov
or
or
insb
or
mov
mov
out
pop
pop
shr
fstpl
js
mov
lcall
inc
sub
push
mov
mov
jbe
ds
repz
into
jp
jmp
data16
and
mov
push
cld
lcall
aaa
punpcklwd
xchg
lcall
cli
jns
cmpsl
mull
ret
out
fisubrs
ljmp
jle
mov
sub
jp
hlt
push
enter
and
push
stc
scas
fists
cmp
cmp
sub
or
xchg
cmp
sbbl
insb
sub
roll
ret
mov
add
xchg
jle
pop
aaa
les
mov
in
inc
decb
add
ss
push
sbb
scas
add
sub
lods
adc
push
add
mov
sbb
int3
jp
mov
insb
rcrl
call
or
cmpsl
lcall
lods
xchg
in
int
dec
adc
jne
jns
or
insb
mov
fldl
cmp
test
cmp
jmp
xor
cmc
xlat
sbb
adc
push
xchg
sbb
jae
sub
or
push
movsb
sahf
aas
jae
or
inc
scas
jg
cwtl
cld
fwait
inc
pop
add
sbb
mov
fstl
loope
popf
push
sub
pop
imul
js
nop
adc
mov
adc
enter
movsl
outsb
mov
inc
or
jbe
fistl
cli
dec
subl
out
bound
in
cs
lods
fbld
pop
cmp
dec
aad
add
push
lahf
sub
inc
test
jbe
mov
cmpsl
movb
pusha
les
pop
jns
movb
lea
mov
aas
jge
ffree
jno
ss
push
into
dec
pop
xlat
and
jl
or
mov
and
adc
adc
jmp
movsl
or
dec
push
jle
xchg
sub
inc
in
adc
and
mov
les
pop
mov
cld
out
adc
adc
dec
lcall
jo
fldl
mov
gs
cltd
mov
jge
hlt
xchg
loopne
xchg
push
mov
sbb
inc
pop
xchg
xchg
pop
aad
mov
dec
or
ljmp
inc
xchg
xor
xor
mov
jmp
lahf
mov
mov
daa
sub
cmp
sbb
fnstsw
push
push
gs
mov
sbb
mov
loope
lea
cmp
movsb
cmp
cmp
hlt
fwait
sbb
cmpsb
add
scas
mov
test
mov
ds
aad
pop
mov
mov
js
adc
adc
ljmp
scas
out
jne
stc
pop
lods
sti
sbb
js
in
push
mov
mov
shr
or
loopne
jb
mov
test
addr16
addr16
fstl
cmpsb
and
pop
hlt
cmpsl
dec
popf
and
jnp
xchg
int
shr
sti
in
sub
pop
out
jp
or
dec
lcall
jno
fmull
outsl
addl
or
jae
sbb
test
sub
inc
daa
mov
sbb
jle
mov
ss
fnsave
ljmp
dec
lcall
mov
pop
or
outsl
lret
add
jnp
pop
stc
fldl
jbe
idivl
sbb
aaa
add
imul
mov
sbb
sarl
popa
mov
mov
add
idivl
mov
push
rcrl
jns
loop
inc
jp
in
xchg
insb
jmp
jge
dec
jle
cmp
imulb
sahf
push
les
std
aad
pop
mov
jp
outsb
lea
add
out
ljmp
jge
xchg
inc
cbtw
icebp
leave
mov
mov
xchg
and
or
xor
xor
mov
cmp
mov
pop
in
xadd
dec
mull
dec
leave
sbb
rolb
fcmove
jb
lret
pop
add
out
pusha
jne
xchg
call
inc
cmpsl
stos
jecxz
les
fldl
loope
decb
or
sbb
add
add
ljmp
mov
lcall
lea
fstpl
push
jnp
cmp
clc
js
dec
pusha
or
sub
cmp
mov
pop
rorb
fisubs
popf
cld
icebp
push
lret
dec
sbb
leave
aaa
mov
fistps
cli
lcall
and
cmp
mov
cmpl
ja
pop
inc
push
xchg
cmpsb
sbb
dec
and
fstpl
jle,pn
sub
into
push
mov
fstpt
ret
mov
loope
ret
jb
sar
lret
push
or
les
aas
pop
mov
or
loopne
xchg
scas
aaa
and
jbe
pop
mov
fcomp
test
jns
mov
and
fdivl
xor
jae
ss
sub
sbb
frstor
iret
xchg
pop
call
lcall
imul
les
cmp
addr16
xor
adc
sub
inc
xchg
mov
and
in
xor
dec
push
xlat
out
gs
clc
mov
push
pop
aas
loopne
stos
xchg
pop
lcall
sarl
test
stos
fistpl
sub
cmc
cmp
mov
mov
scas
mov
mov
or
cld
push
ljmp
jecxz
mov
jmp
ja
adc
xor
leave
dec
and
xchg
mov
les
inc
adc
test
ret
aaa
paddsw
jp
in
imul
mov
mov
push
lea
ljmp
sub
or
pushf
mov
cmp
fiadds
push
and
cmp
test
loop
inc
pop
sbb
adc
cmp
xchg
xor
inc
aaa
adc
mov
jb
hlt
adc
sub
lcall
jle
dec
jae
pop
xchg
dec
orl
std
adc
add
pop
mov
sub
ja
cld
inc
inc
ja
pop
jmp
pusha
or
jb
mov
dec
or
xor
sti
rclb
mov
sub
cmp
mov
rolb
jns,pt
out
xchg
cmp
inc
lea
movsl
sbb
lcall
xchg
fstpl
push
pop
into
das
lods
mov
fs
push
push
aaa
fstpl
mov
lods
pop
push
adc
fstl
and
fildl
cmp
ffree
dec
sarl
lods
fs
pop
sahf
mov
jns
cmp
fistpll
pop
and
and
ja
psubsw
push
inc
call
rcrl
mov
pop
mov
test
inc
aaa
and
jo
lcall
adc
stc
mov
cmp
push
ds
mov
lods
subb
sub
and
fwait
loop
cmp
fnsave
push
or
cmp
cwtl
mov
push
fldl
pop
mov
mov
push
ret
mov
cltd
cmp
and
pop
enter
mov
jl
adc
sub
lea
ficomps
dec
mov
mov
or
fdiv
rclb
jg
shll
push
lahf
cld
bound
cld
int3
sub
inc
ficompl
test
idivb
and
fimuls
frstor
lea
sbb
aas
cvtps2pd
and
cs
pop
lock
cli
xchg
jmp
jno
jecxz
jb
or
add
mov
xlat
out
aaa
fidivl
jbe
stos
daa
js,pt
mov
sahf
nop
dec
push
dec
adc
shl
cmp
rol
inc
mov
sbb
insb
push
test
xchg
nop
leave
dec
mov
xlat
lcall
hlt
mov
icebp
push
cltd
fstpl
xchg
push
mov
or
mov
adc
aas
dec
pop
jnp
mov
sbb
pop
mov
inc
adc
mulb
aaa
mov
out
das
push
loopne
cmpsl
imul
andl
dec
stc
movsb
mov
out
movsl
adc
jns
ljmp
div
mov
jg
stc
pop
test
cmpsl
push
clc
pushf
pop
lock
mov
inc
mov
mov
dec
loopne
cli
push
mov
addr16
cmp
inc
jae,pt
or
adcl
lods
ret
add
jb
popf
frstor
adc
iret
inc
lods
faddl
scas
stos
out
dec
fsubrp
cltd
cmp
cmp
faddl
mov
and
push
leave
mov
pop
loopne
push
jg
ror
sbbb
mov
ret
fcompl
fwait
cmc
in
xchg
mov
push
push
sub
and
sar
cmpsb
popf
ljmp
lcall
mov
pop
mov
sahf
js
and
and
repnz
add
pushl
inc
mov
push
jb
mov
jle
in
cs
add
fwait
pop
cltd
sti
scas
test
adc
popf
cld
pushl
add
jle
or
aas
add
pop
inc
cmp
and
sbbb
loope
out
mov
lcall
jmp
fiadds
in
or
and
leave
mov
pop
jb
imul
cmp
jbe
sbb
dec
mov
shlb
push
and
fmulp
outsl
aaa
movsl
pushf
js
js
fdivs
stos
mov
inc
scas
ret
add
mov
pop
shl
cwtl
jle
test
jbe
and
pop
mov
inc
fmuls
dec
jns
or
movl
scas
icebp
clc
lcall
sbb
push
mov
xchg
mov
add
cmp
idivl
mov
lahf
adc
shll
lods
sub
mov
loope,pt
in
pop
fldcw
push
rorb
test
aam
inc
arpl
mov
and
cmp
mov
and
lcall
bound
das
out
and
cmpsl
sti
jne
clc
in
jbe
lcall
rcr
out
aaa
cmpsb
mov
into
in
nop
xchg
lcall
js
in
pop
scas
or
cmpsl
sub
xor
clc
pop
std
insb
fs
stos
test
js
js
scas
lcall
xchg
pusha
add
and
pop
iret
icebp
cmp
test
cli
pop
mov
orl
add
push
aas
movsl
sbb
xchg
xchg
ret
add
jge
pop
fdivrl
add
scas
mov
les
idivl
jle
dec
ljmp
sub
inc
pop
test
bound
jne
sbb
lea
test
in
inc
inc
sub
gs
jmp
test
push
pop
dec
adc
adc
pushf
mov
pop
fists
mov
icebp
faddl
inc
mov
inc
pusha
jmp
insl
aaa
fbld
mov
lcall
dec
pushf
fdivrl
jge
add
loop
jp
in
push
mov
outsl
push
inc
loope
test
scas
aam
mov
das
call
push
push
movsl
js
enter
call
cmpl
sahf
inc
inc
dec
les
adc
inc
mov
cmp
shlb
enter
or
out
push
pop
bound
jne
push
fcomp
fcompl
add
xchg
repz
imul
outsl
and
add
xlat
sbb
mov
mov
int3
jb
ljmp
fldt
js
testl
test
fs
mov
adc
cmpsb
sub
adc
fimull
popf
push
lds
inc
dec
add
test
mov
lret
fwait
push
xlat
dec
imul
pop
sub
and
jb
ljmp
int
ds
add
bound
ret
dec
pop
aam
gs
filds
add
jp
mov
ds
hlt
xchg
movl
ret
movsl
cmp
xchg
out
fstp
ss
je
jl
js
jmp
sahf
lahf
daa
gs
jne
mov
cmc
or
lods
pop
lcall
jno
out
fidivs
stc
push
inc
outsl
and
cwtl
sbb
aaa
push
repz
mov
test
mov
jnp
mov
sub
test
lcall
mov
pusha
movsb
outsb
sbb
repz
push
and
in
fcmovu
loopne
cmpsb
push
ljmp
data16
sti
sarb
dec
push
hlt
fmul
pop
xor
push
cmp
stc
pop
push
fs
adc
add
lcall
adc
xor
nop
mov
rolb
xor
inc
push
cld
mov
fsubl
pop
or
call
icebp
je
cwtl
out
lcall
and
repnz
sbb
inc
daa
xchg
testb
push
or
xchg
aas
fimuls
scas
je
adc
mov
xor
inc
jle
mov
clc
nop
std
test
or
test
cmp
aaa
lret
jb
adc
lahf
fbstp
jb
push
lcall
int
ffree
jle
jecxz
dec
push
adc
ret
movsb
mov
or
aaa
movsl
xchg
xlat
or
cmp
dec
mov
sbb
xchg
push
shlb
fsubl
arpl
xor
lret
aas
into
addr16
pop
xchg
xchg
es
push
stos
xchg
cmpsb
outsl
ds
shl
bound
into
lods
sbb
jmp
addl
mov
cmp
mov
sub
push
ret
sub
jb
and
pusha
add
aad
push
lods
pop
pop
sub
sub
xor
dec
mov
xor
jg
cmp
pop
sarl
loope
movsb
cmp
and
js
cmp
decb
jbe
and
or
js
in
push
add
popf
jge
pop
xor
jp
fdivrl
out
xchg
sbbb
mov
popa
add
std
aaa
jecxz
shr
popf
nop
scas
or
mov
aaa
lret
jno
cmp
lahf
nop
xor
cmpsl
adc
sub
push
mov
jmp
repnz
inc
stos
cmp
sahf
inc
push
mov
push
dec
jo
frstor
ret
dec
cmp
ds
pusha
mov
inc
xor
cmp
push
arpl
sahf
out
pop
pop
sbb
dec
subb
cmp
or
outsb
mov
xchg
push
or
imul
and
jmp
push
daa
fdivs
dec
aad
xchg
ret
mov
imul
mov
mov
cld
and
inc
sbb
fnstsw
adc
adc
fiadds
jg
sub
pop
jg
xlat
loopne
sti
mov
xchg
jecxz
jmp
xchg
pop
pop
das
test
dec
ds
lahf
outsb
and
daa
shlb
pop
pop
movsb
pop
cmp
dec
hlt
xchg
call
cmc
cmp
sbb
fdivl
call
adc
pop
inc
fldl
adc
sti
push
jno
and
das
lods
test
pop
dec
pop
clc
sahf
daa
cmpsl
dec
add
mov
pop
shll
add
mov
push
mov
in
stc
dec
loopne
fcompl
gs
popf
mov
ljmp
fdivl
mov
es
xchg
pushf
arpl
fisttpll
outsb
fldl
pop
inc
call
inc
mov
je
negb
fstp
cmp
outsb
xor
hlt
fstl
inc
xchg
adc
push
lcall
inc
lcall
mov
fst
mov
or
lret
mov
sbb
dec
sahf
pop
ljmp
xchg
push
fsubl
cmp
lcall
inc
pop
ficoms
or
test
aaa
aas
in
loopne
or
xor
bound
lock
and
mov
aas
xchg
test
stos
in
loopne
mov
push
mov
dec
bound
jnp
lcall
inc
lcall
sbb
fsts
test
je
mov
in
hlt
ds
pop
pop
ds
jmp
adc
ds
ds
dec
inc
add
xor
imul
jae
scas
adc
lcall
pop
inc
out
call
mov
lds
cmp
popf
and
ds
js
cli
jns
adc
or
or
sbb
pop
cmp
cmp
dec
pop
mov
test
or
dec
cmp
lea
pop
jp
mov
lcall
cs
fsubl
dec
sub
outsl
test
lret
xchg
pop
dec
jle
mov
inc
xchg
cwtl
call
loop
pop
ficompl
movsb
hlt
xchg
out
xchg
sti
lret
aaa
and
push
xlat
in
pop
inc
imul
jl
loop
mov
pushf
adc
cmp
cmp
insl
in
xchg
in
or
fldl
loopne
pop
daa
icebp
ds
pop
pop
jns
xchg
decb
insb
lock
movsb
cmpsl
fnsave
push
js
mov
loop
dec
mov
in
or
in
push
fisubl
inc
popf
insl
push
int3
sbb
mov
inc
jmp
inc
sbb
xor
lahf
lds
jbe
fstl
cmp
daa
dec
and
lret
fcompl
pop
and
xor
cmp
shrl
scas
jmp
add
stos
inc
cltd
lods
loopne
gs
std
inc
dec
test
out
in
push
push
mov
aaa
inc
fs
in
xor
jp
sbb
xchg
cmpsb
jecxz
loop
or
rcrl
dec
push
jmp
jnp
sub
inc
int
inc
popf
and
jle
or
sbb
fnstsw
sbb
rcll
movb
in
xchg
pushf
push
f2xm1
sarb
clc
icebp
cmp
lds
add
dec
lock
pop
sbb
push
mov
mov
add
insb
sahf
xor
out
call
mov
fisubrs
or
sbb
and
and
addr16
dec
cs
cmp
ds
lds
push
shll
pop
dec
sub
repnz
xchg
ficoml
movsb
mov
push
arpl
lret
adc
sub
push
outsl
sub
fwait
xchg
mov
cmp
pop
mov
xchg
arpl
shlb
adc
aaa
fsubrl
mov
mov
xor
push
or
mov
mov
adc
pop
mov
je
fldcw
cmp
push
mov
or
pusha
mov
ds
es
or
lods
int3
xchg
jno
sbb
mov
mov
adc
sbbl
mov
ffree
int3
repz
cltd
movsl
jg
in
bound
dec
push
sub
fninit
enter
sbb
pop
sub
pop
loopne
or
inc
inc
push
sbb
jne
js
ljmp
sarb
testb
jecxz
je
xor
mov
rorl
ljmp
rolb
adc
sbbb
in
pop
mov
mov
lcall
mov
fiadds
loope
mov
movsb
xlat
clc
push
ds
add
rolb
faddl
dec
pop
aam
mov
movsl
int
arpl
fs
insb
ret
shll
sub
es
fcompl
sbb
jg
aad
cmp
out
out
das
xchg
aaa
iret
lcall
in
dec
fnsave
enter
pop
loop
test
and
add
data16
lea
data16
pop
mov
or
popa
out
jl
mov
mov
inc
popf
mov
enter
xchg
mov
sarl
inc
insl
mov
jns
and
fsubrp
and
sbb
mov
enter
mov
mov
adc
in
push
shlb
repz
outsb
lods
jl
ss
sbb
push
pop
fistpll
stos
leave
fsubr
or
push
pop
mov
pop
lcall
mov
mov
pop
jns
dec
jo
pop
out
movsl
nop
inc
leave
pop
push
stos
sahf
push
push
loopne
pop
idivl
bound
movsb
xor
fiaddl
enter
sub
push
xchg
inc
sub
adc
icebp
jae
xchg
in
adc
mov
out
dec
call
xchg
cmp
imul
test
xor
mov
out
push
outsl
xor
add
jo
push
addl
jecxz
int
inc
xlat
dec
add
lcall
inc
mov
addr16
inc
les
jae
lret
stos
lcall
sti
cli
jecxz
cli
out
popa
mov
cmpsl
inc
push
fwait
pushf
mov
and
mov
scas
mov
xlat
loop
loope
cmp
mov
cmp
adc
rorb
loop
fidivrs
pushf
int3
addr16
lds
ret
and
cmp
popf
ds
jecxz
leave
xchg
lds
cmp
xchg
fildll
shlb
lds
xor
xchg
daa
out
jp
lcall
jnp
sbb
bound
jne
dec
mov
lea
dec
aam
cmp
fdivrl
icebp
inc
shrb
in
fstl
jnp
cmp
add
inc
sbb
xor
add
cmc
and
inc
push
sti
adc
icebp
je
aaa
ss
sbb
test
rcll
or
sub
movsb
rolb
in
sub
daa
scas
popf
xor
test
or
push
aaa
xor
sbbb
jmp
js
fisttpll
cmp
push
dec
insb
cli
or
ja
aad
lret
pop
popl
dec
cs
loopne
adc
dec
dec
and
das
insb
sahf
out
mov
bound
clc
dec
cwtl
xorb
mov
aas
mov
push
dec
aaa
xchg
das
mov
out
out
mov
cmp
cmc
jne
inc
or
je
int3
ret
lods
mov
int
push
mov
dec
outsb
loop
add
ret
mov
outsb
pop
fstp
outsl
gs
scas
addr16
out
cmp
fwait
adc
roll
push
cmp
insl
aaa
cltd
test
shrb
cmpsb
dec
add
fcmovu
jle
fidivs
pop
pop
bnd
jp
mov
adc
loope
xor
jo
das
js
adcl
and
daa
pop
int3
aaa
mov
sub
dec
test
xor
in
inc
jae
das
inc
jae
scas
jb
out
dec
cvtdq2ps
mov
inc
divb
push
in
mov
jecxz
xor
adc
cmc
loop
mov
dec
xchg
js
xor
push
dec
fiadds
mov
lcall
mov
mov
fwait
test
movsl
test
test
add
inc
cmp
and
hlt
stos
mov
fmull
xchg
jmp
push
aam
xchg
sub
push
mov
sahf
mov
cs
test
fstl
jae
ds
cmp
mov
dec
shlb
fs
mov
out
pop
sbb
lret
inc
push
lods
cli
xchg
cmp
orb
icebp
cmc
mov
mov
sbb
rcrl
pop
lods
mov
int3
mov
dec
rorb
jle
jae
ret
js
mov
add
lret
xchg
pop
test
mov
pop
in
in
cmp
movsb
sub
mov
fnstsw
mov
lcall
ss
std
jge
xchg
iret
aas
pop
int3
idivl
cmp
mov
add
aas
adc
push
test
or
je
lods
mov
popf
sahf
cli
aam
ds
sbb
mov
dec
mov
add
push
loopne
push
xor
pop
iret
or
dec
gs
xchg
jne
stc
push
push
insb
and
and
pop
insl
in
ss
pop
add
dec
dec
sarb
push
in
bnd
add
ja
in
loope
es
adc
pop
stc
cmp
push
loop
arpl
pop
out
mov
push
mov
dec
push
mov
fwait
idivl
cmp
push
inc
jns
cmp
call
fistl
mov
lret
mov
stos
fildl
jecxz
jmp
dec
fisubs
add
lcall
mov
int3
movsl
rorl
cmp
sbb
jo
fsubs
fisubrs
adc
leave
enter
ds
pusha
rol
or
popf
push
and
ds
lea
int3
xor
stc
lds
test
mov
xchg
adc
sbb
aaa
clc
and
js
mov
adc
ljmp
adc
rorb
sbb
sbb
sub
jne
dec
in
imul
in
fiadds
fdiv
in
cmp
or
cmp
ds
cmp
sbb
in
mov
xor
pop
mov
lock
lods
cmp
xor
sbb
pop
lcall
pop
mov
push
sbb
in
cli
cmp
lods
inc
jae
lods
sub
xchg
pusha
rolb
mov
sbb
jecxz
enter
pop
iret
add
icebp
lea
inc
enter
mov
fldl
cli
int3
mov
aas
mov
out
cmpsb
pop
and
mov
popf
out
cmp
inc
jo
addr16
in
pop
pop
or
gs
xor
fidivrs
imul
cli
add
ja
test
xor
pop
ffreep
fimuls
sbb
mov
popf
mov
into
mov
push
mov
fstp
jo
xchg
mov
add
cmc
mov
mov
mov
unpcklps
pop
dec
mov
out
pop
fisubl
cwtl
arpl
pop
sub
fstl
xor
ss
mov
pusha
xchg
fisttps
push
repz
cmp
lods
es
mov
mov
dec
add
mov
jne
sbb
sbb
sbb
sub
aam
pop
add
inc
stc
cli
gs
loop
cmp
and
add
aaa
or
aaa
mov
shll
sbb
pop
repnz
sub
mov
cmp
ja
xchg
hlt
std
add
in
ljmp
inc
add
push
inc
cmp
lcall
xor
stc
popf
mov
ret
inc
je
mov
inc
outsb
push
dec
mov
sbbb
inc
inc
aaa
lcall
cld
inc
mov
int3
imul
inc
insb
out
cmp
pop
push
mov
add
fmull
lret
sbb
in
xor
inc
in
mov
add
es
push
sbb
sub
inc
aaa
in
mov
sub
mov
das
push
sub
and
or
pop
in
xor
test
icebp
pop
mov
sub
ds
mov
xorb
shrl
xchg
mov
xchg
rolb
push
sbb
mov
std
sbb
stc
arpl
inc
mov
mov
lcall
in
filds
mov
in
or
in
pushf
ds
loop
repz
mov
pop
jmp
adc
movsb
push
in
jecxz
mov
lea
or
jbe
xor
aaa
inc
pop
inc
in
sbb
pop
inc
inc
and
cmpsl
popf
adc
jge
push
pop
xchg
push
jecxz
out
loop
aam
movsl
dec
and
cwtl
mov
sub
jns
fiaddl
push
fdivrl
popf
fidivrs
jg
jae
test
and
imul
ds
sti
cmpb
push
in
xchg
sahf
jno
daa
xchg
outsb
jo
lcall
jecxz
jmp
lock
clc
pop
js
push
xchg
jecxz
shlb
sarl
xlat
push
sub
mov
dec
jno
and
cmp
in
lods
sbb
adc
cmc
fisttpll
mov
int3
adc
cmc
fistpll
mov
and
bound
adc
shll
xchg
repz
inc
sbb
call
pop
inc
lcall
mov
mov
push
cmp
add
mov
ja
es
pop
pop
xor
sahf
inc
adc
xchg
mov
sahf
outsb
mov
sub
stos
mov
mov
adc
outsl
or
lds
mov
aas
sbbl
in
cmp
and
sbb
inc
adc
push
cmp
bound
fistps
mov
or
out
mov
dec
pushf
fimuls
fwait
mov
sbb
pop
and
ffreep
mov
cmp
or
inc
and
ds
fst
lds
lahf
aad
dec
test
idivl
cmpb
repnz
or
push
dec
rcll
fmull
fdivrl
movsl
fs
incb
mov
lret
jle
lods
mov
pop
mov
jecxz
pop
dec
jge
dec
nop
insb
add
test
push
ds
es
fsubrs
mov
adc
inc
dec
lcall
jmp
inc
loope
pusha
mov
mov
mov
xor
or
mov
jp
arpl
mov
cltd
sub
in
movsb
dec
ja
push
pusha
inc
fdivs
jo
and
lods
repnz
adc
lcall
mov
mov
xor
lcall
add
adc
out
dec
fs
aaa
ss
shlb
lret
xor
push
inc
xor
pop
mov
std
ds
sub
jae
insb
dec
push
xorb
lods
mov
test
dec
lret
das
mov
xorl
sbb
pmulhuw
sbb
pop
ja
fs
sbb
push
sbb
xchg
aaa
push
mov
andl
and
sti
mov
aaa
pop
loopne
pop
ja
pop
aas
xor
sbb
pop
xchg
push
push
sbb
testb
int
daa
jmp
cmp
out
jle
mov
jo
add
cmp
and
test
adc
push
or
push
mov
pop
cli
repz
test
dec
call
dec
jns
das
sub
cmpsl
out
movsb
clc
cmp
fildll
test
xor
and
jo
into
lock
dec
jmp
add
dec
mov
adc
add
adc
lcall
mov
sbb
jnp
push
sbb
push
mov
jg
cltd
inc
xchg
imul
pop
out
jmp
js
sub
subb
jno
mov
out
cmp
jmp
adc
inc
push
cmpsl
sbb
xchg
add
sub
aaa
and
pop
movsb
inc
fstpl
mov
sbb
imul
les
mov
mov
sbb
je
jl
and
fstl
dec
xor
cmpsl
fwait
cmp
jp
or
lcall
cmp
jbe
jne
xchg
jecxz
mov
jmp
mov
addr16
fisubs
dec
dec
push
mov
jb
mov
filds
push
push
pop
outsl
mov
fistpll
notb
xchg
xor
lds
test
jge
push
add
xchg
cmp
sbb
lcall
push
mov
scas
data16
aas
xchg
jae
push
xor
mov
std
and
add
or
inc
jle
inc
jg
test
dec
sahf
fiaddl
lods
test
enter
bound
mov
fwait
mov
pop
or
out
ret
in
imul
sti
imul
test
xchg
pop
mov
scas
mov
sbb
push
in
mov
mov
mov
jns
repz
xchg
mov
pop
push
or
out
lcall
pop
mov
lea
pxor
sub
pop
scas
mov
fstpl
mov
lahf
inc
movsl
adc
cmp
sti
sbbl
lcall
imull
mov
mull
inc
dec
jp
mov
mov
aas
jo
dec
sbb
shrb
lahf
por
lods
jns
push
out
popf
xchg
ss
insb
pop
repnz
addr16
jecxz
add
push
lods
lcall
push
xchg
fucomp
clc
lret
int3
fwait
cmpsl
test
ds
xchg
jecxz
cmp
inc
icebp
jnp
popa
fimuls
sub
add
fwait
sbb
mov
adc
xchg
nop
popf
cld
insl
fiadds
or
ds
pop
jmp
xchg
mov
xlat
xchg
dec
ja
xchg
push
xor
iret
pop
mov
mov
scas
sbb
jg
loopne
in
jle
aaa
in
mov
fcomps
xor
shr
cmp
pop
sbb
cs
imul
xchg
les
jp
arpl
jp
cld
aam
ljmp
aas
add
xchg
mov
into
sbb
pop
push
jns
addr16
xchg
jmp
mov
inc
cwtl
xchg
sbb
jge
test
pop
xchg
cmp
lods
movsl
repz
sbb
sbb
jg
mov
mov
fistpl
mov
xchg
lcall
and
fiadds
mov
ja
add
jb
jl
cmc
push
cmpsl
in
push
inc
insl
out
int3
test
inc
loope
xorb
insb
lcall
std
sub
jl
into
addr16
add
sbb
push
arpl
or
movsl
or
icebp
sbbl
lret
ret
ds
jbe
loope
sarl
jb
aas
and
femms
orb
xchg
int
sbb
loop
aaa
popf
push
mov
outsb
imul
push
pusha
inc
push
mov
sub
scas
add
mov
orb
sbb
out
pop
inc
sarb
mull
xor
gs
icebp
out
or
aas
lds
std
jne
mov
out
inc
sub
aaa
mov
fsubrl
mov
pop
push
mov
pop
mov
adc
clc
push
push
lcall
imul
lret
int
cmpsb
and
xor
fsubrp
enter
mov
pop
out
mov
sarb
sahf
xchg
mov
fdivp
sarl
ljmp
mov
pop
stos
aaa
inc
dec
shr
int
xor
mov
negb
lock
mov
cmp
cmc
inc
mov
pop
cmp
ficoml
sbb
scas
aas
vaddss
popf
mov
add
mov
call
ret
pop
xchg
lret
adc
rcrb
xor
push
andl
mov
xchg
aaa
subb
mov
imul
ss
mov
fdivrp
jno
mov
cmp
dec
sub
ss
cmp
sti
cli
cmp
pop
mov
pop
xor
dec
add
add
shl
inc
or
push
pop
mov
fnstsw
dec
push
sub
stos
fmul
subb
ds
fdivs
or
fcoml
inc
mov
lods
cmp
push
mov
inc
cmpl
jns
fisttpl
mov
sub
insl
xchg
cmp
pop
jl
imul
push
nop
jo
mov
icebp
xor
jmp
mov
jle
cmp
xchg
push
pop
push
cmp
dec
nop
out
and
out
fistl
or
mov
out
fcomps
ljmp
lcall
inc
lods
pusha
cld
aad
and
fmul
sub
mov
pusha
ds
inc
mov
in
pop
add
lds
in
loopne
ds
test
cmpsl
cwtl
cmp
fldl
adc
in
popf
mov
jle
lods
test
jg
decl
sbb
mov
adc
aaa
mov
cmp
cmc
enter
lea
or
pop
lcall
aas
mov
bound
pop
ror
fwait
ljmp
dec
cmpb
dec
sub
xchg
pop
ss
xor
js
cmc
adc
xlat
mov
lcall
xchg
and
js
mov
inc
mov
jp
dec
fnstcw
or
cmp
cmp
xchg
insl
outsl
cmp
lcall
cltd
arpl
aaa
iret
sbb
xor
or
call
out
jno
in
or
fstps
push
and
pop
out
repnz
aaa
fmull
jle
push
loopne
cmp
cs
sahf
out
out
incb
xchg
mov
fwait
xor
mov
out
cmpl
bound
sub
scas
mov
fbstp
add
inc
pop
test
jns
mov
stos
pop
cmp
es
out
in
movsl
lcall
cld
in
sbb
cmpsb
leave
xchg
push
aaa
jns
div
xrelease
lcall
inc
popf
ljmp
pop
or
mov
imul
xor
lcall
hlt
fwait
nop
mov
out
inc
xor
nop
cmp
adc
movsb
jae
rcll
mov
fnstcw
pop
push
xchg
stos
cmp
ljmp
movsl
push
bound
loopne
rcrb
mov
roll
mov
mov
sub
lcall
mov
out
and
out
add
cli
mov
sub
xchg
bound
das
call
subl
filds
pop
sbb
mov
test
sub
shrb
sahf
inc
pop
icebp
es
mov
xlat
inc
lahf
jle
andb
in
jnp
out
lret
pop
pop
mov
sbb
lcall
out
jno
or
cmp
sub
repz
pop
xor
lret
inc
mov
cli
addl
and
aaa
push
dec
push
mov
jge
xlat
mov
cmpsb
pop
add
popa
or
xlat
call
inc
fdivl
outsb
lds
push
cld
push
frstor
push
ds
sub
mov
jg
mov
xorl
sysenter
ja
jmp
imul
cli
data16
loop
mov
dec
pop
orb
pop
loop
stc
cld
pop
pop
popf
adc
in
sub
xor
jp
xor
sbb
jns
adc
ss
ds
hlt
jbe
aas
sub
fimuls
lcall
fcmovu
lea
jmp
cmc
ret
rclb
ds
adc
inc
out
dec
insl
ds
cli
push
sbb
ds
rorb
cwtl
and
ds
out
cmc
insl
cmp
cmp
inc
and
and
sbb
aaa
mov
aas
mov
cmp
fdivr
imul
push
jbe
cs
sbb
rcrb
out
xor
subb
jno
ret
lock
xchg
sub
sub
fstl
scas
mov
pop
ds
cltd
hlt
jle
cmpsb
inc
cmp
repnz
cmp
into
out
pop
ret
sbbb
leave
xor
enter
out
negl
and
xchg
xchg
fistpl
inc
mov
jae
mov
mov
xchg
test
repnz
sub
pushf
pushl
sti
enter
pop
test
rcl
xchg
cmpsl
dec
mov
cli
rcr
sbb
lea
mov
shlb
xchg
mov
dec
cld
pop
xlat
daa
lds
cmpsb
aaa
div
repnz
sarl
lcall
inc
add
cmpsb
fsubrs
cmp
xor
lret
out
lret
mov
fsubl
xchg
loopne
scas
sbbb
cltd
dec
ds
jmp
daa
push
cmp
push
out
xchg
pop
cli
fcoml
mov
push
arpl
test
mov
adc
sbbl
inc
loopne
mov
dec
in
cli
mov
fidivrs
dec
in
imul
mov
enter
jae
js
xor
push
mov
add
lahf
pop
sub
sbb
sbb
ljmp
sub
outsl
lds
in
sbb
sbb
icebp
lds
fmul
faddl
mov
pop
shll
xchg
subb
jmp
jbe
fcmovnb
fisubl
inc
adc
mov
fisubl
jo
frstor
and
flds
inc
in
dec
in
pop
dec
xor
rep
xlat
jns
jg
pop
fnstsw
or
adc
lock
add
adc
pop
dec
aaa
jae
repz
aad
or
pop
xor
mov
mov
inc
pushf
cmp
scas
data16
inc
and
in
cli
cmc
inc
pop
sti
cmp
sbb
nop
outsl
aaa
loopne
xlat
sub
repz
push
cmp
cmpsb
push
adc
es
cwtl
push
outsb
xchg
outsb
sub
cmp
push
icebp
lcall
cwtl
mov
or
mov
jo
loop
sub
add
aaa
cmpsl
dec
ret
mov
xchg
lcall
dec
and
ret
cmp
dec
inc
cmp
fcomp
pushf
ds
mov
xor
and
lcall
jg
fnstsw
shrl
or
lahf
ficompl
iret
sysret
mov
out
aas
xchg
mov
pop
inc
push
pop
pop
push
inc
hlt
ds
push
dec
push
sahf
pop
jns
push
mov
mov
sub
shl
jmp
aas
lcall
jp
fcompl
cmp
jo
rcll
ja
or
in
mov
mov
fstl
jae
aas
pop
xchg
and
mov
popf
aad
ja,pt
xor
push
ds
lahf
lods
fidivl
ds
ds
adc
shlb
nop
nop
mov
testb
fistl
stos
jl
push
in
pushf
fsubr
mov
add
mov
inc
dec
cli
cmp
mov
sub
mov
add
and
iret
jne
xor
mov
jnp
xchg
jge
jp
sti
dec
jl
repnz
dec
fucomp
pop
hlt
jg
scas
test
sti
pop
jmp
push
and
mov
inc
stos
stc
cmp
scas
pop
sbb
inc
mov
mov
pop
and
lock
mov
fistps
aad
outsl
jg
lds
sbb
mov
leave
inc
sbb
std
dec
enter
popf
in
sub
insb
xorb
lea
pop
lcall
and
and
mov
aad
cmp
sahf
push
or
scas
ss
cltd
jnp
ljmp
sti
loope
or
mov
aaa
nop
mov
aas
and
bnd
adc
pop
outsb
imull
mov
ret
cmp
inc
pop
pop
lea
cmp
jns
mov
sub
ret
mov
jmp
jae
mov
lcall
and
fmull
pusha
and
insb
add
cmp
shl
ds
aaa
popf
rclb
mov
xchg
jno
push
add
cli
je
cmpsb
mov
pop
mov
pushf
sub
lcall
test
fmull
std
and
sub
adc
jns
fucom
pop
fldt
push
sbb
xchg
negl
and
cmp
xchg
ss
test
ds
mov
pop
rcrb
or
ja
adc
sub
jecxz
dec
test
rcrb
pop
jp
loopne
ss
sub
inc
rcl
push
sbb
fldl
mov
cmp
scas
add
sub
sbb
mov
push
mov
push
jns
xor
cmp
sbb
cmp
pusha
andb
cmpsl
cmp
loop
sub
cmp
ffree
mov
inc
loopne
jmp
push
inc
xchg
mov
lcall
in
and
pop
cmpsl
pop
pop
adc
or
cmp
mov
jb
shrl
sti
movsl
icebp
aad
insl
mov
mov
mov
mov
and
repz
std
daa
cmp
mov
push
ds
fimuls
adc
std
stos
jle
ds
cmp
mov
ds
xchg
jnp
xchg
fucomip
and
dec
add
mov
daa
lret
fucom
dec
mov
subb
ds
out
mov
mov
test
ficomps
push
addb
cmc
xchg
leave
pop
and
xchg
xor
sub
fildll
movsl
adc
xor
in
enter
aaa
push
xor
rol
dec
cmpsl
or
negb
pop
leave
sub
outsb
xor
clc
xlat
mov
lcall
adc
mov
dec
lret
xchg
loope
lods
mov
ret
add
push
jne
sbb
test
push
xchg
or
jecxz
pop
lcall
xchg
int3
push
push
mov
pop
ljmp
std
icebp
das
mov
mov
inc
popf
test
add
ljmp
fcmovnu
push
insl
out
loope
jge
push
pop
lds
mov
call
les
adc
cmp
ds
sahf
into
mov
sbb
jmp
dec
inc
shrb
fimull
repz
xchg
push
mov
std
pushf
jl
lahf
daa
mov
jl
xchg
adc
das
lea
mov
inc
dec
test
inc
pop
fstpl
inc
add
aam
mov
fcoml
push
movsb
sarb
push
pop
insb
and
xchg
xlat
mov
push
aaa
lret
cmp
push
jge
lcall
push
arpl
add
mov
test
mov
dec
mov
dec
fdivr
bound
fdivp
mov
xor
and
mov
xchg
xor
mov
inc
inc
inc
mov
aam
test
mov
or
inc
inc
out
pop
or
aaa
in
and
test
mov
cmpsl
sub
mov
sbb
pop
mov
jne
cmp
ret
imul
loope
in
pcmpgtb
pop
stos
outsb
movsb
sbb
mov
cwtl
or
mov
sub
popf
sbb
xchg
imul
jge
movsl
dec
jne
sub
push
xor
aaa
insb
xor
add
and
mov
lea
cli
pushf
movswl
stos
cmp
loop
daa
aad
addr16
and
imul
inc
stc
push
out
inc
loope
sub
push
scas
adc
xor
scas
out
and
xor
mov
dec
shlb
dec
inc
stc
push
fs
adc
fisubs
xchg
push
scas
cld
push
les
fsubrl
sub
loop
loope
push
cld
ret
push
fldl
xchg
int3
test
loope
push
mov
dec
cltd
mov
mulb
jns
cmp
dec
ret
aaa
cmp
push
push
shrl
adc
es
xchg
push
cmp
jmp
jp
lea
jle
call
sar
loopne
mov
mov
popf
shlb
mov
popf
sbb
fmuls
mov
fmull
sbb
cs
lock
ret
push
sbb
jle
test
sub
loopne
aaa
push
lret
dec
mov
jecxz
cmpsl
js
iret
add
sbb
lcall
push
rclb
dec
cmpsb
popf
mov
frstor
jmp
mov
addr16
lock
cwtl
mov
dec
xchg
cltd
scas
mov
cmp
adc
inc
icebp
gs
jg
inc
in
mov
rclb
mov
popf
fisubrl
popf
dec
movl
leave
pushl
xchg
pop
mov
xchg
fstl
cmp
add
cmp
sahf
dec
cs
mov
ljmp
pushf
lods
push
inc
cmovo
or
lret
cmp
add
out
cmpl
sbbl
popf
mov
pop
push
add
mov
pop
fstl
push
xchg
pop
lods
mov
jmp
stc
mov
arpl
ss
jae
jmp
mov
cmp
lcall
mull
jns
or
out
bound
mov
std
pushf
lcall
pop
fisttpll
lret
mov
andb
lock
fnsave
sub
cltd
pop
sahf
daa
bound
std
std
push
and
addr16
lea
mov
incb
fisubl
enter
nop
push
stc
pop
pop
fucomi
cmpsb
gs
fcmovnb
push
add
icebp
cmp
cmp
pop
insl
adc
pop
jbe
push
xchg
push
dec
cmc
cmpsl
jo
mov
shll
in
ljmp
les
push
and
mov
mov
rorb
sahf
sbb
sbb
inc
mov
js,pt
fcomip
inc
daa
fldl
clc
fwait
pop
cmp
cmpl
rcr
inc
test
or
mov
jb
sub
adc
sbb
subl
push
movsb
cmp
lcall
jae
fcoml
aas
subb
in
sarb
or
das
mov
dec
lea
fisubs
jp
pop
ds
mov
popa
xchg
add
jmp
mov
icebp
imul
cmpsl
nop
dec
push
hlt
jno
push
push
sub
or
pop
jge
aam
mov
out
add
add
xor
inc
xor
pop
mov
cmp
insb
shlb
pop
dec
lahf
test
pop
mov
adc
leave
jp
and
mov
fistps
and
jmp
in
sarl
mov
mov
inc
jno
sub
cmp
shrb
sbb
cmp
enter
scas
mov
fists
cmp
inc
lcall
out
xor
loope
lahf
andl
mov
lods
pop
lds
mov
test
adc
aad
jp
repz
sbb
and
ficoms
pushl
push
xchg
shrb
stos
ds
add
ja
jnp
push
scas
lcall
mov
push
pop
sbb
jl
gs
jne
xchg
int
std
enter
out
push
or
inc
xor
lcall
dec
int3
fstp
cmp
adc
xchg
mov
pop
xchg
cmp
push
pop
mov
lahf
outsb
aas
mov
pop
mov
adc
pop
jb
lcall
sbb
push
mov
in
dec
test
loopne
jl
sbb
fdivr
cltd
xchg
fstl
out
fcoms
mov
pop
out
push
mov
push
push
or
loope
push
mov
andb
shll
iret
mov
sub
mov
shr
cs
inc
dec
ficomps
ljmp
ret
ljmp
inc
sub
jns
sbb
cmp
inc
lahf
xor
fdivrs
mov
pop
out
push
and
sbb
sahf
fistpll
in
scas
push
pop
je
and
adc
inc
rcrb
fs
cmpsb
mov
sahf
mov
and
inc
cld
mov
repnz
test
imul
cmp
jge
or
dec
cli
dec
inc
add
fldenv
xor
fdivrl
jae
cmp
add
out
push
fildll
xchg
lock
inc
inc
sub
rorb
icebp
fcomp
dec
xchg
repz
div
dec
gs
shlb
std
xor
bound
jg
dec
xor
add
call
mov
subb
enter
xchg
mov
mov
and
aas
and
fildll
push
xor
sti
pop
icebp
outsb
ret
jo
fistpl
sub
aas
cmp
scas
decb
leave
mov
sub
jle
gs
test
stos
jns
mov
bound
outsb
pop
and
push
clc
negl
lods
stos
pop
cmp
push
xor
sub
add
shlb
ss
adc
rcrb
in
and
adc
rorl
cmp
inc
jo
inc
out
mov
push
repz
mov
dec
push
push
add
leave
sbb
imul
into
clc
cmp
xchg
adc
nop
lds
adc
int
add
and
jns
shrd
aaa
fsubrp
lret
xor
rolb
arpl
rcr
xchg
sub
push
loopne
clc
xchg
adc
xorl
filds
add
add
inc
and
or
fwait
dec
xlat
xor
cmp
push
inc
pop
mov
cmp
lock
mov
out
sarb
fdivrl
addr16
mov
es
mov
xchg
hlt
adc
stos
mov
sub
sub
stos
fidivs
mov
or
and
push
and
jge
jle
and
and
and
xor
mov
inc
js
aaa
push
fidivs
sbb
and
movsl
std
or
jb
cmp
mov
push
add
loop
inc
int
cmp
call
push
inc
loopne,pn
xor
or
mov
adc
lret
xchg
jle
pop
pop
sub
mov
inc
fmull
xor
jp
pop
jae
rol
inc
sahf
js
sbb
add
fwait
xlat
jg
arpl
mov
inc
mov
scas
jmp
sahf
aaa
mov
push
hlt
syscall
scas
loop
mov
lea
aaa
stos
cmp
arpl
out
leave
cmp
scas
in
lcall
addr16
mov
inc
inc
jmp
ds
mov
push
lea
cmpsb
push
adc
pushf
jb
jo
into
es
xor
dec
imulb
dec
push
flds
lock
and
aad
test
sbb
lret
jno
rorb
repnz
iret
stc
push
mov
sahf
fcoml
sub
inc
stc
and
vpinsrw
pop
push
repz
pop
mov
adc
outsl
cmp
aas
adcb
mov
aam
rolb
popf
mov
jnp
sbb
inc
adcl
cmp
fcmovnu
adc
int3
sti
cli
dec
jp
xor
pop
lret
test
cmp
push
mov
cmp
lcall
aaa
adc
push
push
popf
xor
jle
pop
stos
ss
ljmp
sbb
sbb
lea
sbb
cmp
aaa
push
jno
fdivl
in
enter
sub
mov
popa
pop
es
mov
sbb
lods
fs
inc
add
std
sbb
push
jmp
stos
int
ds
dec
mov
les
fdivl
mov
fdivrl
push
pop
cmp
push
jp
ds
jb
hlt
cmp
cmc
repz
call
lcall
xchg
es
cmp
jbe
mov
in
xchg
lcall
cwtl
sbb
imul
clc
cmp
in
rolb
xor
jbe
lahf
cltd
mov
push
add
add
mov
lcall
lods
sar
scas
pop
mov
cmpsb
negl
stc
inc
mov
or
gs
fcoml
inc
insb
inc
pop
aas
cmc
add
into
fsubrl
nop
sbbb
mov
in
notb
mov
xchg
inc
aad
xorl
and
adc
mov
test
mov
fisttpll
pushf
jnp
xor
nop
scas
sbb
div
xor
aaa
xlat
sub
adc
dec
dec
cwtl
int3
inc
ljmp
inc
inc
cmp
mov
sbb
and
push
mov
mov
xchg
sahf
insb
pop
paddusb
pop
iretw
sahf
jne
push
mov
adc
jns
loopne
lret
fucom
mov
mov
sbb
mov
ljmp
or
mov
lcall
in
mov
and
sbb
pop
dec
cmpps
aaa
dec
cmpb
adc
push
cwtl
cmp
jl
adc
insl
xchg
lret
in
movsb
punpckldq
aam
jge
pop
cmp
jne
and
repz
stos
lcall
mov
fisubl
mov
lcall
aas
push
in
pop
stos
in
ds
inc
cmp
mov
in
js
and
js
prefetch
mov
lock
clc
fwait
push
push
push
pusha
cmpsb
dec
in
pop
or
scas
test
mov
mov
sub
mov
fsub
sarb
cmp
mov
ds
mov
enter
xor
aaa
xchg
lock
sub
out
cmc
pop
cmp
stos
sarb
lcall
rorl
inc
andb
xchg
mov
rorb
fstpl
aaa
mov
pop
or
cwtl
inc
jb
sbb
roll
aas
mov
leave
push
cmp
test
lea
mov
add
xor
adc
addb
stos
lods
push
sub
jp
pop
fidivs
mov
xchg
adc
jns
jp
mov
push
and
loop
pop
mov
push
inc
and
cmp
sub
fimuls
in
sbb
push
xchg
aas
cmp
inc
popa
sbb
fnstsw
jo
fwait
push
in
cmp
fadds
add
aam
cmp
fnsave
ja
mov
push
push
jg
ljmp
shrb
insl
ds
call
xchg
adc
movq
test
popf
out
nop
cmp
sbb
clc
push
or
cmp
jno
stos
pushw
ret
pop
push
jns
mov
sbb
popa
fdivrp
int3
ljmp
addr16
dec
outsb
clc
popf
dec
jne
fisttpl
lods
je
xlat
lcall
std
mov
adc
outsb
sbb
ds
mov
push
xchg
aaa
inc
cmp
add
pop
mov
icebp
push
rclb
fildll
dec
mov
clc
int3
fcomps
push
mov
ds
cltd
xchg
lock
dec
aaa
ret
adc
arpl
popf
lds
cmc
mov
fnsave
stos
movsb
push
mov
pop
mov
push
mov
jne
out
and
fistl
and
aaa
repnz
add
or
mov
in
aad
sbb
sbb
jg
lods
pushf
imul
pop
mov
clc
mov
cld
scas
inc
cmc
sbb
cmp
xor
imul
fcomps
dec
adc
fcompl
inc
pop
lahf
pop
cmp
pusha
or
jne
lcall
pop
xor
leave
rclb
inc
insl
or
filds
testb
jmp
test
ds
test
das
scas
daa
lcall
scas
mov
icebp
mov
pop
mov
mov
clc
lds
stos
je
lea
sub
pushf
ss
lret
dec
mov
dec
push
ja
fidivrl
jae
or
cltd
cmp
cmp
cmp
cld
xchg
dec
mov
jp
in
ds
movsb
stos
cmp
xor
scas
or
mov
out
aaa
jp
out
dec
lret
mov
add
aaa
je
dec
cltd
inc
cmp
or
cs
push
adc
push
sbb
pop
mov
loopne
jo
push
mov
aaa
jno
dec
stos
push
cltd
or
pop
je
sbb
or
popf
push
xor
dec
mov
call
stos
pop
inc
jbe
aaa
jne
scas
push
add
mov
in
mov
cmp
enter
dec
outsb
lods
push
lahf
jns
dec
popf
cli
ss
insl
loopne
cltd
scas
push
rcrl
into
mov
in
pop
mov
stc
push
movsb
xchg
add
das
jle
push
push
ds
mov
lahf
cmp
std
push
mul
lock
cmp
pop
add
cmpl
mov
push
ljmp
pusha
pop
inc
mov
clc
nop
js
iret
insb
aas
mov
pop
ja
dec
pop
mov
loope
push
push
and
cmp
xor
xor
out
scas
dec
cli
cmpsb
push
cmp
aam
nop
enter
sub
mov
add
clc
sbb
cmp
pop
inc
mov
lea
ds
sub
jmp
cld
sarl
push
test
fstp
mov
ja
add
adc
fistps
decb
pop
mov
xor
mov
loope
pop
push
pop
cmp
mov
sub
push
xchg
sbb
sbb
mov
test
jns
lcall
mov
cli
sub
jnp
insl
dec
loopne
ds
jne
ret
dec
scas
cmp
push
popf
jg
mov
push
repz
mov
cwtl
fnsave
jmp
cmpsb
ds
out
inc
inc
sub
call
mov
sbb
mov
pop
lcall
std
push
fstpl
mov
xchg
arpl
enter
sbb
mov
adc
fistps
mov
or
or
cmp
aaa
adc
inc
xchg
xchg
jecxz
cmp
fdivl
dec
inc
jle
lahf
xchg
sub
fwait
call
inc
sbb
lods
or
inc
loopne
icebp
ja
jo
xchg
push
popf
push
in
inc
add
cwtl
cwtl
or
pop
jns
jg
adc
ljmp
dec
in
fmul
out
ljmp
enter
loop
imul
jle
into
ljmp
push
popf
mov
sahf
sbb
daa
lcall
adc
clc
or
repnz
stc
push
mov
jae
fs
dec
aas
arpl
xchg
jns
push
lods
inc
aaa
jmp
cli
xor
and
rorb
and
mov
cmp
paddusb
mov
fmulp
cmc
adcb
push
addr16
push
sarb
fsubl
push
mov
and
inc
lcall
mov
inc
push
movsl
and
cmp
or
pop
add
cmc
mov
sbbb
leave
cmp
cmpsl
xor
jae
and
jp
xchg
adc
outsb
pop
sbb
jp
stos
popf
out
and
jmp
int3
add
enter
adc
mull
mov
jbe
mov
shlb
sbb
lret
pop
lods
sbb
dec
mov
in
movsl
cmc
sbbb
ljmp
lcall
sbb
xchg
les
adc
pop
dec
cmpb
sbb
stc
jne
xlat
mov
push
out
dec
js
mov
adc
mov
fildll
push
out
jl
popf
push
jg
cs
divl
je
sahf
and
andb
mov
jl
lods
addr16
push
lds
fstp
inc
loope
adcb
inc
inc
fnstsw
sbbl
aaa
ficoml
jae
aaa
lret
xor
or
cmp
add
pop
jbe
xchg
ds
sub
sub
shll
push
sub
dec
dec
pop
aas
adc
sub
adc
lret
xor
test
icebp
cmpsl
outsb
inc
mov
xchg
jl
repz
mov
jmp
cmpsb
jecxz
repz
cmpb
nop
pusha
fimuls
mov
ja
xchg
ret
fs
cmp
mov
push
jge
push
push
ds
aaa
daa
push
test
out
ds
jae
cmp
in
mov
inc
lcall
je
jecxz
mov
test
stos
mov
dec
ret
jp
stos
pushf
shll
adc
mov
lock
data16
dec
sahf
pop
cli
cmpsl
inc
jmp
stc
pop
negl
rcrb
cmc
mov
cmp
fnstsw
inc
pop
jo
add
fstpl
add
rcr
adc
popa
cmp
sarl
adc
fidivrs
jo
shrl
shr
jmp
insl
lock
cli
movsl
jl
pop
jnp
lock
loopne
fisubrl
test
test
movsl
dec
jge
jle
jo
xor
lret
sbb
mov
popf
mov
outsb
sub
in
jae
sbb
dec
pop
lahf
or
popf
inc
decb
das
inc
aaa
loope
jg
out
movsb
and
cwtl
enter
jle
dec
sbbb
xor
mov
dec
jbe
mov
test
ret
pop
es
jg
fcmove
popfw
movsl
push
nop
iret
jne
fwait
pop
mulb
add
in
pop
jmp
sahf
inc
fucomp
cmpsb
in
lock
pop
loope
fadds
jmp
or
imul
or
sbb
bound
mov
fdivrs
leave
xor
jo
test
push
addb
adc
hlt
lcall
mov
push
adc
cmp
and
scas
push
lcall
fs
lret
fsubl
andb
xchg
rol
hlt
movsb
cmpsl
pushf
cs
xchg
adc
lods
movsb
arpl
das
fmull
jp
leave
or
shr
outsl
push
mov
fcomip
add
mov
mov
pop
cmpsb
lcall
inc
pop
push
ret
out
cmc
std
aam
mov
inc
outsl
adc
xor
ficompl
dec
mov
movsl
lock
stos
outsl
xchg
jnp
push
shll
sub
int3
jno
push
mov
xchg
ficoms
lcall
ds
push
scas
test
xchg
sub
pop
scas
fildl
out
adc
lcall
shll
cmovbe
push
add
and
popa
and
out
fsubrl
pop
ficomps
adc
aaa
sahf
sbbl
call
lcall
sbb
mov
mov
aaa
push
lret
stos
adc
mov
jmp
in
mov
push
cmp
pop
mov
popf
adc
mov
outsb
scas
rcrb
pop
pop
mov
daa
and
or
pop
sub
xor
rcll
jmp
lcall
sbb
ljmp
pop
xchg
ret
scas
lcall
cwtl
clc
ret
push
jb
loopew
sub
lcall
scas
sbb
pop
sub
rcl
dec
xchg
aas
pop
lods
in
xlat
arpl
jne
enter
pcmpeqd
sbbl
je
aaa
sbb
push
lods
ja
stc
mov
push
fisttpl
fmul
cmp
xor
xor
aaa
pop
mov
out
mov
mov
or
jo
dec
jle
xchg
dec
cmpsb
js
mov
test
pop
add
int
daa
mov
sub
sbb
push
push
xchg
pop
add
push
mov
mov
inc
addr16
mov
mov
fcoml
xchg
or
pop
pop
xchg
sbb
fstp
xchg
idivl
lods
insb
ja
inc
js
jns
es
pusha
lods
mov
xlat
push
test
pushf
mov
aad
jne
dec
and
mov
pop
dec
data16
sub
negl
mov
bound
fidivrl
ret
mov
mov
int
inc
sbb
adc
xor
movsl
lret
mov
pop
fucomp
mov
bound
or
in
xchg
loopne
inc
or
cmp
push
insl
sbb
in
jge
lahf
out
or
cmp
lcall
cmc
adc
inc
test
cmp
je
fsubrl
mov
jle
jne
mov
arpl
movsl
push
aad
mov
mov
mov
int3
sub
leave
push
mov
out
inc
fistpll
aaa
dec
rorl
add
cmp
repz
leave
lcall
cmp
fwait
inc
lds
lcall
fisttpll
out
pop
test
inc
insl
leave
mov
ljmp
out
fstl
push
arpl
addl
and
xchg
xchg
jg,pn
icebp
mov
cmp
out
pop
arpl
xlat
int
dec
push
push
pop
insl
inc
sbb
in
iret
pop
popf
dec
lcall
icebp
sbb
fdivl
in
enter
popa
imul
lret
movsl
loope
aaa
xchg
sub
xor
mov
jo
xor
sahf
outsl
pop
lahf
mov
xor
lds
int
mov
aaa
inc
cmp
sbb
lock
ss
aaa
dec
push
nop
cmp
mov
lods
sbb
mov
inc
std
loopne
jnp
and
inc
pushf
add
mov
pop
dec
out
sbb
cmp
nop
lds
faddp
cld
and
lods
pop
dec
mov
movsb
stc
lahf
into
jmp
xor
add
daa
adc
jbe
fdiv
cmpsb
push
xor
lds
fs
popf
aaa
mov
push
mov
cmp
lcall
bound
xlat
popl
popa
push
mov
adc
inc
insl
pop
cmp
pop
pop
add
jns
sbb
add
xchg
sbb
jmp
inc
aaa
stos
loopne
push
loopne
lret
sti
mov
lcall
popa
mov
fwait
mov
outsb
ds
push
movb
pop
idivb
fwait
lock
dec
push
mov
out
adc
adc
imul
mov
shlb
push
adc
js
and
mov
xchg
xor
fdivl
adc
pop
xchg
push
push
lea
pop
popf
mov
sbb
leave
mov
decl
and
negb
sahf
sbb
add
mov
scas
fmul
jno
pop
xchg
mov
in
dec
dec
mov
mov
sbb
mov
or
pop
and
mov
movsl
aaa
test
stc
push
fwait
push
jmp
push
mov
lcall
pop
add
push
cwtl
mov
cmp
jge
jp
sbbl
fwait
loop
dec
add
test
xchg
mov
add
outsb
or
mov
push
js
loope
jne
dec
mov
lcall
sti
xchg
mov
pushf
ds
insl
rcll
mov
xlat
mov
aaa
mov
cmpsl
ds
xchg
push
aaa
lock
xlat
mov
sub
stc
mov
inc
xchg
pop
pop
cmp
and
fadd
fninit
and
psubb
sahf
dec
pushf
outsb
add
xchg
inc
mov
lds
inc
sarl
es
ljmp
push
fstpl
adc
mov
jb
ret
or
cmp
adc
or
out
cmp
mov
cmp
fwait
scas
outsb
mov
mov
mov
push
sbb
add
or
cwtl
adc
stos
cltd
lcall
pop
arpl
out
inc
mov
popf
cmp
xchg
adc
mov
mov
sub
out
fadds
cmp
push
add
or
popa
pop
cs
and
lahf
push
mov
fidivl
adc
ds
xchg
push
imulb
fucom
xchg
dec
cwtl
dec
leave
jno
pop
push
jle
jle
sub
fs
in
les
sbb
mov
xor
xchg
out
inc
lcall
icebp
inc
cmp
cld
repnz
scas
jo
in
add
pusha
push
ds
dec
fisubl
mov
loope
cli
cmc
je
pop
std
cmp
sti
push
leave
aaa
cmpsb
test
pcmpgtb
mov
lret
push
sar
and
shll
js
ret
insb
jecxz
lcall
dec
jnp
loopne
sbb
ss
cmp
cmp
add
sub
xchg
arpl
sub
jecxz
add
jl
pushf
sub
push
enter
or
out
cmp
cwtl
ljmp
shll
pop
sbb
xorb
daa
in
in
shll
aaa
ljmp
scas
fwait
loopne
lcall
hlt
mov
fildll
cwtl
aas
jl
xor
pusha
mov
lret
pushf
fsubl
inc
call
scas
inc
lcall
pop
mov
adc
daa
lcall
dec
lcall
shrl
lods
or
stc
inc
fldt
xchg
clc
test
loopne
sub
adc
or
adcb
aaa
mov
lret
popf
xchg
and
add
jnp
mov
push
ds
fcompl
bound
aas
cltd
sbb
loop
mov
lret
scas
dec
movsl
sti
cmp
out
jle
xchg
xchg
mov
lea
rcl
lcall
push
in
jno
mov
pusha
lret
mov
jo
mov
mov
push
aaa
add
cmp
mov
ret
inc
fnstsw
add
ficompl
shll
push
js
push
es
jo
ds
fimuls
ss
jp
pop
pop
negb
cmp
hlt
mov
xchg
insl
es
inc
pop
test
shrl
cmp
lret
in
js
sahf
adcb
stc
xchg
push
ret
mov
cmp
sahf
jg
mov
or
cltd
xor
movsl
aas
xchg
add
lcall
les
repz
sbb
aad
push
cmp
ficoml
mov
shrb
es
pop
jmp
mov
or
lahf
mov
lea
aas
pushf
cmp
lods
mov
jp
inc
pop
add
arpl
add
repnz
mov
mov
mov
sbb
dec
push
jne
js
lret
pop
adc
lods
in
adc
cmp
sbb
mov
xchg
and
shl
sarl
iret
aaa
jno
push
pusha
xor
cltd
fidivl
sub
in
mov
hlt
inc
test
mov
out
lret
cmp
mov
jle
push
add
lea
lcall
mov
jmp
pop
fists
in
sarb
dec
aad
dec
xchg
dec
or
jno
fistps
mov
mov
inc
mov
pop
std
jmp
mov
loop
fucomp
mov
mov
std
cmpsb
adc
push
ret
inc
add
jge
lret
xabort
mov
int3
lea
xchg
mov
gs
jno
les
xchg
lods
jge
outsb
inc
fimuls
aad
arpl
outsl
adc
ror
mov
hlt
enter
dec
fwait
cmp
into
mov
insl
subl
cmpsl
icebp
adc
add
cltd
loopne
xor
cltd
cmp
cmp
lods
add
movb
std
dec
pop
mov
jo
add
xchg
dec
gs
cmp
xchg
dec
lcall
ljmp
sarb
ret
adc
mov
int
jmp
fnstcw
fs
sub
add
pushf
fsubp
push
fisubrs
push
andb
xor
jno
fwait
or
pop
cli
mov
push
lods
clc
push
lahf
shrl
inc
insl
mov
and
gs
lret
fimuls
imul
aas
cmp
inc
rolb
jne
or
lcall
shrl
cmp
jne
scas
mov
lcall
mov
les
loop
add
jmp
ffreep
lods
push
mov
pop
xchg
cltd
and
jbe
cmpsl
sbb
cmp
je
lcall
sub
mov
loop
xor
lcall
rclb
aam
push
aad
ds
paddsb
lret
in
rcrb
dec
incb
push
mov
jae
mov
sti
xor
jge
or
popa
mov
pusha
xchg
mov
pop
scas
fwait
push
jle
loop
ds
dec
dec
stc
in
pop
lret
inc
loope
adc
sbb
mov
pusha
mov
aam
mov
sarb
cbtw
prefetch
or
mov
insl
out
incl
mov
sbb
xor
cmp
addr16
std
jmp
pushf
popa
dec
jmp
loope
ja
jae
sahf
pop
pop
add
ds
pop
lds
jbe
lock
jb
iret
negl
hlt
movsl
xchg
add
cmp
aaa
cmp
inc
pop
shr
adc
movsl
mov
in
mov
cmc
pop
imul
cs
shr
pop
and
scas
lds
xchg
pop
xchg
jl
jns
pop
cmc
es
mov
out
jb
pushf
fisttps
addr16
mov
jmp
and
add
cli
gs
push
mov
mov
lahf
mov
in
outsl
or
dec
dec
cmpsl
repnz
dec
aaa
cmpb
sub
divb
cmpsl
cmp
movsl
sub
shll
sar
mov
fnsave
imul
inc
xor
pop
cmp
call
repnz
in
outsl
cmpsl
arpl
jp
and
pop
dec
mov
aaa
or
cmp
mov
cmp
push
dec
stc
pop
aaa
movsb
jo
push
in
mov
mov
or
push
in
lea
shlb
loope
dec
mov
imull
xor
pushf
mov
jecxz
mov
sub
aaa
cmp
loope
push
jnp
xchg
test
mov
ss
lret
cli
and
in
lahf
dec
pop
ljmp
xchg
cmp
lcall
pop
popf
insb
cmc
ds
fcompl
cwtl
fwait
dec
cwtl
add
mov
inc
add
inc
ret
aaa
jae
push
pop
fwait
std
or
jle
mov
mov
sub
lcall
int
fstl
inc
cmp
cmp
neg
idivb
sbb
mov
cmp
pop
clc
jno
lcall
add
aad
popa
mov
movl
pop
lret
aad
repz
andl
or
fildl
ret
mov
aaa
popa
mov
or
push
daa
push
nop
and
or
cmp
rcl
divl
aad
mov
push
fwait
sub
enter
aaa
int3
pushf
das
pop
dec
fldt
push
or
mov
mov
sahf
mov
lcall
jo
imul
mov
mov
lcall
add
loopne
andl
test
push
pop
outsb
push
rcr
xor
ret
push
clc
mov
cmp
repnz
cmp
loopne
sbb
pop
loope
pushf
roll
sarl
cltd
ret
sub
and
hlt
movsb
inc
pop
adc
fsubrs
or
add
push
jge
and
cmp
je
sub
sbb
mov
out
fnstenv
sub
fstpl
stos
mov
fcomps
ds
jne
jl
jb
scas
pop
xor
cli
fwait
out
lock
adc
aam
push
adc
inc
dec
out
and
lcall
loope
fstl
inc
cld
lahf
xchg
push
lcall
pop
stos
fisttps
mov
mov
std
sbb
ficoml
inc
loopne
mov
push
lcall
xchg
jmp
push
mov
out
lcall
lcall
jmp
push
jle
add
fsubp
sbb
xor
in
movsl
pop
mov
lcall
or
jl
push
not
cmp
or
mov
imul
loope
mov
push
cmp
hlt
and
aaa
adc
cmpsb
pop
fildl
jnp
out
mov
fstl
and
cmpsb
aaa
aas
adc
cmp
xchg
imul
ljmp
pop
push
aaa
inc
sub
inc
jl
xchg
dec
or
mov
inc
inc
lea
inc
aad
cli
mov
bound
inc
ljmp
daa
stos
fmull
in
mov
cmpb
bound
lcall
jp
jmp
xor
faddp
cmpsb
cld
sub
aaa
jnp
jns
sbb
aam
sbb
push
dec
or
test
js
pop
cwtl
mov
test
fwait
push
fstps
dec
iret
xor
fsubr
mov
jnp
cmpsl
movq
cmp
cmpsl
adc
ret
es
clc
in
cmp
mov
fsubl
jl
dec
enter
subl
and
ljmp
inc
mov
adc
sbb
ret
hlt
movsb
jge
mov
daa
mov
fst
mov
push
popa
inc
dec
add
fs
jl
call
dec
ffree
mov
lcall
jge
stc
jo
pop
aad
pushf
enter
adc
lar
adc
inc
lret
lret
mov
add
push
das
mov
insl
ds
notl
sbbl
lods
mov
in
mov
jb
dec
xor
das
jmp
fimuls
cmp
lods
sbb
pop
pop
fnstsw
arpl
popf
pop
nop
push
cmp
movb
es
inc
pop
dec
or
xor
cs
popa
pop
call
jle
push
xor
cmp
ficomps
fwait
push
fcompl
js
fisttps
cmp
and
fs
icebp
aas
pop
mov
aaa
sub
loopne
adc
arpl
lcall
or
scas
fs
ja
jno
clc
test
popf
mov
movsb
aaa
test
xchg
cwtl
xchg
subl
outsl
inc
repz
sub
pusha
dec
je
cltd
add
mov
pop
loopne
add
mov
or
sub
pop
aaa
cli
in
push
scas
out
push
stc
lcall
inc
pushf
fsubl
outsl
inc
jno
push
fidivl
or
fstpl
push
in
push
or
shlb
rcrb
rcrl
sahf
add
inc
add
xchg
das
test
inc
and
add
fdivrs
dec
sbb
popa
fstl
fiaddl
cmpsl
sbb
pop
ja,pt
scas
aam
xchg
dec
cs
mov
aaa
icebp
loopne
out
adc
daa
movsb
outsb
add
inc
xchg
fistpll
int
lea
jb
push
sbb
ds
add
test
xor
aaa
mov
sub
lret
scas
loopne
mov
adc
fisttpll
in
arpl
ret
lret
out
adc
xor
mov
shr
mov
inc
cltd
in
cmp
repz
jo
in
or
sub
lcall
jge
fcoml
and
push
call
xor
inc
sub
lcall
jbe
je
xor
pop
jns
cmpsb
stc
adc
mov
arpl
aaa
outsl
sbb
push
inc
jl
test
jp
push
aam
cmp
pop
mov
mov
or
push
dec
test
test
jecxz
jb
ret
add
cwtl
jmp
mov
test
xlat
pop
mov
std
int
mov
insl
fnstsw
xlat
pop
ret
in
aaa
pop
dec
or
in
cmp
fdivr
pop
sub
mov
sbb
fnstenv
outsl
adcl
aad
pop
cwtl
mul
adc
rcrl
mov
fisttpll
push
pop
xchg
pop
jo
imul
jnp
mov
enter
cmp
insl
inc
aaa
mov
push
jecxz
dec
jns
lcall
jge
sbb
mov
sub
insl
mov
mov
sbb
or
pop
out
mov
jmp
dec
loop
xor
imul
adc
out
fldt
mov
call
nop
jbe
xchg
and
mov
cmp
dec
mov
xor
sti
insl
icebp
adc
mov
lret
sahf
nop
in
stos
xor
es
in
mov
arpl
std
adc
andb
mov
roll
dec
ffreep
pop
pop
cmp
frstor
sbb
mov
xchg
scas
out
gs
pusha
xor
or
cmp
jmp
pop
sub
insl
xor
or
add
gs
dec
xchg
pop
stc
ja
incb
cld
faddl
sub
dec
inc
mov
push
mov
cmp
inc
inc
xor
fisttps
stos
mov
dec
mov
fadd
push
fistl
mov
insb
push
pop
cmpsb
loope
negb
sub
sub
jns
xchg
std
pop
pop
test
pop
inc
rcr
negl
fsubl
jbe
outsl
cmp
pop
dec
sbb
scas
mov
into
add
lahf
mov
enter
pop
add
push
push
ds
aad
bound
dec
repz
xor
jmp
inc
stos
pop
out
adc
jns
push
cmp
aad
xchg
pop
fnstsw
nop
enter
pop
shlb
or
fsts
mov
aas
scas
pushf
jge
out
fstpt
mov
loopne
pusha
addr16
test
lcall
mov
fsubl
inc
xor
fs
inc
add
test
ds
in
fcomps
popf
mov
or
xchg
sbb
hlt
ret
inc
cmp
xchg
hlt
mov
mov
pop
movups
out
jg
sub
jg
sub
or
stos
fstpl
or
mov
jle
inc
mov
mov
jmp
inc
dec
rcr
cli
push
and
lcall
clc
mov
push
imul
xchg
dec
mov
cltd
jmp
mov
push
cmpsb
rolb
dec
shll
pop
ljmp
adc
or
mov
imul
imul
mov
rolb
xchg
inc
ss
lds
lods
dec
ds
or
push
mov
add
adc
mov
xor
push
hlt
cltd
test
inc
subl
and
inc
xchg
cmp
mov
bound
iret
mov
or
cmp
pop
mov
jns
pop
enter
insb
sbb
sbb
fwait
adc
out
loopne
lcall
xor
xor
nop
cltd
lahf
fmull
cmc
or
or
cld
cmp
mov
test
inc
mov
mov
inc
gs
dec
ljmp
jne
enter
jns
dec
loopne
aaa
rorb
cmpsb
outsl
pop
addr16
lds
lea
clc
xchg
push
xor
ja
sub
and
dec
sub
jg
mov
test
add
loope
aaa
mov
ds
sbb
addr16
std
clc
loope
sti
and
out
jnp
fnsave
dec
dec
test
inc
dec
aaa
or
stos
push
out
popf
arpl
adc
call
sbb
int
push
jae
hlt
mov
mov
mov
dec
mov
loop
sbb
fstl
jno
mov
adc
cld
mov
mov
fcomps
insb
aaa
xlat
inc
outsb
mov
push
dec
lock
and
xchg
gs
lods
push
push
loop
push
sbbl
mov
push
sbb
ja
mov
outsl
ss
mov
inc
mov
js,pt
clc
hlt
pop
icebp
inc
aaa
cltd
mov
inc
xor
and
jae
jbe
sbb
and
aad
xchg
mov
fidivrl
inc
ret
call
mov
push
add
pusha
rcrl
hlt
cmp
std
aas
loopne
mov
lcall
push
xchg
adc
inc
daa
test
lods
bound
xchg
jno
push
jle
fdivrl
and
outsb
lods
repz
or
push
mov
mov
mov
mov
add
in
ror
or
jo
mov
xchg
insb
cmp
aas
inc
stos
mov
scas
data16
fmul
push
xchg
jno
mov
movsb
rorl
repnz
and
cs
out
dec
outsb
fcos
sbb
or
sub
dec
sbb
sub
fwait
lcall
negl
fildll
movsl
pop
xchg
aaa
sbb
fmul
sub
insb
loop
outsl
and
fsubrs
lret
mov
icebp
js
pop
mov
cmp
xchg
or
stos
or
mov
ds
insl
sub
mov
enter
ja
xchg
ds
test
sti
aaa
dec
pop
ret
cmpsb
cmp
push
in
dec
push
movsb
pop
mov
test
cmpsb
jle
into
iret
aaa
hlt
sub
shl
add
ds
cltd
jp
add
imul
inc
shll
sub
outsb
sarb
out
mov
test
cwtl
lcall
lahf
movsl
ljmp
fs
int
adc
dec
cs
inc
push
lret
xlat
lahf
sbb
jmp
repz
mov
add
xor
aaa
or
or
inc
jecxz
jg
push
xchg
inc
ror
dec
dec
pop
xor
daa
fists
sub
mov
jp
iret
lcall
inc
sub
gs
loop
mov
out
ds
cld
roll
aam
les
pop
add
test
leave
scas
xor
lret
xchg
imul
stc
add
cmpsb
gs
pop
push
cmp
or
popf
mov
fxtract
lods
aam
xchg
ds
adc
sbb
push
or
fstpl
arpl
or
scas
sbb
xchg
rcrl
ds
sub
jns
test
shl
mov
inc
repz
stc
mov
int
or
xchg
daa
adc
add
ret
cmp
jne
lahf
dec
in
int
cmp
stc
shlb
das
loopne
pop
cmp
ret
lcall
ja
stc
fdiv
das
lock
int
and
add
fwait
lcall
loope
sbb
fstpl
jl
add
jae
pop
adc
cwtl
loop
add
loope
push
cwtl
clc
into
aas
test
outsl
mov
add
jl
sti
xlat
or
arpl
insb
out
inc
arpl
pop
sub
aas
aaa
dec
test
mov
popf
or
mov
push
insl
mov
mov
fidivrs
fnstsw
flds
xchg
lcall
dec
jne
test
stc
or
push
jbe
hlt
lcall
push
jo
ljmp
lret
mov
movsl
in
sbb
shll
xchg
add
gs
pop
shrl
mov
testb
mov
dec
cmp
arpl
hlt
dec
and
pushf
les
cld
mov
loope
jne
mov
notb
xorb
mov
ftst
lods
jo
xchg
rcr
divl
jnp
mov
sbb
jp
jmp
xor
cmp
in
dec
rorl
xchg
test
mov
sbb
mov
test
jecxz
jle
test
pop
rorb
scas
lret
ds
test
jns
cwtl
shrl
lock
enter
or
cmp
aaa
mov
ret
enter
pop
fwait
adc
scas
dec
xor
inc
mov
cmpsl
out
mov
pop
into
dec
jecxz
cld
fcoml
cmpsb
and
icebp
das
pop
inc
inc
jns
or
sbb
stos
lcall
xchg
lcall
shrb
push
mov
pop
and
inc
cltd
fnstsw
cmp
add
mov
psrlw
inc
out
dec
xlat
sbb
je
in
cmp
inc
fbstp
nop
cmp
pop
aaa
cmp
aad
mov
xor
push
inc
sub
mov
pop
aas
xchg
cmp
mov
or
out
aaa
inc
loope
data16
inc
pop
ficomps
push
enter
inc
outsb
hlt
cld
ror
aam
jbe
ffreep
cmp
imul
jg
ss
lahf
mov
pushf
sbb
fwait
push
adc
jae
dec
pop
or
jle
iret
cli
lods
dec
mov
fcmovnb
ret
out
and
push
sub
sbb
dec
aas
pinsrw
lahf
fistpll
cmp
jle
push
jne
ja
and
outsb
inc
push
mov
test
ljmp
dec
dec
jbe
out
fmull
mov
cmp
shrl
mov
aas
aaa
adc
mov
hlt
xchg
mov
mov
into
dec
aaa
leave
xor
fsub
mov
mov
cmp
cmc
inc
xor
pop
pop
int
mov
cmc
cmpsl
jl
lcall
inc
test
and
lds
daa
sub
aaa
cmp
call
pop
aaa
ficomps
js
cltd
dec
mov
lcall
inc
cmp
imul
popf
dec
jg,pt
jae
mov
push
gs
sahf
xor
cmp
cld
test
and
fsubl
test
push
mov
xchg
mov
pop
enter
aaa
adc
jbe
push
fbstp
mov
dec
pusha
scas
fcompl
mov
inc
inc
enter
adc
movl
popa
insb
push
fidivrl
aam
jns
lods
adc
cmpl
sbb
gs
adc
mov
adc
dec
aad
cmp
xchg
inc
aaa
les
incb
mov
lcall
xchg
daa
sub
mov
fstpl
loop
sub
or
mov
xor
adc
pop
mov
xchg
aaa
fildll
cwtl
rorl
daa
sub
imul
mov
or
jmp
cli
xchg
test
push
fsubrs
arpl
jo
int3
lock
lcall
pop
fsubr
cmp
xchg
fcoml
inc
outsl
test
test
popf
dec
inc
ret
sbb
xchg
xchg
pop
outsl
aaa
xorl
test
cs
dec
test
mov
out
xor
fistpll
fstpl
in
dec
outsb
popa
push
push
xlat
push
cmpsl
mov
dec
pop
lcall
cmp
cmp
iret
into
jmp
cmp
into
enter
aaa
ds
mov
cmpsl
inc
jo
lods
inc
add
sbb
aaa
dec
sub
jp
sbb
test
pushf
inc
adc
cltd
xchg
adc
push
movsb
cwtl
sub
xchg
lods
gs
push
dec
push
test
mov
add
ror
lcall
add
fwait
xchg
rcll
cmp
cmp
in
testb
or
push
icebp
pushl
mov
test
mov
mov
imul
adc
and
dec
iret
hlt
scas
inc
mov
jg
pop
lret
lret
popf
cmp
mov
jno
repnz
mov
mov
ss
mov
cmp
pop
testl
clc
and
call
mov
test
lcall
sub
pop
pop
or
mov
push
stos
xchg
nop
fwait
popf
mov
faddl
mov
mov
inc
and
inc
fsub
add
mov
mov
fcoms
es
nop
xchg
lcall
jb
in
jl
lahf
cmp
inc
ds
js
lcall
adc
fstp
mov
cmp
rcl
push
aaa
faddl
jge
push
mov
test
mov
stos
aaa
jns
fnstenv
in
mov
nop
enter
shl
ds
inc
cmp
jae
dec
shl
in
ret
mov
xchg
and
out
out
jne
jno
sti
mov
mov
jp
into
and
fnsave
aaa
shrb
inc
mov
lahf
jp
vmovdqu
repnz
aas
fidivs
shl
pusha
testl
and
lcall
cmc
in
jge
lds
sbb
mov
jecxz
mov
jl
aaa
jnp
xchg
lock
lret
mov
fbstp
pop
out
cwtl
lods
out
test
fiadds
jmp
cmp
fdivl
dec
mov
xchg
ds
push
pop
inc
in
mov
cmp
mov
mov
push
sbb
inc
std
adc
lcall
stos
sub
test
and
mov
mov
stc
mov
in
outsb
or
cmp
jecxz
jno
sub
and
lret
inc
lret
cld
rol
int3
or
xor
out
sbb
cli
fdivp
mov
xchg
js
sbb
dec
bound
inc
daa
cmpsl
xor
ficoml
mov
inc
lds
fidivrl
push
xchg
jp
sahf
xchg
into
mov
lahf
lds
sub
lea
aas
out
pusha
sub
sbbb
add
icebp
jae
fwait
cmp
leave
push
sub
rolb
in
inc
sbb
popa
stos
xor
lcall
lea
jne
loope
sbb
xchg
adcl
jb
mov
xchg
enter
movsl
sub
adc
fs
je
cmpb
pusha
and
fwait
inc
fcompl
xchg
rcr
out
pop
popf
adc
cmp
dec
test
enter
mov
inc
lcall
aaa
add
incl
into
loop
inc
inc
ret
pop
es
push
pop
sub
inc
jbe
and
push
dec
jge
bound
xor
xchg
xchg
loop
sub
inc
inc
sahf
std
sub
jno
sub
xor
pop
into
inc
or
jle
pop
inc
mov
aaa
push
adc
xchg
insl
lcall
cmpsl
stos
fdivl
mov
jecxz
and
xchg
popf
aaa
and
stos
dec
fidivs
dec
push
mov
cmp
xchg
sub
scas
xchg
inc
stc
mov
out
cli
and
xchg
cwtl
cmp
cmp
mov
xor
fcomip
sbb
push
ds
jge
in
jle
iret
cmp
outsl
ds
push
in
ds
roll
repnz
fdivp
lcall
cmpsl
test
repz
fiaddl
test
mov
mov
sbb
test
stos
ljmp
ds
jnp
and
jb
and
push
pusha
jle
out
xchg
rol
clc
inc
inc
aaa
mov
in
add
push
aaa
into
test
dec
pop
sbb
mov
fwait
sub
adcl
mov
les
imul
cmp
push
jp
iret
ds
push
les
enter
cli
popf
js
cmp
in
cltd
in
inc
or
shl
and
push
stos
xchg
mov
pop
js
aad
adc
pop
lods
inc
adc
pop
outsb
sbb
push
test
sbb
idiv
in
sahf
lods
lea
insb
jmp
jge
jl
mov
mov
je
insl
pop
mov
mov
into
jo
loopne
stos
inc
jmp
addr16
out
adc
aam
cmpsb
mov
aaa
jmp
movsb
inc
or
scas
imul
push
adc
mov
stos
leave
cmp
lcall
lcall
pop
add
push
jmp
test
cli
dec
inc
loopne
push
lods
fdivl
insl
and
jle
roll
pop
adc
bound
mov
sbb
inc
fnstcw
das
lcall
jb
cmpsb
push
leave
lcall
xchg
lcall
dec
cmpsl
fsubrl
out
dec
xchg
ds
loope
push
xor
inc
aaa
lods
cmp
shrl
jmp
mov
xchg
jb
rorb
fsubr
cmp
call
addr16
and
scas
divl
sahf
stos
dec
bound
inc
fwait
xchg
pushf
dec
pop
out
add
mov
mov
aaa
push
mov
ljmp
dec
std
popa
dec
xchg
dec
sub
lcall
arpl
fistps
adc
icebp
jp
movsb
gs
cmp
dec
lret
leave
mov
imul
ds
mov
repz
aaa
in
cmp
push
cmpsb
sti
jno
shlb
aaa
shl
push
cli
outsl
in
pop
lcall
test
fmull
popf
insb
inc
outsl
mov
pop
adc
lods
cmc
std
sbb
jae
push
popa
out
ds
pop
outsl
mov
repz
mov
ds
enter
jecxz
adc
inc
xchg
les
jmp
sub
push
and
sbb
or
sbb
fldl
scas
lcall
movb
cmp
mov
lcall
mov
xchg
jp
xchg
cmp
stos
sti
xchg
movsl
mov
mov
stc
in
dec
repz
add
inc
frstor
dec
arpl
fldl
out
addr16
mov
das
lcall
cmp
cmp
xchg
enter
lcall
mov
fnstsw
sets
scas
js
xor
adc
das
dec
shl
enter
xchg
add
sbb
mov
or
sbb
repz
xchg
mov
aam
and
dec
lcall
repz
sub
mov
out
das
fwait
and
test
add
jl
call
sub
sarb
add
inc
xor
mov
stc
faddl
std
mov
in
jg
cmp
aam
aaa
shl
cli
jnp
xchg
push
lcall
dec
mov
push
les
or
rcr
inc
pop
rolb
xchg
cli
ds
sub
adc
repz
add
inc
rcr
stos
pop
into
out
inc
popf
lods
les
int
lods
push
xor
pop
jae
and
add
or
cmpsb
jecxz
cmp
xor
sti
fs
pushf
mov
shl
dec
aas
lcall
orb
cmp
adc
xor
inc
mov
dec
or
inc
scas
fcoml
mov
sar
mov
bound
jmp
xchg
xchg
aaa
mov
sbb
or
iret
jmp
push
xchg
sbbl
or
cli
data16
adc
pusha
push
adc
sarl
adcl
push
push
rcrb
inc
bound
es
movsl
loope
push
imul
insl
jne
push
outsl
jle
push
jo
gs
sbb
je
dec
mov
jo
pop
sbb
sbb
pop
lock
sbbb
dec
scas
shlb
lcall
mov
out
xchg
clc
lcall
cmp
fsubrl
inc
sbb
inc
outsl
lcall
sbb
push
pushf
push
push
pop
nop
fwait
in
int3
adc
out
pop
sbb
shrl
pop
test
add
pop
in
and
and
mov
pop
lcall
arpl
dec
sub
sbb
ret
jb
ds
pop
imul
pop
icebp
lods
jbe
cmpsb
adc
inc
mov
mov
rolb
shll
push
sbb
dec
cmp
add
mov
mov
pop
scas
call
sub
lds
lcall
aaa
rclb
jmp
adcl
add
cld
sbb
dec
add
icebp
jbe
aaa
imul
ds
fwait
addr16
ja
dec
inc
hlt
xchg
jns
sbb
mov
mov
mov
jb
cmp
je
mov
xor
ret
and
xchg
add
ja
cmp
pop
shr
push
xchg
cld
repz
mov
lods
ss
sub
jne,pt
sahf
stc
or
push
dec
inc
cmp
add
or
in
and
aaa
and
mov
xchg
xchg
ds
test
sub
jl
loopne
mov
add
adc
cmp
and
fucomip
aaa
sbb
inc
aaa
loope
scas
cmp
js
lcall
filds
fstl
push
mov
xchg
ja
lock
ret
and
aaa
incl
cmp
cmc
cmc
sbb
push
cs
and
cmp
in
jae
clc
in
nop
aam
stc
aaa
and
les
sub
loopne
lcall
lret
stos
fmull
jne
cmp
add
leave
mov
lods
cmc
sti
out
fcompl
dec
icebp
add
ds
sbb
jge
cmp
mov
int
cmp
jle
xchg
orl
mov
lds
mov
sahf
in
inc
test
sti
stos
fcomp
mov
and
enter
mov
or
or
or
lret
jb
push
sub
cmp
lcall
dec
fiadds
sahf
repz
cmp
popf
les
stos
addr16
ret
or
ja
lds
mov
icebp
dec
dec
jo
ret
aaa
lock
addb
jne
or
dec
xchg
mov
or
xchg
ja
movsl
cmp
aas
sbbb
mov
push
clc
mov
loope
dec
mov
aas
clc
lock
test
push
dec
ljmp
shll
cmp
cmp
cmp
pop
cmpsl
or
ss
push
arpl
push
cs
and
fimuls
inc
and
fnstcw
outsl
and
add
xorl
aam
or
cld
and
cmp
movsb
ss
lcall
xchg
cwtl
adc
insl
sbb
sbb
inc
adc
incb
mov
lret
lods
mov
les
lea
inc
push
add
jns
push
jmp
inc
imul
cs
mov
or
shll
lods
push
dec
add
fnsave
xchg
in
ds
pop
fisubs
xchg
mov
or
adc
popf
cs
jecxz
xchg
mov
mov
push
out
ljmp
and
or
cmpsl
ds
ds
jl
xchg
pop
fcomp
insl
pusha
imulb
and
jle
lret
pop
xchg
out
in
lret
lcall
ss
sub
pop
movsb
stc
mov
insl
insl
std
arpl
test
shlb
pop
dec
add
cmp
push
mov
cmp
std
div
aaa
xlat
imul
loop
push
in
sub
mov
push
mov
fisubrs
push
inc
cmpsb
arpl
into
js
mov
push
jae,pt
mov
and
sbb
mov
mov
fistpll
cmpsl
pop
xor
sub
pop
pop
fstpl
pop
rorb
mov
mov
jbe
sahf
out
xor
lcall
xlat
test
fwait
mov
pop
inc
popf
and
mov
sahf
push
mov
add
push
cmp
int3
sbb
dec
xchg
jle
cli
add
leave
cmpsb
and
push
data16
aaa
push
sub
jge
jmp
inc
sub
and
add
mov
cmp
xchg
ss
es
out
fmul
pusha
xlat
sti
sbb
mov
ds
sbb
faddl
jbe
cmp
pop
ss
ds
jb
jecxz
dec
sbb
insb
and
cmc
pop
sub
insl
add
in
sub
enter
lcall
mov
ffree
das
xchg
mov
cmp
add
mov
jg
dec
add
mov
inc
and
and
cmpsl
pop
movsl
fsubl
sbb
mov
imul
pop
cltd
jo
jle
xchg
rorb
addb
popf
adc
sub
dec
push
adc
jl
jg
orb
popa
pop
leave
jg
xchg
mov
loopne
fs
add
cmp
imull
adc
repz
int3
fcmovu
push
sub
in
lds
mov
shl
lret
insl
aam
test
cs
inc
push
jmp
pop
cmp
push
movsb
pop
cmp
xor
sti
sub
jno
adc
xchg
dec
popl
push
fsub
adc
mov
dec
nop
jl
inc
mov
and
sub
aam
cmpl
lcall
dec
cmpsb
push
push
scas
fdivrl
hlt
pusha
fdivrs
mov
mov
mov
mov
inc
ljmp
cmc
gs
cld
mov
arpl
js
ds
adc
pusha
inc
jae
aam
loopne
cs
fidivrs
mov
inc
ljmp
push
or
lcall
call
mov
mov
jp
ds
ljmp
dec
mov
repz
ljmp
push
pop
pop
fistl
fmull
add
cmp
rcr
add
xor
xchg
icebp
or
dec
fwait
xlat
cmpsb
xlat
pop
incb
mov
stc
mov
sti
push
push
dec
sbb
pop
repnz
std
scas
movl
mov
mov
fnstenv
popf
loopne
pavgw
cmp
mov
cld
loope
das
dec
repz
pop
mov
adc
xchg
and
dec
inc
ret
xchg
fcoml
repnz
jecxz
xchg
push
out
or
lods
push
cld
test
cmp
pop
xchg
ja
lea
ret
push
frstor
adc
int3
adc
out
jns
xchg
pop
push
mov
mov
inc
cmp
out
or
push
xlat
jg
aaa
es
test
and
dec
xor
pop
mov
lods
xchg
mov
in
inc
sbb
xchg
pop
hlt
cmp
add
icebp
and
into
adc
dec
js
and
ja
sub
in
lcall
jecxz
fcompl
iret
cwtl
ret
pushf
jp
bound
call
mov
cmp
sbb
add
xor
test
xor
lea
jp
mov
jmp
pushf
jle
sbb
lea
pop
sbb
jbe
or
repz
mov
dec
addr16
pushf
ds
and
fisttpll
ss
mov
ret
dec
stc
aad
sbb
push
cwtl
repz
mov
cmp
jo
mov
sub
sub
inc
mov
addl
sbbl
sahf
add
lea
sbb
add
inc
xor
jge
adcl
push
arpl
mov
push
movsb
out
lcall
fisubrs
xchg
mov
push
dec
lcall
in
ffree
aad
pop
dec
or
inc
push
pop
test
mov
cmp
divl
lcall
iret
inc
repnz
pushf
les
push
push
push
in
mov
fisubs
inc
dec
scas
cli
xchg
rcrb
sub
dec
sbb
sbb
cmpsl
xchg
or
inc
fdivs
stos
jo
leave
arpl
sbb
rcrb
add
sbbl
mov
rolb
mov
lret
jle
scas
ljmp
sbb
sarb
mov
fnstsw
or
call
pushf
xchg
mov
test
mov
dec
sub
ja
xor
xchg
fs
xchg
jecxz
cmpsb
ja
movsl
inc
jbe
insl
lret
shlb
pop
fs
popf
daa
pop
loopne
jecxz
aaa
mov
pusha
add
and
jb
aaa
cli
out
pusha
sub
mul
popf
mov
push
std
pop
xor
cmp
cld
jnp
and
shrb
inc
mov
popf
cmp
sbb
insb
push
sub
lods
jo
sub
data16
mov
lcall
xchg
sbb
add
mov
pushf
dec
cmp
dec
cmp
call
inc
out
pop
xor
dec
cmp
mov
pop
arpl
and
dec
inc
xchg
div
xor
mov
mov
cmp
cmpsl
popa
fimull
call
gs
out
xchg
cmp
push
lret
cmp
mov
or
incl
aaa
stc
cmc
sbb
sbb
fiadds
test
add
loopne
inc
dec
or
push
frstor
dec
cltd
mov
inc
sbb
push
mov
fisttpll
sub
les
dec
lcall
push
into
faddl
in
push
cmp
dec
inc
dec
scas
mov
in
mov
inc
sbb
test
push
ret
popf
movsb
mov
out
mov
xchg
dec
sbb
push
or
sbb
int3
imul
nop
or
xchg
insl
lcall
sbb
arpl
add
push
dec
lock
mov
adc
pusha
gs
push
pop
mov
inc
fsubrs
pop
aaa
sbb
add
aas
mov
sub
rcll
mov
jg
bound
jb
inc
sahf
pop
ficompl
mov
bound
mov
jo
push
mov
xchg
jl
pop
bound
mov
push
repnz
sub
mov
fcoml
rcrl
push
push
inc
ret
enter
pop
in
aaa
ret
mov
adc
outsl
sub
push
lock
test
fimuls
in
mov
jecxz
dec
mov
add
mov
sahf
push
push
lcall
repnz
mov
lcall
int
aas
incb
das
frstor
jb
cmp
pop
or
negl
imul
mov
enter
pusha
adc
lock
and
dec
orb
mov
hlt
mov
inc
push
cwtl
and
fidivl
cwtl
aaa
sub
mov
lcall
push
fnsave
cmpsb
aaa
sar
sub
rcrl
mov
insb
inc
dec
add
xchg
aaa
icebp
int
xchg
cmp
sbb
movaps
mov
rol
sub
push
xor
xor
sbb
aam
xlat
aas
call
xor
push
mov
jb
mov
lcall
adc
scas
inc
clc
cli
loop
jnp
mov
push
add
fcmovnu
lds
cld
or
adcb
fstl
in
dec
movsl
xor
orl
push
ja
sub
inc
and
es
sub
push
lcall
out
fstpl
dec
clc
fnstsw
movsb
jg,pt
sbb
push
imul
or
lods
fwait
xchg
les
adc
das
xchg
mov
pop
outsl
mov
dec
in
insl
adc
fs
fwait
and
arpl
jp
adc
cmp
adc
lods
lcall
jecxz
ljmp
sbb
ffreep
stc
push
mov
cmp
icebp
cmpl
add
xorb
mov
test
jo
popf
pop
addr16
add
fsubr
xchg
ds
push
pop
scas
leave
xchg
cli
mov
fcompl
jb
rcrl
clc
adc
inc
mov
clc
push
pop
xchg
push
es
test
in
ds
mov
data16
mov
mov
jg
call
and
adcb
shll
jl
lahf
fdivrl
sub
inc
lcall
ja
fnsave
xchg
mov
xchg
outsb
lahf
ds
inc
notb
repz
pop
int3
push
cmpsb
adc
dec
cvtpi2ps
xchg
rclb
push
mov
push
add
repnz
pop
fidivs
mov
jg
xor
int
jge
into
stos
add
mov
int3
mov
jl
aaa
xchg
sahf
adc
xor
outsl
mov
int3
aad
aad
jl
adc
imul
inc
mov
pop
sub
rclb
das
cmc
cmp
mov
mov
leave
cs
inc
xchg
icebp
lcall
stos
daa
fnsave
xor
or
sub
cmp
or
inc
daa
ret
jmp
popf
std
popa
aaa
mov
inc
das
mov
cmpsl
jbe,pt
pop
push
cmp
outsb
sbb
ds
fisubrs
hlt
cld
sbb
pop
cmp
inc
pop
out
hlt
lcall
push
jne
mov
imul
cmp
lcall
in
xor
pusha
jle
frstor
cmp
in
aaa
mov
ret
jns
clc
lcall
gs
fdivrl
and
push
sub
out
lods
lcall
ljmp
adc
inc
inc
ret
mov
pop
subb
out
in
repnz
aaa
mov
pop
inc
or
mov
fistps
inc
cmp
pop
repnz
adc
pop
mov
jne
leave
into
jmp
aaa
loop
jmp
aad
in
lcall
aas
sub
rol
jnp,pn
mov
push
inc
jnp
outsl
and
cmp
cmp
pop
movsl
mov
push
mov
sub
in
scas
xor
push
cld
cmp
out
sub
push
nop
sahf
push
fdivp
sbb
push
inc
rcr
push
cwtl
rorl
or
ds
daa
or
sbb
jle
pop
and
fs
pop
movsl
imul
mov
cmpsl
dec
add
lcall
cmp
bound
movsb
fs
cmp
mov
aas
leave
ljmp
and
gs
pop
dec
pop
sbb
dec
aad
fistpll
sbb
fcompl
and
stos
int
mov
lcall
inc
jbe
cmp
mov
mov
aas
movsl
fmull
aaa
mov
sbb
clc
cmp
xchg
dec
adc
mov
sbb
mov
push
iret
jae
jbe
lods
cmpsb
shlb
and
pop
mov
sub
lcall
cmp
mov
pop
into
lret
mov
pop
cmp
sbb
sub
ss
popa
dec
dec
mul
gs
jecxz
mov
mov
ja
mov
xor
into
outsl
orb
aaa
fcmovnu
cmpsl
mov
and
enter
das
pop
or
inc
es
aas
aaa
and
call
mov
loopne
das
push
dec
mov
cmpsb
gs
add
add
std
lcall
jb
and
pop
xor
pop
sarl
pop
sbb
dec
call
and
sub
inc
out
or
sub
pop
cmp
fstpl
shrb
mov
sbb
mov
lods
xchg
lds
or
frstor
inc
in
lods
fcomp
fists
and
mov
jno
sub
cwtl
fwait
stos
daa
sbb
imul
push
idivb
or
mov
mov
cs
push
push
xor
das
pop
push
xchg
pop
test
cwtl
mov
sub
dec
in
fidivrs
mov
test
call
jno
dec
imul
pop
sub
mov
and
jmp
js
lods
mov
bound
icebp
ror
cltd
popf
push
outsb
das
out
mov
pushf
jp
jo
xchg
add
jg
ret
mov
scas
and
adc
pop
xor
inc
lds
sbb
dec
lret
fcompl
cli
idivl
scas
hlt
hlt
cmp
cmp
clc
out
imul
gs
clc
push
lea
andb
sub
scas
fdivr
and
imul
incl
mov
fcompl
js
add
clc
and
mov
or
lods
mov
int3
outsb
stc
jns
dec
outsb
ficompl
add
xor
inc
inc
inc
push
cmp
lcall
mov
jo
into
sub
imul
cli
jno
or
and
bound
dec
mov
jg
sub
cmp
mov
xchg
bound
ret
sahf
pusha
les
jecxz
bswap
dec
cmp
adc
gs
xor
dec
and
mov
cwtl
pop
ficompl
bnd
pusha
mov
les
arpl
mov
aad
std
js
cmpsb
jle
mov
ret
xor
cmc
fcomp
aaa
lahf
in
pop
scas
mov
dec
jmp
arpl
sub
ret
insb
hlt
std
lret
and
cmpsb
out
fidivrl
add
lret
xlat
cs
inc
push
inc
imul
pop
jne
pop
cld
inc
jo
push
leave
inc
push
push
sub
lret
in
push
cwtl
sahf
dec
pop
movsl
clts
cmp
mov
aaa
mov
adc
push
mov
fdivrp
out
adc
test
out
push
in
fs
inc
gs
ja
lock
mov
outsl
add
push
movsl
mov
cmp
adc
xchg
jmp
cmp
inc
pop
std
stc
stos
lret
orb
mov
leave
fsubrs
mov
ljmp
sbb
dec
shlb
js
jne
jo
cltd
ds
leave
dec
jb
lea
cmp
xchg
xchg
cmp
fimull
mov
je
shr
pop
lods
jl
jle
fwait
push
imul
flds
sub
pop
andl
xchg
lcall
or
push
lret
cmp
add
push
rolb
pop
frstor
bound
sbb
mov
shl
xlat
jecxz
push
pop
addr16
jge
faddl
in
pop
sub
inc
pusha
dec
sub
xor
in
push
jecxz
jmp
fsub
cld
mov
outsb
xchg
dec
mov
outsl
repz
or
ja
in
orl
rcrb
dec
pop
mov
sub
aas
js
add
enter
stc
mov
movsl
inc
inc
inc
repnz
es
sub
pop
clc
xor
std
std
repz
mov
mov
pop
lahf
cmp
dec
mov
xchg
mov
cmc
scas
lret
xor
pop
xchg
aaa
adc
rolb
hlt
into
hlt
fwait
mov
jle
add
pushf
inc
popa
jb
lahf
xchg
roll
scas
mov
push
fsubrl
pusha
inc
cld
xor
arpl
hlt
pop
push
xchg
mov
cmpsl
mov
adc
sbb
and
sbb
movsb
jno
cmp
mov
mov
pop
pop
push
mov
out
mov
inc
jb
mov
in
cmp
filds
lcall
insl
mov
lods
icebp
add
pop
lret
add
jle
test
inc
cmp
jb
jmp
jl
ss
sub
jecxz
push
cmp
dec
mov
paddusw
dec
sub
jg
inc
cmpl
inc
and
jnp
movsl
inc
nop
mov
fmull
xlat
cmpsl
push
ja
popf
mov
es
lcall
pop
out
fucom
cli
mov
enter
in
inc
jnp
or
pop
dec
fucomi
jno
cmpl
imul
push
mov
cmpsb
xchg
test
fmull
mov
inc
cmp
lods
pop
icebp
dec
cmp
incl
cmp
popf
int
fwait
shr
test
cld
mov
mov
add
push
ret
ds
pusha
ret
loopne
mov
push
ret
pop
lods
add
xor
cmp
mov
in
test
sahf
ja
xchg
std
cmp
add
sbb
cmpb
es
adc
push
arpl
jae,pt
xchg
sub
iret
and
lcall
xor
cmp
ljmp
mov
fiadds
inc
fcmovnbe
push
jl
adcl
stc
mov
pop
loope
xchg
pusha
out
jg
clc
das
outsb
add
das
inc
dec
popa
and
setns
mov
cmp
jp
lret
stos
ficomps
push
fisubl
sbb
ds
inc
sbb
xchg
testb
dec
mov
or
lods
mov
jnp
mov
insb
js
adc
cmpl
adc
mov
mov
mov
mov
pusha
add
popf
push
andb
fadds
dec
xor
movsb
dec
inc
jo
lds
test
arpl
lret
pushf
cmp
fcoml
std
push
inc
add
pop
leave
jne
lret
mov
ret
mov
sbb
in
jle
mov
add
clc
ds
jbe
fwait
sbb
jne
test
fnstsw
lods
in
cmp
jb
xchg
mov
push
or
imul
mov
lea
dec
jle
mov
pop
rcl
sbbl
lcall
cmp
dec
and
push
ds
push
icebp
das
mov
bound
ds
sbb
mov
jno
or
ds
or
lret
jbe
popf
inc
test
mov
movsl
jle
aad
ret
ljmp
and
test
shl
pop
xchg
xor
add
xchg
and
out
movsb
fwait
adc
ret
push
cltd
or
aaa
test
push
and
jmp
add
push
iret
das
fwait
je
lock
inc
pop
or
cmp
mov
in
roll
dec
inc
sti
adc
or
fucomp
mov
ds
cmp
lds
and
lret
addr16
lahf
pop
ds
popa
mov
movb
jbe
pop
mov
test
jo
icebp
inc
mov
sub
jle
lcall
xor
fimuls
pop
outsb
repz
xchg
mov
jne
aaa
push
sub
push
mov
ja
lcall
push
aas
dec
cltd
adc
leave
jns,pt
aad
jbe
cmp
repnz
lcall
inc
xor
and
xchg
lods
aam
pop
pusha
jle
nop
add
xchg
sub
push
enter
sbb
call
sbb
fwait
out
lret
push
pop
mov
fdiv
xlat
pop
xchg
stos
rcrb
aaa
push
dec
pop
pop
shrl
lcall
fstpt
ret
or
jmp
stos
push
imul
jo
lea
dec
cld
int
or
jecxz
fistps
fwait
push
jo
mov
popa
push
mov
pop
in
add
sbb
mov
scas
pushf
inc
andl
dec
adc
loopne
pop
xchg
nop
mov
mov
mov
dec
fwait
cmovbe
add
jae
loop
inc
sbb
adc
loopne
pop
sahf
enter
fstl
outsl
hlt
int
stos
out
jl
insb
frstor
or
mov
pop
jmp
bound
cmp
hlt
sub
or
daa
cmc
out
out
fnstsw
mov
aaa
push
or
xchg
mov
shll
lods
sub
push
aaa
jne
das
push
sti
fisttpl
add
fdivr
outsl
jnp
xchg
aaa
call
pop
call
cld
jge
test
in
adc
mov
loope
push
pop
sbb
dec
push
lcall
sub
pusha
out
fadds
jge,pt
jae
sti
hlt
sbb
imul
mov
cwtl
sti
pushf
inc
fidivs
mov
or
push
pop
mov
xchg
lret
out
adc
stos
filds
xchg
loop
addr16
repz
push
inc
cmp
cmpl
xchg
lcall
lret
add
aaa
gs
sti
mov
cmp
je,pt
adc
ret
jecxz
xlat
scas
movsb
dec
inc
xchg
data16
mov
cs
dec
xchg
out
fstp
jb
push
jne
sbb
push
enter
lcall
push
das
ds
sub
sarb
daa
mov
sahf
lret
adc
std
cmp
sti
dec
aaa
daa
iret
lods
jb
dec
cmp
rolb
mov
push
loope
movsb
mov
aas
cwtl
xchg
cmp
xor
push
adcb
in
or
icebp
and
mov
pop
aas
jp
and
mov
cld
aad
addl
inc
lcall
pop
jecxz
rcrl
cmc
mov
lcall
fistps
std
lods
push
popa
pop
push
mov
mov
mov
fnstsw
adc
fstpt
dec
or
pop
cmc
or
jno
ja
mov
lock
jg
add
lret
jp
lcall
cltd
ja
push
add
lahf
dec
fs
sbb
inc
stos
dec
ror
ss
out
ljmp
jge
clc
inc
fwait
je
lret
push
add
mov
cwtl
aas
bound
sbb
scas
aaa
inc
roll
jno
dec
sub
lcall
dec
fcmovnu
mov
lea
dec
and
movsb
lcall
arpl
fidivs
sbb
out
out
ret
loop
mov
ds
aad
mov
or
xchg
shl
sbb
ja
lret
cltd
lcall
adc
mov
int
repz
call
inc
fistpl
arpl
dec
dec
cmp
or
pop
out
ds
mov
mov
sub
mov
movsb
jle
das
mov
pop
xchg
ja
push
mov
mov
or
xor
bound
shll
jo
pusha
rcl
push
jge
ja
aad
fdivrs
je
ds
sub
jmp
jb
lahf
cmp
fs
rcrb
inc
icebp
pop
inc
stc
and
out
aaa
dec
sub
adc
test
inc
mov
mov
pop
fwait
sbbl
lea
adc
aaa
push
rclb
inc
loopne
addr16
cmpl
xor
out
loope
bswap
push
lcall
aaa
inc
js
xorb
in
lcall
rcll
inc
imulb
mov
and
dec
in
pusha
outsl
pop
mov
mov
imul
movsb
adc
lcall
mov
in
sbb
adc
dec
movsl
scas
div
popf
mov
pop
push
xor
ds
push
stc
loopne
aas
cmp
sbb
imul
xchg
cmpsb
es
mov
jbe
imul
jle
sbb
cmp
in
inc
rorl
mov
pop
cmpsl
fiadds
dec
add
or
jno
sbb
dec
adc
lret
cmp
mov
jo
cmp
leave
mov
fucomi
push
out
cld
test
push
xor
fucomi
inc
or
mov
sub
mov
mov
and
ljmp
scas
sahf
test
jge
fisttpll
dec
outsb
shl
push
js
je
imul
repnz
cmp
sti
nop
jl
cmp
dec
mov
icebp
lock
movsl
insb
decl
in
mov
inc
data16
shll
loop
mov
pop
loope
mov
fisttpll
add
and
mov
lcall
movsb
icebp
fdivrl
enter
jne
dec
mov
fsubrl
jle
aaa
mov
popa
popf
mov
cwtl
addr16
dec
sub
inc
mov
mov
gs
dec
mov
xor
ljmp
or
ret
cmp
jne
aam
inc
call
mov
add
cmp
loope
inc
ret
fcmovnu
imul
das
jge
jp
push
nop
and
fwait
xchg
sbb
shl
scas
fsubr
lret
shlb
or
push
ret
inc
ret
push
cmc
lcall
aaa
in
mov
sbbl
fdiv
imul
in
sbb
push
andb
dec
dec
outsl
fidivl
into
scas
sub
or
push
inc
pop
rcrl
fnstsw
pop
pop
jmp
sbb
and
lods
xor
cmp
adcl
mov
into
sbb
dec
cmpsb
pusha
sub
pop
cld
lds
sbb
test
shll
sub
sbb
clc
pop
cmp
xchg
mov
cld
call
mov
in
inc
sbb
fmull
pop
movsl
cmp
popf
icebp
mov
imul
mov
ds
push
pop
mov
stos
jl
sbb
dec
popa
mov
test
xor
xor
cmp
mov
inc
pop
push
jg
fwait
xor
inc
cmp
pushf
cld
mov
inc
popl
push
pop
inc
sub
mov
scas
repz
imul
jne
cmp
inc
or
sti
mov
js
mov
dec
out
mov
sbb
push
xchg
ficoms
movl
scas
mov
xchg
loopne
shl
mov
and
mov
fmulp
repz
in
clc
pop
cmc
mov
notb
sbb
lcall
xor
in
mov
aaa
repz
data16
mov
notb
cmp
jge
lods
repz
notl
lcall
and
icebp
les
xor
lcall
cmp
faddp
sti
or
lret
movsl
lods
mov
nop
inc
sbb
adc
in
pushf
adc
and
xor
cmp
rcl
jns
arpl
sub
mov
mov
ficompl
int3
xor
mov
dec
aaa
sub
fdivl
cmpsb
das
aas
xchg
fmull
cmp
cmp
or
pop
loope
dec
mov
fnsave
cmp
fstp
inc
sbb
xchg
dec
mov
sarb
mov
fdivl
inc
rcr
inc
pop
inc
inc
sub
jecxz
das
fnsave
inc
enter
ds
pushf
add
cmp
pop
mov
lahf
and
in
pushf
pop
push
outsb
cli
ds
add
imulb
sbb
es
pop
xchg
pop
test
movsb
xlat
sbb
adc
fisttps
mov
mov
sarl
mov
xchg
pop
add
cmp
mov
inc
fadds
mov
add
jbe
pop
mov
ficoml
sbb
cmp
push
and
je
lret
add
and
pushf
lods
inc
lcall
add
adc
movsl
xchg
and
cmp
fisubs
adc
push
or
insl
xor
mov
popa
fcmove
fwait
into
sbb
pop
inc
inc
std
sub
xchg
lcall
xchg
inc
sbb
pushf
popf
mov
lock
fiaddl
jg
inc
mov
lret
or
xchg
pop
out
es
jp
cwtl
mov
lock
mov
push
xor
test
popf
das
rcrl
shl
cmp
fwait
cltd
popf
fimull
in
cmp
lcall
or
fnsave
andb
inc
jbe
negb
lods
inc
vunpcklps
std
sbb
mov
lcall
sbb
jne
test
and
repz
cmp
and
pop
jbe
sbb
imul
push
ds
add
mov
jl
std
jle
push
fisubrs
mov
setbe
js
push
xchg
retw
push
mov
outsb
into
cmpsl
lcall
jmp
mov
mov
popf
push
fdivs
mov
add
pop
icebp
aaa
arpl
mov
imul
xchg
mov
lea
fistps
je
sbb
daa
push
lcall
push
pushf
ficompl
addb
dec
hlt
movl
mov
test
sub
xor
xchg
jl
mov
mov
push
inc
clc
movsb
and
fstl
cmpsb
sub
xchg
sahf
insb
and
daa
fldl
xchg
ja
dec
push
fists
jecxz
aaa
movsb
rol
fstl
lcall
dec
ljmp
mov
aas
roll
les
js
fldl
mov
mov
mov
mov
adcl
mov
dec
inc
pop
stc
into
stos
inc
sbbl
loop
scas
pusha
dec
sbb
test
out
mov
aas
and
repz
and
cmp
and
movsb
sbb
cld
lcall
mov
ret
popf
sbb
pop
lahf
stos
mov
mov
scas
inc
add
inc
cmp
add
scas
jge
cmp
out
out
xchg
push
insl
in
stos
jecxz
dec
jne
fsubr
sub
andl
sub
push
into
push
bound
aaa
loopne
cmpsl
push
in
inc
inc
test
cmp
sub
pop
inc
seta
fmull
mov
mov
aas
in
inc
dec
mov
push
push
sbb
xchg
push
repz
push
cmp
push
jnp
and
rcrl
mov
mov
jnp
push
adcb
sbb
mov
call
push
xor
imul
or
rolb
inc
sahf
mov
ds
jl
jle
mov
and
popf
gs
sub
inc
cmpb
dec
rolb
aaa
aaa
and
inc
aad
aas
dec
cmc
in
scas
mov
ret
pushf
aas
xchg
fdivp
fs
out
xchg
fsubrl
xchg
mov
adcb
loopne
adc
movsb
inc
mov
xor
lret
jae
push
aas
ds
in
cs
sbb
ja
test
inc
inc
jg
add
fwait
rorl
push
xchg
dec
cmp
inc
xchg
into
data16
das
icebp
mov
add
sbb
aaa
scas
mov
dec
shrb
sbb
push
and
mov
mov
jl
lods
fwait
push
cmp
xchg
sub
sbb
or
in
xchg
sbb
mov
mov
cmp
inc
lods
clc
fstcw
in
sbb
xchg
xchg
push
test
jg
fdivrl
or
xlat
sbb
jg
in
add
pop
fisubs
push
sahf
inc
pop
xor
test
mov
push
in
xor
pop
mov
test
fdivl
aaa
pop
add
dec
mov
cmp
inc
xlat
out
push
xor
stos
int3
or
inc
inc
cwtl
les
mov
out
repz
ret
dec
cmp
stos
push
lcall
les
mov
jl
mov
divl
xchg
adc
lret
aaa
sahf
mov
adc
test
mov
mov
pop
cmp
aas
or
cmp
add
addr16
mov
scas
aaa
push
cmc
movsb
lea
jle
lcall
inc
hlt
sbb
cwtl
fnsave
sub
test
mov
iret
daa
sbb
lret
fimull
push
out
and
stos
nop
ds
mov
pop
outsl
mov
sub
movsl
sub
sub
inc
stc
mov
xor
pop
in
adc
dec
imul
out
pop
fidivrs
movsl
into
nop
add
xchg
lods
push
aaa
xchg
pop
ret
idivl
sub
add
mov
dec
fs
xchg
mov
mov
pop
rcrb
cmp
xchg
push
ret
add
jnp
out
dec
dec
lret
ds
push
loop
inc
push
sahf
fcoms
mov
jns
inc
jmp
sahf
std
stos
insl
lcall
cwtl
push
mov
lods
aaa
test
lods
ds
popa
fidivrs
divb
pop
test
faddl
out
aad
arpl
adc
push
mov
inc
inc
add
data16
sub
ds
aam
stos
lcall
dec
cmc
les
fbstp
mov
inc
rorb
arpl
inc
ds
mov
mov
mov
test
mov
rclb
enter
jb
and
sub
jle
sbb
mov
lcall
adc
in
jecxz
jbe
setbe
dec
dec
add
nop
mov
or
dec
adc
jle
rorl
rcll
mov
movl
ds
addb
shrb
in
inc
aas
mov
imul
shlb
shl
clc
aad
sbb
popf
mov
pop
daa
lcall
leave
in
faddl
mov
addb
cmp
push
ds
pop
xchg
pop
xchg
push
int3
aas
stos
dec
incl
or
daa
ds
insl
xor
insl
xor
cmpsl
dec
push
inc
sbb
mulb
and
fs
sarl
cmpsb
outsb
inc
mov
mov
idivb
movsl
or
or
inc
pop
in
jbe
push
iret
adc
mov
out
mov
sbb
ds
setbe
dec
clc
repz
cmpsl
and
xlat
call
jecxz
cmpsb
push
insb
es
cmp
jae
pop
xchg
mov
mov
popf
mov
mov
add
std
movsb
cmpsl
ljmp
fs
pusha
movl
jl
test
cmp
les
psrld
push
adc
insb
leave
imul
inc
out
ds
sarb
mov
imul
pop
icebp
push
pop
xor
popf
loope
lock
mov
insb
loopne
stos
push
adc
dec
les
pop
hlt
mov
jmp
xchg
xor
sbb
lcall
inc
pop
cmpb
popa
xlat
imul
mov
mov
push
cmp
insl
dec
mov
adc
js
ja
sbb
scas
in
mov
imul
stc
lcall
bound
lock
inc
movsb
dec
pop
push
iret
sbb
push
mov
pop
clc
mov
xchg
out
xlat
fsubs
clc
fisttps
es
popf
sub
xchg
aaa
test
cmp
pushf
mov
into
call
pusha
das
imul
mov
push
sahf
dec
adc
mov
ffree
insb
xlat
jl
fwait
outsl
pop
aad
xchg
pop
sbb
inc
sbb
pop
dec
sbbb
push
lcall
inc
lcall
jnp
fisttpll
out
aaa
dec
das
popf
cmp
mov
pop
inc
lds
cmp
mov
popf
aas
data16
mov
lcall
clc
jb
ss
jl
xor
sti
lds
sbb
mov
ds
testb
leave
aad
push
into
pop
add
clc
cmp
lahf
fsubl
stc
mov
adc
mov
sub
fstl
data16
jecxz
sbb
cmpsb
or
push
push
dec
fmull
lods
cli
add
adc
mov
sbb
fidivrl
inc
cmpsb
cmpsb
icebp
inc
mov
stc
cmc
inc
arpl
cwtl
pop
dec
mov
jo
pop
push
lods
lcall
in
fcoml
jb
ds
mov
test
cmp
or
sti
jecxz
and
adc
cmc
ds
push
add
adc
mov
pop
jo
pop
lds
clc
xchg
xor
pop
cmp
xor
sbb
inc
rorb
in
stos
and
out
movsl
popa
xchg
mov
outsl
push
or
lock
or
fistps
or
inc
xor
jae
dec
sbb
jns
dec
jb
testl
cmp
testl
enter
neg
cs
int
mov
pop
bound
ds
stos
fsubrl
fdivl
outsl
sub
sub
leave
insb
push
loop
outsw
adc
cmpsl
push
push
cmp
sub
xlat
loopne
cmp
mov
dec
mov
rclb
mull
fsts
sahf
int
pop
mov
ds
fstp
mul
pop
ret
dec
movsb
lahf
fsubrl
cmc
inc
aaa
adc
hlt
or
lcall
mov
outsb
mov
push
jnp
xor
pusha
push
pop
pop
mov
aam
jns
dec
mov
inc
push
sarl
jp
faddl
sbb
neg
adc
or
dec
stc
fldcw
imul
cs
repnz
aaa
stos
adc
xor
negb
add
and
out
jl
push
lods
cmp
ds
fwait
adc
sbb
and
cmp
ret
jecxz
stc
pop
repz
ret
lea
inc
sbb
repz
push
shlb
out
push
mov
lds
out
jp
incb
bound
xor
nop
scas
sub
insb
call
mov
icebp
pop
jle
mov
mov
inc
jo
mov
jb
mov
jg
or
rcr
fstpl
outsl
pop
pop
dec
mov
loopne,pt
dec
inc
mov
fstl
mov
ds
mov
inc
in
cmc
lods
leave
mov
mov
sub
popf
cltd
xchg
btc
pop
push
lret
movsl
xchg
neg
lahf
push
inc
inc
add
bound
jno,pn
sbb
dec
hlt
orl
cmp
ds
mov
mov
jmp
mov
xchg
mov
jmp
push
lds
hlt
jmp
fimull
push
scas
mov
inc
inc
stos
nop
lea
ret
int3
add
loop
jns
loope
aaa
jnp
fisubrl
inc
inc
pop
xor
in
icebp
fcompl
pop
in
lods
mov
pop
fsubrs
adc
ds
push
push
test
mov
jge
cltd
and
pop
aas
mov
cmp
fdivr
inc
sbb
lcall
lcall
sub
push
mov
mov
pushf
sahf
nop
sbb
test
cmp
fisttpl
icebp
popa
inc
jae
pushf
out
or
cmp
dec
push
cld
das
mov
cli
jle
and
sbb
xchg
lcall
punpckhwd
jge
les
insl
aas
inc
and
adc
lods
and
pop
push
inc
out
cmp
call
ds
out
mov
pop
sub
push
jnp
sbb
xchg
pop
mov
cs
sbb
pop
push
pushf
inc
movsl
ret
push
insb
int
in
xchg
rorb
push
sbb
inc
mov
jle
dec
imul
mov
pusha
push
jl
dec
xchg
les
cmp
push
dec
les
sub
add
je
fiaddl
inc
pop
pushf
ja
push
test
xor
and
aaa
cmp
inc
mov
in
cmp
jmp
mov
push
fidivrs
outsb
mov
enter
mov
test
cmpl
lea
rcll
test
add
fdivrl
outsb
xor
pop
push
sub
loopne
push
imull
mov
mov
or
pop
dec
jecxz
arpl
or
inc
insl
cltd
sbb
jo
inc
hlt
ficoml
cmp
in
inc
nop
cmp
xchg
xor
sub
int
test
jl
pop
sbb
inc
das
mov
lret
aaa
push
push
clc
int3
dec
loopne
sbb
or
insl
jb
in
mov
fldenv
das
jp
outsb
cmp
cltd
inc
dec
scas
aaa
les
cmpb
das
dec
lcall
add
mov
aaa
loope
xchg
fwait
and
pop
gs
mov
sub
aaa
or
pusha
inc
out
bound
sahf
repnz
push
pop
jg
bound
dec
lret
and
outsl
push
and
push
mov
jecxz
movsl
jae
inc
sub
add
push
mov
xor
sbb
xchg
xor
pop
mov
xchg
jbe
decl
xor
and
stos
rcr
pop
mov
sbb
xorb
dec
out
add
xor
jge
lret
cmp
and
sahf
cli
push
repnz
sbbb
mov
xchg
fnstsw
js
adc
fistpl
pushf
dec
pop
push
outsb
test
xchg
icebp
jae
mov
enter
sbb
adc
sahf
repnz
jae
mov
stc
jl
pusha
add
sbb
xchg
xlat
xor
les
mov
and
nop
inc
call
faddl
dec
sbb
pop
testl
scas
enter
aas
push
adc
push
lods
ret
jb
push
push
mov
push
ds
add
pop
inc
aaa
out
out
xchg
jecxz
test
adc
ss
loop
mov
ja
in
inc
pop
sub
shrb
pop
outsb
mov
inc
in
scas
roll
lret
xor
movsl
xor
hlt
int3
push
pop
jo
icebp
lods
aaa
mov
into
bound
cmp
stc
push
frstor
sti
pushf
outsb
fdivrl
push
xchg
dec
sub
sbb
jecxz
pushw
hlt
call
rorl
mov
popf
cs
lahf
outsb
mov
mov
cmp
ret
sbb
jle
les
dec
ds
xchg
iret
mov
fdivl
mov
repnz
outsl
inc
cmp
scas
loope
pop
sbb
fwait
movsb
add
xor
fdivl
clc
sub
inc
inc
aaa
test
or
ffree
int
pop
orb
test
jb
daa
popf
std
jns
and
and
cmp
xchg
adc
push
scas
movsl
mov
mov
adc
cmp
lret
into
aad
aas
frndint
inc
inc
rol
jno
cli
sub
outsb
xlat
fistl
and
sub
aas
cmpsb
std
dec
push
inc
hlt
fnsave
and
or
jne
lods
imul
insl
ds
mov
rol
mov
push
enter
push
jbe
std
pop
lods
call
repnz
sti
pop
data16
bound
out
lods
push
int
lcall
cmp
test
outsb
mov
adc
or
mov
sbb
xchg
mov
test
jl
push
adc
shl
in
or
pop
push
mov
pop
push
mov
arpl
pushf
loop
dec
inc
ficompl
aad
or
je
cwtl
or
ds
mov
xchg
shll
inc
jbe
imul
push
sbb
mov
into
mov
out
inc
lods
pop
jno
jne
push
push
adc
push
frstor
push
in
les
mov
pop
sub
mov
jne
add
lea
mov
fistpl
add
mov
cmpl
jmp
jo
sbbb
inc
ds
aaa
jg,pn
push
stos
mov
sbb
inc
push
mov
sti
inc
pop
and
addr16
daa
loope
xchg
jl
rcr
xchg
xor
inc
sub
lock
adcb
test
lock
outsb
jmp
scas
push
divl
xchg
sbb
int
mov
into
inc
sbbb
pop
xor
in
cld
inc
and
inc
jnp
mov
cmp
fsubrs
mov
or
pop
in
out
and
movsb
jecxz
sbb
and
fstl
xor
or
inc
test
sti
xchg
cmpsb
push
out
cmp
xchg
ja
and
sub
sbb
orb
xchg
movb
pop
andl
dec
jecxz
fsubrl
test
imul
mov
fstl
push
filds
push
aad
inc
add
inc
cwtl
cmp
leave
sahf
xor
inc
loope,pt
mov
cmpsl
inc
loopne
repnz
adc
mov
lcall
xchg
adc
jle
mov
push
leave
cmpb
addb
inc
mov
mov
push
enter
sbb
les
gs
pop
movsb
fwait
jge
inc
inc
lea
sbb
dec
dec
ret
xchg
fnstsw
outsl
pop
lahf
mov
clc
fldl
cmp
repz
push
ds
jp
add
sbb
and
dec
mov
decb
jae
fnstsw
mov
inc
mov
and
xchg
outsb
addl
ja
sbb
adc
add
inc
add
mov
test
cmp
adc
xchg
cwtl
icebp
in
fcoml
and
repnz
xor
cwtl
clc
mov
pop
xchg
inc
cmp
and
rcr
xor
ret
xchg
or
mov
inc
lea
aas
xchg
xchg
cmp
aad
outsb
xor
cmp
popf
in
pop
fwait
out
push
push
add
aaa
ret
int3
sub
xor
or
inc
adc
cs
aaa
mov
xorb
popf
stos
pop
lcall
pop
or
aaa
lock
fcompl
inc
pop
fldenv
mov
and
aas
inc
pushf
or
inc
sbb
mov
lcall
inc
fisttpll
repz
nop
push
arpl
std
xchg
imul
es
jecxz
push
cmp
push
lret
ljmp
lock
jnp
mov
test
sub
in
push
out
mov
fisttpll
xchg
ds
sahf
push
dec
aaa
sub
inc
pushf
mov
cmova
push
add
inc
nop
jmp
add
push
dec
outsb
lcall
lea
dec
sbbl
push
mov
jo
popf
cmp
in
inc
frstor
xor
mov
sub
xor
lcall
lret
enter
adc
int3
ds
scas
jbe
or
cmp
xchg
jle
mov
lods
out
adc
jno
fstl
int
lret
loopne
insl
rclb
movsb
cmp
add
xchg
pusha
jb
jae
nop
jp
sub
mov
mov
push
adc
lods
js
and
vpmovsxwq
sbb
enter
pop
mov
mov
jmp
push
jne
mov
popa
jnp
cmp
stc
loopne
and
out
icebp
cmp
imul
jne
cmp
xchg
imul
int
adc
mov
mov
xor
jb
xchg
jecxz
sub
push
ds
sub
mov
mov
stos
mov
pop
divb
sti
ds
incb
sbb
push
and
push
mov
in
movsb
jecxz
push
dec
test
add
lcall
sahf
je
inc
and
hlt
stc
test
clc
cmp
lock
ljmp
fisubrs
mov
enter
arpl
push
ds
dec
icebp
clc
insl
jne
in
in
lret
pusha
pop
gs
or
mov
int3
mov
ds
daa
add
or
mov
movsb
insb
sbb
fstl
fcmove
mov
push
lcall
inc
pop
sbb
jmp
lahf
xor
cmpb
cmpsl
rorb
loop
push
imull
in
cmp
mov
xchg
inc
jns
lcall
stos
mov
out
mov
je
hlt
mov
jp
mov
in
mov
hlt
hlt
loope
aaa
and
push
add
dec
lcall
js
fadd
jp
aam
dec
xchg
pop
idivb
inc
shl
and
cmp
enter
sahf
fiadds
xlat
inc
adc
nop
xor
pop
int
outsb
inc
mov
mov
push
mov
mov
sbb
adc
push
sbb
out
sbb
shrl
jb
xor
sbb
or
inc
fisubs
and
mov
cmp
in
imul
pop
hlt
nop
jle
mov
add
lods
data16
aaa
cmpsl
das
icebp
dec
xchg
mov
cmp
cmpb
jle
sbb
in
ret
xchg
or
test
push
sbbl
mov
ja
inc
mov
jne
js
dec
bound
movsl
sbb
and
mov
dec
sahf
push
aaa
sbb
dec
ja
pop
insb
lcall
pop
in
inc
aaa
and
xor
and
aam
dec
test
pushf
aaa
xchg
jns
inc
dec
rcrl
cmpl
nop
sub
adc
mov
sarl
sbb
mov
sbb
fdivrp
fsubr
add
jo
fs
outsl
jo
mov
push
nop
mov
pop
xor
pop
mov
aaa
fcmove
push
iret
jmp
xor
lcall
or
fisubrl
jg
lret
jge
and
arpl
aad
mov
adc
insb
xor
jno
stos
aad
adc
jg
rcrl
xor
nop
cltd
jg
pop
cmp
mov
popf
and
daa
in
pop
mov
stos
jp
pop
stc
mov
stos
fimull
push
sub
or
icebp
or
mov
push
cmpsl
mov
nop
or
push
jle
mov
and
test
jl
sub
aaa
jo
cld
pop
bound
daa
test
and
lods
jnp
inc
int
push
xlat
sarb
incl
add
fsubr
xor
pop
lods
lcall
shl
fcompl
filds
cmp
and
jae
dec
js
test
fdivs
xlat
bound
stc
aas
mov
cmp
pop
out
sbb
mov
add
rcrl
adc
fwait
push
cmp
xchg
mov
push
stos
add
sub
mov
pop
jo
daa
cmc
push
cmp
mov
and
pop
dec
lcall
adc
push
dec
dec
sbb
cmp
xchg
aaa
or
lcall
or
and
push
fwait
cmpb
pop
add
in
inc
aaa
jp
popf
adc
sbb
rcrb
xchg
hlt
jo
inc
les
test
ds
mov
adc
and
outsb
sub
call
sub
cli
faddl
adc
imul
jno
pop
mov
sbb
dec
and
mov
pop
inc
sbb
mov
sbb
insl
jg
inc
cwtl
lcall
pop
cmp
pop
mov
inc
mov
push
inc
idivb
pop
xchg
dec
pop
movsb
test
enter
negb
fld
sub
xor
mov
inc
fcoms
fimuls
inc
jmp
and
outsl
jno
loopne
mov
dec
pop
sarb
jge
test
inc
push
aad
nop
cmpsb
jbe
arpl
test
xor
lcall
arpl
xlat
mov
lcall
fnop
push
adc
in
movsl
popf
mov
cmp
inc
pop
aam
test
stos
imul
pop
loope
inc
mov
mov
in
fadd
push
dec
xor
das
mov
inc
lea
aaa
mov
jmp
std
mov
pop
shlb
jge
stos
cmp
pop
sbb
pop
pop
push
dec
lcall
cmp
in
pop
inc
adc
add
xchg
xchg
aam
dec
leave
cmp
inc
rolb
test
fsubl
pusha
sbb
mov
pushf
cs
xchg
enter
cmp
jle
pop
test
add
in
jne
sub
push
add
ret
or
dec
mov
lods
aas
inc
sbb
in
lcall
xchg
jge
or
sbb
fcoml
mov
mov
aad
inc
lea
ret
mov
lods
jecxz
pop
cmp
add
psubsb
mov
cld
mov
les
hlt
adcb
test
loopne
scas
gs
test
js
pop
loop
cmp
pop
pop
pop
mov
mov
stos
and
mov
in
lcall
shl
pushf
sahf
cmp
inc
addr16
dec
pop
stc
lea
inc
pop
sub
jmp
loope
mov
push
dec
loope
ds
inc
divl
inc
mov
xlat
push
repz
add
std
mov
lods
loopne
ficompl
xchg
in
rcrb
xchg
jge
jle
pop
pop
pusha
push
xor
mov
mov
pop
lret
popf
ds
and
incb
loope
push
loopne
dec
aaa
xor
imul
out
adc
add
test
imull
scas
sub
sbb
adc
sub
or
dec
mov
ds
dec
push
sarb
sbb
cmp
in
xchg
xchg
xchg
sub
pop
sub
jle
jle
sbb
fcoml
inc
lds
lds
cmp
mov
jae
push
scas
dec
jge
ds
ljmp
aaa
dec
inc
sub
popa
lcall
pop
cli
enter
pusha
aas
pop
add
and
test
jge
mov
enter
popa
div
repz
pop
add
cli
mov
in
je
push
xor
std
adc
fwait
inc
mov
sbb
xchg
mov
or
cmp
jecxz
xchg
xor
mov
aas
inc
mov
test
jecxz
jne
daa
sub
into
adc
lcall
xchg
push
aas
pop
sub
sub
xchg
dec
inc
jmp
mov
inc
or
je
mov
sbb
mov
mov
mov
out
sbb
pop
or
ds
loope
sub
pop
cmp
xorb
jle
cmp
jl
daa
push
inc
lcall
ror
ljmp
arpl
sbb
and
mov
mov
mov
aaa
and
jg
addr16
test
cmp
jge
push
adc
loope
dec
cmp
jno
lret
mov
push
ss
sbb
inc
or
int
lcall
aas
paddusw
stos
in
adc
enter
mov
xchg
cmp
lea
clc
pop
andl
jae
dec
push
cmp
jl
jle
loopne
mov
les
mov
push
or
sahf
mov
and
mov
dec
cwtl
aaa
jecxz
bound
je
jae
popa
xlat
sbb
or
pusha
loopne
mov
adc
shl
out
pusha
repnz
xlat
rcrb
mov
lret
cmpsl
mov
shll
mov
repnz
dec
pop
and
adc
mov
lcall
cmp
loopne
lcall
fcompl
and
jl,pn
sti
jmp
or
cmc
fdivl
sbb
in
std
test
cltd
lcall
leave
sub
xchg
fistps
popa
ds
or
xlat
loop
adc
push
out
push
ror
fsub
loop
fcomps
std
in
cmp
xlat
imul
inc
scas
imul
or
or
sbb
add
pop
pop
clc
adc
pop
std
pushf
push
mov
rcrl
push
pusha
fstpl
loop
add
mov
or
cmp
sub
movsb
repnz
mov
das
pop
mov
in
scas
mov
xor
js
mov
in
js
sbb
jg
dec
mov
adc
sub
int3
pop
inc
fwait
dec
lods
pop
hlt
shlb
inc
aaa
fistps
outsl
sbb
xchg
pop
mov
incb
sub
fdivrl
mov
add
ds
xor
sub
cmp
lock
fstp
pop
fs
dec
mov
lret
mov
sbb
cmp
sub
jp
lcall
ja
jle
or
stos
cmpsl
out
dec
jne
cld
push
inc
xchg
cmpsb
lcall
dec
aas
lcall
push
popa
jno
rcr
out
out
xchg
xchg
lcall
sub
pop
cmp
shrb
adcl
scas
loop
mov
and
jb
lcall
scas
and
aaa
ljmp
mov
sub
jns
in
cmp
cmp
pop
faddl
xor
mov
mov
mov
movsl
and
add
jae
in
dec
cmp
and
test
test
dec
jle
inc
and
rclb
cltd
lods
mov
loop
pop
mov
mov
cltd
imul
fbstp
pusha
pop
cmp
xchg
inc
lcall
pop
xchg
ds
add
dec
cs
addr16
mov
dec
and
sbb
adc
or
dec
sarb
push
mov
sub
or
push
add
ljmp
sub
dec
fsubrl
ss
loop
aaa
clc
add
outsb
insb
and
push
lcall
daa
jnp
adc
into
gs
loope
mov
ja
jl
lock
in
in
push
xchg
shlb
lahf
dec
pop
gs
ds
pusha
fsubrp
add
or
adc
inc
xchg
aas
mov
xor
sbb
mov
xchg
push
imul
clc
inc
and
lret
mov
add
xchg
aaa
stos
lcall
lcall
scas
and
mov
inc
popa
mov
sarb
hlt
jne
popa
cmp
dec
out
pop
ficomps
rorb
dec
es
xchg
jbe
loope
pusha
xor
repnz
shrb
dec
lcall
dec
and
cltd
inc
adc
cmp
into
pushl
sarl
push
lcall
loopne
cld
push
or
inc
imul
cmp
aad
in
sbb
inc
pop
outsb
ds
adc
test
cli
xor
andl
dec
mov
test
mov
mov
xchg
and
rclb
lea
xchg
mov
lcall
das
or
stos
fcoml
add
adc
aas
cmp
mov
fsubrl
pop
orl
pop
mov
lock
fmul
out
sub
shl
mov
out
inc
xchg
sbb
imul
add
xchg
inc
jle
inc
cmp
sub
fstp
aas
or
ds
dec
jmp
mov
aaa
pop
ds
cld
jle
call
mov
fimuls
dec
pop
mov
fsubl
mov
and
jge
adc
lds
mov
mull
xchg
push
fwait
mov
int3
push
or
stos
mov
cmovg
xchg
out
mov
pop
mov
lods
dec
jmp
jle
icebp
std
xor
test
insb
call
fstpt
es
sti
mov
arpl
inc
insb
dec
sub
xrelease
cmp
sahf
xlat
mov
jne
mov
jns
or
in
std
mov
ds
xchg
je
push
ljmp
scas
adc
lahf
mov
mov
lcall
int
dec
and
in
aad
ds
pop
js
dec
mov
dec
sbbb
pop
js
ret
dec
mov
mov
popf
int
clc
dec
inc
fs
idivl
fnsave
xor
stos
sub
push
pop
lcall
ret
xchg
outsl
push
daa
dec
push
mov
int
mov
cmp
inc
les
cmc
mov
neg
ret
xchg
xacquire
and
cs
loopne
adc
and
enter
addb
mov
pop
nop
mov
rcr
aas
push
sbb
jo
cmp
push
sbb
xlat
imul
push
add
push
xchg
inc
push
frstor
cmc
mov
insb
pop
shll
cmp
movsb
scas
ds
popl
lcall
and
cs
inc
in
faddl
mov
jo
adcl
inc
shrl
popf
inc
dec
imulb
ja
mov
jo
pop
data16
out
jne
hlt
mov
cmp
adc
test
sub
out
sbb
dec
fdivs
pop
aas
aaa
adc
shrl
inc
adc
mov
std
aaa
pop
sahf
jnp
das
sub
pop
mov
cwtl
sub
in
test
pop
mov
push
inc
in
dec
lahf
aaa
cmpsb
outsb
leave
jle
push
addl
push
push
inc
jne
jo
push
pop
inc
sbb
inc
sub
es
dec
mov
xchg
mov
adc
sbb
pop
and
lcall
insl
outsb
stc
mov
xchg
pop
jne
mov
or
mov
add
jnp
push
mov
add
push
incl
stc
movb
jne
add
add
jnp
inc
cmp
pop
in
clc
mov
fcoms
add
pop
outsb
cmc
movsb
ds
pop
insl
push
lds
repz
sbb
mov
imul
cmp
frstor
mov
jg
mov
or
add
jb
movsb
mov
aas
lods
inc
arpl
lcall
mov
scas
lods
pop
dec
cmp
aam
push
ret
inc
cmp
leave
test
movsb
lcall
cld
aas
sti
mov
pop
popf
in
xchg
pop
iret
mov
cmp
rcr
scas
sub
inc
xchg
cmpsl
xchg
xor
stos
loopne
fmull
and
or
out
ljmp
adc
push
push
insl
xor
mov
shlb
movsb
popa
lcall
add
ljmp
mov
mov
jae
push
cmp
add
pop
jecxz
jo
inc
lcall
jne
leave
jae
and
popa
xor
mov
inc
addb
daa
sbb
adc
pop
xorl
add
jns,pt
sbb
inc
lahf
pop
mov
hlt
ret
xchg
dec
and
pop
and
mov
lcall
fbstp
inc
jns
mov
leave
mov
fwait
dec
mov
lcall
leave
icebp
jmp
dec
mov
fidivs
mov
jl
scas
mov
and
fisttpll
ja
mov
cli
es
or
dec
cmp
pushf
xor
mov
js
daa
pop
test
inc
and
test
test
jecxz
jbe
fildl
rclb
repz
sbb
cli
fnstsw
lar
sub
aaa
adc
mov
sbb
push
lods
or
xlat
jecxz
mov
mov
pop
dec
pop
ljmp
dec
arpl
scas
daa
data16
sub
call
aaa
fiaddl
add
xor
pushl
aas
scas
mov
rclb
sti
lcall
int3
scas
loopne
cmp
jne
push
inc
mov
out
mov
hlt
jne
repz
dec
jp
jbe
add
cmp
mov
pusha
test
adc
pushf
cmp
sbb
popf
movsl
mov
divb
clc
bound
pop
jge
add
daa
cmp
lret
shl
mov
pop
lcall
inc
fwait
push
or
hlt
ds
loopne
cmp
int3
jp
lcall
and
sbb
ja
nop
cld
mov
sub
lcall
adc
mov
scas
in
and
mov
lahf
iret
jb
pop
test
mov
cmpl
mov
dec
mov
xchg
or
or
mov
outsb
mov
loop
ds
loope
cmp
cld
ds
push
push
cmp
and
inc
sub
and
aaa
jae
adc
push
mov
mov
roll
lds
sub
xchg
lcall
mov
in
cmc
ficoms
and
sbb
sahf
add
xor
cli
mov
sub
cmp
mov
pop
jmp
lret
lods
insl
push
mov
pop
repz
push
mov
dec
cmp
xor
scas
dec
mov
dec
repnz
jecxz
pusha
repnz
mov
cmc
add
mov
repz
jg
dec
neg
fistpll
je
neg
int3
movsb
xor
jl
aaa
scas
js
cmp
push
mov
insl
inc
aaa
pop
lds
aaa
jnp
testb
std
inc
addr16
inc
add
fdivrl
sbb
lcall
loopne
fstp
in
or
dec
add
pop
dec
fwait
cmp
rorb
cmp
push
mov
cmp
aaa
pop
push
insl
in
xchg
mov
in
mov
out
mov
scas
or
das
pop
test
xchg
ds
sbb
cmp
dec
ds
loopne
andl
xchg
sbb
push
cmp
jg
xor
inc
add
xchg
inc
and
shlb
testb
std
sbb
movsl
xchg
jp
scas
test
mov
mov
mov
sub
sbb
adc
jl
test
insl
pop
pop
repnz
dec
in
icebp
fdivl
insl
mov
in
dec
xor
mov
push
adc
mov
xorb
jne
push
ret
jbe
dec
dec
adc
mov
shrl
dec
lock
jg
ja
jne
lcall
mov
mov
xor
out
out
mov
mov
adc
out
sbb
ljmp
and
addl
iret
pop
jb
adc
std
std
jge
jp
jo
je
es
mov
xchg
xlat
or
std
out
stos
mov
sbbl
fisttpll
cmp
in
lahf
in
xorb
inc
mov
test
push
insl
enter
jnp
adc
mov
in
out
je
cmp
mov
adc
pop
push
xchg
cld
into
mov
mov
out
mov
cmp
and
imul
xor
sub
pop
out
filds
pop
fnstsw
jbe
cmp
mov
adc
sub
fmull
cmc
cld
dec
lods
mov
imul
lcall
jbe
mov
xchg
pusha
inc
rclb
sbb
or
pusha
dec
mov
push
and
push
xchg
or
xchg
imul
fildll
pop
test
lcall
leave
sbb
adc
push
mov
jo
push
add
or
fs
das
insl
and
mov
xchg
or
mov
jmp
popf
sti
fisubs
mov
jmp
je
sbb
jnp
outsl
mov
int3
in
cmp
mov
in
sbb
cmpsl
fcomp
pop
xchg
mov
popf
mov
dec
cmp
sbb
out
nop
lret
outsl
mov
lcall
cltd
ffree
inc
sahf
repnz
sbb
pop
inc
out
push
xor
mov
adc
scas
mov
test
movsb
inc
loopne
or
inc
pop
aaa
psubsb
dec
lds
cmp
jge
iret
popa
and
cmpsl
sbb
lds
cltd
dec
stos
sub
cmp
pop
mov
jecxz
cmp
repz
ss
jecxz
push
push
icebp
inc
cmpsl
daa
fbstp
clc
inc
and
xchg
fiadds
testl
dec
and
jle
add
sbb
inc
icebp
mov
add
cmp
jnp
mov
insb
and
loop
and
xchg
divl
insl
sub
enter
sti
pusha
sbb
out
pop
repnz
sbb
mov
mov
cmp
xchg
or
sti
mov
sbb
test
mov
lock
xchg
sub
or
insl
inc
push
lcall
bound
add
or
adc
pop
outsl
jno
pmovmskb
mov
outsb
in
scas
aaa
stos
pusha
cltd
cmp
mov
jg
add
xor
fdivrl
xchg
call
mov
sub
and
or
dec
scas
data16
rcrb
or
sub
cmp
fucom
test
outsb
ds
rcrb
fstps
outsb
pop
in
into
sahf
mov
aaa
mov
cli
mov
fwait
push
ret
and
or
fnsave
cld
movsb
sub
clc
sbb
pop
fnsave
jl
push
or
stos
cmp
mov
dec
daa
cmpsb
lahf
fstl
xchg
out
or
lcall
out
adc
loope
ss
add
pop
pop
sbb
and
dec
inc
jmp
lcall
addr16
ljmp
and
fdiv
sub
sub
movsl
add
inc
call
ds
pushf
pop
sbb
push
xor
xor
sti
nop
lcall
inc
pop
ficoml
sub
test
and
subb
and
mov
adc
xchg
dec
and
xlat
add
ds
lret
out
push
jno
add
mov
lcall
mov
adc
cmpl
cmp
data16
fisttpl
push
dec
and
jbe
mov
and
repnz
in
adc
and
negl
lahf
and
fists
enter
ljmp
test
pop
into
sbb
fcmovu
aaa
and
imul
fwait
imul
test
jno
and
jnp
add
leave
push
call
ret
movsb
inc
les
aam
mov
push
int3
pop
testl
dec
mov
mov
ficompl
fs
inc
push
push
push
cmpsb
mov
or
shlb
sbb
sti
lcall
pop
jg
add
mov
pusha
adc
imull
cli
lret
stos
fidivrs
add
sub
inc
pop
xor
insb
mov
cmc
sbb
cmpsb
fisttpll
sub
scas
mov
or
lcall
xchg
jecxz
out
inc
dec
jne
mov
dec
mov
ja
jp
rcrl
frstor
xchg
jo
dec
in
push
std
outsl
xchg
pop
adc
add
stos
sbb
push
mov
pop
jo
roll
lcall
push
cli
sti
push
sub
pop
stos
popa
incl
loopne
gs
mov
daa
or
dec
mov
cmp
fidivrs
jp
mov
xor
push
movsl
jmp
ja
xor
fsubr
out
push
popf
mov
icebp
xchg
sbb
mov
mov
repz
testb
push
ljmp
xchg
test
mov
sub
les
cmp
addb
adc
mov
out
pop
xor
adc
mov
xchg
push
pop
push
cmc
mov
dec
sarb
aas
aaa
mov
pop
cld
call
mov
push
sub
lret
movsb
sub
aaa
pop
lods
out
add
dec
sub
mov
call
xchg
mov
xchg
pop
test
mov
dec
cltd
push
jp
rcr
mov
das
insb
mov
rcll
jae
inc
aaa
mov
jge
fcoml
push
aas
sub
jl
scas
call
jns
cli
out
rclb
or
sub
js
cmpsb
or
repnz
dec
imul
jb
pop
push
leave
stc
fsubr
flds
xchg
xchg
mov
add
push
dec
out
in
pop
ds
lahf
cmp
cmp
or
add
mov
jge
dec
add
adcb
mov
mov
pop
rcrl
xor
movsb
cltd
jb
stos
ret
lcall
stc
mov
inc
jns
mov
inc
neg
and
nop
enter
jmp
in
call
ljmp
jae
out
dec
lcall
mov
sub
inc
pop
out
fcompl
std
cmp
inc
pop
aad
aaa
loope
rol
sahf
in
pushf
lcall
push
jnp
int
inc
shlb
cmpsb
jmp
sbb
loope
xlat
or
mov
ret
ja
sbb
cmc
mov
aaa
lret
aam
adc
iret
xchg
inc
inc
push
pop
jmp
cmp
das
sbb
jge
test
ret
adc
jo
mov
pop
mov
push
sub
or
inc
xor
data16
loop
pop
rcr
mov
push
dec
mov
out
imul
mov
fidivl
scas
cmp
lods
and
ja
lea
sub
lcall
mov
sub
pop
in
ds
sahf
das
pop
popa
inc
push
push
clc
cmp
mov
xchg
stos
or
daa
gs
movsb
ds
scas
pop
adc
mov
push
aaa
and
push
lcall
enter
into
jnp
rcrb
ds
pop
shrl
mov
cmp
push
aas
aad
fmull
incb
mov
mov
clc
cli
and
fwait
ss
push
sub
sbb
sbb
dec
lahf
lock
or
stos
mov
cmp
leave
adc
jmp
arpl
sahf
nop
popa
add
es
inc
icebp
fwait
loopne
cmp
repnz
jbe
cmpl
cld
add
pop
xor
jns
loop
mov
or
out
movsb
dec
mov
pop
insl
mov
decl
cmp
cmp
pop
add
and
pop
es
push
dec
lret
outsb
push
aaa
repz
inc
sarl
pop
add
xchg
or
fsubl
cmp
popf
dec
xchg
and
fdivs
in
jge
ljmp
pop
sti
push
add
cld
andl
sbb
xchg
shlb
data16
mov
mov
aaa
and
dec
imul
test
jb
out
lods
inc
cltd
loop
std
sbb
mov
pop
fwait
inc
cltd
dec
sbb
jbe
fistps
sub
xor
fwait
lcall
push
sub
pop
pop
cmp
cmpsb
xchg
pop
lahf
filds
pop
dec
outsb
lcall
sub
test
add
ja
mov
mov
push
jne
cwtl
fst
test
movsl
dec
test
movsl
inc
cmp
aas
fnstsw
and
incl
or
fadd
mov
loop
dec
sbb
xchg
inc
es
lahf
jae
les
pusha
jl
mov
jne
jl,pt
push
daa
es
cmp
fsubs
push
lds
mov
insl
push
mov
lods
clc
scas
sub
and
sub
adc
dec
cs
sbb
lods
mov
xchg
adc
and
jae
dec
pop
out
rcrb
push
pinsrw
or
shr
lahf
in
lea
mov
push
dec
or
daa
mov
fwait
and
stos
pop
jle
mov
xchg
icebp
jle
fadds
js
ficomps
mov
mov
rcr
test
xchg
flds
xchg
ds
fildll
dec
push
pop
test
imull
inc
add
cmp
fwait
das
add
jne
test
sbb
cmp
int3
jae
aad
sahf
aaa
xchg
icebp
les
add
push
test
and
inc
jbe
and
xchg
rcrl
inc
xchg
lock
out
ljmp
xchg
inc
mov
pop
xor
in
cmpsl
inc
loop
dec
inc
mov
in
lahf
adc
mov
or
mov
rcr
std
sub
call
dec
cmp
decb
pushf
es
lcall
loope
fildll
pushf
pop
out
push
lret
sbb
ret
xlat
cs
aaa
push
cltd
or
daa
xor
mov
lcall
sbb
fs
fstpl
fwait
enter
jl
hlt
repnz
insb
popf
pop
out
mov
pop
insl
clc
test
pop
add
xchg
mov
frstor
out
sbb
inc
xor
mov
test
addr16
jecxz
xor
mov
aaa
ret
aas
jg
push
gs
int
lret
push
cmpb
jno
dec
loopne
cmp
jge
push
mov
into
xchg
pop
push
mov
mov
pusha
int3
jge
push
adc
add
sbb
scas
aas
xor
adc
dec
jl
int
push
arpl
and
mov
jg
cld
lret
mov
outsb
dec
loopne
addb
frstor
loopne
fadds
mov
ss
pop
lods
aam
mov
ret
stos
and
xor
sbbb
mov
sub
loop
std
in
push
lcall
xchg
pop
xor
sub
dec
outsb
pop
jl
xor
push
sti
popf
and
jb
je
inc
or
loopne
adc
mov
or
dec
fucomi
pop
mov
and
or
out
cmp
lcall
ja
cli
xchg
out
loopne
inc
call
xor
insb
push
mov
lcall
lock
sub
aas
in
mov
mov
mov
xchg
cmpl
push
mov
xchg
fmull
sub
loop
inc
dec
inc
fwait
pop
inc
pextrw
mov
pop
xlat
mov
es
fistpl
jb
inc
lcall
in
pop
adc
mov
mov
jl
cmp
in
and
scas
cmp
stos
and
pushl
in
pop
lods
xchg
cmpsb
jg
dec
dec
loope
sub
mov
or
popa
in
push
int3
adc
mov
and
add
sbb
das
sbb
movsb
inc
xchg
fiadds
dec
sub
mov
mov
add
lcall
sbb
sahf
inc
pop
rcrb
rclb
fidivl
mov
pop
aam
xor
add
lcall
or
fiadds
ficoml
jge
sub
mov
js
outsb
adc
fdivrl
imulb
incl
pop
in
imul
les
bound
sub
popf
pop
xchg
inc
cli
pop
cmpsb
pop
clc
inc
fdivl
or
push
out
test
outsb
jo
mov
es
mov
mov
push
test
mov
ds
movsb
neg
and
xchg
dec
cmp
insl
push
xlat
mov
aaa
dec
fnstcw
fabs
pop
jmp
lcall
out
das
fsubp
jno
repnz
in
push
les
push
mov
int
cmp
push
mov
or
xchg
mov
sub
jb
lcall
inc
repz
pusha
lret
sarl
xchg
mov
inc
xchg
dec
xchg
ss
shlb
outsl
dec
push
aas
dec
mov
add
nop
jmp
outsl
dec
mov
or
jge
mov
pop
loop
xor
cmp
loopne
cmp
test
outsl
dec
mov
cmpsl
insl
cmpsb
dec
lock
test
xor
add
ret
sbb
mov
pop
cmpsl
dec
lods
in
lahf
pop
xlat
fcoml
pop
test
ds
out
aad
push
adc
aaa
loopne
pop
push
lcall
and
pop
mov
mov
loop,pt
loope
lret
fdiv
jmp
push
adc
mov
lcall
das
mov
lea
jmp
scas
jp
aaa
add
sbb
push
and
add
lcall
aaa
mov
mov
nop
lods
pop
out
rcrb
out
and
loop
test
sub
mov
ja
in
mov
and
sub
jne
fnstsw
pop
mov
cmp
push
dec
mov
leave
jae,pt
data16
xor
aam
xchg
mov
cmp
jl
cltd
inc
outsl
idiv
ror
aas
rorb
daa
mov
jecxz
leave
ja
sub
push
pop
fs
insl
cmpl
jno
dec
test
fmull
ret
pop
mov
sub
test
jp
pop
mov
adc
fdivl
inc
xor
add
dec
ret
mov
into
push
cmp
adc
xchg
mov
loope
jmp
lret
xor
push
outsl
lret
adc
sbb
std
mov
dec
mov
push
mov
clc
dec
mov
lret
aas
pop
loopne
or
mov
or
cmc
sub
mov
inc
jns
inc
mov
movsb
divb
ficomps
mov
insb
ds
sbb
pop
and
arpl
push
push
cmp
sbb
mov
and
xor
jge
or
shrb
sub
inc
daa
in
lods
inc
xchg
pop
aaa
js
iret
or
pop
js
add
jnp
outsl
mov
in
pop
stos
pop
ret
push
popa
pop
lret
xchg
adc
jp
cwtl
push
test
imul
push
insb
sbbl
arpl
sub
faddl
rcr
or
fucom
add
daa
dec
test
lret
imul
or
pop
cmc
pop
jb
inc
jns
aad
lds
jmp
jb
pop
out
inc
mov
jae,pt
inc
mov
popa
repnz
fs
subl
dec
cmp
shl
cli
fdivr
jns
shlb
rolb
or
fbstp
sarb
pushf
inc
loope
ljmp
jno
out
sti
andb
or
int
mov
lcall
adc
test
ret
mov
rcrb
or
data16
inc
ss
sti
add
cmp
fsubr
daa
ret
mov
iret
jo
fidivs
inc
push
push
push
xchg
fmul
ds
mov
out
lds
filds
push
cli
mov
sbb
push
in
push
aas
cwtl
jge
int
pushf
out
das
sub
cmp
pop
pop
xchg
cld
aaa
mov
mov
lcall
jno
fcompl
add
adc
xorb
inc
cli
jno
outsl
lock
dec
adc
adc
cld
inc
xchg
pop
je
xor
ljmp
add
mov
aaa
xchg
repz
inc
add
repz
add
mov
fildll
lea
out
rcll
mov
jle
arpl
mov
cmp
loope
or
in
mov
xor
fdivrs
ds
test
aam
mov
das
lret
test
push
dec
in
fsubrl
out
loopne
sub
fucom
out
inc
insl
divl
mov
dec
int3
sti
test
lea
dec
pop
aaa
mov
xchg
mov
mov
jle
lcall
dec
inc
cmp
mov
ljmp
mov
sub
fildll
cwtl
push
repz
loop
sbb
jbe
sbb
ret
adc
mov
jl
mov
jp
cmpsl
mov
mulb
mov
insb
lcall
cs
loopne
inc
sub
outsb
mov
fxam
shlb
ja
ljmp
push
aaa
ds
pop
popf
jg
aad
mov
xor
mov
imul
mov
sahf
pop
inc
lahf
pop
mov
cli
outsb
popa
frstor
mov
mov
and
idivl
ficomps
cltd
cmp
and
jmp
int3
mov
cmp
pop
xor
push
aaa
loop
jecxz
sub
insb
pop
cmp
or
pop
cmp
adc
pop
jo
out
leave
mov
sbb
lcall
lahf
mov
outsb
test
push
jbe
push
sub
cmp
xchg
test
ret
addb
mov
insl
sti
xchg
sbb
push
cmp
fnstsw
dec
xchg
lret
xor
push
jne
ficoml
or
subb
mov
mov
stc
add
jmp
ljmp
adc
cmp
or
stc
and
cmp
jmp
add
mov
lods
bound
lcall
lock
insl
xchg
negb
mov
cmpsl
pop
push
stc
lcall
xchg
lret
cmp
cmp
or
dec
out
pushf
push
push
loop
mov
jnp
stc
into
ja
pop
lahf
repz
or
pop
lcall
jmp
dec
and
enter
cmc
and
mov
sti
jle
daa
popf
data16
in
js
xchg
jne
xchg
out
testl
pop
jp
jns
test
jno
pop
pop
inc
push
sub
cli
add
jp
sbb
adc
stos
lds
fmulp
loop
and
push
or
sbb
jae
lcall
add
sbb
pop
xchg
mov
mov
aaa
jnp
inc
inc
or
and
ljmp
ds
mov
dec
sahf
adc
popf
pop
or
fsubl
and
inc
ds
or
out
pop
ljmp
cmp
sub
or
mov
push
mov
pusha
in
jno
sbb
fldl
ret
popf
filds
insl
stc
dec
jno
jns
pop
pop
push
sbb
sahf
aas
inc
in
rclb
mov
out
pushf
jg
and
arpl
daa
mov
mov
xor
fwait
roll
sub
sar
insb
inc
pop
push
adc
jo
jmp
lea
or
mov
mov
ret
and
cld
push
pop
daa
inc
mov
push
or
pop
ds
fldt
adc
push
lret
cmp
pop
filds
xchg
mov
xor
outsb
add
dec
dec
daa
scas
subl
adc
mov
pusha
sub
in
ss
inc
pop
or
lock
mov
xor
hlt
pusha
loope
inc
hlt
stos
fwait
inc
in
pop
and
ds
ljmp
mov
dec
lods
das
lods
out
lret
inc
dec
dec
push
add
mov
pop
fmulp
cmp
dec
xor
jmp
fsubrs
addr16
dec
mov
and
push
sbb
mov
ret
aaa
in
cmp
xchg
xor
int
sub
in
into
pop
aam
lret
push
testb
outsb
mov
addb
shrb
popfw
sbb
mov
lahf
insb
jo
mov
lock
fmuls
lea
fsubrl
mov
jno
aas
movsl
cmp
jmp
pop
jae
jbe
bound
and
jne
movsb
sbb
ds
out
push
add
sub
jo
shll
push
cld
sahf
jbe
push
add
and
or
js
sub
push
inc
mov
and
aas
aas
in
and
cmp
push
inc
test
scas
jb
sub
mov
fiaddl
dec
mov
jg
cmp
cld
mov
std
aas
nop
cwtl
icebp
cmp
gs
cmp
aaa
ss
jae
inc
and
aaa
int3
dec
mulb
daa
scas
lea
pop
daa
jnp
cltd
fnsave
les
pop
faddl
aaa
cli
cmp
rolb
mov
or
lods
in
fcmove
sbb
fnsave
and
sbb
or
pmaxub
cmpsl
out
repz
jg
sti
std
lcall
or
icebp
call
jp
pop
mov
jle
xchg
pop
aaa
arpl
mov
imul
mull
das
aaa
push
popa
push
xchg
icebp
sti
cmp
stos
lret
push
ds
or
and
cli
xor
int
cli
lds
sbb
lea
jge
mov
push
inc
mov
xor
pop
lcall
sub
adcl
mov
ficoms
mov
fst
push
xchg
inc
iret
pop
mov
and
roll
ja
push
fidivs
and
push
negb
jbe
or
scas
cmp
xor
cmp
stc
mov
jmp
pop
mov
stos
dec
in
pop
jnp
rcrl
fistps
scas
out
jbe
daa
and
outsl
or
shlb
mov
xchg
pop
repnz
repnz
cmp
pusha
sub
mov
and
jmp
mov
stc
call
push
in
and
push
jl
and
subb
and
push
adc
mov
ds
movl
mov
andl
or
sbb
hlt
sbb
ss
and
stos
xchg
cmpsb
pop
rolb
int3
inc
std
roll
mov
faddl
and
rolb
aas
cld
sbb
mov
loopne
addr16
ficoml
int
inc
cwtl
cltd
pop
jge
xchg
or
pop
mov
lods
ljmp
adc
data16
lcall
outsb
movsl
fdivrl
movsb
popf
sti
cmp
pusha
enter
mov
fldl
fimuls
repz
les
mov
xchg
sti
out
lcall
jl
cmp
xchg
outsl
jne
pop
mov
popf
cwtl
adc
scas
insb
dec
dec
orb
dec
mov
fidivrs
mov
jb
mul
cmp
push
push
or
inc
scas
faddl
or
inc
fcomps
in
sti
jp
andb
in
lret
pushf
sti
pop
cmp
aas
inc
pop
test
mov
in
clc
out
rcrb
imul
clc
addr16
push
and
stos
pop
or
scas
jecxz
shrb
xchg
dec
mull
lcall
std
arpl
jns
adc
mov
dec
aas
add
mulb
test
push
pushf
sbb
add
sub
mov
imul
in
fucomp
je
sub
push
pop
pop
jge
mov
lahf
jge
lcall
popf
inc
fbstp
adc
hlt
cwtl
mov
push
push
rcr
push
mov
nop
xchg
dec
cmpsb
mov
sbb
fnsave
lret
arpl
and
mov
repnz
xlat
xchg
aaa
dec
rcl
dec
and
js
mov
dec
shlb
mov
and
les
xorl
lret
jge
decb
arpl
xchg
mov
push
mov
nop
scas
lds
fcoml
mov
test
imul
mov
mov
sbb
cmpb
sti
dec
adc
fsubrl
mov
ja
mov
xchg
aaa
pop
xchg
test
in
hlt
push
cmpb
shrl
add
sbb
fsubrl
fdivp
test
mov
add
xor
mov
scas
push
ds
imul
ds
rcll
pop
movb
inc
pop
dec
pusha
push
jecxz
mov
jno
cmp
enter
cltd
jns
out
xchg
xor
mov
mov
int
cmp
jbe
pushf
push
test
mov
call
mov
cmp
dec
movsb
nop
adc
adc
mov
add
sarl
mov
xchg
pop
int
cmp
aaa
cmp
lcall
push
mov
enter
shl
out
lods
ficomps
sub
outsl
inc
int
aaa
xor
jne
movsl
fcomps
jle
add
lret
insl
aaa
pushf
push
add
dec
or
test
ds
fimull
std
fucomp
pushf
push
mov
sub
cmp
push
gs
add
xlat
push
and
jecxz
lahf
mov
sbb
or
mov
mov
adc
jle
or
pop
fsts
mov
jnp
sub
pusha
in
cmp
adc
test
cmp
sbb
add
inc
sbbl
repnz
ja
cwtl
lods
and
and
jmp
push
adc
sbb
xor
sahf
cmpsl
jmp
inc
lcall
jle
stos
pop
test
pop
sbb
sub
fidivrl
sub
xor
jo
xchg
push
pop
fwait
popa
inc
rorb
or
push
xor
jmp
xlat
test
nop
fs
push
xor
scas
cmp
rol
mov
mov
lcall
lret
frstor
stc
cld
sarl
jp
mov
add
ds
lret
mov
sahf
pop
repnz
inc
xchg
fstpl
push
mov
inc
insl
or
dec
add
or
aaa
xor
mov
mov
jge
test
inc
cwtl
test
lcall
pop
movsl
lods
sbbb
dec
sbb
cs
jnp
pop
subps
fs
lcall
pop
stc
fdivp
std
bound
out
cli
mov
popf
lcall
popa
jb
push
test
jae
lea
int
icebp
push
test
mov
int
test
pop
xchg
out
sub
lcall
jecxz
clc
lea
add
add
out
mov
xchg
adc
test
pop
js
shlb
loope
mov
mov
add
xor
pop
mov
xor
loope
test
aaa
aad
jno
cmp
lret
repnz
sbb
xor
out
dec
jmp
cmp
mov
adc
pusha
mov
in
and
push
fwait
xchg
ds
pop
xchg
sub
push
insb
push
pusha
mov
mov
mov
scas
mov
aaa
push
rcrb
cmp
xchg
mov
call
cld
adc
push
lret
fdivrp
xchg
xor
pop
lea
fwait
lcall
add
ficompl
add
out
mov
lret
aas
jmp
stc
fs
into
sbb
mov
loop
in
aaa
stos
xchg
pop
aad
aad
enter
xchg
test
cmp
adc
ds
fisubrl
or
pop
pop
cmp
adc
js
sub
or
inc
sub
das
dec
lods
mov
addl
int
lods
test
jns
mov
or
inc
sub
jle
inc
xchg
jb
stos
sar
mov
aam
push
gs
push
fdivl
pushf
jbe
popf
std
mov
cltd
stc
adc
inc
arpl
das
pop
push
cmp
pop
enter
and
inc
inc
fdivrs
xor
sbb
xor
out
sub
repz
and
es
sub
icebp
test
pop
pcmpeqd
jge
lock
mov
inc
out
mov
cmp
xchg
aaa
lds
push
pop
jb
aaa
mov
push
call
mov
jecxz
popf
add
cpuid
pop
mov
mov
push
jp
sti
test
mov
jnp
rorl
dec
frstor
clc
test
ret
fildll
mov
cwtl
xchg
lret
lcall
cmp
cmp
mov
aas
push
cli
inc
pop
aad
inc
rcr
mov
fadds
arpl
adc
adc
stos
out
mov
lea
aaa
adc
cmpsb
orb
push
clc
icebp
push
push
cmp
pop
lcall
dec
test
and
and
lds
dec
sub
mov
scas
sub
adc
cmp
sbb
fdivs
sti
shll
cld
mov
sbb
lcall
aaa
cs
ljmp
push
ljmp
rorb
pop
shlb
jne
or
push
pop
dec
loope
out
repnz
mov
inc
push
js
pop
pushf
and
sbb
iret
aad
and
jno
scas
push
cmp
jb
ds
pop
loop
xchg
mov
icebp
mov
push
mov
ds
or
int
or
cmp
mov
testl
dec
cmp
loop
enter
push
imul
ja
fdiv
dec
insl
bound
fldl
dec
fwait
roll
sub
daa
aad
cmp
mov
shll
cmp
xchg
divb
call
jnp
lock
inc
sahf
fcoms
sbb
inc
jl
mov
lcall
pop
cmp
int
jmp
mov
jp
nop
pop
mov
in
jge
fadd
int3
pop
xchg
pop
ljmp
or
out
lods
mov
ds
jecxz
mov
jnp
sbb
mov
jbe
lret
dec
in
sti
and
fcoml
or
ds
push
xchg
or
mov
cmpsl
sbb
cmp
or
xchg
mov
movb
test
fisttps
mov
popf
lds
cmc
xchg
inc
dec
hlt
int
xchg
mov
xchg
fisubrl
add
movsl
popa
mov
fnsave
lea
aas
push
std
pop
fidivs
cmp
subl
sub
jge
popa
es
jno
insl
faddl
push
test
flds
enter
aaa
mov
inc
arpl
and
xor
jb
sahf
jl
add
cmpsb
lock
sbb
pop
or
movsl
pop
repnz
jmp
sbb
scas
ljmp
dec
or
push
pop
pop
pop
xchg
mov
aas
mov
push
cmp
or
xchg
mov
cmp
shll
push
rolb
out
ret
pop
les
pusha
sahf
ds
pop
xchg
push
sahf
cmp
fst
in
rorl
lcall
call
ja
fisttps
xor
or
and
lods
xor
mov
pop
aad
test
xor
add
adc
push
inc
insl
xchg
inc
lcall
lea
ss
js
js
popf
outsb
push
sub
push
hlt
or
pop
icebp
fwait
icebp
or
dec
sbb
jmp
inc
mov
jb
jg
lcall
mov
fisttpll
mov
adc
sbb
mov
fsubrl
jmp
cmp
repnz
add
jnp
pop
adc
lods
mov
ret
cmp
and
mov
cmp
xchg
rorl
inc
adc
orl
aam
cmp
out
mov
es
icebp
call
data16
push
ficomps
jne
sbb
xor
or
mov
pop
inc
lcall
mov
frstor
addr16
add
mov
jmp
inc
pop
gs
adc
mov
ds
stos
loopne
mov
pop
inc
pop
lcall
lret
xor
and
aaa
movsl
dec
push
and
cmp
mov
andl
and
xchg
mov
test
xor
aam
aaa
iret
xlat
push
xor
sbb
fidivs
push
scas
xchg
sub
jp
incb
addr16
int
stc
or
out
xor
bound
sbb
pop
pop
sti
cmp
jns
stos
inc
aaa
shlb
cmp
repnz
sbb
sti
vmread
out
mov
loopne
jge
adc
hlt
faddl
leave
lock
cmp
ds
out
sub
loopne
addps
sub
cmc
fimull
sbb
pop
sub
or
in
dec
inc
sub
xor
xor
clc
sub
pop
lahf
pop
mov
das
mov
jmp
into
fsubrp
cmp
pop
or
inc
int
adc
cmp
dec
mov
mov
jmp
cmpsl
push
in
xchg
mov
faddl
adc
xchg
push
jb
push
inc
fwait
rolb
mov
sub
mov
pop
push
push
fwait
mov
mov
mov
push
sti
dec
stos
sbb
mov
fbld
or
sbb
jnp
sub
sub
out
loopne
mov
cmp
inc
mov
ds
jecxz
popa
mov
fstpl
sbb
add
lcall
enter
inc
push
mov
mov
aaa
inc
pop
cmpsl
mov
int
cmp
je
cmp
mov
ljmp
fs
xor
adc
fsubs
popa
xchg
add
mov
in
cmc
jge
lcall
shrb
and
xchg
xchg
jns
cld
sbb
loop
data16
mov
icebp
leave
mov
in
mull
out
das
aas
sbb
xchg
jge
mov
ret
int
call
push
jg
jmp
ret
dec
and
fdivrs
add
and
dec
fisubl
std
fimuls
arpl
mov
inc
xchg
data16
sub
cmp
nop
cmp
stc
movsb
jl
cmp
cwtl
push
das
xchg
inc
loop
mov
xchg
lea
insl
xchg
adc
sub
dec
lcall
sti
xchg
cmc
mov
xchg
ret
popf
out
xor
fisttps
jns
jl,pn
inc
cwtl
mov
or
jne
pop
mov
bound
cwtl
mov
mov
sahf
fcoms
in
cmp
pop
testb
mov
jb
jecxz
sbb
mov
out
faddl
xchg
enter
pushf
andl
push
cmpl
ffreep
aaa
ds
pop
clc
lcall
xor
mov
mov
js
jmp
jno
pop
out
fwait
pusha
ds
mov
fdivrl
lock
sub
and
lods
out
push
or
test
popf
mov
cmc
jbe
in
mov
push
mov
mov
inc
mov
jnp
inc
pop
jns
xchg
popf
subb
mov
pusha
stc
aaa
jb
gs
sbb
push
push
sbb
ja
mov
pop
into
or
dec
dec
into
sahf
in
fidivrs
aad
hlt
sbb
xchg
inc
add
test
jmp
aas
cmp
out
test
jb
shll
xor
sti
push
jp
in
xchg
inc
cmp
or
mov
cmp
push
lea
aaa
mov
jecxz
push
mov
imul
out
sbb
inc
or
inc
inc
loope
or
leave
lcall
aam
fisttpll
mov
jge,pt
adc
cmpsb
cmc
push
jle
loope
adc
pop
lcall
aas
lret
or
jo
inc
int3
dec
or
adc
add
pop
jno
arpl
dec
dec
test
std
pop
cmp
sahf
lock
dec
sarl
push
rcrb
pusha
push
movsl
icebp
cmp
xchg
shl
fsub
bound
xorl
loop
cld
enter
pop
mov
pop
outsl
mov
iret
or
out
pop
je
jb
mov
out
adc
sarl
pop
ljmp
sbb
sub
fcmovnb
dec
ds
fimull
jo
aad
mov
adc
inc
jb
cmp
mov
sbbb
and
dec
push
pop
sbb
lcall
les
push
adc
xor
pusha
push
fiaddl
mov
cwtl
inc
aas
loope
xlat
cs
inc
sahf
jno
out
mov
cmp
cmp
dec
xor
and
and
aaa
lock
xor
mov
adc
xchg
mov
loopne
adc
mov
aaa
jg
into
push
iret
sub
fadds
aaa
cs
hlt
cmp
stc
xorb
sbb
inc
imul
lea
or
mov
sbb
inc
loope
stos
mov
repnz
dec
pop
xchg
adc
or
dec
lods
inc
fcoms
pushf
jnp
mov
xor
mov
push
in
jbe
mov
add
jl
jle
cli
test
imul
popf
sahf
rol
cs
icebp
sbb
jnp
roll
fldcw
in
lcall
jns
jmp
dec
cmp
aas
mov
mov
lcall
js
fsubl
dec
mov
aas
bound
test
arpl
mov
cmp
ss
sbb
cs
or
loope
cmp
ja,pn
insl
ds
cltd
nop
sub
push
pop
push
rcr
andl
pop
dec
ret
pop
ja
clc
dec
jbe
jecxz
jl
or
pusha
or
mov
jns
dec
dec
repz
mov
push
jne
and
in
push
adc
pushf
push
cmpb
out
and
scas
addr16
add
fmulp
pop
add
dec
mov
xor
mov
jnp
sub
cmp
push
adc
shrl
ret
and
push
lcall
ss
jmp
mov
outsl
jp
insb
jns
std
pop
into
lcall
inc
aaa
mov
repnz
and
pop
fidivl
pop
mov
movsl
or
mov
test
ror
bound
add
inc
stos
fmul
mov
jecxz
inc
cli
mov
push
ja
fcoml
mov
aaa
inc
shrl
jecxz
adc
ret
popf
iret
iret
lock
sub
and
bound
lea
fdivs
jecxz
lds
ljmp
into
popf
fnstsw
iret
cmp
sub
sub
insb
push
aad
mov
in
dec
jno
add
xchg
jnp
aam
fwait
lret
jg
push
or
bound
mov
xchg
push
int
push
and
aaa
inc
cltd
dec
and
dec
push
pop
fcmovu
sbb
inc
in
sub
push
mov
mov
test
xchg
aas
inc
sub
out
lods
mov
and
mov
mov
inc
xor
in
shlb
ja
in
test
cmpsb
inc
mov
movsl
mov
push
fcompl
insl
jnp
loope
push
aaa
enter
mov
lahf
cmp
mov
add
xchg
pop
lret
xchg
lcall
mov
repnz
pop
ljmp
lret
push
ljmp
xlat
cmp
lea
inc
push
adc
lods
fmul
mov
inc
insl
sub
jl
sbb
xchg
daa
dec
push
mov
aaa
cli
popf
dec
insl
inc
push
popa
lcall
mov
out
mov
pmaxub
test
fistps
subl
daa
ds
clc
loopne
mov
push
cs
iret
xor
sbb
jae
ret
movsb
cmpsl
bswap
pop
fldl
cmp
mov
lcall
mov
loope
ficomps
lea
mov
ficomps
popa
jbe
cmp
ja
add
xor
test
pop
loopne
xor
lods
jb
jp
dec
sub
mov
fmul
jae
daa
out
sbb
sbb
mov
scas
jp
aaa
mov
popa
mov
mov
es
popf
fidivl
fwait
jns
cwtl
aas
push
add
bound
cltd
mov
mov
sbb
cld
cmp
jecxz
leave
into
scas
xchg
and
sahf
jge,pn
mov
je
add
push
loope
bound
mov
pop
aas
lea
pop
inc
jl
frstor
jle
push
pop
mov
pop
ds
cwtl
int
sbb
and
dec
add
mov
lock
jnp
xor
aaa
loopne
dec
addr16
popf
mov
int
inc
sti
scas
fdiv
cmp
or
test
pop
ds
enter
fstpl
shll
ljmp
subb
sbb
push
adc
add
mov
popf
dec
pop
out
in
repz
ficoml
cs
addl
lds
push
pop
inc
fdivs
dec
bound
aam
and
lcall
int3
jno
test
outsl
add
push
and
aas
sbb
push
outsl
mov
cmpsb
sbb
adc
lock
addr16
mov
push
mov
aad
enter
push
cs
or
adc
sub
cmp
in
sbb
add
cmc
xor
js
test
and
inc
pop
cmp
in
lods
sahf
mov
and
sti
fstpl
xlat
sub
incb
dec
lahf
and
call
sbb
nop
cmp
add
adc
inc
dec
or
into
mov
ffreep
jb
ds
mov
push
sahf
jno
ds
repz
out
aas
inc
lods
fstl
in
mov
jbe
inc
cmpsl
cmp
sbb
mov
outsl
lea
pop
dec
push
lcall
aam
fmull
jp
movsl
ds
lret
aaa
sbb
dec
push
push
xchg
rcl
test
or
fidivrs
arpl
mov
push
adc
xor
jnp
lods
mov
test
pop
inc
gs
sub
jne
jmp
cli
loop
aaa
jmp
mov
cmp
test
insl
xor
mov
and
sbb
xchg
repnz
loope
loope
js
stos
inc
and
pushf
fldt
xchg
imul
jnp
neg
test
and
cmp
mov
incl
mov
mov
jp
pushf
dec
fdivrp
cmp
mov
mov
sbb
lcall
lcall
xchg
dec
jno
or
es
aaa
hlt
mov
sub
xchg
inc
cwtl
cld
xor
sbb
scas
mov
mov
ret
xchg
xchg
popf
addb
ds
mov
mov
test
in
daa
cmp
pop
bound
push
and
js
or
and
test
aad
loop
mov
mov
dec
mov
in
jbe
into
xchg
test
aas
dec
pop
xchg
lret
outsb
fildll
xor
test
sub
testb
xor
cmp
add
mov
push
or
or
push
aad
or
cmp
rorl
add
sbb
xor
push
sbbl
inc
outsb
and
aaa
sarb
push
imul
fstl
xchg
loop
mov
cli
mov
sbb
sbb
in
lahf
xlat
xor
push
mov
out
xorb
sbb
inc
sti
fwait
cmp
jg
mov
push
sti
jg
xor
in
add
movsb
cs
push
jp,pt
sbb
sbb
fucom
insl
cmp
stos
inc
xorb
insb
pop
aad
aaa
sub
leave
jg
stc
or
faddl
dec
add
pop
mov
push
push
js
jle
jnp
mov
out
jbe
xor
adc
aam
out
jmp
add
inc
in
or
push
ds
sub
out
jns
cmp
lahf
add
push
andl
sbbb
imul
dec
testl
scas
dec
xlat
aad
cmp
sahf
push
cmp
push
inc
push
pop
cmp
cwtl
aaa
rorl
push
aas
sub
push
xchg
jmp
fsubr
ds
shrl
push
mov
cmpsl
fmulp
packssdw
push
movsl
jp
mov
push
lcall
and
jmp
fs
call
cmp
xor
and
insb
es
sbb
mov
cmp
inc
inc
inc
and
xor
scas
lods
in
jge
add
dec
test
push
insl
cwtl
jo
mov
xchg
add
mov
lret
push
cmp
jnp
cmpl
lock
sub
out
mov
cmp
xchg
nop
aas
sub
lcall
mov
fcoml
jns
adc
push
jbe
inc
adc
jne
aaa
adc
stos
hlt
movsb
mov
shll
dec
add
std
adc
std
add
es
lcall
sub
out
cmp
inc
fstl
and
and
jbe
mov
cs
mov
mov
and
std
mov
test
xchg
sbb
xchg
mov
push
stos
in
inc
imul
adc
dec
xor
mov
fcoml
add
inc
push
mov
ds
hlt
pushf
push
cltd
xor
push
push
or
or
dec
push
and
iret
and
mov
jg
dec
xor
psubq
fcoml
ds
mov
decb
mov
cmp
push
mov
inc
data16
lds
sub
rorl
scas
push
imull
out
pop
dec
mov
rcr
xchg
mov
aad
cmp
fldenv
in
aad
jle
pop
arpl
push
mov
mov
inc
inc
mov
jp
push
pop
push
frstor
xlat
mov
ds
dec
repnz
outsl
fistpll
mov
scas
dec
gs
inc
loope
and
xlat
jae
push
or
outsl
dec
push
mov
push
mov
push
pop
jae
test
and
in
mov
cmpsl
push
mov
cmp
repnz
loop
cmp
clc
bound
arpl
lcall
jno
neg
cmp
loopne
leave
into
lcall
test
fisttpll
sub
test
mov
ds
lock
mov
mov
repz
movhps
scas
cmp
in
aaa
mov
daa
mov
mov
and
cmpsl
mov
lret
adc
in
add
loope
sbb
xor
lahf
mov
mov
add
lea
mov
movd
je
js
push
push
push
pop
scas
xor
and
lock
ret
or
mov
mov
lds
xchg
cmp
fcoml
ds
dec
or
ret
push
xchg
inc
cmpsb
or
mov
mov
enter
cli
dec
jg
idivb
scas
insl
stc
stc
xor
pop
sahf
scas
pop
xchg
lods
inc
pop
push
xchg
cmpsb
mov
xchg
pushf
xchg
cmp
cld
rorb
or
mov
test
inc
fiaddl
cmp
mov
xor
jbe
ss
jg
cli
inc
sub
aaa
sti
icebp
jo
xor
testb
jbe
inc
scas
mov
or
ds
mov
mov
sub
mov
lcall
popa
call
add
mov
mov
mov
mov
adc
mov
cwtl
stc
roll
pop
mov
jns
push
jmp
pop
lahf
neg
xor
das
inc
lcall
push
fstps
imulb
into
xchg
loop
sahf
mov
insw
clc
jp
sahf
das
fwait
in
xchg
sbbb
cmp
jno
mov
xor
loopne
sahf
out
sub
xchg
out
clc
test
dec
ljmp
test
cli
and
popf
xchg
cmp
call
or
cmpsl
mov
push
fbstp
movsl
loopne
add
fistpll
pop
test
aaa
out
inc
dec
out
dec
imul
jne
pop
cmp
jno
dec
fnsave
push
ficompl
pop
stc
sbb
sbbb
add
popf
jmp
jb
sbb
add
xchg
out
lods
sarb
lcall
mov
std
add
push
enter
xchg
and
sbb
sbb
xor
push
movsl
cmp
dec
sub
ds
xlat
clc
jle
mov
pop
jmp
pop
subb
add
lcall
and
enter
repnz
jmp
cli
test
fldcw
sbb
xchg
fidivl
sub
pusha
sub
aam
sbb
pop
out
test
cmc
inc
lds
js
shl
loopne
sbb
and
cmp
cmp
xor
sahf
shrl
mov
fs
pop
stos
add
aas
aad
fwait
addr16
push
cmp
dec
pushf
dec
jb
rcrb
lcall
sbb
mov
add
scas
ret
ljmp
sbb
sti
bound
fidivs
dec
outsb
push
lcall
mov
xchg
mov
mov
mov
sahf
jg
or
sbb
mov
fs
lods
ja
jno
push
mov
callw
cmp
rcrl
movsl
cmpsb
iret
ret
loop,pt
adc
das
jmp
test
add
inc
xor
insl
jns
int3
cli
inc
xorb
lds
mov
outsb
and
fucom
jb,pn
outsl
pop
mov
pop
sbb
jge
sbb
aam
leave
aaa
pop
gs
test
lcall
jle
fucomp
icebp
scas
loop
jae
and
outsl
mov
aam
pop
push
pop
rorb
mov
in
popa
mov
loop
lcall
imul
sub
mov
das
ljmp
jecxz
xor
add
xchg
ds
or
jno
lcall
push
push
int3
fstpt
pop
aas
mov
adc
scas
pusha
movw
jns
mov
in
push
in
mov
xchg
dec
jle
add
addr16
mov
push
sbb
mov
push
out
ficompl
mov
mov
ficoms
jno
xor
push
mov
and
dec
popf
mov
scas
ret
pop
je
push
push
or
sub
mov
stos
mov
jnp
push
lock
fsub
adc
jl
fstps
dec
dec
pmaddwd
es
addl
add
addl
sbb
outsl
xchg
add
mov
loope
add
pop
unpckhps
pop
test
sbb
jae
das
scas
cs
sbb
call
jle
ja
mov
cmp
fstl
pmaxsw
mov
adc
scas
test
sub
in
xchg
fucomip
addr16
inc
inc
bound
push
mov
sbb
outsl
fidivrl
push
lcall
inc
lret
dec
psubd
dec
and
rcrl
popf
dec
enter
inc
or
pop
pause
ret
and
in
ljmp
bound
xor
scas
ds
jge
addb
or
sub
mov
ds
pop
jp
jno
sub
jae
int3
pop
addr16
mov
cmp
je
sbb
adc
fsubrs
jne
inc
mov
sub
insb
subb
sahf
frstor
jbe
ds
inc
push
inc
adc
cmpsb
js
movsb
in
ss
iret
add
inc
gs
rorb
pop
mov
mov
iret
xor
push
lock
mov
mov
lea
loopne
jge
xchg
push
add
add
mov
mov
add
pop
out
imull
cli
mov
lods
in
mov
adc
ljmp
mov
add
loop
mov
jnp
jmp
sahf
pop
mov
jecxz
pop
sbb
mov
xor
out
nop
insb
push
push
lret
test
movsl
add
inc
xchg
pop
adc
or
test
fsubs
lods
loope
ss
adc
and
data16
or
outsl
lcall
pushf
faddl
xchg
push
ds
ja
dec
inc
test
jge,pt
scas
xor
imul
jp
jae
mov
jno
setae
rcr
shlb
sub
aad
test
mov
lea
mov
inc
push
adc
insb
dec
cmpsb
idivl
jne
push
dec
or
mov
mov
mov
sub
pop
inc
popaw
mov
mov
lcall
bound
or
add
add
pop
repz
ret
dec
stos
mov
sbb
mov
cmp
inc
sbb
dec
xor
dec
jb
gs
je
jo
mov
fdivrs
inc
sbb
mov
and
push
sub
dec
mov
ds
push
arpl
in
or
mov
xlat
std
popf
fisubrs
add
fdivl
in
push
insb
and
dec
mov
ds
ret
and
mov
hlt
int3
add
cld
outsl
xchg
leave
test
adc
in
jae
pop
mov
subl
push
out
test
int
push
into
int
cmp
or
adc
mov
lahf
cmp
xchg
jno
sub
subl
pop
sub
add
movsl
fcmovu
pop
fistl
pop
add
push
lds
rorl
jb
mov
mov
insb
mov
jb
jo
fcompl
out
ss
cmp
ficoml
jg
inc
fisttpll
cwtl
or
dec
inc
mov
push
jb
fnsave
stc
repnz
inc
lret
dec
sbb
inc
in
jmp
pop
pop
jle,pt
loopne,pt
rcrb
scas
mov
jmp
stc
and
lds
rolb
dec
mov
mov
orl
fdivrs
lahf
mov
xor
bnd
fst
mov
faddl
cmp
pop
push
sahf
xchg
xor
sbb
jno
enter
jp
ret
call
std
aad
pop
fnstenv
loopne
pop
lret
xchg
scas
lret
jl
or
jo
inc
fstps
jne
scas
iret
ljmp
mov
pop
inc
cmpsb
sbb
iret
jle
push
cltd
add
push
dec
mov
loop
push
dec
inc
hlt
repz
add
loope
push
sbb
lret
movsl
clc
jbe
in
push
xchg
je
adc
lea
inc
cwtl
rcrb
pop
xor
pop
je
lock
add
inc
aam
icebp
mov
clc
out
in
mov
pushf
pushf
in
inc
pop
pushf
xchg
jge
adc
imul
and
aam
fdiv
mov
jne
and
jo
pop
sbb
frstor
pop
cmp
negl
dec
aad
aaa
nop
push
aas
jge
xchg
loope
rcrb
pop
test
xchg
mov
sbb
lcall
mov
mov
and
mov
cld
cli
mov
or
mov
and
xchg
pop
dec
aaa
dec
out
mov
mov
xchg
push
jnp
dec
dec
mov
test
inc
inc
pop
nop
stc
jg
sub
loopne
sti
ficompl
cmp
mov
insl
fisttps
lods
decl
ret
mov
dec
orb
dec
aaa
out
inc
push
jecxz
xchg
mov
xchg
lret
lcall
idivl
inc
inc
jmp
pop
push
fdivr
dec
cmpsb
cmp
sbb
cld
sti
lods
and
scas
cmp
ror
negl
and
push
cmpsl
and
mov
data16
pop
mov
cmp
and
mov
js
out
stos
xor
mov
andl
sbb
pop
push
pop
mov
call
push
lret
cmp
mov
xchg
and
cmp
ret
mov
xchg
dec
stc
cmp
mov
lcall
pusha
and
insb
in
lock
add
shlb
mov
sbb
jecxz
sbb
pop
mov
cmp
stos
mov
in
jae
aas
data16
dec
sbb
inc
in
mov
mov
xor
jo
mov
mov
pop
pop
push
ljmp
xchg
push
jle
js
add
daa
jb
lea
inc
add
and
hlt
int
test
lahf
pushf
lods
ds
leave
and
mov
es
cli
sub
mul
push
imul
jmp
mov
sbb
or
xchg
add
mov
fisttpll
jb
xchg
jl
add
jnp
mov
sbb
aaa
xor
and
and
lret
aaa
notl
icebp
lea
rclb
sbbb
push
and
dec
ja
in
mov
lcall
inc
mov
ljmp
fwait
pop
jbe
arpl
dec
aaa
mov
shl
inc
jg
ds
pop
ds
xor
push
push
add
movsl
mov
cmp
pop
xchg
push
mov
js
sbb
shlb
decb
bound
mov
lcall
mov
push
jecxz
cmp
ds
add
mov
mov
adc
adc
inc
cltd
xor
pop
mov
negl
es
bound
aad
pop
dec
xchg
pop
push
jns
iret
lahf
cs
cmpl
cmp
dec
and
ljmp
pop
pop
repnz
mov
inc
pop
daa
in
push
jl
xchg
inc
dec
ds
inc
pop
adc
fisttpll
je
or
insb
jge
daa
outsb
fisttpll
in
popf
push
jbe
inc
fnsave
add
fsubl
fwait
mov
aas
push
scas
in
out
mov
or
dec
insl
nop
aaa
jmp
subb
imul
xchg
fwait
aas
xor
pop
inc
loope
loope
pop
sbb
pop
es
cli
clc
push
scas
lahf
or
out
xor
push
push
jmp
sbb
push
add
push
and
stc
shlb
cmpsl
sbb
add
push
in
ds
aaa
aas
and
dec
lcall
and
jns
dec
or
scas
test
aas
pop
lret
mov
cmp
sti
mov
cli
cmp
repz
aaa
fildll
mov
add
mov
or
xor
push
xchg
mov
je
jle
ret
rcrb
inc
cmp
faddl
cmp
mov
pushw
push
cmpsb
clc
mov
orb
loop
cwtl
in
cmp
dec
loope
mov
cmp
dec
in
push
bound
shrb
xchg
sub
mov
dec
xchg
jg
push
test
sarb
pusha
pop
inc
mov
fists
pop
cli
mov
aaa
in
nop
jno
xchg
insb
jl
pop
mov
xor
lods
xlat
out
jg
or
iret
mov
ss
jns
shlb
jnp
sbb
push
jnp
dec
daa
movsl
loopne
push
xchg
jns
mov
xor
loope
sbb
inc
pop
les
dec
sbb
inc
lds
inc
rcr
ret
mov
xchg
or
pop
mov
xchg
ret
or
push
rcr
adc
mov
or
repz
xor
dec
in
aaa
sbb
dec
xchg
movsl
adc
mov
pop
and
aaa
dec
xchg
adc
sub
repnz
add
jmp
fsubp
enter
push
fsubl
dec
popf
push
push
mov
in
sbb
repz
sub
repnz
int
cli
push
mov
add
test
test
jo
in
mov
mov
andl
jb
fsubl
fcompl
jle
fldt
mov
inc
mov
mov
cmpsb
cmp
shlb
pop
pop
push
or
scas
inc
lcall
aas
lret
js
mov
jb
fstpl
fs
mov
mov
fdivl
das
jo
fstps
popa
sbbl
push
popf
mov
sbb
jbe
cs
mov
ljmp
cld
daa
test
and
rolb
lret
rcr
sahf
ret
nop
push
mov
add
icebp
shlb
aaa
cmovge
mov
xor
lcall
dec
xor
rcll
push
add
cmp
inc
ficompl
les
aaa
imul
dec
lcall
mov
jp
int3
lahf
fstp
jecxz
int3
dec
xor
jecxz
mov
scas
or
aaa
push
mov
mov
sahf
jl
lcall
xlat
jl
jo
repz
adc
lock
dec
cwtl
ffree
in
and
or
sub
aaa
xchg
in
mov
xor
aaa
decb
stc
rcrl
mov
pop
mov
call
mov
addr16
inc
sbbb
fiadds
icebp
mov
xchg
cmp
jle
mov
bound
ret
mov
add
fwait
repz
pushl
mov
push
add
cmp
xchg
lahf
cltd
mov
pop
dec
cwtl
dec
jbe
subb
and
dec
int3
adc
jl
icebp
cmp
sbb
movl
or
out
push
ss
pop
lret
mov
push
jecxz
ds
nop
dec
xchg
aaa
sbb
mov
aas
cwtl
jns
add
push
or
or
xchg
ds
dec
rcrl
pop
in
fiadds
push
into
cli
in
xor
aaa
fstpl
sub
lcall
mov
fmul
lods
test
xor
stos
dec
aam
ds
xor
dec
cld
testb
xlat
mov
dec
ret
fists
cmc
aaa
loopne,pn
push
rcl
int
iret
ja
xchg
stos
dec
inc
adc
es
pop
push
mov
sub
sbb
mov
inc
aaa
aad
dec
stos
adc
xor
lcall
jg
lock
xor
repz
pop
cmpsb
sti
jmp
out
push
jp
out
mov
pop
xchg
dec
sbb
sbb
aaa
mov
pop
inc
outsb
sbb
and
mov
or
mov
andb
and
cmp
push
dec
xor
inc
imul
sub
ds
inc
mov
fst
fcoml
pop
sub
pushf
push
mov
adc
data16
dec
imul
cmpsb
pop
cli
mov
aam
cmpsl
jle
shlb
inc
push
cmp
adc
jecxz
dec
je
int3
ds
lret
push
mov
je
sbb
dec
xchg
mov
adc
cwtl
rcl
sub
push
inc
iret
outsb
sbbl
cmpsb
aaa
inc
into
and
cs
jp
ds
xchg
mov
pop
aaa
cmp
jle
pusha
lcall
ja
push
adc
lret
leave
clc
pop
pop
lahf
lods
scas
ds
pop
sarb
inc
mov
push
std
fmull
inc
mov
ds
test
leave
fstpl
or
or
push
inc
popf
push
mov
jp
push
fwait
push
rorl
arpl
jae
pop
mov
scas
or
gs
pop
test
filds
popf
push
repnz
jb
out
jae
fisttpll
mov
fdiv
jbe
mov
or
lcall
dec
and
in
je
mov
lcall
mov
cmp
xchg
mov
pop
adc
stos
insb
fstl
lods
sti
mov
mov
mov
dec
dec
andl
cmp
cwtl
insl
lods
xor
test
mov
inc
push
int
jp
pop
add
jb
inc
jle
std
ja
outsb
pusha
jno
xorl
rorl
or
lods
sbb
push
test
jle
mov
mov
pushf
inc
sub
cmp
aad
cli
inc
pop
ret
dec
lods
jp
xchg
addl
outsl
xor
push
xor
mov
push
or
xchg
mov
enter
pop
sbb
inc
icebp
lcall
inc
sbb
pop
push
sbb
sbb
xchg
cmpsl
mov
mov
cmp
aas
bound
lods
scas
jp
push
push
ror
pop
inc
out
sub
cltd
addr16
xor
aas
jne
dec
cmp
jp
test
mov
jg
out
pop
pusha
into
in
sbb
mov
ss
inc
push
aas
sbb
inc
pop
lea
outsb
dec
jbe
fs
pop
xchg
dec
test
daa
jb
insb
inc
inc
push
mov
mov
mov
xor
xchg
inc
pop
popf
addl
imul
xor
fnstcw
jo
cmp
outsb
cld
push
iret
aaa
adc
aam
scas
lcall
mov
adc
xchg
sbb
sti
xchg
mov
push
stos
mov
stc
mov
jle
pop
clc
push
and
inc
aaa
insl
push
mov
test
stos
inc
xchg
scas
dec
hlt
adc
lret
sub
xor
lahf
cmp
hlt
or
xchg
out
loopne
stos
cs
in
xchg
cmp
cs
std
cs
pop
xchg
call
xlat
cwtl
xor
xchg
outsl
repz
jl
sbb
mov
dec
add
fimull
push
ja
mov
js
push
mov
jo
xorb
fisubrs
pop
shll
std
mov
ds
cmpsb
daa
sub
and
or
ds
inc
cmp
ds
lret
movb
aaa
push
inc
cs
mov
sbb
jnp
fimuls
sbb
mov
cmp
pushf
es
or
das
ds
dec
add
ds
pop
outsl
jl
jns
cmpsl
sbb
fstpl
jae
push
rcrl
inc
push
adc
sub
xor
scas
ret
pop
scas
shr
scas
call
outsl
mov
in
in
cmpsl
push
into
push
push
lcall
jmp
jnp
xchg
scas
lcall
pop
lret
aaa
outsb
cmp
adc
pop
sarl
sbb
mov
loopne
sti
jae
push
pushf
mov
xchg
xchg
and
jle
cmp
and
pop
call
vpcmpeqd
push
sahf
rclb
int3
ficomps
and
inc
mov
cli
ljmp
xchg
adc
jnp
int3
jo
xor
pop
mov
push
imul
nop
dec
xchg
pop
sahf
xlat
insb
aam
imull
adc
and
inc
lods
mov
into
inc
mov
data16
lcall
inc
mov
add
stos
fiaddl
push
ret
push
imul
and
ret
pushf
hlt
push
test
xchg
pop
aas
dec
xlat
arpl
cmp
shl
fbld
cmp
arpl
mov
std
daa
sbb
ds
mov
lcall
inc
mov
dec
mov
pushf
push
leave
xchg
mov
sub
mov
aaa
inc
adc
cmp
scas
cmpsl
popf
jns
inc
shll
xorl
cs
inc
iret
push
push
sub
xchg
or
movb
shlb
dec
xor
push
cmp
int
flds
jg
fs
aaa
push
fsubs
fcompl
pop
lods
mov
nop
aaa
mov
pop
cld
cs
ds
jl
xchg
scas
sub
jmp
arpl
inc
add
inc
out
and
aaa
mov
shll
rcll
dec
pop
repnz
and
pop
scas
pushf
sbbl
pop
and
mov
ljmp
mov
jp
sub
cld
jge
rorb
push
mov
leave
loop
xor
mov
ds
icebp
inc
testb
scas
cmp
repnz
inc
and
mov
and
mov
movsl
mov
mov
push
test
dec
cmpsb
ljmp
pushf
shrl
or
sub
sbb
push
jo
jmp
mov
jge
stos
sbb
lcall
cmp
les
cmp
mov
mov
add
movsb
mov
xlat
ds
push
pop
ret
js
cmp
jo
pop
outsl
push
xchg
icebp
lahf
ds
cmovg
jnp
adc
and
mov
mov
imul
xchg
pop
pop
cmpsl
aam
std
scas
inc
mov
leave
ds
out
aas
push
call
add
sbb
out
scas
pop
popf
adc
mov
fcoms
cmp
xlat
lahf
ja
push
and
jge
jb
sub
push
shlb
pushf
outsl
inc
pop
adc
std
lcall
std
sbb
or
ds
stc
and
stos
das
inc
adc
repz
popa
test
push
std
inc
in
dec
js
divl
push
data16
mov
mov
add
ds
or
mov
leave
push
push
into
add
sub
cmp
aaa
mov
xchg
ds
inc
jle
lahf
js
test
mov
xchg
lahf
dec
inc
mov
pop
jp
pop
cmp
and
frstor
repz
bound
dec
xchg
push
aaa
push
adc
and
jae
testl
mov
fnsave
inc
xchg
clc
sbb
pop
dec
ja
mov
lods
repz
das
ret
sarb
data16
rcrl
movsb
dec
inc
test
test
sbb
jl
mov
scas
ror
pop
mov
stc
sbb
jp
push
ss
lcall
pop
movsl
fdivrl
out
jbe
sbb
push
add
inc
dec
mov
xor
inc
cltd
popf
jg
dec
jbe
punpcklbw
fcmovb
jl
js
dec
cmp
push
fdivr
pop
xchg
fldt
ljmp
sub
out
push
std
add
xor
ds
cmp
or
scas
pop
mov
icebp
add
lds
aam
jbe
loopne
or
dec
inc
clc
jno
adc
xchg
loopne
pop
push
or
jge
push
xchg
jno,pt
stos
mov
punpckhbw
pop
negb
dec
daa
aad
inc
sub
aaa
loope
lods
inc
clc
outsb
pop
stos
mov
loope
dec
mov
fisttpl
stos
lret
rorb
dec
jmp
pop
into
neg
lea
pop
lret
ds
cmpsb
fists
movsb
cs
aaa
hlt
adc
scas
xor
jnp
dec
test
cmp
idivb
mov
scas
daa
mov
push
mov
mov
aad
repz
xchg
adc
enter
dec
cmp
pop
push
add
or
lds
loop
aaa
test
mov
ret
pop
pop
scas
out
dec
cmpsl
imul
pop
xchg
enter
pop
pop
push
jp
cmc
scas
xor
shlb
push
outsb
ror
push
cs
jmp
loop
ss
pop
mov
jle
pop
or
pusha
bound
and
cmpsl
xchg
mov
out
cltd
push
mov
pop
dec
fdivrl
in
xor
in
stc
jae
enter
mov
lock
pop
push
js
lret
mov
jb
fucomi
scas
mov
movsl
or
movsl
jns
mov
cmp
cld
sub
call
aas
dec
out
mov
and
arpl
adc
lcall
mov
clc
aas
ds
sbb
dec
and
pop
adc
shll
cmp
push
lahf
aas
dec
ljmp
mov
sbb
dec
jecxz
dec
ja
rolb
das
jae
ss
fcompl
sbb
inc
scas
idivb
add
out
cmp
sbb
xchg
imul
push
cltd
mov
pop
pop
push
hlt
test
mov
pop
add
fcmovnu
les
cmc
xchg
or
mov
cmpsb
rcl
mov
les
out
inc
mov
in
fs
dec
fisttpll
roll
addr16
pop
cmp
data16
fdivl
push
in
data16
js
jo
xlat
aam
mov
cli
adc
pop
gs
int
sti
hlt
mov
es
out
cmpsl
rcll
adc
cmp
cmp
repz
pop
cmovae
mov
aas
mov
lcall
scas
mull
cmp
dec
inc
sahf
pop
aaa
faddl
cltd
das
sub
cmp
add
gs
xor
stc
call
loope
inc
clc
pop
out
cmc
sahf
daa
ds
push
call
jne
pop
mov
dec
clc
pusha
mov
js
cmpsl
aaa
dec
int
lods
xor
mov
clc
pop
cmpsb
aaa
jp
stc
jbe
jg
dec
mov
inc
cld
js
lods
and
sub
xor
push
pop
cmp
repnz
gs
mov
aaa
cmp
cmpsl
outsb
popf
in
lcall
int3
enter
and
mov
cmpsl
dec
enter
test
xor
mov
fisubrs
push
inc
test
pop
push
mov
iret
aaa
jg
dec
push
int3
push
int
lcall
adcl
push
xchg
xor
fnsetpm(287
mov
loope
mov
adc
std
gs
push
xchg
and
ds
inc
cmc
inc
mov
out
aaa
dec
sub
mov
roll
jmp
dec
outsl
xchg
jnp
push
icebp
cli
adc
insl
push
aas
pop
push
addr16
mov
repnz
pop
push
outsb
push
or
ds
cmp
es
ljmp
mov
scas
pop
frstor
pop
xor
jp
mov
pop
mov
sbb
dec
insb
ss
aaa
daa
mov
das
leave
fistpll
mov
cmc
in
pusha
in
popa
scas
sbb
mov
push
pop
cmp
mov
jbe
cmpsl
lcall
sbb
dec
inc
stc
lret
xchg
jb
ds
mov
pushf
push
mov
cmp
aas
cmc
mov
cmpsl
pop
xchg
clc
add
xorl
sub
jb
shrb
lcall
jae
faddl
sbb
ds
add
aaa
aas
into
dec
fstpl
lcall
mov
cld
mov
insb
sbb
shrb
mov
psrlq
aaa
shrb
daa
mov
lcall
sbb
outsb
aaa
cmp
fldenv
pop
shll
mov
ds
pop
push
iret
push
sbb
inc
xchg
mov
in
cmp
jg
xchg
xor
test
shl
nop
jo
aam
and
ret
pop
cmp
mov
fidivs
ds
push
jp
outsl
cli
loope
cmp
cmc
lcall
mov
xchg
into
movsb
mov
mov
cmp
mov
mov
inc
je
fwait
jne
roll
xor
popf
or
xor
loopne
mov
cmp
sub
cmp
mov
data16
aaa
mov
fiadds
neg
out
sub
cmp
xor
push
inc
jnp
jmp
rolb
pop
ds
and
je
clc
lods
int3
aaa
sub
out
cltd
or
adc
popf
adc
sbb
adc
ficoms
jmp
js
sub
push
add
xchg
mov
fisttpll
sbb
inc
mov
jl
mov
aaa
dec
and
cli
in
mov
dec
std
fsubrl
inc
add
rorb
dec
sub
add
stos
ja
xchg
push
rcll
cmp
pushf
push
fidivrl
jo
test
outsl
test
pushf
jle
jge
sbb
inc
test
stos
xchg
lcall
jne
push
andb
in
stc
xor
or
push
push
cmp
fdivl
mov
imul
arpl
push
and
fisttpll
sarb
sub
push
dec
aas
lods
in
adc
mov
xor
scas
xchg
cmpsl
mov
popa
lcall
push
mov
jmp
fwait
push
mov
mov
fdivs
shll
mov
push
and
xor
adc
outsb
sbb
inc
roll
inc
xchg
popf
pop
outsb
mov
fsubp
jp
fsubs
mov
push
cli
push
add
mov
inc
ds
shrl
daa
xorb
mov
fmul
sbb
fdiv
fwait
dec
out
jge
jbe
jle,pt
lds
cmpsl
lds
or
hlt
adc
jp
ret
int
inc
es
add
out
addr16
add
sub
aaa
lret
in
mov
lcall
push
sub
push
fisubrl
fsts
xchg
jnp
ja
jle
cmp
scas
es
or
sub
bound
lcall
cmp
mov
pusha
cmp
dec
cli
mov
push
or
popf
cmpsb
sbb
clc
outsl
mov
lret
dec
inc
push
push
pop
or
cmp
cltd
hlt
mov
pop
xlat
pop
clc
pop
sbbb
push
push
sub
flds
sbb
adc
popa
out
mov
dec
mov
in
inc
mov
js
in
jecxz
cmp
stc
aad
and
jmp
mov
inc
mov
hlt
fdivrl
xor
cmc
call
shll
hlt
pop
or
pop
xchg
or
jo
ja
leave
xor
jae
or
jmp
ret
ds
ds
ljmp
in
jmp
std
sbb
aas
ljmp
sub
fmull
xchg
loop
inc
fidivs
fcoms
out
scas
dec
jno
xor
pop
pop
aad
mov
lcall
jns
hlt
jnp
sbb
sbb
jg
dec
xor
add
xchg
mov
out
cmp
cmp
arpl
adc
incl
adc
add
je
inc
xor
sbb
stc
and
fwait
daa
insb
push
fwait
dec
inc
mov
into
aad
lcall
inc
gs
push
cmpsb
inc
jb
mov
cmpsl
pop
cltd
clc
fistps
push
xchg
inc
in
fstpt
mov
inc
daa
popf
sbb
jbe
inc
fstpl
repz
fs
fisttpl
loopne
mov
push
push
pushf
fcompl
loop
lcall
fiaddl
inc
sbb
pop
jo
mov
xchg
push
pcmpeqd
dec
sub
dec
repnz
or
std
mov
cmpsb
stc
test
fsubrs
das
out
subl
dec
aam
pop
mov
popa
jae
icebp
jns
mov
mov
jle
sub
int
sub
je
lcall
jp
fnsave
or
je
mov
mov
mov
iret
bound
bound
loope,pt
jne
jno
arpl
jno
inc
inc
adc
in
pop
bound
lcall
insl
fidivrl
and
add
pop
add
or
pop
into
ret
sarl
in
pushf
shlb
mov
repz
jmp
inc
and
jo
frstor
fisttpl
pop
inc
lcall
adc
mov
stos
in
inc
xor
mov
in
loopne
stos
leave
add
andb
out
mov
bswap
out
dec
pop
leave
ficomps
cmpsl
inc
inc
out
xchg
fisubl
fs
fsubs
outsl
lcall
mov
es
fxch
mov
repz
xor
push
je
push
sarb
mov
and
pop
mov
aas
inc
inc
fistps
call
stc
mov
aas
fstpl
pop
popf
clc
sti
xchg
xchg
inc
stos
and
movsl
mov
mov
cmp
popf
cli
cmpsl
aaa
mov
inc
inc
mov
addr16
mov
aad
sub
data16
hlt
cld
test
add
aas
mov
stc
and
aas
cld
mov
ljmp
mov
push
loopne
add
cmc
inc
leave
jb
xchg
movsb
jp
dec
inc
pusha
fnstsw
daa
push
lcall
and
hlt
stc
fwait
xor
leave
ds
jge
shlb
pop
pusha
cmp
fwait
cmp
xor
xlat
xchg
mov
adc
xor
cmp
fcompl
xor
stc
pop
adc
jl
lcall
sti
push
loopne
jl
dec
inc
repz
fscale
aaa
sti
test
sub
rcll
mov
jle
dec
dec
cmp
push
fwait
incl
sub
int
cmpsb
dec
xchg
ljmp
fidivl
pop
mov
pop
push
ds
jns
sub
syscall
jbe
push
push
pop
xorb
out
xor
mov
xchg
nop
lcall
push
and
pop
mov
jnp
mov
lahf
in
adc
faddl
mov
mov
xchg
cmp
in
lahf
adcl
or
dec
stos
push
sbb
mov
into
sub
shlb
aas
and
dec
daa
jno
cld
push
daa
dec
fidivrs
mov
fwait
ret
sbb
dec
aaa
dec
mov
in
sbb
pushf
xor
push
xor
mov
movb
mov
mov
aad
out
stos
push
jnp
xchg
add
movsb
das
aam
mov
int
mov
jmp
fiadds
xchg
add
data16
push
sbb
int
push
mov
push
dec
test
cs
push
inc
jb
jl
xor
xor
pusha
std
pushf
push
cmp
out
mov
fnsave
cmp
sti
nop
test
int
xchg
xchg
call
fldl
popf
lahf
ficompl
mov
lea
movsl
xor
fidivrl
fidivs
pop
in
lahf
push
add
inc
inc
fistpl
adc
fidivs
std
out
mov
mov
aas
mov
add
loope
sbbb
dec
mov
hlt
decb
xor
or
push
pop
subb
mov
xchg
cs
shlb
pop
ds
aam
mov
lcall
xor
rclb
mov
and
clc
iret
ljmp
add
push
xchg
ds
push
dec
and
jl
cmp
and
lret
lods
mov
jb
jns
dec
mov
insb
pusha
pop
int3
call
fnstenv
cmp
jo
xor
push
ja
push
cmc
add
mov
pop
pop
dec
mov
jo
cmp
out
filds
sbb
ret
dec
xabort
push
lcall
stc
daa
loopne
xor
aam
out
lea
lcall
ret
imul
int3
lcall
cmp
into
test
vmwrite
lods
shl
pusha
pusha
adc
jmp
daa
pop
rol
ljmp
lods
movsl
pop
fwait
enter
mov
lds
popf
sarb
sbb
cmp
jle
aas
movsb
addr16
and
mov
lahf
lcall
in
fnsave
adc
scas
inc
lcall
mov
rolb
or
ss
sub
ds
sarl
out
out
jge
add
and
cli
out
dec
into
ds
sbb
cmp
cmp
push
sahf
cmp
es
xor
andl
aas
stos
fs
dec
aam
sbb
arpl
outsl
incb
in
cmp
jno
adc
pushf
adc
pop
clc
popa
or
inc
pop
out
out
xchg
pop
test
scas
das
jnp
mov
aaa
ds
push
push
push
mov
cmp
dec
outsb
and
inc
call
addr16
dec
aaa
les
test
inc
jb
call
and
aaa
adc
add
icebp
jg
pushf
mov
xchg
add
pop
mov
into
sbb
pop
aaa
sti
jne
jmp
cli
sub
jmp
sub
mov
xchg
std
lcall
leave
xor
lcall
pop
fsubl
or
ds
cld
mov
cmp
ret
push
or
jp
and
in
loop
lea
cmp
cmc
inc
pop
pop
fsubr
xor
popf
adc
mov
adc
fcoml
pop
xchg
scas
cmp
aam
out
lods
out
mov
stos
inc
sub
xor
popa
outsl
data16
ds
mov
sbb
sbb
cmp
sub
in
les
jmp
or
orb
js
or
sub
cmp
fwait
pop
gs
jae
loopne
enter
repz
inc
push
out
sbb
cmp
jns
xor
subl
mov
cmc
pushf
aaa
mov
gs
addr16
int3
testb
pop
arpl
sbb
push
jle
stos
jb
stc
mov
sahf
push
fcompl
inc
int3
sub
cmp
and
jmp
movsb
mov
inc
and
in
cli
mov
in
push
je
jbe
iret
and
push
pop
cltd
inc
push
sub
cld
jb
push
add
push
mov
jge
out
xor
iret
aaa
sti
leave
lret
pusha
sub
sbb
sbb
jl
jb
stos
or
test
or
ds
inc
inc
cmp
test
dec
mov
lcall
loopne
ficomps
pop
mov
dec
push
push
xor
ja
dec
push
aaa
std
dec
mov
mov
sub
cmpsl
mov
xchg
sti
adc
aad
jp
jecxz
ffree
dec
fisubrl
fstpl
add
pop
xchg
fnstsw
pop
mov
fcompl
jbe
jge
loopne
cwtl
addr16
cmp
push
loop
mov
lods
inc
push
bound
in
cwtl
notl
xchg
sahf
fwait
cld
dec
push
push
push
cmpsb
inc
mov
adc
ret
pop
jle
enter
mov
and
mov
std
shlb
sub
sahf
jo
imul
mov
jge
lret
popf
inc
mov
jb
pop
ficoms
sti
inc
cmpsb
mov
movsb
sub
and
fsubrs
clc
movsl
add
lahf
inc
hlt
and
xchg
mov
leave
popf
imul
and
or
lcall
xchg
mov
scas
cmp
adcl
mov
xchg
in
push
call
mov
jl
mov
out
pop
in
unpcklps
shl
addr16
xchg
sahf
dec
fnstsw
cmp
sti
pop
cmp
test
ret
pushf
push
inc
test
cmp
dec
scas
repnz
aaa
lea
aaa
mov
push
push
lcall
dec
out
das
lods
pusha
or
inc
mov
lcall
movsb
in
cld
sbb
push
inc
andb
inc
xchg
clc
dec
into
add
inc
out
push
bound
xchg
sub
pop
adc
lods
aas
xchg
push
shlb
dec
mov
jg
push
jo
dec
call
sbb
test
inc
inc
mov
loope,pt
jnp
fs
lds
push
jge
pop
push
cmp
pop
fadds
mov
mov
aaa
outsb
cmp
repz
xchg
lcall
cmp
inc
ficoml
ds
int3
push
jge
lods
xor
mov
or
push
and
cmp
jne
sbb
js
loop
repnz
ds
iret
in
aaa
fisubrl
mov
loope
outsb
shll
shr
jecxz
sbb
fisubl
xchg
jl
insl
out
scas
popf
dec
jl
pusha
test
mov
test
aaa
or
inc
pminsw
sbbb
push
fistpl
fisubrs
lret
inc
and
mov
mov
mov
int
sub
fcoml
mov
cld
pop
mov
mov
addr16
ljmp
jg
call
or
sbb
into
and
jecxz
or
shlb
lahf
xor
push
test
adc
rcrb
fimull
aas
xor
iret
sub
dec
shlb
repnz
lahf
cmc
push
jne
movsl
sub
fldl
xchg
cmp
fistl
dec
xchg
js
jns
sub
jmp
sub
lcall
test
or
mov
pop
leave
pop
inc
ja
andb
movsb
leave
sub
loop
push
inc
sub
or
mov
add
aam
sub
sbbl
scas
mov
cmp
ja
cmp
jp
mov
icebp
movsl
xchg
jo
fs
out
adc
in
mov
lcall
add
loopne
mov
pop
xlat
jp
sbb
stc
pusha
push
les
mov
and
fiadds
xchg
loopne,pn
mov
or
lea
jmp
jg
mov
lods
or
inc
repz
sbbl
mov
mov
sbb
mov
mov
sub
pop
mov
mov
loope
dec
xchg
decb
inc
ss
sbb
rolb
jb
aam
xor
lret
sbb
pop
out
xchg
cmp
pusha
push
imul
inc
xor
mov
mov
xorb
ja
cmp
stos
dec
xor
cmpsb
pop
jle
xor
mov
add
sub
call
sub
mov
shl
mov
lods
push
loopne
fildll
movl
aad
add
cmc
in
je
cmp
dec
repnz
std
adc
loope
xchg
clc
jnp
fs
xchg
fsubl
shlb
push
lcall
lea
lock
cmp
rclb
sbb
imul
repnz
cmp
add
fcomps
sbb
push
lods
mov
lods
inc
pop
adc
push
xchg
int
aaa
sub
mov
lcall
les
repz
and
sub
repz
ds
ffreep
dec
pop
jno
cmp
sbb
pop
ret
pop
mov
loopne
fucomp
cmpsl
test
fidivrl
repz
hlt
jb
mov
fdivrl
repnz
loopne
xchg
sub
in
cld
out
jp
inc
cmp
shrb
loop
sub
insb
jmp
push
ret
mov
sbb
pop
adc
pop
xchg
sub
jae
and
mov
rclb
xor
sarb
lea
pop
outsb
loopne
gs
out
rcr
xchg
mov
lcall
or
fimuls
sub
mov
inc
inc
test
xchg
pop
ret
jge
inc
xchg
xor
sub
in
pop
fwait
cmp
test
je
push
jle
xlat
mov
inc
mov
adc
xchg
sahf
mov
repz
or
gs
mov
ret
clc
in
pusha
inc
push
pushf
ds
test
xchg
dec
mov
in
cld
push
cmpsl
inc
push
mov
cmp
add
in
and
cltd
lock
pop
movsl
pop
mov
cmpb
xor
cmpsl
mov
ret
ljmp
lret
mov
and
pop
aaa
mov
dec
mov
jbe
sbb
mov
or
daa
test
push
jg
popf
cmp
int
lcall
lret
js
scas
sbb
movsl
cli
dec
shl
xchg
sub
cs
jmp
popa
lahf
push
sbb
pop
dec
out
sub
mul
mov
mov
adc
and
cwtl
cmp
push
cli
fsubrl
rcr
mov
mov
push
jbe
scas
pop
push
fdivs
push
aam
inc
inc
mov
push
popf
xchg
dec
ret
ja
mov
mov
sbb
pop
xor
sbb
jg
mov
xchg
dec
inc
addr16
push
fwait
lcall
add
fsubr
dec
std
push
dec
mov
jbe
adc
loope
pop
arpl
fstp
cmp
sub
xor
jnp,pt
and
outsb
cltd
lahf
loop
jmp
add
pop
pop
fs
sub
mov
adc
scas
sbb
ds
cltd
mov
cmp
call
dec
mov
sub
xor
iret
mov
xchg
dec
xor
aaa
sub
scas
inc
pusha
jno
xchg
into
mov
scas
inc
fnstsw
dec
pushl
xor
push
popa
lea
cltd
bound
addr16
movsl
sahf
loope
push
mov
mov
aaa
cmp
fs
mov
mov
inc
shll
mov
xchg
jg
lcall
aam
fmull
in
push
inc
mov
out
pop
popa
ja
inc
js
push
inc
sub
pop
cmpl
or
mov
fisubrl
jb
js
sub
mov
sahf
dec
dec
es
pop
fidivrs
xor
out
js
loopne
pop
sbb
les
popf
shll
popa
lahf
cmp
xor
xor
mov
fildll
jge
adc
push
sbb
pop
popa
fistpl
mov
addr16
jmp
mov
icebp
inc
dec
mov
lret
orl
iret
fsts
mov
adc
xchg
aaa
icebp
jecxz
ja
cmc
inc
mov
mov
xor
lock
popf
or
fldl
lret
subl
push
pop
jnp,pt
xchg
xchg
out
push
cmp
push
je
dec
mov
mov
test
xchg
and
call
xchg
ret
call
xchg
and
insb
add
bound
inc
add
xchg
aas
rorb
data16
ja
sub
dec
and
push
sbb
dec
mov
push
push
cmp
inc
lret
mov
or
ds
test
and
fucom
out
cli
adc
pop
shrb
mov
daa
pop
add
mov
movsl
cmp
sti
mov
push
es
clc
repnz
js
and
adc
cld
or
and
stos
jbe
mov
shlb
jns
inc
push
outsb
js
pop
jb
dec
add
in
sub
sub
cmp
cmpb
mov
and
push
mov
fcoml
scas
cli
ja
and
aas
jns
stos
inc
push
int3
push
fsubs
fstl
xchg
push
mov
ds
mov
push
popf
stos
mov
pushf
sbb
jbe
dec
fstpl
mov
fstpt
inc
nop
dec
dec
cmp
clc
outsl
mov
mov
dec
sub
adc
movb
ds
lods
sbb
dec
hlt
fdivrl
pusha
testb
xor
mov
or
jle
cld
adc
mov
imul
inc
fwait
es
aaa
cmp
jge
shrl
ror
into
aaa
dec
cld
cltd
lods
mov
push
jne
inc
mov
adc
enter
xchg
popf
aas
ds
inc
orb
lcall
mov
mov
cmp
mov
dec
cmp
pop
sarl
xchg
lret
sbb
mov
lcall
scas
mov
inc
cmp
cmp
adc
sti
ds
mov
push
mov
loope
dec
sbb
adc
sbb
rcl
mov
pop
enter
cmp
aaa
xchg
adc
inc
dec
ss
dec
sbb
dec
lahf
jecxz
lods
dec
jecxz
sbb
imul
mov
bound
sbb
iret
in
scas
ss
repz
pop
outsb
lods
out
ret
test
sbb
mov
roll
leave
scas
xor
inc
std
mov
xlat
mov
cvtpi2ps
mov
push
sbb
pusha
add
lock
mov
sbb
jge
jno
mov
daa
scas
mov
test
das
jmp
xor
faddl
bound
testl
xchg
cmp
mov
mov
xchg
in
fnstcw
cltd
mov
in
cmp
mov
mov
adc
sbb
ss
in
jecxz
mov
jne
pop
mov
adc
shr
lcall
aaa
push
cmpsb
pop
adc
xchg
sbbb
cmp
adc
stc
push
aaa
push
mov
or
aam
lss
push
jb
cmp
jne
sbb
cwtl
push
cmp
adc
or
in
xor
outsl
adc
out
fisttpll
imul
nop
lcall
js
faddl
jecxz
sbb
lahf
push
ds
call
add
aam
adc
mov
popa
test
pop
sub
dec
mov
aas
lcall
pop
clc
fcompl
jnp
jmp
btr
fmull
ss
adc
lods
jle
cs
testb
repnz
js
out
in
cmp
loop,pt
mov
lcall
cmp
add
int
pop
fisubrl
push
push
aas
pop
xorl
sti
hlt
mov
jb
movsbl
or
pushl
mov
jne
iret
int3
je
test
ret
sbb
movaps
inc
fisttpl
xchg
cmp
push
jecxz
adc
ds
je
xchg
leave
mov
push
xchg
out
lds
mov
insl
lcall
xchg
fcmovu
insl
mov
mov
xor
test
fs
or
in
fsubrs
lret
pop
in
mov
ret
jnp
out
cld
inc
jo
cmpl
in
imul
mov
push
fwait
pop
fimuls
into
sbb
or
dec
jecxz
rcr
enter
faddl
out
adc
dec
lcall
push
shrl
or
inc
sub
ja
xchg
adc
xor
xor
cmp
pop
jp
cmp
xchg
loop
jbe,pt
ljmp
pop
sar
cmp
dec
repnz
call
mov
xchg
cmp
lahf
mov
inc
jae
loop
fisttpll
and
xor
pop
ret
outsl
clc
or
call
mov
push
lcall
push
sub
insb
push
aaa
in
or
cltd
movsb
inc
jo
xor
pop
mov
les
sbb
inc
clc
shlb
fidivl
jp
mov
inc
stos
dec
pop
aaa
scas
sbb
adc
xor
dec
lods
mov
xor
xchg
cs
nop
xor
lock
or
in
jp
add
or
call
subb
cld
and
xor
sub
adc
dec
test
je
xchg
sbb
push
xchg
add
stos
adc
sub
ljmp
jmp
xchg
fisttpl
pusha
jne
lods
hlt
hlt
lahf
faddl
pop
mov
cmp
jnp,pt
pusha
pop
int3
push
dec
jp
fstpt
xchg
jns
dec
fldl
aas
shrb
mov
outsl
cmp
loopne
negl
ja
inc
pop
mov
frstor
inc
fisubs
movsl
xor
stos
fsubr
dec
mov
cmpsl
dec
cmp
xchg
jae
fidivs
rcrb
pop
fcompl
cmp
sbb
jae
sbb
mov
push
cmp
mov
inc
dec
inc
mov
pop
rcll
cmp
repnz
lret
aam
pop
add
add
ja
xor
fs
pop
mov
stos
mov
cmp
daa
outsl
jmp
dec
popf
into
cmp
mov
out
mov
ret
fwait
lcall
xor
mov
ds
sbb
mov
in
cmp
ror
pop
cmp
in
fwait
pop
pusha
xchg
lds
fmuls
loopne
add
scas
xchg
inc
repnz
push
lret
cmp
pop
test
mov
mov
adc
mov
shrl
pop
fidivl
sub
mov
cmp
mov
aam
sar
insl
lcall
addr16
lods
lock
pop
inc
cmp
sbb
cmc
add
push
shll
enter
push
inc
aaa
push
jno
das
insb
push
push
inc
lcall
mov
fstpl
scas
mov
ds
notb
pop
in
je
xchg
or
ja
fwait
jecxz,pt
subb
pop
stos
fcompl
int
in
dec
lcall
mov
call
fidivrl
mov
fwait
push
or
dec
mov
aas
add
add
and
addr16
jmp
gs
add
adc
in
pop
push
mov
mov
xor
js
test
inc
dec
and
adc
mov
testl
in
pop
cmp
sbb
dec
es
mul
mov
fucomip
push
push
rclb
repz
cmp
push
pop
movsl
adc
and
sti
scas
lret
int
push
add
cld
adcb
outsb
sub
or
or
data16
adc
cli
inc
inc
mov
push
fmul
adc
push
enter
xor
pop
inc
out
xlat
mov
test
sbb
dec
test
insl
es
addr16
cmc
pushl
scas
xchg
in
mov
movsl
inc
mov
in
pop
pop
pusha
lret
or
loope
stos
cmpsl
cwtl
jle
sub
push
and
das
ja
cmp
addr16
or
lcall
lret
dec
pusha
lock
nop
and
or
pop
pop
sub
iret
ljmp
add
adc
imul
mov
push
sub
jns
insb
adc
cmpsl
mov
aaa
mov
pop
adc
mov
mov
or
ret
cmpsb
push
loope
inc
aaa
clc
mov
mov
popa
cli
jecxz
mov
ds
mov
cmp
dec
loop
mov
test
test
xchg
dec
mov
dec
aaa
xchg
xchg
mov
loopne
sbb
rcr
stos
aaa
aad
jle
push
orl
negb
pop
mov
pop
adc
loopne
or
divb
push
stos
inc
inc
into
and
xor
pcmpgtw
gs
mov
sub
int3
mov
dec
test
lcall
hlt
ret
test
push
loop
mov
sbb
lcall
std
cltd
mov
pop
icebp
cld
imulb
inc
cli
adc
xor
cwtl
into
test
push
ret
inc
fs
lcall
sbb
sub
mov
mov
inc
mov
dec
loop
jae
rorl
jp
test
sub
lret
mov
clc
add
mov
sbb
in
testl
sub
mov
test
mov
cmp
inc
cmovle
cmpsl
pop
mov
aam
mov
and
imul
or
rclb
insb
mov
mov
or
std
adc
mov
adc
movsb
cmp
push
lods
iret
pushf
testl
rol
sub
jl
cmp
mov
pop
lods
lcall
inc
leave
scas
fidivrl
clc
addr16
jb
imul
mov
imul
sbb
dec
ds
jbe
adc
mov
call
dec
or
divl
out
sbb
lcall
and
std
lret
inc
or
hlt
pop
fucomi
dec
dec
mov
xor
pop
rcll
push
cli
lds
aad
pop
cmp
add
pop
jle
sbb
cli
addr16
jb
and
outsl
inc
mov
stos
rcrb
push
xchg
insl
insl
movsl
je
cld
les
mov
popf
faddp
clc
out
dec
ja
mov
mov
push
lret
leave
cmp
das
xchg
mov
shlb
mov
inc
mov
jp
jle
mov
or
push
sbb
into
mov
xchg
jbe
xchg
imul
pop
cltd
sti
aam
cmp
sub
mov
push
aaa
add
inc
pop
inc
pop
arpl
lcall
scas
jae
xor
test
xchg
push
ss
mov
lcall
gs
add
dec
rsm
aam
adc
leave
or
cmp
jl
das
ds
out
jmp
push
les
sub
and
mov
sbb
mov
mov
push
pop
cmp
testb
push
enter
arpl
ds
dec
cltd
mull
loopne
or
mov
jns
inc
sbb
rol
sbb
xor
lret
adc
cmp
add
pop
xchg
and
lret
push
dec
lcall
test
clc
gs
dec
bound
popa
xor
js
sub
jns
xor
xchg
push
faddl
cli
sbb
mov
xchg
mov
cli
loop
out
inc
mov
mov
stos
pop
in
mov
cli
xchg
fidivs
outsb
xor
jge
push
jle
push
mov
adc
rcll
int3
push
lea
jno
ret
jle
sti
in
and
stc
cli
mov
inc
out
nop
aas
add
fwait
jbe
add
jge
arpl
sahf
in
jecxz
stos
lret
insl
dec
in
lcall
in
pop
adc
pop
negl
fsubrs
lcall
das
sbb
mov
lods
lcall
xor
pop
dec
mov
rcr
dec
mov
mov
ds
bound
cmp
inc
cmp
into
fstpl
cmp
push
xor
fs
fisubrs
mov
scas
mov
les
push
jle
add
and
test
out
or
ljmp
test
adc
int3
jns
push
loopne
movsl
movsb
dec
xlat
addb
pop
jae
std
lret
scas
mov
mov
inc
out
stos
ds
push
insl
fistpll
in
push
mov
mov
cmp
loop
outsb
sub
movsb
out
in
pop
pop
loope
pop
dec
cmp
test
fs
lods
or
icebp
mov
iret
imul
add
loope
aaa
test
cmp
xor
add
test
xchg
inc
mov
push
dec
xor
jecxz
push
mov
cmpsb
sbb
or
jl
push
add
mov
sub
dec
add
aad
mov
pusha
ss
cmpsb
cmc
lea
dec
mov
jl
fnstsw
mov
test
inc
cmpsl
or
pop
xlat
lcall
push
xor
adc
lcall
jmp
call
mov
fdivrl
ljmp
loop
jo
mov
cs
inc
add
popf
insl
dec
in
dec
mov
mov
aam
push
inc
mov
lret
outsl
inc
add
cwtl
and
xchg
scas
dec
jbe
mov
inc
test
faddl
iret
jb
je
loop
ds
das
push
clc
dec
mov
hlt
sub
test
sub
inc
mov
stos
mov
cmpsl
scas
pop
mov
cmp
cmpl
mov
push
test
dec
jle
or
cmp
aad
cmpsb
aaa
jp
push
lahf
std
push
aaa
push
push
sub
sbb
ds
loope
ds
fldl
test
test
sub
or
bound
sbb
xor
lcall
cmp
fstpl
jnp
test
or
lods
cmpsl
gs
cli
mov
push
inc
sbb
pop
xchg
pushf
cwtl
cmpsl
cmp
addb
gs
insb
sbb
jae
adc
mov
js
mov
sub
xor
js
xor
cmp
push
in
out
adc
sub
pop
stos
lods
lcall
js
aam
mov
out
daa
push
lods
popf
mov
xchg
mov
mov
xchg
je
or
or
jl
lahf
popa
mov
sub
ja
dec
mov
scas
cmp
int3
sub
test
cmpsb
insb
xor
xor
jle
xor
fwait
daa
dec
push
stc
es
cmp
push
int
pusha
mov
mov
bound
sbb
fwait
pop
clc
sbb
lds
xchg
movsl
loope
out
ljmp
mov
mov
aad
mov
cli
cmp
adc
mov
inc
dec
test
push
sbb
sbb
sbb
xchg
lcall
ret
sbb
stos
test
or
into
aaa
lret
out
cmpsl
and
fwait
mov
inc
xor
pop
jo
int3
imul
std
cmp
mov
jbe
mov
dec
lcall
push
inc
cli
inc
orl
pop
roll
jnp
in
pop
dec
push
cmpsb
cld
dec
dec
jnp
xchg
pop
add
push
aad
adc
lock
jne
fstl
cmp
imul
add
and
outsl
adc
mov
stos
and
enter
mov
aaa
push
mov
in
negl
cmp
ljmp
repnz
mov
adc
push
push
fiadds
loopne
testl
cmp
loope
pop
and
sbb
cmp
and
div
aaa
jp
aam
ds
dec
ss
cmp
pop
in
ds
mov
aad
aaa
cmp
add
fwait
ja
lcall
aaa
fcompl
bound
stc
sbb
ja
je
cmp
test
inc
mov
dec
test
out
clc
call
ds
inc
notb
and
out
cmc
fsubl
int
pop
scas
inc
roll
inc
jmp
fwait
aaa
adc
mov
pusha
lcall
imul
cmp
cld
movsl
ds
jbe
jl
xchg
test
mov
mov
mov
ret
mov
loopne
jae
sbb
fdivp
lds
xor
adc
test
inc
jg
sbb
cmpsl
sarb
shlb
cmp
push
lea
popf
jecxz
sbb
outsl
mov
clc
rorl
jo
ja
dec
or
inc
xor
xor
test
pop
decl
nop
xchg
int3
int3
ds
loop
insl
mov
mov
adc
es
jl
ss
pop
int
sbb
xchg
nop
fiaddl
mov
pop
push
scas
pop
push
adc
ror
div
insb
arpl
add
loop
mov
fwait
mov
cmpsb
fmull
lret
icebp
add
jnp
mov
movsl
stos
pop
pop
and
outsb
sub
add
mov
and
mov
and
inc
push
movsl
push
test
nop
pop
fwait
xchg
or
iret
pop
push
out
in
xor
cwtl
inc
cld
inc
adc
nop
call
jno
mov
notl
enter
dec
ja
xor
jae
pop
loope
xor
fidivl
sbb
mov
pop
sbb
mov
lcall
jne
in
cmp
call
xorb
andl
cmp
aaa
or
inc
testb
pop
lcall
cmp
sbb
inc
out
xor
xor
or
sarl
aam
call
push
ds
dec
pop
mov
insb
jo
nop
ds
popa
sbb
ds
imul
mov
cmp
out
lcallw
fiadds
lahf
in
push
and
xchg
negl
cmp
shl
xor
inc
inc
adc
sbb
cmp
sbb
xchg
xchg
lahf
ret
pop
or
test
lds
mov
insb
inc
jle
mov
mov
jns
mov
xor
mov
pop
test
pop
dec
pop
push
mov
mov
adc
lret
pop
das
xchg
lahf
inc
sbb
test
jge
movsb
mov
push
push
cli
daa
mov
out
mov
xchg
scas
sub
loopne
mov
in
pop
xchg
cltd
inc
or
or
xchg
push
nop
mov
xor
mov
icebp
imul
or
lret
popa
or
mov
sbb
push
mov
aas
stos
gs
pusha
jo
shrb
jae
aaa
mov
stc
adc
mov
lcall
cmp
jnp
jmp
jecxz
sub
fwait
cmc
lcall
je
cli
mov
xchg
lahf
arpl
lcall
adc
lock
cmp
mov
jecxz
and
fmulp
and
fsubrs
xchg
cmpsb
ds
jb
adc
adc
fwait
subl
scas
rcrl
mov
sbb
popa
cli
pop
rol
movsb
xchg
mov
ljmp
pop
cltd
or
arpl
mov
sbb
in
gs
aas
cli
mov
jnp
xor
negl
mov
mov
inc
inc
jp
push
aaa
push
sahf
daa
roll
dec
andl
call
movl
jb
xchg
fsts
fcompl
loope
sub
push
push
mov
cmp
lcall
out
mov
jge
loop
loopne
fadd
cmp
add
push
or
adc
jbe
cs
testl
fs
gs
scas
fisubl
popa
push
mov
js
jae
mov
mov
nop
push
adc
inc
ret
jmp
out
addr16
aad
jb
sarb
in
ja
pop
pop
mov
cmpsb
pop
rcrb
dec
push
imul
cwtl
fucom
mov
cmp
mov
insl
into
and
ret
inc
fldl
jns
loopne
inc
pop
loope
jecxz
mov
xchg
cmp
or
mov
fidivl
outsb
push
and
lret
mov
lret
ds
fsubrs
jg
insb
cmpsl
stos
push
fnstenv
mov
push
cld
push
pop
ror
dec
mov
movl
decl
jp
movsb
ds
cmp
xchg
mov
adcl
bound
or
ds
jecxz
adc
xor
push
scas
stc
mov
pop
arpl
jle
das
sbb
es
ret
cmp
pop
push
cmpsl
fadd
ja
mov
imul
mov
sbb
jle
scas
outsl
mov
jle
or
adc
mov
test
pop
mov
clc
clc
in
ds
test
mov
loopne
imul
les
xchg
xchg
and
mov
and
aad
adc
aaa
mov
and
pusha
fwait
insb
lret
in
pop
insl
ficompl
faddl
cmp
popf
inc
mov
fldl
push
mov
pop
and
cmp
jb
fidivs
cmp
adc
xchg
push
fwait
icebp
lret
cmp
sub
pop
rcrb
test
in
jno
enter
add
pop
mov
xor
cmp
xchg
mov
mov
ds
jmp
fstp
aaa
orl
outsl
lcall
mov
and
daa
pusha
in
dec
sti
psraw
scas
fidivrs
mov
sbb
mov
test
and
ret
push
add
push
sarb
scas
aad
lods
sub
push
jae,pt
mov
fldt
mov
popa
aas
pcmpeqd
es
rorl
pop
mov
outsl
ffree
push
push
jno
dec
sbb
je
mov
adc
add
mov
mov
and
push
ds
jl
add
or
dec
mov
in
ds
test
pushf
mov
pop
iret
mov
push
jmp
add
or
or
ds
rclb
mov
in
cmp
js
cmp
in
popa
xchg
xchg
sbb
ljmp
fdivrl
insb
insb
mov
es
pop
mov
adc
push
push
mov
fistps
cmp
js
push
fwait
push
stos
fldcw
lods
inc
pop
imul
mov
adc
aas
xor
scas
fisttpl
dec
mov
and
inc
call
jle
cmp
xor
loopne
dec
cmpsl
pop
sbb
jge
pop
cmp
push
jg
push
aaa
add
jns
sahf
ret
dec
pushf
insl
shll
loope
mov
jo
movsb
sbb
aas
sbb
or
adc
or
gs
fisttpl
dec
outsb
fdivl
mov
cs
push
js
jno
outsb
or
mov
adc
dec
mov
loop
sbb
andl
stos
sbb
push
bound
add
and
and
add
negl
push
dec
test
ja
cmp
sbb
push
add
into
dec
cli
cwtl
fisubrs
inc
scas
adc
inc
insl
jecxz
inc
mov
ljmp
sarl
push
ds
dec
mov
mov
movsb
hlt
jg
mov
mov
mov
fwait
rcrl
imul
ds
inc
icebp
mov
movsl
sahf
xchg
movsb
pushf
out
fcoml
fstpl
imul
loope
cmp
roll
jl
sbb
xchg
les
jns
frstor
pop
xor
push
aas
xor
aaa
sub
push
repnz
inc
shrl
cmp
fwait
cmp
or
adc
add
cmp
cmp
add
sar
push
lret
push
outsb
sub
ds
popa
and
scas
push
mov
cltd
ret
push
test
jp
fwait
push
push
inc
xor
inc
xorl
ja
mov
mov
xchg
lahf
adc
fsts
xor
xchg
mov
in
lret
fnstsw
mov
mov
icebp
ds
cmpsb
mov
mov
xor
scas
fnstsw
adc
add
lret
mov
add
mov
lahf
mov
mov
mov
test
pop
push
mov
packssdw
out
push
les
push
push
js
fsubrl
mov
addb
inc
xor
lcall
in
cli
js
pop
sbb
inc
fadds
mov
adc
jbe
or
or
jns
xchg
pop
test
mov
lcall
mov
aaa
xor
sbb
ret
sub
jecxz
mov
imul
push
gs
or
adc
or
cmp
loopne
inc
mov
xchg
mov
adc
cmp
testl
jecxz
rcrl
js
cmpsb
fdivrl
movsl
xor
push
push
mov
fiaddl
js
rcrb
imull
das
outsl
inc
mov
shrl
pop
js
sarl
popf
xchg
cmpsl
and
pop
cld
in
add
addr16
sahf
and
in
mov
fidivrs
inc
fwait
mov
outsb
lahf
push
xor
in
mov
inc
leave
push
or
push
jo
xchg
mov
or
pop
adc
js
aad
xchg
stc
pop
xchg
aaa
stos
cmp
add
test
call
lcall
dec
ds
jnp
lods
push
pop
pop
dec
inc
stos
fcom
test
jbe
sub
and
mov
cltd
inc
ficompl
das
ljmp
in
movsb
in
mov
mov
imul
lcall
dec
or
jb
jmp
cmp
and
pop
mov
dec
inc
cs
test
mov
add
daa
lods
jmp
cmp
pop
xorl
cmpsl
push
lcall
pop
mov
add
dec
fucomp
mov
add
cs
inc
lcall
xchg
jge
in
addr16
mov
adc
dec
xorl
lret
or
xchg
in
jp
adc
addr16
mov
nop
cmc
ds
mov
dec
push
cmpsb
xchg
hlt
xor
pusha
aas
sbb
xor
mov
adc
dec
into
in
in
popf
sbb
mov
mov
loopne
push
sbb
or
iret
insb
jbe
arpl
rolb
sbb
mov
add
clc
in
imul
lcall
fs
sub
push
or
aas
cli
mov
dec
jno
mov
pop
lcall
pusha
mov
in
xchg
sbb
cmp
orb
cmp
out
rcrb
lret
mov
inc
seto
cmp
jmp
push
pop
vpsubb
in
jge
ficoms
cwtl
dec
out
cld
cld
aaa
dec
mov
pop
adc
lret
pop
inc
mov
scas
enter
push
cmp
inc
dec
lahf
mov
mov
cmp
push
es
les
and
cmc
mov
sbb
js
ljmp
xchg
pusha
and
mov
sub
test
lds
dec
rcrb
mov
cmp
mov
insl
dec
sub
cmpb
xor
add
mov
jne
inc
sub
lods
mov
push
in
fmul
dec
mov
sbb
mov
out
inc
jg
inc
push
mov
cli
lds
mov
jg
and
movsl
mov
jecxz
dec
mov
mov
rcl
xor
inc
insl
mulb
pushl
lahf
out
jb
fstpt
mov
push
pop
aad
test
jp
fs
jg
faddl
xchg
cld
test
je
inc
inc
scas
pop
mov
mov
cld
pusha
or
in
jmp
iret
jl
cmpsb
repnz
mov
adc
xor
call
push
add
lock
mov
inc
insb
push
push
imul
cmp
lea
mov
pop
cli
lds
test
add
sar
inc
popa
testb
jne
faddl
popl
aas
jmp
and
add
lock
mov
sbb
dec
gs
add
lods
scas
xchg
push
out
call
daa
xchg
inc
fwait
pushf
seto
in
xchg
popf
aad
js
arpl
mov
cmp
ljmp
aaa
push
sahf
dec
rorb
push
push
dec
idivb
pop
out
out
test
mov
xor
push
in
cmc
mov
scas
lcall
pop
jmp
xchg
xchg
and
imul
fstpl
add
mov
xor
jo
ja
xlat
cmp
add
fsubl
sbb
leave
xchg
into
cwtl
adc
or
pop
xchg
mov
add
mov
popf
cmpsb
fsubrl
incb
test
push
sub
adc
xlat
jecxz
jo
lcall
les
fnstsw
stc
in
fisttpl
pop
inc
cwtl
jp
push
mov
mov
pushf
push
pop
jns
lods
out
adc
dec
xor
sbb
dec
stos
xor
aaa
lret
dec
jmp
std
fwait
outsb
scas
pusha
out
cmp
mov
mov
mov
rol
pop
jp
sbb
stos
lcall
inc
lcall
pop
mov
pop
inc
and
je
rol
or
cmp
mov
sub
icebp
arpl
or
mov
loopne
dec
sub
insl
call
jp
ljmp
andb
pop
inc
jnp
call
pop
adc
add
in
insl
xchg
mov
mov
popf
scas
stos
pop
pop
pop
jmp
push
push
and
in
movsl
call
mov
leave
xchg
loope
mov
mov
push
hlt
jge
adc
dec
gs
mov
push
ljmp
sbb
pop
cmc
jb
dec
jg
popa
mov
sbb
fstp
scas
mov
pop
push
aaa
sahf
ja
mov
mov
sti
fdivrl
mov
add
in
psubd
jge,pn
jp
lret
jge
sbb
pushf
pusha
push
test
push
hlt
and
or
and
out
mov
lcall
je
xor
mov
jge
loopne
call
stos
iret
mov
push
sarb
and
jp
insb
lcall
push
test
nop
aaa
outsl
and
push
lcall
inc
mov
pop
lahf
inc
push
mov
push
push
sar
rcr
xor
and
push
out
push
jmp
test
das
popf
xor
ljmp
gs
pusha
inc
mov
in
lret
sbb
aas
lahf
pop
jp
adc
daa
mov
mov
lcall
mov
shlb
in
and
sti
xchg
aam
ja
std
cmp
ficompl
push
lret
push
pop
les
lahf
jp
mov
lcall
or
or
push
inc
pop
mov
pushf
arpl
insl
mov
push
and
mov
icebp
cli
cmpl
scas
movsl
jmp
inc
push
fcoml
mov
insl
dec
bnd
cmp
xor
fidivs
dec
fdivrs
dec
lods
iret
shrb
xchg
shr
test
or
pop
sub
in
jp
imul
loopne
cmpl
adc
pop
roll
pop
sbb
push
inc
imul
stos
lcall
cmp
ljmp
mov
pushf
dec
leave
in
jbe
out
out
inc
push
pusha
mov
pop
mov
loope
sub
mov
jo
and
jae
dec
sbb
sbb
fstl
pop
fstps
loope
sahf
lahf
ficomps
arpl
mov
mov
stos
test
mov
pop
test
mov
sahf
into
fidivrs
mov
mov
jp
or
inc
jecxz
pop
xchg
push
out
test
xchg
or
cli
xchg
scas
and
rclb
lods
push
add
lcall
rolb
push
outsb
adc
and
xchg
daa
mov
ds
push
in
andb
jmp
mov
xchg
addl
mov
dec
inc
inc
mov
jg
dec
out
mov
sub
mov
cmc
popf
bound
ja
rorb
mov
aaa
or
mov
mov
dec
lcall
dec
lret
jo
aaa
rcl
pop
rcll
sarl
add
mov
inc
and
inc
xor
mov
stc
ficompl
push
lods
adc
es
addb
mov
jbe
ljmp
mov
test
test
xor
stos
pushf
out
bnd
loope
stos
jecxz
dec
add
inc
lret
inc
pop
pushf
fdiv
pushf
xchg
lds
cltd
rcll
xor
sti
inc
push
movzwl
sbb
inc
ds
sti
fldl
mov
cld
pop
fdivrl
ljmp
cs
pop
mov
int3
je
push
fbstp
sbb
adc
pop
fstpl
cltd
xchg
jnp
sahf
push
xchg
ds
or
ljmp
aad
add
in
jle
cmpl
lods
sarl
into
sbb
dec
xchg
pop
push
jo
aam
xchg
mov
in
or
jb
and
dec
xchg
int
xchg
cld
sub
cmpsl
cmp
pop
fnclex
add
or
push
inc
arpl
and
mov
jl
sbb
fwait
inc
push
popa
jle
cld
inc
imul
pop
inc
pushf
push
inc
push
or
xchg
ljmp
aas
test
fmull
pop
xchg
jg
pop
mov
push
jle
iret
jl
dec
dec
lret
push
iret
icebp
pop
fiadds
shlb
daa
xchg
roll
inc
cli
es
and
dec
xor
fstp
add
push
sbb
in
push
ds
mov
cli
push
and
push
mov
stos
push
ret
testb
enter
inc
mov
sarb
add
shll
adc
pop
daa
mov
imul
incb
sbb
push
add
lcall
sbb
inc
pusha
arpl
scas
scas
push
cmp
gs
iret
outsb
lret
and
inc
jl
aam
dec
mov
scas
push
add
jmp
mov
addr16
add
sbb
pop
or
jno
lahf
pushl
mov
lret
and
mov
out
call
test
fnsave
aaa
repnz
addr16
xor
enter
in
mov
mov
inc
aaa
dec
cs
pop
or
xchg
mov
dec
mov
pop
fstpl
xor
lahf
mov
gs
and
mov
mov
fcompl
jg
icebp
dec
popa
xchg
fisubs
mov
push
lret
lods
je
push
bound
lds
aas
jno
pop
test
outsl
das
lcall
subb
sub
movl
int
inc
add
push
jbe
repnz
in
inc
fstpt
xchg
pop
push
mov
lds
xchg
inc
and
push
inc
inc
call
sti
sahf
push
jecxz
jae
aaa
outsb
dec
adc
enter
arpl
aas
or
mov
cli
push
cmpsl
cmp
nop
xlat
and
cwtl
mov
cmp
sub
xchg
aaa
and
pop
inc
les
jl
fmulp
sbb
pop
rol
and
movsl
cld
popa
test
adc
stos
leave
inc
jmp
add
mov
jnp
icebp
das
in
mov
fcmove
sbb
mov
ret
stos
sbb
mov
jnp
sub
mov
and
xchg
lea
mov
cmp
mov
jl
shl
mov
ja
mov
jl
dec
lret
dec
cli
pop
cmp
cld
push
arpl
xorl
xor
xor
mov
in
mov
ds
cmp
hlt
dec
mov
add
mov
mov
mov
jns
fdivrl
aaa
stos
loop
loopne
test
outsb
mov
inc
in
sub
dec
andl
pop
mov
fucomp
dec
aas
outsl
lds
je
jl
out
push
ret
movsl
or
jbe
mov
dec
out
push
pop
int
mov
sbb
andl
ss
mov
add
dec
sahf
sub
daa
fbstp
xlat
jo
in
cmp
pop
sbb
mov
paddd
add
inc
in
fs
mov
or
mov
dec
cmpb
adc
imul
fmull
negl
cmp
dec
push
outsb
cli
mov
mov
mov
jmp
push
leave
push
mov
aas
cmp
jmp
mov
sahf
mov
xor
jle
inc
mov
loope
mov
xor
into
mov
push
or
sub
xchg
ds
iret
xor
push
aam
cmp
xor
cmp
cmp
pop
mov
lcall
insl
inc
sar
je
and
rcrb
pop
lret
inc
xchg
aad
add
out
mov
imul
sbb
mov
into
mov
and
inc
jns
fstpt
cmp
push
adc
outsl
cmpsl
mov
pop
sbb
jb
frstor
call
mov
aas
aaa
sub
lahf
push
lcall
mov
sbb
sub
adc
inc
xchg
cltd
loop
movsl
lret
push
jb
xorb
dec
in
imul
ljmp
push
sbb
imul
aaa
pop
loopne
xor
jno
ficomps
jae
sub
sbb
outsl
mov
sub
mov
faddl
push
adc
pop
js
jae
fs
insb
sbb
push
dec
add
mov
mov
mov
arpl
lret
mov
xchg
lds
push
fisttpll
cmp
and
ds
and
dec
pushf
cwtl
aaa
xchg
lret
test
mov
dec
js
mov
add
mov
add
cmp
mull
jo
sub
mov
sub
sub
push
dec
pop
jl
adc
jne
insb
jg
fnstsw
fnstsw
adc
movsb
arpl
jbe
sahf
mov
jmp
subb
shr
fwait
pop
xlat
aas
push
xor
addr16
cmp
cmp
adc
push
xchg
jno,pt
int
enter
ds
ds
xchg
dec
std
stos
sbb
and
xor
fmull
addr16
xchg
jg
mov
pop
ret
inc
pop
fisubrl
nop
pop
dec
cs
lds
sub
sub
mov
xor
lods
pop
stos
dec
icebp
sbbb
fdivrl
mov
pusha
push
jns
push
sbb
mov
loopne
jecxz
xor
nop
movsl
inc
int3
pop
jae,pt
jae
push
fiadds
mov
insl
aas
dec
lcall
lock
xchg
les
out
xchg
push
pop
cltd
pushf
or
sbb
fwait
dec
dec
ja
cltd
loopne
pop
in
cli
cwtl
fldcw
pop
dec
loop
cmp
jge
jno,pt
ret
popf
mov
mov
inc
cmpsb
sti
test
mov
cwtl
mov
sahf
call
icebp
lods
push
repnz
adc
lock
jno
dec
dec
rcrb
mov
fistpll
into
pop
arpl
fnsetpm(287
imul
sub
or
push
or
add
add
sbb
std
fwait
mov
pop
les
js
fisubrl
dec
cmp
test
bnd
cmp
sub
pop
inc
pop
test
fcompl
fimull
sarl
inc
pop
jb
ds
shlb
imul
lcall
out
pop
and
lea
mov
subb
pop
xor
xchg
cmp
add
mov
lcall
leave
hlt
inc
add
roll
pop
add
sbb
pop
scas
and
sbb
add
fnsave
inc
iret
xchg
add
shll
cmpsb
rcrl
sbb
fs
push
add
iret
adc
aam
or
and
jmp
scas
aam
mov
repz
or
faddl
mov
scas
mulb
mov
in
das
aas
out
cmp
aaa
jns
jp
out
ret
pop
fisttpll
clc
mov
sarl
or
cmp
jmp
pop
add
pop
jmp
mov
fldl
adc
cmc
push
pop
cli
outsb
test
dec
lds
mov
push
cmc
popaw
fistps
cmpsl
les
dec
sbb
aaa
xchg
testb
lea
push
mov
dec
gs
popf
out
push
lcall
pop
frstor
sbb
inc
popa
fsubs
imul
idiv
inc
lods
and
xlat
stos
lods
or
xor
xchg
std
test
sub
in
mov
cmc
mov
cmpsb
xchg
test
daa
mov
iret
jle
ja
imul
cmp
lcall
mov
push
dec
inc
js,pt
jg
or
cmp
ds
rorb
lcall
xor
cmpsb
xor
cmpsb
xor
and
xchg
mov
mov
stc
push
sbb
bound
push
inc
ja
test
inc
inc
pushf
cmp
mov
out
mov
adc
jp
movsb
cltd
dec
xor
out
loop
mov
popf
dec
sub
sbb
sbb
mov
or
ja
lock
push
cmp
jne
repz
and
dec
mov
fldl
mov
mov
push
mov
lock
sbb
inc
mov
jmp
loope
aaa
mulb
stos
xchg
cld
dec
ja
fwait
inc
mov
lods
or
pop
sbb
div
sbb
loop,pn
dec
pop
inc
dec
hlt
out
mov
mov
pusha
jno
repz
ficoms
movsb
sarl
ret
js
inc
push
bnd
jmp
getsec
dec
mov
inc
cmp
mov
rolb
sub
xchg
repnz
mov
pop
inc
add
xchg
cltd
push
pop
xor
popa
repz
mov
cmp
test
jmp
sub
test
das
rep
outsl
pop
mov
inc
loop
xchg
adc
jnp
icebp
movsl
sbb
mov
inc
iret
adc
ds
rcll
call
and
cmp
push
loope
dec
pop
lds
inc
xor
bound
es
ds
cmpsl
mov
fimuls
adc
adc
pop
ljmp
mov
and
addr16
fsubrl
fistl
repnz
push
ds
cmp
aas
xor
mov
inc
add
clts
ficomps
jle
mov
popf
sbb
push
mov
lcall
inc
frstors
fcmovnu
inc
adc
and
mov
mov
loopne
shlb
sti
sbb
dec
fstpl
add
push
mov
cmp
insl
stos
xor
cmp
pop
int
xor
mov
mov
cmp
dec
add
negl
mov
adc
out
sbb
and
aaa
mov
ret
push
sbb
cmp
pop
mov
ficomps
les
or
fisubl
cmp
pop
and
xchg
repnz
ds
movsb
flds
testl
lret
pop
push
pop
outsl
xchg
aaa
fsubp
pusha
repnz
sbb
adc
cmpsl
lock
pop
lahf
mov
test
movsb
push
sbb
sbb
inc
pop
frstor
jge
dec
adc
push
push
fildl
pop
leave
pusha
in
inc
fstpt
or
pop
lahf
adc
das
and
cmpsl
ds
and
push
int3
pop
dec
test
test
push
shll
xchg
scas
daa
inc
aas
xchg
jo
aaa
faddl
sub
pop
mov
lret
int
pop
pushf
xchg
inc
test
in
pop
mov
cmp
pop
lret
add
pop
cmpsb
loopne
sbb
bnd
push
mov
sahf
imul
fidivrs
out
pop
ds
movsl
stos
jmp
cmp
mov
jge
sub
out
lcall
cmp
in
pop
mov
test
jge
push
dec
mov
dec
push
sbb
xchg
or
inc
inc
fcmovne
pop
and
or
xchg
inc
sub
into
fcoml
ja
loop
out
lcall
cmp
fdivrp
stos
gs
mov
lret
sub
orb
aaa
or
inc
loop
inc
or
jne
lock
mov
adc
xor
dec
push
lcall
cmp
ja
fbstp
imul
adc
cmp
aaa
or
xchg
sub
jp
pusha
dec
xchg
mov
cmpl
jl
jmp
lods
pop
lods
aaa
das
xchg
int3
aas
arpl
push
rcll
fistps
lcall
mov
fstpl
out
mov
jmp
sahf
push
enter
sub
or
sub
outsl
or
inc
cmp
cld
shll
jne
adc
lcall
and
cmp
jb
dec
test
stos
mov
outsb
aas
mov
aas
aaa
jbe
in
sub
xor
fwait
and
inc
push
add
cmp
push
mov
in
sub
shll
test
enter
jge
cmp
jae
and
mov
cmpsl
xchg
ds
lods
inc
ds
ds
and
aaa
es
in
dec
outsb
dec
adc
push
inc
jno
fbstp
lods
jo
popa
aas
pusha
xor
add
popf
fisttpll
jmp
push
fwait
sbb
pop
cmp
cmpsb
mov
outsl
js
xor
jbe
insb
jbe
jno
adc
orl
jmp
in
pop
shrl
aaa
stos
and
je
adc
divps
jne
mov
cmp
imul
sbbl
xor
sub
lret
ss
in
js
mov
sbb
inc
mov
aaa
fidivs
cmpsb
cmpsl
sub
repz
or
push
ds
cmp
mov
into
fs
add
inc
cmpsb
outsb
rcll
adc
jmp
jnp
mov
inc
mov
icebp
les
lea
mov
cmp
jbe
push
gs
in
ret
sbb
jle
mov
jp
mov
inc
pop
mov
jnp
push
inc
sbb
pop
mov
gs
ret
push
mov
out
xchg
sbb
lcall
push
pop
arpl
push
fldt
out
pusha
sarb
in
call
fisubl
fcmovu
xor
popf
dec
dec
pop
fldl
jb
mov
test
in
lret
pop
jae
inc
add
adc
cmp
push
pop
push
sub
out
popf
xchg
jae
lret
mov
adcl
ds
sti
xchg
out
pushf
push
sarl
cmp
sahf
mov
stos
or
out
popf
mov
push
and
out
dec
cli
mov
and
fs
test
repz
inc
stos
ja,pt
xor
ret
int3
mov
inc
lcall
pop
out
ficomps
pop
lahf
cltd
lcall
int3
in
fstl
mov
mov
and
gs
jb
int
push
mov
mov
enter
insl
pop
and
imul
shll
cmp
adc
mov
cmpsl
repz
arpl
xor
cmp
popf
cs
sahf
cmp
mov
add
or
imull
outsl
dec
pop
rcll
scas
aas
mov
outsb
aas
fldenv
pop
mov
push
push
push
adc
mov
add
mov
dec
mov
adcb
nop
mov
xor
cmp
cmp
push
push
add
call
dec
aaa
lea
sub
xchg
cmp
dec
add
cs
fdiv
es
int
lods
add
pop
add
mov
leave
jb
pop
push
adc
inc
fwait
xchg
dec
enter
lcall
fiaddl
repz
fmull
lahf
add
push
jg
aas
dec
cs
out
or
mov
sahf
xor
mov
dec
aam
sbb
push
scas
repz
mov
ffree
jl
cmp
pop
out
push
lock
lods
push
js
ds
hlt
js
mov
ret
ja
jmp
jecxz
pop
loop
ret
pop
aaa
sub
rcrl
inc
je
fstpl
repz
test
subb
add
lret
xchg
lcall
adc
ffree
pushf
sahf
mov
cmp
mov
pushf
push
jo
icebp
pop
xor
add
pop
inc
mov
adc
cmp
orb
fwait
call
add
aaa
mov
add
fcoml
dec
out
add
in
mov
jp
push
aaa
iret
push
nop
sub
int
jo
sarl
push
leave
jo
jo
mov
cmp
leave
pop
mov
mov
mov
mov
add
cmp
rorb
inc
jbe
cs
dec
clc
sahf
pop
stos
fbstp
mov
ret
sbb
inc
pop
sub
mov
xchg
lahf
cli
jbe
cmp
dec
movsl
or
jns
in
mov
scas
mov
int
push
sub
cmp
mov
jnp
enter
arpl
dec
mov
negb
sbb
jecxz
mov
pushf
je
dec
jbe
faddl
in
push
daa
ds
es
push
dec
push
popf
inc
gs
mov
outsl
mov
jmp
fiadds
dec
je
xchg
xchg
jne
dec
cmp
out
lods
add
ret
test
or
mov
adc
mov
int3
cli
cmpsb
rcrl
jge
loop
and
shlb
aaa
insb
pop
iret
mov
movsl
cld
xor
push
push
clc
push
loope
cmp
loope
test
pop
adc
push
es
sbb
leave
mov
ljmp
jno
fisubrl
sbb
jb
xor
test
dec
jnp
stos
mov
loop
mov
pusha
adc
ja
sub
mov
mov
jecxz
lcall
dec
cmp
mov
outsb
in
sbb
adc
cmp
xchg
popf
inc
pusha
or
mov
cld
repnz
or
pop
mov
pop
sub
push
sbb
cltd
sarb
pusha
addl
sbb
aaa
lret
cmp
rcll
lcall
mov
ljmp
pmaxub
clc
mov
dec
jo
cs
ret
popf
outsl
rcll
daa
lret
fnstenv
or
dec
fistl
dec
mov
inc
jnp
sbb
aaa
mov
push
into
sbb
pushf
not
inc
sub
rorb
aad
mov
mov
jp
fcompl
pop
sahf
pop
xor
dec
cmp
shlb
xchg
mov
nop
jns
push
mov
in
out
and
iret
and
jmp
mov
pushf
pop
push
popf
aas
lcall
lds
mov
ret
popa
ret
pop
popf
sub
lcall
sbb
mov
out
dec
pusha
cmp
cmpsb
imul
push
jmp
mull
inc
cmpsb
push
addr16
cs
loopne
faddp
fwait
mov
out
push
aam
adc
inc
add
ljmp
roll
push
push
fstpl
fldt
inc
or
sbb
pop
inc
stos
or
and
out
push
jbe
sub
adc
sbb
in
cmp
sub
mov
fisttpll
and
and
mov
xor
cmpsl
rorb
jo
dec
dec
mov
sub
movsb
mov
lea
mov
out
dec
dec
sahf
repnz
lcall
sub
cltd
nop
cmp
mov
mov
fisttpll
iret
or
dec
push
pop
pop
pop
add
adc
pop
mov
clc
mov
sub
or
adc
xchg
in
or
jl
lcall
gs
aaa
shlb
jno
call
mov
cmp
pop
sbb
rclb
std
loopne
js
fwait
pop
popa
jp
fdivs
pop
xchg
fcmovbe
cli
js
leave
ret
cmpsb
aaa
mov
push
aaa
add
pop
out
hlt
adc
ds
cltd
jmp
fsubl
stc
cmc
xchg
in
cmpsb
pop
mov
add
sbb
pushf
lret
lret
jmp
and
jb
inc
xchg
adc
and
fisttpll
pop
in
sarl
cmp
cmp
les
sti
lods
pop
inc
jp
inc
ficomps
test
cmp
mov
aaa
test
cmp
fwait
cmp
jne
jmp
js
xchg
push
lcall
pushf
negl
inc
aaa
movsb
test
push
bound
icebp
jle
pop
popf
repz
or
xchg
out
fs
jp
sub
mov
fmull
test
push
xchg
insl
sbb
or
lds
sahf
pop
fdivrs
mov
cmp
rolb
cmp
xchg
mov
scas
mov
clc
sbb
push
ds
jne
fwait
push
jmp
cmp
mov
scas
je
sub
nop
sbb
int3
cmp
sbb
lcall
mov
pop
pop
jno
lahf
xor
lahf
xor
dec
jl
ds
cwtl
lock
fwait
push
jne
sub
jecxz
pop
sbb
sub
inc
sbb
mov
iret
mov
cmp
cmp
ret
fiadds
in
pop
xchg
jp
imul
jge
lahf
insb
push
xchg
int
out
pop
scas
aaa
adc
xchg
movsl
adc
sbb
xchg
pushf
ds
dec
inc
std
mov
push
dec
add
fnstcw
es
loope
das
sbb
mov
cli
mov
stos
mov
or
fldl
inc
xor
and
push
inc
pop
fucomp
mov
popf
popf
jns
inc
loopne
pushf
cmc
pop
fmuls
mov
jo
sbb
pop
xor
loop
sub
leave
sbb
mov
inc
shrb
ror
mov
lcall
clc
mov
popa
imul
js
mov
es
adc
mov
xor
inc
test
aad
mov
sahf
jle
sub
dec
mov
sub
pop
shr
mov
sub
in
pop
outsb
test
and
ret
push
fwait
ss
mov
adcb
pop
clc
lret
push
jb
in
push
pop
add
xlat
jne
pop
pop
cltd
mov
sub
aaa
pop
shr
movsb
mov
push
pop
inc
push
aaa
int
dec
or
mov
push
inc
fwait
mov
or
pop
jmp
push
ret
mov
clc
in
mov
pop
aas
push
pop
cwtl
test
rclb
cmp
dec
aaa
ret
pop
cmpsl
xor
inc
je
inc
jbe
xchg
call
inc
leave
dec
and
mov
test
idivl
inc
pop
das
mov
call
fs
lea
test
jg
and
sbb
clc
cmp
or
mov
mov
push
fwait
sub
jmp
mov
lcall
mov
in
rcrb
repz
sbb
dec
ds
arpl
int3
jecxz
loopne
add
pop
pop
push
push
pop
cmp
not
cs
rcrl
dec
nop
fisubs
dec
jecxz
add
jbe
push
and
aas
push
fmuls
cmp
repnz
sub
mov
pop
sti
pop
xchg
cmp
scas
push
shrb
or
insl
inc
mov
dec
sbb
movsl
pop
xchg
stos
lahf
pop
cmp
pusha
mov
lcall
test
adc
xchg
inc
stc
mov
aad
adc
ds
sbb
subb
pop
dec
stc
fisttpl
mov
into
mov
aaa
loop
std
ds
shr
into
mov
repz
aaa
or
pop
sahf
shl
repz
shr
cmpsb
fldl
xor
sub
ds
loopne
xchg
add
xlat
pop
ss
mov
add
push
pop
divl
je
or
cs
adc
pop
pop
ds
jb
push
fstl
xor
mov
push
int3
mov
aaa
movsl
sbb
fsubs
imul
jmp
sub
mov
pusha
es
and
lcall
mov
and
lods
pop
push
push
andb
lcall
movsb
fdivl
mov
add
roll
adcb
jmp
cld
int3
jne
cmp
repz
xchg
mov
popa
push
xchg
sti
sub
ffree
subl
stos
into
add
xor
loop
cmp
fstl
pop
push
jg
push
cmp
dec
lcall
fsub
pop
cmp
aad
xor
test
dec
adc
mov
and
push
cmp
into
aas
push
mov
div
stos
out
loope
cmp
jl
cld
sub
mov
rorb
das
pop
mov
jle
add
repnz
jp
fistl
cmp
imul
sub
movsb
mov
movsl
insl
mov
insb
push
cmp
cmpsl
jb
fildl
lahf
cltd
outsl
dec
mov
stos
popf
sub
lcall
sbb
sub
ss
inc
aaa
jmp
data16
stos
movsb
aam
test
std
sub
mov
mov
mov
pop
shrl
mov
movsl
frstor
xor
dec
aaa
ss
pushf
cmp
sbb
aam
in
or
test
mov
jne
jns
js
fsubl
ja
lcall
test
test
stos
imul
jns
dec
leave
in
jmp
rorb
mov
cli
cmp
fwait
mov
pop
stos
xor
ds
lock
cmp
les
popf
and
lcall
mov
fsubl
push
lock
into
inc
sbb
scas
xchg
inc
fldl
or
jp
ljmp
dec
cmp
ds
jne
pushf
mov
cmpsl
jno
mov
jle
aaa
xor
sbb
xlat
mov
add
out
leave
stos
cmpsb
jle
sbb
jns
push
dec
dec
mov
fsubl
xor
outsl
dec
mov
rorb
push
jne
sahf
or
mov
shrb
xchg
cli
shr
and
inc
pushf
mov
and
add
ds
dec
sub
inc
sub
lret
pop
sub
les
or
frstor
je
inc
xchg
cmp
insl
adc
movsb
mov
dec
test
mov
sub
sbbl
popf
inc
daa
adc
mov
add
rcll
cmp
subb
pop
aaa
mov
push
mov
push
pop
outsl
add
and
outsl
stos
push
jg
lret
jge
out
xor
pop
es
and
popa
fidivl
push
jp
sbb
ljmp
insl
lahf
inc
push
enter
fcmovnu
mov
cmp
sahf
add
jne
push
sarb
mov
xchg
mov
push
mov
jmp
jg
mov
inc
mov
das
mov
xor
jmp
xchg
aaa
outsl
add
sahf
into
into
cmp
jno
and
lret
mov
jnp
nop
and
movsb
mov
xor
rorl
or
ds
push
ja,pn
adc
fists
bound
je
pop
mov
rolb
push
test
mov
aam
test
lret
dec
jbe
fisttpll
cmpsb
mov
mov
dec
push
fs
aaa
imul
jns
jne
pop
mov
sub
imul
sbb
xchg
inc
xchg
aas
outsl
rcll
or
std
xor
xchg
call
fsubs
fnsave
xlat
inc
addr16
pop
cmp
sub
pop
mov
loopne
push
mov
stos
ret
in
xchg
fwait
scas
lds
push
lahf
mov
xor
xor
mov
pop
pop
and
out
in
loop
cli
sbb
in
push
in
fstps
push
mov
jbe
adc
out
sti
stos
mov
iret
mov
bound
add
loop
sub
mov
in
lahf
cmp
add
mov
pop
inc
ds
aaa
mov
dec
jmp
pop
add
inc
and
dec
push
jp
out
fcompl
pop
jecxz
cmp
mov
cmpsl
or
xchg
mov
sbb
mov
test
repz
lcall
int
iret
shlb
fsubl
popa
mov
mov
and
adc
xchg
cs
dec
into
imul
xor
pop
and
cli
cmp
pop
cwtl
fldl
in
dec
push
mov
imul
pop
popa
lea
and
xchg
lcall
call
xchg
jne
daa
add
fwait
shlb
fstpl
and
enter
hlt
cmp
adc
jae
xchg
cld
enter
pop
leave
cmpsb
imul
sbb
lcall
pop
jp
xchg
lds
pushf
fldcw
or
xlat
push
sub
inc
ret
or
push
repnz
mov
or
rorl
loopne
sbb
pusha
jle
xor
adc
adc
mov
pop
inc
inc
test
push
loope
cld
loopne
cmp
cwtl
mov
pusha
pop
jle
lcall
cltd
xchg
pop
loopne
dec
mov
mov
clc
fmul
dec
addr16
pop
lock
dec
mov
js
mov
mov
aaa
pop
testl
test
mov
xor
cmpsb
into
sbb
mov
mov
pop
insl
lcall
jle
loopne
adc
or
pop
cmp
or
leave
inc
jb
ljmp
lock
fsts
xorl
push
and
in
movsl
mov
gs
cmp
and
push
xor
pop
xor
sub
mov
jg
adc
mov
movsl
jb
jae
cmp
push
cmp
roll
scas
cmpsb
outsb
push
push
cmc
les
xor
and
adcb
jno
push
mov
inc
xchg
push
outsb
or
jbe
push
pop
lods
scas
mov
cmc
mov
popf
push
pop
inc
jle
sub
lcall
dec
add
push
dec
inc
out
insl
out
add
sub
popf
inc
mov
testl
shll
pop
mov
mov
sar
fsubp
dec
inc
jne
jecxz
icebp
fcompl
lret
jno
mov
sbb
push
sub
das
out
push
in
ss
mov
std
mov
std
mov
dec
loop
mov
je
jne
pop
mov
subb
ja
add
in
push
outsl
or
mov
mov
dec
dec
addl
stos
rcr
pop
push
jno
push
loop
inc
adc
andb
pop
mov
addl
inc
lods
sarb
dec
dec
mov
fisttpll
shrl
sub
mov
je
cmp
cs
les
cmp
test
pop
sub
cmp
hlt
and
popf
jae
aas
inc
stc
inc
dec
imul
or
lcall
pop
rcr
push
stos
mov
aaa
push
cmp
icebp
addr16
sbb
xor
lock
xchg
in
dec
adc
es
dec
adc
pop
dec
leave
lcall
cmp
in
inc
pop
lods
dec
pop
mov
dec
fistpll
sarl
mov
xchg
xchg
adc
pop
dec
call
in
daa
inc
dec
clc
xor
push
cmp
aas
and
movsb
or
push
lcall
mov
lcall
inc
rcr
mov
jge
mov
in
repnz
gs
sti
dec
out
lock
adcb
call
jp
sub
shr
lcall
cmp
pop
push
cmp
cmp
sub
sub
rorl
lcall
rorb
fstpl
mov
or
ss
call
cmp
sti
push
popa
xchg
fstpl
je
cmc
sbb
hlt
adc
push
and
pop
pop
filds
mov
aaa
out
popw
or
push
add
push
adc
arpl
mov
enter
enter
mov
sbb
mov
imul
jnp
jmp
push
mov
mov
mov
or
fsubp
aad
jle
iret
aaa
jl
dec
cmp
pop
add
pop
jae
adc
push
cmpb
mov
pop
mov
inc
and
xchg
or
push
aaa
sbb
jae
pop
sti
lods
test
adc
jle
ficoml
add
frstor
and
dec
mov
fsubs
es
aaa
jp
pop
stc
add
iret
lcall
cmp
inc
fnsave
fldenv
pushf
ds
mov
cmc
inc
ja
sub
dec
cli
fimuls
jb
inc
loopne
dec
ds
cmp
pop
movsl
pop
cmpsl
ds
xchg
lret
add
setge
fistpl
sbb
and
dec
sub
mov
xchg
scas
pop
adc
mov
push
xchg
sub
fdivr
cmp
aad
cwtl
sbb
fistpll
mov
call
dec
mov
mov
js
push
ret
jle
lods
loopne
ds
loop
xor
popa
lcall
inc
dec
cmp
cpuid
cmp
xor
xchg
pop
pop
pop
loop
stos
frstor
fmuls
cmpsl
cltd
jle
pop
jecxz
rorb
pushf
xchg
lea
lea
popf
loopne
mov
jmp
add
jecxz
mov
jle
push
inc
into
push
out
jle
adc
or
xchg
xchg
jbe
or
in
lock
add
xchg
cmp
inc
jmp
fstl
or
mov
mov
loopne
add
fisubrs
inc
lock
or
xchg
xor
int
lcall
aaa
or
inc
lcall
and
stc
pusha
xchg
in
stc
cmp
lahf
pop
lods
mov
scas
pop
fldl
fnstcw
and
aad
bound
fidivrl
out
push
inc
aas
fwait
or
jle
pop
push
jp
andl
insl
mov
in
jmp
sbb
inc
and
js
test
lods
cmp
cmp
xchg
das
shl
outsb
addl
xor
movsb
xchg
imulb
add
jg
mov
and
sbb
pusha
mov
xor
mov
mov
adc
shl
mov
pop
test
lods
mov
pop
pop
inc
jo
cmp
sub
push
inc
hlt
stos
or
mov
mov
adc
mov
inc
dec
xchg
test
cmp
ds
shrl
sbb
in
jns
pop
into
inc
sub
mov
mov
or
inc
mov
cld
push
into
bound
aaa
push
and
and
jmp
divl
ljmp
lods
fstpl
aaa
mov
push
imul
ljmp
xchg
cld
loopne
adc
fldcw
cmpsb
imul
in
push
cmp
fsubr
sub
int
pop
rorl
mov
rcll
xchg
sub
ja
in
pop
lds
aas
jecxz
inc
loopne
shlb
stos
mov
dec
cmp
xchg
lret
push
cmc
aad
jno
rclb
mov
iret
aaa
dec
mov
push
fiadds
outsb
clc
mov
add
jb,pt
jb
push
iret
lods
shrb
es
add
inc
loop
pop
or
repnz
fidivrs
cmp
jp
cld
repz
cmp
add
xchg
es
jb
push
int
cmc
gs
popa
stc
fcom
outsl
adc
jne
inc
rorb
sbb
fisubrs
fdivrp
dec
and
push
and
aaa
sub
sarb
fildll
fcomip
cmp
movsl
jmp
test
cmpb
inc
orl
imul
push
xchg
xchg
xor
mov
outsl
test
ds
lret
inc
cltd
frstor
out
mov
loope
sahf
loope
test
push
inc
aas
aaa
int
mulb
pop
fcomip
mov
fdivrl
inc
ret
mov
nop
movsl
jg
pop
rolb
fsubr
leave
push
xor
pushf
sub
xor
xchg
mov
jecxz
ret
mov
jmp
aad
aam
jbe
pop
xchg
les
repz
pusha
loopne
fs
scas
add
lahf
lcall
dec
repnz
jnp
push
fs
inc
dec
lea
lret
xlat
adc
xor
js
mov
scas
mov
mov
cli
divb
lret
enter
mov
push
push
xlat
nop
adc
pushf
mov
jno
fldcw
stos
aad
outsl
pop
inc
inc
std
clc
xchg
inc
testb
sahf
and
into
aam
adc
ds
xor
mov
pop
dec
aaa
mov
cmp
lods
ljmp
lret
std
jge
mov
mov
mov
ret
adc
mov
lods
leave
popf
cmc
insl
out
sbb
lock
ss
shrl
xchg
mov
mov
mov
or
inc
xor
nop
aaa
fcmove
jns
xor
push
arpl
loope
cmp
call
and
leave
mov
popf
mov
inc
loopne
aaa
sti
cmp
popa
jb
out
mov
cmp
cltd
shlb
jle,pn
xor
ficomps
and
lods
or
lds
push
pop
lea
ds
or
in
and
movsb
sub
pop
je
pop
xchg
aas
out
int3
cmp
orl
lcall
arpl
fnsave
cmp
add
sub
mov
push
sbb
and
xchg
fnstcw
inc
add
ret
mov
cli
ds
imul
dec
pop
fistpl
in
enter
inc
nop
fstpl
xchg
enter
and
mov
mov
scas
mov
cmpsb
xor
lea
test
inc
mov
fdivrl
cmp
movsb
mov
aaa
call
mov
pop
repnz
push
icebp
xchg
loop
jl
push
jp
cli
jp
mov
stc
push
push
pop
insb
mov
data16
call
xchg
aaa
pop
jge
adc
mov
and
mov
aaa
push
push
mov
dec
and
lcall
xchg
dec
out
popl
mov
cltd
addl
mov
adc
xchg
adc
fwait
jle
lods
cmp
nop
pop
mov
aas
xchg
jae
dec
cli
cmp
das
pop
xchg
cmp
cmp
fldl
cmp
test
pop
add
jle
sbb
mov
xchg
popf
fmul
mov
and
sbb
scas
pop
test
jge
lahf
fs
mov
jbe
push
pop
aam
cmp
sbb
add
lods
lods
pop
repnz
mov
ficoms
jle
popf
cmp
inc
mov
ffree
xchg
es
inc
lcall
clc
xchg
stc
out
dec
sub
lods
or
notb
mov
and
stos
or
jmp
jmp
push
sahf
sbb
mov
cs
mov
dec
adc
push
dec
add
fcomp
shrl
jle
or
ds
sub
mov
rcrb
aaa
cld
in
push
pop
call
inc
cmp
mov
aas
push
mov
xchg
jmp
xchg
repz
jne
cltd
inc
adc
cmp
dec
xchg
rcrb
mov
fisubrl
scas
scas
rolb
ret
icebp
pop
movsb
out
call
into
or
mov
aaa
fbstp
lock
lahf
cmpsl
push
xchg
or
ds
test
das
adc
adc
fsubs
dec
and
scas
fsubr
sbb
push
adc
insl
push
notb
aaa
ds
dec
out
adc
daa
jnp
daa
push
int
ds
shlb
test
lock
xor
imul
in
dec
cmp
arpl
mov
fmul
jo
xchg
inc
lds
push
jg
push
sarb
mov
mov
mov
lods
inc
jbe
cmp
inc
sbb
out
cli
outsb
addl
push
mov
mov
iret
and
hlt
in
and
sbb
jg
jg
scas
or
pop
cmp
xchg
add
sub
fdivl
data16
push
add
xchg
cli
mov
ds
cmp
pop
push
inc
xchg
leave
and
in
inc
dec
movsb
clc
jl
jae
jp
mov
or
fildll
push
push
stos
repz
loope
xor
dec
aad
mov
aad
xor
cmp
in
adc
cmp
push
js
add
inc
lcall
lret
xor
cmp
leave
mov
daa
xchg
lcall
shll
mov
mov
ds
inc
cmp
jae
pusha
dec
jns
or
push
xor
or
aaa
aad
hlt
inc
js
lcall
lods
scas
faddl
ror
ds
das
sub
push
sbb
dec
mov
push
pop
fwait
mov
dec
cmp
dec
aaa
loop
pop
arpl
or
shrb
test
mov
mov
pop
movsb
sahf
adc
js
sahf
arpl
sub
leave
adc
aas
ljmp
pop
sbb
adc
in
or
dec
xor
or
pop
inc
dec
add
out
ficomps
shr
jne
xchg
popf
xor
xchg
imul
insb
das
decl
or
inc
call
pop
lods
push
mov
mov
sub
or
cmc
insb
push
mov
cmp
rsqrtps
sub
in
into
filds
decl
jno
xor
lods
pop
popf
ja
in
pusha
jl
xlat
pop
shl
aaa
daa
adc
xchg
add
xor
call
subl
sti
dec
das
ret
cmp
test
push
lcall
daa
adc
push
mov
mov
and
fdivr
mov
jb
sahf
notl
lcall
inc
aas
fisttps
push
mov
arpl
push
pop
loope
xor
mov
xlat
xor
xchg
fisubs
dec
pop
lods
lock
or
cwtl
enter
and
xor
jge
push
js
lret
mov
and
mov
fcmovnu
aaa
sub
es
sbb
cmp
jnp
mov
mov
add
lcall
mov
inc
sub
add
xchg
pop
push
jb
imul
cmp
mov
or
mov
dec
dec
jmp
mov
xchg
jl
fisttpll
or
jnp
sti
dec
aas
das
xchg
int3
cmp
daa
and
je
dec
mov
pop
pop
jg
fs
jns
pop
push
mov
sbb
xor
and
push
out
add
inc
movsl
rol
push
rcrl
mov
pop
pop
push
imul
pop
cld
xchg
sbb
mov
faddp
addr16
cmp
jge
int3
push
inc
jge
push
dec
xor
mov
out
mov
hlt
push
dec
stc
jecxz
lods
subl
jmp
inc
pop
test
or
lea
ds
bnd
and
repz
push
mov
fcompl
je
call
cli
fildl
pushl
fwait
add
and
fmulp
cmp
and
add
jae
xor
pop
pop
jbe,pt
hlt
mov
fisubrl
aaa
and
sti
cmp
test
jo
mov
cmp
fidivl
cmpsl
pushf
sbb
push
sub
cmp
sbb
and
pop
js
mov
pushf
loope
ret
xchg
adc
loop
rclb
mov
jle
mov
loop
ljmp
pop
cmc
add
sbb
cmp
ds
cltd
mov
mov
fisubl
cmp
jg
aaa
xchg
nop
dec
jmp
mov
add
fnsave
out
mov
hlt
aaa
push
mov
dec
js
fimuls
jmp
inc
mov
jge
frstor
notb
mov
pop
fwait
repz
fsubrl
shrb
insl
or
and
and
aaa
inc
enter
jp
cmp
jns
stc
adcb
mov
movsb
and
js
outsl
out
aaa
push
jbe
notl
dec
adc
lahf
xor
arpl
rolb
xchg
sub
lcall
arpl
push
inc
or
sbb
in
push
icebp
dec
push
add
stos
mov
iret
mov
fcompl
xor
mov
add
dec
sbb
movl
cld
dec
push
mov
push
icebp
test
mov
roll
dec
nop
sbb
bound
mov
xchg
jge,pt
imul
fnsave
arpl
jmp
cmp
adc
aaa
daa
pop
xchg
bnd
lahf
in
push
push
pop
pop
mov
fldl
roll
out
cld
sti
inc
mov
loope
inc
jnp
rcll
xor
bound
sbb
pop
ds
in
mov
mov
fstl
out
cmp
adc
andb
shll
cld
popf
dec
lret
rcrl
xor
movsb
scas
call
mov
lcall
adc
fucom
adc
jbe
push
jle
rorb
and
push
sub
cmp
pop
fstpl
daa
repnz
push
aaa
xor
out
icebp
jecxz
xchg
lcall
cmp
loope
cmp
lcall
cmp
into
repnz
cli
hlt
lret
clc
dec
jmp
and
pusha
mov
filds
cmp
cld
shlb
sub
mov
mov
mov
lcall
out
cs
lret
mov
push
cmpsb
sub
fnstenv
and
mov
shl
mov
xchg
inc
outsb
or
xchg
sbb
sbb
sbb
ds
or
popa
dec
arpl
add
mov
jb
sub
pop
mov
jb
hlt
mov
sar
repz
ljmp
out
stc
xor
faddl
shrb
mov
lock
sbb
sbb
pop
test
mov
popf
out
pop
cmp
jno
arpl
mov
sub
pop
jg
out
mov
arpl
repz
outsb
fstl
imul
loope
push
popa
clc
lea
je
lods
out
stos
ds
xor
aaa
orw
jecxz
lock
xchg
fnsave
loop
push
adc
mov
lcall
movsl
loop
shrl
insb
and
ss
jle
fs
imul
sub
push
xchg
sbb
stos
stc
out
leave
inc
mov
xlat
mov
jecxz
movsb
cmpsl
test
dec
repnz
inc
rep
mov
xchg
mov
loope
fstpt
jmp
cwtl
stos
jl
push
hlt
pop
pop
or
iret
jnp
stos
dec
test
mov
call
xor
ret
mov
inc
lahf
aam
push
cmp
jae
sub
pop
rorl
cmpsl
or
ds
mov
jecxz
lock
xor
pusha
imul
lea
mov
gs
pop
pop
push
test
cld
cmp
or
das
hlt
aaa
adc
inc
shrl
insl
lcall
mov
cmc
cmpsl
mov
in
xchg
fsubr
ljmp
in
xchg
pop
push
imul
dec
dec
sbb
mov
std
jae
fistps
mov
loop
or
mov
clc
lds
sbb
enter
pop
inc
cld
cmc
or
fcompl
and
ljmp
decl
inc
mov
sub
sub
fnstsw
inc
push
test
scas
lea
imul
push
loop
jmp
popf
ss
ret
test
dec
jg
das
filds
aam
test
dec
mov
das
jns
lcall
cmp
push
jo
lcall
xchg
mov
aam
mov
repz
incl
adc
pop
and
mov
inc
aaa
fidivs
mov
mov
pop
std
push
pop
mov
pusha
push
xchg
bound
lods
lcall
jo
repnz
sbb
jnp
push
dec
gs
imul
adc
mov
fisubl
sbb
pushf
out
stos
rcrb
repz
jp
dec
sbbb
cli
stos
ret
int3
es
jecxz
jne
insl
dec
mov
bnd
test
pop
push
test
fistl
sahf
cmpl
jp
jnp,pt
test
jo
dec
aaa
jge
lds
pop
push
movsb
out
mov
js
and
mov
movsb
mov
cs
inc
movsb
aam
xor
sbb
jmp
je
call
xchg
mov
inc
in
dec
add
shrb
dec
xchg
aad
je
test
adc
jns
das
or
pop
or
push
enter
inc
mov
ljmp
inc
cli
outsl
cmp
movl
in
cmp
lods
mov
fsub
mov
sbb
pop
push
jmp
ds
daa
mov
loop
dec
cmp
pop
fnsave
jl
dec
jno
adc
and
mov
mov
sbb
js
test
dec
jb
jle
nop
cmc
xchg
ficoms
pop
adc
xorb
cltd
scas
pusha
mov
lcall
jo
jo
adc
shll
sub
dec
repnz
js
jo
test
hlt
xor
loop
outsb
inc
repnz
pop
cmp
mov
rcrl
xor
push
movsb
pop
inc
fnsave
dec
das
inc
inc
in
fs
inc
pop
in
push
mov
inc
cmp
shlb
or
inc
add
xchg
call
test
jle
sahf
outsb
ds
rcrl
mov
cmp
cs
test
inc
lcall
sti
mov
xor
push
dec
aam
arpl
dec
fisubrl
movl
add
push
adc
idivb
and
pop
pushl
mov
mov
sahf
jle
es
int3
fisubl
lahf
inc
inc
jg
dec
xor
mov
xor
cli
lods
dec
fwait
add
out
push
sbb
je
inc
sarb
xchg
es
jle
or
or
addr16
dec
mov
pop
nop
jb
lcall
insl
inc
out
xchg
ds
dec
dec
aas
mov
xor
push
adc
lahf
js
pop
pop
push
cmp
cmp
xchg
xchg
subl
inc
jg
cld
and
dec
xlat
mov
orl
pop
sbb
sbb
mov
sahf
lods
or
insl
mov
or
sahf
jb
popf
divl
mov
fstpl
decl
dec
lret
jo,pt
outsl
lds
fwait
xlat
inc
sbb
cmp
scas
add
addr16
int
mov
add
pop
dec
inc
inc
mov
out
sahf
das
ret
stos
push
and
loop
arpl
int3
outsl
aaa
xchg
pop
cmpsb
xorl
inc
lock
jle
cmp
insb
sti
mov
rcrb
scas
scas
push
dec
push
lcall
inc
pop
fldt
aaa
ja
adc
sbb
lret
lcall
jg
jmp
add
movsb
pop
jo
fisttpll
stos
jg
sub
push
push
ret
push
call
lods
inc
xchg
adc
lcall
scas
jl
xchg
dec
jge
pop
test
int
mov
rorb
lea
fisubrs
and
dec
aas
push
fstpl
insb
pop
cmpsb
cmp
lods
push
ffree
inc
push
mov
push
fwait
push
test
int3
pushf
dec
mov
jmp
sub
and
xchg
popf
mov
mov
xchg
mov
ds
pop
lcall
movsl
sti
sbb
lcall
rolb
pusha
mov
pusha
sti
jne
cmp
pop
pushf
adc
ja
sbb
in
sbb
fcoml
aas
cmp
mov
inc
inc
push
in
repnz
lcall
rorb
pusha
mov
daa
mov
and
jne
xlat
aaa
mov
stos
loopne
ja
fistpll
imul
leave
push
ds
iret
sub
daa
mov
je
xchg
and
xor
add
push
xchg
cli
int3
ret
pop
xor
sbb
cli
mov
and
lcall
movsl
ljmp
and
popa
push
ds
and
dec
mov
inc
dec
cwtl
aam
rcrl
inc
inc
sub
clc
jne
mov
cmp
lcall
test
pushf
pop
jmp
xchg
hlt
jge,pn
ds
dec
nop
jno
jne
push
aas
gs
fmull
and
aas
arpl
cmp
and
mov
add
mov
dec
dec
push
lahf
dec
xchg
add
sbb
lcall
aas
push
in
xorb
inc
insl
lcall
test
push
ret
lcall
or
es
insb
in
je
cmp
in
adcb
repz
out
or
inc
cmp
mov
jp
lcall
push
jno
cmp
or
pop
in
pop
sti
adc
cmp
loop
fcoms
iret
mov
jbe
push
cmp
mov
imul
ds
pop
rorb
add
shll
push
pop
pop
ds
inc
rorl
mov
sub
fst
push
loopne
sti
in
loop
push
mov
loopne
repz
fnsetpm(287
push
sbb
sbb
hlt
arpl
xor
je
adc
sbb
cli
dec
dec
scas
push
xor
add
das
mov
push
ds
push
fstpl
mov
adc
mov
outsb
rolb
fstpl
xor
dec
cmp
out
decb
jge
sub
test
push
subb
imul
mov
aas
push
mov
cmp
push
sub
push
jo
nop
aad
mov
out
popf
cmpsb
jge
popf
xchg
pusha
call
xchg
dec
jno
jmp
mov
adc
mov
sbb
dec
xor
cltd
push
jbe
into
or
out
push
dec
ja
and
ret
jecxz
lea
cmp
push
jmp
std
and
cwtl
xor
mov
pop
loop,pt
ljmp
adc
lods
call
dec
xorl
in
stos
outsb
sbb
ljmp
adc
mov
cmp
sbb
jge
aaa
pushf
pop
mov
shl
fisubl
lcall
shr
inc
lret
sahf
xchg
push
cmp
pop
inc
fs
jnp
call
mov
jmp
jbe
int
pushf
rorb
fldl
cmpsl
outsl
flds
sar
addb
ret
jbe
pop
mov
scas
je
push
push
jae
pop
aas
popf
aad
xchg
push
and
test
test
cmp
adc
adc
fnsave
mov
sub
sbb
jb
aas
movsl
inc
and
dec
scas
ljmp
pop
nop
mov
fwait
mov
lret
add
ja
mov
mov
lds
cmp
popf
sub
sbb
pop
ds
wbinvd
mov
push
push
mov
dec
ret
lea
scas
xor
scas
pop
mov
inc
jle
inc
aam
stos
add
adcl
mov
adc
jbe
fwait
arpl
inc
push
push
cmp
push
cmpsl
call
add
mov
aaa
adc
cltd
das
push
pop
test
sbb
cmpsb
aaa
ljmp
cmp
pusha
or
push
out
jg
jecxz
or
push
stos
popf
fistl
out
pusha
pop
cmpl
sbb
leave
lea
sbb
pop
rcrl
outsb
mov
ljmp
lret
cmp
or
cmp
repnz
cmc
dec
pop
push
add
xlat
aaa
cli
sahf
push
push
shr
push
inc
mov
lcall
jae
mov
cmpsl
divb
dec
cmp
ss
in
cmp
inc
in
fdivr
imul
adc
outsl
mov
xor
mov
pop
loop
jecxz
dec
mov
int3
faddl
adc
cwtl
es
mov
cmp
rorb
mov
outsb
dec
push
popf
inc
test
inc
in
and
not
jbe
lcall
dec
sbb
and
sbb
add
push
cli
aas
aaa
popl
add
push
das
add
cld
jae
fstl
adcb
in
ljmp
dec
in
insl
andb
fisubrs
mov
mov
cld
insb
rorb
movsl
into
cmpsl
cmpsb
fcoml
dec
gs
in
sub
mov
divl
mov
lock
iret
dec
mov
aaa
jp
test
jno
lret
push
lock
sbb
push
and
adc
push
lds
cmp
push
decb
mov
jecxz
out
add
mov
iret
filds
add
jp
aas
inc
xorb
jne
andpd
pop
test
and
stc
vmwrite
add
stos
lcall
push
cltd
fnsave
int
push
add
add
and
aas
stc
aaa
fidivrs
and
dec
rcrb
push
scas
jge
stc
push
dec
jp
dec
ja
mov
ds
and
aaa
enter
scas
in
xchg
lahf
lcall
je
fnstsw
lea
imul
mov
int
dec
test
mov
mov
repz
and
and
out
jmp
mov
loopne
or
in
imul
cli
pop
add
push
or
lret
mov
negb
mov
out
sti
jns
jmp
adc
stos
fdivrs
scas
sbb
push
lret
inc
loop
xchg
xrelease
ja
mov
aas
gs
push
stc
pop
scas
imul
jno
xchg
xor
inc
insb
sub
fmull
adc
arpl
les
out
hlt
push
xchg
and
icebp
dec
adc
sarb
cmp
inc
inc
mov
push
jns
shlb
adc
outsl
inc
push
jns
out
cli
pop
dec
aam
inc
xchg
call
add
das
jns,pt
popf
jmp
mov
aas
mov
jmp
ds
sbbb
jp
fwait
or
insb
jge
idivl
aam
cmpsb
or
xor
jg
mov
jmp
addr16
mov
sarb
insl
ds
repz
jb
add
leave
lcall
leave
xchg
in
fwait
cwtl
ja
and
mov
int3
lret
fsubr
cmpsl
adc
jno
xor
inc
dec
inc
gs
out
mov
movsl
dec
hlt
dec
add
pop
sbb
testb
mov
push
lods
jno
push
fstpl
mov
dec
fs
sub
cmp
sbb
rcll
sbb
jecxz
push
test
jp
jnp
ds
cmp
jo
or
call
pop
decb
adc
mov
mov
jl
fsubrs
add
outsl
and
je
jmp
cmp
aam
outsl
out
mov
lcall
aas
push
fbstp
loope
sar
mov
or
hlt
pop
fstp
and
inc
lock
dec
sub
aas
inc
add
stos
inc
lahf
cltd
icebp
pusha
out
leave
aaa
loope
out
inc
mov
sbbb
push
pop
cmc
lcall
repnz
mov
scas
dec
loopne
punpckhdq
mov
mov
loope
aas
aaa
sbb
jge
ficoms
test
hlt
inc
sbb
adc
shll
aas
mov
movsb
sbb
aaa
mov
test
cmp
or
mov
mov
jae
test
and
dec
sub
xchg
lcall
and
fmul
cmp
mov
push
ds
fcomi
rorb
rcr
clc
mov
mov
in
aad
jl
jb
test
imul
in
jle
cld
mov
test
adc
xor
cmp
je
pushf
outsb
movsl
xor
aam
add
cld
test
ficoms
pop
push
imul
xor
sub
iret
mov
mov
out
mov
adc
jnp
lds
mov
test
inc
mov
lcall
out
faddl
cmp
mov
les
insl
jns
rol
mov
loopne
int3
fistps
pop
cmpsb
pop
dec
mov
adc
js
jecxz
mov
cld
xchg
lcall
adc
out
adc
int3
mov
pop
sbb
push
sub
jo
xor
lcall
clc
mov
aas
mov
aaa
out
ficoms
mov
cmc
shl
mov
les
lock
jnp
lret
lahf
push
mov
jecxz
inc
sahf
inc
std
mov
fidivl
xor
pop
jg
hlt
insb
popa
das
in
rorb
sbb
aas
ds
adc
aam
hlt
mov
jl
aad
xchg
hlt
adc
cmp
fwait
mov
icebp
sub
iret
sti
shrb
nop
dec
ret
mov
push
xor
mov
aaa
int
sbb
sub
fs
leave
push
cmp
movsl
pextrw
std
sbb
fnsave
ss
adcl
fimuls
or
push
jns
rcll
and
fwait
rcrl
add
adc
jl
xor
and
mov
int3
push
nop
popa
ja
pop
ljmp
jecxz
lods
incl
ret
cmp
push
enter
cmpl
cmp
cli
or
push
pop
adc
stos
lahf
mov
in
mov
mov
cmp
dec
pop
mov
sbb
in
inc
jg
stos
sbb
inc
push
daa
out
aaa
push
ljmp
mov
adc
lcall
stos
sahf
enter
cmp
mov
scas
ja
shll
jno
jae
in
fmull
mov
cmpb
sbb
popf
inc
jbe
inc
outsl
cmp
pop
sub
and
fstpl
xchg
inc
mov
pop
ret
subl
push
and
xchg
fwait
cmp
mov
jns
pop
push
xorl
jnp
sub
jo
jo
mov
mov
aam
jb
add
mov
and
dec
dec
xchg
cli
mov
mov
and
ljmp
mov
mov
daa
lcall
mov
frstor
ljmp
mov
int3
push
scas
rcll
jge
ds
mov
dec
sbb
div
mov
sbb
inc
aaa
inc
pop
jp
out
out
stos
test
pop
rcrl
cmp
es
sub
fs
test
scas
std
decl
repnz
iret
lcall
jae
cmpsl
jmp
and
in
inc
push
mov
ds
pop
and
faddl
in
out
mov
test
js
lods
add
movsl
jo
cmp
mov
test
repnz
mov
mov
xor
shl
mov
inc
test
xor
cmp
dec
nop
idiv
fwait
rcrb
jae
in
or
pop
push
es
mov
pusha
jg
pop
mov
ret
pop
or
and
xchg
inc
in
mov
sti
pop
ljmp
popf
push
sbbl
xchg
jp
pop
cwtl
inc
out
daa
shrl
mov
cmp
ds
rcrb
outsl
inc
inc
movsl
ffree
sbbb
mov
cld
fstpl
mov
insb
jl
aad
cmp
jae
pop
dec
fldcw
cmpsb
hlt
inc
sbb
stos
jae
arpl
and
setp
dec
xor
push
scas
mov
cmpsb
jne
cmc
inc
pop
ljmp
inc
fdecstp
push
aaa
and
addb
and
in
inc
lcall
pop
popf
and
dec
xor
fists
aaa
sbb
stc
sbb
lds
jbe
adc
jbe
mov
adc
cmpsb
push
aaa
sub
movsl
mov
jns
mov
cmp
stos
fidivrs
cmp
fdiv
sub
rcrl
push
stc
lret
andl
sti
movsl
push
sarb
dec
inc
jmp
push
push
int3
dec
bound
mov
fcom
sub
xor
addr16
mov
movsl
add
stos
pop
inc
dec
xor
cld
mov
jle
fstpt
cmpl
inc
lret
gs
mov
sbb
jge
cmpsl
les
clc
test
add
dec
push
ds
fstps
or
fadds
filds
dec
pop
sub
ret
fnstsw
add
mov
add
stos
adc
add
push
incl
fnstenv
lcall
call
ljmp
pop
mov
pushl
es
scas
cmp
push
inc
push
or
mov
not
dec
dec
ja
mov
ja
pop
scas
mov
sbb
mov
call
ja
sbbb
das
outsb
ss
pop
out
scas
lret
insl
mov
mov
fwait
xchg
mov
jne
rclb
scas
and
push
fstpl
mov
and
jno
dec
xchg
mov
addr16
xor
lret
lods
divb
push
and
pop
or
jl
in
rorb
ret
pop
into
jnp
pushf
or
lock
sbb
orb
mov
lods
in
lret
mov
inc
push
mov
adc
and
scas
inc
negl
ljmp
push
mov
cmp
pop
jo
cmp
jmp
inc
test
lods
movsl
cmp
popf
aaa
mov
or
enter
jecxz
sti
fwait
repz
fucomip
notl
aaa
ljmp
mov
fs
setb
xor
shlb
xchg
arpl
pop
addl
jno
push
outsb
icebp
fxch
cmpsl
faddl
inc
push
xchg
out
out
or
bound
inc
outsb
aaa
pop
sbb
add
push
movsl
mov
std
mov
jno
lods
pop
mov
mov
ds
jg
mov
inc
push
lret
stc
or
or
add
and
dec
lock
xchg
inc
int
lods
dec
mov
test
mov
es
cmpsl
aas
mov
popf
loope
xchg
loope
jge
inc
divb
add
lahf
jmp
and
xor
test
fcom
loopne
test
pop
iret
testl
ja
ja
sarb
and
je
pop
jnp
int3
jp
inc
popf
push
pop
push
sub
or
call
fadds
mov
pusha
bound
push
pop
js
sbb
sahf
int3
xor
pop
test
lret
lret
pusha
fsubl
cmpsb
jne
sub
outsl
push
push
test
popa
dec
jmp
dec
popa
insl
aaa
push
adc
cmp
pop
aas
aaa
incl
push
pop
incl
sbb
js
mov
mov
fwait
push
jns
mov
sub
outsl
and
test
pop
xor
in
or
jecxz
std
jle
ds
lahf
pop
pop
add
sarl
push
outsb
jb
int
sub
mov
dec
in
pusha
push
push
jb
test
inc
jbe
mov
inc
test
inc
jle
mov
mov
mov
mov
dec
mov
dec
in
int
push
lods
push
ror
fdiv
push
imul
shl
mov
inc
pop
shrb
in
jg
fcoms
insl
cmp
inc
pop
sbb
aas
xchg
xchg
push
mov
mov
out
jle
push
shl
das
mov
xchg
out
and
aaa
pminub
push
test
aaa
jp
movsl
xchg
push
shlb
stc
cmp
mov
push
lcall
sub
es
sub
jge
inc
adcl
idivl
rcrl
pop
mov
into
fsubrl
sbb
dec
cmp
arpl
jmp
push
push
aaa
mov
push
cld
shlb
or
dec
mov
rclb
cmp
jbe
xchg
push
push
xor
andl
mov
cwtl
cmp
xor
adc
imul
or
sub
aaa
icebp
das
inc
imul
mov
sbb
scas
inc
imul
dec
fcmovb
mov
mov
icebp
lods
jbe
stos
adc
sbbb
and
add
std
dec
ret
test
out
or
mov
pusha
rcr
dec
mov
ds
mov
sub
mov
fmull
fisttps
mov
push
fstpl
stos
scas
mov
in
fwait
shll
das
push
cmp
movsl
mov
lock
popf
or
xor
icebp
fcoml
call
aas
jge
jecxz
dec
push
icebp
mov
shll
ds
mov
sbb
insl
add
xor
jge
test
pcmpeqw
dec
loopne
aaa
repz
jp
dec
pop
leave
test
sbb
out
lahf
out
push
ja,pt
or
leave
sbb
pop
sub
inc
daa
insb
mov
mov
lcall
arpl
push
lahf
aaa
ljmp
sbbl
cld
imul
add
in
jmp
mov
aaa
es
jmp
rolb
das
mov
lds
stos
cld
jbe
lods
jecxz
xor
xchg
in
imul
inc
or
call
sub
sbb
insl
sahf
xchg
psubusb
cld
pop
cmp
loopne
push
fwait
pop
mov
mov
fs
dec
cli
cli
adc
movsl
fdivrl
jae
xor
aas
jae
push
and
xlat
shlb
cmp
pop
sub
gs
ds
sbb
fwait
stos
add
or
ds
movsb
adc
jp
in
mov
lcall
or
lea
mov
xor
mov
push
mov
aas
push
pushf
fwait
incb
xor
ja
cmpsb
je
push
push
xor
push
dec
xchg
jae
pop
cmp
add
xchg
inc
mov
push
xor
inc
pop
dec
mov
push
out
frstor
cmc
dec
imul
mov
push
cmpl
mov
fstp
loop
sub
jle
pop
mov
aaa
mov
dec
fadd
mov
test
negb
pop
test
push
rclb
arpl
sti
cmp
mov
divb
inc
inc
dec
int
mov
xchg
inc
aam
pop
fsubl
aas
xchg
test
addr16
ss
pop
cmp
lahf
inc
fstl
cld
sub
jecxz
lret
cmp
imul
sbb
pop
push
inc
mov
rcrb
xchg
pop
push
inc
inc
mov
insb
push
push
sbb
les
pop
and
inc
sbb
fs
ja
daa
mov
aaa
out
inc
inc
cld
mov
and
add
aaa
sbb
fistps
inc
ret
loopne
jnp
cltd
jg
fcoms
lods
mov
mov
enter
jg
inc
out
lret
lret
ljmp
push
inc
loope
mov
pop
das
mov
mov
jmp
fcoml
mov
ds
sub
push
mov
dec
dec
aaa
inc
pop
rcrb
cmp
dec
ds
aam
push
jg
mov
cmp
bound
test
notl
cmp
cli
cltd
inc
dec
lods
mov
or
and
daa
pop
popfw
test
lcall
clc
test
movsb
push
loop
mov
js
imul
int3
int3
aaa
sbb
int
mov
xor
or
cmp
and
lahf
jno
sub
aam
outsl
test
test
out
xchg
imul
loopne
cmpsl
dec
ljmp
xlat
pop
xchg
cmp
mov
push
clc
or
mov
mov
loop
ja
push
push
sub
sub
jg
mov
push
sti
pop
push
inc
mov
lods
sub
jg
xor
lods
and
xchg
ret
or
jg
mov
mov
or
dec
negl
xor
ficompl
adc
mov
cltd
pop
push
lahf
call
lret
xchg
test
inc
in
hlt
leave
test
ret
sahf
mov
dec
push
push
pop
jmp
mov
mov
dec
pop
pop
xorl
inc
xor
jae
cmp
inc
stos
in
mov
lcall
jecxz
xor
cmpsb
ljmp
std
push
mov
sbb
paddusw
jp
aas
cmp
adc
shl
mov
xchg
aaa
and
and
sub
mov
aam
int
cmp
decb
stos
stos
mov
ret
add
cmp
adc
xchg
push
aam
inc
mull
fists
lcall
ja
dec
adcb
negl
or
add
dec
repz
or
mov
sub
inc
and
jl
mov
movsl
jno
inc
push
xchg
pop
jb
sub
hlt
adc
sahf
jle
pop
inc
icebp
test
fsubp
les
push
xchg
pop
adc
sub
ja
outsl
ds
fdivp
loopne
dec
lods
aaa
add
fwait
sbb
cmc
lods
cmp
stos
jle
cmpsb
out
push
add
cmp
ficoms
inc
in
pmaxub
fdivrl
jno
fs
pusha
and
mov
add
lcall
cli
jb
sbb
inc
shll
jo
or
dec
jg
iret
inc
and
or
xlat
aas
xchg
lahf
push
out
push
adc
pop
jnp
icebp
in
and
mov
into
jno
dec
frstor
inc
fmul
hlt
inc
pop
shlb
rolb
ret
adc
xorl
and
pop
idivl
push
jle
mov
push
cmc
mov
jne
jns
jge
jbe
push
mov
adc
lret
bound
into
or
sbb
rcll
inc
pop
dec
mov
adc
add
sub
add
les
inc
sti
fstps
jbe
test
xor
dec
lret
arpl
lods
cmp
psrad
dec
jl
dec
add
rorb
dec
ret
add
mov
add
imull
cmp
loope
dec
inc
rcrl
and
pop
dec
insb
sbb
push
push
sub
and
mov
test
ss
push
push
insb
or
test
pop
decb
js
cmp
ja
aaa
das
popa
mov
js
inc
xchg
mov
out
lods
inc
push
xchg
rolb
push
adcb
or
mov
cmp
and
push
mov
cli
push
fcmovne
xchg
mov
shll
mov
aam
push
ficompl
scas
test
inc
mov
fmull
xor
and
aam
movsl
dec
or
in
negb
ds
out
scas
xchg
jg
cmp
arpl
lock
mov
aas
mov
inc
dec
cltd
lods
mov
and
sbb
pop
sbb
sbb
adc
pop
and
inc
stos
mov
xor
bnd
and
cmp
aas
pop
mov
cld
xor
bound
push
push
ss
shrb
arpl
mov
add
and
dec
mov
rcl
sbb
adc
and
rclb
cmpsb
les
mov
mov
pusha
aad
mov
int
inc
lcall
push
push
cmp
and
mov
lcall
jae
pop
lcall
aaa
in
xchg
pushf
orl
rorb
js
adc
push
ds
push
cli
outsl
lret
lcall
aaa
fnsave
cmpb
lods
xchg
shr
sbb
push
pushf
jo
push
loope
pop
xchg
int3
xlat
mov
loop
push
xchg
rolb
popa
jae
sbb
cmp
scas
jne
lds
mov
sub
mov
lcall
mov
fsubrl
insb
xor
adc
inc
in
and
rcll
dec
stos
ds
loopne
push
jno
push
aad
loope
dec
dec
rcrl
push
or
fs
jp
push
mov
mov
fwait
and
xor
and
inc
add
inc
inc
dec
jnp
arpl
push
inc
inc
int3
or
pop
push
adc
jnp
and
cmp
js
push
sub
or
push
shlb
push
xor
fldt
gs
mov
mov
rcrb
daa
cmpb
ds
pop
test
inc
repnz
scas
add
sub
out
pushf
out
jae
nop
cmp
gs
stos
stos
push
push
filds
es
push
les
addr16
mov
sbb
dec
inc
loopne
inc
js
repnz
inc
adc
shll
mov
adc
push
push
sahf
cmp
mov
xorb
jecxz
mov
ljmp
and
push
push
clc
aaa
mov
add
dec
and
add
clc
pop
sbb
push
jns
loop
mov
aam
insb
mov
pop
lahf
sahf
cwtl
pop
mov
cmp
inc
cmpsb
test
imul
push
mov
or
jle
int3
aam
sbb
ds
clc
ds
fiaddl
sahf
inc
add
cmp
clc
jge
test
cmp
xchg
sti
jns
or
popa
test
mull
arpl
int
lds
add
lcall
icebp
lcall
push
arpl
jle
pushf
cmpsl
scas
push
in
arpl
push
inc
adc
repnz
aaa
cmp
adc
stos
xchg
popf
inc
filds
xchg
dec
sub
xor
pop
scas
popf
fstl
loope
in
mov
mov
es
fldl
aaa
movsl
enter
cmpsl
loopne
imul
sbb
negb
pop
mov
lret
sahf
dec
mov
add
aaa
clc
lcall
data16
inc
movsl
fwait
and
jnp
or
clc
sbbl
lahf
mov
mov
sub
ljmp
mov
cmp
cmp
fnstsw
push
test
jmp
sti
inc
rorb
fnstsw
mov
imulb
cmpsl
add
stos
add
jne
push
pop
sub
lock
sub
jle
faddl
std
rorb
popf
pop
movsl
pop
sahf
pop
repz
lock
xchg
fstpl
lret
sti
clc
lds
add
repnz
sarl
jne
dec
mov
and
sbb
and
mov
test
sar
test
or
mov
jae
dec
ret
jecxz
dec
icebp
dec
sub
or
out
xor
ret
sarl
or
aaa
sti
jo
shlb
xor
lock
popa
mov
jbe
lcall
jle
jbe
xor
out
adc
cmpsl
lods
fcmovu
xchg
cmp
push
cmpsb
sub
lcall
scas
enter
ficomps
push
hlt
fnstenv
fisubl
mov
pop
pushf
and
or
lds
sbb
repnz
cmp
cmp
mov
pop
cwtl
sbb
cmp
xlat
out
dec
pop
clc
int
push
and
fisttpl
mov
roll
les
imul
movsb
fstpt
mov
notl
cli
add
mov
push
mov
xor
inc
push
xlat
fcompl
inc
xchg
nop
ds
xchg
or
cmp
push
daa
enter
fdiv
loope
leave
push
in
clc
fcmove
scas
in
ss
mov
and
push
lcall
ss
lods
lahf
sahf
popf
and
clc
inc
cmp
sub
pop
push
pusha
imul
subb
int3
mov
popa
dec
lcall
idivl
mov
fisubl
addr16
popa
dec
inc
push
insl
in
pop
fistpl
mov
jecxz
sbb
lcall
lcall
mov
fdivr
add
dec
xor
scas
clc
sbb
mov
clc
insl
cmc
and
rcr
int
push
pop
mov
out
cmp
arpl
lea
ret
pop
orl
mov
push
xor
inc
or
inc
xchg
arpl
aam
dec
mov
adc
add
arpl
push
inc
lcall
rcr
clc
xor
adc
movsl
cmp
xchg
into
jp
std
push
jo
fnsave
popf
mov
push
aad
loope
jb
or
cmp
mov
das
pop
dec
scas
in
mov
pop
cmp
xchg
mov
pop
in
sbb
je
gs
cmp
in
cs
jae
push
insb
inc
sub
jecxz
pop
sub
daa
sbb
inc
shrb
mov
jg
in
jge
jmp
inc
push
ret
add
sbb
ds
xlat
call
or
sti
dec
mov
jne
std
sub
jmp
pop
bound
sbb
inc
lcall
arpl
xchg
faddl
sub
cli
fstps
xchg
andl
stc
int
cmpsb
xor
push
mov
dec
test
icebp
xorb
sbbb
mov
xorb
subl
icebp
dec
mov
icebp
add
pop
mov
outsl
scas
or
outsb
mov
das
scas
aad
rol
aaa
and
sub
lea
les
es
jl
pop
and
std
and
loop
in
mulb
jne
aas
or
test
movsb
pop
sbb
icebp
jge
dec
rol
outsl
mov
incl
mov
mov
fsubrl
mov
cmp
jmp
mov
testb
je
mov
in
mov
mov
cmp
cli
inc
jo
mov
ds
out
and
pop
sub
sbb
insl
pop
or
mov
sub
stos
sbbl
mov
dec
inc
aas
outsl
fcoms
imul
ret
clc
jp
inc
push
shl
add
push
lcall
cmp
mov
mov
jecxz
dec
lcall
icebp
pop
cli
inc
sbb
in
inc
mov
addr16
jnp
mov
mov
in
les
dec
bound
in
std
sysret
pop
outsb
mov
call
lahf
pop
sub
mov
and
out
call
mov
inc
fwait
adc
rclb
pop
jge
mov
mov
inc
pop
sbb
adc
sub
rcrb
rorl
push
push
lcall
mov
cltd
mov
jbe
lret
jl
rsm
fadd
imul
and
mov
iret
jb
cmp
cmpsl
cwtl
rorl
call
cmp
mov
adc
loop,pt
adc
xchg
sarl
mov
xchg
movsl
daa
add
sub
mov
lcall
data16
popf
and
lea
repz
jne
mov
neg
insl
pop
scas
adc
ljmp
mov
xlat
fiadds
adc
insb
mov
scas
ljmp
cmp
jmp
cli
bound
or
cmp
jae
pop
ficomps
sahf
cmp
push
jbe
push
push
sbb
cmp
lods
sahf
sbb
sub
ds
add
fwait
and
into
fs
jl
xchg
pushf
lods
dec
mov
add
inc
scas
xchg
pop
sub
divl
nop
test
in
xchg
xchg
jle
dec
pusha
fldl
push
mov
inc
mov
out
testb
mov
cmpb
pop
xchg
jp
imull
les
mov
xor
gs
das
push
pop
jo
xor
mov
data16
pshufd
mov
xchg
jnp
cmp
pop
movsl
test
loope
popa
enter
push
dec
ja
clc
pop
js
popa
jg
xchg
cmp
or
sub
int3
pop
dec
loopne
xchg
lods
scas
test
cltd
sbb
mov
ss
xlat
popa
and
inc
or
inc
add
es
mov
ret
dec
and
jae,pt
xor
imul
jbe
fists
inc
jle
in
in
cld
push
aam
call
inc
aas
push
mov
inc
lcall
dec
mov
test
js
hlt
aad
or
aas
sbb
jecxz
lds
add
clc
inc
mov
push
enter
lods
lahf
mov
inc
inc
sbb
push
arpl
inc
stos
fidivrl
in
std
xor
pop
pop
inc
push
adc
mov
pop
lcall
bound
xchg
shlb
pop
loope
ds
adcb
mov
lcall
and
jmp
out
sbb
cmp
popf
xchg
sti
pop
ljmp
cli
xchg
cmp
iret
rcll
fisubrl
pop
lcall
gs
mov
rol
ficoms
dec
xor
ljmp
jb
fisttpll
cmp
mov
out
jmp
cmpl
sti
jb
pop
int3
int3
pop
std
pop
mov
dec
movsb
ret
movsb
mov
loopne
fmull
aaa
insb
in
in
push
push
push
daa
aas
lcall
and
daa
movsl
push
aaa
add
ds
leave
mov
jecxz
inc
xchg
fsubrl
push
pop
add
inc
cli
out
out
sbb
ffree
sbb
in
insb
nop
cmpsl
rcrl
sbbb
cmp
mov
mov
pushf
lcall
mov
sti
mov
jno
out
mov
or
int
add
rcrl
fisubrs
push
bound
and
sub
mov
and
test
pop
cltd
mov
cmp
divl
es
enter
aam
test
adc
inc
jne
mov
ds
js
xchg
lea
ss
arpl
jae
lcall
inc
fldl2e
movsbl
movsb
push
and
stc
mov
insl
sbb
sbb
movups
popf
leave
inc
inc
pushf
add
sbb
cmp
test
movsl
mov
shrb
cmp
mov
ss
popf
nop
push
cmc
ret
mov
pop
pop
xchg
les
or
pop
js
scas
loope
repz
scas
sti
xchg
push
mov
fucomp
fucomip
mov
jecxz
and
sbbb
es
xchg
cmp
xor
mov
pop
xorb
lcall
mov
inc
pop
shll
fmull
in
jns
lcall
inc
mov
push
xchg
cmp
incb
fstpt
aaa
stc
or
shrl
imul
xlat
mov
aam
sbb
xchg
push
push
out
inc
dec
and
scas
xchg
sbb
pop
dec
fstp
cwtl
addr16
fsubl
aam
out
test
jmp
cmp
mov
mov
sub
cmp
push
push
lahf
mov
add
test
cmpsl
push
jne
mov
adc
aaa
jp
jle
iret
test
test
movd
inc
imul
mov
imul
cmc
mov
pop
aad
dec
pop
lret
jo
sbb
lret
in
mov
or
lcall
or
cmpsb
scas
mov
mov
cmp
or
or
mov
js
pop
mov
jmp
ljmp
popa
push
popf
bound
sbb
test
incl
mov
ficomps
push
and
mov
dec
insb
shrd
cmp
loop
mov
sbb
push
std
fcmovnu
aas
dec
cmp
xor
dec
rcll
cmp
pop
ja
ret
inc
jge
mov
push
inc
sub
std
dec
ja
insb
lret
adc
inc
testl
outsl
arpl
popa
pop
fiadds
and
jge
aas
in
gs
mov
jne
sarl
pushf
addr16
or
hlt
ds
cmp
lret
cmp
lahf
mov
ds
ds
or
inc
pop
or
mov
mov
idivb
dec
fnstsw
inc
cmp
or
and
jno
int
push
xor
fwait
push
and
pop
cmp
inc
je
push
cmp
test
xor
push
mov
push
lock
ljmp
sub
xchg
lds
mov
push
decl
sub
rolb
dec
xchg
mov
sbb
push
mov
enter
sahf
adc
push
mov
test
mov
pusha
incb
mov
lea
push
call
lcall
les
adc
add
mov
repz
rep
pop
push
lcall
or
js
cmp
sarl
pop
lods
nop
fwait
pop
aaa
pop
repz
add
popf
call
mov
in
cld
popf
cmp
pop
mov
inc
shl
mov
xchg
push
fisttpll
fbld
cmp
inc
incb
imul
loope
push
ljmp
pop
jb
pop
or
inc
test
cmp
negb
in
sbb
arpl
aas
and
lret
addl
xor
repnz
in
faddl
mov
and
jmp
mov
push
cmp
jg
lock
pop
push
ror
cmovbe
imul
scas
push
cmp
jl
inc
jb
inc
jmp
lcall
and
lahf
pop
ljmp
lahf
shll
jbe
push
mov
lea
dec
movsb
mov
cs
cli
ficomps
cmpsb
sub
mov
mov
add
test
mov
xor
rorb
lcall
insl
jecxz
jno
data16
mov
lcall
sub
push
loopne
and
andb
adc
pop
mov
rcr
xorl
imul
jg
mov
scas
fnstsw
inc
pop
mov
repnz
bound
push
pop
syscall
jmp
and
jo
lods
dec
mov
cli
out
cmp
cmp
and
ds
jg
lcall
es
mov
inc
mov
xor
xor
sub
xchg
ljmp
test
and
cmp
repz
cmpsb
sbb
xchg
jecxz
ficoms
incl
jnp
or
scas
sbb
pop
add
mov
loop
rcl
and
insl
dec
into
mov
xor
jg
mov
cmp
mov
xor
mov
popa
js
daa
sahf
into
aaa
jb
pushf
add
mov
sub
lret
inc
mov
inc
add
lods
dec
push
lret
fstp
fsubl
push
loope
decl
cwtl
pop
test
int3
in
and
push
lea
pushf
lods
popf
aas
adc
and
push
add
sbb
pop
scas
add
jmp
or
outsb
sbb
es
in
push
lahf
fldt
fwait
mov
push
cmp
inc
push
mov
test
inc
or
inc
iret
pop
mov
and
movsl
sub
sahf
fidivs
mov
loop
dec
fldenv
cmp
inc
sub
inc
movsl
inc
jl
mov
jecxz
jns
pusha
sub
call
jne
inc
mull
hlt
fdiv
mov
inc
adc
in
push
stos
lds
cli
fbld
cmp
dec
test
aaa
pop
aas
jmp
dec
loopne
or
mov
lahf
xor
jge
xor
testb
inc
addr16
adc
dec
aam
scas
dec
fisttpll
mov
lret
dec
pushf
jo
sahf
fs
sub
mov
xor
mov
mov
pop
ret
cmp
inc
inc
daa
sub
out
decb
pop
ds
out
push
aaa
stos
jns
and
mov
aas
ret
add
jnp
jg
mov
push
out
mov
dec
xchg
mov
aaa
int
pop
scas
push
repz
jl
jo,pt
data16
out
leave
xor
mov
ds
mov
cs
les
loopne
lcall
in
fucomp
stos
sbb
repnz
ret
pushf
shll
sbb
xchg
aam
sbb
int
adc
jle
ret
outsl
cmpsb
aaa
mov
xchg
lcall
ds
stos
and
aas
notb
jl
xchg
popa
std
lcall
ljmp
fmull
lods
lods
enter
sahf
popf
cmpsl
cmc
sbb
bound
fldcw
repnz
cmp
cmp
pop
je
in
inc
test
mov
movsb
cmp
fnstenv
inc
push
js
mov
adc
fdivp
sbb
lock
jp
mov
lcall
xchg
out
fists
sub
int3
mov
nop
jae,pt
sbb
fs
lods
aaa
jmp
cmp
xor
push
push
mov
xchg
inc
aaa
lods
addr16
inc
xlat
inc
sub
rorl
lods
out
addr16
data16
mov
cmpsl
gs
fsubrl
mov
mov
xor
dec
lcall
lret
xchg
mov
mov
test
sbb
push
pop
mov
aaa
mov
jmp
mov
aas
lahf
inc
cmpsl
cmp
ds
push
imul
sub
mov
aas
xor
fucomip
mov
mov
lods
out
and
outsb
bound
pop
scas
lods
add
pop
jmp
rcrb
pop
ds
dec
or
push
stos
ds
jb
stos
cmp
aas
sbb
or
pop
out
or
fadds
and
mov
adc
fsubr
pop
arpl
shll
out
sub
xchg
mov
push
scas
dec
dec
add
mov
lret
dec
mov
jl
sbb
push
test
in
push
push
hlt
sub
out
fcmovb
mov
loopne
inc
pusha
jo
pop
dec
jno
fs
testb
cli
xchg
test
lock
faddl
insb
in
scas
fwait
and
pusha
inc
or
int3
out
pop
cmp
sub
xlat
in
mov
xchg
lea
mov
push
clc
clc
cmp
mov
xor
insb
ret
push
lcall
stos
std
faddl
xchg
into
call
xchg
or
stc
stos
adc
cmp
movsl
jbe
push
dec
mov
in
push
adc
mov
aaa
dec
mov
out
and
mov
stc
sbb
jb
push
popa
ficomps
push
pushf
insl
push
lahf
mov
nop
cs
sahf
mov
jg
lret
mulb
sub
jp
lahf
imul
sub
stos
pop
sub
inc
in
into
lods
aas
pushf
pop
mov
cmpsb
xchg
scas
aam
repz
adc
loope
data16
fidivl
jecxz
mov
test
out
gs
das
in
sarl
pop
int3
aam
aaa
ret
cmp
fwait
xchg
push
adc
inc
jb
inc
aaa
es
syscall
sbb
jb
cld
mov
fbld
imul
rclb
mov
jge
lods
iret
nop
fucomip
mov
jmp
pop
or
jle
test
fisttps
lcall
pop
mov
incl
movsl
imul
lcall
aas
adc
jne
int
sarb
popa
fsubp
mov
test
leave
in
cmp
inc
or
lods
mov
push
gs
mov
mov
movl
push
push
rolb
out
scas
popf
rcll
inc
lods
push
out
fcompl
idivb
xor
test
inc
jno
jne
mov
mov
cwtl
sarb
push
jno
mov
sbb
cmp
fsubrl
mov
scas
insb
daa
mov
aas
jbe
mov
jo
clc
hlt
mov
shlb
cmp
dec
fnsave
cmp
cmp
sub
mov
lods
mov
mov
out
jnp
fsubr
push
test
ja
push
jb
scas
cmp
mov
xorl
andl
add
and
dec
test
mov
sub
cmpb
call
pop
mov
lcall
mov
stos
pusha
addl
mov
xchg
das
fdivr
inc
sub
xor
or
inc
je
fcmovb
sub
adc
into
or
outsl
adc
and
lcall
insb
adc
ret
adc
adc
in
inc
das
mulb
jbe
enter
ret
addr16
dec
ja,pt
and
test
aaa
xchg
inc
xchg
addr16
sti
jae
sbb
sbb
mov
push
andb
nop
movsl
mov
pop
dec
jmp
out
pop
jnp
or
fiaddl
pop
pop
lcall
cmpsb
out
inc
add
jns
aaa
fisubs
in
pop
adc
js
fcoml
jp
lea
mov
test
pop
daa
lcall
jl
lcall
adc
fcom
sti
and
pop
dec
sti
cwtl
cs
jl
cmpsb
pop
test
sbb
hlt
data16
loop
xor
inc
xchg
and
movsl
int
test
sub
insb
addl
fcmovu
test
jmp
loop
jb
test
jbe
stos
int
jmp
cmp
jb
bound
jge
dec
jmp
lcall
aaa
mov
std
inc
xchg
jmp
push
xor
in
xor
sbb
pop
nop
daa
cs
aaa
mov
sahf
cwtl
lret
hlt
lcall
les
pop
mov
mov
xor
aaa
sub
rcll
jecxz
ret
filds
inc
inc
push
loop
daa
jg
loop
cmp
or
enter
cwtl
test
std
cltd
cltd
sahf
cmp
sub
dec
cld
or
mov
mov
aaa
sbb
loope
in
repz
mov
adc
sbb
push
push
pop
sahf
aaa
sub
push
fidivrs
lcall
cmp
fdivrl
ljmp
mov
lds
fs
xchg
sub
sbb
in
lods
mov
test
leave
pop
scas
cld
rorl
jge
lock
dec
pop
loopne
cld
rcr
mov
mov
push
pop
pop
in
in
or
fwait
clc
sub
dec
into
jne
adc
fdivrl
push
or
ret
lock
xchg
loope
mov
push
popa
aaa
daa
negl
aaa
sbb
movb
out
clc
in
and
add
icebp
enter
ss
daa
cmp
and
test
mov
mov
pop
jl
gs
hlt
cmp
test
adc
fs
js
jmp
cwtl
adc
jns
cmpsl
pop
cld
dec
loop
xor
sub
popf
jns
lea
loopne
xor
shll
rcr
cmp
mov
mov
fldenv
fdivrl
dec
outsb
pop
pop
xchg
jge
cwtl
mov
or
pop
push
insl
fdiv
xchg
lcall
clc
repnz
xor
or
add
sbb
es
mov
xor
ret
aam
inc
jo,pt
or
push
push
pop
aaa
clc
mov
xchg
lods
add
inc
lcall
in
mov
nop
and
push
xchg
stos
fcomi
sahf
adc
pop
in
pop
or
insl
cltd
xchg
dec
outsl
ds
cmpsb
adc
adc
testb
xor
sub
xchg
jecxz
inc
mov
cmpb
lahf
es
mov
or
loop
sbb
cmpsl
cli
repnz
popf
pushf
mov
sub
ficomps
inc
cmp
push
loopne
add
popf
xlat
dec
shll
shll
push
idivb
hlt
push
xchg
in
shrl
popf
sub
shlb
mov
lahf
cmp
inc
test
xor
loopne
call
fucom
pushf
pop
pop
fnstcw
and
and
data16
push
cmp
dec
push
xor
mov
mov
pop
cmp
fisttpll
fcmovb
hlt
pushf
mov
dec
inc
daa
dec
cltd
push
filds
or
mov
xor
jle
ret
out
cmp
ficomps
pop
into
inc
mov
jmp
jmp
xchg
mov
fldcw
inc
sysexit
scas
push
inc
shl
jle
stos
sbb
ljmp
sbb
ds
sarb
mov
repz
inc
ja
lcall
pushf
push
fsubrs
repz
and
rorb
mov
mov
push
negb
arpl
or
pop
inc
pop
adc
pushl
jo
rolb
ret
std
leave
xchg
pushf
fnstsw
ret
xor
and
adc
movsb
pushf
mov
popa
sahf
int
lods
and
test
pop
in
push
xchg
pop
jg
nop
inc
dec
bound
cmp
jne
mov
les
sub
loop
push
xor
jmp
mov
test
add
cltd
fidivl
sub
pop
mov
rcrl
jae
or
pop
aaa
inc
js
daa
lret
add
mov
inc
pop
mov
divb
inc
inc
jb
popf
hlt
popl
mov
arpl
test
mov
jle
mov
test
lds
cmp
add
aaa
in
loop
pop
mov
popa
adc
faddl
and
fidivrs
in
into
ja
pop
mov
inc
rclb
fmulp
repz
xchg
int
cs
sahf
sti
ret
cmp
push
mov
lea
inc
test
cs
cli
out
adc
jmp
mov
add
jne
fistpll
fwait
hlt
idivb
cmp
dec
or
out
arpl
xorb
jge
test
nop
pop
fisubrl
out
ss
stc
enter
aas
test
jb
lahf
or
outsb
dec
pop
or
xchg
cmpsl
jl
jno
jbe
out
and
pushf
data16
into
ds
ds
sahf
pop
mov
out
popf
push
push
mov
cs
mov
in
iret
in
out
sub
sub
mov
xchg
loopne
jecxz
push
mov
ljmp
sbbb
mov
mov
and
clc
pop
imul
fwait
movsb
pop
inc
call
pop
fnstsw
into
or
and
fidivrs
stc
call
in
sti
sti
shl
and
aaa
insl
aaa
ret
xchg
inc
out
sub
xorb
sahf
xchg
jg
rorb
mov
pop
cmpsb
shl
jo
ljmp
subb
daa
xchg
add
cli
lcall
leave
fisttpll
sbb
aaa
arpl
js
cmp
mov
test
lret
jecxz
jecxz
cmp
mov
sbb
stos
orl
jb
mov
cmp
mov
push
lcall
mov
sbb
sbb
sbb
ss
sbb
ljmp
loop
dec
lock
cmpsb
movsl
cld
inc
and
pushf
xchg
sbb
rorl
cmp
mov
pop
cli
jmp
cmpsl
lcall
dec
aas
push
inc
inc
xchg
test
mov
ror
inc
cld
inc
mov
pop
push
ret
mov
fiadds
out
sbb
test
adc
daa
xor
popf
insb
leave
mov
out
lahf
fisttps
clc
in
push
lcall
loope
leave
push
aaa
sbb
and
jb
fistl
iret
data16
pop
aam
mov
shrl
mov
in
loope
movsl
in
push
mov
inc
gs
push
xor
mov
mov
rcl
cmp
sbb
jno
aad
test
stc
sbb
orb
out
pop
and
into
aaa
mov
or
int
cmp
xchg
cmp
mov
push
sub
dec
jbe
sub
fstpl
pop
test
jmp
add
add
gs
push
lahf
inc
fs
push
or
aas
mov
frstor
in
and
mov
sti
jmp
rorl
jle
cmp
imul
scas
fdivl
pop
and
es
or
pop
ds
in
repnz
pop
xchg
aaa
fisubl
ds
dec
lcall
mov
movsl
jg
rclb
add
mov
aad
aaa
pop
sub
inc
sbb
enter
gs
std
jno
mov
fisttpll
xchg
fldcw
lret
jnp
mov
mov
dec
jnp
insb
in
sbb
xchg
pop
repnz
push
lock
push
andl
mov
mov
push
out
daa
add
jg
inc
pop
iret
lods
insb
aaa
hlt
jno
je
add
pop
stc
inc
xchg
pop
and
dec
lods
add
daa
movsl
or
fmull
loopne
fwait
mov
inc
pushf
ljmp
aam
jge
push
sbb
imul
dec
pop
add
out
lret
negb
mov
pop
out
pop
cmp
frstor
sub
sbb
jne
std
and
aaa
loope
outsb
sbb
mov
rcll
movsl
push
pop
in
shlb
pusha
xor
jo
outsl
inc
inc
xor
jg
cmc
mov
cld
daa
inc
xchg
jge
push
movsb
mov
js
les
sub
cmpsb
mov
out
push
fidivs
leave
jecxz
mov
xchg
shll
daa
push
fisttpll
and
lret
shrl
cmpsl
mov
xor
xor
inc
sub
movsl
lds
or
in
mov
insl
das
cmp
sti
sbb
cs
rorb
loop
call
dec
test
mov
cmp
cmpsb
push
je
aaa
mov
sbb
mov
lea
std
adc
enter
add
add
xor
imul
imul
scas
std
xchg
or
frstor
pop
dec
xor
or
jo
lcall
repz
shll
push
divl
out
cmp
lcall
rcr
divb
repnz
jge
scas
push
lcall
notb
jnp
por
cli
sub
lret
lea
fstp
lock
orl
inc
sub
sub
jl
sbb
aaa
sahf
add
rolb
cmpsb
and
lds
je
inc
or
cmp
xor
cmp
adc
mov
pushf
mul
xlat
in
dec
aaa
and
mov
add
cmp
mov
test
xor
stc
sub
mov
ljmp
pop
inc
dec
inc
testb
cltd
aam
adcb
or
inc
frstor
outsb
lcall
js
mov
loop
flds
arpl
je
scas
scas
or
mov
dec
das
movsl
mov
jne
test
or
lds
cmp
xchg
pop
fdivs
lcall
jmp
scas
lret
out
orl
xchg
imul
sti
inc
pop
cmp
jge
push
ds
xor
in
sub
or
call
inc
or
pusha
sub
imul
lcall
aaa
cmpsl
lods
add
fimuls
pop
or
or
cmp
inc
inc
xor
jl
pop
jle
cmp
fmuls
jne
cmp
cmp
out
pop
and
cmp
cmp
adc
cmp
dec
add
insb
and
ja
loope
in
cmpsb
aaa
out
insb
mov
repnz
aam
divl
aaa
lods
movsb
cmp
loope
mov
stos
sub
ret
push
mov
jle
jns
push
push
inc
in
enter
sub
sahf
es
bound
jo
push
inc
pop
mov
jnp
add
mov
shl
jb
scas
lcall
mov
sbb
lcall
lea
scas
fildll
push
addr16
push
xlat
and
jb
lcall
inc
push
fldl
scas
mov
insl
je
jg
pop
cmpsb
adc
mull
sbb
pop
cmp
mov
mov
fimuls
mov
ja
cmp
mov
aas
lcall
add
ljmp
cmpsb
sub
sbb
and
icebp
mov
aad
push
popa
mov
lahf
sub
jecxz
adc
inc
hlt
ds
pop
fdivrp
mov
cmpsb
nop
jbe
mov
fmull
aaa
in
sbb
sub
push
lss
jns
push
lret
rclb
xor
xor
out
mov
pusha
xchg
and
push
xchg
mov
pop
pop
add
in
fdivl
loop
fidivrs
and
mov
pop
stc
scas
jmp
sti
cmp
fsubrl
shlb
mov
in
dec
and
push
gs
fcmovu
nop
leave
clc
paddsb
add
or
cmp
mov
test
ljmp
rolb
xlat
xchg
into
orb
call
lret
mov
cmp
pop
repz
ds
xlat
hlt
ja
hlt
xchg
jb
mov
inc
pop
or
pop
add
arpl
leave
and
outsl
loop
dec
mov
push
sarl
dec
lret
sub
imul
inc
mov
test
pop
mov
push
adc
aas
fucomp
pusha
xchg
jg
add
mov
int
imul
loop
sub
xor
sahf
or
negl
xor
scas
shlb
xor
ret
cld
xchg
es
cld
jmp
cmp
cli
adc
jle
ficomps
mov
fsubr
lret
js
cltd
fbstp
mov
and
ljmp
inc
cmpsb
or
pop
out
ds
test
enter
cmp
push
sbb
cmp
push
inc
push
out
dec
clc
push
mov
mov
inc
call
mov
xchg
aam
mov
sub
das
pop
inc
insl
into
xchg
jl
mov
pop
sahf
sub
ljmp
cmp
and
push
loopne
pop
addr16
xor
add
ds
or
in
in
sub
xorl
rcrl
mov
loope
sarl
ds
leave
in
in
fsubrl
andb
fcoms
adc
divl
into
cmp
mov
inc
aas
loop
cmpb
xchg
and
insl
gs
cmc
fstl
ss
sti
pop
sbb
scas
call
stos
cwtl
mov
push
lret
lcall
inc
hlt
lret
imul
inc
mov
das
push
fisttps
ds
mov
add
andl
and
loop
inc
aaa
pop
mov
outsl
daa
mov
jbe
je
adc
lods
rolb
idivl
es
mov
stos
sbb
jo
decb
lcall
ss
shrl
lea
push
jl
xchg
int
in
dec
mov
imul
ja
call
andb
pop
fidivrl
nop
sbb
mov
cli
xor
stos
aam
jbe
fcoml
rorb
lcall
mov
imul
and
cltd
fs
dec
pop
stos
xchg
fldl
jns
sbb
mov
dec
jns
das
lods
ds
popf
xchg
ja
mov
mov
stos
ss
add
in
and
ds
jg
push
lea
scas
inc
ds
lret
repz
mov
js
inc
push
lds
dec
sub
cmp
xor
fldl
js
pop
ds
add
xchg
push
aaa
push
gs
fsubl
push
orb
jl
ret
xlat
push
dec
aaa
mov
sbb
lcall
movsl
or
fiaddl
sbb
cmp
ds
sub
mov
jbe
xchg
inc
outsb
sahf
xchg
mov
loopne
add
fwait
cmpsb
push
pop
aaa
push
or
add
mov
leave
sbb
pop
std
into
outsl
arpl
jnp
pop
cs
sarl
cld
popf
jbe
or
inc
inc
push
adc
inc
jns
scas
clc
popf
out
dec
push
lcall
jns
ffree
jae
std
lcall
loop
mov
jp
mov
fsubp
mov
repnz
mov
mov
ds
pushf
bound
dec
inc
xor
cmp
scas
dec
xor
sub
shl
mov
push
sbb
ss
icebp
arpl
mov
int3
inc
aas
fsubrl
adc
push
pushl
jb
aad
inc
sbb
inc
cmp
fdivrl
inc
pushf
rclb
test
mov
mov
test
jno
xor
fsubs
bound
fidivl
loope
imul
leave
lods
mov
test
repnz
mov
movsb
fmul
inc
and
cli
lcall
inc
int
cmp
popf
mov
fwait
bound
jg
jno
lock
mov
std
andb
xchg
loop
adc
sahf
mov
mov
pop
dec
mov
inc
sbb
mov
and
jge
mov
jmp
sbb
ljmp
cld
test
lret
push
jns
push
mov
push
and
call
out
xor
cmpsl
stos
aaa
xchg
push
mov
and
fsubs
dec
and
lahf
ret
popf
cli
loopne
loopne
outsb
das
push
out
mov
pop
psllw
xchg
lods
stos
es
cld
or
aaa
sbb
mov
lcall
jne
fcompl
mov
lahf
mov
cmc
outsb
fs
and
cmp
fldt
jmp
ds
shr
call
adc
inc
stos
cmp
cmp
pop
ds
cltd
nop
push
and
ret
addr16
mov
add
js
adc
nop
aaa
nop
push
ds
test
test
dec
test
stos
sahf
iret
fildll
fnstsw
addl
mov
add
cmp
mov
push
out
xor
sbb
aaa
pop
cmp
daa
shll
xchg
outsb
and
mov
xchg
push
cmpb
dec
jae
aaa
lods
jnp
mov
push
xchg
jmp
js
and
fcompl
ret
push
push
xchg
sub
fst
push
jnp
cmc
mov
lret
inc
rcrl
xchg
sbb
or
jmp
cmc
or
stos
adc
fildl
bound
mov
inc
mov
inc
xor
clc
jp
sbb
push
enter
and
pop
aas
cmp
jle
enter
daa
cmp
mov
cmp
mov
dec
and
in
in
fisttpll
adc
aam
or
sbb
push
test
sbb
dec
mov
fadd
movsb
cli
andl
scas
inc
adc
dec
jg
and
inc
orb
push
imul
scas
inc
sbb
mov
push
jp
mov
xor
aas
mov
rcr
aaa
aas
or
clc
sbb
nop
bound
clc
cmp
fnstsw
adc
xchg
repnz
pop
test
leave
cmpsb
aaa
and
xor
xchg
inc
cmp
jmp
scas
mov
in
es
shlb
mov
sarl
adc
shll
xlat
call
xchg
leave
sub
or
jle
stos
jg
out
xor
enter
aas
lahf
out
scas
xor
dec
nop
mov
sbb
xor
mov
sahf
push
and
iret
aaa
fisttpl
inc
cli
or
mov
sbb
add
inc
and
cmp
daa
enter
test
jbe
cwtl
inc
in
leave
fbstp
push
or
clc
cs
sbb
mov
inc
cmp
js
pop
cmp
faddl
stos
jno
lcall
mov
push
fmulp
loopne
sub
or
mov
sbb
lcall
aaa
daa
sub
lcall
adc
lea
adc
in
mov
push
shll
sub
fldl
add
sbb
pusha
mov
cld
pop
out
inc
xor
mov
jl
mov
cmp
addr16
push
ds
lds
mov
sbb
addl
push
push
das
sub
call
pop
or
mov
jge
fmull
ficomps
imul
xor
pop
fneni(8087
ds
insl
test
rcll
stos
sahf
xchg
xor
add
lcallw
shr
sub
mov
fisubl
dec
dec
push
stc
add
dec
add
pop
sahf
pop
jecxz
lea
cmpsl
sbb
std
aaa
cltd
jmp
xchg
les
mov
lcall
mov
pop
cmp
or
inc
mov
mov
mov
test
push
je
pop
pop
dec
rcr
not
push
mov
stos
mov
int
nop
sub
scas
sub
mov
cmp
insb
test
mov
hlt
ror
fs
sarl
xchg
xbegin
sub
cs
cld
pop
dec
adc
out
loopne
test
cmp
xchg
adc
mov
dec
dec
aam
lret
inc
cli
inc
jns
lods
jp
pusha
pop
mov
fcoml
add
gs
loope
mov
xchg
xchg
loop
sbb
cmpl
jge
popf
mov
cmp
fmuls
lods
repz
inc
lea
das
sbb
pop
sbb
mov
or
inc
into
lea
jecxz
movsb
inc
jg
ficompl
rep
dec
push
inc
cli
lea
jp
inc
aaa
push
jl
stos
and
test
mov
add
cmp
xchg
ret
sets
std
and
rcl
mov
ret
fistpll
adc
sub
add
pop
movsl
mov
subps
inc
mov
sti
push
xorl
aas
mov
pushf
cmp
mov
or
mov
pop
shll
dec
sub
pop
jp
mov
push
insb
sub
mov
ret
inc
int
and
pop
lcall
popf
xchg
and
mov
push
dec
xlat
xchg
cmp
fs
cwtl
adc
addl
mov
in
mov
fildl
test
mov
sub
in
jl
push
scas
or
adc
cmp
call
mov
addr16
outsb
lods
cmpsl
adc
cld
rcl
rcrl
mov
sub
add
loopne
mov
pop
ss
das
outsb
push
ljmp
push
outsl
out
pushl
jecxz
inc
in
mov
dec
xor
jge,pt
clc
inc
cmpsb
mov
adc
add
dec
mov
inc
test
mov
jmp
add
rclb
and
mov
rcr
popf
aad
inc
jo
mov
inc
mov
cmp
jge
insl
aad
fistpl
and
jecxz
sub
and
ja
sub
popl
mov
fidivs
cmc
call
std
pop
iret
icebp
outsl
cmp
outsl
mov
xor
fisttpll
gs
add
cmp
and
inc
inc
ja,pt
dec
out
mov
test
test
int3
pop
fsubl
js
bound
inc
jecxz
es
popf
movsb
bound
mov
cmpsb
sub
push
push
sarl
adc
mov
inc
iret
fcoml
push
outsl
addr16
shrb
out
xchg
inc
loop
push
jge
scas
mov
fs
sbb
add
mov
pop
pop
dec
xor
jo
push
loope
inc
adc
nop
scas
inc
iret
lret
sarl
in
pop
push
icebp
dec
mov
dec
dec
dec
jg
fstps
mov
sub
cwtl
sahf
sarb
movsl
dec
adc
loopne
insb
das
mov
inc
mov
add
pop
pusha
in
dec
jle
pop
pop
mov
inc
loop
lcall
push
pop
loopne
popa
sbb
aas
cwtl
lcall
adc
imul
imul
pop
inc
faddl
icebp
lret
pop
pushf
jmp
test
mov
movsl
enter
push
cmpsl
cmp
pop
jnp
lcall
cmp
ljmp
fimull
push
lahf
lcall
repnz
dec
push
test
jge
mov
add
pop
push
pop
filds
mov
mov
sbb
mov
or
or
and
push
cmp
jle
fwait
sub
insl
inc
gs
mov
jae
movl
mov
and
mov
out
inc
push
or
mov
xor
mov
fisubrs
test
fwait
lods
movsb
sahf
add
add
lahf
es
push
push
lea
aad
lods
insl
fucom
je
add
lods
scas
and
aaa
es
loop
xor
insl
fwait
push
dec
push
sub
sub
insl
sbb
aaa
mov
fsts
push
sub
sarl
jmp
ja
pop
inc
aaa
sahf
pop
loopne
fwait
or
addr16
movsb
scas
cmp
mov
das
repnz
stos
mov
scas
pushf
nop
lods
testl
pop
popf
fwait
sub
rorl
cs
dec
cmp
sub
xor
mov
insl
inc
xor
pusha
jmp
sub
cmp
imul
movsl
cltd
mov
fnstcw
jae
mov
aaa
xor
mov
dec
inc
pusha
pop
in
nopl
push
push
test
test
ja
repz
in
add
jnp
jl
add
pop
lea
aaa
sub
or
inc
lret
jg
sahf
pop
xchg
inc
sbb
fstl
xchg
clc
cwtl
mov
sbb
push
sub
jge
push
out
jo
lods
inc
stc
xchg
gs
pop
cwtl
aaa
jge
jp
mov
sub
clc
or
jle
push
stc
rclb
test
fcomip
inc
mov
in
jg
outsb
xchg
aad
gs
hlt
xchg
arpl
fldt
push
lcall
mov
sbb
test
cli
pop
notb
and
jne
jmp
es
scas
lods
shrb
add
leavew
mov
inc
je
jecxz
dec
mov
repnz
and
inc
je
fldl
pop
fisttps
lods
out
add
aam
pop
call
mov
lods
mov
pop
jmp
loopne
dec
add
add
scas
add
jne
mov
xor
mov
shrl
in
fdivp
push
jle
iret
push
movsb
in
cmpsb
loopne
js
jo
fsubr
test
sub
sti
inc
adc
lds
pop
neg
and
cmpl
push
fucomp
sub
inc
jo
sahf
scas
lcall
cltd
sub
xor
dec
pop
clc
loope
ljmp
fwait
jo
and
out
jge
sub
inc
sbb
mov
int3
fsubr
xor
xor
movsb
dec
add
jecxz
repnz
sub
add
cmp
movsl
cmp
inc
mov
scas
dec
bound
xchg
dec
inc
cmp
jl
sbb
mov
xlat
mov
mov
pop
mov
mov
mov
ljmp
push
xchg
cmpb
int3
js
lcall
inc
jmp
das
push
mov
ds
loop
xchg
fsubrp
inc
sbb
pop
adc
inc
or
push
iret
cmp
shll
adc
outsb
mov
ret
fstpt
adc
fstpl
cli
scas
mov
movsl
mov
jp
mov
lahf
xchg
nop
dec
cmp
out
lret
das
jo
movsl
jae
adc
clc
je
fwait
int
push
aaa
dec
cmp
pop
jle
sub
arpl
popf
ret
and
bound
pushf
jnp
mov
mov
xor
xchg
push
test
mov
cs
test
inc
inc
outsl
sbb
add
mov
mov
imul
lock
push
mov
movsl
fbstp
mov
cmp
pop
divb
push
pop
pushf
mov
cmp
mov
push
popf
sub
fidivl
inc
aam
push
fwait
sti
psrld
and
xchg
repz
in
push
cmp
ret
pop
daa
call
xchg
mov
pop
inc
pop
clc
or
lds
stos
out
lret
lcall
dec
cli
fsubrl
push
pop
loopne
pop
sub
xchg
aaa
push
and
mov
pusha
cmp
faddl
stc
out
in
fucomp
stos
xor
fistpll
pop
subb
xchg
mov
inc
ljmp
and
cmpsl
fstpl
xchg
pop
mov
nop
dec
out
std
mov
inc
into
daa
mov
stc
add
cmp
mov
into
mov
push
pop
out
jge
negb
lock
jecxz
lret
inc
repz
xor
fistpll
ds
gs
mov
jb
add
push
nop
ljmp
cwtl
xchg
mov
mov
ljmp
je
push
xlat
fwait
pushf
fdivrs
mov
mov
and
xor
pop
fsubrl
stos
xor
mov
sub
jbe
cmp
push
and
shlb
dec
gs
fs
fisttpll
xor
test
xor
jne
into
addr16
shll
scas
sub
ds
hlt
fcom
femms
leave
aaa
das
push
les
lcall
into
test
cld
movsl
pop
dec
pop
inc
pop
stc
ss
pop
cmp
jle
mov
lods
arpl
shll
in
push
mov
xchg
mov
pushf
mov
cmc
loope
add
enter
or
cmp
xchg
lds
lret
sarl
cs
nop
sbb
mov
xor
push
push
xchg
fstp
lret
adc
out
test
add
addr16
stos
dec
sbb
inc
jns
cmc
lcall
mov
fcompl
sahf
cmpsb
inc
mov
popf
out
jl
sbb
cs
xchg
dec
xchg
ss
xor
stc
pop
mov
mov
mov
sbb
setp
dec
add
fdivl
mov
cmp
repz
add
aaa
fwait
or
add
loope
mov
xchg
sti
fadd
jl
pop
pop
mov
sub
jb
jmp
cmp
xchg
and
sub
or
mov
scas
jecxz
fdivl
out
loopne
stos
movsl
cmc
iret
cmp
jl
cld
mov
dec
mov
les
cmp
hlt
xor
ds
pop
mov
xchg
adc
push
mul
je
xchg
lods
std
mov
xlat
lcall
jo
xchg
mov
pop
cmp
ds
lret
imull
mov
xchg
shlb
es
lea
roll
pop
sub
lods
add
inc
lcall
test
dec
repz
jge
pop
js
and
inc
pop
out
push
movsl
mov
lds
cmp
arpl
jecxz
sub
add
jmp
jcxz
xor
lcall
pop
mov
jne
cli
adc
mov
mov
pop
mov
and
sub
icebp
aam
fistps
std
lock
fdiv
pop
cmp
pop
movsb
or
jmp
shr
fisubs
cmp
mov
fstpl
inc
jmp
pop
jmp
lret
inc
clc
pop
sub
ds
inc
dec
sub
lods
repz
pop
aas
add
pop
stc
adc
jb
mov
ds
sbb
mov
push
ret
mov
jge
sbb
mov
lcall
sub
das
inc
dec
xchg
pop
mov
ret
add
fucomip
pop
bound
bound
cmp
in
dec
jnp
push
xchg
fdivr
mov
sahf
in
sbb
fwait
out
cmp
mov
into
cmp
cmpl
xor
inc
js
jnp
jg
pop
dec
lret
fwait
jmp
ja
jp
inc
xor
cmpsb
mov
mov
jo
add
push
cmpsb
jnp
stos
ss
int
mov
dec
ret
out
push
scas
sbb
addr16
sub
loope
or
fs
pop
push
in
push
pop
inc
lret
sub
mov
push
jecxz
sbb
push
dec
arpl
data16
pop
repnz
cmpsl
push
cmp
dec
dec
inc
mov
jecxz
mov
and
cmp
add
jns
pop
fnstsw
mov
lret
pop
cmp
cmpsl
add
ljmp
shrb
inc
adc
sub
sbb
add
leave
push
fistps
lods
addr16
xchg
fstl
inc
xor
dec
cmp
mov
pop
and
loopne
aaa
pop
popf
add
jmp
xchg
loopne
pushf
insb
fistpll
addr16
int
es
mov
aaa
nop
gs
inc
push
cmp
stos
or
adc
jbe
pop
add
clc
std
lods
cwtl
sbb
das
loope
orb
or
dec
fsts
cmpsl
pusha
xor
arpl
push
sbb
mov
in
dec
jns
mov
shlb
shlb
push
inc
bound
xchg
sbb
or
xor
push
popf
addr16
mov
das
add
sub
push
pusha
sbb
xor
push
push
repz
iret
insb
and
sbb
sub
sarl
push
and
inc
xor
cmpsb
mov
pushf
ljmp
jnp
pop
add
enter
sub
sub
stos
mov
mov
push
ds
mov
repnz
mov
fidivrs
movl
dec
daa
pop
pop
lods
cld
adc
xor
scas
sbbl
add
pushf
into
xchg
aaa
mov
out
xchg
cmp
inc
addr16
xchg
mov
mov
mov
mov
push
scas
lods
cmp
cmp
push
xor
test
push
push
and
adc
rclb
leave
mov
cmpsb
mov
mov
lods
sbb
stos
sbb
sbb
dec
sti
popf
jg
movsl
mov
cmp
mov
mov
stos
lret
mul
mov
into
lods
cs
in
xorb
mov
negl
push
sahf
fidivs
pop
pop
pop
or
xor
les
fisubs
lahf
stos
xor
mov
in
jbe
roll
add
fs
mov
incb
cmp
cli
sbb
fwait
pop
jg
xor
xor
jo,pt
inc
out
int3
mov
ljmp
sbb
add
pop
out
jo
push
sahf
xchg
adc
push
sbb
icebp
push
adc
ficoml
push
push
xor
cmp
push
cmp
jno,pt
aam
loopne
nop
sbb
jno
sbb
in
dec
cmpsb
cmp
and
outsb
mov
push
push
mov
les
cwtl
lcall
clc
xchg
enter
fimuls
sahf
inc
sub
ljmp
ds
sahf
cmpsl
inc
repnz
cmp
adc
stc
cmp
insb
mov
mov
mov
and
lahf
rcl
scas
cs
pop
add
cmp
out
hlt
mov
xchg
fisubl
daa
cli
hlt
aaa
fisttps
xor
jecxz
adc
adc
scas
arpl
xchg
repnz
mov
jg
jecxz
mov
cmp
into
mov
or
cltd
into
cmp
jmp
lahf
outsb
std
cmp
mov
cmp
push
mov
jmp
mov
push
or
cmp
int3
push
out
popf
loope
jp
adc
jle
sbb
sub
imull
mov
das
adc
mov
mov
mov
loope
add
jns
es
repnz
mov
enter
pop
mov
mov
mov
cmp
out
add
popf
les
and
fcoms
cmp
jecxz
pop
lcall
pop
mov
aas
adc
aas
out
dec
xchg
stos
lcall
cwtl
add
iret
mov
stc
cmp
ret
dec
dec
cmpsb
bound
fstpl
inc
int
dec
test
mov
cmp
daa
pop
pusha
cmp
sub
push
iret
rcl
inc
ret
mov
loopne
sub
mov
ljmp
data16
stos
jmp
fdiv
test
sarl
jp
or
sub
loop
dec
mov
cmpsl
dec
imul
out
xchg
fisttpll
mov
push
aas
or
push
cmp
cmpsb
ljmp
mov
nop
inc
cmp
enter
insb
pop
push
lret
fucomip
fcoml
insb
filds
push
loop
mov
mov
cmp
jo
cmp
in
mov
cmp
sbb
rcrb
push
in
push
dec
lcall
push
pop
fwait
test
jle
ds
adc
dec
jb
cmp
add
imul
xor
jns
int3
jle
movsl
aaa
add
cmpsb
mov
outsb
ja
xor
fwait
push
je
aam
adc
cli
fmul
ret
lds
aas
xor
sub
mov
mov
mov
mov
push
in
dec
and
fcom
mov
push
or
dec
inc
fisubs
movsb
add
jo
push
jmp
fmuls
aad
jecxz
xchg
xor
mov
dec
fldl
dec
mov
add
sub
fdivrl
mov
jp
repnz
pop
scas
mov
push
movb
pop
mov
xor
fidivs
sub
mov
cltd
lcall
add
push
roll
jle
jl
dec
ds
mov
out
pop
shl
into
int
fsubs
jo
sbb
andb
repz
out
testl
out
call
inc
mov
pop
jmp
lcall
jmp
movsl
and
dec
and
mov
lahf
dec
mov
inc
lock
jecxz
mov
ljmp
mov
adc
lods
mov
mov
xorl
push
in
rol
lret
push
lcall
mov
sbb
mov
pop
mov
call
pop
mov
pop
lds
and
fdivrl
enter
pop
lock
rcrl
push
cmp
push
or
imul
out
inc
mov
sahf
pop
mov
shl
jae
sub
jp
cmp
icebp
add
aaa
sahf
lea
cmp
repz
lea
sbb
mov
lds
stc
mul
add
inc
fs
ds
cld
pop
jge
lods
push
inc
xor
cwtl
xchg
add
fistpll
cmpsb
xchg
mov
aam
aaa
cmp
inc
jle
mov
mov
addb
cmpsb
jns
popf
push
out
sbb
test
mov
lret
aaa
jno
push
push
pushf
push
xchg
cld
mov
pop
push
dec
jecxz
notl
jl
xor
mulb
xor
int
dec
aad
sbb
int
lcall
dec
adc
jg
sbb
sbb
fisttps
cmpsb
test
cmp
cmp
cmpsl
sub
loop
lcall
lret
adc
pop
fs
xchg
ss
or
aaa
shl
xchg
ret
mov
scas
test
sub
fldl
sub
ds
orl
in
push
xor
and
testl
xlat
mov
or
mov
cmp
stc
cltd
repz
sub
popa
sbb
cmp
shl
aaa
sbb
or
pop
xchg
sahf
and
aaa
stos
rclb
mov
xchg
imul
dec
cli
cmp
test
and
inc
sbbl
into
and
fstpl
mov
aas
bound
scas
aam
out
lods
mov
xor
cmc
insb
add
aaa
sti
icebp
cmpsl
cs
dec
icebp
pop
pop
push
push
inc
jge
pop
or
mov
lret
pop
stos
leave
xor
mov
fidivrs
fisttpll
int3
arpl
frstor
mov
loop
aad
dec
imul
ret
cmp
scas
sbb
addb
sbb
pop
bound
clc
mov
push
lcall
testl
xchg
add
mov
std
cmp
mov
xor
loope
jno
mov
mov
or
xor
pusha
imul
mov
cmp
outsb
ficoms
mov
or
scas
adc
aaa
popf
imul
xchg
jo
inc
pushf
sbb
push
aaa
and
xchg
jb
mov
popf
fistps
not
out
iret
add
dec
push
fstps
lcall
and
adc
cmp
addr16
mov
pop
dec
mov
pop
aas
pop
dec
cmp
inc
fisubrl
into
imul
rcrb
je
in
jmp
fisubrl
xchg
loopne
or
out
push
ffree
adc
popa
fisubs
adc
sub
add
cs
and
adc
outsb
and
sbb
mov
movb
jecxz
dec
cmp
inc
push
test
cli
dec
dec
xor
jae
aaa
sarl
cmp
adc
sub
mov
inc
scas
bound
mov
add
xor
jge
sti
dec
ds
lods
jle
push
cmp
std
rcrl
lcall
adc
mov
mov
orl
aam
jle
sbb
mov
fwait
sbb
pushf
ds
sbb
push
call
pop
mov
lods
push
aas
xlat
mov
mov
jne
lcall
sbb
shlb
das
cmp
jo
xor
adc
dec
inc
adc
lcall
and
xor
aaa
cmp
insb
jbe
sub
cmp
jge
mov
dec
aaa
xchg
imul
lcall
or
dec
add
leave
subb
cwtl
pop
add
push
fidivrl
mov
pop
jbe
inc
loopne
in
sbb
dec
fcoms
dec
adc
dec
inc
inc
or
xlat
jmp
push
inc
push
in
lret
and
sahf
aaa
stos
and
cli
lcall
ja
enter
mov
and
adc
cmpsb
ljmp
fdivrl
and
or
ret
shll
inc
push
pop
aad
push
call
stc
arpl
cmp
pop
xchg
ret
push
pop
add
ja
test
jl
cmpb
add
xor
inc
adc
in
test
sub
std
ljmp
data16
insl
dec
cmpb
push
add
xchg
pop
cli
loop
or
inc
loope
sub
mov
test
lcall
pop
ja
outsl
stos
inc
sbb
xchg
cmp
add
sbb
shl
jecxz
in
enter
fisttpl
mov
sti
aad
inc
negl
sub
cmp
mov
mov
movsb
add
jecxz,pt
adc
add
dec
mov
inc
in
jmp
ds
in
imul
std
adc
xor
das
sub
loopne
stos
cmp
js
push
mov
mov
testb
ds
add
out
lcall
lcall
lods
loope
lcall
cltd
jne
aas
out
sub
jns
add
test
lcall
frstor
mov
mull
and
push
mov
iret
pop
lock
cld
daa
push
fldl
adc
faddl
addr16
mov
mov
in
out
dec
in
pusha
inc
stc
mov
mov
push
ds
in
push
ja
call
push
jo
shl
adc
jns
mov
cltd
ret
in
mov
hlt
aaa
cmp
xor
cmp
fadds
out
mov
aad
ret
jns
mov
bound
fnstsw
mov
mov
jnp
lret
fidivrl
dec
data16
sub
lods
out
cmp
addr16
xor
aad
aaa
jle
aas
fs
shr
lods
movsl
stc
js
call
sbb
cmp
cmp
xor
outsb
ds
inc
add
negl
test
mov
xor
shl
inc
jle
push
sahf
into
dec
pusha
inc
jnp
pop
mov
xchg
imul
fs
out
jo
test
ds
push
popf
push
ret
cmp
push
jae
int3
fsts
idivl
fisubs
pushf
jo
int3
pop
mov
in
cmpb
inc
rorl
cmp
outsb
in
or
jl
lods
rcrb
xchg
js
xchg
jno
push
notb
dec
into
push
mov
lcall
push
sahf
in
and
lret
inc
xchg
push
mov
mov
mov
divl
cmp
add
cmp
xchg
cmpsl
sub
call
pop
pop
xchg
aaa
mov
inc
movsb
pcmpeqd
movb
mov
push
xor
xchg
adc
repz
or
xchg
sub
test
xchg
xchg
stc
inc
lcall
outsl
stos
cli
dec
clc
in
sbb
cmp
xlat
movsl
ss
xchg
repnz
insb
adc
add
pop
mov
jns
jge
lahf
cld
pop
mov
mov
xchg
movsl
cmc
inc
mov
sub
push
stc
add
popa
jp
push
and
fistl
aaa
mov
cwtl
int
push
repz
mov
dec
insb
xor
push
clc
sub
pop
outsl
ds
int
cmp
pop
inc
add
loopne
data16
sbb
and
movsl
scas
fwait
test
xchg
lcall
lea
fst
mov
std
insl
inc
ds
gs
fsubl
imul
xor
jns
pop
and
cmp
test
movsl
cmc
lds
out
pop
gs
repz
fimuls
jno
push
dec
mov
rcrl
fwait
cmp
dec
sub
ret
add
mov
ficoml
and
jno
and
mov
lcall
mov
mov
cmp
faddl
sti
call
jnp
insb
push
ret
xchg
andb
mov
pop
in
movsb
mov
mov
jae
and
mov
repz
jge
push
fsub
push
mov
mov
xor
inc
enter
lret
cmpsl
stos
add
fdivrp
cmp
dec
imul
fnstsw
sub
sbb
jo
mov
mov
xchg
jle
and
xchg
mov
call
call
ljmp
out
adc
int
pusha
push
fidivrl
jecxz,pt
mov
stos
aaa
jge
xor
jp
shll
pop
ds
in
mov
sti
cmp
mov
sbb
dec
repz
xchg
push
fmul
adc
and
jge
pushf
jecxz
mov
pop
and
mov
jno
sub
leave
std
scas
cmp
or
xchg
xor
mov
jecxz
cmp
ds
sarb
push
fdivrp
cld
and
cmpsb
pop
dec
cmp
mov
cli
xor
xor
add
cmp
je
cltd
std
std
jo
xorl
cmp
movsb
scas
daa
scas
pop
jbe
cmpsl
push
fnsave
dec
jecxz
outsb
mov
cmp
stos
push
push
pop
test
xchg
lock
mov
sub
insl
sbb
adc
inc
ja
jecxz
mov
dec
sub
aad
cmp
dec
inc
ja
and
inc
cmp
and
or
jne
sub
mov
test
cmp
pop
iret
sahf
mov
insl
sbb
jle
lret
cld
aaa
sbb
lahf
pop
sub
mov
mov
xchg
daa
lea
adc
pop
xchg
mov
movl
imul
jl
std
pop
sub
mov
dec
cwtl
xor
push
xchg
inc
fucomi
mov
loopne
xorb
icebp
inc
adc
ds
mov
pop
sahf
aam
adc
movsb
clc
push
loope
ficomps
push
inc
lcall
arpl
shrb
stos
movsb
xor
ja
add
add
arpl
out
push
and
lret
pop
ja
aas
fnstenv
sub
or
sub
repnz
scas
push
cmp
test
or
push
cmpsb
clc
ret
idivl
pslld
jae
outsb
and
leave
dec
cmpsl
jp
insb
lcall
xchg
add
xchg
mov
mov
jno
popf
test
sbb
pop
das
cmp
mov
sub
repz
data16
cmp
lock
aaa
pop
push
shrl
movsl
xchg
jno
cmpsl
dec
cld
cwtl
add
push
aaa
jge
movsl
repz
sti
cmp
or
mov
fildl
fadds
and
mov
out
repz
leave
mov
sub
aas
push
lods
cmp
xor
mov
enter
inc
lods
sar
flds
mov
cmp
cwtl
add
or
fisubrs
test
cs
mov
jecxz
xchg
fidivrs
cld
fnstsw
mov
sbb
or
call
lcall
aaa
mov
sti
pop
mov
hlt
add
mov
sbb
cmp
jg
rclb
aaa
jecxz
xlat
outsl
imul
lcall
mov
aaa
sbb
jl
pushf
imull
in
sahf
out
decb
loop
cmp
je
jg
mov
or
jmp
jae
mov
arpl
push
pop
lods
cld
inc
aaa
lret
test
lods
jo
adc
shufps
pop
in
movsl
push
cmpsb
add
ja
dec
push
ds
insl
ja
inc
stos
pop
ret
jmp
pop
lret
inc
sub
insb
loopne
adc
jge
dec
data16
cmpsb
adc
insb
sbb
popa
xchg
pop
push
enter
and
divps
jmp
mov
bnd
lea
lcall
insb
adc
in
aaa
mov
test
loope
into
jnp
pop
in
cltd
xor
fnsave
mov
inc
mov
jmp
mov
push
lcall
cmp
jge
sar
push
jno
jbe
inc
mov
mov
repnz
xor
or
rcrl
jp
bound
in
ja
mov
in
sbb
ds
pushf
cld
lret
sarb
sarl
in
dec
cmp
cmp
in
jae
imul
fidivrs
dec
out
xchg
incl
loopne
stc
sub
data16
notb
jl
jnp
jle
lcall
daa
test
add
cmpsb
jb
inc
subl
and
inc
sbb
les
sbb
leave
ds
test
add
test
mov
inc
scas
sbbb
mov
loope
aam
mov
testb
subb
xchg
lcall
loope
fisttpll
movsl
pushf
and
jg
sbb
mov
xchg
or
das
into
jmp
pop
popf
loopne
adcb
loop
hlt
mov
add
es
fmul
dec
shll
mov
in
and
push
inc
and
fadd
or
sub
lea
jns
aaa
jmp
in
out
lcall
inc
imul
and
mov
imul
lcall
sbb
cmp
pop
xchg
sbb
aaa
shll
adc
movsb
pop
sarl
xchg
bound
pop
leave
cld
orb
in
pop
outsl
out
dec
jle
add
push
out
lods
and
sti
add
fildl
pop
inc
mov
notl
shl
cmp
jmp
into
fisubl
ds
jnp
xchg
push
cld
jle
aaa
shlb
adc
leave
ret
lea
popf
or
out
cmp
jecxz
mov
fcomip
iret
mov
aaa
fdivrs
mov
push
cmpl
out
mov
out
cmp
or
mov
lcall
outsb
popf
fadd
fmul
out
mov
cmpsb
xlat
in
mov
mov
test
adc
pop
mov
sti
pop
insl
ljmp
mov
movsl
inc
xchg
fs
mov
pop
ja
xor
dec
lret
xchg
cltd
jns
lcall
addr16
jl
rcr
sbb
fildl
popf
sub
pusha
fidivrl
push
cmpsl
hlt
stc
ja
lds
lahf
ds
xchg
scas
leave
aad
jge
inc
push
inc
test
icebp
faddl
push
xor
pop
and
cmp
cmp
sbbb
shll
ljmp
je
out
test
lret
mov
add
cld
mov
outsl
cmp
in
andl
jae
inc
insb
mov
mov
test
shll
clc
mov
mov
test
cmpsl
insb
leave
sbb
lcall
daa
lods
repnz
adc
lds
sbb
imul
psubw
xchg
std
bound
fwait
inc
pop
adcb
dec
lcall
lret
or
push
mov
jg
popf
mov
xor
aad
mov
jo
out
ret
dec
sarl
jo
inc
cmp
popf
cmp
andl
xor
nop
test
jge
add
and
in
outsl
jp
fidivl
js
cmp
lahf
rolb
sub
mov
fstl
pushf
mov
adc
dec
pop
cld
pop
mov
nop
lock
pop
push
inc
add
push
jno
inc
rorb
sbb
std
ds
cmp
loope
loopne
or
cmp
inc
pop
cmp
in
in
lcall
or
les
loop
xchg
jg
lahf
lods
mov
nop
bound
insl
cmc
jns
mov
lods
pusha
push
popa
les
les
dec
inc
jge
fistpll
mov
ret
jno
sbb
popf
loope
mov
and
pop
lcall
stc
jle
cmp
cli
neg
cmp
cmp
jl
add
sti
adc
jns
push
mov
fcompl
lret
inc
mov
mov
lcall
lea
loopne
jo
pop
inc
dec
sbb
pop
inc
sahf
or
mov
sbb
and
push
sarb
ds
ret
fsubs
out
test
adc
lret
outsb
push
sub
mov
xchg
add
mov
pushf
pushw
jae
push
and
aad
cmc
dec
jb
and
lahf
or
push
push
stc
jge
dec
icebp
dec
sti
add
mov
aas
outsb
push
and
pop
adc
lret
lock
cmp
push
pop
add
inc
stos
aas
jb
jno,pn
and
push
dec
and
push
fidivrl
xchg
and
es
add
and
mov
pop
out
scas
outsl
mov
cltd
mov
jle
rcrb
adc
fs
dec
adc
les
imul
test
jae
inc
jle
fs
mov
icebp
lcall
dec
pop
fimuls
xchg
mov
lods
test
mov
mov
and
in
lds
jecxz
pop
in
addr16
xchg
lcall
data16
stc
inc
inc
mov
insl
pusha
gs
add
mov
pcmpgtb
cld
inc
lods
shrl
pop
nop
lcall
add
cmp
xchg
mov
mov
stc
lods
mov
fimuls
or
loop
loopne
incb
ds
push
ja
sbb
psrld
jmp
push
cmp
aad
xchg
es
leave
sub
bound
mov
mov
xor
xchg
push
push
sti
rol
lcall
pop
mov
sarl
jp
pop
push
dec
jle
imul
inc
int
shl
gs
sub
imul
idiv
dec
inc
or
icebp
xchg
clc
rcrl
push
mov
out
in
rep
and
push
negl
ds
sbb
jno
outsb
and
cmp
adc
ret
push
sub
out
stos
push
mov
je
lds
adc
add
jb
out
aaa
sbb
testb
inc
test
out
ret
dec
jmp
fdivrl
lcall
sub
xor
das
outsb
aaa
mov
je
adc
cmpsb
cmp
mov
fwait
lret
xor
pop
test
test
ljmp
rcl
sti
test
inc
inc
stc
xor
jg
test
insl
jecxz
pop
psllq
push
outsb
pushf
xor
push
imul
fldenv
add
or
push
test
in
mov
xchg
sbb
out
mov
in
mov
inc
mov
cmp
or
mov
daa
xchg
lock
mov
pop
fwait
push
sbb
cwtl
xlat
xor
mov
shll
or
lcall
inc
add
sbbl
and
outsb
mov
or
mov
fcoml
shrb
jecxz,pt
sbb
pusha
sbb
mov
out
sbbb
mov
lea
cli
jle
mov
sub
repz
shlb
sahf
mov
pop
jmp
or
ds
call
cmp
jmp
xor
rcr
xchg
cld
dec
and
mov
cld
jns
xor
push
lods
rcll
jbe
leave
pop
cli
mov
fsubrl
xchg
mov
xchg
xchg
jae
call
imul
xor
sub
setle
ds
test
pushf
jae
xor
xchg
push
pop
xchg
and
inc
inc
adcb
sbb
inc
jg
xor
ljmp
jge
mov
std
pop
mov
xchg
sbb
push
xor
cmp
xchg
mov
and
test
imul
popf
clc
mov
pop
int3
and
mov
popf
sarl
dec
mov
imul
jge
push
jns
xchg
push
bound
and
or
and
fdivrs
jmp
and
xchg
jb
fistps
out
inc
icebp
mov
mov
jmp
cmp
mov
hlt
inc
aaa
and
sbb
push
inc
lret
fcoml
inc
add
pop
popf
or
pop
and
and
mov
add
xlat
popf
mov
lret
test
insb
cmp
mov
pop
add
lds
xor
and
and
test
lcall
xor
stc
mov
fs
pop
fs
jns
test
fsubl
sbb
ja
lcall
pop
int
scas
js
mov
jns
call
mov
clc
add
roll
in
leave
enter
sbb
ds
filds
leave
jo
sub
mov
xchg
scas
arpl
lods
int
xchg
in
fsub
clc
scas
mov
inc
sbb
es
arpl
xchg
inc
jmp
data16
cmp
rclb
sub
xor
pop
mov
in
in
ds
ss
movsb
int3
mov
adc
adc
push
dec
pop
dec
fnsave
popa
sbb
inc
add
or
dec
lods
dec
pop
sbb
cmpxchg8b
call
mov
mov
mov
xchg
ret
dec
adc
xchg
lcall
push
or
bound
daa
xchg
es
sbb
popa
mov
cmpsb
scas
fistpl
cmpsl
pusha
push
sbb
xchg
aaa
push
push
lods
fnstenv
pop
dec
mov
in
hlt
mov
mov
mov
je
je
lods
cs
sbb
mov
pop
lret
into
push
xor
fwait
das
aad
inc
ja
cmp
aas
mov
sub
jae
pop
mov
bound
adc
pshufw
cmp
loopne
jecxz
or
jo
inc
and
out
ror
aaa
out
in
in
das
lahf
pop
mov
cmp
jb
jecxz
cmp
adc
incb
rcl
test
test
sbbl
fnstsw
jmp
and
mov
icebp
pop
or
in
dec
out
pop
fistps
mov
popa
insb
cli
inc
lods
push
lcall
clc
outsb
push
push
fidivl
push
add
lcall
and
in
scas
shlb
outsb
loope
mov
mov
inc
lret
push
pop
imul
lods
cltd
fstl
pop
jecxz
mov
lahf
push
decb
inc
out
push
mov
cmp
xchg
pop
inc
std
jo
fdiv
out
rorb
and
popa
testb
popl
in
shrb
addr16
fisubrs
jb
out
cli
fistpll
scas
shrl
push
pop
cmpsb
mov
adc
push
inc
cmpsl
mov
lods
mov
scas
pop
shrl
in
addr16
mov
lock
push
mov
push
or
aam
inc
aaa
or
pop
push
into
jl
in
pop
sbb
mov
sbb
stos
stc
dec
mov
pop
mov
mov
iret
pop
cmpsb
loopne
jno
mov
in
outsb
cld
aaa
shlb
cltd
lcall
adc
imul
ljmp
and
mov
push
pusha
ffree
mov
push
xor
mov
rcrl
insb
sbbb
fldenv
cltd
dec
insb
mov
test
add
cmp
cmp
fisubs
pop
movb
cwtl
pop
out
lcall
mov
push
out
out
scas
jle
sbb
pop
xchg
mov
es
outsb
addr16
and
outsb
fildl
pop
loop
push
test
fsts
aaa
jmp
pop
loopne
or
pop
cli
pushf
or
cs
lea
mov
aas
lret
cmp
pop
sub
mov
jnp
je
sub
push
bound
in
mov
jmp
sub
add
mov
xchg
adc
push
shr
inc
or
test
sbb
movsb
jmp
loopne
mov
lods
es
stos
mov
push
add
pop
pop
xchg
sbb
cmp
fbstp
xchg
cmp
ss
addr16
and
in
test
ret
jnp
inc
jmp
lea
adc
test
sub
inc
push
xor
decl
push
and
jp
xorb
scas
ficompl
movsl
ffreep
scas
and
cld
out
inc
cmpsl
mov
push
push
rcr
paddd
daa
mov
add
fmull
fucomp
push
in
fcoms
daa
inc
push
mov
sbb
stos
sahf
aaa
fsts
sub
push
ds
loop
daa
aas
lods
inc
dec
fistps
jbe
sub
les
mov
push
idivb
loope
fcoml
int
push
xor
into
xor
ffree
fcoml
iret
daa
ds
movsl
mov
mov
mov
sub
cmc
or
sub
and
mov
cmp
cmp
push
mov
lcall
out
ja
je
insb
mov
pop
aas
sahf
push
lds
adc
lcall
push
hlt
vunpcklps
or
popf
fldenv
mov
fwait
push
sbb
incb
ds
ret
push
sbb
jmp
lret
add
mov
popa
push
adc
fnsave
xor
push
cmc
xchg
fwait
jnp
in
mov
aam
cmp
pop
shl
push
mov
sbb
arpl
or
push
xchg
mov
negb
ds
repz
or
pop
int
add
call
mov
mov
into
lret
mov
loopne
aas
xchg
daa
jl
loop
jmp
test
mov
lcall
dec
lcall
sbbb
aas
add
shll
out
adc
pop
ja
std
dec
push
ret
or
jle
and
loopne
add
push
in
imul
jp
cmp
and
lcall
ds
inc
jae
in
push
mov
mov
dec
add
add
xor
add
orl
inc
fsubrs
cmp
nop
shlb
loop
in
insb
mov
pop
xchg
loopne
es
mov
js
push
mov
aas
adc
mov
add
jmp
popa
and
jp
dec
fldl
jnp
idivl
and
jmp
mov
out
push
inc
xor
lcall
shlb
sbb
lcall
cmp
push
lret
pop
push
aad
inc
aad
fs
push
in
jns
callw
not
fcompl
cwtl
jne
aas
pushf
in
mov
movsb
mov
mov
push
js
dec
fsts
sbb
mov
cmp
mov
nop
xchg
stos
xchg
lcall
insb
pop
in
cld
loop
ja
cmp
fisttps
sub
mov
push
pop
pop
inc
mov
les
or
cmp
xchg
adc
sub
fsub
orl
frstor
mov
and
scas
scas
ds
mov
inc
sbb
xchg
out
jo
xchg
test
jmp
sbb
dec
in
push
arpl
sbb
mov
pushf
mov
insl
ror
sub
clc
fidivs
pusha
test
pop
pop
xor
in
mov
xor
dec
fcmovu
popf
pop
or
mov
aaa
stc
pop
push
loop
test
mov
sti
lcall
push
inc
rcrb
int3
stos
js
data16
sbb
out
lea
aad
add
bound
push
test
out
mov
aaa
dec
cmp
lcall
inc
inc
jmp
aam
fisubs
mov
mov
xchg
lods
inc
xchg
movsl
inc
insl
aaa
xchg
test
das
fistpll
sahf
xorb
ja
cmp
sar
inc
mov
mov
roll
cmp
movl
xor
pop
cmp
pop
insl
fildl
out
inc
xchg
mov
mov
je
xor
inc
or
icebp
repnz
inc
mov
add
mov
sub
out
icebp
imul
ds
and
jns
add
jb
pop
or
clc
adc
jns
fwait
mov
fcompl
jnp
movl
scas
fdivs
inc
dec
das
sbb
fcmovnu
frstor
repnz
fcompl
addb
cs
outsl
push
pop
andl
sarl
push
iret
push
mov
push
pop
iret
int
mov
jb
ret
mov
inc
jg
out
xchg
fisubrl
repnz
out
sbbl
cmp
inc
mov
imulb
xor
xchg
and
rolb
into
jle
pusha
aaa
mov
cmp
pcmpgtb
out
add
jle
inc
out
xor
mov
jecxz
push
push
jne
imul
push
cs
inc
xchg
jp
stos
imul
popf
xchg
pop
loope
out
cmp
mov
aaa
sub
sbb
push
cmc
gs
dec
add
mov
aas
mov
loopne
jge
push
fsts
jne
test
inc
mov
imul
mov
jne
jp
cmp
dec
popa
sub
inc
testl
ja
aas
outsl
jns
xchg
into
mov
ss
fstps
fwait
inc
xchg
push
lcall
fisttpll
or
mov
xchg
and
inc
aam
jb
imul
pop
pop
enter
lcall
pop
inc
fstl
xchg
test
test
or
mov
or
pop
jne
and
push
dec
and
mov
scas
push
ret
lds
xor
pushf
cmp
sbb
pop
sti
push
cli
popf
addr16
pop
xchg
mov
adc
xchg
mov
lahf
ljmp
clc
and
add
xchg
clc
movsl
pop
dec
scas
lods
pop
loop
shl
leave
push
jg
add
cmp
cmp
mov
cmpsb
sub
and
xchg
and
ja
push
rclb
js,pt
jnp
pop
cmp
inc
sub
ss
xchg
push
mov
mov
fs
pop
or
pop
dec
adc
repnz
lods
in
xlat
mull
imul
negl
rolb
aas
lcall
filds
inc
fldl
aas
testb
test
rorl
inc
cmp
sarb
fidivs
pop
jb
fdivrs
out
fdivrl
mov
add
jp
ljmp
pop
or
lds
pop
jae
lret
cwtl
mov
dec
lcall
jno
call
mov
pshufw
mov
or
inc
push
xchg
ds
fists
cmp
push
or
fcmovu
fstl
xchg
mov
add
call
int
fnstsw
imul
push
enter
mov
mov
xchg
cmpsl
aaa
ja
xor
adc
outsl
outsl
dec
jns
xchg
mov
clc
out
push
lock
sbb
testl
add
cmp
cmp
lcall
adc
mov
mov
push
sarl
ja
cmp
xor
pop
cmp
mov
jle
cwtl
dec
adc
pop
mov
scas
lea
mov
add
adc
das
cs
addr16
add
fdivrp
jnp
pop
dec
jle
gs
add
in
inc
insl
xor
pop
mov
add
les
imul
push
fildl
fwait
les
lgs
cmp
and
lcall
push
or
int
ret
incl
movsb
repz
sbb
test
sbb
jo
loop
or
mov
aad
pop
or
sub
mov
add
jne
cmpsb
ds
aaa
sbb
dec
dec
add
mov
or
fwait
and
daa
ja
pop
loope
pop
sbb
xchg
sbb
fiadds
mov
out
pop
lcall
stc
cmp
hlt
xchg
ds
xorb
sub
sbb
cmp
lret
cmp
xchg
mov
cli
test
add
sbb
mov
bound
sub
arpl
and
int
cmpsl
mov
adc
out
incl
rep
mov
mov
test
fimuls
int3
mov
ss
push
pop
aas
movsl
cmpb
adc
push
ret
sbb
ficoms
cs
insb
pusha
sub
arpl
test
je
mov
fcompl
cmp
lods
pop
mov
add
mov
insb
mov
xor
incb
scas
lcall
pop
mul
movl
push
lods
pop
or
lods
pushl
pop
test
cmp
fwait
push
pop
cld
repnz
movsl
pop
mov
fcomps
bound
fiaddl
lock
ret
jmp
sbb
cmc
popf
cmp
mov
xor
daa
push
lcall
bound
sahf
sbb
loope
xchg
aad
stc
mov
mov
jno
mov
dec
dec
xchg
aaa
mov
mov
aas
and
add
jbe
pop
popl
sbb
pmaxsw
lds
inc
or
ds
ds
pop
push
push
pop
and
push
mov
mov
push
outsl
xor
fwait
lods
mov
popa
ljmp
dec
inc
lods
xor
inc
and
jg
cli
das
xchg
and
ret
fidivs
dec
xchg
stc
add
fsubl
cmp
ja
mov
cmp
or
mov
push
mov
fdivrs
xchg
das
mov
ljmp
inc
adcl
fistpl
add
insb
pushf
cli
and
jmp
mov
fsubs
out
pop
add
mov
mov
push
push
xchg
lea
xchg
inc
dec
mov
xchg
sahf
dec
sub
imul
push
iret
cmp
aas
fnstenv
loop
jb
jb
fiadds
lods
dec
jb
jne
repnz
ds
xor
movsb
dec
mov
sub
lock
arpl
cmp
inc
sub
fdivs
cmpsb
loope
in
out
mov
dec
cwtl
pop
lcall
cmp
dec
out
cmp
dec
jp
push
cmp
sbb
mov
popa
adc
inc
dec
push
cmp
sub
jbe
pushf
lcall
mov
fnstsw
lock
cmp
bound
add
les
scas
inc
xchg
aaa
add
fwait
inc
jmp
out
lds
push
and
cmp
mov
fwait
push
in
cltd
test
push
cmp
addr16
or
mov
push
cmp
and
push
orl
pop
out
cltd
lret
sbb
out
xchg
xchg
enter
jge
adc
jle
mov
adc
dec
push
fucom
mov
inc
loop
not
adc
fsubs
sbb
or
add
mov
pop
mov
lret
icebp
loope
stos
xchg
sti
lcall
cmpsb
pop
push
mov
movb
out
and
adc
jne
mov
push
xchg
cmp
loop
inc
or
dec
mov
sahf
add
push
lret
pop
cmc
mov
fnstsw
aaa
mov
xchg
add
cmpsl
popf
test
ljmp
push
lahf
push
subb
ds
mov
mov
mov
fwait
mov
xor
leave
xlat
movsb
pop
or
mov
or
loopne
add
movsb
iret
adc
or
push
fmuls
jmp
insb
jecxz
cmc
aaa
scas
adc
out
test
mov
inc
fwait
sarb
ss
test
mov
inc
mov
push
inc
fisubrl
jns
add
jl,pt
mov
out
ds
lahf
cmp
aam
xor
mov
cmp
ret
leave
lods
mov
jge
mov
pop
movsl
jno
das
mov
cmp
add
sub
jmp
cmp
pushf
vpcmpeqb
mov
into
jnp
bound
les
enter
mov
sub
jae
xchg
sbb
xor
lret
sti
fbld
inc
fwait
lea
add
popf
jno
orb
js
aas
in
sub
mov
aaa
in
cli
jp
mov
adc
fsubr
aaa
out
pop
cmc
mov
sarl
scas
jmp
cmc
test
inc
inc
fwait
sbb
jnp
je
fldl
int
je
inc
xchg
mov
stos
jb
lcall
add
mov
or
mov
jle
ds
pusha
test
ds
sub
cmp
aaa
ds
jg
xor
roll
xchg
cmp
arpl
mov
shlb
inc
test
xchg
mov
adc
mov
lcall
jmp
lds
daa
sbb
scas
lret
sbb
mov
subl
xor
pop
mov
add
and
inc
adc
out
push
or
and
test
xchg
jb
jg
sbb
mov
or
repz
xchg
mov
lea
and
xchg
ret
xor
loop
mov
push
and
and
insl
mov
mov
cmpsl
and
inc
test
ret
sbb
and
pop
cmp
dec
mov
ret
xor
stc
lret
insl
xchg
jge
jp,pt
lcall
push
fcomp
adcb
bound
xchg
aam
and
lret
scas
imul
fwait
push
and
movsb
dec
cld
cmp
ja
and
std
fwait
mov
xor
mov
ja
repnz
daa
jp
inc
shlb
mov
inc
xlat
call
xor
rcrl
icebp
and
repnz
addl
jg
mov
scas
pop
xchg
cmpsl
xor
out
loopne
cmp
cld
xchg
lahf
and
pop
mov
mov
data16
aas
pushf
or
push
jns
sbbb
jno
mov
cltd
xchg
popa
std
xchg
test
push
aaa
icebp
mov
mov
push
rcll
push
mul
inc
sbbb
into
sbb
fisttpll
sub
mov
aas
ja
add
insb
inc
mov
rcll
insb
outsl
fs
mov
subl
dec
js
lcall
insb
dec
lds
pop
xlat
cmc
test
jbe
fcomps
add
ds
dec
mov
in
mov
aad
push
loope
cmp
dec
pop
jb,pn
mov
bound
ds
pusha
push
lock
sbb
negl
cwtl
data16
dec
out
bound
out
pop
pop
lcall
lods
daa
ficoms
outsb
and
mov
iret
lcall
push
stos
fbstp
xor
leave
adc
cmc
out
sbb
sti
lods
mov
pop
clc
pop
mov
les
in
pop
sub
add
mov
and
aas
xor
ds
int
adc
mov
mov
psrlq
arpl
insl
fnstsw
lods
adc
fsubr
mov
xor
sub
aaa
jp
dec
and
rcr
cmp
sbb
sbb
sti
aas
aaa
jge
lcall
jno
jmp
clc
mov
test
lcall
lret
add
and
push
xchg
inc
aad
ds
and
jl
sub
mov
jae
mov
test
mov
insb
xlat
and
cmp
pop
inc
mov
jl
xor
jmp
fnsave
dec
insb
push
add
or
rcl
push
icebp
lock
ja
faddp
int3
cmp
cwtl
fwait
adc
jbe
pushf
iret
jg
out
loop
data16
ds
mov
push
jmp
and
jb
push
ret
stc
sub
fmuls
sub
fs
cmpsb
inc
negl
xchg
mov
ret
cmpl
fnstsw
mov
popa
les
push
xlat
mov
nop
mov
cwtl
out
fstl
out
cmp
cld
mov
addr16
adc
mov
mov
repz
inc
push
pop
shlb
and
or
xor
cmpsb
je
jbe
mov
and
or
fisttpll
mov
pop
ds
push
in
outsl
lret
lods
xchg
aaa
add
jl
xchg
lcall
repz
fsub
dec
sbb
daa
dec
mov
cmp
mov
cmp
cs
sahf
cmp
jbe
shll
out
leave
mov
lcall
in
fstl
loope
jno
mov
ret
xchg
sub
orl
sub
subl
enter
aad
scas
pop
fstl
movsb
daa
incb
xor
xchg
pop
iret
ja
jle
insb
call
sub
sub
arpl
xchg
and
movhps
pop
push
loop
rcr
fdivs
popf
mov
nop
bound
jmp
inc
mov
shlb
and
mov
mov
daa
dec
sbb
jbe
lcall
aaa
loop
mov
sub
inc
aam
jbe
sbb
pop
cld
jmp
cmp
push
stc
dec
xor
es
and
aaa
mov
scas
cmp
jecxz
push
mov
clc
mov
mov
into
imul
in
sbbb
jae
xor
xchg
loopne
daa
lret
aaa
dec
lock
lcall
xchg
icebp
fcoml
in
cmp
aas
dec
sub
mulb
shl
icebp
lret
sbb
jmp
cmp
fsubp
dec
mov
dec
mov
fsub
das
daa
sbb
shr
pushf
dec
push
loop
inc
add
pop
inc
mov
jp
pop
lock
mov
sub
fisttps
loope
das
cli
push
mov
lcall
int
lret
push
add
mov
das
add
dec
lods
mov
fldl
push
dec
lods
scas
add
mov
xchg
xor
hlt
mov
aaa
add
mov
in
mov
add
aaa
dec
mov
dec
push
lcall
cmpsl
lods
cli
mov
jl
dec
inc
pop
loop
lret
ret
pop
jne
jnp
mov
dec
pop
aaa
fiaddl
and
lds
xor
sub
std
push
mov
or
mov
xchg
into
and
dec
dec
aaa
repz
js
clc
test
push
popf
jg
jle,pt
scas
imul
push
arpl
cmpsl
mov
sti
xchg
lret
in
jno
or
jb
add
dec
cmp
cmp
sub
sahf
stos
jb
inc
cmp
clc
ret
lcall
lods
mov
jb
ljmp
ret
outsb
mov
in
scas
pop
sub
mov
dec
mov
stos
push
into
les
pop
lcall
inc
mov
mov
dec
lret
inc
ds
cmp
lret
aaa
and
jl
ds
cwtl
ss
xor
mov
or
or
add
repz
in
mov
sarb
adcb
arpl
scas
lock
pop
push
mov
jmp
xchg
lcall
ja
fmull
loopne
push
outsl
movsb
add
in
addr16
aaa
jne
je
fdivrp
inc
mov
add
cmp
dec
mov
fwait
out
and
data16
imul
popf
jmp
lcall
scas
ja
sub
inc
js
mov
repz
adc
fucomp
sbb
movsb
xchg
ds
repnz
aas
jl
mov
daa
xchg
dec
mov
add
inc
out
cmpl
mov
jg
mov
pop
pop
test
push
daa
clc
cmp
pushf
pop
aam
out
push
sbb
dec
lcall
adc
cmp
mov
ds
push
popf
adc
ret
or
xor
in
lret
mov
jbe
adc
imul
ja
fisttpll
lahf
std
loope
xchg
inc
xchg
inc
mul
mov
neg
cmp
int
pop
mov
ljmp
fs
fistpl
cmp
lret
aaa
pop
loopne
movsb
xchg
cmc
dec
sub
xchg
out
addr16
cmp
aam
aaa
jge
stos
lahf
mov
ds
loop
cmp
sahf
fmuls
das
adc
ds
outsl
and
xchg
push
aaa
xchg
jns,pt
mov
out
mov
sbb
out
pop
jp
jne,pt
loopne
adc
xchg
enter
sbb
mov
and
mov
cmpsb
mov
lcall
popf
sub
sahf
xchg
in
add
popf
insb
ds
lock
popl
inc
jle
rclb
ror
std
mov
dec
mov
cli
inc
xchg
adc
mov
mov
pop
ret
xor
lret
stc
pushf
je
ret
push
aaa
fcomps
xchg
jmp
jns
aaa
push
andl
mov
call
scas
dec
xchg
xchg
jnp
add
rol
push
push
add
jle
sbb
dec
mov
stos
xor
popf
inc
addr16
jnp
sti
jmp
leave
push
fldl
mov
inc
fs
sbb
mov
mov
mov
repnz
mov
outsl
pusha
ds
inc
int3
dec
mov
aaa
fucomi
pop
repnz
pop
cmp
pop
shll
shr
mov
fwait
or
mov
outsl
aaa
push
pop
mov
divps
lcall
sub
sub
sbb
scas
jle
push
mov
lds
dec
mov
push
dec
or
scas
mov
aaa
add
in
test
insb
push
mov
inc
aas
mov
aaa
in
dec
test
and
mov
sbb
clc
mov
mov
in
and
add
add
in
icebp
test
xor
jg
dec
mov
sbb
xor
mov
out
inc
fimuls
jp
mov
and
or
lcall
sbb
popf
fldl
push
inc
mov
negl
lcall
mov
out
adc
xor
lcall
imul
mov
std
inc
test
inc
cmpb
lock
aaa
adc
rcr
divb
mov
sbb
out
mov
addr16
cmp
fdivl
adc
enter
loope
mov
pop
cmp
in
rcr
popf
mov
leave
clc
push
xchg
arpl
sbb
popf
inc
std
test
hlt
imul
mov
xor
out
subb
clc
out
shll
xor
sbb
loopne
mov
in
mov
mov
daa
fldl
adc
dec
dec
pusha
mov
leave
aaa
xchg
sbb
icebp
aad
xchg
xlat
jp
ds
mov
inc
xor
pop
test
push
jbe
mov
fsub
cmp
cs
fidivs
push
lret
sahf
inc
inc
adc
lcall
fwait
push
add
cmp
inc
cmp
sbb
adcb
fs
ret
pop
fisttpll
pusha
les
mov
push
push
fbld
dec
pop
loopne
leave
sbb
or
cmpsb
pop
sub
mov
or
sub
or
sbb
lcall
pop
jmp
pop
push
aad
ja
in
pop
pop
push
jg
add
out
aaa
pop
and
mov
pushf
lret
fwait
repnz
pop
inc
mov
inc
mov
in
sbb
mov
hlt
gs
out
lret
pop
icebp
and
test
adc
inc
xchg
push
mov
mov
fcomps
cmp
xchg
lea
imul
dec
mov
aas
push
or
pop
mov
lods
faddl
popa
mov
jp
jl
pop
dec
or
mov
outsb
push
mov
scas
jo
inc
int
in
inc
cmp
jge
pop
add
aaa
mov
movsl
push
mov
jecxz
sbb
inc
shrb
loope
push
sbb
jge
pusha
lahf
clc
das
shl
mov
js
mov
jmp
jg
cmp
andb
int3
cmp
inc
jle
push
cmpsl
pop
mov
shlb
push
jg
push
lcall
jne
out
aas
mov
push
clc
movsl
push
jp
mov
xor
mov
int3
mov
mov
inc
mov
ljmp
lcall
inc
jns
pop
push
sub
push
subb
jl
movsl
xchg
xchg
lret
scas
subl
cmpsl
pop
jne
add
fdivl
push
bound
or
inc
and
fstpl
add
in
andb
adc
mov
fiaddl
cwtl
adc
mov
dec
inc
ficoms
fcomps
sbbb
jbe
mov
cli
daa
repnz
imul
cmpsb
jp
xchg
inc
loop
dec
movsl
xor
notb
sbb
fisubl
ret
mov
push
cs
xchg
fsubrl
pop
cmp
cmp
enter
adc
pextrw
mov
sahf
out
xor
and
bound
enter
or
insl
daa
push
dec
sti
frstor
inc
sub
test
rorb
inc
xchg
push
adc
in
cmp
jp
dec
mov
stos
adc
inc
mov
xchg
es
dec
adc
push
in
lcall
aaa
pusha
movb
xchg
shl
loopne
lods
faddl
push
xlat
leave
ds
test
lahf
popf
push
test
dec
aad
xchg
das
dec
sbb
inc
jbe
sbb
xlat
mov
pop
fstl
jg
cmp
sub
jp
pop
cwtl
enter
dec
ret
cmp
insb
adc
insl
loop
icebp
and
inc
push
popa
sbb
dec
ret
pushf
xchg
and
mov
ja
adc
ljmp
sub
daa
xorl
stc
outsb
adc
hlt
xchg
push
fisttpll
add
stos
dec
ds
dec
jo
cld
jb
leave
pop
and
xchg
ret
mov
pop
inc
les
in
aas
in
adc
pop
adc
divl
cmp
cs
mov
xchg
mov
xor
rol
add
cld
or
sub
dec
push
sub
inc
lcall
lcall
mov
bswap
cmp
in
xchg
sbb
dec
adc
fldl
cld
addr16
ljmp
pop
andl
in
dec
arpl
sahf
pop
js
inc
fst
mov
push
call
ret
in
imul
rcrl
lds
and
push
dec
pop
push
scas
cmpsl
aaa
fdivrs
dec
shl
mov
mov
fistpll
cld
lock
repnz
fsubrs
mov
nop
into
fwait
lods
dec
add
sbb
lock
pop
and
stos
cmp
jno
daa
lea
push
add
test
insb
call
push
ds
xlat
jg
lahf
add
xchg
in
dec
imul
rcrb
mov
int
test
inc
ds
pop
jne
mov
mov
sbb
pop
in
adc
adc
popa
pop
or
loopne
pushf
fcoml
inc
inc
test
movsb
clc
jmp
jl
pop
repz
and
lahf
push
aas
pop
xor
sub
cmp
cmp
loop
shrb
add
shlb
mov
push
sahf
pusha
adc
mov
xchg
add
push
pop
mov
test
ljmp
fnsave
sbb
cmp
mov
inc
icebp
gs
sub
cmpsb
negl
or
clc
lcall
jnp
clc
xchg
loop
call
fsubl
outsl
ds
iret
aaa
insb
loopne
dec
sbb
js
lcall
jae
in
cmp
push
mov
cmp
adc
mov
sbb
fdivrl
std
and
add
xchg
jp
dec
mov
xor
daa
in
and
fstcw
test
adc
jnp
andb
add
cli
push
imul
stos
xor
push
loop
or
inc
dec
push
dec
cmp
std
fmul
sbb
xchg
lods
std
dec
mov
dec
mov
sub
and
decb
je
cmpsl
shrb
mov
xchg
cmp
ficomps
imul
mov
cmp
mov
cs
out
push
rcll
outsl
mov
and
popf
dec
ds
std
inc
xchg
push
xchg
xchg
push
push
movsb
and
or
imul
cmpsb
stc
pop
and
push
inc
negb
sbb
fstps
inc
cltd
mov
dec
test
ds
lret
push
rcr
cmp
int
inc
mov
sub
sar
fsubrl
adc
dec
ds
xchg
mov
clc
inc
sub
dec
jl
jle
dec
repz
jecxz
je
and
iret
mov
jp
jno
cmpsl
pop
inc
ds
xchg
cmp
inc
mov
cmp
jecxz
es
lcall
stos
into
fsubl
jle
cs
icebp
popf
in
stos
lret
cmpb
xor
fcompl
mov
lcall
mov
jb
lcall
xor
xchg
sbb
mov
add
fldcw
jns
fldt
mov
sub
faddl
jle
jb
push
adc
pushf
in
jg
scas
aas
xor
aaa
hlt
push
cmpsb
mov
mov
mov
shll
push
outsl
or
xchg
lcall
cmp
fisttpll
lcall
inc
lea
adc
lret
pop
push
sar
inc
cmpsl
sti
rorb
sub
push
loopne
lret
jmp
and
scas
in
and
aas
ds
jno
adc
pusha
ds
add
cmp
mov
fsubr
std
sbb
push
pusha
inc
lcall
fistl
out
fadd
mov
mov
cli
dec
icebp
jmp
pop
jne
imul
add
mov
cmpsl
and
aas
push
mov
sar
lret
jl
aas
cmp
xchg
cltd
pop
inc
sbb
sub
dec
dec
fcoml
sub
ds
xor
dec
jae
pushf
cmp
mov
jmp
jne
fiadds
push
outsb
or
fmull
ds
aam
js
inc
pop
inc
aaa
mov
sbb
lock
lcall
sbb
in
add
in
lret
ss
daa
mov
mov
lahf
jl
aaa
cmp
aaa
stc
mov
icebp
in
add
loope
arpl
movsb
xchg
stos
fnstsw
fdivl
adc
ljmp
inc
lcall
mov
leave
mov
mov
popf
in
cmp
jmp
iret
nop
mov
mov
cmc
mov
movsb
lods
pop
cmpsl
scas
popf
dec
cmpsl
jg
cmp
jnp
dec
lret
pop
popf
cmp
or
rdpmc
adc
stos
or
cmp
add
add
insl
cmp
ds
ficoml
cmp
aam
je
cwtl
dec
sbb
jns
mov
cmpsl
mov
pop
sbb
pop
inc
sbb
das
popf
pop
scas
pop
daa
stc
pop
xchg
data16
fdivl
inc
fcmovnb
out
ljmp
cmp
cmc
sub
shlb
ret
or
lcall
fsubr
pop
scas
push
and
inc
jns
jecxz
addr16
inc
int3
mov
cmp
lret
inc
aaa
pop
mov
xchg
add
aam
ficompl
fcoml
roll
jl
clc
cmp
stos
cmpsb
out
xlat
daa
cmp
pop
pop
push
pop
sbb
pop
lods
cs
add
stos
andl
inc
in
outsl
inc
xchg
rcrl
pop
xchg
int
aam
cld
shrl
pushf
test
cmp
inc
fsubrs
rorl
rcr
and
mull
adc
pop
ds
in
sbb
mov
cmp
mov
push
sbb
fistps
mov
ds
sti
out
dec
sub
rcll
ds
aaa
sbb
jno
fstpl
or
mov
inc
push
xchg
xchg
arpl
neg
inc
jp
or
jns
ret
cltd
xchg
pop
cmp
jae
mov
xchg
aaa
jmp
cmpsl
ret
cmpsb
lods
or
pop
test
ss
ljmp
outsb
jmp
inc
push
dec
add
xchg
and
lods
insl
inc
adc
enter
fwait
or
mov
or
test
xchg
mov
lcall
add
fstpl
repz
inc
push
xchg
cli
fisubrl
mov
mov
dec
jmp
mov
mov
mulb
ffree
inc
aas
aaa
lret
xlat
xor
xchg
sbb
fsts
lret
cmpb
loopne
mov
mov
dec
negb
adc
in
repnz
jb
das
inc
jae
out
out
pusha
inc
das
inc
jg
rcll
jno
inc
jo
mov
mov
xchg
adc
fstp
mov
jecxz
jmp
cwtl
inc
lods
xor
mov
cmpsb
fnstsw
iret
inc
sbb
lcall
cmp
add
xchg
enter
cli
in
fs
and
stc
pusha
mov
call
jge
ja
insb
ds
mov
shrl
aaa
rclb
adc
sti
shlb
out
cmp
movl
loopne
loope
shlb
hlt
lcall
push
inc
mov
clc
lds
fmull
push
repnz
ljmp
inc
or
pop
ja
jle
xchg
mov
fisubrs
test
popa
test
sub
sahf
push
imul
add
jmp
cmpsb
imul
pop
sbb
cmc
lcall
sub
mov
daa
movsl
addr16
sbb
fnstsw
jo
pop
aad
test
mov
pop
rsqrtps
imul
jno
loop
lcall
leave
test
push
test
push
movsb
je,pt
mov
jge
or
add
lret
mov
inc
jb
iret
jl
ljmp
les
fwait
or
fldcw
inc
daa
loop
dec
push
cmpsl
mov
lock
push
popf
mov
mov
dec
jp
mov
clc
mov
xchg
sbb
push
inc
daa
inc
out
movsb
lret
push
push
divl
aaa
xor
mov
and
clc
test
jmp
push
repz
test
daa
int3
sbb
mov
pop
adc
into
rcr
or
test
int
test
or
jae
call
mov
push
dec
daa
daa
cmpl
xor
add
or
inc
scas
jge
mov
loopne
cmp
imul
adc
fistpl
andb
pop
push
pop
cli
outsl
pop
lret
push
or
cmp
aas
fucomi
enter
add
scas
int3
pop
inc
enter
test
repnz
mov
xchg
xor
or
iret
mov
std
cmp
popf
test
js
xchg
pop
inc
xchg
ds
inc
shrb
test
xchg
dec
cmp
outsb
inc
and
xchg
lahf
mov
fnstcw
lcall
outsl
ret
mov
cmp
adc
jl
cmovo
mov
mov
lea
out
sti
sbb
arpl
xor
mov
ds
sar
xchg
jmp
or
or
scas
jnp
loope
lea
movsb
pusha
scas
sbb
dec
cmc
test
or
xor
ds
cmp
cmp
pop
or
sbb
cmc
mov
scas
pop
bound
mov
push
dec
sbb
aad
arpl
add
add
ja
gs
adc
push
mov
fdiv
sub
imul
adc
push
jo
dec
xchg
fmull
arpl
ret
or
pop
push
std
mov
inc
es
mov
inc
and
sbb
in
fsubrl
mov
test
dec
popf
cmp
fdivrl
in
into
jge
dec
cmp
xor
addr16
in
gs
cmpsl
dec
leave
jp
ljmp
cld
pushf
test
fcmovu
jg
xor
mov
lret
loopne,pt
cmp
mov
adc
adc
pop
pop
xor
cmp
dec
sbb
int
fwait
pop
into
inc
cmp
lcall
mov
hlt
inc
mov
loopne
xchg
push
das
arpl
cmp
loope
cmp
test
pushf
cwtl
cmpsb
push
outsl
shll
jecxz
push
lret
push
fwait
in
add
pop
in
cmp
mov
ss
pop
mov
xlat
insb
cmp
imulb
inc
les
jno
xor
ret
mov
sbb
mov
in
xlat
ja
sub
mov
jle
shl
fdivp
lods
mov
mov
fadd
aaa
sbb
jle
push
sarb
pop
mov
jmp
push
ret
jbe
add
xor
ficompl
dec
fcmovu
mov
mov
test
aas
adc
fcmovb
test
pusha
into
fcmovb
cmpb
das
addr16
xchg
push
je
fimuls
popf
loopne
or
push
lock
cmp
inc
inc
xchg
jp
xchg
inc
inc
dec
repnz
xor
sbb
ss
lcall
xchg
dec
fstl
aad
psubusw
test
jp
jmp
inc
sub
add
ss
xor
adc
cld
cld
inc
ret
pop
xor
jbe
std
fcoml
jge
sub
adc
ss
adc
mov
xor
inc
lcall
pop
sbb
xchg
loop
and
cmp
dec
sub
ds
ljmp
out
inc
cmp
xchg
lahf
inc
pop
mov
push
loope
push
xchg
aaa
sub
mov
pop
insb
aaa
cltd
jmp
mov
jg
mov
mov
mov
loop
imul
lret
mov
inc
inc
sar
lds
lods
pop
sbb
mov
test
inc
pop
cli
sbb
dec
or
negb
cmp
inc
scas
mov
mov
testl
jmp
lret
push
ds
hlt
adc
adc
testb
pop
inc
repnz
mov
xchg
gs
adc
mov
test
mov
out
add
cs
mov
and
mov
int3
call
hlt
sahf
test
in
xor
add
out
jg
faddl
sub
jnp
idiv
fisubrs
xchg
jl
inc
aaa
frstor
in
inc
gs
pop
ds
enter
movsl
std
add
cmp
lcall
insb
jb
jg
mov
mov
insl
aam
ss
pop
mov
imul
and
push
fwait
or
mov
ss
and
fwait
loopne
fcmovnb
fistps
mov
jne
mov
aaa
mov
xor
lret
call
rdpmc
loope
cmp
aad
pop
jo
sahf
mov
lods
mov
adc
fnstsw
inc
cmp
ret
and
jle
mov
pop
sbb
adc
in
push
lret
out
push
pushf
testl
sbb
push
cli
aaa
mov
mov
lcall
test
fst
pop
mov
std
loop
xchg
aas
mov
sbb
inc
jbe
test
mov
dec
icebp
sbb
jns
out
xor
arpl
sub
inc
mov
pop
mov
push
xchg
and
push
out
inc
loope
out
ds
sbb
xor
dec
in
leave
adc
clc
sub
mov
mov
mov
lcall
ds
xchg
jmp
xchg
push
mov
in
sub
add
loope
push
ljmp
rcr
add
ds
sub
mov
mov
out
mov
add
pop
stc
inc
aaa
dec
xor
inc
lcall
lahf
cmp
xchg
push
adc
push
cmc
btrl
fidivrs
jb
mov
fistl
sub
jl
jmp
mov
xchg
fldl
jbe
jmp
pop
sbb
jmp
test
dec
cld
jge
adc
lret
cmc
inc
outsl
jmp
dec
lods
int
int
mov
dec
bound
js
inc
pop
fdivrl
push
fadd
aas
aad
sub
jnp
jp
mov
jge
sub
and
jmp
jnp
or
ds
rorl
inc
xor
xchg
mov
int
rcrb
inc
dec
sahf
out
cmp
ret
inc
loope
lcall
outsl
sub
aaa
fst
pusha
test
fiaddl
hlt
xchg
push
jmp
and
lods
xchg
mov
ds
movsl
dec
push
orb
int
xor
fldt
adc
daa
jns
fmul
rdmsr
xor
dec
mov
adc
popf
fstl
in
test
stos
mov
xchg
adc
or
adc
xchg
ret
fidivs
lods
je
fmul
imul
inc
sbb
adcb
fmuls
movsb
sbb
sbb
mov
pop
out
push
mov
std
les
mov
in
movsl
std
sbb
test
sub
mov
into
bound
pop
fstpl
adc
pop
mov
cmp
dec
push
jb
or
jne
push
ret
fstp
lods
cld
fimull
pop
shl
sub
push
xchg
adc
enter
or
test
out
or
out
mov
frstor
aaa
jmp
orl
ret
out
loop
mov
ret
push
cmp
sti
xor
cld
cmp
shlb
adc
mov
push
lcall
jl
fnstsw
xchg
scas
push
ds
hlt
xchg
inc
pop
bound
mov
lods
jge
lcall
ss
faddp
cmp
mov
loopne
ds
iret
push
add
lea
adc
clc
shlb
push
inc
pop
push
cmp
sti
xchg
fidivs
mov
cmp
xlat
inc
loope
cmp
cmp
lret
ret
push
cmp
in
mov
stos
cmc
std
jns
filds
xchg
punpckldq
jno
fwait
sub
in
xchg
dec
add
test
inc
or
popa
lcall
jae
fstpl
ss
cmpsl
inc
inc
jp
mov
fwait
addr16
push
jo
cmpsl
push
ds
jp
mov
jns
add
mov
and
inc
roll
icebp
stc
jp
inc
outsb
mov
xor
pusha
add
jno
popf
inc
jp
loope
dec
jbe
or
mov
test
mov
mov
fcomp
cmpsl
leave
mov
gs
dec
aas
mov
paddq
sub
call
pop
mov
movsl
add
sub
jno,pt
lret
imul
cmp
mov
pop
in
xchg
test
lret
sbb
loope
mov
je
push
lcall
cmp
cmp
lods
jbe
pop
ds
stos
or
mov
frstor
cmp
inc
cli
cmp
ja
mov
icebp
jp
and
sar
fcomps
data16
ja
jg
mov
inc
movsl
or
jl,pt
in
xchg
test
dec
loope
outsb
test
ficomps
dec
jge
inc
or
mov
mov
test
xchg
or
stos
lret
pop
ja
sub
and
ljmp
mov
mov
movsl
pop
inc
push
sti
aaa
dec
loop
or
add
fnstsw
lar
fcoml
xlat
scas
pop
cli
jbe
sub
imul
ffreep
cmpsl
fcmovnu
in
daa
faddl
dec
or
add
jle
ds
inc
mov
adc
add
mov
pop
ljmp
sahf
fistpll
inc
add
and
push
inc
aaa
fwait
sbb
cmpsl
in
gs
lcall
jnp
mov
cmp
add
arpl
jbe
cmp
jmp
out
inc
shlb
jle
jno
ds
cli
fdivl
js
dec
xchg
cld
js
mov
push
bound
in
or
push
cwtl
mov
in
mov
sub
sub
cld
fnstsw
jge
stos
sbb
sbb
leave
pop
frstor
jno
icebp
daa
add
cmp
cwtl
xor
jb
lahf
pop
dec
aaa
mov
cli
jnp
in
push
jmp
inc
add
aam
push
add
or
cmp
movsb
fucom
jl
cltd
fs
insl
mov
inc
jnp
mul
addr16
bound
lds
jp
xchg
loopne,pt
inc
gs
mov
jmp
cmp
fadds
cmp
aad
lcall
dec
mov
mov
sahf
stos
lea
add
aaa
mov
imul
inc
xchg
cwtl
aaa
pop
pop
sahf
sbb
decb
popf
cli
sub
lods
and
idiv
arpl
mov
and
jge
gs
js
add
or
inc
xchg
aas
or
daa
outsb
jb
jno
xorl
mov
out
pop
fmuls
jg
mov
sub
push
lods
insb
shll
hlt
xchg
xor
out
lods
sbbl
mov
mov
std
aaa
imul
shl
xor
mov
fcoml
aas
inc
popa
or
pop
xor
ljmp
inc
jl
xchg
testl
shlb
fwait
in
push
mov
and
sbb
jnp
mov
cmp
pop
push
or
sbb
inc
dec
sahf
inc
cmp
rclb
cmc
dec
ret
adc
lahf
sbb
test
jb
icebp
sbb
sbbl
fidivs
mov
movsl
xchg
mov
cmp
lret
lods
fistps
ds
inc
sbb
mov
shrb
repz
mov
mov
lock
inc
mov
stos
fcoml
aad
xchg
hlt
cld
scas
mov
add
inc
repz
fldl
pop
sub
add
add
mov
cmp
test
sub
shll
mov
inc
shlb
push
loopne
fisubl
inc
jp
jecxz
xor
push
inc
pop
popw
pop
cmp
mov
sub
dec
dec
jle
int3
ds
lahf
jg
insb
es
aaa
mov
mov
mov
repz
mov
dec
insb
xlat
fstl
jmp
inc
cmpsb
dec
cmpsl
fidivrl
mov
lcall
aaa
mov
repz
out
cmp
adc
xorb
push
push
pop
pop
int
lock
inc
popf
or
jmp
shrb
fidivrl
test
dec
mov
arpl
js
loop
stos
mov
sub
ja
fs
lea
cmp
adc
pop
push
iret
inc
sbb
jp
inc
dec
sahf
hlt
mov
mov
inc
notb
insl
ds
aaa
fnsave
jg
ss
sbbb
arpl
mov
pop
aaa
sbb
jae
sub
jmp
jg
andb
sub
fcompl
nop
mov
lds
mov
add
jl
adc
cmpl
sbb
dec
mov
cmp
cmpl
mov
incl
ja
mul
lods
pop
pop
mov
hlt
or
dec
inc
outsl
lret
stc
ljmp
dec
ret
inc
pop
jne
pop
lahf
jno
mov
dec
popf
sahf
jmp
mov
sub
lcall
notl
push
xor
movsl
adc
psrad
or
cmpl
inc
sahf
jns
out
test
sbb
dec
gs
je
and
stc
mov
cmp
push
jmp
scas
cmp
pop
fucomip
sub
adc
jle
sbb
sbb
movsb
call
ret
inc
jb
xchg
or
push
outsb
ffree
mov
movsl
repnz
pop
sbb
sti
mov
dec
mov
push
mov
cmp
mov
sub
sbb
mov
lcall
dec
mov
xor
adc
mov
adc
ljmp
sbb
clc
or
sub
and
push
sbb
scas
fsubl
xor
std
test
loopne
jnp
and
ret
enter
mov
clc
push
inc
push
inc
out
imul
sbb
xchg
sbb
imul
xchg
in
jne
int
pop
mov
fisubl
iret
aam
fst
mov
ret
loopne
fnstsw
cmp
dec
scas
push
xchg
push
jge
insb
lret
iret
add
imul
mov
sahf
jb
xchg
mov
pushf
lret
movsb
aam
jbe
fidivrs
shlb
cwtl
cmp
loop
add
aad
notb
rcl
sbb
adc
mov
nop
xchg
dec
add
loop
sbb
cmpsl
mov
xchg
sarb
movsb
mov
xchg
mov
sbb
add
sbb
adcb
jmp
bound
cmp
dec
push
lcall
sub
fsubl
mov
out
out
lods
and
mov
sbb
popf
shll
aaa
add
cmp
not
add
pop
ds
cmpsl
test
aaa
int
sbb
or
pop
fisttpll
jno
in
adc
jne
dec
mov
ss
fsubl
stos
and
rcrl
popa
nop
pop
rcrb
mov
popa
aad
adc
in
mov
inc
cltd
xlat
adc
gs
inc
insb
dec
add
push
nop
dec
out
repnz
stc
int3
sbb
fidivrl
inc
inc
jle
loope
rcrb
xor
test
ret
aaa
shrb
push
outsl
adc
inc
push
cmp
mov
fdivrl
pop
adc
inc
lret
or
lret
jbe
inc
les
mov
pop
inc
xor
mov
lahf
pop
pop
inc
rcrb
mov
mov
fbld
cld
cmp
imul
push
cmp
js
mov
nop
out
inc
push
orl
dec
mov
xor
and
mov
adc
mov
pop
mov
in
cli
lret
mov
add
ss
ss
pop
repnz
push
sahf
std
sbb
or
inc
lahf
add
cltd
push
mov
mov
repz
mov
faddl
inc
push
shrb
or
mov
jbe
sbb
push
jle
shlb
test
stc
jg
sub
pop
insl
ficoms
incl
test
fs
mov
outsb
jle
fildll
jne
int
lret
ljmp
test
mov
int
in
mov
lcall
js
and
loopne
ss
xor
repnz
push
push
mov
fstp
loope
push
mov
addr16
mov
or
lds
js
enter
xor
fimuls
pop
loopne
jecxz
mov
sub
roll
push
jp
push
jb
or
adc
jecxz
fisubl
outsb
or
inc
jl
xor
pop
inc
popf
xchg
repz
and
faddl
andl
sbb
cli
test
cmp
in
mov
and
enter
or
loopne
orl
inc
jg
sbbl
dec
inc
or
stos
and
stos
lea
cltd
sub
lcall
xor
fnstsw
pop
inc
mov
fisubrl
rcrl
xorb
inc
and
pop
xor
sbb
lea
mov
xchg
pop
jns
aas
inc
push
frstor
push
push
add
cmp
dec
sub
fsubl
dec
test
sub
cmp
repz
arpl
inc
cmp
gs
jle
lahf
push
fnstsw
aas
inc
loop
insl
jge
fidivl
lahf
pop
out
pop
fimuls
popf
jp
pop
repz
mov
lret
xchg
pop
in
pop
int3
aas
xchg
cmpb
lahf
mov
cmc
ds
xor
loopne
enter
cld
cmp
cmp
jg
xor
sub
into
pop
std
inc
pop
push
xchg
or
aas
daa
ds
in
inc
insb
or
fistpl
adc
mov
xor
loope
es
inc
scas
cltd
lock
add
push
xchg
cmp
lock
imul
push
xchg
xor
and
fwait
pop
mov
cli
adc
pop
fstl
ret
pop
mov
mov
push
inc
push
sbb
cmpsb
shrl
xor
cmp
ljmp
into
incl
ds
jle
xchg
test
sbb
insb
shll
pop
pushf
stc
cmc
dec
cmp
imul
pop
or
xor
mov
fsub
mov
or
adc
enter
fmull
mov
mov
adc
pop
jns
sti
out
stc
lcall
jns,pn
push
loope
adc
mov
jl
inc
test
or
jle
and
out
mov
fcoms
loop
inc
jne
mov
add
lcall
xor
cmp
repz
into
popf
stos
jbe
sti
jo
leave
iret
inc
imul
popa
mov
fldl
xor
imul
les
mov
or
sbb
xor
fcmove
fsubrl
pop
es
lock
pop
xchg
lret
aaa
call
mov
push
or
fidivl
repz
push
mov
daa
fnstenv
mov
or
ret
or
cmp
or
cmp
cmpl
loope
inc
adc
and
lcall
push
in
loope
lahf
jnp
push
fists
sbb
loop
aaa
rcrl
aas
xlat
cmc
popa
or
sub
test
outsb
popf
xor
add
fldl
xchg
std
inc
nop
mov
fildll
cmp
insl
mov
fisubs
outsb
aas
jg
sbb
int3
and
cmp
hlt
adc
jge
test
jge
push
mov
in
mov
mov
jg
sbb
push
cmp
ffreep
sbb
sub
push
push
insl
test
inc
ja
popf
mov
mov
lcall
fidivrs
aaa
mov
test
or
aas
ds
jge
pushf
push
data16
lds
xchg
in
mov
in
insl
popf
mov
pop
push
imulb
cmp
nop
push
jecxz
cmp
stos
cs
adc
mov
xchg
cmp
adc
and
sbb
or
imul
add
xor
imul
jecxz
enter
add
lahf
arpl
repnz
xchg
mov
jecxz
jb
mov
fadd
rolb
sbb
mov
popf
leave
and
mov
dec
or
outsl
out
inc
pop
push
xor
aaa
push
dec
inc
movsl
cli
adc
pop
lods
aaa
shlb
lds
push
inc
mov
fcoml
hlt
les
sbb
xchg
call
sbb
add
fsubrl
data16
out
cmp
jle
jo
dec
or
dec
ret
out
pop
xchg
sbb
xchg
pop
or
shll
dec
cmpsl
sbb
and
cmp
es
pop
into
das
rcr
xchg
inc
outsl
sbb
pushf
or
jo
pop
cmp
lcall
in
push
popa
dec
mov
shlb
icebp
sbb
xchg
insl
cmp
xor
fmull
xor
pop
or
xlat
mov
mov
test
fstpl
jo
pop
in
pop
adc
mov
inc
pop
pop
mov
imul
movsl
jg
movsb
and
push
xor
cmp
inc
aaa
movsl
jns
rolb
inc
lcall
je
fldl
insl
lahf
jmp
filds
ds
fildl
adc
aaa
ja
inc
je
xor
inc
xchg
push
lret
fldl
fisttpl
ds
ja
stc
inc
dec
mov
inc
arpl
data16
cmp
push
add
sti
lahf
jg
sub
ds
scas
sbb
ja
adc
into
dec
push
pop
sarb
ds
loop
jg
ss
inc
xchg
xor
pop
sub
test
xchg
dec
push
cli
xor
pop
cld
cmc
fsubl
xlat
or
rcll
pop
icebp
lock
xor
sbb
ds
jnp
mov
movl
pop
mov
jmp
pop
adc
faddl
push
es
stos
push
cmp
popf
jbe,pt
call
mov
pop
pop
xor
pop
out
cmp
dec
xor
ss
aaa
or
and
shrb
pop
cld
mov
mov
jmp
rolb
sbb
pusha
in
std
test
dec
sahf
jmp
lcall
hlt
scas
stc
push
aas
fs
hlt
inc
jmp
push
or
mov
mov
xchg
pop
fisubrl
and
xor
pop
lcall
pop
pop
fisttpll
xor
int
or
push
ds
adc
aaa
mov
paddq
pushf
xor
aam
add
sub
ret
jecxz
cmp
sbb
clc
shll
add
inc
test
pop
mov
dec
mov
fldl
mov
adc
cmp
jne
stos
xor
out
and
cmp
cwtl
push
push
pusha
inc
jae
test
int3
in
nop
ds
mov
push
mov
je
xor
fstl
incb
out
aaa
rcrl
sub
imul
mov
jns
test
mov
rorb
popf
bound
fimull
cltd
out
mov
mov
in
shll
mov
stc
inc
push
std
aas
inc
aaa
add
fcomps
jp
inc
daa
jns
std
cmp
push
popa
xchg
push
push
aaa
nop
in
test
jp
fdivs
or
gs
adc
jo
mov
fildl
xchg
in
lds
idivl
pusha
mov
loopne
push
mov
fimull
lcall
lahf
adc
xchg
imul
jmp
mov
push
cltd
xchg
mov
aaa
shl
in
mov
lcall
data16
roll
int
jbe
cmp
or
cs
in
xor
push
es
scas
fs
mov
or
jb,pt
ljmp
fcmovb
cmp
sub
mov
and
lods
outsb
adc
lcall
cmp
fstpt
icebp
push
es
sbb
mov
or
or
imul
inc
mov
pop
into
inc
fildl
fiaddl
adc
pushf
push
mov
outsl
ds
sahf
xchg
ret
cmp
mov
stos
jecxz
sbb
cmp
sub
aaa
cs
fdivrl
scas
fdivs
jne
aaa
popa
into
popa
inc
sbb
mov
dec
or
jb
ds
xchg
out
fnstsw
rol
aam
xchg
imul
aas
outsl
es
lock
out
dec
loopne
cmp
inc
lcall
cmpsl
rcr
dec
in
popa
enter
push
lcall
jp
scas
push
pop
ljmp
inc
add
adc
aad
pop
ja
pop
mov
popa
jg
out
mov
inc
cmp
cwtl
mov
sbb
jbe
and
stos
add
arpl
mov
ja
dec
push
in
les
lcall
xchg
jbe
cmp
mov
daa
int
lret
fdivrp
hlt
cmp
sbb
into
push
lcall
jecxz
mov
dec
mov
daa
jae,pt
addr16
shl
leave
aaa
aam
cld
jns
adc
int3
popa
shr
fisttps
push
cmp
dec
mov
lods
xchg
lret
test
xor
mov
in
push
cmp
sbb
xchg
xchg
out
mov
clc
int
push
outsb
mov
jg
frstor
fcomps
outsb
jle
sub
xchg
aaa
shlb
insb
in
stos
ja
test
mov
xlat
test
stos
and
shlb
testl
stc
mov
jecxz
sahf
push
sbb
rclb
dec
popf
inc
inc
shll
hlt
push
out
out
mov
movsl
or
sub
fsts
pop
sahf
sbbl
dec
push
sbb
cmpsl
les
ja
sub
int3
inc
push
fldt
pop
lcall
sar
add
sub
lcall
aaa
insb
test
mov
popf
jno
es
adc
out
sbb
aaa
jo
test
push
aas
pop
rcll
rcr
inc
mov
or
sti
test
dec
popa
or
ret
aaa
loope
mov
enter
push
dec
pop
jp
into
dec
cli
aaa
xor
fsubs
gs
stos
mov
xchg
pop
in
jne
lock
loop
sti
ficoms
pop
jp
arpl
scas
jg
sub
inc
add
sbb
fucomp
pop
inc
ds
add
popf
faddl
lahf
mov
jne
ret
push
mov
push
mov
lds
into
lods
lcall
insb
push
adc
bnd
mov
cmp
iret
cwtl
jns
in
outsl
fs
cmp
pusha
sbb
test
hlt
jp
addr16
push
cmp
and
dec
push
jae
and
xchg
divl
test
jne
das
pop
add
dec
pop
pop
xchg
cmp
ficomps
lahf
push
mov
add
fnstsw
addr16
into
pop
sub
ds
fildl
insb
adc
sub
cwtl
nop
add
scas
js
cmpsl
xchg
push
stc
pop
cmp
inc
adc
adc
imul
fwait
cmp
mov
sahf
mov
mov
test
jb
mov
cli
shll
inc
xchg
ret
push
lcall
sahf
cmp
call
push
or
inc
jb
ljmp
or
mov
xchg
push
adc
ds
loope
jns
mov
repnz
jp
fs
add
mov
jle
inc
aaa
mov
pop
fs
fcmovb
frstor
stos
fsubr
dec
ja
inc
leave
aaa
sub
aaa
inc
shr
std
rcrb
pop
adc
inc
lcall
cmp
jmp
mov
js
inc
fidivrs
mov
xchg
mov
xor
cmp
fdivs
mov
icebp
inc
imul
mov
mov
jmp
bound
stc
mov
add
sub
dec
lods
mov
push
mov
mov
jbe
mov
std
scas
fimull
add
rol
mov
fistl
repnz
pop
ljmp
push
lods
push
or
lcall
aaa
outsb
popl
cwtl
ljmp
test
ret
xchg
fsubp
out
fwait
and
sub
pop
sbbl
pop
dec
and
and
add
sub
mov
sbb
cwtl
je
outsl
ds
out
push
mov
cltd
ds
and
fidivrs
loop
aaa
mov
mov
xchg
lods
jg
pop
stc
lahf
inc
hlt
pop
sub
xchg
loopne
pop
cmpsb
push
cs
lcall
rcrb
test
and
test
sub
movsl
cmp
in
ss
jb
ss
xchg
jge
lods
into
aas
sub
movsb
sbb
into
fidivrs
adc
dec
inc
test
fnstsw
aaa
xor
pusha
lds
dec
xchg
jg
adc
cwtl
sti
mov
mov
enter
fcmovnb
mov
xlat
aad
mov
mov
xor
nop
lcall
enter
pop
sub
lods
inc
stos
mov
mov
add
jge
adc
jns
and
or
mov
dec
sub
cld
sub
jnp
ret
popa
sahf
or
push
ds
aaa
dec
mulb
jp
cmp
mov
mov
lods
into
fcoml
mov
mov
ja
pop
sti
js
dec
pop
jp
fwait
adc
mov
cmp
jne
aaa
inc
and
jmp
xor
push
repz
dec
gs
xor
push
xchg
je
push
push
ds
out
inc
pop
mov
into
dec
or
sbbb
stos
push
das
loopne
imul
rcr
xor
hlt
xchg
stc
incb
subb
add
or
jge
xchg
pop
push
mov
adc
leave
jne
sub
mov
popf
inc
cmpb
pop
imul
popf
push
xchg
ret
clc
mov
push
xor
lret
pop
mov
insb
aam
mov
call
fcoml
lds
lods
stos
mov
lock
scas
dec
dec
sbb
pop
test
mov
pop
adc
pop
clc
enter
insb
insb
out
xor
and
inc
jge
mov
inc
add
mov
test
hlt
lcall
inc
lock
icebp
jb
pop
jp
ds
js
pushf
shrb
fadds
xor
push
fwait
cmp
or
add
cmp
push
scas
outsb
fwait
call
or
cmp
cmp
sbb
nop
mov
inc
pop
sbb
mov
mov
or
mov
pop
call
jbe
test
hlt
pop
sub
das
ja
lcall
sbb
jo
mov
shlb
xchg
push
dec
out
je
or
xor
movsl
popa
inc
es
fisttpll
cmp
or
in
rcll
cmp
ja
mov
cmp
xchg
dec
ds
jns
das
sbb
pop
lcall
inc
fldcw
cltd
roll
pop
in
lcall
inc
enter
jno
ret
fisttps
dec
enter
aaa
cmp
dec
mov
out
cmp
mov
enter
push
cmp
out
outsl
add
aaa
mov
dec
or
les
mov
cld
nop
frstor
bound
hlt
jnp
cltd
insb
pop
out
std
pop
mov
add
insb
test
repnz
mov
cld
mov
inc
aaa
mov
scas
pop
push
mov
dec
mov
xchg
xchg
inc
cmp
dec
fisubs
mov
inc
cs
pop
xchg
mov
fistpll
push
fimull
xchg
lcall
dec
inc
out
pusha
pop
sbb
stc
adc
or
rcrb
xlat
sbb
mov
push
xchg
push
xchg
data16
popl
adc
gs
and
inc
inc
repz
lcall
xchg
insb
fldl
nop
ret
jnp
xchg
sbb
xchg
add
xor
ficomps
pop
dec
and
push
sub
sbb
fcompl
push
and
fildll
daa
test
fnstenv
stos
in
std
push
inc
mov
mov
lods
or
xchg
sub
das
inc
hlt
sbb
sub
dec
jmp
jp
xlat
pop
jno
lcall
mov
lock
loop
push
jle
and
mov
add
cltd
notl
inc
loop
neg
test
sbb
mov
out
fmull
leave
pushf
push
pop
lock
aam
jnp
out
sub
test
in
inc
pop
push
pop
cwtl
jmp
scas
pop
inc
test
sbb
lcall
add
pop
pop
imul
arpl
aad
push
ret
mov
inc
out
incl
jp
sti
cmp
leave
daa
pop
ret
cmp
mov
outsb
loopne
cmp
cs
andb
dec
addr16
add
cli
out
ficompl
or
fsubrl
mov
cli
mov
push
add
mov
mov
cmp
dec
enter
mov
mov
leave
mov
shrl
and
fwait
pop
cmp
mov
cmc
dec
push
inc
dec
out
pop
sbb
xchg
inc
lfs
orl
mov
lods
mov
movl
fdivrl
add
sbb
loopne
sbb
into
mov
lcall
mov
fwait
add
pop
int
ds
mov
adc
fistl
add
dec
mov
negb
nop
scas
xchg
cmp
addr16
daa
dec
cli
pop
push
cmp
jmp
pop
fstpt
lahf
jmp
xor
dec
aaa
outsl
lahf
dec
clc
orb
les
add
add
cmp
outsb
pop
pop
mov
cmp
icebp
mov
out
shrb
jb
mov
cmp
sub
frstor
repz
fs
loopne
mul
fs
movsb
pop
aam
lcall
cmc
cmpsb
fldl
push
shlb
push
dec
add
in
xor
fsubrl
jns
stc
inc
out
or
ret
pop
ss
aaa
sub
mov
jmp
jl
cmp
loopne
mov
xlat
js
sbb
push
cs
lea
aaa
je
shrl
cmp
xchg
mov
push
push
jmp
ret
mov
test
mov
mov
mov
out
stc
fxch
dec
aaa
jp
cmp
push
fsubrl
aaa
adc
ds
scas
inc
repz
repz
je
xor
pop
cwtl
out
ds
lock
xchg
in
inc
add
call
lcall
mov
pop
int3
xchg
mov
fistpl
lods
fwait
jmp
ret
inc
jge
xorb
loop
dec
xchg
inc
fcmove
sub
pop
dec
jae
or
clc
jmp
push
inc
data16
jns
adcl
push
cwtl
scas
in
addr16
xchg
push
add
adc
fnstsw
sbb
ljmp
out
inc
jmp
cmpsl
pop
mov
shrl
pop
in
dec
in
jle
jp
int
lret
sbb
out
push
jno
push
dec
sbb
dec
lcall
pop
xor
mov
jmp
mov
and
sub
mov
push
xlat
lods
mov
adc
je
fst
das
test
int3
and
adc
jge
and
lret
adc
dec
cltd
inc
cwtl
sbb
pop
push
shll
sub
lcall
fs
fnstsw
cmp
mov
sbb
arpl
jns
and
and
push
mov
adc
jno
sahf
stos
mov
into
out
jg
negl
xchg
repz
pop
jns
gs
pop
pop
jne
inc
sti
adc
dec
pop
mov
xor
dec
fdivs
and
xlat
aaa
cwtl
mov
fbld
cmp
mov
pushf
mov
cmp
inc
sbb
mov
inc
clc
scas
cmc
loope
int
ret
pop
cmp
in
cmp
das
imul
or
out
mov
divl
pop
outsb
mov
xorl
cmc
pop
mov
jp
ds
mov
or
xor
and
cmpsl
cmpl
jno
cmp
xor
fstl
sub
imul
popa
shll
repz
stos
cmp
pop
push
push
fcompl
fnsave
repnz
xchg
ret
mov
xor
scas
ret
xlat
inc
jns
ds
push
lods
mov
mov
loope
mov
loop
dec
repnz
test
sbb
out
sub
icebp
mov
jae
sbb
pop
lods
outsb
frstor
pop
int
or
cmp
pusha
lret
movsb
pop
gs
add
jecxz
jo
aad
add
rorb
stos
mov
jecxz
mov
bnd
es
fnsave
ss
loope
xor
dec
inc
dec
xor
and
sbb
ret
ror
ret
pop
inc
inc
test
sbb
lcall
daa
sbb
pop
cmpsl
mov
cmp
mov
lcall
lea
rorl
roll
js
xor
mov
ja
pushf
andb
mov
add
xchg
test
jb
scas
ret
inc
pop
mov
out
cltd
iret
and
ror
fmuls
aaa
inc
ffreep
stos
adcl
movsb
cli
in
or
loop
test
push
sub
cmp
add
es
xchg
mov
dec
jle
test
add
pop
mov
lahf
cmp
push
mov
stos
dec
dec
stc
popf
pop
orl
add
sarb
mov
jmp
lahf
dec
insl
cmpsb
lock
xchg
or
gs
int3
push
jle
pop
rcll
in
push
pop
stos
clc
mov
cwtl
stos
aam
cmpsl
mov
ds
adc
lea
mov
leave
in
jmp
xchg
fstpl
cmp
pop
fcmove
xchg
out
aaa
fldl
fsubrl
mov
lcall
push
or
add
adc
es
mov
in
jmp
xlat
xchg
loopne
xchg
pop
in
aad
rolb
ret
ficoml
aaa
sbb
push
dec
or
adc
ds
jae
mov
jmp
xor
aaa
sub
mov
jns
aaa
lock
loop
sub
push
push
xchg
cmpsb
ds
and
imul
aas
lods
cmpsl
cmpsb
ficomps
mov
dec
sahf
in
inc
push
cmp
pop
and
cmp
les
lcall
mov
sbb
sbb
mov
xor
add
pushf
pop
insl
lahf
js
aaa
add
in
cmp
out
dec
and
jnp,pt
pop
jp
sahf
mov
jle
mov
xor
lcall
push
fdivrl
insb
rcrb
xchg
pushf
test
in
dec
pop
gs
clc
gs
pushf
lods
xor
ja
lcall
and
fstl
jg
cli
pop
lahf
mov
xchg
push
pusha
push
mov
scas
mov
in
xchg
pop
imul
stc
mov
xchg
ss
and
and
add
ds
xor
push
frstor
add
add
pop
add
stos
testb
clc
xchg
dec
shlb
jno
push
fs
hlt
add
pop
cmp
test
gs
jns
test
int3
inc
je
into
fldl
in
stc
cmp
roll
xchg
nop
es
mov
jp
add
fwait
pop
int
lret
nop
into
loopne
cmp
fisttps
loop
mov
mov
movsb
loop
push
call
cmp
ds
lds
mov
hlt
mov
fnstsw
mov
mov
pop
shll
sbb
pop
inc
mov
cmp
dec
xchg
gs
inc
in
push
and
add
fmull
rol
and
jge
xchg
sbb
clc
push
and
fsin
lcall
jg
mov
pop
xor
cli
ror
jp
aaa
pop
dec
add
lret
adc
lea
push
sahf
mov
fldcw
stc
mov
mov
lret
pusha
sub
push
outsb
jne
jmp
dec
mov
add
shrl
lahf
mov
es
test
or
jl
sub
dec
sub
push
aaa
roll
jno
inc
push
pop
mov
test
push
jp
scas
mov
fidivl
xchg
into
mov
les
push
inc
loopne
mov
cld
rcll
loop
fcoml
shlb
enter
not
pop
in
mov
dec
sbb
jp
xor
arpl
jne
mov
mov
adc
popa
push
daa
aas
add
mov
and
gs
popf
xchg
test
sub
test
push
mov
jl
pusha
imul
movsl
mov
lret
add
inc
pushf
pusha
jp
xchg
pop
mov
lahf
sub
sbb
lcall
mov
jmp
imul
les
out
popf
jne
lcall
pop
jle
mov
adc
imul
je
push
loopne
mov
and
pop
cmp
addl
cmp
les
nop
xor
pop
scas
sub
add
lcall
xlat
ja
or
fwait
sbb
push
sti
loope
sbb
faddl
push
pop
in
jbe
push
loopne
stos
out
sbb
repz
push
out
fdivl
lcall
jno
fisttpll
xchg
loope
and
cmpsl
mov
stos
out
bound
xor
lods
test
lods
stos
sub
inc
and
inc
pop
leave
sbb
lea
or
call
add
push
daa
sbb
adc
push
cmp
lea
rorl
sti
add
pop
jbe
sbb
ds
inc
mov
fmull
pop
or
cmpl
jo
mov
push
inc
sub
jl
mov
sub
lcall
cs
cmpsb
dec
jns
ds
adc
dec
cmp
push
fwait
adc
ss
repz
in
jl
test
je
scas
sbb
push
rolb
movsl
mov
add
mov
jmp
push
aaa
push
mov
fstpl
adcb
pusha
lret
lcall
mov
ss
std
outsb
sub
rcr
xchg
dec
cmovle
cmpsb
jbe
dec
nop
adc
inc
mov
out
gs
movsb
xchg
rcr
and
sarb
test
and
cmp
inc
push
or
out
aam
pop
inc
test
xchg
and
pop
into
popf
pushf
inc
cs
hlt
nop
imul
stos
jle
aaa
sub
and
and
aaa
cmpsl
xchg
in
ds
add
data16
push
add
dec
jno
dec
or
lea
mov
or
aam
xchg
outsb
sbb
ds
stos
mov
fbstp
add
sbb
mov
repnz
mov
test
push
sbb
cwtl
testl
or
cltd
stos
jge
xchg
test
mov
mov
add
aad
aaa
mov
insb
adc
pop
xor
adc
cltd
add
leavew
sub
aas
xchg
push
test
xor
pop
cmp
and
lcall
cmp
adc
mov
adc
ljmp
int
fdivrl
cmpsl
pop
pop
jge
mov
adc
dec
cmc
outsl
sahf
cmp
sbb
mov
out
xchg
pushf
dec
in
xor
inc
push
aam
outsl
mov
cmp
xor
dec
ljmp
xor
lcall
and
lcall
data16
lahf
mov
and
adc
sub
das
push
fstpl
mov
insb
mov
xor
xchg
cli
clc
and
fwait
insl
mov
inc
rol
xor
orb
outsb
mov
pop
dec
lcall
loop
loopne
adc
fmuls
mov
xor
push
test
in
loope
pop
pop
or
mov
inc
lods
cs
scas
mov
push
mov
mov
stos
jae
fnsave
loope
cmp
arpl
mull
lds
fcompl
mov
cli
pop
movsb
inc
jae
pop
aaa
jecxz
fsubl
lcall
ret
stos
sbb
gs
cmp
insl
adcb
sub
enter
pop
idivl
jnp
or
sahf
dec
cmp
icebp
fwait
inc
ret
test
cmp
fcmovnu
imul
call
pop
cmpsl
inc
rcrb
call
xchg
adc
jne
jno
pop
cmpsl
xchg
leave
aaa
push
inc
lods
fs
pushf
lcall
jbe
frstor
iret
call
std
cmp
add
cmpsl
jecxz
arpl
test
cmp
fs
cmp
jmp
and
jle
inc
lds
lcall
fsub
cmp
jp
test
add
insl
cmp
idivb
aaa
ja
pop
mov
call
mul
scas
push
gs
jmp
jp
inc
hlt
pop
dec
or
add
test
pop
mov
cs
adc
mov
hlt
push
cmp
and
lahf
shll
pop
lcall
cmp
push
mov
cwtl
jge
dec
icebp
enter
cmp
dec
pop
xor
mov
int
lret
ret
scas
les
ja
jns
adc
inc
inc
fnsave
fildl
inc
cmp
repz
push
or
cmpsl
xor
lcall
push
aam
adc
std
or
dec
fcompl
inc
test
out
add
adc
aam
aaa
daa
mov
fcoml
jge
leave
mov
in
out
dec
bound
test
add
lock
mov
or
fcompl
leave
inc
into
ss
call
mov
std
aaa
push
push
jns
push
adc
shlb
jg
and
test
pop
jge
xchg
mov
aaa
jb
push
lret
fisubl
out
adc
jg
pop
dec
fistl
ds
mov
cmpsb
aaa
cld
pop
dec
shl
xor
addr16
add
outsb
lcall
lret
sbb
mov
sbb
divl
dec
in
rcr
mov
jmp
xor
push
outsl
sbb
repz
scas
mov
cmp
test
push
xor
push
xor
adc
mov
aaa
out
ds
movsb
in
jl
xlat
data16
sub
loop
fldt
shlb
rclb
loopne
shl
orb
cld
sbb
cmpb
inc
xchg
inc
push
ficoml
das
ds
fdivs
jl
hlt
cltd
push
ljmp
les
fwait
or
shr
jle
movsb
filds
xchg
mov
fistps
dec
loopne
js
xor
xor
pop
sti
lahf
out
inc
pop
push
push
les
and
cmp
push
and
lea
aas
mov
loope
jne
cmpsl
xchg
inc
xchg
into
jno
in
cmp
and
lds
cltd
idiv
mov
cwtl
pop
dec
cmpsl
test
les
dec
mov
lods
or
std
pop
push
sbb
std
popa
icebp
les
mov
movsb
ret
lcall
movsl
push
aad
mov
fs
add
jl
aas
sub
test
add
notl
cmp
pusha
arpl
movsl
adc
mov
jbe
not
mov
mov
negl
mov
cmpsl
fs
in
pop
repz
dec
movsb
jg
aaa
push
ss
fdivs
push
push
arpl
mov
inc
xlat
jmp
mov
cmpsb
hlt
xchg
add
xchg
mov
lcall
repnz
faddl
iret
popf
xchg
int3
lea
pop
pusha
inc
mov
mov
or
mov
lret
jb
xor
dec
aaa
mov
lods
mov
movsl
add
and
dec
mov
xlat
push
sub
cmp
subb
inc
ja
and
dec
sarl
mov
in
fdivr
pop
lods
and
or
mov
popf
icebp
dec
mov
mov
cmp
sti
push
fwait
cmp
or
mov
pushf
push
adc
jo
daa
or
xchg
mov
aas
xorb
ljmp
jge
xchg
pop
sar
xor
gs
stc
test
fdivl
add
xor
dec
inc
push
xor
lcall
jl
sbb
sbb
sbb
and
dec
xchg
fisubrs
mov
dec
dec
mov
sbb
xchg
adc
mov
cmp
add
mov
xchg
mov
or
in
mul
jmp
ds
aas
inc
lods
mov
cmp
negb
push
pop
push
movsb
fcoml
fwait
sahf
movsb
aas
test
cmp
or
out
adc
loope
out
mov
lds
popf
push
outsb
cmpl
adc
mov
pop
inc
inc
jnp
push
inc
mov
push
scas
scas
xor
lret
add
push
adc
nop
add
pop
and
dec
and
es
mov
push
stos
xor
sub
hlt
test
aad
push
cmp
icebp
cmp
shrl
adc
pop
aas
inc
out
adc
int
lods
jle
push
insl
and
pop
outsb
repnz
ret
push
loopne
lcall
jecxz
fnsave
jns
les
das
jae
add
leave
test
dec
mov
out
loopne
cli
bnd
mov
pusha
or
repnz
mov
and
mov
mov
inc
loop
imul
mov
jecxz
gs
inc
inc
andl
pushf
sti
scas
xor
imul
or
xchg
inc
mov
sbbb
aas
loope
add
ljmp
push
sub
call
lds
mov
lcall
push
mov
xchg
daa
jle
pop
and
or
ds
cmp
push
out
pusha
daa
testl
mov
ds
leave
xchg
jns
std
jmp
stos
test
cli
push
lcall
sbbb
js
pop
xor
or
xchg
ds
in
cmp
fs
fisubrl
push
insb
fdivs
cmp
xor
add
fistpl
jmp
sub
fcompl
adc
push
ds
jle
mov
mov
das
sbb
pusha
cs
pushf
hlt
xor
pop
mov
arpl
fstp
dec
xchg
in
pop
aam
call
xor
shrb
aaa
lahf
mov
push
ret
xor
int3
mov
int
xchg
repnz
pop
mov
fcompl
dec
mov
mov
sbb
cmp
mov
mov
pushf
mov
cmp
cs
insl
lcall
fistps
test
mov
sbb
cmp
enter
mov
popa
xchg
popf
add
clc
dec
adc
inc
test
fnstsw
pop
lcall
into
int3
add
jecxz
fidivrs
inc
pusha
cmpsl
mov
roll
xor
adc
mov
cltd
or
addr16
sahf
pop
add
data16
outsb
fistpll
inc
jl
clc
aas
mov
lock
jecxz
inc
fs
xchg
cwtl
mov
repnz
js
stos
adc
jecxz
fisubrs
push
cmp
cmc
push
lret
cltd
fucomp
mov
aaa
lods
jne,pt
lods
movsl
or
nop
mov
pop
in
test
js
mov
push
shrl
push
out
fstl
adc
sbb
jb
xor
sbb
pop
mov
test
jge
and
push
jo
add
inc
pop
andb
mov
nop
sub
xchg
sub
sahf
lods
jp
ljmp
dec
push
jecxz,pt
push
lea
pusha
test
fs
push
in
dec
lcall
pop
lcall
movsb
mov
xchg
sbb
lods
fstpt
xchg
sbb
popf
in
ret
imul
mov
jecxz
pcmpeqd
outsl
and
or
aaa
xor
lret
lea
ljmp
gs
jecxz
dec
mov
lcall
inc
and
mov
xchg
movsb
adc
jecxz
push
jns
push
adc
aaa
cltd
repz
xchg
scas
test
cmp
cmc
repz
pop
jle
xor
mov
fists
arpl
push
pop
cmc
fsubr
leave
and
mov
mov
cwtl
push
dec
int3
in
cmc
aaa
int
push
out
ss
lcall
lret
cmpsb
loope
inc
int3
and
notl
mov
fbstp
sbb
cmpsb
arpl
sbb
js
mov
push
xchg
aas
lcall
mov
out
inc
pushf
cmc
cmp
cmp
push
pop
jmp
xor
push
mov
xor
popf
pushl
vpmovsxbq
stos
stos
add
xchg
mov
addb
ds
mov
add
shlb
sbb
out
jg
dec
fs
inc
lret
sub
adc
pop
mov
cltd
inc
cmp
out
mov
mov
test
cwtl
sbb
in
ds
mov
mov
js
sbb
sbb
jle
mov
sub
jecxz
sbb
jbe
stos
pop
ret
pushf
lods
xor
scas
sbb
jae
lret
lods
push
jecxz
dec
ret
scas
ljmp
int
ds
cmp
loope
mov
add
xchg
inc
or
or
negb
mov
jb
stc
aaa
xchg
imul
cmp
call
test
jns
ds
pop
inc
dec
mov
push
push
mov
insb
lea
xchg
lds
flds
sbb
inc
lcall
lds
xchg
mov
call
jns
push
ret
mov
lahf
xchg
mov
cmc
fstpt
lock
jecxz
jo
mov
loop
inc
std
inc
push
cmpsl
inc
xchg
mov
inc
and
sbb
mov
mov
xchg
js
aas
inc
ds
jecxz
mov
push
repz
xor
fwait
cmp
or
rep
pop
std
jne
repnz
mov
sahf
adc
mov
fldl
dec
dec
pop
loop,pt
mov
rcr
stos
and
je
push
lcall
mov
pop
repnz
fistps
mov
push
lods
out
gs
xchg
xorb
sub
push
mov
dec
cmp
fcompl
lock
mov
pushf
addl
jle
mov
push
loope
xchg
mov
movsb
cmp
xor
push
incb
add
sbb
sub
ss
aaa
es
data16
xor
mov
mov
push
lds
inc
aaa
lock
or
xlat
jbe
cmp
sub
jo
fdivrl
bound
dec
aas
ds
add
movsb
fstl
mov
pop
sbb
and
or
mov
pop
push
pop
fucomp
xchg
fcmovb
out
cmp
cmp
in
mov
arpl
dec
int3
cmp
shl
stc
es
add
xchg
scas
fdivp
adc
cmp
pop
pop
sbb
int3
and
mov
icebp
fwait
cs
test
and
ficomps
cmp
hlt
ljmp
mov
aaa
enter
out
ret
mov
lcall
sar
adc
insb
dec
jp
xchg
mov
shll
adc
pop
fdivrp
xchg
outsb
aam
lret
cmp
sahf
jmp
add
add
and
push
sub
sub
imul
adc
pop
es
or
and
fcoml
sahf
add
add
mov
cmpsl
das
mov
mov
mov
push
xchg
or
or
jae
inc
dec
push
or
push
nop
mov
fsubrl
fidivl
aam
ds
jecxz
fadd
insl
aaa
and
adc
jmp
pop
shll
orb
popf
loope
jnp
sbb
loop
mov
pop
jmp
mov
mov
fisttps
cmp
and
pop
sub
out
or
jns
pop
mov
daa
pop
leave
movsb
inc
xor
and
jge
push
dec
jns
sahf
movsl
imul
and
addr16
rcr
popa
pop
in
or
ds
scas
cmp
xchg
in
loope
jge
mov
jb
push
sbb
pusha
mov
mov
sub
push
movsl
lods
dec
xor
inc
inc
sub
adc
pushf
xchg
mov
mov
loope
mov
in
fnsave
push
and
stos
pop
lds
sbb
ret
outsl
xor
xchg
cmpsl
outsl
repnz
imul
sub
push
push
ja
loopne
cmp
lods
push
movsb
imul
add
out
fiaddl
xabort
sbb
loop,pt
mov
adc
push
push
enter
arpl
pop
shlb
inc
pop
inc
cmp
mov
xor
ds
push
std
rcrb
jle
frstor
or
insb
pushf
cld
pop
cmp
add
jbe
icebp
pop
cmc
test
gs
pop
aad
push
jp
sub
testl
cmp
jmp
jns
fisttps
adc
push
pop
sub
cmp
xchg
lea
xchg
mov
pop
jne
lahf
xchg
lret
mov
mov
fldl
sarb
pop
and
stos
pop
dec
fisttpll
xchg
cmp
or
cs
mov
mov
loopne
out
jle
cmp
divb
divl
mov
mov
aaa
dec
loope
pop
stc
rolb
mov
rcll
ds
fsubrs
lret
mov
push
sbb
idivb
mov
loop
add
or
ds
mov
ret
fstpl
adc
lahf
imul
jg
loop
cmp
dec
mov
xor
push
out
jo
sbb
daa
mov
mov
aaa
pop
scas
cs
mov
and
imulb
jmp
or
lahf
subl
mov
fnstenv
pusha
mov
cmp
lds
pop
lahf
cmp
pushf
cmp
or
out
sub
and
cli
or
andb
dec
shl
das
insb
popf
fsubl
ss
xchg
mov
sbb
pushf
aaa
out
sbb
loop
stos
push
repz
cmpsl
jecxz
test
inc
adcb
push
mov
das
xchg
lods
jns
adc
and
pop
pushf
pop
mov
fdivs
cli
dec
dec
sbb
imul
in
mov
lcall
inc
in
rclb
lea
lahf
ds
test
mov
clc
pop
out
movsb
mov
in
repz
ret
mov
jbe
popf
out
mov
pop
pop
mov
mov
dec
lea
ret
add
ja
fadds
push
mov
jmp
inc
or
mov
jecxz
cmp
push
arpl
cs
movsl
mov
mov
ret
lret
add
and
insl
push
mov
int
dec
negb
aaa
stos
std
pop
call
call
inc
mov
sahf
fidivs
inc
jnp
pop
jns
mov
cmp
movsb
fsubs
ds
xor
pushf
pop
mov
or
stc
push
lahf
mov
sahf
xchg
test
maskmovq
idivl
aas
aas
add
push
jnp
pusha
mov
out
lcall
mov
lcall
rcrb
sbb
pop
aaa
and
adc
fistpll
movsl
loopne
push
outsb
and
mov
xchg
pop
loopne
cli
mov
push
mov
fdivl
and
imul
icebp
pop
xor
cmp
subb
ds
aas
shl
pusha
inc
adc
ficomps
cmp
or
adc
or
mov
lea
popf
cmp
or
std
push
jae
les
punpckldq
sub
lods
xchg
pop
sbb
xor
lahf
and
xlat
xor
inc
xor
js
loop
jg
cli
lock
fistpl
ljmp
sub
jne
ljmp
jp
scas
test
mov
hlt
or
enter
out
cmpsl
pop
inc
testl
mov
scas
js
pop
call
xor
cmpsl
mov
cmp
lret
cmp
cld
std
std
sbb
repz
es
fstl
aad
lret
cwtl
scas
adc
cld
clc
popf
ss
push
and
xchg
fildll
pop
xchg
sbb
sub
jmp
test
cmp
fs
pop
mov
push
shrb
dec
xchg
test
xchg
lcall
mov
push
scas
mov
roll
mov
mov
movsl
push
jmp
push
and
shl
outsl
cmp
aaa
pop
and
into
lcall
inc
ret
fdivrl
in
push
scas
xchg
mov
add
pop
fildll
in
movb
scas
sub
fwait
jne
in
jmp
imul
jg
int3
pushf
cmp
jo
out
sbb
push
cmp
mov
out
adc
or
scas
das
sbb
ret
push
sarb
aaa
adc
inc
xchg
fstpt
arpl
fldl
mov
std
inc
int3
mov
cmp
rorl
push
xchg
in
ja
movsl
repnz
mov
ds
inc
popf
daa
jae
stos
sarb
movsb
sub
mov
sbb
push
mov
sti
out
lret
inc
lret
ss
into
fmulp
fdivl
je
jecxz
xor
movaps
dec
and
cmp
ds
sarb
mov
jns
jle,pt
push
cli
scas
ljmp
push
fs
and
aaa
fneni(8087
push
lret
pop
inc
shld
inc
mov
lods
jecxz
popa
or
lcall
cld
mov
fucomip
clc
out
out
test
prefetch
insb
pop
sbb
inc
pop
sti
int
xor
jecxz
adc
out
dec
adc
dec
xchg
adc
push
loopne
stos
dec
and
pop
arpl
test
inc
cmc
inc
out
push
cwtl
pop
in
push
cli
pop
adc
dec
fistps
aas
fs
mov
nop
leave
pop
pop
lea
lock
lcall
movsb
add
xor
add
push
mull
in
push
jle
ds
and
sti
sub
pop
sub
cmp
lds
inc
xchg
add
add
xchg
adc
fisttpll
imul
int
inc
dec
aaa
outsb
std
inc
xor
lahf
jns
test
lds
dec
pop
rcr
mov
cmp
imul
push
shlb
mov
daa
sub
pop
dec
lcall
fmull
daa
ss
push
or
addr16
cmpsl
push
pop
inc
sbb
inc
fwait
roll
sahf
lret
cmp
dec
pop
incb
jmp
lcall
dec
dec
jecxz
fistpll
jg
inc
idivb
enter
outsb
out
jg
call
sbbb
xchg
dec
jbe
push
jbe
lcall
jae
insl
scas
mov
scas
frstor
mov
push
pop
lcall
loop
fnsave
int3
push
push
inc
add
dec
jmp
cmp
aaa
push
xor
push
bound
std
jns
dec
xchg
and
mov
push
repz
add
lcall
cmp
loopne
sub
jo
xchg
shrl
ja
clc
sbb
lret
stos
xor
aaa
sbbl
pop
jl
fimuls
shr
ja
xor
dec
lcall
push
leave
fmull
jmp
push
pushf
dec
shl
inc
in
mov
fdiv
inc
sbb
daa
jecxz
and
fldcw
dec
loop
and
jecxz
sbb
test
inc
jmp
out
mov
pop
pop
pop
loop
push
inc
pop
nop
and
cmpl
notl
jl
sub
dec
dec
sbb
sti
out
loopne,pt
push
push
pop
movsl
jecxz
aaa
imul
daa
movsb
gs
jg
loop
rep
add
sbb
jo
inc
aaa
xor
xchg
divb
leave
pop
notb
test
fdivs
into
jne
repz
std
stos
test
fistps
jno
dec
roll
loop
mov
neg
dec
loope
out
movsl
aad
sub
sub
sbb
push
in
cld
or
out
sbb
fsubr
imul
inc
push
in
out
sbb
pop
dec
icebp
fsubl
sub
adc
and
xor
pop
jae
xor
repz
sub
mov
aam
sarb
and
jnp
mov
lcall
movsb
push
or
daa
sbb
ds
cmp
lahf
xor
jl
ds
cmp
xor
fimuls
cmc
adcb
sbb
sbb
ljmp
shll
cld
and
hlt
mov
jo
xor
stc
out
outsl
in
ljmp
adc
push
shll
ds
mov
addr16
push
ss
inc
scas
movsb
mov
cmp
pusha
pop
or
test
add
pop
rcl
dec
cli
aaa
loop
mov
gs
add
sti
inc
sbb
fcompl
or
aas
out
test
add
xchg
rclb
stos
test
mov
mov
cli
and
test
or
xor
add
aaa
jecxz
inc
int
adc
xlat
push
jo
sub
fiaddl
fldt
cs
mov
sub
and
xlat
pop
push
inc
pushf
das
cmp
add
rcrl
in
andl
sub
and
push
sub
lds
pop
loope
inc
lcall
xchg
js
imul
out
dec
aas
push
int3
adc
sub
insb
add
cmpsl
pop
inc
pop
aad
gs
add
test
cli
ret
incb
mov
fs
add
xchg
int3
mov
sub
repz
push
stc
cltd
mov
imul
push
push
adc
pop
sbb
gs
data16
dec
jbe
test
cld
das
xchg
loop
dec
dec
cltd
dec
subb
add
loopne
gs
adc
subb
mov
xchg
xlat
rcrl
loope
jle
hlt
cmpsl
in
or
fwait
inc
lcall
aaa
lcall
adc
mov
mov
ja
fisubrs
xor
out
aaa
mov
and
repnz
sub
imul
dec
bound
inc
bound
movsl
dec
lahf
out
sbb
cmp
cmp
mov
mov
sub
fimuls
sbb
jne
rol
cld
mov
push
push
mov
and
cmpsl
movsb
fcompl
das
movsl
addr16
pop
test
shlb
mov
loopne
sbb
sub
icebp
rcrl
or
dec
lcall
mov
fdivl
stos
scas
or
repnz
push
bound
inc
push
sub
fdivrl
inc
pop
cmp
dec
loopne
sub
lcall
ss
loopne
pop
test
sahf
xlat
adc
pop
mov
test
enter
sbb
lahf
jne
xchg
inc
pop
lcall
fsubs
roll
in
in
cmp
adc
sti
orb
arpl
bound
loope
fisubrl
mov
lret
test
std
xchg
dec
jb
dec
sbb
faddl
mov
stos
inc
push
mov
jmp
xorb
jae
xor
test
push
mov
lock
pop
outsl
mov
aas
sbb
pop
sbb
fcoml
push
scas
stos
jae
lcall
cmp
or
mov
lcall
addr16
sub
jbe
loopne
mov
and
pusha
push
aaa
loopne
mov
dec
mov
shrb
arpl
fwait
mov
ss
bound
add
xlat
xchg
dec
inc
sub
ficoms
jmp
mov
popf
mov
adc
enter
mov
mov
xchg
shlb
adc
push
pop
cld
adc
inc
xor
cmp
push
pop
cmp
loop
xchg
xchg
jmp
mov
bound
rcrb
or
daa
bound
cmpsl
movd
push
xchg
and
xrelease
mov
inc
lret
ds
std
loopnew
lret
adc
push
mov
fisttpll
mov
ja
inc
fstl
inc
lds
arpl
push
cmp
inc
ffree
mov
adc
cmp
inc
movsb
mov
mov
in
sarl
cmp
dec
xchg
ljmp
dec
pop
pusha
push
cltd
test
sub
mov
jecxz
testl
pop
or
test
dec
jbe
add
inc
icebp
rcr
shlb
hlt
testl
mov
dec
addb
add
add
and
cmp
mov
pop
bound
xchg
inc
imul
mov
movsl
mov
add
sbb
mov
mov
loop
movsl
sti
fwait
mov
cmp
pop
jecxz
inc
pop
lcall
sub
fsubr
in
popf
es
mov
loope
call
lahf
lahf
inc
xchg
test
inc
leave
fcomps
aaa
mov
pop
pop
inc
mov
out
dec
cli
xchg
mov
cltd
movsb
jnp
mov
dec
lret
je
out
mov
das
lret
sbb
push
and
frstor
fs
fstl
inc
pop
sub
popa
mov
cmp
sahf
and
subb
into
pop
jp
xor
mov
rolb
std
pop
outsl
cmp
ficompl
nop
cmp
mov
std
into
dec
adc
out
cmp
dec
ds
mov
hlt
int3
push
int
imul
jecxz
aam
fsubrl
es
mov
fists
add
jecxz
ds
mov
dec
dec
mov
inc
mov
in
cmp
jecxz
int
enter
andb
cld
mov
sarl
mov
inc
xor
mov
sbb
dec
rclb
or
mov
mov
repz
lret
roll
cmpsl
fsubl
and
ds
mov
jne
test
xchg
inc
call
daa
fucomp
push
xor
xor
mov
jl
test
adc
xchg
sti
sub
test
aas
scas
jecxz
push
cmpsl
pop
push
cmp
cmp
mov
mov
mov
inc
dec
inc
and
in
xchg
mov
inc
cltd
fmull
sar
fsubrl
ja
push
rcll
dec
addr16
or
fdivrs
frstor
inc
sbb
xor
sarl
repz
aaa
push
clc
mov
ds
stos
pop
sahf
lahf
dec
pop
xchg
cwtl
dec
xor
fldl
enter
mov
push
iret
inc
shll
aaa
cmp
outsl
adc
loop
pop
jp
imul
out
notb
lods
ds
or
js
aaa
jecxz
pop
jns
sbb
lcall
pop
negb
add
sbb
jle
and
cmp
mov
dec
aaa
inc
mov
xor
inc
adc
popa
imul
xor
mov
mov
inc
mov
xor
mov
cmpb
inc
pop
sub
cmp
cltd
out
pop
fwait
pop
jne
test
dec
pop
and
mov
mov
pop
push
mov
xchg
pop
movsl
pop
ds
rorb
test
cmpsb
in
sbb
pop
stos
dec
sti
mov
pop
cwtl
push
outsl
aas
rcrb
cmp
mov
inc
loope
pushf
shll
inc
fcoml
frstor
pop
jp
pop
clc
das
syscall
inc
mov
gs
or
xchg
inc
inc
hlt
and
std
in
lcall
imul
insl
aaa
ja
out
je
mov
sub
ds
dec
ljmp
adc
repz
ret
test
jne
insl
jmp
lret
fcompl
adc
mov
mov
mov
inc
lcall
cmp
mov
pop
das
pop
jp
lret
xor
pop
pop
xchg
or
fiadds
fs
lret
out
mov
popa
out
or
ficompl
std
xchg
push
clc
dec
push
arpl
jl
mov
ds
sbb
sub
xor
ret
mov
fwait
push
arpl
jle
mov
into
lock
or
and
aam
leave
xor
lcall
js
sbb
push
pop
sbb
cmp
lret
mov
int3
mov
and
daa
fwait
add
lahf
mov
dec
mov
in
push
or
lcall
movsl
cwtl
bound
adc
mov
iret
or
lock
fwait
repz
popa
repnz
mov
in
pop
cmpsb
jge
jp
leave
fmull
xchg
out
repnz
sbb
jmp
dec
push
push
fistpl
les
mov
and
fstpl
outsb
cmp
dec
cmpsl
xor
or
mov
or
push
out
jb
lods
xchg
lcall
inc
sbb
push
jo
adc
nop
fstl
dec
mov
or
inc
sti
jecxz
popa
sub
mov
pop
pop
or
std
pusha
xchg
fldl
xchg
push
mov
push
xchg
ds
int
mov
pop
outsl
jb
sub
dec
pop
lcall
mov
fnsave
adc
pop
adc
push
mov
push
adc
enter
sub
sbb
loopne
dec
mov
dec
fdivl
loopne
les
mov
or
push
pusha
mov
aam
push
sets
pop
push
js
pushf
rolb
jns
mov
in
popa
cltd
jae
inc
pop
int3
inc
or
dec
mov
outsb
cltd
push
aaa
mov
adc
cmp
mov
in
dec
push
add
pop
rolb
dec
lret
test
mov
push
ja
das
fstpl
inc
hlt
iret
ds
add
pop
ds
lret
push
imul
fwait
mov
cmp
and
cltd
arpl
jb
dec
pop
jge,pn
sbb
cld
rcrl
add
bound
dec
and
cmc
cmpsl
mov
pushf
addr16
into
cmp
fcoms
test
inc
lods
pop
pop
aaa
mov
mov
cs
mov
imul
push
pop
in
xor
and
pop
aad
inc
pop
push
mov
js
ret
adc
push
mov
mov
loope
andb
inc
push
test
dec
sarb
and
xchg
lcall
jmp
fdivrs
lock
lds
cmp
es
jae
fldcw
insb
xchg
push
sub
jle,pt
movl
pop
popf
xchg
outsl
test
fwait
push
dec
inc
fnstsw
pushf
aas
cmp
xchg
sbb
sbb
lcall
mov
dec
inc
cmp
jg
mov
bound
je
cmp
mov
jns
jns
mov
mov
pushf
addl
rolb
cld
inc
lcall
sub
pop
dec
insl
mov
jp
cmpb
pop
imul
xchg
xor
mov
pushf
add
lea
sbb
addl
dec
sbb
js
pop
fldl
push
je
pop
push
int
lcall
sbb
js
lods
cmp
xchg
mov
je
je
cli
fmul
inc
inc
repnz
jmp
out
jnp
in
es
loope
mov
fstl
pop
test
int
loopne
int
repnz
cmp
or
dec
aas
and
push
jg
cmpsb
sbb
ret
scas
cmc
imul
mov
cld
push
inc
cmp
adc
sub
sbb
inc
adc
dec
jmp
or
push
les
and
loop
movsl
mov
cmp
sbb
xor
ret
vaddss
dec
jg
sub
jno
rcrl
cmp
aaa
into
mov
cmp
and
fs
inc
dec
sbb
push
aaa
xchg
mov
add
adc
fiadds
loopne
push
and
pop
jmp
pusha
jbe
lea
adc
nop
or
scas
test
popf
mov
sbb
push
cmpb
or
fs
jae
dec
and
inc
jecxz
pop
and
js
imul
stc
xor
inc
sbb
das
negl
jg,pt
adc
je
les
dec
lcall
push
test
sbbb
rcr
jb
loopne
xchg
pop
and
cmpsl
dec
push
adc
sbb
mov
adc
bound
out
cmc
adc
movd
xchg
add
repz
and
lods
dec
dec
pop
fnsave
clc
xchg
sub
lahf
inc
iret
or
push
shl
dec
push
arpl
mov
popl
push
sbb
mov
xchg
lcall
test
imul
roll
inc
pusha
pushf
hlt
push
dec
mov
fiadds
ljmp
repz
ds
add
testb
cmp
xchg
cli
pusha
cmpsb
fnstcw
js
into
sub
aam
adc
and
pop
mov
mov
loope
nop
fwait
cmp
rorl
mov
fistpl
divl
mov
inc
sbb
push
cmp
xchg
int
xor
ds
aam
inc
arpl
mov
aaa
sub
lea
dec
dec
xchg
xor
rcll
fimuls
lods
in
inc
cmp
mov
ret
arpl
icebp
pop
xchg
fstp
outsl
and
neg
xor
movsl
pop
imul
sbb
add
pop
fisubrl
shll
jl
xor
push
xchg
cmpsl
dec
adc
jle
pop
mov
sub
cmp
ret
outsb
imul
lods
fisttpll
leave
hlt
in
out
test
outsb
movsb
cltd
mov
and
xor
pop
ds
sahf
cwtl
dec
cmp
lcall
ljmp
push
or
pop
addb
fisubrs
cltd
rcll
in
pushf
addr16
std
aam
stc
xchg
xlat
jbe
and
mov
or
dec
fwait
js
stc
sbb
rcll
pushf
bound
daa
int3
dec
inc
mov
pop
mull
pop
out
pop
pusha
push
out
jb
dec
push
lcall
mov
icebp
pop
lods
cmp
pop
fiadds
or
dec
mov
add
sbb
movsl
fs
jp
fiadds
xor
inc
lret
and
add
and
dec
fisttpll
ds
rcll
pop
pop
faddl
dec
test
fstpl
out
ds
mov
fsub
leave
mov
outsb
or
pop
pop
je
jns
dec
test
out
repnz
and
cmp
lods
lock
inc
out
fdivr
dec
cmpsb
in
fdivl
push
daa
icebp
jne
sub
sbb
pop
jl
stos
fnsave
scas
mov
popf
imull
mov
repz
jb
or
pop
lock
rolb
ds
fwait
xlat
or
inc
in
cmp
xor
or
aam
ss
gs
pop
pop
or
dec
xchg
xor
inc
push
and
repnz
lea
add
lahf
mov
lcall
push
cmpsl
fsubrl
repz
dec
mov
sub
inc
or
lea
mov
mov
je
and
and
jae
cmp
cmp
hlt
fucom
fs
inc
loop
jbe
leave
xchg
and
aaa
scas
imul
mov
cld
jne
cmp
fwait
aaa
repnz
mov
popf
xor
int
adc
divl
cmp
clc
enter
inc
aas
int3
hlt
js
fnstcw
adcb
cmp
shrl
push
cmp
cmp
pop
cwtl
pop
xchg
sbb
sbb
test
sub
rolb
out
dec
push
pop
test
imul
add
cmp
loope
fiadds
push
and
sub
lcall
out
in
int3
rorb
sbb
push
cltd
addr16
cli
in
ljmp
push
mov
push
pop
jl
test
dec
in
ds
repz
cmp
jbe
scas
cmpsl
sub
aad
in
inc
cmp
xchg
push
cwtl
loopne
pop
sbb
adc
jecxz
add
ds
cmp
sarb
ds
mov
cmp
pop
adcl
xchg
inc
popl
outsb
cmp
iret
cmp
adc
sbb
nop
mov
mov
pushf
pop
cmp
inc
mov
aaa
into
sub
dec
mov
ficoms
push
outsb
in
add
adc
mov
mov
fcoml
in
std
xchg
cltd
inc
ret
mulb
add
mov
imull
lods
xor
xchg
push
sti
fistl
out
push
xchg
sahf
adc
sbb
jae
sbb
imull
mov
sbb
shlb
jo
in
jecxz
push
fisttpll
jge
out
into
cmp
inc
movsl
fldt
add
aas
psubb
pop
mov
test
pop
cmpsl
sbb
lods
icebp
leave
aaa
test
mov
and
lods
sub
hlt
pop
jle
xchg
push
mov
dec
scas
pop
pop
ds
ja
test
mov
fstp
xor
and
ret
cmp
pop
popa
and
pop
fldt
fnsave
adcb
ds
lock
bound
std
sub
adc
mov
sbb
and
jge
jp
dec
loope
arpl
xchg
fs
xor
or
adc
and
push
pusha
aad
out
std
out
lcall
cmp
stc
sub
mov
sarl
inc
sub
push
in
inc
xchg
imul
bound
xchg
fsubl
stc
nop
push
jmp
in
sub
pop
mov
scas
or
out
mov
mov
mov
call
cmp
xor
mov
mov
jns
mov
adcb
jg
jmp
ds
xor
bound
mov
insl
xor
ljmp
ljmp
fs
xchg
aaa
sbb
xlat
jg
lock
orb
rcrb
test
clc
clc
pop
div
or
jb
dec
fisttpll
jns
adc
nop
ds
inc
push
lods
stc
jge
xchg
mov
push
scas
lcall
dec
sub
cmpsl
mulb
pop
sub
xchg
cmp
pop
les
aas
popa
sar
lea
insl
pop
test
fstpl
aaa
mov
lea
mov
or
gs
mov
add
or
jecxz
mov
mov
mov
stos
sar
dec
jg
repnz
loope
inc
lds
es
push
mov
mov
mov
test
test
xchg
lods
sbb
dec
mov
xor
jge
pushf
xchg
inc
pop
ds
inc
mov
sbb
fwait
pop
lret
inc
mov
pop
ficoms
mov
xchg
mov
jg
push
inc
sti
std
or
push
std
test
fldcw
mov
jnp
dec
inc
fimull
cmpsb
cmp
cmp
cmp
addr16
mov
adc
sub
sbb
fisubl
xchg
cmpsl
lods
fstps
in
in
aaa
scas
mov
inc
scas
cmp
jg
cmp
int
jge
enter
cmp
push
and
mov
lea
fnsave
leave
push
inc
jns
xor
pop
in
mov
lret
xor
mov
mov
outsl
iret
adcl
movsl
adc
jb
aaa
pop
xor
ja
cmp
mov
and
push
ret
cmp
mov
mov
jle
ds
jecxz
pop
sarb
fsubrl
pop
outsl
scas
je
sarb
sti
lods
sbb
fucomp
arpl
test
xchg
hlt
push
and
mov
pop
and
ds
sub
fdivrp
shll
lock
pushf
cwtl
aam
xchg
ds
add
cli
dec
jg
pushf
sti
mov
mov
cmp
lcall
cmp
test
lock
decb
push
push
addl
fld
sarl
in
pop
fcomps
lret
xor
fcoms
pop
aas
fucom
mov
lret
pop
mov
nop
xor
out
jo
push
and
pop
dec
inc
stc
cmc
daa
sub
loopne
inc
cmc
pop
jae
std
dec
mov
and
rorb
xor
xchg
das
mov
ds
xor
idiv
lcall
cmp
xchg
mov
test
popf
es
or
sub
fwait
popf
xchg
fmull
imul
jb
pop
jg
repz
in
fucomp
push
popf
jmp
enter
dec
and
js
or
jge
inc
mov
and
push
popa
ds
ljmp
inc
inc
mov
nop
pop
out
in
mov
ds
js
imul
in
adc
in
and
mov
sub
lahf
call
adc
ja
cli
dec
jne
sbb
mov
xorb
jmp
push
cwtl
mov
mov
xchg
orb
addr16
cs
sub
mov
mov
mov
pop
in
scas
enter
leave
inc
mov
hlt
loopne
mov
sub
loope
sbbl
sbb
mov
or
ficoml
fwait
mov
inc
cmp
inc
pop
or
dec
loope
jbe
sub
mov
dec
fwait
inc
int3
mov
outsl
pop
mov
adc
inc
fwait
sbb
ljmp
fildll
iret
bswap
mov
cmp
inc
add
cmp
pop
and
ds
in
fstl
or
sub
ja
lcall
jb
call
xchg
icebp
lcall
inc
jb
inc
scas
lea
mov
ss
dec
mov
bound
into
pop
add
outsl
and
xor
dec
xchg
sbbl
sarl
cmpl
stos
sbb
cs
daa
inc
jbe
or
ds
push
shl
ljmp
and
sbb
jmp
lret
mov
pop
lahf
aaa
adc
outsl
xlat
mov
bound
pop
adc
sbb
dec
xor
pop
test
or
jg
jne
and
mov
loope
sub
jno
scas
jp
outsl
sub
cmp
jle
add
mov
jp
mov
jne
push
dec
out
pop
jg
mov
or
repnz
mov
mov
sub
data16
outsl
and
ja
and
and
mov
mov
sahf
cmpsl
sahf
bound
stos
cmp
sub
jl
fdivs
jmp
dec
pop
push
ds
jmp
fbld
cwtl
cmp
aaa
jmp
jle
xor
cmpb
scas
subl
push
ds
outsb
push
fdivl
push
test
inc
adc
push
dec
sbb
add
fcoml
and
lret
dec
push
sahf
mov
jge
pushf
push
mov
inc
fidivrl
rol
movl
ds
pop
cmp
pushf
push
cmp
lods
dec
pusha
sub
movsb
jl
arpl
aaa
inc
call
lret
or
movsb
mov
fisttpll
push
icebp
daa
jns
add
mov
insl
pop
cmp
mov
cli
adc
sub
cmp
dec
add
pop
inc
fistpl
pop
pop
paddsw
repnz
jecxz
mov
mov
mov
xchg
sbb
jb
jbe
popf
jnp
fprem
loope
icebp
icebp
test
sub
fmull
shll
enter
ds
xor
cmc
aaa
push
aam
jb
push
push
psubq
xchg
scas
pop
push
push
shll
stos
repz
ja
cmp
dec
xor
nop
movsb
out
movsb
aaa
and
out
test
pop
adc
jge
shlb
loop
jge
scas
jnp
shr
jmp
jg
outsl
add
imul
cmp
sbb
ds
imul
popa
aaa
mov
or
bound
int3
nop
shl
fcompl
lods
lock
cmp
lea
cmp
pop
pop
call
loop
sub
dec
lcall
cwtl
imul
lods
je
mov
xor
jg
ret
enter
mulb
mov
mov
pop
ds
or
cmp
scas
std
addr16
pop
dec
fistps
sub
mov
pop
and
lds
or
dec
ljmp
inc
hlt
add
and
mulb
repz
adc
pusha
inc
push
mov
mov
push
push
rorl
cmp
dec
getsec
pop
fwait
mov
push
xor
or
aas
cmc
cli
and
or
pop
xor
in
add
stc
nop
addr16
cmp
mov
popf
fisttpll
jae
cli
mov
pop
rcll
dec
notb
out
leave
insl
cmpsl
pusha
mov
je
pop
xchg
addb
out
aaa
xchg
into
inc
into
test
cmp
test
in
dec
lahf
push
das
jg
add
loop
and
push
inc
inc
or
mov
jno
inc
aaa
or
mov
push
mov
push
test
into
out
aaa
pop
flds
sarl
cmp
mov
add
cmp
ds
cmp
popf
data16
loopne
leave
divps
psrlw
jo
shlb
aam
dec
cmp
imul
les
ja
in
jle
mov
mov
aad
xlat
mov
dec
mov
sbb
adc
mov
sbb
out
mov
pop
fstenv
jp
cmpsl
out
cmpsb
lea
fstl
jmp
fadd
shl
sbb
inc
adc
ds
or
lahf
leave
shlb
mov
cwtl
mov
push
jnp
push
loop
inc
ffree
or
push
sbb
jne
lret
cmpl
push
sahf
jo
sub
pop
rorl
out
push
pop
call
add
mov
mov
xor
dec
lahf
pop
inc
push
mov
xchg
imul
or
xchg
dec
in
cmpsb
loopne
mov
test
xor
lahf
stc
mov
loopne
js
in
shr
lcall
and
call
xor
clc
mov
xchg
int3
loopne
pop
popa
pop
jg,pt
cmp
mov
hlt
push
stc
sub
loope
mov
sbb
pop
or
fs
rcrb
add
mov
cmp
mov
cs
mov
mov
cwtl
sub
fsubrl
mov
lea
fisttpll
fwait
cmpsl
add
sub
xchg
push
dec
mov
jne
jle
je
outsb
out
bound
ja
mov
iret
sbb
cmp
stos
aaa
mov
sbb
pusha
lcall
mov
test
xor
mov
add
roll
mov
lahf
adc
jne
lcall
sub
shrb
push
push
outsl
mov
cmp
ret
cmpsb
std
cmc
cmp
sbb
cmp
fidivrs
shlb
test
addr16
ss
repnz
sub
popf
es
and
lea
mov
add
dec
ds
decb
jbe
aaa
out
out
out
es
jno
das
pop
inc
loop
call
jecxz
sbb
cli
add
in
mov
in
ja
int3
jne
jb
ljmp
dec
dec
mov
fdivl
pop
push
nop
pop
pushf
popa
inc
jl
inc
push
fwait
aam
shll
cmp
xchg
cmc
shl
outsl
mov
push
lods
inc
popa
out
fsubs
jbe
xor
push
popa
dec
xor
repnz
xor
xlat
lret
in
or
mov
dec
cmp
pop
mov
clc
sbb
and
jecxz
mov
movsl
imul
loop
clc
xlat
xchg
lods
sub
dec
pop
adc
push
add
xchg
cmp
roll
daa
mov
inc
sub
rcll
xlat
cli
cld
sbb
sbb
aas
and
lret
jl
fucomp
dec
mov
shlb
cmp
int3
sbb
ror
pop
aaa
ja
or
lcall
and
ljmp
and
xor
xchg
aaa
jne
mov
or
inc
mov
sub
sub
dec
aaa
scas
aam
pop
ljmp
inc
push
rorb
cmp
mov
std
sahf
xor
pop
push
add
cmp
mov
pop
jbe
test
mov
cmp
scas
sti
lcall
aas
or
push
pop
inc
mov
xor
insl
pop
in
mov
fsub
xchg
pop
in
mov
cld
mov
push
fsubrl
dec
lcall
dec
mov
jg
or
jnp
push
popf
ds
xor
idivb
shll
sarb
mov
lods
and
pop
fnsave
lret
fistps
inc
jp
cmp
loop
adc
addl
sti
fs
inc
int3
testl
push
fs
test
addr16
dec
imull
inc
inc
mov
xor
and
inc
popf
sub
mull
lret
fiadds
mov
mov
lret
jmp
jl
or
aaa
scas
out
lret
mov
push
insl
lahf
mov
cmp
ret
xchg
mov
push
movsb
adcl
xchg
negb
sbb
mov
push
sub
cmpb
push
imul
jl
mov
lret
cltd
and
in
xchg
pop
push
aaa
es
inc
inc
sbb
lea
lcall
adc
dec
arpl
scas
call
stos
mov
stc
dec
sti
cmp
lcall
pop
xorb
test
sbb
gs
ja
pop
jecxz
dec
xchg
jle
mov
insb
outsb
aaa
iret
lods
pop
adc
test
lea
stos
js
cmp
loope
mov
adc
mov
fsubr
ret
negl
or
jbe
or
adc
ja
cs
faddl
insb
lret
pop
lret
lcall
inc
dec
pcmpeqw
loope
pop
mov
das
mov
pop
jno
inc
jp
ss
pop
mov
sbb
mov
test
cmp
insb
loopne
or
iret
jle
and
int3
adc
cmp
inc
jo
jbe
test
lcall
loopne
filds
mov
pop
lcall
movsb
arpl
aas
xchg
mov
cltd
sub
filds
out
in
out
cwtl
out
adc
push
pop
pop
inc
fldl
decl
mov
pop
sub
lock
gs
mov
mov
cmp
sub
cmp
xor
inc
xchg
pusha
mov
mov
jns
cmp
sbb
mov
pop
mov
mov
push
and
mov
lcall
ja
ret
mov
jp
sbb
icebp
push
pop
xor
loope
adc
packsswb
test
sbb
loopne
mov
mov
add
inc
imul
cmp
ja
cld
in
rclb
shrb
mov
jmp
dec
inc
mov
cmp
outsb
cltd
mov
jne
mov
mov
adc
xchg
pop
mov
and
xchg
cmp
insl
popf
lcall
aam
faddl
jne
in
pop
pushf
mov
add
push
std
cli
aas
cmp
aad
add
xchg
inc
or
xchg
adc
fs
pop
fldl
push
lret
add
aam
jns
sarl
add
mov
test
loop
mov
cmp
out
cmp
mov
cmp
inc
xchg
mov
sbb
pop
lcall
dec
push
mov
pop
mov
adc
cmp
outsb
mov
inc
lcall
outsl
movsb
fbstp
sub
adc
jo
dec
shrb
int
push
fnstsw
addr16
and
jnp
xlat
pop
xchg
cmp
insl
imul
fucomi
out
dec
clc
pop
popa
mov
lcall
and
fs
into
add
add
movsb
inc
in
mov
subb
in
jecxz
fnsave
bound
ds
add
and
ds
mulb
icebp
pushf
insl
jbe
sub
jo
lcall
mov
loope
mov
in
ds
push
mov
pop
push
subb
jbe
add
pushf
jno
cmp
xchg
cmp
js
leave
fwait
aam
lcall
xchg
repnz
push
mov
cmp
insb
inc
inc
push
push
pop
filds
push
xor
sar
mov
and
xchg
or
pop
out
aaa
popf
pusha
rcr
sbb
lds
mov
inc
sub
and
cmp
inc
push
lcall
lea
icebp
es
mov
mov
mov
popa
aaa
adc
inc
cmpsb
lcall
int
fdivrl
adc
xchg
push
or
hlt
pop
cmp
dec
scas
fbstp
popf
and
iret
call
cmp
xchg
push
xchg
inc
scas
push
lret
push
inc
shll
xor
xlat
push
aas
out
jecxz
mov
mov
test
test
popf
or
jge
sbb
jl
push
cmp
std
sub
das
stos
fstpl
mov
cmp
int
loope
dec
cltd
dec
rol
cmpsb
jge
dec
add
sbb
popa
nop
fmul
xlat
enter
and
ret
pop
fwait
pushf
stc
test
adc
outsb
movsl
mov
pop
sub
fisubl
inc
lcall
in
mov
and
mov
xchg
pop
repnz
ficompl
mov
frstor
dec
mov
inc
js
call
mov
leave
in
jecxz
fisubrl
fidivs
cmp
jl
icebp
xchg
add
incb
pop
cmp
andl
movsl
fnstsw
ret
sub
inc
adc
adc
fildll
cs
icebp
data16
dec
and
push
in
cli
xor
dec
cmp
loop
push
jg
cmp
cmp
pusha
ds
cmp
iret
mov
inc
xchg
pop
adc
mov
fnstsw
pop
aas
xlat
mov
lcall
push
outsl
sarl
ret
repz
rorl
push
rolb
mov
sti
in
mov
lcall
cmp
clc
aam
je
outsb
sti
ss
mov
pop
js
imul
push
and
fstpl
mov
out
popa
jo
ds
test
push
lcall
jbe
dec
push
aaa
sub
into
out
mov
xchg
daa
push
fstp
je
mov
ret
rcrl
jg
inc
lea
cmp
cli
push
pop
fmuls
lcall
mov
lret
mov
xchg
jecxz
pushf
out
sahf
or
mov
into
sbb
jge
adc
test
xchg
and
mov
adc
xchg
push
outsl
push
mov
xchg
lcall
loopne
bndldx
decb
mov
daa
mov
cltd
pop
pop
adc
mov
xchg
push
adc
shlb
loop
and
mov
fiadds
popa
mov
cwtl
jecxz
outsl
inc
lcall
cmp
lahf
in
clc
jp
in
jns
dec
push
mov
adc
jle
xchg
inc
lret
imul
jbe
cmp
adc
frstor
xor
cmpsb
pop
xchg
js
push
sbb
add
ds
sahf
repz
inc
fisubs
mov
nop
xchg
inc
test
inc
cmpsb
cld
imul
adc
jnp
cmp
jns
xchg
lcall
insb
fcoml
cmp
lcall
or
es
lods
fiaddl
mov
sub
ds
cs
cmp
push
sub
dec
and
fdivl
pop
cmpb
pushf
lea
fsubrp
push
xchg
lods
xchg
popa
popf
nop
mov
lock
pop
aaa
rcl
stos
lock
popf
jne
xchg
pop
js
push
imul
jg
ds
inc
sti
fdivl
dec
jns
add
cli
ljmp
loop
sbb
jbe
in
mov
loopne
push
inc
ja
mov
sbb
nop
and
mov
fs
insb
shr
jb
fdiv
xchg
add
pop
pop
lcall
pop
fdivrl
lock
add
push
lret
dec
pop
frstor
shrb
ds
push
dec
jp
loopne
jbe
mov
cmp
rcll
xchg
pop
adc
mov
mov
cmp
out
sub
jo
aaa
shr
mov
add
mov
fmulp
inc
ss
xlat
aaa
orb
dec
push
addr16
push
lcall
lret
or
lret
lcall
loop
loop
jecxz
loop
cmc
loope
out
in
mov
fildll
mov
xlat
xchg
in
dec
mov
dec
dec
mov
xor
shr
hlt
mov
dec
clc
mov
lcall
add
call
lods
add
popf
int
push
mov
add
cmp
lcall
add
cmp
or
test
add
stos
or
popf
lods
cltd
or
icebp
iret
add
jb
jne
fisubl
cmpsl
shlb
clc
mov
loop
in
adc
sub
jmp
pushf
push
jns
mov
lock
loop
push
adc
int
jge
aad
gs
jo
clc
in
inc
in
testl
out
or
mov
or
dec
cli
aam
and
inc
xor
cltd
movsl
fsubl
push
jg
xchg
push
shll
push
push
mov
fdivr
xchg
jb
fisubl
cmp
pop
jge
xchg
aaa
adc
lret
out
cmpsl
test
mov
in
mov
adc
movups
cli
push
cmc
ljmp
mov
ds
aaa
popa
lds
scas
xor
sbbb
fsubp
dec
inc
leave
xor
cld
loope
ror
sbb
movsb
out
hlt
nop
mov
adc
mov
lods
push
mov
idivl
dec
aam
int
pop
leave
mov
int3
inc
outsl
sbb
push
aaa
lods
adc
lret
sub
xor
data16
push
mov
cmpsb
jns
xchg
cs
sub
fdivl
mov
jno
cmp
inc
ja
data16
and
fdivrl
mov
pop
out
mov
stc
daa
mov
sub
ds
fcmovnb
dec
pop
add
or
jmp
lcall
xchg
popa
aaa
and
aaa
fdivrs
into
jp
int
pop
sub
pop
push
subb
mov
in
cld
mov
lcall
sti
loopne
aaa
scas
aaa
jae
jnp
push
inc
loop
ljmp
scas
insb
xor
jp,pt
pop
sbb
popf
fsubl
mov
pop
js
inc
mov
lcall
ds
jecxz
sbbb
mov
test
stos
ficompl
imull
aaa
fimuls
ja
insl
aad
mov
stos
mov
inc
pop
test
cmp
mov
fcompl
mov
lcall
mov
jecxz
pop
jbe
dec
sbb
popf
in
xchg
mov
cmp
and
xchg
nop
movl
notl
mov
fildll
jle
out
stos
in
and
pop
mov
dec
scas
mul
adc
mov
jae
push
or
lea
mov
lret
in
inc
xchg
lcall
lock
pusha
and
push
outsl
xor
hlt
sbb
pop
pop
je
jo
pop
out
daa
or
pop
ds
and
mov
pop
out
int3
bound
iret
loope
aaa
mov
lea
out
pop
sub
xchg
add
jge
add
mov
push
pop
call
ss
push
enter
mov
dec
outsb
mov
fidivs
and
pop
sbb
add
mov
and
xchg
sbb
int
aas
and
cmp
stc
scas
bound
dec
xchg
je
leave
adc
cmp
mov
adc
leave
jb
js
cmp
jns
movsb
arpl
fnstsw
out
sub
xchg
aam
in
mov
iret
bound
jne
ja
aam
std
cli
or
mov
pushf
xchg
lret
int3
push
jmp
push
inc
add
and
xchg
mov
adc
inc
pop
inc
mov
repnz
ds
movsl
add
inc
xor
aaa
xchg
add
je
data16
fstpl
jge
pop
mov
or
fdiv
mov
sahf
inc
cmp
fcoml
jno
sub
ds
push
lcall
mov
roll
jmp
daa
clc
lods
aad
dec
pop
sbb
roll
aaa
inc
mov
push
cmp
add
xchg
aaa
pop
dec
push
dec
mov
test
sbb
in
cmp
xchg
cmpsl
loopne
cmp
jno
add
insl
in
das
mov
cmp
xchg
jl
ret
in
dec
sbb
xchg
sbb
fwait
popf
cld
jmp
rcrb
addl
out
movsl
aaa
inc
cmp
jmp
inc
pop
cmpsl
popf
mov
add
gs
mov
mov
adc
popa
or
lods
jecxz
cltd
and
dec
data16
addr16
push
jae
ret
out
fdivrs
out
es
mov
mov
lock
and
aaa
dec
outsb
mov
push
inc
adcl
cmp
pop
mov
ja
ds
push
xchg
orps
das
cmp
iret
mov
shl
loope
or
mov
push
lods
mov
lcall
sub
lock
arpl
ret
cmp
or
cli
push
jp
or
jle
dec
js
xchg
and
std
sbb
outsl
mov
sbb
sbb
out
fs
pop
mov
push
bnd
cmp
aaa
scas
pushf
inc
loop
mov
inc
sbb
rcl
sbb
imul
popf
int3
cltd
and
xor
daa
mov
fadd
shl
pusha
cld
xlat
or
test
mov
ljmp
push
add
pop
lcall
pop
pushf
fsubrl
mov
pop
push
and
stos
pop
test
arpl
iret
inc
fbstp
pop
or
cmpsb
repnz
dec
xor
js
cltd
frstor
insb
icebp
mov
cmp
dec
aad
fs
call
pop
mov
jl
fiaddl
aaa
jl
loopne
fwait
outsb
rcrl
jb
lret
daa
lods
inc
cmp
mov
mov
pop
xchg
xchg
int3
cmp
clc
mov
ds
aaa
sbb
jne
dec
sub
pop
mov
nop
stos
dec
lcall
aaa
jle
xor
hlt
loop
mov
and
pop
xor
insb
fcmovu
sbb
pop
xor
ret
inc
popf
mov
inc
inc
dec
sbb
bound
pop
push
xor
xchg
fucom
mov
int
aas
cs
xchg
aam
cs
sti
push
test
pop
sbb
jle
inc
loope
mov
jle
jns
test
out
jg
dec
mov
popf
outsl
aas
mov
sub
mov
add
mov
ret
and
pop
cmp
sahf
fcomp
daa
cmp
cmp
xor
xchg
xchg
and
cmpsl
fldt
jecxz
stos
cmp
pop
pusha
loopne
not
addb
lock
mull
sbb
into
push
lcall
pop
leave
pop
and
xor
inc
repz
dec
mov
cmp
call
cmp
pop
lret
xchg
roll
pop
jo
jne
mov
lret
lods
push
cmp
mov
sbb
xchg
insl
fdivrl
in
cmp
jns
out
ds
out
mov
jnp
inc
sarl
dec
cli
aas
jg
mov
cmp
aad
cmp
inc
sbb
xchg
mov
jl
push
es
cmpb
push
ret
mov
aaa
dec
cmp
mov
out
leave
cmp
test
fisubs
push
ja
xor
dec
into
pop
sub
leave
ja
xchg
cmp
jle
jge
mov
adc
mov
aad
movsl
push
pop
mov
add
jb
mov
inc
mov
cmp
mov
sbb
adcb
fdivr
dec
mov
fldlg2
mov
adc
cmova
sub
xor
idiv
mov
popf
insb
inc
aaa
adc
push
add
sub
adc
ds
pop
les
sub
outsb
das
mov
out
int3
adc
xlat
mov
pop
pop
call
arpl
dec
insb
in
nop
xchg
cmp
bound
mov
fists
or
mov
outsb
and
mov
cmpsb
push
push
xor
xor
shr
dec
aaa
dec
or
mov
mov
pushf
sbbl
jmp
xchg
jo
cmp
xchg
pop
hlt
jp
sbb
dec
xchg
cmpsl
or
outsb
jle
inc
jge
in
push
stos
cmp
stos
and
jp
xchg
mov
in
aad
pop
pushf
sub
adc
inc
jge
sti
in
inc
jbe
cli
data16
sub
cmp
aas
stc
pushf
aad
int
adc
cmpsb
rolb
inc
popf
jmp
das
cli
arpl
orl
dec
aad
lret
out
ja
jb
cmp
loope
add
popa
sub
jbe
cli
shlb
push
cmc
jle
dec
les
stc
mov
adc
mov
add
repnz
mov
adc
out
out
jmp
pop
xchg
push
adc
jnp,pt
xchg
sbb
out
repz
mov
bound
fidivrl
xadd
aaa
fidivl
mov
out
adc
out
or
inc
and
ds
outsb
insl
add
popf
pop
bound
xchg
push
xor
sbb
mov
imul
mov
mov
dec
and
popf
xchg
push
inc
int3
jns
daa
iret
mov
push
loopne
mov
add
xor
mov
jecxz,pt
and
fs
mov
jge
cli
push
ss
or
cmp
in
into
mov
jno
sbb
push
push
sbb
inc
add
mov
pop
xchg
push
test
xchg
lock
pop
push
dec
xchg
fstl
cltd
or
mov
adc
inc
sbb
pop
jg
in
pop
lret
dec
dec
ds
push
frstor
pop
fwait
inc
cmp
push
ds
addl
sub
cmp
jo
pop
scas
es
fwait
xor
inc
add
int3
pop
pop
pop
mov
cs
jns
pop
or
mov
ja
lcall
cmp
push
sub
and
nop
fists
lods
jnp
sbb
xor
and
pop
mov
data16
add
lds
adc
fdivrl
fistpl
jle
dec
daa
dec
aam
inc
sbb
push
ja
out
cmp
fs
inc
mov
lcall
lcall
cli
fwait
ret
inc
push
loope
xchg
cmpsl
aaa
mov
push
mov
mov
pop
mov
popf
in
mov
mov
addr16
lret
dec
lahf
leave
jmp
das
xor
adc
sbb
pop
jecxz
cmp
pop
xorl
mov
add
jmp
dec
mov
jmp
pusha
sbb
mov
xchg
fsubrs
inc
cmpsb
jmp
lods
cmpsb
jmp
repz
push
in
test
fistpll
std
cmc
pop
push
jns
or
jnp
insb
lcall
fidivl
cltd
frstor
inc
add
mov
ret
fiadds
inc
arpl
scas
sub
cli
mov
aaa
stc
dec
mov
pop
mov
les
mov
in
mov
jl
aaa
pop
outsb
decb
push
dec
sub
pop
test
push
jg
mov
mov
mull
rcr
jae
mov
pushf
movsb
cmpsl
dec
mov
and
adc
out
sbb
adcb
jle
mov
jmp
inc
ss
decb
test
mov
shrl
fnstsw
push
lea
out
jg
dec
sbb
insb
cmp
call
inc
pop
and
imul
fsubl
inc
push
dec
divb
lret
dec
cmp
add
or
push
adc
jnp
and
test
lahf
push
std
mov
adc
add
mov
jae
popf
imull
cmp
mov
std
push
and
push
fistl
enter
repz
cmp
dec
out
je
aaa
push
push
neg
loope
mov
fwait
addr16
movsl
inc
insl
cs
xor
call
cmp
jp
xor
jmp
inc
lcall
divl
in
sbb
js
jp
jecxz
mov
cmp
int3
fdivr
out
or
cmpsb
in
iret
cmp
rcl
lock
aas
cmp
xchg
jl
or
outsl
sub
add
lret
adc
xor
sbb
xor
inc
mov
lcall
cmp
outsb
mov
cmp
rcl
lcall
pusha
xchg
cs
or
push
pop
lcall
sbb
mov
scas
xchg
adc
mov
incb
shlb
clc
pop
mov
fs
sub
loopne
sahf
shr
inc
xchg
fldcw
pop
loop
inc
test
jae
cmpsl
or
pusha
jle
fimull
lods
in
out
pop
pop
mov
sub
rol
mov
sahf
sbb
jnp
addr16
xlat
jecxz
xor
push
fwait
mov
das
sub
jg
cmpsb
add
jecxz
mov
ss
adc
pop
ds
adc
sub
pop
mov
pop
or
jge
xchg
dec
icebp
sub
rcr
rorb
lds
or
arpl
jnp
inc
sbb
pop
cmp
repnz
cli
call
pop
cmp
cli
cmc
ja
sbb
push
or
insl
inc
rcr
mov
aaa
xor
ud0
add
pop
lcall
mov
jae
lods
mov
int
lcallw
in
cmpsb
lock
imul
fs
pop
in
imul
push
clc
fsubrl
aad
enter
or
std
pop
xlat
dec
aaa
or
jns
xor
pushf
lcall
cmp
mov
cli
pop
adc
cmp
shr
mov
add
inc
add
orb
xchg
mov
popa
bound
cs
popf
add
call
sbb
popf
ret
sub
add
mov
mov
fimull
push
xchg
shlb
in
fidivl
push
mov
pop
mov
pop
pop
repnz
lret
jo
and
mov
dec
js
sub
mov
push
sbb
xor
inc
xor
sbb
dec
or
movhlps
test
fnstsw
jmp
ss
or
sub
std
add
xchg
pusha
and
ds
xor
mov
xor
stos
mov
insb
lods
into
jns
cmp
out
andl
ds
or
pop
repz
nop
mov
adc
lret
jbe
jp
cmp
leave
dec
dec
call
cmpsl
testb
and
lcall
push
sub
push
adc
cmc
loop
jecxz
cmp
int
addl
push
or
pop
mov
out
mov
aaa
xor
fbld
outsl
lock
pushf
push
jg
addr16
lds
cmpsl
aaa
push
ds
dec
in
hlt
mov
lcall
push
cltd
bound
shl
push
jp
or
inc
outsl
and
pop
sbb
out
shrb
xchg
ds
add
hlt
mov
arpl
pop
sarb
cmp
fcompl
cmp
xchg
cmpsl
pusha
cld
cmpsl
popf
xlat
orl
adc
sbb
mov
loope
pop
push
bound
mov
add
fsubs
jb
or
clc
sahf
inc
mov
popf
mov
jle
jecxz
out
and
je,pn
dec
ret
pusha
nop
out
fsubl
rolb
hlt
ljmp
lock
push
mov
jnp
jecxz
inc
mov
jecxz,pn
xchg
leave
gs
ds
xchg
lea
test
push
jnp
rclb
jbe
fdivl
in
daa
decb
dec
inc
rclb
inc
mov
stos
mov
pushf
mov
cld
call
scas
ds
jo
ret
pusha
and
sahf
jecxz
aaa
sub
je
clc
std
fimuls
daa
repnz
lcall
test
into
lcall
divb
sahf
out
inc
inc
mov
add
stc
mov
imul
repz
pop
jb
inc
scas
outsb
push
sbb
clc
aas
pop
mov
arpl
lock
ffreep
aaa
fwait
outsb
or
fcomp
test
mov
xchg
pop
dec
xchg
loope
jg
pop
ja
jmp
push
add
sahf
pop
inc
push
inc
sbb
lahf
sarl
cmpsb
movsl
inc
cmp
int
sbb
cli
push
repnz
jo
stos
jecxz
jp
sbb
jne
popf
test
jecxz
mov
fwait
aaa
cli
cmc
loope
push
adc
cmp
je
pop
lcall
cltd
test
jo
xchg
in
cmp
jecxz
mov
sub
add
repz
mov
lcall
repz
fadd
sbb
mov
fwait
pop
pop
imul
es
xor
mov
cmp
mov
lcall
aaa
mov
movups
sbb
mov
into
xor
mov
fistps
add
xchg
cld
iret
add
xchg
pop
jns
mov
jg
adc
push
sahf
sub
mov
add
lcall
orl
mov
mov
cli
and
aaa
fisubs
jo
enter
test
sahf
xor
sub
mov
jle
mov
mov
mov
popf
mov
fidivrl
aad
test
out
mov
sbb
cli
dec
cli
push
mov
pop
cli
fisttps
roll
lcall
cmp
fcompl
cmp
sahf
cmp
xor
sub
lods
ds
out
mov
xchg
in
sub
ficomps
push
test
out
lds
push
cs
jae
je
insl
cli
repz
aaa
ficomps
aas
ljmp
cmpsb
adc
pop
fbld
addr16
aaa
int3
movsb
push
jg
cmp
es
add
repnz
pop
ret
sti
lret
fidivrl
sbb
adc
lock
push
pop
clc
je
aaa
add
out
xor
sbb
lods
adc
pop
notl
push
dec
jnp
sbbl
mov
mov
xlat
pushf
push
lock
sbb
mov
aad
mov
pshufw
mov
addr16
inc
aaa
or
pusha
test
jne
add
imul
pop
xchg
sbb
lods
stos
repz
sbb
mov
movsl
sub
mov
int
stos
lret
pop
idivb
notb
push
shl
sbb
dec
ret
inc
pop
ja
int
int
cmp
inc
cmpxchg
lret
cmp
jg
jp
or
loope
daa
push
jae
and
es
pusha
lcall
sar
out
xchg
in
mov
mov
and
or
int3
push
fdivrl
sbb
pop
cmp
xchg
cmp
ds
das
loopne
xchg
aas
xchg
fstl
pushf
add
push
cmpsb
loope
inc
cmp
cmp
and
pop
pop
sahf
clc
in
scas
adc
cld
push
popa
mov
popf
cmp
lods
fildl
lods
inc
test
cmc
cmpsl
cmpsl
inc
xor
lcall
negl
loop
and
lock
in
stos
mov
push
mov
enter
je
stc
push
and
xchg
sub
push
gs
test
js
pop
shrb
jg
dec
jae
push
lods
cmpsb
xchg
je
aas
lret
enter
cwtl
dec
fimuls
adc
stc
sahf
int3
cmp
sub
xchg
add
fninit
popf
sarb
flds
push
scas
cmp
lea
inc
jp
mov
lods
push
add
pushf
fwait
cld
divl
sub
jb
das
cmpl
mov
jnp
pop
nop
arpl
sub
fistpl
inc
movntps
sub
pop
aaa
cmp
jno
loop
pop
dec
lcall
jge
push
fs
jecxz
rclb
test
out
fisubl
fbstp
and
jg
adc
int3
lcall
sub
jae
lcall
pop
mov
cmp
push
jge
lods
hlt
adc
fwait
shr
mov
iret
fcmovnu
jo
test
dec
mov
lods
addr16
push
mov
mov
popa
aaa
sbb
lret
jno
andl
in
js
mov
mov
out
lcall
or
mov
inc
dec
rcrb
nop
fsubs
scas
gs
fdivl
xor
and
xchg
pushf
ret
stos
sbb
sbb
xchg
out
rclb
jb
ljmpw
cmp
sub
fcmovnb
aas
mov
adc
fdivrs
fisubs
cld
jmp
push
sub
push
loopne
sahf
jle
or
mov
dec
sbb
call
sbb
push
cmpsl
daa
mov
fsubl
and
ds
out
xchg
jno
fistps
lret
ja
mov
andl
pop
rcrb
popa
sub
test
ds
in
jo
fstpl
xor
add
cli
mov
rcrb
xor
rolb
sub
sbb
pop
mov
jge
cmp
repnz
xor
mov
imul
fdiv
loop
fwait
and
xchg
outsb
scas
ljmp
ret
ds
mov
out
in
movsb
mov
xor
out
sub
cmp
push
sbb
sahf
mov
les
movsl
push
stos
lea
xchg
jmp
cmpb
ljmp
mov
mov
scas
mov
inc
dec
mov
stos
fstl
fcoml
out
mov
loopne
inc
ds
jne
sub
ja
dec
aaa
cmpsl
out
mov
movsb
push
pop
out
push
imul
in
test
call
push
jmp
mov
gs
mov
pop
pop
pop
mulb
clc
and
sbb
int
or
out
je
je
push
shrl
dec
push
push
lcall
xchg
lahf
jne
inc
mov
sub
cmp
inc
ffreep
xchg
aaa
or
mov
stc
mov
sbb
fsub
popl
mov
mov
lea
es
mov
pusha
lcall
inc
int
mov
shlb
loopne
popf
out
dec
imul
push
add
xchg
mov
lds
sarl
aam
sub
hlt
cmp
int3
jp
ds
loop
inc
shrb
inc
fwait
lds
test
ds
or
es
cmp
xchg
out
jo
out
jle
jnp
mov
push
sbb
pop
fistpll
pop
rcll
sbb
enter
push
mov
lret
frstor
fnsave
pop
push
inc
into
sahf
sbb
push
jo
fsubrp
mov
in
pushf
and
lret
clc
sub
cmp
and
sub
icebp
dec
aas
lcall
jecxz
pushf
jecxz
cmpsl
rorl
sbb
mov
cmp
ds
mov
sub
clc
cmp
dec
pop
add
pushf
lods
jge
mov
inc
es
pop
push
dec
in
fstps
sahf
sbb
inc
loopne
inc
xchg
cmpsb
xchg
mov
aaa
cmp
sbb
enter
mov
fnsave
out
jp
dec
fwait
push
leave
xchg
aaa
in
mov
call
addr16
in
lds
bound
or
std
fcompl
push
int3
sub
fisttpll
cmpb
inc
jbe
jo
mov
inc
xchg
push
pop
insb
dec
pop
push
in
xchg
aas
imul
xchg
xor
jnp
jmp
es
and
and
mov
dec
jbe
hlt
cmp
je
add
sbbb
or
pusha
xchg
xchg
mov
fiadds
test
int3
loop
xchg
push
das
xchg
pop
and
and
sub
data16
mov
int3
movsl
inc
iret
scas
filds
dec
xchg
dec
test
adc
adc
movsb
daa
xchg
xor
add
push
sbb
fmuls
add
and
push
mul
mov
sti
pop
add
cmc
clc
pop
push
lock
push
sub
xchg
push
mov
and
mov
in
pop
pop
inc
sub
xor
adc
test
fcoml
mov
xchg
mov
fwait
cwtl
cwtl
out
arpl
adc
sti
jne
sbb
push
aaa
pusha
or
sbbb
cmpsl
mov
mov
mov
fisubl
test
pop
lahf
push
push
leave
or
sub
mov
or
inc
mov
jno
and
or
cwtl
or
sbb
stos
mov
ffree
sti
loopne
sbb
adc
mov
dec
xchg
shll
in
sbb
cli
pop
lcall
mov
lcall
pop
lods
push
add
mov
inc
inc
aaa
cmpsl
or
dec
cld
add
mov
push
pop
dec
pop
rcll
jp
mov
in
pop
adc
mov
push
mov
push
ds
cmp
dec
cs
push
movsl
sahf
jmp
mov
mov
mov
loop
ljmp
dec
daa
jp
jne
mov
pop
mov
pop
scas
and
fldl
adc
inc
mov
jg
jnp
es
test
xor
dec
push
lcall
adc
mov
call
push
dec
aaa
js
cmp
hlt
mov
mov
aaa
inc
loopne
cmp
jle
pop
fsub
fstpt
dec
lret
dec
dec
aaa
add
ds
pushf
sub
sahf
push
add
rorl
dec
test
cmp
sbb
or
inc
stos
adc
fildll
xchg
lcall
scas
or
push
loop,pt
push
int3
andl
testl
int3
pushf
fmuls
jp
cmp
push
ss
insb
inc
sub
cld
mov
out
dec
cmc
push
and
mov
push
and
in
js
pop
pushl
loop
insb
in
outsb
movsb
sub
dec
mov
and
mov
sub
dec
loopne
cmp
sbb
ds
cli
jl
and
clc
mov
add
outsb
mov
aaa
out
fistps
lcall
sbb
sbb
test
pop
lds
pop
movl
mov
idivl
push
ljmp
dec
orl
adc
cmpl
jecxz
and
jmp
sarb
pop
inc
pop
fcmovbe
sbb
test
pop
popa
test
lods
xchg
ret
and
sub
les
lea
filds
ja
arpl
xchg
aad
push
cwtl
mov
insl
cmp
ja,pt
or
sub
out
pushl
stc
ljmp
lcall
push
rcr
sti
cmp
ja
fcomps
xchg
fildl
jb
mov
dec
rcrb
inc
cmp
hlt
mov
cli
or
sbb
cmp
outsl
sbb
inc
aaa
movsl
sbb
xchg
test
lahf
pop
test
faddl
add
ds
aam
gs
data16
and
cmp
fs
loopne
jmp
xchg
sbbb
push
mov
pop
jnp
neg
or
mov
cli
jo
push
in
xchg
or
scas
js
and
sbb
test
sbb
sti
mov
fists
pop
and
movsb
test
lret
js
sbb
push
shlb
fidivs
jbe
add
sub
push
stc
and
outsb
push
ds
negl
inc
cmpsl
std
mov
xchg
movsb
out
jne
push
or
jo
xchg
iret
mov
lods
jns
xchg
neg
and
aaa
stos
add
lods
out
arpl
sbb
and
outsb
gs
ret
and
or
sbb
xor
mov
clc
push
notb
sub
in
jb
aas
in
data16
aaa
pop
shr
mov
inc
mov
mov
repnz
enter
inc
inc
mov
and
out
insb
test
imul
xor
sub
xchg
mov
test
push
cmpsl
aaa
jne
fiadds
scas
cmp
cmc
gs
pop
xchg
push
fisttps
xchg
sbb
inc
cmp
pop
jge
or
or
push
xlat
cld
and
insb
jns
mov
mov
iret
mov
jnp
lods
or
sub
int
push
js
int3
ss
fstl
adcb
dec
loopne
sub
cli
sbb
xchg
test
xor
mov
gs
arpl
or
jne
or
or
mov
pop
je
stc
daa
lods
out
dec
clc
or
test
addr16
sbbl
popa
sahf
fdivl
and
fsts
xchg
call
mov
cmp
jmp
jno
xor
inc
sti
add
push
cmp
jb
push
dec
jne
cmpb
mov
ds
add
cmpsl
push
jbe
mov
lret
cmp
nop
inc
fsubrl
int
push
adc
cwtl
rorl
shl
stos
popa
xor
adc
or
fists
push
lret
imull
gs
jnp
sbb
test
xor
mov
gs
insb
pop
adc
cmp
rcrl
inc
or
xchg
push
inc
aaa
push
outsb
shr
mov
aas
fsts
fstpl
fcmovb
das
fcoms
cmp
push
push
xchg
mov
adc
cmp
outsb
aam
lret
inc
ret
outsb
jge
movsb
sbb
mov
add
mov
pop
es
shl
hlt
xchg
lcall
mov
aad
push
jb
mov
test
divb
xor
pop
add
fidivs
aaa
mov
xor
sbb
jge
xor
pop
push
cmpsb
mov
mov
fdivr
push
or
aas
xchg
int
outsl
jbe
mov
xor
ret
in
fwait
mov
repz
fmul
lcall
out
fwait
sarl
cs
pop
shl
mov
inc
inc
mov
lcall
inc
test
pop
jmp
xchg
fnsave
call
push
shrb
div
cmp
pop
sbb
ja
enter
int
push
mov
cli
add
mov
sbb
dec
mov
fstpl
stc
sub
shrb
popa
sub
shll
cmp
dec
push
lret
sbb
subl
dec
movsl
ja
test
jbe
push
sti
leave
jmp
stos
push
testl
xor
loop
test
scas
mov
imul
pop
jnp
adc
jg
fldt
inc
cmp
push
into
push
ret
inc
cmp
pop
xor
fnstsw
loopne
cmpsl
test
lahf
sbb
cmp
cmp
lret
inc
in
or
sub
pop
push
fcoml
pop
ficompl
ds
mov
rcrb
fwait
out
pop
adc
mov
sahf
cmp
xor
das
aad
jmp
loop
nop
data16
mov
add
int3
call
mov
mov
lods
je
cmp
addr16
nop
push
inc
xor
mov
add
sub
sub
add
mov
push
sub
aaa
pop
cli
mov
cmc
lahf
add
mov
lods
mov
push
or
aas
leave
mov
sub
rcr
arpl
mov
xchg
sbb
pushf
inc
and
fldl
mov
xchg
js
daa
jp
dec
cmp
mov
inc
ja
mov
xchg
rcr
dec
mov
ret
insb
ds
rep
push
and
xor
inc
sub
sbb
fdivl
das
fildl
imul
lahf
in
popf
xor
std
stos
sbb
fcoml
imul
and
pop
aas
fstps
adc
add
inc
fnstsw
mov
sub
adc
inc
pop
cwtl
or
jmp
pop
push
pop
mov
rcr
les
push
movsl
and
xchg
mov
or
xor
jb
lea
sub
push
cmpsb
arpl
push
xchg
lods
push
dec
aaa
cmp
jle
pop
mov
cmc
aam
mov
fbstp
push
inc
mov
in
jae
mov
sti
push
dec
dec
jmp
ss
adc
fs
getsec
movl
jae
cmp
or
xchg
and
mov
aad
fisttpll
adc
fcomp
pop
sbb
push
mov
pop
pusha
aaa
push
inc
cs
cld
dec
lcall
and
stc
dec
push
cmp
add
test
mov
and
sub
push
neg
mov
mov
lcall
and
fisttpl
jecxz
aam
daa
aas
ljmp
pop
pop
sbb
dec
jns
mov
sub
lret
ss
aam
pop
in
mov
mov
push
js
les
xchg
and
mov
add
arpl
scas
jle
fnstsw
repz
cmp
out
sbb
dec
add
xor
sub
fimull
push
inc
adc
imull
lcall
shll
fcoml
dec
test
ret
fbld
lret
fnstsw
push
ret
sbb
push
or
lahf
inc
inc
outsl
and
xor
fldl
test
clc
pop
fstpt
sahf
cmpl
mov
clc
ds
daa
insl
stos
sub
jl,pt
es
mov
add
cmp
mov
mov
mov
cmp
shrl
adc
inc
or
add
jecxz
push
aad
int
leave
sbb
mov
mov
cwtl
test
mov
call
mov
inc
rdmsr
fstl
push
dec
ds
andl
int
push
arpl
jmp
aaa
cmpsl
repnz
mov
hlt
pop
ret
mov
mov
or
daa
and
cmp
aas
leave
xor
mov
es
fmul
imul
sbbb
inc
ja
insb
push
roll
add
jg
sbb
into
mov
popf
sbb
push
mov
mov
sbb
insb
xchg
mov
stos
cld
jle
call
push
lock
sub
push
popa
dec
aam
lret
ss
push
fnstsw
in
std
and
ds
js
movb
push
cmp
les
sbb
mov
xchg
and
xchg
popf
call
pop
dec
pop
push
pop
imul
add
aaa
mov
or
and
push
frstor
fistpll
test
call
arpl
cwtl
sub
repnz
pop
incb
add
push
lods
mov
mov
jnp
fsubrl
jne
ljmp
inc
in
sbbb
rcrl
stc
call
outsl
sti
je
ds
xlat
mov
imul
pop
pop
shrl
dec
stos
test
ret
pusha
dec
ret
imul
int3
mov
mov
adc
xchg
mov
or
xchg
inc
fs
inc
mov
sub
jno
pop
xchg
subb
xorl
adcl
dec
stc
cmpsl
repz
push
add
lahf
cmp
movsl
inc
inc
cmp
xor
clc
sahf
pop
in
dec
xchg
cmp
inc
pop
mov
loopne
inc
adc
ds
js
pop
adc
test
xor
pop
out
xchg
xchg
xlat
sbb
sub
daa
lods
fsubl
in
repz
test
in
popf
hlt
dec
mov
test
popf
jno
xchg
push
mov
lcall
stos
inc
in
fcmovnb
add
pop
outsl
jmp
sbbb
sub
lods
addl
mov
mov
jbe
adcb
mov
xor
test
in
inc
pop
jns
or
mov
dec
out
pop
mov
sbb
aas
jge
push
xchg
pop
jbe
shrb
push
pop
dec
mov
lock
into
pusha
mov
jne
adc
ja
test
push
outsl
pop
daa
xor
daa
or
ds
add
dec
jno
lea
addr16
jle
sbb
xor
repnz
and
fxch
aaa
or
push
lcall
mov
aaa
lret
aas
movb
lcall
jne
cmp
fistpl
mov
sbb
test
aad
rorl
dec
push
push
fsts
std
xor
cmp
sub
cmpsl
xor
aaa
sbb
and
xchg
negl
mov
jle
mov
enter
popf
or
jb
lcall
call
adc
out
inc
mov
pop
mov
push
lea
icebp
jp
sti
cmp
aas
outsb
pop
shrb
setbe
pop
sbbl
data16
mov
fwait
push
dec
popf
pusha
ficoml
jp
addr16
cli
jo
pushf
ffreep
dec
push
inc
into
xchg
push
push
aaa
jbe
or
or
imul
mov
fnstenv
mov
jno
add
lcall
xlat
cld
fcompl
jo
and
push
popf
xchg
inc
cmp
sub
pop
in
pop
ljmp
inc
pop
fs
mov
ret
ljmp
mov
mov
pusha
or
or
mov
outsb
mov
outsb
lds
in
and
in
add
dec
insb
testb
cmp
shll
fisubl
jnp
mov
ljmp
pusha
repnz
aas
mov
fldt
jp
andb
es
rorl
mov
jns
out
jle
leave
lock
out
fs
stos
imul
mov
into
inc
push
cmpsl
ds
test
testb
flds
xor
repnz
daa
sbb
add
jb
jnp
lcall
xchg
ret
cmp
xchg
mov
imul
fldl
call
pop
add
insl
pushl
outsb
leave
ret
lods
test
mul
fwait
pushf
std
pop
fisubrs
sbb
outsb
jmp
mov
jb
arpl
popf
mov
lret
cmp
fstpl
jne
jle
or
push
inc
enter
out
adc
adc
jnp
jge
inc
push
inc
mov
lcall
mov
fstpl
int
in
xor
mov
lods
or
es
in
sub
and
lods
mov
dec
aad
fs
push
mov
pop
aaa
xchg
pop
add
or
cwtl
scas
dec
fnsave
sub
pop
std
icebp
outsb
pushf
ja
inc
adc
call
cltd
mov
inc
fisttpll
fidivl
daa
jp
pop
push
and
bound
inc
clc
loope
xacquire
dec
aad
dec
mov
sub
add
loopne
in
push
dec
mov
xchg
faddl
jae
cmp
out
inc
mov
xchg
xchg
lcall
push
mov
fiaddl
lock
jge
cld
cltd
xor
jge
sbb
jp
or
lcall
pushf
pop
and
push
inc
pop
lret
loop
cmpsb
loop
xchg
je
inc
in
cltd
lds
add
dec
aas
sbb
in
and
jecxz
add
mov
xlat
js
push
mov
lock
sbb
adc
jo
inc
inc
scas
shlb
fldl
mov
cs
shlb
ds
mov
jne
cmp
ljmp
cmc
sub
flds
push
sub
or
cs
pushf
lahf
mov
mov
outsl
mov
int
icebp
sbb
je
pop
rcrl
inc
lcall
roll
sti
sbb
push
ret
jo
je
sahf
nop
push
adc
add
dec
mov
lds
outsl
dec
or
aas
and
mov
xchg
dec
pushf
cli
xor
mov
cltd
in
inc
rorl
mov
xor
mov
sbb
cwtl
cltd
sub
enter
push
scas
dec
pop
sbb
xchg
cs
aaa
jbe
cmp
sbb
or
sbb
out
loope
movsl
adc
frstor
and
aam
and
inc
jns
jno
cmp
movsb
ds
es
jge
cmp
sbb
inc
movsb
das
xchg
jl
aad
xor
insb
out
adc
jecxz
lret
lahf
into
pop
add
xor
jno
arpl
loopne
fsubl
lcall
lret
sbb
imul
pop
lock
lcall
cld
in
adc
cmp
outsl
hlt
dec
test
push
cmc
out
pushf
or
and
test
pop
adc
stc
aad
fistpll
test
cwtl
imul
mov
pop
sub
in
dec
sub
int3
push
loope
mov
mov
loopne
int
test
stc
mov
in
mov
test
insb
rclb
outsl
scas
push
insl
add
xchg
aaa
jo
add
lcall
push
xor
rorl
aad
dec
pop
lcall
lret
in
fmull
out
ds
data16
dec
xor
sbb
pop
xchg
push
call
lcall
xlat
pop
xchg
mov
sub
jp
dec
cmc
jno
mov
cmp
pop
iret
adc
dec
xchg
add
mov
in
pop
xchg
mov
loopne
clc
mov
push
lret
rcrb
bnd
sbb
and
mov
sub
push
lcall
mov
jecxz
jo
and
or
daa
fiaddl
and
ja
scas
push
xor
in
sbb
test
pop
aad
mov
ljmp
es
repnz
sar
mov
fnstsw
pop
sbb
adc
cmp
xchg
rolb
push
push
popf
adc
inc
inc
jb
in
mov
jmp
hlt
testb
hlt
sub
aaa
pop
sbb
inc
pop
cmp
pop
ds
sub
inc
jmp
lock
add
mov
popa
push
fstl
ss
mov
ja
data16
cmp
push
das
sub
inc
inc
movsb
mov
pop
leave
int
xchg
cmc
das
xor
inc
dec
scas
data16
sbb
or
out
jne
pop
cli
notl
push
push
aaa
or
xchg
mov
inc
mov
xor
push
mov
lods
mov
loopw
cmp
ja
nop
inc
and
inc
scas
movsl
fcoml
dec
jae
pop
ds
sub
bound
insb
jmp
fldl
mov
pop
mov
xchg
hlt
cmp
lcall
aaa
jp
cli
jg
test
aad
mov
adc
inc
scas
sti
fsubrl
mov
mov
inc
mov
push
shlb
jge
inc
test
xchg
aaa
shll
jns
cmpsb
xor
std
xchg
ss
js
add
lahf
mov
movsl
push
cmc
jp
out
dec
fwait
and
jecxz
xchg
mov
aaa
fdivrp
in
push
push
jb
sub
jnp
js
mov
sbb
jo
cmpb
jp
fisttpll
mov
xchg
outsl
jb
ficoms
pop
btr
aad
arpl
frstor
and
push
imul
insl
push
mov
push
fnstsw
test
mov
jp
cmp
sti
das
aaa
sahf
out
in
or
sub
or
cmpsb
fidivrl
mov
pop
and
jmp
in
jbe
pop
mov
jmp
cmp
pop
and
sarb
bound
into
sub
aam
ds
mov
cmp
cmp
inc
mov
ds
out
repnz
pop
lods
cmc
fwait
incl
sbb
cmp
fstp
pop
push
push
pop
push
and
jno
jne
mov
in
dec
jae
mov
lret
daa
stc
mov
cmp
cmp
inc
jmp
xor
push
xlat
js
mov
movsb
cmp
jae
fists
mov
or
jno
pop
push
leave
dec
sub
xor
aas
jae
or
outsb
cmp
and
out
pop
fldl
adc
pop
push
add
mov
jl
mov
cmp
mov
ds
ret
addr16
add
xchg
in
pushf
dec
pop
lods
mov
dec
push
adc
inc
out
insb
out
push
popf
insl
jbe
push
adc
insb
lcall
push
loop
enter
fmul
icebp
sbb
inc
push
mov
movsb
jg
in
fldl
lcall
jecxz
lret
aad
mov
lds
insb
push
ret
push
pop
adc
in
in
ret
xchg
cmp
xor
add
push
into
mov
ret
add
js
adc
sahf
pop
ds
pop
mov
in
out
pminsw
xor
test
jge
stos
jge
or
cmpsl
push
leave
lcall
add
daa
or
popf
leave
push
sbb
inc
ficompl
icebp
dec
jle
sbb
rcrb
dec
adc
ja
xchg
dec
lcall
mov
dec
dec
xchg
pop
push
into
and
lret
sbb
in
addr16
jne
cmp
mov
stos
aaa
rolb
test
jle
pop
push
loop
and
mov
push
aaa
xchg
jecxz
mov
lcall
sub
stc
aaa
clc
jecxz
fsubrs
pop
jle,pn
dec
sbb
mov
nop
cmpsb
sub
idivb
insl
sub
jg
and
out
add
sarl
xor
adc
lcall
ds
pop
inc
add
dec
mov
js
dec
icebp
cwtl
loopne
cwtl
in
add
dec
push
mov
lret
push
lret
push
or
sub
sub
in
pushf
filds
lcall
jg,pn
push
push
fdivrs
ja
loope
add
cld
cmp
fisubl
sub
add
call
pop
inc
iret
sub
aam
out
cmp
out
test
test
sarb
out
adc
lcall
lret
in
push
push
push
mov
nop
hlt
je
cmp
add
fsubl
dec
call
lea
imul
dec
or
xlat
jne
pop
ficoml
add
rcll
jbe
lcall
xchg
out
hlt
andl
fdivrp
jg
lock
adc
sbb
cmp
dec
loope
mov
jecxz
mov
mov
mov
jmp
aam
push
gs
outsb
jns
leave
pop
pop
lahf
test
mov
pop
jo
sti
dec
out
sbb
lea
leave
mov
sbb
sarb
lcall
dec
and
aaa
repz
sbb
pop
leave
das
lcall
add
fcoml
or
in
cmp
mov
in
bound
adc
cmp
enter
popf
pop
dec
and
pop
xor
pop
bound
xor
loopne
inc
jmp
test
mov
and
xchg
ja
sbbb
imul
out
clc
lcall
int
rcrb
repz
lock
and
and
jb
lcall
inc
addb
adc
mov
mov
in
cmp
pop
jle
pop
mov
xchg
je
stos
daa
mov
outsl
outsb
xchg
or
out
inc
pop
ja
neg
rcll
mov
aaa
mov
sbb
cmp
cld
insl
pop
cmp
inc
int
fwait
or
jle
dec
adc
sahf
mulb
push
fstpl
pop
xchg
cmp
cmp
sbb
sbb
push
insb
fstpl
pop
xchg
push
or
pop
into
xlat
stos
fisubrl
cmp
or
push
push
lret
add
mov
or
add
adcl
imul
fcompl
sbb
lcall
jb
pop
repnz
jle
rcl
inc
mov
fsubl
jl
jb
or
ds
fwait
and
imul
sti
dec
sub
xchg
mov
mov
xor
xchg
xor
in
loope
sub
cmpb
leave
jae
in
pop
push
pop
pop
cmp
gs
lods
cli
popf
mov
xchg
add
mov
inc
scas
sub
scas
outsb
movsl
js
nop
out
sbb
sbb
mov
bound
mov
rcr
cmp
orb
mov
cmp
push
mov
cwtl
sti
out
mov
sti
dec
into
or
enter
rcrb
js
sti
lcall
into
movsb
cli
push
dec
mov
and
pop
negb
dec
mov
mov
mov
cli
inc
inc
mov
sar
xchg
push
mov
pop
xor
xchg
fwait
pop
pop
jbe
sub
cwtl
mov
lock
clc
mov
cs
sub
inc
push
xchg
mulb
mov
lods
ds
fisttps
arpl
push
pop
mov
inc
out
loopne
sub
sub
push
sub
in
aaa
dec
lea
add
cmp
loop
cs
jo
inc
inc
lret
mov
mov
popf
rcrl
mov
push
xchg
aad
adc
jb
test
call
lret
aam
loopne
in
imul
insl
push
cmp
push
adc
lret
aas
inc
pop
jo
popl
sub
inc
movsl
fwait
in
dec
pop
arpl
add
shll
inc
pop
jnp
or
xchg
test
cmc
pusha
sbb
xchg
gs
fs
cmpsb
nop
jle
jo
ds
mov
dec
dec
push
cmp
testl
inc
bound
lcall
fs
dec
jmp
pusha
sub
in
adc
pop
cld
fisubrl
mov
fsubr
loope
cli
dec
sbbl
pop
fldl
pop
adc
cmp
insb
inc
into
mov
addl
rcr
pop
ds
imul
mov
push
jmp
popa
mov
and
sarb
ds
sbb
cmp
stos
in
sub
lods
bound
mov
pop
pop
push
lret
stos
mov
and
fimuls
divl
int3
xchg
cmpsl
jns
loope
cmp
sahf
loop
outsl
xor
push
mov
push
push
insl
jbe
xchg
aaa
mov
cmp
jmp
cltd
aaa
sub
std
ret
rclb
rorb
xor
dec
sub
mov
mull
out
cmpsl
lcall
mov
ss
mov
loopne
push
mov
pop
mov
xor
fldl
mov
aas
push
jecxz
and
mov
xchg
sbb
insb
xchg
lcall
push
mov
sbb
mov
cmp
adc
stos
movb
inc
xlat
pop
inc
mov
xor
repz
outsb
cmp
test
out
out
cwtl
fwait
in
xchg
dec
xor
ja
sub
cmp
dec
sub
add
fnstsw
push
fwait
inc
inc
fucomip
aas
cmp
mov
test
pop
sahf
lock
mov
jb
pop
xchg
inc
int3
xchg
or
popf
pop
ja
test
sbb
cs
cmp
stos
ds
or
add
cmc
xor
jb
inc
fistpl
xor
dec
and
call
inc
das
nop
push
sbbb
pop
inc
adc
fs
rcll
cs
cmc
push
mov
pop
inc
mov
sahf
ds
fst
dec
lock
jecxz
data16
lods
shrl
add
rcrb
outsl
inc
mov
out
loop
test
cmp
push
iret
xchg
leave
es
add
cmpsl
lcall
mov
int
rorl
jo
inc
es
and
push
or
test
aad
push
push
jp
mull
mov
inc
std
ss
stos
leave
pop
sbb
mov
pop
cmp
lods
lret
push
cmpsb
je
decb
push
divl
mov
inc
arpl
lcall
pavgb
jge
mov
and
orb
xor
lea
inc
add
sbb
jle
sbb
aaa
mov
push
arpl
fwait
or
push
jns
data16
mov
adcl
adc
sahf
daa
rclb
cmp
xchg
das
mov
aad
sti
mov
in
cli
pushf
cmp
ljmp
mov
imul
push
ljmp
ds
xor
in
lcall
cmp
inc
clc
and
stc
lcall
data16
iret
mov
rcrb
dec
mov
insb
lahf
xchg
faddl
dec
mov
gs
mov
std
jo
sbb
sbb
lock
jp
ds
stos
inc
dec
adc
pop
or
fs
pop
into
lcall
stc
sbb
iret
lret
cmp
dec
dec
std
out
out
outsl
int
ja
mov
inc
jno
push
fldl
adc
jne
sbb
mov
push
jno
aaa
ds
mov
pop
xchg
push
sbb
dec
add
out
fucom
loopne
mov
es
inc
sub
jb
aas
mov
out
push
pop
add
lcall
out
aas
loope
scas
pushf
add
mov
orl
js
out
aaa
mov
in
mov
mov
dec
fiaddl
gs
mov
push
jecxz
call
inc
push
mov
aaa
bound
mov
inc
xchg
xchg
jnp
jne
cld
out
add
inc
daa
push
stos
lea
cmp
iret
and
popf
orb
sub
sahf
sbb
insl
loop
jle
inc
aaa
add
ljmp
xchg
movsb
fisubl
gs
cmp
mov
in
loop
arpl
xor
clc
add
dec
outsb
xchg
ljmp
jo
fs
inc
pop
dec
jle
mov
or
cmp
xchg
stos
shl
lahf
inc
sub
push
push
mov
adc
mov
insl
xor
rcll
js
pop
sub
xchg
fnsave
out
dec
mov
outsl
lods
adc
xlat
mov
sar
js
push
mov
xchg
pop
imul
dec
loopne
loope
roll
addb
mov
sub
bound
imul
es
mov
and
add
aaa
aad
flds
clc
imul
inc
xor
lock
push
dec
out
cmpsl
inc
mov
sar
sub
jo
jmp
fcompl
popa
sub
xchg
in
inc
xor
or
mov
push
mov
aaa
push
dec
push
out
int
lcall
push
inc
sub
outsb
add
pop
movsl
and
rclb
lcall
pop
pop
fcoms
int3
out
cli
ret
fcmovu
cmpl
in
mov
int
jmp
dec
imul
repnz
ljmp
cli
std
rolb
lret
aas
dec
adc
inc
lcall
mov
cmpsb
movsb
dec
rcl
cmp
sbb
cmp
sbb
insb
xor
loop
nop
fsubp
and
inc
xchg
mov
and
sub
lret
fadd
jp
ret
add
fldl
cmp
icebp
mov
andl
add
insl
fldl
cld
movsl
xor
loope
cmp
sahf
ds
icebp
dec
fwait
fwait
mov
inc
imul
call
cli
pop
lods
aaa
pusha
lret
out
jg
ret
mov
fidivrs
ds
fcompl
and
in
cs
addr16
cltd
cli
push
enter
cmp
cs
stc
add
imul
into
sub
mov
aaa
dec
loope
pop
xchg
pushf
mov
cltd
adcb
cltd
dec
popf
lahf
call
pop
in
ret
call
cmp
add
jl
pop
or
mov
or
xlat
jmp
dec
and
pop
mov
jae
aam
sarl
loope
inc
pushf
sub
jg
imul
mov
mov
jns
ds
mov
mov
push
ljmp
sub
xchg
mov
test
sbbl
aaa
inc
dec
sbb
mov
or
or
xchg
je
jae
push
mov
mov
cmpsl
sti
aam
or
inc
cltd
jo
pop
mov
cmp
in
ljmp
dec
les
int3
inc
cmp
cmc
mov
xchg
add
jp
mov
in
fmull
ja
es
cmc
std
inc
mov
sub
leave
mov
dec
mov
add
psubb
and
pop
sub
adc
insl
lds
test
out
jbe
aaa
int3
dec
mov
in
pop
jae
psadbw
popa
repnz
mov
aaa
movsb
lret
jecxz
mov
mov
daa
lret
mov
xor
cli
inc
xor
cltd
xchg
jne
cli
jge
mov
in
loopne
push
or
mov
nop
push
ss
lcall
and
fmul
lret
fiadds
dec
push
push
and
mov
mov
and
int
shr
pop
fidivrl
fwait
aad
stos
subl
aaa
nop
js
jns
jmp
xchg
or
sub
xchg
gs
aaa
sbb
jge
or
cmp
pusha
sahf
xchg
push
aaa
lahf
imul
scas
lcall
sahf
leave
fsubrl
hlt
out
sbb
pop
mov
outsb
push
dec
xchg
aaa
pop
loopne,pn
pop
aam
cmc
lcall
stos
add
aaa
cmp
cmp
dec
xor
mov
test
int3
adc
pop
jg
pop
push
lcall
popa
ffree
xchg
lods
test
cltd
bound
js
lea
mov
sbb
mov
xchg
das
loop
and
faddl
inc
lcall
cmp
fdivrl
cmp
jo
mov
pusha
jge
inc
pushf
into
sbb
dec
repnz
loopne
inc
cmp
mov
mov
fimuls
cs
mov
lods
jnp
inc
pop
movsb
cmpsb
push
test
popf
pop
cltd
stc
adc
fimuls
je
aaa
sbb
rcl
or
aad
xchg
test
lahf
push
dec
gs
in
fstpt
sbb
dec
lcall
pop
cld
or
ror
je
scas
arpl
or
shl
pop
incl
popa
cmp
test
inc
aas
inc
mov
pop
aas
and
mov
mov
push
es
or
fdivl
int3
or
imul
aas
call
pop
sub
push
push
andl
int
mov
and
dec
mov
js
test
xor
icebp
push
mov
frstor
pop
popf
fcoms
mov
push
aaa
loop
into
das
hlt
cmp
jp
jg
outsb
inc
adc
divb
mov
icebp
aas
adcb
or
ds
sub
jecxz
sarb
bound
mov
loop
fwait
mov
xchg
cmc
xor
jne
ds
sub
sbb
cmc
mov
lcall
pop
jl
int
push
jno
mov
pop
cmp
mov
dec
sahf
jne
cld
js
or
jge
sbb
arpl
in
loop
mov
leave
aad
lcall
shrl
testl
nop
jnp
xorb
inc
mov
lea
btc
inc
jg
ja
lahf
sub
ret
test
xor
out
stos
jle
in
sbb
push
fucomp
xlat
mov
shrb
pop
jmp
inc
pop
out
push
js
jae
dec
shll
mov
xor
outsl
cmp
shll
pop
push
jns
cmp
gs
push
xchg
or
mov
sub
xchg
out
in
mov
fdivrl
int3
mov
cmp
cld
fisubrl
jl
sbb
mov
fcompl
adc
fs
aaa
mov
mov
sbb
adc
cmp
call
mov
mov
cmpsb
fs
popa
mov
test
mov
insb
inc
add
nop
lcall
int3
jl
int3
sbb
jno
xor
cs
fwait
jecxz
xchg
sub
jl
aaa
mov
xor
leave
cld
xor
sti
xor
sti
cmp
sbb
jmp
jp
scas
out
fdivs
push
mov
out
ljmp
fidivrl
xchg
add
leave
divl
and
fs
sub
lods
out
cltd
sub
mov
inc
sti
push
xchg
popf
sub
test
pop
shll
cwtl
ror
xor
cld
inc
and
lret
mov
insb
stos
pushl
fcoml
in
sub
pop
js
dec
dec
loopne
xor
xchg
mov
mov
inc
dec
lcall
test
mov
cmp
mov
testl
mov
mov
jnp
inc
cmp
lret
test
test
push
jne
xor
inc
iret
mov
das
add
cmp
jg
xor
shr
lods
xor
xor
sbb
inc
pushf
xor
in
adc
xor
aaa
in
dec
and
les
cmp
out
sub
xchg
in
fmull
mov
and
push
xchg
outsb
cmp
and
test
test
sahf
jbe
fdivrl
movsbl
into
stos
aaa
lock
loopne
jbe
flds
push
ds
lds
fistpl
cmpb
mov
call
mov
mov
test
test
mov
adc
sub
fs
xlat
dec
rclb
data16
pop
inc
test
push
cmpb
ss
mov
cld
push
inc
aaa
loop
and
arpl
inc
loop
lds
mov
adc
jbe
mov
mov
jne
nop
std
cmp
mov
sahf
jo
fisttps
out
cli
hlt
or
push
cmp
sbb
fsubs
fmull
stos
inc
and
sbb
inc
ja
loope
in
inc
std
mov
scas
mov
nop
fs
test
pop
fidivrl
lcall
jns
jmp
rclb
or
lcall
inc
jne
cmc
les
and
loopne
cmp
jne
sbb
dec
jmp
icebp
lds
aad
sub
test
cmp
sahf
xor
ds
sahf
sub
mov
push
test
in
faddl
popa
push
cmpl
xlat
jg
dec
sub
test
movsb
mov
jbe
and
xchg
mov
mov
inc
test
icebp
xor
fidivs
push
in
mov
fldcw
js
into
leave
add
inc
adc
mov
ja
mov
xchg
or
orl
outsb
aaa
pop
cwtl
bound
inc
inc
inc
ret
fists
push
subb
mov
jecxz
add
jo
sub
testb
mov
or
pop
sbb
jae
or
sub
scas
dec
mov
pop
jmp
sub
push
cmp
mov
jp
dec
aaa
adc
adc
rolb
add
mov
cli
rol
sbb
das
cwtl
or
mov
pop
scas
adc
arpl
ret
push
push
lods
adc
xchg
cltd
xor
jmp
sbb
inc
inc
and
cmp
scas
dec
daa
mov
mov
fisubrs
lods
mov
adc
fwait
dec
dec
popf
iret
pop
xor
or
mov
in
inc
inc
sub
test
fstpl
cmp
xorb
scas
cs
jmp
dec
hlt
push
cmp
xlat
fdivl
mov
pop
rcll
dec
mov
xor
inc
in
rcrb
jp
aaa
or
aam
jnp
lock
pop
cmp
inc
inc
aas
ja
or
sbb
sbb
pop
fiadds
ds
inc
testl
sarb
mov
inc
sbb
cltd
sahf
xchg
dec
pop
sbb
dec
fiadds
inc
rcll
ds
stos
out
out
pop
adc
pop
push
cmp
andb
fildl
jnp
lods
ljmp
mov
aas
jo
jae
add
inc
decl
insb
aaa
repz
pushf
cmp
xchg
sbb
fs
or
cmp
add
inc
add
cmp
arpl
out
lods
sub
sbbb
adc
loope
ret
or
or
faddp
jb
addr16
and
mov
sub
inc
cmp
cwtl
mov
inc
or
jbe
addr16
mov
cmp
adc
and
mov
mov
lcall
daa
mov
or
ss
mov
scas
sub
mov
fisubrl
push
add
das
jnp
xchg
mov
xchg
jl
jb
xchg
adc
pop
mov
xchg
test
rorl
jnp
or
mov
push
loope
jl
jb
push
cmp
cmc
mov
jo
or
daa
lcall
sub
xor
les
cmp
xor
mov
jae
sub
xchg
cmp
xlat
sarb
jo
jbe
mov
ljmp
dec
lcall
ss
push
ret
pusha
lods
loop
inc
insb
test
setl
fnsave
mov
xchg
jne
dec
loop
out
mov
add
sbb
jmp
mov
lcall
jns
fcoml
mov
and
adc
push
mov
and
mov
enter
push
push
clc
mov
insl
push
pop
dec
sahf
popa
ds
inc
or
ja
cwtl
xorb
repz
movsl
aaa
nop
add
mov
roll
loop
xchg
ret
jmp
aaa
adc
sahf
ljmp
sahf
pop
enter
and
sub
jg
outsl
popa
mov
inc
imul
lahf
stos
ds
mov
sub
fnstsw
arpl
or
or
call
sti
loopne
jo
scas
mov
pop
pop
xchg
mov
fdiv
filds
ficomps
sub
mov
dec
xor
stc
je
es
pop
daa
inc
sbb
rcrl
bound
cld
enter
mov
leave
sub
inc
aaa
adc
cli
mov
lcall
inc
hlt
fsubrl
xorb
cli
adc
cmpsb
jmp
mov
out
jns
inc
lcall
add
xchg
rsm
je
aaa
and
adc
pop
out
stc
lcall
push
aad
lcall
push
mov
lcall
cmp
fldl
out
pop
sub
ja
mov
into
add
call
sbb
xchg
xchg
dec
jp
mov
addl
loop
fdivrp
outsb
mov
mov
lcall
mov
mov
xchg
inc
je
sarl
test
sub
add
jbe
cmp
movsl
xchg
push
fwait
or
mov
xchg
cli
dec
jo
je
push
mov
sub
in
pushf
inc
mov
jmp
xor
sahf
push
icebp
frstor
mov
sbb
inc
sbb
shll
test
stos
jb
in
lock
xchg
frstor
lea
jecxz
stos
out
lds
sbb
push
xchg
and
incl
icebp
jge
pop
adc
mov
lods
xchg
sbb
inc
lcall
push
loope
insb
mov
adcl
sti
mov
fbld
inc
jge
xchg
pop
cmpsl
repnz
jno
aas
pop
js
in
movsb
adc
push
or
sti
or
movsb
cwtl
aad
xorb
stos
fs
rcrl
popf
fcoml
mov
movsl
addr16
xchg
mov
test
push
jl,pt
repz
cmp
gs
mov
pushf
pushf
aam
jp
test
aam
adc
cld
adc
cltd
nop
inc
sbb
jmp
movl
icebp
xchg
push
jmp
lods
mov
subl
adc
ret
jle
clc
lcall
sbb
lahf
cmp
or
xchg
jne
fmull
dec
test
inc
inc
sub
inc
push
popf
lret
mov
loop
add
pop
and
test
adc
xor
pushf
cmp
xor
bound
pushf
mov
dec
mov
sbb
jne
fnstsw
scas
sahf
test
iret
xchg
ds
mov
jle
adc
daa
and
mov
pop
sub
fstpt
ja
mov
sbb
mov
stc
inc
das
or
cmp
jmp
push
pop
shr
pop
test
sahf
icebp
notb
push
cs
push
push
insb
mov
pop
out
add
fisubrs
idivl
lods
fs
cmp
loope
mov
push
pop
ds
dec
jae
lret
movsl
fstpl
sub
cs
fsubs
inc
cmp
rcrl
inc
lcall
xor
ljmp
push
dec
aaa
mov
dec
cmc
push
bnd
mov
imul
fsubrs
inc
aaa
jne
adc
int
sbb
mov
inc
stos
scas
stc
imul
cld
lret
ret
lcall
xchg
rcr
push
push
sub
cmp
sbb
popf
iret
mov
mov
and
into
cmp
push
loope
cmp
cs
aas
movsl
and
repnz
push
pop
jne
dec
aaa
cli
and
sbb
nop
in
mov
pop
fs
adc
inc
mov
push
repz
sbb
xor
movsl
sub
sub
icebp
push
stc
sub
fsubr
gs
in
pop
test
jp
fmuls
in
or
push
cmc
icebp
lcall
fadds
xor
sbb
fdivl
and
ret
push
ret
jns
sti
xchg
mov
aaa
mov
lock
lcall
daa
sahf
fcoml
stos
add
push
push
popf
pushf
sub
push
mov
mov
push
lcall
jg
lcall
test
push
test
insb
sbb
rcr
mov
and
jmp
fidivl
divl
dec
ljmp
and
clc
lcall
and
fsubr
cmp
mov
rol
cmc
jbe
pop
pop
cmp
aam
pop
pushl
mov
out
movsb
push
nop
or
aaa
sbb
add
lods
jbe
out
pop
jnp
xchg
mov
fs
fsubs
pop
jae
fadd
add
sub
cli
stc
push
fs
imull
and
int3
pop
inc
in
xor
inc
jae
sbb
adc
in
aaa
movsb
mov
cmp
push
xchg
lcall
pop
test
cwtl
mov
mov
fnsave
loope
add
mov
test
pushf
inc
clc
hlt
aaa
popf
jp
sar
cld
add
das
jle
xchg
loop
iret
pusha
and
dec
fstpt
jge
lahf
xchg
cmp
inc
dec
aad
jp
ret
mov
cwtl
sbb
fisttpll
repz
cmp
jns
out
inc
enter
push
mov
sbb
outsl
test
jle
idivb
lods
xchg
lcall
test
inc
dec
fmul
cmpsb
lcall
mov
xchg
dec
mov
jne
xchg
push
adcl
enter
sbb
mov
pusha
and
out
dec
inc
xor
das
ja
add
xlat
test
out
aaa
sbb
xor
jnp
gs
clc
aaa
stos
add
insl
lcall
mov
rclb
aas
inc
cltd
hlt
cmp
aam
xchg
dec
das
pop
in
xor
add
lcall
ds
xchg
scas
lcall
mov
xor
mov
test
mov
push
inc
fimull
scas
in
sbb
outsl
test
mov
div
movups
mov
pop
cmpsl
repnz
and
repnz
fsubs
aad
pop
lcall
cmp
add
sbb
push
ds
ds
je
cmpsb
jbe
ffreep
lods
jmp
jge
dec
pop
add
adc
loop
xchg
jbe
xor
out
pop
imul
push
test
out
out
mov
push
pop
jle
mov
insl
inc
and
pop
aaa
cmp
cmc
lock
add
inc
imul
pusha
jmp
add
fwait
jl
mov
imul
mov
sbb
int
divl
add
xor
xor
dec
add
stos
inc
dec
sub
cmp
clts
xor
mov
lret
imul
jle
adc
nop
inc
pop
pop
cmp
cmp
cmc
pushf
xchg
mov
int
pop
fs
jb
xchg
hlt
stos
das
mov
mov
ds
jle
test
dec
pop
add
push
push
and
sub
js
stos
jecxz
cmp
sbb
scas
mov
mov
xchg
dec
subl
xchg
lahf
inc
mov
cmp
push
in
dec
cs
inc
mov
cmp
cld
mov
cmp
lcall
lds
inc
arpl
sub
pop
and
bound
pop
arpl
lods
lcall
inc
push
in
ja
aam
cmp
inc
adc
jbe
push
fucom
inc
jle
lret
dec
mov
mov
std
mov
faddl
and
jno
les
xor
scas
mov
xor
aaa
cmp
repnz
mov
xor
or
jae
fidivs
lcall
mov
cmpsb
fcmovnu
cld
ret
mov
push
fbld
push
ds
cmp
mov
fstpl
outsl
test
fiadds
mov
aam
ds
jecxz
fstl
xchg
pushf
ds
dec
loopne
mov
inc
dec
movsl
cmp
mov
outsb
xlat
jge
lods
filds
or
mov
pop
into
fimull
rcll
test
testl
aaa
push
mov
cmp
lcall
adc
or
pop
fstl
or
ja
mov
push
inc
cltd
sarb
pop
filds
lcall
jns
fldl
xor
push
outsb
fwait
lret
pop
stos
aaa
mov
mov
sbbb
fldenv
fidivrl
jecxz
stc
dec
xor
and
popa
inc
cmp
mov
leave
mov
add
cmpsl
or
jg
xor
and
push
dec
and
adc
xlat
mov
int
call
mov
pop
in
fstpl
xchg
or
add
pop
loopne
lret
inc
add
insl
pop
rol
test
fsubrl
mov
add
pop
adc
mov
sbb
push
pop
or
cmpsb
aaa
jle
aam
fs
mov
or
xchg
lea
ljmp
out
int3
pop
leave
lcall
pop
mov
push
popa
add
lcall
mov
mov
dec
push
aaa
shlb
dec
lcall
cmp
cmpsb
outsb
dec
sbb
xor
mov
add
loop
loopne
push
pusha
dec
jns
xchg
aaa
sbb
dec
mov
add
inc
lcall
mov
mov
dec
out
sbb
add
in
mov
rolb
mov
test
or
cld
in
xchg
repnz
inc
jle
pop
icebp
lret
ror
fcoms
inc
sarl
jae
icebp
push
or
pushf
daa
jge
adc
cmc
sahf
ds
loop
popf
pop
stos
xchg
outsl
xor
cmp
gs
mov
lods
stc
aad
cmc
mov
cmp
push
sbb
aaa
testl
lcall
loopne
ret
push
pop
mov
sbb
push
les
and
push
cld
bound
in
test
daa
jmp
jb
fiadds
fwait
outsl
push
push
lea
sbb
pop
adc
and
jecxz
dec
cmp
out
loopne
jb
jge
push
pop
mov
aaa
xchg
sub
xor
pop
ds
sbb
jne
in
mov
dec
mov
xor
xor
ds
lods
push
mov
cmp
jbe
jle
jmp
cmp
lcall
cmp
or
push
pop
mov
sub
mov
and
sbb
inc
pop
inc
mov
stos
and
int3
sub
in
pop
aaa
mov
outsl
push
mov
aam
iret
sarl
jno
cld
inc
push
add
ds
lods
ficompl
mov
and
ljmp
addr16
pop
sti
lods
mov
aaa
sub
pushw
sbb
mov
mov
sub
arpl
lahf
adc
sub
or
inc
push
int3
cmc
scas
lcall
ret
and
imul
popl
mov
mov
fimull
jmp
add
lcall
das
leave
fbstp
or
addr16
sahf
mov
repnz
es
lock
push
jge
call
and
aaa
rcrl
pop
lcall
dec
add
jo
movsb
aas
ja
push
xchg
pushf
pushf
sbb
cs
and
jg
jg
adc
pop
test
inc
push
mov
andl
pop
lods
push
mov
cmp
push
jb
jno
inc
cmpsl
xor
jecxz
pop
pop
pop
lods
mov
xchg
xor
out
dec
mov
and
xchg
xor
test
pop
sbb
push
mov
jge
ds
fucomp
sar
mov
imul
fstps
or
clc
jg
cmp
aaa
mov
lahf
inc
inc
jae
rcrb
sub
jno
sbb
jmp
or
outsl
fldcw
leave
jno
in
aaa
add
push
pop
repnz
dec
rcrb
ficompl
push
hlt
fsubr
addr16
in
jne
fldl
inc
cmp
int3
xor
sbb
in
dec
mov
push
adc
sahf
jmp
hlt
jmp
aas
dec
insl
inc
outsb
arpl
lret
mov
cmp
xorl
inc
mov
xor
xor
ret
lds
packssdw
ja
mov
loopne
fwait
cmp
aaa
push
push
ret
xchg
inc
lcall
shll
in
stc
in
mov
in
xorl
cmp
bnd
xchg
push
in
jo
lcall
in
aaa
out
mov
pop
dec
fwait
mov
inc
js
fwait
repnz
je
lock
inc
fucomp
xchg
push
push
dec
lds
pop
loope
fstps
xorb
xchg
mov
xor
sbb
jecxz
lods
aaa
inc
scas
andb
xchg
jo
scas
lret
test
pop
pop
je
loopne
repnz
ja
imul
inc
lcall
mov
xor
adc
fidivrl
dec
push
push
xchg
mov
push
mov
sub
mov
inc
into
nop
rorb
sub
cwtl
inc
push
stos
xchg
mov
in
lret
stos
inc
lcall
or
sbb
adc
dec
cmp
cmp
mov
or
and
stos
lcall
dec
ja
adcl
loop
ds
mov
inc
imul
pop
cwtl
aaa
imul
lret
xchg
insb
lcall
adc
dec
xchg
daa
pop
loopne
inc
loope
pop
jbe
out
xor
xor
cmp
mov
sahf
and
fstl
push
fs
push
xchg
adc
adc
dec
dec
jp
xor
mov
fisttpll
into
enter
fldl
cmp
mov
pop
loopne
test
aas
aas
or
lds
xor
mov
cmp
fcmovnu
xlat
mov
bound
xchg
lcall
jmp
jne
inc
enter
and
xchg
cmp
bound
adc
arpl
or
fsubrs
mov
push
mov
adc
inc
popf
popf
rorb
jmp
fstpl
jb
sarl
cmp
jecxz
mov
mov
das
xchg
inc
push
pop
push
pop
out
inc
sbb
push
pop
sub
mov
jl
repnz
loop
js
add
jecxz
pop
lahf
push
test
fldl
call
push
jmp
adc
imulb
test
pop
aaa
test
mov
sbb
mov
xchg
pop
sbb
fisttpll
and
add
insl
test
jl
fwait
pop
out
jbe
int
mov
adc
shr
loop
sbb
test
push
out
hlt
mov
inc
je
add
or
jg
push
aas
leave
int3
aaa
adc
mov
cltd
in
lret
ds
lret
js
jg
cmp
jecxz
les
cli
add
pop
mov
ja
jle
loope
aas
cmp
ds
or
xchg
daa
stos
fcoml
call
mov
fistl
dec
mov
aas
shrb
adc
mov
out
faddl
cbtw
dec
mov
int3
sub
icebp
hlt
xor
inc
mov
inc
sahf
aaa
adc
mov
imul
pop
sub
adc
push
mov
push
shll
mov
fnstcw
push
mov
push
xchg
mov
divb
push
mov
popa
jae
lret
xor
out
xor
aaa
fs
std
mov
push
dec
jle
inc
lret
ret
dec
call
ds
js
mov
pop
insb
sahf
test
dec
stos
stc
jecxz
aad
mov
add
shrl
add
subb
fwait
xchg
out
jb
pop
cmpb
cli
cmp
mov
lcall
or
jmp
adc
mov
mov
lcall
daa
pop
fldl
add
and
fnstsw
mov
add
lret
enter
nop
testb
lock
dec
mov
ljmp
clc
fnstcw
cmp
pop
inc
mov
lea
adc
mov
mov
xor
push
add
pusha
dec
movsb
push
int
mov
mov
dec
popa
dec
jl
aas
call
sbb
sbb
ds
mov
mov
push
fcoms
stc
fmull
in
gs
dec
aaa
mov
scas
std
lcall
inc
mov
mov
jo
int
imul
jbe
xor
jle
aaa
fstpl
repz
outsb
mov
frstor
stos
ljmp
xlat
nop
xchg
xlat
shrb
lret
ds
and
rclb
aam
ret
movsl
push
dec
or
xor
test
out
lret
decl
sub
enter
sti
cmp
clc
addb
lahf
sub
in
sbb
cwtl
add
cli
out
dec
jmp
scas
ficomps
pop
mov
add
mov
adc
call
sti
sub
ds
jo
in
mov
and
mov
mov
insl
jae
push
mov
dec
adc
lcall
ljmp
and
outsb
pusha
ds
add
jge
lcall
push
inc
inc
cs
jp
dec
pop
adc
hlt
std
out
pop
call
add
mov
adc
add
mov
dec
aaa
frstor
lock
push
xchg
fbstp
adc
mov
and
inc
mov
jmp
inc
in
dec
mov
dec
aaa
jno
es
movsl
xchg
out
dec
lcall
in
repz
xchg
arpl
push
add
movsl
in
xor
ja
shl
adc
cld
push
xorb
lods
pop
mov
jmp
pusha
pop
cmp
das
inc
jmp
hlt
inc
xor
inc
cwtl
mov
repz
rol
add
ds
popl
mov
sub
cli
jbe
cmp
rcr
mov
loop
pop
adc
nop
jle
pop
rcrl
iret
pop
fstpl
mov
jl
inc
icebp
cmp
jmp
shll
jnp
aas
push
lahf
mov
in
pop
sbb
inc
push
sub
je
rcrb
insl
ds
cld
xor
and
dec
pop
or
inc
xor
sti
mov
or
xchg
push
mov
sarb
fcoml
mov
in
push
int3
int3
cmp
pop
aaa
mov
imulb
test
sti
dec
lret
rcrl
push
jbe
dec
inc
ds
mov
imul
insb
push
pushf
hlt
loop
imull
jg
loope
push
cmp
jecxz
inc
sbb
outsb
mov
fmuls
gs
jp
xchg
scas
ljmp
movsb
xor
fwait
pop
gs
or
inc
in
sub
dec
sbb
pop
lcall
mov
add
push
push
pop
pusha
aaa
push
adcb
fxch
outsl
testl
and
cltd
jge
andb
js
fistpl
fcoml
shl
sbb
scas
push
loopne
mov
outsb
dec
mov
mov
cmpb
std
out
mov
sti
jl
aaa
mov
popf
mov
jo
push
lcall
test
cld
iret
jbe
sbb
pop
mov
loopne
pop
mov
pop
cs
jecxz
jge
stos
fistpll
iret
mov
mov
aaa
dec
hlt
xchg
sub
call
andl
xchg
cmp
xor
mov
cmp
cmpsb
xchg
mov
xorb
or
outsb
cmp
prefetcht2
adc
fisubrl
push
sbb
repz
dec
cmp
daa
or
ds
popa
push
into
dec
push
push
xor
iret
pusha
sar
fbstp
out
mov
mov
arpl
cmp
adc
add
lods
fsubrl
xor
sbb
fstpl
pop
mov
cmp
adc
js
sarb
or
inc
cmp
inc
cmpsb
ds
flds
mov
mov
jb
add
cmp
insb
push
scas
pop
jns
mov
icebp
lods
inc
fists
cmp
push
pop
mov
pop
ds
ss
pop
inc
aaa
inc
xorl
in
sub
arpl
mov
xor
out
pop
in
xchg
jno
dec
jp
repz
stos
xor
pop
add
cld
mov
scas
ljmp
push
push
mov
adc
gs
mov
xchg
bound
loopne
roll
andl
imul
sub
xchg
push
pop
pop
push
dec
mov
push
dec
imul
push
int3
push
dec
ja
mov
popf
rcll
sbb
pop
shlb
cmp
bound
mov
stos
or
pop
fadd
sbb
cmp
add
roll
ljmp
lock
or
mov
adcw
xor
cmpsl
jno
push
xor
push
mov
sub
lds
xlat
in
mov
pop
push
push
mov
repz
adc
mov
stos
jns
outsb
scas
and
outsb
popa
jl
lea
loope
stos
cld
inc
pop
dec
and
mov
nop
add
inc
xor
movsl
dec
dec
rclb
ljmp
mov
push
jno
insl
mov
and
fistpll
test
lcall
call
addr16
lock
jge
fnstcw
in
sbb
test
aaa
es
sbb
shll
mov
pop
loopne
ds
cwtl
mov
jnp
pushf
fdivrs
mov
mov
and
movsb
sbb
mov
pop
cmp
jle
sub
cmp
push
pop
and
jecxz
in
mov
shlb
mov
jne
sub
inc
aad
mov
mov
in
ja
add
stc
mov
divl
xchg
fwait
dec
push
cmp
add
sbb
test
shl
insl
movsb
push
frstor
dec
aas
sbb
mov
insb
clc
int3
xchg
cmp
push
add
cs
mov
arpl
movsl
cmpsb
mov
ja
xor
dec
mov
dec
push
mov
xchg
lods
arpl
jb
ret
out
mov
cmp
sub
fwait
cli
pushf
dec
sbb
push
jg
das
scas
mov
scas
sbb
mov
sbb
fistps
or
sub
dec
cmp
mov
mov
test
add
inc
cmp
inc
add
xorl
inc
pop
jns
cmpsb
sbb
lods
mov
inc
lds
aaa
mov
fs
jle
mov
mov
pop
shll
pop
sbbb
mov
and
adc
xlat
cmc
dec
aas
jo
in
cmp
or
mov
incl
adc
mov
sbb
mov
xor
cmp
or
ds
dec
aaa
int3
push
pop
cmc
in
and
fsubrs
in
sbb
sarl
dec
xchg
ja
loopne
rcrb
and
and
jge
inc
pushf
inc
aad
rol
sahf
leave
xchg
dec
pop
repz
sbb
mov
mov
mov
mov
mov
sahf
push
cmc
fsubl
hlt
repnz
cmp
ds
jmp
sub
ss
test
sbb
aas
mov
fistl
lcall
cmp
mov
mov
aam
fstpl
add
rcll
scas
inc
leave
inc
cmpsb
cwtl
dec
aas
adc
jnp
fisttpll
xor
or
cmc
loopne
cmp
push
test
fstpl
inc
inc
fiadds
jl
add
jb
aaa
cmp
push
sub
aaa
push
aam
aas
cmp
insl
push
xor
mov
push
aas
and
out
mov
fisubl
fnstcw
push
les
lcall
jnp
dec
or
ja
aam
std
sub
ja
vxorps
into
out
adc
jne
or
mov
xchg
popf
fs
mov
inc
pop
cmpsb
sarb
std
loope
scas
mov
jecxz
cmpb
lret
lret
fdivr
jo
cmpsl
pusha
push
je
inc
pop
pop
lods
aad
push
cmp
cmp
sbb
dec
loop
bound
mov
imul
ja
xchg
mov
mov
das
and
xchg
es
mov
or
mov
cwtl
mov
mov
push
push
repnz
rorl
roll
out
push
pop
bound
dec
push
enter
rcrb
fs
mov
fstpl
test
mov
jmp
test
dec
les
jo
jo
out
adc
ret
outsb
fisttps
xchg
ja
mov
mov
push
push
xchg
test
int3
add
mov
cmc
dec
push
loope
test
shrb
lahf
test
fcomi
pmaxsw
int3
sbb
pusha
mov
mov
adc
inc
mov
test
shll
and
xlat
aad
loope
sbb
pop
dec
inc
lret
and
shll
cmp
inc
jp
pushf
cli
es
ret
inc
and
ljmp
rcrb
pop
fnstcw
xor
mov
andps
out
call
in
add
mov
lcall
cwtl
jl
jge
pop
xchg
sbb
repnz
jg
cmp
mov
jno,pn
ficoms
mov
fwait
mov
data16
fwait
sub
in
mov
inc
shll
sbb
add
jne
pop
xchg
call
pop
mov
add
jb
dec
push
icebp
mov
cmp
cmp
cmpsl
gs
cmp
insb
lret
inc
cmp
leave
xchg
imul
sub
and
xchg
ret
push
pop
push
cmp
es
fistpll
ficomps
or
pop
push
cs
lcall
cmp
fldl
mov
dec
cmp
arpl
aad
stos
mov
mov
cmp
movsl
mov
cmp
loopne
cmp
out
hlt
cmp
loope
and
mov
pop
cmpl
call
lret
sub
pop
mov
cmp
sub
inc
add
hlt
inc
loop
pop
gs
inc
sub
mov
icebp
out
xor
out
push
imul
xlat
push
inc
pushf
repnz
mov
fildll
sbb
test
popa
sarb
mov
push
dec
lock
and
lahf
cmp
outsl
dec
xchg
push
fidivs
stc
je
std
repnz
lret
push
mov
stos
jb
or
xchg
inc
fsubrl
out
xlat
push
jp
pusha
pop
pop
fisttpll
xorl
sahf
in
push
int
sbb
mov
push
inc
jb
sbb
cmp
sub
test
lock
mov
pop
fisubs
sti
incb
jle
xchg
out
sarb
lds
push
push
push
daa
inc
icebp
cmp
ds
mov
push
cmp
jo
inc
pop
jbe
outsl
shlb
ja
adc
adc
mov
negb
ss
stc
dec
rclb
xor
sahf
je
jae
jp
ror
and
test
cmp
out
mov
incb
imul
outsb
mov
mov
sarl
mov
sbb
inc
cmp
sub
fildl
adc
sbb
ds
insb
dec
push
pop
out
data16
inc
xchg
inc
test
xlat
hlt
xchg
sbb
insb
popf
jle
sub
pop
dec
fisttps
inc
fwait
out
dec
cmp
loopne
movsl
add
dec
jp
out
add
xchg
xlat
push
fimuls
aaa
jmp
inc
mov
jl
inc
aam
and
pop
fstl
mov
and
lods
sub
cmp
jge
or
stc
sbb
popf
dec
aaa
xchg
and
xchg
cmpsl
push
popf
mov
mov
mov
aaa
cmc
fninit
stos
data16
push
lcall
or
mov
not
dec
push
ds
adc
xor
adc
adc
or
add
sbb
mov
scas
loop
test
popf
mov
cmp
inc
out
cmpb
inc
add
cld
fidivs
and
xor
rcll
lcall
test
addl
dec
lcall
aas
fcomi
stc
mov
outsb
mov
into
test
inc
inc
sub
xor
xorb
out
mov
pop
jle
cmpsb
xchg
mov
sbb
data16
xadd
cltd
repz
jecxz
cld
aad
or
sti
add
in
cwtl
sarb
inc
fstpt
in
outsl
xorb
and
les
pop
out
in
rcrl
cli
lret
cmp
xchg
inc
ja
dec
repnz
adcb
lret
xchg
ja
mov
push
adc
push
call
xchg
mov
cmp
ja
fcoml
mov
cmp
mov
aas
test
mov
jge
inc
sbb
mov
ljmp
mov
push
repnz
inc
cli
inc
aas
push
test
icebp
fs
rorl
insb
mov
mov
xorb
out
pop
pushf
xor
mov
pop
dec
out
aaa
pop
add
lods
aas
sti
jge
and
aaa
ret
rcr
sbbb
loop
out
mov
lret
inc
cmp
notl
inc
xchg
movsb
inc
pop
punpcklbw
inc
sub
test
hlt
out
lret
in
fucomp
repz
mov
push
in
pusha
aaa
pop
or
mov
push
push
insl
xchg
xchg
or
inc
iret
gs
pushf
into
push
fcompl
mov
xchg
stc
sub
shrb
push
and
push
stc
sbb
sahf
pop
out
jbe
sbb
sub
inc
jae
push
les
inc
daa
insb
out
mov
pop
xor
sub
cltd
push
nop
fnstsw
mov
cmp
into
test
outsl
imul
cli
xchg
sbb
push
pavgw
aaa
test
push
lahf
mov
dec
repnz
aas
pop
dec
aaa
lods
pop
lret
and
lcall
lahf
ret
aas
stos
out
mov
mov
dec
arpl
popf
outsb
mov
test
inc
std
mov
mov
aas
lcall
sub
sub
mov
ds
push
sbb
gs
jne
in
mov
push
imul
sub
mov
dec
lock
sahf
aaa
mov
xor
inc
mov
inc
out
cs
dec
sub
cld
mov
cwtl
lds
mov
jnp
jle
push
jg
je
cmp
cwtl
rcpps
fmul
ficoms
cvtps2pd
add
inc
into
lods
andl
dec
dec
and
cmpsl
ds
int3
nop
fcompl
and
cmp
or
add
sub
mov
push
xchg
pop
sub
jl
inc
lcall
mov
sahf
fisttps
xlat
sbb
rorl
mov
cmp
mov
fisttpll
push
dec
lcall
jp
loopne
adc
rcrl
mov
jg
cmp
or
cmp
std
or
cmp
sbb
dec
std
ffreep
cli
xchg
fimull
sbb
mov
fldl
fsubl
push
cmp
xchg
lcall
dec
scas
fmull
mov
cltd
sbb
jno
xchg
and
out
cmovle
lcall
add
fnsave
loop
inc
jb
aad
je
mov
jno
arpl
pop
or
fstp
xlat
jo
push
push
ds
jg,pt
std
or
mov
xor
cmp
mov
xchg
push
jb
pop
test
loopne
clc
sahf
out
out
test
xlat
dec
dec
mov
insb
je
sbb
movsb
pop
inc
sbbl
add
leave
add
pop
lods
push
addr16
ljmp
out
ret
popa
xor
push
push
jmp
push
ret
pop
pop
int
inc
lcall
mov
or
int
mov
xor
mov
cmp
push
mov
js
mov
xchg
jge
sub
mov
fwait
and
pop
push
or
aaa
xchg
inc
push
mov
scas
and
loop
mov
cmp
insb
and
aam
mov
inc
xchg
xor
inc
mov
and
mov
adc
hlt
mov
jecxz
or
mov
outsl
inc
add
and
scas
pop
and
add
push
pop
mov
sub
rcrb
aaa
push
and
addr16
lcall
cmp
out
sti
jle
lcall
lods
lea
ret
sub
js
push
push
adc
ds
out
outsb
outsb
insl
pop
xor
cmp
popf
cld
push
enter
and
jno
pop
out
sub
out
divb
dec
dec
cmp
sbb
pusha
mov
push
aaa
in
xor
pop
pop
mov
lcall
jp
fdivrl
mov
inc
dec
mov
incb
lret
sbb
fnsave
fucomip
dec
out
xor
sahf
adc
je
cmp
inc
xchg
xlat
xchg
sub
add
inc
loopw
push
js
pop
gs
test
dec
pop
mov
dec
aam
fisttps
or
data16
mov
lcall
push
fmul
xor
pop
cld
mov
cmp
push
addb
out
jl
cld
test
jp
sub
movsb
mov
imul
add
sti
xchg
lods
mov
mov
xchg
jns
aaa
sti
push
cld
testb
or
sub
jle
mul
pop
shrl
adc
push
or
pop
mov
jmp
mov
fwait
pop
push
mov
add
clc
psrld
jecxz
cltd
mov
inc
repz
or
aaa
imul
or
inc
mov
add
cmpsl
xchg
xchg
mov
jg
lods
inc
popf
pop
xchg
sbb
mov
outsl
insl
pop
ds
adc
pop
sbb
jp
cmpl
popa
insl
pushf
ret
shlb
xor
stc
jbe
jge
or
loop
jb
xor
cli
sbb
mov
lcall
imul
pop
shlb
bound
xorb
test
sbb
shlb
mov
fimuls
movsb
push
arpl
or
add
loop
mov
pop
or
lcall
sub
popf
mov
cwtl
pop
sahf
mov
pop
push
dec
rcrl
inc
cmp
cmp
mov
sti
pushf
popf
cmpsl
sahf
inc
scas
shlb
js
jle
daa
arpl
inc
push
pop
or
mov
insb
std
cmp
push
frstor
icebp
add
inc
mov
sub
mov
mov
pop
lcall
mov
arpl
lods
stc
pop
int
sub
pop
pop
or
xor
ljmp
adc
test
jmp
out
negl
pop
inc
cli
scas
pusha
rorb
cmpsl
pop
movsb
mov
lds
sbb
push
arpl
sarl
mov
out
mov
mov
sbb
ja
das
rcl
jb
lea
loope
pop
fwait
aaa
movsb
dec
xor
out
iret
in
mov
out
lcall
mov
lahf
ds
in
sub
add
lock
mov
aas
xorb
xchg
into
adc
xchg
jns
and
mov
test
sub
push
pop
aaa
sar
cmpsb
jle
scas
mov
stos
push
data16
mov
jb
clc
test
lret
das
inc
jl
aaa
sahf
inc
inc
xor
jno
push
lds
sub
cwtl
rclb
ds
mov
movsb
fstl
dec
mov
fwait
cld
aad
enter
mov
cmp
adc
fadds
stos
ss
movsl
std
insl
dec
sub
push
inc
ja
mov
adc
and
sbb
incb
stc
iret
aaa
fidivs
xchg
and
stos
js
fcomp
dec
jnp
adc
pop
lock
mov
std
stc
outsl
scas
cmpl
out
shl
call
imul
rcrl
adc
inc
xor
fcompl
scas
pop
xchg
imul
fs
jb
call
cmp
inc
push
lea
push
bound
fmulp
mov
outsb
in
test
add
push
pop
mov
loopne
pushf
mov
xchg
imul
jbe
xchg
mov
jge
lahf
or
pop
lcall
cmc
adc
mov
call
out
test
jmp
cwtl
jnp
cli
out
cs
jl
fsubl
loop
jle
jnp
or
test
pushf
push
mov
ds
dec
push
pop
dec
sti
dec
insl
int3
push
jp
adc
pushf
fwait
xchg
inc
pop
adc
arpl
clc
inc
mov
inc
mov
pop
jae
mov
fsubl
aam
fists
jae
or
and
mov
dec
iret
into
aaa
aaa
aad
xchg
adc
pop
fwait
in
xchg
add
xchg
cmp
push
lods
jb
jp
lcall
adc
out
sub
or
sarl
adc
aam
scas
xchg
sbb
push
dec
inc
aaa
fnstsw
pusha
clc
lods
test
lcall
aaa
cltd
mov
dec
xor
cmpl
fisttps
pusha
mov
and
jle
sub
fistpl
pop
shlb
cmp
pop
mov
add
sbb
fnstsw
sbb
and
mov
sub
sbb
icebp
cmp
insb
xor
push
scas
out
jno
inc
mov
vsqrtss
push
pop
leave
xchg
pop
cmp
inc
insl
stos
and
outsl
clc
aam
jle
inc
fnsave
add
pop
cmp
mov
push
test
data16
into
cmp
fbld
dec
fists
aad
lock
mov
ret
push
adc
jmp
test
mov
das
inc
test
jae
in
jns
fwait
mov
adc
aad
dec
sbb
and
cmp
test
adc
insl
insl
sbb
xchg
inc
aaa
lock
inc
jns
jb
das
pop
fnstcw
inc
shlb
jne
xor
dec
scas
lcall
std
out
enter
movsb
shrb
pop
outsl
inc
fwait
sti
ret
or
mov
in
cmpl
addr16
insb
xchg
mov
ds
jle
jmp
mov
xor
xor
mov
add
xchg
call
ret
test
pop
dec
enter
cmp
pop
scas
cmpsl
sbb
mov
mov
outsb
mov
mov
loop
into
pusha
and
fisubs
in
ja,pt
inc
out
mov
add
out
es
repnz
fsub
jnp
cmp
lahf
pusha
add
mov
pop
sti
and
leave
pop
push
sub
cmp
scas
add
enter
pop
and
ss
test
std
push
mov
aam
add
orb
xchg
jge
jns,pt
int3
lea
and
fcmovnb
sti
nop
aas
outsb
mov
jb
mov
popf
insb
fcomps
hlt
jno
sbb
jbe
push
mov
addb
fcomip
cli
dec
jmp
xor
and
dec
push
dec
imul
test
inc
xor
cmc
cmp
jae
lcall
cld
loop
loopne
adc
insb
or
xchg
lcall
sarb
push
mov
je
mov
xor
adc
push
enter
adc
sahf
cmpsl
shl
mov
fsubrl
loop
fisttpll
sub
push
popa
and
adc
shlb
loop
js
cmpsb
outsb
int3
xchg
imul
push
pop
mov
jecxz
mov
das
or
les
roll
jbe
push
mov
xor
incl
sbb
sbb
sub
lcall
aaa
call
jae
inc
lcall
cmp
xor
mov
lcall
adc
push
push
mov
fs
mov
sahf
mov
daa
scas
mov
scas
repz
cmp
fsubrl
pop
pop
push
xor
and
xchg
pop
in
cmpb
and
lret
inc
xorl
dec
sbb
lahf
movb
ja
popf
in
test
sbb
sub
loop
ja
jp
pop
xchg
outsl
jb
cmp
lcall
and
mov
or
gs
push
adc
dec
insb
stos
mov
mov
test
shrl
adc
xor
mov
push
sbb
push
push
daa
and
outsl
iret
sbb
adc
mov
xchg
ret
lcall
pop
cmp
jne
lods
adc
xchg
cmp
fnstenv
sbb
aad
jae
jle
jl
fildll
cmp
clc
mov
cmc
dec
inc
out
xor
add
fsubr
pop
clc
test
into
aas
dec
in
mov
rcrl
adc
ds
gs
push
cltd
and
das
push
fwait
test
out
movsb
cmp
mov
or
lcall
push
lcall
jbe
fdivrl
sti
ds
das
xchg
ds
in
sub
mov
inc
pop
push
mov
stc
sbb
std
mov
xor
mov
jge
sub
sbb
mov
aam
mov
mov
fwait
jge
mov
insb
inc
mov
push
in
xchg
push
pop
lahf
mov
push
dec
mov
jnp
push
gs
fisttpll
or
test
dec
mov
inc
fidivs
loop
mov
testb
fwait
jp
mov
fstl
dec
mov
mov
inc
mov
sbb
sbbb
cld
jecxz
mov
in
add
loop
gs
insb
cld
or
pop
sub
lahf
loop
xor
std
mov
out
ja,pt
aad
arpl
xlat
xor
mov
dec
push
cmp
sub
mov
mov
and
js
jle
cmp
add
cmp
in
lods
aaa
outsb
push
add
aad
lahf
mov
loopne
mov
arpl
sbb
cli
into
mov
pop
jmp
mov
ds
jl
lret
dec
mov
adc
xor
mov
mov
xchg
dec
and
fmuls
or
fwait
ljmp
aad
jmp
clc
add
js
pop
ss
push
xor
dec
cs
push
pmaxsw
cltd
pop
mov
fisttpll
int3
jge
les
leave
js
test
loop
pusha
fs
loopne
pushf
push
sarb
xchg
cmp
cmp
inc
pop
fisttps
cmp
jl
cli
sbb
lcall
mov
pop
ds
push
imul
push
pushl
add
shlb
jg
arpl
ds
popa
adcb
pop
cmc
jp
test
addr16
pop
sbb
xor
jmp
shrl
add
sbb
jmp
jne
inc
test
rcrl
mov
lret
pop
pop
pusha
aaa
cmp
lea
rcrl
cmp
dec
loopne
insb
sub
mov
push
push
push
mov
adc
jmp
sahf
xor
mov
jp
cmc
jae
sahf
mov
fdiv
xchg
out
inc
movsl
sub
and
enter
lods
inc
aas
pop
sbb
dec
mov
cmp
frstor
jne
pop
mov
jecxz
pop
enter
popf
xchg
shld
dec
cmpsb
mov
mov
push
add
cmp
xchg
pop
and
mov
xchg
sbb
testb
mov
fmull
popf
fdivrp
movsb
and
clc
lahf
sub
pextrw
inc
addr16
adc
aas
je
cmp
clc
mov
aas
sub
test
in
pop
popa
pop
outsb
mov
inc
dec
outsb
push
xchg
aaa
icebp
xor
cwtl
adc
aas
testb
cmp
inc
mov
jae
dec
xchg
pop
xchg
stos
neg
dec
dec
add
lret
movsb
mov
push
test
cmp
out
cmp
hlt
ss
popf
mov
stos
cmp
sub
insb
aaa
icebp
in
mov
xchg
enter
pop
in
dec
ficoml
es
mov
mov
popf
sti
je
push
lcall
cli
sub
movl
jb
ret
and
add
pop
xchg
sbb
sbb
hlt
dec
ret
cmp
inc
jnp
out
popa
ljmp
std
imul
dec
or
shlb
test
push
mov
sti
or
aad
pop
aaa
add
fst
out
ds
fs
test
sahf
testl
xlat
cmp
fsub
inc
lods
fcomi
inc
and
clc
cltd
sarb
scas
sub
mov
or
lcall
cmp
xor
jmp
ret
cmp
sbb
addr16
or
bound
pop
aaa
xchg
xchg
adc
dec
mov
lret
jp
pop
cmp
xor
cmc
lcall
scas
fsubl
dec
mov
xor
aas
sbb
daa
adc
push
dec
mov
nop
jle
scas
fwait
pop
mov
jl
fnsave
xor
cs
fs
dec
out
in
cwtl
or
xchg
repz
addr16
in
push
gs
test
js
jbe
bound
push
mov
dec
cmp
fcoml
inc
fstpl
out
pop
sbb
incb
loopne
rcrl
adc
push
setle
pop
cmp
xchg
in
lds
in
xchg
popf
jo
and
mov
sbb
inc
test
add
dec
cmpsl
loop
int
mov
ljmp
insl
mov
inc
loopne
lds
ljmp
xor
js
sbb
push
pop
add
inc
rolb
dec
push
imul
push
push
mov
push
js
out
es
or
stc
mov
pop
cmp
mov
faddl
outsl
test
enter
in
jne
lods
aaa
test
in
out
push
jp
popf
faddl
nop
out
lea
pavgb
out
cltd
inc
fwait
dec
cmpb
jo
push
adc
pop
sub
xor
lcall
pop
scas
fsubrl
inc
cld
cmp
lcall
cmp
pushl
mov
movsl
imul
js
pop
add
and
faddl
fcoms
push
ja
inc
jle
xchg
ret
sbb
sbb
mov
pop
loopne
cmp
daa
dec
and
jl
arpl
sub
sbb
pop
decl
mov
push
xor
adc
sub
pop
scas
aaa
ret
out
cmpsl
or
vdivpd
pop
loopne
inc
sub
sbb
cmp
push
movsb
ret
mov
sub
inc
cmc
jmp
lcall
in
dec
cmp
mov
xor
repz
hlt
push
mov
or
cmc
cmp
testb
repz
enter
testl
inc
leave
fisubrs
loopne
or
pop
test
stos
mov
pop
es
stc
xlat
or
xchg
aaa
jb
das
inc
mov
in
in
imul
das
stc
sub
aaa
dec
mov
pop
lods
mov
inc
inc
cmp
mov
mov
fcoms
fdivl
mov
out
inc
pop
lcall
inc
jnp
pop
mov
faddl
inc
jnp
mov
push
dec
pop
es
mov
mov
dec
sub
insb
cmp
lret
das
je
xor
idivl
stos
jns
fbld
push
clc
lods
sbb
pusha
mov
incl
mov
cmp
loope
cmp
jae
lret
xlat
aam
xchg
iret
lcall
scas
mov
push
sahf
inc
sbb
in
lea
or
push
mov
fs
inc
icebp
cmpl
sub
push
or
jae
cs
mov
sub
movsl
push
in
or
out
jns
jmp
mov
fldl
lods
mov
dec
aaa
filds
fimuls
fadds
push
cmp
pushf
rcl
fisttpll
clc
movsl
mov
dec
push
sub
lcall
or
pop
xchg
and
pop
divl
mov
addr16
fs
xchg
ss
pop
lods
sub
pop
sbb
ss
dec
hlt
cmpsl
cmp
loopne
mov
ljmp
es
dec
add
cli
testl
lods
mov
cli
jns
jecxz
sbbb
sbb
jecxz
rcll
test
into
pusha
xchg
pop
dec
mov
repnz
xchg
push
ret
push
lcall
imul
mov
push
test
dec
stc
popa
and
fwait
cmp
les
cwtl
movsl
pop
int
cmp
dec
out
decl
in
cld
gs
cs
push
int3
enter
fsubrl
arpl
dec
mov
imul
xchg
ja
or
fucom
mov
enter
add
jg
add
jge
or
aaa
stos
dec
movsb
mov
cmp
call
inc
movsb
dec
ds
sub
inc
mov
dec
ss
sbb
sbb
fdivl
popa
mov
inc
decl
ljmp
jae
aas
xor
std
in
lcall
scas
mov
ljmp
movsl
stc
jl
pop
cmpsb
in
and
mov
call
fstpt
test
xor
flds
aaa
cmp
jl
stos
adc
lahf
std
sbb
mov
daa
or
inc
push
and
sahf
jg
out
sar
mov
push
mov
cmpl
cmp
sahf
lock
cmp
popf
ss
mov
popa
pop
pop
add
inc
cmp
int3
pop
test
test
lcall
mov
dec
rcrl
testl
sub
int
dec
adc
aam
rcr
lea
outsb
dec
sbbl
xor
xor
fstl
mov
dec
and
dec
ror
mov
cmp
sub
mov
negb
sbb
mov
sbb
cld
aad
jno
iret
pop
pop
add
test
lret
or
fistpll
insb
aas
push
mov
xor
sbbb
lret
daa
mov
inc
cmp
mov
std
add
add
sbb
xchg
mov
insl
or
dec
insl
dec
outsl
mov
lcall
aaa
and
sbb
fwait
lahf
mov
mov
add
gs
insl
inc
dec
or
test
sub
faddl
xor
ja
mov
push
and
shlb
imul
dec
jp
and
in
sub
push
xor
out
dec
test
cmpl
push
lcall
popa
cs
pop
pop
push
stos
mov
lcall
je
in
or
inc
adc
inc
out
popf
out
inc
xlat
fwait
mov
testb
repnz
jno
ss
hlt
enter
push
adc
mov
dec
inc
and
jo
xor
or
fwait
push
clc
jmp
test
negl
loopne
ret
orl
mov
pop
imul
push
ljmp
mov
dec
add
js
and
cwtl
mov
stos
cmpsl
hlt
cmp
pop
mov
mov
cmp
cs
pushf
aaa
popa
cmpsl
jg
test
mov
xlat
cmp
pop
popf
push
cmp
lods
insl
jg
lahf
jecxz
adc
mov
cmp
dec
ss
push
push
mov
lcall
xchg
shlb
gs
adc
push
push
jmp
aaa
mov
sub
jne
into
leave
imull
popa
jnp
push
repz
test
pop
aaa
shll
movsl
pop
in
mov
jb
out
ss
movl
pop
lock
mov
insl
push
mov
imul
aas
xchg
stos
loop
sbb
dec
dec
or
mulb
push
adc
addr16
jl
dec
fnstcw
sahf
bound
lods
jp
add
and
sub
in
pop
out
sub
cmpb
movsl
push
and
jp
test
pop
cmc
in
mov
fnstsw
inc
push
mov
ds
ficompl
test
shlb
mov
jnp
pop
lcall
xor
icebp
imul
xchg
outsl
jb
cmp
jp
rcll
pop
cli
mov
scas
mov
jmp
repz
mov
xorb
lcall
bnd
int3
mov
std
dec
cmp
insb
add
sub
xchg
in
fsubrl
clc
jge
and
push
out
mov
add
mov
xorl
sahf
jo
inc
loope
xor
cmpsl
xchg
and
fdivrl
bound
lds
xor
dec
push
and
cltd
lret
or
aaa
inc
sub
fwait
mov
leave
aas
pop
insb
les
fsts
push
daa
push
jp
inc
aaa
cltd
mov
cwtl
push
cli
dec
cltd
adc
clc
idivb
jo
in
pushf
ret
pop
jne
cli
ds
sbb
jp
pop
or
in
ljmp
rorb
inc
or
pop
sbb
pop
rolb
inc
jle
pop
aam
adc
cmp
clc
inc
push
sbb
pop
jle
mov
mov
sub
neg
jb
cmp
jecxz
fstpl
mov
int
pop
pop
pop
mov
push
inc
cmp
pop
adc
insb
push
xchg
call
mov
cmpsl
xchg
sub
dec
lcall
jo
fstpl
test
iret
mov
mov
rcll
nop
inc
cmpsl
testl
jne
adc
mov
pop
ficomps
adc
add
jecxz
jnp
dec
jmp
jo
out
cmp
mov
cmp
lret
lcall
stc
fisttps
sbb
dec
sbb
cmp
mov
fidivl
pop
fyl2xp1
inc
xor
mov
push
idivl
ret
mov
and
dec
arpl
push
jg
repnz
jl
fwait
sub
addr16
xchg
inc
out
bound
mov
ljmp
loope
push
jg
push
lods
dec
adc
les
fsubrl
pop
roll
add
push
cmp
push
and
loope
inc
addr16
gs
xchg
inc
test
fistps
sub
faddl
scas
cmpsb
lahf
xor
fwait
adc
out
iret
sbb
xchg
push
orb
fsubp
cli
sti
dec
repz
popf
cltd
loop
mov
decl
inc
inc
adc
inc
fbstp
jp
push
jne
ljmp
mov
movsl
cmp
mov
daa
stc
out
fisubs
pop
ficompl
ret
ds
or
fnstenv
test
sbb
cmpsl
xchg
inc
repnz
jge
fldl
mov
sub
adc
aam
push
and
cmp
pushf
pushf
or
fidivrs
inc
mov
xchg
push
test
mov
psubusb
mov
loopne
inc
or
pop
aad
in
pushf
dec
in
fmull
sbb
imul
push
cltd
push
pop
aaa
or
sbb
lcall
pop
clc
fdivrl
xor
mov
sarl
mov
sbb
cmp
inc
xchg
inc
mov
out
clc
push
push
lcall
stos
nop
call
ds
jo
push
movsb
test
and
iret
fmul
mov
movsl
xlat
aam
jmp
movsl
lods
lcall
mov
cmp
sbb
std
fwait
push
jl
sbb
push
push
sahf
xlat
and
pop
adc
cli
std
pop
subb
nop
mov
mov
notb
or
fcompl
and
or
sbb
cmp
push
mov
in
fistpl
std
jo
push
arpl
fsubs
jecxz
xchg
ljmp
pop
mov
sub
mov
clc
sbb
or
rcrl
jae
mov
or
jl
clc
mov
dec
or
mov
pop
subb
test
fsubrl
inc
lock
ret
js
or
lcall
push
and
mov
xchg
jge
mov
sub
jae
stc
xchg
and
inc
pop
stc
call
mov
call
or
lea
lcall
aaa
ljmp
out
call
sbb
push
js
test
daa
lods
cmpsb
lds
mov
fistpll
xor
sahf
addr16
xchg
adc
jno
rcrb
inc
fnsave
out
leave
xchg
pop
sbb
jbe
out
gs
and
fsubrl
mov
jmp
adc
loop
inc
aaa
push
aas
ja
pop
lods
das
mov
jno
cmpsl
or
push
mov
pop
xor
fcoml
push
outsl
jae
je
dec
lret
popf
test
push
fistps
or
mov
daa
inc
aaa
jno
sub
jnp
lcall
mov
in
insb
push
xor
fcomps
hlt
arpl
xchg
jb
inc
mov
pop
ds
jbe
inc
xchg
out
cmp
insb
movsl
xchg
sbb
adc
push
outsb
push
mov
data16
mov
add
push
lcall
mov
jae
pop
aaa
movsb
mov
xor
sub
loopne
rolb
in
int3
bound
test
sbb
jge
pop
adc
pop
push
lcall
ljmp
mov
inc
call
rcll
stos
in
lods
aaa
push
inc
cmp
pxor
int3
loopne
cmpsb
dec
cltd
iret
in
rcrl
stos
rorb
lcall
pop
sahf
fmull
pop
cld
clc
stc
pusha
ds
ffreep
lret
sub
push
out
arpl
mov
inc
mov
cmp
popl
movsl
gs
sti
jne
cmp
dec
push
push
addl
mov
push
cmc
ja
jecxz
xchg
mov
lret
push
jns
loope
mov
pop
fs
movb
ss
dec
sub
sub
fcoml
inc
dec
pop
adcl
inc
cmp
push
push
sbb
and
or
fstl
and
dec
scas
pop
inc
add
aaa
bound
pop
sbb
ds
aaa
mov
std
add
js
fiadds
mov
pop
add
mov
push
insb
cmp
mov
aaa
fdivs
mov
push
sbb
adc
ds
aas
sub
popf
inc
out
fs
stos
add
xchg
mov
sub
push
dec
sti
sti
sub
sub
mov
aas
data16
adc
mov
pop
cmp
es
cmova
out
popf
sbb
fistl
mov
lar
inc
loopne
xlat
in
xchg
mov
mov
xchg
pop
pop
loope
dec
jb
dec
idivl
gs
icebp
movsl
mov
sbbl
jl
cwtl
call
addr16
sub
push
ljmp
inc
lcall
fnstsw
fucom
popa
xchg
mov
cltd
lcall
cwtl
add
ljmp
insb
pop
inc
lods
add
push
xlat
negl
push
shr
mov
and
cld
dec
cltd
lds
les
call
sti
mov
cld
stos
or
mov
or
adc
or
movsb
xlat
lcall
int3
lret
mov
pop
out
mov
fstp
inc
sahf
or
aaa
dec
xchg
xorl
or
stos
jno
push
xor
add
pop
enter
idiv
push
in
jge
lods
mov
jb
pop
dec
xchg
cmp
mov
xchg
outsb
dec
xchg
mov
loope
lcall
idiv
cld
jl
add
addr16
mov
fldl
mov
or
repz
out
adc
fldt
js
shr
sarb
call
adc
cmpsb
inc
inc
fistl
push
rclb
ja
inc
dec
sub
in
lcall
clc
lock
mov
inc
inc
mov
push
inc
pop
outsb
dec
dec
fwait
sbb
std
push
mov
enter
out
enter
mov
adc
mov
fidivrs
ret
dec
mov
shlb
cmp
leave
sub
pusha
mov
mov
pop
ds
add
lock
push
pop
mov
cmp
sarl
pop
dec
xchg
xor
fcoms
add
sti
mov
cmpsb
sub
xchg
push
push
inc
ljmp
dec
sahf
push
xor
cltd
jbe
mov
mov
inc
das
lahf
dec
inc
ds
mov
cwtl
cmp
mov
add
push
pop
inc
fwait
aaa
mov
popa
push
mov
mov
shlb
cmp
mov
popa
out
cmpsb
lcall
mov
push
adc
pop
jne
and
shlb
inc
aaa
add
mov
flds
fiadds
sbb
fstp
jge
cwtl
and
mov
clc
sbb
aaa
sub
xor
aam
repnz
push
rcrb
pushf
repz
imul
xor
push
loopne
push
push
mov
call
push
aaa
pop
sub
lock
lcall
mov
or
jp
outsl
push
ljmp
sbb
nop
aaa
stc
aad
sbb
pop
clc
sbb
sarb
movsb
lods
xchg
lods
sub
std
jmp
or
das
ds
iret
lods
pop
sarb
mov
fiadds
out
mov
cmp
std
pop
imul
insl
xchg
mov
aas
pop
mov
jae
mov
jg
sub
mov
orl
pop
cmp
ds
sti
push
adc
push
mov
jbe
lcall
shll
mov
jbe
xchg
pop
jg
adc
push
imul
das
sub
into
sbb
dec
xor
dec
aaa
mov
dec
cmpsb
movsl
scas
ds
pmuludq
push
adc
sti
gs
cmp
je
mov
mov
pminsw
xchg
jge
aas
out
repnz
fcompl
mov
mov
loope
mov
pop
rol
xchg
xchg
aas
cwtl
adc
popa
jae
xor
into
out
pop
and
push
and
lods
aas
insb
push
sbb
jb
in
fwait
or
dec
cltd
push
nop
sbb
sub
mov
lcall
loop
cmp
frstor
in
mov
add
pop
imul
sub
cmp
push
sbb
cmp
bound
mov
jp
and
pop
dec
inc
sub
jnp
inc
popf
mov
pop
cmpb
in
lock
ljmp
fstpt
test
clc
pop
movsb
pushf
sti
pop
mov
mov
pop
jnp
ss
out
in
int
inc
adc
xchg
pop
rorb
push
push
aad
js
adc
cmp
push
pop
push
mov
testw
sbb
fidivl
ljmp
aaa
or
xchg
pop
inc
ss
sbb
das
jmp
mov
aas
lcall
sbbb
pop
shrl
push
lcall
dec
aas
dec
inc
aaa
rdpmc
cmpb
gs
xchg
jbe
nop
fucom
mov
fsubr
mov
lods
jae
loop
mov
jo
bound
aas
mov
mov
mov
int3
jg
lcall
push
push
mov
pop
fstps
jmp
xorl
sbb
fdivl
dec
or
lret
inc
rcll
cmp
dec
push
push
inc
inc
je
mov
or
repz
call
mov
pop
icebp
xor
outsb
popf
fwait
lods
loopne
cmp
pop
cmp
stc
aaa
cmpsb
cmc
mov
ret
mov
xchg
jo
inc
ss
in
sub
ds
cmp
fbld
repz
dec
push
sbb
cs
pop
adc
push
into
mov
dec
cmp
mov
jbe
ret
xchg
cmpsb
xchg
mov
and
mov
fwait
mov
in
jp
std
xchg
aas
mov
fucom
pop
aad
mov
add
push
sub
popf
xchg
jge
rorb
bound
mov
mov
mov
pop
movsl
xchg
sarl
ss
mov
or
stos
fistpll
lds
decb
sub
adc
inc
push
int3
repz
jmp
nop
stc
mov
dec
adc
sbb
adc
mov
cmp
xchg
popa
push
sub
lea
sbb
outsb
fwait
pop
push
lea
xor
mov
dec
or
clc
mov
inc
cs
out
cmp
movsl
inc
sbb
insb
sbb
and
cli
inc
pop
out
out
sbb
mov
ljmp
sub
mov
xchg
xor
cmp
pop
movsb
ja
adc
imul
fldt
test
into
orl
mov
rorl
sti
adc
xor
xor
jae
gs
pop
iret
inc
inc
mov
pop
xchg
cmp
in
jne
std
lcall
ds
imul
cmp
fmul
inc
mov
ret
xchg
int
push
mov
inc
cld
aad
movsb
cmp
jp
aaa
jns
push
aas
sbb
cmp
in
and
les
inc
andb
in
scas
rcrl
loopne
push
ja
mov
sub
mov
bound
inc
cmp
xchg
push
lret
faddl
stos
push
cmpsb
or
fcomps
nop
outsl
mov
je
gs
in
in
jns
imull
test
fs
pusha
in
lods
movsb
fnstcw
lods
mov
cwtl
fsubrl
push
add
stos
inc
sbb
cmp
sub
aaa
jbe
xor
mov
popa
push
sahf
fadds
enter
inc
cli
faddl
xor
mov
xchg
cmpsl
inc
cwtl
mov
jle
jnp
sbb
inc
xorb
push
xlat
or
pop
mov
sbb
cmp
cmpl
push
es
fcompl
mov
pushf
and
arpl
mov
push
pop
popf
push
js
fstl
ret
cmp
push
xchg
popf
fsubl
std
enter
dec
subb
mov
mov
aas
sub
pop
xchg
stos
dec
js
in
aaa
out
out
aad
arpl
test
adc
aad
mov
sbb
loopne
in
addr16
lods
xlat
ljmp
adc
xchg
ficompl
jg
push
ds
jl
std
sbb
jp
lods
mov
lock
inc
dec
mov
imul
test
and
inc
add
sbb
lods
leave
sbb
int
cmpsl
inc
mov
lret
inc
pop
mov
pop
pop
imul
jp,pt
repnz
test
pop
cmp
ror
xchg
mov
int
xchg
sbb
or
fwait
pop
aad
sar
ffree
sbb
and
mov
outsl
and
sub
push
jmp
imul
push
pop
jno
jge,pt
cmp
adc
ror
xor
stc
or
mov
jl
mov
add
stos
fldt
push
mov
lock
jecxz
rcrl
add
out
dec
mov
sub
inc
push
fisttpll
loopne
shll
and
lea
pop
cmpsl
es
push
popf
or
je
test
call
mov
cmp
outsl
loopne
cmp
pop
add
xor
mov
test
outsb
das
cmc
aas
dec
pushf
inc
insl
mov
jb
sbb
lods
inc
in
cmp
mov
ds
jae
into
sub
jne
lcall
mov
movsl
adc
pop
lods
nop
fnstenv
add
aam
and
out
cmp
xchg
das
pop
pop
push
negl
or
ret
and
mov
lcall
enter
out
out
xlat
lahf
cmpsl
xor
negb
sub
inc
adc
fidivs
in
outsb
fucom
sub
add
ds
sbb
push
out
scas
or
lret
or
mov
mov
js
xchg
insb
imulb
ret
fstl
jge
sub
jnp
cmp
ds
sbb
mov
scas
fmul
sub
mov
lahf
into
and
pop
push
and
mov
imul
shl
push
mov
xor
int
ds
pop
lods
add
xchg
add
and
aaa
out
clc
neg
pushf
sub
lcall
loope
rclb
aaa
xchg
xchg
dec
fdivr
ss
fsts
mov
icebp
addb
xchg
out
aaa
push
ja
pop
cmp
cmp
lahf
mov
mov
push
out
pop
hlt
ja
lret
stos
mov
inc
xor
out
aaa
mov
fistpll
mov
sub
push
lock
fsub
jno
icebp
aam
jns
ds
mov
nop
loope
insl
out
inc
cmp
dec
pop
push
cmp
pop
flds
out
and
loopne
jnp
dec
lock
fidivrs
pop
lock
insb
lahf
sti
cwtl
loop
adc
loopne
andl
lods
or
fdivl
mov
jl
popa
test
loopne
cltd
in
xor
sub
cmpb
popf
addr16
add
test
enter
out
bnd
in
inc
pusha
pop
sahf
stc
cmp
imul
adc
insb
in
cmp
mov
fwait
out
mov
jg
mov
cmp
pushf
shrl
lea
fsubr
enter
aas
adc
adc
aaa
mov
pop
cmpl
dec
inc
movsb
cmpsl
jl
lret
sub
fadd
and
hlt
cmp
inc
mov
inc
dec
mov
bswap
cmp
inc
inc
flds
lock
cmpsl
pop
fsts
mov
sub
mov
pop
push
mov
fbld
popf
arpl
popf
push
or
xchg
dec
jmp
pop
out
or
jno
out
dec
xchg
test
fistpll
adc
iret
ret
mov
mov
hlt
jns
loope
sbb
scas
aad
inc
sti
cli
inc
stos
lret
fs
push
mov
xor
lds
sarl
mov
mov
fcoml
dec
sarl
leave
pushf
addb
or
push
fmull
pop
push
mov
push
xchg
sbb
mov
xchg
loopne
mov
in
ds
xchg
js
push
loop
and
mov
ficomps
cmp
dec
aaa
mov
rolb
xchg
lock
pusha
xor
dec
pop
add
pop
scas
mov
shrl
cmp
call
lea
jnp
push
nop
jl
inc
and
add
in
outsb
mov
fistps
ljmp
and
or
mov
addb
lret
mov
leave
pop
ja
xchg
mov
xchg
arpl
pop
sbb
mov
fnstsw
lods
jmp
cmp
stos
pop
push
mov
cmc
mov
mov
inc
mov
mov
jg
aaa
stos
sub
out
je
jecxz
inc
pop
sub
inc
icebp
mov
push
aaa
add
imul
fs
lcall
inc
out
repz
fninit
loopne
fisubl
add
and
scas
jl
jne
push
or
jmp
movsl
sbbb
xchg
cli
cmp
cmp
out
sbb
ja
push
cmp
jl
xchg
jne
mov
sub
xchg
lcall
mov
les
andb
add
lcall
clc
and
fiadds
imul
sub
and
adc
sbb
fcoml
mov
mov
dec
add
or
xor
out
pop
mov
subl
sub
mov
lods
fisubl
mov
lcall
mov
jecxz
jg
nop
fs
ds
lea
adc
jbe
rclb
mov
fisttpll
fisubrl
pusha
xor
mov
mov
pop
lcall
jp
loopne
inc
mov
popf
sub
add
stc
lea
test
hlt
dec
jecxz
push
pusha
shl
lods
lcall
jne
push
xorb
sub
pcmpeqb
xor
jne
dec
adc
adc
jl
xor
pop
adc
sub
mov
in
mov
or
cmp
push
push
dec
and
jmp
pop
pop
adc
mov
call
divb
jns
pop
ljmp
pop
pusha
mov
mul
mov
ss
mov
mov
lods
repnz
enter
add
test
test
loope
fdivrs
in
rcrl
push
push
pop
lods
jl
lcall
dec
mov
mov
gs
ljmp
ds
jp
adc
fiadds
push
movsb
sbb
mov
frstor
movl
mov
in
cmp
inc
or
add
mov
pop
loopne,pt
in
andl
mov
add
lods
pop
mov
addr16
mov
cltd
pop
arpl
js
cmpsb
daa
lahf
xchg
mov
mov
imul
test
or
dec
mov
sbb
and
cmpsb
fwait
push
inc
dec
jecxz
imul
or
call
and
lret
cmp
pop
and
lcall
inc
xchg
fnsave
arpl
arpl
sbb
fmull
mov
test
lods
pop
dec
cmp
popa
jns
pusha
loope
inc
sub
mov
or
push
fdivrl
shl
test
jmp
les
loope
mov
int
ds
std
ror
xor
mov
mov
adc
ds
in
nop
pop
push
jle
lcall
lcall
pop
cmp
mov
lret
lock
xchg
ds
imul
push
sbb
dec
sbb
movsl
ljmp
push
jo
sub
nop
dec
sub
adcb
push
xchg
pop
mov
cmp
lret
mov
sahf
int
clc
rcll
in
cmp
leave
pop
pop
loope
stos
outsb
aas
btcl
gs
sbb
and
je
pop
inc
movsb
sub
mov
sbb
fsubs
inc
jecxz
shll
or
mov
jle
inc
je
inc
cld
and
fstpl
insl
cld
cmp
cmp
sub
ds
fisubl
aas
test
orb
repz
data16
into
ds
ds
nop
jno
lods
lret
pop
push
ds
pop
and
lock
sti
push
aaa
mov
adc
add
cmp
imul
test
cs
icebp
push
xchg
push
cltd
add
xor
sbb
xor
data16
das
xchg
sub
mov
icebp
js
cmp
push
inc
cmp
cmp
mov
adc
cmp
and
mov
sbb
sbb
fstpl
push
outsb
xchg
ret
filds
rcrl
gs
add
push
pusha
inc
imul
ss
sbb
mov
add
sbb
cmp
aaa
mov
mov
test
push
mov
aaa
out
imul
dec
sti
and
aad
cld
push
loope
outsl
cmpsb
or
clc
das
cmp
loop
pop
js
cmpb
fadd
push
mov
call
repnz
hlt
xchg
pop
lret
stc
xchg
in
js
ffree
xchg
dec
cld
sbb
lods
adc
mov
sub
jo
fmulp
mov
cmpb
pop
lcall
pop
outsl
sbb
jg
dec
aas
loop
call
gs
cmp
sbb
xlat
aam
cli
dec
xor
or
out
or
mov
inc
jle
adc
xchg
fldl
xor
cmp
cmp
out
adc
pop
arpl
xlat
adc
ds
shl
bt
gs
jb
and
push
sti
leave
negl
mov
and
ljmp
adcb
jo
adc
jge
test
das
dec
mov
add
cmp
fisubl
sbb
test
inc
roll
ret
lcall
inc
shlb
leave
mov
outsl
sbb
sub
setnp
jns
dec
dec
stos
mov
loopne
ficomps
mov
test
cld
dec
in
andl
fxrstor
lcall
inc
sbb
inc
mov
adc
fdivrl
cli
rclb
sbb
in
lods
push
push
sub
mov
gs
fbstp
fsubp
jge
sub
mov
fwait
mov
lock
push
and
mov
push
cmp
lea
popf
mov
pop
lods
out
in
cmp
cld
int3
or
sbb
push
xor
out
aaa
ss
das
pop
jmp
lret
movsb
std
lds
rcrl
outsb
les
fnstenv
cs
jae
jbe
ds
loop
in
xchg
rorl
inc
jecxz
xchg
push
mov
mov
in
movb
jl
nop
inc
mov
pop
data16
dec
rcrl
mul
push
inc
pop
or
sub
stos
jmp
out
and
push
out
fdivp
pop
scas
fcoms
ds
aaa
aad
cld
pop
int3
push
xchg
mov
sbb
xchg
into
or
jbe
mov
cmp
mov
lcall
fimuls
cmc
shl
and
jle
mov
ljmp
cmp
mov
fucomip
cld
adc
push
mov
ds
mov
xor
dec
nop
stos
xchg
test
xchg
pop
xchg
adc
addr16
jg
in
and
clc
lahf
pop
testl
bound
rorb
in
repz
ljmp
leave
das
push
aas
lods
movsl
xchg
mov
cmp
lret
xchg
jle
cmp
cs
jae
test
aas
mov
mov
and
lcall
mov
loopne
inc
loope
stc
lods
movsl
adc
mov
inc
scas
fildl
testb
adc
in
dec
jge
sahf
scas
add
hlt
xor
ret
pop
xchg
sbb
inc
jne
inc
jns
das
lcall
cwtl
loope
sbb
cli
aad
movsl
xchg
test
sub
cltd
dec
fucomp
add
lds
jno
push
dec
jbe
incb
dec
addr16
cmp
jno
movb
pop
jl
arpl
mov
andps
sbb
push
xchg
mov
dec
adc
jmp
mov
test
lea
mov
pop
xchg
fs
xchg
imul
in
inc
ss
test
and
out
push
xchg
cmp
aaa
test
fimull
fwait
add
or
dec
inc
push
or
sbb
icebp
scas
mov
adc
int
imulb
mov
xchg
ja
sbb
or
mov
frstor
aaa
lds
frstor
dec
test
pop
clc
xchg
faddl
xor
leave
mov
jb
pop
sbb
lahf
add
fistl
cmp
jae
adc
cld
cwtl
xor
mov
aaa
cmp
nop
clc
push
or
lcall
mov
test
sub
jo
out
jge
xor
aaa
rclb
pop
cmp
cmp
shrl
jle
xchg
xor
dec
push
mov
enter
jne
fxch
cmp
fistl
cmp
add
inc
pop
popa
cld
pop
push
test
push
push
insb
lcall
ret
stos
pop
int
and
xchg
lcall
lea
push
pop
imul
aas
out
gs
repz
cli
cwtl
cmp
pop
pop
jecxz
pop
out
mov
ds
pop
add
aaa
in
aad
mov
dec
xor
je
cmp
lods
and
stc
cltd
jns
and
icebp
rcrl
mov
push
cltd
add
das
aad
and
fidivrs
icebp
pop
jns
sub
jg
or
ss
lds
pop
and
mov
scas
js
xchg
jno
ror
push
scas
sahf
jmp
pop
mov
lods
ljmp
adc
adcl
es
inc
inc
pop
mov
add
or
mov
mov
xchg
testl
inc
pop
dec
pop
xchg
cld
cmp
loope
cwtl
push
je
ljmp
pop
cmpsb
ds
pop
hlt
jge
inc
loop
cmp
lock
fimuls
mov
arpl
les
push
inc
stc
add
fadds
stc
mov
fstps
push
outsb
pop
pop
mov
lods
dec
sahf
jb
sbb
call
jb
cmpsb
ds
rcll
ds
mov
ret
cs
xchg
pop
dec
inc
pop
data16
aaa
push
pop
pop
addr16
mov
cmp
imul
adc
push
cmp
cmp
pushf
cld
mov
inc
test
shrl
cmpsb
sbb
out
mov
sbb
imul
call
addr16
lcall
push
rcr
mov
lret
jae
cmpb
jmp
sti
mov
mov
aas
mov
or
scas
daa
lods
jg
lcall
aaa
imul
lods
push
add
leave
cmp
inc
jmp
aaa
cmpsl
jb
mov
fwait
pop
repnz
xor
loopne
jecxz
xchg
jp
jge
stos
je
rcr
popa
push
mov
icebp
dec
cmp
lcall
cmp
sbb
subb
lcall
xor
adc
out
lcall
cmp
add
rcrb
out
iret
clc
aaa
push
jecxz
xchg
pushf
shlb
add
mov
fnstsw
mov
jns
and
cmp
and
icebp
in
lock
mov
ret
pushf
or
cmp
imul
andb
aaa
and
imul
loope
inc
out
dec
js
data16
lods
in
out
mov
das
inc
pop
push
scas
pushf
cmp
pop
sub
cwtl
popa
mov
inc
lds
sahf
imul
lcall
nop
rcr
dec
or
insl
xchg
pop
pop
dec
pop
fmuls
inc
popf
jns
sbb
ss
movsl
xchg
push
jmp
adc
sbb
test
sbb
pop
aas
rorb
jp
mov
jge
fcompl
sub
sbb
cmp
cld
or
lahf
lcall
xchg
leave
sub
xchg
inc
lret
or
xor
test
incb
and
or
loopne
xchg
push
jp
cmp
dec
outsl
outsb
xor
inc
inc
mov
aaa
jb
inc
cmpsb
js
jo
aam
call
push
cli
mov
dec
scas
fstpt
xor
ds
push
shll
ja
jo
mov
push
and
xchg
ss
test
fldl
movsb
mov
pop
lret
cltd
sti
mov
idivb
js
cwtl
push
fadd
es
in
cmp
add
push
fs
test
mov
cmp
rcl
push
int
fistpll
mov
into
add
inc
popf
pushf
mov
push
sbb
fcompl
jns
ds
arpl
push
sub
push
imul
enter
outsl
lcall
or
frstor
or
xchg
lcall
enter
ja
jle
clc
movsb
push
mov
mulb
mov
xchg
stc
cmp
lcall
sbb
fmull
ds
mov
adc
sub
clc
psubusb
nop
bound
mov
cmp
clc
and
jge
adcb
jecxz
inc
jmp
or
pop
pusha
pop
imul
jo
popa
mov
cwtl
cmp
leave
bound
mov
mov
dec
cmp
sub
cmp
fnstenv
ret
mov
mov
iret
neg
jmp
js
lods
pop
jg
cld
mov
jg
xor
gs
rclb
push
idivl
mov
in
jp
shl
push
mov
js
xchg
mov
pop
lock
aaa
mov
push
pop
lcall
outsb
jne
clc
jecxz
dec
mov
mov
lods
test
dec
jmp
xchg
mov
in
movsb
repnz
aad
pushf
inc
jp
jae
adc
mov
dec
xor
xlat
mov
gs
shrl
push
enter
scas
xchg
cmp
fisubrs
push
sarl
cmc
mov
aaa
mov
push
adc
fidivrl
clc
jmp
mov
inc
xchg
xor
leave
loopne
mov
ss
outsl
out
dec
ds
mov
jae
pop
xchg
outsl
mov
popf
inc
and
out
fcompl
stos
push
push
add
mov
les
xor
pop
mov
lods
movsb
cmp
aaa
test
out
inc
lcall
push
fldl
dec
or
filds
popf
inc
adcl
pop
decb
lret
repnz
or
dec
xor
dec
je
loope
leave
arpl
mov
pusha
pop
adc
addr16
sub
enter
aaa
ret
addr16
and
inc
imulb
in
sbb
push
cmp
inc
imul
shll
mov
inc
sub
mov
dec
xor
test
outsb
pop
popa
dec
mov
repz
xchg
mul
idivb
inc
shrb
and
lahf
pop
push
mov
test
pop
sub
aad
addr16
orl
dec
loope
push
aas
lcall
cmp
inc
pop
dec
pop
jg
or
js
cmp
push
jbe
pop
adc
xchg
mov
inc
test
in
sbb
or
mov
dec
mov
arpl
popa
adc
dec
divl
pop
ja
pop
dec
jp
nop
ds
sbb
arpl
pop
ds
push
pop
inc
jo,pn
jb
pushf
sbb
sbb
mov
lret
mov
lods
je
mov
push
loop
enter
or
shll
mov
sub
cmp
dec
cmp
fisubrs
and
adc
adc
dec
les
loope
sbb
in
andl
pop
jbe,pn
adc
sahf
cmp
cltd
in
out
and
test
xchg
jb
repz
sbb
cwtl
fimuls
sbb
cmp
imul
sub
rcrl
pop
sbb
shl
clc
xchg
inc
fcmovnbe
out
pushf
xchg
xlat
lcall
fwait
inc
fstpl
dec
iret
les
lret
data16
mov
popf
ss
mov
dec
lcall
out
out
fistps
jnp
and
fldt
roll
pop
add
push
pop
push
pop
call
stos
jnp
jmp
cmp
jne
pop
dec
mov
out
sbb
movsb
in
cwtl
daa
xlat
ljmp
inc
pushf
ds
lods
mov
or
out
loop
adc
popa
insl
xchg
popa
mov
cmp
loope
jne
xchg
inc
jle
in
add
jmp
xor
push
jl
lcall
mov
dec
push
mov
ds
xchg
addr16
push
and
adc
in
cli
adc
mov
aad
in
out
cli
ja
push
nop
es
inc
jne
mov
add
sbb
stos
mov
push
test
jnp
fimull
mov
cmp
shl
inc
jne
pop
jle
fcoml
fisttpll
and
jnp
jle
out
lea
lahf
lahf
xor
imul
and
inc
in
inc
dec
push
test
js
je
jo
rcrb
aaa
jp
adc
ja
cs
lcall
adc
lds
bound
push
popf
jge
fwait
add
add
ds
enter
dec
sub
in
pop
mov
adc
ds
pop
loop
les
outsb
inc
or
test
insb
outsb
dec
stc
lds
dec
test
pusha
je
or
jp
loop
repnz
or
or
in
imul
aas
lods
sub
or
sub
push
or
dec
cwtl
ss
push
mov
imul
push
or
fisubl
cmp
xchg
xchg
mov
in
sarb
aaa
mov
inc
add
lods
inc
shrl
cltd
aaa
pusha
out
out
or
ds
addr16
repz
ja
mov
pop
fstpl
notl
lret
cmpsl
and
stc
push
inc
jle
lcall
and
push
mov
imul
mov
cmp
lahf
stos
pop
sbb
pop
lcall
arpl
dec
cmp
sahf
fisttps
inc
dec
dec
push
repz
or
cmp
sub
lcall
stos
movsl
loop
lods
push
pop
xor
sbb
cmp
pop
add
push
aam
or
sbb
adc
sbb
clc
cld
jl
aaa
dec
mov
cmp
ds
stc
fidivrs
pop
mov
insl
adc
int
in
inc
lcall
cmpsb
dec
fnstsw
mov
and
fdivp
inc
scas
and
sbb
xchg
scas
mov
ss
lcall
jns
xchg
add
rclb
rorl
jmp
adc
inc
inc
ds
dec
adc
fsubrl
lds
nop
ds
lods
push
mov
jnp
aam
push
push
xchg
in
mov
sbb
mov
and
mov
fnsave
fwait
pusha
loope
sbb
pop
cmp
das
jb
stc
pusha
ror
jp
mov
inc
and
cltd
in
in
insb
jl
divl
xor
lds
fwait
jge
lcall
sub
faddl
dec
daa
nop
push
mov
lds
mov
test
xor
sti
mov
insb
sbb
icebp
idiv
in
stc
mov
push
popf
in
mov
mov
ljmp
jns
rcrl
sarl
mov
lcall
fwait
fwait
mov
cli
aaa
push
aam
pop
cmc
xor
push
lods
movl
dec
sbb
aas
inc
outsb
mov
mov
sbbb
xchg
in
push
jmp
dec
sbb
cmpsb
pop
mov
enter
out
pusha
insl
push
xor
aas
in
ds
into
xor
inc
pop
mov
mov
mov
dec
dec
test
lods
xchg
sbb
add
cmp
popf
out
fistps
pop
or
sbb
xchg
aaa
mov
inc
pushf
ja
pushf
push
jecxz
jp
sbb
loope
adc
push
mov
adc
fcoms
aaa
in
fistl
cwtl
lcall
sub
lcall
jmp
imull
in
jnp
jmp
mov
call
lahf
imul
and
inc
pop
jmp
fstl
nop
cs
jl
push
ds
or
cs
dec
or
lcall
push
sbb
fstps
popf
lret
sub
cmp
lcall
cmp
and
inc
fwait
popa
inc
inc
pop
push
mov
push
push
enter
or
cmp
decb
in
call
aas
xchg
mull
rolb
or
pushf
fdivrl
add
jge
or
test
mov
loopne
ret
outsb
sub
shufps
rorb
movsb
mov
ds
pushf
sbb
sbb
xor
es
cmp
mov
mov
lret
inc
add
movsl
insb
test
fdivl
fadd
mov
ret
jle
sub
cs
inc
cmp
scas
pop
inc
in
ds
dec
sub
test
xlat
aas
std
sbb
int
add
mov
mov
lea
test
xor
addr16
pop
dec
sbb
sti
mov
mov
shlb
cmc
jl
out
sub
ds
jle,pt
adc
pop
aaa
inc
and
xor
loop
pop
jno
fdivl
out
ss
mov
pop
mov
leave
cld
shll
prefetch
ds
or
lds
test
mov
addb
frstor
loopne
pushf
jae
sti
call
push
js
mov
rclb
inc
stos
push
imul
sub
std
lret
cmp
outsl
inc
pop
gs
adc
popa
shlb
and
inc
lcall
scas
lcall
xchg
pushf
push
fs
scas
push
mov
mov
add
push
test
sbb
enter
fcomp
adc
ds
pushf
repz
stos
jl
inc
jecxz
or
call
xchg
repnz
and
dec
mov
mov
and
movsb
mov
in
movsl
mov
pop
out
sarl
fildl
leave
jg
scas
jp
pop
rcrb
fstl
into
jecxz
sub
or
movsl
or
jle
movsb
xchg
fwait
addb
push
cltd
pop
pusha
pop
add
in
fisubrs
pop
mov
sarl
mov
gs
aaa
lock
in
jecxz
push
clc
adc
test
fwait
push
push
push
dec
std
movsl
dec
rcrb
mov
pop
fstpl
popf
pop
repz
push
mov
jp
shr
push
js
out
xor
dec
jae
es
fwait
arpl
mov
push
repnz
aaa
cmp
push
xchg
clc
cltd
inc
pop
sub
push
fisttpll
xchg
pop
sahf
enter
cmp
ret
fmull
xchg
addl
mov
jnp
sbb
imul
je
sahf
pushf
jg
dec
sbb
out
push
loope
inc
adc
mov
inc
mov
or
popa
aaa
cmp
pop
xor
dec
pop
mov
xorb
jge
cmpsl
fs
test
aaa
scas
xchg
mov
jl
ds
popa
mov
mov
mov
cmp
mov
adcb
push
test
cmp
dec
loopne
aaa
je
xchg
xchg
insb
pushf
lret
cmp
mov
fdivl
ret
out
ss
pop
decb
jle
sub
out
or
cmpb
or
test
lcall
mov
test
inc
std
dec
ds
gs
aad
mov
inc
pusha
into
push
pop
mov
ficomps
orb
pavgw
adc
dec
adc
cmp
add
into
mov
jne
daa
push
bound
cli
cmp
mov
ja
sub
int3
ljmp
inc
inc
ljmp
jecxz
jmp
mov
lcall
xchg
cwtl
and
cmpl
sub
xchg
pop
into
cmp
mov
xchg
jmp
jle
pusha
lds
subb
adc
shl
mov
dec
mov
neg
imul
cmp
or
test
and
aas
loop
dec
in
xchg
fsubrl
ljmp
daa
mov
call
sub
push
xor
outsb
std
and
inc
mov
lcall
push
test
jp
fwait
icebp
lret
jle
out
sub
xor
push
sbb
popa
loopne
mov
test
insb
dec
fists
imul
ljmp
fdivrl
lods
lds
scas
pop
mov
adc
xor
aad
out
sahf
add
jmp
mov
mov
jns
add
shr
adc
stc
or
xorb
loopne
mov
in
mov
stos
cmp
push
in
fstl
cmp
and
add
stc
cmp
sahf
pop
sub
aaa
lret
cli
bound
lahf
stc
stos
cli
mov
clc
push
insl
jbe
pop
xor
and
mov
fcoml
lahf
leave
fcoml
push
jno
lds
cmp
fs
jne
jecxz
scas
jmp
jmp
mov
xor
cmp
lock
mov
jmp
push
mov
enter
dec
push
es
pop
sub
popl
dec
push
repz
pop
negb
movsb
jp
push
das
cmp
loop
push
add
or
mov
jecxz
xor
fiaddl
inc
pusha
sbb
test
pop
and
push
mov
xchg
sahf
jns
or
add
dec
inc
pop
movsl
jne
scas
push
aam
jmp
fcmove
pop
jle
xor
pop
scas
insb
push
nop
ds
cmp
adc
popf
jns
jg
and
pushf
fcompl
cwtl
cltd
fsts
stos
pop
sub
sbb
test
das
sbb
pop
sar
mov
add
dec
add
pusha
push
insl
pop
mov
xchg
out
mov
mov
dec
out
push
pop
stos
mov
je
pop
push
jg
popa
mov
and
mov
jno
cli
sti
jge
cmp
loop
or
scas
cmpsl
sub
cltd
lret
fbld
insb
leave
nop
lods
int3
js
mov
xchg
ret
fstpt
movb
das
sbb
push
pop
into
jp
sti
loope
push
mov
adc
inc
or
xor
sarl
rcll
jbe
scas
ds
adc
cmp
insb
adcl
fnstenv
mov
ljmp
mov
xorb
sub
fwait
or
stc
pushf
idivb
frstor
pusha
adc
je
cld
test
outsl
and
les
shrl
inc
data16
push
pop
jne
sub
imull
mov
outsb
push
repnz
cmp
mov
jmp
add
add
aam
out
insl
fldl
mov
mov
inc
xchg
mov
lret
push
jle
push
lock
xchg
ds
sti
dec
xchg
scas
js
mov
sub
movsl
jno
push
mov
sbb
loope
cmp
ret
ret
push
scas
xchg
add
xchg
outsl
or
jecxz
lcall
jle
adc
add
jne
movsb
aad
dec
mov
jo
jmp
imul
lcall
xor
ds
jg
aas
inc
jns
push
lahf
dec
mov
mov
lcall
pop
fcmovnu
aas
addr16
std
repnz
dec
dec
fwait
mov
mul
mov
scas
in
pop
mov
push
mov
repnz
or
jl
jp
sub
mov
cmp
mov
jnp
cmp
pop
inc
mov
cmp
imul
je
xchg
call
mov
xchg
jmp
fcompl
jbe
es
push
inc
lcall
xor
ret
stc
ret
pop
lret
fwait
push
pop
cmpsb
shl
cmpsb
je
pop
movsb
mov
inc
jmp
cli
adc
jg
mov
fisttpll
mov
sub
in
push
mov
aaa
popa
in
loopne
pop
cmp
mov
sub
ds
mov
inc
fisttps
aad
mov
bound
loop
jb
sbb
fstps
or
jns
cmc
fnstsw
in
pushf
push
push
cli
cmp
gs
and
aaa
clc
sub
jae
dec
ds
pop
or
lods
pop
aaa
xor
std
pop
adc
nop
inc
lcall
out
stc
adcl
pop
enter
clc
int
imull
xchg
jo
scas
das
sahf
fcompl
test
adc
pop
repnz
push
mov
pop
mov
and
cltd
lock
mull
push
mov
fwait
jle,pt
push
fbld
mov
lcall
inc
lahf
mov
lds
pop
xchg
aaa
pop
scas
outsb
lret
sahf
xlat
bound
xchg
mov
mov
xchg
inc
mov
cmpsb
sub
popf
and
sbb
cmp
aaa
fs
incl
adc
fwait
nop
adc
jb
mov
dec
inc
aaa
jne
dec
sbb
stos
or
sbb
bound
xchg
out
cmp
adc
call
ds
mov
popa
pushf
lods
clc
dec
adc
imul
push
add
pop
jo
lock
lds
xor
setl
gs
mov
jnp
mov
lods
dec
leave
call
orl
fwait
loope
aaa
adc
inc
daa
xor
mov
imul
fcomip
and
into
or
mov
cltd
push
mov
pop
push
scas
mov
sahf
faddl
mov
jecxz
enter
lcall
or
fnsave
mov
jecxz
icebp
and
jae
or
call
dec
fstl
mov
add
jge
daa
mov
and
test
mov
mov
pop
aas
push
inc
pop
adc
ds
lret
jbe
sub
aas
ficompl
xchg
insl
daa
shll
out
cmp
mov
jb
push
sbb
cwtl
lcall
or
sbb
movsb
js
cmc
push
arpl
add
adc
cmp
in
and
dec
jecxz
inc
sti
movsb
adc
mov
cwtl
aaa
ud1
push
and
nop
aaa
adcb
xlat
push
cmpsb
and
negl
icebp
sub
pop
inc
sbb
push
xchg
enter
std
in
mov
cmp
popf
sbb
sbb
jecxz
jp
loopne
cwtl
jnp,pn
jg
negl
flds
test
mov
sub
xchg
jns
rcr
pop
enter
cli
push
inc
push
ret
push
ja
stc
cmp
icebp
add
cmp
jle
and
jl,pn
cmp
cs
sbb
pushl
aaa
xchg
push
dec
cwtl
jmp
mov
pushf
mov
mov
in
and
add
mov
mov
cli
xchg
pop
jle
movsb
sub
jle
pop
dec
bnd
int3
test
das
fdivl
sti
stos
cmp
jl
popf
push
pop
push
push
fmuls
or
insb
sbb
rcrb
jmp
or
sub
and
pop
push
mov
pop
xor
or
inc
in
push
mov
xor
pop
xchg
ds
iret
lcall
mov
scas
push
ljmp
andl
inc
mov
mov
fisubs
fwait
inc
inc
jne
pop
push
aaa
lds
or
jecxz
and
mov
xchg
mov
subb
aaa
xor
sub
sub
cld
jl
imul
add
in
mov
ds
stos
lods
pop
movsl
lods
mov
movsl
lcall
loop,pt
push
rdtsc
cmp
dec
cmp
jecxz
test
mov
jno
fcoml
and
jl
movsl
ss
out
cmp
dec
cmp
pop
cltd
fcmove
test
call
xchg
xorl
scas
cmp
jl
jl
mov
pop
mov
inc
dec
in
les
cmp
outsb
out
and
stc
cmp
and
int3
push
mov
mov
sbb
jge
mov
push
mov
cs
jle
jno
pop
icebp
iret
loopne
outsb
into
sbb
fisttps
sbb
mov
cmp
je
test
push
inc
repz
hlt
js
adc
pusha
xchg
icebp
dec
mov
xor
gs
movsl
jge
pop
testb
mov
and
test
stc
mov
mov
cmc
and
mov
popa
out
lret
lods
insb
sub
dec
jb
mov
pop
cmp
sub
roll
push
mov
push
pop
leave
rcrl
scas
aas
data16
mov
mov
dec
push
movsb
pushf
jns
mov
fisttpll
and
sub
cmc
scas
pushf
lcall
mov
cmpsb
jo
pop
pop
and
sbb
ds
fistps
adc
es
outsl
bound
std
int
arpl
notl
mov
ja
iret
aaa
cmp
xlat
loop
stos
imul
pop
lock
ja
mov
nop
ds
outsl
std
rolb
into
mov
pop
loopne
sti
mov
and
xchg
dec
xchg
test
aaa
push
or
and
and
sti
and
dec
adcb
xor
jp
stos
fs
mov
cmp
sbb
enter
mov
mulb
and
or
cmp
push
sbb
pusha
inc
in
mov
cmp
cmc
ja
mov
mov
imul
std
and
and
sub
mov
mov
jecxz
fistpl
mov
jno
push
xchg
mov
fistpll
xor
cmp
out
fmulp
out
lds
mov
lcall
xchg
clc
out
lcall
jmp
or
std
rcl
xchg
jo
shrl
push
shr
out
insb
adc
cmpsl
mov
mov
aaa
ss
pop
or
dec
sbbl
sub
fdivrl
les
ss
sub
movsb
in
mov
add
inc
pop
out
pop
mov
filds
jnp
outsb
loope
gs
ja
sub
rcrb
std
push
push
enter
fwait
addl
clc
push
cs
cmp
out
sarb
lock
lods
push
into
gs
fldl
cmp
sub
scas
sub
daa
addb
sbb
pop
sub
insl
mov
int3
xor
lret
clc
jge
ds
jb
aaa
es
pushf
lods
sub
jecxz
leave
mov
push
fwait
insb
dec
js
pop
jecxz
rorl
loop
inc
inc
ret
mov
mov
lret
mov
pop
or
hlt
std
lret
sbb
cmp
inc
or
inc
inc
push
scas
xchg
mull
aas
lds
andb
cmc
ror
movswl
push
adc
pop
xchg
iret
mov
stos
mov
inc
push
pop
adc
jns
in
arpl
inc
ss
mov
mov
mov
loop
cmp
mov
aam
in
cmp
or
sbb
test
jbe
mov
cmp
fstpt
rorb
aam
push
or
test
sbb
dec
push
mov
sub
lcall
jae
loopne
clc
ljmp
cmp
cmp
lcall
inc
sub
mov
mov
enter
sahf
adcb
frstor
sbb
mov
data16
mov
dec
sbb
loopne
mov
lock
pop
add
mov
mov
scas
out
lcall
adc
fldl
js
negl
xor
inc
jg
sub
lcall
mov
jge
xor
aad
pop
and
jecxz
jg
xchg
into
mov
repnz
cmp
les
ds
dec
sbb
ljmp
dec
lcall
mull
and
mov
repz
jb
dec
loop
jo
mov
imul
dec
lods
inc
outsb
fwait
sbb
das
pop
jnp
outsb
fcoml
cmp
push
popf
push
xchg
daa
sar
jp
stos
hlt
loop
sbb
jne
nop
ds
popf
sarb
mov
lock
ficoms
pop
ds
sbb
cmp
out
lcall
and
cmp
in
mov
dec
or
aam
jns
xchg
jnp,pn
addl
mov
std
and
lcall
xchg
add
mov
sbb
pop
sub
out
das
stc
jno
jb
xchg
pop
xchg
arpl
dec
mov
aad
es
in
inc
pop
pop
inc
insl
mov
ds
cmc
cmc
into
fsubrs
cmp
and
sub
inc
xlat
cmp
aaa
aas
mov
mov
mov
scas
adc
gs
into
frstor
mov
lds
sub
fstp
or
ss
in
xchg
bound
jb
lods
adc
stos
pop
adc
pop
mov
push
lahf
xchg
lahf
adc
pop
lret
jo
pop
mov
inc
mov
fldl
sub
sub
add
icebp
divb
rolb
push
lret
jp
je
jbe
mov
faddl
cli
je
ds
adc
aaa
jno
push
adc
aaa
push
cmp
test
imul
test
mov
xchg
sub
pusha
out
dec
jg
pop
ds
fs
inc
ds
sub
mov
jge
ds
or
pop
aas
jl
aaa
fwait
imulb
addl
lcall
jns
fisttpll
mov
push
nop
loop
cmp
aaa
sbb
repz
dec
mov
lret
ss
cmpsl
lret
punpcklbw
cmp
and
inc
sub
js
push
mov
adc
scas
dec
sbb
mov
cmc
cli
daa
daa
ret
push
add
into
or
cmp
xor
out
pop
and
faddp
pushf
cwtl
sbb
mov
lods
or
loop
int
add
out
aad
inc
fcomp
push
and
and
mov
movsb
mov
popf
fdivl
in
pop
ds
lods
pop
decl
sub
imul
jp
pop
lock
sub
xchg
push
fldt
mov
fstpl
stos
dec
cmp
lods
pusha
dec
cmp
push
mov
jb
sub
pop
jb
pop
cmpsl
sahf
dec
cwtl
xchg
mov
outsl
xchg
aaa
push
mov
sub
jne
lcall
add
ficomps
xchg
pop
popf
dec
push
mov
and
frstor
inc
push
stos
stc
jg
out
das
add
sti
cmpsb
sbb
mov
mov
fnsave
pop
and
cmp
iret
test
stos
ds
mov
loopne
mov
pop
lods
lcall
out
push
lds
pushf
pop
lcall
pop
insb
sbb
arpl
sub
mov
loopne
and
mov
xor
loop
js
adc
and
insl
dec
stc
lahf
fstpl
aaa
daa
inc
mov
or
and
pusha
dec
jp
add
xchg
in
ja
cmp
scas
jbe
mov
cmp
es
daa
pop
sub
int
cmp
lock
xchg
fstpl
and
cli
jns
cmp
pop
xor
aaa
push
outsl
push
ja
fisttpl
das
pop
imul
dec
jle
rcrb
ret
inc
jp
jge
pusha
push
xchg
and
sub
sub
popa
aaa
fistpll
fcompl
jmp
inc
rolb
fildll
lods
enter
mov
inc
mov
hlt
adc
ret
idivb
loop
daa
cmp
es
jle
inc
push
mov
gs
sub
fsubrl
ret
ja
fistps
scas
push
bound
scas
fsubrl
jno
push
cltd
mov
fcoms
in
xor
shll
pop
js
dec
loope
movsl
adc
or
xchg
dec
idivl
jg
ffree
fwait
daa
cmp
in
push
test
jnp
xchg
pop
outsb
dec
fwait
cmp
fiaddl
pop
jne
scas
inc
fadd
jo
stc
popf
fdivrl
push
cwtl
in
cmp
mov
lds
lods
loopne
lret
mov
fidivrl
mov
mov
lahf
mov
ja
out
repnz
cli
std
jae
xchg
in
test
in
adc
fisubl
sbb
mov
orb
test
aas
fwait
lcall
rolb
push
gs
mov
mov
popa
inc
cmp
add
cld
sub
mov
mov
xlat
aas
xchg
mov
or
lods
push
enter
dec
mov
add
xor
mov
movsb
pop
ret
movsl
aad
clc
jnp
push
divl
sub
pop
sbb
sbb
fmull
add
imul
cs
mov
jns
and
and
mov
daa
push
pop
out
and
sub
scas
and
mov
aaa
aam
es
push
arpl
aam
push
xor
in
cmp
mov
into
add
inc
dec
ljmp
cwtl
push
sub
xor
jno
fistps
clc
cli
dec
cmp
movb
fstl
push
xor
aas
inc
inc
pushf
clc
nop
aaa
sub
xor
xor
cmpl
pop
or
mov
std
movsb
dec
and
call
insb
xor
adc
jbe
mov
mov
arpl
inc
ljmp
std
jb
xchg
adc
aad
aad
nop
bound
ds
or
in
loop
pop
fwait
push
into
push
imul
xor
frstor
sbb
pop
fdivl
mov
or
push
arpl
cmp
sarl
sbb
xchg
xor
jno
jmp
jae
pop
fidivrs
shrb
pusha
pop
out
ljmp
lahf
ds
push
push
mov
es
xchg
cmp
fsubl
ljmp
or
pop
mov
daa
xor
and
das
fisubrl
test
mov
mov
xor
xor
dec
jl
popf
scas
xchg
aas
or
cmp
call
lea
dec
je
mov
adc
cmp
mov
lea
jmp
mov
jns
fistpl
xor
cmp
push
mov
hlt
lea
stos
cmpsb
aaa
ljmp
push
mov
loop
icebp
lock
and
fiadds
add
mov
or
xchg
test
ret
or
sub
lahf
aaa
push
lcall
cmpsb
ficomps
bound
loope
mov
lods
mov
and
xor
pop
or
mov
fistps
arpl
and
pop
pop
fst
dec
push
push
dec
push
lcall
lea
fbstp
ds
xor
test
dec
stos
lret
sub
pop
inc
imul
adc
inc
popf
jno
add
pusha
leave
les
push
inc
xchg
cmc
xchg
dec
cmp
push
imul
jne
sbb
loopne
aaa
call
mov
daa
fadds
inc
in
mov
jno
mov
adc
out
mov
aam
jo
mov
push
repnz
fisubrs
lock
add
sarb
cmp
shrb
out
jb
iret
push
ror
aaa
stc
fnstsw
cwtl
mov
or
lahf
rorl
xor
repz
mov
fnsave
nop
rorl
shrb
lcall
aaa
xor
sub
imulb
push
lea
push
jge
sbb
inc
aaa
mov
bound
test
fldl
ret
popa
inc
insl
adc
dec
jmp
popw
mov
call
sahf
mov
ret
test
cli
mov
push
push
sub
inc
ljmp
aaa
mov
push
sub
and
mov
mov
lret
jle
lcall
sub
repnz
dec
movsb
mov
jge
faddl
hlt
sbb
cmp
jnp
cmp
pop
adcb
push
pop
kaddw
sarl
rcrb
mov
mov
lret
enter
fdivs
push
mov
mov
std
mov
jno
mov
daa
cmp
std
xchg
fcomps
sbb
dec
or
data16
cmp
in
sahf
mov
ds
lods
dec
je
jae
pop
xchg
or
cli
lcall
pop
stos
call
jb
lcall
or
push
ss
ss
jg
mov
xlat
sahf
pop
fwait
mov
xchg
mov
jge
mov
imul
lods
in
cmp
outsl
pop
or
outsl
scas
sti
out
imul
std
stc
dec
lret
cmc
jmp
hlt
das
insb
fdivs
js
pop
rolb
xor
push
subl
push
adc
sti
push
jge
rcl
add
aam
jecxz
pop
fdivl
cmp
fsubl
loopne
cwtl
es
mov
xchg
ret
movsb
jle
jno
bound
push
outsb
fnsave
mov
cmp
test
data16
setge
in
in
push
scas
jle
into
xchg
mov
test
fbld
out
ret
push
stc
or
pop
jns
fsubrp
cmp
lds
add
mov
jno
loop
push
data16
inc
xor
stos
in
pop
push
test
subl
and
jns
into
mov
imul
cmp
sbb
cmp
mov
bound
push
mov
mov
pop
hlt
std
rcr
inc
cmp
lods
add
inc
into
inc
sbb
cld
sbb
leave
mov
pop
cmp
pop
jbe
mov
dec
and
dec
cltd
mov
fsubrl
sbb
ror
fdivl
cwtl
add
push
push
mov
stc
lods
gs
inc
aam
mov
ds
ret
xor
jp
mov
addr16
aad
dec
adc
pop
pop
mov
cmp
cmpsl
popf
jle
das
lcall
inc
cmp
cltd
ja
or
test
cmp
popf
bound
adc
xchg
les
pop
cmp
push
mov
dec
inc
bound
je
repz
jns
sbb
loope
pop
and
add
mov
sbb
pop
jns
in
lahf
mov
lods
cmp
js
mov
in
outsl
hlt
out
fcmovne
cmc
adcl
jle
repnz
cli
dec
lcall
lcall
mov
sar
jg
pop
pop
fbld
inc
adc
lcall
jmp
scas
decl
xchg
xchg
pop
js
add
aaa
jmp
cmpb
xor
jle
int
mov
inc
push
dec
cmp
mov
mov
ret
sub
and
outsb
cmp
fsubrl
xor
mov
mov
mov
jns
and
addr16
sbbl
mov
fs
test
cmp
ret
or
aaa
test
sub
lahf
pop
ds
jg
jbe
adc
mov
add
icebp
cmpsb
xchg
cmp
push
pop
bound
cltd
pushf
fwait
cmp
jmp
dec
sbb
movsb
into
mov
popf
push
mov
inc
fiaddl
inc
fsubrl
dec
sti
jns
shlb
aas
in
lock
xor
jmp
inc
inc
add
xor
jnp
fadd
ss
jg
push
hlt
fdivr
stos
mov
mov
push
add
cmp
popf
sahf
jno
bound
lock
adc
sarl
mov
sahf
mov
ds
lds
arpl
pop
scas
stos
ret
js
mov
ja
xchg
adc
mov
push
fmul
pop
and
aas
lcall
mov
test
mov
adc
and
lcall
ljmp
or
dec
jg
lds
mov
adc
and
push
aaa
mov
xchg
add
fwait
icebp
aaa
lea
out
sahf
push
push
aaa
fwait
xor
jne
push
mov
lcall
adc
fstp
aas
arpl
test
mov
inc
divb
jl
movl
iret
mov
dec
adc
cmp
jg,pt
pop
mov
popf
cwtl
mov
sub
testb
push
test
mov
inc
sub
push
daa
jmp
xchg
movsl
add
pop
ret
jp
mov
cmpsb
pop
xor
test
xchg
shlb
cmp
lahf
inc
mov
sub
jne
inc
dec
cs
stos
stc
mov
scas
loopne
dec
es
or
lcall
pop
dec
gs
sahf
xchg
ljmp
ds
clc
inc
mov
in
dec
sahf
insl
stos
mov
aad
inc
scas
xlat
insb
js
cmp
fidivl
inc
sub
ja
and
ds
pop
xlat
sbb
push
push
sbb
mov
or
in
pop
mov
int
jnp
adc
dec
nop
push
push
or
les
xor
and
mov
das
mov
or
scas
push
lcall
push
dec
dec
lods
jno,pt
or
stos
cmp
js
aam
jg
dec
mov
jnp,pt
dec
aas
inc
pop
mov
cmp
outsb
test
lcall
int3
pushf
stc
es
lock
int3
flds
nop
jno
lods
push
push
lret
mov
mov
xor
xor
loop
dec
fdivr
or
mov
pop
lods
pop
std
fwait
roll
mov
sbb
fisttpll
inc
aaa
out
lahf
popf
cmp
mov
sub
cwtl
and
dec
imul
xlat
sbb
pushf
dec
jg
fwait
jecxz
loopne
mov
add
out
inc
aaa
mov
pushl
mov
push
fiaddl
push
mov
jl
xorl
cmpsb
ds
mov
sti
xchg
stos
dec
ds
pop
or
popa
in
cmp
in
or
cmp
mov
fmul
js
imul
aas
cli
aas
pop
rorb
cmc
aaa
adc
xlat
and
jae
aas
aad
js
or
pop
mov
cmp
mov
movsb
aas
or
push
cmp
mov
add
push
push
push
inc
xlat
movsb
outsb
out
imul
push
aas
data16
inc
sbb
mov
in
xor
jns
or
int3
xchg
nop
sbb
or
sub
jmp
test
push
pop
or
inc
leave
or
xchg
pop
in
and
out
jmp
aam
add
mul
sahf
rcll
pop
mov
cmp
leave
inc
jp
push
pop
mov
cmp
fstpt
test
pusha
sub
mov
adc
addr16
fistps
add
test
pop
cmpsb
mov
mov
fsubrp
xchg
out
scas
jae
xor
cmp
add
dec
mov
xchg
stc
and
mov
es
enter
je
mov
movsl
cmp
mov
fisttpll
jl
add
pop
and
ret
jg
cli
and
jp
xchg
negl
and
mov
shrb
fdivrl
and
fs
pop
andb
scas
dec
leave
repnz
dec
in
mov
movsb
aas
pop
or
mov
xor
dec
xchg
dec
aas
rcr
ds
loopne
test
add
dec
iret
popf
and
inc
test
pop
aas
cmp
xchg
jnp
imul
hlt
dec
cmp
sbb
sbb
fdivs
add
inc
adc
dec
enter
xlat
testl
out
inc
xlat
loop
push
mov
push
cli
lods
dec
lcall
sti
adc
inc
shrl
fisubl
dec
mov
not
aam
loop
fimuls
cmc
lods
inc
clc
cli
sbb
bound
pushf
rorb
pushf
stc
inc
ret
rcrl
xchg
stos
cmc
int
test
aas
aas
fldenv
dec
es
push
mov
sbb
into
outsb
lcall
xchg
cmpsb
fdivr
pop
jmp
cmp
inc
shll
push
push
jne
sbb
clc
push
jo
and
sub
movsb
bound
xchg
ret
movsb
mov
std
loop
inc
sbb
push
cmp
and
pop
xchg
xor
sub
push
push
pop
inc
inc
sbb
mov
mov
push
int
inc
adc
push
mov
jp
jne
pop
pop
popf
js
sbb
cmp
inc
rorb
mov
pop
inc
jo
lea
cld
or
cld
pusha
cld
pop
xor
in
leave
ffree
add
xor
pop
loop
sbb
xor
popa
and
jae
out
cltd
inc
lcall
aaa
dec
dec
add
mov
sbb
cmp
popf
mov
loop
imul
pushf
jns
inc
loop
push
je
cmovne
cs
mov
and
xor
mov
lcall
stos
mov
pop
push
inc
add
push
ja
xor
jle
mov
cli
in
push
jp
movb
xchg
addr16
jge
push
adc
xlat
cmp
xchg
stos
aaa
ds
into
pusha
xor
jle
push
dec
je
cmp
adc
mov
test
and
xchg
lcall
inc
inc
clc
rcrb
dec
and
xchg
xor
cltd
adc
movsb
fcoml
int
mov
negb
loopne
insb
divb
jns
or
lea
jb
sbb
xchg
in
jmp
mov
cmp
cld
inc
dec
lcall
pusha
fsubrl
popf
movsl
fbstp
sub
aam
popa
gs
dec
jb
fildl
imul
lcall
xchg
jle
lcall
xchg
push
pop
andb
mov
int3
gs
cmp
pop
in
cmp
push
icebp
popa
sbb
pop
mov
xchg
xchg
xchg
mov
dec
and
int
dec
fwait
repz
loopne
aaa
xchg
repnz
adc
jns
pusha
dec
inc
mov
mov
inc
dec
rclb
repnz
loopne
pushf
call
push
aas
mov
mov
int3
jbe
mov
pop
mov
pop
inc
push
adc
test
sahf
mov
sub
pusha
or
in
mov
arpl
leave
pusha
aam
mov
mov
jle
mov
inc
pop
mov
fnstsw
jmp
jne
int3
outsl
lret
scas
xchg
frstor
inc
or
aad
mov
xchg
mov
cmp
sarl
sub
adc
jb
mov
xor
cmp
xchg
push
xor
ret
jg
push
jge
cmp
add
dec
sbb
xchg
cmpsl
dec
and
mov
adc
aas
repnz
push
aas
and
cmp
sub
cmp
ss
call
sti
and
cmp
call
and
mov
scas
push
adc
dec
or
insl
repnz
cmp
sub
pop
and
cmpl
lock
pusha
stc
jecxz
dec
les
repz
int
sub
jle
std
push
cmpsb
cmp
hlt
fidivrs
pop
andl
adc
repnz
aaa
mov
rcr
lock
xchg
add
and
cmpsl
sub
ds
pop
push
jecxz
pop
xor
cmp
dec
sub
lods
push
mov
ffree
in
sbb
shrb
dec
push
jp
fnstcw
mov
sub
test
cwtl
nop
or
js
cmp
mov
data16
inc
jbe
loopne
inc
cmp
xchg
out
fs
das
and
mov
ss
cmpsl
pop
je
mov
ds
pop
test
dec
mov
daa
adc
mov
lods
sub
addr16
outsl
xchg
mov
xchg
movsl
rclb
jle
and
xchg
sbb
sti
rcr
mov
mov
ret
mov
mov
pop
mov
push
dec
clc
dec
push
mov
inc
push
xor
mov
adc
push
inc
out
lods
cmp
inc
jg
into
lods
pop
mov
aas
mov
dec
push
push
lret
out
rclb
fucomp
sbbb
ds
add
stos
adc
enter
dec
arpl
pushf
outsl
out
data16
cmp
aas
push
inc
xchg
ret
js
jno
xchg
ret
cmpl
popf
in
push
xor
or
stc
nop
add
and
dec
inc
sbb
pop
jo
mov
notl
fidivs
mov
mov
sbb
push
test
fs
jae
std
stos
bound
mov
pushf
lock
xchg
lcall
jle
push
mov
int3
mov
lret
jl
dec
rcrl
pop
lock
mov
xor
loopne
push
sub
testb
lcall
sub
jae
pop
lea
fwait
sbb
jge
jo
sub
jle
pop
cltd
pop
into
dec
gs
push
jo
add
mov
lds
cmc
in
insl
sbb
xchg
push
bound
mov
dec
je
pop
cmp
ljmp
sbb
mov
loopne
es
pushf
lock
ds
fs
add
pop
aaa
movsb
push
movsb
pop
inc
in
inc
or
mov
popf
out
lret
or
inc
jge
cs
out
out
mov
push
or
mov
mov
or
fs
mov
test
pushf
dec
mov
push
jle
xchg
insb
out
fidivs
mov
aad
push
and
and
jbe
jnp
mov
fmuls
das
sbb
movsl
cmp
shl
sub
gs
loopne
xor
pop
jmp
lods
mov
hlt
sub
popa
fs
aaa
sbb
addr16
pop
mov
mov
mov
fdiv
std
nop
jge
mov
orl
adc
mov
sahf
add
leave
inc
lret
mov
add
mov
mov
mov
dec
lret
push
in
push
push
sbb
xlat
and
movsl
dec
bound
jb
ret
mov
pop
mov
lcall
add
cmp
mov
insl
push
jp
imul
movsl
clc
repnz
cld
fdivr
and
sbb
add
je
fstpt
xchg
pop
xchg
fidivl
pop
cld
inc
cmp
xchg
test
rcrb
ffreep
xor
insl
jo
ss
imull
in
jno
xchg
jmp
outsb
adc
test
repz
jnp
roll
fnstsw
push
movsl
and
lret
mov
sbb
jo
jo
outsl
add
mov
rcrl
add
sbb
pop
jp
push
sub
xchg
je
mov
mov
fistps
out
faddl
or
inc
pop
mov
push
mov
inc
mov
je
jo
fs
jno
lret
jbe
loopne
cmp
fldl
inc
dec
jne
mov
test
fidivs
and
sbb
pop
mov
pushf
idivb
pop
dec
dec
cltd
fstl
sti
test
inc
pop
shrl
push
jge
fnsave
and
sub
xchg
lcall
push
iret
jp
lcall
cwtl
mov
data16
dec
cmp
push
pop
popf
pushf
adc
cmp
addl
movsl
stos
push
pop
out
aaa
push
test
rcrl
loope
test
in
lret
jns
cmp
testb
xor
cmp
mov
mov
mov
ljmp
lds
ds
mov
js
mov
fsubrl
or
shlb
adc
push
lods
mov
pushf
push
mov
incb
popf
ror
cld
sbb
loop
aaa
pop
inc
dec
push
sbb
mov
lcall
dec
popf
jecxz
daa
mov
cwtl
sbb
xchg
shlb
stc
incb
enter
mov
imul
in
es
stos
jns
push
repnz
lods
lcall
and
fcompl
sub
lahf
pop
jecxz
adc
mov
movsl
int3
push
in
jle
lcall
loopne
jmp
mov
mov
es
fidivs
or
pop
test
pop
sub
adc
out
mov
int
jne
sub
ja
lcall
or
ja
or
inc
inc
test
mov
ja
or
pushf
mov
mov
push
fiaddl
fs
ret
aaa
and
jno
sbb
push
int
dec
insb
loope
pop
imul
inc
aad
xchg
ret
inc
data16
pop
sbb
loopne
fldl
push
cs
jno,pt
call
inc
push
cs
cmp
mov
bound
std
xchg
lea
aaa
inc
test
addr16
and
shlb
inc
jb
jbe
cmp
divl
add
lods
or
sub
sub
jle
sbb
mov
fnsave
in
pop
jb
sti
cmp
pop
lret
out
add
jb
insl
fwait
imul
idivl
lock
push
test
jg
adc
cmp
lcall
repz
insb
ja
sbb
incl
pop
hlt
neg
inc
loop
sbb
aas
xor
inc
movsl
and
push
ja
shlb
push
adc
aaa
lcall
cli
loop
dec
lcall
mov
adc
mov
test
sbb
adc
pop
std
mov
test
movl
fsubs
call
jle
inc
out
lods
aaa
or
out
cmp
ds
out
je
push
leave
ds
test
cmpsb
jb
popl
inc
mov
les
push
in
insb
lea
mov
lcall
jo
xchg
mov
fidivrs
xor
sbb
lcall
int3
mov
repz
ficoms
notl
fidivs
lock
jl
mov
pop
sbb
dec
sbb
and
lcall
lea
sahf
and
mov
out
iret
mov
and
pop
cmp
lcall
bound
or
ss
mov
adc
pop
mov
lcall
cmp
mov
add
sub
addr16
mov
stos
in
fcoml
add
sbbb
xlat
jle
flds
jnp
stos
faddl
pop
mov
test
mul
enter
je
test
pushf
cmp
dec
shlb
fwait
out
sahf
dec
mov
lss
or
mov
adc
sbbl
mov
imul
ds
sahf
repz
cmp
ret
push
inc
jne
mov
shrl
cmp
fstl
mov
lcall
add
fmull
add
cmpl
sbb
dec
lods
cmpsl
ficoms
fs
pop
shr
outsb
decb
mov
les
ljmp
in
xor
lcall
cmp
test
in
lods
aas
sahf
cmp
adc
cs
mov
inc
imul
loopne
jecxz
cmpsl
inc
mov
and
ds
xchg
test
fisubrs
repnz
int
faddl
andnps
ds
add
jmp
inc
in
rcrb
fdivrs
shrl
cmp
dec
js
lret
lcall
jle
stc
rclb
ds
and
and
arpl
inc
nop
lss
lods
cmp
dec
xchg
in
mov
in
ljmp
repz
lods
jge
mov
cli
xchg
xchg
in
pop
sti
mov
fmull
inc
and
aas
imul
sbb
in
adc
add
mov
fnstsw
and
insb
dec
xor
jae,pt
and
and
fiadds
jle
lods
or
jae
dec
inc
inc
fldl
and
adc
dec
jno
aad
dec
outsl
lret
cmp
std
movsl
sti
test
in
mov
jo
xorl
cmpsl
sarb
scas
xchg
pushf
arpl
adcb
xchg
mov
mov
jae
push
mov
ljmp
pop
movl
or
sub
cs
push
mov
push
pop
cmp
adc
stos
fsubrl
inc
cmpl
mov
mov
fisttps
lret
ja
loop,pt
fs
cwtl
shrb
mov
xor
aaa
mov
cmc
cmpsl
mov
push
push
movsl
fdivl
test
daa
ds
sbbb
cmp
aaa
or
pop
lods
loopne
addr16
fstpl
loope
aam
jb
jne
push
lahf
fisttps
ljmp
or
xchg
mov
lret
fisttpll
fsts
pop
or
xchg
and
lahf
ljmp
push
adc
dec
sahf
jns
sahf
stos
dec
xchg
inc
sarl
cmp
sbb
dec
rclb
xor
enter
aas
iret
mov
dec
mov
sub
mov
jmp
mov
mov
inc
nop
lods
jno
lahf
jp
test
and
and
jp
pop
test
inc
enter
push
sub
aaa
mov
imul
aaa
cmpsl
pop
cmp
push
into
jbe
repz
dec
inc
inc
mov
cmp
xor
jecxz
mov
or
pop
sahf
push
cltd
xor
add
pusha
xchg
fs
jecxz
iret
inc
inc
sub
pop
popa
xchg
in
jb
jbe
mov
outsb
dec
pop
lods
push
add
dec
pop
inc
xchg
mov
lret
push
lcall
pop
mov
cmpb
lods
jle
xchg
lcall
je
fstp
adc
das
adc
sbb
pop
mov
or
cs
test
pop
addr16
adc
pushf
ret
dec
inc
and
std
jnp
mov
push
scas
jbe
fdiv
imul
add
and
dec
jns
push
pop
jne
scas
add
inc
push
pusha
test
jno
push
aas
insl
push
stc
enter
mov
sub
inc
out
popf
rorl
jbe
outsb
pop
addb
xor
int
loope
lea
add
popf
addl
mov
lcall
xchg
addl
std
outsb
add
stc
popf
inc
aad
ds
in
push
frstor
xor
add
cmc
ds
or
imul
xchg
xor
adc
xchg
rol
jo
xchg
data16
xor
outsb
or
inc
or
jmp
sbb
sbb
jnp
in
xorb
sub
repnz
loop
ret
xor
mov
sbb
add
adc
sbb
sbb
pop
ljmp
sub
mov
ja
lret
shll
lret
sub
sahf
sub
pop
add
pop
or
clc
aaa
test
cmp
xchg
push
aas
aad
lret
lods
pop
in
xorb
ljmp
pop
ss
or
push
addr16
test
daa
fucom
jnp
es
scas
push
push
pop
mov
sbb
aas
imulb
and
dec
add
int3
sbbl
mov
cli
addr16
inc
loope
pop
js
movsl
inc
pop
sti
add
fwait
or
fcomps
shr
iret
in
loopne
aad
outsl
ja
insb
pop
inc
inc
mov
test
jno
adc
test
adc
test
ficoml
jns
adc
jg
pusha
jae
pop
jb
out
nop
mov
adc
pop
and
stos
xchg
sbb
cltd
jae
sarb
ljmp
fdivl
testb
mov
stos
push
call
jne
ds
pop
add
adc
jle
test
or
pusha
mov
push
loop
xchg
pop
or
mov
sub
fistpll
or
enter
pusha
fstl
bound
mov
sub
cmp
sbb
pusha
aaa
cs
xchg
pushf
test
cmpl
lods
stc
or
push
outsl
popa
sbbl
cmp
inc
inc
icebp
xor
sarl
daa
lock
jmp
push
cwtl
pop
scas
aas
aas
xchg
out
ret
in
cs
push
popf
push
jae
jnp
mov
insb
std
dec
sbb
fdivl
outsl
call
scas
jae
pop
mov
mov
repz
cmpsl
in
and
sub
rolb
test
xchg
push
mov
arpl
addr16
mov
fs
stc
mov
push
push
cld
jge
out
test
call
ds
imul
adc
ds
std
mov
cmp
ret
xor
outsb
adc
loop
jns
sti
pop
inc
mov
add
psubq
cmp
daa
iret
faddl
out
fnstsw
test
xor
push
das
sbb
add
movsl
es
mov
movsl
push
in
or
inc
aad
adc
xor
lds
pop
sbb
ds
mov
push
popf
add
mov
mov
or
inc
scas
xor
stos
fistpl
sbb
cwtl
cmpsb
jl
daa
loope
mov
xchg
xchg
sbb
jmp
jge
je
add
in
mov
nop
add
in
pop
pop
fmull
sahf
adc
or
inc
clc
mov
and
das
mov
fstpl
xchg
repnz
sub
add
pop
mov
lret
pop
pop
in
xor
sub
inc
daa
xor
stos
movsl
mov
dec
pop
ret
adc
mov
mov
sbb
add
cmp
pop
sub
cmp
loopne
aaa
mov
fstpl
lcall
fmull
cmpsl
fildl
cmp
call
int
cmpsb
clc
lock
pop
cmp
adc
jno
fdivl
test
dec
andl
shll
popa
jp
aas
test
faddl
ja
fsubrs
cmp
push
outsl
push
ds
dec
loop
mov
lret
jae
ja
or
push
outsl
lcall
mov
int
into
jns
cmp
negl
mov
push
dec
cltd
in
shrb
lcall
aaa
fisubl
inc
mov
push
out
push
outsl
cs
sbbw
fld
imul
inc
jecxz
pop
incb
sahf
out
imul
inc
les
out
imulb
sub
mov
ret
pushf
jg
mov
sbb
das
dec
daa
lods
inc
inc
iret
mov
andl
movsb
lea
mov
inc
dec
sbb
inc
push
js
jle
in
add
pop
data16
push
fdivl
sarl
push
pop
jnp
xlat
cmp
fmull
pop
fisubs
push
sub
mov
mov
repz
icebp
sbb
xor
repz
imulb
aaa
aad
and
jp
hlt
cmp
cmp
hlt
popa
adc
int
out
loope
aaa
sahf
pop
mov
frstor
or
bound
inc
roll
mov
fstl
lret
cmovp
gs
mov
sbb
cmp
neg
pop
sub
jecxz
or
jp
and
and
mov
aam
push
add
mov
cltd
pop
pusha
aaa
cmp
cs
cmp
jbe
push
jns
testl
sub
popf
bound
fildll
cltd
shlb
mov
ds
inc
push
lods
insb
or
sub
and
sarl
mov
repz
enter
std
outsl
daa
lcall
inc
mov
mov
clc
add
pop
xor
xor
fnstsw
inc
or
xor
pushf
mov
pop
cmp
inc
push
dec
loop
ds
in
fs
jb
mov
mov
sub
lods
ret
pop
cmp
dec
loope
outsb
xor
orb
jmp
pop
lret
aad
testb
test
ror
cmp
mov
mull
lds
stos
or
sub
or
sbb
fstps
inc
ret
jne
and
dec
push
das
jbe
les
ds
icebp
in
pop
pop
test
in
sub
fs
pusha
ds
out
clc
mov
dec
pusha
xchg
stc
imulb
sahf
or
ds
xor
push
rorl
mov
cmp
cli
pushf
add
daa
jg
xor
leave
aaa
fstl
push
fwait
xor
add
jecxz
lcall
cmp
pop
sahf
dec
fcmovb
test
cmp
cld
inc
std
push
das
mov
scas
sub
lahf
pop
insl
ficompl
ds
and
ret
or
cmp
add
bound
sbb
popf
sub
ret
push
pushf
lahf
ret
mov
aas
sub
lcall
int
or
xchg
ret
and
cmp
xchg
cwtl
cmc
lods
aaa
lret
insl
frstor
mov
cltd
mov
out
inc
ds
leave
inc
sbb
or
sub
stos
sarb
ret
mov
pop
hlt
leave
shrb
sbb
imul
jne
dec
mov
es
lret
rcr
xchg
std
push
aaa
xchg
lods
fwait
pop
xor
xor
mov
gs
mov
es
scas
mov
xchg
or
imul
adc
dec
xchg
and
cmp
ret
mov
repz
pop
pop
ds
outsl
loop
dec
dec
fsubrl
imul
dec
mov
iret
gs
clc
lret
test
add
mov
loope
push
jle
ror
cmp
test
movsl
mov
fiadds
and
fdiv
popf
push
faddl
adc
ds
lahf
mov
inc
aaa
add
cmpsb
fildll
jae
and
call
aad
lret
mov
fdiv
lods
mov
cltd
arpl
into
ret
sahf
fcoml
mov
stos
jecxz
cs
adc
mov
iret
add
jo
hlt
aas
adc
aam
inc
cli
sbb
mov
mov
ja
repnz
scas
xor
adc
fcomp
and
and
adc
jp
ds
insl
or
mov
xchg
mov
mov
or
push
mov
sbb
rcrl
mov
mov
pusha
mov
lcall
jae
fdivl
and
xchg
push
dec
dec
mov
or
cmpsb
pop
push
xchg
fidivrs
pop
popf
out
pop
mov
dec
lcall
jge
push
sub
ja
insb
xchg
mov
add
and
sub
mov
cmp
inc
mov
cmp
cmp
cmp
adc
repz
cmp
fwait
cmp
repz
fstpl
ds
inc
adc
jmp
jp
mov
push
loope
hlt
xlat
aaa
push
imul
lods
or
jne
insb
push
addr16
cmp
cmp
test
sbb
mov
in
jo
and
aaa
jne
shlb
orb
repz
call
pop
mov
mov
lcall
cmp
ficoms
jmp
popf
scas
ret
lcall
and
adc
push
pop
jmp
mov
lahf
add
cmpsb
mov
dec
stos
fldenv
push
mov
mov
in
cmp
lret
rolb
mov
sub
cmpsb
jp
cmp
and
push
cmpsl
push
lea
cmp
loopne
aaa
int
popf
das
mov
test
pop
dec
aas
popf
movl
inc
xchg
iret
daa
arpl
lcall
pop
stos
lods
xchg
sub
xchg
imul
inc
inc
sbb
mov
popf
inc
mov
lcall
ds
jecxz
insb
adc
mov
dec
stc
repz
mov
std
pop
aaa
xor
pop
xor
out
or
insb
sahf
mov
mov
bound
fnsave
pop
pop
inc
lea
fsub
cmp
imul
dec
scas
insb
jnp
mov
sub
pop
jg
pop
gs
sbb
jmp
adc
sub
stc
sub
sahf
xor
xcrypt-cfb
cmpsl
mov
xor
mov
fucom
xchg
add
mov
cli
push
lcall
push
dec
insl
lods
js
push
add
push
and
imul
enter
jg
in
lcall
inc
sbbb
or
in
jmp
pop
das
jns
jns
xor
cld
push
jge
sbb
lret
xor
xor
pushf
movq
adc
sbb
push
xchg
out
fwait
mov
inc
lds
icebp
in
js
fstpl
icebp
nop
and
push
dec
ds
mov
iret
aaa
sub
cli
pop
or
sbb
lcall
inc
test
inc
push
int3
fdivl
aaa
adc
aam
lcall
and
jle
add
clc
dec
lods
mov
addr16
xchg
mov
push
sub
out
adc
push
and
cmp
push
lahf
sbb
ds
fstl
stos
or
ds
stos
inc
iret
loopne
pop
and
inc
iret
sbb
incb
enter
push
push
mov
gs
fwait
bnd
or
cmp
imul
cmp
inc
mov
sahf
inc
lea
insl
xchg
push
and
mov
ret
add
xchg
cmp
aaa
xor
inc
jno
repz
insb
mov
in
scas
jmp
daa
dec
fsubrl
push
cmpsb
fmull
std
or
aaa
out
loopne
xchg
jecxz
cmp
rcrb
ja
ds
mov
push
std
mov
and
xchg
mov
add
aaa
nop
inc
xlat
mov
push
push
lcall
out
pusha
and
sub
cmp
xlat
out
push
fstpl
mov
inc
test
adc
gs
hlt
pop
inc
sub
add
sub
mov
inc
cmpsb
cmpsl
cld
pop
out
in
jg
cmp
ds
ds
jns
or
and
xor
dec
push
mov
out
bound
jmp
dec
cld
fidivrs
jnp
mov
push
jle
in
fsubrl
aam
lea
jae
adc
pop
xor
sahf
pop
cmpsl
add
jl
mov
cmp
cmp
fwait
cltd
dec
pop
in
das
pop
shll
imul
or
call
mov
push
mov
stos
flds
lods
xchg
enter
inc
aaa
adc
push
inc
inc
lcall
jae
mov
fimuls
pop
in
mov
and
xor
bound
ljmp
mov
in
cs
ret
mov
setnp
rol
bound
cmc
and
jbe
pop
das
mov
adc
push
cmp
or
add
adc
lds
aam
cwtl
adc
and
int3
ds
dec
out
cmp
and
lea
jle
dec
loope
or
or
jb
jecxz
push
xchg
int
cmpsb
mov
sbb
mov
inc
jo,pn
cmp
sar
xchg
mov
jl
add
mov
mov
pop
rcll
jge
pop
icebp
sbb
lahf
and
int
fdivs
idivb
clc
pushf
cmpsl
test
xchg
fistpll
shlb
loope
pop
xor
stos
xchg
pusha
in
pop
lea
mov
lods
lcall
cmpsl
fcoml
sar
aam
jmp
ds
push
arpl
out
popa
loop
mov
sub
sahf
xor
and
mov
lcall
roll
mov
or
push
xlat
fadd
lahf
andl
js
push
setp
cwtl
sbb
push
xor
fistps
ljmp
cmp
pop
jge
jmp
ss
pushf
fdiv
addl
inc
enter
mov
sbb
sbb
push
aas
sti
dec
test
mov
xlat
aaa
mov
mov
mov
jno
mov
xchg
cld
xor
xor
sbb
cwtl
cmpsl
aaa
scas
xor
push
adc
in
inc
mov
sbb
fcompl
call
or
push
sti
daa
fisttpl
lcall
cmp
cld
test
int3
lcall
lret
mov
aas
aaa
jb
pop
incb
lfs
inc
imul
aas
pop
out
mov
inc
jmp
jb
jae
daa
mov
add
mov
scas
cli
inc
repnz
fsubr
fcoml
jecxz
sbb
mov
fs
hlt
mov
loope
stos
data16
sti
fs
xchg
les
cmp
dec
ds
rol
test
jl
inc
out
es
sarl
cli
xor
jnp
pop
pusha
inc
scas
xor
jne
cmp
mov
mov
pop
or
cmp
mov
mov
icebp
mov
loop
dec
aaa
jno
cli
js
nop
out
popf
fs
in
bswap
dec
push
cmp
shll
and
ljmp
fadds
test
fdivl
inc
sbb
inc
loop
nop
push
movsb
ds
daa
mov
pop
addr16
dec
adc
adc
or
lods
mov
aas
repnz
add
jmp
in
mov
lcall
jle
fnsave
pop
add
test
mov
lret
fwait
repz
push
lock
xor
test
ret
mov
lods
out
xchg
bound
sub
adc
lret
clc
push
out
pop
ret
sbb
in
jge
test
movb
jno
iret
mov
adc
or
lea
push
frstor
mov
inc
mov
ds
adc
jne
fadd
arpl
mov
popa
lcall
jl
fmull
push
adc
sbbb
xchg
mov
lcall
imul
fiadds
mov
fldl
mov
mov
cmp
push
es
sbb
mov
adc
ljmp
out
adc
xor
lock
push
aam
inc
daa
arpl
leave
pop
lcall
sub
sarb
xor
mov
lcall
inc
imul
xor
or
loop
or
pop
clc
push
dec
faddp
fidivs
mov
mov
jp
rcrl
xchg
mov
push
xchg
aaa
out
jae
mov
out
or
pop
mov
inc
daa
push
ljmp
in
mov
xchg
adc
mov
or
sub
mov
pop
mov
insb
je
popf
out
out
push
dec
sub
push
push
xchg
cs
inc
out
pop
push
js
or
mov
and
mov
mov
or
mov
dec
mulb
dec
mov
sub
test
in
push
icebp
mov
mov
mov
jne
xor
ljmp
or
dec
inc
in
dec
jb
push
scas
icebp
cmp
sbb
inc
leave
mov
loopne
push
mov
icebp
inc
pop
dec
repnz
jp
outsl
mov
ds
pushf
xor
aaa
addb
cmpsb
cmp
cmp
lahf
inc
and
rcrl
rol
inc
jmp
sbb
fimull
sub
xor
test
xchg
pop
mov
fsubl
lcall
ds
push
adc
scas
rcrb
cmp
jg
mov
enter
jb
frstor
lret
outsl
and
push
dec
mov
mov
xor
insb
loopne
xchg
scas
incl
push
cmp
mov
aam
or
push
dec
les
jge
fistps
cli
xor
mov
add
aam
fstpt
inc
pop
inc
sub
out
mov
mov
ljmp
cmp
mov
xchg
inc
ja
out
cmovle
int3
bound
repnz
cmp
jne
cmp
xlat
xchg
cmp
fwait
or
mulb
xor
sbb
sbbl
mov
xchg
bound
push
add
mov
test
xchg
ds
jecxz
jae
out
pop
data16
ljmp
in
xchg
sub
rol
outsb
xchg
xor
xchg
lret
mov
and
jecxz
push
dec
pop
mov
jge
sub
out
aaa
test
and
pushf
mov
cli
fstl
add
jle
and
mov
jl
and
les
ss
pop
xlat
fidivrl
inc
sbb
cmp
aaa
and
push
int3
xchg
lcall
ja
cmpl
cmpsb
stc
sub
inc
popa
inc
xlat
loop
hlt
and
filds
xchg
push
and
push
add
lcall
sub
shr
jne
stos
push
sti
push
inc
adc
in
fwait
pop
pop
inc
jl
mov
inc
add
aas
mov
xchg
and
fldl
bound
ds
xchg
insl
xchg
dec
sub
fdivl
push
std
ds
mov
cmp
push
aaa
dec
xor
mov
jb
ja
jbe
stc
xor
adcl
repnz
and
mov
insb
xor
cltd
stos
sahf
int3
addb
pop
and
ror
pop
nop
sti
push
pop
mov
repnz
cmpsl
dec
jecxz
mov
faddl
cwtl
jns
popf
fsubr
pop
mov
pusha
pusha
jle
push
fisubs
cmp
xchg
dec
or
adc
xrelease
inc
aaa
add
call
test
xchg
popf
sub
cmp
jg
das
adc
ja
pop
dec
xchg
ret
pop
scas
mov
add
push
cmp
jne
pop
fucomi
mov
jbe
dec
mov
jmp
pop
inc
pop
lds
int
and
loopne
mov
enter
leave
les
test
inc
cmp
loope
mov
mov
mov
jbe
sub
dec
adc
jmp
sbb
pop
clc
xor
add
cs
scas
inc
dec
sub
cmc
inc
and
xchg
and
aaa
and
push
cmp
jp
inc
mov
fnstsw
mov
rcrb
fwait
insb
dec
pop
xchg
cmp
pushf
fwait
idivb
cld
je
pop
lcall
in
shl
jge
clc
xor
fdivp
xchg
dec
ds
mov
das
ret
aaa
mov
sti
mov
lcall
repz
nop
inc
xchg
push
push
push
xlat
dec
ds
iret
jl
adc
add
mov
xchg
jb
in
xchg
sub
sarb
xchg
mov
push
fs
fchs
sbb
inc
adc
push
add
fcompl
or
lret
xchg
push
aad
andb
insb
test
xorl
push
pop
add
mov
push
test
popf
adcb
cmp
xchg
push
loop
push
fs
dec
ds
mov
outsl
inc
dec
in
lea
jb
push
lcall
sub
or
lock
clc
ja
outsb
push
mov
mov
out
orb
adc
cmp
ljmp
stos
jne
add
jmp
int
mov
in
mov
popa
jg
call
iret
dec
into
fcoml
mov
jmp
or
scas
or
inc
inc
xchg
insb
dec
inc
xchg
fdivl
fwait
test
stc
lods
dec
pop
push
das
push
mov
fwait
in
mov
push
mov
fnstcw
mov
dec
imul
cld
jmp
enter
cli
ljmp
stc
add
cli
push
push
xchg
les
mov
fwait
cmpl
cmp
inc
mov
sub
das
or
idivb
test
dec
loop
pushf
sti
sbb
sub
mov
cmp
notb
ds
xor
fwait
cmc
mov
pop
pop
icebp
incb
sbb
lds
cmp
pusha
ret
xchg
ds
mov
adc
shll
imul
mov
and
dec
sbb
pop
adc
dec
inc
repnz
mov
or
sbb
push
pushf
push
enter
jns
scas
repz
arpl
push
push
outsl
pop
hlt
jns
sbb
dec
out
sub
pop
je
adc
out
jnp
sbb
or
and
cli
dec
dec
fs
scas
dec
cmpsb
into
ds
sbbl
imull
mov
push
pop
stc
dec
pop
shl
inc
xor
mov
adc
jp
aad
dec
ds
fwait
pop
mov
aaa
das
sub
sbb
rolb
test
lock
lods
mov
and
nop
popf
fstpt
loope
out
or
dec
pop
mov
in
icebp
testl
stos
cmp
and
ds
push
inc
xorb
aad
sahf
in
sbb
sti
add
mov
rcr
sbb
jb
sbb
mov
xchg
pop
test
mov
xor
lcall
mov
shrb
sahf
pusha
add
xchg
jecxz
cmp
clc
inc
imul
arpl
pop
pushf
aaa
scas
dec
lea
adc
pop
out
sbb
pop
jmp
lock
js
mov
bound
aaa
jmp
jns
pop
mov
in
addr16
ja
add
mov
adc
enter
mov
fs
int
outsb
mov
rolb
movsb
ret
ja
scas
imul
push
add
imul
repnz
testb
jle
bound
ds
bound
in
cmp
mov
and
iret
xchg
mov
mull
cmpsl
popa
xlat
jp
xor
jno
in
push
mov
lods
insb
insb
jp
rcll
cmp
neg
stos
jp
mov
inc
cmp
jle
add
and
lcall
filds
fnstsw
mov
jno
imul
aad
les
add
jmp
fwait
push
push
lods
sub
mov
sbb
dec
fimuls
xor
mov
cmp
pop
sbb
push
popf
dec
push
cmpsb
and
movlps
aaa
inc
inc
or
or
xchg
xor
mov
adc
test
mov
popf
dec
bound
mov
dec
push
bound
fwait
popf
dec
cmp
or
push
aaa
mov
in
xor
sbb
out
mov
movsb
scas
aas
push
mov
xchg
or
fldt
mov
xor
cmp
push
pushf
cmpsl
jbe
push
sub
jle
ds
mov
sub
dec
inc
out
and
ds
jne
jmp
dec
jmp
loopne
popa
into
push
dec
test
nop
idivb
push
testl
add
sbb
jo
icebp
fsubl
sbb
xchg
aam
lods
dec
hlt
scas
cmp
inc
pop
fiaddl
dec
stos
mov
rclb
push
cmc
mov
dec
sbb
sbb
push
divb
aad
out
mov
push
pop
stos
jne
push
lods
add
imul
out
push
iret
dec
pop
xchg
iret
inc
frstor
arpl
cmpsl
ds
or
push
mov
push
imul
fistps
gs
pop
push
push
sub
cmp
popf
jmp
cmp
and
pop
inc
fcomps
ljmp
rorl
add
pop
ja
aam
push
addr16
jmp
push
mov
incb
test
and
inc
lcall
jae
push
mov
lcall
imul
mov
mov
cmpb
push
inc
rcr
and
setbe
pop
cld
jb
mov
cmp
pop
jle
movsb
faddl
cmp
daa
mov
pusha
mov
push
sub
jecxz
cmpsl
jl
dec
inc
sbb
test
lock
repz
fisttpll
jnp
mov
rcrb
dec
das
shll
xorb
pusha
mov
sarl
mov
orps
pusha
inc
inc
lcall
push
cs
jl
lds
inc
cmp
or
and
cmp
subb
or
mov
gs
lock
jb
add
xor
sbb
aaa
cli
lcall
lcall
inc
test
push
inc
addl
pop
mov
ds
dec
les
jbe
pop
mov
cmp
push
jp
aam
outsl
aaa
in
jnp
int
jge
mov
pop
sbb
sub
addr16
cmp
mov
fs
mov
mov
xchg
mov
mov
movsl
clc
jg
pop
icebp
cmp
pusha
cmpsb
xor
mov
push
fisttpl
loope
cmp
inc
les
or
pop
jbe
cmp
push
pusha
mov
push
inc
fcomps
popa
jle
fwait
dec
sub
jmp
adc
dec
xchg
inc
sbb
mov
repnz
xchg
jo
jne
push
mov
add
cli
push
pop
pusha
orl
test
mov
sti
jle
pop
pop
mov
clc
pop
and
push
es
aaa
mov
lods
ja
mov
xchg
push
popf
hlt
mov
rcrb
sbb
int
ds
sub
dec
loop
das
cmp
pop
dec
addl
or
fmul
pop
loope
mov
les
jg
lods
pop
sbb
test
jno
stos
ds
mov
cmp
aaa
ds
and
xchg
test
ds
lret
inc
xor
lcall
dec
sub
mov
out
popl
pushf
fs
mov
xor
aad
push
ja
fadd
or
scas
mov
test
xchg
fmuls
out
mov
out
pop
lahf
fmuls
pop
and
dec
inc
addl
aaa
fcmovnbe
jno
push
inc
test
add
jle
es
insl
popf
jmp
je
pop
inc
sub
outsb
mov
dec
pop
xor
mov
in
fwait
jb
pop
out
int
in
add
stos
jle
push
jmp
sbb
add
faddl
rolb
mov
add
cmp
push
cld
mov
xchg
and
pop
dec
aaa
and
shlb
iret
das
dec
je
movsb
jno
loop
shr
ljmp
ljmp
jb
cmp
pop
push
out
sbb
mov
xchg
ljmp
jo
jne
pop
or
or
mov
sbb
lods
inc
lret
das
fildll
sbb
ja
cli
cmp
jnp
cltd
test
fisubrs
fisttpl
add
lods
mov
movsb
leave
adc
addr16
adc
xlat
and
lahf
sbb
pop
dec
lcall
inc
jl
xchg
mov
pop
dec
cmp
or
xor
mov
call
daa
daa
aas
jmp
popf
lock
mov
or
test
or
sbb
jo
sti
in
xor
ret
mov
inc
mov
je
inc
mov
add
xor
add
inc
jmp
popa
fwait
aad
adc
inc
mov
std
push
aaa
push
inc
add
gs
leave
std
fdivr
mov
lods
add
js
mov
sub
cli
cmpsl
loop
cmp
mov
pop
pop
mov
inc
in
lock
push
pop
fstpl
popa
dec
or
mov
jge,pt
in
aam
push
ljmp
mov
jae
xchg
insl
push
movsb
loopne
call
add
lock
and
mov
mov
jbe
xchg
enter
clc
loopne
rcrl
iret
or
mov
jmp
cmpsb
inc
shl
sarl
mov
mov
movsb
or
jo
cmp
loopne
push
loop
jbe
outsl
lods
jmp
out
nop
dec
inc
mov
add
mov
push
sbb
mov
and
pop
mov
jp
mov
pop
out
vrcpss
mov
mov
xor
bound
rorb
aaa
dec
mov
cmp
pop
add
int3
es
lcall
outsl
out
pop
dec
cmp
dec
lret
in
cmp
mov
jecxz
movsb
mov
adc
pop
inc
repz
lds
imul
lcall
xor
fdivr
mov
fsubs
bound
ds
mov
scas
jb
jne
movsl
or
loopne
and
pop
inc
outsb
cs
aad
jle
jo
pop
inc
pushl
pop
pop
jg
test
push
fistpl
out
enter
or
jne
pop
in
lods
dec
add
rolb
test
js
or
cmp
adc
mov
sub
adc
xor
sub
xchg
mov
mov
ss
loope
mov
mov
xorb
xchg
test
adc
jmp
pop
mov
cli
lcall
sbbl
jmp
push
cmpsb
scas
fs
pop
cmp
arpl
orl
daa
jae
stos
aaa
push
int
sub
mov
fnstsw
scas
fstpl
mov
jbe
jl
dec
lret
fiaddl
dec
adc
cmp
and
int3
mov
stc
xor
add
repnz
lcall
add
movsb
ljmp
fcompl
fildl
push
mov
sbbl
and
xchg
sub
in
mov
mov
call
mov
imul
pushl
sbb
aas
ds
inc
lcall
rorl
fadd
push
inc
jl
lcall
scas
push
jmp
aas
ds
and
call
gs
push
mov
cwtd
inc
bound
push
jecxz
leave
or
mov
xchg
lods
and
fwait
xchg
add
xchg
sarl
fists
or
int3
mov
popf
xchg
cmp
mov
pop
jl
psubq
inc
or
in
scas
call
out
pusha
push
std
or
mov
cmp
inc
pop
add
out
fmull
or
inc
fisttpll
inc
les
cmpsl
js
fisttpll
addb
jae
lahf
xor
test
shlb
adc
pop
sbb
cltd
pop
pop
loopne
jge
insl
mov
dec
pop
jmp
stc
jnp
jmp
aaa
stos
or
test
jge
add
lret
fldl
mov
aas
inc
adc
xor
int
jne
aaa
sub
jns
jmp
pop
test
loopne
xlat
lahf
pop
xlat
pop
es
push
xchg
push
adc
enter
aam
sbb
xor
aaa
add
enter
decl
lea
mov
cmp
leave
fldl
mov
dec
or
lds
cmpsb
fistps
jecxz
jp
xchg
shl
pop
loop
test
cmp
int
mov
pop
cs
fnsave
mov
and
pop
pop
cmp
and
or
lods
xchg
scas
xchg
es
lret
push
aas
sbb
inc
outsl
bound
ss
mov
push
push
ds
popa
mov
cmp
negl
rcrb
and
lock
movl
mov
mov
mov
jmp
jbe
or
in
sub
mov
arpl
ds
sti
pop
dec
mov
inc
cmpb
mov
and
aaa
lret
imul
pop
jecxz
outsl
es
jmp
sub
das
pop
int
loop
inc
mov
jb
imul
jns
shll
out
fbstp
ss
imul
adc
mov
push
data16
xor
sbb
xor
mov
jl
in
andl
cmpsb
mov
xor
scas
int3
inc
inc
cmpsl
test
insl
mov
jmp
cld
insb
scas
popf
test
fidivrl
sbb
lret
fistpll
test
mov
or
lcall
jb
jmp
sub
test
mov
pop
cmp
sub
insb
pop
add
out
lea
outsb
push
test
call
fstpl
jmp
jbe
mov
mov
lock
cmp
shll
fst
jne
jp,pt
fs
jl,pt
loopne
sbb
lds
fisubl
inc
cmp
lcall
sub
cld
mov
hlt
adc
rorb
mov
movsl
loopne,pt
sbb
mov
loopne
ret
icebp
cmp
ds
nop
fidivrs
icebp
xchg
dec
mov
arpl
push
pop
nop
lcall
dec
cltd
in
jno
and
imul
lea
ljmp
mov
int
imul
cmp
cmc
xor
popf
in
sbb
jo
mov
dec
call
jge
xchg
and
arpl
clc
cmp
xor
clc
xor
xchg
into
je
fmuls
xor
addr16
xchg
movnti
add
test
xor
push
shll
and
mov
dec
add
cmp
jecxz
or
mov
out
aaa
fs
mov
mov
pushf
lods
pushf
fsubrl
cwtl
outsb
sti
cmp
fsub
aad
inc
fsubrl
jnp
jg
mov
pop
enter
ds
icebp
inc
cmpsb
fadd
in
cmp
jecxz
ficompl
ds
lret
add
cmp
or
lcall
push
lcall
je
fst
pop
dec
rcr
add
daa
inc
fistps
into
sub
fucomp
cli
sub
je
jge
dec
sbb
rorb
adc
ja
faddl
pop
jp
aas
lods
mov
aas
sub
adc
lcall
add
pop
loope
cs
fcmovnu
popf
inc
sub
mov
sarl
fiadds
mov
lods
dec
push
subl
adc
jmp
sbb
xchg
ss
mov
pushf
push
outsb
in
cwtl
mov
push
add
orl
dec
pop
outsl
aaa
xchg
inc
aas
mov
insl
inc
sahf
and
cld
sbb
dec
popf
cld
lods
aaa
in
ja
pop
leave
push
imul
fdivrl
xor
jb
and
shll
and
into
dec
sbb
mov
cmpsl
and
jecxz
mov
add
jmp
insb
lcall
adc
scas
jp
dec
push
adc
daa
push
out
pusha
and
aaa
fsubrp
das
aas
pop
sub
push
int3
out
lods
in
cmc
addr16
dec
mov
sub
cmpsb
or
push
mov
pop
push
call
push
sbb
ljmp
push
arpl
adc
lcall
js
fstpl
dec
sub
cmp
xchg
sbb
into
push
mov
push
dec
roll
mov
jnp
jg
mov
stos
inc
sbb
in
les
stc
jl
test
mov
in
sub
xchg
pop
ja
bndldx
jne
std
mov
jmp
push
clc
out
mov
testb
push
xor
or
scas
sahf
mov
jo
adc
and
cmp
xchg
push
pop
aaa
mov
outsl
mov
sbb
push
aaa
mov
adcl
ja,pn
ret
and
fisubrs
jbe
cmp
fcomps
repz
fstl
das
shlb
in
and
fsubp
mov
or
stc
inc
das
sub
aad
sarb
mov
out
pop
fstl
dec
jae
and
pop
test
mull
dec
push
inc
lock
jg
in
ds
cmc
nop
sub
push
sub
fs
pop
lods
inc
clc
lea
test
flds
sub
fldl2e
pop
ds
pop
out
and
mov
out
scas
cmpsl
pop
and
mov
jge
loope
loopne
lcall
or
xor
jecxz
loope
cli
inc
xor
scas
clc
jns
imul
and
fnsave
lret
inc
xor
xor
cwtl
xchg
sti
ds
dec
in
fisttpll
iret
fs
loopne
loope
mov
imul
inc
mov
pushl
aam
pop
aaa
add
push
lret
cwtl
pop
cmpsb
and
fcoml
pop
mov
push
jl
movsb
jl
mov
idivl
cmc
leave
lock
clc
lods
in
aaa
fs
loope
in
inc
fsubrs
stos
inc
out
movsb
pop
inc
loope,pt
stos
pop
pop
insl
stos
mov
pop
mov
xor
add
fdiv
inc
gs
jecxz
pop
adc
cmpsb
fsubl
ss
aad
pop
jg,pt
pop
mov
cmp
call
pop
adc
jl
or
cli
faddl
jne
addb
hlt
mov
inc
in
aaa
push
gs
arpl
imul
pusha
das
mov
dec
test
push
and
mov
mov
lcall
push
movsb
lds
scas
sbb
and
ret
push
ficomps
movsl
pushf
and
out
sub
mov
dec
ljmp
sbb
jae
push
xchg
popf
jbe
cltd
mov
fadds
out
cmpsb
mov
es
inc
scas
ljmp
rcr
into
sub
popa
adc
lds
fisttpll
insb
subl
out
pop
pop
lahf
outsb
int
pop
mov
jp
ljmp
mov
xlat
push
mov
fcompl
pop
mov
daa
out
fwait
xor
iret
mov
bound
pop
xchg
addr16
mov
xor
ror
lret
popa
push
mov
inc
cli
imul
sub
flds
test
sub
lahf
sarl
int3
or
mov
pop
pop
cmp
inc
mov
jl
add
pusha
fisubs
xchg
push
repz
lcall
aas
mov
das
xchg
sti
scas
adc
jg
enter
sbb
mov
mov
pmullw
cmp
dec
out
fdivrl
popa
outsb
mov
into
ds
fs
ret
xor
js
movsl
leave
xor
dec
jbe
pop
shll
push
adc
or
idivl
cli
mov
gs
ja
mov
jle
or
push
fcomp
dec
or
sub
pop
roll
dec
mov
sbb
mov
cmpl
pop
aad
sub
andl
iret
jp
push
sub
push
ja
lcall
fdivl
xor
inc
lcall
cltd
fdivl
mov
sub
push
cmpb
pop
inc
popf
jp
iret
lcall
bound
cmp
ficomps
out
leave
adc
inc
test
pushf
dec
lods
in
out
outsl
mov
movsb
jg
lcall
jae
fstl
xor
jae
scas
mov
cmc
das
mov
fdivrl
and
xchg
jmp
ds
mov
aaa
jmp
or
cmp
sbb
or
xchg
xchg
inc
or
push
mov
cmc
mov
cmp
pop
out
pushf
lcall
cmc
pushf
loope
jg
pusha
mov
add
push
aas
lcall
cltd
jp
sub
pop
dec
gs
in
iret
cmp
adc
sub
in
popa
fisttpl
mov
jno
repz
dec
or
icebp
push
jae
sarl
cmp
fidivl
push
jae
pop
or
cmp
mov
mov
aam
idiv
xor
sbb
cmp
pop
ds
enter
fwait
in
push
movsl
sub
cmp
nop
mov
push
sbb
bound
shl
mov
push
add
add
imul
jmp
pop
mov
jbe
push
push
dec
cmp
dec
mov
fcompl
dec
cmp
ficomps
loopne
lcall
jecxz
fldl
sub
inc
mov
sbb
xchg
sbb
fucomp
dec
sbb
cld
addr16
in
or
ret
loopne
pop
movsl
lcall
xchg
jecxz
jp
mov
mov
sub
jecxz
pop
fimuls
xor
int3
pop
push
xchg
pop
pop
mov
sbb
fdivrs
in
aaa
xchg
fs
popf
dec
pop
or
cmp
mov
cmc
jns
and
mov
sub
incl
sbb
pop
cli
in
lock
mov
jmp
std
aad
pop
sbb
hlt
pop
cli
cmpsb
fwait
imul
dec
aaa
lock
xchg
in
jnp
mov
icebp
in
mov
inc
outsl
jne
dec
std
loopne
cmovbe
scas
xchg
in
aaa
push
or
sub
popf
sbb
pop
adc
out
fldl
sahf
movsb
sub
ljmp
sbb
notl
fistpll
adc
fsubl
and
rcrb
jge
cmp
fistps
in
call
mov
aam
roll
jno
cmp
xchg
mov
pop
add
les
repz
inc
sbb
int
in
cmc
mov
pushf
sti
ret
fwait
gs
outsb
stos
jp
movsl
shlb
adc
xor
fcoml
call
aam
cmp
fnsave
xchg
jno
insl
pop
insl
mov
mov
arpl
sbb
sub
jecxz
inc
arpl
js
scas
mov
in
icebp
mov
lret
push
xchg
cwtl
mov
aaa
sub
pusha
clc
je
es
mov
inc
mov
sub
or
sub
fucom
sbb
sarb
xchg
jecxz,pt
imul
jno
aas
lcall
mov
rcrl
imul
add
push
push
xchg
mov
ret
aaa
add
pop
fnstsw
addr16
lods
xlat
and
pusha
cmp
aaa
jg
dec
pushf
cli
lea
sub
daa
cmp
pop
int3
loope
adc
idivl
mov
push
xchg
push
xchg
push
mov
mov
icebp
pop
mov
cmpb
pop
in
in
lret
int
pop
outsb
pop
lret
flds
inc
fisttpll
pushf
xchg
or
jge
faddl
xchg
mov
xor
in
lret
and
popa
rorl
sbb
fcoms
cld
fwait
cmp
ds
test
in
sbb
sub
jp
and
mov
fdivp
push
mov
frstor
inc
ja
xchg
dec
xchg
mov
fdivl
push
in
enter
stos
pop
dec
xchg
ds
movsb
mov
lods
pusha
fbstp
mov
scas
andb
jg
pop
cli
mov
in
cli
cmp
inc
pop
mov
inc
add
and
aad
pop
cmp
fcmove
in
pop
loopne
add
imul
fsubl
pushl
sub
clc
xor
mov
or
push
sbb
cli
and
lcall
scas
scas
and
jno
or
pop
test
stc
adc
popf
push
adc
scas
mov
xor
ds
in
int
mov
or
lcall
shlb
scas
push
into
dec
popa
outsl
ds
loopne
pushl
xchg
lods
push
inc
inc
fstl
clc
mov
and
test
lcall
sarl
int
and
aaa
lea
add
mov
jbe
mov
inc
jb
or
jmp
setno
fidivs
dec
mov
push
out
jb
je
fsubrp
jge
pop
cmpsl
jns
mov
fstpl
aas
nop
in
rol
dec
push
sahf
imul
xor
ljmp
fst
add
jecxz
inc
dec
mov
pop
mov
flds
inc
inc
adc
lret
sbb
test
das
lcall
lods
xor
lret
hlt
or
jge
push
rclb
lods
pop
dec
pop
cmp
lret
call
ds
in
stos
popa
sahf
mov
pop
mov
decb
ss
std
lcall
cmp
decl
fistpll
lds
clc
ret
fst
push
mov
sahf
repnz
xchg
push
xor
out
inc
jl
cmp
testb
arpl
data16
sti
sub
xchg
inc
mov
mov
mov
outsb
dec
insb
jns
pop
cmp
test
mov
pushf
aaa
pop
int3
sarl
ljmp
sbb
jne
pusha
and
inc
mov
sbb
add
scas
repz
out
or
mov
cmp
inc
jmp
lds
sbb
filds
test
mov
fstpl
lds
mov
cmp
aam
mov
mov
int
lcall
add
in
les
mov
psllw
aaa
mov
repz
sub
frstor
loope
inc
xchg
lcall
fwait
std
mov
inc
popa
cmpsb
fdivs
inc
fwait
and
inc
fcompl
mov
push
mov
adc
mov
sbb
add
pop
ja
mov
in
mov
push
jb
popa
aas
into
imul
pop
sar
xor
lock
cli
aaa
push
es
popf
imul
xchg
in
decb
in
pop
daa
in
fsts
pop
lret
sub
cli
mov
sbb
mov
add
sti
cs
pop
sbb
sub
xchg
sbb
icebp
cmc
divl
in
js
inc
mov
pop
jg
out
fstps
push
fstp
repnz
cmp
or
xor
addr16
or
dec
dec
push
scas
pop
fstpl
das
pop
rolb
cmp
and
aaa
fistpl
sbb
mov
movsl
bnd
leave
faddl
addb
fcomp
lods
cmp
mov
ds
fadds
nop
jecxz
xor
lea
fstpt
ja
decb
mov
and
sahf
mov
sbb
fidivs
or
pop
lcall
pop
sahf
mov
mov
add
lcall
adc
fstpl
out
pop
bound
adc
sub
out
sbb
repnz
or
out
cltd
ja
pop
xchg
fstps
adc
shll
loopne
iret
or
sub
adc
enter
fdivr
jp
sbb
aad
sub
sbb
rorb
lret
jl
std
aam
pop
inc
into
push
adc
testb
push
pop
lret
jp
inc
aaa
lret
lea
jmp
lea
data16
aaa
push
xlat
shll
push
dec
js
mov
inc
push
xor
or
scas
arpl
cmp
clc
pop
xchg
movsb
mulb
fbstp
inc
xor
jno
push
mov
stos
aas
notb
mov
daa
jge
xchg
pop
pop
cmp
mov
fmul
cltd
and
inc
ds
fisubrs
scas
pop
iret
je
ljmp
cmp
jae
push
mov
xchg
sub
and
mov
push
dec
test
dec
dec
adc
scas
dec
mov
xchg
push
cmpsb
jb
je
mov
push
mov
call
lret
in
mov
mov
call
inc
add
pop
adc
insb
push
lods
bound
nop
aas
out
fs
in
jno
xor
cmp
mov
ds
ret
or
aaa
rolb
mov
clc
aas
or
es
adc
std
and
sub
rcrb
in
sbb
xor
or
daa
mov
test
sub
jecxz
or
xchg
dec
addl
mov
mov
fisttpll
pushf
inc
xchg
inc
sub
shrb
les
and
lret
adc
enter
sub
xor
mov
push
in
test
in
sub
push
adc
ds
cltd
fwait
inc
inc
repz
movsb
clc
scas
pop
cmp
cvttps2pi
mov
jb
addr16
cmp
inc
jp
dec
cmp
out
mov
loopne
outsb
stos
call
imul
insl
and
cmp
sar
xchg
push
lahf
fnstsw
add
dec
jb
cmp
mov
js
dec
loopne
inc
add
stos
stos
ret
fmull
int3
cmp
enter
cmp
pop
scas
xchg
mov
and
xlat
inc
sarb
fdivrl
ror
aas
cli
pop
mov
scas
mov
fistpll
mov
adc
sarb
and
add
hlt
dec
fstl
loop
sahf
mov
dec
pop
jnp
push
pop
pop
pop
test
sbb
leave
loope
ds
dec
aad
pop
lcall
enter
iret
roll
adc
lcall
dec
mov
xchg
outsl
repz
cmp
stc
mov
jle
test
fildll
push
sbb
or
lcall
ja
ljmp
out
pop
fcomps
mov
dec
mov
enter
ds
push
nop
add
roll
test
lcall
jno
out
and
test
cmp
out
add
popf
inc
adc
dec
out
inc
mov
push
das
cmp
xorb
mov
push
out
fldl
cmp
inc
dec
test
xor
push
enter
lcall
ds
sbb
shlb
push
jmp
cmp
out
dec
cmp
or
push
mov
lcall
jl
jmp
lods
cli
push
shlb
add
repnz
adcb
fldcw
push
out
into
mov
leave
mov
cmc
clc
scas
lahf
add
mov
inc
out
mull
iret
xchg
fisubrs
rdmsr
js
imul
fsubr
push
push
gs
popf
fsubrl
pusha
js
pop
inc
out
mov
push
add
lea
jns
int
mov
fcoml
push
enter
add
popa
repnz
xchg
icebp
jge
jno
js
mov
push
ret
lret
ds
or
mov
mov
cmpsl
aaa
out
add
dec
in
lcall
xchg
js
dec
sti
mov
pop
movsb
cld
dec
or
sbb
outsl
packuswb
cwtl
or
repz
inc
fwait
mov
push
mov
popa
aaa
lock
inc
pop
and
fwait
je
ret
in
call
jb
mov
and
loopne
xlat
lcall
loopne
sti
pop
leave
sub
dec
cmp
pop
add
inc
fisttpll
mov
loope
push
pop
adc
dec
js
fwait
pop
das
popf
in
cmp
scas
sbb
inc
stc
out
pop
mov
pushf
jae
fcoml
aaa
pop
loopne
fcmovnbe
adc
xor
push
inc
jle
dec
pop
cmp
cltd
rcrb
lret
int3
sub
push
push
sbb
mov
pop
popf
adc
sub
sbb
mov
or
jnp
and
push
xchg
pop
test
out
int
mov
lahf
inc
push
outsl
es
fsubrs
into
add
lcall
adc
faddl
loop
jno
testb
push
xchg
push
popf
xchg
cmp
dec
inc
stos
mov
jno
movsl
ret
dec
lcall
xor
fists
neg
rcll
mov
fisttps
cmpl
es
into
push
mov
add
pop
cmp
cmpsb
stos
xor
mov
xchg
into
sahf
fisubs
ljmp
rcl
cwtl
ja
adc
imul
mov
int
sbb
and
pop
imul
pop
dec
aaa
imul
xlat
int
outsb
add
or
pminub
xchg
or
aaa
jo
push
pop
fistpll
push
sub
jg
insl
movsl
push
orl
cmp
mov
and
inc
js
jle
or
data16
cmp
mov
xchg
mov
ret
add
xor
jle
pop
test
cmc
stos
push
mov
dec
ja
jbe
push
add
cmp
jp
addr16
fbstp
jb
fwait
cmpsb
inc
mov
dec
test
sti
cmc
jns
push
scas
mov
jne
mov
lcall
inc
push
cmp
pop
inc
lret
pop
adc
cmp
add
sti
xchg
insb
mov
pop
and
dec
dec
inc
or
daa
imul
inc
jg
sarl
lahf
mov
cs
daa
daa
loope
or
movsb
addr16
mov
outsl
cmp
sbb
ds
out
push
mov
and
sub
out
pop
cmp
xchg
mull
cmp
mov
or
out
icebp
jp
mov
jb
mov
or
push
lods
arpl
popf
iret
call
and
mov
js
out
jnp
sub
pop
xlat
movsb
ds
xchg
pop
push
lahf
inc
aaa
or
dec
push
fcoms
inc
pop
js
pop
hlt
stos
les
cli
mov
arpl
dec
pop
add
cmp
adc
add
push
cmpsb
push
jp
xchg
int3
lcall
les
in
fwait
jle
xor
sub
ja
xchg
push
pushf
aaa
mov
pop
cs
fwait
push
test
push
jns
inc
bound
test
mov
lcall
imul
repnz
call
xchg
ja
fwait
jmp
out
shrb
les
into
dec
mov
cmpsb
pop
lcall
inc
cmpsb
fcompl
push
sbb
cmp
adc
imul
mov
rol
outsb
mov
add
sbb
les
sub
fwait
test
inc
xchg
lcall
push
cmp
inc
pop
jo
popf
or
lcall
add
sti
inc
pop
bound
in
and
push
dec
lcall
pop
aad
push
pop
cmp
dec
push
imul
fmull
mov
pop
lods
inc
pop
cmp
jns
dec
jg
lahf
stc
imul
mov
sub
jmp
pop
mov
sub
sub
lds
lret
lret
or
ret
mov
lahf
sbb
mov
or
sub
loop
mov
dec
fidivrs
push
mov
jae
and
xchg
fwait
mov
pop
or
mov
pop
jae
jb
xor
fsubrl
sarl
cmp
iret
mov
movsb
ja
cld
xchg
cwtl
xchg
popf
pop
stos
and
pushf
dec
lcall
cmp
aas
sbb
pushf
xor
frstor
and
add
jae
push
lcall
inc
pop
sti
out
dec
sbb
stos
jecxz
test
ret
jo
inc
mov
call
js,pt
test
inc
es
cmp
sbb
cmp
cmp
aaa
pop
call
push
sub
push
add
test
cs
cmpsb
dec
sub
clc
cmp
dec
cmp
rorl
and
and
int
dec
lcall
jae
fnstsw
outsb
xor
mov
push
cmp
lock
test
or
push
pop
mov
fisubrl
repz
jl
scas
idivb
imul
arpl
mov
pop
add
inc
pop
sub
aam
lcall
push
movsl
fdivl
fs
pop
mov
inc
jae
add
mov
fistps
xor
mov
add
adcl
fidivl
push
push
mov
mov
pop
dec
in
test
or
adc
push
shrl
daa
sahf
xchg
daa
jno
fbld
pop
and
arpl
fstpt
fisttps
mov
cltd
movsl
lcall
jae
mov
in
jb
jbe
cmp
sahf
pop
ret
push
xchg
test
pop
cltd
xchg
lcall
sbb
imul
jbe
pop
mov
fwait
mov
fsubr
fldt
stc
pop
cmp
das
mov
test
rclb
decb
popa
cld
scas
pop
ljmp
movsl
cmp
lea
sub
popf
lret
jns
adc
into
mov
add
add
jg
fwait
push
xor
mov
loope
pop
fbld
insl
popf
mov
jb
shlb
dec
cmp
fmuls
inc
es
out
pop
push
add
mov
mov
dec
mov
sahf
mov
addl
sbb
mov
cmpsb
sub
jns
scas
insl
into
negb
loope
xlat
lods
mov
mov
sbb
jns
add
inc
bnd
mov
mov
xor
inc
jle
jg
cmp
cwtl
shll
lret
mov
aaa
je
mov
inc
mov
jle
cmp
movsl
fld
push
inc
cmp
movsb
ss
xchg
sub
mov
shl
mov
or
int
fstpt
mov
bound
xchg
dec
daa
fsubl
insl
mov
adc
xor
jp
movsb
negb
sub
aaa
imul
mov
mov
mov
sbb
frndint
xchg
add
mov
movsb
push
inc
bound
inc
lods
in
mov
cld
and
rcll
inc
rcl
mov
lcall
push
arpl
or
lods
inc
lcall
sub
lret
push
xchg
frstor
xchg
dec
jge
arpl
orb
fwait
xor
jae
jnp
xchg
fildll
dec
sub
repnz
aaa
sbb
cwtl
dec
mov
iret
rcrl
xchg
and
xchg
dec
aas
pop
fistl
repz
jo
lret
mov
add
pushf
jmp
and
js
xor
xor
or
sbb
jl
jp
loop
test
lcall
push
mov
push
cmc
mov
fldl
mov
mov
push
jle
or
cmp
dec
pop
loopne
cmp
fcompl
sub
xlat
lahf
sti
lret
xor
and
int3
pop
or
dec
call
std
dec
add
jmp
jg
lcall
mov
scas
dec
jae
jp
push
ret
loopne,pn
mov
mov
loopne
cmp
push
test
push
xor
lcall
adc
push
pop
cmp
dec
fisubrl
adc
loopne
outsl
les
lds
test
cs
cli
rclb
imul
stc
lea
daa
sbb
mov
and
leave
jb
sarb
mov
push
push
cmp
sub
sub
xchg
ja
fwait
out
add
test
js
mov
cmp
cltd
jmp
mov
dec
jno
sti
adc
lcall
pusha
jg
out
fcmovb
popa
xor
scas
aas
dec
xchg
stc
inc
pop
outsl
pop
inc
push
testb
xchg
mov
adc
mov
aaa
mov
imul
dec
mov
jecxz
stc
hlt
sub
mov
xchg
ja
in
movsb
fistps
mov
xchg
mov
fdiv
xchg
fidivrs
ds
popf
test
mov
stos
pop
sbb
push
cmp
mov
ds
cld
pop
sbb
cmpsb
cmpsl
lcall
fsub
pop
xor
test
add
data16
cmc
sub
aam
imul
aaa
mov
sub
xor
push
cmp
sub
mov
fisttpll
mov
xor
mov
cmp
cmp
jae
or
scas
ds
sbb
jge
pop
jecxz
cmp
mov
inc
push
jae
pop
out
push
iret
inc
fstp
dec
subl
cmp
xchg
out
pop
mov
stc
add
add
or
insb
lcall
pop
aad
pop
push
mov
jbe
popf
and
das
xor
jecxz
movsl
mov
popf
mov
loopne
cmp
cmpsb
xor
and
lret
and
pop
mov
push
jmp
mov
jge
cmp
adc
mov
adc
clc
aas
and
stos
or
xor
mov
mov
fldl
push
push
je,pt
repnz
mov
outsb
pop
fstps
xor
fmuls
push
ja
shrb
mov
cmp
fistps
and
pop
or
mov
sub
add
dec
lahf
adc
sbb
mov
push
sub
ss
andl
pushf
dec
sti
insb
jno
mov
add
sub
lret
mov
push
lret
dec
mov
shlb
loope
scas
aas
loope
js
dec
out
and
test
mov
mov
pop
adc
mov
fwait
jg
aaa
daa
mov
inc
mov
mov
imulb
in
xor
shlb
out
fdivrp
insb
mov
mov
mov
cld
out
xor
dec
mov
xor
mov
fadd
testb
inc
inc
push
pop
repnz
xor
insl
jecxz
inc
dec
lock
fbld
or
xchg
and
push
and
xchg
in
add
in
xchg
pop
ds
mov
in
ds
cmp
daa
and
pop
cmp
lock
sbb
mov
mov
cld
lcall
cmp
dec
fmuls
dec
cmp
lcall
es
clc
arpl
jl
push
frstor
fstl
call
sar
lret
lods
pop
roll
xchg
inc
icebp
sbb
mov
sbb
fisttpl
test
fimuls
pop
xor
xchg
push
and
jnp
mov
std
lret
ljmp
lcall
pop
push
ret
in
fmuls
inc
addr16
mov
cmc
add
and
je
leave
push
push
in
dec
ds
out
dec
pop
movsb
and
ds
pop
out
sarl
sarb
jge
or
aas
std
fmull
jge
mov
ds
sub
out
mov
hlt
insb
mov
je
cmp
sbb
pop
out
aaa
cmp
mov
test
push
gs
dec
ss
out
into
push
insb
aad
mov
cli
inc
jb
jb
ret
add
call
rclb
sahf
mov
in
lods
arpl
das
mov
ljmp
sbb
popa
inc
push
aaa
out
mov
test
xchg
lods
xchg
jbe
mov
dec
mov
jg
cmc
xchg
sbb
pusha
xorl
lds
ds
sarl
inc
aas
sub
test
jmp
cltd
das
pop
outsb
das
mov
pop
dec
mov
out
out
ret
in
lret
xlat
into
mov
push
lods
mov
add
fs
push
xchg
aaa
fwait
mov
fadds
daa
das
fiadds
lock
inc
sbb
pop
push
and
dec
call
cmp
mov
fmul
int
add
add
mov
hlt
jbe
cmp
in
out
aas
adc
loope
cmp
add
scas
sub
and
negl
dec
push
loopne
xchg
fdivs
adc
push
xchg
pop
inc
push
es
imul
cmp
inc
mov
pop
ds
movlps
push
or
inc
loopne
test
outsb
fs
jno
mov
mov
ja
adc
push
lcall
test
stc
xlat
fnstcw
stc
call
mov
ds
addr16
mov
mov
jmp
xchg
mov
mov
xor
ret
fbstp
leave
sbb
aas
xchg
stos
ret
aaa
push
mov
and
sbb
lcall
dec
mov
bound
mov
or
mov
push
sbb
lcall
adc
pop
dec
sub
int
mov
dec
inc
sahf
bound
jno
nopl
sbb
andl
push
popf
push
adc
xchg
pop
frstor
pop
shlb
mov
ds
cwtl
test
jg
xchg
out
fdivr
fstpl
push
jl
xor
adc
pushf
xlat
xchg
pop
leave
fsub
test
sub
daa
std
cmp
dec
push
sbb
negb
inc
and
cmpsl
stos
movsl
pop
mov
and
pusha
out
push
mov
cmc
fiadds
rcrb
pop
aaa
cmpsw
add
xchg
stc
pop
in
lcall
mov
fsubl
cmp
pop
and
aaa
ficomps
cmpsl
nop
ja
sbb
sbb
loopne
pop
popf
test
scas
cmp
in
mov
mov
or
push
mov
jo
adc
sub
mov
add
dec
adc
push
ds
push
dec
or
xor
sbb
xchg
sub
jle
rolb
add
cmpsb
and
gs
leave
clc
mov
aad
lret
test
out
dec
ss
sbb
dec
out
push
mov
lcall
ja
fcoml
xchg
sbb
mov
fdivl
imul
out
mov
mov
jae
mov
push
mov
movb
imul
and
pop
mov
jns
jge
repz
push
fmull
push
cmp
repnz
xchg
sahf
std
mov
jmp
push
sub
pop
outsl
dec
mov
pop
and
pushf
pop
xchg
daa
inc
fstl
nop
mov
push
lods
in
inc
add
or
cmpsl
push
push
fsubrs
jne
ret
cmpl
cmp
pop
outsb
repnz
jne
inc
inc
adc
fdivrp
pop
sub
ds
jmp
cs
lret
cmc
popf
or
lcall
sub
cmp
in
orb
cmp
ja
cmc
gs
std
shl
repnz
and
jb
sub
mov
inc
fiaddl
idivb
mov
lods
mov
insl
outsb
aad
sbb
cmp
sbb
or
pop
ds
aas
decb
mov
or
aas
popa
mov
test
push
ds
mov
std
cmpsl
push
frstor
aam
inc
cmp
shll
mov
fdivrl
xchg
insl
add
ljmp
aaa
outsb
mov
dec
xchg
idivl
mov
and
mov
mov
add
jo
jno
test
push
jge
popf
faddl
clc
sub
xlat
ds
cmp
js
mov
dec
mov
ljmp
test
in
sbb
jg
and
mov
fstpl
leave
mov
rolb
stos
adc
lods
inc
inc
and
fst
cmp
insl
loop
mov
pop
cmp
jmp
fisubs
push
mov
fmuls
sub
mov
adcb
inc
lcall
enter
popf
hlt
xor
ds
scas
pop
lret
xor
mov
sbb
lea
filds
inc
jbe
push
aaa
sub
lock
mov
sarb
add
push
add
mov
movsb
fiaddl
test
movsl
negl
and
sbb
jno
arpl
movsb
xchg
sahf
test
mov
je
mov
mov
adc
jne
pop
loopne
xchg
and
out
sbbb
jge
dec
dec
in
test
or
scas
clc
lods
push
fwait
test
cltd
mov
je
dec
push
cmp
jp
jmp
pop
mov
sti
clc
mov
std
aas
rcr
fcoml
insb
mov
mov
cmp
push
ret
jg
cli
std
test
in
dec
fistps
push
setno
fstpl
push
jg
sbb
cmp
add
ljmp
xchg
dec
mov
sbb
jo
and
or
mov
enter
jg
aaa
mov
or
push
repnz
shlb
push
mov
dec
aad
out
decb
sub
stc
and
popf
mov
cmp
add
jge
je
shlb
or
hlt
sbb
lret
xchg
jle,pn
pop
adc
xchg
jae
xchg
enter
addr16
lcall
loopne
fildl
jnp
pusha
jle
sbb
push
xchg
pusha
cmp
sbb
and
push
in
or
addb
lret
mov
fildll
mov
mov
cmpsb
add
push
cltd
repz
popf
mov
jno
fwait
dec
pop
or
cmp
pushf
mov
insb
xchg
push
sbb
xor
lcall
xchg
fmull
jl
std
rcrb
lds
aas
in
je
push
inc
incb
in
jne
loop
xchg
mov
aaa
pop
mov
in
push
out
rclb
fimuls
add
dec
lcall
mov
shrl
sub
out
inc
insl
divl
cli
rcll
push
dec
fldenv
ds
push
iret
and
inc
popf
es
loop
jecxz
mov
stc
ja
push
xchg
mov
sub
and
fwait
cmp
enter
outsb
fdivp
pop
and
push
sbb
jae
add
in
faddl
or
sub
das
inc
loope
pusha
xlat
mov
sbb
jbe
jb
cmpsb
test
sahf
jns
fisubrs
out
xchg
cmpsb
inc
sub
lock
pop
movsb
jns
cmp
rcll
mov
adc
mov
xor
lods
and
inc
aas
lahf
out
or
dec
pop
fstl
cld
fcoms
mov
rorl
or
mov
test
cs
adc
stc
or
popa
mov
xchg
pop
add
inc
or
or
cmp
push
or
or
mov
xor
sub
arpl
cmp
xchg
jno
inc
xor
popa
mov
add
sub
sbb
inc
and
loop
arpl
mov
push
ss
sbbb
ds
jg
mov
adc
cmp
sbb
jecxz
ficomps
add
dec
sub
jge
dec
sub
faddl
xchg
lahf
fmuls
and
aaa
jae
lret
cmp
jle
inc
cmp
adc
push
stos
sbb
push
aas
xor
sub
jb
jae
scas
loop
sub
inc
sahf
sti
xchg
xchg
pop
pop
inc
popf
ds
xor
std
int
cli
mov
jl
mov
fisttpl
jae
mov
faddl
fcompl
arpl
pusha
ss
ds
out
xchg
push
jp
cmpl
add
jle
mov
inc
das
ffree
inc
sbb
fwait
mov
repnz
lret
add
xor
jno
scas
rcll
dec
loope
dec
fwait
ja
jo
scas
dec
fnstsw
xor
xor
lret
mov
jmp
das
lret
sub
lods
in
test
sar
faddl
cmp
pushl
mov
xchg
dec
push
arpl
sbb
repnz
pop
cld
fs
fwait
lock
mov
mov
aam
in
addr16
cmp
ljmp
xchg
sub
mov
sbb
jbe
hlt
stos
les
mov
cmp
push
pop
popa
fwait
sbb
cltd
out
popf
loop
jecxz
bsr
xor
movsl
or
sub
add
dec
inc
push
inc
mov
movsl
fmull
mov
scas
xor
lds
xchg
jbe
or
fcoml
js
sub
movsl
mov
jl
imul
add
mov
adc
pop
mov
fimuls
cmp
stc
hlt
cmc
loop
popf
xor
dec
lods
lods
sub
mov
push
jno
lea
sahf
rorb
adc
adcl
jno
loopne
xchg
mov
test
fstpl
xor
mov
adc
in
je,pt
push
hlt
loop
and
push
inc
jle
jb
ds
rcll
pop
aaa
mov
std
andb
inc
pusha
dec
dec
mov
adc
adc
mov
outsb
out
dec
clc
or
pop
mov
pushf
or
lahf
cmp
dec
fldt
pop
insb
sub
push
mov
rolb
sbb
mov
lcall
rcrb
inc
out
or
movsb
mov
fwait
mov
je
cmpsb
push
pop
mov
nop
outsl
lcall
jae
pop
mov
aad
push
cmp
sub
xchg
loope
in
pop
jnp
sbb
mov
xor
arpl
inc
in
out
xchg
dec
cmp
int
movsb
inc
shll
ljmp
into
faddl
sbb
cmp
lea
inc
das
arpl
jmp
ret
cltd
cmp
fnstsw
filds
pop
sahf
xor
cli
cmpsb
iret
or
sbb
sti
adc
inc
mov
fists
adc
dec
push
int3
inc
dec
out
nop
adc
pop
shrl
jb
stc
mov
cmp
jmp
ds
sbb
push
cmp
and
lret
push
imul
inc
std
sbb
inc
lods
mov
add
cmp
jne
mov
fdivrs
push
xor
mov
push
inc
xor
pop
inc
fists
adc
cmp
enter
lods
mov
stc
push
adc
loopne
loopne
push
and
adc
loope
cmpsb
fcom
and
cmp
je
jb
adc
lret
sbb
sti
mov
mov
rolb
mov
call
cmpsl
pop
in
jbe
hlt
dec
push
mulb
sbb
fidivl
or
stos
mov
pxor
jge
pop
sbb
adc
sub
pop
mov
lods
dec
popf
dec
repz
in
cwtl
sti
ja
fmul
jle
aam
pop
imul
jne
movsb
push
pop
shlb
inc
inc
sub
or
sahf
mov
pop
int3
test
scas
aaa
xchg
outsl
shl
int
dec
mov
pop
mov
lcall
mov
fdivrl
add
enter
loopw
mov
arpl
xor
dec
pop
xlat
sbb
sahf
dec
nop
outsb
shr
movsb
inc
pop
movsb
ds
mov
push
popa
lods
mov
jne
fwait
sbb
movsl
pop
std
in
and
jne
fsubr
and
loope
push
push
jnp
jmp
mov
mov
mov
lret
outsl
js
lock
mov
ret
inc
aad
adc
jl
mov
mov
mov
dec
lret
ds
mov
adc
dec
mov
ja
push
popf
and
mov
pop
dec
rolb
pushf
cli
sbb
popa
jg
sbb
pop
mov
les
in
fs
xchg
fmuls
mov
or
jge
fdivl
or
jns
iret
mov
mov
fsubp
mov
andl
lcall
mov
add
lcall
ret
pop
fisttpll
pusha
and
addr16
sbb
aaa
mov
mov
cmp
push
ss
js
add
dec
stos
bound
xchg
mov
or
cmp
push
mov
push
sbb
mov
pop
xchg
add
test
ja
adc
pop
jnp
in
aaa
pusha
inc
fucomp
ss
pop
push
jne
out
loop
lret
cltd
jg
sub
loopne
cwtl
aas
mov
mov
pop
ja
jo
loopne
fstl
push
pop
fsubrp
es
daa
push
cmc
pop
cmp
or
in
mov
es
or
fsubrp
popf
sbb
rcll
fidivrs
pop
mov
adc
cld
pop
inc
jns
pop
fcmovnbe
sbb
xchg
jne
popf
loope
mov
xor
lcall
xchg
or
jge
mov
adc
push
push
xchg
xor
push
add
adc
inc
inc
stc
out
add
adc
mov
sbb
mov
fisttpll
stos
sbb
ds
mov
cmp
add
mov
inc
push
aaa
rorb
ret
cmc
int3
mov
mov
cmp
sbb
insl
aaa
xchg
fildl
mov
lcall
orb
jbe
sbb
test
or
lcall
cmp
push
les
push
adc
ljmp
mov
mov
add
ljmp
xor
mull
into
or
orl
mov
ror
sbb
xchg
push
inc
mov
icebp
sbb
xchg
jo
scas
aaa
mov
cmpsb
push
push
mov
cmc
int
aad
mov
shr
dec
aas
xor
stos
test
dec
mov
xchg
mov
cld
cmp
in
std
dec
adc
repz
orb
cld
pop
pop
dec
clc
mov
lcall
dec
and
add
cmp
jecxz
stos
sbb
and
sarl
add
out
fidivs
ds
out
pop
fcoms
hlt
jle
or
sub
xchg
push
mov
aam
mov
gs
cmp
nop
mov
inc
mov
push
movsb
xor
daa
mov
fdivr
mov
adc
add
pop
jno
pop
xor
cmp
jne
fists
loop
aas
mov
inc
and
sbb
shll
lcall
pop
setle
adc
test
inc
mov
int3
lds
pusha
cltd
sub
fwait
pushf
sti
inc
cmp
pop
inc
or
push
cmp
cmp
stc
ljmp
ds
xor
insl
aaa
push
popf
ret
jmp
lret
imul
inc
jmp
cltd
inc
mov
sarl
in
aad
and
in
shlb
cmp
sahf
lea
inc
cs
pop
cmp
cmp
jmp
push
mov
je
sbb
addr16
xor
ret
test
push
pop
cld
and
js
dec
cmp
pusha
subb
mov
std
out
lock
sub
sti
mov
or
mov
xchg
and
clc
cmp
jbe
cli
shrb
push
mov
lcall
pop
scas
popa
cmc
inc
mov
aad
out
lcall
imul
mov
rcrl
fbstp
aaa
cwtl
xor
je
cli
lods
inc
push
pop
pushf
fsubrl
and
dec
dec
xchg
icebp
mov
dec
and
cltd
dec
mov
pop
add
xor
movsb
mov
push
rcrl
push
pop
or
pop
mov
sbb
mov
push
or
rcrb
fisubl
xorb
sbb
xor
adc
popf
aaa
xchg
repnz
lods
xchg
pop
inc
in
xor
mov
sbb
stos
mov
mov
xor
inc
leave
sub
sbb
sahf
push
push
fwait
cmp
lods
fldenv
push
sub
jbe
insb
ficoms
lods
pop
pop
aaa
dec
push
add
push
jg
push
mov
and
cld
and
aaa
push
mov
sbb
fiaddl
jg
sbb
loop
xchg
cmc
pop
div
sti
add
loopne
jbe
stos
fmull
call
pop
xchg
fcmovnbe
arpl
dec
in
mov
mov
aam
std
cli
cmp
out
aaa
inc
jo
push
rorl
and
mov
in
into
lods
and
dec
cmp
add
pop
mov
fdivl
xchg
ja
jg,pt
int3
stos
dec
sbb
into
and
and
dec
nop
ret
sub
dec
ret
call
jo
dec
ds
sub
mov
lods
mov
sti
clc
jle
adc
jnp
out
mov
jge
and
pop
fstl
mov
lock
xchg
push
decb
nop
xchg
sbb
ss
cmp
addr16
cs
inc
add
jb
xlat
pminub
mov
lods
pop
and
mov
dec
jp
ds
xchg
sbb
enter
push
push
daa
xchg
mov
jno
add
cli
or
xchg
mov
inc
cmp
in
push
lcall
inc
test
sub
int3
fmull
pop
and
sub
cmp
inc
lcall
push
lcall
pop
or
cwtl
imulb
pop
addr16
stc
cli
xchg
sbb
push
mov
dec
les
bound
imull
fsub
inc
movsl
or
inc
int
pop
jg
dec
cs
xor
popa
fwait
or
or
enter
cmp
jae
out
dec
es
mov
std
sbb
js
rorb
or
lock
clc
pop
inc
fisttpll
cli
or
ds
sbbb
mov
fsubl
sub
js,pt
out
push
fwait
dec
dec
aaa
test
jno
ljmp
push
pop
adc
lock
mov
aaa
cwtl
sbb
mov
mov
mov
fidivs
jg
out
push
lds
mov
inc
aad
inc
or
mov
push
or
ret
mov
inc
sub
push
ja
xchg
insl
dec
sub
scas
lcall
call
mov
sbb
inc
sbb
push
or
mov
or
adc
stc
inc
jmp
xchg
ret
and
adc
cmp
and
mov
inc
or
sbb
adc
dec
repnz
inc
and
cmpsb
push
mov
and
fldl
mov
inc
ret
or
popa
add
cmp
mov
lcall
cld
pop
fldl
jge
inc
cmp
rolb
add
mov
mov
mov
and
push
lret
jmp
jno
pushf
or
sub
movsb
test
push
jo
rolb
mov
or
push
push
lret
arpl
sub
aaa
fmull
sub
cmp
cmp
xchg
inc
xchg
sbb
in
aaa
aas
enter
mov
add
xor
fistps
cmc
lcall
xchg
ja
pop
mov
cmp
or
mov
mov
inc
jo
test
aad
ds
jno
ds
cmp
inc
gs
dec
outsb
out
or
adc
pop
mov
imulb
dec
nop
push
cs
repnz
imul
inc
sbb
imul
aaa
or
push
jns
lahf
ds
aas
cmp
enter
aaa
mov
in
sub
sub
push
or
sbb
or
pop
push
jecxz
call
in
movsb
add
jo
lds
xchg
mov
inc
into
pop
fnstsw
pop
xor
xchg
rcl
mov
push
fidivrs
mov
outsb
addr16
imul
pop
and
cmp
add
push
aaa
mov
into
call
es
lcall
aaa
add
inc
mov
popf
loope
xor
pop
fcoml
pop
rclb
inc
fwait
jg
repz
aas
mov
and
aaa
ficoms
cs
ja,pt
push
stos
fs
fiaddl
dec
adc
fmull
dec
outsl
popa
inc
shlb
mov
pop
ljmp
int3
into
cmp
hlt
lcall
jmp
fcoml
dec
test
inc
call
dec
outsl
cld
arpl
insl
scas
mov
int
add
mov
cmp
cwtl
sub
outsb
jno
nop
rcrb
dec
mov
iret
sahf
clc
mov
lret
xchg
fldl
fs
dec
push
xchg
sbb
mov
jg
sub
ret
sub
test
dec
pop
lcall
in
jno
mov
dec
pushf
mov
adc
dec
aaa
xchg
dec
outsb
jmp
xchg
add
mov
xor
je
in
sbb
mov
inc
pop
xor
aas
test
ss
or
pop
test
inc
mov
mov
mov
jle
add
into
push
jle
mov
in
test
stc
subb
pop
dec
or
in
inc
jb
cmpsl
out
mov
in
adc
je
push
sub
aad
inc
jmp
cs
sub
daa
pusha
lea
inc
pop
lea
addr16
mov
sbb
push
pop
inc
cmp
mov
cmp
sub
cmpsb
xor
out
rorb
xchg
fmuls
xor
iret
aaa
hlt
nop
int
stc
lcall
dec
cmp
jb
int3
popf
stos
pop
cmp
adc
add
sub
mov
mov
hlt
rorl
loopne
call
pop
pop
pop
mov
nop
into
lcall
pop
loopne
add
pop
aas
je
popf
and
lods
cmpsl
pop
shr
pop
and
out
imull
test
gs
insb
iret
mov
int3
jle
xchg
add
sub
mov
pop
aas
jg
jl
adc
add
sbb
mov
adc
jnp
rcrl
call
fcomps
shr
stos
lcall
inc
dec
fstpl
cld
orl
add
hlt
xchg
dec
pop
sbb
cmc
sbb
ficoms
push
push
jb
push
mov
push
lcall
ds
jns
mov
lcall
int
scas
or
jno
mov
inc
sti
ljmp
out
cmp
push
inc
shrb
push
stos
mov
push
pusha
cmpsl
imull
xchg
sub
xorl
inc
jle
imull
les
loope
or
jb
xchg
lcall
bound
fisttpll
sbb
xlat
lock
ds
shl
xorl
mov
adc
jae
nop
adc
fstpl
ds
loopne
mov
mov
popa
outsb
ljmp
inc
sbb
and
idivb
fs
push
cmp
pop
mov
cli
xchg
dec
jmp
ljmp
popa
out
pop
adc
faddl
lret
ss
lods
sbb
pop
daa
jmp
pop
mov
pusha
sbb
fwait
aaa
dec
aaa
add
mov
arpl
outsl
or
xor
sub
out
icebp
loope
sahf
mov
inc
loope
lcall
fcomi
loope
cmp
out
mov
mov
pop
jle
pop
jmp
sbb
ja
mov
mov
mov
cld
cmpsb
push
mov
push
rolb
movsl
bound
lcall
and
jno,pt
fistpll
push
scas
ljmp
imulb
addb
int
es
lahf
lret
cld
mov
jne
fwait
adc
lea
loope
and
mov
jle
fbld
cmp
sub
xchg
nop
in
pop
push
rdpmc
data16
cli
xchg
in
cmc
xor
mov
in
jg
insl
pop
std
outsb
lahf
or
lcall
fstps
dec
mov
and
sub
cmp
cmp
insb
xor
cmp
pop
jp
sub
sbb
xchg
ljmp
outsl
cmpsb
xor
in
mov
pop
pushf
xchg
loopne
and
dec
mov
bound
lcall
ret
push
fucomp
xchg
xchg
sub
jnp
jb
xchg
inc
ret
clc
inc
fisubs
mov
mov
addr16
mov
rorb
shlb
fwait
mov
adc
xchg
jle
test
xchg
mov
cmp
push
loopne
loopne
imul
stos
daa
cmpsb
out
sbb
hlt
ficomps
clc
fwait
or
in
sahf
and
dec
aaa
js
imul
gs
test
aas
push
inc
sahf
cmp
test
fdivrl
loopne
cli
cmp
std
mov
popf
lcall
scas
lock
ds
insb
push
ja
push
mov
cmpsl
pop
je,pt
jge
insl
loope
xchg
aaa
xchg
fdivr
daa
pop
lea
js
dec
pop
cmp
popa
sahf
sbb
pop
dec
aad
mov
xchg
lcall
into
jp
ds
popa
and
xor
mov
jecxz
cmp
cmp
incl
push
sub
outsl
aam
and
aaa
xor
lds
or
or
in
sbb
lret
rcll
mov
fistpll
mov
jb
dec
adc
ds
jge
xchg
sbb
dec
mov
add
adc
inc
ds
dec
ds
scas
popf
mov
xchg
inc
and
dec
or
or
mov
lcall
outsl
mov
icebp
xchg
xchg
sub
push
test
push
dec
inc
stc
pop
sahf
outsl
push
jne
jns
repz
xchg
sahf
xchg
aad
stc
add
fwait
setns
xchg
mulb
sti
pop
xchg
mov
mov
cld
aas
mov
dec
mov
es
or
or
rdmsr
test
gs
out
in
iret
sarl
inc
push
lcall
cmp
xchg
mov
and
bound
movsl
test
xor
fdivp
mov
sbb
sti
imulb
popa
inc
adc
jno
cmp
sub
test
insb
in
ds
pop
sbb
test
adc
mov
mov
mov
dec
out
xchg
pushf
jmp
fdivl
mov
dec
ds
pop
xchg
stos
rorl
push
cli
push
clc
lods
lods
ds
xor
jp
xchg
mov
movsb
out
mov
pusha
sub
cld
jno
in
fisttpl
insl
int3
pop
ja
popf
mov
leave
lret
aaa
pop
sti
adc
sbb
jge
icebp
xchg
inc
mov
inc
cmp
jae
pop
push
inc
push
push
xchg
adc
mov
jp
imul
lods
imul
jl
leave
pop
or
dec
aaa
lock
or
in
movsb
mov
loope
cmp
pop
testl
hlt
ds
adc
and
inc
ljmp
xchg
sbb
scas
lcall
aaa
leave
mov
arpl
mov
bound
mov
iret
cmpsl
mov
cmp
push
mov
xor
mov
sbb
sub
jl
mov
outsb
repz
adc
idivl
mov
dec
pusha
inc
pushf
repz
xchg
sbb
test
mov
pop
gs
sbb
outsl
gs
inc
rcl
cltd
mov
or
aaa
jnp
push
cs
fidivs
ds
aas
addl
push
es
push
or
or
popf
inc
out
or
mov
cwtl
subb
and
lods
jns
mov
pop
xor
rorl
mov
out
xchg
lcall
push
int3
dec
push
push
xlat
call
fwait
pop
fmuls
mov
mov
out
cs
das
add
cltd
rorb
subl
xor
jbe
dec
mov
andl
lahf
loop
inc
ds
mov
jmp
outsb
in
ja
jbe
sar
enter
or
dec
cmp
mov
shrb
movsb
ds
mov
push
push
cmp
and
push
cmp
jae,pt
add
jno
les
sub
sarl
loopne
scas
lret
jne
popa
lods
outsb
aaa
insb
daa
insb
std
adc
mov
das
sub
or
movsb
aaa
and
je
mov
enter
dec
dec
ret
mov
inc
daa
test
mov
xor
sbbb
jmp
addr16
sub
mov
mov
aaa
fadds
jmp
jb
xchg
subb
out
cmp
into
in
pop
and
cmp
cmp
mov
xor
scas
inc
xor
pop
lcall
xchg
pop
jnp
jb
negb
sbbb
rclb
mov
fnstsw
in
mov
mov
insl
sbb
cmp
popf
lcall
stc
les
fchs
aaa
dec
and
jb
pop
inc
or
adc
sub
inc
insl
ds
add
or
inc
flds
or
mov
pop
imul
sbb
leave
in
mov
stc
cmpsl
arpl
xor
inc
mov
inc
nop
sub
arpl
call
pop
push
pop
sahf
cmpb
lock
cmc
pop
xchg
lea
sbb
pop
fnsave
adc
pop
mov
pushf
jmp
int
push
imull
stc
jg
aas
int
sub
inc
ds
stos
xor
push
xchg
movsl
cmpl
test
and
and
adc
pusha
cld
out
jnp
sub
mov
lcall
imull
popf
lret
mov
mov
mov
xlat
mov
loop
sbb
lds
je
mov
inc
mov
dec
sbb
inc
out
out
nop
push
test
imul
decb
jns
cmp
dec
lcall
jmp
mov
fiadds
movsl
mov
clc
icebp
fiadds
ret
pop
mov
cmp
lcall
push
fst
xchg
pop
out
out
lahf
inc
pop
inc
push
out
aaa
clc
gs
push
xor
jg
mov
std
push
cmp
pop
jl
lret
lcall
mov
mov
aaa
jle
dec
shlb
pop
cli
out
rolb
push
neg
sbb
je
fldl
push
shrl
lods
fimull
aaa
inc
lahf
jb
mov
sbb
push
fwait
xor
imul
adc
ja
fiaddl
aas
jg
test
dec
or
push
lods
fwait
pop
ss
test
sub
inc
jp
outsl
sub
mov
cmp
mov
and
push
xor
inc
fstpt
out
fsubrl
and
es
inc
repz
iret
sub
sbb
test
ss
je
adc
push
pop
dec
mov
jl
mov
loopne
mov
xor
adc
aaa
push
mov
loopne
mov
jmp
sbb
lock
jnp
aas
shl
aas
movsl
mov
xlat
jge
pusha
cmp
int
test
push
stc
imul
pop
test
mov
sbb
push
sub
lcall
cmp
movsb
decb
pop
or
add
lahf
mulb
or
cs
or
lock
mov
lea
arpl
inc
sub
bound
sub
inc
push
jbe
mov
mov
push
loopne
adc
dec
arpl
cld
test
mov
outsl
pop
aaa
ljmp
push
lcall
int3
push
fisttpll
dec
dec
pop
adc
cmp
out
mov
xor
sti
push
icebp
pop
movsl
mov
or
jbe
sub
notl
jp
shll
outsl
dec
cmp
aad
std
mov
push
insb
pop
fldl
out
inc
lock
repnz
shlb
mov
dec
xchg
mov
inc
in
cmp
movsb
push
xchg
pusha
lds
adc
aaa
jge
repnz
hlt
or
mov
pop
das
bound
jl
sahf
popf
fmulp
xor
cmp
cvttps2pi
lea
mov
nop
or
push
dec
lcall
mov
xchg
jns
xchg
es
testl
faddl
sbb
and
scas
or
pop
aaa
cmp
pushf
scas
or
inc
test
cmc
sub
mov
ds
or
jnp
jmp
dec
movsb
push
mov
scas
push
mov
ljmp
test
fldl
dec
test
xchg
dec
ds
shl
fwait
inc
mov
sbb
bound
enter
outsb
fisttps
or
lcall
pop
cli
fcompl
sti
push
jp
adc
mov
hlt
cltd
push
cmp
inc
xor
pop
lahf
dec
adc
mov
and
jo,pt
jmp
insb
lock
je
cmp
insb
sti
rorb
addr16
fstpl
dec
ret
stc
mov
pop
std
aaa
cmp
add
xor
lcall
loop
jl
pop
ret
sbb
cmp
scas
nop
out
or
lods
pop
mov
sahf
xor
jmp
aaa
pop
push
imul
xchg
mov
mov
jecxz
xchg
xchg
mov
ja
xchg
and
lds
pop
dec
mov
test
push
cmpsb
add
shlb
stos
push
int3
in
in
push
outsl
mov
or
sbb
fnsave
pop
movsl
and
ss
and
xor
sti
insb
xor
lea
pop
pop
adc
out
inc
lahf
add
pop
or
mov
test
test
ja
sbb
ret
adc
scas
jns
push
into
aaa
out
sbb
outsl
mov
mov
sub
aad
fistps
dec
xor
cmp
jae
xchg
inc
add
repnz
jns
stos
stos
pushf
mov
mov
rolb
fsubr
imul
pop
lcall
enter
clts
pop
dec
cmp
lcall
mov
dec
dec
aaa
inc
outsl
jl
or
add
xor
jnp
lods
ficomps
push
iret
adc
in
imul
mov
pop
jae
mov
push
neg
mov
popa
adc
stos
push
add
int
popf
jns
lcall
shll
cld
lock
jmp
fstl
dec
inc
shll
fdivr
push
sbb
fistpll
mov
mov
mov
mov
dec
mov
push
in
aad
pop
fwait
push
inc
xchg
pop
cmp
xlat
mov
lcall
inc
frstor
pop
cmp
push
lret
add
and
mov
icebp
jl
stos
mov
aad
xchg
xor
mov
xchg
mov
pop
mov
push
push
por
les
sbb
mov
pop
fwait
cmp
pop
pop
movsl
dec
mov
scas
lret
aad
pop
in
fmull
pop
loope
cmp
mov
push
sbb
int3
fstl
pop
bnd
movsbl
shll
sbb
ss
mov
dec
jge
ss
jp
or
aaa
fbld
into
and
popf
sahf
cmp
std
cmp
insl
push
cmp
push
xchg
loopne
aad
das
dec
or
lds
jnp
mov
pop
xor
ljmp
sbb
hlt
notl
aas
into
inc
mov
add
dec
cmp
xor
stc
dec
aam
lcall
or
push
xchg
xchg
gs
int3
mov
mov
inc
push
andb
mov
adc
inc
mov
icebp
out
fsubr
mov
gs
mov
pushf
sub
mov
jecxz
sbb
adc
lods
enter
dec
clc
sbb
movsb
or
int
popf
jne
jo
arpl
out
icebp
mov
aaa
loopne
gs
xchg
cld
or
cmc
or
out
sbb
mov
mov
nop
pop
inc
push
fsts
xlat
sbb
jmp
mov
loopne
mov
movsl
lret
pop
lcall
and
mov
es
inc
pop
out
popf
enter
mov
cmp
sbb
adc
ds
xchg
outsl
mov
fisubrs
xor
adc
xchg
mov
dec
das
and
and
mov
insl
sbb
lahf
out
fnsave
in
mov
sahf
leave
jg
push
push
push
lret
sbbb
jg
mov
mov
add
leave
leave
lcall
sbb
cmpsl
gs
jb
pop
push
loop
scas
mov
loopne
push
pusha
xchg
xchg
ds
out
in
mov
mov
mov
aad
movsl
sbb
xchg
add
pop
xchg
jae
or
push
cmp
push
sbb
jle
lret
shll
outsb
pop
mov
mov
std
movsl
sbb
pop
mov
dec
jp
sub
dec
lcall
xchg
stc
js
sbb
pushf
fidivrl
insb
dec
test
test
mov
lcall
push
bound
aaa
xor
es
jmp
mov
mov
imul
push
insl
xchg
jbe
push
ds
stos
fwait
xchg
dec
jno
push
inc
mov
imul
pop
negl
fbstp
and
or
or
cmp
push
cwtl
aaa
mov
int3
jo
outsl
mov
daa
daa
arpl
cmpsl
loope
add
repz
lcall
adc
sbb
sub
cmpsl
sub
push
jge
and
cmp
and
pop
sbb
xchg
add
in
cmp
in
mov
lock
orl
lcall
aas
je
add
and
das
cmp
fstl
push
pop
sub
mov
inc
inc
xor
cmpsl
mov
lcall
movsl
rcr
sbb
inc
push
insb
jp
xchg
and
lods
push
dec
ficomps
jo
sbb
mov
add
lcall
test
jns
fbstp
sub
mov
nop
cwtl
icebp
cmp
test
push
es
sbb
test
dec
cld
mov
lcall
repz
insl
cmp
mov
imul
scas
loopne
push
pop
add
pushf
ds
aam
jne
insb
mov
push
cmc
dec
cmp
fnstsw
push
jmp
out
gs
cmp
fbstp
aad
or
cs
dec
add
add
iret
aas
jge
or
sbb
jle
push
sbb
insl
cli
add
aaa
jnp
iret
dec
aam
ficomps
xor
cmp
sahf
lcall
pop
cwtl
scas
pop
mov
pop
inc
mov
adc
jnp
mov
pop
fbstp
dec
jmp
jge
aas
inc
jb
call
mov
frstor
cmc
cmovle
mov
dec
cli
cmpsb
cmp
mov
jp
pop
cmp
xor
gs
out
lcall
lods
lahf
addb
daa
loopne
js
je
daa
pop
cmpsl
adc
ds
adc
mov
into
aaa
cmp
out
pop
add
popl
aam
push
push
fstpl
lahf
mov
jecxz,pt
insb
sbb
or
pushf
adcb
arpl
xchg
and
dec
pop
js
or
clc
out
in
inc
inc
and
pop
cltd
fisubs
div
lret
sub
inc
and
mov
and
cld
movsb
pop
stos
ds
out
loopne
test
pop
ds
iret
inc
sub
xchg
cmp
mov
mov
dec
mov
add
and
notb
and
sub
cmp
bound
lahf
fidivs
mov
hlt
inc
testb
lcall
aad
fsubl
mov
mov
lods
add
jbe
xchg
aam
popf
pusha
pushf
mov
lcall
lock
fcoml
mov
push
cmc
mov
insl
jbe
sub
jl
test
cmp
addr16
stos
jl
cmp
pop
mov
push
lahf
fs
and
or
aaa
call
cli
sub
icebp
and
and
mov
out
aas
test
and
ja
scas
push
pop
repnz
scas
out
fdivrl
dec
mov
test
xchg
xchg
test
mov
clc
jnp
out
dec
addb
ret
mov
adcb
add
lcall
rcr
or
pop
mov
jae
test
es
aaa
push
jle
pop
inc
and
imul
push
push
fstpl
out
dec
inc
scas
fdivrs
pop
subb
popf
jo
pop
aaa
loopne
fildll
cmp
call
dec
iret
mov
and
jbe
rcrl
movsb
ret
pusha
dec
pop
pop
gs
mov
dec
mov
rcll
sahf
cmp
adc
push
push
mov
jl
push
pop
sub
jns
sbb
movsb
enter
sahf
mov
mov
xlat
fmull
int
mov
cmp
lods
adc
jbe
aaa
loop
xorl
in
adc
jno
sbb
pop
push
push
mov
jbe
add
enter
fcompl
dec
jo
mov
cmp
nop
scas
rorb
mov
loopne
orb
pop
mov
push
mov
push
dec
sbb
pop
jp
inc
pop
push
mov
cli
mov
lahf
cs
jle
aad
in
imul
fwait
sti
std
lcall
jne
popa
ds
inc
sarb
jp
fidivrs
and
mov
mov
push
sub
dec
dec
std
push
aaa
cmp
push
jmp
add
lcall
lcall
lcall
fisttpl
pop
mov
and
push
dec
sahf
or
sbbl
ds
mov
cmp
pop
pop
xchg
mov
fidivrs
push
arpl
and
addr16
cwtl
das
jns
mov
and
hlt
pop
push
in
sahf
negl
mov
push
jnp
push
out
lock
out
cli
xor
in
ret
mov
push
mov
mov
mov
push
pop
aaa
mov
cmp
clc
das
imul
fsubl
xlat
sub
jg
fimuls
ret
cmp
pop
pop
sub
dec
lds
test
repz
clc
shlb
mov
pop
pop
frstor
and
xchg
and
cmpsb
ds
fldenv
idivl
dec
push
fnstsw
or
lcall
rclb
add
adc
sbb
mov
mov
and
cli
es
lods
add
fs
push
push
adc
sbb
shll
loop
in
push
mov
test
ds
jb
dec
jne,pn
cmpsl
cmovle
aaa
jae
jl
imul
testl
jbe
push
lcall
nop
xchg
in
mov
jno
daa
in
loope
pop
fsubr
push
xchg
adc
mov
xlat
inc
clc
and
mov
cltd
pop
jo
push
lods
or
out
mov
incb
adc
aad
jae
aam
add
mov
lcall
inc
mov
add
fwait
sahf
pop
xor
inc
jg
lcall
outsb
bound
call
pop
lret
cmp
jno
frstor
mov
xchg
jp
movsl
jns
cmpsb
push
aaa
sti
push
mov
sbb
popf
ret
dec
xchg
cmp
or
xchg
dec
or
ja
lret
mov
cmp
fadds
loopne
push
mov
sahf
cmp
sbb
sub
jecxz
fdivrl
sub
sub
jp
sub
fwait
push
gs
push
stos
leave
or
popa
aaa
sbb
repnz
or
imulb
dec
mov
mov
je
lahf
mov
pop
icebp
pop
sbb
dec
ficompl
dec
mov
lcall
sbb
mov
mov
push
mov
sub
lcall
mov
daa
addb
push
pop
enter
xor
test
sub
pop
jge
jge,pt
js
pop
pop
cmp
cmp
sbb
inc
mov
mov
xor
jbe
mov
dec
es
movsb
pusha
push
and
outsb
sbb
ljmp
fneni(8087
test
rcr
pop
dec
in
stos
jl
in
pop
aas
pop
shlb
inc
push
push
and
loope
xor
push
test
jb
jecxz
lcall
inc
inc
fisttpll
repz
and
mov
and
mov
pusha
fstpl
mov
or
mov
mov
stos
in
iret
out
lcall
jns
pop
outsl
addr16
pop
movsb
pop
cmp
jae
adc
ss
push
xchg
fnstsw
sbb
aaa
mov
and
cmc
sub
pop
nop
jmp
pop
pusha
xchg
loope
cmc
bound
jbe
enter
push
in
daa
pop
mov
sbb
jmp
frstor
jne
mov
mov
cmp
in
pusha
jle,pn
sbb
sbb
xor
mov
test
mov
and
xor
cmp
ficompl
out
pop
aaa
or
loopne
xor
inc
repz
mov
bnd
push
mov
jle
insl
clc
out
pop
rol
lcall
push
inc
fucomp
addr16
or
push
and
sub
pop
fs
cs
ja
cmp
js
clc
pop
outsb
or
stc
ret
mov
popf
xchg
lahf
jle
lret
fimuls
scas
or
and
cwtl
dec
popa
mov
pop
jl
inc
lea
lea
ucomiss
test
cs
inc
dec
loopne
jno
lahf
ds
bound
pop
and
push
mov
sub
das
aaa
in
and
dec
mov
or
scas
out
mov
cmp
xchg
cmp
loopne
clc
push
cld
aaa
mov
icebp
ds
aas
mov
jl
fmull
jmp
in
cmp
jb
push
aaa
mov
push
or
push
inc
out
les
fxch
and
jno
xorb
test
jecxz,pt
lret
jb
jecxz
jge
imul
xchg
and
mov
adc
mov
stos
xchg
mov
or
stc
int
sbb
into
add
xchg
test
loop
push
dec
hlt
mov
inc
add
add
int
cmp
notl
sbbb
fnsave
and
out
jl,pt
loope
mov
sbb
cmp
mov
adc
and
fildll
out
mov
xchg
pop
xchg
out
cwtl
movsl
aas
jb
sbb
add
mov
xor
dec
sti
mov
popf
and
ljmp
mov
loopne
cmp
aam
pop
xlat
xchg
add
ret
outsb
lea
push
aas
jb
ret
aad
stos
sbb
jae
or
mov
sub
pop
ds
mov
sbb
adc
jnp
cmp
fdivs
pop
fnstenv
sub
divl
sarl
mov
out
lcall
stos
outsb
test
idivl
enter
jmp
ss
adc
or
jns
test
loopne
pop
in
sbb
jmp
stc
cwtl
cs
fldl
aam
dec
ds
pusha
pop
mov
int
xchg
aaa
mov
stos
sub
test
xchg
ret
push
loopne
imul
sti
xchg
test
test
pop
aas
cmp
mov
pop
out
fdivl
mov
dec
mov
and
arpl
push
stos
jecxz
ds
mov
ds
int
jp
ds
dec
and
mov
jecxz
cmp
outsl
cltd
inc
imull
andl
lcall
aaa
nop
popa
mov
leave
ds
xor
jp
inc
ss
faddl
fs
add
movsb
ret
mov
enter
test
sbb
pushf
dec
dec
scas
mov
lods
fiadds
push
jp
jmp
lcall
and
fcompl
stos
out
dec
mov
mov
fdivl
cmp
jmp
cli
sub
clc
or
push
sbb
cmp
push
pop
pop
adc
inc
jno
xchg
cmc
and
pop
lret
out
mov
and
dec
loope
mov
jno
imul
jecxz
sbb
mov
ds
cmpsl
outsb
push
mov
mov
outsl
mov
add
pop
pushl
sbb
sub
cmp
aam
int
xchg
les
fstl
add
and
outsl
aaa
inc
or
aaa
pop
ret
mov
pop
das
scas
xor
jg
ffree
jb
imul
imulb
push
and
in
or
aaa
jb
aas
adc
mov
icebp
ljmp
mov
fsubrl
and
out
xor
lahf
lahf
pop
call
sahf
rcrl
dec
insl
mov
ljmp
fists
jmp
push
mov
mov
cmp
mov
enter
sti
sbbb
popf
xchg
lcall
faddl
std
mov
xlat
dec
lret
dec
xchg
aaa
test
push
push
shlb
mov
in
das
ljmp
jnp
sbb
fsubrl
jo
inc
lret
or
arpl
jge
insl
dec
push
shrl
cmpb
idivb
dec
les
inc
jp
out
ja
ret
lcall
xor
loopne
andl
sbb
mov
jo
push
or
push
xchg
jae
ds
popf
fmull
push
mov
sbb
das
fimull
sbb
jae
xchg
mov
jnp
std
cmp
addr16
stc
aaa
stc
enter
and
mov
xor
xchg
mov
mov
sahf
inc
mov
pop
mov
push
sar
aaa
cmp
and
fs
pop
aaa
mov
cvtps2pd
adcb
cmp
pop
shll
jae
fidivrs
xlat
stc
cmp
pop
enter
adc
or
dec
jge
xchg
sbb
lcall
jge
ret
shlb
call
xchg
fistpl
lock
ds
push
adc
mov
repnz
dec
push
mov
mov
rcrb
cmpsl
rep
js
add
orb
daa
mov
shl
fmull
mov
sbb
cmp
lods
xchg
test
xor
mov
and
dec
outsb
lods
rcr
leave
sub
out
mov
in
movsl
stos
insb
das
push
inc
repz
xchg
sbb
fisttpl
mov
add
daa
sbbb
lcall
out
fisttpll
stos
mov
dec
xchg
cmpsb
loope
out
jb
cmp
in
add
pop
mov
arpl
fsts
inc
inc
je
pop
lock
dec
sbb
sbb
lods
push
mov
aas
test
in
movsb
xchg
push
out
push
push
push
adc
fwait
adcb
jnp
sub
xchg
adc
ds
or
aaa
pop
xchg
lret
jne
icebp
mov
mov
mov
in
aam
test
decb
pop
inc
ja
out
mov
jecxz
hlt
in
adc
push
pop
outsl
jo
push
push
data16
sub
add
sbb
jl
lea
js
cs
mov
ret
jb
clts
sbb
clc
jo
cmc
lcall
icebp
cmpsb
and
push
sarb
push
xchg
imul
or
jmp
fists
mov
mov
addr16
cmp
add
mov
divb
and
mov
sti
nop
pushf
xor
mov
dec
aas
popa
mov
mov
pop
mov
fnstsw
push
lea
cwtl
add
stos
gs
ljmp
and
xor
jl
outsl
fstl
sub
and
mov
push
jns
and
aaa
popf
push
pusha
sub
add
sahf
fnstenv
jae
mov
ret
mov
push
stos
movsl
xor
sub
popf
mov
scas
cmp
js
xchg
loop
mov
aas
and
jbe
test
addl
ret
sahf
push
or
cmp
faddl
aad
mov
xlat
cmc
cmp
adc
push
pop
aaa
and
pop
dec
ljmp
out
jmp
pop
std
aaa
adc
inc
xor
jb
test
inc
mov
sbb
jae
repz
aad
push
xchg
fmull
repz
mov
mov
ss
and
ret
lods
mov
je
out
test
in
sbb
dec
xor
mov
sahf
aaa
xor
pop
lcall
imul
sub
sub
gs
jl
stos
pop
shr
in
or
inc
mov
pop
cmpsl
xchg
popf
push
leave
jecxz
iret
mov
aad
dec
cmp
add
inc
push
out
cmp
fstl
xor
fiadds
fsubrs
sbb
inc
xor
aaa
inc
push
push
pop
lret
hlt
lcall
mov
popf
aaa
fs
mov
leave
lcall
jg
sbb
mov
shl
xor
test
cmp
adc
in
and
jl
push
cwtl
adc
mov
pushf
sbb
leave
lds
idiv
outsl
xchg
cmp
add
ret
incl
and
lahf
pop
mov
fisttps
jns
aas
pop
add
mov
out
push
cmpb
clc
fistpll
insb
fdivl
and
js
mov
cmp
aas
pop
imul
lcall
or
fsub
jge
aas
fs
pushf
insb
insl
xchg
lret
test
gs
outsl
nop
mov
or
int
and
lret
mov
push
cmp
inc
jl
mov
or
fistps
ja
lock
test
lods
xchg
hlt
fildl
adc
sbb
pop
loopne,pt
mov
xchg
jl
jle
movsb
ret
fidivs
test
mov
scas
out
fcmovb
cmp
lahf
xchg
mov
daa
push
jns
cmpsl
ds
jmp
push
jae
into
not
test
paddw
mov
pop
ds
cmp
scas
and
jae
imul
scas
filds
xor
pusha
sub
repz
xchg
ljmp
jge
std
mov
pop
out
addl
add
js
dec
aam
mov
or
mov
pop
xchg
adc
xor
inc
aad
imul
popf
ds
lret
xchg
pop
fsubr
rolb
pop
out
rcrl
xor
insb
fbld
dec
add
scas
cli
inc
lods
jmp
ljmp
pop
inc
dec
icebp
mov
cmp
cmp
mov
mov
or
neg
and
mov
in
aas
fdivs
mov
xchg
pop
pushf
pusha
int
or
sahf
pop
jns
addr16
jns
ss
aaa
in
pop
jmp
and
xchg
adc
or
stc
shll
xchg
fsubl
xor
jbe
fdivrl
mov
fs
mov
xchg
insb
ss
cmp
rclb
aad
insl
mov
xchg
mov
push
cmpsb
fstpt
ljmp
cmp
cltd
xor
std
pop
inc
scas
sti
adc
and
push
inc
xor
ja
imul
pop
mov
mov
lods
scas
mov
push
lcall
mov
add
in
mov
inc
outsb
jp
inc
jnp
sbb
repnz
xor
jecxz
dec
or
and
repnz
dec
pushf
adc
div
jp
cmp
fdivrl
cmpsb
testb
lret
jg
pop
cmp
dec
sbb
adc
lcall
xor
adc
mov
lcall
push
sub
andw
xchg
fldenv
and
mov
ret
xchg
mov
sbb
or
pop
cmc
ss
jle
xchg
mov
or
lods
stos
sbbl
lea
add
pop
fldcw
push
mov
mov
mov
mulb
mov
lret
ljmp
cmp
push
loop
test
stc
cmp
jp
ffreep
icebp
out
ret
mov
loopne
int
mov
shr
pop
dec
js
into
sbb
inc
sub
out
lods
jg
lods
jb
push
pop
fidivs
adc
inc
outsl
xchg
inc
leave
push
lcall
neg
out
cmc
test
and
sbb
fildl
mov
pop
les
push
cltd
lcall
ds
jg
scas
cli
sbb
push
out
cmp
jmp
inc
and
pop
mov
repnz
cs
pop
jns,pt
jecxz
mov
and
mov
std
cwtl
jle
add
xchg
fcmovu
push
loopne
dec
loope
jle
add
ja
fadd
int
jmp
stc
fsubl
repnz
dec
ja,pt
daa
shll
mov
add
addr16
add
shlb
pop
rcr
dec
jg
jecxz
push
das
push
inc
divl
ds
fidivs
jb
decb
ffreep
sbb
cmp
ljmp
arpl
call
adc
jno
pop
push
movsb
jmp
inc
pop
push
sub
mov
jle
ficoms
fmulp
cmp
sub
pushl
mov
mov
iret
ret
pop
lret
popf
add
cmpsl
or
jbe
fs
negl
push
pop
movsb
lahf
mov
xchg
cs
pop
imul
inc
mov
dec
pop
pop
aas
lahf
sbb
inc
push
sbb
popf
daa
mov
inc
cmp
aaa
pusha
nop
jp
xchg
loopne
fscale
cmp
jb
and
jmp
fwait
inc
xchg
add
dec
mov
aas
test
and
pop
add
mov
pop
pop
aaa
adcb
add
pop
and
push
and
push
sarb
ret
push
sbb
mov
sbb
es
in
iret
sar
ds
mov
mov
mov
cmp
xchg
cs
adc
jnp
sub
jne
nop
popf
popa
jo
mov
cmp
arpl
clc
fldl
outsl
loop
int3
aaa
fsubs
in
push
push
pop
cmp
or
divl
mov
mov
ljmp
pusha
sub
cmpsl
ss
dec
mov
mov
lcall
negl
test
pop
frstor
dec
pop
pop
jb
cltd
inc
jle
sub
mov
sbb
dec
mov
std
sub
push
push
mov
call
out
scas
test
jne
inc
jl
cmp
cli
fiaddl
xor
sbb
in
mov
dec
cwtl
in
cmp
jecxz
imul
fstl
xchg
movsl
dec
push
mov
ret
and
pop
push
push
or
movsl
xchg
aas
dec
cmpl
out
lds
mov
mov
jb
mov
pop
and
sti
popa
std
mov
mov
shlb
pop
jle
aaa
or
mov
lcall
arpl
pop
dec
mov
cmp
mov
sarb
aaa
xchg
pusha
outsb
dec
daa
sbb
jmp
aam
movsb
fstpt
or
add
inc
xchg
loopne
xchg
mov
or
and
test
lcall
sub
fsubl
xchg
mov
inc
add
jbe
icebp
mov
lcall
movl
decb
push
test
push
aaa
or
adc
mov
int
pop
fs
movsl
fsubrl
cmp
mov
pop
out
dec
xor
hlt
aaa
xchg
je
sub
inc
mov
stos
gs
btr
ds
jge
imul
push
in
gs
jbe
xlat
mov
pop
cmc
jg
and
xchg
popf
push
in
adc
roll
test
mov
sahf
ds
stc
in
lock
ds
inc
in
sbb
mov
arpl
jp
bound
call
es
and
decb
in
inc
aaa
pop
or
sbb
pop
aas
xor
in
push
mov
int3
xchg
negl
or
sbb
into
lods
or
negl
es
fstl
test
jae
push
dec
lods
jmp
fnsave
adc
adc
hlt
cmp
lahf
lcall
mov
push
pop
cs
cld
jb
icebp
mov
mov
out
lcall
sbb
stc
shl
cmp
push
aas
xor
ja
in
cs
add
in
aaa
or
pop
sahf
jg
jp
or
jle
stc
shl
sub
xor
or
xor
addr16
xor
bound
push
mov
jne
xor
out
cld
imul
cmpsl
xchg
pop
lock
mov
popa
scas
std
rorl
fs
adc
in
pop
in
cmpsl
repz
lcall
pop
repz
push
dec
pop
lahf
outsb
testl
out
fstl
cld
push
inc
ror
add
lret
add
insb
jg
inc
js
lods
adc
mov
mov
xor
pop
bnd
cmp
pop
cmp
jns
cmp
leave
movsl
int3
dec
mov
fidivs
jbe
cmpsb
das
mov
clc
mov
xchg
bound
or
mov
bound
clc
mov
mov
inc
pop
pop
fisttpll
sub
xchg
xchg
push
inc
cmp
rcrb
xlat
push
pop
and
aad
xor
movsl
dec
dec
mov
pop
pop
mov
inc
sbb
pusha
sarl
jne
addr16
push
jge
sahf
arpl
pop
aaa
pop
daa
and
sub
xor
mov
mov
add
and
rcl
push
movsb
dec
push
jg
add
sbb
inc
and
and
int
fstpl
cmp
jo
clc
mov
xchg
cmp
xchg
push
pushf
andb
xchg
cmp
sub
push
fidivl
add
clc
fdivp
popf
leave
sub
in
cmp
pop
inc
stos
pop
lock
mov
cs
out
lds
cmpl
jl
andb
es
and
push
sbb
aas
aas
stos
xchg
pop
test
cmp
dec
mov
jb
cmpsl
adc
fdivl
lods
filds
mov
addr16
rclb
or
fmull
clc
gs
ret
lock
ja
fcompl
out
mov
lahf
repnz
sub
ret
out
push
inc
sbb
jnp,pt
aaa
rorl
push
cmp
add
fwait
mov
rorl
inc
push
mov
pop
inc
push
out
xchg
je
stos
adc
inc
dec
ss
inc
jae
int3
xchg
dec
enter
cwtl
icebp
mov
mov
pop
sbb
lret
mov
hlt
cwtl
sahf
jecxz
mov
bound
inc
dec
mov
pop
inc
rorb
aam
pop
rcrb
mov
aaa
mov
out
cmp
dec
dec
sbb
addr16
ret
pop
dec
fucomp
in
int3
push
cmp
or
dec
push
push
jne
lret
repnz
cltd
pop
mov
inc
js
lahf
lods
pop
lcall
lods
lock
mov
mov
dec
js
das
jnp
arpl
sahf
test
pop
leave
es
out
jne
jmp
pop
jmp
scas
xchg
jbe
dec
stc
jo
inc
dec
push
dec
scas
inc
jecxz
ja
sub
mov
mov
xlat
jge
or
fcoml
pushf
popf
jno
lcall
subl
and
mov
mov
rcll
xchg
push
lcall
inc
popf
xor
sbb
xlat
xor
xor
add
jb
jne
aas
jbe
clc
fdivp
aad
add
and
pop
hlt
add
movsl
lcall
ret
arpl
repnz
jns
cmpl
sti
mov
and
lcall
addb
dec
sbb
mov
lcall
outsb
cmp
jns
jmp
mov
es
push
pop
push
lret
insl
sbb
xor
pop
cmp
adc
inc
inc
mov
fnstsw
iret
xor
ds
xor
jo
push
sub
scas
mov
aas
inc
jp
and
and
dec
fmulp
adc
outsl
push
in
ja
fidivl
fsts
cld
inc
jmp
ds
fcmovnbe
stos
jg
mov
pop
add
pop
fstpl
pop
or
out
mov
les
xchg
rorl
mov
pop
ffree
cs
jmp
ds
mov
push
mov
stc
cwtl
ret
and
mov
lret
adc
push
cld
push
sbb
pop
mov
push
xchg
out
pop
xchg
add
rorb
test
out
cmp
or
mov
xchg
ds
add
clc
pop
dec
lret
test
mov
adc
popf
ds
sahf
dec
inc
outsb
mov
cmc
aaa
ret
jo
call
rorb
adc
pop
or
movsl
push
push
cltd
add
mov
cs
inc
inc
mov
add
mov
and
in
int3
or
inc
sbb
jg
pop
fnsave
push
in
mov
lods
push
inc
aas
sbb
pushf
outsl
daa
sub
ficoml
and
sbb
ret
add
push
aaa
push
inc
xchg
mov
das
jae
pop
fldl
inc
test
dec
mov
or
adc
imul
fwait
cmc
push
test
aad
in
push
jle
push
rorb
cmp
sub
cmp
bound
aas
mov
daa
fisttpl
fcoml
mov
scas
inc
inc
bound
cmpsl
sbb
fmul
push
pop
sbb
mov
rcrb
mov
inc
mov
inc
dec
inc
pop
mov
movsb
hlt
jb
in
xchg
mov
aam
push
inc
xchg
mov
fwait
add
add
sub
xor
mov
add
mov
push
mov
add
xor
mov
mov
sub
mov
mov
push
mov
cmp
je
lea
lea
mov
push
sub
mov
lea
xor
cmp
jne
lea
xor
cmp
jne
mov
lea
sub
mov
mov
inc
test
je
cmp
jne
mov
mov
mov
lea
mov
mov
sub
cmp
je
mov
mov
sub
cmp
je
xor
cmp
je
cmp
je
cmp
je
mov
mov
mov
test
jne
mov
push
xor
mov
mov
mov
and
mov
push
mov
and
sub
mov
mov
mov
sub
mov
call
xor
lea
mov
sub
add
cmp
je
sub
cmp
jne
mov
mov
mov
cmp
jne
cmp
jne
xor
cmp
jne
mov
lea
mov
test
jne
mov
mov
add
mov
mov
mov
shr
mov
cmp
jne
mov
sub
mov
sub
add
mov
mov
mov
mov
cmp
je
cmp
jne
cmp
jne
cmp
je
mov
lea
mov
add
and
cmp
je
mov
mov
cmp
jne
mov
sub
mov
mov
mov
mov
sub
cmp
je
mov
call
xor
lea
test
jne
mov
mov
mov
cmp
je
sub
xor
test
je
mov
test
jne
sub
mov
mov
cmp
je
mov
cmp
jne
xor
and
mov
sub
lea
sub
cmp
jne
cmp
je
mov
mov
and
mov
mov
test
jne
test
jne
cmp
jne
mov
cmp
je
mov
sub
cmp
je
mov
mov
lea
cmp
je
mov
mov
cmp
jne
cmp
jne
mov
xor
mov
mov
sub
sub
mov
mov
mov
mov
lea
cmp
jne
lea
xor
mov
sub
add
cmp
jne
mov
mov
and
mov
add
mov
mov
mov
lea
sub
mov
mov
mov
test
jne
mov
mov
cmp
jne
mov
cmp
je
cmp
je
lea
cmp
je
mov
pushl
push
pushl
call
mov
mov
inc
mov
mov
addl
mov
mov
mov
mov
mov
mov
mov
mov
test
jne
cmp
jne
mov
lea
cmp
je
mov
mov
and
or
cmp
jne
xor
mov
cmp
jne
mov
add
mov
add
dec
cmp
jne
mov
and
mov
mov
test
jne
mov
mov
add
cmp
je
mov
mov
mov
mov
mov
inc
mov
or
and
cmp
jne
mov
call
xor
mov
mov
cmp
jne
mov
xor
mov
mov
test
jne
mov
sub
xor
mov
mov
sub
mov
mov
mov
mov
mov
test
jne
mov
mov
mov
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
cmp
jne
mov
test
je
mov
push
dec
mov
mov
mov
mov
sub
mov
push
xor
xor
mov
mov
sub
mov
push
mov
lea
mov
inc
sub
mov
mov
movl
add
mov
cmpl
jne
mov
mov
xor
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
cmp
jne
mov
mov
add
cmp
je
mov
lea
mov
mov
cmp
jne
mov
mov
mov
mov
sub
mov
mov
add
test
jne
mov
test
je
mov
mov
or
test
jne
mov
mov
mov
sub
lea
cmp
jne
mov
mov
lea
mov
mov
and
mov
add
mov
mov
xor
mov
rdtsc
lea
mov
mov
mov
mov
mov
and
add
mov
add
mov
mov
cmp
jne
mov
mov
cmp
je
mov
mov
mov
and
mov
mov
mov
cmp
je
mov
addl
sub
add
mov
xor
mov
and
mov
mov
push
call
xor
mov
mov
add
sub
sub
sub
mov
or
jne
mov
lea
mov
mov
subl
and
mov
mov
inc
mov
mov
cmp
je
lea
mov
cmp
je
mov
mov
cmp
je
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
test
je
lea
mov
mov
mov
mov
mov
push
cmp
jne
mov
mov
xor
mov
sub
sub
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
or
je
mov
addl
add
xor
xor
sub
cmp
jne
mov
mov
xor
sub
cmp
je
mov
mov
lea
mov
cmp
jne
mov
sub
mov
xor
mov
mov
cmp
je
cmp
je
mov
mov
add
test
je
cmp
jne
sub
test
je
mov
and
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
add
mov
xor
cmp
jne
and
xor
mov
mov
mov
mov
and
mov
cmp
je
cmp
jne
mov
xor
add
mov
add
mov
add
cmp
jne
mov
mov
xor
sub
mov
lea
cmp
je
mov
mov
inc
mov
mov
mov
mov
sub
add
mov
mov
lea
mov
cmp
je
mov
mov
sub
mov
cmp
jne
lea
xor
mov
mov
mov
mov
mov
add
mov
xor
xor
or
xor
mov
and
mov
mov
xor
lea
mov
inc
xor
lea
dec
or
mov
mov
sub
mov
mov
cmp
je
lea
lea
cmp
jne
mov
mov
dec
mov
mov
mov
cmp
je
mov
mov
mov
mov
jmp
lea
xor
mov
sub
add
mov
lea
mov
and
or
mov
xor
mov
mov
inc
mov
cmp
je
mov
test
je
lea
cmp
jne
mov
cmp
je
lea
mov
mov
cmp
je
mov
cmp
jne
mov
mov
cmp
je
mov
add
mov
lea
or
cmp
je
mov
mov
or
cmp
jne
mov
mov
add
mov
cmp
je
mov
test
je
and
mov
xor
mov
mov
test
je
mov
mov
add
mov
mov
mov
mov
add
cmp
jne
xor
mov
mov
mov
jmp
mov
mov
add
mov
xor
mov
mov
xor
cmp
jne
mov
mov
and
dec
mov
cmp
jne
cmp
jne
cmp
je
mov
inc
mov
cmp
je
mov
lea
xor
add
mov
mov
mov
mov
mov
and
add
mov
mov
jmp
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
add
cmp
je
and
mov
mov
mov
mov
mov
mov
mov
and
mov
cmp
jne
cmp
je
lea
mov
add
mov
mov
pop
mov
mov
pop
lea
lea
mov
cmp
jne
lea
lea
cmp
je
cmp
jne
sub
mov
mov
mov
cmp
je
mov
add
xor
sub
cmp
jne
cmp
je
mov
or
sub
and
mov
mov
mov
mov
mov
mov
mov
pop
cmp
je
mov
lea
add
mov
mov
test
je
xor
cmp
jne
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
xor
lea
mov
push
mov
push
mov
push
sub
mov
lea
mov
mov
mov
sub
mov
sub
lea
lea
mov
mov
mov
cmp
je
lea
test
je
xor
mov
mov
and
mov
mov
mov
mov
cmp
je
xor
cmp
jne
xor
xor
mov
add
mov
cmp
jne
xor
sub
lea
mov
mov
or
mov
cmpl
je
mov
decl
lea
cmp
je
mov
addl
mov
mov
mov
mov
roll
mov
add
mov
subl
xor
mov
mov
cmp
jne
and
or
mov
cmp
jne
cmp
je
mov
mov
cmp
je
mov
inc
cmp
jne
mov
add
xor
mov
mov
cmp
je
sub
mov
cmp
je
sub
mov
lea
cmp
je
cmp
jne
cmp
je
test
jne
lea
mov
cmp
jne
xor
xor
cmp
je
xor
mov
mov
jmp
cmp
jne
xor
mov
test
jne
mov
cmp
jne
lea
cmp
je
cmp
je
mov
mov
mov
sub
test
jne
mov
mov
mov
add
add
cmp
je
mov
lea
mov
mov
cmp
jne
mov
add
mov
mov
xor
mov
mov
mov
pop
mov
cmp
je
sub
cmp
je
test
jne
mov
cmp
je
mov
test
je
mov
mov
sub
mov
mov
cmp
je
cmp
je
cmp
je
add
mov
xor
cmp
je
add
mov
mov
mov
xor
mov
add
mov
mov
cmp
jne
cmp
je
lea
mov
mov
mov
cmp
jne
lea
mov
cmp
je
cmp
je
mov
mov
sub
mov
mov
mov
add
sub
cmp
je
xor
mov
xor
mov
cmp
jne
xor
mov
mov
mov
mov
mov
pop
lea
cmp
je
mov
test
je
mov
mov
mov
cmp
jne
add
mov
xor
add
mov
mov
sub
mov
and
cmp
jne
cmp
je
mov
or
test
je
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
mov
add
test
je
mov
mov
pop
mov
mov
cmp
jne
cmp
je
mov
mov
and
mov
xor
cmp
je
mov
mov
mov
add
cmp
jne
mov
cmp
jne
cmp
je
cmp
jne
cmp
je
test
je
mov
or
cmp
jne
mov
cmp
je
mov
inc
and
cmp
jne
cmp
jne
mov
mov
lea
test
jne
cmp
jne
mov
cmp
jne
and
mov
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
mov
push
mov
sub
mov
add
mov
mov
push
mov
mov
mov
mov
push
mov
mov
or
mov
push
lea
mov
dec
mov
test
jne
cmp
jne
mov
xor
cmp
je
cmp
je
add
xor
xor
add
mov
mov
cmp
jne
sub
mov
mov
cmp
je
mov
cmp
jne
lea
mov
mov
cmp
je
mov
test
je
add
xor
mov
mov
mov
mov
sub
cmp
je
xor
lea
mov
mov
cmp
je
xor
mov
mov
mov
lea
mov
mov
sub
mov
mov
mov
mov
lea
mov
mov
push
add
mov
mov
add
or
mov
sub
mov
mov
mov
and
mov
mov
mov
mov
sub
mov
or
mov
mov
mov
sub
mov
mov
sub
cmp
je
cmp
je
mov
lea
mov
mov
sub
add
mov
mov
sub
mov
mov
push
mov
cmp
jne
mov
mov
sub
and
sub
mov
add
mov
cmp
je
xor
mov
add
cmp
je
lea
mov
mov
mov
mov
mov
push
xor
mov
cmp
je
mov
or
mov
mov
mov
mov
mov
mov
mov
sub
mov
add
cmp
je
mov
mov
mov
mov
mov
push
lea
cmp
je
and
mov
mov
add
mov
lea
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
inc
test
jne
mov
mov
mov
mov
add
add
cmp
jne
mov
mov
and
cmp
je
cmp
je
mov
mov
mov
xor
cmp
jne
mov
mov
dec
mov
mov
mov
mov
mov
cmp
je
xor
mov
mov
mov
sub
lea
xor
mov
cmp
jne
mov
mov
mov
mov
cmp
jne
mov
mov
cmp
jne
add
cmp
je
mov
test
jne
cmp
jne
lea
xor
mov
mov
mov
call
mov
add
mov
mov
mov
mov
mov
mov
lea
add
xor
add
cmp
je
lea
mov
xor
mov
mov
movl
mov
mov
mov
mov
mov
test
jne
mov
mov
mov
sub
or
cmp
je
mov
mov
cmp
jne
lea
xor
mov
mov
mov
mov
mov
mov
mov
xor
mov
and
mov
mov
mov
cmp
je
cmp
je
mov
and
mov
cmp
je
mov
sub
mov
or
je
xor
mov
mov
repnz
mov
mov
or
test
je
cmp
je
cmp
jne
mov
mov
mov
cmp
je
test
jne
mov
mov
mov
sub
cmp
je
xor
mov
cmp
jne
cmp
jne
cmp
jne
mov
mov
sub
lea
cmp
je
mov
test
je
cmp
jne
sub
mov
mov
cmp
je
mov
mov
add
mov
cmp
jne
cmp
je
mov
and
xor
mov
mov
and
mov
test
je
and
cmp
jne
cmp
jne
xor
cmp
jne
mov
mov
mov
addl
mov
jmp
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
add
and
mov
mov
mov
mov
sub
cmp
jne
mov
add
cmp
je
xor
lea
mov
add
cmp
jne
mov
lea
mov
cmp
jne
cmp
je
lea
cmp
je
add
cmp
je
mov
cmp
jne
lea
xor
cmp
jne
mov
and
mov
mov
sub
add
mov
cmp
jne
mov
mov
sub
sub
mov
mov
test
je
mov
pop
mov
mov
mov
test
je
mov
xor
mov
mov
mov
mov
mov
mov
sub
cmp
je
mov
mov
or
mov
mov
mov
pop
mov
pop
mov
mov
xor
cmp
jne
lea
mov
or
mov
leave
ret
cmpsb
nop
add
add
nop
add
add
nop
add
add
add
add
add
add
xchg
add
add
xchg
add
add
xchg
add
add
add
add
add
xchg
add
add
xchg
add
add
add
add
xchg
add
add
add
add
add
add
xchg
add
add
xchg
add
add
xchg
add
add
xchg
add
add
add
add
add
add
add
add
xchg
add
add
add
add
xchg
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
xchg
add
add
xchg
add
add
xchg
add
add
xchg
add
add
xchg
add
add
add
add
add
add
xchg
add
add
add
add
cwtl
add
add
cwtl
add
add
add
add
add
add
add
add
cltd
add
add
cltd
add
add
add
add
add
cltd
add
add
lcall
ss
push
lcall
jp
add
add
