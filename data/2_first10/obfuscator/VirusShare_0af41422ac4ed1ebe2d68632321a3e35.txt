idiv
lcall
inc
nop
sbb
inc
test
and
pusha
add
push
cmp
adc
add
xor
pushl
or
adc
add
and
decl
rol
xor
add
loopne
incl
and
jmp
shl
inc
jo
sbb
xor
add
adc
incl
and
jg
jo
rclb
and
loopne
roll
or
adc
sbbl
rclb
adc
and
test
rolb
push
add
or
loopne
fcos
cmp
adc
nop
add
dec
jbe
lcall
sti
push
or
dec
add
addl
xor
dec
cmp
mov
pushl
add
pop
adc
cmp
loopne
jmp
rclb
adc
add
or
rcrb
add
test
lods
shrb
xor
shrl
addb
mov
xor
andl
rorb
fmuls
push
nop
lcall
outsb
add
loopne
dec
sbb
test
nop
adc
testb
adc
and
jo
pop
pusha
and
cs
imulb
rcr
adc
jo
dec
sbb
or
pushl
add
jnp
aaa
add
add
lcall
in
pusha
or
lcall
sbbl
xor
mov
or
and
jbe
mov
sbb
sub
mov
hlt
and
inc
xor
sbb
and
dec
pusha
or
stos
and
orb
loopne
add
aad
sarl
push
fisttpl
adc
adc
or
xor
fsubrs
sbb
andl
test
roll
add
inc
push
bound
scas
clc
and
sbb
push
or
push
adc
dec
or
inc
rcr
aaa
inc
add
and
loopne
and
adc
push
or
mov
pusha
jbe
xlat
je
mov
pop
lds
in
jo
and
pusha
fsubs
bound
adc
push
pop
dec
sub
jo
inc
adc
cmp
and
pusha
subl
push
mov
or
push
dec
rolb
xor
test
sbb
loopne
andb
rcll
roll
xor
dec
push
andl
nop
popa
push
mov
add
pusha
in
mov
sub
add
mov
jbe
push
addl
mov
fs
adcb
or
andb
sub
inc
inc
or
mov
cli
in
movb
adc
insb
je
adc
or
or
into
pop
and
xor
int3
loopne
jb
adc
pusha
adc
addl
lock
inc
push
popa
pop
fiaddl
xchg
in
fcompl
mov
or
inc
nop
push
and
adc
or
stos
popa
dec
jo
mov
xorb
nop
inc
add
pop
push
sbb
mov
faddl
xlat
add
push
ds
dec
loopne
ret
outsb
push
push
cmp
mov
orl
inc
loopne
jb
add
andl
cmp
sbb
rorb
cli
jb
lcall
inc
or
sub
mov
jbe
or
ss
fildl
jecxz
and
add
adc
mov
clc
add
pop
push
addb
jbe
fld
popa
cs
movsb
push
push
dec
shlb
and
pop
les
dec
lret
andb
sbb
or
dec
outsb
sbbl
sub
fs
jo
shl
push
into
inc
orb
push
sub
fmull
xchg
xor
or
pushw
es
movsb
out
sbb
imul
xchg
mov
jl
enter
bound
or
sbb
pop
icebp
leave
loope
int3
mov
push
test
add
xor
xor
push
adc
xor
and
addb
push
lods
loopne
jb
lcall
test
stos
inc
or
addb
pop
sbb
fadds
jp
fiadds
test
test
jle
out
push
flds
in
or
xchg
lock
lods
loop
loopne
add
repnz
repnz
orb
sbb
lock
mov
or
sub
orb
incl
sbb
scas
add
aam
push
cs
lret
sub
fadds
add
adc
shlb
adc
sub
ljmp
pop
data16
push
test
push
or
sbb
inc
sbb
cmp
xor
loopne
xchg
xor
shll
sub
jl
roll
xor
pop
stos
aaa
xor
add
mov
pop
add
xor
cs
and
pop
cmc
mov
or
dec
sbb
push
xchg
clc
push
jo
and
add
push
cmpl
cwtl
inc
mov
sbb
add
gs
push
add
add
int
jno
and
inc
repnz
dec
pop
popf
cmp
push
rclb
ljmp
add
mov
test
test
loopne
js
adc
inc
shll
push
push
push
add
imul
adc
fsubl
and
adc
push
test
scas
test
sbb
adc
xchg
mov
dec
add
sbb
mov
cmp
mov
out
and
into
xor
and
popa
push
int3
cmp
add
mov
mov
mov
rclb
rorb
pusha
gs
addb
les
lods
js
push
push
cmp
sub
dec
lock
adc
pusha
push
or
and
lods
push
jo
rorb
jp
xchg
mov
sbb
add
push
sub
mov
nop
pusha
lock
inc
shl
pushf
push
xor
sbb
push
addb
jmp
mov
cmp
push
jno
ret
push
dec
xor
shrl
movsb
add
add
nop
push
rolb
addb
nop
xor
mov
xchg
insb
mov
push
cmp
nop
mov
dec
mov
pop
lret
mov
dec
jp
out
add
add
clc
xor
popa
sub
inc
shrb
mov
adc
inc
inc
add
je
dec
push
sbb
jo
call
or
lcall
pop
cmp
or
adc
xchg
mov
jle
xlat
imul
rol
scas
push
out
je
sub
push
cmp
sahf
xorl
inc
push
mov
scas
mov
and
fdivs
es
out
mov
ficoms
sbb
or
and
inc
divb
js
icebp
addl
cmp
inc
push
mov
adc
nop
rcrb
mov
add
add
push
jle
adc
adc
inc
testb
or
es
sub
pop
xchg
call
pop
sbb
jo
xchg
or
bound
outsb
test
sbb
adc
inc
push
sbb
pusha
add
push
adc
jo
in
imul
or
push
inc
sbb
or
data16
stos
fsubrl
stos
mov
push
sub
sarl
push
jp
push
or
and
pusha
adc
inc
and
ret
push
adcl
adc
shlb
and
xchg
add
addl
pusha
loopne
push
mov
inc
mov
loopne
dec
pusha
sub
mov
cmp
push
push
jle
adc
sbb
out
inc
scas
push
cwtl
add
hlt
or
lcall
cld
add
push
shll
pop
inc
push
push
push
fadds
or
lods
jo
sub
mov
add
push
pop
add
fsubl
mov
xchg
dec
mov
mov
jo
sbb
mov
pop
push
bound
xchg
sbb
add
push
insb
lock
nop
andl
movsl
add
mov
push
push
dec
xchg
xchg
add
pusha
or
xchg
mov
xor
lcall
xchg
or
rorb
xor
or
bound
jb
scas
test
inc
mov
cmp
sub
clc
sbb
add
push
ss
push
es
adcl
add
xor
cmp
or
jae
lret
insb
scas
inc
test
in
cld
and
popa
idivb
sbb
cmpl
push
fstps
cmp
orl
inc
sub
lret
sub
dec
adc
dec
mov
test
call
or
adc
mov
into
push
rol
repnz
xor
xor
add
call
dec
enter
ljmp
push
add
mov
je
add
adc
adc
call
jo
sub
push
shll
add
adcb
mov
cld
andl
mov
addl
loop
adc
addl
mul
call
sub
push
sub
sbb
add
inc
jo
jbe
push
lret
push
cmp
aam
shll
mov
and
adc
mov
test
call
pushf
jae
adc
push
js
push
mov
loopne
dec
dec
nop
stos
inc
add
inc
add
add
push
movb
mov
mov
sbb
div
call
shll
add
xchg
add
xor
sbb
mov
inc
and
test
add
rcll
push
pushf
adc
fmull
in
mov
fdiv
sub
dec
test
adc
test
adc
fs
call
push
adc
or
xchg
adc
data16
sub
adc
push
ds
sub
push
push
adc
xchg
subl
xchg
sbb
jo
adc
rolb
push
fimull
insb
lcall
or
or
pop
or
shl
xor
fdivl
or
mulb
lret
xorb
pop
je
dec
add
pop
dec
out
or
daa
insb
fcom
mov
push
cmp
cmp
mov
sub
jl
pushf
push
loop
adc
push
or
lret
movb
inc
adc
add
lock
je
xor
add
lret
andl
push
adc
add
fwait
inc
xchg
inc
add
cmp
add
je
jle
jo
hlt
int3
test
sbb
sub
sbb
jb
inc
cli
and
adc
adc
push
add
inc
or
out
xchg
and
pop
push
or
cmp
push
push
adc
push
dec
add
or
push
mov
sahf
dec
cmp
dec
inc
shll
or
add
jo
push
adcb
adc
mov
dec
push
sub
scas
dec
or
jp
stos
xchg
add
mov
xchg
xlat
push
add
add
sub
inc
cwtl
push
adc
int3
movsb
cwtl
push
in
rclb
add
adc
adc
inc
xchg
jecxz
xchg
xor
pop
hlt
nop
and
pop
adc
lods
enter
into
jl,pt
or
negb
push
or
add
add
lcall
push
push
movsb
rolb
scas
and
andb
mov
mov
pop
or
cli
adc
mov
push
sahf
add
add
sbb
adc
jo
hlt
nop
add
jle
clc
loop
fldl2t
leave
sbb
test
add
xor
add
or
add
out
xchg
xor
add
push
sub
jle
add
loopne
adc
nop
mov
clc
push
and
add
sbbl
sub
adc
test
xor
jle
loopne
inc
xor
jb
push
jp
jl
test
push
nop
xor
jl
push
mov
addl
stos
add
adc
push
mov
test
testb
and
pop
pushf
jbe
mov
adc
xchg
add
or
pusha
adc
sub
aaa
dec
adc
jo
cmp
sub
add
fcompl
adc
push
ret
out
xor
add
enter
shlb
adc
and
ss
mov
push
pusha
pop
rorb
sbb
out
mov
add
or
and
orb
and
fdivrs
xchg
rorl
add
mov
mov
mov
pusha
push
in
ss
and
jl
sbb
add
push
add
call
dec
or
xor
or
inc
or
adc
mov
xor
rcrb
les
mov
push
jnp
test
out
and
popa
xchg
dec
test
and
push
xor
add
bound
sbb
sbb
mov
movsb
pop
or
lods
rclb
dec
loop
add
add
inc
adcl
sub
shll
loopne
rorb
sub
mov
jl
inc
or
inc
gs
mov
imul
pusha
mov
cs
mov
mov
lcall
add
shl
xchg
sub
inc
sub
pop
sub
bound
fs
mov
add
sub
ret
outsl
xor
add
xor
jle
orb
test
and
dec
and
xchg
push
dec
and
inc
xchg
mov
cwtl
push
js
addl
js
and
jne
add
into
add
test
dec
je
sbb
sbb
stos
data16
inc
push
add
mov
add
fdivr
test
shrb
fcoms
nop
pusha
dec
in
test
and
inc
push
mov
adc
sbb
cmp
or
dec
ret
movl
or
adc
outsb
adc
adc
xchg
mov
mov
je
or
or
and
pop
stos
push
test
aam
dec
lods
jle
mov
push
cmp
cmp
bound
mov
ror
movsb
les
cmp
xchg
lods
add
adc
int3
mov
pop
and
mov
mov
push
or
or
fs
or
jbe
dec
xchg
shrb
push
xor
push
out
ds
sub
ljmp
stos
add
cmp
add
mov
adc
mov
add
subl
pop
nop
loopne
dec
add
clc
scas
mov
mov
mov
cmp
into
loopne
add
xlat
push
push
adc
popf
or
rclb
scas
cmp
loopne
or
push
pop
jo
add
imul
pusha
cmp
add
mov
dec
add
and
sub
mov
ss
mov
add
push
lea
push
loopne
jle
notb
inc
loope
mov
mov
je
bound
or
inc
and
mov
subl
or
adcb
adc
and
inc
adc
and
cmpb
dec
xor
data16
lock
adc
mov
push
mov
inc
adc
sbb
or
pusha
push
ret
fdivrp
cmp
xchg
enter
pushf
add
dec
jno
push
dec
add
into
push
jp
incl
xlat
shlb
dec
fs
and
int3
cmp
push
sub
adc
addl
js
add
data16
add
pop
cmpsb
repnz
add
shrb
sub
dec
push
add
rorl
push
fiaddl
cli
push
xor
adc
jo
adc
adc
sbb
or
adc
add
sub
sub
movsb
adc
mov
in
xor
sbb
fsubl
loope
xor
mov
inc
cmp
inc
incb
int3
js
xor
ficomps
sub
pop
xor
int
sub
sub
push
or
push
push
cmpb
xor
adc
imul
add
scas
or
xor
mov
addb
jno
xor
inc
out
mov
das
add
sahf
lret
decl
decl
add
nop
adcb
add
je
pop
cmp
mov
xor
jp
les
push
and
cwtl
jo
or
or
xchg
cld
or
adcl
loopne
dec
and
cmp
repnz
movsb
push
add
js
cmp
jecxz
pop
xchg
and
mov
push
nop
xchg
mov
push
dec
fcom
cmp
add
adc
sahf
push
imul
outsb
ds
mov
sub
hlt
adc
pusha
jb
rclb
data16
jb
jne
stos
nop
pusha
int3
test
cs
and
adc
mov
add
xchg
inc
or
mov
push
add
xor
mov
add
adc
bound
push
inc
not
sbb
push
add
nop
cmpsb
inc
add
testb
inc
add
cs
push
adc
push
and
adc
cwtl
addl
pop
test
enter
dec
popa
or
xor
xor
add
enter
inc
or
or
add
fs
mov
sahf
push
sub
mov
adc
cmp
cmpsb
jp
inc
and
xchg
add
or
jle
adc
lcall
ljmp
lcall
pusha
adcb
adc
rcrb
push
push
adc
adc
addb
pop
shlb
push
sbb
js
rolb
test
test
add
mov
mov
fs
adc
push
push
pusha
adc
lcall
push
add
pop
jb
scas
mov
adc
jbe
and
xor
pusha
xor
mov
sahf
and
shrl
xchg
mov
sahf
adcb
dec
push
rolb
push
andl
dec
sbb
cmp
pop
shlb
push
cmp
mov
fiadds
xor
in
sbb
inc
xchg
stos
push
lret
pop
push
dec
or
xchg
popf
je
loop
and
adc
or
test
popf
pusha
repnz
popa
push
add
insb
pop
rorb
faddl
test
dec
popa
or
xchg
push
xchg
push
push
cmp
mov
pop
int3
ljmp
addb
cli
cwtl
dec
pusha
mov
cld
or
mov
shll
sbb
pop
dec
pop
push
subl
andb
add
adc
xor
sbb
notb
mov
cld
mov
cltd
jbe
into
adcb
xor
ffree
jo
and
adc
lret
push
inc
pushf
nop
push
mov
mov
xorb
add
push
roll
rclb
and
adc
clc
push
enter
insb
jbe
push
and
cld
add
add
stos
xor
adc
arpl
or
lcall
decl
add
sub
jmp
push
jae
xchg
jo
jbe
test
mov
cmp
sbbl
mov
and
pusha
cmp
dec
add
jle
jbe
icebp
add
cmpsb
xor
nop
sub
pop
pop
test
inc
lods
out
and
xor
or
mov
lret
sbb
in
add
dec
inc
and
call
mov
adc
aam
nop
xchg
movsb
mov
loop
mov
jbe
repnz
sub
loop
mov
test
push
add
andl
enter
and
aam
cwtl
add
add
jno
subb
cmc
add
cmp
cs
sbb
xchg
adc
add
xchg
cmpsb
pop
push
adc
or
cmp
xor
push
cmpsb
orb
jb
nop
in
adc
mov
fadds
xor
rolb
push
or
mov
mov
lcall
sbb
mov
and
lret
movsb
jo
data16
int3
rolb
nop
xchg
rcrl
add
sbb
mov
cmp
je
mov
add
adc
xor
gs
mov
addb
dec
xor
adc
sbb
sbb
xor
sbbb
sub
les
add
sub
and
or
sub
rorb
push
pop
xchg
inc
loop
xchg
mov
rorl
shrb
clc
and
pop
push
adc
and
test
pusha
or
out
xor
add
push
dec
push
orl
and
sbbl
xor
mov
insl
loopne
cmp
je
mov
or
push
je
adc
lods
ljmp
and
pop
pop
sbb
inc
and
sbbb
fdivrs
push
xchg
and
nop
push
sbb
add
sbbl
jp
in
or
ss
xor
test
xchg
mov
jo
mov
rclb
stos
add
es
mov
or
out
add
roll
rolb
inc
add
add
dec
and
rorb
enter
inc
add
into
and
and
int3
lcall
cwtl
add
sub
push
adc
adc
mov
jp
fidivs
cld
adc
jle
jge
sbb
mov
cmp
add
xor
add
adc
mov
jb
movsl
cld
dec
mov
jo
xchg
inc
and
xchg
shlb
sbb
cmp
lcall
sub
sarb
add
add
orl
enter
add
test
popa
scas
add
cmpl
push
or
loopne
inc
mov
test
cmp
test
and
add
adcb
loopne
or
mov
addb
or
lock
lods
repnz
adc
es
add
and
inc
scas
cmpsb
jo
and
je
loop
sub
fsubrs
cmp
addb
and
je
push
add
or
push
or
test
fadds
hlt
mov
add
nop
bound
push
shll
sbb
ss
add
add
pusha
xchg
leave
stos
sahf
adc
sbb
adcb
push
sub
sbb
adcb
xor
sbbb
add
mov
add
xor
test
and
mov
rorl
stos
insb
push
xor
push
and
inc
add
adc
inc
rclb
and
inc
push
xor
stos
pop
add
lock
cmp
popl
inc
test
movsb
dec
sbb
or
xchg
scas
xchg
jo
dec
lcall
mov
hlt
sub
aam
jmp
and
and
imul
cmpl
out
xchg
push
insb
pop
cmp
lcall
or
add
test
inc
cmp
adc
addb
adc
test
ret
imul
mov
call
clc
adcb
push
push
add
shll
dec
push
data16
data16
loop
cltd
cs
add
or
and
cwtl
jne
loopne
clc
xchg
cs
sbb
and
add
les
aam
sbb
dec
pusha
test
push
add
repnz
jo
push
pop
inc
inc
test
add
mov
xchg
jle
push
inc
and
mov
xchg
or
inc
pop
pusha
push
out
pop
add
add
jbe
cmp
loop
jl
nop
adc
sbb
inc
xchg
add
rolb
lcall
push
inc
nop
addb
dec
mov
and
inc
loopne
fiaddl
adc
inc
mov
inc
or
mov
add
push
mov
cmpb
test
rorb
call
add
adc
sbb
jbe
data16
xchg
cmp
sahf
push
or
add
sub
or
dec
sbb
xor
push
push
adc
int3
push
sbb
mov
add
clc
pop
jp
sbb
shrb
mov
lcall
or
lods
adc
nop
dec
push
push
loopne
push
jp
add
dec
test
test
aad
xor
dec
mov
jp
cld
pop
cmpsl
dec
mov
loope
insb
mov
push
pop
sub
mov
jnp
push
dec
shlb
xchg
add
push
add
sahf
dec
aam
pop
mov
adc
into
push
sbb
add
sbb
add
data16
add
cld
fadds
mov
jo
pop
rorb
push
rorl
or
jl
jp
inc
add
sub
outsb
addb
push
adc
lret
add
push
cld
inc
xor
enter
push
orl
pop
in
in
add
inc
call
test
mov
or
inc
lods
in
xorb
dec
or
push
or
movsb
or
fs
jo
pop
cwtl
mov
cmp
cmp
call
mov
xor
test
or
xchg
rolb
cli
test
add
and
rclb
lret
jl
enter
mov
adc
inc
loopne
lock
and
outsb
dec
push
mov
xor
roll
rolb
add
call
sub
push
loop
sub
lcall
push
pop
fisubrs
rolb
adc
add
jge
loopne
mulb
push
push
mov
loop
and
add
xchg
dec
xchg
pusha
adc
ja
mov
push
push
adc
push
jbe
cs
in
pusha
hlt
mov
and
adc
or
add
pusha
lcall
sub
inc
lea
jae
enter
dec
shll
notb
xchg
pusha
ficoml
loopne
dec
or
or
cld
or
and
xchg
inc
and
or
dec
inc
pop
cld
dec
jb
add
repnz
into
or
cmpsb
aam
dec
stos
clc
cmp
xchg
clc
pusha
nop
rorl
adc
loopne
push
add
inc
addb
xchg
es
dec
movsb
xchg
jl
xor
ret
inc
xchg
andb
adc
cltd
or
mov
test
mov
push
push
jo
sahf
adcl
adc
shrl
xchg
or
pop
push
inc
je
dec
insb
call
pop
inc
sahf
int3
adc
hlt
add
lret
mov
dec
inc
xchg
pusha
jb
scas
add
sub
xor
mov
xor
jo
add
pop
cmp
add
add
lock
add
jo
rcl
sbb
add
lcall
cmp
ss
add
add
aam
sbbb
or
jo
xchg
or
cmp
inc
push
mov
or
outsb
push
lret
or
push
and
push
fcoml
or
dec
test
xchg
in
adc
adc
mov
loopne
mov
sbb
xor
fcompl
mov
jle
filds
inc
hlt
or
adc
nop
test
sbb
lock
sbb
inc
into
jo
push
ljmp
inc
or
or
dec
and
xor
dec
test
rclb
mov
pop
pop
or
push
nop
push
test
add
sbb
test
lea
xchg
fisubrs
sbb
or
fcoml
dec
sbb
bound
shl
push
sub
loop
add
mov
sbb
ret
or
jae
cmp
push
ljmp
testb
pop
sbb
adc
push
cmpsb
pusha
inc
xchg
add
orl
xor
addl
test
jp
dec
pop
adcl
mov
jb
insb
ret
mov
or
nop
js
add
xor
int3
lcall
addb
out
incl
lret
xor
push
push
sub
cli
andl
xor
push
sbb
adc
inc
and
subb
rorb
xchg
pusha
sbbb
jle
add
or
inc
sub
sbb
or
or
jbe
or
inc
and
xchg
pop
and
loop
cwtl
add
outsl
sbb
sbb
sub
pusha
xor
or
push
sbb
jbe
or
test
mov
scas
inc
or
and
cwtl
shl
jbe
jbe
xchg
jb
add
les
jle
sbb
push
xor
in
ficompl
mov
jo
and
adcb
inc
or
loop
push
out
add
mov
dec
nop
xchg
sbb
push
test
or
add
push
add
lock
sub
mov
cmp
mov
push
push
cmp
cmp
test
fsubrl
ror
adc
xor
xchg
add
or
or
addl
pushf
sbb
mov
test
mov
pop
mov
cwtl
inc
pushf
lock
or
or
dec
cld
rcrb
data16
data16
cmpsb
push
mov
mov
addl
adc
push
xchg
xchg
ss
add
leave
mov
adc
inc
fs
into
add
fs
sbb
or
xor
mov
cwtl
dec
or
test
es
in
adc
andl
xor
fdivl
add
sbb
rolb
push
insl
bound
sbb
xchg
and
dec
mov
push
lcall
add
adc
jle
xorb
sarb
and
loop
lcall
jle
inc
pusha
adc
inc
dec
add
mov
cmpsb
cwtl
mov
gs
sarb
xor
sbb
cli
jl
and
adc
sbb
adc
insb
push
add
cld
add
scas
inc
subb
sub
test
xor
pushw
xchg
pushf
ljmp
cmp
push
repnz
adcl
mov
out
cmp
and
add
push
xor
rcll
dec
push
xchg
add
or
add
add
pop
adc
addb
fimull
pop
fwait
enter
add
insb
shll
xchg
adc
stos
or
adc
fcoms
lods
or
mov
dec
cltd
test
mov
and
sahf
scas
xchg
cmp
inc
movsb
cmpb
push
subl
pop
lock
sbb
call
pop
orb
push
add
mov
add
add
push
ficoms
mov
xchg
xor
adc
push
in
mov
inc
and
dec
add
rcl
push
int3
mov
sbb
xor
push
inc
adcb
cwtl
adc
test
mov
push
adc
rclb
adc
jl
testb
cmp
scas
cmp
add
push
add
sbb
data16
push
addl
inc
xor
rolb
test
inc
in
adc
scas
sub
jo
mov
pusha
call
and
or
add
sbbb
lcall
popf
xor
sbb
dec
inc
xchg
lret
out
clc
add
mov
adc
add
xor
adc
dec
push
add
push
and
int3
and
or
mov
add
loopne
shrl
sbb
addl
addl
dec
cli
adc
pop
push
inc
sbb
sbb
decl
stos
leave
and
pop
orl
add
divb
dec
push
and
ljmp
xor
xchg
pop
mov
mov
push
or
and
mov
pusha
mov
push
jl
rol
pusha
mov
or
cmp
rol
inc
inc
add
dec
shlb
dec
inc
xor
or
xchg
mov
sbb
mov
add
xchg
fmuls
sbb
sbb
shlb
xchg
lcall
rclb
and
subl
gs
test
nop
lods
xchg
imul
enter
loopne
out
mov
push
movsb
adc
and
mov
sbb
dec
push
adc
nop
add
or
sbb
adc
push
or
pop
sbb
pop
fdivl
in
push
cmp
sub
push
add
xchg
jne
adc
fdivl
hlt
mov
jmp
and
sbb
add
xchg
add
fs
or
sub
add
ficoms
push
push
pushf
mov
mov
adc
in
mov
mov
inc
add
aaa
or
xor
jl
test
sub
cmp
stos
jne
add
xchg
inc
adc
adc
sbb
mov
jl
test
push
cwtl
sar
push
nop
push
xor
and
stos
fmuls
or
cmp
addb
adc
or
jl
and
mov
movb
dec
sub
mov
bound
xchg
sub
xchg
loop
push
fcomps
loopne
addb
push
push
iret
push
push
xchg
inc
mov
js
inc
add
ljmp
test
pushl
sahf
inc
xor
or
shll
sbb
inc
loopne
imulb
test
and
add
outsb
lret
add
cld
pusha
pop
add
cmp
add
mov
sub
xchg
sahf
add
inc
shll
aam
or
enter
dec
test
push
adc
subl
add
aam
adc
adcl
shlb
sub
sbb
add
dec
or
inc
enter
fimull
add
mov
jle
add
xchg
sub
inc
adc
ljmp
and
shll
push
je
lods
add
aam
shll
sub
jo
adcb
xlat
xor
repnz
adc
lds
dec
scas
mov
jp
shrb
test
in
mov
mov
xorl
and
lods
pop
adc
shll
xchg
es
cmpsb
push
test
mov
pop
rolb
test
jo
adc
cli
enter
bound
dec
mov
sub
mov
orl
jl
out
adc
pop
xor
sbb
push
xor
das
adc
nop
rolb
sbb
test
mov
addb
cmp
mov
mov
mov
pop
add
add
add
hlt
mov
aad
lret
mov
jo
xlat
xchg
sbb
sahf
sbb
push
stos
xchg
test
inc
adc
stos
push
or
shlb
shlb
and
es
mov
sbb
inc
inc
bound
add
in
push
xor
lret
add
pusha
in
adc
fsubrs
lock
test
clc
lods
bound
push
into
ljmp
mov
sbb
dec
add
mov
js
lock
pusha
sub
andb
and
shlb
jle
or
pop
lock
push
jle
ret
xor
ret
cwtl
mov
test
xor
lods
xchg
push
das
add
cmp
je
js
adc
insb
loopne
xchg
shl
xorb
rcll
andb
into
push
inc
popf
les
in
mov
push
imul
ret
pusha
or
mov
push
add
xchg
mov
inc
cwtl
dec
gs
cli
ljmp
pop
add
sbb
mov
mov
lods
mov
xchg
insb
es
jbe
sub
add
push
mov
xchg
mov
test
add
xor
mov
nop
js
rolb
adc
pop
cli
leave
add
mov
dec
mov
xchg
push
pop
and
andl
inc
add
dec
bound
sub
mov
arpl
dec
sub
add
inc
loop
inc
pushf
push
shlb
sbb
mov
ret
xchg
or
rolb
push
push
xchg
mov
xor
push
dec
add
loop
add
loopne
or
js
jp
adc
enter
inc
popa
shlb
add
push
add
push
mov
xor
jne
popf
mov
sbb
shrb
inc
inc
lods
pop
push
add
mov
add
xchg
cltd
add
sbb
xor
rolb
xor
outsb
adc
mov
lcall
xorb
les
adc
xor
mov
add
orb
push
sahf
adc
or
xchg
push
int3
jle
lock
sub
pusha
mov
add
mov
pusha
push
xor
es
je
adc
inc
xchg
pusha
xor
sbb
xor
dec
push
pusha
or
add
cmp
cs
jle
orb
mov
adc
sub
xchg
dec
add
xorb
or
pop
mov
jb
dec
sub
hlt
out
pop
inc
inc
movsb
adc
test
or
nop
stos
mov
ret
ljmp
push
mov
sbb
jo
inc
movsb
cmp
ds
movb
add
pop
push
cwtl
or
add
sbb
add
push
or
add
stos
sbb
sbb
inc
jp
pop
xchg
lock
pusha
mov
out
jo
pop
pop
es
dec
pusha
fcompl
xor
sub
faddp
xor
mov
cmp
cld
push
outsb
push
clc
and
adc
stos
rolb
enter
cmpsb
adc
pop
subb
cmpb
mov
and
int
daa
adc
bound
jo
and
push
into
push
cli
xchg
inc
popa
sub
cmpsb
addl
push
dec
or
push
testb
xlat
fwait
bound
ret
pop
push
ljmp
into
adc
outsb
add
test
shlb
add
xorl
sub
xor
xchg
popa
push
fldcw
mov
jb
or
add
and
add
mov
ss
sbb
or
test
repnz
cmpsb
dec
subl
mov
pusha
idiv
shll
lock
xor
sub
mov
stos
ds
xchg
sub
inc
adc
sbb
xor
in
loopne
loopne
aam
jo
jo
int3
inc
inc
sbb
mov
inc
push
incb
hlt
pushf
adc
adc
mov
add
push
cs
ljmp
dec
adc
add
jo
adc
addb
xchg
dec
mov
mov
mov
adc
in
push
in
sbb
clc
fsubs
cmp
cmpsl
mov
mov
scas
or
pop
mov
out
movsb
loope
std
call
and
add
adc
shrb
add
fdiv
cld
in
adc
ljmp
lcall
and
mov
xchg
ret
loop
jmp
aam
in
adc
xchg
ds
xorb
inc
mov
mov
mov
sahf
repnz
dec
dec
shl
shll
sub
sbb
popa
xor
cld
push
push
sbbb
xchg
and
dec
fmull
cmp
pusha
push
sub
mov
adc
inc
movsb
movsb
dec
xor
mov
push
movsb
adc
mov
or
add
push
push
adc
xchg
out
or
cmp
rorl
lret
cmp
data16
scas
mov
fmuls
and
jle
fiadds
push
fadds
adc
inc
dec
mov
and
cld
pusha
sub
andl
dec
mov
cltd
loope
orl
imul
and
push
rcrb
stos
ret
outsb
jl
mov
test
es
add
add
pushf
mov
jb
add
cmp
or
sarb
jo
push
mov
clc
mov
rorl
enter
mov
or
sub
nop
nop
dec
andb
add
add
mov
mov
jb
and
insb
adc
pusha
cmp
pop
inc
sub
xor
mov
loopne
jp
push
cmp
lods
xchg
outsb
inc
cltd
movsb
pop
dec
mov
dec
jo
repnz
mov
sub
dec
andb
es
inc
scas
add
mov
adc
and
cmp
jo
adc
inc
ret
xchg
loopne
fcoms
xor
jo
addb
test
adcb
and
cs
adc
sub
mov
add
mov
outsb
xor
and
rcrb
push
pusha
testb
or
jnp
xchg
cltd
sbb
aam
add
dec
cmp
dec
mov
add
js
inc
inc
sbb
push
cltd
or
dec
or
cmp
xchg
inc
in
or
add
sub
mov
js
sbb
bound
or
jae
lods
jle
cmp
popa
add
pop
mov
call
xorb
sbb
ljmp
cli
sbb
inc
cld
mov
in
adc
dec
insb
out
loopne
outsb
push
jge
or
loop
mov
adc
adc
add
sub
ret
mov
sub
xor
cmpsb
add
and
nop
adc
orl
push
les
pop
push
jno
cmp
cmp
adc
jo
cmp
andb
inc
xor
sbb
cmp
or
push
test
add
add
push
mov
adc
xor
push
add
pusha
jb
sbb
rcrb
inc
push
rolb
jp
or
dec
and
out
mov
and
sub
mov
bound
and
pop
ljmp
jo
adc
les
push
loop
dec
fsubrl
imul
shlb
cwtl
xchg
dec
pop
or
pop
out
jmp
add
dec
xchg
push
or
xor
and
push
dec
loopne
cwtl
scas
sbb
int3
push
nop
cmp
add
sbb
cmp
adc
inc
loope
pop
inc
or
adc
jle
mov
mov
out
shlb
pop
test
movsb
jo
fsubl
add
mov
mov
rolb
and
sbb
enter
adcl
bound
xor
pop
fs
pusha
push
inc
and
cmp
or
lods
shll
ss
pop
mov
test
cmp
loop
out
xchg
jl
cs
or
mov
mov
adc
add
inc
inc
pusha
mov
xor
int
mov
xchg
add
cld
pop
pushf
add
xchg
inc
stos
jbe
adc
add
dec
xchg
subl
dec
in
sbb
or
inc
or
sub
sbb
push
fadds
sub
or
add
add
cmp
and
add
add
inc
push
inc
xor
sbb
jle
cltd
nop
push
mov
cmp
gs
cld
push
and
popa
push
mov
test
subl
add
inc
shll
sub
or
hlt
adc
dec
mov
nop
jb
sub
test
mov
lods
pushl
dec
cmp
pushf
fs
dec
push
push
adcb
add
mov
push
mov
les
inc
xor
rol
jp
mov
addl
test
mov
push
xchg
sub
dec
add
xchg
nop
test
neg
mov
jo
sbb
push
movsb
inc
shll
or
push
add
out
lcall
mov
adc
sub
sbb
adc
inc
movsb
push
cwtl
or
loop
jb
push
add
xor
in
jle
push
nop
data16
jo
cmp
add
push
xchg
or
ds
data16
adc
stos
outsb
shlb
or
or
lret
push
mov
fs
cmp
aam
dec
and
dec
push
addb
cmp
inc
xchg
outsb
rclb
mov
xchg
xor
add
add
add
cltd
ljmp
or
cmp
ret
push
mov
push
ret
push
xchg
adc
add
pop
fs
adc
pop
ljmp
sub
adc
push
ret
sub
push
test
xor
inc
or
or
pop
dec
push
and
shlb
js
xor
das
mov
movsb
adc
loopne
mov
jle
subb
dec
loopne
xchg
inc
mov
cli
add
and
push
mov
sbb
cmp
lcall
nop
pop
rcrb
and
adc
data16
jbe
inc
pusha
push
push
push
sub
lret
mov
mov
in
pusha
clc
jbe
adc
lret
lock
cmp
push
cmp
shrl
mov
push
push
es
xchg
out
add
addb
push
jp
fmull
inc
cmp
fimuls
test
mov
stos
cmp
add
adc
xor
add
pusha
shr
cmpsb
sub
adc
xchg
ret
dec
mov
adc
mov
adc
out
nop
xor
inc
and
and
adc
add
lcall
sub
push
dec
adc
add
popa
push
cld
and
insb
rcl
inc
xchg
outsb
push
test
movsb
and
test
xchg
nop
aam
je
pop
ret
jo
or
add
sbb
add
rolb
hlt
push
xchg
xchg
rcl
cmpsl
popa
xor
mov
loopne
nop
in
inc
push
xchg
sbb
scas
mov
aam
into
fidivrs
adc
push
mov
cs
enter
add
in
mov
and
nop
or
push
adc
int3
inc
mov
pop
add
dec
xor
inc
inc
rorl
inc
mov
loopne
int3
bound
add
xchg
add
inc
jp
cmp
loopne
int3
fidivl
test
mov
int3
es
addl
mov
and
inc
cmpsb
jb
outsb
and
add
mov
add
addr16
sar
sbb
xor
or
in
fcompl
mov
inc
lods
push
push
pusha
xor
fdivrp
and
push
sbb
je
sub
sbbb
les
and
dec
inc
sbb
test
test
xor
daa
pop
test
ljmp
stos
jle
and
dec
mov
cmp
call
in
cs
mov
or
jo
inc
pop
and
push
cmp
add
adc
mov
xor
xor
fsubs
or
push
inc
or
adc
dec
push
push
in
cs
push
inc
add
incl
fdivl
movb
and
icebp
and
xchg
adc
inc
dec
cmp
lock
or
dec
shlb
test
xor
push
push
sbb
andb
push
les
and
xchg
xor
push
adc
pusha
cwtl
inc
mov
and
lret
int3
movsb
pop
out
nop
cwtl
xor
cs
inc
cmpsb
and
test
xor
add
inc
sub
mov
cmp
addb
adc
js
jo
or
popa
es
sbb
add
dec
cwtl
cmp
xor
sbb
xor
out
xor
cmp
push
or
outsb
inc
adc
arpl
cmpsb
and
or
and
mov
or
orb
mov
xchg
add
add
add
lcall
xchg
add
jo
or
and
xor
add
xchg
shl
lret
adc
xor
mov
cltd
add
mov
xor
mov
lock
loopne
push
xor
nop
adc
daa
lea
lds
add
push
jo
add
int3
jo
inc
dec
fsubp
fsubrs
lods
or
bound
cs
inc
test
cwtl
test
cmp
lea
add
jbe
cwtl
shll
mov
lock
and
xchg
mov
push
push
rcl
in
add
or
movsb
dec
dec
test
and
loopne
jne
xor
es
cmp
adc
dec
dec
pop
dec
test
inc
xchg
andb
cmpsb
or
inc
add
stos
push
xor
leave
push
and
push
rcll
mov
cli
repnz
cs
sub
push
add
xchg
xor
adc
push
adc
or
add
or
jle
sahf
scas
pop
dec
rorl
mov
or
pop
loopne
cmpsb
xchg
test
pop
sbb
into
add
push
or
pusha
movsb
dec
mov
aam
adc
aaa
fs
xchg
mov
fmull
into
idivb
xlat
push
xchg
bound
outsb
pop
shlb
call
push
cmp
fcoms
xorb
pop
es
sub
pusha
mov
test
movsb
inc
mov
inc
and
xchg
push
push
inc
cmp
and
pusha
sbb
inc
adc
mov
xor
adc
add
sub
xchg
mov
out
mov
in
and
scas
mov
xor
adc
push
pop
out
or
push
mov
pusha
jo
inc
sbb
inc
or
push
fisubrl
fs
fs
pop
and
xor
int3
dec
shl
test
outsb
or
add
incb
push
adc
push
and
pusha
dec
cmpsb
lods
xchg
cmpb
bound
xchg
cltd
xor
xor
xchg
stos
andl
mov
add
adc
push
rol
mov
xor
inc
and
cmp
test
adc
xchg
inc
xchg
xor
movsb
adc
jb
jo
sub
loop
or
insb
and
pop
xchg
stos
sbbb
inc
sbb
mov
and
ret
add
xchg
aad
xchg
inc
push
sahf
and
sbb
adc
xor
inc
push
jle
jo
adc
push
inc
add
movsb
push
inc
add
call
push
lret
xor
in
jp
cs
and
cwtl
insl
adc
loopne
mov
add
decl
pushf
jb
rclb
cmp
cmp
mov
lret
lcall
lret
addb
enter
stos
mov
add
outsb
cmpsb
xchg
ret
in
adc
cs
xor
loope
scas
sbb
mov
test
fsubp
adc
adc
push
cmp
adc
pop
and
add
leave
or
mov
and
and
cmp
outsb
and
xchg
rol
shrl
or
sub
xor
pop
adc
xchg
ret
inc
xor
cmpb
or
rorb
dec
mov
add
cmp
nop
mov
push
mov
stos
adc
addb
insb
fsubrl
sbb
add
inc
enter
xchg
insb
push
cli
add
mov
xchg
add
cmp
cmpsb
jp
and
cmpsl
jp
pop
ret
dec
test
andb
sbb
adc
cs
mov
fiadds
hlt
cmp
imul
lock
dec
and
cwtl
xor
adc
push
mov
cli
push
add
pop
mov
push
xor
mov
or
mov
push
xchg
adc
add
sub
bound
cmp
mov
jb
add
jo
orb
and
mov
rcll
inc
sub
ret
movsb
adc
cltd
add
loop
inc
sbb
in
shlb
pop
jae
and
nop
or
mov
jo
fcoms
push
sbb
xchg
add
mov
pop
and
xchg
mov
push
loop
add
mov
pop
xchg
pusha
lcall
xchg
lock
or
outsb
das
rol
adc
adcb
ret
loopne
mov
fcoml
inc
inc
inc
and
or
movsl
cmp
int3
movsl
push
int3
or
or
clc
fisubrs
nop
dec
add
lea
pusha
nop
int3
pop
adc
inc
decb
cltd
add
push
xor
push
ret
mov
mov
adc
xor
inc
sub
adc
pop
xchg
or
xchg
mov
and
pop
and
xor
adc
push
test
rcrb
test
pop
sub
mov
sarb
mov
and
cmp
adc
andl
sub
movsb
adc
nop
push
out
or
add
pop
mov
pushf
mov
shlb
pusha
add
xchg
pop
xor
adc
push
out
pop
push
sub
rorb
ret
mov
add
cli
cmpsb
or
inc
xchg
bound
and
fdivs
lcall
pop
into
adc
call
pushf
bound
and
mov
adc
in
xchg
repnz
cwtl
enter
lcall
decb
jo
or
xchg
pop
ficomps
les
xor
add
lcall
mov
and
dec
mov
cmp
popa
xchg
add
call
xchg
push
pusha
adc
jb
test
sbbb
sub
bound
push
xchg
pop
xchg
inc
ret
inc
push
adc
cmp
xor
ret
dec
test
and
out
or
push
out
jbe
and
or
xchg
pop
inc
mov
adc
cmpsb
push
mov
lret
push
mov
and
or
mov
test
orl
adc
fdivrs
add
push
or
mov
xor
or
and
sbb
in
and
or
add
sbbl
leave
mov
push
adc
xor
or
cwtl
pop
mov
sub
inc
sahf
push
incb
ficoml
xor
cli
push
or
mov
pushf
cmpsb
nop
sub
and
fmull
or
decb
insb
cmp
add
adc
push
aam
add
loope
lods
add
xchg
cmpsb
mov
mov
aam
jecxz
inc
and
mov
dec
ficompl
push
sub
stos
shrb
cmp
pop
stos
cmp
rclb
rorl
xchg
je
add
jb
outsb
test
cwtl
je
cmpl
adc
pcmpgtd
call
xor
dec
ds
int3
movsb
adc
jbe
push
xor
pop
rolb
jb
dec
or
sub
inc
pusha
fs
cli
adc
inc
xchg
cmp
cmp
dec
inc
loopne
rcl
inc
and
shrb
mov
shrb
add
pop
mov
clc
cmp
xchg
in
shll
hlt
mov
clc
sub
adc
xchg
stos
mov
jo
cmc
push
sub
and
push
inc
push
add
add
inc
add
or
data16
test
incl
sbb
dec
and
cmpsb
hlt
or
call
bound
ss
mov
lret
adc
test
ret
int
test
and
in
mov
add
mov
push
ret
aam
sub
shlb
popf
test
push
sbb
pusha
adc
insb
pop
outsb
ret
or
cld
push
inc
dec
push
pop
and
test
popf
jo
push
dec
xorb
add
clc
loop
xchg
add
enter
or
and
push
adc
and
and
rcrb
add
sbb
andb
add
inc
movsb
add
int3
xchg
add
push
addb
and
ljmp
sbbb
dec
and
es
add
push
sbb
incb
test
inc
inc
sarl
es
fidivs
dec
test
dec
sub
mov
or
or
imul
mov
int3
mov
push
ret
lcall
and
pop
int3
loopne
or
lret
stos
pop
dec
dec
add
stos
cmp
shl
or
xor
add
add
push
sbb
lock
stos
xchg
dec
out
rcrb
sub
adc
xchg
int3
mov
push
mov
push
shlb
sub
test
inc
sbbl
adcl
inc
dec
pusha
add
add
cwtl
add
sbb
jne
out
pop
or
or
test
mov
adc
test
push
jp
mov
xor
fs
rorl
xor
push
xchg
sbb
xchg
xor
and
loopne
sub
or
dec
scas
xchg
pop
push
mov
or
sub
inc
int
and
test
push
test
sbb
push
fimull
test
adcb
outsb
cmp
xchg
push
pusha
movsl
inc
mov
or
add
adc
and
xorb
fsubrp
and
cwtl
xor
inc
mov
ds
cmpsb
adc
add
inc
add
inc
and
lods
pop
mov
push
cmp
outsb
aam
mov
into
test
adc
testb
dec
inc
call
insb
or
push
inc
scas
push
dec
sbb
lods
inc
xchg
in
add
rcrb
inc
adc
add
mov
fwait
mov
mov
cwtl
jo
out
enter
sub
xor
jo
xor
xor
scas
sub
add
mov
dec
inc
mov
push
test
jle
test
inc
sbbb
pop
or
or
push
insb
test
push
dec
dec
inc
in
mov
ret
push
bound
lock
clc
push
sbb
push
mov
add
push
mov
add
movsb
xchg
push
or
mov
sbb
inc
test
sub
dec
inc
cmp
inc
and
out
out
inc
push
ret
sub
and
lea
adcl
add
add
cltd
add
adc
sbb
sub
xor
mov
into
test
and
push
add
sub
mov
adc
nop
dec
enter
mov
push
xchg
and
test
sub
jo
xchg
adc
or
sahf
xor
inc
adc
dec
sahf
sbb
adcl
jbe
sub
and
fdivr
add
shrb
xor
data16
test
cli
cli
movsb
js
mov
jo
rcrb
inc
jo
insb
sbb
subb
or
sub
sbb
hlt
and
sbb
sahf
cwtl
cli
aam
popl
push
popa
push
inc
outsb
es
test
jbe
add
in
or
dec
nop
jo
es
xchg
loopne
mov
mov
add
push
cmpl
or
add
add
sub
fidivs
add
or
clc
pop
jb
add
add
inc
adc
xor
movsl
test
sub
sub
mov
roll
lret
pop
xchg
or
cld
xor
inc
jne
and
call
sub
ljmp
scas
dec
pusha
bound
lods
dec
clc
mov
shlb
push
movsl
je
js
mov
adc
push
push
adc
dec
cmpsb
fadd
lcall
sbb
or
xor
or
test
rcl
mulb
add
and
dec
dec
mov
andb
add
inc
repnz
lock
xor
rorb
lods
and
pop
push
inc
cs
test
icebp
fs
push
inc
cmp
lods
add
xor
js
fs
popa
cwtl
inc
cmpb
loopne
and
cmp
jb
test
xor
xorb
sub
xchg
in
mov
addl
adcb
shlb
faddl
mov
mov
adc
and
orl
add
sub
mov
addb
xor
jb
mov
cltd
xorb
bound
fs
fmull
js
sbb
push
sub
xchg
xchg
sbbb
jb
jp
mov
data16
adc
inc
and
inc
push
daa
in
js
ss
andb
inc
push
push
add
cwtl
jp
or
lret
adc
xchg
push
orb
xor
adc
dec
orb
scas
and
hlt
pusha
inc
add
add
xor
sbb
test
push
push
push
inc
cwtl
in
lcall
inc
mov
cs
or
adc
dec
dec
inc
rorb
xor
rol
adc
mov
aam
dec
cs
add
sbb
mov
aam
out
rolb
or
divb
pusha
sbb
adcl
inc
sbb
mov
js
adc
sahf
jb
push
add
xchg
pop
out
cmp
or
nop
cmp
jb
push
xor
add
or
or
movsb
add
push
xor
inc
push
or
or
test
cld
xchg
cmp
testb
cmp
inc
xchg
cmp
jg
dec
sub
outsl
mov
xchg
add
mov
ret
out
jg
add
inc
rcrl
cwtl
xor
mov
cmp
add
add
add
xor
mov
je
ja
out
inc
add
add
push
inc
adc
ret
ljmp
aad
sub
icebp
add
inc
cmp
cld
pushl
jno
add
add
cmc
movb
imul
xchg
stos
lret
rcrl
sub
push
mov
push
dec
out
in
lock
cltd
add
or
icebp
repnz
std
ljmp
cmove
roll
out
out
add
mov
rclb
cmp
cmp
and
jg
arpl
add
js
push
das
mov
push
fwait
xor
pop
add
cmp
gs
ret
daa
faddl
and
stos
in
mov
sbb
addr16
add
adc
sub
mov
das
nop
jle
leave
or
and
jecxz
lock
push
add
pushl
pop
pusha
cmp
add
mov
mov
lock
arpl
mov
fsubl
or
ja
insb
add
fidivs
mov
jg
lahf
pop
jo
insb
add
hlt
add
and
lods
dec
add
pop
pop
add
jle
xor
mov
add
call
jmp
sub
add
adc
and
sar
aas
jp
push
add
test
mov
in
pop
cmp
fwait
sbb
loope
outsl
pushl
sub
sub
cld
call
mov
add
lods
jle
cmpsb
mov
hlt
in
orb
inc
sub
mov
fwait
mov
jle
push
mov
out
loop
clc
push
mov
sub
cmpsb
outsb
xchg
out
pusha
xor
add
dec
xor
bound
xchg
mov
add
and
add
sahf
push
lahf
add
sub
fcomps
cli
or
test
add
xor
cmp
xchg
pop
jb
sti
add
ret
decl
fists
add
pop
mov
loopne
decl
ljmp
and
int3
and
ret
sub
dec
bound
and
push
cld
cltd
mov
sbb
cli
std
add
int3
ja
mov
xchg
aas
rcl
dec
cmp
pop
xchg
hlt
mov
add
push
mov
sbb
stos
ss
ja
js
pop
sbb
sbb
sbbl
je
add
cmpsb
addb
stc
lods
adc
pop
lock
lret
add
into
fldl
aad
sub
inc
decl
or
fcomps
inc
jmp
sub
jle
mov
stc
adc
cli
aaa
sbb
inc
xchg
mov
mov
test
rcll
ljmp
es
xlat
mov
scas
and
add
add
mov
cmp
mov
decl
ss
test
add
add
dec
mov
dec
aaa
fdivr
dec
pop
pop
add
or
adc
xchg
mov
outsl
aad
repnz
test
adc
je
mov
or
test
mov
cmp
je
mov
aad
jl
and
es
mov
incl
mov
sub
insb
out
sqrtps
ljmp
push
andl
xchg
fsubrl
fisttpl
inc
rcrb
cli
xchg
sub
pop
scas
cmp
les
cmpb
imulb
cmc
mov
cmpsl
inc
mov
mov
push
mov
mov
jo
cmp
mov
cmpb
sbb
mov
mov
xchg
movsl
pusha
add
add
fildll
stos
out
pop
inc
arpl
inc
cmp
ficoms
xchg
pop
mov
cmpb
rclb
jmp
pop
sbb
ljmp
pop
lret
xchg
ss
hlt
or
pop
or
xchg
push
imul
ljmp
xchg
pop
stos
cmp
xchg
add
xlat
incl
clc
cmc
test
mov
xchg
shr
loope
scas
push
rol
pop
js
cmp
pop
mov
fs
adc
hlt
rcr
push
insl
xchg
outsl
shlb
testl
xor
sbb
push
sti
enter
mov
and
or
fbstp
inc
and
xchg
scas
popf
jle
mov
inc
sbb
shrl
stos
out
adc
outsb
ret
imulb
adc
pushf
or
xchg
jns
arpl
add
outsb
mov
gs
add
pop
cmp
aam
add
mov
or
dec
insb
mov
pop
and
sarl
push
sti
ret
dec
js
dec
fidivl
sti
sub
movb
insl
pushl
shlb
push
push
push
loope
xchg
adc
xchg
nop
inc
ja
outsl
jg
fcomps
inc
sbb
adc
sti
jae
cmp
packsswb
inc
rcll
xor
inc
cli
jle
in
shr
aas
out
js
int3
nop
mov
cli
rclb
xchg
and
mov
daa
or
nop
push
or
sbb
jmp
out
sbb
sub
and
stos
pop
sub
incb
fwait
mov
adc
inc
push
or
mov
mov
sbb
dec
or
and
mov
sbb
pop
lock
lahf
stos
loop
lock
push
mov
or
or
pop
jg
aas
enter
dec
xchg
sbb
push
out
cli
dec
mov
jbe
mov
fsts
cmc
push
int3
fs
mov
and
cld
jge
dec
sbb
test
test
in
int
or
test
xor
adc
icebp
inc
pusha
aaa
mov
in
ljmp
out
mov
sbb
xor
jnp
inc
add
pushl
xchg
outsb
push
mov
dec
dec
dec
pop
sub
jb
push
jbe
ljmp
jnp
pop
mov
or
mov
xchg
ds
or
xchg
jo
dec
in
es
or
movsb
out
cmp
lds
jg
pop
popf
sub
pop
sub
test
jmp
aaa
xor
push
pop
cld
add
shlb
add
test
jg
add
jp
add
and
pushf
or
lahf
hlt
in
lret
jne
jp
mov
mov
inc
pusha
in
jo
mov
sbb
loopne
cmp
insl
and
lcall
movsl
in
cmp
vmwrite
push
mov
popf
add
aas
push
andb
in
popa
jle
fsubs
jmp
sahf
ds
aaa
mov
test
gs
xchg
lds
push
xchg
iret
clc
in
push
cmp
pop
adcb
lret
xchg
sbb
in
lret
int
in
std
add
dec
add
mov
pop
inc
in
cmpsb
sbb
sarb
sbb
movsb
hlt
andb
daa
add
or
or
jae
into
jp
mov
xlat
xor
fwait
inc
xchg
lahf
nop
sahf
lds
decl
jo
add
es
fildl
xchg
loop
leave
cmp
mov
out
lods
outsb
inc
subl
pop
push
fidivs
mov
fucomi
jmp
cli
cld
sbb
mov
sti
data16
lcall
dec
mov
jg
sbbb
and
jecxz
insb
fcomip
es
subb
ficomps
sti
mov
xor
js
push
cmc
sbb
dec
je
icebp
jo
fwait
mov
lcall
pop
call
dec
or
jle
cmpsl
loopne
decl
xor
mov
or
pusha
mov
mov
jmp
and
sarb
jmp
or
jge
test
push
jg
mov
dec
sub
out
lock
sbb
int3
jg
jp
xchg
add
mov
sbb
and
mov
test
inc
nop
test
cmpsl
add
jbe
jecxz
test
jecxz
cmovo
jnp
xchg
in
pop
jp
mov
mov
cmpsl
pop
call
sbb
dec
cld
add
scas
cmp
repnz
and
cmp
add
mov
call
sub
stc
cmp
out
rcrb
jle
mov
adc
jmp
sub
orb
add
cmp
xor
pushf
mov
mov
xchg
mov
jo
add
xor
clc
and
adc
rcl
ret
dec
or
mov
jp
ret
mov
test
js
or
mov
mov
mov
pop
push
popa
add
inc
jle
sahf
mov
int
rcrl
sub
xor
sbb
xchg
xchg
pop
cli
testb
mov
xchg
insl
inc
fmull
push
mov
roll
aas
js
xchg
int3
mov
and
inc
pop
cs
sti
loop
mov
sub
pop
out
mov
xchg
add
add
pushl
mov
inc
lods
push
lds
add
push
into
pop
jne
dec
les
mov
std
adc
clc
testb
bound
loop
mov
sub
push
in
and
shr
sbb
dec
js
popa
add
icebp
or
rcrb
scas
or
pop
fwait
push
add
xchg
fcoml
push
insb
in
and
adc
push
mov
out
mov
xor
sub
cld
shlb
lcall
dec
in
mov
aam
out
jb
test
or
int3
lods
add
ficomps
sub
sub
and
ljmp
or
ja
arpl
xor
aad
bound
subb
sbb
loopne
incb
sub
cvttpd2dq
cmp
add
and
repz
dec
or
movsb
pop
fwait
jmp
jne
sub
jb
stc
mov
das
clc
imulb
pop
js
or
fbstp
mov
repnz
mov
pop
jae
inc
dec
dec
sbb
jl
and
xlat
scas
test
xchg
lock
aad
iret
cs
adc
add
sti
and
fdivs
xorb
lods
inc
sahf
jge
mov
js
inc
in
xlat
xchg
clc
call
sarb
pop
in
nop
cmp
popa
das
stos
xor
jmp
bound
add
mov
mov
jecxz
mov
daa
mov
lea
xchg
icebp
imul
test
pop
test
push
test
push
xchg
cld
js
testb
mov
in
xchg
lds
or
mov
popa
push
jmp
xor
testb
rol
xor
jae
mov
mov
test
dec
sub
int
mov
cmpsb
xchg
mov
pop
jne
ds
cmp
or
mov
sub
mov
or
dec
lds
fsubrs
popl
pop
sbb
dec
and
clc
in
int
loopne
add
popa
or
sub
out
sarb
sub
outsl
popf
mov
and
dec
sub
pusha
xchg
divb
push
xorl
push
jle
arpl
sbb
inc
sbb
rclb
push
test
fcomps
jae
xlat
and
mov
decl
repz
daa
and
insl
inc
or
and
cmpl
push
sub
inc
mov
sahf
mov
and
out
fbstp
xchg
mov
aas
stos
lahf
es
push
scas
add
and
add
pop
idivb
mov
mov
and
out
shl
sbbb
dec
add
inc
add
pop
pop
cwtl
clc
jmp
xchg
nop
cmp
mov
and
cmpsb
pop
jne
loope
leave
xor
addr16
arpl
or
int
xor
push
je
std
ja
fiadds
int3
enter
lret
push
cmp
or
mov
shl
push
in
cmp
mov
fsubl
jne
sarl
mov
dec
jp
inc
fstl
out
clc
push
mov
mov
xchg
jnp
js
dec
sub
jl
sbb
ret
cltd
fs
sbb
lds
fisubs
jl
out
fmull
in
push
mov
orl
xor
shrb
mov
pop
dec
pop
aaa
pusha
push
lods
add
pop
ficoml
out
mov
leave
add
fbstp
cmp
mov
outsl
cmc
out
or
lcall
cmp
int3
fiaddl
sar
clc
pop
fwait
imul
pop
sbb
mov
incl
inc
insb
in
xorb
ljmp
xchg
mov
push
test
sub
mov
mov
pop
mov
ret
and
subb
icebp
pop
mov
mov
movsl
shr
cli
pop
sbb
andb
fwait
dec
fbstp
jecxz
pushl
inc
fldcw
or
movsb
pop
add
xor
sub
jg
lds
hlt
cwtl
insl
sbb
ljmp
js
sahf
mov
pushf
jne
js
xchg
lcall
adc
stos
add
xchg
mov
and
add
loopne
ret
jno
pusha
subb
jmp
mov
cs
inc
or
pop
fsub
mov
and
add
push
mov
push
mov
je
adc
mov
adc
cs
xor
mov
out
inc
test
cs
cli
mov
in
push
cmp
xchg
push
test
out
push
sub
dec
cld
icebp
add
push
sub
adc
fimuls
stc
cmpsl
push
mov
ljmp
mov
sbb
or
jecxz
das
js
inc
and
loopne
and
cmp
push
or
jnp
dec
sub
mov
xchg
data16
push
out
insb
scas
std
pop
add
pop
enter
xadd
std
and
adc
push
xchg
inc
movsl
push
data16
jge
jl
enter
dec
in
icebp
out
xorl
mov
ljmp
rcrl
cmp
test
xorl
push
push
fisubl
jl
mov
fsubrl
cltd
sub
andb
in
in
rcrb
or
xor
fs
jle
mov
jns
int3
jmp
mov
fisubl
jecxz
mov
loopne
je
sub
sub
shl
jne
xchg
sbb
jge
orl
nop
push
mov
push
mov
outsb
ss
cltd
sbb
repnz
fucomip
pop
popa
neg
push
popa
pop
cmp
adc
push
mov
inc
testl
dec
and
popa
or
sbb
sahf
or
adc
mov
push
push
or
test
ud0
out
mov
lret
sub
scas
dec
daa
jg
xchg
decb
movb
sarl
es
mov
rolb
jmp
add
daa
sub
dec
mov
je
sub
adc
push
je
push
pop
pop
iret
or
cli
cmp
or
cltd
push
in
repnz
jbe
loop
mov
sub
sbb
add
dec
jmp
push
inc
xor
data16
les
decb
mov
jg
test
js
xchg
lds
jns
repz
mov
mov
aas
sub
aaa
outsb
cmpsw
sbb
aaa
leave
ret
mov
sub
add
mov
jbe
arpl
fcmovnb
fsubrs
jno
outsb
push
fwait
imul
add
jp
add
dec
arpl
pushf
adc
xor
outsb
adc
inc
dec
add
fisttps
rorl
insl
lcall
mov
test
inc
xor
fcmovu
push
jo
stos
push
xor
push
push
lods
add
inc
push
pop
cmc
push
pop
clc
pushl
push
mov
push
mov
clc
incl
jb
add
pop
mov
add
pop
jo
dec
bound
gs
dec
insl
dec
js
mov
enter
add
arpl
push
dec
push
mov
pushf
or
sub
cld
add
xor
ret
add
mov
mov
movl
add
push
je
cmp
adc
push
mov
insl
xor
adc
pop
icebp
mov
aaa
add
cli
add
jno
aaa
cltd
adc
sub
jge
jl
xor
outsl
mov
lods
mov
push
dec
and
repnz
aas
sti
jmp
add
stos
mov
sahf
in
push
jmp
push
out
sub
inc
dec
mov
xchg
inc
clc
negl
push
pop
pop
pushf
pop
cs
push
adc
pusha
inc
jecxz
ret
xlat
ljmp
stos
cmp
add
cmp
ds
int
dec
xchg
cld
push
xlat
jae
add
int3
cmp
out
add
dec
jp
mov
sub
cmp
mov
decb
pop
lock
jg
pushf
stc
lods
cmp
fs
pop
adc
xchg
and
pop
push
or
push
jne
lret
imul
sub
dec
mov
sbb
nop
idivb
jg
in
imul
jg
pcmpeqb
or
movsb
ret
inc
ss
add
mov
arpl
sti
mov
cmp
xchg
repz
lret
or
jge
sub
or
outsl
inc
mov
into
movsb
fdivs
inc
push
test
xchg
hlt
mov
mov
jp
adc
lea
pop
ds
int3
cmp
push
out
push
dec
subb
push
repz
mov
or
add
mov
test
sub
insb
push
jns
pop
add
mov
push
lods
mov
movsb
mov
sub
add
faddl
out
aam
out
sbb
sub
bound
inc
push
jle
dec
ljmp
enter
or
ljmp
das
sti
push
sub
pop
xchg
add
cwtl
movsb
sarl
sbb
sbb
lea
push
cmpb
movsb
pushf
loop
lods
mov
sbb
fiadds
sub
cmp
insl
sub
pop
push
add
popf
mov
psubb
lock
add
add
sub
jno
push
test
fsubrs
dec
sub
addr16
cltd
jb
fisttpll
fisubl
mov
int3
out
sub
cli
mov
add
aaa
imul
sbb
filds
cli
push
test
inc
cld
lods
repnz
or
ljmp
cmc
push
cs
sbb
jno
test
add
das
clc
or
and
adc
xor
mov
push
in
out
pusha
sbb
out
xorb
in
test
in
insl
mul
xchg
pop
adc
add
mov
or
out
repnz
inc
or
movsb
ja
or
add
incl
push
hlt
je
scas
repnz
xor
aas
enter
push
icebp
jbe
jo
repz
jecxz
jo
and
dec
cmp
cld
mov
sbb
add
cmp
push
bound
das
js
mulb
xchg
and
inc
daa
push
jle,pt
add
repz
inc
and
idiv
and
addr16
pushf
add
rorb
cmp
mov
sbb
or
jb
pop
clc
jg
ret
adc
sbb
cmc
push
cmp
adc
mov
mov
test
dec
pop
mov
scas
add
mov
mov
cmc
pop
leave
xlat
fmuls
enter
in
pushl
sub
xor
addb
insb
or
push
hlt
das
shrb
and
imul
sbb
inc
or
movsb
adc
adc
scas
js
add
cmp
xchg
mov
stos
mov
push
add
inc
inc
aam
and
sbb
xchg
orl
mov
add
or
aad
popf
inc
or
es
mul
dec
insl
cmp
xchg
mov
dec
mov
mov
shl
nop
dec
clc
xor
push
mov
inc
sbb
pop
loopne
push
out
push
pusha
lret
in
dec
jnp
sub
iret
and
inc
sbbb
int
lahf
cwtl
test
pushf
out
mov
dec
add
inc
xchg
fisttpll
pop
inc
fidivl
fs
pop
dec
fdivr
mov
and
das
inc
test
add
push
movsb
push
rclb
cltd
jecxz
lcall
jge
sbbb
or
push
ja
adc
sub
out
gs
mov
mov
push
loopne
mov
ret
jecxz
cld
rolb
jbe
es
cmp
sub
jae
and
cmpb
ja
push
decl
add
adc
pop
sbb
adc
jmp
pxor
sbb
and
ss
mov
mov
cld
lock
sub
xor
fwait
xchg
add
jg
jo
pop
cmp
pop
decl
sbb
mov
js
cld
sub
add
adc
push
sbb
icebp
pop
int3
jo
push
fsubrs
inc
cld
adcb
adc
fdivrp
cmp
incl
jne
jge
test
test
aam
pop
loope
cmovg
orb
dec
aad
or
xor
push
cmpsb
xlat
inc
js
mov
loopne
mov
fcoms
lahf
stos
popa
sbb
cmp
iret
out
adc
rcr
test
or
andb
push
jl
pushf
and
mov
das
push
cli
je
cmpsl
inc
xchg
add
dec
pop
jnp
jmp
cmpb
or
mov
bound
cmpl
xor
and
jle
lds
hlt
lods
dec
dec
cmpsl
sub
test
inc
mov
testb
orb
jo
mov
or
cmpsb
xor
imul
ficoml
adc
arpl
fwait
jp
sti
lcall
cwtl
mov
hlt
stos
mov
fs
aas
xchg
or
inc
insl
out
or
push
sar
scas
aam
cmp
js
bound
and
mov
pop
cmpb
icebp
sub
clc
frstor
fstl
loope
aas
jo
lods
pop
test
int
shll
push
push
adc
xor
mov
xchg
dec
mov
rclb
hlt
and
push
jl
xor
push
inc
jmp
lock
loopne
aaa
push
int3
pop
mov
lock
add
xor
lret
pusha
cli
call
dec
xor
pminsw
inc
cld
jmp
and
jns
mov
adc
cli
add
add
js
pop
movsl
fildll
add
and
sti
push
mov
in
mov
mov
cmp
das
mov
add
inc
inc
insl
dec
jb
cld
inc
pop
shrb
or
lds
test
in
les
cwtl
sub
mov
push
mov
shrb
add
out
nop
dec
test
fs
sub
push
mov
sub
in
dec
jne
adc
jmp
jb
outsl
clc
adc
mov
ret
lahf
scas
jne
mov
add
cmpsl
movsl
hlt
mov
add
cs
cmpl
je
sbb
decl
pusha
bound
dec
adc
call
mov
mov
test
and
cmp
and
dec
or
dec
push
ja
inc
icebp
inc
pop
iret
outsb
add
lock
int
int
daa
jo
bound
aad
mov
xchg
sbb
mov
pop
lock
add
add
pusha
lahf
in
in
add
mov
in
loop
pop
insb
mov
adc
ds
int
fidivl
int3
pushl
xor
fiaddl
add
ja
jno
push
pop
add
call
add
cld
pop
jecxz
mov
and
das
push
inc
add
add
mov
cli
add
mov
dec
mov
leave
ret
inc
add
scas
out
imul
add
mov
xchg
pop
insl
imul
shlb
add
add
inc
cmp
pushl
adc
dec
clc
je
push
ss
inc
xchg
cmp
pop
les
or
out
fstl
idivb
push
adc
call
rclb
insl
iret
push
loopne
add
dec
jbe
xor
inc
dec
fsubs
xor
movsb
mov
mov
out
inc
dec
mov
dec
push
dec
push
ss
fdivrp
loopne
dec
dec
add
inc
jno
push
add
je
push
dec
gs
addr16
movsb
dec
cmpsb
mov
dec
lods
jbe
idiv
inc
dec
cs
push
addr16
mov
lea
push
int
jbe
in
push
lock
out
push
stos
xor
dec
imul
inc
dec
lods
cmpb
push
imul
xchg
push
clc
xor
les
fsubrs
or
sub
sub
mov
mov
in
xchg
aam
inc
sbb
popa
mov
out
or
jns
inc
jb
jo
inc
xor
jo
cmp
cmp
push
mov
fs
add
and
mov
push
out
outsb
jno
out
adc
dec
add
fidivs
and
add
in
div
cld
sub
xorl
mov
dec
js
int
pop
adcb
inc
je
push
inc
xchg
ja
std
lahf
fcompl
lret
adc
int3
lret
and
push
call
xchg
call
loopne
or
xor
adc
test
dec
dec
out
pop
pop
pop
ja
cli
sub
inc
daa
push
dec
inc
shll
ja
call
nop
mov
push
cli
or
jbe
adc
test
ja
jmp
add
int3
sti
mov
and
paddb
aas
ljmp
adc
and
pushf
out
cmp
mov
cld
stos
pushl
ret
inc
sbb
push
lret
sbb
loop
mov
push
ret
lret
paddb
movsl
mov
and
lcall
and
add
mov
ss
cmp
in
add
push
push
out
lcall
mov
jl
xchg
push
adc
in
icebp
cs
mov
icebp
push
imul
cmpb
push
sbb
mov
or
inc
inc
xchg
sub
subb
scas
gs
and
push
sbb
scas
lahf
mov
lock
push
fadds
test
dec
out
jnp
mov
pop
cwtl
in
loope
mov
lock
pop
mov
incl
push
xchg
je
aaa
jbe
add
es
cmpsb
fildll
fiaddl
mov
jg
sahf
fldenv
lcall
mov
enter
ljmp
stc
and
fcomip
sub
or
sbb
bnd
pop
mov
lds
and
into
mov
and
pop
pop
jae
in
jg
pop
add
mov
aam
icebp
rol
mov
incl
sti
incb
xor
cli
add
inc
mov
pop
rorb
cmpsb
in
aas
add
push
push
pop
ljmp
inc
sahf
icebp
lahf
cli
mov
jge
pop
add
daa
mov
fcoml
icebp
inc
je
fs
ss
fwait
enter
adc
cltd
xchg
jno
xor
fs
dec
adc
vpminsw
cmp
cmp
add
test
pop
stos
mov
imul
pop
and
pushf
mov
lds
gs
or
jg
decl
mov
add
test
mov
mov
in
mov
add
test
add
mov
dec
mov
or
push
addb
cmp
adc
test
pop
or
pop
sub
lahf
call
clc
or
fdivp
sbb
aas
adc
mov
jb
adc
scas
lock
mov
ret
inc
mov
mov
test
xlat
loop
inc
push
fisubs
movsb
push
jmp
stos
scas
adc
sub
xchg
add
std
movsb
push
mov
pop
icebp
dec
mov
mov
sub
lods
outsl
sbbl
or
sbb
aad
cli
jle
adc
sub
sub
dec
sub
stc
out
add
or
icebp
aam
add
test
bound
jmp
lcall
rolb
dec
insl
aas
clc
lods
lcall
xor
mov
jp
out
aas
test
pop
cmp
xor
rol
and
dec
lds
pop
decl
mov
mov
inc
out
jb
jl
mov
inc
and
push
push
jne
dec
push
lds
into
push
movsb
add
fcoml
sbb
std
decl
adc
idivl
mov
std
popa
loopne
out
shrb
loopne
inc
cmpsb
pop
std
sti
fildl
or
pop
in
ja
add
add
pop
mov
add
enter
pop
icebp
rcrl
dec
fidivs
out
out
call
xchg
scas
add
mov
jns
outsb
ds
jb
scas
jmp
jg
mov
dec
xor
xorl
mov
out
inc
testb
aaa
pop
xorb
mov
push
shl
or
and
or
repz
sti
xchg
push
cli
aas
pushf
movsb
aaa
sbb
mov
mov
iret
hlt
mov
shrb
addr16
mov
into
ljmp
call
mov
fwait
rcrb
mov
stos
mov
dec
sub
addb
mov
mov
outsb
xor
imul
rorl
in
or
shl
mov
and
xorb
pop
mov
sub
or
stos
mov
pop
mov
jae
jb
cmp
imul
add
imull
std
dec
cwtl
sbb
push
sbb
cld
dec
mov
loop
addr16
mov
cmpb
pop
dec
iret
add
movsl
jg
icebp
inc
add
cmp
cmp
addl
testl
roll
lock
and
xchg
adc
jae
mov
cwtl
out
add
sbb
out
daa
nop
fsubrp
adc
loop
cli
roll
xor
cwtl
dec
popf
sbb
xchg
xchg
sbb
into
push
icebp
jp
test
mov
cmpsl
jg
rorb
pusha
imul
out
loop
sub
fbld
mov
push
add
shll
test
sbbl
lods
jge
push
dec
enter
addb
inc
nop
out
bound
dec
add
adc
inc
int3
ror
xor
inc
cmp
and
mov
ja
push
or
das
aam
pop
ss
test
jecxz
cmp
or
sarb
enter
inc
aaa
ljmp
scas
mov
test
aaa
addl
pop
ret
jp
in
dec
pop
dec
clc
iret
add
cltd
cmpsl
add
add
stos
dec
lret
adc
data16
test
mov
lock
pop
xchg
orl
shll
add
rcrl
loope
subb
divb
pop
jne
arpl
loopne
sub
push
jns
xor
outsl
push
pop
add
cwtl
dec
cmp
fistpll
mov
scas
int
add
in
inc
or
clc
nop
ds
mov
clc
adc
hlt
sub
std
mov
outsb
orb
data16
xchg
pop
add
mov
jl
jbe
inc
ja
sub
jl
jns
test
inc
test
cmp
sbb
push
fs
pop
enter
push
add
das
rcrb
inc
add
fiaddl
aam
cwtl
lds
mov
out
pop
fistpll
sbb
fadds
fwait
and
dec
cmc
sub
in
pop
push
inc
xor
outsl
clc
jg
cmp
sbb
add
add
icebp
pusha
ret
mov
add
mov
filds
sahf
pop
rolb
push
incb
sahf
add
scas
into
xor
rcl
ret
pop
lods
data16
clc
je
stos
fisubrl
pusha
adc
stos
pop
dec
dec
sbb
mov
sub
es
xor
scas
push
loopne
xchg
inc
lods
add
stos
pop
pop
xor
pop
lea
or
int
and
es
push
clc
aad
das
mov
out
add
inc
mov
test
inc
mov
mov
ja
aas
rcr
and
adc
push
test
adc
xor
mov
aas
adc
roll
fcomps
testb
adc
jmp
jne
push
dec
call
adc
push
sbb
mov
inc
add
add
inc
cld
jg
in
add
add
inc
sub
add
jg
inc
dec
pop
pop
jno
inc
addr16
mov
bound
or
inc
imul
je
pop
mov
inc
jo
add
jns
push
jo
mov
dec
inc
ds
mov
push
clc
jbe
inc
inc
push
faddl
mov
not
add
or
mov
loope
scas
decb
loop
or
inc
fs
int3
les
ds
roll
xor
mov
push
and
or
pop
mov
cmpsl
mov
or
fldenv
jecxz
aam
lds
movl
jo
xor
mov
mov
in
push
icebp
gs
mov
int3
mov
mov
push
dec
out
and
or
mov
out
or
ljmp
dec
mov
mov
adc
leave
mov
fbld
call
inc
jmp
shll
cli
mov
in
sbb
or
mov
nop
cwtl
ss
mov
outsl
or
ja
or
or
subb
fs
inc
adc
xchg
js
mov
mov
mov
push
adc
insb
push
sub
pushf
add
or
int
add
ret
and
xchg
xchg
mov
lods
ds
call
incl
push
push
xchg
mov
push
xor
and
sub
pop
pop
jmp
out
lret
fprem
je
sbb
mov
jbe
out
std
cmp
jecxz
test
jnp
lods
xchg
push
jno
sub
pop
add
xchg
js
insb
popa
cmp
aam
push
aas
fwait
push
pop
icebp
add
fsubr
push
jmp
pop
xor
jo
lahf
sub
and
sahf
fcomps
pop
inc
in
cli
loop
add
cmp
out
adc
inc
pop
inc
clc
mov
outsl
xor
pop
push
call
subb
in
in
add
fwait
jg
xchg
jb
pop
daa
fnstsw
bound
sub
call
cmp
pop
lahf
mov
int
je
mov
addr16
push
inc
jmp
and
fcomi
sahf
xor
and
pushf
cmpsb
sbbl
or
jge
or
push
inc
mov
jne
adc
scas
rorb
insl
cld
mov
mov
out
pop
lock
outsb
and
dec
leave
sbb
repz
sub
incb
les
xor
xchg
inc
mov
cmp
mov
dec
mov
jb
iret
je
je,pn
pop
rcl
lret
enter
pop
xchg
std
inc
mov
xor
adc
add
fcomps
lret
les
cmpsl
stos
adc
ss
pop
push
pop
dec
jg
mov
dec
push
fiaddl
pop
ret
fcom
push
sbb
xchg
or
jmp
cmp
je
les
xchg
or
add
ja
stos
push
inc
cmpsb
sbb
lret
or
ret
aaa
mov
mov
dec
adc
sbb
ret
push
sbb
push
imul
adc
or
or
push
in
aaa
mov
mov
add
push
push
and
add
sbb
and
es
loop
cli
inc
sub
mov
sbb
fiadds
or
cmp
dec
stos
push
push
test
sar
mov
test
xor
lock
data16
outsb
shl
outsb
mov
bound
loopne
das
pop
and
jmp
lahf
gs
mov
aad
pusha
popa
jnp
pop
ret
dec
aad
mov
ds
loopne
push
mov
cli
or
mov
jmp
sbb
nop
xchg
jns
ja
ja
rcrb
hlt
out
subb
sbb
loopne
rcrl
and
mov
jb
rcl
adc
mov
cmpsb
decl
pop
xor
add
les
adc
inc
fstp
mov
cmp
pop
xchg
pop
mov
mov
add
orb
push
clc
xchg
cs
sub
inc
mov
or
add
xor
loopne
dec
mov
outsb
leave
aas
adc
adc
push
enter
dec
mov
addr16
xchg
outsb
fsub
pop
inc
and
adcl
add
sarl
jg
test
enter
and
jmp
xchg
add
lea
insb
push
bound
add
inc
push
xchg
fwait
or
sbb
gs
xchg
inc
insl
call
pop
jmp
inc
inc
sbb
mov
push
into
mov
pop
ljmp
ds
push
shrl
je
or
daa
add
jmp
jo
mov
in
jno
insl
xchg
leave
rcr
mov
jg
push
mov
add
sub
mov
mov
mov
push
mov
sbb
push
cmc
ss
push
mov
jns
js
das
rorb
fs
pop
mov
test
popl
lcall
mov
sub
xor
adc
dec
add
cmpsb
xchg
sub
xchg
xor
or
mov
mov
sub
pop
gs
pop
xchg
mov
loop
idiv
inc
icebp
jg
sti
mov
fs
popf
popa
add
xchg
dec
or
js
add
lret
sbb
and
sub
cld
mov
aaa
inc
lods
sub
jae
add
mov
xchg
ss
cmpl
inc
into
xchg
mov
bound
mov
arpl
incl
in
mov
xor
mov
push
lahf
push
pop
inc
dec
mov
push
dec
aaa
pusha
sub
scas
mov
fdivs
popf
sub
outsl
jb
xlat
in
mov
xchg
jle
sbb
mov
sahf
push
popa
sahf
lea
outsl
fiaddl
push
fcoms
hlt
add
adc
rorl
sub
loopne
rcll
mov
add
jmp
cs
inc
rcl
jo
push
inc
mov
xchg
dec
mov
loope
and
orl
pop
daa
add
in
nopl
lcall
fstpt
loopne
add
pusha
out
xorb
pop
fsub
pop
lods
das
jg
pop
adc
push
pop
xlat
dec
test
inc
mov
mov
or
in
mov
mov
sbb
ljmp
shl
ss
mov
cld
inc
ret
mov
movsb
pop
sub
inc
xlat
outsl
jno
loop
cs
into
cmp
jns
inc
outsb
add
sub
dec
ds
adc
cld
loope
sbb
out
and
mov
sti
das
incb
les
adc
movl
int
and
add
es
clc
mov
cmpsb
cltd
clc
std
mov
sub
mov
xlat
dec
jbe
xchg
add
jg
lahf
iret
xchg
lods
dec
pop
lret
mov
dec
outsl
int3
xor
add
pop
push
cmp
cmpsl
faddp
dec
clc
ret
je
or
add
and
sahf
sub
pusha
or
dec
add
lret
aaa
sar
push
cmp
mov
or
aad
mov
je
or
gs
ret
mov
ja
pop
xor
int3
or
orl
test
ret
inc
out
in
push
loop
push
lock
sbb
cmp
hlt
push
hlt
rorb
loopne
imull
daa
adc
lahf
faddl
adc
pop
jmp
push
xchg
jo
jle
movsb
push
pop
arpl
inc
add
add
xchg
xor
in
xchg
in
clc
je
pop
cld
test
inc
push
or
shl
mov
xchg
in
sbb
dec
adc
xor
shrl
mov
stos
out
and
add
dec
inc
push
inc
idivl
sbb
push
inc
cmp
orb
into
and
push
jbe
jo
les
data16
inc
mov
push
roll
decl
cmpsb
push
mov
mov
inc
pushf
adc
push
mov
or
mov
outsb
cmp
jg
jb
sub
arpl
add
add
pop
loope
jg
out
loopne
shlb
fisttpl
adc
and
call
mov
cmpsb
lds
or
roll
daa
out
imul
push
jmp
mov
stos
ds
sub
xchg
out
mov
cs
cld
movsb
pop
in
dec
pop
xchg
xchg
ret
push
mov
xchg
cwtl
jae
in
dec
pushf
in
or
scas
aas
and
jb,pt
push
xchg
in
pop
and
push
pop
inc
je
pop
je
dec
xchg
hlt
jbe
push
mov
or
sub
les
cmp
push
add
fwait
mov
mov
pop
pop
or
je
bound
std
mov
loop
nop
cmp
jbe
push
push
hlt
mov
jne
out
or
sti
inc
enter
or
inc
mov
push
xchg
sub
negl
sub
sbb
push
dec
lret
xor
ljmp
mov
cmc
in
ja
js
add
or
adc
bnd
cmpsb
aas
inc
mov
sbb
mov
icebp
decl
pushf
loopne
cmpsb
imul
dec
add
or
add
sbb
inc
add
orl
ljmp
sahf
mov
dec
das
cmp
xchg
cmpb
and
mov
mov
test
iret
out
xchg
fucomp
movsb
stos
orb
sub
sub
das
cmp
add
or
adc
pop
rcrb
jmp
and
lds
aas
and
xor
inc
aas
pop
xor
pop
cmpsl
push
cmp
cs
dec
dec
adc
mov
mov
push
hlt
add
push
inc
out
adc
mov
aas
xchg
ret
and
fs
cld
incl
lock
xchg
ljmp
cmp
cmp
fbstp
inc
das
sbb
xchg
int
add
jl
add
xor
sub
push
xor
cmc
add
push
dec
hlt
nop
or
movd
jbe
and
shll
mov
jae
lock
jo
lods
xchg
or
roll
cmc
decl
pusha
data16
sub
cmpsl
push
es
cmp
pop
test
add
push
int3
push
push
and
push
call
cmp
jmp
out
cmp
sbb
xchg
sbb
addr16
sbbb
sub
ljmp
cmpsb
mov
cmpsb
mov
add
sbb
scas
stc
pop
or
dec
daa
jbe
or
clc
mov
add
enter
cmp
xor
pop
dec
pop
pop
js
fistl
iret
mov
lret
jg
test
inc
lock
out
lea
xor
cmpsl
push
pop
je
pusha
rdtsc
sbb
mov
dec
mov
push
sti
cs
add
rclb
jnp
inc
aad
jno
fdivrs
dec
add
jbe
jno
cli
push
mov
or
out
dec
mov
jge
cmp
inc
jne
or
push
cmp
pusha
mov
das
fdivr
add
lcall
into
mov
cmpl
nop
push
adc
push
push
sbb
rol
lods
mov
call
add
push
cmp
inc
xchg
mov
inc
fsts
push
rorb
inc
add
jp
test
push
les
call
dec
stos
sub
fs
leave
and
or
add
sub
stos
push
loopne
cltd
xchg
addb
in
jecxz
lods
lock
lds
mov
jle
sbb
dec
pop
ret
stos
cmp
or
xor
pop
cmp
int
out
xor
rorb
mov
cwtl
cmp
xchg
mov
gs
decl
dec
imul
insb
add
out
test
je
loopne
mov
mov
in
mov
cltd
add
lahf
clc
ds
mov
fidivl
mov
stos
cmp
adc
or
test
adc
and
aam
sbb
ficoml
add
pop
popa
xchg
jmp
dec
cmp
sarl
adc
hlt
pusha
mov
outsl
sub
jg
repz
sub
mov
push
daa
xor
dec
inc
pop
xor
mov
xchg
mov
add
out
push
addb
inc
cmp
jnp
repz
xor
lock
mov
xchg
clc
orl
inc
das
sub
add
aam
out
lret
dec
decl
test
cwtl
loopne
jb
and
scas
mov
hlt
incl
cmpl
mov
jg
fwait
mov
jb
cltd
cmp
mov
mulb
add
mov
bound
mov
mov
cmpsb
test
icebp
xchg
js
stos
clc
test
enter
cwtd
add
jmp
adc
das
xchg
sbb
inc
jne
xchg
add
jo
cmp
add
xor
push
mov
sbb
mov
or
mov
clc
ficomps
sbb
popa
jge
ret
mov
mov
mov
fcom
pop
jecxz
fiaddl
lret
sub
adc
mov
std
sub
push
xchg
ja
fidivrl
shl
add
icebp
add
xor
jecxz
ja
sbb
mov
data16
push
arpl
jne
pop
jmp
cmp
pushf
loop
jno
mov
fwait
subl
int3
test
cld
sbb
fldenv
scas
cld
stos
mov
lds
cwtl
ljmp
jno
xchg
sahf
mov
xor
inc
inc
decl
lea
xor
out
fdivr
add
shl
add
and
xchg
mov
rorb
cmp
dec
int3
in
push
movsb
and
fisttpl
lods
add
daa
loop
test
push
shrb
inc
jmp
mov
fwait
xchg
insl
cs
outsl
loopne
call
dec
add
adc
popa
inc
enter
incl
cmp
xor
pusha
fsubr
dec
inc
push
sbb
xchg
test
adc
and
cmp
out
rolb
cmp
add
lahf
add
js
or
jno
popa
clc
outsl
mov
loop
arpl
scas
dec
fmuls
xor
decl
je
cmp
xchg
pop
test
push
sub
push
fistpl
or
cli
or
in
insb
dec
add
dec
test
std
push
call
add
ds
in
hlt
hlt
idivb
bound
sub
fcmovnb
lods
leave
jne
arpl
pop
dec
loopne
mov
iret
cmc
testb
and
mov
push
jp
stos
out
mov
and
and
pop
xor
cmp
adc
stos
inc
mov
mov
xchg
std
out
dec
xor
and
cmpxchg
push
movd
push
je
repnz
outsl
dec
adc
mov
pop
test
fwait
pop
sub
dec
das
mov
jecxz
add
inc
pop
mov
pop
adc
pop
lods
mov
movsb
xchg
mov
and
xlat
pushl
ret
mov
enter
jecxz
or
testb
cmp
and
lret
cmp
sub
mov
notb
icebp
rcll
call
jmp
mov
inc
pop
jle
cli
fs
cltd
loope
shrb
sbb
orb
leave
cs
mov
movsb
dec
mov
adc
cmp
sbb
and
xchg
shll
mov
sub
mov
or
scas
xchg
in
popf
mov
pusha
flds
add
fimuls
adc
dec
sbb
or
and
dec
jae
outsl
call
jg
push
mov
xor
sahf
adc
xor
call
mov
pusha
xchg
sub
xchg
cmp
or
cs
test
cmpsb
mov
inc
inc
outsl
pop
adc
flds
enter
bound
rolb
adc
mov
ljmp
shl
sti
dec
icebp
xor
ss
inc
nop
inc
sub
dec
lock
jg
mov
or
dec
call
pop
sbb
inc
push
movsb
mov
inc
add
data16
out
ja
inc
pop
les
insb
inc
add
push
repnz
add
test
cmp
popl
or
pop
scas
add
outsb
mov
clc
mov
rorb
jp
rorl
incl
icebp
test
jno
loopne
push
jmp
sti
adc
jb
inc
push
loopne
mov
add
mov
xchg
les
pop
les
or
mov
arpl
outsl
push
inc
fbld
sub
test
sub
jbe
fiadds
push
jmp
xchg
les
inc
inc
fcomip
dec
adc
add
sub
lock
dec
rcr
inc
test
dec
es
or
imul
jg
xchg
cli
add
mov
add
xchg
loopne
cld
mov
inc
pop
loop
sti
mov
pop
std
call
push
cmc
call
aam
push
dec
cmp
repnz
hlt
push
dec
or
je
jnp
scas
ficoms
xor
lahf
adc
push
adc
sarl
movsb
addr16
and
dec
fwait
jb
adc
out
xchg
sub
add
cmp
jb
push
xchg
add
xor
test
in
int3
push
std
inc
stc
inc
mov
push
movsl
add
add
leave
test
pop
es
int
ret
movsb
sbb
xchg
testb
pop
jp
add
dec
clc
outsb
add
negb
je
in
std
mov
in
dec
cltd
cmc
push
adc
ret
adc
into
dec
sbbb
dec
push
or
cs
pop
loope
loopne
inc
lds
mov
push
jp
stos
jo
stc
fildl
push
jbe
jp
cmp
pop
aaa
loop
aad
mov
test
push
mov
xor
or
clc
mov
call
in
cmp
les
xor
mov
loop
sub
and
scas
lcall
imul
add
stc
es
rolb
lcall
or
mov
popf
adc
neg
roll
addb
pop
lock
int3
aad
ds
sbb
adc
repnz
push
loopne
fcoml
les
stos
jmp
mov
sti
in
jmp
insb
in
pop
add
sbb
fldcw
or
inc
dec
icebp
sbb
add
sub
pusha
pop
adc
loope
jp
cmpsl
loope
rcl
jo
adc
das
jo
pushl
sbb
sub
pushf
shl
pop
sbb
jne
jb
xor
sbb
dec
mov
jecxz
fmull
leave
pop
adc
adc
scas
adc
and
jle
pop
mov
loope
scas
sarb
sub
adc
insb
ss
cld
xchg
ds
sub
mov
adc
hlt
sub
sub
add
inc
adc
fdivrp
lock
mov
fstps
xor
lret
dec
clc
mov
or
popa
mov
jecxz
or
dec
jb
mov
xchg
sbb
shll
lock
into
pop
sbb
cs
and
sbb
int
push
or
mov
lea
add
in
mov
nop
add
inc
adc
push
adc
adc
pop
add
pop
sarl
inc
test
add
shll
inc
cmp
mov
and
lock
lret
jle
outsb
mov
add
lock
mov
dec
xor
inc
sub
adc
cmp
push
jl
push
xchg
inc
cmp
fidivrs
push
fsubrs
inc
or
nop
sub
mov
test
inc
jne
popf
mov
sbb
notb
jmp
or
dec
movsl
pop
cmpsb
cld
lahf
icebp
pop
jge
dec
jl
mov
xor
mov
dec
mov
inc
xchg
loopne
aam
lods
xor
js
pop
inc
dec
test
adc
pop
scas
call
pop
lea
shl
testb
pop
sub
inc
mov
push
shrl
shll
rol
int
xor
mov
nop
push
sub
mov
cmp
add
cli
adc
leave
or
mov
push
inc
mov
sbb
cmpsb
sbb
mov
ds
fstpl
jle
cmp
in
or
pop
rolb
inc
adc
pop
enter
inc
xlat
jg
xchg
pop
sbb
adc
cwtl
call
loop
pop
push
or
pop
pop
jne
psllw
test
jecxz
out
insb
push
cmp
out
cmp
pusha
cmp
xor
insl
pop
movsl
orb
xor
out
sub
pop
mov
jecxz
push
inc
xor
loop
lock
repz
jecxz
out
lea
inc
push
je
lock
jp
pop
call
rclb
call
push
push
fisttps
loop
out
xchg
dec
jle
cwtl
dec
shlb
stos
lock
cmpsb
popa
and
cmp
mov
pop
jecxz
inc
sarb
and
test
aaa
and
ja
clc
sub
adc
or
xor
ss
mov
jl
push
dec
hlt
dec
add
fstp
mov
loopne
push
mov
dec
mov
mov
xchg
or
scas
mov
add
mulb
pop
xchg
push
dec
jmp
or
cld
jecxz
outsb
xor
std
dec
mov
out
sbb
ret
jp
lret
mov
cmp
sub
in
out
add
sub
mov
inc
pop
mov
sbb
aaa
lock
orb
sbb
add
lock
lods
in
sbb
mov
push
add
mov
mov
ret
mov
cmpsb
lahf
loope
out
scas
add
xorl
mov
jecxz
loopne
add
cmc
xlat
jl
iret
negb
and
negl
into
ljmp
insb
cli
or
fwait
add
sbb
lea
pop
inc
je
pop
add
push
mov
dec
add
jecxz
mov
xchg
sahf
adc
jo
subb
pop
and
jno
pusha
jnp
lock
adc
mov
sbb
mov
mov
xor
inc
sub
adc
jp
mov
pop
movsl
jge
repnz
enter
clc
aad
or
cmp
shr
mov
lods
outsl
or
scas
mov
lds
stos
and
xor
pushf
lods
lret
sbb
push
std
or
es
mov
mov
sbb
adc
or
lret
cmp
das
cmpb
cmp
add
add
inc
repz
ret
mov
sub
je
adc
sbb
jo
mov
pushaw
adc
mov
outsl
popa
roll
fadd
jp
shrb
mov
rcrb
jg
lock
mov
aam
push
and
adc
lods
mov
pop
push
mov
test
xchg
cld
hlt
es
xor
cs
sub
dec
push
adc
cltd
js
daa
pop
cmp
push
sub
out
inc
push
fwait
cmpsb
sub
cs
enter
push
pop
into
pop
mov
aas
adc
or
or
test
mov
jnp
xchg
mov
jg
sbb
dec
jmp
stos
sbb
je
pop
idiv
aas
push
xor
xchg
sbb
loop
test
in
lret
jo
sarl
inc
xchg
sbb
jp
xor
inc
push
inc
add
int3
fs
and
push
out
les
dec
ret
hlt
inc
mov
iret
inc
push
push
push
adc
xchg
sbb
inc
leave
ret
add
out
push
out
push
sub
and
je
cwtl
sahf
inc
xor
push
and
lock
loop
lock
add
xchg
dec
lret
mov
jo
out
dec
sti
je
lods
cwtl
sub
or
out
in
mov
sub
dec
add
mov
mov
or
jle
clc
add
add
dec
ljmp
push
jae
repnz
jl
flds
add
lret
inc
aas
lea
dec
rorb
mov
in
roll
ficomps
add
int3
cmp
inc
enter
dec
add
jo
pushl
pusha
cmpsl
int3
inc
mov
test
ljmp
xchg
add
jecxz
idiv
rcr
sub
add
js
sbb
push
sbb
nop
cmp
aaa
pop
decl
loopne
das
jns
lcall
movsl
jnp
ficomps
push
sub
addr16
bound
loope
out
push
mov
inc
clc
decl
cmpsb
lds
adc
inc
in
push
sub
mov
or
inc
clc
or
mov
je
hlt
add
mov
dec
xor
imul
push
mov
xor
repnz
aad
sub
hlt
pop
mov
add
inc
cld
cmp
mov
testb
adc
push
adc
push
cld
inc
insb
std
data16
sbb
push
cmpsb
sbb
lods
jb
pop
mov
and
movsl
mov
ret
or
fs
mov
jp
loop
push
stos
dec
adc
jmp
je
cmc
xchg
std
and
loop
adcl
es
add
test
ljmp
fistpll
jbe
je
sbb
fs
push
sbb
or
rolb
add
sbb
and
dec
add
nop
test
in
out
scas
cli
data16
push
enter
jg
push
jo
cmp
add
out
scas
cmpsb
insl
test
sub
add
push
mov
inc
icebp
mov
mov
and
in
lds
adc
mov
sub
mov
mov
or
sbb
cld
or
bound
pop
mov
pop
mov
xchg
push
cmpsb
bound
fidivl
sbb
fcomps
clc
add
incl
mov
lock
sbb
pop
mov
jle
addr16
push
jecxz
pop
and
cmp
test
pop
addr16
std
pop
push
aaa
add
jae
pop
movhps
sbb
adc
mov
insl
mov
rorl
lock
push
cmp
jbe
xchg
bound
jp
stos
add
add
data16
cmc
mov
inc
test
jmp
push
cld
push
scas
push
loopne
cltd
aas
shrb
lods
xchg
call
mov
xor
inc
sahf
add
call
in
cmc
mov
aaa
xchg
in
aad
lds
push
jmp
outsb
lret
dec
iret
or
incl
and
pusha
sahf
push
xchg
add
mov
shrb
pusha
and
and
faddl
std
incb
loop
mov
sbb
cmp
push
cld
ja
adc
inc
xor
lock
cld
xlat
sti
scas
mov
cmp
or
inc
cmpsb
enter
mov
call
clc
in
mov
leave
push
mov
dec
fcomp
add
aaa
cld
xchg
sbb
sbbb
mov
add
jl
mov
scas
scas
lds
mov
imul
mov
push
inc
mov
inc
push
std
pop
outsb
push
add
and
adc
scas
jp
insl
subl
negb
pop
cmp
clc
mov
ljmp
rcl
out
inc
push
scas
subb
pusha
into
jbe
ficompl
sub
cmp
stos
icebp
es
loop
xchg
mov
jb
mov
aam
inc
adc
add
adc
arpl
and
push
rcl
icebp
push
mov
inc
push
fsubs
sti
test
cld
pop
or
call
pop
test
pushl
fs
int3
andb
lret
and
aaa
dec
xchg
push
out
or
add
or
and
mov
pusha
push
pop
fcoml
in
cmp
mov
sar
inc
adc
jmp
or
or
adcl
movsb
pop
and
pop
add
popa
jae
pop
push
cld
call
imul
test
adc
adc
ss
je
cmp
out
mov
test
sbb
mov
jl
movsb
int
adc
xchg
jo
test
lea
dec
hlt
xchg
dec
cmpsb
lock
inc
xor
push
jbe
lcall
pop
mov
lds
aad
add
loop
lock
or
xchg
fisubl
sbb
aas
dec
cmp
mulb
xchg
inc
fdivs
push
popf
sbb
pop
test
mov
sbb
xchg
sub
mov
push
ret
sub
sbb
inc
and
out
aaa
push
fmulp
mov
mov
pop
outsb
jmp
fwait
jl
out
jno
sub
or
mov
int
frstpm(287
idivl
jg
les
fmuls
loop
faddl
loope
push
out
cli
loopne
and
mov
or
loop
cld
incl
stc
jg
lcall
lea
fisttpll
push
out
adc
sbb
push
mov
or
pop
ret
pop
divb
inc
xchg
jb
bnd
push
jecxz
fisubrs
cmc
bound
in
aad
xor
int3
push
test
fsubrl
rclb
pop
add
insb
rorb
xchg
sbb
push
lret
cmp
jge
add
add
inc
es
in
mov
mov
fistl
push
cmp
xchg
pop
shl
pop
adc
xor
addr16
xlat
cmp
aaa
das
clc
hlt
shrb
adc
sarb
pop
xor
orb
inc
mov
or
aas
sti
repnz
pop
and
or
add
sub
or
adc
lock
xor
push
jne
push
dec
pop
les
push
clc
push
add
ss
sbb
and
aas
daa
repz
push
ret
jo
mov
js
lea
jl
cmpsb
sbb
xchg
sub
sub
mov
add
push
xchg
subl
adc
cli
loop
jbe
lock
adc
testb
add
adc
das
mov
js
inc
cmp
dec
pop
xlat
pop
sub
inc
xchg
data16
icebp
add
push
call
outsl
into
and
movsl
test
into
push
shrb
fwait
loopne
mov
mov
push
je
mov
cmc
imul
mov
xor
sub
idivb
lds
lds
xlat
adc
or
jnp
popl
adc
sbb
lods
xor
push
or
xor
imul
mov
or
js
mov
mov
and
cmp
dec
mov
xchg
subl
mov
and
adc
cmp
push
arpl
std
addl
fnstsw
sub
mov
xchg
or
adc
pusha
lret
cmc
lea
sbb
mov
outsl
adc
decb
fcmovb
into
adc
subl
add
les
loope
sub
add
mov
push
push
mov
lret
add
call
and
sahf
cmp
cs
lret
add
cld
pop
fmull
and
jle
dec
mov
mov
and
push
scas
and
pop
lods
or
arpl
push
xchg
mov
lods
pop
inc
xor
icebp
fwait
push
xor
xor
loop
sbb
es
pop
sarb
addr16
mov
or
dec
mov
add
popf
rclb
fcoml
cld
push
mov
cli
push
test
pusha
into
faddp
shr
cmp
loop
jns
mov
pushl
les
int3
out
push
mov
add
dec
fs
pop
cmp
push
hlt
dec
sbb
dec
mov
jg
dec
loopne
jne
inc
pop
sahf
cmpsb
outsl
ljmp
loop
cmp
pop
sbb
mov
out
jbe
shrl
popa
xor
pushl
mov
inc
sbb
aas
add
cmp
cmp
mov
decb
sub
xchg
loopne
rcrb
loopne
mov
mov
test
imul
hlt
inc
adc
int
mov
mov
fildll
sahf
cmp
or
jp
xchg
jecxz
jp
xor
es
and
loop
inc
cmc
lods
cmp
add
inc
or
fnstcw
push
add
decb
idivl
test
lcall
push
mov
mov
mov
push
test
adc
nop
mov
push
sar
push
sub
lcall
mov
pop
and
ljmp
inc
sarb
sub
jmp
adc
push
ss
int
xchg
std
mov
lds
lahf
push
mov
mov
inc
js
fisubl
push
inc
das
push
aas
add
xchg
hlt
mov
or
pop
inc
xor
pop
and
pop
add
in
add
ljmp
dec
hlt
pusha
push
inc
std
test
cmpl
cli
aam
fisttps
or
pop
push
pusha
mov
cmp
lret
pusha
adc
inc
pop
in
loop
xlat
loopne
xchg
clc
jo
add
or
mov
out
cmp
sbbb
nop
arpl
sub
fadds
jo
std
data16
jmp
addr16
add
sub
sub
mov
jg
out
xchg
inc
cltd
mov
add
pop
loope
or
add
pop
lock
adc
add
dec
movsb
or
push
je
std
outsl
mov
sub
inc
mov
into
hlt
lea
cmp
jns
add
sbb
vrcpps
clc
es
adc
dec
pop
mov
jnp
pop
cltd
push
mov
add
sti
fdiv
daa
sub
out
repz
inc
or
push
pop
loopne
fstpl
push
mov
test
cwtl
test
lods
je
mov
loopne
seto
or
inc
clc
pop
and
jns
nop
adc
dec
add
adc
xchg
add
roll
clc
notb
mov
push
jnp
push
fcmovne
push
xchg
and
jae
cs
sti
mov
inc
or
inc
dec
mov
adc
pop
rcrb
aam
or
fimull
jnp
fwait
push
mov
add
xchg
lea
mov
lahf
adc
or
dec
loop
mov
test
add
adc
mov
xchg
mov
es
cmp
xchg
fdivs
pop
stos
je
add
fsubs
movsl
or
inc
into
dec
jg
xor
mov
cmp
adc
jb
int3
jmp
dec
jle
inc
jo
mov
pusha
test
gs
lock
lock
fisubrs
push
cmpsb
or
add
adc
mov
div
add
orb
fimull
sbb
adc
push
loope
fs
cld
mov
jb
rolb
stos
ja
pusha
pop
ss
ret
xor
jp
mov
xchg
out
shrl
mov
add
push
clc
jl
sbb
xchg
pop
add
inc
jb
cmp
mov
lock
mov
fisubrs
or
cmpsl
push
test
mov
ret
mov
cld
mov
dec
cmpsl
notb
push
jge
and
lock
aad
mov
inc
sub
and
mov
gs
mov
ret
sarb
aaa
fidivrs
scas
pop
icebp
aaa
jle
call
pop
inc
xor
test
add
daa
fwait
in
movsl
mov
sub
sub
sbb
mov
out
cvtpi2ps
cmpsl
in
mov
xchg
mov
xchg
add
repnz
adc
rolb
call
jne
adc
sub
sbb
enter
cmp
dec
repnz
push
pushl
jl
lock
xor
sbb
pop
jno
add
mov
enter
outsl
pop
mov
je
test
mov
jnp
mov
xchg
incb
es
add
xor
loopne
movsl
hlt
xor
adc
and
in
jmp
push
std
mov
adc
into
jb
sbb
in
aaa
pop
adc
lock
add
popa
nop
xchg
adc
aaa
ljmp
cmp
mov
push
aaa
add
shrl
bound
stc
popf
loop
out
movsl
pop
mov
push
xchg
adc
or
cmp
add
sahf
out
rcrl
loop
jo
adc
fwait
outsb
cmp
mov
mov
pop
pop
mov
into
fmul
mov
ss
rol
push
push
pop
sub
subl
dec
sub
fimuls
pusha
xchg
cld
out
pop
mov
imul
pop
add
add
cmc
jge
in
add
push
inc
mov
je
sbb
or
or
cli
adc
or
ss
test
dec
add
repnz
lcall
ret
xor
out
jmp
adc
add
outsb
xlat
or
ror
adc
ljmp
mov
dec
or
lcall
or
jb
pop
and
and
lahf
mov
pushf
ds
lret
inc
sub
repz
loopne
mov
sub
and
fmull
xchg
sbb
je
leave
test
inc
lcall
fsubl
xchg
adc
loopne
aam
and
sbb
jmp
mov
jo
push
addb
clc
js
in
aas
movsb
pushl
add
subb
aas
shlb
adc
mov
or
add
or
mov
pop
pop
fisubl
mov
add
pop
add
outsb
ficompl
mov
out
or
and
and
add
mov
push
scas
add
int3
jne
rol
inc
insl
inc
shlb
rsm
sub
push
data16
fdivp
ja
jo
cmp
dec
push
cld
push
push
adc
xor
insb
lcall
fsubrs
pop
cmp
xor
cmp
hlt
loopne
dec
frstor
into
sbb
jp
sahf
dec
and
jg
xor
dec
in
cmc
xchg
lahf
jp
les
pop
mov
cmp
or
mov
das
out
push
fs
sub
adc
jnp
add
daa
mov
and
shrb
xchg
outsl
sub
inc
in
jo
imul
mov
mov
adc
pop
xlat
addb
lds
pusha
jo
or
mov
mov
add
xchg
add
hlt
mov
pop
aam
mov
and
xchg
inc
xchg
fidivs
xor
push
pushl
push
mov
ret
fadds
cli
push
pop
mov
mov
insl
fistpll
fstpt
dec
out
jno
ss
das
pop
test
clc
testl
or
dec
mov
incl
lahf
add
push
bound
mov
in
stos
push
test
mov
inc
idiv
ljmp
mov
cmp
cmp
pop
popf
sti
mov
pop
jg
pop
dec
bound
insl
sub
in
loop
add
popf
jne
inc
dec
add
push
adc
push
fwait
adc
add
sub
dec
test
imul
std
fmuls
push
in
inc
dec
push
insl
aas
sbb
aaa
dec
inc
outsl
inc
mov
xchg
test
rclb
jno
in
dec
jno
dec
push
push
xor
mov
sbb
push
mov
and
cwtl
lea
push
push
stc
pop
ja
xchg
shr
inc
add
add
xchg
rcll
test
cwtl
inc
add
push
fstps
sbb
xadd
dec
rcr
loopne
aaa
ss
in
insl
dec
dec
pop
xlat
cli
push
mov
dec
mov
mov
jmp
mov
push
lea
push
or
mov
jge
loop
jns
jns
fimuls
dec
push
push
inc
cs
mov
jae
insl
jns
push
pop
fsubr
mov
pop
fs
add
inc
ss
mov
xor
jmp
cmpsb
cmp
inc
xor
cli
outsl
or
dec
mov
sub
add
inc
in
adc
loopne
push
push
shll
xor
dec
pop
lods
ja
lods
lds
inc
dec
pop
lret
push
cmc
jns
push
sub
gs
cmpb
out
mov
fstl
jmp
outsl
sub
inc
pop
push
ds
lcall
xchg
pop
xchg
cld
rcrl
push
mov
sbb
fsubr
es
push
mov
mov
mov
out
ficomps
xchg
dec
pop
mov
aad
xor
push
lcall
fwait
and
sbb
je
cltd
xor
je
add
add
dec
test
stos
pop
dec
push
mov
repz
mov
mov
add
mov
leave
cmp
ja
ret
xchg
dec
call
or
mov
data16
mov
aas
lea
add
pushf
jnp
repnz
dec
cli
daa
pop
dec
clc
sbb
add
adc
insb
mov
mov
xor
aaa
and
das
call
adc
mov
push
ficoml
jo
or
or
jnp
fsubs
repnz
rclb
inc
xorl
pop
psllq
xchg
xchg
inc
xchg
sub
lock
jge
addb
pop
arpl
sbb
cltd
cmp
adc
mov
mov
test
cltd
out
push
push
es
data16
add
lock
push
fs
loopne
jnp
jnp
mov
lock
ljmp
dec
lods
cmp
lret
mov
xor
jns
pop
mov
adc
test
loopne
sbb
fdivrp
fsubrl
in
movsb
nop
subb
mov
push
rcr
xchg
xor
jb
mov
adc
pushf
mov
pop
pop
cld
and
in
dec
fucomi
and
inc
or
testl
add
test
les
std
mov
icebp
ss
bound
shrl
push
rclb
ficoml
add
fsubl
jecxz
mov
jbe
subl
pop
cli
cmpb
and
sub
in
xchg
iret
xor
stos
call
aas
test
jae
adc
sbb
cwtl
add
sbb
push
popa
jbe
pusha
inc
test
lock
shrb
cld
add
sbb
dec
mov
mov
xchg
xor
fstl
jnp
arpl
data16
or
movl
aas
sub
mov
inc
mov
in
add
imulb
call
rcrb
pop
popf
fldenv
adc
lds
xchg
ja
or
daa
iret
push
sub
xorl
add
shrl
addr16
mov
pop
sti
out
int
addl
into
xchg
inc
call
js
cmp
inc
or
and
or
push
push
es
xor
and
push
push
sub
mov
icebp
pop
xorl
aas
cld
iret
imul
xor
mov
aad
mov
testb
sub
sbb
dec
cmpsb
jecxz
push
insb
add
iret
inc
test
pop
adc
ror
cmpsb
jecxz
pushf
or
sub
add
xor
sub
sub
sbbb
repnz
loopne
jmp
and
lea
dec
sub
cmpsl
add
popf
lods
inc
mov
and
or
imul
in
jb
js
adc
es
xchg
sub
rcl
push
enter
jle
add
mov
mov
jnp
jle
lods
jmp
test
mov
adc
fsubs
sub
lret
cli
fists
cmp
and
sub
adc
sbb
jl
pop
inc
es
mov
in
lock
in
xor
mov
dec
push
adc
mov
xor
inc
or
jo
adc
adc
or
inc
jne
or
test
cmp
push
mov
ja
pop
in
cmp
xchg
in
jge
and
pop
insl
jl
sub
enter
insb
test
movsb
mov
int3
adc
push
rorb
push
fisubs
add
stos
cmp
out
dec
push
xchg
jbe
mov
inc
xchg
and
data16
add
addb
bound
ja
jp
cli
jle
mov
inc
in
push
mov
js
inc
jl
push
mov
stos
test
jl
sbb
mov
enter
lcall
clc
add
cmp
push
and
pop
push
push
adcl
fsubs
sbb
xor
dec
cmp
shl
mov
lods
arpl
lock
orl
ljmp
cld
hlt
addr16
mov
xchg
shl
sub
adc
test
cmp
or
cmp
jns
sti
adcb
dec
aaa
add
popa
hlt
sub
daa
push
cmc
pop
xor
fiaddl
xlat
psubb
cwtl
mov
pop
cmp
bound
adc
jecxz
fwait
cmpsb
cmp
popf
mov
in
in
mov
and
je
push
pop
iret
stc
loope
push
nop
and
mov
mov
cmp
daa
mov
push
out
mov
xchg
jecxz
fnsave
pop
scas
std
or
stos
addb
push
lock
sub
lret
cmp
pop
das
clc
fwait
dec
es
add
add
addb
dec
enter
add
cmp
dec
mov
jge
pop
dec
mov
dec
push
dec
rorb
mov
dec
insb
sbbb
arpl
pop
loop
mov
aad
mov
push
shll
mov
mov
or
icebp
test
bound
cmpsb
mov
sbb
hlt
and
les
cs
push
loope
or
aas
ficoms
add
fistl
out
jae
adc
rorb
pop
inc
fdivl
cmp
inc
add
sahf
jg
hlt
test
mov
sbb
ret
push
test
sub
mov
mov
out
ds
popa
inc
sub
ja
out
stos
in
data16
lods
pushf
push
or
imul
jmp
stos
add
pop
mov
xor
ljmp
pop
call
sar
out
jecxz
outsb
add
cli
sbb
les
decb
jp
pusha
add
push
fs
aas
jne
shl
cmp
mov
repnz
lret
cmp
push
or
clc
add
ss
inc
test
sarb
push
in
movl
inc
mov
nop
out
sbb
inc
shlb
push
out
xor
ds
mov
xor
decl
jb
push
test
jae
xchg
clc
ds
out
notl
arpl
inc
mov
icebp
push
loop
dec
add
add
cmp
push
imul
pop
and
orb
test
out
inc
pop
lods
pop
jns
popf
das
push
rorb
inc
push
data16
ljmp
jle
lret
es
dec
popa
cwtl
xchg
insl
dec
add
inc
and
cmp
cmp
jns
mov
push
mov
lock
adc
ret
pusha
push
les
lcall
push
ret
pushf
lret
dec
jns
inc
cmp
pop
cmp
push
cld
inc
jecxz
in
dec
jbe
movsb
mov
jbe
test
jl
lret
jecxz
adc
mov
mov
xchg
aas
mov
jmp
into
andb
aaa
mov
bound
xchg
mov
cmpsl
ljmp
test
stos
dec
inc
clc
add
filds
mov
into
mov
imul
repz
push
xchg
popa
ds
mov
push
sbb
pop
adcb
rcrb
sub
hlt
mov
xchg
pop
cmp
mov
xor
das
clc
cld
ret
mov
adc
xchg
jp
shrb
outsl
mov
jo
pop
ret
inc
pushf
jmp
fisttpl
sbb
add
or
loopne
inc
sbb
mov
jg
in
mov
aas
mov
mov
xchg
sub
inc
mov
mov
testl
in
in
lock
inc
adcb
mov
or
sbb
dec
inc
pop
bound
cmp
add
add
incb
adc
and
iret
inc
cld
jmp
add
cli
pop
hlt
sub
xor
fnstenv
xlat
inc
in
or
or
dec
add
pop
pop
int
push
std
mov
mov
pop
roll
sbb
popf
inc
out
repnz
outsb
cmp
push
int3
mov
xchg
cwtl
mov
and
xchg
aas
push
pop
add
mov
testb
sti
or
lahf
mov
push
daa
adc
mov
sbb
add
pushl
jg
popf
inc
lods
inc
in
movsb
sbb
jns
xor
cmp
cmp
lea
cli
dec
cmpsb
sbb
clc
int
mov
lcall
jecxz
cld
in
scas
test
jo
and
rolb
je
pop
jg
push
inc
push
xchg
jp
cmp
rorb
mov
pop
test
movsb
jg
incl
mov
cmpsb
and
jbe
aas
pop
mov
bound
fwait
loope
roll
cs
cld
int3
jg
mov
sub
adc
test
add
scas
mov
add
rcrb
mov
jmp
adc
stos
sub
pushf
xor
lds
xor
inc
add
rorl
ret
in
jmp
repnz
cmp
inc
das
ret
pop
dec
pop
popf
insl
sahf
orl
xchg
mov
push
jae
and
lds
nop
fidivrs
cld
inc
xchg
incb
call
pop
or
push
cld
cmpsb
pop
mov
xchg
test
jg
fwait
jno
cwtl
xchg
and
fsubl
insb
roll
popa
sub
idiv
pushl
push
and
push
sbb
or
pusha
stc
lods
jae
pop
mov
bound
clc
mov
pop
add
and
add
sbb
subb
fiaddl
shll
xchg
mov
fistpl
add
xor
dec
and
cmc
and
sarl
inc
cmp
sbb
rcrb
test
enter
cmpsb
decl
incb
subl
pop
add
mov
scas
inc
or
mov
mov
pushf
dec
or
xorl
adc
stc
add
subl
roll
adc
ljmp
jnp
xor
mov
push
shl
and
jg
rcll
filds
add
into
add
sarb
adc
test
pushl
add
scas
popf
push
test
test
push
inc
cmpsl
xchg
inc
jnp
lds
and
pop
in
ja
sbb
push
test
pop
test
pop
les
mov
ss
sub
test
inc
out
sbb
lcall
jb
loope
test
inc
sbb
or
and
mov
sbb
cld
sahf
adc
jne
cli
pushl
push
dec
xchg
movsl
mov
fistpl
and
shrl
fistpll
rolb
adc
mov
mov
in
or
aaa
lcall
push
pop
inc
test
and
sbb
call
add
lds
gs
jecxz
cmpsl
inc
lods
inc
jp
je
mov
jb
loopne
cld
pop
and
mov
and
pushl
incl
imul
shll
into
stos
pop
ja
adc
add
dec
and
cli
out
loop
add
rorl
sbb
pop
mov
pop
mov
jnp
push
or
dec
xchg
dec
cwtl
loope
icebp
dec
add
loop
out
mov
addb
das
cli
mov
sub
aam
lock
ja
mov
and
sub
pop
sbb
pop
loopne
mov
mov
add
pop
loope
fdivs
inc
scas
cli
push
mov
mov
or
dec
pusha
mov
adc
xchg
pop
sub
loope
fwait
stos
xchg
mov
rolb
js
incl
pop
stos
sub
mov
cltd
in
mov
push
loopne
movsb
push
jle
icebp
jbe
jp
mov
lea
loope
scas
add
add
push
pushl
push
addr16
std
mov
movsb
add
sub
mov
cmp
sbb
outsb
sub
in
adc
push
call
push
push
add
loopne
xchg
arpl
clc
aaa
in
push
bound
test
insb
in
push
cmpsb
js
std
inc
iret
push
pop
dec
lret
imul
jns,pn
andb
dec
iret
or
xor
and
lock
insb
adc
mov
aas
mov
xor
sbb
cmp
mov
mov
adc
dec
es
js
mov
mov
cld
mov
push
stos
add
jbe
fwait
lea
cli
loope
ss
fdivrp
mov
aas
mov
push
fcmovu
cmpsb
outsb
mov
addl
jp
add
push
aad
inc
lock
sbb
mov
ljmp
or
nop
add
sub
inc
or
aaa
fs
cmp
subb
push
rcl
in
and
mov
or
xor
cmp
add
ret
or
push
add
push
fildll
loop
and
movsb
leave
bound
adc
mov
xor
add
aam
andl
sub
mov
pushf
cmp
or
add
dec
cmp
pop
lock
ffreep
xor
testb
dec
xchg
push
mov
leave
push
jl
in
mov
add
dec
xor
cmp
jecxz
addl
mov
popf
push
ficomps
mov
xlat
nop
rcr
fldenv
test
add
adc
ja
cli
les
dec
lods
inc
into
jno
scas
mov
loopne
out
popf
inc
mov
inc
xor
cltd
push
fisubrl
and
mov
and
sub
fisubs
es
addl
jle
and
sub
xor
outsl
rcrb
outsl
jp
fstpl
pop
jbe
add
inc
push
shl
call
jl
mov
or
add
ficomps
xor
rorl
mov
loope
xchg
dec
adc
insb
inc
and
push
je
mov
iret
popf
or
jp
mov
xlat
mov
int3
popa
movsb
dec
and
es
sub
movsb
test
cli
int
fmul
dec
je
pop
or
xchg
inc
jg
aas
pop
hlt
jmp
push
sub
mov
push
fistpll
or
inc
stos
dec
cmp
mov
inc
pusha
add
fldenv
in
xchg
xor
and
jae
push
loop
pmaddwd
pop
cmp
cld
adc
jmp
orl
imul
addl
cmp
pop
mov
dec
push
and
or
filds
pushf
mov
push
shlb
mov
sub
jbe
mov
add
insb
push
enter
cld
leave
pop
xor
cmpsb
testb
lds
dec
push
add
cmp
lret
popa
clc
mov
sub
jbe
adc
or
dec
aad
jae
sti
scas
je
add
lret
push
xor
xchg
or
fs
cmp
mov
adc
mov
lea
mov
cmp
sub
xor
and
fs
repz
push
cmc
pop
push
loope
jne
sbb
fbstp
int
das
jl
mov
inc
xchg
fdivrs
ss
mov
ljmp
clc
jg
sub
psubusb
addb
arpl
sub
hlt
jg
mov
cmp
adc
int
adc
outsl
dec
sarl
lds
adc
xchg
insb
nop
test
mov
cmp
test
dec
cmp
cmp
jmp
sub
fwait
jl
pop
add
add
lds
dec
pushf
imul
js
or
xor
sub
lcall
sub
or
jo
leave
int3
cmp
lods
xchg
dec
push
subb
mov
les
cmp
insl
js
bnd
sbb
lds
xor
addr16
fcomps
pop
inc
shlb
xchg
ret
sub
pop
xchg
push
or
add
pop
ret
pminub
cwtl
lock
arpl
sub
xor
and
adc
mov
mov
lods
cmp
bound
scas
xlat
mov
cmp
mov
mov
je
std
jbe
xchg
dec
pop
mov
pop
inc
in
pop
mov
pop
sbb
mov
jg
lahf
inc
and
add
sub
mov
jg
xor
int3
roll
and
mov
xchg
movsl
mov
pop
push
popf
add
mov
adc
pushf
fnstenv
sbb
ret
sub
loope
dec
pop
fwait
popf
add
lods
add
mov
testl
jnp
xchg
pop
inc
enter
mov
jl
shll
pop
cli
call
les
hlt
add
xor
jns
jns
clc
icebp
fsubr
fidivrl
mov
lcall
mov
xchg
pop
and
subl
out
push
xchg
adc
push
stos
ret
adc
add
popa
imulb
aad
and
test
add
js
fnstsw
or
test
pop
inc
xlat
mov
cmp
adc
cmpsl
jmp
cmpsb
jbe
iret
leave
pop
decl
fildl
sub
pop
inc
pop
inc
subl
dec
pop
insl
jl
or
push
add
leave
xchg
pop
movups
mov
mov
sbb
inc
cld
arpl
dec
mov
lret
jg
call
and
jmp
add
andb
add
push
jg
es
fidivl
jmp
test
mov
inc
jmp
test
mov
mov
das
xor
pop
test
std
sarl
jle
sub
rorb
inc
shlb
dec
adc
test
cli
aad
mov
push
sbb
pop
lock
xchg
cmp
lods
xor
roll
test
div
out
sti
je
add
orl
fcomps
inc
sbb
rcrb
mov
test
sti
fdivrs
lds
loop
mov
sbb
aam
cltd
xor
cli
loope
mov
push
pop
pop
pop
cs
scas
mov
lret
out
clc
daa
inc
and
scas
fistpll
lcall
sbbl
push
ror
or
call
mov
or
lahf
arpl
clc
pop
aas
add
push
xchg
and
mov
fs
add
adc
mov
add
in
push
dec
ja
ret
cmc
out
mov
pushl
cmc
inc
add
outsl
popa
scas
fisubs
adc
cmpsl
outsl
cli
lock
sub
orl
lods
aam
or
aas
mov
pusha
add
inc
popf
mov
jnp
and
loopne
xchg
sbb
cmp
fisubl
test
ret
rolb
bound
rcr
push
jl
paddusw
mov
lret
js
pusha
lock
jge
mov
es
mov
inc
cs
pop
mov
ljmp
sbbl
xor
call
jnp
mov
xchg
add
fptan
adc
loope
sbbb
decb
xor
mov
mov
addl
testb
lock
and
xor
loopne
xchg
nop
ljmp
jp
decl
xor
or
xchg
cmp
outsl
bnd
insb
cmp
cmp
xchg
mov
dec
cmp
test
or
aaa
jg
push
pop
push
arpl
iret
test
fwait
and
add
dec
pavgb
leave
out
mov
jno
sub
loop
enter
cmp
aam
hlt
std
cwtl
and
les
sub
out
fwait
lea
lock
push
push
pusha
xor
and
sub
cmp
inc
cwtl
enter
jle
xor
push
mov
nop
lds
loopne
cld
in
dec
insb
pop
dec
rolb
add
inc
outsl
clc
dec
sub
push
pop
mov
sarb
adc
sbb
cltd
sub
mov
push
push
dec
push
sbb
fisubrl
xor
push
lods
dec
push
bound
xor
add
inc
add
pushl
lock
dec
call
scas
inc
jo
insl
ret
nop
cmp
pop
mov
aas
push
dec
jg
adc
push
rorb
mov
imul
loope
mov
jbe
inc
jne
xor
divl
rorl
jno
xor
push
testb
outsb
push
ret
dec
mov
or
adc
push
or
clc
push
inc
sti
mov
mov
mov
jb
xchg
cwtl
jbe
pusha
roll
dec
loopne
dec
sbb
push
dec
aaa
imul
dec
push
inc
inc
subb
jno
dec
dec
jb
mov
xchg
add
das
repnz
ret
pop
and
jmp
imul
xor
mov
xchg
jb
cmp
mov
mov
sarb
shrl
push
xor
mov
sub
ret
xor
dec
clc
jnp
sub
mov
shrl
lcall
sub
add
push
sbb
add
inc
add
inc
push
stos
lret
es
call
add
add
mov
push
cmp
sub
sub
in
je
cld
incb
cmp
flds
jmp
push
clc
movsb
jmp
fnstcw
fisubrl
dec
dec
mov
rol
lods
add
inc
push
inc
cld
push
jae
push
clc
add
cmp
jns
loopne
jb
mov
xchg
les
dec
fadds
jo
rcr
dec
push
jl
shlb
push
jns
push
xor
or
push
jo
jno
outsb
inc
test
pop
inc
xor
xor
aas
clc
cld
xor
dec
hlt
push
push
jp
push
add
mov
dec
ret
in
mov
arpl
dec
int3
div
pushl
pushf
cld
mov
add
dec
insb
push
mov
xchg
or
pushf
or
push
pop
sub
jbe
add
ds
xor
jne
jmp
das
inc
mov
mov
xor
push
fwait
mov
xchg
in
or
sub
sbb
daa
iret
rolb
pushf
bound
loop
adc
jo
pop
jg
cmova
js
mov
add
std
inc
shl
add
sub
sbb
push
add
jl
dec
test
icebp
imul
mov
pop
cmpsb
xor
or
xor
lret
mov
adc
cld
mov
fidivrs
push
jo
lret
or
test
repz
mov
mov
sahf
adcb
or
mov
das
sahf
push
sbb
cmp
test
flds
mov
mov
pop
xchg
mov
jo
pusha
push
fsubl
push
ds
test
adcb
testb
pop
xchg
mov
pop
jecxz
dec
pushf
mov
mov
popf
stos
inc
pusha
je
movsb
push
out
dec
pop
shrl
insl
ret
lea
aam
or
into
dec
aaa
test
out
jle
ret
fs
imul
inc
shl
mov
mov
aas
inc
outsl
iret
push
scas
cld
aad
cmpsl
das
data16
in
ljmp
out
adc
mov
jno
icebp
inc
rol
sbbl
inc
pop
adc
data16
adc
hlt
js
push
jo
int
or
jnp
or
cmpsb
outsb
sbb
push
ds
test
inc
mov
test
pop
scas
pop
hlt
mov
ret
jl
cmpb
mov
jno
cmp
cli
mov
inc
idiv
test
inc
in
mov
movsl
xchg
inc
loope
in
and
ss
pushl
popa
push
add
in
les
add
mov
push
stos
aad
adc
mov
outsl
adc
dec
int3
mov
arpl
jge
rcrl
test
pop
dec
push
and
imul
or
jns
sarb
dec
cld
je
cli
pusha
es
cmp
pop
aas
mov
out
jnp
xor
sbb
mov
in
jne
jp
jecxz
dec
mov
pop
pop
mov
inc
lcall
fcomps
xchg
loopne
add
push
push
loopne
insl
jge
push
jle
sbb
jo
subl
pop
jns
ror
clc
cmpsl
leave
lds
adc
mov
or
push
scas
fs
mov
push
mov
incb
dec
dec
push
add
or
xor
dec
push
mov
iret
cli
loope
cmc
add
xchg
adc
inc
mov
jnp
xchg
repnz
pop
call
inc
mov
sbb
and
adc
popa
mov
xor
ds
loopne
add
sub
rcll
xchg
or
cmp
ret
inc
sub
scas
out
jo
push
sbb
roll
lret
or
in
sarl
dec
inc
int3
xor
push
or
inc
xchg
xlat
dec
fsubrl
and
mov
test
lock
lret
sarb
loopne
or
jbe
xchg
xchg
mov
repz
mov
fmul
fs
xchg
adc
lock
jge
mov
inc
pop
mov
stos
dec
fs
or
pop
xchg
hlt
or
dec
rol
pop
call
jo
mov
mov
xor
faddl
testb
inc
xchg
shrb
jl
test
scas
fs
cmpsb
imul
xchg
xorl
xchg
mov
imul
test
lock
sarl
xor
jecxz
adc
sbb
mov
jno
sbbb
ret
cmc
push
xchg
mov
mov
mov
clc
cld
mov
sbb
outsl
sbb
insb
push
jp
mov
enter
jg
or
leave
cmpsl
inc
mov
sti
push
mov
add
imul
scas
roll
mov
into
and
jo
movsb
orl
mov
test
xchg
cli
ret
aas
or
sub
loop
pop
mov
outsl
pop
push
mov
and
sub
jne
pop
dec
add
or
inc
sub
jo
loopne
dec
repz
cli
add
nop
sbb
test
xor
and
stos
pop
sbb
jbe
mov
rorb
add
or
mov
outsl
mov
clc
negl
inc
cmpb
arpl
sti
jg
in
movsb
adc
adc
leave
ret
pop
jns
push
jb
jb
subb
jae
lret
daa
xchg
ds
clc
cmp
data16
xor
add
cmp
inc
data16
enter
mov
jecxz
lret
dec
fistps
iret
pop
mov
call
enter
adc
sub
push
lret
fiaddl
in
xchg
aad
sub
sub
aaa
pusha
insb
adc
pop
ja
cmovge
pop
out
cmp
mov
mov
shl
mov
dec
pop
adc
das
ljmp
lock
je
inc
into
push
repz
ret
inc
hlt
add
jb
fdiv
xchg
int
rcrb
adc
pop
sub
pop
repnz
es
imulb
fldl
fiaddl
aas
jecxz
sbb
jne
sar
xor
xchg
fsubrs
jo
add
and
mov
mov
push
or
scas
imul
cltd
fsub
jo
or
add
xchg
loopne
test
js
push
lahf
ret
xchg
divl
stc
fstpt
sub
jnp
imul
js
xchg
push
rcrb
xor
and
xchg
fdivrs
pop
insb
cmp
pop
rcll
cmp
stos
aaa
addr16
nop
iret
cli
inc
ret
je
sub
fidivl
andb
dec
cmp
jle
shr
loop
out
mov
ret
add
aam
lds
xor
inc
imul
jo
mov
xchg
mov
cld
adc
jno
scas
dec
mov
lods
into
dec
pop
add
mov
push
push
jns
add
int
arpl
cli
dec
cmp
mov
rclb
icebp
sub
dec
pop
inc
add
es
in
aas
inc
and
add
push
hlt
push
js
inc
gs
mov
mov
cmp
jmp
js
xor
or
sub
fistpl
das
test
inc
insl
popa
or
add
in
lret
dec
mov
ret
clc
push
mov
loopne
icebp
imul
cmp
mov
push
les
stos
cmp
ljmp
scas
out
add
movl
hlt
js
jns
dec
cs
insl
mov
inc
jp
push
xchg
bound
shll
mov
dec
push
in
inc
call
dec
out
inc
dec
push
aaa
sub
and
addr16
jno
je
in
ret
dec
adc
js
add
adc
addr16
push
lock
dec
loop
shlb
or
shlb
adc
xor
jb
fisttps
adc
jne
dec
xor
push
mov
jae
or
lock
mov
pop
popa
outsl
mov
lods
inc
sbb
inc
push
lea
pop
pop
sarl
xor
mov
dec
xor
ss
in
dec
popa
dec
aas
xor
clc
cmp
cmp
dec
ficomps
aam
inc
xchg
inc
and
pop
push
ss
xchg
outsb
cmp
insl
imul
out
dec
sub
jl
jl
mov
ja
add
xchg
cld
mov
push
mov
addr16
pushl
aaa
cld
hlt
std
adc
jne
push
jne
push
inc
mov
test
sub
loopne
add
dec
pusha
cwtl
rorb
into
loopne
push
push
push
stc
dec
mov
clc
loope
lret
out
cmp
xchg
mov
loop
add
cmp
scas
sbb
jno
push
inc
dec
adc
xor
les
cs
mov
lea
add
hlt
add
js
in
inc
enter
sub
fs
inc
and
pop
or
dec
push
imul
sub
xchg
sahf
xor
and
xor
inc
je
xor
sub
sub
mov
inc
pop
cli
nop
add
pushf
mov
sbb
lock
cmpsb
jge
movl
sarb
cmp
fimuls
inc
sub
push
cmp
pop
cwtl
pop
push
pop
mov
cmpsb
sbb
mov
ror
dec
decl
ljmp
popf
add
data16
add
add
jle
jecxz
push
aam
pushl
cli
add
and
add
cmp
std
push
mov
nop
add
pop
add
xor
test
mov
sbb
jno
sub
adc
sti
ja
push
lahf
push
add
add
outsl
fldt
mov
out
inc
int
cmp
shlb
inc
in
inc
xchg
or
add
popf
inc
loopne
sbb
pop
pusha
cs
movsb
ljmp
cwtl
pop
daa
xor
push
sub
add
imul
push
cli
int
dec
inc
out
push
clc
dec
out
or
push
repnz
lcall
mov
xchg
adc
and
aas
les
sbb
xor
and
inc
mov
push
aaa
je
pop
adc
icebp
cs
dec
stos
inc
das
rcrl
mov
rcr
scas
bound
insb
jns
jg
hlt
mov
xor
mov
dec
pop
mov
stos
mov
rol
int3
ror
js
or
cli
dec
mov
ret
adc
adc
cmp
inc
test
xor
aam
xchg
roll
incl
mov
dec
inc
cmc
in
fdivs
je
sbb
xchg
scas
in
hlt
push
push
fmuls
add
incl
pop
lea
mov
aaa
push
lcall
fdivs
lods
jb
lret
add
shlb
leave
clc
mov
popf
inc
add
add
lcall
mov
mov
and
dec
cli
sub
pushl
fisttpl
pop
push
ret
inc
pop
mov
sbb
and
dec
mov
cld
loop
adc
cmp
test
ret
xorb
movsl
xor
aam
nop
scas
adc
lods
in
lcall
aam
clc
adc
dec
dec
xchg
mov
inc
negb
push
rolb
xchg
jo
shll
jno
or
inc
xor
sbb
mov
sub
shlb
mov
and
pop
hlt
orb
or
out
mov
cmpsb
outsl
xlat
dec
stc
flds
out
mov
shr
push
inc
leave
stc
pop
lock
cmp
sbb
sbb
jmp
cmp
xor
or
mov
adcb
add
fisttps
pop
ret
hlt
adcb
dec
mov
adc
cli
pusha
xchg
cmp
mov
test
int3
push
outsb
ficoml
addl
outsb
sub
sub
test
lock
push
lock
loop
mov
in
xchg
push
rcll
mov
jbe
int3
push
or
hlt
cld
sbb
stos
add
and
cmp
call
fisubs
jns
pop
push
push
fists
loopne
lock
push
cmp
mov
cmpsl
rolb
jno
lahf
inc
xor
adc
or
xchg
imul
mov
sbb
cmp
push
fimull
in
es
mov
addr16
mov
mov
mov
mov
add
cli
ror
cmc
pop
cli
bound
jg
or
xchg
sub
sub
clc
cmpsb
fcomip
push
loope
mov
sti
pop
orl
xor
sti
push
and
test
out
mov
es
enter
lock
nop
movsb
imul
loopne
clc
xor
je
es
mov
enter
or
cmp
dec
cmpsl
rorb
fbstp
or
mov
adcl
test
xlat
push
push
xlat
fsubs
adc
push
sbb
sub
gs
outsl
cli
lock
fs
dec
mov
andb
lds
push
sbb
jg
sub
fmuls
sahf
dec
faddp
xor
mov
std
lods
icebp
lcall
cmpb
loop
aaa
xchg
mov
push
imul
mov
fcoms
xlat
ror
cmp
ss
pushl
mov
sarb
xor
mov
pusha
or
jl
test
jge
lahf
fiadds
mov
mov
test
fidivrs
add
pop
out
pop
xchg
icebp
sti
scas
and
loopne
cmp
push
and
adc
mov
jle
ja
in
cmp
push
pushl
xchg
sahf
and
movsb
ljmp
jecxz
clc
fwait
and
or
sbb
mov
mov
mov
insl
fsubl
jl
xchg
scas
pop
cmp
test
paddq
and
cmpl
call
pop
shlb
jg
stos
das
jae
daa
insb
lcall
push
fsubl
ret
push
sub
mov
xor
inc
add
jl
dec
rcrl
js
inc
outsb
mov
push
call
scas
sbb
add
jbe
pop
add
pusha
xor
stos
aad
idivb
nop
adc
push
scas
stc
jecxz
mov
je
cmpl
mov
scas
lret
lods
mov
jp
cmpl
in
inc
add
decb
xor
xchg
cmp
insb
jno
jbe
inc
js
mov
and
mov
xchg
jae
add
sbb
sub
push
add
add
jbe
lcall
or
cmp
mov
jbe
decb
sbb
mov
mov
nop
and
push
popa
pusha
sub
push
adc
mov
xor
insb
sub
jge
push
jp
iret
rcll
test
jns
cmp
je
fwait
in
and
mov
lods
loop
hlt
out
lods
inc
or
add
sub
cld
xor
pop
clc
filds
xlat
add
xchg
dec
movsb
push
dec
xchg
fimull
clc
xchg
movsl
or
fadds
shl
and
dec
negb
call
stos
clc
and
subb
and
pop
push
pushf
lds
lods
push
pop
inc
push
and
push
clc
in
popf
sub
or
jge
mov
jbe
adc
push
lret
clc
lds
adc
inc
rolb
xorl
pusha
sub
push
jmp
mov
subb
test
fistps
dec
stos
cmp
xchg
dec
xor
mov
pop
mov
mov
fs
push
push
adc
andl
push
mov
push
lcall
and
jb
out
pushf
fmulp
mov
push
ljmp
and
aaa
push
cld
mov
push
xchg
clc
pop
xor
or
mov
incl
fidivrl
repnz
cmp
pusha
rcll
movsb
fildl
insb
or
cmpb
call
loopnew
pop
and
jae
movsb
popa
int
lock
and
xor
xchg
add
out
int3
mov
sub
in
and
clc
and
in
jg
pop
js
lock
jp
dec
mov
add
and
mov
mov
inc
or
push
or
push
pop
in
pop
call
loope
cmpsb
inc
xchg
sti
in
push
jo
dec
stos
repz
cmp
ljmp
aad
out
jp
sbb
pop
inc
jo
sub
mov
sub
pavgb
prefetchwt1
das
jbe
ds
cmp
sbb
inc
popf
push
cmp
das
dec
sarl
cld
inc
push
mov
mov
inc
mov
sub
mov
ds
scas
jg
pop
mov
incb
mov
and
push
das
or
call
ret
add
push
pop
pop
push
push
add
inc
cmp
mov
fmull
daa
andb
jbe
dec
inc
mov
cli
cwtl
dec
push
adc
in
pop
mov
sub
dec
push
dec
xor
cli
jp
push
lods
nop
push
icebp
inc
test
adc
ret
add
lods
add
and
inc
data16
ljmp
dec
push
js
inc
imul
inc
fidivrs
add
mov
rcl
ret
js
jns
mov
cltd
jno
out
sahf
jno
push
dec
mov
imul
inc
hlt
push
push
clc
hlt
and
test
lret
es
or
shll
lret
popa
sub
mov
mov
xor
mov
or
lods
and
push
ficoml
mov
jo
mov
sbb
push
xor
test
cmp
addb
out
loopne
cmp
bound
lds
or
pop
sub
xchg
pop
mov
sub
ficomps
xchg
or
js
sub
adc
adc
loope
xor
ror
or
pop
mov
loopne
loopne
lods
add
mov
lock
loop
or
push
push
jle
xchg
outsb
cmpsb
mov
and
imul
dec
mov
loopne
jns
arpl
cli
test
ds
cmp
fs
mov
dec
mov
dec
and
pop
add
pop
cld
scas
repnz
and
idivb
jge
push
pushf
push
pop
stc
std
mov
cwtl
jmp
sti
mov
add
insl
adcl
push
addr16
inc
xor
xchg
push
gs
mov
jg
adc
xorb
sti
out
pop
cmp
addr16
sub
inc
std
push
lods
dec
je
ds
xor
add
sahf
hlt
fcomip
jg
add
iret
jmp
sbb
test
xchg
pop
ret
imulb
mov
rorb
cli
leave
mov
cmp
sbb
sbb
je
lcall
clc
mov
xchg
push
or
or
xchg
fstpl
mov
mov
mov
cmc
xchg
and
mov
js
sub
insb
insb
cmp
sub
lock
aad
sub
sub
xor
jp
rcl
lods
test
cmpl
andb
xchg
sahf
xor
mov
adc
or
jno
mov
aad
xor
rolb
xchg
adc
outsl
incl
int3
jl
dec
jns
adc
mov
pop
ds
insb
add
pop
xor
mov
mov
mov
mov
into
in
xchg
push
ror
loopne
int
and
cmpb
pop
test
adc
cmovge
or
cld
lds
mov
jp
mov
repnz
in
les
jg
aad
or
dec
insl
and
inc
movsb
test
lret
jno
loope
outsb
mov
add
mov
add
mov
mov
jg
pop
jl
scas
loopne
fwait
xchg
inc
les
push
mov
int3
cmp
cld
xor
lods
loope
bound
outsl
jecxz
push
dec
jb
test
xor
sti
ss
mov
fisttpl
lock
sahf
pop
mov
dec
inc
ret
pop
mov
adc
push
pop
push
pop
pop
js
das
mov
add
jno
add
loope
incl
cmp
mov
scas
test
in
lahf
sub
cmc
inc
ds
mov
adc
mov
loop
fiaddl
inc
xor
out
adc
rorl
xchg
adc
inc
es
or
lahf
jno
cwtl
in
ja
or
cmp
sbb
dec
cmp
sbb
or
add
mov
fucom
cmpsl
adc
adc
outsl
rcrb
inc
outsl
sti
inc
or
in
xchg
ficoml
jns
ljmp
xor
popf
jb
push
test
ja
aaa
roll
popa
add
jp
push
cs
mov
mov
repnz
add
outsl
lds
outsl
fldt
lods
rcr
pop
xchg
dec
add
test
or
jecxz
ljmp
ficompl
popw
cmp
hlt
lock
shll
mov
rcrb
jp
mov
movsb
in
ljmp
fistpl
pop
insl
pop
icebp
iret
jp
push
cwtl
in
xchg
add
push
jne
pop
test
and
out
pop
dec
iret
int
inc
das
or
xchg
aas
icebp
stos
dec
add
lds
inc
mov
je
cmp
outsl
push
mov
mov
arpl
fmull
in
pop
lods
or
pushf
push
mov
ret
roll
lods
pop
sub
add
pop
popf
inc
fsub
pop
arpl
mov
leave
adc
cs
ret
aaa
movsl
repnz
mov
fucomip
jmp
fdivl
std
pop
add
push
rolb
jno
xchg
mov
add
pop
cld
or
cmp
shlb
cltd
pushf
pop
jecxz
incl
outsl
jecxz
mov
xchg
add
je
pushf
movsl
rcrb
xor
mov
adc
mov
ret
pop
rclb
mov
and
xchg
bound
xchg
add
psubusb
cli
ret
in
js
test
clc
pop
cmp
and
sbb
fwait
lock
mov
sub
mov
int3
sbbb
inc
movsl
mov
js
mov
jmp
test
test
test
popl
cmp
decb
sub
sbb
xor
inc
mov
push
and
add
mov
jb
or
adc
add
orl
mov
push
rolb
mov
mov
mov
das
out
ret
sub
gs
push
dec
adc
ljmp
jecxz
or
bound
mov
add
xor
sbb
fisubl
imul
out
add
enter
je
into
pop
cmp
dec
cmc
push
push
ss
add
shlb
ss
dec
and
cwtl
jb
out
mov
bswap
add
jg
xchg
or
mov
pop
rclb
pop
jg
nop
jno
fbstp
mov
sbb
wbinvd
mov
loopne
push
in
xchg
mov
outsb
shrb
add
nop
sbb
cmpl
and
xchg
xchg
mov
dec
icebp
xor
jne
push
add
mov
lock
jmp
out
add
lcall
pop
push
into
add
mov
jge
inc
and
cld
or
bound
sub
pusha
inc
sbb
inc
inc
rolb
shrb
add
dec
ds
pusha
cmpsb
outsb
push
ror
shlb
mov
je
ret
pop
push
ret
loopne
bound
daa
mov
sbb
add
pop
icebp
mov
adc
push
repz
pushf
jp
push
js
sub
loope
mov
inc
xchg
mov
and
leave
inc
fiadds
add
adc
bound
cmp
sub
pop
mov
inc
xor
cmpsb
ss
pop
mov
dec
lea
dec
test
mov
dec
push
xor
ret
nop
in
pusha
mov
adcb
popa
mov
jl
loop
pusha
add
sbb
cmpsl
jl
movsl
mov
shlb
inc
mov
lahf
out
mov
arpl
addr16
pop
arpl
xchg
cmp
sbb
lock
add
sub
es
repz
sbb
inc
or
roll
sub
in
mov
stc
inc
or
adc
in
push
inc
stc
or
add
jo
std
loop
mov
pop
fildll
std
add
sarl
adc
jnp
nop
push
jg
lret
ret
jb
repnz
aas
sbb
loope
fiadds
push
pop
call
mov
add
add
jae
mov
icebp
cmp
add
mov
mov
cmp
out
movsb
dec
add
fildl
or
mov
lahf
rcr
jns
stos
pop
shlb
or
repz
mov
inc
cwtl
ss
sub
sahf
pop
dec
mov
hlt
mov
lock
xor
insb
iret
jne
and
adc
adcb
test
jecxz
jg
pop
add
mov
stos
mov
loop
add
iret
mov
inc
shrb
adc
arpl
add
xor
mov
add
push
jge
cmpsl
pop
add
call
addr16
mov
movl
jnp
std
add
inc
push
push
xor
inc
loope
add
xor
notl
inc
xor
sub
roll
inc
scas
push
sub
xchg
test
sub
subb
addr16
flds
jge
pop
inc
dec
mov
popf
cmp
push
jno
leave
ret
inc
add
daa
lcall
je
repnz
lret
inc
jnp
xor
repnz
loopne
cmp
loopne
xchg
jae
jb
je
inc
and
imul
jge
fidivrl
sbb
pusha
stc
add
adc
sub
shrb
movsl
push
push
lods
cmp
pop
mov
lret
inc
sbb
add
cmpsl
mov
leave
xor
lret
movsb
inc
jl
sbb
mov
mov
aad
pusha
shlb
in
mov
daa
and
inc
jnp
test
andb
add
adc
cmpsl
jle
adc
add
outsl
loopne
cmpsb
xor
insl
clc
pop
and
xchg
sbb
sub
testb
pop
add
repz
jbe
cmc
mov
sbb
pop
test
cmc
repnz
jl
popa
lea
out
inc
mov
fstpt
pop
mov
pushf
nop
jnp
mov
or
and
mov
push
scas
fs
and
jg
or
idivb
test
dec
inc
adc
cs
mov
rolb
fwait
lret
push
xor
push
inc
data16
fldt
test
insl
and
cli
push
cmp
adcb
out
or
ds
or
jb
or
push
dec
enter
cmpl
mov
jns
lret
jp
rorl
pusha
mov
xor
ret
and
dec
sbb
or
out
mov
mov
fdivrs
adc
sub
or
insb
sub
shrb
pushf
adc
test
add
lds
sar
les
mov
bswap
stos
adc
pop
aam
outsl
mov
xor
scas
add
push
inc
jae
in
mov
mov
mov
mov
daa
pcmpeqd
xor
xchg
mov
cld
enter
inc
fmuls
faddp
in
adc
push
adc
mov
cs
mov
and
ljmp
clc
or
add
mov
jno
sbb
xlat
jg
scas
push
movsb
mov
popa
out
icebp
pop
testb
adc
jle
ret
jbe
pop
scas
cmpsl
add
and
or
clc
mov
shll
cli
lcall
pusha
rcll
pop
jg
pusha
push
push
dec
push
jo
std
cmp
fcos
ja
sbb
stos
bound
sbb
lret
sbb
push
xor
xor
mov
sub
and
hlt
xchg
and
dec
mov
bound
push
mov
pop
xor
add
push
es
pop
mov
jns
push
sub
sbb
pop
dec
add
cmp
aam
rcr
mov
and
in
pop
adc
adc
mov
aaa
imul
ss
pop
or
aaa
lock
sbb
add
ss
pop
int3
push
int
std
push
lock
repnz
pop
push
loopne
call
enter
sti
es
loope
inc
jecxz
lods
test
icebp
mov
xchg
and
jge
in
pushf
out
stc
mov
add
adc
loop
test
dec
jbe
inc
xchg
jno
xor
pop
jg
inc
add
adc
pop
popl
xor
xchg
push
add
or
loop
add
fisubs
lods
loop
xor
rorl
mov
mov
pop
mov
push
mov
mov
pop
xor
insb
xchg
xchg
movsl
cltd
or
arpl
fs
fldcw
scas
cli
mov
aam
pop
add
int
adc
pop
clc
mov
adc
mov
xchg
push
sbb
jp
xor
mov
sub
dec
jle
ret
and
or
cmp
lds
fsubrs
xchg
loopne
cmpsl
or
lcall
mov
fisttpl
jle
mov
arpl
mov
xor
out
addb
roll
xchg
in
adc
ja
scas
fiadds
jg
outsb
push
and
divb
std
mov
sarl
dec
lret
sub
cmc
and
jg
fcoml
in
push
mov
add
jge
mov
add
sbb
test
or
mov
pusha
repnz
add
movsb
sub
or
and
jbe
dec
mov
push
xchg
cmp
mov
inc
xchg
jmp
pop
cli
sbb
and
mov
pop
cmpb
lock
test
adcb
fiaddl
mov
xor
inc
out
push
jbe
hlt
stos
sbb
xor
mov
jle
call
imull
or
or
test
inc
rcr
sbb
xchg
and
xchg
xchg
divb
out
xchg
xor
jbe
ja
xor
lock
mov
xlat
into
test
or
or
les
mov
xchg
dec
imul
jecxz
into
inc
inc
fildl
jmp
add
mov
mov
xchg
add
out
or
cwtl
mov
jnp
jmp
pop
jg
rorl
pop
pop
adc
inc
add
popf
add
mov
sbb
mov
add
or
aad
scas
movsb
lea
mov
sub
mov
add
aaa
mov
test
stos
and
in
pop
decl
ljmp
adc
pop
dec
inc
imul
lods
or
cmpsb
mov
push
shlb
jbe
xlat
imul
test
push
adc
mov
pusha
mov
out
pop
call
mov
add
adc
mov
ljmp
sbb
lds
inc
out
les
ljmp
fs
jg
push
jbe
push
push
das
scas
push
loope
mov
aaa
les
or
xchg
dec
and
push
adc
aas
mov
adc
pop
insl
int3
push
mov
loope
mov
nop
and
sar
and
add
sti
xor
lahf
push
popa
fistl
popa
dec
pushf
inc
cmp
out
dec
add
into
xchg
mov
mov
popf
jge
loope
add
jbe
or
jae
adc
aas
mov
or
adc
inc
or
fidivrs
inc
fstp
jp
add
shrl
xor
adc
mov
jb
fcoms
loop
sbb
mov
test
call
push
xchg
cld
sbb
shl
test
lahf
push
sbb
dec
daa
cmp
mov
mov
cmp
adc
xor
cmc
test
dec
enter
inc
and
fbstp
or
lock
push
loopne
mov
call
lods
push
negl
outsl
rclb
adc
rorb
push
xchg
inc
stos
bound
xor
inc
cwtl
mov
dec
add
cli
incl
hlt
ficomps
enter
push
mov
sub
mov
dec
movsb
mov
cmp
mov
xchg
out
sahf
jle
shr
jne
orb
mov
iret
test
or
sub
divl
sbb
cmp
sub
mov
xchg
sbb
cmpsb
sbb
fs
rcll
and
sub
mov
shrl
xor
cld
jo
add
mov
xor
lock
mov
pop
xor
pop
clc
mov
or
pop
mov
xor
sbb
adc
and
sbb
ret
pop
stos
cmc
shlb
inc
sub
incl
sub
mov
dec
xchg
lock
cmp
jle
push
outsb
repnz
popa
dec
push
dec
push
out
jno
stc
xor
lock
pusha
roll
fisubs
outsb
dec
add
inc
jnp
int3
adc
mov
cmp
inc
inc
sti
ret
inc
jb
dec
stc
js
loope
add
sub
push
xor
enter
dec
push
inc
sub
dec
loop
incb
aam
fadds
add
mov
mov
pop
xchg
and
add
push
shrb
js
mov
pop
cld
shll
out
movsb
fiadds
aam
ret
adc
cli
mov
sbb
gs
in
inc
sbb
outsl
inc
scas
cli
or
data16
sub
repz
sub
daa
adc
mov
adc
push
sbb
test
scas
shrl
in
and
fs
and
xchg
xor
and
add
push
in
insl
shrb
mov
lcall
sub
xchg
pop
xchg
cli
xchg
pop
icebp
mov
push
and
nop
mov
in
cmp
popa
adc
repnz
cld
mov
adc
shl
dec
cmp
inc
mov
mov
fs
adc
ficompl
shlb
mov
cmp
push
mov
mov
adc
sbb
jo
mov
daa
dec
dec
xchg
cmp
repnz
pop
hlt
mov
stos
mov
popa
jp
or
cmp
jle
jo
addb
inc
xchg
add
push
or
pop
xor
jb
inc
or
adc
cmpsb
xor
lods
pusha
mov
mov
and
ja
add
cs
in
ja
cmp
add
fstps
add
nop
subl
sbb
cmp
or
cmp
test
leave
es
out
cmpsb
add
lcall
or
dec
xor
jle
cmp
dec
mov
add
add
adc
js
inc
clc
loop
push
daa
xor
jp
or
mov
popa
and
arpl
sbbb
sbb
xor
cmpb
outsl
sbb
sbb
enter
jb
rolb
into
mov
les
cwtl
decl
add
add
add
and
adc
mov
or
dec
xchg
out
out
je
pop
fidivs
int3
cwtl
or
mov
xor
outsb
mov
cli
mov
inc
inc
and
aas
inc
xchg
sub
push
adc
dec
add
mov
mov
and
push
dec
insl
inc
mov
jns
jecxz
inc
push
adc
inc
jle
mov
lds
clc
pop
loope
push
sahf
fs
fwait
cmp
in
pop
pop
push
ror
popf
and
aaa
lods
jns
mov
mov
test
cmpsb
cmc
jecxz
icebp
out
mov
mov
push
dec
sbb
sbb
sub
and
faddl
and
xor
push
test
add
pusha
sarl
or
lahf
shlb
ret
or
ret
pop
mov
ljmp
mov
push
ljmp
jecxz
jle
pop
push
adc
or
sub
xor
add
jne
xchg
cmp
sub
in
stos
cmp
or
dec
ss
adc
pop
inc
test
mov
push
mov
lcall
cmp
fidivrs
inc
andl
jp
push
lret
dec
test
mov
divl
push
outsb
push
nop
and
xchg
and
and
lahf
push
js
cmpsb
lahf
jp
inc
push
shll
sahf
xchg
mov
imulb
push
nop
fdivrp
aas
ss
rcl
std
lahf
arpl
lods
pop
test
es
call
inc
pop
cld
pop
push
outsl
cmp
repz
cld
fldl2e
pop
and
insl
inc
cltd
add
lock
jl
inc
xor
bound
cmp
sbb
mov
mov
lret
mov
sbb
mov
fidivrl
inc
mov
xchg
add
add
dec
scas
aam
inc
xor
mov
cmp
lahf
jmp
adc
mov
push
pop
leave
pop
clc
mov
jecxz
push
insl
lods
mov
fnstcw
cmp
clc
test
cltd
enter
pusha
cmpb
scas
movsb
lds
xor
sbb
sbb
vmovmskps
sbb
nop
adcb
sbb
loopne
andb
decl
ja
mov
ss
push
jb
mov
mov
mov
cmp
fisttpl
jae
cmp
xlat
adc
push
aas
mov
mov
jbe
push
mov
xor
dec
mov
push
push
sub
ds
pop
fcoml
mov
push
cwtl
fidivs
ljmp
inc
cli
jmp
and
xchg
lahf
bound
mov
push
cmp
loopne
int
addb
andb
sub
cmp
loop
addb
mov
inc
scas
xchg
jbe
cmc
xchg
out
sbb
loopne
or
repnz
int3
dec
lock
mov
cltd
jg
stos
push
enter
sbb
das
jecxz
pop
test
ja
xchg
clc
add
jmp
insl
hlt
enter
and
adc
sbb
je
xchg
ficoms
adc
leave
sbb
js
and
loopne
popa
in
or
cmp
sbb
cli
sbb
cmpb
inc
mov
xor
and
xor
cmpb
cli
sbb
cwtl
or
aas
push
ja
jb
and
mov
loope
lds
inc
inc
or
add
push
inc
pop
inc
mov
out
js
jmp
shlb
scas
aad
jg
lret
mov
mov
sbb
imul
mov
aaa
pop
pop
je
cmp
dec
incb
or
inc
mov
adc
stos
add
test
sbb
inc
inc
popf
xchg
adc
push
mov
inc
sbb
mov
pop
rcrl
add
ficompl
outsl
or
mov
mov
sbb
jle
xor
jge
es
add
mov
fcomps
outsl
lret
or
lcall
shr
and
lea
jo
rorb
aaa
inc
out
pop
cmp
xchg
js
flds
mov
jmp
cmp
cmc
mov
push
xor
pop
addb
popf
cwtl
movsb
outsb
xchg
mov
std
lret
push
pop
popf
cs
mov
in
arpl
add
enter
ja
or
imul
aad
ljmp
mov
adc
adc
addb
inc
jmp
in
mov
sarb
cli
lret
xchg
daa
xor
or
push
push
cld
es
scas
andb
and
call
sbb
loop
pop
ffreep
sub
push
add
rcrl
pop
das
rorb
aam
xor
mov
je
inc
mov
add
cmc
aaa
js
aam
or
pop
cld
ffreep
stos
or
adc
mov
ds
sarb
ret
xchg
sub
mov
aad
icebp
aaa
movsb
daa
add
sub
cmp
lds
add
cltd
jbe
cmpsb
das
mov
arpl
outsb
xchg
daa
sahf
fwait
sub
push
or
jnp
pop
rorb
icebp
xor
aas
sahf
mov
add
add
cmp
push
incl
adcb
sub
aas
cmp
jle
mov
std
inc
lahf
lock
xchg
movsl
mov
jl
aad
pop
rorb
stos
cmp
sub
pop
mov
in
roll
xor
add
cli
jl
call
dec
push
add
in
mov
pusha
andl
ja
pushf
subl
test
pop
inc
movsl
leave
ret
sub
sub
mov
leave
xorb
jb
jl
jecxz
dec
mov
jb
sbb
mov
call
fists
pop
dec
xor
and
pop
popa
xchg
jle
sbb
cld
hlt
xchg
lret
nop
lcall
adc
aas
jle
mov
fs
dec
ljmp
cld
pusha
fcomps
test
fstpl
cld
ret
push
sub
scas
test
adc
push
test
xchg
sub
les
leave
test
insl
xchg
jo
push
mov
xchg
add
sbb
bound
xabort
jno
jns
pop
testl
inc
lods
arpl
add
cmp
rcrb
dec
cmc
xor
ja
cld
adcb
pusha
inc
mov
ljmp
negb
outsb
jge
pop
ss
lods
clc
aaa
rolb
and
hlt
xchg
adc
inc
popf
xor
mov
lcall
sub
shrb
jecxz
add
xchg
pop
in
je
add
and
loopne
pop
clc
ficompl
loope
sbb
mov
adc
cmpsb
xchg
es
inc
in
push
add
out
fwait
test
xchg
and
sbb
stos
sbb
es
inc
lea
divb
mov
jmp
pop
in
in
pop
test
xor
clc
or
mov
mov
xor
dec
add
xor
movaps
xchg
test
mov
mov
cmp
int
xor
movsb
push
add
les
cmp
notb
sbbb
or
jg
add
shrb
decl
jmp
in
scas
jne
push
out
movsb
or
or
das
and
push
push
loop
cwtl
xchg
fstpl
scas
out
inc
bound
sarl
rcrb
xchg
ljmp
les
leave
and
ljmp
or
push
shrl
inc
mov
out
scas
ja
outsb
out
mov
iret
jnp
mov
rcl
les
mov
xchg
add
or
inc
mov
int3
pop
adc
inc
mov
mov
dec
xchg
fcomip
decl
jbe
xchg
jae
icebp
cmp
jg
jmp
cmp
and
pop
sub
jmp
fisubs
test
mov
dec
jge
bound
dec
ljmp
mov
pop
mov
cld
loopne
frstor
push
jb
js
addl
cmp
loop
dec
les
mov
mov
push
xor
int
pop
pop
scas
loope
rclb
pusha
scas
add
push
jb
or
adc
and
repz
and
cmp
inc
mov
push
icebp
sarb
mov
ljmp
push
xchg
cli
fcoms
lods
push
ljmp
add
push
repz
loopne
xchg
adc
add
mov
xchg
insb
mov
mov
sbb
xor
mov
dec
fcoms
or
pop
adc
addl
xchg
out
rorl
xchg
das
inc
in
xchg
lods
aas
xor
add
frstor
jns
adc
mov
add
jle
loope
popa
dec
sbb
jmp
cli
gs
adcb
sarb
xchg
imul
xchg
cmp
pop
adc
sarb
mov
pop
or
nop
cli
sbb
mov
dec
ja
dec
clc
cltd
pusha
clc
add
loopne
dec
xchg
inc
jp
mov
push
arpl
test
push
add
loope
pop
je
jo
data16
mov
cmpsb
mov
ss
jl
bound
repnz
les
fcmovnb
fucomip
icebp
push
jp
sti
inc
inc
sbb
push
or
cmp
aaa
cld
sbb
mov
inc
cmpsl
mov
sti
inc
cmp
sub
ss
faddl
enter
mov
mov
pop
cmc
push
add
ret
or
inc
and
dec
je
xor
xchg
sbb
cld
rolb
jmp
sub
and
inc
test
aas
sbb
pop
imul
in
cli
and
insl
jmp
adc
loope
stos
or
leave
pushf
or
call
test
jb
out
fbstp
bound
rolb
and
mov
out
out
popf
jecxz
pop
xor
cld
add
movsb
loope
adc
mov
mov
jbe
inc
xchg
mov
jp
xchg
xchg
ss
dec
icebp
aaa
std
fadds
loope
add
mov
outsb
push
xchg
pop
pop
jb
jge
hlt
pop
test
xor
mov
mov
ret
adc
jecxz
and
clc
pop
cld
lcall
sbb
add
cmpsl
adc
jge
sub
sbb
or
loope
movsb
repz
cld
fidivrs
cld
cmp
xor
shlb
dec
sti
add
nop
imul
or
rorl
mov
les
data16
ficompl
or
filds
lock
cmpsb
cmpsl
in
das
movsb
or
lock
jp
adc
lods
fwait
insb
sahf
cmc
aaa
jmp
jl
adc
and
sbbb
ficompl
or
pop
cmp
mov
jle
loope
nop
mov
stc
pop
mov
sbb
outsb
test
jg
std
jecxz
mov
into
inc
push
dec
das
mov
pushl
ror
xchg
adc
xchg
dec
sarb
mov
jle
call
mov
js
lcall
mov
jo
mov
pusha
les
pandn
testb
dec
push
cmp
fs
xchg
jge
cmp
sub
add
cwtl
fmuls
dec
jo
mov
sub
xor
add
ret
imul
jno
push
push
ror
add
jmp
ror
fisubrs
mov
mov
aad
mov
inc
loope
iret
and
inc
fildl
cld
push
fdivp
ljmp
nop
loopne
adc
mov
pop
mov
sti
mov
adc
sbb
test
mov
imul
mov
lcall
pop
jb
sbb
xor
jmp
inc
jl
aam
ljmp
outsl
incl
adc
es
pop
sbb
movb
lock
addl
movsb
pop
pop
jo
xor
mov
pop
xor
dec
dec
xchg
push
inc
mov
pop
lea
cli
push
call
jo
dec
inc
lea
push
pop
arpl
incb
jmp
ret
roll
popf
mov
js
inc
push
fs
push
repnz
dec
mov
shlb
pop
mov
jne
loope
adc
push
dec
cwtl
cld
push
data16
bound
jae
inc
and
call
imul
push
cs
test
dec
push
outsb
ret
xor
dec
stos
cli
mov
inc
pop
gs
sbb
xor
xchg
dec
jbe
jne
data16
outsb
jns
int3
fldl
cmp
xchg
add
arpl
outsb
bound
cmp
jle
rcrl
lods
push
push
mov
jno
shrl
mov
imul
push
pushf
dec
add
or
test
push
idivb
rorl
repnz
mov
xlat
mov
pop
ss
dec
mov
xor
mov
lods
push
push
dec
enter
and
push
xor
rorb
fmul
inc
inc
mov
xchg
imul
push
dec
and
inc
adc
mov
dec
cmp
aaa
push
jmp
rcrb
inc
inc
fdiv
decl
into
jl
dec
pop
js
in
movsl
add
subb
ret
xor
mov
mov
sbb
lcall
stos
call
xchg
or
fwait
jne
inc
test
push
sti
add
xlat
xchg
test
sbb
mov
in
hlt
pushf
faddl
jmp
xchg
mov
idivb
out
pop
push
xchg
out
mov
js
scas
enter
lods
or
dec
fcos
bound
mov
popa
ss
or
add
clc
pop
push
sub
das
leave
dec
leave
sbb
mov
or
xchg
sub
xor
mov
sbbb
sti
ljmp
cmp
xchg
lret
cmpsl
xor
lds
rorl
mov
jo
clc
push
testb
jno
xor
fmuls
push
inc
add
shlb
mov
lock
adc
cmpsl
and
test
std
cmpsl
pop
lret
int3
in
cmp
cwtl
add
cmpb
insb
mov
push
lcall
push
fldenv
sbb
pop
xor
mov
and
ds
jg
add
stc
test
cwtl
mov
je
scas
mov
add
roll
mov
jbe,pn
push
or
mov
insb
push
xor
add
mov
mov
jl
push
arpl
popf
js
dec
cmp
fldl
or
add
xchg
leave
lret
adc
add
xor
add
sbb
sub
sub
jg
outsl
xchg
sbb
add
jl
shrb
shrb
jo
je
push
loopne
and
stos
movsb
inc
sbb
ljmp
add
sbb
dec
jp
incl
les
inc
push
in
dec
push
cmp
mov
cmpsb
adc
mov
or
adc
pushf
push
or
stos
fldl
mov
add
and
rcll
clc
movsb
psraw
xchg
adc
dec
xchg
jg
add
in
hlt
sbbl
sahf
cmp
lea
adc
mov
clc
mov
jo
sbb
cmpb
fdivp
stos
hlt
xor
add
xchg
and
sbbb
cmp
jmp
dec
loopne
sub
divb
mov
ret
or
xchg
jecxz
jb
mov
mov
mov
sbb
dec
jl
mov
js
test
repz
sub
loop
push
scas
cli
es
xchg
mov
fdivp
enter
dec
mov
loope
imul
out
dec
or
add
and
outsl
lcall
loop
inc
fnstcw
daa
lea
sbb
push
push
adcb
fwait
es
adc
inc
cld
ret
test
test
add
cwtl
cmp
and
cmc
lret
clc
or
push
sub
adc
or
inc
bound
jbe
inc
add
jb
sar
push
rcll
push
outsl
xor
loopne
or
je
lret
mov
cld
test
sbb
rclb
sub
inc
test
inc
inc
sar
mov
push
or
add
in
movl
in
enter
add
shl
xchg
ljmp
cs
cli
sbb
dec
lcall
jp
push
out
ja
push
scas
mov
fimuls
push
pusha
daa
add
and
pop
nop
aaa
mov
je
push
push
and
inc
inc
js
jge
sub
push
inc
jae
and
icebp
sbb
sahf
ss
clc
adc
fldz
das
sub
ja
stc
push
loop
xchg
mov
hlt
imul
xchg
add
sbb
push
push
jle
xor
xchg
xor
lods
add
in
aad
cmp
push
lret
lock
sub
rcl
cwtl
jae
test
jge
mov
aam
pop
lods
and
lret
pop
ljmp
cli
pop
scas
frstor
cs
cmp
test
push
pop
sbb
mov
leave
test
aaa
lods
sbb
xchg
and
xor
xchg
aad
dec
pop
mov
out
jmp
lods
rcrl
hlt
shl
je
and
push
sbb
cmp
push
pop
lock
jnp
jb
orb
fiaddl
mov
addr16
or
or
and
mov
and
lods
aas
mov
fs
inc
sub
stos
mov
cmp
lods
mov
popa
adc
xchg
lret
rcrb
loop
decl
xor
adc
mov
in
rclb
bnd
roll
or
rolb
inc
rcll
add
and
add
fs
jb
lret
out
lock
push
adc
xorb
mov
loopne
sbb
cmp
jb
adc
jmp
into
and
cmp
sub
call
jno
mov
push
mov
aaa
sbb
xchg
cwtl
or
cmp
lea
add
or
lock
mov
jns
scas
sub
insl
ss
shl
cmc
pop
subl
data16
test
jge
jmp
or
js
aad
sub
mov
cmp
loopne
pop
test
roll
jg
jl
dec
adc
pop
xor
lea
mov
js
fsubrp
pop
pop
lock
sbb
aaa
scas
cmp
inc
dec
lcall
ror
pusha
nop
sbb
out
adc
add
xchg
ss
mov
dec
push
push
push
adc
call
in
aad
pop
hlt
fistl
mov
test
mulb
imul
sub
and
dec
cmp
lock
sbb
aaa
pop
hlt
call
or
sub
lock
push
fnstcw
aam
addb
jecxz
iret
cmpsb
ljmp
hlt
dec
sbb
ret
and
add
xchg
js
cmc
adc
xor
jne
imul
sbb
sbb
fistpll
lret
andl
repnz
into
and
add
lods
push
cwtl
sarb
lcall
scas
insb
ja
test
test
mov
fsubl
inc
loope
mov
adc
jecxz
iret
xor
add
mov
inc
mov
xchg
inc
popf
mov
test
adc
bound
sbb
rcrl
adc
adc
out
ljmp
jne
xor
add
or
cmp
adc
icebp
sarl
xchg
inc
nop
pop
add
mov
ret
mov
sbb
adc
or
decb
push
xlat
aam
imul
aad
xchg
push
pushaw
loopne
adc
outsb
ja
out
mov
pop
iret
adc
popa
mov
cmp
push
insb
push
fs
mov
icebp
xor
add
mov
fdivp
jg
subb
je
mov
push
sbb
pushf
ret
fnstsw
cli
mov
js
lods
cmp
mov
add
iret
loop
push
push
cli
add
stos
outsb
or
sarl
pop
dec
mov
sti
ja
aad
or
cmp
mov
mov
xchg
add
fwait
inc
mov
mov
inc
inc
xchg
adc
cmp
nop
add
pop
cli
scas
sbb
sbb
mov
out
push
stos
pop
dec
cli
dec
cld
call
add
cld
pop
lds
ss
push
mov
test
and
test
scas
adc
pop
cmc
inc
sub
dec
jmp
fs
subl
cmp
mov
lods
pushl
sub
adc
push
dec
insb
lcall
in
stos
cmp
test
mov
lea
sbb
cli
inc
mov
outsb
add
jmp
inc
sahf
dec
inc
loop
and
mov
inc
jge
aad
pop
xor
add
and
mov
in
dec
es
push
fs
sbb
push
dec
jb
mov
mov
mov
dec
sbb
clc
pop
mov
or
cltd
sbb
inc
nop
ret
inc
js
cld
aam
pop
outsl
jne
jnp
add
push
das
sbb
jo
jo
das
ja
daa
mov
mov
je
ds
sbb
mov
test
mov
rcll
inc
inc
daa
push
dec
push
cltd
loopne
jp
push
xor
clc
jmp
es
outsl
jmp
movsl
sar
dec
jae
ljmp
xor
movb
push
dec
cmp
sti
xor
testl
cmc
or
push
clc
or
arpl
je
sbb
xor
inc
xor
lock
dec
cld
pop
fnsave
fcomps
dec
jecxz
shl
add
pusha
sbbl
ficomps
insl
add
dec
aam
xor
lock
sub
mov
or
je
xlat
clc
cmp
mov
mov
into
ret
sub
je
in
icebp
mov
dec
add
mov
pop
push
hlt
sub
jmp
mov
xchg
adc
mov
pushf
hlt
fsubrs
and
pop
imul
add
loop
test
jo
pop
fstl
or
movsb
fsubs
push
ds
add
push
pop
clc
orb
sub
into
mov
ret
cmp
es
bound
cmp
test
and
mov
and
push
mov
mov
ja
add
push
cwtl
add
repz
and
dec
xchg
outsb
and
test
aam
lock
aaa
test
mov
idivl
mov
jmp
popf
aaa
cmc
aas
ret
es
xchg
mov
inc
clc
fwait
sub
addr16
inc
std
fs
mov
xor
dec
sbbb
inc
cs
inc
and
push
int
nop
lret
pop
mov
adc
cs
add
push
sbb
add
jbe
xchg
mov
mov
imul
push
aaa
sbb
les
jo
mov
sub
jo
dec
loopne
mov
dec
push
ffreep
scas
ret
dec
repnz
stos
xor
decl
sbb
sahf
jnp
popa
pop
hlt
push
scas
loopne
mov
pop
xor
fcmovb
mov
sub
insb
js
pop
xchg
or
xchg
mov
and
sar
test
das
ret
xchg
daa
mov
idiv
rorl
jle
lods
mov
push
fdivrl
ljmp
movb
call
lcall
in
dec
add
sub
pop
scas
push
inc
push
stos
mov
aam
xor
stc
xchg
hlt
popa
fstpl
mov
insb
pop
dec
and
icebp
rorl
outsb
push
jo
mov
movsb
add
xor
adc
or
cmp
cwtl
mov
test
repz
sub
mov
cmp
inc
lret
or
enter
shll
sub
inc
outsl
or
and
outsl
ja
pop
mov
push
fdivrs
dec
incb
clc
lock
shll
dec
shl
or
test
out
push
into
sub
or
stos
stos
dec
and
jb
mov
adc
mov
sahf
mov
call
add
add
or
lods
daa
push
or
mov
test
and
mov
and
movsl
sub
cmp
xchg
jbe
lock
pushf
add
sbb
inc
rcrl
xchg
lcall
pop
dec
mov
xlat
mov
ljmp
repnz
test
test
push
or
sbb
loopne
je
mov
add
cmpsl
repz
leave
adc
sub
jmp
insl
clc
add
stos
ret
push
sub
adc
mov
jbe
testl
daa
arpl
and
mov
sbb
sbb
andb
jp
fcoml
jno
pop
xchg
pop
fs
pusha
pop
ficompl
mov
jne
int
nop
es
dec
mov
pop
add
test
push
sbb
pop
in
dec
decl
dec
cmp
mov
add
mov
loopne
adc
inc
aaa
fidivrl
pusha
mov
mov
rol
lea
cltd
js
in
pusha
push
add
adc
std
pop
pop
jmp
push
fisubs
or
icebp
inc
mov
lahf
xor
std
shll
test
xlat
mov
push
jle
mov
mov
cmp
aam
cmp
inc
lock
lods
lods
je
mov
inc
popf
add
imulb
leave
andb
and
add
adc
push
adc
icebp
jg
fadd
jns
in
rorb
dec
inc
cwtl
mov
inc
lcall
jge
mov
add
xchg
scas
cltd
and
sarl
inc
out
or
and
sbb
push
pop
iret
jne
adc
cmpsl
les
movb
test
push
icebp
filds
xor
pop
pop
push
fidivrl
mov
xor
add
sarl
pop
stos
or
jo
adc
or
test
insl
push
jge
out
mov
ds
lcall
add
les
xchg
jo
pop
movsl
sub
lods
rolb
push
inc
adc
or
add
aad
in
lcall
jle
sbb
pop
cltd
daa
xchg
xor
out
ljmp
or
xor
and
sub
jge
andl
push
dec
shlb
cmp
daa
js
pop
push
test
sti
rol
xchg
lcall
dec
pop
icebp
pusha
add
int3
pushl
pop
inc
add
fimuls
add
mov
push
pop
add
push
in
sbb
push
call
dec
out
mov
sub
push
push
or
mov
xor
out
xlat
add
sar
sbb
loop
jge,pn
sbb
mov
cmp
adc
rol
decl
imul
out
call
dec
stos
insb
and
jle
adc
add
adc
add
je
or
push
cmp
int
fsubs
dec
insb
sbb
int3
outsb
sti
jo
add
mov
jmp
incb
push
mov
jnp
add
pop
mov
sbb
push
or
mov
mov
outsl
jecxz
cmp
and
cld
in
jl
xor
cmp
jp
cmp
pop
adc
add
iret
rorl
push
add
sub
sbb
mov
imul
mov
jb
jp
push
xchg
xchg
pop
pop
adcl
dec
and
andb
pop
pop
ss
lcall
dec
jae
add
cmpb
sub
test
loope
call
and
push
dec
add
jecxz
mov
hlt
dec
sbb
jl
sar
outsl
enter
jl
xorb
xchg
fcomp
jl
mov
and
xchg
cwtl
lods
mov
sub
inc
or
out
xor
rorl
iret
cmp
insl
or
out
jge
mov
lea
fs
push
xor
paddb
clc
jnp
cmpsb
repz
aas
sub
cld
inc
pushl
add
add
pushf
lret
je
lret
in
mov
int3
incb
xchg
das
xor
lds
adc
bound
sub
rorb
add
ret
aas
xchg
xorl
test
adc
popa
ja
or
imul
xchg
lds
dec
addr16
imul
int
or
jg
and
mov
dec
std
das
fimuls
lea
jecxz
pop
fisubrs
fimull
mov
mov
mov
mov
adc
lods
shlb
fnstsw
scas
out
lcall
lcall
mov
pop
xor
pusha
mov
cwtl
mov
fadds
stos
xor
dec
xchg
or
mov
hlt
jae
filds
jmp
inc
enter
gs
or
js
pop
and
aas
push
ja
sahf
mov
xor
enter
das
ret
mov
push
mov
outsl
jmp
dec
jle
aaa
push
inc
ja
lock
mov
xor
ja
dec
mov
add
fdivrl
mov
dec
push
inc
dec
fs
add
adcb
jle
js
xchg
fadds
dec
ja
arpl
ret
pop
ret
pop
pop
mov
sub
or
xor
add
add
sti
dec
andl
push
sub
jns
xor
inc
rorb
inc
add
imul
iret
out
lds
imul
js
xorl
jbe
lds
add
scas
mov
xor
inc
loopne
dec
js
cmp
cmp
pusha
push
mov
dec
lea
arpl
cmpsb
popl
push
mov
int
int3
adc
add
jbe
fadd
mov
adc
mov
jecxz
cmp
inc
xchg
insl
jl
push
xchg
int3
sub
add
loop
fwait
shlb
mov
inc
idivl
mov
mov
addr16
arpl
cmp
jae
cmpsl
das
mov
fwait
mov
cwtl
xor
andps
xchg
sahf
loopne
outsl
int
add
xchg
mov
add
xchg
pusha
clc
lods
rorl
ret
cld
in
mov
lock
out
jbe
pop
inc
jno
xor
sub
cmpsb
divb
fstpt
jmp
popa
sub
push
jge
lods
hlt
dec
dec
or
mov
imul
and
mov
add
pop
jg
rclb
jg
xlat
mov
xchg
sahf
inc
push
fadds
jecxz
jbe
outsb
jbe
or
pusha
mov
icebp
push
sub
xor
sub
aad
cmpsb
pop
push
mov
es
les
stos
test
sub
mov
mov
jle
pushl
xor
out
add
jmp
jle,pt
mov
lock
inc
xchg
movsl
xchg
add
clc
je
sbb
jno
cmp
lock
mov
jecxz,pn
xchg
add
movsl
mov
popf
mov
enter
es
std
dec
mov
mov
cld
rcr
shll
out
repz
add
and
cld
pop
shr
adc
pushf
test
mov
push
dec
sub
clc
sbbb
mov
xor
cmp
dec
push
fidivrl
or
fsubs
adc
jl
repnz
pop
bound
out
lcall
pop
mov
inc
scas
sub
pop
std
mov
scas
test
dec
mov
jge
xorps
cmp
adc
cmp
lret
test
mov
xor
xchg
rclb
mov
pop
add
pop
and
and
push
mov
xchg
cmc
and
xor
xchg
add
mov
jno
ljmp
jo
ret
out
xor
aad
loop
cs
out
push
sub
or
cwtl
mov
mov
sbb
cmp
aad
mov
push
cs
ret
mulb
mov
lcall
cmpb
mov
jno
or
lcall
or
pop
test
push
xchg
xlat
aam
and
pop
gs
mov
arpl
ljmp
adc
cmp
int
jmp
sub
jle
orb
dec
bound
mov
lcall
sbb
dec
dec
subb
movsl
test
pop
cltd
inc
fdivrl
xlat
dec
add
xchg
cs
xchg
adc
mov
adc
jle
lcall
std
lcall
push
inc
adc
js
pop
ret
dec
fprem1
aaa
xchg
xchg
jno
push
adc
mov
inc
ss
popa
adc
pop
inc
stos
scas
loop
pop
and
sub
ret
loopne
inc
or
repnz
fwait
sbb
and
xchg
inc
shlb
shr
sbb
push
mov
add
jl
fimull
or
in
xor
pop
repz
shlb
sub
mov
mul
iret
push
cmp
shr
jmp
and
dec
inc
movsl
adc
dec
jl
jl
imul
pop
xchg
je
orb
test
inc
pop
push
xchg
push
hlt
jl
mov
or
inc
cli
decb
mov
daa
add
dec
push
dec
scas
lock
push
popa
xchg
pop
push
mov
cs
lahf
and
adc
icebp
sub
xchg
mov
icebp
notl
mov
inc
insl
jns
push
jbe
sbbb
inc
into
add
cltd
push
pusha
lock
icebp
fdivrs
push
fadd
push
rcrl
adc
push
aas
hlt
test
dec
xchg
add
cmpsb
cwtl
orb
dec
xlat
pop
bound
add
icebp
lcall
push
roll
jo
mov
xor
add
sbb
mov
imul
sub
daa
movsl
cltd
sub
mov
mov
movsb
sti
push
enter
cmpb
xchg
push
out
leave
cmovae
scas
fisttpll
popa
push
push
cmp
inc
sub
mov
ss
icebp
sbb
jecxz
lock
gs
sar
adc
cmc
imul
mov
shll
lods
popa
fldcw
fsubs
mov
mov
cmp
hlt
push
lds
push
jno
and
inc
sti
cmp
adc
pop
fcmovbe
lock
or
mov
fsts
pop
mov
mov
mov
js
ljmp
outsl
and
and
xchg
pop
dec
cwtl
cmp
ds
stos
sbbb
popf
and
mov
scas
stos
lock
ret
std
pop
jnp
mov
push
mov
dec
enter
dec
ljmp
fs
inc
movlps
xor
mov
mov
pop
call
outsl
fsubrs
add
cmpsb
sbb
dec
cmpsb
ret
and
sbb
dec
pop
loop
clc
push
cwtl
clc
adc
les
outsb
subb
cmp
into
mov
xchg
push
stc
push
xor
lods
push
push
pusha
es
jnp
jno
pop
movl
leave
aam
ljmp
xchg
mov
pop
mov
add
pop
in
push
or
test
xchg
lcall
add
stc
jmp
loop
or
or
sti
mov
xchg
mov
ret
test
mov
inc
sbb
out
cmp
andl
cli
or
loopne
loopne
data16
jo
clc
mov
mov
jae
push
mov
jl
in
gs
push
sub
and
push
sub
out
add
jmp
sbb
dec
fstl
and
mov
cmp
jl
jb
adc
mov
insb
xor
lds
or
in
jp
dec
add
into
add
push
in
cmp
inc
shl
mov
mov
mov
and
sub
shll
jbe
xchg
add
mov
scas
mov
outsb
xchg
inc
add
addl
ret
dec
loope
push
addb
sub
xor
cmc
xchg
mov
pop
jl
cld
ret
dec
jo
inc
clc
pop
mov
or
or
call
subl
mov
daa
and
fld
mov
push
mov
fistpll
mov
xor
std
jg
call
out
loopne
insb
into
lock
push
xor
and
xor
xchg
pushf
int
adc
cmp
enter
add
mov
roll
xchg
ljmp
insb
addb
inc
mov
add
std
pushw
outsl
fimuls
cwtl
jo
xchg
sbb
mov
in
push
lret
adcl
loopne
pop
ja
push
push
dec
cmp
or
decl
add
cmp
subb
fscale
pop
lods
hlt
in
jne
stos
inc
hlt
mul
es
jb
dec
xchg
ds
aam
jbe
subl
adc
scas
ss
dec
jo
mov
aam
cmp
jl
movsl
mov
mov
sbb
cli
xchg
sub
jnp
add
or
repz
adc
pop
or
jl
add
lods
fdivl
mov
loope
scas
xchg
test
inc
push
ret
push
jo
adc
jge
dec
mov
adc
orl
stos
jo
jl
sarl
pop
sbb
or
push
sbb
pop
das
shlb
sub
insb
adcl
fwait
push
cmp
lret
xor
dec
addr16
push
test
fcmovb
clc
lcall
fs
into
dec
mov
ficoml
push
fwait
sti
mov
into
dec
pop
arpl
icebp
dec
push
cld
jg
sbb
sub
addb
inc
dec
add
add
jbe
cmp
or
popf
mov
ds
enter
jno
sub
ret
push
jmp
push
decb
jg
pop
movsb
divb
add
inc
sub
xor
lds
shrl
aad
sub
adc
subl
popa
repz
fs
jmp
out
mov
test
out
or
mov
push
jne
xchg
jecxz
popa
push
push
lret
cs
test
cli
das
or
lahf
add
stos
dec
or
add
fdivrl
inc
push
movsb
mov
sbb
data16
add
lret
jge
outsl
push
or
mov
or
or
xchg
sbb
lods
mov
add
frstor
sbb
shrb
pop
adc
mov
mov
pop
sub
dec
fdivr
add
dec
xchg
mov
jg
inc
cwtl
xchg
and
sbb
popf
sarb
inc
hlt
and
mov
cmp
mov
out
jb
inc
mov
es
jmp
push
adc
jae
mov
in
cld
ljmp
and
stos
movsl
push
add
xchg
or
movsb
xor
in
ljmp
add
cltd
or
cmp
dec
mov
cmp
shll
movsl
push
pop
jg
fs
xchg
cli
outsl
xchg
push
add
call
or
or
cwtl
jb
pop
mov
mov
adc
daa
add
inc
aad
cmpsl
hlt
mov
in
js
pop
loope
scas
or
push
adc
jp
sub
xchg
sub
mov
dec
or
push
je
or
jle
lea
adc
jl
xchg
push
fcmovbe
mov
rcrl
fnsave
push
mov
jle
or
mov
arpl
and
jno
cmpsw
pop
pushf
add
pusha
mov
cwtl
jl
mov
xchg
scas
cli
mov
aas
jbe
adc
push
ret
icebp
inc
dec
mov
or
jl
je
bound
adc
aad
lret
and
rorl
pop
jg
ja
clc
mov
ret
nop
push
or
lea
adc
ret
sbb
mov
sub
pop
xchg
pop
rcrb
jmp
dec
popf
jo
mov
xor
mov
xor
adc
xchg
cld
pop
sbb
mov
js
jmp
mov
xchg
data16
jmp
inc
mov
out
sub
pushf
aam
jl
push
mov
or
dec
cld
cmp
mov
clc
push
test
push
into
inc
push
aas
nop
push
inc
fistpll
mov
hlt
aam
inc
xor
movsl
sub
clc
mov
aad
cmp
and
incb
xchg
insb
dec
adc
push
aam
repnz
sbb
push
and
mov
jl
or
lret
popa
loopne
mov
ret
or
clc
add
gs
ljmp
aam
xchg
pop
scas
movsl
or
xorl
je
rcrb
jnp
clc
add
sbb
ds
push
icebp
pop
cld
mov
std
ljmp
add
mov
push
test
push
incl
pushf
js
sbb
pop
in
loopne
nop
imul
ljmp
dec
cmp
nop
bound
sbb
cld
pop
cmp
cli
out
and
adc
insl
mov
cmpsb
sbb
inc
xchg
scas
and
cld
mov
sub
es
adc
mov
sub
pop
inc
jle
jecxz
sarl
mov
in
mov
mov
ja
mov
sub
movsb
xlat
cld
lcall
inc
push
and
add
xor
out
add
or
inc
or
push
adc
sti
jmp
ret
xor
fnstenv
fldl
sub
push
mov
mov
add
in
add
jge
adc
mov
cmp
shr
pop
cmp
lahf
sbb
sub
push
pop
xchg
mov
xor
lods
and
div
jg
ljmp
cmc
dec
mov
dec
jb
pop
pusha
or
sbb
push
and
aam
sub
add
lods
pusha
push
inc
fisttps
mov
sbb
clc
or
adc
push
pop
and
jo
pushf
pushl
or
int
gs
dec
mov
movb
adc
sbb
insl
sub
icebp
adc
mov
cmp
loopne
lcall
xchg
loop
and
in
sub
cld
jle
or
daa
jb
roll
cmpl
mov
test
push
sbb
insb
inc
mov
int
jo
into
add
imul
ljmp
add
bound
fwait
pop
xchg
repz
pop
mov
out
mov
decl
stos
or
mov
mov
add
adcb
or
and
leave
ss
call
xchg
icebp
pop
orl
ret
mov
test
clc
pop
mov
mov
test
pop
or
jge
enter
dec
inc
add
fwait
sbb
xchg
add
jle
repnz
pushl
push
sbbb
pop
xchg
shr
mov
leave
outsl
js
mov
pop
and
cmp
les
adc
pop
mov
lea
into
xor
push
in
or
jle
bound
jae
jo
shlb
jns
mov
test
fbstp
sub
in
test
fisttps
lahf
jnp
add
loope
adc
xchg
roll
repnz
sub
adc
adc
fwait
decl
and
in
out
clc
and
push
add
cmp
call
dec
xchg
dec
mov
jmp
fbld
sbb
filds
das
or
test
scas
xor
inc
push
inc
xchg
mov
ljmp
in
sti
std
adcl
dec
xlat
test
mov
sub
mov
sub
adc
aad
pushf
incb
stos
fdivl
mov
add
repnz
fwait
test
dec
out
dec
add
mov
or
xchg
clc
int3
testb
ja
xchg
pop
inc
loopne
sub
pop
fldcw
popa
roll
xor
arpl
fsubs
jmp
jecxz
into
add
sarl
mov
mov
jmp
lods
stos
pusha
lret
push
add
inc
inc
xchg
add
aam
inc
pop
dec
daa
push
push
push
lods
cmc
loopne
push
push
inc
sarb
inc
and
addr16
inc
cld
das
add
ret
jns
push
pop
scas
faddl
add
mov
push
add
clc
enter
ja
push
imul
sbb
push
enter
inc
fcompl
rorl
js
inc
xor
dec
or
inc
imul
cmp
push
dec
std
mov
das
pushf
xor
inc
inc
inc
hlt
mov
xor
jecxz
loopne
aam
jl
pusha
or
dec
idiv
pop
sub
push
dec
arpl
ret
je
inc
cmp
jno
pop
xorb
xor
and
push
push
dec
out
dec
sub
mov
data16
dec
gs
cmp
or
xchg
mov
push
subb
add
inc
push
xor
lock
and
adc
cmpl
sub
clc
pop
sub
xchg
loopne
mov
adc
jae
shl
xchg
push
imul
dec
jle
push
jmp
jmp
xor
push
add
push
xor
stc
loop
cmpb
sbb
cmp
sub
inc
cmp
decb
fs
add
imul
dec
fmuls
repz
mov
xor
push
cld
add
dec
dec
inc
push
dec
outsl
addb
dec
inc
add
lea
or
stos
je
dec
adc
inc
pop
dec
cmp
adc
outsl
daa
loope
xchg
lods
xor
popf
inc
xor
mov
inc
push
arpl
jno
adc
jl
inc
dec
les
jg
rclb
dec
fs
inc
push
lret
push
movsb
clc
jl
pop
js
mov
dec
and
sahf
mov
jo
les
clc
xor
lea
cld
bound
imul
pop
sub
lock
int3
dec
push
dec
dec
and
inc
inc
icebp
shlb
add
shlb
cmp
stos
loope
clc
mov
inc
outsb
mov
or
xor
push
loopne
xchg
loopne
jo
mov
aaa
dec
or
xchg
lock
inc
ret
add
insb
mov
ss
enter
sahf
xchg
aas
push
ja
jle
test
xor
outsb
dec
orl
ss
adc
lock
xor
ja
sub
mov
jae
fidivrs
xlat
push
dec
inc
sbb
popf
push
and
popa
add
aaa
dec
je
push
dec
popa
fwait
insl
mov
cmp
xor
mov
add
in
dec
pusha
cmp
inc
push
dec
clc
rclb
push
cmp
je
in
fs
inc
jl
push
push
out
inc
popa
mov
test
xor
xlat
inc
push
push
cmp
test
xor
xlat
xchg
lds
ret
mov
mov
into
dec
mov
adc
jo
bound
lock
mov
add
dec
sbb
imul
mov
insb
insb
mov
mov
add
orl
lods
mov
inc
inc
pop
push
add
push
repz
mov
shll
aad
fs
outsl
je
es
add
fcomp
inc
jge
loop
sar
int3
imul
bound
add
mov
adc
sbb
movsl
inc
or
jge
or
push
inc
mov
push
mov
add
push
ja
jnp
dec
push
mov
dec
push
xor
xchg
dec
mov
fwait
outsb
inc
or
jne
ret
pop
pop
dec
mov
add
dec
push
add
dec
stos
dec
fwait
xor
push
xor
negb
push
inc
aaa
gs
fimuls
ss
jecxz
fimuls
inc
dec
popa
cmpsl
mov
dec
mov
and
mov
lahf
dec
push
pop
mov
in
jns
sub
dec
lods
outsl
std
pop
insb
add
ja
cmp
or
fwait
icebp
push
es
outsb
sbb
sbb
and
icebp
in
cmp
into
add
adc
icebp
dec
push
aaa
xor
mov
ljmp
xor
mov
jmp
add
mov
mov
inc
lock
int3
andl
cmp
ret
xchg
sub
fwait
bound
push
cli
ljmp
out
mov
cmp
pop
push
test
mov
outsb
xchg
mov
mov
mov
pop
mov
dec
lcall
pop
add
inc
popl
adc
rclb
dec
mov
push
mov
pop
scas
aam
sbb
add
or
dec
xchg
outsl
jl
out
adc
fistpll
daa
rorb
pop
push
sub
xor
filds
fimull
xchg
and
or
ljmp
push
sub
pop
sub
cwtl
cmp
sub
add
pop
inc
mov
and
into
mov
repnz
incb
or
xor
es
xchg
sub
add
sahf
inc
stos
dec
mov
cmp
insl
dec
inc
adc
out
xorb
cmp
insb
fdivrs
add
jbe
mov
jbe
cs
or
adc
xchg
dec
jns
mov
rorl
inc
pop
jmp
outsb
mov
and
dec
sbbb
icebp
add
mov
jle
popf
movsb
sub
repnz
fcoml
xor
shrb
add
sub
xchg
outsl
clc
adc
sbb
mov
lock
or
push
xchg
push
rcrb
mov
sub
lods
add
shll
cmp
out
adc
sbb
bound
fadds
add
hlt
ljmp
jo
loopne
cs
lret
cmp
in
pusha
outsl
aaa
sbb
les
pop
mov
mov
adc
dec
nop
and
inc
stos
rorb
and
pop
jp
or
flds
add
xchg
push
xor
add
or
jmp
loopne
push
andb
popa
pop
add
xchg
push
dec
inc
fwait
lods
xchg
cmpsb
mov
cmpb
mov
adc
dec
dec
sti
inc
and
in
rolb
add
cmp
insb
das
cltd
sub
adc
push
loop
push
adcb
or
or
scas
ret
leave
aam
decl
inc
mov
add
add
aaa
xchg
ljmp
loopne
js
test
sub
andb
cmp
pop
mov
insb
and
nop
pusha
or
cmp
data16
push
nop
iret
aaa
cld
or
push
sbb
lock
xchg
or
push
xchg
mov
es
ja
cwtl
in
mov
add
lahf
rorb
xchg
mov
lea
adcb
test
dec
adc
das
pusha
add
cmp
loop
pop
test
shll
adc
jle
cli
push
frstor
cmp
inc
scas
cli
add
mov
mov
shll
lds
mov
xchg
cli
or
add
push
add
aad
or
mov
inc
and
push
shlb
xchg
xor
subb
pop
push
aaa
mov
jmp
lods
mov
lcall
push
fisubrs
jns
sub
xor
out
cvtps2pd
mov
insb
jp
stc
xchg
icebp
add
push
shll
cmc
push
and
decl
push
add
pop
push
nop
call
movsb
aam
adc
sbb
scas
shll
jne
je
insl
stos
and
dec
mov
and
adc
es
inc
insb
push
ljmp
xchg
test
insb
aam
push
ljmp
pop
ficompl
jl
dec
clc
loop
xchg
icebp
lret
imul
stos
xchg
xchg
push
data16
mov
or
outsb
scas
inc
adc
adc
jg
mov
into
hlt
fsubrs
adc
pop
test
push
leave
cld
xlat
sbbb
ljmp
add
adc
mov
dec
inc
push
loope
xchg
push
loopne
jle
jge
xor
rorb
stos
stc
lods
xchg
mov
andl
repz
xchg
out
inc
pmaxub
cltd
js
xchg
xchg
push
add
adc
iret
adc
mov
bound
nop
xor
xchg
dec
lret
icebp
mov
mov
mov
cmp
mov
sbb
mov
lds
rclb
mov
ss
and
xchg
jp
cld
icebp
aad
and
ja
out
lds
test
lock
sbb
add
lret
mov
jle
adc
in
negb
add
es
push
push
test
insb
fwait
mov
nop
aam
aas
xchg
or
fnstcw
adc
push
sub
fadds
in
push
rcr
inc
into
lds
mov
nop
mov
cmp
cltd
sbbb
insb
push
pop
mov
sbb
dec
cmp
xchg
rolb
fwait
push
mov
push
push
cmp
push
adc
pop
je
sti
mov
sub
lcall
xchg
shl
sbb
or
fiadds
ja
stos
not
in
adc
push
and
ficoml
addr16
pop
push
in
push
cmp
rorb
fcmovnb
ret
xrelease
push
add
add
pop
sbb
cmp
jo
jo
stc
inc
add
push
or
pop
test
call
iret
push
sub
mov
mov
jnp
sub
push
dec
rolb
or
mov
call
push
inc
nop
jle
orb
cmp
pusha
cmp
mov
add
mov
push
dec
xorl
pop
xor
mov
pop
lahf
mov
xor
test
std
fcmovb
insl
and
mov
jp
add
add
test
xchg
xor
add
sahf
fdivl
cmp
sub
push
ret
popf
fisubs
inc
xor
push
or
xor
and
xor
jecxz
ficompl
lret
dec
mov
pop
outsb
or
cmp
add
in
jnp
jg
mov
out
jge
fwait
xchg
negl
aaa
stos
pop
movb
imul
insl
and
rorl
jbe
mov
imul
xchg
dec
test
fcomip
jns
jb
cmpsb
outsb
cmp
push
lock
aam
rcr
mov
push
add
pop
xchg
test
mov
cmp
push
pop
ja
mov
add
dec
loopne
mov
clc
std
and
mov
mov
inc
xchg
fsub
nop
out
pop
js
sbb
addb
dec
jmp
es
jmp
mov
jmp
jo
push
cmp
sub
jl
push
test
test
es
loopne
or
add
cli
leave
lods
inc
push
jg
sub
push
adc
lods
inc
or
cwtl
add
push
cmpsb
out
mov
inc
inc
push
or
mov
jo
pop
pop
icebp
test
pop
cli
inc
ds
xor
decl
in
jmp
jbe
ror
mov
jo
insb
test
and
out
xchg
mov
mov
pop
icebp
aad
scas
push
inc
xchg
and
pushf
mov
std
and
out
jge
jp
sbb
andl
dec
lds
rol
cmp
clc
jmp
jmp
add
mov
fcoml
adc
cmp
xorl
jge
mov
hlt
or
pop
fimuls
mov
stc
xor
dec
out
jmp
mov
rcll
pop
std
inc
add
jmp
popa
dec
push
data16
jg
roll
push
mov
dec
add
ljmp
push
dec
into
arpl
dec
mov
outsl
cld
add
and
pop
es
ficompl
jae
insl
sbb
jne
xor
mov
lret
fsubrs
clc
mov
mov
mov
mov
or
in
mov
out
int3
inc
arpl
or
jle
adcl
mov
fdivrl
shrb
mov
sbb
or
add
jg
ds
cmpb
xor
sbb
in
int
mov
xor
xchg
repz
stos
sar
hlt
jmp
enter
mov
cld
pop
add
test
loop
sti
mov
xchg
cmc
enter
jl
inc
mov
test
mov
in
mov
pusha
cmpsb
or
in
jge
push
add
jmp
fstps
inc
loope
add
loop
jmp
shl
cmpsb
loop
mov
call
shlb
lock
sub
sub
jne
mov
add
inc
push
jmp
jge
add
jl
sbb
call
test
add
dec
scas
and
and
adc
jae
lret
pop
scas
dec
sbb
cs
cmpsl
cmpsl
fdiv
inc
or
loope
jecxz
mov
xor
push
hlt
test
lret
lret
mov
xchg
push
mov
inc
mov
sub
fiaddl
es
lock
loopne
mov
sarl
movsl
ds
cs
or
add
cli
loope
aaa
in
xchg
pop
push
ret
call
mov
hlt
push
and
mov
jmp
lods
adc
enter
or
pop
adc
push
mov
pop
js
jno
adc
mov
add
dec
inc
andb
and
and
daa
sbb
ss
push
push
mov
scas
adc
push
mov
mov
adc
pop
js
xor
mov
filds
loop
or
cli
add
call
cmp
es
jle
test
jg
lahf
and
fucompp
je
sti
adc
mov
andb
mov
arpl
lods
push
ficoms
outsb
cmp
cmp
lret
loopne
cmc
sbb
add
or
adc
and
jl
cltd
shr
push
sbb
or
pop
sarl
mov
push
inc
jp
lods
mov
add
andb
jbe
out
pop
outsl
mov
add
jo
mov
ljmp
adc
jecxz
rcl
push
xor
rcrb
scas
pop
inc
nopl
ret
add
lea
aaa
inc
pop
imull
sub
fmull
xchg
insb
icebp
test
popf
ljmp
pop
std
aaa
add
and
push
xorb
clc
or
inc
fdivs
bound
push
inc
shrb
pop
outsb
bound
pop
enter
mov
aad
inc
cld
das
int
cmp
das
lods
in
or
adc
or
mov
fdiv
jbe
mov
mov
xor
sbb
mov
insb
ret
cmp
mov
add
mov
pop
xchg
xor
lock
test
int3
ret
enter
add
outsl
xlat
push
mov
shl
loop
pop
test
mov
or
add
push
inc
dec
movsl
add
push
lahf
and
xlat
dec
pop
inc
dec
jecxz
pushf
fisubs
sbb
inc
in
jb
outsb
fs
out
or
and
or
ret
aad
pop
fistpl
faddl
sbb
push
push
call
add
dec
adc
pusha
mov
neg
xor
mov
mov
xlat
dec
lcall
inc
sub
mov
adc
mov
mov
adc
outsb
dec
sub
xchg
cmp
pop
fstps
outsb
and
je
rcr
test
sbb
cmpl
out
jle
inc
xor
and
pop
movsl
data16
jbe
movsl
adc
int
dec
in
pop
in
adc
cmp
pushf
rcrl
or
push
xor
outsb
xor
test
fnstsw
in
ds
sub
movsb
les
and
add
dec
jne
mov
push
loopne
fcoml
xchg
mov
add
mul
and
add
enter
mov
add
dec
std
mov
fsts
jo
call
inc
outsb
jb
jo
lods
pop
push
outsb
cwtl
push
insb
push
push
adc
loop
addb
mov
test
push
mov
js
fldenv
clc
ja
fdivs
inc
jae
sbb
into
jl
cmp
or
mov
in
lret
xor
push
cmp
push
cli
out
add
mov
cld
add
add
adc
repnz
into
mov
mov
ljmp
jl
xchg
cld
notb
addr16
negb
nop
jno
inc
es
mov
or
adc
push
push
mov
ret
int3
rorb
cld
lahf
xor
es
ficompl
xlat
adc
push
and
push
shll
repnz
es
inc
fistpl
jle
popa
pop
sub
cwtl
xchg
sbb
jne
or
sarb
and
adc
pushf
adc
mov
mov
fs
call
cmp
imul
adc
adc
pop
push
mov
mov
inc
jg
aam
push
movsl
in
out
mov
mov
popf
add
pusha
inc
push
mov
cmc
fdivs
mov
inc
stc
je
jg
enter
js
pop
sbbl
dec
not
les
mov
or
hlt
jg
adc
and
cmp
inc
inc
arpl
mov
dec
inc
xor
std
fimuls
dec
jb
add
jnp
or
mov
xchg
les
adcl
pop
rcrb
aam
push
dec
leave
sbb
rcrl
enter
fidivl
adcl
mov
push
mov
icebp
enter
or
js
pusha
push
adc
mov
js,pn
mov
je
outsb
lahf
inc
pop
aas
pandn
jmp
adc
fidivrs
dec
or
rclb
xor
xlat
scas
ror
stc
adc
mov
out
cmpsb
nop
cmp
cld
sub
sub
test
enter
iret
imul
pop
xchg
pop
shl
sbb
subl
nop
pop
dec
cmpsl
push
pusha
pop
or
andb
aam
cmc
sbb
ss
xchg
push
pop
inc
adc
jl,pt
es
daa
mov
xor
in
pop
test
cmpb
pusha
fldcw
inc
ss
add
outsb
sub
dec
inc
neg
fisttpl
inc
push
push
std
or
sub
sbb
rolb
mov
push
jmp
insl
movsb
mov
inc
dec
inc
jmp
dec
xor
push
cli
idivb
sahf
cmp
incb
sarb
fsubrl
and
rol
notb
add
mov
dec
sbb
push
sarl
imul
push
sbb
adc
icebp
adc
pop
sbb
ja
adc
mov
push
push
mov
push
adc
in
push
inc
pop
orl
mov
and
push
test
mov
pop
and
cltd
add
in
enter
ja
push
sub
push
aaa
add
inc
sbb
lahf
pushf
dec
je
add
sub
and
xchg
pop
push
cmp
cmp
mov
cmpsl
incb
add
or
mov
jo
mov
pushf
sub
inc
jmp
mov
xchg
imul
iret
scas
xchg
and
leave
outsl
emms
fisttpll
ret
sub
data16
mov
aad
out
xchg
inc
ret
ja
incl
push
jnp
xchg
pop
add
mov
int
je
xchg
push
fadds
inc
adc
das
jns
jecxz
mov
pop
pop
mov
fadds
shr
sarb
pop
std
mov
add
scas
mov
jg
es
arpl
add
subl
je
pop
fwait
stos
cltd
jo
inc
xchg
les
cmpb
pop
js
lock
pop
fsubrl
repz
sarl
cmp
or
sbb
xchg
popa
out
mov
lds
inc
test
pop
ja
insl
inc
and
ljmp
movsl
das
xchg
xchg
iret
idiv
lock
or
push
aam
sub
mov
cmpsb
test
jmp
loopne
ds
pop
inc
dec
js
punpckhbw
xchg
fdivp
or
and
sbb
out
sub
and
lea
fsubs
add
fucomip
pop
rolb
dec
mov
scas
push
push
ja
mov
enter
arpl
fnstcw
test
push
dec
int3
sqrtps
jg
lock
ret
lods
mov
and
mov
or
pusha
cmp
xor
dec
sub
cmp
clc
scas
ss
mov
divb
lock
xchg
sub
scas
push
ss
adc
mov
lds
sti
dec
pushf
push
xchg
add
loope
jp
call
sbb
and
nop
cmp
add
rcl
lahf
push
sbb
mov
mov
mov
jne
inc
or
add
jb
pop
dec
lret
rorl
inc
sbb
ret
xchg
or
fimuls
lock
leave
push
dec
jle
loopne
xchg
add
clc
decl
push
les
lock
cmp
pop
aad
ret
lods
dec
mov
ret
inc
ficoms
or
xchg
mov
orl
push
clc
pop
rclb
sbb
push
cmp
out
je
xchg
ljmp
in
xor
jno
mov
push
mov
ja
sarb
decl
addb
cmpl
ret
dec
loopne
clc
push
add
sarb
adc
jle
cmp
divb
xor
mov
gs
mov
out
xchg
push
nop
test
mov
fistps
dec
rcl
jecxz
sbb
outsb
mov
mov
xor
inc
sub
sub
shrb
add
lods
add
aad
jmp
mov
aas
mov
repz
xchg
cmp
enter
xor
push
pusha
stc
add
movsb
adc
mov
cmp
inc
xlat
js
fiadds
dec
ss
sbb
xchg
push
nop
and
pop
inc
mov
cs
sar
pushl
cmp
adc
loopne
scas
sbb
mov
pop
faddl
mov
aas
imul
pop
pushf
pop
jp
into
ljmp
push
inc
ret
lret
pop
or
in
test
pushl
mov
xchg
add
or
and
cmp
fwait
jg
mov
sub
or
xor
jbe
jg
mov
pushl
xchg
jno
rol
add
xor
push
pop
pusha
lcall
xor
pop
and
mov
sub
lahf
ret
leave
into
je
str
and
push
jge
jb
adc
fbstp
insl
and
or
lods
xchg
xchg
mov
lahf
mov
mov
lods
jmp
in
int3
and
fisubs
scas
outsb
mov
in
cmc
sub
mov
or
add
jns
addl
in
jo
out
adc
sbb
daa
jb
add
arpl
lcall
pop
mov
pop
imul
pop
adc
andb
decl
push
inc
popf
pop
jbe
mov
mov
test
add
and
pop
fidivl
or
dec
out
pop
loopne
adc
jle
adc
jle
pusha
pop
inc
adc
jmp
mov
mov
xor
pop
cld
icebp
sub
icebp
fs
mov
repz
cmp
add
das
sub
pop
pop
xchg
jl
push
xor
shr
fcoml
sbb
jmp
scas
mov
jo
dec
inc
mov
mov
ljmp
fmuls
lock
push
ret
xchg
sti
dec
test
int
xor
cld
jns
cli
dec
inc
dec
mov
sbb
inc
push
pop
rcrl
push
outsl
aaa
jb
xor
sub
shl
or
add
orb
xchg
ss
js
pop
loope
pop
adc
aad
cli
xlat
mov
lock
add
cmp
out
add
push
and
dec
fldt
testl
inc
lds
push
lods
dec
lret
add
por
cwtl
push
cli
sti
adc
sbb
mov
mul
fnstsw
shr
xchg
ret
incl
push
js
lds
pop
movq
sub
out
or
out
enter
push
mov
clc
pop
add
push
movsl
push
adc
into
push
daa
ja
sub
sti
add
scas
push
in
jle
sub
js
dec
fidivrl
add
xor
cmc
mov
insl
inc
sbbb
add
xchg
push
and
inc
xchg
add
lcall
push
push
popa
out
dec
jne
mov
setne
pop
xor
js
jbe
pop
jl
add
mov
push
xor
ficoml
xchg
mov
fadd
push
loop
lock
pop
sub
shl
shrl
push
rorb
rorb
clc
test
cmp
sub
push
subb
in
mov
sbb
ss
cmpsl
push
xchg
xor
xchg
jl
add
jp
and
mov
xchg
add
stc
push
jle
push
test
pop
jmp
adc
std
inc
mov
pop
mov
hlt
shl
nop
sub
hlt
or
pusha
into
xor
stos
into
dec
push
test
dec
adc
sbb
cmpb
add
mov
push
inc
fwait
pushf
nop
dec
lods
pop
cwtl
sub
adc
pusha
lea
faddl
add
jo
pop
pop
call
enter
add
movsb
adc
mov
mov
sbb
adc
popa
fmuls
sbb
int
subb
jmp
xor
inc
xchg
or
xor
decl
mov
lea
push
xor
lahf
loop
aad
jp
enter
add
das
clc
and
lock
jo
xlat
inc
imul
jl
pushf
movsb
pop
mov
push
mov
dec
js
insl
xchg
sbb
jp
inc
or
sbb
psubb
jge
and
pop
pop
int3
test
lock
cmp
inc
jl
cmp
inc
xor
test
pop
mov
movb
cld
dec
push
clc
stos
and
test
pop
jnp
fwait
loop
insl
std
pop
and
or
push
pop
mov
popa
xor
roll
mov
pop
inc
xchg
cli
cs
in
xchg
fnstsw
cmc
cmp
loopne
mov
decl
push
xor
push
dec
repz
lahf
dec
xchg
push
sti
add
inc
aam
sub
stos
mov
sub
cmp
and
pop
pop
incb
mov
inc
mov
outsb
subb
das
xor
xchg
xchg
sub
cmpsl
push
call
and
pop
movsb
or
rorb
inc
movsb
dec
sub
imul
inc
cmp
push
jb
test
ret
mov
loope
xchg
mov
and
loop
jbe
xor
cmpl
pushf
push
je
je
jbe
rcl
mov
xchg
dec
bound
inc
adc
push
ret
shll
scas
mov
in
data16
dec
ret
lret
push
notb
popf
lea
add
pop
push
cltd
add
mov
pop
fsubs
push
clc
loop
sbb
push
add
mov
adc
xlat
roll
out
xor
and
fs
repnz
jae
cs
pushw
or
sub
dec
mov
shl
jg
pop
loope
test
sbb
testb
jo
push
dec
inc
pushf
mov
xor
push
sub
mov
jno
cmp
mov
iret
iret
clc
jb
jmp
lret
jge,pt
test
ret
pop
insb
pop
test
sbb
popf
mov
inc
adc
cs
fwait
dec
addb
lret
xor
lret
out
jmp
fsubl
and
mov
xor
rcrb
mov
cwtl
push
add
mov
cmp
pop
pop
shlb
mov
enter
jp
sarl
add
adc
xchg
inc
cld
out
push
sub
pop
ljmp
pop
add
cmp
xor
and
or
or
push
mov
cmpl
les
in
fwait
jo
dec
out
adc
outsl
mov
inc
out
or
sbb
adc
adc
faddp
pushf
xchg
inc
mov
lahf
bound
test
jge
int3
push
in
fst
test
and
mov
and
sbb
daa
outsb
pusha
cli
out
inc
lret
enter
mov
stos
and
pop
xchg
mov
les
jo
unpcklps
jo
movsb
xor
cwtl
les
xchg
jb
iret
enter
add
lahf
pop
aam
js
adc
or
jne
arpl
xchg
mov
js
sbb
xchg
pop
sub
testb
loopne
push
punpckldq
gs
gs
mov
push
adc
int3
jle
xchg
lock
fstl
or
xlat
xchg
mov
sub
jno
add
mov
cmc
xor
xchg
sbb
xor
jmp
xor
movsb
cmpsl
adc
add
popl
jb
fiadds
test
fiadds
cmpl
sbb
dec
cli
adc
sbb
ret
clc
pop
adc
fcmovb
call
jp
mov
das
fldl
cwtl
cs
pop
cmp
jne,pn
jbe
pusha
sub
add
js
outsl
cmp
out
and
ret
or
and
sbb
cmp
sbb
mov
imul
dec
and
lock
and
xchg
or
sub
and
inc
lcall
pop
dec
or
mov
or
add
dec
xchg
xor
sbb
xchg
mov
inc
adc
mov
mov
inc
add
lea
mov
inc
mov
xchg
outsb
test
xlat
cs
or
cli
lahf
aam
loop
dec
push
out
inc
repnz
sbb
test
in
rclb
lds
shr
bound
int
push
scas
mov
int
inc
mov
lret
cli
mov
adc
xchg
fiaddl
pop
pop
adc
faddl
in
call
fdivrl
in
xor
push
sbb
insl
std
stc
addb
scas
fildl
out
sarb
xchg
adc
rcrb
arpl
rol
xchg
dec
mov
ror
js
xchg
sarl
lea
push
loop
and
ret
les
or
add
push
outsl
cld
mov
jmp
fwait
dec
inc
loopne
mov
sbb
fwait
push
sub
push
je
test
test
into
add
daa
dec
sub
push
mov
icebp
loopne
inc
sbb
sbbb
mov
les
ret
ficompl
or
addl
and
ds
movsl
shlb
push
push
add
jge
loop
rorb
notl
test
add
add
pop
rorl
xchg
insb
in
adc
add
call
mov
fneni(8087
or
sub
in
pusha
xor
xor
pop
xor
jl
fwait
scas
cli
negl
cli
sub
pop
add
lods
subl
sub
dec
andb
add
mov
insb
xchg
xlat
cmp
cwtl
adc
sti
test
or
sarb
push
data16
les
or
std
xor
aaa
xchg
adc
fbstp
xor
loop
fstl
fidivs
sub
das
jmp
aad
jle
jg
mov
inc
pop
clc
mov
xchg
ret
and
test
clc
cmp
cmp
faddl
push
pop
inc
mov
out
pop
or
xor
pushf
iret
jne
pusha
add
decl
push
insl
adc
stos
sti
add
call
sub
mov
mov
push
jnp
repnz
sahf
pop
loope
mov
jb
popa
repz
ret
inc
pop
xchg
aam
lret
pop
lcall
scas
pop
movsb
pushf
mul
movsb
mull
adc
orb
xchg
scas
or
xor
in
adc
and
clc
fs
les
sub
sub
or
and
sbb
pop
fbstp
push
pop
sahf
push
fistps
pop
adc
or
nop
ficompl
scas
into
clc
ret
inc
adc
add
pop
ja
addb
xchg
sub
ret
mov
jp
arpl
mov
xorb
push
dec
jno
mov
into
lds
bswap
cli
movsb
push
mov
sti
shlb
add
cwtl
add
loope
add
mov
pop
push
call
sub
xchg
or
and
adc
adc
sbb
dec
shrb
stos
lahf
dec
push
in
push
scas
dec
mov
les
push
rolb
mov
ss
dec
sbb
lea
push
clc
sub
cli
push
aam
in
or
out
mov
add
and
les
cmpb
fidivrl
mov
lds
outsl
inc
inc
sbb
mov
pusha
addr16
cli
add
popa
pop
ss
push
in
incl
movl
ds
ret
sbb
dec
fnop
ret
ret
les
sub
and
loopne
adc
bound
loop
adc
and
xchg
mov
push
add
or
repnz
sahf
xchg
sub
push
stc
daa
jne
mov
cmp
push
pushf
pop
jo
decl
mov
or
in
dec
cmp
inc
mov
aas
test
jo
add
add
jl
rorl
dec
leave
lret
fidivrl
pop
js
insl
adc
in
idivb
fsubr
sbb
mov
mov
inc
push
sbb
mov
xchg
push
data16
out
inc
cld
es
xor
jle
adc
and
incl
out
mov
sbb
lea
loop
pop
xchg
mov
cltd
mov
fsubrs
jo
add
cmc
cmpb
push
insb
xchg
jb
mov
jno
add
add
sub
pop
jbe
adc
subb
push
jle
es
orl
dec
mov
sahf
jns
fisubl
add
cld
or
lds
rcl
incb
pop
cmc
push
cmp
add
inc
out
push
sbb
add
xor
or
rclb
fistps
and
add
add
cmp
push
adc
jp
ficoml
adc
mov
pushl
mov
or
data16
mov
aas
adc
cmp
scas
pop
adcb
adc
and
jp
icebp
hlt
push
fistpl
mov
cmc
loopne
jne
lds
cmpsl
addr16
test
dec
addb
rorl
push
sub
and
mov
sti
adc
adc
movaps
dec
inc
test
push
lock
adc
testl
add
adc
loopne
out
test
ficomps
loopne
das
ss
fs
sub
stc
inc
xor
mov
jbe
loope
out
add
stos
out
sub
cmpsb
clc
in
sub
mov
xor
fsub
pop
mov
mov
push
mov
push
fs
mov
movl
sbb
inc
pop
es
repz
pusha
bound
jl
push
pop
lret
and
and
mov
push
sarb
clc
xchg
addb
fucomi
xor
xchg
mov
adc
mov
sbb
in
dec
addr16
pop
ret
aad
xchg
jmp
jb
cs
mov
xchg
popa
test
push
repz
xchg
fidivrl
inc
xchg
lcall
test
push
and
sub
mov
loopne
mov
mov
mov
int3
cmpsl
and
mov
test
or
je
lods
cmp
push
test
cmp
je
xor
xor
pop
ret
push
or
lret
jg
mov
bound
jg
out
nop
ret
mov
push
push
cwtl
out
dec
fmul
call
or
in
mov
prefetch
aad
jno
mov
xor
loopne
notb
or
stos
mov
bound
add
insl
push
out
pop
or
mov
hlt
inc
shll
mov
ljmp
pop
or
adc
add
pop
mov
jae
cmpsb
push
int
aas
sarb
loop
sbb
sti
cs
lcall
jbe
inc
loope
mov
test
mov
or
lods
jno
outsb
push
cwtl
pushf
aaa
sbb
adc
mov
das
adc
add
or
lret
call
ret
add
xchg
jl
das
mov
je
cltd
add
jb
ja
adc
add
leave
or
mov
in
cmp
mov
jo
rorb
lahf
fidivrs
and
in
test
lds
xorb
out
sub
mov
insb
std
adc
sbb
loope
call
fistps
add
sub
mov
aam
pop
movsb
pop
push
xor
subb
std
mov
jg
test
rolb
aaa
aas
int3
and
adc
lea
pop
inc
cmp
das
movb
fists
add
sbb
mov
enter
xor
dec
xchg
loopne
add
pop
xor
popa
or
test
ds
and
das
mov
add
aaa
inc
push
mov
jbe
imul
jp,pt
mov
movsb
outsl
add
jl
sbb
rcr
add
pushf
sar
es
pop
andl
or
js
stos
xchg
jne
rcrb
mov
or
sbb
mov
incl
xor
push
add
add
repz
lcall
int
xor
data16
push
imulb
or
jmp
ret
frstor
adc
les
repnz
test
pop
imul
push
cmpsb
or
mov
xor
in
arpl
ljmp
jbe
or
cmpsb
in
jnp
into
push
movsb
dec
andl
jne
jg
jecxz
sub
hlt
adc
insb
sub
or
add
insb
daa
xchg
dec
mov
pop
or
add
sti
icebp
push
jp
and
inc
push
or
mov
cmc
sbb
fisttps
sub
adc
jle
add
mov
jo
pusha
mov
xor
mov
call
jo
loop
or
push
iret
mov
cmp
fmull
xchg
in
inc
out
addr16
mov
mov
push
pop
fisttpl
into
fisubl
mov
gs
jmp
lods
adc
shr
nop
add
inc
stos
push
mov
js
es
push
push
dec
push
xchg
stc
cld
andl
dec
lock
mov
pop
cmp
pop
and
rolb
xor
imulb
inc
enter
outsl
scas
lock
js
dec
filds
icebp
fnstsw
fwait
xor
inc
mov
ss
mov
in
mov
mov
sbb
cmp
push
or
adc
mov
cmc
inc
cli
fbstp
shr
cmp
hlt
lea
dec
enter
fildll
and
add
sti
add
xchg
mov
pop
insb
jg
popf
or
loop
xchg
sbb
shrb
loopne
cmpl
sub
test
outsb
mov
dec
add
cli
adc
and
pop
test
inc
xchg
jmp
cld
les
mov
cwtl
daa
adc
enter
push
push
pop
repz
nop
cmpsb
push
es
dec
clc
and
out
xchg
pusha
dec
mov
adc
fidivs
mov
push
fcoms
xchg
ficompl
scas
outsb
xchg
std
mov
cs
mov
jge
add
aaa
cmp
jns
fsubp
stc
jnp
sbb
sbb
mov
mov
adc
inc
test
mov
int
push
test
xor
xchg
das
adc
jbe
dec
sub
mov
or
jno
pop
jb
cmp
mov
jle
push
rclb
mov
inc
cwtl
lods
add
fcomps
rorb
and
add
mov
push
pop
push
cmp
push
cvtpi2ps
dec
pusha
inc
mov
inc
ret
mov
cltd
add
add
pop
xor
mov
cmc
inc
inc
push
test
dec
jbe
jle
clc
add
jge
in
mov
pop
lock
sbb
xchg
out
add
cltd
ret
lahf
icebp
inc
cmp
xchg
cmc
mov
mov
cmpsb
add
xchg
pusha
into
sub
dec
lcall
push
mov
push
mov
push
xor
adc
paddusw
pop
andl
loope
push
in
xchg
iret
into
int
pushf
add
or
mov
lea
lcall
nop
sbb
push
inc
lods
data16
sbb
dec
jl
push
sti
xchg
jle
sbb
xor
cs
addr16
xchg
inc
add
into
fsub
nop
and
push
std
adc
adc
in
cmp
bound
nop
gs
push
push
pop
xor
mov
fcmovnbe
add
jp
jg
xchg
push
cmpsb
mov
sub
mov
cltd
ss
mov
sub
ficoml
mov
insb
add
and
inc
and
jl
push
pop
mov
xor
add
dec
push
jl
cmc
or
adc
and
shr
les
cld
mov
jp
jecxz
enter
insl
enter
or
sub
or
fs
adc
or
inc
out
xchg
mov
rcrl
ja
push
dec
les
loop
add
mov
jmp
pop
out
and
inc
pop
add
jg
into
dec
mov
jo
push
xor
je
mov
mov
lds
sub
insl
mov
pushl
xchg
je
mov
mov
or
mov
cwtl
repz
shlb
or
fildll
mov
loop
push
push
mov
push
mov
sub
hlt
data16
data16
mov
les
adc
inc
or
xor
jle
push
jle
roll
adc
sar
mov
xor
push
push
add
aad
add
jecxz
ficoms
cs
sub
inc
adc
add
fnstenv
incl
cmpsl
push
fnstenv
cmp
in
dec
sub
pusha
std
dec
std
test
pop
jle
subb
in
pusha
push
add
pop
sub
cli
mul
or
mov
xor
pusha
sub
inc
enter
sbb
jmp
inc
jne
sbb
jmp
cmp
sbb
sbbl
loopne
aaa
ljmp
andb
loopne
xor
jl
fistps
jmp
adc
dec
mov
pop
cli
addb
add
pop
sub
ds
cmp
jl
jbe
jg
mov
add
mov
or
push
adc
sti
outsl
push
and
clc
andb
cmp
and
jge
lahf
pop
jae
test
nop
push
xor
leave
or
les
sarl
or
aaa
mov
dec
test
pop
repnz
mov
mov
fnstsw
lret
push
dec
dec
movsl
shll
add
lock
in
jmp
cmp
pop
fwait
cmp
push
sahf
and
jge
jno
pop
dec
clc
xchg
mov
test
in
pop
cld
stos
jmp
add
addr16
cmp
push
sbb
cmp
lcall
push
mov
fdivrp
test
mov
add
xchg
pop
lock
lock
push
jmp
push
aas
push
subl
call
jp
aam
js
push
jne
mov
hlt
stos
jae
insl
inc
dec
and
lods
sub
imul
dec
outsl
mov
cmp
push
cld
push
cld
add
push
icebp
dec
dec
sub
xchg
xor
adc
mov
popa
addr16
sub
cs
mov
push
daa
sbb
imul
push
cmp
and
lea
xchg
loopne
add
add
mov
push
push
stos
dec
pop
add
push
ret
arpl
mov
adc
xor
fildl
loop
out
lods
jl
mov
push
call
dec
in
loope
pushl
add
cmp
pop
jmp
jo
cmp
loopne
insb
scas
push
pop
sub
mov
jp
pop
repz
incb
stos
andb
icebp
fdivr
mov
sahf
mov
mov
stos
popf
jg
ds
loope
inc
mov
mov
leave
jae
mov
cmp
sub
adc
jg
mov
mov
jno
push
jno
pusha
in
dec
jge
arpl
mov
scas
pop
jle
orb
cmp
jle
cmpsb
xchg
icebp
fildll
enter
dec
in
nop
xor
mov
add
jbe
adc
daa
xlat
or
sbb
dec
shrl
inc
xchg
pop
leave
xchg
cmp
ljmp
push
pop
adc
jnp
and
lea
push
adc
jo
push
rcr
adc
add
adc
pop
js
sar
xchg
xchg
subl
movb
jb
call
fwait
jno
jb
adc
jno
sub
adc
dec
fldl
lcall
daa
mov
pushf
rcrl
sbb
mov
xchg
pop
in
push
shrb
das
popa
icebp
inc
pop
push
testb
loope
adc
orl
jecxz
imul
jmp
adc
test
xchg
push
aad
scas
or
mov
mov
pop
imul
xchg
push
mov
add
inc
add
push
pop
call
nop
lret
xor
fistps
add
dec
xor
cmp
rorl
xchg
pop
aaa
ja
add
mov
inc
cli
pop
sub
rorb
jno
jmp
stos
ss
mov
dec
lock
incl
inc
pop
mov
test
inc
imulb
dec
mov
or
dec
cld
lcall
add
fwait
jg
adc
and
ss
ss
negl
xor
mov
mov
or
jbe
add
add
idivb
nop
jg
jo
repnz
ss
test
push
inc
test
push
popf
mov
dec
xchg
loopne
mov
icebp
pop
test
and
call
je
and
outsl
orb
aad
jb
popa
pop
and
insb
mov
xchg
jmp
add
and
addr16
fiaddl
inc
adc
cmp
add
sbb
add
jo
pop
call
lock
cld
fstps
rcll
mov
out
inc
test
add
mov
addr16
sbb
push
rolb
pop
push
sub
sub
cmp
lret
jle
fsubl
test
outsb
adc
xlat
ret
sub
into
data16
stc
mov
aam
inc
cli
add
add
mov
pop
out
outsb
lock
ret
cwtl
jecxz
mov
lcall
notl
jecxz
sbb
ljmp
fwait
loop
subl
cmp
ljmp
ljmp
in
add
mov
scas
cmp
mov
inc
xchg
mov
add
sbb
call
pop
jp
add
inc
je
dec
dec
inc
mov
sbb
inc
in
jnp
loopne
or
lcall
push
push
test
ds
int3
aas
lods
les
mov
sub
add
and
test
adc
pop
popa
fsubrl
in
sbb
dec
mov
or
js
xchg
rclb
pusha
push
stos
xor
call
aam
repnz
push
shlb
mov
decl
fcmovnu
mov
dec
add
mov
jne
jb
jg
adc
mov
jl
mov
cmp
mov
add
aad
mov
pushf
imul
das
addb
in
inc
push
lds
inc
add
filds
gs
shlb
js
or
adc
xchg
inc
lods
xlat
pop
adc
fwait
sub
pop
mov
in
lods
ret
scas
js
push
loopne
into
fcoms
and
sub
pop
pop
pop
mov
jb
popa
pop
test
inc
mov
mov
xchg
dec
mov
adc
mov
mov
lahf
xchg
xchg
adc
pop
inc
lahf
sbb
cmpsl
xchg
cs
sub
adc
sub
fisttps
push
hlt
mov
mov
and
dec
clc
shll
in
xchg
dec
push
and
insb
and
outsb
outsl
aam
sbb
aam
lds
xchg
ffreep
xabort
fcmovb
mov
and
push
mov
mov
lcall
aaa
loop
mov
sbb
sub
pusha
inc
in
xor
in
or
jg
lock
js
gs
add
movb
in
dec
test
das
ret
mov
mov
nop
fst
cmc
mov
mov
jns
sub
cmp
lret
add
pusha
fnsetpm(287
lods
fdivl
push
arpl
add
aam
ds
dec
test
fistps
shrl
fcmovbe
imul
rorb
jp
and
add
iret
sub
mov
adc
sub
pop
pop
mov
flds
mov
jg
push
inc
sub
arpl
rcrl
test
cmp
and
sbb
add
push
fmul
push
jbe
add
jecxz
lock
mov
mov
mov
stos
add
pop
fwait
insb
lods
push
rolb
dec
addb
add
lcall
sub
xor
or
add
cmpsb
push
inc
orb
mov
pop
pop
inc
je
addb
add
jb
sarl
aam
pop
or
dec
js
aam
add
push
jge
mov
nop
test
and
push
push
arpl
push
aas
jecxz
ja
outsl
addl
jp
imul
shrb
or
mov
mov
push
loope
mov
roll
repz
scas
push
adc
xor
jg
xchg
fdivrp
push
shlb
loopne
lret
push
std
add
gs
jle
xchg
add
add
arpl
pop
xor
push
test
testb
fst
in
es
test
test
mov
test
jne
inc
push
clc
dec
xchg
mov
iret
jp
out
push
scas
push
ljmp
jo
arpl
test
mov
out
push
or
cmp
dec
inc
test
loope
mov
xor
mov
ljmp
inc
clc
cs
lahf
es
fwait
jg
xchg
adc
fstpt
add
sbb
mov
or
jb
jmp
cmp
or
imul
mov
adc
inc
in
call
mov
out
push
iret
mov
icebp
sub
xorb
add
sbb
orl
mov
out
aas
aam
or
xor
sbb
jbe
pop
adc
in
decl
je
cmp
dec
inc
adc
icebp
jg
outsl
nop
mov
into
fs
mov
add
std
add
aam
mov
pusha
mov
and
cmpsb
lds
inc
inc
std
std
or
push
inc
lcall
pop
loope
and
jmp
std
dec
mov
dec
dec
stos
pop
xorl
sub
sbb
fstp
mov
cmpsb
inc
and
scas
loopne
imul
add
xlat
dec
xchg
mov
sbb
push
lret
ljmp
fwait
imul
mov
mov
loopnew
loopne
adc
ret
inc
lea
xor
fidivl
andb
jmp
cli
mov
orb
in
sahf
xor
orl
sar
cmp
test
cmp
popf
pop
xchg
add
icebp
cmpsl
lcall
test
out
mov
or
lcall
and
loop
and
in
nop
inc
sub
jg
cs
jno
movsb
mov
sbb
out
add
jo
repnz
push
std
mov
mov
incb
dec
es
in
sub
fsub
into
mov
out
mov
jg
test
lods
pop
popf
push
cmp
or
cmp
shlb
ljmp
shlb
add
aas
mov
arpl
pop
inc
int
call
cmp
push
pop
and
subl
into
adc
pop
aam
dec
xor
adc
add
cld
adc
aas
sbb
jno
aam
mov
ljmp
mov
mov
cmp
or
fnsave
call
cltd
and
push
push
rolb
pop
pop
push
pop
out
ret
push
scas
cli
out
enter
test
movb
icebp
mov
fsubrs
addl
subl
flds
sqrtps
enter
xchg
add
test
mov
push
out
xor
sbb
sbb
sub
xchg
or
fdivrs
or
jecxz
enter
shll
mov
sbb
push
sbb
jl
icebp
loopne
mov
adc
pop
push
ja
or
adc
jo
jb
pop
sub
ss
mov
and
or
cld
dec
scas
push
or
filds
push
cld
addr16
add
dec
and
adc
mov
sub
cs
xchg
mov
mov
or
pop
aad
mov
fidivs
std
push
fimull
stos
adc
dec
ja
fmul
mov
stos
dec
mov
push
xlat
in
lds
cli
clc
jne
flds
mov
fiadds
push
jge
pop
pop
es
add
xor
sbb
clc
xchg
aas
pusha
mov
rol
insb
sub
sub
jno
or
inc
sbbl
mov
aas
test
test
or
push
cmp
add
lock
gs
pop
in
mov
je
sbb
ds
scas
out
pop
scas
and
add
or
or
adc
arpl
iret
repnz
and
jle
out
sbb
and
jo
jb
subl
test
cld
dec
sub
arpl
xchg
add
adc
fnstsw
inc
push
xor
cmp
pop
negb
jb
lock
or
aas
cmp
ret
push
into
and
mov
push
sbb
cmpsl
lea
dec
jg
add
dec
mov
aam
out
rclb
cmp
jo
mov
dec
add
imul
push
and
xlat
cmpsl
or
loope
shl
outsb
rcrb
test
outsb
ja
out
jbe
mov
lds
mov
push
mov
gs
adc
or
ficomps
pusha
cmp
push
push
mov
and
lds
push
push
inc
jmp
mov
sub
dec
outsl
inc
mulb
inc
push
gs
sti
add
or
fimull
jns
data16
divb
mov
dec
jbe
dec
mov
cmp
inc
dec
inc
clc
jg
fsubrl
sub
sub
sbb
lods
xlat
push
xor
sub
push
inc
int
ds
jg
pop
adc
dec
inc
xchg
rcl
and
adc
es
mov
xchg
lea
js
jae
cmp
inc
incl
pop
cld
dec
jp
add
call
adc
rol
inc
xchg
add
xchg
std
les
mov
ljmp
mov
pop
fwait
jb
loopne
add
ret
cvttps2pi
jp
pop
pop
punpckldq
cwtl
lea
jle
movsl
loope
fsubp
jb
test
mov
dec
mov
add
xchg
and
rorb
subl
mov
jg
and
and
xchg
mov
and
stc
inc
mov
or
lock
lret
add
ss
jns
mov
jle
aaa
jg
imul
sub
mov
sub
cmp
dec
aas
or
mov
mov
mov
jl
add
clc
ret
push
xchg
cmp
xor
cmpb
shll
gs
pop
ltr
sub
nop
inc
fwait
call
test
dec
sbb
pushf
jo
and
push
sbb
push
jbe
cmp
add
mov
and
inc
loopne
rcl
push
repnz
mov
fisubl
mov
mov
xor
cmp
mov
je
sahf
dec
sti
xor
sbb
loopne
cmp
push
lock
fsubrl
sub
js
and
inc
movsl
jg
jg
mov
subb
arpl
add
pop
pop
inc
in
sub
repnz
lods
inc
nop
decl
cltd
lea
pop
fldl
ljmp
sub
dec
inc
adc
es
and
sahf
adc
jl
loopne
stc
and
or
in
inc
adc
push
xor
and
lcall
sar
shrl
sbb
int3
stc
jno
call
lcall
jmp
dec
push
push
add
or
lahf
cmp
push
mov
mov
inc
mov
ljmp
outsl
fsubrs
negb
inc
fldcw
sarl
sbb
xor
mov
int3
jno
cmp
mov
lock
jge
pop
pushf
in
popa
mov
cmp
fwait
clc
inc
adc
cmpsb
sbb
xchg
push
or
or
subb
cmpsb
rolb
and
cmp
insb
and
cmp
sbb
outsl
rcrb
insb
mov
sub
xor
push
and
test
xor
out
out
pop
pop
mov
out
sahf
dec
and
mov
sahf
xchg
rcrb
inc
fs
mov
dec
inc
imul
mov
aaa
dec
scas
fimull
mov
decb
movsb
and
mov
or
lods
leave
or
daa
lock
xchg
orl
inc
and
pop
adc
js
je
shlb
adc
je
pop
jo
adcb
out
or
xor
lea
add
inc
or
adcl
sti
fists
movsb
or
pop
shlb
mov
nop
std
lea
push
mov
adc
lea
and
int
adc
and
cmp
mov
mov
cs
mov
daa
adc
pusha
adc
adc
mov
or
adc
adc
and
loope
jmp
shll
out
push
dec
mov
lods
xlat
push
mov
push
imul
push
xchg
xor
idivb
out
xchg
jae
and
push
xorb
add
rep
scas
shlb
je
aad
lcall
add
cltd
arpl
iret
mov
int3
outsb
xor
jno
xchg
fstpt
sbb
pop
cld
popa
es
iret
jbe
shrb
lods
jo
pop
add
add
cli
incl
ret
add
pop
loope
adc
loope
sbb
ljmp
enter
lods
push
push
cld
iret
gs
cmovge
dec
pop
mov
pop
shll
mov
mov
out
dec
mov
cs
lcall
sub
sbbb
xor
daa
xor
mov
pop
cmc
int
push
pop
push
push
inc
aas
aaa
js
loop
dec
outsb
cmp
add
mov
outsl
mov
and
or
inc
jmp
cmp
cmpsl
mov
mov
test
mov
in
addl
mov
subb
mov
ss
pop
cmp
dec
std
mov
xor
and
mov
ret
daa
mov
pop
mov
ljmp
std
shlb
pop
sub
pop
in
cli
sbb
sbb
jmp
push
mov
push
mov
adc
pushf
jp
and
sbbl
cmpsl
movsl
incl
stc
icebp
in
dec
dec
adc
add
faddp
les
jae
add
jo
push
mov
dec
dec
or
jnp
xorb
mov
push
add
sti
lret
popa
sbbb
mov
cmp
or
lock
sbb
sbb
sub
cmp
lock
ss
cwtl
clc
pop
inc
and
jp
orb
add
jle
mov
pop
dec
push
sub
xchg
cmc
mov
addr16
adc
lods
or
out
test
inc
stos
icebp
push
xchg
inc
mov
inc
in
bound
enter
push
orb
sar
faddl
lds
push
test
xchg
out
hlt
outsb
and
adc
or
dec
in
cltd
adc
pop
inc
add
ret
aad
cmp
movsl
js
fcmovne
ficompl
aas
dec
add
aaa
std
inc
outsb
jmp
jnp
icebp
int3
cltd
xchg
dec
mov
sarb
std
sbbb
aam
test
pop
cmpsl
fildll
shll
fildl
ss
adc
cmpsl
cld
hlt
mov
jg
nop
cmp
fsubrl
fldenv
ds
xor
push
addb
inc
adc
roll
sub
call
xor
mov
pop
dec
sub
mov
aam
pushf
sbb
fs
idivb
iret
push
ja
repnz
rcl
clc
mov
jg
mov
push
mov
or
add
jl
addr16
inc
push
jns
add
data16
add
mov
rcrb
popf
std
push
call
push
push
add
add
call
scas
add
mov
out
sarl
mov
in
push
loop
adc
sbb
ret
stos
outsl
and
sbb
stc
decl
sub
test
pop
sub
xchg
mov
sbb
mov
loopne
pop
pusha
inc
ret
pop
pop
and
xchg
lds
dec
filds
pop
fsubl
mov
and
aas
jmp
stos
push
jp
rcr
cmc
or
je
jle
rclb
rclb
xlat
or
mov
push
dec
or
cmp
or
mov
gs
addr16
lods
pusha
shrl
lcall
inc
mov
in
jno
cmp
xchg
test
mov
mov
sbb
jp
loopne
or
or
dec
pop
fcmovne
nop
andb
lods
xorl
aam
sbb
push
xor
jle
bound
mov
cltd
push
lods
cld
dec
add
cmp
cmp
mov
imul
jle
add
fisttps
aaa
dec
sub
cmp
inc
jb
stc
dec
pop
fists
out
insb
aaa
push
xor
dec
ljmp
mov
jns
fs
inc
inc
sub
subl
mov
mov
mov
jmp
outsl
adc
loopne
push
mov
mov
addr16
sub
mov
push
jmp
or
subb
cmpsl
mov
or
xchg
loopne
ror
js
mov
getsec
add
pop
and
and
sti
pushf
hlt
orb
div
sub
pop
or
cmpsb
lock
pop
sub
ret
daa
lods
push
out
pop
enter
or
add
test
and
xchg
cmc
mov
and
insb
add
ret
add
rorl
loopne
stos
xor
arpl
icebp
in
into
mov
add
sub
xchg
sbb
inc
fldt
into
ret
inc
xor
lret
lods
mov
test
testl
out
mov
sub
pop
dec
iret
mov
jno
shll
test
push
add
sub
sub
movsl
or
or
scas
mov
nop
add
lods
lock
jne
mov
not
mov
test
popa
cmp
int
call
or
sub
adc
daa
fadds
sub
fisubrs
cmp
mov
mov
fisubrl
test
cmp
push
jg
inc
cmova
mov
sbb
rorl
jg
daa
jecxz
xor
cmp
jb
adc
scas
mov
add
addl
push
adc
mulb
lea
dec
add
pop
push
in
cmpsl
in
push
lods
scas
jns
pop
imulb
add
xchg
push
xor
mov
adc
add
daa
cmp
push
mov
sbb
rolb
pop
ficoml
rclb
cmp
int3
add
adc
push
mov
jns
lock
or
push
cli
leave
or
mov
sbb
gs
mov
ss
lods
rcrl
sarb
push
mov
inc
xchg
or
mov
pshufw
stos
cmp
mov
nop
jne
dec
loopne
inc
pusha
jge
cld
xor
add
cmp
mov
js
push
sahf
sub
and
or
sub
add
and
push
jnp
mov
push
jge
sbb
mov
sub
or
xor
lods
cli
inc
daa
rcrb
dec
jle
addr16
rcrb
scas
and
xor
rcr
cmp
xor
add
in
movsb
add
sub
add
aas
test
arpl
addl
jl
dec
mov
inc
mov
in
inc
and
xchg
add
pop
pop
aad
into
fsubrs
jo
and
jo
xor
add
xor
push
jnp
test
push
movsb
and
insb
sahf
mov
insb
clc
out
add
jp
insb
pop
add
and
fs
ret
stos
mov
mov
sbb
icebp
mov
pop
aam
nop
pushf
sub
add
mov
fidivs
jg
xor
push
inc
adc
fwait
jle
imul
or
lahf
sub
data16
loope
stos
sahf
xchg
and
aaa
pop
dec
movb
movsb
into
clc
dec
inc
xchg
or
in
pusha
cmp
call
daa
add
jns
xor
pop
pop
mov
das
xchg
inc
fcmovnb
pop
add
pop
or
scas
mov
add
jb
mov
aas
or
mov
fsub
dec
out
cmpsl
cmp
add
imul
or
adc
jmp
inc
jge
xchg
pusha
xchg
mov
adc
mov
nop
push
xor
sbb
loop
popf
mov
pop
xchg
out
outsl
mov
xorl
sbb
xorb
cmp
push
in
ficompl
lret
cmp
add
shll
dec
fadds
cmc
xchg
loopne
or
popf
sbb
out
xor
cmp
sub
aad
ljmp
mov
jb
jmp
add
fdivl
xor
daa
sub
pop
push
sbb
mov
sub
outsl
xchg
jb
add
mov
mov
out
cli
mov
mov
fisttps
jno
mov
pop
fistl
or
imul
jo,pt
adc
loopne
lahf
dec
add
or
int3
test
xor
cmp
push
xlat
mov
clc
adc
xor
ja
adc
xchg
jne
das
or
outsl
cmpsl
daa
xlat
push
sub
add
dec
jl
adc
sub
fdivl
cmpsb
mov
call
mov
xor
arpl
idivl
sub
outsb
mov
lret
and
cli
xadd
push
call
push
arpl
push
lcall
mov
add
mov
inc
addl
out
leave
movsl
popa
or
arpl
pop
fidivrs
inc
je
cmc
add
movl
push
push
movsb
and
pop
mov
push
jl
sbb
int
adc
sub
xchg
or
jl
cmp
cmpsb
jp
push
pop
cmpsb
bound
scas
xchg
sbb
mov
je
ds
js
xor
out
fs
xlat
ret
push
push
mov
mov
bound
sub
and
push
rcll
xchg
add
and
push
sbb
mov
jle
cmc
fistl
leave
cmpxchg
pop
imul
bound
pop
ljmp
xchg
xchg
icebp
add
dec
jl
fldl
mov
je
inc
add
jns
mov
sbb
test
lods
xor
mov
mov
into
in
inc
inc
enter
add
xor
jo
andb
push
lret
mov
mov
cs
enter
pop
mov
mov
sahf
cwtl
xor
sbb
sbb
je
fistpll
sub
cs
pop
js
sub
call
aas
fists
je
repnz
lret
push
pushf
pop
lret
or
mov
js
jecxz
or
cld
notl
cmpl
ss
sti
popf
mov
lea
jle
testb
xor
bound
adc
push
movsl
push
xchg
inc
cmpsl
mov
mov
or
xchg
jl
push
shlb
and
aam
inc
adc
xchg
stos
or
xor
cwtl
mov
js
cmp
popa
ds
inc
pop
mov
loope
mov
and
push
jp
jb
je
das
inc
dec
dec
jp
pop
adc
in
dec
mov
and
movsb
push
add
adcb
mov
cmp
inc
inc
adc
push
inc
mov
mov
cmp
mov
shr
jns
test
dec
mov
inc
movl
sbb
xchg
dec
shlb
cmp
ss
mov
imul
dec
inc
ljmp
jbe
xlat
fisubrl
stc
cs
cmp
jmp
jo
jg
fdivrp
testl
in
test
test
daa
dec
mov
cmp
adc
xor
das
push
mov
std
fwait
js
add
or
mov
ficoms
leave
mov
or
dec
add
orb
inc
pusha
ret
jb
lret
cmc
push
filds
pusha
mov
mov
adc
sbb
pushl
cmp
sub
xor
add
jecxz
clc
sti
pop
sbb
je
inc
out
aad
fs
adc
push
pop
pop
adcb
xchg
xchg
pop
sbbl
jnp
mov
ja
std
inc
loop
clc
inc
out
inc
mov
ficoms
xchg
rol
mov
cwtl
mov
adc
cwtl
test
mov
or
inc
bound
jle
mov
cs
or
hlt
es
pushf
xchg
mov
daa
pop
add
push
push
sarl
jmp
inc
call
push
add
jnp
mov
hlt
push
jge
sub
arpl
insl
rorl
mov
dec
or
cwtl
mov
ljmp
sbb
dec
add
shll
out
adc
loopne
scas
js
or
je
mov
ja
scas
lock
subb
pop
jne
sbb
sub
mov
xor
lcall
in
mov
insb
cmpsl
or
outsl
fsubrl
sbb
pop
mov
sbb
lods
daa
std
push
add
lret
add
ss
pop
cmc
lret
inc
mov
mov
fistps
lds
out
fdivr
lds
xor
out
push
cmp
sbb
inc
data16
out
test
daa
call
add
adc
out
jo
or
dec
lcall
add
scas
test
push
pop
mov
mov
inc
adc
pop
in
and
cltd
and
out
inc
ret
scas
lret
in
lea
cmpsb
and
test
fwait
push
pop
jo
outsl
add
outsb
mov
add
push
mov
cli
stos
lods
pop
or
push
and
mov
adc
pop
jb
les
mov
fs
outsb
push
jne
or
push
adc
in
sti
fcomi
arpl
push
and
jmp
jecxz
roll
adc
sbb
push
xchg
push
sub
inc
inc
pop
aas
ljmp
call
les
outsb
mov
mulb
cld
sub
pop
lock
dec
sbbb
push
ds
jl
xor
or
dec
mov
inc
in
pop
mov
int
mov
adc
mov
fistpl
scas
sbb
inc
xor
call
loopne
xchg
gs
loop
dec
enter
xchg
xlat
xchg
sbbb
jg
xlat
and
aad
sub
outsl
add
push
xor
stos
jmp
pop
dec
popf
dec
or
sbb
pop
nop
mov
adc
or
mov
fcomip
sbb
add
jbe
inc
dec
adc
call
cmpsb
add
push
xor
or
push
add
ficomps
lret
lods
sub
clc
push
adc
xchg
dec
out
push
loop
fadds
mov
push
mov
pop
call
mov
push
idivl
cmp
cmp
mov
imulb
sub
adc
push
jmp
jmp
cmp
aad
mov
sbb
rol
ret
mov
mov
sbb
jecxz
ret
scas
dec
fstl
test
je
test
add
sahf
iret
lock
add
mov
aam
cmp
sbb
sbb
pop
lea
cwtl
mov
push
or
xchg
and
add
loopne
push
push
mov
and
inc
ds
push
shll
xor
mov
push
int3
cmp
mov
mov
ds
lea
hlt
push
xchg
icebp
mov
push
fisubs
mov
cmpsb
outsb
ja
push
jo
cmp
pop
push
adc
xor
clc
and
mov
push
sub
mov
ds
inc
in
push
js
push
shlb
and
sub
push
mov
das
mov
lcall
dec
push
cld
ljmp
cwtl
out
pushf
lock
xor
sahf
rorl
mov
out
test
fs
out
repz
mov
dec
pop
push
out
mov
fdiv
ret
cmp
outsb
sarb
push
push
std
call
jne
icebp
mov
add
jle
or
aaa
lcall
les
out
mov
ficoml
add
sbb
dec
lcall
xchg
jg
sub
inc
incl
rcrb
adc
les
and
pop
adc
fwait
mov
add
adc
push
and
lock
incl
clc
jb
mov
mov
xor
jg
dec
jg
stc
mov
mov
popa
push
sub
cmp
sbb
stos
jle
mov
outsl
sbb
cmp
xchg
jo
clc
xchg
divb
xlat
fs
jl
lds
in
in
pop
js
scas
repz
pop
add
jo
in
imul
arpl
mov
jmp
push
dec
xchg
ret
negb
push
or
loope
sbb
cli
mov
ret
data16
add
xor
mov
push
or
mov
cmp
pop
pop
sub
xchg
hlt
pop
mov
scas
xor
test
mov
and
ss
or
icebp
push
xor
ret
jbe
stos
sub
cs
adc
inc
enter
add
pop
jecxz
cmpl
sbb
inc
pop
push
sub
and
rol
add
jbe
cmp
dec
add
jp
dec
xor
je
jae
shl
in
pop
jg
ja
cld
push
sub
orl
ljmp
andb
adc
js
movsl
dec
jo
fsqrt
mov
sbb
lcall
adc
pop
ds
or
pop
rcrb
mov
cld
sti
jnp
inc
hlt
jle
out
mov
fsubrp
ret
pop
stc
or
pushf
sbb
xchg
or
dec
cmp
jo
mov
sub
inc
add
sub
cli
aam
iret
push
sub
and
lock
xchg
cmp
call
sti
ljmp
dec
mov
push
jecxz
xchg
shrb
push
and
fisubrs
xorb
rclb
and
pop
mov
pop
frstor
out
add
call
push
hlt
lcall
lea
jle
test
or
mov
std
lock
ljmp
cmp
mov
cld
jg
mov
iret
imul
xchg
into
dec
xor
xchg
outsb
push
sbb
push
mov
fprem
sub
cmp
pop
jle
xchg
adc
mov
faddl
inc
mov
dec
addb
sub
pop
ljmp
or
insb
adc
loopne
pusha
inc
jg
dec
cmc
mov
pop
mov
mov
and
push
xor
enter
push
mov
lods
pushf
push
je
push
inc
mov
mov
cwtl
sbbl
mov
fwait
jge
push
adc
pushf
rcll
call
loope
jb
dec
aaa
fisubs
mov
mov
push
nop
xor
ds
mov
push
cwtl
sub
popa
sub
rol
sbb
orl
jp
aad
mov
loope
mov
dec
cld
outsl
push
loopne
mov
movsb
push
jno
cli
incl
loop
or
out
cltd
jb
lds
fcmovu
jp
cli
pop
push
cs
add
movsb
in
cmp
xchg
push
stos
dec
mov
in
repz
scas
mov
and
dec
cwtl
lock
sbb
jg
or
pop
jmp
je
int3
scas
push
inc
std
outsl
sbb
mov
xchg
and
cld
js
loope
test
inc
xor
cli
inc
ss
adc
out
ja
inc
dec
pop
cmp
ja
cmp
aam
jl
xchg
mov
and
lods
inc
rclb
fstps
je
dec
loope
jb
inc
dec
push
jge
inc
aaa
insb
loope
clc
fldl
xlat
movsl
xor
push
cwtl
ret
xchg
aas
add
scas
or
lock
pop
mov
in
push
dec
add
xor
outsl
or
inc
dec
outsl
push
add
xor
or
push
decl
dec
push
test
mov
xchg
outsb
fdivp
fcompl
fdivrs
out
test
pop
jno
adc
and
insb
add
jecxz
xchg
mov
ret
push
xor
inc
ret
push
cmp
inc
pop
addl
sub
mov
jg
insl
xlat
dec
adc
push
cli
ljmp
leave
push
dec
cld
addr16
sbb
mov
rorl
sub
add
and
ret
jg
lock
or
sahf
jle
adc
mov
xor
jg
dec
inc
push
lret
inc
xchg
mov
adc
stos
call
adc
sarl
sub
shr
mov
imul
and
dec
cwtl
mov
fcomip
adc
pop
adc
sub
dec
push
mov
push
das
andl
pop
push
sub
ss
in
xlat
int3
movsl
cmp
and
dec
test
lds
pop
pop
and
mov
pusha
cmp
xchg
pop
pop
clc
sbb
jecxz
idiv
aaa
sti
test
mov
wrmsr
int3
lcall
repnz
popf
pop
push
mov
dec
fiadds
xlat
pop
sahf
push
push
das
ljmp
pop
lret
mov
fmulp
xorb
mov
ss
aas
mov
mov
adc
test
jb
cmp
mov
jns
mov
rorb
into
push
mov
sub
jp
mov
push
insb
jae
das
xchg
or
xor
or
fildll
sub
rol
add
sub
xchg
jp
ljmpw
jg
mov
add
jbe
sbb
pop
ret
stos
in
push
cmc
pop
mov
adc
sbb
xor
cld
andl
jl
arpl
mov
and
pop
nop
xchg
adc
xchg
mov
mov
lods
inc
cld
test
push
fsubr
mov
jmp
cmpsl
arpl
mov
mov
pop
out
dec
sahf
fucomp
jp
cli
adc
inc
push
out
lods
dec
imul
imull
cmp
sarb
mov
sub
sbb
aad
test
xor
in
fistps
cli
sub
arpl
aas
add
js
les
xchg
negb
fnop
xor
push
sti
jo
mov
pop
insl
rcrb
fcomps
dec
popf
adc
jg
pusha
push
stos
dec
movsb
cmp
pop
sbb
mov
push
in
or
test
mov
mov
movsb
xor
inc
faddl
sub
shrl
adc
adc
add
jne
les
inc
pushl
dec
fsubl
pop
rolb
mov
push
outsl
mov
stc
jae
add
jl
adc
add
adc
xchg
testb
mov
loop
dec
cli
dec
xor
test
jecxz
sahf
pop
add
repz
mov
sbb
and
aaa
mov
loop
leave
fimull
add
mov
test
xor
outsb
and
pusha
dec
and
adc
iret
addr16
sarl
cmp
int3
stos
and
add
sbb
dec
inc
rcr
pop
jne
in
ja
rclb
xchg
sub
daa
nop
lret
push
add
stc
mov
mov
xor
pop
xchg
fwait
nop
push
push
call
popa
add
jg
mov
fidivrl
mov
or
push
cmp
push
hlt
loope
out
or
ret
testb
inc
sbb
mov
dec
mov
pop
leave
mov
aaa
ljmp
sbb
pop
mov
lea
cmp
call
fcmovnbe
nop
and
fwait
pushf
shlb
fisubrs
dec
inc
lret
aam
repnz
inc
mov
shrl
or
cmp
cli
subl
push
cwtl
pop
mov
inc
xorb
popf
dec
cwtl
xchg
xor
loop
shrl
outsl
mov
add
dec
or
negb
insb
jp
push
mov
cwtl
mov
movsl
popa
xor
add
test
fmuls
inc
lock
insb
xor
or
fsubl
rolb
test
hlt
mov
aam
xor
scas
cmp
popf
cli
daa
adc
test
adc
push
jmp
xlat
mov
dec
xchg
pop
mov
out
test
inc
sbb
push
mov
inc
dec
dec
lret
mov
xchg
inc
mov
mov
pusha
mov
js
aas
push
fldl
jb
jo
in
push
fs
fistps
mov
cmpsb
inc
push
and
iret
sbb
add
in
or
fisubrs
mov
adc
dec
cld
out
test
movsl
lret
arpl
dec
mov
and
cmp
stos
sub
push
scas
addr16
shl
stos
lcall
adc
inc
test
jmp
pusha
fs
dec
pop
lock
je
cmp
movsl
mov
xor
jbe
iret
xchg
add
pop
jo
cmp
pop
popa
pop
insl
call
xorb
inc
xor
mov
in
int
sub
pop
mov
push
das
jl
ss
add
lea
ss
ret
incl
and
rorb
je
pop
sub
sbb
dec
jge
add
in
add
scas
mov
andb
rcr
testb
or
in
add
mov
mov
incl
ret
add
cmp
ja
hlt
iret
rorb
loop
jmp
je
pop
std
lret
or
call
xchg
or
adc
test
adc
mov
mov
cs
call
mov
dec
int3
adc
ja
pop
sahf
push
push
and
ds
add
mov
dec
aam
or
shrb
arpl
xlat
test
xor
sub
aaa
jge
test
sbb
or
jbe
pop
adc
jo
roll
addl
scas
mov
gs
cmp
mov
lds
and
bnd
ret
adc
mov
subb
jl
lcall
pop
add
movsl
jge
ret
stc
leave
dec
jp
bound
push
rclb
pop
out
or
sub
push
mov
fwait
pop
cmc
or
mov
pop
cwtl
stos
jmp
pop
scas
add
shll
gs
cld
daa
fcompl
sub
xchg
repnz
cmp
andb
std
sbb
in
shll
sub
movsl
pop
test
sbb
or
arpl
loopne
cmp
ror
sbbl
icebp
xchg
mov
shll
ret
insl
mov
inc
clc
push
aam
in
sub
xor
jo,pt
lock
push
mov
pop
xchg
cmp
mov
and
add
lret
scas
jmp
or
pusha
bound
add
dec
lods
sbb
sbb
mov
sbb
loope
pop
fbstp
push
xor
push
movsb
dec
je
or
xor
outsl
stos
insl
sub
pop
pusha
hlt
ss
adc
pop
add
dec
xlat
shll
jge
push
and
cmpsl
dec
cmp
das
rclb
insb
push
mov
sbb
lret
pusha
adc
ret
mov
jbe
sbb
sub
dec
repnz
push
lods
cli
xor
dec
sbb
call
jne
inc
mov
fs
pop
fsubs
loope
dec
jecxz
pop
adc
test
xchg
mov
ljmp
mov
mov
push
std
scas
mov
mov
lock
idivb
pop
pusha
ror
out
xchg
cli
sub
mov
rolb
loopne
mov
xchg
ja
push
ss
nop
into
imul
add
aam
call
mov
sbb
xchg
push
sarl
dec
loopne
sahf
cwtl
fnstcw
inc
xor
outsl
add
subl
push
insl
inc
mov
push
pushw
loopne
mov
imul
pop
push
fstpl
push
and
lea
push
push
mov
add
inc
js
xchg
cwtl
add
fisttpl
dec
inc
push
push
bound
movsb
inc
jb
fsubl
rclb
rol
push
insb
les
add
jb
into
mov
xchg
dec
push
sahf
ds
push
bound
shlb
lods
mov
fidivrs
adc
or
dec
jne
push
ret
add
ljmp
mov
inc
jno
fld
nop
subb
cs
push
inc
popa
xor
outsl
sub
and
arpl
inc
dec
outsl
xchg
orb
mov
inc
dec
bound
ss
call
adc
dec
push
enter
ja
arpl
and
inc
cli
fstl
cltd
cmp
add
rorl
or
out
decl
outsb
ljmp
push
inc
scas
inc
push
sahf
ret
mov
add
dec
mov
jg
add
dec
mov
mov
sub
pop
dec
aas
jle
dec
dec
push
push
sub
cmp
pop
jb
lock
popa
cmp
stos
ficoms
sahf
pop
xchg
mov
rcrb
popl
nop
outsl
or
or
or
push
add
mov
add
fs
int
xchg
mov
gs
out
cmp
faddl
addr16
xchg
jp
into
jecxz
inc
cltd
lods
outsl
subl
add
cmp
sub
subb
pop
dec
dec
add
hlt
cltd
pop
mov
and
inc
js
sub
xorl
pop
add
aam
cmp
sarl
insl
adc
jo
inc
into
dec
scas
push
test
outsl
jae
lret
aaa
rolb
dec
jge
push
in
out
sub
insb
mov
push
sub
cmp
cmp
jmp
and
test
xchg
divl
fucom
jg
push
inc
add
add
jg
jecxz
jne
mov
inc
sbbl
lods
jg
adc
call
add
rclb
xor
lret
int3
add
das
add
cmpsb
icebp
clc
push
lret
jp
pushl
sbb
hlt
add
insl
sbb
xchg
pop
mov
outsl
lea
or
dec
sti
add
inc
mov
mov
push
xorl
cmpl
and
dec
pop
push
aad
test
mov
movsl
lock
mov
pusha
mov
mov
pop
mov
add
adc
sbb
xlat
dec
mov
cli
jge
stos
and
add
inc
movsl
in
std
mov
cmp
push
push
aaa
test
mov
lds
jle
fidivl
fcoml
mov
or
pop
mov
aam
cwtl
add
mov
adcb
or
xlat
ljmp
mov
imul
inc
pop
ja
iret
jmp
pop
js
pop
push
inc
das
xor
lock
mov
or
fstpt
and
outsl
mov
idivb
loope
adc
scas
add
lods
sbb
sti
imul
xor
mov
xchg
inc
fwait
icebp
ss
pmulhw
adc
jnp
lods
mov
sbb
push
lea
insl
subb
xchg
mov
js
test
cli
imul
js
sub
dec
mov
jbe
fdivrs
or
dec
es
je
mov
lret
scas
pop
sbb
jo
mov
push
sbb
or
jmp
or
jbe
adc
popa
cs
mov
jg
jle
adc
test
dec
jl
cmc
pop
push
pop
repnz
mov
mov
adc
cli
ret
icebp
test
cmp
fisttps
jo
outsl
clc
inc
cmp
sti
test
add
sub
pop
out
inc
rcll
mov
into
adc
xchg
dec
and
jmp
sub
cld
mov
ss
lret
mov
mov
cmpsl
lcall
inc
mov
ffreep
add
insb
mov
push
mov
xchg
mov
inc
fistl
push
jo
testb
adc
in
dec
mov
aam
je
mov
aad
je
mov
xchg
mov
push
fistps
xchg
push
repz
mov
pop
scas
mov
jo
xchg
rorb
cmp
int
cmc
subl
jne
shrb
pop
push
add
push
add
cmp
pop
add
and
dec
cmp
dec
xchg
ret
je
xchg
sbb
js
das
aad
sub
push
push
mov
addr16
lahf
mov
jae
stc
push
test
xorb
cmpsb
fiaddl
inc
push
mov
jo
mov
dec
and
lea
jecxz
mov
cmovg
cwtl
jae
cld
inc
aas
adc
and
mov
cmp
xlat
cmp
ljmp
cwtl
stos
xchg
dec
sub
dec
push
aad
fwait
js
push
lret
ds
leave
dec
jg
pop
ret
and
lods
sub
lds
or
adc
xor
cmp
inc
rol
aad
fmull
jp
je
xor
dec
arpl
dec
push
xchg
test
xor
lock
ss
clc
outsb
mov
scas
js
popa
mov
cmp
mov
sub
adc
lahf
test
mov
sbb
dec
cmp
push
mov
inc
push
or
cmpsb
pop
test
movsb
cmpsb
sub
mov
pushl
dec
adc
add
jecxz
jle
int3
and
in
dec
mov
xor
xchg
fcom
sbb
out
mov
dec
int3
js
xor
pop
cs
addb
adc
cli
push
xchg
scas
and
pop
rorb
add
sub
xchg
negb
sbb
movsb
adc
pop
cli
xchg
xorb
xor
je
xlat
xorb
add
rcr
cmp
sbb
bound
call
mov
push
push
or
sbb
leave
les
mov
mov
pop
mov
adc
mov
hlt
cmc
leave
dec
rcll
xor
out
pop
dec
adc
sbb
rolb
jecxz
mov
mov
ss
nop
cmp
pop
fdivr
add
js
lods
cwtl
mov
aad
mov
pop
pop
clts
inc
xchg
and
andl
xchg
add
ds
outsb
pop
mov
test
jmp
pop
pop
mov
mov
icebp
cmc
xchg
push
insb
push
pushf
loopne
dec
test
icebp
inc
sar
pop
aaa
jge
jmp
xor
jle
scas
inc
mov
scas
jbe
int3
pop
adc
adc
cs
jge
push
div
add
outsl
std
lahf
loope
sbb
adc
out
adc
pop
xchg
lods
cmp
out
inc
jbe
insw
push
mov
dec
mov
testl
mov
aaa
sub
data16
inc
jo
inc
inc
lret
js
mov
push
jae
and
outsl
xchg
pop
negl
dec
je
inc
and
inc
sub
add
ss
push
lcall
jbe
jbe
and
outsl
rol
insb
out
int
adc
scas
inc
sub
push
sub
xor
mov
je
mov
call
bound
add
push
fisubrl
add
out
xlat
add
sub
mov
or
test
mov
iret
rolb
stc
push
dec
xor
cwtl
push
inc
xor
mov
cs
clc
imul
sub
sub
rclb
lret
jnp
cli
push
mov
loop
test
sub
xor
outsb
insb
push
mov
outsb
pop
arpl
jo
inc
push
int3
das
pop
push
push
insl
insl
dec
cmp
push
insl
dec
jo
sbb
xchg
clc
add
outsl
dec
dec
movsb
nop
jo
fisubs
cli
adc
ss
fadd
inc
jae
icebp
mov
rclb
jne
pusha
popf
popa
dec
dec
xchg
mov
mov
out
jle
push
stos
pop
out
mov
iret
or
inc
loopne
push
data16
push
insb
mov
inc
push
dec
fmull
cmp
hlt
push
jbe
push
or
in
push
push
pop
dec
mov
push
xor
dec
dec
sbb
jne
push
and
adc
pusha
push
mov
fwait
shl
or
cmp
cld
es
ljmp
mov
mov
add
mov
mov
daa
add
out
lcall
dec
movl
fadds
incl
add
incb
pop
pop
xor
sbb
cs
add
call
inc
push
outsb
ret
insl
inc
jle
sbb
jmp
scas
subb
jb
mov
add
inc
movsb
es
pop
nopl
mov
rorb
iret
or
add
lret
jl
movsb
push
and
push
mov
cltd
sub
imul
fcompl
negl
aad
inc
je
sahf
or
mov
pop
push
or
pop
fiaddl
sbb
je
pop
lods
shrl
mov
or
imul
add
and
lods
inc
test
adc
lret
mov
repz
adc
mov
cld
xchg
pop
sub
push
xor
add
mov
mov
pop
push
les
call
ljmp
xor
call
mov
sbb
cld
add
std
pop
scas
sub
mov
stc
mov
pop
push
ret
sbb
mov
insl
cli
or
shr
maxps
test
loopne
imul
add
sub
loope
shll
stos
or
int3
sub
cmpsb
inc
mov
fbstp
icebp
dec
add
ret
paddd
pop
adcb
bound
cmp
push
fidivl
fs
add
sbb
hlt
adc
mov
leave
dec
pop
push
test
xor
jp
cmp
xchg
or
pusha
pop
ret
lods
ss
out
clc
stos
adcb
sub
jp
les
lock
or
in
and
andb
movsb
outsl
adc
jl
iret
and
dec
push
leave
or
into
fs
push
or
cwtl
jle
outsb
ret
sbb
inc
xor
aaa
sarb
adc
adc
or
jp
inc
dec
jae
hlt
sub
and
push
add
sbb
or
and
cmp
mov
call
addb
out
mov
out
fildl
in
out
ret
inc
adc
in
mov
pop
push
cmp
add
mov
xor
xor
pop
je
lea
push
cmp
mov
or
adc
xorb
jg
cmc
adc
sbb
sar
adc
data16
bound
fisttps
daa
je
mov
sbb
test
ss
dec
js
push
aam
mov
jl
fcompl
ds
sbb
and
mov
sub
ret
sbb
je
mov
mov
inc
std
das
lods
jb
arpl
mov
dec
dec
or
rorb
push
pop
loop
mov
jns
sbb
mov
add
mov
adc
mov
pop
jmp
fbstp
stos
mov
sahf
jl
add
push
fistpl
popf
pop
pop
xchg
add
lods
mov
and
mov
mov
adc
dec
or
sbb
mov
popa
dec
sub
int3
mov
cmp
loop
mov
jge
adc
sub
shrb
and
pop
push
jp
arpl
popl
mov
or
sbb
push
ss
cmp
add
jg
test
jo
inc
in
stos
mov
leave
fiaddl
nop
pop
imul
ljmp
xor
sbb
lahf
aam
or
shlb
push
movsl
and
push
dec
fcmovnu
and
jge
mov
xchg
inc
push
arpl
push
icebp
sbb
mov
push
sahf
add
xchg
shl
shrb
lahf
dec
push
jnp
out
cmc
call
insl
cmp
dec
jg
mov
in
push
mov
inc
dec
es
mov
loopne
add
cwtl
jae
lahf
jmp
data16
inc
ficomps
mov
cmp
jle
pop
push
push
lret
pop
aad
inc
push
mov
loop
push
mov
in
shr
pop
mov
inc
insb
push
sbb
and
test
inc
ficomps
mov
sti
sbb
pop
add
sub
xchg
mov
dec
out
push
sub
ss
cmp
into
jp
fnsave
popf
addb
add
imul
pop
js
ljmp
outsb
push
push
mov
cmp
cld
ljmp
mov
sar
dec
subb
push
jmp
outsl
jmp
cmc
and
and
imul
xchg
fs
filds
adc
pop
jno
mov
adc
sub
popf
movsb
mov
mov
mov
or
inc
and
rolb
add
decl
lret
or
daa
add
mov
inc
test
shl
jne
sbb
mov
int
dec
adc
dec
adc
aam
cltd
mov
lock
inc
arpl
lock
cmp
sbb
cli
js
push
push
mov
dec
out
cmpsl
pop
adc
or
mov
aam
inc
sub
cmc
notb
shl
or
in
fcompl
es
mov
add
sbb
push
push
cld
daa
push
xor
push
fsubs
and
sub
stos
orl
jl
js
cmpsb
sub
arpl
iret
call
push
es
ljmp
fwait
pushl
jmp
dec
movb
pop
xor
cmp
loopne
cmpsb
lds
xchg
mov
call
jmp
xchg
testl
clc
shrl
insb
or
inc
les
mov
jecxz
or
mov
outsb
push
and
adc
mov
lea
ss
imul
and
mov
push
loope
icebp
stos
lds
pop
or
pop
sub
leave
aad
mov
mov
aaa
push
rolw
rorb
mov
jle
add
jne
ss
das
out
cmp
mov
cs
mov
push
and
adc
and
dec
scas
mov
ror
js
push
pusha
std
jno
sub
add
or
mov
sub
xchg
jo
push
cmp
pop
pop
jnp
pop
and
adc
mov
pop
mov
mov
ret
mov
movsl
scas
jle
pop
sub
icebp
push
ss
jne
in
movsb
lds
or
std
push
adc
std
int3
adc
cmp
mov
inc
out
dec
clc
js
out
fsubrp
outsb
test
fistpll
fs
jae
xchg
sub
loope
mov
cmp
es
mov
mov
push
xlat
sub
mov
push
push
dec
rclb
and
call
cli
jg
cmc
push
popa
push
dec
sbb
inc
dec
mov
inc
add
inc
fs
cmp
xlat
fidivs
bound
cmp
fs
push
out
dec
pop
push
dec
dec
lock
push
pop
clc
lea
push
push
or
and
inc
bound
mov
divl
jb
outsl
push
repz
cld
scas
lret
inc
mov
dec
dec
pop
push
ss
out
lcall
int
test
dec
xor
out
inc
inc
outsb
pop
jnp
test
sahf
xor
adc
jl
pop
ret
or
push
add
inc
negb
shll
inc
loop
adc
add
ss
stc
cld
jg
inc
cli
push
dec
icebp
ror
dec
stos
jae
repz
loop
adc
popf
arpl
pusha
cmp
aaa
cld
movsb
dec
in
dec
daa
stc
aad
xchg
pop
orb
sbb
and
push
add
cwtl
sbb
pop
add
ljmp
fwait
lock
das
pop
jb
pop
xlat
out
out
aam
hlt
xor
jge
dec
lret
mov
test
scas
cmp
pop
inc
mov
testb
pop
andl
out
add
add
mov
lcall
out
push
push
or
inc
repnz
das
mov
shrb
clc
push
fs
cltd
xlat
or
push
or
push
rorb
aas
rcrb
xchg
ja
xchg
pop
shlb
jmp
push
cmpsl
cmpsb
out
dec
add
scas
push
adc
inc
xor
mov
scas
es
dec
mov
test
mov
mov
cmp
mov
mov
jg
pop
lods
cmp
std
aad
push
add
pop
sub
mov
jns
bound
pop
adc
and
cmp
out
cli
jne
sti
add
add
xlat
xchg
mov
push
cmpsl
in
xchg
dec
mov
loope
sbb
and
push
jbe,pn
rcrb
insb
adc
and
sahf
mov
mov
mov
inc
lds
inc
sbb
cmpsb
adc
dec
lods
out
xchg
jbe
add
jl
fwait
or
inc
cmp
pop
jl
aad
out
cli
add
sub
imul
sub
add
sub
mov
push
addr16
adc
xchg
stos
mov
mov
imul
mov
ficoml
add
test
test
cmc
sbb
addr16
stos
fists
xchg
or
movsb
fmuls
out
sub
mov
dec
push
cmp
aaa
addb
add
clc
and
daa
sbb
mov
add
pop
clc
rorl
push
mov
subb
push
xlat
incl
mov
test
or
aad
incb
xor
push
push
lock
or
popa
add
sub
adc
in
push
lret
add
xchg
or
ds
mov
mov
cmp
movsl
mov
lock
rolb
mov
adc
mov
mov
sar
xlat
testb
loop
sahf
pushl
insb
and
push
inc
and
adc
idivl
push
dec
jge
jg
lcall
dec
and
lock
cmpsb
or
fsub
cmpsb
mov
aas
or
sub
push
inc
pop
sbb
test
in
xor
cld
dec
cmp
mov
xor
cli
jg
int3
subb
aam
and
pop
mov
jecxz
into
push
push
inc
sti
insl
or
clc
adc
pop
sbb
push
insb
aad
jmp
or
mov
xor
test
jne
jg
into
or
adc
dec
jae
ljmp
pop
icebp
mov
adc
add
aas
mov
stos
lods
dec
or
es
in
lods
mov
bound
sub
cltd
icebp
ljmp
and
ss
dec
cld
sbb
mov
sarl
mov
gs
outsl
push
xchg
repnz
punpcklbw
xchg
nop
mov
cmc
xchg
inc
push
lret
and
add
orl
nop
mov
and
sbb
call
xor
dec
cmc
aaa
mov
jnp
xor
lret
xor
mov
or
mov
push
pop
loope
shll
push
loop
fidivrs
js
jnp
cmp
mov
loopne
imul
mov
ret
xor
inc
movsl
pop
fcomip
into
fiadds
xor
mov
or
pop
aam
ljmp
cli
mov
scas
or
mov
lock
dec
cmp
push
cmp
mov
loope
add
incl
pop
jmp
adc
mov
in
rolb
dec
fisttps
cmpsb
mov
jp
add
shl
out
loopne
lcall
and
and
je
xlat
sbb
adc
aaa
mov
addb
mov
inc
sub
jle
sahf
roll
pop
pop
test
mov
fadds
inc
jl
add
pop
pop
sarb
into
test
daa
add
ds
mov
ret
hlt
pop
adc
mov
nop
icebp
or
or
jmp
inc
fidivrs
fisttpl
sbb
mov
pop
xchg
hlt
fbstp
adc
les
cmpsl
cmp
or
jg
pop
add
or
push
xchg
sub
sti
es
sub
cmp
xor
nop
in
xchg
icebp
push
mov
sbb
mov
lock
jg
adc
inc
jns
bound
movsb
adc
out
xor
outsl
or
lret
and
jmp
nop
cld
out
inc
popa
test
add
dec
xor
fists
dec
les
clc
jo
mov
and
test
mov
mov
mov
ljmp
or
add
out
mov
dec
dec
pusha
aaa
pop
fmuls
xchg
sti
xor
hlt
es
xchg
aaa
pop
aaa
or
aaa
rclb
pop
add
orb
rcrb
sub
push
pop
and
imul
jecxz
loopne
leave
cmp
cwtl
arpl
dec
shll
cmp
cltd
ret
and
sbb
adc
jo
dec
and
inc
js
insb
stos
or
or
scas
xchg
jecxz
fisubrs
adc
sbbb
lock
je
in
outsl
push
inc
inc
lcall
add
test
loop
addb
xchg
inc
add
gs
jp
mov
lret
loopne
and
mov
enter
lock
cmp
xor
leave
test
xchg
lret
mov
adc
mov
daa
shl
incb
cmpsb
jecxz
sub
lahf
ficomps
mov
jo
mov
cmpsl
pop
lods
jns
adc
xchg
je
fstpl
mov
push
jmp
int3
push
pop
push
scas
jb
ror
or
int3
jbe
mov
push
or
es
mov
clc
jecxz
pop
rolb
adc
call
int
mov
or
insb
push
pop
movsb
lea
inc
mov
cmp
testl
icebp
pop
clc
test
jae
jge
mov
test
mov
xchg
jp
incb
mov
loope
loope
and
mov
addr16
mov
ss
pop
dec
ljmp
cs
gs
jp
lock
shlb
sbb
adc
jbe
push
je
fwait
mov
sub
cmpl
sar
jb
lcall
mov
cmp
popa
sub
add
notb
pop
xchg
mov
inc
xchg
je
aaa
pop
and
and
mov
test
xchg
inc
push
xor
adc
inc
pushf
into
mov
sub
pushl
ss
fs
pop
inc
adc
ljmp
loopne
fwait
or
xor
aam
adcb
iret
stos
add
mov
test
rcr
rcr
and
push
cmp
pop
xor
in
push
out
adc
lock
cmp
sub
decl
or
dec
adc
inc
addr16
mov
push
out
sbb
dec
data16
mov
scas
xchg
and
popa
aaa
js
adc
test
popa
cli
bound
xchg
fidivrs
jo
push
data16
outsb
jecxz
pop
jmp
push
rorb
add
or
or
jns
jno
jl
jecxz
cmpsb
popl
ja
add
decl
jne
add
adc
movsb
popa
dec
mov
and
popa
xor
loopne
dec
nop
loopne
lock
pushf
ljmp
push
push
fsubp
xchg
int
pop
insl
mov
mov
lret
test
inc
jb
or
outsl
push
fisttps
xchg
fnstenv
js
test
pop
inc
test
hlt
imul
insl
out
aaa
bound
divl
inc
loop
imul
fisubrs
fs
jns
inc
add
lods
dec
dec
hlt
fisttps
mov
push
cmp
push
or
aad
fwait
insb
mov
sbb
sbb
dec
outsl
or
sbb
mull
sub
rorb
mov
loop
loop
mov
mov
push
ja
and
loop
mov
xchg
push
cld
fsub
notl
into
and
dec
xor
inc
je
xchg
lcall
lods
push
mov
dec
sbb
mov
rcrb
movsb
nop
jo
test
fidivl
mov
scas
mov
in
inc
sarb
rorl
stc
pop
xchg
fs
incl
or
sahf
jge
xchg
add
adc
testb
inc
mov
cwtl
leave
incl
or
call
nop
jbe
in
ljmp
or
mov
pop
cmc
add
ds
jecxz
insb
sub
and
scas
mov
or
add
push
xor
nop
xor
fistps
cmpb
xchg
or
push
and
mov
inc
mov
aad
push
and
repnz
xchg
mov
arpl
inc
jg
subb
outsb
out
push
cmp
je
cld
xor
pop
pop
sub
jl
jns
int
add
and
es
fimull
mov
les
insb
shl
and
or
and
or
shlb
loop
sarb
mov
pop
in
xor
mov
lock
ds
cmpsb
out
xchg
push
push
les
loope
nop
sub
mov
pop
dec
jle
jl
lret
insl
lcall
jne
jecxz
mov
pusha
insl
cmp
sbb
jo
jg
hlt
pop
adcb
fwait
dec
push
and
or
popf
rclb
test
jg
jns
mov
push
das
xor
fidivrs
mov
lcall
sub
icebp
xchg
ret
je
push
lods
pushf
add
mov
pop
jo
cld
mov
adc
test
jmp
jbe
push
and
or
cltd
scas
jnp
jno
and
mov
xor
xchg
sti
icebp
mov
hlt
aad
xchg
sub
movl
movsb
incb
pop
inc
popf
sbb
mov
adc
xchg
push
test
inc
cs
fldt
add
sub
mov
mov
sti
clc
fidivrs
jb
mov
movsb
cmc
enter
sar
push
dec
or
xchg
and
or
test
shll
dec
lret
pusha
cmp
insb
int
pop
fadds
xchg
int3
test
jg
inc
cmp
xor
enter
dec
out
sbb
pop
call
jo
lock
orb
and
adc
add
inc
inc
push
inc
mov
ret
outsb
add
jle
scas
imul
pusha
loopne
je
pusha
sbb
and
xor
mov
imul
loop
sbb
pop
inc
insl
xchg
jmp
pop
add
movsl
inc
sub
add
jo
jns
or
mov
sbb
xchg
dec
lock
cld
into
pop
ljmp
mov
mov
aas
add
notl
ja
mov
fidivl
push
leave
xor
xchg
push
and
shlb
pop
mov
pop
or
aas
loop
cmp
stos
add
adc
loope
hlt
pushf
push
sti
mov
ret
dec
es
xor
mov
push
sub
mov
push
push
or
mov
lock
adc
jecxz
push
out
pusha
sarl
inc
dec
lahf
repnz
cmp
outsb
mov
lock
add
test
push
push
add
jmp
mov
andb
adc
movsb
dec
adc
or
das
ret
dec
jae
sbb
inc
pop
pop
cmp
inc
jl
push
push
roll
lcall
mov
ss
popf
fs
add
adcb
add
test
les
and
mov
sbb
adc
pop
cli
fldcw
adc
push
shll
push
or
xor
lret
loop
lahf
dec
js
sub
mov
mov
add
pop
stos
clc
pop
inc
pop
cvtps2pi
das
loop
and
addr16
shrl
outsb
lock
notb
push
lret
pop
rolb
pop
sar
mov
cmc
jne
pushf
daa
cmp
mov
mov
das
add
jnp
ret
sarl
cmp
dec
and
adc
fiadds
fcompl
or
lods
push
mov
bound
stc
cmpl
les
mov
pop
mov
incl
or
mov
xchg
dec
inc
out
cld
fwait
ret
jl
dec
arpl
jns
pop
sbb
pop
fadds
insb
xchg
mov
adc
cmc
inc
xor
pusha
adc
loop
mov
fs
xchg
push
mov
shl
sti
test
pop
jo
xchg
imul
ror
jl
hlt
sub
fstl
and
jp
pop
dec
mov
das
or
hlt
lea
mov
push
nop
xor
mov
push
mov
shll
inc
mov
negb
mov
insl
std
inc
fmuls
push
fdivr
jnp
inc
bound
mov
subl
push
jl
stos
push
test
outsb
loope
pop
xchg
orb
lcall
jle
mov
roll
sar
mov
mov
mov
sbb
in
pushf
dec
push
insl
sbb
popf
stos
mov
mov
aad
mov
or
mov
xchg
mov
mov
shrb
in
xor
movsb
cli
loope
jo
stos
popa
xchg
cmp
jo
test
sarb
inc
add
adc
cmp
jns
or
lods
cli
in
mov
pop
mov
andl
test
push
cmp
sarl
fbld
xor
clc
and
inc
loope
mov
je
cli
xchg
sub
int3
cmc
insb
adc
or
shlb
sbb
pop
add
das
or
jne
add
mov
clc
and
sbb
jle
addl
mov
mov
lcall
cmp
lahf
ret
add
push
add
imul
xor
les
fstpt
pusha
mov
aas
jnp
shlb
popa
xchg
add
mov
cld
cmpb
in
cmp
dec
inc
data16
andb
adc
inc
pop
dec
inc
test
push
xor
pop
gs
icebp
sub
cmp
adc
fs
xchg
enter
add
negl
or
inc
push
push
pop
pop
loop
adc
arpl
ficoms
cmp
sub
or
fnstsw
bnd
bound
cmp
loope
pop
mov
mov
pop
mov
and
loop
xchg
push
loopne
mov
pop
fsts
cmp
pop
jbe
inc
aad
call
xor
lret
or
mov
cltd
das
xlat
push
imul
push
jmp
jne
ja
shll
dec
sub
ss
in
ss
insl
pop
xchg
adc
loop
dec
xor
fiadds
dec
jp
adc
repz
xchg
test
lods
aam
jle
or
testb
bound
insl
inc
inc
dec
loope
push
test
push
imul
inc
out
jmp
push
sub
insb
inc
inc
enter
lods
in
shll
roll
lret
push
std
lock
int3
aam
gs
outsb
pop
loopne
inc
push
cmp
jnp
or
shrl
dec
bound
push
jno
dec
outsb
xlat
fisubrl
adc
cmp
cs
lea
push
ss
xor
and
je
cld
dec
cld
pop
xor
mov
add
in
inc
daa
push
addb
scas
inc
sub
outsb
push
inc
loopne
adc
aaa
outsb
pop
push
pop
ret
imul
insl
jp
shl
addr16
jae
sbb
pop
js
pop
insl
xchg
sbb
or
out
dec
push
jb
pusha
call
xchg
jg
test
outsl
inc
ficomps
jnp
stos
outsb
dec
jns
jge
push
sbb
int3
add
add
or
cmp
rorb
push
jbe
cltd
les
mov
arpl
movsl
push
add
cmp
xchg
cltd
jmp
adc
sti
and
inc
add
mov
or
int3
pop
es
dec
clc
dec
addr16
xchg
in
inc
ja
add
add
adc
cmp
sbb
arpl
cwtl
mov
es
es
clc
aas
ret
mov
fiaddl
inc
dec
or
iret
and
cltd
inc
jg
aaa
push
std
jg
popa
subb
lcall
mov
mov
push
icebp
nop
push
fwait
mov
repnz
aas
cmp
in
xchg
jle
xor
mulb
pop
enter
mov
sub
sti
jge
stos
cltd
sbb
push
cmpsb
pop
adc
add
je
inc
dec
xchg
push
lret
xchg
out
cli
sbb
fs
rolb
loop
mov
inc
test
mov
fs
sbb
lret
out
adc
movsl
cmpsb
inc
jp
sbb
and
adcb
pop
lock
inc
cmp
jp
or
rorb
add
push
mov
in
pop
cmc
cmp
xchg
push
xchg
fistl
mov
stc
pop
pop
incl
in
pop
test
movb
inc
sbb
sub
add
imul
push
rcrb
dec
daa
add
inc
mov
and
jbe
and
rorl
pop
decl
xchg
pop
add
inc
test
and
xor
add
sbb
adc
adcl
or
aam
rclb
add
push
cli
xchg
mov
and
push
leave
enter
pop
mov
or
jecxz
pushl
sbb
add
nop
add
pushl
fidivl
pop
mov
adcl
arpl
stc
mov
fsubs
jne
enter
incl
cld
add
cmpl
in
out
inc
push
fstps
aaa
shl
das
sbb
fbstp
ficomps
test
adc
fcoml
cmp
aaa
std
das
clc
push
ja
mov
test
lods
add
mov
ret
xchg
lock
pop
aam
pop
pop
dec
push
push
std
fwait
stos
jno
mov
or
pop
pop
pusha
sbb
add
out
add
jg
test
mov
loopne
popf
cmovae
jp
mov
sbb
mov
and
mov
cli
mov
add
mov
add
or
les
push
ret
je
xchg
into
sbb
out
cld
inc
daa
subb
mov
cld
push
out
pop
mov
stos
mov
xchg
pop
imulb
inc
rolb
out
push
fidivl
adc
push
xchg
push
or
fistps
adc
notl
jae
sub
faddp
add
pop
or
je
clc
fstl
push
push
cmpb
sbb
push
hlt
js
dec
jle
cmp
and
pop
outsb
pop
push
repnz
mov
add
adc
and
fdivrl
cmc
sbb
sub
mov
jmp
inc
sub
fsubrs
nop
mov
sub
jmp
decl
adc
inc
test
xchg
cld
jmp
or
aad
add
test
dec
sbb
xor
and
jo
loop
fadds
sbb
in
cmp
or
mov
sub
aaa
and
orb
sub
pand
int
sub
addr16
scas
lock
mov
inc
loope
lret
aad
out
cmp
icebp
das
add
and
cmpsb
sbb
push
cmp
lret
mov
sub
inc
mov
inc
es
daa
and
filds
test
enter
cwtl
cltd
imull
mov
out
nop
jo
jb
sub
xchg
add
inc
xchg
sbb
xchg
mov
xchg
xlat
add
les
adc
jle
nop
sbb
call
dec
and
cld
jecxz
cli
decb
mov
orl
and
and
and
shll
test
jl
cmp
mov
xchg
clc
in
mov
xchg
lret
cmp
ret
dec
jg
decb
mov
addl
testb
cmp
sub
inc
imul
test
sub
dec
mov
xorb
incl
push
mov
or
enter
pop
sti
push
add
test
jle
adc
mov
sbb
cli
xor
mov
ds
idiv
aad
jecxz
push
jo
lcall
sub
adc
ret
lods
prefetch
shll
jl
repz
mov
add
daa
decl
sbb
adc
sub
push
sbb
jne
call
movsl
pop
fs
mov
insl
je
dec
arpl
in
mov
mov
or
mov
jno
popf
jp
rcrb
adc
mov
dec
cmpsl
push
and
popf
stos
mov
test
call
and
or
js
rcpps
mov
jne
mov
push
mov
lods
mov
cmp
mov
push
jne
repnz
and
nop
ret
fadd
push
jp
inc
jp,pn
mov
enter
ret
jo
loopne
in
mov
lea
push
dec
mov
mov
bound
adc
mov
push
mov
fs
add
inc
dec
or
in
add
test
pusha
adc
cmp
cli
dec
imul
out
push
add
add
sbbl
stos
xor
cmc
daa
and
xchg
xchg
lahf
pop
hlt
clc
and
lahf
mov
rclb
push
dec
sbb
or
stos
call
movsb
leave
sbb
cmp
mov
cld
mov
lret
jmp
inc
or
icebp
lock
nop
mov
pop
popa
cmp
mov
arpl
mov
dec
adcl
xchg
scas
xor
mov
sbb
jno
xchg
scas
xor
pop
push
jg
mov
push
jle
int3
andl
jae
adc
adc
xorl
shlb
cmp
incl
imul
push
outsb
adc
dec
pop
call
push
inc
out
stos
clc
addl
dec
out
mov
icebp
inc
inc
icebp
fiadds
or
xlat
dec
popf
and
cli
jg
mov
adc
push
sbb
ja
cmpsb
sarl
push
js
fmul
jne
pop
les
pushf
jecxz
je
or
mov
cmp
filds
pop
into
js
xchg
jo
or
adc
insb
add
pop
xor
pop
ljmp
sahf
and
lret
jmp
les
adc
stos
adcl
add
pop
jmp
sti
cltd
leave
imul
aaa
inc
lock
mov
lods
sbb
add
sti
pop
add
aam
inc
mov
pop
push
icebp
jg
fcompl
add
shrb
fstpl
dec
loopne
in
enter
add
jecxz
fisubl
mov
jbe
jmp
test
pop
lock
cli
cli
jl
push
mov
mov
or
push
and
xchg
mov
es
and
rolb
sahf
cmp
jg
mov
clc
fisttpl
js
xor
clc
add
xchg
mov
in
loope
mov
popf
jp
ret
data16
xchg
sbb
loopne
cmp
insb
and
push
fcmovbe
fs
hlt
aam
stos
lds
pop
movsl
inc
jb
js
sbb
push
inc
hlt
andl
sub
das
hlt
aas
gs
sbb
mov
cli
mov
movsb
cmp
loope
mov
ror
dec
lods
sub
mov
sub
call
adc
sub
or
lahf
add
out
pop
ljmp
in
and
pushf
xchg
test
jb
dec
push
mov
aad
push
shll
loop
out
sbb
cmc
fs
mov
popa
dec
dec
popf
loop
out
testl
push
cmc
sub
lea
adc
pop
pop
mov
js
mov
data16
ja
mov
xchg
out
aam
cmp
in
mov
sbb
test
mov
xor
hlt
fcomip
arpl
xor
xor
add
xchg
mov
pop
add
mov
pop
sbb
dec
sbb
add
ljmp
push
push
dec
inc
loop
xchg
pop
ja
lret
mov
or
inc
dec
xor
xchg
js
jle
add
dec
jl
sbb
jbe
xchg
out
adc
inc
mov
jge
mov
mov
outsb
dec
push
xor
dec
jo
loopne
sub
lods
ffreep
push
pop
imul
shrl
inc
loop
outsl
shlb
stos
pop
pop
gs
and
cmp
aas
movb
pop
jno
clc
pop
push
adc
add
adc
and
mov
decl
mov
xchg
leave
outsb
shll
push
loope
inc
pop
lock
movsb
mov
inc
sahf
xchg
out
jno
and
mov
adc
popa
mov
jl
mov
dec
ljmp
lahf
jae,pn
mov
push
add
and
push
in
call
ret
stos
sbbb
inc
lcall
sti
add
clc
test
les
sbb
push
adc
mov
mov
jle
das
fiadds
dec
mov
insb
aam
insl
push
jo
pop
lcall
vmovaps
dec
add
js
neg
aaa
push
mov
loop
cmc
mov
test
je
xor
push
mov
popf
pop
mov
loopne
jae
adc
ret
decl
jns
push
punpckhwd
push
lret
jg
mov
adc
shll
jae
cmp
ffree
fcmovbe
xor
dec
push
out
clc
mov
pop
mov
xchg
jp
stos
mov
insl
shlb
rolb
adc
fwait
mov
bound
xor
es
jmp
sbb
dec
outsl
in
mov
xor
inc
insl
cli
cmpsl
or
dec
lahf
repnz
ljmp
ds
jo
pop
or
loop
loop
in
int
xchg
ljmp
loopne
sahf
sub
lock
std
jbe
mov
cmp
aas
clc
pop
push
push
aam
dec
outsb
inc
popf
pushf
fdivp
mov
movsl
mov
int
rclb
or
ja
lds
or
add
subl
data16
pandn
add
pop
movsb
fdivp
add
jns
test
mov
sub
pop
repz
add
dec
pop
inc
jl
loope
in
jnp
push
test
loopne
mov
cmc
scas
hlt
loope
shl
cli
adc
bound
add
js
andl
add
arpl
pushf
movsl
int
fs
mov
mov
decl
add
ds
lock
cli
sbb
sbb
jbe
sar
lods
push
aas
test
lcall
movsl
rcll
aam
mov
gs
nop
int3
cld
adc
inc
and
sbb
mov
mov
aad
rcll
aaa
or
mov
xchg
lods
test
les
aam
bound
cmp
and
sub
lods
rorb
sbb
dec
inc
movsl
daa
mov
pop
mov
bound
ss
push
or
add
clc
pop
and
leave
fidivs
pop
or
xchg
mov
mov
or
xchg
sbb
mov
push
test
rclb
faddl
cwtl
add
mov
and
add
and
lret
nop
mov
idivl
add
add
fstpt
mov
mov
popa
insb
inc
push
mov
sahf
aad
fdiv
daa
lcall
jecxz
int
addr16
out
mov
clc
in
xchg
sbb
arpl
or
stos
jle
and
aaa
adc
pop
testl
dec
push
leave
test
adc
pop
les
mov
mov
pop
mov
mov
sbb
dec
pop
mov
sahf
lds
adc
inc
push
jo
add
arpl
or
ljmp
aam
xchg
insb
adc
test
pop
jl
xorl
incb
lret
dec
add
sbb
nop
fstps
clc
jecxz
ljmp
xor
adc
iret
add
add
mov
sbb
mov
or
lods
jge
and
shrb
mov
clc
push
rorb
and
add
test
ret
sar
es
fisubs
jae
add
shrb
outsb
xor
test
rorl
int3
mov
cld
in
sub
nop
data16
jo
insb
stos
pop
ret
adc
fistpl
test
shrb
jno
mov
fstl
fiaddl
xchg
dec
pop
lcall
add
push
mov
push
fs
sahf
pop
adc
lcall
mov
or
pop
jnp
sub
inc
std
pop
mov
mov
jge
frstor
xor
cmp
lods
lods
mov
lea
jne
mov
or
and
mov
or
mov
xchg
adc
int3
xchg
arpl
mov
inc
sbb
outsb
or
adc
jl
pushl
pop
les
mov
sbb
adc
mov
sub
push
mov
js
adc
pop
mov
mov
in
pop
cli
lahf
inc
cld
sahf
xchg
loopne
imul
lods
in
push
inc
sub
mov
or
jbe
into
xchg
ret
xor
popa
xchg
inc
clc
jmp
pop
xchg
push
sbbl
push
mov
je
xchg
pop
push
sar
xchg
jne
push
xor
cwtl
xchg
sarb
mov
mov
faddl
mov
int3
sub
pop
imul
mov
pop
and
sub
and
jbe
add
mov
arpl
loopne
add
mov
test
sub
mov
push
leave
dec
filds
cwtl
imul
jecxz
fwait
test
push
aam
dec
adc
out
mov
jge
jbe
cli
filds
lods
pop
cs
add
call
nop
sahf
sbb
xor
test
cmpsl
or
adc
cmp
xorl
ljmp
aas
mov
popf
dec
xor
aad
and
jmp
std
arpl
lds
sbbl
adc
fwait
and
jge
push
pop
shrb
call
xor
cmpb
cmp
cmp
and
xchg
xor
hlt
ds
adc
ret
and
pushl
repnz
fdivs
mov
adc
insl
sbb
xor
jbe
lods
stos
mov
dec
in
sub
lock
xchg
sti
sbb
sbb
rolb
pop
fisttpll
test
les
rorb
mov
add
bound
lahf
lcall
cli
aad
dec
push
adc
add
rolb
cmpsb
cmp
hlt
fisttps
test
jo
sarl
adc
ss
or
call
sbb
lret
xor
out
shl
push
inc
mov
mov
mov
fsubl
sub
in
xor
sub
pop
jnp
sub
pop
jle
inc
lock
repz
pusha
les
inc
aam
pop
xchg
icebp
add
data16
out
and
add
test
push
dec
push
aaa
and
mov
xchg
push
dec
pusha
imull
test
loopne
jnp
jle
pop
sarb
push
jae
pop
popf
test
test
add
in
mov
sti
es
add
test
mov
pop
shl
lods
adc
xor
lcall
data16
and
outsl
push
or
mov
cmp
cmp
adcb
adc
xor
ret
call
shrb
mov
in
bound
mov
fldcw
inc
out
or
gs
cmp
bound
dec
rcr
cli
inc
fdivrs
jne
adc
insb
push
dec
mov
sub
adc
data16
add
je
add
cwtl
outsb
jb
mov
adc
xchg
dec
jbe
adc
orb
or
add
xchg
aas
add
push
pop
or
cmp
inc
popf
or
cmp
add
into
outsl
sub
push
mov
fiaddl
lods
and
pop
or
in
andb
pop
jecxz
push
mov
outsl
xchg
cmp
push
cmp
addr16
aaa
rorl
cmp
dec
hlt
in
or
push
mov
push
sarb
dec
cmp
cmpsl
add
push
subb
arpl
rclb
jge
in
add
testb
out
and
xchg
mov
sub
dec
xor
add
fs
mov
rolb
push
or
inc
xor
shll
fmull
lds
or
sbbb
jbe
sub
xor
insb
xchg
sub
adc
inc
inc
dec
dec
inc
jne
mov
jb
or
sub
or
sub
add
add
mov
test
mov
pop
inc
sarl
push
fidivl
pusha
xchg
mov
setl
dec
dec
mov
dec
sub
sahf
sbb
cld
sbb
push
mov
mov
mov
mov
sahf
mov
daa
push
jae
fsubrs
or
cmp
pop
rcr
xor
lret
mov
cmpsl
or
mov
mov
adc
lret
aaa
es
and
or
mov
adc
mov
cmp
lock
mov
scas
cs
adc
mov
sbb
or
ds
inc
subb
jae
jo
mov
lcall
clc
inc
test
push
push
mov
sbb
dec
loop
jmp
and
js
ror
cli
sub
and
cmp
movb
out
jecxz
cld
jmp
sbb
divb
adc
cltd
hlt
inc
jb
js
push
sub
ss
ret
movsb
jge
or
loopne
dec
mov
adcb
xchg
repnz
add
fwait
js
sbb
push
or
es
mov
push
js
add
out
jecxz
pop
or
jp
fwait
icebp
outsb
mov
sarb
cld
aad
lods
inc
std
gs
dec
sub
jg
in
mov
mov
add
imul
xor
push
pop
fidivrs
lds
cmc
and
incl
stos
add
ret
shlb
adc
sbb
mov
add
cs
ljmp
hlt
inc
add
ljmp
mov
addr16
inc
sub
xchg
je
aaa
test
shl
xchg
jne
mov
rorl
add
cmp
mov
cli
pushf
fdivrs
pop
or
test
ret
and
pusha
mov
stc
js
adc
cwtl
sbb
icebp
and
jno
adc
scas
or
mov
daa
insb
mov
call
mov
dec
fucom
in
cmp
push
cltd
xor
pop
adc
or
ret
inc
pause
mov
pop
mov
mov
shlb
std
and
rorb
jle
loopne
dec
call
fchs
lret
sbb
add
sbb
jle
negb
es
jl
mov
jae
adc
inc
mov
xchg
xor
jl
and
pushf
push
cwtl
test
pop
xchg
stc
repnz
jge
fdivrs
sarl
lahf
paddsb
pop
jbe
sbb
add
scas
outsb
nop
filds
push
or
lds
test
popa
loope
mov
in
or
popa
aam
movl
sub
stos
lock
rcl
dec
jl
outsl
pop
int
pusha
pop
ret
xchg
out
dec
psubd
std
sub
test
sub
out
push
insl
xor
pop
aaa
sbb
jg
sbb
fldl
roll
cmpl
jo
mov
in
jbe
cmp
inc
xlat
add
out
popa
and
add
or
call
nop
pushf
mov
mov
xchg
pop
clc
shrl
sub
stos
and
mov
jmp
jae
scas
pop
inc
adc
or
insl
xor
jle
fwait
rorb
push
jb
mov
xchg
cmpsb
rolb
ret
test
or
bound
pop
std
push
xchg
xchg
pop
jp
movsb
mov
jmp
fimuls
inc
mov
jp
movsb
xor
xorl
mov
add
leave
int
sti
test
inc
mov
popa
xor
xor
stc
nop
push
test
sub
les
hlt
dec
scas
cmp
pushl
or
adc
in
inc
pushf
test
enter
inc
mov
add
icebp
aad
int
xchg
fwait
movsl
cltd
movsl
mov
callw
outsl
mov
fcmovbe
mov
xchg
jmp
pop
mov
aas
xchg
outsl
pop
mov
push
pop
inc
pop
adc
stc
cmp
cmp
dec
clc
stos
out
test
rorl
or
and
lods
xchg
lcall
dec
lods
shlb
dec
mov
int
mov
nop
loop
adc
jg
push
mov
mov
nop
push
nop
xchg
out
pop
xchg
add
ret
or
pop
ret
push
popa
out
pop
or
inc
mov
movsb
and
pop
mov
cmp
mov
or
fsubrl
test
loopne
sbb
rorb
jg
stos
outsb
sub
or
push
xchg
andb
and
mov
or
dec
fistps
mov
int3
mov
repnz
jmp
arpl
pop
lods
aas
das
xor
nop
pop
xor
inc
pop
pusha
lret
cld
cmpsb
test
iret
loope
jmp
in
testb
mov
popf
push
jb
lahf
xor
xor
jns
hlt
sbb
incl
aam
jo
xor
pushf
jge
clc
xchg
pop
bound
or
rorl
int3
push
mov
and
incl
popl
fidivl
incb
or
pop
mov
push
dec
outsb
test
test
adc
insb
push
push
push
aas
xor
add
inc
int3
xor
loopne
and
cld
stos
stc
in
dec
sahf
shll
add
jl
sub
mov
pop
mov
arpl
mov
loop
dec
add
fdivrs
push
xchg
xor
xchg
shl
push
in
sub
dec
inc
enter
cld
push
or
or
test
gs
ret
mov
ds
lret
or
push
xor
dec
inc
mov
push
ljmp
fs
cld
push
pop
ja
sub
rclb
lcall
dec
es
xchg
mov
dec
jge
cs
adc
mov
mov
or
and
test
shlb
out
dec
xchg
into
lds
pop
inc
or
icebp
push
incl
popf
out
mov
push
cmp
push
iret
add
adc
std
cmp
es
or
popf
xchg
xor
test
mov
push
lcall
cmp
dec
sub
lcall
ror
fwait
les
and
cmpsb
xor
loopne
insl
lret
dec
stos
out
inc
hlt
pusha
in
and
scas
mov
fs
add
mov
adc
je
inc
addr16
jle
test
ss
pop
mov
test
sahf
les
mov
adc
ret
test
sub
aaa
hlt
adc
xchg
adc
and
or
mov
aas
cld
xchg
loopne
cmp
cmp
sbb
add
cmp
push
mov
sub
mov
ljmp
outsb
mov
sub
lock
lds
testl
add
pop
daa
mov
pop
adc
cli
in
sbb
pop
pop
nop
cli
test
push
shr
xchg
movsb
hlt
pusha
sub
fs
cli
sbbb
push
repz
sub
adc
xor
xchg
add
shrl
sahf
dec
sbb
enter
retw
lret
mov
adc
or
cld
sbb
and
jae
daa
inc
inc
in
xacquire
clc
outsl
out
clc
div
xchg
loop
mov
fs
es
mov
add
sarl
sub
clc
mov
add
nop
push
sbbb
jge
adc
pushf
jns
outsb
push
mov
addr16
add
ret
adc
sbb
pop
push
es
testl
add
jle
and
ljmp
mov
and
loope
add
mov
hlt
mov
and
jp
loope
jbe
push
pop
push
mov
cmc
out
loope
mov
jb
jns
ja
icebp
jg
lock
cmp
mov
call
sbb
rcll
stos
faddl
sub
ret
cmc
mov
mov
addb
mov
mov
add
arpl
mov
setge
loope
inc
pushf
mov
dec
loope
mov
mov
and
sub
filds
ss
add
cmp
or
add
jo
pop
insl
imul
adc
and
adc
ja
nop
cmp
pop
adc
repnz
rcrb
jg
inc
js
add
stc
pop
mov
mov
jge
ret
ret
fs
aad
into
jne
mulb
daa
jb
sub
andb
bound
sub
fs
push
out
sub
xor
jg
ljmp
and
push
lock
mov
fdivl
movsb
sbb
inc
sarl
jb
ret
or
mov
push
mov
lods
int3
pop
dec
sarl
test
fwait
lods
pop
mov
push
pop
pop
fimull
adc
adc
in
clc
inc
add
xor
loop
jns
pusha
call
aas
cmp
pop
pusha
out
pop
rcrl
xchg
push
push
lea
jno
pop
sub
es
mov
xor
aas
cli
jmp
cli
xchg
add
pop
or
xchg
or
into
mov
push
mov
aam
mov
cmpsb
xchg
repz
outsb
push
push
stc
cmp
mov
and
icebp
adc
loopne
xchg
sub
ret
add
inc
popf
mov
push
sbb
insl
repz
rcll
mov
rcrb
fidivl
adc
mov
push
lock
and
mov
call
fstpt
jle
or
cmp
cwtl
jmp
loop
sbb
add
xor
gs
ror
faddl
cli
mov
dec
mov
cmpsl
sbbl
aaa
loopne
jp
cwtl
add
sbb
lret
push
rcrl
pop
cli
imul
push
cmc
adc
add
je
dec
filds
sbb
xor
sbb
lds
pop
fs
outsl
aad
int
xor
leave
cmc
dec
pop
push
cmp
and
mov
lcall
pop
sub
mov
mov
xchg
xor
stos
ret
outsl
pop
pop
pop
add
outsl
test
mov
and
sbb
mov
out
icebp
pushl
mov
pop
fidivs
push
cld
mov
xchg
ret
cwtl
mov
or
out
in
sbb
and
test
xor
ret
xchg
dec
pop
cltd
js
or
pop
mov
push
std
in
setns
neg
cli
adc
ljmp
shrb
and
sub
pop
data16
out
push
cwtl
mov
inc
js
daa
lock
add
lret
cmp
dec
or
sbb
es
push
mov
incb
xor
shrb
ffree
sub
cmc
sub
loope
adc
mov
lods
ljmp
jb
fs
mov
inc
add
sub
sti
nop
fmuls
sahf
ljmp
lds
mov
pop
mov
adc
shl
jp
fcoms
repnz
jo
adc
jb
ss
mov
in
push
cs
adc
mov
test
rorl
dec
xchg
stos
mov
loope
mov
fcompl
add
loop
mov
fisttpll
mov
push
imul
adc
sysenter
lds
lret
aaa
loopne
inc
mov
xchg
fmull
pop
mov
xchg
pop
insl
inc
test
mov
inc
push
pop
and
cmc
sbb
jo
repnz
std
shl
orl
xchg
ss
push
push
mov
mov
fstl
and
push
mov
or
mov
push
sub
push
and
push
pop
hlt
push
nop
subb
xchg
add
movsb
movsb
insb
inc
ss
push
in
pop
adcb
aaa
je
inc
and
adc
aam
dec
sub
es
or
in
mov
insl
movsb
hlt
je
cmp
xlat
lock
sub
xor
xchg
cmp
inc
in
inc
pop
in
mov
loop
mov
ja
rorl
pop
push
clc
aaa
jge
scas
cmp
loope
test
int3
mov
in
xchg
cmc
xor
scas
jmp
or
sub
sbb
test
or
or
add
cmc
popf
cmp
movl
xor
pop
xchg
xchg
std
in
je
insb
push
aaa
aam
cmp
dec
lock
dec
xor
jno
ja
ret
jbe
xor
dec
adc
shl
popa
cmp
ret
dec
dec
inc
mov
pop
push
movsl
cli
ljmp
dec
xor
inc
adc
rorl
jecxz
adc
inc
cmp
dec
insb
imul
xor
outsl
mov
dec
push
sbb
dec
or
mov
cmp
xchg
sti
push
or
jp
stos
xchg
or
pop
adc
std
std
lcall
popf
cltd
stos
ret
cmc
xlat
sub
adc
aas
adc
mov
pop
test
insb
mov
mov
pop
pop
cmp
insl
and
add
fsts
hlt
add
add
negb
pop
loopne
push
lock
sub
das
push
pushf
js
and
cwtl
pop
lret
xlat
dec
lea
mov
ja
push
ret
cmp
dec
decl
or
sbb
daa
insb
movsb
popf
sub
push
fcomps
inc
pop
mov
aas
shrl
mov
mov
pop
xor
enter
cmp
shr
or
test
ljmp
test
and
cli
sub
outsb
push
add
scas
shrl
pop
bswap
daa
jb
sbb
lock
stos
ds
push
stos
orb
shrl
pop
loope
or
inc
mov
mov
aas
aam
mov
and
cmpsb
adc
mov
or
xchg
bound
lret
adc
jge
adc
push
movsl
shlb
mov
xchg
xchg
addb
jmp
push
dec
fnop
pop
rcl
lcall
push
push
xchg
push
outsb
mov
xchg
into
push
inc
cmpb
cwtl
popa
mov
xor
xor
pusha
push
lods
jg
push
je
std
xor
leave
sub
add
cmpsb
mov
dec
push
adc
mov
push
push
call
pcmpgtd
xchg
fdivr
outsl
std
jg
sub
call
pop
xchg
sbb
nop
loope
fcmovb
dec
das
out
arpl
jle
scas
xchg
clc
xor
das
push
jo
or
mov
std
decl
sahf
ja
and
or
pop
ret
lret
cmp
jno
out
cwtl
loopne
xor
jp
push
jno
and
sar
cwtl
pop
pusha
mov
mov
mov
sbb
dec
es
insb
push
test
movd
pushf
repz
pop
cmc
mov
add
add
je
in
xor
xor
cli
mov
sub
cwtl
pop
inc
cmp
loope
add
mov
hlt
dec
push
jl
or
adc
fildl
test
fimuls
aam
xor
cld
sbb
push
push
push
pop
push
push
pushf
negb
mov
pushf
shl
xchg
test
adc
andb
fsubl
dec
mov
mov
xor
xchg
push
cs
bound
xchg
adc
ljmp
sbb
loop
in
int
xor
int3
and
adc
mov
pushf
sbb
sar
push
sbb
and
cs
pusha
adc
fistps
aas
fldenv
sbb
into
inc
inc
data16
sbb
mov
push
add
gs
in
jge
je
or
push
notl
fstps
push
ret
push
mov
fwait
sub
scas
outsl
hlt
sarl
and
mov
and
cmp
pop
add
add
mov
add
mov
je
cmp
inc
pop
jp
cmp
loop
aaa
sub
xchg
hlt
mov
dec
adc
push
in
arpl
mov
scas
push
daa
mov
sahf
ret
push
xor
neg
mov
popf
push
mov
mov
shlb
test
mov
cmpsb
or
and
xor
sbbb
imul
pop
and
xor
nop
out
inc
mov
lret
mov
xor
dec
test
and
jmp
daa
fs
sarb
es
add
cmpsb
sbb
inc
sar
pop
and
sbb
dec
das
jo
data16
ljmp
add
sbb
test
mov
jecxz
subl
adc
or
leave
jg
mov
cmpl
dec
pop
add
insl
clc
pop
or
addr16
push
sub
rorb
stos
push
decl
je
test
adc
jmp
popa
add
cmp
mov
fwait
push
or
add
and
mov
mov
mov
fildl
es
inc
pushf
add
ja
outsb
adc
fmull
dec
pop
or
adc
shrl
mov
sub
loope
jmp
lods
adc
dec
ds
or
sbb
and
loop
addl
sub
rorl
aas
xchg
push
dec
std
bound
inc
jb
ret
inc
cld
test
pop
insb
sbb
adc
test
jl
or
lock
dec
das
mov
ret
nop
jno
mov
mov
adc
shrb
cwtl
cmp
add
jle
xchg
loop
shlb
mov
je
push
sbb
pop
inc
push
and
js
icebp
pop
xchg
xchg
adc
push
sub
inc
scas
jge
or
adcb
and
sbb
xor
shlb
sub
cmpsb
pop
mov
out
daa
mov
adc
mov
dec
add
cmp
and
xchg
scas
add
mov
sub
xor
push
inc
cwtl
pop
adc
mov
cld
and
add
add
pop
or
movb
pop
cmp
sbb
push
mov
ss
mov
les
mov
lahf
inc
ret
pop
movsl
iret
xor
scas
js
subb
fs
push
lcall
loopne
call
test
mov
mov
add
popa
jge
test
ljmp
cbtw
sbbl
mov
push
or
mov
das
pop
xchg
test
mov
in
bound
hlt
sar
pop
push
xchg
cmp
rcl
int3
add
inc
mov
or
sahf
adc
fimull
outsl
aaa
add
stos
and
rcr
push
std
mov
cmp
fisubrs
xor
mov
cltd
push
mov
insl
push
inc
loop
dec
lar
shlb
subb
dec
push
add
or
aam
xor
sub
stos
pop
out
ss
push
aaa
orps
sbb
jo
lock
call
cmpb
fsubp
jns
orl
fidivrl
in
and
push
shl
push
push
cmc
push
mov
inc
mov
push
dec
mov
scas
push
ds
inc
ss
mov
or
sbb
das
hlt
out
sarb
ss
sub
pop
add
xchg
sub
jne
cmpsb
mov
jns
scas
into
xor
dec
test
mov
inc
adc
mov
ja
and
and
cmp
aam
loop
enter
mov
or
lock
jo
lcall
mov
xor
mov
push
cmp
into
sete
loope
fwait
dec
pop
inc
call
sub
inc
add
and
incl
mov
sbb
cmc
push
repz
loopne
mov
mov
shlb
idivb
xor
cmp
lock
lods
fs
cmp
push
adc
rcrb
lock
outsl
sbb
add
cmp
xchg
addb
jl
pop
repnz
adc
or
jae
jno
sub
mov
adc
test
lds
xor
mov
inc
leave
add
jo
xlat
mov
cli
add
pusha
jl
add
pop
test
fs
jbe
add
out
xlat
lea
ret
jle
push
mov
pop
shrb
adcl
cli
push
pop
pusha
add
dec
add
cmp
and
addb
in
and
pop
lods
insb
scas
xchg
in
sub
adc
cmpsl
push
js
les
xor
pop
incb
or
sbb
dec
sub
jb
add
lods
lods
adc
cmp
adc
shrd
sbb
icebp
in
cmpsb
mov
mov
or
lahf
and
testl
jg
sbb
jo
sub
fcomps
lods
pop
add
imul
fildll
lret
pop
outsb
std
jge
jnp
shlb
pop
mov
jmp
mov
cmp
in
int
or
adc
and
lahf
mov
or
gs
or
add
push
mov
xchg
add
inc
inc
andb
addr16
jg
test
call
scas
sbb
pop
out
inc
jb
pop
dec
shlb
hlt
and
add
mov
push
scas
xchg
popa
fiaddl
add
dec
in
xchg
pop
add
out
push
xchg
xor
push
mov
or
inc
pop
push
mov
pop
movsb
sarb
loop
and
mov
aaa
sub
cltd
add
cmpsl
mov
sbb
popa
inc
icebp
push
and
cmp
adc
sbb
xor
or
hlt
cwtl
daa
shl
jge
xchg
loopne
testl
lods
push
adc
inc
arpl
jmp
fadds
sbb
insb
adc
sub
or
call
stc
repnz
jg
push
cmpb
jae
pop
testb
or
jbe
in
andb
push
xor
sub
stc
lds
add
pop
out
pop
jns
xor
dec
push
fimull
adc
outsb
mov
std
jne
add
xchg
call
sahf
movzbl
xchg
mov
add
outsb
and
lret
pop
jne
pop
pusha
fidivl
pusha
or
inc
sbb
icebp
jo
inc
je
shrl
icebp
push
repnz
xchg
xchg
push
inc
jl
cmpsb
das
in
aaa
fcomip
mov
sub
jbe
jo
dec
ds
lahf
pop
add
mov
xor
mov
lock
inc
push
adc
xor
xlat
adc
shll
push
inc
cwtl
jmp
popa
mov
xorb
sbb
imul
add
xor
fnstsw
jbe
mov
int
inc
sbb
adc
pop
inc
dec
xchg
and
arpl
xor
sbb
movsb
adc
dec
jno
pushl
add
sbb
loop
xchg
cwtl
xchg
push
add
inc
int3
pop
push
cmp
add
adc
lea
insb
addb
stc
add
cmp
les
and
outsl
leave
pusha
jb
ret
push
add
lret
mov
mov
push
jle
orb
mov
sub
ja
add
mov
fwait
data16
mov
and
inc
push
and
mov
xorb
and
cmp
sar
xchg
rolb
jo
sbbl
fs
in
sbb
mov
dec
xchg
aad
mov
adc
jns
mov
addl
mov
cmpsb
sti
or
mov
jae
test
outsl
pop
xchg
data16
out
sub
call
aad
ret
les
add
xchg
jo
and
fdivr
add
push
or
jo
push
mov
rorl
push
addl
fidivs
mov
mov
fcomps
adc
clc
lcall
sbb
ror
mov
push
out
popa
aam
push
mov
movsl
or
icebp
aad
pop
mov
push
pop
mov
jmp
xor
fldt
pop
aas
clc
ror
mov
je
xor
push
mov
stos
pop
stos
xchg
or
xor
sub
add
xchg
jg
push
jns
fs
popa
jnp
adc
or
or
adc
pop
add
sbb
ret
clc
push
push
cs
bound
shrl
jl
faddl
insl
mov
cmp
insb
push
les
les
aas
or
je
mov
adcl
xor
jno
cmovbe
aas
pop
lods
inc
in
aaa
lods
dec
add
inc
test
mov
mov
enter
cld
out
scas
movsb
lock
enter
dec
sbb
mov
xchg
clc
jno
xor
sbb
push
sahf
movsb
add
cmp
frstor
sarb
sub
in
mov
not
fidivrs
fs
shrl
dec
sahf
rcl
or
loopne
sub
js
add
sbb
aam
push
fisttps
or
jmp
xchg
or
cmpsb
jmp
xchg
cmp
jecxz
and
aaa
add
and
hlt
xchg
addl
rolb
inc
sbb
add
in
xchg
xor
mov
je
sbb
dec
cmp
and
dec
or
loopne
and
adc
test
stos
shll
fnstenv
aas
ljmp
push
sub
push
xchg
loop
test
dec
fisttps
add
push
xchg
push
inc
sub
loopne
dec
mov
sbb
lock
or
mov
push
or
ljmp
jp
mov
inc
out
arpl
cmp
stos
and
ret
adc
ret
aas
dec
fisttps
xlat
stos
test
pop
xlat
jns
mov
dec
push
cwtl
popa
pop
jnp
js
pop
dec
fcoms
aaa
cld
add
push
mov
sub
pop
xchg
into
dec
fwait
out
imul
je
jecxz,pt
pop
xor
sub
push
mov
andl
push
jo
push
les
mov
cli
push
mov
into
push
shll
mov
mov
ret
inc
shrb
adc
scas
das
xchg
mov
dec
stos
ret
and
popl
jno
flds
fdivs
dec
inc
loopne
imul
call
push
je
fcmovnbe
out
sub
pushf
jmp
or
pushf
inc
in
rcrb
mov
icebp
orb
mov
pusha
adc
rcl
mov
aad
push
and
sbb
sarb
lods
cwtl
dec
lcall
jg
adc
dec
adc
jbe
adc
mov
popa
mov
add
or
cld
sub
dec
fildl
push
xor
mov
mov
sbb
aaa
in
cmp
lcall
xor
add
xchg
jle
and
jg
push
enter
and
fwait
jg
aaa
fnstenv
xchg
cmp
dec
in
or
jns
or
rorb
add
dec
fnstsw
sub
out
dec
repnz
or
js
mov
test
int
lods
mov
je
in
jg
ficoml
jno
inc
nop
aaa
cwtl
jne
cmp
push
jle
fisttpl
push
inc
cmp
jbe
pushl
dec
dec
hlt
sbb
and
lahf
mov
imul
nop
jp
pop
fwait
ret
es
call
add
dec
xor
mov
fwait
mov
mov
and
inc
inc
cmp
jbe
cmpb
mov
push
scas
cmp
das
ficomps
rcrb
inc
sub
cli
cli
and
test
das
push
pop
test
outsl
jle
sub
mov
outsl
icebp
add
push
xor
fwait
mov
scas
ja
inc
fisttps
repnz
fwait
mov
jge
movsb
ss
and
inc
cmp
push
cld
jg
jge
or
xchg
mov
bound
pop
fmuls
adc
pop
and
outsb
mov
sbb
jnp
or
scas
pop
mov
dec
xchg
call
or
mov
xchg
scas
mov
js
add
leave
notl
add
pop
les
inc
push
subl
pop
dec
repz
mov
pusha
mov
mov
pop
and
sbb
aaa
iret
inc
imul
push
push
lods
sbb
test
scas
ss
js
xchg
loop
xlat
pushl
mov
scas
movsb
je
pop
xchg
loopne
outsb
repnz
test
sub
mov
add
add
cmp
insl
sbbb
sub
decl
or
fisttps
xor
sbb
lds
loop
testl
jecxz
inc
clc
xchg
push
rolb
loopne
ljmp
jns
xchg
cmpsb
das
lods
fcoms
adc
mov
cld
xor
inc
pushf
in
fcoml
out
pop
xor
fcmove
push
fwait
les
add
xlat
add
pushf
test
add
push
int
jb
xlat
xor
outsb
sbb
mov
push
cld
ds
cld
iret
xchg
sbbb
movsb
dec
and
daa
push
data16
xorl
fwait
dec
push
lahf
inc
inc
lahf
outsl
xor
xchg
ja
out
mov
mov
xor
push
lea
in
push
or
out
xor
arpl
push
mov
sbb
je
sub
mov
mov
lock
bound
outsl
inc
inc
pop
xchg
daa
inc
cld
fisubrl
push
xchg
or
rolb
adc
mov
decl
lret
mov
mov
push
mov
repnz
push
test
mov
out
icebp
jmp
les
jp
rorb
inc
sbb
or
xor
pop
out
add
iret
cmpsb
loope
arpl
push
xchg
and
call
stos
sub
test
lea
in
xchg
imul
push
ret
imulb
sbb
out
cli
xchg
nop
and
add
cli
outsl
mov
bound
clc
xchg
dec
mov
push
push
lods
mov
cmp
push
add
adc
test
cwtl
sti
fisttps
or
enter
push
mov
jb
sarl
push
pushf
jno
push
mov
add
sbb
or
in
inc
arpl
sub
adc
push
mov
jo
ss
incl
sahf
push
es
test
cmp
call
ret
stos
add
shll
jge
xchg
jo
rorl
pop
out
clc
ja
call
clc
js
inc
sbb
mov
pop
add
sbb
lods
mov
fdivs
cli
std
hlt
cmpxchg
lods
or
mov
mov
lock
mov
test
jg
popa
std
ja
add
daa
pop
repnz
arpl
mov
push
inc
xor
es
rolb
xor
push
dec
dec
and
push
mov
test
fiadds
mov
xchg
mov
push
testl
jb
in
push
or
fsubr
jo
pop
scas
icebp
scas
decb
in
xchg
lcall
cwtl
add
pop
jge
lock
dec
cmpsb
pop
dec
pop
stos
pop
sbb
pop
insb
aad
push
mov
cmpl
dec
pop
and
loopne
add
ret
pop
rorl
scas
fcomip
insb
jp
inc
add
mov
cmp
mov
gs
mov
xor
xchg
ss
add
sbb
outsl
push
or
mov
jecxz
mov
cltd
mov
aam
std
pop
xor
xchg
inc
or
pop
push
xchg
lods
adc
mov
ss
popa
dec
xchg
mov
add
mov
fisubs
dec
cmpsl
mov
adc
pusha
inc
aad
cmp
nop
push
mov
or
loop
pop
popa
sti
out
pop
inc
roll
cmp
adc
pop
jecxz
in
jnp
mov
cmp
add
inc
inc
or
sbb
aas
add
cld
dec
lods
add
mov
add
js
or
xchg
outsl
insb
or
lock
cltd
cs
shl
clc
inc
sub
in
and
sub
int3
lds
inc
cmp
cmpsb
push
adc
inc
mov
mov
mov
jge
cmp
sub
add
add
shlb
push
fwait
jecxz
sbb
xchg
call
or
mov
xor
ss
adc
loope
fdivrl
jb
mov
inc
rcrl
loope
lret
out
and
adc
add
dec
fisubrs
enter
cmp
mov
and
fisubrs
mov
push
fmuls
cmc
jg
repnz
sahf
test
ret
adc
xor
stc
pop
push
test
mov
movsl
sub
add
fisttpll
adc
inc
out
ss
aas
mov
in
inc
sti
add
ficoml
imul
lea
bound
push
aam
jl
rclb
addr16
sbb
mov
jmp
or
addr16
stc
mov
sti
xchg
insb
sbb
sbb
pop
mov
dec
lahf
mov
add
mov
mov
jmp
es
adc
int3
fwait
lret
and
hlt
pop
sub
repz
xchg
outsl
mov
or
xor
xor
add
cld
jne
jo
add
pop
pop
cmp
shl
inc
dec
fcomp
popa
lock
add
cli
inc
mov
adc
imulb
fwait
pusha
add
add
or
xchg
aam
jge
stc
outsb
xchg
lret
jle
inc
dec
data16
sub
lea
lock
and
test
cmp
insl
pusha
in
fnstenv
cmp
mov
ret
push
popf
out
pop
dec
rorb
xor
push
mov
clc
cmc
add
add
mov
repnz
and
cld
addb
js
fwait
xchg
add
fsubrp
mov
aad
pop
jl
xchg
mov
inc
push
ret
insb
ja
add
mov
ret
jo
idivl
bound
pop
pop
ret
outsb
mov
pop
repnz
sub
cmp
or
inc
cmp
addb
xor
jmp
sbbl
xchg
adc
sbb
sub
repz
outsb
movsb
test
mov
stos
test
pop
outsb
push
xor
mov
mov
and
sub
int3
cwtl
inc
jge
or
test
repnz
incl
enter
les
xchg
sub
popf
clc
adc
js
int3
addr16
test
jl
stos
inc
decl
pop
daa
loopne
lods
lcall
ror
pop
jmp
outsl
mov
les
sub
adc
test
inc
mov
addl
loopne
cs
mov
ljmp
cmp
dec
pop
sbb
shl
xor
and
ja
xor
mov
pushf
in
inc
imul
out
push
sbb
mov
or
jno
pop
bound
lcall
cli
pop
leave
lods
and
inc
out
mov
add
mov
call
mov
push
inc
adc
push
push
sub
idivb
pop
sbbb
dec
jnp
aas
mov
mov
add
test
xor
or
lock
xlat
mov
push
fwait
je
idivl
push
adc
in
mov
or
inc
dec
ret
imul
xchg
xchg
add
add
mov
adc
xchg
fmuls
cmp
sbb
mov
cmpb
cmc
lret
sub
shl
subl
call
in
sub
xchg
hlt
dec
daa
push
and
mov
inc
call
jo
adcb
cltd
bound
out
add
inc
scas
lods
and
inc
jne
add
cli
shlb
into
mov
or
adc
fadd
popa
loopne
dec
lret
subb
loope
pop
aas
out
mov
pusha
je
cmp
mov
add
iret
push
push
sarb
push
shlb
idivl
lock
mov
xor
or
ja
push
pop
or
xchg
loopne
out
or
sbb
inc
sahf
jle
int3
dec
or
inc
test
out
shl
and
cld
mov
jo
daa
push
sub
aam
mov
pusha
mov
pusha
adc
xor
fsubrs
xor
or
rol
mov
mov
insb
mov
cmpsb
dec
xor
fsubrs
sub
data16
mov
lds
orl
mov
pop
icebp
add
stos
xchg
cs
dec
xchg
jg
sbb
sub
adc
mov
xor
mov
sbb
ret
cli
mov
jb
cld
mov
scas
xchg
sub
out
push
xlat
mov
mov
cmpl
jle
ja
std
adc
cmp
mov
insb
pushf
jg
repnz
pusha
test
jecxz
shlb
pop
test
adc
mov
lds
push
scas
dec
fs
adc
jp
cmp
in
sbb
scas
cmp
daa
addl
pushf
test
bound
dec
add
les
dec
test
stos
out
arpl
pusha
jne
std
inc
stos
push
std
and
sub
lahf
sbb
cld
lock
xchg
adc
rolb
jecxz
inc
push
add
fdivl
push
inc
aam
cmpsb
scas
xor
and
clc
lret
test
mov
push
lret
das
outsl
mov
push
sbb
xor
xchg
mov
or
ljmp
push
cld
and
push
cmp
addr16
pushf
mov
xchg
mov
jg
xor
pusha
sbb
jge
daa
cltd
pop
nop
jno
mov
repnz
ret
or
xorb
pop
add
pop
scas
scas
pop
int
mov
inc
inc
cwtl
cmpl
jbe
jns
fisubs
mov
nop
adcb
out
scas
adc
mov
mov
loopne
xlat
test
dec
subl
leave
mov
mov
fstpl
cld
cmp
dec
mov
mov
mov
push
loop,pt
inc
jl
lods
aas
ret
dec
push
pop
xchg
mov
dec
adc
jmp
je,pt
add
jno
push
rorl
jl
mov
fbld
xchg
lds
mov
es
push
lcall
loopne
hlt
mov
cld
test
mov
jbe
ret
mov
add
je
sub
push
dec
shr
mov
jmp
loop
xor
pop
sbb
adc
inc
xor
gs
test
pop
daa
push
testb
dec
push
mov
mov
cmp
sbb
fcoml
sbb
pop
or
jnp
rol
push
xchg
aad
movsb
dec
sbb
sub
stc
lock
scas
hlt
ffreep
popf
pop
push
mov
or
insl
loopne
mov
mov
js
jae
cli
pop
mov
push
out
mov
adc
loop
shl
xor
cmc
dec
pusha
popf
inc
scas
aas
icebp
push
mov
push
test
push
sbbb
sbb
cs
sahf
add
sub
inc
std
shr
outsl
xor
lea
leave
xor
pusha
mov
aad
lahf
cltd
pop
sbb
xlat
jbe
call
hlt
sarl
sbb
jns
jmp
lods
mov
mov
orl
push
stos
lock
sbb
jge
pop
popf
sbb
or
sbb
les
pop
std
cmp
jae
pop
dec
hlt
add
sbb
inc
fdivs
and
out
xchg
mov
push
push
mov
and
in
mov
adc
mov
mov
addb
std
and
mov
dec
leave
or
adc
mov
testl
mov
ds
pushf
mov
clc
rcrl
jo
inc
es
mov
mov
adc
jbe
lret
cmp
push
rorb
sub
cmp
mov
jle
movsl
inc
pusha
imul
sub
adc
dec
xor
movsl
sbb
inc
pop
mov
sbb
mov
das
iret
loopne
push
push
lret
scas
popa
xchg
or
xor
scas
pushl
fsubl
cld
sbb
test
scas
je
loopne
inc
mov
dec
adc
push
dec
into
clc
fldl
ljmp
and
jns
je
and
sarl
ja
push
data16
mov
push
push
push
ljmp
mov
pusha
ret
sbb
dec
gs
ret
jge
mov
test
mov
mov
in
xor
ficoml
movsb
adc
pop
js
pushf
pop
cmpsb
inc
add
mov
add
ret
add
es
scas
add
dec
or
in
push
pop
fstpt
fstpl
bound
cmpsb
rol
aam
loopne
sub
lahf
jecxz
push
idivb
and
hlt
out
lock
movsl
cmpsb
add
push
jle
xor
pop
out
aam
rorb
xor
fstpt
push
mov
hlt
jo
and
addb
push
and
pusha
movsl
enter
mov
dec
adc
nop
je
ret
test
je
push
das
ret
enter
and
push
xchg
mov
icebp
dec
inc
outsl
pop
mov
cs
push
loop
push
push
pop
xchg
cli
out
lret
or
push
sub
ret
mov
pop
loopne
clc
jg
inc
inc
lock
mov
or
inc
jmp
dec
rep
aad
out
ja
js
inc
ljmp
jl
lcall
and
rorb
das
push
xchg
fistpl
and
dec
out
ficoml
xchg
jmp
adcl
fsubl
mov
or
enter
adc
mov
and
mov
fisubrs
push
lods
fdivl
inc
clc
fs
fbstp
pop
aad
add
andl
xor
sub
mov
xchg
inc
mov
xor
or
xchg
daa
and
cmp
lods
lcall
or
and
fwait
stos
inc
dec
shlb
fdivrs
sbb
mov
ficompl
mov
movsl
push
mov
sbb
lret
jle
cmp
and
and
mov
fsubs
push
bound
lcall
jmp
mov
add
ljmp
cli
sub
js
cwtl
cmp
xchg
rcll
outsb
push
and
nop
in
inc
cli
mov
js
or
fiaddl
pop
sbb
clc
les
cmp
add
mov
ret
in
mov
or
xchg
cmp
subb
out
push
popa
push
aaa
test
add
cmp
add
in
nop
and
das
cs
cld
fisubrs
lahf
mov
cmpl
xor
push
cmp
into
adc
stos
push
in
push
pop
lea
outsl
cmp
dec
gs
sbb
fs
fs
sbb
mov
outsl
xchg
leave
jbe
inc
clc
and
outsb
xor
or
inc
pop
jbe
shlb
out
cwtl
dec
ret
adc
pop
insl
out
cmp
fld
lock
bound
and
fwait
arpl
ss
sub
shlb
in
inc
push
mov
mov
and
pushf
movsl
mov
orb
mov
pushf
aad
outsb
outsb
add
cmp
mov
xor
mov
adc
daa
cld
jg
sarb
jbe
movsb
adc
inc
jo
push
inc
and
cld
out
add
pop
sub
inc
rorl
stos
xchg
aad
adc
pusha
mov
je
cld
mov
xchg
pushw
push
pop
icebp
int
lods
jl
sbb
adc
sub
add
pop
push
imul
std
ds
decb
aaa
ljmp
or
add
in
and
inc
jae
sub
stos
fisubs
or
sub
lock
adc
sbb
add
das
pop
sub
rol
fwait
and
cmp
pop
fwait
outsb
call
and
mov
insb
mov
pop
or
or
add
ss
jnp
sub
lea
pushf
sub
jo
subb
out
adc
insl
aam
adc
and
add
bound
movsl
incl
sbb
insb
inc
stc
popa
xchg
sub
inc
dec
add
ret
adc
dec
scas
sar
xchg
dec
clc
xlat
mov
adc
add
xlat
xchg
dec
and
nop
push
push
jno
nop
shrb
mov
loop
jo
lret
mov
adc
or
std
xchg
or
xor
xor
scas
incl
idivb
jne
cmp
fistpl
sbb
pop
lock
mov
sarb
lcall
stos
call
add
mov
sub
push
push
bound
frstor
je
out
cwtl
imul
push
push
fisubrl
mov
mov
and
loopne
js
lahf
mov
in
or
xor
and
jl
addb
sub
enter
jg
cmp
xor
pop
or
jmp
mov
xchg
or
adc
movsb
lret
xor
js
adc
test
fisubs
shll
dec
add
jmp
xor
and
enter
sub
xchg
je
lcall
test
aas
pop
mov
movsb
mov
adc
push
cwtl
cs
add
je
out
mov
je
or
sub
je
mov
dec
jo
lea
jmp
scas
cmp
mov
push
and
dec
pop
sti
pop
das
andl
and
cmp
jle
stos
loope
nop
bound
sbb
or
lods
jmp
aaa
decb
pop
movsb
hlt
popa
jb
icebp
setne
sub
sub
mov
push
xchg
push
inc
punpcklwd
or
das
icebp
punpckhdq
inc
mov
add
xor
dec
push
daa
neg
sub
add
ret
jmp
andb
and
pop
shlb
popa
mov
and
loop
stc
je
pop
movsb
aam
cmp
sarb
jae
push
push
adc
scas
aad
sbb
mov
or
xchg
push
popa
movsb
loope
cmp
mov
mov
stos
xchg
add
es
push
mov
lock
hlt
popf
and
dec
add
pop
jl
sub
shrb
mov
or
push
ret
mov
sub
pop
icebp
or
push
sbb
fs
pop
dec
idivb
fadd
rclb
mov
push
pop
loop
xchg
outsl
xor
mov
test
pop
inc
test
jno
std
mov
shlb
and
and
sbb
lds
fsubs
mov
stos
lcall
loop
loope
jno
repnz
cmp
in
jne
mov
cmp
cld
pop
pushl
push
mov
test
dec
sti
cmp
cmp
leave
push
lcall
lock
mov
in
shlb
cli
pop
mov
ret
fcomip
imul
jg
pop
and
xchg
rorb
xor
jb
mov
cmp
add
iret
mov
inc
es
std
pop
movsl
daa
inc
mov
and
movsb
fs
pop
cmp
mov
stos
aam
or
sub
jo
push
mov
sbb
mov
movsb
rorb
es
or
jg
popf
push
and
mov
adc
add
mov
inc
adc
sub
decl
js
shll
xor
push
call
add
add
jp
cs
out
out
test
fisubrl
mov
mov
add
les
ljmp
out
xorb
mov
jmp
cwtl
into
push
imul
aam
ljmp
cli
fsubl
or
xorl
dec
or
jbe
aaa
lret
cmp
test
push
xchg
les
movsl
mov
fimull
cmpsb
xor
cli
aaa
lods
xor
dec
cmp
push
jg
mov
dec
xchg
xor
add
loop,pt
fiadds
ret
sbb
jge
ficompl
rcrb
mov
mov
cmp
dec
lock
mov
cvtpi2ps
xor
cmpsb
push
xor
add
mov
clc
inc
je
xchg
test
pop
aas
dec
sbb
push
lret
push
mov
mov
sub
clc
pop
outsl
push
push
movl
jle
clc
or
pop
ss
stos
cmp
push
pop
jp
inc
mov
movsb
pop
jecxz
dec
dec
jno
mov
push
dec
jp
xchg
inc
push
add
jb
loop
add
push
or
shrb
xchg
hlt
imul
jnp
adc
dec
out
nop
mov
pushl
push
aam
adc
mov
aam
mov
cmp
cmp
jmp
fdivrs
or
or
lcall
mov
out
dec
mov
sbb
push
mov
and
xchg
jo
cmp
jg
inc
rcrl
push
mulb
mov
add
dec
rcrl
mov
or
sti
incl
fiadds
shl
and
pop
pop
ret
cmp
or
outsb
cwtl
int
push
push
push
cld
push
cmpsl
roll
jae
cmp
ljmp
sbb
je
enter
mov
mov
mov
ja
add
sbb
aam
data16
int3
loopne
icebp
push
cwtl
mov
sbb
xor
push
xchg
sub
mov
push
push
push
cli
push
test
inc
mov
and
aad
or
mov
add
mov
cmpsl
je
dec
cmp
xor
xor
movsl
lock
ret
xchg
add
aad
dec
add
jg
das
aam
mov
mov
cltd
mov
mov
cmp
inc
sbb
or
fwait
or
fisttpll
add
push
imul
jmp
add
aaa
cmovns
dec
dec
movsl
loope
fsubrp
push
cmp
mov
inc
int3
leave
mov
imul
add
loope
bound
fs
sub
into
in
cmpsb
push
sub
pop
loop
or
push
add
in
outsl
mov
mov
mov
ret
adcl
int3
sub
int
jge
jmp
mov
iret
outsb
xor
sbb
scas
push
or
pop
ds
adc
jnp
imul
outsl
mov
pop
adc
add
lret
sub
fcomip
ljmp
int3
push
fstl
lock
or
lcall
fcmovb
dec
cwtl
push
sahf
jo
lods
cli
sbb
jo
ret
std
mov
movsl
mov
xchg
add
sbb
imul
cmpsl
movzbl
int
or
in
sub
int
test
xor
faddp
stos
mov
fists
mov
lods
inc
adc
icebp
mov
pusha
jnp
lods
xlat
push
mov
add
daa
xor
incl
or
xchg
push
dec
xchg
cmp
or
jb
and
dec
mov
pop
add
cmp
loope
mov
imulb
or
lods
mov
rol
push
pop
pop
sub
sbb
fimull
jmp
sbb
into
ret
addr16
rorl
mov
dec
push
mov
pop
cmp
ret
dec
clc
enter
sbbb
push
add
mov
sub
add
testl
enter
stc
or
sub
push
xor
adc
xchg
fnstenv
in
sar
lahf
inc
or
add
arpl
fs
loopne
xchg
inc
sub
mov
xor
sbb
sti
push
ljmp
lods
aam
or
inc
xchg
or
pop
cmp
dec
or
pop
push
inc
sub
lea
negb
adc
ret
call
aas
sbb
hlt
cmp
bound
sbbb
mov
mov
xor
cmp
inc
xchg
xor
loop
aas
pop
push
loope
xchg
push
mov
mov
aas
add
lea
cmpsl
mov
es
and
jnp
ja
sbb
mov
sbb
and
inc
add
clc
cmp
dec
and
das
cmpb
mov
jno
lret
add
pop
inc
xor
xor
push
enter
push
into
loopne
jp
pop
sub
aaa
push
cmp
lods
or
cmpsb
xchg
cwtl
sbb
cltd
or
add
jle
daa
adc
testb
adc
cld
incl
leave
dec
push
adc
add
mov
loope
inc
test
xchg
jl
add
cmc
into
jne
dec
ficompl
push
sbbb
sub
adc
inc
pop
icebp
in
repnz
add
loope
inc
and
lret
aam
rorb
mov
inc
cwtl
push
inc
les
push
mov
inc
mov
fadd
sbb
rolb
aad
dec
mov
rolb
push
jne
add
es
xchg
sbb
xchg
rorl
imul
cld
filds
ja
adc
icebp
in
sub
cwtl
or
jg
outsl
or
xchg
decl
jb
sahf
add
setg
lock
inc
sub
loop
cld
push
cld
mov
fmull
pop
pmulhw
rcl
adc
decb
call
test
rorb
lock
lods
push
data16
insl
add
jo
fldenv
mov
xchg
rcrb
adc
mov
leave
hlt
loopne
jmp
dec
inc
cmp
in
adc
adc
or
inc
jo
jp
jbe
loope
data16
movsl
cli
inc
or
jns
mov
jo
and
cmpb
mov
and
mov
mov
imul
rcll
out
and
jle
sbb
jg
jg
lock
mov
push
mov
jae
outsb
movsb
jno
adc
test
and
sti
or
inc
jmp
xor
and
mov
enter
push
mov
lock
push
outsb
inc
adc
clc
jg
dec
imul
or
ss
insb
mov
stc
mov
scas
incl
aam
sbb
inc
icebp
push
popa
data16
and
fbstp
push
add
push
xor
daa
mov
ficomps
cmp
push
shr
dec
ds
cltd
add
xor
call
pop
jns
sub
or
or
test
and
popf
mov
jp
insl
sbb
es
jl
pop
cmp
or
jl
add
jb
fwait
pusha
cmp
push
aas
arpl
add
push
jecxz
or
mov
add
push
sub
mov
adc
mov
push
fmul
fldt
add
dec
and
add
add
hlt
ret
xchg
out
add
fs
jle
push
jns
jb
icebp
mov
es
xor
inc
and
push
pop
jge
cmpb
cmpl
adc
imul
pushw
jmp
dec
dec
rorb
jge
jecxz
mov
loop
or
push
mov
icebp
mov
or
mov
in
pop
dec
and
aaa
or
pop
sbb
mov
jne
dec
les
push
loope
jle
mov
xor
sub
inc
sbb
xlat
mov
jo
add
icebp
das
js
adcl
outsb
int
out
cld
mov
push
jge
jbe
aam
jle
pushf
mov
dec
inc
hlt
dec
mov
push
scas
out
stos
pop
aad
mov
pusha
hlt
lret
mov
or
data16
cmp
sub
incl
hlt
fists
xor
or
lea
adc
adc
sti
mov
dec
cmp
jle
inc
sbb
sub
dec
and
mov
js
lock
pop
or
in
adc
add
popf
scas
imul
lock
dec
sub
scas
mov
dec
jp
test
pop
loop
pop
pusha
or
fsubrs
insb
leave
mov
xor
pop
cmp
sbb
lods
call
jmp
push
adc
popf
hlt
jnp
dec
lock
sbb
aaa
sarl
push
std
pop
inc
push
mov
cwtl
push
push
adc
jle
int
add
jl
mov
jns
dec
lret
outsl
js
adc
pushf
arpl
incl
es
int3
xor
jmp
dec
filds
xor
sbb
pushl
adc
dec
mov
mov
push
rcrb
cmp
dec
movsb
adc
mov
fcomip
outsl
xchg
cmpsl
inc
cmpsl
scas
lahf
mov
or
les
arpl
sbb
push
aam
test
pop
pusha
imull
int3
stos
or
ss
xchg
push
clc
pop
imul
or
rolb
std
int
gs
rolb
or
clc
enter
clc
ror
push
push
into
lcall
outsl
aam
or
sahf
cs
lds
jnp
and
data16
cmp
add
lret
jl
mov
lock
lock
sbb
push
xor
popf
dec
sbb
sbb
push
mov
ja
mov
mov
pop
push
add
faddl
lret
push
adc
pop
cmpsb
xchg
icebp
or
pop
lcall
or
push
int3
sub
pop
xor
add
lods
mov
sbb
std
jnp
ljmp
sbb
xchg
out
mov
inc
jmp
pushw
or
lock
mov
jmpw
push
std
mov
add
add
repz
pop
and
jbe
inc
repz
incl
cmp
cld
lret
jg
mov
lea
mov
adc
rolb
mov
lds
jg
cld
jbe
aaa
sub
sti
add
enter
loop
sbb
dec
fimuls
ds
dec
fisubrl
fwait
sub
cmpsb
cmp
mov
xchg
outsb
inc
adc
push
inc
xor
mov
orb
in
popa
jp
sbb
mov
or
adc
rcl
cmp
dec
repnz
jl
pop
scas
cmpb
mov
fxch
mov
jne
pop
xchg
xor
sub
xor
jmp
inc
lods
pushw
mov
xchg
dec
push
jle
movq
or
and
sahf
inc
dec
and
sbb
loopne
jne
mov
xchg
scas
or
or
jmp
cli
pop
or
call
inc
and
ffree
dec
sbb
cmpl
ret
imul
mov
subb
xchg
ja
cmc
rorb
add
std
icebp
aas
jg
inc
inc
movb
sub
cmc
fcoms
sub
adc
loope
mov
mov
cli
incl
and
and
push
push
sub
add
mov
jne
sbb
jne
and
add
loop
xchg
daa
adc
sti
inc
es
bound
sbb
push
xor
ds
enter
xchg
mov
add
cmpsb
aad
sbb
pushf
jmp
jle
jmp
jle
mov
and
pusha
push
cmc
dec
or
push
push
cld
lock
inc
jmp
xor
push
mov
aaa
mov
test
fs
jg
es
jnp
or
dec
sahf
aas
fmuls
es
xchg
dec
and
cwtl
faddl
hlt
lret
clc
jg
xchg
xor
movsb
jecxz
lcall
add
push
ror
sbb
cmp
xchg
add
push
je
mov
push
push
out
ret
inc
inc
jl
jno
loopne
outsb
sub
mov
add
add
adc
or
mov
cmp
xor
pusha
sub
jnp
lret
vrsqrt28sd
add
sub
mov
jle
mov
imul
add
aaa
pop
mov
mov
decb
push
imul
xor
dec
xchg
ja
jg
add
pop
test
shll
outsl
jo
testl
sub
stc
in
pushf
mov
fistpl
fcomi
xor
ror
adc
mov
and
adc
jo
xchg
adc
clc
or
call
or
cli
lcall
or
loop
out
nop
jno
test
fs
adc
jno
inc
push
subb
jl
sub
pusha
je
iret
fists
cmp
pusha
jae
inc
xchg
and
in
lods
cmp
es
sbb
cltd
jns
mov
je
loope
add
jno
or
fdiv
xchg
clc
jns
mov
pusha
cwtl
add
sar
ds
push
and
sbb
adc
filds
andb
jo
inc
lcall
ja
sbb
mov
insl
and
shr
bound
add
jb
sbb
mov
push
daa
imul
pop
lret
rcrb
adc
sub
fists
sahf
das
xchg
fistps
iret
add
out
xchg
ja
push
je
mulb
and
cmpsl
nop
mov
or
mov
jle
pop
pop
ja
aas
sub
xchg
dec
xor
xor
cld
inc
test
ret
mov
add
ret
mov
out
mov
add
lahf
inc
jecxz
sub
sbb
add
add
fwait
push
mov
mov
addb
jg
std
jg
cmpsl
xchg
lds
popa
add
fs
bnd
mov
and
xor
xor
push
mov
insb
jg
fisubs
shl
scas
or
in
or
ljmp
xchg
push
faddl
or
and
inc
lret
pop
xor
and
adc
cmp
jp
mov
inc
ss
aas
sbb
adc
inc
cs
das
mov
pop
ljmp
jp
popf
jge
sar
cmpsb
sub
mov
xchg
fdivr
push
pop
clc
mov
adcl
push
fistpll
xor
add
sbb
sbb
inc
popf
or
add
xor
sbb
ret
stos
lock
push
add
pop
int
popa
fucom
or
add
call
loop
into
out
orb
pop
xor
dec
sub
jb
rorl
insl
or
ret
pop
push
push
mov
les
xor
and
mov
fucomi
add
out
xchg
sub
js
dec
fs
stos
sti
fistpll
dec
lahf
and
rcr
lea
lods
stos
cmova
int
xor
dec
adc
pop
add
push
pushf
mov
cs
push
bound
pop
std
decl
xlat
xor
nop
add
inc
mov
loopne
jg
rol
cmpsl
ret
mov
loop
clc
ljmp
mov
cmp
cmp
in
repnz
out
ja
jecxz
push
add
mov
popa
adc
adc
adc
add
pusha
add
and
dec
mov
sbb
add
jmp
ficoml
nop
test
dec
aaa
push
mov
and
scas
loop
cmp
cwtl
mov
xchg
add
mov
push
add
jp,pn
xchg
xchg
sti
cld
fidivrs
jge
add
outsb
and
and
int3
push
add
jmp
movsb
rolb
add
inc
cmp
sub
xor
xor
lods
loop
lock
or
sub
sbb
mov
fmull
popf
sbb
out
lret
sub
push
xchg
arpl
fs
jp
test
cmp
out
sub
and
decl
loop
push
pop
mul
je
rcr
fdivrs
loop
lock
pop
xor
test
mov
popf
inc
mov
or
pop
aam
outsl
cltd
inc
jl,pt
pop
fstpt
or
dec
fsts
ljmp
jmp
cmpsb
mov
call
out
adc
es
or
in
ja
fidivs
add
aad
add
inc
mov
loop
inc
jnp
rcrb
push
loope
mov
jbe
cmp
sarb
adc
aaa
mov
push
xor
xor
inc
or
jle
cld
pop
cld
dec
stos
loopne
hlt
and
fiaddl
cs
pop
fldl
out
push
cmpsb
stos
adc
pop
sub
jg
push
mov
adc
fldcw
push
pop
push
in
mov
jo
movb
xlat
xlat
and
mov
cmp
fnsave
add
adc
cmpl
popa
mov
xor
fdivrl
stc
cmpsb
ret
shrl
xor
or
sub
lea
lods
test
dec
gs
dec
xchg
nop
jo
shlb
mov
sub
int3
test
jl
jo
push
outsb
jo
mov
loopne
inc
int
adc
adc
adc
dec
ljmp
inc
popf
push
test
sarl
inc
jle
rorb
push
pop
inc
mov
cmp
jge
hlt
popf
inc
or
movsb
je
mov
xchg
xor
gs
sbb
sahf
fildl
imul
ss
mov
pop
jb
testl
call
add
mov
dec
pop
or
loope
sub
aaa
mov
xchg
mov
and
enter
add
inc
sub
rorb
sub
mov
popf
push
sub
cwtl
sub
aaa
pop
sub
lock
inc
push
lcall
out
add
sbb
hlt
xchg
loope
xchg
add
cs
testb
push
push
cmp
and
mov
add
cld
inc
sarb
mov
cmc
sbb
jb
flds
xchg
and
inc
sub
jle
mov
xor
mov
fmuls
cmc
scas
adc
popf
push
inc
or
fildll
cli
xchg
mov
lcall
pop
outsl
sarb
incb
rolb
lock
or
adc
pop
loopne
scas
stc
add
push
dec
jbe
xchg
test
mov
push
fisubl
cmp
sbbl
mov
xor
ds
jmp
insb
cmpsb
add
movsb
cs
fisttpl
lcall
in
mov
out
dec
add
sldt
add
inc
inc
inc
inc
or
rorl
imul
fwait
nop
sbb
testl
out
mov
inc
daa
sub
rorl
push
add
insb
pop
sbb
fs
cwtl
xchg
xchg
aad
jg
loopne
pop
sbbb
jb
lcall
aas
mov
int
cmpsl
test
add
test
xor
adc
es
repz
jmp
cmpsl
jns
and
add
mov
jmp
bound
out
rcr
xchg
jl
or
push
mov
fisttpl
aad
out
pop
or
fcmovnb
jl
bound
inc
js
pushl
fmull
push
cmp
jmp
inc
or
jo
jo
sub
icebp
push
out
cwtl
push
fmull
sub
movsb
ss
inc
adc
jle
call
sbb
add
xlat
pop
test
pop
push
pop
xor
mov
cmpb
fists
ss
xchg
aas
int3
adc
xchg
js
pop
jl
pop
out
jg
scas
cmpsb
push
repz
push
and
inc
test
test
cmp
add
popa
adc
and
sub
push
cmp
ret
dec
add
shl
jnp
pop
adcb
cmpsb
xorb
insl
orl
add
std
inc
dec
js
mov
fcom
fisttpll
add
inc
lock
or
and
fildll
dec
aad
push
add
jg
sbb
orb
push
or
aaa
jge
pop
push
push
ret
pusha
sub
stos
fucomip
jp
jg
adcb
lods
add
lods
push
leave
mov
mov
push
dec
and
in
es
test
cli
divb
push
nop
xor
mov
pop
pop
arpl
lock
imulb
js
and
and
cmpsb
xchg
xor
mov
inc
fwait
add
push
add
scas
ss
mov
dec
dec
aas
adcb
xor
andb
mov
and
sub
sbb
decl
and
xor
jb
inc
mov
push
push
fiadds
cmp
push
mov
cmpsb
loopne
call
hlt
xor
lret
xor
sub
aas
ja
clc
call
mov
push
test
cmp
faddp
insl
cmpsl
aaa
call
std
mov
add
fsubrl
push
les
xchg
mov
add
mov
or
dec
adc
rclb
popf
cmp
cmovge
xor
inc
sub
repnz
call
movsb
sub
test
sbb
mov
sbb
loope
add
mov
mov
push
and
mov
adc
pop
mov
stos
cmp
neg
mov
cld
incl
push
icebp
or
dec
jp
into
popf
push
xor
test
sub
int
xor
nop
pop
int
jg
or
and
push
sbb
hlt
sub
xlat
ret
jecxz
orl
pusha
lds
jb
and
mov
es
incl
pushf
inc
xchg
xchg
aas
push
push
sarb
cmp
decl
scas
sbb
push
or
cmc
pop
fiadds
push
or
jp
cmpsb
aaa
sti
push
call
push
mov
or
std
movsb
sub
or
sbb
stos
ss
and
fs
cmp
push
xchg
mov
popf
mov
jg
sub
lock
fisubrl
arpl
push
jbe
repnz
scas
jl
stos
ja
popa
in
in
push
mov
add
pop
bound
ja
imul
sub
rcrb
call
insb
arpl
pop
mov
mov
pop
xchg
je
out
jbe
xchg
cmpsl
scas
ljmp
jle
dec
mov
lcall
clc
jmp
sbb
dec
mov
in
rcll
xor
pop
mov
adc
xor
ret
inc
mov
push
pop
sbbl
push
jl
jle
cs
bound
popa
cmp
ja
cmp
icebp
dec
jo
dec
or
push
xchg
xchg
lods
lcall
xor
and
xor
outsl
or
mov
outsl
out
cmp
data16
mov
pop
sti
decl
das
aam
jae
notb
jge
aad
push
push
xchg
cmc
push
inc
roll
mov
cmp
out
roll
cmp
sahf
fcoms
push
sbb
jb
cmp
inc
mov
dec
cltd
shr
xchg
add
jb
jo
xchg
popf
inc
push
lods
mov
test
adcb
sbb
stos
mov
push
add
stos
data16
shl
push
pop
nop
inc
adc
mov
push
and
sub
loope
and
push
test
xor
cmpsb
push
test
xor
push
mov
mov
push
sbb
test
clc
mov
lcall
xor
std
outsb
shlb
jne
je
add
xchg
or
arpl
pop
cli
push
nop
mov
sub
dec
sbb
cld
sti
test
popf
xchg
dec
push
inc
sti
push
mov
mov
sbb
adc
lcall
mov
adc
inc
pop
add
pop
das
fcoms
jle
in
dec
sbb
add
add
fld
outsl
mov
xchg
int3
rcl
jp
out
es
xchg
sbb
push
bound
sbb
lcall
adc
add
repnz
or
push
dec
xchg
sbb
sbb
stos
sbb
hlt
adcb
sarb
stos
push
call
or
xchg
mov
jle
imul
or
repnz
inc
insl
test
pop
popa
test
mov
data16
pushf
jno
rclb
lret
mov
push
bound
adc
push
lods
mov
fs
lcall
xchg
jbe
jp
inc
add
les
movsb
dec
cmpsb
ljmp
outsb
lea
sub
inc
test
shl
adc
xor
or
loopne
pop
pop
mov
xchg
and
cmpsl
pop
hlt
sbb
cli
add
nop
pop
pop
push
inc
dec
pusha
imul
xchg
mov
push
in
adc
data16
in
inc
into
jecxz
insb
mov
and
int3
iret
in
cli
loopne
inc
mov
push
add
cld
xchg
and
mov
push
jmp
lea
cmp
pop
and
cmp
loop
into
mull
push
aas
clc
es
add
scas
ret
inc
bound
aad
adc
mov
shrb
mov
dec
lods
xchg
inc
pop
mov
jbe
jno
xchg
xchg
fisubl
rolb
push
inc
int
mov
mov
xchg
sbb
cli
test
sbb
shrl
dec
jg
mov
jp
test
push
lret
jnp
push
inc
xchg
ror
les
loopne
fdivr
scas
mov
mov
sub
push
pop
cmp
adc
in
and
xorb
pushf
mov
pusha
jmp
test
es
enter
imul
mov
push
mov
fs
mov
pushf
mov
fdivl
xchg
xor
inc
push
int3
and
ss
and
imul
dec
test
enter
jp
test
out
push
add
mov
outsl
add
inc
sar
scas
aaa
cmp
fs
mov
int3
mov
mov
mov
jmp
in
sbb
jmp
andl
or
shll
sub
or
fistps
das
js
cmp
addb
mov
and
outsl
add
bound
loope
ljmp
mov
arpl
shlb
adc
xor
cmp
test
stos
push
sarl
inc
bound
das
clc
mov
push
cltd
push
push
arpl
cmpsl
sbb
nop
test
pop
cwtl
pushl
jo
xchg
shrb
xorb
dec
dec
mov
and
push
ds
loop
pop
bound
add
jno
lods
pop
sub
or
cmc
mov
cmp
or
push
ret
scas
out
repz
dec
xchg
cli
outsl
outsl
shl
mov
dec
dec
les
inc
ds
pusha
xchg
jmp
ficomps
sbb
sahf
xor
adc
push
in
out
rcl
xchg
cmp
adc
inc
aad
push
push
inc
daa
mov
push
push
je
test
add
xchg
dec
scas
aas
mov
pushf
sub
sbb
xor
adc
addb
stos
cmp
xor
negb
cld
mov
jno
sti
sub
pop
adc
orb
pop
add
or
fsubl
cmp
jl
pop
dec
cmp
mov
rorb
clc
pop
mov
add
in
push
es
ljmp
out
aam
jle
test
add
cmpsb
repnz
lods
flds
or
mov
mov
xchg
aaa
sub
pop
or
std
adc
arpl
sub
mov
jl
inc
adc
jno
and
dec
daa
js
adc
cmp
push
mov
frstor
cltd
pusha
xor
bound
sarb
mov
sub
add
sbb
pushf
lds
xor
dec
addr16
scas
inc
repz
insb
inc
insb
mov
fiadds
add
outsb
pop
push
push
mov
add
ret
jno
or
xchg
fildll
add
hlt
push
loope
sub
mov
pop
enter
pop
pop
inc
sbb
imul
fiaddl
cmp
cmp
mov
mov
icebp
ds
pusha
xor
xchg
and
inc
cwtl
test
add
scas
sub
jb
mov
dec
adc
scas
mov
xor
xchg
add
fs
imul
sbb
in
sbb
push
fcmovb
xchg
les
fnclex
push
jp
pop
jo
inc
jp
mov
jp
cwtl
lcall
lods
lock
inc
dec
arpl
popa
cs
mov
jns
push
inc
adc
das
xchg
adc
test
ljmp
xor
and
jg
cmpsb
mov
add
sub
jnp
inc
mov
mov
adc
outsb
fcompl
outsl
mov
adc
mov
addl
cmovnp
inc
mov
or
mov
and
stos
xchg
call
scas
aam
adc
test
shl
push
es
xor
xorb
mov
inc
cli
mov
cmc
add
xor
enter
prefetch
adc
sahf
dec
ss
mov
mov
scas
es
xor
cld
mov
cmp
aad
andb
push
cld
mov
sbb
cmp
add
pushf
les
decl
mov
cld
xchg
fcomps
stos
add
cld
mov
pop
or
cltd
sub
andb
clc
xchg
cli
mov
xor
pusha
adc
imul
stos
fsubp
xor
inc
leave
mov
mov
sbb
mov
inc
push
inc
or
imul
xchg
mov
push
popl
dec
cmpb
jno
and
mov
js
call
inc
mull
test
pop
pop
gs
adc
fisubs
insl
js
clc
xlat
adc
push
jno
pop
push
lret
xchg
sub
and
mov
add
xchg
decb
mov
aas
mov
cli
push
xchg
pop
xor
jb
pop
scas
add
daa
jne
scas
js
or
dec
cwtl
jae
cmpsl
movsb
inc
sbb
dec
push
test
add
adc
testl
cmp
sbb
pop
pop
xlat
inc
adc
aas
or
rorb
xchg
cmp
insb
mov
inc
push
push
push
pop
mov
adcb
pop
lahf
push
out
mov
stos
in
mov
repnz
push
xchg
mov
nop
imul
xchg
clc
cmp
fwait
rcrl
jg
xlat
loopne
lret
dec
xchg
sbb
stc
test
mov
mov
fdivl
or
pop
mov
pop
insl
insb
mov
inc
jle
add
adc
mov
stos
cmpsb
mov
lock
add
fidivrs
fistpl
loope
push
mov
faddl
push
add
fdiv
mov
movsl
and
cld
pop
pushf
push
not
data16
mov
jbe
mov
jl
inc
into
orl
sbb
das
shrb
popa
adc
pop
sub
icebp
icebp
jg
add
dec
jbe
inc
sbb
leave
es
lahf
mov
and
mov
jmp
cmp
add
inc
adc
push
dec
cltd
out
enter
pushf
dec
loopne
and
pop
sub
add
lds
negb
mov
mov
push
out
sub
push
cld
or
mov
ds
mov
loopne
outsl
xor
jg
adc
cmp
popf
aad
clc
lcall
aad
push
jg
inc
mov
and
jno
data16
lods
or
sahf
mov
fiaddl
incl
out
inc
push
pop
xchg
xor
push
sbb
cmpsb
loop
das
stos
xchg
rcll
inc
push
mov
ljmp
scas
lods
ret
fwait
adc
mov
jge
inc
inc
mov
push
ds
daa
sub
sbb
xorb
repnz
xor
add
icebp
xorb
xor
push
sub
out
jge
cld
and
jae
out
sub
inc
adc
sbb
mov
adc
and
inc
xor
mov
inc
sub
add
cmpsl
or
adc
js
scas
cmpsl
loop
jo
inc
push
cmpsb
cs
sub
outsl
mov
icebp
add
or
decb
int3
xchg
loope
push
lods
mov
mov
shlb
loopne
add
stos
xor
gs
mov
or
std
add
push
and
sbb
shll
ss
cli
xchg
mov
das
and
lahf
cmp
lock
enter
shrl
pop
pusha
movsl
loop
adc
mov
fs
pop
sub
inc
aad
or
mov
and
out
inc
mov
stos
ffreep
iret
shrb
pop
jp
frstor
fwait
sbb
pop
add
arpl
icebp
out
pop
mov
addl
push
or
testb
xlat
pop
mov
push
pop
sahf
push
cmp
ljmp
jecxz
mov
or
push
call
loopne
mov
push
es
cmp
pop
mov
lods
cmpb
push
and
test
data16
das
push
je
push
sub
sbb
xlat
cmp
clc
mov
lock
dec
in
stos
testl
data16
loopne
cmp
idiv
ja
jle
xchg
mov
movsb
add
scas
adc
or
dec
cld
jg
jmp
cmc
aaa
mull
rorb
mov
in
add
vpshuflw
rcr
int3
mov
mov
aaa
mov
push
xchg
cmpsb
out
push
jge
inc
mov
pop
movsb
shlb
or
mov
icebp
in
mov
cld
and
mov
loopne
in
lock
cli
mov
mov
aam
mov
fimuls
jb
sub
add
dec
inc
clc
call
mov
xorb
fs
inc
pop
xor
jl
shll
jb
inc
rcrb
mov
arpl
and
sub
sbb
xor
or
fadds
add
rolb
lahf
movsl
mov
jo
cwtl
popa
xor
pushf
fstps
test
outsb
mov
icebp
push
xchg
or
adc
js
shrl
jbe
icebp
pop
lret
fcmove
or
cmp
push
imul
cmp
inc
imul
lret
rcl
mov
push
loopne
je
popa
inc
lret
sbbb
das
cwtl
subb
dec
push
dec
int3
xchg
out
int3
outsl
clc
mov
pop
leave
xchg
xchg
inc
mov
mov
dec
push
stos
jb
xor
lcall
rolb
jmp
cmp
outsl
or
imul
push
shl
ficompl
jl
push
xor
xchg
mov
out
jle
outsl
mov
add
pop
mov
lret
push
clc
or
mov
xchg
clc
mov
mov
fidivs
pop
cwtl
ret
add
lods
cmp
into
ja
ret
push
mov
test
flds
xchg
negl
rclb
sbb
adc
dec
and
js
test
mov
xchg
push
jbe
lock
loopne
std
or
pop
cli
jmp
inc
sbb
mov
subl
inc
jl
cmp
xchg
mov
ret
jns
adc
mov
mov
mov
push
and
mov
cmp
inc
and
or
loopne
lret
adc
push
test
push
adc
aam
mov
popf
dec
xchg
push
or
in
xchg
cmp
jnp
or
push
add
xor
jne
mov
outsl
mov
xchg
jmp
lret
fisubl
clc
inc
cwtl
adc
jle
pusha
lret
jns
loop
loop
outsb
pop
sub
xor
je
movl
mov
adc
mov
mov
cmp
orl
adc
mov
lret
aas
jg
or
addb
or
mov
lods
xchg
and
jge
outsl
rcrb
push
movsb
ds
pusha
adcb
jle
jo
fwait
test
add
cld
xorb
jo
rcll
es
xchg
inc
sub
mov
push
adc
push
xchg
test
mov
fidivrs
pop
push
xchg
fildl
pop
shl
in
jns
adc
cmp
xchg
mov
fstpt
cmp
or
popa
mov
les
test
or
ret
or
aaa
cmp
pop
and
gs
shrl
cmp
sbb
mov
test
das
xor
data16
addr16
das
xchg
jmp
pop
outsb
cld
in
mov
jmp
dec
mov
push
ljmp
adc
in
ds
pop
jle
pushf
cs
jbe
in
ss
push
pusha
adc
nop
push
add
xor
push
std
loopne
mov
cmpsl
popf
mov
xor
mov
and
orl
sarl
add
js
push
pop
loope
mul
shl
insb
imul
mov
cmpb
int
jno
dec
shlb
mov
lcall
fnsave
jg
xor
and
rcrb
push
orl
push
jecxz
mov
shr
sbbl
rorb
add
push
andb
sbb
leave
adc
decl
cwtl
pop
in
cwtl
fwait
nop
repnz
jno
push
push
jb
cltd
into
pop
sbb
jne
add
out
call
push
dec
or
rol
jns
adc
fs
nop
sub
ss
pop
xor
mov
loop
mov
aam
add
stos
cmp
sahf
jne
push
movsb
mov
pop
push
addb
fbld
and
mov
popa
in
or
adc
incb
or
shlb
daa
sub
and
movsb
xor
fistps
and
cld
test
mov
push
sbb
and
xchg
icebp
aaa
push
or
or
add
push
xor
push
idivl
sbb
mov
xor
pushf
cmp
fsubrs
xor
or
jg
sub
mov
sbb
lock
std
inc
rclb
ret
sarl
imul
pop
add
aaa
sbb
cmc
add
inc
mov
mov
xchg
cwtl
jb
add
imul
dec
push
pop
pop
in
push
dec
arpl
push
ds
or
pusha
test
cld
jmp
jl
loop
ret
pop
lea
or
xor
hlt
pushf
xor
std
or
pusha
lock
cmp
sarl
xchg
mov
xor
fcmovnb
pusha
adc
cmp
in
mov
mov
sbbb
in
mov
call
aas
movsl
add
cs
mov
and
shl
das
jle
ss
pop
xchg
inc
add
add
stos
loop
mov
xchg
hlt
add
xchg
cltd
dec
out
and
pop
xchg
pop
aaa
dec
cmp
rolb
xchg
mov
sbb
clc
and
mov
rclb
jmp
f2xm1
xor
or
and
mov
or
jge
or
das
mov
dec
mov
mov
cwtl
inc
repnz
iret
pop
inc
dec
mov
fadds
jmp
pop
das
mov
add
in
and
jae
das
sub
mov
mov
add
dec
adcb
repnz
shll
xor
xchg
mov
dec
fildl
loop
test
ret
loop
idivb
scas
push
jae
adc
leave
bound
and
lock
pop
inc
pushf
cwtl
ljmp
push
imul
pusha
and
cmpsb
pop
mov
jge
pop
loope
movsb
arpl
insb
pop
in
and
cli
jg
sub
add
ds
les
out
sbb
sub
clc
mov
inc
cmpsl
xor
cmp
add
imul
cld
cld
jl
sahf
or
stos
jnp
dec
push
xlat
cli
sub
mov
jle
sub
mov
test
add
lahf
mov
cld
add
mov
int3
cli
jmp
and
dec
bound
test
or
pop
and
lock
mov
sbb
cwtl
rolb
es
cld
sbb
sbb
in
in
or
fdivs
cltd
or
daa
stos
je
int3
sbb
clc
mov
or
and
push
mov
push
mov
inc
arpl
cmpl
jae
or
sbbb
add
es
loop
sub
lock
xor
inc
loope
aad
std
add
mov
decl
sbb
sbb
push
ss
inc
lods
jg
in
or
js
aad
pop
push
in
push
test
lods
das
fdivs
scas
add
xchg
mov
dec
push
and
imul
ljmp
ffreep
mov
nop
test
lods
rolb
push
adc
add
pusha
jge
mov
mov
add
adc
mov
push
lds
jg
cltd
and
adcl
inc
loopne
aad
add
and
push
loopne
push
cld
aas
inc
pop
imul
inc
pusha
xchg
xchg
pop
mov
in
loopne
movsb
push
imul
mov
adc
mov
and
or
xchg
dec
and
push
jmp
dec
jmp
add
dec
fsub
div
sbb
fs
mov
test
jp
pop
shl
setb
sub
dec
pop
jge
bound
les
dec
cmp
mov
mov
or
jl
or
repz
mov
mov
loop
mov
loope
je
sub
add
inc
dec
push
mov
pop
add
ss
iret
jae
aad
pusha
jg
repz
sub
insb
std
mov
je
xchg
nop
sub
cmpsb
jno
leave
ljmp
push
jae
mov
mov
aaa
add
into
push
add
fsubrp
cmp
add
mov
or
mov
cmpb
or
jp
inc
adc
cmc
adc
xchg
add
icebp
adc
sti
pop
dec
or
aad
mov
cmc
lock
test
call
xchg
loopne
sarl
adc
insb
jo
ror
jns
clc
or
ljmp
test
dec
mov
pop
cwtl
cli
test
js
cmc
xchg
or
jbe
mov
or
stc
test
rcl
xor
lock
aad
and
cwtl
notb
pushf
push
dec
jne
and
push
imul
sbb
decb
adc
dec
sub
popf
ljmp
nop
inc
xor
popa
inc
jl
aam
inc
mov
push
lds
sbb
pushf
xchg
mov
push
add
add
popa
xchg
test
sub
jle
ret
push
sbb
cmp
xchg
outsb
enter
incl
pop
add
es
jg
add
mov
dec
or
mov
inc
xchg
and
clc
mov
or
or
jbe
and
outsb
lea
je
cmpb
cld
adc
sarb
push
mov
daa
sbb
xchg
xor
pop
in
mov
pop
mov
cld
fcoms
in
dec
jmp
mov
or
xchg
mov
mov
testl
shl
decl
dec
mov
and
das
sbb
mov
xor
add
mov
xor
test
loop
rclb
lret
aad
iret
mov
jnp
cmp
in
jecxz
cmp
in
push
into
pop
mov
fsubrp
inc
repnz
out
shrl
push
cmp
sbb
das
cli
bound
add
shr
push
xchg
fcmovu
mov
and
lods
idiv
xor
jno
lods
and
seto
dec
jnp
xchg
ja
mov
push
aad
bound
enter
addr16
test
enter
hlt
jo
mov
mov
inc
mov
mov
push
cli
fidivrs
fldl
mov
pop
dec
ja
add
xchg
mov
pop
mov
inc
stos
jl
add
cld
ljmp
push
js
loope
sub
xchg
add
mov
mov
dec
aad
cmp
sbb
xchg
adc
decb
jl
xor
out
pop
movsl
push
push
push
pop
dec
std
jg
out
jmp
movsb
lock
and
ljmp
dec
sub
aam
insb
sbb
mov
mov
int
and
mov
inc
push
leave
add
fs
imul
or
mov
mov
incl
cmp
mov
cld
and
inc
inc
fsubp
shrb
add
outsb
mov
mov
insl
cmc
pop
cli
loope
repnz
in
into
add
std
fcmovbe
hlt
push
pusha
cli
dec
sbb
push
cltd
cli
sti
cmp
xorb
out
push
add
fbld
push
add
stc
pop
push
xchg
loopne
cmpl
sub
push
in
fmuls
xchg
add
ds
push
pushf
push
lret
add
mov
iret
lea
lcall
adc
mov
jl
pop
add
repnz
xorl
ds
jbe
cltd
jp
jle
add
popl
pop
ja
shrl
or
add
mov
pop
inc
test
pop
scas
js
sarb
dec
sahf
fdivrl
sbb
das
clc
aas
add
pop
jns
rep
inc
aad
cwtl
sbb
xor
cmpsl
outsb
dec
cmp
and
sti
sbb
mov
mov
test
dec
stos
pop
push
cmp
call
push
fmul
aam
mov
mull
mov
pop
adc
push
pushf
hlt
cs
pop
dec
mov
push
rcll
mov
mov
rcr
jno
stos
je
inc
imul
sub
xchg
mov
push
insl
lods
pop
icebp
fistps
push
call
sub
mov
es
dec
inc
les
dec
push
cmpsl
inc
mov
or
cmp
sbb
and
mov
in
ss
les
shl
mov
cmp
pop
cmp
pop
mov
fcomip
mov
xchg
fisubs
xchg
leave
push
movb
jle
add
data16
arpl
adc
or
cmp
in
test
jmp
push
pop
mov
sbb
mov
into
sub
add
cld
pop
pop
insb
mov
pop
lahf
or
pushf
pop
lret
push
inc
into
dec
inc
add
ret
cli
mov
inc
and
mov
aaa
jecxz
cmp
pop
stos
arpl
clc
jle
ror
mov
repz
jp
mov
lods
sub
sarl
mov
mov
add
cld
xchg
sbb
insl
mov
imul
xchg
xchg
add
jg
cld
pmaddwd
push
add
inc
testl
ret
jg
mov
das
sub
insl
mov
in
cld
pop
push
ds
xor
jl
fists
sub
sbb
push
fldl
daa
lds
or
inc
sub
jmp
mov
mov
cmpsl
cltd
or
mov
mov
mov
sbb
test
sbb
or
jge
mull
push
lock
cmc
aaa
clc
bound
stos
cmpsb
adc
out
sbb
outsl
dec
test
jl
adc
add
ret
push
and
rorb
and
pop
call
mov
xchg
cld
add
inc
sarl
faddl
inc
out
adc
mov
js
push
dec
enter
cmp
sbb
dec
std
sarl
jle
mov
jl
jns
and
pushf
call
outsl
xor
add
out
jmp
scas
popf
mov
xchg
dec
out
gs
push
sbb
mov
push
push
push
lcall
rorl
pop
dec
xchg
adc
mov
adc
sbbb
cld
adc
sub
inc
lds
movsb
scas
fidivl
icebp
mov
push
xor
mov
inc
hlt
dec
pop
imul
outsb
adc
jo
ficompl
in
sub
inc
jne
add
daa
scas
or
push
popl
lods
push
mov
mov
hlt
rorb
shr
and
loope
stos
in
and
add
cmpl
sub
add
and
push
jge
rcll
loopne
jb
aam
sbb
mov
popa
lds
lds
icebp
add
std
and
adc
add
cmpb
jb
sbb
jp
cmc
out
repz
insb
and
inc
mov
imul
orl
adc
push
inc
mov
dec
sbb
adc
outsb
and
outsl
cmp
add
sub
xlat
xorps
les
test
inc
sahf
adc
fistpll
add
xchg
or
mov
inc
xchg
scas
cmp
pusha
adcl
lds
dec
adc
fwait
aam
fldt
sahf
jns
popf
lods
push
mov
repnz
or
or
jbe
cmp
insl
sbb
xchg
fadds
mov
mov
add
mov
in
test
clc
mov
xor
shlb
xchg
ret
addb
mov
jb
pop
pop
repnz
pusha
insb
jg
dec
dec
mov
shlb
sbb
pushf
mov
adc
mov
xchg
mov
cmpsl
movsb
push
fldl
dec
and
aaa
add
inc
scas
push
stos
pop
outsb
push
decb
push
call
addr16
arpl
popf
add
xor
push
jl
pusha
pop
rcrl
js
lcall
aam
dec
movb
adc
and
jbe
mov
jns
xchg
jns
adc
dec
imulb
inc
add
sub
and
aad
shlb
sub
sbb
mov
int
mov
add
sub
xchg
test
inc
dec
dec
or
aas
sub
and
xor
hlt
pop
or
dec
sbbb
cwtl
repnz
adc
rcll
add
jge
js
in
popf
repnz
xchg
sbb
cld
or
and
in
push
clc
inc
xor
cmp
shrb
decb
movsb
in
inc
jnp
fucomi
std
adc
int
ljmp
cmp
fcomip
in
sub
js
push
cld
add
mulb
pop
sbb
and
adc
inc
nop
cs
mov
sub
inc
loopne
mov
xchg
aam
adc
mov
les
hlt
jno
je
filds
cld
adc
nop
push
sbb
in
out
ja
int3
jns
in
and
sarb
int
testl
push
xchg
dec
xchg
mov
inc
mov
inc
and
or
lret
cmp
add
inc
dec
arpl
leave
dec
hlt
and
sahf
push
or
test
cs
push
int
sub
fbld
mov
lcall
xor
adc
inc
fldenv
in
aas
in
push
orb
jns
jp
xchg
clc
pop
sbb
dec
in
adc
xlat
clc
xor
xchg
sbb
jg
test
ljmp
adc
or
mov
push
pop
sub
inc
push
mov
xchg
dec
sub
mov
jge
add
stc
repz
adc
jg
lret
insb
pop
inc
mov
sarl
pop
and
cmovge
pop
addr16
or
scas
xchg
push
mov
and
lret
cmp
ret
lock
aad
push
mov
outsb
pusha
insb
jl
cli
sub
inc
mov
js
scas
sub
or
mov
enter
sbb
xor
int
das
mov
stos
mov
cmp
rcll
test
cmp
popa
int3
popf
orb
jne
push
loopne
das
mov
push
shlb
hlt
ljmp
xor
imul
inc
mov
sub
stos
seto
insl
incl
hlt
inc
in
fisubs
and
cmp
lock
adc
push
lock
mov
dec
sbb
rorb
sub
mov
and
add
inc
scas
mov
add
mov
movsb
pop
jecxz
cmp
shl
adc
dec
mov
or
int3
jl
sbb
push
gs
hlt
leave
outsl
lret
cmp
or
unpcklps
or
movsb
dec
mov
mov
add
loop
aas
call
fwait
sbb
sbb
cs
add
cli
jmp
mov
push
mov
jmp
clc
aaa
ret
lahf
inc
mov
movsb
xchg
inc
mov
shrb
mov
pushf
clc
cmp
add
mov
bound
xchg
lods
pusha
mov
hlt
push
jg
mov
aam
and
cld
pop
and
pushf
movsb
mov
cmp
hlt
fsts
outsb
jecxz
xor
sbb
push
sbb
jmp
daa
xchg
xor
lds
lcall
sbb
sbb
xor
dec
inc
and
mov
adc
cmp
mov
push
fisubl
pop
popa
loope
cmp
or
das
xchg
push
jg
mov
shrb
push
loopne
jle
stos
testl
mov
add
or
dec
call
cld
ret
adc
pop
sbb
jecxz
test
pop
mov
mov
mov
sahf
sbb
ljmp
filds
and
mov
sub
repnz
add
adcb
jbe
inc
pop
das
aad
cmp
pop
aas
adc
push
add
fwait
xor
insb
sub
pop
and
sub
inc
jbe
cmp
xchg
adc
push
out
je
fildll
push
rcll
mov
mov
sarl
sub
or
lcall
subb
sbb
sbb
jge
mov
icebp
bound
leave
iret
js
rcll
mov
inc
xor
pushf
lds
sbb
lock
and
add
cld
aas
mov
rclb
or
cmp
addl
lods
add
mov
push
call
negb
dec
add
sbb
movsl
sbb
fwait
dec
dec
js
imul
push
dec
jmp
push
mov
mov
push
mov
add
insb
pushf
insb
in
pop
in
loope
jl
int
adc
and
cmp
push
or
xchg
add
lock
clc
push
xlat
stos
mov
lret
add
and
dec
pmaxub
sub
clc
sbb
push
aam
nop
flds
xor
aaa
inc
inc
stc
xor
into
xor
cs
stos
adc
dec
andl
and
arpl
into
sarb
add
scas
ss
jbe
outsb
ret
or
loope
cmc
xlat
rcrl
aad
mov
sbb
sbb
add
dec
test
sar
enter
fs
mov
je
insb
cmp
sahf
cmpb
test
lea
nop
ds
enter
arpl
aam
mov
add
mov
orb
mov
orl
clc
jp
out
je
inc
mov
hlt
negl
test
test
cmp
pusha
outsb
cltd
pop
inc
cmpsl
sbb
jg
mov
mov
aas
pop
popf
test
inc
sbb
push
sbb
sahf
pushf
push
adc
lcall
pop
scas
mov
adc
mov
xor
ljmp
rcr
gs
lock
sub
mov
xchg
ljmp
int
cmp
sub
lahf
mov
es
adc
rorl
push
sbb
push
loopne
jns
fdivrl
outsb
cs
jns
out
inc
push
fmull
lret
push
add
mov
jmp
cmp
add
pop
jbe
adc
jbe
and
or
or
jge
arpl
gs
hlt
es
arpl
pop
int
dec
frstor
vpand
lock
or
pop
sub
movsb
cmp
mov
out
mov
test
jecxz
loop
mov
negl
xchg
and
pop
adc
mov
push
xor
push
inc
xor
jne
cmp
mov
and
shll
and
int3
xor
pop
testb
je
lock
xchg
or
adc
push
or
hlt
sbb
push
xor
das
nop
loopne
mov
push
sahf
lret
jb
aam
mov
pusha
mov
or
mov
jl
roll
mov
subl
test
pop
mov
mov
int3
jne
mov
xor
xchg
lcall
dec
xchg
lcall
xor
mov
jno
dec
mov
daa
fisubl
or
mov
jnp
and
mov
scas
dec
pop
insl
mov
cs
dec
mov
arpl
repz
fistl
cld
jne
xchg
lahf
jle
add
shlb
jg
ss
or
shrb
push
jl
jge
std
xchg
push
add
lds
icebp
repz
mov
loope
dec
outsb
inc
jno
push
or
push
or
testl
aas
std
or
pop
pop
mov
pop
xchg
and
jge
js
outsb
push
testb
and
loope
cltd
ds
jmp
aas
cmp
mov
pop
inc
mov
push
push
inc
ja
add
xor
ret
add
cmp
ds
jmp
stos
pushf
aam
cmp
fsubrl
pop
xor
dec
lret
cmc
push
mov
push
fbstp
int3
pusha
bound
xchg
int
push
push
sub
dec
nop
cltd
push
movsb
dec
push
lock
sahf
ja
jmp
mov
in
sbb
jbe
mov
sbb
les
dec
mov
mov
pop
dec
je
mov
icebp
out
clc
js
es
inc
mov
jnp
cmp
pop
xchg
dec
xor
test
pop
sbbl
or
lods
xor
and
jmp
test
imul
mov
stos
cs
jb
pop
and
push
subl
adc
arpl
imul
imul
addl
imul
loope
push
fnstsw
pop
push
popf
push
push
add
jg
cwtl
cmp
movsb
imul
push
rcrl
and
dec
and
call
loop
jb
mov
es
das
adc
ljmp
rorl
pop
fs
pop
out
sbb
add
imulb
inc
pop
add
pop
lahf
js
push
push
loopne
pop
fldcw
jg
andb
shl
orb
imulb
cmpsb
lods
adc
xchg
push
jae
sarb
rcr
xor
xor
roll
js
push
sbb
cltd
mov
loopne
ljmp
in
js
push
push
jg
mov
loopne
pop
mov
pop
mov
icebp
jmp
rolb
pop
pushf
mov
push
ljmp
add
mov
jg
add
pop
fbstp
cmpsl
push
adc
dec
jmp
mov
icebp
stos
add
mov
test
pop
mov
je
add
daa
push
insl
pop
push
out
cld
sbb
ds
loop
sub
bound
js
ja
jp
push
sti
xchg
and
sub
add
cmp
scas
cmp
dec
pop
stc
jp
mov
mov
cmp
jg
fildl
sbb
and
flds
ret
mov
jl
jg
mov
inc
test
in
push
outsb
jmp
mov
scas
cmp
xor
xor
stos
and
adc
js
sbbl
add
mov
gs
adc
jmp
add
adc
cltd
ret
jmp
adc
jmp
pop
push
pause
nop
iret
loop
push
xchg
xchg
mov
push
inc
enter
mov
out
inc
and
outsl
mov
sub
and
call
add
bound
add
push
hlt
jmp
xchg
xor
shll
imul
pop
enter
sub
adc
stc
or
pop
sub
ljmp
or
adc
push
je
mov
xchg
pop
mov
out
pop
fists
dec
pusha
add
bound
cli
daa
outsb
movsb
repnz
data16
dec
stc
das
ret
cmp
jmp
stos
cmp
inc
scas
jo
fs
xchg
cltd
subb
sub
add
int
enter
mov
in
mov
pop
std
push
push
sub
adc
jo
add
and
iret
int
lock
fwait
iret
ret
cmpsb
movl
out
mov
repnz
mov
cmp
fsubl
mov
inc
fbstp
push
fisubrs
mov
out
and
enter
sbb
xchg
xchg
pop
jno
or
rorl
dec
nop
adc
pop
cwtl
test
sbb
inc
fsubrs
mov
lods
adc
mov
sbb
jbe
outsb
outsl
mov
or
cmp
mov
jbe
or
mov
popf
in
jp
fidivs
loop
or
mov
or
out
aaa
les
aas
dec
scas
mov
incl
ja
or
mov
xor
lret
pusha
loope
test
cli
aas
sub
mov
js
lock
lock
scas
pop
ds
ja
incl
sti
inc
das
jbe
ret
mov
popf
sbb
mov
pusha
in
jecxz
cwtl
pop
imul
mov
cmc
testb
adc
rclb
jg
cmpsb
faddl
push
addb
jnp
loop
ss
inc
mov
add
pop
pop
lret
sub
xor
pop
mov
jo
inc
jns
imul
inc
dec
into
in
shlb
addr16
lret
les
xor
fdivr
ljmp
mov
jo
mov
jl
sahf
sbb
cmp
xchg
xor
mov
call
test
push
lahf
lcall
and
call
cs
sbb
add
imul
loopne
add
and
mov
dec
jmp
fldl
dec
dec
adc
dec
clc
inc
shl
inc
pop
xchg
lods
dec
push
inc
loope
les
lcall
add
lock
sti
aaa
or
dec
cmpb
rol
aas
jecxz
pop
adcl
dec
pop
lock
sbb
sbbl
xor
add
fdivp
cmp
stos
sahf
pop
jl
and
cld
lea
dec
mov
xchg
fdivrp
das
mov
mov
scas
clc
mov
push
pop
jmp
aaa
push
shlb
push
imul
jge
data16
ljmp
add
push
sbb
adcb
xor
and
mov
cli
mov
test
pushf
xchg
or
je
xchg
aam
mov
in
add
or
or
fwait
in
lods
inc
pop
aas
sbb
push
and
test
mov
cld
lea
add
fwait
lret
lock
in
cmp
pop
push
and
ret
jp
daa
push
nop
mov
test
add
inc
jnp
xorl
or
outsl
ror
or
lcall
pushf
popf
push
popf
lods
cwtl
cli
scas
inc
mov
and
shll
jmp
pushf
adc
push
cmp
clc
aam
scas
jmp
and
cmpsl
jmp
jo
rorb
push
mov
movsl
mov
mov
mov
ret
mov
fnsave
ret
call
pop
decl
sbb
jo
jae
inc
icebp
and
gs
incb
fsubr
xor
lock
fiaddl
or
pop
pop
sub
icebp
push
aas
sub
sahf
testb
scas
mov
cmp
pop
add
push
lcall
add
mov
cmp
sbb
pop
add
mov
test
sar
cmp
or
push
sbb
inc
decb
test
jb
jmp
add
add
das
add
cmpsl
popa
pop
lds
call
shlb
jp
fwait
out
or
jmp
ret
iret
dec
in
lods
or
std
jmp
and
sbb
mov
jmp
dec
push
insl
movb
movsb
mov
adc
adc
insb
int
and
cmpsb
pop
cmp
or
lock
insb
xlat
sarl
xor
inc
lret
cmpl
decl
cmpsl
into
nop
subl
sub
hlt
incl
pop
mov
scas
daa
jae
test
cli
or
and
shl
and
loopne
loop
hlt
and
add
push
sbb
cmpsb
outsl
rolb
popf
xchg
push
fwait
loopne
decl
push
dec
mov
div
jno
mov
push
add
mov
imul
mov
fldl
jb
testl
jg
ffree
cwtl
xchg
addr16
jecxz
cmp
movsb
push
add
sub
push
add
and
xchg
push
enter
pusha
add
jg
pop
jp
and
in
jg
mov
or
out
cld
call
leave
in
aaa
rcr
scas
sub
xchg
loop
or
mov
cli
fdivrl
fcomip
cmc
xchg
mov
cwtl
mov
negl
in
subl
sbb
int3
sub
pop
push
pop
decl
int
pop
add
pusha
call
and
lds
push
xor
insb
bound
lret
lret
dec
test
xor
mov
adc
mov
push
bnd
push
cld
ficomps
add
cmpsb
push
cld
pushl
lods
inc
popl
and
lret
pushl
int3
pop
inc
push
sub
jmp
add
or
aaa
cld
jl
inc
push
out
xchg
lea
cmp
fmull
add
jecxz
or
ret
push
mov
push
dec
test
xchg
push
cmp
sbb
loop
pop
jecxz
repnz
fstl
push
sub
jb
ljmp
jle
mov
add
mov
inc
xchg
shlb
adcl
adc
popa
bound
incl
push
sub
test
push
roll
pop
xor
leave
rolb
mov
ss
or
and
pop
dec
faddl
iret
xchg
pop
mov
popf
pop
xor
jg
pop
mov
stos
popf
shll
push
call
scas
dec
mov
call
jg
ja
loop
out
popa
mov
inc
icebp
inc
sub
mov
and
fwait
cmpsl
sub
add
mov
jmp
adc
pop
push
mov
add
out
dec
je
add
rclb
push
incb
pop
inc
push
xchg
mov
push
cmp
lods
push
dec
push
adc
mov
call
jmp
fcoms
inc
cmpl
inc
shlb
xchg
cmpsb
hlt
xchg
hlt
popf
movsb
rcrb
mov
pop
xchg
cli
lret
loopne
jmp
adc
push
rorb
inc
jl
fmull
pop
push
add
push
shll
aaa
pushf
mov
pushf
test
insl
jle,pt
xlat
testl
mov
mov
push
mov
fidivrl
inc
mov
sub
mov
sbb
inc
stos
aam
pop
sahf
add
and
test
push
dec
jmp
jmp
orb
aam
push
jae
mov
aas
jecxz
jle
cmc
cmpb
or
lods
pop
jg
xor
sub
sbb
sbb
cwtl
push
push
mov
pop
inc
pop
ss
xchg
in
imul
imul
push
mov
mov
aam
js
or
mov
loope
sub
sub
mov
in
fs
jae
adc
add
ds
cwtl
mov
filds
adc
fsub
shlb
xor
scas
cli
or
sarb
fwait
xchg
in
pushf
inc
sub
rcrl
mov
pop
incl
jo
mov
imul
adc
sbb
cmc
mov
mov
dec
call
mov
scas
push
push
add
out
enter
cli
push
and
rcl
rolb
pop
mov
xchg
push
adcb
push
pop
cli
pop
cli
push
ds
jae
push
inc
and
nop
cmp
mov
cmpsl
test
mov
jmp
mov
sbb
repnz
xchg
mov
out
xchg
push
imul
imul
mov
adc
ret
pop
outsb
xor
xchg
dec
imul
xchg
cli
dec
js
das
lods
jo
jnp
fsubl
je
stos
lods
neg
mov
or
test
mov
lret
outsb
fnstcw
mov
inc
mov
fwait
ljmpw
test
pop
cmpsb
and
add
mov
and
loop
mov
xor
and
shlb
clc
xchg
push
pop
out
lock
cmpl
fisttps
ds
push
test
dec
mov
xchg
jbe
aaa
lods
fidivrl
rcrb
add
inc
or
cmp
cli
enter
int
imul
sub
ret
pushl
mov
xchg
dec
fstpt
lea
lock
xchg
hlt
sub
test
inc
fbld
dec
lret
jae
jp
dec
add
aas
mov
out
jg
fwait
jb
add
inc
lcall
das
mov
in
popa
mov
imull
outsb
clc
decl
add
xchg
cmp
fxam
pop
ret
jnp
sar
add
xorb
jne
test
dec
popf
popa
nop
adc
inc
aas
mov
dec
push
cli
sti
dec
inc
adc
sbb
rcrl
les
movsb
cmp
outsl
sti
add
out
out
jmp
cmp
dec
add
outsl
xchg
fisttpll
pop
adc
fimuls
lds
sbb
push
std
hlt
push
ret
iret
stos
push
mov
ljmp
lods
or
pop
mov
les
in
call
xchg
xchg
mov
mov
dec
arpl
pop
ss
es
mov
int
sar
shlb
or
add
ret
or
rep
rcrb
daa
ret
xchg
sbb
das
scas
clc
fstpt
jno
pop
mov
push
xor
or
fbld
into
inc
pop
sbb
mov
and
mov
mov
push
call
mov
ret
push
cli
test
or
add
xor
push
sub
sub
mov
leave
addl
stos
jmp
movsb
xchg
sub
iret
adc
xchg
fimull
lds
push
mov
mov
xchg
sub
in
or
sub
push
bound
or
out
xorb
outsb
movsl
cmpb
jl
shll
xlat
outsb
push
jne
sbb
ret
std
add
mov
cvtps2pi
xchg
or
lcall
mov
push
jge
jo
rol
jl
scas
pop
insl
test
sbb
jg
and
icebp
dec
sti
pushl
mov
loopne
add
mov
pop
jmp
out
push
loop
lea
pop
fdivrs
pop
popf
push
in
push
sbb
shrb
jne
loopne
push
pusha
cli
fs
jo
outsl
mov
mov
popa
inc
push
pusha
xchg
mov
in
cmp
inc
pop
or
mov
aam
in
inc
mov
es
test
fsubrl
xor
sub
fmulp
jle
xlat
xor
xor
mov
call
push
or
cs
xlat
shll
add
pop
or
aad
cwtl
pop
or
js
cmp
stc
add
jmp
shll
inc
es
inc
fildl
mov
mov
xchg
popf
sbb
pop
adc
out
push
xchg
mov
cmc
ljmp
push
aas
aas
fnstsw
sbb
out
add
add
adc
and
std
ljmp
push
std
addr16
cltd
lds
inc
mov
daa
fistl
inc
jl
testl
xchg
pusha
rorb
cmp
roll
add
mov
add
and
add
loope
cld
pop
mov
push
pushl
mov
sbb
add
push
std
or
mov
aam
jno
icebp
fld
pusha
mov
push
movsb
mov
or
sub
dec
inc
add
aam
enter
mov
lcall
push
dec
cs
sarl
test
sbb
jnp
add
dec
call
cmpsb
ljmp
rolb
inc
pop
hlt
adc
insl
out
aad
and
and
nop
out
cld
inc
push
fbld
outsb
aam
loop
roll
xor
and
mov
xchg
aam
clc
sbb
outsb
ret
je
mov
push
and
mov
push
subl
dec
mov
bound
adc
and
out
ret
xor
jecxz
and
push
cld
out
outsb
xchg
mov
jbe
push
cmp
jecxz
das
rolb
ret
or
add
js
add
mov
cmpsb
inc
test
push
cmc
aas
in
dec
aaa
xchg
cmc
mov
xor
fiadds
test
adc
aam
imul
or
cmp
mov
aaa
insl
push
xchg
jbe
add
add
iret
das
mov
sbb
add
jae
adc
clc
or
insb
jle
fimuls
das
cmp
lds
sti
jo
idivb
sbb
stos
in
out
shlb
es
sar
xchg
push
adc
jbe
loope
xchg
out
pop
push
nop
mov
leave
in
add
cmp
pop
bound
push
je
xchg
adc
scas
repz
inc
sar
or
lods
cmp
cli
sahf
inc
adc
inc
jp
loopne
test
call
outsl
scas
push
cmp
fcoml
xchg
ljmp
dec
pop
fwait
sbb
insl
add
add
push
clc
out
sbb
lods
imulb
fldenv
adc
scas
mov
loopne
icebp
loope
cld
imulb
inc
pop
xor
ja
clc
call
sbb
or
xchg
mov
lcall
ffreep
movl
addb
lds
lods
and
outsb
lahf
mov
lods
inc
xchg
shl
add
bound
mov
inc
imul
and
push
add
push
dec
or
push
call
je
lea
fucomip
inc
hlt
mov
outsl
je
ret
pop
or
rorb
adc
shll
incl
xchg
sbb
inc
xlat
or
and
mov
shrb
scas
test
jg
shr
xchg
add
pop
sbb
shrb
insb
popf
ds
mov
int
movsb
stos
add
aas
jne
lret
dec
call
lcall
push
mov
pop
or
inc
lock
fcoml
push
lds
xchg
test
aaa
std
pop
cld
add
test
mov
cmp
xor
enter
sbb
daa
pop
sub
mov
repz
sti
push
xor
pushf
mov
movsb
in
hlt
aas
shrb
adc
movsl
add
mov
and
or
enter
mov
faddl
add
fs
pop
jl
push
clc
mov
outsl
out
cli
adc
add
fimull
add
adcb
pop
pushl
mov
cwtl
dec
dec
adc
cmp
jno
outsl
shr
dec
outsl
mov
sub
mov
or
clc
or
inc
out
mov
mov
push
mov
xchg
in
ffreep
cs
sbb
lods
and
int3
mov
in
sub
mov
scas
je
sub
out
dec
add
adcl
inc
roll
inc
push
lods
popf
push
add
cmc
ja
std
das
push
jle
inc
adc
sbb
push
ret
push
pusha
mov
testl
xchg
adc
push
into
dec
aaa
or
cmpsb
shrb
jle
lods
fmull
test
clc
dec
repz
adc
outsb
push
adc
call
sub
and
xchg
insl
mov
add
mov
sahf
loopne
fcmovb
mov
jnp
addl
or
mov
nop
sub
xlat
add
sbb
pop
mov
pop
adc
sbb
test
mov
out
xchg
cmpl
je
roll
xchg
push
data16
test
cmp
lods
push
test
adc
call
add
sub
das
sar
or
mov
inc
in
mov
pop
mov
sbb
dec
cmp
cmp
es
sar
out
ret
dec
ja
sbb
or
jb
ljmp
and
xchg
mov
xchg
push
jmp
pop
jl
shl
imul
rcrl
sarl
pop
mov
shrb
fmuls
pop
clc
pop
pop
jp
fs
adc
clc
lcall
sbb
pop
js
pop
sbb
add
call
popf
lcall
mov
mov
cmp
sbb
out
orb
jmp
push
lcall
fidivs
pop
out
cmp
push
adc
cmpsb
negl
and
test
cwtl
mov
loopne
push
std
and
mov
mov
adc
int3
aas
pushf
push
lcall
inc
dec
add
in
xchg
roll
xchg
xchg
push
out
arpl
push
cvtps2pd
movsb
in
mov
xor
xor
cmp
pop
xchg
movb
mov
xchg
sub
rolb
out
push
nop
movsb
sahf
les
test
rolb
nop
push
outsl
jge
adc
fstps
pusha
xchg
insb
mov
push
mov
test
add
push
fbstp
mov
adc
xor
jg
mov
jl
pop
icebp
and
dec
int
xlat
add
loope
mov
mov
pushfw
cmc
sub
mov
xor
pop
pushl
push
aad
xchg
js
add
scas
mov
jg
fst
cmp
sbb
stc
pop
xor
stos
fs
icebp
add
cli
jmp
loop
lret
jle
sbb
mov
inc
inc
or
rolb
in
or
mov
fwait
sbb
sarb
mov
or
orl
jb
or
std
cmpsb
data16
mov
pop
push
fdivr
cmc
xchg
xor
stc
push
xlat
xor
xchg
add
inc
decl
push
sub
nop
pop
xor
rcl
sbb
fs
or
mov
inc
cwtl
pop
nop
fistps
lahf
cmpsb
mov
xchg
sbb
clc
pusha
xor
cld
dec
pusha
dec
mov
out
es
xor
std
ja
lock
lret
inc
rcll
xchg
cmpsl
out
pop
push
fwait
inc
out
add
mov
mov
test
sbb
mov
insl
pusha
cli
xor
cmp
or
mov
inc
fsubrl
or
push
mov
stos
xchg
push
or
ds
mov
jns
incl
sbb
inc
fcoms
testb
pusha
ret
mov
sub
mov
xchg
or
add
pop
add
mov
jae
loopne
inc
adc
popf
cmpl
dec
and
lods
test
mov
sub
mov
mov
mov
xor
fadds
adc
mov
lahf
adc
lret
push
dec
ljmp
cli
ret
push
xchg
dec
dec
test
dec
je
scas
filds
xor
adc
fwait
sbb
inc
cmp
ja
push
cs
pop
scas
mov
sbb
ret
add
insl
inc
xchg
jle
lock
test
lret
lods
lods
testl
pusha
adc
mov
cmp
les
in
nop
jl
je
adcb
mov
or
dec
mov
mov
inc
into
sub
pop
pop
scas
sub
push
loopne
pop
movsb
das
in
xchg
xor
nop
shlb
lods
sub
imul
test
fs
loope
inc
loope
cmpsb
mov
lock
test
xor
inc
dec
push
fisubs
xor
mov
mov
ljmp
call
jne
out
push
outsl
push
pusha
xchg
adc
cmp
mov
fs
shrl
popa
loopne
ljmp
or
loop
sbbb
lret
cmc
push
fldt
mov
jmp
or
inc
das
push
xor
mov
stos
ljmp
in
fisttps
mov
adc
mov
mov
pop
or
adc
sahf
in
or
push
ds
bound
jl
or
xchg
popf
add
inc
mov
nop
cmpsb
popf
idivl
pop
pushl
jl
or
sahf
mov
fadds
clc
xor
push
js
popa
leave
cli
dec
push
lock
xchg
bound
call
test
fwait
clc
fiaddl
daa
outsb
xchg
movsb
add
stos
pusha
cld
decl
cld
int3
inc
lods
rolb
pop
push
lea
scas
inc
and
bound
into
xchg
and
add
xchg
test
test
subb
aad
in
nop
int3
jo
into
fs
pop
sti
call
adc
dec
inc
cli
push
stos
sbb
call
flds
repz
xchg
lds
xor
push
inc
and
cwtl
icebp
and
call
fdivr
inc
mov
sbb
inc
lods
repnz
sub
movsb
out
push
mov
add
sub
sub
add
or
push
call
push
in
clc
pushl
out
scas
or
mov
cmpsl
out
jb
enter
xchg
cli
movsl
je
pop
gs
loopne
adc
or
push
pop
lock
xchg
push
add
nop
sub
out
inc
jle
inc
fisubrs
scas
data16
and
xor
mov
movsl
arpl
mov
xor
push
adc
pushl
inc
xor
push
dec
pop
rcl
or
ljmp
push
and
loopne
cwtl
sbb
jg
dec
mov
jmp
lds
inc
js
movsl
add
fisubs
in
subb
push
adc
add
cmc
outsl
lock
jge
and
or
and
movl
pop
out
jle
dec
push
lock
xor
pusha
fimuls
clc
inc
adc
int
push
sub
mov
lock
ljmp
dec
ja
mov
jo
ds
jmp
adcb
outsl
cli
mov
jno
lds
or
inc
jmp
mov
test
xor
xlat
popf
mov
and
fcmove
ljmp
dec
dec
loopne
xlat
sbb
out
push
inc
xchg
mov
inc
inc
roll
pop
push
add
and
add
cmpsb
xor
inc
mov
aam
ss
mov
das
clc
fwait
lret
and
sbb
into
lahf
or
das
add
add
in
or
sbb
fistpl
call
inc
or
test
cmp
jle
adc
push
ljmp
add
rcl
mov
pop
pusha
jg
sbb
test
ljmp
ror
scas
pop
enter
ret
mov
sbb
movsb
aaa
shr
lret
shr
lcall
pop
addb
inc
cmpl
fwait
mov
cli
pop
adc
sbb
call
adc
fsubr
loopne
call
adc
xor
add
adc
loopne
and
dec
popf
les
sar
sbb
fcomip
call
jbe
xor
dec
outsl
test
and
sub
adc
pop
cld
pop
sbb
pop
xor
dec
imul
push
lcall
pop
call
movsb
jg
stos
es
nop
subb
pop
pop
dec
lcall
mov
out
pop
cltd
mov
pop
ljmp
xor
push
mov
mov
leave
adc
inc
pop
and
ds
outsb
push
cld
push
repz
mov
xchg
cmp
aam
jo
pop
frstor
sub
jle
jp
outsl
lock
mov
dec
sbb
sbbb
jle
popa
mov
add
mov
xchg
mov
add
pop
add
incl
loopne
lock
mov
cltd
jl
inc
js
jmp
push
mov
lahf
incl
rol
or
xor
shll
ret
and
cmpsl
sbb
pop
push
sbb
jae
sub
xor
or
jmp
jae
and
cmp
add
clc
sub
mov
loope
inc
mov
lcall
add
clc
fldl
dec
add
enter
es
out
pop
inc
or
fdivrl
push
arpl
cs
lock
pop
sbb
add
pop
push
jmp
aas
leave
int3
pushf
mov
mov
aad
std
add
add
mov
dec
test
xchg
popa
cmp
fists
cmp
bound
outsl
xor
push
repnz
add
mov
xchg
adc
and
mov
cmpsl
mov
xor
jg
sbb
and
sti
outsb
shrb
sbb
neg
push
adc
sbb
movsb
add
dec
push
imul
popa
cmp
cmc
push
push
data16
pushf
mov
popa
decl
xor
sub
mov
pusha
adc
push
test
inc
shlb
into
loopne
loopne
xor
shlb
and
shl
lock
std
pop
hlt
aas
mov
jo
es
test
push
xchg
ljmp
mov
mov
pop
add
xor
lret
shl
ficoml
dec
inc
mov
mov
xor
pop
lret
hlt
popa
aad
jb
shrl
inc
xchg
or
xor
push
dec
push
lock
lea
and
jo
out
and
push
aam
cltd
and
loop
sti
inc
cmp
push
mov
je
add
mov
cmp
pop
loopne
hlt
xor
xchg
and
je
add
push
inc
fnsave
jge
outsb
sub
ljmp
jbe
inc
fidivl
mov
ret
pop
xor
cli
rep
ret
aaa
cmp
addb
repnz
pop
add
mov
or
popf
jl
lods
ja
adc
push
or
inc
and
ja
mov
adc
mov
pushl
and
adc
mov
andb
add
dec
test
in
aas
jle
test
insl
jge
inc
insb
xor
mov
push
sub
sub
jl
and
insb
fscale
xchg
hlt
loope
xchg
in
xchg
mov
pusha
rclb
xor
nop
int3
mov
ror
mov
xor
xlat
dec
mov
inc
out
ret
mov
ret
xchg
test
cmp
insl
ljmp
inc
xchg
int
xchg
add
shrb
push
pushl
lea
jno
inc
ljmp
sbb
add
in
test
xchg
mov
add
adc
fdivp
add
add
leave
shlb
out
out
sub
lcall
mov
clc
or
mov
imul
cwtl
popf
stos
mov
inc
jecxz
mov
ljmp
cli
xchg
popl
repz
and
test
lock
cs
mov
int3
out
mov
adc
out
test
shlb
xchg
dec
xor
mov
cmpsb
adc
or
dec
jl
xor
jns
icebp
and
add
lods
rclb
mov
add
inc
mov
or
add
add
dec
aam
and
int
scas
mov
and
test
mov
add
mov
sub
push
cmp
add
aam
sub
xchg
and
cld
and
add
add
or
out
xchg
mov
les
xchg
pushf
int
adc
sahf
mov
lret
leave
pop
push
cld
loop
ljmp
and
and
pop
imul
xor
mov
in
dec
jns
xchg
add
push
aam
lret
scas
rcrl
fbld
out
fcomp
movsl
dec
nop
insb
cwtl
jnp
cli
mov
push
adc
cltd
ja
das
call
jmp
xchg
out
xor
jecxz
idivl
add
mov
pop
sub
add
in
dec
mov
mov
bound
lock
add
jecxz
inc
into
cmpsl
rol
daa
or
xchg
sub
in
cmp
add
test
int3
call
addr16
jo
shrl
adc
rolb
xor
nop
stos
jne
mov
ljmp
addb
add
test
or
inc
lcall
inc
js
insb
stos
push
lret
mov
add
enter
jg
out
fsubrs
sbb
enter
mov
and
mov
cmp
jb
gs
xor
cs
leave
mov
loope
cli
fdivr
outsb
popf
jg
movsl
into
call
pop
ret
in
jno
mov
aam
lcall
cmc
sbb
jnp
hlt
push
fcompl
jmp
or
in
mov
pop
push
xchg
clc
call
movsb
or
or
mov
sub
xor
xchg
mov
clc
and
fmul
mov
aas
iret
inc
mov
add
idivb
xchg
mov
in
xor
mov
popf
repnz
push
cli
rcll
pop
inc
push
nop
loopne
roll
rorl
xlat
les
test
adc
imul
test
int
sub
push
leave
insl
mov
lods
dec
rclb
add
mov
loope
pop
lds
mov
aad
xorl
xor
sub
inc
jo
sbb
mov
inc
mov
jecxz
nop
jle
imul
or
and
cmpsl
mov
shlb
fistpll
sub
or
push
mov
and
jge
xchg
jl
pop
ret
js
unpckhps
psubusb
pop
cmp
add
pop
stc
xorl
mov
test
pop
lock
rcrb
pop
rcrl
fwait
jle
clc
inc
in
rcrb
mov
mov
ds
dec
std
and
cmp
push
negl
xor
mov
hlt
adc
xor
pop
stc
xchg
inc
imul
xchg
push
nop
and
add
jl
pop
movsb
sbb
in
and
cmc
jne
call
inc
sub
fadds
call
and
lods
and
vrndscalepd
aas
xchg
fldl
test
sbb
lods
lea
adc
ja
sarb
or
cwtl
mov
jo
and
les
xor
mov
jle
rorl
add
sbb
sbb
scas
push
mov
mov
imul
gs
repz
hlt
cmp
es
pop
add
cld
add
push
loopne
movsb
pop
inc
pop
shll
shl
pop
cmpsl
leave
sbb
pop
je
adc
orb
div
repz
adc
js
xor
daa
hlt
mov
adc
dec
dec
cmp
sbb
jecxz
jbe
ljmp
lock
xchg
fs
cmp
push
mov
shrl
loope
bswap
fwait
mov
add
mov
cmp
pop
loop
test
orl
mov
jmp
cmpsl
sub
sbb
cld
mov
shrb
into
fidivs
cmp
push
inc
sti
push
pop
in
xchg
cmp
sub
rolb
pop
mov
jnp
and
ja
imul
out
popf
push
les
bound
xor
inc
xor
push
and
sbb
inc
or
into
dec
ja
jle
xchg
mov
js
sarl
or
jne
outsb
out
adc
dec
cmp
gs
jb
adc
pop
in
sbb
or
inc
xor
mov
cli
test
out
mov
pop
and
push
scas
sarb
divb
outsb
sub
push
mov
imul
incb
insl
sbbb
mov
loop
movsb
mov
call
inc
clc
add
lods
out
mov
cmpb
shrb
or
mov
pushf
push
xchg
lds
pop
dec
outsl
shrl
lahf
pop
xchg
imul
cmc
sbb
mov
fdivs
bound
adc
cmp
fdivs
cmc
sbb
cltd
push
xor
in
add
mov
push
cmp
icebp
adc
cmpsl
mov
mov
dec
loop
jnp
jle
pop
xor
dec
pop
cmc
push
or
jl
or
imul
jecxz
xchg
sub
ficompl
mov
push
mov
jmp
fs
sbb
push
push
sbb
in
and
jmp
jl
jo
sbb
push
mov
std
sbb
or
out
mov
lods
dec
push
push
mov
inc
sbb
pushf
push
nop
fwait
aaa
adc
mov
lds
fcoms
loop
sbb
add
add
xor
cmpsb
shr
inc
sbb
cmp
cs
leave
or
gs
mov
addr16
adc
outsl
popa
lods
cs
mov
xchg
push
inc
cli
shll
fldl
jmp
test
cmp
xlat
outsl
mov
jae
xchg
fwait
pop
mov
icebp
push
jae
cli
push
fcmovnbe
inc
cwtl
push
ljmp
pop
pop
dec
inc
mov
fbstp
into
fisubl
cld
es
shrb
addb
insb
sub
clc
or
es
inc
fmuls
mov
rorl
aad
sbb
lods
pop
xchg
aam
fdivrp
push
jne
add
mov
mov
xlat
int
pushf
pop
aam
leave
insb
je
mov
xor
cmp
jle
pop
fisubs
xchg
clc
mov
scas
sbb
rcrb
test
sahf
ret
and
push
mov
cmpb
and
aaa
imul
xchg
in
jnp
sub
aad
mov
mov
aaa
mov
je
inc
pop
fcompl
xchg
cli
rcrb
jo
loopne
pop
cmpl
das
push
and
mov
sbb
iret
aaa
nop
pusha
shll
adc
pop
popl
shl
cwtl
mov
icebp
lds
adc
adc
dec
fiadds
shr
add
or
stc
xchg
inc
call
and
sbb
out
js
cwtl
add
movsb
paddusb
fildll
in
out
adc
in
inc
jl
lods
mov
fsubs
pop
fadd
imul
repnz
or
in
sbb
dec
ja
inc
movsb
pop
lahf
sbb
sarl
sub
sahf
sub
inc
outsb
fwait
outsl
sbb
fmul
mov
inc
sub
pop
call
pusha
or
dec
repnz
daa
add
fidivrs
lret
sbb
scas
mov
jno
icebp
add
inc
loop
push
dec
jno
jle
aam
mov
cmc
push
push
ficoms
lds
cwtl
sub
cmp
sub
jle
loop
push
scas
sub
add
push
mov
scas
in
pop
outsl
dec
mov
adc
pop
shl
cmpsb
mov
add
pop
dec
xorb
xor
scas
sub
xchg
aam
emms
jmp
dec
lods
lds
sbb
repnz
ljmp
in
jno
mov
outsb
xor
mov
push
ss
jno
icebp
popa
adc
xchg
inc
adc
loop
or
cmp
mov
ficoml
or
pop
mov
orb
inc
push
arpl
push
icebp
rolb
movsb
push
jp
cli
js
test
add
push
push
inc
fwait
incl
in
inc
add
lcall
int3
cmpsb
mov
fs
aaa
inc
adc
xchg
rorb
jge
movsl
call
or
cmp
mov
sbb
mov
cmp
pushl
mov
xchg
mov
pop
ss
rorb
sarl
cmpsb
jge
mov
inc
add
xchg
adcb
mov
xchg
icebp
mov
outsl
mov
mov
pop
or
lret
andb
test
sub
data16
push
cli
jb
ud2
rorb
push
mov
mov
adc
jno
loopne
inc
or
push
jle
lods
arpl
add
adc
xor
mov
sub
mov
lock
shrb
dec
lahf
fidivrl
scas
adc
ret
loopne
mov
stc
out
rol
adc
pusha
pop
std
cmp
mov
push
push
ja
hlt
or
mov
je
mov
andl
testb
adc
cli
addr16
test
mov
rcl
or
jge
jge
and
out
xchg
inc
pop
xchg
outsb
jge
pop
or
pop
lea
push
add
loopne
sub
mov
jae
add
mov
daa
cmpsb
push
and
mov
sbb
sbb
push
jle
aaa
xchg
sbb
fs
pop
lret
movsb
xchg
adc
push
icebp
idivb
test
push
pop
sbb
mov
push
push
jg
push
push
pop
xchg
push
mov
xor
and
push
push
lahf
mov
xchg
clc
scas
loop
cmpsl
mov
add
les
inc
pop
mov
clc
add
push
sbb
aad
sarb
bound
imul
mov
popf
inc
movsl
pop
mov
sub
sarl
stos
push
and
xor
mov
push
int3
add
cmp
inc
pushf
nop
decb
add
roll
mov
pop
jnp
dec
call
sbbl
jg
xchg
inc
inc
dec
test
mov
insl
loopne
xor
inc
mov
mov
mov
movsb
pop
lock
push
lahf
ja
enter
adc
test
cmp
jmp
sub
add
or
cmp
cmp
sub
push
push
adc
or
nop
add
sub
mov
icebp
roll
cmp
adc
pop
insb
outsb
add
mov
adc
flds
test
adc
add
sub
mov
das
ljmp
stc
and
imul
xor
sti
push
loope
adc
add
loopne
mov
or
in
stos
and
add
jp
jecxz
stos
das
jmp
aaa
popl
movsl
fisttpll
adc
mov
inc
mov
xor
adc
dec
test
insl
add
adc
stos
cs
inc
fiaddl
imulb
clc
lret
icebp
cmpb
repnz
js
hlt
loope
pusha
dec
cmpsl
jne
subl
jg
repz
fists
into
xchg
cmp
inc
mov
data16
or
adc
push
add
je
lea
enter
sbb
jmp
push
jg
fsubrp
sbb
rclb
das
clc
clc
add
mov
xchg
jno
in
nop
lock
rorl
test
mov
xor
add
jle
jl
mov
xor
add
loopne
mov
lock
cmp
fsubl
jecxz
push
gs
inc
inc
fucomip
push
ret
add
sub
cmc
insl
cmp
arpl
mov
clc
add
pusha
outsb
lods
imul
sahf
jne,pt
insl
sbb
mul
fists
adc
rclb
pop
bound
xlat
adc
pop
rorb
lock
dec
push
cltd
mov
mov
xchg
and
fmull
icebp
dec
xchg
lods
mov
shl
pop
inc
movsb
xor
lods
shlb
or
jne
add
lods
shrl
sub
les
repz
jge
pop
loope
cwtl
es
subb
dec
ljmp
xchg
xor
mov
add
sbb
add
mov
outsb
movsl
aad
clc
ljmp
pop
push
push
movsb
jg
inc
scas
mov
xchg
jg
insl
adc
shlb
pop
mov
aas
sub
add
dec
lcall
inc
push
std
test
lret
fbstp
cmp
xchg
or
or
decb
insb
jmp
mov
sbb
lods
pop
pop
mov
xor
out
mov
pop
out
add
sahf
or
inc
jp
je
add
out
add
lock
pushf
int3
adc
call
insl
pushf
mov
js
mov
add
or
lcall
hlt
mov
or
or
jmp
xor
popa
dec
movsb
or
sahf
add
jns
sbb
jmp
jp
mov
dec
or
or
or
xchg
inc
inc
or
roll
cmpsb
xor
pop
mov
js
mov
mov
iret
cli
pop
add
cmp
add
xchg
clc
or
xorl
cli
add
mov
sbb
les
pop
cs
dec
push
push
das
or
mov
ljmp
pop
adc
std
sub
xchg
stos
pop
adcb
sub
add
inc
and
mov
ja
pop
shrl
push
and
mov
daa
xor
push
shlb
push
push
inc
inc
pop
add
daa
incb
and
js
push
mov
adc
clc
pop
imul
pop
adc
clc
cmp
pop
ror
adc
das
lock
inc
mov
lods
js
xchg
sbb
sbb
fmuls
xor
push
mov
mov
outsb
hlt
mov
std
enter
xor
inc
add
sbb
pop
and
decl
xor
pop
xchg
pop
and
xor
test
mov
adc
add
adc
mov
inc
adc
push
mov
movsl
ret
pop
or
push
and
push
inc
icebp
hlt
inc
push
cmpsb
push
and
push
push
xchg
adc
ja
adc
and
mov
add
in
mov
xchg
xor
scas
push
jl
mov
rorb
push
repnz
lds
jle
mov
xchg
push
sbb
cmp
insb
jp
sahf
mov
inc
adc
pop
sub
dec
jle
mov
in
inc
push
add
jno
stos
cld
pushf
inc
sbb
push
push
jne
inc
adc
push
sahf
sub
js
mov
push
lret
into
xor
scas
lcall
cli
inc
inc
jge
inc
and
mov
in
and
cmp
lds
xlat
jl
in
xor
jg
decb
cld
inc
mov
out
jo
sbb
sub
pop
inc
test
dec
or
ret
add
adc
enter
inc
and
dec
xor
ljmp
lock
jnp
mov
add
aam
mov
imul
cwtl
dec
movsb
inc
aaa
xchg
and
jp
add
test
sub
mov
inc
mov
inc
push
sub
add
loop
pushf
mov
jg
sarb
and
mov
jne
fisubs
cmpsb
push
in
mov
popf
jge
ret
into
pop
cs
and
lcall
js
stos
mov
and
int
and
loop
or
pusha
cli
or
sub
in
xchg
stos
xor
mov
das
pop
pop
and
enter
mov
subl
jl
sbb
movsl
push
mov
rcrb
xor
fisttps
fnstenv
dec
pop
loope
shl
gs
lods
pop
or
sbb
mov
jo
int
adc
fdivl
jmp
xchg
sub
xlat
rcll
mov
rclb
xchg
repnz
mov
jg
jmp
xchg
or
lcall
jl
clc
jmp
cli
out
adc
loopne
add
mov
mov
cmp
test
fs
inc
outsl
nop
inc
mov
xchg
push
enter
inc
push
pop
mov
pop
pusha
add
dec
cwtl
mov
cmp
in
cmp
pop
and
rclb
push
mov
pop
jp,pn
jle
mov
add
jo
ret
xchg
imul
push
mov
adc
xchg
es
xorb
rcll
sbb
outsl
aas
xchg
addb
xchg
cmp
imul
jnp
cmc
cs
pop
mov
repz
ret
add
loopne
pusha
mov
or
frstpm(287
add
mov
dec
jo
movsl
mov
cwtl
and
xchg
clc
fbstp
sbb
lock
loopne
mov
movhps
sahf
outsb
rolb
mov
mov
mov
das
movsb
mov
mov
xchg
mov
jg
ds
cld
and
in
add
dec
or
out
jmp
dec
das
aam
sbb
bound
sub
ss
in
decb
mov
or
dec
bound
std
testb
sbb
pusha
cmp
stos
and
jge
out
mov
test
adc
add
and
jb
cld
fnstsw
mov
xor
push
jp
movsb
dec
aaa
ljmp
push
and
adc
shlb
adc
icebp
orb
loopne
cmpsb
pop
cld
das
push
fs
sub
cld
stos
mov
popa
sub
in
sub
dec
les
cmp
jg
loope
fwait
adcb
data16
int3
addb
push
push
push
jb
adc
xor
mov
or
inc
cli
mov
jo
fs
loope
incb
adc
es
add
adc
lret
clc
inc
mov
fbstp
jg
ret
mov
inc
dec
lsl
out
push
push
int3
orb
lock
inc
fisubs
pop
inc
push
popa
stos
fldt
jp
testb
add
test
or
xchg
dec
jo
test
iretw
mov
lods
lret
or
jnp
mov
outsl
jbe
sub
or
adc
scas
roll
xchg
decb
sub
inc
cmc
dec
lret
pop
insl
cld
fdiv
sub
mov
rcrl
add
push
out
outsl
inc
inc
mov
jbe
psraw
aas
enter
lods
dec
mov
sub
push
int3
and
jb
pop
cld
or
js
fwait
orb
inc
jg
sub
rol
pop
lahf
dec
mov
mov
jnp
cmp
gs
cwtl
cmp
or
jl
inc
in
popf
adc
icebp
mov
mov
fdivrl
ds
mov
loop
faddl
jnp
mov
sbb
stos
fldl
add
or
sti
mov
xchg
xchg
mov
out
jo
mov
mov
test
adc
inc
in
pop
push
xchg
sbb
add
add
out
cmp
pop
insb
test
inc
push
lock
push
arpl
fildll
pop
sbb
xchg
jmp
fcom
inc
repnz
jae
outsl
mov
test
out
or
in
mov
mov
jnp
push
fcomi
mov
mov
push
jl
roll
jb
aam
push
mov
bound
cli
adc
xor
fcompl
fwait
stos
in
lock
test
mov
ja
jo
popa
add
jle
imul
subl
dec
jnp
xchg
cmp
push
sahf
loop
push
and
lea
ret
xchg
xchg
cmp
mov
jle
rcll
or
fsubl
adc
inc
mov
sbb
pop
or
jle
xor
out
stc
mov
adc
jmp
pop
lock
xor
test
das
clc
mov
mov
mov
or
mov
and
repnz
jg
cmp
xor
popa
jl
jle
scas
inc
mov
adc
and
pop
jg
jbe
mov
incb
mov
dec
stos
stos
jp
jecxz
mov
pop
xchg
loope
rolb
add
add
imul
and
sarb
enter
mov
dec
sub
jae
daa
flds
sahf
push
push
inc
or
pop
bound
pushf
mov
and
adc
insl
popf
add
popl
enter
fwait
inc
std
jge
addr16
pop
cmp
or
les
sub
add
and
lock
adc
stos
mov
dec
loopne
daa
fwait
push
fs
insb
negl
adc
out
xchg
imul
mov
mov
mov
or
enter
mov
in
cld
hlt
mov
ljmp
in
insl
adc
lea
push
clc
or
pop
xor
add
add
pusha
fs
addr16
loop
clc
adc
cld
dec
sbb
sbb
out
mov
cs
inc
push
mov
mov
inc
sbb
cwtl
xor
xchg
leave
icebp
aad
sbb
dec
std
fisttpl
sub
sbbl
inc
sti
push
and
mov
mov
push
adc
add
mov
add
sahf
xor
dec
add
pop
pop
shlb
dec
and
shrb
mov
js
mov
mov
jno
inc
ss
loope
or
shrb
mov
adc
std
jmp
sbb
push
or
xchg
mov
pop
xchg
or
mov
sahf
adc
push
ret
dec
dec
call
sbb
sar
outsl
fbld
jbe
jp
nop
call
gs
pop
inc
rcrl
out
mov
xchg
fwait
lods
sub
movsb
xchg
xchg
lock
pusha
jecxz
mov
mov
clc
es
ljmp
mov
dec
sbb
mov
ja
mov
push
nop
aas
test
xor
lods
inc
shlb
add
pop
mov
push
mov
sub
push
mov
jecxz
add
push
xorl
xor
or
jp
jle
pop
in
dec
push
push
shlb
or
push
or
in
cmp
and
add
clc
push
dec
and
mov
mov
jne
in
adc
sub
xor
mov
loopne
fildll
add
jbe
push
lds
sarl
pop
popa
sahf
mov
or
pushf
add
or
shrb
mov
shlb
fisttpl
in
pop
mov
xor
adc
js
xor
aas
jmp
push
and
out
cmp
xor
pop
popa
mov
push
cmp
pusha
adc
add
ret
inc
or
cmc
out
dec
cs
js
lret
cmp
xlat
in
add
lods
testb
mov
shlb
jp
repz
dec
adc
mov
add
push
sub
push
lret
ds
mov
mov
insb
mov
fistpll
and
subl
mov
in
push
ret
or
mov
sub
jmp
sub
movsb
or
and
sbb
xchg
xchg
adc
fstpl
pop
or
fs
and
lods
dec
xor
les
push
or
jo
fs
fmuls
push
pop
fldenv
xor
xor
push
mov
out
scas
orb
dec
fcompl
or
mov
push
mov
je
lock
sbb
mov
ds
aaa
xor
cld
jl
jmp
pop
jae
icebp
pushl
fisubl
xadd
iret
clc
add
in
add
xor
pushf
mov
loopne
sub
sub
cmpsb
lock
mov
or
rorb
sbb
ret
mov
xor
mov
mov
cmp
sbb
mov
pop
sub
js
xor
aad
jp
ljmp
inc
movsl
push
movsl
pushfw
cli
ret
add
cwtl
push
jge
loopne
aaa
shlb
xchg
xor
pop
push
dec
out
adc
shl
sbbb
rcrl
addb
gs
insl
push
filds
inc
loope
lods
adc
adc
xchg
pop
pusha
adc
xchg
push
add
and
repnz
adc
cmc
fucomip
gs
xor
pushf
nop
sub
mov
xorb
adc
test
popf
inc
nop
push
or
lea
add
ss
movsl
cmpl
push
test
pop
adc
mov
jl
mov
mov
jle
mov
xchg
or
cmp
mov
mov
xor
popf
push
adc
in
mov
or
dec
sbb
and
call
lcall
adc
mov
rcr
inc
call
ret
pop
nop
or
push
fidivrs
movsl
push
xor
push
push
push
sub
mov
mov
stos
pop
inc
jb
inc
outsl
mov
push
adc
pop
sbb
dec
and
int3
les
clc
rcl
add
sub
mov
test
clc
pop
dec
jl
loopne
sub
int
and
scas
and
mov
mov
lock
data16
outsl
nop
lahf
cmpsb
mov
mov
sub
xchg
test
push
jp
mov
push
daa
jp
sahf
adcb
cmp
add
add
dec
jns
add
ljmp
or
push
xor
loop
jg
sarb
mov
shrl
push
scas
and
xchg
les
sub
inc
outsl
xchg
hlt
shl
xchg
ficompl
lods
fisubl
insl
pop
cld
sbb
mov
pusha
xchg
outsb
rcrb
adc
sub
out
sarb
fldl
mov
lods
pop
stos
or
push
adc
in
ds
movsl
lea
out
pop
mov
adc
mov
sbb
test
push
shl
xorb
orb
or
dec
movsl
cmp
jno
dec
ret
adc
popf
addl
mov
imul
les
add
data16
push
ret
xchg
xchg
test
mov
and
insb
cmp
mov
lods
mov
jg
ds
lret
jecxz
jecxz
add
push
or
int3
in
xor
sbb
cmpsl
call
jnp
mov
jge
mov
sub
pop
jg
dec
pop
sahf
movsl
pop
shl
jbe
add
aam
mov
test
mov
jo
in
rcrl
pop
pushf
jg
std
loope
push
test
jae
mov
pop
cltd
pop
sub
inc
stos
cmp
dec
fildl
add
test
mov
imulb
jbe
push
mov
push
xor
fistpll
pop
and
mov
mov
mov
and
icebp
lcall
sbb
push
loope
stos
push
lods
inc
clc
iret
stc
lock
and
sbb
dec
pop
push
push
pop
insb
loopne
add
das
pop
incb
mov
push
test
inc
mov
jbe
ds
stos
jne
loop
sahf
aaa
hlt
mov
pop
test
lods
cmp
push
fbstp
dec
sub
js
mov
push
inc
xchg
popa
pop
data16
sub
out
adc
cltd
enter
or
xchg
jae
dec
ret
jl
int
or
add
dec
or
fbstp
fistps
mov
mov
dec
push
loope
or
pop
popa
jle
pop
shld
dec
std
add
movsl
rclb
mov
pop
sbb
and
and
and
out
outsb
out
mov
insb
insb
push
lods
rcrl
rorb
and
loopne
mov
ror
push
insl
jno
lret
insb
aam
test
sub
addl
movsb
mov
in
pop
repnz
cmp
xchg
xchg
sbb
push
sti
sbb
pop
mov
aas
xor
pop
xor
pusha
shl
mov
inc
mov
outsb
and
out
push
fs
lret
dec
mov
les
push
pusha
add
hlt
mov
pusha
mov
mov
cld
xlat
lock
jmp
inc
and
inc
pop
jns
int
push
out
add
sub
mov
fisttpll
nop
pusha
sub
jmp
add
shll
mov
mov
xor
int3
sub
ret
dec
ja
or
mov
inc
pop
dec
jno
ja
cwtl
lcall
sub
das
dec
cld
adc
orb
lret
jecxz
mov
test
std
test
hlt
arpl
in
mov
sbb
cli
pop
or
sbb
ret
xchg
xchg
in
or
sbb
lods
sbbl
shl
or
outsb
movsb
aam
sbb
add
daa
lock
dec
pop
aam
push
dec
ljmp
inc
push
mov
emms
std
clc
lret
dec
test
add
dec
add
xor
nop
xor
xchg
mov
jne
cmpl
mov
sbb
loopne
sub
xchg
inc
movsb
cs
mov
inc
std
and
stos
add
in
cmpsl
mov
and
mov
mov
push
pop
inc
jp
lods
adc
inc
cmp
dec
adc
clc
dec
ljmp
lcall
dec
and
loopne
mov
in
dec
mov
sub
cs
cld
inc
sub
nop
push
cmp
push
lods
and
dec
jg
je
mov
les
jno
scas
fidivrs
add
xlat
xchg
rcr
adc
dec
jno
cmpsb
jg
push
mov
or
lock
sar
xlat
adc
inc
mov
int3
mov
push
jge
cli
jge
ret
sub
ror
hlt
and
or
pop
cmp
cmp
cld
loopne
mov
in
repnz
js
xchg
incb
dec
dec
inc
sub
lods
clc
push
lock
cli
das
js
stc
and
addb
out
sub
or
sbb
fistpll
cmc
rcl
mov
in
pop
popa
push
aas
sbbl
adc
xchg
xchg
cli
inc
pop
scas
add
hlt
call
or
roll
sub
fdivl
xor
mov
mov
push
mov
and
repz
mov
dec
mov
leave
pop
movsl
clc
xchg
repz
mov
imul
lods
mov
jbe
add
mov
inc
mov
inc
add
xor
test
add
fmuls
sub
pusha
add
adc
loop
out
popa
dec
jp
xchg
test
xlat
sbb
xor
xor
pop
fiadds
or
ficoms
jae
xchg
adc
inc
fmuls
sub
call
xor
test
pop
push
ljmp
push
ds
sti
pop
in
and
lock
pop
inc
jns
ficoms
mov
and
roll
cld
push
jmp
das
les
push
jmp
stos
icebp
jl
jbe
lods
inc
add
push
inc
add
xchg
xor
out
test
add
cmp
cmp
cmp
cmp
rcrl
icebp
stos
out
mov
jmp
into
add
add
mov
mov
jecxz
sub
dec
pop
mov
mov
jo
adc
fnstcw
pop
mov
cmpsl
cmpsb
mov
mov
push
mov
ret
lds
pushl
dec
push
int3
cmpsb
nop
or
or
add
pop
ds
mov
out
jbe
lock
lret
into
pop
sbb
xor
fstps
add
add
lock
faddl
and
xchg
mov
push
pop
incl
enter
ret
inc
cmpsb
dec
or
decl
fmuls
gs
aaa
mov
xchg
lock
les
sub
push
mov
push
mov
lret
or
loop
rcr
pop
push
mov
scas
cwtl
test
imul
mov
xchg
and
dec
stc
cmp
ret
add
data16
mov
cmp
sbb
inc
lret
and
push
add
rcl
fdiv
or
inc
mov
fstl
inc
pop
daa
stc
sbb
adc
jb
jmp
cs
or
pop
enter
add
rcrb
xchg
sbb
clc
addl
push
inc
pop
pop
into
sub
xor
mov
ret
sbbb
pop
leave
test
ret
push
or
movb
decl
jecxz
adc
inc
cmpsb
shlb
sub
pop
mov
mov
rolb
jmp
push
inc
and
iret
mov
sub
mov
mov
rcrl
inc
or
push
enter
iret
gs
dec
hlt
in
subl
stos
adcb
cmp
cmp
fwait
mov
fbld
pop
jg
lcall
adc
add
mov
clc
push
jl
cmp
mov
leave
cmp
test
lea
sub
std
and
add
add
push
fists
not
adc
scas
add
adc
testb
call
shrl
and
pop
pusha
sahf
add
sub
adc
jg
lock
cld
mov
cmp
loop
pusha
mov
sti
adc
dec
pop
nop
add
add
xchg
mov
push
out
pop
shlb
test
inc
or
add
cli
nop
dec
rolb
insl
mov
dec
push
ret
enter
rclb
sbb
cmp
hlt
lods
rcrb
cld
mov
mov
sub
or
add
push
or
mov
in
xlat
add
sbb
mov
or
push
cld
lcall
addr16
jle
xor
sub
mov
clc
inc
shlb
sbb
cli
lods
inc
jne
pop
scas
jp
les
xchg
cs
add
pop
cmc
rorb
aam
push
rclb
and
or
jne
dec
pop
cmc
es
pushl
popa
incl
aas
jmp
pop
pop
paddd
or
push
ret
sahf
loopne
psubd
pop
dec
insl
cwtl
adc
pushf
lret
pusha
repz
pop
dec
stc
shll
enter
mov
and
adc
rcrl
cmpl
cmc
jmp
das
and
sub
jl
mov
push
adc
and
int
and
aam
imul
ret
push
aad
dec
fdivl
jbe
in
call
cli
xchg
insl
cmp
cmp
cli
ficomps
mov
mov
inc
lock
enter
imul
jge
outsl
sbbb
or
in
or
pop
mov
push
roll
inc
fcoml
mov
leave
ds
and
jp
push
lcall
test
lret
xor
rorb
adc
out
xchg
mov
push
leave
jmp
jns
sbb
jge
test
fiadds
push
std
insb
sbb
in
or
sub
mov
jl
add
lods
pop
or
mov
roll
add
cmp
aad
popa
popw
outsb
ja
pop
cmc
jg
fdivrs
test
mov
or
cmp
test
mov
adc
daa
push
aas
pop
adcl
mov
repnz
mov
add
aam
push
inc
or
in
loope
outsl
and
mov
or
xchg
or
pusha
adc
lods
xchg
incl
adc
and
mov
mov
xor
xchg
dec
or
push
xchg
xchg
ffreep
xchg
test
fmuls
xorb
jg
xchg
jne
cld
sub
adc
cwtl
outsb
dec
aam
inc
mov
lods
cmp
lods
ret
sahf
jle
out
inc
lods
fsubrl
and
pop
cld
jg
test
push
hlt
adc
in
aaa
sahf
sub
pusha
pop
fwait
xor
jg
push
jnp
or
les
xor
mov
xor
sbb
mov
iret
js
test
hlt
aaa
bound
jl
pusha
mov
aad
insb
insb
xchg
and
loopne
mov
mov
std
or
push
fldcw
pushf
sbb
cmpsb
fbld
ret
out
les
jecxz
ucomiss
jne
shrb
pop
jo
rcrb
icebp
mov
push
sub
push
js
mov
xor
ljmp
push
mov
call
xor
lsl
fsubs
sbb
dec
add
ja
repnz
nop
dec
xchg
shrb
call
stos
add
jb
mov
shr
adc
sbb
cmpsb
jle
cltd
lret
mov
pop
std
and
mov
xor
ljmp
sub
rorb
and
push
stos
bound
ss
mov
or
in
lea
cld
pop
jbe
add
lcall
or
cmp
fmulp
sub
pop
add
add
ljmp
or
loop
mov
aaa
mov
mov
jo
mov
hlt
enter
add
mov
sar
mov
orb
xlat
je
xor
jo
shll
call
dec
and
and
inc
xor
add
test
xor
xor
das
push
ja
push
dec
or
sbb
push
xchg
add
cmp
rcr
inc
das
in
int
jmp
push
xchg
or
mov
mov
dec
push
fstl
ret
fldt
inc
stos
imul
call
addr16
add
test
adc
jae
cmc
out
jnp
xor
imul
movsl
pop
jbe
int3
or
add
mov
fsub
ret
xor
mov
lock
lret
js
lods
loope
outsb
icebp
cmp
stos
mov
pop
pop
icebp
pop
mov
sbb
sub
xchg
inc
adc
pop
ret
roll
ss
xorl
add
outsb
and
lock
jb
loope
push
inc
pushf
adc
and
push
jg
fs
orb
ds
mov
and
mov
add
push
arpl
out
jb
mov
inc
call
xor
inc
pop
xchg
inc
sbb
lods
dec
sub
adcl
mov
xchg
divb
movsb
fisttpll
push
les
hlt
addr16
out
push
and
cld
rcl
mov
mov
das
enter
aaa
cli
rclb
in
ljmp
adc
pop
test
and
xchg
loop
pop
mov
adc
outsb
hlt
outsb
cld
push
add
pop
push
mov
or
sub
andb
or
lret
mov
fsubp
dec
jno
sbbb
mov
sarb
jne
push
clc
loop
and
dec
xchg
mov
aad
inc
into
jns
push
aaa
movb
or
cltd
fisttps
pop
sbb
pop
fsubp
push
popf
mov
into
ret
and
pop
in
clc
dec
cmp
out
leave
mov
stos
fidivrs
lret
mov
sbb
aaa
add
push
testl
mov
andb
sbb
pop
test
and
ret
pop
addb
push
dec
ret
or
ficompl
inc
mov
mov
or
sub
xor
sub
in
loopne
dec
and
sbb
stc
ret
fadd
push
push
stos
arpl
inc
sbb
push
repz
jne
test
cld
das
inc
xchg
mov
dec
or
push
xchg
inc
pushf
push
or
cmp
lods
inc
ror
mov
test
jo
inc
sub
imul
cmp
xor
push
add
into
jbe
lahf
and
sbb
pop
mov
fldt
fimull
adc
sub
sub
mov
xor
test
ljmp
ljmp
and
push
inc
inc
jns
jg
int
or
cmp
pop
cmpsb
inc
xchg
cmp
adc
insb
sbb
push
rcrl
jb
fmull
pushaw
mov
add
ljmp
stos
push
jecxz
add
mov
pop
aad
cmp
add
cltd
cli
or
pusha
shl
pop
sbb
xchg
in
lret
pop
int
cs
test
popf
cltd
addb
push
int3
lods
dec
sub
pushf
push
outsl
xor
mov
lock
xchg
or
xchg
movsb
mov
adc
ds
sub
pop
inc
dec
mov
mov
stos
mov
mov
scas
clc
jnp
lock
les
in
aam
adc
pop
add
test
or
pop
leave
push
adc
push
mov
mov
push
inc
and
adc
add
rcll
mov
aas
rorb
add
mov
sub
loopne
les
mov
ljmp
jg
jne
sbb
lds
sbb
pop
hlt
int3
and
pop
mov
es
in
mov
jp,pn
xor
xchg
clc
repz
xor
sti
mov
out
gs
mov
add
mov
pop
arpl
roll
mov
ret
mov
int3
hlt
movsl
pop
iret
addr16
cmp
dec
and
icebp
rorl
mov
icebp
sub
or
test
jg
jle
push
out
je
inc
insl
or
sub
daa
or
mov
sub
mov
mov
jnp
fwait
push
add
shlb
sub
test
inc
adc
inc
add
clc
push
insb
ret
lock
arpl
add
out
mov
sbb
push
es
jbe
inc
popf
scas
sub
filds
cmp
dec
mov
test
and
mov
sahf
lret
testb
inc
and
test
outsb
ret
cld
jg
ds
jno
pop
jnp
lock
and
fldt
fbstp
and
sti
jecxz
addr16
push
inc
mov
lods
in
arpl
mov
ret
fbld
movsb
xchg
mov
mov
sti
push
pop
int
ficompl
aaa
pop
arpl
jle
inc
add
shrb
adc
pop
cs
inc
cs
push
dec
mov
rcrl
nop
inc
ficompl
loop
cmpsl
jo
cli
add
ret
adc
mov
sub
add
lret
mov
shll
aas
daa
dec
sahf
push
dec
je
out
sbb
fdivrs
pop
fidivrs
in
in
loop
ss
repz
icebp
inc
add
xorl
pop
cvtpi2ps
scas
les
mov
add
jo
dec
sbb
or
add
fwait
mov
jmp
add
in
push
xor
jo
or
int
sbb
cmp
push
in
sbb
test
pop
push
jbe
pushf
cmp
xor
mov
jae
shrl
and
dec
mov
int3
fadds
ja
pop
sbb
popf
add
pop
pusha
inc
shl
jmp
jecxz
test
in
insl
sbb
call
mov
dec
testl
pop
push
clc
pop
or
push
add
and
rclb
mov
call
out
pop
pop
inc
mov
mov
icebp
dec
xor
adc
xchg
in
adcl
nop
mov
or
or
int3
xor
jle
mov
xor
sti
xchg
mov
scas
fs
push
dec
ret
lock
cmpsl
adc
jecxz
xor
int3
add
xor
dec
jge
cmp
or
ret
mov
das
dec
jle,pn
mov
ficoml
ja
enter
mov
jae
ja
mov
leave
mov
pushf
xchg
orl
pop
mov
loop
xchg
mov
int3
decl
lods
andb
ss
add
ja
das
pop
cli
stos
jg
push
inc
fs
outsl
sbb
adc
push
stos
aas
dec
in
adc
loopne
ss
xor
and
inc
cld
addr16
and
cmp
shl
cltd
pusha
rclb
mov
mov
sbb
dec
push
sub
mov
or
xchg
add
fmull
ljmp
fwait
adcb
roll
out
sub
ret
fwait
enter
dec
call
add
insb
pop
sahf
xchg
push
cwtl
mov
sbb
push
ficompl
cld
sbb
push
xor
inc
or
popa
out
imul
jp
ja
addr16
xor
scas
movsb
scas
movb
adc
shlb
jmp
adc
sub
ja
xor
std
fsubp
push
pop
push
or
push
loopne
insl
loope
mov
mov
jle
or
lret
pop
sbb
or
mov
enter
pop
std
add
ret
jmp
add
stos
mov
ja
cld
push
movsl
fiadds
sbb
cmpsb
inc
inc
je
xchg
les
mov
or
add
enter
orb
out
test
adc
jnp
add
loope
lahf
push
lret
arpl
cli
clc
dec
lret
sbb
mov
orb
lret
mov
aas
pop
cmpb
ss
shlb
xor
in
or
and
add
inc
xchg
adc
push
mov
scas
movsb
bound
push
cld
popa
rorb
mov
push
ljmp
xchg
mov
mov
push
mov
pop
hlt
int
jmp
out
dec
subb
in
dec
jg
rolb
jge
mov
lahf
mov
adc
mov
sbb
xor
test
fwait
testb
int3
cmpsb
shrb
xor
lret
dec
adc
icebp
xchg
push
shll
bound
inc
dec
andb
dec
adc
sub
push
fstpt
or
fwait
decb
push
add
sbb
icebp
outsb
fldenv
adc
cli
sub
std
pop
mov
push
or
outsb
clc
push
xchg
in
scas
xor
test
sub
and
addr16
scas
dec
out
lods
fwait
push
mov
rcll
mov
cmp
dec
loopne
movsl
aam
mov
dec
pop
push
repz
cmp
mov
jle
jmp
push
add
jmp
and
sbb
push
loope
or
dec
add
pushl
sbb
xchg
test
fs
ret
mov
in
inc
mov
inc
adc
lock
insb
xor
sbb
cmp
add
pusha
sub
movsb
adc
mov
xor
adc
pop
jo
shrb
rorb
andb
mov
icebp
xorb
into
js
shll
loope
stc
into
and
mov
sub
iret
cmpsb
mov
fildll
sbb
loope
mov
xor
jo
je
sbb
add
pop
inc
xchg
add
clc
aad
clc
fsubp
dec
and
xlat
icebp
pop
pop
icebp
lret
scas
cmpsb
out
ds
out
xchg
add
incb
pushf
sahf
mov
jnp
mov
std
xchg
jg
cmp
outsb
jg
sbb
std
add
jmp
je
push
aaa
scas
pop
or
aaa
jne
out
add
aad
xor
jmp
cld
rcrb
push
pop
arpl
mov
push
insb
cli
aaa
sub
push
inc
dec
sbb
add
cmc
scas
imul
rclb
jg
cld
inc
fstpt
data16
loope
pop
or
hlt
jne
push
pop
jbe
arpl
mov
loop
cmp
stos
mov
and
dec
mov
sbb
sbb
cmp
push
icebp
imul
mov
mov
test
dec
adc
mov
outsl
subb
aas
xchg
in
dec
xor
hlt
pop
and
test
push
cmp
shlb
push
icebp
sbb
push
cli
add
or
add
and
loop
push
xor
push
popa
xchg
mov
les
dec
jbe
xchg
test
push
or
pop
adc
and
xchg
scas
inc
loop
or
fwait
jle
jae
into
imul
or
and
push
rcrl
pusha
xchg
dec
cs
stos
push
pop
das
rorb
and
dec
add
pop
jne
inc
ljmp
jb
jo
stc
sbb
test
cmp
mov
lea
cmp
lcall
xchg
mov
mov
sbb
mov
mov
jecxz
dec
pusha
sub
or
call
out
xor
out
dec
es
sarl
jb
int3
movsb
inc
arpl
js
outsb
fcomip
cmp
test
jecxz
test
subb
sub
mov
mov
jecxz
sub
xor
flds
jb
or
packssdw
fisubl
xor
jl
or
pushf
fisubs
lds
mov
test
cmp
dec
es
xchg
les
dec
lcall
add
sbb
or
subb
jbe
cmp
mov
rcll
cli
je
insb
inc
test
cmp
imul
leave
test
cmp
mov
push
jl
or
ss
loop
cli
data16
aam
xor
pushf
inc
mov
aam
movsb
imul
push
adc
ss
add
sub
mov
sub
dec
cmp
push
ja
and
cmp
or
add
mov
mov
inc
lock
pop
rcrb
mov
out
mov
cmpsb
jl
jle
sbb
stos
jne
xchg
add
push
and
in
notl
jne
aam
loope
xchg
fwait
insl
mov
or
std
add
dec
enter
sti
jbe
mov
sbb
test
loope
or
daa
push
mov
clc
mov
sub
pop
mov
and
imul
mov
push
cmpsb
push
xchg
nop
xor
push
jle
jb
cmpsl
push
add
in
ljmp
movsl
loopne
loop
adc
xor
loopne
xor
inc
jge
or
notb
stos
xchg
jle
outsl
pop
push
loopne
jle
cld
xchg
push
push
hlt
add
cmp
test
cld
jp
mov
or
clc
pop
mov
sbb
dec
and
imul
adc
mov
and
insl
push
mov
stos
sbb
or
test
imul
fs
mov
loope
mov
push
outsb
cli
or
decl
lret
ja
icebp
push
js
mov
mov
jne
mov
adcb
cmp
inc
loope
std
pop
push
mov
adc
fisubs
xchg
mov
adcl
mov
aam
or
mov
inc
sbb
pusha
fcomi
pusha
mov
mov
and
inc
int
dec
sbb
jg
push
cwtl
xchg
mov
imul
xchg
mov
test
sub
ljmp
test
push
add
or
les
or
roll
mov
sub
jp
mov
or
mov
mov
or
xchg
test
nop
adc
inc
jmp
push
cld
sbb
add
mov
cwtl
inc
xor
out
mov
or
dec
inc
shll
mov
mov
sahf
fldenv
ljmp
push
jp
je
push
mov
bnd
fbld
push
pop
push
loop
xchg
fisubrs
xchg
test
and
rcrb
sub
and
or
call
fldenv
aaa
in
scas
adc
mov
js
push
sub
mov
arpl
insb
gs
aaa
and
inc
cmp
vmaxsd
scas
fwait
adc
or
cmp
inc
lock
shl
pusha
add
lods
leave
lds
xor
xchg
shlb
mov
mov
sub
outsl
jmp
and
es
scas
dec
movmskps
gs
push
incb
mov
mov
sub
push
loope
dec
or
std
scas
loope
mov
add
mov
les
mov
adc
sub
pop
mov
rcl
mov
push
int3
sahf
sti
inc
sbb
stos
dec
push
xor
leave
and
or
jl
or
jbe
mov
jle
xor
sub
mov
mov
mov
pop
fs
cmp
scas
or
pop
test
popf
mov
pop
push
clc
daa
cmp
mov
sahf
leave
cmc
jle
pop
sub
pop
inc
data16
and
cmc
notb
dec
in
push
das
scas
xor
add
sbb
fdivl
dec
mov
sub
and
ljmp
into
add
xchg
inc
int3
insb
testl
jmp
push
jmp
push
shlb
lcall
mov
aas
lret
sub
cmpsb
or
jo
pusha
push
mov
outsl
mov
mov
lock
jb
clc
in
mov
aas
lret
add
add
ss
std
pop
mov
aam
sbb
xrelease
sbb
add
pop
incl
aad
sbb
sub
int3
xchg
xchg
call
sbb
std
imulb
aad
outsb
cmp
fs
aad
mov
lock
add
ret
test
xor
test
out
mov
mov
test
add
or
loopne
clc
pop
sub
pop
fisubrl
xchg
dec
dec
imul
push
fmuls
cmp
or
mov
dec
pushf
mov
or
hlt
ja
pop
or
pop
lock
push
outsb
std
cmpb
div
es
into
test
or
lods
dec
sub
mov
aam
add
ficoml
and
push
and
sarl
cmp
push
push
inc
ror
cli
jg
xorb
or
jl
xor
adc
cld
cmp
rorl
ret
sbb
xchg
xor
pop
cld
inc
push
jp
and
add
out
jg
daa
je
dec
add
std
dec
mov
or
imul
loope
cmpsl
jmp
shlb
push
inc
add
mov
adc
out
cs
mov
sbb
sbb
xchg
jno
ret
mov
pushf
loope
add
push
xchg
push
adc
adc
mov
push
xchg
add
inc
sub
dec
cltd
mov
sub
scas
fs
add
int
gs
jb
adc
dec
cli
movl
push
push
cld
mov
mov
stos
add
push
xor
cmp
xor
repz
out
arpl
stos
mov
mov
shlb
mov
jb
push
js
lock
pop
es
or
adc
addb
push
sarl
cld
inc
mov
and
add
lret
push
gs
jae
sub
sbb
std
cmpsl
push
repnz
subl
mov
add
fidivl
movsl
pop
mov
movsl
mov
cmp
stc
and
xor
mov
mov
adc
aam
jbe
xchg
inc
sub
jb
cmpsl
push
jl
loop
xor
pushf
jnp
mov
call
or
cltd
ds
ljmp
pop
cmp
jecxz
adc
jbe
mov
ja
add
nop
pop
leave
pop
stos
mov
leave
std
xchg
lods
xor
cmp
jg
rolb
mov
or
lds
cmp
mov
inc
jl
jge
sub
add
xchg
test
xchg
in
xchg
adc
outsl
das
adc
push
filds
mov
push
into
sbb
ss
inc
aad
mov
fwait
adc
lret
mov
push
push
cmp
repnz
lock
test
fidivl
ds
lret
jns
leave
fsubr
add
aaa
cmp
add
subb
and
popa
cld
ja
scas
movsb
dec
adc
add
les
adc
andb
dec
inc
xchg
repz
testb
add
mov
jg
sbb
aad
sub
iret
stos
push
outsl
inc
sbb
inc
xorb
jp
mov
dec
and
mov
bound
in
hlt
push
loopne
jne
and
aad
and
add
movsb
pushl
mov
cmp
add
inc
or
icebp
movsl
adc
or
sti
leave
icebp
pusha
push
push
inc
hlt
mov
mov
clc
and
out
icebp
fildll
adc
cmp
jb
dec
lcall
and
or
cli
stos
jo
cld
and
inc
cs
mov
mov
lahf
dec
aad
adcb
icebp
cltd
out
test
les
ljmp
fstpl
mov
outsb
negl
sub
or
jge
ret
test
mov
jmp
and
ja
test
and
jp
and
push
mov
adc
cmpl
sbb
in
js
loop
inc
pushf
add
test
outsb
add
xchg
push
push
in
sub
dec
loope
and
add
cmp
jp
push
cmp
and
cmp
sub
mov
xor
cmp
test
cltd
test
mov
orl
popa
adc
dec
inc
adc
pop
mov
fldl
insb
mov
add
push
or
push
sub
xchg
adc
jmp
es
out
jns
inc
push
jle
nop
mov
inc
mov
fcmovu
xlat
jg
pop
hlt
mov
add
push
call
adc
sub
les
mov
dec
ss
jo
sbb
mov
in
rorb
pushf
js
sub
mov
sub
mov
and
sub
cmp
addb
loop
add
dec
mov
mov
pop
lahf
pop
add
fsubl
decl
pop
lods
sbb
xor
lret
pusha
mov
cmpl
imul
pop
daa
adc
adc
fs
or
adc
aad
test
inc
inc
push
mov
aaa
outsl
cli
pop
fbstp
adc
jo
mov
mov
arpl
add
enter
dec
mov
scas
test
jb
inc
inc
cmpsb
jmp
outsl
mov
repz
adc
push
mov
cmc
das
sub
hlt
sbb
call
jbe
and
dec
and
in
push
icebp
test
pop
hlt
sub
jo
stc
pop
cwtl
pushf
ret
or
ret
dec
roll
and
sti
xor
clc
dec
jg
js
push
mov
pushf
inc
stc
dec
sti
jnp
mov
push
adc
sbb
add
xchg
jmp
lcall
nop
mov
sbb
mov
sbbb
js
repnz
or
sbb
pop
mov
std
add
ret
and
adc
mov
inc
sbb
xor
test
inc
je
dec
lock
shlb
loope
dec
jl
stos
aad
fcomip
pop
adc
rclb
xor
cmp
cmp
or
adc
and
jecxz
pop
addr16
xor
test
jg
mov
or
push
push
push
cmp
xchg
adcl
cmpsb
stos
jle
jmp
add
adc
or
lret
cmpsl
mov
shlb
jle
shll
fs
cmpsl
sti
xchg
mov
test
nop
mov
decb
mull
mov
jg
imul
xchg
cmp
stc
outsb
mov
stos
call
jecxz
fs
jp
cmp
sbb
add
cli
and
and
sbb
ds
jle
adc
bound
fcompl
loopne
sub
mov
inc
fmulp
loopne
mov
mov
or
xchg
dec
rorb
jne
cltd
dec
pushl
jp
sbb
pop
xchg
mov
aas
pop
clc
ljmp
mov
pusha
pop
cmp
cmpsw
out
js
mov
mov
loop
jbe
cmpb
call
or
adc
mov
mov
sbb
cs
xor
jge
mov
out
push
mov
loopne
jne
mov
and
jp
or
adc
stc
jmp
mov
or
inc
sub
pushl
sbb
adc
or
imul
or
mov
les
jecxz
mov
mov
adc
movsl
dec
lahf
lds
dec
cmp
icebp
arpl
mov
cltd
nop
das
xor
jg
pop
mov
rolb
lock
sbb
or
jg
outsb
or
jle
sbb
jmp
and
test
insl
aaa
push
mov
je
adc
pushf
and
sbb
out
decb
jne
push
lods
scas
sbb
and
lods
mov
call
cld
sbb
add
pop
add
rcrl
fists
add
fbld
xchg
fldcw
movsb
sub
cmp
xor
clc
bound
shl
xor
sahf
pop
icebp
or
adc
cmp
adc
mov
push
dec
mov
rep
add
shlb
and
insb
jno
push
movsb
push
test
pop
stos
test
jbe
jbe
sbb
adc
add
jb
ds
scas
pop
or
pop
ficompl
fsubl
or
std
icebp
sbb
bound
add
out
into
jmp
test
leave
in
and
lea
mov
cmpb
dec
jmp
or
add
addb
adc
into
dec
pop
fdivrp
ret
lods
pop
arpl
es
call
sbb
xchg
or
repz
in
xor
or
xor
in
add
cmpsb
push
or
sub
push
shrb
fdivrl
test
push
mov
pusha
mov
pop
sub
fs
or
adc
imul
aaa
pop
ja
inc
cmp
sti
and
mov
xchg
xlat
lahf
mov
js
pop
pop
adc
int
imul
mov
subb
aas
in
insl
mov
mov
inc
cli
mov
fs
sub
loop
inc
dec
add
xchg
mov
clc
insl
push
arpl
add
scas
push
dec
in
jmp
sbb
stc
out
pop
add
hlt
mov
enter
xor
sti
xchg
inc
mov
nop
inc
das
pusha
outsl
ret
push
mov
ljmp
in
push
mov
out
adc
or
aas
fistpl
pusha
loopne
cmp
pop
inc
out
mov
xchg
outsl
and
pop
or
js
in
adc
jbe
fdivl
xchg
clc
mov
pushf
rcrb
mov
mov
js
sub
jbe
lds
mov
cmpsl
test
sbb
dec
xchg
mov
fisubs
notb
shll
dec
aaa
sub
lds
dec
mov
ret
mov
fld
cmp
xchg
movsl
fwait
call
mov
outsb
mov
icebp
imul
repz
shlb
repnz
add
cld
jg
mov
push
or
filds
cmp
adc
inc
negb
sub
inc
inc
xchg
mov
sbb
sub
xor
mov
outsl
push
and
outsl
outsb
shrb
lds
and
out
xor
outsb
std
stos
inc
testb
pop
or
cmp
inc
je
xlat
push
xchg
mov
add
pushf
ror
sub
pop
call
mov
daa
push
cwtl
sbb
not
cli
shll
mov
ds
fildll
jbe
lahf
push
popa
aad
push
loope
movsb
cld
mov
and
and
test
scas
in
pop
sbb
cmp
dec
in
popa
mov
fstpl
cmp
lahf
int3
add
insl
pop
lcall
lahf
mov
xor
fwait
mov
push
push
xor
mov
xchg
and
adc
add
ljmp
out
add
xchg
pop
sbb
push
mov
mov
mov
into
filds
mov
sub
bound
testb
push
and
cli
inc
mov
inc
inc
leave
xorl
les
xchg
lods
testl
sbb
imul
push
lods
or
lret
clc
push
push
loopne
add
stos
sbb
test
pusha
clc
sbb
xchg
sbb
or
and
and
pop
dec
les
mov
js
popa
cmp
cld
sbb
xchg
mov
push
jp
dec
es
cli
psubsb
ja
adc
xor
add
push
aaa
std
pop
aam
add
aas
add
adc
js
fadd
jnp
shr
test
icebp
jmp
fidivrl
out
mov
rcll
push
dec
push
sub
xlat
lahf
ss
cld
inc
xor
mov
jb
movsl
aas
bound
rclb
hlt
push
aam
mov
notl
loopne
ja
push
inc
incb
or
and
adc
xchg
dec
nop
daa
outsl
pop
add
sbb
lock
sub
fcmovbe
rol
mov
repnz
in
fwait
inc
test
adc
add
lcall
add
addl
sub
mov
decl
loop
sub
movl
xor
pop
nop
out
or
fs
or
xor
add
into
cmp
jmp
ficoml
pusha
pusha
jp
dec
std
es
rorl
andb
sub
or
loopne
ja
inc
add
lods
jl
jo
loope
mov
fsubl
ljmp
pop
mov
and
mov
xchg
movsb
mov
loope
xchg
jo
test
out
add
adc
push
es
outsl
orl
ret
inc
rcll
ds
mov
mov
in
stos
test
fcoml
or
filds
repz
sbb
fiadds
mov
pop
or
cmpsl
and
jbe
xchg
push
xor
push
push
xor
repz
dec
mov
fsubl
ja
iret
jmp
xchg
and
sub
stos
lds
decb
les
mov
push
pop
mov
cs
jnp
out
inc
nop
adc
xor
mov
jnp
push
nop
mov
lods
js
mov
movsb
cmp
sbb
mov
pop
and
mov
xchg
sti
aaa
sbb
xchg
push
inc
insb
adc
pop
jecxz
out
jle
hlt
cmpsb
adc
mov
stos
xor
jno
out
xor
pop
inc
mov
mov
sbbl
sbb
pusha
add
jb
sub
dec
clc
scas
call
or
mov
rcll
llwpcb
inc
or
pop
into
lahf
or
sub
test
mov
xchg
ret
pop
jle
xor
ficomps
fisubrs
outsb
mov
jbe
inc
pusha
jge
or
repnz
cltd
clc
pushl
cmp
xchg
add
cmp
pushf
std
movsl
lea
cli
daa
jnp
jle
cli
call
shlb
xchg
subl
mov
pop
scas
push
cmp
dec
or
sub
ljmp
mov
enter
adc
ss
and
incl
dec
adcl
ss
enter
inc
outsl
loope
stos
push
pushl
add
jo
lock
mov
sbb
ss
add
or
lea
xchg
push
scas
ss
ja
fs
or
dec
aas
rcrl
pop
mov
and
scas
or
and
lea
ret
sbb
adc
push
cmc
adc
xchg
mov
push
sub
movsb
cmc
push
sti
mov
adc
inc
lock
outsl
lret
lea
adc
and
dec
sbb
hlt
inc
jmp
mov
and
stos
push
test
xor
sub
clc
push
and
sub
mov
rclb
inc
mov
mov
sbb
add
aaa
and
imul
mov
mov
dec
inc
inc
out
mov
scas
add
and
inc
pinsrw
and
push
sbb
test
add
iret
mov
sbb
in
sti
mov
push
dec
ret
sbb
and
sbb
xchg
lock
push
push
mov
inc
mov
or
pusha
cmpsb
push
data16
rorb
shl
sarb
push
addb
cmpsb
add
jo
inc
movsb
jp
xor
jp
jl
xor
scas
cwtl
decl
mov
jl
test
xor
dec
inc
cmp
lods
jmp
cli
in
andps
mov
mov
leave
cld
mov
push
add
xor
adc
jg
mov
jl
pushl
mov
pop
adc
or
dec
ljmp
pusha
in
push
adc
mov
mov
xlat
push
mov
sti
in
push
rorb
stos
xor
rol
jmp
or
sahf
add
cld
popf
add
xlat
cmp
or
pushl
js
inc
imul
hlt
ficoml
out
dec
roll
lds
add
fcomps
outsb
jl
or
cmp
add
xchg
sub
push
or
pop
push
std
add
mov
pop
ret
add
mov
test
mov
cltd
add
aam
fnstenv
jnp
sub
out
cwtl
test
insl
push
subb
les
fbld
into
cmpsb
pop
jb
decl
lods
clc
adc
adc
adc
mov
std
jl
push
lods
call
sbb
mov
dec
pop
outsl
mov
or
cmpsl
sbb
add
addb
ja
adcl
movsb
mov
and
jl
or
cmp
jno
push
lret
in
loope
jg
push
jg
int3
fs
ret
xor
mov
xor
jecxz
jg
fisubrs
sbb
fiaddl
loop
out
push
js
xor
inc
hlt
das
mov
scas
fsubrs
clc
inc
subb
inc
push
sub
mov
dec
shr
out
or
js
mov
fninit
scas
pop
lea
push
xor
aam
mov
inc
ljmp
sbb
pushf
je
xorl
ret
and
mov
aaa
sbb
daa
dec
insb
sbb
push
fbld
dec
mov
adc
js
popa
xor
xorl
jecxz
hlt
scas
lock
mov
aad
push
adc
and
or
pop
adc
pmaxub
jg
mov
inc
sub
das
inc
inc
je
test
sbb
jle
test
pop
add
inc
push
je
ret
out
inc
cld
inc
fs
and
loopne
nop
lret
inc
fwait
xor
or
push
pop
add
inc
add
cmpsb
sub
push
loope
cli
popa
adc
add
nop
xchg
fdivl
fwait
jbe
inc
dec
add
outsl
adc
aam
mov
cmp
cmpsb
xchg
and
xchg
sub
mov
mov
push
adc
mov
push
dec
cwtl
mov
inc
clc
aaa
sub
xchg
sbb
ret
inc
insl
clc
jecxz
sti
in
fadds
cmp
out
fadds
outsl
pop
imul
lret
sbb
pushf
inc
adc
add
arpl
jne
inc
push
fimuls
add
mov
pop
negl
mov
pop
mov
mov
jmp
loop
mov
xor
xor
add
and
xchg
js
push
shrb
nop
dec
je
xchg
and
cltd
add
xchg
mov
xchg
jno
mov
dec
out
dec
xor
aad
dec
xchg
outsb
ret
call
add
out
and
mov
incl
cwtl
dec
mov
test
pop
into
mov
cld
mov
or
fidivl
sbb
js
xor
nop
js
add
dec
xor
jg
xlat
adc
mov
xchg
outsl
fwait
mov
push
or
ja
mov
and
fldl
jnp
lcall
test
xor
add
pop
cmp
fadds
add
aam
adc
cmp
xchg
nop
stc
mov
push
call
bswap
jae
mov
add
sahf
or
mov
test
pushf
ret
mov
sbb
std
xor
js
dec
mov
mov
scas
and
movl
cmp
jo
inc
add
pop
std
dec
addr16
and
and
adc
dec
in
pusha
pop
cmp
mov
gs
pop
mov
sub
fisttpl
inc
insb
mov
jmp
inc
scas
mov
popa
jo
inc
jp
stos
nop
and
in
push
pop
aam
lahf
rolb
mov
xor
mov
mov
cmp
in
push
sbb
adcb
pop
and
repnz
in
add
add
push
test
lock
push
mov
adc
sbb
loope
jecxz
daa
push
cmp
jbe
add
jge
mov
scas
xor
add
stos
mov
sub
mov
pop
push
sbb
cmp
cs
sbb
push
mov
add
fnstsw
out
push
add
jo
fadd
mov
test
outsl
fisubrs
mov
sub
add
frstor
jnp
lret
xor
cmp
ljmp
add
sub
imul
jg
xchg
or
shlb
mov
push
push
into
pop
insb
add
pop
add
pop
pop
insl
insb
add
cmpsb
cmp
outsb
inc
sub
ret
cmp
daa
cmp
cmp
scas
enter
and
and
repnz
scas
js
fwait
sub
jmp
pop
test
lods
cmc
or
add
cmc
adc
dec
outsl
or
and
clc
add
pop
je
mov
sbb
pushf
and
xor
cmp
lcall
mov
lock
jb
imul
xor
push
adc
mov
pop
jge
mov
add
inc
jle
cmpl
push
sub
aaa
adc
dec
test
bound
mov
mov
jg
test
leave
inc
mov
std
and
jnp
fstpt
rolb
pop
lods
inc
or
loop
sbb
push
test
lock
add
scas
je
cmp
inc
aad
mov
sbb
and
add
add
and
scas
cli
mov
mov
aaa
cli
int3
fcoml
sbb
enter
jnp
jb
mov
ja
sub
mov
jp
inc
add
popa
jp
xor
mov
mov
pop
pop
jnp
mov
mov
shll
or
shr
add
mov
push
and
outsb
shlb
mov
xchg
fcomps
or
jmp
adc
mov
sbb
stos
adc
leave
push
test
jns
mov
pop
jns
test
lds
add
int3
adc
fisubl
adc
mov
out
mov
ret
cmp
push
loop
mov
ret
or
cld
fidivs
dec
adc
test
inc
and
nop
push
mov
data16
inc
in
or
cmc
add
push
data16
sbb
push
shlb
incl
dec
and
fsubs
les
ljmp
imul
add
inc
cli
dec
enter
pop
ret
movsl
jge
inc
cmp
pop
in
incl
xchg
clc
je
les
fwait
test
xchg
cmp
or
add
movsb
stc
add
xor
data16
popa
test
ficomps
hlt
daa
incb
add
mov
pop
and
push
es
into
push
sub
out
ljmp
xchg
mov
out
mov
imul
dec
and
jg
cmp
loopne
xor
jge
xor
int
push
push
lahf
pop
and
xor
loope
mov
jae
sub
fists
mov
ljmp
mov
fwait
xorl
sbb
lret
dec
sbb
hlt
pop
jbe
movsl
xorb
pop
or
jmp
rcr
test
popa
nop
in
rcr
dec
pop
jg,pt
icebp
add
inc
addb
movsl
cmc
sub
stos
or
inc
lds
out
dec
push
mov
outsb
cmp
loopne
adc
add
cmpb
es
ja
mov
ror
adc
incb
and
test
sub
inc
mov
cli
pusha
lods
xor
pop
mov
out
test
adc
adc
ljmp
bswap
mov
fdiv
into
cmp
fiadds
fdivrs
push
sbb
jp
push
dec
popa
push
push
add
cmpsl
out
dec
clc
add
sub
xchg
das
out
arpl
arpl
mov
fdivrl
and
sub
mov
ret
xor
idivb
jg
xchg
movsb
repz
pop
lods
cmp
mov
inc
mov
and
movsb
xor
incl
xchg
push
stc
std
sbb
adc
ds
mov
shrb
iret
mov
fadds
sbb
rclb
iret
loopne
jo
pop
xchg
inc
stos
push
aam
insb
mov
adc
addb
loopne
lcall
jmp
add
iret
sub
loopne
lret
jle
add
addl
in
mov
inc
cltd
hlt
jg
mov
into
or
push
repnz
sub
pop
inc
idivb
dec
push
iret
out
jns
jo
lcall
dec
movsb
loope
gs
xorl
mov
or
cmp
arpl
ret
rclb
shl
push
jecxz
xchg
cmc
and
or
mov
outsl
push
adc
dec
sub
pusha
adc
out
ficompl
dec
cmp
push
push
aaa
xor
and
movsb
popf
stc
or
xchg
jne
dec
pop
aas
nop
lcall
mov
jg
inc
xchg
push
jnp
loope
inc
sahf
pusha
mov
call
add
jno
sbb
in
subb
mov
mov
fidivl
std
and
jge
aaa
imull
ret
add
bound
push
pop
stos
inc
sar
test
in
push
mov
dec
fwait
sbb
fistpll
popf
test
mov
dec
nop
mov
sub
sub
lods
fmul
fists
in
dec
daa
les
out
inc
mov
into
into
push
push
scas
inc
xor
pop
lcall
mov
jnp
xchg
jl
pop
pop
add
add
call
clc
ffreep
cld
insb
jg
call
or
xchg
leave
testl
mov
dec
cld
dec
std
mov
inc
enter
test
roll
or
mov
mov
mov
ljmp
jne
push
inc
es
xor
aaa
lock
jmp
inc
push
addr16
pop
insb
faddl
adc
xor
aam
pop
xchg
call
xchg
dec
xchg
dec
sar
out
sub
insb
int3
adc
cwtl
xor
incl
and
stos
negb
push
pop
or
rolb
fbld
or
sub
push
in
jno
das
inc
imul
sbb
inc
in
loop
mov
ja
jo
dec
jl
xchg
add
dec
js
jp
cmp
insb
aas
mov
sbb
pop
lods
push
fdivs
aam
xor
int
lcall
enter
xchg
mov
cld
js
xchg
testb
jns
shll
mov
add
and
lret
cld
dec
cmp
scas
add
popa
ja
inc
adc
out
rolb
lods
and
pop
push
pop
outsl
loop
mov
and
aaa
cs
adc
sbbb
jl
pusha
in
pop
stos
popa
repz
out
rclb
mov
mov
xchg
sbb
hlt
imul
jl
lret
add
idivl
dec
xchg
data16
push
dec
jno
mov
add
popf
xchg
add
sub
je
add
jge
adc
mov
fidivl
fidivrl
or
das
dec
jae
js
cmp
mov
dec
cmp
incl
mov
je
jmp
lods
es
test
lods
rcll
nop
lock
les
andl
mov
mov
popa
sbb
int3
mov
loopne
int
adc
cmp
push
adc
jecxz
into
xlat
cmpb
fcomip
pop
dec
mov
push
int
aaa
cwtl
jg
gs
push
inc
or
dec
flds
or
test
and
and
pop
enter
stos
ds
mov
cmp
loop
aam
cli
and
cmc
pop
add
sub
push
sahf
dec
push
and
push
testb
ret
call
scas
pop
hlt
hlt
pusha
adc
je
cltd
loope
aas
mov
inc
adc
ss
mov
pop
push
in
cmp
fwait
add
jle
mov
call
add
adc
je
xchg
sbb
inc
push
sub
or
pop
dec
loope
daa
and
or
leave
cmp
sbb
jg
sub
iret
repz
inc
push
and
mov
addb
dec
repnz
decl
mov
addr16
scas
dec
stos
std
or
loope
dec
test
stc
push
out
mov
pushf
add
add
adc
ds
lods
fld
push
xor
and
cmp
les
loop
es
lret
in
enter
cld
ja
fmuls
pop
out
sbb
pusha
sbb
jecxz
clc
add
fndisi(8087
repnz
ficomps
out
sbb
and
sbb
addl
or
xor
repnz
iret
mov
adc
adc
shrl
sub
add
psubusb
fcoms
ss
pusha
movsb
mov
push
push
adc
ret
out
pop
pop
ss
stc
imulb
jge
inc
pop
add
sub
test
sub
add
push
out
lahf
or
jle
imulb
aam
adc
sahf
pop
movsl
js
out
ret
and
aaa
adc
cmp
sbb
sahf
or
or
loope
inc
jl
push
icebp
adc
enter
shrl
jmp
das
add
adc
push
jecxz
hlt
outsb
stos
ret
pop
add
adc
lcall
shrb
pop
inc
in
dec
aas
xor
je
loope
and
or
cli
inc
jns
lods
jno
pop
add
lock
or
inc
pop
and
mov
add
icebp
or
jb
scas
or
adc
push
xor
call
or
inc
stos
xor
iret
sbb
ja
adc
mov
fs
mov
mov
shlb
inc
push
cld
jecxz
cltd
mov
ds
mov
lcall
sbb
cmp
mov
bound
pop
jl
ret
sub
fsubr
mov
out
push
gs
loope
xor
mov
sti
and
inc
leave
and
or
add
in
faddl
xor
or
or
sub
call
cmpb
icebp
or
cmp
ret
dec
mov
loop
pusha
das
add
push
add
push
int3
push
sub
pushl
fmull
mov
cmp
push
add
jo
jmp
add
cmp
pop
jnp
iret
xor
rorb
cmp
and
lea
aam
lret
mov
add
sub
out
cld
xchg
mov
and
add
xor
xchg
cmc
jno
cmpsb
push
in
cltd
lcall
xorl
fnstenv
call
push
push
pop
addb
mov
cltd
xchg
aaa
push
cmp
es
xorl
mov
scas
in
mov
add
sub
icebp
js
add
sbb
or
sub
xchg
into
mov
xor
push
mov
adc
sbb
in
icebp
dec
dec
sbb
cmpsl
ja
cld
sbb
jg
mov
add
xchg
jl
in
jo
ret
pop
and
adc
cld
es
sahf
fs
mov
and
dec
push
push
ljmp
jp
lock
cwtl
outsb
outsb
je
call
and
jge
aas
xor
mov
punpcklbw
ret
and
cmpsl
push
lahf
cmp
pusha
mov
lret
jbe
xchg
or
dec
mov
js
into
or
fwait
enter
mov
jb
or
cmp
push
fs
jg
scas
xlat
push
test
jle
add
sbb
add
frstor
xchg
push
mov
cmovo
flds
pop
shrl
mov
cmpsl
sbb
aas
mov
xor
in
ss
mov
jns
or
scas
cmp
je
out
sbb
xchg
dec
adc
lea
mov
pop
add
sbb
jmp
pop
mov
les
outsl
cwtl
mov
loopne
aas
adc
fs
jmp
sbbb
addl
dec
jg
mov
daa
movsb
or
cmp
inc
cmp
sub
in
scas
les
ret
push
clc
push
sbb
mov
sbbl
rclb
dec
movsl
jg
rcrl
loop
outsb
mov
lret
lahf
gs
fucomip
adc
dec
pop
sub
lret
add
or
mov
incl
adc
dec
inc
lret
insl
dec
repz
or
call
adc
and
adc
fbstp
and
inc
call
fisttps
mov
loope
cmp
pop
inc
fnstcw
sbb
mov
test
call
add
push
repnz
push
xchg
cmp
push
clc
xchg
int
jge
mov
dec
enter
aaa
add
cmc
inc
es
or
outsb
out
jge
mov
mov
outsl
clc
push
pop
sbb
adc
push
mov
adc
inc
fsubrs
fdivrs
out
sub
out
aad
bnd
xchg
add
mov
iret
sbbl
jl
xor
fcomip
rcrb
rcrb
pop
xchg
pop
aad
mov
jg
dec
out
jne
outsb
rcrl
cltd
dec
ss
push
mov
rcll
xchg
lods
mov
or
aam
add
and
lock
hlt
inc
jae
lret
add
in
scas
and
test
rolb
mov
lea
push
jge
out
aad
out
push
loopne
sub
xor
dec
cld
cs
xchg
test
lds
insl
push
mov
pop
lock
and
jg
cmpsb
sub
add
jnp
inc
mov
and
popa
jmp
ja
sbb
add
push
nop
scas
xchg
test
lret
lcall
push
roll
incb
sbb
add
and
push
pop
incl
loope
inc
jne
mov
sbb
mov
cmc
clc
rol
test
and
lret
add
cwtl
jae
or
add
mov
ret
push
scas
xchg
cld
or
or
lcall
in
aam
negb
repnz
xchg
ret
mov
xchg
cmpb
inc
dec
jecxz
lods
push
push
sahf
jmp
call
shlb
push
sahf
jb
mov
outsl
push
adc
or
dec
pusha
jbe
sarl
jne
pop
in
dec
dec
push
loopne
xchg
subl
les
movsb
repnz
cmp
xchg
repnz
out
fidivs
adc
addr16
jb
callw
add
jl
jns
xlat
outsl
inc
ret
pop
arpl
inc
sub
jp
jl
mov
sub
jo
jmp
subl
pop
sbb
adc
int
stos
adc
les
leave
mov
mov
imul
push
xor
aam
sub
or
shll
lock
sbb
kandnb
lds
and
push
cs
pop
jecxz
popf
bound
lcall
test
mov
int3
mov
test
and
mov
insb
jae
lock
push
jg
addr16
mov
das
sub
test
sbb
push
dec
pop
stc
jne
xor
loop
stos
cmp
aas
inc
or
push
dec
jno,pn
aam
test
sahf
xlat
push
jno
pop
aad
cltd
cmp
xchg
mov
mov
jno
sub
call
xchg
sahf
cwtl
sbb
jg
inc
pop
jb
enter
sbb
inc
inc
out
es
pop
mov
data16
add
scas
in
inc
xor
and
xchg
mov
loop
scas
cli
cmp
cmc
andl
push
cli
pop
stos
mov
sub
rcr
mov
xor
or
fsubl
lcall
and
mull
xchg
or
add
xorb
add
into
jp
outsl
and
arpl
push
cltd
clc
xor
and
movsb
lcall
jle
cli
cmp
push
jge
or
jge
nop
add
pop
lahf
xchg
or
inc
and
sar
push
leave
xchg
mov
push
loope
clc
add
pop
ltr
imul
cmc
in
pop
incb
dec
les
sbb
loope
mov
dec
sub
cltd
jo
mov
cld
add
hlt
inc
ret
sub
xchg
aaa
scas
sbb
ror
mov
imul
jmp
bound
mov
xor
out
or
dec
and
add
push
cmp
mov
fs
dec
xchg
mov
inc
and
mov
jg
in
bound
mov
shlb
mov
cmpsl
ljmp
mov
adc
repz
pop
push
fadd
pushf
addr16
ja
or
or
stc
push
sbb
push
sahf
mov
ret
icebp
das
pusha
fstl
sbbl
leave
mov
push
sbb
inc
adc
in
jg
jno
test
sbb
loope
mov
orb
sub
add
mov
inc
sti
fmuls
inc
cli
in
loop
fdiv
dec
imul
xchg
add
stos
aam
cs
mov
mov
lods
rcll
test
js
mov
sub
sub
and
sbb
repnz
dec
rolb
sbb
ljmp
sarb
mov
xor
std
dec
pop
inc
mov
inc
dec
call
jg
mov
and
and
loope
pop
les
popf
prefetch
fsubs
adc
in
clc
sbb
or
jg
lods
jmp
dec
xor
inc
pop
out
push
ljmpw
std
mov
pop
jb
jno
call
xchg
icebp
call
aad
lcall
or
adc
int3
loop
mov
pushf
push
dec
jbe
add
inc
lds
pop
xor
push
pop
or
pop
push
fnsave
xchg
roll
sub
mov
mov
or
loopne
das
je
cs
cmp
add
and
add
xlat
and
cmp
and
and
and
dec
mov
mov
pop
fnstenv
mov
mov
jp
mov
dec
lds
xor
dec
push
loopne
cld
mov
adc
pop
push
jecxz
lret
sbb
lcall
inc
lock
xor
ja
or
in
pop
sbb
pop
or
mov
mov
data16
sarl
or
loop
jp
aas
fmuls
sbb
mov
sbb
scas
mov
dec
scas
mov
jge
cld
jg
pop
xchg
cmpsb
push
jle
dec
sub
insl
das
pusha
cld
fwait
push
pushf
push
push
add
out
int3
xor
or
scas
jl
push
push
ja
je
push
std
sub
add
lea
pop
int3
xchg
lahf
movsl
cs
mov
cmp
push
xor
adc
fdivrs
or
jo
pop
into
cmp
scas
pop
and
call
dec
pop
and
adc
outsb
sbb
or
sbb
fsubrl
xchg
sbb
inc
repnz
add
push
mov
fmuls
pop
and
jne
jecxz
inc
fbstp
icebp
mov
xorb
enter
add
mov
sbb
mov
add
loope
xchg
xchg
adc
or
addl
fsub
cmp
mov
mov
mov
out
repz
adcb
pop
push
dec
adc
and
or
fbld
lret
les
aam
inc
clc
or
cmp
sbbb
mov
imul
xchg
mov
bound
imul
scas
jo
sbb
push
leave
push
mov
push
pop
xchg
les
mov
sbb
xor
cmp
js
rcrb
sbb
mov
or
xchg
sub
jl
push
push
add
sub
adc
jb
jo
mov
pop
mov
mov
data16
push
pop
and
sub
mov
loopne
sub
out
nop
xor
xchg
adc
sub
notb
and
sub
jbe
shrb
aaa
aaa
movsl
addb
or
cmc
cmp
out
int3
and
or
jle
repz
push
mov
mov
xchg
ds
xor
ss
and
dec
clc
inc
ds
push
fcoms
jle
lea
bound
mov
mov
rol
pop
inc
js
aam
pusha
iret
xchg
ret
add
in
jecxz
in
jg
sub
pop
cwtl
rolb
clc
fisttps
dec
mov
out
dec
add
popa
mov
imul
popa
pop
ljmp
hlt
mov
xchg
adc
cmpsb
xchg
nop
push
push
xchg
repnz
dec
jno
mov
hlt
dec
clc
out
jp
push
mov
lock
out
cmp
es
pop
mov
xor
push
push
addb
inc
sahf
and
pop
mov
xor
inc
jns
jo
lds
je
aas
or
aad
call
xchg
sub
ret
repnz
imull
daa
adc
push
sbb
pop
call
dec
dec
incl
fidivrs
popf
push
add
movsl
stc
hlt
in
addb
push
out
jns
xchg
push
adc
mov
mov
test
sbb
in
pop
aaa
xor
push
rclb
test
ficoml
fdiv
incl
cld
push
mov
repnz
fcoms
out
fisubl
mov
fcompl
mov
ss
out
xchg
jbe
lret
add
push
fwait
sbb
clc
mov
scas
inc
mov
icebp
stc
jg
sti
loopne
ds
lahf
imul
outsl
mov
scas
and
cmp
cld
movsb
pushf
lea
dec
jecxz
lds
add
cmp
orl
sbb
jnp
out
sti
outsl
mov
sub
and
or
mov
inc
add
lods
ret
call
jge
mov
or
xchg
pop
test
scas
fsubl
in
mov
cmpsl
repnz
andps
mov
lods
mulb
in
add
pop
mov
xchg
xchg
or
xchg
hlt
adc
imul
lret
cmp
ljmp
or
loopne
hlt
fldcw
jg
adc
pop
pop
std
xchg
cwtl
pusha
loope
dec
outsb
js
sub
and
movsl
and
jg
imul
cmp
stos
cmpb
jp
jge
add
in
loope
sti
add
dec
pop
rcll
sub
addl
jge
sbb
subl
jl
and
sbb
mov
cmc
xchg
add
jbe
js
and
test
mov
sahf
sti
push
shrl
xchg
sub
jg
dec
sub
xor
stos
roll
cwtl
aad
dec
mov
ficompl
das
mov
fs
push
xorb
push
cmp
and
cmpsb
jp
pop
hlt
push
andl
les
mov
mov
adc
repnz
and
inc
mov
add
or
adc
mov
sahf
xor
add
mov
lds
hlt
push
fdivr
adc
xchg
loopne
xor
mov
andl
mov
or
repnz
pop
addr16
sbb
push
aad
hlt
xor
pop
ficoml
cmpsl
out
js
inc
push
pusha
out
mov
and
inc
mov
cli
push
scas
pop
sbb
bound
int
and
pop
pushf
out
lods
sub
add
mov
icebp
aaa
incl
lock
cmp
enter
mov
test
or
insb
cs
adc
jl
mov
divl
mov
push
pop
cmp
mov
sub
push
dec
jb
xchg
add
les
pop
pop
decl
push
dec
das
mov
imul
ss
push
push
push
mov
jp
pop
and
rcll
xchg
cmp
aaa
jne
mov
dec
scas
cli
push
jns
adc
test
fidivrl
lcall
mov
pop
jecxz
test
and
addr16
call
or
sub
stos
pop
shlb
fcoms
push
in
add
mov
dec
decl
mov
jbe
int
ljmp
push
rolb
sbb
fwait
lods
rcrb
lods
scas
cltd
adc
fildl
mov
and
mov
adc
jo
and
test
push
jg
scas
fdivs
repnz
xlat
fisttpl
cs
xor
ds
orl
sarl
mov
jno
repz
call
mov
jg
incb
add
and
fs
cmpsb
call
sbb
outsl
fwait
xor
or
jmp
jl
xchg
shrb
dec
scas
jmp
aaa
jmp
in
fdiv
mov
insl
inc
adc
dec
add
ds
jmp
mov
mov
xorb
bound
xor
jbe
les
jne
push
sarl
push
xchg
hlt
call
clc
jg
mov
int3
fiadds
adc
stc
adc
fiaddl
std
sbb
lahf
inc
lahf
repz
out
dec
inc
xor
pop
pusha
fdivrs
aaa
jmp
inc
roll
sbb
std
add
outsb
or
mov
inc
cld
inc
and
push
sub
aam
xchg
cmpsl
addr16
xchg
aam
adc
or
sub
fwait
inc
mov
push
or
decb
jo
ja
add
stos
mov
add
cld
cli
and
lea
cmp
repz
mov
xchg
or
push
sbb
clc
cltd
and
fninit
mov
lea
mov
adc
pop
pusha
mov
loope
xchg
mov
outsl
js
shlb
pop
add
loopne
inc
popa
sub
mov
and
jl
fistpll
pop
leave
or
js
pop
rcr
sub
shlb
mov
push
cmpsb
push
cltd
mov
int
adc
sbb
inc
push
sbb
xor
push
repnz
push
add
pop
add
xchg
jo
jmp
and
clc
fisubrl
lods
movsb
sub
les
jmp
jg
test
pop
dec
pop
sub
inc
mov
cmp
fadds
mov
sti
pop
mov
sub
outsb
shlb
mov
add
add
or
cmp
inc
adc
rorb
xchg
mov
mov
xlat
dec
pusha
cld
jg
call
add
cmp
mov
inc
jp
and
inc
xchg
aaa
xor
sbb
sub
mov
shl
dec
xor
add
sub
push
xchg
fisubrl
mov
mov
aam
icebp
cmp
sub
mov
lret
shlb
icebp
pop
movsl
sbb
jb
lock
rcrb
lret
xchg
out
mov
loopne
aas
and
orps
mov
push
xor
inc
outsb
std
das
pop
add
fimuls
xor
jnp
inc
punpcklbw
sbb
loopne
aas
push
jge
ret
jg
mov
push
adc
mov
push
or
lock
push
sub
stos
and
xor
imul
cli
aaa
popa
fisubrs
andb
push
int3
dec
jbe
mov
push
pop
and
mov
aaa
push
mov
add
popa
inc
add
mov
popa
lahf
call
cltd
fmul
movsb
std
mov
pop
rorb
pusha
jbe
adc
mov
je
sbb
push
jo
mov
and
inc
mov
jmp
pop
rcll
and
aam
jl
enter
paddsw
sub
push
xor
add
or
test
push
test
jmp
sbb
inc
cmpsb
sbb
cmpl
repnz
or
das
sar
xor
imul
pushf
dec
scas
xorb
jbe
loop
fwait
loopne
adc
jge
icebp
popa
rolb
mov
add
push
push
clc
cs
mov
inc
xlat
dec
mov
sahf
negl
pop
push
lahf
dec
xchg
bts
loopne
test
dec
adc
ja
jecxz
sub
xchg
mov
test
jecxz
mov
ret
sbb
mov
testl
cmp
or
or
rcll
sbb
cld
pusha
enter
arpl
adc
push
ljmp
loop
shrl
push
in
or
pop
mov
js
or
mov
inc
out
push
aad
arpl
jecxz
setb
or
pop
jbe
movsl
and
add
jg
and
cwtl
cltd
mov
mov
add
push
rcrl
pop
lods
cli
lock
or
ljmp
pop
cmpsl
pshufw
call
adc
test
sub
in
xchg
in
mov
push
mov
js
in
decl
xchg
xor
sbb
pop
fisttpl
insb
mov
jns
lahf
hlt
lods
jo
aas
sub
std
push
in
cmp
or
push
popf
mov
or
cmp
dec
adc
dec
add
pop
pop
mov
push
mov
ret
push
or
testl
popa
push
mov
pushf
jns
and
mov
push
mov
lock
cwtl
sti
clc
xchg
sbb
and
imul
cmpb
xor
mov
dec
cs
jl
push
js
mov
insl
popf
cmpsb
inc
enter
jno
loopne
push
cmp
pop
xor
add
js,pt
loop
pop
jo
mov
rclb
inc
mov
sbb
dec
mov
sbb
mov
popf
mov
adc
jmp
movsb
mov
and
xorl
mov
mov
lods
pop
push
lods
xchg
pop
dec
mov
mov
jne
cmp
or
adc
fidivs
rcl
or
inc
in
mov
cs
popa
inc
add
out
inc
push
sbb
mov
push
xchg
cmc
pushf
js
or
dec
add
scas
into
mov
outsl
mov
adc
pop
insl
sbb
lds
xchg
icebp
add
sbb
pop
scas
sub
add
mov
pusha
cmp
mov
pop
cmp
pushf
push
mov
test
and
aas
xchg
mov
test
data16
jmp
insl
and
movsl
outsb
cs
mov
mov
adc
rolb
fidivrs
fs
xchg
jl
dec
iret
movsl
lds
sub
mov
inc
movsb
out
daa
sbb
pushf
repnz
loop
mov
lods
or
cmp
aas
or
ds
pop
insl
jb
arpl
or
les
xor
xor
sbb
xor
outsl
jg
test
sbb
add
ret
add
mov
ficompl
mov
mov
inc
adc
mov
mov
rcll
cmp
fld
cmp
jb
mov
push
adc
loop
xchg
mov
inc
mov
xchg
pop
jo
pop
mov
lahf
cmpsl
popa
cmp
and
xchg
subb
sub
add
add
ret
enter
xor
outsb
clc
mov
mov
sbb
jbe,pt
xor
lahf
cmp
and
orb
out
pop
sub
dec
ljmp
inc
inc
cs
sub
cmpsb
push
lock
andl
cld
jmp
jb
js
cmc
rorb
cmc
and
sbb
out
sti
xchg
jmp
rep
mov
insb
inc
xor
adc
or
inc
pushf
mov
mov
cmpsl
pop
jb
dec
jmp
or
adc
lock
shl
push
and
test
adc
or
fadds
pop
sub
ret
mov
and
and
adc
mov
rcl
adc
rcrb
and
enter
mov
jae
adc
push
mov
dec
pop
xchg
mov
cmp
jbe
leave
pop
add
push
xor
ret
xchg
jg
cmp
lcall
fstps
push
xchg
xchg
jmp
or
or
add
inc
mov
sarb
jnp
mov
rcll
jno
add
bound
push
std
pop
mov
dec
or
movsb
mov
jb
mov
popa
cmc
cmpl
ss
call
outsl
push
inc
push
or
add
aas
and
jmp
add
sub
es
or
cmp
fsts
fwait
stos
fistps
adc
mov
cmpsl
push
ljmp
pop
or
xchg
stos
hlt
push
mov
or
dec
rcr
faddl
pop
ljmp
inc
clc
pop
rcrb
mov
loop
sbb
push
cmpb
out
loopne
dec
mov
sysenter
push
int
xchg
icebp
xor
jp
mov
daa
loope
xlat
mov
stc
test
jecxz
or
insb
sub
or
mov
aad
es
jae
ror
or
sti
push
out
xchg
mov
sbbb
cmc
fcmove
sub
adc
loop
out
or
in
and
mov
scas
hlt
rorb
push
mov
and
xchg
xchg
gs
xor
xor
scas
test
mov
stos
stos
cli
inc
sbb
pop
and
pop
push
add
pop
add
popa
js
sub
xchg
push
push
adc
rclb
jle
jo
ret
adc
pop
mov
cmp
mov
jbe
and
int3
sub
sub
or
psubsw
sbb
and
pushf
inc
nop
sarb
fadd
mov
jmp
data16
das
imul
push
jmp
xor
call
mov
or
js
or
stos
sbb
dec
jle
rol
ss
inc
adc
lret
data16
sub
adc
aaa
insb
ret
pop
xor
fdivr
nop
push
cmp
insb
add
push
test
adc
jp
loope
sub
popa
cmpl
adc
repnz
xor
cmp
jo
push
sub
jmp
add
idivb
inc
lret
gs
xchg
pop
jo
push
cmp
sub
xor
inc
sbb
popa
cli
inc
adc
adc
pop
movsl
dec
andnps
filds
cwtl
ret
loop
and
or
ret
test
nop
test
add
and
dec
adc
inc
es
enter
movlps
cs
dec
add
fimuls
popf
ror
fiaddl
sbb
addr16
add
lcall
or
lods
pusha
orb
dec
data16
add
into
je
subb
rorb
jl
mov
sbb
shrb
pushf
add
inc
lock
lds
dec
aas
cmp
jp
adc
mov
cmp
out
rorl
hlt
xchg
sahf
enter
jb
clc
mov
jbe
imul
push
into
dec
insb
faddp
cmp
call
or
sub
push
add
add
inc
fsubrs
xor
xorl
push
add
inc
sti
pushl
jnp
add
nop
call
push
cwtl
sub
dec
sbb
loopne
add
movsl
mov
movsl
outsb
test
dec
or
inc
jecxz
hlt
or
icebp
pop
rcrl
sub
pushf
subl
test
rolb
sbb
push
sub
adc
pop
inc
or
mov
fiaddl
data16
mov
push
popf
cmp
shlb
rorb
scas
inc
rclb
icebp
sub
mov
das
sbb
rclb
lret
sti
and
add
and
es
mov
inc
jnp
rep
cs
ja
mov
rolb
or
addr16
add
xor
je
mov
push
js
inc
cs
xchg
inc
mov
call
and
push
add
call
aaa
xchg
xchg
xchg
push
mov
sbb
dec
push
mov
sub
xchg
testb
fmull
jle
push
fs
mov
sbb
test
jo
jno
jecxz
jp
js
or
add
inc
clc
push
in
ret
enter
or
cwtl
movd
xchg
and
fsubl
hlt
addr16
imul
mov
mov
stos
fisubrs
mov
xchg
sbb
pop
jo
pop
push
int3
cli
mov
pop
loope
mov
push
sub
adc
push
dec
ja
sbb
mov
test
mov
add
or
xchg
and
inc
push
sbb
sub
and
sbb
clc
popa
or
das
icebp
pop
adc
sub
push
insb
outsl
inc
sbb
cmpsl
cmp
imul
call
or
cmp
fisubrl
test
ljmp
sbb
scas
sarl
push
cmp
push
pop
dec
jl
dec
xor
xor
ljmp
repz
cmp
dec
outsl
inc
xorl
in
cli
jb
jg
mov
fldenv
lahf
adc
lcall
cmc
roll
pop
mov
pusha
movsl
sbb
cmp
or
mov
or
lock
mov
and
xor
push
or
je
sub
mov
adc
clc
push
test
notl
mov
ficomps
mov
cmpb
mulb
pop
sub
cmp
sbb
pop
lret
adc
fadds
sti
aaa
data16
xchg
sbb
lret
dec
in
jecxz
pop
clc
insb
sbb
mov
in
iret
xor
add
adc
adc
fcmovnbe
mov
in
cli
gs
xorb
adc
test
jo
jp
sub
insl
sub
lock
jp
and
imul
or
data16
pop
in
js
pop
adcb
mov
stos
jne
pop
arpl
or
pop
fwait
popa
sub
or
incb
mov
jg
or
mov
popf
nop
and
aam
cmp
or
add
mov
push
popf
pusha
in
insb
ja
das
jnp
inc
mov
bound
cmpsb
outsb
ljmp
xchg
xchg
dec
dec
cmp
decb
sub
ss
pop
cmp
neg
mov
data16
or
add
mov
testb
leave
and
sbb
xchg
push
pusha
mov
jo
mov
xor
sbb
sbb
lods
push
add
hlt
fucom
mov
lods
sbbl
or
jnp
add
leave
out
or
xor
xor
scas
xor
mov
sbb
xor
xchg
les
hlt
mov
mov
nop
jno
inc
push
xchg
push
cmp
jb
xchg
xchg
and
push
xlat
sub
dec
pop
cs
int3
push
loope
gs
mov
push
sbb
fmuls
adc
mov
cmp
scas
dec
outsb
push
jae
call
jmp
fiadds
insb
push
mov
lds
xchg
arpl
mov
inc
sub
pop
or
neg
mov
mov
sub
leave
into
add
fldt
jmp
xor
enter
cmc
cs
stos
and
jge
js
sbb
push
mov
outsl
movsb
test
fs
and
sahf
add
call
adc
jo
cmpsb
in
jl
pop
mov
mov
fstl
mov
rcrb
pop
sahf
jle
insl
pop
xor
cmp
add
lods
push
adc
adc
call
jno
mov
inc
ljmp
adc
movsb
sbb
test
mov
add
push
cmpsl
pop
fistpll
aam
cmp
je
js
hlt
clc
enter
add
lock
lods
out
clc
data16
lcall
out
gs
lock
aaa
inc
cmp
out
jo
mov
mov
jg
sbb
out
dec
jae
pop
rcr
call
mov
test
aam
mov
movsb
imul
pushf
sbb
outsb
adc
adc
adc
test
inc
cmp
dec
or
jl
jp
push
jl
stos
inc
jne
popf
sbbb
orl
adc
idiv
pop
sbbb
lods
inc
nop
xchg
xor
pop
loope
push
dec
sub
fisubl
mov
mov
mov
loop
pop
inc
cmp
inc
cwtl
jae
sarb
jbe
insb
orl
out
addl
sbb
cmp
push
fiaddl
jno
push
sarl
out
in
adcl
in
aaa
xor
jle
jb
and
mov
shl
inc
sbb
xor
les
scas
push
sar
leave
add
add
dec
jmp
mov
fsubrp
and
mov
shrb
jnp
adc
fdivs
mov
adc
fcmovu
sub
or
mov
and
push
mov
pushf
mov
inc
mov
call
test
lods
adc
jno
push
pop
xchg
test
xchg
mov
push
fimull
into
fiadds
movsb
mov
out
outsl
fcoml
mov
inc
loop
enter
push
jle
dec
cmp
nop
sbb
push
notb
pop
mov
xchg
subb
inc
loopne
outsl
imul
mov
adc
movsl
nop
xchg
adc
xor
fdivrs
or
inc
xchg
adc
or
or
adc
xchg
subb
fsubp
scas
xchg
idivl
inc
xorl
and
fs
ds
clc
sbb
xchg
inc
lock
clc
ss
adc
inc
pop
and
push
inc
jno
fadds
test
inc
jecxz
pop
sbb
mov
paddq
mov
mov
sub
movsl
add
int
push
xor
ret
add
dec
xor
stos
lea
add
fmuls
in
inc
sbb
pop
pop
lods
lret
and
aaa
or
dec
daa
xchg
sbb
popf
clc
add
and
xchg
sub
and
mov
adc
dec
adc
adc
adc
and
mov
sti
mov
ljmp
pushl
mov
and
push
test
add
jg
lret
push
fldl
and
shrb
lock
mov
add
sbb
mov
pop
fistpl
repnz
sahf
icebp
inc
mov
test
push
pushf
adc
and
fcoms
js
adc
fnsave
aam
cmp
push
ret
jbe
push
add
shll
sub
mov
mov
and
adc
mov
and
addl
hlt
sub
inc
mov
mov
add
mov
outsl
insl
adc
sbb
cmpsb
adc
test
lcall
or
loop
add
or
das
dec
jl
cwtl
out
test
test
enter
cmp
add
fsubs
fidivrl
test
test
cmp
shrl
push
les
inc
repnz
movsb
ss
and
or
and
or
push
int
loop
hlt
xchg
rclb
and
xlat
adc
cmpl
sub
and
shrb
adc
sub
pop
test
imull
adc
lock
std
push
or
xchg
ret
mov
dec
pop
jl
ret
mov
orl
icebp
inc
jnp
lcall
cmp
clc
pop
fwait
sub
sbb
push
adc
jmp
sbb
lods
dec
push
inc
in
insb
test
push
ljmp
aad
cli
push
aad
js
sbb
loopne
in
dec
stc
jb
ljmp
push
rolb
loopne
push
xor
and
mov
mov
cmp
imull
clc
not
push
mov
insl
sbb
xchg
jmp
and
lock
subl
inc
sbb
cmp
xchg
jg
pusha
cmpsb
jmp
cmpb
sub
ret
inc
int
ss
loop
push
cmpsb
fs
sbb
test
leave
push
lahf
hlt
sub
and
adc
adc
stos
and
mov
xlat
js
cmc
fs
add
cli
jb
sbb
push
inc
ss
dec
push
dec
mov
lahf
xor
jp
adc
fdivrl
into
addr16
aam
mov
and
leave
cs
loopne
cmpl
repnz
js
jbe
mov
fs
adc
and
ja
push
cmp
inc
cmp
int3
inc
and
orb
push
cmp
fdivrs
dec
pusha
int
aad
cmp
and
sub
adc
adc
out
out
test
sub
int3
insb
dec
jno
adc
test
mov
push
lret
ja
or
je
adc
pop
pop
fcompp
lcall
loope
fs
jge
and
stos
xchg
js
dec
insl
popa
mov
push
inc
decb
add
pop
outsl
push
mov
clc
movsb
jb
xor
pop
xchg
xchg
aaa
mov
sbb
insl
inc
mov
loope
adc
fsubs
adc
int
push
push
lcall
pop
popa
inc
push
and
inc
loope
adc
inc
adc
dec
sbb
mov
inc
lds
clc
inc
iret
test
sbb
subb
jle
movsb
xor
hlt
dec
das
adc
lret
jno
fists
fwait
mov
lret
and
aam
popf
mov
roll
push
ja
pop
das
clc
pop
clc
mov
mov
fisubl
sti
loopne
mov
out
push
or
loope
loop
add
popf
xchg
add
or
sub
or
movsl
pcmpgtw
fstpt
outsl
or
movhps
repnz
ror
xor
xorb
aaa
lcall
xchg
rolb
pop
test
out
mov
or
jbe
test
push
dec
or
subl
ljmp
pop
dec
push
sbb
jbe
ljmp
dec
cmp
int3
les
in
jmp
mov
clc
push
xor
pop
pop
xchg
call
das
shlb
xchg
stos
inc
jb
or
add
mov
rolb
pop
nop
jle
es
ss
cmp
inc
mov
movups
mov
lahf
sbb
addr16
jle
lock
mov
mov
aaa
sub
out
mov
ljmp
mov
nopl
and
jns
in
mov
pop
sub
out
dec
pop
push
popa
jle,pt
and
fs
jb
mov
adc
xor
movsb
push
adc
ljmp
adc
or
rolb
push
test
orb
popf
sbb
inc
and
pop
ret
xor
inc
rcll
mov
mov
or
xchg
pop
loopne
loope
pop
cmp
adc
cmp
mov
add
pop
mov
cmpsb
jnp
jle
fidivs
aad
loopne
popa
cld
imul
xchg
hlt
lods
ljmp
add
movsl
pusha
stos
mov
jp
dec
xchg
inc
pop
out
cs
mov
mov
test
enter
cli
ljmpw
jg
mov
or
mov
enter
insl
jp
mov
push
sbb
leave
orl
mov
mov
cmc
outsb
fdivrs
xor
ret
stc
loopne
out
mov
fdivr
shll
ret
adc
jno
xchg
aam
pop
cmc
xchg
ret
fmuls
push
ret
push
xchg
mov
popa
outsb
lds
push
cmpsl
call
inc
rolb
test
dec
and
clc
add
sbb
dec
sub
pop
sub
pop
pop
dec
ss
and
push
iret
pop
lret
push
or
xchg
xor
outsb
and
push
ss
subl
push
dec
enter
sub
cmpsl
cmp
inc
pop
sub
push
rol
push
fiadds
out
lret
lds
mov
push
sub
sbb
aas
lods
movsl
andb
adc
scas
aas
in
push
std
xchg
ds
ret
fldt
loopne
lock
adc
outsl
xchg
push
push
lock
push
rorl
add
push
add
rcrb
call
push
into
scas
xchg
imul
or
inc
inc
mov
lret
sub
jg
sbbb
mov
adc
pop
ret
mov
nop
dec
sbb
or
clc
icebp
pop
nop
icebp
addr16
xchg
sarl
subb
hlt
and
jge
not
fildl
shlb
fs
rcrl
add
fcoms
cmc
icebp
pop
decl
mov
aam
or
movsb
cmp
pop
bound
das
cmp
lcall
or
test
test
inc
mov
push
or
repz
lds
int
inc
push
aad
and
mov
mov
cs
mov
adc
mov
call
sub
shrb
pop
fidivs
dec
or
or
mov
imul
or
outsl
jp
ficoms
dec
push
mov
clc
pushl
push
mov
add
bnd
adc
cs
dec
cld
or
push
pop
cmp
sbb
mov
js
das
stos
lcall
nop
and
scas
mull
xor
and
mov
and
cmpb
dec
shrb
or
clc
outsb
dec
add
jecxz
rolb
lock
loopne
lock
roll
imul
adc
sbb
out
pop
rclb
push
cli
inc
push
ljmp
push
adc
lods
jnp
shll
movsl
push
add
jmp
outsl
cmp
pushl
aad
movsb
push
mov
pop
pushl
loope
add
or
push
adc
popa
jbe
pop
push
mov
sbb
das
push
les
push
mov
inc
sub
icebp
dec
push
out
jl
or
mov
mov
fcmovu
sahf
sbb
out
ret
inc
pusha
push
es
roll
cwtl
mov
push
inc
ret
lods
cmc
dec
xchg
popf
mov
scas
adc
inc
xchg
cmp
adc
hlt
jae
decb
push
aas
std
cmp
mov
pop
or
xchg
push
test
stos
or
or
cmp
loop
push
pop
xchg
sbb
pop
jo
pop
mov
push
mov
fs
push
test
pop
fidivrl
and
cmp
les
pop
pop
jp
xor
jbe
ss
lahf
push
mov
punpcklbw
lock
mov
js
scas
sub
jnp
push
push
lret
dec
imulb
pop
jle
and
and
loop
add
dec
hlt
jg
test
mov
cmp
or
push
cld
xor
xor
add
push
or
ret
inc
push
or
rolb
fbstp
testl
or
scas
andl
out
adc
add
adc
fstl
xchg
push
sbb
test
insb
into
and
jo
add
cmc
mov
ljmp
mov
in
pop
leave
dec
dec
arpl
dec
out
sub
mov
ljmp
adc
mov
faddl
cmp
adc
lahf
cmpsb
mov
push
in
lds
je
ljmp
cmp
push
movsb
jle
push
call
jp
cltd
sub
and
jg
pop
cld
and
or
popa
xorb
je,pt
inc
cli
mov
aaa
jo
jbe
fdivp
andl
addr16
loopne
ret
addl
pop
or
js
xor
and
inc
clc
add
test
inc
push
daa
shlb
jecxz
addr16
cmpsb
arpl
testb
add
outsb
js
inc
fiaddl
sbb
sub
js
rolb
icebp
pusha
xor
mov
les
sub
and
pop
lahf
out
mov
shl
imul
lock
pop
cmp
filds
test
cmovo
add
xchg
sub
mov
or
clc
negb
adc
das
xchg
jecxz
adc
pushl
jbe
test
inc
and
add
sarb
es
pushf
loop
cmpsb
outsl
ret
sbb
mov
leave
push
jmp
lahf
mov
popa
mov
rcrl
or
xchg
pusha
mov
xchg
mov
xor
dec
adc
jb
mov
dec
push
es
insl
push
dec
jle
add
adc
aad
sub
imul
nop
adc
mov
insb
mov
and
mov
imul
xor
jp
cmp
ja
pop
outsb
and
movl
or
into
jecxz
fcomps
mov
or
jecxz
dec
jmp
fisttps
pushf
cs
jnp
test
rcrb
cs
nop
jo,pn
dec
aas
call
mov
stc
sub
lret
or
daa
fmull
movsl
roll
add
sahf
jo
ficomps
orl
fs
lods
xchg
cli
rorb
imul
stc
dec
mov
loopne
stos
xchg
jns
les
inc
xchg
es
push
and
aas
adc
rclb
orl
popa
ljmp
sub
leave
scas
mov
add
hlt
enter
sbb
jmp
mov
mov
mov
inc
shll
ds
xor
pop
mov
mov
pop
loop
push
sub
or
divl
mov
mov
and
dec
testb
data16
icebp
xchg
mov
xor
jb
xchg
lods
popf
mov
lret
mov
xchg
or
mov
fisttps
sbb
and
lcall
iret
aam
mov
addl
and
adc
fimull
movsb
in
xor
insl
cmc
aad
and
mov
sbbb
ljmp
and
clc
daa
xchg
push
and
fldl
fsubs
push
cli
pop
loopne
dec
cmp
clc
jo
or
dec
inc
xchg
mov
cs
inc
rcrb
jbe
sbb
sbb
and
pop
mov
xchg
mov
xor
jae
loope
or
xchg
int
add
pop
mov
push
xchg
sbb
cld
idivl
add
iret
push
js
add
mov
je
or
and
mov
add
dec
sbb
xor
ss
lods
cwtl
mov
mov
pop
xchg
sub
jae
jg
or
lds
popa
out
mov
jb
cmp
lcall
jge
lret
add
xor
inc
push
pushf
lret
jmp
push
mov
adc
jnp
adc
roll
add
mov
shrb
xchg
int3
mov
ja
ljmp
aas
xor
jp
inc
pop
sarb
dec
pop
or
push
jo
sbb
inc
sarl
add
dec
pushf
cs
mov
loope
dec
popa
sub
add
xchg
scas
hlt
es
mov
jp
popa
mov
aaa
jecxz
lds
std
rorb
jl
cmp
sbb
mov
mov
adc
out
in
adc
fs
pop
xchg
fistpll
xor
push
adc
test
aad
ja
sub
rolb
mull
mov
pop
test
mov
pop
jle
mov
pusha
mov
mov
add
jb
ds
sbb
aad
arpl
add
add
rol
insb
movsl
loop
inc
or
cmp
lcall
add
jbe
and
add
mov
aas
std
push
pop
data16
lods
xor
testb
mov
mov
sub
and
rorl
xor
jg
jg
push
sbb
or
les
sbbl
movsb
add
xchg
mov
rolb
fmull
repnz
sub
addb
mov
test
mov
cmp
and
loopne
int
dec
icebp
xor
sub
dec
dec
jbe
and
mov
mov
lret
pop
mov
xor
gs
xlat
pop
inc
in
hlt
repnz
xor
cld
cmp
insb
add
out
jp
push
incl
add
cmp
loopne
fistpll
xor
pop
adc
sbb
fbld
iret
dec
subb
xor
fidivs
mov
adc
sarl
mov
pop
dec
mov
cld
movsb
adc
in
mov
movsb
and
add
addb
push
loope
cmpb
inc
repz
and
imul
outsl
clc
push
mov
adc
push
pop
pushf
mov
ret
add
pop
rclb
sar
mov
adc
push
cmp
dec
call
fisubs
dec
insb
mov
add
sbb
dec
lods
mov
fwait
jle
rorl
pop
subb
jbe
mov
xor
out
call
test
add
push
xchg
push
jmp
imul
mov
xchg
repnz
movsl
mov
add
lahf
out
jp
pushf
xchg
jns
xchg
mov
ds
xor
paddw
int3
gs
out
ficomps
mov
and
test
andb
inc
mov
shrb
ljmp
lock
mov
pop
orb
movl
popa
mov
arpl
xchg
cmpsl
inc
scas
mov
mov
pop
push
dec
fisubrs
rclb
or
xlat
pusha
mov
push
add
filds
mov
xor
stc
xchg
pusha
and
popf
jb
dec
xor
mov
dec
cmp
nop
enter
inc
or
dec
push
sbb
in
xor
add
jo
shlb
enter
push
leave
jne
incl
xchg
iret
inc
fstps
dec
sar
clc
rolb
pop
or
mov
xchg
lret
jge
imul
outsl
push
orl
xchg
repnz
lock
sbb
icebp
divb
mov
jle
adc
fiadds
inc
setnp
xchg
push
sahf
push
ret
xchg
stos
adc
pop
out
mov
cwtl
movsl
mov
mov
xor
fistpl
push
rol
sub
mov
mov
repz
or
outsb
pop
decl
adc
sbb
or
aam
pusha
fidivs
loop
mov
pop
in
jo
lret
cmp
jb
cmp
mov
clc
aaa
pop
rcll
xchg
xor
cwtl
pop
pop
xor
mov
or
push
cmp
or
xchg
stos
lods
sbb
inc
push
adc
cs
pop
dec
mov
in
pop
jno
hlt
and
push
or
push
bound
filds
adc
out
lods
inc
sbb
mov
ss
loopne
mov
inc
sub
pusha
sub
aam
testb
or
cld
cmp
or
or
jb
cmp
gs
or
fcomip
jge
sub
movsb
add
mov
loop
jne
xor
add
jle
in
or
movsb
add
repnz
idivb
and
out
out
pop
mov
pop
or
or
inc
mov
sub
sbb
mov
mov
or
test
jo
jb
jmp
ret
adc
scas
sti
lahf
and
or
mov
xor
mov
mov
dec
cs
cmp
push
xchg
es
fisttps
inc
bound
icebp
in
inc
jp
popf
jp
adc
lock
and
pusha
js
xchg
sar
aas
inc
ja
lret
inc
hlt
cmp
push
inc
pop
dec
js
movsl
mov
sub
shll
xchg
inc
or
push
rclb
aas
fcmovnb
inc
add
ljmp
addb
es
callw
jbe
xor
mov
fcmovnbe
xor
mov
pop
lods
mov
decl
mov
loopne
xchg
mov
dec
loop
jb
xchg
jo
lahf
lret
testb
cmp
sbb
addr16
cmp
enter
scas
add
add
xor
std
adc
xor
aas
and
stos
shrl
out
incb
sub
daa
sbbb
xchg
mov
inc
inc
fwait
lea
ljmp
or
and
sbb
pop
sbb
stos
ret
mov
icebp
shufps
enter
scas
mov
inc
icebp
mov
scas
mov
mov
adc
push
sub
mov
or
mov
incl
leave
or
cmp
xchg
dec
aas
adc
out
cmp
xor
inc
cwtl
mov
push
sub
mov
std
xchg
jl,pt
enter
sbb
cmp
inc
or
xchg
and
test
or
pop
push
mov
adc
aas
push
call
fmuls
mov
pop
push
sbb
or
out
pop
jno
xor
add
add
test
shl
lcall
shlb
mov
popf
in
xchg
aaa
mov
push
sbb
xor
add
faddl
scas
pop
pop
cld
sub
or
push
cmp
loopne
lods
pusha
mov
scas
dec
fcmovu
mov
adc
dec
cltd
jle
cmp
sub
sub
sub
shr
cmp
jg
addl
pop
mov
test
bound
mov
add
mov
pop
mov
fdivr
xor
dec
out
pop
xchg
add
leave
dec
mov
std
call
roll
jo
sarl
or
das
ljmp
cwtl
add
decb
fistpll
sahf
stos
mov
jne
push
in
pop
test
mov
pop
pop
push
mov
je
mov
imul
adc
mov
daa
mov
inc
lods
add
sbb
aad
aaa
out
fadds
push
pusha
adc
mov
sub
inc
fistl
dec
and
data16
add
mov
mov
les
pop
repnz
sarb
mov
loop
sbb
xor
dec
call
fdiv
xchg
bound
imul
or
and
int
mov
and
repz
cmp
add
or
insl
in
out
mov
test
bound
and
fldenv
dec
mov
pop
rorb
cmp
push
push
fwait
into
addr16
inc
adc
dec
cmc
stc
inc
pusha
pusha
outsl
push
cmp
cmc
pushf
js
fcos
cli
movsb
std
adc
adcb
fadds
ljmp
inc
out
fmuls
mov
xchg
bound
pop
mov
scas
mov
orb
mov
pop
lea
repnz
rcrb
sub
xchg
pop
bts
sbb
call
stos
loopne
test
inc
stos
mov
loope
and
jne
jbe
insl
pop
push
dec
xor
sbb
dec
rcrb
or
aas
ficoml
add
ds
stc
into
sub
pop
inc
cmp
arpl
fldenv
mov
pop
sub
pop
adc
mov
lds
and
mov
movb
fistps
das
adc
push
pusha
fdivrl
cmp
ja
pop
or
xchg
fstpt
orl
fisubl
push
mov
sub
mov
jbe
pop
addr16
push
or
mov
js
mov
jo
sti
and
pushf
add
rcrb
or
andl
call
adc
mov
mov
test
mov
push
into
sub
mov
test
inc
aaa
inc
andl
mov
add
pop
push
mov
dec
frstor
pushf
rclb
cmp
push
add
lahf
dec
pop
or
adc
aaa
aas
pop
add
adc
sub
imul
jg
cli
lock
xchg
mov
inc
test
adc
bswap
inc
fmull
inc
ffreep
xadd
mov
out
add
call
dec
je
sbb
fucomi
insb
jle
addl
loopne
dec
mov
jmp
nop
push
and
pop
aam
jo
icebp
or
aaa
inc
dec
insb
out
js
arpl
inc
subb
adc
add
jg
and
out
fdivrl
cwtl
movsl
stos
jmp
mov
push
js
mov
lcall
decl
icebp
mov
pop
lcall
jno
inc
xchg
daa
fildl
mov
sub
and
fisubs
ret
stos
dec
loop
add
bound
or
mov
mov
lea
add
add
enter
mov
cmp
mov
add
test
jecxz
fwait
clc
ljmp
cmp
decl
pushf
sbb
add
sub
jp
pusha
lods
xchg
adc
pop
mov
gs
push
loopne
xor
loop
cmpsb
pop
je
or
adc
sub
mov
cmpsb
dec
cmp
mov
stc
mov
inc
sahf
push
in
test
mov
std
add
fiaddl
mov
jnp
inc
aam
cmp
adc
adc
sbb
sbbb
push
sub
push
or
subb
inc
clc
cwtl
push
push
jge
pushf
ss
inc
ret
xchg
andb
roll
call
and
push
inc
sub
mov
pusha
dec
and
xlat
fstp
or
inc
and
repz
clc
bound
ljmp
lea
scas
push
or
jp
jle
mov
cmp
popf
mov
cmp
fwait
inc
out
es
sahf
subb
pop
mov
adc
cli
xchg
push
rcll
out
sub
jbe
hlt
fcomi
push
scas
sarb
in
inc
into
repz
jnp
pop
adc
outsb
scas
mov
cld
add
mov
pop
mov
ss
mov
xor
dec
cmpsb
sbb
jo
push
pusha
cmpb
inc
scas
adc
test
sub
jl
aas
adc
incl
cwtl
fisubl
inc
or
sub
xchg
sub
xor
add
clc
lcall
js
jbe
sub
popa
outsb
loopne
in
cmp
call
sahf
mov
testb
js
incl
cli
ljmp
loop
ja
clc
inc
out
or
es
shr
aaa
xor
xor
cmp
ret
dec
clc
mov
lock
dec
cmp
pusha
rclb
or
add
out
cmp
cmpl
mov
loopne
jbe
test
xchg
nop
pop
rcr
inc
push
clc
dec
cld
lcall
insl
mov
mov
and
popa
sbb
xchg
sbb
cwtl
insb
inc
and
test
bnd
xlat
outsb
adc
js
pushf
sahf
aad
loop
add
hlt
jnp
popaw
dec
outsl
sub
xor
fcompl
call
push
loop
push
cltd
test
mov
fs
movsb
or
cld
pop
and
pop
pop
push
add
xchg
adc
sbb
call
push
loopne
hlt
cmp
sub
inc
pop
ljmp
push
and
add
std
sbb
or
adc
fists
adc
test
pop
hlt
xchg
cltd
xchg
int3
cli
pop
out
sbb
cmp
cmpsb
mov
mov
popa
gs
hlt
or
mov
and
and
xchg
mov
les
mov
lods
xchg
cltd
pushf
ljmp
cmp
out
inc
push
mov
outsl
fistpll
in
xor
xchg
adcb
je
es
add
bound
and
or
fwait
jle
mov
sahf
cmpsb
popa
mov
cmp
ret
jo
fcmovnb
ja
roll
movsl
sahf
add
movsl
aad
sub
lcall
je
aaa
push
jecxz
imul
je
add
mov
sahf
cmp
ret
ljmp
pop
je
push
das
js
add
cwtl
je
dec
cmc
ljmp
sbb
add
ds
je
ljmp
adc
popa
icebp
sbb
mov
add
adcl
pop
jp
es
mov
dec
fidivrl
add
call
mov
pop
je
mov
rcll
fisttps
es
and
sub
lds
sbb
lcall
sbb
insl
sbb
or
mov
or
fwait
jle
adc
int
repnz
in
add
fadd
push
cld
stos
push
push
mov
roll
movsb
aas
data16
or
mov
outsl
int
mov
push
test
nop
add
mov
mov
icebp
jb
jecxz
or
inc
popf
mov
push
mov
fbld
movsb
ds
notl
fidivl
xor
jp
xchg
mov
add
mov
add
mov
jg
adc
add
add
popf
push
jp
and
rolb
xchg
push
popa
idiv
add
fdivs
sbb
test
dec
shlb
jecxz
adc
out
add
scas
movsb
mov
lret
pop
fcoms
stc
loopne
movsl
xchg
sub
dec
xor
insb
jg
clc
push
push
mov
fiaddl
in
xor
jb
mov
out
les
pop
lcall
xlat
pop
push
push
xor
lcall
and
mov
mov
mov
bnd
std
xor
add
lock
sbbb
cmp
jp
jb
daa
xor
cmp
sbb
xor
std
test
out
push
mov
shll
inc
in
sub
inc
in
sbb
mov
add
mov
pusha
mov
and
pop
or
mov
xor
dec
loop
mov
lods
pop
add
xlat
in
cmp
stc
loop
out
xchg
xor
inc
clc
jbe
psllw
ds
dec
push
mov
ja
test
adc
and
cld
fists
sti
dec
jp
dec
cmpb
mov
mov
and
inc
fistpl
xchg
or
arpl
and
pop
cld
or
jge
or
or
paddb
rol
pushf
out
loope
inc
fbld
lahf
fwait
adc
aam
mov
jae
mov
push
pop
cld
adc
mov
cmp
xchg
cmp
icebp
and
ljmp
jle
decb
dec
sbb
out
fs
dec
dec
push
fcmovnb
xchg
mov
push
mov
aad
push
lock
rol
add
inc
scas
fsubs
jmp
mov
enter
das
clc
add
or
mov
roll
and
add
aad
shlb
ds
mov
sub
jp
imul
rcr
lods
jbe
in
adc
jns
jo
push
jnp
es
movsb
sub
or
rcrb
fsubl
cmp
stos
xchg
mov
imul
push
and
jo
sub
jo
cmp
add
dec
mov
or
rcrb
std
push
pmulhuw
mov
pop
cmpsb
xor
jb
pop
ret
das
js
and
xor
jb
xchg
push
pop
add
sub
scas
rcr
in
pop
sbb
push
aad
lods
mov
pusha
push
test
rcrb
div
or
mov
insl
arpl
push
movsb
push
or
lds
mov
sub
cli
shr
mov
and
jnp
call
xchg
test
test
ljmp
stos
add
pusha
jecxz
int
outsb
push
xor
enter
push
xor
jo
int
and
and
jne
loope
and
cmp
sub
je
inc
ljmp
add
inc
mov
loope
adc
cmp
pop
js
pop
sbb
out
lock
call
xchg
adc
sar
jnp
orb
xchg
scas
push
inc
loopne
adc
lea
add
push
lock
out
sub
and
clc
imul
add
and
enter
aam
clc
cs
in
ja
sbb
pop
std
sarl
pop
pusha
cmp
sub
sbb
sub
mov
sub
add
pop
cli
outsl
je
movsb
and
stos
in
lcall
loopne
adc
in
dec
add
clc
hlt
pop
push
outsb
stos
xchg
mov
sbb
or
test
cmpsb
and
sub
jle
xlat
idivb
and
fistl
cs
dec
inc
fsubrs
or
mov
push
mov
pop
push
insb
cld
pusha
push
popa
pop
out
jl
fsts
adc
dec
mov
fs
data16
xchg
fyl2x
outsl
outsb
and
clc
ds
dec
bound
adc
mov
test
rcl
xchg
es
and
xchg
and
mov
pushf
dec
fistl
cld
push
mov
lea
cmpsl
xchg
shl
mov
sti
dec
or
mov
les
add
inc
dec
pop
test
loopne
adc
out
in
sahf
outsb
cmp
mov
clc
push
aas
dec
das
mov
gs
ss
nop
hlt
mov
cwtl
xor
pop
and
dec
stc
ret
inc
add
inc
dec
addb
adc
aas
sbb
xchg
sub
add
mov
jmp
mov
push
in
mov
mov
xchg
in
xchg
or
and
lock
ret
and
inc
and
pop
xchg
mov
mov
das
pop
mov
jmp
push
pop
cltd
inc
mov
dec
outsb
dec
testl
nop
jmp
les
push
xchg
ss
sbbl
push
mov
dec
push
cs
cmp
jo
xchg
imul
pop
iret
mov
mov
repz
pusha
fmuls
xor
dec
shll
stos
inc
mov
test
push
aam
or
sub
clc
or
js
inc
ret
jno
xchg
add
inc
add
fcom
jp
sub
jecxz
sub
scas
cmp
xchg
add
inc
popa
ja
test
ret
xchg
add
mov
jmp
sti
dec
jne
popa
sbb
inc
or
cmp
sarl
xlat
mov
push
inc
rorb
push
les
ficoml
call
lss
pop
jmp
pusha
int
scas
mov
das
dec
jo
aad
ds
stos
sub
enter
add
cmpsb
clc
cld
cmp
or
sbb
faddp
aas
sahf
mov
cmp
mov
push
es
mov
push
xor
sti
jmp
sbb
push
mov
sbb
ja
dec
scas
stc
pop
sub
sbb
pop
push
mov
imul
cmp
jl
inc
inc
adcl
sbb
or
or
pop
hlt
mov
addr16
sub
cmc
aas
jmp
in
aas
mov
ja
mov
cmpl
jno
sahf
pop
adc
jg
popa
mov
incb
push
in
rcll
inc
push
sahf
jnp
jp
jmp
test
outsb
mov
sahf
mov
pop
push
add
in
sub
stos
jbe
scas
lods
dec
xchg
cmp
xchg
cmp
mov
push
ja
jle
or
jae
push
pop
xchg
fsubr
sbb
xor
mov
ficompl
cmp
push
mov
mov
rorl
call
ds
cmp
cli
jle
jne
and
mov
ss
push
mov
inc
fidivrs
pop
xchg
ds
push
adc
mov
aam
aad
jne
ss
or
pop
out
into
jmp
pop
xor
lcall
daa
out
rclb
mov
add
add
outsb
mov
in
sbb
lcall
lcall
inc
shl
xchg
and
ret
xor
out
push
push
push
test
scas
lar
or
xchg
sub
adc
aaa
aas
clc
jo
push
or
push
and
mov
pop
inc
and
mov
in
sahf
nop
and
mov
insb
sbb
add
sbb
iret
out
sub
lock
mov
stos
ljmp
lahf
xorb
push
stos
dec
sbb
out
adc
xchg
cltd
call
mov
cmp
lds
or
aas
lcall
fldl2t
add
pop
add
push
push
inc
aaa
adc
xor
xchg
cwtl
xchg
mov
jbe
jmp
scas
cmp
pushf
dec
mov
jno
push
rorl
aam
es
xchg
jg
inc
pop
adc
push
xchg
inc
cmp
jmp
jmp
cmpsb
xchg
and
mov
sbb
in
punpckhbw
ret
mov
lret
mov
mov
test
pop
jne
sub
scas
imul
out
lock
jb
push
scas
incl
sub
push
mov
outsb
insb
or
and
aam
jne
or
jnp
cld
dec
push
push
push
cmpsb
xor
pop
insb
mov
sbb
and
subb
adc
cmpsb
xlat
inc
ret
adc
pop
ljmp
mov
push
idivb
fcomps
mov
nop
pusha
sbb
ficoms
cmp
insb
or
pop
dec
jbe
cmp
cmpsb
jbe
jge
lcall
xor
or
ljmp
sub
xchg
enter
test
test
jmp
adc
sub
fneni(8087
xor
mov
mov
into
sbb
sub
sub
add
movsl
sahf
cmp
das
call
jg
out
adc
cmp
nop
ja
mov
jg
scas
push
jecxz
jge
mov
push
dec
pop
mov
jl
mov
loopne
test
fwait
sub
jecxz
sbb
pop
cs
xor
fs
lds
jmp
adc
test
ficoml
je
jl
inc
push
pop
adcb
xchg
mov
popl
aaa
std
push
inc
mov
cs
inc
xor
jg
sbb
add
lea
mov
pop
sbb
mov
sbb
jg
ja
cli
mov
rcrb
call
pop
addb
push
ljmp
rorl
mov
pop
aaa
push
aad
inc
sbb
sbb
js
or
mov
fdivrs
pop
aam
out
mov
mov
mov
sub
jg
add
je
int3
mov
cld
xor
sbb
jl
sub
and
iret
and
inc
or
sbb
and
nop
inc
adc
rclb
sbb
pushf
mov
pop
push
imul
xchg
out
sahf
jmp
push
push
pushf
mov
sbb
lret
clc
xchg
loopne
decb
xor
call
adc
int3
cs
or
insb
cmp
push
adc
movsb
cmpb
lret
sbbl
cs
mov
add
aad
push
mov
mov
sub
mov
enter
loop
gs
pop
pushf
push
aas
dec
orb
mov
scas
xor
mov
dec
xor
push
es
adc
lock
mov
cmp
imul
movsb
test
inc
enter
jbe
and
or
je
cmc
inc
or
fisttpl
and
push
popf
es
jns
mov
rcrb
push
js
ds
test
insb
popa
inc
xorl
pusha
orl
mov
test
cli
mov
pop
lods
mov
push
and
and
adc
pop
test
scas
ds
push
dec
add
adc
push
adc
lock
cld
mov
sbb
jecxz
sub
mov
lcall
xlat
pop
mov
lcall
mov
iret
sbb
push
add
outsl
adc
add
push
movsb
add
add
aas
andb
inc
and
push
loop
push
dec
idivb
in
out
test
clc
mulb
jg
and
push
mov
shlb
clc
pop
icebp
loope
xchg
movsl
add
adc
xchg
loope
inc
mov
daa
icebp
pop
push
dec
mov
and
mov
jo
jp
and
sub
pop
sbb
dec
push
mov
cmp
sbb
pop
add
adc
es
pop
push
xchg
mov
lret
pop
in
scas
inc
test
cs
cmp
pop
adc
and
pop
sbb
add
mov
mov
fwait
pushl
xor
ret
hlt
push
add
mov
xor
add
fdivrs
xchg
jb
movsb
inc
leave
or
hlt
add
in
add
xchg
inc
in
pop
fldt
or
push
das
shlb
xor
into
in
incb
adc
push
pushf
gs
ljmp
adc
add
inc
fimull
int
jg
sub
sbb
inc
mov
sub
dec
les
or
aad
fmuls
cmpsl
out
add
mov
fwait
mov
arpl
push
or
and
add
loop
sahf
cli
and
lock
xorb
pushf
cmp
pop
mov
shrb
inc
cmp
sub
pushl
pop
xor
inc
aaa
sbb
adc
jle
iret
push
lock
xor
pusha
push
push
sarb
push
insb
test
mov
das
add
add
push
test
push
push
xor
jnp
xchg
add
popf
mov
inc
pop
lea
mov
ljmp
push
push
pop
adcl
pop
pop
lret
lods
inc
and
adc
orb
pop
push
fdivs
dec
jb
cwtl
push
punpcklbw
sub
lea
and
sub
jb
out
fnstcw
jge
jo
ljmp
and
add
xor
mov
lea
loopne
lahf
or
mov
push
inc
adc
sbb
jle
sub
mov
and
add
sarb
jecxz
repnz
lcall
xchg
jbe
inc
inc
push
pop
icebp
outsl
jle
push
dec
shlb
inc
mov
outsb
push
adc
fsubs
arpl
out
andb
push
or
jne
pop
mov
or
push
mov
dec
movsl
sub
push
in
and
xchg
pushf
shll
inc
cmpsb
sub
lock
shl
push
adc
cld
test
dec
ja
fistpll
and
add
cmp
mov
mov
mov
hlt
cmp
and
inc
in
aaa
movsl
jmp
xchg
das
add
and
add
mov
or
andb
loop
mov
sub
clc
test
mov
shl
dec
mov
insl
incl
mov
pop
xor
je
xchg
icebp
sub
adc
out
stos
or
mov
jle
and
fwait
jmp
adc
cs
movsl
mov
sub
das
insl
or
repz
push
xchg
cmp
in
js
loope
fbstp
and
push
jg
pop
int3
or
aaa
and
in
inc
dec
push
and
jno
xor
push
push
xor
ja
pop
sub
shll
adc
rolb
dec
arpl
test
adc
mov
mov
lods
sbb
daa
or
cwtl
sarb
xor
or
sbb
jns
cmp
sbb
daa
fidivs
push
mov
out
nop
pop
test
add
xor
adc
adc
inc
test
and
mov
lock
xor
mov
test
cmpsl
in
and
jne
movsl
mov
push
call
push
xchg
sti
mov
push
loopne
xchg
dec
jg
sarb
or
mov
imul
push
imul
mov
lret
xor
push
nop
lcall
pop
jne
add
jo
xor
ss
sbb
push
movsb
cmp
call
adc
push
int
xchg
add
mov
sbb
scas
bound
test
cmp
stos
dec
jp
lods
ret
lahf
and
mov
inc
lcall
scas
int
jmp
lods
mov
mov
hlt
mov
enter
sub
xchg
es
sbb
imul
je
and
cmp
daa
xor
sub
stos
gs
lods
in
dec
rolb
sub
cld
inc
lock
mov
pop
ret
mov
daa
push
jl
out
or
cmp
and
dec
add
roll
jecxz
pop
cld
hlt
fldt
jo
cmp
xchg
adc
es
pop
jl
jb
inc
test
adc
out
leave
lret
fwait
out
push
mov
ret
push
clc
pop
xor
mov
jl
scas
jnp
ss
dec
cli
or
das
sub
cld
adc
pushf
pop
sbb
test
icebp
pop
cmc
xchg
test
out
imul
lock
or
sbb
sub
xorl
je
pop
inc
in
push
add
and
in
pop
fsubp
mov
jo
cmpsb
pop
fisubl
or
fs
or
dec
icebp
insl
xchg
mov
shlb
adc
adc
adcb
xchg
mov
sub
xor
sahf
push
add
pop
push
std
fs
inc
aaa
jo
mov
rorb
cmp
das
sbbb
add
imul
mov
cmpxchg
call
fcompl
cmp
jno
mov
outsb
mov
out
stos
clc
fdivrs
fstpl
jp
loop
xor
sub
inc
xor
mov
sub
je
jno
outsb
jp
or
or
rcrb
sarl
and
cmp
add
dec
or
or
shll
and
xchg
addr16
add
testb
stos
mov
jo
add
ficompl
loop
mov
dec
loop
rcrb
jle,pn
ret
fbld
and
inc
test
in
pop
test
pop
lret
dec
filds
in
inc
imul
nop
jmp
pop
or
mov
add
out
outsb
or
fsubrs
pop
jp
pop
inc
rcr
xor
mov
out
fcomip
jg
inc
imul
inc
pop
rcr
mov
shlb
push
std
dec
movsb
or
mov
cmp
aam
push
push
loope
add
loop
cld
mov
call
mov
faddl
jecxz
pop
xor
push
push
dec
cmpsb
je
or
inc
add
xor
in
lahf
push
inc
mov
inc
rcr
and
jg
mov
push
adc
xor
stos
stos
mov
addb
test
jbe
jae
aaa
addb
xchg
cltd
or
test
decl
ljmp
inc
mov
cmc
or
ficoml
lods
mov
mov
jno
push
add
imul
popa
inc
push
std
ret
mov
mov
dec
rcll
pusha
leave
and
mov
xchg
sub
jecxz
pop
xor
int3
bound
test
and
bswap
daa
jbe
mov
ljmp
nop
or
add
cmpsb
mov
cmp
cld
add
pop
xchg
mov
movl
and
imul
mov
andl
popf
xor
and
xor
mov
add
adc
popa
ja
bound
cmp
testl
lods
mov
mov
call
and
jnp
push
xchg
pop
lcall
cli
decl
sbb
subl
neg
fisubl
xchg
icebp
stos
movswl
test
dec
dec
fwait
pop
cmpb
sbb
xchg
shl
sbb
xor
jae
icebp
hlt
push
jne
jg
mov
daa
test
add
inc
jg
mov
ja
sub
sub
std
sub
xchg
and
pop
push
imul
add
into
or
sub
pop
and
je
mov
clc
sarb
cmp
ficompl
scas
rclb
add
lret
and
ss
push
add
cli
mov
mov
adc
sbb
adc
mov
mov
push
stos
mov
aad
stc
xor
int3
push
out
xchg
cltd
aam
pop
or
adc
fwait
sub
sbb
push
mov
xchg
test
loopne
pop
sbb
test
push
cwtl
repnz
or
sahf
jle
imul
lea
and
and
and
dec
orb
sarb
mov
js
cld
pushl
push
and
fs
pop
cli
popl
pushf
insl
lds
test
push
fadds
xor
inc
sub
fdivr
sbb
shlb
shlb
and
stos
shlb
and
ja
lods
ljmp
iret
loopne
imul
aaa
das
insb
test
movsb
mov
cmpl
cmp
sub
dec
mov
jmp
xchg
cli
jmp
xor
jge
pop
add
cmp
stc
mov
or
and
insb
inc
sub
fsubs
aas
decl
jge
faddl
sub
aas
bound
adc
add
or
mov
lea
cli
jg
les
int
jecxz
loope
out
sub
adc
jb
mov
vaddsd
pusha
addr16
aam
repz
push
clc
fisttps
mov
out
call
mov
ljmp
mov
xchg
push
ret
adc
jns
lret
push
mov
or
cmp
mov
gs
lcall
into
inc
aam
lock
jl
cld
push
add
mov
adcl
pop
out
je
and
nop
std
sbb
lock
aas
mov
fs
mov
aam
fldenv
insb
pop
cmpsb
add
notrack
dec
insb
inc
and
jb
push
mov
push
out
mov
fbld
mov
std
xlat
enter
sbb
xchg
jae
lods
and
push
inc
adc
xor
push
jge
fcompl
stos
xor
or
inc
cmp
rorl
cs
push
fsubs
mov
repz
inc
mov
movsl
idivb
das
jge
test
out
mov
jg
xchg
ds
imul
add
sbb
and
jecxz
push
repnz
pusha
xor
add
loopne
xadd
notl
jno
jb
dec
out
mov
cmp
clc
push
mov
cltd
push
adc
or
push
or
mov
add
aad
dec
dec
jg
popa
stos
loopne
rorb
inc
movsl
es
sub
subb
pop
lret
xor
jmp
es
cmp
xlat
insl
iret
sarb
and
std
mov
popa
cmp
out
push
or
sub
decl
adc
jge
jo
pop
and
mov
fdivrs
stos
ds
pop
pop
into
push
adc
sub
scas
fcomip
mov
mov
loop
and
fadd
mov
mov
and
push
jle
mov
dec
sub
xor
in
hlt
push
or
out
sbb
incl
std
iret
inc
mov
mov
add
lcall
mull
push
push
clc
in
icebp
jp
or
outsl
movsb
fcomip
push
sub
xor
call
dec
jg
roll
xorb
mov
and
add
les
pushf
push
push
cmp
or
push
std
decl
movsl
data16
icebp
mov
dec
hlt
call
test
xchg
imulb
movb
pop
or
fstl
in
mov
bound
mov
cmp
dec
movsb
adc
jle
xor
xor
xor
decl
inc
sub
xor
or
or
xchg
inc
sbb
add
outsb
loopne
xchg
and
pusha
shll
movups
or
cld
inc
sub
imul
ss
movsb
mov
arpl
aaa
ljmp
hlt
neg
es
andb
jmp
or
fistpll
scas
or
test
inc
cmp
adc
cmp
js
pop
fmuls
dec
seto
testb
clc
call
xor
in
mov
add
dec
call
mov
adc
push
cmovo
add
lcall
sub
mov
sbb
cmp
adc
add
call
pusha
pushf
mov
stos
lods
or
mov
cld
in
dec
add
lock
push
arpl
arpl
pop
popa
int
repz
das
fidivs
sub
movl
adc
dec
into
inc
imul
cmpsb
mov
dec
test
js
cmp
subb
dec
pushf
mov
xchg
cli
pop
call
mov
sbb
mov
arpl
test
cmp
imulb
pop
pop
mov
inc
cmp
pushl
mov
loopne
jl
mov
mov
xchg
imul
sbb
test
lcall
cmpsl
out
sub
add
and
into
aad
sub
mov
lret
sub
iret
pushf
lret
sbb
ds
pop
dec
rorb
dec
test
push
pop
dec
adc
in
testl
ds
sbb
ror
fbld
mov
cmpsl
call
mulb
sbb
jg
cli
sbb
xchg
xchg
push
pop
or
rcll
mov
cmp
test
sub
mov
and
sbb
test
inc
daa
jp
ss
inc
sub
cli
outsl
hlt
adc
lret
xor
xor
fisubs
stc
sahf
push
add
iret
xchg
add
cs
or
dec
repnz
sub
xlat
xchg
push
mov
lret
lods
pushl
dec
popa
test
subl
scas
add
das
and
clc
mov
adc
nop
or
popf
jle
adcb
andl
outsb
pop
jmp
dec
mov
mov
std
mov
add
xor
neg
adc
jae
addr16
xor
outsl
add
xlat
ret
mov
xchg
xor
cmpb
pop
imul
js
fdivs
xor
insb
rol
and
mov
ljmp
push
enter
incl
and
mov
jo
mov
inc
fdivl
ret
enter
xchg
mov
cmp
test
data16
movsb
mov
and
mov
mov
cmpsb
jle
test
adcb
imul
inc
loope
outsl
popf
jecxz
bound
fdivr
pop
or
pop
outsb
les
pop
mov
aam
jno
daa
or
loop
dec
mov
testb
push
jae
dec
sbb
clc
sbb
mov
repz
enter
arpl
dec
pop
push
sub
inc
mov
fcmovnu
xchg
inc
mov
in
and
clc
ljmp
lret
dec
mov
daa
popf
push
cmc
sub
sbbl
roll
or
inc
mov
add
mov
pop
bound
hlt
popa
sarl
jl
jecxz
ret
dec
push
bound
xchg
icebp
cmp
lods
aas
and
xchg
addl
inc
shl
sub
loop
mov
fldl
es
loopne
xchg
mov
xor
stos
hlt
pusha
movsl
out
xchg
cwtl
test
test
movsb
subb
insb
insb
es
or
push
mov
mov
out
jecxz
push
mov
pop
aaa
mov
mov
xchg
mov
add
sarb
add
and
cmpsb
mov
adc
jl
sbb
lret
lcall
shr
mov
mov
adc
cld
mov
push
sbb
lock
xor
shl
add
xchg
or
cld
add
inc
mov
pop
pop
leave
mov
mov
or
or
out
iret
jno
mov
add
and
xchg
aad
mov
out
mov
fimuls
add
ja
pop
dec
inc
sub
dec
or
xchg
cmp
pusha
sbb
xor
pop
pushl
mov
out
push
lods
sbb
sbbb
popa
push
sub
push
inc
loop
enter
dec
notl
jbe
mov
fs
das
add
faddp
cli
test
push
loope
sub
scas
lcall
mov
icebp
or
adc
xorb
aas
je
popa
push
mov
inc
add
cmovb
sarl
mov
adc
lock
es
addl
nop
inc
jle
jp
add
out
jbe
adc
addl
dec
loopne
mov
pop
push
sub
sub
aad
adc
test
aaa
and
xchg
inc
in
xor
add
cmpb
adc
dec
arpl
insb
cmp
loope
sbb
aas
insl
mov
loope
adc
mov
cmp
popa
jg
push
js
add
adc
inc
pop
movl
adc
inc
or
sarb
cld
add
data16
xchg
mov
sub
pop
rcl
push
pop
jecxz
bound
lds
add
filds
cmpsb
pop
adc
rorb
pop
out
sahf
ror
add
repnz
jo
enter
call
xor
add
sub
dec
cmp
jecxz
daa
mov
xchg
and
sbb
or
movsb
mov
mov
mov
xor
pop
call
mov
or
aam
clc
push
call
pop
mov
cmp
mov
jge
sbb
sub
jecxz
add
mov
shrl
mov
les
dec
sahf
mov
adc
aam
jbe
push
or
sub
dec
cli
ja
movsb
add
pop
icebp
inc
mov
mov
inc
mov
sarb
and
adc
ja
sub
adc
hlt
stos
push
sbb
cmp
imul
push
icebp
cmpsb
lds
inc
xchg
adc
jmp
insl
sub
push
mov
mov
mov
mov
mov
lock
lret
or
xor
das
je
lret
rorb
or
fbstp
or
mov
adc
rcll
cmp
and
pop
push
and
sbb
sub
lret
test
push
mov
push
sub
lods
inc
pavgb
pop
sub
popf
and
xlat
adc
jg
cs
and
inc
jne
sub
cli
xchg
mov
mov
rolb
sbbl
mov
xor
push
loope
ss
cwtl
rolb
out
fnstcw
test
cli
push
clc
xor
sbb
xchg
bound
ljmp
cs
out
nop
ret
dec
mov
push
es
lea
shll
adc
push
lock
pushf
mov
shlb
movsl
popf
mov
jmp
clc
xlat
fcmovnu
inc
mov
nop
jmp
std
xor
jecxz
jbe
inc
xor
cli
sub
pop
dec
mov
je
bound
std
pop
adc
test
ret
dec
xor
dec
add
adc
xchg
jnp
xor
aas
cld
dec
data16
and
xchg
inc
ret
or
dec
and
pop
add
fmuls
imul
or
jl
mov
pop
cmp
repnz
call
cli
dec
mov
inc
lock
push
dec
test
sarl
in
sub
imul
outsb
in
adc
jl
pop
nop
ret
inc
repnz
mov
andb
cltd
sbb
and
repz
ss
call
pop
add
sbb
push
add
mov
inc
dec
bound
inc
imul
mov
cmp
jno
loopne
jnp
cli
idivb
nop
xchg
lret
or
repz
sbb
and
test
ds
mov
inc
push
jecxz
or
mov
jle
movsl
test
outsb
inc
add
dec
leave
fstpl
mov
fwait
sub
xchg
push
and
pop
outsb
pop
das
lods
jo
mov
in
mov
stc
shll
fmuls
out
mov
dec
adc
cmp
cmp
mov
mov
sbb
inc
imul
push
xor
js
aaa
sbb
subl
inc
inc
icebp
jle
incl
enter
cwtl
ror
shll
push
mov
pop
fidivrl
cmp
test
sub
jbe
mov
shll
fdivp
mov
cs
lock
cmpsb
push
pop
icebp
aas
fsubp
inc
adc
add
lcall
hlt
fistpll
jb
jmp
mov
mov
and
xor
aam
stos
cmp
pop
lods
ja
loopne
loopne
push
inc
mov
sbb
mov
add
lret
outsb
in
clc
dec
cwtl
cmp
xchg
pushf
notb
insb
xchg
add
incl
frstor
loopne
ror
push
inc
cmpsl
mov
test
jecxz
insb
scas
shr
mov
cld
jnp
lock
sti
add
sbb
or
lds
pop
cld
or
sub
addr16
lods
adc
mov
xchg
popa
dec
or
stos
cmp
lods
popa
jmp
mov
mov
adc
decl
aaa
lret
aas
add
fdivs
lret
xor
dec
inc
mov
movsl
mov
push
xchg
and
cmp
stos
scas
push
or
subl
pop
outsl
es
int3
lods
sbb
loope
add
aad
pop
mov
ss
mov
inc
push
jg
mov
imul
push
or
push
cmc
xchg
sarl
cmp
jg
sub
in
andl
rclb
bound
enter
mov
out
or
add
inc
push
adc
aad
in
testb
rcrb
xor
clc
aaa
fwait
clc
test
sbb
mov
roll
pusha
cwtl
gs
ret
lret
je
repnz
xorl
dec
movsb
push
add
jmp
fdivl
int3
pop
and
and
inc
insl
adc
or
cli
jmp
xor
test
insb
dec
cli
pop
js
mov
sub
js
mov
cmp
or
sub
fsubrs
pop
cld
and
decb
pop
sub
rcll
pop
subb
pop
popa
loope
adc
fimuls
sub
sub
popf
test
je
stos
and
inc
aad
jne
pop
jmp
pop
mov
push
and
mov
cmp
mov
mov
movl
mov
enter
sbb
dec
cmpsb
les
rolb
clc
sahf
or
or
mov
scas
xor
stos
add
ss
pop
sar
pusha
or
into
arpl
daa
subb
enter
mov
push
adc
movsb
ja
and
in
xchg
test
mov
pop
mov
cli
adc
push
or
ja
and
cltd
in
lods
aas
test
lods
xchg
push
fs
test
movsl
push
pop
push
add
dec
pop
mov
int
jmp
mov
inc
push
mov
das
jle
adc
addr16
push
cmp
add
mov
outsb
inc
orb
sbbl
mov
add
jne
mov
pop
mov
movsl
aaa
mov
sub
adc
cmpsb
mov
push
add
addr16
push
inc
dec
hlt
ja
fbstp
test
scas
pop
push
mov
mov
stos
int3
pop
mov
mov
sub
loope
pusha
mov
and
and
pop
es
clc
adc
loopne
lock
dec
lea
or
sub
cmp
in
inc
add
mov
std
enter
aam
into
adc
loopne
enter
ljmp
mov
sahf
mov
inc
js
dec
dec
mov
and
dec
loop
push
jnp
out
push
sahf
pop
psrad
cmp
adc
push
into
push
cmp
mov
out
icebp
pop
or
add
fwait
pop
mov
in
jge
loop
pop
and
test
les
scas
sbb
xor
dec
ja
sbb
adc
inc
add
inc
std
inc
repnz
mov
sbb
mov
pop
lock
mov
sbb
add
sub
inc
push
cmpsb
and
fiaddl
or
loope
pop
jg
popl
loopne
adc
sub
push
and
aas
xor
push
in
test
add
mov
mov
inc
adc
jl
pop
push
hlt
jecxz
add
add
int3
sub
ds
adc
push
add
and
imul
adcb
inc
cmp
pop
daa
mov
push
cmp
scas
rcll
scas
sbb
lahf
sbb
or
sbb
in
std
frstor
adc
mov
adc
incl
jo
mov
dec
xchg
push
mov
pop
ret
pop
inc
mov
cwtl
clc
xor
add
xchg
jbe
lock
xchg
cld
mov
rcll
call
mov
sub
scas
out
and
cmc
inc
and
sbb
enter
push
popf
std
push
cmpsb
decb
adc
ret
add
mov
inc
jge
and
int
pop
mov
dec
fs
dec
cmp
ret
aam
cld
sti
pop
loope
jp
xchg
or
mov
jno
xor
pop
mov
adc
test
sub
aad
fisubrl
js
xchg
mov
lcall
decl
or
adc
inc
push
adc
lcall
sbb
xor
xchg
movsl
sbb
dec
shl
cld
mov
adc
adc
and
push
jl
cwtl
aam
clc
add
push
inc
movsl
xchg
mov
sti
cmc
cli
es
adc
pop
mov
pop
lock
fsubs
push
jmp
sub
inc
sbb
icebp
mov
push
sub
dec
push
add
sbb
fbstp
cltd
andl
push
ret
xlat
xchg
dec
pop
insl
adc
xchg
mov
sar
sbb
lcall
mov
cmp
sbb
dec
sbb
in
sub
repz
cmp
fistpll
cwtl
das
xchg
inc
fs
faddl
ljmp
mov
jecxz
cmpsl
fisubrl
aad
mov
pop
orl
fsubs
fs
add
movsb
hlt
dec
out
rcll
jmp
and
test
fisttpll
dec
out
mov
sbb
into
mov
jmp
or
test
inc
jo
pusha
sub
dec
or
out
cli
enter
es
mov
push
adc
test
ret
inc
lock
les
cmp
dec
push
mov
or
jle
pushf
mov
push
mov
push
pop
jb
xlat
and
adc
rolb
cmp
clc
stos
insl
enter
xchg
flds
mov
mov
add
imul
jno
es
push
pop
dec
xchg
adc
cmp
call
sbb
inc
jl
adc
cmpsb
arpl
sarb
jne
es
es
hlt
sub
out
add
dec
adcb
fidivl
filds
add
jl
add
dec
and
cli
sbb
push
lods
pop
cmc
nop
push
lea
inc
adc
sbb
inc
shlb
inc
stos
stos
mov
fs
xlat
xchg
push
mov
adc
pop
decb
xchg
imulb
pusha
mov
cmp
out
popa
cld
notb
or
fsub
inc
xchg
lcall
dec
aam
cmpl
jo
lock
adc
push
int
cmp
notb
ljmpw
outsb
cli
call
xchg
push
push
xor
add
jg
test
cs
bound
cmp
aad
jbe
inc
dec
clc
ja
mov
push
push
loope
aaa
cli
mov
adc
loopne
push
mov
adc
repz
dec
xchg
jecxz
adc
sti
das
pop
sub
push
xchg
scas
xor
add
cs
fs
inc
adc
xor
subb
ror
dec
and
or
lods
push
mov
ljmp
not
or
roll
mov
test
iret
sub
sti
imul
aad
aam
mov
cmpsl
mov
inc
inc
sahf
add
mov
and
mov
mov
adc
sbb
ljmp
mov
popf
or
inc
scas
jle
sub
int
ret
mov
xchg
mov
or
inc
or
push
inc
jb
xchg
cmp
inc
adc
cmp
jg
ljmp
pop
mov
fiaddl
add
pushl
int3
stos
movsl
push
sbb
sti
paddw
sbbb
dec
cld
adc
test
push
jp
stos
ret
pop
adc
mov
mov
pop
ljmp
ficompl
xor
adc
xchg
andl
mov
dec
sbb
stos
mov
imul
lret
ljmp
or
adc
scas
pusha
test
in
ja
jbe
pushl
adc
cmp
mov
bts
mov
cmp
adc
jbe
mov
fcmovnu
ja
add
jb
sub
dec
or
cmp
xchg
test
hlt
mov
rorb
jge
mov
push
or
add
outsl
sbb
jo
mov
adc
jo
jl
mov
fs
cmp
lock
jge
and
sbb
xor
mov
mov
lods
test
xor
sub
or
aam
mov
loopne
inc
test
xor
in
test
bound
ds
dec
cli
andb
adc
hlt
add
adc
mov
pop
or
or
mov
inc
xchg
mov
add
mov
mov
nop
dec
and
pop
insl
dec
cmp
adc
pop
aam
shlb
loopne
jbe
aaa
inc
jle
sub
clc
jle
stos
in
fs
lods
jne
sbb
add
or
les
jge
ljmp
outsl
sbb
sub
push
out
xor
inc
mov
scas
aam
enter
popf
lret
add
pushf
pop
lret
stos
add
xor
arpl
pop
add
fwait
xor
lds
mov
ljmp
or
add
scas
std
push
ret
dec
imul
inc
lahf
mov
data16
sahf
orl
mov
ljmp
cmpb
test
or
adc
xchg
lock
add
sbb
add
dec
aad
mov
xor
adc
jno
fstl
mov
ss
jp
inc
cmpl
pusha
jg
jle
inc
mov
sub
add
or
lock
out
xor
sbb
in
pop
or
cmpsb
data16
daa
shlb
xchg
addb
and
jp
insb
mov
sub
sar
mov
pop
inc
push
test
pop
sbb
fcoml
popf
add
add
rorb
sti
mov
decl
sbb
lods
add
nop
movsl
dec
add
insl
fisubl
cmp
movsl
dec
es
mov
xor
mov
ja
faddl
std
cltd
sbb
das
jmp
lock
jg
bound
fs
dec
scas
int3
stos
loope
imul
xchg
lods
push
cld
add
sbb
xor
push
aam
ljmp
mov
decb
aaa
mov
dec
push
pop
lds
push
inc
fimull
lods
cmp
cmp
lahf
popa
or
stc
cmp
les
add
mov
push
scas
js
xor
and
inc
mov
and
lret
add
js
fbld
jne
in
mov
fwait
and
lods
push
ror
cmp
sub
cli
sbb
dec
test
mov
fbld
int
es
fs
sub
xor
les
ljmp
and
xchg
scas
push
jmp
mov
inc
call
jp
fs
mov
sbb
or
das
add
pop
xor
or
cld
push
push
mov
stc
cmp
icebp
fwait
cmc
out
xchg
pop
lock
fwait
cmp
xchg
movb
outsb
clc
pop
mov
cld
fmull
jns
and
pop
and
dec
push
sbbb
movsb
jg
xor
ss
fiaddl
xchg
xchg
add
sahf
enter
inc
pop
icebp
imul
subb
pushf
inc
mov
sub
mov
and
rclb
fwait
jmp
stos
mov
fs
into
dec
insb
add
mov
inc
jbe
inc
ds
mov
pop
xchg
sub
inc
add
ret
in
ljmp
decl
push
cmpsl
push
cmpb
rcll
daa
loopne
push
jecxz
fnsave
cmpsb
mov
fcmove
fchs
popa
inc
sar
mov
fistpll
popa
mov
in
andb
mov
sbb
aad
push
inc
ret
jo
adc
pop
and
int3
ret
fld
push
push
pop
mov
sub
mov
ljmp
imul
add
push
rol
cmp
insb
fbld
mov
cmp
data16
fisttps
xchg
lcall
inc
loope
or
xchg
rolb
aaa
loop
testb
cmp
rolb
lock
incl
add
xchg
xchg
aas
fcomip
sub
test
je
sbb
shlb
add
fldl
jno
sub
mov
test
or
mov
sbb
fs
dec
into
call
fiaddl
popf
dec
jg
test
push
icebp
inc
je
push
push
or
lea
bound
push
cmp
mov
out
pop
outsb
add
test
inc
incb
mov
push
pushf
div
call
je
stc
repz
cwtl
rorb
pop
adc
mov
xor
sub
outsb
pop
ja
cwtl
bound
and
ret
xor
fildl
daa
fnstenv
add
int3
add
pop
dec
cmp
sbb
jecxz
fiaddl
sub
fcoml
call
sbb
push
xchg
inc
adc
jb
clc
sbb
push
inc
aaa
push
nop
sub
sahf
xor
call
mov
pop
jmp
test
push
and
jo
aad
lret
mov
add
xlat
outsl
aam
enter
jo
pop
mov
inc
pop
inc
pop
jle
ss
mov
in
scas
mov
mov
jg
xchg
inc
mov
movsb
mov
fisubrl
mov
jp
pop
cltd
jp
aas
xor
mov
xor
rorl
rolb
adc
xchg
xor
popa
push
and
add
subl
dec
out
imul
push
in
repz
in
idivl
mov
mov
mov
roll
and
push
call
inc
inc
inc
xor
xchg
cli
movsb
je
addb
xchg
pop
push
push
in
sarb
inc
adc
lock
dec
fsubrl
push
test
add
test
add
inc
and
mov
or
cmp
ss
mov
inc
add
call
add
cwtl
pop
sbb
rcl
and
in
repz
jp
xor
xchg
mov
lock
mov
sahf
mov
mov
jno
sbb
ljmp
and
jle
mov
xorl
mov
lods
add
lret
dec
das
ljmp
or
movsb
cld
or
lds
add
xor
or
inc
repz
or
repz
push
negb
inc
movl
dec
inc
dec
adc
sub
aad
je
push
sub
rcl
mov
dec
add
lods
dec
sbb
inc
loopne
jmp
sti
test
hlt
in
xor
sahf
push
adc
dec
pusha
add
mov
xor
pop
push
xchg
xor
push
adc
add
and
jmp
pop
cmp
es
mov
xorb
mov
shlb
cld
mov
pop
pop
test
je
add
xor
pop
adc
inc
sbb
jns
aam
mov
add
fcmovnu
sub
inc
scas
xchg
roll
or
fdivs
lcall
xchg
es
icebp
stos
mov
mov
ret
pop
test
sbb
pushf
js
xchg
rorl
and
pop
fistpll
fisubl
and
xor
xor
jp
jmp
mov
call
inc
mov
xor
cwtl
hlt
mov
pop
push
pop
mov
jo
cmp
leave
cmc
dec
push
mov
mov
push
pop
xchg
insl
int
mov
fadd
push
std
adc
cmp
insl
out
and
inc
inc
js
pop
inc
mov
in
fisubl
sti
sbb
incb
lea
xor
inc
js
aas
push
cmp
js
decb
movsl
test
lods
mov
add
lods
scas
popa
js
adc
xchg
bnd
or
ret
out
fisubl
les
pop
sbb
add
add
mov
jmp
add
lcall
outsl
outsl
decb
cwtl
cli
int3
and
test
je
clc
sahf
mov
clc
mov
sarb
xor
insl
mov
imul
sub
das
cld
pusha
loopne
mov
xlat
push
roll
jl
push
sbb
xlat
or
lods
jo
mov
loopne
in
hlt
cli
inc
test
enter
scas
pop
xchg
sub
add
cmp
sub
and
xchg
arpl
mov
mov
cmc
pushf
inc
fs
rorb
shll
push
js
leave
faddl
push
notl
or
xchg
mov
outsl
dec
imul
jl
pop
das
loope
sub
sar
mov
bound
adcl
mov
xor
pop
loope
fisttpll
push
inc
push
ret
xchg
or
jp
sarb
lods
shll
orl
rorb
scas
lret
and
cmpsl
or
in
sbb
add
inc
inc
stc
divb
inc
jnp
inc
push
xchg
insl
add
xor
dec
adc
ja
lahf
add
pop
lods
inc
or
insb
es
mov
decl
sbb
xlat
add
or
mov
out
aas
add
pop
mov
sbbl
xchg
push
add
mov
cmp
fcoms
mov
dec
push
mov
outsb
mov
shrb
inc
dec
rorb
pop
repz
mov
test
dec
add
cmp
fmull
ret
pop
lock
fildll
cmp
xor
inc
sbb
jp
invd
xor
ja
cmpsl
pop
mov
sbb
cmp
or
shlb
pop
sbb
lock
enter
mov
fidivrs
xchg
xor
dec
std
out
sahf
stos
sub
in
das
cmp
cmc
xor
add
icebp
xchg
push
inc
jb
rorb
xchg
xor
xchg
icebp
mov
popf
add
and
add
sub
sub
icebp
dec
sbb
and
push
mov
dec
inc
dec
sbb
sbb
or
xor
cmp
nop
jg
out
inc
imul
xchg
or
mov
pop
xor
jle
mov
add
outsl
pushf
sbb
add
pop
mov
sub
pusha
inc
icebp
sbb
push
sub
sbb
adc
popf
cld
and
mov
mov
mov
test
clc
pop
lahf
arpl
xor
push
rorb
sarb
scas
mov
int
icebp
shrl
or
inc
pop
mov
pop
lret
mov
inc
inc
outsb
jmp
pushf
flds
or
aam
lea
mov
mov
inc
lahf
push
push
pop
fsub
or
push
sub
cld
pusha
push
jo
lret
push
shlb
addr16
inc
testb
add
jne
ret
nop
mov
adcb
push
add
call
inc
push
add
shrl
push
cli
insl
scas
mov
arpl
dec
gs
jo
jge
sahf
add
xor
push
pop
add
add
loopne
add
call
pop
addb
mov
stos
shrb
mov
addl
add
cmc
sub
cli
dec
push
aaa
push
or
jnp
xchg
sahf
aad
push
pop
in
inc
pop
xchg
test
sbb
push
out
call
pop
inc
xor
push
add
ss
adc
push
add
dec
vcomisd
jo
fwait
sub
sbb
clc
xor
push
repnz
mov
xchg
inc
and
ret
pop
ss
adc
add
loop
xchg
call
fistpl
or
pop
cmp
pop
push
les
icebp
add
jp
push
int
xor
shrl
test
push
pop
sub
dec
hlt
jl
sbb
fcompl
sbb
inc
or
sub
xor
pop
jecxz
and
ficomps
out
out
loop
sub
test
push
dec
roll
mov
imul
push
sbb
repnz
adc
dec
or
mov
push
jg
int
sub
mov
adc
jl
xor
repz
add
pop
stos
fsub
les
cmp
mov
or
insb
cltd
gs
fldl
aas
negb
cltd
in
nop
mov
jmp
mov
sbb
pop
mov
int3
lahf
pop
fdiv
inc
ficoml
pop
fcmovbe
jo
loopne
dec
cld
mov
jp
fists
daa
jge
adc
jne
js
pop
and
mov
stos
test
inc
lods
adc
and
hlt
lds
movl
ret
cwtl
loopne
xchg
lock
repnz
out
inc
xchg
cmc
mov
adc
js
stos
outsb
lock
pop
sub
pop
inc
arpl
add
jecxz
pop
clc
clc
jno
and
mov
jp
aam
and
dec
adc
out
cmc
and
mov
adc
aaa
xor
add
cmp
jge
or
pop
mov
mov
inc
sar
lcall
jge
into
lcall
dec
jl
adc
js
mov
pop
cld
dec
mov
lret
push
repz
sub
mov
sbb
jmp
xor
fimull
xchg
sub
sub
jne
sarl
mov
mov
clc
sbb
cmpsb
mov
hlt
lods
scas
aas
test
lea
jnp
or
cwtl
cmpsl
mov
inc
jnp
pop
or
push
adc
and
fmul
jp
mov
add
lcall
xorb
repnz
outsb
jp
mov
mov
sbb
repnz
cmp
mov
das
xorb
test
mov
test
pop
cmp
int
arpl
cs
adc
jnp
xor
fwait
mov
iret
mov
daa
sbb
inc
cmp
push
push
and
fbld
sbb
push
flds
ret
out
mov
mov
dec
cmpb
xorb
mov
push
mov
xchg
fwait
mov
out
and
out
add
jp
dec
iret
and
adc
lret
icebp
mov
movsb
insb
mov
or
ljmp
mov
push
pop
mov
sub
ja
pop
xor
dec
roll
mov
adc
or
xor
mov
iret
cmpsb
push
rclb
ret
mov
cmpsb
adc
sub
lahf
and
popl
fimull
sbb
push
jne
add
aam
sub
mov
jnp
jae
cmp
sub
std
sbb
and
xor
shl
and
mov
je
xchg
pop
cld
inc
aam
aam
clc
xor
in
lret
pop
pop
lock
sbb
sub
or
sbb
adc
insb
jmp
mov
xchg
fsubrl
es
push
xor
mov
push
mov
test
stos
and
add
rol
adc
dec
mov
mov
in
popf
decb
sub
pop
scas
jle
inc
loope
outsl
pop
rorb
mov
imulb
incb
xorb
add
mov
or
cmc
xor
ja
in
or
xchg
xchg
or
shlb
jl
aaa
loopne
pop
pop
mov
jmp
jmp
push
inc
adc
mov
push
or
cmc
ss
js
arpl
sub
add
inc
push
enter
out
or
mov
mov
mov
jae
push
mov
mov
mov
push
decl
inc
xchg
mov
nop
jle
sbb
or
xor
cwtl
call
scas
xchg
mov
or
daa
xchg
pusha
dec
lods
mov
xchg
cli
hlt
pop
les
cmp
jge
outsb
inc
push
adcb
jo
and
lea
jp
sbb
xchg
inc
test
and
push
mov
cmp
cmp
add
mov
xor
inc
sbb
sbb
push
into
ficoml
pop
mov
ret
shl
xor
in
adc
xor
paddsb
push
adc
push
mov
bound
es
std
lea
jae
add
cld
sbb
cmp
jmp
or
dec
mov
and
pushf
adc
push
mov
mov
inc
push
loopne
cmp
adc
pop
sar
enter
xor
mov
scas
and
iret
nop
rcrb
add
pop
dec
adc
sbb
std
out
enter
mulb
mov
sbb
add
cmp
adc
sbb
js
xor
mov
incl
xchg
jecxz
in
pop
imul
mov
scas
xchg
mov
lds
rcr
mov
subb
xchg
xor
ret
subb
push
lds
test
add
inc
mov
mov
mov
mov
mov
add
add
cmp
ret
daa
es
int3
sbb
lea
sub
pop
fisubs
push
stos
xor
sbb
cmp
adc
fs
and
jb
icebp
in
xchg
addb
scas
or
and
mov
bound
sbb
sub
cmc
loop
xchg
loope
js
mov
test
mov
icebp
and
ror
das
shrl
or
sarb
in
add
pushf
mov
push
pop
jb
mov
pushf
pop
aaa
pop
imulb
js
mov
ljmp
mov
shrl
jecxz
call
lcall
mov
mov
inc
pop
je
inc
sahf
sub
add
stos
cltd
cmp
inc
push
inc
inc
roll
sbb
inc
cmp
add
sub
xchg
clc
fimull
mov
sub
sbb
loopne
clc
add
packuswb
loopne
sbb
xchg
int
pop
fs
and
outsb
jle
test
jle
std
test
andb
rcrl
filds
mov
shrb
mov
or
adc
icebp
shll
xor
pop
pusha
jge
cld
rcrb
cmp
dec
mov
cmc
addr16
sub
popw
xchg
fimuls
lods
lret
xchg
push
push
insb
xchg
hlt
lea
jmp
cs
cmp
add
jl
sar
mov
test
add
or
loope
mov
jns
cmpsl
popl
in
push
push
out
mov
xor
push
pop
or
decl
ret
out
mov
lret
or
lods
iret
push
call
dec
mov
lret
movsb
daa
xchg
test
jecxz
js
lock
mov
aam
std
loop
sbb
loope
inc
inc
leave
decl
mov
xchg
jbe
arpl
fists
es
sbb
shr
cld
std
add
inc
ret
fistpl
pop
inc
repz
lods
pop
dec
push
mov
pushf
pop
pop
call
clc
lret
sbb
scas
mov
clc
ret
xorb
push
dec
and
xchg
dec
add
mov
inc
push
rclb
jae
sti
outsl
cmpsb
popa
int3
stos
lods
or
jl
ret
orl
aad
cmpsb
mov
and
call
sbb
mov
shlb
or
dec
es
hlt
mov
push
popf
adc
pop
add
push
xorb
frstor
ja
push
scas
push
out
adc
add
mov
pusha
sbb
jp
mov
stos
lcall
and
div
stc
or
xor
push
cmp
popa
movsb
jmp
mov
cmc
pop
mov
cwtl
test
mov
jle
aam
jns
cmp
shlb
cs
js
push
cmp
std
add
cmp
and
shr
fistps
daa
aam
outsb
mov
sbb
ds
jbe
xchg
test
inc
inc
sub
lods
inc
inc
int3
jp
out
mov
add
cld
sub
xchg
push
inc
push
add
inc
lret
std
lock
xor
cmp
jg
out
pop
dec
dec
ret
xorb
xchg
scas
inc
ret
decl
push
sbb
test
add
adc
sbb
pop
movb
subl
dec
xchg
pop
mov
lcall
mov
rol
adc
mov
pop
xchg
loope
mov
xlat
sarl
ret
popf
lcall
ljmp
das
push
push
pop
sti
test
lcall
mov
sub
mov
xor
xchg
pop
ja
adc
lea
jecxz
xchg
lcall
xor
fnstenv
cmp
stos
test
fcoms
or
mov
mov
add
pushl
call
lahf
out
enter
jbe
in
cltd
jae
cs
mov
push
or
incl
hlt
lods
xchg
incb
fsubl
ret
jns
sub
fidivs
cli
shrl
jmp
pop
das
lret
movsl
jg
loop
call
sub
rclb
aad
jb
pop
sbb
int3
test
cmc
bound
rcll
ret
popf
ja
out
adc
dec
and
mov
cld
pop
sbb
mov
les
jmp
incl
push
sub
dec
and
rol
inc
sbb
and
mov
shrb
cld
xchg
jno
push
rorl
mov
push
pop
cmp
cmpsl
jmp
jnp
xor
pusha
popf
pop
test
stos
sti
daa
and
leave
mov
out
pop
lret
ffree
in
pop
stc
sarb
mov
lcall
or
jle
xchg
push
sub
aam
push
jnp
pop
icebp
addr16
int
call
call
sub
and
mov
sbb
pop
frndint
inc
sti
shlb
ja
sub
lret
mov
out
into
mov
sbb
mov
adc
ret
outsb
fs
sub
xchg
loopne
cmc
iret
test
sar
mov
push
mov
jecxz
jo
dec
inc
std
adc
imul
dec
adc
and
incl
or
fidivrs
div
mov
jg
jg
mov
pusha
cmp
pop
or
cltd
je
int
pop
icebp
adc
stc
mov
push
or
fstps
loopne
mov
mov
xchg
insb
das
shll
aad
cmpsb
xor
xchg
inc
sbb
ret
push
mov
insl
inc
and
fs
orl
repz
ljmp
loopne
dec
sti
in
aam
sbb
mov
iret
iret
incl
loop
xchg
pop
sub
push
jecxz
subl
sti
inc
leave
mov
fidivrs
lea
shlb
test
push
mov
jl
and
push
inc
mov
outsl
mov
shrb
jge
daa
sub
mov
mov
icebp
xchg
mov
je
mov
sub
add
dec
mov
add
mov
dec
ljmp
fcmovnbe
leave
jg
xor
dec
stc
pushf
jbe
test
push
js
and
jg
sbb
xchg
sar
lcall
mov
outsl
dec
and
jmp
mov
mov
lds
jmp
in
dec
cmp
outsb
fcoms
mov
sub
sbb
test
das
in
movb
dec
popf
add
popf
daa
addr16
adc
out
es
xor
ljmp
jae
push
les
imul
cmp
dec
aaa
xor
mov
lcall
push
cli
rcll
pop
jl
and
xchg
inc
cmp
fidivrs
aad
xor
cld
scas
mov
and
addb
jmp
jmp
std
clc
xchg
outsb
xor
xor
pop
pop
std
insb
sahf
js
cld
ljmp
and
jne
inc
jo
insb
inc
cmp
xchg
xchg
jns
or
xchg
stos
jo
and
push
jg
aaa
insl
jg
pop
lock
in
xchg
or
cmpsb
in
dec
xor
mov
adc
out
jl
xor
into
cltd
lret
daa
xchg
les
iret
push
out
fldl2e
cltd
das
fwait
ret
sub
dec
rolb
mov
int
stc
jg
bound
icebp
lret
call
dec
add
push
fdivrp
jg
xchg
sti
aam
test
repnz
cmpsb
xor
mov
out
add
sub
cld
outsl
dec
or
mov
gs
adc
lds
lds
rorb
jo
push
outsl
scas
push
jo
mov
mov
enter
nop
aas
loop
or
push
and
ret
call
pop
cmp
iret
ljmp
dec
mov
shll
not
stos
fimull
and
movsb
cld
stc
out
xor
push
adc
out
sub
pop
jg
push
pop
mov
ljmp
test
inc
out
mov
outsb
push
fwait
jbe
inc
pop
aas
push
jnp
push
and
or
rorb
push
leave
add
push
clc
mov
rep
int3
into
fidivs
push
test
stc
xchg
stc
jg
xor
inc
add
xlat
clc
aad
fnstcw
js
stc
int3
ficomps
jnp
shrb
addr16
out
cmc
and
sbb
stc
repz
jo
add
mov
int
mov
fnstcw
popf
clc
or
arpl
jmp
mov
inc
or
lods
jo
incb
pop
stc
sbb
or
lcall
orb
pop
inc
arpl
mov
mov
xor
add
nop
sub
and
out
call
sbb
imul
sub
push
jo
lahf
dec
std
push
mov
sub
cld
push
addb
xchg
std
sahf
jns
out
lcall
cld
add
sahf
mov
sahf
pop
cmp
sub
add
jecxz
xchg
iret
repz
fdiv
xor
sub
fcoms
dec
xchg
mull
cli
decl
pusha
or
dec
mov
daa
add
mov
sbb
pop
or
push
xchg
cmp
jo
push
adc
jmp
adc
push
lock
movsb
cmp
out
and
mov
pusha
mov
insl
jne
in
xchg
sbb
movsl
jno
clc
sub
xchg
mov
jg
mov
movsl
cltd
push
mov
push
add
stc
ljmp
shrl
sub
jg
addb
les
clc
xlat
pop
lcall
mov
loop
mov
ljmp
mov
pop
mov
pop
ret
mov
push
pop
cmp
sub
xchg
pop
lret
orb
outsl
out
push
adc
mov
jns
imul
jl
lea
aam
fwait
in
rcll
fwait
pop
es
fldl
call
pop
adc
xor
sarl
lods
stc
insb
fwait
push
pop
xor
pushl
add
xchg
pop
clc
mov
js
sub
les
mov
or
push
aaa
aam
pop
mov
call
mov
fildll
pop
shll
std
dec
js
xorb
stos
cmp
xchg
notl
clc
mov
jl
mov
sbb
clc
repz
data16
dec
cmc
sbb
aaa
std
push
stos
das
push
mov
push
and
cmpsb
xchg
mov
lcall
shr
into
jne
andb
push
jl
out
cmpsb
sbb
mov
je
cltd
pusha
mov
add
pop
outsl
xor
or
xchg
clc
test
shl
xchg
push
xchg
leave
mov
repz
mov
mov
aaa
das
arpl
push
or
pop
subl
xchg
inc
inc
mov
jl
mov
lea
shrb
jne
not
stos
test
movsl
sub
stos
jmp
sbb
mov
lock
pop
repnz
dec
inc
dec
out
leave
xchg
sub
xor
aaa
aas
out
clc
and
imul
movsb
jg
xor
mov
pop
lret
pop
in
xchg
sub
xchg
repz
int3
push
push
test
mov
jne
mov
cmpsb
jl
repz
add
sbb
xchg
push
jl
iret
jg
mov
push
fsubrs
mov
ret
out
lds
div
movsl
shlb
inc
mov
stc
stos
pop
fistpll
insl
imul
hlt
dec
cs
popf
jo
fistpll
sahf
xchg
jp
rcll
gs
cmpb
sub
xchg
jns
pop
subb
and
pop
adc
cmp
sub
imul
lods
aad
pop
aam
add
pop
sbb
out
lcall
loopne
js
fs
andb
int3
xchg
ja
loope
subb
dec
shlb
sbb
test
hlt
adc
les
fmul
out
shll
inc
std
imul
jo
jp
sub
jp
inc
call
jae
stos
adc
cld
icebp
ljmp
fldt
mov
sarb
pop
into
mov
mov
dec
xor
mov
push
sarb
push
lock
pop
mov
aas
lcall
mov
push
aam
cwtl
mov
divb
ret
repz
jo
rorb
fistpll
xor
lahf
push
mov
loopne
xchg
clc
ljmp
fldenv
mov
xchg
mov
and
cmpsl
imul
jns
xchg
add
mov
test
dec
shrl
push
scas
add
test
filds
xchg
pop
outsb
jle
push
add
fs
dec
mov
pop
push
fs
cwtl
pop
lods
inc
clc
popf
cmp
push
push
dec
cmc
or
mov
jae
adc
mov
repz
add
mov
fisubs
lods
test
jne
incb
jmp
scas
xchg
clc
out
loop
mov
call
daa
jecxz
int
les
jns
push
loope
addr16
dec
je
jp
mov
out
jmp
adc
jo
add
sbb
mov
add
aad
and
in
clc
sbb
mov
mov
scas
mov
stos
call
jp
xor
pop
lods
test
jmp
sbb
insl
inc
pop
mov
add
std
cmc
push
in
push
push
xchg
pop
mov
mov
lock
pop
mov
dec
loope
jne
pop
jg
repnz
cli
clc
stos
mov
movsl
push
ret
push
inc
add
sub
xchg
outsb
fsubl
xor
xchg
stc
out
scas
mov
mov
pusha
arpl
fistpll
mov
lods
das
stos
push
cs
fwait
or
das
les
pop
clc
testb
cs
arpl
pop
cld
jecxz
orb
and
psrlw
jo
mov
popf
push
xor
cmpsl
jbe
dec
sbb
loope
aad
push
filds
cltd
push
xor
mov
jo
mov
cli
adcb
addr16
pop
lcall
pop
repnz
adc
psubb
mov
ja
cmp
cmpsb
ljmp
xchg
jnp
push
and
mov
dec
fs
mov
jge
xor
inc
sub
out
cli
jmp
adc
xchg
int
roll
adc
lahf
jns
cmp
mov
push
and
xchg
enter
sub
pop
lock
jb
and
adc
addb
fyl2xp1
mov
mov
adc
xor
sti
ficompl
lahf
aas
pop
or
lods
outsl
pop
dec
xchg
fs
pop
mov
cmc
sub
inc
xor
push
mov
sbb
lret
out
clc
fwait
aas
shl
aad
in
ss
jne
cwtl
adc
pop
fistpl
mov
psrld
ja
dec
jo
xchg
push
sub
sahf
popa
cmp
ficomps
and
sub
outsl
hlt
mov
pop
cs
push
jb
into
sub
pop
xchg
push
stos
xchg
and
mov
xchg
xchg
jb
mov
ret
jmp
sbb
lea
test
or
std
jbe
adc
add
push
fsqrt
test
mov
jge
loop
pop
popf
repnz
jle
mov
push
in
and
test
aas
les
mov
adc
daa
mov
stc
clc
jmp
pusha
scas
and
mov
cld
xchg
sub
or
jg
into
repnz
clc
lods
aaa
adcb
movsb
mov
pushl
cmc
into
test
bound
pop
insl
stos
icebp
mov
ud1
dec
fs
mov
adc
mov
out
cmc
iret
daa
push
mov
stc
cmp
or
mov
int
xchg
push
mov
jae
stc
das
clc
or
ds
je
in
and
sahf
std
cmp
mov
aas
jg
shll
adc
or
sub
pop
pop
adc
clc
sbb
scas
pop
je
xlat
and
push
sub
pusha
je
cmp
or
inc
pusha
cmpsl
or
ret
popf
mov
mov
hlt
jle
pop
test
addr16
aad
add
test
scas
les
clc
jo
icebp
pop
lret
xchg
jp
ret
int3
mov
scas
sbbb
mov
jp
jmp
jns
stc
scas
sbb
xchg
out
enter
mov
sarb
xorl
lea
pop
das
xchg
lea
jl
adc
int3
stos
jle
pushf
repz
pop
sbb
jg
iret
stos
inc
xchg
cltd
mov
rcrb
clc
mov
mov
jbe
cmp
xor
mov
pop
cmpsb
loop
loop
cmp
cmp
repnz
cmp
jg
roll
ret
xor
cmp
subl
lret
pop
pop
jecxz
or
loopne
stos
test
or
add
mov
call
je
fdivr
dec
fistpll
out
bnd
fldl
jbe
test
push
std
das
jnp
cli
sbb
loop
lcall
mov
fs
je
int3
lcall
scas
add
mov
push
or
jne
mov
clc
in
jne
jno
or
push
push
cmp
mov
inc
add
xchg
bound
outsb
cld
les
jle
jnp
xchg
nop
pusha
hlt
sbb
rep
addb
cmpsb
call
xchg
popf
in
sarb
shrb
mov
sbb
jne
shrl
and
and
mov
je
or
mov
xor
jno
xor
stos
ljmp
cmp
fwait
pop
adc
and
mov
jb
push
pop
adcb
push
aas
out
je
cld
mov
cltd
xchg
lcall
xchg
das
nop
fs
outsl
dec
or
or
je
or
js
fldl
and
incl
lea
inc
sahf
xchg
mov
repnz
cld
pop
cmc
scas
mov
xchg
jno
sub
aam
add
pop
movsl
xor
je
or
pop
xchg
xor
sbb
filds
dec
aaa
sahf
adc
aam
fstp
imul
push
pop
mov
jno
test
aas
xchg
xchg
int
jge
xor
sub
in
xor
or
mov
fildll
mov
out
cltd
mov
movl
mov
aam
outsl
rolb
das
int
cmp
icebp
cld
scas
xor
jne
sahf
jg
jl
out
xchg
mov
out
sbb
sub
int
xchg
vmread
mov
imul
or
pop
call
scas
cmp
cmp
xchg
xchg
clc
pop
xchg
inc
mov
lahf
mov
add
iret
stc
push
rcl
test
push
ffreep
pop
push
xor
push
mov
jmp
mov
add
loop
je
lods
adc
xor
in
mov
clc
aas
outsb
fsubrp
pop
addl
clc
xchg
and
jg
je
sbb
cwtl
or
sub
loop
sbb
sti
xor
sahf
in
or
out
jo
lds
iret
push
jp
xchg
push
outsb
jmp
int3
xor
dec
push
add
scas
outsb
inc
sahf
adc
jae
aaa
xchg
jecxz
sbb
dec
cwtl
inc
sti
mov
loop
push
lods
mov
push
dec
ljmp
stos
lds
in
pushf
test
jo
in
aad
xor
clc
lods
out
stos
jg
jmp
repnz
arpl
clc
cltd
jl
aas
sbb
pop
dec
inc
pop
lock
lock
mov
pop
stc
xchg
add
fidivs
rcrl
dec
mov
mov
scas
pop
add
jp
pop
jp
hlt
scas
clc
mov
push
daa
add
mov
in
mov
cld
shrb
mov
xchg
push
mov
je
loopne
stos
incl
pop
popa
pop
mov
pop
jno
cmc
psraw
out
xchg
jp
sbb
rcrl
cmpsb
clc
inc
jne
xchg
lock
jp
push
xor
cld
lret
insl
out
or
xchg
jbe
xchg
out
mov
pop
stc
dec
or
fbstp
rcl
xor
jp
jg
jnp
loope
hlt
into
push
pusha
xor
cmpb
das
or
aas
iret
xchg
jmp
cli
sti
fidivrs
mov
mov
das
lcall
cld
push
and
std
fwait
mov
icebp
cmc
inc
lods
pusha
adc
sahf
stos
sbb
rclb
sahf
lcall
xor
sbb
loopne
out
xchg
mov
test
js
sbb
adc
mov
jp
out
subl
icebp
enter
stc
sub
adc
jnp
push
xchg
mov
xchg
or
mov
aaa
das
xchg
outsb
inc
or
ljmp
sahf
sub
stos
mov
clc
fwait
pushf
popf
push
mov
sbb
and
sub
push
xchg
xchg
fwait
jb
mov
jp
pop
push
in
pusha
cmp
jnp
mov
sbb
in
clc
xchg
js
and
rcll
mov
xchg
jnp
fwait
add
out
add
pop
lock
aam
xchg
sbb
ret
je
dec
pop
push
cmp
pushl
test
xor
stc
mov
xchg
repz
adc
mov
fdivs
hlt
pop
and
add
das
test
cmp
adc
pop
push
push
fadds
mov
xchg
cmp
jle
sbbb
fwait
pop
lock
push
mov
mov
push
jbe
xchg
and
stos
sbb
dec
ljmp
jecxz
fidivl
mov
divl
mov
popf
cmp
inc
test
dec
insb
jno
sub
xchg
or
stos
mov
push
std
inc
sti
adc
scas
jb
pop
sbb
xchg
xchg
inc
clc
add
cltd
repz
rclb
test
and
sub
lret
out
fwait
call
sub
xchg
scas
cli
add
mov
js
loop
mov
fcomip
call
sub
arpl
xabort
sbb
icebp
mov
bound
pop
lods
mov
notb
mov
ds
lahf
push
fs
xchg
push
add
fs
push
scas
inc
xchg
dec
repz
mov
push
inc
sub
fnsave
jecxz
test
pop
add
cmpsl
div
mov
repnz
jg
stc
std
push
push
mov
cmp
ret
fmuls
or
jo
jge
imul
lods
cmp
int
outsl
outsb
inc
push
fisubrl
xorb
xchg
dec
les
cli
scas
and
in
cmpsb
adc
add
out
insl
cld
adc
pusha
push
and
mov
ss
xchg
shlb
push
or
mov
adc
fidivrs
flds
mov
popa
mov
add
dec
dec
add
add
int
enter
shr
mov
jle
and
xchg
mov
xchg
cld
pop
xchg
stc
es
xchg
jnp
dec
and
repz
push
incl
xor
rol
lods
ja
xlat
dec
and
popa
rorl
add
nop
popa
sub
cld
jecxz
insb
loop
push
xorb
xchg
test
fdivrp
dec
jp
pusha
pop
out
movsb
push
add
clc
rolb
cld
pop
mov
cwtl
jo
mov
sbb
mov
mov
repnz
loopne
xchg
test
sarb
out
push
pop
inc
add
loopne
cld
mov
out
and
loope
sbb
out
rcrb
incl
mov
jp
or
dec
outsb
pop
stos
or
xor
shlb
adc
leave
cmpsb
insl
xchg
or
cld
mov
push
fdivrp
or
xor
ret
mov
dec
inc
mov
imul
mov
cmp
icebp
outsl
ss
xchg
cmp
into
inc
inc
push
jmp
dec
push
mov
lods
jne
loopne
mov
fisttpll
icebp
mov
ds
cmp
in
jp
xchg
or
jp
mov
jo
int
push
cld
loopne
push
je
xchg
push
sbb
out
cld
insb
adcb
inc
aad
add
mov
scas
jp
test
mov
push
ret
push
mov
in
daa
loopne
sub
xor
add
pop
xor
popa
stos
fnstenv
pause
dec
mov
cmp
mov
aas
jnp
jl
dec
in
cmp
loopne
xchg
cmp
fidivrs
add
jecxz
cmp
xchg
pop
cmp
lods
test
pop
lock
push
les
xchg
shlb
icebp
data16
mov
repnz
pusha
cld
sbb
pop
iret
pop
jmp
mov
inc
push
mov
sbb
sahf
aam
js
push
sbb
insb
fildll
scas
aas
je
jns
clc
or
mov
movsb
icebp
cli
popa
pusha
adc
test
sti
sub
xchg
mov
xor
inc
mov
cmc
gs
aas
stos
outsb
rorb
xchg
imul
popf
insl
test
ss
clc
push
shl
loopne
inc
push
orb
add
push
out
or
xchg
jmp
jo
addr16
add
jl
xor
lea
mov
jmp
inc
push
xchg
cltd
mov
jg
je
data16
sub
adc
repnz
jecxz
bound
mov
jo
cmpsl
add
mov
mov
mov
push
jo
xchg
jbe
adc
mul
lods
fwait
repz
test
xchg
pop
ss
mov
cli
pop
lret
outsb
xlat
lcall
fdivp
lahf
bound
clc
mov
push
cmp
cld
call
sbb
aas
cli
minps
aaa
in
je
xchg
mov
xor
lods
xor
iret
mov
iret
inc
cli
mov
mov
mov
pop
outsb
mov
jnp
mov
dec
cmp
lock
fidivs
testb
inc
and
hlt
mov
push
ds
mov
xor
sub
push
add
inc
js
xchg
sbb
pop
mov
jle
sub
mov
push
stos
inc
cli
mov
icebp
inc
fdivrp
int
notb
cmp
add
inc
jl
inc
repnz
jge
rorl
sbb
sbb
movsl
call
std
fptan
mov
inc
aam
mov
dec
mov
gs
lock
out
xchg
test
push
ret
cli
mov
fdivrs
sbb
mov
mov
xchg
loop
or
mov
aam
loopne
or
lods
pop
cwtl
clc
xchg
call
fwait
cld
mov
and
and
lahf
js
push
mov
mov
fsubs
sub
inc
mov
nop
mov
pop
xchg
aaa
ljmp
cmp
dec
dec
leave
sbb
mov
std
xchg
add
outsl
icebp
dec
ljmp
outsb
cmp
xchg
add
mov
and
cs
out
mov
mov
in
or
jmp
fwait
roll
push
aaa
std
inc
das
repnz
lret
sbb
xor
ret
push
sub
add
test
fcoml
mov
leave
subb
out
arpl
lcall
clc
aad
push
mov
je
mov
pop
aam
aas
cmp
push
ret
mov
and
out
adc
outsb
xchg
ja
enter
lahf
push
jo
pop
adc
and
leave
je
mov
aaa
adc
cmp
dec
stc
rclb
out
cmp
pushw
jo
and
repz
xor
push
mov
nop
jbe
push
xchg
cmpsb
add
test
jo
push
or
add
fsub
mov
mov
jecxz
xchg
inc
pop
mov
int3
js
or
jge
add
in
out
or
in
xchg
fcmovnb
idivb
sbb
pop
jmp
pop
clc
pop
add
test
or
cmpsb
cmc
pop
pop
jecxz
pop
dec
add
cmp
clc
insl
clc
pop
adc
lock
mov
pusha
outsb
cwtl
pop
addr16
sarb
push
mov
shrb
outsb
xor
adc
and
pop
pusha
fsubrl
movsl
push
aas
or
cld
in
mov
flds
jle
aaa
mov
pushf
pop
jno
add
mov
or
lret
loopne
pushf
dec
out
xor
xchg
aaa
cltd
aas
aas
push
ljmp
pop
xchg
xor
lahf
jg
cmp
dec
sbb
mov
movsl
cli
jl
outsb
lret
popf
mov
cmpsb
jmp
fwait
pop
jo
insl
addl
jp
pop
stc
in
jno
popa
or
mov
aaa
lods
push
scas
movb
xchg
out
sub
jns
repnz
les
lods
outsb
jmp
cs
sbb
test
xchg
xchg
and
out
and
addr16
xor
fdiv
push
ja
scas
adc
jno
or
dec
or
loop
cld
data16
fptan
xor
xchg
push
push
cltd
push
sti
lock
fwait
add
mov
add
jle
dec
or
fstl
mov
cltd
ficomps
cmpsb
jo
lret
sahf
jle
and
cld
mov
bound
into
nop
pop
leave
gs
les
and
jl
mov
movsb
xlat
adc
clc
mov
add
adcl
xacquire
sbb
leave
mov
imul
sub
cmp
cs
push
aam
and
fists
data16
mov
mov
xchg
shlb
outsb
clc
pop
out
call
jmp
fs
int
std
pop
mov
ret
adc
pop
xor
out
mov
mov
mov
jecxz
outsb
xor
xlat
mov
roll
ret
push
outsb
sub
aaa
cmpsl
mov
lock
nop
jge
and
mov
inc
jp
mov
sub
nop
and
sar
outsb
ljmp
mov
cmp
movsl
cmp
xchg
ljmp
jo
fidivl
xchg
loopne
je
sbb
push
jg
lock
outsb
cwtl
shll
pop
loopne
sbb
push
cmp
add
fs
loop
loopne
mov
dec
jp
or
lahf
pop
mov
test
jnp,pt
ss
roll
in
adc
call
jg
pmaddwd
stos
insl
pop
dec
adc
jnp
mov
int
jl
and
sbb
subl
mov
jmp
push
jo
shr
sub
clc
xchg
ss
stc
fidivl
psllw
xchg
stos
repnz
mov
bound
bound
ljmp
push
mov
ds
sbb
cmc
pop
andb
add
mov
in
bnd
pop
xchg
in
call
jae
repz
mov
and
pop
mov
call
movsb
pop
ja
test
int
cmpb
xchg
jl
aaa
adc
dec
aas
or
push
hlt
repz
sub
ds
in
cld
add
or
in
mov
clc
test
bnd
in
in
xor
enter
sbb
inc
jl
test
or
jp
fwait
mov
movsb
sub
xorb
add
push
push
mov
mov
add
divb
lret
sub
sbb
or
xlat
cmpsb
repnz
mov
call
repnz
sub
jmp
in
push
es
cmp
mov
xchg
lods
cmp
push
sub
xchg
dec
and
test
jl
xor
ja
mov
cld
aaa
incl
push
icebp
mov
pushf
jecxz
test
in
outsl
mov
sbb
jb
mov
xchg
mov
jno
sbb
les
out
push
call
ljmp
pop
or
andl
jmp
add
or
pusha
fstpt
push
clc
repz
jl
pop
fisttpll
daa
mov
cltd
adc
out
xchg
bound
mov
clc
push
xchg
pop
xchg
imul
or
std
das
popa
or
pop
dec
mov
roll
stc
idivb
push
push
aas
or
jle
pop
xchg
xchg
xchg
dec
testb
mov
adc
adc
in
outsb
inc
pop
addb
cmc
enter
cmp
jmp
xchg
lahf
lcall
jb
lock
cmp
jnp
test
out
push
hlt
sub
inc
mov
jo
mov
inc
std
jl
cmc
cld
add
sar
mov
jae
es
aaa
jg
xor
push
and
jmp
fistpll
dec
add
out
loope
orb
mov
lock
shl
mov
jbe
pop
add
lds
xor
sub
stc
fildll
adc
stos
inc
sbb
push
and
fidivrl
mov
cs
xor
cmpsb
clc
dec
in
sub
cmc
sub
mov
adc
sbb
pop
or
xchg
cli
out
outsb
cmp
mov
stos
dec
push
out
andl
ds
mov
movsb
mov
or
idivb
repz
adc
pop
stos
and
and
fwait
push
mov
testb
mov
xchg
dec
sbb
lea
mov
mov
aad
cmpsb
icebp
out
bound
mov
pop
push
mov
jmp
fstl
ds
adc
mov
divps
xor
xchg
out
sti
inc
pushf
out
je
repz
pop
ret
push
aad
stc
shlb
decb
push
lret
cmp
clc
fucomp
rorb
in
mov
xor
test
push
std
mov
shrl
jo
jae
jg
cmc
xchg
sub
sub
pop
cmp
rclb
inc
pop
xchg
shll
in
test
cmp
sar
es
jnp
push
das
or
jmp
sbbl
cwtl
out
adc
clc
and
ss
repnz
sarl
ss
rorl
pop
xchg
mov
mov
call
test
call
xlat
outsb
cld
loopne
jae
and
das
call
pop
and
adc
and
scas
ret
stc
fstp
test
aam
mov
dec
pop
outsl
nop
outsb
push
out
cmpsl
xor
lock
aas
sbb
mov
jecxz
jg
push
pop
test
inc
xchg
push
dec
nop
mov
pop
push
out
es
add
sbb
movsl
loope
ret
mov
mov
pop
jecxz
loopne
pop
sbbb
ljmp
sarb
popl
push
xor
js
cld
je
adc
jmp
loopne
sub
addb
cli
rclb
pusha
rep
cltd
packsswb
das
test
out
adc
ljmp
cmp
stc
pop
in
cmp
jne
lret
add
aaa
iret
xchg
xor
iret
inc
sbb
xor
jg
jp
push
mov
xchg
loopne
mov
arpl
mov
and
lods
jnp
mov
pop
pop
rolb
or
decb
jmp
inc
jp
sarb
mov
fbstp
js
repz
lock
add
das
stos
add
es
lret
inc
cmc
in
notl
pusha
je
mov
stc
and
out
pop
xor
in
pop
adc
movsl
out
jmp
outsl
xchg
lock
adc
jb
jmp
ds
shrl
notb
testl
mov
sub
push
shll
push
xchg
mov
jo
int
xchg
push
jnp
mov
fisubrl
xchg
push
out
or
jmp
add
mov
in
push
aam
mov
push
jo
scas
pop
icebp
pop
rorb
mov
sub
scas
mov
cwtl
mov
pop
repnz
clc
in
fcoms
mov
sbbb
sbb
addl
fndisi(8087
push
xor
jl
pop
nop
subl
bsf
cmp
aaa
lock
jbe
push
ljmp
push
cmpsb
in
clc
dec
cmp
sahf
outsb
mov
push
cld
adc
iret
stos
cmpsb
mov
and
mov
subb
test
std
dec
iret
rcrb
pop
add
pushf
iret
movsl
xchg
mov
shrl
mov
xchg
jmp
cli
xorb
push
push
xor
jb
dec
jl
pop
fldl
scas
pushw
push
loopne
pushf
pop
bswap
loope,pn
nop
inc
xchg
add
mov
xchg
jmp
xchg
outsb
lods
mov
sbb
out
xor
ficoml
jle
les
int3
test
push
out
icebp
pop
push
imul
and
stc
push
inc
push
not
ret
pop
adc
test
inc
outsl
adc
jne
jbe
mov
pop
je
lcall
jg
xchg
imul
dec
jle
out
leave
ret
testb
les
outsb
pop
cmp
jnp
dec
repnz
lods
inc
adc
icebp
repz
xchg
pop
leave
sbb
cmc
add
jbe
xchg
fstpl
add
outsl
jle
lock
xchg
pop
push
mov
and
das
sub
push
mov
fsub
fwait
mov
add
insl
mov
push
repnz
mov
cmpl
inc
clc
inc
gs
xchg
repz
xchg
lods
jge
mov
mov
push
clc
xchg
mov
movl
lock
movsl
ja
aas
mov
outsl
mov
cmp
outsl
jg
and
daa
repnz
pop
push
test
cmp
fidivrs
scas
int3
xor
jo
or
inc
mov
out
aaa
subl
fwait
cld
loop
gs
ss
andl
outsl
shrb
bound
insl
ret
mov
rcl
sub
fidivrl
mov
inc
out
push
add
aam
addl
cwtl
lods
mov
mov
cmpsb
mov
jno
jbe
xchg
xchg
pop
scas
cltd
imul
insb
das
jp
sti
push
pop
les
fbld
testb
jne
loopne
fistps
push
cld
cld
arpl
clc
pusha
mov
insl
lcall
jp
gs
cmp
sub
cmp
pop
stc
lret
push
cs
jns
loop
outsb
xor
xchg
jno
cmp
mov
insl
mov
adc
inc
dec
pusha
repz
mov
loopne
mov
hlt
nop
loope
push
mov
cmpsl
adcb
ljmp
sbb
push
pusha
idivb
push
mov
adc
stos
les
repnz
ljmp
test
inc
sahf
push
call
jo
mov
jnp
aaa
ljmp
shrl
pop
out
repz
pop
jmp
les
mov
pop
pop
and
adc
inc
sbb
jnp
bound
cmpsb
xchg
in
ret
jp
push
clc
bound
mov
inc
ret
mov
ss
lret
dec
cltd
add
aaa
int
shll
fdivs
pusha
inc
das
les
stos
jge
arpl
repnz
or
sarb
cmp
arpl
or
cld
stc
pop
repnz
pop
pop
subl
or
dec
idivl
jo
stc
mov
push
push
add
inc
in
pop
fisubrs
imul
push
outsb
mov
int
push
out
mov
bound
hlt
sub
jmp
push
xchg
movsb
dec
jne
pop
pusha
pop
push
lret
xchg
addb
push
frndint
xlat
inc
call
xor
in
adc
insb
dec
cld
outsb
loope
adc
out
sub
add
adc
jge
fdivrs
or
test
lcall
dec
pop
adc
pop
mov
leave
mov
pop
mov
jne
mov
fadds
mov
mov
fwait
mov
mov
out
sub
mov
adcl
jnp
sub
icebp
int3
iret
incl
js
jo
inc
sarl
inc
jne
xchg
mov
inc
and
hlt
into
sub
push
inc
subb
xchg
scas
mov
jns
xchg
pop
inc
push
xor
sbb
in
cmpl
mov
inc
filds
or
jnp
xor
shrl
xchg
push
out
das
lahf
add
sbb
lock
mov
imul
cmpb
outsb
pop
mov
jbe
sti
push
js
mov
mov
inc
lcall
out
mov
inc
and
jns
mov
jnp
les
dec
cs
stc
jb
sarl
sub
loop
cmpsl
mov
xchg
lret
call
cltd
js
call
hlt
sbb
cmp
hlt
and
xlat
loopne
or
outsb
loopne
xchg
xchg
icebp
push
jp
sub
xorb
stos
sub
xchg
pslld
adc
xlat
mov
call
dec
lock
cli
mov
mov
testb
fdivrl
hlt
subl
pusha
arpl
pop
fldenv
outsl
xor
imul
fprem1
push
cmpsb
les
bound
push
js
inc
loope
idiv
insb
lds
in
pop
daa
mov
add
lock
inc
jnp
test
adc
mov
adc
popa
cld
add
out
imul
aaa
call
mov
pop
mov
xchg
lahf
test
rclb
dec
sub
sar
push
lcall
xchg
push
fcompl
or
insb
add
pop
mov
lods
sbb
or
loope
test
mov
push
imul
cld
fucomip
cmp
fistpll
jne
sbb
je
daa
sbb
les
lock
push
scas
pop
lods
fwait
xchg
aas
imul
xchg
mov
jns
in
movsl
and
add
adc
jl
lock
ret
nop
sub
jns
repz
popl
addr16
test
lock
mov
push
out
sti
ffreep
roll
xor
cli
adc
sub
lahf
mov
jne
loopne
mov
add
or
push
fcomp
inc
test
mov
xor
lcall
push
faddl
repnz
test
inc
lcall
mov
mov
mov
clc
out
cmc
mov
pop
fsubrl
push
hlt
or
xchg
jp
sahf
int
repnz
xchg
adc
mov
pop
add
push
jmp
jecxz
push
mov
xor
pop
and
pop
mov
push
sbb
jecxz
cwtl
or
fidivrs
lds
sbb
lret
cmp
fdivl
inc
loope
and
lret
andl
in
mov
sub
push
jg
xor
jb
sub
or
jp
loope
or
fs
pop
std
sbb
add
out
dec
icebp
pop
and
push
outsb
jb
movsl
xor
incl
into
sub
test
paddsb
je
int3
repz
dec
lahf
stos
adcb
adc
push
jo
std
dec
or
negb
fmuls
pop
movb
cli
add
pop
cld
mov
xlat
mov
add
icebp
sub
inc
jg
outsl
int
call
ljmp
xor
das
add
movsl
pop
fcmovb
es
iret
lret
test
clc
cld
shl
out
sbb
scas
jo
in
mov
nop
sbb
stc
push
ljmp
mov
out
mov
imul
xchg
fisubrs
mov
mov
cmpl
mov
ret
in
inc
sbb
mov
mov
xor
inc
pushf
insb
mov
pop
fisttpll
mov
lcall
lock
push
loop
popl
jb
popf
repnz
iret
push
xchg
inc
mov
inc
les
jle
dec
call
jle
enter
jo
cmp
jg
movsb
push
pushl
sub
icebp
lret
mov
inc
push
out
out
popf
add
xor
and
loope
inc
call
insb
stc
xchg
jnp
hlt
jecxz
je
jl
push
or
das
pop
movsb
push
andl
push
fsts
cs
into
scas
mov
or
xchg
test
xchg
stc
mov
inc
mov
outsl
hlt
or
jg
mov
adc
sarb
shrl
pop
jns
push
pop
test
lcall
and
je
stc
xchg
dec
loop
out
hlt
sub
sub
add
pop
push
xchg
lahf
mov
add
sarb
xlat
rolb
ljmp
clc
push
hlt
lahf
jg
push
pop
sahf
imul
outsl
lods
call
js
pop
test
mov
adc
daa
arpl
pop
xor
aas
adc
jno
repz
sbb
lea
push
fcmovnb
mov
push
outsb
ds
cli
xor
jb
pop
cld
fldcw
ret
lods
pusha
push
clc
mov
enter
jmp
repz
dec
daa
jmp
mov
and
test
ljmp
mov
aas
add
inc
pop
xchg
sbb
das
shrb
rcrl
insl
fiadds
jbe
aam
in
push
adc
sub
cli
pusha
incl
push
xchg
ljmp
cmpl
pop
inc
icebp
xor
push
dec
or
rorb
pop
cli
adc
mov
rcrb
int3
pushf
test
pushf
jo
pop
std
or
or
xchg
cmc
loop
cmpl
mov
loope
mov
cld
mov
aaa
sub
popf
orb
movsb
hlt
shrl
mov
testb
fwait
pop
mov
push
or
lret
into
jecxz
mov
mov
call
cmp
xor
loopne
xchg
and
std
test
fucomip
lods
lret
pusha
stc
cmp
int
mov
pop
popa
dec
mov
cli
and
push
lock
cmpsb
lret
fbld
dec
clc
insb
jg
aaa
lret
sarl
call
sbbb
mov
les
xchg
test
jno
stos
bound
ljmp
shrb
test
subl
in
sahf
add
incl
stos
outsl
jg
sbb
in
in
cmpb
push
jnp
adc
push
and
das
aam
xchg
mov
in
xchg
or
fcompl
jno
mov
pop
lret
clc
xchg
xchg
pop
mov
arpl
out
push
mov
or
iret
pop
dec
add
xchg
push
fidivs
in
or
pop
fadds
mov
repz
gs
adc
mov
mov
das
or
dec
scas
pop
mov
ficoms
jmp
out
cli
not
xchg
enter
mov
cmp
xor
in
jb
clc
push
cmp
mov
sbb
xchg
xchg
mov
push
dec
cld
cs
sbb
je
mov
jg
cmp
and
mov
cmpsl
nop
fisttps
fldl
jle
xor
push
xor
fnstsw
mov
xchg
jne
push
inc
ja
pop
test
xchg
stos
aas
repnz
cs
inc
jmp
push
outsl
jb
push
pop
jle
scas
pop
jge
sub
jb
sahf
mov
sahf
dec
test
fdivrs
imul
das
outsb
nop
loopne
or
sbb
clc
push
aas
testb
lock
clc
mov
pop
xor
jmp
daa
xorl
call
xlat
mov
test
je
inc
in
xor
shlb
sti
mov
loop
iret
pop
xor
push
in
cmp
mov
push
mov
je
add
test
stos
jnp
insl
adc
das
test
cmp
outsl
out
mov
push
jp
push
cmp
add
test
int
clc
jo
and
out
shlb
ljmp
jns
movsl
loop,pn
fxam
or
mov
adc
pop
cli
int
push
push
xchg
mov
bound
je
sbb
pop
sahf
lahf
cmp
cmp
in
pop
add
inc
adcb
push
imul
sbb
loopne
xchg
push
lea
std
fwait
inc
cmp
cli
adc
es
repz
cmp
mov
pushf
sbb
dec
in
stc
push
sbb
and
outsl
sub
pop
jns
mov
fdivs
pusha
sub
inc
jae
aam
xor
pusha
lock
in
enter
insl
jae
add
rorl
dec
adc
leave
in
adcb
adc
push
bound
xchg
bnd
insb
xchg
cmpsb
les
decl
jecxz
pop
rclb
icebp
lret
cmpsb
imul
js
repnz
int3
filds
lcall
mov
lret
pop
loopne
push
out
sub
and
ljmp
cmp
lret
lea
jo
jl
imul
xorb
push
sti
divl
aad
pusha
imul
mov
incb
and
cmp
decl
push
lds
xchg
lds
ret
clc
push
jo
and
pop
adc
inc
aas
jmp
jl
inc
add
push
cmp
xor
push
add
cwtl
pop
cmpb
rolb
mov
jle
addr16
xor
xchg
cwtl
mulb
cli
jbe
mov
inc
jne
cmp
and
movb
ljmp
mov
mov
push
inc
add
sbb
repz
pop
mov
loop
clc
out
adc
sarb
cmp
in
adc
in
mov
clc
and
push
hlt
jge
xchg
jo
fmuls
sub
sbb
int3
pop
loop
outsb
cmp
repnz
xchg
or
ficompl
insb
add
xchg
rcrl
sti
adc
enter
mov
mov
push
inc
lahf
aad
popf
loopne
mov
dec
movsb
mov
dec
sbb
sti
pop
jne
and
nop
ss
jle
ja
clc
aad
cs
es
jg
push
jo
jbe
es
aad
and
jmp
push
out
mov
lahf
dec
rclb
add
fsubr
push
in
arpl
cs
cmpb
cmpsb
clc
sahf
in
dec
out
or
push
xor
inc
inc
mov
ss
sub
push
jg
sbbb
fnstenv
xorb
in
in
adc
adc
test
cmp
imul
mov
scas
fdivl
cli
push
jmp
jl
mov
cmpsb
addb
cmp
add
and
std
jp
sub
mov
and
popa
aam
addl
push
adc
hlt
sbb
jnp
push
fsub
mov
push
psllq
hlt
mov
adc
and
mov
addl
cmp
mov
cmp
jp
in
sub
push
jp
lret
mov
cmpsb
loopne
xor
pop
loopne
jnp
or
mov
jp
aaa
add
pop
sbb
adc
xchg
in
cmc
cmpsb
pop
clc
jae
cmp
repnz
or
lods
cltd
inc
push
mov
jp
mov
loop
addr16
scas
ljmp
insl
lock
fadd
inc
insl
sub
rolb
or
mov
add
clc
cmp
xchg
bound
inc
dec
jp
stc
ljmp
je
jle
cmp
rol
clc
or
xchg
add
cmc
sarb
dec
fs
fldenv
xchg
int3
push
movsb
push
adc
les
pslld
je
jno
repnz
out
loop
daa
popf
inc
mov
arpl
xor
mov
movsb
jp
dec
fwait
sbb
xchg
adc
sub
jp
icebp
sub
ss
lret
add
mov
mov
or
add
adc
lock
push
mov
cmp
clc
shlb
je
and
clc
or
sbb
xchg
ljmp
push
adc
xchg
bnd
xor
mov
and
lret
mov
sbb
adc
call
xor
push
mov
cmp
ds
or
mov
ds
cwtl
popa
xor
loopne
dec
mov
das
inc
push
imul
les
cwtl
insb
roll
dec
and
fidivl
jnp
in
loop
mov
inc
cmpsl
outsl
pop
dec
idivb
mov
jg
jp
test
add
or
ss
outsb
shr
mov
cmpsb
out
pop
out
lahf
dec
mov
xchg
mov
pop
jg
stc
mov
call
lret
pushf
dec
inc
sub
adc
clc
xlat
rorb
xchg
add
add
sub
aam
push
mov
dec
push
adc
aad
mov
ja
sbb
cmpb
popa
sub
pop
loope
xor
jb
mov
mov
std
sub
lock
jg
call
jg
pusha
das
xchg
sbb
sbb
data16
jae,pt
pop
pop
stc
dec
loope
xchg
ficompl
xchg
loopne
cmp
fdivrp
xor
je
jmp
push
clc
cmp
and
add
add
pop
cli
add
or
and
fsubl
jp
out
enter
jecxz
hlt
add
cld
or
mov
pop
adc
add
ret
xchg
push
lret
jp
insb
aaa
subb
ss
ss
repnz
outsl
js
xchg
jno
sbb
mov
adc
sub
loop
jmp
mov
stos
test
and
sar
repnz
mov
or
xchg
fimuls
adc
jl
adc
sub
mov
fistpl
push
or
mov
das
outsb
lea
sub
pop
and
or
arpl
push
push
cmc
leave
xor
mov
imul
mov
add
test
clc
iret
or
stc
and
sbb
fs
add
mov
js
mov
pushf
stos
or
pop
inc
mov
fwait
push
loop
mov
and
adc
das
ss
ds
xorl
xor
mov
mov
out
sbbb
xchg
cmpsb
test
loopne
insb
std
outsb
aam
inc
cmpsb
pop
clts
xchg
sbb
adc
inc
lahf
jae
es
pusha
roll
lcall
jbe
mov
push
sub
icebp
mov
orb
test
mov
popa
dec
es
sbb
add
icebp
loopne
pop
repnz
bound
fbld
orl
les
outsl
pop
mov
add
rol
lahf
outsb
outsb
rolb
fildll
fiaddl
pusha
sub
stc
rorl
call
sub
or
adc
xchg
adc
add
inc
pop
clc
ja
repnz
mov
movb
dec
jge
out
leave
lea
inc
out
mov
xchg
cmp
loope
xchg
push
je
inc
cli
push
loop
stos
and
push
cld
xchg
or
sahf
jge
inc
lock
add
in
nop
ss
out
es
fistpll
flds
add
ss
cmpb
jecxz
das
pop
hlt
sub
in
jmp
mov
xor
inc
add
call
pop
inc
fidivrl
stos
outsb
lcall
or
into
mov
jb
shl
clc
sahf
inc
sub
bound
outsl
cmpb
hlt
fidivs
pop
or
mov
mov
ffreep
sbb
test
xor
mov
inc
outsl
push
push
lods
flds
data16
fs
push
stos
adc
test
int3
cmpsb
subb
repnz
pusha
lds
hlt
fwait
imul
outsb
test
bound
jg
pop
idiv
fdivs
cmc
iret
test
in
hlt
sub
popa
xor
pop
xchg
aaa
jg
and
dec
xor
inc
pop
cltd
jbe
aad
xchg
lock
lea
lods
xchg
fnstcw
and
aaa
jg
fwait
aaa
xchg
adc
ss
repnz
inc
add
out
outsb
lods
xchg
shlb
mov
lock
shl
jg
add
mov
xorl
hlt
out
add
ret
cld
fdivrp
cmp
int3
inc
add
mov
pop
or
fmull
push
nop
pop
nop
push
int3
fstpl
adc
push
aas
sub
std
jge
or
in
lock
es
movsb
fwait
xlat
rcrb
lahf
dec
std
imul
xchg
add
cmc
mov
loopne
lods
aam
adc
clc
mov
mov
fwait
sbb
int
or
push
lock
pop
movl
push
lods
add
jl
outsl
nop
pop
sar
roll
adc
pop
add
or
fisubl
push
mov
jg
inc
xchg
icebp
cmpsb
sahf
js
mov
loopne
inc
rcr
outsb
insb
cld
inc
in
sbb
push
mov
sub
push
pusha
sbb
xsave
mov
lea
mov
std
bound
andl
sub
xchg
and
jg
hlt
aam
cld
stos
add
icebp
cs
push
dec
out
fcoml
inc
test
or
nop
pusha
std
inc
clc
or
or
xchg
jb
addr16
mov
xchg
std
out
add
decl
fdiv
pop
out
push
cltd
out
and
cmpsl
add
insl
pop
sub
adc
test
push
movsb
cmp
jp
jne
sbb
clc
inc
or
jmp
pop
xor
xchg
inc
pop
cmc
out
jbe
and
lcall
adc
fdivp
xorb
sbb
in
and
push
in
pop
out
int3
mov
mov
loopne
test
js
sub
arpl
in
dec
jge
push
aam
inc
xchg
push
sahf
sbb
out
jecxz
cli
in
push
ficoml
jne
mov
push
mov
xor
push
icebp
sbb
lock
ficomps
rorb
mov
push
std
or
aaa
loopne
mov
fmulp
add
movsb
sbbb
fadds
cld
inc
call
xlat
jle
or
pusha
sar
fmuls
push
int
int3
dec
in
ljmp
movsl
daa
push
push
sbb
pop
ljmp
jnp
aam
out
cli
or
inc
fsts
imul
jo
xor
aas
test
bnd
mov
outsb
loopne
mov
fs
push
sub
mov
cli
out
sarb
jg
sbb
mov
inc
ret
addb
mov
fcoms
jmp
lret
repnz
outsb
jp
into
mov
xchg
outsb
xor
test
and
outsl
shl
stc
out
popa
out
add
aad
cmp
jmp
into
js
adc
test
fadds
push
pushf
in
sub
cmpsb
xchg
push
clc
pop
aam
data16
popa
sbb
nop
pop
in
in
mov
jo
mov
je
jl
hlt
cmpb
cmpl
dec
shl
out
enter
fists
jae
test
lea
mov
hlt
mov
push
inc
stc
push
dec
in
icebp
adc
clc
push
lock
push
jo
lock
fcom
cmp
scas
imul
clc
xchg
cli
push
loopne
daa
ds
xchg
sub
fadds
xchg
pop
jmp
pop
jg
mov
clc
jbe
in
incl
mov
loopne
repnz
loopne
les
outsl
lcall
lcall
push
mov
fimuls
push
push
lret
mov
ss
out
pop
repnz
pop
sbb
jg
in
mov
lock
je
jns
je
or
sub
push
push
pop
mov
jno
fstpt
xchg
call
inc
out
hlt
gs
popa
mov
lahf
pop
aaa
call
stc
in
xchg
xchg
repz
pop
rcrb
clc
in
ret
or
xchg
lds
adcb
je
mov
mov
sub
adc
push
orb
inc
js
loope
test
testb
sub
sbbb
fucomp
and
sub
out
mov
sub
ljmp
xor
jp
inc
testb
dec
jg
pop
sbb
out
jg
repz
ds
inc
push
lahf
int3
mov
lods
enter
adc
scas
mov
cmc
ficoml
xchg
das
sbb
push
sub
jg
xorl
cmp
fldl
aam
pop
ss
in
jg
pause
cli
lcall
push
orl
add
push
enter
rol
and
cmp
inc
mov
or
push
cmpsb
mov
outsb
xchg
lock
cli
shll
mov
cmpsl
dec
imul
scas
call
pop
push
add
and
ret
push
cmp
add
mov
pop
rorb
push
pop
sbb
xchg
aaa
lds
daa
xchg
adc
mov
jp
aaa
mov
fcompl
inc
mov
stos
jmp
test
xchg
add
jg
fldcw
stc
movsl
popf
insl
nop
dec
add
cmpsl
inc
mov
adc
js
loopne
les
into
mov
add
adc
jns
shl
add
ret
sub
subl
sahf
jmp
jl
xchg
rorb
mov
cwtl
pop
rorl
addr16
stc
add
lcall
fdivr
imulb
xchg
stos
pop
insl
ret
pushl
cmc
pop
mov
fwait
push
add
lods
push
lcall
or
dec
call
scas
insb
cmp
push
pop
loopne
loop
insl
add
es
loope
sub
and
repnz
fwait
adc
mov
xchg
outsl
mov
inc
data16
sbb
jo
mov
adc
mov
loop
sbb
and
xchg
adc
repz
or
add
hlt
orl
add
lods
cmp
add
test
sub
fwait
rcr
xor
add
popw
rorb
ret
imulb
fisubrs
xor
mov
xor
std
adc
jnp
sub
add
testb
addr16
nop
and
incl
xchg
movb
jno
sbb
pop
rol
push
add
mov
mov
loope
mov
mov
test
xor
lret
rolb
daa
dec
cmp
aaa
sub
fsubs
pop
pop
ss
xchg
and
loopne
mov
push
pop
iret
cmpb
adc
out
inc
inc
push
popf
fistl
mov
xor
jb
aas
js
addl
mov
jle
mov
xchg
rcrb
lcall
in
popa
lods
mov
xlat
xchg
cmpsl
add
cmp
xor
jno
add
icebp
leave
js
nop
clc
lea
test
pop
lea
and
add
mov
sbb
push
push
push
sub
dec
push
std
pop
dec
in
adc
inc
stos
add
sti
jmp
xor
cmp
mov
pop
fwait
addl
xchg
out
jo
mov
dec
mov
cltd
and
mov
or
pop
pushf
or
dec
or
es
sbb
sarb
idivb
add
xor
adc
mov
call
jns
fnsave
adc
bound
jbe
dec
sbb
cld
pop
icebp
xor
push
cmpsb
loope
int3
xor
mov
inc
add
std
xor
nop
mov
mov
pop
in
xlat
sbb
stc
xchg
mov
pop
pop
ja
test
adc
iret
sub
rclb
outsl
dec
scas
xchg
mov
mov
jge
ret
fcmovnb
mov
sbb
adc
nop
in
add
filds
mov
std
pop
pop
fwait
mov
pop
pushf
push
inc
or
imul
aaa
js
pop
ffree
jg
jnp
push
jl
outsl
cmp
xchg
ss
insb
push
addr16
mov
std
ljmp
in
jo
insl
mov
das
pop
out
xchg
stos
inc
dec
push
icebp
push
or
mov
pusha
std
lahf
dec
xorb
cwtl
es
pop
add
mov
dec
adc
mov
mov
mov
scas
je
push
sbb
js
push
cld
in
mov
add
fists
and
clc
xchg
ss
sbb
mov
aad
xchg
fidivs
mov
push
xlat
mov
mov
jmp
movsb
pop
orb
xor
push
adc
sbb
cwtl
push
xchg
ficompl
cmp
lds
out
call
arpl
lcall
mov
ss
pop
and
jb
fnstsw
add
cmp
push
add
aas
fwait
inc
mov
push
imul
jge
pop
push
cmc
push
hlt
fwait
out
pop
or
add
fstpl
pushf
push
sub
repnz
xchg
dec
sub
ljmp
movsl
mov
add
lock
ret
bound
push
pusha
inc
or
mov
ja
les
xchg
cmp
pop
pop
fcomp
lock
xor
jmp
cmp
xchg
mov
push
mov
push
hlt
or
cmpsb
popa
lcall
xor
sti
add
xorb
std
cmp
outsb
dec
cmp
cmpsl
int3
fdivrp
test
mov
push
mov
lret
cli
scas
scas
in
ds
mov
lock
dec
stc
cmpb
test
mov
jns
jle
add
mov
adc
outsl
mov
mov
fists
stos
shlb
out
push
pusha
cltd
aas
and
adc
stc
fs
push
test
imul
and
jo
subb
test
add
lret
sahf
jb
testl
mov
cmp
dec
jb
pop
and
inc
mov
add
arpl
mov
test
test
fdiv
pusha
rcrb
and
add
fisubrl
fsubs
in
rolb
jno
and
lods
cltd
adc
push
popf
call
mov
xchg
or
sbb
inc
inc
adc
aas
mov
cmp
sub
mov
stos
add
mov
test
cli
sbb
arpl
mov
shrb
outsl
adc
mov
mov
daa
jl
fwait
adc
add
and
ret
popa
adc
and
lea
std
pop
inc
loope
setl
cmpsl
sbb
and
push
sbb
mov
push
mov
adc
pop
inc
jecxz
shrb
scas
xchg
push
cmp
and
jae
icebp
push
lret
xor
cmp
stos
scas
mov
mov
xchg
iret
pusha
sbb
inc
bound
mov
movsb
js,pn
iret
mov
add
mov
ficompl
fdivs
pop
dec
scas
sub
and
clc
push
jbe
push
fsubp
rclb
xor
int3
mov
add
xchg
pop
xchg
add
fsubl
xor
dec
jecxz
test
scas
stos
int3
add
movsb
and
and
sar
jg
testl
push
and
or
jg
stos
dec
mov
jno
rorb
adc
pop
dec
jle
inc
mov
sbb
cmpl
push
xchg
add
ds
fbstp
add
push
vmread
mov
jge
mov
xchg
mov
jno
pusha
std
in
jmp
xchg
add
pop
pop
rolb
ror
dec
sbb
popa
pop
or
nop
test
icebp
jg
jle
rol
add
mov
add
mov
cld
loopne
bound
mov
push
push
lcall
pop
icebp
aad
addb
cmp
sarb
imul
or
js
cld
push
push
pop
mov
sbb
aas
scas
test
pop
dec
in
and
test
cmpsb
sbb
add
sub
pop
add
fs
js
std
pop
icebp
push
xchg
cmc
sti
fs
mov
sbb
sbb
cmp
inc
sub
or
sub
test
sub
cli
jg
push
cmpsl
cmp
sub
bound
sub
les
or
xchg
hlt
shll
pop
cs
rorb
loop
loope
shlb
stos
mov
hlt
xor
sub
pop
xchg
into
add
push
rcrl
dec
test
mov
in
wrmsr
or
lcall
mov
incl
push
andb
in
adc
std
jbe
inc
push
rcr
add
pop
rol
push
sbbb
shrb
outsl
or
clc
sub
sub
jo
lock
rorb
add
xchg
sbb
inc
mov
imul
mov
cmp
sub
dec
movsb
test
mov
fstps
imul
mov
xchg
sbb
inc
jbe
addr16
xchg
add
leave
and
rcrb
dec
cld
jg
sbb
push
xlat
add
fptan
mov
loopne
add
adc
test
andb
mov
add
loopne
sarl
call
aaa
or
pop
mov
cltd
incl
inc
jo
push
xorb
and
and
xchg
pop
into
push
cmp
test
cmpsb
cmpb
fistps
clc
mov
int3
mov
push
add
clc
or
movsl
mov
sbb
hlt
int
and
xchg
nop
inc
hlt
mov
add
daa
loope
decl
sbb
push
pop
sbb
mov
and
test
dec
popf
push
dec
and
lods
mov
into
test
leave
es
cmp
jns
lret
lock
cmp
or
orl
das
loopne
mov
aaa
ret
sbb
dec
xor
movsb
leave
movsb
lea
nop
xor
sahf
fbstp
dec
lds
inc
xchg
sbb
shll
inc
sbb
mov
push
add
mov
adc
addr16
rcr
cld
dec
sbb
call
das
add
test
push
add
fdivr
pop
add
inc
adc
pop
shrb
cmp
ds
add
mov
jb
jmp
push
xor
movd
dec
.byte
idiv
lcall
inc
nop
sbb
inc
test
and
pusha
add
push
cmp
adc
add
xor
pushl
or
adc
add
and
decl
rol
xor
add
loopne
incl
and
jmp
shl
inc
jo
sbb
xor
add
adc
incl
and
jg
jo
rclb
and
loopne
roll
or
adc
sbbl
rclb
adc
and
test
rolb
push
add
or
loopne
fcos
cmp
adc
nop
add
dec
jbe
lcall
sti
push
or
dec
add
addl
xor
dec
cmp
mov
pushl
add
pop
adc
cmp
loopne
jmp
rclb
adc
add
or
rcrb
add
test
lods
shrb
xor
shrl
addb
mov
xor
andl
rorb
fmuls
push
nop
lcall
outsb
add
loopne
dec
sbb
test
nop
adc
testb
adc
and
jo
pop
pusha
and
cs
imulb
rcr
adc
jo
dec
sbb
or
pushl
add
jnp
aaa
add
add
lcall
in
pusha
or
lcall
sbbl
xor
mov
or
and
jbe
mov
sbb
sub
mov
hlt
and
inc
xor
sbb
and
dec
pusha
or
stos
and
orb
loopne
add
aad
sarl
push
fisttpl
adc
adc
or
xor
fsubrs
sbb
andl
test
roll
add
inc
push
bound
scas
clc
and
sbb
push
or
push
adc
dec
or
inc
rcr
aaa
inc
add
and
loopne
and
adc
push
or
mov
pusha
jbe
xlat
je
mov
pop
lds
in
jo
and
pusha
fsubs
bound
adc
push
pop
dec
sub
jo
inc
adc
cmp
and
pusha
subl
push
mov
or
push
dec
rolb
xor
test
sbb
loopne
andb
rcll
roll
xor
dec
push
andl
nop
popa
push
mov
add
pusha
in
mov
sub
add
mov
jbe
push
addl
mov
fs
adcb
or
andb
sub
inc
inc
or
mov
cli
in
movb
adc
insb
je
adc
or
or
into
pop
and
xor
int3
loopne
jb
adc
pusha
adc
addl
lock
inc
push
popa
pop
fiaddl
xchg
in
fcompl
mov
or
inc
nop
push
and
adc
or
stos
popa
dec
jo
mov
xorb
nop
inc
add
pop
push
sbb
mov
faddl
xlat
add
push
ds
dec
loopne
ret
outsb
push
push
cmp
mov
orl
inc
loopne
jb
add
andl
cmp
sbb
rorb
cli
jb
lcall
inc
or
sub
mov
jbe
or
ss
fildl
jecxz
and
add
adc
mov
clc
add
pop
push
addb
jbe
fld
popa
cs
movsb
push
push
dec
shlb
and
pop
les
dec
lret
andb
sbb
or
dec
outsb
sbbl
sub
fs
jo
shl
push
into
inc
orb
push
sub
fmull
xchg
xor
or
pushw
es
movsb
out
sbb
imul
xchg
mov
jl
enter
bound
or
sbb
pop
icebp
leave
loope
int3
mov
push
test
add
xor
xor
push
adc
xor
and
addb
push
lods
loopne
jb
lcall
test
stos
inc
or
addb
pop
sbb
fadds
jp
fiadds
test
test
jle
out
push
flds
in
or
xchg
lock
lods
loop
loopne
add
repnz
repnz
orb
sbb
lock
mov
or
sub
orb
incl
sbb
scas
add
aam
push
cs
lret
sub
fadds
add
adc
shlb
adc
sub
ljmp
pop
data16
push
test
push
or
sbb
inc
sbb
cmp
xor
loopne
xchg
xor
shll
sub
jl
roll
xor
pop
stos
aaa
xor
add
mov
pop
add
xor
cs
and
pop
cmc
mov
or
dec
sbb
push
xchg
clc
push
jo
and
add
push
cmpl
cwtl
inc
mov
sbb
add
gs
push
add
add
int
jno
and
inc
repnz
dec
pop
popf
cmp
push
rclb
ljmp
add
mov
test
test
loopne
js
adc
inc
shll
push
push
push
add
imul
adc
fsubl
and
adc
push
test
scas
test
sbb
adc
xchg
mov
dec
add
sbb
mov
cmp
mov
out
and
into
xor
and
popa
push
int3
cmp
add
mov
mov
mov
rclb
rorb
pusha
gs
addb
les
lods
js
push
push
cmp
sub
dec
lock
adc
pusha
push
or
and
lods
push
jo
rorb
jp
xchg
mov
sbb
add
push
sub
mov
nop
pusha
lock
inc
shl
pushf
push
xor
sbb
push
addb
jmp
mov
cmp
push
jno
ret
push
dec
xor
shrl
movsb
add
add
nop
push
rolb
addb
nop
xor
mov
xchg
insb
mov
push
cmp
nop
mov
dec
mov
pop
lret
mov
dec
jp
out
add
add
clc
xor
popa
sub
inc
shrb
mov
adc
inc
inc
add
je
dec
push
sbb
jo
call
or
lcall
pop
cmp
or
adc
xchg
mov
jle
xlat
imul
rol
scas
push
out
je
sub
push
cmp
sahf
xorl
inc
push
mov
scas
mov
and
fdivs
es
out
mov
ficoms
sbb
or
and
inc
divb
js
icebp
addl
cmp
inc
push
mov
adc
nop
rcrb
mov
add
add
push
jle
adc
adc
inc
testb
or
es
sub
pop
xchg
call
pop
sbb
jo
xchg
or
bound
outsb
test
sbb
adc
inc
push
sbb
pusha
add
push
adc
jo
in
imul
or
push
inc
sbb
or
data16
stos
fsubrl
stos
mov
push
sub
sarl
push
jp
push
or
and
pusha
adc
inc
and
ret
push
adcl
adc
shlb
and
xchg
add
addl
pusha
loopne
push
mov
inc
mov
loopne
dec
pusha
sub
mov
cmp
push
push
jle
adc
sbb
out
inc
scas
push
cwtl
add
hlt
or
lcall
cld
add
push
shll
pop
inc
push
push
push
fadds
or
lods
jo
sub
mov
add
push
pop
add
fsubl
mov
xchg
dec
mov
mov
jo
sbb
mov
pop
push
bound
xchg
sbb
add
push
insb
lock
nop
andl
movsl
add
mov
push
push
dec
xchg
xchg
add
pusha
or
xchg
mov
xor
lcall
xchg
or
rorb
xor
or
bound
jb
scas
test
inc
mov
cmp
sub
clc
sbb
add
push
ss
push
es
adcl
add
xor
cmp
or
jae
lret
insb
scas
inc
test
in
cld
and
popa
idivb
sbb
cmpl
push
fstps
cmp
orl
inc
sub
lret
sub
dec
adc
dec
mov
test
call
or
adc
mov
into
push
rol
repnz
xor
xor
add
call
dec
enter
ljmp
push
add
mov
je
add
adc
adc
call
jo
sub
push
shll
add
adcb
mov
cld
andl
mov
addl
loop
adc
addl
mul
call
sub
push
sub
sbb
add
inc
jo
jbe
push
lret
push
cmp
aam
shll
mov
and
adc
mov
test
call
pushf
jae
adc
push
js
push
mov
loopne
dec
dec
nop
stos
inc
add
inc
add
add
push
movb
mov
mov
sbb
div
call
shll
add
xchg
add
xor
sbb
mov
inc
and
test
add
rcll
push
pushf
adc
fmull
in
mov
fdiv
sub
dec
test
adc
test
adc
fs
call
push
adc
or
xchg
adc
data16
sub
adc
push
ds
sub
push
push
adc
xchg
subl
xchg
sbb
jo
adc
rolb
push
fimull
insb
lcall
or
or
pop
or
shl
xor
fdivl
or
mulb
lret
xorb
pop
je
dec
add
pop
dec
out
or
daa
insb
fcom
mov
push
cmp
cmp
mov
sub
jl
pushf
push
loop
adc
push
or
lret
movb
inc
adc
add
lock
je
xor
add
lret
andl
push
adc
add
fwait
inc
xchg
inc
add
cmp
add
je
jle
jo
hlt
int3
test
sbb
sub
sbb
jb
inc
cli
and
adc
adc
push
add
inc
or
out
xchg
and
pop
push
or
cmp
push
push
adc
push
dec
add
or
push
mov
sahf
dec
cmp
dec
inc
shll
or
add
jo
push
adcb
adc
mov
dec
push
sub
scas
dec
or
jp
stos
xchg
add
mov
xchg
xlat
push
add
add
sub
inc
cwtl
push
adc
int3
movsb
cwtl
push
in
rclb
add
adc
adc
inc
xchg
jecxz
xchg
xor
pop
hlt
nop
and
pop
adc
lods
enter
into
jl,pt
or
negb
push
or
add
add
lcall
push
push
movsb
rolb
scas
and
andb
mov
mov
pop
or
cli
adc
mov
push
sahf
add
add
sbb
adc
jo
hlt
nop
add
jle
clc
loop
fldl2t
leave
sbb
test
add
xor
add
or
add
out
xchg
xor
add
push
sub
jle
add
loopne
adc
nop
mov
clc
push
and
add
sbbl
sub
adc
test
xor
jle
loopne
inc
xor
jb
push
jp
jl
test
push
nop
xor
jl
push
mov
addl
stos
add
adc
push
mov
test
testb
and
pop
pushf
jbe
mov
adc
xchg
add
or
pusha
adc
sub
aaa
dec
adc
jo
cmp
sub
add
fcompl
adc
push
ret
out
xor
add
enter
shlb
adc
and
ss
mov
push
pusha
pop
rorb
sbb
out
mov
add
or
and
orb
and
fdivrs
xchg
rorl
add
mov
mov
mov
pusha
push
in
ss
and
jl
sbb
add
push
add
call
dec
or
xor
or
inc
or
adc
mov
xor
rcrb
les
mov
push
jnp
test
out
and
popa
xchg
dec
test
and
push
xor
add
bound
sbb
sbb
mov
movsb
pop
or
lods
rclb
dec
loop
add
add
inc
adcl
sub
shll
loopne
rorb
sub
mov
jl
inc
or
inc
gs
mov
imul
pusha
mov
cs
mov
mov
lcall
add
shl
xchg
sub
inc
sub
pop
sub
bound
fs
mov
add
sub
ret
outsl
xor
add
xor
jle
orb
test
and
dec
and
xchg
push
dec
and
inc
xchg
mov
cwtl
push
js
addl
js
and
jne
add
into
add
test
dec
je
sbb
sbb
stos
data16
inc
push
add
mov
add
fdivr
test
shrb
fcoms
nop
pusha
dec
in
test
and
inc
push
mov
adc
sbb
cmp
or
dec
ret
movl
or
adc
outsb
adc
adc
xchg
mov
mov
je
or
or
and
pop
stos
push
test
aam
dec
lods
jle
mov
push
cmp
cmp
bound
mov
ror
movsb
les
cmp
xchg
lods
add
adc
int3
mov
pop
and
mov
mov
push
or
or
fs
or
jbe
dec
xchg
shrb
push
xor
push
out
ds
sub
ljmp
stos
add
cmp
add
mov
adc
mov
add
subl
pop
nop
loopne
dec
add
clc
scas
mov
mov
mov
cmp
into
loopne
add
xlat
push
push
adc
popf
or
rclb
scas
cmp
loopne
or
push
pop
jo
add
imul
pusha
cmp
add
mov
dec
add
and
sub
mov
ss
mov
add
push
lea
push
loopne
jle
notb
inc
loope
mov
mov
je
bound
or
inc
and
mov
subl
or
adcb
adc
and
inc
adc
and
cmpb
dec
xor
data16
lock
adc
mov
push
mov
inc
adc
sbb
or
pusha
push
ret
fdivrp
cmp
xchg
enter
pushf
add
dec
jno
push
dec
add
into
push
jp
incl
xlat
shlb
dec
fs
and
int3
cmp
push
sub
adc
addl
js
add
data16
add
pop
cmpsb
repnz
add
shrb
sub
dec
push
add
rorl
push
fiaddl
cli
push
xor
adc
jo
adc
adc
sbb
or
adc
add
sub
sub
movsb
adc
mov
in
xor
sbb
fsubl
loope
xor
mov
inc
cmp
inc
incb
int3
js
xor
ficomps
sub
pop
xor
int
sub
sub
push
or
push
push
cmpb
xor
adc
imul
add
scas
or
xor
mov
addb
jno
xor
inc
out
mov
das
add
sahf
lret
decl
decl
add
nop
adcb
add
je
pop
cmp
mov
xor
jp
les
push
and
cwtl
jo
or
or
xchg
cld
or
adcl
loopne
dec
and
cmp
repnz
movsb
push
add
js
cmp
jecxz
pop
xchg
and
mov
push
nop
xchg
mov
push
dec
fcom
cmp
add
adc
sahf
push
imul
outsb
ds
mov
sub
hlt
adc
pusha
jb
rclb
data16
jb
jne
stos
nop
pusha
int3
test
cs
and
adc
mov
add
xchg
inc
or
mov
push
add
xor
mov
add
adc
bound
push
inc
not
sbb
push
add
nop
cmpsb
inc
add
testb
inc
add
cs
push
adc
push
and
adc
cwtl
addl
pop
test
enter
dec
popa
or
xor
xor
add
enter
inc
or
or
add
fs
mov
sahf
push
sub
mov
adc
cmp
cmpsb
jp
inc
and
xchg
add
or
jle
adc
lcall
ljmp
lcall
pusha
adcb
adc
rcrb
push
push
adc
adc
addb
pop
shlb
push
sbb
js
rolb
test
test
add
mov
mov
fs
adc
push
push
pusha
adc
lcall
push
add
pop
jb
scas
mov
adc
jbe
and
xor
pusha
xor
mov
sahf
and
shrl
xchg
mov
sahf
adcb
dec
push
rolb
push
andl
dec
sbb
cmp
pop
shlb
push
cmp
mov
fiadds
xor
in
sbb
inc
xchg
stos
push
lret
pop
push
dec
or
xchg
popf
je
loop
and
adc
or
test
popf
pusha
repnz
popa
push
add
insb
pop
rorb
faddl
test
dec
popa
or
xchg
push
xchg
push
push
cmp
mov
pop
int3
ljmp
addb
cli
cwtl
dec
pusha
mov
cld
or
mov
shll
sbb
pop
dec
pop
push
subl
andb
add
adc
xor
sbb
notb
mov
cld
mov
cltd
jbe
into
adcb
xor
ffree
jo
and
adc
lret
push
inc
pushf
nop
push
mov
mov
xorb
add
push
roll
rclb
and
adc
clc
push
enter
insb
jbe
push
and
cld
add
add
stos
xor
adc
arpl
or
lcall
decl
add
sub
jmp
push
jae
xchg
jo
jbe
test
mov
cmp
sbbl
mov
and
pusha
cmp
dec
add
jle
jbe
icebp
add
cmpsb
xor
nop
sub
pop
pop
test
inc
lods
out
and
xor
or
mov
lret
sbb
in
add
dec
inc
and
call
mov
adc
aam
nop
xchg
movsb
mov
loop
mov
jbe
repnz
sub
loop
mov
test
push
add
andl
enter
and
aam
cwtl
add
add
jno
subb
cmc
add
cmp
cs
sbb
xchg
adc
add
xchg
cmpsb
pop
push
adc
or
cmp
xor
push
cmpsb
orb
jb
nop
in
adc
mov
fadds
xor
rolb
push
or
mov
mov
lcall
sbb
mov
and
lret
movsb
jo
data16
int3
rolb
nop
xchg
rcrl
add
sbb
mov
cmp
je
mov
add
adc
xor
gs
mov
addb
dec
xor
adc
sbb
sbb
xor
sbbb
sub
les
add
sub
and
or
sub
rorb
push
pop
xchg
inc
loop
xchg
mov
rorl
shrb
clc
and
pop
push
adc
and
test
pusha
or
out
xor
add
push
dec
push
orl
and
sbbl
xor
mov
insl
loopne
cmp
je
mov
or
push
je
adc
lods
ljmp
and
pop
pop
sbb
inc
and
sbbb
fdivrs
push
xchg
and
nop
push
sbb
add
sbbl
jp
in
or
ss
xor
test
xchg
mov
jo
mov
rclb
stos
add
es
mov
or
out
add
roll
rolb
inc
add
add
dec
and
rorb
enter
inc
add
into
and
and
int3
lcall
cwtl
add
sub
push
adc
adc
mov
jp
fidivs
cld
adc
jle
jge
sbb
mov
cmp
add
xor
add
adc
mov
jb
movsl
cld
dec
mov
jo
xchg
inc
and
xchg
shlb
sbb
cmp
lcall
sub
sarb
add
add
orl
enter
add
test
popa
scas
add
cmpl
push
or
loopne
inc
mov
test
cmp
test
and
add
adcb
loopne
or
mov
addb
or
lock
lods
repnz
adc
es
add
and
inc
scas
cmpsb
jo
and
je
loop
sub
fsubrs
cmp
addb
and
je
push
add
or
push
or
test
fadds
hlt
mov
add
nop
bound
push
shll
sbb
ss
add
add
pusha
xchg
leave
stos
sahf
adc
sbb
adcb
push
sub
sbb
adcb
xor
sbbb
add
mov
add
xor
test
and
mov
rorl
stos
insb
push
xor
push
and
inc
add
adc
inc
rclb
and
inc
push
xor
stos
pop
add
lock
cmp
popl
inc
test
movsb
dec
sbb
or
xchg
scas
xchg
jo
dec
lcall
mov
hlt
sub
aam
jmp
and
and
imul
cmpl
out
xchg
push
insb
pop
cmp
lcall
or
add
test
inc
cmp
adc
addb
adc
test
ret
imul
mov
call
clc
adcb
push
push
add
shll
dec
push
data16
data16
loop
cltd
cs
add
or
and
cwtl
jne
loopne
clc
xchg
cs
sbb
and
add
les
aam
sbb
dec
pusha
test
push
add
repnz
jo
push
pop
inc
inc
test
add
mov
xchg
jle
push
inc
and
mov
xchg
or
inc
pop
pusha
push
out
pop
add
add
jbe
cmp
loop
jl
nop
adc
sbb
inc
xchg
add
rolb
lcall
push
inc
nop
addb
dec
mov
and
inc
loopne
fiaddl
adc
inc
mov
inc
or
mov
add
push
mov
cmpb
test
rorb
call
add
adc
sbb
jbe
data16
xchg
cmp
sahf
push
or
add
sub
or
dec
sbb
xor
push
push
adc
int3
push
sbb
mov
add
clc
pop
jp
sbb
shrb
mov
lcall
or
lods
adc
nop
dec
push
push
loopne
push
jp
add
dec
test
test
aad
xor
dec
mov
jp
cld
pop
cmpsl
dec
mov
loope
insb
mov
push
pop
sub
mov
jnp
push
dec
shlb
xchg
add
push
add
sahf
dec
aam
pop
mov
adc
into
push
sbb
add
sbb
add
data16
add
cld
fadds
mov
jo
pop
rorb
push
rorl
or
jl
jp
inc
add
sub
outsb
addb
push
adc
lret
add
push
cld
inc
xor
enter
push
orl
pop
in
in
add
inc
call
test
mov
or
inc
lods
in
xorb
dec
or
push
or
movsb
or
fs
jo
pop
cwtl
mov
cmp
cmp
call
mov
xor
test
or
xchg
rolb
cli
test
add
and
rclb
lret
jl
enter
mov
adc
inc
loopne
lock
and
outsb
dec
push
mov
xor
roll
rolb
add
call
sub
push
loop
sub
lcall
push
pop
fisubrs
rolb
adc
add
jge
loopne
mulb
push
push
mov
loop
and
add
xchg
dec
xchg
pusha
adc
ja
mov
push
push
adc
push
jbe
cs
in
pusha
hlt
mov
and
adc
or
add
pusha
lcall
sub
inc
lea
jae
enter
dec
shll
notb
xchg
pusha
ficoml
loopne
dec
or
or
cld
or
and
xchg
inc
and
or
dec
inc
pop
cld
dec
jb
add
repnz
into
or
cmpsb
aam
dec
stos
clc
cmp
xchg
clc
pusha
nop
rorl
adc
loopne
push
add
inc
addb
xchg
es
dec
movsb
xchg
jl
xor
ret
inc
xchg
andb
adc
cltd
or
mov
test
mov
push
push
jo
sahf
adcl
adc
shrl
xchg
or
pop
push
inc
je
dec
insb
call
pop
inc
sahf
int3
adc
hlt
add
lret
mov
dec
inc
xchg
pusha
jb
scas
add
sub
xor
mov
xor
jo
add
pop
cmp
add
add
lock
add
jo
rcl
sbb
add
lcall
cmp
ss
add
add
aam
sbbb
or
jo
xchg
or
cmp
inc
push
mov
or
outsb
push
lret
or
push
and
push
fcoml
or
dec
test
xchg
in
adc
adc
mov
loopne
mov
sbb
xor
fcompl
mov
jle
filds
inc
hlt
or
adc
nop
test
sbb
lock
sbb
inc
into
jo
push
ljmp
inc
or
or
dec
and
xor
dec
test
rclb
mov
pop
pop
or
push
nop
push
test
add
sbb
test
lea
xchg
fisubrs
sbb
or
fcoml
dec
sbb
bound
shl
push
sub
loop
add
mov
sbb
ret
or
jae
cmp
push
ljmp
testb
pop
sbb
adc
push
cmpsb
pusha
inc
xchg
add
orl
xor
addl
test
jp
dec
pop
adcl
mov
jb
insb
ret
mov
or
nop
js
add
xor
int3
lcall
addb
out
incl
lret
xor
push
push
sub
cli
andl
xor
push
sbb
adc
inc
and
subb
rorb
xchg
pusha
sbbb
jle
add
or
inc
sub
sbb
or
or
jbe
or
inc
and
xchg
pop
and
loop
cwtl
add
outsl
sbb
sbb
sub
pusha
xor
or
push
sbb
jbe
or
test
mov
scas
inc
or
and
cwtl
shl
jbe
jbe
xchg
jb
add
les
jle
sbb
push
xor
in
ficompl
mov
jo
and
adcb
inc
or
loop
push
out
add
mov
dec
nop
xchg
sbb
push
test
or
add
push
add
lock
sub
mov
cmp
mov
push
push
cmp
cmp
test
fsubrl
ror
adc
xor
xchg
add
or
or
addl
pushf
sbb
mov
test
mov
pop
mov
cwtl
inc
pushf
lock
or
or
dec
cld
rcrb
data16
data16
cmpsb
push
mov
mov
addl
adc
push
xchg
xchg
ss
add
leave
mov
adc
inc
fs
into
add
fs
sbb
or
xor
mov
cwtl
dec
or
test
es
in
adc
andl
xor
fdivl
add
sbb
rolb
push
insl
bound
sbb
xchg
and
dec
mov
push
lcall
add
adc
jle
xorb
sarb
and
loop
lcall
jle
inc
pusha
adc
inc
dec
add
mov
cmpsb
cwtl
mov
gs
sarb
xor
sbb
cli
jl
and
adc
sbb
adc
insb
push
add
cld
add
scas
inc
subb
sub
test
xor
pushw
xchg
pushf
ljmp
cmp
push
repnz
adcl
mov
out
cmp
and
add
push
xor
rcll
dec
push
xchg
add
or
add
add
pop
adc
addb
fimull
pop
fwait
enter
add
insb
shll
xchg
adc
stos
or
adc
fcoms
lods
or
mov
dec
cltd
test
mov
and
sahf
scas
xchg
cmp
inc
movsb
cmpb
push
subl
pop
lock
sbb
call
pop
orb
push
add
mov
add
add
push
ficoms
mov
xchg
xor
adc
push
in
mov
inc
and
dec
add
rcl
push
int3
mov
sbb
xor
push
inc
adcb
cwtl
adc
test
mov
push
adc
rclb
adc
jl
testb
cmp
scas
cmp
add
push
add
sbb
data16
push
addl
inc
xor
rolb
test
inc
in
adc
scas
sub
jo
mov
pusha
call
and
or
add
sbbb
lcall
popf
xor
sbb
dec
inc
xchg
lret
out
clc
add
mov
adc
add
xor
adc
dec
push
add
push
and
int3
and
or
mov
add
loopne
shrl
sbb
addl
addl
dec
cli
adc
pop
push
inc
sbb
sbb
decl
stos
leave
and
pop
orl
add
divb
dec
push
and
ljmp
xor
xchg
pop
mov
mov
push
or
and
mov
pusha
mov
push
jl
rol
pusha
mov
or
cmp
rol
inc
inc
add
dec
shlb
dec
inc
xor
or
xchg
mov
sbb
mov
add
xchg
fmuls
sbb
sbb
shlb
xchg
lcall
rclb
and
subl
gs
test
nop
lods
xchg
imul
enter
loopne
out
mov
push
movsb
adc
and
mov
sbb
dec
push
adc
nop
add
or
sbb
adc
push
or
pop
sbb
pop
fdivl
in
push
cmp
sub
push
add
xchg
jne
adc
fdivl
hlt
mov
jmp
and
sbb
add
xchg
add
fs
or
sub
add
ficoms
push
push
pushf
mov
mov
adc
in
mov
mov
inc
add
aaa
or
xor
jl
test
sub
cmp
stos
jne
add
xchg
inc
adc
adc
sbb
mov
jl
test
push
cwtl
sar
push
nop
push
xor
and
stos
fmuls
or
cmp
addb
adc
or
jl
and
mov
movb
dec
sub
mov
bound
xchg
sub
xchg
loop
push
fcomps
loopne
addb
push
push
iret
push
push
xchg
inc
mov
js
inc
add
ljmp
test
pushl
sahf
inc
xor
or
shll
sbb
inc
loopne
imulb
test
and
add
outsb
lret
add
cld
pusha
pop
add
cmp
add
mov
sub
xchg
sahf
add
inc
shll
aam
or
enter
dec
test
push
adc
subl
add
aam
adc
adcl
shlb
sub
sbb
add
dec
or
inc
enter
fimull
add
mov
jle
add
xchg
sub
inc
adc
ljmp
and
shll
push
je
lods
add
aam
shll
sub
jo
adcb
xlat
xor
repnz
adc
lds
dec
scas
mov
jp
shrb
test
in
mov
mov
xorl
and
lods
pop
adc
shll
xchg
es
cmpsb
push
test
mov
pop
rolb
test
jo
adc
cli
enter
bound
dec
mov
sub
mov
orl
jl
out
adc
pop
xor
sbb
push
xor
das
adc
nop
rolb
sbb
test
mov
addb
cmp
mov
mov
mov
pop
add
add
add
hlt
mov
aad
lret
mov
jo
xlat
xchg
sbb
sahf
sbb
push
stos
xchg
test
inc
adc
stos
push
or
shlb
shlb
and
es
mov
sbb
inc
inc
bound
add
in
push
xor
lret
add
pusha
in
adc
fsubrs
lock
test
clc
lods
bound
push
into
ljmp
mov
sbb
dec
add
mov
js
lock
pusha
sub
andb
and
shlb
jle
or
pop
lock
push
jle
ret
xor
ret
cwtl
mov
test
xor
lods
xchg
push
das
add
cmp
je
js
adc
insb
loopne
xchg
shl
xorb
rcll
andb
into
push
inc
popf
les
in
mov
push
imul
ret
pusha
or
mov
push
add
xchg
mov
inc
cwtl
dec
gs
cli
ljmp
pop
add
sbb
mov
mov
lods
mov
xchg
insb
es
jbe
sub
add
push
mov
xchg
mov
test
add
xor
mov
nop
js
rolb
adc
pop
cli
leave
add
mov
dec
mov
xchg
push
pop
and
andl
inc
add
dec
bound
sub
mov
arpl
dec
sub
add
inc
loop
inc
pushf
push
shlb
sbb
mov
ret
xchg
or
rolb
push
push
xchg
mov
xor
push
dec
add
loop
add
loopne
or
js
jp
adc
enter
inc
popa
shlb
add
push
add
push
mov
xor
jne
popf
mov
sbb
shrb
inc
inc
lods
pop
push
add
mov
add
xchg
cltd
add
sbb
xor
rolb
xor
outsb
adc
mov
lcall
xorb
les
adc
xor
mov
add
orb
push
sahf
adc
or
xchg
push
int3
jle
lock
sub
pusha
mov
add
mov
pusha
push
xor
es
je
adc
inc
xchg
pusha
xor
sbb
xor
dec
push
pusha
or
add
cmp
cs
jle
orb
mov
adc
sub
xchg
dec
add
xorb
or
pop
mov
jb
dec
sub
hlt
out
pop
inc
inc
movsb
adc
test
or
nop
stos
mov
ret
ljmp
push
mov
sbb
jo
inc
movsb
cmp
ds
movb
add
pop
push
cwtl
or
add
sbb
add
push
or
add
stos
sbb
sbb
inc
jp
pop
xchg
lock
pusha
mov
out
jo
pop
pop
es
dec
pusha
fcompl
xor
sub
faddp
xor
mov
cmp
cld
push
outsb
push
clc
and
adc
stos
rolb
enter
cmpsb
adc
pop
subb
cmpb
mov
and
int
daa
adc
bound
jo
and
push
into
push
cli
xchg
inc
popa
sub
cmpsb
addl
push
dec
or
push
testb
xlat
fwait
bound
ret
pop
push
ljmp
into
adc
outsb
add
test
shlb
add
xorl
sub
xor
xchg
popa
push
fldcw
mov
jb
or
add
and
add
mov
ss
sbb
or
test
repnz
cmpsb
dec
subl
mov
pusha
idiv
shll
lock
xor
sub
mov
stos
ds
xchg
sub
inc
adc
sbb
xor
in
loopne
loopne
aam
jo
jo
int3
inc
inc
sbb
mov
inc
push
incb
hlt
pushf
adc
adc
mov
add
push
cs
ljmp
dec
adc
add
jo
adc
addb
xchg
dec
mov
mov
mov
adc
in
push
in
sbb
clc
fsubs
cmp
cmpsl
mov
mov
scas
or
pop
mov
out
movsb
loope
std
call
and
add
adc
shrb
add
fdiv
cld
in
adc
ljmp
lcall
and
mov
xchg
ret
loop
jmp
aam
in
adc
xchg
ds
xorb
inc
mov
mov
mov
sahf
repnz
dec
dec
shl
shll
sub
sbb
popa
xor
cld
push
push
sbbb
xchg
and
dec
fmull
cmp
pusha
push
sub
mov
adc
inc
movsb
movsb
dec
xor
mov
push
movsb
adc
mov
or
add
push
push
adc
xchg
out
or
cmp
rorl
lret
cmp
data16
scas
mov
fmuls
and
jle
fiadds
push
fadds
adc
inc
dec
mov
and
cld
pusha
sub
andl
dec
mov
cltd
loope
orl
imul
and
push
rcrb
stos
ret
outsb
jl
mov
test
es
add
add
pushf
mov
jb
add
cmp
or
sarb
jo
push
mov
clc
mov
rorl
enter
mov
or
sub
nop
nop
dec
andb
add
add
mov
mov
jb
and
insb
adc
pusha
cmp
pop
inc
sub
xor
mov
loopne
jp
push
cmp
lods
xchg
outsb
inc
cltd
movsb
pop
dec
mov
dec
jo
repnz
mov
sub
dec
andb
es
inc
scas
add
mov
adc
and
cmp
jo
adc
inc
ret
xchg
loopne
fcoms
xor
jo
addb
test
adcb
and
cs
adc
sub
mov
add
mov
outsb
xor
and
rcrb
push
pusha
testb
or
jnp
xchg
cltd
sbb
aam
add
dec
cmp
dec
mov
add
js
inc
inc
sbb
push
cltd
or
dec
or
cmp
xchg
inc
in
or
add
sub
mov
js
sbb
bound
or
jae
lods
jle
cmp
popa
add
pop
mov
call
xorb
sbb
ljmp
cli
sbb
inc
cld
mov
in
adc
dec
insb
out
loopne
outsb
push
jge
or
loop
mov
adc
adc
add
sub
ret
mov
sub
xor
cmpsb
add
and
nop
adc
orl
push
les
pop
push
jno
cmp
cmp
adc
jo
cmp
andb
inc
xor
sbb
cmp
or
push
test
add
add
push
mov
adc
xor
push
add
pusha
jb
sbb
rcrb
inc
push
rolb
jp
or
dec
and
out
mov
and
sub
mov
bound
and
pop
ljmp
jo
adc
les
push
loop
dec
fsubrl
imul
shlb
cwtl
xchg
dec
pop
or
pop
out
jmp
add
dec
xchg
push
or
xor
and
push
dec
loopne
cwtl
scas
sbb
int3
push
nop
cmp
add
sbb
cmp
adc
inc
loope
pop
inc
or
adc
jle
mov
mov
out
shlb
pop
test
movsb
jo
fsubl
add
mov
mov
rolb
and
sbb
enter
adcl
bound
xor
pop
fs
pusha
push
inc
and
cmp
or
lods
shll
ss
pop
mov
test
cmp
loop
out
xchg
jl
cs
or
mov
mov
adc
add
inc
inc
pusha
mov
xor
int
mov
xchg
add
cld
pop
pushf
add
xchg
inc
stos
jbe
adc
add
dec
xchg
subl
dec
in
sbb
or
inc
or
sub
sbb
push
fadds
sub
or
add
add
cmp
and
add
add
inc
push
inc
xor
sbb
jle
cltd
nop
push
mov
cmp
gs
cld
push
and
popa
push
mov
test
subl
add
inc
shll
sub
or
hlt
adc
dec
mov
nop
jb
sub
test
mov
lods
pushl
dec
cmp
pushf
fs
dec
push
push
adcb
add
mov
push
mov
les
inc
xor
rol
jp
mov
addl
test
mov
push
xchg
sub
dec
add
xchg
nop
test
neg
mov
jo
sbb
push
movsb
inc
shll
or
push
add
out
lcall
mov
adc
sub
sbb
adc
inc
movsb
push
cwtl
or
loop
jb
push
add
xor
in
jle
push
nop
data16
jo
cmp
add
push
xchg
or
ds
data16
adc
stos
outsb
shlb
or
or
lret
push
mov
fs
cmp
aam
dec
and
dec
push
addb
cmp
inc
xchg
outsb
rclb
mov
xchg
xor
add
add
add
cltd
ljmp
or
cmp
ret
push
mov
push
ret
push
xchg
adc
add
pop
fs
adc
pop
ljmp
sub
adc
push
ret
sub
push
test
xor
inc
or
or
pop
dec
push
and
shlb
js
xor
das
mov
movsb
adc
loopne
mov
jle
subb
dec
loopne
xchg
inc
mov
cli
add
and
push
mov
sbb
cmp
lcall
nop
pop
rcrb
and
adc
data16
jbe
inc
pusha
push
push
push
sub
lret
mov
mov
in
pusha
clc
jbe
adc
lret
lock
cmp
push
cmp
shrl
mov
push
push
es
xchg
out
add
addb
push
jp
fmull
inc
cmp
fimuls
test
mov
stos
cmp
add
adc
xor
add
pusha
shr
cmpsb
sub
adc
xchg
ret
dec
mov
adc
mov
adc
out
nop
xor
inc
and
and
adc
add
lcall
sub
push
dec
adc
add
popa
push
cld
and
insb
rcl
inc
xchg
outsb
push
test
movsb
and
test
xchg
nop
aam
je
pop
ret
jo
or
add
sbb
add
rolb
hlt
push
xchg
xchg
rcl
cmpsl
popa
xor
mov
loopne
nop
in
inc
push
xchg
sbb
scas
mov
aam
into
fidivrs
adc
push
mov
cs
enter
add
in
mov
and
nop
or
push
adc
int3
inc
mov
pop
add
dec
xor
inc
inc
rorl
inc
mov
loopne
int3
bound
add
xchg
add
inc
jp
cmp
loopne
int3
fidivl
test
mov
int3
es
addl
mov
and
inc
cmpsb
jb
outsb
and
add
mov
add
addr16
sar
sbb
xor
or
in
fcompl
mov
inc
lods
push
push
pusha
xor
fdivrp
and
push
sbb
je
sub
sbbb
les
and
dec
inc
sbb
test
test
xor
daa
pop
test
ljmp
stos
jle
and
dec
mov
cmp
call
in
cs
mov
or
jo
inc
pop
and
push
cmp
add
adc
mov
xor
xor
fsubs
or
push
inc
or
adc
dec
push
push
in
cs
push
inc
add
incl
fdivl
movb
and
icebp
and
xchg
adc
inc
dec
cmp
lock
or
dec
shlb
test
xor
push
push
sbb
andb
push
les
and
xchg
xor
push
adc
pusha
cwtl
inc
mov
and
lret
int3
movsb
pop
out
nop
cwtl
xor
cs
inc
cmpsb
and
test
xor
add
inc
sub
mov
cmp
addb
adc
js
jo
or
popa
es
sbb
add
dec
cwtl
cmp
xor
sbb
xor
out
xor
cmp
push
or
outsb
inc
adc
arpl
cmpsb
and
or
and
mov
or
orb
mov
xchg
add
add
add
lcall
xchg
add
jo
or
and
xor
add
xchg
shl
lret
adc
xor
mov
cltd
add
mov
xor
mov
lock
loopne
push
xor
nop
adc
daa
lea
lds
add
push
jo
add
int3
jo
inc
dec
fsubp
fsubrs
lods
or
bound
cs
inc
test
cwtl
test
cmp
lea
add
jbe
cwtl
shll
mov
lock
and
xchg
mov
push
push
rcl
in
add
or
movsb
dec
dec
test
and
loopne
jne
xor
es
cmp
adc
dec
dec
pop
dec
test
inc
xchg
andb
cmpsb
or
inc
add
stos
push
xor
leave
push
and
push
rcll
mov
cli
repnz
cs
sub
push
add
xchg
xor
adc
push
adc
or
add
or
jle
sahf
scas
pop
dec
rorl
mov
or
pop
loopne
cmpsb
xchg
test
pop
sbb
into
add
push
or
pusha
movsb
dec
mov
aam
adc
aaa
fs
xchg
mov
fmull
into
idivb
xlat
push
xchg
bound
outsb
pop
shlb
call
push
cmp
fcoms
xorb
pop
es
sub
pusha
mov
test
movsb
inc
mov
inc
and
xchg
push
push
inc
cmp
and
pusha
sbb
inc
adc
mov
xor
adc
add
sub
xchg
mov
out
mov
in
and
scas
mov
xor
adc
push
pop
out
or
push
mov
pusha
jo
inc
sbb
inc
or
push
fisubrl
fs
fs
pop
and
xor
int3
dec
shl
test
outsb
or
add
incb
push
adc
push
and
pusha
dec
cmpsb
lods
xchg
cmpb
bound
xchg
cltd
xor
xor
xchg
stos
andl
mov
add
adc
push
rol
mov
xor
inc
and
cmp
test
adc
xchg
inc
xchg
xor
movsb
adc
jb
jo
sub
loop
or
insb
and
pop
xchg
stos
sbbb
inc
sbb
mov
and
ret
add
xchg
aad
xchg
inc
push
sahf
and
sbb
adc
xor
inc
push
jle
jo
adc
push
inc
add
movsb
push
inc
add
call
push
lret
xor
in
jp
cs
and
cwtl
insl
adc
loopne
mov
add
decl
pushf
jb
rclb
cmp
cmp
mov
lret
lcall
lret
addb
enter
stos
mov
add
outsb
cmpsb
xchg
ret
in
adc
cs
xor
loope
scas
sbb
mov
test
fsubp
adc
adc
push
cmp
adc
pop
and
add
leave
or
mov
and
and
cmp
outsb
and
xchg
rol
shrl
or
sub
xor
pop
adc
xchg
ret
inc
xor
cmpb
or
rorb
dec
mov
add
cmp
nop
mov
push
mov
stos
adc
addb
insb
fsubrl
sbb
add
inc
enter
xchg
insb
push
cli
add
mov
xchg
add
cmp
cmpsb
jp
and
cmpsl
jp
pop
ret
dec
test
andb
sbb
adc
cs
mov
fiadds
hlt
cmp
imul
lock
dec
and
cwtl
xor
adc
push
mov
cli
push
add
pop
mov
push
xor
mov
or
mov
push
xchg
adc
add
sub
bound
cmp
mov
jb
add
jo
orb
and
mov
rcll
inc
sub
ret
movsb
adc
cltd
add
loop
inc
sbb
in
shlb
pop
jae
and
nop
or
mov
jo
fcoms
push
sbb
xchg
add
mov
pop
and
xchg
mov
push
loop
add
mov
pop
xchg
pusha
lcall
xchg
lock
or
outsb
das
rol
adc
adcb
ret
loopne
mov
fcoml
inc
inc
inc
and
or
movsl
cmp
int3
movsl
push
int3
or
or
clc
fisubrs
nop
dec
add
lea
pusha
nop
int3
pop
adc
inc
decb
cltd
add
push
xor
push
ret
mov
mov
adc
xor
inc
sub
adc
pop
xchg
or
xchg
mov
and
pop
and
xor
adc
push
test
rcrb
test
pop
sub
mov
sarb
mov
and
cmp
adc
andl
sub
movsb
adc
nop
push
out
or
add
pop
mov
pushf
mov
shlb
pusha
add
xchg
pop
xor
adc
push
out
pop
push
sub
rorb
ret
mov
add
cli
cmpsb
or
inc
xchg
bound
and
fdivs
lcall
pop
into
adc
call
pushf
bound
and
mov
adc
in
xchg
repnz
cwtl
enter
lcall
decb
jo
or
xchg
pop
ficomps
les
xor
add
lcall
mov
and
dec
mov
cmp
popa
xchg
add
call
xchg
push
pusha
adc
jb
test
sbbb
sub
bound
push
xchg
pop
xchg
inc
ret
inc
push
adc
cmp
xor
ret
dec
test
and
out
or
push
out
jbe
and
or
xchg
pop
inc
mov
adc
cmpsb
push
mov
lret
push
mov
and
or
mov
test
orl
adc
fdivrs
add
push
or
mov
xor
or
and
sbb
in
and
or
add
sbbl
leave
mov
push
adc
xor
or
cwtl
pop
mov
sub
inc
sahf
push
incb
ficoml
xor
cli
push
or
mov
pushf
cmpsb
nop
sub
and
fmull
or
decb
insb
cmp
add
adc
push
aam
add
loope
lods
add
xchg
cmpsb
mov
mov
aam
jecxz
inc
and
mov
dec
ficompl
push
sub
stos
shrb
cmp
pop
stos
cmp
rclb
rorl
xchg
je
add
jb
outsb
test
cwtl
je
cmpl
adc
pcmpgtd
call
xor
dec
ds
int3
movsb
adc
jbe
push
xor
pop
rolb
jb
dec
or
sub
inc
pusha
fs
cli
adc
inc
xchg
cmp
cmp
dec
inc
loopne
rcl
inc
and
shrb
mov
shrb
add
pop
mov
clc
cmp
xchg
in
shll
hlt
mov
clc
sub
adc
xchg
stos
mov
jo
cmc
push
sub
and
push
inc
push
add
add
inc
add
or
data16
test
incl
sbb
dec
and
cmpsb
hlt
or
call
bound
ss
mov
lret
adc
test
ret
int
test
and
in
mov
add
mov
push
ret
aam
sub
shlb
popf
test
push
sbb
pusha
adc
insb
pop
outsb
ret
or
cld
push
inc
dec
push
pop
and
test
popf
jo
push
dec
xorb
add
clc
loop
xchg
add
enter
or
and
push
adc
and
and
rcrb
add
sbb
andb
add
inc
movsb
add
int3
xchg
add
push
addb
and
ljmp
sbbb
dec
and
es
add
push
sbb
incb
test
inc
inc
sarl
es
fidivs
dec
test
dec
sub
mov
or
or
imul
mov
int3
mov
push
ret
lcall
and
pop
int3
loopne
or
lret
stos
pop
dec
dec
add
stos
cmp
shl
or
xor
add
add
push
sbb
lock
stos
xchg
dec
out
rcrb
sub
adc
xchg
int3
mov
push
mov
push
shlb
sub
test
inc
sbbl
adcl
inc
dec
pusha
add
add
cwtl
add
sbb
jne
out
pop
or
or
test
mov
adc
test
push
jp
mov
xor
fs
rorl
xor
push
xchg
sbb
xchg
xor
and
loopne
sub
or
dec
scas
xchg
pop
push
mov
or
sub
inc
int
and
test
push
test
sbb
push
fimull
test
adcb
outsb
cmp
xchg
push
pusha
movsl
inc
mov
or
add
adc
and
xorb
fsubrp
and
cwtl
xor
inc
mov
ds
cmpsb
adc
add
inc
add
inc
and
lods
pop
mov
push
cmp
outsb
aam
mov
into
test
adc
testb
dec
inc
call
insb
or
push
inc
scas
push
dec
sbb
lods
inc
xchg
in
add
rcrb
inc
adc
add
mov
fwait
mov
mov
cwtl
jo
out
enter
sub
xor
jo
xor
xor
scas
sub
add
mov
dec
inc
mov
push
test
jle
test
inc
sbbb
pop
or
or
push
insb
test
push
dec
dec
inc
in
mov
ret
push
bound
lock
clc
push
sbb
push
mov
add
push
mov
add
movsb
xchg
push
or
mov
sbb
inc
test
sub
dec
inc
cmp
inc
and
out
out
inc
push
ret
sub
and
lea
adcl
add
add
cltd
add
adc
sbb
sub
xor
mov
into
test
and
push
add
sub
mov
adc
nop
dec
enter
mov
push
xchg
and
test
sub
jo
xchg
adc
or
sahf
xor
inc
adc
dec
sahf
sbb
adcl
jbe
sub
and
fdivr
add
shrb
xor
data16
test
cli
cli
movsb
js
mov
jo
rcrb
inc
jo
insb
sbb
subb
or
sub
sbb
hlt
and
sbb
sahf
cwtl
cli
aam
popl
push
popa
push
inc
outsb
es
test
jbe
add
in
or
dec
nop
jo
es
xchg
loopne
mov
mov
add
push
cmpl
or
add
add
sub
fidivs
add
or
clc
pop
jb
add
add
inc
adc
xor
movsl
test
sub
sub
mov
roll
lret
pop
xchg
or
cld
xor
inc
jne
and
call
sub
ljmp
scas
dec
pusha
bound
lods
dec
clc
mov
shlb
push
movsl
je
js
mov
adc
push
push
adc
dec
cmpsb
fadd
lcall
sbb
or
xor
or
test
rcl
mulb
add
and
dec
dec
mov
andb
add
inc
repnz
lock
xor
rorb
lods
and
pop
push
inc
cs
test
icebp
fs
push
inc
cmp
lods
add
xor
js
fs
popa
cwtl
inc
cmpb
loopne
and
cmp
jb
test
xor
xorb
sub
xchg
in
mov
addl
adcb
shlb
faddl
mov
mov
adc
and
orl
add
sub
mov
addb
xor
jb
mov
cltd
xorb
bound
fs
fmull
js
sbb
push
sub
xchg
xchg
sbbb
jb
jp
mov
data16
adc
inc
and
inc
push
daa
in
js
ss
andb
inc
push
push
add
cwtl
jp
or
lret
adc
xchg
push
orb
xor
adc
dec
orb
scas
and
hlt
pusha
inc
add
add
xor
sbb
test
push
push
push
inc
cwtl
in
lcall
inc
mov
cs
or
adc
dec
dec
inc
rorb
xor
rol
adc
mov
aam
dec
cs
add
sbb
mov
aam
out
rolb
or
divb
pusha
sbb
adcl
inc
sbb
mov
js
adc
sahf
jb
push
add
xchg
pop
out
cmp
or
nop
cmp
jb
push
xor
add
or
or
movsb
add
push
xor
inc
push
or
or
test
cld
xchg
cmp
testb
cmp
inc
xchg
cmp
jg
dec
sub
outsl
mov
xchg
add
mov
ret
out
jg
add
inc
rcrl
cwtl
xor
mov
cmp
add
add
add
xor
mov
je
ja
out
inc
add
add
push
inc
adc
ret
ljmp
aad
sub
icebp
add
inc
cmp
cld
pushl
jno
add
add
cmc
movb
imul
xchg
stos
lret
rcrl
sub
push
mov
push
dec
out
in
lock
cltd
add
or
icebp
repnz
std
ljmp
cmove
roll
out
out
add
mov
rclb
cmp
cmp
and
jg
arpl
add
js
push
das
mov
push
fwait
xor
pop
add
cmp
gs
ret
daa
faddl
and
stos
in
mov
sbb
addr16
add
adc
sub
mov
das
nop
jle
leave
or
and
jecxz
lock
push
add
pushl
pop
pusha
cmp
add
mov
mov
lock
arpl
mov
fsubl
or
ja
insb
add
fidivs
mov
jg
lahf
pop
jo
insb
add
hlt
add
and
lods
dec
add
pop
pop
add
jle
xor
mov
add
call
jmp
sub
add
adc
and
sar
aas
jp
push
add
test
mov
in
pop
cmp
fwait
sbb
loope
outsl
pushl
sub
sub
cld
call
mov
add
lods
jle
cmpsb
mov
hlt
in
orb
inc
sub
mov
fwait
mov
jle
push
mov
out
loop
clc
push
mov
sub
cmpsb
outsb
xchg
out
pusha
xor
add
dec
xor
bound
xchg
mov
add
and
add
sahf
push
lahf
add
sub
fcomps
cli
or
test
add
xor
cmp
xchg
pop
jb
sti
add
ret
decl
fists
add
pop
mov
loopne
decl
ljmp
and
int3
and
ret
sub
dec
bound
and
push
cld
cltd
mov
sbb
cli
std
add
int3
ja
mov
xchg
aas
rcl
dec
cmp
pop
xchg
hlt
mov
add
push
mov
sbb
stos
ss
ja
js
pop
sbb
sbb
sbbl
je
add
cmpsb
addb
stc
lods
adc
pop
lock
lret
add
into
fldl
aad
sub
inc
decl
or
fcomps
inc
jmp
sub
jle
mov
stc
adc
cli
aaa
sbb
inc
xchg
mov
mov
test
rcll
ljmp
es
xlat
mov
scas
and
add
add
mov
cmp
mov
decl
ss
test
add
add
dec
mov
dec
aaa
fdivr
dec
pop
pop
add
or
adc
xchg
mov
outsl
aad
repnz
test
adc
je
mov
or
test
mov
cmp
je
mov
aad
jl
and
es
mov
incl
mov
sub
insb
out
sqrtps
ljmp
push
andl
xchg
fsubrl
fisttpl
inc
rcrb
cli
xchg
sub
pop
scas
cmp
les
cmpb
imulb
cmc
mov
cmpsl
inc
mov
mov
push
mov
mov
jo
cmp
mov
cmpb
sbb
mov
mov
xchg
movsl
pusha
add
add
fildll
stos
out
pop
inc
arpl
inc
cmp
ficoms
xchg
pop
mov
cmpb
rclb
jmp
pop
sbb
ljmp
pop
lret
xchg
ss
hlt
or
pop
or
xchg
push
imul
ljmp
xchg
pop
stos
cmp
xchg
add
xlat
incl
clc
cmc
test
mov
xchg
shr
loope
scas
push
rol
pop
js
cmp
pop
mov
fs
adc
hlt
rcr
push
insl
xchg
outsl
shlb
testl
xor
sbb
push
sti
enter
mov
and
or
fbstp
inc
and
xchg
scas
popf
jle
mov
inc
sbb
shrl
stos
out
adc
outsb
ret
imulb
adc
pushf
or
xchg
jns
arpl
add
outsb
mov
gs
add
pop
cmp
aam
add
mov
or
dec
insb
mov
pop
and
sarl
push
sti
ret
dec
js
dec
fidivl
sti
sub
movb
insl
pushl
shlb
push
push
push
loope
xchg
adc
xchg
nop
inc
ja
outsl
jg
fcomps
inc
sbb
adc
sti
jae
cmp
packsswb
inc
rcll
xor
inc
cli
jle
in
shr
aas
out
js
int3
nop
mov
cli
rclb
xchg
and
mov
daa
or
nop
push
or
sbb
jmp
out
sbb
sub
and
stos
pop
sub
incb
fwait
mov
adc
inc
push
or
mov
mov
sbb
dec
or
and
mov
sbb
pop
lock
lahf
stos
loop
lock
push
mov
or
or
pop
jg
aas
enter
dec
xchg
sbb
push
out
cli
dec
mov
jbe
mov
fsts
cmc
push
int3
fs
mov
and
cld
jge
dec
sbb
test
test
in
int
or
test
xor
adc
icebp
inc
pusha
aaa
mov
in
ljmp
out
mov
sbb
xor
jnp
inc
add
pushl
xchg
outsb
push
mov
dec
dec
dec
pop
sub
jb
push
jbe
ljmp
jnp
pop
mov
or
mov
xchg
ds
or
xchg
jo
dec
in
es
or
movsb
out
cmp
lds
jg
pop
popf
sub
pop
sub
test
jmp
aaa
xor
push
pop
cld
add
shlb
add
test
jg
add
jp
add
and
pushf
or
lahf
hlt
in
lret
jne
jp
mov
mov
inc
pusha
in
jo
mov
sbb
loopne
cmp
insl
and
lcall
movsl
in
cmp
vmwrite
push
mov
popf
add
aas
push
andb
in
popa
jle
fsubs
jmp
sahf
ds
aaa
mov
test
gs
xchg
lds
push
xchg
iret
clc
in
push
cmp
pop
adcb
lret
xchg
sbb
in
lret
int
in
std
add
dec
add
mov
pop
inc
in
cmpsb
sbb
sarb
sbb
movsb
hlt
andb
daa
add
or
or
jae
into
jp
mov
xlat
xor
fwait
inc
xchg
lahf
nop
sahf
lds
decl
jo
add
es
fildl
xchg
loop
leave
cmp
mov
out
lods
outsb
inc
subl
pop
push
fidivs
mov
fucomi
jmp
cli
cld
sbb
mov
sti
data16
lcall
dec
mov
jg
sbbb
and
jecxz
insb
fcomip
es
subb
ficomps
sti
mov
xor
js
push
cmc
sbb
dec
je
icebp
jo
fwait
mov
lcall
pop
call
dec
or
jle
cmpsl
loopne
decl
xor
mov
or
pusha
mov
mov
jmp
and
sarb
jmp
or
jge
test
push
jg
mov
dec
sub
out
lock
sbb
int3
jg
jp
xchg
add
mov
sbb
and
mov
test
inc
nop
test
cmpsl
add
jbe
jecxz
test
jecxz
cmovo
jnp
xchg
in
pop
jp
mov
mov
cmpsl
pop
call
sbb
dec
cld
add
scas
cmp
repnz
and
cmp
add
mov
call
sub
stc
cmp
out
rcrb
jle
mov
adc
jmp
sub
orb
add
cmp
xor
pushf
mov
mov
xchg
mov
jo
add
xor
clc
and
adc
rcl
ret
dec
or
mov
jp
ret
mov
test
js
or
mov
mov
mov
pop
push
popa
add
inc
jle
sahf
mov
int
rcrl
sub
xor
sbb
xchg
xchg
pop
cli
testb
mov
xchg
insl
inc
fmull
push
mov
roll
aas
js
xchg
int3
mov
and
inc
pop
cs
sti
loop
mov
sub
pop
out
mov
xchg
add
add
pushl
mov
inc
lods
push
lds
add
push
into
pop
jne
dec
les
mov
std
adc
clc
testb
bound
loop
mov
sub
push
in
and
shr
sbb
dec
js
popa
add
icebp
or
rcrb
scas
or
pop
fwait
push
add
xchg
fcoml
push
insb
in
and
adc
push
mov
out
mov
xor
sub
cld
shlb
lcall
dec
in
mov
aam
out
jb
test
or
int3
lods
add
ficomps
sub
sub
and
ljmp
or
ja
arpl
xor
aad
bound
subb
sbb
loopne
incb
sub
cvttpd2dq
cmp
add
and
repz
dec
or
movsb
pop
fwait
jmp
jne
sub
jb
stc
mov
das
clc
imulb
pop
js
or
fbstp
mov
repnz
mov
pop
jae
inc
dec
dec
sbb
jl
and
xlat
scas
test
xchg
lock
aad
iret
cs
adc
add
sti
and
fdivs
xorb
lods
inc
sahf
jge
mov
js
inc
in
xlat
xchg
clc
call
sarb
pop
in
nop
cmp
popa
das
stos
xor
jmp
bound
add
mov
mov
jecxz
mov
daa
mov
lea
xchg
icebp
imul
test
pop
test
push
test
push
xchg
cld
js
testb
mov
in
xchg
lds
or
mov
popa
push
jmp
xor
testb
rol
xor
jae
mov
mov
test
dec
sub
int
mov
cmpsb
xchg
mov
pop
jne
ds
cmp
or
mov
sub
mov
or
dec
lds
fsubrs
popl
pop
sbb
dec
and
clc
in
int
loopne
add
popa
or
sub
out
sarb
sub
outsl
popf
mov
and
dec
sub
pusha
xchg
divb
push
xorl
push
jle
arpl
sbb
inc
sbb
rclb
push
test
fcomps
jae
xlat
and
mov
decl
repz
daa
and
insl
inc
or
and
cmpl
push
sub
inc
mov
sahf
mov
and
out
fbstp
xchg
mov
aas
stos
lahf
es
push
scas
add
and
add
pop
idivb
mov
mov
and
out
shl
sbbb
dec
add
inc
add
pop
pop
cwtl
clc
jmp
xchg
nop
cmp
mov
and
cmpsb
pop
jne
loope
leave
xor
addr16
arpl
or
int
xor
push
je
std
ja
fiadds
int3
enter
lret
push
cmp
or
mov
shl
push
in
cmp
mov
fsubl
jne
sarl
mov
dec
jp
inc
fstl
out
clc
push
mov
mov
xchg
jnp
js
dec
sub
jl
sbb
ret
cltd
fs
sbb
lds
fisubs
jl
out
fmull
in
push
mov
orl
xor
shrb
mov
pop
dec
pop
aaa
pusha
push
lods
add
pop
ficoml
out
mov
leave
add
fbstp
cmp
mov
outsl
cmc
out
or
lcall
cmp
int3
fiaddl
sar
clc
pop
fwait
imul
pop
sbb
mov
incl
inc
insb
in
xorb
ljmp
xchg
mov
push
test
sub
mov
mov
pop
mov
ret
and
subb
icebp
pop
mov
mov
movsl
shr
cli
pop
sbb
andb
fwait
dec
fbstp
jecxz
pushl
inc
fldcw
or
movsb
pop
add
xor
sub
jg
lds
hlt
cwtl
insl
sbb
ljmp
js
sahf
mov
pushf
jne
js
xchg
lcall
adc
stos
add
xchg
mov
and
add
loopne
ret
jno
pusha
subb
jmp
mov
cs
inc
or
pop
fsub
mov
and
add
push
mov
push
mov
je
adc
mov
adc
cs
xor
mov
out
inc
test
cs
cli
mov
in
push
cmp
xchg
push
test
out
push
sub
dec
cld
icebp
add
push
sub
adc
fimuls
stc
cmpsl
push
mov
ljmp
mov
sbb
or
jecxz
das
js
inc
and
loopne
and
cmp
push
or
jnp
dec
sub
mov
xchg
data16
push
out
insb
scas
std
pop
add
pop
enter
xadd
std
and
adc
push
xchg
inc
movsl
push
data16
jge
jl
enter
dec
in
icebp
out
xorl
mov
ljmp
rcrl
cmp
test
xorl
push
push
fisubl
jl
mov
fsubrl
cltd
sub
andb
in
in
rcrb
or
xor
fs
jle
mov
jns
int3
jmp
mov
fisubl
jecxz
mov
loopne
je
sub
sub
shl
jne
xchg
sbb
jge
orl
nop
push
mov
push
mov
outsb
ss
cltd
sbb
repnz
fucomip
pop
popa
neg
push
popa
pop
cmp
adc
push
mov
inc
testl
dec
and
popa
or
sbb
sahf
or
adc
mov
push
push
or
test
ud0
out
mov
lret
sub
scas
dec
daa
jg
xchg
decb
movb
sarl
es
mov
rolb
jmp
add
daa
sub
dec
mov
je
sub
adc
push
je
push
pop
pop
iret
or
cli
cmp
or
cltd
push
in
repnz
jbe
loop
mov
sub
sbb
add
dec
jmp
push
inc
xor
data16
les
decb
mov
jg
test
js
xchg
lds
jns
repz
mov
mov
aas
sub
aaa
outsb
cmpsw
sbb
aaa
leave
ret
mov
sub
add
mov
jbe
arpl
fcmovnb
fsubrs
jno
outsb
push
fwait
imul
add
jp
add
dec
arpl
pushf
adc
xor
outsb
adc
inc
dec
add
fisttps
rorl
insl
lcall
mov
test
inc
xor
fcmovu
push
jo
stos
push
xor
push
push
lods
add
inc
push
pop
cmc
push
pop
clc
pushl
push
mov
push
mov
clc
incl
jb
add
pop
mov
add
pop
jo
dec
bound
gs
dec
insl
dec
js
mov
enter
add
arpl
push
dec
push
mov
pushf
or
sub
cld
add
xor
ret
add
mov
mov
movl
add
push
je
cmp
adc
push
mov
insl
xor
adc
pop
icebp
mov
aaa
add
cli
add
jno
aaa
cltd
adc
sub
jge
jl
xor
outsl
mov
lods
mov
push
dec
and
repnz
aas
sti
jmp
add
stos
mov
sahf
in
push
jmp
push
out
sub
inc
dec
mov
xchg
inc
clc
negl
push
pop
pop
pushf
pop
cs
push
adc
pusha
inc
jecxz
ret
xlat
ljmp
stos
cmp
add
cmp
ds
int
dec
xchg
cld
push
xlat
jae
add
int3
cmp
out
add
dec
jp
mov
sub
cmp
mov
decb
pop
lock
jg
pushf
stc
lods
cmp
fs
pop
adc
xchg
and
pop
push
or
push
jne
lret
imul
sub
dec
mov
sbb
nop
idivb
jg
in
imul
jg
pcmpeqb
or
movsb
ret
inc
ss
add
mov
arpl
sti
mov
cmp
xchg
repz
lret
or
jge
sub
or
outsl
inc
mov
into
movsb
fdivs
inc
push
test
xchg
hlt
mov
mov
jp
adc
lea
pop
ds
int3
cmp
push
out
push
dec
subb
push
repz
mov
or
add
mov
test
sub
insb
push
jns
pop
add
mov
push
lods
mov
movsb
mov
sub
add
faddl
out
aam
out
sbb
sub
bound
inc
push
jle
dec
ljmp
enter
or
ljmp
das
sti
push
sub
pop
xchg
add
cwtl
movsb
sarl
sbb
sbb
lea
push
cmpb
movsb
pushf
loop
lods
mov
sbb
fiadds
sub
cmp
insl
sub
pop
push
add
popf
mov
psubb
lock
add
add
sub
jno
push
test
fsubrs
dec
sub
addr16
cltd
jb
fisttpll
fisubl
mov
int3
out
sub
cli
mov
add
aaa
imul
sbb
filds
cli
push
test
inc
cld
lods
repnz
or
ljmp
cmc
push
cs
sbb
jno
test
add
das
clc
or
and
adc
xor
mov
push
in
out
pusha
sbb
out
xorb
in
test
in
insl
mul
xchg
pop
adc
add
mov
or
out
repnz
inc
or
movsb
ja
or
add
incl
push
hlt
je
scas
repnz
xor
aas
enter
push
icebp
jbe
jo
repz
jecxz
jo
and
dec
cmp
cld
mov
sbb
add
cmp
push
bound
das
js
mulb
xchg
and
inc
daa
push
jle,pt
add
repz
inc
and
idiv
and
addr16
pushf
add
rorb
cmp
mov
sbb
or
jb
pop
clc
jg
ret
adc
sbb
cmc
push
cmp
adc
mov
mov
test
dec
pop
mov
scas
add
mov
mov
cmc
pop
leave
xlat
fmuls
enter
in
pushl
sub
xor
addb
insb
or
push
hlt
das
shrb
and
imul
sbb
inc
or
movsb
adc
adc
scas
js
add
cmp
xchg
mov
stos
mov
push
add
inc
inc
aam
and
sbb
xchg
orl
mov
add
or
aad
popf
inc
or
es
mul
dec
insl
cmp
xchg
mov
dec
mov
mov
shl
nop
dec
clc
xor
push
mov
inc
sbb
pop
loopne
push
out
push
pusha
lret
in
dec
jnp
sub
iret
and
inc
sbbb
int
lahf
cwtl
test
pushf
out
mov
dec
add
inc
xchg
fisttpll
pop
inc
fidivl
fs
pop
dec
fdivr
mov
and
das
inc
test
add
push
movsb
push
rclb
cltd
jecxz
lcall
jge
sbbb
or
push
ja
adc
sub
out
gs
mov
mov
push
loopne
mov
ret
jecxz
cld
rolb
jbe
es
cmp
sub
jae
and
cmpb
ja
push
decl
add
adc
pop
sbb
adc
jmp
pxor
sbb
and
ss
mov
mov
cld
lock
sub
xor
fwait
xchg
add
jg
jo
pop
cmp
pop
decl
sbb
mov
js
cld
sub
add
adc
push
sbb
icebp
pop
int3
jo
push
fsubrs
inc
cld
adcb
adc
fdivrp
cmp
incl
jne
jge
test
test
aam
pop
loope
cmovg
orb
dec
aad
or
xor
push
cmpsb
xlat
inc
js
mov
loopne
mov
fcoms
lahf
stos
popa
sbb
cmp
iret
out
adc
rcr
test
or
andb
push
jl
pushf
and
mov
das
push
cli
je
cmpsl
inc
xchg
add
dec
pop
jnp
jmp
cmpb
or
mov
bound
cmpl
xor
and
jle
lds
hlt
lods
dec
dec
cmpsl
sub
test
inc
mov
testb
orb
jo
mov
or
cmpsb
xor
imul
ficoml
adc
arpl
fwait
jp
sti
lcall
cwtl
mov
hlt
stos
mov
fs
aas
xchg
or
inc
insl
out
or
push
sar
scas
aam
cmp
js
bound
and
mov
pop
cmpb
icebp
sub
clc
frstor
fstl
loope
aas
jo
lods
pop
test
int
shll
push
push
adc
xor
mov
xchg
dec
mov
rclb
hlt
and
push
jl
xor
push
inc
jmp
lock
loopne
aaa
push
int3
pop
mov
lock
add
xor
lret
pusha
cli
call
dec
xor
pminsw
inc
cld
jmp
and
jns
mov
adc
cli
add
add
js
pop
movsl
fildll
add
and
sti
push
mov
in
mov
mov
cmp
das
mov
add
inc
inc
insl
dec
jb
cld
inc
pop
shrb
or
lds
test
in
les
cwtl
sub
mov
push
mov
shrb
add
out
nop
dec
test
fs
sub
push
mov
sub
in
dec
jne
adc
jmp
jb
outsl
clc
adc
mov
ret
lahf
scas
jne
mov
add
cmpsl
movsl
hlt
mov
add
cs
cmpl
je
sbb
decl
pusha
bound
dec
adc
call
mov
mov
test
and
cmp
and
dec
or
dec
push
ja
inc
icebp
inc
pop
iret
outsb
add
lock
int
int
daa
jo
bound
aad
mov
xchg
sbb
mov
pop
lock
add
add
pusha
lahf
in
in
add
mov
in
loop
pop
insb
mov
adc
ds
int
fidivl
int3
pushl
xor
fiaddl
add
ja
jno
push
pop
add
call
add
cld
pop
jecxz
mov
and
das
push
inc
add
add
mov
cli
add
mov
dec
mov
leave
ret
inc
add
scas
out
imul
add
mov
xchg
pop
insl
imul
shlb
add
add
inc
cmp
pushl
adc
dec
clc
je
push
ss
inc
xchg
cmp
pop
les
or
out
fstl
idivb
push
adc
call
rclb
insl
iret
push
loopne
add
dec
jbe
xor
inc
dec
fsubs
xor
movsb
mov
mov
out
inc
dec
mov
dec
push
dec
push
ss
fdivrp
loopne
dec
dec
add
inc
jno
push
add
je
push
dec
gs
addr16
movsb
dec
cmpsb
mov
dec
lods
jbe
idiv
inc
dec
cs
push
addr16
mov
lea
push
int
jbe
in
push
lock
out
push
stos
xor
dec
imul
inc
dec
lods
cmpb
push
imul
xchg
push
clc
xor
les
fsubrs
or
sub
sub
mov
mov
in
xchg
aam
inc
sbb
popa
mov
out
or
jns
inc
jb
jo
inc
xor
jo
cmp
cmp
push
mov
fs
add
and
mov
push
out
outsb
jno
out
adc
dec
add
fidivs
and
add
in
div
cld
sub
xorl
mov
dec
js
int
pop
adcb
inc
je
push
inc
xchg
ja
std
lahf
fcompl
lret
adc
int3
lret
and
push
call
xchg
call
loopne
or
xor
adc
test
dec
dec
out
pop
pop
pop
ja
cli
sub
inc
daa
push
dec
inc
shll
ja
call
nop
mov
push
cli
or
jbe
adc
test
ja
jmp
add
int3
sti
mov
and
paddb
aas
ljmp
adc
and
pushf
out
cmp
mov
cld
stos
pushl
ret
inc
sbb
push
lret
sbb
loop
mov
push
ret
lret
paddb
movsl
mov
and
lcall
and
add
mov
ss
cmp
in
add
push
push
out
lcall
mov
jl
xchg
push
adc
in
icebp
cs
mov
icebp
push
imul
cmpb
push
sbb
mov
or
inc
inc
xchg
sub
subb
scas
gs
and
push
sbb
scas
lahf
mov
lock
push
fadds
test
dec
out
jnp
mov
pop
cwtl
in
loope
mov
lock
pop
mov
incl
push
xchg
je
aaa
jbe
add
es
cmpsb
fildll
fiaddl
mov
jg
sahf
fldenv
lcall
mov
enter
ljmp
stc
and
fcomip
sub
or
sbb
bnd
pop
mov
lds
and
into
mov
and
pop
pop
jae
in
jg
pop
add
mov
aam
icebp
rol
mov
incl
sti
incb
xor
cli
add
inc
mov
pop
rorb
cmpsb
in
aas
add
push
push
pop
ljmp
inc
sahf
icebp
lahf
cli
mov
jge
pop
add
daa
mov
fcoml
icebp
inc
je
fs
ss
fwait
enter
adc
cltd
xchg
jno
xor
fs
dec
adc
vpminsw
cmp
cmp
add
test
pop
stos
mov
imul
pop
and
pushf
mov
lds
gs
or
jg
decl
mov
add
test
mov
mov
in
mov
add
test
add
mov
dec
mov
or
push
addb
cmp
adc
test
pop
or
pop
sub
lahf
call
clc
or
fdivp
sbb
aas
adc
mov
jb
adc
scas
lock
mov
ret
inc
mov
mov
test
xlat
loop
inc
push
fisubs
movsb
push
jmp
stos
scas
adc
sub
xchg
add
std
movsb
push
mov
pop
icebp
dec
mov
mov
sub
lods
outsl
sbbl
or
sbb
aad
cli
jle
adc
sub
sub
dec
sub
stc
out
add
or
icebp
aam
add
test
bound
jmp
lcall
rolb
dec
insl
aas
clc
lods
lcall
xor
mov
jp
out
aas
test
pop
cmp
xor
rol
and
dec
lds
pop
decl
mov
mov
inc
out
jb
jl
mov
inc
and
push
push
jne
dec
push
lds
into
push
movsb
add
fcoml
sbb
std
decl
adc
idivl
mov
std
popa
loopne
out
shrb
loopne
inc
cmpsb
pop
std
sti
fildl
or
pop
in
ja
add
add
pop
mov
add
enter
pop
icebp
rcrl
dec
fidivs
out
out
call
xchg
scas
add
mov
jns
outsb
ds
jb
scas
jmp
jg
mov
dec
xor
xorl
mov
out
inc
testb
aaa
pop
xorb
mov
push
shl
or
and
or
repz
sti
xchg
push
cli
aas
pushf
movsb
aaa
sbb
mov
mov
iret
hlt
mov
shrb
addr16
mov
into
ljmp
call
mov
fwait
rcrb
mov
stos
mov
dec
sub
addb
mov
mov
outsb
xor
imul
rorl
in
or
shl
mov
and
xorb
pop
mov
sub
or
stos
mov
pop
mov
jae
jb
cmp
imul
add
imull
std
dec
cwtl
sbb
push
sbb
cld
dec
mov
loop
addr16
mov
cmpb
pop
dec
iret
add
movsl
jg
icebp
inc
add
cmp
cmp
addl
testl
roll
lock
and
xchg
adc
jae
mov
cwtl
out
add
sbb
out
daa
nop
fsubrp
adc
loop
cli
roll
xor
cwtl
dec
popf
sbb
xchg
xchg
sbb
into
push
icebp
jp
test
mov
cmpsl
jg
rorb
pusha
imul
out
loop
sub
fbld
mov
push
add
shll
test
sbbl
lods
jge
push
dec
enter
addb
inc
nop
out
bound
dec
add
adc
inc
int3
ror
xor
inc
cmp
and
mov
ja
push
or
das
aam
pop
ss
test
jecxz
cmp
or
sarb
enter
inc
aaa
ljmp
scas
mov
test
aaa
addl
pop
ret
jp
in
dec
pop
dec
clc
iret
add
cltd
cmpsl
add
add
stos
dec
lret
adc
data16
test
mov
lock
pop
xchg
orl
shll
add
rcrl
loope
subb
divb
pop
jne
arpl
loopne
sub
push
jns
xor
outsl
push
pop
add
cwtl
dec
cmp
fistpll
mov
scas
int
add
in
inc
or
clc
nop
ds
mov
clc
adc
hlt
sub
std
mov
outsb
orb
data16
xchg
pop
add
mov
jl
jbe
inc
ja
sub
jl
jns
test
inc
test
cmp
sbb
push
fs
pop
enter
push
add
das
rcrb
inc
add
fiaddl
aam
cwtl
lds
mov
out
pop
fistpll
sbb
fadds
fwait
and
dec
cmc
sub
in
pop
push
inc
xor
outsl
clc
jg
cmp
sbb
add
add
icebp
pusha
ret
mov
add
mov
filds
sahf
pop
rolb
push
incb
sahf
add
scas
into
xor
rcl
ret
pop
lods
data16
clc
je
stos
fisubrl
pusha
adc
stos
pop
dec
dec
sbb
mov
sub
es
xor
scas
push
loopne
xchg
inc
lods
add
stos
pop
pop
xor
pop
lea
or
int
and
es
push
clc
aad
das
mov
out
add
inc
mov
test
inc
mov
mov
ja
aas
rcr
and
adc
push
test
adc
xor
mov
aas
adc
roll
fcomps
testb
adc
jmp
jne
push
dec
call
adc
push
sbb
mov
inc
add
add
inc
cld
jg
in
add
add
inc
sub
add
jg
inc
dec
pop
pop
jno
inc
addr16
mov
bound
or
inc
imul
je
pop
mov
inc
jo
add
jns
push
jo
mov
dec
inc
ds
mov
push
clc
jbe
inc
inc
push
faddl
mov
not
add
or
mov
loope
scas
decb
loop
or
inc
fs
int3
les
ds
roll
xor
mov
push
and
or
pop
mov
cmpsl
mov
or
fldenv
jecxz
aam
lds
movl
jo
xor
mov
mov
in
push
icebp
gs
mov
int3
mov
mov
push
dec
out
and
or
mov
out
or
ljmp
dec
mov
mov
adc
leave
mov
fbld
call
inc
jmp
shll
cli
mov
in
sbb
or
mov
nop
cwtl
ss
mov
outsl
or
ja
or
or
subb
fs
inc
adc
xchg
js
mov
mov
mov
push
adc
insb
push
sub
pushf
add
or
int
add
ret
and
xchg
xchg
mov
lods
ds
call
incl
push
push
xchg
mov
push
xor
and
sub
pop
pop
jmp
out
lret
fprem
je
sbb
mov
jbe
out
std
cmp
jecxz
test
jnp
lods
xchg
push
jno
sub
pop
add
xchg
js
insb
popa
cmp
aam
push
aas
fwait
push
pop
icebp
add
fsubr
push
jmp
pop
xor
jo
lahf
sub
and
sahf
fcomps
pop
inc
in
cli
loop
add
cmp
out
adc
inc
pop
inc
clc
mov
outsl
xor
pop
push
call
subb
in
in
add
fwait
jg
xchg
jb
pop
daa
fnstsw
bound
sub
call
cmp
pop
lahf
mov
int
je
mov
addr16
push
inc
jmp
and
fcomi
sahf
xor
and
pushf
cmpsb
sbbl
or
jge
or
push
inc
mov
jne
adc
scas
rorb
insl
cld
mov
mov
out
pop
lock
outsb
and
dec
leave
sbb
repz
sub
incb
les
xor
xchg
inc
mov
cmp
mov
dec
mov
jb
iret
je
je,pn
pop
rcl
lret
enter
pop
xchg
std
inc
mov
xor
adc
add
fcomps
lret
les
cmpsl
stos
adc
ss
pop
push
pop
dec
jg
mov
dec
push
fiaddl
pop
ret
fcom
push
sbb
xchg
or
jmp
cmp
je
les
xchg
or
add
ja
stos
push
inc
cmpsb
sbb
lret
or
ret
aaa
mov
mov
dec
adc
sbb
ret
push
sbb
push
imul
adc
or
or
push
in
aaa
mov
mov
add
push
push
and
add
sbb
and
es
loop
cli
inc
sub
mov
sbb
fiadds
or
cmp
dec
stos
push
push
test
sar
mov
test
xor
lock
data16
outsb
shl
outsb
mov
bound
loopne
das
pop
and
jmp
lahf
gs
mov
aad
pusha
popa
jnp
pop
ret
dec
aad
mov
ds
loopne
push
mov
cli
or
mov
jmp
sbb
nop
xchg
jns
ja
ja
rcrb
hlt
out
subb
sbb
loopne
rcrl
and
mov
jb
rcl
adc
mov
cmpsb
decl
pop
xor
add
les
adc
inc
fstp
mov
cmp
pop
xchg
pop
mov
mov
add
orb
push
clc
xchg
cs
sub
inc
mov
or
add
xor
loopne
dec
mov
outsb
leave
aas
adc
adc
push
enter
dec
mov
addr16
xchg
outsb
fsub
pop
inc
and
adcl
add
sarl
jg
test
enter
and
jmp
xchg
add
lea
insb
push
bound
add
inc
push
xchg
fwait
or
sbb
gs
xchg
inc
insl
call
pop
jmp
inc
inc
sbb
mov
push
into
mov
pop
ljmp
ds
push
shrl
je
or
daa
add
jmp
jo
mov
in
jno
insl
xchg
leave
rcr
mov
jg
push
mov
add
sub
mov
mov
mov
push
mov
sbb
push
cmc
ss
push
mov
jns
js
das
rorb
fs
pop
mov
test
popl
lcall
mov
sub
xor
adc
dec
add
cmpsb
xchg
sub
xchg
xor
or
mov
mov
sub
pop
gs
pop
xchg
mov
loop
idiv
inc
icebp
jg
sti
mov
fs
popf
popa
add
xchg
dec
or
js
add
lret
sbb
and
sub
cld
mov
aaa
inc
lods
sub
jae
add
mov
xchg
ss
cmpl
inc
into
xchg
mov
bound
mov
arpl
incl
in
mov
xor
mov
push
lahf
push
pop
inc
dec
mov
push
dec
aaa
pusha
sub
scas
mov
fdivs
popf
sub
outsl
jb
xlat
in
mov
xchg
jle
sbb
mov
sahf
push
popa
sahf
lea
outsl
fiaddl
push
fcoms
hlt
add
adc
rorl
sub
loopne
rcll
mov
add
jmp
cs
inc
rcl
jo
push
inc
mov
xchg
dec
mov
loope
and
orl
pop
daa
add
in
nopl
lcall
fstpt
loopne
add
pusha
out
xorb
pop
fsub
pop
lods
das
jg
pop
adc
push
pop
xlat
dec
test
inc
mov
mov
or
in
mov
mov
sbb
ljmp
shl
ss
mov
cld
inc
ret
mov
movsb
pop
sub
inc
xlat
outsl
jno
loop
cs
into
cmp
jns
inc
outsb
add
sub
dec
ds
adc
cld
loope
sbb
out
and
mov
sti
das
incb
les
adc
movl
int
and
add
es
clc
mov
cmpsb
cltd
clc
std
mov
sub
mov
xlat
dec
jbe
xchg
add
jg
lahf
iret
xchg
lods
dec
pop
lret
mov
dec
outsl
int3
xor
add
pop
push
cmp
cmpsl
faddp
dec
clc
ret
je
or
add
and
sahf
sub
pusha
or
dec
add
lret
aaa
sar
push
cmp
mov
or
aad
mov
je
or
gs
ret
mov
ja
pop
xor
int3
or
orl
test
ret
inc
out
in
push
loop
push
lock
sbb
cmp
hlt
push
hlt
rorb
loopne
imull
daa
adc
lahf
faddl
adc
pop
jmp
push
xchg
jo
jle
movsb
push
pop
arpl
inc
add
add
xchg
xor
in
xchg
in
clc
je
pop
cld
test
inc
push
or
shl
mov
xchg
in
sbb
dec
adc
xor
shrl
mov
stos
out
and
add
dec
inc
push
inc
idivl
sbb
push
inc
cmp
orb
into
and
push
jbe
jo
les
data16
inc
mov
push
roll
decl
cmpsb
push
mov
mov
inc
pushf
adc
push
mov
or
mov
outsb
cmp
jg
jb
sub
arpl
add
add
pop
loope
jg
out
loopne
shlb
fisttpl
adc
and
call
mov
cmpsb
lds
or
roll
daa
out
imul
push
jmp
mov
stos
ds
sub
xchg
out
mov
cs
cld
movsb
pop
in
dec
pop
xchg
xchg
ret
push
mov
xchg
cwtl
jae
in
dec
pushf
in
or
scas
aas
and
jb,pt
push
xchg
in
pop
and
push
pop
inc
je
pop
je
dec
xchg
hlt
jbe
push
mov
or
sub
les
cmp
push
add
fwait
mov
mov
pop
pop
or
je
bound
std
mov
loop
nop
cmp
jbe
push
push
hlt
mov
jne
out
or
sti
inc
enter
or
inc
mov
push
xchg
sub
negl
sub
sbb
push
dec
lret
xor
ljmp
mov
cmc
in
ja
js
add
or
adc
bnd
cmpsb
aas
inc
mov
sbb
mov
icebp
decl
pushf
loopne
cmpsb
imul
dec
add
or
add
sbb
inc
add
orl
ljmp
sahf
mov
dec
das
cmp
xchg
cmpb
and
mov
mov
test
iret
out
xchg
fucomp
movsb
stos
orb
sub
sub
das
cmp
add
or
adc
pop
rcrb
jmp
and
lds
aas
and
xor
inc
aas
pop
xor
pop
cmpsl
push
cmp
cs
dec
dec
adc
mov
mov
push
hlt
add
push
inc
out
adc
mov
aas
xchg
ret
and
fs
cld
incl
lock
xchg
ljmp
cmp
cmp
fbstp
inc
das
sbb
xchg
int
add
jl
add
xor
sub
push
xor
cmc
add
push
dec
hlt
nop
or
movd
jbe
and
shll
mov
jae
lock
jo
lods
xchg
or
roll
cmc
decl
pusha
data16
sub
cmpsl
push
es
cmp
pop
test
add
push
int3
push
push
and
push
call
cmp
jmp
out
cmp
sbb
xchg
sbb
addr16
sbbb
sub
ljmp
cmpsb
mov
cmpsb
mov
add
sbb
scas
stc
pop
or
dec
daa
jbe
or
clc
mov
add
enter
cmp
xor
pop
dec
pop
pop
js
fistl
iret
mov
lret
jg
test
inc
lock
out
lea
xor
cmpsl
push
pop
je
pusha
rdtsc
sbb
mov
dec
mov
push
sti
cs
add
rclb
jnp
inc
aad
jno
fdivrs
dec
add
jbe
jno
cli
push
mov
or
out
dec
mov
jge
cmp
inc
jne
or
push
cmp
pusha
mov
das
fdivr
add
lcall
into
mov
cmpl
nop
push
adc
push
push
sbb
rol
lods
mov
call
add
push
cmp
inc
xchg
mov
inc
fsts
push
rorb
inc
add
jp
test
push
les
call
dec
stos
sub
fs
leave
and
or
add
sub
stos
push
loopne
cltd
xchg
addb
in
jecxz
lods
lock
lds
mov
jle
sbb
dec
pop
ret
stos
cmp
or
xor
pop
cmp
int
out
xor
rorb
mov
cwtl
cmp
xchg
mov
gs
decl
dec
imul
insb
add
out
test
je
loopne
mov
mov
in
mov
cltd
add
lahf
clc
ds
mov
fidivl
mov
stos
cmp
adc
or
test
adc
and
aam
sbb
ficoml
add
pop
popa
xchg
jmp
dec
cmp
sarl
adc
hlt
pusha
mov
outsl
sub
jg
repz
sub
mov
push
daa
xor
dec
inc
pop
xor
mov
xchg
mov
add
out
push
addb
inc
cmp
jnp
repz
xor
lock
mov
xchg
clc
orl
inc
das
sub
add
aam
out
lret
dec
decl
test
cwtl
loopne
jb
and
scas
mov
hlt
incl
cmpl
mov
jg
fwait
mov
jb
cltd
cmp
mov
mulb
add
mov
bound
mov
mov
cmpsb
test
icebp
xchg
js
stos
clc
test
enter
cwtd
add
jmp
adc
das
xchg
sbb
inc
jne
xchg
add
jo
cmp
add
xor
push
mov
sbb
mov
or
mov
clc
ficomps
sbb
popa
jge
ret
mov
mov
mov
fcom
pop
jecxz
fiaddl
lret
sub
adc
mov
std
sub
push
xchg
ja
fidivrl
shl
add
icebp
add
xor
jecxz
ja
sbb
mov
data16
push
arpl
jne
pop
jmp
cmp
pushf
loop
jno
mov
fwait
subl
int3
test
cld
sbb
fldenv
scas
cld
stos
mov
lds
cwtl
ljmp
jno
xchg
sahf
mov
xor
inc
inc
decl
lea
xor
out
fdivr
add
shl
add
and
xchg
mov
rorb
cmp
dec
int3
in
push
movsb
and
fisttpl
lods
add
daa
loop
test
push
shrb
inc
jmp
mov
fwait
xchg
insl
cs
outsl
loopne
call
dec
add
adc
popa
inc
enter
incl
cmp
xor
pusha
fsubr
dec
inc
push
sbb
xchg
test
adc
and
cmp
out
rolb
cmp
add
lahf
add
js
or
jno
popa
clc
outsl
mov
loop
arpl
scas
dec
fmuls
xor
decl
je
cmp
xchg
pop
test
push
sub
push
fistpl
or
cli
or
in
insb
dec
add
dec
test
std
push
call
add
ds
in
hlt
hlt
idivb
bound
sub
fcmovnb
lods
leave
jne
arpl
pop
dec
loopne
mov
iret
cmc
testb
and
mov
push
jp
stos
out
mov
and
and
pop
xor
cmp
adc
stos
inc
mov
mov
xchg
std
out
dec
xor
and
cmpxchg
push
movd
push
je
repnz
outsl
dec
adc
mov
pop
test
fwait
pop
sub
dec
das
mov
jecxz
add
inc
pop
mov
pop
adc
pop
lods
mov
movsb
xchg
mov
and
xlat
pushl
ret
mov
enter
jecxz
or
testb
cmp
and
lret
cmp
sub
mov
notb
icebp
rcll
call
jmp
mov
inc
pop
jle
cli
fs
cltd
loope
shrb
sbb
orb
leave
cs
mov
movsb
dec
mov
adc
cmp
sbb
and
xchg
shll
mov
sub
mov
or
scas
xchg
in
popf
mov
pusha
flds
add
fimuls
adc
dec
sbb
or
and
dec
jae
outsl
call
jg
push
mov
xor
sahf
adc
xor
call
mov
pusha
xchg
sub
xchg
cmp
or
cs
test
cmpsb
mov
inc
inc
outsl
pop
adc
flds
enter
bound
rolb
adc
mov
ljmp
shl
sti
dec
icebp
xor
ss
inc
nop
inc
sub
dec
lock
jg
mov
or
dec
call
pop
sbb
inc
push
movsb
mov
inc
add
data16
out
ja
inc
pop
les
insb
inc
add
push
repnz
add
test
cmp
popl
or
pop
scas
add
outsb
mov
clc
mov
rorb
jp
rorl
incl
icebp
test
jno
loopne
push
jmp
sti
adc
jb
inc
push
loopne
mov
add
mov
xchg
les
pop
les
or
mov
arpl
outsl
push
inc
fbld
sub
test
sub
jbe
fiadds
push
jmp
xchg
les
inc
inc
fcomip
dec
adc
add
sub
lock
dec
rcr
inc
test
dec
es
or
imul
jg
xchg
cli
add
mov
add
xchg
loopne
cld
mov
inc
pop
loop
sti
mov
pop
std
call
push
cmc
call
aam
push
dec
cmp
repnz
hlt
push
dec
or
je
jnp
scas
ficoms
xor
lahf
adc
push
adc
sarl
movsb
addr16
and
dec
fwait
jb
adc
out
xchg
sub
add
cmp
jb
push
xchg
add
xor
test
in
int3
push
std
inc
stc
inc
mov
push
movsl
add
add
leave
test
pop
es
int
ret
movsb
sbb
xchg
testb
pop
jp
add
dec
clc
outsb
add
negb
je
in
std
mov
in
dec
cltd
cmc
push
adc
ret
adc
into
dec
sbbb
dec
push
or
cs
pop
loope
loopne
inc
lds
mov
push
jp
stos
jo
stc
fildl
push
jbe
jp
cmp
pop
aaa
loop
aad
mov
test
push
mov
xor
or
clc
mov
call
in
cmp
les
xor
mov
loop
sub
and
scas
lcall
imul
add
stc
es
rolb
lcall
or
mov
popf
adc
neg
roll
addb
pop
lock
int3
aad
ds
sbb
adc
repnz
push
loopne
fcoml
les
stos
jmp
mov
sti
in
jmp
insb
in
pop
add
sbb
fldcw
or
inc
dec
icebp
sbb
add
sub
pusha
pop
adc
loope
jp
cmpsl
loope
rcl
jo
adc
das
jo
pushl
sbb
sub
pushf
shl
pop
sbb
jne
jb
xor
sbb
dec
mov
jecxz
fmull
leave
pop
adc
adc
scas
adc
and
jle
pop
mov
loope
scas
sarb
sub
adc
insb
ss
cld
xchg
ds
sub
mov
adc
hlt
sub
sub
add
inc
adc
fdivrp
lock
mov
fstps
xor
lret
dec
clc
mov
or
popa
mov
jecxz
or
dec
jb
mov
xchg
sbb
shll
lock
into
pop
sbb
cs
and
sbb
int
push
or
mov
lea
add
in
mov
nop
add
inc
adc
push
adc
adc
pop
add
pop
sarl
inc
test
add
shll
inc
cmp
mov
and
lock
lret
jle
outsb
mov
add
lock
mov
dec
xor
inc
sub
adc
cmp
push
jl
push
xchg
inc
cmp
fidivrs
push
fsubrs
inc
or
nop
sub
mov
test
inc
jne
popf
mov
sbb
notb
jmp
or
dec
movsl
pop
cmpsb
cld
lahf
icebp
pop
jge
dec
jl
mov
xor
mov
dec
mov
inc
xchg
loopne
aam
lods
xor
js
pop
inc
dec
test
adc
pop
scas
call
pop
lea
shl
testb
pop
sub
inc
mov
push
shrl
shll
rol
int
xor
mov
nop
push
sub
mov
cmp
add
cli
adc
leave
or
mov
push
inc
mov
sbb
cmpsb
sbb
mov
ds
fstpl
jle
cmp
in
or
pop
rolb
inc
adc
pop
enter
inc
xlat
jg
xchg
pop
sbb
adc
cwtl
call
loop
pop
push
or
pop
pop
jne
psllw
test
jecxz
out
insb
push
cmp
out
cmp
pusha
cmp
xor
insl
pop
movsl
orb
xor
out
sub
pop
mov
jecxz
push
inc
xor
loop
lock
repz
jecxz
out
lea
inc
push
je
lock
jp
pop
call
rclb
call
push
push
fisttps
loop
out
xchg
dec
jle
cwtl
dec
shlb
stos
lock
cmpsb
popa
and
cmp
mov
pop
jecxz
inc
sarb
and
test
aaa
and
ja
clc
sub
adc
or
xor
ss
mov
jl
push
dec
hlt
dec
add
fstp
mov
loopne
push
mov
dec
mov
mov
xchg
or
scas
mov
add
mulb
pop
xchg
push
dec
jmp
or
cld
jecxz
outsb
xor
std
dec
mov
out
sbb
ret
jp
lret
mov
cmp
sub
in
out
add
sub
mov
inc
pop
mov
sbb
aaa
lock
orb
sbb
add
lock
lods
in
sbb
mov
push
add
mov
mov
ret
mov
cmpsb
lahf
loope
out
scas
add
xorl
mov
jecxz
loopne
add
cmc
xlat
jl
iret
negb
and
negl
into
ljmp
insb
cli
or
fwait
add
sbb
lea
pop
inc
je
pop
add
push
mov
dec
add
jecxz
mov
xchg
sahf
adc
jo
subb
pop
and
jno
pusha
jnp
lock
adc
mov
sbb
mov
mov
xor
inc
sub
adc
jp
mov
pop
movsl
jge
repnz
enter
clc
aad
or
cmp
shr
mov
lods
outsl
or
scas
mov
lds
stos
and
xor
pushf
lods
lret
sbb
push
std
or
es
mov
mov
sbb
adc
or
lret
cmp
das
cmpb
cmp
add
add
inc
repz
ret
mov
sub
je
adc
sbb
jo
mov
pushaw
adc
mov
outsl
popa
roll
fadd
jp
shrb
mov
rcrb
jg
lock
mov
aam
push
and
adc
lods
mov
pop
push
mov
test
xchg
cld
hlt
es
xor
cs
sub
dec
push
adc
cltd
js
daa
pop
cmp
push
sub
out
inc
push
fwait
cmpsb
sub
cs
enter
push
pop
into
pop
mov
aas
adc
or
or
test
mov
jnp
xchg
mov
jg
sbb
dec
jmp
stos
sbb
je
pop
idiv
aas
push
xor
xchg
sbb
loop
test
in
lret
jo
sarl
inc
xchg
sbb
jp
xor
inc
push
inc
add
int3
fs
and
push
out
les
dec
ret
hlt
inc
mov
iret
inc
push
push
push
adc
xchg
sbb
inc
leave
ret
add
out
push
out
push
sub
and
je
cwtl
sahf
inc
xor
push
and
lock
loop
lock
add
xchg
dec
lret
mov
jo
out
dec
sti
je
lods
cwtl
sub
or
out
in
mov
sub
dec
add
mov
mov
or
jle
clc
add
add
dec
ljmp
push
jae
repnz
jl
flds
add
lret
inc
aas
lea
dec
rorb
mov
in
roll
ficomps
add
int3
cmp
inc
enter
dec
add
jo
pushl
pusha
cmpsl
int3
inc
mov
test
ljmp
xchg
add
jecxz
idiv
rcr
sub
add
js
sbb
push
sbb
nop
cmp
aaa
pop
decl
loopne
das
jns
lcall
movsl
jnp
ficomps
push
sub
addr16
bound
loope
out
push
mov
inc
clc
decl
cmpsb
lds
adc
inc
in
push
sub
mov
or
inc
clc
or
mov
je
hlt
add
mov
dec
xor
imul
push
mov
xor
repnz
aad
sub
hlt
pop
mov
add
inc
cld
cmp
mov
testb
adc
push
adc
push
cld
inc
insb
std
data16
sbb
push
cmpsb
sbb
lods
jb
pop
mov
and
movsl
mov
ret
or
fs
mov
jp
loop
push
stos
dec
adc
jmp
je
cmc
xchg
std
and
loop
adcl
es
add
test
ljmp
fistpll
jbe
je
sbb
fs
push
sbb
or
rolb
add
sbb
and
dec
add
nop
test
in
out
scas
cli
data16
push
enter
jg
push
jo
cmp
add
out
scas
cmpsb
insl
test
sub
add
push
mov
inc
icebp
mov
mov
and
in
lds
adc
mov
sub
mov
mov
or
sbb
cld
or
bound
pop
mov
pop
mov
xchg
push
cmpsb
bound
fidivl
sbb
fcomps
clc
add
incl
mov
lock
sbb
pop
mov
jle
addr16
push
jecxz
pop
and
cmp
test
pop
addr16
std
pop
push
aaa
add
jae
pop
movhps
sbb
adc
mov
insl
mov
rorl
lock
push
cmp
jbe
xchg
bound
jp
stos
add
add
data16
cmc
mov
inc
test
jmp
push
cld
push
scas
push
loopne
cltd
aas
shrb
lods
xchg
call
mov
xor
inc
sahf
add
call
in
cmc
mov
aaa
xchg
in
aad
lds
push
jmp
outsb
lret
dec
iret
or
incl
and
pusha
sahf
push
xchg
add
mov
shrb
pusha
and
and
faddl
std
incb
loop
mov
sbb
cmp
push
cld
ja
adc
inc
xor
lock
cld
xlat
sti
scas
mov
cmp
or
inc
cmpsb
enter
mov
call
clc
in
mov
leave
push
mov
dec
fcomp
add
aaa
cld
xchg
sbb
sbbb
mov
add
jl
mov
scas
scas
lds
mov
imul
mov
push
inc
mov
inc
push
std
pop
outsb
push
add
and
adc
scas
jp
insl
subl
negb
pop
cmp
clc
mov
ljmp
rcl
out
inc
push
scas
subb
pusha
into
jbe
ficompl
sub
cmp
stos
icebp
es
loop
xchg
mov
jb
mov
aam
inc
adc
add
adc
arpl
and
push
rcl
icebp
push
mov
inc
push
fsubs
sti
test
cld
pop
or
call
pop
test
pushl
fs
int3
andb
lret
and
aaa
dec
xchg
push
out
or
add
or
and
mov
pusha
push
pop
fcoml
in
cmp
mov
sar
inc
adc
jmp
or
or
adcl
movsb
pop
and
pop
add
popa
jae
pop
push
cld
call
imul
test
adc
adc
ss
je
cmp
out
mov
test
sbb
mov
jl
movsb
int
adc
xchg
jo
test
lea
dec
hlt
xchg
dec
cmpsb
lock
inc
xor
push
jbe
lcall
pop
mov
lds
aad
add
loop
lock
or
xchg
fisubl
sbb
aas
dec
cmp
mulb
xchg
inc
fdivs
push
popf
sbb
pop
test
mov
sbb
xchg
sub
mov
push
ret
sub
sbb
inc
and
out
aaa
push
fmulp
mov
mov
pop
outsb
jmp
fwait
jl
out
jno
sub
or
mov
int
frstpm(287
idivl
jg
les
fmuls
loop
faddl
loope
push
out
cli
loopne
and
mov
or
loop
cld
incl
stc
jg
lcall
lea
fisttpll
push
out
adc
sbb
push
mov
or
pop
ret
pop
divb
inc
xchg
jb
bnd
push
jecxz
fisubrs
cmc
bound
in
aad
xor
int3
push
test
fsubrl
rclb
pop
add
insb
rorb
xchg
sbb
push
lret
cmp
jge
add
add
inc
es
in
mov
mov
fistl
push
cmp
xchg
pop
shl
pop
adc
xor
addr16
xlat
cmp
aaa
das
clc
hlt
shrb
adc
sarb
pop
xor
orb
inc
mov
or
aas
sti
repnz
pop
and
or
add
sub
or
adc
lock
xor
push
jne
push
dec
pop
les
push
clc
push
add
ss
sbb
and
aas
daa
repz
push
ret
jo
mov
js
lea
jl
cmpsb
sbb
xchg
sub
sub
mov
add
push
xchg
subl
adc
cli
loop
jbe
lock
adc
testb
add
adc
das
mov
js
inc
cmp
dec
pop
xlat
pop
sub
inc
xchg
data16
icebp
add
push
call
outsl
into
and
movsl
test
into
push
shrb
fwait
loopne
mov
mov
push
je
mov
cmc
imul
mov
xor
sub
idivb
lds
lds
xlat
adc
or
jnp
popl
adc
sbb
lods
xor
push
or
xor
imul
mov
or
js
mov
mov
and
cmp
dec
mov
xchg
subl
mov
and
adc
cmp
push
arpl
std
addl
fnstsw
sub
mov
xchg
or
adc
pusha
lret
cmc
lea
sbb
mov
outsl
adc
decb
fcmovb
into
adc
subl
add
les
loope
sub
add
mov
push
push
mov
lret
add
call
and
sahf
cmp
cs
lret
add
cld
pop
fmull
and
jle
dec
mov
mov
and
push
scas
and
pop
lods
or
arpl
push
xchg
mov
lods
pop
inc
xor
icebp
fwait
push
xor
xor
loop
sbb
es
pop
sarb
addr16
mov
or
dec
mov
add
popf
rclb
fcoml
cld
push
mov
cli
push
test
pusha
into
faddp
shr
cmp
loop
jns
mov
pushl
les
int3
out
push
mov
add
dec
fs
pop
cmp
push
hlt
dec
sbb
dec
mov
jg
dec
loopne
jne
inc
pop
sahf
cmpsb
outsl
ljmp
loop
cmp
pop
sbb
mov
out
jbe
shrl
popa
xor
pushl
mov
inc
sbb
aas
add
cmp
cmp
mov
decb
sub
xchg
loopne
rcrb
loopne
mov
mov
test
imul
hlt
inc
adc
int
mov
mov
fildll
sahf
cmp
or
jp
xchg
jecxz
jp
xor
es
and
loop
inc
cmc
lods
cmp
add
inc
or
fnstcw
push
add
decb
idivl
test
lcall
push
mov
mov
mov
push
test
adc
nop
mov
push
sar
push
sub
lcall
mov
pop
and
ljmp
inc
sarb
sub
jmp
adc
push
ss
int
xchg
std
mov
lds
lahf
push
mov
mov
inc
js
fisubl
push
inc
das
push
aas
add
xchg
hlt
mov
or
pop
inc
xor
pop
and
pop
add
in
add
ljmp
dec
hlt
pusha
push
inc
std
test
cmpl
cli
aam
fisttps
or
pop
push
pusha
mov
cmp
lret
pusha
adc
inc
pop
in
loop
xlat
loopne
xchg
clc
jo
add
or
mov
out
cmp
sbbb
nop
arpl
sub
fadds
jo
std
data16
jmp
addr16
add
sub
sub
mov
jg
out
xchg
inc
cltd
mov
add
pop
loope
or
add
pop
lock
adc
add
dec
movsb
or
push
je
std
outsl
mov
sub
inc
mov
into
hlt
lea
cmp
jns
add
sbb
vrcpps
clc
es
adc
dec
pop
mov
jnp
pop
cltd
push
mov
add
sti
fdiv
daa
sub
out
repz
inc
or
push
pop
loopne
fstpl
push
mov
test
cwtl
test
lods
je
mov
loopne
seto
or
inc
clc
pop
and
jns
nop
adc
dec
add
adc
xchg
add
roll
clc
notb
mov
push
jnp
push
fcmovne
push
xchg
and
jae
cs
sti
mov
inc
or
inc
dec
mov
adc
pop
rcrb
aam
or
fimull
jnp
fwait
push
mov
add
xchg
lea
mov
lahf
adc
or
dec
loop
mov
test
add
adc
mov
xchg
mov
es
cmp
xchg
fdivs
pop
stos
je
add
fsubs
movsl
or
inc
into
dec
jg
xor
mov
cmp
adc
jb
int3
jmp
dec
jle
inc
jo
mov
pusha
test
gs
lock
lock
fisubrs
push
cmpsb
or
add
adc
mov
div
add
orb
fimull
sbb
adc
push
loope
fs
cld
mov
jb
rolb
stos
ja
pusha
pop
ss
ret
xor
jp
mov
xchg
out
shrl
mov
add
push
clc
jl
sbb
xchg
pop
add
inc
jb
cmp
mov
lock
mov
fisubrs
or
cmpsl
push
test
mov
ret
mov
cld
mov
dec
cmpsl
notb
push
jge
and
lock
aad
mov
inc
sub
and
mov
gs
mov
ret
sarb
aaa
fidivrs
scas
pop
icebp
aaa
jle
call
pop
inc
xor
test
add
daa
fwait
in
movsl
mov
sub
sub
sbb
mov
out
cvtpi2ps
cmpsl
in
mov
xchg
mov
xchg
add
repnz
adc
rolb
call
jne
adc
sub
sbb
enter
cmp
dec
repnz
push
pushl
jl
lock
xor
sbb
pop
jno
add
mov
enter
outsl
pop
mov
je
test
mov
jnp
mov
xchg
incb
es
add
xor
loopne
movsl
hlt
xor
adc
and
in
jmp
push
std
mov
adc
into
jb
sbb
in
aaa
pop
adc
lock
add
popa
nop
xchg
adc
aaa
ljmp
cmp
mov
push
aaa
add
shrl
bound
stc
popf
loop
out
movsl
pop
mov
push
xchg
adc
or
cmp
add
sahf
out
rcrl
loop
jo
adc
fwait
outsb
cmp
mov
mov
pop
pop
mov
into
fmul
mov
ss
rol
push
push
pop
sub
subl
dec
sub
fimuls
pusha
xchg
cld
out
pop
mov
imul
pop
add
add
cmc
jge
in
add
push
inc
mov
je
sbb
or
or
cli
adc
or
ss
test
dec
add
repnz
lcall
ret
xor
out
jmp
adc
add
outsb
xlat
or
ror
adc
ljmp
mov
dec
or
lcall
or
jb
pop
and
and
lahf
mov
pushf
ds
lret
inc
sub
repz
loopne
mov
sub
and
fmull
xchg
sbb
je
leave
test
inc
lcall
fsubl
xchg
adc
loopne
aam
and
sbb
jmp
mov
jo
push
addb
clc
js
in
aas
movsb
pushl
add
subb
aas
shlb
adc
mov
or
add
or
mov
pop
pop
fisubl
mov
add
pop
add
outsb
ficompl
mov
out
or
and
and
add
mov
push
scas
add
int3
jne
rol
inc
insl
inc
shlb
rsm
sub
push
data16
fdivp
ja
jo
cmp
dec
push
cld
push
push
adc
xor
insb
lcall
fsubrs
pop
cmp
xor
cmp
hlt
loopne
dec
frstor
into
sbb
jp
sahf
dec
and
jg
xor
dec
in
cmc
xchg
lahf
jp
les
pop
mov
cmp
or
mov
das
out
push
fs
sub
adc
jnp
add
daa
mov
and
shrb
xchg
outsl
sub
inc
in
jo
imul
mov
mov
adc
pop
xlat
addb
lds
pusha
jo
or
mov
mov
add
xchg
add
hlt
mov
pop
aam
mov
and
xchg
inc
xchg
fidivs
xor
push
pushl
push
mov
ret
fadds
cli
push
pop
mov
mov
insl
fistpll
fstpt
dec
out
jno
ss
das
pop
test
clc
testl
or
dec
mov
incl
lahf
add
push
bound
mov
in
stos
push
test
mov
inc
idiv
ljmp
mov
cmp
cmp
pop
popf
sti
mov
pop
jg
pop
dec
bound
insl
sub
in
loop
add
popf
jne
inc
dec
add
push
adc
push
fwait
adc
add
sub
dec
test
imul
std
fmuls
push
in
inc
dec
push
insl
aas
sbb
aaa
dec
inc
outsl
inc
mov
xchg
test
rclb
jno
in
dec
jno
dec
push
push
xor
mov
sbb
push
mov
and
cwtl
lea
push
push
stc
pop
ja
xchg
shr
inc
add
add
xchg
rcll
test
cwtl
inc
add
push
fstps
sbb
xadd
dec
rcr
loopne
aaa
ss
in
insl
dec
dec
pop
xlat
cli
push
mov
dec
mov
mov
jmp
mov
push
lea
push
or
mov
jge
loop
jns
jns
fimuls
dec
push
push
inc
cs
mov
jae
insl
jns
push
pop
fsubr
mov
pop
fs
add
inc
ss
mov
xor
jmp
cmpsb
cmp
inc
xor
cli
outsl
or
dec
mov
sub
add
inc
in
adc
loopne
push
push
shll
xor
dec
pop
lods
ja
lods
lds
inc
dec
pop
lret
push
cmc
jns
push
sub
gs
cmpb
out
mov
fstl
jmp
outsl
sub
inc
pop
push
ds
lcall
xchg
pop
xchg
cld
rcrl
push
mov
sbb
fsubr
es
push
mov
mov
mov
out
ficomps
xchg
dec
pop
mov
aad
xor
push
lcall
fwait
and
sbb
je
cltd
xor
je
add
add
dec
test
stos
pop
dec
push
mov
repz
mov
mov
add
mov
leave
cmp
ja
ret
xchg
dec
call
or
mov
data16
mov
aas
lea
add
pushf
jnp
repnz
dec
cli
daa
pop
dec
clc
sbb
add
adc
insb
mov
mov
xor
aaa
and
das
call
adc
mov
push
ficoml
jo
or
or
jnp
fsubs
repnz
rclb
inc
xorl
pop
psllq
xchg
xchg
inc
xchg
sub
lock
jge
addb
pop
arpl
sbb
cltd
cmp
adc
mov
mov
test
cltd
out
push
push
es
data16
add
lock
push
fs
loopne
jnp
jnp
mov
lock
ljmp
dec
lods
cmp
lret
mov
xor
jns
pop
mov
adc
test
loopne
sbb
fdivrp
fsubrl
in
movsb
nop
subb
mov
push
rcr
xchg
xor
jb
mov
adc
pushf
mov
pop
pop
cld
and
in
dec
fucomi
and
inc
or
testl
add
test
les
std
mov
icebp
ss
bound
shrl
push
rclb
ficoml
add
fsubl
jecxz
mov
jbe
subl
pop
cli
cmpb
and
sub
in
xchg
iret
xor
stos
call
aas
test
jae
adc
sbb
cwtl
add
sbb
push
popa
jbe
pusha
inc
test
lock
shrb
cld
add
sbb
dec
mov
mov
xchg
xor
fstl
jnp
arpl
data16
or
movl
aas
sub
mov
inc
mov
in
add
imulb
call
rcrb
pop
popf
fldenv
adc
lds
xchg
ja
or
daa
iret
push
sub
xorl
add
shrl
addr16
mov
pop
sti
out
int
addl
into
xchg
inc
call
js
cmp
inc
or
and
or
push
push
es
xor
and
push
push
sub
mov
icebp
pop
xorl
aas
cld
iret
imul
xor
mov
aad
mov
testb
sub
sbb
dec
cmpsb
jecxz
push
insb
add
iret
inc
test
pop
adc
ror
cmpsb
jecxz
pushf
or
sub
add
xor
sub
sub
sbbb
repnz
loopne
jmp
and
lea
dec
sub
cmpsl
add
popf
lods
inc
mov
and
or
imul
in
jb
js
adc
es
xchg
sub
rcl
push
enter
jle
add
mov
mov
jnp
jle
lods
jmp
test
mov
adc
fsubs
sub
lret
cli
fists
cmp
and
sub
adc
sbb
jl
pop
inc
es
mov
in
lock
in
xor
mov
dec
push
adc
mov
xor
inc
or
jo
adc
adc
or
inc
jne
or
test
cmp
push
mov
ja
pop
in
cmp
xchg
in
jge
and
pop
insl
jl
sub
enter
insb
test
movsb
mov
int3
adc
push
rorb
push
fisubs
add
stos
cmp
out
dec
push
xchg
jbe
mov
inc
xchg
and
data16
add
addb
bound
ja
jp
cli
jle
mov
inc
in
push
mov
js
inc
jl
push
mov
stos
test
jl
sbb
mov
enter
lcall
clc
add
cmp
push
and
pop
push
push
adcl
fsubs
sbb
xor
dec
cmp
shl
mov
lods
arpl
lock
orl
ljmp
cld
hlt
addr16
mov
xchg
shl
sub
adc
test
cmp
or
cmp
jns
sti
adcb
dec
aaa
add
popa
hlt
sub
daa
push
cmc
pop
xor
fiaddl
xlat
psubb
cwtl
mov
pop
cmp
bound
adc
jecxz
fwait
cmpsb
cmp
popf
mov
in
in
mov
and
je
push
pop
iret
stc
loope
push
nop
and
mov
mov
cmp
daa
mov
push
out
mov
xchg
jecxz
fnsave
pop
scas
std
or
stos
addb
push
lock
sub
lret
cmp
pop
das
clc
fwait
dec
es
add
add
addb
dec
enter
add
cmp
dec
mov
jge
pop
dec
mov
dec
push
dec
rorb
mov
dec
insb
sbbb
arpl
pop
loop
mov
aad
mov
push
shll
mov
mov
or
icebp
test
bound
cmpsb
mov
sbb
hlt
and
les
cs
push
loope
or
aas
ficoms
add
fistl
out
jae
adc
rorb
pop
inc
fdivl
cmp
inc
add
sahf
jg
hlt
test
mov
sbb
ret
push
test
sub
mov
mov
out
ds
popa
inc
sub
ja
out
stos
in
data16
lods
pushf
push
or
imul
jmp
stos
add
pop
mov
xor
ljmp
pop
call
sar
out
jecxz
outsb
add
cli
sbb
les
decb
jp
pusha
add
push
fs
aas
jne
shl
cmp
mov
repnz
lret
cmp
push
or
clc
add
ss
inc
test
sarb
push
in
movl
inc
mov
nop
out
sbb
inc
shlb
push
out
xor
ds
mov
xor
decl
jb
push
test
jae
xchg
clc
ds
out
notl
arpl
inc
mov
icebp
push
loop
dec
add
add
cmp
push
imul
pop
and
orb
test
out
inc
pop
lods
pop
jns
popf
das
push
rorb
inc
push
data16
ljmp
jle
lret
es
dec
popa
cwtl
xchg
insl
dec
add
inc
and
cmp
cmp
jns
mov
push
mov
lock
adc
ret
pusha
push
les
lcall
push
ret
pushf
lret
dec
jns
inc
cmp
pop
cmp
push
cld
inc
jecxz
in
dec
jbe
movsb
mov
jbe
test
jl
lret
jecxz
adc
mov
mov
xchg
aas
mov
jmp
into
andb
aaa
mov
bound
xchg
mov
cmpsl
ljmp
test
stos
dec
inc
clc
add
filds
mov
into
mov
imul
repz
push
xchg
popa
ds
mov
push
sbb
pop
adcb
rcrb
sub
hlt
mov
xchg
pop
cmp
mov
xor
das
clc
cld
ret
mov
adc
xchg
jp
shrb
outsl
mov
jo
pop
ret
inc
pushf
jmp
fisttpl
sbb
add
or
loopne
inc
sbb
mov
jg
in
mov
aas
mov
mov
xchg
sub
inc
mov
mov
testl
in
in
lock
inc
adcb
mov
or
sbb
dec
inc
pop
bound
cmp
add
add
incb
adc
and
iret
inc
cld
jmp
add
cli
pop
hlt
sub
xor
fnstenv
xlat
inc
in
or
or
dec
add
pop
pop
int
push
std
mov
mov
pop
roll
sbb
popf
inc
out
repnz
outsb
cmp
push
int3
mov
xchg
cwtl
mov
and
xchg
aas
push
pop
add
mov
testb
sti
or
lahf
mov
push
daa
adc
mov
sbb
add
pushl
jg
popf
inc
lods
inc
in
movsb
sbb
jns
xor
cmp
cmp
lea
cli
dec
cmpsb
sbb
clc
int
mov
lcall
jecxz
cld
in
scas
test
jo
and
rolb
je
pop
jg
push
inc
push
xchg
jp
cmp
rorb
mov
pop
test
movsb
jg
incl
mov
cmpsb
and
jbe
aas
pop
mov
bound
fwait
loope
roll
cs
cld
int3
jg
mov
sub
adc
test
add
scas
mov
add
rcrb
mov
jmp
adc
stos
sub
pushf
xor
lds
xor
inc
add
rorl
ret
in
jmp
repnz
cmp
inc
das
ret
pop
dec
pop
popf
insl
sahf
orl
xchg
mov
push
jae
and
lds
nop
fidivrs
cld
inc
xchg
incb
call
pop
or
push
cld
cmpsb
pop
mov
xchg
test
jg
fwait
jno
cwtl
xchg
and
fsubl
insb
roll
popa
sub
idiv
pushl
push
and
push
sbb
or
pusha
stc
lods
jae
pop
mov
bound
clc
mov
pop
add
and
add
sbb
subb
fiaddl
shll
xchg
mov
fistpl
add
xor
dec
and
cmc
and
sarl
inc
cmp
sbb
rcrb
test
enter
cmpsb
decl
incb
subl
pop
add
mov
scas
inc
or
mov
mov
pushf
dec
or
xorl
adc
stc
add
subl
roll
adc
ljmp
jnp
xor
mov
push
shl
and
jg
rcll
filds
add
into
add
sarb
adc
test
pushl
add
scas
popf
push
test
test
push
inc
cmpsl
xchg
inc
jnp
lds
and
pop
in
ja
sbb
push
test
pop
test
pop
les
mov
ss
sub
test
inc
out
sbb
lcall
jb
loope
test
inc
sbb
or
and
mov
sbb
cld
sahf
adc
jne
cli
pushl
push
dec
xchg
movsl
mov
fistpl
and
shrl
fistpll
rolb
adc
mov
mov
in
or
aaa
lcall
push
pop
inc
test
and
sbb
call
add
lds
gs
jecxz
cmpsl
inc
lods
inc
jp
je
mov
jb
loopne
cld
pop
and
mov
and
pushl
incl
imul
shll
into
stos
pop
ja
adc
add
dec
and
cli
out
loop
add
rorl
sbb
pop
mov
pop
mov
jnp
push
or
dec
xchg
dec
cwtl
loope
icebp
dec
add
loop
out
mov
addb
das
cli
mov
sub
aam
lock
ja
mov
and
sub
pop
sbb
pop
loopne
mov
mov
add
pop
loope
fdivs
inc
scas
cli
push
mov
mov
or
dec
pusha
mov
adc
xchg
pop
sub
loope
fwait
stos
xchg
mov
rolb
js
incl
pop
stos
sub
mov
cltd
in
mov
push
loopne
movsb
push
jle
icebp
jbe
jp
mov
lea
loope
scas
add
add
push
pushl
push
addr16
std
mov
movsb
add
sub
mov
cmp
sbb
outsb
sub
in
adc
push
call
push
push
add
loopne
xchg
arpl
clc
aaa
in
push
bound
test
insb
in
push
cmpsb
js
std
inc
iret
push
pop
dec
lret
imul
jns,pn
andb
dec
iret
or
xor
and
lock
insb
adc
mov
aas
mov
xor
sbb
cmp
mov
mov
adc
dec
es
js
mov
mov
cld
mov
push
stos
add
jbe
fwait
lea
cli
loope
ss
fdivrp
mov
aas
mov
push
fcmovu
cmpsb
outsb
mov
addl
jp
add
push
aad
inc
lock
sbb
mov
ljmp
or
nop
add
sub
inc
or
aaa
fs
cmp
subb
push
rcl
in
and
mov
or
xor
cmp
add
ret
or
push
add
push
fildll
loop
and
movsb
leave
bound
adc
mov
xor
add
aam
andl
sub
mov
pushf
cmp
or
add
dec
cmp
pop
lock
ffreep
xor
testb
dec
xchg
push
mov
leave
push
jl
in
mov
add
dec
xor
cmp
jecxz
addl
mov
popf
push
ficomps
mov
xlat
nop
rcr
fldenv
test
add
adc
ja
cli
les
dec
lods
inc
into
jno
scas
mov
loopne
out
popf
inc
mov
inc
xor
cltd
push
fisubrl
and
mov
and
sub
fisubs
es
addl
jle
and
sub
xor
outsl
rcrb
outsl
jp
fstpl
pop
jbe
add
inc
push
shl
call
jl
mov
or
add
ficomps
xor
rorl
mov
loope
xchg
dec
adc
insb
inc
and
push
je
mov
iret
popf
or
jp
mov
xlat
mov
int3
popa
movsb
dec
and
es
sub
movsb
test
cli
int
fmul
dec
je
pop
or
xchg
inc
jg
aas
pop
hlt
jmp
push
sub
mov
push
fistpll
or
inc
stos
dec
cmp
mov
inc
pusha
add
fldenv
in
xchg
xor
and
jae
push
loop
pmaddwd
pop
cmp
cld
adc
jmp
orl
imul
addl
cmp
pop
mov
dec
push
and
or
filds
pushf
mov
push
shlb
mov
sub
jbe
mov
add
insb
push
enter
cld
leave
pop
xor
cmpsb
testb
lds
dec
push
add
cmp
lret
popa
clc
mov
sub
jbe
adc
or
dec
aad
jae
sti
scas
je
add
lret
push
xor
xchg
or
fs
cmp
mov
adc
mov
lea
mov
cmp
sub
xor
and
fs
repz
push
cmc
pop
push
loope
jne
sbb
fbstp
int
das
jl
mov
inc
xchg
fdivrs
ss
mov
ljmp
clc
jg
sub
psubusb
addb
arpl
sub
hlt
jg
mov
cmp
adc
int
adc
outsl
dec
sarl
lds
adc
xchg
insb
nop
test
mov
cmp
test
dec
cmp
cmp
jmp
sub
fwait
jl
pop
add
add
lds
dec
pushf
imul
js
or
xor
sub
lcall
sub
or
jo
leave
int3
cmp
lods
xchg
dec
push
subb
mov
les
cmp
insl
js
bnd
sbb
lds
xor
addr16
fcomps
pop
inc
shlb
xchg
ret
sub
pop
xchg
push
or
add
pop
ret
pminub
cwtl
lock
arpl
sub
xor
and
adc
mov
mov
lods
cmp
bound
scas
xlat
mov
cmp
mov
mov
je
std
jbe
xchg
dec
pop
mov
pop
inc
in
pop
mov
pop
sbb
mov
jg
lahf
inc
and
add
sub
mov
jg
xor
int3
roll
and
mov
xchg
movsl
mov
pop
push
popf
add
mov
adc
pushf
fnstenv
sbb
ret
sub
loope
dec
pop
fwait
popf
add
lods
add
mov
testl
jnp
xchg
pop
inc
enter
mov
jl
shll
pop
cli
call
les
hlt
add
xor
jns
jns
clc
icebp
fsubr
fidivrl
mov
lcall
mov
xchg
pop
and
subl
out
push
xchg
adc
push
stos
ret
adc
add
popa
imulb
aad
and
test
add
js
fnstsw
or
test
pop
inc
xlat
mov
cmp
adc
cmpsl
jmp
cmpsb
jbe
iret
leave
pop
decl
fildl
sub
pop
inc
pop
inc
subl
dec
pop
insl
jl
or
push
add
leave
xchg
pop
movups
mov
mov
sbb
inc
cld
arpl
dec
mov
lret
jg
call
and
jmp
add
andb
add
push
jg
es
fidivl
jmp
test
mov
inc
jmp
test
mov
mov
das
xor
pop
test
std
sarl
jle
sub
rorb
inc
shlb
dec
adc
test
cli
aad
mov
push
sbb
pop
lock
xchg
cmp
lods
xor
roll
test
div
out
sti
je
add
orl
fcomps
inc
sbb
rcrb
mov
test
sti
fdivrs
lds
loop
mov
sbb
aam
cltd
xor
cli
loope
mov
push
pop
pop
pop
cs
scas
mov
lret
out
clc
daa
inc
and
scas
fistpll
lcall
sbbl
push
ror
or
call
mov
or
lahf
arpl
clc
pop
aas
add
push
xchg
and
mov
fs
add
adc
mov
add
in
push
dec
ja
ret
cmc
out
mov
pushl
cmc
inc
add
outsl
popa
scas
fisubs
adc
cmpsl
outsl
cli
lock
sub
orl
lods
aam
or
aas
mov
pusha
add
inc
popf
mov
jnp
and
loopne
xchg
sbb
cmp
fisubl
test
ret
rolb
bound
rcr
push
jl
paddusw
mov
lret
js
pusha
lock
jge
mov
es
mov
inc
cs
pop
mov
ljmp
sbbl
xor
call
jnp
mov
xchg
add
fptan
adc
loope
sbbb
decb
xor
mov
mov
addl
testb
lock
and
xor
loopne
xchg
nop
ljmp
jp
decl
xor
or
xchg
cmp
outsl
bnd
insb
cmp
cmp
xchg
mov
dec
cmp
test
or
aaa
jg
push
pop
push
arpl
iret
test
fwait
and
add
dec
pavgb
leave
out
mov
jno
sub
loop
enter
cmp
aam
hlt
std
cwtl
and
les
sub
out
fwait
lea
lock
push
push
pusha
xor
and
sub
cmp
inc
cwtl
enter
jle
xor
push
mov
nop
lds
loopne
cld
in
dec
insb
pop
dec
rolb
add
inc
outsl
clc
dec
sub
push
pop
mov
sarb
adc
sbb
cltd
sub
mov
push
push
dec
push
sbb
fisubrl
xor
push
lods
dec
push
bound
xor
add
inc
add
pushl
lock
dec
call
scas
inc
jo
insl
ret
nop
cmp
pop
mov
aas
push
dec
jg
adc
push
rorb
mov
imul
loope
mov
jbe
inc
jne
xor
divl
rorl
jno
xor
push
testb
outsb
push
ret
dec
mov
or
adc
push
or
clc
push
inc
sti
mov
mov
mov
jb
xchg
cwtl
jbe
pusha
roll
dec
loopne
dec
sbb
push
dec
aaa
imul
dec
push
inc
inc
subb
jno
dec
dec
jb
mov
xchg
add
das
repnz
ret
pop
and
jmp
imul
xor
mov
xchg
jb
cmp
mov
mov
sarb
shrl
push
xor
mov
sub
ret
xor
dec
clc
jnp
sub
mov
shrl
lcall
sub
add
push
sbb
add
inc
add
inc
push
stos
lret
es
call
add
add
mov
push
cmp
sub
sub
in
je
cld
incb
cmp
flds
jmp
push
clc
movsb
jmp
fnstcw
fisubrl
dec
dec
mov
rol
lods
add
inc
push
inc
cld
push
jae
push
clc
add
cmp
jns
loopne
jb
mov
xchg
les
dec
fadds
jo
rcr
dec
push
jl
shlb
push
jns
push
xor
or
push
jo
jno
outsb
inc
test
pop
inc
xor
xor
aas
clc
cld
xor
dec
hlt
push
push
jp
push
add
mov
dec
ret
in
mov
arpl
dec
int3
div
pushl
pushf
cld
mov
add
dec
insb
push
mov
xchg
or
pushf
or
push
pop
sub
jbe
add
ds
xor
jne
jmp
das
inc
mov
mov
xor
push
fwait
mov
xchg
in
or
sub
sbb
daa
iret
rolb
pushf
bound
loop
adc
jo
pop
jg
cmova
js
mov
add
std
inc
shl
add
sub
sbb
push
add
jl
dec
test
icebp
imul
mov
pop
cmpsb
xor
or
xor
lret
mov
adc
cld
mov
fidivrs
push
jo
lret
or
test
repz
mov
mov
sahf
adcb
or
mov
das
sahf
push
sbb
cmp
test
flds
mov
mov
pop
xchg
mov
jo
pusha
push
fsubl
push
ds
test
adcb
testb
pop
xchg
mov
pop
jecxz
dec
pushf
mov
mov
popf
stos
inc
pusha
je
movsb
push
out
dec
pop
shrl
insl
ret
lea
aam
or
into
dec
aaa
test
out
jle
ret
fs
imul
inc
shl
mov
mov
aas
inc
outsl
iret
push
scas
cld
aad
cmpsl
das
data16
in
ljmp
out
adc
mov
jno
icebp
inc
rol
sbbl
inc
pop
adc
data16
adc
hlt
js
push
jo
int
or
jnp
or
cmpsb
outsb
sbb
push
ds
test
inc
mov
test
pop
scas
pop
hlt
mov
ret
jl
cmpb
mov
jno
cmp
cli
mov
inc
idiv
test
inc
in
mov
movsl
xchg
inc
loope
in
and
ss
pushl
popa
push
add
in
les
add
mov
push
stos
aad
adc
mov
outsl
adc
dec
int3
mov
arpl
jge
rcrl
test
pop
dec
push
and
imul
or
jns
sarb
dec
cld
je
cli
pusha
es
cmp
pop
aas
mov
out
jnp
xor
sbb
mov
in
jne
jp
jecxz
dec
mov
pop
pop
mov
inc
lcall
fcomps
xchg
loopne
add
push
push
loopne
insl
jge
push
jle
sbb
jo
subl
pop
jns
ror
clc
cmpsl
leave
lds
adc
mov
or
push
scas
fs
mov
push
mov
incb
dec
dec
push
add
or
xor
dec
push
mov
iret
cli
loope
cmc
add
xchg
adc
inc
mov
jnp
xchg
repnz
pop
call
inc
mov
sbb
and
adc
popa
mov
xor
ds
loopne
add
sub
rcll
xchg
or
cmp
ret
inc
sub
scas
out
jo
push
sbb
roll
lret
or
in
sarl
dec
inc
int3
xor
push
or
inc
xchg
xlat
dec
fsubrl
and
mov
test
lock
lret
sarb
loopne
or
jbe
xchg
xchg
mov
repz
mov
fmul
fs
xchg
adc
lock
jge
mov
inc
pop
mov
stos
dec
fs
or
pop
xchg
hlt
or
dec
rol
pop
call
jo
mov
mov
xor
faddl
testb
inc
xchg
shrb
jl
test
scas
fs
cmpsb
imul
xchg
xorl
xchg
mov
imul
test
lock
sarl
xor
jecxz
adc
sbb
mov
jno
sbbb
ret
cmc
push
xchg
mov
mov
mov
clc
cld
mov
sbb
outsl
sbb
insb
push
jp
mov
enter
jg
or
leave
cmpsl
inc
mov
sti
push
mov
add
imul
scas
roll
mov
into
and
jo
movsb
orl
mov
test
xchg
cli
ret
aas
or
sub
loop
pop
mov
outsl
pop
push
mov
and
sub
jne
pop
dec
add
or
inc
sub
jo
loopne
dec
repz
cli
add
nop
sbb
test
xor
and
stos
pop
sbb
jbe
mov
rorb
add
or
mov
outsl
mov
clc
negl
inc
cmpb
arpl
sti
jg
in
movsb
adc
adc
leave
ret
pop
jns
push
jb
jb
subb
jae
lret
daa
xchg
ds
clc
cmp
data16
xor
add
cmp
inc
data16
enter
mov
jecxz
lret
dec
fistps
iret
pop
mov
call
enter
adc
sub
push
lret
fiaddl
in
xchg
aad
sub
sub
aaa
pusha
insb
adc
pop
ja
cmovge
pop
out
cmp
mov
mov
shl
mov
dec
pop
adc
das
ljmp
lock
je
inc
into
push
repz
ret
inc
hlt
add
jb
fdiv
xchg
int
rcrb
adc
pop
sub
pop
repnz
es
imulb
fldl
fiaddl
aas
jecxz
sbb
jne
sar
xor
xchg
fsubrs
jo
add
and
mov
mov
push
or
scas
imul
cltd
fsub
jo
or
add
xchg
loopne
test
js
push
lahf
ret
xchg
divl
stc
fstpt
sub
jnp
imul
js
xchg
push
rcrb
xor
and
xchg
fdivrs
pop
insb
cmp
pop
rcll
cmp
stos
aaa
addr16
nop
iret
cli
inc
ret
je
sub
fidivl
andb
dec
cmp
jle
shr
loop
out
mov
ret
add
aam
lds
xor
inc
imul
jo
mov
xchg
mov
cld
adc
jno
scas
dec
mov
lods
into
dec
pop
add
mov
push
push
jns
add
int
arpl
cli
dec
cmp
mov
rclb
icebp
sub
dec
pop
inc
add
es
in
aas
inc
and
add
push
hlt
push
js
inc
gs
mov
mov
cmp
jmp
js
xor
or
sub
fistpl
das
test
inc
insl
popa
or
add
in
lret
dec
mov
ret
clc
push
mov
loopne
icebp
imul
cmp
mov
push
les
stos
cmp
ljmp
scas
out
add
movl
hlt
js
jns
dec
cs
insl
mov
inc
jp
push
xchg
bound
shll
mov
dec
push
in
inc
call
dec
out
inc
dec
push
aaa
sub
and
addr16
jno
je
in
ret
dec
adc
js
add
adc
addr16
push
lock
dec
loop
shlb
or
shlb
adc
xor
jb
fisttps
adc
jne
dec
xor
push
mov
jae
or
lock
mov
pop
popa
outsl
mov
lods
inc
sbb
inc
push
lea
pop
pop
sarl
xor
mov
dec
xor
ss
in
dec
popa
dec
aas
xor
clc
cmp
cmp
dec
ficomps
aam
inc
xchg
inc
and
pop
push
ss
xchg
outsb
cmp
insl
imul
out
dec
sub
jl
jl
mov
ja
add
xchg
cld
mov
push
mov
addr16
pushl
aaa
cld
hlt
std
adc
jne
push
jne
push
inc
mov
test
sub
loopne
add
dec
pusha
cwtl
rorb
into
loopne
push
push
push
stc
dec
mov
clc
loope
lret
out
cmp
xchg
mov
loop
add
cmp
scas
sbb
jno
push
inc
dec
adc
xor
les
cs
mov
lea
add
hlt
add
js
in
inc
enter
sub
fs
inc
and
pop
or
dec
push
imul
sub
xchg
sahf
xor
and
xor
inc
je
xor
sub
sub
mov
inc
pop
cli
nop
add
pushf
mov
sbb
lock
cmpsb
jge
movl
sarb
cmp
fimuls
inc
sub
push
cmp
pop
cwtl
pop
push
pop
mov
cmpsb
sbb
mov
ror
dec
decl
ljmp
popf
add
data16
add
add
jle
jecxz
push
aam
pushl
cli
add
and
add
cmp
std
push
mov
nop
add
pop
add
xor
test
mov
sbb
jno
sub
adc
sti
ja
push
lahf
push
add
add
outsl
fldt
mov
out
inc
int
cmp
shlb
inc
in
inc
xchg
or
add
popf
inc
loopne
sbb
pop
pusha
cs
movsb
ljmp
cwtl
pop
daa
xor
push
sub
add
imul
push
cli
int
dec
inc
out
push
clc
dec
out
or
push
repnz
lcall
mov
xchg
adc
and
aas
les
sbb
xor
and
inc
mov
push
aaa
je
pop
adc
icebp
cs
dec
stos
inc
das
rcrl
mov
rcr
scas
bound
insb
jns
jg
hlt
mov
xor
mov
dec
pop
mov
stos
mov
rol
int3
ror
js
or
cli
dec
mov
ret
adc
adc
cmp
inc
test
xor
aam
xchg
roll
incl
mov
dec
inc
cmc
in
fdivs
je
sbb
xchg
scas
in
hlt
push
push
fmuls
add
incl
pop
lea
mov
aaa
push
lcall
fdivs
lods
jb
lret
add
shlb
leave
clc
mov
popf
inc
add
add
lcall
mov
mov
and
dec
cli
sub
pushl
fisttpl
pop
push
ret
inc
pop
mov
sbb
and
dec
mov
cld
loop
adc
cmp
test
ret
xorb
movsl
xor
aam
nop
scas
adc
lods
in
lcall
aam
clc
adc
dec
dec
xchg
mov
inc
negb
push
rolb
xchg
jo
shll
jno
or
inc
xor
sbb
mov
sub
shlb
mov
and
pop
hlt
orb
or
out
mov
cmpsb
outsl
xlat
dec
stc
flds
out
mov
shr
push
inc
leave
stc
pop
lock
cmp
sbb
sbb
jmp
cmp
xor
or
mov
adcb
add
fisttps
pop
ret
hlt
adcb
dec
mov
adc
cli
pusha
xchg
cmp
mov
test
int3
push
outsb
ficoml
addl
outsb
sub
sub
test
lock
push
lock
loop
mov
in
xchg
push
rcll
mov
jbe
int3
push
or
hlt
cld
sbb
stos
add
and
cmp
call
fisubs
jns
pop
push
push
fists
loopne
lock
push
cmp
mov
cmpsl
rolb
jno
lahf
inc
xor
adc
or
xchg
imul
mov
sbb
cmp
push
fimull
in
es
mov
addr16
mov
mov
mov
mov
add
cli
ror
cmc
pop
cli
bound
jg
or
xchg
sub
sub
clc
cmpsb
fcomip
push
loope
mov
sti
pop
orl
xor
sti
push
and
test
out
mov
es
enter
lock
nop
movsb
imul
loopne
clc
xor
je
es
mov
enter
or
cmp
dec
cmpsl
rorb
fbstp
or
mov
adcl
test
xlat
push
push
xlat
fsubs
adc
push
sbb
sub
gs
outsl
cli
lock
fs
dec
mov
andb
lds
push
sbb
jg
sub
fmuls
sahf
dec
faddp
xor
mov
std
lods
icebp
lcall
cmpb
loop
aaa
xchg
mov
push
imul
mov
fcoms
xlat
ror
cmp
ss
pushl
mov
sarb
xor
mov
pusha
or
jl
test
jge
lahf
fiadds
mov
mov
test
fidivrs
add
pop
out
pop
xchg
icebp
sti
scas
and
loopne
cmp
push
and
adc
mov
jle
ja
in
cmp
push
pushl
xchg
sahf
and
movsb
ljmp
jecxz
clc
fwait
and
or
sbb
mov
mov
mov
insl
fsubl
jl
xchg
scas
pop
cmp
test
paddq
and
cmpl
call
pop
shlb
jg
stos
das
jae
daa
insb
lcall
push
fsubl
ret
push
sub
mov
xor
inc
add
jl
dec
rcrl
js
inc
outsb
mov
push
call
scas
sbb
add
jbe
pop
add
pusha
xor
stos
aad
idivb
nop
adc
push
scas
stc
jecxz
mov
je
cmpl
mov
scas
lret
lods
mov
jp
cmpl
in
inc
add
decb
xor
xchg
cmp
insb
jno
jbe
inc
js
mov
and
mov
xchg
jae
add
sbb
sub
push
add
add
jbe
lcall
or
cmp
mov
jbe
decb
sbb
mov
mov
nop
and
push
popa
pusha
sub
push
adc
mov
xor
insb
sub
jge
push
jp
iret
rcll
test
jns
cmp
je
fwait
in
and
mov
lods
loop
hlt
out
lods
inc
or
add
sub
cld
xor
pop
clc
filds
xlat
add
xchg
dec
movsb
push
dec
xchg
fimull
clc
xchg
movsl
or
fadds
shl
and
dec
negb
call
stos
clc
and
subb
and
pop
push
pushf
lds
lods
push
pop
inc
push
and
push
clc
in
popf
sub
or
jge
mov
jbe
adc
push
lret
clc
lds
adc
inc
rolb
xorl
pusha
sub
push
jmp
mov
subb
test
fistps
dec
stos
cmp
xchg
dec
xor
mov
pop
mov
mov
fs
push
push
adc
andl
push
mov
push
lcall
and
jb
out
pushf
fmulp
mov
push
ljmp
and
aaa
push
cld
mov
push
xchg
clc
pop
xor
or
mov
incl
fidivrl
repnz
cmp
pusha
rcll
movsb
fildl
insb
or
cmpb
call
loopnew
pop
and
jae
movsb
popa
int
lock
and
xor
xchg
add
out
int3
mov
sub
in
and
clc
and
in
jg
pop
js
lock
jp
dec
mov
add
and
mov
mov
inc
or
push
or
push
pop
in
pop
call
loope
cmpsb
inc
xchg
sti
in
push
jo
dec
stos
repz
cmp
ljmp
aad
out
jp
sbb
pop
inc
jo
sub
mov
sub
pavgb
prefetchwt1
das
jbe
ds
cmp
sbb
inc
popf
push
cmp
das
dec
sarl
cld
inc
push
mov
mov
inc
mov
sub
mov
ds
scas
jg
pop
mov
incb
mov
and
push
das
or
call
ret
add
push
pop
pop
push
push
add
inc
cmp
mov
fmull
daa
andb
jbe
dec
inc
mov
cli
cwtl
dec
push
adc
in
pop
mov
sub
dec
push
dec
xor
cli
jp
push
lods
nop
push
icebp
inc
test
adc
ret
add
lods
add
and
inc
data16
ljmp
dec
push
js
inc
imul
inc
fidivrs
add
mov
rcl
ret
js
jns
mov
cltd
jno
out
sahf
jno
push
dec
mov
imul
inc
hlt
push
push
clc
hlt
and
test
lret
es
or
shll
lret
popa
sub
mov
mov
xor
mov
or
lods
and
push
ficoml
mov
jo
mov
sbb
push
xor
test
cmp
addb
out
loopne
cmp
bound
lds
or
pop
sub
xchg
pop
mov
sub
ficomps
xchg
or
js
sub
adc
adc
loope
xor
ror
or
pop
mov
loopne
loopne
lods
add
mov
lock
loop
or
push
push
jle
xchg
outsb
cmpsb
mov
and
imul
dec
mov
loopne
jns
arpl
cli
test
ds
cmp
fs
mov
dec
mov
dec
and
pop
add
pop
cld
scas
repnz
and
idivb
jge
push
pushf
push
pop
stc
std
mov
cwtl
jmp
sti
mov
add
insl
adcl
push
addr16
inc
xor
xchg
push
gs
mov
jg
adc
xorb
sti
out
pop
cmp
addr16
sub
inc
std
push
lods
dec
je
ds
xor
add
sahf
hlt
fcomip
jg
add
iret
jmp
sbb
test
xchg
pop
ret
imulb
mov
rorb
cli
leave
mov
cmp
sbb
sbb
je
lcall
clc
mov
xchg
push
or
or
xchg
fstpl
mov
mov
mov
cmc
xchg
and
mov
js
sub
insb
insb
cmp
sub
lock
aad
sub
sub
xor
jp
rcl
lods
test
cmpl
andb
xchg
sahf
xor
mov
adc
or
jno
mov
aad
xor
rolb
xchg
adc
outsl
incl
int3
jl
dec
jns
adc
mov
pop
ds
insb
add
pop
xor
mov
mov
mov
mov
into
in
xchg
push
ror
loopne
int
and
cmpb
pop
test
adc
cmovge
or
cld
lds
mov
jp
mov
repnz
in
les
jg
aad
or
dec
insl
and
inc
movsb
test
lret
jno
loope
outsb
mov
add
mov
add
mov
mov
jg
pop
jl
scas
loopne
fwait
xchg
inc
les
push
mov
int3
cmp
cld
xor
lods
loope
bound
outsl
jecxz
push
dec
jb
test
xor
sti
ss
mov
fisttpl
lock
sahf
pop
mov
dec
inc
ret
pop
mov
adc
push
pop
push
pop
pop
js
das
mov
add
jno
add
loope
incl
cmp
mov
scas
test
in
lahf
sub
cmc
inc
ds
mov
adc
mov
loop
fiaddl
inc
xor
out
adc
rorl
xchg
adc
inc
es
or
lahf
jno
cwtl
in
ja
or
cmp
sbb
dec
cmp
sbb
or
add
mov
fucom
cmpsl
adc
adc
outsl
rcrb
inc
outsl
sti
inc
or
in
xchg
ficoml
jns
ljmp
xor
popf
jb
push
test
ja
aaa
roll
popa
add
jp
push
cs
mov
mov
repnz
add
outsl
lds
outsl
fldt
lods
rcr
pop
xchg
dec
add
test
or
jecxz
ljmp
ficompl
popw
cmp
hlt
lock
shll
mov
rcrb
jp
mov
movsb
in
ljmp
fistpl
pop
insl
pop
icebp
iret
jp
push
cwtl
in
xchg
add
push
jne
pop
test
and
out
pop
dec
iret
int
inc
das
or
xchg
aas
icebp
stos
dec
add
lds
inc
mov
je
cmp
outsl
push
mov
mov
arpl
fmull
in
pop
lods
or
pushf
push
mov
ret
roll
lods
pop
sub
add
pop
popf
inc
fsub
pop
arpl
mov
leave
adc
cs
ret
aaa
movsl
repnz
mov
fucomip
jmp
fdivl
std
pop
add
push
rolb
jno
xchg
mov
add
pop
cld
or
cmp
shlb
cltd
pushf
pop
jecxz
incl
outsl
jecxz
mov
xchg
add
je
pushf
movsl
rcrb
xor
mov
adc
mov
ret
pop
rclb
mov
and
xchg
bound
xchg
add
psubusb
cli
ret
in
js
test
clc
pop
cmp
and
sbb
fwait
lock
mov
sub
mov
int3
sbbb
inc
movsl
mov
js
mov
jmp
test
test
test
popl
cmp
decb
sub
sbb
xor
inc
mov
push
and
add
mov
jb
or
adc
add
orl
mov
push
rolb
mov
mov
mov
das
out
ret
sub
gs
push
dec
adc
ljmp
jecxz
or
bound
mov
add
xor
sbb
fisubl
imul
out
add
enter
je
into
pop
cmp
dec
cmc
push
push
ss
add
shlb
ss
dec
and
cwtl
jb
out
mov
bswap
add
jg
xchg
or
mov
pop
rclb
pop
jg
nop
jno
fbstp
mov
sbb
wbinvd
mov
loopne
push
in
xchg
mov
outsb
shrb
add
nop
sbb
cmpl
and
xchg
xchg
mov
dec
icebp
xor
jne
push
add
mov
lock
jmp
out
add
lcall
pop
push
into
add
mov
jge
inc
and
cld
or
bound
sub
pusha
inc
sbb
inc
inc
rolb
shrb
add
dec
ds
pusha
cmpsb
outsb
push
ror
shlb
mov
je
ret
pop
push
ret
loopne
bound
daa
mov
sbb
add
pop
icebp
mov
adc
push
repz
pushf
jp
push
js
sub
loope
mov
inc
xchg
mov
and
leave
inc
fiadds
add
adc
bound
cmp
sub
pop
mov
inc
xor
cmpsb
ss
pop
mov
dec
lea
dec
test
mov
dec
push
xor
ret
nop
in
pusha
mov
adcb
popa
mov
jl
loop
pusha
add
sbb
cmpsl
jl
movsl
mov
shlb
inc
mov
lahf
out
mov
arpl
addr16
pop
arpl
xchg
cmp
sbb
lock
add
sub
es
repz
sbb
inc
or
roll
sub
in
mov
stc
inc
or
adc
in
push
inc
stc
or
add
jo
std
loop
mov
pop
fildll
std
add
sarl
adc
jnp
nop
push
jg
lret
ret
jb
repnz
aas
sbb
loope
fiadds
push
pop
call
mov
add
add
jae
mov
icebp
cmp
add
mov
mov
cmp
out
movsb
dec
add
fildl
or
mov
lahf
rcr
jns
stos
pop
shlb
or
repz
mov
inc
cwtl
ss
sub
sahf
pop
dec
mov
hlt
mov
lock
xor
insb
iret
jne
and
adc
adcb
test
jecxz
jg
pop
add
mov
stos
mov
loop
add
iret
mov
inc
shrb
adc
arpl
add
xor
mov
add
push
jge
cmpsl
pop
add
call
addr16
mov
movl
jnp
std
add
inc
push
push
xor
inc
loope
add
xor
notl
inc
xor
sub
roll
inc
scas
push
sub
xchg
test
sub
subb
addr16
flds
jge
pop
inc
dec
mov
popf
cmp
push
jno
leave
ret
inc
add
daa
lcall
je
repnz
lret
inc
jnp
xor
repnz
loopne
cmp
loopne
xchg
jae
jb
je
inc
and
imul
jge
fidivrl
sbb
pusha
stc
add
adc
sub
shrb
movsl
push
push
lods
cmp
pop
mov
lret
inc
sbb
add
cmpsl
mov
leave
xor
lret
movsb
inc
jl
sbb
mov
mov
aad
pusha
shlb
in
mov
daa
and
inc
jnp
test
andb
add
adc
cmpsl
jle
adc
add
outsl
loopne
cmpsb
xor
insl
clc
pop
and
xchg
sbb
sub
testb
pop
add
repz
jbe
cmc
mov
sbb
pop
test
cmc
repnz
jl
popa
lea
out
inc
mov
fstpt
pop
mov
pushf
nop
jnp
mov
or
and
mov
push
scas
fs
and
jg
or
idivb
test
dec
inc
adc
cs
mov
rolb
fwait
lret
push
xor
push
inc
data16
fldt
test
insl
and
cli
push
cmp
adcb
out
or
ds
or
jb
or
push
dec
enter
cmpl
mov
jns
lret
jp
rorl
pusha
mov
xor
ret
and
dec
sbb
or
out
mov
mov
fdivrs
adc
sub
or
insb
sub
shrb
pushf
adc
test
add
lds
sar
les
mov
bswap
stos
adc
pop
aam
outsl
mov
xor
scas
add
push
inc
jae
in
mov
mov
mov
mov
daa
pcmpeqd
xor
xchg
mov
cld
enter
inc
fmuls
faddp
in
adc
push
adc
mov
cs
mov
and
ljmp
clc
or
add
mov
jno
sbb
xlat
jg
scas
push
movsb
mov
popa
out
icebp
pop
testb
adc
jle
ret
jbe
pop
scas
cmpsl
add
and
or
clc
mov
shll
cli
lcall
pusha
rcll
pop
jg
pusha
push
push
dec
push
jo
std
cmp
fcos
ja
sbb
stos
bound
sbb
lret
sbb
push
xor
xor
mov
sub
and
hlt
xchg
and
dec
mov
bound
push
mov
pop
xor
add
push
es
pop
mov
jns
push
sub
sbb
pop
dec
add
cmp
aam
rcr
mov
and
in
pop
adc
adc
mov
aaa
imul
ss
pop
or
aaa
lock
sbb
add
ss
pop
int3
push
int
std
push
lock
repnz
pop
push
loopne
call
enter
sti
es
loope
inc
jecxz
lods
test
icebp
mov
xchg
and
jge
in
pushf
out
stc
mov
add
adc
loop
test
dec
jbe
inc
xchg
jno
xor
pop
jg
inc
add
adc
pop
popl
xor
xchg
push
add
or
loop
add
fisubs
lods
loop
xor
rorl
mov
mov
pop
mov
push
mov
mov
pop
xor
insb
xchg
xchg
movsl
cltd
or
arpl
fs
fldcw
scas
cli
mov
aam
pop
add
int
adc
pop
clc
mov
adc
mov
xchg
push
sbb
jp
xor
mov
sub
dec
jle
ret
and
or
cmp
lds
fsubrs
xchg
loopne
cmpsl
or
lcall
mov
fisttpl
jle
mov
arpl
mov
xor
out
addb
roll
xchg
in
adc
ja
scas
fiadds
jg
outsb
push
and
divb
std
mov
sarl
dec
lret
sub
cmc
and
jg
fcoml
in
push
mov
add
jge
mov
add
sbb
test
or
mov
pusha
repnz
add
movsb
sub
or
and
jbe
dec
mov
push
xchg
cmp
mov
inc
xchg
jmp
pop
cli
sbb
and
mov
pop
cmpb
lock
test
adcb
fiaddl
mov
xor
inc
out
push
jbe
hlt
stos
sbb
xor
mov
jle
call
imull
or
or
test
inc
rcr
sbb
xchg
and
xchg
xchg
divb
out
xchg
xor
jbe
ja
xor
lock
mov
xlat
into
test
or
or
les
mov
xchg
dec
imul
jecxz
into
inc
inc
fildl
jmp
add
mov
mov
xchg
add
out
or
cwtl
mov
jnp
jmp
pop
jg
rorl
pop
pop
adc
inc
add
popf
add
mov
sbb
mov
add
or
aad
scas
movsb
lea
mov
sub
mov
add
aaa
mov
test
stos
and
in
pop
decl
ljmp
adc
pop
dec
inc
imul
lods
or
cmpsb
mov
push
shlb
jbe
xlat
imul
test
push
adc
mov
pusha
mov
out
pop
call
mov
add
adc
mov
ljmp
sbb
lds
inc
out
les
ljmp
fs
jg
push
jbe
push
push
das
scas
push
loope
mov
aaa
les
or
xchg
dec
and
push
adc
aas
mov
adc
pop
insl
int3
push
mov
loope
mov
nop
and
sar
and
add
sti
xor
lahf
push
popa
fistl
popa
dec
pushf
inc
cmp
out
dec
add
into
xchg
mov
mov
popf
jge
loope
add
jbe
or
jae
adc
aas
mov
or
adc
inc
or
fidivrs
inc
fstp
jp
add
shrl
xor
adc
mov
jb
fcoms
loop
sbb
mov
test
call
push
xchg
cld
sbb
shl
test
lahf
push
sbb
dec
daa
cmp
mov
mov
cmp
adc
xor
cmc
test
dec
enter
inc
and
fbstp
or
lock
push
loopne
mov
call
lods
push
negl
outsl
rclb
adc
rorb
push
xchg
inc
stos
bound
xor
inc
cwtl
mov
dec
add
cli
incl
hlt
ficomps
enter
push
mov
sub
mov
dec
movsb
mov
cmp
mov
xchg
out
sahf
jle
shr
jne
orb
mov
iret
test
or
sub
divl
sbb
cmp
sub
mov
xchg
sbb
cmpsb
sbb
fs
rcll
and
sub
mov
shrl
xor
cld
jo
add
mov
xor
lock
mov
pop
xor
pop
clc
mov
or
pop
mov
xor
sbb
adc
and
sbb
ret
pop
stos
cmc
shlb
inc
sub
incl
sub
mov
dec
xchg
lock
cmp
jle
push
outsb
repnz
popa
dec
push
dec
push
out
jno
stc
xor
lock
pusha
roll
fisubs
outsb
dec
add
inc
jnp
int3
adc
mov
cmp
inc
inc
sti
ret
inc
jb
dec
stc
js
loope
add
sub
push
xor
enter
dec
push
inc
sub
dec
loop
incb
aam
fadds
add
mov
mov
pop
xchg
and
add
push
shrb
js
mov
pop
cld
shll
out
movsb
fiadds
aam
ret
adc
cli
mov
sbb
gs
in
inc
sbb
outsl
inc
scas
cli
or
data16
sub
repz
sub
daa
adc
mov
adc
push
sbb
test
scas
shrl
in
and
fs
and
xchg
xor
and
add
push
in
insl
shrb
mov
lcall
sub
xchg
pop
xchg
cli
xchg
pop
icebp
mov
push
and
nop
mov
in
cmp
popa
adc
repnz
cld
mov
adc
shl
dec
cmp
inc
mov
mov
fs
adc
ficompl
shlb
mov
cmp
push
mov
mov
adc
sbb
jo
mov
daa
dec
dec
xchg
cmp
repnz
pop
hlt
mov
stos
mov
popa
jp
or
cmp
jle
jo
addb
inc
xchg
add
push
or
pop
xor
jb
inc
or
adc
cmpsb
xor
lods
pusha
mov
mov
and
ja
add
cs
in
ja
cmp
add
fstps
add
nop
subl
sbb
cmp
or
cmp
test
leave
es
out
cmpsb
add
lcall
or
dec
xor
jle
cmp
dec
mov
add
add
adc
js
inc
clc
loop
push
daa
xor
jp
or
mov
popa
and
arpl
sbbb
sbb
xor
cmpb
outsl
sbb
sbb
enter
jb
rolb
into
mov
les
cwtl
decl
add
add
add
and
adc
mov
or
dec
xchg
out
out
je
pop
fidivs
int3
cwtl
or
mov
xor
outsb
mov
cli
mov
inc
inc
and
aas
inc
xchg
sub
push
adc
dec
add
mov
mov
and
push
dec
insl
inc
mov
jns
jecxz
inc
push
adc
inc
jle
mov
lds
clc
pop
loope
push
sahf
fs
fwait
cmp
in
pop
pop
push
ror
popf
and
aaa
lods
jns
mov
mov
test
cmpsb
cmc
jecxz
icebp
out
mov
mov
push
dec
sbb
sbb
sub
and
faddl
and
xor
push
test
add
pusha
sarl
or
lahf
shlb
ret
or
ret
pop
mov
ljmp
mov
push
ljmp
jecxz
jle
pop
push
adc
or
sub
xor
add
jne
xchg
cmp
sub
in
stos
cmp
or
dec
ss
adc
pop
inc
test
mov
push
mov
lcall
cmp
fidivrs
inc
andl
jp
push
lret
dec
test
mov
divl
push
outsb
push
nop
and
xchg
and
and
lahf
push
js
cmpsb
lahf
jp
inc
push
shll
sahf
xchg
mov
imulb
push
nop
fdivrp
aas
ss
rcl
std
lahf
arpl
lods
pop
test
es
call
inc
pop
cld
pop
push
outsl
cmp
repz
cld
fldl2e
pop
and
insl
inc
cltd
add
lock
jl
inc
xor
bound
cmp
sbb
mov
mov
lret
mov
sbb
mov
fidivrl
inc
mov
xchg
add
add
dec
scas
aam
inc
xor
mov
cmp
lahf
jmp
adc
mov
push
pop
leave
pop
clc
mov
jecxz
push
insl
lods
mov
fnstcw
cmp
clc
test
cltd
enter
pusha
cmpb
scas
movsb
lds
xor
sbb
sbb
vmovmskps
sbb
nop
adcb
sbb
loopne
andb
decl
ja
mov
ss
push
jb
mov
mov
mov
cmp
fisttpl
jae
cmp
xlat
adc
push
aas
mov
mov
jbe
push
mov
xor
dec
mov
push
push
sub
ds
pop
fcoml
mov
push
cwtl
fidivs
ljmp
inc
cli
jmp
and
xchg
lahf
bound
mov
push
cmp
loopne
int
addb
andb
sub
cmp
loop
addb
mov
inc
scas
xchg
jbe
cmc
xchg
out
sbb
loopne
or
repnz
int3
dec
lock
mov
cltd
jg
stos
push
enter
sbb
das
jecxz
pop
test
ja
xchg
clc
add
jmp
insl
hlt
enter
and
adc
sbb
je
xchg
ficoms
adc
leave
sbb
js
and
loopne
popa
in
or
cmp
sbb
cli
sbb
cmpb
inc
mov
xor
and
xor
cmpb
cli
sbb
cwtl
or
aas
push
ja
jb
and
mov
loope
lds
inc
inc
or
add
push
inc
pop
inc
mov
out
js
jmp
shlb
scas
aad
jg
lret
mov
mov
sbb
imul
mov
aaa
pop
pop
je
cmp
dec
incb
or
inc
mov
adc
stos
add
test
sbb
inc
inc
popf
xchg
adc
push
mov
inc
sbb
mov
pop
rcrl
add
ficompl
outsl
or
mov
mov
sbb
jle
xor
jge
es
add
mov
fcomps
outsl
lret
or
lcall
shr
and
lea
jo
rorb
aaa
inc
out
pop
cmp
xchg
js
flds
mov
jmp
cmp
cmc
mov
push
xor
pop
addb
popf
cwtl
movsb
outsb
xchg
mov
std
lret
push
pop
popf
cs
mov
in
arpl
add
enter
ja
or
imul
aad
ljmp
mov
adc
adc
addb
inc
jmp
in
mov
sarb
cli
lret
xchg
daa
xor
or
push
push
cld
es
scas
andb
and
call
sbb
loop
pop
ffreep
sub
push
add
rcrl
pop
das
rorb
aam
xor
mov
je
inc
mov
add
cmc
aaa
js
aam
or
pop
cld
ffreep
stos
or
adc
mov
ds
sarb
ret
xchg
sub
mov
aad
icebp
aaa
movsb
daa
add
sub
cmp
lds
add
cltd
jbe
cmpsb
das
mov
arpl
outsb
xchg
daa
sahf
fwait
sub
push
or
jnp
pop
rorb
icebp
xor
aas
sahf
mov
add
add
cmp
push
incl
adcb
sub
aas
cmp
jle
mov
std
inc
lahf
lock
xchg
movsl
mov
jl
aad
pop
rorb
stos
cmp
sub
pop
mov
in
roll
xor
add
cli
jl
call
dec
push
add
in
mov
pusha
andl
ja
pushf
subl
test
pop
inc
movsl
leave
ret
sub
sub
mov
leave
xorb
jb
jl
jecxz
dec
mov
jb
sbb
mov
call
fists
pop
dec
xor
and
pop
popa
xchg
jle
sbb
cld
hlt
xchg
lret
nop
lcall
adc
aas
jle
mov
fs
dec
ljmp
cld
pusha
fcomps
test
fstpl
cld
ret
push
sub
scas
test
adc
push
test
xchg
sub
les
leave
test
insl
xchg
jo
push
mov
xchg
add
sbb
bound
xabort
jno
jns
pop
testl
inc
lods
arpl
add
cmp
rcrb
dec
cmc
xor
ja
cld
adcb
pusha
inc
mov
ljmp
negb
outsb
jge
pop
ss
lods
clc
aaa
rolb
and
hlt
xchg
adc
inc
popf
xor
mov
lcall
sub
shrb
jecxz
add
xchg
pop
in
je
add
and
loopne
pop
clc
ficompl
loope
sbb
mov
adc
cmpsb
xchg
es
inc
in
push
add
out
fwait
test
xchg
and
sbb
stos
sbb
es
inc
lea
divb
mov
jmp
pop
in
in
pop
test
xor
clc
or
mov
mov
xor
dec
add
xor
movaps
xchg
test
mov
mov
cmp
int
xor
movsb
push
add
les
cmp
notb
sbbb
or
jg
add
shrb
decl
jmp
in
scas
jne
push
out
movsb
or
or
das
and
push
push
loop
cwtl
xchg
fstpl
scas
out
inc
bound
sarl
rcrb
xchg
ljmp
les
leave
and
ljmp
or
push
shrl
inc
mov
out
scas
ja
outsb
out
mov
iret
jnp
mov
rcl
les
mov
xchg
add
or
inc
mov
int3
pop
adc
inc
mov
mov
dec
xchg
fcomip
decl
jbe
xchg
jae
icebp
cmp
jg
jmp
cmp
and
pop
sub
jmp
fisubs
test
mov
dec
jge
bound
dec
ljmp
mov
pop
mov
cld
loopne
frstor
push
jb
js
addl
cmp
loop
dec
les
mov
mov
push
xor
int
pop
pop
scas
loope
rclb
pusha
scas
add
push
jb
or
adc
and
repz
and
cmp
inc
mov
push
icebp
sarb
mov
ljmp
push
xchg
cli
fcoms
lods
push
ljmp
add
push
repz
loopne
xchg
adc
add
mov
xchg
insb
mov
mov
sbb
xor
mov
dec
fcoms
or
pop
adc
addl
xchg
out
rorl
xchg
das
inc
in
xchg
lods
aas
xor
add
frstor
jns
adc
mov
add
jle
loope
popa
dec
sbb
jmp
cli
gs
adcb
sarb
xchg
imul
xchg
cmp
pop
adc
sarb
mov
pop
or
nop
cli
sbb
mov
dec
ja
dec
clc
cltd
pusha
clc
add
loopne
dec
xchg
inc
jp
mov
push
arpl
test
push
add
loope
pop
je
jo
data16
mov
cmpsb
mov
ss
jl
bound
repnz
les
fcmovnb
fucomip
icebp
push
jp
sti
inc
inc
sbb
push
or
cmp
aaa
cld
sbb
mov
inc
cmpsl
mov
sti
inc
cmp
sub
ss
faddl
enter
mov
mov
pop
cmc
push
add
ret
or
inc
and
dec
je
xor
xchg
sbb
cld
rolb
jmp
sub
and
inc
test
aas
sbb
pop
imul
in
cli
and
insl
jmp
adc
loope
stos
or
leave
pushf
or
call
test
jb
out
fbstp
bound
rolb
and
mov
out
out
popf
jecxz
pop
xor
cld
add
movsb
loope
adc
mov
mov
jbe
inc
xchg
mov
jp
xchg
xchg
ss
dec
icebp
aaa
std
fadds
loope
add
mov
outsb
push
xchg
pop
pop
jb
jge
hlt
pop
test
xor
mov
mov
ret
adc
jecxz
and
clc
pop
cld
lcall
sbb
add
cmpsl
adc
jge
sub
sbb
or
loope
movsb
repz
cld
fidivrs
cld
cmp
xor
shlb
dec
sti
add
nop
imul
or
rorl
mov
les
data16
ficompl
or
filds
lock
cmpsb
cmpsl
in
das
movsb
or
lock
jp
adc
lods
fwait
insb
sahf
cmc
aaa
jmp
jl
adc
and
sbbb
ficompl
or
pop
cmp
mov
jle
loope
nop
mov
stc
pop
mov
sbb
outsb
test
jg
std
jecxz
mov
into
inc
push
dec
das
mov
pushl
ror
xchg
adc
xchg
dec
sarb
mov
jle
call
mov
js
lcall
mov
jo
mov
pusha
les
pandn
testb
dec
push
cmp
fs
xchg
jge
cmp
sub
add
cwtl
fmuls
dec
jo
mov
sub
xor
add
ret
imul
jno
push
push
ror
add
jmp
ror
fisubrs
mov
mov
aad
mov
inc
loope
iret
and
inc
fildl
cld
push
fdivp
ljmp
nop
loopne
adc
mov
pop
mov
sti
mov
adc
sbb
test
mov
imul
mov
lcall
pop
jb
sbb
xor
jmp
inc
jl
aam
ljmp
outsl
incl
adc
es
pop
sbb
movb
lock
addl
movsb
pop
pop
jo
xor
mov
pop
xor
dec
dec
xchg
push
inc
mov
pop
lea
cli
push
call
jo
dec
inc
lea
push
pop
arpl
incb
jmp
ret
roll
popf
mov
js
inc
push
fs
push
repnz
dec
mov
shlb
pop
mov
jne
loope
adc
push
dec
cwtl
cld
push
data16
bound
jae
inc
and
call
imul
push
cs
test
dec
push
outsb
ret
xor
dec
stos
cli
mov
inc
pop
gs
sbb
xor
xchg
dec
jbe
jne
data16
outsb
jns
int3
fldl
cmp
xchg
add
arpl
outsb
bound
cmp
jle
rcrl
lods
push
push
mov
jno
shrl
mov
imul
push
pushf
dec
add
or
test
push
idivb
rorl
repnz
mov
xlat
mov
pop
ss
dec
mov
xor
mov
lods
push
push
dec
enter
and
push
xor
rorb
fmul
inc
inc
mov
xchg
imul
push
dec
and
inc
adc
mov
dec
cmp
aaa
push
jmp
rcrb
inc
inc
fdiv
decl
into
jl
dec
pop
js
in
movsl
add
subb
ret
xor
mov
mov
sbb
lcall
stos
call
xchg
or
fwait
jne
inc
test
push
sti
add
xlat
xchg
test
sbb
mov
in
hlt
pushf
faddl
jmp
xchg
mov
idivb
out
pop
push
xchg
out
mov
js
scas
enter
lods
or
dec
fcos
bound
mov
popa
ss
or
add
clc
pop
push
sub
das
leave
dec
leave
sbb
mov
or
xchg
sub
xor
mov
sbbb
sti
ljmp
cmp
xchg
lret
cmpsl
xor
lds
rorl
mov
jo
clc
push
testb
jno
xor
fmuls
push
inc
add
shlb
mov
lock
adc
cmpsl
and
test
std
cmpsl
pop
lret
int3
in
cmp
cwtl
add
cmpb
insb
mov
push
lcall
push
fldenv
sbb
pop
xor
mov
and
ds
jg
add
stc
test
cwtl
mov
je
scas
mov
add
roll
mov
jbe,pn
push
or
mov
insb
push
xor
add
mov
mov
jl
push
arpl
popf
js
dec
cmp
fldl
or
add
xchg
leave
lret
adc
add
xor
add
sbb
sub
sub
jg
outsl
xchg
sbb
add
jl
shrb
shrb
jo
je
push
loopne
and
stos
movsb
inc
sbb
ljmp
add
sbb
dec
jp
incl
les
inc
push
in
dec
push
cmp
mov
cmpsb
adc
mov
or
adc
pushf
push
or
stos
fldl
mov
add
and
rcll
clc
movsb
psraw
xchg
adc
dec
xchg
jg
add
in
hlt
sbbl
sahf
cmp
lea
adc
mov
clc
mov
jo
sbb
cmpb
fdivp
stos
hlt
xor
add
xchg
and
sbbb
cmp
jmp
dec
loopne
sub
divb
mov
ret
or
xchg
jecxz
jb
mov
mov
mov
sbb
dec
jl
mov
js
test
repz
sub
loop
push
scas
cli
es
xchg
mov
fdivp
enter
dec
mov
loope
imul
out
dec
or
add
and
outsl
lcall
loop
inc
fnstcw
daa
lea
sbb
push
push
adcb
fwait
es
adc
inc
cld
ret
test
test
add
cwtl
cmp
and
cmc
lret
clc
or
push
sub
adc
or
inc
bound
jbe
inc
add
jb
sar
push
rcll
push
outsl
xor
loopne
or
je
lret
mov
cld
test
sbb
rclb
sub
inc
test
inc
inc
sar
mov
push
or
add
in
movl
in
enter
add
shl
xchg
ljmp
cs
cli
sbb
dec
lcall
jp
push
out
ja
push
scas
mov
fimuls
push
pusha
daa
add
and
pop
nop
aaa
mov
je
push
push
and
inc
inc
js
jge
sub
push
inc
jae
and
icebp
sbb
sahf
ss
clc
adc
fldz
das
sub
ja
stc
push
loop
xchg
mov
hlt
imul
xchg
add
sbb
push
push
jle
xor
xchg
xor
lods
add
in
aad
cmp
push
lret
lock
sub
rcl
cwtl
jae
test
jge
mov
aam
pop
lods
and
lret
pop
ljmp
cli
pop
scas
frstor
cs
cmp
test
push
pop
sbb
mov
leave
test
aaa
lods
sbb
xchg
and
xor
xchg
aad
dec
pop
mov
out
jmp
lods
rcrl
hlt
shl
je
and
push
sbb
cmp
push
pop
lock
jnp
jb
orb
fiaddl
mov
addr16
or
or
and
mov
and
lods
aas
mov
fs
inc
sub
stos
mov
cmp
lods
mov
popa
adc
xchg
lret
rcrb
loop
decl
xor
adc
mov
in
rclb
bnd
roll
or
rolb
inc
rcll
add
and
add
fs
jb
lret
out
lock
push
adc
xorb
mov
loopne
sbb
cmp
jb
adc
jmp
into
and
cmp
sub
call
jno
mov
push
mov
aaa
sbb
xchg
cwtl
or
cmp
lea
add
or
lock
mov
jns
scas
sub
insl
ss
shl
cmc
pop
subl
data16
test
jge
jmp
or
js
aad
sub
mov
cmp
loopne
pop
test
roll
jg
jl
dec
adc
pop
xor
lea
mov
js
fsubrp
pop
pop
lock
sbb
aaa
scas
cmp
inc
dec
lcall
ror
pusha
nop
sbb
out
adc
add
xchg
ss
mov
dec
push
push
push
adc
call
in
aad
pop
hlt
fistl
mov
test
mulb
imul
sub
and
dec
cmp
lock
sbb
aaa
pop
hlt
call
or
sub
lock
push
fnstcw
aam
addb
jecxz
iret
cmpsb
ljmp
hlt
dec
sbb
ret
and
add
xchg
js
cmc
adc
xor
jne
imul
sbb
sbb
fistpll
lret
andl
repnz
into
and
add
lods
push
cwtl
sarb
lcall
scas
insb
ja
test
test
mov
fsubl
inc
loope
mov
adc
jecxz
iret
xor
add
mov
inc
mov
xchg
inc
popf
mov
test
adc
bound
sbb
rcrl
adc
adc
out
ljmp
jne
xor
add
or
cmp
adc
icebp
sarl
xchg
inc
nop
pop
add
mov
ret
mov
sbb
adc
or
decb
push
xlat
aam
imul
aad
xchg
push
pushaw
loopne
adc
outsb
ja
out
mov
pop
iret
adc
popa
mov
cmp
push
insb
push
fs
mov
icebp
xor
add
mov
fdivp
jg
subb
je
mov
push
sbb
pushf
ret
fnstsw
cli
mov
js
lods
cmp
mov
add
iret
loop
push
push
cli
add
stos
outsb
or
sarl
pop
dec
mov
sti
ja
aad
or
cmp
mov
mov
xchg
add
fwait
inc
mov
mov
inc
inc
xchg
adc
cmp
nop
add
pop
cli
scas
sbb
sbb
mov
out
push
stos
pop
dec
cli
dec
cld
call
add
cld
pop
lds
ss
push
mov
test
and
test
scas
adc
pop
cmc
inc
sub
dec
jmp
fs
subl
cmp
mov
lods
pushl
sub
adc
push
dec
insb
lcall
in
stos
cmp
test
mov
lea
sbb
cli
inc
mov
outsb
add
jmp
inc
sahf
dec
inc
loop
and
mov
inc
jge
aad
pop
xor
add
and
mov
in
dec
es
push
fs
sbb
push
dec
jb
mov
mov
mov
dec
sbb
clc
pop
mov
or
cltd
sbb
inc
nop
ret
inc
js
cld
aam
pop
outsl
jne
jnp
add
push
das
sbb
jo
jo
das
ja
daa
mov
mov
je
ds
sbb
mov
test
mov
rcll
inc
inc
daa
push
dec
push
cltd
loopne
jp
push
xor
clc
jmp
es
outsl
jmp
movsl
sar
dec
jae
ljmp
xor
movb
push
dec
cmp
sti
xor
testl
cmc
or
push
clc
or
arpl
je
sbb
xor
inc
xor
lock
dec
cld
pop
fnsave
fcomps
dec
jecxz
shl
add
pusha
sbbl
ficomps
insl
add
dec
aam
xor
lock
sub
mov
or
je
xlat
clc
cmp
mov
mov
into
ret
sub
je
in
icebp
mov
dec
add
mov
pop
push
hlt
sub
jmp
mov
xchg
adc
mov
pushf
hlt
fsubrs
and
pop
imul
add
loop
test
jo
pop
fstl
or
movsb
fsubs
push
ds
add
push
pop
clc
orb
sub
into
mov
ret
cmp
es
bound
cmp
test
and
mov
and
push
mov
mov
ja
add
push
cwtl
add
repz
and
dec
xchg
outsb
and
test
aam
lock
aaa
test
mov
idivl
mov
jmp
popf
aaa
cmc
aas
ret
es
xchg
mov
inc
clc
fwait
sub
addr16
inc
std
fs
mov
xor
dec
sbbb
inc
cs
inc
and
push
int
nop
lret
pop
mov
adc
cs
add
push
sbb
add
jbe
xchg
mov
mov
imul
push
aaa
sbb
les
jo
mov
sub
jo
dec
loopne
mov
dec
push
ffreep
scas
ret
dec
repnz
stos
xor
decl
sbb
sahf
jnp
popa
pop
hlt
push
scas
loopne
mov
pop
xor
fcmovb
mov
sub
insb
js
pop
xchg
or
xchg
mov
and
sar
test
das
ret
xchg
daa
mov
idiv
rorl
jle
lods
mov
push
fdivrl
ljmp
movb
call
lcall
in
dec
add
sub
pop
scas
push
inc
push
stos
mov
aam
xor
stc
xchg
hlt
popa
fstpl
mov
insb
pop
dec
and
icebp
rorl
outsb
push
jo
mov
movsb
add
xor
adc
or
cmp
cwtl
mov
test
repz
sub
mov
cmp
inc
lret
or
enter
shll
sub
inc
outsl
or
and
outsl
ja
pop
mov
push
fdivrs
dec
incb
clc
lock
shll
dec
shl
or
test
out
push
into
sub
or
stos
stos
dec
and
jb
mov
adc
mov
sahf
mov
call
add
add
or
lods
daa
push
or
mov
test
and
mov
and
movsl
sub
cmp
xchg
jbe
lock
pushf
add
sbb
inc
rcrl
xchg
lcall
pop
dec
mov
xlat
mov
ljmp
repnz
test
test
push
or
sbb
loopne
je
mov
add
cmpsl
repz
leave
adc
sub
jmp
insl
clc
add
stos
ret
push
sub
adc
mov
jbe
testl
daa
arpl
and
mov
sbb
sbb
andb
jp
fcoml
jno
pop
xchg
pop
fs
pusha
pop
ficompl
mov
jne
int
nop
es
dec
mov
pop
add
test
push
sbb
pop
in
dec
decl
dec
cmp
mov
add
mov
loopne
adc
inc
aaa
fidivrl
pusha
mov
mov
rol
lea
cltd
js
in
pusha
push
add
adc
std
pop
pop
jmp
push
fisubs
or
icebp
inc
mov
lahf
xor
std
shll
test
xlat
mov
push
jle
mov
mov
cmp
aam
cmp
inc
lock
lods
lods
je
mov
inc
popf
add
imulb
leave
andb
and
add
adc
push
adc
icebp
jg
fadd
jns
in
rorb
dec
inc
cwtl
mov
inc
lcall
jge
mov
add
xchg
scas
cltd
and
sarl
inc
out
or
and
sbb
push
pop
iret
jne
adc
cmpsl
les
movb
test
push
icebp
filds
xor
pop
pop
push
fidivrl
mov
xor
add
sarl
pop
stos
or
jo
adc
or
test
insl
push
jge
out
mov
ds
lcall
add
les
xchg
jo
pop
movsl
sub
lods
rolb
push
inc
adc
or
add
aad
in
lcall
jle
sbb
pop
cltd
daa
xchg
xor
out
ljmp
or
xor
and
sub
jge
andl
push
dec
shlb
cmp
daa
js
pop
push
test
sti
rol
xchg
lcall
dec
pop
icebp
pusha
add
int3
pushl
pop
inc
add
fimuls
add
mov
push
pop
add
push
in
sbb
push
call
dec
out
mov
sub
push
push
or
mov
xor
out
xlat
add
sar
sbb
loop
jge,pn
sbb
mov
cmp
adc
rol
decl
imul
out
call
dec
stos
insb
and
jle
adc
add
adc
add
je
or
push
cmp
int
fsubs
dec
insb
sbb
int3
outsb
sti
jo
add
mov
jmp
incb
push
mov
jnp
add
pop
mov
sbb
push
or
mov
mov
outsl
jecxz
cmp
and
cld
in
jl
xor
cmp
jp
cmp
pop
adc
add
iret
rorl
push
add
sub
sbb
mov
imul
mov
jb
jp
push
xchg
xchg
pop
pop
adcl
dec
and
andb
pop
pop
ss
lcall
dec
jae
add
cmpb
sub
test
loope
call
and
push
dec
add
jecxz
mov
hlt
dec
sbb
jl
sar
outsl
enter
jl
xorb
xchg
fcomp
jl
mov
and
xchg
cwtl
lods
mov
sub
inc
or
out
xor
rorl
iret
cmp
insl
or
out
jge
mov
lea
fs
push
xor
paddb
clc
jnp
cmpsb
repz
aas
sub
cld
inc
pushl
add
add
pushf
lret
je
lret
in
mov
int3
incb
xchg
das
xor
lds
adc
bound
sub
rorb
add
ret
aas
xchg
xorl
test
adc
popa
ja
or
imul
xchg
lds
dec
addr16
imul
int
or
jg
and
mov
dec
std
das
fimuls
lea
jecxz
pop
fisubrs
fimull
mov
mov
mov
mov
adc
lods
shlb
fnstsw
scas
out
lcall
lcall
mov
pop
xor
pusha
mov
cwtl
mov
fadds
stos
xor
dec
xchg
or
mov
hlt
jae
filds
jmp
inc
enter
gs
or
js
pop
and
aas
push
ja
sahf
mov
xor
enter
das
ret
mov
push
mov
outsl
jmp
dec
jle
aaa
push
inc
ja
lock
mov
xor
ja
dec
mov
add
fdivrl
mov
dec
push
inc
dec
fs
add
adcb
jle
js
xchg
fadds
dec
ja
arpl
ret
pop
ret
pop
pop
mov
sub
or
xor
add
add
sti
dec
andl
push
sub
jns
xor
inc
rorb
inc
add
imul
iret
out
lds
imul
js
xorl
jbe
lds
add
scas
mov
xor
inc
loopne
dec
js
cmp
cmp
pusha
push
mov
dec
lea
arpl
cmpsb
popl
push
mov
int
int3
adc
add
jbe
fadd
mov
adc
mov
jecxz
cmp
inc
xchg
insl
jl
push
xchg
int3
sub
add
loop
fwait
shlb
mov
inc
idivl
mov
mov
addr16
arpl
cmp
jae
cmpsl
das
mov
fwait
mov
cwtl
xor
andps
xchg
sahf
loopne
outsl
int
add
xchg
mov
add
xchg
pusha
clc
lods
rorl
ret
cld
in
mov
lock
out
jbe
pop
inc
jno
xor
sub
cmpsb
divb
fstpt
jmp
popa
sub
push
jge
lods
hlt
dec
dec
or
mov
imul
and
mov
add
pop
jg
rclb
jg
xlat
mov
xchg
sahf
inc
push
fadds
jecxz
jbe
outsb
jbe
or
pusha
mov
icebp
push
sub
xor
sub
aad
cmpsb
pop
push
mov
es
les
stos
test
sub
mov
mov
jle
pushl
xor
out
add
jmp
jle,pt
mov
lock
inc
xchg
movsl
xchg
add
clc
je
sbb
jno
cmp
lock
mov
jecxz,pn
xchg
add
movsl
mov
popf
mov
enter
es
std
dec
mov
mov
cld
rcr
shll
out
repz
add
and
cld
pop
shr
adc
pushf
test
mov
push
dec
sub
clc
sbbb
mov
xor
cmp
dec
push
fidivrl
or
fsubs
adc
jl
repnz
pop
bound
out
lcall
pop
mov
inc
scas
sub
pop
std
mov
scas
test
dec
mov
jge
xorps
cmp
adc
cmp
lret
test
mov
xor
xchg
rclb
mov
pop
add
pop
and
and
push
mov
xchg
cmc
and
xor
xchg
add
mov
jno
ljmp
jo
ret
out
xor
aad
loop
cs
out
push
sub
or
cwtl
mov
mov
sbb
cmp
aad
mov
push
cs
ret
mulb
mov
lcall
cmpb
mov
jno
or
lcall
or
pop
test
push
xchg
xlat
aam
and
pop
gs
mov
arpl
ljmp
adc
cmp
int
jmp
sub
jle
orb
dec
bound
mov
lcall
sbb
dec
dec
subb
movsl
test
pop
cltd
inc
fdivrl
xlat
dec
add
xchg
cs
xchg
adc
mov
adc
jle
lcall
std
lcall
push
inc
adc
js
pop
ret
dec
fprem1
aaa
xchg
xchg
jno
push
adc
mov
inc
ss
popa
adc
pop
inc
stos
scas
loop
pop
and
sub
ret
loopne
inc
or
repnz
fwait
sbb
and
xchg
inc
shlb
shr
sbb
push
mov
add
jl
fimull
or
in
xor
pop
repz
shlb
sub
mov
mul
iret
push
cmp
shr
jmp
and
dec
inc
movsl
adc
dec
jl
jl
imul
pop
xchg
je
orb
test
inc
pop
push
xchg
push
hlt
jl
mov
or
inc
cli
decb
mov
daa
add
dec
push
dec
scas
lock
push
popa
xchg
pop
push
mov
cs
lahf
and
adc
icebp
sub
xchg
mov
icebp
notl
mov
inc
insl
jns
push
jbe
sbbb
inc
into
add
cltd
push
pusha
lock
icebp
fdivrs
push
fadd
push
rcrl
adc
push
aas
hlt
test
dec
xchg
add
cmpsb
cwtl
orb
dec
xlat
pop
bound
add
icebp
lcall
push
roll
jo
mov
xor
add
sbb
mov
imul
sub
daa
movsl
cltd
sub
mov
mov
movsb
sti
push
enter
cmpb
xchg
push
out
leave
cmovae
scas
fisttpll
popa
push
push
cmp
inc
sub
mov
ss
icebp
sbb
jecxz
lock
gs
sar
adc
cmc
imul
mov
shll
lods
popa
fldcw
fsubs
mov
mov
cmp
hlt
push
lds
push
jno
and
inc
sti
cmp
adc
pop
fcmovbe
lock
or
mov
fsts
pop
mov
mov
mov
js
ljmp
outsl
and
and
xchg
pop
dec
cwtl
cmp
ds
stos
sbbb
popf
and
mov
scas
stos
lock
ret
std
pop
jnp
mov
push
mov
dec
enter
dec
ljmp
fs
inc
movlps
xor
mov
mov
pop
call
outsl
fsubrs
add
cmpsb
sbb
dec
cmpsb
ret
and
sbb
dec
pop
loop
clc
push
cwtl
clc
adc
les
outsb
subb
cmp
into
mov
xchg
push
stc
push
xor
lods
push
push
pusha
es
jnp
jno
pop
movl
leave
aam
ljmp
xchg
mov
pop
mov
add
pop
in
push
or
test
xchg
lcall
add
stc
jmp
loop
or
or
sti
mov
xchg
mov
ret
test
mov
inc
sbb
out
cmp
andl
cli
or
loopne
loopne
data16
jo
clc
mov
mov
jae
push
mov
jl
in
gs
push
sub
and
push
sub
out
add
jmp
sbb
dec
fstl
and
mov
cmp
jl
jb
adc
mov
insb
xor
lds
or
in
jp
dec
add
into
add
push
in
cmp
inc
shl
mov
mov
mov
and
sub
shll
jbe
xchg
add
mov
scas
mov
outsb
xchg
inc
add
addl
ret
dec
loope
push
addb
sub
xor
cmc
xchg
mov
pop
jl
cld
ret
dec
jo
inc
clc
pop
mov
or
or
call
subl
mov
daa
and
fld
mov
push
mov
fistpll
mov
xor
std
jg
call
out
loopne
insb
into
lock
push
xor
and
xor
xchg
pushf
int
adc
cmp
enter
add
mov
roll
xchg
ljmp
insb
addb
inc
mov
add
std
pushw
outsl
fimuls
cwtl
jo
xchg
sbb
mov
in
push
lret
adcl
loopne
pop
ja
push
push
dec
cmp
or
decl
add
cmp
subb
fscale
pop
lods
hlt
in
jne
stos
inc
hlt
mul
es
jb
dec
xchg
ds
aam
jbe
subl
adc
scas
ss
dec
jo
mov
aam
cmp
jl
movsl
mov
mov
sbb
cli
xchg
sub
jnp
add
or
repz
adc
pop
or
jl
add
lods
fdivl
mov
loope
scas
xchg
test
inc
push
ret
push
jo
adc
jge
dec
mov
adc
orl
stos
jo
jl
sarl
pop
sbb
or
push
sbb
pop
das
shlb
sub
insb
adcl
fwait
push
cmp
lret
xor
dec
addr16
push
test
fcmovb
clc
lcall
fs
into
dec
mov
ficoml
push
fwait
sti
mov
into
dec
pop
arpl
icebp
dec
push
cld
jg
sbb
sub
addb
inc
dec
add
add
jbe
cmp
or
popf
mov
ds
enter
jno
sub
ret
push
jmp
push
decb
jg
pop
movsb
divb
add
inc
sub
xor
lds
shrl
aad
sub
adc
subl
popa
repz
fs
jmp
out
mov
test
out
or
mov
push
jne
xchg
jecxz
popa
push
push
lret
cs
test
cli
das
or
lahf
add
stos
dec
or
add
fdivrl
inc
push
movsb
mov
sbb
data16
add
lret
jge
outsl
push
or
mov
or
or
xchg
sbb
lods
mov
add
frstor
sbb
shrb
pop
adc
mov
mov
pop
sub
dec
fdivr
add
dec
xchg
mov
jg
inc
cwtl
xchg
and
sbb
popf
sarb
inc
hlt
and
mov
cmp
mov
out
jb
inc
mov
es
jmp
push
adc
jae
mov
in
cld
ljmp
and
stos
movsl
push
add
xchg
or
movsb
xor
in
ljmp
add
cltd
or
cmp
dec
mov
cmp
shll
movsl
push
pop
jg
fs
xchg
cli
outsl
xchg
push
add
call
or
or
cwtl
jb
pop
mov
mov
adc
daa
add
inc
aad
cmpsl
hlt
mov
in
js
pop
loope
scas
or
push
adc
jp
sub
xchg
sub
mov
dec
or
push
je
or
jle
lea
adc
jl
xchg
push
fcmovbe
mov
rcrl
fnsave
push
mov
jle
or
mov
arpl
and
jno
cmpsw
pop
pushf
add
pusha
mov
cwtl
jl
mov
xchg
scas
cli
mov
aas
jbe
adc
push
ret
icebp
inc
dec
mov
or
jl
je
bound
adc
aad
lret
and
rorl
pop
jg
ja
clc
mov
ret
nop
push
or
lea
adc
ret
sbb
mov
sub
pop
xchg
pop
rcrb
jmp
dec
popf
jo
mov
xor
mov
xor
adc
xchg
cld
pop
sbb
mov
js
jmp
mov
xchg
data16
jmp
inc
mov
out
sub
pushf
aam
jl
push
mov
or
dec
cld
cmp
mov
clc
push
test
push
into
inc
push
aas
nop
push
inc
fistpll
mov
hlt
aam
inc
xor
movsl
sub
clc
mov
aad
cmp
and
incb
xchg
insb
dec
adc
push
aam
repnz
sbb
push
and
mov
jl
or
lret
popa
loopne
mov
ret
or
clc
add
gs
ljmp
aam
xchg
pop
scas
movsl
or
xorl
je
rcrb
jnp
clc
add
sbb
ds
push
icebp
pop
cld
mov
std
ljmp
add
mov
push
test
push
incl
pushf
js
sbb
pop
in
loopne
nop
imul
ljmp
dec
cmp
nop
bound
sbb
cld
pop
cmp
cli
out
and
adc
insl
mov
cmpsb
sbb
inc
xchg
scas
and
cld
mov
sub
es
adc
mov
sub
pop
inc
jle
jecxz
sarl
mov
in
mov
mov
ja
mov
sub
movsb
xlat
cld
lcall
inc
push
and
add
xor
out
add
or
inc
or
push
adc
sti
jmp
ret
xor
fnstenv
fldl
sub
push
mov
mov
add
in
add
jge
adc
mov
cmp
shr
pop
cmp
lahf
sbb
sub
push
pop
xchg
mov
xor
lods
and
div
jg
ljmp
cmc
dec
mov
dec
jb
pop
pusha
or
sbb
push
and
aam
sub
add
lods
pusha
push
inc
fisttps
mov
sbb
clc
or
adc
push
pop
and
jo
pushf
pushl
or
int
gs
dec
mov
movb
adc
sbb
insl
sub
icebp
adc
mov
cmp
loopne
lcall
xchg
loop
and
in
sub
cld
jle
or
daa
jb
roll
cmpl
mov
test
push
sbb
insb
inc
mov
int
jo
into
add
imul
ljmp
add
bound
fwait
pop
xchg
repz
pop
mov
out
mov
decl
stos
or
mov
mov
add
adcb
or
and
leave
ss
call
xchg
icebp
pop
orl
ret
mov
test
clc
pop
mov
mov
test
pop
or
jge
enter
dec
inc
add
fwait
sbb
xchg
add
jle
repnz
pushl
push
sbbb
pop
xchg
shr
mov
leave
outsl
js
mov
pop
and
cmp
les
adc
pop
mov
lea
into
xor
push
in
or
jle
bound
jae
jo
shlb
jns
mov
test
fbstp
sub
in
test
fisttps
lahf
jnp
add
loope
adc
xchg
roll
repnz
sub
adc
adc
fwait
decl
and
in
out
clc
and
push
add
cmp
call
dec
xchg
dec
mov
jmp
fbld
sbb
filds
das
or
test
scas
xor
inc
push
inc
xchg
mov
ljmp
in
sti
std
adcl
dec
xlat
test
mov
sub
mov
sub
adc
aad
pushf
incb
stos
fdivl
mov
add
repnz
fwait
test
dec
out
dec
add
mov
or
xchg
clc
int3
testb
ja
xchg
pop
inc
loopne
sub
pop
fldcw
popa
roll
xor
arpl
fsubs
jmp
jecxz
into
add
sarl
mov
mov
jmp
lods
stos
pusha
lret
push
add
inc
inc
xchg
add
aam
inc
pop
dec
daa
push
push
push
lods
cmc
loopne
push
push
inc
sarb
inc
and
addr16
inc
cld
das
add
ret
jns
push
pop
scas
faddl
add
mov
push
add
clc
enter
ja
push
imul
sbb
push
enter
inc
fcompl
rorl
js
inc
xor
dec
or
inc
imul
cmp
push
dec
std
mov
das
pushf
xor
inc
inc
inc
hlt
mov
xor
jecxz
loopne
aam
jl
pusha
or
dec
idiv
pop
sub
push
dec
arpl
ret
je
inc
cmp
jno
pop
xorb
xor
and
push
push
dec
out
dec
sub
mov
data16
dec
gs
cmp
or
xchg
mov
push
subb
add
inc
push
xor
lock
and
adc
cmpl
sub
clc
pop
sub
xchg
loopne
mov
adc
jae
shl
xchg
push
imul
dec
jle
push
jmp
jmp
xor
push
add
push
xor
stc
loop
cmpb
sbb
cmp
sub
inc
cmp
decb
fs
add
imul
dec
fmuls
repz
mov
xor
push
cld
add
dec
dec
inc
push
dec
outsl
addb
dec
inc
add
lea
or
stos
je
dec
adc
inc
pop
dec
cmp
adc
outsl
daa
loope
xchg
lods
xor
popf
inc
xor
mov
inc
push
arpl
jno
adc
jl
inc
dec
les
jg
rclb
dec
fs
inc
push
lret
push
movsb
clc
jl
pop
js
mov
dec
and
sahf
mov
jo
les
clc
xor
lea
cld
bound
imul
pop
sub
lock
int3
dec
push
dec
dec
and
inc
inc
icebp
shlb
add
shlb
cmp
stos
loope
clc
mov
inc
outsb
mov
or
xor
push
loopne
xchg
loopne
jo
mov
aaa
dec
or
xchg
lock
inc
ret
add
insb
mov
ss
enter
sahf
xchg
aas
push
ja
jle
test
xor
outsb
dec
orl
ss
adc
lock
xor
ja
sub
mov
jae
fidivrs
xlat
push
dec
inc
sbb
popf
push
and
popa
add
aaa
dec
je
push
dec
popa
fwait
insl
mov
cmp
xor
mov
add
in
dec
pusha
cmp
inc
push
dec
clc
rclb
push
cmp
je
in
fs
inc
jl
push
push
out
inc
popa
mov
test
xor
xlat
inc
push
push
cmp
test
xor
xlat
xchg
lds
ret
mov
mov
into
dec
mov
adc
jo
bound
lock
mov
add
dec
sbb
imul
mov
insb
insb
mov
mov
add
orl
lods
mov
inc
inc
pop
push
add
push
repz
mov
shll
aad
fs
outsl
je
es
add
fcomp
inc
jge
loop
sar
int3
imul
bound
add
mov
adc
sbb
movsl
inc
or
jge
or
push
inc
mov
push
mov
add
push
ja
jnp
dec
push
mov
dec
push
xor
xchg
dec
mov
fwait
outsb
inc
or
jne
ret
pop
pop
dec
mov
add
dec
push
add
dec
stos
dec
fwait
xor
push
xor
negb
push
inc
aaa
gs
fimuls
ss
jecxz
fimuls
inc
dec
popa
cmpsl
mov
dec
mov
and
mov
lahf
dec
push
pop
mov
in
jns
sub
dec
lods
outsl
std
pop
insb
add
ja
cmp
or
fwait
icebp
push
es
outsb
sbb
sbb
and
icebp
in
cmp
into
add
adc
icebp
dec
push
aaa
xor
mov
ljmp
xor
mov
jmp
add
mov
mov
inc
lock
int3
andl
cmp
ret
xchg
sub
fwait
bound
push
cli
ljmp
out
mov
cmp
pop
push
test
mov
outsb
xchg
mov
mov
mov
pop
mov
dec
lcall
pop
add
inc
popl
adc
rclb
dec
mov
push
mov
pop
scas
aam
sbb
add
or
dec
xchg
outsl
jl
out
adc
fistpll
daa
rorb
pop
push
sub
xor
filds
fimull
xchg
and
or
ljmp
push
sub
pop
sub
cwtl
cmp
sub
add
pop
inc
mov
and
into
mov
repnz
incb
or
xor
es
xchg
sub
add
sahf
inc
stos
dec
mov
cmp
insl
dec
inc
adc
out
xorb
cmp
insb
fdivrs
add
jbe
mov
jbe
cs
or
adc
xchg
dec
jns
mov
rorl
inc
pop
jmp
outsb
mov
and
dec
sbbb
icebp
add
mov
jle
popf
movsb
sub
repnz
fcoml
xor
shrb
add
sub
xchg
outsl
clc
adc
sbb
mov
lock
or
push
xchg
push
rcrb
mov
sub
lods
add
shll
cmp
out
adc
sbb
bound
fadds
add
hlt
ljmp
jo
loopne
cs
lret
cmp
in
pusha
outsl
aaa
sbb
les
pop
mov
mov
adc
dec
nop
and
inc
stos
rorb
and
pop
jp
or
flds
add
xchg
push
xor
add
or
jmp
loopne
push
andb
popa
pop
add
xchg
push
dec
inc
fwait
lods
xchg
cmpsb
mov
cmpb
mov
adc
dec
dec
sti
inc
and
in
rolb
add
cmp
insb
das
cltd
sub
adc
push
loop
push
adcb
or
or
scas
ret
leave
aam
decl
inc
mov
add
add
aaa
xchg
ljmp
loopne
js
test
sub
andb
cmp
pop
mov
insb
and
nop
pusha
or
cmp
data16
push
nop
iret
aaa
cld
or
push
sbb
lock
xchg
or
push
xchg
mov
es
ja
cwtl
in
mov
add
lahf
rorb
xchg
mov
lea
adcb
test
dec
adc
das
pusha
add
cmp
loop
pop
test
shll
adc
jle
cli
push
frstor
cmp
inc
scas
cli
add
mov
mov
shll
lds
mov
xchg
cli
or
add
push
add
aad
or
mov
inc
and
push
shlb
xchg
xor
subb
pop
push
aaa
mov
jmp
lods
mov
lcall
push
fisubrs
jns
sub
xor
out
cvtps2pd
mov
insb
jp
stc
xchg
icebp
add
push
shll
cmc
push
and
decl
push
add
pop
push
nop
call
movsb
aam
adc
sbb
scas
shll
jne
je
insl
stos
and
dec
mov
and
adc
es
inc
insb
push
ljmp
xchg
test
insb
aam
push
ljmp
pop
ficompl
jl
dec
clc
loop
xchg
icebp
lret
imul
stos
xchg
xchg
push
data16
mov
or
outsb
scas
inc
adc
adc
jg
mov
into
hlt
fsubrs
adc
pop
test
push
leave
cld
xlat
sbbb
ljmp
add
adc
mov
dec
inc
push
loope
xchg
push
loopne
jle
jge
xor
rorb
stos
stc
lods
xchg
mov
andl
repz
xchg
out
inc
pmaxub
cltd
js
xchg
xchg
push
add
adc
iret
adc
mov
bound
nop
xor
xchg
dec
lret
icebp
mov
mov
mov
cmp
mov
sbb
mov
lds
rclb
mov
ss
and
xchg
jp
cld
icebp
aad
and
ja
out
lds
test
lock
sbb
add
lret
mov
jle
adc
in
negb
add
es
push
push
test
insb
fwait
mov
nop
aam
aas
xchg
or
fnstcw
adc
push
sub
fadds
in
push
rcr
inc
into
lds
mov
nop
mov
cmp
cltd
sbbb
insb
push
pop
mov
sbb
dec
cmp
xchg
rolb
fwait
push
mov
push
push
cmp
push
adc
pop
je
sti
mov
sub
lcall
xchg
shl
sbb
or
fiadds
ja
stos
not
in
adc
push
and
ficoml
addr16
pop
push
in
push
cmp
rorb
fcmovnb
ret
xrelease
push
add
add
pop
sbb
cmp
jo
jo
stc
inc
add
push
or
pop
test
call
iret
push
sub
mov
mov
jnp
sub
push
dec
rolb
or
mov
call
push
inc
nop
jle
orb
cmp
pusha
cmp
mov
add
mov
push
dec
xorl
pop
xor
mov
pop
lahf
mov
xor
test
std
fcmovb
insl
and
mov
jp
add
add
test
xchg
xor
add
sahf
fdivl
cmp
sub
push
ret
popf
fisubs
inc
xor
push
or
xor
and
xor
jecxz
ficompl
lret
dec
mov
pop
outsb
or
cmp
add
in
jnp
jg
mov
out
jge
fwait
xchg
negl
aaa
stos
pop
movb
imul
insl
and
rorl
jbe
mov
imul
xchg
dec
test
fcomip
jns
jb
cmpsb
outsb
cmp
push
lock
aam
rcr
mov
push
add
pop
xchg
test
mov
cmp
push
pop
ja
mov
add
dec
loopne
mov
clc
std
and
mov
mov
inc
xchg
fsub
nop
out
pop
js
sbb
addb
dec
jmp
es
jmp
mov
jmp
jo
push
cmp
sub
jl
push
test
test
es
loopne
or
add
cli
leave
lods
inc
push
jg
sub
push
adc
lods
inc
or
cwtl
add
push
cmpsb
out
mov
inc
inc
push
or
mov
jo
pop
pop
icebp
test
pop
cli
inc
ds
xor
decl
in
jmp
jbe
ror
mov
jo
insb
test
and
out
xchg
mov
mov
pop
icebp
aad
scas
push
inc
xchg
and
pushf
mov
std
and
out
jge
jp
sbb
andl
dec
lds
rol
cmp
clc
jmp
jmp
add
mov
fcoml
adc
cmp
xorl
jge
mov
hlt
or
pop
fimuls
mov
stc
xor
dec
out
jmp
mov
rcll
pop
std
inc
add
jmp
popa
dec
push
data16
jg
roll
push
mov
dec
add
ljmp
push
dec
into
arpl
dec
mov
outsl
cld
add
and
pop
es
ficompl
jae
insl
sbb
jne
xor
mov
lret
fsubrs
clc
mov
mov
mov
mov
or
in
mov
out
int3
inc
arpl
or
jle
adcl
mov
fdivrl
shrb
mov
sbb
or
add
jg
ds
cmpb
xor
sbb
in
int
mov
xor
xchg
repz
stos
sar
hlt
jmp
enter
mov
cld
pop
add
test
loop
sti
mov
xchg
cmc
enter
jl
inc
mov
test
mov
in
mov
pusha
cmpsb
or
in
jge
push
add
jmp
fstps
inc
loope
add
loop
jmp
shl
cmpsb
loop
mov
call
shlb
lock
sub
sub
jne
mov
add
inc
push
jmp
jge
add
jl
sbb
call
test
add
dec
scas
and
and
adc
jae
lret
pop
scas
dec
sbb
cs
cmpsl
cmpsl
fdiv
inc
or
loope
jecxz
mov
xor
push
hlt
test
lret
lret
mov
xchg
push
mov
inc
mov
sub
fiaddl
es
lock
loopne
mov
sarl
movsl
ds
cs
or
add
cli
loope
aaa
in
xchg
pop
push
ret
call
mov
hlt
push
and
mov
jmp
lods
adc
enter
or
pop
adc
push
mov
pop
js
jno
adc
mov
add
dec
inc
andb
and
and
daa
sbb
ss
push
push
mov
scas
adc
push
mov
mov
adc
pop
js
xor
mov
filds
loop
or
cli
add
call
cmp
es
jle
test
jg
lahf
and
fucompp
je
sti
adc
mov
andb
mov
arpl
lods
push
ficoms
outsb
cmp
cmp
lret
loopne
cmc
sbb
add
or
adc
and
jl
cltd
shr
push
sbb
or
pop
sarl
mov
push
inc
jp
lods
mov
add
andb
jbe
out
pop
outsl
mov
add
jo
mov
ljmp
adc
jecxz
rcl
push
xor
rcrb
scas
pop
inc
nopl
ret
add
lea
aaa
inc
pop
imull
sub
fmull
xchg
insb
icebp
test
popf
ljmp
pop
std
aaa
add
and
push
xorb
clc
or
inc
fdivs
bound
push
inc
shrb
pop
outsb
bound
pop
enter
mov
aad
inc
cld
das
int
cmp
das
lods
in
or
adc
or
mov
fdiv
jbe
mov
mov
xor
sbb
mov
insb
ret
cmp
mov
add
mov
pop
xchg
xor
lock
test
int3
ret
enter
add
outsl
xlat
push
mov
shl
loop
pop
test
mov
or
add
push
inc
dec
movsl
add
push
lahf
and
xlat
dec
pop
inc
dec
jecxz
pushf
fisubs
sbb
inc
in
jb
outsb
fs
out
or
and
or
ret
aad
pop
fistpl
faddl
sbb
push
push
call
add
dec
adc
pusha
mov
neg
xor
mov
mov
xlat
dec
lcall
inc
sub
mov
adc
mov
mov
adc
outsb
dec
sub
xchg
cmp
pop
fstps
outsb
and
je
rcr
test
sbb
cmpl
out
jle
inc
xor
and
pop
movsl
data16
jbe
movsl
adc
int
dec
in
pop
in
adc
cmp
pushf
rcrl
or
push
xor
outsb
xor
test
fnstsw
in
ds
sub
movsb
les
and
add
dec
jne
mov
push
loopne
fcoml
xchg
mov
add
mul
and
add
enter
mov
add
dec
std
mov
fsts
jo
call
inc
outsb
jb
jo
lods
pop
push
outsb
cwtl
push
insb
push
push
adc
loop
addb
mov
test
push
mov
js
fldenv
clc
ja
fdivs
inc
jae
sbb
into
jl
cmp
or
mov
in
lret
xor
push
cmp
push
cli
out
add
mov
cld
add
add
adc
repnz
into
mov
mov
ljmp
jl
xchg
cld
notb
addr16
negb
nop
jno
inc
es
mov
or
adc
push
push
mov
ret
int3
rorb
cld
lahf
xor
es
ficompl
xlat
adc
push
and
push
shll
repnz
es
inc
fistpl
jle
popa
pop
sub
cwtl
xchg
sbb
jne
or
sarb
and
adc
pushf
adc
mov
mov
fs
call
cmp
imul
adc
adc
pop
push
mov
mov
inc
jg
aam
push
movsl
in
out
mov
mov
popf
add
pusha
inc
push
mov
cmc
fdivs
mov
inc
stc
je
jg
enter
js
pop
sbbl
dec
not
les
mov
or
hlt
jg
adc
and
cmp
inc
inc
arpl
mov
dec
inc
xor
std
fimuls
dec
jb
add
jnp
or
mov
xchg
les
adcl
pop
rcrb
aam
push
dec
leave
sbb
rcrl
enter
fidivl
adcl
mov
push
mov
icebp
enter
or
js
pusha
push
adc
mov
js,pn
mov
je
outsb
lahf
inc
pop
aas
pandn
jmp
adc
fidivrs
dec
or
rclb
xor
xlat
scas
ror
stc
adc
mov
out
cmpsb
nop
cmp
cld
sub
sub
test
enter
iret
imul
pop
xchg
pop
shl
sbb
subl
nop
pop
dec
cmpsl
push
pusha
pop
or
andb
aam
cmc
sbb
ss
xchg
push
pop
inc
adc
jl,pt
es
daa
mov
xor
in
pop
test
cmpb
pusha
fldcw
inc
ss
add
outsb
sub
dec
inc
neg
fisttpl
inc
push
push
std
or
sub
sbb
rolb
mov
push
jmp
insl
movsb
mov
inc
dec
inc
jmp
dec
xor
push
cli
idivb
sahf
cmp
incb
sarb
fsubrl
and
rol
notb
add
mov
dec
sbb
push
sarl
imul
push
sbb
adc
icebp
adc
pop
sbb
ja
adc
mov
push
push
mov
push
adc
in
push
inc
pop
orl
mov
and
push
test
mov
pop
and
cltd
add
in
enter
ja
push
sub
push
aaa
add
inc
sbb
lahf
pushf
dec
je
add
sub
and
xchg
pop
push
cmp
cmp
mov
cmpsl
incb
add
or
mov
jo
mov
pushf
sub
inc
jmp
mov
xchg
imul
iret
scas
xchg
and
leave
outsl
emms
fisttpll
ret
sub
data16
mov
aad
out
xchg
inc
ret
ja
incl
push
jnp
xchg
pop
add
mov
int
je
xchg
push
fadds
inc
adc
das
jns
jecxz
mov
pop
pop
mov
fadds
shr
sarb
pop
std
mov
add
scas
mov
jg
es
arpl
add
subl
je
pop
fwait
stos
cltd
jo
inc
xchg
les
cmpb
pop
js
lock
pop
fsubrl
repz
sarl
cmp
or
sbb
xchg
popa
out
mov
lds
inc
test
pop
ja
insl
inc
and
ljmp
movsl
das
xchg
xchg
iret
idiv
lock
or
push
aam
sub
mov
cmpsb
test
jmp
loopne
ds
pop
inc
dec
js
punpckhbw
xchg
fdivp
or
and
sbb
out
sub
and
lea
fsubs
add
fucomip
pop
rolb
dec
mov
scas
push
push
ja
mov
enter
arpl
fnstcw
test
push
dec
int3
sqrtps
jg
lock
ret
lods
mov
and
mov
or
pusha
cmp
xor
dec
sub
cmp
clc
scas
ss
mov
divb
lock
xchg
sub
scas
push
ss
adc
mov
lds
sti
dec
pushf
push
xchg
add
loope
jp
call
sbb
and
nop
cmp
add
rcl
lahf
push
sbb
mov
mov
mov
jne
inc
or
add
jb
pop
dec
lret
rorl
inc
sbb
ret
xchg
or
fimuls
lock
leave
push
dec
jle
loopne
xchg
add
clc
decl
push
les
lock
cmp
pop
aad
ret
lods
dec
mov
ret
inc
ficoms
or
xchg
mov
orl
push
clc
pop
rclb
sbb
push
cmp
out
je
xchg
ljmp
in
xor
jno
mov
push
mov
ja
sarb
decl
addb
cmpl
ret
dec
loopne
clc
push
add
sarb
adc
jle
cmp
divb
xor
mov
gs
mov
out
xchg
push
nop
test
mov
fistps
dec
rcl
jecxz
sbb
outsb
mov
mov
xor
inc
sub
sub
shrb
add
lods
add
aad
jmp
mov
aas
mov
repz
xchg
cmp
enter
xor
push
pusha
stc
add
movsb
adc
mov
cmp
inc
xlat
js
fiadds
dec
ss
sbb
xchg
push
nop
and
pop
inc
mov
cs
sar
pushl
cmp
adc
loopne
scas
sbb
mov
pop
faddl
mov
aas
imul
pop
pushf
pop
jp
into
ljmp
push
inc
ret
lret
pop
or
in
test
pushl
mov
xchg
add
or
and
cmp
fwait
jg
mov
sub
or
xor
jbe
jg
mov
pushl
xchg
jno
rol
add
xor
push
pop
pusha
lcall
xor
pop
and
mov
sub
lahf
ret
leave
into
je
str
and
push
jge
jb
adc
fbstp
insl
and
or
lods
xchg
xchg
mov
lahf
mov
mov
lods
jmp
in
int3
and
fisubs
scas
outsb
mov
in
cmc
sub
mov
or
add
jns
addl
in
jo
out
adc
sbb
daa
jb
add
arpl
lcall
pop
mov
pop
imul
pop
adc
andb
decl
push
inc
popf
pop
jbe
mov
mov
test
add
and
pop
fidivl
or
dec
out
pop
loopne
adc
jle
adc
jle
pusha
pop
inc
adc
jmp
mov
mov
xor
pop
cld
icebp
sub
icebp
fs
mov
repz
cmp
add
das
sub
pop
pop
xchg
jl
push
xor
shr
fcoml
sbb
jmp
scas
mov
jo
dec
inc
mov
mov
ljmp
fmuls
lock
push
ret
xchg
sti
dec
test
int
xor
cld
jns
cli
dec
inc
dec
mov
sbb
inc
push
pop
rcrl
push
outsl
aaa
jb
xor
sub
shl
or
add
orb
xchg
ss
js
pop
loope
pop
adc
aad
cli
xlat
mov
lock
add
cmp
out
add
push
and
dec
fldt
testl
inc
lds
push
lods
dec
lret
add
por
cwtl
push
cli
sti
adc
sbb
mov
mul
fnstsw
shr
xchg
ret
incl
push
js
lds
pop
movq
sub
out
or
out
enter
push
mov
clc
pop
add
push
movsl
push
adc
into
push
daa
ja
sub
sti
add
scas
push
in
jle
sub
js
dec
fidivrl
add
xor
cmc
mov
insl
inc
sbbb
add
xchg
push
and
inc
xchg
add
lcall
push
push
popa
out
dec
jne
mov
setne
pop
xor
js
jbe
pop
jl
add
mov
push
xor
ficoml
xchg
mov
fadd
push
loop
lock
pop
sub
shl
shrl
push
rorb
rorb
clc
test
cmp
sub
push
subb
in
mov
sbb
ss
cmpsl
push
xchg
xor
xchg
jl
add
jp
and
mov
xchg
add
stc
push
jle
push
test
pop
jmp
adc
std
inc
mov
pop
mov
hlt
shl
nop
sub
hlt
or
pusha
into
xor
stos
into
dec
push
test
dec
adc
sbb
cmpb
add
mov
push
inc
fwait
pushf
nop
dec
lods
pop
cwtl
sub
adc
pusha
lea
faddl
add
jo
pop
pop
call
enter
add
movsb
adc
mov
mov
sbb
adc
popa
fmuls
sbb
int
subb
jmp
xor
inc
xchg
or
xor
decl
mov
lea
push
xor
lahf
loop
aad
jp
enter
add
das
clc
and
lock
jo
xlat
inc
imul
jl
pushf
movsb
pop
mov
push
mov
dec
js
insl
xchg
sbb
jp
inc
or
sbb
psubb
jge
and
pop
pop
int3
test
lock
cmp
inc
jl
cmp
inc
xor
test
pop
mov
movb
cld
dec
push
clc
stos
and
test
pop
jnp
fwait
loop
insl
std
pop
and
or
push
pop
mov
popa
xor
roll
mov
pop
inc
xchg
cli
cs
in
xchg
fnstsw
cmc
cmp
loopne
mov
decl
push
xor
push
dec
repz
lahf
dec
xchg
push
sti
add
inc
aam
sub
stos
mov
sub
cmp
and
pop
pop
incb
mov
inc
mov
outsb
subb
das
xor
xchg
xchg
sub
cmpsl
push
call
and
pop
movsb
or
rorb
inc
movsb
dec
sub
imul
inc
cmp
push
jb
test
ret
mov
loope
xchg
mov
and
loop
jbe
xor
cmpl
pushf
push
je
je
jbe
rcl
mov
xchg
dec
bound
inc
adc
push
ret
shll
scas
mov
in
data16
dec
ret
lret
push
notb
popf
lea
add
pop
push
cltd
add
mov
pop
fsubs
push
clc
loop
sbb
push
add
mov
adc
xlat
roll
out
xor
and
fs
repnz
jae
cs
pushw
or
sub
dec
mov
shl
jg
pop
loope
test
sbb
testb
jo
push
dec
inc
pushf
mov
xor
push
sub
mov
jno
cmp
mov
iret
iret
clc
jb
jmp
lret
jge,pt
test
ret
pop
insb
pop
test
sbb
popf
mov
inc
adc
cs
fwait
dec
addb
lret
xor
lret
out
jmp
fsubl
and
mov
xor
rcrb
mov
cwtl
push
add
mov
cmp
pop
pop
shlb
mov
enter
jp
sarl
add
adc
xchg
inc
cld
out
push
sub
pop
ljmp
pop
add
cmp
xor
and
or
or
push
mov
cmpl
les
in
fwait
jo
dec
out
adc
outsl
mov
inc
out
or
sbb
adc
adc
faddp
pushf
xchg
inc
mov
lahf
bound
test
jge
int3
push
in
fst
test
and
mov
and
sbb
daa
outsb
pusha
cli
out
inc
lret
enter
mov
stos
and
pop
xchg
mov
les
jo
unpcklps
jo
movsb
xor
cwtl
les
xchg
jb
iret
enter
add
lahf
pop
aam
js
adc
or
jne
arpl
xchg
mov
js
sbb
xchg
pop
sub
testb
loopne
push
punpckldq
gs
gs
mov
push
adc
int3
jle
xchg
lock
fstl
or
xlat
xchg
mov
sub
jno
add
mov
cmc
xor
xchg
sbb
xor
jmp
xor
movsb
cmpsl
adc
add
popl
jb
fiadds
test
fiadds
cmpl
sbb
dec
cli
adc
sbb
ret
clc
pop
adc
fcmovb
call
jp
mov
das
fldl
cwtl
cs
pop
cmp
jne,pn
jbe
pusha
sub
add
js
outsl
cmp
out
and
ret
or
and
sbb
cmp
sbb
mov
imul
dec
and
lock
and
xchg
or
sub
and
inc
lcall
pop
dec
or
mov
or
add
dec
xchg
xor
sbb
xchg
mov
inc
adc
mov
mov
inc
add
lea
mov
inc
mov
xchg
outsb
test
xlat
cs
or
cli
lahf
aam
loop
dec
push
out
inc
repnz
sbb
test
in
rclb
lds
shr
bound
int
push
scas
mov
int
inc
mov
lret
cli
mov
adc
xchg
fiaddl
pop
pop
adc
faddl
in
call
fdivrl
in
xor
push
sbb
insl
std
stc
addb
scas
fildl
out
sarb
xchg
adc
rcrb
arpl
rol
xchg
dec
mov
ror
js
xchg
sarl
lea
push
loop
and
ret
les
or
add
push
outsl
cld
mov
jmp
fwait
dec
inc
loopne
mov
sbb
fwait
push
sub
push
je
test
test
into
add
daa
dec
sub
push
mov
icebp
loopne
inc
sbb
sbbb
mov
les
ret
ficompl
or
addl
and
ds
movsl
shlb
push
push
add
jge
loop
rorb
notl
test
add
add
pop
rorl
xchg
insb
in
adc
add
call
mov
fneni(8087
or
sub
in
pusha
xor
xor
pop
xor
jl
fwait
scas
cli
negl
cli
sub
pop
add
lods
subl
sub
dec
andb
add
mov
insb
xchg
xlat
cmp
cwtl
adc
sti
test
or
sarb
push
data16
les
or
std
xor
aaa
xchg
adc
fbstp
xor
loop
fstl
fidivs
sub
das
jmp
aad
jle
jg
mov
inc
pop
clc
mov
xchg
ret
and
test
clc
cmp
cmp
faddl
push
pop
inc
mov
out
pop
or
xor
pushf
iret
jne
pusha
add
decl
push
insl
adc
stos
sti
add
call
sub
mov
mov
push
jnp
repnz
sahf
pop
loope
mov
jb
popa
repz
ret
inc
pop
xchg
aam
lret
pop
lcall
scas
pop
movsb
pushf
mul
movsb
mull
adc
orb
xchg
scas
or
xor
in
adc
and
clc
fs
les
sub
sub
or
and
sbb
pop
fbstp
push
pop
sahf
push
fistps
pop
adc
or
nop
ficompl
scas
into
clc
ret
inc
adc
add
pop
ja
addb
xchg
sub
ret
mov
jp
arpl
mov
xorb
push
dec
jno
mov
into
lds
bswap
cli
movsb
push
mov
sti
shlb
add
cwtl
add
loope
add
mov
pop
push
call
sub
xchg
or
and
adc
adc
sbb
dec
shrb
stos
lahf
dec
push
in
push
scas
dec
mov
les
push
rolb
mov
ss
dec
sbb
lea
push
clc
sub
cli
push
aam
in
or
out
mov
add
and
les
cmpb
fidivrl
mov
lds
outsl
inc
inc
sbb
mov
pusha
addr16
cli
add
popa
pop
ss
push
in
incl
movl
ds
ret
sbb
dec
fnop
ret
ret
les
sub
and
loopne
adc
bound
loop
adc
and
xchg
mov
push
add
or
repnz
sahf
xchg
sub
push
stc
daa
jne
mov
cmp
push
pushf
pop
jo
decl
mov
or
in
dec
cmp
inc
mov
aas
test
jo
add
add
jl
rorl
dec
leave
lret
fidivrl
pop
js
insl
adc
in
idivb
fsubr
sbb
mov
mov
inc
push
sbb
mov
xchg
push
data16
out
inc
cld
es
xor
jle
adc
and
incl
out
mov
sbb
lea
loop
pop
xchg
mov
cltd
mov
fsubrs
jo
add
cmc
cmpb
push
insb
xchg
jb
mov
jno
add
add
sub
pop
jbe
adc
subb
push
jle
es
orl
dec
mov
sahf
jns
fisubl
add
cld
or
lds
rcl
incb
pop
cmc
push
cmp
add
inc
out
push
sbb
add
xor
or
rclb
fistps
and
add
add
cmp
push
adc
jp
ficoml
adc
mov
pushl
mov
or
data16
mov
aas
adc
cmp
scas
pop
adcb
adc
and
jp
icebp
hlt
push
fistpl
mov
cmc
loopne
jne
lds
cmpsl
addr16
test
dec
addb
rorl
push
sub
and
mov
sti
adc
adc
movaps
dec
inc
test
push
lock
adc
testl
add
adc
loopne
out
test
ficomps
loopne
das
ss
fs
sub
stc
inc
xor
mov
jbe
loope
out
add
stos
out
sub
cmpsb
clc
in
sub
mov
xor
fsub
pop
mov
mov
push
mov
push
fs
mov
movl
sbb
inc
pop
es
repz
pusha
bound
jl
push
pop
lret
and
and
mov
push
sarb
clc
xchg
addb
fucomi
xor
xchg
mov
adc
mov
sbb
in
dec
addr16
pop
ret
aad
xchg
jmp
jb
cs
mov
xchg
popa
test
push
repz
xchg
fidivrl
inc
xchg
lcall
test
push
and
sub
mov
loopne
mov
mov
mov
int3
cmpsl
and
mov
test
or
je
lods
cmp
push
test
cmp
je
xor
xor
pop
ret
push
or
lret
jg
mov
bound
jg
out
nop
ret
mov
push
push
cwtl
out
dec
fmul
call
or
in
mov
prefetch
aad
jno
mov
xor
loopne
notb
or
stos
mov
bound
add
insl
push
out
pop
or
mov
hlt
inc
shll
mov
ljmp
pop
or
adc
add
pop
mov
jae
cmpsb
push
int
aas
sarb
loop
sbb
sti
cs
lcall
jbe
inc
loope
mov
test
mov
or
lods
jno
outsb
push
cwtl
pushf
aaa
sbb
adc
mov
das
adc
add
or
lret
call
ret
add
xchg
jl
das
mov
je
cltd
add
jb
ja
adc
add
leave
or
mov
in
cmp
mov
jo
rorb
lahf
fidivrs
and
in
test
lds
xorb
out
sub
mov
insb
std
adc
sbb
loope
call
fistps
add
sub
mov
aam
pop
movsb
pop
push
xor
subb
std
mov
jg
test
rolb
aaa
aas
int3
and
adc
lea
pop
inc
cmp
das
movb
fists
add
sbb
mov
enter
xor
dec
xchg
loopne
add
pop
xor
popa
or
test
ds
and
das
mov
add
aaa
inc
push
mov
jbe
imul
jp,pt
mov
movsb
outsl
add
jl
sbb
rcr
add
pushf
sar
es
pop
andl
or
js
stos
xchg
jne
rcrb
mov
or
sbb
mov
incl
xor
push
add
add
repz
lcall
int
xor
data16
push
imulb
or
jmp
ret
frstor
adc
les
repnz
test
pop
imul
push
cmpsb
or
mov
xor
in
arpl
ljmp
jbe
or
cmpsb
in
jnp
into
push
movsb
dec
andl
jne
jg
jecxz
sub
hlt
adc
insb
sub
or
add
insb
daa
xchg
dec
mov
pop
or
add
sti
icebp
push
jp
and
inc
push
or
mov
cmc
sbb
fisttps
sub
adc
jle
add
mov
jo
pusha
mov
xor
mov
call
jo
loop
or
push
iret
mov
cmp
fmull
xchg
in
inc
out
addr16
mov
mov
push
pop
fisttpl
into
fisubl
mov
gs
jmp
lods
adc
shr
nop
add
inc
stos
push
mov
js
es
push
push
dec
push
xchg
stc
cld
andl
dec
lock
mov
pop
cmp
pop
and
rolb
xor
imulb
inc
enter
outsl
scas
lock
js
dec
filds
icebp
fnstsw
fwait
xor
inc
mov
ss
mov
in
mov
mov
sbb
cmp
push
or
adc
mov
cmc
inc
cli
fbstp
shr
cmp
hlt
lea
dec
enter
fildll
and
add
sti
add
xchg
mov
pop
insb
jg
popf
or
loop
xchg
sbb
shrb
loopne
cmpl
sub
test
outsb
mov
dec
add
cli
adc
and
pop
test
inc
xchg
jmp
cld
les
mov
cwtl
daa
adc
enter
push
push
pop
repz
nop
cmpsb
push
es
dec
clc
and
out
xchg
pusha
dec
mov
adc
fidivs
mov
push
fcoms
xchg
ficompl
scas
outsb
xchg
std
mov
cs
mov
jge
add
aaa
cmp
jns
fsubp
stc
jnp
sbb
sbb
mov
mov
adc
inc
test
mov
int
push
test
xor
xchg
das
adc
jbe
dec
sub
mov
or
jno
pop
jb
cmp
mov
jle
push
rclb
mov
inc
cwtl
lods
add
fcomps
rorb
and
add
mov
push
pop
push
cmp
push
cvtpi2ps
dec
pusha
inc
mov
inc
ret
mov
cltd
add
add
pop
xor
mov
cmc
inc
inc
push
test
dec
jbe
jle
clc
add
jge
in
mov
pop
lock
sbb
xchg
out
add
cltd
ret
lahf
icebp
inc
cmp
xchg
cmc
mov
mov
cmpsb
add
xchg
pusha
into
sub
dec
lcall
push
mov
push
mov
push
xor
adc
paddusw
pop
andl
loope
push
in
xchg
iret
into
int
pushf
add
or
mov
lea
lcall
nop
sbb
push
inc
lods
data16
sbb
dec
jl
push
sti
xchg
jle
sbb
xor
cs
addr16
xchg
inc
add
into
fsub
nop
and
push
std
adc
adc
in
cmp
bound
nop
gs
push
push
pop
xor
mov
fcmovnbe
add
jp
jg
xchg
push
cmpsb
mov
sub
mov
cltd
ss
mov
sub
ficoml
mov
insb
add
and
inc
and
jl
push
pop
mov
xor
add
dec
push
jl
cmc
or
adc
and
shr
les
cld
mov
jp
jecxz
enter
insl
enter
or
sub
or
fs
adc
or
inc
out
xchg
mov
rcrl
ja
push
dec
les
loop
add
mov
jmp
pop
out
and
inc
pop
add
jg
into
dec
mov
jo
push
xor
je
mov
mov
lds
sub
insl
mov
pushl
xchg
je
mov
mov
or
mov
cwtl
repz
shlb
or
fildll
mov
loop
push
push
mov
push
mov
sub
hlt
data16
data16
mov
les
adc
inc
or
xor
jle
push
jle
roll
adc
sar
mov
xor
push
push
add
aad
add
jecxz
ficoms
cs
sub
inc
adc
add
fnstenv
incl
cmpsl
push
fnstenv
cmp
in
dec
sub
pusha
std
dec
std
test
pop
jle
subb
in
pusha
push
add
pop
sub
cli
mul
or
mov
xor
pusha
sub
inc
enter
sbb
jmp
inc
jne
sbb
jmp
cmp
sbb
sbbl
loopne
aaa
ljmp
andb
loopne
xor
jl
fistps
jmp
adc
dec
mov
pop
cli
addb
add
pop
sub
ds
cmp
jl
jbe
jg
mov
add
mov
or
push
adc
sti
outsl
push
and
clc
andb
cmp
and
jge
lahf
pop
jae
test
nop
push
xor
leave
or
les
sarl
or
aaa
mov
dec
test
pop
repnz
mov
mov
fnstsw
lret
push
dec
dec
movsl
shll
add
lock
in
jmp
cmp
pop
fwait
cmp
push
sahf
and
jge
jno
pop
dec
clc
xchg
mov
test
in
pop
cld
stos
jmp
add
addr16
cmp
push
sbb
cmp
lcall
push
mov
fdivrp
test
mov
add
xchg
pop
lock
lock
push
jmp
push
aas
push
subl
call
jp
aam
js
push
jne
mov
hlt
stos
jae
insl
inc
dec
and
lods
sub
imul
dec
outsl
mov
cmp
push
cld
push
cld
add
push
icebp
dec
dec
sub
xchg
xor
adc
mov
popa
addr16
sub
cs
mov
push
daa
sbb
imul
push
cmp
and
lea
xchg
loopne
add
add
mov
push
push
stos
dec
pop
add
push
ret
arpl
mov
adc
xor
fildl
loop
out
lods
jl
mov
push
call
dec
in
loope
pushl
add
cmp
pop
jmp
jo
cmp
loopne
insb
scas
push
pop
sub
mov
jp
pop
repz
incb
stos
andb
icebp
fdivr
mov
sahf
mov
mov
stos
popf
jg
ds
loope
inc
mov
mov
leave
jae
mov
cmp
sub
adc
jg
mov
mov
jno
push
jno
pusha
in
dec
jge
arpl
mov
scas
pop
jle
orb
cmp
jle
cmpsb
xchg
icebp
fildll
enter
dec
in
nop
xor
mov
add
jbe
adc
daa
xlat
or
sbb
dec
shrl
inc
xchg
pop
leave
xchg
cmp
ljmp
push
pop
adc
jnp
and
lea
push
adc
jo
push
rcr
adc
add
adc
pop
js
sar
xchg
xchg
subl
movb
jb
call
fwait
jno
jb
adc
jno
sub
adc
dec
fldl
lcall
daa
mov
pushf
rcrl
sbb
mov
xchg
pop
in
push
shrb
das
popa
icebp
inc
pop
push
testb
loope
adc
orl
jecxz
imul
jmp
adc
test
xchg
push
aad
scas
or
mov
mov
pop
imul
xchg
push
mov
add
inc
add
push
pop
call
nop
lret
xor
fistps
add
dec
xor
cmp
rorl
xchg
pop
aaa
ja
add
mov
inc
cli
pop
sub
rorb
jno
jmp
stos
ss
mov
dec
lock
incl
inc
pop
mov
test
inc
imulb
dec
mov
or
dec
cld
lcall
add
fwait
jg
adc
and
ss
ss
negl
xor
mov
mov
or
jbe
add
add
idivb
nop
jg
jo
repnz
ss
test
push
inc
test
push
popf
mov
dec
xchg
loopne
mov
icebp
pop
test
and
call
je
and
outsl
orb
aad
jb
popa
pop
and
insb
mov
xchg
jmp
add
and
addr16
fiaddl
inc
adc
cmp
add
sbb
add
jo
pop
call
lock
cld
fstps
rcll
mov
out
inc
test
add
mov
addr16
sbb
push
rolb
pop
push
sub
sub
cmp
lret
jle
fsubl
test
outsb
adc
xlat
ret
sub
into
data16
stc
mov
aam
inc
cli
add
add
mov
pop
out
outsb
lock
ret
cwtl
jecxz
mov
lcall
notl
jecxz
sbb
ljmp
fwait
loop
subl
cmp
ljmp
ljmp
in
add
mov
scas
cmp
mov
inc
xchg
mov
add
sbb
call
pop
jp
add
inc
je
dec
dec
inc
mov
sbb
inc
in
jnp
loopne
or
lcall
push
push
test
ds
int3
aas
lods
les
mov
sub
add
and
test
adc
pop
popa
fsubrl
in
sbb
dec
mov
or
js
xchg
rclb
pusha
push
stos
xor
call
aam
repnz
push
shlb
mov
decl
fcmovnu
mov
dec
add
mov
jne
jb
jg
adc
mov
jl
mov
cmp
mov
add
aad
mov
pushf
imul
das
addb
in
inc
push
lds
inc
add
filds
gs
shlb
js
or
adc
xchg
inc
lods
xlat
pop
adc
fwait
sub
pop
mov
in
lods
ret
scas
js
push
loopne
into
fcoms
and
sub
pop
pop
pop
mov
jb
popa
pop
test
inc
mov
mov
xchg
dec
mov
adc
mov
mov
lahf
xchg
xchg
adc
pop
inc
lahf
sbb
cmpsl
xchg
cs
sub
adc
sub
fisttps
push
hlt
mov
mov
and
dec
clc
shll
in
xchg
dec
push
and
insb
and
outsb
outsl
aam
sbb
aam
lds
xchg
ffreep
xabort
fcmovb
mov
and
push
mov
mov
lcall
aaa
loop
mov
sbb
sub
pusha
inc
in
xor
in
or
jg
lock
js
gs
add
movb
in
dec
test
das
ret
mov
mov
nop
fst
cmc
mov
mov
jns
sub
cmp
lret
add
pusha
fnsetpm(287
lods
fdivl
push
arpl
add
aam
ds
dec
test
fistps
shrl
fcmovbe
imul
rorb
jp
and
add
iret
sub
mov
adc
sub
pop
pop
mov
flds
mov
jg
push
inc
sub
arpl
rcrl
test
cmp
and
sbb
add
push
fmul
push
jbe
add
jecxz
lock
mov
mov
mov
stos
add
pop
fwait
insb
lods
push
rolb
dec
addb
add
lcall
sub
xor
or
add
cmpsb
push
inc
orb
mov
pop
pop
inc
je
addb
add
jb
sarl
aam
pop
or
dec
js
aam
add
push
jge
mov
nop
test
and
push
push
arpl
push
aas
jecxz
ja
outsl
addl
jp
imul
shrb
or
mov
mov
push
loope
mov
roll
repz
scas
push
adc
xor
jg
xchg
fdivrp
push
shlb
loopne
lret
push
std
add
gs
jle
xchg
add
add
arpl
pop
xor
push
test
testb
fst
in
es
test
test
mov
test
jne
inc
push
clc
dec
xchg
mov
iret
jp
out
push
scas
push
ljmp
jo
arpl
test
mov
out
push
or
cmp
dec
inc
test
loope
mov
xor
mov
ljmp
inc
clc
cs
lahf
es
fwait
jg
xchg
adc
fstpt
add
sbb
mov
or
jb
jmp
cmp
or
imul
mov
adc
inc
in
call
mov
out
push
iret
mov
icebp
sub
xorb
add
sbb
orl
mov
out
aas
aam
or
xor
sbb
jbe
pop
adc
in
decl
je
cmp
dec
inc
adc
icebp
jg
outsl
nop
mov
into
fs
mov
add
std
add
aam
mov
pusha
mov
and
cmpsb
lds
inc
inc
std
std
or
push
inc
lcall
pop
loope
and
jmp
std
dec
mov
dec
dec
stos
pop
xorl
sub
sbb
fstp
mov
cmpsb
inc
and
scas
loopne
imul
add
xlat
dec
xchg
mov
sbb
push
lret
ljmp
fwait
imul
mov
mov
loopnew
loopne
adc
ret
inc
lea
xor
fidivl
andb
jmp
cli
mov
orb
in
sahf
xor
orl
sar
cmp
test
cmp
popf
pop
xchg
add
icebp
cmpsl
lcall
test
out
mov
or
lcall
and
loop
and
in
nop
inc
sub
jg
cs
jno
movsb
mov
sbb
out
add
jo
repnz
push
std
mov
mov
incb
dec
es
in
sub
fsub
into
mov
out
mov
jg
test
lods
pop
popf
push
cmp
or
cmp
shlb
ljmp
shlb
add
aas
mov
arpl
pop
inc
int
call
cmp
push
pop
and
subl
into
adc
pop
aam
dec
xor
adc
add
cld
adc
aas
sbb
jno
aam
mov
ljmp
mov
mov
cmp
or
fnsave
call
cltd
and
push
push
rolb
pop
pop
push
pop
out
ret
push
scas
cli
out
enter
test
movb
icebp
mov
fsubrs
addl
subl
flds
sqrtps
enter
xchg
add
test
mov
push
out
xor
sbb
sbb
sub
xchg
or
fdivrs
or
jecxz
enter
shll
mov
sbb
push
sbb
jl
icebp
loopne
mov
adc
pop
push
ja
or
adc
jo
jb
pop
sub
ss
mov
and
or
cld
dec
scas
push
or
filds
push
cld
addr16
add
dec
and
adc
mov
sub
cs
xchg
mov
mov
or
pop
aad
mov
fidivs
std
push
fimull
stos
adc
dec
ja
fmul
mov
stos
dec
mov
push
xlat
in
lds
cli
clc
jne
flds
mov
fiadds
push
jge
pop
pop
es
add
xor
sbb
clc
xchg
aas
pusha
mov
rol
insb
sub
sub
jno
or
inc
sbbl
mov
aas
test
test
or
push
cmp
add
lock
gs
pop
in
mov
je
sbb
ds
scas
out
pop
scas
and
add
or
or
adc
arpl
iret
repnz
and
jle
out
sbb
and
jo
jb
subl
test
cld
dec
sub
arpl
xchg
add
adc
fnstsw
inc
push
xor
cmp
pop
negb
jb
lock
or
aas
cmp
ret
push
into
and
mov
push
sbb
cmpsl
lea
dec
jg
add
dec
mov
aam
out
rclb
cmp
jo
mov
dec
add
imul
push
and
xlat
cmpsl
or
loope
shl
outsb
rcrb
test
outsb
ja
out
jbe
mov
lds
mov
push
mov
gs
adc
or
ficomps
pusha
cmp
push
push
mov
and
lds
push
push
inc
jmp
mov
sub
dec
outsl
inc
mulb
inc
push
gs
sti
add
or
fimull
jns
data16
divb
mov
dec
jbe
dec
mov
cmp
inc
dec
inc
clc
jg
fsubrl
sub
sub
sbb
lods
xlat
push
xor
sub
push
inc
int
ds
jg
pop
adc
dec
inc
xchg
rcl
and
adc
es
mov
xchg
lea
js
jae
cmp
inc
incl
pop
cld
dec
jp
add
call
adc
rol
inc
xchg
add
xchg
std
les
mov
ljmp
mov
pop
fwait
jb
loopne
add
ret
cvttps2pi
jp
pop
pop
punpckldq
cwtl
lea
jle
movsl
loope
fsubp
jb
test
mov
dec
mov
add
xchg
and
rorb
subl
mov
jg
and
and
xchg
mov
and
stc
inc
mov
or
lock
lret
add
ss
jns
mov
jle
aaa
jg
imul
sub
mov
sub
cmp
dec
aas
or
mov
mov
mov
jl
add
clc
ret
push
xchg
cmp
xor
cmpb
shll
gs
pop
ltr
sub
nop
inc
fwait
call
test
dec
sbb
pushf
jo
and
push
sbb
push
jbe
cmp
add
mov
and
inc
loopne
rcl
push
repnz
mov
fisubl
mov
mov
xor
cmp
mov
je
sahf
dec
sti
xor
sbb
loopne
cmp
push
lock
fsubrl
sub
js
and
inc
movsl
jg
jg
mov
subb
arpl
add
pop
pop
inc
in
sub
repnz
lods
inc
nop
decl
cltd
lea
pop
fldl
ljmp
sub
dec
inc
adc
es
and
sahf
adc
jl
loopne
stc
and
or
in
inc
adc
push
xor
and
lcall
sar
shrl
sbb
int3
stc
jno
call
lcall
jmp
dec
push
push
add
or
lahf
cmp
push
mov
mov
inc
mov
ljmp
outsl
fsubrs
negb
inc
fldcw
sarl
sbb
xor
mov
int3
jno
cmp
mov
lock
jge
pop
pushf
in
popa
mov
cmp
fwait
clc
inc
adc
cmpsb
sbb
xchg
push
or
or
subb
cmpsb
rolb
and
cmp
insb
and
cmp
sbb
outsl
rcrb
insb
mov
sub
xor
push
and
test
xor
out
out
pop
pop
mov
out
sahf
dec
and
mov
sahf
xchg
rcrb
inc
fs
mov
dec
inc
imul
mov
aaa
dec
scas
fimull
mov
decb
movsb
and
mov
or
lods
leave
or
daa
lock
xchg
orl
inc
and
pop
adc
js
je
shlb
adc
je
pop
jo
adcb
out
or
xor
lea
add
inc
or
adcl
sti
fists
movsb
or
pop
shlb
mov
nop
std
lea
push
mov
adc
lea
and
int
adc
and
cmp
mov
mov
cs
mov
daa
adc
pusha
adc
adc
mov
or
adc
adc
and
loope
jmp
shll
out
push
dec
mov
lods
xlat
push
mov
push
imul
push
xchg
xor
idivb
out
xchg
jae
and
push
xorb
add
rep
scas
shlb
je
aad
lcall
add
cltd
arpl
iret
mov
int3
outsb
xor
jno
xchg
fstpt
sbb
pop
cld
popa
es
iret
jbe
shrb
lods
jo
pop
add
add
cli
incl
ret
add
pop
loope
adc
loope
sbb
ljmp
enter
lods
push
push
cld
iret
gs
cmovge
dec
pop
mov
pop
shll
mov
mov
out
dec
mov
cs
lcall
sub
sbbb
xor
daa
xor
mov
pop
cmc
int
push
pop
push
push
inc
aas
aaa
js
loop
dec
outsb
cmp
add
mov
outsl
mov
and
or
inc
jmp
cmp
cmpsl
mov
mov
test
mov
in
addl
mov
subb
mov
ss
pop
cmp
dec
std
mov
xor
and
mov
ret
daa
mov
pop
mov
ljmp
std
shlb
pop
sub
pop
in
cli
sbb
sbb
jmp
push
mov
push
mov
adc
pushf
jp
and
sbbl
cmpsl
movsl
incl
stc
icebp
in
dec
dec
adc
add
faddp
les
jae
add
jo
push
mov
dec
dec
or
jnp
xorb
mov
push
add
sti
lret
popa
sbbb
mov
cmp
or
lock
sbb
sbb
sub
cmp
lock
ss
cwtl
clc
pop
inc
and
jp
orb
add
jle
mov
pop
dec
push
sub
xchg
cmc
mov
addr16
adc
lods
or
out
test
inc
stos
icebp
push
xchg
inc
mov
inc
in
bound
enter
push
orb
sar
faddl
lds
push
test
xchg
out
hlt
outsb
and
adc
or
dec
in
cltd
adc
pop
inc
add
ret
aad
cmp
movsl
js
fcmovne
ficompl
aas
dec
add
aaa
std
inc
outsb
jmp
jnp
icebp
int3
cltd
xchg
dec
mov
sarb
std
sbbb
aam
test
pop
cmpsl
fildll
shll
fildl
ss
adc
cmpsl
cld
hlt
mov
jg
nop
cmp
fsubrl
fldenv
ds
xor
push
addb
inc
adc
roll
sub
call
xor
mov
pop
dec
sub
mov
aam
pushf
sbb
fs
idivb
iret
push
ja
repnz
rcl
clc
mov
jg
mov
push
mov
or
add
jl
addr16
inc
push
jns
add
data16
add
mov
rcrb
popf
std
push
call
push
push
add
add
call
scas
add
mov
out
sarl
mov
in
push
loop
adc
sbb
ret
stos
outsl
and
sbb
stc
decl
sub
test
pop
sub
xchg
mov
sbb
mov
loopne
pop
pusha
inc
ret
pop
pop
and
xchg
lds
dec
filds
pop
fsubl
mov
and
aas
jmp
stos
push
jp
rcr
cmc
or
je
jle
rclb
rclb
xlat
or
mov
push
dec
or
cmp
or
mov
gs
addr16
lods
pusha
shrl
lcall
inc
mov
in
jno
cmp
xchg
test
mov
mov
sbb
jp
loopne
or
or
dec
pop
fcmovne
nop
andb
lods
xorl
aam
sbb
push
xor
jle
bound
mov
cltd
push
lods
cld
dec
add
cmp
cmp
mov
imul
jle
add
fisttps
aaa
dec
sub
cmp
inc
jb
stc
dec
pop
fists
out
insb
aaa
push
xor
dec
ljmp
mov
jns
fs
inc
inc
sub
subl
mov
mov
mov
jmp
outsl
adc
loopne
push
mov
mov
addr16
sub
mov
push
jmp
or
subb
cmpsl
mov
or
xchg
loopne
ror
js
mov
getsec
add
pop
and
and
sti
pushf
hlt
orb
div
sub
pop
or
cmpsb
lock
pop
sub
ret
daa
lods
push
out
pop
enter
or
add
test
and
xchg
cmc
mov
and
insb
add
ret
add
rorl
loopne
stos
xor
arpl
icebp
in
into
mov
add
sub
xchg
sbb
inc
fldt
into
ret
inc
xor
lret
lods
mov
test
testl
out
mov
sub
pop
dec
iret
mov
jno
shll
test
push
add
sub
sub
movsl
or
or
scas
mov
nop
add
lods
lock
jne
mov
not
mov
test
popa
cmp
int
call
or
sub
adc
daa
fadds
sub
fisubrs
cmp
mov
mov
fisubrl
test
cmp
push
jg
inc
cmova
mov
sbb
rorl
jg
daa
jecxz
xor
cmp
jb
adc
scas
mov
add
addl
push
adc
mulb
lea
dec
add
pop
push
in
cmpsl
in
push
lods
scas
jns
pop
imulb
add
xchg
push
xor
mov
adc
add
daa
cmp
push
mov
sbb
rolb
pop
ficoml
rclb
cmp
int3
add
adc
push
mov
jns
lock
or
push
cli
leave
or
mov
sbb
gs
mov
ss
lods
rcrl
sarb
push
mov
inc
xchg
or
mov
pshufw
stos
cmp
mov
nop
jne
dec
loopne
inc
pusha
jge
cld
xor
add
cmp
mov
js
push
sahf
sub
and
or
sub
add
and
push
jnp
mov
push
jge
sbb
mov
sub
or
xor
lods
cli
inc
daa
rcrb
dec
jle
addr16
rcrb
scas
and
xor
rcr
cmp
xor
add
in
movsb
add
sub
add
aas
test
arpl
addl
jl
dec
mov
inc
mov
in
inc
and
xchg
add
pop
pop
aad
into
fsubrs
jo
and
jo
xor
add
xor
push
jnp
test
push
movsb
and
insb
sahf
mov
insb
clc
out
add
jp
insb
pop
add
and
fs
ret
stos
mov
mov
sbb
icebp
mov
pop
aam
nop
pushf
sub
add
mov
fidivs
jg
xor
push
inc
adc
fwait
jle
imul
or
lahf
sub
data16
loope
stos
sahf
xchg
and
aaa
pop
dec
movb
movsb
into
clc
dec
inc
xchg
or
in
pusha
cmp
call
daa
add
jns
xor
pop
pop
mov
das
xchg
inc
fcmovnb
pop
add
pop
or
scas
mov
add
jb
mov
aas
or
mov
fsub
dec
out
cmpsl
cmp
add
imul
or
adc
jmp
inc
jge
xchg
pusha
xchg
mov
adc
mov
nop
push
xor
sbb
loop
popf
mov
pop
xchg
out
outsl
mov
xorl
sbb
xorb
cmp
push
in
ficompl
lret
cmp
add
shll
dec
fadds
cmc
xchg
loopne
or
popf
sbb
out
xor
cmp
sub
aad
ljmp
mov
jb
jmp
add
fdivl
xor
daa
sub
pop
push
sbb
mov
sub
outsl
xchg
jb
add
mov
mov
out
cli
mov
mov
fisttps
jno
mov
pop
fistl
or
imul
jo,pt
adc
loopne
lahf
dec
add
or
int3
test
xor
cmp
push
xlat
mov
clc
adc
xor
ja
adc
xchg
jne
das
or
outsl
cmpsl
daa
xlat
push
sub
add
dec
jl
adc
sub
fdivl
cmpsb
mov
call
mov
xor
arpl
idivl
sub
outsb
mov
lret
and
cli
xadd
push
call
push
arpl
push
lcall
mov
add
mov
inc
addl
out
leave
movsl
popa
or
arpl
pop
fidivrs
inc
je
cmc
add
movl
push
push
movsb
and
pop
mov
push
jl
sbb
int
adc
sub
xchg
or
jl
cmp
cmpsb
jp
push
pop
cmpsb
bound
scas
xchg
sbb
mov
je
ds
js
xor
out
fs
xlat
ret
push
push
mov
mov
bound
sub
and
push
rcll
xchg
add
and
push
sbb
mov
jle
cmc
fistl
leave
cmpxchg
pop
imul
bound
pop
ljmp
xchg
xchg
icebp
add
dec
jl
fldl
mov
je
inc
add
jns
mov
sbb
test
lods
xor
mov
mov
into
in
inc
inc
enter
add
xor
jo
andb
push
lret
mov
mov
cs
enter
pop
mov
mov
sahf
cwtl
xor
sbb
sbb
je
fistpll
sub
cs
pop
js
sub
call
aas
fists
je
repnz
lret
push
pushf
pop
lret
or
mov
js
jecxz
or
cld
notl
cmpl
ss
sti
popf
mov
lea
jle
testb
xor
bound
adc
push
movsl
push
xchg
inc
cmpsl
mov
mov
or
xchg
jl
push
shlb
and
aam
inc
adc
xchg
stos
or
xor
cwtl
mov
js
cmp
popa
ds
inc
pop
mov
loope
mov
and
push
jp
jb
je
das
inc
dec
dec
jp
pop
adc
in
dec
mov
and
movsb
push
add
adcb
mov
cmp
inc
inc
adc
push
inc
mov
mov
cmp
mov
shr
jns
test
dec
mov
inc
movl
sbb
xchg
dec
shlb
cmp
ss
mov
imul
dec
inc
ljmp
jbe
xlat
fisubrl
stc
cs
cmp
jmp
jo
jg
fdivrp
testl
in
test
test
daa
dec
mov
cmp
adc
xor
das
push
mov
std
fwait
js
add
or
mov
ficoms
leave
mov
or
dec
add
orb
inc
pusha
ret
jb
lret
cmc
push
filds
pusha
mov
mov
adc
sbb
pushl
cmp
sub
xor
add
jecxz
clc
sti
pop
sbb
je
inc
out
aad
fs
adc
push
pop
pop
adcb
xchg
xchg
pop
sbbl
jnp
mov
ja
std
inc
loop
clc
inc
out
inc
mov
ficoms
xchg
rol
mov
cwtl
mov
adc
cwtl
test
mov
or
inc
bound
jle
mov
cs
or
hlt
es
pushf
xchg
mov
daa
pop
add
push
push
sarl
jmp
inc
call
push
add
jnp
mov
hlt
push
jge
sub
arpl
insl
rorl
mov
dec
or
cwtl
mov
ljmp
sbb
dec
add
shll
out
adc
loopne
scas
js
or
je
mov
ja
scas
lock
subb
pop
jne
sbb
sub
mov
xor
lcall
in
mov
insb
cmpsl
or
outsl
fsubrl
sbb
pop
mov
sbb
lods
daa
std
push
add
lret
add
ss
pop
cmc
lret
inc
mov
mov
fistps
lds
out
fdivr
lds
xor
out
push
cmp
sbb
inc
data16
out
test
daa
call
add
adc
out
jo
or
dec
lcall
add
scas
test
push
pop
mov
mov
inc
adc
pop
in
and
cltd
and
out
inc
ret
scas
lret
in
lea
cmpsb
and
test
fwait
push
pop
jo
outsl
add
outsb
mov
add
push
mov
cli
stos
lods
pop
or
push
and
mov
adc
pop
jb
les
mov
fs
outsb
push
jne
or
push
adc
in
sti
fcomi
arpl
push
and
jmp
jecxz
roll
adc
sbb
push
xchg
push
sub
inc
inc
pop
aas
ljmp
call
les
outsb
mov
mulb
cld
sub
pop
lock
dec
sbbb
push
ds
jl
xor
or
dec
mov
inc
in
pop
mov
int
mov
adc
mov
fistpl
scas
sbb
inc
xor
call
loopne
xchg
gs
loop
dec
enter
xchg
xlat
xchg
sbbb
jg
xlat
and
aad
sub
outsl
add
push
xor
stos
jmp
pop
dec
popf
dec
or
sbb
pop
nop
mov
adc
or
mov
fcomip
sbb
add
jbe
inc
dec
adc
call
cmpsb
add
push
xor
or
push
add
ficomps
lret
lods
sub
clc
push
adc
xchg
dec
out
push
loop
fadds
mov
push
mov
pop
call
mov
push
idivl
cmp
cmp
mov
imulb
sub
adc
push
jmp
jmp
cmp
aad
mov
sbb
rol
ret
mov
mov
sbb
jecxz
ret
scas
dec
fstl
test
je
test
add
sahf
iret
lock
add
mov
aam
cmp
sbb
sbb
pop
lea
cwtl
mov
push
or
xchg
and
add
loopne
push
push
mov
and
inc
ds
push
shll
xor
mov
push
int3
cmp
mov
mov
ds
lea
hlt
push
xchg
icebp
mov
push
fisubs
mov
cmpsb
outsb
ja
push
jo
cmp
pop
push
adc
xor
clc
and
mov
push
sub
mov
ds
inc
in
push
js
push
shlb
and
sub
push
mov
das
mov
lcall
dec
push
cld
ljmp
cwtl
out
pushf
lock
xor
sahf
rorl
mov
out
test
fs
out
repz
mov
dec
pop
push
out
mov
fdiv
ret
cmp
outsb
sarb
push
push
std
call
jne
icebp
mov
add
jle
or
aaa
lcall
les
out
mov
ficoml
add
sbb
dec
lcall
xchg
jg
sub
inc
incl
rcrb
adc
les
and
pop
adc
fwait
mov
add
adc
push
and
lock
incl
clc
jb
mov
mov
xor
jg
dec
jg
stc
mov
mov
popa
push
sub
cmp
sbb
stos
jle
mov
outsl
sbb
cmp
xchg
jo
clc
xchg
divb
xlat
fs
jl
lds
in
in
pop
js
scas
repz
pop
add
jo
in
imul
arpl
mov
jmp
push
dec
xchg
ret
negb
push
or
loope
sbb
cli
mov
ret
data16
add
xor
mov
push
or
mov
cmp
pop
pop
sub
xchg
hlt
pop
mov
scas
xor
test
mov
and
ss
or
icebp
push
xor
ret
jbe
stos
sub
cs
adc
inc
enter
add
pop
jecxz
cmpl
sbb
inc
pop
push
sub
and
rol
add
jbe
cmp
dec
add
jp
dec
xor
je
jae
shl
in
pop
jg
ja
cld
push
sub
orl
ljmp
andb
adc
js
movsl
dec
jo
fsqrt
mov
sbb
lcall
adc
pop
ds
or
pop
rcrb
mov
cld
sti
jnp
inc
hlt
jle
out
mov
fsubrp
ret
pop
stc
or
pushf
sbb
xchg
or
dec
cmp
jo
mov
sub
inc
add
sub
cli
aam
iret
push
sub
and
lock
xchg
cmp
call
sti
ljmp
dec
mov
push
jecxz
xchg
shrb
push
and
fisubrs
xorb
rclb
and
pop
mov
pop
frstor
out
add
call
push
hlt
lcall
lea
jle
test
or
mov
std
lock
ljmp
cmp
mov
cld
jg
mov
iret
imul
xchg
into
dec
xor
xchg
outsb
push
sbb
push
mov
fprem
sub
cmp
pop
jle
xchg
adc
mov
faddl
inc
mov
dec
addb
sub
pop
ljmp
or
insb
adc
loopne
pusha
inc
jg
dec
cmc
mov
pop
mov
mov
and
push
xor
enter
push
mov
lods
pushf
push
je
push
inc
mov
mov
cwtl
sbbl
mov
fwait
jge
push
adc
pushf
rcll
call
loope
jb
dec
aaa
fisubs
mov
mov
push
nop
xor
ds
mov
push
cwtl
sub
popa
sub
rol
sbb
orl
jp
aad
mov
loope
mov
dec
cld
outsl
push
loopne
mov
movsb
push
jno
cli
incl
loop
or
out
cltd
jb
lds
fcmovu
jp
cli
pop
push
cs
add
movsb
in
cmp
xchg
push
stos
dec
mov
in
repz
scas
mov
and
dec
cwtl
lock
sbb
jg
or
pop
jmp
je
int3
scas
push
inc
std
outsl
sbb
mov
xchg
and
cld
js
loope
test
inc
xor
cli
inc
ss
adc
out
ja
inc
dec
pop
cmp
ja
cmp
aam
jl
xchg
mov
and
lods
inc
rclb
fstps
je
dec
loope
jb
inc
dec
push
jge
inc
aaa
insb
loope
clc
fldl
xlat
movsl
xor
push
cwtl
ret
xchg
aas
add
scas
or
lock
pop
mov
in
push
dec
add
xor
outsl
or
inc
dec
outsl
push
add
xor
or
push
decl
dec
push
test
mov
xchg
outsb
fdivp
fcompl
fdivrs
out
test
pop
jno
adc
and
insb
add
jecxz
xchg
mov
ret
push
xor
inc
ret
push
cmp
inc
pop
addl
sub
mov
jg
insl
xlat
dec
adc
push
cli
ljmp
leave
push
dec
cld
addr16
sbb
mov
rorl
sub
add
and
ret
jg
lock
or
sahf
jle
adc
mov
xor
jg
dec
inc
push
lret
inc
xchg
mov
adc
stos
call
adc
sarl
sub
shr
mov
imul
and
dec
cwtl
mov
fcomip
adc
pop
adc
sub
dec
push
mov
push
das
andl
pop
push
sub
ss
in
xlat
int3
movsl
cmp
and
dec
test
lds
pop
pop
and
mov
pusha
cmp
xchg
pop
pop
clc
sbb
jecxz
idiv
aaa
sti
test
mov
wrmsr
int3
lcall
repnz
popf
pop
push
mov
dec
fiadds
xlat
pop
sahf
push
push
das
ljmp
pop
lret
mov
fmulp
xorb
mov
ss
aas
mov
mov
adc
test
jb
cmp
mov
jns
mov
rorb
into
push
mov
sub
jp
mov
push
insb
jae
das
xchg
or
xor
or
fildll
sub
rol
add
sub
xchg
jp
ljmpw
jg
mov
add
jbe
sbb
pop
ret
stos
in
push
cmc
pop
mov
adc
sbb
xor
cld
andl
jl
arpl
mov
and
pop
nop
xchg
adc
xchg
mov
mov
lods
inc
cld
test
push
fsubr
mov
jmp
cmpsl
arpl
mov
mov
pop
out
dec
sahf
fucomp
jp
cli
adc
inc
push
out
lods
dec
imul
imull
cmp
sarb
mov
sub
sbb
aad
test
xor
in
fistps
cli
sub
arpl
aas
add
js
les
xchg
negb
fnop
xor
push
sti
jo
mov
pop
insl
rcrb
fcomps
dec
popf
adc
jg
pusha
push
stos
dec
movsb
cmp
pop
sbb
mov
push
in
or
test
mov
mov
movsb
xor
inc
faddl
sub
shrl
adc
adc
add
jne
les
inc
pushl
dec
fsubl
pop
rolb
mov
push
outsl
mov
stc
jae
add
jl
adc
add
adc
xchg
testb
mov
loop
dec
cli
dec
xor
test
jecxz
sahf
pop
add
repz
mov
sbb
and
aaa
mov
loop
leave
fimull
add
mov
test
xor
outsb
and
pusha
dec
and
adc
iret
addr16
sarl
cmp
int3
stos
and
add
sbb
dec
inc
rcr
pop
jne
in
ja
rclb
xchg
sub
daa
nop
lret
push
add
stc
mov
mov
xor
pop
xchg
fwait
nop
push
push
call
popa
add
jg
mov
fidivrl
mov
or
push
cmp
push
hlt
loope
out
or
ret
testb
inc
sbb
mov
dec
mov
pop
leave
mov
aaa
ljmp
sbb
pop
mov
lea
cmp
call
fcmovnbe
nop
and
fwait
pushf
shlb
fisubrs
dec
inc
lret
aam
repnz
inc
mov
shrl
or
cmp
cli
subl
push
cwtl
pop
mov
inc
xorb
popf
dec
cwtl
xchg
xor
loop
shrl
outsl
mov
add
dec
or
negb
insb
jp
push
mov
cwtl
mov
movsl
popa
xor
add
test
fmuls
inc
lock
insb
xor
or
fsubl
rolb
test
hlt
mov
aam
xor
scas
cmp
popf
cli
daa
adc
test
adc
push
jmp
xlat
mov
dec
xchg
pop
mov
out
test
inc
sbb
push
mov
inc
dec
dec
lret
mov
xchg
inc
mov
mov
pusha
mov
js
aas
push
fldl
jb
jo
in
push
fs
fistps
mov
cmpsb
inc
push
and
iret
sbb
add
in
or
fisubrs
mov
adc
dec
cld
out
test
movsl
lret
arpl
dec
mov
and
cmp
stos
sub
push
scas
addr16
shl
stos
lcall
adc
inc
test
jmp
pusha
fs
dec
pop
lock
je
cmp
movsl
mov
xor
jbe
iret
xchg
add
pop
jo
cmp
pop
popa
pop
insl
call
xorb
inc
xor
mov
in
int
sub
pop
mov
push
das
jl
ss
add
lea
ss
ret
incl
and
rorb
je
pop
sub
sbb
dec
jge
add
in
add
scas
mov
andb
rcr
testb
or
in
add
mov
mov
incl
ret
add
cmp
ja
hlt
iret
rorb
loop
jmp
je
pop
std
lret
or
call
xchg
or
adc
test
adc
mov
mov
cs
call
mov
dec
int3
adc
ja
pop
sahf
push
push
and
ds
add
mov
dec
aam
or
shrb
arpl
xlat
test
xor
sub
aaa
jge
test
sbb
or
jbe
pop
adc
jo
roll
addl
scas
mov
gs
cmp
mov
lds
and
bnd
ret
adc
mov
subb
jl
lcall
pop
add
movsl
jge
ret
stc
leave
dec
jp
bound
push
rclb
pop
out
or
sub
push
mov
fwait
pop
cmc
or
mov
pop
cwtl
stos
jmp
pop
scas
add
shll
gs
cld
daa
fcompl
sub
xchg
repnz
cmp
andb
std
sbb
in
shll
sub
movsl
pop
test
sbb
or
arpl
loopne
cmp
ror
sbbl
icebp
xchg
mov
shll
ret
insl
mov
inc
clc
push
aam
in
sub
xor
jo,pt
lock
push
mov
pop
xchg
cmp
mov
and
add
lret
scas
jmp
or
pusha
bound
add
dec
lods
sbb
sbb
mov
sbb
loope
pop
fbstp
push
xor
push
movsb
dec
je
or
xor
outsl
stos
insl
sub
pop
pusha
hlt
ss
adc
pop
add
dec
xlat
shll
jge
push
and
cmpsl
dec
cmp
das
rclb
insb
push
mov
sbb
lret
pusha
adc
ret
mov
jbe
sbb
sub
dec
repnz
push
lods
cli
xor
dec
sbb
call
jne
inc
mov
fs
pop
fsubs
loope
dec
jecxz
pop
adc
test
xchg
mov
ljmp
mov
mov
push
std
scas
mov
mov
lock
idivb
pop
pusha
ror
out
xchg
cli
sub
mov
rolb
loopne
mov
xchg
ja
push
ss
nop
into
imul
add
aam
call
mov
sbb
xchg
push
sarl
dec
loopne
sahf
cwtl
fnstcw
inc
xor
outsl
add
subl
push
insl
inc
mov
push
pushw
loopne
mov
imul
pop
push
fstpl
push
and
lea
push
push
mov
add
inc
js
xchg
cwtl
add
fisttpl
dec
inc
push
push
bound
movsb
inc
jb
fsubl
rclb
rol
push
insb
les
add
jb
into
mov
xchg
dec
push
sahf
ds
push
bound
shlb
lods
mov
fidivrs
adc
or
dec
jne
push
ret
add
ljmp
mov
inc
jno
fld
nop
subb
cs
push
inc
popa
xor
outsl
sub
and
arpl
inc
dec
outsl
xchg
orb
mov
inc
dec
bound
ss
call
adc
dec
push
enter
ja
arpl
and
inc
cli
fstl
cltd
cmp
add
rorl
or
out
decl
outsb
ljmp
push
inc
scas
inc
push
sahf
ret
mov
add
dec
mov
jg
add
dec
mov
mov
sub
pop
dec
aas
jle
dec
dec
push
push
sub
cmp
pop
jb
lock
popa
cmp
stos
ficoms
sahf
pop
xchg
mov
rcrb
popl
nop
outsl
or
or
or
push
add
mov
add
fs
int
xchg
mov
gs
out
cmp
faddl
addr16
xchg
jp
into
jecxz
inc
cltd
lods
outsl
subl
add
cmp
sub
subb
pop
dec
dec
add
hlt
cltd
pop
mov
and
inc
js
sub
xorl
pop
add
aam
cmp
sarl
insl
adc
jo
inc
into
dec
scas
push
test
outsl
jae
lret
aaa
rolb
dec
jge
push
in
out
sub
insb
mov
push
sub
cmp
cmp
jmp
and
test
xchg
divl
fucom
jg
push
inc
add
add
jg
jecxz
jne
mov
inc
sbbl
lods
jg
adc
call
add
rclb
xor
lret
int3
add
das
add
cmpsb
icebp
clc
push
lret
jp
pushl
sbb
hlt
add
insl
sbb
xchg
pop
mov
outsl
lea
or
dec
sti
add
inc
mov
mov
push
xorl
cmpl
and
dec
pop
push
aad
test
mov
movsl
lock
mov
pusha
mov
mov
pop
mov
add
adc
sbb
xlat
dec
mov
cli
jge
stos
and
add
inc
movsl
in
std
mov
cmp
push
push
aaa
test
mov
lds
jle
fidivl
fcoml
mov
or
pop
mov
aam
cwtl
add
mov
adcb
or
xlat
ljmp
mov
imul
inc
pop
ja
iret
jmp
pop
js
pop
push
inc
das
xor
lock
mov
or
fstpt
and
outsl
mov
idivb
loope
adc
scas
add
lods
sbb
sti
imul
xor
mov
xchg
inc
fwait
icebp
ss
pmulhw
adc
jnp
lods
mov
sbb
push
lea
insl
subb
xchg
mov
js
test
cli
imul
js
sub
dec
mov
jbe
fdivrs
or
dec
es
je
mov
lret
scas
pop
sbb
jo
mov
push
sbb
or
jmp
or
jbe
adc
popa
cs
mov
jg
jle
adc
test
dec
jl
cmc
pop
push
pop
repnz
mov
mov
adc
cli
ret
icebp
test
cmp
fisttps
jo
outsl
clc
inc
cmp
sti
test
add
sub
pop
out
inc
rcll
mov
into
adc
xchg
dec
and
jmp
sub
cld
mov
ss
lret
mov
mov
cmpsl
lcall
inc
mov
ffreep
add
insb
mov
push
mov
xchg
mov
inc
fistl
push
jo
testb
adc
in
dec
mov
aam
je
mov
aad
je
mov
xchg
mov
push
fistps
xchg
push
repz
mov
pop
scas
mov
jo
xchg
rorb
cmp
int
cmc
subl
jne
shrb
pop
push
add
push
add
cmp
pop
add
and
dec
cmp
dec
xchg
ret
je
xchg
sbb
js
das
aad
sub
push
push
mov
addr16
lahf
mov
jae
stc
push
test
xorb
cmpsb
fiaddl
inc
push
mov
jo
mov
dec
and
lea
jecxz
mov
cmovg
cwtl
jae
cld
inc
aas
adc
and
mov
cmp
xlat
cmp
ljmp
cwtl
stos
xchg
dec
sub
dec
push
aad
fwait
js
push
lret
ds
leave
dec
jg
pop
ret
and
lods
sub
lds
or
adc
xor
cmp
inc
rol
aad
fmull
jp
je
xor
dec
arpl
dec
push
xchg
test
xor
lock
ss
clc
outsb
mov
scas
js
popa
mov
cmp
mov
sub
adc
lahf
test
mov
sbb
dec
cmp
push
mov
inc
push
or
cmpsb
pop
test
movsb
cmpsb
sub
mov
pushl
dec
adc
add
jecxz
jle
int3
and
in
dec
mov
xor
xchg
fcom
sbb
out
mov
dec
int3
js
xor
pop
cs
addb
adc
cli
push
xchg
scas
and
pop
rorb
add
sub
xchg
negb
sbb
movsb
adc
pop
cli
xchg
xorb
xor
je
xlat
xorb
add
rcr
cmp
sbb
bound
call
mov
push
push
or
sbb
leave
les
mov
mov
pop
mov
adc
mov
hlt
cmc
leave
dec
rcll
xor
out
pop
dec
adc
sbb
rolb
jecxz
mov
mov
ss
nop
cmp
pop
fdivr
add
js
lods
cwtl
mov
aad
mov
pop
pop
clts
inc
xchg
and
andl
xchg
add
ds
outsb
pop
mov
test
jmp
pop
pop
mov
mov
icebp
cmc
xchg
push
insb
push
pushf
loopne
dec
test
icebp
inc
sar
pop
aaa
jge
jmp
xor
jle
scas
inc
mov
scas
jbe
int3
pop
adc
adc
cs
jge
push
div
add
outsl
std
lahf
loope
sbb
adc
out
adc
pop
xchg
lods
cmp
out
inc
jbe
insw
push
mov
dec
mov
testl
mov
aaa
sub
data16
inc
jo
inc
inc
lret
js
mov
push
jae
and
outsl
xchg
pop
negl
dec
je
inc
and
inc
sub
add
ss
push
lcall
jbe
jbe
and
outsl
rol
insb
out
int
adc
scas
inc
sub
push
sub
xor
mov
je
mov
call
bound
add
push
fisubrl
add
out
xlat
add
sub
mov
or
test
mov
iret
rolb
stc
push
dec
xor
cwtl
push
inc
xor
mov
cs
clc
imul
sub
sub
rclb
lret
jnp
cli
push
mov
loop
test
sub
xor
outsb
insb
push
mov
outsb
pop
arpl
jo
inc
push
int3
das
pop
push
push
insl
insl
dec
cmp
push
insl
dec
jo
sbb
xchg
clc
add
outsl
dec
dec
movsb
nop
jo
fisubs
cli
adc
ss
fadd
inc
jae
icebp
mov
rclb
jne
pusha
popf
popa
dec
dec
xchg
mov
mov
out
jle
push
stos
pop
out
mov
iret
or
inc
loopne
push
data16
push
insb
mov
inc
push
dec
fmull
cmp
hlt
push
jbe
push
or
in
push
push
pop
dec
mov
push
xor
dec
dec
sbb
jne
push
and
adc
pusha
push
mov
fwait
shl
or
cmp
cld
es
ljmp
mov
mov
add
mov
mov
daa
add
out
lcall
dec
movl
fadds
incl
add
incb
pop
pop
xor
sbb
cs
add
call
inc
push
outsb
ret
insl
inc
jle
sbb
jmp
scas
subb
jb
mov
add
inc
movsb
es
pop
nopl
mov
rorb
iret
or
add
lret
jl
movsb
push
and
push
mov
cltd
sub
imul
fcompl
negl
aad
inc
je
sahf
or
mov
pop
push
or
pop
fiaddl
sbb
je
pop
lods
shrl
mov
or
imul
add
and
lods
inc
test
adc
lret
mov
repz
adc
mov
cld
xchg
pop
sub
push
xor
add
mov
mov
pop
push
les
call
ljmp
xor
call
mov
sbb
cld
add
std
pop
scas
sub
mov
stc
mov
pop
push
ret
sbb
mov
insl
cli
or
shr
maxps
test
loopne
imul
add
sub
loope
shll
stos
or
int3
sub
cmpsb
inc
mov
fbstp
icebp
dec
add
ret
paddd
pop
adcb
bound
cmp
push
fidivl
fs
add
sbb
hlt
adc
mov
leave
dec
pop
push
test
xor
jp
cmp
xchg
or
pusha
pop
ret
lods
ss
out
clc
stos
adcb
sub
jp
les
lock
or
in
and
andb
movsb
outsl
adc
jl
iret
and
dec
push
leave
or
into
fs
push
or
cwtl
jle
outsb
ret
sbb
inc
xor
aaa
sarb
adc
adc
or
jp
inc
dec
jae
hlt
sub
and
push
add
sbb
or
and
cmp
mov
call
addb
out
mov
out
fildl
in
out
ret
inc
adc
in
mov
pop
push
cmp
add
mov
xor
xor
pop
je
lea
push
cmp
mov
or
adc
xorb
jg
cmc
adc
sbb
sar
adc
data16
bound
fisttps
daa
je
mov
sbb
test
ss
dec
js
push
aam
mov
jl
fcompl
ds
sbb
and
mov
sub
ret
sbb
je
mov
mov
inc
std
das
lods
jb
arpl
mov
dec
dec
or
rorb
push
pop
loop
mov
jns
sbb
mov
add
mov
adc
mov
pop
jmp
fbstp
stos
mov
sahf
jl
add
push
fistpl
popf
pop
pop
xchg
add
lods
mov
and
mov
mov
adc
dec
or
sbb
mov
popa
dec
sub
int3
mov
cmp
loop
mov
jge
adc
sub
shrb
and
pop
push
jp
arpl
popl
mov
or
sbb
push
ss
cmp
add
jg
test
jo
inc
in
stos
mov
leave
fiaddl
nop
pop
imul
ljmp
xor
sbb
lahf
aam
or
shlb
push
movsl
and
push
dec
fcmovnu
and
jge
mov
xchg
inc
push
arpl
push
icebp
sbb
mov
push
sahf
add
xchg
shl
shrb
lahf
dec
push
jnp
out
cmc
call
insl
cmp
dec
jg
mov
in
push
mov
inc
dec
es
mov
loopne
add
cwtl
jae
lahf
jmp
data16
inc
ficomps
mov
cmp
jle
pop
push
push
lret
pop
aad
inc
push
mov
loop
push
mov
in
shr
pop
mov
inc
insb
push
sbb
and
test
inc
ficomps
mov
sti
sbb
pop
add
sub
xchg
mov
dec
out
push
sub
ss
cmp
into
jp
fnsave
popf
addb
add
imul
pop
js
ljmp
outsb
push
push
mov
cmp
cld
ljmp
mov
sar
dec
subb
push
jmp
outsl
jmp
cmc
and
and
imul
xchg
fs
filds
adc
pop
jno
mov
adc
sub
popf
movsb
mov
mov
mov
or
inc
and
rolb
add
decl
lret
or
daa
add
mov
inc
test
shl
jne
sbb
mov
int
dec
adc
dec
adc
aam
cltd
mov
lock
inc
arpl
lock
cmp
sbb
cli
js
push
push
mov
dec
out
cmpsl
pop
adc
or
mov
aam
inc
sub
cmc
notb
shl
or
in
fcompl
es
mov
add
sbb
push
push
cld
daa
push
xor
push
fsubs
and
sub
stos
orl
jl
js
cmpsb
sub
arpl
iret
call
push
es
ljmp
fwait
pushl
jmp
dec
movb
pop
xor
cmp
loopne
cmpsb
lds
xchg
mov
call
jmp
xchg
testl
clc
shrl
insb
or
inc
les
mov
jecxz
or
mov
outsb
push
and
adc
mov
lea
ss
imul
and
mov
push
loope
icebp
stos
lds
pop
or
pop
sub
leave
aad
mov
mov
aaa
push
rolw
rorb
mov
jle
add
jne
ss
das
out
cmp
mov
cs
mov
push
and
adc
and
dec
scas
mov
ror
js
push
pusha
std
jno
sub
add
or
mov
sub
xchg
jo
push
cmp
pop
pop
jnp
pop
and
adc
mov
pop
mov
mov
ret
mov
movsl
scas
jle
pop
sub
icebp
push
ss
jne
in
movsb
lds
or
std
push
adc
std
int3
adc
cmp
mov
inc
out
dec
clc
js
out
fsubrp
outsb
test
fistpll
fs
jae
xchg
sub
loope
mov
cmp
es
mov
mov
push
xlat
sub
mov
push
push
dec
rclb
and
call
cli
jg
cmc
push
popa
push
dec
sbb
inc
dec
mov
inc
add
inc
fs
cmp
xlat
fidivs
bound
cmp
fs
push
out
dec
pop
push
dec
dec
lock
push
pop
clc
lea
push
push
or
and
inc
bound
mov
divl
jb
outsl
push
repz
cld
scas
lret
inc
mov
dec
dec
pop
push
ss
out
lcall
int
test
dec
xor
out
inc
inc
outsb
pop
jnp
test
sahf
xor
adc
jl
pop
ret
or
push
add
inc
negb
shll
inc
loop
adc
add
ss
stc
cld
jg
inc
cli
push
dec
icebp
ror
dec
stos
jae
repz
loop
adc
popf
arpl
pusha
cmp
aaa
cld
movsb
dec
in
dec
daa
stc
aad
xchg
pop
orb
sbb
and
push
add
cwtl
sbb
pop
add
ljmp
fwait
lock
das
pop
jb
pop
xlat
out
out
aam
hlt
xor
jge
dec
lret
mov
test
scas
cmp
pop
inc
mov
testb
pop
andl
out
add
add
mov
lcall
out
push
push
or
inc
repnz
das
mov
shrb
clc
push
fs
cltd
xlat
or
push
or
push
rorb
aas
rcrb
xchg
ja
xchg
pop
shlb
jmp
push
cmpsl
cmpsb
out
dec
add
scas
push
adc
inc
xor
mov
scas
es
dec
mov
test
mov
mov
cmp
mov
mov
jg
pop
lods
cmp
std
aad
push
add
pop
sub
mov
jns
bound
pop
adc
and
cmp
out
cli
jne
sti
add
add
xlat
xchg
mov
push
cmpsl
in
xchg
dec
mov
loope
sbb
and
push
jbe,pn
rcrb
insb
adc
and
sahf
mov
mov
mov
inc
lds
inc
sbb
cmpsb
adc
dec
lods
out
xchg
jbe
add
jl
fwait
or
inc
cmp
pop
jl
aad
out
cli
add
sub
imul
sub
add
sub
mov
push
addr16
adc
xchg
stos
mov
mov
imul
mov
ficoml
add
test
test
cmc
sbb
addr16
stos
fists
xchg
or
movsb
fmuls
out
sub
mov
dec
push
cmp
aaa
addb
add
clc
and
daa
sbb
mov
add
pop
clc
rorl
push
mov
subb
push
xlat
incl
mov
test
or
aad
incb
xor
push
push
lock
or
popa
add
sub
adc
in
push
lret
add
xchg
or
ds
mov
mov
cmp
movsl
mov
lock
rolb
mov
adc
mov
mov
sar
xlat
testb
loop
sahf
pushl
insb
and
push
inc
and
adc
idivl
push
dec
jge
jg
lcall
dec
and
lock
cmpsb
or
fsub
cmpsb
mov
aas
or
sub
push
inc
pop
sbb
test
in
xor
cld
dec
cmp
mov
xor
cli
jg
int3
subb
aam
and
pop
mov
jecxz
into
push
push
inc
sti
insl
or
clc
adc
pop
sbb
push
insb
aad
jmp
or
mov
xor
test
jne
jg
into
or
adc
dec
jae
ljmp
pop
icebp
mov
adc
add
aas
mov
stos
lods
dec
or
es
in
lods
mov
bound
sub
cltd
icebp
ljmp
and
ss
dec
cld
sbb
mov
sarl
mov
gs
outsl
push
xchg
repnz
punpcklbw
xchg
nop
mov
cmc
xchg
inc
push
lret
and
add
orl
nop
mov
and
sbb
call
xor
dec
cmc
aaa
mov
jnp
xor
lret
xor
mov
or
mov
push
pop
loope
shll
push
loop
fidivrs
js
jnp
cmp
mov
loopne
imul
mov
ret
xor
inc
movsl
pop
fcomip
into
fiadds
xor
mov
or
pop
aam
ljmp
cli
mov
scas
or
mov
lock
dec
cmp
push
cmp
mov
loope
add
incl
pop
jmp
adc
mov
in
rolb
dec
fisttps
cmpsb
mov
jp
add
shl
out
loopne
lcall
and
and
je
xlat
sbb
adc
aaa
mov
addb
mov
inc
sub
jle
sahf
roll
pop
pop
test
mov
fadds
inc
jl
add
pop
pop
sarb
into
test
daa
add
ds
mov
ret
hlt
pop
adc
mov
nop
icebp
or
or
jmp
inc
fidivrs
fisttpl
sbb
mov
pop
xchg
hlt
fbstp
adc
les
cmpsl
cmp
or
jg
pop
add
or
push
xchg
sub
sti
es
sub
cmp
xor
nop
in
xchg
icebp
push
mov
sbb
mov
lock
jg
adc
inc
jns
bound
movsb
adc
out
xor
outsl
or
lret
and
jmp
nop
cld
out
inc
popa
test
add
dec
xor
fists
dec
les
clc
jo
mov
and
test
mov
mov
mov
ljmp
or
add
out
mov
dec
dec
pusha
aaa
pop
fmuls
xchg
sti
xor
hlt
es
xchg
aaa
pop
aaa
or
aaa
rclb
pop
add
orb
rcrb
sub
push
pop
and
imul
jecxz
loopne
leave
cmp
cwtl
arpl
dec
shll
cmp
cltd
ret
and
sbb
adc
jo
dec
and
inc
js
insb
stos
or
or
scas
xchg
jecxz
fisubrs
adc
sbbb
lock
je
in
outsl
push
inc
inc
lcall
add
test
loop
addb
xchg
inc
add
gs
jp
mov
lret
loopne
and
mov
enter
lock
cmp
xor
leave
test
xchg
lret
mov
adc
mov
daa
shl
incb
cmpsb
jecxz
sub
lahf
ficomps
mov
jo
mov
cmpsl
pop
lods
jns
adc
xchg
je
fstpl
mov
push
jmp
int3
push
pop
push
scas
jb
ror
or
int3
jbe
mov
push
or
es
mov
clc
jecxz
pop
rolb
adc
call
int
mov
or
insb
push
pop
movsb
lea
inc
mov
cmp
testl
icebp
pop
clc
test
jae
jge
mov
test
mov
xchg
jp
incb
mov
loope
loope
and
mov
addr16
mov
ss
pop
dec
ljmp
cs
gs
jp
lock
shlb
sbb
adc
jbe
push
je
fwait
mov
sub
cmpl
sar
jb
lcall
mov
cmp
popa
sub
add
notb
pop
xchg
mov
inc
xchg
je
aaa
pop
and
and
mov
test
xchg
inc
push
xor
adc
inc
pushf
into
mov
sub
pushl
ss
fs
pop
inc
adc
ljmp
loopne
fwait
or
xor
aam
adcb
iret
stos
add
mov
test
rcr
rcr
and
push
cmp
pop
xor
in
push
out
adc
lock
cmp
sub
decl
or
dec
adc
inc
addr16
mov
push
out
sbb
dec
data16
mov
scas
xchg
and
popa
aaa
js
adc
test
popa
cli
bound
xchg
fidivrs
jo
push
data16
outsb
jecxz
pop
jmp
push
rorb
add
or
or
jns
jno
jl
jecxz
cmpsb
popl
ja
add
decl
jne
add
adc
movsb
popa
dec
mov
and
popa
xor
loopne
dec
nop
loopne
lock
pushf
ljmp
push
push
fsubp
xchg
int
pop
insl
mov
mov
lret
test
inc
jb
or
outsl
push
fisttps
xchg
fnstenv
js
test
pop
inc
test
hlt
imul
insl
out
aaa
bound
divl
inc
loop
imul
fisubrs
fs
jns
inc
add
lods
dec
dec
hlt
fisttps
mov
push
cmp
push
or
aad
fwait
insb
mov
sbb
sbb
dec
outsl
or
sbb
mull
sub
rorb
mov
loop
loop
mov
mov
push
ja
and
loop
mov
xchg
push
cld
fsub
notl
into
and
dec
xor
inc
je
xchg
lcall
lods
push
mov
dec
sbb
mov
rcrb
movsb
nop
jo
test
fidivl
mov
scas
mov
in
inc
sarb
rorl
stc
pop
xchg
fs
incl
or
sahf
jge
xchg
add
adc
testb
inc
mov
cwtl
leave
incl
or
call
nop
jbe
in
ljmp
or
mov
pop
cmc
add
ds
jecxz
insb
sub
and
scas
mov
or
add
push
xor
nop
xor
fistps
cmpb
xchg
or
push
and
mov
inc
mov
aad
push
and
repnz
xchg
mov
arpl
inc
jg
subb
outsb
out
push
cmp
je
cld
xor
pop
pop
sub
jl
jns
int
add
and
es
fimull
mov
les
insb
shl
and
or
and
or
shlb
loop
sarb
mov
pop
in
xor
mov
lock
ds
cmpsb
out
xchg
push
push
les
loope
nop
sub
mov
pop
dec
jle
jl
lret
insl
lcall
jne
jecxz
mov
pusha
insl
cmp
sbb
jo
jg
hlt
pop
adcb
fwait
dec
push
and
or
popf
rclb
test
jg
jns
mov
push
das
xor
fidivrs
mov
lcall
sub
icebp
xchg
ret
je
push
lods
pushf
add
mov
pop
jo
cld
mov
adc
test
jmp
jbe
push
and
or
cltd
scas
jnp
jno
and
mov
xor
xchg
sti
icebp
mov
hlt
aad
xchg
sub
movl
movsb
incb
pop
inc
popf
sbb
mov
adc
xchg
push
test
inc
cs
fldt
add
sub
mov
mov
sti
clc
fidivrs
jb
mov
movsb
cmc
enter
sar
push
dec
or
xchg
and
or
test
shll
dec
lret
pusha
cmp
insb
int
pop
fadds
xchg
int3
test
jg
inc
cmp
xor
enter
dec
out
sbb
pop
call
jo
lock
orb
and
adc
add
inc
inc
push
inc
mov
ret
outsb
add
jle
scas
imul
pusha
loopne
je
pusha
sbb
and
xor
mov
imul
loop
sbb
pop
inc
insl
xchg
jmp
pop
add
movsl
inc
sub
add
jo
jns
or
mov
sbb
xchg
dec
lock
cld
into
pop
ljmp
mov
mov
aas
add
notl
ja
mov
fidivl
push
leave
xor
xchg
push
and
shlb
pop
mov
pop
or
aas
loop
cmp
stos
add
adc
loope
hlt
pushf
push
sti
mov
ret
dec
es
xor
mov
push
sub
mov
push
push
or
mov
lock
adc
jecxz
push
out
pusha
sarl
inc
dec
lahf
repnz
cmp
outsb
mov
lock
add
test
push
push
add
jmp
mov
andb
adc
movsb
dec
adc
or
das
ret
dec
jae
sbb
inc
pop
pop
cmp
inc
jl
push
push
roll
lcall
mov
ss
popf
fs
add
adcb
add
test
les
and
mov
sbb
adc
pop
cli
fldcw
adc
push
shll
push
or
xor
lret
loop
lahf
dec
js
sub
mov
mov
add
pop
stos
clc
pop
inc
pop
cvtps2pi
das
loop
and
addr16
shrl
outsb
lock
notb
push
lret
pop
rolb
pop
sar
mov
cmc
jne
pushf
daa
cmp
mov
mov
das
add
jnp
ret
sarl
cmp
dec
and
adc
fiadds
fcompl
or
lods
push
mov
bound
stc
cmpl
les
mov
pop
mov
incl
or
mov
xchg
dec
inc
out
cld
fwait
ret
jl
dec
arpl
jns
pop
sbb
pop
fadds
insb
xchg
mov
adc
cmc
inc
xor
pusha
adc
loop
mov
fs
xchg
push
mov
shl
sti
test
pop
jo
xchg
imul
ror
jl
hlt
sub
fstl
and
jp
pop
dec
mov
das
or
hlt
lea
mov
push
nop
xor
mov
push
mov
shll
inc
mov
negb
mov
insl
std
inc
fmuls
push
fdivr
jnp
inc
bound
mov
subl
push
jl
stos
push
test
outsb
loope
pop
xchg
orb
lcall
jle
mov
roll
sar
mov
mov
mov
sbb
in
pushf
dec
push
insl
sbb
popf
stos
mov
mov
aad
mov
or
mov
xchg
mov
mov
shrb
in
xor
movsb
cli
loope
jo
stos
popa
xchg
cmp
jo
test
sarb
inc
add
adc
cmp
jns
or
lods
cli
in
mov
pop
mov
andl
test
push
cmp
sarl
fbld
xor
clc
and
inc
loope
mov
je
cli
xchg
sub
int3
cmc
insb
adc
or
shlb
sbb
pop
add
das
or
jne
add
mov
clc
and
sbb
jle
addl
mov
mov
lcall
cmp
lahf
ret
add
push
add
imul
xor
les
fstpt
pusha
mov
aas
jnp
shlb
popa
xchg
add
mov
cld
cmpb
in
cmp
dec
inc
data16
andb
adc
inc
pop
dec
inc
test
push
xor
pop
gs
icebp
sub
cmp
adc
fs
xchg
enter
add
negl
or
inc
push
push
pop
pop
loop
adc
arpl
ficoms
cmp
sub
or
fnstsw
bnd
bound
cmp
loope
pop
mov
mov
pop
mov
and
loop
xchg
push
loopne
mov
pop
fsts
cmp
pop
jbe
inc
aad
call
xor
lret
or
mov
cltd
das
xlat
push
imul
push
jmp
jne
ja
shll
dec
sub
ss
in
ss
insl
pop
xchg
adc
loop
dec
xor
fiadds
dec
jp
adc
repz
xchg
test
lods
aam
jle
or
testb
bound
insl
inc
inc
dec
loope
push
test
push
imul
inc
out
jmp
push
sub
insb
inc
inc
enter
lods
in
shll
roll
lret
push
std
lock
int3
aam
gs
outsb
pop
loopne
inc
push
cmp
jnp
or
shrl
dec
bound
push
jno
dec
outsb
xlat
fisubrl
adc
cmp
cs
lea
push
ss
xor
and
je
cld
dec
cld
pop
xor
mov
add
in
inc
daa
push
addb
scas
inc
sub
outsb
push
inc
loopne
adc
aaa
outsb
pop
push
pop
ret
imul
insl
jp
shl
addr16
jae
sbb
pop
js
pop
insl
xchg
sbb
or
out
dec
push
jb
pusha
call
xchg
jg
test
outsl
inc
ficomps
jnp
stos
outsb
dec
jns
jge
push
sbb
int3
add
add
or
cmp
rorb
push
jbe
cltd
les
mov
arpl
movsl
push
add
cmp
xchg
cltd
jmp
adc
sti
and
inc
add
mov
or
int3
pop
es
dec
clc
dec
addr16
xchg
in
inc
ja
add
add
adc
cmp
sbb
arpl
cwtl
mov
es
es
clc
aas
ret
mov
fiaddl
inc
dec
or
iret
and
cltd
inc
jg
aaa
push
std
jg
popa
subb
lcall
mov
mov
push
icebp
nop
push
fwait
mov
repnz
aas
cmp
in
xchg
jle
xor
mulb
pop
enter
mov
sub
sti
jge
stos
cltd
sbb
push
cmpsb
pop
adc
add
je
inc
dec
xchg
push
lret
xchg
out
cli
sbb
fs
rolb
loop
mov
inc
test
mov
fs
sbb
lret
out
adc
movsl
cmpsb
inc
jp
sbb
and
adcb
pop
lock
inc
cmp
jp
or
rorb
add
push
mov
in
pop
cmc
cmp
xchg
push
xchg
fistl
mov
stc
pop
pop
incl
in
pop
test
movb
inc
sbb
sub
add
imul
push
rcrb
dec
daa
add
inc
mov
and
jbe
and
rorl
pop
decl
xchg
pop
add
inc
test
and
xor
add
sbb
adc
adcl
or
aam
rclb
add
push
cli
xchg
mov
and
push
leave
enter
pop
mov
or
jecxz
pushl
sbb
add
nop
add
pushl
fidivl
pop
mov
adcl
arpl
stc
mov
fsubs
jne
enter
incl
cld
add
cmpl
in
out
inc
push
fstps
aaa
shl
das
sbb
fbstp
ficomps
test
adc
fcoml
cmp
aaa
std
das
clc
push
ja
mov
test
lods
add
mov
ret
xchg
lock
pop
aam
pop
pop
dec
push
push
std
fwait
stos
jno
mov
or
pop
pop
pusha
sbb
add
out
add
jg
test
mov
loopne
popf
cmovae
jp
mov
sbb
mov
and
mov
cli
mov
add
mov
add
or
les
push
ret
je
xchg
into
sbb
out
cld
inc
daa
subb
mov
cld
push
out
pop
mov
stos
mov
xchg
pop
imulb
inc
rolb
out
push
fidivl
adc
push
xchg
push
or
fistps
adc
notl
jae
sub
faddp
add
pop
or
je
clc
fstl
push
push
cmpb
sbb
push
hlt
js
dec
jle
cmp
and
pop
outsb
pop
push
repnz
mov
add
adc
and
fdivrl
cmc
sbb
sub
mov
jmp
inc
sub
fsubrs
nop
mov
sub
jmp
decl
adc
inc
test
xchg
cld
jmp
or
aad
add
test
dec
sbb
xor
and
jo
loop
fadds
sbb
in
cmp
or
mov
sub
aaa
and
orb
sub
pand
int
sub
addr16
scas
lock
mov
inc
loope
lret
aad
out
cmp
icebp
das
add
and
cmpsb
sbb
push
cmp
lret
mov
sub
inc
mov
inc
es
daa
and
filds
test
enter
cwtl
cltd
imull
mov
out
nop
jo
jb
sub
xchg
add
inc
xchg
sbb
xchg
mov
xchg
xlat
add
les
adc
jle
nop
sbb
call
dec
and
cld
jecxz
cli
decb
mov
orl
and
and
and
shll
test
jl
cmp
mov
xchg
clc
in
mov
xchg
lret
cmp
ret
dec
jg
decb
mov
addl
testb
cmp
sub
inc
imul
test
sub
dec
mov
xorb
incl
push
mov
or
enter
pop
sti
push
add
test
jle
adc
mov
sbb
cli
xor
mov
ds
idiv
aad
jecxz
push
jo
lcall
sub
adc
ret
lods
prefetch
shll
jl
repz
mov
add
daa
decl
sbb
adc
sub
push
sbb
jne
call
movsl
pop
fs
mov
insl
je
dec
arpl
in
mov
mov
or
mov
jno
popf
jp
rcrb
adc
mov
dec
cmpsl
push
and
popf
stos
mov
test
call
and
or
js
rcpps
mov
jne
mov
push
mov
lods
mov
cmp
mov
push
jne
repnz
and
nop
ret
fadd
push
jp
inc
jp,pn
mov
enter
ret
jo
loopne
in
mov
lea
push
dec
mov
mov
bound
adc
mov
push
mov
fs
add
inc
dec
or
in
add
test
pusha
adc
cmp
cli
dec
imul
out
push
add
add
sbbl
stos
xor
cmc
daa
and
xchg
xchg
lahf
pop
hlt
clc
and
lahf
mov
rclb
push
dec
sbb
or
stos
call
movsb
leave
sbb
cmp
mov
cld
mov
lret
jmp
inc
or
icebp
lock
nop
mov
pop
popa
cmp
mov
arpl
mov
dec
adcl
xchg
scas
xor
mov
sbb
jno
xchg
scas
xor
pop
push
jg
mov
push
jle
int3
andl
jae
adc
adc
xorl
shlb
cmp
incl
imul
push
outsb
adc
dec
pop
call
push
inc
out
stos
clc
addl
dec
out
mov
icebp
inc
inc
icebp
fiadds
or
xlat
dec
popf
and
cli
jg
mov
adc
push
sbb
ja
cmpsb
sarl
push
js
fmul
jne
pop
les
pushf
jecxz
je
or
mov
cmp
filds
pop
into
js
xchg
jo
or
adc
insb
add
pop
xor
pop
ljmp
sahf
and
lret
jmp
les
adc
stos
adcl
add
pop
jmp
sti
cltd
leave
imul
aaa
inc
lock
mov
lods
sbb
add
sti
pop
add
aam
inc
mov
pop
push
icebp
jg
fcompl
add
shrb
fstpl
dec
loopne
in
enter
add
jecxz
fisubl
mov
jbe
jmp
test
pop
lock
cli
cli
jl
push
mov
mov
or
push
and
xchg
mov
es
and
rolb
sahf
cmp
jg
mov
clc
fisttpl
js
xor
clc
add
xchg
mov
in
loope
mov
popf
jp
ret
data16
xchg
sbb
loopne
cmp
insb
and
push
fcmovbe
fs
hlt
aam
stos
lds
pop
movsl
inc
jb
js
sbb
push
inc
hlt
andl
sub
das
hlt
aas
gs
sbb
mov
cli
mov
movsb
cmp
loope
mov
ror
dec
lods
sub
mov
sub
call
adc
sub
or
lahf
add
out
pop
ljmp
in
and
pushf
xchg
test
jb
dec
push
mov
aad
push
shll
loop
out
sbb
cmc
fs
mov
popa
dec
dec
popf
loop
out
testl
push
cmc
sub
lea
adc
pop
pop
mov
js
mov
data16
ja
mov
xchg
out
aam
cmp
in
mov
sbb
test
mov
xor
hlt
fcomip
arpl
xor
xor
add
xchg
mov
pop
add
mov
pop
sbb
dec
sbb
add
ljmp
push
push
dec
inc
loop
xchg
pop
ja
lret
mov
or
inc
dec
xor
xchg
js
jle
add
dec
jl
sbb
jbe
xchg
out
adc
inc
mov
jge
mov
mov
outsb
dec
push
xor
dec
jo
loopne
sub
lods
ffreep
push
pop
imul
shrl
inc
loop
outsl
shlb
stos
pop
pop
gs
and
cmp
aas
movb
pop
jno
clc
pop
push
adc
add
adc
and
mov
decl
mov
xchg
leave
outsb
shll
push
loope
inc
pop
lock
movsb
mov
inc
sahf
xchg
out
jno
and
mov
adc
popa
mov
jl
mov
dec
ljmp
lahf
jae,pn
mov
push
add
and
push
in
call
ret
stos
sbbb
inc
lcall
sti
add
clc
test
les
sbb
push
adc
mov
mov
jle
das
fiadds
dec
mov
insb
aam
insl
push
jo
pop
lcall
vmovaps
dec
add
js
neg
aaa
push
mov
loop
cmc
mov
test
je
xor
push
mov
popf
pop
mov
loopne
jae
adc
ret
decl
jns
push
punpckhwd
push
lret
jg
mov
adc
shll
jae
cmp
ffree
fcmovbe
xor
dec
push
out
clc
mov
pop
mov
xchg
jp
stos
mov
insl
shlb
rolb
adc
fwait
mov
bound
xor
es
jmp
sbb
dec
outsl
in
mov
xor
inc
insl
cli
cmpsl
or
dec
lahf
repnz
ljmp
ds
jo
pop
or
loop
loop
in
int
xchg
ljmp
loopne
sahf
sub
lock
std
jbe
mov
cmp
aas
clc
pop
push
push
aam
dec
outsb
inc
popf
pushf
fdivp
mov
movsl
mov
int
rclb
or
ja
lds
or
add
subl
data16
pandn
add
pop
movsb
fdivp
add
jns
test
mov
sub
pop
repz
add
dec
pop
inc
jl
loope
in
jnp
push
test
loopne
mov
cmc
scas
hlt
loope
shl
cli
adc
bound
add
js
andl
add
arpl
pushf
movsl
int
fs
mov
mov
decl
add
ds
lock
cli
sbb
sbb
jbe
sar
lods
push
aas
test
lcall
movsl
rcll
aam
mov
gs
nop
int3
cld
adc
inc
and
sbb
mov
mov
aad
rcll
aaa
or
mov
xchg
lods
test
les
aam
bound
cmp
and
sub
lods
rorb
sbb
dec
inc
movsl
daa
mov
pop
mov
bound
ss
push
or
add
clc
pop
and
leave
fidivs
pop
or
xchg
mov
mov
or
xchg
sbb
mov
push
test
rclb
faddl
cwtl
add
mov
and
add
and
lret
nop
mov
idivl
add
add
fstpt
mov
mov
popa
insb
inc
push
mov
sahf
aad
fdiv
daa
lcall
jecxz
int
addr16
out
mov
clc
in
xchg
sbb
arpl
or
stos
jle
and
aaa
adc
pop
testl
dec
push
leave
test
adc
pop
les
mov
mov
pop
mov
mov
sbb
dec
pop
mov
sahf
lds
adc
inc
push
jo
add
arpl
or
ljmp
aam
xchg
insb
adc
test
pop
jl
xorl
incb
lret
dec
add
sbb
nop
fstps
clc
jecxz
ljmp
xor
adc
iret
add
add
mov
sbb
mov
or
lods
jge
and
shrb
mov
clc
push
rorb
and
add
test
ret
sar
es
fisubs
jae
add
shrb
outsb
xor
test
rorl
int3
mov
cld
in
sub
nop
data16
jo
insb
stos
pop
ret
adc
fistpl
test
shrb
jno
mov
fstl
fiaddl
xchg
dec
pop
lcall
add
push
mov
push
fs
sahf
pop
adc
lcall
mov
or
pop
jnp
sub
inc
std
pop
mov
mov
jge
frstor
xor
cmp
lods
lods
mov
lea
jne
mov
or
and
mov
or
mov
xchg
adc
int3
xchg
arpl
mov
inc
sbb
outsb
or
adc
jl
pushl
pop
les
mov
sbb
adc
mov
sub
push
mov
js
adc
pop
mov
mov
in
pop
cli
lahf
inc
cld
sahf
xchg
loopne
imul
lods
in
push
inc
sub
mov
or
jbe
into
xchg
ret
xor
popa
xchg
inc
clc
jmp
pop
xchg
push
sbbl
push
mov
je
xchg
pop
push
sar
xchg
jne
push
xor
cwtl
xchg
sarb
mov
mov
faddl
mov
int3
sub
pop
imul
mov
pop
and
sub
and
jbe
add
mov
arpl
loopne
add
mov
test
sub
mov
push
leave
dec
filds
cwtl
imul
jecxz
fwait
test
push
aam
dec
adc
out
mov
jge
jbe
cli
filds
lods
pop
cs
add
call
nop
sahf
sbb
xor
test
cmpsl
or
adc
cmp
xorl
ljmp
aas
mov
popf
dec
xor
aad
and
jmp
std
arpl
lds
sbbl
adc
fwait
and
jge
push
pop
shrb
call
xor
cmpb
cmp
cmp
and
xchg
xor
hlt
ds
adc
ret
and
pushl
repnz
fdivs
mov
adc
insl
sbb
xor
jbe
lods
stos
mov
dec
in
sub
lock
xchg
sti
sbb
sbb
rolb
pop
fisttpll
test
les
rorb
mov
add
bound
lahf
lcall
cli
aad
dec
push
adc
add
rolb
cmpsb
cmp
hlt
fisttps
test
jo
sarl
adc
ss
or
call
sbb
lret
xor
out
shl
push
inc
mov
mov
mov
fsubl
sub
in
xor
sub
pop
jnp
sub
pop
jle
inc
lock
repz
pusha
les
inc
aam
pop
xchg
icebp
add
data16
out
and
add
test
push
dec
push
aaa
and
mov
xchg
push
dec
pusha
imull
test
loopne
jnp
jle
pop
sarb
push
jae
pop
popf
test
test
add
in
mov
sti
es
add
test
mov
pop
shl
lods
adc
xor
lcall
data16
and
outsl
push
or
mov
cmp
cmp
adcb
adc
xor
ret
call
shrb
mov
in
bound
mov
fldcw
inc
out
or
gs
cmp
bound
dec
rcr
cli
inc
fdivrs
jne
adc
insb
push
dec
mov
sub
adc
data16
add
je
add
cwtl
outsb
jb
mov
adc
xchg
dec
jbe
adc
orb
or
add
xchg
aas
add
push
pop
or
cmp
inc
popf
or
cmp
add
into
outsl
sub
push
mov
fiaddl
lods
and
pop
or
in
andb
pop
jecxz
push
mov
outsl
xchg
cmp
push
cmp
addr16
aaa
rorl
cmp
dec
hlt
in
or
push
mov
push
sarb
dec
cmp
cmpsl
add
push
subb
arpl
rclb
jge
in
add
testb
out
and
xchg
mov
sub
dec
xor
add
fs
mov
rolb
push
or
inc
xor
shll
fmull
lds
or
sbbb
jbe
sub
xor
insb
xchg
sub
adc
inc
inc
dec
dec
inc
jne
mov
jb
or
sub
or
sub
add
add
mov
test
mov
pop
inc
sarl
push
fidivl
pusha
xchg
mov
setl
dec
dec
mov
dec
sub
sahf
sbb
cld
sbb
push
mov
mov
mov
mov
sahf
mov
daa
push
jae
fsubrs
or
cmp
pop
rcr
xor
lret
mov
cmpsl
or
mov
mov
adc
lret
aaa
es
and
or
mov
adc
mov
cmp
lock
mov
scas
cs
adc
mov
sbb
or
ds
inc
subb
jae
jo
mov
lcall
clc
inc
test
push
push
mov
sbb
dec
loop
jmp
and
js
ror
cli
sub
and
cmp
movb
out
jecxz
cld
jmp
sbb
divb
adc
cltd
hlt
inc
jb
js
push
sub
ss
ret
movsb
jge
or
loopne
dec
mov
adcb
xchg
repnz
add
fwait
js
sbb
push
or
es
mov
push
js
add
out
jecxz
pop
or
jp
fwait
icebp
outsb
mov
sarb
cld
aad
lods
inc
std
gs
dec
sub
jg
in
mov
mov
add
imul
xor
push
pop
fidivrs
lds
cmc
and
incl
stos
add
ret
shlb
adc
sbb
mov
add
cs
ljmp
hlt
inc
add
ljmp
mov
addr16
inc
sub
xchg
je
aaa
test
shl
xchg
jne
mov
rorl
add
cmp
mov
cli
pushf
fdivrs
pop
or
test
ret
and
pusha
mov
stc
js
adc
cwtl
sbb
icebp
and
jno
adc
scas
or
mov
daa
insb
mov
call
mov
dec
fucom
in
cmp
push
cltd
xor
pop
adc
or
ret
inc
pause
mov
pop
mov
mov
shlb
std
and
rorb
jle
loopne
dec
call
fchs
lret
sbb
add
sbb
jle
negb
es
jl
mov
jae
adc
inc
mov
xchg
xor
jl
and
pushf
push
cwtl
test
pop
xchg
stc
repnz
jge
fdivrs
sarl
lahf
paddsb
pop
jbe
sbb
add
scas
outsb
nop
filds
push
or
lds
test
popa
loope
mov
in
or
popa
aam
movl
sub
stos
lock
rcl
dec
jl
outsl
pop
int
pusha
pop
ret
xchg
out
dec
psubd
std
sub
test
sub
out
push
insl
xor
pop
aaa
sbb
jg
sbb
fldl
roll
cmpl
jo
mov
in
jbe
cmp
inc
xlat
add
out
popa
and
add
or
call
nop
pushf
mov
mov
xchg
pop
clc
shrl
sub
stos
and
mov
jmp
jae
scas
pop
inc
adc
or
insl
xor
jle
fwait
rorb
push
jb
mov
xchg
cmpsb
rolb
ret
test
or
bound
pop
std
push
xchg
xchg
pop
jp
movsb
mov
jmp
fimuls
inc
mov
jp
movsb
xor
xorl
mov
add
leave
int
sti
test
inc
mov
popa
xor
xor
stc
nop
push
test
sub
les
hlt
dec
scas
cmp
pushl
or
adc
in
inc
pushf
test
enter
inc
mov
add
icebp
aad
int
xchg
fwait
movsl
cltd
movsl
mov
callw
outsl
mov
fcmovbe
mov
xchg
jmp
pop
mov
aas
xchg
outsl
pop
mov
push
pop
inc
pop
adc
stc
cmp
cmp
dec
clc
stos
out
test
rorl
or
and
lods
xchg
lcall
dec
lods
shlb
dec
mov
int
mov
nop
loop
adc
jg
push
mov
mov
nop
push
nop
xchg
out
pop
xchg
add
ret
or
pop
ret
push
popa
out
pop
or
inc
mov
movsb
and
pop
mov
cmp
mov
or
fsubrl
test
loopne
sbb
rorb
jg
stos
outsb
sub
or
push
xchg
andb
and
mov
or
dec
fistps
mov
int3
mov
repnz
jmp
arpl
pop
lods
aas
das
xor
nop
pop
xor
inc
pop
pusha
lret
cld
cmpsb
test
iret
loope
jmp
in
testb
mov
popf
push
jb
lahf
xor
xor
jns
hlt
sbb
incl
aam
jo
xor
pushf
jge
clc
xchg
pop
bound
or
rorl
int3
push
mov
and
incl
popl
fidivl
incb
or
pop
mov
push
dec
outsb
test
test
adc
insb
push
push
push
aas
xor
add
inc
int3
xor
loopne
and
cld
stos
stc
in
dec
sahf
shll
add
jl
sub
mov
pop
mov
arpl
mov
loop
dec
add
fdivrs
push
xchg
xor
xchg
shl
push
in
sub
dec
inc
enter
cld
push
or
or
test
gs
ret
mov
ds
lret
or
push
xor
dec
inc
mov
push
ljmp
fs
cld
push
pop
ja
sub
rclb
lcall
dec
es
xchg
mov
dec
jge
cs
adc
mov
mov
or
and
test
shlb
out
dec
xchg
into
lds
pop
inc
or
icebp
push
incl
popf
out
mov
push
cmp
push
iret
add
adc
std
cmp
es
or
popf
xchg
xor
test
mov
push
lcall
cmp
dec
sub
lcall
ror
fwait
les
and
cmpsb
xor
loopne
insl
lret
dec
stos
out
inc
hlt
pusha
in
and
scas
mov
fs
add
mov
adc
je
inc
addr16
jle
test
ss
pop
mov
test
sahf
les
mov
adc
ret
test
sub
aaa
hlt
adc
xchg
adc
and
or
mov
aas
cld
xchg
loopne
cmp
cmp
sbb
add
cmp
push
mov
sub
mov
ljmp
outsb
mov
sub
lock
lds
testl
add
pop
daa
mov
pop
adc
cli
in
sbb
pop
pop
nop
cli
test
push
shr
xchg
movsb
hlt
pusha
sub
fs
cli
sbbb
push
repz
sub
adc
xor
xchg
add
shrl
sahf
dec
sbb
enter
retw
lret
mov
adc
or
cld
sbb
and
jae
daa
inc
inc
in
xacquire
clc
outsl
out
clc
div
xchg
loop
mov
fs
es
mov
add
sarl
sub
clc
mov
add
nop
push
sbbb
jge
adc
pushf
jns
outsb
push
mov
addr16
add
ret
adc
sbb
pop
push
es
testl
add
jle
and
ljmp
mov
and
loope
add
mov
hlt
mov
and
jp
loope
jbe
push
pop
push
mov
cmc
out
loope
mov
jb
jns
ja
icebp
jg
lock
cmp
mov
call
sbb
rcll
stos
faddl
sub
ret
cmc
mov
mov
addb
mov
mov
add
arpl
mov
setge
loope
inc
pushf
mov
dec
loope
mov
mov
and
sub
filds
ss
add
cmp
or
add
jo
pop
insl
imul
adc
and
adc
ja
nop
cmp
pop
adc
repnz
rcrb
jg
inc
js
add
stc
pop
mov
mov
jge
ret
ret
fs
aad
into
jne
mulb
daa
jb
sub
andb
bound
sub
fs
push
out
sub
xor
jg
ljmp
and
push
lock
mov
fdivl
movsb
sbb
inc
sarl
jb
ret
or
mov
push
mov
lods
int3
pop
dec
sarl
test
fwait
lods
pop
mov
push
pop
pop
fimull
adc
adc
in
clc
inc
add
xor
loop
jns
pusha
call
aas
cmp
pop
pusha
out
pop
rcrl
xchg
push
push
lea
jno
pop
sub
es
mov
xor
aas
cli
jmp
cli
xchg
add
pop
or
xchg
or
into
mov
push
mov
aam
mov
cmpsb
xchg
repz
outsb
push
push
stc
cmp
mov
and
icebp
adc
loopne
xchg
sub
ret
add
inc
popf
mov
push
sbb
insl
repz
rcll
mov
rcrb
fidivl
adc
mov
push
lock
and
mov
call
fstpt
jle
or
cmp
cwtl
jmp
loop
sbb
add
xor
gs
ror
faddl
cli
mov
dec
mov
cmpsl
sbbl
aaa
loopne
jp
cwtl
add
sbb
lret
push
rcrl
pop
cli
imul
push
cmc
adc
add
je
dec
filds
sbb
xor
sbb
lds
pop
fs
outsl
aad
int
xor
leave
cmc
dec
pop
push
cmp
and
mov
lcall
pop
sub
mov
mov
xchg
xor
stos
ret
outsl
pop
pop
pop
add
outsl
test
mov
and
sbb
mov
out
icebp
pushl
mov
pop
fidivs
push
cld
mov
xchg
ret
cwtl
mov
or
out
in
sbb
and
test
xor
ret
xchg
dec
pop
cltd
js
or
pop
mov
push
std
in
setns
neg
cli
adc
ljmp
shrb
and
sub
pop
data16
out
push
cwtl
mov
inc
js
daa
lock
add
lret
cmp
dec
or
sbb
es
push
mov
incb
xor
shrb
ffree
sub
cmc
sub
loope
adc
mov
lods
ljmp
jb
fs
mov
inc
add
sub
sti
nop
fmuls
sahf
ljmp
lds
mov
pop
mov
adc
shl
jp
fcoms
repnz
jo
adc
jb
ss
mov
in
push
cs
adc
mov
test
rorl
dec
xchg
stos
mov
loope
mov
fcompl
add
loop
mov
fisttpll
mov
push
imul
adc
sysenter
lds
lret
aaa
loopne
inc
mov
xchg
fmull
pop
mov
xchg
pop
insl
inc
test
mov
inc
push
pop
and
cmc
sbb
jo
repnz
std
shl
orl
xchg
ss
push
push
mov
mov
fstl
and
push
mov
or
mov
push
sub
push
and
push
pop
hlt
push
nop
subb
xchg
add
movsb
movsb
insb
inc
ss
push
in
pop
adcb
aaa
je
inc
and
adc
aam
dec
sub
es
or
in
mov
insl
movsb
hlt
je
cmp
xlat
lock
sub
xor
xchg
cmp
inc
in
inc
pop
in
mov
loop
mov
ja
rorl
pop
push
clc
aaa
jge
scas
cmp
loope
test
int3
mov
in
xchg
cmc
xor
scas
jmp
or
sub
sbb
test
or
or
add
cmc
popf
cmp
movl
xor
pop
xchg
xchg
std
in
je
insb
push
aaa
aam
cmp
dec
lock
dec
xor
jno
ja
ret
jbe
xor
dec
adc
shl
popa
cmp
ret
dec
dec
inc
mov
pop
push
movsl
cli
ljmp
dec
xor
inc
adc
rorl
jecxz
adc
inc
cmp
dec
insb
imul
xor
outsl
mov
dec
push
sbb
dec
or
mov
cmp
xchg
sti
push
or
jp
stos
xchg
or
pop
adc
std
std
lcall
popf
cltd
stos
ret
cmc
xlat
sub
adc
aas
adc
mov
pop
test
insb
mov
mov
pop
pop
cmp
insl
and
add
fsts
hlt
add
add
negb
pop
loopne
push
lock
sub
das
push
pushf
js
and
cwtl
pop
lret
xlat
dec
lea
mov
ja
push
ret
cmp
dec
decl
or
sbb
daa
insb
movsb
popf
sub
push
fcomps
inc
pop
mov
aas
shrl
mov
mov
pop
xor
enter
cmp
shr
or
test
ljmp
test
and
cli
sub
outsb
push
add
scas
shrl
pop
bswap
daa
jb
sbb
lock
stos
ds
push
stos
orb
shrl
pop
loope
or
inc
mov
mov
aas
aam
mov
and
cmpsb
adc
mov
or
xchg
bound
lret
adc
jge
adc
push
movsl
shlb
mov
xchg
xchg
addb
jmp
push
dec
fnop
pop
rcl
lcall
push
push
xchg
push
outsb
mov
xchg
into
push
inc
cmpb
cwtl
popa
mov
xor
xor
pusha
push
lods
jg
push
je
std
xor
leave
sub
add
cmpsb
mov
dec
push
adc
mov
push
push
call
pcmpgtd
xchg
fdivr
outsl
std
jg
sub
call
pop
xchg
sbb
nop
loope
fcmovb
dec
das
out
arpl
jle
scas
xchg
clc
xor
das
push
jo
or
mov
std
decl
sahf
ja
and
or
pop
ret
lret
cmp
jno
out
cwtl
loopne
xor
jp
push
jno
and
sar
cwtl
pop
pusha
mov
mov
mov
sbb
dec
es
insb
push
test
movd
pushf
repz
pop
cmc
mov
add
add
je
in
xor
xor
cli
mov
sub
cwtl
pop
inc
cmp
loope
add
mov
hlt
dec
push
jl
or
adc
fildl
test
fimuls
aam
xor
cld
sbb
push
push
push
pop
push
push
pushf
negb
mov
pushf
shl
xchg
test
adc
andb
fsubl
dec
mov
mov
xor
xchg
push
cs
bound
xchg
adc
ljmp
sbb
loop
in
int
xor
int3
and
adc
mov
pushf
sbb
sar
push
sbb
and
cs
pusha
adc
fistps
aas
fldenv
sbb
into
inc
inc
data16
sbb
mov
push
add
gs
in
jge
je
or
push
notl
fstps
push
ret
push
mov
fwait
sub
scas
outsl
hlt
sarl
and
mov
and
cmp
pop
add
add
mov
add
mov
je
cmp
inc
pop
jp
cmp
loop
aaa
sub
xchg
hlt
mov
dec
adc
push
in
arpl
mov
scas
push
daa
mov
sahf
ret
push
xor
neg
mov
popf
push
mov
mov
shlb
test
mov
cmpsb
or
and
xor
sbbb
imul
pop
and
xor
nop
out
inc
mov
lret
mov
xor
dec
test
and
jmp
daa
fs
sarb
es
add
cmpsb
sbb
inc
sar
pop
and
sbb
dec
das
jo
data16
ljmp
add
sbb
test
mov
jecxz
subl
adc
or
leave
jg
mov
cmpl
dec
pop
add
insl
clc
pop
or
addr16
push
sub
rorb
stos
push
decl
je
test
adc
jmp
popa
add
cmp
mov
fwait
push
or
add
and
mov
mov
mov
fildl
es
inc
pushf
add
ja
outsb
adc
fmull
dec
pop
or
adc
shrl
mov
sub
loope
jmp
lods
adc
dec
ds
or
sbb
and
loop
addl
sub
rorl
aas
xchg
push
dec
std
bound
inc
jb
ret
inc
cld
test
pop
insb
sbb
adc
test
jl
or
lock
dec
das
mov
ret
nop
jno
mov
mov
adc
shrb
cwtl
cmp
add
jle
xchg
loop
shlb
mov
je
push
sbb
pop
inc
push
and
js
icebp
pop
xchg
xchg
adc
push
sub
inc
scas
jge
or
adcb
and
sbb
xor
shlb
sub
cmpsb
pop
mov
out
daa
mov
adc
mov
dec
add
cmp
and
xchg
scas
add
mov
sub
xor
push
inc
cwtl
pop
adc
mov
cld
and
add
add
pop
or
movb
pop
cmp
sbb
push
mov
ss
mov
les
mov
lahf
inc
ret
pop
movsl
iret
xor
scas
js
subb
fs
push
lcall
loopne
call
test
mov
mov
add
popa
jge
test
ljmp
cbtw
sbbl
mov
push
or
mov
das
pop
xchg
test
mov
in
bound
hlt
sar
pop
push
xchg
cmp
rcl
int3
add
inc
mov
or
sahf
adc
fimull
outsl
aaa
add
stos
and
rcr
push
std
mov
cmp
fisubrs
xor
mov
cltd
push
mov
insl
push
inc
loop
dec
lar
shlb
subb
dec
push
add
or
aam
xor
sub
stos
pop
out
ss
push
aaa
orps
sbb
jo
lock
call
cmpb
fsubp
jns
orl
fidivrl
in
and
push
shl
push
push
cmc
push
mov
inc
mov
push
dec
mov
scas
push
ds
inc
ss
mov
or
sbb
das
hlt
out
sarb
ss
sub
pop
add
xchg
sub
jne
cmpsb
mov
jns
scas
into
xor
dec
test
mov
inc
adc
mov
ja
and
and
cmp
aam
loop
enter
mov
or
lock
jo
lcall
mov
xor
mov
push
cmp
into
sete
loope
fwait
dec
pop
inc
call
sub
inc
add
and
incl
mov
sbb
cmc
push
repz
loopne
mov
mov
shlb
idivb
xor
cmp
lock
lods
fs
cmp
push
adc
rcrb
lock
outsl
sbb
add
cmp
xchg
addb
jl
pop
repnz
adc
or
jae
jno
sub
mov
adc
test
lds
xor
mov
inc
leave
add
jo
xlat
mov
cli
add
pusha
jl
add
pop
test
fs
jbe
add
out
xlat
lea
ret
jle
push
mov
pop
shrb
adcl
cli
push
pop
pusha
add
dec
add
cmp
and
addb
in
and
pop
lods
insb
scas
xchg
in
sub
adc
cmpsl
push
js
les
xor
pop
incb
or
sbb
dec
sub
jb
add
lods
lods
adc
cmp
adc
shrd
sbb
icebp
in
cmpsb
mov
mov
or
lahf
and
testl
jg
sbb
jo
sub
fcomps
lods
pop
add
imul
fildll
lret
pop
outsb
std
jge
jnp
shlb
pop
mov
jmp
mov
cmp
in
int
or
adc
and
lahf
mov
or
gs
or
add
push
mov
xchg
add
inc
inc
andb
addr16
jg
test
call
scas
sbb
pop
out
inc
jb
pop
dec
shlb
hlt
and
add
mov
push
scas
xchg
popa
fiaddl
add
dec
in
xchg
pop
add
out
push
xchg
xor
push
mov
or
inc
pop
push
mov
pop
movsb
sarb
loop
and
mov
aaa
sub
cltd
add
cmpsl
mov
sbb
popa
inc
icebp
push
and
cmp
adc
sbb
xor
or
hlt
cwtl
daa
shl
jge
xchg
loopne
testl
lods
push
adc
inc
arpl
jmp
fadds
sbb
insb
adc
sub
or
call
stc
repnz
jg
push
cmpb
jae
pop
testb
or
jbe
in
andb
push
xor
sub
stc
lds
add
pop
out
pop
jns
xor
dec
push
fimull
adc
outsb
mov
std
jne
add
xchg
call
sahf
movzbl
xchg
mov
add
outsb
and
lret
pop
jne
pop
pusha
fidivl
pusha
or
inc
sbb
icebp
jo
inc
je
shrl
icebp
push
repnz
xchg
xchg
push
inc
jl
cmpsb
das
in
aaa
fcomip
mov
sub
jbe
jo
dec
ds
lahf
pop
add
mov
xor
mov
lock
inc
push
adc
xor
xlat
adc
shll
push
inc
cwtl
jmp
popa
mov
xorb
sbb
imul
add
xor
fnstsw
jbe
mov
int
inc
sbb
adc
pop
inc
dec
xchg
and
arpl
xor
sbb
movsb
adc
dec
jno
pushl
add
sbb
loop
xchg
cwtl
xchg
push
add
inc
int3
pop
push
cmp
add
adc
lea
insb
addb
stc
add
cmp
les
and
outsl
leave
pusha
jb
ret
push
add
lret
mov
mov
push
jle
orb
mov
sub
ja
add
mov
fwait
data16
mov
and
inc
push
and
mov
xorb
and
cmp
sar
xchg
rolb
jo
sbbl
fs
in
sbb
mov
dec
xchg
aad
mov
adc
jns
mov
addl
mov
cmpsb
sti
or
mov
jae
test
outsl
pop
xchg
data16
out
sub
call
aad
ret
les
add
xchg
jo
and
fdivr
add
push
or
jo
push
mov
rorl
push
addl
fidivs
mov
mov
fcomps
adc
clc
lcall
sbb
ror
mov
push
out
popa
aam
push
mov
movsl
or
icebp
aad
pop
mov
push
pop
mov
jmp
xor
fldt
pop
aas
clc
ror
mov
je
xor
push
mov
stos
pop
stos
xchg
or
xor
sub
add
xchg
jg
push
jns
fs
popa
jnp
adc
or
or
adc
pop
add
sbb
ret
clc
push
push
cs
bound
shrl
jl
faddl
insl
mov
cmp
insb
push
les
les
aas
or
je
mov
adcl
xor
jno
cmovbe
aas
pop
lods
inc
in
aaa
lods
dec
add
inc
test
mov
mov
enter
cld
out
scas
movsb
lock
enter
dec
sbb
mov
xchg
clc
jno
xor
sbb
push
sahf
movsb
add
cmp
frstor
sarb
sub
in
mov
not
fidivrs
fs
shrl
dec
sahf
rcl
or
loopne
sub
js
add
sbb
aam
push
fisttps
or
jmp
xchg
or
cmpsb
jmp
xchg
cmp
jecxz
and
aaa
add
and
hlt
xchg
addl
rolb
inc
sbb
add
in
xchg
xor
mov
je
sbb
dec
cmp
and
dec
or
loopne
and
adc
test
stos
shll
fnstenv
aas
ljmp
push
sub
push
xchg
loop
test
dec
fisttps
add
push
xchg
push
inc
sub
loopne
dec
mov
sbb
lock
or
mov
push
or
ljmp
jp
mov
inc
out
arpl
cmp
stos
and
ret
adc
ret
aas
dec
fisttps
xlat
stos
test
pop
xlat
jns
mov
dec
push
cwtl
popa
pop
jnp
js
pop
dec
fcoms
aaa
cld
add
push
mov
sub
pop
xchg
into
dec
fwait
out
imul
je
jecxz,pt
pop
xor
sub
push
mov
andl
push
jo
push
les
mov
cli
push
mov
into
push
shll
mov
mov
ret
inc
shrb
adc
scas
das
xchg
mov
dec
stos
ret
and
popl
jno
flds
fdivs
dec
inc
loopne
imul
call
push
je
fcmovnbe
out
sub
pushf
jmp
or
pushf
inc
in
rcrb
mov
icebp
orb
mov
pusha
adc
rcl
mov
aad
push
and
sbb
sarb
lods
cwtl
dec
lcall
jg
adc
dec
adc
jbe
adc
mov
popa
mov
add
or
cld
sub
dec
fildl
push
xor
mov
mov
sbb
aaa
in
cmp
lcall
xor
add
xchg
jle
and
jg
push
enter
and
fwait
jg
aaa
fnstenv
xchg
cmp
dec
in
or
jns
or
rorb
add
dec
fnstsw
sub
out
dec
repnz
or
js
mov
test
int
lods
mov
je
in
jg
ficoml
jno
inc
nop
aaa
cwtl
jne
cmp
push
jle
fisttpl
push
inc
cmp
jbe
pushl
dec
dec
hlt
sbb
and
lahf
mov
imul
nop
jp
pop
fwait
ret
es
call
add
dec
xor
mov
fwait
mov
mov
and
inc
inc
cmp
jbe
cmpb
mov
push
scas
cmp
das
ficomps
rcrb
inc
sub
cli
cli
and
test
das
push
pop
test
outsl
jle
sub
mov
outsl
icebp
add
push
xor
fwait
mov
scas
ja
inc
fisttps
repnz
fwait
mov
jge
movsb
ss
and
inc
cmp
push
cld
jg
jge
or
xchg
mov
bound
pop
fmuls
adc
pop
and
outsb
mov
sbb
jnp
or
scas
pop
mov
dec
xchg
call
or
mov
xchg
scas
mov
js
add
leave
notl
add
pop
les
inc
push
subl
pop
dec
repz
mov
pusha
mov
mov
pop
and
sbb
aaa
iret
inc
imul
push
push
lods
sbb
test
scas
ss
js
xchg
loop
xlat
pushl
mov
scas
movsb
je
pop
xchg
loopne
outsb
repnz
test
sub
mov
add
add
cmp
insl
sbbb
sub
decl
or
fisttps
xor
sbb
lds
loop
testl
jecxz
inc
clc
xchg
push
rolb
loopne
ljmp
jns
xchg
cmpsb
das
lods
fcoms
adc
mov
cld
xor
inc
pushf
in
fcoml
out
pop
xor
fcmove
push
fwait
les
add
xlat
add
pushf
test
add
push
int
jb
xlat
xor
outsb
sbb
mov
push
cld
ds
cld
iret
xchg
sbbb
movsb
dec
and
daa
push
data16
xorl
fwait
dec
push
lahf
inc
inc
lahf
outsl
xor
xchg
ja
out
mov
mov
xor
push
lea
in
push
or
out
xor
arpl
push
mov
sbb
je
sub
mov
mov
lock
bound
outsl
inc
inc
pop
xchg
daa
inc
cld
fisubrl
push
xchg
or
rolb
adc
mov
decl
lret
mov
mov
push
mov
repnz
push
test
mov
out
icebp
jmp
les
jp
rorb
inc
sbb
or
xor
pop
out
add
iret
cmpsb
loope
arpl
push
xchg
and
call
stos
sub
test
lea
in
xchg
imul
push
ret
imulb
sbb
out
cli
xchg
nop
and
add
cli
outsl
mov
bound
clc
xchg
dec
mov
push
push
lods
mov
cmp
push
add
adc
test
cwtl
sti
fisttps
or
enter
push
mov
jb
sarl
push
pushf
jno
push
mov
add
sbb
or
in
inc
arpl
sub
adc
push
mov
jo
ss
incl
sahf
push
es
test
cmp
call
ret
stos
add
shll
jge
xchg
jo
rorl
pop
out
clc
ja
call
clc
js
inc
sbb
mov
pop
add
sbb
lods
mov
fdivs
cli
std
hlt
cmpxchg
lods
or
mov
mov
lock
mov
test
jg
popa
std
ja
add
daa
pop
repnz
arpl
mov
push
inc
xor
es
rolb
xor
push
dec
dec
and
push
mov
test
fiadds
mov
xchg
mov
push
testl
jb
in
push
or
fsubr
jo
pop
scas
icebp
scas
decb
in
xchg
lcall
cwtl
add
pop
jge
lock
dec
cmpsb
pop
dec
pop
stos
pop
sbb
pop
insb
aad
push
mov
cmpl
dec
pop
and
loopne
add
ret
pop
rorl
scas
fcomip
insb
jp
inc
add
mov
cmp
mov
gs
mov
xor
xchg
ss
add
sbb
outsl
push
or
mov
jecxz
mov
cltd
mov
aam
std
pop
xor
xchg
inc
or
pop
push
xchg
lods
adc
mov
ss
popa
dec
xchg
mov
add
mov
fisubs
dec
cmpsl
mov
adc
pusha
inc
aad
cmp
nop
push
mov
or
loop
pop
popa
sti
out
pop
inc
roll
cmp
adc
pop
jecxz
in
jnp
mov
cmp
add
inc
inc
or
sbb
aas
add
cld
dec
lods
add
mov
add
js
or
xchg
outsl
insb
or
lock
cltd
cs
shl
clc
inc
sub
in
and
sub
int3
lds
inc
cmp
cmpsb
push
adc
inc
mov
mov
mov
jge
cmp
sub
add
add
shlb
push
fwait
jecxz
sbb
xchg
call
or
mov
xor
ss
adc
loope
fdivrl
jb
mov
inc
rcrl
loope
lret
out
and
adc
add
dec
fisubrs
enter
cmp
mov
and
fisubrs
mov
push
fmuls
cmc
jg
repnz
sahf
test
ret
adc
xor
stc
pop
push
test
mov
movsl
sub
add
fisttpll
adc
inc
out
ss
aas
mov
in
inc
sti
add
ficoml
imul
lea
bound
push
aam
jl
rclb
addr16
sbb
mov
jmp
or
addr16
stc
mov
sti
xchg
insb
sbb
sbb
pop
mov
dec
lahf
mov
add
mov
mov
jmp
es
adc
int3
fwait
lret
and
hlt
pop
sub
repz
xchg
outsl
mov
or
xor
xor
add
cld
jne
jo
add
pop
pop
cmp
shl
inc
dec
fcomp
popa
lock
add
cli
inc
mov
adc
imulb
fwait
pusha
add
add
or
xchg
aam
jge
stc
outsb
xchg
lret
jle
inc
dec
data16
sub
lea
lock
and
test
cmp
insl
pusha
in
fnstenv
cmp
mov
ret
push
popf
out
pop
dec
rorb
xor
push
mov
clc
cmc
add
add
mov
repnz
and
cld
addb
js
fwait
xchg
add
fsubrp
mov
aad
pop
jl
xchg
mov
inc
push
ret
insb
ja
add
mov
ret
jo
idivl
bound
pop
pop
ret
outsb
mov
pop
repnz
sub
cmp
or
inc
cmp
addb
xor
jmp
sbbl
xchg
adc
sbb
sub
repz
outsb
movsb
test
mov
stos
test
pop
outsb
push
xor
mov
mov
and
sub
int3
cwtl
inc
jge
or
test
repnz
incl
enter
les
xchg
sub
popf
clc
adc
js
int3
addr16
test
jl
stos
inc
decl
pop
daa
loopne
lods
lcall
ror
pop
jmp
outsl
mov
les
sub
adc
test
inc
mov
addl
loopne
cs
mov
ljmp
cmp
dec
pop
sbb
shl
xor
and
ja
xor
mov
pushf
in
inc
imul
out
push
sbb
mov
or
jno
pop
bound
lcall
cli
pop
leave
lods
and
inc
out
mov
add
mov
call
mov
push
inc
adc
push
push
sub
idivb
pop
sbbb
dec
jnp
aas
mov
mov
add
test
xor
or
lock
xlat
mov
push
fwait
je
idivl
push
adc
in
mov
or
inc
dec
ret
imul
xchg
xchg
add
add
mov
adc
xchg
fmuls
cmp
sbb
mov
cmpb
cmc
lret
sub
shl
subl
call
in
sub
xchg
hlt
dec
daa
push
and
mov
inc
call
jo
adcb
cltd
bound
out
add
inc
scas
lods
and
inc
jne
add
cli
shlb
into
mov
or
adc
fadd
popa
loopne
dec
lret
subb
loope
pop
aas
out
mov
pusha
je
cmp
mov
add
iret
push
push
sarb
push
shlb
idivl
lock
mov
xor
or
ja
push
pop
or
xchg
loopne
out
or
sbb
inc
sahf
jle
int3
dec
or
inc
test
out
shl
and
cld
mov
jo
daa
push
sub
aam
mov
pusha
mov
pusha
adc
xor
fsubrs
xor
or
rol
mov
mov
insb
mov
cmpsb
dec
xor
fsubrs
sub
data16
mov
lds
orl
mov
pop
icebp
add
stos
xchg
cs
dec
xchg
jg
sbb
sub
adc
mov
xor
mov
sbb
ret
cli
mov
jb
cld
mov
scas
xchg
sub
out
push
xlat
mov
mov
cmpl
jle
ja
std
adc
cmp
mov
insb
pushf
jg
repnz
pusha
test
jecxz
shlb
pop
test
adc
mov
lds
push
scas
dec
fs
adc
jp
cmp
in
sbb
scas
cmp
daa
addl
pushf
test
bound
dec
add
les
dec
test
stos
out
arpl
pusha
jne
std
inc
stos
push
std
and
sub
lahf
sbb
cld
lock
xchg
adc
rolb
jecxz
inc
push
add
fdivl
push
inc
aam
cmpsb
scas
xor
and
clc
lret
test
mov
push
lret
das
outsl
mov
push
sbb
xor
xchg
mov
or
ljmp
push
cld
and
push
cmp
addr16
pushf
mov
xchg
mov
jg
xor
pusha
sbb
jge
daa
cltd
pop
nop
jno
mov
repnz
ret
or
xorb
pop
add
pop
scas
scas
pop
int
mov
inc
inc
cwtl
cmpl
jbe
jns
fisubs
mov
nop
adcb
out
scas
adc
mov
mov
loopne
xlat
test
dec
subl
leave
mov
mov
fstpl
cld
cmp
dec
mov
mov
mov
push
loop,pt
inc
jl
lods
aas
ret
dec
push
pop
xchg
mov
dec
adc
jmp
je,pt
add
jno
push
rorl
jl
mov
fbld
xchg
lds
mov
es
push
lcall
loopne
hlt
mov
cld
test
mov
jbe
ret
mov
add
je
sub
push
dec
shr
mov
jmp
loop
xor
pop
sbb
adc
inc
xor
gs
test
pop
daa
push
testb
dec
push
mov
mov
cmp
sbb
fcoml
sbb
pop
or
jnp
rol
push
xchg
aad
movsb
dec
sbb
sub
stc
lock
scas
hlt
ffreep
popf
pop
push
mov
or
insl
loopne
mov
mov
js
jae
cli
pop
mov
push
out
mov
adc
loop
shl
xor
cmc
dec
pusha
popf
inc
scas
aas
icebp
push
mov
push
test
push
sbbb
sbb
cs
sahf
add
sub
inc
std
shr
outsl
xor
lea
leave
xor
pusha
mov
aad
lahf
cltd
pop
sbb
xlat
jbe
call
hlt
sarl
sbb
jns
jmp
lods
mov
mov
orl
push
stos
lock
sbb
jge
pop
popf
sbb
or
sbb
les
pop
std
cmp
jae
pop
dec
hlt
add
sbb
inc
fdivs
and
out
xchg
mov
push
push
mov
and
in
mov
adc
mov
mov
addb
std
and
mov
dec
leave
or
adc
mov
testl
mov
ds
pushf
mov
clc
rcrl
jo
inc
es
mov
mov
adc
jbe
lret
cmp
push
rorb
sub
cmp
mov
jle
movsl
inc
pusha
imul
sub
adc
dec
xor
movsl
sbb
inc
pop
mov
sbb
mov
das
iret
loopne
push
push
lret
scas
popa
xchg
or
xor
scas
pushl
fsubl
cld
sbb
test
scas
je
loopne
inc
mov
dec
adc
push
dec
into
clc
fldl
ljmp
and
jns
je
and
sarl
ja
push
data16
mov
push
push
push
ljmp
mov
pusha
ret
sbb
dec
gs
ret
jge
mov
test
mov
mov
in
xor
ficoml
movsb
adc
pop
js
pushf
pop
cmpsb
inc
add
mov
add
ret
add
es
scas
add
dec
or
in
push
pop
fstpt
fstpl
bound
cmpsb
rol
aam
loopne
sub
lahf
jecxz
push
idivb
and
hlt
out
lock
movsl
cmpsb
add
push
jle
xor
pop
out
aam
rorb
xor
fstpt
push
mov
hlt
jo
and
addb
push
and
pusha
movsl
enter
mov
dec
adc
nop
je
ret
test
je
push
das
ret
enter
and
push
xchg
mov
icebp
dec
inc
outsl
pop
mov
cs
push
loop
push
push
pop
xchg
cli
out
lret
or
push
sub
ret
mov
pop
loopne
clc
jg
inc
inc
lock
mov
or
inc
jmp
dec
rep
aad
out
ja
js
inc
ljmp
jl
lcall
and
rorb
das
push
xchg
fistpl
and
dec
out
ficoml
xchg
jmp
adcl
fsubl
mov
or
enter
adc
mov
and
mov
fisubrs
push
lods
fdivl
inc
clc
fs
fbstp
pop
aad
add
andl
xor
sub
mov
xchg
inc
mov
xor
or
xchg
daa
and
cmp
lods
lcall
or
and
fwait
stos
inc
dec
shlb
fdivrs
sbb
mov
ficompl
mov
movsl
push
mov
sbb
lret
jle
cmp
and
and
mov
fsubs
push
bound
lcall
jmp
mov
add
ljmp
cli
sub
js
cwtl
cmp
xchg
rcll
outsb
push
and
nop
in
inc
cli
mov
js
or
fiaddl
pop
sbb
clc
les
cmp
add
mov
ret
in
mov
or
xchg
cmp
subb
out
push
popa
push
aaa
test
add
cmp
add
in
nop
and
das
cs
cld
fisubrs
lahf
mov
cmpl
xor
push
cmp
into
adc
stos
push
in
push
pop
lea
outsl
cmp
dec
gs
sbb
fs
fs
sbb
mov
outsl
xchg
leave
jbe
inc
clc
and
outsb
xor
or
inc
pop
jbe
shlb
out
cwtl
dec
ret
adc
pop
insl
out
cmp
fld
lock
bound
and
fwait
arpl
ss
sub
shlb
in
inc
push
mov
mov
and
pushf
movsl
mov
orb
mov
pushf
aad
outsb
outsb
add
cmp
mov
xor
mov
adc
daa
cld
jg
sarb
jbe
movsb
adc
inc
jo
push
inc
and
cld
out
add
pop
sub
inc
rorl
stos
xchg
aad
adc
pusha
mov
je
cld
mov
xchg
pushw
push
pop
icebp
int
lods
jl
sbb
adc
sub
add
pop
push
imul
std
ds
decb
aaa
ljmp
or
add
in
and
inc
jae
sub
stos
fisubs
or
sub
lock
adc
sbb
add
das
pop
sub
rol
fwait
and
cmp
pop
fwait
outsb
call
and
mov
insb
mov
pop
or
or
add
ss
jnp
sub
lea
pushf
sub
jo
subb
out
adc
insl
aam
adc
and
add
bound
movsl
incl
sbb
insb
inc
stc
popa
xchg
sub
inc
dec
add
ret
adc
dec
scas
sar
xchg
dec
clc
xlat
mov
adc
add
xlat
xchg
dec
and
nop
push
push
jno
nop
shrb
mov
loop
jo
lret
mov
adc
or
std
xchg
or
xor
xor
scas
incl
idivb
jne
cmp
fistpl
sbb
pop
lock
mov
sarb
lcall
stos
call
add
mov
sub
push
push
bound
frstor
je
out
cwtl
imul
push
push
fisubrl
mov
mov
and
loopne
js
lahf
mov
in
or
xor
and
jl
addb
sub
enter
jg
cmp
xor
pop
or
jmp
mov
xchg
or
adc
movsb
lret
xor
js
adc
test
fisubs
shll
dec
add
jmp
xor
and
enter
sub
xchg
je
lcall
test
aas
pop
mov
movsb
mov
adc
push
cwtl
cs
add
je
out
mov
je
or
sub
je
mov
dec
jo
lea
jmp
scas
cmp
mov
push
and
dec
pop
sti
pop
das
andl
and
cmp
jle
stos
loope
nop
bound
sbb
or
lods
jmp
aaa
decb
pop
movsb
hlt
popa
jb
icebp
setne
sub
sub
mov
push
xchg
push
inc
punpcklwd
or
das
icebp
punpckhdq
inc
mov
add
xor
dec
push
daa
neg
sub
add
ret
jmp
andb
and
pop
shlb
popa
mov
and
loop
stc
je
pop
movsb
aam
cmp
sarb
jae
push
push
adc
scas
aad
sbb
mov
or
xchg
push
popa
movsb
loope
cmp
mov
mov
stos
xchg
add
es
push
mov
lock
hlt
popf
and
dec
add
pop
jl
sub
shrb
mov
or
push
ret
mov
sub
pop
icebp
or
push
sbb
fs
pop
dec
idivb
fadd
rclb
mov
push
pop
loop
xchg
outsl
xor
mov
test
pop
inc
test
jno
std
mov
shlb
and
and
sbb
lds
fsubs
mov
stos
lcall
loop
loope
jno
repnz
cmp
in
jne
mov
cmp
cld
pop
pushl
push
mov
test
dec
sti
cmp
cmp
leave
push
lcall
lock
mov
in
shlb
cli
pop
mov
ret
fcomip
imul
jg
pop
and
xchg
rorb
xor
jb
mov
cmp
add
iret
mov
inc
es
std
pop
movsl
daa
inc
mov
and
movsb
fs
pop
cmp
mov
stos
aam
or
sub
jo
push
mov
sbb
mov
movsb
rorb
es
or
jg
popf
push
and
mov
adc
add
mov
inc
adc
sub
decl
js
shll
xor
push
call
add
add
jp
cs
out
out
test
fisubrl
mov
mov
add
les
ljmp
out
xorb
mov
jmp
cwtl
into
push
imul
aam
ljmp
cli
fsubl
or
xorl
dec
or
jbe
aaa
lret
cmp
test
push
xchg
les
movsl
mov
fimull
cmpsb
xor
cli
aaa
lods
xor
dec
cmp
push
jg
mov
dec
xchg
xor
add
loop,pt
fiadds
ret
sbb
jge
ficompl
rcrb
mov
mov
cmp
dec
lock
mov
cvtpi2ps
xor
cmpsb
push
xor
add
mov
clc
inc
je
xchg
test
pop
aas
dec
sbb
push
lret
push
mov
mov
sub
clc
pop
outsl
push
push
movl
jle
clc
or
pop
ss
stos
cmp
push
pop
jp
inc
mov
movsb
pop
jecxz
dec
dec
jno
mov
push
dec
jp
xchg
inc
push
add
jb
loop
add
push
or
shrb
xchg
hlt
imul
jnp
adc
dec
out
nop
mov
pushl
push
aam
adc
mov
aam
mov
cmp
cmp
jmp
fdivrs
or
or
lcall
mov
out
dec
mov
sbb
push
mov
and
xchg
jo
cmp
jg
inc
rcrl
push
mulb
mov
add
dec
rcrl
mov
or
sti
incl
fiadds
shl
and
pop
pop
ret
cmp
or
outsb
cwtl
int
push
push
push
cld
push
cmpsl
roll
jae
cmp
ljmp
sbb
je
enter
mov
mov
mov
ja
add
sbb
aam
data16
int3
loopne
icebp
push
cwtl
mov
sbb
xor
push
xchg
sub
mov
push
push
push
cli
push
test
inc
mov
and
aad
or
mov
add
mov
cmpsl
je
dec
cmp
xor
xor
movsl
lock
ret
xchg
add
aad
dec
add
jg
das
aam
mov
mov
cltd
mov
mov
cmp
inc
sbb
or
fwait
or
fisttpll
add
push
imul
jmp
add
aaa
cmovns
dec
dec
movsl
loope
fsubrp
push
cmp
mov
inc
int3
leave
mov
imul
add
loope
bound
fs
sub
into
in
cmpsb
push
sub
pop
loop
or
push
add
in
outsl
mov
mov
mov
ret
adcl
int3
sub
int
jge
jmp
mov
iret
outsb
xor
sbb
scas
push
or
pop
ds
adc
jnp
imul
outsl
mov
pop
adc
add
lret
sub
fcomip
ljmp
int3
push
fstl
lock
or
lcall
fcmovb
dec
cwtl
push
sahf
jo
lods
cli
sbb
jo
ret
std
mov
movsl
mov
xchg
add
sbb
imul
cmpsl
movzbl
int
or
in
sub
int
test
xor
faddp
stos
mov
fists
mov
lods
inc
adc
icebp
mov
pusha
jnp
lods
xlat
push
mov
add
daa
xor
incl
or
xchg
push
dec
xchg
cmp
or
jb
and
dec
mov
pop
add
cmp
loope
mov
imulb
or
lods
mov
rol
push
pop
pop
sub
sbb
fimull
jmp
sbb
into
ret
addr16
rorl
mov
dec
push
mov
pop
cmp
ret
dec
clc
enter
sbbb
push
add
mov
sub
add
testl
enter
stc
or
sub
push
xor
adc
xchg
fnstenv
in
sar
lahf
inc
or
add
arpl
fs
loopne
xchg
inc
sub
mov
xor
sbb
sti
push
ljmp
lods
aam
or
inc
xchg
or
pop
cmp
dec
or
pop
push
inc
sub
lea
negb
adc
ret
call
aas
sbb
hlt
cmp
bound
sbbb
mov
mov
xor
cmp
inc
xchg
xor
loop
aas
pop
push
loope
xchg
push
mov
mov
aas
add
lea
cmpsl
mov
es
and
jnp
ja
sbb
mov
sbb
and
inc
add
clc
cmp
dec
and
das
cmpb
mov
jno
lret
add
pop
inc
xor
xor
push
enter
push
into
loopne
jp
pop
sub
aaa
push
cmp
lods
or
cmpsb
xchg
cwtl
sbb
cltd
or
add
jle
daa
adc
testb
adc
cld
incl
leave
dec
push
adc
add
mov
loope
inc
test
xchg
jl
add
cmc
into
jne
dec
ficompl
push
sbbb
sub
adc
inc
pop
icebp
in
repnz
add
loope
inc
and
lret
aam
rorb
mov
inc
cwtl
push
inc
les
push
mov
inc
mov
fadd
sbb
rolb
aad
dec
mov
rolb
push
jne
add
es
xchg
sbb
xchg
rorl
imul
cld
filds
ja
adc
icebp
in
sub
cwtl
or
jg
outsl
or
xchg
decl
jb
sahf
add
setg
lock
inc
sub
loop
cld
push
cld
mov
fmull
pop
pmulhw
rcl
adc
decb
call
test
rorb
lock
lods
push
data16
insl
add
jo
fldenv
mov
xchg
rcrb
adc
mov
leave
hlt
loopne
jmp
dec
inc
cmp
in
adc
adc
or
inc
jo
jp
jbe
loope
data16
movsl
cli
inc
or
jns
mov
jo
and
cmpb
mov
and
mov
mov
imul
rcll
out
and
jle
sbb
jg
jg
lock
mov
push
mov
jae
outsb
movsb
jno
adc
test
and
sti
or
inc
jmp
xor
and
mov
enter
push
mov
lock
push
outsb
inc
adc
clc
jg
dec
imul
or
ss
insb
mov
stc
mov
scas
incl
aam
sbb
inc
icebp
push
popa
data16
and
fbstp
push
add
push
xor
daa
mov
ficomps
cmp
push
shr
dec
ds
cltd
add
xor
call
pop
jns
sub
or
or
test
and
popf
mov
jp
insl
sbb
es
jl
pop
cmp
or
jl
add
jb
fwait
pusha
cmp
push
aas
arpl
add
push
jecxz
or
mov
add
push
sub
mov
adc
mov
push
fmul
fldt
add
dec
and
add
add
hlt
ret
xchg
out
add
fs
jle
push
jns
jb
icebp
mov
es
xor
inc
and
push
pop
jge
cmpb
cmpl
adc
imul
pushw
jmp
dec
dec
rorb
jge
jecxz
mov
loop
or
push
mov
icebp
mov
or
mov
in
pop
dec
and
aaa
or
pop
sbb
mov
jne
dec
les
push
loope
jle
mov
xor
sub
inc
sbb
xlat
mov
jo
add
icebp
das
js
adcl
outsb
int
out
cld
mov
push
jge
jbe
aam
jle
pushf
mov
dec
inc
hlt
dec
mov
push
scas
out
stos
pop
aad
mov
pusha
hlt
lret
mov
or
data16
cmp
sub
incl
hlt
fists
xor
or
lea
adc
adc
sti
mov
dec
cmp
jle
inc
sbb
sub
dec
and
mov
js
lock
pop
or
in
adc
add
popf
scas
imul
lock
dec
sub
scas
mov
dec
jp
test
pop
loop
pop
pusha
or
fsubrs
insb
leave
mov
xor
pop
cmp
sbb
lods
call
jmp
push
adc
popf
hlt
jnp
dec
lock
sbb
aaa
sarl
push
std
pop
inc
push
mov
cwtl
push
push
adc
jle
int
add
jl
mov
jns
dec
lret
outsl
js
adc
pushf
arpl
incl
es
int3
xor
jmp
dec
filds
xor
sbb
pushl
adc
dec
mov
mov
push
rcrb
cmp
dec
movsb
adc
mov
fcomip
outsl
xchg
cmpsl
inc
cmpsl
scas
lahf
mov
or
les
arpl
sbb
push
aam
test
pop
pusha
imull
int3
stos
or
ss
xchg
push
clc
pop
imul
or
rolb
std
int
gs
rolb
or
clc
enter
clc
ror
push
push
into
lcall
outsl
aam
or
sahf
cs
lds
jnp
and
data16
cmp
add
lret
jl
mov
lock
lock
sbb
push
xor
popf
dec
sbb
sbb
push
mov
ja
mov
mov
pop
push
add
faddl
lret
push
adc
pop
cmpsb
xchg
icebp
or
pop
lcall
or
push
int3
sub
pop
xor
add
lods
mov
sbb
std
jnp
ljmp
sbb
xchg
out
mov
inc
jmp
pushw
or
lock
mov
jmpw
push
std
mov
add
add
repz
pop
and
jbe
inc
repz
incl
cmp
cld
lret
jg
mov
lea
mov
adc
rolb
mov
lds
jg
cld
jbe
aaa
sub
sti
add
enter
loop
sbb
dec
fimuls
ds
dec
fisubrl
fwait
sub
cmpsb
cmp
mov
xchg
outsb
inc
adc
push
inc
xor
mov
orb
in
popa
jp
sbb
mov
or
adc
rcl
cmp
dec
repnz
jl
pop
scas
cmpb
mov
fxch
mov
jne
pop
xchg
xor
sub
xor
jmp
inc
lods
pushw
mov
xchg
dec
push
jle
movq
or
and
sahf
inc
dec
and
sbb
loopne
jne
mov
xchg
scas
or
or
jmp
cli
pop
or
call
inc
and
ffree
dec
sbb
cmpl
ret
imul
mov
subb
xchg
ja
cmc
rorb
add
std
icebp
aas
jg
inc
inc
movb
sub
cmc
fcoms
sub
adc
loope
mov
mov
cli
incl
and
and
push
push
sub
add
mov
jne
sbb
jne
and
add
loop
xchg
daa
adc
sti
inc
es
bound
sbb
push
xor
ds
enter
xchg
mov
add
cmpsb
aad
sbb
pushf
jmp
jle
jmp
jle
mov
and
pusha
push
cmc
dec
or
push
push
cld
lock
inc
jmp
xor
push
mov
aaa
mov
test
fs
jg
es
jnp
or
dec
sahf
aas
fmuls
es
xchg
dec
and
cwtl
faddl
hlt
lret
clc
jg
xchg
xor
movsb
jecxz
lcall
add
push
ror
sbb
cmp
xchg
add
push
je
mov
push
push
out
ret
inc
inc
jl
jno
loopne
outsb
sub
mov
add
add
adc
or
mov
cmp
xor
pusha
sub
jnp
lret
vrsqrt28sd
add
sub
mov
jle
mov
imul
add
aaa
pop
mov
mov
decb
push
imul
xor
dec
xchg
ja
jg
add
pop
test
shll
outsl
jo
testl
sub
stc
in
pushf
mov
fistpl
fcomi
xor
ror
adc
mov
and
adc
jo
xchg
adc
clc
or
call
or
cli
lcall
or
loop
out
nop
jno
test
fs
adc
jno
inc
push
subb
jl
sub
pusha
je
iret
fists
cmp
pusha
jae
inc
xchg
and
in
lods
cmp
es
sbb
cltd
jns
mov
je
loope
add
jno
or
fdiv
xchg
clc
jns
mov
pusha
cwtl
add
sar
ds
push
and
sbb
adc
filds
andb
jo
inc
lcall
ja
sbb
mov
insl
and
shr
bound
add
jb
sbb
mov
push
daa
imul
pop
lret
rcrb
adc
sub
fists
sahf
das
xchg
fistps
iret
add
out
xchg
ja
push
je
mulb
and
cmpsl
nop
mov
or
mov
jle
pop
pop
ja
aas
sub
xchg
dec
xor
xor
cld
inc
test
ret
mov
add
ret
mov
out
mov
add
lahf
inc
jecxz
sub
sbb
add
add
fwait
push
mov
mov
addb
jg
std
jg
cmpsl
xchg
lds
popa
add
fs
bnd
mov
and
xor
xor
push
mov
insb
jg
fisubs
shl
scas
or
in
or
ljmp
xchg
push
faddl
or
and
inc
lret
pop
xor
and
adc
cmp
jp
mov
inc
ss
aas
sbb
adc
inc
cs
das
mov
pop
ljmp
jp
popf
jge
sar
cmpsb
sub
mov
xchg
fdivr
push
pop
clc
mov
adcl
push
fistpll
xor
add
sbb
sbb
inc
popf
or
add
xor
sbb
ret
stos
lock
push
add
pop
int
popa
fucom
or
add
call
loop
into
out
orb
pop
xor
dec
sub
jb
rorl
insl
or
ret
pop
push
push
mov
les
xor
and
mov
fucomi
add
out
xchg
sub
js
dec
fs
stos
sti
fistpll
dec
lahf
and
rcr
lea
lods
stos
cmova
int
xor
dec
adc
pop
add
push
pushf
mov
cs
push
bound
pop
std
decl
xlat
xor
nop
add
inc
mov
loopne
jg
rol
cmpsl
ret
mov
loop
clc
ljmp
mov
cmp
cmp
in
repnz
out
ja
jecxz
push
add
mov
popa
adc
adc
adc
add
pusha
add
and
dec
mov
sbb
add
jmp
ficoml
nop
test
dec
aaa
push
mov
and
scas
loop
cmp
cwtl
mov
xchg
add
mov
push
add
jp,pn
xchg
xchg
sti
cld
fidivrs
jge
add
outsb
and
and
int3
push
add
jmp
movsb
rolb
add
inc
cmp
sub
xor
xor
lods
loop
lock
or
sub
sbb
mov
fmull
popf
sbb
out
lret
sub
push
xchg
arpl
fs
jp
test
cmp
out
sub
and
decl
loop
push
pop
mul
je
rcr
fdivrs
loop
lock
pop
xor
test
mov
popf
inc
mov
or
pop
aam
outsl
cltd
inc
jl,pt
pop
fstpt
or
dec
fsts
ljmp
jmp
cmpsb
mov
call
out
adc
es
or
in
ja
fidivs
add
aad
add
inc
mov
loop
inc
jnp
rcrb
push
loope
mov
jbe
cmp
sarb
adc
aaa
mov
push
xor
xor
inc
or
jle
cld
pop
cld
dec
stos
loopne
hlt
and
fiaddl
cs
pop
fldl
out
push
cmpsb
stos
adc
pop
sub
jg
push
mov
adc
fldcw
push
pop
push
in
mov
jo
movb
xlat
xlat
and
mov
cmp
fnsave
add
adc
cmpl
popa
mov
xor
fdivrl
stc
cmpsb
ret
shrl
xor
or
sub
lea
lods
test
dec
gs
dec
xchg
nop
jo
shlb
mov
sub
int3
test
jl
jo
push
outsb
jo
mov
loopne
inc
int
adc
adc
adc
dec
ljmp
inc
popf
push
test
sarl
inc
jle
rorb
push
pop
inc
mov
cmp
jge
hlt
popf
inc
or
movsb
je
mov
xchg
xor
gs
sbb
sahf
fildl
imul
ss
mov
pop
jb
testl
call
add
mov
dec
pop
or
loope
sub
aaa
mov
xchg
mov
and
enter
add
inc
sub
rorb
sub
mov
popf
push
sub
cwtl
sub
aaa
pop
sub
lock
inc
push
lcall
out
add
sbb
hlt
xchg
loope
xchg
add
cs
testb
push
push
cmp
and
mov
add
cld
inc
sarb
mov
cmc
sbb
jb
flds
xchg
and
inc
sub
jle
mov
xor
mov
fmuls
cmc
scas
adc
popf
push
inc
or
fildll
cli
xchg
mov
lcall
pop
outsl
sarb
incb
rolb
lock
or
adc
pop
loopne
scas
stc
add
push
dec
jbe
xchg
test
mov
push
fisubl
cmp
sbbl
mov
xor
ds
jmp
insb
cmpsb
add
movsb
cs
fisttpl
lcall
in
mov
out
dec
add
sldt
add
inc
inc
inc
inc
or
rorl
imul
fwait
nop
sbb
testl
out
mov
inc
daa
sub
rorl
push
add
insb
pop
sbb
fs
cwtl
xchg
xchg
aad
jg
loopne
pop
sbbb
jb
lcall
aas
mov
int
cmpsl
test
add
test
xor
adc
es
repz
jmp
cmpsl
jns
and
add
mov
jmp
bound
out
rcr
xchg
jl
or
push
mov
fisttpl
aad
out
pop
or
fcmovnb
jl
bound
inc
js
pushl
fmull
push
cmp
jmp
inc
or
jo
jo
sub
icebp
push
out
cwtl
push
fmull
sub
movsb
ss
inc
adc
jle
call
sbb
add
xlat
pop
test
pop
push
pop
xor
mov
cmpb
fists
ss
xchg
aas
int3
adc
xchg
js
pop
jl
pop
out
jg
scas
cmpsb
push
repz
push
and
inc
test
test
cmp
add
popa
adc
and
sub
push
cmp
ret
dec
add
shl
jnp
pop
adcb
cmpsb
xorb
insl
orl
add
std
inc
dec
js
mov
fcom
fisttpll
add
inc
lock
or
and
fildll
dec
aad
push
add
jg
sbb
orb
push
or
aaa
jge
pop
push
push
ret
pusha
sub
stos
fucomip
jp
jg
adcb
lods
add
lods
push
leave
mov
mov
push
dec
and
in
es
test
cli
divb
push
nop
xor
mov
pop
pop
arpl
lock
imulb
js
and
and
cmpsb
xchg
xor
mov
inc
fwait
add
push
add
scas
ss
mov
dec
dec
aas
adcb
xor
andb
mov
and
sub
sbb
decl
and
xor
jb
inc
mov
push
push
fiadds
cmp
push
mov
cmpsb
loopne
call
hlt
xor
lret
xor
sub
aas
ja
clc
call
mov
push
test
cmp
faddp
insl
cmpsl
aaa
call
std
mov
add
fsubrl
push
les
xchg
mov
add
mov
or
dec
adc
rclb
popf
cmp
cmovge
xor
inc
sub
repnz
call
movsb
sub
test
sbb
mov
sbb
loope
add
mov
mov
push
and
mov
adc
pop
mov
stos
cmp
neg
mov
cld
incl
push
icebp
or
dec
jp
into
popf
push
xor
test
sub
int
xor
nop
pop
int
jg
or
and
push
sbb
hlt
sub
xlat
ret
jecxz
orl
pusha
lds
jb
and
mov
es
incl
pushf
inc
xchg
xchg
aas
push
push
sarb
cmp
decl
scas
sbb
push
or
cmc
pop
fiadds
push
or
jp
cmpsb
aaa
sti
push
call
push
mov
or
std
movsb
sub
or
sbb
stos
ss
and
fs
cmp
push
xchg
mov
popf
mov
jg
sub
lock
fisubrl
arpl
push
jbe
repnz
scas
jl
stos
ja
popa
in
in
push
mov
add
pop
bound
ja
imul
sub
rcrb
call
insb
arpl
pop
mov
mov
pop
xchg
je
out
jbe
xchg
cmpsl
scas
ljmp
jle
dec
mov
lcall
clc
jmp
sbb
dec
mov
in
rcll
xor
pop
mov
adc
xor
ret
inc
mov
push
pop
sbbl
push
jl
jle
cs
bound
popa
cmp
ja
cmp
icebp
dec
jo
dec
or
push
xchg
xchg
lods
lcall
xor
and
xor
outsl
or
mov
outsl
out
cmp
data16
mov
pop
sti
decl
das
aam
jae
notb
jge
aad
push
push
xchg
cmc
push
inc
roll
mov
cmp
out
roll
cmp
sahf
fcoms
push
sbb
jb
cmp
inc
mov
dec
cltd
shr
xchg
add
jb
jo
xchg
popf
inc
push
lods
mov
test
adcb
sbb
stos
mov
push
add
stos
data16
shl
push
pop
nop
inc
adc
mov
push
and
sub
loope
and
push
test
xor
cmpsb
push
test
xor
push
mov
mov
push
sbb
test
clc
mov
lcall
xor
std
outsb
shlb
jne
je
add
xchg
or
arpl
pop
cli
push
nop
mov
sub
dec
sbb
cld
sti
test
popf
xchg
dec
push
inc
sti
push
mov
mov
sbb
adc
lcall
mov
adc
inc
pop
add
pop
das
fcoms
jle
in
dec
sbb
add
add
fld
outsl
mov
xchg
int3
rcl
jp
out
es
xchg
sbb
push
bound
sbb
lcall
adc
add
repnz
or
push
dec
xchg
sbb
sbb
stos
sbb
hlt
adcb
sarb
stos
push
call
or
xchg
mov
jle
imul
or
repnz
inc
insl
test
pop
popa
test
mov
data16
pushf
jno
rclb
lret
mov
push
bound
adc
push
lods
mov
fs
lcall
xchg
jbe
jp
inc
add
les
movsb
dec
cmpsb
ljmp
outsb
lea
sub
inc
test
shl
adc
xor
or
loopne
pop
pop
mov
xchg
and
cmpsl
pop
hlt
sbb
cli
add
nop
pop
pop
push
inc
dec
pusha
imul
xchg
mov
push
in
adc
data16
in
inc
into
jecxz
insb
mov
and
int3
iret
in
cli
loopne
inc
mov
push
add
cld
xchg
and
mov
push
jmp
lea
cmp
pop
and
cmp
loop
into
mull
push
aas
clc
es
add
scas
ret
inc
bound
aad
adc
mov
shrb
mov
dec
lods
xchg
inc
pop
mov
jbe
jno
xchg
xchg
fisubl
rolb
push
inc
int
mov
mov
xchg
sbb
cli
test
sbb
shrl
dec
jg
mov
jp
test
push
lret
jnp
push
inc
xchg
ror
les
loopne
fdivr
scas
mov
mov
sub
push
pop
cmp
adc
in
and
xorb
pushf
mov
pusha
jmp
test
es
enter
imul
mov
push
mov
fs
mov
pushf
mov
fdivl
xchg
xor
inc
push
int3
and
ss
and
imul
dec
test
enter
jp
test
out
push
add
mov
outsl
add
inc
sar
scas
aaa
cmp
fs
mov
int3
mov
mov
mov
jmp
in
sbb
jmp
andl
or
shll
sub
or
fistps
das
js
cmp
addb
mov
and
outsl
add
bound
loope
ljmp
mov
arpl
shlb
adc
xor
cmp
test
stos
push
sarl
inc
bound
das
clc
mov
push
cltd
push
push
arpl
cmpsl
sbb
nop
test
pop
cwtl
pushl
jo
xchg
shrb
xorb
dec
dec
mov
and
push
ds
loop
pop
bound
add
jno
lods
pop
sub
or
cmc
mov
cmp
or
push
ret
scas
out
repz
dec
xchg
cli
outsl
outsl
shl
mov
dec
dec
les
inc
ds
pusha
xchg
jmp
ficomps
sbb
sahf
xor
adc
push
in
out
rcl
xchg
cmp
adc
inc
aad
push
push
inc
daa
mov
push
push
je
test
add
xchg
dec
scas
aas
mov
pushf
sub
sbb
xor
adc
addb
stos
cmp
xor
negb
cld
mov
jno
sti
sub
pop
adc
orb
pop
add
or
fsubl
cmp
jl
pop
dec
cmp
mov
rorb
clc
pop
mov
add
in
push
es
ljmp
out
aam
jle
test
add
cmpsb
repnz
lods
flds
or
mov
mov
xchg
aaa
sub
pop
or
std
adc
arpl
sub
mov
jl
inc
adc
jno
and
dec
daa
js
adc
cmp
push
mov
frstor
cltd
pusha
xor
bound
sarb
mov
sub
add
sbb
pushf
lds
xor
dec
addr16
scas
inc
repz
insb
inc
insb
mov
fiadds
add
outsb
pop
push
push
mov
add
ret
jno
or
xchg
fildll
add
hlt
push
loope
sub
mov
pop
enter
pop
pop
inc
sbb
imul
fiaddl
cmp
cmp
mov
mov
icebp
ds
pusha
xor
xchg
and
inc
cwtl
test
add
scas
sub
jb
mov
dec
adc
scas
mov
xor
xchg
add
fs
imul
sbb
in
sbb
push
fcmovb
xchg
les
fnclex
push
jp
pop
jo
inc
jp
mov
jp
cwtl
lcall
lods
lock
inc
dec
arpl
popa
cs
mov
jns
push
inc
adc
das
xchg
adc
test
ljmp
xor
and
jg
cmpsb
mov
add
sub
jnp
inc
mov
mov
adc
outsb
fcompl
outsl
mov
adc
mov
addl
cmovnp
inc
mov
or
mov
and
stos
xchg
call
scas
aam
adc
test
shl
push
es
xor
xorb
mov
inc
cli
mov
cmc
add
xor
enter
prefetch
adc
sahf
dec
ss
mov
mov
scas
es
xor
cld
mov
cmp
aad
andb
push
cld
mov
sbb
cmp
add
pushf
les
decl
mov
cld
xchg
fcomps
stos
add
cld
mov
pop
or
cltd
sub
andb
clc
xchg
cli
mov
xor
pusha
adc
imul
stos
fsubp
xor
inc
leave
mov
mov
sbb
mov
inc
push
inc
or
imul
xchg
mov
push
popl
dec
cmpb
jno
and
mov
js
call
inc
mull
test
pop
pop
gs
adc
fisubs
insl
js
clc
xlat
adc
push
jno
pop
push
lret
xchg
sub
and
mov
add
xchg
decb
mov
aas
mov
cli
push
xchg
pop
xor
jb
pop
scas
add
daa
jne
scas
js
or
dec
cwtl
jae
cmpsl
movsb
inc
sbb
dec
push
test
add
adc
testl
cmp
sbb
pop
pop
xlat
inc
adc
aas
or
rorb
xchg
cmp
insb
mov
inc
push
push
push
pop
mov
adcb
pop
lahf
push
out
mov
stos
in
mov
repnz
push
xchg
mov
nop
imul
xchg
clc
cmp
fwait
rcrl
jg
xlat
loopne
lret
dec
xchg
sbb
stc
test
mov
mov
fdivl
or
pop
mov
pop
insl
insb
mov
inc
jle
add
adc
mov
stos
cmpsb
mov
lock
add
fidivrs
fistpl
loope
push
mov
faddl
push
add
fdiv
mov
movsl
and
cld
pop
pushf
push
not
data16
mov
jbe
mov
jl
inc
into
orl
sbb
das
shrb
popa
adc
pop
sub
icebp
icebp
jg
add
dec
jbe
inc
sbb
leave
es
lahf
mov
and
mov
jmp
cmp
add
inc
adc
push
dec
cltd
out
enter
pushf
dec
loopne
and
pop
sub
add
lds
negb
mov
mov
push
out
sub
push
cld
or
mov
ds
mov
loopne
outsl
xor
jg
adc
cmp
popf
aad
clc
lcall
aad
push
jg
inc
mov
and
jno
data16
lods
or
sahf
mov
fiaddl
incl
out
inc
push
pop
xchg
xor
push
sbb
cmpsb
loop
das
stos
xchg
rcll
inc
push
mov
ljmp
scas
lods
ret
fwait
adc
mov
jge
inc
inc
mov
push
ds
daa
sub
sbb
xorb
repnz
xor
add
icebp
xorb
xor
push
sub
out
jge
cld
and
jae
out
sub
inc
adc
sbb
mov
adc
and
inc
xor
mov
inc
sub
add
cmpsl
or
adc
js
scas
cmpsl
loop
jo
inc
push
cmpsb
cs
sub
outsl
mov
icebp
add
or
decb
int3
xchg
loope
push
lods
mov
mov
shlb
loopne
add
stos
xor
gs
mov
or
std
add
push
and
sbb
shll
ss
cli
xchg
mov
das
and
lahf
cmp
lock
enter
shrl
pop
pusha
movsl
loop
adc
mov
fs
pop
sub
inc
aad
or
mov
and
out
inc
mov
stos
ffreep
iret
shrb
pop
jp
frstor
fwait
sbb
pop
add
arpl
icebp
out
pop
mov
addl
push
or
testb
xlat
pop
mov
push
pop
sahf
push
cmp
ljmp
jecxz
mov
or
push
call
loopne
mov
push
es
cmp
pop
mov
lods
cmpb
push
and
test
data16
das
push
je
push
sub
sbb
xlat
cmp
clc
mov
lock
dec
in
stos
testl
data16
loopne
cmp
idiv
ja
jle
xchg
mov
movsb
add
scas
adc
or
dec
cld
jg
jmp
cmc
aaa
mull
rorb
mov
in
add
vpshuflw
rcr
int3
mov
mov
aaa
mov
push
xchg
cmpsb
out
push
jge
inc
mov
pop
movsb
shlb
or
mov
icebp
in
mov
cld
and
mov
loopne
in
lock
cli
mov
mov
aam
mov
fimuls
jb
sub
add
dec
inc
clc
call
mov
xorb
fs
inc
pop
xor
jl
shll
jb
inc
rcrb
mov
arpl
and
sub
sbb
xor
or
fadds
add
rolb
lahf
movsl
mov
jo
cwtl
popa
xor
pushf
fstps
test
outsb
mov
icebp
push
xchg
or
adc
js
shrl
jbe
icebp
pop
lret
fcmove
or
cmp
push
imul
cmp
inc
imul
lret
rcl
mov
push
loopne
je
popa
inc
lret
sbbb
das
cwtl
subb
dec
push
dec
int3
xchg
out
int3
outsl
clc
mov
pop
leave
xchg
xchg
inc
mov
mov
dec
push
stos
jb
xor
lcall
rolb
jmp
cmp
outsl
or
imul
push
shl
ficompl
jl
push
xor
xchg
mov
out
jle
outsl
mov
add
pop
mov
lret
push
clc
or
mov
xchg
clc
mov
mov
fidivs
pop
cwtl
ret
add
lods
cmp
into
ja
ret
push
mov
test
flds
xchg
negl
rclb
sbb
adc
dec
and
js
test
mov
xchg
push
jbe
lock
loopne
std
or
pop
cli
jmp
inc
sbb
mov
subl
inc
jl
cmp
xchg
mov
ret
jns
adc
mov
mov
mov
push
and
mov
cmp
inc
and
or
loopne
lret
adc
push
test
push
adc
aam
mov
popf
dec
xchg
push
or
in
xchg
cmp
jnp
or
push
add
xor
jne
mov
outsl
mov
xchg
jmp
lret
fisubl
clc
inc
cwtl
adc
jle
pusha
lret
jns
loop
loop
outsb
pop
sub
xor
je
movl
mov
adc
mov
mov
cmp
orl
adc
mov
lret
aas
jg
or
addb
or
mov
lods
xchg
and
jge
outsl
rcrb
push
movsb
ds
pusha
adcb
jle
jo
fwait
test
add
cld
xorb
jo
rcll
es
xchg
inc
sub
mov
push
adc
push
xchg
test
mov
fidivrs
pop
push
xchg
fildl
pop
shl
in
jns
adc
cmp
xchg
mov
fstpt
cmp
or
popa
mov
les
test
or
ret
or
aaa
cmp
pop
and
gs
shrl
cmp
sbb
mov
test
das
xor
data16
addr16
das
xchg
jmp
pop
outsb
cld
in
mov
jmp
dec
mov
push
ljmp
adc
in
ds
pop
jle
pushf
cs
jbe
in
ss
push
pusha
adc
nop
push
add
xor
push
std
loopne
mov
cmpsl
popf
mov
xor
mov
and
orl
sarl
add
js
push
pop
loope
mul
shl
insb
imul
mov
cmpb
int
jno
dec
shlb
mov
lcall
fnsave
jg
xor
and
rcrb
push
orl
push
jecxz
mov
shr
sbbl
rorb
add
push
andb
sbb
leave
adc
decl
cwtl
pop
in
cwtl
fwait
nop
repnz
jno
push
push
jb
cltd
into
pop
sbb
jne
add
out
call
push
dec
or
rol
jns
adc
fs
nop
sub
ss
pop
xor
mov
loop
mov
aam
add
stos
cmp
sahf
jne
push
movsb
mov
pop
push
addb
fbld
and
mov
popa
in
or
adc
incb
or
shlb
daa
sub
and
movsb
xor
fistps
and
cld
test
mov
push
sbb
and
xchg
icebp
aaa
push
or
or
add
push
xor
push
idivl
sbb
mov
xor
pushf
cmp
fsubrs
xor
or
jg
sub
mov
sbb
lock
std
inc
rclb
ret
sarl
imul
pop
add
aaa
sbb
cmc
add
inc
mov
mov
xchg
cwtl
jb
add
imul
dec
push
pop
pop
in
push
dec
arpl
push
ds
or
pusha
test
cld
jmp
jl
loop
ret
pop
lea
or
xor
hlt
pushf
xor
std
or
pusha
lock
cmp
sarl
xchg
mov
xor
fcmovnb
pusha
adc
cmp
in
mov
mov
sbbb
in
mov
call
aas
movsl
add
cs
mov
and
shl
das
jle
ss
pop
xchg
inc
add
add
stos
loop
mov
xchg
hlt
add
xchg
cltd
dec
out
and
pop
xchg
pop
aaa
dec
cmp
rolb
xchg
mov
sbb
clc
and
mov
rclb
jmp
f2xm1
xor
or
and
mov
or
jge
or
das
mov
dec
mov
mov
cwtl
inc
repnz
iret
pop
inc
dec
mov
fadds
jmp
pop
das
mov
add
in
and
jae
das
sub
mov
mov
add
dec
adcb
repnz
shll
xor
xchg
mov
dec
fildl
loop
test
ret
loop
idivb
scas
push
jae
adc
leave
bound
and
lock
pop
inc
pushf
cwtl
ljmp
push
imul
pusha
and
cmpsb
pop
mov
jge
pop
loope
movsb
arpl
insb
pop
in
and
cli
jg
sub
add
ds
les
out
sbb
sub
clc
mov
inc
cmpsl
xor
cmp
add
imul
cld
cld
jl
sahf
or
stos
jnp
dec
push
xlat
cli
sub
mov
jle
sub
mov
test
add
lahf
mov
cld
add
mov
int3
cli
jmp
and
dec
bound
test
or
pop
and
lock
mov
sbb
cwtl
rolb
es
cld
sbb
sbb
in
in
or
fdivs
cltd
or
daa
stos
je
int3
sbb
clc
mov
or
and
push
mov
push
mov
inc
arpl
cmpl
jae
or
sbbb
add
es
loop
sub
lock
xor
inc
loope
aad
std
add
mov
decl
sbb
sbb
push
ss
inc
lods
jg
in
or
js
aad
pop
push
in
push
test
lods
das
fdivs
scas
add
xchg
mov
dec
push
and
imul
ljmp
ffreep
mov
nop
test
lods
rolb
push
adc
add
pusha
jge
mov
mov
add
adc
mov
push
lds
jg
cltd
and
adcl
inc
loopne
aad
add
and
push
loopne
push
cld
aas
inc
pop
imul
inc
pusha
xchg
xchg
pop
mov
in
loopne
movsb
push
imul
mov
adc
mov
and
or
xchg
dec
and
push
jmp
dec
jmp
add
dec
fsub
div
sbb
fs
mov
test
jp
pop
shl
setb
sub
dec
pop
jge
bound
les
dec
cmp
mov
mov
or
jl
or
repz
mov
mov
loop
mov
loope
je
sub
add
inc
dec
push
mov
pop
add
ss
iret
jae
aad
pusha
jg
repz
sub
insb
std
mov
je
xchg
nop
sub
cmpsb
jno
leave
ljmp
push
jae
mov
mov
aaa
add
into
push
add
fsubrp
cmp
add
mov
or
mov
cmpb
or
jp
inc
adc
cmc
adc
xchg
add
icebp
adc
sti
pop
dec
or
aad
mov
cmc
lock
test
call
xchg
loopne
sarl
adc
insb
jo
ror
jns
clc
or
ljmp
test
dec
mov
pop
cwtl
cli
test
js
cmc
xchg
or
jbe
mov
or
stc
test
rcl
xor
lock
aad
and
cwtl
notb
pushf
push
dec
jne
and
push
imul
sbb
decb
adc
dec
sub
popf
ljmp
nop
inc
xor
popa
inc
jl
aam
inc
mov
push
lds
sbb
pushf
xchg
mov
push
add
add
popa
xchg
test
sub
jle
ret
push
sbb
cmp
xchg
outsb
enter
incl
pop
add
es
jg
add
mov
dec
or
mov
inc
xchg
and
clc
mov
or
or
jbe
and
outsb
lea
je
cmpb
cld
adc
sarb
push
mov
daa
sbb
xchg
xor
pop
in
mov
pop
mov
cld
fcoms
in
dec
jmp
mov
or
xchg
mov
mov
testl
shl
decl
dec
mov
and
das
sbb
mov
xor
add
mov
xor
test
loop
rclb
lret
aad
iret
mov
jnp
cmp
in
jecxz
cmp
in
push
into
pop
mov
fsubrp
inc
repnz
out
shrl
push
cmp
sbb
das
cli
bound
add
shr
push
xchg
fcmovu
mov
and
lods
idiv
xor
jno
lods
and
seto
dec
jnp
xchg
ja
mov
push
aad
bound
enter
addr16
test
enter
hlt
jo
mov
mov
inc
mov
mov
push
cli
fidivrs
fldl
mov
pop
dec
ja
add
xchg
mov
pop
mov
inc
stos
jl
add
cld
ljmp
push
js
loope
sub
xchg
add
mov
mov
dec
aad
cmp
sbb
xchg
adc
decb
jl
xor
out
pop
movsl
push
push
push
pop
dec
std
jg
out
jmp
movsb
lock
and
ljmp
dec
sub
aam
insb
sbb
mov
mov
int
and
mov
inc
push
leave
add
fs
imul
or
mov
mov
incl
cmp
mov
cld
and
inc
inc
fsubp
shrb
add
outsb
mov
mov
insl
cmc
pop
cli
loope
repnz
in
into
add
std
fcmovbe
hlt
push
pusha
cli
dec
sbb
push
cltd
cli
sti
cmp
xorb
out
push
add
fbld
push
add
stc
pop
push
xchg
loopne
cmpl
sub
push
in
fmuls
xchg
add
ds
push
pushf
push
lret
add
mov
iret
lea
lcall
adc
mov
jl
pop
add
repnz
xorl
ds
jbe
cltd
jp
jle
add
popl
pop
ja
shrl
or
add
mov
pop
inc
test
pop
scas
js
sarb
dec
sahf
fdivrl
sbb
das
clc
aas
add
pop
jns
rep
inc
aad
cwtl
sbb
xor
cmpsl
outsb
dec
cmp
and
sti
sbb
mov
mov
test
dec
stos
pop
push
cmp
call
push
fmul
aam
mov
mull
mov
pop
adc
push
pushf
hlt
cs
pop
dec
mov
push
rcll
mov
mov
rcr
jno
stos
je
inc
imul
sub
xchg
mov
push
insl
lods
pop
icebp
fistps
push
call
sub
mov
es
dec
inc
les
dec
push
cmpsl
inc
mov
or
cmp
sbb
and
mov
in
ss
les
shl
mov
cmp
pop
cmp
pop
mov
fcomip
mov
xchg
fisubs
xchg
leave
push
movb
jle
add
data16
arpl
adc
or
cmp
in
test
jmp
push
pop
mov
sbb
mov
into
sub
add
cld
pop
pop
insb
mov
pop
lahf
or
pushf
pop
lret
push
inc
into
dec
inc
add
ret
cli
mov
inc
and
mov
aaa
jecxz
cmp
pop
stos
arpl
clc
jle
ror
mov
repz
jp
mov
lods
sub
sarl
mov
mov
add
cld
xchg
sbb
insl
mov
imul
xchg
xchg
add
jg
cld
pmaddwd
push
add
inc
testl
ret
jg
mov
das
sub
insl
mov
in
cld
pop
push
ds
xor
jl
fists
sub
sbb
push
fldl
daa
lds
or
inc
sub
jmp
mov
mov
cmpsl
cltd
or
mov
mov
mov
sbb
test
sbb
or
jge
mull
push
lock
cmc
aaa
clc
bound
stos
cmpsb
adc
out
sbb
outsl
dec
test
jl
adc
add
ret
push
and
rorb
and
pop
call
mov
xchg
cld
add
inc
sarl
faddl
inc
out
adc
mov
js
push
dec
enter
cmp
sbb
dec
std
sarl
jle
mov
jl
jns
and
pushf
call
outsl
xor
add
out
jmp
scas
popf
mov
xchg
dec
out
gs
push
sbb
mov
push
push
push
lcall
rorl
pop
dec
xchg
adc
mov
adc
sbbb
cld
adc
sub
inc
lds
movsb
scas
fidivl
icebp
mov
push
xor
mov
inc
hlt
dec
pop
imul
outsb
adc
jo
ficompl
in
sub
inc
jne
add
daa
scas
or
push
popl
lods
push
mov
mov
hlt
rorb
shr
and
loope
stos
in
and
add
cmpl
sub
add
and
push
jge
rcll
loopne
jb
aam
sbb
mov
popa
lds
lds
icebp
add
std
and
adc
add
cmpb
jb
sbb
jp
cmc
out
repz
insb
and
inc
mov
imul
orl
adc
push
inc
mov
dec
sbb
adc
outsb
and
outsl
cmp
add
sub
xlat
xorps
les
test
inc
sahf
adc
fistpll
add
xchg
or
mov
inc
xchg
scas
cmp
pusha
adcl
lds
dec
adc
fwait
aam
fldt
sahf
jns
popf
lods
push
mov
repnz
or
or
jbe
cmp
insl
sbb
xchg
fadds
mov
mov
add
mov
in
test
clc
mov
xor
shlb
xchg
ret
addb
mov
jb
pop
pop
repnz
pusha
insb
jg
dec
dec
mov
shlb
sbb
pushf
mov
adc
mov
xchg
mov
cmpsl
movsb
push
fldl
dec
and
aaa
add
inc
scas
push
stos
pop
outsb
push
decb
push
call
addr16
arpl
popf
add
xor
push
jl
pusha
pop
rcrl
js
lcall
aam
dec
movb
adc
and
jbe
mov
jns
xchg
jns
adc
dec
imulb
inc
add
sub
and
aad
shlb
sub
sbb
mov
int
mov
add
sub
xchg
test
inc
dec
dec
or
aas
sub
and
xor
hlt
pop
or
dec
sbbb
cwtl
repnz
adc
rcll
add
jge
js
in
popf
repnz
xchg
sbb
cld
or
and
in
push
clc
inc
xor
cmp
shrb
decb
movsb
in
inc
jnp
fucomi
std
adc
int
ljmp
cmp
fcomip
in
sub
js
push
cld
add
mulb
pop
sbb
and
adc
inc
nop
cs
mov
sub
inc
loopne
mov
xchg
aam
adc
mov
les
hlt
jno
je
filds
cld
adc
nop
push
sbb
in
out
ja
int3
jns
in
and
sarb
int
testl
push
xchg
dec
xchg
mov
inc
mov
inc
and
or
lret
cmp
add
inc
dec
arpl
leave
dec
hlt
and
sahf
push
or
test
cs
push
int
sub
fbld
mov
lcall
xor
adc
inc
fldenv
in
aas
in
push
orb
jns
jp
xchg
clc
pop
sbb
dec
in
adc
xlat
clc
xor
xchg
sbb
jg
test
ljmp
adc
or
mov
push
pop
sub
inc
push
mov
xchg
dec
sub
mov
jge
add
stc
repz
adc
jg
lret
insb
pop
inc
mov
sarl
pop
and
cmovge
pop
addr16
or
scas
xchg
push
mov
and
lret
cmp
ret
lock
aad
push
mov
outsb
pusha
insb
jl
cli
sub
inc
mov
js
scas
sub
or
mov
enter
sbb
xor
int
das
mov
stos
mov
cmp
rcll
test
cmp
popa
int3
popf
orb
jne
push
loopne
das
mov
push
shlb
hlt
ljmp
xor
imul
inc
mov
sub
stos
seto
insl
incl
hlt
inc
in
fisubs
and
cmp
lock
adc
push
lock
mov
dec
sbb
rorb
sub
mov
and
add
inc
scas
mov
add
mov
movsb
pop
jecxz
cmp
shl
adc
dec
mov
or
int3
jl
sbb
push
gs
hlt
leave
outsl
lret
cmp
or
unpcklps
or
movsb
dec
mov
mov
add
loop
aas
call
fwait
sbb
sbb
cs
add
cli
jmp
mov
push
mov
jmp
clc
aaa
ret
lahf
inc
mov
movsb
xchg
inc
mov
shrb
mov
pushf
clc
cmp
add
mov
bound
xchg
lods
pusha
mov
hlt
push
jg
mov
aam
and
cld
pop
and
pushf
movsb
mov
cmp
hlt
fsts
outsb
jecxz
xor
sbb
push
sbb
jmp
daa
xchg
xor
lds
lcall
sbb
sbb
xor
dec
inc
and
mov
adc
cmp
mov
push
fisubl
pop
popa
loope
cmp
or
das
xchg
push
jg
mov
shrb
push
loopne
jle
stos
testl
mov
add
or
dec
call
cld
ret
adc
pop
sbb
jecxz
test
pop
mov
mov
mov
sahf
sbb
ljmp
filds
and
mov
sub
repnz
add
adcb
jbe
inc
pop
das
aad
cmp
pop
aas
adc
push
add
fwait
xor
insb
sub
pop
and
sub
inc
jbe
cmp
xchg
adc
push
out
je
fildll
push
rcll
mov
mov
sarl
sub
or
lcall
subb
sbb
sbb
jge
mov
icebp
bound
leave
iret
js
rcll
mov
inc
xor
pushf
lds
sbb
lock
and
add
cld
aas
mov
rclb
or
cmp
addl
lods
add
mov
push
call
negb
dec
add
sbb
movsl
sbb
fwait
dec
dec
js
imul
push
dec
jmp
push
mov
mov
push
mov
add
insb
pushf
insb
in
pop
in
loope
jl
int
adc
and
cmp
push
or
xchg
add
lock
clc
push
xlat
stos
mov
lret
add
and
dec
pmaxub
sub
clc
sbb
push
aam
nop
flds
xor
aaa
inc
inc
stc
xor
into
xor
cs
stos
adc
dec
andl
and
arpl
into
sarb
add
scas
ss
jbe
outsb
ret
or
loope
cmc
xlat
rcrl
aad
mov
sbb
sbb
add
dec
test
sar
enter
fs
mov
je
insb
cmp
sahf
cmpb
test
lea
nop
ds
enter
arpl
aam
mov
add
mov
orb
mov
orl
clc
jp
out
je
inc
mov
hlt
negl
test
test
cmp
pusha
outsb
cltd
pop
inc
cmpsl
sbb
jg
mov
mov
aas
pop
popf
test
inc
sbb
push
sbb
sahf
pushf
push
adc
lcall
pop
scas
mov
adc
mov
xor
ljmp
rcr
gs
lock
sub
mov
xchg
ljmp
int
cmp
sub
lahf
mov
es
adc
rorl
push
sbb
push
loopne
jns
fdivrl
outsb
cs
jns
out
inc
push
fmull
lret
push
add
mov
jmp
cmp
add
pop
jbe
adc
jbe
and
or
or
jge
arpl
gs
hlt
es
arpl
pop
int
dec
frstor
vpand
lock
or
pop
sub
movsb
cmp
mov
out
mov
test
jecxz
loop
mov
negl
xchg
and
pop
adc
mov
push
xor
push
inc
xor
jne
cmp
mov
and
shll
and
int3
xor
pop
testb
je
lock
xchg
or
adc
push
or
hlt
sbb
push
xor
das
nop
loopne
mov
push
sahf
lret
jb
aam
mov
pusha
mov
or
mov
jl
roll
mov
subl
test
pop
mov
mov
int3
jne
mov
xor
xchg
lcall
dec
xchg
lcall
xor
mov
jno
dec
mov
daa
fisubl
or
mov
jnp
and
mov
scas
dec
pop
insl
mov
cs
dec
mov
arpl
repz
fistl
cld
jne
xchg
lahf
jle
add
shlb
jg
ss
or
shrb
push
jl
jge
std
xchg
push
add
lds
icebp
repz
mov
loope
dec
outsb
inc
jno
push
or
push
or
testl
aas
std
or
pop
pop
mov
pop
xchg
and
jge
js
outsb
push
testb
and
loope
cltd
ds
jmp
aas
cmp
mov
pop
inc
mov
push
push
inc
ja
add
xor
ret
add
cmp
ds
jmp
stos
pushf
aam
cmp
fsubrl
pop
xor
dec
lret
cmc
push
mov
push
fbstp
int3
pusha
bound
xchg
int
push
push
sub
dec
nop
cltd
push
movsb
dec
push
lock
sahf
ja
jmp
mov
in
sbb
jbe
mov
sbb
les
dec
mov
mov
pop
dec
je
mov
icebp
out
clc
js
es
inc
mov
jnp
cmp
pop
xchg
dec
xor
test
pop
sbbl
or
lods
xor
and
jmp
test
imul
mov
stos
cs
jb
pop
and
push
subl
adc
arpl
imul
imul
addl
imul
loope
push
fnstsw
pop
push
popf
push
push
add
jg
cwtl
cmp
movsb
imul
push
rcrl
and
dec
and
call
loop
jb
mov
es
das
adc
ljmp
rorl
pop
fs
pop
out
sbb
add
imulb
inc
pop
add
pop
lahf
js
push
push
loopne
pop
fldcw
jg
andb
shl
orb
imulb
cmpsb
lods
adc
xchg
push
jae
sarb
rcr
xor
xor
roll
js
push
sbb
cltd
mov
loopne
ljmp
in
js
push
push
jg
mov
loopne
pop
mov
pop
mov
icebp
jmp
rolb
pop
pushf
mov
push
ljmp
add
mov
jg
add
pop
fbstp
cmpsl
push
adc
dec
jmp
mov
icebp
stos
add
mov
test
pop
mov
je
add
daa
push
insl
pop
push
out
cld
sbb
ds
loop
sub
bound
js
ja
jp
push
sti
xchg
and
sub
add
cmp
scas
cmp
dec
pop
stc
jp
mov
mov
cmp
jg
fildl
sbb
and
flds
ret
mov
jl
jg
mov
inc
test
in
push
outsb
jmp
mov
scas
cmp
xor
xor
stos
and
adc
js
sbbl
add
mov
gs
adc
jmp
add
adc
cltd
ret
jmp
adc
jmp
pop
push
pause
nop
iret
loop
push
xchg
xchg
mov
push
inc
enter
mov
out
inc
and
outsl
mov
sub
and
call
add
bound
add
push
hlt
jmp
xchg
xor
shll
imul
pop
enter
sub
adc
stc
or
pop
sub
ljmp
or
adc
push
je
mov
xchg
pop
mov
out
pop
fists
dec
pusha
add
bound
cli
daa
outsb
movsb
repnz
data16
dec
stc
das
ret
cmp
jmp
stos
cmp
inc
scas
jo
fs
xchg
cltd
subb
sub
add
int
enter
mov
in
mov
pop
std
push
push
sub
adc
jo
add
and
iret
int
lock
fwait
iret
ret
cmpsb
movl
out
mov
repnz
mov
cmp
fsubl
mov
inc
fbstp
push
fisubrs
mov
out
and
enter
sbb
xchg
xchg
pop
jno
or
rorl
dec
nop
adc
pop
cwtl
test
sbb
inc
fsubrs
mov
lods
adc
mov
sbb
jbe
outsb
outsl
mov
or
cmp
mov
jbe
or
mov
popf
in
jp
fidivs
loop
or
mov
or
out
aaa
les
aas
dec
scas
mov
incl
ja
or
mov
xor
lret
pusha
loope
test
cli
aas
sub
mov
js
lock
lock
scas
pop
ds
ja
incl
sti
inc
das
jbe
ret
mov
popf
sbb
mov
pusha
in
jecxz
cwtl
pop
imul
mov
cmc
testb
adc
rclb
jg
cmpsb
faddl
push
addb
jnp
loop
ss
inc
mov
add
pop
pop
lret
sub
xor
pop
mov
jo
inc
jns
imul
inc
dec
into
in
shlb
addr16
lret
les
xor
fdivr
ljmp
mov
jo
mov
jl
sahf
sbb
cmp
xchg
xor
mov
call
test
push
lahf
lcall
and
call
cs
sbb
add
imul
loopne
add
and
mov
dec
jmp
fldl
dec
dec
adc
dec
clc
inc
shl
inc
pop
xchg
lods
dec
push
inc
loope
les
lcall
add
lock
sti
aaa
or
dec
cmpb
rol
aas
jecxz
pop
adcl
dec
pop
lock
sbb
sbbl
xor
add
fdivp
cmp
stos
sahf
pop
jl
and
cld
lea
dec
mov
xchg
fdivrp
das
mov
mov
scas
clc
mov
push
pop
jmp
aaa
push
shlb
push
imul
jge
data16
ljmp
add
push
sbb
adcb
xor
and
mov
cli
mov
test
pushf
xchg
or
je
xchg
aam
mov
in
add
or
or
fwait
in
lods
inc
pop
aas
sbb
push
and
test
mov
cld
lea
add
fwait
lret
lock
in
cmp
pop
push
and
ret
jp
daa
push
nop
mov
test
add
inc
jnp
xorl
or
outsl
ror
or
lcall
pushf
popf
push
popf
lods
cwtl
cli
scas
inc
mov
and
shll
jmp
pushf
adc
push
cmp
clc
aam
scas
jmp
and
cmpsl
jmp
jo
rorb
push
mov
movsl
mov
mov
mov
ret
mov
fnsave
ret
call
pop
decl
sbb
jo
jae
inc
icebp
and
gs
incb
fsubr
xor
lock
fiaddl
or
pop
pop
sub
icebp
push
aas
sub
sahf
testb
scas
mov
cmp
pop
add
push
lcall
add
mov
cmp
sbb
pop
add
mov
test
sar
cmp
or
push
sbb
inc
decb
test
jb
jmp
add
add
das
add
cmpsl
popa
pop
lds
call
shlb
jp
fwait
out
or
jmp
ret
iret
dec
in
lods
or
std
jmp
and
sbb
mov
jmp
dec
push
insl
movb
movsb
mov
adc
adc
insb
int
and
cmpsb
pop
cmp
or
lock
insb
xlat
sarl
xor
inc
lret
cmpl
decl
cmpsl
into
nop
subl
sub
hlt
incl
pop
mov
scas
daa
jae
test
cli
or
and
shl
and
loopne
loop
hlt
and
add
push
sbb
cmpsb
outsl
rolb
popf
xchg
push
fwait
loopne
decl
push
dec
mov
div
jno
mov
push
add
mov
imul
mov
fldl
jb
testl
jg
ffree
cwtl
xchg
addr16
jecxz
cmp
movsb
push
add
sub
push
add
and
xchg
push
enter
pusha
add
jg
pop
jp
and
in
jg
mov
or
out
cld
call
leave
in
aaa
rcr
scas
sub
xchg
loop
or
mov
cli
fdivrl
fcomip
cmc
xchg
mov
cwtl
mov
negl
in
subl
sbb
int3
sub
pop
push
pop
decl
int
pop
add
pusha
call
and
lds
push
xor
insb
bound
lret
lret
dec
test
xor
mov
adc
mov
push
bnd
push
cld
ficomps
add
cmpsb
push
cld
pushl
lods
inc
popl
and
lret
pushl
int3
pop
inc
push
sub
jmp
add
or
aaa
cld
jl
inc
push
out
xchg
lea
cmp
fmull
add
jecxz
or
ret
push
mov
push
dec
test
xchg
push
cmp
sbb
loop
pop
jecxz
repnz
fstl
push
sub
jb
ljmp
jle
mov
add
mov
inc
xchg
shlb
adcl
adc
popa
bound
incl
push
sub
test
push
roll
pop
xor
leave
rolb
mov
ss
or
and
pop
dec
faddl
iret
xchg
pop
mov
popf
pop
xor
jg
pop
mov
stos
popf
shll
push
call
scas
dec
mov
call
jg
ja
loop
out
popa
mov
inc
icebp
inc
sub
mov
and
fwait
cmpsl
sub
add
mov
jmp
adc
pop
push
mov
add
out
dec
je
add
rclb
push
incb
pop
inc
push
xchg
mov
push
cmp
lods
push
dec
push
adc
mov
call
jmp
fcoms
inc
cmpl
inc
shlb
xchg
cmpsb
hlt
xchg
hlt
popf
movsb
rcrb
mov
pop
xchg
cli
lret
loopne
jmp
adc
push
rorb
inc
jl
fmull
pop
push
add
push
shll
aaa
pushf
mov
pushf
test
insl
jle,pt
xlat
testl
mov
mov
push
mov
fidivrl
inc
mov
sub
mov
sbb
inc
stos
aam
pop
sahf
add
and
test
push
dec
jmp
jmp
orb
aam
push
jae
mov
aas
jecxz
jle
cmc
cmpb
or
lods
pop
jg
xor
sub
sbb
sbb
cwtl
push
push
mov
pop
inc
pop
ss
xchg
in
imul
imul
push
mov
mov
aam
js
or
mov
loope
sub
sub
mov
in
fs
jae
adc
add
ds
cwtl
mov
filds
adc
fsub
shlb
xor
scas
cli
or
sarb
fwait
xchg
in
pushf
inc
sub
rcrl
mov
pop
incl
jo
mov
imul
adc
sbb
cmc
mov
mov
dec
call
mov
scas
push
push
add
out
enter
cli
push
and
rcl
rolb
pop
mov
xchg
push
adcb
push
pop
cli
pop
cli
push
ds
jae
push
inc
and
nop
cmp
mov
cmpsl
test
mov
jmp
mov
sbb
repnz
xchg
mov
out
xchg
push
imul
imul
mov
adc
ret
pop
outsb
xor
xchg
dec
imul
xchg
cli
dec
js
das
lods
jo
jnp
fsubl
je
stos
lods
neg
mov
or
test
mov
lret
outsb
fnstcw
mov
inc
mov
fwait
ljmpw
test
pop
cmpsb
and
add
mov
and
loop
mov
xor
and
shlb
clc
xchg
push
pop
out
lock
cmpl
fisttps
ds
push
test
dec
mov
xchg
jbe
aaa
lods
fidivrl
rcrb
add
inc
or
cmp
cli
enter
int
imul
sub
ret
pushl
mov
xchg
dec
fstpt
lea
lock
xchg
hlt
sub
test
inc
fbld
dec
lret
jae
jp
dec
add
aas
mov
out
jg
fwait
jb
add
inc
lcall
das
mov
in
popa
mov
imull
outsb
clc
decl
add
xchg
cmp
fxam
pop
ret
jnp
sar
add
xorb
jne
test
dec
popf
popa
nop
adc
inc
aas
mov
dec
push
cli
sti
dec
inc
adc
sbb
rcrl
les
movsb
cmp
outsl
sti
add
out
out
jmp
cmp
dec
add
outsl
xchg
fisttpll
pop
adc
fimuls
lds
sbb
push
std
hlt
push
ret
iret
stos
push
mov
ljmp
lods
or
pop
mov
les
in
call
xchg
xchg
mov
mov
dec
arpl
pop
ss
es
mov
int
sar
shlb
or
add
ret
or
rep
rcrb
daa
ret
xchg
sbb
das
scas
clc
fstpt
jno
pop
mov
push
xor
or
fbld
into
inc
pop
sbb
mov
and
mov
mov
push
call
mov
ret
push
cli
test
or
add
xor
push
sub
sub
mov
leave
addl
stos
jmp
movsb
xchg
sub
iret
adc
xchg
fimull
lds
push
mov
mov
xchg
sub
in
or
sub
push
bound
or
out
xorb
outsb
movsl
cmpb
jl
shll
xlat
outsb
push
jne
sbb
ret
std
add
mov
cvtps2pi
xchg
or
lcall
mov
push
jge
jo
rol
jl
scas
pop
insl
test
sbb
jg
and
icebp
dec
sti
pushl
mov
loopne
add
mov
pop
jmp
out
push
loop
lea
pop
fdivrs
pop
popf
push
in
push
sbb
shrb
jne
loopne
push
pusha
cli
fs
jo
outsl
mov
mov
popa
inc
push
pusha
xchg
mov
in
cmp
inc
pop
or
mov
aam
in
inc
mov
es
test
fsubrl
xor
sub
fmulp
jle
xlat
xor
xor
mov
call
push
or
cs
xlat
shll
add
pop
or
aad
cwtl
pop
or
js
cmp
stc
add
jmp
shll
inc
es
inc
fildl
mov
mov
xchg
popf
sbb
pop
adc
out
push
xchg
mov
cmc
ljmp
push
aas
aas
fnstsw
sbb
out
add
add
adc
and
std
ljmp
push
std
addr16
cltd
lds
inc
mov
daa
fistl
inc
jl
testl
xchg
pusha
rorb
cmp
roll
add
mov
add
and
add
loope
cld
pop
mov
push
pushl
mov
sbb
add
push
std
or
mov
aam
jno
icebp
fld
pusha
mov
push
movsb
mov
or
sub
dec
inc
add
aam
enter
mov
lcall
push
dec
cs
sarl
test
sbb
jnp
add
dec
call
cmpsb
ljmp
rolb
inc
pop
hlt
adc
insl
out
aad
and
and
nop
out
cld
inc
push
fbld
outsb
aam
loop
roll
xor
and
mov
xchg
aam
clc
sbb
outsb
ret
je
mov
push
and
mov
push
subl
dec
mov
bound
adc
and
out
ret
xor
jecxz
and
push
cld
out
outsb
xchg
mov
jbe
push
cmp
jecxz
das
rolb
ret
or
add
js
add
mov
cmpsb
inc
test
push
cmc
aas
in
dec
aaa
xchg
cmc
mov
xor
fiadds
test
adc
aam
imul
or
cmp
mov
aaa
insl
push
xchg
jbe
add
add
iret
das
mov
sbb
add
jae
adc
clc
or
insb
jle
fimuls
das
cmp
lds
sti
jo
idivb
sbb
stos
in
out
shlb
es
sar
xchg
push
adc
jbe
loope
xchg
out
pop
push
nop
mov
leave
in
add
cmp
pop
bound
push
je
xchg
adc
scas
repz
inc
sar
or
lods
cmp
cli
sahf
inc
adc
inc
jp
loopne
test
call
outsl
scas
push
cmp
fcoml
xchg
ljmp
dec
pop
fwait
sbb
insl
add
add
push
clc
out
sbb
lods
imulb
fldenv
adc
scas
mov
loopne
icebp
loope
cld
imulb
inc
pop
xor
ja
clc
call
sbb
or
xchg
mov
lcall
ffreep
movl
addb
lds
lods
and
outsb
lahf
mov
lods
inc
xchg
shl
add
bound
mov
inc
imul
and
push
add
push
dec
or
push
call
je
lea
fucomip
inc
hlt
mov
outsl
je
ret
pop
or
rorb
adc
shll
incl
xchg
sbb
inc
xlat
or
and
mov
shrb
scas
test
jg
shr
xchg
add
pop
sbb
shrb
insb
popf
ds
mov
int
movsb
stos
add
aas
jne
lret
dec
call
lcall
push
mov
pop
or
inc
lock
fcoml
push
lds
xchg
test
aaa
std
pop
cld
add
test
mov
cmp
xor
enter
sbb
daa
pop
sub
mov
repz
sti
push
xor
pushf
mov
movsb
in
hlt
aas
shrb
adc
movsl
add
mov
and
or
enter
mov
faddl
add
fs
pop
jl
push
clc
mov
outsl
out
cli
adc
add
fimull
add
adcb
pop
pushl
mov
cwtl
dec
dec
adc
cmp
jno
outsl
shr
dec
outsl
mov
sub
mov
or
clc
or
inc
out
mov
mov
push
mov
xchg
in
ffreep
cs
sbb
lods
and
int3
mov
in
sub
mov
scas
je
sub
out
dec
add
adcl
inc
roll
inc
push
lods
popf
push
add
cmc
ja
std
das
push
jle
inc
adc
sbb
push
ret
push
pusha
mov
testl
xchg
adc
push
into
dec
aaa
or
cmpsb
shrb
jle
lods
fmull
test
clc
dec
repz
adc
outsb
push
adc
call
sub
and
xchg
insl
mov
add
mov
sahf
loopne
fcmovb
mov
jnp
addl
or
mov
nop
sub
xlat
add
sbb
pop
mov
pop
adc
sbb
test
mov
out
xchg
cmpl
je
roll
xchg
push
data16
test
cmp
lods
push
test
adc
call
add
sub
das
sar
or
mov
inc
in
mov
pop
mov
sbb
dec
cmp
cmp
es
sar
out
ret
dec
ja
sbb
or
jb
ljmp
and
xchg
mov
xchg
push
jmp
pop
jl
shl
imul
rcrl
sarl
pop
mov
shrb
fmuls
pop
clc
pop
pop
jp
fs
adc
clc
lcall
sbb
pop
js
pop
sbb
add
call
popf
lcall
mov
mov
cmp
sbb
out
orb
jmp
push
lcall
fidivs
pop
out
cmp
push
adc
cmpsb
negl
and
test
cwtl
mov
loopne
push
std
and
mov
mov
adc
int3
aas
pushf
push
lcall
inc
dec
add
in
xchg
roll
xchg
xchg
push
out
arpl
push
cvtps2pd
movsb
in
mov
xor
xor
cmp
pop
xchg
movb
mov
xchg
sub
rolb
out
push
nop
movsb
sahf
les
test
rolb
nop
push
outsl
jge
adc
fstps
pusha
xchg
insb
mov
push
mov
test
add
push
fbstp
mov
adc
xor
jg
mov
jl
pop
icebp
and
dec
int
xlat
add
loope
mov
mov
pushfw
cmc
sub
mov
xor
pop
pushl
push
aad
xchg
js
add
scas
mov
jg
fst
cmp
sbb
stc
pop
xor
stos
fs
icebp
add
cli
jmp
loop
lret
jle
sbb
mov
inc
inc
or
rolb
in
or
mov
fwait
sbb
sarb
mov
or
orl
jb
or
std
cmpsb
data16
mov
pop
push
fdivr
cmc
xchg
xor
stc
push
xlat
xor
xchg
add
inc
decl
push
sub
nop
pop
xor
rcl
sbb
fs
or
mov
inc
cwtl
pop
nop
fistps
lahf
cmpsb
mov
xchg
sbb
clc
pusha
xor
cld
dec
pusha
dec
mov
out
es
xor
std
ja
lock
lret
inc
rcll
xchg
cmpsl
out
pop
push
fwait
inc
out
add
mov
mov
test
sbb
mov
insl
pusha
cli
xor
cmp
or
mov
inc
fsubrl
or
push
mov
stos
xchg
push
or
ds
mov
jns
incl
sbb
inc
fcoms
testb
pusha
ret
mov
sub
mov
xchg
or
add
pop
add
mov
jae
loopne
inc
adc
popf
cmpl
dec
and
lods
test
mov
sub
mov
mov
mov
xor
fadds
adc
mov
lahf
adc
lret
push
dec
ljmp
cli
ret
push
xchg
dec
dec
test
dec
je
scas
filds
xor
adc
fwait
sbb
inc
cmp
ja
push
cs
pop
scas
mov
sbb
ret
add
insl
inc
xchg
jle
lock
test
lret
lods
lods
testl
pusha
adc
mov
cmp
les
in
nop
jl
je
adcb
mov
or
dec
mov
mov
inc
into
sub
pop
pop
scas
sub
push
loopne
pop
movsb
das
in
xchg
xor
nop
shlb
lods
sub
imul
test
fs
loope
inc
loope
cmpsb
mov
lock
test
xor
inc
dec
push
fisubs
xor
mov
mov
ljmp
call
jne
out
push
outsl
push
pusha
xchg
adc
cmp
mov
fs
shrl
popa
loopne
ljmp
or
loop
sbbb
lret
cmc
push
fldt
mov
jmp
or
inc
das
push
xor
mov
stos
ljmp
in
fisttps
mov
adc
mov
mov
pop
or
adc
sahf
in
or
push
ds
bound
jl
or
xchg
popf
add
inc
mov
nop
cmpsb
popf
idivl
pop
pushl
jl
or
sahf
mov
fadds
clc
xor
push
js
popa
leave
cli
dec
push
lock
xchg
bound
call
test
fwait
clc
fiaddl
daa
outsb
xchg
movsb
add
stos
pusha
cld
decl
cld
int3
inc
lods
rolb
pop
push
lea
scas
inc
and
bound
into
xchg
and
add
xchg
test
test
subb
aad
in
nop
int3
jo
into
fs
pop
sti
call
adc
dec
inc
cli
push
stos
sbb
call
flds
repz
xchg
lds
xor
push
inc
and
cwtl
icebp
and
call
fdivr
inc
mov
sbb
inc
lods
repnz
sub
movsb
out
push
mov
add
sub
sub
add
or
push
call
push
in
clc
pushl
out
scas
or
mov
cmpsl
out
jb
enter
xchg
cli
movsl
je
pop
gs
loopne
adc
or
push
pop
lock
xchg
push
add
nop
sub
out
inc
jle
inc
fisubrs
scas
data16
and
xor
mov
movsl
arpl
mov
xor
push
adc
pushl
inc
xor
push
dec
pop
rcl
or
ljmp
push
and
loopne
cwtl
sbb
jg
dec
mov
jmp
lds
inc
js
movsl
add
fisubs
in
subb
push
adc
add
cmc
outsl
lock
jge
and
or
and
movl
pop
out
jle
dec
push
lock
xor
pusha
fimuls
clc
inc
adc
int
push
sub
mov
lock
ljmp
dec
ja
mov
jo
ds
jmp
adcb
outsl
cli
mov
jno
lds
or
inc
jmp
mov
test
xor
xlat
popf
mov
and
fcmove
ljmp
dec
dec
loopne
xlat
sbb
out
push
inc
xchg
mov
inc
inc
roll
pop
push
add
and
add
cmpsb
xor
inc
mov
aam
ss
mov
das
clc
fwait
lret
and
sbb
into
lahf
or
das
add
add
in
or
sbb
fistpl
call
inc
or
test
cmp
jle
adc
push
ljmp
add
rcl
mov
pop
pusha
jg
sbb
test
ljmp
ror
scas
pop
enter
ret
mov
sbb
movsb
aaa
shr
lret
shr
lcall
pop
addb
inc
cmpl
fwait
mov
cli
pop
adc
sbb
call
adc
fsubr
loopne
call
adc
xor
add
adc
loopne
and
dec
popf
les
sar
sbb
fcomip
call
jbe
xor
dec
outsl
test
and
sub
adc
pop
cld
pop
sbb
pop
xor
dec
imul
push
lcall
pop
call
movsb
jg
stos
es
nop
subb
pop
pop
dec
lcall
mov
out
pop
cltd
mov
pop
ljmp
xor
push
mov
mov
leave
adc
inc
pop
and
ds
outsb
push
cld
push
repz
mov
xchg
cmp
aam
jo
pop
frstor
sub
jle
jp
outsl
lock
mov
dec
sbb
sbbb
jle
popa
mov
add
mov
xchg
mov
add
pop
add
incl
loopne
lock
mov
cltd
jl
inc
js
jmp
push
mov
lahf
incl
rol
or
xor
shll
ret
and
cmpsl
sbb
pop
push
sbb
jae
sub
xor
or
jmp
jae
and
cmp
add
clc
sub
mov
loope
inc
mov
lcall
add
clc
fldl
dec
add
enter
es
out
pop
inc
or
fdivrl
push
arpl
cs
lock
pop
sbb
add
pop
push
jmp
aas
leave
int3
pushf
mov
mov
aad
std
add
add
mov
dec
test
xchg
popa
cmp
fists
cmp
bound
outsl
xor
push
repnz
add
mov
xchg
adc
and
mov
cmpsl
mov
xor
jg
sbb
and
sti
outsb
shrb
sbb
neg
push
adc
sbb
movsb
add
dec
push
imul
popa
cmp
cmc
push
push
data16
pushf
mov
popa
decl
xor
sub
mov
pusha
adc
push
test
inc
shlb
into
loopne
loopne
xor
shlb
and
shl
lock
std
pop
hlt
aas
mov
jo
es
test
push
xchg
ljmp
mov
mov
pop
add
xor
lret
shl
ficoml
dec
inc
mov
mov
xor
pop
lret
hlt
popa
aad
jb
shrl
inc
xchg
or
xor
push
dec
push
lock
lea
and
jo
out
and
push
aam
cltd
and
loop
sti
inc
cmp
push
mov
je
add
mov
cmp
pop
loopne
hlt
xor
xchg
and
je
add
push
inc
fnsave
jge
outsb
sub
ljmp
jbe
inc
fidivl
mov
ret
pop
xor
cli
rep
ret
aaa
cmp
addb
repnz
pop
add
mov
or
popf
jl
lods
ja
adc
push
or
inc
and
ja
mov
adc
mov
pushl
and
adc
mov
andb
add
dec
test
in
aas
jle
test
insl
jge
inc
insb
xor
mov
push
sub
sub
jl
and
insb
fscale
xchg
hlt
loope
xchg
in
xchg
mov
pusha
rclb
xor
nop
int3
mov
ror
mov
xor
xlat
dec
mov
inc
out
ret
mov
ret
xchg
test
cmp
insl
ljmp
inc
xchg
int
xchg
add
shrb
push
pushl
lea
jno
inc
ljmp
sbb
add
in
test
xchg
mov
add
adc
fdivp
add
add
leave
shlb
out
out
sub
lcall
mov
clc
or
mov
imul
cwtl
popf
stos
mov
inc
jecxz
mov
ljmp
cli
xchg
popl
repz
and
test
lock
cs
mov
int3
out
mov
adc
out
test
shlb
xchg
dec
xor
mov
cmpsb
adc
or
dec
jl
xor
jns
icebp
and
add
lods
rclb
mov
add
inc
mov
or
add
add
dec
aam
and
int
scas
mov
and
test
mov
add
mov
sub
push
cmp
add
aam
sub
xchg
and
cld
and
add
add
or
out
xchg
mov
les
xchg
pushf
int
adc
sahf
mov
lret
leave
pop
push
cld
loop
ljmp
and
and
pop
imul
xor
mov
in
dec
jns
xchg
add
push
aam
lret
scas
rcrl
fbld
out
fcomp
movsl
dec
nop
insb
cwtl
jnp
cli
mov
push
adc
cltd
ja
das
call
jmp
xchg
out
xor
jecxz
idivl
add
mov
pop
sub
add
in
dec
mov
mov
bound
lock
add
jecxz
inc
into
cmpsl
rol
daa
or
xchg
sub
in
cmp
add
test
int3
call
addr16
jo
shrl
adc
rolb
xor
nop
stos
jne
mov
ljmp
addb
add
test
or
inc
lcall
inc
js
insb
stos
push
lret
mov
add
enter
jg
out
fsubrs
sbb
enter
mov
and
mov
cmp
jb
gs
xor
cs
leave
mov
loope
cli
fdivr
outsb
popf
jg
movsl
into
call
pop
ret
in
jno
mov
aam
lcall
cmc
sbb
jnp
hlt
push
fcompl
jmp
or
in
mov
pop
push
xchg
clc
call
movsb
or
or
mov
sub
xor
xchg
mov
clc
and
fmul
mov
aas
iret
inc
mov
add
idivb
xchg
mov
in
xor
mov
popf
repnz
push
cli
rcll
pop
inc
push
nop
loopne
roll
rorl
xlat
les
test
adc
imul
test
int
sub
push
leave
insl
mov
lods
dec
rclb
add
mov
loope
pop
lds
mov
aad
xorl
xor
sub
inc
jo
sbb
mov
inc
mov
jecxz
nop
jle
imul
or
and
cmpsl
mov
shlb
fistpll
sub
or
push
mov
and
jge
xchg
jl
pop
ret
js
unpckhps
psubusb
pop
cmp
add
pop
stc
xorl
mov
test
pop
lock
rcrb
pop
rcrl
fwait
jle
clc
inc
in
rcrb
mov
mov
ds
dec
std
and
cmp
push
negl
xor
mov
hlt
adc
xor
pop
stc
xchg
inc
imul
xchg
push
nop
and
add
jl
pop
movsb
sbb
in
and
cmc
jne
call
inc
sub
fadds
call
and
lods
and
vrndscalepd
aas
xchg
fldl
test
sbb
lods
lea
adc
ja
sarb
or
cwtl
mov
jo
and
les
xor
mov
jle
rorl
add
sbb
sbb
scas
push
mov
mov
imul
gs
repz
hlt
cmp
es
pop
add
cld
add
push
loopne
movsb
pop
inc
pop
shll
shl
pop
cmpsl
leave
sbb
pop
je
adc
orb
div
repz
adc
js
xor
daa
hlt
mov
adc
dec
dec
cmp
sbb
jecxz
jbe
ljmp
lock
xchg
fs
cmp
push
mov
shrl
loope
bswap
fwait
mov
add
mov
cmp
pop
loop
test
orl
mov
jmp
cmpsl
sub
sbb
cld
mov
shrb
into
fidivs
cmp
push
inc
sti
push
pop
in
xchg
cmp
sub
rolb
pop
mov
jnp
and
ja
imul
out
popf
push
les
bound
xor
inc
xor
push
and
sbb
inc
or
into
dec
ja
jle
xchg
mov
js
sarl
or
jne
outsb
out
adc
dec
cmp
gs
jb
adc
pop
in
sbb
or
inc
xor
mov
cli
test
out
mov
pop
and
push
scas
sarb
divb
outsb
sub
push
mov
imul
incb
insl
sbbb
mov
loop
movsb
mov
call
inc
clc
add
lods
out
mov
cmpb
shrb
or
mov
pushf
push
xchg
lds
pop
dec
outsl
shrl
lahf
pop
xchg
imul
cmc
sbb
mov
fdivs
bound
adc
cmp
fdivs
cmc
sbb
cltd
push
xor
in
add
mov
push
cmp
icebp
adc
cmpsl
mov
mov
dec
loop
jnp
jle
pop
xor
dec
pop
cmc
push
or
jl
or
imul
jecxz
xchg
sub
ficompl
mov
push
mov
jmp
fs
sbb
push
push
sbb
in
and
jmp
jl
jo
sbb
push
mov
std
sbb
or
out
mov
lods
dec
push
push
mov
inc
sbb
pushf
push
nop
fwait
aaa
adc
mov
lds
fcoms
loop
sbb
add
add
xor
cmpsb
shr
inc
sbb
cmp
cs
leave
or
gs
mov
addr16
adc
outsl
popa
lods
cs
mov
xchg
push
inc
cli
shll
fldl
jmp
test
cmp
xlat
outsl
mov
jae
xchg
fwait
pop
mov
icebp
push
jae
cli
push
fcmovnbe
inc
cwtl
push
ljmp
pop
pop
dec
inc
mov
fbstp
into
fisubl
cld
es
shrb
addb
insb
sub
clc
or
es
inc
fmuls
mov
rorl
aad
sbb
lods
pop
xchg
aam
fdivrp
push
jne
add
mov
mov
xlat
int
pushf
pop
aam
leave
insb
je
mov
xor
cmp
jle
pop
fisubs
xchg
clc
mov
scas
sbb
rcrb
test
sahf
ret
and
push
mov
cmpb
and
aaa
imul
xchg
in
jnp
sub
aad
mov
mov
aaa
mov
je
inc
pop
fcompl
xchg
cli
rcrb
jo
loopne
pop
cmpl
das
push
and
mov
sbb
iret
aaa
nop
pusha
shll
adc
pop
popl
shl
cwtl
mov
icebp
lds
adc
adc
dec
fiadds
shr
add
or
stc
xchg
inc
call
and
sbb
out
js
cwtl
add
movsb
paddusb
fildll
in
out
adc
in
inc
jl
lods
mov
fsubs
pop
fadd
imul
repnz
or
in
sbb
dec
ja
inc
movsb
pop
lahf
sbb
sarl
sub
sahf
sub
inc
outsb
fwait
outsl
sbb
fmul
mov
inc
sub
pop
call
pusha
or
dec
repnz
daa
add
fidivrs
lret
sbb
scas
mov
jno
icebp
add
inc
loop
push
dec
jno
jle
aam
mov
cmc
push
push
ficoms
lds
cwtl
sub
cmp
sub
jle
loop
push
scas
sub
add
push
mov
scas
in
pop
outsl
dec
mov
adc
pop
shl
cmpsb
mov
add
pop
dec
xorb
xor
scas
sub
xchg
aam
emms
jmp
dec
lods
lds
sbb
repnz
ljmp
in
jno
mov
outsb
xor
mov
push
ss
jno
icebp
popa
adc
xchg
inc
adc
loop
or
cmp
mov
ficoml
or
pop
mov
orb
inc
push
arpl
push
icebp
rolb
movsb
push
jp
cli
js
test
add
push
push
inc
fwait
incl
in
inc
add
lcall
int3
cmpsb
mov
fs
aaa
inc
adc
xchg
rorb
jge
movsl
call
or
cmp
mov
sbb
mov
cmp
pushl
mov
xchg
mov
pop
ss
rorb
sarl
cmpsb
jge
mov
inc
add
xchg
adcb
mov
xchg
icebp
mov
outsl
mov
mov
pop
or
lret
andb
test
sub
data16
push
cli
jb
ud2
rorb
push
mov
mov
adc
jno
loopne
inc
or
push
jle
lods
arpl
add
adc
xor
mov
sub
mov
lock
shrb
dec
lahf
fidivrl
scas
adc
ret
loopne
mov
stc
out
rol
adc
pusha
pop
std
cmp
mov
push
push
ja
hlt
or
mov
je
mov
andl
testb
adc
cli
addr16
test
mov
rcl
or
jge
jge
and
out
xchg
inc
pop
xchg
outsb
jge
pop
or
pop
lea
push
add
loopne
sub
mov
jae
add
mov
daa
cmpsb
push
and
mov
sbb
sbb
push
jle
aaa
xchg
sbb
fs
pop
lret
movsb
xchg
adc
push
icebp
idivb
test
push
pop
sbb
mov
push
push
jg
push
push
pop
xchg
push
mov
xor
and
push
push
lahf
mov
xchg
clc
scas
loop
cmpsl
mov
add
les
inc
pop
mov
clc
add
push
sbb
aad
sarb
bound
imul
mov
popf
inc
movsl
pop
mov
sub
sarl
stos
push
and
xor
mov
push
int3
add
cmp
inc
pushf
nop
decb
add
roll
mov
pop
jnp
dec
call
sbbl
jg
xchg
inc
inc
dec
test
mov
insl
loopne
xor
inc
mov
mov
mov
movsb
pop
lock
push
lahf
ja
enter
adc
test
cmp
jmp
sub
add
or
cmp
cmp
sub
push
push
adc
or
nop
add
sub
mov
icebp
roll
cmp
adc
pop
insb
outsb
add
mov
adc
flds
test
adc
add
sub
mov
das
ljmp
stc
and
imul
xor
sti
push
loope
adc
add
loopne
mov
or
in
stos
and
add
jp
jecxz
stos
das
jmp
aaa
popl
movsl
fisttpll
adc
mov
inc
mov
xor
adc
dec
test
insl
add
adc
stos
cs
inc
fiaddl
imulb
clc
lret
icebp
cmpb
repnz
js
hlt
loope
pusha
dec
cmpsl
jne
subl
jg
repz
fists
into
xchg
cmp
inc
mov
data16
or
adc
push
add
je
lea
enter
sbb
jmp
push
jg
fsubrp
sbb
rclb
das
clc
clc
add
mov
xchg
jno
in
nop
lock
rorl
test
mov
xor
add
jle
jl
mov
xor
add
loopne
mov
lock
cmp
fsubl
jecxz
push
gs
inc
inc
fucomip
push
ret
add
sub
cmc
insl
cmp
arpl
mov
clc
add
pusha
outsb
lods
imul
sahf
jne,pt
insl
sbb
mul
fists
adc
rclb
pop
bound
xlat
adc
pop
rorb
lock
dec
push
cltd
mov
mov
xchg
and
fmull
icebp
dec
xchg
lods
mov
shl
pop
inc
movsb
xor
lods
shlb
or
jne
add
lods
shrl
sub
les
repz
jge
pop
loope
cwtl
es
subb
dec
ljmp
xchg
xor
mov
add
sbb
add
mov
outsb
movsl
aad
clc
ljmp
pop
push
push
movsb
jg
inc
scas
mov
xchg
jg
insl
adc
shlb
pop
mov
aas
sub
add
dec
lcall
inc
push
std
test
lret
fbstp
cmp
xchg
or
or
decb
insb
jmp
mov
sbb
lods
pop
pop
mov
xor
out
mov
pop
out
add
sahf
or
inc
jp
je
add
out
add
lock
pushf
int3
adc
call
insl
pushf
mov
js
mov
add
or
lcall
hlt
mov
or
or
jmp
xor
popa
dec
movsb
or
sahf
add
jns
sbb
jmp
jp
mov
dec
or
or
or
xchg
inc
inc
or
roll
cmpsb
xor
pop
mov
js
mov
mov
iret
cli
pop
add
cmp
add
xchg
clc
or
xorl
cli
add
mov
sbb
les
pop
cs
dec
push
push
das
or
mov
ljmp
pop
adc
std
sub
xchg
stos
pop
adcb
sub
add
inc
and
mov
ja
pop
shrl
push
and
mov
daa
xor
push
shlb
push
push
inc
inc
pop
add
daa
incb
and
js
push
mov
adc
clc
pop
imul
pop
adc
clc
cmp
pop
ror
adc
das
lock
inc
mov
lods
js
xchg
sbb
sbb
fmuls
xor
push
mov
mov
outsb
hlt
mov
std
enter
xor
inc
add
sbb
pop
and
decl
xor
pop
xchg
pop
and
xor
test
mov
adc
add
adc
mov
inc
adc
push
mov
movsl
ret
pop
or
push
and
push
inc
icebp
hlt
inc
push
cmpsb
push
and
push
push
xchg
adc
ja
adc
and
mov
add
in
mov
xchg
xor
scas
push
jl
mov
rorb
push
repnz
lds
jle
mov
xchg
push
sbb
cmp
insb
jp
sahf
mov
inc
adc
pop
sub
dec
jle
mov
in
inc
push
add
jno
stos
cld
pushf
inc
sbb
push
push
jne
inc
adc
push
sahf
sub
js
mov
push
lret
into
xor
scas
lcall
cli
inc
inc
jge
inc
and
mov
in
and
cmp
lds
xlat
jl
in
xor
jg
decb
cld
inc
mov
out
jo
sbb
sub
pop
inc
test
dec
or
ret
add
adc
enter
inc
and
dec
xor
ljmp
lock
jnp
mov
add
aam
mov
imul
cwtl
dec
movsb
inc
aaa
xchg
and
jp
add
test
sub
mov
inc
mov
inc
push
sub
add
loop
pushf
mov
jg
sarb
and
mov
jne
fisubs
cmpsb
push
in
mov
popf
jge
ret
into
pop
cs
and
lcall
js
stos
mov
and
int
and
loop
or
pusha
cli
or
sub
in
xchg
stos
xor
mov
das
pop
pop
and
enter
mov
subl
jl
sbb
movsl
push
mov
rcrb
xor
fisttps
fnstenv
dec
pop
loope
shl
gs
lods
pop
or
sbb
mov
jo
int
adc
fdivl
jmp
xchg
sub
xlat
rcll
mov
rclb
xchg
repnz
mov
jg
jmp
xchg
or
lcall
jl
clc
jmp
cli
out
adc
loopne
add
mov
mov
cmp
test
fs
inc
outsl
nop
inc
mov
xchg
push
enter
inc
push
pop
mov
pop
pusha
add
dec
cwtl
mov
cmp
in
cmp
pop
and
rclb
push
mov
pop
jp,pn
jle
mov
add
jo
ret
xchg
imul
push
mov
adc
xchg
es
xorb
rcll
sbb
outsl
aas
xchg
addb
xchg
cmp
imul
jnp
cmc
cs
pop
mov
repz
ret
add
loopne
pusha
mov
or
frstpm(287
add
mov
dec
jo
movsl
mov
cwtl
and
xchg
clc
fbstp
sbb
lock
loopne
mov
movhps
sahf
outsb
rolb
mov
mov
mov
das
movsb
mov
mov
xchg
mov
jg
ds
cld
and
in
add
dec
or
out
jmp
dec
das
aam
sbb
bound
sub
ss
in
decb
mov
or
dec
bound
std
testb
sbb
pusha
cmp
stos
and
jge
out
mov
test
adc
add
and
jb
cld
fnstsw
mov
xor
push
jp
movsb
dec
aaa
ljmp
push
and
adc
shlb
adc
icebp
orb
loopne
cmpsb
pop
cld
das
push
fs
sub
cld
stos
mov
popa
sub
in
sub
dec
les
cmp
jg
loope
fwait
adcb
data16
int3
addb
push
push
push
jb
adc
xor
mov
or
inc
cli
mov
jo
fs
loope
incb
adc
es
add
adc
lret
clc
inc
mov
fbstp
jg
ret
mov
inc
dec
lsl
out
push
push
int3
orb
lock
inc
fisubs
pop
inc
push
popa
stos
fldt
jp
testb
add
test
or
xchg
dec
jo
test
iretw
mov
lods
lret
or
jnp
mov
outsl
jbe
sub
or
adc
scas
roll
xchg
decb
sub
inc
cmc
dec
lret
pop
insl
cld
fdiv
sub
mov
rcrl
add
push
out
outsl
inc
inc
mov
jbe
psraw
aas
enter
lods
dec
mov
sub
push
int3
and
jb
pop
cld
or
js
fwait
orb
inc
jg
sub
rol
pop
lahf
dec
mov
mov
jnp
cmp
gs
cwtl
cmp
or
jl
inc
in
popf
adc
icebp
mov
mov
fdivrl
ds
mov
loop
faddl
jnp
mov
sbb
stos
fldl
add
or
sti
mov
xchg
xchg
mov
out
jo
mov
mov
test
adc
inc
in
pop
push
xchg
sbb
add
add
out
cmp
pop
insb
test
inc
push
lock
push
arpl
fildll
pop
sbb
xchg
jmp
fcom
inc
repnz
jae
outsl
mov
test
out
or
in
mov
mov
jnp
push
fcomi
mov
mov
push
jl
roll
jb
aam
push
mov
bound
cli
adc
xor
fcompl
fwait
stos
in
lock
test
mov
ja
jo
popa
add
jle
imul
subl
dec
jnp
xchg
cmp
push
sahf
loop
push
and
lea
ret
xchg
xchg
cmp
mov
jle
rcll
or
fsubl
adc
inc
mov
sbb
pop
or
jle
xor
out
stc
mov
adc
jmp
pop
lock
xor
test
das
clc
mov
mov
mov
or
mov
and
repnz
jg
cmp
xor
popa
jl
jle
scas
inc
mov
adc
and
pop
jg
jbe
mov
incb
mov
dec
stos
stos
jp
jecxz
mov
pop
xchg
loope
rolb
add
add
imul
and
sarb
enter
mov
dec
sub
jae
daa
flds
sahf
push
push
inc
or
pop
bound
pushf
mov
and
adc
insl
popf
add
popl
enter
fwait
inc
std
jge
addr16
pop
cmp
or
les
sub
add
and
lock
adc
stos
mov
dec
loopne
daa
fwait
push
fs
insb
negl
adc
out
xchg
imul
mov
mov
mov
or
enter
mov
in
cld
hlt
mov
ljmp
in
insl
adc
lea
push
clc
or
pop
xor
add
add
pusha
fs
addr16
loop
clc
adc
cld
dec
sbb
sbb
out
mov
cs
inc
push
mov
mov
inc
sbb
cwtl
xor
xchg
leave
icebp
aad
sbb
dec
std
fisttpl
sub
sbbl
inc
sti
push
and
mov
mov
push
adc
add
mov
add
sahf
xor
dec
add
pop
pop
shlb
dec
and
shrb
mov
js
mov
mov
jno
inc
ss
loope
or
shrb
mov
adc
std
jmp
sbb
push
or
xchg
mov
pop
xchg
or
mov
sahf
adc
push
ret
dec
dec
call
sbb
sar
outsl
fbld
jbe
jp
nop
call
gs
pop
inc
rcrl
out
mov
xchg
fwait
lods
sub
movsb
xchg
xchg
lock
pusha
jecxz
mov
mov
clc
es
ljmp
mov
dec
sbb
mov
ja
mov
push
nop
aas
test
xor
lods
inc
shlb
add
pop
mov
push
mov
sub
push
mov
jecxz
add
push
xorl
xor
or
jp
jle
pop
in
dec
push
push
shlb
or
push
or
in
cmp
and
add
clc
push
dec
and
mov
mov
jne
in
adc
sub
xor
mov
loopne
fildll
add
jbe
push
lds
sarl
pop
popa
sahf
mov
or
pushf
add
or
shrb
mov
shlb
fisttpl
in
pop
mov
xor
adc
js
xor
aas
jmp
push
and
out
cmp
xor
pop
popa
mov
push
cmp
pusha
adc
add
ret
inc
or
cmc
out
dec
cs
js
lret
cmp
xlat
in
add
lods
testb
mov
shlb
jp
repz
dec
adc
mov
add
push
sub
push
lret
ds
mov
mov
insb
mov
fistpll
and
subl
mov
in
push
ret
or
mov
sub
jmp
sub
movsb
or
and
sbb
xchg
xchg
adc
fstpl
pop
or
fs
and
lods
dec
xor
les
push
or
jo
fs
fmuls
push
pop
fldenv
xor
xor
push
mov
out
scas
orb
dec
fcompl
or
mov
push
mov
je
lock
sbb
mov
ds
aaa
xor
cld
jl
jmp
pop
jae
icebp
pushl
fisubl
xadd
iret
clc
add
in
add
xor
pushf
mov
loopne
sub
sub
cmpsb
lock
mov
or
rorb
sbb
ret
mov
xor
mov
mov
cmp
sbb
mov
pop
sub
js
xor
aad
jp
ljmp
inc
movsl
push
movsl
pushfw
cli
ret
add
cwtl
push
jge
loopne
aaa
shlb
xchg
xor
pop
push
dec
out
adc
shl
sbbb
rcrl
addb
gs
insl
push
filds
inc
loope
lods
adc
adc
xchg
pop
pusha
adc
xchg
push
add
and
repnz
adc
cmc
fucomip
gs
xor
pushf
nop
sub
mov
xorb
adc
test
popf
inc
nop
push
or
lea
add
ss
movsl
cmpl
push
test
pop
adc
mov
jl
mov
mov
jle
mov
xchg
or
cmp
mov
mov
xor
popf
push
adc
in
mov
or
dec
sbb
and
call
lcall
adc
mov
rcr
inc
call
ret
pop
nop
or
push
fidivrs
movsl
push
xor
push
push
push
sub
mov
mov
stos
pop
inc
jb
inc
outsl
mov
push
adc
pop
sbb
dec
and
int3
les
clc
rcl
add
sub
mov
test
clc
pop
dec
jl
loopne
sub
int
and
scas
and
mov
mov
lock
data16
outsl
nop
lahf
cmpsb
mov
mov
sub
xchg
test
push
jp
mov
push
daa
jp
sahf
adcb
cmp
add
add
dec
jns
add
ljmp
or
push
xor
loop
jg
sarb
mov
shrl
push
scas
and
xchg
les
sub
inc
outsl
xchg
hlt
shl
xchg
ficompl
lods
fisubl
insl
pop
cld
sbb
mov
pusha
xchg
outsb
rcrb
adc
sub
out
sarb
fldl
mov
lods
pop
stos
or
push
adc
in
ds
movsl
lea
out
pop
mov
adc
mov
sbb
test
push
shl
xorb
orb
or
dec
movsl
cmp
jno
dec
ret
adc
popf
addl
mov
imul
les
add
data16
push
ret
xchg
xchg
test
mov
and
insb
cmp
mov
lods
mov
jg
ds
lret
jecxz
jecxz
add
push
or
int3
in
xor
sbb
cmpsl
call
jnp
mov
jge
mov
sub
pop
jg
dec
pop
sahf
movsl
pop
shl
jbe
add
aam
mov
test
mov
jo
in
rcrl
pop
pushf
jg
std
loope
push
test
jae
mov
pop
cltd
pop
sub
inc
stos
cmp
dec
fildl
add
test
mov
imulb
jbe
push
mov
push
xor
fistpll
pop
and
mov
mov
mov
and
icebp
lcall
sbb
push
loope
stos
push
lods
inc
clc
iret
stc
lock
and
sbb
dec
pop
push
push
pop
insb
loopne
add
das
pop
incb
mov
push
test
inc
mov
jbe
ds
stos
jne
loop
sahf
aaa
hlt
mov
pop
test
lods
cmp
push
fbstp
dec
sub
js
mov
push
inc
xchg
popa
pop
data16
sub
out
adc
cltd
enter
or
xchg
jae
dec
ret
jl
int
or
add
dec
or
fbstp
fistps
mov
mov
dec
push
loope
or
pop
popa
jle
pop
shld
dec
std
add
movsl
rclb
mov
pop
sbb
and
and
and
out
outsb
out
mov
insb
insb
push
lods
rcrl
rorb
and
loopne
mov
ror
push
insl
jno
lret
insb
aam
test
sub
addl
movsb
mov
in
pop
repnz
cmp
xchg
xchg
sbb
push
sti
sbb
pop
mov
aas
xor
pop
xor
pusha
shl
mov
inc
mov
outsb
and
out
push
fs
lret
dec
mov
les
push
pusha
add
hlt
mov
pusha
mov
mov
cld
xlat
lock
jmp
inc
and
inc
pop
jns
int
push
out
add
sub
mov
fisttpll
nop
pusha
sub
jmp
add
shll
mov
mov
xor
int3
sub
ret
dec
ja
or
mov
inc
pop
dec
jno
ja
cwtl
lcall
sub
das
dec
cld
adc
orb
lret
jecxz
mov
test
std
test
hlt
arpl
in
mov
sbb
cli
pop
or
sbb
ret
xchg
xchg
in
or
sbb
lods
sbbl
shl
or
outsb
movsb
aam
sbb
add
daa
lock
dec
pop
aam
push
dec
ljmp
inc
push
mov
emms
std
clc
lret
dec
test
add
dec
add
xor
nop
xor
xchg
mov
jne
cmpl
mov
sbb
loopne
sub
xchg
inc
movsb
cs
mov
inc
std
and
stos
add
in
cmpsl
mov
and
mov
mov
push
pop
inc
jp
lods
adc
inc
cmp
dec
adc
clc
dec
ljmp
lcall
dec
and
loopne
mov
in
dec
mov
sub
cs
cld
inc
sub
nop
push
cmp
push
lods
and
dec
jg
je
mov
les
jno
scas
fidivrs
add
xlat
xchg
rcr
adc
dec
jno
cmpsb
jg
push
mov
or
lock
sar
xlat
adc
inc
mov
int3
mov
push
jge
cli
jge
ret
sub
ror
hlt
and
or
pop
cmp
cmp
cld
loopne
mov
in
repnz
js
xchg
incb
dec
dec
inc
sub
lods
clc
push
lock
cli
das
js
stc
and
addb
out
sub
or
sbb
fistpll
cmc
rcl
mov
in
pop
popa
push
aas
sbbl
adc
xchg
xchg
cli
inc
pop
scas
add
hlt
call
or
roll
sub
fdivl
xor
mov
mov
push
mov
and
repz
mov
dec
mov
leave
pop
movsl
clc
xchg
repz
mov
imul
lods
mov
jbe
add
mov
inc
mov
inc
add
xor
test
add
fmuls
sub
pusha
add
adc
loop
out
popa
dec
jp
xchg
test
xlat
sbb
xor
xor
pop
fiadds
or
ficoms
jae
xchg
adc
inc
fmuls
sub
call
xor
test
pop
push
ljmp
push
ds
sti
pop
in
and
lock
pop
inc
jns
ficoms
mov
and
roll
cld
push
jmp
das
les
push
jmp
stos
icebp
jl
jbe
lods
inc
add
push
inc
add
xchg
xor
out
test
add
cmp
cmp
cmp
cmp
rcrl
icebp
stos
out
mov
jmp
into
add
add
mov
mov
jecxz
sub
dec
pop
mov
mov
jo
adc
fnstcw
pop
mov
cmpsl
cmpsb
mov
mov
push
mov
ret
lds
pushl
dec
push
int3
cmpsb
nop
or
or
add
pop
ds
mov
out
jbe
lock
lret
into
pop
sbb
xor
fstps
add
add
lock
faddl
and
xchg
mov
push
pop
incl
enter
ret
inc
cmpsb
dec
or
decl
fmuls
gs
aaa
mov
xchg
lock
les
sub
push
mov
push
mov
lret
or
loop
rcr
pop
push
mov
scas
cwtl
test
imul
mov
xchg
and
dec
stc
cmp
ret
add
data16
mov
cmp
sbb
inc
lret
and
push
add
rcl
fdiv
or
inc
mov
fstl
inc
pop
daa
stc
sbb
adc
jb
jmp
cs
or
pop
enter
add
rcrb
xchg
sbb
clc
addl
push
inc
pop
pop
into
sub
xor
mov
ret
sbbb
pop
leave
test
ret
push
or
movb
decl
jecxz
adc
inc
cmpsb
shlb
sub
pop
mov
mov
rolb
jmp
push
inc
and
iret
mov
sub
mov
mov
rcrl
inc
or
push
enter
iret
gs
dec
hlt
in
subl
stos
adcb
cmp
cmp
fwait
mov
fbld
pop
jg
lcall
adc
add
mov
clc
push
jl
cmp
mov
leave
cmp
test
lea
sub
std
and
add
add
push
fists
not
adc
scas
add
adc
testb
call
shrl
and
pop
pusha
sahf
add
sub
adc
jg
lock
cld
mov
cmp
loop
pusha
mov
sti
adc
dec
pop
nop
add
add
xchg
mov
push
out
pop
shlb
test
inc
or
add
cli
nop
dec
rolb
insl
mov
dec
push
ret
enter
rclb
sbb
cmp
hlt
lods
rcrb
cld
mov
mov
sub
or
add
push
or
mov
in
xlat
add
sbb
mov
or
push
cld
lcall
addr16
jle
xor
sub
mov
clc
inc
shlb
sbb
cli
lods
inc
jne
pop
scas
jp
les
xchg
cs
add
pop
cmc
rorb
aam
push
rclb
and
or
jne
dec
pop
cmc
es
pushl
popa
incl
aas
jmp
pop
pop
paddd
or
push
ret
sahf
loopne
psubd
pop
dec
insl
cwtl
adc
pushf
lret
pusha
repz
pop
dec
stc
shll
enter
mov
and
adc
rcrl
cmpl
cmc
jmp
das
and
sub
jl
mov
push
adc
and
int
and
aam
imul
ret
push
aad
dec
fdivl
jbe
in
call
cli
xchg
insl
cmp
cmp
cli
ficomps
mov
mov
inc
lock
enter
imul
jge
outsl
sbbb
or
in
or
pop
mov
push
roll
inc
fcoml
mov
leave
ds
and
jp
push
lcall
test
lret
xor
rorb
adc
out
xchg
mov
push
leave
jmp
jns
sbb
jge
test
fiadds
push
std
insb
sbb
in
or
sub
mov
jl
add
lods
pop
or
mov
roll
add
cmp
aad
popa
popw
outsb
ja
pop
cmc
jg
fdivrs
test
mov
or
cmp
test
mov
adc
daa
push
aas
pop
adcl
mov
repnz
mov
add
aam
push
inc
or
in
loope
outsl
and
mov
or
xchg
or
pusha
adc
lods
xchg
incl
adc
and
mov
mov
xor
xchg
dec
or
push
xchg
xchg
ffreep
xchg
test
fmuls
xorb
jg
xchg
jne
cld
sub
adc
cwtl
outsb
dec
aam
inc
mov
lods
cmp
lods
ret
sahf
jle
out
inc
lods
fsubrl
and
pop
cld
jg
test
push
hlt
adc
in
aaa
sahf
sub
pusha
pop
fwait
xor
jg
push
jnp
or
les
xor
mov
xor
sbb
mov
iret
js
test
hlt
aaa
bound
jl
pusha
mov
aad
insb
insb
xchg
and
loopne
mov
mov
std
or
push
fldcw
pushf
sbb
cmpsb
fbld
ret
out
les
jecxz
ucomiss
jne
shrb
pop
jo
rcrb
icebp
mov
push
sub
push
js
mov
xor
ljmp
push
mov
call
xor
lsl
fsubs
sbb
dec
add
ja
repnz
nop
dec
xchg
shrb
call
stos
add
jb
mov
shr
adc
sbb
cmpsb
jle
cltd
lret
mov
pop
std
and
mov
xor
ljmp
sub
rorb
and
push
stos
bound
ss
mov
or
in
lea
cld
pop
jbe
add
lcall
or
cmp
fmulp
sub
pop
add
add
ljmp
or
loop
mov
aaa
mov
mov
jo
mov
hlt
enter
add
mov
sar
mov
orb
xlat
je
xor
jo
shll
call
dec
and
and
inc
xor
add
test
xor
xor
das
push
ja
push
dec
or
sbb
push
xchg
add
cmp
rcr
inc
das
in
int
jmp
push
xchg
or
mov
mov
dec
push
fstl
ret
fldt
inc
stos
imul
call
addr16
add
test
adc
jae
cmc
out
jnp
xor
imul
movsl
pop
jbe
int3
or
add
mov
fsub
ret
xor
mov
lock
lret
js
lods
loope
outsb
icebp
cmp
stos
mov
pop
pop
icebp
pop
mov
sbb
sub
xchg
inc
adc
pop
ret
roll
ss
xorl
add
outsb
and
lock
jb
loope
push
inc
pushf
adc
and
push
jg
fs
orb
ds
mov
and
mov
add
push
arpl
out
jb
mov
inc
call
xor
inc
pop
xchg
inc
sbb
lods
dec
sub
adcl
mov
xchg
divb
movsb
fisttpll
push
les
hlt
addr16
out
push
and
cld
rcl
mov
mov
das
enter
aaa
cli
rclb
in
ljmp
adc
pop
test
and
xchg
loop
pop
mov
adc
outsb
hlt
outsb
cld
push
add
pop
push
mov
or
sub
andb
or
lret
mov
fsubp
dec
jno
sbbb
mov
sarb
jne
push
clc
loop
and
dec
xchg
mov
aad
inc
into
jns
push
aaa
movb
or
cltd
fisttps
pop
sbb
pop
fsubp
push
popf
mov
into
ret
and
pop
in
clc
dec
cmp
out
leave
mov
stos
fidivrs
lret
mov
sbb
aaa
add
push
testl
mov
andb
sbb
pop
test
and
ret
pop
addb
push
dec
ret
or
ficompl
inc
mov
mov
or
sub
xor
sub
in
loopne
dec
and
sbb
stc
ret
fadd
push
push
stos
arpl
inc
sbb
push
repz
jne
test
cld
das
inc
xchg
mov
dec
or
push
xchg
inc
pushf
push
or
cmp
lods
inc
ror
mov
test
jo
inc
sub
imul
cmp
xor
push
add
into
jbe
lahf
and
sbb
pop
mov
fldt
fimull
adc
sub
sub
mov
xor
test
ljmp
ljmp
and
push
inc
inc
jns
jg
int
or
cmp
pop
cmpsb
inc
xchg
cmp
adc
insb
sbb
push
rcrl
jb
fmull
pushaw
mov
add
ljmp
stos
push
jecxz
add
mov
pop
aad
cmp
add
cltd
cli
or
pusha
shl
pop
sbb
xchg
in
lret
pop
int
cs
test
popf
cltd
addb
push
int3
lods
dec
sub
pushf
push
outsl
xor
mov
lock
xchg
or
xchg
movsb
mov
adc
ds
sub
pop
inc
dec
mov
mov
stos
mov
mov
scas
clc
jnp
lock
les
in
aam
adc
pop
add
test
or
pop
leave
push
adc
push
mov
mov
push
inc
and
adc
add
rcll
mov
aas
rorb
add
mov
sub
loopne
les
mov
ljmp
jg
jne
sbb
lds
sbb
pop
hlt
int3
and
pop
mov
es
in
mov
jp,pn
xor
xchg
clc
repz
xor
sti
mov
out
gs
mov
add
mov
pop
arpl
roll
mov
ret
mov
int3
hlt
movsl
pop
iret
addr16
cmp
dec
and
icebp
rorl
mov
icebp
sub
or
test
jg
jle
push
out
je
inc
insl
or
sub
daa
or
mov
sub
mov
mov
jnp
fwait
push
add
shlb
sub
test
inc
adc
inc
add
clc
push
insb
ret
lock
arpl
add
out
mov
sbb
push
es
jbe
inc
popf
scas
sub
filds
cmp
dec
mov
test
and
mov
sahf
lret
testb
inc
and
test
outsb
ret
cld
jg
ds
jno
pop
jnp
lock
and
fldt
fbstp
and
sti
jecxz
addr16
push
inc
mov
lods
in
arpl
mov
ret
fbld
movsb
xchg
mov
mov
sti
push
pop
int
ficompl
aaa
pop
arpl
jle
inc
add
shrb
adc
pop
cs
inc
cs
push
dec
mov
rcrl
nop
inc
ficompl
loop
cmpsl
jo
cli
add
ret
adc
mov
sub
add
lret
mov
shll
aas
daa
dec
sahf
push
dec
je
out
sbb
fdivrs
pop
fidivrs
in
in
loop
ss
repz
icebp
inc
add
xorl
pop
cvtpi2ps
scas
les
mov
add
jo
dec
sbb
or
add
fwait
mov
jmp
add
in
push
xor
jo
or
int
sbb
cmp
push
in
sbb
test
pop
push
jbe
pushf
cmp
xor
mov
jae
shrl
and
dec
mov
int3
fadds
ja
pop
sbb
popf
add
pop
pusha
inc
shl
jmp
jecxz
test
in
insl
sbb
call
mov
dec
testl
pop
push
clc
pop
or
push
add
and
rclb
mov
call
out
pop
pop
inc
mov
mov
icebp
dec
xor
adc
xchg
in
adcl
nop
mov
or
or
int3
xor
jle
mov
xor
sti
xchg
mov
scas
fs
push
dec
ret
lock
cmpsl
adc
jecxz
xor
int3
add
xor
dec
jge
cmp
or
ret
mov
das
dec
jle,pn
mov
ficoml
ja
enter
mov
jae
ja
mov
leave
mov
pushf
xchg
orl
pop
mov
loop
xchg
mov
int3
decl
lods
andb
ss
add
ja
das
pop
cli
stos
jg
push
inc
fs
outsl
sbb
adc
push
stos
aas
dec
in
adc
loopne
ss
xor
and
inc
cld
addr16
and
cmp
shl
cltd
pusha
rclb
mov
mov
sbb
dec
push
sub
mov
or
xchg
add
fmull
ljmp
fwait
adcb
roll
out
sub
ret
fwait
enter
dec
call
add
insb
pop
sahf
xchg
push
cwtl
mov
sbb
push
ficompl
cld
sbb
push
xor
inc
or
popa
out
imul
jp
ja
addr16
xor
scas
movsb
scas
movb
adc
shlb
jmp
adc
sub
ja
xor
std
fsubp
push
pop
push
or
push
loopne
insl
loope
mov
mov
jle
or
lret
pop
sbb
or
mov
enter
pop
std
add
ret
jmp
add
stos
mov
ja
cld
push
movsl
fiadds
sbb
cmpsb
inc
inc
je
xchg
les
mov
or
add
enter
orb
out
test
adc
jnp
add
loope
lahf
push
lret
arpl
cli
clc
dec
lret
sbb
mov
orb
lret
mov
aas
pop
cmpb
ss
shlb
xor
in
or
and
add
inc
xchg
adc
push
mov
scas
movsb
bound
push
cld
popa
rorb
mov
push
ljmp
xchg
mov
mov
push
mov
pop
hlt
int
jmp
out
dec
subb
in
dec
jg
rolb
jge
mov
lahf
mov
adc
mov
sbb
xor
test
fwait
testb
int3
cmpsb
shrb
xor
lret
dec
adc
icebp
xchg
push
shll
bound
inc
dec
andb
dec
adc
sub
push
fstpt
or
fwait
decb
push
add
sbb
icebp
outsb
fldenv
adc
cli
sub
std
pop
mov
push
or
outsb
clc
push
xchg
in
scas
xor
test
sub
and
addr16
scas
dec
out
lods
fwait
push
mov
rcll
mov
cmp
dec
loopne
movsl
aam
mov
dec
pop
push
repz
cmp
mov
jle
jmp
push
add
jmp
and
sbb
push
loope
or
dec
add
pushl
sbb
xchg
test
fs
ret
mov
in
inc
mov
inc
adc
lock
insb
xor
sbb
cmp
add
pusha
sub
movsb
adc
mov
xor
adc
pop
jo
shrb
rorb
andb
mov
icebp
xorb
into
js
shll
loope
stc
into
and
mov
sub
iret
cmpsb
mov
fildll
sbb
loope
mov
xor
jo
je
sbb
add
pop
inc
xchg
add
clc
aad
clc
fsubp
dec
and
xlat
icebp
pop
pop
icebp
lret
scas
cmpsb
out
ds
out
xchg
add
incb
pushf
sahf
mov
jnp
mov
std
xchg
jg
cmp
outsb
jg
sbb
std
add
jmp
je
push
aaa
scas
pop
or
aaa
jne
out
add
aad
xor
jmp
cld
rcrb
push
pop
arpl
mov
push
insb
cli
aaa
sub
push
inc
dec
sbb
add
cmc
scas
imul
rclb
jg
cld
inc
fstpt
data16
loope
pop
or
hlt
jne
push
pop
jbe
arpl
mov
loop
cmp
stos
mov
and
dec
mov
sbb
sbb
cmp
push
icebp
imul
mov
mov
test
dec
adc
mov
outsl
subb
aas
xchg
in
dec
xor
hlt
pop
and
test
push
cmp
shlb
push
icebp
sbb
push
cli
add
or
add
and
loop
push
xor
push
popa
xchg
mov
les
dec
jbe
xchg
test
push
or
pop
adc
and
xchg
scas
inc
loop
or
fwait
jle
jae
into
imul
or
and
push
rcrl
pusha
xchg
dec
cs
stos
push
pop
das
rorb
and
dec
add
pop
jne
inc
ljmp
jb
jo
stc
sbb
test
cmp
mov
lea
cmp
lcall
xchg
mov
mov
sbb
mov
mov
jecxz
dec
pusha
sub
or
call
out
xor
out
dec
es
sarl
jb
int3
movsb
inc
arpl
js
outsb
fcomip
cmp
test
jecxz
test
subb
sub
mov
mov
jecxz
sub
xor
flds
jb
or
packssdw
fisubl
xor
jl
or
pushf
fisubs
lds
mov
test
cmp
dec
es
xchg
les
dec
lcall
add
sbb
or
subb
jbe
cmp
mov
rcll
cli
je
insb
inc
test
cmp
imul
leave
test
cmp
mov
push
jl
or
ss
loop
cli
data16
aam
xor
pushf
inc
mov
aam
movsb
imul
push
adc
ss
add
sub
mov
sub
dec
cmp
push
ja
and
cmp
or
add
mov
mov
inc
lock
pop
rcrb
mov
out
mov
cmpsb
jl
jle
sbb
stos
jne
xchg
add
push
and
in
notl
jne
aam
loope
xchg
fwait
insl
mov
or
std
add
dec
enter
sti
jbe
mov
sbb
test
loope
or
daa
push
mov
clc
mov
sub
pop
mov
and
imul
mov
push
cmpsb
push
xchg
nop
xor
push
jle
jb
cmpsl
push
add
in
ljmp
movsl
loopne
loop
adc
xor
loopne
xor
inc
jge
or
notb
stos
xchg
jle
outsl
pop
push
loopne
jle
cld
xchg
push
push
hlt
add
cmp
test
cld
jp
mov
or
clc
pop
mov
sbb
dec
and
imul
adc
mov
and
insl
push
mov
stos
sbb
or
test
imul
fs
mov
loope
mov
push
outsb
cli
or
decl
lret
ja
icebp
push
js
mov
mov
jne
mov
adcb
cmp
inc
loope
std
pop
push
mov
adc
fisubs
xchg
mov
adcl
mov
aam
or
mov
inc
sbb
pusha
fcomi
pusha
mov
mov
and
inc
int
dec
sbb
jg
push
cwtl
xchg
mov
imul
xchg
mov
test
sub
ljmp
test
push
add
or
les
or
roll
mov
sub
jp
mov
or
mov
mov
or
xchg
test
nop
adc
inc
jmp
push
cld
sbb
add
mov
cwtl
inc
xor
out
mov
or
dec
inc
shll
mov
mov
sahf
fldenv
ljmp
push
jp
je
push
mov
bnd
fbld
push
pop
push
loop
xchg
fisubrs
xchg
test
and
rcrb
sub
and
or
call
fldenv
aaa
in
scas
adc
mov
js
push
sub
mov
arpl
insb
gs
aaa
and
inc
cmp
vmaxsd
scas
fwait
adc
or
cmp
inc
lock
shl
pusha
add
lods
leave
lds
xor
xchg
shlb
mov
mov
sub
outsl
jmp
and
es
scas
dec
movmskps
gs
push
incb
mov
mov
sub
push
loope
dec
or
std
scas
loope
mov
add
mov
les
mov
adc
sub
pop
mov
rcl
mov
push
int3
sahf
sti
inc
sbb
stos
dec
push
xor
leave
and
or
jl
or
jbe
mov
jle
xor
sub
mov
mov
mov
pop
fs
cmp
scas
or
pop
test
popf
mov
pop
push
clc
daa
cmp
mov
sahf
leave
cmc
jle
pop
sub
pop
inc
data16
and
cmc
notb
dec
in
push
das
scas
xor
add
sbb
fdivl
dec
mov
sub
and
ljmp
into
add
xchg
inc
int3
insb
testl
jmp
push
jmp
push
shlb
lcall
mov
aas
lret
sub
cmpsb
or
jo
pusha
push
mov
outsl
mov
mov
lock
jb
clc
in
mov
aas
lret
add
add
ss
std
pop
mov
aam
sbb
xrelease
sbb
add
pop
incl
aad
sbb
sub
int3
xchg
xchg
call
sbb
std
imulb
aad
outsb
cmp
fs
aad
mov
lock
add
ret
test
xor
test
out
mov
mov
test
add
or
loopne
clc
pop
sub
pop
fisubrl
xchg
dec
dec
imul
push
fmuls
cmp
or
mov
dec
pushf
mov
or
hlt
ja
pop
or
pop
lock
push
outsb
std
cmpb
div
es
into
test
or
lods
dec
sub
mov
aam
add
ficoml
and
push
and
sarl
cmp
push
push
inc
ror
cli
jg
xorb
or
jl
xor
adc
cld
cmp
rorl
ret
sbb
xchg
xor
pop
cld
inc
push
jp
and
add
out
jg
daa
je
dec
add
std
dec
mov
or
imul
loope
cmpsl
jmp
shlb
push
inc
add
mov
adc
out
cs
mov
sbb
sbb
xchg
jno
ret
mov
pushf
loope
add
push
xchg
push
adc
adc
mov
push
xchg
add
inc
sub
dec
cltd
mov
sub
scas
fs
add
int
gs
jb
adc
dec
cli
movl
push
push
cld
mov
mov
stos
add
push
xor
cmp
xor
repz
out
arpl
stos
mov
mov
shlb
mov
jb
push
js
lock
pop
es
or
adc
addb
push
sarl
cld
inc
mov
and
add
lret
push
gs
jae
sub
sbb
std
cmpsl
push
repnz
subl
mov
add
fidivl
movsl
pop
mov
movsl
mov
cmp
stc
and
xor
mov
mov
adc
aam
jbe
xchg
inc
sub
jb
cmpsl
push
jl
loop
xor
pushf
jnp
mov
call
or
cltd
ds
ljmp
pop
cmp
jecxz
adc
jbe
mov
ja
add
nop
pop
leave
pop
stos
mov
leave
std
xchg
lods
xor
cmp
jg
rolb
mov
or
lds
cmp
mov
inc
jl
jge
sub
add
xchg
test
xchg
in
xchg
adc
outsl
das
adc
push
filds
mov
push
into
sbb
ss
inc
aad
mov
fwait
adc
lret
mov
push
push
cmp
repnz
lock
test
fidivl
ds
lret
jns
leave
fsubr
add
aaa
cmp
add
subb
and
popa
cld
ja
scas
movsb
dec
adc
add
les
adc
andb
dec
inc
xchg
repz
testb
add
mov
jg
sbb
aad
sub
iret
stos
push
outsl
inc
sbb
inc
xorb
jp
mov
dec
and
mov
bound
in
hlt
push
loopne
jne
and
aad
and
add
movsb
pushl
mov
cmp
add
inc
or
icebp
movsl
adc
or
sti
leave
icebp
pusha
push
push
inc
hlt
mov
mov
clc
and
out
icebp
fildll
adc
cmp
jb
dec
lcall
and
or
cli
stos
jo
cld
and
inc
cs
mov
mov
lahf
dec
aad
adcb
icebp
cltd
out
test
les
ljmp
fstpl
mov
outsb
negl
sub
or
jge
ret
test
mov
jmp
and
ja
test
and
jp
and
push
mov
adc
cmpl
sbb
in
js
loop
inc
pushf
add
test
outsb
add
xchg
push
push
in
sub
dec
loope
and
add
cmp
jp
push
cmp
and
cmp
sub
mov
xor
cmp
test
cltd
test
mov
orl
popa
adc
dec
inc
adc
pop
mov
fldl
insb
mov
add
push
or
push
sub
xchg
adc
jmp
es
out
jns
inc
push
jle
nop
mov
inc
mov
fcmovu
xlat
jg
pop
hlt
mov
add
push
call
adc
sub
les
mov
dec
ss
jo
sbb
mov
in
rorb
pushf
js
sub
mov
sub
mov
and
sub
cmp
addb
loop
add
dec
mov
mov
pop
lahf
pop
add
fsubl
decl
pop
lods
sbb
xor
lret
pusha
mov
cmpl
imul
pop
daa
adc
adc
fs
or
adc
aad
test
inc
inc
push
mov
aaa
outsl
cli
pop
fbstp
adc
jo
mov
mov
arpl
add
enter
dec
mov
scas
test
jb
inc
inc
cmpsb
jmp
outsl
mov
repz
adc
push
mov
cmc
das
sub
hlt
sbb
call
jbe
and
dec
and
in
push
icebp
test
pop
hlt
sub
jo
stc
pop
cwtl
pushf
ret
or
ret
dec
roll
and
sti
xor
clc
dec
jg
js
push
mov
pushf
inc
stc
dec
sti
jnp
mov
push
adc
sbb
add
xchg
jmp
lcall
nop
mov
sbb
mov
sbbb
js
repnz
or
sbb
pop
mov
std
add
ret
and
adc
mov
inc
sbb
xor
test
inc
je
dec
lock
shlb
loope
dec
jl
stos
aad
fcomip
pop
adc
rclb
xor
cmp
cmp
or
adc
and
jecxz
pop
addr16
xor
test
jg
mov
or
push
push
push
cmp
xchg
adcl
cmpsb
stos
jle
jmp
add
adc
or
lret
cmpsl
mov
shlb
jle
shll
fs
cmpsl
sti
xchg
mov
test
nop
mov
decb
mull
mov
jg
imul
xchg
cmp
stc
outsb
mov
stos
call
jecxz
fs
jp
cmp
sbb
add
cli
and
and
sbb
ds
jle
adc
bound
fcompl
loopne
sub
mov
inc
fmulp
loopne
mov
mov
or
xchg
dec
rorb
jne
cltd
dec
pushl
jp
sbb
pop
xchg
mov
aas
pop
clc
ljmp
mov
pusha
pop
cmp
cmpsw
out
js
mov
mov
loop
jbe
cmpb
call
or
adc
mov
mov
sbb
cs
xor
jge
mov
out
push
mov
loopne
jne
mov
and
jp
or
adc
stc
jmp
mov
or
inc
sub
pushl
sbb
adc
or
imul
or
mov
les
jecxz
mov
mov
adc
movsl
dec
lahf
lds
dec
cmp
icebp
arpl
mov
cltd
nop
das
xor
jg
pop
mov
rolb
lock
sbb
or
jg
outsb
or
jle
sbb
jmp
and
test
insl
aaa
push
mov
je
adc
pushf
and
sbb
out
decb
jne
push
lods
scas
sbb
and
lods
mov
call
cld
sbb
add
pop
add
rcrl
fists
add
fbld
xchg
fldcw
movsb
sub
cmp
xor
clc
bound
shl
xor
sahf
pop
icebp
or
adc
cmp
adc
mov
push
dec
mov
rep
add
shlb
and
insb
jno
push
movsb
push
test
pop
stos
test
jbe
jbe
sbb
adc
add
jb
ds
scas
pop
or
pop
ficompl
fsubl
or
std
icebp
sbb
bound
add
out
into
jmp
test
leave
in
and
lea
mov
cmpb
dec
jmp
or
add
addb
adc
into
dec
pop
fdivrp
ret
lods
pop
arpl
es
call
sbb
xchg
or
repz
in
xor
or
xor
in
add
cmpsb
push
or
sub
push
shrb
fdivrl
test
push
mov
pusha
mov
pop
sub
fs
or
adc
imul
aaa
pop
ja
inc
cmp
sti
and
mov
xchg
xlat
lahf
mov
js
pop
pop
adc
int
imul
mov
subb
aas
in
insl
mov
mov
inc
cli
mov
fs
sub
loop
inc
dec
add
xchg
mov
clc
insl
push
arpl
add
scas
push
dec
in
jmp
sbb
stc
out
pop
add
hlt
mov
enter
xor
sti
xchg
inc
mov
nop
inc
das
pusha
outsl
ret
push
mov
ljmp
in
push
mov
out
adc
or
aas
fistpl
pusha
loopne
cmp
pop
inc
out
mov
xchg
outsl
and
pop
or
js
in
adc
jbe
fdivl
xchg
clc
mov
pushf
rcrb
mov
mov
js
sub
jbe
lds
mov
cmpsl
test
sbb
dec
xchg
mov
fisubs
notb
shll
dec
aaa
sub
lds
dec
mov
ret
mov
fld
cmp
xchg
movsl
fwait
call
mov
outsb
mov
icebp
imul
repz
shlb
repnz
add
cld
jg
mov
push
or
filds
cmp
adc
inc
negb
sub
inc
inc
xchg
mov
sbb
sub
xor
mov
outsl
push
and
outsl
outsb
shrb
lds
and
out
xor
outsb
std
stos
inc
testb
pop
or
cmp
inc
je
xlat
push
xchg
mov
add
pushf
ror
sub
pop
call
mov
daa
push
cwtl
sbb
not
cli
shll
mov
ds
fildll
jbe
lahf
push
popa
aad
push
loope
movsb
cld
mov
and
and
test
scas
in
pop
sbb
cmp
dec
in
popa
mov
fstpl
cmp
lahf
int3
add
insl
pop
lcall
lahf
mov
xor
fwait
mov
push
push
xor
mov
xchg
and
adc
add
ljmp
out
add
xchg
pop
sbb
push
mov
mov
mov
into
filds
mov
sub
bound
testb
push
and
cli
inc
mov
inc
inc
leave
xorl
les
xchg
lods
testl
sbb
imul
push
lods
or
lret
clc
push
push
loopne
add
stos
sbb
test
pusha
clc
sbb
xchg
sbb
or
and
and
pop
dec
les
mov
js
popa
cmp
cld
sbb
xchg
mov
push
jp
dec
es
cli
psubsb
ja
adc
xor
add
push
aaa
std
pop
aam
add
aas
add
adc
js
fadd
jnp
shr
test
icebp
jmp
fidivrl
out
mov
rcll
push
dec
push
sub
xlat
lahf
ss
cld
inc
xor
mov
jb
movsl
aas
bound
rclb
hlt
push
aam
mov
notl
loopne
ja
push
inc
incb
or
and
adc
xchg
dec
nop
daa
outsl
pop
add
sbb
lock
sub
fcmovbe
rol
mov
repnz
in
fwait
inc
test
adc
add
lcall
add
addl
sub
mov
decl
loop
sub
movl
xor
pop
nop
out
or
fs
or
xor
add
into
cmp
jmp
ficoml
pusha
pusha
jp
dec
std
es
rorl
andb
sub
or
loopne
ja
inc
add
lods
jl
jo
loope
mov
fsubl
ljmp
pop
mov
and
mov
xchg
movsb
mov
loope
xchg
jo
test
out
add
adc
push
es
outsl
orl
ret
inc
rcll
ds
mov
mov
in
stos
test
fcoml
or
filds
repz
sbb
fiadds
mov
pop
or
cmpsl
and
jbe
xchg
push
xor
push
push
xor
repz
dec
mov
fsubl
ja
iret
jmp
xchg
and
sub
stos
lds
decb
les
mov
push
pop
mov
cs
jnp
out
inc
nop
adc
xor
mov
jnp
push
nop
mov
lods
js
mov
movsb
cmp
sbb
mov
pop
and
mov
xchg
sti
aaa
sbb
xchg
push
inc
insb
adc
pop
jecxz
out
jle
hlt
cmpsb
adc
mov
stos
xor
jno
out
xor
pop
inc
mov
mov
sbbl
sbb
pusha
add
jb
sub
dec
clc
scas
call
or
mov
rcll
llwpcb
inc
or
pop
into
lahf
or
sub
test
mov
xchg
ret
pop
jle
xor
ficomps
fisubrs
outsb
mov
jbe
inc
pusha
jge
or
repnz
cltd
clc
pushl
cmp
xchg
add
cmp
pushf
std
movsl
lea
cli
daa
jnp
jle
cli
call
shlb
xchg
subl
mov
pop
scas
push
cmp
dec
or
sub
ljmp
mov
enter
adc
ss
and
incl
dec
adcl
ss
enter
inc
outsl
loope
stos
push
pushl
add
jo
lock
mov
sbb
ss
add
or
lea
xchg
push
scas
ss
ja
fs
or
dec
aas
rcrl
pop
mov
and
scas
or
and
lea
ret
sbb
adc
push
cmc
adc
xchg
mov
push
sub
movsb
cmc
push
sti
mov
adc
inc
lock
outsl
lret
lea
adc
and
dec
sbb
hlt
inc
jmp
mov
and
stos
push
test
xor
sub
clc
push
and
sub
mov
rclb
inc
mov
mov
sbb
add
aaa
and
imul
mov
mov
dec
inc
inc
out
mov
scas
add
and
inc
pinsrw
and
push
sbb
test
add
iret
mov
sbb
in
sti
mov
push
dec
ret
sbb
and
sbb
xchg
lock
push
push
mov
inc
mov
or
pusha
cmpsb
push
data16
rorb
shl
sarb
push
addb
cmpsb
add
jo
inc
movsb
jp
xor
jp
jl
xor
scas
cwtl
decl
mov
jl
test
xor
dec
inc
cmp
lods
jmp
cli
in
andps
mov
mov
leave
cld
mov
push
add
xor
adc
jg
mov
jl
pushl
mov
pop
adc
or
dec
ljmp
pusha
in
push
adc
mov
mov
xlat
push
mov
sti
in
push
rorb
stos
xor
rol
jmp
or
sahf
add
cld
popf
add
xlat
cmp
or
pushl
js
inc
imul
hlt
ficoml
out
dec
roll
lds
add
fcomps
outsb
jl
or
cmp
add
xchg
sub
push
or
pop
push
std
add
mov
pop
ret
add
mov
test
mov
cltd
add
aam
fnstenv
jnp
sub
out
cwtl
test
insl
push
subb
les
fbld
into
cmpsb
pop
jb
decl
lods
clc
adc
adc
adc
mov
std
jl
push
lods
call
sbb
mov
dec
pop
outsl
mov
or
cmpsl
sbb
add
addb
ja
adcl
movsb
mov
and
jl
or
cmp
jno
push
lret
in
loope
jg
push
jg
int3
fs
ret
xor
mov
xor
jecxz
jg
fisubrs
sbb
fiaddl
loop
out
push
js
xor
inc
hlt
das
mov
scas
fsubrs
clc
inc
subb
inc
push
sub
mov
dec
shr
out
or
js
mov
fninit
scas
pop
lea
push
xor
aam
mov
inc
ljmp
sbb
pushf
je
xorl
ret
and
mov
aaa
sbb
daa
dec
insb
sbb
push
fbld
dec
mov
adc
js
popa
xor
xorl
jecxz
hlt
scas
lock
mov
aad
push
adc
and
or
pop
adc
pmaxub
jg
mov
inc
sub
das
inc
inc
je
test
sbb
jle
test
pop
add
inc
push
je
ret
out
inc
cld
inc
fs
and
loopne
nop
lret
inc
fwait
xor
or
push
pop
add
inc
add
cmpsb
sub
push
loope
cli
popa
adc
add
nop
xchg
fdivl
fwait
jbe
inc
dec
add
outsl
adc
aam
mov
cmp
cmpsb
xchg
and
xchg
sub
mov
mov
push
adc
mov
push
dec
cwtl
mov
inc
clc
aaa
sub
xchg
sbb
ret
inc
insl
clc
jecxz
sti
in
fadds
cmp
out
fadds
outsl
pop
imul
lret
sbb
pushf
inc
adc
add
arpl
jne
inc
push
fimuls
add
mov
pop
negl
mov
pop
mov
mov
jmp
loop
mov
xor
xor
add
and
xchg
js
push
shrb
nop
dec
je
xchg
and
cltd
add
xchg
mov
xchg
jno
mov
dec
out
dec
xor
aad
dec
xchg
outsb
ret
call
add
out
and
mov
incl
cwtl
dec
mov
test
pop
into
mov
cld
mov
or
fidivl
sbb
js
xor
nop
js
add
dec
xor
jg
xlat
adc
mov
xchg
outsl
fwait
mov
push
or
ja
mov
and
fldl
jnp
lcall
test
xor
add
pop
cmp
fadds
add
aam
adc
cmp
xchg
nop
stc
mov
push
call
bswap
jae
mov
add
sahf
or
mov
test
pushf
ret
mov
sbb
std
xor
js
dec
mov
mov
scas
and
movl
cmp
jo
inc
add
pop
std
dec
addr16
and
and
adc
dec
in
pusha
pop
cmp
mov
gs
pop
mov
sub
fisttpl
inc
insb
mov
jmp
inc
scas
mov
popa
jo
inc
jp
stos
nop
and
in
push
pop
aam
lahf
rolb
mov
xor
mov
mov
cmp
in
push
sbb
adcb
pop
and
repnz
in
add
add
push
test
lock
push
mov
adc
sbb
loope
jecxz
daa
push
cmp
jbe
add
jge
mov
scas
xor
add
stos
mov
sub
mov
pop
push
sbb
cmp
cs
sbb
push
mov
add
fnstsw
out
push
add
jo
fadd
mov
test
outsl
fisubrs
mov
sub
add
frstor
jnp
lret
xor
cmp
ljmp
add
sub
imul
jg
xchg
or
shlb
mov
push
push
into
pop
insb
add
pop
add
pop
pop
insl
insb
add
cmpsb
cmp
outsb
inc
sub
ret
cmp
daa
cmp
cmp
scas
enter
and
and
repnz
scas
js
fwait
sub
jmp
pop
test
lods
cmc
or
add
cmc
adc
dec
outsl
or
and
clc
add
pop
je
mov
sbb
pushf
and
xor
cmp
lcall
mov
lock
jb
imul
xor
push
adc
mov
pop
jge
mov
add
inc
jle
cmpl
push
sub
aaa
adc
dec
test
bound
mov
mov
jg
test
leave
inc
mov
std
and
jnp
fstpt
rolb
pop
lods
inc
or
loop
sbb
push
test
lock
add
scas
je
cmp
inc
aad
mov
sbb
and
add
add
and
scas
cli
mov
mov
aaa
cli
int3
fcoml
sbb
enter
jnp
jb
mov
ja
sub
mov
jp
inc
add
popa
jp
xor
mov
mov
pop
pop
jnp
mov
mov
shll
or
shr
add
mov
push
and
outsb
shlb
mov
xchg
fcomps
or
jmp
adc
mov
sbb
stos
adc
leave
push
test
jns
mov
pop
jns
test
lds
add
int3
adc
fisubl
adc
mov
out
mov
ret
cmp
push
loop
mov
ret
or
cld
fidivs
dec
adc
test
inc
and
nop
push
mov
data16
inc
in
or
cmc
add
push
data16
sbb
push
shlb
incl
dec
and
fsubs
les
ljmp
imul
add
inc
cli
dec
enter
pop
ret
movsl
jge
inc
cmp
pop
in
incl
xchg
clc
je
les
fwait
test
xchg
cmp
or
add
movsb
stc
add
xor
data16
popa
test
ficomps
hlt
daa
incb
add
mov
pop
and
push
es
into
push
sub
out
ljmp
xchg
mov
out
mov
imul
dec
and
jg
cmp
loopne
xor
jge
xor
int
push
push
lahf
pop
and
xor
loope
mov
jae
sub
fists
mov
ljmp
mov
fwait
xorl
sbb
lret
dec
sbb
hlt
pop
jbe
movsl
xorb
pop
or
jmp
rcr
test
popa
nop
in
rcr
dec
pop
jg,pt
icebp
add
inc
addb
movsl
cmc
sub
stos
or
inc
lds
out
dec
push
mov
outsb
cmp
loopne
adc
add
cmpb
es
ja
mov
ror
adc
incb
and
test
sub
inc
mov
cli
pusha
lods
xor
pop
mov
out
test
adc
adc
ljmp
bswap
mov
fdiv
into
cmp
fiadds
fdivrs
push
sbb
jp
push
dec
popa
push
push
add
cmpsl
out
dec
clc
add
sub
xchg
das
out
arpl
arpl
mov
fdivrl
and
sub
mov
ret
xor
idivb
jg
xchg
movsb
repz
pop
lods
cmp
mov
inc
mov
and
movsb
xor
incl
xchg
push
stc
std
sbb
adc
ds
mov
shrb
iret
mov
fadds
sbb
rclb
iret
loopne
jo
pop
xchg
inc
stos
push
aam
insb
mov
adc
addb
loopne
lcall
jmp
add
iret
sub
loopne
lret
jle
add
addl
in
mov
inc
cltd
hlt
jg
mov
into
or
push
repnz
sub
pop
inc
idivb
dec
push
iret
out
jns
jo
lcall
dec
movsb
loope
gs
xorl
mov
or
cmp
arpl
ret
rclb
shl
push
jecxz
xchg
cmc
and
or
mov
outsl
push
adc
dec
sub
pusha
adc
out
ficompl
dec
cmp
push
push
aaa
xor
and
movsb
popf
stc
or
xchg
jne
dec
pop
aas
nop
lcall
mov
jg
inc
xchg
push
jnp
loope
inc
sahf
pusha
mov
call
add
jno
sbb
in
subb
mov
mov
fidivl
std
and
jge
aaa
imull
ret
add
bound
push
pop
stos
inc
sar
test
in
push
mov
dec
fwait
sbb
fistpll
popf
test
mov
dec
nop
mov
sub
sub
lods
fmul
fists
in
dec
daa
les
out
inc
mov
into
into
push
push
scas
inc
xor
pop
lcall
mov
jnp
xchg
jl
pop
pop
add
add
call
clc
ffreep
cld
insb
jg
call
or
xchg
leave
testl
mov
dec
cld
dec
std
mov
inc
enter
test
roll
or
mov
mov
mov
ljmp
jne
push
inc
es
xor
aaa
lock
jmp
inc
push
addr16
pop
insb
faddl
adc
xor
aam
pop
xchg
call
xchg
dec
xchg
dec
sar
out
sub
insb
int3
adc
cwtl
xor
incl
and
stos
negb
push
pop
or
rolb
fbld
or
sub
push
in
jno
das
inc
imul
sbb
inc
in
loop
mov
ja
jo
dec
jl
xchg
add
dec
js
jp
cmp
insb
aas
mov
sbb
pop
lods
push
fdivs
aam
xor
int
lcall
enter
xchg
mov
cld
js
xchg
testb
jns
shll
mov
add
and
lret
cld
dec
cmp
scas
add
popa
ja
inc
adc
out
rolb
lods
and
pop
push
pop
outsl
loop
mov
and
aaa
cs
adc
sbbb
jl
pusha
in
pop
stos
popa
repz
out
rclb
mov
mov
xchg
sbb
hlt
imul
jl
lret
add
idivl
dec
xchg
data16
push
dec
jno
mov
add
popf
xchg
add
sub
je
add
jge
adc
mov
fidivl
fidivrl
or
das
dec
jae
js
cmp
mov
dec
cmp
incl
mov
je
jmp
lods
es
test
lods
rcll
nop
lock
les
andl
mov
mov
popa
sbb
int3
mov
loopne
int
adc
cmp
push
adc
jecxz
into
xlat
cmpb
fcomip
pop
dec
mov
push
int
aaa
cwtl
jg
gs
push
inc
or
dec
flds
or
test
and
and
pop
enter
stos
ds
mov
cmp
loop
aam
cli
and
cmc
pop
add
sub
push
sahf
dec
push
and
push
testb
ret
call
scas
pop
hlt
hlt
pusha
adc
je
cltd
loope
aas
mov
inc
adc
ss
mov
pop
push
in
cmp
fwait
add
jle
mov
call
add
adc
je
xchg
sbb
inc
push
sub
or
pop
dec
loope
daa
and
or
leave
cmp
sbb
jg
sub
iret
repz
inc
push
and
mov
addb
dec
repnz
decl
mov
addr16
scas
dec
stos
std
or
loope
dec
test
stc
push
out
mov
pushf
add
add
adc
ds
lods
fld
push
xor
and
cmp
les
loop
es
lret
in
enter
cld
ja
fmuls
pop
out
sbb
pusha
sbb
jecxz
clc
add
fndisi(8087
repnz
ficomps
out
sbb
and
sbb
addl
or
xor
repnz
iret
mov
adc
adc
shrl
sub
add
psubusb
fcoms
ss
pusha
movsb
mov
push
push
adc
ret
out
pop
pop
ss
stc
imulb
jge
inc
pop
add
sub
test
sub
add
push
out
lahf
or
jle
imulb
aam
adc
sahf
pop
movsl
js
out
ret
and
aaa
adc
cmp
sbb
sahf
or
or
loope
inc
jl
push
icebp
adc
enter
shrl
jmp
das
add
adc
push
jecxz
hlt
outsb
stos
ret
pop
add
adc
lcall
shrb
pop
inc
in
dec
aas
xor
je
loope
and
or
cli
inc
jns
lods
jno
pop
add
lock
or
inc
pop
and
mov
add
icebp
or
jb
scas
or
adc
push
xor
call
or
inc
stos
xor
iret
sbb
ja
adc
mov
fs
mov
mov
shlb
inc
push
cld
jecxz
cltd
mov
ds
mov
lcall
sbb
cmp
mov
bound
pop
jl
ret
sub
fsubr
mov
out
push
gs
loope
xor
mov
sti
and
inc
leave
and
or
add
in
faddl
xor
or
or
sub
call
cmpb
icebp
or
cmp
ret
dec
mov
loop
pusha
das
add
push
add
push
int3
push
sub
pushl
fmull
mov
cmp
push
add
jo
jmp
add
cmp
pop
jnp
iret
xor
rorb
cmp
and
lea
aam
lret
mov
add
sub
out
cld
xchg
mov
and
add
xor
xchg
cmc
jno
cmpsb
push
in
cltd
lcall
xorl
fnstenv
call
push
push
pop
addb
mov
cltd
xchg
aaa
push
cmp
es
xorl
mov
scas
in
mov
add
sub
icebp
js
add
sbb
or
sub
xchg
into
mov
xor
push
mov
adc
sbb
in
icebp
dec
dec
sbb
cmpsl
ja
cld
sbb
jg
mov
add
xchg
jl
in
jo
ret
pop
and
adc
cld
es
sahf
fs
mov
and
dec
push
push
ljmp
jp
lock
cwtl
outsb
outsb
je
call
and
jge
aas
xor
mov
punpcklbw
ret
and
cmpsl
push
lahf
cmp
pusha
mov
lret
jbe
xchg
or
dec
mov
js
into
or
fwait
enter
mov
jb
or
cmp
push
fs
jg
scas
xlat
push
test
jle
add
sbb
add
frstor
xchg
push
mov
cmovo
flds
pop
shrl
mov
cmpsl
sbb
aas
mov
xor
in
ss
mov
jns
or
scas
cmp
je
out
sbb
xchg
dec
adc
lea
mov
pop
add
sbb
jmp
pop
mov
les
outsl
cwtl
mov
loopne
aas
adc
fs
jmp
sbbb
addl
dec
jg
mov
daa
movsb
or
cmp
inc
cmp
sub
in
scas
les
ret
push
clc
push
sbb
mov
sbbl
rclb
dec
movsl
jg
rcrl
loop
outsb
mov
lret
lahf
gs
fucomip
adc
dec
pop
sub
lret
add
or
mov
incl
adc
dec
inc
lret
insl
dec
repz
or
call
adc
and
adc
fbstp
and
inc
call
fisttps
mov
loope
cmp
pop
inc
fnstcw
sbb
mov
test
call
add
push
repnz
push
xchg
cmp
push
clc
xchg
int
jge
mov
dec
enter
aaa
add
cmc
inc
es
or
outsb
out
jge
mov
mov
outsl
clc
push
pop
sbb
adc
push
mov
adc
inc
fsubrs
fdivrs
out
sub
out
aad
bnd
xchg
add
mov
iret
sbbl
jl
xor
fcomip
rcrb
rcrb
pop
xchg
pop
aad
mov
jg
dec
out
jne
outsb
rcrl
cltd
dec
ss
push
mov
rcll
xchg
lods
mov
or
aam
add
and
lock
hlt
inc
jae
lret
add
in
scas
and
test
rolb
mov
lea
push
jge
out
aad
out
push
loopne
sub
xor
dec
cld
cs
xchg
test
lds
insl
push
mov
pop
lock
and
jg
cmpsb
sub
add
jnp
inc
mov
and
popa
jmp
ja
sbb
add
push
nop
scas
xchg
test
lret
lcall
push
roll
incb
sbb
add
and
push
pop
incl
loope
inc
jne
mov
sbb
mov
cmc
clc
rol
test
and
lret
add
cwtl
jae
or
add
mov
ret
push
scas
xchg
cld
or
or
lcall
in
aam
negb
repnz
xchg
ret
mov
xchg
cmpb
inc
dec
jecxz
lods
push
push
sahf
jmp
call
shlb
push
sahf
jb
mov
outsl
push
adc
or
dec
pusha
jbe
sarl
jne
pop
in
dec
dec
push
loopne
xchg
subl
les
movsb
repnz
cmp
xchg
repnz
out
fidivs
adc
addr16
jb
callw
add
jl
jns
xlat
outsl
inc
ret
pop
arpl
inc
sub
jp
jl
mov
sub
jo
jmp
subl
pop
sbb
adc
int
stos
adc
les
leave
mov
mov
imul
push
xor
aam
sub
or
shll
lock
sbb
kandnb
lds
and
push
cs
pop
jecxz
popf
bound
lcall
test
mov
int3
mov
test
and
mov
insb
jae
lock
push
jg
addr16
mov
das
sub
test
sbb
push
dec
pop
stc
jne
xor
loop
stos
cmp
aas
inc
or
push
dec
jno,pn
aam
test
sahf
xlat
push
jno
pop
aad
cltd
cmp
xchg
mov
mov
jno
sub
call
xchg
sahf
cwtl
sbb
jg
inc
pop
jb
enter
sbb
inc
inc
out
es
pop
mov
data16
add
scas
in
inc
xor
and
xchg
mov
loop
scas
cli
cmp
cmc
andl
push
cli
pop
stos
mov
sub
rcr
mov
xor
or
fsubl
lcall
and
mull
xchg
or
add
xorb
add
into
jp
outsl
and
arpl
push
cltd
clc
xor
and
movsb
lcall
jle
cli
cmp
push
jge
or
jge
nop
add
pop
lahf
xchg
or
inc
and
sar
push
leave
xchg
mov
push
loope
clc
add
pop
ltr
imul
cmc
in
pop
incb
dec
les
sbb
loope
mov
dec
sub
cltd
jo
mov
cld
add
hlt
inc
ret
sub
xchg
aaa
scas
sbb
ror
mov
imul
jmp
bound
mov
xor
out
or
dec
and
add
push
cmp
mov
fs
dec
xchg
mov
inc
and
mov
jg
in
bound
mov
shlb
mov
cmpsl
ljmp
mov
adc
repz
pop
push
fadd
pushf
addr16
ja
or
or
stc
push
sbb
push
sahf
mov
ret
icebp
das
pusha
fstl
sbbl
leave
mov
push
sbb
inc
adc
in
jg
jno
test
sbb
loope
mov
orb
sub
add
mov
inc
sti
fmuls
inc
cli
in
loop
fdiv
dec
imul
xchg
add
stos
aam
cs
mov
mov
lods
rcll
test
js
mov
sub
sub
and
sbb
repnz
dec
rolb
sbb
ljmp
sarb
mov
xor
std
dec
pop
inc
mov
inc
dec
call
jg
mov
and
and
loope
pop
les
popf
prefetch
fsubs
adc
in
clc
sbb
or
jg
lods
jmp
dec
xor
inc
pop
out
push
ljmpw
std
mov
pop
jb
jno
call
xchg
icebp
call
aad
lcall
or
adc
int3
loop
mov
pushf
push
dec
jbe
add
inc
lds
pop
xor
push
pop
or
pop
push
fnsave
xchg
roll
sub
mov
mov
or
loopne
das
je
cs
cmp
add
and
add
xlat
and
cmp
and
and
and
dec
mov
mov
pop
fnstenv
mov
mov
jp
mov
dec
lds
xor
dec
push
loopne
cld
mov
adc
pop
push
jecxz
lret
sbb
lcall
inc
lock
xor
ja
or
in
pop
sbb
pop
or
mov
mov
data16
sarl
or
loop
jp
aas
fmuls
sbb
mov
sbb
scas
mov
dec
scas
mov
jge
cld
jg
pop
xchg
cmpsb
push
jle
dec
sub
insl
das
pusha
cld
fwait
push
pushf
push
push
add
out
int3
xor
or
scas
jl
push
push
ja
je
push
std
sub
add
lea
pop
int3
xchg
lahf
movsl
cs
mov
cmp
push
xor
adc
fdivrs
or
jo
pop
into
cmp
scas
pop
and
call
dec
pop
and
adc
outsb
sbb
or
sbb
fsubrl
xchg
sbb
inc
repnz
add
push
mov
fmuls
pop
and
jne
jecxz
inc
fbstp
icebp
mov
xorb
enter
add
mov
sbb
mov
add
loope
xchg
xchg
adc
or
addl
fsub
cmp
mov
mov
mov
out
repz
adcb
pop
push
dec
adc
and
or
fbld
lret
les
aam
inc
clc
or
cmp
sbbb
mov
imul
xchg
mov
bound
imul
scas
jo
sbb
push
leave
push
mov
push
pop
xchg
les
mov
sbb
xor
cmp
js
rcrb
sbb
mov
or
xchg
sub
jl
push
push
add
sub
adc
jb
jo
mov
pop
mov
mov
data16
push
pop
and
sub
mov
loopne
sub
out
nop
xor
xchg
adc
sub
notb
and
sub
jbe
shrb
aaa
aaa
movsl
addb
or
cmc
cmp
out
int3
and
or
jle
repz
push
mov
mov
xchg
ds
xor
ss
and
dec
clc
inc
ds
push
fcoms
jle
lea
bound
mov
mov
rol
pop
inc
js
aam
pusha
iret
xchg
ret
add
in
jecxz
in
jg
sub
pop
cwtl
rolb
clc
fisttps
dec
mov
out
dec
add
popa
mov
imul
popa
pop
ljmp
hlt
mov
xchg
adc
cmpsb
xchg
nop
push
push
xchg
repnz
dec
jno
mov
hlt
dec
clc
out
jp
push
mov
lock
out
cmp
es
pop
mov
xor
push
push
addb
inc
sahf
and
pop
mov
xor
inc
jns
jo
lds
je
aas
or
aad
call
xchg
sub
ret
repnz
imull
daa
adc
push
sbb
pop
call
dec
dec
incl
fidivrs
popf
push
add
movsl
stc
hlt
in
addb
push
out
jns
xchg
push
adc
mov
mov
test
sbb
in
pop
aaa
xor
push
rclb
test
ficoml
fdiv
incl
cld
push
mov
repnz
fcoms
out
fisubl
mov
fcompl
mov
ss
out
xchg
jbe
lret
add
push
fwait
sbb
clc
mov
scas
inc
mov
icebp
stc
jg
sti
loopne
ds
lahf
imul
outsl
mov
scas
and
cmp
cld
movsb
pushf
lea
dec
jecxz
lds
add
cmp
orl
sbb
jnp
out
sti
outsl
mov
sub
and
or
mov
inc
add
lods
ret
call
jge
mov
or
xchg
pop
test
scas
fsubl
in
mov
cmpsl
repnz
andps
mov
lods
mulb
in
add
pop
mov
xchg
xchg
or
xchg
hlt
adc
imul
lret
cmp
ljmp
or
loopne
hlt
fldcw
jg
adc
pop
pop
std
xchg
cwtl
pusha
loope
dec
outsb
js
sub
and
movsl
and
jg
imul
cmp
stos
cmpb
jp
jge
add
in
loope
sti
add
dec
pop
rcll
sub
addl
jge
sbb
subl
jl
and
sbb
mov
cmc
xchg
add
jbe
js
and
test
mov
sahf
sti
push
shrl
xchg
sub
jg
dec
sub
xor
stos
roll
cwtl
aad
dec
mov
ficompl
das
mov
fs
push
xorb
push
cmp
and
cmpsb
jp
pop
hlt
push
andl
les
mov
mov
adc
repnz
and
inc
mov
add
or
adc
mov
sahf
xor
add
mov
lds
hlt
push
fdivr
adc
xchg
loopne
xor
mov
andl
mov
or
repnz
pop
addr16
sbb
push
aad
hlt
xor
pop
ficoml
cmpsl
out
js
inc
push
pusha
out
mov
and
inc
mov
cli
push
scas
pop
sbb
bound
int
and
pop
pushf
out
lods
sub
add
mov
icebp
aaa
incl
lock
cmp
enter
mov
test
or
insb
cs
adc
jl
mov
divl
mov
push
pop
cmp
mov
sub
push
dec
jb
xchg
add
les
pop
pop
decl
push
dec
das
mov
imul
ss
push
push
push
mov
jp
pop
and
rcll
xchg
cmp
aaa
jne
mov
dec
scas
cli
push
jns
adc
test
fidivrl
lcall
mov
pop
jecxz
test
and
addr16
call
or
sub
stos
pop
shlb
fcoms
push
in
add
mov
dec
decl
mov
jbe
int
ljmp
push
rolb
sbb
fwait
lods
rcrb
lods
scas
cltd
adc
fildl
mov
and
mov
adc
jo
and
test
push
jg
scas
fdivs
repnz
xlat
fisttpl
cs
xor
ds
orl
sarl
mov
jno
repz
call
mov
jg
incb
add
and
fs
cmpsb
call
sbb
outsl
fwait
xor
or
jmp
jl
xchg
shrb
dec
scas
jmp
aaa
jmp
in
fdiv
mov
insl
inc
adc
dec
add
ds
jmp
mov
mov
xorb
bound
xor
jbe
les
jne
push
sarl
push
xchg
hlt
call
clc
jg
mov
int3
fiadds
adc
stc
adc
fiaddl
std
sbb
lahf
inc
lahf
repz
out
dec
inc
xor
pop
pusha
fdivrs
aaa
jmp
inc
roll
sbb
std
add
outsb
or
mov
inc
cld
inc
and
push
sub
aam
xchg
cmpsl
addr16
xchg
aam
adc
or
sub
fwait
inc
mov
push
or
decb
jo
ja
add
stos
mov
add
cld
cli
and
lea
cmp
repz
mov
xchg
or
push
sbb
clc
cltd
and
fninit
mov
lea
mov
adc
pop
pusha
mov
loope
xchg
mov
outsl
js
shlb
pop
add
loopne
inc
popa
sub
mov
and
jl
fistpll
pop
leave
or
js
pop
rcr
sub
shlb
mov
push
cmpsb
push
cltd
mov
int
adc
sbb
inc
push
sbb
xor
push
repnz
push
add
pop
add
xchg
jo
jmp
and
clc
fisubrl
lods
movsb
sub
les
jmp
jg
test
pop
dec
pop
sub
inc
mov
cmp
fadds
mov
sti
pop
mov
sub
outsb
shlb
mov
add
add
or
cmp
inc
adc
rorb
xchg
mov
mov
xlat
dec
pusha
cld
jg
call
add
cmp
mov
inc
jp
and
inc
xchg
aaa
xor
sbb
sub
mov
shl
dec
xor
add
sub
push
xchg
fisubrl
mov
mov
aam
icebp
cmp
sub
mov
lret
shlb
icebp
pop
movsl
sbb
jb
lock
rcrb
lret
xchg
out
mov
loopne
aas
and
orps
mov
push
xor
inc
outsb
std
das
pop
add
fimuls
xor
jnp
inc
punpcklbw
sbb
loopne
aas
push
jge
ret
jg
mov
push
adc
mov
push
or
lock
push
sub
stos
and
xor
imul
cli
aaa
popa
fisubrs
andb
push
int3
dec
jbe
mov
push
pop
and
mov
aaa
push
mov
add
popa
inc
add
mov
popa
lahf
call
cltd
fmul
movsb
std
mov
pop
rorb
pusha
jbe
adc
mov
je
sbb
push
jo
mov
and
inc
mov
jmp
pop
rcll
and
aam
jl
enter
paddsw
sub
push
xor
add
or
test
push
test
jmp
sbb
inc
cmpsb
sbb
cmpl
repnz
or
das
sar
xor
imul
pushf
dec
scas
xorb
jbe
loop
fwait
loopne
adc
jge
icebp
popa
rolb
mov
add
push
push
clc
cs
mov
inc
xlat
dec
mov
sahf
negl
pop
push
lahf
dec
xchg
bts
loopne
test
dec
adc
ja
jecxz
sub
xchg
mov
test
jecxz
mov
ret
sbb
mov
testl
cmp
or
or
rcll
sbb
cld
pusha
enter
arpl
adc
push
ljmp
loop
shrl
push
in
or
pop
mov
js
or
mov
inc
out
push
aad
arpl
jecxz
setb
or
pop
jbe
movsl
and
add
jg
and
cwtl
cltd
mov
mov
add
push
rcrl
pop
lods
cli
lock
or
ljmp
pop
cmpsl
pshufw
call
adc
test
sub
in
xchg
in
mov
push
mov
js
in
decl
xchg
xor
sbb
pop
fisttpl
insb
mov
jns
lahf
hlt
lods
jo
aas
sub
std
push
in
cmp
or
push
popf
mov
or
cmp
dec
adc
dec
add
pop
pop
mov
push
mov
ret
push
or
testl
popa
push
mov
pushf
jns
and
mov
push
mov
lock
cwtl
sti
clc
xchg
sbb
and
imul
cmpb
xor
mov
dec
cs
jl
push
js
mov
insl
popf
cmpsb
inc
enter
jno
loopne
push
cmp
pop
xor
add
js,pt
loop
pop
jo
mov
rclb
inc
mov
sbb
dec
mov
sbb
mov
popf
mov
adc
jmp
movsb
mov
and
xorl
mov
mov
lods
pop
push
lods
xchg
pop
dec
mov
mov
jne
cmp
or
adc
fidivs
rcl
or
inc
in
mov
cs
popa
inc
add
out
inc
push
sbb
mov
push
xchg
cmc
pushf
js
or
dec
add
scas
into
mov
outsl
mov
adc
pop
insl
sbb
lds
xchg
icebp
add
sbb
pop
scas
sub
add
mov
pusha
cmp
mov
pop
cmp
pushf
push
mov
test
and
aas
xchg
mov
test
data16
jmp
insl
and
movsl
outsb
cs
mov
mov
adc
rolb
fidivrs
fs
xchg
jl
dec
iret
movsl
lds
sub
mov
inc
movsb
out
daa
sbb
pushf
repnz
loop
mov
lods
or
cmp
aas
or
ds
pop
insl
jb
arpl
or
les
xor
xor
sbb
xor
outsl
jg
test
sbb
add
ret
add
mov
ficompl
mov
mov
inc
adc
mov
mov
rcll
cmp
fld
cmp
jb
mov
push
adc
loop
xchg
mov
inc
mov
xchg
pop
jo
pop
mov
lahf
cmpsl
popa
cmp
and
xchg
subb
sub
add
add
ret
enter
xor
outsb
clc
mov
mov
sbb
jbe,pt
xor
lahf
cmp
and
orb
out
pop
sub
dec
ljmp
inc
inc
cs
sub
cmpsb
push
lock
andl
cld
jmp
jb
js
cmc
rorb
cmc
and
sbb
out
sti
xchg
jmp
rep
mov
insb
inc
xor
adc
or
inc
pushf
mov
mov
cmpsl
pop
jb
dec
jmp
or
adc
lock
shl
push
and
test
adc
or
fadds
pop
sub
ret
mov
and
and
adc
mov
rcl
adc
rcrb
and
enter
mov
jae
adc
push
mov
dec
pop
xchg
mov
cmp
jbe
leave
pop
add
push
xor
ret
xchg
jg
cmp
lcall
fstps
push
xchg
xchg
jmp
or
or
add
inc
mov
sarb
jnp
mov
rcll
jno
add
bound
push
std
pop
mov
dec
or
movsb
mov
jb
mov
popa
cmc
cmpl
ss
call
outsl
push
inc
push
or
add
aas
and
jmp
add
sub
es
or
cmp
fsts
fwait
stos
fistps
adc
mov
cmpsl
push
ljmp
pop
or
xchg
stos
hlt
push
mov
or
dec
rcr
faddl
pop
ljmp
inc
clc
pop
rcrb
mov
loop
sbb
push
cmpb
out
loopne
dec
mov
sysenter
push
int
xchg
icebp
xor
jp
mov
daa
loope
xlat
mov
stc
test
jecxz
or
insb
sub
or
mov
aad
es
jae
ror
or
sti
push
out
xchg
mov
sbbb
cmc
fcmove
sub
adc
loop
out
or
in
and
mov
scas
hlt
rorb
push
mov
and
xchg
xchg
gs
xor
xor
scas
test
mov
stos
stos
cli
inc
sbb
pop
and
pop
push
add
pop
add
popa
js
sub
xchg
push
push
adc
rclb
jle
jo
ret
adc
pop
mov
cmp
mov
jbe
and
int3
sub
sub
or
psubsw
sbb
and
pushf
inc
nop
sarb
fadd
mov
jmp
data16
das
imul
push
jmp
xor
call
mov
or
js
or
stos
sbb
dec
jle
rol
ss
inc
adc
lret
data16
sub
adc
aaa
insb
ret
pop
xor
fdivr
nop
push
cmp
insb
add
push
test
adc
jp
loope
sub
popa
cmpl
adc
repnz
xor
cmp
jo
push
sub
jmp
add
idivb
inc
lret
gs
xchg
pop
jo
push
cmp
sub
xor
inc
sbb
popa
cli
inc
adc
adc
pop
movsl
dec
andnps
filds
cwtl
ret
loop
and
or
ret
test
nop
test
add
and
dec
adc
inc
es
enter
movlps
cs
dec
add
fimuls
popf
ror
fiaddl
sbb
addr16
add
lcall
or
lods
pusha
orb
dec
data16
add
into
je
subb
rorb
jl
mov
sbb
shrb
pushf
add
inc
lock
lds
dec
aas
cmp
jp
adc
mov
cmp
out
rorl
hlt
xchg
sahf
enter
jb
clc
mov
jbe
imul
push
into
dec
insb
faddp
cmp
call
or
sub
push
add
add
inc
fsubrs
xor
xorl
push
add
inc
sti
pushl
jnp
add
nop
call
push
cwtl
sub
dec
sbb
loopne
add
movsl
mov
movsl
outsb
test
dec
or
inc
jecxz
hlt
or
icebp
pop
rcrl
sub
pushf
subl
test
rolb
sbb
push
sub
adc
pop
inc
or
mov
fiaddl
data16
mov
push
popf
cmp
shlb
rorb
scas
inc
rclb
icebp
sub
mov
das
sbb
rclb
lret
sti
and
add
and
es
mov
inc
jnp
rep
cs
ja
mov
rolb
or
addr16
add
xor
je
mov
push
js
inc
cs
xchg
inc
mov
call
and
push
add
call
aaa
xchg
xchg
xchg
push
mov
sbb
dec
push
mov
sub
xchg
testb
fmull
jle
push
fs
mov
sbb
test
jo
jno
jecxz
jp
js
or
add
inc
clc
push
in
ret
enter
or
cwtl
movd
xchg
and
fsubl
hlt
addr16
imul
mov
mov
stos
fisubrs
mov
xchg
sbb
pop
jo
pop
push
int3
cli
mov
pop
loope
mov
push
sub
adc
push
dec
ja
sbb
mov
test
mov
add
or
xchg
and
inc
push
sbb
sub
and
sbb
clc
popa
or
das
icebp
pop
adc
sub
push
insb
outsl
inc
sbb
cmpsl
cmp
imul
call
or
cmp
fisubrl
test
ljmp
sbb
scas
sarl
push
cmp
push
pop
dec
jl
dec
xor
xor
ljmp
repz
cmp
dec
outsl
inc
xorl
in
cli
jb
jg
mov
fldenv
lahf
adc
lcall
cmc
roll
pop
mov
pusha
movsl
sbb
cmp
or
mov
or
lock
mov
and
xor
push
or
je
sub
mov
adc
clc
push
test
notl
mov
ficomps
mov
cmpb
mulb
pop
sub
cmp
sbb
pop
lret
adc
fadds
sti
aaa
data16
xchg
sbb
lret
dec
in
jecxz
pop
clc
insb
sbb
mov
in
iret
xor
add
adc
adc
fcmovnbe
mov
in
cli
gs
xorb
adc
test
jo
jp
sub
insl
sub
lock
jp
and
imul
or
data16
pop
in
js
pop
adcb
mov
stos
jne
pop
arpl
or
pop
fwait
popa
sub
or
incb
mov
jg
or
mov
popf
nop
and
aam
cmp
or
add
mov
push
popf
pusha
in
insb
ja
das
jnp
inc
mov
bound
cmpsb
outsb
ljmp
xchg
xchg
dec
dec
cmp
decb
sub
ss
pop
cmp
neg
mov
data16
or
add
mov
testb
leave
and
sbb
xchg
push
pusha
mov
jo
mov
xor
sbb
sbb
lods
push
add
hlt
fucom
mov
lods
sbbl
or
jnp
add
leave
out
or
xor
xor
scas
xor
mov
sbb
xor
xchg
les
hlt
mov
mov
nop
jno
inc
push
xchg
push
cmp
jb
xchg
xchg
and
push
xlat
sub
dec
pop
cs
int3
push
loope
gs
mov
push
sbb
fmuls
adc
mov
cmp
scas
dec
outsb
push
jae
call
jmp
fiadds
insb
push
mov
lds
xchg
arpl
mov
inc
sub
pop
or
neg
mov
mov
sub
leave
into
add
fldt
jmp
xor
enter
cmc
cs
stos
and
jge
js
sbb
push
mov
outsl
movsb
test
fs
and
sahf
add
call
adc
jo
cmpsb
in
jl
pop
mov
mov
fstl
mov
rcrb
pop
sahf
jle
insl
pop
xor
cmp
add
lods
push
adc
adc
call
jno
mov
inc
ljmp
adc
movsb
sbb
test
mov
add
push
cmpsl
pop
fistpll
aam
cmp
je
js
hlt
clc
enter
add
lock
lods
out
clc
data16
lcall
out
gs
lock
aaa
inc
cmp
out
jo
mov
mov
jg
sbb
out
dec
jae
pop
rcr
call
mov
test
aam
mov
movsb
imul
pushf
sbb
outsb
adc
adc
adc
test
inc
cmp
dec
or
jl
jp
push
jl
stos
inc
jne
popf
sbbb
orl
adc
idiv
pop
sbbb
lods
inc
nop
xchg
xor
pop
loope
push
dec
sub
fisubl
mov
mov
mov
loop
pop
inc
cmp
inc
cwtl
jae
sarb
jbe
insb
orl
out
addl
sbb
cmp
push
fiaddl
jno
push
sarl
out
in
adcl
in
aaa
xor
jle
jb
and
mov
shl
inc
sbb
xor
les
scas
push
sar
leave
add
add
dec
jmp
mov
fsubrp
and
mov
shrb
jnp
adc
fdivs
mov
adc
fcmovu
sub
or
mov
and
push
mov
pushf
mov
inc
mov
call
test
lods
adc
jno
push
pop
xchg
test
xchg
mov
push
fimull
into
fiadds
movsb
mov
out
outsl
fcoml
mov
inc
loop
enter
push
jle
dec
cmp
nop
sbb
push
notb
pop
mov
xchg
subb
inc
loopne
outsl
imul
mov
adc
movsl
nop
xchg
adc
xor
fdivrs
or
inc
xchg
adc
or
or
adc
xchg
subb
fsubp
scas
xchg
idivl
inc
xorl
and
fs
ds
clc
sbb
xchg
inc
lock
clc
ss
adc
inc
pop
and
push
inc
jno
fadds
test
inc
jecxz
pop
sbb
mov
paddq
mov
mov
sub
movsl
add
int
push
xor
ret
add
dec
xor
stos
lea
add
fmuls
in
inc
sbb
pop
pop
lods
lret
and
aaa
or
dec
daa
xchg
sbb
popf
clc
add
and
xchg
sub
and
mov
adc
dec
adc
adc
adc
and
mov
sti
mov
ljmp
pushl
mov
and
push
test
add
jg
lret
push
fldl
and
shrb
lock
mov
add
sbb
mov
pop
fistpl
repnz
sahf
icebp
inc
mov
test
push
pushf
adc
and
fcoms
js
adc
fnsave
aam
cmp
push
ret
jbe
push
add
shll
sub
mov
mov
and
adc
mov
and
addl
hlt
sub
inc
mov
mov
add
mov
outsl
insl
adc
sbb
cmpsb
adc
test
lcall
or
loop
add
or
das
dec
jl
cwtl
out
test
test
enter
cmp
add
fsubs
fidivrl
test
test
cmp
shrl
push
les
inc
repnz
movsb
ss
and
or
and
or
push
int
loop
hlt
xchg
rclb
and
xlat
adc
cmpl
sub
and
shrb
adc
sub
pop
test
imull
adc
lock
std
push
or
xchg
ret
mov
dec
pop
jl
ret
mov
orl
icebp
inc
jnp
lcall
cmp
clc
pop
fwait
sub
sbb
push
adc
jmp
sbb
lods
dec
push
inc
in
insb
test
push
ljmp
aad
cli
push
aad
js
sbb
loopne
in
dec
stc
jb
ljmp
push
rolb
loopne
push
xor
and
mov
mov
cmp
imull
clc
not
push
mov
insl
sbb
xchg
jmp
and
lock
subl
inc
sbb
cmp
xchg
jg
pusha
cmpsb
jmp
cmpb
sub
ret
inc
int
ss
loop
push
cmpsb
fs
sbb
test
leave
push
lahf
hlt
sub
and
adc
adc
stos
and
mov
xlat
js
cmc
fs
add
cli
jb
sbb
push
inc
ss
dec
push
dec
mov
lahf
xor
jp
adc
fdivrl
into
addr16
aam
mov
and
leave
cs
loopne
cmpl
repnz
js
jbe
mov
fs
adc
and
ja
push
cmp
inc
cmp
int3
inc
and
orb
push
cmp
fdivrs
dec
pusha
int
aad
cmp
and
sub
adc
adc
out
out
test
sub
int3
insb
dec
jno
adc
test
mov
push
lret
ja
or
je
adc
pop
pop
fcompp
lcall
loope
fs
jge
and
stos
xchg
js
dec
insl
popa
mov
push
inc
decb
add
pop
outsl
push
mov
clc
movsb
jb
xor
pop
xchg
xchg
aaa
mov
sbb
insl
inc
mov
loope
adc
fsubs
adc
int
push
push
lcall
pop
popa
inc
push
and
inc
loope
adc
inc
adc
dec
sbb
mov
inc
lds
clc
inc
iret
test
sbb
subb
jle
movsb
xor
hlt
dec
das
adc
lret
jno
fists
fwait
mov
lret
and
aam
popf
mov
roll
push
ja
pop
das
clc
pop
clc
mov
mov
fisubl
sti
loopne
mov
out
push
or
loope
loop
add
popf
xchg
add
or
sub
or
movsl
pcmpgtw
fstpt
outsl
or
movhps
repnz
ror
xor
xorb
aaa
lcall
xchg
rolb
pop
test
out
mov
or
jbe
test
push
dec
or
subl
ljmp
pop
dec
push
sbb
jbe
ljmp
dec
cmp
int3
les
in
jmp
mov
clc
push
xor
pop
pop
xchg
call
das
shlb
xchg
stos
inc
jb
or
add
mov
rolb
pop
nop
jle
es
ss
cmp
inc
mov
movups
mov
lahf
sbb
addr16
jle
lock
mov
mov
aaa
sub
out
mov
ljmp
mov
nopl
and
jns
in
mov
pop
sub
out
dec
pop
push
popa
jle,pt
and
fs
jb
mov
adc
xor
movsb
push
adc
ljmp
adc
or
rolb
push
test
orb
popf
sbb
inc
and
pop
ret
xor
inc
rcll
mov
mov
or
xchg
pop
loopne
loope
pop
cmp
adc
cmp
mov
add
pop
mov
cmpsb
jnp
jle
fidivs
aad
loopne
popa
cld
imul
xchg
hlt
lods
ljmp
add
movsl
pusha
stos
mov
jp
dec
xchg
inc
pop
out
cs
mov
mov
test
enter
cli
ljmpw
jg
mov
or
mov
enter
insl
jp
mov
push
sbb
leave
orl
mov
mov
cmc
outsb
fdivrs
xor
ret
stc
loopne
out
mov
fdivr
shll
ret
adc
jno
xchg
aam
pop
cmc
xchg
ret
fmuls
push
ret
push
xchg
mov
popa
outsb
lds
push
cmpsl
call
inc
rolb
test
dec
and
clc
add
sbb
dec
sub
pop
sub
pop
pop
dec
ss
and
push
iret
pop
lret
push
or
xchg
xor
outsb
and
push
ss
subl
push
dec
enter
sub
cmpsl
cmp
inc
pop
sub
push
rol
push
fiadds
out
lret
lds
mov
push
sub
sbb
aas
lods
movsl
andb
adc
scas
aas
in
push
std
xchg
ds
ret
fldt
loopne
lock
adc
outsl
xchg
push
push
lock
push
rorl
add
push
add
rcrb
call
push
into
scas
xchg
imul
or
inc
inc
mov
lret
sub
jg
sbbb
mov
adc
pop
ret
mov
nop
dec
sbb
or
clc
icebp
pop
nop
icebp
addr16
xchg
sarl
subb
hlt
and
jge
not
fildl
shlb
fs
rcrl
add
fcoms
cmc
icebp
pop
decl
mov
aam
or
movsb
cmp
pop
bound
das
cmp
lcall
or
test
test
inc
mov
push
or
repz
lds
int
inc
push
aad
and
mov
mov
cs
mov
adc
mov
call
sub
shrb
pop
fidivs
dec
or
or
mov
imul
or
outsl
jp
ficoms
dec
push
mov
clc
pushl
push
mov
add
bnd
adc
cs
dec
cld
or
push
pop
cmp
sbb
mov
js
das
stos
lcall
nop
and
scas
mull
xor
and
mov
and
cmpb
dec
shrb
or
clc
outsb
dec
add
jecxz
rolb
lock
loopne
lock
roll
imul
adc
sbb
out
pop
rclb
push
cli
inc
push
ljmp
push
adc
lods
jnp
shll
movsl
push
add
jmp
outsl
cmp
pushl
aad
movsb
push
mov
pop
pushl
loope
add
or
push
adc
popa
jbe
pop
push
mov
sbb
das
push
les
push
mov
inc
sub
icebp
dec
push
out
jl
or
mov
mov
fcmovu
sahf
sbb
out
ret
inc
pusha
push
es
roll
cwtl
mov
push
inc
ret
lods
cmc
dec
xchg
popf
mov
scas
adc
inc
xchg
cmp
adc
hlt
jae
decb
push
aas
std
cmp
mov
pop
or
xchg
push
test
stos
or
or
cmp
loop
push
pop
xchg
sbb
pop
jo
pop
mov
push
mov
fs
push
test
pop
fidivrl
and
cmp
les
pop
pop
jp
xor
jbe
ss
lahf
push
mov
punpcklbw
lock
mov
js
scas
sub
jnp
push
push
lret
dec
imulb
pop
jle
and
and
loop
add
dec
hlt
jg
test
mov
cmp
or
push
cld
xor
xor
add
push
or
ret
inc
push
or
rolb
fbstp
testl
or
scas
andl
out
adc
add
adc
fstl
xchg
push
sbb
test
insb
into
and
jo
add
cmc
mov
ljmp
mov
in
pop
leave
dec
dec
arpl
dec
out
sub
mov
ljmp
adc
mov
faddl
cmp
adc
lahf
cmpsb
mov
push
in
lds
je
ljmp
cmp
push
movsb
jle
push
call
jp
cltd
sub
and
jg
pop
cld
and
or
popa
xorb
je,pt
inc
cli
mov
aaa
jo
jbe
fdivp
andl
addr16
loopne
ret
addl
pop
or
js
xor
and
inc
clc
add
test
inc
push
daa
shlb
jecxz
addr16
cmpsb
arpl
testb
add
outsb
js
inc
fiaddl
sbb
sub
js
rolb
icebp
pusha
xor
mov
les
sub
and
pop
lahf
out
mov
shl
imul
lock
pop
cmp
filds
test
cmovo
add
xchg
sub
mov
or
clc
negb
adc
das
xchg
jecxz
adc
pushl
jbe
test
inc
and
add
sarb
es
pushf
loop
cmpsb
outsl
ret
sbb
mov
leave
push
jmp
lahf
mov
popa
mov
rcrl
or
xchg
pusha
mov
xchg
mov
xor
dec
adc
jb
mov
dec
push
es
insl
push
dec
jle
add
adc
aad
sub
imul
nop
adc
mov
insb
mov
and
mov
imul
xor
jp
cmp
ja
pop
outsb
and
movl
or
into
jecxz
fcomps
mov
or
jecxz
dec
jmp
fisttps
pushf
cs
jnp
test
rcrb
cs
nop
jo,pn
dec
aas
call
mov
stc
sub
lret
or
daa
fmull
movsl
roll
add
sahf
jo
ficomps
orl
fs
lods
xchg
cli
rorb
imul
stc
dec
mov
loopne
stos
xchg
jns
les
inc
xchg
es
push
and
aas
adc
rclb
orl
popa
ljmp
sub
leave
scas
mov
add
hlt
enter
sbb
jmp
mov
mov
mov
inc
shll
ds
xor
pop
mov
mov
pop
loop
push
sub
or
divl
mov
mov
and
dec
testb
data16
icebp
xchg
mov
xor
jb
xchg
lods
popf
mov
lret
mov
xchg
or
mov
fisttps
sbb
and
lcall
iret
aam
mov
addl
and
adc
fimull
movsb
in
xor
insl
cmc
aad
and
mov
sbbb
ljmp
and
clc
daa
xchg
push
and
fldl
fsubs
push
cli
pop
loopne
dec
cmp
clc
jo
or
dec
inc
xchg
mov
cs
inc
rcrb
jbe
sbb
sbb
and
pop
mov
xchg
mov
xor
jae
loope
or
xchg
int
add
pop
mov
push
xchg
sbb
cld
idivl
add
iret
push
js
add
mov
je
or
and
mov
add
dec
sbb
xor
ss
lods
cwtl
mov
mov
pop
xchg
sub
jae
jg
or
lds
popa
out
mov
jb
cmp
lcall
jge
lret
add
xor
inc
push
pushf
lret
jmp
push
mov
adc
jnp
adc
roll
add
mov
shrb
xchg
int3
mov
ja
ljmp
aas
xor
jp
inc
pop
sarb
dec
pop
or
push
jo
sbb
inc
sarl
add
dec
pushf
cs
mov
loope
dec
popa
sub
add
xchg
scas
hlt
es
mov
jp
popa
mov
aaa
jecxz
lds
std
rorb
jl
cmp
sbb
mov
mov
adc
out
in
adc
fs
pop
xchg
fistpll
xor
push
adc
test
aad
ja
sub
rolb
mull
mov
pop
test
mov
pop
jle
mov
pusha
mov
mov
add
jb
ds
sbb
aad
arpl
add
add
rol
insb
movsl
loop
inc
or
cmp
lcall
add
jbe
and
add
mov
aas
std
push
pop
data16
lods
xor
testb
mov
mov
sub
and
rorl
xor
jg
jg
push
sbb
or
les
sbbl
movsb
add
xchg
mov
rolb
fmull
repnz
sub
addb
mov
test
mov
cmp
and
loopne
int
dec
icebp
xor
sub
dec
dec
jbe
and
mov
mov
lret
pop
mov
xor
gs
xlat
pop
inc
in
hlt
repnz
xor
cld
cmp
insb
add
out
jp
push
incl
add
cmp
loopne
fistpll
xor
pop
adc
sbb
fbld
iret
dec
subb
xor
fidivs
mov
adc
sarl
mov
pop
dec
mov
cld
movsb
adc
in
mov
movsb
and
add
addb
push
loope
cmpb
inc
repz
and
imul
outsl
clc
push
mov
adc
push
pop
pushf
mov
ret
add
pop
rclb
sar
mov
adc
push
cmp
dec
call
fisubs
dec
insb
mov
add
sbb
dec
lods
mov
fwait
jle
rorl
pop
subb
jbe
mov
xor
out
call
test
add
push
xchg
push
jmp
imul
mov
xchg
repnz
movsl
mov
add
lahf
out
jp
pushf
xchg
jns
xchg
mov
ds
xor
paddw
int3
gs
out
ficomps
mov
and
test
andb
inc
mov
shrb
ljmp
lock
mov
pop
orb
movl
popa
mov
arpl
xchg
cmpsl
inc
scas
mov
mov
pop
push
dec
fisubrs
rclb
or
xlat
pusha
mov
push
add
filds
mov
xor
stc
xchg
pusha
and
popf
jb
dec
xor
mov
dec
cmp
nop
enter
inc
or
dec
push
sbb
in
xor
add
jo
shlb
enter
push
leave
jne
incl
xchg
iret
inc
fstps
dec
sar
clc
rolb
pop
or
mov
xchg
lret
jge
imul
outsl
push
orl
xchg
repnz
lock
sbb
icebp
divb
mov
jle
adc
fiadds
inc
setnp
xchg
push
sahf
push
ret
xchg
stos
adc
pop
out
mov
cwtl
movsl
mov
mov
xor
fistpl
push
rol
sub
mov
mov
repz
or
outsb
pop
decl
adc
sbb
or
aam
pusha
fidivs
loop
mov
pop
in
jo
lret
cmp
jb
cmp
mov
clc
aaa
pop
rcll
xchg
xor
cwtl
pop
pop
xor
mov
or
push
cmp
or
xchg
stos
lods
sbb
inc
push
adc
cs
pop
dec
mov
in
pop
jno
hlt
and
push
or
push
bound
filds
adc
out
lods
inc
sbb
mov
ss
loopne
mov
inc
sub
pusha
sub
aam
testb
or
cld
cmp
or
or
jb
cmp
gs
or
fcomip
jge
sub
movsb
add
mov
loop
jne
xor
add
jle
in
or
movsb
add
repnz
idivb
and
out
out
pop
mov
pop
or
or
inc
mov
sub
sbb
mov
mov
or
test
jo
jb
jmp
ret
adc
scas
sti
lahf
and
or
mov
xor
mov
mov
dec
cs
cmp
push
xchg
es
fisttps
inc
bound
icebp
in
inc
jp
popf
jp
adc
lock
and
pusha
js
xchg
sar
aas
inc
ja
lret
inc
hlt
cmp
push
inc
pop
dec
js
movsl
mov
sub
shll
xchg
inc
or
push
rclb
aas
fcmovnb
inc
add
ljmp
addb
es
callw
jbe
xor
mov
fcmovnbe
xor
mov
pop
lods
mov
decl
mov
loopne
xchg
mov
dec
loop
jb
xchg
jo
lahf
lret
testb
cmp
sbb
addr16
cmp
enter
scas
add
add
xor
std
adc
xor
aas
and
stos
shrl
out
incb
sub
daa
sbbb
xchg
mov
inc
inc
fwait
lea
ljmp
or
and
sbb
pop
sbb
stos
ret
mov
icebp
shufps
enter
scas
mov
inc
icebp
mov
scas
mov
mov
adc
push
sub
mov
or
mov
incl
leave
or
cmp
xchg
dec
aas
adc
out
cmp
xor
inc
cwtl
mov
push
sub
mov
std
xchg
jl,pt
enter
sbb
cmp
inc
or
xchg
and
test
or
pop
push
mov
adc
aas
push
call
fmuls
mov
pop
push
sbb
or
out
pop
jno
xor
add
add
test
shl
lcall
shlb
mov
popf
in
xchg
aaa
mov
push
sbb
xor
add
faddl
scas
pop
pop
cld
sub
or
push
cmp
loopne
lods
pusha
mov
scas
dec
fcmovu
mov
adc
dec
cltd
jle
cmp
sub
sub
sub
shr
cmp
jg
addl
pop
mov
test
bound
mov
add
mov
pop
mov
fdivr
xor
dec
out
pop
xchg
add
leave
dec
mov
std
call
roll
jo
sarl
or
das
ljmp
cwtl
add
decb
fistpll
sahf
stos
mov
jne
push
in
pop
test
mov
pop
pop
push
mov
je
mov
imul
adc
mov
daa
mov
inc
lods
add
sbb
aad
aaa
out
fadds
push
pusha
adc
mov
sub
inc
fistl
dec
and
data16
add
mov
mov
les
pop
repnz
sarb
mov
loop
sbb
xor
dec
call
fdiv
xchg
bound
imul
or
and
int
mov
and
repz
cmp
add
or
insl
in
out
mov
test
bound
and
fldenv
dec
mov
pop
rorb
cmp
push
push
fwait
into
addr16
inc
adc
dec
cmc
stc
inc
pusha
pusha
outsl
push
cmp
cmc
pushf
js
fcos
cli
movsb
std
adc
adcb
fadds
ljmp
inc
out
fmuls
mov
xchg
bound
pop
mov
scas
mov
orb
mov
pop
lea
repnz
rcrb
sub
xchg
pop
bts
sbb
call
stos
loopne
test
inc
stos
mov
loope
and
jne
jbe
insl
pop
push
dec
xor
sbb
dec
rcrb
or
aas
ficoml
add
ds
stc
into
sub
pop
inc
cmp
arpl
fldenv
mov
pop
sub
pop
adc
mov
lds
and
mov
movb
fistps
das
adc
push
pusha
fdivrl
cmp
ja
pop
or
xchg
fstpt
orl
fisubl
push
mov
sub
mov
jbe
pop
addr16
push
or
mov
js
mov
jo
sti
and
pushf
add
rcrb
or
andl
call
adc
mov
mov
test
mov
push
into
sub
mov
test
inc
aaa
inc
andl
mov
add
pop
push
mov
dec
frstor
pushf
rclb
cmp
push
add
lahf
dec
pop
or
adc
aaa
aas
pop
add
adc
sub
imul
jg
cli
lock
xchg
mov
inc
test
adc
bswap
inc
fmull
inc
ffreep
xadd
mov
out
add
call
dec
je
sbb
fucomi
insb
jle
addl
loopne
dec
mov
jmp
nop
push
and
pop
aam
jo
icebp
or
aaa
inc
dec
insb
out
js
arpl
inc
subb
adc
add
jg
and
out
fdivrl
cwtl
movsl
stos
jmp
mov
push
js
mov
lcall
decl
icebp
mov
pop
lcall
jno
inc
xchg
daa
fildl
mov
sub
and
fisubs
ret
stos
dec
loop
add
bound
or
mov
mov
lea
add
add
enter
mov
cmp
mov
add
test
jecxz
fwait
clc
ljmp
cmp
decl
pushf
sbb
add
sub
jp
pusha
lods
xchg
adc
pop
mov
gs
push
loopne
xor
loop
cmpsb
pop
je
or
adc
sub
mov
cmpsb
dec
cmp
mov
stc
mov
inc
sahf
push
in
test
mov
std
add
fiaddl
mov
jnp
inc
aam
cmp
adc
adc
sbb
sbbb
push
sub
push
or
subb
inc
clc
cwtl
push
push
jge
pushf
ss
inc
ret
xchg
andb
roll
call
and
push
inc
sub
mov
pusha
dec
and
xlat
fstp
or
inc
and
repz
clc
bound
ljmp
lea
scas
push
or
jp
jle
mov
cmp
popf
mov
cmp
fwait
inc
out
es
sahf
subb
pop
mov
adc
cli
xchg
push
rcll
out
sub
jbe
hlt
fcomi
push
scas
sarb
in
inc
into
repz
jnp
pop
adc
outsb
scas
mov
cld
add
mov
pop
mov
ss
mov
xor
dec
cmpsb
sbb
jo
push
pusha
cmpb
inc
scas
adc
test
sub
jl
aas
adc
incl
cwtl
fisubl
inc
or
sub
xchg
sub
xor
add
clc
lcall
js
jbe
sub
popa
outsb
loopne
in
cmp
call
sahf
mov
testb
js
incl
cli
ljmp
loop
ja
clc
inc
out
or
es
shr
aaa
xor
xor
cmp
ret
dec
clc
mov
lock
dec
cmp
pusha
rclb
or
add
out
cmp
cmpl
mov
loopne
jbe
test
xchg
nop
pop
rcr
inc
push
clc
dec
cld
lcall
insl
mov
mov
and
popa
sbb
xchg
sbb
cwtl
insb
inc
and
test
bnd
xlat
outsb
adc
js
pushf
sahf
aad
loop
add
hlt
jnp
popaw
dec
outsl
sub
xor
fcompl
call
push
loop
push
cltd
test
mov
fs
movsb
or
cld
pop
and
pop
pop
push
add
xchg
adc
sbb
call
push
loopne
hlt
cmp
sub
inc
pop
ljmp
push
and
add
std
sbb
or
adc
fists
adc
test
pop
hlt
xchg
cltd
xchg
int3
cli
pop
out
sbb
cmp
cmpsb
mov
mov
popa
gs
hlt
or
mov
and
and
xchg
mov
les
mov
lods
xchg
cltd
pushf
ljmp
cmp
out
inc
push
mov
outsl
fistpll
in
xor
xchg
adcb
je
es
add
bound
and
or
fwait
jle
mov
sahf
cmpsb
popa
mov
cmp
ret
jo
fcmovnb
ja
roll
movsl
sahf
add
movsl
aad
sub
lcall
je
aaa
push
jecxz
imul
je
add
mov
sahf
cmp
ret
ljmp
pop
je
push
das
js
add
cwtl
je
dec
cmc
ljmp
sbb
add
ds
je
ljmp
adc
popa
icebp
sbb
mov
add
adcl
pop
jp
es
mov
dec
fidivrl
add
call
mov
pop
je
mov
rcll
fisttps
es
and
sub
lds
sbb
lcall
sbb
insl
sbb
or
mov
or
fwait
jle
adc
int
repnz
in
add
fadd
push
cld
stos
push
push
mov
roll
movsb
aas
data16
or
mov
outsl
int
mov
push
test
nop
add
mov
mov
icebp
jb
jecxz
or
inc
popf
mov
push
mov
fbld
movsb
ds
notl
fidivl
xor
jp
xchg
mov
add
mov
add
mov
jg
adc
add
add
popf
push
jp
and
rolb
xchg
push
popa
idiv
add
fdivs
sbb
test
dec
shlb
jecxz
adc
out
add
scas
movsb
mov
lret
pop
fcoms
stc
loopne
movsl
xchg
sub
dec
xor
insb
jg
clc
push
push
mov
fiaddl
in
xor
jb
mov
out
les
pop
lcall
xlat
pop
push
push
xor
lcall
and
mov
mov
mov
bnd
std
xor
add
lock
sbbb
cmp
jp
jb
daa
xor
cmp
sbb
xor
std
test
out
push
mov
shll
inc
in
sub
inc
in
sbb
mov
add
mov
pusha
mov
and
pop
or
mov
xor
dec
loop
mov
lods
pop
add
xlat
in
cmp
stc
loop
out
xchg
xor
inc
clc
jbe
psllw
ds
dec
push
mov
ja
test
adc
and
cld
fists
sti
dec
jp
dec
cmpb
mov
mov
and
inc
fistpl
xchg
or
arpl
and
pop
cld
or
jge
or
or
paddb
rol
pushf
out
loope
inc
fbld
lahf
fwait
adc
aam
mov
jae
mov
push
pop
cld
adc
mov
cmp
xchg
cmp
icebp
and
ljmp
jle
decb
dec
sbb
out
fs
dec
dec
push
fcmovnb
xchg
mov
push
mov
aad
push
lock
rol
add
inc
scas
fsubs
jmp
mov
enter
das
clc
add
or
mov
roll
and
add
aad
shlb
ds
mov
sub
jp
imul
rcr
lods
jbe
in
adc
jns
jo
push
jnp
es
movsb
sub
or
rcrb
fsubl
cmp
stos
xchg
mov
imul
push
and
jo
sub
jo
cmp
add
dec
mov
or
rcrb
std
push
pmulhuw
mov
pop
cmpsb
xor
jb
pop
ret
das
js
and
xor
jb
xchg
push
pop
add
sub
scas
rcr
in
pop
sbb
push
aad
lods
mov
pusha
push
test
rcrb
div
or
mov
insl
arpl
push
movsb
push
or
lds
mov
sub
cli
shr
mov
and
jnp
call
xchg
test
test
ljmp
stos
add
pusha
jecxz
int
outsb
push
xor
enter
push
xor
jo
int
and
and
jne
loope
and
cmp
sub
je
inc
ljmp
add
inc
mov
loope
adc
cmp
pop
js
pop
sbb
out
lock
call
xchg
adc
sar
jnp
orb
xchg
scas
push
inc
loopne
adc
lea
add
push
lock
out
sub
and
clc
imul
add
and
enter
aam
clc
cs
in
ja
sbb
pop
std
sarl
pop
pusha
cmp
sub
sbb
sub
mov
sub
add
pop
cli
outsl
je
movsb
and
stos
in
lcall
loopne
adc
in
dec
add
clc
hlt
pop
push
outsb
stos
xchg
mov
sbb
or
test
cmpsb
and
sub
jle
xlat
idivb
and
fistl
cs
dec
inc
fsubrs
or
mov
push
mov
pop
push
insb
cld
pusha
push
popa
pop
out
jl
fsts
adc
dec
mov
fs
data16
xchg
fyl2x
outsl
outsb
and
clc
ds
dec
bound
adc
mov
test
rcl
xchg
es
and
xchg
and
mov
pushf
dec
fistl
cld
push
mov
lea
cmpsl
xchg
shl
mov
sti
dec
or
mov
les
add
inc
dec
pop
test
loopne
adc
out
in
sahf
outsb
cmp
mov
clc
push
aas
dec
das
mov
gs
ss
nop
hlt
mov
cwtl
xor
pop
and
dec
stc
ret
inc
add
inc
dec
addb
adc
aas
sbb
xchg
sub
add
mov
jmp
mov
push
in
mov
mov
xchg
in
xchg
or
and
lock
ret
and
inc
and
pop
xchg
mov
mov
das
pop
mov
jmp
push
pop
cltd
inc
mov
dec
outsb
dec
testl
nop
jmp
les
push
xchg
ss
sbbl
push
mov
dec
push
cs
cmp
jo
xchg
imul
pop
iret
mov
mov
repz
pusha
fmuls
xor
dec
shll
stos
inc
mov
test
push
aam
or
sub
clc
or
js
inc
ret
jno
xchg
add
inc
add
fcom
jp
sub
jecxz
sub
scas
cmp
xchg
add
inc
popa
ja
test
ret
xchg
add
mov
jmp
sti
dec
jne
popa
sbb
inc
or
cmp
sarl
xlat
mov
push
inc
rorb
push
les
ficoml
call
lss
pop
jmp
pusha
int
scas
mov
das
dec
jo
aad
ds
stos
sub
enter
add
cmpsb
clc
cld
cmp
or
sbb
faddp
aas
sahf
mov
cmp
mov
push
es
mov
push
xor
sti
jmp
sbb
push
mov
sbb
ja
dec
scas
stc
pop
sub
sbb
pop
push
mov
imul
cmp
jl
inc
inc
adcl
sbb
or
or
pop
hlt
mov
addr16
sub
cmc
aas
jmp
in
aas
mov
ja
mov
cmpl
jno
sahf
pop
adc
jg
popa
mov
incb
push
in
rcll
inc
push
sahf
jnp
jp
jmp
test
outsb
mov
sahf
mov
pop
push
add
in
sub
stos
jbe
scas
lods
dec
xchg
cmp
xchg
cmp
mov
push
ja
jle
or
jae
push
pop
xchg
fsubr
sbb
xor
mov
ficompl
cmp
push
mov
mov
rorl
call
ds
cmp
cli
jle
jne
and
mov
ss
push
mov
inc
fidivrs
pop
xchg
ds
push
adc
mov
aam
aad
jne
ss
or
pop
out
into
jmp
pop
xor
lcall
daa
out
rclb
mov
add
add
outsb
mov
in
sbb
lcall
lcall
inc
shl
xchg
and
ret
xor
out
push
push
push
test
scas
lar
or
xchg
sub
adc
aaa
aas
clc
jo
push
or
push
and
mov
pop
inc
and
mov
in
sahf
nop
and
mov
insb
sbb
add
sbb
iret
out
sub
lock
mov
stos
ljmp
lahf
xorb
push
stos
dec
sbb
out
adc
xchg
cltd
call
mov
cmp
lds
or
aas
lcall
fldl2t
add
pop
add
push
push
inc
aaa
adc
xor
xchg
cwtl
xchg
mov
jbe
jmp
scas
cmp
pushf
dec
mov
jno
push
rorl
aam
es
xchg
jg
inc
pop
adc
push
xchg
inc
cmp
jmp
jmp
cmpsb
xchg
and
mov
sbb
in
punpckhbw
ret
mov
lret
mov
mov
test
pop
jne
sub
scas
imul
out
lock
jb
push
scas
incl
sub
push
mov
outsb
insb
or
and
aam
jne
or
jnp
cld
dec
push
push
push
cmpsb
xor
pop
insb
mov
sbb
and
subb
adc
cmpsb
xlat
inc
ret
adc
pop
ljmp
mov
push
idivb
fcomps
mov
nop
pusha
sbb
ficoms
cmp
insb
or
pop
dec
jbe
cmp
cmpsb
jbe
jge
lcall
xor
or
ljmp
sub
xchg
enter
test
test
jmp
adc
sub
fneni(8087
xor
mov
mov
into
sbb
sub
sub
add
movsl
sahf
cmp
das
call
jg
out
adc
cmp
nop
ja
mov
jg
scas
push
jecxz
jge
mov
push
dec
pop
mov
jl
mov
loopne
test
fwait
sub
jecxz
sbb
pop
cs
xor
fs
lds
jmp
adc
test
ficoml
je
jl
inc
push
pop
adcb
xchg
mov
popl
aaa
std
push
inc
mov
cs
inc
xor
jg
sbb
add
lea
mov
pop
sbb
mov
sbb
jg
ja
cli
mov
rcrb
call
pop
addb
push
ljmp
rorl
mov
pop
aaa
push
aad
inc
sbb
sbb
js
or
mov
fdivrs
pop
aam
out
mov
mov
mov
sub
jg
add
je
int3
mov
cld
xor
sbb
jl
sub
and
iret
and
inc
or
sbb
and
nop
inc
adc
rclb
sbb
pushf
mov
pop
push
imul
xchg
out
sahf
jmp
push
push
pushf
mov
sbb
lret
clc
xchg
loopne
decb
xor
call
adc
int3
cs
or
insb
cmp
push
adc
movsb
cmpb
lret
sbbl
cs
mov
add
aad
push
mov
mov
sub
mov
enter
loop
gs
pop
pushf
push
aas
dec
orb
mov
scas
xor
mov
dec
xor
push
es
adc
lock
mov
cmp
imul
movsb
test
inc
enter
jbe
and
or
je
cmc
inc
or
fisttpl
and
push
popf
es
jns
mov
rcrb
push
js
ds
test
insb
popa
inc
xorl
pusha
orl
mov
test
cli
mov
pop
lods
mov
push
and
and
adc
pop
test
scas
ds
push
dec
add
adc
push
adc
lock
cld
mov
sbb
jecxz
sub
mov
lcall
xlat
pop
mov
lcall
mov
iret
sbb
push
add
outsl
adc
add
push
movsb
add
add
aas
andb
inc
and
push
loop
push
dec
idivb
in
out
test
clc
mulb
jg
and
push
mov
shlb
clc
pop
icebp
loope
xchg
movsl
add
adc
xchg
loope
inc
mov
daa
icebp
pop
push
dec
mov
and
mov
jo
jp
and
sub
pop
sbb
dec
push
mov
cmp
sbb
pop
add
adc
es
pop
push
xchg
mov
lret
pop
in
scas
inc
test
cs
cmp
pop
adc
and
pop
sbb
add
mov
mov
fwait
pushl
xor
ret
hlt
push
add
mov
xor
add
fdivrs
xchg
jb
movsb
inc
leave
or
hlt
add
in
add
xchg
inc
in
pop
fldt
or
push
das
shlb
xor
into
in
incb
adc
push
pushf
gs
ljmp
adc
add
inc
fimull
int
jg
sub
sbb
inc
mov
sub
dec
les
or
aad
fmuls
cmpsl
out
add
mov
fwait
mov
arpl
push
or
and
add
loop
sahf
cli
and
lock
xorb
pushf
cmp
pop
mov
shrb
inc
cmp
sub
pushl
pop
xor
inc
aaa
sbb
adc
jle
iret
push
lock
xor
pusha
push
push
sarb
push
insb
test
mov
das
add
add
push
test
push
push
xor
jnp
xchg
add
popf
mov
inc
pop
lea
mov
ljmp
push
push
pop
adcl
pop
pop
lret
lods
inc
and
adc
orb
pop
push
fdivs
dec
jb
cwtl
push
punpcklbw
sub
lea
and
sub
jb
out
fnstcw
jge
jo
ljmp
and
add
xor
mov
lea
loopne
lahf
or
mov
push
inc
adc
sbb
jle
sub
mov
and
add
sarb
jecxz
repnz
lcall
xchg
jbe
inc
inc
push
pop
icebp
outsl
jle
push
dec
shlb
inc
mov
outsb
push
adc
fsubs
arpl
out
andb
push
or
jne
pop
mov
or
push
mov
dec
movsl
sub
push
in
and
xchg
pushf
shll
inc
cmpsb
sub
lock
shl
push
adc
cld
test
dec
ja
fistpll
and
add
cmp
mov
mov
mov
hlt
cmp
and
inc
in
aaa
movsl
jmp
xchg
das
add
and
add
mov
or
andb
loop
mov
sub
clc
test
mov
shl
dec
mov
insl
incl
mov
pop
xor
je
xchg
icebp
sub
adc
out
stos
or
mov
jle
and
fwait
jmp
adc
cs
movsl
mov
sub
das
insl
or
repz
push
xchg
cmp
in
js
loope
fbstp
and
push
jg
pop
int3
or
aaa
and
in
inc
dec
push
and
jno
xor
push
push
xor
ja
pop
sub
shll
adc
rolb
dec
arpl
test
adc
mov
mov
lods
sbb
daa
or
cwtl
sarb
xor
or
sbb
jns
cmp
sbb
daa
fidivs
push
mov
out
nop
pop
test
add
xor
adc
adc
inc
test
and
mov
lock
xor
mov
test
cmpsl
in
and
jne
movsl
mov
push
call
push
xchg
sti
mov
push
loopne
xchg
dec
jg
sarb
or
mov
imul
push
imul
mov
lret
xor
push
nop
lcall
pop
jne
add
jo
xor
ss
sbb
push
movsb
cmp
call
adc
push
int
xchg
add
mov
sbb
scas
bound
test
cmp
stos
dec
jp
lods
ret
lahf
and
mov
inc
lcall
scas
int
jmp
lods
mov
mov
hlt
mov
enter
sub
xchg
es
sbb
imul
je
and
cmp
daa
xor
sub
stos
gs
lods
in
dec
rolb
sub
cld
inc
lock
mov
pop
ret
mov
daa
push
jl
out
or
cmp
and
dec
add
roll
jecxz
pop
cld
hlt
fldt
jo
cmp
xchg
adc
es
pop
jl
jb
inc
test
adc
out
leave
lret
fwait
out
push
mov
ret
push
clc
pop
xor
mov
jl
scas
jnp
ss
dec
cli
or
das
sub
cld
adc
pushf
pop
sbb
test
icebp
pop
cmc
xchg
test
out
imul
lock
or
sbb
sub
xorl
je
pop
inc
in
push
add
and
in
pop
fsubp
mov
jo
cmpsb
pop
fisubl
or
fs
or
dec
icebp
insl
xchg
mov
shlb
adc
adc
adcb
xchg
mov
sub
xor
sahf
push
add
pop
push
std
fs
inc
aaa
jo
mov
rorb
cmp
das
sbbb
add
imul
mov
cmpxchg
call
fcompl
cmp
jno
mov
outsb
mov
out
stos
clc
fdivrs
fstpl
jp
loop
xor
sub
inc
xor
mov
sub
je
jno
outsb
jp
or
or
rcrb
sarl
and
cmp
add
dec
or
or
shll
and
xchg
addr16
add
testb
stos
mov
jo
add
ficompl
loop
mov
dec
loop
rcrb
jle,pn
ret
fbld
and
inc
test
in
pop
test
pop
lret
dec
filds
in
inc
imul
nop
jmp
pop
or
mov
add
out
outsb
or
fsubrs
pop
jp
pop
inc
rcr
xor
mov
out
fcomip
jg
inc
imul
inc
pop
rcr
mov
shlb
push
std
dec
movsb
or
mov
cmp
aam
push
push
loope
add
loop
cld
mov
call
mov
faddl
jecxz
pop
xor
push
push
dec
cmpsb
je
or
inc
add
xor
in
lahf
push
inc
mov
inc
rcr
and
jg
mov
push
adc
xor
stos
stos
mov
addb
test
jbe
jae
aaa
addb
xchg
cltd
or
test
decl
ljmp
inc
mov
cmc
or
ficoml
lods
mov
mov
jno
push
add
imul
popa
inc
push
std
ret
mov
mov
dec
rcll
pusha
leave
and
mov
xchg
sub
jecxz
pop
xor
int3
bound
test
and
bswap
daa
jbe
mov
ljmp
nop
or
add
cmpsb
mov
cmp
cld
add
pop
xchg
mov
movl
and
imul
mov
andl
popf
xor
and
xor
mov
add
adc
popa
ja
bound
cmp
testl
lods
mov
mov
call
and
jnp
push
xchg
pop
lcall
cli
decl
sbb
subl
neg
fisubl
xchg
icebp
stos
movswl
test
dec
dec
fwait
pop
cmpb
sbb
xchg
shl
sbb
xor
jae
icebp
hlt
push
jne
jg
mov
daa
test
add
inc
jg
mov
ja
sub
sub
std
sub
xchg
and
pop
push
imul
add
into
or
sub
pop
and
je
mov
clc
sarb
cmp
ficompl
scas
rclb
add
lret
and
ss
push
add
cli
mov
mov
adc
sbb
adc
mov
mov
push
stos
mov
aad
stc
xor
int3
push
out
xchg
cltd
aam
pop
or
adc
fwait
sub
sbb
push
mov
xchg
test
loopne
pop
sbb
test
push
cwtl
repnz
or
sahf
jle
imul
lea
and
and
and
dec
orb
sarb
mov
js
cld
pushl
push
and
fs
pop
cli
popl
pushf
insl
lds
test
push
fadds
xor
inc
sub
fdivr
sbb
shlb
shlb
and
stos
shlb
and
ja
lods
ljmp
iret
loopne
imul
aaa
das
insb
test
movsb
mov
cmpl
cmp
sub
dec
mov
jmp
xchg
cli
jmp
xor
jge
pop
add
cmp
stc
mov
or
and
insb
inc
sub
fsubs
aas
decl
jge
faddl
sub
aas
bound
adc
add
or
mov
lea
cli
jg
les
int
jecxz
loope
out
sub
adc
jb
mov
vaddsd
pusha
addr16
aam
repz
push
clc
fisttps
mov
out
call
mov
ljmp
mov
xchg
push
ret
adc
jns
lret
push
mov
or
cmp
mov
gs
lcall
into
inc
aam
lock
jl
cld
push
add
mov
adcl
pop
out
je
and
nop
std
sbb
lock
aas
mov
fs
mov
aam
fldenv
insb
pop
cmpsb
add
notrack
dec
insb
inc
and
jb
push
mov
push
out
mov
fbld
mov
std
xlat
enter
sbb
xchg
jae
lods
and
push
inc
adc
xor
push
jge
fcompl
stos
xor
or
inc
cmp
rorl
cs
push
fsubs
mov
repz
inc
mov
movsl
idivb
das
jge
test
out
mov
jg
xchg
ds
imul
add
sbb
and
jecxz
push
repnz
pusha
xor
add
loopne
xadd
notl
jno
jb
dec
out
mov
cmp
clc
push
mov
cltd
push
adc
or
push
or
mov
add
aad
dec
dec
jg
popa
stos
loopne
rorb
inc
movsl
es
sub
subb
pop
lret
xor
jmp
es
cmp
xlat
insl
iret
sarb
and
std
mov
popa
cmp
out
push
or
sub
decl
adc
jge
jo
pop
and
mov
fdivrs
stos
ds
pop
pop
into
push
adc
sub
scas
fcomip
mov
mov
loop
and
fadd
mov
mov
and
push
jle
mov
dec
sub
xor
in
hlt
push
or
out
sbb
incl
std
iret
inc
mov
mov
add
lcall
mull
push
push
clc
in
icebp
jp
or
outsl
movsb
fcomip
push
sub
xor
call
dec
jg
roll
xorb
mov
and
add
les
pushf
push
push
cmp
or
push
std
decl
movsl
data16
icebp
mov
dec
hlt
call
test
xchg
imulb
movb
pop
or
fstl
in
mov
bound
mov
cmp
dec
movsb
adc
jle
xor
xor
xor
decl
inc
sub
xor
or
or
xchg
inc
sbb
add
outsb
loopne
xchg
and
pusha
shll
movups
or
cld
inc
sub
imul
ss
movsb
mov
arpl
aaa
ljmp
hlt
neg
es
andb
jmp
or
fistpll
scas
or
test
inc
cmp
adc
cmp
js
pop
fmuls
dec
seto
testb
clc
call
xor
in
mov
add
dec
call
mov
adc
push
cmovo
add
lcall
sub
mov
sbb
cmp
adc
add
call
pusha
pushf
mov
stos
lods
or
mov
cld
in
dec
add
lock
push
arpl
arpl
pop
popa
int
repz
das
fidivs
sub
movl
adc
dec
into
inc
imul
cmpsb
mov
dec
test
js
cmp
subb
dec
pushf
mov
xchg
cli
pop
call
mov
sbb
mov
arpl
test
cmp
imulb
pop
pop
mov
inc
cmp
pushl
mov
loopne
jl
mov
mov
xchg
imul
sbb
test
lcall
cmpsl
out
sub
add
and
into
aad
sub
mov
lret
sub
iret
pushf
lret
sbb
ds
pop
dec
rorb
dec
test
push
pop
dec
adc
in
testl
ds
sbb
ror
fbld
mov
cmpsl
call
mulb
sbb
jg
cli
sbb
xchg
xchg
push
pop
or
rcll
mov
cmp
test
sub
mov
and
sbb
test
inc
daa
jp
ss
inc
sub
cli
outsl
hlt
adc
lret
xor
xor
fisubs
stc
sahf
push
add
iret
xchg
add
cs
or
dec
repnz
sub
xlat
xchg
push
mov
lret
lods
pushl
dec
popa
test
subl
scas
add
das
and
clc
mov
adc
nop
or
popf
jle
adcb
andl
outsb
pop
jmp
dec
mov
mov
std
mov
add
xor
neg
adc
jae
addr16
xor
outsl
add
xlat
ret
mov
xchg
xor
cmpb
pop
imul
js
fdivs
xor
insb
rol
and
mov
ljmp
push
enter
incl
and
mov
jo
mov
inc
fdivl
ret
enter
xchg
mov
cmp
test
data16
movsb
mov
and
mov
mov
cmpsb
jle
test
adcb
imul
inc
loope
outsl
popf
jecxz
bound
fdivr
pop
or
pop
outsb
les
pop
mov
aam
jno
daa
or
loop
dec
mov
testb
push
jae
dec
sbb
clc
sbb
mov
repz
enter
arpl
dec
pop
push
sub
inc
mov
fcmovnu
xchg
inc
mov
in
and
clc
ljmp
lret
dec
mov
daa
popf
push
cmc
sub
sbbl
roll
or
inc
mov
add
mov
pop
bound
hlt
popa
sarl
jl
jecxz
ret
dec
push
bound
xchg
icebp
cmp
lods
aas
and
xchg
addl
inc
shl
sub
loop
mov
fldl
es
loopne
xchg
mov
xor
stos
hlt
pusha
movsl
out
xchg
cwtl
test
test
movsb
subb
insb
insb
es
or
push
mov
mov
out
jecxz
push
mov
pop
aaa
mov
mov
xchg
mov
add
sarb
add
and
cmpsb
mov
adc
jl
sbb
lret
lcall
shr
mov
mov
adc
cld
mov
push
sbb
lock
xor
shl
add
xchg
or
cld
add
inc
mov
pop
pop
leave
mov
mov
or
or
out
iret
jno
mov
add
and
xchg
aad
mov
out
mov
fimuls
add
ja
pop
dec
inc
sub
dec
or
xchg
cmp
pusha
sbb
xor
pop
pushl
mov
out
push
lods
sbb
sbbb
popa
push
sub
push
inc
loop
enter
dec
notl
jbe
mov
fs
das
add
faddp
cli
test
push
loope
sub
scas
lcall
mov
icebp
or
adc
xorb
aas
je
popa
push
mov
inc
add
cmovb
sarl
mov
adc
lock
es
addl
nop
inc
jle
jp
add
out
jbe
adc
addl
dec
loopne
mov
pop
push
sub
sub
aad
adc
test
aaa
and
xchg
inc
in
xor
add
cmpb
adc
dec
arpl
insb
cmp
loope
sbb
aas
insl
mov
loope
adc
mov
cmp
popa
jg
push
js
add
adc
inc
pop
movl
adc
inc
or
sarb
cld
add
data16
xchg
mov
sub
pop
rcl
push
pop
jecxz
bound
lds
add
filds
cmpsb
pop
adc
rorb
pop
out
sahf
ror
add
repnz
jo
enter
call
xor
add
sub
dec
cmp
jecxz
daa
mov
xchg
and
sbb
or
movsb
mov
mov
mov
xor
pop
call
mov
or
aam
clc
push
call
pop
mov
cmp
mov
jge
sbb
sub
jecxz
add
mov
shrl
mov
les
dec
sahf
mov
adc
aam
jbe
push
or
sub
dec
cli
ja
movsb
add
pop
icebp
inc
mov
mov
inc
mov
sarb
and
adc
ja
sub
adc
hlt
stos
push
sbb
cmp
imul
push
icebp
cmpsb
lds
inc
xchg
adc
jmp
insl
sub
push
mov
mov
mov
mov
mov
lock
lret
or
xor
das
je
lret
rorb
or
fbstp
or
mov
adc
rcll
cmp
and
pop
push
and
sbb
sub
lret
test
push
mov
push
sub
lods
inc
pavgb
pop
sub
popf
and
xlat
adc
jg
cs
and
inc
jne
sub
cli
xchg
mov
mov
rolb
sbbl
mov
xor
push
loope
ss
cwtl
rolb
out
fnstcw
test
cli
push
clc
xor
sbb
xchg
bound
ljmp
cs
out
nop
ret
dec
mov
push
es
lea
shll
adc
push
lock
pushf
mov
shlb
movsl
popf
mov
jmp
clc
xlat
fcmovnu
inc
mov
nop
jmp
std
xor
jecxz
jbe
inc
xor
cli
sub
pop
dec
mov
je
bound
std
pop
adc
test
ret
dec
xor
dec
add
adc
xchg
jnp
xor
aas
cld
dec
data16
and
xchg
inc
ret
or
dec
and
pop
add
fmuls
imul
or
jl
mov
pop
cmp
repnz
call
cli
dec
mov
inc
lock
push
dec
test
sarl
in
sub
imul
outsb
in
adc
jl
pop
nop
ret
inc
repnz
mov
andb
cltd
sbb
and
repz
ss
call
pop
add
sbb
push
add
mov
inc
dec
bound
inc
imul
mov
cmp
jno
loopne
jnp
cli
idivb
nop
xchg
lret
or
repz
sbb
and
test
ds
mov
inc
push
jecxz
or
mov
jle
movsl
test
outsb
inc
add
dec
leave
fstpl
mov
fwait
sub
xchg
push
and
pop
outsb
pop
das
lods
jo
mov
in
mov
stc
shll
fmuls
out
mov
dec
adc
cmp
cmp
mov
mov
sbb
inc
imul
push
xor
js
aaa
sbb
subl
inc
inc
icebp
jle
incl
enter
cwtl
ror
shll
push
mov
pop
fidivrl
cmp
test
sub
jbe
mov
shll
fdivp
mov
cs
lock
cmpsb
push
pop
icebp
aas
fsubp
inc
adc
add
lcall
hlt
fistpll
jb
jmp
mov
mov
and
xor
aam
stos
cmp
pop
lods
ja
loopne
loopne
push
inc
mov
sbb
mov
add
lret
outsb
in
clc
dec
cwtl
cmp
xchg
pushf
notb
insb
xchg
add
incl
frstor
loopne
ror
push
inc
cmpsl
mov
test
jecxz
insb
scas
shr
mov
cld
jnp
lock
sti
add
sbb
or
lds
pop
cld
or
sub
addr16
lods
adc
mov
xchg
popa
dec
or
stos
cmp
lods
popa
jmp
mov
mov
adc
decl
aaa
lret
aas
add
fdivs
lret
xor
dec
inc
mov
movsl
mov
push
xchg
and
cmp
stos
scas
push
or
subl
pop
outsl
es
int3
lods
sbb
loope
add
aad
pop
mov
ss
mov
inc
push
jg
mov
imul
push
or
push
cmc
xchg
sarl
cmp
jg
sub
in
andl
rclb
bound
enter
mov
out
or
add
inc
push
adc
aad
in
testb
rcrb
xor
clc
aaa
fwait
clc
test
sbb
mov
roll
pusha
cwtl
gs
ret
lret
je
repnz
xorl
dec
movsb
push
add
jmp
fdivl
int3
pop
and
and
inc
insl
adc
or
cli
jmp
xor
test
insb
dec
cli
pop
js
mov
sub
js
mov
cmp
or
sub
fsubrs
pop
cld
and
decb
pop
sub
rcll
pop
subb
pop
popa
loope
adc
fimuls
sub
sub
popf
test
je
stos
and
inc
aad
jne
pop
jmp
pop
mov
push
and
mov
cmp
mov
mov
movl
mov
enter
sbb
dec
cmpsb
les
rolb
clc
sahf
or
or
mov
scas
xor
stos
add
ss
pop
sar
pusha
or
into
arpl
daa
subb
enter
mov
push
adc
movsb
ja
and
in
xchg
test
mov
pop
mov
cli
adc
push
or
ja
and
cltd
in
lods
aas
test
lods
xchg
push
fs
test
movsl
push
pop
push
add
dec
pop
mov
int
jmp
mov
inc
push
mov
das
jle
adc
addr16
push
cmp
add
mov
outsb
inc
orb
sbbl
mov
add
jne
mov
pop
mov
movsl
aaa
mov
sub
adc
cmpsb
mov
push
add
addr16
push
inc
dec
hlt
ja
fbstp
test
scas
pop
push
mov
mov
stos
int3
pop
mov
mov
sub
loope
pusha
mov
and
and
pop
es
clc
adc
loopne
lock
dec
lea
or
sub
cmp
in
inc
add
mov
std
enter
aam
into
adc
loopne
enter
ljmp
mov
sahf
mov
inc
js
dec
dec
mov
and
dec
loop
push
jnp
out
push
sahf
pop
psrad
cmp
adc
push
into
push
cmp
mov
out
icebp
pop
or
add
fwait
pop
mov
in
jge
loop
pop
and
test
les
scas
sbb
xor
dec
ja
sbb
adc
inc
add
inc
std
inc
repnz
mov
sbb
mov
pop
lock
mov
sbb
add
sub
inc
push
cmpsb
and
fiaddl
or
loope
pop
jg
popl
loopne
adc
sub
push
and
aas
xor
push
in
test
add
mov
mov
inc
adc
jl
pop
push
hlt
jecxz
add
add
int3
sub
ds
adc
push
add
and
imul
adcb
inc
cmp
pop
daa
mov
push
cmp
scas
rcll
scas
sbb
lahf
sbb
or
sbb
in
std
frstor
adc
mov
adc
incl
jo
mov
dec
xchg
push
mov
pop
ret
pop
inc
mov
cwtl
clc
xor
add
xchg
jbe
lock
xchg
cld
mov
rcll
call
mov
sub
scas
out
and
cmc
inc
and
sbb
enter
push
popf
std
push
cmpsb
decb
adc
ret
add
mov
inc
jge
and
int
pop
mov
dec
fs
dec
cmp
ret
aam
cld
sti
pop
loope
jp
xchg
or
mov
jno
xor
pop
mov
adc
test
sub
aad
fisubrl
js
xchg
mov
lcall
decl
or
adc
inc
push
adc
lcall
sbb
xor
xchg
movsl
sbb
dec
shl
cld
mov
adc
adc
and
push
jl
cwtl
aam
clc
add
push
inc
movsl
xchg
mov
sti
cmc
cli
es
adc
pop
mov
pop
lock
fsubs
push
jmp
sub
inc
sbb
icebp
mov
push
sub
dec
push
add
sbb
fbstp
cltd
andl
push
ret
xlat
xchg
dec
pop
insl
adc
xchg
mov
sar
sbb
lcall
mov
cmp
sbb
dec
sbb
in
sub
repz
cmp
fistpll
cwtl
das
xchg
inc
fs
faddl
ljmp
mov
jecxz
cmpsl
fisubrl
aad
mov
pop
orl
fsubs
fs
add
movsb
hlt
dec
out
rcll
jmp
and
test
fisttpll
dec
out
mov
sbb
into
mov
jmp
or
test
inc
jo
pusha
sub
dec
or
out
cli
enter
es
mov
push
adc
test
ret
inc
lock
les
cmp
dec
push
mov
or
jle
pushf
mov
push
mov
push
pop
jb
xlat
and
adc
rolb
cmp
clc
stos
insl
enter
xchg
flds
mov
mov
add
imul
jno
es
push
pop
dec
xchg
adc
cmp
call
sbb
inc
jl
adc
cmpsb
arpl
sarb
jne
es
es
hlt
sub
out
add
dec
adcb
fidivl
filds
add
jl
add
dec
and
cli
sbb
push
lods
pop
cmc
nop
push
lea
inc
adc
sbb
inc
shlb
inc
stos
stos
mov
fs
xlat
xchg
push
mov
adc
pop
decb
xchg
imulb
pusha
mov
cmp
out
popa
cld
notb
or
fsub
inc
xchg
lcall
dec
aam
cmpl
jo
lock
adc
push
int
cmp
notb
ljmpw
outsb
cli
call
xchg
push
push
xor
add
jg
test
cs
bound
cmp
aad
jbe
inc
dec
clc
ja
mov
push
push
loope
aaa
cli
mov
adc
loopne
push
mov
adc
repz
dec
xchg
jecxz
adc
sti
das
pop
sub
push
xchg
scas
xor
add
cs
fs
inc
adc
xor
subb
ror
dec
and
or
lods
push
mov
ljmp
not
or
roll
mov
test
iret
sub
sti
imul
aad
aam
mov
cmpsl
mov
inc
inc
sahf
add
mov
and
mov
mov
adc
sbb
ljmp
mov
popf
or
inc
scas
jle
sub
int
ret
mov
xchg
mov
or
inc
or
push
inc
jb
xchg
cmp
inc
adc
cmp
jg
ljmp
pop
mov
fiaddl
add
pushl
int3
stos
movsl
push
sbb
sti
paddw
sbbb
dec
cld
adc
test
push
jp
stos
ret
pop
adc
mov
mov
pop
ljmp
ficompl
xor
adc
xchg
andl
mov
dec
sbb
stos
mov
imul
lret
ljmp
or
adc
scas
pusha
test
in
ja
jbe
pushl
adc
cmp
mov
bts
mov
cmp
adc
jbe
mov
fcmovnu
ja
add
jb
sub
dec
or
cmp
xchg
test
hlt
mov
rorb
jge
mov
push
or
add
outsl
sbb
jo
mov
adc
jo
jl
mov
fs
cmp
lock
jge
and
sbb
xor
mov
mov
lods
test
xor
sub
or
aam
mov
loopne
inc
test
xor
in
test
bound
ds
dec
cli
andb
adc
hlt
add
adc
mov
pop
or
or
mov
inc
xchg
mov
add
mov
mov
nop
dec
and
pop
insl
dec
cmp
adc
pop
aam
shlb
loopne
jbe
aaa
inc
jle
sub
clc
jle
stos
in
fs
lods
jne
sbb
add
or
les
jge
ljmp
outsl
sbb
sub
push
out
xor
inc
mov
scas
aam
enter
popf
lret
add
pushf
pop
lret
stos
add
xor
arpl
pop
add
fwait
xor
lds
mov
ljmp
or
add
scas
std
push
ret
dec
imul
inc
lahf
mov
data16
sahf
orl
mov
ljmp
cmpb
test
or
adc
xchg
lock
add
sbb
add
dec
aad
mov
xor
adc
jno
fstl
mov
ss
jp
inc
cmpl
pusha
jg
jle
inc
mov
sub
add
or
lock
out
xor
sbb
in
pop
or
cmpsb
data16
daa
shlb
xchg
addb
and
jp
insb
mov
sub
sar
mov
pop
inc
push
test
pop
sbb
fcoml
popf
add
add
rorb
sti
mov
decl
sbb
lods
add
nop
movsl
dec
add
insl
fisubl
cmp
movsl
dec
es
mov
xor
mov
ja
faddl
std
cltd
sbb
das
jmp
lock
jg
bound
fs
dec
scas
int3
stos
loope
imul
xchg
lods
push
cld
add
sbb
xor
push
aam
ljmp
mov
decb
aaa
mov
dec
push
pop
lds
push
inc
fimull
lods
cmp
cmp
lahf
popa
or
stc
cmp
les
add
mov
push
scas
js
xor
and
inc
mov
and
lret
add
js
fbld
jne
in
mov
fwait
and
lods
push
ror
cmp
sub
cli
sbb
dec
test
mov
fbld
int
es
fs
sub
xor
les
ljmp
and
xchg
scas
push
jmp
mov
inc
call
jp
fs
mov
sbb
or
das
add
pop
xor
or
cld
push
push
mov
stc
cmp
icebp
fwait
cmc
out
xchg
pop
lock
fwait
cmp
xchg
movb
outsb
clc
pop
mov
cld
fmull
jns
and
pop
and
dec
push
sbbb
movsb
jg
xor
ss
fiaddl
xchg
xchg
add
sahf
enter
inc
pop
icebp
imul
subb
pushf
inc
mov
sub
mov
and
rclb
fwait
jmp
stos
mov
fs
into
dec
insb
add
mov
inc
jbe
inc
ds
mov
pop
xchg
sub
inc
add
ret
in
ljmp
decl
push
cmpsl
push
cmpb
rcll
daa
loopne
push
jecxz
fnsave
cmpsb
mov
fcmove
fchs
popa
inc
sar
mov
fistpll
popa
mov
in
andb
mov
sbb
aad
push
inc
ret
jo
adc
pop
and
int3
ret
fld
push
push
pop
mov
sub
mov
ljmp
imul
add
push
rol
cmp
insb
fbld
mov
cmp
data16
fisttps
xchg
lcall
inc
loope
or
xchg
rolb
aaa
loop
testb
cmp
rolb
lock
incl
add
xchg
xchg
aas
fcomip
sub
test
je
sbb
shlb
add
fldl
jno
sub
mov
test
or
mov
sbb
fs
dec
into
call
fiaddl
popf
dec
jg
test
push
icebp
inc
je
push
push
or
lea
bound
push
cmp
mov
out
pop
outsb
add
test
inc
incb
mov
push
pushf
div
call
je
stc
repz
cwtl
rorb
pop
adc
mov
xor
sub
outsb
pop
ja
cwtl
bound
and
ret
xor
fildl
daa
fnstenv
add
int3
add
pop
dec
cmp
sbb
jecxz
fiaddl
sub
fcoml
call
sbb
push
xchg
inc
adc
jb
clc
sbb
push
inc
aaa
push
nop
sub
sahf
xor
call
mov
pop
jmp
test
push
and
jo
aad
lret
mov
add
xlat
outsl
aam
enter
jo
pop
mov
inc
pop
inc
pop
jle
ss
mov
in
scas
mov
mov
jg
xchg
inc
mov
movsb
mov
fisubrl
mov
jp
pop
cltd
jp
aas
xor
mov
xor
rorl
rolb
adc
xchg
xor
popa
push
and
add
subl
dec
out
imul
push
in
repz
in
idivl
mov
mov
mov
roll
and
push
call
inc
inc
inc
xor
xchg
cli
movsb
je
addb
xchg
pop
push
push
in
sarb
inc
adc
lock
dec
fsubrl
push
test
add
test
add
inc
and
mov
or
cmp
ss
mov
inc
add
call
add
cwtl
pop
sbb
rcl
and
in
repz
jp
xor
xchg
mov
lock
mov
sahf
mov
mov
jno
sbb
ljmp
and
jle
mov
xorl
mov
lods
add
lret
dec
das
ljmp
or
movsb
cld
or
lds
add
xor
or
inc
repz
or
repz
push
negb
inc
movl
dec
inc
dec
adc
sub
aad
je
push
sub
rcl
mov
dec
add
lods
dec
sbb
inc
loopne
jmp
sti
test
hlt
in
xor
sahf
push
adc
dec
pusha
add
mov
xor
pop
push
xchg
xor
push
adc
add
and
jmp
pop
cmp
es
mov
xorb
mov
shlb
cld
mov
pop
pop
test
je
add
xor
pop
adc
inc
sbb
jns
aam
mov
add
fcmovnu
sub
inc
scas
xchg
roll
or
fdivs
lcall
xchg
es
icebp
stos
mov
mov
ret
pop
test
sbb
pushf
js
xchg
rorl
and
pop
fistpll
fisubl
and
xor
xor
jp
jmp
mov
call
inc
mov
xor
cwtl
hlt
mov
pop
push
pop
mov
jo
cmp
leave
cmc
dec
push
mov
mov
push
pop
xchg
insl
int
mov
fadd
push
std
adc
cmp
insl
out
and
inc
inc
js
pop
inc
mov
in
fisubl
sti
sbb
incb
lea
xor
inc
js
aas
push
cmp
js
decb
movsl
test
lods
mov
add
lods
scas
popa
js
adc
xchg
bnd
or
ret
out
fisubl
les
pop
sbb
add
add
mov
jmp
add
lcall
outsl
outsl
decb
cwtl
cli
int3
and
test
je
clc
sahf
mov
clc
mov
sarb
xor
insl
mov
imul
sub
das
cld
pusha
loopne
mov
xlat
push
roll
jl
push
sbb
xlat
or
lods
jo
mov
loopne
in
hlt
cli
inc
test
enter
scas
pop
xchg
sub
add
cmp
sub
and
xchg
arpl
mov
mov
cmc
pushf
inc
fs
rorb
shll
push
js
leave
faddl
push
notl
or
xchg
mov
outsl
dec
imul
jl
pop
das
loope
sub
sar
mov
bound
adcl
mov
xor
pop
loope
fisttpll
push
inc
push
ret
xchg
or
jp
sarb
lods
shll
orl
rorb
scas
lret
and
cmpsl
or
in
sbb
add
inc
inc
stc
divb
inc
jnp
inc
push
xchg
insl
add
xor
dec
adc
ja
lahf
add
pop
lods
inc
or
insb
es
mov
decl
sbb
xlat
add
or
mov
out
aas
add
pop
mov
sbbl
xchg
push
add
mov
cmp
fcoms
mov
dec
push
mov
outsb
mov
shrb
inc
dec
rorb
pop
repz
mov
test
dec
add
cmp
fmull
ret
pop
lock
fildll
cmp
xor
inc
sbb
jp
invd
xor
ja
cmpsl
pop
mov
sbb
cmp
or
shlb
pop
sbb
lock
enter
mov
fidivrs
xchg
xor
dec
std
out
sahf
stos
sub
in
das
cmp
cmc
xor
add
icebp
xchg
push
inc
jb
rorb
xchg
xor
xchg
icebp
mov
popf
add
and
add
sub
sub
icebp
dec
sbb
and
push
mov
dec
inc
dec
sbb
sbb
or
xor
cmp
nop
jg
out
inc
imul
xchg
or
mov
pop
xor
jle
mov
add
outsl
pushf
sbb
add
pop
mov
sub
pusha
inc
icebp
sbb
push
sub
sbb
adc
popf
cld
and
mov
mov
mov
test
clc
pop
lahf
arpl
xor
push
rorb
sarb
scas
mov
int
icebp
shrl
or
inc
pop
mov
pop
lret
mov
inc
inc
outsb
jmp
pushf
flds
or
aam
lea
mov
mov
inc
lahf
push
push
pop
fsub
or
push
sub
cld
pusha
push
jo
lret
push
shlb
addr16
inc
testb
add
jne
ret
nop
mov
adcb
push
add
call
inc
push
add
shrl
push
cli
insl
scas
mov
arpl
dec
gs
jo
jge
sahf
add
xor
push
pop
add
add
loopne
add
call
pop
addb
mov
stos
shrb
mov
addl
add
cmc
sub
cli
dec
push
aaa
push
or
jnp
xchg
sahf
aad
push
pop
in
inc
pop
xchg
test
sbb
push
out
call
pop
inc
xor
push
add
ss
adc
push
add
dec
vcomisd
jo
fwait
sub
sbb
clc
xor
push
repnz
mov
xchg
inc
and
ret
pop
ss
adc
add
loop
xchg
call
fistpl
or
pop
cmp
pop
push
les
icebp
add
jp
push
int
xor
shrl
test
push
pop
sub
dec
hlt
jl
sbb
fcompl
sbb
inc
or
sub
xor
pop
jecxz
and
ficomps
out
out
loop
sub
test
push
dec
roll
mov
imul
push
sbb
repnz
adc
dec
or
mov
push
jg
int
sub
mov
adc
jl
xor
repz
add
pop
stos
fsub
les
cmp
mov
or
insb
cltd
gs
fldl
aas
negb
cltd
in
nop
mov
jmp
mov
sbb
pop
mov
int3
lahf
pop
fdiv
inc
ficoml
pop
fcmovbe
jo
loopne
dec
cld
mov
jp
fists
daa
jge
adc
jne
js
pop
and
mov
stos
test
inc
lods
adc
and
hlt
lds
movl
ret
cwtl
loopne
xchg
lock
repnz
out
inc
xchg
cmc
mov
adc
js
stos
outsb
lock
pop
sub
pop
inc
arpl
add
jecxz
pop
clc
clc
jno
and
mov
jp
aam
and
dec
adc
out
cmc
and
mov
adc
aaa
xor
add
cmp
jge
or
pop
mov
mov
inc
sar
lcall
jge
into
lcall
dec
jl
adc
js
mov
pop
cld
dec
mov
lret
push
repz
sub
mov
sbb
jmp
xor
fimull
xchg
sub
sub
jne
sarl
mov
mov
clc
sbb
cmpsb
mov
hlt
lods
scas
aas
test
lea
jnp
or
cwtl
cmpsl
mov
inc
jnp
pop
or
push
adc
and
fmul
jp
mov
add
lcall
xorb
repnz
outsb
jp
mov
mov
sbb
repnz
cmp
mov
das
xorb
test
mov
test
pop
cmp
int
arpl
cs
adc
jnp
xor
fwait
mov
iret
mov
daa
sbb
inc
cmp
push
push
and
fbld
sbb
push
flds
ret
out
mov
mov
dec
cmpb
xorb
mov
push
mov
xchg
fwait
mov
out
and
out
add
jp
dec
iret
and
adc
lret
icebp
mov
movsb
insb
mov
or
ljmp
mov
push
pop
mov
sub
ja
pop
xor
dec
roll
mov
adc
or
xor
mov
iret
cmpsb
push
rclb
ret
mov
cmpsb
adc
sub
lahf
and
popl
fimull
sbb
push
jne
add
aam
sub
mov
jnp
jae
cmp
sub
std
sbb
and
xor
shl
and
mov
je
xchg
pop
cld
inc
aam
aam
clc
xor
in
lret
pop
pop
lock
sbb
sub
or
sbb
adc
insb
jmp
mov
xchg
fsubrl
es
push
xor
mov
push
mov
test
stos
and
add
rol
adc
dec
mov
mov
in
popf
decb
sub
pop
scas
jle
inc
loope
outsl
pop
rorb
mov
imulb
incb
xorb
add
mov
or
cmc
xor
ja
in
or
xchg
xchg
or
shlb
jl
aaa
loopne
pop
pop
mov
jmp
jmp
push
inc
adc
mov
push
or
cmc
ss
js
arpl
sub
add
inc
push
enter
out
or
mov
mov
mov
jae
push
mov
mov
mov
push
decl
inc
xchg
mov
nop
jle
sbb
or
xor
cwtl
call
scas
xchg
mov
or
daa
xchg
pusha
dec
lods
mov
xchg
cli
hlt
pop
les
cmp
jge
outsb
inc
push
adcb
jo
and
lea
jp
sbb
xchg
inc
test
and
push
mov
cmp
cmp
add
mov
xor
inc
sbb
sbb
push
into
ficoml
pop
mov
ret
shl
xor
in
adc
xor
paddsb
push
adc
push
mov
bound
es
std
lea
jae
add
cld
sbb
cmp
jmp
or
dec
mov
and
pushf
adc
push
mov
mov
inc
push
loopne
cmp
adc
pop
sar
enter
xor
mov
scas
and
iret
nop
rcrb
add
pop
dec
adc
sbb
std
out
enter
mulb
mov
sbb
add
cmp
adc
sbb
js
xor
mov
incl
xchg
jecxz
in
pop
imul
mov
scas
xchg
mov
lds
rcr
mov
subb
xchg
xor
ret
subb
push
lds
test
add
inc
mov
mov
mov
mov
mov
add
add
cmp
ret
daa
es
int3
sbb
lea
sub
pop
fisubs
push
stos
xor
sbb
cmp
adc
fs
and
jb
icebp
in
xchg
addb
scas
or
and
mov
bound
sbb
sub
cmc
loop
xchg
loope
js
mov
test
mov
icebp
and
ror
das
shrl
or
sarb
in
add
pushf
mov
push
pop
jb
mov
pushf
pop
aaa
pop
imulb
js
mov
ljmp
mov
shrl
jecxz
call
lcall
mov
mov
inc
pop
je
inc
sahf
sub
add
stos
cltd
cmp
inc
push
inc
inc
roll
sbb
inc
cmp
add
sub
xchg
clc
fimull
mov
sub
sbb
loopne
clc
add
packuswb
loopne
sbb
xchg
int
pop
fs
and
outsb
jle
test
jle
std
test
andb
rcrl
filds
mov
shrb
mov
or
adc
icebp
shll
xor
pop
pusha
jge
cld
rcrb
cmp
dec
mov
cmc
addr16
sub
popw
xchg
fimuls
lods
lret
xchg
push
push
insb
xchg
hlt
lea
jmp
cs
cmp
add
jl
sar
mov
test
add
or
loope
mov
jns
cmpsl
popl
in
push
push
out
mov
xor
push
pop
or
decl
ret
out
mov
lret
or
lods
iret
push
call
dec
mov
lret
movsb
daa
xchg
test
jecxz
js
lock
mov
aam
std
loop
sbb
loope
inc
inc
leave
decl
mov
xchg
jbe
arpl
fists
es
sbb
shr
cld
std
add
inc
ret
fistpl
pop
inc
repz
lods
pop
dec
push
mov
pushf
pop
pop
call
clc
lret
sbb
scas
mov
clc
ret
xorb
push
dec
and
xchg
dec
add
mov
inc
push
rclb
jae
sti
outsl
cmpsb
popa
int3
stos
lods
or
jl
ret
orl
aad
cmpsb
mov
and
call
sbb
mov
shlb
or
dec
es
hlt
mov
push
popf
adc
pop
add
push
xorb
frstor
ja
push
scas
push
out
adc
add
mov
pusha
sbb
jp
mov
stos
lcall
and
div
stc
or
xor
push
cmp
popa
movsb
jmp
mov
cmc
pop
mov
cwtl
test
mov
jle
aam
jns
cmp
shlb
cs
js
push
cmp
std
add
cmp
and
shr
fistps
daa
aam
outsb
mov
sbb
ds
jbe
xchg
test
inc
inc
sub
lods
inc
inc
int3
jp
out
mov
add
cld
sub
xchg
push
inc
push
add
inc
lret
std
lock
xor
cmp
jg
out
pop
dec
dec
ret
xorb
xchg
scas
inc
ret
decl
push
sbb
test
add
adc
sbb
pop
movb
subl
dec
xchg
pop
mov
lcall
mov
rol
adc
mov
pop
xchg
loope
mov
xlat
sarl
ret
popf
lcall
ljmp
das
push
push
pop
sti
test
lcall
mov
sub
mov
xor
xchg
pop
ja
adc
lea
jecxz
xchg
lcall
xor
fnstenv
cmp
stos
test
fcoms
or
mov
mov
add
pushl
call
lahf
out
enter
jbe
in
cltd
jae
cs
mov
push
or
incl
hlt
lods
xchg
incb
fsubl
ret
jns
sub
fidivs
cli
shrl
jmp
pop
das
lret
movsl
jg
loop
call
sub
rclb
aad
jb
pop
sbb
int3
test
cmc
bound
rcll
ret
popf
ja
out
adc
dec
and
mov
cld
pop
sbb
mov
les
jmp
incl
push
sub
dec
and
rol
inc
sbb
and
mov
shrb
cld
xchg
jno
push
rorl
mov
push
pop
cmp
cmpsl
jmp
jnp
xor
pusha
popf
pop
test
stos
sti
daa
and
leave
mov
out
pop
lret
ffree
in
pop
stc
sarb
mov
lcall
or
jle
xchg
push
sub
aam
push
jnp
pop
icebp
addr16
int
call
call
sub
and
mov
sbb
pop
frndint
inc
sti
shlb
ja
sub
lret
mov
out
into
mov
sbb
mov
adc
ret
outsb
fs
sub
xchg
loopne
cmc
iret
test
sar
mov
push
mov
jecxz
jo
dec
inc
std
adc
imul
dec
adc
and
incl
or
fidivrs
div
mov
jg
jg
mov
pusha
cmp
pop
or
cltd
je
int
pop
icebp
adc
stc
mov
push
or
fstps
loopne
mov
mov
xchg
insb
das
shll
aad
cmpsb
xor
xchg
inc
sbb
ret
push
mov
insl
inc
and
fs
orl
repz
ljmp
loopne
dec
sti
in
aam
sbb
mov
iret
iret
incl
loop
xchg
pop
sub
push
jecxz
subl
sti
inc
leave
mov
fidivrs
lea
shlb
test
push
mov
jl
and
push
inc
mov
outsl
mov
shrb
jge
daa
sub
mov
mov
icebp
xchg
mov
je
mov
sub
add
dec
mov
add
mov
dec
ljmp
fcmovnbe
leave
jg
xor
dec
stc
pushf
jbe
test
push
js
and
jg
sbb
xchg
sar
lcall
mov
outsl
dec
and
jmp
mov
mov
lds
jmp
in
dec
cmp
outsb
fcoms
mov
sub
sbb
test
das
in
movb
dec
popf
add
popf
daa
addr16
adc
out
es
xor
ljmp
jae
push
les
imul
cmp
dec
aaa
xor
mov
lcall
push
cli
rcll
pop
jl
and
xchg
inc
cmp
fidivrs
aad
xor
cld
scas
mov
and
addb
jmp
jmp
std
clc
xchg
outsb
xor
xor
pop
pop
std
insb
sahf
js
cld
ljmp
and
jne
inc
jo
insb
inc
cmp
xchg
xchg
jns
or
xchg
stos
jo
and
push
jg
aaa
insl
jg
pop
lock
in
xchg
or
cmpsb
in
dec
xor
mov
adc
out
jl
xor
into
cltd
lret
daa
xchg
les
iret
push
out
fldl2e
cltd
das
fwait
ret
sub
dec
rolb
mov
int
stc
jg
bound
icebp
lret
call
dec
add
push
fdivrp
jg
xchg
sti
aam
test
repnz
cmpsb
xor
mov
out
add
sub
cld
outsl
dec
or
mov
gs
adc
lds
lds
rorb
jo
push
outsl
scas
push
jo
mov
mov
enter
nop
aas
loop
or
push
and
ret
call
pop
cmp
iret
ljmp
dec
mov
shll
not
stos
fimull
and
movsb
cld
stc
out
xor
push
adc
out
sub
pop
jg
push
pop
mov
ljmp
test
inc
out
mov
outsb
push
fwait
jbe
inc
pop
aas
push
jnp
push
and
or
rorb
push
leave
add
push
clc
mov
rep
int3
into
fidivs
push
test
stc
xchg
stc
jg
xor
inc
add
xlat
clc
aad
fnstcw
js
stc
int3
ficomps
jnp
shrb
addr16
out
cmc
and
sbb
stc
repz
jo
add
mov
int
mov
fnstcw
popf
clc
or
arpl
jmp
mov
inc
or
lods
jo
incb
pop
stc
sbb
or
lcall
orb
pop
inc
arpl
mov
mov
xor
add
nop
sub
and
out
call
sbb
imul
sub
push
jo
lahf
dec
std
push
mov
sub
cld
push
addb
xchg
std
sahf
jns
out
lcall
cld
add
sahf
mov
sahf
pop
cmp
sub
add
jecxz
xchg
iret
repz
fdiv
xor
sub
fcoms
dec
xchg
mull
cli
decl
pusha
or
dec
mov
daa
add
mov
sbb
pop
or
push
xchg
cmp
jo
push
adc
jmp
adc
push
lock
movsb
cmp
out
and
mov
pusha
mov
insl
jne
in
xchg
sbb
movsl
jno
clc
sub
xchg
mov
jg
mov
movsl
cltd
push
mov
push
add
stc
ljmp
shrl
sub
jg
addb
les
clc
xlat
pop
lcall
mov
loop
mov
ljmp
mov
pop
mov
pop
ret
mov
push
pop
cmp
sub
xchg
pop
lret
orb
outsl
out
push
adc
mov
jns
imul
jl
lea
aam
fwait
in
rcll
fwait
pop
es
fldl
call
pop
adc
xor
sarl
lods
stc
insb
fwait
push
pop
xor
pushl
add
xchg
pop
clc
mov
js
sub
les
mov
or
push
aaa
aam
pop
mov
call
mov
fildll
pop
shll
std
dec
js
xorb
stos
cmp
xchg
notl
clc
mov
jl
mov
sbb
clc
repz
data16
dec
cmc
sbb
aaa
std
push
stos
das
push
mov
push
and
cmpsb
xchg
mov
lcall
shr
into
jne
andb
push
jl
out
cmpsb
sbb
mov
je
cltd
pusha
mov
add
pop
outsl
xor
or
xchg
clc
test
shl
xchg
push
xchg
leave
mov
repz
mov
mov
aaa
das
arpl
push
or
pop
subl
xchg
inc
inc
mov
jl
mov
lea
shrb
jne
not
stos
test
movsl
sub
stos
jmp
sbb
mov
lock
pop
repnz
dec
inc
dec
out
leave
xchg
sub
xor
aaa
aas
out
clc
and
imul
movsb
jg
xor
mov
pop
lret
pop
in
xchg
sub
xchg
repz
int3
push
push
test
mov
jne
mov
cmpsb
jl
repz
add
sbb
xchg
push
jl
iret
jg
mov
push
fsubrs
mov
ret
out
lds
div
movsl
shlb
inc
mov
stc
stos
pop
fistpll
insl
imul
hlt
dec
cs
popf
jo
fistpll
sahf
xchg
jp
rcll
gs
cmpb
sub
xchg
jns
pop
subb
and
pop
adc
cmp
sub
imul
lods
aad
pop
aam
add
pop
sbb
out
lcall
loopne
js
fs
andb
int3
xchg
ja
loope
subb
dec
shlb
sbb
test
hlt
adc
les
fmul
out
shll
inc
std
imul
jo
jp
sub
jp
inc
call
jae
stos
adc
cld
icebp
ljmp
fldt
mov
sarb
pop
into
mov
mov
dec
xor
mov
push
sarb
push
lock
pop
mov
aas
lcall
mov
push
aam
cwtl
mov
divb
ret
repz
jo
rorb
fistpll
xor
lahf
push
mov
loopne
xchg
clc
ljmp
fldenv
mov
xchg
mov
and
cmpsl
imul
jns
xchg
add
mov
test
dec
shrl
push
scas
add
test
filds
xchg
pop
outsb
jle
push
add
fs
dec
mov
pop
push
fs
cwtl
pop
lods
inc
clc
popf
cmp
push
push
dec
cmc
or
mov
jae
adc
mov
repz
add
mov
fisubs
lods
test
jne
incb
jmp
scas
xchg
clc
out
loop
mov
call
daa
jecxz
int
les
jns
push
loope
addr16
dec
je
jp
mov
out
jmp
adc
jo
add
sbb
mov
add
aad
and
in
clc
sbb
mov
mov
scas
mov
stos
call
jp
xor
pop
lods
test
jmp
sbb
insl
inc
pop
mov
add
std
cmc
push
in
push
push
xchg
pop
mov
mov
lock
pop
mov
dec
loope
jne
pop
jg
repnz
cli
clc
stos
mov
movsl
push
ret
push
inc
add
sub
xchg
outsb
fsubl
xor
xchg
stc
out
scas
mov
mov
pusha
arpl
fistpll
mov
lods
das
stos
push
cs
fwait
or
das
les
pop
clc
testb
cs
arpl
pop
cld
jecxz
orb
and
psrlw
jo
mov
popf
push
xor
cmpsl
jbe
dec
sbb
loope
aad
push
filds
cltd
push
xor
mov
jo
mov
cli
adcb
addr16
pop
lcall
pop
repnz
adc
psubb
mov
ja
cmp
cmpsb
ljmp
xchg
jnp
push
and
mov
dec
fs
mov
jge
xor
inc
sub
out
cli
jmp
adc
xchg
int
roll
adc
lahf
jns
cmp
mov
push
and
xchg
enter
sub
pop
lock
jb
and
adc
addb
fyl2xp1
mov
mov
adc
xor
sti
ficompl
lahf
aas
pop
or
lods
outsl
pop
dec
xchg
fs
pop
mov
cmc
sub
inc
xor
push
mov
sbb
lret
out
clc
fwait
aas
shl
aad
in
ss
jne
cwtl
adc
pop
fistpl
mov
psrld
ja
dec
jo
xchg
push
sub
sahf
popa
cmp
ficomps
and
sub
outsl
hlt
mov
pop
cs
push
jb
into
sub
pop
xchg
push
stos
xchg
and
mov
xchg
xchg
jb
mov
ret
jmp
sbb
lea
test
or
std
jbe
adc
add
push
fsqrt
test
mov
jge
loop
pop
popf
repnz
jle
mov
push
in
and
test
aas
les
mov
adc
daa
mov
stc
clc
jmp
pusha
scas
and
mov
cld
xchg
sub
or
jg
into
repnz
clc
lods
aaa
adcb
movsb
mov
pushl
cmc
into
test
bound
pop
insl
stos
icebp
mov
ud1
dec
fs
mov
adc
mov
out
cmc
iret
daa
push
mov
stc
cmp
or
mov
int
xchg
push
mov
jae
stc
das
clc
or
ds
je
in
and
sahf
std
cmp
mov
aas
jg
shll
adc
or
sub
pop
pop
adc
clc
sbb
scas
pop
je
xlat
and
push
sub
pusha
je
cmp
or
inc
pusha
cmpsl
or
ret
popf
mov
mov
hlt
jle
pop
test
addr16
aad
add
test
scas
les
clc
jo
icebp
pop
lret
xchg
jp
ret
int3
mov
scas
sbbb
mov
jp
jmp
jns
stc
scas
sbb
xchg
out
enter
mov
sarb
xorl
lea
pop
das
xchg
lea
jl
adc
int3
stos
jle
pushf
repz
pop
sbb
jg
iret
stos
inc
xchg
cltd
mov
rcrb
clc
mov
mov
jbe
cmp
xor
mov
pop
cmpsb
loop
loop
cmp
cmp
repnz
cmp
jg
roll
ret
xor
cmp
subl
lret
pop
pop
jecxz
or
loopne
stos
test
or
add
mov
call
je
fdivr
dec
fistpll
out
bnd
fldl
jbe
test
push
std
das
jnp
cli
sbb
loop
lcall
mov
fs
je
int3
lcall
scas
add
mov
push
or
jne
mov
clc
in
jne
jno
or
push
push
cmp
mov
inc
add
xchg
bound
outsb
cld
les
jle
jnp
xchg
nop
pusha
hlt
sbb
rep
addb
cmpsb
call
xchg
popf
in
sarb
shrb
mov
sbb
jne
shrl
and
and
mov
je
or
mov
xor
jno
xor
stos
ljmp
cmp
fwait
pop
adc
and
mov
jb
push
pop
adcb
push
aas
out
je
cld
mov
cltd
xchg
lcall
xchg
das
nop
fs
outsl
dec
or
or
je
or
js
fldl
and
incl
lea
inc
sahf
xchg
mov
repnz
cld
pop
cmc
scas
mov
xchg
jno
sub
aam
add
pop
movsl
xor
je
or
pop
xchg
xor
sbb
filds
dec
aaa
sahf
adc
aam
fstp
imul
push
pop
mov
jno
test
aas
xchg
xchg
int
jge
xor
sub
in
xor
or
mov
fildll
mov
out
cltd
mov
movl
mov
aam
outsl
rolb
das
int
cmp
icebp
cld
scas
xor
jne
sahf
jg
jl
out
xchg
mov
out
sbb
sub
int
xchg
vmread
mov
imul
or
pop
call
scas
cmp
cmp
xchg
xchg
clc
pop
xchg
inc
mov
lahf
mov
add
iret
stc
push
rcl
test
push
ffreep
pop
push
xor
push
mov
jmp
mov
add
loop
je
lods
adc
xor
in
mov
clc
aas
outsb
fsubrp
pop
addl
clc
xchg
and
jg
je
sbb
cwtl
or
sub
loop
sbb
sti
xor
sahf
in
or
out
jo
lds
iret
push
jp
xchg
push
outsb
jmp
int3
xor
dec
push
add
scas
outsb
inc
sahf
adc
jae
aaa
xchg
jecxz
sbb
dec
cwtl
inc
sti
mov
loop
push
lods
mov
push
dec
ljmp
stos
lds
in
pushf
test
jo
in
aad
xor
clc
lods
out
stos
jg
jmp
repnz
arpl
clc
cltd
jl
aas
sbb
pop
dec
inc
pop
lock
lock
mov
pop
stc
xchg
add
fidivs
rcrl
dec
mov
mov
scas
pop
add
jp
pop
jp
hlt
scas
clc
mov
push
daa
add
mov
in
mov
cld
shrb
mov
xchg
push
mov
je
loopne
stos
incl
pop
popa
pop
mov
pop
jno
cmc
psraw
out
xchg
jp
sbb
rcrl
cmpsb
clc
inc
jne
xchg
lock
jp
push
xor
cld
lret
insl
out
or
xchg
jbe
xchg
out
mov
pop
stc
dec
or
fbstp
rcl
xor
jp
jg
jnp
loope
hlt
into
push
pusha
xor
cmpb
das
or
aas
iret
xchg
jmp
cli
sti
fidivrs
mov
mov
das
lcall
cld
push
and
std
fwait
mov
icebp
cmc
inc
lods
pusha
adc
sahf
stos
sbb
rclb
sahf
lcall
xor
sbb
loopne
out
xchg
mov
test
js
sbb
adc
mov
jp
out
subl
icebp
enter
stc
sub
adc
jnp
push
xchg
mov
xchg
or
mov
aaa
das
xchg
outsb
inc
or
ljmp
sahf
sub
stos
mov
clc
fwait
pushf
popf
push
mov
sbb
and
sub
push
xchg
xchg
fwait
jb
mov
jp
pop
push
in
pusha
cmp
jnp
mov
sbb
in
clc
xchg
js
and
rcll
mov
xchg
jnp
fwait
add
out
add
pop
lock
aam
xchg
sbb
ret
je
dec
pop
push
cmp
pushl
test
xor
stc
mov
xchg
repz
adc
mov
fdivs
hlt
pop
and
add
das
test
cmp
adc
pop
push
push
fadds
mov
xchg
cmp
jle
sbbb
fwait
pop
lock
push
mov
mov
push
jbe
xchg
and
stos
sbb
dec
ljmp
jecxz
fidivl
mov
divl
mov
popf
cmp
inc
test
dec
insb
jno
sub
xchg
or
stos
mov
push
std
inc
sti
adc
scas
jb
pop
sbb
xchg
xchg
inc
clc
add
cltd
repz
rclb
test
and
sub
lret
out
fwait
call
sub
xchg
scas
cli
add
mov
js
loop
mov
fcomip
call
sub
arpl
xabort
sbb
icebp
mov
bound
pop
lods
mov
notb
mov
ds
lahf
push
fs
xchg
push
add
fs
push
scas
inc
xchg
dec
repz
mov
push
inc
sub
fnsave
jecxz
test
pop
add
cmpsl
div
mov
repnz
jg
stc
std
push
push
mov
cmp
ret
fmuls
or
jo
jge
imul
lods
cmp
int
outsl
outsb
inc
push
fisubrl
xorb
xchg
dec
les
cli
scas
and
in
cmpsb
adc
add
out
insl
cld
adc
pusha
push
and
mov
ss
xchg
shlb
push
or
mov
adc
fidivrs
flds
mov
popa
mov
add
dec
dec
add
add
int
enter
shr
mov
jle
and
xchg
mov
xchg
cld
pop
xchg
stc
es
xchg
jnp
dec
and
repz
push
incl
xor
rol
lods
ja
xlat
dec
and
popa
rorl
add
nop
popa
sub
cld
jecxz
insb
loop
push
xorb
xchg
test
fdivrp
dec
jp
pusha
pop
out
movsb
push
add
clc
rolb
cld
pop
mov
cwtl
jo
mov
sbb
mov
mov
repnz
loopne
xchg
test
sarb
out
push
pop
inc
add
loopne
cld
mov
out
and
loope
sbb
out
rcrb
incl
mov
jp
or
dec
outsb
pop
stos
or
xor
shlb
adc
leave
cmpsb
insl
xchg
or
cld
mov
push
fdivrp
or
xor
ret
mov
dec
inc
mov
imul
mov
cmp
icebp
outsl
ss
xchg
cmp
into
inc
inc
push
jmp
dec
push
mov
lods
jne
loopne
mov
fisttpll
icebp
mov
ds
cmp
in
jp
xchg
or
jp
mov
jo
int
push
cld
loopne
push
je
xchg
push
sbb
out
cld
insb
adcb
inc
aad
add
mov
scas
jp
test
mov
push
ret
push
mov
in
daa
loopne
sub
xor
add
pop
xor
popa
stos
fnstenv
pause
dec
mov
cmp
mov
aas
jnp
jl
dec
in
cmp
loopne
xchg
cmp
fidivrs
add
jecxz
cmp
xchg
pop
cmp
lods
test
pop
lock
push
les
xchg
shlb
icebp
data16
mov
repnz
pusha
cld
sbb
pop
iret
pop
jmp
mov
inc
push
mov
sbb
sahf
aam
js
push
sbb
insb
fildll
scas
aas
je
jns
clc
or
mov
movsb
icebp
cli
popa
pusha
adc
test
sti
sub
xchg
mov
xor
inc
mov
cmc
gs
aas
stos
outsb
rorb
xchg
imul
popf
insl
test
ss
clc
push
shl
loopne
inc
push
orb
add
push
out
or
xchg
jmp
jo
addr16
add
jl
xor
lea
mov
jmp
inc
push
xchg
cltd
mov
jg
je
data16
sub
adc
repnz
jecxz
bound
mov
jo
cmpsl
add
mov
mov
mov
push
jo
xchg
jbe
adc
mul
lods
fwait
repz
test
xchg
pop
ss
mov
cli
pop
lret
outsb
xlat
lcall
fdivp
lahf
bound
clc
mov
push
cmp
cld
call
sbb
aas
cli
minps
aaa
in
je
xchg
mov
xor
lods
xor
iret
mov
iret
inc
cli
mov
mov
mov
pop
outsb
mov
jnp
mov
dec
cmp
lock
fidivs
testb
inc
and
hlt
mov
push
ds
mov
xor
sub
push
add
inc
js
xchg
sbb
pop
mov
jle
sub
mov
push
stos
inc
cli
mov
icebp
inc
fdivrp
int
notb
cmp
add
inc
jl
inc
repnz
jge
rorl
sbb
sbb
movsl
call
std
fptan
mov
inc
aam
mov
dec
mov
gs
lock
out
xchg
test
push
ret
cli
mov
fdivrs
sbb
mov
mov
xchg
loop
or
mov
aam
loopne
or
lods
pop
cwtl
clc
xchg
call
fwait
cld
mov
and
and
lahf
js
push
mov
mov
fsubs
sub
inc
mov
nop
mov
pop
xchg
aaa
ljmp
cmp
dec
dec
leave
sbb
mov
std
xchg
add
outsl
icebp
dec
ljmp
outsb
cmp
xchg
add
mov
and
cs
out
mov
mov
in
or
jmp
fwait
roll
push
aaa
std
inc
das
repnz
lret
sbb
xor
ret
push
sub
add
test
fcoml
mov
leave
subb
out
arpl
lcall
clc
aad
push
mov
je
mov
pop
aam
aas
cmp
push
ret
mov
and
out
adc
outsb
xchg
ja
enter
lahf
push
jo
pop
adc
and
leave
je
mov
aaa
adc
cmp
dec
stc
rclb
out
cmp
pushw
jo
and
repz
xor
push
mov
nop
jbe
push
xchg
cmpsb
add
test
jo
push
or
add
fsub
mov
mov
jecxz
xchg
inc
pop
mov
int3
js
or
jge
add
in
out
or
in
xchg
fcmovnb
idivb
sbb
pop
jmp
pop
clc
pop
add
test
or
cmpsb
cmc
pop
pop
jecxz
pop
dec
add
cmp
clc
insl
clc
pop
adc
lock
mov
pusha
outsb
cwtl
pop
addr16
sarb
push
mov
shrb
outsb
xor
adc
and
pop
pusha
fsubrl
movsl
push
aas
or
cld
in
mov
flds
jle
aaa
mov
pushf
pop
jno
add
mov
or
lret
loopne
pushf
dec
out
xor
xchg
aaa
cltd
aas
aas
push
ljmp
pop
xchg
xor
lahf
jg
cmp
dec
sbb
mov
movsl
cli
jl
outsb
lret
popf
mov
cmpsb
jmp
fwait
pop
jo
insl
addl
jp
pop
stc
in
jno
popa
or
mov
aaa
lods
push
scas
movb
xchg
out
sub
jns
repnz
les
lods
outsb
jmp
cs
sbb
test
xchg
xchg
and
out
and
addr16
xor
fdiv
push
ja
scas
adc
jno
or
dec
or
loop
cld
data16
fptan
xor
xchg
push
push
cltd
push
sti
lock
fwait
add
mov
add
jle
dec
or
fstl
mov
cltd
ficomps
cmpsb
jo
lret
sahf
jle
and
cld
mov
bound
into
nop
pop
leave
gs
les
and
jl
mov
movsb
xlat
adc
clc
mov
add
adcl
xacquire
sbb
leave
mov
imul
sub
cmp
cs
push
aam
and
fists
data16
mov
mov
xchg
shlb
outsb
clc
pop
out
call
jmp
fs
int
std
pop
mov
ret
adc
pop
xor
out
mov
mov
mov
jecxz
outsb
xor
xlat
mov
roll
ret
push
outsb
sub
aaa
cmpsl
mov
lock
nop
jge
and
mov
inc
jp
mov
sub
nop
and
sar
outsb
ljmp
mov
cmp
movsl
cmp
xchg
ljmp
jo
fidivl
xchg
loopne
je
sbb
push
jg
lock
outsb
cwtl
shll
pop
loopne
sbb
push
cmp
add
fs
loop
loopne
mov
dec
jp
or
lahf
pop
mov
test
jnp,pt
ss
roll
in
adc
call
jg
pmaddwd
stos
insl
pop
dec
adc
jnp
mov
int
jl
and
sbb
subl
mov
jmp
push
jo
shr
sub
clc
xchg
ss
stc
fidivl
psllw
xchg
stos
repnz
mov
bound
bound
ljmp
push
mov
ds
sbb
cmc
pop
andb
add
mov
in
bnd
pop
xchg
in
call
jae
repz
mov
and
pop
mov
call
movsb
pop
ja
test
int
cmpb
xchg
jl
aaa
adc
dec
aas
or
push
hlt
repz
sub
ds
in
cld
add
or
in
mov
clc
test
bnd
in
in
xor
enter
sbb
inc
jl
test
or
jp
fwait
mov
movsb
sub
xorb
add
push
push
mov
mov
add
divb
lret
sub
sbb
or
xlat
cmpsb
repnz
mov
call
repnz
sub
jmp
in
push
es
cmp
mov
xchg
lods
cmp
push
sub
xchg
dec
and
test
jl
xor
ja
mov
cld
aaa
incl
push
icebp
mov
pushf
jecxz
test
in
outsl
mov
sbb
jb
mov
xchg
mov
jno
sbb
les
out
push
call
ljmp
pop
or
andl
jmp
add
or
pusha
fstpt
push
clc
repz
jl
pop
fisttpll
daa
mov
cltd
adc
out
xchg
bound
mov
clc
push
xchg
pop
xchg
imul
or
std
das
popa
or
pop
dec
mov
roll
stc
idivb
push
push
aas
or
jle
pop
xchg
xchg
xchg
dec
testb
mov
adc
adc
in
outsb
inc
pop
addb
cmc
enter
cmp
jmp
xchg
lahf
lcall
jb
lock
cmp
jnp
test
out
push
hlt
sub
inc
mov
jo
mov
inc
std
jl
cmc
cld
add
sar
mov
jae
es
aaa
jg
xor
push
and
jmp
fistpll
dec
add
out
loope
orb
mov
lock
shl
mov
jbe
pop
add
lds
xor
sub
stc
fildll
adc
stos
inc
sbb
push
and
fidivrl
mov
cs
xor
cmpsb
clc
dec
in
sub
cmc
sub
mov
adc
sbb
pop
or
xchg
cli
out
outsb
cmp
mov
stos
dec
push
out
andl
ds
mov
movsb
mov
or
idivb
repz
adc
pop
stos
and
and
fwait
push
mov
testb
mov
xchg
dec
sbb
lea
mov
mov
aad
cmpsb
icebp
out
bound
mov
pop
push
mov
jmp
fstl
ds
adc
mov
divps
xor
xchg
out
sti
inc
pushf
out
je
repz
pop
ret
push
aad
stc
shlb
decb
push
lret
cmp
clc
fucomp
rorb
in
mov
xor
test
push
std
mov
shrl
jo
jae
jg
cmc
xchg
sub
sub
pop
cmp
rclb
inc
pop
xchg
shll
in
test
cmp
sar
es
jnp
push
das
or
jmp
sbbl
cwtl
out
adc
clc
and
ss
repnz
sarl
ss
rorl
pop
xchg
mov
mov
call
test
call
xlat
outsb
cld
loopne
jae
and
das
call
pop
and
adc
and
scas
ret
stc
fstp
test
aam
mov
dec
pop
outsl
nop
outsb
push
out
cmpsl
xor
lock
aas
sbb
mov
jecxz
jg
push
pop
test
inc
xchg
push
dec
nop
mov
pop
push
out
es
add
sbb
movsl
loope
ret
mov
mov
pop
jecxz
loopne
pop
sbbb
ljmp
sarb
popl
push
xor
js
cld
je
adc
jmp
loopne
sub
addb
cli
rclb
pusha
rep
cltd
packsswb
das
test
out
adc
ljmp
cmp
stc
pop
in
cmp
jne
lret
add
aaa
iret
xchg
xor
iret
inc
sbb
xor
jg
jp
push
mov
xchg
loopne
mov
arpl
mov
and
lods
jnp
mov
pop
pop
rolb
or
decb
jmp
inc
jp
sarb
mov
fbstp
js
repz
lock
add
das
stos
add
es
lret
inc
cmc
in
notl
pusha
je
mov
stc
and
out
pop
xor
in
pop
adc
movsl
out
jmp
outsl
xchg
lock
adc
jb
jmp
ds
shrl
notb
testl
mov
sub
push
shll
push
xchg
mov
jo
int
xchg
push
jnp
mov
fisubrl
xchg
push
out
or
jmp
add
mov
in
push
aam
mov
push
jo
scas
pop
icebp
pop
rorb
mov
sub
scas
mov
cwtl
mov
pop
repnz
clc
in
fcoms
mov
sbbb
sbb
addl
fndisi(8087
push
xor
jl
pop
nop
subl
bsf
cmp
aaa
lock
jbe
push
ljmp
push
cmpsb
in
clc
dec
cmp
sahf
outsb
mov
push
cld
adc
iret
stos
cmpsb
mov
and
mov
subb
test
std
dec
iret
rcrb
pop
add
pushf
iret
movsl
xchg
mov
shrl
mov
xchg
jmp
cli
xorb
push
push
xor
jb
dec
jl
pop
fldl
scas
pushw
push
loopne
pushf
pop
bswap
loope,pn
nop
inc
xchg
add
mov
xchg
jmp
xchg
outsb
lods
mov
sbb
out
xor
ficoml
jle
les
int3
test
push
out
icebp
pop
push
imul
and
stc
push
inc
push
not
ret
pop
adc
test
inc
outsl
adc
jne
jbe
mov
pop
je
lcall
jg
xchg
imul
dec
jle
out
leave
ret
testb
les
outsb
pop
cmp
jnp
dec
repnz
lods
inc
adc
icebp
repz
xchg
pop
leave
sbb
cmc
add
jbe
xchg
fstpl
add
outsl
jle
lock
xchg
pop
push
mov
and
das
sub
push
mov
fsub
fwait
mov
add
insl
mov
push
repnz
mov
cmpl
inc
clc
inc
gs
xchg
repz
xchg
lods
jge
mov
mov
push
clc
xchg
mov
movl
lock
movsl
ja
aas
mov
outsl
mov
cmp
outsl
jg
and
daa
repnz
pop
push
test
cmp
fidivrs
scas
int3
xor
jo
or
inc
mov
out
aaa
subl
fwait
cld
loop
gs
ss
andl
outsl
shrb
bound
insl
ret
mov
rcl
sub
fidivrl
mov
inc
out
push
add
aam
addl
cwtl
lods
mov
mov
cmpsb
mov
jno
jbe
xchg
xchg
pop
scas
cltd
imul
insb
das
jp
sti
push
pop
les
fbld
testb
jne
loopne
fistps
push
cld
cld
arpl
clc
pusha
mov
insl
lcall
jp
gs
cmp
sub
cmp
pop
stc
lret
push
cs
jns
loop
outsb
xor
xchg
jno
cmp
mov
insl
mov
adc
inc
dec
pusha
repz
mov
loopne
mov
hlt
nop
loope
push
mov
cmpsl
adcb
ljmp
sbb
push
pusha
idivb
push
mov
adc
stos
les
repnz
ljmp
test
inc
sahf
push
call
jo
mov
jnp
aaa
ljmp
shrl
pop
out
repz
pop
jmp
les
mov
pop
pop
and
adc
inc
sbb
jnp
bound
cmpsb
xchg
in
ret
jp
push
clc
bound
mov
inc
ret
mov
ss
lret
dec
cltd
add
aaa
int
shll
fdivs
pusha
inc
das
les
stos
jge
arpl
repnz
or
sarb
cmp
arpl
or
cld
stc
pop
repnz
pop
pop
subl
or
dec
idivl
jo
stc
mov
push
push
add
inc
in
pop
fisubrs
imul
push
outsb
mov
int
push
out
mov
bound
hlt
sub
jmp
push
xchg
movsb
dec
jne
pop
pusha
pop
push
lret
xchg
addb
push
frndint
xlat
inc
call
xor
in
adc
insb
dec
cld
outsb
loope
adc
out
sub
add
adc
jge
fdivrs
or
test
lcall
dec
pop
adc
pop
mov
leave
mov
pop
mov
jne
mov
fadds
mov
mov
fwait
mov
mov
out
sub
mov
adcl
jnp
sub
icebp
int3
iret
incl
js
jo
inc
sarl
inc
jne
xchg
mov
inc
and
hlt
into
sub
push
inc
subb
xchg
scas
mov
jns
xchg
pop
inc
push
xor
sbb
in
cmpl
mov
inc
filds
or
jnp
xor
shrl
xchg
push
out
das
lahf
add
sbb
lock
mov
imul
cmpb
outsb
pop
mov
jbe
sti
push
js
mov
mov
inc
lcall
out
mov
inc
and
jns
mov
jnp
les
dec
cs
stc
jb
sarl
sub
loop
cmpsl
mov
xchg
lret
call
cltd
js
call
hlt
sbb
cmp
hlt
and
xlat
loopne
or
outsb
loopne
xchg
xchg
icebp
push
jp
sub
xorb
stos
sub
xchg
pslld
adc
xlat
mov
call
dec
lock
cli
mov
mov
testb
fdivrl
hlt
subl
pusha
arpl
pop
fldenv
outsl
xor
imul
fprem1
push
cmpsb
les
bound
push
js
inc
loope
idiv
insb
lds
in
pop
daa
mov
add
lock
inc
jnp
test
adc
mov
adc
popa
cld
add
out
imul
aaa
call
mov
pop
mov
xchg
lahf
test
rclb
dec
sub
sar
push
lcall
xchg
push
fcompl
or
insb
add
pop
mov
lods
sbb
or
loope
test
mov
push
imul
cld
fucomip
cmp
fistpll
jne
sbb
je
daa
sbb
les
lock
push
scas
pop
lods
fwait
xchg
aas
imul
xchg
mov
jns
in
movsl
and
add
adc
jl
lock
ret
nop
sub
jns
repz
popl
addr16
test
lock
mov
push
out
sti
ffreep
roll
xor
cli
adc
sub
lahf
mov
jne
loopne
mov
add
or
push
fcomp
inc
test
mov
xor
lcall
push
faddl
repnz
test
inc
lcall
mov
mov
mov
clc
out
cmc
mov
pop
fsubrl
push
hlt
or
xchg
jp
sahf
int
repnz
xchg
adc
mov
pop
add
push
jmp
jecxz
push
mov
xor
pop
and
pop
mov
push
sbb
jecxz
cwtl
or
fidivrs
lds
sbb
lret
cmp
fdivl
inc
loope
and
lret
andl
in
mov
sub
push
jg
xor
jb
sub
or
jp
loope
or
fs
pop
std
sbb
add
out
dec
icebp
pop
and
push
outsb
jb
movsl
xor
incl
into
sub
test
paddsb
je
int3
repz
dec
lahf
stos
adcb
adc
push
jo
std
dec
or
negb
fmuls
pop
movb
cli
add
pop
cld
mov
xlat
mov
add
icebp
sub
inc
jg
outsl
int
call
ljmp
xor
das
add
movsl
pop
fcmovb
es
iret
lret
test
clc
cld
shl
out
sbb
scas
jo
in
mov
nop
sbb
stc
push
ljmp
mov
out
mov
imul
xchg
fisubrs
mov
mov
cmpl
mov
ret
in
inc
sbb
mov
mov
xor
inc
pushf
insb
mov
pop
fisttpll
mov
lcall
lock
push
loop
popl
jb
popf
repnz
iret
push
xchg
inc
mov
inc
les
jle
dec
call
jle
enter
jo
cmp
jg
movsb
push
pushl
sub
icebp
lret
mov
inc
push
out
out
popf
add
xor
and
loope
inc
call
insb
stc
xchg
jnp
hlt
jecxz
je
jl
push
or
das
pop
movsb
push
andl
push
fsts
cs
into
scas
mov
or
xchg
test
xchg
stc
mov
inc
mov
outsl
hlt
or
jg
mov
adc
sarb
shrl
pop
jns
push
pop
test
lcall
and
je
stc
xchg
dec
loop
out
hlt
sub
sub
add
pop
push
xchg
lahf
mov
add
sarb
xlat
rolb
ljmp
clc
push
hlt
lahf
jg
push
pop
sahf
imul
outsl
lods
call
js
pop
test
mov
adc
daa
arpl
pop
xor
aas
adc
jno
repz
sbb
lea
push
fcmovnb
mov
push
outsb
ds
cli
xor
jb
pop
cld
fldcw
ret
lods
pusha
push
clc
mov
enter
jmp
repz
dec
daa
jmp
mov
and
test
ljmp
mov
aas
add
inc
pop
xchg
sbb
das
shrb
rcrl
insl
fiadds
jbe
aam
in
push
adc
sub
cli
pusha
incl
push
xchg
ljmp
cmpl
pop
inc
icebp
xor
push
dec
or
rorb
pop
cli
adc
mov
rcrb
int3
pushf
test
pushf
jo
pop
std
or
or
xchg
cmc
loop
cmpl
mov
loope
mov
cld
mov
aaa
sub
popf
orb
movsb
hlt
shrl
mov
testb
fwait
pop
mov
push
or
lret
into
jecxz
mov
mov
call
cmp
xor
loopne
xchg
and
std
test
fucomip
lods
lret
pusha
stc
cmp
int
mov
pop
popa
dec
mov
cli
and
push
lock
cmpsb
lret
fbld
dec
clc
insb
jg
aaa
lret
sarl
call
sbbb
mov
les
xchg
test
jno
stos
bound
ljmp
shrb
test
subl
in
sahf
add
incl
stos
outsl
jg
sbb
in
in
cmpb
push
jnp
adc
push
and
das
aam
xchg
mov
in
xchg
or
fcompl
jno
mov
pop
lret
clc
xchg
xchg
pop
mov
arpl
out
push
mov
or
iret
pop
dec
add
xchg
push
fidivs
in
or
pop
fadds
mov
repz
gs
adc
mov
mov
das
or
dec
scas
pop
mov
ficoms
jmp
out
cli
not
xchg
enter
mov
cmp
xor
in
jb
clc
push
cmp
mov
sbb
xchg
xchg
mov
push
dec
cld
cs
sbb
je
mov
jg
cmp
and
mov
cmpsl
nop
fisttps
fldl
jle
xor
push
xor
fnstsw
mov
xchg
jne
push
inc
ja
pop
test
xchg
stos
aas
repnz
cs
inc
jmp
push
outsl
jb
push
pop
jle
scas
pop
jge
sub
jb
sahf
mov
sahf
dec
test
fdivrs
imul
das
outsb
nop
loopne
or
sbb
clc
push
aas
testb
lock
clc
mov
pop
xor
jmp
daa
xorl
call
xlat
mov
test
je
inc
in
xor
shlb
sti
mov
loop
iret
pop
xor
push
in
cmp
mov
push
mov
je
add
test
stos
jnp
insl
adc
das
test
cmp
outsl
out
mov
push
jp
push
cmp
add
test
int
clc
jo
and
out
shlb
ljmp
jns
movsl
loop,pn
fxam
or
mov
adc
pop
cli
int
push
push
xchg
mov
bound
je
sbb
pop
sahf
lahf
cmp
cmp
in
pop
add
inc
adcb
push
imul
sbb
loopne
xchg
push
lea
std
fwait
inc
cmp
cli
adc
es
repz
cmp
mov
pushf
sbb
dec
in
stc
push
sbb
and
outsl
sub
pop
jns
mov
fdivs
pusha
sub
inc
jae
aam
xor
pusha
lock
in
enter
insl
jae
add
rorl
dec
adc
leave
in
adcb
adc
push
bound
xchg
bnd
insb
xchg
cmpsb
les
decl
jecxz
pop
rclb
icebp
lret
cmpsb
imul
js
repnz
int3
filds
lcall
mov
lret
pop
loopne
push
out
sub
and
ljmp
cmp
lret
lea
jo
jl
imul
xorb
push
sti
divl
aad
pusha
imul
mov
incb
and
cmp
decl
push
lds
xchg
lds
ret
clc
push
jo
and
pop
adc
inc
aas
jmp
jl
inc
add
push
cmp
xor
push
add
cwtl
pop
cmpb
rolb
mov
jle
addr16
xor
xchg
cwtl
mulb
cli
jbe
mov
inc
jne
cmp
and
movb
ljmp
mov
mov
push
inc
add
sbb
repz
pop
mov
loop
clc
out
adc
sarb
cmp
in
adc
in
mov
clc
and
push
hlt
jge
xchg
jo
fmuls
sub
sbb
int3
pop
loop
outsb
cmp
repnz
xchg
or
ficompl
insb
add
xchg
rcrl
sti
adc
enter
mov
mov
push
inc
lahf
aad
popf
loopne
mov
dec
movsb
mov
dec
sbb
sti
pop
jne
and
nop
ss
jle
ja
clc
aad
cs
es
jg
push
jo
jbe
es
aad
and
jmp
push
out
mov
lahf
dec
rclb
add
fsubr
push
in
arpl
cs
cmpb
cmpsb
clc
sahf
in
dec
out
or
push
xor
inc
inc
mov
ss
sub
push
jg
sbbb
fnstenv
xorb
in
in
adc
adc
test
cmp
imul
mov
scas
fdivl
cli
push
jmp
jl
mov
cmpsb
addb
cmp
add
and
std
jp
sub
mov
and
popa
aam
addl
push
adc
hlt
sbb
jnp
push
fsub
mov
push
psllq
hlt
mov
adc
and
mov
addl
cmp
mov
cmp
jp
in
sub
push
jp
lret
mov
cmpsb
loopne
xor
pop
loopne
jnp
or
mov
jp
aaa
add
pop
sbb
adc
xchg
in
cmc
cmpsb
pop
clc
jae
cmp
repnz
or
lods
cltd
inc
push
mov
jp
mov
loop
addr16
scas
ljmp
insl
lock
fadd
inc
insl
sub
rolb
or
mov
add
clc
cmp
xchg
bound
inc
dec
jp
stc
ljmp
je
jle
cmp
rol
clc
or
xchg
add
cmc
sarb
dec
fs
fldenv
xchg
int3
push
movsb
push
adc
les
pslld
je
jno
repnz
out
loop
daa
popf
inc
mov
arpl
xor
mov
movsb
jp
dec
fwait
sbb
xchg
adc
sub
jp
icebp
sub
ss
lret
add
mov
mov
or
add
adc
lock
push
mov
cmp
clc
shlb
je
and
clc
or
sbb
xchg
ljmp
push
adc
xchg
bnd
xor
mov
and
lret
mov
sbb
adc
call
xor
push
mov
cmp
ds
or
mov
ds
cwtl
popa
xor
loopne
dec
mov
das
inc
push
imul
les
cwtl
insb
roll
dec
and
fidivl
jnp
in
loop
mov
inc
cmpsl
outsl
pop
dec
idivb
mov
jg
jp
test
add
or
ss
outsb
shr
mov
cmpsb
out
pop
out
lahf
dec
mov
xchg
mov
pop
jg
stc
mov
call
lret
pushf
dec
inc
sub
adc
clc
xlat
rorb
xchg
add
add
sub
aam
push
mov
dec
push
adc
aad
mov
ja
sbb
cmpb
popa
sub
pop
loope
xor
jb
mov
mov
std
sub
lock
jg
call
jg
pusha
das
xchg
sbb
sbb
data16
jae,pt
pop
pop
stc
dec
loope
xchg
ficompl
xchg
loopne
cmp
fdivrp
xor
je
jmp
push
clc
cmp
and
add
add
pop
cli
add
or
and
fsubl
jp
out
enter
jecxz
hlt
add
cld
or
mov
pop
adc
add
ret
xchg
push
lret
jp
insb
aaa
subb
ss
ss
repnz
outsl
js
xchg
jno
sbb
mov
adc
sub
loop
jmp
mov
stos
test
and
sar
repnz
mov
or
xchg
fimuls
adc
jl
adc
sub
mov
fistpl
push
or
mov
das
outsb
lea
sub
pop
and
or
arpl
push
push
cmc
leave
xor
mov
imul
mov
add
test
clc
iret
or
stc
and
sbb
fs
add
mov
js
mov
pushf
stos
or
pop
inc
mov
fwait
push
loop
mov
and
adc
das
ss
ds
xorl
xor
mov
mov
out
sbbb
xchg
cmpsb
test
loopne
insb
std
outsb
aam
inc
cmpsb
pop
clts
xchg
sbb
adc
inc
lahf
jae
es
pusha
roll
lcall
jbe
mov
push
sub
icebp
mov
orb
test
mov
popa
dec
es
sbb
add
icebp
loopne
pop
repnz
bound
fbld
orl
les
outsl
pop
mov
add
rol
lahf
outsb
outsb
rolb
fildll
fiaddl
pusha
sub
stc
rorl
call
sub
or
adc
xchg
adc
add
inc
pop
clc
ja
repnz
mov
movb
dec
jge
out
leave
lea
inc
out
mov
xchg
cmp
loope
xchg
push
je
inc
cli
push
loop
stos
and
push
cld
xchg
or
sahf
jge
inc
lock
add
in
nop
ss
out
es
fistpll
flds
add
ss
cmpb
jecxz
das
pop
hlt
sub
in
jmp
mov
xor
inc
add
call
pop
inc
fidivrl
stos
outsb
lcall
or
into
mov
jb
shl
clc
sahf
inc
sub
bound
outsl
cmpb
hlt
fidivs
pop
or
mov
mov
ffreep
sbb
test
xor
mov
inc
outsl
push
push
lods
flds
data16
fs
push
stos
adc
test
int3
cmpsb
subb
repnz
pusha
lds
hlt
fwait
imul
outsb
test
bound
jg
pop
idiv
fdivs
cmc
iret
test
in
hlt
sub
popa
xor
pop
xchg
aaa
jg
and
dec
xor
inc
pop
cltd
jbe
aad
xchg
lock
lea
lods
xchg
fnstcw
and
aaa
jg
fwait
aaa
xchg
adc
ss
repnz
inc
add
out
outsb
lods
xchg
shlb
mov
lock
shl
jg
add
mov
xorl
hlt
out
add
ret
cld
fdivrp
cmp
int3
inc
add
mov
pop
or
fmull
push
nop
pop
nop
push
int3
fstpl
adc
push
aas
sub
std
jge
or
in
lock
es
movsb
fwait
xlat
rcrb
lahf
dec
std
imul
xchg
add
cmc
mov
loopne
lods
aam
adc
clc
mov
mov
fwait
sbb
int
or
push
lock
pop
movl
push
lods
add
jl
outsl
nop
pop
sar
roll
adc
pop
add
or
fisubl
push
mov
jg
inc
xchg
icebp
cmpsb
sahf
js
mov
loopne
inc
rcr
outsb
insb
cld
inc
in
sbb
push
mov
sub
push
pusha
sbb
xsave
mov
lea
mov
std
bound
andl
sub
xchg
and
jg
hlt
aam
cld
stos
add
icebp
cs
push
dec
out
fcoml
inc
test
or
nop
pusha
std
inc
clc
or
or
xchg
jb
addr16
mov
xchg
std
out
add
decl
fdiv
pop
out
push
cltd
out
and
cmpsl
add
insl
pop
sub
adc
test
push
movsb
cmp
jp
jne
sbb
clc
inc
or
jmp
pop
xor
xchg
inc
pop
cmc
out
jbe
and
lcall
adc
fdivp
xorb
sbb
in
and
push
in
pop
out
int3
mov
mov
loopne
test
js
sub
arpl
in
dec
jge
push
aam
inc
xchg
push
sahf
sbb
out
jecxz
cli
in
push
ficoml
jne
mov
push
mov
xor
push
icebp
sbb
lock
ficomps
rorb
mov
push
std
or
aaa
loopne
mov
fmulp
add
movsb
sbbb
fadds
cld
inc
call
xlat
jle
or
pusha
sar
fmuls
push
int
int3
dec
in
ljmp
movsl
daa
push
push
sbb
pop
ljmp
jnp
aam
out
cli
or
inc
fsts
imul
jo
xor
aas
test
bnd
mov
outsb
loopne
mov
fs
push
sub
mov
cli
out
sarb
jg
sbb
mov
inc
ret
addb
mov
fcoms
jmp
lret
repnz
outsb
jp
into
mov
xchg
outsb
xor
test
and
outsl
shl
stc
out
popa
out
add
aad
cmp
jmp
into
js
adc
test
fadds
push
pushf
in
sub
cmpsb
xchg
push
clc
pop
aam
data16
popa
sbb
nop
pop
in
in
mov
jo
mov
je
jl
hlt
cmpb
cmpl
dec
shl
out
enter
fists
jae
test
lea
mov
hlt
mov
push
inc
stc
push
dec
in
icebp
adc
clc
push
lock
push
jo
lock
fcom
cmp
scas
imul
clc
xchg
cli
push
loopne
daa
ds
xchg
sub
fadds
xchg
pop
jmp
pop
jg
mov
clc
jbe
in
incl
mov
loopne
repnz
loopne
les
outsl
lcall
lcall
push
mov
fimuls
push
push
lret
mov
ss
out
pop
repnz
pop
sbb
jg
in
mov
lock
je
jns
je
or
sub
push
push
pop
mov
jno
fstpt
xchg
call
inc
out
hlt
gs
popa
mov
lahf
pop
aaa
call
stc
in
xchg
xchg
repz
pop
rcrb
clc
in
ret
or
xchg
lds
adcb
je
mov
mov
sub
adc
push
orb
inc
js
loope
test
testb
sub
sbbb
fucomp
and
sub
out
mov
sub
ljmp
xor
jp
inc
testb
dec
jg
pop
sbb
out
jg
repz
ds
inc
push
lahf
int3
mov
lods
enter
adc
scas
mov
cmc
ficoml
xchg
das
sbb
push
sub
jg
xorl
cmp
fldl
aam
pop
ss
in
jg
pause
cli
lcall
push
orl
add
push
enter
rol
and
cmp
inc
mov
or
push
cmpsb
mov
outsb
xchg
lock
cli
shll
mov
cmpsl
dec
imul
scas
call
pop
push
add
and
ret
push
cmp
add
mov
pop
rorb
push
pop
sbb
xchg
aaa
lds
daa
xchg
adc
mov
jp
aaa
mov
fcompl
inc
mov
stos
jmp
test
xchg
add
jg
fldcw
stc
movsl
popf
insl
nop
dec
add
cmpsl
inc
mov
adc
js
loopne
les
into
mov
add
adc
jns
shl
add
ret
sub
subl
sahf
jmp
jl
xchg
rorb
mov
cwtl
pop
rorl
addr16
stc
add
lcall
fdivr
imulb
xchg
stos
pop
insl
ret
pushl
cmc
pop
mov
fwait
push
add
lods
push
lcall
or
dec
call
scas
insb
cmp
push
pop
loopne
loop
insl
add
es
loope
sub
and
repnz
fwait
adc
mov
xchg
outsl
mov
inc
data16
sbb
jo
mov
adc
mov
loop
sbb
and
xchg
adc
repz
or
add
hlt
orl
add
lods
cmp
add
test
sub
fwait
rcr
xor
add
popw
rorb
ret
imulb
fisubrs
xor
mov
xor
std
adc
jnp
sub
add
testb
addr16
nop
and
incl
xchg
movb
jno
sbb
pop
rol
push
add
mov
mov
loope
mov
mov
test
xor
lret
rolb
daa
dec
cmp
aaa
sub
fsubs
pop
pop
ss
xchg
and
loopne
mov
push
pop
iret
cmpb
adc
out
inc
inc
push
popf
fistl
mov
xor
jb
aas
js
addl
mov
jle
mov
xchg
rcrb
lcall
in
popa
lods
mov
xlat
xchg
cmpsl
add
cmp
xor
jno
add
icebp
leave
js
nop
clc
lea
test
pop
lea
and
add
mov
sbb
push
push
push
sub
dec
push
std
pop
dec
in
adc
inc
stos
add
sti
jmp
xor
cmp
mov
pop
fwait
addl
xchg
out
jo
mov
dec
mov
cltd
and
mov
or
pop
pushf
or
dec
or
es
sbb
sarb
idivb
add
xor
adc
mov
call
jns
fnsave
adc
bound
jbe
dec
sbb
cld
pop
icebp
xor
push
cmpsb
loope
int3
xor
mov
inc
add
std
xor
nop
mov
mov
pop
in
xlat
sbb
stc
xchg
mov
pop
pop
ja
test
adc
iret
sub
rclb
outsl
dec
scas
xchg
mov
mov
jge
ret
fcmovnb
mov
sbb
adc
nop
in
add
filds
mov
std
pop
pop
fwait
mov
pop
pushf
push
inc
or
imul
aaa
js
pop
ffree
jg
jnp
push
jl
outsl
cmp
xchg
ss
insb
push
addr16
mov
std
ljmp
in
jo
insl
mov
das
pop
out
xchg
stos
inc
dec
push
icebp
push
or
mov
pusha
std
lahf
dec
xorb
cwtl
es
pop
add
mov
dec
adc
mov
mov
mov
scas
je
push
sbb
js
push
cld
in
mov
add
fists
and
clc
xchg
ss
sbb
mov
aad
xchg
fidivs
mov
push
xlat
mov
mov
jmp
movsb
pop
orb
xor
push
adc
sbb
cwtl
push
xchg
ficompl
cmp
lds
out
call
arpl
lcall
mov
ss
pop
and
jb
fnstsw
add
cmp
push
add
aas
fwait
inc
mov
push
imul
jge
pop
push
cmc
push
hlt
fwait
out
pop
or
add
fstpl
pushf
push
sub
repnz
xchg
dec
sub
ljmp
movsl
mov
add
lock
ret
bound
push
pusha
inc
or
mov
ja
les
xchg
cmp
pop
pop
fcomp
lock
xor
jmp
cmp
xchg
mov
push
mov
push
hlt
or
cmpsb
popa
lcall
xor
sti
add
xorb
std
cmp
outsb
dec
cmp
cmpsl
int3
fdivrp
test
mov
push
mov
lret
cli
scas
scas
in
ds
mov
lock
dec
stc
cmpb
test
mov
jns
jle
add
mov
adc
outsl
mov
mov
fists
stos
shlb
out
push
pusha
cltd
aas
and
adc
stc
fs
push
test
imul
and
jo
subb
test
add
lret
sahf
jb
testl
mov
cmp
dec
jb
pop
and
inc
mov
add
arpl
mov
test
test
fdiv
pusha
rcrb
and
add
fisubrl
fsubs
in
rolb
jno
and
lods
cltd
adc
push
popf
call
mov
xchg
or
sbb
inc
inc
adc
aas
mov
cmp
sub
mov
stos
add
mov
test
cli
sbb
arpl
mov
shrb
outsl
adc
mov
mov
daa
jl
fwait
adc
add
and
ret
popa
adc
and
lea
std
pop
inc
loope
setl
cmpsl
sbb
and
push
sbb
mov
push
mov
adc
pop
inc
jecxz
shrb
scas
xchg
push
cmp
and
jae
icebp
push
lret
xor
cmp
stos
scas
mov
mov
xchg
iret
pusha
sbb
inc
bound
mov
movsb
js,pn
iret
mov
add
mov
ficompl
fdivs
pop
dec
scas
sub
and
clc
push
jbe
push
fsubp
rclb
xor
int3
mov
add
xchg
pop
xchg
add
fsubl
xor
dec
jecxz
test
scas
stos
int3
add
movsb
and
and
sar
jg
testl
push
and
or
jg
stos
dec
mov
jno
rorb
adc
pop
dec
jle
inc
mov
sbb
cmpl
push
xchg
add
ds
fbstp
add
push
vmread
mov
jge
mov
xchg
mov
jno
pusha
std
in
jmp
xchg
add
pop
pop
rolb
ror
dec
sbb
popa
pop
or
nop
test
icebp
jg
jle
rol
add
mov
add
mov
cld
loopne
bound
mov
push
push
lcall
pop
icebp
aad
addb
cmp
sarb
imul
or
js
cld
push
push
pop
mov
sbb
aas
scas
test
pop
dec
in
and
test
cmpsb
sbb
add
sub
pop
add
fs
js
std
pop
icebp
push
xchg
cmc
sti
fs
mov
sbb
sbb
cmp
inc
sub
or
sub
test
sub
cli
jg
push
cmpsl
cmp
sub
bound
sub
les
or
xchg
hlt
shll
pop
cs
rorb
loop
loope
shlb
stos
mov
hlt
xor
sub
pop
xchg
into
add
push
rcrl
dec
test
mov
in
wrmsr
or
lcall
mov
incl
push
andb
in
adc
std
jbe
inc
push
rcr
add
pop
rol
push
sbbb
shrb
outsl
or
clc
sub
sub
jo
lock
rorb
add
xchg
sbb
inc
mov
imul
mov
cmp
sub
dec
movsb
test
mov
fstps
imul
mov
xchg
sbb
inc
jbe
addr16
xchg
add
leave
and
rcrb
dec
cld
jg
sbb
push
xlat
add
fptan
mov
loopne
add
adc
test
andb
mov
add
loopne
sarl
call
aaa
or
pop
mov
cltd
incl
inc
jo
push
xorb
and
and
xchg
pop
into
push
cmp
test
cmpsb
cmpb
fistps
clc
mov
int3
mov
push
add
clc
or
movsl
mov
sbb
hlt
int
and
xchg
nop
inc
hlt
mov
add
daa
loope
decl
sbb
push
pop
sbb
mov
and
test
dec
popf
push
dec
and
lods
mov
into
test
leave
es
cmp
jns
lret
lock
cmp
or
orl
das
loopne
mov
aaa
ret
sbb
dec
xor
movsb
leave
movsb
lea
nop
xor
sahf
fbstp
dec
lds
inc
xchg
sbb
shll
inc
sbb
mov
push
add
mov
adc
addr16
rcr
cld
dec
sbb
call
das
add
test
push
add
fdivr
pop
add
inc
adc
pop
shrb
cmp
ds
add
mov
jb
jmp
push
xor
movd
dec
cmp
jno
sarb
inc
push
add
movsb
cmp
pop
std
push
popa
popa
xchg
les
repz
inc
and
xchg
imul
dec
les
movsb
aad
or
fs
repnz
mov
adc
mov
push
std
mov
cmovl
mov
mov
add
or
xchg
je
lds
add
cmp
adc
lock
jo
out
lock
and
es
hlt
push
dec
push
push
or
fsts
or
or
sti
lods
nop
inc
cld
push
dec
orb
enter
push
jmp
jg
jb
dec
outsb
call
cmp
inc
stos
pushf
mov
mov
mov
lods
inc
add
ret
pusha
dec
adc
mov
push
inc
cmpsl
cmpsb
sbb
sbb
out
pop
inc
movl
and
jle
cmp
fildll
pop
push
and
mov
mov
andb
filds
hlt
cmp
xchg
xor
mov
aaa
movsl
adc
sub
jb
mov
ja
adc
push
jo
in
lea
mov
mov
push
cmpsl
mov
hlt
cmp
xchg
pop
loopne
loope
out
mov
jb
xchg
inc
sbb
mov
push
add
or
sar
jnp
adc
les
cmp
test
mov
xor
pushf
adc
pop
je
mov
loopne
das
adc
jb
loope
jg
inc
repz
mulb
jo
jbe
mov
fcoml
stos
mov
scas
xor
call
popa
data16
fdivl
jbe
add
or
scas
testb
mov
shrb
roll
decl
iret
jecxz
xchg
cmp
cmp
and
cmc
or
mov
fldl
addb
adc
dec
pop
jecxz
in
jg
movsb
stos
lcall
cmp
dec
negl
out
les
jnp
imul
add
push
add
inc
dec
mov
add
int
sbb
sub
xor
pop
ljmp
dec
jnp
or
mov
add
test
push
sbb
jnp
or
jmp
ret
aas
and
dec
nop
les
incb
pop
clc
mov
mov
addb
and
or
jbe
test
gs
mov
inc
out
mov
aam
add
imul
pushf
xorl
xor
call
leave
sbb
cli
dec
popa
and
pop
loopne
mov
int3
in
or
stos
and
or
push
rcr
addr16
jne
jno
adc
cmp
lock
add
fmull
add
inc
push
ret
int
pusha
cwtl
lock
jnp
or
js
lret
icebp
outsb
fcoms
in
les
leave
adc
add
mov
mov
sti
enter
cmp
std
outsb
inc
push
dec
lahf
mov
adc
outsl
mulb
add
mov
inc
repnz
push
and
aaa
mov
jl
sbb
add
sarb
jno,pn
scas
xchg
cld
sbb
push
xchg
test
jle
inc
sbb
add
jg
mov
mov
or
addr16
push
cmp
mov
cs
xor
and
lock
mov
mov
shll
dec
les
add
lods
or
push
in
xor
outsb
add
mov
cmp
out
push
aam
loop
insb
data16
mov
das
je
sbb
mov
xlat
call
sbb
loope
popf
inc
decl
add
mov
cli
fdiv
mov
stc
sub
mov
lock
dec
add
xchg
enter
inc
push
mov
add
push
push
movsl
cmp
sub
outsl
inc
inc
icebp
je
movsl
dec
pop
inc
sbb
data16
xchg
sub
in
adc
loop
inc
mov
test
rol
xor
mov
cld
or
dec
std
inc
clc
lret
add
cmp
hlt
in
mov
out
ret
or
aad
jg
pushf
cmp
rolb
sub
ljmp
std
mov
mov
jmp
out
and
inc
in
loop
movb
movsb
sub
xchg
dec
bound
xor
xor
rclb
mov
bound
or
pop
mov
mov
andb
and
testl
stos
inc
cmp
ss
cmp
ret
das
shlb
dec
adc
les
lock
sub
mov
scas
bound
loopne
sbbb
adc
jbe
out
add
jmp
aas
xchg
mov
lcall
cmp
lfs
shll
sub
lock
cwtl
xchg
inc
lcall
cli
xor
push
push
dec
mov
lea
mov
inc
mov
xor
jo
cmp
xlat
adc
add
sub
sbb
xchg
movsl
sub
pushf
xchg
and
push
sbbl
mov
enter
xchg
sbb
mov
jg
call
xor
push
mov
rorb
sbb
pop
jle
inc
bndstx
pslld
inc
ljmp
jecxz
decl
or
xchg
pop
mov
sbb
mov
push
pushf
enter
pop
adc
mov
lcall
and
push
pusha
jmp
mov
pop
mov
lock
andb
adc
loop
cmp
push
test
add
lock
lcall
into
dec
pop
bound
mov
cwtl
push
cmp
inc
mov
or
push
or
ret
cmp
fisttps
shrl
adc
mov
push
mov
test
sbb
fwait
cs
dec
shlb
in
inc
jle
aad
and
jecxz
sub
mov
add
mov
inc
fsubrs
ret
xchg
sbb
mov
rorb
xchg
push
aas
jo
push
aam
es
push
cpuid
lcall
rcr
cltd
pop
test
mov
mov
add
mov
adc
cmpsb
cmp
push
jl
push
stos
mov
mov
add
mov
cmc
xor
test
sub
push
mov
fdivrs
mov
decl
mov
xor
add
mov
xchg
jns
pusha
fcmovu
sarb
mov
fmulp
dec
addb
mov
pop
sub
leave
mov
rolb
icebp
mov
sbb
sub
pop
fs
jg
pop
ljmp
jae
frstor
pop
pop
lahf
pop
push
or
pusha
mov
sbb
fwait
xchg
sub
sbbb
add
cmp
clc
subl
or
pop
call
add
mov
insl
in
add
push
push
insb
int
add
lcall
in
test
pop
inc
dec
add
call
pop
lods
xchg
cltd
dec
dec
inc
cmp
out
clts
push
jecxz
inc
push
push
push
and
cld
and
inc
fwait
out
sarb
push
ffree
push
js
mov
fmull
add
inc
push
ficomps
inc
sti
add
sar
dec
mov
xor
insb
and
negb
fs
scas
clc
pop
clc
inc
adc
push
inc
cmpsb
lahf
sti
loope
daa
mov
inc
loop
add
mov
dec
mov
mov
andb
jmp
xchg
jo
mov
pop
decl
aaa
clc
out
mov
dec
out
int
jle
mov
cld
add
out
fs
push
sti
incl
pop
jo
scas
xchg
dec
jno
jno
mov
icebp
xchg
pop
call
mov
push
xchg
shl
pop
or
pop
sbb
sbb
xchg
repnz
fsub
fadds
mov
mov
xchg
enter
xor
inc
sahf
es
mov
mov
sub
jo
sub
aas
outsb
ljmp
dec
fwait
add
lea
xor
into
pop
fcmovnb
in
add
add
mov
sub
mov
in
gs
rcrb
push
xchg
movsb
scas
mov
pop
push
add
pop
jo
xor
push
ljmp
test
xor
enter
movb
dec
sbb
mov
outsl
gs
mov
test
pop
adc
adc
call
cmpsl
sbb
cmpsl
lods
push
mov
mov
mov
mov
scas
les
push
or
add
add
sub
rcrb
mov
decl
lret
test
or
fstpt
and
xchg
imul
mov
fchs
jns
xor
mov
and
inc
rolb
les
push
add
sub
add
lcall
scas
jmp
mov
mov
es
mov
inc
push
mov
cmp
bound
add
leave
mov
push
mov
mov
test
scas
hlt
push
insb
loop
loope
repz
fisubrl
fs
mov
push
test
sbb
mov
lods
cmp
popa
mov
pop
mov
or
in
inc
cwtl
pop
test
pop
jo
lret
mov
pop
mov
movsl
cmp
movsl
push
outsb
lods
shrb
mov
adc
test
lods
leave
inc
jg
data16
scas
jmp
add
xchg
and
add
montmul
cmpsb
ret
enter
into
mov
sbb
add
mov
or
jg
jp
jnp
fidivrl
dec
mov
filds
scas
xchg
ljmp
hlt
or
scas
lods
mov
pop
filds
scas
inc
or
faddl
pop
mov
mov
fisttps
mov
sbb
and
mov
xchg
and
fdivr
mov
add
dec
push
xchg
orl
add
fldl
lock
pop
sbb
rclw
jge
cmp
xchg
orl
bound
faddl
lea
add
dec
lret
loop
mov
dec
out
fdivs
or
push
push
popa
stos
xchg
or
add
pop
mov
stos
out
rcl
mov
push
test
or
pop
out
jb
loopne
imul
mov
adc
shlb
xchg
rorb
sbb
inc
and
fidivs
sbb
aam
aam
sub
mov
cltd
push
jno
jle
or
popa
sbb
incl
lods
sbb
outsl
dec
dec
hlt
pop
jg
int3
aas
cmp
sahf
add
jae,pn
fimuls
adc
mov
cli
cmpsl
shrb
das
cwtl
icebp
push
xchg
dec
cld
aas
inc
shlb
data16
test
jb
or
sub
sub
arpl
or
call
and
jp
sbb
sbb
jecxz
setno
test
pop
inc
fists
mov
loope
pop
pop
mov
jnp
adcb
adc
dec
xor
adc
out
mov
xor
or
jbe
xchg
sub
into
pop
add
or
pusha
sbb
and
arpl
insl
pusha
jmp
scas
lea
shrl
mov
mov
js
pop
pop
fcoms
or
add
lea
rorb
jle
movsl
xchg
or
popa
push
jb
inc
and
inc
push
test
int
inc
jbe
das
shrb
xchg
bound
or
ror
and
sahf
xchg
lcall
xor
jo
popa
cmp
push
addl
xchg
cmp
cmp
fstl
cmp
ja
xchg
add
jg
test
sbb
testb
inc
pushf
jmp
push
adc
sub
sbb
pop
jle
call
hlt
xchg
sub
pop
in
aaa
sub
lret
addb
int
std
call
inc
stos
pop
push
shll
push
push
ljmp
call
incl
out
mov
sbb
cmp
aad
adc
pop
push
ss
or
push
xor
ss
bound
sti
dec
xlat
ljmp
and
mov
in
add
call
xchg
decb
in
sub
outsl
push
aaa
stos
adc
sarl
sub
xchg
cmp
mov
nop
cmpsl
sbb
and
dec
xchg
mov
dec
test
add
cwtl
xchg
jno
sbb
incb
flds
gs
stc
and
mov
rcll
orb
out
adc
pop
sbb
add
outsl
ret
xchg
ss
mov
in
sar
aad
mov
addr16
push
pop
ljmp
sbb
mov
mov
orl
lea
stos
adc
arpl
inc
sbb
pop
jo
aad
jp
insb
outsl
add
cmpsb
shlb
repnz
jle
lcall
mov
dec
xchg
mov
jmp
shrl
dec
push
dec
pop
stos
pop
outsb
push
rcl
hlt
cwtl
mov
push
add
test
pop
subb
in
into
adc
xor
jecxz
int3
push
invd
in
aam
xor
jp
and
jg
fisubrl
push
push
or
ds
adc
shlb
cmp
mov
sbb
push
cld
sub
xor
jmp
pop
repnz
into
jmp
lock
loopne
enter
or
add
gs
das
aam
loop
jp
loopne
inc
inc
push
xor
rcrl
adcb
loope
ss
inc
lcall
add
call
pop
add
pop
jo
stos
lods
xor
nop
adc
push
xor
xchg
and
inc
pop
addb
adc
fcomps
add
adc
mull
cmp
inc
add
jb
or
jl
mov
xchg
or
xchg
lret
mov
dec
jge
add
cmpb
lret
in
jmp
rorb
or
loop
or
mov
pop
clc
mov
mov
pop
mov
repz
pop
sub
loope
and
loopne
push
int3
push
cmp
sarb
popl
shrl
xchg
clc
cmpsl
push
sub
xorl
mov
pop
xchg
movsb
xchg
insl
mov
sahf
push
incb
xor
clc
ss
ror
scas
jg
adc
ss
or
shrb
push
mov
pop
sbb
xchg
add
nop
aam
das
shlb
jp
in
mov
scas
mov
int
jo
add
cmc
and
cmp
fdivrl
test
add
call
pop
bound
push
mov
adc
push
rol
scas
scas
sub
mov
add
repnz
int3
add
adc
or
aaa
call
cli
mov
std
pop
jle
mov
scas
cmp
add
xor
add
adc
js
gs
mov
sub
xlat
cmp
fdivl
pop
nop
out
and
rorb
adc
in
add
and
xor
fs
jp
add
or
sub
jbe
and
fsub
lcall
mov
rorl
sub
add
and
jno
mov
je
push
cmp
mov
push
scas
dec
mov
and
sbb
addl
repz
pop
xchg
sbb
mov
lea
sbb
stos
addb
insb
fisubs
xchg
lods
and
inc
sbb
adc
mov
and
fistps
ficompl
test
sarl
shrb
hlt
orl
push
scas
xor
popf
ds
cmpsl
cmp
sbb
sbb
push
add
loop
sbb
inc
sti
fdivrs
mov
rclb
cmp
sbb
js
jp
inc
fdivrl
iret
jg
mov
jmp
addl
icebp
hlt
dec
dec
mov
jp
cld
sbb
loop
xchg
add
adc
lods
sub
inc
movsl
mov
add
mov
pop
jbe
fistl
push
mov
dec
inc
call
add
lock
mov
in
add
or
cmp
rcrb
rorb
ror
inc
or
fdivrl
add
test
and
lock
inc
jbe
or
inc
sub
outsb
es
push
cltd
push
cmp
fs
fsubl
fst
push
push
inc
add
fidivs
push
call
aaa
movsl
xchg
jge
repz
js
iret
inc
and
cld
xor
test
pop
pop
insl
stos
xlat
dec
push
sbb
push
subl
mov
fs
or
mov
insl
repnz
ds
or
hlt
movhps
andb
mov
jl
lcall
sub
movsb
pusha
into
mov
pop
dec
cli
test
mov
and
xchg
out
add
jnp
mov
je
lods
int
sbb
mov
mov
sub
test
mov
orb
scas
push
sbb
and
sbb
lods
int3
outsb
mov
test
test
mov
push
or
inc
lock
cmpsl
inc
jnp
inc
add
pop
mov
push
jne
inc
push
sti
in
call
add
sbb
call
pop
push
jb
ljmp
pop
mov
test
push
pop
xor
sub
and
clc
push
mov
loopne
das
rclb
jmp
inc
mov
add
add
emms
and
into
jne
jge
arpl
mov
or
push
and
test
fstl
cmp
pop
clc
xorb
mov
mov
call
mov
push
pop
test
cmp
call
icebp
xorb
repz
outsb
jo
stc
jecxz
and
into
test
movsl
mov
cmpsb
or
loope
inc
sbbl
xor
sub
sahf
sbb
sub
shll
divb
mov
loope
mov
movsb
or
mov
ja
xorl
decl
xchg
sbb
inc
mov
fsubrs
jno
cmc
dec
push
and
fidivl
in
mov
arpl
dec
pop
pusha
out
lcall
stos
js
cmp
xchg
clc
ljmp
jb
sub
add
outsb
dec
mov
cli
adcb
push
lock
arpl
pop
pushf
adc
push
nop
xchg
pop
icebp
nop
mov
jbe
dec
call
xchg
push
fimuls
inc
mov
mov
add
sub
outsl
outsb
sbb
jmp
pop
rol
push
add
jmp
pop
add
add
dec
fucomip
ljmp
cmp
es
test
fwait
inc
adc
or
loop
cwtl
add
cmc
lods
das
or
push
pop
loopne
inc
push
fidivs
mov
stos
xchg
lret
pop
das
ret
in
cld
ss
mov
repz
mov
je
ret
jo
inc
pop
sbb
inc
add
cld
pop
jo
mov
ljmp
mov
mov
nop
or
dec
subb
dec
mov
sbbb
divb
pusha
jge
and
in
mov
mov
int3
aaa
pop
mov
dec
lret
js
xor
jg
sahf
in
mov
jge
js
std
adc
or
and
or
or
sbb
or
out
jbe
ljmp
add
jle
xchg
loop
mov
in
fcomip
pop
and
sub
je
loope
pop
imul
cltd
ret
xchg
divb
xor
xchg
imull
je
cld
dec
mov
fadd
sbb
cmp
scas
cmp
xor
scas
push
and
adc
adc
cmp
insb
inc
fwait
sub
cli
pop
jp
and
pop
cmpsl
je
shlb
adc
sub
fbstp
mov
xor
push
sbb
sbb
ret
icebp
or
inc
cmpsb
mov
aaa
std
dec
outsl
mov
lcall
dec
js
fsubs
push
movsb
jg
pusha
aam
lret
inc
out
dec
inc
dec
add
decl
stos
lret
push
and
cmp
sbb
js
cmp
and
lcall
or
int3
inc
sub
test
push
fwait
jo
inc
aas
test
addb
lock
mov
push
sub
outsl
aad
add
pusha
jae
pop
dec
xchg
xorb
inc
push
aad
push
xor
leave
popa
cmpsb
inc
add
rorb
popa
sti
lcall
xchg
arpl
aaa
mov
and
test
movsb
shll
imul
into
rol
mov
lea
mov
shl
push
insl
out
nop
fimull
mov
xor
mov
inc
inc
das
int3
ret
inc
xchg
push
fdiv
filds
adc
inc
mov
dec
gs
dec
lcall
cs
sbb
rolb
mov
jns
ljmp
push
imul
push
stos
or
scas
push
std
inc
mov
or
lea
cld
jge
rclb
fstpl
fnstsw
ret
xor
adc
adc
fists
cli
clc
in
outsl
fdivp
addb
aad
mov
add
jmp
outsl
and
sub
add
sub
adc
jp
lcall
aaa
adc
inc
pop
dec
xor
sbb
or
cmc
ret
out
hlt
xor
nop
dec
xor
add
loop
out
and
mov
leave
xor
jns
aaa
add
filds
sahf
jmp
ljmp
cmp
inc
testb
test
jo
filds
dec
call
and
add
pop
jl
or
pushf
orb
or
mov
popa
cmp
mull
lods
in
jns
inc
shlb
aam
repnz
inc
orl
fsubp
loopne
add
or
and
fs
mov
cmc
out
pop
lret
cmp
push
rclb
inc
jno
sarl
daa
push
push
mov
adc
in
add
push
or
lret
nop
sbb
scas
sub
or
and
test
mov
test
xchg
adc
add
dec
lret
lcall
adc
xlat
xchg
adc
mov
fxch
enter
or
nop
sbb
lret
shr
ds
dec
lcall
mov
xor
jmp
xlat
mov
aad
cld
andl
sbb
int
outsb
out
jo
inc
je
cmpb
incl
ret
fadds
jae
mov
xor
ss
pop
les
xor
push
lods
inc
mov
adc
subl
xorb
jle
cmp
jge
sahf
fstl
cld
cmc
mov
adc
mov
jge
pop
lock
rcll
sbb
lahf
adc
cltd
sbb
jmp
push
call
adc
call
mov
sbb
xor
test
dec
cmpsb
push
mov
call
add
dec
push
cwtl
xor
push
sbbb
in
fsubp
dec
push
or
ja
mov
mov
inc
je
mov
xor
mov
inc
lock
sub
clc
jmp
int3
sahf
shr
popf
ss
je
adc
sub
mov
sbb
in
sbb
add
jl
stc
inc
sbb
frstor
pop
cmp
sbb
les
push
mov
mov
add
dec
sahf
jbe
loop
outsb
into
into
add
add
xchg
adcb
sub
cmp
outsb
mov
mov
cmpsl
jbe
inc
xlat
loop
jnp
out
lds
fbld
dec
push
pusha
inc
adc
adc
add
adc
dec
add
orl
or
shlb
lods
repz
and
inc
cmp
add
nop
sbb
out
icebp
mov
lock
and
pop
cmp
aas
adc
dec
xchg
lock
or
add
rcrb
adc
adc
adc
cmp
cld
ljmp
mov
movsb
mov
jns
adc
loopne
xchg
and
add
aam
movsb
nop
xchg
fimuls
inc
mov
call
fistpl
loopne
or
push
add
lock
scas
and
inc
mov
mov
sub
jnp
test
adc
push
inc
jb
je
lcall
or
pop
shlb
dec
daa
jp
inc
subb
bsf
hlt
mov
push
and
push
ljmp
jo
pop
mov
frstor
ljmp
loop
mov
sub
cmpps
mov
orb
lea
addr16
pushf
loope
incl
and
icebp
fiaddl
or
inc
fidivl
xchg
xchg
aad
pop
mov
mov
in
dec
popf
push
xlat
xor
hlt
inc
xor
fimuls
in
add
sbb
mov
fstps
and
subl
filds
jbe
or
cmp
loopne
mov
rcrl
mov
loopne
push
out
pop
cld
mov
lds
rclb
aaa
push
andb
mov
in
push
inc
shrb
sub
xchg
sarl
xchg
adc
push
xor
call
push
or
dec
sub
out
sub
popf
xchg
jno
out
aad
add
and
dec
jl
inc
call
movsb
sub
cmp
or
mov
fcoms
adc
and
in
push
push
mov
adc
sbb
dec
sbb
jne
adc
inc
inc
jae
imul
pop
pop
adc
and
pop
mov
xor
sbb
dec
hlt
loope
fcompl
cli
out
aaa
jae
jl
das
pop
cmc
or
fdivrl
inc
ss
mov
out
cmp
das
test
iret
jp
aas
pop
mov
jmp
je
fnstsw
aam
fists
fadd
mov
cld
outsb
sbb
adc
jge
mov
xor
lock
fsubl
xor
iret
add
pop
icebp
pop
fsubl
mov
roll
push
or
mov
mov
in
mov
sbb
pop
jb
hlt
sub
xorl
or
pop
into
jp
ljmp
loope
roll
data16
mov
pop
or
test
addr16
out
and
sti
jle
imul
cmp
test
push
or
push
insb
cmp
mov
sub
fidivl
iret
add
clc
outsl
hlt
mov
test
inc
xorl
jbe
subl
fsts
add
mov
add
jecxz
lahf
pop
inc
push
cmp
mov
jo
pop
push
push
pop
mov
mov
mov
ss
ja
in
loop
add
dec
es
out
sub
in
stos
pusha
jbe
and
fidivrs
ljmp
cmpsb
mov
lock
and
sbbl
shlb
in
test
jp
into
add
mov
outsb
mov
sub
in
aad
add
lods
jg
sbb
aad
das
sub
in
outsb
bound
jp
or
inc
mov
mov
sub
or
pop
cld
aaa
fstps
xor
mov
xor
sub
mov
sbb
aad
cs
pop
fistpl
sub
push
enter
pop
or
test
cmp
aaa
pop
clc
or
js
jecxz
imul
scas
cmp
push
ja
pop
jae
ret
mov
and
loop
in
pusha
sbb
test
shrl
fidivl
jge
fisttps
sub
lods
cmp
dec
lret
loopne
stos
in
mov
xchg
pop
inc
mov
mov
icebp
mov
jo
insb
movb
xor
push
mov
lcall
sbb
sub
nop
pop
pop
inc
ljmp
pusha
or
icebp
je
or
mov
lret
insl
je
sub
cmp
pop
and
xor
push
loopne
mov
imul
js
iret
jle
sbb
jecxz
pop
pop
pop
fnstenv
cmpsl
sarb
test
call
and
movsb
aad
pop
mov
add
xchg
jmp
pop
sbb
pop
add
sbb
dec
test
mov
das
add
pop
call
add
incb
sub
mov
les
ret
mov
sub
mov
add
xchg
inc
xchg
test
mov
mov
add
jno
xor
inc
clc
test
pop
xchg
inc
mov
stos
jmp
in
and
mov
in
test
push
jecxz
mov
lea
sbbl
cmpsl
jg
hlt
jmp
loope
test
loope
into
mov
out
mov
cmp
scas
add
push
pushf
mov
mov
mov
pop
jno
add
cmp
cmp
and
test
or
jns
loop
push
mov
mov
ljmp
or
incl
ret
jmp
aaa
jnp
mov
lock
push
test
ja
sbb
push
pop
testb
xchg
data16
and
mov
in
jae
mov
adc
add
xchg
inc
or
clc
mov
push
mov
cmp
mov
stc
fisttpll
ret
lret
scas
mov
and
js
pop
in
mov
pop
mov
pop
mov
idivb
cltd
sbb
sbb
push
aam
push
lea
sub
inc
int3
bound
pusha
aam
add
sbb
cli
xor
xchg
lock
dec
fisttpll
add
xchg
mov
sub
jp
dec
jne
inc
cmp
inc
jbe
mov
push
jge
test
nop
ficoml
xchg
adc
cmpsb
dec
adc
dec
mov
inc
sbb
pop
lcall
inc
or
sbb
pop
ljmp
andl
mov
aas
movsb
sub
sub
add
add
in
hlt
test
jno
ror
sbb
sahf
jbe
stos
push
pop
pop
and
mov
lea
and
dec
fdivl
sbb
push
add
loope
sub
dec
adc
aam
aad
ret
call
fidivs
shlb
jo
scas
mov
cmpxchg
push
enter
stc
mov
adc
test
and
je
cmp
inc
in
aaa
call
jmp
inc
daa
jbe
leave
sbb
dec
rolb
xchg
push
pushf
mov
push
or
nop
jmp
int3
rcr
das
xor
mov
loopne
jb
add
cltd
out
hlt
inc
loop
push
xchg
ret
adc
adc
sbb
fwait
mov
jg
and
outsb
fbld
inc
int
add
mov
aam
cmp
add
insb
push
and
addl
mov
pop
in
pop
rorb
jo
gs
lret
mov
add
iret
xorb
pushf
push
mov
in
push
push
jl
aam
ljmp
sub
add
shrb
outsb
lds
dec
ljmp
cmp
and
fbld
cli
imul
shlb
pop
jne
add
and
sub
ljmp
shlb
rorb
sahf
cmc
orl
mov
sbb
inc
push
push
push
pop
fcomip
pop
data16
cmpb
movsl
xorb
scas
sbb
mov
cmp
cltd
xor
add
aaa
cli
and
and
mov
rclb
outsl
js
inc
adc
clc
jmp
mov
xlat
or
out
push
mov
mov
out
sub
push
mov
jl
adc
pushf
and
mov
shlb
pop
push
fld
cmp
mov
clc
call
xchg
fs
dec
sbb
cmp
xchg
fs
mov
out
pop
in
xchg
jo
sub
lods
incl
jl
lock
test
imull
inc
dec
inc
push
mov
add
push
fcomps
andb
fisttps
ret
xchg
jns
and
inc
sti
mov
popf
sub
gs
or
mov
add
mov
loopne
or
rcl
stos
mov
sub
and
test
push
sub
pusha
add
clc
push
inc
test
in
dec
lcall
xchg
mov
mov
add
jo
pop
xor
sbb
inc
ret
mov
push
push
std
push
fistpll
jo
dec
into
jo
mov
aas
xor
adc
cli
loope
or
inc
add
push
nop
sub
mov
incl
mov
pusha
sti
or
xchg
mov
out
dec
fisubl
test
jmp
mov
mov
mov
ficompl
es
clc
inc
ret
fwait
ds
push
cs
and
adcb
pop
out
or
out
stos
inc
out
test
and
cld
fists
xor
aam
cwtl
pop
and
repz
sub
js
gs
dec
fstl
call
push
mov
sbb
repnz
fsub
push
loope
loopne
in
testb
jb
inc
shlb
jl
cmpsl
repz
push
push
xor
ss
aam
mov
or
lret
pusha
mov
add
dec
mov
in
sbb
in
ja
jle
ljmp
fisttpl
mov
rcr
inc
jnp
mov
adc
loopne
rolw
lods
jecxz
sub
cs
into
sub
and
sarl
fwait
data16
aas
lock
mov
push
pop
sbb
sar
daa
or
xchg
xchg
movsl
into
in
lock
daa
enter
jge
push
adc
mov
incb
test
xchg
sbb
fwait
mov
rolb
ds
into
rcl
jle
andl
xchg
loope
sub
sbbb
data16
push
cwtl
add
inc
leave
push
dec
cmp
ljmp
pop
and
lods
jp
cmp
jo
xor
cli
or
test
push
adc
xor
cmovs
push
push
js
inc
mov
pop
test
mov
leave
jmp
mov
jmp
fimuls
dec
outsb
loop
aam
bound
aam
mov
inc
sti
mov
pop
std
cwtl
jo
mov
add
repz
loopne
mov
xor
sbb
sar
push
movsb
jge
aam
pop
mov
xchg
in
add
add
ret
and
test
push
in
push
ljmp
ret
fmuls
inc
push
sbb
and
aam
rclb
push
sub
test
xlat
fildll
add
or
jne
test
lock
cmp
stos
mov
dec
push
outsb
or
lock
fsubrl
xchg
mov
loop
test
mov
nop
int3
testb
or
push
ror
add
sar
xchg
mov
lock
shl
dec
dec
and
and
adc
xor
push
test
cwtl
and
pop
mov
loopne
and
jmp
adc
ja
cmpsb
pusha
push
or
dec
sub
loope
and
scas
jo
sub
push
pop
and
cltd
fidivrs
mov
out
cmp
jne
stos
sahf
notb
mov
or
and
cmp
imul
shrb
and
cmpl
cmpsb
or
and
jg
mov
lods
mov
adc
lea
and
in
push
add
jns
cwtl
jg
mov
add
xchg
outsl
test
jne
ror
ret
pop
sub
dec
cwtl
push
and
nop
ja
incl
mov
mov
mov
and
or
lods
pop
jl
xchg
cltd
jge
jno
adc
test
xchg
pop
add
sbb
dec
ljmp
idivb
mov
popa
adc
inc
shrb
call
inc
rorl
add
or
rcll
sbb
aam
ret
push
jl
fildl
ret
push
mov
adc
xchg
sti
mov
mov
adc
decb
cmp
iret
lods
mov
xor
bnd
or
loop
sbb
fildll
push
icebp
stos
imul
push
adc
mov
loop
or
mov
mov
mov
aas
dec
sbb
call
pop
push
mov
or
sbb
les
jno
or
jbe
out
fs
out
std
bound
shrb
into
sub
add
push
pop
loope
pop
scas
dec
sahf
pushf
stos
sbb
es
adc
adc
test
adc
dec
pop
sbb
jl
fisubl
mov
inc
adc
jo
lret
leave
add
lock
shlb
in
inc
orl
and
popa
pop
mov
sarl
dec
hlt
and
pusha
inc
pop
or
jbe
aad
jnp
mov
inc
xchg
lods
clc
in
mov
dec
pop
jl
clc
adc
call
and
add
jmp
ret
incl
in
cmp
clc
mov
lahf
lock
cmp
repz
push
mov
jbe
gs
ret
jne
neg
mov
fadds
pop
mov
lock
jge
mov
inc
aaa
or
sbb
jecxz
inc
insl
lods
sbb
jno
pushf
loopne
cmp
clc
cld
scas
call
mov
add
mov
add
mov
jbe
pop
add
shrb
lret
inc
or
stos
rcrl
rorb
sti
xorl
bound
jmp
push
sub
popa
loop
lds
cs
xchg
add
inc
or
nop
xor
pop
cmpl
fcoms
jne
fxch
jns,pn
mov
inc
adc
lcall
cs
adc
cmpl
jge
mov
leave
ja
adc
dec
adc
push
ficoms
cmc
rol
cwtl
dec
shrl
int3
loop
or
inc
xchg
aam
xor
cmp
xchg
js
lds
jns
enter
jo
shll
push
test
pop
cltd
jo
lea
and
xor
std
mov
add
xlat
adc
shl
add
mov
inc
inc
push
sbb
and
sub
cmp
add
clc
jge
fistl
sahf
inc
sbb
in
das
pop
rcll
or
and
dec
aad
andl
adc
add
xchg
aaa
adc
test
adc
int3
iret
mov
mov
cs
pop
loope
fwait
jle
add
dec
pop
and
mov
cli
ret
cld
vmread
dec
dec
scas
jno
inc
nopl
sarl
mov
fcoml
adc
push
in
push
mov
or
mov
aaa
sbb
add
das
bound
insl
js
fcmovnb
hlt
sbb
dec
aas
lock
jbe
jge
or
inc
mov
pusha
sub
inc
sbb
xor
add
push
fimuls
fwait
xor
and
sbb
and
sarb
mov
or
or
xor
shr
push
push
and
pop
orb
jo
mov
in
pop
push
test
cmpl
lret
mov
cld
mov
inc
inc
mov
pushl
inc
push
xchg
std
mov
adc
mov
mov
pop
ja
sub
cmp
fmull
pop
cmpsb
cwtl
fwait
sub
fs
inc
add
and
push
ds
mov
arpl
sub
ss
andl
pop
mov
xorb
fistps
shlb
arpl
push
pop
pop
rorl
sub
aas
aaa
dec
cltd
ret
pop
xchg
test
scas
inc
mov
and
sub
mov
xor
out
dec
mov
outsb
dec
push
xor
jne
mov
inc
popa
test
mov
loop
dec
fisubl
out
inc
iret
cmp
and
inc
jp
aam
cmpsl
cli
and
leave
icebp
xchg
inc
cltd
jo
xor
pop
inc
imul
push
jo
in
fs
rolb
mulb
stos
lods
pop
call
pop
clc
inc
lds
in
icebp
or
aad
popf
imul
fdivs
loope
js
sbb
jbe
and
fs
enter
fldl
sbb
sbb
or
xchg
jecxz
xchg
fistpll
sbb
mov
mov
or
inc
adc
jg
mov
push
pusha
pop
push
adc
add
or
lods
inc
xor
ficompl
xchg
or
leave
pop
add
cmp
mov
push
inc
mov
xorl
repz
push
std
call
adc
jg
adc
and
xchg
inc
repz
xor
jnp
testl
mov
pop
pop
std
dec
loope
jle
mov
adc
and
add
ljmp
clc
xchg
dec
iret
xor
dec
out
repz
imul
or
loopne
lds
push
jb
pushf
inc
stos
fistpl
int3
adc
mov
lahf
pushf
and
cmp
xchg
push
shlb
add
loop
add
js
mov
filds
and
hlt
adc
xor
adc
mov
jbe
lahf
outsl
adc
push
lret
mov
add
pop
xchg
les
mov
and
add
push
stc
push
stc
inc
jmp
and
enter
cmc
scas
imul
add
mov
push
xor
dec
lret
outsl
out
or
pop
sub
mov
stc
in
add
add
pop
jecxz
jl
fcomps
subl
mov
add
out
push
adc
imul
dec
pop
adc
lcall
add
pop
lea
ljmp
push
fisttpl
cli
repz
das
in
xchg
push
add
pop
out
shlb
xchg
cs
stos
pusha
add
shll
out
mov
sbb
daa
xchg
xor
data16
sub
call
insb
pop
jbe
leave
mov
add
test
push
lods
xchg
dec
in
pop
clc
and
push
pop
mov
dec
aaa
push
ss
adc
jge
adc
int3
mov
ret
sbb
push
and
and
dec
push
ljmp
es
jmp
sbb
insl
nop
fisubs
and
lret
xchg
pushf
jbe
clc
arpl
in
inc
add
sbb
adc
jg
jl
jne
mov
lods
out
rorl
int
xchg
aaa
sbb
dec
sub
pusha
imul
loopne
loopne
cmp
test
pop
push
notl
dec
cmpsl
add
ds
mov
sti
sbb
loope
rclb
aad
outsb
xor
pop
cmp
pop
sbbb
ret
ret
cmp
push
je
and
dec
cmp
or
sahf
cmpl
sarl
add
cmp
lea
cmpsl
sbb
fcomp
aam
in
adc
dec
xor
mov
and
mov
fs
aam
repz
bound
xchg
rolb
adc
mov
test
inc
in
mov
loop
mov
dec
sbbb
xchg
pushf
add
out
or
sub
ja
and
fisubrs
popl
call
rclb
push
ret
push
inc
adc
ja
dec
push
jb
xor
push
inc
mov
fwait
inc
imul
rolb
push
lock
rolb
xchg
sbb
mov
mov
jecxz
fisubs
add
mov
push
movsl
pop
dec
mov
inc
mov
mov
movsb
dec
add
xor
adc
mov
std
das
nop
cmc
cs
pushf
mov
movsb
shrl
add
push
js
adc
xor
push
fistps
loope
movsl
cld
cs
mov
push
cmp
aad
mov
out
xor
jecxz
mov
pop
add
iret
inc
scas
cli
cmp
sbb
orb
call
out
jmp
jge
stc
dec
add
mov
mov
mov
cmpsb
push
or
clc
stos
insl
cld
out
arpl
mov
in
pop
and
add
inc
push
xlat
xchg
test
jge
cld
jp
sti
scas
sub
mov
enter
fldenv
aad
cli
add
pop
pop
cwtl
pop
jno
arpl
add
push
jo
xor
into
adc
stos
jle
orl
mov
mov
shll
mov
movsb
dec
js
out
das
or
mov
pop
rol
repnz
stos
cs
fdivrs
sbb
fwait
sub
cmp
push
shll
cmc
shlb
dec
nop
iret
scas
jg
push
push
pop
mov
es
repz
sbb
pusha
push
int
jb
insb
push
lcall
and
sbb
push
adc
pmuludq
sub
into
push
inc
push
clc
dec
push
pop
lcall
out
cmp
xchg
test
sbb
lcall
adc
rorb
jbe
mov
insl
inc
or
bnd
test
jg
inc
ljmp
or
add
arpl
fcomip
jns
or
test
insb
pop
hlt
or
add
push
mov
mov
ss
enter
jne
test
notl
in
sbb
ljmp
add
sub
jle
mov
popw
sub
outsl
mov
stos
je
stc
mov
adc
clc
decl
sub
sarl
int3
push
push
jg
add
cmpb
hlt
fsubl
out
mov
dec
lock
mov
test
les
ficompl
cs
mov
movsl
fadd
lcall
jnp
scas
and
jo
mov
shrl
xchg
ficoml
sub
add
out
cli
pop
xchg
cmp
add
xchg
push
push
mov
rcl
add
cwtl
in
aam
lret
push
aas
mov
repz
xchg
imul
stos
fiaddl
mov
clc
ljmp
and
or
push
ss
sub
dec
and
outsl
push
pop
sti
adc
addl
inc
inc
fcompl
repnz
cvtps2pi
push
jne
xchg
shlb
aam
cmp
sbb
pop
popf
shl
add
daa
sbb
mov
and
int3
movsb
incl
xor
decl
movsb
out
sarl
adc
sbb
dec
mov
jmp
notb
adc
or
and
dec
jg
or
movsb
js
out
add
push
add
mov
loopne
lods
rorb
outsb
lcall
add
icebp
add
mov
es
push
cmp
pop
add
scas
mov
aam
scas
lahf
add
mov
decl
jge
subb
adc
mov
shll
sub
js
cmp
inc
add
mov
fbld
ja
fbstp
add
mov
testl
pop
inc
adc
jp
aas
outsl
aaa
std
mov
sub
loopne
lea
push
fsubrs
pop
mov
incb
shll
jo
push
inc
pop
mov
nop
hlt
jns
fbld
mov
dec
jecxz
lock
mov
fwait
jmp
pop
cli
int3
sahf
add
add
in
add
adc
loopne
fisubrs
test
or
mov
and
pop
xchg
mov
mov
aad
orl
movsb
movsb
test
in
mov
or
ret
pop
and
xchg
mov
jp
dec
cld
int
add
incb
jle
pusha
sbb
or
nop
and
lock
cli
call
lahf
lods
test
sub
rcr
aas
xor
lret
call
test
mov
out
std
push
xor
fwait
enter
addb
push
sub
icebp
pop
push
sbb
cwtl
jb
aaa
xchg
sub
ror
js
aad
adc
jecxz
les
sub
mov
jle
mov
mov
push
out
popa
dec
adc
roll
fimuls
pop
imul
hlt
inc
pop
insb
inc
xchg
cwtl
push
subb
dec
xchg
mov
pop
stos
orb
xchg
xor
adc
and
add
and
int3
out
push
fsubs
inc
les
sbb
outsl
mov
andl
jo
mov
nop
or
dec
cld
iret
inc
loopne
xor
cld
add
sbb
xchg
jne
xchg
cmp
std
test
mov
push
out
mov
nop
adc
scas
loopne
cs
cld
pop
data16
add
push
adc
inc
cld
pop
xchg
int3
mov
mov
lcall
loope
push
lods
lcall
hlt
adc
xchg
inc
mov
xor
es
xor
scas
mov
mov
insb
pop
int3
data16
bound
stos
xchg
fimull
pop
loop
dec
jl
mov
cs
lods
pop
fadds
ds
xor
cld
mov
and
arpl
incb
roll
in
or
ja
cmpsl
lods
dec
fildll
mov
je
push
aam
sbb
rcrl
cltd
mov
or
push
jo
jecxz
mov
lret
or
xchg
xor
mov
loopne
mov
mov
sahf
nop
packsswb
lods
mov
or
adc
mov
clc
test
adc
sarl
cmp
add
cmp
mov
xchg
outsb
das
mov
cmp
pop
mov
mov
lods
pop
addr16
xor
daa
icebp
lea
jp
lods
mov
push
lea
add
jno
add
cwtl
enter
inc
mov
mov
loope
and
pop
pop
fldenv
dec
cmp
sub
outsb
add
jmp
adc
adc
aas
pop
sbb
mov
mov
js
mov
push
mov
sbb
outsl
or
scas
shlb
adc
xor
push
xor
jle
and
cmp
jno
jg
daa
lret
mov
push
fs
mov
push
sub
stc
movsb
gs
push
icebp
mov
popf
cmp
cmp
or
mov
pop
push
and
mov
fsubr
mov
sub
pushf
mov
mov
mov
pop
jb
aas
in
es
rcl
icebp
outsb
rcrl
xor
rolb
rorl
mov
pop
sbb
mov
jl
loope
fstpt
mov
test
and
or
call
roll
add
shl
imul
mov
jl
call
fcoml
add
add
outsb
sub
or
or
cltd
loope
sbb
lret
cltd
loop
fimull
rorb
mov
adc
dec
pushf
inc
pop
mov
sub
jle
or
mov
cmpsl
mov
in
data16
lock
jge
loop
stos
ds
sahf
dec
xchg
lds
sti
jbe
dec
adcl
es
fiadds
push
pop
test
xchg
loopne
sbb
or
mov
adc
frstor
mov
fistpl
push
sahf
dec
outsb
enter
cmp
das
test
or
mov
sbb
pusha
movsb
jle
xchg
xchg
fcmovb
outsb
fimuls
inc
add
dec
cs
insl
orl
mov
das
clc
cwtl
aaa
xchg
push
xor
shrb
xchg
leave
mov
insl
cmp
or
dec
pop
lret
es
pop
outsb
popf
jns
push
sbb
fwait
imul
sbb
fdivrp
pop
xchg
cli
rcrl
sbb
andb
lods
mov
sahf
ficompl
lock
pusha
shlb
daa
movsb
xchg
loope
sbb
icebp
sbb
dec
iret
mov
mov
cli
mov
pop
xchg
dec
push
and
lods
or
js
test
add
and
add
mov
xchg
xchg
mov
inc
or
popf
rcl
xor
aam
out
xchg
mov
pop
push
add
call
fcomps
js
mov
jns
pop
popa
lds
bound
shrl
mov
testl
cwtl
pop
sub
shlb
mov
dec
rolb
inc
sbb
mov
inc
mov
push
jge
cmp
sahf
ds
sahf
in
insb
orb
pushf
push
jl
cmp
dec
aas
sub
add
cld
imul
adc
loop
aad
mov
xchg
movl
sbbb
push
xchg
xchg
rolb
and
clc
and
push
sbb
push
les
bound
jge
ds
mov
in
in
pusha
adc
pushl
cltd
adc
sub
push
and
jno
popa
scas
cmp
neg
push
das
dec
push
cmc
lret
jl
daa
push
shlb
aas
and
out
jecxz
std
stos
rorb
lock
dec
insb
hlt
stos
int
or
and
cmp
clc
pop
icebp
jo
push
aam
sbb
les
and
mov
mov
aas
cmpsl
mov
jg
scas
movsb
mov
aaa
icebp
pop
pop
sbb
mov
and
test
scas
in
js
mov
cmp
mov
shlb
mov
dec
jp
dec
maskmovq
aad
xor
sbb
inc
adc
inc
insb
or
mov
test
insb
sub
sahf
xor
js
push
stc
dec
add
pusha
push
movsb
jle
add
out
hlt
mov
aad
shll
mov
mov
sbb
loopne
dec
cmpsb
jnp
mov
adc
fs
xor
call
push
xor
rcl
int
xor
xchg
roll
jne
mov
enter
pop
add
std
rolb
sahf
push
mov
mov
ljmp
cmp
dec
xchg
mov
adc
jo
mov
inc
cmp
clc
out
sti
daa
imul
loope
jo
loope
ds
xchg
in
push
push
mov
dec
ljmp
mov
and
lods
sub
pop
lret
sub
pop
stos
sbb
xor
je
es
cmpsl
test
mov
mov
mov
pop
xchg
test
pusha
xchg
adc
add
in
shlb
jg
ss
loop
je
sub
out
aam
nop
add
cmp
mov
mov
push
push
cmpsb
cltd
and
in
fldl
sub
jae
ss
xchg
arpl
scas
add
fsubrl
aas
lcall
jbe
jp
insb
and
cmp
ljmp
xchg
cmp
xchg
call
call
sub
push
lods
mov
out
lds
je
jo
out
jmp
add
mov
adc
pop
pushf
mov
push
mov
cmp
push
jb
push
sti
add
lcall
sbb
les
and
adc
shrl
pop
outsb
pop
aad
xor
scas
mov
ljmp
add
aam
arpl
add
test
fnstsw
jnp
add
sbb
mov
jge
lock
mov
mov
mov
ds
jg
mov
mov
or
ljmp
push
cld
pop
pop
add
add
push
xchg
cmp
stos
popf
lret
cli
sbb
das
xor
je
rorb
mov
mov
mov
pop
and
xorb
push
jns
push
es
inc
imul
pusha
sub
sbb
lahf
ret
call
cltd
movsb
xchg
mov
or
aam
adc
dec
jl
sbb
les
lea
push
push
fwait
sbb
add
pushf
fiaddl
pop
into
push
je
ret
test
dec
lcall
push
mov
or
icebp
test
fs
decb
shlb
and
mov
js
cmpsl
sub
nop
sub
push
adc
icebp
cmc
mov
mov
mov
call
icebp
cmpsb
and
into
push
cmp
pop
mov
add
test
aad
adc
popf
fildl
and
inc
movsb
mov
inc
repz
lahf
lods
sbb
adc
out
cmp
add
nop
aad
mov
cld
adcb
inc
inc
mov
and
insb
or
or
sarl
shll
inc
push
push
shll
pushf
ret
popa
xor
sbb
sub
addb
inc
cli
add
rorb
insl
cmp
jmp
and
mov
push
pushf
imul
subl
mov
nop
sbb
sbb
icebp
mov
mov
and
or
scas
jp
leave
bound
pop
cmc
or
dec
xchg
loope
popa
sar
push
stos
mov
test
mov
pop
mov
lcall
jge
and
push
mov
mov
mov
decl
mov
in
ret
movsb
pop
subb
sub
fnstenv
and
call
fsubl
or
sub
mov
cs
inc
jmp
push
add
jo
ljmp
sub
fistpl
sbb
mov
xor
xchg
cmp
mov
pextrw
loope
out
mov
mov
push
xchg
insl
push
lock
int
fadd
cmpps
mov
nop
popa
cli
add
lcall
test
xchg
cmp
push
test
in
mov
std
popa
push
fbstp
inc
cmp
ja
sub
add
adc
jecxz
dec
enter
std
or
leave
add
mov
int
repnz
and
mov
pusha
mov
jl
loop
rolb
jnp
mov
adc
imul
mov
mov
dec
jb
fs
daa
add
dec
imul
aam
in
pushf
sub
mov
adcb
adc
push
add
xor
inc
ja
dec
clc
addb
clc
adc
mov
pop
js
add
cli
push
mov
push
scas
jnp
lock
test
movsb
or
loope
loop
mov
shr
test
lcall
push
mov
add
or
fmuls
sub
and
cmpsl
stc
add
test
adc
sar
in
adc
dec
push
pop
fs
leave
test
inc
js
add
xchg
roll
pop
std
dec
and
dec
pusha
into
xchg
enter
inc
sbb
lea
dec
pusha
js
scas
mov
inc
pop
add
pop
bound
add
or
je
cmp
pop
lock
xor
mov
or
in
inc
in
or
loopne
imul
cmp
or
pushf
add
mov
inc
xchg
mov
dec
adc
pop
mov
jo,pt
cmp
add
in
push
push
stos
add
jo
cli
push
aad
lds
jb
les
dec
in
adc
shll
inc
sub
or
rolb
push
ret
adc
dec
mov
cli
dec
int
mov
sarb
inc
cmp
mov
divb
adc
icebp
jl
dec
sbb
mov
mov
or
mov
mov
call
sbb
push
in
scas
adc
mov
mov
dec
data16
loope
push
push
xchg
mov
fbstp
cwtl
push
mov
mov
jmp
cmpsb
ds
out
mov
pop
imul
test
pop
outsl
shlb
inc
pop
lods
mov
cs
pushl
sbb
mov
call
cmp
xor
out
aas
loopne
jg
enter
xchg
les
add
inc
imulb
sub
push
imul
pminsw
lods
xchg
mov
push
fmull
mov
enter
popf
and
aas
enter
adc
pop
inc
into
mov
mov
iret
jbe
xor
enter
adc
pop
mov
outsl
sahf
mov
sbb
xchg
push
enter
sbb
ret
mov
mov
and
mov
or
adc
or
scas
mov
xor
fdivrp
inc
mov
outsl
adc
mov
fadd
xchg
out
aaa
jmp
lcall
and
test
inc
push
ficompl
mov
cmp
je
test
jg
je
dec
pop
or
mov
pop
dec
ja
add
xor
shll
ds
adc
stc
mov
push
dec
cltd
xor
push
cli
add
clc
and
rcrb
sbb
sahf
mov
jmp
cs
jle
mov
mov
adc
adc
sbb
ret
lcall
add
push
xchg
incl
ficompl
or
mov
icebp
or
mov
ds
xchg
xor
das
push
add
cmc
sub
mov
je
push
xor
or
sub
mov
decb
jne
lock
push
aaa
add
sub
xor
cli
jg
dec
xchg
fwait
sbb
lcall
push
mov
scas
xor
out
adc
inc
jge
jnp
jnp
mov
cmpsb
push
xchg
xchg
sub
sbb
pop
pushf
loopne
jmp
or
dec
and
inc
jb
jmp
jmp
shlb
pop
lcall
sbb
fistpll
adc
clc
test
outsb
sbb
push
adcb
or
loop
mov
cltd
add
xchg
mov
cmp
inc
and
ljmp
mov
test
pop
add
loope
cmp
andl
iret
xor
test
lcall
xchg
add
mov
mov
push
push
jae
dec
sti
fmul
inc
add
lea
movsb
adc
mov
scas
in
ret
loop
insl
pop
mov
and
pop
lock
mov
lock
xchg
lret
nop
in
js
insb
inc
fdiv
lds
jp
cs
cmovo
xchg
mov
mov
repnz
movsl
lea
xor
mov
pusha
jl
lods
jmp
jbe
or
repnz
cld
les
hlt
cli
mov
jno
fists
fwait
and
hlt
mov
or
sbb
sbb
xchg
jo
ret
xor
or
add
into
cmpsl
ljmp
dec
std
inc
fwait
std
sub
repnz
and
mov
stos
outsl
stos
sub
dec
jae
xchg
outsb
add
pop
lock
ja
push
cmp
or
fsubl
sbb
push
pop
mov
icebp
sub
in
lds
add
loop
test
les
push
jo
mov
in
int
xor
aas
mov
insb
jl
testl
and
xlat
push
dec
xor
and
aaa
sbb
outsl
icebp
pop
mov
and
shll
mov
jl
cli
stos
roll
orb
clc
adc
pusha
cmpsl
jp
add
pop
cmp
push
rorl
hlt
xchg
dec
mov
or
lock
xchg
mov
and
inc
push
clc
ret
clc
enter
ss
loope
mov
sbb
je
push
or
xchg
orb
and
lahf
pusha
in
lock
inc
es
fldenv
mov
adc
adc
and
lods
out
dec
mov
xchg
scas
movsl
fsubs
mov
hlt
lds
xchg
sbb
push
int3
inc
mov
outsb
push
sbb
decb
dec
rolb
push
jl
cmp
lahf
inc
mov
mov
cli
mov
adc
sbb
lods
fnsave
mov
repnz
dec
sbb
sbb
push
xor
mov
inc
in
lret
insb
les
mov
shll
cmp
push
sbb
test
data16
mov
loope
loop
sub
outsl
loopne
xchg
lret
dec
cli
xchg
in
pop
xchg
mov
inc
adc
pop
sub
icebp
mov
in
add
dec
test
and
cmp
pop
or
lock
push
adcb
lret
push
nopl
mov
rcrl
cmpsb
es
jg
outsb
clc
test
jo
mov
push
jp
xchg
mov
scas
fadds
testb
daa
push
std
shrb
xor
repz
pusha
andb
ret
pop
loope
sarl
inc
xor
xchg
push
popf
inc
dec
mov
sbb
xchg
shlb
ja
popl
jge
pop
add
bound
je
es
daa
mov
sub
pop
fcomps
push
sbb
push
or
cmpsb
loopne
lret
push
add
cld
push
dec
xchg
mov
sahf
sbb
xchg
add
xor
mov
cmp
sbb
pushf
icebp
adc
mov
movb
std
and
push
mov
test
mov
rorl
sub
mov
mov
adc
cli
fldenv
jnp
mov
jg
push
mov
add
add
mov
ja
sub
lea
jae
mov
add
test
stos
rcr
adc
jae
push
inc
mov
ja
inc
or
mov
lret
sub
mov
jb
and
jo
outsl
dec
mov
sub
add
ds
lock
ds
sbb
add
vmread
sub
cmc
lock
call
decb
or
lods
xchg
jbe
cmp
sbb
lret
xchg
stos
pop
dec
lock
pop
jne
mov
add
pusha
mov
push
outsl
mov
out
dec
jae
dec
andl
xchg
hlt
pop
cmp
cmp
mov
test
ds
push
std
lcall
push
push
mov
push
jmp
fcmovu
pop
fimull
mov
jnp
dec
jl
es
mov
loopne
ret
mov
sbb
jb
dec
mov
xor
mov
jg
xchg
pop
addl
add
jecxz
repnz
mov
jg
andl
ss
xchg
ret
hlt
pusha
into
rorb
push
pusha
adc
mov
push
lock
repz
lahf
movsb
and
mov
xchg
lds
jecxz
divb
mov
mov
or
pushf
mov
je
dec
add
in
lcall
mov
dec
adc
roll
inc
pop
cmp
push
xor
aas
jecxz
loope
mov
in
xchg
lods
ss
fadds
sar
icebp
and
les
mov
in
cmp
aas
leave
fldl
lds
sub
xchg
inc
call
test
xor
mov
mov
jmp
dec
cmp
mov
and
mov
dec
outsl
push
cmp
cld
xlat
es
stc
fidivs
mov
in
inc
jnp
push
mov
out
adc
push
lahf
cli
push
scas
xlat
and
sahf
or
cli
jmp
out
addr16
sti
rcll
cli
jnp
lods
inc
pop
cmp
push
nop
lock
ffree
jne
jbe
mov
sbb
mov
add
xchg
pop
xchg
notb
test
push
jnp
push
lret
ss
push
or
xchg
pop
add
addr16
xor
out
adc
pusha
sub
call
mov
mov
push
int3
loop
sbb
xchg
sarb
test
mov
push
cmp
insb
in
adc
stos
xchg
jbe
call
mov
inc
subb
jno
movsl
jp
mov
add
jns
xchg
sbb
mov
mov
adc
mov
or
jb
pop
fdivs
jns
popf
gs
cmp
mov
je
out
insb
pop
jne
and
fdivs
fistpll
out
push
push
int3
test
adc
sbb
cwtl
ret
addr16
mov
pop
mov
mov
mov
icebp
pushf
in
pop
jecxz
arpl
in
pop
nop
inc
rcrb
add
mov
inc
imul
in
push
nop
xchg
rolb
xor
jmp
pop
fbld
or
subb
les
xchg
jo
mov
adc
or
clc
sti
ret
inc
mov
sar
aas
ljmp
or
idivb
lret
nop
int
jne
push
fcoms
cwtl
stc
movsl
incb
xor
jl
sbb
inc
mov
icebp
pop
jecxz
push
jg
lds
push
cmc
and
mov
and
pop
imul
dec
xchg
dec
jbe
adc
adc
shrb
mov
fisttpl
pusha
dec
and
push
pop
adcb
ljmp
lock
fsubs
add
mov
cld
into
mov
cld
adc
sbb
adc
cs
mov
jmp
daa
rorb
jmp
sbb
xchg
jp
adc
ja
jp
jmp
movsl
xor
adc
rcrl
cmp
pop
cli
decl
jae
addl
push
mov
or
push
mov
faddl
incb
or
or
sbb
or
je
cld
test
or
add
adc
or
hlt
pop
ret
add
pusha
mov
pusha
sub
inc
insb
and
data16
push
cld
or
push
mov
lods
in
mul
push
mov
adc
fsub
xor
xchg
push
jg
stc
outsb
dec
imul
xor
in
mov
iret
pop
decl
adc
test
and
sbb
push
pop
jg
std
sub
inc
sti
mov
xchg
repnz
xor
inc
jo
mov
xor
insb
cmp
and
sahf
mov
mov
cld
cmp
or
add
test
mov
sub
sub
sub
dec
sbb
out
sarb
xor
mov
pusha
inc
or
inc
je
call
movsl
rcrl
mov
in
ds
xor
xchg
popa
xor
imul
dec
nop
mov
ret
sbb
js
pop
push
pop
pop
and
inc
in
ret
adc
repz
scas
pop
adc
mov
sub
add
lock
jbe
mov
xor
dec
mov
mov
cmp
loopne
mov
jle
xchg
mov
and
pushl
repnz
dec
rclb
mov
mov
int3
scas
nop
movb
jno
negl
orl
push
stos
bsf
adc
orl
fsub
cmp
insl
scas
out
pushf
lcall
push
sbb
mov
mov
jecxz
call
aam
hlt
add
adc
stc
push
mov
add
sbb
sub
dec
in
xchg
incl
cmp
add
push
or
push
lods
xchg
or
pop
lods
clc
sbb
xchg
dec
cmp
dec
mov
pop
push
cld
iret
add
out
sti
xor
lds
mov
mov
outsb
nop
in
nop
aas
mov
popf
out
push
or
mov
adc
pop
pop
jl
test
adc
fwait
stos
xchg
xchg
push
inc
movsb
xor
clc
rclb
xor
fcmovu
pop
scas
or
xor
pop
test
subb
int3
aaa
loop
bound
outsl
push
rorb
cmp
ja
jg
into
mov
lds
jmp
mov
mov
loopne
adc
lcall
mov
clc
or
ret
jecxz
and
call
ljmp
dec
mov
push
inc
adc
add
lea
pop
mov
jg
and
in
loopne
stos
pcmpeqb
lock
in
inc
scas
add
enter
or
shlb
jle
jecxz
sub
shlb
push
sub
pop
test
mov
aaa
or
push
sub
subl
jne
stos
adc
and
dec
xor
mov
das
fsubl
mov
pop
loope
mov
inc
mov
ljmp
mov
mov
add
fdiv
mov
dec
cli
mov
cmc
fucomip
in
adc
enter
call
scas
ret
mov
xchg
in
mov
add
ffreep
sbb
daa
aaa
fisttpl
int3
or
sbb
scas
incl
sub
sub
scas
repnz
and
sarl
and
cltd
xchg
mov
shl
outsl
add
adc
add
add
add
es
js
movsb
cmc
fwait
je
ret
inc
jmp
dec
test
pop
sbb
dec
aad
leave
or
stc
mov
mov
adc
adc
push
jnp
sbb
adc
mov
cs
fwait
call
inc
mov
dec
adc
dec
xchg
add
insb
ja
pop
nop
jg
mov
in
iret
jge
insl
xorl
ret
inc
clc
jnp
push
mov
mov
popa
xor
xchg
push
rorb
sbb
in
lahf
pushf
mov
push
xchg
mov
or
add
movsl
lcall
mov
dec
cltd
jns
sub
fdivs
mov
add
cmp
jl
fsubrl
push
fwait
rolb
jecxz
fildll
cmc
adc
test
stc
das
lods
icebp
inc
jo
push
jl
mov
outsb
test
dec
sub
dec
mov
lods
jp
xchg
jb
fmuls
test
jo
cmpsb
outsb
fists
dec
dec
add
mov
push
ss
stos
add
outsb
add
hlt
ljmp
lcall
cli
fisttps
aas
adc
mov
cmpsb
fldl
dec
add
cmpb
or
addb
add
push
dec
xchg
add
call
loope
pop
push
mov
mov
daa
ror
jns
shrl
fmul
mov
and
sub
jo
repnz
mov
pusha
adc
mov
push
lcall
mov
xorb
sbb
fnstsw
jg
mov
jg
push
cmovbe
scas
push
push
cld
sub
jecxz
outsl
add
inc
nop
clc
dec
push
mov
std
push
xchg
pop
test
insb
je
hlt
mov
adcb
fdivr
add
push
insl
pusha
adc
stos
call
subb
stos
hlt
test
fidivs
cltd
add
or
imul
pop
pusha
stos
test
pop
cmpsb
cmpsl
bound
mov
sbb
das
aas
pushf
add
add
adc
pop
sar
sarb
adc
inc
add
sarl
or
lcall
fisubrs
jo
pop
outsb
pop
lods
cmp
pop
scas
test
xorb
inc
scas
mov
sub
mov
push
sbb
xchg
shlb
loop
pushf
lods
clc
fdivl
inc
scas
and
inc
mov
rorb
add
cmp
loope
pusha
adc
add
adc
leave
movsb
mov
lock
pop
fsubr
ss
add
xchg
adc
inc
faddl
repnz
cmp
lods
cli
xor
into
push
mov
and
push
cld
outsl
in
das
sbb
jno
leave
data16
ljmp
mov
cli
out
push
decb
scas
hlt
push
imul
jne
mov
rcll
adc
cmp
repz
cld
jg
adcb
out
arpl
and
jg
adc
orb
enter
sub
pop
shrb
push
cmp
movsl
cmp
outsl
outsb
iret
in
filds
test
subl
cmpsb
cmp
pop
loop
repz
les
lds
dec
sbb
xchg
lahf
call
and
or
adc
cmp
int
inc
mov
ljmp
jmp
iret
leave
add
and
mov
dec
xor
push
cmp
push
inc
bound
sub
push
int3
xchg
mov
cmpsb
jg
in
clc
inc
orl
add
lods
fidivrl
xchg
or
sbb
fcmovbe
rcrl
and
pushf
bound
das
xor
adcb
mov
mov
and
xchg
popa
sti
sub
adc
out
cli
mov
lods
add
xor
pushf
and
out
loop
in
adc
leave
daa
mov
mov
outsb
adc
cwtl
cli
das
inc
mov
out
push
shlb
lods
pop
andb
jle
push
mov
cld
xchg
out
add
push
iret
mov
jl
testb
out
hlt
adc
cmp
xor
jecxz
cmp
inc
jmp
jnp
mov
jmp
popa
sub
jg
pop
fiaddl
xchg
cmp
cmp
sub
inc
and
shrb
aam
out
adc
test
lock
dec
js
cmpsl
inc
jnp
sbb
cmc
scas
loope
push
mov
mov
push
push
push
js
push
movsl
stos
clc
mov
movb
mov
pop
adc
popaw
ja
inc
icebp
lret
pop
adc
cltd
push
xor
out
mov
mov
int3
or
loopne
movsl
mov
sbb
psrlw
push
lea
cld
repnz
push
sub
in
cs
test
cmp
mov
loope
ja
pop
add
addr16
push
push
pop
fimuls
pop
pop
decl
imul
rolb
das
sub
mov
add
daa
aas
sub
jae
xchg
push
xor
pusha
cmpl
add
sbb
fstp
cli
pop
aaa
fidivs
cmp
sub
loopne
pop
mov
leave
loopne
push
decl
imul
repz
cmc
out
clc
mov
and
dec
sub
and
orb
dec
push
icebp
test
std
loop
mov
and
scas
cli
add
mov
cmp
mov
cwtl
xchg
popa
cmp
insl
call
sahf
fcomp
popf
push
adc
mov
jae
fldt
test
ret
jne
js
ljmp
sahf
fcoml
sbb
add
dec
jp
jmp
mov
add
adc
push
fsubl
daa
sbb
outsb
sbb
cmp
mov
xchg
ja
pop
mov
clc
out
popa
adc
idiv
int
push
dec
push
daa
js
out
imul
jp
pop
push
scas
leave
icebp
orl
mov
in
adc
popf
add
insl
xorl
nop
mov
rorl
adc
sub
testb
sub
rcr
test
adc
fnstenv
in
mov
mov
arpl
lret
mov
xor
idivb
and
seto
ret
cmpsb
jmp
outsb
inc
mov
cmpsb
je
sub
dec
movsb
adc
jg
jle
cmc
adc
shr
or
mov
cmpb
xchg
lea
add
lea
iret
xchg
mov
inc
push
js
xor
push
mov
ljmp
rorl
mov
cmp
incl
inc
andb
sub
push
push
lcall
inc
push
ret
orl
cmp
imul
stc
dec
inc
fcomi
sbb
pop
das
cld
mov
aas
inc
dec
add
lcall
lds
fsubs
popf
cs
aam
cmp
or
xchg
inc
sbb
mov
inc
xor
aam
mov
mov
mov
mov
enter
xorb
arpl
bound
add
lds
gs
dec
fbld
pop
adc
adc
push
ja
sub
shll
lcall
or
or
xor
mul
stc
movsb
pushf
dec
loopne
mov
out
imul
fcoml
pop
gs
pusha
in
pop
shrl
incl
dec
push
je
pushf
enter
repz
push
repnz
insl
out
push
mov
shlb
push
popa
xchg
jg
aaa
mov
js
xor
scas
inc
call
loopne
mov
mov
les
inc
fiadds
jno
fstpt
sbb
aad
xor
pop
rcl
adc
mov
mov
push
psrad
jg
push
push
std
xchg
mov
sub
sbb
adc
popa
inc
fcoms
pop
or
add
in
inc
xchg
adc
outsb
fisubrs
mov
aaa
cld
pop
pop
cmp
je
iret
push
or
fdivp
push
sti
push
xor
or
int3
aad
enter
xchg
sub
pop
mov
or
dec
sbb
loopne
aam
test
test
push
cltd
sub
dec
jp
ljmp
inc
xor
cwtl
add
mov
sub
call
jnp
xor
sti
ja
ret
mov
or
push
add
gs
mov
repz
popl
inc
loopne
cmp
push
and
push
test
decl
pop
sbb
xchg
xor
adc
sarl
inc
mov
mov
sub
pop
pop
pop
add
push
cmp
inc
ljmp
mov
inc
jecxz
stos
adc
or
addl
mov
pop
xor
push
mov
pop
cli
mov
decb
iret
inc
inc
push
lret
popa
lods
dec
dec
imul
mov
xchg
cmpsb
clc
into
adc
ret
add
in
movsb
in
jae
xlat
or
jmp
cmp
enter
sbb
xlat
mov
mov
jl
rcrb
pusha
adc
sub
stc
iret
adc
cmpsb
inc
mov
push
out
repz
dec
lds
adc
adc
cmp
xor
pop
ds
lahf
and
sbb
adc
xchg
scas
mov
adc
popl
mov
dec
es
and
jae
lods
cmc
mov
xchg
sarl
inc
add
lock
push
out
inc
add
push
adc
addb
add
cmp
dec
or
push
add
enter
gs
negb
dec
in
sub
std
or
shrl
test
add
outsl
inc
jp
and
aas
adc
ljmp
leave
popa
ljmp
xor
push
cld
push
cmp
sarb
test
pusha
insb
or
iret
mov
shrl
enter
push
adc
shrb
pusha
mov
aas
or
and
pusha
sub
popa
mov
sti
push
inc
jb
jge
xor
cmp
mov
arpl
jecxz
loopne
movsb
xor
sub
or
xor
test
pop
or
and
jg
or
sbb
lods
out
mov
xor
lcall
jo
adc
outsl
push
jmp
push
sub
out
jbe
push
es
inc
or
fdivs
stos
int
jnp
bound
dec
rolb
or
repz
shlb
es
aaa
add
push
enter
cli
call
xchg
fmuls
sbb
jge
loop
jae
mov
mov
mov
push
aas
in
push
out
mov
mov
add
sub
dec
nop
js
mov
adc
jle
pop
hlt
or
xor
ds
jecxz
adc
int3
mov
fisubrl
jge
pop
push
in
or
out
xor
cmp
loopne
aam
mov
push
cmc
mov
sbb
adc
xchg
cmpsl
mov
pushl
stos
pusha
sti
xchg
mov
xchg
xchg
dec
pop
pop
jp
xchg
clc
dec
shr
gs
push
and
xchg
inc
mov
mov
lds
lock
dec
dec
dec
ja
fld
adc
and
nop
ja
jmp
ret
shr
cmpb
fwait
mull
xor
sbb
inc
clc
mov
and
aas
loop
and
push
shrl
out
jp
repz
rcll
mov
adc
insl
push
pop
jp
addb
jo
ds
sub
and
es
mov
clc
sbb
pop
push
in
ret
xor
outsl
mov
pop
pop
leave
xorl
clc
sbb
jp
dec
lcall
adc
push
adc
rorb
andb
inc
and
jg
aad
loopne
jae
add
pop
pop
ret
scas
pop
xor
js
mov
jge
iret
lret
fdivs
xor
sub
cld
outsb
inc
and
mov
mov
fs
push
stos
insb
cmp
push
mov
daa
loope
cmp
pop
adc
lcall
xchg
pop
cmp
add
out
cmc
dec
or
movsb
cmc
movsbl
std
cmp
ret
inc
jno
test
outsl
cli
sbb
outsl
push
scas
mov
mov
int3
stc
sbb
pop
aad
add
pusha
clc
int3
andl
in
incl
cmp
or
or
mov
xchg
lea
sbb
xor
push
xchg
and
leave
scas
lds
sub
and
sub
push
rcr
mov
jl
hlt
in
ds
push
pusha
mov
inc
jns
add
or
cld
clc
sbb
pop
jl
jmp
aad
in
test
push
ja
or
sbb
nop
icebp
outsl
clc
out
xor
int3
mov
imul
jb
out
lds
fimull
subl
push
divb
cwtl
or
hlt
cmpsl
setl
pushf
les
xchg
pop
loopne
push
clc
jecxz
and
aas
dec
dec
nop
sbb
jge
sarb
pop
mov
mov
mov
push
mov
jp
mov
xchg
in
shlb
pop
fdivl
xchg
push
aaa
mov
xor
mov
rorb
mov
jl
push
movb
sahf
xor
js
mov
push
cmpsb
mov
std
pop
jge
fimuls
shrb
push
pop
pushf
or
inc
adc
jmp
cmp
sbb
xor
ret
add
mov
es
mov
fisttpl
add
shlb
sub
pop
pop
loopne
das
mov
mov
fs
pusha
gs
fisubrl
mov
mov
or
data16
cmpsb
mov
testb
or
adc
pop
mov
xchg
ljmp
mov
jno
jmp
jmp
push
ret
jne
mull
cmp
dec
stos
hlt
xchg
push
mov
mov
mov
xchg
push
or
inc
cld
jmp
icebp
std
fidivrs
icebp
popf
xor
mov
out
xchg
adc
add
fmull
lret
out
aaa
pop
movsb
jmp
or
popa
mov
push
rorb
fimuls
stos
push
in
popf
sub
add
in
std
fwait
sub
jo
cltd
movsb
jne
push
push
sub
lea
out
jmp
add
xor
mov
cli
int
sahf
xchg
and
call
insb
insb
subb
xchg
push
shlb
ljmp
pop
xchg
les
cmp
sbbb
aaa
std
mov
sbb
mov
mov
in
mov
add
lods
mov
jl
decl
leave
push
mov
and
sbb
inc
subb
test
add
loop
es
and
jle
test
movsb
jp
lods
lret
cld
test
lds
lock
jmp
or
cmp
add
pop
inc
push
mov
aas
pop
cmp
fiaddl
cli
cmp
ljmp
pop
test
xor
push
jmp
fsubrs
rorb
bound
cmp
pop
loop
fucomi
add
xor
mov
xchg
jo
out
and
jge
or
dec
ret
fisttps
ret
and
stos
mov
xchg
xchg
arpl
outsl
pop
add
inc
push
sbb
sbb
adc
nop
pop
mov
push
inc
filds
fcomps
enter
adc
js
lock
and
daa
loopne
bnd
insl
mov
mov
inc
mov
sar
sbb
jno
inc
fldl
inc
mov
pop
inc
dec
jne
lcall
sbb
lret
add
and
arpl
xorl
inc
cmpl
in
pusha
and
loopne
push
xchg
xorb
loopne
mov
clc
jg
stos
xchg
dec
dec
and
mov
push
mov
sbb
fcompl
dec
jne
inc
lahf
and
cmpsl
and
inc
je
imul
ret
bound
sbb
and
xchg
rclb
xor
ficomps
sub
xchg
inc
std
aaa
shll
pop
adc
sbb
sti
mov
gs
adc
daa
sbb
add
in
fimull
data16
mov
cmp
sub
mov
mov
les
pushf
js
xchg
lahf
call
dec
xchg
lret
mov
push
jo
clc
push
insl
dec
cmp
data16
into
dec
and
push
scas
and
ljmp
jbe
inc
sbbl
loop
or
aad
mov
mov
sbb
cmp
scas
mov
mov
iret
loop
sarl
mov
rolb
lea
pop
lds
cltd
pop
add
adc
pop
mov
out
sbb
jg
mov
adcb
or
pop
cmpsb
icebp
adc
and
lock
pop
je
sbb
fwait
bound
in
bound
cs
dec
push
push
aaa
push
pop
xor
rcrb
mov
pop
cmc
jbe
outsb
aaa
mov
xchg
mov
fistpl
sbb
push
cmpsb
ss
rorb
in
inc
xchg
lcall
push
xchg
icebp
jl
sub
pop
icebp
pop
mov
cwtl
add
movsb
mov
sbb
inc
jae
data16
cwtl
out
pop
dec
pop
adc
outsb
popf
mov
jbe
push
repnz
inc
mov
or
pop
je
add
inc
mov
insb
sbb
pushl
popa
mov
aam
mov
sub
jns
mov
pop
mov
sbb
cli
sbbb
push
cmp
mov
sbb
test
jge
push
sbb
xor
fs
loopne
add
dec
mov
or
loop
inc
es
mov
mov
push
out
shll
test
movsb
or
sbb
inc
fisttpll
add
push
movsb
les
xchg
ret
fdivr
lock
stc
cmp
testb
add
aam
jno
dec
inc
fwait
paddsb
in
movsl
sub
cmp
ss
adc
in
or
mov
enter
xlat
xor
dec
popa
mov
fdivrs
cmp
mov
lcall
push
stos
mov
inc
jbe
ja
popf
mov
rol
lds
jns
jl
lock
sub
or
push
sbb
dec
xor
push
xor
enter
cli
cmpsb
loope
jo
inc
dec
pop
dec
mov
pusha
cmp
stos
ja
jecxz
jmp
jg
cmpb
clc
ljmp
pop
mov
lock
jecxz
dec
cmp
lahf
and
inc
and
mov
lcall
aam
dec
jmp
aaa
mov
push
mov
rcll
sub
dec
rolb
dec
ret
sarb
imul
dec
adc
cwtl
or
add
cmp
ret
push
adc
add
aam
mov
dec
sbb
ffree
mov
enter
dec
call
lret
mov
imul
lods
movsb
and
mov
pop
inc
cld
mov
push
xchg
xchg
inc
es
stos
pop
adc
inc
call
xchg
push
lea
or
mov
push
subl
orb
inc
add
nop
push
add
add
xorl
and
adc
inc
push
add
orb
jb
and
movsb
into
lcall
add
jns
je
xor
out
mov
adc
insb
and
movsl
inc
xor
addb
push
fs
outsl
pop
push
xor
imul
jno
mov
jecxz
fcmovne
insb
hlt
aaa
bound
mov
stc
cltd
and
sarb
jns
rol
pop
pop
inc
jne
xor
fnstsw
les
arpl
mov
pop
jne
dec
or
in
xor
or
push
mov
je
dec
push
je
jnp
xor
mov
push
lcall
add
insb
testl
popf
mov
push
imul
lock
xchg
or
push
out
fnstsw
dec
inc
push
mov
repnz
std
cmp
sbb
je
testl
mov
pop
dec
lock
jo
insb
cmpsb
jns
outsb
jmp
ja
sbb
pop
mov
sbb
pop
test
and
out
xor
push
adc
outsl
push
mov
outsb
js
je
inc
push
add
gs
xchg
insb
xchg
js
mov
imul
ffree
push
jecxz
push
inc
push
jbe
roll
inc
cmp
popl
lds
cli
xor
fldl
pop
dec
push
and
jnp
cmpsb
clc
pop
jl
repnz
pop
add
js
sub
das
push
pop
jo
mov
outsl
lret
dec
mov
jbe
xchg
sub
insl
jnp
jle
xchg
dec
inc
ja
insb
add
inc
xlat
es
push
jo
fwait
jns
in
cmp
sub
stos
repnz
push
divl
lcall
jae
imul
repnz
mov
insb
dec
fs
pop
xor
inc
xchg
dec
sti
push
jnp
mov
mov
jb
dec
arpl
dec
addr16
dec
fwait
mov
out
pop
aas
repnz
imul
out
nop
pop
pop
jecxz
xor
mov
inc
jnp
outsb
imul
push
dec
inc
rorl
popa
aaa
insl
jg
test
cs
popa
bound
mov
loope
adc
repnz
or
cmc
jecxz
mov
fisttpl
cmpsb
cmp
insb
out
push
ja
iret
xchg
stos
inc
or
push
dec
int
dec
jmp
inc
dec
push
cmc
dec
inc
mov
sbb
mul
out
jb
gs
push
out
outsl
jnp
cli
lcall
jnp
adc
mov
jp
mov
sbb
popl
lock
inc
ja
pop
pop
fildll
inc
ret
iret
neg
stos
in
jo
and
js
insl
push
cmp
pop
pop
mov
rorl
xor
addr16
xchg
std
clc
inc
or
aaa
jo
inc
push
outsb
aas
stc
stos
add
pusha
jae
mov
inc
add
mov
push
or
inc
push
je
scas
and
add
fnsave
adc
bound
insl
aaa
shlb
xor
push
mov
inc
dec
cmpsb
inc
leave
inc
scas
in
jae
jo
xchg
jo
popa
xchg
jl
repnz
dec
sub
addr16
ja
scas
lds
sub
insb
dec
ficoml
dec
loop
push
popa
decl
cmp
push
adc
psubb
cmova
lar
mov
repnz
push
rcrl
push
inc
es
sarl
push
add
xlat
push
jno
dec
add
sub
dec
jns
sbb
xor
push
rol
xor
mov
inc
nop
add
inc
and
sbb
adc
jae
mov
inc
insb
push
pop
mov
inc
imul
pop
cmp
mov
inc
js
hlt
faddl
push
push
push
jp
xor
inc
filds
or
bound
sbb
out
inc
mov
filds
add
mov
loope
rorl
cmp
std
mov
adc
shrl
jno
je
stos
bound
mov
push
xor
aam
in
ds
jae
push
aas
adc
xchg
and
ficoml
mov
hlt
into
bound
andb
addb
jle
orb
and
cmpl
inc
add
jae
imul
and
pop
mov
loop
push
dec
sbb
jns
xchg
jg
roll
adc
jo
lea
xor
cmc
jnp
inc
adc
jns
aam
mov
std
push
sbb
sub
dec
comiss
sub
push
or
fs
and
or
fistpll
mov
aas
cmp
xor
bound
pushl
insb
jns
push
jo
gs
jno
xor
bound
dec
outsb
imul
aaa
fcmovb
cmp
jo
inc
push
imul
ljmp
push
arpl
inc
dec
outsl
dec
jne
jne
je
push
dec
jne
push
addr16
xor
jo
push
ss
js
sti
pushl
data16
dec
push
inc
ss
ja
dec
jb
inc
lcall
inc
or
jns
dec
outsb
inc
js
dec
dec
jae
ja
ss
push
dec
jae
fs
fs
pushl
jne
outsw
je
dec
dec
jns
pop
dec
dec
imul
popa
xor
pop
push
jg
js
addr16
inc
dec
insb
xor
mov
add
fs
jbe
lcall
call
push
imul
dec
imul
dec
push
dec
inc
arpl
bound
insl
or
ljmp
inc
bound
popa
ja
push
inc
xor
popa
fs
incl
aaa
push
dec
xor
dec
push
push
xor
inc
arpl
pop
lock
jne
popa
je
inc
push
int3
dec
pop
xor
push
jno
inc
push
xor
ss
insb
pop
outsl
dec
dec
dec
inc
jb
push
je
inc
jne
dec
inc
dec
push
push
dec
or
das
adc
push
outsl
imul
push
jno
ss
inc
inc
mov
mov
je
push
jae
xor
push
inc
dec
dec
pop
inc
inc
jbe
dec
ja
ljmp
gs
dec
push
xor
jo
outsb
push
push
outsb
dec
dec
inc
jns
ss
cld
pushl
gs
imul
outsl
push
push
jno
insl
js
dec
inc
bound
dec
js
outsl
imul
fbld
dec
jo
insl
jno
xor
fs
jb
popa
data16
gs
je
fcmovnb
dec
inc
pop
dec
clc
push
jbe
arpl
push
push
push
push
jo
xor
inc
inc
je
incl
jne
inc
jb
inc
ss
push
pop
jno
insb
fs
sbb
jno
cmp
inc
cmp
inc
js
imul
jns
outsl
pop
mov
addr16
outsb
dec
ss
inc
outsl
xchg
pop
das
clc
dec
push
xor
inc
xor
jbe
ss
data16
jg
push
inc
adc
dec
cmp
jo
push
ss
push
pop
push
lock
jp
aaa
inc
cmp
inc
jno
js
jbe
xor
dec
cld
mov
shrb
push
rclb
push
jae
dec
insl
pop
add
dec
movsb
outsl
data16
dec
push
push
ret
dec
inc
cli
pop
cld
ljmp
push
dec
outsb
insb
jne
xor
dec
dec
arpl
cmp
jno
gs
aaa
cld
add
inc
pop
rolb
ja
js
inc
fidivs
loope
or
dec
pop
push
fs
dec
pop
push
imul
pop
mov
pop
dec
cmp
dec
xor
inc
sbb
jae
dec
dec
addr16
std
adc
outsb
fidivs
cmp
push
insl
mov
push
dec
mov
mov
jbe
inc
dec
push
jne
cmpsb
push
data16
xor
dec
mov
pushl
ss
dec
push
push
gs
dec
bound
push
pusha
mov
insb
push
inc
data16
dec
jbe
ss
inc
dec
arpl
push
data16
loop
loope
ss
sbb
fs
ja
pop
jne
push
loope
pop
out
bound
jne
push
jae
jbe
push
cmpb
pop
push
xchg
push
dec
push
jo
xchg
js
das
jb
aam
pop
popa
ret
dec
ja
dec
pop
dec
call
jns
imul
push
jne
push
or
mov
dec
addr16
aaa
pop
sar
inc
insb
imul
jb
xor
sbb
mov
pushf
insl
dec
fisubl
inc
mov
gs
data16
inc
mov
inc
loop
dec
aaa
dec
popa
ret
ja
inc
inc
sbb
push
xor
push
dec
xor
loopw
loopne
inc
aaa
inc
dec
sbb
inc
inc
dec
ja
ja
inc
insb
mov
gs
shll
clc
or
ss
jb
sahf
dec
xor
jp
push
push
fs
xor
inc
je
hlt
sub
outsb
inc
adc
imul
sahf
insl
ja
pop
or
inc
xor
popa
mov
push
addr16
xor
push
jp
cmp
mov
outsl
push
inc
push
xor
outsb
icebp
das
clc
in
ss
push
xor
pop
xor
insl
dec
imul
sbb
dec
inc
pop
insl
je
push
hlt
mov
jo
js
insl
push
xor
push
push
stos
jmp
adc
dec
xor
push
dec
imul
call
xor
xor
dec
xor
push
push
orb
mov
add
dec
test
jbe
insl
insb
xor
push
jno
push
push
call
gs
xor
push
inc
mov
adc
insb
dec
adc
cwtl
inc
dec
dec
dec
or
jae
xor
and
inc
xlat
cmpsb
dec
inc
jbe
mov
mov
xor
in
das
sbbb
inc
inc
addr16
inc
bound
mov
xchg
cmp
jne
insb
in
pop
fidivl
dec
push
push
insb
and
js
inc
jae
jbe
shlb
ja
pusha
jb
outsb
push
push
jne
add
addr16
dec
dec
pop
lods
inc
fbstp
sbb
imul
dec
inc
inc
mov
fs
popa
test
ds
push
jg
add
subb
push
xor
jae
inc
imul
xor
fisubl
push
aaa
lcall
inc
xchg
mov
push
cmp
aad
xor
dec
push
push
push
dec
rcrb
gs
push
jns
push
jae
inc
or
fbstp
inc
dec
inc
inc
pop
pop
xor
dec
outsl
adc
popa
sbb
cld
push
inc
push
push
data16
inc
mov
ja
scas
pop
lock
pop
imul
inc
bound
push
jbe
lock
outsb
fmuls
pop
inc
xor
jno
dec
popa
jp
pop
insb
inc
push
push
jb
dec
cmp
xor
bound
xor
sbb
xor
inc
jb
push
push
xchg
data16
sbbb
in
test
js
inc
jo
insb
sub
sub
dec
dec
push
jp
popa
xor
mov
pop
insb
push
cld
aas
mov
imul
inc
push
pop
loopne
out
lods
xor
je
push
xor
data16
arpl
push
xchg
xor
imul
imul
dec
mov
push
mov
add
call
inc
push
jb
dec
ja
shlb
mov
cmp
aaa
dec
aaa
push
jae
inc
inc
xor
jns
and
bound
mov
addr16
xor
sbb
dec
mov
mov
pop
test
dec
jb
fs
fisubl
inc
pop
push
clc
cmp
arpl
xor
std
xchg
fs
push
jns
aaa
jp
inc
popa
fbld
aaa
inc
xor
enter
arpl
sub
dec
inc
outsb
inc
dec
push
mov
push
rclb
xor
push
je
sub
push
addr16
jbe
arpl
ja
andb
insb
inc
push
jg
jg
int3
dec
outsb
jno
dec
push
cmp
out
dec
jbe
push
dec
dec
xor
lock
inc
dec
xor
popa
inc
jb
inc
hlt
push
pop
movsb
push
sbb
insb
jb
jb
inc
outsl
inc
dec
xor
jo
inc
in
inc
sub
dec
sub
out
cwtl
sub
xchg
push
xchg
add
mov
inc
insb
das
mov
push
add
push
dec
mov
dec
insl
dec
outsl
in
fwait
jle
js
aam
jo
inc
dec
dec
xchg
js
addr16
dec
bound
xor
sub
pop
cmp
mov
insb
inc
inc
scas
inc
add
test
push
je
jg
addl
repnz
bound
lret
je
xor
xor
scas
jns
inc
fmull
jo
fcomip
fwait
out
in
push
jne
xor
aaa
pushf
imul
std
andb
jne
arpl
ja
jne
sub
das
ficompl
push
push
jb
xor
push
jns
jp
jg
cmpb
dec
js
inc
xor
inc
imul
mov
insb
xorl
outsb
mov
dec
outsl
sub
stos
fs
dec
imul
adc
xor
inc
mov
fsubl
ss
inc
cwtl
inc
aam
imul
mov
nop
ja
xor
mov
or
bound
insl
sbb
xor
mov
mov
push
movsb
push
inc
inc
push
inc
bound
xor
sub
lock
fs
push
push
insb
push
jo
adc
outsb
xchg
inc
ja
cli
mov
add
xor
fs
cmp
ss
push
dec
jo
fs
push
cmpsb
pop
arpl
sbb
imul
aaa
mov
mov
insb
fadds
jne
jne
push
push
xor
adc
xor
gs
xor
je
add
imul
push
fsubrs
push
add
mov
outsb
push
imul
xor
out
dec
hlt
dec
bound
jecxz
mov
push
dec
xor
insl
addr16
gs
scas
inc
mov
es
inc
add
jb
xor
xor
outsl
push
testb
and
jne
inc
bnd
ja
sbb
dec
push
jbe
inc
je
dec
push
add
mov
fmull
outsb
dec
jne
lods
push
jno
stos
jmp
add
js
imul
jg
xchg
outsb
hlt
push
in
jne
push
addr16
push
or
sbb
repnz
push
jl
pop
jno
ja
jno
imul
xchg
bound
push
push
push
enter
pop
aad
stos
rolb
push
cmpsb
inc
fisubrs
dec
outsl
or
push
outsb
jbe
cmp
or
clc
xor
push
push
imul
enter
push
or
pop
add
push
ljmp
sub
lcall
inc
and
jne
js
dec
dec
push
push
insb
fs
std
pop
push
aad
push
dec
inc
add
jns
insl
ret
stos
pop
outsb
aaa
insl
push
dec
jae
pop
inc
push
push
ja
test
and
dec
scas
jne
jns
call
pop
cmp
js
ret
push
jae
dec
aad
jmp
addr16
lcall
bound
push
jbe
add
xlat
das
clc
jg
outsl
push
inc
xor
dec
pop
outsb
ret
cmp
inc
fs
add
inc
pushf
sub
push
dec
in
pop
mov
jmp
push
popa
push
cli
jb
lahf
out
xor
imul
push
pop
aaa
aam
push
xchg
in
mov
cmp
pop
dec
ja
imul
cmp
add
jno
push
jne
push
outsl
arpl
ss
mov
cmp
outsb
jo
jne
push
stos
outsb
dec
mov
ficomps
and
dec
inc
push
inc
dec
xor
loopne
dec
push
sbb
icebp
mov
push
jne
bnd
dec
rcrl
outsb
push
dec
dec
je
jns
mov
jb
lods
jmp
dec
fimuls
push
sub
inc
bound
cli
mov
imul
gs
arpl
mov
push
dec
outsl
push
dec
outsb
dec
jb
jbe
andb
shl
aaa
bound
ret
adc
jns
andb
inc
imul
add
mov
je
jb
cli
jae,pn
fiaddl
insb
xchg
jns
outsl
jmp
stos
scas
aam
xor
jbe
push
xor
cmp
xchg
mov
inc
fdivl
push
shl
inc
addr16
xor
outsb
sbbb
bound
mov
xor
push
dec
inc
push
cmc
outsl
xchg
dec
xor
inc
push
js
push
inc
xor
outsl
or
je
jae
push
popa
adc
jb
push
insl
jbe
outsb
jo
loopne
pushf
pop
push
rorl
push
dec
dec
je
mov
add
push
pop
sub
fs
inc
dec
push
cmp
jg
pop
outsb
mov
push
push
insl
outsl
dec
jne
inc
jo
outsl
in
rcrl
push
fsubl
push
cmp
pop
popa
mov
ss
dec
popa
xor
rclb
mov
push
inc
dec
inc
sub
pop
filds
push
bound
push
pusha
adc
jne
push
jo
popa
jne
xor
pusha
add
push
fs
or
dec
dec
js
dec
push
push
push
ret
pop
lock
bound
call
mov
pusha
addr16
fs
ja
push
dec
push
dec
push
jns
inc
fs
xor
dec
popa
arpl
shl
dec
pop
outsl
dec
jns
inc
push
jo
inc
out
dec
jne
arpl
adc
xchg
add
cmc
push
xchg
test
push
xor
mov
adc
pop
dec
push
negb
push
imul
xor
inc
xor
xor
jo
inc
dec
push
sbbl
dec
ljmp
adc
dec
insl
jae
dec
inc
fists
inc
cwtl
lock
inc
sbb
push
inc
insl
xor
push
int
loope
mov
push
inc
aaa
fimull
sbb
dec
xor
imul
ljmp
jae
mov
jbe
xor
push
mov
push
dec
jo
data16
xorb
aaa
jne
xor
push
add
xor
call
movsb
inc
mov
scas
inc
lods
bound
fsubl
xchg
mov
mov
push
add
mov
fidivs
ss
mov
push
dec
outsl
jbe
imul
sub
sbb
or
rorb
push
gs
push
sbb
pop
and
fists
inc
fs
xor
popa
data16
jbe
pusha
aad
push
arpl
js
dec
outsb
in
cli
cmpsb
or
inc
inc
inc
popa
sbb
sbb
push
addr16
inc
push
push
cwtl
push
ret
pop
fisttpl
jl
bound
fdivs
push
xor
push
dec
bound
jo
pushf
outsb
rorb
or
cltd
xchg
adc
insl
clc
mov
inc
jae
jmp
push
push
xor
ljmp
pop
pop
jne
jae
xor
dec
dec
call
arpl
stos
arpl
ss
jne
imul
bound
loope
je
mov
insl
push
jb
cmp
inc
inc
aaa
push
push
ljmp
dec
outsl
xor
inc
inc
shl
mov
jbe
inc
je
jb
sub
pop
sarb
push
inc
inc
xchg
js
push
in
mov
mov
jb
ss
xor
dec
jno
adc
push
pop
imul
jmp
ss
push
inc
pop
sbb
xor
xor
movsb
jb
mov
imul
dec
lret
test
inc
dec
push
push
and
shl
mov
xor
xor
insl
loopne
lods
push
dec
jne
mov
dec
imul
cmp
or
shl
or
or
arpl
push
jp
mov
stos
leave
fmulp
popa
test
aaa
dec
gs
inc
sub
push
inc
call
fstl
int3
push
push
dec
mov
addr16
insl
dec
xor
mov
es
inc
js
dec
ja
mov
outsb
das
clc
xchg
inc
xor
outsb
inc
pop
dec
xor
push
insl
outsb
test
or
shl
inc
pop
dec
push
xor
xchg
enter
inc
inc
add
addb
pusha
js
jle
arpl
jno
in
inc
pushw
insb
cmp
inc
dec
push
aad
xor
xor
mov
nop
adc
xor
fs
jbe
adc
pop
pop
xor
inc
cmp
dec
push
push
aam
aad
inc
dec
push
add
and
loop
sub
sub
addr16
outsb
pop
cmc
aaa
lods
outsb
jo
and
pop
push
push
arpl
dec
cld
das
rorb
inc
jbe
imul
imul
test
loopne
inc
divb
add
or
lcall
je
insl
popa
jae
push
inc
xor
inc
or
mov
insb
push
pop
xor
scas
lock
cs
cld
icebp
pop
dec
xor
test
jno
jbe
push
or
adcb
inc
aaa
push
bound
shrb
cmp
jae
push
cmp
cmp
dec
and
jae
outsl
dec
imul
out
mov
ss
outsb
outsl
lock
xor
dec
inc
pop
or
mov
imul
lock
dec
inc
jno
push
fwait
pop
cmp
ss
and
pop
ss
mov
outsl
les
addr16
or
jecxz
shlb
jbe
push
jae
imul
mov
cld
sbb
jns
jne
xchg
fadds
jne
dec
push
inc
inc
test
aaa
orl
sub
inc
xor
add
ss
popaw
ja
dec
xor
xor
adc
arpl
xor
outsl
jne
pop
and
adc
push
pop
push
push
lods
ljmp
xor
or
push
fisubrl
js
mov
xchg
loopne
dec
inc
in
push
push
adc
push
aaa
std
push
cmpsb
push
dec
jp
insl
data16
inc
push
inc
xor
je
inc
xor
push
dec
dec
faddl
popa
addr16
bound
fbld
cli
inc
js
pop
jb
cmp
pop
js
inc
xchg
test
inc
push
push
xchg
es
jb
push
ret
cmpsb
out
cli
push
ss
push
xor
inc
jbe
ss
lock
add
inc
ja
xor
mov
push
inc
aad
popa
pop
and
push
pusha
push
sub
ss
pushl
fdivrs
imul
jae
xor
js
dec
push
js
jae
call
test
inc
and
xor
dec
addr16
popa
inc
jbe
push
inc
add
jmp
rorb
mov
loope
xor
les
inc
nop
dec
inc
and
xor
test
xor
addr16
dec
dec
dec
inc
inc
insl
jno
aam
push
push
push
dec
push
outsl
ss
add
push
jns
imul
push
dec
outsb
push
mov
jl
dec
inc
adc
inc
imul
jbe
cmp
pop
lcall
push
arpl
pop
sub
push
dec
mov
inc
push
pusha
push
xchg
frstor
fidivl
lods
push
dec
dec
inc
in
push
add
jbe
xor
cwtl
dec
rcrb
xchg
out
mov
and
outsb
fcoml
test
push
push
dec
ss
enter
mov
inc
push
js
ficomps
sub
aaa
ljmp
shlb
cmp
or
pop
dec
in
dec
inc
dec
xor
popa
push
adc
je
jns
cmp
jno
ja
rorl
fidivrs
jb
and
sub
xor
mov
jg
mov
jae
insl
jb
arpl
mov
xor
inc
jo
fs
insb
xor
push
sub
xor
xor
xor
pop
movsb
int3
inc
dec
insb
jns
insb
outsb
push
inc
bound
je
inc
sub
stos
popa
xlat
outsl
outsb
sahf
ja
and
mov
insb
jb
jns
lods
popa
outsl
mov
inc
je
pop
bound
inc
data16
ss
dec
add
push
jns
jbe
dec
pop
sub
push
cs
adc
push
ja
inc
icebp
push
std
outsl
outsb
aaa
jns
dec
inc
xor
dec
mov
ja
inc
dec
inc
adc
push
jno
dec
push
imul
pop
jno,pt
data16
fs
lods
mov
push
push
je
xor
test
or
ss
out
fsubs
outsl
je
jo
data16
jbe
arpl
inc
xchg
jmp
inc
rolb
pop
pop
adc
nop
ret
nop
and
add
clc
jns
into
mov
push
call
pop
bound
dec
sub
push
mov
into
loopne
shlb
inc
imul
push
ss
push
imul
pop
jo
push
xchg
ret
add
imul
imul
pop
je
mov
push
fidivs
mov
mov
ljmp
add
aaa
xchg
inc
dec
xor
js
insb
pop
or
or
outsb
dec
dec
xor
dec
jb
js
sbb
js
jo
jb
jb
inc
outsb
jo
lea
aam
dec
push
ret
add
adc
jbe
jne
ss
mov
mov
cmp
movsb
inc
jne
xor
inc
push
push
inc
dec
mov
dec
fs
shll
arpl
imul
jo
push
xchg
lock
pusha
xor
jecxz
data16
mov
gs
jb
ja
test
jae
inc
faddl
inc
arpl
stos
push
sbb
mov
xor
outsl
outsl
mov
jl
push
xor
push
subl
hlt
cs
inc
outsl
addr16
outsl
stos
stos
pop
ja
push
fisubl
cs
or
mov
xor
loope
push
arpl
push
jae
push
ss
arpl
loop
add
ja
inc
push
outsl
xor
loope
dec
imul
inc
inc
outsl
adc
xchg
jne
push
addr16
insl
adcb
in
push
dec
mulb
sahf
push
xor
inc
push
rorl
lcall
inc
inc
imul
push
je
es
push
scas
dec
imul
pop
js
test
sbb
pop
arpl
mov
fst
xor
mov
outsb
inc
arpl
mov
ss
jb
xor
popa
popa
push
inc
jbe
in
xor
dec
push
dec
dec
jno
push
xor
push
push
mov
inc
mov
xchg
arpl
dec
es
jbe
xor
mov
orb
pop
je
inc
arpl
sbb
rorl
inc
cmpsb
or
inc
push
fsubrs
outsb
jne
xor
inc
push
xchg
mov
je
ss
inc
aad
push
rorb
xor
cmp
xor
push
js
xor
dec
insl
push
ja
or
fildll
popa
mov
dec
js
ljmp
je
push
jae
push
push
pop
nop
fsubl
pop
mov
dec
jae
adc
push
xlat
pushl
inc
dec
dec
push
jo
jns
dec
xor
insb
inc
push
shl
or
js
push
pop
inc
sbb
jae
inc
js
push
push
addr16
inc
gs
add
movsl
push
jae
aaa
adc
push
dec
push
jns
xchg
add
sbb
xor
pop
inc
inc
sarb
outsb
mov
push
insl
insb
push
push
rorb
jbe
inc
jo
pusha
xor
sbb
cs
addr16
je
dec
popa
repnz
jo
jbe
dec
push
clc
push
popa
addr16
in
mov
pop
dec
dec
inc
or
sbb
outsl
imul
lods
mov
mov
imul
aaa
jae
inc
add
mov
mov
jb
mov
sahf
insb
push
push
xor
xlat
push
add
ret
inc
push
stos
inc
adc
push
xchg
outsl
imul
add
dec
push
inc
inc
imul
in
fwait
push
js
arpl
push
push
imul
cli
pop
gs
jno
jbe
push
xor
pop
or
data16
push
push
pop
push
addr16
lds
xor
insb
addr16
outsb
insb
push
inc
fistpll
xor
push
xor
xor
mov
jge
dec
sub
insb
push
pop
mov
fldt
out
push
dec
jbe
inc
dec
cmp
pop
insl
dec
or
jno
mov
out
fs
outsl
dec
xor
xchg
call
aaa
arpl
jo
dec
jno
xor
and
test
push
push
imul
outsl
dec
push
insb
push
add
inc
scas
mov
pop
fs
ja
enter
jno
or
lock
jne
add
pop
add
fidivrl
cmp
mov
ss
insl
loopne
mov
lds
arpl
dec
popa
inc
gs
dec
dec
jb
dec
insb
mov
fidivl
jbe
jb
push
fs
jae
mov
inc
jno
fisubrs
call
push
push
shll
push
gs
dec
jbe
sarb
dec
inc
je
mov
fiaddl
repnz
aaa
cmpb
dec
jns
push
pop
xorb
mov
cld
and
sbb
imul
dec
outsl
loope
xor
fisubrl
pop
mov
jo
addr16
movsb
data16
sarb
imul
jmp
push
inc
orb
test
scas
push
mov
cmp
pushf
inc
js
push
mov
cmp
inc
cwtl
dec
cmp
pop
mov
ja
inc
xor
adc
push
sub
loop
inc
push
sub
push
aam
adcb
dec
pop
je
push
inc
xor
inc
sub
push
dec
inc
mov
push
dec
mov
inc
push
jno
pop
xor
arpl
cs
dec
std
ja
lcall
bound
jbe
outsb
fs
sub
je
xchg
jno
mov
call
dec
jb
pop
pop
bound
gs
rcrl
cs
xor
jbe
inc
dec
in
je
inc
mov
jae
insb
push
aad
pop
rolb
push
dec
ja
push
push
decl
inc
rolb
dec
mov
dec
push
aaa
push
inc
inc
push
sti
outsl
pop
icebp
jns
jb
out
jne
bound
jns
aaa
aaa
xor
mov
pop
push
lcall
lret
pop
inc
data16
popa
jg
sub
dec
push
dec
mov
addr16
dec
imul
in
push
pop
jo
pop
ret
push
or
push
lods
dec
mov
shrb
sub
inc
js
push
dec
insl
lds
inc
push
inc
push
js
sub
outsl
js
push
mov
je
outsb
outsb
les
pusha
subl
out
push
movsb
push
popa
insl
imul
mov
dec
sub
jb
ds
xor
push
adc
push
hlt
inc
outsl
insl
push
mov
ss
jno
cli
outsl
dec
pushf
push
rcr
shl
ljmp
pop
ss
push
jbe
xor
jne
push
imul
add
xor
outsl
push
inc
clc
inc
mov
js
shlb
dec
bound
fs
outsb
ja
push
jno
jo
fwait
and
jo
xor
mov
push
add
inc
mov
arpl
mov
rcrb
fs
jne
je
inc
push
push
xchg
rcrb
cmp
int3
movsb
je
in
jg
and
fs
push
push
bound
jo
push
push
arpl
pop
fdivl
dec
inc
or
xor
dec
add
xchg
sbb
jbe
or
data16
aad
icebp
pop
fidivrl
xor
inc
jno
call
adc
dec
outsl
xor
mov
mov
mov
shlb
cwtl
push
push
dec
arpl
inc
mov
pop
pop
ficompl
inc
dec
push
pop
data16
inc
roll
dec
insb
push
push
dec
bound
inc
mov
push
dec
imul
sbb
cld
aam
arpl
jne
jbe
rcrl
addr16
push
arpl
add
loop
andl
sub
pop
aam
mov
xor
push
inc
dec
jle
push
adc
je
push
xchg
pop
pusha
fdivs
jo
je
jb
dec
outsl
incl
je
cmpsb
popa
jns
dec
addr16
xor
imul
dec
jmp
push
xor
jo
xor
sbb
add
adc
inc
jno
jecxz
cmp
jno
arpl
lock
xor
cmp
pop
adc
dec
dec
xor
jo
cmp
xchg
hlt
xor
je
xorb
xor
jbe
aaa
mov
lods
push
insb
bound
mov
dec
dec
dec
cmp
ja
xor
push
inc
adc
inc
xor
gs
ja
mov
shll
js
push
insl
inc
bound
dec
rolb
add
xor
dec
aaa
cmp
xorb
out
clc
aaa
insb
push
xor
insb
jo
dec
sbb
jno
loopne
mov
inc
aaa
cli
jne
dec
aaa
je
push
mov
rorb
and
cmp
orb
mov
insl
push
insl
xor
outsl
add
jp
jae
push
push
imul
hlt
insb
inc
insb
dec
ja
je
inc
movl
dec
xor
adc
je
js
inc
push
inc
lret
out
cs
cmp
push
xor
dec
push
push
jns
xor
inc
lds
bound
fcom
push
push
inc
xor
inc
hlt
pop
add
imul
push
aaa
ljmp
push
push
push
push
dec
gs
subb
mov
loopne
xor
push
inc
aaa
mov
mov
jg
call
mov
push
dec
xor
jne
mov
sub
inc
je
jp
or
dec
test
dec
outsb
push
ja
adc
adc
sarb
jae
jb
cmp
inc
add
cmp
mov
outsl
pop
sub
dec
cmp
dec
inc
push
jbe
adc
dec
jne
aam
push
out
mov
fs
popa
bound
popa
js
jne
add
push
outsb
imul
fs
dec
xor
jo
sub
xchg
dec
shl
adc
pushw
xchg
inc
push
jge
insb
fdivl
dec
insl
ss
inc
xor
dec
push
in
mov
in
sarb
jo
fs
pop
aaa
jo
imul
xor
mov
aaa
js
xchg
add
dec
push
ret
push
addr16
fcom
xor
popa
insw
subb
outsl
fsubs
dec
cmp
push
push
push
lock
push
inc
jno
insl
pop
and
imul
jle
popa
fcoml
inc
push
cmp
xor
pop
adc
push
add
js
dec
inc
gs
dec
push
clc
dec
ss
ret
dec
xchg
scas
aaa
sub
shlb
push
fimull
popa
inc
dec
add
cmpsb
inc
enter
jl
outsl
fdivl
mov
sub
sbb
imul
jo
clc
ss
push
inc
dec
push
dec
shlb
push
sbb
inc
cmpsw
jbe
push
xor
gs
imul
push
dec
cli
xchg
push
and
imul
xchg
sub
cmpsb
add
imul
stos
push
xlat
pop
sbb
xor
sub
aaa
ss
push
add
xor
outsl
js
ja
dec
addr16
push
cmpsb
imul
bound
cmp
cli
outsl
outsb
incb
lcall
in
xor
jns
dec
xchg
xor
dec
inc
inc
inc
movl
xor
push
push
dec
inc
inc
push
and
sub
inc
inc
lret
fs
insl
dec
push
mov
dec
cld
inc
dec
insl
push
sub
loopne
mov
pop
mov
sbb
lock
xor
insb
dec
insl
je
or
loopne
popa
xor
ficomps
dec
fs
incl
push
dec
jbe
aaa
jno
dec
inc
push
outsb
xor
pop
faddl
adc
mov
orb
dec
adc
fs
ss
xchg
sbb
jne
inc
pop
push
orb
mov
insw
imul
xor
xor
inc
xor
js
push
dec
cmp
or
mov
pop
insb
inc
cs
mov
popa
add
bound
mov
push
push
xchg
xor
arpl
imul
cmp
pusha
test
insb
adc
xchg
je
rcrl
mov
jb
mov
sbb
xchg
fwait
pop
and
ds
mov
push
jo
jo
mov
fwait
ljmp
push
dec
imul
leave
and
push
mov
das
ss
jo
inc
je
in
dec
cmpsb
push
dec
or
popa
push
ss
and
stos
outsl
sub
imul
out
pop
jo
insb
enter
inc
data16
ss
pop
adc
and
push
rcll
cld
or
xor
push
enter
xor
adc
test
xor
mov
dec
cmp
mov
dec
dec
addr16
bound
xor
cld
pop
stos
pop
jae,pt
outsb
inc
cld
pop
outsl
inc
js
push
jno
cmpsb
mov
xchg
inc
or
mov
xor
bound
arpl
pop
or
aaa
clc
ss
ja
jne
pop
or
push
push
dec
rclb
decb
add
push
push
js
stos
imul
ja
lock
push
jbe
inc
ja
pusha
insl
jmp
jb
jns
xor
arpl
dec
nop
mov
dec
mov
xor
mov
push
lods
jo
sbb
lock
cwtl
arpl
xchg
or
pop
jle
dec
es
pop
cli
or
xor
out
pop
inc
pop
push
fcomps
dec
scas
jp
xor
jns
dec
push
push
icebp
cmp
pop
push
dec
inc
inc
cmp
xor
sub
dec
imul
mov
cmp
and
sbb
orl
and
xor
dec
je
pop
pop
xorl
xor
fdivrl
push
sub
jne
rorb
sub
push
pop
movsb
dec
adc
imul
pop
fs
push
insb
inc
xor
ds
push
imul
dec
push
arpl
decl
mov
imul
xor
jno
push
cmp
dec
push
dec
inc
js
jbe
addl
arpl
das
js
stos
dec
rorb
popa
jno
dec
dec
js
dec
xor
mov
dec
jno
push
dec
imul
push
inc
shll
insl
imul
push
pop
pop
push
shll
push
inc
jbe
push
dec
inc
add
popf
shlb
mov
inc
mov
cmp
dec
or
mov
adc
bound
inc
scas
call
jae
inc
jbe
push
clc
imul
sub
je
inc
bound
inc
mov
pop
repnz
jecxz
arpl
outsb
push
data16
push
mov
outsb
ja
out
cli
cmpsb
outsb
xchg
ss
push
imul
mov
mov
imulb
add
mov
outsb
dec
xor
jl
cmp
xor
xor
xor
fnsave
movsb
je
cld
dec
aaa
insb
add
and
push
push
jb
outsb
mov
jb
push
mov
xchg
mov
movsb
ret
ljmp
fidivs
pusha
adc
pop
dec
push
jns
lods
push
push
aad
loopne
ficoml
dec
or
subb
or
jno
cwtl
outsb
cmc
sbb
push
push
and
pop
jne
dec
dec
inc
jns
js
lds
ss
arpl
fistpl
loopne
outsl
inc
jno
je
outsl
clc
inc
dec
mov
out
fadds
xor
inc
xor
sbb
push
xor
sbb
jbe
bound
pop
jo
dec
int3
inc
outsb
push
push
push
mov
jae
inc
push
fs
mov
enter
outsb
push
jae
push
push
inc
mov
inc
scas
hlt
push
inc
insl
ja
push
dec
je
lret
or
data16
subb
xchg
ss
pop
sub
aaa
aaa
mov
pop
mov
insb
push
repnz
push
jbe
icebp
aaa
lods
xor
pop
pop
dec
call
xor
and
ret
dec
cs
test
add
pusha
hlt
add
push
movsb
inc
adc
inc
clc
pop
out
in
pop
sub
data16
dec
xor
data16
roll
push
push
data16
ljmp
dec
arpl
lret
jne
mov
push
mov
outsb
or
mov
xor
or
ja
jo
bound
fimull
cmpsb
inc
cmpsb
xchg
inc
push
aam
push
jne
cmpb
cmp
jb
ja
jbe
subb
dec
adc
cmp
jno
insb
dec
scas
mov
inc
inc
data16
cwtl
imul
or
incb
jno
mov
xor
cmp
dec
aaa
ja
jo
jbe
dec
test
mov
ds
pop
lock
icebp
scas
and
gs
cmp
push
ja
call
data16
addr16
inc
inc
xor
pop
dec
inc
popa
ss
ret
xor
imul
imul
dec
inc
jae
pushf
jo
adc
pop
jo
fs
xchg
dec
push
pop
dec
jno
inc
cmpsb
mov
rolb
dec
push
insl
push
jo
jb
xchg
rorb
adc
incb
mov
xchg
dec
insb
imul
cmp
dec
mov
xor
push
xor
rorl
dec
jo
jno
shlb
add
add
pop
push
inc
imul
in
js
dec
mov
jae
inc
pop
inc
dec
ficoml
std
push
or
out
inc
cmp
xor
push
rcl
hlt
mov
push
dec
je
push
insb
subb
jl
js
fs
mov
fisubrs
xor
push
inc
cmp
fsubs
adc
push
jo
popa
inc
jb
fs
stos
push
test
gs
add
inc
sbb
clc
push
outsl
ja
push
dec
dec
imul
dec
and
insb
xor
jbe
xor
push
pop
mov
movsb
ds
push
je
jb
mov
loopne
gs
inc
mov
cmp
inc
outsb
imul
push
outsb
inc
outsb
cmp
gs
jo
sub
outsl
xor
push
aad
bound
dec
rolb
imul
dec
push
xor
inc
addr16
and
mov
dec
mov
test
enter
xchg
bound
data16
lret
add
add
outsl
mov
mov
add
dec
je
lock
mov
jno
mov
mov
ret
call
insb
das
adc
mov
imul
mov
fs
rorb
outsb
les
mov
pop
inc
inc
sub
push
xor
inc
popa
ja
dec
xchg
mov
and
mov
jns
nop
dec
cmp
pusha
test
dec
les
mov
jp
or
dec
inc
insb
dec
ss
js
inc
and
shll
aaa
jae,pt
push
cli
mov
add
jle
sbb
arpl
xorb
adc
test
mov
push
add
pop
imul
addr16
in
fbld
jp
push
test
aaa
js
push
stos
jg
add
mov
inc
dec
push
inc
aad
gs
clc
inc
push
dec
bound
and
imul
dec
xor
mov
addr16
dec
stos
ss
push
pop
cs
inc
imul
arpl
cmpsb
add
xor
push
push
add
inc
or
outsb
cwtl
xor
pushf
insb
jbe
orb
pop
mov
inc
gs
xor
or
ja
ja
adc
mov
push
es
insl
loopne
fidivl
jno
call
jo
bound
insl
in
inc
adc
dec
arpl
bound
dec
dec
hlt
xor
je
push
push
sub
insb
dec
aaa
cmp
inc
pop
inc
dec
push
ss
adc
mov
push
mov
inc
js
jns
pop
xor
dec
and
shrb
jns
lods
jecxz
push
bound
outsb
cmp
dec
push
xor
mov
add
insl
inc
gs
add
pusha
das
xchg
imul
js
arpl
xchg
insb
inc
dec
pop
cmp
push
movsb
stos
dec
aam
dec
ja
popa
je
aaa
test
scas
push
ss
push
js
js
outsl
mov
mov
inc
push
sbb
inc
cmp
dec
jb
push
dec
lods
push
je
js
ss
xor
inc
hlt
add
inc
imul
mov
push
inc
sub
in
mov
push
jo
sub
fs
push
sarb
jp
mov
push
push
dec
ja
xchg
jb
push
ss
mov
pop
jp
arpl
push
imul
mov
ljmp
pop
imul
and
inc
imul
cld
jmp
inc
addr16
inc
outsb
insb
ja
inc
xor
push
dec
push
outsb
inc
incl
mov
inc
dec
cmp
push
sbb
and
jb
pop
mov
daa
push
add
sub
jno
push
pop
sbbb
jne
imul
aaa
sahf
cmp
jno
aaa
clc
push
push
mov
lods
jo
je
outsb
insl
mov
mov
dec
add
jb
push
dec
dec
push
dec
push
lcall
pop
xor
je
inc
jbe
jae
arpl
inc
pop
add
mov
mov
loopne
mov
add
push
jbe
inc
call
and
push
cmp
fadds
adc
bound
and
pop
add
fadd
xorb
jbe
mov
cmp
inc
cmp
push
jns
dec
mov
scas
bound
lret
scas
push
inc
push
inc
addr16
or
cmp
or
push
or
inc
dec
pop
cs
inc
pop
lock
cs
je
jne
push
inc
jbe
push
xor
jb
ret
fwait
mov
arpl
push
push
push
dec
shlb
push
popa
jl
ja
push
sub
sbb
push
les
xor
pushf
out
push
ret
sub
inc
gs
dec
dec
gs
jae
cs
mov
scas
push
sbbb
ss
inc
lret
push
aad
aaa
adc
xor
adc
mov
pusha
add
xor
ds
xor
xchg
cmp
jno
cmp
hlt
push
imul
push
inc
subb
inc
dec
pusha
jl
scas
adc
push
bnd
xor
pop
mov
mov
push
xor
add
mov
pop
cmp
je
outsb
stos
in
dec
pop
dec
inc
cmp
dec
cwtl
stos
dec
or
and
fdivr
xchg
push
outsb
xor
xor
or
sub
inc
adc
jle
dec
xor
push
xor
and
fdivr
push
bound
push
dec
dec
dec
fiaddl
outsl
jo
orl
jl
dec
inc
insb
jbe
jbe
xchg
jne
cld
push
jnp
inc
dec
jo
jae
xor
jbe
dec
xor
ret
mov
outsb
dec
mov
inc
dec
gs
push
arpl
in
insl
xor
ss
pop
inc
mov
bound
arpl
push
insl
pop
testb
xor
je
push
push
jns
mov
shll
inc
je
adc
lock
fbld
jne
sub
dec
fs
and
add
pop
cmp
js
xor
gs
mov
ss
test
dec
inc
push
pop
sub
aaa
dec
es
adc
push
inc
sub
mov
mov
insl
mov
push
xor
test
dec
dec
jns
push
fs
jmp
mov
cwtl
xor
popf
jp
xor
cs
dec
inc
inc
push
inc
scas
pop
std
mov
adc
push
dec
sbb
xor
xor
inc
inc
jns
mov
xor
dec
movsb
addr16
stos
out
adc
popa
push
jbe
push
jno
inc
bound
sbb
inc
pop
ja
jbe
insb
push
sbb
fs
fadds
call
dec
push
es
inc
pop
je
arpl
push
xor
dec
cmp
fcoml
push
jae
push
pop
dec
dec
jge
dec
cmc
jae
ss
jb
mov
inc
cld
call
push
test
pop
ja
push
inc
inc
jns
inc
ja
push
dec
jno
xor
mov
int3
push
sub
mov
add
pop
outsl
js
push
inc
js
or
dec
xor
mov
push
aad
mov
jo
cmp
ret
mov
mov
sub
scas
jmp
push
xor
push
push
es
inc
push
pop
push
imul
inc
insb
outsb
push
bound
cs
inc
cmp
dec
sbb
insb
push
push
push
gs
push
and
ljmp
mov
mov
popa
pop
push
imul
xchg
jmp
mov
les
xchg
popa
jno
nop
xchg
and
enter
or
or
mov
push
xchg
jae
test
push
inc
bound
sbb
push
test
mov
push
push
and
insl
popa
mov
jle
jb
mov
pop
popa
ds
or
stos
push
cs
dec
dec
jns
push
mov
test
inc
js
adc
inc
sub
add
mov
cmp
pop
or
xor
outsb
enter
fs
fs
or
adc
adc
add
or
dec
mov
mov
inc
js
inc
dec
mov
jbe
inc
insl
inc
inc
outsl
enter
mov
push
pushf
out
aam
adc
push
push
dec
aaa
ja
outsb
inc
push
inc
adc
mov
inc
data16
outsb
test
adc
sub
call
inc
aaa
jo
jae
in
add
addr16
outsb
call
xor
or
adc
inc
push
push
and
push
inc
inc
inc
inc
addr16
inc
repnz
pop
fsubl
push
je
xor
test
cmpsb
push
outsb
push
mov
push
or
outsb
dec
mov
jbe
or
lock
and
push
aaa
jb
dec
inc
dec
xchg
movsb
sbb
stos
inc
jnp
mov
hlt
dec
dec
push
bound
dec
xor
push
in
ja
js
inc
xor
mov
push
push
outsb
arpl
push
loopne
clc
stos
outsl
mov
ss
xor
or
fcoml
arpl
xor
ss
cmp
aad
add
gs
out
dec
jbe
dec
dec
dec
push
leave
jne
push
in
mov
jg
jbe
dec
jbe
ja
cmp
mov
subb
je
dec
nop
dec
dec
lods
fsubs
dec
js
fs
ss
cmp
push
mov
into
xor
outsl
sub
inc
mov
fiaddl
or
jl
inc
pusha
insb
in
push
inc
dec
push
cli
mov
outsb
jbe
dec
xor
dec
xor
jno
insl
xor
gs
pusha
inc
aaa
dec
stos
inc
push
data16
test
adc
push
push
push
mov
pop
add
sub
outsl
dec
push
inc
add
pop
pop
push
push
jmp
jne
pop
js
dec
jbe
push
xor
je
ja
sub
sbb
insb
xor
ficoms
add
mov
push
imul
inc
ss
add
push
xor
ss
scas
clc
adc
xor
push
imul
inc
pop
xchg
push
stos
add
jbe
fidivrl
jb
or
mov
and
js
pop
imul
or
jne
push
xor
shrb
movsb
pop
push
insl
lods
outsl
xor
dec
jb
js
aam
pop
movsb
dec
imul
dec
je
inc
push
mov
inc
shrl
js
loop
es
stos
fst
sbb
aam
push
sub
adc
dec
sbb
adc
dec
ss
outsb
and
pop
or
pop
bound
fwait
add
add
cmp
js
fsubs
stos
mov
jbe
push
imul
mov
push
fsubl
jae
add
jl
push
cmpsb
dec
mov
je
data16
adc
xchg
call
inc
gs
insb
dec
inc
cwtl
push
jno
xchg
imul
mov
inc
sahf
xor
push
add
outsl
mov
outsl
dec
dec
outsb
and
push
popa
xchg
clc
fwait
repnz
inc
data16
xor
sbb
inc
test
cmp
mov
xchg
sbb
jne
dec
push
push
js
push
aam
test
xor
fsubrs
pusha
cmp
push
ss
add
je
jns
xor
cld
pop
clc
dec
inc
push
pop
jbe
inc
addr16
inc
sti
fistpl
jbe
jb
bound
lock
insb
xor
push
dec
jne
fs
ret
or
mov
ss
inc
xor
pop
and
push
fs
mov
bnd
push
dec
fs
cmpb
push
ss
jns
push
lcall
dec
cmp
push
xor
sub
xor
fs
js
or
cmp
fisttps
push
inc
bound
pop
xor
push
jo
clc
sbb
jne
jb
jbe
xor
imul
in
jbe
insl
mov
cs
bound
imul
popa
lock
push
outsl
loopne
xchg
insb
xor
inc
outsl
pop
loopne
adc
int3
push
cmp
push
inc
insb
inc
xor
aaa
xor
add
data16
es
pop
pop
dec
jb
jbe
xchg
and
fs
inc
cmpb
ficomps
insl
outsl
insb
shlb
push
popa
push
sar
addb
bound
dec
mov
push
dec
sbbl
push
and
int
sub
jle
jno
push
jae
ret
scas
shrb
push
inc
dec
dec
insb
xor
jbe
enter
inc
push
dec
jbe
bound
out
test
pop
mov
jns
pop
mov
inc
dec
cmp
jo
outsb
mov
inc
sbb
push
xor
xchg
das
push
sbb
inc
push
inc
push
imul
sbb
push
loop
jecxz
push
jne
insb
shlb
inc
sbb
push
decl
outsb
push
cmp
jo
dec
jae
adc
aad
dec
push
dec
jno
cmpsb
jae
rorb
out
lret
in
jno
mov
popa
push
bound
pop
sbb
insl
inc
testb
push
imul
mov
or
xchg
insl
ds
js
ja
dec
push
push
dec
jns
mov
cmp
outsb
out
loop
adc
je
dec
dec
pop
cld
ljmp
add
inc
xor
mov
loop
jno
push
mov
add
ret
outsb
or
xor
imul
incb
addr16
jb
jb
outsb
inc
pop
dec
pusha
push
adc
add
adc
bound
xchg
rolb
push
dec
mov
dec
cmp
xor
mov
mov
xor
sub
cwtl
pop
das
sub
push
imul
dec
bnd
xor
dec
dec
cmp
gs
pop
inc
or
xchg
gs
insl
jae
inc
adc
or
push
xor
stos
xor
jp
add
xor
push
inc
arpl
inc
inc
orl
js
ja
push
pop
rolb
js
adc
arpl
add
mov
fisubrl
add
jne
pop
data16
das
js
pop
push
push
outsl
popa
adc
outsl
push
mov
pusha
and
cmp
adc
dec
gs
dec
sub
xchg
push
jno
push
inc
push
xchg
dec
loop
jecxz
push
imulb
insl
cmp
ss
xor
jne
push
xlat
shrb
inc
xor
xor
dec
or
push
push
inc
xorb
xor
imul
inc
mov
loop
inc
push
push
mov
jne
xor
jecxz
scas
enter
jle
inc
push
popa
xor
adc
bound
ficoms
dec
inc
outsl
push
sbb
pop
aaa
push
and
push
push
push
jb
fs
outsl
fdivr
dec
jb
bound
sbb
xchg
push
pop
jno
push
dec
inc
jne
loope
lcall
dec
push
jne
push
ja
xor
ss
inc
xor
jno
mov
loop
ss
arpl
pop
inc
dec
dec
arpl
aam
dec
pop
insb
sub
subb
outsb
dec
call
aaa
jle
and
push
clc
jbe
imul
sub
push
addr16
and
or
adc
es
scas
ss
cli
pop
in
test
dec
dec
xor
push
outsb
push
push
push
pop
and
pusha
jae
dec
jne
mov
xor
cmp
aam
mov
pusha
dec
xchg
fmuls
push
jne
sub
mov
jne
push
aaa
jo
fs
fadds
push
add
inc
push
dec
addr16
gs
imul
cmp
js
push
adc
push
xchg
outsl
hlt
push
pusha
rcrl
cmpsb
push
js
push
insb
lds
rol
gs
pop
adc
or
inc
ja
out
adc
movsb
jp
push
push
sub
stos
fldcw
movsb
push
push
inc
jno
push
jae
dec
jns
enter
cmc
call
into
imul
jae
xor
dec
insb
push
dec
testb
je
push
pop
xorb
inc
pusha
mov
loopne
push
ljmp
inc
cmpsb
push
push
push
jo
gs
inc
test
je
push
push
xor
adc
mov
js
test
aaa
inc
sub
sub
xor
jg
scas
adc
push
arpl
dec
addb
push
aaa
arpl
inc
push
dec
add
mov
inc
dec
fdivs
enter
cwtl
sahf
jo
mov
shlb
and
cld
xchg
mov
mov
xor
out
popa
xor
sub
push
hlt
pusha
clc
add
cmp
ss
dec
dec
ja
mov
movsl
in
imul
mov
mov
jno
inc
dec
arpl
outsl
inc
inc
inc
je
outsb
inc
push
xlat
rorl
push
pop
les
mov
lods
jb
adc
loop
add
dec
jae
ss
sub
mov
push
outsl
lock
pop
dec
addr16
ja
jbe
push
insb
ljmp
loopne
in
push
push
dec
xor
addb
ss
outsb
push
add
shlb
pop
loop
push
inc
dec
and
mov
inc
insb
jo
sub
mov
pop
jbe
adc
mov
dec
and
or
pop
jecxz
adc
push
je
pushf
ja
insb
pop
jne
push
aad
enter
dec
cwtl
pop
inc
jne
aaa
adc
push
or
push
sahf
push
push
stos
outsb
or
pop
bound
dec
push
sub
sub
xor
mov
dec
ja
gs
cli
sub
js
add
push
push
push
xchg
scas
inc
sub
push
xchg
dec
cmpsb
vsqrtss
adc
bound
imul
xor
push
js
inc
shlb
push
scas
jae
es
cmp
add
sub
cld
sbb
ljmp
into
inc
mov
dec
aaa
lcall
popa
sahf
es
subb
mov
data16
aad
or
imul
xor
shrb
inc
sbbl
arpl
inc
and
lea
push
adc
dec
popa
inc
dec
arpl
and
inc
push
outsb
je
or
xor
jo
jb
mov
mov
or
pop
jbe
int3
jns
inc
sub
jo
inc
xor
cmp
xor
cmp
jp
sbb
pop
ja
arpl
jle
inc
js
jbe
push
je
add
mov
push
push
insl
inc
pop
data16
mov
push
push
push
imul
insb
jae
push
xor
dec
xor
insl
js
push
push
imul
dec
imul
dec
xchg
je
fs
dec
data16
inc
push
cmp
mov
ficomps
push
js
imul
dec
ret
jb
pop
insl
fsubrs
inc
sahf
imul
es
push
push
mov
dec
xor
jo
xchg
sbb
xor
jb
ljmp
js
push
js
imul
aaa
addr16
test
jmp
and
or
or
in
in
adc
dec
push
imul
aam
pushf
fs
push
push
aaa
clc
gs
push
stos
stos
stos
inc
loop
xchg
xor
imul
jg
xchg
sbb
imul
inc
add
sub
mov
jae
shlb
dec
hlt
dec
xlat
lock
shrb
pop
dec
inc
jo
cmp
pop
push
imul
jbe
mov
dec
push
cmp
jl
mov
inc
sbb
rolb
loope
inc
shll
mov
subb
mov
or
push
inc
xor
add
hlt
test
aad
inc
ss
xchg
enter
cmp
cmp
inc
dec
xor
mov
push
insb
sbb
les
push
push
dec
jb
jb
test
sbb
pop
ss
into
inc
jb
jne
sub
outsb
ljmp
insl
arpl
dec
adc
fcoms
mov
dec
stos
push
push
test
pusha
stos
andl
movsb
pop
jo
jno
inc
push
outsb
sahf
insb
outsb
mov
ss
sarb
outsl
ja
push
addr16
mov
inc
insb
imul
or
push
push
inc
enter
cmp
pop
mov
pusha
xorb
jbe
xor
clc
mov
pop
pushw
push
mov
push
ja
ss
jno
in
dec
jle
mov
xor
xor
scas
clc
mov
pop
movsb
arpl
pop
xor
push
mov
xor
inc
lcall
dec
push
adc
fildll
xchg
inc
dec
xor
imul
xor
in
inc
ret
jg
fs
inc
jbe
push
ss
dec
es
dec
insb
testb
ljmp
adc
push
outsb
aaa
pop
xor
dec
arpl
adcb
cmp
jno
mov
jp
push
outsl
sub
pop
and
bound
cmp
inc
dec
dec
hlt
insl
mov
imul
jns
addr16
xor
xor
clc
or
inc
pop
dec
jne
inc
push
cmp
outsb
inc
sbb
outsb
scas
js
je
insl
bound
mov
test
sbb
les
or
ja
aaa
jle
push
cld
push
bound
inc
dec
inc
inc
pusha
jne
jns
outsl
imul
push
inc
mov
jno
fs
mov
outsb
inc
xor
xor
testb
or
mov
xor
imul
pop
add
loop
cwtl
inc
imul
or
inc
inc
cmp
add
mov
pushf
addr16
outsb
pop
inc
dec
jno
cmp
dec
arpl
or
scas
fcomps
inc
cmp
jbe
jno
rorb
pusha
fsubrs
sub
ljmp
pop
in
or
sarl
xchg
cli
popa
ja
dec
imul
ficoms
addr16
sbb
ret
pop
les
shlb
test
xor
mov
adc
and
add
or
clc
sahf
dec
dec
xor
add
push
cmp
xor
inc
dec
add
je
xor
pop
push
js
inc
imul
inc
push
inc
mov
bound
dec
push
xor
jecxz
mov
dec
push
dec
inc
data16
xchg
dec
je
pop
lds
sub
loopne
push
insl
dec
stos
jbe
ficomps
cmp
dec
sbb
jb
add
sub
jo
pop
sub
mov
aaa
inc
inc
adc
pop
push
push
inc
pop
xor
imul
bound
fsubr
mov
dec
je
je
imul
push
shrb
mov
fs
dec
loop
add
pop
sub
jb
jns
ss
push
push
mov
push
gs
cmp
cmc
sub
inc
outsl
outsb
pop
cmp
cmpsb
adc
mov
gs
lret
xchg
jno
push
jbe
dec
inc
insb
push
mov
scas
cli
sbb
push
push
je
dec
gs
arpl
dec
mov
adc
push
xorb
in
dec
add
imul
push
add
dec
and
mov
js
xor
push
ss
pop
pop
mov
test
add
push
xor
popa
aaa
push
lods
jo
into
push
jo
inc
ss
mov
jp
jo
push
push
inc
push
dec
dec
jae
xor
inc
and
gs
pop
loop
mov
inc
xor
lods
popa
push
js
mov
xor
nop
xor
rclb
inc
push
push
ja
repnz
sbb
adc
lods
jp
inc
arpl
sbb
arpl
mov
mov
fs
inc
bound
imul
sbb
inc
jbe
push
dec
imul
xchg
mov
fs
lock
dec
jno
and
push
jle
popa
imul
js
orb
inc
push
mov
or
mov
push
xchg
mov
data16
jo
add
fmuls
jo
incb
jae
add
jno
inc
outsb
push
dec
das
dec
bound
popa
dec
mov
imul
movsl
mov
dec
jo
jo
xor
imul
es
stos
push
mov
arpl
inc
push
arpl
outsb
jle
insb
jae
dec
jo
add
pop
les
push
xor
imul
ja
push
js
mov
popa
jb
sbb
addb
bound
lock
std
popa
inc
outsl
dec
dec
push
dec
jae
js
bound
int3
data16
inc
mov
int3
mov
inc
add
xor
cmp
pop
or
insl
inc
dec
dec
dec
ds
imul
ret
pop
xor
notb
bound
outsl
jle
mov
jo
dec
inc
xor
push
xor
xor
dec
ja
mov
insl
inc
insl
lcall
push
cmp
cmp
xchg
divb
jns
jne
js
cmp
xor
push
and
je
cmpsb
lcall
dec
aaa
ja
inc
xor
push
loopw
or
mov
mov
sahf
jbe
gs
mov
lock
cmpsb
and
push
jbe
inc
fsubrl
imul
pop
or
outsb
aaa
dec
jbe
arpl
lods
cli
cmpsb
inc
inc
dec
jne
push
push
ja
push
pop
jo
in
cmpsb
cmp
dec
xor
or
jmp
push
xor
push
jb
je
adc
adcb
mov
arpl
inc
imul
adc
jbe
push
outsb
insb
xor
pop
inc
js
inc
gs
push
imul
insb
jae
push
outsb
jne
inc
jb
popa
out
in
mov
sbb
js
sbb
imul
jg
sbb
xor
jae
popa
addr16
test
mov
mov
movsb
push
dec
bound
and
testl
cmp
outsb
addr16
and
imul
fs
xchg
inc
outsb
pusha
jb
les
mulb
push
outsl
outsb
sbb
or
cltd
jp
aas
adc
movsb
fs
mov
dec
popa
outsb
mov
scas
pusha
and
push
push
imul
aas
fsubr
xchg
ret
xor
jb
ficoms
fs
add
push
jne
pop
inc
cmp
xchg
or
pop
push
push
push
adc
add
mov
outsb
sahf
pusha
jne
xor
push
lea
jae
xchg
push
insl
dec
jns
jne
mov
sub
addr16
arpl
je
xchg
cmpsb
jae
lock
xchg
sub
push
inc
inc
inc
push
dec
subb
adc
je
push
dec
popa
jae
inc
push
mov
loope
pusha
fbstp
js
mov
dec
out
jne
push
fstpt
cld
jbe
pop
inc
imul
arpl
push
push
dec
pusha
les
ret
push
push
jb
ds
mov
daa
pop
inc
popa
loopne
dec
pop
aaa
inc
popa
ds
lods
andb
and
lock
add
dec
push
and
hlt
jne
nop
je
adcb
inc
jge
in
popa
xchg
bound
dec
inc
inc
push
sub
mov
lahf
insb
jb
sti
shl
adc
push
lds
jp
ja
adc
xor
insl
insl
cmp
inc
pop
jae
popa
or
cs
jb
jb
aaa
cwtl
shlb
ret
imul
lods
shlb
lds
popa
bound
cmp
xchg
rcrl
push
insb
adc
dec
inc
dec
inc
adc
roll
jb
jmp
sbb
jl
jecxz
cmpsl
ljmp
mov
adc
xor
push
imul
lea
mov
and
mov
mov
lods
mov
fisttpl
jne
dec
inc
enter
pusha
xchg
enter
inc
in
jmp
pop
sub
imul
push
xor
shrl
pop
push
imul
imul
sub
jecxz
mov
popa
sbb
xchg
call
cmp
insb
ret
sub
mov
jne
data16
rcll
loopne
daa
adc
sbb
inc
or
mov
test
hlt
xor
pop
push
dec
cltd
testb
pusha
outsl
push
sbb
xchg
cmp
add
leave
push
inc
xor
mov
inc
push
inc
sub
rcll
ficoml
xorb
cmc
adc
xlat
mov
int
imul
jo
inc
dec
push
dec
adc
add
ja
or
pop
sub
movsb
add
mov
imul
jo
orb
inc
pop
adc
inc
jp
ret
fnstsw
push
jns
enter
daa
je,pn
mov
xor
cmp
jae
loope
ja
outsl
jo
popf
sub
test
inc
cmp
ret
add
pop
adc
cmp
adc
xchg
cwtl
nop
cmp
call
rorb
popa
adc
ss
rcr
jbe
out
loopne
cmp
adc
mov
push
pushl
sahf
sub
mov
pop
sbb
mov
fsubs
test
dec
imul
loopne
xor
insb
push
sbb
lahf
dec
gs
addr16
push
jns
sbb
pop
outsl
ja
or
sub
rcrb
popa
push
adc
xchg
test
adcb
pop
rcrl
outsb
fldt
rcll
imul
push
jae
xor
lods
xchg
outsl
adc
aam
xor
inc
or
jecxz
push
test
cmovnp
daa
xchg
ds
push
inc
dec
je
jb
addr16
and
push
roll
dec
pop
loopne
sbb
push
outsl
imul
pusha
icebp
lcall
pusha
mov
push
cs
leave
loope,pt
pop
push
ds
dec
arpl
mov
add
imul
fistl
sbb
daa
test
xchg
inc
lock
mov
mov
aad
sbb
pop
fstpt
sub
inc
test
sbb
mulb
sbb
push
sub
adc
sub
pop
push
inc
sarb
out
mov
mov
inc
sahf
popa
shll
sbb
push
jo
adc
pop
pop
pop
fs
inc
adc
arpl
sahf
pusha
adc
je
fwait
sub
mov
and
push
mov
enter
jb
shll
mov
dec
push
test
int3
jo
in
xor
inc
bound
jbe
pop
dec
jns
adc
in
movb
in
cltd
mov
js
dec
pusha
ja
or
sbb
push
mov
cmp
ds
dec
push
insl
push
jae
inc
fisubs
cmp
xlat
pop
dec
push
pop
cmc
dec
dec
sbb
push
lahf
lcall
sub
jae
push
pop
insl
xchg
ljmp
mov
int
jbe
push
outsl
jo
push
lcall
outsl
std
jae
or
sub
outsb
leave
dec
cmp
mov
or
imul
cmpsb
push
stos
add
mov
pusha
outsb
xchg
jp
jbe
sub
mov
pop
clc
mov
xor
fstl
fmuls
xlat
mov
jb
mov
mov
jo
imul
pop
adc
xchg
cmpsl
loop
shr
test
aaa
dec
push
jnp
out
dec
lcall
pop
cmpsb
add
xchg
or
mov
push
mov
push
mov
data16
mov
pop
mov
gs
pop
arpl
jle
inc
lea
inc
adc
xor
push
push
adc
dec
inc
jb
cmpsb
in
ret
push
jbe
cmp
and
movsb
movsb
fcmovne
and
push
inc
push
dec
add
adc
push
in
lret
mov
add
add
std
mov
dec
mov
xor
or
pop
sarb
pop
adc
or
in
mov
push
add
rcrb
cmp
stos
jo
imull
adcb
adc
test
jb
adc
and
pop
aad
scas
pop
movsb
cwtl
sbb
pushf
lcall
scas
mov
insb
push
pop
mov
cs
pushf
mov
out
repnz
mov
add
cmpsb
sub
pusha
sbb
clc
add
push
shl
inc
shrb
test
dec
and
jb
daa
cli
inc
lods
adc
xor
cld
popf
and
add
push
push
add
add
lock
jb
jae
arpl
cmp
imul
ss
dec
xchg
test
mov
add
add
add
or
pop
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
nop
test
inc
add
adc
