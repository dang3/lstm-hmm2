add
or
add
add
push
add
addb
add
mov
add
rolb
add
adc
addb
add
push
add
orb
add
loopne
add
loopne
add
inc
or
addb
add
pusha
cmpsl
cmp
add
add
add
pop
add
add
add
add
add
add
addb
add
call
add
add
add
addb
add
pusha
add
addb
add
mov
add
pusha
cmpsl
cmp
add
add
add
add
add
add
mov
add
mov
add
pusha
cmpsl
cmp
add
add
add
add
add
add
fadds
add
mov
add
add
cmp
add
add
add
add
add
add
add
add
lock
or
xor
add
pusha
cmpsl
cmp
add
add
add
add
add
add
sub
add
and
or
xor
add
pusha
cmpsl
cmp
add
add
add
add
add
add
push
add
add
or
xor
add
pusha
cmpsl
cmp
add
add
add
add
add
add
js
add
mov
add
pusha
cmpsl
cmp
add
add
add
add
add
add
mov
mov
add
add
pusha
cmpsl
cmp
add
add
or
add
orb
sbbb
add
inc
add
sbbb
xorb
add
mov
or
and
add
or
add
xor
add
pop
add
orb
addb
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
xor
add
hlt
mov
add
add
add
cmp
add
add
add
add
add
add
pop
add
add
mov
add
add
add
cmp
add
add
add
add
add
add
addb
add
add
add
cmp
add
add
add
add
add
add
test
add
js
or
rolb
add
pusha
cmpsl
cmp
add
add
add
add
add
add
rolb
add
dec
mov
add
pusha
cmpsl
cmp
add
add
add
add
add
add
clc
add
add
mov
add
pusha
cmpsl
cmp
add
add
add
add
add
add
and
add
call
add
add
cmp
add
add
add
add
add
add
dec
add
add
add
add
cmp
add
add
add
add
add
add
jo
add
mov
or
rolb
add
pusha
cmpsl
cmp
add
add
add
add
add
add
cwtl
add
add
or
rolb
add
pusha
cmpsl
cmp
add
add
add
add
add
add
rolb
add
les
add
add
add
add
add
add
addb
add
add
add
add
add
mov
add
add
add
cmp
add
add
add
add
xor
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
inc
add
add
lds
add
add
pusha
cmpsl
cmp
add
add
add
sbb
jmp
add
add
dec
add
add
jo
add
cwtl
add
add
rolb
add
add
add
adc
add
cmp
add
pusha
push
add
mov
add
mov
add
fadds
add
add
add
sub
add
push
pop
add
js
add
mov
sldt
enter
sti
sldt
lock
add
sbb
add
inc
or
cmp
add
push
sldt
nop
or
addb
add
mov
add
add
cmp
add
add
add
add
add
add
cmp
or
in
add
pusha
cmpsl
cmp
add
add
add
add
add
add
pusha
add
or
in
add
add
cmp
add
add
add
add
add
add
mov
or
js
add
pusha
cmpsl
cmp
add
add
add
add
add
add
mov
add
lods
int
add
add
add
cmp
add
add
add
add
add
add
fadds
or
movsb
add
add
cmp
add
add
add
add
add
add
add
add
or
or
insb
add
add
cmp
add
add
add
add
add
add
sub
add
je
or
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
push
push
add
js
or
enter
pusha
cmpsl
cmp
add
add
add
add
add
add
js
add
inc
fisttpl
add
add
add
cmp
add
add
add
add
add
add
mov
fmull
add
add
add
cmp
add
add
add
add
add
add
enter
or
or
aam
add
pusha
cmpsl
cmp
add
add
add
add
add
add
lock
add
fsub
or
faddl
add
pusha
cmpsl
cmp
add
add
add
add
add
add
sbb
add
mov
add
add
cmp
add
add
add
add
add
add
inc
pop
add
call
add
add
cmp
add
add
add
add
add
add
push
out
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
nop
pop
add
pop
ljmp
pusha
cmpsl
cmp
add
add
add
add
add
add
mov
in
or
mov
add
pusha
cmpsl
cmp
add
add
add
add
add
add
loopne
add
nop
icebp
or
sbb
add
cmp
add
add
add
add
add
add
or
add
test
or
cmp
add
pusha
cmpsl
cmp
add
add
add
add
add
add
xor
add
loopne
or
in
add
add
cmp
add
add
add
add
add
add
pop
or
add
testl
add
cmp
add
add
add
add
add
add
orb
add
stc
or
mov
add
add
cmp
add
add
add
add
add
add
test
add
lods
std
or
mov
add
pusha
cmpsl
cmp
add
add
add
add
add
add
rorb
add
cmp
or
les
add
pusha
cmpsl
cmp
inc
outsl
insl
gs
or
sbbb
add
inc
or
subb
push
or
adcb
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
xor
add
cld
add
adc
add
inc
outsl
insl
add
add
add
add
pop
or
add
or
inc
add
add
cmp
add
add
add
add
add
add
orb
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
test
add
jo
or
sbb
add
pusha
cmpsl
cmp
add
add
add
add
add
add
rorb
add
mov
add
add
add
cmp
add
add
add
pop
add
jg
add
or
cmp
add
push
or
cmp
add
js
add
mov
jg
add
or
cmp
add
lock
cmp
add
sbb
add
pusha
cmpsl
cmp
add
add
add
add
add
add
inc
or
add
or
adc
add
pusha
cmpsl
cmp
add
add
add
add
add
add
push
adc
adc
add
pusha
cmpsl
cmp
add
add
add
add
add
add
nop
or
add
add
add
cmp
add
add
add
add
add
add
mov
adc
adc
add
pusha
cmpsl
cmp
add
add
add
add
add
add
loopne
add
mov
or
adc
add
pusha
cmpsl
cmp
add
add
add
add
add
add
or
add
les
or
adc
add
pusha
cmpsl
cmp
add
add
add
add
add
add
xor
add
fcoms
or
adc
add
pusha
cmpsl
cmp
add
add
add
add
mov
or
addb
add
pusha
cmpsl
cmp
add
add
add
add
add
add
jo
add
int3
mov
add
add
pop
add
inc
add
inc
add
push
add
add
inc
add
dec
add
add
inc
add
inc
add
inc
add
dec
add
add
add
inc
add
dec
add
push
add
push
add
inc
add
inc
add
add
add
add
inc
add
inc
add
dec
add
inc
add
add
inc
add
dec
add
add
add
inc
add
dec
add
add
pop
add
inc
add
inc
add
add
add
add
inc
add
or
push
add
inc
add
dec
add
push
add
dec
add
push
add
add
or
inc
add
add
add
push
add
add
add
add
add
dec
add
dec
add
add
add
dec
add
add
add
add
add
inc
add
inc
add
inc
add
push
add
add
or
push
add
push
add
add
dec
add
inc
add
inc
add
add
dec
add
inc
add
push
add
push
add
push
add
add
add
inc
add
dec
add
inc
add
dec
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
mov
mov
mov
mov
test
test
mov
mov
test
movb
add
add
incl
test
mov
mov
test
mov
movb
add
incl
test
test
incl
incl
incl
incl
add
incl
mov
test
test
test
test
test
add
test
incl
mov
mov
test
add
add
incl
mov
mov
test
add
add
incl
mov
mov
test
add
add
incl
add
add
incl
add
add
test
add
mov
mov
mov
test
test
add
add
incl
incl
incl
incl
test
test
add
incl
add
add
incl
add
add
test
add
mov
test
test
add
test
test
add
test
test
add
test
add
add
incl
add
add
incl
add
add
test
add
mov
test
test
movb
add
inc
mov
test
add
test
test
add
add
add
add
incl
add
add
incl
add
add
test
add
test
add
test
add
mov
test
test
add
add
add
test
add
add
incl
add
add
incl
add
add
add
add
test
add
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
add
add
add
test
incl
add
add
add
test
add
add
mov
mov
incl
test
add
add
add
incl
add
mov
add
add
add
add
test
test
test
test
test
movb
test
test
test
test
test
mov
mov
incl
add
test
test
mov
test
add
test
mov
mov
test
incl
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
movb
test
movb
mov
mov
add
test
test
test
add
mov
mov
inc
mov
test
add
test
add
test
mov
test
add
inc
mov
add
add
add
test
test
test
mov
test
test
mov
add
add
add
inc
mov
add
test
add
add
incl
add
add
incl
add
add
incl
add
add
test
mov
test
add
test
test
test
test
add
incl
add
add
test
incl
mov
test
add
test
add
add
add
test
add
add
incl
mov
test
add
test
test
add
incl
incl
mov
test
add
test
test
add
incl
test
add
test
add
mov
test
add
test
test
add
incl
add
incl
add
add
test
mov
test
add
test
add
add
add
incl
add
mov
test
add
test
test
test
mov
test
add
test
test
test
test
test
test
mov
test
add
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
incl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
add
test
test
test
test
test
test
add
add
jg
aas
sarb
pop
rcrb
xadd
loopne
rolb
add
add
inc
add
inc
add
xadd
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
pavgw
add
repz
ud0
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
add
xor
add
add
add
add
add
lods
lahf
adc
add
add
add
add
in
pop
add
mov
add
add
add
add
add
add
add
add
add
add
popf
adc
fistpl
adc
std
popf
adc
or
adc
sbb
add
sub
add
cmp
add
dec
sahf
adc
add
add
pop
sahf
adc
add
add
insb
sahf
adc
add
add
jl
adc
add
add
lea
add
lahf
sahf
adc
add
add
mov
adc
add
add
sahf
adc
add
add
fistps
add
repz
adc
add
add
push
lahf
adc
add
add
push
lahf
adc
add
add
and
add
xor
add
dec
lahf
adc
add
add
pop
lahf
adc
add
add
jno
adc
add
add
jl
adc
add
add
xchg
lahf
adc
les
add
pushf
adc
push
lcall
fcompl
add
pushf
adc
pusha
lcall
negb
add
popf
adc
jo
adc
or
adc
pop
popf
adc
sbbb
add
popf
adc
mov
add
sub
adc
nop
lcall
cmp
adc
inc
popf
adc
mov
add
add
adc
test
adc
pop
popf
adc
mov
adc
imul
add
adc
rcrb
add
lcall
mov
adc
fwait
popf
adc
fcomps
add
cmpsl
popf
adc
loopne
adc
mov
adc
call
add
add
lcall
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
inc
push
xor
cs
dec
dec
add
push
inc
push
dec
xor
cs
dec
dec
add
inc
inc
push
push
xor
cs
dec
dec
add
push
inc
push
dec
xor
cs
dec
dec
add
push
cs
dec
dec
add
push
push
dec
dec
dec
cs
dec
dec
add
dec
xor
cs
dec
dec
add
inc
push
xor
cs
dec
dec
add
inc
inc
push
push
xor
cs
dec
dec
add
dec
inc
push
dec
xor
cs
dec
dec
add
inc
dec
dec
xor
cs
dec
dec
add
dec
dec
dec
inc
push
cs
dec
dec
add
push
inc
push
dec
xor
cs
dec
dec
add
dec
inc
dec
xor
cs
dec
dec
add
dec
dec
dec
cs
dec
dec
add
dec
inc
inc
push
xor
cs
dec
dec
add
push
inc
push
dec
xor
cs
dec
dec
add
inc
inc
dec
xor
cs
dec
dec
add
xor
xor
inc
dec
dec
add
inc
inc
push
push
xor
cs
dec
dec
add
push
dec
inc
dec
xor
cs
dec
dec
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
push
jb
je
arpl
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
imul
jae
add
inc
gs
gs
outsl
popa
jb
push
jns
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
add
jae
jb
gs
je
imul
gs
jb
inc
jbe
outsb
je
add
add
gs
jo
outsb
inc
outsb
jne
inc
add
add
jb
jne
jb
push
popa
insb
jne
inc
add
add
jb
popa
insb
imul
arpl
add
gs
je
push
imul
inc
add
add
gs
jb
popa
jns
je
dec
dec
outsb
fs
add
dec
insl
popa
addr16
imul
dec
arpl
push
imul
push
dec
outsl
je
data16
arpl
inc
add
add
je
jb
gs
gs
fs
imul
popa
jb
push
gs
imul
push
push
inc
inc
insb
gs
outsb
jne
add
add
jbe
dec
jne
push
jb
je
add
add
jo
jb
popa
je
inc
popa
jo
jne
gs
imul
add
push
gs
arpl
imul
add
popa
arpl
outsl
jb
popa
je
push
inc
add
add
inc
dec
outsl
arpl
add
push
popa
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
lods
lret
js
int3
test
pushf
pusha
call
pop
mov
sub
lea
mov
cmp
je
mov
lea
mov
cmp
je
movb
mov
sub
mov
add
lea
add
pusha
push
push
push
push
call
test
je
mov
call
pop
mov
add
push
push
call
popa
mov
mov
add
mov
cmpl
jne
add
mov
jmp
mov
add
add
cmpl
je
add
mov
add
push
push
push
push
pushl
pushl
mov
mov
mov
add
call
pop
pop
pop
pop
cmp
je
add
jmp
push
push
pushl
call
lea
mov
lea
mov
mov
cmp
je
mov
inc
sub
cmp
ja
mov
cmpb
je
mov
cmp
jne
mov
shr
rol
xchg
jmp
mov
xchg
rol
xchg
sub
add
mov
add
sub
mov
loop
call
lea
mov
cmp
je
mov
sub
je
mov
lea
mov
lea
mov
cmp
je
mov
add
mov
jmp
mov
add
mov
xor
mov
inc
or
je
cmp
ja
add
add
jmp
and
shl
mov
add
or
jne
mov
add
jmp
xor
xchg
mov
cmp
je
lods
or
je
add
add
jmp
xor
shr
lods
or
je
add
add
jmp
lea
mov
lea
mov
cmp
jne
add
push
push
push
push
push
push
call
pop
pop
cmp
jne
add
mov
rep
sub
sub
push
pushl
push
push
call
push
pop
sub
xor
mov
cmp
je
inc
lea
mov
push
push
push
push
push
pushl
pushl
mov
add
push
call
pop
pop
pop
pop
add
loop
mov
cmp
je
popa
popf
mov
ret
popa
popf
jmp
mov
or
je
mov
add
cmpl
jne
cmpl
jne
cmpl
jne
jmp
mov
add
push
push
push
lea
add
add
push
call
pop
pop
pop
cmp
je
mov
add
add
xor
mov
cmp
jne
inc
jmp
mov
add
push
push
push
cmpb
jne
inc
mov
and
mov
movb
push
push
pushl
call
pop
pop
pop
pop
cmp
je
mov
mov
pushl
popl
add
inc
jmp
clc
ret
jmp
push
mov
mov
mov
cld
mov
movsb
call
jae
xor
call
jae
xor
call
jae
mov
call
adc
jae
jne
stos
jmp
call
dec
loop
mov
call
jmp
lods
shr
je
adc
mov
jmp
xchg
dec
shl
lods
mov
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
pop
ret
push
call
ret
mov
adc
push
add
or
inc
cmp
add
or
ret
mov
add
adc
mov
cmpl
adc
or
push
and
rolb
add
call
enter
add
shl
or
dec
mov
jne
pop
sbb
add
mov
xor
fildl
or
sub
in
ljmp
jb
sub
or
add
adc
out
xor
inc
out
clc
dec
jne
pop
mov
bound
jp
mov
ret
pop
addr16
cs
ret
push
movzwl
mov
or
movl
jae
mov
mov
sbb
sarb
cli
sar
add
cmp
sbb
lahf
adc
loope
jno
data16
jb
jmp
inc
sub
sahf
clc
fistl
scas
mov
or
int3
shr
sahf
ret
inc
test
ds
add
in
push
push
jbe
jge
sub
jle
mov
xorb
int3
or
xor
aas
std
add
int3
dec
cld
sbb
pop
ret
add
shl
pop
pop
or
sub
cmp
jbe
mov
xchg
inc
cmp
mov
notl
jle
push
lret
inc
pop
or
call
mov
push
or
inc
cmp
jl
adc
leave
popa
fcomi
xor
inc
xchg
outsb
enter
test
or
jo
xchg
mov
push
pop
mov
sar
sub
les
jne
mov
shr
sbb
loopne
add
jbe
aaa
call
or
cmp
sti
inc
inc
shr
sbb
sbb
jbe
pop
mov
xor
adc
mov
test
push
sbbb
icebp
call
es
sub
push
lea
pop
call
cmp
icebp
xor
push
jne
lret
and
mov
lahf
and
add
push
clc
mov
inc
adc
sub
jl
cmp
or
orb
enter
mov
sbb
leave
cltd
dec
hlt
nop
push
call
movsb
data16
orl
push
in
inc
lock
shl
add
xor
dec
dec
into
cmp
cmp
push
adc
fdivl
push
sbb
mov
xorl
fcompl
rep
adc
retw
jne
inc
add
cli
cld
inc
mov
add
xchg
pop
mov
and
mov
adc
hlt
test
fwait
ret
push
les
mov
jbe
sbb
test
movsl
mov
sub
inc
add
movsl
inc
pushf
mov
add
and
leave
push
adc
jge
push
gs
push
jmp
and
or
cmp
or
movsl
sbb
into
pusha
or
divb
pusha
clc
lcall
push
sbb
push
insb
out
add
mov
fsub
mov
iret
push
sbb
push
repnz
scas
adc
add
test
cmp
sbb
sub
sahf
das
mov
inc
dec
inc
xchg
add
rorl
call
pop
cmp
je
sub
incl
setge
sub
clc
lea
xchg
hlt
shll
add
decl
mov
jmp
mov
inc
xor
xchg
jmp
sub
mov
lock
jne
leave
adc
push
mov
cmp
insl
sbb
fldl
test
fwait
push
aad
cltd
jle
mov
or
jmp
lock
in
rorl
sub
mov
xor
or
call
add
mov
add
sub
jp
dec
push
andl
sub
leave
loop
and
sti
dec
repnz
popa
mov
sub
pop
jge
dec
push
in
sub
pop
dec
pop
add
pop
jo
jmp
add
ret
psubq
ds
add
and
inc
adc
imul
nop
leave
dec
xor
dec
cmpb
cmp
sbb
rcl
inc
test
mov
addb
inc
adc
rolb
jle
cmp
icebp
icebp
iret
rorb
nop
stos
mov
shrb
int3
pop
outsb
sbb
movsb
jne
cmpl
lock
adc
jb
mov
orb
shl
dec
add
les
xchg
sbb
push
cs
sub
jb
xor
mov
mov
negb
rcll
rcrl
dec
jne
cmp
jne
dec
sbb
cmp
add
sub
add
popa
jecxz
iret
push
pushf
dec
sbb
jecxz
lcall
inc
mov
sub
mov
cmp
dec
mul
sbb
inc
outsb
addb
xchg
rolb
add
les
xor
add
dec
add
dec
add
xor
pop
add
inc
add
adc
add
inc
add
shl
and
lret
stos
cmp
imul
test
inc
jbe
ds
test
jb
jl
cmp
sarb
xor
fcoms
loop
or
xor
xchg
push
push
push
jo
imul
pop
push
cmc
scas
cmp
dec
aas
sub
pop
movsb
xchg
scas
sub
scas
cmp
lahf
inc
sub
mov
in
dec
jnp
out
fucomi
or
sub
pop
pop
sub
mov
ss
mov
and
push
scas
sbb
dec
add
insb
xor
fsubl
popa
int3
jb
push
inc
jl
popa
adc
int
xchg
repz
inc
ret
add
in
and
xchg
mov
pop
or
loop
jmp
sbb
mov
jg
add
and
push
mov
rorb
or
xor
imul
in
mov
test
hlt
fnstcw
jno
aad
dec
cmp
jmp
push
cmpsl
xor
in
mov
add
sub
and
aam
pop
movsb
into
pop
call
jg
mov
pop
es
pop
out
dec
shll
shrb
or
inc
mov
fmul
lahf
repz
pop
push
aaa
xchg
hlt
ret
idivl
sub
incl
push
subb
fistl
pop
sub
ret
sbb
ljmp
lods
xor
arpl
push
or
inc
lret
mov
jmp
mov
or
ss
xchg
data16
testb
xor
clc
movsb
jp
push
push
loop
inc
jl
and
sub
rorb
ficompl
mov
clc
mov
jae
jg
popl
rolb
add
add
xchg
mov
mov
dec
pop
cmp
and
les
bound
fwait
mov
iret
ss
sbb
clc
jbe
imul
in
push
xchg
xor
test
inc
pop
mov
mov
cvtps2pi
sbb
das
sbb
push
jg
xchg
pop
js
mov
xor
icebp
cs
mov
jae
insb
adc
nop
jne
mov
push
jo
xor
cmpsb
mov
jns
pop
in
in
dec
int
fildll
icebp
cwtl
in
inc
or
push
jb
dec
out
mov
mov
sbb
lret
xor
lds
mov
push
sbb
ds
sub
and
rolb
mov
clc
adc
rolb
mov
lods
push
add
lods
push
mov
pusha
jg
lods
or
jp
mov
shll
sbb
push
out
dec
pop
jmp
adc
in
sbb
xchg
jns
or
addb
mov
inc
rcll
pushf
fwait
loopne
push
in
mov
mov
arpl
xchg
lcall
xor
stos
mov
jb
aaa
dec
push
ror
jnp
mov
sbb
cmpsb
fiaddl
insl
stos
sbb
adc
clc
imul
pop
fdivrs
jns
dec
mov
stos
fwait
mov
mov
iret
test
daa
insb
cwtl
xchg
jle
dec
adc
xor
pushf
mov
jnp
in
std
shrb
test
push
pop
inc
shll
lahf
jg
lods
aam
ficompl
xor
out
xchg
mov
imul
jae
cmc
push
ja
das
mov
and
push
das
pop
and
jmp
fisttpll
notb
inc
pop
lret
inc
into
repz
jo
int
xchg
addr16
adc
or
pusha
hlt
ja
xor
dec
fmull
loope
push
clc
int
insl
mov
jl
mov
add
xchg
xlat
fdivl
hlt
shrl
mov
shl
movb
insb
sub
inc
pop
mov
mov
or
jmp
inc
cmp
push
cmp
out
stos
je
xchg
add
nop
call
jno
or
jp
jl
xchg
push
xchg
jle
fwait
pop
ds
cmpsl
mov
xchg
adc
sbb
or
hlt
inc
cld
lock
adcl
cmc
and
in
pop
mov
or
fmull
dec
ret
push
icebp
loopne
pop
jne
lods
cmp
xchg
mov
and
or
or
decl
inc
sbb
dec
push
ret
outsb
frstor
inc
pop
pop
mov
and
mov
cmpsb
dec
jbe
or
shrb
popa
xor
sub
scas
add
mov
rol
dec
pusha
xchg
scas
lahf
lret
cld
or
shrb
fdivrs
sub
test
ds
insb
pop
xorb
jne
sbb
aaa
cmpsl
dec
sbb
mov
aas
stc
sub
sub
cltd
rolb
jbe
mov
adcb
rorb
push
add
xchg
mov
adc
int3
push
push
cmp
addr16
pushf
sub
pop
in
insl
mov
inc
sbb
xchg
push
aad
pop
push
mov
mov
sarb
stc
inc
pop
xor
fidivrl
jecxz
ljmp
mov
in
dec
out
cmp
add
push
pop
adc
and
push
push
xor
sbb
pop
int3
shlb
mov
cltd
loopne
mov
mov
add
ja
sub
or
lret
mov
lds
add
ss
or
cltd
loop
or
nop
aaa
filds
insb
inc
push
lret
jle
mov
cmp
sbb
leave
loope
scas
adcb
outsl
pop
pop
or
pop
insl
js
xchg
and
mov
sbb
sbb
stc
cltd
and
insb
push
arpl
push
fnstsw
push
cmc
dec
pop
push
test
fldl
int
push
fimuls
mov
add
push
mov
dec
sub
arpl
sbb
push
hlt
out
dec
sarl
mov
test
mov
int3
push
mov
push
adc
aas
cmp
jge
dec
scas
push
inc
xchg
mov
mov
push
ds
mov
xchg
rclb
push
and
nopl
je
dec
out
push
cmp
negb
xchg
fs
sub
shlb
and
aam
outsl
add
lods
leave
push
test
or
jnp
dec
pop
mov
add
lret
mov
and
fcoms
push
cwtl
decb
mov
jmp
ss
sub
loope
inc
cwtl
scas
pusha
or
cmpsl
cmp
xchg
fldenv
lret
jmp
and
imul
lock
and
inc
sahf
sub
dec
cmp
pop
jp
popa
sub
inc
sti
sub
popf
out
notb
lea
stc
xor
lret
sub
mov
push
sub
push
vpunpcklqdq
adc
icebp
or
xor
out
and
inc
push
daa
mov
int3
loopne
aas
sbb
out
and
sub
dec
stos
inc
jle
lcall
adc
sbb
sbb
lods
lret
xchg
dec
adc
out
ret
inc
sahf
adc
add
inc
cmp
jo
sub
fildll
sbb
aam
xchg
jnp
insl
inc
mov
cmp
icebp
push
fucom
jns
or
add
flds
pushf
mov
push
push
stos
sub
pushf
xchg
loope
in
pop
rorl
repnz
insl
std
iret
testb
inc
cwtl
les
pop
or
imul
dec
mov
mov
lahf
jne
jl
inc
sub
movsb
push
jbe
push
sub
mov
jmp
add
xor
mov
iret
jb
out
ds
adc
daa
movb
push
pop
mov
xlat
mov
jnp
push
scas
pop
jnp
mov
mov
test
dec
bnd
ja
mov
ja
push
incl
add
rcll
inc
pop
shlb
es
aad
lock
aaa
push
testb
push
out
fcoml
addb
jnp
push
push
aad
xchg
add
nop
ljmp
mul
mov
add
add
mov
arpl
out
and
cmp
pop
xor
jae
ret
cmpsb
xor
mov
test
loopne
lods
cmp
sub
jp
lret
pop
test
add
mov
cmc
mov
mov
aad
adc
dec
sbb
jmp
ja
fildl
cmp
mov
pop
mov
sbb
push
ss
xchg
scas
arpl
movsl
dec
fwait
pushf
mov
adc
jae
dec
jns
pop
cmc
cld
push
push
std
in
fmuls
mov
fistl
add
push
xlat
cmp
cmp
mov
mov
adc
movsb
xchg
push
ffree
imul
xlat
sar
jecxz
std
jbe
bound
clc
sbb
lcall
cltd
pushf
pop
sti
arpl
repz
into
les
inc
cmpsl
xor
mov
mov
shrb
cmp
sub
fsubrs
movq
sahf
and
xorb
sbb
sbbb
jb
fisttpl
inc
inc
rcrl
pop
rcll
int
cli
xchg
xchg
cli
shr
add
cs
aad
decb
mov
cwtl
test
push
xchg
fildll
mov
bound
sahf
jp
mov
jbe
pop
add
pop
xlat
popa
in
adc
inc
testb
jmp
jmp
adc
subl
mov
imul
std
xlat
mov
hlt
xlat
aaa
jl
push
sar
mov
inc
adc
mov
inc
sbb
dec
jne
pop
in
inc
mov
lods
dec
shrl
loope
and
insl
mov
ds
iret
dec
in
ss
or
ds
dec
lods
fs
int3
loope
outsb
out
inc
or
or
xchg
out
xor
scas
insb
or
dec
xchg
fistpll
push
faddl
rcrl
pop
and
test
cs
or
fs
push
std
sbb
xchg
xchg
mov
mov
cmp
push
push
xchg
mov
test
ret
rorb
dec
testb
mov
jle
mov
mov
lds
mov
loop
aaa
sub
outsb
shll
adc
mov
jae
xchg
sbb
movsb
fisttpll
cmp
mov
loopne
inc
lock
ja
repz
ret
push
movsl
sbb
mov
rcrb
cmp
jle
aas
mov
popf
jo
lock
jae
loop
add
or
fists
adc
adc
push
test
xchg
or
dec
subb
cmc
mov
subl
cltd
lods
cmpsl
ljmp
data16
add
subl
sbb
dec
iret
pop
xor
add
xchg
imul
sti
dec
jmp
or
or
cmp
add
imul
cmp
fwait
jmp
or
xchg
dec
aam
pop
pushl
sti
sbb
push
addr16
in
mov
adc
cwtl
subb
test
mov
sbb
leave
jecxz
dec
jno
pop
arpl
mov
jl
mov
sbb
movsb
cmp
in
ss
repnz
fstps
xchg
aam
sub
sub
ljmp
pushf
cmp
icebp
shll
gs
adc
pop
icebp
js
add
mov
mov
orb
xchg
addb
out
and
andb
imul
mov
test
cwtl
pop
add
xchg
and
xor
std
cmc
jne
enter
test
sarb
ja
and
inc
push
jl
xchg
hlt
mov
adc
pop
jg
mov
inc
push
push
leave
pop
call
sub
mov
cld
fs
scas
outsl
or
movsl
ljmp
outsl
fldt
push
int
add
hlt
cli
hlt
clc
and
mov
dec
mov
push
cmp
leave
pop
pop
dec
fists
push
mov
loopne
inc
sbb
andl
mov
call
dec
std
sub
mov
pop
movl
int
fsubs
cmp
xlat
dec
inc
push
inc
fs
lock
and
lods
add
cmp
sbb
or
xchg
sub
lds
movsb
js
jnp
mov
rolb
fstps
stos
stos
push
adc
shl
jp
adc
test
cmpsb
adc
dec
sub
mov
sbb
cmp
pop
and
add
inc
daa
push
movsb
ds
das
dec
dec
loopne
popa
sub
push
sti
sbb
jl
ljmp
daa
ljmp
and
jl
scas
and
mov
push
mov
xor
aas
leave
or
out
mov
or
out
ss
loope
sbbl
loope
and
push
jnp
test
inc
daa
and
subb
inc
nop
loopne
mulb
mov
mov
loopne
hlt
add
inc
es
aaa
jbe
roll
das
flds
loopne
xorb
adc
add
inc
gs
cmpsb
ret
xchg
sbb
push
xchg
dec
cltd
arpl
add
jmp
jbe
fisttps
or
jne
hlt
dec
push
jnp
sub
pop
dec
repnz
ficompl
enter
dec
inc
je
cld
int
push
push
enter
xchg
or
clc
out
stos
int3
mov
outsl
lcallw
shrb
out
loop
pop
shlb
push
mov
rcrl
addl
rcrb
or
stos
int
sbb
das
mov
dec
repz
mov
int
adc
repnz
mov
jle
jl
insb
mov
sub
jp
sbbb
mov
cmp
out
shl
mov
mov
repz
cmp
repnz
mov
mov
test
leave
arpl
mov
xchg
jg
insb
inc
or
xor
push
fwait
lods
sahf
mov
or
call
call
in
dec
sbb
scas
in
sub
testb
dec
jl
data16
cwtl
cmp
mov
mov
test
enter
fisubrl
je
add
jmp
int
loop
cmp
xchg
sbb
cmp
pop
filds
push
adc
mov
dec
in
mov
jb
inc
jbe
dec
gs
test
shrb
out
pop
pop
add
cli
outsl
jmp
pop
xor
xor
pop
xchg
loop
fwait
int
sbb
adc
jmp
fucom
icebp
inc
sahf
dec
inc
out
cmp
xacquire
pop
call
scas
pop
adc
jbe
or
cmp
lods
lahf
cmp
inc
sbb
xor
inc
std
rcrl
cmc
and
lock
push
jecxz
outsl
scas
sub
jecxz
dec
es
pop
mov
stos
es
push
mov
adcb
cmp
fmul
or
and
clc
xor
test
dec
jns
pop
leave
cmp
cmp
mov
mov
lret
push
int3
inc
mov
lock
jnp
cmpsl
stos
in
lea
jb
xor
jle
jge
cmp
mov
js
imul
cwtl
cs
int
shll
fcomps
popa
cmp
cmc
fsubr
mov
inc
in
mov
pop
add
hlt
and
push
pop
xchg
stc
adc
jmp
ja
scas
dec
mov
mov
std
or
lcall
xor
lea
xchg
mov
out
lret
sub
dec
scas
nop
fisubs
cmpsl
dec
jnp
pop
and
test
out
sub
adc
mov
xlat
mov
inc
js
fwait
lock
sub
inc
or
sub
icebp
sahf
ret
in
pop
lret
jle
test
das
push
fidivrs
sbbl
add
test
xchg
rcrb
imull
push
in
les
push
flds
divb
fimuls
xchg
lock
leave
ret
es
imul
aas
pop
call
xchg
rclb
cs
xor
in
push
fldz
adc
aad
cltd
mov
imull
lea
push
cltd
push
sbb
sahf
ja
push
mov
movsb
shrb
in
repnz
ds
repz
jp
setge
cmp
ret
es
dec
leave
stos
or
out
leave
mull
mov
loope
jb
orl
popa
add
dec
xchg
fnstsw
push
pop
negl
in
cli
mov
inc
cmpsb
cmp
xchg
add
jno
clc
imul
sbb
repz
insb
dec
mov
jp
jae
orb
ds
mov
xor
jbe
sub
xor
out
mov
jbe
pop
or
mov
pop
fs
adc
push
pop
mov
test
mov
dec
in
xor
adcl
fsubs
cmp
stos
aas
js
inc
pusha
or
jmp
cs
flds
cltd
jecxz
mov
lahf
out
adc
ljmp
xor
push
stos
push
cmp
mov
mov
out
mov
inc
popa
in
xchg
fcomp
or
movb
cmp
adc
cli
xchg
inc
sbb
imul
cmpsl
xor
loope
jmp
daa
mov
add
out
mov
push
test
call
sub
and
cmp
mov
ffree
or
lods
popf
add
push
fs
or
sub
dec
outsb
and
fcoml
xchg
cli
push
add
cwtl
in
push
xchg
mov
or
shl
mov
cli
dec
outsl
test
jge
hlt
lahf
pop
jnp
lds
add
and
mov
and
mov
mov
inc
outsl
rol
outsl
div
push
aaa
in
jae
xor
mov
aam
mov
xchg
jle
jb
test
inc
inc
jg
push
sbb
mov
xor
or
adc
mov
les
popf
cmpsl
aaa
cmpsl
mov
and
mov
inc
xor
pushf
out
cmp
mov
jae
mov
push
jnp
sbb
das
sub
stos
out
imul
sub
add
mov
psubusb
mov
hlt
ficoms
js
xlat
test
aam
ja
xchg
fwait
lods
cld
inc
in
popa
aas
or
movsl
in
cmp
xchg
testb
ljmp
mov
mov
ja
mov
push
inc
lcall
adc
lods
push
divb
jp
inc
cli
xorb
jne
mov
xchg
sub
les
xchg
mov
sbb
fs
aas
sbb
add
vshufi32x4
adc
cmp
cmp
inc
loopne
repnz
xchg
sbb
inc
test
ret
xor
ficomps
scas
fildll
xor
aaa
lret
push
and
call
aam
jl
in
lods
push
imul
aaa
iret
sti
jnp
outsl
fisttpll
fwait
xor
shll
leave
jg
sti
inc
iret
jmp
repnz
mov
bnd
popf
or
mov
mov
sub
mov
push
arpl
mov
scas
inc
xchg
and
test
lock
mov
into
and
lea
dec
add
lods
jmp
mov
sbbl
mov
adc
add
dec
mov
sub
test
lea
xor
loope
or
repnz
adc
xor
jno
in
sti
in
cmp
stos
mov
pop
sbb
orb
mov
mov
or
fstpt
push
fs
xchg
mov
ljmp
in
aaa
pop
fldt
xchg
ret
icebp
ja
je
cmp
out
test
mov
sub
mov
lahf
xchg
rolb
fimull
outsb
push
movb
nop
push
sub
dec
cmp
cld
xchg
push
push
sar
std
sar
les
pop
jbe
and
pop
in
call
add
fbstp
daa
add
pop
mov
test
pop
test
int3
jb
push
mov
daa
or
fisubrs
fdivl
cmp
cltd
cltd
xchg
call
cmp
mov
aam
insl
fldenv
mov
gs
sub
out
out
fwait
cmc
fistpl
stos
cs
push
inc
sub
jecxz
mov
lock
enter
dec
dec
aas
dec
xor
inc
xchg
add
xchg
mov
jbe
fs
inc
pop
into
adc
pop
fsubs
cmpb
xchg
jae
cli
in
pushf
imul
sub
std
outsb
push
add
icebp
jne
pop
clc
mov
cld
xchg
add
xlat
xchg
out
sbb
ljmp
sbb
adc
subl
in
mov
rcrl
jbe
call
xchg
lret
icebp
notb
cmp
cmp
add
push
out
nop
lods
mov
cmp
sbb
clc
cmc
int
cltd
mov
fadd
or
lea
neg
xor
xor
adc
xor
andb
mov
add
mov
or
or
or
mov
mov
or
xchg
insl
test
cltd
xchg
inc
out
fimuls
xchg
daa
rcr
divb
jno
pop
inc
leave
clc
mov
in
cmp
pop
pop
lcall
imul
inc
lret
pop
jmp
icebp
mov
mov
mov
inc
ret
pusha
out
push
jg
pop
in
jge
insl
sub
cmp
lcall
xchg
mov
lahf
test
mov
popw
inc
mov
dec
clc
xchg
mov
or
and
enter
sub
cmp
mov
fisubrs
dec
aad
mov
add
lods
into
cmp
mov
cmpsb
mov
and
inc
jmp
push
xchg
mov
dec
pop
sarb
cmp
adc
je
sbb
pop
int
lret
pop
lea
push
or
push
mov
add
xchg
xchg
mov
mov
push
pop
aad
push
adc
cmp
xor
push
dec
scas
dec
adc
sbb
pop
mov
mov
rcrb
mov
jae
lock
pop
add
sub
ret
adc
js
mov
call
inc
jnp
pop
pop
dec
push
fsubl
aas
mov
xor
adc
lods
and
jbe
jns
pop
int
cmp
jae
out
ss
and
fisubrl
outsb
add
jns
sti
shll
repnz
inc
imul
jl
pop
in
cs
es
inc
and
push
inc
dec
pop
add
xor
daa
cld
pop
lret
mov
or
mov
into
test
xchg
pop
incl
xor
adc
es
xor
int3
cmc
xor
int3
pop
lret
loope
jno
mov
mov
fidivl
push
adc
loop
pop
push
movsl
adc
sub
cltd
or
test
sbb
jb
pop
setne
sar
sub
popaw
xor
mov
fwait
rcl
jns
pusha
mov
pop
cwtl
push
jg
lcall
cmp
les
cmc
ljmp
and
add
lods
loopne
pop
mov
mov
push
mov
mov
adc
jbe
std
dec
mov
jecxz
ret
shlb
inc
orl
xchg
jmp
cli
mov
mov
cwtl
insl
pop
das
adc
lcall
inc
cmpsl
push
pop
lds
and
push
cmpsb
stos
cmp
movl
mov
ret
push
bound
sbb
int3
das
xorl
stc
inc
mov
xlat
push
xor
lock
out
inc
adc
push
cmp
hlt
push
sbb
xor
xchg
mov
mov
rclb
mov
jnp
mov
xlat
fs
push
push
sbb
shlb
cmp
inc
les
sbb
cmpsl
mov
out
aaa
fwait
daa
jg
inc
sbb
sbb
lahf
subb
pop
cmp
xor
ret
icebp
out
sub
mov
jb
pusha
insl
orb
popf
stos
pop
movzbl
and
int3
or
rcll
data16
cli
faddl
dec
cmp
movb
mov
inc
into
enter
mov
sub
mov
and
ss
pop
hlt
push
scas
outsl
and
mov
add
mov
out
shl
inc
sub
mov
addr16
xor
dec
cmp
adc
push
outsb
adc
aad
mov
push
or
pusha
sub
loope
jge
cltd
push
push
ror
pop
cmp
sub
cmp
mov
push
int
sbb
in
lods
adc
int3
decl
sbb
bound
movsl
aaa
or
test
cmp
mov
aad
mov
gs
leave
shll
push
push
nopl
jmp
mov
mov
jmp
mov
adc
adc
pop
out
inc
cltd
jb
pop
das
scas
push
xlat
movsl
les
std
std
insl
fwait
jo
movsb
outsb
push
and
pop
je
inc
stos
lcall
and
popa
mov
cmc
and
inc
sbb
mov
popa
pusha
stc
jle
fdivrl
push
lds
rcl
pop
ret
mov
loope
xchg
ja
scas
loopne
jnp
sarb
out
lea
mov
xor
dec
sbb
jge
inc
jne
xchg
fcmove
jmp
fwait
scas
iret
sarl
scas
push
adc
das
repnz
les
add
xchg
xlat
movsb
into
xor
xorl
pusha
rcll
lret
jge
sub
enter
dec
arpl
xor
fistl
mov
add
xchg
cs
adc
outsl
cmp
movsl
mov
out
inc
pop
enter
pop
stos
divl
pop
fldl
jl
stos
and
sarb
or
sbb
insl
je
cmpsl
rol
or
cmc
nop
outsb
js
ret
fdiv
mov
rcll
cmc
pop
mov
dec
pop
roll
jb
int3
mov
push
notb
dec
fisubl
cmp
cmp
xor
mov
cmpsl
fwait
sub
es
fisttpl
movsl
jae
out
in
add
pop
cmp
add
inc
je
ja
movzwl
xchg
or
jns
stos
test
cmpsw
or
shr
ret
cmp
lcall
data16
push
in
enter
cmp
adc
sbb
sub
and
sti
push
pusha
or
into
cs
mov
sbb
fwait
mov
mov
pop
nop
sub
mov
jns
sub
insl
dec
xor
ret
scas
xor
jmp
lahf
outsl
shll
imul
notb
lods
shlb
out
daa
jge
add
mov
outsl
stos
lods
lcall
and
out
lahf
aas
dec
mov
sbb
into
xchg
jmp
inc
nop
jnp
pop
loop
movsl
pusha
inc
sub
sbb
push
in
mov
jmp
mov
insb
pusha
jnp
mov
or
sti
and
xlat
aaa
cmp
test
pop
imul
and
inc
aad
test
les
sub
stc
and
cmp
adc
aad
stc
push
cli
jp
jbe
cmp
and
imul
jo
std
mov
leave
out
xchg
jb
les
scas
sbb
xchg
jmp
fcmovnb
jp
add
lcall
jnp
fdivrl
test
mov
daa
lret
pop
addr16
mov
xlat
ret
in
ficoml
mov
icebp
push
rol
and
jle
cmc
add
pop
dec
mov
cmp
cmp
in
pop
sti
sahf
int
clc
sbb
jo
push
jnp
out
jns
mov
jl
cltd
je
cmpsb
xor
lea
cmp
arpl
call
adc
outsl
jecxz
mov
fmuls
rcl
xlat
outsb
dec
cmp
adc
ljmp
stos
inc
aam
daa
hlt
fstl
cmpb
and
pop
pop
iret
pop
and
mov
lret
lods
outsb
int3
jge
and
xchg
fists
in
push
sub
outsb
movsl
std
push
clc
fstpt
cwtl
mov
ret
mov
in
xor
clc
sub
scas
out
cmp
mov
inc
insl
jns
lret
xchg
mov
filds
icebp
cs
mov
inc
mov
dec
lock
push
scas
fwait
cmp
push
jmp
add
inc
cmc
call
test
out
fnstsw
addr16
jnp
sbb
push
and
stos
shld
inc
sbbl
pop
mov
in
or
pop
or
dec
orl
in
cmpsl
sub
int3
mov
cmp
sub
out
sbb
outsl
inc
cs
cmp
sub
add
stos
push
das
lcall
repz
sub
add
sbb
mov
adc
add
or
adc
cmp
out
sub
icebp
sbb
imul
cmp
cmpsb
ss
dec
loope
gs
cmpsl
incb
leave
or
or
jae
lds
sbb
int3
out
sbb
movsb
movsl
rclb
jecxz
xchg
add
sbb
flds
js
sbb
push
into
jmp
es
lods
cmpsl
mov
dec
sbb
ficoml
dec
xchg
and
xor
leave
repnz
outsl
dec
es
jge
push
sbb
adc
inc
insb
arpl
cmpl
and
decb
mov
inc
pop
or
jmp
mov
stc
and
and
rcrb
fdivrs
aaa
mov
cld
clc
or
mov
minps
pop
push
adc
mov
call
push
cmpl
sti
jg
inc
mov
mov
aam
imulb
imul
adcl
mov
push
stc
adc
and
jo
sbb
sub
sub
roll
testb
movsb
xchg
pop
sahf
cltd
pop
pop
sub
adc
mov
push
push
push
push
out
mov
cmp
loop
aam
addl
loope
int
push
ja
andb
adc
mov
ror
and
cmpb
mov
push
or
stc
mov
pusha
ljmp
dec
push
jb
outsb
in
pop
pop
mov
icebp
ficoms
jo
mov
mov
add
in
out
gs
sbb
sti
bound
outsl
jne
jno
test
xchg
mov
sti
scas
pop
push
sarb
fcoml
push
popa
mov
push
in
incb
sbb
jp
add
cmpl
test
fwait
jl
popa
aaa
add
inc
rol
jl
mov
sti
mov
xchg
sarl
enter
push
fcompl
gs
push
xor
or
push
mov
loope
xchg
daa
mov
lret
dec
test
xor
jo
jns
repz
iret
push
shll
cmp
inc
cmp
cmc
xor
insb
mov
adc
sub
sub
test
jl
xor
shlb
loop
mov
xor
or
out
lods
ja
or
mov
repz
subl
in
sub
jno
cli
fldenv
dec
clc
mov
fildl
lcall
scas
loopne
and
sbb
xchg
testl
in
leave
xor
ja
out
ret
outsl
js
or
cs
xchg
xlat
sbb
dec
dec
out
dec
mov
cmp
sbb
jne
jae
mov
test
cmpb
popf
pop
into
sub
sub
nop
sub
dec
add
cmp
mov
das
insl
xchg
fbld
xor
sbb
xor
clc
cwtl
pop
cmc
dec
xor
pop
daa
ret
fwait
clc
mov
out
test
pop
mov
cmp
shll
push
pop
repz
pop
jno
xchg
jo
nop
jle
in
jbe
mov
jge
test
add
jl
hlt
stos
push
mov
pop
pop
lcall
add
std
aas
aad
and
lret
mov
test
and
int3
xchg
or
mov
es
jae
dec
push
lods
sbb
dec
aad
fisubrl
or
imul
inc
mov
and
shl
shll
mov
mov
or
aam
pop
aaa
pushf
mov
push
in
mov
push
push
insl
jmp
imul
popl
pop
or
add
loop
xchg
lea
movsl
pop
or
pop
in
xchg
aam
jl
dec
jns
icebp
std
insb
mov
xor
xlat
sub
lea
test
lret
test
in
hlt
data16
ljmp
adc
gs
sub
cld
pop
dec
dec
inc
mov
pop
sub
mov
addb
push
or
xchg
aad
pop
jb
mov
xchg
mov
dec
xchg
repz
mov
lods
cmp
or
push
movsb
push
sbb
leave
arpl
int3
xor
call
sub
nop
pop
push
popf
jecxz
lahf
xor
icebp
and
xor
movsl
sub
data16
mov
xchg
inc
inc
in
push
xor
in
cmp
mov
push
add
ja
adcl
mov
fs
dec
iret
sub
out
add
push
mov
xor
smsw
sbb
stos
push
mov
and
inc
ja
cmp
mov
ficoml
push
dec
nop
daa
and
faddl
jne
and
mov
movsb
aaa
rcr
mov
lods
jle
push
bound
mov
push
push
cmp
jg
jno
ljmp
cmp
packssdw
push
idivl
sbb
xchg
mov
mov
pop
and
mov
adc
aam
and
aas
sub
stos
sbb
ficoml
lods
mov
jge,pt
mov
push
jno
das
imul
sub
lock
cmp
test
push
jecxz
sbb
xor
test
xor
jle
mov
js
ja
sbb
jle
fcomps
jle
rorl
pop
cs
inc
mov
mov
scas
jl
movsl
push
xchg
out
sbb
sub
jbe
add
lods
mov
aad
enter
xchg
pop
in
std
mov
mov
mov
sub
xor
mov
add
inc
out
mov
fnstenv
mov
mov
add
sahf
ror
cwtl
addl
push
cli
or
inc
pusha
js
or
xlat
daa
or
or
inc
hlt
xchg
arpl
jne
cmp
mov
sti
pop
xchg
ja
pusha
fdivs
in
inc
out
cmp
xlat
push
xor
or
inc
cwtl
shlb
gs
jmp
mov
das
ret
fwait
mov
mov
mov
data16
shl
outsl
lock
int
test
pop
adc
xchg
dec
cmpl
mov
jmp
lea
sti
pop
int3
rclb
lds
decl
sub
mov
movsl
cltd
cmp
es
rclb
rcrl
or
rcll
ljmp
and
cmp
mov
dec
stos
mov
cmp
pop
js
add
xor
sub
lret
xor
cmp
mov
stos
shr
and
pop
sti
and
or
and
leave
ss
pop
jg
int3
dec
mov
dec
in
xor
push
push
mov
fdivrs
mov
stos
pusha
mov
cwtl
pop
mov
test
lea
cwtl
in
punpcklbw
and
mov
lret
lods
dec
movsb
mov
jecxz
jmp
in
test
cli
arpl
sbb
das
jo
xorb
aas
lcall
adc
jbe
test
test
lahf
adc
imul
mov
lahf
cmp
fisubl
or
xor
lret
xor
movb
leave
inc
add
das
jp
mov
xchg
js
jns
xchg
sti
leave
mov
shrl
mov
or
repz
xchg
jle
dec
mov
push
filds
bound
sbbb
lods
inc
jnp
jae
pop
lods
mov
cli
fnstenv
test
adc
and
in
stos
lods
scas
push
add
stc
jbe
stos
clc
jno
outsb
aaa
cli
mov
inc
mov
mov
enter
adc
mov
cmc
sub
ja
in
xor
cwtl
jl
add
bound
aaa
in
aaa
xchg
or
pop
jb
jno
and
sub
imul
mov
pop
jae
es
adc
ds
lods
cmp
popa
mov
fdivp
cmp
sub
cltd
insb
xchg
push
xor
pop
dec
setno
pop
push
fcoml
jns
mov
dec
or
ss
jl
pop
test
aad
push
out
sub
icebp
scas
ja
sbb
insb
push
pmulhw
out
rcrb
int3
push
mov
jge
rcrb
pop
ror
cmp
xchg
fwait
mov
xchg
lds
push
aas
push
jb
dec
mov
test
add
pusha
movsb
mov
pop
mov
cmp
test
lds
xor
pushf
adc
enter
scas
mov
inc
mov
mov
stos
stc
and
push
jl
xchg
test
push
jns
adc
mov
hlt
add
jge
cmp
test
mov
lock
hlt
jns
jns
adc
and
cmp
jne
popa
mov
sub
sub
inc
or
out
inc
cmc
pop
sub
adc
cltd
adcl
cmp
jmp
bnd
dec
mov
into
jmp
mov
loop
and
sbb
rcr
rclb
cmpsb
pusha
add
ds
xchg
ret
add
movl
pop
dec
jb
xchg
aas
ss
sbb
loopne
dec
inc
out
jns
pop
mov
aas
pop
inc
adc
loope
testl
js
repz
ret
mov
andb
add
loope
sub
push
adc
punpckhwd
sbb
mov
mov
mov
push
pusha
adc
adc
rcl
aam
shl
mov
cmp
and
sti
xor
outsb
xlat
imul
iret
fadds
outsb
cmpsl
out
in
ss
enter
daa
ret
shl
push
cmp
imul
arpl
mov
test
loope
pop
jb
int
adc
test
lock
imull
imul
sub
ret
mov
decl
lods
add
out
mov
or
dec
sub
sbb
ljmp
jno
sbb
or
insl
andb
test
pop
and
inc
mov
test
test
push
add
pop
cltd
arpl
ja
dec
cmp
fsubrl
test
pop
icebp
pop
loopne
aas
mov
daa
stc
mov
mov
push
mov
sbb
xchg
shll
ja
imul
inc
jbe
or
lret
lret
das
icebp
es
clc
jmp
xor
das
nop
add
ret
js
imul
pusha
or
pop
out
insl
ficoml
push
ret
popa
dec
dec
push
mov
iret
fstps
imul
cs
mov
out
shrb
xchg
add
sbb
push
int3
mov
fdivrl
or
pop
add
fwait
lods
sahf
adc
cmp
call
jnp
push
and
mov
lods
cs
cltd
not
add
pop
jo
outsl
js
xor
int
scas
std
add
mov
shll
int3
ljmp
lret
out
ds
cmp
pop
fldenv
fnstsw
fwait
jno
xor
aad
icebp
cltd
xor
mov
pushf
daa
pusha
les
movsl
stc
push
outsb
dec
mov
jb
add
loope
fiaddl
test
push
leave
test
pusha
fwait
lret
imul
lcall
xor
lcall
lahf
or
insb
outsl
inc
or
mov
loopne
mov
frstor
cltd
mov
repz
pusha
pop
cmc
dec
insl
clc
lods
loopne
mov
les
and
cmc
into
fisttpl
add
and
out
enter
divb
mov
cmc
stos
scas
and
sub
fcoml
xchg
insb
inc
mov
adc
pop
sbb
jp
out
in
loopne
pop
jle
push
and
xor
insb
nop
xchg
std
mov
mov
js
mov
stc
push
xchg
rcll
outsb
cmp
xor
int
scas
cli
icebp
mov
jge
cmpsl
cmp
sbb
pop
cli
lods
cmp
repnz
stos
sbbl
sbbb
pop
leave
test
sarl
jno
icebp
les
dec
and
sub
dec
out
mov
popa
cmc
or
cmc
xchg
popf
movsl
jno
lret
add
cmpsl
or
sbb
adc
mov
mov
jmp
stos
fidivl
mov
movsb
nop
inc
mov
jl
xchg
scas
in
sbbb
push
adc
xchg
sbb
test
popf
adc
mov
cmc
lods
xchg
push
jae
pop
insl
push
and
lahf
in
popa
pop
push
sub
push
ficomps
stos
test
xchg
or
xor
add
mov
push
mov
lret
sbb
add
push
dec
sbb
xchg
jae
xor
sub
lods
sbbl
adc
data16
arpl
add
shrl
call
xchg
xchg
adc
sub
cs
sub
sbb
xor
out
loop
xchg
pushl
repz
or
stos
push
gs
cli
in
xchg
ljmp
mov
pop
dec
xchg
sti
mov
fwait
pop
xchg
insl
fwait
xlat
adc
imul
jno
mov
lret
pop
sub
fisubrs
out
aam
cmp
mov
jno
and
sbbb
stc
xor
iret
mov
adc
xor
test
add
sub
push
push
insb
es
movl
dec
lods
xor
jge
stos
jp
cld
movsb
movsb
dec
dec
stc
lcall
pop
fisubl
jns
gs
pop
push
ljmp
push
adc
inc
outsb
lock
movsl
test
push
sub
add
adc
cs
push
jp
pop
sub
popf
repnz
or
push
push
popa
repz
inc
mov
icebp
or
push
or
ret
or
adc
imul
cwtl
pop
jg
loope
pop
mov
testl
hlt
xor
test
dec
sbb
sub
jo
or
push
add
adc
push
leave
push
dec
xor
sub
arpl
pop
ficompl
adc
mov
in
pop
cwtl
ds
push
roll
mov
lcall
jns
mov
add
stc
mov
fucomip
jg
cmpl
ficomps
pop
into
jge
cmpsb
pushf
cmp
dec
call
pushf
negb
outsb
aas
inc
loope
ja
or
shll
leave
nop
cmpsl
es
xchg
lock
sbb
jbe
mov
cmp
mov
lret
sbb
mov
aas
lret
daa
in
jp
out
xchg
sbb
and
rorb
jge
sub
fidivs
inc
out
push
in
mov
cmp
mov
ss
mov
clc
and
pop
outsb
into
clc
push
mov
jl
mov
xor
ficoms
mov
fwait
xchg
aas
lock
or
and
fstl
xor
loopne
dec
xor
xor
imul
popf
pusha
call
xchg
sub
aas
sub
jge
add
rorb
lea
adc
out
push
xorb
movsl
mov
sub
xor
fdivp
ja
pop
mov
loope
loope
jns
sub
dec
loop
xchg
mov
test
sub
mov
push
jg
aas
fdivr
cmp
es
mov
xor
leave
sub
dec
lods
dec
cli
jle
dec
inc
inc
jp
mov
repz
fcomps
mov
sti
mov
mov
cli
mov
imul
cmp
arpl
test
lcall
or
sbb
imul
data16
popa
jno
idivl
or
jp
rclb
repz
or
rorb
cmp
or
insl
fs
enter
and
div
jnp
cmpsl
mov
jnp
push
test
jo
push
imul
sbb
add
push
mov
fwait
cltd
xor
das
out
stc
add
sub
mov
inc
pop
push
scas
mov
xor
sbb
jb
adc
fnstsw
and
leave
div
iret
js
fisubs
cmp
lods
mov
jp
xchg
xchg
int3
lret
rcrb
xlat
push
xorb
arpl
mov
and
pop
test
sbb
sbb
rclb
cwtl
push
adc
fisubs
notl
lea
sub
xor
sbb
cmp
flds
xchg
lea
cmp
popf
arpl
sub
test
cmp
and
or
cwtl
orb
mov
mov
pop
fsubrs
nop
xchg
xchg
ja
sub
aaa
addl
pop
int3
fistps
cmp
cs
test
xchg
add
ret
test
jb
lahf
xor
or
push
or
movsl
xor
sbb
add
pop
mov
and
les
cs
or
jecxz
cmpsb
fwait
ds
mov
sbb
fstl
bound
mov
mov
mov
mov
call
mov
mov
ss
inc
sub
pop
mov
add
pop
imul
mov
aaa
lcall
push
xlat
xchg
mov
or
cltd
fists
pop
and
adcb
into
and
outsb
ljmp
dec
repnz
inc
pop
fwait
sbb
mov
insb
inc
fdivrs
xchg
and
ljmp
xor
mov
or
inc
daa
push
lahf
data16
sahf
test
cmc
scas
jno
lds
lods
out
aas
mov
pop
lcall
bound
or
mov
rorb
xchg
dec
xchg
xchg
pop
fdivr
popf
mov
repnz
mov
mov
mov
adc
mov
or
mov
subl
fnstsw
rorb
mov
dec
int
out
das
sub
je
mov
lods
lock
xor
inc
xchg
jns
pop
cmpsl
sub
in
mov
jo
mov
outsb
sub
pop
jae
pinsrw
adc
and
pop
mov
mov
ds
cmpsl
mov
cmp
fdivrs
dec
xor
shll
or
jmp
lock
adc
dec
int
inc
enter
incb
stc
cli
push
xchg
dec
fs
sub
pop
and
out
adc
mov
sti
fstpt
enter
push
loopne,pt
mov
pushf
adc
adc
pop
mov
jo
fwait
xchg
fidivs
xor
mov
ja
dec
negb
xor
push
pop
jl
cli
mov
test
repz
mov
pop
outsl
dec
sub
subps
mov
sub
cmp
xor
mov
imul
push
jl
cmp
loope
push
lock
xchg
decb
mov
add
dec
cmp
mov
int3
add
test
adc
ret
or
nop
movl
sub
nop
scas
jae
or
mov
and
xor
add
sbb
movsl
mov
cmpl
hlt
cs
cmp
in
jne
decl
jbe
pop
lock
mov
rcrl
cmp
adc
lahf
fmuls
pop
out
or
call
cmp
dec
orb
xchg
clc
adc
mov
cmp
pop
das
mov
cwtl
lods
cmp
cmpb
sbb
sti
outsw
mov
mov
and
adc
lret
lahf
popf
cwtl
dec
push
daa
sub
ljmp
mov
ljmp
aas
imul
inc
jne,pt
lock
inc
xor
adc
mov
cmp
or
int
lret
and
imul
inc
lahf
lret
mov
jbe
aas
jbe
gs
push
mov
sbb
add
jne
ds
fdivrl
inc
mov
mov
xor
pop
adc
cmpsb
inc
fildll
or
sahf
mov
dec
or
pop
mov
dec
popf
xchg
movsb
xchg
mov
in
std
insb
cs
lods
jae
aad
add
sbb
and
dec
xchg
lods
add
rclb
lcall
les
je
rcll
scas
imul
pop
fwait
pop
cmp
push
jg
mov
adc
dec
inc
or
jle
xchg
aas
pop
xchg
jmp
jg
mov
repnz
add
es
add
out
rorl
adc
inc
xchg
aas
mov
xor
fdivr
cmp
or
dec
or
aam
imul
les
mov
mov
and
dec
pop
cmpsl
add
and
xor
repnz
add
cmpsl
fiaddl
inc
push
ja
aam
push
xchg
outsb
out
dec
loop
and
mov
sbb
adc
pop
xchg
pop
push
test
inc
jge
pusha
inc
int
pop
xorl
or
rolb
js
or
fistl
mov
sbb
out
hlt
out
fsubrl
inc
testl
sti
bound
stc
xchg
cmp
jno
bound
jnp
pop
lds
sbb
jecxz
dec
lahf
xchg
out
test
iret
mov
in
lods
sbb
cltd
lcall
mov
loopne
dec
mov
add
pop
dec
leave
test
mov
int
sub
cmp
inc
cmpsl
push
mov
sub
push
in
jge
les
cmp
xchg
fildll
pop
fwait
cmc
jno
or
repnz
push
jnp
addl
mov
sub
nop
jns
cmp
lods
sub
inc
dec
jae
mov
into
cmp
lret
inc
mov
xchg
lahf
repnz
shlb
or
push
outsb
pushf
negb
pusha
imul
jo
popa
xor
pop
xchg
mov
cltd
movsl
outsb
nop
jne
xor
xor
inc
sub
push
data16
jnp
lods
and
in
dec
add
cmp
daa
mov
sbb
mov
hlt
xchg
aas
mov
int3
fdivl
pushf
cltd
mov
xchg
add
add
inc
push
mov
pusha
test
std
mov
sub
in
fdivrs
dec
ss
mov
add
sbb
cmp
outsl
pop
xchg
inc
sbb
in
and
sub
test
dec
cmc
mov
outsb
and
push
dec
cwtl
add
repnz
push
cmpsl
nop
xchg
or
ret
adc
movsl
inc
xadd
jmp
leave
push
jmp
lea
mov
xchg
aas
jae
jp
fildll
subb
mov
movb
mov
ja
repz
inc
add
cmp
movsl
push
push
xchg
mov
aad
loop
jp
call
jge
push
xchg
movsb
popf
jecxz
ss
mov
pop
mov
lahf
jb
faddl
lcall
jle
and
jne
lods
mov
sub
testb
mov
mov
or
sub
push
and
ret
and
sti
lods
pusha
imul
int3
jo
xor
das
lcall
and
out
mov
adc
stos
push
xor
inc
inc
lret
jbe
push
or
sub
mov
push
add
mov
sub
fwait
arpl
out
ficomps
xchg
push
ds
mov
loope
mov
or
dec
dec
mov
out
aad
push
stc
lcall
xchg
or
mov
cmpsb
fistps
adcl
add
outsb
adc
mov
gs
sub
icebp
out
je
xor
cmp
fisubl
push
hlt
leave
lret
jns
inc
fld
lret
lock
mov
sbb
xchg
lods
fsubrl
sub
jbe
out
xlat
fs
addr16
out
push
sub
jns
push
sub
scas
dec
std
adc
mov
popa
xchg
sub
movsl
data16
shlb
adc
jle
adc
or
mov
stos
sub
push
loop
fdivrl
in
test
mov
bound
stc
jns
mov
push
stos
mov
shlb
adc
xor
push
push
xchg
push
mov
test
inc
cmp
xchg
pusha
outsl
inc
mov
pop
mov
push
inc
aam
test
iret
push
adc
sti
ror
in
add
push
inc
aas
icebp
dec
sbb
cmp
int3
sub
scas
test
flds
mov
add
sub
cmp
leave
push
pop
imul
or
lea
jbe
pop
js
fwait
cmp
lock
xchg
in
scas
sbb
mov
pushf
cld
pop
outsl
xchg
loope
std
inc
mov
outsl
rorl
sti
movsb
sti
into
push
test
arpl
mov
loopne
aad
push
fstl
test
loope
repnz
sub
pushf
mov
imul
mov
fmull
fucomip
or
int
jnp
jns
cli
in
jle
mov
pop
adc
rol
popa
cmpsl
fs
ficomps
push
mov
gs
fcoms
incb
mov
subb
xor
sbb
cli
in
ljmp
jo
inc
xor
jle
jmp
aas
mov
insb
testb
lahf
xchg
loopne
pop
xor
mov
repnz
xchg
cs
sub
ret
divl
arpl
cmpsl
cmpsl
push
cmc
mov
cmp
cmpl
xor
jno
loope
subb
pop
cs
dec
shl
loopne
sub
lcall
loop
adc
and
jnp
movsl
mov
subl
adc
jg
inc
cltd
xor
stc
inc
loopne
ds
aaa
push
push
mov
xchg
xchg
sti
test
cltd
mov
popf
dec
mov
xor
ss
inc
rorl
xchg
inc
pop
sar
lock
xchg
js
insb
sbb
ja
in
sti
cmc
mov
icebp
out
gs
sbb
push
or
jp
pop
mov
fwait
rol
adc
push
mov
sub
scas
adc
lahf
ds
jle
pushf
ljmp
or
pop
lret
jb
sub
aam
lret
decl
enter
push
or
repnz
ret
call
pxor
cmc
loop
ds
loopne
xor
pop
xlat
mov
and
cmp
adc
or
dec
adc
test
cmpsb
push
sti
lret
mov
sbb
or
xor
pop
imul
xchg
mov
push
xor
pop
pop
sbb
xor
cmp
jnp
out
mov
sbb
fucomip
inc
loope
mov
ja
in
push
das
mov
enter
inc
shll
xchg
dec
jns
or
cli
dec
addr16
jmp
stos
or
lahf
ja
mov
dec
movsb
or
cmp
push
jae
es
push
aam
sbbb
or
xor
adc
dec
in
ss
push
dec
mov
and
xor
inc
jbe
mov
lods
pop
push
out
bnd
push
mov
xchg
jecxz
hlt
jmp
mov
shl
jnp
lret
mov
cmp
sarb
cmp
jmp
add
movsl
imulb
lods
mov
pop
xor
and
out
stos
push
push
dec
pop
scas
dec
or
ljmp
leave
xchg
jnp
loopne
adc
inc
in
pop
sbb
adc
xor
lar
lock
cmpsb
sub
mov
xor
js
sub
clc
addr16
lods
lods
sahf
iret
push
inc
mov
rclb
pop
stos
and
mov
sub
stos
push
test
push
push
and
xchg
and
mov
ja
jne
mov
adc
stos
dec
push
imul
gs
jno
jle
xor
pop
cli
mov
cld
call
pop
pop
pop
ja
mov
sbb
fstpt
or
inc
leave
push
add
aas
ss
bound
ljmp
inc
aas
inc
xchg
mov
repz
pop
sub
mov
cmp
adc
arpl
add
loop
mov
push
cmpl
sbb
sbb
cmp
icebp
mov
cld
cmp
xchg
push
mov
js
bound
out
mov
dec
lds
cmpb
xchg
insb
mov
outsl
and
imul
push
fcoms
stos
mov
fucomp
sub
outsb
sub
pop
adc
hlt
enter
aaa
fsub
popa
pop
push
pop
pop
pusha
jno
test
ljmp
xchg
pop
arpl
sub
int
faddp
xor
inc
dec
loopne
out
das
lds
inc
aaa
add
push
add
outsl
cmpl
aam
inc
fadds
pusha
add
data16
xchg
imul
mov
dec
xor
mov
jp
nop
outsl
jl
xor
xchg
sti
lret
imul
pop
icebp
dec
mov
pop
jmp
fcomip
add
dec
and
inc
leave
dec
mov
ror
aad
inc
add
test
mov
mov
movsb
in
mov
mov
lret
jb
and
push
in
js
loopne
jnp
pop
xchg
mov
inc
jo
and
push
jp
hlt
push
jbe
dec
daa
mov
jmp
loopne
sbb
adc
push
xchg
xchg
push
cmp
out
cmc
xchg
xchg
xchg
adc
xchg
lds
ds
imul
cmp
mov
pop
fdivrs
mov
fdivl
hlt
pop
int
cmpl
mov
rclb
xor
outsl
cli
in
fstp
pop
pop
inc
adc
repnz
fwait
and
jbe
push
xor
jl
ds
sub
sbb
push
scas
div
pop
pop
fsubl
push
lret
mov
xor
insb
jecxz
in
push
add
mov
fimull
and
mov
adc
xor
sbb
nop
sbb
xchg
fsubrs
imul
addb
fsub
insb
xor
pop
sbb
push
add
aad
xor
lods
fidivrs
bound
and
sub
je
cmp
fdivs
sbb
int
into
jae
bound
scas
xor
cmp
sub
inc
sub
sahf
pop
adc
icebp
dec
dec
push
add
sub
enter
jne
pop
push
movsl
cmp
fsubrl
leave
faddp
ss
jbe
sbb
cld
ds
push
add
jno
jo
dec
lock
xor
outsb
aas
pop
test
and
lock
fisubrs
cs
mov
ret
xchg
ret
icebp
rolb
sub
pop
icebp
ret
arpl
ficoml
cmpl
int3
lods
mov
aaa
je,pn
dec
cmp
xor
pop
std
dec
leave
xorb
cmp
js
sbb
push
dec
mov
push
xchg
push
xchg
add
sbb
cltd
es
adc
shrb
sub
fcompl
sub
pop
repnz
mov
mov
sub
dec
push
sub
mov
fidivrs
imul
iret
mov
jnp
add
cmp
sbb
and
lahf
jg
clc
shll
mov
cmp
mov
repnz
push
sub
pop
fs
mov
mov
dec
push
test
call
outsl
sbb
and
pop
mov
mov
das
push
adc
mov
rorb
xorl
dec
js
mov
stos
and
pop
pop
inc
lahf
leave
jecxz
dec
pop
mov
or
inc
push
xchg
outsb
and
imul
clc
ljmp
outsl
cmp
test
sbb
gs
jo
imul
pop
sti
pusha
hlt
repnz
das
inc
shrb
xchg
pop
js
inc
movsb
pop
cmpsl
mov
push
xchg
test
ss
sbb
lret
xor
pmullw
repnz
mov
into
hlt
leave
lods
outsl
mov
fwait
sub
dec
pop
rcll
das
jb
test
js
sbb
add
mov
outsb
aaa
xor
call
data16
mov
push
sub
inc
pop
ds
fdivl
stos
mov
mov
push
mov
xchg
cmp
jp
test
jg
add
out
sbb
fdivl
xor
sarb
xchg
mov
gs
mov
test
dec
jmp
sbb
imul
cltd
lahf
faddl
mov
stc
gs
sub
paddq
incb
outsb
imul
fcoml
mov
adc
pushf
sbb
push
repz
push
testl
lret
xor
fcoml
outsl
icebp
loopne
test
lea
inc
push
sbb
pop
xor
mov
xchg
jne
movsb
sub
push
mov
ret
sbb
outsl
andb
lods
jl
inc
and
pop
les
aam
fiadds
mov
xchg
in
jg
xchg
ret
paddsw
ljmp
lret
mov
adc
xchg
cmp
add
jmp
aad
sub
orb
jge
scas
mov
imul
xor
push
lock
test
lds
inc
add
sahf
xchg
std
dec
sub
call
bound
push
imulb
pop
inc
or
push
addr16
fwait
sub
pop
scas
mov
daa
outsb
call
rcrl
sti
pop
mov
sbb
mov
addr16
cmp
pop
clc
addr16
test
adc
mov
mov
imul
fcompl
cmp
pop
aad
cwtl
cli
push
lret
mov
loopne
sbbl
stos
xor
jge
loope
mov
aas
sbb
push
cs
xchg
test
sub
mov
lret
jnp
xorl
jl
fwait
pop
push
and
dec
subb
popf
mov
je
push
aam
shll
rcll
idivb
push
push
cwtl
inc
insb
data16
mov
vdivps
out
mov
inc
xchg
push
loop
sbb
imul
jae
sub
fmuls
mov
pop
mov
mov
xchg
dec
dec
loop
in
movsl
jecxz
gs
mov
sub
or
xchg
ss
xchg
and
and
lock
or
sahf
iret
xchg
jno
jmp
adc
xor
push
cmp
push
add
add
outsl
push
mov
pusha
fcoml
jo
mov
jno
outsb
jge
iret
pop
je
hlt
sub
lahf
xchg
cmp
dec
sub
cmp
fldcw
inc
jge
leave
shl
cmp
fcomps
pop
xor
jp
mov
repz
fsubs
test
fldcw
dec
cltd
xor
mov
sbb
cmp
std
fucomip
mov
push
mov
jle
ror
out
mov
test
xchg
out
and
fcoml
aaa
insl
mov
fsts
push
mov
es
pop
nop
adc
xchg
mov
in
test
add
loope
fcmovnu
dec
es
lret
cs
arpl
xlat
scas
popa
ret
sbb
sti
dec
popf
mov
sub
jnp
ljmp
es
lret
push
arpl
insb
lret
pushf
rclb
ds
test
popa
in
adc
xor
pop
and
aas
pushf
mov
movsb
adc
push
gs
xchg
add
outsl
sub
sbb
pop
test
jge
jmp
mov
les
add
jp
mov
xor
pop
dec
lock
xchg
mov
xor
mov
or
and
dec
pop
xor
mov
fimuls
push
stc
dec
mov
loop
idivb
std
xor
gs
add
repnz
xchg
push
sbb
add
mov
xor
mov
dec
mov
outsl
sbb
mov
lret
push
rolb
stos
mov
jae
cmpb
pop
jnp
dec
shrl
adc
jl
adcb
fnstenv
and
mull
test
test
leave
aas
xchg
fldenv
dec
pop
ljmp
inc
xor
lds
addr16
dec
pop
and
xchg
popa
xchg
pop
out
out
es
sbb
or
mov
sti
cli
add
or
out
mov
sbb
out
pop
inc
test
sub
sbb
mov
push
mov
nop
adc
and
rorb
push
in
movsl
out
lds
pop
pop
cmp
imul
inc
leave
test
and
loop
lret
int
outsl
push
and
mov
dec
ljmp
cmp
out
or
jne
loopne
inc
jno
fld
or
shll
mov
shll
cmp
aas
imul
clc
push
rolb
addr16
pop
jecxz
lret
mov
out
repz
inc
ret
cmp
jge
jbe
push
mov
mov
or
xchg
jl
xchg
pop
out
mov
int3
scas
movsl
aas
rcr
mov
inc
ljmp
and
outsb
loop
cld
adc
popa
pusha
ret
test
call
xchg
jp
xchg
test
add
inc
mov
dec
sbb
fsts
aad
arpl
or
sti
jp
mov
cmpsb
jne,pn
test
enter
std
lret
jb
fdivp
sbb
and
pop
aaa
lods
mov
push
and
adc
dec
pop
sub
cmpsb
mov
lock
pop
bound
push
lret
or
sub
push
andl
roll
stos
arpl
mulb
add
rolb
xchg
adc
int3
les
enter
sub
jle
mov
mov
mov
repnz
add
dec
int3
rcll
in
cmp
sub
or
ds
out
fiadds
jg
inc
xchg
fdivl
test
push
jnp
loopne
add
ljmp
jmp
pop
sub
sti
aam
lods
or
mov
xor
lret
sti
cmpsl
lret
mov
mov
dec
sbbb
out
fcmovbe
negl
clc
fldenv
enter
shll
jge
test
dec
aaa
loop
pusha
push
and
inc
shrb
push
xlat
cltd
xchg
cmp
movsb
les
js
cmp
mov
xchg
dec
dec
in
out
dec
push
mov
dec
andl
jb
cmp
jbe
or
inc
pusha
cmp
test
adc
lea
lods
add
pop
pop
dec
mov
fwait
int
sbb
arpl
mov
dec
and
and
in
push
repnz
xor
adc
adc
push
ret
mov
lock
jno
mov
dec
in
push
mov
daa
fs
sub
mov
jp
notb
or
popa
repz
sbb
inc
imul
out
loope
xchg
sub
dec
sbb
mov
into
dec
ss
mov
das
inc
xor
clc
inc
hlt
xlat
or
in
adc
cld
push
jns
inc
lret
adc
xchg
repnz
mov
jbe
mov
outsb
imul
xchg
or
cmpl
pusha
ja
mov
mov
push
sub
bound
fwait
stos
dec
xchg
cld
in
pop
repnz
adc
add
xchg
int3
loop
sub
jnp
arpl
cmp
or
mov
scas
dec
ret
mov
jge
rcrb
faddp
inc
inc
shll
jg
mov
fwait
cvtpi2ps
shr
aad
and
dec
stos
mov
push
xchg
mov
shll
sbb
std
push
push
scas
gs
mov
and
cmp
pop
push
arpl
mov
daa
ret
adc
test
popf
push
or
xchg
and
rcrl
push
or
mov
rcll
mov
xchg
nop
cmp
jo
add
mov
in
lds
mov
mov
or
je
mov
sbb
inc
xor
stc
cmp
test
insl
add
or
jmp
outsb
adc
mov
ljmp
jbe
xor
pop
pop
rcll
jmp
push
jmp
into
out
mov
xchg
jnp
mov
or
pop
out
bnd
mov
movsl
sub
push
and
cmp
push
xchg
cmpsb
mov
mov
sub
and
xor
push
inc
xchg
jmp
push
jnp
push
fwait
mov
or
xor
mov
sub
out
ljmp
popa
icebp
dec
pop
sub
out
cmp
xchg
add
push
cmp
and
cmp
out
icebp
mov
cmp
out
call
lock
jae
jl
paddb
add
dec
movsl
mov
pop
dec
push
div
or
adc
or
lcall
fldcw
dec
bound
dec
adc
xchg
xchg
push
push
fnsave
in
imul
jge
out
fcoms
fwait
inc
hlt
dec
into
sbb
lcall
pusha
xor
repz
enter
call
inc
dec
in
push
cmp
add
mov
sahf
cltd
iret
or
pop
lock
or
cmp
cmpsl
xorb
in
bound
scas
dec
movsb
fs
jne
xchg
or
and
jo
out
mov
out
lahf
push
xchg
push
fcom
sahf
movsl
imul
mov
inc
jne
scas
mov
loop
xchg
xchg
pop
pop
push
inc
push
sbb
inc
fimuls
mov
xor
imul
fimull
inc
call
fcomps
clc
lret
das
lods
frstor
cmp
enter
sbb
fwait
sti
and
out
mov
or
mov
lods
inc
cs
jle
jnp
in
mov
out
mov
mov
into
test
mov
mov
into
jmp
cmpsl
test
fidivs
push
jle
in
jns
sbb
lret
add
js
lods
mov
lods
clc
roll
xchg
jb
outsb
clc
movsl
aam
sub
jb
imul
imul
in
mov
imul
in
ss
pop
cmp
push
ljmp
cli
scas
sahf
movb
les
fstl
and
sbb
fisubl
xor
ss
and
dec
jbe
movsb
popa
cmp
and
xchg
inc
xchg
cmpsb
lahf
rolb
inc
push
pop
mov
nop
fldenv
mull
cmp
nop
cmp
pop
add
lcall
out
daa
cmc
inc
decb
leave
cmpsb
mov
mov
adc
ror
cmc
popa
jl
shrl
inc
mov
repnz
mov
cmpsl
and
sbb
lret
jge
pop
inc
popa
mov
dec
popf
cmp
imull
pop
imul
ljmp
dec
scas
jnp
stc
mov
jle
pop
cmp
cmp
push
mov
jle
rcl
iret
jno
ss
nop
stc
push
je
xchg
sub
int3
daa
subl
mov
outsl
sbb
mov
or
sbb
mov
mov
out
xor
les
pop
mov
cmp
or
insb
add
mov
nop
sbb
inc
mov
mov
push
mov
and
cmp
fisubrs
pushf
adc
mov
hlt
decl
sub
bound
mov
or
mov
int3
in
shll
push
cmp
jae
cmpsl
lahf
dec
push
test
sahf
cmp
cs
adc
xor
insl
stos
mov
xor
jge
jo
push
popa
xor
mov
fdiv
int
enter
xor
mov
in
adc
fmuls
shlb
dec
sbb
push
and
lret
add
xchg
out
pop
cmp
cli
lods
mov
inc
mov
xor
iret
pop
lods
add
cltd
sub
pusha
orb
sub
ss
sub
lock
idivb
das
inc
mov
fwait
sbb
es
jp
fwait
jge
push
mov
push
mov
stos
pop
push
test
pop
push
jp
cmp
ret
out
push
addr16
loopne
jns
out
dec
lds
clc
in
aaa
push
shl
xchg
xlat
pop
cs
sub
das
fisubs
bound
repz
test
stc
adc
mov
sub
push
scas
mov
push
cmp
int
mov
jg
pop
and
xchg
arpl
xor
jne
call
rolb
loopne
lock
dec
mov
arpl
iret
mov
outsl
loopne
sarb
push
jae
fwait
cmp
sbb
push
int3
rcrb
sbb
jnp
lds
mov
mov
lds
mov
les
jmp
aaa
nop
nop
push
fsubr
out
push
shlb
mov
inc
cmp
out
xchg
pop
ficoml
adc
xchg
jne
imul
xor
pop
ds
jbe
mov
inc
fwait
sbb
and
popf
and
xor
sub
ret
xchg
xchg
shll
jo
dec
or
andl
out
movsb
pop
call
or
rcr
in
dec
sbb
mov
pushf
inc
ffree
bound
nop
mov
adc
xchg
jg
jo
sbb
push
push
repz
lret
push
push
dec
cmp
adc
mov
call
enter
std
xor
mov
xchg
push
xlat
lcall
or
add
aas
push
iret
push
inc
mov
iret
out
push
inc
aas
sbb
sub
cmpsl
xchg
add
cmp
test
sbb
cmpsb
imul
pushf
mov
je
xor
mov
inc
sub
or
and
movsl
cmp
jnp
mov
pop
pop
repnz
jnp
xchg
stc
int3
mov
fwait
in
iret
nop
loop
addl
cli
sahf
adc
or
movsb
jle
sahf
loope
loopne
jecxz
inc
ret
sub
sbb
sahf
mov
dec
or
rcll
les
stos
push
es
add
aaa
mov
popa
testb
mov
enter
push
xchg
pushf
inc
test
add
sbb
cs
ja
stos
std
sbb
shrb
fs
sub
scas
stos
mov
mov
ret
inc
fdivr
inc
cs
js
outsl
push
xchg
js
rolb
jo
loope
add
sbb
jno
sbb
mov
add
inc
adc
out
arpl
outsl
insb
cmpsb
es
and
add
inc
cltd
xchg
je
sti
and
mov
and
repz
in
add
ds
pop
negl
loopne
imul
mov
insb
add
inc
xor
dec
aad
sub
cmp
fcoml
inc
lret
mov
sti
and
xchg
or
ja
std
pop
hlt
sahf
add
jnp
mov
mov
fwait
or
jne
scas
mov
data16
inc
test
out
mov
and
cmp
mov
aam
lds
mov
pop
adc
mov
dec
push
cmpsb
xchg
cs
sbb
repnz
xor
push
push
jecxz
test
aad
imul
mov
add
stos
mov
mov
out
movsb
insb
mov
out
sbb
std
mov
aad
in
aaa
jnp
lret
cltd
mov
cmp
pop
and
pop
jecxz
xchg
inc
mov
jle
adc
popf
add
fs
je
mov
dec
mov
ret
loope
pusha
jmp
push
adc
cmc
lea
push
mov
sub
loope,pt
sbb
stc
adc
out
add
lock
lret
dec
jo
bound
incl
cmp
icebp
add
mov
jmp
push
imul
xchg
mov
hlt
mov
cmp
test
mov
dec
push
pusha
or
lods
push
mul
cmp
iret
mov
xor
sub
stc
mov
pop
push
jecxz
repz
dec
lods
adc
fmuls
rcrb
mov
xchg
cmpsl
inc
jle
cld
les
mov
inc
es
dec
mov
outsl
xchg
fildll
mov
xchg
js
push
sahf
xor
pop
fs
mov
adc
jg
popf
bound
pcmpeqw
xor
push
repnz
push
mov
and
popa
mov
cmp
mov
xor
sub
mov
imul
mov
xor
std
pop
jo
test
mov
inc
dec
jmp
inc
sub
popa
push
mov
test
daa
daa
fld1
dec
xchg
cmp
inc
mov
sub
xchg
test
cmp
add
fsubrl
insl
xchg
fidivrl
xchg
pop
jb
nop
xchg
loopne
cmc
cmpsl
popa
mov
push
or
popa
ret
adcb
clc
and
sbb
out
pop
out
sbb
pop
pushf
cmpsl
and
gs
lds
test
cmp
or
pop
lea
shlb
and
pop
dec
dec
in
ret
jb
arpl
rcll
out
in
and
and
push
jne
push
mov
xchg
sti
fadds
imul
test
xor
mov
dec
push
shl
sbb
lret
mov
fdivl
mov
jno
shll
int
xor
xorb
jmp
add
loop
dec
dec
push
jnp
test
pop
out
mov
jnp
dec
sti
xor
mov
jnp
sub
out
mov
and
adc
call
stos
inc
jnp
gs
fisubs
push
jno
xchg
daa
cmpsl
adc
pshufw
filds
std
jmp
movsl
clc
xchg
pop
lahf
xlat
fildl
orb
and
adc
xchg
pop
data16
and
push
pop
sub
xchg
and
out
pop
cmp
add
inc
stc
in
stc
cmc
scas
fldcw
and
cmp
scas
mov
bound
adc
and
jle
ljmp
mov
std
sub
inc
mov
mov
push
cld
dec
frstor
scas
dec
test
xchg
sub
iret
fists
xor
jle
mov
add
rol
push
adcb
jae
aam
sub
lods
mov
movsb
lods
aaa
pushf
jae
mov
loop
lahf
pop
and
lods
jle
mov
addr16
push
scas
loop
mov
push
daa
aad
ss
and
adc
cwtl
repz
fimull
fcmovnb
sbb
sbb
clc
pop
xor
sbb
cmp
fwait
lods
cmp
jae
sbb
fcompl
jl
movsb
mov
movb
mov
out
inc
arpl
push
sub
mov
lret
sti
fwait
push
and
arpl
cld
mov
add
mov
mov
jle
jle
ja
jg
les
jbe
adc
jne
inc
add
cmp
mov
enter
pop
and
divb
aaa
stos
daa
sub
sti
mov
cmpsb
xor
loop
movsb
sub
mov
xchg
sahf
outsb
or
cltd
pop
mov
lods
adc
dec
lcall
fcomps
test
sti
hlt
dec
jo
out
testb
orb
push
xor
push
push
pushf
sbb
or
dec
js
pushf
push
mov
rcrl
adc
push
sbb
push
sub
sub
jecxz
cmp
xchg
fwait
or
sbb
xchg
xor
jnp
jecxz
or
mov
inc
cmp
hlt
jmp
stc
adc
dec
popa
xor
lods
mov
pop
icebp
shlb
jg
pusha
pop
adc
orl
data16
fstpt
adc
movsb
mov
mov
jb
in
inc
dec
push
sub
ds
and
aad
jb
mov
lret
lret
jbe
dec
pusha
cmp
jns
jg
push
sbb
cs
inc
add
lea
mov
or
loop
and
inc
adc
xchg
sub
lods
ret
sbbb
inc
sub
or
aad
das
or
int
and
ljmp
cli
sub
lret
fisubs
fwait
out
inc
fisttpl
jo
mov
lret
xor
or
sbb
inc
in
loop
cmp
push
jg
fs
push
sub
jp
int3
xchg
mov
pop
inc
mov
add
sub
mov
insb
dec
sar
test
gs
sub
pop
mov
test
inc
push
imul
jg
cwtl
and
lret
sub
jo
push
repz
xchg
jo
mov
jmp
xchg
lds
jno
fsts
adc
xlat
loope
lahf
pop
in
mov
push
icebp
lahf
fsub
cmp
iret
out
lret
sbb
in
popf
repnz
xorb
adc
test
sub
cmp
push
fstps
sahf
int3
int3
scas
in
notl
or
xor
inc
cs
inc
data16
xor
nop
xchg
es
test
fs
fildl
jge
xchg
add
lock
push
int
sbb
gs
je
jge
cs
sahf
dec
lock
jae
sbb
mov
test
push
loopne
dec
test
cs
loope
mov
cmp
test
dec
enter
push
pop
data16
xchg
ss
adc
mov
in
inc
adc
dec
in
in
shr
or
xchg
and
in
mov
out
cmp
js
mov
adc
jae
adc
out
mov
ja
lds
pop
adc
imul
dec
inc
or
jp
xor
xchg
shl
sbb
dec
adc
movsl
add
sub
cwtl
add
test
std
mov
sub
jmp
push
xchg
xchg
push
adc
call
lret
sub
push
out
dec
xchg
in
inc
sbb
js
push
mov
pop
xchg
mov
pop
and
gs
pop
add
rol
push
sub
mov
fs
imul
or
test
mov
out
arpl
xchg
aaa
adc
lea
das
pop
iret
lahf
mov
adc
pusha
sahf
aad
rcrl
push
add
add
push
int
mov
cmp
push
and
mov
je
jb
or
nop
scas
fcmovnbe
fcomp
and
cmc
xchg
sub
jp
fs
jp
sti
xchg
mov
les
arpl
out
std
loopne
and
adc
imul
add
dec
and
push
xchg
les
loope
fstps
dec
dec
out
adc
lret
and
insb
mov
enter
and
sbb
stc
cmp
push
push
dec
mov
mov
inc
jp
fisubs
in
dec
sahf
mov
bound
cmp
jmp
xor
cli
cld
mov
scas
lahf
test
negb
test
pop
mov
repnz
lods
mov
shlb
lahf
add
mov
mov
pop
sub
outsb
push
jns
inc
cmpsb
cltd
cld
jp
and
adc
push
popa
scas
xchg
sbb
test
mov
jl
in
mov
cltd
mov
sbb
cmp
imul
add
adc
mov
push
fidivl
jge
arpl
frstor
imul
enter
mov
and
loop
dec
mov
pop
cmp
sub
mov
xor
xor
push
push
xchg
and
test
push
pop
add
idivl
lahf
add
cmc
xchg
push
and
out
or
add
clc
je
adc
imul
outsl
cmp
imul
dec
mov
xor
push
lcall
in
inc
imul
lcall
adc
pop
movsb
dec
sub
cli
mov
jb
cmp
aaa
lret
xchg
aam
dec
mov
push
repnz
mov
xor
sbb
push
scas
pop
call
js
pop
gs
pop
mov
movsl
mov
dec
jp
dec
popa
shrl
loop
repz
and
xchg
jp
and
mov
jp
xchg
jl
xor
and
lods
inc
cmp
mov
ljmp
shrb
bound
inc
inc
inc
mulb
jbe
ja
mov
aad
jg
xor
insb
popf
or
and
outsl
lods
add
mov
mov
enter
ret
fwait
push
mov
clc
dec
mov
pop
icebp
or
sbb
dec
mov
mov
sbb
stos
pop
mov
rorb
test
in
fidivrl
int
jb
movl
jle
sbb
xor
mov
sub
int3
in
pmaxub
lea
xchg
xor
mulb
notl
jp
clc
bound
popf
xor
adc
xor
popf
push
or
fwait
push
shl
push
cli
imul
dec
pushf
fiadds
sbb
incl
xchg
and
sub
cwtl
pop
insb
pop
out
jg
rcl
shl
pop
mov
sbb
mov
or
fcom
aam
push
into
dec
mov
cmpb
and
lret
int3
je
pop
in
jae
out
lods
stc
jge
repz
mov
inc
int3
push
mov
push
outsl
sbb
clc
push
das
or
in
or
xor
orb
sbb
pop
dec
add
push
mov
pusha
outsl
inc
xor
pop
mov
es
xchg
loope
je
pop
cltd
add
sbb
fistpl
in
nop
mov
mov
jae
mov
rorb
sbb
in
outsl
fdivp
ljmp
push
ja
cmp
in
cltd
bound
xor
ror
xor
xlat
lock
imul
xchg
add
shrl
or
inc
rcrl
adcl
push
es
jb
icebp
loope
ret
xchg
jp
sbb
jl
mov
negb
mov
xchg
shll
lret
scas
mov
mov
pop
divb
xchg
out
shr
arpl
into
cmp
aas
ret
mov
and
xchg
sub
jne
push
dec
push
lods
add
fists
popf
ret
mov
lcall
andl
mov
and
jmp
dec
rorl
mov
jge
leave
cmpsl
loop
pop
mov
cli
ss
xor
sub
mov
cmp
loopne
jnp
push
xchg
jge
dec
mov
and
outsl
pop
dec
movsl
pop
out
inc
dec
cltd
andl
outsb
addr16
mov
call
pop
mov
cwtl
pop
clc
jae
gs
mov
sbb
adc
bound
cmp
jle
fisubs
inc
mov
add
call
gs
cmp
or
add
or
mov
and
mov
pop
sbb
mov
cmp
cld
addl
jmp
sti
pop
ret
ret
popf
loop
ljmp
mov
mov
pop
xor
fwait
std
lock
not
in
fidivl
inc
rcll
xchg
or
pushf
ss
or
jnp
ret
cld
test
mov
fdivl
xchg
mov
xchg
ds
inc
pop
xchg
sub
mov
xor
pop
aam
in
add
nop
repz
xchg
in
mov
je
cld
sbb
jmp
out
repnz
iret
xlat
inc
push
je
pop
call
test
inc
sub
std
in
ds
imul
mov
jne
pop
pop
sub
inc
adc
in
ret
lods
ret
lods
xorb
mov
xor
add
xor
gs
and
mov
mov
jno
xor
sub
outsl
and
dec
fdiv
xor
jnp
xor
jno
add
mov
out
sbb
imul
std
jb
add
cmp
jmp
jge
cli
test
jae
cltd
loopne
out
aad
xorl
nop
jnp
or
dec
jp
nop
js
inc
add
rcr
sub
xor
mov
jns
lahf
cmpsb
jno
insl
outsl
fcmovnb
sahf
jge
les
xor
je
pop
dec
adc
test
xor
icebp
jns
or
ret
ss
mov
sub
mov
dec
notl
jo
ror
mov
dec
loopne
hlt
pop
adc
addr16
or
push
cmp
stos
cmpsb
clc
leave
xor
sbb
repnz
add
loop
cmpsb
cmc
add
pop
aad
mov
inc
int3
sbb
xor
or
jle
ds
pop
inc
adc
enter
adc
mov
add
cmp
hlt
insl
xor
call
xchg
fisubs
popf
hlt
lock
and
or
xchg
push
sahf
push
popa
fmul
mov
dec
push
cmpsb
movsl
inc
cmpsb
scas
stos
lds
cmpsb
mov
jno
mov
jle
bound
adcl
add
mov
and
dec
in
ret
js
jnp
fisttpll
fsubrp
mov
into
mov
int
inc
mull
adc
jl
jae
mov
stos
adc
movsl
sbb
mov
jns
adc
push
sbb
jne
dec
cltd
test
in
add
fistpl
ficoml
js
add
shrl
xor
cltd
fcomp
pop
into
cs
outsl
mov
sub
shrb
inc
popa
or
iret
pop
vmovq
inc
pop
sub
into
mov
dec
mov
sti
dec
push
scas
pop
call
mul
ds
push
mov
test
add
sbb
inc
fcmovu
imul
out
mov
fsubl
pop
xchg
xchg
pop
pop
sbb
add
mov
inc
mov
or
dec
in
in
icebp
fdivl
push
out
sbb
pop
fisttps
jb
inc
clc
loopne
sub
push
mov
cli
jb
sub
push
dec
push
inc
mov
add
daa
aas
adc
jae
insl
xor
fldcw
jb
cld
adc
or
lods
add
mov
or
sbb
push
adc
jbe
xchg
jmp
jecxz
push
add
mov
push
loop
jb
push
pusha
sub
xor
pusha
dec
jmp
mov
mov
push
scas
jmp
mov
dec
push
sbb
repnz
cmpsl
inc
dec
and
cltd
cmpsl
sbb
out
mov
xchg
pop
fdivrp
scas
mov
and
inc
cmp
push
bound
xchg
bound
lahf
insb
jmp
push
mov
push
xchg
lret
ljmp
fnstenv
rclb
add
inc
shlb
mov
call
insb
loope
add
movsl
or
daa
test
cs
data16
enter
jns
xor
xchg
test
jmp
and
repz
ljmp
int3
push
cmp
fists
mov
insl
bound
insb
cmp
inc
divb
sub
cmc
cmp
mov
test
mov
mov
sbb
adc
int
jne
push
push
xchg
lea
imulb
imul
daa
dec
dec
arpl
icebp
add
sbb
fidivrl
sbb
mov
mov
scas
xor
je
jg
mov
js
add
jne
fildl
jbe
lret
xor
repnz
cmc
cmc
sbb
stc
push
push
jl
into
loopne
insb
xor
adcb
mov
scas
pop
lods
cmc
jbe
sub
das
js
movsl
insl
rcr
repnz
lods
enter
inc
loope
or
add
aam
sbb
or
inc
call
push
cmp
rorl
popa
push
and
test
lds
loope
daa
jmp
int3
or
outsl
mov
insb
fildll
in
mov
aam
mov
std
cmp
rclb
std
jl
xchg
xchg
fisubl
lcall
pop
dec
adc
mov
jne
test
dec
adc
pop
inc
mov
sbb
andb
mov
push
cld
nop
loop
pop
addr16
push
mov
mov
jg
and
dec
jae
inc
sub
rcrl
mov
inc
out
scas
cld
adc
sti
test
idivl
inc
mov
leave
test
jecxz
ss
aaa
cmp
outsb
dec
pop
gs
cwtl
jbe
icebp
loopne
or
push
cmc
xchg
mov
jmp
push
ret
mov
fs
and
dec
or
cwtl
fdivl
inc
jbe
and
rorb
leave
cltd
int
cmp
add
and
int3
pushf
jecxz
shll
ljmp
aaa
inc
push
sub
push
hlt
add
pop
pop
jecxz
int3
mov
mov
int3
sub
cltd
incb
push
push
leave
adc
push
adc
mov
dec
out
pop
jl
adc
inc
xchg
sub
fisubrl
mov
xchg
sbb
push
xchg
ds
and
or
inc
xor
adc
and
xor
call
notb
rclb
popf
stos
inc
cmpb
ljmp
jg
sub
mov
loopne
ret
xchg
add
push
lods
fwait
xchg
xlat
push
xchg
jg
cmpsb
mov
or
mov
lds
fsubrs
rolb
and
test
jmp
rcll
xor
je
ljmp
lock
enter
push
sub
cmpsb
sahf
loopne
mov
in
fs
cmp
xchg
in
cltd
mov
testb
push
push
mov
into
sub
lods
adc
jb
mov
xor
pop
or
and
pop
fcmovnu
dec
lret
shll
call
pop
sbb
lods
add
aaa
fisubrs
ficoms
lcall
xlat
push
pusha
adc
ror
add
xor
icebp
cmc
xchg
orl
push
and
dec
sbb
or
and
mov
je
mov
xchg
xor
sbb
les
call
ss
inc
xchg
arpl
lret
xchg
mov
jmp
and
out
cmovg
xor
mov
add
cwtl
mov
pop
scas
pop
cmp
push
pop
inc
mov
jb
push
test
aam
popf
mov
roll
mov
xchg
filds
push
ret
pop
out
divb
sub
xor
pop
lcall
mov
sub
jno
ret
add
mov
mov
mov
jbe
popf
xorl
add
es
inc
and
jmp
inc
sub
cmp
dec
fwait
pop
sbb
movq
mov
add
std
jmp
inc
dec
jae
sbb
sbb
andb
js
leave
in
jnp
jmp
stc
and
aas
and
inc
jg
or
xor
divb
cwtl
ljmp
add
movb
fs
cmp
or
insl
fisubrl
insb
jb
jmp
adc
push
dec
dec
out
lcall
xchg
int
ret
sbb
pop
repnz
adc
test
lock
lea
pop
stos
mov
pop
aam
stc
mov
xchg
fcoms
cmc
ficoms
daa
out
and
out
xchg
jl
data16
xchg
mov
test
jns
cmpsl
daa
push
and
pop
ss
adcl
xchg
mov
pop
ret
loope
lds
push
xor
pop
ljmp
repz
cmpsb
sbb
cs
xor
inc
pop
bound
int
stos
inc
mov
mov
pusha
xchg
sarb
jmp
daa
not
popa
jle
mov
cltd
cmc
ret
mov
push
fiaddl
fsub
aad
xchg
jbe
jecxz
sbb
pop
shl
pop
cmp
ljmp
mov
sahf
inc
mov
cmpsb
jmp
sub
mov
adcw
fcomip
fldcw
adcb
cmpsl
push
and
mov
lock
sbb
outsl
loopne
push
mov
push
loope
cvttps2pi
pop
pop
stos
sub
aad
repnz
lock
adc
and
xchg
leave
mov
sbb
nop
jmp
jne
aam
dec
movsb
loope
jge
dec
xlat
leave
dec
in
sub
jl
xor
mov
sbb
add
scas
es
mov
cld
pop
lods
add
add
fists
andl
dec
mov
rcl
push
inc
sbb
je
sub
stos
iret
clc
lcall
js
push
ficompl
sti
jae
pop
mov
add
in
push
xchg
push
xor
imul
mov
shll
dec
ja
xchg
test
ret
movsb
fnsave
pop
ja
push
jae
popa
and
in
outsl
mov
outsl
ja
mov
jmp
out
clc
mov
hlt
nop
loop
test
cld
cmp
and
testb
rorb
mov
loopne
or
adc
je
jo
mov
repz
add
mov
push
cltd
dec
cmp
jp
rcll
test
fnstcw
shlb
add
fcomp
mov
cmpsl
add
ret
sbb
nop
or
loopne
int
or
int
inc
ret
pop
gs
cmp
pop
lret
cmp
adc
test
mov
xor
or
outsb
stos
in
xlat
sahf
gs
test
sub
jecxz
sub
dec
cmp
ret
lret
jns
stc
jge
scas
leave
jb
add
jl
cmp
mov
mov
pushf
mov
popa
leave
dec
jg
ret
or
xor
in
sub
cmp
dec
popf
inc
add
inc
xchg
das
sbb
cmp
jg
inc
mov
stos
decb
movsb
lcall
jp
sbb
insl
xlat
add
jge
inc
out
mov
xchg
jmp
out
aad
mov
call
or
xchg
sub
ret
imul
outsb
sub
inc
cmpsl
scas
inc
jg
fwait
cmp
scas
testl
stc
pushf
inc
mov
rcl
ret
mov
lret
sbb
popa
mov
hlt
div
lods
fisubrl
sub
xor
in
packssdw
ret
nop
cld
jecxz
bound
mov
xchg
inc
fadds
in
repnz
dec
icebp
inc
pushl
add
insl
in
xor
test
jmp
es
adcl
mov
or
fcompl
sub
jbe
push
lret
fimuls
xor
mov
push
aad
xchg
call
add
icebp
ds
loop
sbb
aaa
sbb
cli
hlt
inc
pop
xchg
add
mov
fimull
jne
orl
dec
ficoms
jne
fcmovnbe
xor
fwait
ja
shrl
aaa
xchg
push
jb
or
les
sub
add
cmp
or
loopne
dec
inc
nop
pop
sbb
jp
sbb
inc
call
xchg
mov
jle
cmpsb
adc
jae
out
pop
mov
push
mov
sub
rorl
jne
and
sbb
test
push
fwait
mov
mov
push
pop
dec
xchg
loopne
cli
fwait
mov
push
or
hlt
push
inc
jp
ds
shll
fdivrl
lret
icebp
sbb
mov
jge
adc
add
sub
mov
repz
ja
je
mov
test
push
lods
loope
or
add
cmp
fadds
push
repnz
and
sbb
dec
mov
push
jg
pop
and
aad
push
or
orl
adc
mov
push
pop
cmpsl
cmpsl
xor
mov
xchg
mov
mov
jns
aam
adc
lock
movb
pop
xor
pop
xchg
inc
int
push
push
daa
js
clc
gs
shlb
pop
leave
inc
adc
cli
mov
mov
shll
xorl
mov
in
stc
ja
aam
add
jo
pop
xchg
push
enter
cmp
mov
jmp
xchg
popf
addr16
rol
xchg
nop
sbb
cmp
add
and
int3
filds
fsubrs
inc
negl
jg
repz
int3
stc
cmp
xor
pop
pop
call
mov
xchg
xor
jns
dec
setae
push
cwtl
insl
inc
sub
mov
mov
jno
dec
dec
cmp
into
ss
cmpsb
sub
loope
inc
sub
fwait
mov
call
das
shl
mov
movsl
mov
cmp
sbb
mov
lcall
lcall
inc
aaa
sbb
das
fsubl
jle
cmp
xchg
inc
loope
mov
insl
repnz
cmp
test
stc
stos
dec
mov
push
clc
pop
sub
fbstp
loop
scas
shrb
loop
push
add
jl
cmpsb
or
xchg
lcall
dec
jo
rcl
inc
int3
rol
or
imul
shlb
fisubrl
das
adc
hlt
sub
sbb
sahf
dec
add
enter
add
and
mov
out
lods
and
or
push
lods
mov
jmp
nop
or
ret
shrl
imulb
aaa
in
fcmovne
jnp
ret
cmpsl
cmp
adc
add
and
std
jecxz
pop
hlt
lahf
cmpsb
sbb
mov
js
enter
jae
sub
aad
push
fists
mov
cltd
lods
and
rclb
mov
lods
fbstp
popf
fidivl
inc
addr16
std
jle
insl
adc
sub
mov
or
test
gs
aam
sbb
cmp
out
add
inc
mov
andb
pusha
std
xor
mov
xchg
jecxz
fcmovnbe
adc
or
ja
mov
mov
or
adc
push
sub
ret
bound
loope
loop
jmp
and
lods
xchg
dec
insl
and
or
fmul
push
mov
dec
xchg
sub
sbb
fs
movsl
fwait
mov
inc
mov
jb
je
add
addr16
outsb
cmp
fldcw
jne
leave
pushf
cmc
sub
in
jns
inc
aad
out
sahf
fisttps
mov
sbbb
dec
jecxz
adc
out
sbb
xor
sti
ret
mov
fcmove
pusha
out
nop
pop
loope
dec
out
sti
xchg
pop
loope
sub
dec
push
outsl
rcrb
das
fistl
aad
xchg
and
popw
push
jmp
popa
fcmovnb
or
fimull
pop
sahf
xchg
adc
jbe
mov
mov
push
inc
aas
scas
jle
sub
sbb
pop
adc
and
ds
cs
dec
std
adc
addr16
mov
mov
sbb
repnz
push
pop
cmp
pusha
mov
jp
push
leave
pop
out
pop
ds
loop
subps
mov
inc
lret
testb
mov
cmp
cld
push
sbb
mov
add
fcoms
int3
ret
push
sahf
adcl
and
mov
insb
loopne
push
xor
adc
fldt
cmpsb
ds
shll
push
imul
and
sbb
inc
jns
or
sub
stos
addr16
aaa
push
xor
jno
test
and
loop
add
add
sbb
mov
lcall
shll
push
mov
pop
fidivl
jge
rorb
lock
cmp
pop
fiaddl
in
mov
test
sbb
fnstcw
les
insl
mov
jne
hlt
shll
xchg
inc
insl
imul
sbb
push
mov
push
fcompl
mov
repnz
lds
dec
lret
outsb
std
leave
adc
imul
dec
mov
in
inc
push
cmp
dec
adc
inc
scas
jl
and
dec
jge
mov
inc
lahf
mov
jp
outsb
xchg
repnz
mov
mov
hlt
push
inc
je
jno
mov
sbb
lock
xor
out
push
mov
dec
int3
sbb
pop
les
rolb
call
mov
inc
jle
cmpsb
int3
test
bound
movsl
test
ds
pop
cmpsl
push
lock
jne
idiv
sti
movsb
xchg
mov
cmpsl
inc
mov
push
ret
xchg
jae
shll
inc
clc
sub
sbb
rcl
cmp
pop
stos
int
mov
cltd
pushf
dec
push
cmpsl
shlb
push
xlat
pop
aaa
jle
mov
int
inc
in
and
adc
inc
fldcw
lcall
jl
fs
test
push
push
cmp
mov
decb
addr16
push
mov
jmp
repz
std
lret
or
cli
repz
rcll
aas
fdivrl
mov
sti
subw
mov
jae
lds
push
je
mov
mov
bound
mov
enter
mov
mov
mov
fldl
rolb
or
or
jecxz
mov
imul
sub
pop
xor
inc
int
lret
jl
and
test
xchg
and
pop
std
in
xchg
lods
mov
int3
pop
xchg
adc
dec
into
jnp
sbb
xchg
mov
jp
jle
lock
cli
inc
jno
nop
inc
sbb
xchg
pop
mov
int
mov
test
mov
nop
repz
mov
jmp
push
dec
bound
jecxz
popa
pop
and
sub
gs
in
pop
push
sar
sub
sub
mov
icebp
sub
mov
out
mov
push
mov
push
fbld
sbbb
repnz
ret
mov
jno
push
repz
jne
std
jmp
cmp
testb
push
ss
mov
sti
sub
mov
dec
xchg
or
loopne
xchg
cmp
sub
out
mov
pop
pop
mov
loop
cltd
mov
pop
aad
xchg
cs
std
lock
or
dec
push
inc
daa
sub
or
inc
mov
xor
jle
std
ljmp
insl
push
repz
or
jmp
fdiv
dec
aam
clc
sti
mov
out
subl
xchg
push
dec
or
andb
lods
adc
test
ret
cmpsb
push
fstpl
lods
out
mov
mov
jmp
test
cmc
cwtl
and
lahf
jo
inc
sbb
lea
jmp
cmp
mov
inc
mov
imul
fs
cmp
ret
or
bound
inc
jg
jmp
sbbl
cmp
xchg
scas
mov
push
call
pop
stc
fsubl
sub
enter
enter
shll
pop
jo
add
or
add
push
mov
test
jno
jecxz
mov
jae
sbb
or
jo
rcrl
aas
fwait
in
dec
ds
xchg
in
dec
clc
mov
pop
ljmp
mov
or
push
push
fs
push
pop
sbb
jne
and
adc
outsl
add
lea
insl
jnp
dec
sbb
xchg
xchg
sub
sub
fsubl
lahf
push
cld
push
inc
lock
push
lret
jbe
pop
dec
ja
je
mov
rclb
dec
mov
sbb
repz
aaa
aad
outsl
data16
cmp
sub
lds
fcomp
fisttpll
in
xlat
frstor
push
mov
mov
addr16
mov
inc
mov
cld
gs
adc
adc
cli
adc
ret
in
roll
mov
lret
stc
popf
mov
jo
pusha
adc
incl
fwait
jg
ret
cmp
dec
sarb
inc
inc
scas
repnz
add
in
daa
push
adc
loop
xchg
shll
sbb
inc
push
aaa
popa
add
pop
push
jmp
arpl
lock
ljmp
jp
mov
and
icebp
inc
fidivrs
xor
aaa
aaa
xchg
mov
sbb
xchg
jbe
cmp
push
jmp
mov
adc
pop
stos
andb
insb
lret
pop
push
imul
aas
or
pop
cmp
xchg
jl
jle
shrl
loop
jle
push
mov
inc
adc
repz
add
out
cltd
rcrl
scas
rcll
pop
daa
mov
lcall
and
sub
or
addr16
aas
add
popa
pop
mov
out
adc
mov
sti
fwait
inc
dec
out
popa
adc
or
mov
pop
or
mov
jae
jg
fimull
pop
fidivs
loop
icebp
xchg
and
mov
sub
jo
sbb
jg
scas
pop
fdivs
mov
loopne
add
xor
xor
sbb
jle
mov
add
mov
cmpsl
movsl
xchg
xchg
sub
mov
mov
popf
addr16
push
ret
fidivrs
sti
xchg
repz
push
das
fmull
popa
sbb
addr16
sub
add
mov
imul
jp
cmp
jle
out
cmp
pushf
sar
enter
xor
lea
stc
pop
scas
sub
add
fidivrs
and
adc
xor
push
dec
out
shll
inc
and
movsb
xor
inc
dec
addb
push
les
dec
in
shrl
sub
rol
popf
aad
stos
push
xchg
mov
push
xor
pop
and
out
aam
fbld
cmp
int
push
adc
mov
mov
adc
out
jle
loope
jns
pop
lret
movsb
inc
mov
adc
or
mov
xor
sbb
adc
ds
adc
xchg
clc
pop
and
icebp
stos
int3
mov
lds
mov
mov
cmp
enter
addb
shlb
arpl
inc
aaa
imul
pop
inc
repnz
push
mov
data16
sbb
cmp
pushf
inc
loop
mov
sbb
out
mov
shrl
and
cmp
jge
push
mov
fisubrl
movntps
xor
cmp
stos
pop
cmc
push
mov
pop
out
gs
adc
outsl
fistpll
push
mov
lret
mov
push
mov
leave
or
mov
sbb
adc
scas
mov
jo
pop
fwait
loope
ret
and
inc
inc
adc
sbb
mov
dec
jns
in
out
movsl
xor
xor
lcall
enter
xchg
jne
and
fistl
and
sti
popf
in
mov
xor
fildll
adc
lret
inc
inc
xchg
divl
inc
enter
shrb
and
ds
icebp
xor
mov
sarl
jnp
stc
jmp
popf
icebp
stos
adc
mov
int
push
jno
xor
cmpb
add
push
faddp
rep
js
inc
pextrw
jae
jnp
jae
loop
lret
int
sub
js
jae
adc
xchg
inc
insl
out
aam
ljmp
jae
xor
or
mov
xor
xchg
cmp
fiadds
mov
jl
lods
mov
mov
push
xchg
inc
out
movsl
dec
movl
orl
cmp
out
mov
pop
push
jnp
or
sbbl
insl
iret
es
pop
mov
push
adc
adc
scas
push
fildl
cwtl
stos
sub
cmp
insb
fildll
xchg
ret
lret
xor
ret
push
or
and
repnz
fdivp
mov
inc
sbb
pushw
cmp
pop
int3
daa
dec
xlat
andl
xor
hlt
out
push
or
cmp
and
aas
out
testb
pop
mov
ja
pusha
adc
push
pop
push
xlat
cmpsb
sbb
rcrb
or
in
jge
out
testl
stos
inc
sbb
jp
lods
daa
lcall
shlb
or
rcll
int
and
sub
pop
addr16
pushf
shll
mov
test
adc
cwtl
sbb
mov
ss
cli
movsb
cld
jnp
sub
mov
andl
in
inc
cmp
ljmp
dec
jg
divb
iret
mov
or
sub
leave
or
arpl
mov
ja
xlat
shlb
test
cltd
fldcw
out
cmp
jp
test
call
or
ja
mov
incb
mov
push
sub
shll
xor
sbb
ds
fiaddl
cmpsb
mov
push
out
ss
ljmp
push
shrb
clc
jns
mov
cs
xor
push
sbb
and
mov
push
sbb
rorl
add
out
push
mov
mov
mov
or
adc
shr
dec
inc
icebp
jnp
es
mov
push
jae
loope
repnz
loope
sub
adc
fiadds
es
mov
mov
dec
xchg
xorl
push
push
adc
imul
or
ljmp
mov
sub
inc
xchg
mov
cs
push
sbb
aam
mov
out
lcall
cwtl
xchg
addr16
inc
fdivrl
mov
rcll
push
add
jbe
fmull
loope
push
rorb
iret
insl
inc
jne
outsb
mov
push
jl
insb
jno
fs
jbe
inc
add
cwtl
push
fnstsw
cmp
fldenv
add
out
clc
mov
mov
hlt
sti
adc
sub
cmpsl
lods
loopne
inc
dec
inc
or
jecxz
rolb
push
repz
cltd
loop
out
ficoml
xchg
sub
popf
add
sbb
push
cmp
cmpsb
enter
jge
scas
mov
mov
orl
mov
das
repz
testb
scas
mov
jg
sahf
enter
inc
sub
mov
dec
das
xor
repz
mov
jecxz
rclb
mov
pop
test
adc
pop
jp
push
jbe
jo
pop
xchg
jne
es
js
push
loop
daa
pop
mov
mov
sbb
call
jge
add
cmpsb
scas
jb
pop
xlat
mov
jecxz
pop
sti
sbb
xchg
push
out
push
push
cwtl
lret
push
sub
addr16
dec
in
repnz
subl
sbb
cmpsl
fsubrl
mov
jbe
mov
jge
pop
into
lods
dec
xor
push
mov
xchg
sahf
imul
cltd
cmp
adc
or
dec
lret
cwtl
lea
repnz
cmp
dec
mov
or
dec
dec
xchg
pop
fldt
lret
mov
sahf
xor
cli
jp
cmp
pushf
mov
mov
xchg
enter
jl
xlat
lds
dec
icebp
fisubl
mov
mov
mov
lods
add
push
mov
test
idivl
fmuls
mov
jecxz
mov
sti
mov
iret
dec
jmp
push
or
inc
testb
cmp
vcvtpd2psy
pop
and
cli
mov
lods
jnp
mov
push
mov
inc
scas
pop
ljmp
mov
jbe
mov
adc
add
adc
subl
jno
in
stos
aas
es
jne
ret
mov
aam
inc
and
enter
jecxz
lock
pop
xor
cmp
xchg
dec
mov
insb
call
add
jecxz
subl
ds
or
or
in
insl
mov
lock
dec
data16
mov
sbb
shrl
orl
pop
aas
pop
xorb
pop
dec
sub
mov
dec
push
sub
mov
stos
cmc
jle
es
push
pop
in
inc
mov
fnsave
sbb
dec
xchg
push
lock
pop
sbb
xchg
add
dec
pusha
lret
aaa
cmp
fmul
jge
sub
mov
xor
stos
push
loop
movsl
xlat
cltd
xchg
push
push
scas
cld
push
cmp
mov
add
inc
imul
jmp
scas
inc
mov
iret
jmp
mov
adcb
lock
add
push
sbb
cmp
pop
jle
and
call
adc
cs
inc
jecxz
inc
out
out
sti
mov
cwtl
sti
pop
lock
and
in
cmp
pop
ret
mov
mov
insb
and
inc
int3
pop
cmp
mov
jl
mov
movsl
sti
ljmp
push
jns
into
mov
xchg
andb
sarl
rol
adc
cmp
add
mov
sbb
jl
sub
or
hlt
call
xchg
mov
and
scas
sub
es
repz
cmp
std
mov
es
fists
fs
xlat
and
cltd
mov
adc
pop
jge
mov
lret
lds
mov
jge
shrl
out
adc
mov
imulb
cmpsb
les
jae
cmc
pushf
loopne
adc
int3
data16
bound
or
inc
push
jecxz
mov
pop
mov
push
or
ja
xchg
cltd
repnz
sub
imul
punpckhbw
jecxz
les
lret
ds
jecxz
adc
pop
sbb
adc
mov
pop
ffree
mov
cld
ret
xlat
outsl
fdivrs
test
xchg
out
sub
xchg
or
mov
outsb
push
nop
cwtl
push
add
jns
mov
popf
in
xor
dec
push
or
pushf
pusha
shrl
call
push
and
lcall
push
loope
out
add
addr16
dec
daa
sub
sub
xor
jb
mov
lret
sbb
push
jge
cmpsb
xor
movsl
orb
pop
mov
push
mov
mov
dec
push
mov
into
aam
or
out
fildl
lret
hlt
ret
je
adcb
lea
mov
sti
pop
xlat
insb
addr16
and
filds
mov
or
cli
in
aad
inc
inc
or
movsb
dec
sti
sub
cs
pop
mov
negl
mov
mov
mov
je
jne
pop
stos
sub
repz
and
daa
mov
out
ds
push
leave
insb
lret
cmpl
mov
movsl
cmc
loop
sahf
fists
mov
jne
mov
scas
or
push
mov
or
pop
ds
cmp
dec
pop
data16
cmp
pop
movsl
mov
mov
sbb
shrl
mull
mov
fs
rcrb
add
adc
imul
mov
in
lahf
insl
jecxz
xchg
jmp
imull
icebp
stos
lret
shlb
pushl
aad
loopne
lret
xchg
cmp
sbb
xlat
dec
jmp
add
xchg
in
push
pop
xorl
xchg
xor
insl
xchg
push
or
aad
loopne
test
cmc
sbb
int
inc
in
sarl
xchg
mov
or
out
divb
xchg
in
sub
decl
mov
dec
inc
sbbb
inc
scas
push
daa
xchg
mov
mov
lret
sbb
push
jb
lea
out
or
pop
out
sar
arpl
lahf
pop
loope
sub
loopne
pushf
dec
int3
mov
cmp
mov
or
int3
inc
xchg
data16
jbe
dec
cs
cltd
mov
sbb
addr16
outsb
jge
sub
xor
iret
enter
mov
negl
mov
push
pop
sarb
jae
pop
mov
stc
std
cmp
aaa
leave
mov
ds
testl
mov
pop
das
add
outsl
es
or
repnz
mov
sbb
out
pop
jb
arpl
dec
roll
lea
and
insb
dec
adc
sahf
test
dec
andl
mov
xor
fdivp
or
lcall
mov
sbb
dec
scas
adc
arpl
dec
bound
jae
sbb
lods
imulb
dec
popf
mov
mov
addb
pop
and
imul
cmc
js
outsl
mov
mov
jnp
or
lock
push
cmpsl
aad
add
or
mov
push
mov
push
outsl
mov
mov
sbb
sbb
pop
shlb
bound
popa
xor
gs
jbe
cld
iret
xor
mov
jno
or
sub
data16
hlt
add
shll
jecxz
adc
xchg
mov
adc
enter
ret
in
into
jae
adc
nop
cli
sbb
sbb
lahf
sbb
sbb
mov
out
int
mov
or
in
sbb
in
in
mov
inc
pop
aad
insb
push
addr16
xchg
mov
dec
cltd
or
into
fstps
insb
sub
mov
dec
adc
adc
inc
nop
mov
dec
movsl
leave
sbb
jmp
mov
scas
mov
and
adc
push
adc
push
cmp
mov
rorb
sti
sbb
pop
pop
lock
pushf
movb
mov
es
xlat
cmp
mov
xor
xchg
mov
sarb
loop
sbb
mov
les
pusha
test
inc
sahf
mov
sub
sbb
cmp
xor
jnp
add
pusha
mov
dec
call
inc
fldl
aam
fnstsw
std
jb
or
sub
lahf
stc
bound
mov
sbb
adc
or
dec
repnz
icebp
sbb
pop
fucomip
in
add
and
enter
sub
push
jb
push
pop
fsubs
scas
icebp
inc
data16
push
fwait
sub
sbbb
out
cmp
push
cs
mov
imul
shrl
sub
push
or
fwait
icebp
or
mov
push
fistps
pop
dec
jmp
cmp
repnz
add
dec
push
sarb
roll
rcll
mov
add
lret
xor
jmp
mov
sti
inc
sub
xor
scas
gs
movb
add
aam
mov
mov
jnp
out
inc
fwait
leave
jmp
jl
sbb
and
aas
and
inc
and
out
and
xchg
inc
repnz
xchg
adc
sarl
ret
sub
popa
lods
sbb
movsb
mov
push
cld
mov
sbb
dec
mov
cmp
or
lds
or
xor
stc
jecxz
sbbb
test
sbb
xor
sahf
repnz
mov
fldenv
inc
xchg
bound
push
adc
fists
mov
mov
les
popa
dec
xor
dec
sbb
imul
stc
in
adc
jge
mov
mov
repnz
lock
cmp
data16
cmp
cmp
clc
cmpsl
call
ficompl
cmp
jmp
out
pop
shl
scas
xchg
pusha
add
pop
inc
or
test
test
out
lret
cmpl
and
and
pop
cmp
pop
into
jl
push
cmp
jl
ds
iret
dec
insb
inc
and
mov
test
out
arpl
outsl
sub
cmp
stos
gs
jle
cmp
xchg
imul
gs
inc
sbb
mov
jo
pop
into
aaa
pop
ss
xchg
push
adc
xchg
sti
add
xchg
sti
xor
xor
fsts
fisubrs
xor
bound
cmp
jae
adc
jnp
pop
inc
xchg
je
or
push
lahf
sbb
jmp
rclb
pop
enter
adc
loopne
mov
push
adc
ss
inc
cmp
cmp
xlat
mov
movsl
into
add
addl
rcrl
mov
test
dec
loope
icebp
leave
xchg
fisubrl
lea
jge
xor
xorb
or
push
aaa
cmp
jbe
xchg
iret
mov
pop
pop
iret
inc
or
and
xor
leave
fisubrs
push
lods
sub
push
push
int
sub
lret
mov
xor
or
cli
aam
jg
mov
or
test
add
mov
push
test
push
das
call
jecxz
inc
mov
xor
js
and
gs
mov
dec
pop
imul
sub
ffree
or
cmp
xor
add
into
cmp
dec
test
push
add
leave
xor
lret
stos
dec
sub
gs
dec
scas
gs
ljmp
les
icebp
pop
mov
mov
inc
int3
sub
test
add
xor
sub
stc
adc
mov
ss
push
scas
aam
sub
out
cmpsb
pop
faddl
xor
mov
es
sbb
pop
add
jecxz
popa
ret
sti
mov
jg
mov
mov
test
cmc
inc
arpl
loop
xchg
test
movsb
idiv
ja
daa
orl
sub
out
sbb
or
sub
push
adcb
mov
and
jg
dec
fistpll
push
out
out
not
pop
mov
inc
loop
rorl
outsb
mov
jmp
shr
push
sub
and
dec
ljmp
cmp
lods
mov
and
outsl
mov
mov
pusha
fsubrl
or
inc
inc
roll
mov
int3
push
xor
adc
lret
bound
ljmp
sub
mov
inc
ljmp
int
repnz
mov
test
or
daa
xchg
ret
addr16
movsb
adc
repnz
add
lret
pop
mov
dec
iret
jle
adc
or
clc
test
dec
loop
sbb
mov
test
dec
aas
push
mov
test
fstps
in
shrl
mov
lahf
and
inc
mov
arpl
scas
sbb
add
fnstenv
sbb
add
and
push
and
jbe
mov
xor
repz
inc
jo
inc
lock
loop
pop
adc
nop
and
push
pusha
and
or
xchg
push
jne
cmc
incl
dec
adc
and
adc
inc
outsb
xor
push
cltd
insb
scas
es
jno
cmp
popf
mov
stos
outsl
push
sub
xchg
pop
dec
pop
jno
repnz
jno
cmc
pop
fnsave
sub
cmpsb
popf
xor
sub
dec
xchg
mov
adc
bound
push
leave
push
sbb
xor
add
push
sub
or
inc
loopne
cmc
xor
ss
add
cmp
psubb
out
pop
movsl
cli
test
inc
inc
dec
addl
sahf
mov
shr
jno
test
mov
xor
mov
rolb
nop
imul
imul
jo
and
ja
xchg
das
sub
inc
les
nop
movsb
das
movsl
fwait
and
movlps
incb
imul
sti
lock
cmp
jg
mov
cmp
cmp
je
fdivl
xor
in
sbb
xchg
sbb
mov
pushf
sbb
push
xchg
stos
insb
mov
int
pop
jmp
clc
mov
or
xor
sbb
xchg
fbstp
push
cmp
inc
stc
pop
push
ret
adcb
xchg
push
mov
pop
mov
and
and
jae
pop
lret
mov
add
adc
loop
add
mov
inc
addr16
outsb
mov
cmp
js
push
popf
jmp
das
sub
stos
mov
push
lods
inc
jo
inc
or
mov
add
xor
mov
out
pop
incb
test
push
jbe
ds
jnp
popa
mov
mov
ffree
std
mov
xor
test
outsl
xor
cltd
jmp
dec
mov
je
cmp
mov
mov
ljmp
repnz
mov
cltd
shrb
fbstp
xor
and
cwtl
mov
cmp
bound
out
jne
out
add
dec
dec
aam
xchg
dec
push
sahf
pop
pop
lods
shll
daa
dec
add
mov
mov
push
and
test
mull
testb
aam
push
jg
lock
and
mov
jbe
test
outsl
adc
scas
lcall
xor
rol
into
mov
arpl
insb
rclb
inc
pop
addr16
xchg
stos
jge
dec
fwait
divb
int
int3
jecxz
call
das
cs
inc
pop
xchg
faddl
push
jae
addr16
fs
inc
mov
inc
int3
xchg
int3
xorl
pushf
push
inc
fxch
xchg
pop
jp
jnp
cmp
fdivs
sub
aaa
mov
aad
fs
mov
int3
xor
sub
iret
cmp
ret
lcall
pop
sub
ficoml
xchg
loop
test
addl
mov
sti
cltd
rorl
inc
cmp
out
sbb
pop
adc
test
int3
in
cmc
in
ljmp
xchg
fcmovu
fldenv
jb
icebp
leave
or
jno
dec
add
inc
enter
pop
test
daa
lahf
scas
je
cli
sub
aam
mov
mov
das
dec
mov
aas
sub
scas
and
in
in
push
push
imul
andb
cmp
add
inc
insl
fcomi
sbb
je
jbe
insb
push
js
mov
shr
xorl
movsl
cmp
sub
pop
jle
call
mov
rcll
jno
add
orb
in
ljmp
in
repz
rolb
and
pop
mov
or
add
adc
push
lock
mov
lret
sub
cmpsl
mov
mov
popf
scas
mov
or
cmc
icebp
mov
pop
test
mov
dec
test
mov
mov
cld
push
xchg
in
sahf
ja
scas
mov
inc
aam
test
mov
orb
loop
push
sub
pop
jnp
or
int3
add
adc
cld
or
mov
insl
cbtw
into
lcall
adcl
arpl
xchg
sahf
or
bound
jns
lock
rorb
cmp
dec
lods
add
in
sbb
subb
mov
out
xchg
imul
adc
jb
or
jg
idivl
mov
loop
xchg
dec
mov
insb
cmp
xor
jnp
dec
movq
lods
xor
xlat
das
clc
xor
scas
fs
fwait
inc
outsb
push
stos
cmp
ret
fisttps
lds
sahf
inc
inc
incl
push
mov
mov
mov
sub
xor
xor
inc
sbb
into
inc
ror
pop
dec
inc
adc
aas
loop
fwait
aas
pop
inc
adc
or
or
push
mov
outsl
mov
fstpl
ret
mov
lds
add
jle
dec
loop
dec
dec
stos
cwtl
and
dec
pusha
in
lret
sbb
inc
cwtl
mov
inc
sbb
push
incl
mov
push
loop
dec
pop
dec
rcll
cmpsl
pop
pop
shrb
icebp
add
out
mov
cli
xchg
fcomp
fmulp
testl
jmp
sub
and
xlat
sub
shll
push
mov
xchg
lods
xchg
push
ret
das
js
imul
dec
xor
mov
int3
shlb
addr16
push
addr16
mov
push
in
outsb
pop
enter
lea
addl
xchg
cmpsl
xor
cmp
sti
fadds
lret
popf
ja
push
pop
ljmp
ss
in
into
or
jmp
or
cld
cmpsl
rcrl
leave
or
pop
jecxz
xor
cld
js
push
dec
pusha
andb
in
mul
jg
mull
fisttps
pop
mov
sub
mov
adc
nop
in
ljmp
sarb
adc
test
cmp
lods
push
fisttpl
ds
push
outsb
adc
lods
fneni(8087
fs
outsl
iret
pushf
mov
push
in
xor
inc
inc
push
xchg
push
inc
iret
insb
mov
orb
addr16
xor
enter
das
rolb
mov
scas
fistps
sub
adc
adc
idivb
inc
xchg
imul
loop
jb
adcl
jge
mov
loopne
out
ljmp
lret
xorl
mov
jl
loopne
outsb
xchg
aas
psubb
xchg
add
jecxz
dec
das
jmp
mov
or
subb
cmp
loope
and
cmpsl
jnp
pop
adc
cs
into
pop
aad
or
enter
mov
push
add
or
xor
sbb
mov
movsl
xor
stos
lods
mov
dec
lcall
fwait
push
jns
test
in
mov
xor
iret
ja
loope
js
movsl
or
dec
test
imul
call
adc
pop
aam
out
adc
in
mov
jo
dec
das
out
xchg
adc
scas
pusha
jo
movb
dec
mov
adc
xlat
pop
js
lock
add
aad
mov
sub
jae
xor
andb
or
cmp
lea
mov
dec
inc
cmpb
and
cmp
sbb
shl
movb
fistpl
nop
mov
sbb
xchg
mov
push
dec
fwait
xor
dec
jns
add
arpl
pop
pop
inc
int3
inc
mov
push
xor
int3
jp
fldenv
les
cmpsb
dec
xchg
adc
and
ret
sbb
aam
mov
inc
clc
mov
jecxz
inc
les
xchg
pop
mov
xor
les
push
out
xor
enter
mov
sahf
inc
iret
xchg
out
rclb
rcr
mov
mov
aaa
dec
cmc
pop
fdiv
sbb
sub
nop
and
call
rcrl
cmpsl
push
xlat
push
jge
faddl
or
add
pop
lods
jmp
push
inc
xchg
jnp
and
mov
mov
push
lcall
mov
jle
sahf
repnz
outsl
fisubrs
xor
std
xor
scas
call
ja
fmul
data16
das
clc
loop
xchg
xor
test
inc
test
in
jne
dec
movsl
push
mov
jp
loope
dec
loopne
lahf
sbb
push
adc
xchg
mov
adc
les
xchg
jg
pop
dec
inc
pushf
add
jnp
cli
arpl
push
ret
mov
add
lds
orb
cmpsb
mov
xchg
shl
sub
adc
nop
mov
mov
mov
cli
fdivl
pop
std
cwtl
lds
mov
stos
and
lret
rolb
movsl
fiadds
sbb
add
fisttps
jnp
inc
les
push
add
scas
jbe
jle
into
movsl
aam
pop
mov
lea
jb
aas
mov
data16
daa
inc
sti
push
inc
mov
or
mov
cli
pop
and
test
daa
rolb
ss
cmp
and
call
mov
fildl
inc
fisubrs
jle
mov
loop
daa
sub
xor
adc
in
adc
test
push
jge
pop
or
push
int
dec
ljmp
or
fisubrs
sbb
lret
add
xor
lahf
loope
aas
out
mov
push
xor
cltd
xor
dec
cwtl
push
xchg
lea
fnstenv
outsl
fiadds
dec
addb
xchg
push
xor
lods
xor
sub
xchg
outsl
push
push
lret
cmp
lods
add
rcll
push
mov
ret
jg
ret
jmp
cli
push
jns
xchg
ljmp
lret
push
lea
pop
mov
inc
in
inc
or
cld
sub
pushf
lock
push
hlt
mov
je
scas
and
adc
les
adc
rcrl
cld
ds
getsec
push
pushf
mov
sub
pop
rol
and
mov
cmpsl
dec
test
mov
hlt
xor
dec
push
mov
xlat
pop
mov
xchg
add
sub
loopne
jns
sub
jecxz
call
aas
femms
fwait
ja
imul
in
dec
xor
jno
jl
dec
fnstsw
adc
sub
mov
loop
sub
push
mov
xor
dec
xchg
push
jae
mov
ss
push
and
mov
iret
sti
ss
lahf
dec
inc
dec
enter
inc
xchg
sub
pop
and
pusha
mov
jp
fildll
mov
mov
mov
fdivs
or
and
mov
add
xchg
aam
lcall
sbb
inc
cwtl
mov
sub
test
push
sub
lods
sub
out
fsubl
push
out
addr16
ljmp
js
hlt
xor
cmp
hlt
adc
loope
mov
addr16
les
dec
in
arpl
gs
cmpsl
loopne
mov
and
and
stc
add
pop
out
sub
push
mov
cmp
push
jns
scas
push
push
loop
or
les
add
jmp
in
fs
mov
pop
lret
arpl
pop
mov
hlt
push
sbb
mov
mov
ljmp
test
jb
pushf
mov
jmp
rcr
in
out
pop
push
jns
mov
inc
scas
or
shrl
lret
lahf
push
loopne
daa
add
pop
adc
les
or
int3
in
test
test
or
add
stos
sbb
out
out
cmp
mov
mov
xchg
inc
or
push
or
mov
je
xchg
add
jge
adc
push
jmp
push
mov
dec
rcrl
adc
cwtl
mul
xchg
jns
out
sub
xchg
aad
pop
xchg
push
in
imul
sbb
pop
push
push
sbb
sub
mov
or
add
lea
xor
xchg
cmp
push
dec
sub
mov
call
popf
jns
add
cmpl
xchg
mov
pop
cs
in
jmp
imul
lods
popf
aas
loope
add
mov
sbb
mov
inc
or
hlt
call
sti
cwtl
pop
repz
pushf
push
pop
fnstcw
fdivr
lods
loope
sbb
xchg
mov
sub
loop
xorb
lret
adc
and
push
jb
movsl
add
test
test
adc
jg
int3
repnz
int
test
jl
cmp
ffreep
or
cld
das
add
and
dec
cmp
out
push
test
pop
cmpsl
outsl
test
lahf
push
add
pop
pop
add
pop
pop
inc
pushl
inc
mov
jp
xchg
es
pop
cmp
lcall
rorl
fwait
movsb
cs
jle
leave
jno
jne
adc
fidivrl
aas
xor
hlt
mov
ja
popa
sbb
fidivl
popa
xchg
dec
mov
sub
fldt
jle
divb
add
fisubrl
dec
in
popf
fidivrs
stos
inc
inc
negb
push
or
pop
and
pusha
loope
dec
movsl
sbb
sti
ret
or
lock
adc
mov
or
jp
nop
push
fcoml
or
sarl
mov
add
enter
sbb
rclb
cmpsb
cld
mov
and
xorl
imul
sbb
addl
mov
jno
push
push
es
daa
jnp
dec
adcb
pop
fmull
adc
aaa
in
scas
cmp
jae
add
mull
scas
adc
cmpsl
adc
cmc
stc
pop
int
call
cmp
cltd
shrl
jne
out
lods
divb
sbb
dec
repz
test
into
push
cmp
leave
in
mov
in
and
push
add
dec
loope
mov
iret
push
lcall
adc
push
scas
sbb
pushf
imul
in
pop
or
xlat
test
push
jmp
mov
sbb
popa
add
loop
mov
push
sbb
sahf
lcall
or
xchg
jb
jp
aam
dec
mov
jb
dec
divl
movsl
fcoms
adc
inc
icebp
cwtl
pop
or
popf
cmc
mov
ret
insl
fldcw
jnp
stos
mov
fidivrl
das
lahf
dec
jae
and
in
dec
popa
aaa
mov
or
jb
jg
decl
and
push
fsubrl
adc
aam
pop
cmpsl
mov
sub
test
or
scas
je
or
sahf
sub
andb
in
test
loop
fstpt
mov
xor
pop
aaa
sbb
imul
cmp
xlat
aaa
mov
xchg
cmp
inc
testb
xor
mov
in
aas
mov
fsts
aad
mov
mov
in
xchg
or
mov
mov
jno
push
or
pop
mov
rolb
in
sahf
sbb
push
fsubr
sbb
data16
out
fs
jecxz
imul
dec
addr16
jge
pop
push
adc
cmc
lahf
add
out
and
sub
jecxz
mov
jge
xchg
mov
repz
adc
xor
cs
inc
push
aam
cmc
push
mov
add
or
out
pop
cmp
gs
subb
sbb
out
xor
rorb
jl
shlb
mov
fwait
and
mov
pushf
ret
andl
test
push
cli
fs
adc
xchg
nop
in
lds
xchg
inc
lcall
jl
xchg
and
jns
ret
adc
hlt
lock
clc
aaa
les
pop
sub
sbb
orl
loope
adc
inc
out
in
repnz
pushf
fs
incb
shll
aaa
dec
mov
ret
pop
xchg
xor
pushf
bound
or
pop
clc
out
pop
mov
clc
in
rep
test
jne
mov
outsl
outsl
jle
push
test
jp
fnstcw
push
bnd
sub
clc
test
push
mov
fadd
iret
in
mov
cmc
pushf
jmp
sub
jbe
push
daa
mov
out
xor
ret
mov
cmp
mov
jb
push
sahf
out
test
into
cwtl
sub
leave
enter
sahf
add
lods
xchg
lock
dec
lods
fsubs
sti
pop
and
xchg
cmc
lods
cmp
pop
leave
mov
xchg
and
fnsave
imul
push
xor
sbb
mov
aas
aam
push
bound
ljmp
push
mov
jl
lods
jmp
jmp
sub
xchg
in
cli
popa
loopne
jecxz
pop
push
pusha
fcoms
cmp
pop
fwait
pop
pop
adcb
insl
or
rol
dec
rclb
sub
mov
adcl
mov
push
sbb
lea
mov
idivl
fcomp
push
push
fldl
push
pause
and
mov
inc
xor
insl
imul
pop
sbb
dec
mov
jmp
ja
sbb
jno
push
stos
pusha
mov
pop
and
xor
je
sub
push
fstl
inc
inc
push
rcrl
dec
mov
mov
mov
pop
push
jmp
call
push
pop
adc
pop
push
xchg
mov
les
fstl
mov
data16
test
sti
xor
pop
adc
inc
lea
inc
xor
stc
mov
loop
lds
mov
push
push
inc
dec
pusha
pop
cli
pushf
in
cmp
stos
xchg
gs
out
test
xchg
cmp
lods
out
pop
int3
xchg
jne
jecxz
jl
push
xorb
push
dec
mov
mov
lock
jl
pop
xor
xchg
sub
aad
xchg
stos
and
fstpl
jmp
ficoms
cli
enter
mov
inc
or
lods
pop
stc
and
mov
push
xor
nop
inc
push
push
shr
popf
divb
in
sbb
fmuls
mov
aas
jge
lock
cmp
jns
xor
pop
sub
adc
push
lods
icebp
mov
stc
sbb
daa
push
aaa
jns
inc
imul
loopne
inc
xchg
mov
clc
test
out
out
mov
jbe
xchg
jp
out
jge
outsl
jb
and
add
les
xor
mov
cmp
and
scas
fiadds
test
or
hlt
loop
shlb
test
push
insl
aam
enter
icebp
and
cmpl
and
or
pop
fnsave
mov
lds
jle
pop
andb
xor
mov
or
cwtl
pop
pop
ljmp
mov
cmpsb
mov
xorb
sbb
add
sub
test
enter
int3
fisubl
outsl
cld
popa
mov
sbb
sbb
or
and
leave
lahf
push
lret
popa
fidivrs
adc
in
repz
push
dec
rclb
sarb
repz
leave
out
mov
mov
add
pop
and
cs
sbb
inc
test
xchg
cmp
or
jb
das
adc
dec
jb
dec
mov
jns
add
sbb
xchg
loop
pusha
sbb
sahf
jno
mov
sbb
dec
inc
push
loop
sarl
call
push
jl
lds
cs
mov
push
lods
rorl
dec
jmp
sti
sbb
arpl
mov
pushf
negl
shrb
nop
xchg
mull
and
mov
xchg
stos
mov
inc
inc
leave
bound
ja
aad
daa
pop
or
imul
sub
and
adc
daa
sub
mov
xchg
leave
cltd
mov
std
sub
push
jg
jnp
pop
mov
jbe
mov
lcall
imul
push
stos
mov
push
push
jae
hlt
mov
aad
pop
sti
pop
xlat
in
push
and
out
sti
fs
imul
or
cmp
ret
repnz
inc
jl
pop
int
xlat
cs
adc
mov
xor
and
pop
leave
int3
addr16
lret
clc
cmp
sbb
enter
inc
shll
push
cmpsb
push
pop
nop
push
sti
fdivrs
dec
std
jl
addr16
mov
xor
dec
das
xchg
jnp
lret
pop
stos
adc
int
push
jecxz
mov
jle
movsl
cld
pushf
mov
add
rcr
outsl
pop
rcll
sahf
push
je
or
nop
jae
arpl
mov
insl
dec
daa
jae
mov
mov
adc
pop
fcomps
inc
cmp
sbb
dec
xchg
adc
dec
jge
aas
inc
adcl
loop
repnz
test
rorl
movsb
cmc
or
test
insb
int3
jbe
sahf
lock
mov
mov
rcr
lds
pop
iret
hlt
test
inc
inc
outsl
or
xchg
aas
cmp
adc
outsb
sbbb
jbe
mov
bndldx
sub
and
mov
pop
xorb
lahf
pop
mov
mov
xchg
lea
sub
clc
cmp
lcall
dec
subb
jp
frstor
mov
mov
iret
mov
adc
or
jl
lcall
sbb
push
or
rcll
and
push
dec
cmp
mov
mov
jl
add
and
xor
dec
cmp
adc
das
jmp
loope
fimuls
mov
push
pushw
xor
mov
mov
cmp
add
adc
dec
or
pop
and
cmp
jbe
inc
sub
orl
or
mov
xchg
adc
out
mov
test
icebp
sub
cmpsb
mov
mov
push
repnz
sub
xchg
xor
cmpsb
jae
adcb
mov
inc
scas
jno
adc
fsts
adc
pusha
stos
cli
and
lahf
sbb
pcmpgtw
into
xchg
pushf
sti
loopne
movsl
addr16
pop
repz
aaa
loope
mov
lret
push
lock
or
pop
es
clc
je
inc
icebp
cmpsl
cmc
dec
inc
leave
add
or
dec
cli
mov
jecxz
hlt
push
std
push
jp
dec
out
pusha
pop
xor
cmp
or
push
fdivs
cmp
and
dec
adc
jb
jns
shlb
cmp
jo
enter
mov
jb
outsl
mov
mov
xchg
mov
shll
xor
mov
lret
xlat
nop
cmc
inc
sbb
lds
loop
mov
push
sarb
or
sub
lods
test
stc
mov
jns
mov
repz
pop
push
and
sbbl
sbb
push
repnz
add
in
arpl
add
fwait
inc
inc
jecxz
jne
outsl
xchg
push
sbb
dec
push
repnz
ret
stos
jbe
fisubs
aam
inc
test
xor
aas
ja
lods
leave
imul
repz
test
sti
sub
pop
fstpl
cli
pop
and
lods
inc
loope
pop
jb
ljmp
lods
lret
or
inc
fisubrl
pop
imulb
jecxz
sbb
jecxz
mov
clc
clc
ret
sbb
xchg
xchg
and
std
popf
jecxz
repz
add
mov
xor
ja
push
xchg
mov
fidivrs
clc
stos
int
stc
and
data16
jle
ds
sub
sbb
shl
into
outsb
fcoms
cmp
pop
leave
adc
je
fnsave
mov
xchg
dec
fldl
pushf
mov
int
add
mov
jge
arpl
sbb
jae
sub
push
sbb
ljmp
aam
add
es
adc
rcrl
rorl
or
imul
cli
les
call
mov
push
nop
out
stos
xchg
clc
incb
mov
stc
push
pop
addb
int3
aad
dec
movsl
jne
adc
sub
adc
mov
cs
loop
fwait
xchg
cmp
pushf
jns
in
jnp
ljmp
add
fcoml
je
loope
xor
out
in
xor
mov
dec
cmp
out
or
insb
popf
xor
repnz
lock
scas
sub
es
fldt
leave
cmpsb
jno
popf
clc
repnz
mov
mov
and
out
xchg
lods
dec
shll
and
jmp
inc
arpl
stos
sti
in
testb
add
push
lock
test
xor
mov
and
sbb
xchg
loopne
sti
xor
mov
aaa
imul
sub
arpl
jle
in
sbb
push
test
imull
add
jg
in
add
jl
sub
out
sbb
test
mov
out
xor
adc
sub
mov
mov
incl
mov
std
push
test
cwtl
fdivl
mov
in
aas
mov
dec
aad
andb
push
gs
aaa
mov
rolb
adc
fldcw
cmp
fcmovne
sbb
rorb
adc
pop
dec
push
mov
xchg
movsb
stos
out
mov
mov
add
sub
mov
inc
addr16
push
rcrl
lret
pop
shlb
into
lret
notb
cltd
imul
pop
inc
movsb
push
xlat
iret
mov
leave
push
sbb
sub
add
sub
sbb
mov
mov
push
fcom
aad
add
push
std
fwait
int3
fists
test
dec
xor
stc
mov
daa
and
inc
add
iret
mov
popf
pop
lea
mov
jbe
es
repz
jbe
mov
sub
incl
cld
xor
add
or
jae
xor
pop
std
xchg
and
es
jmp
pop
mov
test
xchg
sbb
aam
mov
jecxz
lcall
pushf
cwtl
adc
outsb
pusha
jmp
jl
push
jle
movsb
mov
clc
jnp
jge
adc
in
pop
push
cmp
jge
xor
mov
dec
mov
inc
in
xor
pop
sub
insb
adc
push
sbb
push
sbb
nop
call
movsl
pushf
scas
fidivl
push
inc
cltd
pop
icebp
dec
aam
or
add
ret
lock
rorb
mov
adc
les
jmp
aas
xchg
sti
add
cmp
mov
fs
xchg
cmpsl
imul
dec
out
movsl
and
sub
xchg
jnp
fldcw
pusha
xchg
fsubr
pusha
dec
push
xchg
cs
aas
mov
xor
fsubl
sbb
in
and
nop
push
add
sbb
hlt
add
imul
push
cwtl
shr
or
jo
mov
jg
sub
in
icebp
insl
cmp
mov
cmp
shll
pop
xchg
pushf
dec
jno
cs
adc
cmpsb
shr
ja
je
out
aaa
pusha
mov
daa
fldt
cmp
decb
mov
fcmove
pushl
and
jecxz
int3
out
xor
subb
cmpb
and
ja
subb
sbb
fs
xchg
es
and
cmp
adc
pusha
mov
push
jle
cmp
into
repz
xchg
fcoms
push
lret
xor
hlt
cwtl
xchg
adc
je
mov
popf
sbb
js
inc
ljmp
mov
or
ficompl
jg
in
leave
cli
dec
inc
jo
adc
fistpl
fistl
jmp
cmp
push
ljmp
xor
stc
push
or
ljmp
inc
push
xor
rcll
shlb
mov
aas
dec
bound
imul
rcll
sbb
push
orl
cmp
imul
mov
add
mov
int3
pop
push
dec
rcrl
inc
test
xor
xchg
or
and
xor
pusha
sbb
lock
repnz
or
shr
negl
ljmp
push
push
mov
icebp
inc
push
inc
mov
jno
inc
dec
mov
roll
mov
pop
daa
insb
push
aad
ja
and
cs
jp
jmp
mov
test
adc
mov
xchg
outsl
inc
jg
or
jns
jmp
lods
jbe
adc
push
lahf
call
adc
cmp
lock
cmc
clc
mov
xchg
pusha
pop
scas
mov
jb
pop
push
fildl
out
stos
divb
jns
les
mov
dec
lea
adc
ds
repz
inc
es
mov
sub
shll
in
add
jb
test
mov
or
addl
inc
js
pop
pushf
adc
mov
sti
test
or
ret
out
sbb
rolb
mov
sbb
mov
push
xor
ljmp
adc
inc
add
push
insl
ret
frstor
xor
jmp
xor
das
cmp
mov
aad
movsl
sub
subl
repnz
enter
sub
dec
fistl
add
jno
xor
aad
stc
push
push
xchg
jnp
xor
cld
mov
sarl
fwait
fwait
mov
cmp
cld
xchg
neg
es
and
mov
adc
dec
mov
cli
sbb
arpl
xor
sbb
shll
filds
sbb
xchg
jbe
les
cld
and
push
cmp
sub
push
and
daa
aaa
ss
popf
lahf
out
aam
adc
pusha
icebp
sbb
push
daa
inc
sub
cmpsl
xor
add
sbb
add
rcrl
outsl
out
add
aaa
inc
das
dec
jle
add
xchg
mov
adc
sub
mov
pushf
mov
mov
fildll
push
add
aam
sarb
or
out
mov
arpl
jns
pop
pop
popa
std
jmp
mov
fisttps
jo
pop
push
flds
pop
push
xchg
shrb
stos
out
loopne
mov
sub
add
xchg
fwait
pop
sbb
mov
inc
push
jl
push
pop
sbb
idiv
jg
jo
icebp
or
xchg
inc
arpl
push
or
dec
inc
push
and
ja
movsl
fucomip
shll
and
adc
inc
mov
pop
push
dec
movsl
outsl
mov
push
jmp
mov
jl
jmp
mov
add
dec
cli
or
inc
je
into
fimuls
js
dec
jb
sub
negb
or
fcompl
mov
cmpsb
movsb
stos
mov
xor
scas
jmp
test
mov
out
push
aaa
jns
daa
inc
out
mov
and
cwtl
cmp
cmp
cmp
loop
es
out
xchg
mov
push
adc
cwtl
xchg
inc
cmovno
ret
dec
insl
fwait
not
fcoms
cli
les
xchg
iret
sub
or
in
pop
dec
fcoms
cmpsb
pop
push
repnz
jge
xor
test
jmp
cld
in
dec
pop
popa
mov
cmpsb
pop
xor
mov
push
inc
add
int
or
push
fdivrs
xchg
xchg
test
jecxz
cmp
divl
or
mov
dec
lods
stos
adc
sbb
mov
imull
pusha
mov
inc
imul
mov
repz
nop
test
pop
or
stc
les
leave
lahf
inc
repnz
arpl
sar
sahf
xor
mov
jp
push
hlt
sub
jle,pt
cmpsb
inc
je
fwait
pop
imul
ficompl
jecxz
ret
mov
pop
cmp
lahf
stos
sti
cmp
adc
ss
stc
fsubs
xorb
sub
pop
cmp
clc
pop
mov
xchg
loope
sub
jb
out
out
cmp
or
inc
ss
mov
popl
dec
jg
push
out
mov
mov
popf
add
mov
mov
mov
aaa
or
movsl
or
movsl
xor
add
stos
lods
jnp
mov
in
les
push
fbld
jge
stos
cmp
adc
cmp
addb
pop
ret
cmp
sbb
pop
mov
mov
pop
mov
or
jg
sbb
aam
mov
arpl
sub
fwait
sbb
cwtl
daa
clc
xchg
mov
xor
ja
lock
stos
clc
ljmp
mov
icebp
push
xchg
pop
dec
inc
call
out
sub
shll
push
lret
mov
aam
jecxz
dec
dec
adc
movsl
push
mulb
add
sub
mov
fdivs
int3
jns
jne
push
mov
push
mulb
addl
sub
fdivs
movsl
mov
popa
jp
cs
pop
into
loopne
test
hlt
mov
loope
cmpsl
imul
mov
leave
jae
arpl
insb
insb
push
xor
js
int
inc
pop
jo
xchg
jmp
xchg
pusha
lock
jno
cmpsl
cld
mov
lret
pop
pop
inc
jbe
popl
loope
test
mulb
cmp
ds
mov
xchg
sub
mov
inc
mov
out
dec
and
xor
jae
decb
or
cmpsb
pop
movl
inc
adc
jp
push
roll
xor
xor
sub
mov
inc
mul
fistpl
test
jmp
sbb
sbb
pop
ror
jns
or
fsubr
movsb
int
int3
mov
inc
pushf
int3
sub
cmp
sub
popa
daa
xor
xlat
es
push
ljmp
cs
andl
cmc
repz
lahf
mov
cmp
imul
andl
lea
ret
movsb
sbb
stc
xchg
mov
fidivrs
lods
rcr
fstps
pop
pushf
insb
adc
mov
lea
dec
and
push
popa
mov
rclb
bound
dec
mov
adc
sbb
fisubrs
sbb
xchg
insl
test
mov
pop
rep
icebp
inc
shr
dec
js
mov
dec
mov
lret
mov
xchg
popa
jge
sbb
pop
pushf
call
hlt
pop
adc
jae
hlt
ja,pn
cs
shufps
out
dec
js
adc
in
scas
icebp
jge
mov
cwtl
cmpsb
fistpll
dec
jmp
or
dec
and
jnp
jae
inc
add
cmp
lock
push
adc
pop
mov
jno
mov
cs
and
push
lret
jns
push
jb
aas
adc
in
aas
shll
lret
stos
testb
in
and
mov
inc
pushf
mov
idivl
add
push
repz
ret
dec
xchg
cmp
and
imul
pop
xchg
incl
int
je
les
inc
data16
fcomps
mov
ret
nop
insb
nop
testb
sub
and
dec
fldenv
push
inc
sbb
lea
scas
mov
ja
nop
test
shlb
mov
mov
jns
or
xchg
jecxz
pop
mov
cs
sahf
mov
pop
int
dec
mov
repnz
cmp
pushf
fs
and
lret
repnz
add
jmp
sub
mov
pop
pop
jnp
and
int3
or
cmpl
and
mov
fildl
adc
out
in
rcll
add
lcall
scas
int
or
lret
outsb
push
in
mov
inc
adc
cmp
mov
rcl
repz
sub
jmp
icebp
fdivrs
dec
push
jns
xchg
je
aad
xor
xchg
aas
and
mov
xchg
add
popa
sub
stos
pop
jg
out
sahf
add
dec
xor
std
cmp
mov
adc
push
pusha
ja
xchg
jns
sub
data16
sub
int3
adc
pusha
push
sub
dec
fsubrl
subl
xchg
mov
or
cmp
ret
testl
mov
cld
xchg
mov
aam
rclb
mov
insl
xor
pop
stos
test
sbb
icebp
mov
mov
ret
lahf
xor
adc
and
mov
add
pop
xor
fmul
xchg
daa
mov
jge
pop
mov
int
clc
sti
loop
loope
fldcw
iret
mov
rclb
pushf
lock
out
cmp
adc
pop
pop
add
mov
aad
pop
or
mov
iret
xchg
dec
sub
imul
arpl
stos
mov
jno
push
and
dec
adc
outsl
sbb
or
mov
xlat
popl
pop
pop
sti
test
pushf
cmpb
or
ljmp
dec
fs
loopne
mov
sub
lea
rorl
jae
mov
mov
xchg
rorl
push
xchg
rorb
insb
jge
sbb
je
rolb
mov
push
add
jmp
and
adc
mov
ret
or
sbb
xor
push
repz
pop
or
enter
ds
aad
mov
test
lret
adc
dec
add
xchg
pushw
lcall
or
mov
lea
push
bound
push
das
add
jae
sub
aam
xchg
dec
movsl
jo
mov
aas
pop
jns
xor
bound
xchg
and
jae
cli
lcall
push
sub
add
mov
test
dec
cmp
add
ficompl
xor
test
popa
sub
xchg
out
or
pop
sub
jns
es
mov
jle
out
inc
das
jno
push
sub
aaa
or
sbb
push
cmpsl
adc
push
subl
pop
pushl
out
xor
push
gs
push
mov
cmpsl
mov
push
add
xor
push
pushf
xor
and
js
push
rcrb
cmp
sbb
cmp
mov
lahf
dec
xlat
out
mov
cmp
fidivs
mov
pop
ja
inc
mov
cld
sbb
xor
shrl
mov
cmpsb
sbb
mov
jo
or
shl
jo
mov
int
or
movsb
dec
ror
nop
pop
lea
sub
add
inc
cmp
cmpsl
rcll
mov
xor
sbb
push
push
mov
push
inc
lcall
fbstp
popa
pop
mov
das
scas
xchg
insb
mov
sub
sub
addr16
adc
mov
or
in
fs
xor
cwtl
scas
fs
mov
add
pushl
dec
fisubrs
test
adc
repnz
adc
dec
and
push
mov
js
xchg
push
lock
scas
mov
xchg
out
adc
sbb
mov
sub
outsl
ret
and
adc
int3
dec
fnstsw
sbb
sar
idivl
shrl
ljmp
pop
adc
cmp
sarb
adc
add
lcall
ffreep
add
push
hlt
fdivrs
repz
into
xchg
pop
cmp
rorb
icebp
xchg
xor
jbe
adc
rorb
arpl
out
jl
mov
sbb
int
jg
push
jnp
cmp
fimuls
pusha
or
xchg
fs
hlt
stc
bound
cld
popa
pop
loope
das
inc
test
sbb
jb
int
scas
jae
call
dec
sbb
pushf
das
rcrb
pop
cmpsb
roll
inc
inc
sbb
lret
add
lahf
inc
pop
sbb
sbb
mulps
cmp
roll
stos
cmp
ret
notl
repnz
popa
stos
pop
or
push
js
and
imul
fs
iret
movb
push
push
out
or
push
adc
or
enter
aam
jmp
das
mov
mov
sbb
add
sub
mov
cltd
jle
ret
xchg
sahf
call
inc
jp
or
xchg
lods
inc
sbb
pop
mov
loope
mov
jle
mov
iret
nop
cltd
mov
mov
xchg
sbb
sub
cmp
in
sbb
lods
pop
ss
xchg
adc
sbb
in
loope
imull
inc
push
lret
pop
sub
scas
xor
xchg
adc
out
mov
test
pushf
int
es
addl
out
int
cs
xchg
mov
and
jge
jnp
mov
std
pop
call
xrelease
pop
mov
mov
pop
and
daa
add
cmovns
pop
dec
ds
add
imul
es
fwait
iret
inc
pop
icebp
arpl
stc
add
cmpsl
adc
xlat
or
in
mov
mov
lahf
sub
das
out
cmpb
outsl
repnz
inc
cltd
lcall
stc
adc
sub
pop
jg
mov
or
clc
xchg
pop
hlt
add
gs
inc
and
cmpsl
push
test
ds
addl
push
enter
sbb
xchg
inc
fidivl
call
call
mov
pop
jp
insb
pop
aad
xor
push
cs
fcmovbe
shll
popa
stc
stc
and
xchg
dec
cmp
adc
mulb
jo
js
jecxz
fidivrs
lock
xlat
lret
inc
shrl
enter
adc
inc
scas
cmp
cmpsl
mov
cltd
dec
in
xchg
push
jns
movsb
sub
jnp
or
or
mov
or
lahf
loop
dec
lea
ljmp
xchg
push
pop
cmp
movsl
pushf
mov
sub
pop
outsl
mov
fs
aas
insb
sbb
insb
repnz
repnz
shrl
push
mov
cmp
cmp
lods
and
fadd
xchg
jns
cwtl
fldt
sarl
mov
outsl
mov
lods
mov
clc
bound
jmpw
ja
fucomi
and
mov
cmp
push
mov
frstor
in
aam
jg
sub
ret
mov
add
or
pushf
inc
dec
mov
pop
xlat
stos
xchg
punpckhdq
mov
cmp
popa
pushf
cmc
jno
dec
js
ficompl
pusha
fstl
mov
or
sti
shlb
push
loop
enter
aad
mov
addr16
loopne
adc
mov
mov
jo
fwait
popf
in
dec
jns
movsb
pop
test
sbb
movsb
add
mov
mov
xorl
orl
adc
adc
ds
mov
mov
inc
loope
aad
movsb
nop
xchg
lea
scas
or
fsubrp
mov
or
lock
mov
jbe
xor
inc
sar
repnz
shr
xchg
push
jp
icebp
subb
push
insl
jge
pop
lahf
and
scas
push
lods
sub
mov
mov
and
xchg
test
mov
js
add
lods
scas
cmp
lods
inc
xorb
and
adc
dec
lcall
lret
adc
jae
pop
in
test
stos
inc
arpl
sti
xor
cmp
scas
dec
add
cld
jl
jbe
insb
xchg
andb
mov
xchg
bt
lods
daa
dec
jae
lret
push
sbb
mov
or
subb
outsl
lcall
mov
mov
push
mov
les
mov
aad
push
mov
out
pop
fcoms
or
fs
mov
notl
push
out
lea
std
pop
jb
popa
fcomip
aas
nop
mov
inc
jne
cmp
cmp
inc
repz
andb
aas
lds
dec
mov
push
mov
push
sub
sub
lods
out
push
push
nop
stos
out
mov
push
mov
sahf
int
jne
aas
inc
je
add
repnz
aaa
jp
push
or
scas
ljmp
xor
dec
adc
xor
lret
or
das
sub
call
imul
daa
push
add
stos
jne
inc
jp
pushf
lods
cli
hlt
xchg
not
fcoms
inc
and
add
ficompl
xor
lret
push
popa
jb
int3
mov
popa
fmuls
ss
fidivs
stos
cmp
mov
bnd
icebp
sbb
mov
mov
adc
fstpl
movsl
adc
add
mov
cwtl
mov
out
jbe
pop
iret
repnz
and
lods
add
cmpsb
dec
push
mov
push
aaa
add
jnp
mov
cmp
sub
rolb
mov
mov
scas
inc
outsb
xor
inc
pop
movl
lds
xor
mov
lods
and
push
outsl
jo
pop
add
call
push
cmp
jnp
dec
fsubl
std
out
mov
stos
nop
sti
ss
imul
mov
scas
xchg
in
rep
in
ljmp
adc
pop
jl
into
fldcw
divb
lret
pop
push
iret
pop
pop
cmp
push
inc
cld
aaa
push
cmp
daa
xchg
jg
mov
aad
jle
sbbb
mov
cmp
js
adc
xor
sbb
cmc
mov
ror
lret
lods
xor
and
inc
in
mov
arpl
aam
push
adc
arpl
mov
jg
lods
dec
jne
ljmp
xlat
mov
jb
testl
push
push
test
pop
push
shll
jp
mov
in
mov
sub
adc
arpl
jnp
mov
mov
repnz
push
xchg
aas
ljmp
and
repz
es
std
les
lods
pop
mov
scas
rolb
mov
sbb
out
adc
scas
clc
popa
jmp
dec
xchg
stc
scas
pop
std
cmpsl
bound
pop
fcoms
mov
fcom
cmp
mov
sti
lahf
dec
in
dec
fwait
jg
mov
cmp
push
outsl
xor
mov
mov
scas
adc
es
xchg
xchg
xor
out
sub
outsl
dec
aad
inc
sbb
mov
pop
inc
leave
rcrl
test
push
cmp
movsl
jg
pop
ds
sbb
fcomip
lock
repz
out
in
andb
cmc
mov
sbb
mov
add
jmp
cmpsb
push
pop
xor
lret
out
adc
adc
int
addr16
dec
sti
mov
mov
sti
fistpll
mov
enter
cmp
aam
pop
lcall
push
fdivrp
pop
pop
ret
jns
aad
mov
mov
aas
pop
push
test
andl
and
ret
data16
jo
xlat
enter
stos
mov
loope
cmp
imul
test
pop
add
and
cmpsl
lea
shlb
mov
lods
and
lds
adc
inc
pop
pusha
xchg
dec
cltd
loop
push
sbb
mov
cmpsb
jge
xchg
call
cltd
mov
mov
into
dec
sahf
pusha
dec
fldl
in
fidivl
insl
rorb
cmp
mov
push
sbbb
cli
movsl
adc
mov
pop
inc
ror
aaa
jg
cmp
outsb
shr
adc
and
mov
pop
mov
inc
mov
cli
jge
mov
in
repz
mov
adc
std
addl
int
sarl
xchg
push
ret
movsb
pop
sub
fs
jge
pop
clc
gs
mov
xchg
sbb
xor
push
jg
data16
hlt
xor
or
stc
or
and
loopne
mov
mov
adcl
mov
push
jecxz
mov
add
xchg
adc
or
sub
repnz
ja
std
xchg
inc
dec
dec
jae
pop
pusha
mov
cmpsl
popa
mov
xor
enter
pushf
jge
fcomps
cld
xor
in
std
ja
mov
fistpl
push
push
and
jo
push
adc
jno
inc
test
loope
dec
xlat
and
inc
jnp
pop
cmp
mov
adc
addr16
out
push
mov
mov
pop
pop
dec
std
push
cwtl
sbb
mov
cmpsb
push
inc
and
cmp
ja
sbb
sub
mov
ret
shll
cmpsl
push
rcr
lea
pusha
mov
pop
jo
call
xchg
sbb
sub
pop
mov
mov
shlb
fnsave
in
xor
outsb
jg
dec
or
ja
adc
xchg
rolb
call
jb
push
sbb
hlt
add
ds
dec
into
test
add
jge
xor
repz
std
shlb
stc
sbb
jmp
cmpsl
shrb
or
jecxz
enter
and
aad
out
loopne
addr16
popa
push
cmp
xchg
int3
cld
mov
mov
mov
push
mov
pushf
inc
ffreep
jg
pop
or
mov
xor
pop
pop
repz
pop
test
jge
push
rcrb
mov
insl
out
cmp
push
or
test
pop
push
pop
inc
xor
stc
sbb
sbb
out
addr16
xchg
outsl
xlat
mov
lds
jae
lods
xchg
divb
push
rcrb
addr16
cld
dec
imul
pop
mov
mov
icebp
ret
daa
add
dec
fwait
aam
dec
ljmp
aad
mov
mov
aas
daa
add
inc
xchg
dec
or
rcll
sub
imul
popa
ds
and
testb
lret
adc
mov
jg
mov
fidivs
outsl
ret
ljmp
jnp
add
adcb
lret
or
ss
dec
mov
in
lds
mov
iret
subb
or
insl
sub
insb
sub
fstpl
sub
cltd
cmp
xchg
outsl
in
mov
sub
mov
add
fstpt
mov
andb
es
ljmp
decl
stos
rcl
bound
fsub
bnd
mov
mov
push
lcall
sbbb
div
idivl
sub
mov
pop
sbb
aam
movb
xor
jmp
pop
inc
push
lcall
and
xchg
pop
sub
insb
lds
out
xchg
mov
jmp
jmp
arpl
adc
cmp
scas
and
pop
mov
nop
gs
push
cmp
adcb
in
xor
push
xor
fimull
push
jno
popa
mov
movb
mov
pop
mov
pop
pop
rolb
je
or
xor
rorl
push
nop
dec
sub
inc
cmc
les
loop
int
imul
sbb
sbb
bound
mov
mov
stc
mov
inc
and
add
jbe
ljmp
leave
lea
cmp
ss
push
mov
iret
loope
test
aas
cmp
mov
das
fcompl
ds
push
jp
icebp
xor
popa
das
and
enter
push
sbb
xor
das
push
dec
test
xchg
stos
ficompl
or
fdivl
nop
test
fidivs
dec
pop
dec
popf
mov
xchg
jp
mov
inc
in
mov
sub
lods
add
mov
sbb
pop
xor
xchg
pop
dec
fcmovbe
loopne
bound
pop
insb
mov
mov
xor
outsb
sub
mov
push
in
xor
dec
mov
bound
mov
mov
sbbb
xchg
and
loopne
push
jp
mov
icebp
sbb
dec
inc
sub
sub
mov
add
and
js
nop
ja
loopne
cmc
lret
lcall
hlt
adc
decl
insl
and
aaa
call
cld
jne
in
clc
in
fcom
mov
cmp
push
rclb
in
mov
sbb
sub
cmp
xor
xchg
arpl
jg
pop
insb
pop
es
scas
ret
inc
lcall
aam
dec
shrb
fldcw
cmc
mov
jmp
jae
jle
jg
mov
insb
xchg
cmp
idiv
mov
call
mov
adc
push
push
fstps
sbb
out
xchg
lea
inc
xor
shlb
subl
push
sub
pop
test
or
inc
mov
lret
mov
lahf
out
fwait
pop
in
sbb
ret
and
outsb
adc
pushf
out
xchg
es
vpmadcswd
xchg
pop
mov
clc
enter
push
in
cmp
push
dec
cltd
gs
and
dec
movsl
dec
push
xchg
rdpmc
das
arpl
in
jo
adc
les
jo
push
int3
scas
cmp
in
sub
and
adc
and
and
mov
xor
cmc
adc
mov
lea
cmp
insl
pop
inc
cmp
adc
push
ljmp
mov
dec
cmp
lret
push
jp
dec
push
inc
add
mov
add
into
lret
es
mov
jnp
loope
fs
mov
push
arpl
xchg
aad
pop
push
cmpsb
pop
out
mov
ret
lods
orl
scas
sub
shll
loopne
daa
adc
repz
popl
mov
sub
mov
std
mov
cli
cmpsl
rcrl
adc
pop
cmpsb
scas
xlat
movsb
rorb
sub
sbb
arpl
adc
aas
add
and
in
jle
mov
pop
in
lds
gs
cmp
dec
ljmp
sub
jle
lea
jge
aam
movsb
shlb
loop
clc
jge
data16
sbb
out
push
adc
mov
xchg
jp
adc
cmc
dec
cltd
xchg
jne
push
cmp
mov
lret
inc
push
repz
mov
call
dec
jns
jo
adc
sub
dec
xor
cltd
cwtl
int3
dec
ja
out
mov
das
jbe
add
push
outsl
mov
out
jb
rcrl
mov
mov
jmp
or
scas
and
sub
jl
jnp
mov
inc
in
nop
outsb
decb
or
ret
pop
cmc
pop
sub
xor
outsl
xor
or
cltd
movsb
push
addr16
adc
cmpxchg8b
test
loope
fisttpl
adc
lret
in
push
inc
fmull
aam
push
aas
out
mov
sub
aaa
or
mov
dec
push
movsb
mov
in
push
mov
iret
lock
mov
mov
gs
xchg
push
pop
xor
ret
fisttpll
sti
xor
es
pop
inc
or
xchg
not
ja
cli
push
jae
mov
test
call
inc
lcall
xor
jne
pop
lcall
in
scas
cmp
rcr
xchg
mov
push
adc
fs
repnz
fs
fst
xchg
mov
push
sub
mul
and
fmul
out
xchg
jbe
mov
lret
adc
add
rcrl
xlat
add
jno
int
adc
aas
jmp
imul
xor
and
pop
pop
outsb
test
add
cli
push
add
andb
call
out
adc
dec
inc
push
jo
outsb
push
cltd
cmp
inc
push
pusha
orl
sbb
adc
lcall
fmuls
mov
dec
dec
dec
repz
cmpsl
adc
jge
pop
sahf
or
pop
test
addr16
push
or
mov
cmp
ja
inc
aas
mov
xor
test
repnz
pusha
lea
mov
xchg
push
xchg
cmp
adc
in
movb
std
lea
fldl
push
lds
aam
andl
inc
adc
fwait
jbe
imul
jecxz
call
ret
stos
xchg
sub
test
jo
sub
repz
jo
sub
push
pop
xchg
test
nop
fisubl
imul
andb
scas
dec
movsb
orb
test
mov
testb
aas
sub
scas
jp
push
repz
add
jns
dec
pop
push
xchg
mov
xor
push
mov
push
adc
cmpb
or
xor
les
mov
pop
mov
mov
cmp
sbb
xor
jmp
xchg
jp
pushf
xchg
mov
pop
insb
pusha
imul
pop
int
add
lock
ret
and
or
xor
inc
and
fiaddl
push
adc
mov
push
aam
scas
dec
sbb
int
faddl
or
inc
sbb
add
cmp
adcl
mov
cmp
movsl
dec
mov
adc
lahf
fdivrl
imul
inc
arpl
std
icebp
inc
jns
mov
je
xor
out
push
cltd
mov
les
sbb
mov
fistps
dec
sbb
inc
ljmp
cmp
testb
push
add
clc
cmp
push
jmp
push
inc
je
mov
adc
inc
cmp
stos
jge
push
pop
mov
sub
pusha
fs
mov
push
aad
cmp
popa
push
mov
inc
jae
aaa
mov
xchg
dec
sub
mov
pushf
or
cmpb
inc
fidivrs
dec
rclb
cli
cld
cmpsl
stos
cmp
mov
jns
in
jg
mov
dec
in
jl
xor
shrl
sub
dec
lods
mov
xor
mov
xor
inc
mov
jne
mov
mov
push
jle
adc
jnp
inc
jge
out
jb
adc
jne
pushf
add
sub
push
das
xorb
das
sbb
fidivrs
movsl
xor
lcall
inc
jp
rclb
iret
xor
jo
xchg
cld
orb
int
mov
xlat
lock
jp
add
fisubrl
les
ss
push
lea
jmp
xor
jno
shlb
out
test
scas
mov
popf
hlt
fistps
cltd
xlat
lret
dec
insl
xchg
cmp
scas
cltd
pushl
loopne
xchg
int3
add
lea
pop
std
mov
pop
dec
nop
das
cwtl
dec
mov
int
jmp
inc
rorb
js
fstpl
repnz
in
adc
out
ds
sbb
pop
push
mov
add
jb
aas
fiaddl
int3
jne
data16
adc
mov
subl
xchg
test
cli
les
lds
stos
imulb
sub
divl
iret
imul
sbb
insb
xchg
icebp
scas
test
rcrb
pushf
push
sub
adc
push
mov
cli
fmuls
pop
fs
add
adc
dec
test
push
mov
inc
leave
sub
call
scas
push
repz
out
call
xchg
dec
enter
ffree
pushf
loope
into
loopne
pop
mov
fidivrl
inc
out
push
adc
cmp
test
jbe
dec
mov
outsl
jno
fidivrl
bound
sbb
pop
dec
pop
xchg
loop
movsb
sub
pop
aam
or
jo
push
pop
insl
mov
inc
decb
inc
outsb
leave
sbb
pop
lock
in
icebp
inc
ss
sub
mov
sub
xlat
popf
jbe
gs
dec
push
test
rcll
aad
addb
insl
fwait
jp
push
push
sbb
push
jge
push
gs
lret
aam
lcall
sbb
push
ror
xchg
icebp
mov
ss
gs
cmp
mov
mov
xchg
pushf
in
xor
push
adc
repnz
into
adc
ljmp
add
jns,pn
fwait
xor
stc
test
or
ds
sub
in
sti
data16
scas
and
je
sti
dec
push
ljmp
lahf
mov
adc
and
xchg
shll
das
jecxz
iret
mov
insl
push
pop
aam
mov
jl
jp
pushf
inc
loopne
imul
inc
stos
jns
sbbl
int3
inc
in
push
gs
std
jge
and
das
insb
jp
fisubrs
es
aam
push
jp
and
jns
mov
hlt
inc
fstpl
add
sahf
jbe
cmc
das
mov
jns
jae
adc
jbe
push
lds
dec
xchg
mov
es
push
dec
mov
pop
pop
clc
push
fincstp
insb
mov
daa
outsl
inc
scas
cltd
jns
push
out
jo
clc
int
sarl
decb
mov
sbb
adc
mov
ret
jmp
inc
push
std
jg
hlt
int3
mov
mov
outsb
mov
out
xor
jno
aaa
lahf
stc
arpl
pop
pop
repnz
ja
or
test
push
push
popf
stos
nop
mov
pusha
push
neg
mov
inc
imul
loope
imul
mov
sub
out
fs
repz
outsl
aas
in
or
xchg
add
subl
add
push
cmp
aad
and
xchg
add
mov
adc
mov
les
fs
outsl
lcall
xchg
sub
jne
xor
int3
pop
scas
sub
enter
cmp
mov
ret
pop
ret
sbbl
in
push
xchg
rcr
mov
mov
adc
mov
lods
cld
ret
in
ret
fldt
mov
out
jmp
out
test
jmp
dec
imul
out
stos
jnp
sub
imul
call
inc
xor
dec
sub
and
out
js
xor
and
pop
loop
lds
test
adc
popa
incl
mov
orl
fbstp
inc
jmp
aam
jge
ds
fcomps
jne
xchg
icebp
mov
inc
push
and
int3
imul
xchg
mov
fadd
fldenv
adc
fstpt
mov
lcall
mov
inc
mov
aam
xor
push
insl
xchg
sub
shr
fcomip
pop
movsl
insb
inc
outsb
test
lods
mov
leave
leave
adc
add
sbb
clc
pop
sub
ss
insl
sbbl
je,pt
mov
arpl
push
jno
xchg
mov
cmovs
inc
jne
rolb
xlat
imull
or
mov
imul
rcrb
imul
sbb
int3
xchg
or
int3
in
xor
cmpl
push
mov
fadds
add
jae
sub
mov
cmpsb
leave
push
lretw
add
dec
sar
lcall
jle
js
jb
mov
mov
divb
or
cltd
xchg
or
daa
stos
fcoms
or
sqrtps
jno
jg
xchg
fistpll
sbb
push
xor
sub
push
xchg
push
or
decl
jg
or
repnz
pushf
lods
pop
aas
add
int3
xchg
xchg
repz
sub
and
mov
call
sub
or
popf
dec
fs
push
pop
push
dec
mov
sbb
inc
lcall
jnp
loopne
inc
subb
aam
mov
cmp
in
xorl
das
jl
sti
cmp
add
rorl
push
sub
pop
jle
mov
push
or
mov
mov
mov
shrb
jmp
imul
push
cmp
out
xor
inc
pop
pop
jnp
add
sbb
jmp
loop
mov
mov
sub
or
insb
and
and
lods
cmp
jno
ret
insb
adc
jecxz
and
jno
psubusw
aam
cmp
das
ja
scas
stos
push
add
add
sub
cmp
mov
movsl
mov
adc
fs
int
adc
imul
roll
cmp
push
lea
aad
and
imull
rclb
and
push
jne
inc
cltd
jp
test
cs
pop
scas
mov
push
sbbl
fsts
push
inc
xchg
adc
push
xorw
mov
fisubl
dec
icebp
loope
stos
loopne
lret
mov
insb
jnp
add
test
jle
xor
xor
xlat
out
jle
dec
sahf
jo,pt
push
pop
imul
push
mov
scas
mov
xor
scas
xchg
xchg
mov
and
sbb
push
inc
pop
push
outsb
cld
cs
adc
pop
stos
test
pop
inc
xchg
stos
stc
clc
es
pop
mov
push
and
mov
into
xlat
sub
adc
test
or
out
inc
movsb
dec
insb
imul
xor
scas
fsubrl
in
cmpb
loopne
push
inc
cli
lock
pusha
cmc
jl
es
pop
gs
sbb
pop
hlt
pop
jnp
fnstcw
jmp
fs
cmpsl
lret
push
mov
ss
xchg
into
push
out
arpl
pop
lahf
cmp
and
cmp
sbb
pop
and
scas
lods
jge
pop
in
adc
xchg
sbb
testl
xchg
and
mov
xchg
xchg
mov
rclb
sub
repnz
pop
add
js
es
add
test
insb
pop
xlat
or
cltd
adc
and
push
mov
insb
mov
mov
jae
out
enter
mov
add
pop
int
mov
aam
adc
mov
push
frstor
fs
inc
test
sub
xchg
pop
mov
or
test
xlat
and
repnz
add
aad
scas
and
test
sub
mov
repz
jecxz
cmp
fdiv
adc
and
cmp
dec
ret
loope
lock
out
jmp
sbb
les
adc
movsl
adc
enter
nop
test
dec
in
pop
and
out
mov
lret
ficomps
jne
pop
ljmp
das
out
xchg
lahf
pop
ret
in
or
adc
ret
adc
lock
scas
xor
out
sub
and
dec
ljmp
sahf
repnz
rcrl
aas
fwait
cmpsb
js
or
aam
inc
jg
inc
insb
push
jne
mov
movsb
mov
insl
aas
or
xor
adc
in
or
inc
inc
outsb
ret
call
loope
pusha
arpl
mov
lods
ficoml
hlt
cmp
in
mov
clc
cli
mov
and
inc
and
xor
xor
cmc
adc
fnstsw
add
sbb
lcall
divl
lock
fildll
xor
iret
cltd
jns
fwait
mov
insb
xor
mov
xor
mov
mov
push
fs
jge
sub
sub
xlat
cmp
lea
and
mov
addb
movsb
jno
sub
mov
push
test
call
fiadds
shll
mov
add
lods
cmp
push
insl
movmskps
out
sti
in
mov
push
jbe
or
sarb
jno
jg
push
and
mov
ja
scas
bound
push
test
cmp
idivl
ss
mov
cmp
out
rorl
hlt
pop
xchg
xchg
lret
aaa
cmp
cld
push
sub
es
dec
loopne
xchg
scas
xlat
jno
pushf
cmp
pop
aaa
aas
push
cmpsb
add
leave
cmp
sub
or
movsb
daa
push
stc
mov
jne
xchg
pop
add
mov
adc
sub
mov
push
cmp
daa
adc
aaa
pushf
shll
push
jo
inc
test
and
mov
popa
sti
dec
xchg
adc
adc
mov
shlb
cmp
mov
xchg
das
enter
sub
cmp
sub
ror
outsb
pushf
pushf
adc
push
leave
adc
jbe
stc
aas
in
and
outsl
push
call
xchg
xor
push
jno
scas
rcl
xor
jg
in
or
or
inc
cmpl
push
cli
dec
xchg
inc
inc
dec
movsb
adc
push
xchg
push
jp
lods
scas
pop
or
fdivs
dec
adc
dec
cmc
cmpsb
lahf
rcrb
cmp
clc
pop
lods
inc
jo
mov
xor
je
es
das
scas
aaa
iret
test
inc
add
sbbl
je
pop
sub
fldt
and
mov
inc
cltd
xchg
sub
imul
push
aas
gs
lds
dec
arpl
jp
out
or
sbb
xlat
xor
jecxz
sti
sahf
pop
lods
push
lds
mov
or
inc
inc
lahf
aaa
lea
shlb
aas
or
xchg
in
cmp
in
sub
mov
sbb
dec
outsb
addr16
cwtl
lea
negb
mov
test
xchg
test
sbb
scas
sar
imul
divb
or
lahf
jge
add
pop
jecxz
inc
mov
mov
stc
jle
pop
imul
sarl
jo
or
fnstenv
dec
subl
cmp
push
or
inc
or
dec
or
xchg
imul
frstor
pop
sub
mov
ficomps
xchg
push
stos
xlat
ja
outsl
fidivs
mov
loope
lea
fisubs
dec
add
cmp
leave
and
out
lret
sbb
jmp
insl
dec
or
lret
pop
sub
repz
push
inc
sbb
or
nop
hlt
imul
shll
mov
jmp
adc
pop
cmp
add
push
rorb
or
cwtl
jno
or
add
dec
insb
les
mov
cli
lock
popa
xchg
or
mov
js
pop
or
add
mov
sbb
loop
scas
stc
xchg
push
adc
mov
lods
in
mov
fdiv
ljmp
mov
add
jle
dec
add
jle
sbb
jno
mov
js
push
xor
inc
sbb
in
pop
pop
mov
mov
jno
aas
and
mov
xor
mov
outsl
add
leave
jle
sbb
cmp
loopne
and
pop
call
stos
inc
cmp
xchg
mov
lret
dec
xchg
cwtl
test
mov
jo
scas
add
out
xchg
loopne
cmove
cmp
jbe
clc
lock
imul
pop
pop
mov
arpl
pusha
mov
adc
push
jl
stos
xor
jecxz
lock
sbb
cmpsb
mov
jae
mov
sti
clc
repz
mov
out
sar
xchg
pop
fbstp
ss
mov
pushl
cmpsb
jp
pop
inc
testl
fbld
mov
xchg
jmp
repz
cmp
pop
stc
stc
cmp
inc
cmpsb
push
dec
mov
jp
movsl
adc
insl
inc
loop
mov
nop
mov
das
pop
pop
sbb
pop
orl
cmp
loop
ds
adcb
inc
sub
icebp
stos
mov
in
pusha
cltd
test
ds
dec
lock
push
cmp
andb
add
lret
gs
fcoms
push
arpl
pextrw
les
jp
cltd
inc
xor
aad
cli
inc
fsubs
push
jne
jecxz
lea
lock
je
scas
fistpll
jmp
cmpsl
bound
jns
dec
outsb
and
mov
fistps
repz
cmpsb
jmp
movsl
je
xor
mov
xchg
gs
aam
fucomp
xor
lods
mov
jg
xor
xchg
cmp
pushf
lahf
pop
dec
inc
stc
adc
push
cmpsl
push
mov
jge
lds
daa
adc
test
mov
sbb
mov
cli
outsb
jnp
jne
pop
pop
push
push
mov
cmp
push
dec
lret
negb
pop
sbb
nop
bound
push
lret
cld
test
scas
jmp
cmp
lods
jne
jo
fistpll
sahf
cld
or
push
rcll
shlb
mov
mov
add
pop
loopne
add
fldcw
cmpsb
cltd
or
ss
roll
imul
or
pop
xchg
fdivr
fistps
add
icebp
xor
ja
mov
add
mov
xchg
arpl
dec
fisttpl
stos
pop
arpl
pop
pop
andl
les
cmp
and
mov
sbb
adc
mov
mov
add
push
bound
fadd
xchg
push
dec
mov
sub
mov
cltd
inc
dec
into
sti
cli
push
test
fldpi
mov
or
inc
cmp
xchg
fcmovb
mov
out
lock
aaa
int
push
sub
int
xchg
sbb
movsb
cmp
jbe
or
ret
jnp
mov
test
or
mov
ds
insl
inc
sub
lods
xchg
cmp
push
loopne
in
movb
out
sahf
mov
sarl
fisubl
cmp
insl
and
lret
addr16
xchg
addr16
and
ss
mul
xorl
pushf
lock
enter
add
scas
mov
push
jle
jne
or
sub
lahf
sbb
jecxz
test
cmc
xchg
dec
cmp
mov
mov
push
lahf
aas
daa
fs
or
int3
xchg
es
push
loope
fidivrs
sub
and
xlat
dec
push
adc
mov
and
and
or
test
mov
insl
clc
ret
mov
fidivrl
ficomps
or
imul
or
scas
push
jle
mov
push
lea
jle
stos
cmp
push
add
add
mov
add
push
mov
add
repz
test
adc
push
sub
jecxz
cmp
and
and
mov
fmuls
xchg
sbbl
push
das
sub
jle
out
mov
pop
insb
data16
int
stos
lods
cld
xlat
mov
xorl
pop
ret
sub
push
sbb
adc
xchg
shlb
jmp
pop
ficoms
pop
adc
roll
inc
mov
rcll
loopne
and
testb
pop
into
std
in
and
cmpsb
repz
push
jbe
shlw
pop
mov
pop
adc
shr
in
lea
fwait
aaa
xchg
xchg
push
pop
stos
and
mov
cmp
sbb
daa
xchg
dec
outsb
pop
lcall
fsubrl
mov
jbe
dec
pop
xchg
call
pusha
dec
popa
mov
xchg
cmp
and
imul
sbb
ja
and
add
pop
mov
shl
es
test
xchg
mov
push
stc
mov
in
jle
mov
test
pop
in
push
mov
jecxz
es
push
inc
mov
cltd
push
lret
clc
call
gs
lret
cs
ljmp
adc
mov
pop
sahf
daa
mov
adc
frstor
repz
mov
xor
imul
mov
test
popa
sub
es
jg
xor
or
aad
dec
mov
sub
mov
in
out
mov
mov
rorb
pop
lods
lds
int3
xor
dec
inc
jg
rclb
es
adc
push
ror
stc
movsl
cltd
xchg
jnp
sarb
ret
in
jns
push
inc
jno
dec
xlat
dec
sbb
and
xlat
push
arpl
xchg
cmp
sahf
inc
mov
sbb
movsl
stos
test
xchg
shlb
mov
out
and
xchg
cmpsb
and
mov
decl
in
jmp
aam
sub
or
lock
adcl
ljmp
cltd
mov
inc
pop
out
xlat
clc
add
out
jnp
sarb
fnstcw
xor
add
mov
inc
xchg
push
xor
mov
insb
adc
dec
testb
sbb
bound
insb
push
rcrl
push
adc
cmc
sbb
xchg
movsl
into
repnz
clc
sbb
and
add
push
jae
push
in
sbb
stos
xchg
sbb
cs
push
iret
cmpsl
cmpsb
fnsave
popa
xchg
xchg
aam
cmpsb
xlat
or
cmp
jecxz
iret
jae
and
arpl
mov
xchg
addr16
mov
dec
lock
sbb
mov
push
mov
sti
shl
scas
jmp
jmp
jp
mov
sbb
jle
push
push
push
lods
loop
or
scas
mov
fmuls
xor
scas
shll
out
and
sub
fistpl
mov
mov
xlat
flds
xchg
outsb
jl
enter
adc
mov
sbbl
ret
mov
mov
mov
mov
jp
push
dec
adc
in
test
mov
ss
mov
mov
test
pop
mov
ljmp
push
outsb
sti
mov
shrb
jp
sbb
mov
sub
in
dec
inc
adc
imul
pop
mov
repz
cmpsl
test
dec
mov
shlb
jecxz
fwait
adc
pop
out
mov
sbb
xchg
cmpsl
jmp
mov
cmc
mov
outsl
mov
and
mov
lret
sbb
dec
fistps
pop
and
leave
mov
and
ja
adc
out
pusha
mov
jb
insb
sub
sub
addr16
pop
lds
cmp
sub
jmp
andb
push
int3
and
xor
jne
add
inc
xchg
in
adc
fs
jbe
adc
clc
mov
cmc
aaa
jns
push
mov
jo
ficompl
nop
ljmp
repnz
dec
jle
sub
jne
inc
pop
xchg
jo
sbb
je
lahf
mov
outsl
jae
and
lret
push
jge
pop
sti
rcrb
mov
sbb
push
lock
loop
call
out
jne
outsb
and
pop
inc
cs
adc
je
mov
inc
push
fisttpll
adc
js
sbb
push
jp
cmpsl
mov
cmp
mov
adc
enter
imul
mov
sub
das
dec
mov
jmp
test
cmpsb
xchg
ja
xchg
idivl
cltd
cwtl
out
jmp
popa
imul
sahf
jne
repz
movsl
mov
jne
out
std
xchg
push
jnp
ja
stos
addr16
dec
dec
imulb
shrb
adc
xchg
div
and
sti
mov
xchg
stos
jno
or
into
stos
push
leave
lahf
fs
sbb
insl
test
mov
in
sub
int
fs
in
lea
loopne
mov
shlb
ljmp
and
repz
dec
xchg
mov
fidivl
test
pop
rorb
ja
rclb
mov
int
ret
rclb
mov
mov
mov
es
movb
in
scas
pop
imul
push
scas
add
ss
add
in
lret
push
cltd
sub
das
js
mov
adc
push
fdivrs
rcrl
cmp
mov
adc
add
es
push
decl
shll
loope
scas
roll
xchg
fsubrs
pop
mov
imul
mov
fisubl
movsl
imul
adc
test
test
stc
pop
cltd
or
xchg
in
push
xchg
push
xchg
sub
scas
pop
jle
pop
sbb
aas
push
icebp
mov
lds
push
pop
pop
sub
imul
push
imul
jp
test
testl
orl
jno
fwait
inc
mov
aad
mov
popf
adcl
divb
cld
or
and
shll
inc
xchg
fbstp
bound
outsl
sbb
sub
inc
lret
inc
or
xor
mov
mov
inc
das
insb
vmwrite
xchg
popa
lods
xchg
outsb
stos
mov
add
fsubl
rorl
dec
mov
and
lahf
cmpsl
and
imulb
and
xchg
movsl
add
xchg
xchg
xor
sub
push
rorl
dec
add
cmc
add
mov
outsb
pop
pop
cltd
add
insb
jg
lret
lret
jp
mov
push
jecxz
cltd
enter
xor
mov
lods
addr16
dec
or
add
aaa
pop
hlt
cwtl
or
or
iret
mov
push
sbb
xchg
es
mov
inc
es
inc
or
add
mov
mov
add
and
ret
lock
mov
xchg
mov
xchg
and
sub
mov
xchg
cmp
outsb
push
call
fwait
int3
mov
or
pop
cvtpi2ps
loopne
xchg
repnz
pushw
outsb
out
aad
incl
jbe
mov
dec
mov
pushf
cmp
sbb
enter
sub
inc
dec
mov
shlb
insb
aam
fstpl
mov
cmp
xchg
test
test
push
lret
dec
ja
xor
divb
nop
test
inc
movsl
into
xchg
push
push
fs
adc
jecxz
mov
scas
imul
repnz
popf
sub
inc
and
arpl
aas
inc
mov
fdivl
jmp
es
and
xor
mov
fldcw
mov
xor
pop
mov
push
cmp
inc
lcall
mov
testb
mov
arpl
cmovge
jge
jnp
int
cwtl
xor
out
icebp
cmp
jo
push
adc
push
cmp
sub
mov
jecxz
je
add
into
cmp
xor
clc
mov
out
jmp
sti
xor
daa
jmp
loop
jecxz
xchg
push
add
adc
popa
loopne
lods
sti
xchg
sub
sbb
xor
dec
cmove
xchg
inc
ds
movsb
fs
pop
jno
js
mov
cmpsb
jle
push
xchg
mov
aad
repnz
shll
ds
inc
mov
cmp
addr16
jnp
fsub
cltd
je
mov
jne
sub
fstl
movzbl
xchg
cmp
mov
int
pop
out
popf
jp
daa
push
lcall
imul
stos
clc
push
popa
sbb
rorb
dec
adc
cwtl
inc
xchg
mov
push
add
loope
mov
iret
sub
loopne
adc
sub
cltd
cmp
dec
movsb
dec
ja
lods
test
sti
pop
test
or
push
hlt
mov
jno
lcall
cmc
ja
cld
add
pop
daa
dec
mov
aaa
cmp
sub
add
popa
gs
sbb
das
xchg
cmpsl
movsl
dec
push
mov
adc
mov
and
mov
cmp
and
or
or
inc
aad
test
imul
int
cmp
jg
push
adc
mov
sbb
mov
mov
xor
clc
cmc
and
mov
sub
icebp
pop
pop
sbb
orb
andl
clc
icebp
rcll
scas
stos
cmpsl
sarl
mov
fmuls
mov
cmpsb
jns
out
data16
jbe
pop
out
sbb
adc
bound
rolb
rcrl
push
out
mov
add
outsb
out
or
data16
out
mov
dec
stos
sti
push
loopne
xchg
mov
inc
aam
add
add
popa
jns
sub
popa
mov
cmp
mov
jge
xchg
dec
test
jb
jnp
xchg
add
icebp
popa
ret
lsl
out
sbb
or
mov
gs
in
xor
push
fmull
fwait
mov
sub
pusha
or
jno
shr
ja
repz
dec
push
es
cmp
jnp
mov
mov
sbb
push
jl
outsl
inc
enter
aad
pusha
xor
fnsave
mov
push
jo
mov
mov
pop
aaa
adc
addr16
cmpsb
sub
mov
cmpsb
jp
insl
jne
xchg
xchg
cmp
ret
into
out
call
cmpsb
call
in
enter
inc
repz
dec
dec
pop
pop
mov
pop
or
xlat
add
jb
rcrw
and
dec
xchg
je
adc
in
adc
sar
lahf
pop
mov
push
xchg
enter
add
mov
xor
mov
je
leave
mov
ljmp
movsl
test
lea
add
nop
stc
lds
aam
or
pop
push
pop
sub
aam
push
xchg
mov
push
out
xchg
push
mov
mov
inc
pop
lret
test
aas
inc
push
in
cmp
test
shll
lahf
insl
sbb
and
inc
outsb
jmp
dec
adc
testb
adc
jo
ret
dec
scas
push
xchg
push
inc
cmc
rclb
push
pop
adc
jg
fsubl
adc
jge
in
in
mov
pop
push
pusha
pushf
push
xchg
loope
jb
js
push
lahf
inc
cld
mov
adc
jmp
mov
frstor
jecxz
in
rolb
pop
and
in
jg
ret
testb
mov
jne
add
push
inc
in
fsubl
add
xchg
add
ds
adc
pop
rolb
cwtl
faddl
hlt
cmp
xor
addr16
adc
xchg
rep
mov
mov
leave
adc
and
fcoms
lret
and
inc
push
pop
test
jmp
adc
and
loopne
mov
jo
jne
into
and
ret
std
fstl
inc
adc
loopne
jg
stc
icebp
pop
cs
negb
ret
into
sbb
in
push
push
out
ficompl
call
adcb
test
ljmp
insl
push
jl
aad
and
mov
jo
mov
mov
lcall
outsl
les
push
insl
iret
rcl
adc
jecxz
xor
or
rcrl
or
or
fwait
out
jmp
ret
xor
out
mov
cmp
dec
out
fdivl
cmp
insl
insb
adc
xchg
popa
xchg
cmpsb
jb
test
lods
and
pusha
jl
jo
sbb
notb
fsubs
loop
stos
mov
mov
mov
in
sub
dec
sbb
int3
or
ds
pushl
mov
lods
mov
mov
mov
dec
mov
sahf
jecxz
out
inc
div
mov
and
inc
icebp
sbb
or
mov
push
jle
mov
push
add
inc
jg
rcrb
inc
sbbb
out
mov
loope
xchg
sub
loope
rcrb
cld
out
or
insb
xchg
loopne
add
jb
leave
adc
ds
xchg
sub
out
mov
add
cli
or
jge
cmp
aad
mov
xchg
xor
sub
mov
sti
dec
pop
cltd
adc
aas
data16
aad
fsts
inc
aad
stos
xor
jo
push
cltd
xchg
sbb
leave
mov
add
dec
fldt
cld
push
xchg
dec
lds
test
sub
mov
jnp
xchg
lahf
or
jno
dec
out
push
pop
inc
pop
xor
clc
lea
enter
adc
or
scas
imul
arpl
jle
sub
rep
iret
pop
push
dec
dec
jp
insb
pushf
jecxz
dec
shr
inc
loope
imul
movsl
je
mov
sarb
fcmovnb
mov
movsl
inc
test
int3
outsb
xchg
lods
mov
sbb
cmp
ror
xchg
pusha
mov
sub
xchg
and
add
js
movsl
frstor
sbb
push
adc
mov
mov
movsl
shll
pushf
pop
in
seto
in
jle
add
test
loope
lahf
fistps
in
inc
xlat
inc
sbb
inc
aam
push
mov
out
ret
push
out
mov
pop
out
punpcklwd
adc
mov
rorb
and
push
push
outsl
testb
fwait
jp
and
mov
jns
xor
pop
add
pop
aas
shrl
adc
int3
push
jne
call
lods
shl
mov
fcomip
push
xor
ret
dec
rcrl
lods
push
inc
sub
imul
aas
fcompl
imul
cs
shr
mov
push
xor
insb
jge
std
mov
jnp
sbb
push
and
int
sbb
jg
call
stos
in
test
stos
xchg
fcoml
shll
shrl
sbb
subl
cwtl
ljmp
loopne
out
in
dec
addl
jle
sahf
jg
std
adc
mov
addl
ss
push
mov
orl
insl
iret
xor
gs
mov
loop
jge
int
pushf
repnz
rorb
cmp
adc
int3
mov
rclb
loopne
mov
xorl
negl
add
out
and
shll
cld
add
std
or
bound
ret
push
inc
push
dec
push
add
sbb
aad
punpcklbw
testl
mov
add
inc
xchg
jnp
je
xor
sub
lea
mov
sbbl
aas
nop
cli
movsb
mov
js
push
aaa
pop
mov
dec
pop
xchg
icebp
mov
sub
jnp
ja
xlat
or
mov
dec
popl
mov
in
cs
aam
inc
scas
mov
jg
mov
sbb
cltd
in
pop
xchg
pop
fisttpl
jmp
or
add
mov
xchg
inc
push
mov
jae
sub
pop
mov
sbbl
fdivrs
or
hlt
xchg
stc
aas
fadd
mov
cmp
fdivp
adc
jnp
fldenv
jle
je
sbb
sti
sahf
testb
and
or
scas
xor
add
jge
cmp
jp
sti
cmpsb
mov
push
cmc
mov
xchg
sub
push
cli
cld
clc
push
add
and
cmp
popa
outsl
pop
or
faddp
xchg
nop
cmp
ret
xor
jns
rclb
mov
add
push
xchg
mov
xorb
les
pop
movb
jb
out
sub
js
xor
movb
movsb
mov
roll
inc
add
xchg
out
jo
pop
and
hlt
cwtl
lcall
push
lret
jo
enter
cmp
out
pop
inc
loopne
inc
push
add
mov
andb
cmp
insl
mov
in
ret
sbb
outsl
sub
bound
sub
add
xor
sub
push
jecxz
dec
inc
and
scas
mov
loop
sbb
push
push
cltd
dec
cmp
cmpsl
mov
push
jmp
enter
rclb
clc
gs
inc
push
mov
int
dec
mov
jge
sti
fwait
lods
fs
cli
jno
xchg
aad
mov
pop
lods
push
sub
pop
push
mov
add
cmp
sahf
andb
xor
jae
mov
fisubs
sbbl
inc
insb
xor
or
cmc
in
jge
fwait
lret
sub
rcl
mov
or
repnz
lods
xlat
bnd
or
fcmovnbe
in
sbb
test
cmp
xor
inc
mov
jne
push
mov
cmpsb
lods
push
gs
add
orb
pop
std
arpl
pop
sub
dec
fdivp
js
and
lcall
cmp
mov
cmp
push
jmp
fcoml
and
pop
jo
mov
cld
push
enterw
dec
lock
jle
xlat
jle
iret
mov
les
mov
add
loop
sub
push
fwait
imul
movsb
popa
cmp
xchg
jno
cmpsb
push
lret
test
cmp
stos
add
outsb
pop
insl
nop
pop
stos
or
jmp
shll
mov
jecxz
stc
faddl
iret
inc
mov
jo
sahf
test
inc
out
js
pusha
adc
push
scas
arpl
or
divb
push
fstl
inc
int3
in
mov
dec
mov
sub
jns
cmp
sub
sti
pmaxub
inc
jg
out
mov
push
arpl
pop
mov
mov
adc
xchg
xor
test
ret
xor
scas
inc
nop
adc
sbb
das
cmp
mov
pop
add
push
dec
cmp
std
pop
aam
pop
pop
add
fmuls
scas
and
movl
stos
sub
fwait
lret
in
and
dec
mov
xor
out
pop
dec
mov
mov
xchg
and
aam
or
pop
leave
cmpl
js
pop
pop
add
movsl
repnz
pop
xor
jo
and
push
sbb
jbe
insl
das
loopne
or
sbb
orl
cmpsb
test
ficomps
and
dec
push
faddl
sub
test
jmp
loopne
ret
addb
aam
xchg
xchg
mov
dec
into
adc
popf
dec
or
lods
push
inc
js,pn
mov
mov
dec
dec
inc
je
push
notl
lods
std
mov
sbb
pop
int
jo
ja
push
add
mov
sbb
fldpi
mov
pop
jecxz
stos
fdivrl
test
xchg
repz
iret
adc
lods
adc
aad
shrl
mov
mov
jbe
mov
je
pop
das
nop
insl
lret
gs
mov
mov
sbb
inc
add
arpl
es
or
mov
inc
dec
cs
add
stc
xor
xor
lahf
call
lods
out
repz
push
jb
pushf
sbb
lods
mov
jne
mov
xor
xor
stos
mov
sub
mov
cwtl
mov
mov
cld
movsl
ret
leave
jle
mov
shll
push
icebp
xor
xorl
movb
push
aad
stos
sub
insb
mov
shlb
xchg
mov
cmp
daa
lods
sbb
xchg
outsb
sub
loopne
pusha
push
mov
decb
inc
stos
ja
lret
sbb
shll
roll
push
out
mov
imul
push
clc
xor
sti
sti
mov
push
xor
out
dec
bound
xchg
dec
shrl
fimull
xchg
sahf
push
and
push
inc
jle
inc
in
inc
lahf
or
pop
in
adc
fwait
repnz
mov
jmp
lret
test
cmpsl
pusha
aaa
cwtl
mov
xchg
das
add
and
pop
sub
mov
pop
popf
mov
cmp
dec
cmp
mov
ret
jns
sub
mov
cs
inc
shrb
jo
das
inc
jo
test
mov
idivl
stos
out
shrb
popf
inc
inc
sub
lods
add
jae
mov
jbe
int
push
inc
out
daa
sub
dec
sbb
lods
gs
xchg
jg
stos
inc
cli
sub
and
int3
fs
mov
or
dec
mov
lock
mov
jl
push
call
pop
cmp
and
inc
sub
xchg
mov
fcompl
mov
aaa
mov
mov
sbb
push
push
ss
jno
aas
push
push
inc
mov
rcrl
ret
lret
shlb
repz
std
jecxz
cmp
mov
pop
dec
ret
sub
mov
cmp
sbb
icebp
fdivs
and
pushf
or
test
out
jl
fcoml
jle
sub
js
dec
add
lahf
jecxz
sbb
fisubrl
pop
xchg
arpl
pop
and
jmp
dec
mov
mov
xor
sbb
adc
jns,pn
fwait
es
popa
add
pop
outsl
inc
dec
dec
imul
cmp
sub
addl
mov
jmp
into
inc
push
mov
ficoms
fistpll
out
fistps
addb
jne
cmpsl
icebp
ret
int3
in
jecxz
icebp
jecxz
fnstsw
mov
lret
cmp
xchg
mov
jns
mov
rclb
dec
or
push
clc
test
mov
cmp
pop
or
and
loope
add
mov
pushf
adc
dec
insl
add
scas
xor
shll
xor
sti
imul
add
xchg
lret
fs
xor
add
inc
mov
fsts
sbb
jne
imul
add
push
mov
add
sbb
pop
mov
inc
out
fs
fnstcw
mov
lcall
imul
sbb
in
inc
hlt
popa
cmp
sub
sbb
popf
mov
jo
push
ljmp
enter
aaa
daa
or
in
cmp
jp
adcb
jle
rcr
jno
sbb
and
inc
gs
mov
cwtl
mov
aad
inc
xor
add
inc
dec
adc
sub
cmp
ja
aas
aad
push
push
add
int
pusha
mov
fs
sbb
sbb
fadd
mov
out
sti
outsb
cwtl
xchg
or
jns
and
imul
pop
repnz
mov
push
js
faddp
add
fidivrl
mov
fs
movsb
push
jle
loopne
cmpsb
shrb
popa
dec
push
add
inc
cli
lods
jb
push
ret
je
jne
push
sub
lea
out
je
sbb
jae
or
xor
inc
fadd
cmp
adc
sub
or
movsb
into
push
sub
scas
mov
mov
int
dec
dec
mov
stc
ja
push
fadd
cs
cli
jecxz
mov
subb
jp
xchg
roll
mov
shl
mov
fistpll
mov
inc
outsb
mov
dec
rcll
push
mov
sub
aas
stos
sbb
cwtl
mov
cli
pop
sbb
and
mov
into
aaa
mov
lock
jns
xchg
scas
popa
pop
aas
es
push
pop
or
sarl
sbb
mov
int3
ror
push
aad
roll
mov
push
shlb
out
mov
cmp
inc
daa
pop
mov
cli
add
aam
enter
dec
inc
and
and
jp
sub
cwtl
hlt
and
xor
inc
sbb
jge
push
mov
out
nop
cmp
mov
or
repnz
js
das
shld
xchg
je
jno
cld
mov
outsl
stc
lds
outsl
popa
push
insb
je
jo
and
inc
jle
inc
xchg
into
cmpsl
jge
fidivs
pop
pop
pop
add
adc
loop
leave
ret
outsl
xchg
lahf
xchg
inc
inc
out
push
nop
loop
sti
loop
sub
push
cmp
je
jge
test
mov
dec
fstpt
stc
lret
lds
scas
lock
push
repz
mov
jecxz
inc
ljmp
xchg
mov
adc
js
sub
dec
iret
push
sbb
add
and
mov
sbb
mov
lret
roll
out
popl
movsb
ret
dec
mov
cmpsb
xlat
into
pop
or
mov
push
jns
jg
mov
xor
jge
sub
scas
ror
inc
jmp
fistl
shll
dec
pop
and
jg
dec
insb
dec
xchg
inc
and
push
js
in
les
and
bound
enter
push
ret
adc
imul
push
sub
aad
jo
jno
cmp
in
jne
inc
lret
cmpsb
push
mov
gs
add
in
add
xor
jp
aad
or
or
mov
movb
lret
out
out
outsb
imul
inc
pushf
leave
arpl
pop
xlat
adc
sahf
dec
cs
fimuls
mov
mov
stos
les
fwait
jb,pn
std
jecxz
xor
stc
out
call
lods
add
and
cwtl
shll
xchg
push
xor
ret
into
test
rorl
inc
ret
jecxz
fwait
mov
jmp
in
mov
push
cmpsw
cmpsb
jmp
sub
jp
in
in
jmp
pop
xchg
mov
mov
push
loopne
or
sbb
xchg
jno
xor
cmp
ret
cwtl
mov
adc
sub
dec
mov
and
lods
xor
loope
mov
inc
mov
roll
push
fcoml
stos
shrb
dec
popa
fisttpl
das
cltd
in
mov
int
inc
fldenv
lea
cmp
daa
inc
push
mov
rcrb
imul
out
xchg
outsb
clc
flds
xorb
jge
sbb
cmp
outsl
mov
call
adc
movsb
or
clc
push
mov
jno
cmp
sbb
in
out
jp
xchg
cmp
repnz
decl
pop
xlat
shll
outsl
mov
cwtl
mov
out
outsb
push
fidivrs
test
xchg
mov
ds
ljmp
aas
arpl
pop
aaa
arpl
xchg
adc
pop
out
mov
xchg
pushf
xchg
sahf
fsts
fimuls
jg
loope
hlt
jecxz
adc
out
pop
push
inc
xchg
ja
aas
sbb
xchg
mov
lods
and
mov
in
lds
int
je
insl
or
pushf
rorl
push
push
daa
inc
cmp
out
mov
cli
sbb
push
fwait
cwtl
rcr
cmc
cmp
in
dec
negb
xor
movsl
outsl
mov
ret
lahf
lahf
je
es
test
clc
adc
mov
ljmp
iret
outsl
cmpsl
or
fs
popa
xor
fcoms
cmp
jns
iret
mov
iret
dec
test
std
sub
cmp
mov
es
push
outsl
pop
cli
cmp
ss
call
ss
sbb
in
in
adc
repz
rcrl
xor
xchg
and
inc
divb
aaa
inc
stos
ret
add
test
sub
out
outsl
test
cmp
mov
push
pop
stos
mov
jbe
or
xor
dec
fst
ret
lods
jne
scas
int
mov
push
dec
xchg
faddp
sbb
adc
jecxz
lret
or
cmp
sahf
lock
dec
mov
sub
or
and
imul
mov
inc
dec
clc
lret
insb
sub
xor
jae
pusha
cmpsl
and
and
stos
cli
mov
mov
jp
mov
inc
sbb
inc
hlt
or
cmp
ja
sarl
mov
cmpl
pusha
rorl
ret
or
out
lock
movsb
inc
sub
mov
pusha
xor
insl
or
mov
pop
cwtl
pop
es
lods
mov
insl
push
fdivrp
in
or
cwtl
es
jmp
xchg
out
xchg
lret
and
xchg
push
int
dec
rolb
xlat
jbe
cmpsb
jg
sbb
lret
xchg
mov
push
test
mov
fstpt
nop
mov
stos
fsubrl
and
dec
gs
stc
enter
call
add
add
sub
cmpsb
push
enter
enter
mov
xchg
test
data16
push
and
outsl
rcll
jp
jno
incb
mov
mov
or
std
pop
repnz
leave
movsb
and
jge
mov
dec
push
sub
addr16
movl
cwtl
cli
cmp
sub
loop
adc
xchg
adc
xor
dec
lds
xor
xchg
movsl
jge
loop
push
hlt
xor
jne
sbb
mov
cli
test
lcall
or
imul
in
fidivrs
ljmp
mov
sahf
jnp
aas
pop
inc
lock
mov
or
testl
es
sbb
jne
fcmovu
pusha
ret
frstor
mov
rorl
or
mulb
mov
dec
into
xchg
jno
lahf
xor
mov
push
and
mov
outsl
scas
push
jmp
in
dec
daa
lahf
pushf
roll
mov
sbb
xchg
mov
es
lea
adc
test
fcoml
enter
sbb
and
es
mov
ljmp
icebp
inc
rorb
insb
test
push
jl
jns
enter
mov
and
mull
dec
idivb
adc
jg
push
clc
loop
scas
imul
scas
ret
pop
mov
test
aas
lods
inc
loope
sbb
rcr
pop
push
mov
add
sub
or
jbe
sub
lahf
mov
mov
popa
mov
push
out
mov
pop
mov
cld
in
pop
imul
fisubrl
mov
pop
mov
and
jns
lods
test
inc
mov
inc
out
les
mov
jb
fcmovne
mov
pop
fldl
out
or
sahf
rclb
jmp
test
adc
dec
sbb
dec
roll
xchg
pop
sbb
je
imul
dec
jns
stos
lods
pusha
xchg
sti
push
fwait
scas
inc
cwtl
mov
pop
in
shlb
mov
mov
mov
push
fnsave
or
addr16
mov
sti
loope
ficompl
dec
jo
imul
pop
add
arpl
push
stc
mov
dec
jno
sbb
push
cltd
sbb
incb
pop
std
add
test
dec
xchg
in
stc
jl
mov
mov
or
es
xor
xchg
adc
in
dec
std
add
je
jmp
shlb
fildll
mov
sbb
sahf
aad
dec
push
cli
push
pop
sbb
stos
aaa
int3
outsb
rol
and
sti
lods
fidivl
daa
repnz
fiaddl
es
mov
cmp
adc
test
sub
pop
xor
xor
add
inc
push
loope
cmp
sbb
cs
shll
aam
jecxz
cs
mov
add
inc
mov
into
addl
sbb
mov
xor
mov
popa
int3
shl
and
lods
cmp
add
stos
jbe
fnstenv
mov
cs
lahf
cld
aam
push
xchg
xor
ret
addr16
int
addl
dec
fstps
sbb
lods
pusha
call
mov
fcompl
loope
sti
rcr
jecxz
loop
insb
pop
enter
ficoms
ljmp
jp
add
or
pop
adc
mov
adc
icebp
outsb
cmpsl
xchg
iret
push
cmp
or
aad
clc
rolb
mov
shll
cmpsl
sbb
imul
addr16
xchg
or
loope
call
sub
rcr
cld
add
gs
rcll
rcl
dec
lds
stos
movsb
movsl
cwtl
fisubrl
xchg
push
jl
in
inc
negl
mov
lret
and
cmpb
subb
pop
xchg
push
sub
dec
fdiv
or
adc
ds
aad
pushf
pop
add
mov
mov
repz
pop
mov
ficoms
les
mov
mulb
push
push
out
fwait
cwtl
push
pop
pushf
xchg
xor
inc
jne
aam
and
fsubl
push
and
inc
cmp
shr
adc
scas
decl
mov
cltd
mov
inc
mov
popf
shrl
inc
scas
fcmovnbe
stos
clc
loope
jp
ficoms
shlb
mov
sbb
mov
cmpl
addr16
fldcw
mov
add
sub
push
adc
fwait
in
push
daa
test
jne
ret
adc
xor
dec
ret
out
push
out
and
loopne
add
std
xlat
and
sub
lcall
lea
and
loope
adc
gs
cmp
jae
test
call
xlat
xchg
or
inc
das
xor
js
xchg
stc
mov
daa
ss
subl
lahf
pop
add
pop
jbe
xchg
or
pushf
mov
jno
nop
pop
lahf
sbb
int3
mov
subb
daa
insb
jecxz
int
xchg
push
cwtl
cld
mov
cmp
mov
xchg
ja
cmpb
push
mov
dec
xchg
orb
test
add
adc
or
dec
das
pop
sub
and
sbbb
pop
mov
movsb
mov
jb
push
mov
cs
fistl
dec
js
mov
shll
test
fstpl
jmp
in
stos
xchg
or
mov
push
xor
mov
dec
dec
add
call
out
sub
jp
xor
mov
jp
sbb
popa
decl
xor
jp
aad
jae
jb
enter
xchg
and
out
les
insb
mov
xchg
cmp
xor
pop
leave
and
aas
ljmp
insb
mull
inc
xor
in
mov
xchg
popa
dec
mov
sbb
cmp
enter
adc
dec
mov
push
out
js
aad
fimuls
xchg
je
mov
insl
decl
fucomip
mov
mov
sbb
adc
cmp
mov
or
dec
pop
mov
clc
repz
jmp
addl
mov
jb
popa
pushf
xchg
fwait
inc
jno
push
sub
xchg
es
or
mov
mov
jmp
faddl
sahf
je
adc
aaa
mov
test
repnz
sub
push
jle
sub
ja
sbb
push
call
sbb
out
mov
lods
pop
jo
push
out
lock
cmp
and
add
into
or
aaa
rorb
pop
int
out
mov
imul
cmc
mov
mov
incb
and
push
or
pop
es
cmp
je
notl
cmpsb
mov
mov
and
iret
shl
jnp
dec
test
sbb
test
aad
popa
ljmp
leave
in
sub
inc
out
and
xchg
mov
fildl
push
mov
inc
dec
std
inc
mov
push
adc
movb
iret
dec
in
scas
cld
add
lods
repz
inc
push
push
jl
xlat
testl
cmp
mov
fs
je
dec
roll
mov
rcll
out
xorb
in
ret
cvtps2pi
pop
out
mov
into
popf
ret
pop
or
pop
jae
dec
fldcw
cmp
mov
pop
push
add
mov
sub
leavew
or
imul
mov
ljmp
andl
mov
iret
outsb
into
neg
std
out
and
movsl
xchg
push
cwtl
and
mov
sub
or
pop
push
xlat
and
or
cs
fisubrl
xchg
scas
dec
add
imul
xor
arpl
and
les
xor
cmp
inc
pushf
pcmpgtb
inc
cmpl
lods
fistl
cmp
daa
mov
sbb
or
mov
mov
add
xlat
mov
push
and
cld
lock
lea
push
mov
into
pop
and
sbbl
jae
outsl
cmp
or
cmpsl
add
pop
add
mov
out
jge
push
xor
xchg
gs
sbb
jne
xor
movsl
fidivrs
lds
sub
mov
add
lds
xor
push
rolb
shll
lods
fwait
adc
or
or
cmpsl
jg
call
iret
scas
cmpsb
rolb
and
std
arpl
sub
ljmp
xchg
inc
adc
sbb
sub
or
dec
adc
lcall
inc
sub
xor
pop
daa
xlat
xchg
call
fdivrs
jp
dec
ljmp
nop
mov
hlt
stc
popf
jecxz
fldcw
les
adc
dec
xchg
ret
out
lahf
div
cld
enter
adc
add
mov
mov
movsb
lcall
ficompl
into
cmp
jns
imul
outsb
aaa
jae
dec
mov
xor
mov
xor
jne
push
int
ja
gs
insb
pushf
jns
in
out
bound
dec
add
jbe
jg
imul
das
adc
ds
js
ret
scas
shl
adc
in
sub
jle
addr16
jle
nop
jmp
mov
jb
imul
negb
movsb
clc
out
add
lret
fcompl
sub
fistl
jnp
inc
push
loop
mov
ffreep
lcall
sbb
sarl
and
add
gs
pushf
xor
rorb
popf
push
aam
mov
fstps
in
sub
sbb
inc
xor
cmc
pop
cmp
outsb
iret
inc
nop
mov
xchg
shl
stos
mov
push
or
add
jns
and
cltd
sbb
xchg
jl
nop
fidivs
jno
mov
jg
rclb
nop
jnp
sbb
arpl
jno
out
push
sbb
addr16
addr16
push
fdivs
push
into
cmp
fists
ja
loop
or
movsb
das
add
repz
sub
in
repnz
fldenv
es
jmp
dec
sarb
add
flds
sub
mov
sbb
les
into
push
fstps
aam
sbb
iret
mov
sahf
bound
add
or
out
or
test
inc
mov
jl
cmpsl
xchg
inc
ret
sbb
test
adc
lret
mov
push
add
flds
jb,pn
mov
mov
lret
cmp
ss
add
loop
popa
xor
shlb
pop
ret
scas
xchg
out
sbb
lds
movsb
lock
and
cmc
add
daa
ljmp
mov
fldenv
mov
shll
push
or
sub
in
fcmovnbe
sub
mov
push
jo
dec
or
ret
fbld
mov
push
ret
jbe
ja
arpl
test
iret
popa
incl
jbe
cmp
hlt
xchg
sub
pop
fnsave
mov
ljmp
clc
subb
and
imul
es
xor
jecxz
fcmovnu
pop
in
in
xchg
and
jb
loopne
add
xchg
movsb
jo
std
ljmp
in
fldl
jnp
es
mov
mov
cltd
mov
jne
imul
or
and
xor
sbb
inc
fists
idivb
push
adc
pop
push
jmp
in
scas
ret
adc
mov
mov
bound
hlt
std
mov
out
mov
andl
test
push
bound
imul
aaa
and
and
shll
das
or
gs
cmpsl
fcompl
adcl
adc
insl
sub
int
fisubrl
pop
sbb
dec
inc
jo
je
xor
xor
xchg
push
mov
add
fildl
sub
lahf
out
ficoms
lods
mov
outsb
sbb
sbb
xchg
sub
mov
or
inc
fmull
fadds
popa
mov
jbe
daa
jae
xor
inc
js
call
dec
int3
dec
mov
or
es
ficoms
cmp
dec
xchg
xchg
cmp
clc
mov
mov
arpl
cltd
aaa
test
iret
cmp
sbb
add
loopne
jno
into
out
cmp
mov
pop
fsubrl
sbb
insb
and
ret
aam
dec
xchg
jp
adc
enter
pop
mov
sub
lahf
outsl
movsb
flds
dec
mov
scas
dec
jle
mov
cltd
pop
repz
bound
xor
adc
pop
adc
test
inc
sub
and
cmp
data16
aaa
hlt
fisttps
dec
dec
sysexit
sub
pop
ljmp
out
in
add
rcrl
mov
addr16
cmpsl
mov
jge
inc
mov
xchg
push
mov
test
dec
lahf
and
in
push
rcrl
jmp
into
mov
push
dec
pop
or
in
fnsave
fidivrl
pop
int
aad
ss
fidivrs
inc
test
jbe
pop
shll
adc
dec
adc
jae
sbb
sbbl
outsb
jge
out
cmp
xor
sarb
hlt
sbb
leave
test
rolb
pop
xor
lret
in
iret
mov
mov
out
hlt
das
movl
xchg
leave
arpl
shrl
loope
sbb
mov
fisubrs
inc
jns
sub
insb
jb
pusha
pop
dec
test
xchg
mov
push
fucomi
ljmp
shll
and
adc
mov
lds
pop
dec
mov
icebp
ret
dec
mov
out
and
jns
jo
cmp
out
jnp
xchg
test
sbb
pop
stc
jle
jmp
fnsave
dec
add
test
mov
sub
data16
pop
fimull
sbb
stos
repnz
loopne
adc
push
icebp
pop
ret
sbb
and
adc
lcall
add
jns
and
ss
mov
adc
jno
cmp
and
mov
mov
push
xor
aam
bound
lds
jne
xlat
cmp
lods
mov
pop
or
mov
mov
xchg
sahf
sbb
andb
lds
xchg
insb
push
pushf
mov
pop
push
aas
xor
push
bound
shrb
cmp
sub
inc
mov
sbb
pushf
sbb
mov
clc
shrl
aad
jno
xor
sbb
popa
xchg
bound
and
and
adc
xchg
mov
and
shlb
inc
add
xor
xchg
int
adc
adc
mov
arpl
inc
fisubrs
in
icebp
dec
cmpsl
cwtl
pusha
pop
test
xchg
adc
or
mov
inc
ds
pop
and
or
lcall
fcmovnbe
cwtl
adc
pop
bound
js,pn
repz
fwait
insb
xor
and
xor
push
int
orb
shlb
lock
mov
add
jecxz
push
mov
cmc
fildll
nop
add
mov
mov
cmc
jbe
lret
sbb
negb
cmp
nop
mov
cmpsl
pop
inc
add
ror
ss
add
add
dec
nop
fcoml
fsub
mov
or
push
jle
mov
stos
lea
std
fstpl
stos
cmp
xor
adc
pminub
and
insb
cwtl
push
dec
mov
xor
icebp
push
scas
mov
cltd
stos
arpl
ds
enter
cmpb
push
lds
jns
jb
rclb
mov
aas
scas
jmp
aad
data16
repnz
pop
scas
iret
ret
scas
outsl
stc
test
pop
cmp
popa
pop
or
cmp
xlat
out
mov
cli
mov
movsb
rcll
push
cmp
cli
sbb
arpl
ja
out
cmpb
popa
loopne
scas
bound
gs
into
sub
pop
mov
popf
ja
xor
jno
rclb
pop
mov
and
sub
mov
cmp
out
cmp
pop
dec
outsb
pop
xchg
mov
pop
and
les
icebp
lahf
js
jecxz
or
sbb
mov
loopne
or
add
or
enter
aaa
fstl
xchg
push
sbb
push
fs
mov
inc
xchg
jo
fnsave
es
in
pop
in
lret
mov
mov
das
nop
pop
lea
mov
jne
mov
addr16
push
xor
mov
and
lahf
in
pop
xor
add
clc
or
js
in
ds
mov
int3
outsb
rol
sub
popa
dec
js
dec
and
push
not
sub
xor
ljmp
xlat
jp
push
lret
sarl
ljmp
jne
lret
cld
filds
shr
nop
popa
mov
cmp
adc
pop
mov
aam
ljmp
add
cmp
dec
mov
mov
cs
dec
mov
dec
mov
xchg
or
pop
push
xor
out
shll
pop
pushf
push
dec
dec
mov
or
and
div
add
xchg
adc
fs
pop
cld
repnz
or
or
mov
inc
lods
push
stos
jnp
xchg
or
das
imull
orl
push
popa
in
stc
or
sub
andl
loop
inc
fidivrs
call
adc
add
cmp
test
sarl
push
inc
js
push
jg
nop
iret
push
aam
push
stos
xchg
fiadds
repnz
das
imul
sti
into
arpl
in
in
push
mov
xchg
push
rcrl
adc
or
jmp
aad
je
push
jp
dec
cmp
pop
ja
data16
pop
stos
mov
xchg
jns
stos
scas
adc
in
test
cmp
insb
dec
call
fwait
lret
push
scas
push
jmp
pop
push
and
pop
addr16
pop
sbb
rol
push
rorl
jecxz
ljmp
iret
lods
xchg
aam
sbb
and
jo
mov
sbb
push
jecxz
dec
jnp
daa
mov
or
mov
mov
cmp
push
mov
jnp
jle
xchg
shlb
stos
fidivs
sbb
jbe
lahf
inc
dec
into
shr
out
pop
dec
pop
mov
stos
adc
test
jne
jmp
push
cmp
xchg
xor
sbb
dec
xchg
mov
lds
or
cs
ja
sahf
pop
aad
add
xlat
dec
sub
cmpb
incl
nop
push
and
jo
cmp
pop
rorl
mov
push
xchg
adc
jle
dec
adc
leave
lods
or
push
cwtl
jg
pop
xchg
jmp
and
dec
mov
addr16
mov
add
or
push
push
sub
push
jge
mov
cmp
dec
aad
insb
loopne
lock
and
outsb
jnp
xchg
pusha
add
lcall
cmp
mov
cmp
push
outsb
inc
movsl
mov
iret
xchg
sti
fmul
mov
jg
addr16
dec
pop
lcall
stc
test
pop
sub
mov
sarl
cli
aad
fdivrl
pop
dec
adc
adc
mov
push
cltd
dec
mov
add
std
nop
loop
add
lcall
enter
pop
fdivr
in
dec
insl
ljmp
in
scas
insl
dec
or
mov
fmull
mov
ljmp
stos
jne
pop
xchg
sub
hlt
mov
fs
mov
fisttps
pop
dec
cltd
push
push
jle
pushf
cmpsl
jns
push
sub
xchg
aad
lds
imul
and
popa
fstpt
mov
dec
pop
ja
imul
aam
sub
mov
fnstenv
cli
push
repz
mov
lahf
xor
test
sti
pop
or
shr
push
and
mov
inc
push
cltd
dec
pop
fiadds
lret
adcl
rolb
fdiv
popf
mov
and
negb
es
addl
lock
je
fistpll
xchg
mov
xchg
push
pop
inc
push
xor
dec
dec
sbb
stos
sbb
xchg
add
xchg
lret
xlat
nop
fiaddl
insl
and
outsb
scas
rol
loopne
mov
pop
jo
adc
das
mov
fmull
jecxz
leave
sbb
pop
scas
leave
pop
lahf
lods
and
cmp
ret
xchg
jne
mov
popa
stos
push
inc
or
and
jmp
fwait
pop
pop
testb
adc
popa
xchg
xor
push
popa
add
sbb
aad
jns
test
jns
adcl
outsl
mov
or
pop
popf
stc
sub
xchg
out
add
xchg
lds
loop
popf
inc
push
out
addb
jae
ja
pusha
in
mov
push
inc
lcall
mov
arpl
add
les
sub
push
int
lahf
lock
popa
icebp
out
fs
xchg
add
or
mov
mov
adc
movsl
or
mov
icebp
fidivrs
stc
out
push
pop
jmp
into
lcall
sti
div
imul
cwtl
inc
das
mov
xchg
insl
stos
lea
push
xor
jb
das
shr
mov
iret
les
mov
iret
je
and
adc
mov
fdivl
call
test
xchg
hlt
push
icebp
jge
cmp
icebp
das
fwait
lcall
test
les
rclb
inc
sbb
mov
inc
or
push
rcll
mov
inc
loop
loop
mov
inc
fcomps
js
jns
gs
dec
es
or
outsb
inc
fisttpll
movsb
test
mov
xchg
push
mov
shll
call
mov
outsb
xor
cmp
or
insb
sub
jecxz
call
sarb
outsl
dec
or
jnp
sti
movsb
xor
mov
inc
ja
fadd
jg
fbld
or
inc
xchg
cmpsb
icebp
or
cltd
xlat
movsb
outsl
shlb
out
stos
cmp
aam
int3
lds
sbb
xchg
fdivr
std
dec
sub
cld
push
lods
dec
stos
add
ffreep
stos
lods
add
gs
in
andb
mov
mov
fldl
fldt
add
push
dec
adc
push
rcll
ss
jg
jmp
push
outsb
lock
lods
lret
sbb
mov
dec
dec
jmp
iret
push
adc
or
mov
inc
imul
ss
jle
mov
adcl
mov
xlat
mov
js
add
inc
pop
mov
dec
mov
dec
add
cmp
sahf
push
neg
push
dec
mov
mov
adc
jl
repnz
roll
dec
mov
mov
cmp
in
fimuls
mov
and
inc
mov
rclb
mov
lock
and
shll
pop
sbb
shll
sbbb
lahf
stos
fisttpll
out
fisttpll
ja
mov
sbb
sbb
fdivl
jp
mov
sbb
sub
ds
mov
xchg
adc
retw
scas
mov
mov
jmp
mov
loope
fisubrs
xchg
xor
push
shrb
sub
inc
stos
sbb
pop
pop
sbb
mov
lret
jmp
in
adc
cmp
loop
inc
aas
xor
sub
add
jmp
push
leave
ds
insb
leave
and
outsb
nop
cli
loopne
jb
imul
mov
inc
and
xchg
ds
dec
mov
sbb
push
stos
push
inc
xchg
jp
push
pop
cld
cmp
lea
movsl
mov
test
lds
popf
dec
mov
mov
fidivrl
dec
stos
testw
imul
pop
pop
cmp
sbb
out
cmp
mov
lret
repnz
xor
int3
in
mov
and
jbe
inc
loop
rcrl
mov
aad
bound
test
insb
pop
jl
and
xchg
scas
sbb
push
inc
mov
jecxz
pop
xchg
pusha
pslld
and
adc
xchg
mov
stos
sbb
outsb
fisttpll
mov
sti
aad
cmp
fcmovbe
addr16
dec
and
arpl
fsubrs
sub
jae
nop
sub
testl
inc
pusha
mov
mov
xchg
sahf
adc
mov
outsb
pop
call
xor
dec
negl
lea
push
repz
and
push
push
stos
and
dec
pop
cmc
cmp
push
mov
push
sbb
stos
insl
sub
and
push
lret
push
lea
fwait
jg
dec
sbb
push
test
scas
lock
stos
testb
dec
jle
mov
repnz
fdivrs
fsubrs
test
push
adc
sbb
pop
fstpt
lret
jge
scas
mov
xor
mov
mov
jne
xor
nop
movsl
mov
rcrb
sbb
cmc
xor
inc
shr
adc
cmp
inc
dec
aas
inc
pusha
out
cmpl
lret
imulb
sub
and
cmp
sbb
mov
push
loope
cld
jb
in
jmp
lods
cltd
adc
sti
js
pop
int3
mov
add
pusha
or
push
mov
lret
pop
pop
dec
orb
insb
mov
push
rcrl
cli
mov
imul
clc
es
lea
adc
and
imul
call
ss
icebp
push
sbb
inc
fs
pop
lea
imul
js
cld
lret
sbb
testb
es
pusha
int
fdivs
mov
mov
imul
repnz
mov
dec
or
jnp
add
mov
insl
xchg
cmc
mov
xchg
inc
inc
mov
mov
out
cli
cwtl
mov
in
outsl
xlat
push
in
cmpsb
notl
cmp
mov
pop
in
seta
mov
cmp
jae
out
out
jp
mov
aaa
aad
xor
jmp
aam
xchg
add
lock
fsincos
bts
ss
inc
adc
and
ficoms
ja
mov
xchg
loopne
test
pop
daa
mov
shl
push
pop
ret
gs
lret
mov
stos
addl
cmp
es
sar
push
jecxz
jg
sub
mov
and
out
cmp
ret
mov
ss
xchg
sti
push
daa
inc
movsb
mov
and
pop
add
iret
popf
cltd
sub
or
or
lahf
jp
cltd
sbb
push
sbb
sbb
mov
jne
or
push
mov
rcll
fs
int
scas
mov
lcall
inc
push
lret
add
pushf
sub
mov
icebp
push
push
push
in
mov
roll
pop
jge
pop
test
unpcklps
add
test
jne
inc
cmpsb
bound
and
push
jo
pushf
xchg
and
shll
cmp
xchg
or
jo
insl
push
push
loop
jbe
cmp
sub
mov
lock
mov
les
rcrb
xor
call
lcall
dec
or
daa
pop
jge
pop
sub
mov
test
push
out
push
fistps
pop
pushf
mov
fsubrl
and
shr
sub
xor
jb
dec
sub
xchg
ja
adc
roll
mov
je
out
fmul
in
pop
mov
scas
insl
and
bound
pushf
das
or
mov
inc
ja
pop
mov
mov
into
mov
or
imul
in
pop
pop
add
jbe
fcoms
lcall
jns
or
xor
cmp
movsl
in
addb
push
pop
fstpl
js
shrb
repnz
and
faddl
push
push
ss
pop
clc
jnp
clc
js
iret
mov
inc
cmc
mov
or
rcrl
or
ja
jae
adcl
sbb
mov
cmp
icebp
mov
jg
jecxz
mov
sbb
mov
hlt
xchg
pop
outsb
or
mov
outsl
out
xor
aad
int3
or
jecxz
push
scas
xor
fwait
loopne
inc
aaa
xchg
mov
add
xchg
js
inc
xchg
lods
sbb
popa
ja
xchg
mov
pusha
or
mov
add
fcmovnbe
cld
push
mov
outsb
dec
cmp
aaa
addr16
cmp
xchg
fstpl
mov
adc
insb
push
add
ficomps
test
xor
mov
addr16
jmp
fwait
mov
jb
pop
in
decl
subl
rorb
in
mov
pushl
mov
add
sub
inc
inc
into
dec
je
mov
daa
or
jns
jl
adc
jmp
mov
inc
or
xchg
push
fldenv
jg
push
arpl
jo
sahf
lods
mov
addb
dec
enter
test
cltd
push
inc
mov
ret
popf
imulb
pand
pop
cmp
loope
clc
mov
push
aad
push
call
mov
mov
inc
testb
movsb
dec
cmp
cmpsb
aam
push
jns
roll
xorl
int
lods
loop
pop
mov
cwtl
outsb
movsl
or
and
mov
lds
xlat
sub
icebp
mov
in
das
pop
pop
cli
xchg
lods
fistpl
aas
clc
inc
add
sub
push
mov
cmpsl
addb
cs
rolb
in
xchg
imul
mov
push
inc
xchg
movsb
jge
inc
hlt
pop
mov
inc
data16
mov
mov
ljmp
loopne
xchg
pop
mov
testb
xchg
setae
xchg
push
push
mov
mov
movsl
adc
dec
push
xchg
test
lcall
jmp
xor
imul
in
mov
aad
jns
movb
push
dec
push
pop
xchg
sarb
sub
divb
sub
int
or
mov
repnz
subb
jns
and
lea
push
test
daa
aad
cmp
or
cmpsl
mov
mov
jp
aad
fnstcw
adc
dec
sbb
sbb
xacquire
shlb
clc
lret
inc
push
mov
xchg
inc
mov
add
mov
mov
push
add
sbb
rcll
lcall
xor
pop
cld
adc
jno
sub
pop
aam
popa
mov
xchg
or
lret
and
lcall
adc
into
mov
fisubrs
mov
test
dec
test
pusha
repz
out
pushf
cmp
out
xchg
xor
xchg
mov
out
jp
inc
or
or
push
scas
in
push
sti
adc
fistpll
pop
dec
imul
cmp
mov
or
cld
inc
and
dec
fidivrl
dec
adc
das
or
lods
or
adc
add
or
subb
adc
cmp
pop
cld
push
or
jl
fcompl
lods
push
xchg
cmp
cmp
mov
jae
pop
sbb
sahf
adcb
pop
mov
push
test
mov
pop
idivb
inc
cmp
shlb
dec
js
repz
push
and
cmp
in
dec
jae
pop
and
mov
call
cmp
push
aaa
push
xchg
ret
and
fldz
inc
in
imull
jmp
sub
call
scas
outsb
pop
hlt
scas
jb
jne
or
dec
cmp
cmpsl
lods
mov
dec
enter
testb
dec
aam
dec
mov
sub
mov
fs
into
add
adc
xor
lods
jge
mov
inc
xchg
enter
inc
js
out
xchg
lret
repnz
push
rclb
ds
push
in
xchg
mov
dec
test
jne
insb
sub
icebp
mov
jle
lahf
xchg
popf
dec
in
adc
mov
imul
mov
mov
push
push
ds
inc
cmp
cmc
inc
int
pop
sbb
xchg
shrl
inc
adc
add
push
dec
ror
push
aam
es
push
iret
enter
pop
jbe
sub
imul
push
mov
cli
inc
sub
adc
nop
mov
rorl
pop
cli
sbb
lret
sub
sub
and
mov
movsl
bound
in
lcall
pop
imul
or
pop
inc
fistl
imul
mov
mov
add
and
xor
rcrb
push
xor
test
push
cwtl
sbb
xor
dec
add
fdivrs
fstpt
push
int3
pop
aam
scas
pop
xlat
dec
mov
pop
mov
mov
inc
loop
stc
adc
rclb
into
sub
mov
add
loop
mov
jle
mov
ret
push
xor
add
push
js
stos
in
jg
sarl
or
mov
in
enter
xchg
mov
xchg
jg
lods
inc
jecxz
lahf
sbb
inc
and
imull
adc
loop
xor
insl
or
stos
add
pop
sahf
fldcw
cmpl
pop
push
pop
sub
icebp
fs
mov
lds
cmp
les
add
mov
ret
sub
xor
cmpsl
push
sahf
inc
mov
inc
scas
mov
mov
in
adc
imul
cmp
sbb
test
push
mov
pop
and
cld
xor
fisttpll
pop
ljmp
iret
mov
leave
ret
jno
cmpsb
iret
cmp
cld
pusha
or
test
or
lahf
pop
addb
sbb
popa
imul
test
mov
divl
pop
test
and
sub
mov
in
xorb
mov
sbb
ficompl
movsb
loopne
adc
adc
inc
out
das
ss
sub
xor
jno
test
fs
mov
lock
push
jbe
sub
lret
or
or
out
xor
call
call
ss
jo
push
sti
pop
mov
xchg
cs
sub
pop
ds
orb
mov
inc
int
inc
dec
pop
xchg
les
sbb
add
push
repnz
adc
imulb
mov
int
sbb
cwtl
mov
dec
enter
push
mov
mov
test
push
minps
jmp
imul
adc
xchg
sbb
mov
push
xchg
cmp
mov
lahf
cld
mov
rolb
loopne
mov
shrl
pop
adc
mov
in
out
movsb
insb
and
movl
stos
int
push
stc
push
arpl
and
inc
negl
pop
or
divb
cmp
fdivrl
jle
xor
mov
ja
push
cmpb
std
mov
push
inc
sbb
lods
or
sub
bnd
adc
dec
dec
lret
rclb
mov
push
pop
cs
xchg
or
rclb
ljmp
dec
cmp
adc
testl
or
push
cmp
jbe
jbe
ficomps
testl
or
in
into
adc
mov
pop
aad
fs
mov
xor
xor
push
scas
xor
jo
out
fnstsw
mov
push
test
lahf
insl
shll
movsb
std
adc
and
jg
repz
dec
xchg
pop
adc
mov
insb
inc
cmp
ljmp
mov
mov
in
inc
dec
adc
in
mov
xchg
loop
adc
inc
xlat
sub
iret
mov
cmp
mov
xchg
in
hlt
pop
add
push
mov
mov
das
dec
fisubl
mov
inc
icebp
jmp
loope
mov
adc
jbe
push
nop
and
les
jnp
sbb
adc
mov
sub
les
icebp
add
dec
add
std
push
and
push
stos
in
fwait
int
mov
lea
js
push
cld
movl
jge
or
or
cmp
jle
or
sub
pop
mov
and
fistl
cmp
test
lea
es
push
and
and
mov
or
cmp
mov
jge
out
loope
add
sbb
xorl
movsl
ficomps
add
add
lret
jb
filds
jnp
push
xchg
subb
mov
in
push
sub
js
mov
push
xchg
cwtl
je
push
cmp
xor
pushl
frstor
cmpsl
ds
mov
repnz
or
in
mov
and
cmpsb
xor
and
outsb
lock
sarb
pop
adc
inc
aaa
add
pop
sbb
push
mov
lret
in
add
sbb
pop
and
cmpsl
mov
loopne
mov
xor
cmp
scas
xchg
imul
add
adc
ss
mov
adc
cmp
push
add
jbe
mov
push
loope
dec
fsts
adc
sar
jo
cmpsb
push
ret
cmpsb
fists
lahf
movsb
aas
inc
adc
mov
dec
mov
push
xor
daa
sbb
xchg
aas
mov
outsb
je
mov
cmp
mov
out
dec
js
in
int3
clc
pop
arpl
sub
in
cs
dec
jae
in
cmp
inc
stos
sbb
sub
stos
faddp
mov
xchg
push
push
push
sahf
lods
lcall
jae
in
int
orl
xchg
add
mov
scas
outsl
xchg
cmp
clc
cld
cs
int3
ror
out
inc
add
popf
lods
out
mov
mov
cmp
add
enter
fldl
xorl
jp
xchg
std
jge
std
fistpl
rsqrtps
neg
pop
xchg
scas
sub
fdivs
jmp
dec
orb
sbb
movsb
mov
stc
pop
jae
pop
mov
xor
fucomi
sub
or
jl
fwait
pop
into
pusha
push
jmp
or
test
fcomps
faddp
and
inc
popw
int
xor
jne
adc
nop
sahf
sbb
addb
sti
and
aad
push
repnz
inc
in
fisubrl
xlat
mov
bound
shll
mov
les
or
bound
pushf
mov
adc
cmp
andb
push
dec
sti
sub
jg
shll
and
mov
cmp
cmpsl
mov
les
inc
jmp
mov
outsl
mov
sub
and
add
and
jnp
gs
pop
icebp
adc
ljmp
dec
aam
out
bound
xchg
sarl
test
ret
xchg
cmp
xor
and
jae
scas
js
mov
mov
or
addr16
ja
mov
cmp
lret
mov
loop
aad
sub
subl
jmp
incl
lahf
ret
push
jmp
movsl
movsb
jp
push
lret
jne
cli
sbb
mov
mov
fildll
sub
cmp
rcl
movsb
cmp
and
jle
add
jmp
sti
subl
stos
jmp
xchg
iret
push
repnz
lahf
fistps
sub
adc
fwait
les
cmpsl
sub
repnz
mov
or
cmp
cmpb
pop
loope
subl
lret
push
xchg
cld
lret
test
bound
or
stc
dec
in
and
aad
pop
enter
sub
xor
xchg
enter
in
push
bound
in
adc
dec
insl
dec
mov
jbe
enter
loop
shlb
negl
xor
or
movsb
or
js
pop
lret
pop
mov
popf
popf
lods
lret
sub
inc
xor
mov
fnstenv
sub
mov
fsubrl
ja
xlat
out
test
scas
jno
xchg
xchg
and
ret
pop
fcoms
out
data16
xor
addb
push
adc
cs
adc
xchg
xor
and
aam
mov
lock
and
movsl
mov
push
cltd
inc
lret
rol
fistpl
push
ret
aad
addr16
aam
test
popf
mov
outsl
pop
rcl
jl
mov
add
dec
mov
jbe
xchg
or
add
cmc
mov
ret
push
mov
xor
mov
insb
mov
lret
jp
xchg
dec
in
pop
add
outsb
cld
sub
add
test
lret
sub
mov
pop
out
push
imul
dec
out
xor
mov
inc
and
outsb
xchg
pop
cmovnp
and
jecxz
pop
dec
mov
fisubrs
mov
mov
movsb
jmp
in
lret
lea
dec
adc
sub
lret
icebp
mov
jb
mov
jmp
mov
lahf
push
mov
test
sbb
iret
or
or
test
int3
enter
in
xchg
push
repnz
fisubs
jno
rcrl
loopnew
bound
sub
insb
cmpsl
mov
adc
pop
cmp
shr
jmp
repz
not
inc
fidivs
pop
adc
leave
cltd
jmp
lds
mov
loope
loop
jnp
jg
shl
ret
dec
mov
mov
and
repz
jmp
and
mul
xlat
mov
pop
inc
push
stos
jle
mov
popa
sub
out
fwait
imul
sub
test
loop
or
fldcw
ret
lcall
sbb
shlb
cwtl
outsb
mov
add
out
loopne
int
jbe
xor
scas
cmp
mov
xchg
push
dec
aaa
pop
push
pop
arpl
mov
dec
mov
mov
push
jae
stc
adc
rolb
inc
push
jge
imul
sti
mov
lahf
lcall
clc
xor
jmp
mov
xor
ret
and
pop
mov
test
jecxz
in
pop
mov
shrb
repnz
gs
pop
popl
pushf
arpl
bound
ja
out
aam
fdiv
push
adc
xlat
sbb
cld
cmp
or
mov
cmp
lret
aad
jne
dec
mov
gs
jae,pt
inc
jp
adc
fsub
ret
es
lahf
add
jecxz
inc
pushf
fistpl
cmp
xchg
insl
inc
sarl
dec
stos
stos
add
jns
movsb
sbb
and
inc
addr16
fnstcw
scas
sbb
add
dec
data16
xchg
inc
jmp
loope
out
clc
ss
test
loope
mov
and
cmp
cmp
push
add
enter
fidivl
and
pop
xchg
outsl
pop
mov
mov
shlb
push
mov
mov
lret
add
out
fcomip
mov
mov
and
cmc
pop
mov
es
data16
mov
je
xchg
test
and
loope
push
xchg
jae
in
mov
iret
dec
mov
add
lret
in
imul
fcmovnu
cmpsl
repz
xchg
fcompl
xchg
pop
fwait
daa
gs
and
aad
and
inc
mov
xchg
adc
sti
xor
jge
cmp
inc
mov
test
xchg
mov
add
mov
into
les
js
xchg
test
mov
add
pop
gs
idivb
lds
daa
cli
fwait
inc
loopne
adc
adc
mov
dec
or
inc
fbld
push
mov
aas
movsl
push
mov
punpckhwd
or
lret
movsl
lds
aam
and
lock
insl
out
add
xor
xlat
mov
and
or
fidivrs
xchg
inc
aam
mov
sbb
ffree
mov
lahf
or
push
cmpsb
cmp
xchg
rclb
fsubs
mov
mov
lretw
or
shr
cmp
cmp
mov
movsb
or
pushf
mov
test
cwtl
jle
rorl
in
add
or
jmp
sbb
popa
inc
or
out
nop
xchg
mov
inc
sub
add
dec
rclb
ret
lret
sub
inc
test
loop
rcrl
iret
mov
std
add
jmp
jns
and
jg
dec
inc
imul
xchg
cs
out
push
fcoml
sbb
repnz
sub
cwtl
aaa
addr16
xchg
fsubl
mov
icebp
cmp
cmp
pop
fs
mov
push
dec
push
int
xor
adc
sbb
fs
pop
cmp
cli
pop
out
scas
xor
or
adc
testl
mov
sti
dec
cmp
and
loop
cwtl
push
movsb
jno
iret
push
lods
stc
xchg
or
loopne
or
mov
loop
jmp
std
test
xor
fidivs
dec
ja
dec
insb
shlb
inc
rclb
jle
dec
bnd
cmp
aaa
mov
mov
cmc
imul
mov
loop
add
scas
lds
mov
pushf
sub
pop
dec
mov
jle
jl
aam
xchg
pop
jle
jp
repnz
cmp
pushf
push
and
addr16
xchg
adc
push
cmp
into
inc
jnp
test
cmp
mov
mov
sbb
jecxz
sbb
mov
fbld
cmp
jnp
loopne
int3
jmp
jge
lods
xor
cmc
cld
ja
enter
xor
adc
xchg
test
push
aaa
fmul
xchg
lea
loope
inc
inc
jnp
jle
push
daa
mov
lcall
xchg
test
xor
ja
fwait
lahf
xchg
cli
lcall
mov
lds
sbb
mov
or
sbb
in
aam
stc
dec
scas
or
sarb
loop
xchg
cmp
sbb
xor
fwait
and
xchg
sbb
fstpl
jecxz
call
cmpsb
outsl
lods
pop
push
push
lock
push
add
scas
push
pop
sub
jecxz
ret
pop
xor
das
jb
rcrb
push
pushl
hlt
movsb
add
mov
dec
fnsave
mov
into
popa
xchg
adc
push
ror
and
add
mov
add
imul
testb
push
adc
mov
movsb
jge
addb
test
push
xchg
push
push
push
and
mov
lock
xor
sbbl
cmp
pop
dec
xchg
xchg
loope
insb
int
mov
push
mov
movsb
cli
out
cld
lcall
in
xchg
insb
push
fstps
xchg
xlat
insl
mov
pop
clc
test
test
cmpsl
lds
cmp
add
sbbl
rcrb
cmp
cwtl
testb
aad
ds
xchg
into
lahf
mov
and
stos
enter
insl
jae
mov
jmp
push
mov
fs
test
xor
lret
fbstp
cmp
or
pop
sub
dec
dec
cmpsb
test
shll
xlat
xchg
out
das
xchg
mov
lea
lea
inc
xchg
jno
push
dec
fnsave
or
mov
mov
cs
pusha
clc
faddp
inc
cs
sub
add
test
iret
or
fisttps
arpl
lods
iret
stc
out
mov
pusha
lret
push
sbb
mov
bound
sahf
stos
scas
push
stos
mov
stos
inc
add
in
loopne
jmp
loope
add
and
pop
cli
lret
clc
pop
pop
testb
mov
mov
shl
inc
into
push
lods
jge
leave
insl
mov
js
push
xor
xchg
pop
in
push
outsb
jl
mov
push
mov
or
cmp
push
jb
std
mov
cmp
push
dec
adc
push
ja
in
or
ret
or
lret
mov
fwait
xor
and
shlb
daa
inc
fisubrl
sti
outsb
pop
sub
mov
test
cmp
out
sarb
or
daa
push
mov
pop
jno
sbb
pop
dec
jo
inc
pop
adc
fwait
std
lods
jmp
mov
mov
data16
xor
jb
xorl
out
pop
daa
pop
jb
mov
mov
dec
pushf
or
scas
mov
add
insl
adcl
mov
imul
pop
mov
adc
adc
rclb
lcall
clc
vpsubsb
push
xor
popf
jae
insb
sarl
rcrl
cwtl
ficompl
pop
lds
sub
pop
in
cs
sub
fisubrs
adcl
test
and
inc
and
mov
add
sub
fisttpl
sbb
mov
sbb
lods
fisttpl
mov
ret
enter
dec
mov
jl
iret
aad
inc
test
adcl
xor
xor
stos
mov
or
mov
xor
adc
mov
xchg
add
adc
or
cmpsb
jb
stc
cmp
push
ja
testl
adc
mov
int3
cmpsb
ret
cmp
movsb
mov
in
sbb
outsl
nop
test
inc
fnsave
cvtpi2ps
sti
pop
mov
loope
mov
pop
iret
xchg
push
lods
add
fsubrp
xchg
inc
pop
nop
add
inc
add
add
push
lret
xchg
cmp
cmp
push
mov
ret
fs
leave
test
xrelease
sub
xchg
mov
push
rolb
inc
lcall
aas
mov
js
push
adc
mov
lds
in
sbb
or
sbb
dec
mov
mov
dec
movsb
mov
xor
or
adc
fsts
out
pop
fwait
dec
arpl
pop
sbb
xchg
les
adc
ja
lahf
js
into
iret
or
xor
iret
or
out
outsl
out
xor
ja
ret
xor
inc
movsl
test
jecxz
cmp
xor
dec
cmpl
ss
je
inc
loop
push
lcall
add
dec
rcrb
aaa
cmp
mov
push
and
mov
or
mov
or
inc
mov
dec
mov
sbb
negb
pop
shl
mov
aam
xchg
stos
sub
xchg
xor
sbb
jl
in
cs
popf
outsl
insb
jge
les
jecxz
cmp
std
shll
cmc
push
mov
lods
scas
jle
jnp
inc
mov
fnstenv
lods
adc
jo
mov
inc
sbb
sub
mov
lods
mov
dec
clc
add
movsb
xlat
aad
shll
pushf
push
adc
cli
and
and
in
fidivs
mov
xor
sbb
das
jne
dec
aaa
xor
inc
data16
mov
stos
dec
addr16
aad
pop
das
fistpl
push
adc
xchg
pop
sarb
push
mov
out
xchg
xchg
sbb
mov
cwtl
iret
cmp
lods
nop
jnp
nop
mov
adc
mov
in
adc
adc
lock
sub
int
cmpsb
xchg
adc
addr16
imul
push
loop
shl
sub
mov
adc
dec
or
push
add
mov
mov
pop
stos
orl
inc
cmp
push
fmulp
loope
push
jle
out
data16
imul
cli
sbb
fcmovne
push
cmp
jmp
inc
inc
sbb
pop
and
mov
or
int
mov
adc
dec
dec
mov
pop
mov
les
inc
lds
jmp
add
cmp
iret
xor
pop
scas
xor
mov
jge
stos
or
out
arpl
ret
enter
movsl
xor
fs
popa
and
cmp
out
inc
adc
jb
mov
jae
sub
sti
ja
adc
pop
in
adc
mov
gs
test
push
jl
mov
pop
fadd
shll
jg
shrl
outsb
mov
fs
mov
inc
je
lret
les
movsl
xor
leave
in
fcompl
mov
mov
sub
dec
push
or
jbe
push
inc
out
ss
mov
dec
add
xchg
pop
jmp
pop
mov
mov
jne
sbbl
sub
push
push
hlt
mov
sub
cmp
jns
sub
xchg
ss
mov
filds
adc
jbe
adc
ljmp
push
dec
je
adc
stos
mov
jbe
push
es
repz
cli
adc
dec
inc
cmp
popa
movsl
pop
mov
cmc
stos
mov
mov
stos
jmp
in
jno
inc
push
mov
adc
sbb
pop
jp
inc
mov
mov
stc
or
xor
xlat
sub
ss
sub
movsb
mov
pop
in
and
imul
and
mov
xchg
shrl
out
pop
mov
clc
dec
inc
stos
or
daa
outsb
jnp
lret
cwtl
enter
xor
repnz
and
push
es
xlat
je
dec
jno
in
lahf
out
ret
packsswb
mov
mov
push
movsl
rolb
mov
dec
cmp
sub
ret
outsb
lret
cmpl
aam
push
pop
push
pusha
sbb
enter
call
jb
enter
in
jecxz
fsubrl
das
iret
push
pop
ret
xchg
in
mov
scas
jo
mov
mov
sub
std
cmp
cmpsb
std
inc
addb
lods
movsl
inc
mov
lret
xchg
adc
jl
fs
shll
js
sub
data16
mov
iret
lret
repz
xchg
out
push
dec
and
xchg
mov
testb
jle
adc
xchg
sti
insl
call
subb
inc
mov
nop
js
fxch
cli
int
movsl
mov
push
push
ret
mov
outsb
aad
outsl
fsts
ror
jecxz
xchg
push
fistpll
or
test
adc
and
xchg
mov
je
repnz
jb
push
mov
add
fisttpl
jns
imul
mov
rcl
insl
dec
faddl
xlat
pop
jbe
add
dec
mov
repz
cmc
ja
push
mov
ja
test
shlb
rcl
sbb
sub
mov
pop
adc
jae
sbb
shrl
dec
dec
out
ret
idivb
fdivp
inc
or
mov
cs
adc
jmp
or
sbb
mov
subb
dec
push
and
mov
addl
mov
inc
in
lock
repnz
mov
xor
out
movsb
mov
sub
xchg
gs
int
jecxz
stos
mov
mov
repz
clc
das
push
jmp
imul
movsb
ljmp
rcrl
push
cmp
xor
and
mov
jns
in
and
movsl
mov
lahf
mov
adc
inc
jb
loop
jns
inc
popf
data16
add
or
ret
sub
mov
inc
movsb
lret
inc
pop
jmp
nop
jl
pop
lods
gs
icebp
stos
add
stos
mov
inc
xchg
fldlg2
sub
mov
cmp
push
data16
sbb
shlb
cwtl
popf
pop
enter
xor
or
shlb
pop
stc
inc
popa
sbb
or
mov
shrl
stos
push
lea
stos
sub
ficoml
xor
or
adc
xor
bt
xchg
popf
jge
mov
and
popf
push
push
sbb
mov
ret
shl
xchg
outsl
jno
inc
push
push
pushf
enter
jns
xor
lods
mov
adcl
cmp
das
sbb
in
insb
jo
jno
sub
test
stc
repnz
lret
shll
aas
mov
sbb
mov
mov
xchg
bound
js
lds
inc
xchg
xchg
aad
in
popf
xor
ljmp
jo
daa
lock
decb
nop
and
icebp
xchg
outsb
inc
iret
out
lods
fsubrs
lahf
push
adc
push
imul
push
rcll
cmp
cmp
out
adc
popa
in
insl
lea
rorl
in
ljmp
mov
popf
or
or
adc
adcb
push
pusha
jle
mov
loop
add
sarb
cli
rcl
xchg
sub
gs
mov
aam
arpl
jecxz
scas
ret
cmp
mov
mov
arpl
mov
push
jg
pushf
sar
scas
or
fdivrp
into
sarl
adc
hlt
cmp
pop
lret
sub
adc
cmpb
cmp
pop
cmp
mov
iret
push
icebp
and
fsts
int3
fs
sub
out
mov
ret
jb
mov
adc
xlat
movsl
outsb
fst
daa
or
mov
pushf
les
push
jl
into
sbb
pop
fldt
mov
pop
in
je
push
aaa
test
push
cli
lods
clc
jle
lret
int3
cmp
xchg
cmp
pop
rorl
jl
in
std
movsb
xor
and
push
mov
jbe
jae
pop
rcll
and
das
xchg
adc
es
js
pop
adc
push
icebp
and
out
xchg
jbe
fisttps
mov
mov
pop
xchg
pushf
das
sub
loop
ss
mov
pop
pop
dec
pushf
mov
cmp
xchg
inc
lahf
push
arpl
into
shlb
ljmp
mov
xchg
repnz
push
ret
push
dec
fiaddl
mov
stos
aas
cmp
sub
xor
and
adc
lods
mov
loope
sub
test
stc
test
fsubs
fsubr
testl
adc
pop
jle
nop
stos
sahf
add
pop
sti
cwtl
xlat
jmp
pop
mov
sbb
push
shr
sub
test
push
sbb
and
mov
fsubrl
inc
and
in
cld
loop
push
adc
or
repnz
dec
push
js
lret
dec
cwtl
inc
aad
jno
in
negl
call
xlat
enter
jb
out
dec
adc
jo
outsb
add
fs
std
rclb
in
lea
lods
data16
mov
jge
aas
inc
ret
sbb
cld
push
nop
outsb
popf
xchg
sarb
imul
xchg
inc
es
mov
jle
mov
mov
dec
cmpsb
outsb
test
jle
sub
mov
in
xor
scas
test
cmp
mov
mov
or
jle
sub
mov
push
jg
fnsave
cmpsl
addr16
enter
repz
vfmadd231sd
cwtl
jbe
nop
mov
push
aam
mov
fcmovne
fimull
ja
inc
and
imul
xchg
xor
mov
pop
fldenv
jg
lock
jns
xor
pop
or
ret
ret
jns
pop
out
test
imulb
add
pop
outsl
sbb
lock
and
aad
jnp
pop
shll
jae
dec
test
int3
arpl
stc
fs
scas
inc
cmp
addr16
xorb
xchg
jno
ss
adc
mov
daa
sub
xchg
jnp,pn
xor
jno
sub
js,pt
mov
lahf
and
cltd
call
fimuls
pop
popf
and
mov
in
pop
cwtl
jmp
mov
pop
movsb
mov
mov
xchg
sub
lret
insb
les
cmc
enter
sbb
jle
push
xor
jae
mov
mov
or
das
pop
fs
loop
cmp
push
hlt
int
daa
test
fdivs
stc
pusha
shll
outsl
mov
test
outsl
mov
out
pop
pop
imul
pop
fistps
in
mov
clc
push
push
gs
dec
lcall
cltd
or
mov
out
jmp
fnsave
adc
movsl
jne
fistpl
arpl
out
mov
jmp
and
cmp
icebp
mov
lret
inc
push
mov
xchg
std
sbb
xchg
mov
icebp
cmp
neg
cld
ret
repz
pop
inc
and
lret
call
imul
lcall
cmp
mov
adcb
loope
or
adc
pop
mov
push
pop
mov
add
mov
jl
sbb
pop
jecxz
lahf
mov
leave
pop
fwait
cltd
dec
sbb
jge
jb
loop
popa
iret
pop
enter
loope
pushf
loope
jmp
and
stos
arpl
pop
sarb
cwtl
lea
not
lret
lret
or
jl
inc
mov
cmpsb
mov
ror
jp
push
gs
xchg
inc
sub
call
push
dec
js
jne
je
cmp
cmp
frstor
and
cmpsb
mov
shll
adc
xlat
int
cmovb
cmc
mov
sub
iret
xchg
inc
or
shl
dec
mov
and
sub
mov
mov
aas
push
mov
subl
lea
mov
mov
enter
ds
push
inc
pop
adc
xor
add
gs
mov
push
dec
ret
icebp
loopne
clc
fs
mov
dec
sbb
cmp
ja
sub
ret
mov
lock
or
push
mov
dec
test
mov
fistps
aam
call
pop
inc
sbb
cmpsl
push
cmp
dec
ret
jbe
inc
sbb
xchg
dec
mov
push
loop
add
inc
arpl
or
mov
sub
sbb
roll
adc
loopne
imulb
push
jb
inc
dec
and
in
jne
adc
mov
sbb
notb
push
movsl
es
jmp
lock
or
push
jmp
iret
xchg
clc
sahf
sub
xchg
stc
cmp
inc
stc
das
xor
shrl
mov
push
dec
popf
nop
cmp
filds
scas
stos
shlb
shl
movb
dec
call
scas
and
dec
das
jecxz
sbb
imul
or
push
cmpsb
dec
je
sub
push
das
ficomps
repnz
fcomps
push
xor
mov
jne
sbb
cmp
mov
mov
or
add
pusha
aad
mov
mov
icebp
enter
push
inc
xor
out
movsl
pushf
sub
mov
sbb
lods
dec
cwtl
lahf
inc
lods
inc
inc
push
lds
or
add
or
int
add
movsl
jg
dec
addr16
fwait
out
sbb
iret
cmc
jecxz
imul
push
or
xor
push
lcall
adc
out
stos
ret
lret
mov
out
test
mov
insl
mov
das
pop
sbb
cmp
or
lcall
es
mov
xchg
sub
sub
mov
cmpsb
inc
push
adc
pop
loop
pusha
xchg
cmpsb
imull
mov
jb
stos
xor
lahf
das
bswap
push
mov
iret
adc
movsl
les
rcrb
or
mov
cld
and
mov
jecxz
negl
rolb
js
addr16
loop
dec
inc
cmp
xor
aaa
fidivrl
mov
movsl
cmp
mov
in
shrb
fldcw
ret
push
nop
pop
sub
testb
xchg
xor
cmp
loop
outsl
inc
inc
notl
lock
xchg
inc
scas
adc
and
imul
cmp
movsl
cmp
mov
push
push
int
pop
int
xchg
cmp
xchg
icebp
mov
stc
das
pop
ret
dec
mov
and
stos
inc
rcll
sub
aas
adc
mov
std
popa
mov
out
pop
cmpsl
scas
adc
repz
lods
jmp
jo
fmulp
xor
adc
add
mov
shl
out
sbb
cld
dec
jo
jge
push
or
xchg
hlt
inc
data16
mov
sahf
das
cmp
lods
lods
jb
add
jns
scas
sahf
inc
push
add
xor
subl
jbe
rcll
inc
mov
cmp
lock
push
add
dec
lds
mov
call
call
sti
lock
jl
cs
add
xor
pusha
ds
sub
std
inc
adc
adc
jg
sbb
out
mull
movsl
int
test
and
xchg
sub
mov
sbb
jae
movsb
cmpsl
std
out
push
lahf
out
and
stos
mov
int3
ljmp
in
pop
movsb
pop
lock
xchg
xlat
mov
xor
mov
popl
and
adc
mov
fdivr
dec
cwtl
add
mov
insl
bnd
push
adc
retw
xchg
xchg
stos
lss
jp
jmp
sub
outsl
xchg
mov
mov
cmc
data16
jl
dec
scas
movsl
xor
sahf
iret
push
pop
fnstcw
push
jae
lods
adc
xchg
jecxz
xchg
repnz
sub
pushf
je
inc
or
movsl
lcall
dec
mov
sub
das
push
xchg
in
xor
jae
les
addr16
rcr
jne
mov
sub
mov
cmp
loopne
pop
enter
jb
adcl
and
divl
jecxz
sub
test
mov
add
incb
sbb
scas
xlat
pop
cli
pop
jp
movsb
test
mov
push
cmp
inc
out
movb
adc
lods
sbb
rcr
imul
sbb
dec
pop
ficomps
movsb
mov
mov
xorb
inc
push
add
or
mov
fisttpll
sub
scas
add
aaa
hlt
inc
sbb
aas
arpl
and
or
lock
ss
mov
cmc
or
stos
mov
shr
fildl
jl
jp
aas
clc
mov
into
je
jge
cs
cmp
sbb
repnz
adc
adc
loop
add
les
xlat
leave
ror
aam
in
xor
aas
mov
stos
loope
arpl
lcall
pop
push
sub
xor
inc
je
dec
mov
cmp
sbb
lret
and
pop
jle
insb
mov
inc
test
mov
add
mov
add
cli
ror
add
movups
insb
ds
and
dec
mov
faddl
rcr
enter
sub
mov
popf
jbe
jbe
cmp
sub
imul
ds
dec
sub
popa
lods
lahf
inc
ficompl
dec
std
push
pmullw
mov
shrl
add
pop
mov
cli
idivb
mov
into
push
and
and
push
push
int3
jne
incb
fcmovb
pop
jle
pop
pop
inc
mov
fwait
push
xlat
les
mov
aam
mov
fstpl
js
xchg
negb
mov
sti
fdivrp
push
dec
into
adc
test
nop
jecxz
pop
sub
and
pop
adcl
rcrb
xchg
xor
lock
loop
jmp
into
adc
inc
sub
in
sub
dec
enter
mov
insb
lahf
int
adc
xor
out
add
aad
xor
sub
mov
scas
or
add
cmpsb
xor
cwtl
xchg
sbb
scas
dec
lcall
shll
call
stc
leave
outsb
test
ja
add
decb
and
pop
inc
mov
fucompp
fidivl
je
mov
mov
clc
inc
or
pop
mov
cwtl
call
scas
stc
pop
pushw
inc
inc
je
jecxz
cmpsb
cmp
std
cli
sub
sbb
jecxz
pop
push
int
lods
jg
add
pop
jno
bound
sub
outsb
loop
sbb
shlb
adc
mov
lcall
jo
stc
push
and
out
rep
xor
add
lds
fstp
pop
mov
adc
push
ret
mov
xor
test
push
lahf
popa
fidivs
cmpsb
mov
and
call
push
rcrl
int3
cmp
dec
dec
dec
mov
lea
pop
inc
xchg
cmp
push
adc
xchg
sbb
jb
ds
pop
idivl
mov
aaa
outsl
cmpl
jnp
pop
fldl
jae
and
push
shll
xchg
jmp
in
cwtl
addr16
dec
and
or
mov
and
insb
dec
hlt
cmp
int3
jbe
cs
fiadds
dec
mov
xchg
pop
mov
out
mov
inc
pop
sub
push
dec
insl
loope
adcb
and
mov
mov
in
std
rclb
mov
mov
test
xor
mov
sub
jno
decb
sbb
popf
inc
cmp
mov
add
pop
int3
or
cltd
jae
sub
sbb
pop
add
outsl
int
lret
les
ret
movsb
es
pusha
das
xchg
mov
and
les
mov
stos
dec
fsubs
jne
lahf
insb
pop
imul
xor
sbb
mov
mov
into
shll
lcall
jbe
jnp
mov
stos
mov
or
leave
test
jl
fcmovu
inc
mov
inc
call
subb
and
in
xor
sbb
sbb
sti
popa
or
add
xlat
sub
mov
adc
aam
lret
imul
lods
jnp
pushf
lcall
mov
push
mov
jle
fsubrp
mov
aas
xchg
leave
adc
les
cmpsl
sub
sti
mov
scas
icebp
mov
and
pop
fisttpl
clc
or
outsb
pop
lret
add
add
sub
popa
cmpsb
movsb
dec
push
sbb
ljmp
mov
les
mov
dec
not
cli
ret
shlb
xchg
or
mov
jle
pop
pushf
mov
and
aas
xchg
ja
mov
jg
stos
jle
dec
mov
push
mov
aad
dec
adc
imul
xchg
lret
aad
and
dec
xor
sbb
rcrb
push
out
cmp
hlt
sub
rcrl
shll
insb
inc
cld
popf
not
fwait
and
push
add
outsb
out
pop
in
cmp
inc
push
xchg
in
xchg
movsb
shr
mov
xchg
sub
xlat
fisubs
add
mov
sub
lock
push
adc
lret
cli
cmpsb
repnz
lret
shrl
pop
loopne
and
jne
ret
pop
arpl
sahf
call
lea
mov
sub
scas
add
dec
add
mov
xor
pop
pop
lods
push
mov
dec
in
adc
push
add
and
sahf
push
hlt
imul
sub
into
lock
push
stc
pop
inc
int
pop
iret
lock
pop
pop
ficomps
sub
dec
xor
mov
xor
and
in
imul
add
sub
bound
ret
cmpsl
and
add
and
cld
push
ss
ljmp
cmp
inc
into
leave
mov
pop
xor
bound
iret
dec
dec
ret
inc
call
jb
mov
fs
cltd
andb
scas
es
jno
lock
inc
popa
mov
mov
push
push
mov
adc
mov
cltd
lret
outsb
daa
xlat
out
xchg
sub
cltd
pop
rcl
mov
xchg
jo
adc
jge
adc
push
mov
popf
push
mov
push
jp
inc
bound
mov
cmc
dec
mov
call
pop
inc
cmp
mov
pop
lret
scas
mov
dec
loope
cmpsb
xor
cli
lods
pop
and
lods
fcmovnbe
call
sbb
mov
adc
pop
mov
jae
pop
sti
or
in
and
jge
test
mov
leave
xor
stc
fstpt
adc
jl
repz
push
jg
cmc
call
lds
pop
fdiv
icebp
or
stos
aas
loope
or
orl
shll
and
ja
and
inc
lcall
les
pop
dec
ret
iret
jle
or
movsb
inc
push
lret
test
push
mov
stos
dec
pop
pop
loop
js
push
lds
int
test
shrl
insl
les
call
fdivs
mov
loop
nop
mov
or
js
mov
dec
jne,pn
addb
jecxz
pop
jno
mov
pop
cmp
pop
push
push
fnstcw
push
mov
cmp
adc
sbb
cltd
fdivl
push
jnp
xchg
out
arpl
outsb
cwtl
lea
add
pop
arpl
pop
and
add
sarl
lret
test
in
sbb
and
outsb
mov
repnz
push
lds
mov
clc
mov
aam
fwait
popf
shlb
mov
dec
ret
push
call
sbb
movsl
sbb
fsts
push
push
sub
fdivl
jecxz
jb
imul
add
insb
idivb
push
and
negl
adc
mov
cmp
mov
pushf
daa
cli
jns
insb
push
movsl
mov
xchg
jmp
ficoms
popa
xor
subps
mov
fbld
imul
scas
xchg
mov
in
lret
pop
fnstenv
insb
cltd
jp
mov
jmp
cmp
cmpsb
mov
loope
xor
sub
xchg
cmpsb
add
push
scas
mov
lret
lods
mov
and
adc
aaa
mov
mov
into
inc
xchg
out
push
pop
movsl
lret
jecxz
jbe
sarb
and
daa
repnz
subl
mov
dec
pop
fdivrp
adc
dec
aam
out
mov
cs
std
popf
mulb
setp
push
inc
je
inc
mov
sbb
push
rolb
jne
mov
xor
xchg
jno
and
pop
std
push
mov
popa
mov
jmp
stos
sbb
pop
ret
add
aad
and
fisubrl
insb
push
loop
push
cs
stos
fistps
dec
mov
add
das
mov
mov
rcrl
gs
stc
mov
inc
mov
sub
lret
sbb
jb
mov
outsl
inc
sub
mov
or
dec
jno
fisttpll
sub
stc
test
xor
cmp
sahf
lahf
idivl
cmp
aas
pop
cmp
inc
push
cmpsb
rcrb
pop
and
inc
mov
mov
inc
mov
add
rcl
mov
xor
jb
fists
in
lods
fistps
je
adc
les
cs
cmp
es
loopne
testl
mov
ret
add
gs
outsl
fimull
mov
sub
cltd
fs
sbb
jae
xchg
pop
mov
fiadds
hlt
clc
push
shll
out
mov
and
inc
clts
cmp
pop
push
sti
test
std
and
sub
mov
pop
adc
icebp
pop
pop
shr
out
fldcw
fcmovnu
pop
push
jno
jecxz
imul
stos
rclb
push
lods
mov
or
cmc
dec
cld
mov
aaa
stc
or
jmp
or
test
mov
dec
fcmove
cmpsb
orb
lods
inc
test
jnp
les
dec
orl
mov
xchg
sub
jp
lret
arpl
in
fs
inc
pop
pop
pop
js
dec
fs
mov
pop
inc
dec
or
xor
in
movsw
pop
cmpsb
stos
nop
push
pop
xchg
jae
fmuls
sbb
repz
test
jb
nop
flds
jno
cltd
fstpl
es
das
fwait
into
inc
adc
cmpsl
fisttpll
adc
xor
subl
out
movsl
and
mov
pop
cwtl
movsl
lret
or
mov
int
and
or
xchg
insl
cmpsb
xor
dec
dec
sbb
pusha
cmp
and
push
and
push
divb
addr16
and
push
mov
sbb
into
pop
flds
lret
aaa
xchg
xchg
fcompl
fidivrs
jl
dec
push
inc
outsb
ror
aas
dec
gs
mov
xchg
and
stos
mov
test
sub
push
mov
aaa
in
mov
imul
or
mov
pop
scas
ret
sub
mov
addsubps
negb
pop
leave
repnz
es
fs
and
pop
std
add
cmp
mov
insl
sbb
adc
adc
or
inc
sub
cmpsb
adc
pop
lret
cmc
jbe
mov
pop
dec
jecxz
dec
mov
insb
les
sbb
fisttps
dec
enter
lret
and
nop
mov
call
ds
aas
pop
jp
cmp
mov
lds
cmp
mov
jmp
cmpsb
jo
sub
xor
test
push
sarl
mov
insb
adc
repnz
mov
inc
das
lea
cld
adc
test
xchg
in
gs
lcall
add
mov
into
icebp
arpl
testl
sbb
fcmovb
push
ds
enter
insb
rcr
pop
mov
pop
cmpsb
dec
add
in
inc
out
xchg
pop
sbb
ret
cmp
jbe
bound
dec
sbb
and
enter
mov
xor
call
lds
pushf
xchg
jbe
repnz
imul
inc
clc
push
outsb
and
mov
sbb
cmp
push
push
cwtl
ja
jge
lds
pop
out
pushf
aad
xchg
in
shl
iret
scas
in
mov
jae
lret
and
xor
cmp
mov
sub
dec
and
sub
insb
popa
fldt
je
cmp
jp
icebp
or
mov
pusha
lret
data16
int3
in
dec
mov
sub
push
pop
mov
xor
loope
js
loop
cltd
and
cwtl
rcrb
push
xchg
into
sbb
pusha
cwtl
sbb
pop
in
popl
sub
dec
and
mov
pop
jmp
enter
nop
into
cmp
jmp
dec
jne
popf
jae
cld
add
scas
mov
jo
adc
dec
lahf
inc
jp
xchg
inc
push
fwait
jae
sub
mov
int
mov
pop
lock
pop
xchg
incl
and
cmpsb
gs
jg
and
imul
mov
mov
stc
repnz
pop
pop
cmpsb
flds
pop
subb
and
das
arpl
push
inc
sub
sub
fucomp
xchg
xchg
jmp
out
inc
jmp
int3
dec
aam
xchg
pop
cmp
dec
pop
lcall
ficompl
mov
mov
rcrl
jmp
in
fs
fdivl
mov
mov
aaa
adc
jp
jl
pop
mov
cmp
inc
sbb
jmp
in
pop
pop
stc
or
xchg
sarl
and
cltd
jle
cld
mov
cmp
xor
pop
ja
and
adc
add
mov
test
jbe
pop
push
data16
jnp
test
inc
mov
adc
outsl
hlt
popf
rcrl
lods
mov
sbb
push
and
mov
mov
sub
pop
mov
fsts
dec
sbb
cwtl
jge
outsb
adc
adc
mov
loope
fwait
cmp
mov
cwtl
test
bt
sub
and
xchg
inc
sbb
clc
outsb
lock
jae
sub
sbb
jecxz
std
mov
inc
stos
cmc
push
mov
cmp
imul
xchg
add
stos
test
sti
sbb
cld
pop
mov
push
cmp
shl
pop
mov
int
rorb
popa
pop
push
icebp
mov
jmp
test
sub
mov
cmp
xchg
std
or
ss
xchg
int
xor
dec
lods
xchg
push
iret
dec
arpl
nop
add
mov
inc
mov
cmp
jnp
jbe
es
push
fld
or
pop
lods
fs
or
sahf
aad
sbb
shl
jno
inc
sbb
inc
and
mov
lret
adc
jb
out
or
mov
sbb
cli
shlb
push
xor
scas
cmc
sbb
outsb
xchg
es
fnstenv
ds
ficoms
pushf
das
scas
repz
jbe
in
jg
inc
jecxz
and
inc
pop
dec
xchg
ljmp
pop
ret
stc
std
pusha
xchg
xlat
bound
repnz
arpl
jnp
add
jne
jbe
jb
jnp
pop
stc
hlt
int
test
inc
and
mov
sub
dec
add
add
inc
xchg
lret
inc
adc
jne
lcall
inc
mov
shrb
mov
cwtl
jnp
and
lahf
lods
out
xlat
lds
stos
outsl
xchg
stc
add
cli
mov
push
sub
xchg
pop
dec
in
jge
xor
or
inc
add
aad
cwtl
mov
lods
xchg
jl
data16
sbb
insb
push
jle
xchg
lahf
repnz
shrl
adc
and
call
cli
add
sti
ds
xchg
fwait
dec
add
add
lret
stc
testb
dec
js
jno
sbb
psubusw
sbb
inc
cmpsb
push
fidivrl
test
test
sbb
pop
jge
push
int
scas
sub
push
iret
inc
inc
js
pop
add
ret
push
push
and
gs
movsl
adc
adc
cmpsl
data16
xorb
mov
mov
dec
mov
xchg
mov
cmpl
jp
fmuls
xchg
test
pusha
and
jg
cmp
cs
cmp
dec
mov
adc
enter
idivl
rcl
lock
push
pop
and
lcall
stc
adc
mov
and
add
or
loop
sub
stc
push
fstps
sub
out
fisttps
jne
cmpb
scas
bound
mov
push
call
in
jg
pop
out
mov
mov
imul
ja
cmp
loop
add
jne
sbb
or
and
mov
adc
bound
push
ja
pop
push
test
sub
test
jns
add
imul
pop
mov
ror
cltd
popf
inc
lret
sbb
sahf
mov
mov
push
or
mov
dec
mov
cmp
xor
xchg
adc
cmp
ret
hlt
and
icebp
sub
mov
add
mov
cli
or
fcmovu
nop
lea
lds
pop
mov
gs
adc
cmp
in
notl
or
ds
pop
add
xchg
mov
clc
inc
and
rcrb
mov
mov
imul
ds
fadds
add
in
sti
je
pushl
jae
hlt
shlb
movsb
jb
std
dec
insl
fwait
adc
add
test
stc
xor
xchg
dec
mov
lcall
repz
or
jl
mov
xchg
and
cmp
les
add
pop
adc
psllq
push
xchg
xlat
je
cli
pop
ljmp
push
jecxz
xlat
clc
jo
xchg
pop
ljmp
lods
mov
lea
outsl
push
mov
xor
pop
cli
xchg
std
sahf
cld
das
push
andb
xchg
lock
movsb
iret
or
lock
pop
jecxz
sbb
xor
cmp
sbb
dec
out
rorb
xorl
push
lods
out
loop
cwtl
sti
or
inc
or
xchg
in
aam
cmp
fldcw
sub
out
adc
mov
pushf
cmp
push
mov
addr16
dec
sti
mov
xor
test
call
jmp
cmp
mov
lret
shrb
sbb
je
sbb
mov
insl
mov
inc
mov
xchg
inc
inc
cmp
cs
sahf
adc
mov
popf
sarl
adc
daa
mov
jmp
dec
xchg
push
push
subl
push
lcall
rol
nop
dec
flds
mov
nop
je
fstps
push
pop
pop
stos
stc
clc
stos
push
inc
mov
fcomps
imul
pop
mov
test
jbe
gs
jecxz
pop
xor
dec
insb
aaa
inc
sbb
fs
dec
andl
rorb
xchg
fwait
imul
fnsave
pop
aaa
mov
dec
or
or
adc
dec
out
pop
lret
hlt
xchg
mov
popa
shrl
js
popl
adc
inc
pop
inc
mov
shrl
mov
inc
mov
popf
mov
xor
aam
aam
pusha
lret
add
movsl
or
mov
es
pop
pusha
mov
sbb
sbb
xchg
jl,pt
addr16
ss
lds
aad
adc
xchg
ret
pop
sbb
inc
lret
cli
popf
dec
jge
out
pop
incl
sbb
mov
push
jns
addr16
jae
sub
cmp
jno
mov
pop
xchg
les
cwtl
dec
mov
inc
loopne
outsb
mov
mov
add
idivb
jne
cmp
mov
int3
sarl
push
hlt
mov
xchg
jecxz
inc
mov
outsb
notl
bound
or
fnstcw
into
jne
sti
in
in
sub
add
mov
cld
sarb
adc
ljmp
loopne
sbb
xlat
xchg
mov
insb
and
rcrb
sub
push
jg
repz
xchg
mov
dec
js
in
clc
adc
xchg
mov
shll
test
jae
fwait
in
les
push
scas
pop
filds
in
push
int3
les
nop
icebp
in
or
aad
in
xchg
scas
xchg
leave
push
push
push
cmp
mov
mov
push
pop
mov
popw
adcl
andb
and
xor
loop
dec
sarl
mov
cmp
hlt
push
mov
mov
inc
jmp
pop
sub
xchg
std
enter
mov
pop
xchg
std
daa
jb
mov
sti
add
and
int3
jo
sbb
js
add
jge
dec
push
mov
mov
pop
in
push
das
xor
stos
ljmp
and
push
lods
pop
adc
sub
cmp
std
push
push
dec
pop
and
sbb
in
sub
fisubrl
push
pop
mov
push
or
sub
dec
xor
rorl
scas
push
jno
movsb
jle
mov
js
or
mov
test
inc
ret
sbb
hlt
out
adc
jmp
inc
fists
lret
ficompl
shl
sub
pushf
out
call
push
and
and
lea
sub
in
das
jg
mov
leave
imul
dec
sbb
int3
je
fbstp
xchg
push
cmpb
test
push
fisubl
and
outsb
push
xchg
xor
mov
movsb
sahf
pop
rorb
sbb
lret
icebp
stos
sub
mov
lods
cmc
stos
stos
push
pop
pop
xchg
stos
addr16
cmp
sahf
mov
fwait
aas
push
push
xchg
out
mov
test
rcll
lret
sbb
jp
popa
or
mov
dec
cmc
xchg
repnz
test
jmp
inc
movsl
incb
mov
inc
test
add
fwait
in
sbb
ljmp
sbb
loope
jno
ljmp
das
dec
pop
pop
or
jbe
push
cmc
sub
add
adc
pop
ret
mov
and
xchg
int3
sub
popf
xor
test
outsb
lock
rol
fcoml
pop
jp
and
sbb
xchg
adc
cmpsl
add
pop
insl
scas
jmp
jo
mov
push
divb
pop
push
xor
xchg
sbb
es
adc
ljmp
test
xchg
add
cmp
sbb
dec
scas
hlt
fldcw
sub
clc
cli
xor
sub
clc
push
xor
in
inc
push
mov
mov
mov
and
lret
pushf
jae
and
nop
pop
dec
mov
add
jp
test
push
lea
popa
daa
repz
fisubl
add
and
mov
jl
xchg
lret
scas
repnz
xlat
scas
add
add
stos
xor
or
repnz
mov
outsb
fsubs
mov
jnp
call
xor
pop
xchg
dec
or
bound
outsl
dec
sarl
xor
inc
push
mov
sbb
xor
jge
mov
clc
aaa
je
sbb
push
adc
idivb
in
jge
mov
mov
fsubl
mov
mov
shr
test
and
or
nop
jg
test
cld
stos
fsubrs
in
xchg
add
mov
fistpl
dec
fnstcw
and
mov
jnp
ljmp
leave
shll
push
xchg
fistl
loop
dec
mov
iret
sbb
add
cmpsl
mov
inc
sbb
mov
aas
mov
mov
xchg
xchg
mov
call
les
bnd
dec
lock
fildl
movl
mov
xchg
pushf
and
ds
mov
pusha
cli
xor
xchg
fmuls
sbb
inc
adc
lds
sbb
test
pop
push
test
cli
cli
xlat
jae
leave
movsb
push
mov
xchg
test
jp
pop
int3
cmp
movsl
je
sbb
push
enter
popa
xchg
dec
inc
lret
sbb
gs
pop
fsubrs
push
shrb
xchg
xrelease
stos
ficomps
xchg
add
and
roll
mov
call
insl
add
jg
mov
lods
cli
mov
sbb
scas
adc
js
cli
pop
and
inc
je
ds
jge
mov
pusha
dec
cmpsl
jl
cli
mov
lock
xor
jns
cmp
mov
sbb
and
jp
cld
jnp
push
addr16
jae
addr16
pushf
mov
ret
fimuls
mov
mov
addr16
inc
xor
push
xchg
sbb
mov
inc
mov
fidivl
out
dec
lahf
ret
shll
push
add
xchg
rorb
jnp
loope
pop
mov
call
hlt
fs
mov
cmp
dec
lahf
aaa
pop
pushf
pop
add
pop
ficoms
add
jle
pop
je
pop
lret
loop
adc
xor
xchg
fsub
les
adc
pushf
fsubr
lcall
and
fisubrl
pop
mov
push
push
lcall
and
cmpsb
push
fnstsw
test
add
pusha
out
roll
adc
mov
xor
cmp
cmp
sub
lcall
push
mov
push
xchg
outsl
sub
fmull
adc
lods
inc
xor
xchg
mov
fwait
stos
xlat
push
nop
fcompl
cwtl
cld
ja
sahf
ret
mov
mov
mov
push
imul
pop
mov
out
loopne
out
loopne
jo
lcall
gs
and
adc
cmpsl
sar
inc
sub
xchg
ds
xlat
sbb
mov
inc
sbb
xchg
aas
das
xor
lea
imul
push
inc
rcrl
and
xor
sbb
mov
dec
jge
dec
test
test
das
rol
dec
pusha
xor
int3
addl
jb
lods
xchg
iret
stos
int
fcos
cmp
cmpsb
push
sar
lahf
xchg
outsl
adc
lds
out
xchg
daa
ret
subb
cmc
add
cwtl
icebp
repnz
xchg
out
xchg
inc
mov
shlb
push
mov
inc
dec
sub
pop
test
xchg
adc
in
test
pushf
ljmp
cmp
push
adc
icebp
pop
inc
jmp
aaa
jl
sbb
mov
cmp
pop
insl
xchg
test
and
push
sti
mov
add
fwait
mov
jbe
insl
xchg
sbb
sub
mov
negl
out
popf
cmp
aas
outsl
mov
jp
ret
add
rol
sub
and
das
sahf
mov
sbb
cmp
sti
lods
xchg
out
and
or
and
pop
aaa
dec
mov
jbe
test
lahf
pushf
add
mov
inc
bound
mov
or
pop
scas
mov
xor
and
fimuls
loope
inc
and
shlb
in
inc
push
int3
sub
fwait
xlat
adc
mov
xchg
leave
push
int
hlt
jne
jl
int3
jo
push
jg
push
outsl
mov
dec
mov
mov
xchg
std
hlt
dec
inc
dec
lahf
or
movsb
pop
test
addb
pusha
lret
push
movsl
jne
sub
xor
in
pop
nop
and
push
jbe
push
jbe
mov
in
repnz
cld
inc
xor
gs
sbb
jge
xor
mov
dec
es
ja
push
cmp
pop
scas
lock
push
test
jle
push
ret
into
pop
or
push
ret
inc
xchg
cmpsb
sbb
push
clc
fwait
push
flds
decb
ljmp
push
js
adc
xchg
popf
jbe
stos
stos
pop
cs
cmp
dec
push
xchg
mov
pushf
or
adcl
imul
inc
xchg
mov
incl
jecxz
jecxz
mov
enter
scas
cmc
enter
insb
ds
addr16
dec
pop
cmc
xchg
sbb
inc
outsb
xlat
dec
bnd
push
iret
dec
lds
hlt
out
stc
dec
cmp
out
movsl
sbb
lods
jg
std
adc
cmpsl
push
in
or
call
cwtl
xchg
jge
jp
dec
jne
rcl
std
pop
subb
add
cli
in
std
lret
andl
cmp
jno
and
cmp
xchg
aas
mov
cmp
lds
nop
repnz
push
jecxz
movsb
xchg
xchg
arpl
aam
inc
inc
xchg
and
cmp
mov
pop
push
push
and
sahf
dec
dec
test
sub
pop
daa
outsl
xor
pop
mov
test
cmp
fwait
mov
push
xchg
sub
xchg
and
jecxz
insl
cmp
and
lods
shlb
cmp
push
jg
sub
ja
pop
loopne
movb
push
adc
aaa
out
add
inc
cmp
int3
mov
insb
xchg
xchg
mov
add
pop
js
pushf
fldl
lret
add
ljmp
rcll
add
sti
sbb
mov
je
mov
stc
lret
mov
cmp
das
inc
test
cmpsb
pop
push
sarb
pop
add
lea
xor
xchg
jge
shll
pop
sbb
pop
pushl
push
repz
std
push
mov
test
mov
dec
or
sbb
enter
adc
or
ret
pop
cmp
dec
sti
xchg
xor
arpl
push
adcb
loopne
outsl
push
adc
cli
stos
in
or
mov
jns
push
outsl
out
lea
push
inc
pop
dec
push
xor
dec
mov
lods
cmp
adc
fildl
dec
fwait
jle
rcrl
scas
in
mov
faddl
int3
pushf
add
rorb
iret
push
insl
outsb
fidivrs
jp
outsl
cwtl
test
sbbb
sub
adc
xor
lock
lods
xadd
cmp
fcoml
in
mov
inc
xchg
sahf
sbb
cmpb
and
dec
fnstsw
cli
dec
cmp
testb
mov
icebp
xchg
push
push
rcrl
push
cmpsb
or
jb
add
andb
fbld
cmpsb
testb
jb
push
xchg
lahf
pop
push
xchg
sub
cmpsl
outsb
pushf
subb
pushl
or
xor
lock
ss
adcl
pop
ja
mov
insl
lock
lea
add
es
mov
jecxz
push
adc
daa
shll
ret
mov
imul
cmp
sbbl
or
jge
xlat
loopne
jl
fsubs
mov
inc
or
add
aas
mov
adc
jae
mov
push
and
jl
stos
fwait
jae
shlb
xor
adc
mov
imul
cltd
xor
inc
addr16
sbb
in
mov
into
add
sub
jg
dec
xor
hlt
lods
mov
es
cltd
jmp
inc
push
push
pop
xor
push
cli
in
and
xlat
inc
jb
test
inc
inc
ret
jae
sub
inc
fsubs
xchg
imulb
imul
or
ret
xor
adc
test
push
pop
cmp
push
pop
push
cmp
xor
lret
pop
add
xchg
rol
push
sub
jmp
push
xlat
fs
cli
aad
adc
push
jecxz
ret
cld
sti
pop
hlt
inc
push
and
imul
sub
aaa
jne
xchg
mul
or
jle
imul
js
inc
cld
test
incb
or
hlt
xchg
mov
mov
pop
nop
pushf
pop
pop
sbb
sbb
out
and
inc
test
pop
iret
inc
or
add
jge
dec
mov
into
dec
jmp
loop
pop
outsl
and
mov
cmp
mov
pop
loop
pop
and
lods
fcoml
es
stos
dec
mov
imulb
xor
imul
rorb
repnz
mov
or
outsl
sbb
cmp
fsubrs
fiadds
enter
jge
pcmpgtw
mov
mov
adc
ret
andb
pushf
movsb
mov
jp
dec
fsubrs
shrb
test
add
xor
pop
push
add
inc
cwtl
mov
es
cmp
repz
adc
mov
jge
push
jnp
and
adc
sub
cli
push
pop
or
xchg
pop
nop
cmpsl
lods
je
cmp
add
mov
mov
add
sbb
lret
jecxz
jns
add
in
je
inc
int
push
movsb
jge
fnstsw
loopne
jge
adc
fnstsw
pusha
sahf
ds
cmp
aas
sub
cmp
or
lds
xor
pop
sub
inc
mov
or
repnz
jb
cmp
add
xor
pop
xor
push
dec
rcrb
imul
ds
scas
dec
nop
sub
and
inc
jbe
pop
mov
mov
dec
xchg
mov
cmpxchg
mov
jge
decb
jo
sub
adc
pop
cmpsb
es
or
jnp
jae
in
shll
dec
cmpsb
ds
mov
icebp
xlat
std
jno
aam
or
xchg
push
lock
pop
mov
sbb
scas
insb
test
inc
and
outsl
lock
push
lahf
out
push
pop
fucom
mov
xchg
ret
or
shll
or
loop
sbb
in
inc
push
clc
testl
cmp
out
inc
mov
cmpl
sub
push
sub
test
lcall
addr16
flds
pop
ret
sub
gs
gs
cmpsl
xor
out
inc
and
jmp
adc
mov
aas
adc
inc
push
jmp
movsb
aad
dec
das
lock
outsl
or
mov
outsl
jns
jo
stc
cmp
sub
jns
cmpsl
xor
popa
mov
jmp
ds
inc
mov
and
push
addl
loope
and
test
fmull
es
sub
mov
inc
jbe
aas
cmp
xchg
inc
and
ja
cmpsl
popf
mov
loop
jp
xor
dec
arpl
sub
popa
pushf
fwait
xor
pop
mov
pop
cs
adc
cmp
and
xorb
cmp
jno
stos
sub
mov
stos
xchg
stc
out
sbb
xchg
ret
pop
mov
pop
inc
scas
dec
cmp
aas
adc
pop
repnz
push
test
es
mov
fs
jle
sbb
lock
jl
icebp
sbb
mov
imul
xor
push
mul
push
lahf
add
out
jae
jo
cmc
outsl
in
movsb
add
dec
xchg
xchg
dec
mov
inc
dec
mov
addr16
add
data16
pop
test
cld
pushf
negl
xchg
loope
xor
sbb
scas
jg
stos
push
cmp
pushf
cmp
pop
pusha
lods
or
pop
or
cmp
pop
and
xchg
dec
gs
jge
dec
mov
orb
ss
cmc
lret
in
push
add
stos
nop
js
xchg
adc
aas
aas
sub
fidivrs
or
cs
mov
cmp
rclb
push
add
std
pop
jae
pusha
dec
inc
aam
jecxz
out
push
into
arpl
pop
stos
out
lock
xchg
dec
std
mov
andb
sub
lea
repz
xchg
movsb
sub
outsb
loopne
jl
imulb
inc
insb
jl
loope
shlb
fdivl
xor
or
lock
pop
pop
or
cmc
or
push
movhps
mov
jae
cmovne
cmp
or
mov
mov
aas
push
xchg
dec
lea
pop
sti
mov
add
xchg
ret
leave
out
and
mov
bound
std
test
push
xchg
mov
stc
jns
inc
ret
std
arpl
daa
jmp
cmpsb
ret
jnp
lods
scas
scas
outsb
dec
je
jae
push
mov
in
scas
lcall
cltd
test
dec
mov
mov
xor
inc
xor
add
lods
xchg
in
add
faddl
add
mov
pop
out
hlt
mov
fbstp
je
jecxz
lods
mov
mov
ss
xor
pop
mov
pop
mov
invd
fiaddl
insl
xor
xchg
nop
jnp
in
data16
sbb
dec
pushf
dec
rclb
nop
imul
sub
into
and
outsb
pop
data16
cmp
gs
iret
nop
stos
cmpsb
shl
xchg
pop
jp
movsb
pop
js
push
xor
sbbl
adcl
dec
pop
jg
movsl
xchg
movsb
out
pusha
push
cmp
lea
sbb
add
cmp
out
pop
aas
push
push
sbb
xor
adc
lods
or
mov
bound
pop
mov
mov
repnz
push
mov
outsl
and
push
pop
xchg
jno
cmp
enter
out
mov
push
jae
enter
lret
shlb
cmp
add
pop
xlat
repnz
gs
hlt
push
mov
push
lret
and
adc
stc
xchg
jbe
pop
imul
das
es
out
pop
pusha
xor
fsubr
cld
negb
xchg
mov
getsec
dec
jb
xor
lock
dec
lcall
mov
lret
icebp
frstor
mov
dec
sarl
push
jb
push
stos
mov
push
fdivr
push
imul
cli
movsl
faddl
sarl
and
fs
rclb
aad
cmp
or
rorb
mov
xor
mov
icebp
int3
mov
cmp
pusha
cltd
pusha
pop
jle
enter
daa
ds
or
and
pop
clc
add
in
jno
leave
lods
mov
lret
ljmp
out
call
cltd
xchg
test
orl
scas
push
sub
rolb
xorb
ret
jg
adc
add
filds
adcb
ret
in
inc
push
mov
or
cld
call
or
lret
rep
daa
shrl
adc
sub
stos
fisubrs
pop
adc
or
xor
in
inc
sbb
jns
or
mov
stos
mov
popa
arpl
xor
fcmovnb
pop
adc
push
xchg
gs
arpl
into
sarb
and
xchg
cltd
mov
cld
cmc
les
push
sub
add
push
imul
inc
loope
adc
mov
pop
stc
bound
testl
sub
sbbb
inc
cwtl
sbb
mov
inc
out
and
fbld
in
push
rolb
sbbb
loop
sti
push
mov
sarl
inc
loop
and
jge
and
jl
aas
aam
push
dec
sahf
fsubs
out
sub
or
inc
dec
aam
bound
and
dec
fprem1
stos
arpl
loopne
imul
mov
sbb
xchg
ds
push
iret
xor
mov
mov
ret
ja
push
mov
out
or
sub
loopnew
pop
jp
int
xor
pop
xchg
dec
ret
jne
fists
cmp
lock
mov
dec
divl
aas
jmp
and
sub
imul
int3
fs
add
in
jmp
fs
jnp
mov
xor
popa
mov
enter
sub
dec
adc
pop
xchg
cmpsb
push
outsl
ljmp
mov
sbb
dec
gs
add
out
sub
outsb
pop
imul
pop
mov
aaa
and
loop
or
ret
scas
shlb
into
mov
cmp
push
xor
sbb
int
push
or
arpl
insb
stos
mov
stos
sub
adc
lret
inc
and
mov
xchg
add
aaa
add
adc
ficoml
jg
jp
lcall
ucomiss
sub
inc
mov
xchg
xchg
pushf
sbb
mov
mulb
pop
or
ja
cltd
lret
cld
mov
xor
push
adc
or
push
dec
xrelease
push
or
imul
testb
movsl
cmp
pop
mov
iret
es
aam
add
push
test
xchg
cmpsb
push
dec
fidivl
stos
jp
or
out
xor
mov
sub
outsb
mov
repnz
leave
push
scas
xor
cmc
cwtl
ss
shlb
mov
bound
xchg
test
adc
ds
jp
or
xchg
dec
scas
jo
cmpsb
push
loope
js
jo
push
xor
fmull
jecxz
mov
fidivs
insb
lea
mov
in
pop
les
fwait
dec
xchg
and
bound
mov
fwait
mov
jp
out
stc
sub
and
inc
inc
jns
in
loopne
mov
pop
pop
icebp
sti
xchg
dec
ds
out
pushf
jecxz
fwait
jp
adc
add
in
lea
outsb
outsl
mov
nop
or
jnp
sbb
addr16
add
mov
jns
xchg
push
jae
fstp
repz
xchg
daa
jae
popa
pop
scas
push
push
test
cmp
pop
and
in
cmp
jmp
test
push
mov
add
lock
jb
not
dec
stc
adc
int3
arpl
aam
lods
aas
idivb
mov
sahf
test
mov
inc
fiadds
mov
adc
lock
or
jbe
pop
xchg
and
jp
push
push
push
mov
mov
stc
xchg
stc
cmp
gs
in
lock
decl
sub
pop
loope
or
cmpsl
insl
xchg
insl
push
sbb
inc
adc
dec
mov
adc
scas
fwait
mov
inc
mov
sahf
sbb
imulb
push
shlb
pop
inc
push
popa
popf
popa
and
decl
sbb
cmp
ret
cmpsl
lock
push
mov
repz
mov
pop
mov
mov
cltd
mov
jae
sbb
sti
xchg
xor
sub
dec
cmp
addb
xor
sbb
test
sbb
add
xor
pop
jp
add
mov
jmp
aad
ret
inc
jns
stos
push
aad
call
shlb
jo
xchg
cli
xchg
sar
push
xchg
pop
add
sbb
fcoms
iret
dec
jl
out
mov
in
mov
leave
mov
lods
cmc
ja
or
mov
int3
in
das
es
das
rorl
mov
dec
xchg
mov
sbb
mov
cmp
hlt
in
add
add
xchg
cmpsb
mov
add
fmulp
icebp
jb
or
adc
add
in
ljmp
sub
out
inc
jb
adc
mov
fdivs
and
test
adc
cmpsb
xor
imul
adcb
fcmovnu
pop
pop
add
xchg
or
movsl
lock
jle
fiaddl
ficoms
fimuls
xor
inc
lgs
notl
inc
inc
xchg
leave
dec
adc
arpl
mov
jle
sub
mov
cmp
ficomps
and
mov
and
arpl
pop
sti
push
out
aad
aad
sub
test
jle
mov
add
out
jne
push
or
mov
imul
sbb
sub
pop
sub
pop
stos
daa
push
repnz
cmp
add
test
sahf
ret
popl
and
mov
push
mov
and
dec
aam
mov
rcrl
push
push
inc
mov
jp
xchg
add
lds
std
xchg
sub
in
adc
dec
adc
jp
inc
lods
out
push
out
mov
mov
pop
aam
test
imul
mov
repz
data16
faddl
jae
cs
decb
fistl
imul
mov
pushf
inc
bound
sarl
mov
inc
fwait
pusha
pop
fimull
xchg
ja
pop
fwait
pop
xor
je
mov
lods
lret
mov
xchg
push
xchg
sbbb
in
sahf
lahf
mov
lds
cmp
iret
in
lock
pop
push
andb
jle
test
in
aad
sub
inc
mov
or
jmp
mov
int3
das
adc
inc
adc
cmp
push
or
je
jnp
jge
cmp
sahf
out
cltd
scas
xchg
insb
mov
xchg
xor
shlb
ret
cmp
fildll
push
arpl
test
mov
push
lret
adc
jecxz
in
inc
in
stos
sub
sub
push
mov
hlt
jl
xchg
push
xchg
aam
in
add
mov
test
dec
or
fidivl
add
cmp
lcall
sarb
and
xchg
aam
mov
movsl
shlb
int3
js
add
scas
xchg
inc
mov
push
cmpsl
fdivr
xchg
fisubl
push
rorl
pop
mov
clc
and
insb
stos
pop
rorl
lea
in
xorb
sub
jge
mov
adc
cld
imul
push
movsb
cmp
push
add
jg
stos
xchg
sbb
addr16
push
add
add
lds
add
and
stc
test
outsl
mov
jecxz
jno
pop
cmp
enter
mov
cltd
pop
rorb
mov
push
push
pop
mov
ss
mov
mov
push
mov
xchg
sbb
scas
loop
ja
pushf
mov
nop
mov
std
pop
pop
ret
xchg
jns
push
mov
xchg
shr
in
pop
addb
push
jbe
aad
enter
lods
hlt
les
add
mov
cwtl
push
jge
xor
pop
or
cmp
jp
cmovl
xor
lcall
xor
test
dec
cli
push
xchg
mov
pop
aas
sbb
mov
xor
mov
add
lcall
addr16
sbb
cmp
pop
adc
lret
adc
incl
push
scas
andl
and
jnp
adc
jle
or
mov
sub
jmp
insl
xchg
nop
dec
popa
movsb
aam
movsl
repz
or
xchg
pop
dec
fs
mov
xor
ret
pop
push
mov
in
inc
aad
sbb
xchg
mov
add
pop
in
mov
out
push
mov
mov
inc
pusha
sub
jo
or
stc
loope
andb
and
push
or
mov
mov
arpl
lret
or
xchg
std
sbb
fwait
sbbl
test
jbe
xor
mov
notl
cli
aad
xor
and
pop
fsubs
rcrb
add
xchg
icebp
addr16
mov
mov
xchg
mov
ret
fstl
cmp
or
pop
mov
jns
xchg
ja
jnp
clc
gs
inc
adc
arpl
add
fdivl
loop
push
xor
lods
dec
or
ficoml
xor
mov
add
sub
xor
mov
in
mov
mov
std
dec
jecxz
clc
pop
pop
inc
xchg
push
add
ja
sub
fwait
loope
cld
mov
add
dec
nop
lret
push
movl
es
pop
dec
xlat
add
dec
mov
shrl
sbb
jo
in
sbb
fimuls
jae
movsb
push
js
inc
push
mov
stos
adc
popf
scas
cmc
fmull
xchg
pop
fiadds
outsl
mov
add
dec
movsb
pop
lret
lods
in
out
stc
push
pop
shll
ret
outsl
pop
ja
gs
mov
adc
or
imul
andb
mov
pop
jnp
js
test
inc
jmp
jge
and
out
stos
xchg
and
fs
out
movl
xchg
sahf
imul
cmpsb
mov
add
lea
data16
std
ror
fidivrs
lds
out
enter
adc
out
sbb
push
cmp
lahf
ljmp
inc
push
push
inc
das
sbb
cwtl
scas
lea
pop
incb
dec
sub
jle
sub
xchg
rep
lret
test
or
mov
lret
ss
mov
popf
or
mov
insb
loop
imul
pop
leave
mov
in
ficoml
fcom
inc
cmp
jmp
int
inc
inc
dec
je
jge
cmpsl
loope
orb
shl
cmp
mov
test
fistps
cmc
pop
or
nop
push
mov
ja
sar
cmp
mov
fadds
cmp
sti
jl
inc
xchg
in
adc
and
pop
cs
stc
inc
pop
ret
ret
add
mov
in
sbb
mov
shll
lret
inc
sbb
das
filds
lret
jge
adc
xor
cmp
pop
xlat
mov
ret
or
mov
daa
rclb
pop
lret
dec
jb
lods
std
stos
cvtps2pi
sahf
scas
stc
into
ret
pop
mov
test
in
bound
inc
aaa
push
cmpsb
jle
jmp
es
lret
notb
cmp
and
comiss
les
mulb
repnz
adc
test
clc
in
mov
rol
sub
push
jo
std
lods
addr16
cmp
pushf
pop
inc
sub
mov
jmp
push
xchg
testl
jp
jae
mov
jns
ja
sub
xchg
leave
mov
fcmove
xchg
out
pop
into
adc
insb
repz
inc
es
push
or
rcll
daa
sbb
cmp
das
addr16
cltd
push
sub
inc
inc
sahf
rorl
lret
in
insb
mov
das
fbld
fists
xchg
iret
into
jo
scas
and
dec
or
loop
daa
xchg
fimuls
lock
xchg
inc
pop
adc
sbb
in
and
sti
lock
mov
push
loopne
xchg
xor
or
in
out
and
fwait
fwait
cmpsb
pushf
int
int3
in
rorb
pop
arpl
jecxz
cmp
fcoms
mov
dec
mov
aas
jp
aas
inc
jae
xchg
push
neg
cmp
sbb
mov
cwtl
adc
ds
jmp
call
notl
mov
and
cs
mov
ja
adc
push
lods
enter
pushf
nop
sub
add
or
push
test
mov
pushf
jge
aas
xor
push
aam
aam
scas
icebp
lea
dec
mov
xchg
lret
cmc
xor
fucom
and
arpl
out
sub
fldcw
lea
jne
jae
ss
arpl
repnz
adc
out
adc
adcb
pop
dec
or
fidivs
sahf
adc
out
cld
aam
cmp
adc
pushf
in
stc
sub
xchg
pop
mov
push
outsb
es
push
or
leave
outsl
mov
or
jo
stos
and
and
cmpsl
jne
push
add
jo
test
xor
fadd
xchg
ret
jle
sbb
xchg
hlt
cmp
jo
push
lret
imul
cmp
pop
leave
sbb
sti
out
add
fs
xorb
aas
push
xchg
inc
sbb
and
call
mov
adc
xor
push
imul
xchg
ret
fs
mov
sbb
cli
call
iret
cwtl
test
aaa
and
jno
sbb
insl
rcrb
sahf
mov
sub
pushl
fstps
mov
mov
mov
mov
cmp
mov
mov
pop
push
ds
movsb
mov
pop
push
jno
sbb
and
dec
mov
sbb
xlat
fwait
pusha
shr
pop
imul
jmp
jmp
push
sub
pushf
aam
in
sub
xchg
jle
insb
push
mov
clc
shl
hlt
les
mov
add
adc
and
cwtl
jae
scas
xchg
sbb
xchg
in
enter
and
addb
jne
jo
sti
pop
call
popa
mov
je
jg
or
dec
sub
jno
jmp
stos
pop
ficomps
mov
sub
dec
dec
enter
jmp
pop
orl
sarw
flds
leave
out
push
adc
mov
push
sar
mov
add
aas
test
jns
inc
sub
pop
out
jecxz
lods
js
mov
inc
mov
cld
clc
cmp
push
inc
ljmp
lcall
test
js
int3
mov
in
mov
sub
pop
sub
rcrb
dec
mov
inc
pusha
inc
mov
pop
imul
stos
leave
test
mov
or
add
xor
repnz
sub
hlt
cmp
jecxz
das
int3
sub
adc
mov
out
dec
cmp
scas
add
addr16
pop
ja
daa
decl
popa
pop
adc
popf
xchg
adc
test
movsl
fists
add
mov
or
sub
call
and
int3
sub
mov
insb
test
mov
push
inc
jg
aad
jne
add
or
dec
lret
fiaddl
insb
lret
pop
dec
sahf
icebp
adc
pop
cltd
loope
cmpsb
jns
sub
and
jle
test
inc
into
addr16
fisubs
xlat
jo
sbb
ja
sub
into
in
xor
orb
sbb
fisttpll
xor
adc
sbb
scas
xchg
mov
fnstsw
out
std
push
lods
push
sbb
jmp
cs
int3
mov
leave
das
mov
repnz
inc
sub
sbb
push
jno
fsubrp
leave
cmp
pop
inc
mov
test
dec
push
add
mov
push
xor
or
fiaddl
call
pop
and
push
iret
adc
adc
lcall
jp
lea
dec
xlat
fcmovnu
cltd
loop
stos
inc
mov
adc
test
fs
out
jmp
ret
sub
sbb
in
je
loop
pop
cwtl
push
inc
and
fsub
pop
and
idivb
xor
mov
add
jns
push
stos
inc
js
xchg
cmp
sbb
cmp
xchg
mov
xor
jae
ret
rcr
pop
xor
or
mov
and
orb
lods
mov
iret
mov
aam
faddl
mov
xor
cltd
inc
lock
iret
cmp
pop
out
pusha
scas
scas
xor
mov
jg
fs
inc
mov
pop
pop
and
loope
cmp
mov
add
popa
pop
in
inc
xor
jl
xchg
push
add
push
and
jge
push
push
das
aaa
mov
into
pop
xor
mov
or
dec
sub
aaa
iret
dec
cld
or
inc
cmp
xor
je
repz
repz
fxch
jle
or
cs
dec
scas
jp
push
jne
enter
pop
lods
xchg
fcoml
aam
fiadds
xchg
movsb
xor
rorl
lahf
mov
jne
out
test
pop
ss
mov
cmc
push
das
fidivs
lea
inc
xor
andl
jcxz
xchg
in
movsl
xchg
dec
test
dec
out
stos
jno
fimuls
mov
adc
mov
and
cs
mov
icebp
sub
cwtl
test
mov
fwait
out
jne
lret
jge
mov
pop
mov
push
jns
in
enter
dec
fdivrs
mov
movsb
rcrl
push
dec
aas
jns
daa
pop
or
mov
cs
sahf
shlb
pushf
push
ljmp
popaw
push
gs
iret
inc
sti
notb
icebp
or
movsl
jno
ret
adc
loope
into
cmc
stos
xchg
mov
cmp
sub
sub
lods
and
clc
sub
push
push
test
xor
mov
sbb
add
bound
test
repnz
es
rclb
dec
call
es
mov
inc
subl
lods
xchg
add
hlt
fdivrl
cmp
xor
mov
push
test
repz
mov
fstl
cmpxchg
xchg
insb
mov
aad
jbe
or
lods
adc
movl
jge
loopne
ds
inc
ljmp
jbe
insl
imul
movsl
iret
xor
cmp
subl
xchg
aas
add
xchg
in
ja
lret
jecxz
aas
lahf
std
je
cs
stos
pushf
inc
idivb
adc
cmpb
stc
push
scas
leave
test
imul
push
jns
mov
pop
in
aas
int
std
divl
sbb
push
mov
dec
xchg
int
mov
xchg
insb
insb
mov
jmp
inc
movsl
sahf
ja
rcrb
cmp
dec
cld
mov
in
enter
lcall
xchg
dec
and
xchg
mov
shl
mov
ja
push
jns
call
repz
and
cmpb
jae
pop
aad
mov
dec
add
mov
aam
outsb
out
fmuls
insl
test
inc
test
out
ds
add
dec
cs
lret
jb
jge
and
pop
mov
imul
or
pop
cld
sti
out
mulb
pop
mov
dec
fdivp
mov
das
mov
fxtract
fwait
nop
test
lock
jg
sbb
sbb
push
mov
xchg
ja
mov
cmp
mov
fs
stos
insl
jae
out
mov
mov
jge
and
inc
out
and
dec
adc
inc
jp
mov
outsl
jp
xchg
shrl
les
ret
js
add
jge
cmp
cltd
lcall
aaa
outsb
mov
sub
test
stos
push
lret
jne
jp
jnp
mov
aaa
aas
lret
sbb
lret
sbb
mov
push
and
dec
or
ja
push
test
lods
testb
push
jl
jb
mov
sbb
testb
mov
sahf
nop
xor
pop
mov
add
xor
in
cmp
decl
jno
push
fiaddl
das
test
outsl
push
pushf
imul
lret
lahf
pop
lds
clc
xor
inc
daa
int3
loopne
push
das
sahf
jg
inc
jmp
xor
mov
pop
sbb
sbbl
adc
bnd
mov
lahf
add
adc
jns
cwtl
movsb
xor
jno
outsb
out
inc
pop
loopne
out
push
aaa
sub
mov
push
test
sbb
fistpll
mov
fidivl
jg
leave
pop
adc
bound
rol
add
movsb
mov
mulb
out
sarl
add
xor
in
jnp
in
add
movsb
loop
cmp
lcall
push
pop
loopne
and
jmp
cmp
in
dec
or
dec
adc
push
aad
daa
aad
xor
cmp
insb
xchg
movsl
and
adc
mov
fs
add
add
leave
mov
jns
xor
pusha
push
push
cli
sbb
inc
rorl
sti
dec
lea
out
bnd
and
sbb
and
filds
ret
movsb
ret
int3
adc
faddp
or
sub
mov
rcll
jge
test
xlat
jne
and
inc
out
xchg
mov
call
jge
loopne
xlat
sbb
xor
xchg
fbstp
dec
in
filds
mov
cwtl
ds
sub
outsl
mov
jmp
mov
and
adc
push
push
lds
cmp
cmp
xchg
push
pop
cmp
cmpl
inc
mov
sti
in
push
mov
rcr
xor
jo
xor
in
insl
lret
push
pcmpeqd
jns
sbb
mov
dec
push
loop
jns
or
in
in
in
mov
outsb
out
ret
dec
push
mov
out
pop
mov
lods
lret
dec
adc
cmp
int
add
inc
xor
aad
pop
in
or
add
push
adc
lds
call
popa
stos
sbb
jne
out
push
adcb
or
and
sub
push
lahf
pop
jmp
je
pop
outsb
mov
out
mov
int3
ret
sbb
bsf
das
iret
lea
sbb
adcl
js
jne
or
imul
addr16
sub
sbb
or
insl
ret
lock
dec
adc
mov
movsb
sbb
rcrl
pop
cmp
leave
cmp
cmp
in
out
mov
std
cmp
sbbl
aas
imul
fidivl
shrb
rorb
aaa
and
push
sti
xor
and
inc
jne
sbb
test
test
fisttps
mov
dec
stos
pop
pop
xchg
arpl
mov
test
testl
push
push
xchg
rcrl
pusha
or
cli
stos
sbb
scas
rolb
and
stos
pop
dec
xlat
fldenv
add
pop
add
fs
fnstsw
sub
mov
xlat
add
xor
jnp
push
push
mov
in
adc
imul
ds
insb
cmp
fsubs
sbb
push
cmp
ss
clc
xchg
pop
in
ss
aaa
inc
xlat
iret
pop
push
jno
test
imulb
pop
movsb
addb
mov
pop
jp
pop
sbb
popa
movsb
xor
aad
sbb
mov
daa
or
daa
pop
lods
xor
push
xor
inc
stc
imul
movsb
jge
or
aas
sti
lahf
push
neg
and
out
icebp
punpcklwd
jae
das
sbb
dec
push
in
lret
push
jb
xchg
test
cli
inc
add
and
sbb
pushf
jecxz
mov
popa
or
stos
scas
jno
jnp
lea
in
mov
sbb
lock
ljmp
xchg
mov
sbb
dec
data16
ja
xor
sbb
sub
test
and
mov
js
mov
pop
jae
adc
ds
mulb
push
std
aas
repnz
cwtl
mov
lret
or
xchg
outsb
pop
cmp
push
mov
lods
aad
bound
stos
test
lret
orl
nop
sbb
inc
mov
sbb
pushl
mov
insb
jg
add
rolb
scas
fcoms
sbb
cmp
push
xchg
or
jb
lahf
mov
cmp
pusha
cmp
or
scas
cmp
rol
jecxz
xchg
addr16
sub
dec
out
out
aas
push
lock
addl
out
in
xchg
mov
adc
adc
inc
ja
insl
dec
les
hlt
es
loope
fiadds
shll
jno
out
call
std
call
cltd
mov
pop
pop
sti
cld
into
es
mov
mov
nop
subb
and
pop
mov
mov
pushf
lods
shl
xchg
lds
sub
pop
int3
add
int3
out
rcrb
inc
mov
sti
imul
mov
jg
cmp
jne
cmp
fcmovne
scas
daa
xor
nop
add
or
jne
push
xorl
or
jno
xchg
ficompl
loope
fisubrs
ret
adc
jge
lcall
push
hlt
jb
aaa
push
in
or
scas
lahf
aaa
add
jg
or
xor
in
mov
pop
jge
loopne
js
xchg
data16
xchg
or
lret
mov
adc
cld
xlat
sbb
inc
sub
jle
fdivrs
orl
xor
push
sarb
or
call
loope
mull
add
or
sahf
into
adc
movsl
loop
mov
inc
addr16
test
iret
fs
outsb
inc
jecxz
lods
fcmovnu
dec
fists
iret
lock
mov
shlb
pop
or
mov
das
cmc
sub
xchg
shl
xchg
lret
mov
loope
popa
mov
sahf
lahf
clc
push
lock
jnp
sub
icebp
dec
dec
lahf
daa
out
dec
in
add
leave
dec
push
mov
or
lret
adc
pushf
mov
cld
stc
mov
dec
sub
sbb
test
inc
mov
push
sahf
ds
xor
and
mov
mov
sub
pop
cmp
cmp
int3
pop
icebp
test
xchg
mov
xchg
cmp
dec
mov
inc
push
insb
inc
mov
fdivl
rolb
and
push
out
xchg
push
xor
mov
xor
ds
in
xchg
or
pop
in
lea
adc
stos
in
jmp
test
cli
xor
ds
add
in
frstor
or
pop
fistpll
repz
or
jmp
ret
jmp
pusha
adc
adc
out
inc
sbb
lock
sarb
sub
mov
push
push
xchg
inc
outsb
mov
mov
notl
in
gs
cli
mov
fidivrs
push
dec
pop
lds
imul
xor
xchg
fwait
sub
das
or
cmc
out
fdivrl
lea
divl
push
mov
xchg
mov
and
fdivrs
adc
lahf
or
and
sub
outsb
dec
xchg
test
lods
pop
aaa
push
dec
test
add
push
stc
into
push
mov
out
mov
sbb
imul
sbb
push
imul
xlat
addr16
out
cmpsb
pop
add
mov
loope
repnz
jb
push
push
mov
mov
mov
or
pop
cmc
cmp
mov
cmpsl
adc
jmp
popf
inc
rorl
pop
outsl
imul
dec
sti
adc
jge
sub
inc
jae
mov
sub
inc
loope
lcall
pop
jnp
fs
add
pop
icebp
cmpsl
jge
stc
into
rcrb
jb
lret
or
inc
pop
inc
and
or
aad
pusha
xor
int3
arpl
scas
aam
lahf
push
or
clc
mov
cld
aas
testl
cwtl
fisubl
mov
push
sar
rcl
dec
dec
mov
push
rcr
fsubp
or
into
neg
jbe
dec
push
sub
mov
out
lret
scas
pusha
imul
add
mov
or
je
pop
and
sbb
pop
add
lds
xchg
jmp
jge
aas
je
dec
inc
pop
xchg
pop
pop
mov
out
sub
xor
push
outsl
push
cld
sbb
imul
add
ljmp
mov
dec
mov
lock
aaa
outsl
mov
loope
addr16
push
and
pop
lret
ret
mov
pop
cmp
add
pop
sub
cs
test
xor
inc
dec
add
add
gs
inc
popf
int3
ljmp
out
cmpsl
stos
xchg
cmpsb
push
dec
mov
movsb
push
popa
inc
dec
xor
cltd
add
push
and
xchg
clc
aad
outsb
outsl
mov
pop
into
jle
cmpl
icebp
repz
dec
aaa
cmp
lea
in
pop
sti
mov
jns
or
int
addr16
jnp
push
movsl
or
xchg
fcmovb
into
cmp
out
stos
and
arpl
push
sar
pop
inc
dec
mov
pushf
or
jnp
cld
add
ret
xor
iret
mov
call
mov
add
out
mov
cmp
cmc
scas
mov
jo
adc
cmpsb
imul
shl
mov
adc
es
rcl
adc
push
hlt
lret
das
filds
je
pop
add
and
sub
inc
cltd
loope
xchg
xor
repz
sub
sub
or
aaa
inc
addl
fidivrs
cmc
rcr
mov
xlat
inc
mov
shrl
push
sub
das
mov
fcoml
sub
cmc
push
stos
fwait
or
and
mov
mov
xchg
push
imul
xor
in
or
es
sbb
or
pop
add
outsl
jp
out
rcrl
in
jns
mov
imul
xor
mov
out
hlt
xor
lcall
pop
and
out
xor
pop
out
adc
inc
lret
lock
popf
pop
in
cmp
test
mulb
jg
pop
lea
popa
sub
dec
outsl
pop
and
pushf
or
mov
sbbb
mov
in
cmp
mov
incl
pop
rcll
mov
jg
iret
dec
and
je
fldenv
subb
mov
sbb
adcb
mov
in
cmp
xchg
dec
mov
lret
inc
clc
sti
aas
cmp
xchg
inc
jl
push
rolb
fistl
rcll
add
xor
lds
pop
sbbl
add
repz
bound
mov
repnz
insl
stos
cmp
pop
repz
icebp
sbb
add
xchg
pop
out
movsl
mov
in
cmpsb
sbb
jle
mov
shrb
cs
dec
inc
shlb
xchg
rorl
dec
jne
xchg
add
fstl
fdivs
add
fbstp
scas
ljmp
in
adc
aam
in
stc
push
test
iret
idivl
or
xchg
cmp
loopne
dec
js
gs
aad
jle
mov
push
xor
popa
jae
jno
and
fstl
cmp
cltd
aad
orl
sbb
fiaddl
fcompl
mov
add
push
std
fistpll
push
js
mov
sbb
cmp
rdmsr
test
jecxz
mov
ret
data16
adc
sub
push
outsl
cmp
les
jae
jns
sbb
or
js
jae
pop
xor
mov
jle
dec
pop
lock
xor
outsb
lods
mov
mov
fldcw
mov
bts
hlt
clc
push
jns
scas
pop
repz
aad
add
fwait
mov
or
dec
ret
icebp
xor
in
cmpsl
popa
in
pop
xor
sub
in
lcall
in
xchg
into
sbb
iret
sbb
daa
jae
int
cmp
and
mov
xor
call
adcl
daa
sti
aam
fdivs
in
mov
mov
xor
push
shlb
jp
jp
or
push
jns
push
enter
sub
cmp
std
outsl
or
adc
inc
es
test
mov
pop
fisttpl
mov
cmpsl
fistl
cmp
xor
jo
dec
push
mov
ror
cmpsl
sub
sahf
adc
in
sub
loope
insb
inc
jmp
xor
mov
insb
data16
xchg
and
outsl
xor
into
sahf
or
lods
and
sub
cli
ret
xchg
cli
sub
iret
fldt
popa
pop
rorl
and
hlt
add
cwtl
mov
ljmp
inc
push
push
cmpsb
pop
into
mov
ret
add
mov
lcall
ljmp
repz
lret
xor
dec
jp
add
nop
or
gs
jge
mov
cmp
or
pop
into
push
sub
daa
add
decl
mov
and
xor
pop
scas
hlt
nop
xor
shl
dec
repz
sub
add
sub
test
cmp
mov
ret
and
or
je
pop
push
notb
fisttpl
add
dec
cmp
push
outsl
xchg
arpl
aam
push
lahf
sub
jge
aad
sub
cli
push
inc
test
mov
and
inc
gs
jno
stc
mov
out
pusha
mov
aad
and
pop
inc
aas
jecxz,pn
sub
lret
adc
dec
test
dec
iret
add
cmc
aaa
pop
xchg
xchg
sbb
jecxz
loopne
mov
icebp
filds
repz
je
adc
int
mov
mov
out
les
mov
xchg
pop
fildll
pop
mov
mov
inc
aad
sbb
mov
pop
xchg
mov
sub
out
in
fsub
xor
movsl
aad
dec
xor
test
aam
scas
cmp
jmp
cli
cli
inc
rcll
les
das
scas
cmp
add
mov
mov
mov
iret
pop
ljmp
jge
jno
inc
int3
iret
jbe
fsubrs
nop
ret
js
push
mov
jecxz
sbb
add
cwtl
pop
mov
sub
mov
mov
aaa
jge
mov
or
scas
popa
pop
ret
pop
test
adc
pushf
sahf
in
inc
scas
inc
mov
adc
std
push
aad
push
mov
out
aas
push
and
daa
and
or
push
lea
shrb
jne
sbb
hlt
jno
into
repz
insb
dec
jmp
jge
sub
jo
lahf
mov
mov
mov
jb
lods
in
cmc
pushf
cmp
mov
inc
or
push
mov
fs
cmp
ret
pop
dec
mov
dec
mov
cmpl
sti
cmp
ror
into
push
add
lea
add
les
add
fdivrs
lret
outsb
pop
in
fbld
or
push
pop
test
data16
stos
hlt
mov
gs
insl
push
sti
adc
popf
sbb
or
add
inc
mov
outsb
sub
adc
adc
gs
mov
mov
xchg
xchg
xchg
jb
jg
in
cmp
xchg
add
jle
call
ljmp
mov
or
pop
adc
leave
leave
mov
xchg
cmpb
bswap
inc
jae
jne
xor
lods
fsts
pop
jne
out
icebp
push
push
adc
jp
cmpb
jne
push
cld
xor
add
fwait
shll
mov
in
std
scas
dec
and
lea
mov
mov
ret
adc
push
das
cmp
dec
mov
lods
push
hlt
int3
loop
test
xchg
fsubp
jp
hlt
movsb
xchg
mov
jae
and
mov
into
lods
cmp
mov
or
pop
cs
xchg
cmpsb
jo
jge
lds
sbb
test
scas
mov
and
hlt
jmp
cmpsb
or
xchg
jge
pop
rol
xchg
xchg
sub
aaa
lret
int3
xchg
and
ljmp
and
sahf
repz
enter
adc
adc
sti
es
addb
mov
les
xchg
push
add
fidivs
pop
sbb
lds
lret
sarb
ficomps
adc
jbe
std
mov
cmp
xor
push
jmp
xorl
mov
cwtl
enter
lods
sbb
mov
and
mov
fsubs
pusha
imul
cmpsl
in
out
addl
test
outsb
and
cmp
popf
mov
push
push
cld
cmc
and
mov
les
push
push
sbb
jb
hlt
lahf
mov
jg
push
rorl
mov
hlt
adc
je
cmpb
push
pop
cmp
cmpsl
mov
fistps
sbb
cmp
inc
shll
int
hlt
mov
cmp
popf
lahf
xor
arpl
out
add
or
jecxz
push
push
push
inc
push
cmp
sub
into
gs
pop
adc
mov
push
or
fsub
pop
cltd
and
jmp
ja
jno
sub
mov
sub
sbb
jns
xchg
jmp
pop
fdivrl
xor
fsubs
xor
testl
mov
mov
lret
fildll
aam
popa
movsl
js
and
or
stos
and
fisubrs
jg
ljmp
sub
lahf
sbb
lret
push
xchg
pop
sub
jmp
sbb
and
lcall
cmc
sahf
or
sbb
out
or
jb
or
test
int3
call
mov
popa
mov
xchg
imul
xchg
out
xchg
loop
nop
dec
enter
add
xor
ret
dec
rcr
adc
mov
sbb
cld
mov
in
sbb
out
daa
xor
das
xchg
mov
cld
mov
push
pop
frstor
icebp
pop
inc
and
fsts
cmp
in
adc
aad
mov
aaa
mov
lcall
push
imul
into
xor
hlt
push
mov
ret
aas
add
stos
sub
ret
push
push
lret
pop
and
xchg
andb
in
idivl
in
fwait
lods
and
cwtl
mov
mov
xchg
fdivs
xchg
mov
mov
cmp
fistps
call
jle
or
xor
mov
adc
dec
nop
and
or
xor
cli
sbb
ljmp
jl
fcoms
in
or
or
hlt
inc
ret
or
sbb
popa
int
mov
int
fistpll
in
lea
pop
aaa
insb
rolb
filds
sti
xchg
scas
push
mulb
jb
xor
sub
fnstcw
inc
xor
push
pop
jge
jmp
stos
das
in
or
das
imul
insb
pop
push
enter
call
loop,pt
dec
test
jge
cmpsb
mov
nop
add
cs
pushf
pop
inc
cs
mov
dec
push
inc
dec
inc
add
xchg
sub
mov
pop
pop
xchg
hlt
pop
inc
in
mov
jle
jl
push
aam
and
repnz
or
je
push
lods
ja
outsl
sbb
sbb
push
loope
push
and
xchg
fdivrp
imul
adc
push
sub
stos
or
mov
cli
jecxz
or
int
aas
in
push
dec
leave
and
out
xchg
inc
cmp
sbb
and
scas
lock
sbb
jbe
mulb
cmpsl
nop
or
and
out
fldenv
dec
cld
jmp
addr16
or
cmp
push
mov
pop
movsb
sbb
mov
outsb
inc
jne
push
enter
loop
jno
push
iret
inc
data16
mov
mov
add
out
or
cli
add
xchg
rol
sub
push
stc
into
xlat
scas
notb
jecxz
adc
jo
sbb
repnz
or
fwait
arpl
negb
xlat
pop
add
jmp
jge
fldenv
enter
pop
es
clc
std
rclb
clc
into
xchg
push
data16
lret
scas
imulb
ds
roll
pop
imul
cmpsl
jmp
jns
xor
lcall
jno
cmc
sub
jbe
xchg
rcll
popf
clc
pop
les
mov
loop
sub
mov
xchg
test
pushf
ljmp
repnz
call
push
clc
dec
daa
mov
jae
leave
cmc
mov
fisttpll
xchg
aaa
xchg
enter
sub
movsl
lret
test
leave
mov
mov
push
adc
inc
cmp
jo
call
sub
pop
icebp
mov
mov
inc
inc
mov
and
jns
je
xchg
outsl
mov
push
push
lock
and
adc
imul
cmp
into
lcall
dec
lea
sbb
cmp
push
mov
pop
sbb
or
mov
rcrb
into
loopne
jb
call
push
mov
push
idiv
add
jp
xchg
les
ret
int
pusha
jno
jae,pt
pop
pop
mov
pop
sub
jp
and
mov
xchg
mov
push
inc
push
jecxz
sti
insl
jbe
xor
icebp
into
mov
lret
or
aaa
sti
fs
and
fcoml
push
and
lods
pop
loope
push
cmp
loopne
dec
sti
shr
add
imul
aas
sbb
mov
jb
or
add
lahf
lcall
mov
pusha
sub
sbb
xchg
or
or
shll
and
pop
push
xchg
repnz
test
fldl
push
add
fcmovne
pop
jge
push
ret
mov
sbb
sbb
lock
and
insl
xchg
and
roll
and
pop
jae
mov
std
or
xchg
or
in
and
push
xor
shlb
fldl
dec
and
mov
xchg
scas
daa
xchg
mov
lea
orb
mov
ljmp
pop
xor
inc
mov
sub
sub
lahf
xchg
outsb
pop
xchg
js
lret
add
inc
out
sti
or
jne
mov
mov
rcl
or
and
in
iret
mov
push
fs
and
pop
push
pop
and
cltd
adc
pop
lock
sbb
rorl
adc
ljmp
sbb
pop
testl
push
inc
jmp
xor
mov
movsb
aad
cmpsl
push
dec
ja
push
pop
inc
push
jecxz
fstpl
add
jae
bound
jecxz
addr16
sub
dec
mov
lods
cmp
jno
dec
or
inc
and
sub
cmp
jo
and
sub
inc
repz
repz
fmuls
scas
push
pop
sub
in
lret
jnp
xchg
jb
aam
jle
stos
jnp
cld
lods
dec
sbb
add
jns
andb
jg
gs
fidivrl
and
and
pop
pop
or
addl
imul
xchg
cmc
insl
js
enter
jle
mov
add
push
sbb
jbe
in
and
call
fabs
stos
psllq
outsl
into
xchg
clc
out
jo
roll
jae
and
and
dec
mov
fs
pop
cmp
faddl
cwtl
in
iret
test
adc
add
mov
call
insb
lea
fstps
test
jbe
jge
jb
mov
lods
in
fnstcw
aam
mov
and
ss
insb
cmc
ljmp
dec
loop
mov
outsl
mov
pop
lods
leave
mov
lds
or
mov
xor
push
lea
mov
cmp
xor
addb
and
add
adc
jl
pop
iret
inc
mov
pop
xor
bound
jle
fildll
mov
js
call
xorl
cmp
js
cmp
lock
mov
repnz
fcmovnb
add
lret
sub
dec
js
sahf
push
out
mov
cmpsb
mov
push
loopne
adc
or
lcall
xor
cwtl
loopne
jne
xchg
xor
jg
sub
mov
adc
xchg
adc
push
or
in
xchg
xchg
mov
dec
adcl
mov
mov
and
cltd
jbe
aaa
dec
out
xor
adc
sbb
subl
outsl
dec
lcall
mov
je
movsb
inc
clc
adc
or
inc
push
xchg
js
xchg
xchg
hlt
enter
fwait
js
fwait
jae
lock
cwtl
lods
cmc
loop
pusha
pop
arpl
cltd
leave
ljmp
sbb
inc
sarl
xchg
dec
clc
mov
clc
idivb
and
adc
leave
hlt
jno
add
jbe
adc
out
jae
push
xchg
sbb
test
add
sbb
push
inc
cmp
sbb
mov
sti
pop
pop
inc
mulb
mov
sub
inc
jp
ror
or
pop
or
repz
call
inc
test
xchg
xchg
sub
push
popf
out
and
sti
fistl
insl
dec
pop
cmpsl
adc
add
loope
fnstcw
test
add
adc
dec
sbb
cmc
pop
sbb
jo
sbb
ret
imul
rol
pop
sarl
mov
jle
insl
repnz
cmpsl
sbbb
test
mov
cltd
in
mov
push
out
loopne
jne
leave
mov
scas
push
and
cs
or
ds
arpl
cmp
scas
out
popa
rclb
pushf
push
out
inc
jp
icebp
into
push
stos
arpl
cltd
jl
xlat
add
repnz
pop
data16
outsl
aaa
stos
push
loope
test
xchg
jbe
icebp
add
inc
imul
test
loopne
enter
sbb
push
push
ljmp
or
adc
cltd
cmp
fildl
or
inc
sbb
aaa
xlat
lret
xchg
jae
push
movsl
inc
jg
test
push
iret
mov
inc
ja
das
cmp
push
cmp
mov
xchg
lock
mov
xchg
or
mov
fisubrs
xor
cmovg
push
rclb
cmp
rcl
pop
outsb
push
out
scas
or
lcall
add
xor
fdivrs
loope
mov
or
sub
les
pop
sbb
pop
or
arpl
add
scas
std
mov
stc
imulb
ret
into
mov
jnp
xchg
jns
pushf
repnz
cmpb
fiaddl
lcall
jge
or
imul
jae
sarb
dec
cld
jp
mov
xchg
xchg
outsl
fcoms
test
jg
mov
leave
mov
sbb
aam
sub
fisubrs
and
pop
inc
sti
push
imul
movsb
test
dec
add
mov
les
lods
ljmp
push
mov
sahf
and
cmp
in
jecxz
dec
fcmovu
push
cwtl
ja
jne
fnstsw
dec
test
ja
addr16
push
push
ret
out
cltd
pop
fdivrs
dec
loopne,pn
xor
ljmp
push
sbb
cmp
sahf
movsl
popa
mov
pushf
sbb
dec
mov
or
ljmp
cmp
in
stc
dec
mov
call
push
ljmp
dec
out
mov
or
inc
adc
sahf
cmp
push
xor
sub
jnp
fwait
pop
data16
idivb
into
dec
jmp
pop
shlb
dec
call
or
lahf
mov
xchg
dec
lods
push
add
sub
mov
pop
loope
les
int3
arpl
adc
mov
mov
in
cmp
je
xor
ja
mov
xor
mov
loopne
out
outsb
jnp
dec
in
hlt
xchg
or
dec
fs
sub
ljmp
iret
faddl
mov
loopne
and
jbe
iret
nop
jae
push
dec
repz
imul
icebp
mov
pushf
fucomi
jmp
lds
mov
sub
jbe
shl
lahf
add
movsb
add
call
mov
jb
loop
pop
lock
sti
pop
arpl
jnp
cmp
int
mov
jno
jno
push
xchg
hlt
mov
imul
mov
push
fidivrl
and
sub
addr16
stc
rcrb
xchg
imul
dec
scas
in
pop
es
sub
ss
in
fisttpll
jecxz
push
sarb
mov
aas
fnstcw
cmpsl
pop
rcl
xchg
dec
loop
push
mov
hlt
and
pop
cltd
fcmovnbe
add
stos
xchg
jbe
jno
ret
cmp
call
sub
nop/reserved
dec
out
mov
xchg
and
jae
sub
sbb
pop
sub
pop
and
mov
sub
imul
pop
ret
adc
fwait
jne
mov
cmp
fsts
lcall
or
add
sbb
hlt
jl
subb
cltd
arpl
inc
aad
mov
arpl
xorl
lods
sti
and
cmp
sahf
std
out
and
add
decb
insb
sub
call
or
jp
xor
daa
cmpsb
jne
pop
mov
jb
fiadds
push
mov
xchg
mov
xchg
and
adc
cwtl
addl
mov
add
cmp
data16
pop
lahf
add
cmpsl
das
xchg
test
push
push
dec
ja
stos
stc
into
mov
lret
sub
mov
adc
push
xlat
xor
cmp
push
cmpsb
pop
imul
fstpt
pop
fwait
adc
xchg
jo
push
test
pop
dec
loop
call
test
cmp
enter
pop
std
push
dec
jno,pt
jnp
inc
popa
push
in
jp
jnp
sub
insl
xor
jns
cmc
cmp
ret
dec
mov
xor
cld
pop
push
pushf
or
mov
or
mov
pop
popa
or
in
and
pop
xchg
inc
cmp
xor
xor
cwtl
mov
fadd
js
jecxz
dec
nop
inc
popf
and
out
cmp
pusha
mov
ret
ret
int
cmp
inc
scas
dec
xor
daa
xchg
movsb
stc
fisttpll
lcall
push
cwtl
or
pop
jno
xor
addb
scas
add
xor
loop
scas
fcoms
arpl
push
sbb
add
shr
jge
inc
mov
sbb
mov
arpl
stos
and
in
shrl
leave
imull
or
aad
jl
push
in
xlat
or
cmpb
loop
loop
icebp
mov
lret
nop
adc
sbb
loopne
lock
and
mov
cmp
outsb
bound
pop
lcall
inc
aaa
push
mov
fdivrl
nop
push
add
jge
sub
rcl
cld
cmpsl
mov
pop
stos
dec
xchg
push
je
push
scas
sbb
aaa
jne
jo
es
xchg
insl
ljmp
bound
mov
dec
dec
fld
test
push
adc
lods
aas
test
in
sti
es
mov
in
adc
mov
dec
subl
movsl
pop
adc
mov
out
push
rclb
jl
fisubrl
enter
mov
divb
pushf
mov
shl
pop
aas
popa
sbb
jle
xchg
dec
sub
rclb
mov
rorl
xchg
sub
sub
or
in
add
jno
xor
mov
adc
outsl
and
fstpl
inc
stos
push
mov
repz
xchg
and
repz
fwait
in
fsubrl
cmp
test
leave
pop
addr16
leave
mov
jno
enter
mov
or
sbb
stc
xor
dec
cmp
mov
jo
in
jno
push
loop
lods
dec
js
out
sbb
jne
adc
dec
mov
add
mov
pop
clc
mov
in
int
xchg
xchg
and
jae
mov
adc
push
test
adc
imul
push
xlat
popf
pushf
lods
mov
dec
inc
ficomps
xchg
sbb
mov
xchg
pop
mov
ret
inc
clc
mov
jmp
add
out
sbb
dec
add
jae
dec
fsts
pop
outsl
mov
xchg
or
lods
sub
mov
lret
test
aaa
adc
mov
lret
sarb
inc
clc
aaa
sbb
push
push
repnz
mov
out
loop
add
das
xchg
add
add
mov
jecxz
push
and
jmp
std
dec
lods
sbb
add
lret
call
jmp
repnz
push
incl
pop
jmp
push
cmc
std
or
xor
fcompl
mov
pop
ret
movsb
ficoms
jnp
loop
push
jnp
xchg
lret
repz
xchg
cmp
out
enter
loope
sub
out
jle
aad
je
aad
fnstcw
pop
ja
nop
daa
mov
ret
sarl
xor
pop
cmp
lret
mov
xor
add
xor
jmp
aad
xchg
or
test
ficomps
out
testb
mov
xor
push
lahf
pop
in
leave
faddp
xor
rolb
inc
dec
clc
fs
xor
inc
sub
cmp
test
mov
push
push
xchg
out
sub
sbbb
mov
rcll
and
fcmovnu
and
push
mov
lret
testl
fwait
push
dec
out
inc
dec
int3
mov
push
outsl
imul
lock
test
dec
leave
jle
add
or
dec
ss
or
and
pop
sub
sbb
mov
mov
lcall
lahf
fsubr
std
mov
lea
test
jg
ret
or
mov
shrl
rcr
andb
aaa
push
push
aam
xchg
ja
pop
xchg
and
fnsave
jp
imul
sti
push
mov
inc
xor
lcall
ljmp
mov
cltd
sarl
mov
dec
push
mov
adcl
xchg
sub
inc
das
pop
rorl
ss
mov
jnp
test
sbb
push
xor
pop
daa
das
ret
iret
mov
jo
pop
ds
mov
aas
out
mov
testb
loopne,pn
repnz
pop
xchg
or
sbb
jno
cmc
test
ljmp
push
in
jle
push
je
dec
pop
lahf
xlat
aas
pop
movups
mov
jbe
cmp
aas
out
lret
ret
inc
movsb
imul
sub
mov
sbb
sbb
in
cli
cwtl
lret
cmp
push
jg
lods
fiaddl
out
sbbb
rol
lods
xchg
xorb
pop
das
cs
rcll
lds
sbb
jge
add
iret
leave
icebp
ret
lock
or
pusha
lret
xor
push
test
outsb
daa
inc
or
mov
jp
sahf
mov
inc
cmp
mov
inc
push
mov
push
push
mov
sub
xchg
jno
push
inc
sub
cwtl
jb
push
jp
iret
jno
mov
popf
xchg
mov
mov
or
mov
ror
cmp
repz
cld
in
rorl
ljmp
mov
pop
sbbb
imul
pop
mov
testl
add
sbb
data16
aaa
lret
and
mov
add
pop
fstps
jo
loopne
aas
jbe
test
or
lret
cltd
into
out
stos
inc
dec
push
sub
jae
pop
sbb
leave
push
or
mov
mov
fidivl
cmp
into
mov
dec
popf
xchg
jecxz
cmp
in
lret
sbb
lret
and
pop
add
je
pop
rol
mov
push
lock
xchg
lahf
sub
cmc
mov
into
stos
sti
pop
push
movsb
sub
sub
cmp
lods
jge
mov
scas
sbb
pop
xor
push
sub
addb
es
dec
push
jne
sarb
mov
mov
cmp
scas
push
loop
mov
aaa
jle
rcrb
loope
push
adc
notb
iret
push
maxps
xchg
stc
fimull
stc
outsl
loopne
sti
out
mov
cs
inc
mov
cmpsb
mov
inc
inc
and
fwait
icebp
test
incl
pop
xlat
mov
lods
cli
cli
sub
cs
xchg
lret
fstpl
xor
out
mov
loopne
push
or
mov
enter
cmp
or
xchg
bound
cld
xchg
mov
xor
jno
push
pop
jle
movsb
mov
loop
fcomip
sub
adc
xor
xchg
mov
test
dec
ret
push
xchg
lods
pusha
imul
mov
or
mov
popa
push
cmp
xor
inc
push
aaa
jg
xor
add
rclb
aam
push
jp
mov
pop
inc
ss
pop
jmp
iret
loopne
cmp
aas
mov
es
add
push
and
aaa
cmp
lods
push
mov
test
add
lods
mov
add
jp
push
gs
aaa
mov
addr16
and
rol
adc
sbb
into
cmp
mov
push
and
test
out
cmpsl
dec
out
inc
mov
call
lods
pop
jmp
push
or
loope
jo
xchg
fcoml
push
shlb
cli
push
jns
jnp
xor
shlb
dec
pop
out
lds
pop
sahf
rclb
testb
cmpsl
add
inc
loope
nop
arpl
push
sbb
mov
imul
add
jno
pop
and
push
outsl
hlt
cmpsb
addr16
mov
loop
push
mov
or
and
mov
add
jne
push
dec
push
mov
sbb
aam
jge
mov
cmp
cltd
inc
into
scas
xchg
adc
xchg
jb
das
mov
push
xchg
test
cmpsb
cwtl
insl
mov
or
lds
add
xor
mov
in
adc
addb
push
jnp
jle
push
int3
std
scas
add
push
lret
jnp
scas
xor
or
inc
or
movsl
testl
cld
fcmovbe
iret
adc
fcoms
jle
and
lret
cmpsl
mov
pushf
pop
loop
inc
and
nop
mov
clc
mov
pusha
pop
sub
adc
stos
add
sbb
dec
sub
cmpsb
fadd
cmp
rolb
or
repnz
lds
scas
mov
loopne
dec
jnp
lods
jne
bswap
cmp
cltd
xchg
cmpsb
pop
add
hlt
sbb
pusha
ljmp
mov
jnp
or
push
mov
cmp
nop
jl
lret
daa
xchg
lods
jl
xor
outsl
loop
sub
xor
adcl
cmp
in
or
fiadds
add
pusha
sbb
fcoms
sbb
push
out
adc
and
into
adc
push
cmp
inc
nop
lahf
pusha
cmp
imul
jmp
cmp
xchg
pop
push
jne
or
mov
cs
fs
mov
adc
std
repnz
cmc
shl
jb
aas
out
mov
mov
pop
jns
push
loopne,pn
pop
pop
daa
divb
lcall
lret
xchg
xchg
fs
rol
adc
cltd
enter
xchg
cmc
cmp
dec
movsl
mov
inc
rol
ret
in
nop
sub
call
jns
cmp
test
aaa
xor
xor
dec
movsl
push
push
pusha
rclb
jp
pop
paddsb
es
lret
pushf
xchg
fs
sub
fst
mov
ret
cwtl
cmp
adc
or
and
es
in
ffree
mov
mov
lock
xchg
js
pavgw
insb
pop
jg
clc
filds
stc
scas
stc
sub
aaa
xor
adc
scas
clc
push
repz
repnz
movsl
into
pop
mov
in
call
daa
and
lret
cmc
xor
insl
cld
rclb
push
pop
inc
mov
leave
adc
mov
jl
hlt
mov
mov
jge
mov
dec
adcl
pusha
adc
dec
fiadds
mov
adc
xor
enter
sti
rdtsc
sbb
inc
int3
or
cwtl
inc
stc
fwait
add
or
mov
mov
in
add
test
cmp
data16
inc
dec
adc
dec
ljmp
movsl
push
repnz
xchg
pusha
in
dec
mov
es
or
mov
or
and
mov
popa
or
push
pop
and
mov
inc
gs
inc
xchg
pop
es
push
mov
sbb
leave
mov
xchg
mov
bound
mov
pop
faddl
stos
cmpsl
inc
rclb
lods
repz
jne
fists
cs
jno
arpl
addl
and
and
cmpsl
mov
sub
fiadds
push
or
jle
mov
jp
shrl
or
push
in
mov
fnstsw
into
inc
xor
fadds
cmc
aaa
ret
fcom
push
push
aas
push
cmp
adc
fsubs
fisttps
into
clc
add
fmuls
je
pop
or
arpl
mov
pop
sbb
orb
mov
jmp
shrl
fisttps
scas
imul
mov
ror
inc
fwait
add
xchg
dec
push
sub
fsubs
movsl
test
hlt
xchg
push
fldenv
into
push
mov
fwait
cs
add
mov
inc
or
mov
dec
push
clc
add
push
insl
rep
icebp
int3
add
fimull
lods
push
cs
pcmpgtw
add
addr16
inc
sub
adc
xchg
loope
sub
and
shlb
int3
sub
in
xchg
stos
inc
inc
mov
pop
sub
mov
xor
pop
nop
filds
mov
pop
jns
xchg
gs
ja
fisubrs
imul
mov
lret
sbb
repnz
mov
cwtl
cmp
jecxz
ds
leave
lcall
mov
mov
lea
and
fimull
inc
test
pop
inc
loop
mov
in
mov
mov
lret
stc
jmp
rorl
mov
xchg
push
les
ljmp
xchg
dec
addb
ror
push
pop
jb
clc
mov
out
push
icebp
iret
xor
cwtl
or
jnp
jne
lock
jno
add
push
in
mov
mov
pop
imul
mov
mov
xchg
ja
dec
lret
pop
or
mov
pop
lods
dec
je
pop
inc
xchg
pop
or
imul
js
push
add
xchg
or
negl
mov
imul
flds
push
add
jmp
adc
or
push
jne
and
sarb
js
sbb
stc
faddp
xchg
adc
xchg
xchg
mov
xchg
hlt
pop
mov
fwait
or
pop
jecxz
lds
add
daa
cmc
inc
in
fwait
out
cld
cmp
jnp
mov
xchg
jecxz
mov
jb
cmp
mov
sub
mov
push
mov
sbb
dec
mov
add
mov
decl
jl
jnp
imulb
jns
rcrl
or
pop
mov
or
daa
mov
rorb
xchg
sub
jle
xor
mov
xchg
ljmp
xchg
imull
cmp
sbb
and
imul
test
test
loopne
stc
dec
aad
inc
cmpsl
loopne
movsb
pop
sbb
xor
out
mov
aaa
xor
inc
dec
mov
popa
sahf
cli
inc
ret
lret
jbe
cmp
je
ret
mov
sub
jo
pop
in
dec
push
and
inc
dec
jl
mov
pop
hlt
cmp
jle
icebp
lcall
jg
ret
bnd
lahf
pop
push
arpl
jge
jb
xchg
xchg
xor
sbb
adc
push
push
arpl
mov
or
push
pop
fwait
jge
jbe
iret
popf
jle
inc
jp
jecxz
pop
push
add
mulb
roll
fisubrs
bnd
jno,pn
fists
enter
add
add
sub
xchg
sbb
inc
sub
scas
lock
inc
pop
fnstcw
fnstenv
call
fs
mov
ja
mov
and
icebp
pop
loope
sbb
addr16
cmp
aaa
bound
cmp
rorb
adc
and
add
inc
push
or
xchg
imul
mov
xchg
xor
pop
in
negb
pop
rcrl
push
jge
push
mov
pop
ret
orb
sahf
cmpsb
inc
cmp
fnstsw
adc
ss
cmp
xor
stos
add
adc
fildll
xchg
adc
adc
xor
pop
push
pop
repz
and
cmp
js
xor
mov
adcb
add
imul
aam
dec
inc
push
xchg
cmp
insl
rcll
arpl
sub
adc
ss
pop
xchg
stos
inc
repz
xchg
iret
inc
or
dec
ja
testl
push
pop
popf
mov
xchg
jae
adc
cmp
ljmp
out
xlat
pop
or
lock
gs
enter
jecxz
push
mov
sub
or
loope
mov
inc
mov
dec
jle
fildl
in
aaa
and
xor
fldcw
cmc
xor
inc
push
ds
fs
add
pop
mov
pop
in
xchg
xor
inc
mov
fldcw
in
idivb
adc
inc
cmp
pop
or
repz
loopne
inc
xor
dec
out
inc
ja
xor
jecxz
jbe
call
fdivp
loopne
pop
xchg
ljmp
sub
in
dec
pushl
popf
and
stos
out
movsb
pusha
imul
idivb
jmp
mov
sbb
nop
dec
lahf
mov
lods
fwait
mov
scas
cmpsl
inc
cli
sbb
and
rcl
sub
cmpsl
fmull
dec
sbb
xchg
push
cli
pop
push
stc
push
bound
test
mov
mov
stos
adc
jns
jnp
mov
add
inc
popf
aas
sbb
mov
fwait
stos
sub
iret
push
add
pop
icebp
add
mov
xor
lock
mov
lods
mov
and
sbb
repnz
addl
addr16
cltd
sarb
rclb
add
cmp
lock
lahf
pop
adc
cmc
mov
fwait
and
and
roll
sbb
push
sub
push
dec
cld
add
ds
inc
mulb
sti
lret
js
pop
outsb
in
cmpsb
mov
pop
iret
jns
xor
ja
push
push
lods
inc
test
mov
je
inc
cmp
cmp
test
push
lret
fidivrl
out
adc
cmp
xor
cmpsb
loopne
gs
pushw
push
fs
adc
xchg
mov
sbb
adcb
scas
imul
xorl
in
cmp
and
xchg
xchg
aam
ftst
rcl
mov
and
in
dec
mov
adc
call
fildl
in
mov
pop
add
push
and
jge
mov
lret
cmpb
cmp
or
pop
in
jge
lds
sub
push
jne
sub
jne
xchg
pop
addb
loop
push
mov
pop
mov
and
fwait
and
add
test
dec
pop
or
adc
mov
loopne
stos
clc
or
or
adc
std
outsb
fdiv
mov
mov
cli
out
mov
push
pop
and
stc
mov
jp
and
loope
dec
test
lcall
lret
fsts
popf
mov
mov
imul
pop
int3
pop
jns
adc
mov
aam
inc
rcrb
outsb
scas
testl
push
fidivrl
aad
adc
subl
test
movsb
repnz
imul
pop
fiaddl
push
add
cwtl
rclb
inc
mov
inc
insl
sub
inc
and
in
fstps
or
sub
jno
fsubrs
pop
cmpsb
fwait
inc
nop
call
pusha
hlt
cmpl
shlb
cmpsl
jg
icebp
ret
inc
mov
aas
mov
add
cmp
and
in
dec
and
pop
mov
sub
or
sbb
fistpll
loope
addr16
xchg
xchg
pop
sub
jp
pushf
cmp
mov
mov
repz
lret
mov
push
loop
xchg
test
je
jp
add
xchg
pop
cltd
jo
gs
hlt
jmp
push
pop
dec
sub
fcoml
lods
bound
jnp
push
aam
push
outsl
add
repnz
inc
repnz
push
xor
sahf
cmp
and
inc
dec
push
les
adc
mov
aad
cli
cmp
movsb
pop
mov
inc
lods
push
out
or
inc
cmp
daa
push
xor
cmp
repnz
cmp
sub
xchg
insl
fistpll
sbb
pusha
jle
subb
nop
into
les
sub
or
adc
inc
fistl
mov
cmp
dec
adc
test
jmp
insl
jbe
rorb
popf
lret
sbb
mov
dec
mov
rorl
daa
cmpsb
and
scas
mov
and
ds
jg
mov
lock
sub
mov
pusha
push
into
test
sub
push
xor
cmp
out
hlt
lods
push
ret
push
sbb
xor
inc
xchg
mov
mov
mov
jp
inc
push
mov
inc
enter
pushf
mov
mov
or
jbe
out
das
push
fisttpll
and
in
xchg
push
or
aam
lods
ljmp
test
and
adc
pop
pop
out
lcall
iret
mov
push
push
jns
xor
in
mov
daa
xor
sbb
mov
add
sbb
fadds
repnz
cmpsb
or
lods
fs
xchg
push
addb
addr16
jo
adc
sub
jmp
add
pop
dec
dec
xchg
pop
out
adc
js
sub
ljmp
int
rcll
icebp
gs
mov
pop
adc
shrl
xchg
das
ja
dec
push
pop
out
je
in
leave
lret
js
mov
addr16
stos
les
xor
js
aaa
sub
arpl
and
imull
push
mov
push
dec
aaa
cmp
fistpll
mov
xchg
test
sub
cwtl
xor
xor
js
pop
arpl
push
push
push
push
push
sahf
dec
jbe
push
lea
xchg
xor
lods
mov
lods
inc
inc
jp
mov
outsb
jb
adc
cmp
jnp
jg
and
mov
mov
sbb
mov
or
ret
jmp
pop
or
test
aas
inc
jle
stos
sbb
xchg
test
push
sbb
orb
ljmp
adcb
out
sub
sbb
lahf
xchg
inc
rclb
into
xor
dec
ret
push
std
in
outsl
xchg
mov
push
imul
mov
xchg
push
and
insl
add
push
and
jbe
in
in
call
mov
fcmovne
lret
sub
xrelease
push
xchg
adc
and
pop
cmp
repz
lret
push
mov
sbb
sub
adc
jnp
jns
adc
ja
stos
jbe
lcall
jp
cmp
adc
neg
pop
movaps
clc
mov
sbb
aas
arpl
cs
icebp
or
aam
pop
movl
xchg
mov
mov
idivb
push
sub
sub
sub
xorl
and
and
dec
out
jae
out
xor
testl
inc
dec
icebp
loope
cmc
mov
mov
insl
in
cltd
enter
jb
xor
or
xor
insl
jne
xlat
arpl
sub
adc
xor
cmpsl
and
fsubs
push
sbb
push
push
xchg
ret
insl
ja
mov
rorl
jecxz
push
subb
or
push
xchg
and
sbb
dec
cwtl
jmp
jns
data16
outsl
mov
aaa
jp
mov
jmp
movsl
adcb
stos
aaa
xchg
sbb
and
or
fadds
out
mov
push
nop
rcrl
dec
fdivrl
mov
icebp
adcb
mov
mov
push
xor
aaa
icebp
mov
je
psllw
or
adc
lds
pusha
pop
sbb
jo
pusha
pop
mov
lods
rcrl
test
sub
fnstsw
mov
jno
clc
popa
scas
xlat
fisubs
and
shll
xchg
mov
jnp
popa
andl
lock
sbb
xchg
sbb
lahf
bnd
test
enter
in
mov
xlat
and
push
xchg
test
adc
mov
dec
inc
cmp
adc
sbb
xchg
mov
out
add
mov
push
mov
inc
mov
test
jge
daa
test
dec
jo
aam
pop
int
nop
es
sub
stos
xor
addr16
call
pushl
jge
xchg
sarl
enter
imul
pop
or
lods
ljmp
xchg
cmpsb
aad
add
fstl
and
push
outsb
mov
test
sahf
lock
out
lea
pop
push
mov
icebp
inc
icebp
sbb
mov
dec
xchg
inc
fwait
ja
xor
dec
sbb
int3
mov
mov
mov
jmp
loope
daa
pop
pop
dec
dec
mov
ret
jno
jmp
imul
std
jp
mov
lcall
lds
pop
mov
mov
xchg
out
cmc
pop
ja
mov
inc
mov
repnz
ret
mov
lcall
fs
sub
sub
or
scas
mov
test
push
es
int3
sub
push
push
movsl
test
jg
lea
pop
aaa
mov
fldenv
xchg
es
cmp
and
inc
inc
mov
push
mov
or
sub
push
add
pop
scas
repz
sti
pusha
pop
mov
vpunpckhqdq
test
filds
dec
scas
pop
push
shlb
popa
in
cltd
fsub
mov
jno
xchg
jl
cwtl
lds
add
push
mov
xor
xchg
ljmp
cmp
out
rclb
xchg
cmp
ja
pop
ja
ret
popf
push
das
hlt
fs
sub
mov
xlat
lds
dec
jl
sbb
xchg
add
in
lret
and
mov
aam
mov
icebp
mov
scas
in
ficoms
enter
cmpsl
push
subb
push
mov
adc
add
jne
test
fs
lea
ds
mov
es
dec
jae
mov
iret
in
push
inc
into
popa
mov
and
fnstsw
int3
pop
aam
and
test
xchg
adc
push
mov
inc
ror
jns
js
popa
outsb
sbb
loop
sbb
jnp
mov
cmp
lods
imul
mov
jp
aas
stos
cmp
pop
push
inc
cli
cmc
data16
push
xchg
xchg
jae
sahf
imul
adc
push
out
dec
addr16
aaa
mov
adc
cli
xor
in
ds
jmp
jp
scas
xor
push
lret
out
xor
or
or
push
mov
xchg
insb
movsb
mov
clc
push
fdivs
push
movsl
shlb
out
andl
out
rcrb
lcall
xchg
push
xchg
data16
ss
jae
cmp
dec
fiaddl
dec
sub
fidivrl
fisttpll
icebp
sarl
loop
in
fsubrp
inc
sahf
ffreep
fbstp
sub
xchg
jb
loop
sub
or
push
int3
jb
jb
shrl
test
cmp
mov
imul
cld
pushf
xor
shll
scas
es
jns
fs
cmp
lret
scas
adc
fildll
push
ficomps
imul
cwtl
movsb
jb
lret
inc
sub
pusha
dec
pop
cmc
add
repnz
frstor
dec
inc
lds
out
dec
jno
add
repz
je
dec
test
jmp
stc
fsubl
pop
gs
sbb
adc
cmp
in
adc
xchg
in
fcompl
shll
mov
scas
mov
sub
jl
jmp
stos
sbb
adc
data16
and
cmp
out
xchg
scas
fbld
xchg
mov
inc
stc
jae
mov
mov
inc
jle
testb
mov
mov
xor
mov
mov
mov
mov
imull
add
in
pop
out
inc
scas
ret
scas
cmc
ljmp
jecxz
loopne
and
dec
and
jo
daa
xor
xor
inc
jg
outsb
mov
stc
sub
rcll
mov
in
shrb
pop
mov
push
cltd
cmp
inc
mov
mov
xor
inc
loope
mov
sbb
fs
pushf
outsb
icebp
mov
lret
scas
stos
int
cmp
and
in
inc
in
jbe
push
or
js
mov
xchg
jne
sti
ds
scas
ret
push
inc
sbb
test
sbb
push
pushf
xor
outsb
es
stos
insb
inc
jne
fs
imul
jecxz
adcb
clc
push
orl
je
dec
push
inc
add
jns
jle
add
or
xchg
cmp
lret
loopne
lret
sub
inc
mov
sbb
push
push
sub
lds
sti
pop
daa
fisubrs
mov
js
rorl
sbb
push
dec
mov
push
andb
addr16
pop
jae
test
enter
mov
xor
cwtl
loopne
imul
arpl
sbb
jns
adc
scas
fwait
xor
inc
sti
sahf
mov
push
mov
test
js
cmp
fldt
lds
aad
bound
xchg
in
pop
sbb
icebp
cmpsl
push
xor
loop
andl
scas
out
call
cmc
mov
jb
aas
push
scas
jbe
mov
mov
lock
cmp
dec
xor
cmp
xchg
sbb
or
leave
sti
mov
jo
sub
dec
sarl
fsubrs
cld
imul
enter
pop
sbb
cld
push
data16
pop
clc
dec
mov
pop
enter
sbb
stos
sbb
push
test
add
jmp
pop
fstpl
mov
out
pop
xor
hlt
fwait
mov
mov
in
and
fidivrl
cmp
shrb
xchg
xchg
mov
push
mov
push
xlat
fwait
mov
or
gs
loope
jmp
xchg
das
pop
cmp
or
sahf
sub
cmp
pop
std
stos
cmp
shlb
dec
xchg
cmpsb
sbb
mov
adc
inc
rcrb
sti
jecxz
mov
cmc
fldl
movsb
bound
ss
leave
in
sbb
sub
shlb
jae
repz
fmull
sbb
mov
es
cmovle
sbb
cltd
cmc
cmp
insb
sbb
hlt
sbbb
hlt
popf
xor
pop
add
aas
subl
lods
scas
mov
mov
sub
lcall
inc
jns
iret
pop
sub
sub
xchg
xchg
popf
cmp
inc
sub
cmp
and
out
sub
or
pop
or
idivb
inc
divl
stc
pop
subb
push
idiv
cmp
pop
outsb
pop
psubq
cmp
pop
mov
adc
idivl
mov
lret
aaa
stos
jl
test
jle
movsb
fstpl
xor
sbb
push
cmpsl
insb
shl
xor
inc
popa
jecxz
or
mov
cs
scas
cmc
stos
inc
mov
cmp
int3
add
or
jne
sub
mov
push
sbb
lods
gs
sbb
xor
mov
add
mov
rcr
leave
mov
popf
sbb
sti
jecxz
add
test
test
mov
call
loope
repz
pop
jge
adc
pusha
dec
pop
jo
data16
scas
negl
loope
mov
mov
mov
jno
lods
nop
sub
movsl
sbb
or
daa
clc
popa
dec
stc
rcrl
add
jge
repnz
sub
bound
adc
std
pop
adc
mov
jae
jle
inc
in
les
les
rcr
fldenv
mov
mov
js
xor
gs
sbb
pop
xor
xor
pop
repnz
sub
nop
jp
inc
sub
sbb
outsb
adc
lods
rcr
sbb
dec
stos
call
cwtl
int
test
xor
scas
repz
xlat
lret
das
inc
or
ljmp
cmp
int
dec
mov
fdivs
jle
pop
add
aas
fwait
repnz
add
cmp
mov
sub
xorb
mov
dec
in
jo
add
sub
or
jno
cltd
ja
mov
pop
add
mul
adc
or
push
sarl
ja
jno
cmpl
lods
pushf
push
rcll
std
inc
xchg
xchg
imul
mov
jle
out
mov
mov
notb
fpatan
cmp
mov
xchg
jg
fisttpll
push
insl
clc
js
scas
and
inc
xchg
popa
pushw
js
xor
dec
mov
adc
mov
push
pop
cmp
jnp
sub
mov
xchg
mov
out
xor
mov
sub
xchg
xchg
rcll
icebp
cltd
into
and
mov
xlat
fmuls
int3
dec
mov
sbbb
adc
cmp
mov
push
jnp
hlt
mov
popa
jmp
lock
mov
jnp
or
pop
lock
out
orb
movsl
in
push
mov
cwtl
lds
roll
popf
ja
leave
clc
push
scas
jae,pn
mov
mov
sbb
or
mov
in
gs
inc
adc
mov
cmp
cltd
mov
push
mov
or
mov
mov
ljmp
iret
add
lret
mov
movsb
or
sti
inc
frstor
or
adc
push
or
sub
jg
jg
push
xor
mov
inc
push
cmp
testb
push
xor
and
roll
push
fwait
or
lahf
das
push
mov
cld
push
mov
cmp
push
fldl
push
mov
mov
jns
cmc
loope
fadd
ficoml
jns
hlt
shlb
xor
repnz
lea
xor
test
push
les
sbb
fdivrl
stos
push
out
cmp
adc
and
mov
adc
xor
scas
pop
cmpsl
inc
repnz
push
mov
loopne
arpl
sub
scas
inc
lock
cld
jno
pandn
outsb
jb
stos
mov
and
pop
xor
lods
les
icebp
fisubrs
mov
outsb
fists
hlt
mov
ljmp
sbb
and
mov
out
add
mov
inc
out
jecxz
jl
popa
xchg
add
popf
sbb
cmp
test
add
add
sub
mov
lock
mov
jbe
lahf
sub
dec
inc
daa
sub
push
jg
out
inc
stc
lret
sub
fcomps
test
rcll
mov
jecxz
sbb
jmp
sbb
cwtl
and
inc
push
mov
mov
adc
sub
xchg
push
jge
adc
sub
shl
int3
lret
fcomip
js
dec
mov
ds
xor
cwtl
adc
data16
lods
and
lret
ret
ljmp
mov
xlat
imul
nop
dec
jb
jae
pop
push
repz
push
scas
ds
push
jo
jmp
pop
jge
mov
xchg
divl
add
fcoml
imul
lcall
sub
nop
sub
aaa
xchg
xor
sbb
cmpl
mov
divl
sbb
xlat
inc
rcl
dec
rcl
inc
sub
inc
and
xor
sbbb
cmp
cltd
mov
xchg
iret
pop
hlt
pushf
punpckhdq
inc
call
fmul
mulb
jmp
popa
jne
jl
sarb
je
mov
clc
jbe
scas
mov
ljmp
adc
outsl
xor
mov
popa
idiv
movsb
aam
mov
lods
mov
fsubrs
icebp
rcll
xchg
lret
adc
repz
mov
pop
or
sub
cmp
push
dec
xchg
sbb
idivl
pusha
test
dec
xchg
push
xchg
dec
addr16
sti
inc
sub
sbb
xor
sbb
and
mov
jmp
insl
pushf
std
imulb
push
ret
cmc
rorl
stos
loop
sub
mov
adc
xchg
cmc
jp
ficompl
jbe
adc
lock
ficomps
jg
adc
dec
es
jmp
loopne
sbb
daa
outsl
push
fisttpll
mov
out
jb
pushf
and
xchg
jnp
or
lahf
xchg
rolb
ss
adc
xchg
lret
repnz
rorl
in
stos
and
dec
push
in
jnp
pop
clc
insl
test
leave
cmp
jge
mov
inc
pop
pusha
dec
sub
jmp
gs
lds
mov
sbb
pop
push
mov
xorb
xchg
or
mov
clc
das
or
sbb
shufps
insl
rcl
sub
fdivrl
aas
gs
insb
xchg
mov
jno
fldcw
cmc
ret
sbb
mov
repz
push
mov
inc
inc
xor
push
daa
fcmovbe
mov
mov
jno
insl
or
or
add
imul
inc
testl
enter
adc
fwait
sbb
cmp
push
lds
in
add
jae
jo
fists
jge
inc
sti
pop
dec
pop
shlb
cmp
mov
push
and
aas
xchg
cmpl
hlt
ret
loope
js
jg
lret
into
and
out
mov
jb
jle
rorb
frstor
pop
xchg
mov
cmc
test
ljmp
jae
sub
jnp
or
push
jg
frstor
adc
dec
dec
idivb
fcomps
xor
xchg
rorl
and
aad
fists
mov
and
mov
jg
and
pop
rorl
movsl
bound
pop
mov
push
gs
mov
mov
dec
lds
sub
jne
cs
inc
xchg
in
insl
ss
mov
adcl
or
pop
jmp
or
pop
adc
test
cwtl
add
outsb
xchg
cld
arpl
leave
movsl
imul
add
adc
aas
insl
stos
lods
inc
adc
adc
lods
fidivrl
or
or
dec
inc
cltd
or
outsl
sbb
dec
fadd
pop
mov
fwait
jae
mov
mov
mov
push
sub
mov
sarb
daa
cmp
xor
cmp
sub
pushf
xor
ret
mov
das
in
inc
idivl
pusha
xchg
and
test
arpl
dec
or
loope
xchg
mov
xchg
les
pop
push
pop
xchg
inc
mov
and
jb
insl
cmp
daa
jnp
fsubrl
mov
and
mov
stos
jle
pop
shl
add
daa
mov
xchg
pop
mov
mov
js
dec
lret
and
add
clc
adc
inc
test
push
lret
jmp
cltd
lret
stos
iret
es
int3
cs
test
ret
cmp
xchg
add
movsb
lds
jmp
xor
mov
aas
cmp
test
sbb
fs
or
mov
imulb
pop
jno
aaa
xchg
fs
pop
iret
pop
pop
adc
int
iret
pop
arpl
mov
mov
dec
xrelease
inc
sbb
mov
push
sti
popf
cwtl
scas
js
sahf
xchg
adc
fdivrl
sbb
jge
jne
scas
dec
das
sub
aas
and
subl
mov
jne
call
jnp
sti
cwtl
xlat
hlt
jmp
xchg
mov
inc
not
rcr
mov
aaa
xor
lods
sub
xchg
xlat
divl
hlt
out
and
insl
shll
call
xor
add
inc
pop
sbb
movsb
inc
leave
push
fnstsw
out
mov
lcall
ds
xchg
push
movsb
xlat
xor
les
and
addr16
sub
pop
add
rcll
cld
sti
jbe
sahf
test
dec
shrl
jmp
xchg
xchg
xor
repz
mov
push
lcall
adc
clc
push
inc
fsubrp
jo
mov
stos
jle
addb
jl
cwtl
loop
push
adc
mov
call
adc
mov
inc
imul
stc
icebp
daa
mov
dec
cmp
enter
mov
cmp
inc
pop
lcall
fcomps
push
push
nop
stos
sub
and
pop
xor
dec
push
push
in
movb
mov
repz
push
jmp
dec
sbb
add
andb
sub
cmp
pop
sti
jl
int
das
outsb
add
int
scas
mov
incl
mov
dec
cmp
add
outsl
and
xacquire
addr16
inc
mov
aaa
ret
inc
int3
cli
lock
push
jmp
push
pop
bound
dec
xor
adc
popa
mov
out
pushf
sti
imul
push
pop
xor
lods
adc
add
sbb
adc
xchg
pop
daa
subb
es
std
into
pop
gs
inc
jbe
add
mov
xchg
inc
cli
sub
cmpsl
push
test
push
sarb
xchg
and
add
cmpsl
inc
rcrl
sbb
in
inc
enter
cmp
lret
popf
fdivrs
data16
das
dec
clc
mov
cs
lret
dec
bound
xchg
jg
incl
and
push
sbb
fildll
scas
call
or
mov
in
aaa
mov
mov
adc
jl
dec
adc
xor
ljmp
mov
cmpsb
mov
push
and
mov
jne
out
fmuls
outsb
pop
jo
lods
and
lods
push
inc
repnz
lock
and
sahf
inc
pop
and
or
out
aam
cs
enter
cmp
mov
add
inc
xor
cmp
jae
lahf
inc
out
cltd
gs
scas
pop
mov
xor
sub
mov
fldcw
outsl
scas
mov
mov
bound
xchg
xchg
fs
mov
mov
jno
mov
leavew
push
inc
xchg
xorl
dec
sbb
cmp
ds
mov
out
add
sbb
xor
push
push
mov
sub
cmp
into
in
push
jecxz
mov
sub
cwtl
xor
fcoms
ja
repnz
rcrl
jl
out
cwtl
jns
mov
insl
add
push
icebp
js
add
not
addr16
adc
std
jne
repnz
outsb
or
sub
shl
cli
cmc
cmp
add
out
or
fwait
add
push
push
mov
in
add
inc
mov
adc
mov
decb
les
lds
loopne
lea
or
jmp
jbe
sbb
in
cs
out
and
out
jecxz
dec
sarb
xchg
push
sub
out
xor
inc
dec
mov
jmp
dec
stos
ljmp
es
cmpsl
pusha
je
and
divl
gs
outsl
xor
int3
es
cmp
shll
cld
fs
lock
cmpsl
cld
xor
fs
fadds
mov
je
jge
out
jno
sub
popa
mov
adc
test
xchg
out
mov
iret
adc
mov
aas
cmp
inc
mov
andb
out
jp
cltd
nop
mov
cmp
sub
movsl
xor
pop
xor
xchg
pop
test
movsb
fs
mulb
or
inc
in
enter
fdivs
fs
sarb
out
jns
fwait
negl
mov
in
mov
negl
mov
test
jmp
sub
int3
xchg
sbb
repnz
adc
xchg
inc
mov
sub
cmpsl
fsub
ljmp
xchg
pop
fwait
pop
jecxz
test
sbb
or
jg
outsb
and
sbb
mov
sub
pop
mov
fmuls
scas
sub
and
stos
mov
vunpckhpd
mov
loope
aaa
repnz
cmp
sub
adc
inc
loopne
ss
pop
cltd
out
fdivrs
das
xor
mov
insl
aam
movsl
add
xor
rcr
mov
fwait
jns
sub
ret
pop
inc
xchg
cli
cmpsb
push
decb
xchg
idivl
pop
cmpsl
out
aad
mov
pcmpgtd
enter
out
ljmp
int3
lret
pop
inc
scas
cwtl
cmp
dec
ljmp
mov
fwait
rorb
ret
pop
imul
pop
or
in
movsl
ret
sti
lret
sub
mov
dec
aam
jno
sbb
int
pop
xchg
lods
sub
dec
dec
push
pop
sub
cltd
dec
outsb
adcl
and
or
mov
out
add
xor
jmp
mov
mov
mov
cwtl
repz
or
dec
mov
lods
cmpsl
outsb
pop
aam
call
loope
cmp
sbb
or
ja
inc
in
add
inc
leave
icebp
cmp
insl
das
push
add
fdivr
pushf
pusha
jne
xorl
inc
mov
inc
and
jp
cmpsl
mov
push
insl
push
jno
ret
test
lret
mov
pop
shlb
loope
and
or
or
pop
sbb
cld
mov
jmpw
mov
sbb
por
daa
test
inc
out
push
sub
lea
inc
popf
repz
adc
nop
repz
out
xor
jmp
bound
cltd
xor
repz
mov
mov
mov
cld
mov
nop
mov
pusha
inc
xchg
xchg
mov
dec
arpl
sbb
data16
xchg
sbb
iret
cmp
das
xchg
dec
inc
addb
sub
lods
jl
jle
mov
lods
push
and
lods
cmp
test
test
daa
xor
stc
gs
inc
xor
out
jg
inc
loope
jbe
stos
stos
shlb
loope
inc
repnz
outsl
xchg
out
cmc
dec
dec
or
pop
scas
pop
inc
xchg
mov
call
fndisi(8087
and
xchg
cmc
call
fsts
jge
imul
adc
imul
and
lret
bound
cmc
sub
frstor
les
pop
inc
jle
sub
sub
subb
jmp
inc
popa
cmpl
fidivrs
cmp
mov
je
filds
loope
in
push
inc
xchg
in
std
mov
push
mov
mov
adc
loope
hlt
cmp
sub
mov
inc
push
in
rorl
int3
mov
sbb
mov
and
dec
inc
sub
push
xorl
sub
pushl
add
jae
mov
adc
inc
ret
cltd
jg
xchg
mov
out
jmp
sub
mov
mov
jbe
jmp
imul
push
push
outsl
dec
mov
xor
push
ljmp
xchg
jle
call
divb
out
or
stos
sti
mov
imul
push
in
stos
call
notb
mov
fdivr
jl
and
sbb
movsl
clc
jg
fstpl
cmp
cmpsl
dec
cmp
mov
adc
mov
outsb
movsb
cmp
ret
pop
inc
int
nop
ret
andl
std
gs
pop
adc
std
fisubs
je
dec
add
mov
xlat
cli
dec
pushf
iret
mov
iret
pop
jge
sub
pop
sub
out
daa
xor
and
xchg
outsb
lods
xchg
add
and
leave
sahf
js
pop
push
sub
fwait
out
adc
in
push
out
add
and
lock
sub
cmp
ficoms
loopne
nop
bound
lea
lret
jns
lods
dec
jg
xchg
cltd
add
dec
push
mov
mov
xchg
test
ficomps
pop
fiaddl
inc
sub
cmpb
sbb
into
or
push
inc
dec
push
xchg
int
fbstp
mov
mov
arpl
sti
hlt
data16
or
clc
sbb
push
popa
loope
push
outsl
lea
pop
fsubrs
jae
aas
or
adc
pop
inc
daa
sbb
adc
sub
scas
inc
mov
fstps
xor
push
jg
cmp
lea
and
xor
js
mov
dec
pop
mov
jb
mov
push
bound
jecxz
orl
mov
add
leave
sub
adc
jno
les
decb
or
fldt
push
inc
jbe
ret
repz
dec
loopne
in
inc
and
shl
mov
fwait
aas
and
std
scas
int
pop
mov
jnp
add
fists
shl
mov
stos
loop
cmpsb
push
push
movsl
movsb
pop
clc
dec
andl
xchg
push
insb
add
jmpw
fwait
sbb
aaa
pop
fcmovb
cld
xchg
jns
in
fbstp
sbb
pop
mov
pop
pusha
cmp
pop
decl
mov
push
xchg
pop
lret
xchg
es
lahf
pop
pop
insl
mov
pop
xor
sbb
xlat
out
in
push
dec
dec
orl
fcoml
inc
or
out
pop
inc
add
loopne
ljmp
adc
ret
popf
faddl
call
mov
push
idiv
lods
and
ss
lds
adc
dec
stos
in
test
sti
test
or
into
fisubl
repnz
mov
fnstsw
stc
out
insl
cmp
mov
in
xchg
xor
add
icebp
and
fcoms
xchg
pusha
cmpsb
pmuludq
sub
sbb
push
and
mov
push
pop
cmp
inc
xor
or
jg
loopne
iret
outsb
sar
fnstsw
dec
cmpsl
jge
xchg
mov
test
push
or
mov
repz
std
lods
inc
inc
insl
test
sub
or
rcr
fsubrl
clc
xor
or
jmp
mov
imulb
ljmp
xor
lock
test
pop
mov
pop
inc
mov
add
scas
xchg
int
test
xor
pop
push
jg
mov
mov
xchg
adc
xor
dec
add
lahf
clc
xlat
adc
xor
jle
cmp
icebp
jp
ffreep
out
notb
mov
jbe
cmpsb
lock
data16
pop
pop
ret
rcrb
inc
out
push
nop
add
jo
decl
insl
je
lods
pop
test
xor
je
scas
cmp
pop
mov
lahf
dec
add
and
mov
and
xorl
sub
sub
sub
loopne
mov
test
mov
cmp
xchg
cs
cmp
cmpsb
and
pop
fs
adc
sti
adc
mov
pop
mov
add
aaa
mov
outsl
sub
push
push
inc
mov
push
rcll
push
mov
repnz
push
fwait
xchg
sbb
vorps
outsl
push
add
in
cld
mov
inc
fwait
test
add
add
movsb
sbb
or
cmpsb
loop
pop
jb
jne
cmpsb
xchg
mov
leave
or
push
cmp
pop
pop
ja
subb
pop
idivb
mov
sbb
pusha
jae
cld
mov
call
xor
imulb
cmp
mov
mov
xchg
jbe
insb
add
jne
in
das
jg
xchg
dec
out
stos
dec
pusha
add
mov
and
jmp
xchg
xchg
pop
fadds
jo
pop
add
loop
sub
fadds
mov
xchg
lret
ds
aaa
mov
or
push
addr16
push
jne
insl
ss
mov
mov
push
imul
loop
jbe
shlb
add
inc
push
push
int
addb
push
add
jg
lret
ret
lock
lret
sub
rolb
cmpsb
jge
leave
sbb
in
out
pushf
dec
jno
jnp
add
dec
repz
add
jnp
mov
or
outsl
std
inc
nop
mov
or
sub
inc
and
shll
jmp
ret
fldcw
std
mov
aaa
sbb
bound
std
pop
loope
or
push
addr16
mov
push
test
or
rcr
popl
jg
mov
shl
cmp
adc
push
xadd
fldenv
movsb
pop
insb
push
push
push
adc
std
js
and
sti
das
sti
shll
into
and
ret
ret
xor
pop
loope
cwtl
and
cld
jecxz
cld
mov
cmp
jbe
add
stos
push
bound
mov
mov
xchg
cli
sbbl
mov
xlat
inc
pop
mov
mov
ds
mov
add
into
iret
mov
ja
or
jl
cmp
jl
prefetch
or
lcall
sti
mov
dec
jbe
iret
icebp
inc
jnp
ret
add
loopne
push
lods
hlt
jo
mov
cmpsb
push
pop
cmp
lea
dec
inc
mov
xchg
push
cmp
xchg
clc
fnstcw
jno
jmp
jl
push
mov
lcall
cld
adc
addr16
ret
es
dec
mov
dec
jmp
mov
shlb
push
jecxz
push
loope
loop
mov
jmp
stos
pop
cmpsl
pop
dec
frstor
into
ds
aam
arpl
int
das
insl
pop
cltd
mov
out
hlt
enter
fstl
div
xchg
mov
pop
jno
or
sbb
dec
push
jo
push
pop
sub
jo
jl
pop
insb
mov
mov
sti
int
add
test
in
push
les
pop
leave
out
ror
call
ds
push
mov
push
pusha
mov
jge
cmp
test
lahf
pop
inc
xor
jl
xchg
cmp
push
push
clc
lock
dec
mov
push
jno
out
inc
cli
add
dec
cmp
leave
scas
push
dec
cmp
out
arpl
sub
data16
sub
jge
push
fists
dec
mov
fcompl
and
sahf
out
stos
rcl
pop
sbb
mov
mov
jl
outsb
imul
inc
cmp
push
shll
ja
xor
jno
inc
dec
lcall
cltd
adc
orb
ret
repnz
repnz
push
jno
mov
hlt
cwtl
imul
lcall
and
mov
jne
popl
popa
shll
adc
shr
pop
sbb
jmp
mov
jb
xchg
outsl
cmpsl
sub
mov
xchg
xor
fwait
dec
jecxz
push
mov
and
mov
jl
mov
aas
jl
sub
outsb
clc
out
adc
jae
test
test
lea
jmp
ret
push
xor
cs
jl
add
push
test
push
imul
sbb
ret
pop
addr16
adc
loopne
mov
add
mov
out
cmp
adc
cli
test
sbb
ret
sub
push
mov
mov
std
mov
xchg
insb
and
adc
outsw
pop
adc
push
mov
xor
sub
mov
nop
mov
pushl
jb
mov
aad
cmpsl
lods
pop
int3
dec
sbb
in
lods
jno
sbb
mov
pusha
push
cli
mov
lds
repnz
push
sbb
mov
mov
and
mov
inc
xchg
scas
lock
or
call
adc
pop
outsb
out
mov
mov
xchg
push
mov
stos
adc
jae
aas
gs
jge
fdivs
and
mov
dec
lods
dec
mov
xor
sub
push
lret
xchg
mov
push
stos
loope
shl
xchg
sbb
in
lock
in
pop
sahf
loope
pop
sahf
and
lahf
mov
add
clc
and
pop
inc
insl
and
fdivs
xchg
in
cmp
jnp
adc
adc
fiadds
cmp
hlt
cld
aam
push
pop
aaa
xchg
cmp
jge
add
mov
dec
adc
aad
xor
pushf
jp
jae
lea
lret
cmp
cmp
fstpt
jae
mov
les
sub
pop
int
inc
cmp
rcll
dec
and
or
inc
pop
xlat
je
push
xor
add
imul
fmull
pop
aaa
jp
stc
or
mov
add
adc
xchg
xchg
jg
ss
lods
lea
xchg
std
adcl
lret
sbb
mov
mov
daa
pop
aas
xor
cmc
push
mov
outsb
add
out
int3
outsb
filds
add
pop
mov
push
cld
hlt
push
jno
push
aad
dec
adc
inc
sahf
dec
ljmp
mov
push
ljmp
mov
dec
xchg
test
and
dec
push
orl
and
arpl
jle
clc
push
gs
leave
gs
inc
mov
xchg
cmp
sarl
iret
cmp
movsb
fs
xchg
insb
divl
in
cmp
mov
lret
in
repz
lcall
jo
push
sbb
cld
rorb
jecxz
arpl
fcomp
pop
pop
mov
movsl
fmull
dec
xchg
mov
cmp
mov
push
push
popf
lret
xor
lods
sub
push
xor
mov
repnz
push
popf
rorb
filds
sub
in
pop
inc
sbb
dec
xor
movsl
imul
call
aas
cwtd
cmp
loop
ja
and
adc
filds
mov
hlt
arpl
push
cmp
fwait
mov
mov
aad
daa
nop
or
pop
cmp
fmull
cs
rcll
pop
gs
lods
popa
fldcw
shll
leave
jno
lahf
jg
sahf
cltd
cmp
push
add
jmp
test
sarb
imul
xor
mov
xchg
xor
daa
imul
inc
movsb
stc
in
pop
xchg
or
aaa
mov
cmp
inc
sbb
sub
data16
jmp
aam
sub
rcrb
jns
inc
sbb
pop
cmpsb
pop
pop
pop
add
subl
fstl
gs
push
lret
mov
jnp,pt
in
xor
dec
cs
mov
imul
iret
adc
mov
jo
fsts
arpl
xor
add
inc
pop
popf
enter
imul
push
adc
dec
xor
shl
roll
jmp
cltd
ss
xor
aad
imul
jns
cmp
mov
fwait
cs
fstps
cs
into
out
fsubrl
mov
mov
mov
scas
not
pusha
pushf
in
sub
nop
bnd
xor
ss
xchg
push
pop
cltd
jle
xchg
fistps
mov
test
sti
jno
or
xor
mov
mov
dec
sbb
jecxz
push
xchg
jnp
xchg
popf
bound
rolb
xchg
mov
xchg
sbb
mov
xor
inc
xchg
stos
icebp
cmp
out
pushf
mov
mov
js
mov
rorl
scas
ds
mov
test
hlt
js
mov
mov
repz
mov
cmp
insb
dec
gs
sbb
mov
dec
sub
fstpl
in
test
cmc
hlt
pushf
push
pop
or
notl
fwait
into
lret
and
shr
addr16
scas
shrb
push
jmp
jno
xor
nop
pop
movsb
test
push
sub
or
xchg
and
jg
xor
xor
outsb
adc
cs
push
inc
pop
insb
cmpsb
sahf
mov
aas
and
cwtl
jmp
leave
sbb
xchg
ficoms
dec
xor
mov
mov
mov
add
jnp
fs
push
mov
stos
icebp
jge
mov
mov
push
fwait
hlt
nop
cmpsb
or
outsl
inc
or
mov
out
icebp
stos
repz
mov
and
pop
sub
movups
xor
or
xor
mov
lds
inc
jno
sbb
in
movsl
in
sahf
pop
mov
pop
xchg
mov
sub
hlt
jmp
imul
out
xchg
mov
mov
cltd
ljmp
rolb
pop
pushf
sbb
push
jbe
jl
aad
not
and
mov
fwait
cmp
cmp
jne
and
scas
inc
inc
addr16
inc
in
or
in
push
aaa
roll
ds
int
adc
mov
mov
lds
mov
nop
inc
outsb
stc
dec
cmp
lcall
mov
popf
ljmp
fwait
std
scas
out
orl
iret
push
pop
arpl
mov
sahf
je
mov
jmp
mov
in
fsubl
inc
inc
lcall
xor
fnstcw
sub
dec
outsl
push
ljmp
clc
adc
mov
shlb
mov
mov
add
hlt
push
lahf
mov
xchg
test
mov
mov
fwait
into
sub
push
loope
cltd
ja
fldt
jg
cld
sub
pusha
fidivrs
sub
fmul
in
push
add
fmuls
xchg
or
iret
cmp
stos
jnp
stos
out
cs
xlat
add
test
mov
cmp
pop
jae
xor
clc
mov
lret
out
jbe
ja
pop
lock
xor
fucomip
mov
cltd
mov
out
pop
in
mov
mov
xlat
cmp
mov
jne
cmp
xchg
or
cmp
scas
adc
sub
mov
fldt
adc
ret
pop
jns
sarl
out
fstpl
jbe
and
mov
hlt
mov
das
daa
aam
mov
add
movsl
popa
cmpl
leave
xor
loope
mov
xchg
repnz
icebp
test
mov
xchg
fisubrs
js
ss
aad
js
push
pop
dec
stc
xor
add
cmpsb
ljmp
dec
lock
movsl
jb
es
out
or
andb
push
rorl
xlat
loop
int
sahf
hlt
pop
rcrl
jp
and
push
sub
inc
sub
in
xchg
or
cmp
mov
aam
aad
test
mov
mov
fidivrl
xor
into
mov
jp
mov
push
pushf
jp
lods
pop
pop
jbe
sbb
dec
mov
cmp
jmp
lret
sbb
mov
rorb
lret
iret
leave
xor
pop
mov
into
inc
cs
nop
push
and
cmc
das
out
loop
push
shrl
inc
leave
or
pusha
mov
pop
fbld
inc
adc
repnz
mov
scas
test
dec
xchg
ss
pop
jb
rclb
push
enter
arpl
dec
in
dec
stos
imul
lret
add
jg
sub
pop
dec
adc
adc
mov
imul
adc
lea
in
test
xchg
pop
loop
dec
inc
sub
shll
cmp
or
in
fdivs
sbb
aad
pop
iret
cmp
adc
sbb
mov
or
in
or
jbe
push
arpl
xchg
idiv
jbe
movsb
and
lret
out
rolb
mov
mov
sub
xor
mov
inc
push
outsl
and
xchg
lds
pushf
xlat
leave
out
pop
jae
cld
jae
cmovnp
cmp
xchg
xchg
es
mov
xchg
je
pop
cmp
gs
or
sarb
aas
dec
adc
pop
and
imul
cwtl
movsl
jnp
cld
sbb
pop
in
mov
push
int3
or
pushf
mov
lods
push
lods
in
cli
jnp
stc
sbb
mov
jae
in
pop
jae
ljmp
dec
sub
xchg
push
pop
js
sbb
loope
repz
aad
aad
arpl
test
aad
push
jl
and
xorb
and
push
jge
lods
lods
add
inc
mov
popa
cmp
je
adc
and
push
popf
loopne
add
xor
cmpsb
mov
jns
daa
ret
inc
rcrl
sbb
lock
je
rcll
mov
cmpsb
fnstcw
pop
pop
out
dec
bound
sti
aam
mov
or
lcall
addr16
imul
stc
out
movsl
clc
cmp
orl
xchg
fistl
xchg
sbb
fs
ja
fidivl
mov
arpl
pusha
xlat
sub
scas
add
aam
pop
xor
lret
cwtl
xchg
dec
xor
imul
push
mov
int3
hlt
jmp
cs
pop
push
adc
std
out
push
push
cmp
nop
push
rol
repnz
test
scas
dec
xchg
leave
mov
adc
dec
js
aad
xor
mov
repz
jp
sub
xchg
nop
inc
xor
repz
pop
les
pop
sub
cmpsl
cmp
mov
les
xor
mov
test
push
scas
dec
shrb
xchg
cmpsl
stos
shl
dec
pop
jecxz
cmp
adc
jp
mov
aam
jno
cmpsl
jo
ret
and
adc
and
mov
arpl
in
push
cmpsb
loopne
lret
add
sbb
xor
test
pop
aam
je
les
in
mov
repnz
sbb
xlat
insl
int
mov
sahf
xchg
pop
jecxz
jg
mov
sbb
jns
je
mov
bts
mov
les
sbb
test
sub
adc
dec
aas
jnp
enter
adc
sub
enter
sub
xchg
mov
xchg
repz
cltd
mov
and
mov
pushf
ja
ss
cltd
fwait
add
popa
mov
andb
adc
shrl
inc
movl
dec
fildl
mov
jo
adc
push
jl
jo
pop
mov
jge
pop
xor
stos
gs
lods
out
in
popa
mov
add
pop
inc
jae
push
or
inc
das
orl
pop
les
jg
cltd
dec
sbb
out
sahf
adc
loop
outsl
les
dec
aaa
dec
es
push
sub
leave
inc
sbb
or
pop
xchg
adc
mov
fwait
test
mov
arpl
in
fsubl
add
sbb
ja
testb
mov
dec
icebp
repz
push
lahf
lods
imul
cmpsb
fbld
ss
cmc
insb
jb
mov
mov
jmp
mov
jp
pop
ror
cwtl
and
mov
mov
add
shll
mov
dec
mov
pop
cmp
cmpb
test
adc
mov
dec
or
and
and
sti
int3
xchg
movsl
mov
icebp
mov
cwtl
fildl
mov
jae
inc
dec
add
in
xor
xchg
and
pop
xorps
loop
push
mov
sub
mov
push
test
dec
dec
pushf
daa
mov
push
adcb
les
lret
popf
xlat
mov
cs
roll
sub
sbb
xchg
adcl
adc
addr16
mov
cmp
pop
in
lds
xlat
in
push
adc
or
daa
mov
mov
cmp
insb
add
mov
lods
es
xor
mov
pop
pop
out
xchg
add
push
fimull
xchg
popf
pop
mov
cld
adc
and
sahf
and
adc
sub
cmp
test
shl
std
adc
and
cmp
call
pusha
inc
test
mov
pause
shl
mov
cmp
sub
cwtl
and
scas
out
stc
leave
mov
sub
mull
out
call
or
add
sub
loopne
stc
cld
mov
xchg
leave
adc
xor
or
jl
loope
push
jnp
ficomps
mov
icebp
jbe
stc
cmp
push
fadd
jns
xchg
push
mov
stc
mov
or
or
or
push
sahf
xchg
negl
adc
fidivrl
and
sub
bound
xor
push
ja
in
mov
lret
aad
inc
inc
push
push
lcall
inc
in
jl
aaa
in
and
mov
mov
loope
jmp
sub
dec
les
xchg
aaa
mov
cmp
rorl
mov
out
fmuls
dec
scas
das
jmp
push
add
mov
icebp
jnp
shrb
enter
mov
test
imul
stc
mov
ret
push
sub
xchg
add
nop
push
or
jecxz
cmp
mov
divb
xor
add
dec
insb
jecxz
ljmp
dec
cmpsb
xchg
add
in
rcll
pop
push
cli
pop
popa
subb
mov
fisttpl
jecxz
loopne
js
mov
dec
enter
sub
arpl
xlat
jp
daa
add
and
cmp
mov
outsl
test
addl
stos
test
or
pop
fidivl
xchg
sub
sbb
jnp
xchg
push
cmc
adc
inc
decb
insb
cmpsb
test
cmpl
push
aas
cli
pop
mov
loopne
rolb
cli
test
xor
pop
jg
xchg
icebp
pop
out
xor
out
mov
xchg
loopne
in
fbstp
dec
mov
add
mov
pop
js
arpl
xchg
divl
adcl
cs
dec
xor
lock
and
mov
popf
sub
jl
test
pop
in
mov
xchg
dec
int3
add
xchg
aaa
jle
push
adc
pusha
aad
jmp
shlb
in
and
daa
gs
push
addb
cmpsl
mov
iret
scas
aaa
cmp
fisubrs
stos
cmp
jnp
js
jbe
inc
add
lret
outsb
push
hlt
push
movsb
icebp
mov
xchg
adc
mov
add
add
sarb
cmp
jge
adc
jmp
dec
mov
and
adc
jle
dec
or
stos
xor
cmpsb
jl
pop
out
xor
pop
xor
mov
bound
daa
popa
mov
stc
sub
adc
jle
lahf
cmp
pop
sub
jle
push
jge
or
dec
add
pop
mov
add
jp
repnz
mov
ficomps
push
outsl
or
cld
sub
out
das
mov
aas
imul
xlat
mov
inc
sbb
ds
xchg
cmpsl
fs
jg
jl
inc
lods
fiadds
and
push
mov
dec
mov
je
and
and
movl
pop
sub
xor
adc
iret
std
jg
sbb
popa
shll
rorb
bound
or
jg
lret
xchg
dec
mov
jl
inc
mov
or
mov
cmp
shlb
adc
xchg
jnp
sub
xor
aas
int3
and
fstpt
mov
or
and
addl
sahf
xlat
push
das
pop
pop
test
add
sbb
xchg
jb
inc
mov
xchg
cli
leave
jns
add
jge
test
out
sbb
inc
daa
pop
inc
mov
lahf
data16
mov
mov
sub
mov
sbbl
testb
movd
push
pop
cmpsl
jge
test
outsl
into
out
pop
movl
jb
adc
pop
iret
repnz
bnd
aaa
sbb
pop
imul
jae
xchg
pusha
ficompl
push
mov
jg
mov
roll
xchg
xchg
neg
mov
add
xchg
sti
cs
decb
es
in
shll
aad
push
jo
leave
inc
bound
dec
mov
pop
mov
cmp
clc
mov
jb
fsubrs
add
lahf
xlat
and
sbbl
lcall
jb
xlat
add
fistpl
jle
andb
add
stc
test
and
mov
orl
mov
lds
jmp
hlt
insl
cli
mov
shl
out
fdivp
test
xor
lahf
outsl
push
xor
add
sub
mov
dec
add
clc
imul
inc
mov
rcl
push
ret
mov
cmp
or
fnstcw
imul
push
ret
lods
lret
loopne
stc
push
scas
or
cli
push
vmovsldup
shll
pop
imul
sub
mov
jo
pushf
ret
scas
popa
repnz
mov
js
test
filds
pusha
shll
insb
adc
in
xchg
sahf
nop
aaa
in
jp
xchg
scas
add
imulb
adc
stos
enter
jle
inc
dec
outsl
lret
inc
test
cwtl
mov
or
enter
lods
jp
sbb
in
add
sub
cmp
fstpl
cmp
jne
xor
repz
jl
dec
insl
mov
jbe
arpl
jle
outsl
adc
out
out
add
xor
pop
xchg
push
push
pop
movb
imul
and
xchg
xor
shrb
xchg
add
mov
cli
pop
cwtd
jl
std
sarb
adc
cld
dec
pushf
jle
test
outsb
inc
mov
lahf
cld
repz
or
or
insl
dec
fsubrs
sarb
out
popl
mov
cmp
leave
int
xchg
mov
jmp
mov
imul
mov
loope
mov
jo
repz
xchg
jae
in
sti
repz
jne
fscale
mov
ljmp
lret
aaa
sub
call
les
sbbl
out
mov
sub
xlat
inc
xor
add
movsl
inc
hlt
gs
lret
add
loopne
adc
sub
mov
sti
in
pushf
cmp
and
mov
jge
mov
xor
lahf
or
repnz
xchg
jecxz
push
out
ss
push
addr16
in
pop
jecxz
xchg
push
push
or
jns
aad
push
sti
insb
ja
jecxz
test
nop
xchg
aad
jge
lds
sahf
xchg
and
out
cmpsl
adc
nop
xor
and
xor
and
or
sbb
mov
sbb
jnp
inc
xor
mov
pop
lcall
mov
add
nop
inc
xor
sub
ret
lods
cli
mov
scas
ficomps
and
pop
aas
xor
sub
shlb
negl
and
inc
add
mov
jge
sub
imul
mov
push
arpl
repnz
pop
mov
stc
fnstenv
pusha
addps
dec
fistpll
pop
jno
test
pop
aas
ljmp
lods
cmp
mov
push
jecxz
inc
jl
lret
test
xor
xchg
jb
dec
cmc
repz
frstor
lods
and
arpl
jmp
push
jns
inc
sti
cld
aad
int3
lahf
push
fadds
loope
cmp
lret
sbb
mov
data16
pop
pushf
push
adc
js
mov
sbb
call
lret
cmp
push
and
push
mov
and
rcr
cltd
lods
mov
cmc
test
lret
cltd
mov
stos
outsl
ret
and
xor
xlat
xor
rorb
lret
es
push
jo
scas
in
jmp
pop
sub
inc
mov
ret
out
inc
adc
sar
push
mov
popa
mov
cmp
ja
push
and
sbb
cmc
testl
pop
jp
aaa
push
mov
inc
mov
add
mul
arpl
dec
pop
lods
dec
cmp
xchg
or
ret
pop
mov
repnz
ss
push
push
movsb
xor
xchg
dec
mov
dec
repz
xchg
int3
pushf
jnp
pop
test
ret
inc
dec
xor
mov
mov
adc
out
jle
ja
hlt
dec
xchg
jne
xchg
pusha
insl
inc
bound
sub
test
int
add
rorl
repz
aam
or
loop
loope
xor
scas
xchg
push
push
or
jno
mov
divb
sarl
sbb
enter
out
ds
or
aad
push
outsb
or
pop
or
sub
aam
fdivs
sti
jle
inc
fcomps
js
movsl
push
xchg
scas
adc
push
or
aas
mov
neg
and
adc
popa
sahf
notl
mov
fildl
gs
pop
inc
cmp
test
adc
pusha
or
test
pop
xchg
test
adc
ja
in
jge
mov
data16
xor
mov
push
ss
mov
sub
add
idiv
loopne
mov
sbb
mov
push
xchg
test
std
pusha
test
repnz
fsts
xchg
cmp
mov
fsub
mov
pop
jne
push
mov
xlat
fmull
fidivl
enter
xchg
push
cmc
dec
sub
movsl
int
jo
cmpsl
jae
cmp
outsl
cmp
dec
push
pusha
jno
sbb
addr16
sti
imul
pop
cltd
sub
or
xor
adc
jl
lods
mov
int
pusha
ds
xchg
mov
icebp
mov
leave
xor
push
daa
insl
jle
outsb
jb
mov
outsl
adc
jae
lea
arpl
mov
popf
jg
inc
push
insb
push
fwait
std
or
jb
lcall
cmp
jle
xrelease
inc
call
pushf
lods
ja
xchg
xor
fiaddl
mov
or
sub
into
lret
hlt
cli
dec
mov
cld
sub
bnd
jne
test
stc
lcall
fwait
ljmp
unpcklps
jne
gs
cmp
mov
aam
jge
lods
leave
push
daa
pusha
jo
in
xchg
mov
dec
xor
in
pusha
dec
imul
pop
xor
inc
pop
mov
and
add
pop
sbb
lea
testb
or
insb
and
push
jp
jne
test
fcos
sub
ror
in
addr16
ds
and
pop
push
mov
inc
aaa
loope
fs
in
dec
loop
add
pop
add
adc
ds
push
adc
or
xchg
xlat
xlat
dec
push
jmp
iret
test
cld
std
lock
mov
test
xchg
inc
aad
call
pop
es
jne
or
push
jne
sbb
jno
aaa
das
mov
adc
popf
push
fwait
loope
rol
das
adc
adc
test
lcall
xlat
lods
inc
test
or
jl
mov
lret
cmp
or
or
sbb
scas
cmp
push
insb
lret
xlat
repnz
icebp
out
sbb
daa
xor
int
dec
dec
or
and
out
js
jle
or
loop
in
nop
inc
sbb
jnp
mov
clc
and
add
and
adc
xchg
xor
cmp
or
inc
lea
shlb
repnz
stos
jae
mov
mov
dec
add
jnp
sub
enter
out
fcmovne
jecxz
je
ds
dec
sbb
push
bound
add
mov
jl
cld
lret
mov
pop
cmp
int3
into
out
mov
jle
lea
btcl
push
movsb
adc
and
and
or
cltd
jne
out
pop
movsb
sub
enter
push
aaa
push
pop
add
fs
dec
in
jp
or
xchg
ss
cmp
mov
xlat
in
mov
add
mov
repnz
push
adc
shll
pop
fidivl
rcll
hlt
pop
push
sbb
xchg
sti
or
add
add
adc
subb
sbb
scas
or
cmc
jecxz
out
call
bound
subl
ds
test
dec
out
dec
mov
je
inc
mov
out
stos
mov
outsb
out
dec
jecxz
jmp
xorl
ljmp
pop
xchg
mov
imul
hlt
aam
in
imul
sub
dec
outsb
lds
jg
mov
out
data16
insb
cwtl
ss
push
dec
and
xor
jg
sub
insb
mov
and
mov
repnz
dec
repnz
push
idivl
fsubrl
xchg
mov
inc
fmul
hlt
scas
cmp
mov
cmpsl
xchg
lods
and
jno
cwtl
adc
mov
jbe
or
push
mov
adc
mov
sbb
lds
add
push
imul
add
mov
add
into
pop
sub
mov
mov
imull
movsb
and
lret
jns
mov
ror
cltd
loop
push
mov
adc
movsb
push
jns
cmp
jl
xor
cmc
pop
ror
scas
jp
out
xor
mov
out
dec
out
mov
clc
frstor
jle
lds
inc
sub
inc
aas
scas
fldt
mov
and
push
dec
loop
push
pop
loope
sbb
mov
pusha
mov
xchg
or
mov
scas
out
adc
or
xor
pop
mov
mov
xchg
daa
iret
das
bnd
sbb
outsl
lods
jge
test
cs
popa
stos
aad
xchg
pop
mov
mov
fmul
icebp
addr16
jbe
les
ja
cmp
insb
jge
imul
insb
xchg
xor
xchg
out
test
imul
lock
push
xor
jne
cmc
aam
test
lahf
and
xor
xchg
cmc
jo
mov
repz
sbb
sbb
gs
add
ret
aas
sub
xchg
stc
inc
pop
imul
xor
mov
aad
rol
sbb
movsb
lds
xchg
pop
jmp
js
hlt
pop
mov
paddd
outsl
ret
je
push
sub
adc
je
das
fidivs
xor
xor
iret
fdivrs
sti
dec
sub
hlt
lock
negb
aaa
jo
mov
popf
sub
xor
fimuls
mov
enter
mov
add
mov
add
ja
cld
sbb
rcrb
dec
incb
cmp
mov
push
movsl
into
int
xchg
test
add
sbb
sarl
fwait
xchg
sub
inc
push
jne
dec
inc
shl
xor
sub
xor
mov
loope
sarl
andl
loopne
stc
jmp
ret
xchg
inc
movsl
xchg
es
addb
xorb
rcr
mov
lea
pop
lds
mov
jo
stc
lcall
mov
mov
jmp
out
test
mov
outsb
loop
sub
jle
mov
or
iret
stc
jmp
rorb
stc
adc
jbe
jae
imul
adc
mov
gs
mov
push
leave
sbb
andb
xchg
or
je
mov
push
outsl
test
rorl
cmp
jnp
popa
push
cmpsl
or
mov
sbb
int
mov
lock
mov
jnp
push
insl
rcll
add
je
shl
cmp
pop
jmp
jg
xor
push
lock
sub
cmpl
fnstsw
push
or
aam
xchg
inc
outsl
push
push
pop
push
out
mov
scas
pop
dec
lahf
sub
in
push
andl
mov
lds
cmp
pop
dec
mov
push
dec
mov
mov
out
je
sarb
rolb
and
outsl
scas
dec
repz
addr16
ret
fdivl
ljmp
xchg
lret
fs
rcr
ror
jo
jbe
enter
leave
sub
cmp
jmp
lods
xor
add
inc
jnp
push
xchg
dec
dec
and
int3
aas
xchg
ret
outsb
xchg
outsl
jecxz
repz
in
lea
mov
sbb
dec
pusha
xlat
cmp
xchg
cltd
jg
mov
xchg
add
add
enter
loopne
pushf
and
jle
sub
cwtl
cld
mov
sahf
add
sbb
lods
in
loope
adc
mov
sub
adc
xchg
add
mov
pop
ja
insl
outsl
sub
jo
into
sbb
ja
outsb
cmp
int3
xchg
push
stos
js
jbe
mov
incl
bound
icebp
xor
cmpsb
mov
xchg
jbe
test
push
pop
push
inc
insl
xchg
stos
push
jle
je
mov
adc
leave
inc
push
pop
inc
mov
jl
or
jae
pop
dec
dec
push
xchg
mull
xchg
jge
sbb
lds
inc
pop
push
mov
hlt
sub
ljmp
pop
and
notl
jnp
movsb
inc
inc
mov
cmp
push
mov
mov
ds
xor
lahf
push
pop
rcrl
and
push
popfw
jae
xor
je
test
and
mov
inc
mov
push
ja
and
loope
aam
push
rclb
fldl
or
fdivl
sub
in
sub
push
sar
lret
adc
xchg
adc
and
mov
fisubrl
xchg
dec
mov
sbb
mov
daa
dec
mov
out
xchg
cmpsb
mov
bound
and
xor
movsb
or
jle
xlat
sub
jo
sbb
mov
mov
aas
jle
mov
test
lahf
mov
mov
fucomip
loopne
or
out
inc
inc
pop
decl
push
inc
and
jb
or
addr16
cld
shrb
mov
and
outsb
add
popa
mov
cmp
pop
jne
outsl
cmp
pop
cmpsb
mov
xchg
ret
addl
adc
dec
sbb
push
iret
test
push
in
xor
lret
subl
mov
mov
bound
pop
fdiv
sbb
ljmp
push
mov
imul
and
jbe
imul
jns
movsb
dec
push
inc
mov
daa
adc
div
ficoms
cmc
repz
out
mov
stc
cs
push
cwtl
mov
out
iret
push
xor
adc
cmp
imul
cmp
xchg
arpl
clc
imul
pop
ss
adc
pushf
insb
xor
mov
out
pusha
jo
sub
and
sbb
sbb
dec
and
sbb
jg
sahf
jnp
add
xchg
mov
dec
pop
push
loopne
dec
stos
sahf
loope
jno
loop
pop
push
add
fucomip
into
sbb
xor
push
lock
cs
clc
jp
lahf
cmp
pop
mov
jbe
pop
jno
cs
jp
fstpl
pop
imul
jmp
iret
or
or
imul
sbb
out
jmp
les
bound
cmp
or
xor
cltd
pop
daa
dec
push
insl
mov
lret
leave
rcrb
push
fcmovb
inc
cmp
jbe
push
pushl
popa
mov
mov
fmuls
xor
pop
and
inc
inc
in
test
mov
push
repz
divl
ret
pop
jnp
mov
add
test
add
mov
mov
adcb
testb
psubsw
es
les
lcall
jp
cmc
mov
iret
test
xchg
loop
ja
lods
mov
xchg
mov
in
xlat
jle
sub
xchg
sahf
in
xor
mov
add
jle
cmp
xor
je
in
pop
loope
and
xchg
sbb
andl
dec
add
cmp
sbb
in
shrl
clc
mov
cmp
std
int3
sub
bound
mov
loope
js
das
sarl
jne
xchg
xchg
and
cli
dec
push
push
dec
lds
daa
rcrb
repnz
cltd
cmp
fwait
adc
mov
inc
jecxz
aam
dec
jo
int
cmp
rcrl
sti
sbb
fildll
out
and
ret
or
mov
pop
cmp
rcr
outsb
insb
add
inc
and
sahf
push
add
or
cmpsl
xchg
jl
fprem
jle
xor
ds
inc
mov
loop
mov
inc
jb
jle
fstl
or
lods
cwtl
test
icebp
mov
test
and
addr16
jl
outsb
sarb
ret
push
sub
and
nop
aaa
push
mov
jb
fcmovb
jns
pop
sbb
mov
ss
hlt
cmpl
lcall
bound
mov
sarl
or
dec
push
fdiv
xchg
data16
stos
aaa
push
leave
stos
shr
testl
push
sub
cltd
xor
xor
lret
loop
test
andl
sub
mov
sub
out
jg
or
dec
pop
and
sahf
add
xchg
sub
adc
test
push
dec
in
push
push
pop
popa
cmpl
mov
je
dec
pop
aas
incl
ficomps
adcb
call
dec
lahf
sub
sbb
daa
and
cmc
iret
aaa
daa
mov
mov
bound
or
add
add
orl
add
push
jns
xor
add
cmp
xchg
xor
sbb
jnp
push
imul
mov
je
mov
test
sar
jnp
sbb
adc
xchg
sbb
aad
inc
xchg
xor
sub
adc
iret
cmc
cld
aad
and
or
mov
divb
pusha
stos
ss
out
xor
or
or
pop
and
pop
daa
jbe
sub
jecxz
push
movsl
addl
pushf
jno
jae
add
sbb
jge
sub
inc
nop
lock
nop
inc
fdivrs
mov
or
scas
inc
popa
and
js
cmp
in
negl
outsb
mov
dec
adc
lret
xchg
iret
mov
sbb
in
mov
xor
aas
repz
repz
js
add
insl
xor
out
jl
adc
adc
sar
dec
sub
xor
jecxz,pn
test
popf
jnp
icebp
dec
mov
xchg
in
dec
mov
push
or
and
mov
fs
or
gs
repnz
ficoms
mov
and
fisubs
pop
mov
mov
mov
repz
xor
jo
adc
sti
jmp
cwtl
hlt
pop
fs
aaa
ret
add
out
fs
or
outsb
rolb
hlt
and
cmpsb
mov
xor
xchg
dec
push
adc
outsb
mov
out
pusha
out
mov
jbe
dec
cmc
repz
sti
cmp
pop
cltd
cld
cmp
cmp
rorb
pop
dec
cmp
sub
ret
jge
sbb
jns
mov
rcrl
jecxz
add
scas
add
repz
adc
je
outsb
lcall
or
inc
push
adc
test
cmpsl
lea
xchg
int3
loopne
loope
xchg
sbbl
mov
ret
addr16
lcall
and
lock
fldcw
stos
shll
shlb
out
loopne
cmp
inc
sub
fwait
sbb
fisttpl
movsl
xlat
or
mov
int3
fcomps
in
je
je
cld
adc
das
xor
loope
jbe
mov
xchg
push
je
jl
push
data16
and
adc
jge
rorl
push
add
stc
mov
lock
inc
bound
js
dec
or
ret
enter
mov
xor
jae
mov
mov
shrd
push
scas
cmp
inc
imul
sub
mov
cmp
sti
push
js
icebp
lods
jecxz
mov
cmp
or
push
loopne
es
fdiv
push
lret
pushf
imull
mov
dec
jl
fdivrs
pop
xor
xor
or
sbb
pusha
pop
xor
mov
sbb
adc
xchg
and
aam
mov
in
jecxz
xor
mov
call
ja
xchg
cmp
sub
cs
cmc
scas
pop
jle
pop
jb
or
subb
mov
sbb
rcl
stos
rorb
in
sbb
mov
sub
add
icebp
insl
out
push
jno
jns
aaa
lcall
or
pop
lods
sbb
ret
std
push
popf
xchg
sbb
jmp
xor
mov
sbb
jns
cld
xchg
mov
rorb
dec
or
movsb
enter
sub
dec
out
inc
stc
mull
adc
jne
inc
in
mov
movb
arpl
jmp
popl
icebp
sbb
sti
mov
sbb
ljmp
jae
addb
xor
jp
jo
in
and
or
push
adc
cli
loopne
pusha
or
and
mov
andl
push
cs
mov
sarl
xchg
lret
aam
aam
add
and
outsb
cmpsb
inc
push
dec
adc
enter
pop
mov
xchg
dec
xor
pop
mov
adc
icebp
xchg
jnp
dec
into
adc
lds
or
arpl
adc
or
and
neg
aam
jp
rcrb
and
imul
mov
xor
push
adc
hlt
jns
daa
pop
xorl
push
push
in
cmpsb
or
addr16
sub
xchg
jmp
cmpsb
mov
test
in
mov
mov
xchg
cmpsb
dec
mov
xchg
xlat
icebp
add
addr16
pop
nop
fidivs
cs
repz
push
stos
dec
pop
sbb
test
push
adc
pushf
iret
shrl
mov
jnp,pt
cmpsb
or
aaa
pop
cmp
xchg
inc
inc
jl
jg
mov
mov
push
idivl
rorl
rcrb
sbb
in
sbb
clc
movsb
rcrl
cmp
data16
xchg
xor
xchg
mov
jp
xchg
iret
jmp
into
out
sbb
imul
jg
call
scas
fdivl
lods
stc
jl
mov
pop
xchg
mov
pop
aam
jne
aaa
pop
dec
scas
mov
jb
push
dec
inc
mov
sub
orb
add
aad
jo
notb
push
jmp
xor
mov
push
xlat
pop
xchg
movsl
movsl
adcl
adc
add
push
jne
cmp
xchg
ret
cmp
jo
test
jmp
and
mov
push
test
sub
xchg
mulb
fdecstp
notl
jbe
jne
and
inc
cli
shrb
test
cltd
add
pop
fbld
mov
sbb
jecxz
mov
jbe
fs
icebp
shr
jg
add
mov
fwait
xor
xor
or
and
imul
mov
jo
clc
push
push
mov
arpl
or
push
mov
push
jmp
sub
mov
jle
sub
insb
inc
mov
sub
outsb
and
lret
lods
add
dec
push
xchg
fisubrs
rorl
data16
or
into
and
lahf
pop
popa
dec
fidivrl
int
shr
test
sbb
int3
jmp
mov
shrd
sbb
loopne
jno
xor
xor
xchg
adc
lds
mov
ljmp
mov
adc
out
movsb
test
cld
and
js
jbe
mov
mov
imul
ds
pop
pop
sub
adc
sbb
ret
shrb
or
fldl
mov
jns
and
in
sbb
int3
ret
fldcw
jl
xchg
push
pop
das
addb
scas
xor
aad
cld
aam
mov
int3
aam
int
jmp
jp
xchg
or
and
sbb
xor
jbe
jae
mov
in
ss
mov
inc
pop
or
movsl
sahf
aam
mov
loopne
or
and
and
in
sbb
xor
cmp
xchg
popf
cmp
fiadds
cmp
xchg
xchg
lret
mov
aaa
testb
cmp
pop
loope
jae
addb
jge
in
xchg
hlt
ret
cld
lahf
mov
fldenv
adc
dec
das
adc
lods
mov
out
push
std
lcall
add
lcall
das
sub
mov
jg
stc
mov
lods
ljmp
mov
mov
outsl
imul
sub
mov
roll
pushl
insl
ljmp
pop
sbb
mov
jne
in
sub
fildl
mov
pop
jae
jmp
pop
ljmp
cld
mov
inc
mov
div
enter
push
mov
cmp
lahf
push
or
in
in
out
push
dec
add
fidivrs
or
inc
mov
lock
pop
aam
mov
gs
add
daa
sub
xchg
lea
pop
sbb
fisttpl
jae
xlat
repnz
sbb
pusha
dec
mov
cmp
lea
cmp
pop
mov
jmp
jbe
enter
xor
inc
gs
movsb
filds
imul
mov
mov
nop
das
cs
pop
mov
cld
jo
pop
and
fs
mov
notl
arpl
cmpsl
int
push
jp
jp
mov
mov
out
rolb
fdivrs
xor
loope
sub
inc
mov
outsb
mov
mov
fwait
stos
adc
sti
or
and
add
repnz
xchg
out
out
push
xor
nop
psllq
imul
fmul
jo
sub
inc
pop
jl
scas
stc
pop
dec
mov
xor
loopne
ss
cmp
shll
rol
push
in
xor
lret
lret
add
lahf
das
cld
iret
mov
pusha
in
aaa
pop
mov
inc
stos
repnz
into
shll
pop
ret
mov
or
jp
mov
enter
pop
sub
cwtl
shll
push
mov
xchg
mov
push
lret
loopne
imul
icebp
lods
push
in
loop
inc
scas
cmp
adc
cld
adc
xor
notb
mov
shll
sub
pop
loope
xchg
sbb
cmc
sbb
push
out
inc
push
popf
insb
cs
dec
mov
clc
dec
pop
xchg
dec
push
lahf
sbb
push
mov
out
mov
xor
adc
div
push
rcl
test
sarl
xor
push
outsb
jo
pop
mov
xchg
pop
cmp
pusha
clc
mov
js
mov
test
sbb
pusha
xorl
cwtl
mov
into
inc
insl
fiadds
push
test
xchg
aam
mov
and
mov
jnp
sub
inc
bound
nop
cwtl
jo
pop
xlat
test
xchg
push
cmp
sub
in
out
jg
sub
mov
mov
jbe
in
fucomi
loopne
mov
lea
or
inc
js
inc
cmp
in
adc
adc
push
xchg
push
inc
sbb
je
ror
shrl
popf
in
dec
icebp
pop
inc
mov
fadd
push
xchg
test
cmpsl
jno
dec
insb
fcompl
push
leave
cmpsl
es
addb
stos
jno
mov
add
mov
cmp
sbb
pop
push
cld
xchg
imul
sub
sbb
dec
jp
in
hlt
or
dec
in
addl
aaa
mov
push
mov
rorl
xor
out
mov
scas
aas
ret
cmp
hlt
sub
sti
push
icebp
xlat
mov
xchg
repz
and
dec
cld
pop
and
cmp
xor
xchg
lods
push
iret
jmp
or
addr16
aaa
rclb
inc
das
mov
push
stos
cmovp
in
gs
lods
test
test
fdivrs
pop
mov
ljmp
ficomps
jb
pop
inc
movb
mov
arpl
ljmp
mov
lret
sbb
add
jl,pt
pop
mov
jns
dec
cmp
mov
addr16
push
test
or
add
mov
push
popl
aaa
jge
pop
inc
push
dec
dec
inc
push
mov
pop
aam
jnp
adc
and
out
dec
jb
push
push
popf
loopne
std
dec
lahf
andl
mov
inc
clc
lcall
ds
insb
pop
fnstsw
sahf
repz
cli
mov
pop
loopne
cmc
in
aam
loop
push
jle
out
enter
jnp
leave
add
stos
rcr
xor
outsb
jno
xchg
mov
cs
add
ret
rol
jae
addr16
push
sbb
mov
lahf
and
xchg
adc
insl
fisttpll
push
btrl
scas
ret
sahf
or
outsb
test
pop
loop
sbbb
fsubl
repnz
xor
enter
ja
out
mov
repnz
sbb
xchg
xor
cld
adc
fldcw
pop
pop
jbe
lret
dec
xor
xchg
pop
repnz
clc
dec
pop
aaa
test
cmc
pusha
dec
adc
pop
orb
xchg
pop
sti
push
push
stos
rorl
inc
aad
and
mov
ljmp
adc
negb
add
ss
push
jecxz
int3
jbe
push
or
sbb
mov
dec
or
out
and
mov
add
xor
lds
mov
mov
xchg
sbb
ds
cmpl
mov
adc
inc
loop
xlat
cmp
add
fsts
push
sub
aaa
dec
lahf
shrl
movsl
fiadds
jbe
orb
pop
aaa
aas
cmp
xchg
jmp
mov
xor
jnp
stos
inc
xor
enter
mov
xlat
aad
jg
out
lcall
nop
inc
mov
xchg
imul
pop
cmpb
pushf
jle
mov
fbstp
jne
repz
pop
add
insl
out
int3
stos
adc
lea
xlat
mov
fiaddl
mov
sbb
pop
pusha
in
pop
pusha
pop
add
mov
adc
std
adc
xor
test
lods
mov
es
xlat
loop
lods
cmp
ret
ja
jb
adc
fadd
pop
mov
cmp
pop
pushf
mov
cmp
sub
sbb
adc
pushf
outsb
inc
jne
sbb
cs
rcl
pop
outsl
loope
das
cmpsl
jns
lods
cmp
push
movsl
out
popa
jge
jbe
xor
pop
int
shl
paddq
push
test
pop
aam
xchg
notb
cmp
mov
ror
cmp
adc
mov
mov
gs
push
aad
push
cmp
mov
int
loope
jnp
lds
pop
mov
arpl
pop
sbb
push
sbb
out
loop
inc
stos
add
stos
adc
jb
movsb
outsl
jno
sub
cmp
fldl
mov
ja
cli
mov
pop
mov
paddsw
jne
aam
jnp
je
pop
or
add
jle
sub
test
insl
sbb
fs
aas
push
dec
mov
mov
mov
sbb
pushf
scas
sahf
sub
sub
adc
repnz
and
fisubrl
cmpsb
out
or
fadds
cmp
mov
clc
fldt
ds
rcr
xchg
lods
jecxz
xor
mov
lock
add
nop
xorl
cltd
inc
jge
sbb
divl
popa
dec
icebp
out
mov
sub
xchg
jl
int
pop
aam
and
adc
xchg
cmp
inc
push
addr16
stos
jns
mov
xchg
clc
int3
and
xor
sbb
ljmp
cmp
sub
cmpl
les
shrl
repz
push
fadd
and
xor
inc
loop
jno
inc
xchg
test
push
repnz
cmp
mov
jl
fisttpl
dec
clc
addr16
add
jbe
or
lret
lcall
xor
dec
mov
addr16
or
push
repnz
push
jb
mov
and
mov
xor
dec
dec
mov
movsb
and
lret
sub
pop
shr
fxch
sub
subl
jge
addl
rcrl
andb
pop
arpl
jge
pop
ret
mov
in
or
loop
add
shll
sbb
and
data16
cmpsb
push
push
push
or
aaa
push
jge
xor
sbb
jl
xor
push
js
aam
mov
jae
fisubrs
mov
jge
call
movsl
inc
mov
jmp
or
in
pusha
xchg
aaa
pushf
push
enter
push
mov
mov
mov
cmp
inc
jb
fiaddl
outsl
xchg
push
mov
pop
lret
pop
fldl
adc
cmpl
push
fisubrl
jnp
push
xchg
or
movb
shrb
and
push
jae
icebp
mov
sbb
jmp
sbb
stc
lcall
lret
sbb
mov
enter
xor
rcll
push
leave
fwait
ret
or
out
scas
inc
int3
mov
lahf
loope
out
iret
addr16
insb
sbb
cmpsb
xchg
fucomp
jle
sbb
add
add
inc
test
popa
int3
in
shll
insb
jmp
add
adc
mov
sahf
rcr
rcrl
mov
lea
decb
pop
or
outsl
fs
andb
sbb
mov
mov
je
and
sbb
mov
out
cmp
mov
jnp
lds
pop
mov
popa
mov
icebp
std
pop
mov
dec
or
pop
mov
in
enter
cmp
mov
pop
ja
cwtl
xchg
dec
lds
pop
or
push
arpl
mov
enter
mov
xchg
cmpl
cmp
or
sub
cwtl
movsb
sub
and
or
mov
sub
dec
repz
addr16
movsl
mov
aam
aad
cmp
and
arpl
push
or
stos
sbb
mov
loope
add
xor
xlat
xor
popf
xchg
push
iret
xchg
jb
xor
mov
xchg
cli
mov
loope
test
mov
cmpsl
shll
pop
mov
aam
cmc
inc
mov
push
adc
sub
sub
or
adc
stos
scas
xor
icebp
aas
cld
dec
es
push
push
movsb
adc
arpl
movsl
mov
push
rol
sub
adc
loope
pop
iret
dec
ja
test
mov
jl
push
adc
out
scas
scas
jle
hlt
loopne
stc
mov
mov
scas
aas
cmp
mov
jp
mov
or
shll
add
cmp
add
std
cltd
jns
jp
aas
lret
out
jge
ret
xor
js
nop
out
ja
sub
cld
push
or
es
inc
and
movsb
xor
arpl
das
enter
mov
sbbb
add
cmp
test
mov
cmc
pop
clc
cli
and
push
push
stos
dec
xor
sub
mov
and
sub
stc
fcmovnb
aad
addr16
jb
lods
fidivrs
xchg
pop
je
sti
subl
jp
push
in
push
ret
or
test
or
ljmp
push
jo
out
dec
inc
push
sbb
movsb
sbb
ss
scas
and
les
lcall
into
call
out
loope
arpl
test
jl
xor
mov
pop
mov
pop
out
dec
out
insb
push
mov
repnz
testl
sub
lcall
push
jmp
ds
ds
sbb
jbe
mov
inc
orb
mov
adc
or
lret
xchg
into
in
rcl
fwait
dec
lret
adc
adc
push
and
in
pop
jp
inc
push
loope
lret
not
inc
stos
mov
in
rcrl
pop
adc
pushf
icebp
mov
adc
push
mov
mov
jnp
call
inc
adc
mov
jmp
xchg
sub
clc
fstpl
ror
mov
mov
mov
rorl
dec
out
sbb
xchg
testl
or
push
cmpb
fnstsw
cmp
or
mov
sbb
aad
or
cmc
adcl
subl
rcr
repz
sub
and
lret
and
mov
adc
gs
js
fs
or
xor
xchg
push
bound
cld
sbb
arpl
pop
push
dec
arpl
pop
and
in
mov
xchg
xchg
lcall
pop
decb
mov
cltd
lods
cld
mov
adc
sub
rorl
fmuls
or
mov
and
std
dec
mov
pop
int
add
mov
push
sub
ljmp
dec
xor
sbb
inc
repnz
stos
xchg
mov
mov
out
in
fsts
push
stc
fsts
push
adc
stos
aas
jl
add
rep
xor
xchg
or
stos
inc
add
pop
mov
cmc
pop
or
jge
repz
jl
xchg
cltd
push
js
jle
sarl
adc
xor
xchg
lret
aad
out
inc
aas
or
add
pusha
ret
or
sub
mov
mov
xor
cltd
call
ljmp
mov
loopne
adc
popa
sbb
or
and
adc
aad
sub
jl
ljmp
bound
ret
daa
in
push
push
adc
call
jo
icebp
inc
das
mov
mov
lds
push
movsl
repz
lcall
sahf
mov
xchg
xchg
pop
ret
xor
cmpsb
mov
add
pop
fisubrl
in
mov
adc
pop
sbbb
cmc
ret
in
aas
repnz
dec
add
gs
xchg
stos
call
in
xchg
adc
in
aam
or
test
lahf
mov
lret
lods
dec
fcmovb
insl
ds
mov
hlt
add
push
data16
jno
gs
adc
pushf
push
out
cld
push
repz
adc
scas
push
cmp
packuswb
ljmp
inc
xor
testl
xchg
popa
push
inc
lods
inc
or
dec
test
sub
dec
mov
push
daa
xorb
jnp,pt
jo
dec
mov
leave
cmp
mov
popa
inc
stos
repz
hlt
cmp
inc
mov
repz
repz
jb
aaa
inc
push
fldenv
daa
sar
mov
shrl
pop
out
popf
lock
mov
jp
inc
mov
aaa
mov
shll
fcmovnbe
mov
pop
jb
mov
inc
fistpl
xchg
movsl
mov
xchg
adc
xchg
cmp
inc
push
add
mov
push
arpl
jae
mov
imul
sbb
jne
push
aas
cmc
in
sbb
xorl
pop
sbb
int
adc
int
loopne
xlat
in
movsl
mov
jne
or
xchg
or
pop
in
iret
dec
adc
dec
test
clc
fstl
and
xchg
scas
xchg
je
jnp
mov
into
out
pop
aam
xchg
mov
or
mov
out
pop
inc
inc
push
in
fwait
pushf
mov
jge
mov
jmp
lcall
sub
pop
xor
mov
cwtl
popa
fcomps
mov
insb
out
imul
std
sub
add
mov
sub
and
loope
lea
je
push
cmpsl
mov
sbb
adc
fldenv
cmp
push
or
outsb
mov
cmpsb
xchg
std
sbb
xchg
push
int
popf
mov
push
push
mov
ss
mov
cld
add
jns
daa
or
xchg
movsb
adc
cmp
stos
mov
lahf
sub
inc
mov
imul
sbb
cmc
and
jo
jo
lret
xchg
push
push
sarl
cmc
mov
and
lret
pop
loop
xchg
adc
xchg
ds
add
loopne
out
cmpl
mov
dec
xchg
int
shlb
mov
gs
aam
sub
lahf
ljmp
rorl
clc
jbe
push
stos
pop
out
xor
jno
ljmp
jmp
jmp
pop
mov
sarb
cmp
fdivrp
shlb
mov
dec
inc
jns
mov
ja
outsb
mov
cmp
pop
mov
pushf
lahf
pop
out
pop
push
cmc
sti
in
or
inc
push
add
scas
pop
popa
add
inc
outsb
fs
push
push
call
test
mov
shlb
fdivr
lahf
psrlq
sbb
int
xor
sarb
mov
push
outsl
jmp
cli
mov
cmp
sbb
and
inc
movl
cmpsl
int3
aam
push
jb
pop
sbb
push
int3
jle
loopne
aaa
mov
xor
pop
mov
roll
stos
int
xor
cmpl
push
dec
stos
mov
sbb
stc
pop
stos
mov
or
jge
mov
mov
daa
adc
aas
cmp
outsb
add
push
push
push
sub
push
outsl
test
or
iret
fnstenv
and
mov
xchg
push
lock
loopne
ljmp
leave
sbb
std
mov
and
inc
aas
lods
xchg
mov
or
xor
adc
das
push
jb
mov
outsb
inc
add
dec
inc
out
xchg
daa
icebp
mov
cmpsl
mov
aas
push
gs
cmpsb
lds
jb
test
scas
push
xchg
fst
movl
and
js
rcll
enter
outsb
imul
fcoml
test
sbb
cmp
pop
and
pushf
imul
adc
mov
inc
push
shlb
push
sbb
mov
push
out
test
outsl
pop
enter
stos
fildll
cmp
xchg
fdivrl
sahf
dec
xchg
mov
in
add
rorl
mov
pop
movsl
xor
ret
xor
in
in
test
pop
out
hlt
jae
cmp
loop
ret
jnp
and
stc
lods
pop
jmp
mov
popf
xorl
mov
adc
cmp
add
pop
push
mov
dec
insb
loopne
in
mov
cmp
movsl
ljmp
add
call
mov
xor
push
cwtl
testb
mov
in
outsb
jmp
das
pop
in
js
aas
fdivr
ret
xchg
push
enter
xchg
push
cmc
pop
lds
in
xlat
push
lret
fcom
sub
in
out
clc
call
push
ja
in
dec
int3
dec
mov
adc
shll
lret
cmp
adc
and
add
jp
rcrb
cmp
jle
sbb
sub
mov
imul
lds
or
mov
out
or
cmp
cld
aas
and
add
orb
cmp
lock
aam
add
push
mov
inc
pop
mov
fcmovne
cmp
xor
mov
rcr
stos
mov
rorl
lods
cwtl
jmp
gs
scas
jne
out
into
loop
pop
popf
hlt
pop
rolb
sti
pushf
sbb
std
dec
insb
jnp
adc
outsb
sbbb
gs
xchg
xlat
aas
mov
mov
fcompl
sub
jmp
add
iret
shlb
hlt
and
fidivrs
aam
sub
sub
mov
scas
inc
lea
enter
aam
push
dec
dec
sub
shr
mov
dec
dec
inc
cmp
pop
js
cltd
mov
sub
icebp
dec
ds
push
cmp
sub
mov
mov
jmp
js
cld
scas
pop
and
adc
lret
jnp
aam
int
repnz
mov
dec
ljmp
cld
cmpsl
dec
fistps
or
inc
pop
sbb
outsl
mov
xchg
jo
lahf
cmp
dec
fidivrl
pusha
mov
jns
sbb
inc
inc
cmpsb
or
cmp
decl
xchg
mov
outsl
mulb
aad
in
icebp
pushf
adc
dec
jnp
push
dec
ret
xor
sti
xor
jge
add
cmp
adc
push
out
jmp
aam
pop
loope
into
popa
rorl
ret
mov
push
inc
or
ds
out
sbb
mov
sbb
jg
insb
inc
push
movsl
inc
aas
dec
cmpsb
lds
das
test
loopne
aam
insb
addr16
sarl
enter
pusha
or
je
cmp
and
cmp
push
test
dec
aam
out
push
jge
in
and
pop
dec
jecxz
ret
loope
sbb
out
jne
in
ffree
sbb
mov
daa
mov
mov
lock
shl
scas
pop
mov
or
pop
imul
les
inc
sbb
sub
jb
jle
lcall
adc
mov
mov
jno
mov
popa
adc
in
dec
test
ds
fdivl
xchg
mov
sbb
dec
scas
lcall
imul
divb
ret
addr16
jns,pt
xchg
int
push
outsl
dec
hlt
adc
arpl
mov
mov
aad
out
bound
mov
mov
dec
sahf
aad
inc
xor
cmc
push
je
xchg
idivl
xor
ret
mov
fwait
cs
cwtl
mov
je
jne
fidivl
inc
pop
jecxz
sbb
inc
out
repnz
add
xor
xor
not
push
sbb
mov
xor
jno
ljmp
mov
xchg
and
mov
imul
or
cmp
adc
sbb
cmp
ret
stos
imul
xchg
push
xor
in
lret
inc
mov
xor
sub
repz
sub
aam
addr16
jle
fidivrl
add
push
addr16
scas
aas
aaa
pop
shlb
push
js
scas
push
push
adc
ljmp
inc
neg
in
pcmpeqw
xchg
fs
mov
in
push
idivb
dec
loopne
dec
lds
xlat
push
outsb
xlat
or
int
cmpl
rolb
mov
push
dec
pop
ret
mov
pop
jno
mov
movsl
je
inc
fstps
stc
iret
repz
jl
pop
loop
sub
add
ja
pop
and
sbb
pop
dec
and
incb
pop
ss
stc
sbb
xchg
call
jbe
mov
pop
mov
stos
mov
dec
cmp
icebp
dec
mov
or
push
inc
int3
xor
adc
lret
bound
or
cmpsl
arpl
test
scas
inc
repz
stos
lcall
std
fs
shll
pop
arpl
faddl
sbb
or
imul
js
lret
imul
aas
xchg
in
and
cld
jg
insl
cmp
mov
pop
xchg
xor
xchg
or
jge
xor
pop
jae
faddl
js
lds
addr16
dec
xor
iret
pusha
adc
mov
data16
call
sbb
bound
pop
mov
in
movaps
mov
int3
dec
loopne
pop
loopne
sbb
popa
pop
sub
mov
jle
data16
das
mov
jb
arpl
sub
jae
pop
enter
das
add
xchg
push
call
xor
test
pop
dec
pushf
lods
adc
fsub
rcrb
stos
push
push
mov
lea
or
add
jg
mov
add
and
inc
jns
test
or
test
insl
shll
fisubl
push
jb
adc
nop
fnsetpm(287
mov
dec
js
xchg
insl
push
xchg
pop
mov
sbb
out
insb
xor
adc
adc
dec
mov
inc
xlat
pop
adc
scas
jb
jl
ss
addr16
aaa
jb
pop
sub
loop
xchg
cmp
or
mov
in
ret
aas
fsubs
sarl
lea
fldz
out
aaa
push
mov
sahf
mov
jb
jns
loop
stos
into
arpl
arpl
test
dec
cmp
mov
and
add
dec
stos
sub
mov
mov
or
jle
jo
in
outsl
jle
imul
push
pop
jge
sbb
je
out
das
popf
popf
pop
clc
push
push
jg
fisubs
jae
add
gs
outsb
ja
lret
ds
inc
cmp
xchg
cmpsb
fs
int
daa
mov
scas
add
mov
test
loope
stos
and
mov
pmaddwd
cmpb
add
rcl
into
cli
andl
mov
cmp
jns
push
lea
jns
mov
xor
mov
es
aam
pop
cmp
xor
pushf
fstpt
mov
repz
pop
enter
mov
in
movsb
mov
fisttps
mov
pop
sub
cmc
mov
mov
clc
ret
dec
das
mov
movsl
pop
add
or
addb
add
call
xchg
in
pushl
loope
sub
por
hlt
outsl
mov
mov
cwtl
fdivrl
push
int
sub
pop
in
loope
pop
jg
cmp
lret
stos
cli
cmp
outsl
jecxz
stos
or
dec
dec
aam
adc
and
dec
or
mov
sbb
or
cmpsl
inc
pop
push
out
add
in
fldenv
arpl
rcll
mov
push
repnz
fst
inc
nop
ja
aas
outsb
shr
lret
add
imul
std
xor
and
inc
sub
push
jb
fstpl
ja
xchg
and
daa
dec
mov
out
or
int
psubusw
mov
fisubl
dec
nop
and
add
daa
in
jbe
insb
pop
aam
in
mov
shl
mov
pop
add
pop
xchg
sub
stos
sti
in
jp
scas
ss
cs
sub
sbb
sbbl
xchg
fildl
shll
imul
lods
lock
push
andb
add
inc
incl
scas
pusha
cmp
dec
xchg
dec
sbb
lahf
mov
push
fdivl
fs
cmp
inc
mov
cmpsl
sub
stc
pop
stos
or
clc
scas
xchg
in
mov
lcall
sbb
lcall
in
popf
mov
pushf
jmp
pop
mov
int3
xor
add
or
sahf
xor
cmp
cmp
mov
es
add
pop
dec
xchg
mov
pop
insb
imul
cs
xchg
cmp
fwait
push
rcrl
lea
decl
inc
adcl
fmulp
mov
fdivrl
fs
add
scas
dec
sti
int3
cmp
ss
notb
daa
loopne
in
push
cltd
jecxz
add
inc
xor
cld
cmp
mov
pop
pusha
aad
mov
lret
sub
push
movb
pop
or
popa
jecxz
mov
cltd
and
dec
lcall
and
adc
or
les
cli
aam
mov
iret
inc
gs
push
sub
add
adc
call
dec
mov
test
scas
xor
mov
and
js
xor
fcmove
mov
jmp
jle
aam
adc
xchg
cmc
or
nop
daa
push
push
js
jbe
out
js
in
cmpsl
pop
push
aaa
jns
orb
add
nop
xchg
ss
ljmp
movl
jg
repnz
pop
xor
jmp
jp
xchg
test
loop
mov
adc
inc
gs
outsb
cmpsb
arpl
jno
push
idivl
cld
popa
ja
je
cmp
mov
push
jecxz
stc
mov
add
or
cld
mov
mov
mov
les
cwtl
in
lret
push
cmc
insl
dec
lods
adc
pushf
arpl
cmp
inc
fisubl
xor
orb
stc
and
or
pop
fcompl
test
movsb
int
call
mov
push
arpl
sub
add
mov
ss
xchg
test
xlat
and
mov
insl
stos
jbe
imul
adc
movsb
sbb
cmpsb
inc
not
stos
popa
das
inc
jge
sub
inc
sub
pop
pop
mov
shrb
inc
fwait
xor
std
repnz
jp
mov
andb
or
xchg
fiadds
lock
mov
add
gs
xchg
mov
js
inc
mov
addr16
mov
popf
adc
hlt
dec
push
pop
frstor
lds
loope
out
cld
jmp
or
lahf
imul
adc
mov
fbstp
jmp
cltd
pop
orb
in
mov
pusha
stc
rcll
sbb
rcl
scas
add
and
push
aas
adc
xchg
aas
mov
and
xor
sub
aam
enter
pop
ret
pop
movsl
es
in
into
add
lret
mov
xor
jae
inc
ds
lock
mov
leave
or
dec
clc
addr16
nop
mov
dec
or
sbb
xor
mov
pop
divb
sub
jns
jnp
roll
decl
sbb
jae
add
outsl
or
sbb
push
stos
and
add
inc
xor
pop
test
fsubrs
in
clc
jb
inc
add
jae
lock
or
xchg
fcoml
fisttpl
ficoml
sub
xchg
mov
pusha
xchg
adc
stc
push
jae
roll
or
adcl
out
sub
push
pusha
xchg
cmp
ljmp
xchg
std
into
je
dec
in
adc
insb
cwtl
sbb
rolb
fisubl
mov
inc
hlt
pop
mov
pop
mov
inc
leave
dec
sub
les
out
int3
or
cmpsb
adc
mov
xchg
jecxz
push
stos
push
and
xchg
mov
pop
add
mov
push
push
mov
movsl
divl
xchg
xchg
add
jne
inc
inc
fldcw
and
mov
in
xor
out
mov
pop
mov
dec
add
dec
fnstenv
repz
mov
mov
xchg
mov
mov
push
xor
xor
xor
divb
rclb
pushf
adc
bound
call
ret
shrl
lock
fidivs
popa
sub
clc
loop
mov
push
call
mov
pop
gs
dec
andl
add
sahf
bound
into
add
push
cmp
aad
clc
sti
ja
adc
xchg
mov
mov
jl
mov
bound
push
int
fdivs
loopne
and
xlat
decl
shl
test
rorl
addr16
xchg
arpl
or
pop
cs
xor
mov
cltd
stos
pop
pop
ret
test
pop
adc
pop
inc
test
dec
jecxz
pop
xchg
sbbl
cmp
repnz
test
xchg
lahf
xlat
roll
mov
jns
ret
es
push
mov
xorb
cmp
fcmovnbe
jae
push
xchg
add
push
xchg
test
inc
dec
lret
mov
push
xor
pushf
inc
es
pop
test
pop
lds
pusha
nop
sub
inc
pop
mov
adc
sti
inc
imul
push
ss
leave
cmpsb
push
cmp
lods
jmp
ljmp
in
pop
fs
inc
pop
sub
sahf
xchg
pop
xor
adc
push
mov
outsl
int
add
ja
rcl
loopne
cltd
jp
jae
testl
jecxz
dec
inc
fists
sbb
outsb
cld
mov
mov
inc
add
inc
mov
inc
and
imul
cmpsl
sbb
and
mov
js
push
out
dec
xor
lods
fwait
sub
pop
stc
xlat
andl
jnp
clc
popf
add
cmp
sahf
push
cwtl
inc
gs
pop
push
adc
call
inc
notb
in
jg
sub
xchg
adc
int
or
test
dec
pop
or
dec
jae
jl
dec
jbe
stos
cmp
addr16
cmp
cmp
loopne
mov
fnstenv
ret
mov
jp
repz
dec
ret
xchg
and
add
mov
and
sti
cmp
add
iret
xor
pop
daa
sub
out
sub
sbb
movsl
inc
jnp
sarb
mov
and
fiadds
nop
icebp
push
or
sbb
push
push
xchg
pop
test
pusha
xor
adc
out
xchg
sbb
push
bnd
aad
outsb
mov
imul
jno
call
jecxz
rcrl
mov
pop
lods
das
mov
sub
lock
pop
adc
push
rclb
inc
cmp
jmp
push
jns
je
push
sarl
mov
fdiv
pop
mov
pop
mov
jae
xor
mov
das
shr
repz
repz
sahf
mov
inc
int3
call
rcr
xor
sub
inc
testb
add
mov
hlt
lahf
xchg
movsl
pop
xchg
lea
sbb
or
or
mov
lcall
jo
sbb
mov
jno
movsb
fwait
clc
subb
mov
dec
sub
shlb
insl
mov
jg
hlt
pop
xor
sbb
jbe
mov
in
xorl
and
cmc
test
insl
cmp
lret
sub
xchg
push
outsb
negb
imul
lahf
jb
mov
das
xchg
mov
inc
or
jns
gs
sahf
push
imul
and
jl
subl
push
xchg
mov
pop
std
mov
popa
cmp
push
es
stos
inc
xchg
add
pop
push
mov
addr16
out
mov
outsb
rcrl
pusha
inc
or
sbb
outsb
mov
out
mov
mov
dec
aaa
faddp
sub
cmp
xchg
js
xor
mov
add
jg
pop
sub
mov
movsl
cmp
lcall
data16
jecxz
sub
mov
push
cmp
mov
repz
mov
test
xchg
imull
out
adc
mov
mov
sbb
in
scas
mov
jnp
cmpsl
dec
int3
gs
inc
out
sbb
pop
pop
xor
nop
pop
outsl
cmp
xchg
incl
lahf
fcmovu
jmp
or
cltd
fsubs
or
call
sub
mov
imul
setnp
jno
adc
jle
out
sub
leave
mov
cltd
les
pop
jecxz
xor
cltd
imul
pop
jbe
push
popf
xchg
jnp
mull
idiv
data16
into
inc
adc
adc
leave
push
movl
adc
xor
ljmp
addr16
in
aam
push
scas
or
scas
out
test
into
adc
cmc
iret
and
xor
push
cmc
xlat
jno
sarl
jbe
sbb
sbb
lret
inc
addr16
xor
repnz
ja
mov
pop
enter
gs
push
cmpsb
jno
mov
test
cld
xchg
pop
mov
sbb
mov
xchg
mov
dec
movsb
adc
test
stos
sub
cmc
pusha
enter
paddsw
dec
negl
incl
jmp
dec
int
es
xchg
mov
and
mov
mov
mov
lret
push
shrb
scas
pop
mov
jmp
or
xor
sbb
pushf
lock
movsb
cld
inc
test
popa
aaa
loopne
pop
dec
fs
arpl
push
xchg
jbe
daa
cmp
dec
clc
sbb
insl
popaw
mov
cmp
lods
and
lahf
inc
xchg
pop
sbb
sub
and
in
mov
imul
mov
mov
gs
mov
dec
fisttpl
shrl
imul
adc
pop
xchg
push
pop
jg
jmp
clc
mov
fisttps
sbb
mov
inc
push
xlat
adc
jle
pop
xchg
mov
and
iret
movsb
push
jo
aaa
lods
jmp
ja
adc
adcb
and
add
push
mov
inc
xchg
or
mov
cli
push
dec
cmp
mov
mov
and
add
repnz
mov
ljmp
mov
and
and
imul
rcrl
adc
stc
lods
rcr
ljmp
pop
mov
jmp
loope
and
mov
stos
inc
ror
push
fldt
lret
ficomps
add
imul
xchg
jge
fwait
adc
sbb
lret
and
dec
dec
cmpsl
add
mov
dec
lahf
negl
cwtl
aad
pop
dec
sbb
sbb
call
rcr
in
xchg
movsl
arpl
fwait
cmp
or
aas
and
pop
and
adc
dec
and
bound
es
es
filds
roll
inc
push
mov
fcomi
adc
adc
mov
or
rol
aam
xor
lret
es
inc
and
adc
lret
mov
cltd
cmp
push
adc
jo
mov
pop
shrl
fisttps
in
or
adc
jae
movsb
jmp
loope
xchg
pop
ficompl
out
rolb
push
and
mov
jmp
mov
push
jnp
in
mov
xor
adc
in
cli
movsb
and
in
test
cmp
test
sbb
addr16
or
sub
ret
sbb
xchg
rorb
test
mov
pop
cwtl
fistpl
dec
rcll
jb
inc
leave
jbe
mov
lods
and
adc
movsl
std
mov
cmpsb
mov
push
scas
dec
inc
and
push
mov
aas
out
sbb
push
jp
mov
pop
mov
lahf
fimull
sub
jne
xchg
pop
imul
dec
out
cmp
cmp
inc
jb
mov
jb
inc
ret
lock
lds
and
stos
lea
ret
ljmp
push
push
xor
jo
cwtl
push
adc
add
adc
pushf
dec
sub
mov
or
daa
push
mov
sbb
jo
sub
xor
pop
arpl
cmp
addr16
cmpsl
mov
icebp
and
addr16
push
push
sahf
js
sub
sub
shll
add
xchg
cli
inc
les
stc
cmp
push
sbb
mov
mov
lods
jge
mov
mov
lcall
inc
jle
js
sarb
stc
or
pop
inc
and
fisubs
mov
mov
adc
inc
daa
addr16
fildll
popl
or
int
cmp
push
inc
add
cwtl
in
push
dec
mov
or
outsl
mov
inc
xchg
cmpsb
test
xor
dec
scas
jp
shlb
mov
or
mov
mov
lcall
xlat
push
outsb
cmpsl
mov
test
popa
pop
mov
pop
scas
aam
faddl
inc
roll
jnp
std
outsb
stc
mov
sub
nop
repz
aam
out
and
in
dec
jmp
add
sti
push
in
ret
popf
das
loopne
iret
aaa
sbb
jge
xchg
pop
sub
cld
aad
stc
push
mov
test
gs
lods
hlt
fcomps
pop
dec
rorb
out
out
repz
movsb
es
cs
icebp
mov
add
stc
std
add
out
das
inc
dec
loopne
sbb
rolb
mov
aaa
aaa
cmp
mov
push
mov
jae
pmullw
and
dec
out
fs
dec
mov
jp
sub
sbb
scas
cmp
adc
rcl
jl
iret
cs
xchg
inc
aas
inc
in
add
jne
add
inc
movsb
inc
pop
mov
mov
int
jp
adc
fbstp
jmp
mov
das
add
in
roll
mov
mov
pop
pusha
xchg
lret
jmp
hlt
xor
scas
fiaddl
loopne
pop
and
dec
enter
jle
mov
icebp
stc
jge
push
cwtl
push
cmp
mov
mov
sbb
iret
ret
cmpsb
scas
sub
daa
mov
ljmp
fbstp
pusha
jp
jae
in
enter
mov
call
cwtl
loop
outsl
sti
add
cmpsb
ja
inc
stos
cld
iret
mov
add
hlt
int3
push
push
out
into
and
push
int3
or
pop
divl
in
adc
dec
or
xchg
xchg
outsl
es
adc
nop
out
fwait
inc
into
mov
push
in
jp
cmp
adcb
roll
push
xchg
arpl
mov
lock
fistpl
mov
pushf
sbb
mov
sub
jmp
mov
push
mov
sbb
fdivrl
xor
mov
add
je
scas
scas
in
ljmp
por
movsl
dec
xor
add
pop
loop
pusha
stc
pop
or
jo
flds
push
push
fs
mov
push
cltd
xchg
lea
out
mov
mov
jle
xchg
pop
mov
test
push
mov
sahf
aam
ss
loope
mov
dec
out
and
fsubrp
ljmp
icebp
cmp
arpl
shrb
inc
dec
test
pop
sub
mov
shll
or
push
jb
pop
inc
inc
xchg
adc
pop
xor
mov
call
out
mov
jl
jb
push
stc
xor
daa
mov
aaa
mov
scas
insl
lods
add
fstps
push
add
leave
sti
and
or
dec
aam
out
mov
int
mov
repz
dec
insl
pusha
jnp
je
jecxz
push
mov
jle
das
test
movsb
xor
cs
xor
in
insl
mov
pop
bound
rclb
imul
dec
dec
xor
and
mov
pusha
ljmp
push
sbb
pop
xchg
xchg
jmp
and
sbb
fdivp
enter
mov
jbe
and
mov
dec
lea
push
out
xlat
and
mov
push
fidivrl
movsl
xor
sub
xchg
mov
leave
and
in
pop
adc
in
mov
arpl
lret
xlat
and
sbb
push
xchg
jge
clc
inc
jae
insb
push
addr16
xchg
dec
ja
mov
push
pop
out
ficomps
xor
cmp
push
and
mov
rclb
pop
jmp
frstor
das
jl
jb
repz
mov
pop
mov
popa
pop
add
cmc
int
cmp
int
mov
pop
xor
pusha
into
rcrb
xor
iret
sbb
aad
test
mov
mov
mov
fwait
mov
fabs
lret
adc
cmpsb
push
xchg
mov
jns
stos
imul
lods
and
into
push
nop
mov
sbb
ds
scas
inc
lods
pop
cmp
cmp
cld
push
into
mov
xchg
pop
lds
pop
test
xlat
jae
insl
lcall
sbb
fstl
fistps
ficoml
xchg
loope
mov
and
ja
popf
xchg
addr16
sub
inc
mov
fdivr
cmp
inc
xchg
fstps
vcvtdq2pd
pop
mov
fildl
dec
add
in
mov
xorb
cmp
pop
push
clc
and
in
nop
push
inc
add
mov
mov
js
popf
push
add
jl
adc
mov
jnp
and
mov
incl
push
repz
rclb
mov
jecxz
mov
xchg
cmp
sub
lcall
cmp
je
aad
or
lahf
addr16
sbb
mov
test
xor
scas
out
xchg
jl
fimull
adcb
loope
mov
xor
adc
or
xor
call
ja
mov
shll
lods
pop
shrl
push
scas
aam
adc
fstpl
xor
adcb
clc
fdivrs
sbbb
sub
push
lea
in
and
mov
push
inc
sbb
addb
xor
dec
cmp
mov
sbb
divl
cmp
jp
test
sub
loopne
mov
pop
mov
leave
inc
or
dec
or
fs
mov
push
jecxz
dec
lods
loopne
in
in
mov
ds
mov
jl
and
or
cld
loop
adc
sbbb
push
negb
pop
xchg
inc
mov
push
jnp
xor
mov
xor
mov
lds
out
sbb
pop
clc
mov
sub
add
and
pop
dec
andl
cmp
cmpsl
push
mov
in
and
mov
rorl
movsl
xor
pusha
inc
push
and
leave
xchg
sti
or
movsb
mov
inc
mov
ret
mov
mov
fdiv
divb
cli
mov
xchg
xchg
mov
ret
aam
pusha
or
lods
sbb
push
push
das
and
out
loope
pop
sbb
push
hlt
sbb
xlat
or
fildll
push
fxch
fs
or
ret
dec
aaa
int3
mov
lods
mov
lock
pop
or
pushf
nop
or
sub
into
fwait
pop
icebp
xor
mov
push
or
cmp
into
jb
cmpsb
cmp
ret
inc
int
fimull
mov
cmp
aad
adc
inc
cmp
xchg
push
fdivs
fs
mov
jbe
cmp
dec
ja
cmp
mov
insb
mov
dec
bnd
lahf
jp
pop
popf
jae
cmp
mov
mov
xchg
lock
popa
fs
mov
hlt
push
fwait
mov
imul
pusha
pop
fcoml
inc
outsb
push
add
outsb
mov
movsb
jb
test
fimull
repnz
push
lock
test
popa
push
mov
mov
pop
test
ds
add
push
in
pop
xor
mov
fisttpl
insb
sti
nop
push
out
call
mov
sbb
nop
popa
pop
in
jno
pcmpeqw
ja
jle
adc
mov
nop
imul
and
shlb
adc
dec
addb
jnp
xchg
mov
pusha
std
shlb
sbb
inc
int3
mov
out
jmp
icebp
ja
aas
out
inc
pop
in
cmp
enter
mov
and
or
aam
dec
push
test
mov
popf
or
mov
bts
popf
cmpsl
clc
pop
cwtl
inc
or
test
inc
insl
push
loop
ds
inc
jle
shr
sub
mov
imul
jge
sub
sub
jb
arpl
mov
xchg
sub
mov
pushf
mov
push
jge
xor
icebp
sbb
pop
mov
xchg
xor
test
mov
mov
push
dec
xchg
dec
mov
mov
stos
xchg
mov
lcall
push
test
test
pushf
in
repz
cmp
adc
dec
in
push
icebp
cmpsl
xchg
jb
shrl
push
int
sarb
add
mulps
stos
iret
or
ret
lods
xchg
add
lcall
data16
xchg
xchg
call
jb
add
test
in
xchg
mov
test
pop
addb
jmp
scas
ss
jb
mov
xor
jle
stc
shll
cmp
leave
mov
dec
mov
cltd
mov
stc
xchg
jbe
out
jo
cmp
mov
mov
loop
mov
pushf
dec
jecxz
push
push
in
jp
cmp
sub
sbb
push
out
adc
lret
cmc
sbb
call
icebp
iret
inc
aam
faddl
shrb
pushf
jp
pop
adc
sbb
fs
fsub
mov
out
and
sub
or
jbe
dec
mov
dec
outsl
jbe
cli
and
inc
mov
repz
cld
in
imul
mov
mov
sbb
lahf
fcomi
addb
push
sub
add
or
push
jno
pop
mov
mov
push
xor
test
mov
fcoml
pop
mov
dec
cmpsb
arpl
adc
mov
push
or
js
out
jnp
scas
jne
mov
rcll
pop
add
loopne
push
or
notl
adc
inc
dec
cmp
mov
adc
cmpsb
hlt
mov
adc
icebp
insl
push
sbb
pop
xchg
xchg
fnstenv
adc
mov
int
int
pushl
sbb
dec
ss
mov
add
pop
xor
and
cmp
mov
popf
fidivl
pop
jmp
sub
mov
pop
outsb
xor
lret
lret
dec
ds
add
popl
mov
fs
scas
adc
test
adcb
in
cltd
lods
sub
testb
lock
cmp
loopne
mov
nop
ss
nop
decb
gs
dec
mov
int
mov
or
int3
test
dec
pop
std
push
roll
jns
pop
add
loop
call
xchg
sti
leave
mov
push
out
addr16
cwtl
add
aad
aas
pop
push
jle
push
imul
cmpsb
js
add
in
jl
add
mov
cmp
ljmp
mov
push
cmp
sbb
jbe
dec
jns
cmpl
pop
lret
stos
xor
jae
stos
lods
push
sub
outsl
movsb
xor
pop
sub
cmp
push
into
jp
add
shl
imul
clc
mov
daa
pop
jne
or
ror
xchg
je
out
xchg
hlt
and
dec
in
js
mov
icebp
jp
cs
mov
sub
jb
scas
dec
push
mov
xchg
cmp
mov
add
xchg
pop
sub
add
mov
or
dec
xor
dec
bound
adc
sub
outsb
inc
fsubrs
lret
fnstcw
es
xchg
pusha
push
cmp
sbb
push
add
mov
stos
pop
out
sbb
jl
sbb
and
pop
inc
mov
mov
xor
jle
popa
inc
sbb
fnstsw
pop
push
xchg
mov
std
mov
addr16
xchg
mov
xchg
les
lret
ret
cmpsb
lea
lret
in
orb
jae
neg
pop
push
sub
fst
sub
pop
mov
xor
stos
loope
inc
nop
xchg
out
mov
jp
mov
sbb
dec
cmpsb
xor
js
aas
push
dec
lds
ficomps
push
or
dec
pop
lea
pusha
rcr
sbb
adc
jp
lock
inc
pop
rcr
or
mov
sarb
out
es
loopne
in
mov
dec
int3
mov
test
xor
xchg
dec
and
jle
add
mov
inc
das
and
cwtl
pop
dec
mulb
add
aas
insl
cmp
cmc
sbb
adc
xchg
jne
inc
popa
adc
push
mov
mov
add
sub
pusha
dec
add
ss
fnsave
and
jae
aas
pop
cmp
jb
adc
mov
rep
cs
dec
adc
fdivrs
mov
enter
cltd
push
adc
push
xchg
outsl
dec
xlat
aam
inc
cmc
sahf
cmp
pop
pop
rcr
mov
push
sub
int
mov
les
dec
mov
in
loopne
jle,pt
punpckhdq
cmp
std
lds
xor
fcomps
outsl
test
inc
enter
mov
cmc
xchg
adc
fcomip
aas
inc
cmp
xchg
and
mov
sub
fs
inc
jno
mov
mov
pop
test
jns
push
inc
lret
add
lds
jno
jg
stos
jge
xor
cmp
cmp
jle
mov
push
iret
xchg
and
scas
loope
jmp
popf
dec
xor
mov
rorl
push
dec
fdivr
sub
jno
popa
loop
jge
clc
bound
pop
sti
and
adcb
aad
test
fcompp
push
sbb
rol
adc
and
jne
jge
arpl
dec
pop
push
cmp
jae
movl
fwait
jle
ds
jge
xchg
mov
mov
push
fnstsw
push
cmp
repnz
jb
inc
test
into
cmp
fs
sbb
mov
std
outsb
stos
pop
jns
and
jecxz
mov
in
int3
stos
mov
outsl
arpl
push
sub
lret
and
das
push
scas
stos
xchg
popf
ret
lods
xor
mov
fnsave
add
dec
push
jnp
xchg
pop
in
stc
inc
sbb
or
pop
push
in
cmp
bound
sbb
movsb
xchg
leave
insb
inc
imul
xor
xor
xchg
mov
outsl
jl
jns
jle
scas
push
mov
cld
rcll
inc
push
xor
xor
mov
arpl
scas
xor
jbe
jmp
mov
xor
xchg
scas
or
pop
sbb
mov
push
out
popf
fadds
mov
sti
shl
push
mov
jo
sub
jo
in
dec
sbb
push
jnp
jno
add
and
xor
imul
or
scas
pop
test
add
pop
jns
lods
aam
dec
popa
inc
add
aam
imul
add
ljmp
or
pushf
pop
ljmp
out
sahf
popf
mov
out
fnstcw
pop
xor
dec
imull
xor
mov
adc
in
mov
sahf
out
insl
fstl
xchg
test
mov
or
inc
out
mov
fidivs
pop
add
aad
in
pop
leave
sbb
jbe
cmp
dec
xchg
iret
movsb
jmp
xorl
or
pushf
nop
pushw
jmp
in
leave
roll
in
and
loopw
outsl
push
iret
dec
inc
das
jns
xchg
shrl
lret
jnp
fidivl
cltd
pop
push
repnz
bound
mov
popa
mov
shll
and
dec
add
fnstcw
xchg
sub
mov
outsb
mov
cs
pop
imul
cmp
pop
mov
std
mov
ss
mov
sbb
bound
or
movsb
pop
mov
hlt
or
das
jle
mov
jne
mov
inc
repnz
sbb
xchg
mov
call
jno
mov
fs
adc
daa
sub
and
pop
aad
jge
push
adc
jo
or
in
into
test
inc
add
cmpsb
loop
sbb
inc
shrl
and
movsb
je
rorb
loop
sbb
lcall
insb
xor
mov
xchg
xor
mov
cmp
mov
lret
es
mov
jle
jbe
dec
bound
xchg
jmp
cmp
or
push
mov
out
loopne
sub
neg
jb
rcrl
dec
xchg
xchg
in
loope
and
fdivr
mov
push
je
fcmovbe
mov
sub
mov
sbb
enter
jl
or
xor
jo
jbe
into
gs
mov
ret
fwait
sahf
mov
and
out
add
mov
sub
mov
test
into
and
cmp
dec
mov
jg
adc
mov
enter
dec
xchg
jae
add
movsb
push
mov
push
jle
test
ss
cltd
out
pop
lock
cwtl
clc
adc
cmc
xchg
test
stos
jecxz
imul
test
jmp
orl
es
movsl
call
inc
fld
mov
jo
imul
dec
ljmp
icebp
aas
add
sbb
cmpsb
ret
and
test
push
pop
scas
push
ret
mov
aas
cmpsb
jnp
lahf
push
dec
push
into
dec
pop
xor
out
enter
rcll
jp
fisubrs
adc
xchg
mov
inc
dec
mov
adc
cmp
inc
sub
cmpsb
movsb
inc
xchg
mov
into
rcrb
popf
shrb
push
out
pop
ret
out
fdivl
insl
js
mov
pop
jno
xchg
mov
and
into
add
stos
orb
mov
insl
aaa
into
ss
pop
jecxz
inc
jb
sub
lds
lret
mov
sbb
jno
test
scas
mov
push
mov
rol
lret
orb
inc
ret
ds
enter
add
insb
push
popf
and
sarl
xorl
rcrb
lods
std
inc
aam
ljmp
adc
pop
xchg
mov
mov
fidivl
cmc
ds
mov
pop
adc
and
shl
xchg
jno
movsl
inc
mov
divb
ljmp
xor
push
push
mov
cmc
aam
lcall
pop
repz
or
cmpsl
pop
jg
push
in
inc
out
cmc
cmp
shlb
jo
adc
sbb
stc
inc
daa
inc
jnp
pop
xchg
add
mov
fistpl
cmp
jbe
fwait
mov
int
test
cmp
xchg
test
or
jbe
in
popf
stos
daa
sbb
or
mov
js
mov
icebp
mov
fs
int
inc
mov
cmp
lock
fmuls
inc
jno
push
mov
jo
sarb
movsl
imull
inc
movsb
arpl
add
jne
lock
sarb
lods
mov
adc
add
xchg
mov
jg
xor
jmp
cli
xor
mov
int
jmp
xorb
pop
or
daa
jle
in
aaa
sub
imulb
add
mov
daa
adc
mov
jbe
stos
adc
and
and
mov
cmpsb
jo
sub
jne
xor
test
mov
cmpsl
inc
or
popf
jns
pop
int3
sbb
into
sbb
dec
popa
call
sub
aaa
cltd
scas
loop
fcmove
dec
fbstp
mov
or
sub
int
out
sub
sub
jae
fdivl
jns
or
fnstsw
sub
aad
mov
jmp
xchg
adc
ret
add
cmpsb
out
ljmp
filds
icebp
dec
aaa
jmp
rolb
dec
rclb
lods
mov
lds
rcrb
in
ja
mov
lds
mov
cmp
cli
in
imul
leave
mov
loop
xchg
fwait
out
inc
call
shll
ret
iret
fs
xor
pop
and
clc
hlt
stos
mov
loopne
movsb
aad
mov
shl
loopne
lret
in
outsl
push
lds
aad
in
sti
andb
mov
push
out
xor
test
adc
je
xchg
out
sti
push
popa
and
mov
jmp
or
lea
fiaddl
aam
fwait
leave
loop
cmp
push
in
aas
xchg
addr16
lahf
insb
xchg
in
and
stc
ret
ss
xchg
lock
icebp
adc
rolb
ds
and
fildl
out
push
cltd
pop
out
jmp
jg
in
loopne
mov
cmp
add
fwait
push
loope
adc
lret
xchg
pop
jb
pop
inc
lcall
jbe
mov
add
xor
pop
mov
or
dec
xor
clc
loop
xchg
in
outsb
or
jecxz
mov
push
leave
lahf
dec
jg
xor
negl
mov
jecxz
std
jmp
fucomp
loop
lods
cltd
out
pop
push
cmpsb
inc
xchg
fldl
mov
mov
test
push
push
lret
pushf
xchg
ss
mov
lea
hlt
stos
pop
aaa
adc
jg
and
rorb
test
push
jge
mov
nop
pop
dec
push
and
adc
sub
pop
or
or
mov
sub
iret
dec
cmovo
pop
cmpsb
test
pop
sub
cltd
test
push
cli
pop
in
pop
xchg
xchg
and
adc
cwtl
es
orl
mov
aaa
notl
incl
pushl
xor
jo
pushf
jle
sub
outsb
popf
test
nop
stos
mov
lret
sbb
xor
stos
xchg
or
mov
repz
or
es
sub
sbb
sbb
mov
outsl
imul
dec
push
adc
mov
pop
fadd
inc
pop
iret
pusha
clc
pop
push
and
test
gs
dec
lret
lret
pop
lahf
daa
adc
pop
std
inc
mov
mov
cmp
xchg
lock
push
xchg
dec
pushf
xlat
xchg
mov
or
sbbl
cmp
es
leave
xchg
cmpsb
mov
test
scas
push
fwait
pop
adc
in
add
mov
hlt
xor
je
pop
xor
imul
nop
mov
cmp
in
imul
xchg
cmpsb
cmc
dec
icebp
cld
lock
cmp
and
lock
test
lods
pop
push
pushf
dec
rcrl
ret
cwtl
cmc
lock
jns
mov
arpl
mov
mov
xor
into
lret
mov
push
mov
adc
or
xor
movsb
lds
mov
in
xchg
repz
mov
cmp
cld
int
dec
dec
iret
jo,pt
testl
adc
outsl
xor
cmpsl
into
int
jae
in
sub
xor
stc
cmpsb
daa
jne
out
mov
cmp
addb
in
or
sub
and
xor
in
aas
xchg
icebp
inc
inc
cmc
xchg
std
ret
cltd
xchg
mov
outsb
pop
xor
or
cmpsb
xor
int3
fld
movsb
das
mov
add
xchg
and
es
adc
cld
pop
adc
movsb
sbb
cmpsb
add
add
or
cmp
jecxz
sub
and
mov
subb
adc
pushf
jns
xchg
shl
sub
and
das
mov
mov
outsb
and
xor
lds
test
aad
out
pushf
leave
fadds
jg
add
xchg
inc
in
inc
test
jge
scas
mov
sub
xor
or
loop
cli
jl
sahf
test
xchg
add
push
into
dec
xchg
jbe
sbb
mov
sbb
add
andl
cmp
imulb
test
inc
jl
mov
and
and
das
les
gs
xchg
dec
in
xor
fcmovnbe
aaa
push
xor
movlps
loop
mov
dec
imul
xchg
pop
testb
or
fimull
mov
daa
xchg
inc
xchg
rcrl
cmp
inc
jmp
xor
cmp
pop
nop
mov
sbb
jmp
sbb
sbb
idivb
out
pop
fldl
mov
daa
add
xlat
sub
insb
lods
fnstenv
mov
dec
lods
mov
mov
adc
push
fidivrs
adc
out
dec
les
sti
in
fsubrl
jbe
jp
shll
cmp
add
inc
and
inc
xchg
repz
mov
inc
imul
dec
iret
push
das
xor
xor
shlb
push
dec
ficoml
rorl
pop
inc
js
push
mov
flds
mov
mov
lcall
enter
out
div
nop
cmc
lcall
fnstcw
push
out
mov
mov
dec
xchg
jno
or
sbb
jle
pop
fdivrl
insl
loopne
shrb
dec
inc
pop
sbb
ja
sbbb
int3
jno
les
pop
repnz
sub
fildl
movsb
xor
insl
sbb
arpl
int
pop
test
sub
mov
dec
leave
add
pop
inc
lret
sub
ret
xchg
int
jno
mov
lret
or
jp
and
or
addl
sahf
adc
adc
push
and
insl
cld
mov
cld
fisubrl
int
cmp
add
shll
push
mov
test
aas
je
mov
mov
sbb
jbe
mov
mov
in
cmp
das
fptan
aaa
inc
imul
jno
xchg
inc
mov
pushf
xor
jle
inc
out
mov
cmp
push
movsl
outsl
hlt
cld
pop
jb
repz
pop
xor
rcl
pop
ds
insb
mov
and
loop
push
xchg
loope
mov
adc
int
iret
shl
sub
lret
frndint
mov
push
daa
push
inc
push
xchg
push
xchg
pushf
cli
jle
cltd
push
popaw
sub
mov
ds
orb
sti
fs
repz
popf
mov
mov
das
jp
stc
and
js
add
std
neg
pop
addr16
test
neg
outsl
loope
adcl
cmp
repnz
xchg
mov
adc
loop
lret
sahf
ror
pop
inc
pop
dec
jne
lock
jns
mov
lds
sub
sbb
mov
stos
and
push
pusha
pop
dec
fiaddl
fldcw
mov
mov
or
pop
data16
stos
jb
or
rolb
out
add
mov
andb
mov
decb
xchg
mov
addr16
lods
jae
aam
push
sar
fwait
push
mov
ja
out
jp
je,pt
adc
mov
call
mov
loope
mov
lret
pusha
inc
lahf
scas
rclb
orb
out
enter
nop
cmp
mov
arpl
lds
scas
faddp
sahf
inc
jns
aad
les
xchg
ficompl
pop
mov
fcmovne
leave
cmpsb
scas
cmp
test
push
inc
repz
adc
test
hlt
sbb
imul
movsl
pop
xchg
gs
shrb
pusha
jne
shll
mov
xlat
mov
bound
pop
lar
dec
imul
in
sub
pop
rcrb
dec
jnp
jmp
scas
aam
mov
jb
sti
insl
push
data16
push
in
call
jno
or
lret
jbe
jns
mov
push
push
orl
pop
mov
inc
jecxz
test
and
mov
mov
push
pop
hlt
push
mov
enter
fiadds
pop
in
push
dec
mov
sub
mov
sub
enter
xchg
dec
mov
aam
push
outsb
imul
not
mov
arpl
mov
daa
cmpb
mov
push
mov
xchg
xor
jp
mov
xor
add
pop
mov
inc
xchg
push
dec
scas
pop
pop
xlat
movsl
pop
pop
je
push
sub
push
lods
dec
dec
ret
adc
popf
pop
test
add
js
sub
or
rorl
jge
fdivl
ror
add
xor
pop
pop
lret
outsl
add
inc
sbb
inc
mov
xor
mov
popf
adc
lcall
mov
push
icebp
test
cs
movsb
lock
xor
or
pop
xchg
cmp
mov
push
stos
test
jbe
dec
or
test
jg
inc
aam
rcrl
ljmp
inc
sub
pusha
xchg
jbe
loope
push
aas
cwtl
icebp
stc
cmp
inc
iret
movsl
je
pop
push
ret
divl
and
adc
inc
fwait
shll
aad
fstp
fwait
xor
push
cmp
cmp
lcall
or
fisubs
sbb
call
cli
cltd
xorb
push
mov
dec
xchg
hlt
rolb
mov
aam
je
pop
inc
pushf
inc
sbb
mov
int3
adc
adc
ret
enter
test
push
divb
loope
cli
in
loopne
aad
loope
inc
out
arpl
rcrl
shrl
push
sbb
test
iret
test
lds
ret
sbb
push
les
mov
mov
mov
insl
jnp
sub
inc
and
addl
xchg
data16
add
lcall
xor
imul
xor
mov
stc
cmp
test
pop
ret
lock
jge
dec
add
cmp
adc
mov
jge
pop
scas
arpl
mov
popf
push
push
out
xchg
pop
push
mov
pop
lods
addr16
mov
add
addl
rorl
inc
in
leave
out
imul
sbbb
ja
je
lahf
lods
ja
mov
mov
mov
cmp
or
push
mov
push
and
sub
int3
mov
inc
stos
inc
add
insl
pop
jecxz
iret
add
fbstp
pop
pop
xchg
mov
add
pop
adc
or
jmp
sbb
cmpsb
test
inc
and
or
sarl
mov
dec
and
or
cmp
cmpsb
lret
mov
popf
cs
out
movsb
push
scas
pusha
or
cmp
adc
mov
add
cmp
or
outsl
iret
mov
pop
cmpsb
add
loopne
push
lock
addr16
push
or
mov
andl
imul
lret
addb
hlt
add
adc
inc
addr16
ja
mov
sub
repz
sbb
adc
push
ret
push
jp
or
repnz
xor
je
jo
xchg
repz
xor
test
repnz
dec
push
in
add
mov
aas
insb
xor
iret
in
sti
lea
lock
lea
or
outsl
outsb
jg
and
sub
shlb
cwtl
mov
call
adcb
test
add
jg
into
cmpsb
repnz
jne
rolb
cwtl
mov
cmp
imul
push
les
and
mov
cmp
sub
inc
je
fildl
insl
pop
pop
jge
xchg
or
std
pusha
aas
and
fs
add
fisubl
cmp
add
fnstsw
enter
enter
ds
bound
or
es
jg
sti
jnp,pt
ds
dec
stos
pop
imul
fdivr
popf
iret
jne
pop
insb
sub
jns
or
ds
sub
inc
and
ds
in
mov
push
xchg
adc
xchg
lahf
cmpsb
ret
or
lea
mov
popw
add
dec
cmc
cwtl
pop
repnz
sbb
aas
test
push
pop
pusha
aam
pop
out
leave
mov
cmp
push
mov
adc
cmpsl
mov
or
rcrb
push
sub
mov
inc
ja
aad
mov
jb
sub
adc
loope
jns
xchg
insl
jp
xor
shr
je
lret
rcrb
jo
mov
inc
sahf
or
push
lret
roll
ret
js
cmp
mov
test
test
ret
aam
push
mov
shrb
jne
es
fldenv
add
mov
mov
jle
adc
or
mov
fistps
mov
xor
pop
loop
mov
add
int3
dec
sbb
addl
push
push
fwait
imul
fdivr
pop
push
loope
std
push
add
add
inc
das
pop
insl
push
inc
pop
sub
cmp
imulb
sbb
cli
fists
test
mov
push
inc
cs
inc
push
cmp
sbb
jmp
cli
nop
sbb
mov
inc
adc
scas
lods
inc
dec
aas
push
jns
add
adc
imul
int
sbb
inc
fwait
lock
or
mov
cwtl
mov
imul
add
fwait
movsl
cmp
jg
inc
xlat
pop
jae
jle
inc
inc
wbinvd
xchg
pushf
movsl
lea
fs
dec
fisttpll
rcrb
lret
dec
push
movb
inc
dec
aaa
or
xchg
out
sbb
mov
ss
fimull
rol
orl
inc
sbb
pop
push
inc
cmpsl
cmpsl
cmp
jecxz
cld
push
popf
idivl
jl
fldt
jle
fwait
in
pop
push
stos
xchg
push
cltd
loop
fistpll
sahf
push
jno
mov
pop
test
or
push
sti
fbld
call
nop
fmul
cmp
xor
mov
lea
mov
popa
fstpt
pusha
jb
xchg
rorb
mov
arpl
adc
dec
xor
add
push
iret
int
xor
pop
cmpsl
in
shlb
fcmove
mov
stos
push
jg
sbb
adc
aaa
mov
inc
xchg
cltd
xor
mov
int
shrl
pop
mov
jle
mov
xor
shll
cmp
fs
pop
int3
push
mov
jp
push
lods
popl
lret
xchg
sub
mov
push
fadds
jnp
sub
cmpl
mov
sbb
add
inc
ret
pop
mov
mov
dec
outsb
fdivs
arpl
dec
fcomi
mov
mov
mov
movsb
fwait
es
jl
mov
dec
cld
fldpi
add
ret
or
push
adc
sbb
test
dec
frstor
pop
cmpb
jecxz
xchg
cli
fidivrl
ret
xor
andl
test
sbb
push
mov
cmp
fldcw
outsl
dec
cwtl
cmc
fsubrl
dec
pop
adcb
call
fdivrl
shr
stos
sbb
cmp
adc
in
mov
das
sub
mov
cmp
dec
aaa
cs
pop
inc
jbe
cmp
dec
repnz
out
test
dec
loop
xlat
in
pop
fdivrs
sbb
loop
pop
pushf
mov
cmpl
xchg
mov
int3
adc
push
sbbl
jb
test
sub
popf
sub
iret
repnz
popf
lds
fnsave
mov
adc
repz
mov
cmp
add
shlb
xor
inc
jno
pop
les
pop
das
xchg
jecxz
int
add
mov
add
push
cmc
push
ret
adc
xchg
call
xor
mov
or
jp
aam
outsb
call
pop
pusha
int3
xchg
mov
scas
adc
push
notl
cmp
dec
mov
out
aaa
lret
in
xchg
lods
push
call
or
xor
add
daa
sbb
and
sarl
sub
push
je
xchg
jle
lret
push
mov
mull
inc
dec
or
pop
pop
ret
js
push
xchg
or
cmpsb
mov
loope
loope
add
inc
addr16
pop
or
mov
fmull
repz
enter
cwtl
and
or
add
fimuls
repz
xor
cmc
ret
cmpsl
xor
mov
cmpsb
jmp
aas
pusha
loopne
dec
xlat
cltd
mov
pop
bound
cli
mulb
cmpsb
lret
or
jae
xchg
adc
or
jbe
xor
jbe
pop
outsb
mov
adc
pop
stc
sub
ret
sbb
pop
fiaddl
mov
xor
stc
and
out
inc
clc
insl
adc
sbb
das
orb
js
sbb
int
lds
cmp
and
lods
mov
push
mov
leave
jg
push
xchg
insb
int3
sub
icebp
mov
shl
or
hlt
fisubrl
sub
mov
or
push
pop
sahf
adc
fstps
mov
and
mov
adc
sti
inc
clc
jae
sahf
int3
pop
popa
mov
sahf
lods
cmp
jbe
jbe
mov
fs
sbb
fstl
pushl
pop
out
aam
das
sub
bound
inc
mov
in
aam
sbb
lret
inc
and
ss
and
pop
fstp
mov
jl
mov
pop
repz
push
sbb
stos
mov
call
out
push
sbb
mov
insb
out
out
mov
inc
out
xor
loope
pop
mov
xchg
cmp
fadd
xor
push
and
in
adc
mov
les
addr16
inc
ljmp
jb
sbb
xchg
stos
in
ror
aaa
mov
adc
xor
pusha
icebp
push
ret
cwtl
inc
cli
sub
cmp
lret
movl
pop
dec
jge
nop
outsb
sub
inc
push
push
push
fists
sub
dec
inc
fadd
cmp
xor
jg
fiadds
xor
jmp
jae
xchg
lret
into
push
vmptrld
cmp
fisttps
xchg
mov
xchg
xor
push
inc
enter
orb
cmp
aam
jmp
sbb
mov
jmp
pop
iret
mov
ss
pop
fildl
adcb
cmp
or
push
xor
inc
sub
xchg
dec
repnz
in
pop
dec
lock
imul
jnp
lcall
filds
push
lods
adc
pop
adc
test
jl
xchg
movl
add
call
mov
xchg
mov
in
imul
test
pop
cmp
out
aad
push
cmp
sbb
xor
mov
ljmp
mov
shll
add
int
xchg
mov
stos
sbb
push
lds
imul
cmc
jge
adc
sahf
sbbl
add
into
out
repz
clc
stos
jg
jmp
fs
rclb
dec
dec
aaa
and
subb
dec
sub
or
or
cld
aad
sbb
jb
adc
jbe
mov
out
hlt
loope
icebp
add
lret
mov
loope
aad
mov
sbb
mov
mov
xchg
xchg
fnstenv
mov
out
rcrl
fcmovb
xor
push
dec
in
ds
xlat
add
add
mov
or
inc
les
mov
xchg
mov
pop
push
sub
xor
repz
repnz
add
and
movsl
cmpsb
cltd
jmp
fadd
sahf
xchg
aam
inc
in
mov
mov
stos
addl
icebp
out
add
xchg
int
fisubrl
sub
ffree
js
jbe
add
cltd
pop
aam
sub
rcl
enter
inc
xchg
cmpsb
mov
mov
nop
mov
and
jle
fcmovbe
ret
cltd
aam
imul
cmpsl
loopne
repnz
or
out
and
sub
testl
pop
sbb
or
mov
cs
roll
inc
xor
cmpsb
adc
sti
dec
int3
rorb
sub
mov
lahf
fcomi
mov
aad
and
push
into
adc
out
jmp
xor
xor
in
add
aam
insb
inc
xor
xchg
jo
push
xchg
xchg
lret
mov
pandn
mov
cwtl
jge
push
aas
cmp
adc
cld
mov
xlat
lret
enter
dec
scas
fdivr
adc
pushf
pop
inc
jae
pop
push
das
push
lds
rclb
xchg
mov
pop
fwait
iret
into
aam
and
out
and
dec
mov
bound
cmpsl
in
sbb
in
decl
das
icebp
lahf
aam
lcall
mov
cmp
cmpsl
jp
add
vcvtss2si
jno
sub
xchg
nop
mov
jo
out
mov
test
adc
xor
pushf
test
mov
into
inc
aam
mov
push
int
shlb
mov
or
fwait
xlat
ja
movsl
in
imul
sbb
in
lea
and
ret
pop
insl
add
sarb
jns
cmp
sti
sbb
inc
sub
cwtl
mov
insb
mov
shll
mov
push
into
mov
pop
xlat
push
pop
jbe
fnstsw
mov
inc
jo
jae
int
aam
ret
subb
stos
add
push
stc
mov
pop
dec
fcoms
mov
sub
lret
adcl
sub
inc
or
inc
mov
adc
test
ret
jne
pop
out
xor
int
xchg
inc
in
lret
lods
loope
jg
mov
sbb
xor
inc
inc
and
ret
int3
mov
lods
dec
imul
dec
push
mov
repnz
lods
enter
call
shll
mov
mov
mov
pause
fisttps
inc
testl
xor
sti
mov
inc
dec
lods
push
lret
scas
sbb
push
mov
scas
movsb
fwait
jne
loope
lret
xorb
out
fdivl
add
scas
ficoml
pop
cwtl
es
mov
filds
mov
mov
push
clc
mov
shl
push
jge
xor
mov
cli
mov
mov
decl
sbb
mov
lds
test
lcall
jle
fldcw
pushf
xlat
cli
fcoml
mov
out
add
ss
fmuls
and
daa
bound
sahf
sub
sahf
mov
hlt
cmpsl
and
daa
repz
inc
arpl
call
addr16
mov
test
mov
mov
rol
in
icebp
sub
in
and
clc
pop
lret
adc
jo
adc
loop
loop
movsl
mov
ret
popa
into
jge
repnz
xchg
mov
cld
push
add
xor
pushf
ficomps
cmp
or
xor
nop
test
ret
data16
mov
mov
iret
sbb
sbb
mov
lea
and
push
xor
mov
sub
mov
je
mov
xchg
dec
pusha
fucomip
xchg
insl
ss
and
stc
mov
inc
ljmp
jmp
mov
jmp
ret
or
sbb
out
xchg
stos
cmp
or
adc
xor
sub
sbb
mov
ss
and
movsb
inc
push
sbb
cltd
cmp
fcoms
fdivrl
sbb
dec
testb
jns
pop
fisttps
sbb
add
test
in
lret
add
ds
push
enter
cmpsb
les
ret
lds
scas
rcl
mov
inc
and
xchg
test
pushl
cltd
sbb
and
cmp
lret
jle
imul
test
push
sub
add
or
pop
push
lcall
sub
stc
inc
dec
movsb
xor
cwtl
lock
push
lret
dec
mov
mov
jp
insb
xchg
ja
mov
push
jnp
dec
sti
inc
fcoml
xorl
sub
jl
inc
mov
out
sub
test
in
fimuls
dec
icebp
mov
clc
stos
push
pushf
jg
idivb
mov
lods
push
and
fld
loope
lods
inc
cmp
push
shr
sub
push
pop
pop
push
adc
fs
in
mov
jb
cmc
mov
subb
lcall
or
push
mov
test
sti
dec
enter
mov
shl
ficompl
ret
pop
cmp
lahf
and
push
lret
je
into
rcrb
repz
cmp
or
call
scas
pop
pop
daa
nop
adc
ljmp
test
mov
xor
and
pop
xchg
stos
jo
sub
ret
sbb
mov
in
aaa
ret
add
stos
sbb
subl
repnz
xchg
ds
dec
clc
and
jp
adc
popa
dec
sbb
cmp
inc
addr16
lcall
inc
bound
sbb
cli
dec
push
ds
sbb
jp
push
mov
lret
imulb
mov
ret
xchg
rcll
add
and
inc
cmp
bswap
lcall
or
push
dec
and
loope
arpl
cld
pop
push
in
jns
inc
movsl
add
out
insb
add
xchg
cld
pop
mov
mov
rorl
sub
das
dec
mov
aas
sbb
and
out
xlat
xchg
push
push
sub
insb
cld
out
je
xor
rcl
sbb
jbe
aad
aas
ret
push
xchg
add
fwait
mov
dec
lret
inc
push
mov
stc
das
loopne
mul
jp
jne
test
push
repz
cld
imul
pop
adc
sbb
jg
repnz
pusha
imul
int
jbe
cmp
inc
negb
out
xor
fs
hlt
fwait
cmp
push
jne
xchg
fldl
into
or
add
adc
cltd
jg
int
icebp
xor
xchg
mov
sub
xor
into
xor
pop
std
test
das
pop
jnp
sbbl
jmp
pop
mov
inc
mov
sub
adc
mov
mov
sbb
lcall
push
cltd
xorb
test
mov
rolb
mov
pushl
sub
xor
outsl
shlb
cmc
or
mov
mov
in
call
xchg
andb
out
aaa
xchg
jns
mov
jecxz
and
and
mov
mov
sbb
or
sbb
stos
mov
mov
jl
xlat
out
push
jle,pt
and
ljmp
or
push
mov
dec
je
int
cltd
cmp
sbb
jp
and
cltd
ljmp
mov
loopne
mov
pop
pop
enter
jns
insl
adc
push
inc
add
ja
test
fdivrp
xlat
sahf
push
arpl
fwait
scas
mov
mov
nop
sbb
xchg
cmp
add
push
scas
lret
inc
push
std
les
mov
adcl
push
cld
pop
orl
inc
push
imul
sub
lods
in
pop
sti
int
fcmovne
xchg
aas
mov
push
pop
addr16
jae
and
ljmp
sarl
mov
cltd
rsqrtps
fnsave
adc
pop
les
stc
pop
jnp
in
lea
loopne
fidivs
xchg
arpl
stos
jmp
pop
mov
xlat
lds
jnp
les
mov
push
and
sub
xchg
loop
pop
gs
dec
mov
mov
mov
ja
fiaddl
pop
xlat
mov
in
inc
jmp
add
add
inc
dec
popa
sub
out
mov
push
xchg
cmpsl
xchg
cld
sar
xchg
aas
pusha
xor
lods
loop
jmp
lcall
sarb
popa
imul
sub
lds
hlt
mov
dec
mov
xor
lods
xchg
sbb
mov
dec
test
xchg
scas
cld
xor
divl
test
clc
int
lods
cmp
pop
ss
push
sub
sbb
mov
sub
hlt
mov
xchg
int3
lahf
clc
jle
mov
cmpsb
inc
pusha
arpl
push
pop
xor
shl
inc
xchg
ret
call
fmulp
mov
jbe
lods
andl
cmpl
lret
rol
mov
cwtl
cli
data16
xor
inc
shlb
xlat
insl
mov
mov
add
loopne
sub
pop
jp
xchg
pusha
cmpsb
sub
dec
sbb
stos
dec
inc
daa
pop
push
les
pop
mov
adc
adc
clc
ret
or
pushf
xor
int3
pop
loopne
cmp
pop
test
loop
dec
cmp
cltd
mov
popa
cmpb
int3
jge
out
in
mov
pop
add
sbb
lea
push
pop
in
pushf
sbb
lods
mov
adc
fidivrs
xchg
add
xchg
push
sbb
or
inc
xor
mov
lret
ljmp
insl
xor
dec
xchg
test
outsb
mov
lods
sbb
movsb
les
dec
xor
sahf
dec
out
sbb
sbb
fs
mov
xlat
xchg
adc
scas
out
jmp
and
push
sbb
or
pushf
jo
in
jb
rorl
sahf
mov
dec
addb
vmptrst
push
push
add
mov
sub
xor
sahf
enter
and
jno
sub
adc
jae
repz
sbb
test
fsts
repnz
sbb
cmp
sbb
repnz
jl
sbb
test
xchg
lret
dec
dec
mov
test
mov
inc
push
arpl
dec
and
and
je
mov
sub
cltd
test
cmp
mov
adc
or
je
xchg
jb,pn
cmpsl
enter
je
dec
lods
test
call
mov
cmc
mov
orb
jle
pop
mov
out
gs
pushf
pop
ret
into
push
push
loope
xchg
popf
lahf
icebp
imul
and
pop
xchg
lret
xor
shlb
mov
jle
ret
je
enter
cmp
fistl
sbb
andb
addr16
cli
cmp
addr16
ljmp
push
sarl
enter
dec
data16
mov
push
scas
mov
sub
pop
xchg
jne
pop
sbb
lcall
imul
insl
pop
cmp
adc
sub
lret
dec
inc
rorb
or
scas
in
cmp
std
repnz
jns
repz
pusha
push
cmp
pop
je
repz
xchg
int
lds
cmp
out
mov
les
dec
daa
xorb
xchg
aas
mov
or
adc
leave
or
sbb
mov
xrelease
mov
and
arpl
inc
lahf
out
jp
in
mov
outsb
inc
inc
mov
jl
jo
push
test
and
cmp
popa
jecxz
js
dec
aaa
test
movsl
mov
stc
fmuls
ret
call
addb
push
aad
int
sub
pushf
pop
adc
and
ljmp
dec
test
jno
aam
cmp
jl
lcall
push
dec
es
cld
jae
test
mov
pop
iret
lods
mov
lods
repnz
fsubs
enter
add
and
cmpsb
rcrb
xor
ss
mov
movsl
repz
add
loopne
pop
inc
pop
aam
in
push
xor
sarb
pop
push
jp
sub
data16
xchg
mov
and
inc
mov
jmp
fcomip
insl
lret
outsl
lret
out
repz
lds
adc
xchg
or
xchg
mov
lods
divb
jnp
mov
cmpb
pop
cli
add
inc
adc
inc
int3
or
add
cmp
aad
hlt
jno
iret
aam
push
add
push
push
mov
out
pop
enter
sbb
and
insb
mov
fiadds
popa
jae
test
push
orl
push
xchg
jne
xchg
mov
mov
std
aad
dec
rcr
shlb
mov
call
loop
lret
pop
sbb
dec
cli
inc
outsl
mulb
jecxz
mov
aaa
cmp
mov
pushf
outsb
movl
std
mov
lods
mov
enter
cli
add
lret
inc
mov
daa
add
neg
jg
loopne
cmp
stos
lcall
mov
xchg
or
push
mov
push
mov
xchg
xchg
xchg
jae
icebp
add
jle
jmp
ret
ljmp
mov
outsb
jl
and
jae
test
mov
outsb
cmp
push
out
dec
sarl
insb
subb
fldt
or
test
push
dec
rclb
jne
repz
sbb
inc
push
ret
cmp
jbe
inc
mov
mov
push
and
and
dec
ja
mov
ljmp
fidivs
les
xchg
or
lds
fisttpll
bound
dec
aad
dec
mov
cwtl
rcrb
mov
pop
push
repz
notb
movsl
cmp
scas
cmp
adc
ret
pop
fsubr
int
jae
inc
or
mov
mov
add
lret
push
or
rcrb
sub
subl
sbb
sbb
cmp
call
inc
scas
xchg
nop
imul
dec
and
mov
adc
and
in
and
mov
mov
mov
lds
cmp
dec
add
sub
loope
jnp
jmp
and
fs
in
popf
jne
mov
mov
into
loopne
sahf
aaa
fcomp
ljmp
sbb
nop
xchg
in
iret
mov
ss
in
repz
stos
push
sti
gs
sub
ds
mov
cltd
inc
es
jne
out
cmpb
repnz
icebp
inc
push
jl
insb
add
scas
sub
fidivs
das
aas
mov
adc
repnz
popf
shll
loope
and
test
inc
dec
push
dec
rcll
mov
sbb
pop
pop
fcmove
rorl
in
inc
inc
jp
test
cld
js
enter
popf
sbb
mov
sti
ror
cwtl
jb
sbb
and
daa
add
nop
dec
sub
roll
jl
adc
fidivrs
jl
add
push
lea
sarb
push
stc
lret
gs
aad
insb
clc
stc
sahf
lcall
mov
out
sarb
dec
dec
leave
cwtl
dec
mov
jl
mov
call
popf
lret
add
xchg
shll
cmp
shl
aas
mov
push
pop
inc
aad
rolb
js
data16
adc
movl
cmp
sub
jbe
xor
dec
and
out
popf
mov
sub
out
push
outsb
inc
les
xor
jne
jns
lcall
mov
mov
lods
mov
or
cwtl
push
jg
sub
cmp
mov
dec
imul
mov
push
rcrb
and
pop
ljmp
or
dec
aad
movsb
pop
mov
and
cltd
dec
rolb
pop
sbb
lret
xor
or
push
cmpsb
jo
lock
dec
adc
loopne
mov
xchg
and
decl
in
xlat
je
mov
les
and
fadds
pop
push
adc
std
sbb
into
push
aas
xchg
lahf
popa
push
bnd
jecxz
xchg
adc
fisttpl
imul
jg
mov
out
jg
fwait
pop
add
mov
lods
fidivrl
mov
or
inc
sbb
and
pushf
pop
cmpb
mov
sti
jge
rorb
cmc
mov
in
add
add
cmp
adc
je
dec
add
movsb
mov
leave
and
push
scas
adc
inc
ret
stc
mov
jmp
xor
sar
pop
mov
pop
lcall
push
test
xchg
xor
pop
in
divl
pop
adcl
xchg
xor
push
in
xor
mov
popa
iret
adc
ljmp
jp
push
rolb
movsl
lahf
mov
fistpl
sbb
dec
pusha
push
cs
cmc
mov
mov
outsl
fcomps
cld
xchg
mov
and
sarb
sub
jbe
and
pop
subb
sar
in
repz
lds
add
inc
mov
inc
loope
negl
arpl
movsl
loope
inc
dec
and
pop
mov
lret
mov
or
fadds
add
stos
push
lods
repnz
inc
shr
fldcw
cmp
mov
dec
in
lahf
andl
or
imul
cmc
out
push
lret
ss
lods
pop
jne
adc
clc
adc
movsl
mov
imul
pop
mov
inc
rcrb
sti
pushl
pop
add
adcl
or
dec
movsl
scas
fdivrl
aas
cmp
cmp
out
mov
cmp
jp
xor
xchg
lock
lahf
and
add
pop
mov
insl
sub
sbb
jno
or
popl
icebp
cmpsb
mov
out
dec
inc
jg
mov
mov
jg
xchg
cmpsl
and
jnp
dec
mov
or
in
push
sbb
pmulhw
fwait
mov
iret
xor
jecxz
stos
sbb
hlt
and
add
mov
dec
lret
insl
and
mov
js
mov
pop
imul
jbe
es
push
stos
mov
and
add
pop
shlb
clc
jge
inc
adc
cmpsb
idivl
pusha
mov
out
or
andb
mov
sub
mov
dec
and
out
test
inc
mov
mov
dec
into
sub
xchg
fisubl
cmpsb
mov
push
popf
add
call
fcmovnb
sar
sbb
outsl
sbb
jmp
push
mov
movsl
lret
jmp
pop
daa
stc
scas
add
enter
out
test
xchg
movsbl
addr16
in
lods
cmp
mov
adc
push
pop
pushf
mov
enter
cs
iret
das
mov
push
lret
add
sbbl
mov
jo
xchg
add
test
je
in
shlw
mov
adc
adc
hlt
inc
mov
push
loope
xchg
cs
sbb
insb
mov
cs
mov
lods
stos
adc
and
mov
leave
pop
les
xor
movsb
adc
in
dec
cmp
inc
push
sbb
xor
loopne
cmp
or
xchg
xor
mov
jae
dec
mov
ror
push
push
mov
pop
dec
daa
inc
and
pushf
mov
xor
add
ljmp
push
push
xchg
mov
dec
daa
mov
inc
add
cmp
cmp
sbb
and
out
test
add
xor
mov
ja
sbb
mov
rol
xchg
jge
pop
arpl
and
dec
lods
js
mov
imul
cmpsl
push
mov
adc
mov
test
ljmp
shl
icebp
add
data16
add
fdivrs
mov
mov
out
sub
jg
popf
test
pop
jne
mov
out
mov
rclb
inc
call
dec
mov
fptan
or
xor
in
mov
or
sub
pop
rcrl
xor
cmpsl
mov
in
int
sub
mov
inc
pop
enter
push
out
jno
clc
xchg
sub
push
insl
cs
dec
jnp
imul
fisttpl
icebp
or
cmp
data16
arpl
and
outsb
jns
packuswb
xchg
inc
or
neg
ret
int3
and
test
jl
pop
inc
cs
xor
sub
dec
or
rclb
adc
push
xor
xchg
pop
cmp
int3
scas
xor
pop
stos
arpl
lock
sub
leave
pushf
outsb
dec
clc
data16
out
xor
or
sar
stc
daa
js
xchg
lcall
xor
inc
nop
repnz
cwtl
mov
lahf
add
xlat
pop
scas
lcall
in
das
adc
push
cmp
ds
mov
inc
xchg
mov
test
aas
mov
pop
push
mov
dec
mov
loop
insb
sub
outsb
sarl
sub
pop
sbb
jp
xchg
jbe
stos
or
jecxz
sbb
aas
pop
lret
push
test
jp
jmp
mov
lcall
push
xor
adc
fildll
or
pop
mov
rcr
jae
ss
aam
jbe
sub
mov
daa
or
mov
or
mov
ss
pop
jp
or
mov
adc
push
mov
cwtl
or
mov
mov
imul
pop
fsubrs
inc
stc
js
jnp
sarl
xchg
or
jle
cmc
shll
ss
or
repnz
inc
call
adc
and
push
ret
sbb
sbb
cmp
add
push
and
push
cmp
sub
xor
outsb
mov
add
push
or
jmp
out
cld
adc
adc
mov
mov
aaa
xchg
lcall
int3
or
out
push
addb
ljmp
filds
xor
test
je
mov
and
imul
fs
jo
popa
or
stc
mov
fldenv
pusha
pop
xchg
jae
into
dec
sbb
push
add
sub
lods
icebp
scas
adc
dec
xchg
pop
jb
sbb
cmp
ss
xor
mov
adc
inc
push
sub
xor
out
xor
pusha
pop
or
mov
nop
push
negb
jg
in
sbb
xchg
cli
fcmovnu
stos
dec
fwait
cmp
pop
sar
push
adc
mov
cwtl
jo
adc
out
dec
xchg
jo
xchg
lds
jmp
push
or
mov
js
sub
aam
xor
push
sbb
test
adc
inc
lods
idiv
mov
ficoml
scas
mov
mov
mov
outsb
jae
insb
mov
cltd
xchg
int
aas
mov
add
cli
ljmp
stc
cmp
jmp
outsl
jle
push
sub
dec
mov
or
fldcw
nop
adc
loope
sar
mov
mov
mov
inc
pause
icebp
outsl
push
enter
push
push
loope
rep
xor
and
jmpw
lods
inc
pop
dec
jno
mov
and
sub
sbb
and
inc
xor
daa
fidivrl
sarl
push
cmp
jge
xchg
jl
adc
push
push
xlat
mov
in
push
and
filds
add
sti
and
in
and
dec
cmp
into
dec
xchg
lret
pop
scas
jnp
or
fcom
sbb
mov
pop
sbbl
cmp
and
xchg
fidivrl
cs
pop
fldl
aas
mov
test
jge
movsl
imull
imul
jns
shll
rcrb
and
loopne
test
cmp
mov
les
pop
fs
adc
and
xchg
fistpll
sub
push
and
btr
push
ss
pop
fdivs
sti
add
xor
das
pop
inc
sub
lds
xor
sub
enter
ljmp
push
and
adc
outsl
xchg
insl
ss
lods
jl
stos
push
lahf
push
mov
mov
mov
xor
rolb
cmpsb
cmp
xor
movsb
dec
mov
push
into
adc
dec
mov
mov
lret
div
sbb
ss
mov
mov
sbb
pop
dec
daa
sbb
mov
xchg
xchg
or
or
push
inc
pop
jg
xchg
imul
movsb
sbb
sub
call
dec
push
rcrl
sbb
and
daa
sbb
push
and
aam
sub
sub
fincstp
sbb
in
inc
pushf
lcall
dec
push
std
mov
pop
movsb
test
pop
pop
mov
cmpsb
add
inc
stos
lret
sub
pop
dec
repnz
in
nop
les
sti
push
pop
inc
push
insb
jns
and
xchg
add
bound
adc
mov
mov
adc
mov
mov
mov
std
rcrl
popf
inc
fmuls
dec
mov
and
jge
fs
or
sbb
add
ja
mov
cmp
cmp
sub
dec
or
pop
and
fwait
lds
jle
sbb
ret
mov
mov
fwait
mov
stos
sahf
push
into
xor
lret
jp
sbb
dec
adc
jns
scas
pop
jmp
das
jnp
xor
cmp
adc
jmp
fcomip
cmpsb
test
jbe
cwtl
or
hlt
int3
mov
sti
inc
xor
mov
add
cmpsl
push
or
cmp
ds
lret
jp
div
int3
xlat
rcrb
aad
stos
fsubrs
call
addb
movsl
adc
mov
pop
fdivrl
add
and
dec
mov
xor
int
xchg
hlt
popf
jecxz
inc
data16
add
lahf
out
dec
pop
mov
and
shlb
fyl2x
ljmp
jge
adc
in
cmp
and
jbe
andb
xlat
jnp
and
dec
jl
xchg
mov
pop
stos
je
cmp
pop
mov
aas
mov
mov
std
fdiv
push
data16
hlt
nop
sbb
push
test
add
push
in
push
jns
dec
dec
into
aaa
lret
lock
dec
xchg
stos
jmp
out
pop
mov
xchg
cmp
enter
jmp
shl
jns
pop
jmp
adc
and
or
mov
dec
xor
push
bnd
push
lock
scas
cwtl
mov
ficoms
lds
fnstcw
cwtl
mov
pushf
aam
add
rcrl
cmp
pop
inc
sbb
pop
push
bound
dec
xor
push
aam
jp
cmp
stos
jb
mov
adc
xor
mov
cmp
cs
xor
in
sbb
xor
xor
add
mov
jmp
cmp
cmp
mov
lcall
add
call
lahf
jns
mov
cmpsb
scas
mov
sahf
into
fidivs
pop
test
or
out
fcomip
out
dec
cmp
add
or
push
mov
pop
push
push
mov
bound
je
hlt
aas
in
push
xchg
push
adc
outsl
inc
aaa
ljmp
push
arpl
in
fidivs
mov
nop
sbb
sub
sbb
movsb
mov
insl
jge
call
and
adc
xchg
mov
mov
cltd
sub
es
cmp
cmp
andl
leave
jmp
xchg
xor
push
jae
inc
dec
cmpsl
jb
xchg
push
sbb
call
data16
cmp
and
rcll
jns
sbb
push
mov
std
leave
adcb
push
inc
lret
xchg
dec
lock
pop
pop
mov
popl
int
test
jo
cwtl
fdivs
hlt
xor
sbb
jnp
jecxz
jle
or
mov
gs
pop
push
pop
mov
sub
fisttps
jecxz
ja
xchg
lcall
in
fbstp
mov
out
mov
xor
mov
loopne
cltd
dec
sahf
sub
mov
nop
mov
das
mov
lcall
and
int3
cmp
std
mov
stos
cmp
popa
es
test
push
dec
je
out
test
addb
push
push
iret
xchg
pop
cmpsl
sbb
mov
stos
nop
dec
fnsave
xchg
pop
sub
push
jle
shll
or
dec
mov
clc
aas
in
inc
mov
sub
inc
push
lds
pop
clc
jno
mov
fcmovu
popf
jnp
mov
sti
movl
sbb
js
hlt
mov
loopne
xor
adc
inc
pop
mov
push
push
xlat
addr16
push
jg
add
dec
jmp
testb
ficompl
cmpsb
dec
mov
mov
andl
add
push
pusha
xor
push
adc
cld
push
lret
std
add
and
pusha
sub
outsl
faddl
rcrb
out
cltd
aad
in
mov
mov
sti
or
push
and
dec
adc
sti
mov
pop
icebp
das
aas
inc
xor
ljmp
shl
out
jns
jp
stos
push
push
sbb
test
sahf
mov
out
mov
sub
outsl
fnstsw
and
xchg
into
arpl
dec
and
jecxz
mov
adc
cmp
cmp
cmp
jno
cli
imul
insb
hlt
or
inc
js
xchg
and
mov
or
mov
and
cs
sbb
adc
adc
sub
movsb
pop
jecxz
mov
or
subb
faddl
cs
leave
mov
addr16
shrb
ljmp
inc
xchg
or
mov
add
sub
sarb
xor
sbb
sbb
cmp
sbb
or
push
cmp
cld
mov
mov
mov
xor
cltd
xchg
imul
jecxz
adcl
or
and
loop
jns
jl
sub
arpl
push
or
pusha
push
push
daa
movsl
dec
push
test
xlat
sbb
sarb
mov
pop
inc
add
dec
xchg
xor
fwait
inc
or
test
pop
inc
cmp
dec
ja
cmp
sbb
push
fsubrl
gs
pop
xchg
and
push
sbb
fs
mov
or
xor
sbb
pop
sbb
out
je
stc
sub
adc
loopne
nop
mov
adc
into
jge
sti
nop
adc
add
sarl
ljmp
pop
nop
leave
fisubrs
lods
mov
scas
mov
mov
xor
outsl
iret
dec
jmp
mov
js
mov
rorl
fnstenv
aad
sub
or
movsl
push
dec
push
fiaddl
das
testl
cmp
mov
stos
enter
xlat
lock
sbb
fcmovne
adc
dec
sti
call
adc
test
push
pop
or
ficomps
push
sub
xchg
cltd
mov
push
adc
lds
xchg
jl
push
lret
ss
mov
jmp
jo
pushw
pop
mov
int3
cmpsb
cmpsl
cmp
into
xor
cld
add
popf
xchg
leave
sbb
test
es
loop
dec
fucomp
test
xor
popf
and
jge
fstps
xchg
mov
fbld
dec
dec
loop
loope
xchg
andl
adcb
sahf
mov
rcrb
xchg
mov
shlb
fwait
dec
ja
sbb
mov
cmp
xlat
call
cli
and
inc
add
fsts
xor
cltd
inc
cmp
fs
pop
cmp
mov
add
nop
and
in
repz
add
mov
push
stos
dec
test
mov
movsl
mov
or
inc
cmpsb
stos
clc
mov
mov
inc
jl
push
jbe
jnp
mov
and
data16
pusha
popl
rcll
call
insl
push
movsl
stos
fstps
loop
out
xchg
stc
js
mov
addl
push
jb
push
fwait
jp
aad
adc
adc
cmc
and
repz
jge
sbb
mov
xor
in
pminub
repz
dec
shlb
test
mov
mov
idivl
loopne
cmp
stos
sarl
fwait
js
insl
mov
mov
nop
ret
jno
rcl
popl
test
pop
add
adc
pushl
mov
cmc
aaa
mov
xor
test
cmc
mov
and
cmp
push
std
sub
or
cmpsl
ja
pushf
orb
cmp
nop
jno
sub
cmp
jg
fldt
icebp
out
sub
sub
popf
pop
lret
adc
jb
cmpsb
inc
mov
sbb
imul
lret
fstps
insb
sub
pop
jmp
pop
cmp
push
shl
movsb
dec
cwtl
pop
pusha
inc
inc
cmc
std
xchg
sub
div
out
dec
mov
sbb
lret
daa
fisttps
js
stos
cmp
cli
adc
and
movsb
mov
das
sbb
inc
call
adc
sbb
sbb
or
dec
shrl
xchg
push
cltd
sub
or
push
testl
xchg
mov
sbbb
mov
fs
enter
inc
sbb
adc
xlat
aam
aaa
sbb
lods
add
or
or
shl
add
mov
out
movsl
cli
lret
mov
mov
cld
jmp
outsb
ss
repnz
mov
push
lods
xorl
mov
int
lcall
ret
repnz
lret
fs
insl
push
pop
mov
fisubl
loopne
mulb
xlat
jo
lods
les
mov
cmp
stos
nopl
lcall
sub
pop
cwtl
dec
aad
test
jecxz
add
sub
sbb
orb
aad
or
sbb
dec
je
lret
sub
in
pop
inc
popf
arpl
and
addr16
xchg
mov
and
mov
adc
lods
ja
mov
cld
addb
out
sbb
scas
xchg
cld
add
dec
inc
xchg
sarb
nop
add
cmc
fistpll
testl
sub
xor
push
jns
jge
lods
lret
out
pmullw
pop
and
test
mov
scas
sbb
lret
and
daa
xchg
jns
mov
xor
sub
out
les
and
arpl
and
and
lds
mov
rorl
or
ficoms
clc
xchg
in
shll
sbb
test
xor
and
or
jb
add
dec
addr16
pop
imul
mov
vpsrlw
and
sub
inc
mov
cmp
adcl
adc
cs
fwait
jbe
repz
mov
fadd
mov
jg
js
hlt
add
jge
mov
fidivrl
aas
mov
gs
push
sar
sbb
xchg
push
sbb
or
out
jecxz
jne
dec
or
out
inc
lea
mov
pop
arpl
and
cld
or
loope
cmc
repnz
and
inc
xor
mov
cmp
lahf
ja
pop
sarl
add
sub
dec
xchg
popf
add
sbb
pop
xchg
lods
pop
fwait
adc
cmp
dec
mov
push
pop
cmc
add
push
push
in
push
pushf
popf
xor
sub
inc
add
add
xlat
xchg
movl
aam
ret
ret
sar
call
popa
cmp
subb
mov
sarl
push
jmp
in
stc
into
dec
pop
pop
push
test
scas
call
push
xchg
test
insl
aaa
call
outsb
add
sub
fidivrl
lds
push
inc
or
rolb
jb
add
push
sbb
mov
xchg
rclb
push
cs
mov
stc
cltd
mov
mov
imul
push
cmp
pusha
imulb
mov
push
leave
add
or
hlt
dec
sub
fcomps
std
adc
add
mov
hlt
imul
xor
xor
cwtl
or
add
stos
or
jns
or
std
mov
lods
jl
adc
sub
insb
sbbl
xor
push
daa
mov
cmpsb
cmp
dec
or
insb
dec
pop
add
pop
sbb
in
cli
push
cmp
inc
mov
cmpb
xchg
lcall
mov
jae
fcmovne
adc
icebp
stos
sub
adc
jno
jnp
xor
or
icebp
pop
jae
dec
mov
inc
or
enter
xchg
jp
pop
mov
sbb
movl
adcl
xchg
inc
dec
mov
and
sbb
aas
popa
pushaw
mov
pop
ljmp
bound
mov
imul
in
rcr
movsl
daa
dec
sub
and
adc
mov
mov
gs
setno
sub
es
mov
fnsave
sub
popf
sbb
cmp
push
mov
pop
test
inc
sub
xchg
xchg
mov
sbb
dec
sbbl
cmpsl
in
push
adc
mov
stc
gs
or
inc
cmp
ja
aaa
lret
sub
call
fwait
jne
pop
aam
clc
cltd
loopne
cld
adc
clc
imul
std
adc
push
sub
addr16
in
mov
or
pop
rcrl
cmp
out
fwait
add
rcll
adc
sbb
cmpl
mov
cmp
jmp
mov
insb
adc
out
or
stc
sub
scas
cmp
stos
imul
mov
test
lds
out
jbe
loopne
scas
mov
jg
mov
and
push
or
shlb
sub
add
insl
ljmp
adc
lods
call
jo
jp
in
xlat
mov
arpl
js
mov
and
rcll
cmp
xor
movsb
imull
cld
mov
sbb
in
mov
add
sub
sub
fs
enter
xlat
loop
ret
pop
or
jno
mov
inc
out
adc
test
adc
std
pop
arpl
pop
inc
mov
mov
push
mov
punpckhwd
addr16
ret
sub
sub
mov
xor
subb
adc
mov
int3
rcrb
or
xchg
sbb
sbb
mov
push
add
dec
mov
imul
lahf
inc
ret
lods
stc
adc
sbb
jl
mov
sahf
loop
adcb
mov
popa
sub
loopne
imul
xchg
lret
xor
hlt
adc
jns
dec
sub
sub
mov
xor
pusha
push
negl
loope
jecxz
xchg
cmpsb
sbb
sbb
cltd
mov
dec
nop
leave
in
mov
push
xchg
xchg
lods
cli
jne
adc
fadd
aas
dec
shll
sub
dec
xchg
movsb
pop
insl
xorl
lea
or
mov
adc
test
lea
sbb
jae
movsb
bound
iret
out
add
sub
add
dec
idiv
movsl
lcall
in
sub
mov
rol
cli
aad
ret
decl
in
mov
les
push
loopne
rcll
jp
xchg
repnz
andl
and
cmp
push
sub
xchg
mov
xchg
sub
adc
push
xchg
movsl
inc
adc
mov
mov
lahf
lahf
pop
mov
stos
movsl
cld
outsb
in
cltd
cmp
xor
jne
ror
js
adc
out
or
mov
or
dec
leave
fistps
xchg
popa
add
or
mov
push
movsb
xor
lock
inc
pop
sbb
inc
cmp
faddl
lahf
leave
js
pusha
sbb
lods
cmp
neg
and
mov
sbb
or
mov
cmp
inc
les
sahf
push
jbe
frndint
cwtl
fwait
clc
inc
xchg
sbb
hlt
clc
rolb
das
rcl
mov
cs
inc
cwtl
xchg
lahf
dec
gs
and
mov
jmp
popaw
aad
mov
cltd
xor
adc
or
inc
add
enter
add
cltd
dec
lahf
xor
lret
mov
jb
jl
pop
mov
push
adc
es
ret
fwait
movsl
push
and
int3
sbbl
fcmovb
xor
in
sub
daa
out
sub
repnz
pop
lret
out
mov
fadd
lods
cmp
ret
pop
sbb
pop
adcl
jecxz
mov
push
mov
sti
test
loope
jecxz
ljmp
cwtl
clc
mov
in
cmp
sub
push
add
test
or
xchg
rclb
xor
or
rol
pop
pop
jnp
inc
fstl
inc
jecxz
sbb
jb
or
adc
push
sbb
clc
bound
ret
push
add
in
push
loop
xchg
ds
adcl
ljmp
lock
mov
test
xchg
cmpsb
sbbb
xlat
inc
pop
pop
dec
test
cmp
sbb
sub
fisubrl
mov
insl
pop
mov
movb
inc
lea
and
xchg
adcl
pop
sub
out
insw
sbb
lea
jbe
movsl
shll
movsl
xchg
sti
xlat
nop
adc
icebp
in
add
push
scas
rcrw
mov
loop
ss
shr
aad
pop
mov
jl
scas
jno
sbb
mov
pop
xchg
sub
cmp
nop
mov
mov
xchg
daa
lods
mov
add
aaa
rorb
popf
xor
popa
out
movsl
outsb
lods
out
mov
sbb
int3
and
lahf
mov
adc
pop
sbb
mov
or
imul
in
or
lret
pusha
jo
pop
lahf
sub
cmp
sbb
mov
dec
lret
shr
pop
pop
outsb
adc
inc
insl
pop
push
cmpl
push
mov
lods
and
das
sub
mov
addr16
jns
sbb
mov
pushf
mov
fwait
popa
ret
mov
cmp
cwtl
inc
or
in
lods
xor
fmull
mov
in
pusha
dec
push
lret
lea
sub
xchg
xchg
sub
fs
out
mov
jo
xchg
sar
loop
lret
xor
sub
out
xor
xlat
loop
xchg
pusha
xorb
pop
jno
cmp
sub
imul
out
call
in
cs
sub
mov
sbb
push
pop
jno
orl
sahf
adc
and
inc
sarb
dec
mov
mov
paddusb
cmp
daa
and
xchg
dec
xchg
sbb
addr16
and
in
ffree
fnsave
xchg
int
jns
fwait
jge
pop
test
push
jae
and
sbb
sarl
cld
pop
xor
je
inc
add
sbb
insl
pop
pop
repnz
xor
arpl
aaa
adc
shll
mov
fcoms
sbbb
cmp
dec
leave
or
add
out
mov
jnp
sbb
sahf
cmpsb
push
xor
and
push
dec
mov
mov
scas
adc
divl
int3
in
fnstenv
out
mov
loop
xchg
rcl
mov
dec
fnstcw
xchg
jae
sahf
sahf
mov
test
fwait
add
jbe
sbb
bnd
aas
jg
pop
fsub
fnstcw
pop
mov
xor
popf
jg
in
dec
mov
mov
jle
cmp
push
lret
mov
xchg
jge
adc
cmp
and
mov
je
loopne
test
outsb
pop
add
sub
pop
adcb
std
aas
jmp
mov
in
lds
pop
mov
outsb
lods
add
mov
mov
xor
aam
mov
or
jp
outsb
pop
jmp
test
and
jge
mov
pop
jb
aam
std
imul
ljmp
imul
nop
notb
push
je
mov
adc
gs
cmpsl
add
adc
hlt
addl
andw
sub
in
fcoms
scas
lock
sub
pop
jnp
fsubp
xchg
jl
lea
daa
cmp
in
and
or
jno
int
mov
test
stos
push
mov
sub
lahf
mov
data16
push
ljmp
test
sbb
fistpl
dec
jmp
sbb
xorb
outsl
icebp
fwait
sub
lds
lds
push
nop
inc
mov
jmp
stos
jmp
lea
in
xchg
xchg
je
out
repz
fcmovne
ficoms
jp
mov
dec
cmpsb
imul
lock
mov
jle
addb
sbb
mov
in
shll
add
and
inc
mov
cmp
or
hlt
mov
and
fldl
repz
js
fidivs
push
sti
xorl
sbbl
aas
pop
lock
fxch
fisubl
push
lock
and
test
scas
xchg
push
popf
movsb
inc
pop
cmp
jne
test
sbbl
cmp
xchg
push
cli
fsubl
lods
scas
or
stos
imul
cmp
xchg
popf
jg
cmp
loop
je
aad
mov
lret
test
push
les
sub
mov
xor
sbb
lgs
sub
out
xor
inc
popf
jp
and
mov
lcall
or
clc
cmp
inc
js
out
out
pop
cmp
and
out
jns
inc
dec
adc
push
insb
in
or
xchg
mov
sub
cmp
jno
mov
jno
inc
pop
sbb
je
imul
daa
or
pop
push
mov
inc
sti
pop
push
repnz
test
test
sahf
aaa
push
adc
and
dec
and
test
and
js
add
and
nop
mov
mov
push
cmp
xchg
pop
mov
incl
ja
lea
cmc
inc
sbb
dec
dec
sbb
mov
mov
mov
sub
out
outsl
stc
lds
in
out
sbb
pop
je
mov
inc
lock
adc
xchg
pushf
dec
stos
test
cmp
ret
jecxz
mov
lret
and
ja
js
iret
inc
add
mov
and
or
out
mov
and
sub
jge
cmpsl
sbb
sarb
pop
arpl
or
sub
mov
aaa
mov
gs
sub
push
loopne
xchg
jno
cmp
ret
cmp
pop
inc
les
arpl
in
pushf
mov
mov
mov
push
push
jo
jmp
xor
dec
fdivl
mov
stos
mov
cmc
ss
fdivrl
test
xor
jnp,pn
sub
loopne
out
pop
and
aaa
fsub
jle
mov
dec
dec
sbb
nop
and
push
push
fwait
das
lods
jp
lock
je
test
xor
data16
adc
es
adc
pop
or
in
sbb
xorl
pop
out
push
sti
movups
mov
sarl
outsl
mov
push
int3
loopne
xchg
insl
movsb
push
mov
scas
pop
addl
cmpsl
mov
mov
icebp
cmp
js
mov
std
or
test
and
xor
or
mov
push
jp
sarb
inc
xchg
mov
scas
jno
mov
inc
mov
dec
dec
lahf
loope
lret
cmp
push
mov
mov
arpl
dec
xchg
xchg
push
sub
loope
sub
sahf
inc
nop
idiv
cli
jp
mov
rorb
popa
cmp
jns
cmp
inc
loope
ja
mov
jecxz
popf
sbb
repnz
inc
xchg
adc
movd
aam
xchg
xchg
sarl
pop
ljmp
cmp
sarb
loop
push
movsb
xchg
mov
outsl
int
jp
sub
incb
fs
sub
jae
xchg
inc
loop
add
mov
test
nop
inc
jle
pop
mov
or
add
and
push
mov
std
pop
mov
out
xchg
mov
inc
mov
outsl
imul
adc
push
popf
cs
xchg
outsb
icebp
mov
lods
scas
pop
js
add
in
dec
subl
fmull
xor
mov
data16
or
lcall
jo
subb
cli
jmp
sbb
jmp
pop
clc
jecxz
in
or
pusha
cmpsl
inc
lcall
in
ffreep
sub
jecxz
xchg
inc
mov
aas
push
cs
jb
jmp
inc
jo
pop
cmp
and
cmp
mov
inc
test
in
insb
sbb
cwtl
lahf
add
adc
test
repnz
mov
test
sbb
xchg
push
fisubs
ja
jno
mov
lret
or
xchg
jmp
xlat
fs
pminub
adc
insl
inc
andl
popa
xor
fiaddl
jg
mov
or
pop
cmp
faddl
in
push
dec
fwait
pusha
sbb
xor
pop
outsl
incb
fistl
hlt
jecxz
loope
jne
mov
fsubr
aas
lods
or
jbe
dec
dec
cli
push
popa
es
adc
mov
inc
mov
pop
sub
push
jo
in
mov
mov
or
xor
sbb
stos
jmp
outsl
in
sub
arpl
call
pop
jmp
inc
mov
ret
jl
dec
addl
pop
xor
ffree
xchg
dec
jecxz
sahf
jo
mov
mov
xor
js
ret
lock
test
stc
data16
repnz
test
std
pop
dec
data16
jmp
pushf
ret
insl
fisubrl
in
xchg
add
insb
ret
test
call
in
data16
iret
pop
fisubrl
inc
mov
and
popf
addl
mov
loopne
push
or
gs
mov
sahf
pop
out
sub
ljmp
cmpsl
incb
mov
movsb
or
cld
xor
repz
dec
cmpsb
and
push
sbb
cld
std
and
xor
sbb
call
jbe
adc
insb
sarb
or
in
lret
fadds
xchg
sahf
mov
scas
xor
pushw
cmp
sbb
in
fldt
into
cli
cmpsl
inc
adc
nop
out
xor
sbb
lret
dec
shrl
push
push
inc
push
jg
fistps
imul
ficoml
repz
in
inc
inc
bound
rcl
aas
xchg
aas
cli
std
aaa
jne
xchg
adc
out
enter
jbe
cwtl
aaa
cmpsb
repnz
loope
xor
pop
adc
sub
movsb
jo
fcoml
call
sbb
jl
sub
mov
lcall
fimull
mov
add
jns
ds
fdivrp
xchg
fidivs
outsl
cltd
ljmp
lcall
pop
push
repnz
xchg
pop
mov
pushf
lret
sbb
lods
sbb
das
jnp
push
cli
js
loop
mov
aas
pop
pop
dec
leave
push
inc
hlt
movsl
imul
jmp
cmp
icebp
xor
and
push
or
dec
mov
les
cmc
sbb
sti
xchg
mov
lcall
in
loope
js
enter
mov
js
cs
repnz
mov
sub
stos
lods
lret
mov
adc
fldenv
mov
push
inc
stos
jg
outsl
mov
into
roll
sub
mov
mov
dec
lods
stos
cmpsl
mov
jecxz
sub
cs
or
adc
pop
xchg
sub
pop
pop
dec
xchg
notb
test
inc
add
aaa
add
pop
mov
or
xchg
sbb
popf
adc
cmp
pop
cmp
jle
add
xor
xchg
sub
or
xchg
xchg
push
cmp
cmpsb
int
cltd
mov
popf
shlb
jne
lahf
mov
rorl
mov
in
fcmove
and
push
add
loope
sbb
int3
dec
mov
and
jne
rclb
jno
or
lods
push
fsts
push
add
jge
jp
repz
insb
xorb
adc
push
dec
gs
orl
pop
xor
mov
sub
sbb
xchg
enter
in
push
add
mov
call
sbb
dec
jg
xchg
dec
cltd
aad
repnz
addr16
les
xchg
ret
pushf
jge
clc
push
jg
push
jge
inc
pop
sub
test
add
sub
adcb
mov
out
loop
je
je
lods
xchg
stc
mov
out
loope
xlat
sahf
pop
or
into
sub
cmc
in
fs
cmp
push
add
test
xor
out
call
mov
stc
mov
mov
mov
stc
xor
jae
jno
outsl
sbb
hlt
mov
jmp
xchg
stos
dec
inc
rcll
and
adc
divl
loope
mov
xchg
lret
xchg
cmpsb
mov
xor
pop
xor
js
or
repz
pop
ljmp
cmc
std
in
push
cltd
jecxz
addr16
insl
and
pop
mov
cli
cmp
push
fnstcw
lcall
inc
mov
loopne
enter
int
inc
xor
iret
in
mov
dec
push
pop
idiv
or
add
xchg
add
push
inc
ja
sarb
lock
add
cmp
add
pop
imul
pop
adcb
adc
mov
xlat
xchg
je
inc
sbb
data16
mov
push
cmp
pushf
add
in
cmp
out
sbb
mov
and
and
jge
int
mov
push
push
mov
or
dec
inc
adc
mov
and
negl
das
jne
ja
dec
push
add
sarl
jle
call
xchg
in
mov
std
ja
xchg
lods
mov
adc
push
sub
pop
iret
jmp
mov
mov
cmpsb
mov
sub
inc
jb
negb
out
insb
cmp
fs
je
xlat
dec
xlat
xchg
mov
cmp
or
dec
mov
xor
scas
mov
xchg
insl
in
inc
mov
cld
cmp
lahf
fidivs
cld
sar
imul
ret
xor
sbb
rclb
subl
push
outsl
adc
mov
outsl
inc
and
adc
daa
or
inc
shlb
test
jae
in
jne
sub
mov
outsb
push
dec
xor
leave
popf
cmp
xchg
jl
fists
xor
fwait
jo
lods
pushf
aaa
mov
jle
rcrb
lcall
inc
inc
in
inc
cmpsl
loopne
mov
cmp
xchg
dec
xor
lods
shrl
movsl
imul
aad
into
into
ret
std
cmpsl
ljmp
dec
std
scas
push
push
xor
or
orb
addb
cmc
aaa
jnp
pusha
dec
or
jp
divb
decb
mov
push
iret
imul
sbb
je
loop
cmp
jno
sbb
outsb
lret
mov
sub
ds
jp
rorb
xchg
push
pop
mov
pop
mov
sub
out
xchg
add
mov
in
enter
push
repz
sbb
inc
rcrl
lcall
outsl
loop
rcll
test
enter
imul
cld
sbb
int3
popa
jmp
adc
jle
push
mov
scas
icebp
repnz
cmp
cmpsb
pop
and
aad
xor
xor
movsl
mov
mov
mov
mov
dec
lods
sahf
into
fstpl
jb
xchg
adc
mov
cmp
mov
je
fisttps
jns
mov
imul
mov
dec
cmp
mov
jecxz
stos
clc
pop
dec
fucompp
and
xor
insl
aam
adc
lods
pop
mov
mov
cld
shl
pop
pop
test
mov
fsts
xchg
add
jg
lods
fs
out
or
lcall
cmp
pop
ficompl
mov
sub
daa
mov
xorb
jbe
movsb
int3
fs
ret
ret
add
add
xchg
decl
orb
popa
xchg
sbb
xchg
repnz
pop
push
adc
mov
lcall
in
pop
shrb
arpl
xor
mov
mov
bound
mov
push
push
inc
cmp
out
or
jae
bound
adc
data16
pop
pop
mov
sbb
pop
shl
test
bound
out
cmp
lods
add
loopne
dec
jl
add
andb
push
xchg
push
inc
mov
rorb
push
adc
jecxz
adc
adc
fsts
mov
fidivrs
movsl
or
xchg
add
subl
lahf
push
and
das
cmp
popf
cmp
xchg
rolb
or
pop
push
mov
pop
jne
xor
xchg
sbb
sub
mov
jae
mov
or
mov
cmp
cmc
sahf
lcall
fxch
sbb
pop
jne
std
xlat
popa
mov
mov
sbb
movsl
mov
mov
push
in
sbbb
ret
jle
jl
pop
push
pop
dec
ret
mov
dec
push
xor
arpl
in
pop
int
push
pop
rol
xor
data16
pop
push
insb
push
fists
cwtl
jo
sti
les
or
adc
push
outsb
sbb
das
adc
xor
xchg
or
inc
loopne
mov
mov
mov
pop
add
push
jo
enter
xchg
dec
push
cmp
movaps
std
mov
mov
jp
mov
jp
mull
cmp
out
stos
outsl
or
daa
push
push
adc
adcl
fwait
aad
adc
and
adc
jbe
sub
inc
add
push
push
ret
mov
in
add
lahf
lcall
inc
fstps
cmp
fmuls
aas
adc
stos
mov
xor
jno
adc
stos
rcl
add
mov
jge
int3
mov
push
adc
mov
pop
dec
push
arpl
loopne
mov
xor
xchg
pushf
xor
out
add
cmp
inc
inc
sbb
int3
sub
pop
and
dec
outsb
mov
mov
stos
es
fwait
push
push
subl
cmp
movsl
jae
jae
push
mov
aad
pusha
mov
test
adc
in
pop
pop
or
mov
push
enter
or
int3
fcmove
mov
daa
mov
test
addr16
push
lret
lea
jl
fcompl
dec
cmc
inc
outsl
lods
jg
jbe
test
or
out
jno
mov
test
xchg
fxch
mov
out
push
cmp
push
mov
jbe
test
dec
cmp
movsb
mov
push
adc
mov
idivl
lret
lea
mov
ret
dec
pop
push
ret
cs
xor
lods
push
fs
popa
cwtl
int
mov
mov
hlt
xchg
inc
jae
push
add
jg
iret
jmp
jl
outsb
dec
xor
into
xor
out
dec
mov
inc
sarb
cltd
arpl
leave
push
and
movsl
push
or
xchg
dec
sti
mov
hlt
xor
ljmp
int3
out
mov
test
add
jl
push
popf
loopne
stos
jbe
xchg
ss
int
imulb
movsb
pop
sbb
pop
adc
mov
add
fcom
pop
adc
lahf
or
or
add
push
fdivrl
and
push
ja
jbe
daa
rclb
lret
inc
jne
push
add
mov
or
lahf
mov
movsb
inc
adc
out
fdivrp
or
mov
mov
mov
dec
jle
and
pop
push
jno
aaa
xchg
movsl
movsl
sbb
mov
add
aam
mov
mov
xor
inc
add
adc
pop
cld
dec
call
push
push
mov
jle
adcb
incb
repnz
jb
pop
shl
int3
orl
push
lcall
pop
test
mov
pop
daa
dec
sub
add
cmpsl
int3
fiaddl
imul
cmc
int
xor
lcall
xchg
lock
xchg
pop
out
loop
and
das
lock
sarb
push
mov
das
call
mov
fmul
push
add
scas
test
scas
adc
pushf
xchg
dec
repnz
lahf
add
add
xchg
incl
sbb
iret
test
mov
sbb
push
or
lcall
inc
inc
xchg
add
aas
inc
mov
imul
cmp
inc
push
xchg
push
xchg
jge
xchg
sub
push
jae
lods
fcmovnb
daa
ja
je
dec
push
mov
sbb
mov
and
push
add
push
stos
fcom
xchg
dec
test
xchg
jns
push
clc
xchg
fs
pop
fs
bound
leave
xchg
scas
scas
out
dec
imul
jnp
call
sub
xor
gs
in
sub
cli
xor
jb
in
stc
out
ret
subl
repz
int
in
pop
sub
mov
adc
push
mov
jno
mov
aaa
mov
fsubr
test
inc
xor
pushf
sbb
fiaddl
repz
dec
jae
cmp
mov
xchg
or
scas
sub
adc
pop
lds
jnp
push
or
inc
sbb
and
push
xchg
dec
dec
jae
jb
les
and
jno
sub
push
sbb
dec
push
inc
rcr
dec
pop
cmpsb
outsb
nop
shlb
push
mov
xchg
ss
sarb
pop
or
cmc
fcoms
push
push
in
adc
addr16
lods
cmc
or
stos
adc
pop
mov
movsl
jno
pop
out
inc
ss
leave
es
sub
and
push
sti
pop
mov
sbb
sbb
xchg
rcrb
shll
je
or
jl
inc
mov
shr
lds
rcll
test
mov
inc
mov
mov
lcall
mov
mov
jnp
push
dec
cmp
adc
bound
and
cmp
jnp
popf
adc
ja
or
adc
in
mov
mov
sahf
test
mov
popf
mov
mov
jl
mov
or
ret
and
add
pusha
ret
adc
addr16
ds
imul
cmp
cmpsl
mov
out
nop
pop
mov
popa
das
cmp
sbb
add
mov
or
js
jmp
mov
scas
mov
and
rolb
jno
mov
clc
stc
bound
cmp
jns
dec
push
dec
imul
jns
mov
dec
repz
inc
xchg
push
pop
lods
rcr
jae
or
out
push
fistpl
sarl
outsl
lds
xor
out
dec
mov
mov
int
adc
jle
fstpt
adc
mov
jo
pusha
add
jp
mov
filds
inc
sti
sub
mov
mov
test
hlt
xchg
icebp
pop
test
mov
xchg
inc
aam
stos
outsl
hlt
cmpsb
mov
pop
sti
fnsave
js
int
call
inc
pop
cmp
fisubrl
jl
mov
pop
aad
dec
les
or
mov
jbe
mov
mov
sti
repz
push
arpl
dec
stos
push
ret
punpckldq
mov
test
or
sub
leave
inc
insl
jnp
mov
jae
fmull
repnz
in
mov
xor
cmp
inc
cmp
fs
sub
ljmp
in
ror
cmp
push
fcoml
stos
cmp
leave
mov
pop
mov
arpl
inc
and
or
or
push
stos
bound
int3
mov
jne
mov
in
adc
hlt
sbb
push
mov
bound
jne
sbb
js
inc
lds
dec
xor
adc
xlat
rorb
cltd
mov
cmp
popf
cmp
pop
cs
dec
lahf
or
fldln2
stc
mov
in
xchg
cmp
jb
std
inc
insl
sbb
xchg
and
lret
les
cmpsb
jmp
adc
xor
in
sar
icebp
in
iret
push
adc
lods
pop
lcall
dec
mov
sbb
rolb
cmc
fidivl
pusha
dec
dec
pop
ret
and
cmp
sbb
or
fmul
ror
push
ds
por
es
and
xchg
ds
dec
lea
jae
sahf
sbbb
stos
cmp
stc
push
mov
arpl
xchg
dec
dec
test
sub
sti
inc
mov
xor
repz
cmc
pop
push
movsb
mov
cs
mov
xchg
push
cmpsl
icebp
mov
cmc
and
mov
xchg
mov
ljmp
jmp
mov
push
xor
or
fs
lods
xor
gs
cmp
imul
fadds
and
sub
daa
outsb
adc
in
out
push
out
rol
push
adc
mov
int3
test
imul
testl
sub
pusha
shll
fcomip
or
insl
lret
jo
inc
push
xrstors
and
add
inc
pop
cmp
push
jnp
mov
insl
lret
cmp
int3
mov
add
or
xchg
xchg
icebp
subl
xor
jns
xlat
call
sbb
inc
adc
jbe
jle
lods
push
push
pop
and
fs
js
iret
sbb
sub
push
sahf
lds
and
adc
xchg
pop
jl
hlt
mov
imulb
mov
or
pop
xchg
mov
or
ret
dec
icebp
loope
inc
add
or
mov
ja
mov
outsb
mov
stc
pop
cmpsl
aam
lods
loopne
lahf
push
adc
xchg
icebp
sub
ret
dec
arpl
xchg
add
sti
adc
es
lahf
sub
ret
sbb
lea
jle
call
dec
cli
xor
mov
fs
decl
mov
pop
xor
es
pop
and
xor
xchg
in
mov
pusha
sub
hlt
xor
fistpl
cs
in
fwait
cmp
cmpb
dec
or
cmp
sbb
push
xor
mov
pop
inc
repz
pop
mov
cmp
cmpsb
repz
clc
mov
pop
inc
sbb
shrl
fistl
int
cmp
lea
xor
xorb
dec
or
out
mov
in
pop
and
mov
add
jg
pop
sbbb
jno
mov
pop
push
mov
div
sbb
and
mov
out
push
cli
dec
test
adc
mov
mov
sub
shrl
subl
mov
mov
les
xchg
rcl
sub
push
cmp
sbb
cmc
inc
rorb
dec
clc
and
int
pop
clc
flds
mov
icebp
outsb
fs
rol
ret
mov
sarb
sub
loopne
adc
into
scas
jmp
insb
in
xbegin
jp
pop
add
mov
xor
incb
and
mov
sub
sbb
daa
loop
and
rcrl
xor
imul
sub
popa
ss
addb
call
pop
jno
insl
cmp
aaa
mov
cmp
out
jg
aaa
shlb
pushf
cmpsb
mov
mov
js
adc
mov
out
pop
fwait
adc
ljmp
rol
add
mov
ljmp
cmp
inc
and
add
stos
icebp
jmp
adc
loopne
lret
popa
xchg
fnstsw
insb
test
xor
dec
pop
cld
pop
jae
sbb
rcl
mov
jno
out
movsl
test
cmp
test
cmp
es
pusha
push
and
lods
push
jbe
push
negb
xor
ja
shll
addr16
test
pushf
int
insl
jbe
mov
cltd
ret
xchg
je
mov
mov
jnp
test
mov
ljmp
imul
pop
sahf
arpl
ss
mov
ljmp
or
mov
daa
daa
bound
cmp
hlt
aas
xor
adc
inc
or
bound
cmc
mov
int3
lds
xor
sbb
lock
add
test
and
rcll
jno
ljmp
int
addr16
js
push
out
aas
stc
and
adc
rcll
lret
push
add
add
or
ja
cmp
add
pop
insl
loop
inc
addr16
getsec
sub
push
sahf
mov
scas
inc
push
push
in
jno
pop
repz
mov
add
push
sbb
mov
in
cmpb
das
mov
push
jne
inc
inc
mull
adc
cmc
bound
int
cmp
jnp
cltd
mov
cmpsb
outsl
stos
outsb
imul
inc
mov
rclb
push
mov
popa
cmp
xor
cmp
sbb
adcb
mov
mov
testb
aad
cmp
gs
mov
inc
push
adc
mov
jle
jecxz
jnp
xlat
mov
jns
movsb
adc
pop
dec
daa
mov
xchg
dec
iret
fists
push
fs
ret
adc
push
outsb
scas
shr
scas
xchg
mov
leave
and
cmp
and
popa
maxps
mov
xor
push
mov
jbe
cmp
aas
xchg
jecxz
adc
adc
fdivrs
mov
ljmp
lret
adc
or
jl
jae
into
movsl
pop
test
push
xor
fsubr
pop
xchg
or
leave
cmp
enter
aad
mov
dec
add
lods
pop
mov
jae
out
and
mov
dec
mov
sub
pop
cmpsb
jae
cmp
push
int
cwtl
jge
xchg
jge
pusha
dec
xor
adc
and
jns
mov
and
mov
dec
push
cmp
fwait
repz
push
loopne
and
jl
or
lea
in
pop
lcall
cmpsb
xchg
jl
repz
sti
xor
out
subl
hlt
popf
hlt
cs
daa
jecxz
rep
arpl
push
scas
jo
pop
out
jle
mov
or
je
ljmp
sub
ss
cltd
insb
pushf
jg
sbb
das
cmp
mov
lods
dec
mov
push
xchg
sub
stos
mov
or
mov
add
enter
mov
push
mov
cs
sahf
dec
dec
xchg
enter
xor
movsl
out
cmpsb
cmp
dec
fs
jp
xchg
push
pop
xor
int3
mov
int
adc
loope
out
test
js
sbb
and
cs
rcl
mov
add
xchg
lds
add
in
or
xor
pop
dec
mov
in
cltd
fimull
imul
ja
icebp
sub
fucom
cli
sahf
xor
mov
aaa
leave
inc
jp
inc
inc
ret
xchg
mov
fucomi
cmp
xor
and
leave
mov
aad
aam
sub
stos
lock
adc
cmp
repz
add
lock
imull
or
dec
mov
pusha
aam
pop
ljmp
sahf
pop
mov
cmpsb
test
sbb
jno
rorl
lds
mov
push
fimull
pop
dec
mov
jp
adc
lock
inc
jp
pop
test
push
clc
dec
dec
dec
mov
imul
lea
xor
adc
sarb
xor
mov
cld
test
rcl
and
test
lock
in
cmp
push
ds
test
and
and
cmp
clc
shl
scas
push
aad
and
push
ja
xor
mov
inc
stos
pop
pushf
aaa
loopne
out
ror
sub
xchg
push
shl
jb
aad
mov
pop
shll
push
fisttpl
movsl
dec
jno,pn
lret
aad
xchg
rorb
sub
lret
jne
nop
push
in
sbb
jmp
push
cmpl
sub
xor
arpl
jle
push
lea
cmp
sub
inc
iret
enter
sbb
xlat
adc
xchg
dec
cwtl
jno
mov
sbb
enter
int3
and
pop
push
out
xchg
cmc
call
sbb
fs
push
cmp
in
cmpsb
and
imul
mov
jg
lds
popf
outsb
cs
adc
cmovnp
fisttps
insb
xchg
xchg
dec
mov
and
insb
rcll
sub
cmp
pop
aaa
jle
in
out
lea
mov
jl
loope
pop
push
xor
cld
pop
mov
sub
mov
pop
int
mov
or
xor
aam
aaa
daa
mov
ret
pusha
push
scas
pop
push
mov
add
sub
dec
mov
roll
jae
cmp
jle
xchg
outsl
sahf
xchg
sbb
ljmp
and
movsb
sub
add
pop
xchg
sub
stos
test
and
test
data16
sarl
sub
lret
cmc
pmullw
outsl
mov
and
call
dec
mov
cmp
clc
inc
sbb
popa
pop
out
xor
push
ds
and
inc
push
sub
mov
or
and
in
push
jl
add
xor
inc
xor
jecxz
inc
dec
and
add
adc
fcmovnbe
sti
mov
jecxz
daa
push
popf
in
xorl
mov
and
les
stos
insb
xchg
scas
xchg
jmp
fnstcw
shll
pushl
imul
mov
push
mov
jecxz
fwait
js
test
imul
jmp
in
loopne
mov
mov
fldenv
clc
rorw
sar
icebp
dec
adc
mov
imul
sub
xor
insl
ss
icebp
imul
xchg
hlt
outsl
mov
dec
int
sub
push
loopne
pop
jg
add
inc
xchg
xor
lldt
out
mov
je
les
mov
mull
inc
inc
mov
ficompl
ffree
dec
mov
fldl
ja
aas
fidivs
dec
sahf
das
inc
xchg
sti
xchg
xor
testl
or
popa
cltd
pop
in
mov
rcl
cs
aad
shl
inc
mov
xchg
mov
cmpsl
mov
daa
mov
pop
pop
sub
jae
mov
pop
popa
or
out
dec
inc
pop
cmp
sahf
popf
sbbl
dec
lea
stos
mov
mov
je
clc
mov
pop
sub
aad
pop
outsl
mov
cmp
popf
xchg
jo
cmpsb
add
jle
out
jae
xor
mov
cmp
sub
inc
dec
pop
dec
aad
sbb
xchg
ljmp
jle
inc
sub
pop
outsb
aaa
rol
je
lret
mov
push
jle
rolb
inc
add
sub
add
adc
pop
cmp
fmull
in
xchg
sbb
push
jnp
enter
cmp
arpl
and
mov
daa
cwtl
pop
jbe
nop
mov
adc
inc
jecxz
pop
outsb
sub
and
popf
fistpl
in
jecxz
cmp
scas
jnp
inc
pop
lcall
lret
inc
sub
jae
sbb
ficomps
mov
ljmp
cs
sbb
pop
loope
jno
sub
jl
push
add
jb
xor
leave
adc
repz
jne
push
ja
or
cld
or
movsl
adc
das
mov
dec
or
adc
insl
jmp
in
adc
in
sbb
adcb
push
mov
push
cmp
out
movsl
cmpsb
mov
pop
shl
pop
add
ds
cltd
test
or
stc
movsb
popa
mov
les
xchg
add
push
mov
jecxz
pop
mov
inc
mov
cmpsl
jecxz
pop
addb
jb
enter
push
testl
sub
dec
scas
cmp
ret
pop
cwtl
or
fucom
ljmp
sbb
aad
andl
pop
cmp
and
pop
leave
test
stos
cmc
movsl
inc
aam
movsb
sti
pusha
inc
stos
pop
stos
out
push
test
lret
sbb
push
jl
jp
cvtpi2ps
cs
mov
std
movsb
ja
imul
sbb
scas
push
sbbb
leave
fs
hlt
xchg
mov
mov
inc
lods
jbe
dec
cwtl
sub
outsl
mov
iret
pop
fwait
adc
jo
ret
xlat
xchg
push
dec
int
adc
or
ror
jo
imul
dec
negb
rorl
enter
pop
xor
sahf
mov
jge
shlb
daa
mov
mov
jo
js
push
jmp
add
mov
cmp
jp
sbb
sub
sbb
cmp
arpl
fcoms
mov
decb
mov
and
insl
inc
push
xor
mov
pop
jbe
sbb
xchg
dec
in
leave
xchg
jbe
into
jns
sbb
and
lds
pop
mov
inc
ds
and
sub
dec
mov
out
mov
dec
jg
push
adc
jecxz
lds
xchg
pushf
or
dec
push
test
add
movsl
pop
push
pushl
xor
pop
sbb
mov
inc
adcb
in
xchg
in
push
fistpl
pop
and
jb
in
jge
insl
leave
cs
lcall
scas
fnstcw
cwtl
std
jo
jb
mov
into
pop
mov
ror
mov
shr
or
add
xor
mov
roll
jae
sub
mov
cld
add
inc
lahf
add
and
std
adc
push
out
fcoms
ret
sub
jns
push
inc
inc
or
call
lret
mov
push
repnz
fimuls
pop
pop
sbb
cmp
adc
sbb
push
insl
loope
cmp
popa
lods
aas
and
push
pop
mov
rol
sub
mov
mov
call
push
cltd
xchg
ja
and
scas
iret
rorl
mov
cltd
subb
pop
xchg
cmp
sti
push
xlat
jns
mov
push
jns
imul
sbb
aam
mov
sub
xor
pop
or
pop
repnz
test
xchg
mov
sti
lret
stos
test
lock
popf
je
push
mov
cld
pop
cmpsl
insl
shl
aad
cmpsb
mov
out
stos
mov
mov
pop
dec
sahf
and
dec
pop
pushf
test
pop
rorl
or
lret
lcall
movsl
pushf
js
jno
pop
ret
ja
div
pop
or
sbb
cmp
cmp
push
addr16
scas
jg
xchg
xor
fldt
mov
mov
sbb
hlt
rcll
xchg
push
mov
sbb
leave
adcb
pusha
pop
inc
push
mov
arpl
push
dec
in
cmp
mov
mov
inc
fwait
xchg
adc
mov
add
push
add
cvtps2pi
mov
cli
mov
inc
out
mov
push
add
clc
inc
aam
push
mov
imull
mov
out
shlb
outsb
mov
dec
std
test
mov
inc
mov
stos
and
xor
cmpsb
mov
mov
inc
lret
out
inc
loopne
mov
gs
stc
sbb
mov
insb
sbb
xchg
mov
test
adc
inc
cltd
cmp
neg
lahf
int3
out
lods
jg
cltd
push
dec
pop
jl
adc
imul
fs
lret
add
es
mov
push
mov
mov
loop
cli
jnp
pop
push
xlat
xor
aam
push
inc
add
in
cltd
js
mov
push
fucomi
pop
les
inc
ja
jnp
push
push
push
cwtl
xor
mov
ljmp
jb
dec
loop
cmp
adc
int3
pop
dec
cltd
adc
push
sub
sbb
ja
fs
ret
dec
xchg
cmpsb
sub
insl
add
pop
and
jae
cwtl
ljmp
fsts
jmp
xor
cmp
js
jmp
hlt
add
sahf
inc
fldt
xor
repz
popa
mov
cmp
shll
in
inc
sti
xchg
leave
clc
push
push
repnz
and
jne
cmc
fdivp
movsb
lds
pop
jle
inc
in
stc
fdivrl
inc
pop
shlb
arpl
mov
call
mov
cmp
scas
pop
mov
rcrl
jnp
ffreep
mov
inc
aas
in
rclb
push
nop
mov
inc
in
pop
pop
xor
jmp
movsb
mov
jne
movl
cld
inc
cmp
jo
jnp
xchg
sbb
push
out
flds
shlb
dec
clc
ret
jo
pushf
in
dec
stc
outsl
in
and
sub
ret
adc
pop
jnp
lock
push
and
in
test
mov
dec
dec
mov
inc
fistps
in
lock
adc
mov
mov
xor
push
sbb
lds
lcall
mov
lcall
mov
movsb
inc
es
mov
xor
test
mulb
xor
je
dec
movsb
cld
mov
test
lahf
mov
enter
pop
mov
or
mov
cmp
sti
jg
and
leave
xchg
sub
mov
inc
cltd
pop
cwtl
lret
xchg
dec
or
xor
adc
inc
push
clc
sub
sbb
push
push
mov
daa
repz
testb
jne
mov
mov
out
jecxz
cwtl
xchg
add
add
dec
testl
dec
cmp
loop
mov
push
push
adc
aaa
push
dec
push
cld
jb
bound
jmp
notl
stos
ljmp
cli
bound
push
push
and
push
mov
popf
les
mov
popf
inc
dec
andb
mov
data16
or
sbb
test
mov
lret
sub
divl
jle
inc
mov
xchg
int3
aas
imul
cmp
adc
jle
sub
mov
in
adc
dec
cmp
jo
pop
sbb
push
dec
inc
and
inc
pusha
shll
jns
cmp
mov
push
pusha
lods
fisttpll
outsb
push
pusha
sub
lahf
push
jns
push
imul
lds
cmc
faddl
jne
or
or
push
and
jp
dec
mov
decb
and
out
jnp
xor
fmul
fistps
lret
test
push
pop
repz
jns
or
mov
jecxz
in
and
int
or
stos
mov
xlat
xchg
dec
stos
addr16
lds
fwait
daa
sub
jl
leave
jg
sarl
pop
sub
loopne
or
push
mov
xchg
xchg
stos
mov
pop
iret
push
mov
mov
xlat
mov
mov
loope
ficompl
mov
lea
mov
jno
adc
shl
fstpt
and
jmp
or
jle
loopne
filds
sbb
add
fsubs
dec
pop
fsubl
xor
icebp
jb
xor
push
cmc
jno
out
push
fucomp
fldenv
fmull
test
or
cs
leave
cltd
loop
filds
popf
mov
adc
cmpsb
and
mov
lcall
rcrb
cmc
dec
pusha
sbb
popf
stos
add
daa
faddl
push
inc
loopne
repz
adc
add
les
cltd
mov
lret
add
in
mov
aam
xchg
jmp
xor
sahf
enter
repnz
add
stc
push
stos
pop
imul
and
mov
sbb
cmp
inc
std
test
lds
sub
push
xor
xor
push
mov
ret
pushl
jp
lods
int
test
lods
int3
add
cmp
cmp
ljmp
jno
adc
out
or
shrb
or
popf
add
adc
int
adc
jp
mov
pop
inc
imul
lock
mov
push
negb
repz
lahf
popa
dec
mov
loop
adc
arpl
adc
daa
xor
mov
les
push
je
push
mov
fs
in
outsl
sbb
aad
pop
jno
adc
sbb
mov
lret
scas
es
xchg
xor
out
addr16
add
bound
aam
mov
cld
adc
out
push
nop
xchg
jmp
fcoms
inc
into
les
inc
mov
mov
mov
mov
stc
xchg
scas
cmpsb
test
mov
nop
mov
movsl
xchg
andl
cmp
and
cmc
mov
adc
sbb
mov
test
cmpsb
and
andb
jmp
scas
sub
pop
jnp
jne
inc
cmp
das
push
notl
mov
add
jl
fsubrl
mov
inc
into
cld
or
sbb
pop
dec
ja
fcmovnu
xchg
pop
repz
sub
push
adc
sbb
fnstsw
insl
test
add
xchg
jbe
cltd
push
fildl
pop
push
xchg
xor
into
mov
mov
cmp
icebp
inc
loopne
icebp
aaa
subl
roll
cmp
and
jb
sbb
pop
xchg
cs
mov
inc
in
outsb
mov
mov
pop
mov
cmpsl
mov
xchg
push
aaa
pusha
xchg
adc
jnp
and
daa
xchg
fwait
add
push
idiv
and
int
cmp
ds
and
fiaddl
push
xlat
adc
jecxz
ja
add
icebp
inc
mov
inc
mov
mov
jns
add
or
lea
ret
mov
mov
push
add
out
sbb
pusha
inc
push
lret
bound
xor
ss
les
scas
test
out
or
daa
les
pop
mov
pop
aaa
lea
push
dec
mov
pop
inc
push
incb
sbbl
adc
loopne
in
adc
inc
cmp
mov
dec
mov
pop
jns
mov
in
setae
inc
imul
dec
mov
leave
sahf
jle
fsubrl
jp
aaa
mov
sub
mov
clc
mov
pop
sbb
loope
dec
pushf
inc
push
clc
or
mov
jecxz
dec
sub
mov
sbb
lock
add
cmp
and
push
add
sub
xchg
test
mov
imul
dec
scas
clc
jl
aad
or
xchg
push
test
add
push
mov
movsb
mov
mov
cli
pop
mov
xchg
pusha
imul
pushf
pop
mov
xchg
cmc
mov
push
out
sub
stos
nop
cmp
lea
faddl
mov
nop
hlt
sahf
lret
subb
data16
mov
repnz
mov
xchg
rolb
in
adc
mov
and
add
push
popa
addl
lret
inc
enter
stos
lret
sbb
pop
adc
fiadds
cld
cmp
test
pop
lods
sbb
or
sbbb
pusha
dec
sub
sub
popfw
xor
sbb
or
mov
pop
and
js
mov
sub
or
sbb
jo
stc
aaa
sub
mov
aas
out
bswap
and
mov
scas
and
cs
dec
xchg
add
cmpsl
add
push
cmp
clc
f2xm1
or
and
mov
adc
xor
divb
and
xchg
aad
adc
pop
or
movsb
or
sub
enter
inc
ss
mov
hlt
sub
or
popa
add
leave
mov
adc
lahf
test
jge
addb
mov
fs
adc
ljmp
lret
xor
sbb
imul
cmp
jae
enter
push
call
lock
arpl
fsub
or
clc
jmp
push
push
daa
sarb
jo
insb
mov
push
insl
icebp
lret
lds
cltd
cmp
in
insb
inc
inc
arpl
push
call
push
stc
sbb
cmp
int
or
mov
mov
push
arpl
mov
cmp
xchg
cmp
add
dec
inc
sbb
push
dec
bound
pushf
bound
test
fsub
jo
ret
and
insb
dec
les
sub
movsb
xchg
sub
out
in
pop
jae
mov
and
xchg
shl
gs
sbb
mov
gs
lods
jnp
movsl
xchg
sbb
fstps
adc
pop
movl
in
arpl
aaa
fisubl
mov
adc
sub
jle
test
xchg
out
outsb
fcompl
shr
fidivrl
sbb
sbb
adc
jno
das
repnz
mov
xor
mov
and
xor
jno
es
push
mov
pop
pusha
push
insl
mov
push
push
stc
jns
icebp
xor
test
stos
mov
pusha
fwait
addl
mov
mov
adc
push
int3
lret
loope
insb
cmp
cld
sub
les
inc
loopne
fwait
stos
sbb
std
dec
mov
lods
pop
les
mov
loop
mov
ss
inc
mov
loop
cwtl
mov
cmp
pop
clc
adc
mov
push
ret
movsb
add
dec
cmp
stos
sub
rclb
loop
sarl
mov
push
mov
pop
aam
xchg
pop
shll
cmc
fisttpl
mov
lret
push
int3
mov
pushf
cltd
nop
dec
call
icebp
repnz
xchg
mov
jle
inc
call
xchg
enter
lret
push
rclb
pop
push
outsl
fwait
daa
ret
sub
and
insb
xlat
and
fs
add
jno
mov
xor
fcoms
pushf
mull
xchg
push
mov
in
sti
pop
pushl
mov
aas
daa
movsb
fldl
adc
xchg
adc
pop
out
and
fdivs
out
jbe
addl
enter
lea
pop
inc
jns
pushw
sub
popa
dec
arpl
jmp
push
in
xor
cltd
insb
mov
adc
mov
test
jg
sub
xchg
imul
pop
xchg
jno
in
jge
imul
mov
and
lret
cld
or
lcall
mov
jl
pop
pop
add
jno
stc
xchg
add
pop
repnz
adc
or
hlt
mov
ja
mov
add
mov
mov
push
or
jl
pop
cmp
sub
adc
les
scas
je
cmpsb
push
stos
adc
sti
fadds
xor
push
sub
jle
jge
cs
lret
stc
push
clc
cld
cmp
add
cli
lods
shl
test
xlat
mov
clc
mov
dec
xor
arpl
das
xchg
sbb
nop
push
inc
pop
xchg
mov
sahf
gs
loop
and
clc
loop
nop
push
cmp
mov
sub
jns
inc
stc
pushf
add
fs
lret
jno
scas
mov
pop
cli
fmuls
ret
jae
cmc
cs
or
and
adc
imul
mov
shlb
add
es
adc
pop
xor
sbb
je
inc
xor
jo
fcoms
shlb
inc
cmpsb
pop
push
cmp
cltd
rcl
push
cmc
jb
or
dec
adc
pop
test
mov
and
xor
imul
mov
jp
dec
adc
jg
xchg
das
lock
inc
pop
sub
xor
push
mov
jle
shlb
mov
ja
or
in
inc
sbb
mov
push
pop
je
sbbl
in
push
fidivrl
sarl
mov
jo
aad
les
jg
out
loopne
sbb
loopne
inc
mov
nop
xchg
cli
pop
cmpsl
pusha
mov
sbbl
mov
dec
lea
cmp
lds
dec
inc
cmpsb
push
cmc
pop
sbb
enter
enter
arpl
movups
das
jnp
mov
lret
and
lock
jmp
inc
sbb
dec
out
sub
lds
xchg
jae
test
rcll
stc
ficoml
int
xchg
mov
jae
inc
arpl
les
mov
gs
cli
test
aas
fwait
test
lds
sub
stos
imul
sahf
cmp
vpsubw
stos
icebp
add
adc
push
cmp
jge
sbb
sbb
cli
fsubs
pop
icebp
push
sti
inc
jle
daa
mov
cltd
cmp
fnstenv
lods
clc
adc
adc
adc
sub
jb
pop
enter
fnsetpm(287
sahf
lock
repz
or
sub
test
in
lods
mov
mov
in
or
loopne
push
inc
dec
add
and
mov
nop
ja
lret
and
insl
or
xor
sbb
push
popf
push
in
jo
push
repz
aas
cmp
jge
test
int
cmp
pop
lods
ja
mov
addb
loop
xor
cmc
in
xor
cmp
in
push
repz
cmp
int3
out
shlb
addb
adc
loopne
ja
rcl
ljmp
sub
ljmp
add
dec
stc
sub
add
rolb
cld
pop
jo
jns
xchg
repz
loopne
sbb
icebp
std
pop
lods
xchg
mov
push
aad
mov
movsb
cmc
mov
pushf
ss
cmp
js
arpl
push
leave
int3
pop
negl
mov
call
sbb
cmc
xchg
out
stos
jl
xor
and
fisubrl
sbbb
mov
xchg
es
rclb
lds
push
mov
sub
mov
mov
je
xchg
fdiv
and
outsb
idivl
clc
das
xchg
push
cli
clc
inc
lock
and
fwait
jg
fmull
dec
out
xchg
lret
mov
stc
fldenv
shlb
in
insb
push
lods
stos
iret
xchg
add
cmp
push
jnp
ljmp
in
loope
mov
cwtl
inc
sbb
lret
push
lea
push
dec
ss
xchg
add
sahf
repz
sarl
test
orb
test
push
jg
adc
popa
movsl
cmp
mov
es
jb
and
jnp
dec
lcall
mov
inc
out
aam
mov
data16
out
cmp
lock
bound
cmp
stos
cltd
sub
arpl
inc
loopne
cmp
mov
arpl
push
fsubrp
inc
pop
xor
cmp
inc
sbb
mov
mov
sarl
fisttpll
inc
mov
pop
stc
sti
subl
leave
scas
imul
xchg
inc
into
cmp
frstor
lahf
cmp
test
dec
jp
cmp
stos
cld
push
int3
xor
or
loope
cs
sbb
bound
movsb
sbb
mov
outsb
push
adc
sti
test
jae
add
loop
movsl
es
call
push
lret
insb
sub
mov
or
fiaddl
mov
outsb
mov
xor
xchg
mov
mov
subb
icebp
and
adc
lods
xchg
call
cmpsb
mov
out
popa
fimuls
pop
into
sbb
dec
icebp
repnz
add
push
mov
gs
mov
outsb
bound
into
out
jns
mov
ret
aam
and
fistpll
jnp
movsl
sub
fs
imul
or
xor
xchg
fidivl
clc
pop
add
rol
push
fwait
jno
jge
push
imul
push
cmp
lods
mov
xchg
push
nop
adc
jns
pusha
push
clc
push
test
aaa
lahf
test
mov
push
adcb
movsl
fwait
inc
stos
call
outsl
push
mov
jl
pop
lahf
mov
cmc
sbb
cwtl
and
push
inc
xchg
cmpsl
js
pushf
dec
cmp
cmpsb
popa
loopw
push
fwait
mov
pop
out
sub
jbe
outsl
insl
mov
push
testb
xor
and
xchg
aaa
aad
and
loop
mov
sbb
insb
push
mov
mov
mov
test
cli
ret
stos
xor
or
pop
cli
xchg
jmp
jns
pop
fwait
inc
sbb
inc
xor
cmp
jge
dec
fistl
jle
mov
enter
cmpsb
fcomi
pushw
cmp
inc
cld
mov
call
xchg
cmp
hlt
cltd
xlat
xchg
out
push
dec
or
push
icebp
lahf
loope
adc
pop
je
mov
dec
xchg
in
jecxz
imul
or
aas
clc
xchg
mov
popf
inc
hlt
jns
push
addl
shrb
pop
ret
mov
rorb
insb
ret
pop
stos
mov
psadbw
pop
jmp
aaa
ss
or
sbb
sbb
ljmp
cmp
inc
shl
lods
and
loop
xchg
jl
add
sbb
repz
add
sbb
add
and
inc
nop
mov
cs
xchg
adc
hlt
push
cmp
movsb
xor
dec
inc
pop
lret
pop
mulb
jae
mov
sub
out
mov
xchg
mov
icebp
dec
out
mov
and
int3
sub
scas
push
cmc
mov
aad
enter
xor
sbb
and
lcall
and
leave
xor
insl
add
into
mov
loop
lahf
int3
mov
fwait
in
or
jbe
movsb
out
jnp
icebp
mov
xor
push
xchg
imul
jle
imul
addr16
inc
test
jg
daa
push
stc
and
unpcklps
mov
test
test
ret
gs
into
pop
jle
and
out
sub
dec
jno
aad
data16
pop
xor
aad
into
loopne
ss
dec
pop
add
mov
sbb
mov
sub
dec
test
mov
imulb
filds
iret
xchg
mov
test
insl
dec
sub
loop
mov
pop
mov
xchg
push
loop
scas
ljmp
out
sub
cmp
push
pop
addr16
aad
jns
ds
gs
mov
mov
in
sti
mov
das
cmp
push
mov
mov
xor
xchg
dec
and
cwtl
sub
mov
xchg
and
enter
mov
in
orb
movl
or
dec
mov
stc
xchg
jb
pop
lods
out
fldenv
mov
test
js
push
jbe
fmul
xor
jb
xchg
out
shll
leave
push
add
mov
jns
adc
clc
and
push
inc
sahf
cmc
leave
sub
les
mov
xchg
dec
mov
xchg
jl
inc
xor
mov
test
push
and
jecxz
jmp
int
xchg
pop
xor
je
push
adc
push
cmp
ret
subb
push
push
out
sbb
inc
sbbl
iret
dec
pop
cs
in
notb
push
pop
and
pop
jle
xchg
add
or
jne
lret
add
xchg
lock
in
xor
fsts
sbb
out
adcl
les
ss
in
and
fnstsw
call
add
mov
rcrl
jae
sbbb
or
scas
xchg
insl
inc
pushf
adc
jno
add
fcomps
iret
and
jae
cmp
jno
mov
cli
sub
pop
outsb
push
cwtl
lahf
push
sbb
dec
dec
dec
cmp
mov
and
mov
sub
faddl
clc
shll
sub
inc
arpl
aaa
iret
cmp
push
mov
insl
dec
xor
test
lahf
data16
mov
dec
cmc
add
das
inc
stos
mov
jecxz
cmp
xchg
in
loope
dec
loopne
scas
jne
cmpl
insb
lahf
insb
cli
dec
fsubrp
int3
addl
das
inc
mov
sahf
push
inc
xor
pop
roll
xor
mov
int
mov
cs
or
into
hlt
push
pop
xor
jo
imul
daa
cmp
adc
addb
adc
loop
pop
and
rcl
xchg
pop
sbb
mov
xchg
and
jp
cwtl
pop
push
fwait
or
push
lcall
xlat
adc
or
add
shll
adc
adc
fldl
lcall
nop
fidivrl
push
imul
mov
in
add
in
jb
push
xchg
pop
stos
mov
dec
les
mov
or
rol
out
xlat
je
inc
sub
rcr
pop
dec
cmp
bound
pop
fstp
xorb
mov
xchg
leave
jnp
sub
loopne
into
xchg
jno
leave
push
loopne
sub
fstl
test
mov
mov
xor
lds
icebp
in
sub
les
cmc
dec
xor
jbe
in
aas
rcrb
fmulp
aam
out
out
dec
sbb
in
and
call
push
sbbl
out
shll
enter
adc
add
pop
nop
jo
mov
mov
cmp
out
imul
pop
push
or
imul
je
and
lock
popa
shl
xchg
fwait
out
jg
adc
cwtl
xchg
ljmp
adc
mov
idivl
push
testl
jmp
fisttpl
xor
fstps
dec
or
mov
jmp
test
dec
mov
sub
sub
and
jmp
stos
loop
ret
mov
sbb
imul
out
lods
adc
sub
iret
dec
rcrl
fstpt
inc
sub
roll
ja
test
sbb
in
xor
stc
mov
mov
arpl
les
jns
mov
pop
adc
shll
std
mov
mov
out
add
daa
sub
testl
mov
leave
sarb
ficoml
ja
aad
fisubrs
scas
push
cmp
jmp
sub
push
adc
inc
or
das
cwtl
cmc
insb
call
test
sbb
push
jno
xor
leave
in
mov
add
mov
addb
ficomps
out
or
sub
lods
jae
mov
repz
mov
pop
push
or
mov
or
pop
xor
cmp
push
shll
popl
imul
mov
pop
mov
mov
call
int3
fimuls
in
inc
push
sub
jmp
mov
pop
mov
and
pop
mov
mov
mov
hlt
pop
and
cmp
jno
pushf
jno
ds
outsb
enter
and
jg
stc
adc
push
and
lods
or
lahf
adc
movsl
and
scas
daa
add
fsubp
and
out
push
in
mov
or
cmp
cmpsl
inc
cmp
jle
or
add
test
js
test
shll
jno
dec
in
movsb
sbbb
pop
mov
dec
mov
push
iret
sbb
dec
pop
xchg
inc
pop
and
sub
and
mov
stc
or
cmp
pusha
pop
aam
adc
cmp
stc
into
push
popf
sahf
mov
ss
cmc
loop
jl
adc
faddl
fisttpl
add
clc
test
pop
ja
aas
xchg
add
cmp
xor
cmp
mov
jmp
mov
scas
jne
xchg
mov
test
into
xchg
hlt
js
xorl
or
inc
mov
jp
adc
push
rorb
daa
mov
sub
xchg
lret
and
insb
mov
mov
add
fwait
loop
add
nop
xchg
and
and
rorb
push
movsb
scas
inc
pop
sub
int
jo
mov
sbb
or
in
mov
adc
outsb
sub
sti
pop
hlt
jnp
popa
or
push
ja
push
mov
push
sbb
cltd
pop
xchg
push
add
pop
add
shlb
loopne
scas
inc
rol
pop
std
outsl
sub
adc
jae
xor
icebp
mov
mov
popa
andb
cmp
outsb
ret
insb
inc
pop
adc
jecxz
lret
inc
jmp
xor
sbb
mov
arpl
add
add
push
loopne
inc
jne
call
jno
popl
shrl
fnstenv
icebp
fdivl
in
popf
xor
sbb
mov
and
push
je
jns
testb
sarl
aas
cmpsb
push
jl
push
xor
pop
jmp
sbb
mov
push
lahf
mov
push
add
addr16
mov
popf
stos
outsb
xchg
cmp
inc
lret
sti
mov
ret
lfs
out
adc
leave
andl
and
cmp
mov
out
insb
add
repz
dec
lea
cmp
outsl
bound
add
add
xor
scas
mov
repz
pop
mov
hlt
pushf
dec
mov
pop
incb
fdivs
add
pop
es
mov
sub
jae
ret
in
mov
jne
wbinvd
cli
nop
dec
iret
inc
dec
int3
repnz
lret
jns
cmpsb
adc
ds
dec
inc
mov
dec
sub
pop
cmp
rorl
cmp
stos
out
xchg
lcall
loopne
add
ds
push
subb
mov
ret
popf
movsl
inc
idiv
cmp
fyl2xp1
xchg
inc
in
aam
int
in
leave
shlb
cmp
pushf
cmp
pop
cmp
fwait
shlb
lret
mov
cmpsl
jl
sbb
mov
mov
mov
sahf
push
mov
xchg
rcl
cs
mov
push
dec
cmp
not
mov
adc
jb
sub
cmc
mov
sub
outsb
jmp
dec
dec
mov
insl
lds
mov
outsl
dec
pop
adc
lods
fwait
mov
cmpsb
and
xchg
outsl
jo
jmp
nop
clc
lret
cmp
fadd
add
xlat
iret
cmp
mov
inc
es
mov
loope
movsl
test
pusha
inc
pop
cli
xorl
sahf
repz
ret
mov
mov
loope
jns
fsub
fcmovnb
dec
call
js
pop
push
mov
mov
pop
shl
data16
pop
int3
jb
lret
and
testb
movb
push
push
add
inc
addl
mov
lcall
push
lods
xor
imul
test
pop
cli
and
cmpsb
loope
mov
mov
frstor
into
sub
cwtl
dec
push
ret
out
call
xor
add
jge
test
and
cmp
xor
dec
ret
inc
cmpsb
lods
pop
shrl
xchg
xchg
repnz
cmp
pop
cs
dec
lahf
and
mov
jl
fcmove
aaa
adc
dec
push
lea
out
xor
pop
dec
fwait
xchg
or
pop
cltd
xchg
out
xchg
fcmovnu
in
push
jge
out
fmuls
sbb
insl
and
pushf
scas
out
xor
mov
pop
aaa
pop
nop
pop
cmpsb
dec
ds
sar
or
mov
jno
repnz
fsts
mov
in
in
js
sarl
out
lea
pop
mov
push
mov
mov
in
cmc
pop
in
popf
fbstp
inc
repz
xchg
jecxz
cs
pop
outsb
repz
in
jae
cmp
mov
dec
mov
dec
js
test
push
pop
xchg
pop
scas
cmp
push
pushf
hlt
push
or
repz
ret
rcrl
ret
push
xchg
push
xchg
cwtl
xor
mov
es
shll
pop
mov
or
jb
jg
sbb
ds
inc
xor
fdivrl
stc
push
es
cmpsl
mov
xor
and
fwait
test
test
push
ficoms
jbe
scas
sbb
adc
aam
lcall
dec
mov
or
fldl
in
add
mov
cmp
xchg
mov
sbb
pop
cwtl
daa
out
movsl
inc
adc
adc
mov
aaa
jg
aad
mov
test
insl
jae
jge
mov
lret
push
or
mov
jns
dec
popf
nop
ja
cmp
jae
mov
inc
lds
into
jg
ds
insb
jae
stos
mov
dec
or
cmp
insl
add
xor
clc
shrb
rcl
testb
arpl
sub
mov
xchg
xor
je
dec
fmull
iret
cwtl
and
pop
inc
mov
push
mov
pop
mov
lods
imul
into
xchg
fs
xchg
xchg
inc
jne
cmp
cmp
cld
arpl
bound
out
jbe
mov
testl
mov
or
pop
cld
lods
and
movsl
aad
cmp
int3
daa
sub
push
jnp
sbb
mov
inc
and
std
in
rorl
lock
loopne
cld
jb
imul
rcl
mov
inc
je
roll
aaa
shrl
cmp
mov
pop
je
clc
call
or
dec
jb
lret
mov
clc
mov
jmp
inc
insl
inc
sub
adc
test
add
xor
cmpb
lods
out
ss
mov
lea
jge
push
jo
jo
mov
push
and
pushf
cs
sbb
sarl
add
sbb
add
add
andl
add
sub
in
rolb
pop
mov
xchg
std
subl
cmp
inc
stos
push
or
inc
cld
jg
jne
ds
mov
xor
inc
cltd
int
out
mov
sbb
inc
push
addr16
out
xor
pop
test
bound
xor
adc
xor
add
jno
cli
mov
bound
cmp
add
lods
push
pop
pop
push
int3
es
hlt
inc
and
popf
insb
jb
cmp
cmpsb
push
sub
sbb
fwait
in
sbb
cmp
jg
sbb
and
divl
pop
xchg
dec
scas
mov
test
jl
and
stos
in
lds
iret
jl
scas
push
gs
cs
outsl
push
cmc
jecxz
sbb
dec
pop
push
and
lea
stos
add
jb
pusha
insl
jae
stc
mov
cwtl
inc
jp
adc
xlat
mov
loope
xchg
jmp
mov
movsl
fbstp
fcomps
adc
ret
and
cli
xor
xchg
stos
pop
cmp
mov
lock
test
or
push
lcall
scas
pushf
xor
nop
and
jb
or
sbb
mov
mov
mov
ss
ficoms
push
sbb
pop
fldl2t
adc
fidivrl
shlb
data16
sbbb
add
pusha
push
push
dec
gs
lods
add
mov
test
adc
scas
adc
inc
mov
scas
xchg
cmc
add
sbb
inc
mov
jg
jae
lcall
repz
jecxz
in
shl
stc
loop
fstps
jb
push
jp
mov
cmpsl
out
mov
xchg
mov
shl
dec
mov
xchg
call
cld
adc
shr
and
outsb
lret
pushf
nop
fs
cmc
inc
hlt
and
or
mov
mov
dec
or
jmp
rcr
xlat
loopne
push
testl
pop
mov
jmp
pop
push
push
lock
imul
jne
lret
test
outsb
or
std
fisttpl
shl
in
adc
dec
or
xor
fcomp
jns
ss
push
insl
inc
sub
cltd
add
push
xor
leave
stc
les
push
aaa
insl
pushf
jge
pop
and
mov
rclb
movsb
xor
mov
xchg
cmp
outsl
frstor
testl
mov
scas
mov
sbb
sub
cmp
pusha
jge
xlat
jp
jns
clc
jae
fdivrs
je
lret
arpl
ret
fwait
inc
jno
push
push
leave
dec
out
popa
dec
test
add
ret
sub
scas
pop
sub
inc
inc
sti
sub
sub
cmp
or
cld
out
dec
mov
mov
jno
mov
xor
mov
jmp
xchg
adc
test
mov
or
jge
int
movsl
and
jo
roll
or
sbb
gs
mov
jecxz
mov
dec
add
fadd
das
mov
cld
mov
adcb
dec
in
xchg
xchg
jbe
jp
outsl
repz
push
mov
mov
movsl
in
ret
lds
jp
lods
loop
push
imul
xor
pusha
add
add
sub
ss
adcb
pop
mov
jmp
mov
cmc
loopne
cmpsb
pushl
sub
dec
shll
cmp
jmp
aaa
jmp
repz
sub
xor
mov
cld
adc
xor
mov
and
insb
icebp
xor
stos
push
jnp
xchg
rorl
gs
pusha
ror
push
incl
jp
sbb
mov
stc
scas
inc
jp
push
ja
sahf
pop
jb
add
cmp
pop
dec
push
push
hlt
int
mov
lds
fwait
arpl
sbb
je
sbb
sahf
add
ret
sbb
out
lods
pusha
stos
out
and
in
adc
ljmp
add
xor
std
and
out
push
mov
leave
ja
pop
insl
or
lock
push
fcom
js
adc
jo
mov
mov
hlt
pop
fnstenv
sbb
es
into
push
jle
inc
cltd
mov
insl
sahf
mov
sub
fyl2xp1
jge
xor
push
cmpsl
inc
sbb
insl
pop
and
cltd
adc
lods
mov
xchg
sbb
addr16
fistpll
xor
pop
test
or
inc
xchg
jle
push
add
jae
adc
xchg
sub
mov
mov
pop
shll
pop
add
fwait
dec
insl
into
divl
xor
inc
lds
lea
js
xchg
dec
or
mov
ret
push
es
mov
jle
es
sub
xchg
sub
aas
add
and
add
or
ss
jb
fisubrl
or
std
xchg
jnp
sbb
inc
cmpsb
xor
push
fwait
clc
sbb
stos
loopne
nop
push
out
aas
sub
and
fsubrl
cmp
sub
xchg
jle
loope
hlt
dec
jmp
pop
scas
clc
pop
stc
xchg
sbb
sahf
or
cmp
in
mov
fcom
das
fwait
and
rcrl
fcoml
aaa
or
mov
pop
nop
divb
ja
in
inc
stos
nop
mov
lcall
mov
fs
inc
mov
int3
test
mov
add
lahf
push
or
adc
pop
popa
pop
xor
jbe
cmc
push
xlat
inc
push
mov
nop
sbb
ja
push
movsl
je
scas
insb
and
popa
mov
adc
scas
dec
pop
ja
push
stc
iret
popa
arpl
mov
notb
in
loope
in
adc
pop
lret
loope
xchg
loope
and
and
js
test
xchg
test
dec
sub
mov
and
in
jno
push
fstpt
lock
aaa
pop
xchg
sbbl
inc
in
ja
inc
push
push
repz
lret
sbb
ret
scas
fdivrs
and
stos
and
outsl
stos
xlat
xchg
mov
add
sti
into
aad
aad
mov
enter
cmp
xchg
dec
mov
fists
jge
imul
or
nop
push
add
cmpsl
js
dec
loope
xlat
xlat
sub
lret
mov
sbb
enter
les
mov
dec
das
push
jne
fimuls
xchg
std
or
pushf
mov
mov
ds
xor
inc
hlt
repnz
jg
mov
daa
add
dec
es
pop
frstpm(287
dec
add
xor
push
sub
push
or
and
push
push
or
outsb
lds
and
xor
jbe
test
lds
sahf
pop
test
jg
call
add
add
cmp
mov
repnz
lock
lcall
lea
add
popl
or
aad
push
dec
push
add
lods
repnz
adc
stc
push
cld
nop
xchg
and
sub
push
xor
shll
jb
loop
xchg
rep
repz
push
nop
mov
stc
dec
push
insb
push
adc
movsb
push
dec
in
in
xchg
push
aas
daa
add
mov
mov
add
mov
call
bound
scas
mov
nop
rcl
sub
push
lret
ret
pushf
mov
sub
movsl
xchg
data16
inc
mov
ret
pop
enter
dec
add
sbb
jmp
jecxz
in
or
ja
xchg
cmp
push
add
mov
cmp
xchg
and
jl
dec
mov
sbb
testl
cld
add
push
js
xorl
lahf
fmull
les
or
aad
incb
jnp
pop
inc
sub
inc
notb
cwtl
pusha
or
and
inc
mov
inc
ljmp
mov
lret
cli
sahf
mov
push
and
jecxz
xchg
mov
insb
sbb
jb
stos
push
dec
stos
push
dec
hlt
leave
mov
jp
xor
jnp
cmc
jno
xchg
mov
mov
sti
dec
add
inc
dec
jg
ret
jne
or
sti
jae
sti
xor
popf
mov
das
in
adc
sbb
lods
push
inc
xor
lahf
or
cmp
mov
mov
push
ret
mov
jle
xchg
sbb
repz
mov
aad
out
mov
push
daa
in
int
roll
imul
repz
mov
lahf
sar
jae
ret
adc
rcll
or
outsl
sbb
add
lea
lods
xchg
pop
and
and
ds
rorl
out
mov
jae
sahf
fcmovnb
sub
xchg
mov
pusha
mov
in
in
dec
jge
xchg
test
mov
std
popa
repz
xor
dec
imul
lret
push
and
inc
and
popa
cmp
daa
jne
es
shlb
push
mov
or
outsb
mov
dec
int
push
push
push
jno
imul
jle
arpl
sbb
jnp
in
or
mov
xlat
add
pop
inc
push
adc
xor
cmp
flds
sbb
leave
fstl
idiv
jl
sbb
push
mov
pop
test
lock
mov
scas
mov
mov
call
aad
and
push
ds
nop
xor
mov
mov
test
call
pop
movsl
sbb
adc
lcall
shl
cmp
cmpsb
push
mov
mov
insl
outsb
xor
and
lret
ret
jnp
addr16
or
js
mov
jb
stos
mov
jno
cmp
mov
or
call
loope
fstl
gs
mov
inc
aam
popf
inc
xchg
fcomi
pusha
inc
stc
push
fisttps
aad
adc
incb
bound
sub
inc
les
fldenv
pusha
insl
fwait
outsl
add
cmpsb
sub
xlat
mov
arpl
nop
je
dec
pop
xor
scas
outsb
fstps
cmp
xchg
int
fcoms
rcr
adc
bound
pop
stos
bound
cs
call
xchg
sub
xor
add
stos
loop
pop
popf
fsts
int
mov
imul
pop
xchg
jle
mov
stc
aas
test
push
pop
popa
jo
add
test
push
aad
rolb
test
push
int
repz
es
cmp
pop
js
adc
jle
fldl
dec
nop
or
or
popa
mov
jb
xchg
jnp,pt
ljmp
push
jge
mov
dec
sbb
aam
sbb
and
divb
fwait
add
inc
push
jnp
hlt
cwtl
rolb
xor
scas
cmp
and
outsl
mov
xor
pop
pop
push
sbb
addr16
pop
seto
mov
mov
and
stos
push
popa
adc
mov
and
cmp
jp
jg
stc
cmc
loop
xchg
jg
mov
stos
mov
fdivs
outsl
loope
mov
lret
popa
adc
push
push
jno
dec
pusha
es
ds
cld
outsb
add
movsl
mov
movsb
add
iret
mov
int
popf
push
mov
insl
cmp
adc
in
mov
aas
ss
popf
ret
dec
ret
lret
adc
inc
mov
int
and
inc
div
push
fcoml
imul
jecxz
jp
adc
fbld
pop
jge
cli
cmp
cmp
xor
mov
push
mov
repz
lret
ds
xchg
cmpsl
fimuls
and
push
iret
mov
jb
aad
icebp
mov
push
mov
mov
lcall
xchg
gs
test
pop
cli
sbb
ds
into
pop
nop
and
push
add
jp
push
adc
clc
divb
movsl
fistl
arpl
and
mov
dec
adc
xchg
adc
push
jb
jmp
push
jmp
test
dec
pop
sbb
mov
lds
loope
or
hlt
int
std
imul
dec
clc
cmp
into
sub
jne
xor
xchg
push
stos
cmp
iret
into
push
repz
das
repz
xor
test
ret
insb
jns
cli
loope
inc
fs
mov
insb
mov
aaa
xor
and
inc
jne
cltd
cld
and
outsb
jge
adc
faddl
ret
mov
push
popf
add
xchg
ja
fdivl
cltd
mov
mov
xchg
pop
ds
adcl
sbb
lret
xor
scas
fsubrl
es
xchg
hlt
xchg
dec
mov
adc
push
sbb
mov
ds
dec
movsb
bound
push
cmc
mov
inc
aad
add
cltd
bound
sub
jns
lret
test
mov
gs
lock
mov
jns
sub
pop
int
fsubl
sub
sbb
sti
cmp
js
or
in
call
in
jo
xchg
mov
push
cltd
loope
enter
xchg
mov
push
ficoms
iret
addl
push
cmp
mov
xchg
or
sbb
xchg
cmp
add
pop
ja
xlat
in
xor
aaa
jbe
mov
ss
mov
jo
rcr
inc
mov
sub
call
fldenv
lock
add
sub
mov
repz
in
int
adc
mov
hlt
dec
mov
jecxz
daa
mov
cld
mov
inc
pop
pop
mov
bound
xor
or
inc
lods
and
mov
std
add
jb
fbld
xchg
fisubl
sub
sti
pop
inc
data16
sub
pusha
sbb
repz
data16
or
ljmp
in
fildll
ja
pop
inc
cmpsb
cmp
addr16
daa
scas
push
shl
in
in
mov
fnstenv
aas
or
fstpl
addl
xchg
add
or
xchg
insb
xor
enter
mov
lret
sahf
leave
sti
jno,pt
pop
in
mov
nop
xchg
mov
mov
loopne
test
and
mov
xor
test
sub
pop
shll
fcomip
sub
nop
or
ficomps
negb
mov
push
mov
mov
aaa
hlt
aam
sbb
stos
fsubl
aam
sub
adc
xor
lahf
loopne
std
mov
loopne
stc
ror
jnp
addr16
sbb
or
shll
ret
repnz
push
mov
sarb
and
ffree
xchg
lods
sbb
pop
xor
aad
cmpsb
push
out
lahf
sbb
roll
pop
in
ret
int
aam
lret
scas
mov
cs
pop
leave
cwtl
movsb
je
jge
or
fsubl
subb
mov
push
xor
into
inc
lods
inc
xor
sbb
inc
fimull
fcoms
insb
push
jmp
push
add
sahf
stc
pop
add
in
fistl
movsb
mov
addr16
xchg
push
cltd
push
les
cmp
and
lret
icebp
or
mov
mov
mov
les
pop
mov
cmc
in
outsl
xor
in
pushf
fcom
mov
sbb
and
dec
imulb
call
or
bound
push
jno
hlt
movsl
xchg
sub
fwait
mov
popf
inc
push
pop
jns
mov
notl
loope
in
mov
push
rclb
dec
imul
push
data16
lea
jl
in
inc
out
sbb
cld
cmp
fistps
adcl
rcrb
nop
mov
add
je
shl
dec
sti
mov
jg
ror
push
jo
fdivr
jb
mov
inc
aad
mov
sbb
insb
mov
inc
iret
inc
gs
outsl
mov
push
out
std
dec
mov
test
out
cltd
subb
pop
jbe
inc
or
xchg
js
cs
lods
iret
cli
sbb
lahf
and
lock
push
iret
pop
pushl
dec
lret
int3
sbb
inc
xor
cltd
addl
jns
cmp
fwait
mov
pop
jns
outsl
notb
dec
mov
sub
sub
cmp
cmpsl
cmp
mov
repnz
es
mov
ret
sahf
sub
addl
lcall
movsl
cld
xchg
inc
cmpl
push
push
cmp
sar
lahf
push
xlat
sbb
xchg
movsb
jmp
xor
pop
fcmovbe
loope
aam
arpl
or
mov
mov
mov
or
ucomiss
ljmp
xchg
call
push
stos
dec
push
and
mov
ss
bound
mov
js
bound
mov
xchg
and
adc
jno
push
push
push
cmpsb
inc
mov
aaa
cmp
add
rolb
xor
or
pop
mov
mov
es
movb
and
pop
cltd
xchg
je
push
pop
mov
iret
divl
dec
jmp
mov
inc
clc
pop
pop
cmp
mov
push
add
mov
shrb
call
movsb
dec
jns
sbb
push
xor
or
cmp
stos
je
mov
mov
cmp
pop
mov
stc
pop
hlt
pusha
add
fwait
cmp
and
sub
or
mov
sbb
js
loope
aam
cmp
pop
fcomp
push
pop
fisubs
push
cli
int3
daa
test
dec
repz
push
flds
loopne
mov
xor
cmp
call
fprem
xor
push
cmp
cmpsb
and
dec
ljmp
loopne
push
jg
test
call
pop
jae
xchg
xchg
in
sub
mov
adc
fisubl
test
shr
imul
cmpsb
fistpll
int
mov
std
xchg
jl
fstps
sbb
sbb
shrb
out
lods
dec
pop
add
in
xor
enter
test
sbb
cmp
pop
insb
and
lea
mov
int3
inc
adc
cmp
cmp
loope
out
xchg
out
sarb
dec
insb
pop
add
das
ss
outsb
movsl
lock
fucom
adc
rcrb
fcmovb
adc
loope
icebp
push
sub
sbb
outsl
lds
fistpll
sarb
ret
arpl
pop
popf
out
mov
mov
adc
mov
subl
pop
repnz
faddl
xor
in
lahf
add
jns
call
js
sbb
cmp
add
mov
dec
movsb
lock
xor
in
jl
jmp
outsb
jne
or
inc
push
das
popf
mov
sbb
adc
mov
xchg
sub
add
jle
pop
mov
stos
inc
leave
sbb
negb
cmp
rcl
cmp
inc
xor
lock
mov
xchg
inc
add
inc
aam
pop
xchg
cltd
add
push
lds
xlat
mov
cmp
jle
bound
add
arpl
jno
lds
add
insl
pop
adc
mov
sti
sbb
mov
inc
ja
sub
mov
icebp
in
out
int3
cmc
jnp
testb
cwtl
mov
xor
addr16
jne
test
out
or
pop
mov
insl
lret
popf
jecxz
lea
daa
inc
lods
lods
xlat
inc
lods
lea
xchg
push
in
pop
cmp
iret
inc
rcrl
out
push
sub
pop
in
shl
xchg
loop
inc
jmp
sbb
push
mov
ss
add
mov
test
sahf
lahf
xor
movsb
ret
int
adcl
loopne
into
in
mov
sbbl
push
fdiv
test
test
jb
or
mov
fisubrs
xlat
push
syscall
cmpsb
dec
mov
dec
lahf
xchg
xchg
inc
stos
push
mov
xchg
or
jns
fs
mov
sbb
je
test
and
mov
jae
hlt
cmp
in
sub
lock
pusha
inc
cli
adc
sti
ds
push
adc
pop
cmp
adc
insb
mov
cmpsb
les
push
add
fwait
mov
fisttpll
and
bound
bnd
jb
add
mov
jnp
sbb
negl
aam
aad
jp
int3
fst
cmp
add
adc
notb
fldcw
test
xor
test
add
ficoml
pusha
or
add
jge
mov
jno
and
jg
mov
pop
pop
xlat
sbb
jne
inc
lock
pusha
in
push
xchg
mov
mov
outsb
fldenv
and
insb
jbe
push
pop
orl
jns
filds
je
xor
xchg
push
test
cmc
pop
call
imul
mov
fucomip
popa
jl
inc
out
popf
and
call
or
pop
adc
adc
mov
mov
repz
dec
dec
shlb
in
or
js
push
mov
mov
fnstenv
xlat
lcall
popa
add
jecxz
mov
dec
mov
xchg
lock
pop
sarl
inc
adc
or
mov
mul
fwait
nop
jnp
xor
das
pop
enter
pop
mov
mov
in
jle
push
pop
ljmp
and
cwtl
ficomps
mov
jne
mov
fmul
push
scas
adcl
xor
filds
lds
and
dec
jne
dec
aam
popa
adc
loopne
push
arpl
add
aas
jg
in
push
insb
sbb
stos
dec
mov
mov
mov
push
loop
sti
cmp
mov
jmp
data16
add
sub
outsl
push
mov
mov
lahf
mov
dec
dec
lock
xchg
call
sub
lods
les
add
dec
sarb
jno
out
in
adc
mov
pop
in
jecxz
out
push
lock
xor
mov
out
cmpsl
mov
mov
push
add
lea
dec
adc
scas
jle
jp
pop
adc
cmp
les
in
sub
or
imul
cmp
add
add
idivl
mov
ja
mov
fcmovbe
sub
cmp
ret
cwtl
add
dec
xor
subl
je
mov
outsl
leave
popf
movsl
sbb
adc
je
jb
nop
inc
xchg
fistpll
mov
or
ret
je
sub
inc
dec
push
push
les
push
roll
cld
jb
jnp
xor
add
and
pop
cmp
cmc
mov
fwait
stos
and
add
xchg
jb
adc
fisttps
jno
cmp
in
cld
mov
push
mov
inc
pusha
adc
mov
pop
sahf
push
jge
xlat
cs
fists
test
pop
mov
jl
imul
mov
and
and
pop
fnstsw
cmp
adc
loop
scas
xchg
inc
out
pop
shr
pop
jecxz
bound
pop
inc
jnp
imul
aad
inc
ds
mov
lods
push
inc
sub
dec
mov
or
dec
stos
jae
outsl
rorl
aaa
andl
stos
inc
pop
lahf
testl
xchg
add
jne
aam
xchg
lret
mov
jg
mov
ret
repnz
jmp
pop
mov
xor
sub
sbb
out
inc
mov
mov
sbb
sarl
aad
inc
cwtl
leave
xlat
xor
test
pop
orb
scas
test
add
aaa
pop
jbe
ja
stc
ret
fwait
sub
repz
mov
push
ja
loope
cmpsb
in
in
cmp
insb
test
fnsave
mov
jno
test
sbb
push
icebp
cmpsb
jg
cmc
arpl
jg
jae
lea
jmp
xorb
movsb
sbb
imul
outsl
xchg
jne
scas
mov
xchg
xchg
sbb
push
jbe
mulb
stc
in
inc
push
cwtl
sbb
in
imulb
lcall
sbb
inc
cmpsl
cmpsl
add
dec
in
dec
pop
jne
sahf
das
outsl
orl
repz
jg
shlb
jb
std
xor
aas
imulb
das
or
in
movsb
and
mov
jl
jne
xor
cmpsb
iret
jne
jns
pop
sub
enter
sarl
lret
pop
lds
lret
mov
jmp
stos
or
fadds
push
push
std
add
es
into
fildll
or
cmp
xor
mov
sbb
mov
mov
mov
and
dec
adc
inc
out
popa
das
out
repz
and
lock
inc
pusha
out
and
fnsave
ret
adc
cld
stos
inc
adc
aad
xchg
in
movsb
jmp
and
xchg
cmp
in
add
pop
ljmp
mov
push
dec
xchg
mov
pop
incl
and
push
pop
inc
enter
mov
adc
xchg
cltd
repnz
cmp
pop
and
mov
add
cmp
pop
rorb
outsb
push
pop
xchg
nop
sbb
and
mov
movsl
imul
nop
aaa
adc
pop
mov
cld
andb
shld
movsb
shlb
and
jno
cmpsb
and
sub
adc
insl
push
data16
jp
out
and
enter
push
mov
push
mov
sbb
mov
stc
insb
jno
out
cmpsb
pop
push
test
cmp
sub
inc
repz
nop
daa
jb
pop
add
adc
icebp
fidivl
inc
push
xchg
xor
cli
cmp
lahf
decl
rorl
xchg
mov
cli
shrb
lea
mov
orb
or
int3
mov
test
jo
pop
mov
out
cmp
in
enter
cmp
cmp
fwait
dec
pop
jb
dec
loope
pop
aaa
popa
lret
repnz
cmp
push
mov
out
pop
cmpl
pop
pop
inc
xor
cld
mov
je
or
mov
pop
cmp
pop
mov
int3
iret
mov
imulb
xor
jno
mov
mul
jae
xchg
pop
mov
gs
pop
out
sub
lret
inc
leave
icebp
sub
cmc
movsb
mov
outsb
daa
scas
mov
pushf
jnp
inc
sub
cmp
xchg
jg
adc
and
shr
jg
insl
movsb
das
push
and
scas
push
test
xchg
aam
scas
mov
mov
or
scas
shrl
shr
xchg
pandn
xchg
ret
xchg
outsb
dec
sub
hlt
or
and
xchg
adc
xchg
jbe
xor
xchg
in
insl
adc
inc
std
mov
xor
in
sub
mov
rcll
jne
xor
pusha
lods
ret
add
popl
jmp
cld
jle
into
rorb
mov
dec
sahf
add
xchg
dec
xor
jb
xchg
insb
test
xchg
das
cli
pusha
lods
lock
xor
out
and
pop
xchg
mov
xchg
jmp
in
rcll
pushf
shll
lcall
mov
cmp
lret
popf
aad
loope
dec
and
inc
movsl
push
or
sbb
sbb
in
cmp
push
or
cli
or
mov
arpl
in
sub
add
scas
test
jmp
out
loope
test
aas
mov
cmp
movsl
cmp
adc
cmp
sbb
fbstp
push
lds
adc
mov
lret
pop
push
mov
jno
add
dec
add
dec
push
movsl
dec
hlt
ret
in
leave
in
call
cld
inc
mov
pop
mov
push
add
jge
mov
mov
jnp
inc
cmp
rorb
fisttps
xor
js
xchg
das
into
outsl
mov
mov
dec
adc
mov
mov
icebp
js
push
in
cld
outsl
and
jmp
test
push
pop
hlt
cmpb
mov
addb
pop
add
loop
mov
sub
mov
call
push
jns
repz
data16
scas
popa
inc
cltd
test
mov
out
mov
xchg
cmpsl
mov
pop
stos
cmc
add
or
movsl
adc
inc
inc
pop
in
xchg
cmp
inc
aad
fwait
lcall
rorb
jae
mov
xchg
ja
pop
pop
stos
sar
jecxz
dec
pop
clc
jmp
mov
xchg
iret
mov
test
cmp
mov
or
into
mov
sbb
cmc
mov
enter
push
xor
loopne
mov
imul
xchg
sbb
jp
cmp
xlat
jno
fcomp
repz
jbe
stos
cmp
sub
push
hlt
dec
pop
int
jnp
inc
insl
inc
sub
or
or
movsb
rorl
outsb
rcrl
xchg
sbb
aad
in
sahf
push
mov
or
outsb
push
xchg
sbb
or
or
cmp
aaa
sbb
jg
in
cmp
sbb
pusha
repz
xchg
shl
repnz
stos
sbb
cs
fistpl
xchg
jbe
adc
push
out
inc
iret
inc
dec
xchg
jl
lock
cmp
and
dec
and
pop
or
cmp
adc
pop
dec
sbbb
iret
push
inc
and
xchg
stos
sbb
sub
mov
xchg
loope
mov
std
and
stos
dec
mov
jae
jmp
or
push
jns
pop
mov
iret
push
js
inc
sti
fstps
stc
ss
sarl
fwait
inc
cli
int3
or
push
or
inc
fadd
or
sti
test
je
push
cltd
in
popf
push
cmp
out
aaa
repz
insb
test
enter
lcall
iret
addr16
sbb
pop
dec
and
fiaddl
adcl
sbb
sub
pop
aam
add
mov
mov
xor
inc
add
sbbb
or
cmp
jge
out
sbb
test
push
sbbl
into
mov
pop
int3
sarb
sub
sub
pop
fcoml
mov
nop
mov
mov
push
sbb
daa
insl
leave
movsl
sbb
insl
mov
mov
mov
jg
lret
fs
mov
lea
clc
mov
int3
or
loope
ss
int3
pop
pop
andb
cmpsl
adc
cmp
xchg
rclb
in
cld
jmp
push
push
or
mov
inc
leave
xchg
mov
nop
call
jmp
sbb
mov
inc
dec
add
inc
mov
and
mov
loop
out
fcomps
mov
jle
loopne
or
mov
pushf
sbb
jle
cli
cmp
into
sub
jb
and
xchg
add
js
ss
je
aaa
mov
jno
sub
and
lock
lods
add
in
pop
or
jae
cmp
sbb
xchg
xor
mov
rcrb
mov
cmc
lods
dec
je
addr16
syscall
popa
daa
test
jns
sbb
fidivrs
xchg
repnz
and
fnop
adc
mov
jno
in
mov
ds
lds
fwait
lret
push
fcomip
mov
adc
push
pusha
pushf
or
outsb
cs
adc
mov
xlat
sbb
bound
out
cltd
testb
fbstp
dec
out
push
add
xchg
mov
sub
cmpsb
jl
sbb
jg
lcall
enter
stos
mov
xorb
jnp
aaa
lahf
pop
inc
iret
sub
and
inc
inc
xor
in
lds
repz
push
push
mov
sbb
movsl
xchg
xor
push
popa
je
inc
out
aaa
xor
add
xor
xorb
sahf
jecxz
call
and
mov
loop
cli
negb
rcll
loope
data16
in
jns
enter
inc
add
je
insl
cmpsb
dec
pop
arpl
hlt
aad
cltd
sub
jbe
imul
cmc
ds
sub
push
lock
sbb
mov
lahf
xor
and
mov
or
es
xchg
pop
pop
arpl
inc
dec
fsubrl
mov
push
jnp
and
and
lret
in
sbb
fbstp
mov
sbb
insb
out
or
mov
pop
xchg
push
lcall
push
in
stc
les
sub
into
mov
leave
push
or
jns
mov
stos
adc
dec
into
neg
cmpsl
sub
jne
stos
fdivl
mov
ljmp
cmp
aaa
aad
sbb
clc
sahf
mov
sub
sbb
fwait
sahf
adc
pop
addr16
mov
inc
shrl
loop
in
dec
popf
icebp
filds
and
xor
sbb
outsl
xchg
pop
mov
int
pop
insl
scas
test
test
dec
fdivl
pop
mov
inc
cmpsb
push
mov
add
loopne
jns
jo
cmp
push
enter
aam
dec
pushl
movl
test
push
stos
lret
mov
mov
lea
pop
stos
xor
or
sub
add
cmp
mov
add
push
cmp
inc
sub
iret
jg
pop
sub
jnp
mov
sub
mov
je
or
icebp
dec
out
pop
shrb
pusha
push
xorb
pop
xor
sub
pop
adc
inc
iret
push
push
lock
xlat
pop
pop
por
inc
fsts
test
push
sbb
sub
out
mov
mov
jle
push
popf
mov
cmp
adc
mov
xor
shrb
pop
hlt
xor
in
test
push
dec
sbb
in
or
and
shlb
js
xorb
xchg
xchg
fdivrs
imul
add
std
pop
mov
loope
fsubs
sbb
mov
add
mov
push
fstpl
push
add
add
xchg
jno
push
ja
lret
das
int3
mov
pop
inc
pop
pop
inc
outsb
and
or
fadds
mov
ljmp
adc
add
fstpt
hlt
loop
adc
inc
or
daa
ret
decb
push
jbe
push
mov
imul
scas
addb
popf
mov
outsb
pop
jae
jmp
sti
aaa
shll
dec
testl
lds
mov
sub
jle
ljmp
dec
icebp
lret
enter
stos
jg
adc
lret
mov
leave
jbe
repnz
into
push
jmp
jg
sahf
mov
mov
mov
pop
test
dec
insl
jns
dec
mov
add
ds
xchg
arpl
or
jl
and
out
mov
xorl
es
lahf
stos
pop
les
push
pop
scas
cld
sub
pop
adc
mov
add
imul
jne
mov
fisubrl
jnp
daa
xchg
pushf
outsl
arpl
lock
arpl
jge
jb
dec
insl
inc
mov
push
loope
push
insb
jge
hlt
jns
fwait
sub
dec
jo
mov
xlat
adc
mov
sti
shrl
stos
inc
dec
mov
icebp
mov
xor
lock
lret
cs
ss
jo
jecxz
push
out
cmp
or
sti
jnp
call
and
mov
mov
push
cltd
add
pop
cmpl
ss
fisubs
cmp
sbb
jbe
pushf
sti
test
xor
and
pusha
sarb
dec
xlat
fwait
in
inc
outsb
in
xor
push
pop
sub
fcomps
out
add
enter
and
mov
sub
xchg
ss
pop
std
push
fbstp
outsb
shr
outsl
mov
pop
jns
cwtl
jg
xorb
mov
jae
dec
cmp
xchg
rcrb
mov
fs
jmp
pushf
mov
cmpl
imul
jns
and
outsb
mov
icebp
cltd
outsb
sub
pop
and
and
mov
pop
addl
cmc
lods
int
lcall
rcrb
maxps
xchg
mov
jl
sbb
fsts
xchg
xchg
shll
adcl
mov
orb
inc
cmp
aas
cmpsb
mov
pop
stos
lret
repz
push
imul
sarl
xchg
imul
or
pop
insb
hlt
pop
in
mov
repz
test
xchg
and
aam
gs
orb
inc
pop
xchg
je
pop
cs
call
pop
gs
popf
lret
and
mov
sbb
ficompl
shll
pop
mov
inc
dec
push
out
stos
les
push
test
aad
mov
fists
and
loope
fwait
out
sub
adc
mov
jae
addr16
xor
cmp
pop
cmpsb
cltd
dec
jnp
add
dec
ss
adc
mov
shrb
mov
adc
js
push
mov
out
aam
and
cs
inc
daa
lcall
lea
sbb
pop
scas
dec
adc
cmpsl
jbe
insl
adc
pop
in
stos
and
bound
testl
lds
cmp
pushf
sub
adc
mov
xlat
xstore-rng
cmpsl
add
stc
jle
mov
jno
js
pop
push
lret
pop
jno
or
aam
xor
cmp
adc
sub
in
test
scas
lods
les
xchg
jge
xchg
lcall
mov
mov
insb
mov
mov
mov
cmpsb
mov
jp
lods
xor
cmp
gs
mov
addr16
add
push
in
mov
cld
inc
add
cli
mov
inc
sbb
ja
cmp
cli
fstpl
test
add
inc
inc
sarl
test
jae
sub
addr16
imul
or
or
leave
fwait
dec
call
loopne
sbb
mov
in
lock
xchg
xor
shrb
test
cmpsl
ja
popf
push
std
testb
pop
jno
and
divb
adc
out
push
cmc
outsl
sub
shlb
inc
mov
sbb
iret
sub
mov
mov
push
mov
sub
pop
xor
mov
pop
sbb
lahf
arpl
cs
loopne
xor
xlat
popf
lea
jne
cs
ficomps
ret
pop
inc
or
in
cli
push
ret
lock
sub
push
lea
icebp
sbb
push
fs
adc
mov
add
or
xor
add
call
and
mov
push
xchg
mov
push
mov
jmp
mov
insb
movsb
mov
in
xchg
ljmp
imul
dec
lock
fcmovbe
aas
mov
cld
outsl
sar
bndstx
adc
es
pop
cmc
hlt
or
push
jne
add
inc
aam
jle
xor
inc
aaa
mov
stc
jge
dec
pop
outsl
and
nop
movsl
and
inc
sub
mov
aaa
inc
shl
mov
popa
ja
jle
sbb
ljmp
cld
push
sub
jge
out
loop
addb
push
mov
repnz
mov
adc
popa
sti
int
mov
popf
xlat
pop
xchg
push
mov
fisubs
shl
test
jmp
or
jecxz
dec
mov
mov
scas
cmp
adc
test
dec
pop
add
pop
jecxz
mov
cmp
loope
jns
into
mov
or
push
enter
add
jge
addr16
insb
arpl
push
outsb
adc
stc
xchg
or
rclb
jecxz
push
repnz
test
sbb
xchg
pop
xchg
les
lds
push
int3
and
mov
sahf
xor
sub
jecxz
in
pop
fcmovnu
or
lahf
fnsave
cmpsl
xor
xor
jb
loopne
aad
cmp
cmp
aam
sbbb
fldt
das
pop
pop
push
xchg
xchg
pop
push
ret
out
sbb
lcall
lea
and
in
daa
clc
repnz
repnz
adc
add
in
test
into
xchg
sbb
xchg
test
stos
add
aad
out
in
es
xor
pop
popf
cmp
jmp
testl
jmp
lret
cmp
addr16
fimuls
sub
lea
pop
inc
mov
cmp
push
loopne
sbb
shl
xchg
aad
jle
out
fwait
push
push
pop
imul
lahf
aad
fst
ja
daa
pop
std
dec
out
add
stos
int3
out
adc
std
sti
xor
jecxz
jecxz
pop
push
jnp
movsb
ret
xlat
fidivl
cmpsb
push
mov
sub
fsubrs
jb
adc
xchg
mov
cld
clc
dec
jns
mov
cmc
pop
adc
shl
shlb
fildll
mov
sub
xor
rcrb
shrl
mov
nop
jl
gs
andb
es
and
rorb
int
adc
push
mov
cmp
sub
gs
test
dec
sbb
push
adc
orl
dec
mov
cltd
mov
inc
xlat
mov
repnz
sti
pop
mov
adc
std
loop
cli
push
jg
xchg
popf
les
mov
mov
jae
int3
js
insb
mov
adcb
inc
rclb
push
pop
mov
push
mov
es
xchg
int
push
pop
add
dec
adc
mov
push
pop
sbb
mov
ds
push
add
mov
fdivl
push
pop
test
lods
cmp
push
ja
lods
cmp
pop
mov
pop
cltd
test
mov
pop
jns
sub
mov
push
mov
cld
stos
je
repnz
cmp
int
test
mov
shrl
idivb
popf
cld
cmp
in
cld
xchg
pushf
outsl
xor
loop
cmp
popa
xchg
cmpsl
jmp
cmp
arpl
dec
mov
sub
inc
mov
sbb
push
push
rolb
xchg
adc
stos
pop
cmp
jl
dec
or
or
ret
inc
adc
aaa
shrb
adc
ja
fstpt
dec
and
mov
pop
push
or
iret
add
clc
mov
std
int3
or
dec
cmp
or
mov
shl
outsb
lret
mov
sub
movl
stos
leave
sbb
jnp
arpl
add
and
push
push
call
xchg
cltd
cltd
rcr
and
imul
xor
inc
sub
inc
jnp
xor
pop
ret
test
lcall
cmp
rcrl
leave
and
fldenv
je
cli
push
sti
jno
push
nop
xchg
mov
xchg
xor
jno
cmp
cmp
mov
loop
dec
lcall
ljmp
inc
push
pop
pop
in
sbb
or
int
ret
leave
jg
jae
and
mov
inc
push
push
jo
cwtl
jne
push
jo
adc
insl
mov
xor
pop
icebp
xchg
ja
pop
lcall
into
arpl
adcl
das
nop
movsl
and
scas
mov
push
enter
lds
add
mov
push
arpl
jmp
dec
ljmp
test
push
sub
sub
cs
add
sub
dec
mov
mov
popf
sbb
arpl
je
push
cmp
out
pop
dec
subb
pop
mov
fs
outsl
jl
cmp
xor
ss
jo
mov
cmpsl
cli
sbb
cs
out
add
mov
in
bswap
call
imul
sbb
fcmovu
xchg
mov
xor
sbb
sahf
xchg
data16
in
frstpm(287
xor
jecxz
mov
aam
stc
rcr
and
jo
sub
mov
jnp
push
cli
or
inc
dec
pushf
add
frstor
and
xor
shrl
movsb
in
mov
sub
imul
xchg
sbb
jmp
jecxz
test
mov
rorb
mov
or
inc
movsl
pop
cs
sbb
data16
fucomp
movsl
scas
lahf
roll
repnz
mov
mov
fwait
inc
mov
cmc
mov
push
inc
mov
pop
cmpsl
lcall
cmp
xor
leave
xor
mov
repnz
lods
push
cwtl
movsl
mov
lret
mov
mov
mov
fs
scas
imul
aas
imul
dec
pop
dec
pop
pop
ss
push
mov
pusha
lods
adc
inc
mov
out
das
popf
mov
idivl
daa
decb
sar
mov
cs
mov
aas
push
mov
rep
loope
inc
fbstp
mov
and
inc
xchg
mov
inc
call
fisttpl
mov
in
scas
and
ss
jb
xchg
outsb
mov
push
mov
or
cwtl
test
sub
scas
pop
jnp
stos
mov
mov
push
pushl
adc
xchg
or
mov
adc
sub
mov
lods
out
or
repnz
inc
mov
jle
jge
jae
iret
fwait
mov
mov
movsl
mov
shrl
arpl
shlb
mov
lea
ret
cmp
push
sahf
xchg
lods
lds
fisttpll
or
dec
rolb
fildl
cli
adc
mov
jl
xlat
inc
add
mov
lahf
push
cmp
push
repz
sub
lock
in
xchg
daa
xlat
push
in
stos
inc
enter
xchg
jl
xchg
mov
add
decb
jb
mov
dec
test
inc
mov
pop
or
sar
push
fnsave
jecxz
in
dec
and
add
pop
add
dec
dec
cmp
loopne
into
je
dec
call
daa
popa
mov
mov
repnz
aad
jno
or
in
sub
test
mull
shrb
push
sbb
cwtl
sub
jbe
mov
outsb
imul
dec
push
mov
in
mov
xor
pop
int3
push
lea
cmp
mov
dec
fnstenv
xchg
jmp
cmp
clc
ss
repz
insl
clc
cltd
gs
pop
in
mov
cmp
aad
sarb
mov
add
or
in
lret
jo
orl
arpl
jecxz
jns
jecxz
jmp
add
scas
adc
mov
fwait
adc
xor
rcrb
xchg
cli
mov
jl
lds
das
xor
lock
or
aam
adc
jno
das
push
gs
xchg
stos
xorb
push
flds
mov
sar
loope
popf
mov
out
ret
stos
sbb
mov
fucomi
pusha
mov
iret
xor
adc
ret
bound
jnp
cmpsb
sbb
inc
pop
sbb
ret
push
mov
xchg
ja
stos
repz
inc
cmp
xchg
cwtl
and
fists
scas
pop
jne
ljmp
cmpsb
stc
add
das
pop
dec
mov
pop
cld
daa
xor
dec
imul
outsl
xchg
fcoml
aad
adc
lods
jle
ljmp
in
pushf
sbb
sub
push
inc
mov
add
adc
fs
mov
stos
jge
pop
push
xlat
mov
push
dec
cmp
fidivrl
fcmovne
pop
xchg
addl
jmp
jmp
scas
scas
cmp
std
or
cmp
xchg
out
add
and
cmp
sbb
and
inc
scas
outsl
fcmove
ret
or
lret
sarb
mov
and
mov
sbb
das
push
pushf
mov
sbb
lea
sarb
adc
scas
inc
adc
scas
outsl
jnp
lret
or
push
aaa
aas
sub
in
push
ja
iret
jb
mov
fwait
mov
and
xor
push
lock
lea
stc
orb
or
mov
pop
testb
cwtl
data16
xchg
fistps
mov
iret
insb
push
andb
aad
jg
les
ja
cmp
and
les
lret
mov
out
dec
test
mov
cmpsl
dec
dec
xchg
xor
dec
pop
cwtl
xchg
adc
sub
push
pushf
aam
das
sub
add
ja
xor
fdivrs
mov
xchg
scas
enter
je
imul
hlt
mov
into
mov
lret
sbb
or
or
push
stc
icebp
jl
sub
add
test
ss
mov
push
cmpsb
inc
lods
fmuls
mov
bound
add
or
sub
adc
das
xor
mov
lds
push
jge
mov
sub
aas
cld
mov
mov
divl
cmp
xor
xchg
ficoml
lds
fdivs
dec
test
ret
add
fidivrl
mov
push
dec
push
push
push
mov
cmpsl
test
cmpsl
mov
adc
jge
ret
scas
mov
cltd
cmp
test
mov
imul
fwait
outsl
lock
daa
jp
test
jg
inc
inc
mov
data16
inc
lock
or
in
push
cltd
mov
jg
dec
mov
mov
loopne
jp
mov
std
pushf
push
jns
stos
mov
sbb
lds
mov
cmp
loop
xor
xchg
sbb
mov
icebp
pop
roll
fisttpll
mov
icebp
sbb
pop
pop
ret
out
mov
add
aam
push
cmp
xor
jb
pop
lock
push
jmp
out
mov
imul
mov
xor
inc
push
fs
sbb
dec
adc
cmp
les
loope
mov
imul
mov
in
lret
out
lcall
inc
insl
push
lret
mov
insl
and
adc
enter
xchg
test
sub
sar
jns
xchg
fistps
lea
lock
xchg
loope
jo
fstps
scas
stos
cmp
scas
in
inc
jb
mov
cmpb
sti
dec
mov
push
rorb
arpl
jge
into
push
sbb
scas
cmp
scas
add
mov
pop
dec
sub
push
addb
outsl
mov
aaa
sbb
adc
cmp
cmp
mov
fidivl
fstl
xor
movsb
cmp
mov
cmp
sbb
xor
mov
dec
repz
inc
fisttps
mov
sbb
movsb
les
xchg
xchg
and
sub
cmc
jg
adc
pop
popa
push
add
jmp
jecxz
sbbb
jmp
add
into
inc
sub
ljmp
sub
jl
subl
xchg
pushf
xor
pop
adc
aam
fildll
test
inc
mov
dec
push
mov
or
pop
mov
or
leave
out
mov
fwait
inc
imul
out
les
and
loope
pushf
mov
mov
and
mov
mov
int
shrl
enter
outsl
std
xchg
xor
lods
add
jbe
mov
inc
push
mov
adc
rorl
sub
out
pop
pop
lock
shl
dec
es
enter
and
test
pushf
rclb
cs
push
adc
mov
stos
call
in
cmovae
jmp
inc
pusha
dec
xor
pop
aaa
icebp
mov
sbb
imul
dec
pop
mov
cmp
jno
insl
mov
inc
test
outsb
dec
lcall
sbb
or
shll
jg
sbb
in
cs
lods
jo
cmp
adc
cmp
mov
subb
pushf
sahf
dec
mov
push
mov
ret
add
mov
cmp
shlb
sahf
mov
mov
imul
pusha
popf
pop
adc
pop
add
fiadds
inc
shll
push
xchg
loopne
mov
jo
dec
or
sbb
jnp
pop
inc
push
xlat
rorb
pushf
mov
pop
mov
pop
jge
inc
pop
nop
sbb
lds
jnp
push
pop
add
in
cmp
flds
sbb
sub
out
imul
lock
sub
mov
aas
pop
std
mov
loope
out
fisubrl
jl
pop
sti
jp
dec
addl
fs
stos
outsl
int3
mov
mov
pop
jns
sbb
cmp
and
pop
xchg
es
mov
int3
in
gs
inc
fs
push
aaa
jg
mov
xchg
mov
cld
orb
fnstenv
push
mov
mov
pop
subb
adc
inc
int
adc
lahf
pop
bound
imul
call
in
in
insb
push
fwait
mov
mov
insl
aam
inc
fsubl
call
jl
xor
sub
out
pushf
rcrb
andb
xlat
dec
inc
cmpsl
jmp
jno
cmp
loope
jnp
push
or
repnz
icebp
push
jl
stc
add
cmpsb
pop
leave
insb
nop
mov
xchg
fs
jl
pop
mov
popf
xchg
cli
xchg
push
or
rcr
imul
and
into
mov
daa
mov
cmc
inc
fisubl
shrb
cs
daa
dec
cmp
loopne
mov
jmp
or
jge
dec
and
jmp
cmpsl
pop
sub
imul
lret
xor
std
ffree
push
pop
rorb
sub
je
test
adc
lods
pop
arpl
dec
add
sbb
push
push
pushf
inc
inc
mov
sub
sti
clc
pop
out
mov
divb
rcr
or
jmp
mov
pushf
mov
xor
insb
and
test
rolb
inc
jecxz
cmpsl
inc
aaa
xor
cmpsl
inc
xchg
jne
fs
mov
notl
xchg
imul
fisttps
sub
cmp
shll
into
push
xor
clc
loopne
ret
fmull
and
jp
adc
pop
fcmovnu
imul
test
into
pushf
mov
les
sahf
cmp
jecxz
aam
pop
dec
mov
push
jmp
push
fs
dec
lock
fnstenv
mov
les
in
jecxz
aaa
xchg
add
xor
enter
sahf
std
sub
add
and
insl
ret
xchg
in
cli
int
mov
pop
sbb
arpl
xchg
enter
mov
push
fcmovnu
iret
in
cmp
cmpb
inc
cmpsb
sub
adc
dec
jecxz
pusha
and
push
cmp
loopne
clc
sbb
ret
xor
xchg
cmp
jle
mov
stc
popf
inc
aas
mov
adc
pop
cltd
jge
leave
pop
inc
arpl
sub
sbb
push
pop
push
mov
mov
fnstsw
cmp
or
dec
pop
fstpl
scas
cmp
mov
sub
jne
lcall
mov
xor
repz
lock
iret
mov
sub
sub
pop
cwtl
outsb
dec
les
adc
or
mov
loope
frstor
or
or
arpl
pop
cmp
jg
rclb
in
pop
sbb
sub
insb
add
inc
dec
sub
cmc
lea
int3
mov
repnz
sub
inc
adc
shll
paddsw
fdivl
fcmovbe
sub
int3
lock
dec
aam
pushf
inc
jle
lods
mov
mov
in
xlat
into
in
mov
sbb
and
dec
hlt
in
pop
sahf
jns
mov
xor
inc
je
xor
mov
push
pop
cli
call
iret
cli
movsb
bound
test
xchg
int
and
std
jle
mov
xlat
jo
mov
sub
inc
scas
jp
xchg
loopne
pop
stos
add
std
push
pushf
cmp
sti
pop
and
mov
and
xchg
test
arpl
jno
sub
subl
aad
dec
pusha
inc
mov
aaa
push
pop
out
jecxz
push
inc
xchg
mov
mov
and
push
pusha
mov
ss
mov
dec
add
or
jmp
push
mov
repz
jnp
xchg
nop
xchg
sbb
pop
cmpsl
add
lods
mov
imull
repnz
scas
out
outsb
mov
dec
adc
xor
pushf
dec
jb
clc
test
cwtl
dec
test
inc
scas
data16
mov
pop
push
test
or
popf
push
jle
pusha
pop
sbb
lock
popf
data16
jp
loopne
pop
mov
mov
push
pusha
add
int3
popf
popa
jo
jge
inc
in
mov
out
ljmp
ret
sub
popa
inc
fdiv
jo
and
sbb
sarb
fsubp
and
dec
popf
fldt
mov
pop
testb
pushf
add
mov
push
cld
and
mov
inc
repnz
jb
pop
sbb
fnsave
jbe
lods
stos
decl
out
jp
nop
out
and
mov
dec
inc
fisubrl
pushf
ror
xor
xchg
stc
loope
push
sub
pop
xchg
cmpl
outsb
add
mov
xchg
adc
js
xor
or
popf
movb
test
push
sti
fbld
ja
mov
lock
push
adc
mov
push
adc
dec
mov
pop
and
scas
jb
adc
aaa
in
push
negl
mov
and
sahf
mov
pop
push
inc
adc
xchg
mov
xlat
ds
pop
arpl
fwait
mov
mov
or
mov
in
adc
xor
ficoml
pop
inc
lock
cmp
ret
or
cmp
add
cmp
test
and
insl
dec
fdivrs
in
imul
loop
daa
fists
lcall
fwait
arpl
cltd
ljmp
das
repnz
adc
stc
mov
mov
sub
mull
adc
ret
enter
adc
ja
lahf
fldenv
out
sub
js
and
cmc
mov
xor
dec
test
hlt
add
clc
fwait
pushf
daa
jb
pop
nop
and
rorb
jmp
jecxz
outsb
pop
cli
dec
jb
out
mov
and
aas
mov
std
jge
sbb
ds
bound
fisttps
add
cmp
arpl
lret
mov
divb
ret
jg
ret
test
subb
mov
fidivl
out
stos
push
add
add
inc
dec
cwtl
fsubrl
add
xor
push
in
fbstp
in
sub
or
cli
adc
cmp
mov
push
adc
pop
or
sar
and
push
push
and
push
aad
clc
arpl
push
xor
sbb
addr16
inc
les
jae
push
xor
mov
outsb
rcll
pop
add
xor
push
lea
jmp
aas
jb
test
xchg
test
fimuls
inc
sub
leave
sbb
mov
stos
jmp
rolb
jno
iret
data16
out
cmpsb
inc
ljmp
inc
mov
pop
add
xor
push
bound
mov
iret
push
inc
adc
dec
jp
fnsave
jp
pop
cmp
jne
movb
push
fs
xchg
addr16
mov
loope
add
cmpxchg
jge
mov
scas
popw
shrb
xor
aas
imul
out
cmp
push
mov
dec
pop
clc
jmp
dec
mov
aam
or
add
iret
push
jecxz
push
push
fxch
cmpsb
adc
and
outsb
shrb
sti
cmpsl
push
movsl
je
xchg
dec
jl
div
pop
push
push
dec
sub
je
dec
rcrb
adc
lcall
fs
fs
das
or
inc
and
add
xorl
jo
pop
fisubrl
pop
cld
xor
adc
jo
or
jle
push
daa
aad
push
clc
lock
mov
push
push
xchg
xor
lock
jns
xor
std
ljmp
inc
aas
sbb
jae
jae
pop
mov
push
test
and
shr
adc
jae
cwtl
sub
loopne
sarl
in
push
sbb
das
in
and
mov
insb
or
or
pop
test
xchg
sbbl
dec
in
push
popf
adcb
ret
sub
xor
sbb
int
ds
sbb
sbb
outsl
incb
pop
pushf
popa
test
movsb
mov
sbb
lods
test
das
mov
sahf
push
cmp
clc
pop
add
and
lods
jecxz
jp
sbb
enter
cmpsb
into
add
sub
aas
loop
sbb
arpl
xor
jl
jge
lock
ja
aaa
cmp
push
test
mov
or
pop
push
sarb
stos
out
fstpt
sub
insl
lret
jnp
fwait
pop
xorb
and
mov
int3
and
xor
pop
fcoms
cmp
sbb
jbe
dec
inc
aam
xchg
sub
into
inc
lods
mov
mov
pop
mov
jb
cmp
mov
cmpb
push
ljmp
cs
adc
dec
pop
mov
addb
imul
ret
pop
shlb
sbb
cli
push
xor
pop
prefetcht2
test
int3
fisttpll
pop
xchg
ljmp
loop
pop
aaa
sub
sub
inc
mov
jae
cmp
adc
jle
aaa
mov
pop
jl
inc
mov
dec
xlat
dec
in
pusha
inc
add
aaa
mov
or
mov
jno
shrb
loopne,pt
mov
mov
xor
cmp
jns
fldenv
lahf
repz
inc
shll
pcmpgtd
push
dec
or
dec
xchg
gs
adc
neg
decl
fs
adc
gs
ja
js
or
and
out
jecxz
pop
fs
scas
sbb
jns
push
shrl
ret
mov
add
shl
sbb
gs
movsb
imul
cmp
dec
enter
das
data16
lock
test
lock
decb
shl
stos
imul
into
pop
xchg
sbbb
dec
adc
mov
add
pop
aam
inc
push
rcll
lods
insl
add
sub
in
jb
fbstp
inc
or
push
jo
fnstcw
cltd
push
xor
scas
dec
pop
cmp
mov
aad
push
je
lahf
xchg
or
loop
push
mov
mov
out
add
jne
sbb
adc
push
popl
pusha
orb
aaa
jecxz
pop
push
mov
push
call
jo
add
hlt
out
test
inc
jg
mov
cs
out
stc
mov
sub
fistl
ja
roll
mov
sbb
add
jbe
jo
or
mov
ds
xchg
push
cltd
jne
cmp
or
rcrl
pop
mov
push
ret
push
psllw
pop
in
cmp
mov
pusha
in
and
and
lret
xor
inc
addr16
dec
test
xchg
icebp
mov
inc
pusha
lods
jno
dec
mov
xchg
add
imulb
insb
push
cmpsb
xor
out
push
jns
fs
cld
xlat
in
inc
push
lret
pusha
jmp
shl
pop
push
mov
mov
xor
or
outsl
xchg
dec
cmp
nop
xlat
shll
jle
out
adc
data16
repz
push
les
cld
hlt
popa
mov
xor
pop
pop
push
popa
stos
sbb
add
fwait
inc
mov
and
test
int
jecxz
mov
mov
dec
mov
shl
shlb
xor
rcll
mov
add
jp
dec
testl
dec
xchg
int3
adc
add
xchg
inc
xor
icebp
jnp
jg
idivl
das
pop
faddl
inc
mov
push
dec
in
xchg
ljmp
lea
mov
call
cmp
push
out
add
js
inc
enter
movsb
negb
mov
mull
in
jno
add
sbb
jo
mov
xor
filds
push
jbe
lock
iret
jo
lods
hlt
nop
mov
and
shr
scas
pusha
ror
dec
inc
mov
cmp
call
sbb
ljmp
mov
xchg
movsl
scas
mov
mov
dec
or
xchg
leave
sbb
cmp
test
push
fwait
inc
stc
mov
adc
xchg
outsb
or
pop
sbb
daa
xor
cmp
push
dec
xchg
bound
jns
inc
cmp
dec
out
inc
pop
push
and
pop
jecxz
cmp
cmp
insb
test
xchg
jo
or
fcomi
jbe
xor
lea
jne
xchg
dec
aaa
mov
push
mov
jle
adc
mov
je
mov
fcoms
js
fwait
adc
in
mov
fs
ja
aas
in
cmp
mov
pusha
jb
pop
and
dec
pop
jmp
test
pop
outsl
lret
push
mov
or
stos
dec
aam
push
inc
inc
xlat
nop
mov
jle
gs
loopne
adc
aaa
jle
shrb
jnp
and
dec
lods
test
bound
outsl
sahf
jns
ljmp
sbb
push
je
inc
dec
add
inc
stos
es
outsb
and
loope
scas
mov
mov
push
arpl
jne
cli
mov
fnstcw
dec
jbe
add
sbb
clc
pop
mov
loopne
xor
lcall
jle
jbe
popa
pusha
push
inc
inc
sbbl
cmp
loopne
cmpsl
rorl
hlt
add
mov
fmuls
shl
lods
cmpsb
iret
and
adc
mulb
arpl
mov
sub
aaa
inc
cs
movsl
repnz
mov
sbb
mov
dec
daa
jae
adc
cs
dec
pop
mov
or
adc
addl
push
fstps
cwtl
insb
jae
js
aas
leave
out
rcrl
add
in
out
aas
xor
out
aaa
inc
bound
jb
out
inc
std
pushf
cmc
hlt
sbb
cmpsb
inc
data16
out
or
stos
jnp
sub
insl
pop
mov
jle
dec
pop
cs
inc
mov
es
scas
repz
cmpb
aad
int3
jnp
push
out
mov
mov
jbe
adc
push
sti
sbb
popf
iret
mov
and
in
insl
pop
aaa
fs
sbb
jnp
xchg
pop
mov
int
adc
loop
vpcmpgtw
test
mov
cwtl
movl
int
in
mov
dec
push
pop
jne
ret
and
shrl
jo
mov
test
testb
cmp
test
lret
cmpsl
popf
xchg
iret
lds
pushf
cmp
push
aad
dec
test
ds
popf
sub
sbb
push
lret
out
js
sub
stos
mov
push
and
aas
dec
jae
dec
out
ss
mov
sbb
jp
sbb
add
loope
lret
mov
push
fmul
jl
loopne
scas
lods
popa
dec
enter
rcrb
sahf
mov
adc
add
aam
mov
mov
push
sub
enter
dec
sub
cltd
jl
dec
imul
repz
and
imul
mov
lret
push
addr16
cmpsl
xchg
mov
mov
push
adc
cmp
insl
adcl
mov
test
mov
stc
subb
pop
push
outsb
pop
push
push
adc
stos
jmp
hlt
mov
enter
pusha
push
popf
adc
decb
xor
adc
icebp
sub
push
les
aad
and
adc
cmpsb
pop
in
add
stc
sbb
setl
enter
in
test
mov
in
push
outsb
fisubrs
fnsave
dec
inc
unpcklps
xor
sbb
mov
sbbl
inc
ss
adc
aas
femms
ljmp
push
in
or
cmp
test
in
enter
cmp
push
sub
cmp
sub
dec
lds
mov
out
inc
adc
data16
jmp
clc
in
add
dec
add
sti
mov
xor
xchg
sbbb
data16
loop
sub
pop
push
mov
int
xor
jbe
into
stc
pop
ffreep
aaa
xor
lret
mov
and
fs
sub
mulb
inc
test
aas
xor
add
das
jecxz
int3
dec
add
push
jecxz
stos
jne
jbe
jl
in
and
fwait
jno
mov
jbe
fcomps
jo
aaa
test
data16
xor
pushf
ficompl
shll
fisubs
push
jns
loope
mov
mov
inc
or
sbb
shll
lds
and
xchg
mov
add
daa
and
pop
ret
mov
mov
add
test
cltd
adc
nop
adc
stc
test
cmp
sub
pop
loope
ljmp
outsl
in
xchg
mov
add
xor
mov
inc
push
pop
jbe
mov
mov
fidivl
es
mov
fs
pop
inc
push
push
adc
loope
sbb
sbb
data16
ret
sub
add
testl
fisubl
call
das
sbb
jmp
jge
xor
popa
out
sbb
int3
inc
adc
jae
nop
outsb
xchg
cmpsl
adc
mov
push
pop
push
mov
out
loop
push
jg
cltd
adc
loope
xchg
pushf
test
fnstsw
jns
push
mov
mov
pop
jl
rclb
and
mov
sbb
fdivp
sub
cwtl
bound
cmp
mov
das
call
fstl
pop
xchg
sbb
pop
adc
test
pop
mov
or
push
xor
fwait
rcll
or
aam
jle
and
xchg
out
pop
jmp
movsl
cli
shr
clc
sub
jg
in
sbb
jne
popa
mov
cmp
pop
sub
push
mov
pop
stc
scas
ss
mov
mov
xchg
xor
add
push
addr16
retw
inc
mov
mov
test
inc
adc
jp
imul
in
cld
mov
pop
add
es
mov
gs
sbb
mov
cltd
insl
lods
sbb
imull
add
pop
and
imul
sbb
pop
mov
pop
xor
sti
ficoml
in
insb
fdivrp
dec
popf
enter
xor
jb
stc
sub
int3
mov
faddp
cmp
mov
call
xchg
inc
adc
pop
adc
push
mov
fistps
je
cli
lret
and
sbb
sub
mov
mov
sti
mov
cmovs
or
push
push
cmp
pop
mov
fwait
or
loopne
mov
pop
sbb
lock
clc
fstpt
dec
decl
lcall
sti
mov
fwait
push
lcall
lret
pop
not
loope
xchg
xor
push
push
ss
pop
imul
xchg
xor
lds
std
out
jle
push
insb
sbb
stc
or
lods
mov
mov
ja
and
lcall
pop
inc
fsubrs
nop
cmp
shlb
fdivr
movsb
out
adc
cwtl
push
ss
jge
or
cmp
mov
pushf
jae
cmp
jl
test
inc
pushl
push
cmp
hlt
or
mov
lahf
xchg
je
mov
push
dec
cmp
jne
cs
mov
jnp
inc
call
sbb
inc
fs
idivl
mov
daa
xchg
lods
cld
jae
cmpsb
mov
jp
cvtps2pi
popf
inc
xchg
es
push
sbb
mov
adc
dec
push
imul
shlb
cs
cmp
cmp
jmp
jle
aas
fmull
sub
jno
xlat
lahf
xchg
and
dec
and
mov
pop
pop
pop
out
imul
cmpsl
fwait
mov
adc
or
and
pop
adc
dec
dec
xchg
mov
push
gs
xor
jno
jnp
adc
je
movsl
dec
stc
dec
jne
ret
arpl
sbb
jns
and
push
test
dec
ljmp
mov
cmpsl
push
in
mov
hlt
pop
das
loopne,pn
add
jno
adc
out
into
cli
imulb
push
push
hlt
stos
fimuls
sti
dec
mov
ds
std
cltd
jb
or
pop
adc
scas
xor
mov
fsubp
sub
xlat
lods
xor
mov
inc
xchg
jns
mov
cmp
mov
out
cmc
shrb
xor
mov
mov
mov
ds
outsl
cmpsl
movsl
cli
jle
and
inc
mov
and
inc
rcll
xchg
or
sarl
loope
and
imul
les
shll
daa
lods
cmpsl
fsts
mov
mov
mov
ret
jae
gs
subb
ret
push
cmp
rol
xchg
dec
mov
js
test
sbb
and
dec
lret
push
movsb
add
pop
lods
aam
call
xchg
mov
cli
mov
and
mov
and
dec
push
cwtd
cmp
jle
out
popf
outsl
sbbb
call
inc
ljmp
shll
shl
mov
sub
xlat
xchg
fldcw
xor
adc
dec
cwtl
addr16
scas
xchg
xor
stos
rcr
out
mov
sbb
fldl
mov
sbb
pop
jmp
rorb
add
icebp
js
mov
out
cmpsl
inc
cltd
jo
fwait
sbb
inc
xlat
orb
jmp
hlt
or
popa
out
ret
and
jae
adc
cli
mov
sub
pop
inc
cmpsb
inc
xchg
inc
loop
mov
or
xchg
dec
mov
imul
lcall
cli
pop
add
pop
jae
sub
movsl
push
cmpsb
push
and
enter
jecxz
adcb
mov
xchg
rcr
movsb
leave
out
cmpsb
lcall
shrl
sbb
int3
xor
xor
xchg
stos
scas
xor
test
push
inc
fidivl
or
test
loop
cmpsb
mov
or
cld
out
test
xchg
and
mov
outsl
sahf
xchg
imul
xor
je
shll
xorb
mov
pop
pusha
push
mov
mov
lret
scas
add
or
fnstenv
imul
or
movsb
stc
andb
adc
mov
or
cmpsl
mov
dec
mov
popf
sub
jle
in
inc
imul
rcrl
add
lea
cltd
pop
mov
xor
aam
push
ss
dec
or
cmpsb
inc
cs
xchg
rolb
add
xchg
pop
xor
xchg
or
jl
cmpsb
pop
pop
inc
push
in
clc
adc
mov
cmp
or
iret
or
out
xchg
push
rcrl
pop
pop
push
es
or
js
or
int3
push
dec
out
loopne
mov
pop
test
xor
sub
xchg
inc
fisttps
sub
cltd
jnp
bound
inc
cmp
rolb
pop
out
fldl
mov
enter
or
bound
aad
sti
jo
in
or
sub
push
stc
clc
cwtl
ficomps
xchg
sbb
or
dec
mov
sub
and
mov
enter
add
ret
fwait
xlat
lods
mov
jmp
clc
xor
loop
jo
fstps
and
dec
jmp
add
out
mov
jo
and
dec
in
mov
int
aad
repz
out
cmp
mov
in
xchg
cltd
push
jg
imul
mov
imul
xor
into
adc
jle
mov
inc
jmp
inc
jb
cmp
pop
jmp
xor
fwait
pop
out
or
lahf
iret
dec
inc
shrl
mov
sub
pop
sbb
test
or
cltd
lcall
lcall
adc
jle
aaa
xchg
dec
adc
lock
mov
nop
arpl
fstl
in
pop
rcll
jnp
adc
xor
fstpt
mov
movsb
or
dec
lcall
je
mov
into
subl
xor
ja
cmp
stos
sbb
cmovno
movsb
mov
clc
cltd
xchg
test
push
push
jne
fwait
pop
and
addb
mov
outsl
sub
mov
int
jns
ret
push
repnz
clc
add
jno
orl
xchg
shlb
pop
and
into
add
add
push
pop
cmp
leave
les
pop
cltd
pop
dec
dec
add
ja
imul
mov
lcall
mov
sahf
cmp
loope
push
fisttpl
sbb
mov
and
pushf
dec
ljmp
cmp
cwtl
jb
sbb
loopne
mov
lods
fs
mov
jecxz
leave
jge
adc
sarl
gs
movsl
lahf
cmp
push
mov
sbb
lret
fidivrl
pop
ja
test
mov
aas
mov
gs
out
int3
fcomi
pop
and
test
or
sbb
pop
test
pop
pop
pop
mov
fdivrp
lock
add
or
mov
add
cmpsl
ds
xor
shrb
je
and
xor
adc
push
idivl
cs
ljmp
mov
imul
jmp
jo
pop
xchg
ljmp
pop
movsb
mov
inc
ss
int3
ds
and
lock
jo
jmp
call
cld
pop
pop
shll
mov
sub
pop
push
xorb
dec
orl
aaa
sbb
xlat
nop
add
mov
nop
enter
fsubs
jae
mov
sub
mov
adc
out
iret
jb
cmp
in
mov
rol
push
sub
xchg
inc
push
ret
jmp
and
lcall
pop
inc
stos
mov
sub
pop
xor
jp
adc
faddl
add
stos
into
clc
cltd
add
in
test
add
fsubl
jns
jno
xor
imul
daa
xchg
push
in
add
and
xor
xchg
pop
sbb
xchg
inc
push
hlt
or
pop
push
insb
sbb
pop
xchg
push
sub
lds
psrad
mov
adc
cmpsl
mov
fstpt
lock
mov
pop
mov
add
mov
pop
cmp
add
sub
mov
mov
sbb
dec
sub
sub
sub
mov
insb
sahf
xor
test
sbb
sub
cmp
sbb
in
roll
in
and
rcll
shll
push
lret
push
dec
xchg
pop
jp
imul
add
into
mov
loopne
lods
outsb
adc
jnp
xor
ss
push
xchg
pop
addr16
repnz
rcl
add
in
and
jae
push
push
sub
inc
ds
les
sub
mov
dec
pop
cltd
xor
cmp
out
push
inc
xor
mov
add
out
inc
lret
xchg
jo
mov
outsl
adc
aad
jne
inc
inc
fcomps
jae
jns
lea
aaa
xor
shlb
mov
dec
nop
dec
xchg
cmp
js
adc
add
call
rclb
add
add
sub
fwait
xchg
fs
jecxz
div
jne
lds
lret
aad
xchg
test
adc
push
sahf
adc
pusha
cmp
or
lods
int3
push
jns
es
test
lret
jge
das
adc
enter
ret
inc
mov
sub
aas
cmpsl
push
and
std
mov
sub
push
or
test
sahf
sahf
flds
pop
mov
int
insl
cld
dec
cli
or
xchg
cli
adc
jne
in
aaa
inc
rorl
adc
jbe
mov
mov
cwtl
decb
jb
and
test
jg
out
out
sbb
add
inc
sub
lods
rcll
sbb
adc
sub
sbb
out
inc
inc
test
dec
outsl
gs
mov
xchg
adc
pop
cmp
mov
scas
ret
hlt
rcrb
jecxz
jmp
ficompl
popa
cld
hlt
scas
mov
cmp
sahf
rolb
ds
jb
data16
rolb
mov
inc
sbb
addr16
jg
ret
in
mov
inc
push
sbb
pusha
fnstcw
test
xor
paddd
inc
xor
add
cmp
popl
fildll
insl
xchg
mov
inc
jp
loop
push
sbb
lret
lret
sub
sbb
push
cmc
cmc
xor
loop
push
arpl
out
dec
inc
test
sarb
xorl
outsb
rcrl
out
jnp
mov
push
and
insl
aam
dec
push
sub
xor
dec
xor
mov
mov
mov
ja
test
push
jbe
push
jle
pop
and
xchg
push
jge
pop
or
les
cmc
and
pop
loopne
push
popa
movsb
pop
cmpsb
pop
pop
pop
insl
out
mov
jmp
arpl
mov
jno
clc
sbb
mov
ret
call
xor
in
inc
mul
jbe
push
aaa
std
out
test
mov
adc
ficompl
sbb
dec
and
faddl
test
out
insb
xor
and
dec
cmp
pop
lock
mov
sbb
inc
sub
jo
sbb
pop
lcall
add
popa
rcll
stos
shlb
lret
bound
mov
dec
ds
inc
subb
sbb
js
or
cltd
cli
cmp
ret
scas
jns
xchg
lahf
pop
xor
add
pop
lret
scas
xchg
data16
mulb
daa
jnp
mov
lcall
icebp
mov
out
ss
sahf
in
xchg
sub
sub
sbb
nop
or
adc
daa
jmp
mov
inc
mov
cwtl
das
aam
pop
cmpsl
dec
cli
and
lock
cmp
or
ss
and
lods
call
cmp
shl
cmp
mov
push
addr16
cwtl
lea
ffree
fmul
xor
jmp
leave
movsl
xchg
daa
stos
dec
nop
pop
xchg
filds
mov
jnp
cmpsl
lcall
push
lods
out
out
je
js
filds
test
aad
dec
jle
mov
push
mov
out
and
cmp
mov
pop
adc
cmpxchg
fildll
sbb
adc
sahf
and
mov
test
daa
sbb
ret
xor
lcall
or
adc
repz
cmpsb
lcall
jno
mov
fnsave
mov
popa
sbbb
fwait
push
mov
mov
jo
cwtl
sarl
iret
les
pop
jge
xchg
xchg
lods
clc
cmp
push
mov
xchg
sub
lods
out
xchg
push
out
bound
cmp
adc
xor
push
shl
cmp
rcl
xor
leave
stos
in
ljmp
loope
cmc
mov
adc
sti
xor
sub
cli
add
test
and
push
push
inc
mov
or
fimull
bound
add
pop
rcrl
mov
lock
scas
shlb
das
test
xchg
rcrb
les
dec
mov
leave
xor
mov
inc
shrb
cmp
data16
or
jmp
and
jb
lcall
inc
les
icebp
imul
shl
stc
fistpl
push
xchg
adc
rcll
push
iret
jp
add
roll
andb
add
mov
scas
sbb
call
pop
subb
sbb
jno
ds
in
rclb
test
pop
and
xchg
and
in
call
lret
and
and
rcr
scas
stos
mul
outsl
and
stc
add
imull
jle
or
mulb
in
pop
les
sti
jns
cmpsl
add
inc
push
pop
sub
pop
outsl
dec
ret
sub
ds
adc
faddp
or
test
jl
mov
hlt
test
xchg
or
jecxz
and
pop
xchg
mov
add
jmp
cmp
out
test
les
dec
push
cmp
mov
xchg
xor
adcb
fcomp
mov
fidivrs
push
and
sarl
adc
ja
jae
xchg
fmul
jle
popf
lahf
and
jns
fwait
inc
insb
push
lods
push
adc
mov
or
sub
inc
mov
push
daa
bound
xchg
mov
cltd
test
push
pusha
add
fcoms
cltd
insl
das
lea
movsl
mov
inc
insb
lock
fidivrs
sbb
xor
mov
dec
rolb
call
lds
mov
inc
loop
pop
sub
push
and
push
mov
or
mov
mov
fadds
cmp
fxch
adc
imul
mov
pop
inc
sbb
or
mov
pushf
sub
push
stos
sbb
lcall
cmp
mov
xor
adc
xchg
push
shlb
in
mov
sahf
lret
frstor
ret
out
test
and
aam
imul
add
js
mov
movsb
xlat
in
shll
sub
pop
lea
sub
mov
data16
sahf
stos
cmp
ja
pop
mov
fwait
cli
mov
jecxz
xchg
inc
and
lcall
jmp
adc
lahf
push
mov
inc
inc
push
mov
arpl
cmpsl
push
and
dec
adc
loopne
testb
fdivrl
push
mov
and
sbb
inc
sbbl
movsl
cs
pop
jns
sub
sub
jbe
pop
push
repnz
aaa
mov
jns
inc
or
mov
jmp
pop
rolb
aad
js
push
or
int3
je
andb
inc
popf
mov
outsl
mov
pop
lret
push
mov
fmull
mov
push
xchg
out
jmp
lods
inc
inc
xchg
notl
jmp
push
inc
sbb
decl
dec
leave
movsb
pop
xor
in
inc
fadd
mov
cmpsb
sti
fsub
outsl
ret
es
cmp
jle
fwait
add
cmpsl
sub
push
sbb
jle
test
and
pushf
mov
fwait
xor
mov
ficomps
divb
pop
arpl
int
xchg
jo
in
ja
fcoms
and
sub
clc
dec
pop
movsl
add
pop
ret
lods
jl
adc
out
xchg
movsb
je
insb
es
add
push
cli
fbstp
daa
dec
mov
flds
cmp
mov
dec
and
mov
cltd
jl
bound
add
or
call
fcmovnu
rcrl
out
sbb
mov
pop
int
push
bnd
rcrb
call
push
andl
dec
xchg
dec
add
jae
es
shll
dec
hlt
pop
loop
movsb
jp
push
xlat
cmc
addr16
fwait
pop
mov
sbb
sti
mov
mov
sub
daa
scas
mov
inc
and
loope
clc
aam
adc
add
xor
jbe
fstpl
enter
xchg
jge
fisttps
or
mov
call
cmp
scas
sub
sub
insl
mov
fistpl
inc
or
cmp
xchg
lds
ret
outsl
aam
jg
sub
xor
popf
cli
cmpsb
rolb
pop
xor
fcoms
pop
xor
aas
fdivl
adc
or
xor
fcmovu
mov
ljmp
lds
rcrl
ljmp
push
popa
or
das
enter
mov
add
cld
loop
out
push
add
loop
inc
mov
mov
or
lds
insb
sbb
xchg
xchg
mov
and
sub
mov
scas
lock
mov
xor
pop
subb
jl
gs
out
scas
inc
mov
sub
adc
add
cwtl
pop
sbb
hlt
insl
ret
xchg
mull
xor
jno
in
adc
int3
xchg
outsb
cwtl
sbb
add
jle
mov
les
sti
call
mov
push
dec
cmp
mov
pop
gs
rcrl
insb
call
es
sub
push
xlat
out
ret
in
dec
lret
mov
pop
mov
sbb
shl
inc
fcmovnbe
jno
adc
xor
sbb
inc
adc
out
pop
push
mov
stos
add
pop
push
inc
xchg
sahf
cli
xchg
loop
cmp
push
loope
cld
out
mov
or
filds
loop
data16
ret
loope
cli
push
pop
jg
jge
cld
stos
sbb
lret
in
jns
push
mov
jle
mov
jnp
fsubs
jnp
push
jb
loope
push
jmp
xchg
xchg
mov
adc
js
rolb
leave
pushf
out
push
inc
orb
xchg
lret
loopne
xchg
lock
add
pop
cld
jl
push
xchg
push
sarl
xchg
ret
and
mov
or
mov
lds
add
fld
ret
sub
enter
push
cmp
mov
and
sub
jb
cli
fs
pop
or
or
out
scas
nop
mov
pusha
fwait
xchg
inc
mov
lcall
addr16
sub
scas
mov
mov
xor
enter
ret
push
sahf
mov
cmp
int
aaa
sbb
cmc
xchg
jl
stos
dec
pop
add
lea
inc
dec
push
xor
push
xlat
movsl
je
out
sub
cmp
xchg
xor
adc
aad
cld
pop
inc
adcl
iret
ret
mov
mov
push
fwait
mov
add
cmp
lahf
push
xchg
scas
sbb
stos
into
imul
xchg
xor
das
fdivrl
repz
lods
mov
xchg
or
imul
add
push
scas
mov
mov
push
mov
fcom
stc
push
jg
xchg
mov
lea
xor
cmpsl
mov
push
lock
dec
inc
paddsb
and
insl
cld
ficoms
subb
icebp
and
mov
push
jbe
fnstsw
push
cmp
pop
ret
loop
pop
adc
mov
lods
lahf
lds
popa
sub
mov
je
jge
out
test
aaa
mov
pop
xor
leave
fnsave
lret
cli
dec
je
rorb
mov
imul
inc
or
test
test
decl
sub
daa
push
push
sahf
nop
xchg
lret
pop
mov
mov
xchg
pop
xchg
ss
out
sub
stos
outsb
lods
jb
xchg
adcl
es
inc
add
jae
sbb
movsl
cmp
lret
cmp
inc
test
insl
popa
pop
dec
sti
sub
shlb
imul
cmpl
push
sbb
ljmp
mov
stos
hlt
mov
or
bound
mov
test
aas
cmpsl
data16
sbb
out
jb
in
xchg
cli
lock
sti
push
mov
add
inc
mov
mov
cmpsl
lret
jg
adc
mov
jns
cmpsb
shlb
rcll
shr
test
ret
ret
mov
inc
jecxz
and
jmp
mov
jns
push
cmpsb
pushf
xchg
insb
mov
decl
pop
and
sub
dec
in
mov
cld
or
data16
lds
popa
cltd
or
cmp
lods
pop
add
stc
jo
scas
cwtl
ds
lea
andl
add
xchg
test
add
jecxz
xchg
dec
negl
push
and
rolb
and
mov
mov
xlat
xchg
mov
push
or
mov
rclb
jl
repz
and
sub
jmp
adc
push
dec
add
popf
xor
add
test
inc
push
xchg
addr16
sbb
jbe
dec
fdiv
pop
mov
cmp
xor
add
fsts
and
or
xchg
sarl
mov
mov
dec
lods
addr16
mov
mov
mov
ss
cmp
inc
loopne
mov
retw
ficoml
and
arpl
push
cli
pusha
sbb
mov
dec
syscall
mov
adc
add
out
leave
mov
adc
pop
mov
xchg
cmp
jmp
or
fmuls
mov
je
mov
cs
or
jae
adc
sub
jmp
lret
jle
xchg
add
insb
in
dec
sbb
js
cmp
add
sbbl
rcl
out
sahf
cld
data16
insb
xchg
int3
add
dec
adc
out
inc
mov
sbb
adc
prefetch
mov
lret
adc
loope
lahf
sti
dec
roll
sti
add
insb
aad
or
push
mov
xor
pop
mov
lods
lds
dec
fcomps
mov
fcoml
xchg
jno
lds
pop
mov
ret
push
sarl
mov
sbb
dec
lds
sub
sub
out
cmp
sub
push
add
scas
lds
aaa
ds
add
mov
jne
push
test
sbb
punpckhbw
inc
lea
daa
imul
scas
jo
out
add
mov
mov
out
out
inc
aam
inc
into
lods
aam
jbe
out
pop
divb
in
ret
or
clc
fidivl
rolb
pop
mov
int3
add
test
or
sbb
sahf
arpl
hlt
repz
cmc
mov
or
pop
and
outsl
sub
mov
add
inc
fs
sub
test
div
jg
sbb
push
ss
mov
push
cmp
std
jae
jge
adc
lods
adc
sarl
add
pop
in
aad
jmp
or
push
adc
cwtl
cmp
mov
inc
jne
pushl
mov
ljmp
std
leave
or
cltd
fisubs
aam
pop
add
xor
pop
mov
inc
repnz
mov
xchg
fstpl
mov
add
jae
ret
outsb
stos
je
jo,pn
insl
rcrl
pop
push
sbb
cld
movsl
movsb
dec
inc
jge
pop
shlb
jle
sbb
bound
hlt
dec
js
jns
test
pop
push
fsubrp
mov
shrb
dec
pop
xor
arpl
add
xorb
in
call
and
xor
lret
les
adc
adc
xor
inc
sub
cmp
xchg
dec
jg
and
int3
fisubs
orl
loop
xorb
xchg
inc
lcall
cmc
mov
pop
xchg
sbb
xor
cmp
pusha
neg
xchg
or
stos
pusha
mov
xchg
cli
mov
or
idivl
jnp
mov
xchg
add
jns
out
sbb
aam
sti
push
sbb
pop
sub
mov
mov
pop
inc
outsl
dec
les
pop
jnp
mov
rcrb
xchg
lret
fcomps
aam
adc
dec
push
lret
xor
adc
xchg
cmp
or
or
int3
subl
pop
or
imul
mov
and
ffree
or
cmp
pop
test
jecxz
outsl
sub
dec
mov
jne
sahf
lds
nop
movsb
add
jmp
lds
mov
push
call
in
cmp
or
addb
xchg
xchg
pusha
lret
xor
jne
jae
or
scas
aaa
dec
test
cltd
sti
pop
mov
insb
adc
dec
jecxz
movb
cmp
xchg
sti
pop
fs
mov
mov
rclb
loope
ljmp
pop
mov
mov
xchg
stos
sti
test
movsl
inc
cmp
adc
cmp
sbb
stos
sarl
push
mov
add
cmp
jne
shrl
mov
popf
adc
jecxz
xlat
push
mov
and
sub
mov
mov
jmp
stos
mov
jmp
jbe
pop
mulb
mov
xlat
fistl
sbb
adc
test
fsts
fnstenv
or
imul
inc
mov
dec
js
push
jge
push
sub
lret
xchg
ret
dec
mov
cwtl
or
xchg
push
xor
or
std
inc
xchg
adc
movsb
xor
dec
shlb
mov
nop
addl
inc
mov
shl
dec
mov
imul
out
mov
loope
ja
cld
jge
inc
mov
fstpl
push
mov
lret
fmull
ficompl
es
adc
or
jmp
push
loop
and
inc
ss
inc
mov
or
push
and
sub
imul
insl
out
imul
xor
inc
aad
sub
shll
loop
lret
sub
ret
fbld
pop
dec
inc
sbb
fmuls
inc
out
je
leave
xor
add
ss
adc
cmp
push
ret
loopne
inc
call
data16
sarl
cmp
into
das
xor
inc
mov
or
or
cli
cmpsb
shll
lods
in
fs
aaa
out
stos
inc
xor
add
popa
out
repnz
pop
adc
jne
in
call
enter
pop
shll
sub
adc
dec
mov
xor
clc
inc
mov
filds
cmpsl
outsl
jle
call
sbb
popf
dec
fmull
push
or
xchg
sub
nop
in
lahf
push
aas
push
push
fs
and
popf
cmp
in
mov
in
jl
xor
test
mov
mov
shrl
into
push
lock
or
aas
test
xor
ja
mov
out
pop
mov
repnz
pop
dec
xorb
pop
adc
ds
loope
mov
pop
adc
cmp
cmp
addr16
into
mov
sbb
and
out
mov
daa
mov
push
shrb
push
scas
cli
test
add
mov
mov
and
sti
xchg
popa
mov
push
testl
outsl
shl
adc
addr16
xchg
cmp
fldenv
push
inc
pop
mov
cld
or
fwait
push
int3
push
in
jnp
aad
adc
loope
jo
movsb
pusha
xlat
test
test
xor
push
or
pushf
cltd
jo
nop
sub
pop
dec
xchg
sbb
push
lret
mov
xor
mov
jns
jp
into
mov
aam
fs
jne
sub
cltd
daa
jge
push
daa
xor
mov
pop
rol
fcmove
inc
pop
inc
mov
hlt
mov
or
sbb
pop
hlt
xchg
sub
push
and
out
fidivl
xchg
shlb
decb
xchg
sub
adc
push
jae
je
idivl
dec
mov
cli
jae
int
stc
repz
or
sarb
sbb
adc
xchg
sbb
xor
push
test
jnp
dec
add
nop
jle
sbb
inc
and
xor
sbb
mov
pop
cmp
clc
test
mov
dec
and
arpl
andb
cmc
divb
push
cmp
push
aas
loope
xor
sbb
xor
test
lock
pop
vaddpd
std
popf
sbb
aam
insb
pop
or
aam
mov
jo
scas
orb
rorl
repnz
push
out
daa
xor
sbb
mov
sub
xchg
outsl
ret
and
loope
stc
sbb
and
gs
or
cli
mov
daa
sahf
dec
loope
inc
or
lahf
aam
and
pop
xor
sbb
cmp
test
inc
fwait
xchg
mov
mov
push
jmp
lods
dec
mov
xor
adc
nop
xchg
jp
add
pop
pushf
pop
inc
xorb
testb
inc
psrlw
insb
insl
bound
push
add
push
fdiv
xchg
lock
or
sub
push
int3
fsubr
in
xor
cltd
mov
and
jp
sub
jb
xchg
push
pop
in
inc
jns
pop
not
insl
xor
fcmovnb
ljmp
xchg
in
add
push
pop
and
xor
cltd
push
pop
jge
adc
adc
ret
sti
cmp
cmp
mov
sub
fidivs
xor
push
dec
stc
dec
mov
clc
ret
int3
sub
imul
fisttpl
xor
xor
sub
lock
dec
iret
out
sub
pmulhw
and
seta
lock
lds
popf
pusha
and
sub
divb
mov
sahf
movb
fstpt
pop
xchg
aaa
pcmpeqd
sub
pop
stos
fidivrl
cli
das
in
out
test
add
jp
xor
iret
and
shll
scas
inc
outsl
xchg
enter
daa
push
xor
and
mov
pop
mov
pop
jae
sub
lcall
adc
mov
loop
jle
inc
fwait
or
or
jne
push
jns
outsb
push
xlat
or
adc
jmp
adc
pop
mov
jmp
cmp
lock
add
pop
aas
mov
and
or
inc
push
push
mov
jmp
and
nop
mov
lds
out
repz
jmp
cmp
aaa
sbb
aaa
jae
inc
sbb
mov
xchg
xchg
stos
loope
xchg
idivb
arpl
xor
outsl
ss
adc
push
int3
pop
and
jne
cmp
mov
orl
fistpll
pusha
push
lods
popa
and
imul
stc
scas
mov
dec
insb
mov
jmp
xlat
sub
add
stos
pop
push
push
jnp
mov
pop
mov
ret
cmp
mov
daa
jecxz
push
sbb
inc
or
xor
pop
int
fadd
out
arpl
outsl
adc
pusha
cmp
dec
adc
ljmp
in
out
or
pop
push
or
fsts
es
into
fsts
adc
out
aaa
insl
test
lock
clc
out
mov
cmc
push
xchg
imulb
mov
shll
mov
div
sbb
jo
loope
rclb
cmpsb
jb
push
mov
repz
enter
aaa
sub
in
pop
inc
or
push
ficompl
je
mov
add
popf
xor
or
mov
std
mov
mov
cmp
jmp
xchg
js
jne
xchg
mov
nop
mov
insl
pop
divb
xor
xchg
out
mov
add
mov
adc
fistl
out
iret
mov
idivb
es
mov
xor
test
push
cld
rclb
sbb
in
das
inc
pop
sbb
mov
repnz
aam
add
mov
das
rcrb
adc
rcrl
push
inc
leave
subl
sub
lods
insl
push
test
out
cmp
cmp
stos
add
inc
aas
mov
push
out
xchg
fisubrl
leave
loop
push
fnstsw
sub
jmp
cmp
xor
and
and
mov
sbb
mov
dec
fs
repnz
sub
js
sbb
cmp
insl
rcrb
pop
mov
sbb
shlb
in
add
mov
add
xchg
jl
cmp
cwtl
aas
movsl
call
arpl
push
stos
jecxz
and
mov
inc
imulb
ja
pop
inc
and
dec
stos
call
cmp
sti
cli
add
fisttps
repz
popa
mov
pop
in
inc
mov
xchg
shl
mov
iret
shrl
popa
xchg
popf
mov
outsl
int3
cmovae
mov
sahf
push
inc
push
dec
xchg
and
add
loop
xchg
lahf
adc
int3
xor
lret
pop
mov
out
daa
adc
jno
add
arpl
sub
jno
mov
repnz
xor
loop
ds
sbb
shrl
aad
pop
dec
mov
push
int
cs
jg
dec
cld
loopne
jge
ds
xor
and
and
sti
add
ja
jge
push
mov
lds
inc
and
mov
repz
jmp
je
test
fsubrl
push
sahf
rclb
stc
icebp
adc
mov
mov
rcrb
scas
sub
mov
aaa
imul
push
call
cmp
loop
repnz
add
mov
out
xor
mov
push
push
pop
mov
filds
cmp
mov
xchg
lret
xor
repz
daa
lods
cmpb
lea
or
mov
and
repz
adc
jno
rcl
mov
les
lods
push
sti
mov
or
mov
mov
xchg
mov
xchg
cltd
mov
loopne
int
xor
les
scas
shlb
js
mov
xlat
js
cmp
inc
push
mov
cmc
push
sbb
loop
mov
insb
or
xor
pop
sahf
out
mov
adc
sbb
cmp
dec
mov
test
push
stos
jecxz,pn
xchg
mov
negl
xchg
repz
mov
fisubs
jbe
xchg
add
ljmp
jmp
fimuls
jl
sub
jnp
int3
and
js
sbb
nop
mov
cmp
idivb
jl
mov
iret
imul
add
adc
pop
inc
hlt
outsb
les
fld
fucompp
aam
mov
jbe
add
cld
push
jecxz
fdivl
loop
inc
rcrl
jb
push
pop
sub
fwait
mov
pop
mov
into
mov
gs
into
cmp
mov
ja
mov
mov
aam
cmp
pusha
push
out
sub
cmp
and
shl
movl
mov
jp
in
add
push
movsl
xchg
adc
jb
dec
sarb
mov
in
test
xchg
xor
mov
cmpsb
ror
mov
sti
fimull
cmp
mov
sub
imulb
popa
and
aam
jge
and
xchg
popa
push
cld
xor
in
jnp
repnz
and
ret
mov
pusha
shll
int
shlb
lahf
and
mov
mov
and
je
hlt
mov
flds
xor
sub
testl
leave
fmull
or
int
cli
addr16
add
hlt
in
jbe
cmpsb
or
in
loop
les
dec
xor
lcall
xor
or
inc
ja
mov
mov
add
dec
jb
sbbb
push
sbb
cwtl
cld
pushf
inc
popf
mov
icebp
xor
push
lods
lds
out
imul
subl
andb
sub
xchg
fldl
lods
adc
mov
sub
aad
fnstcw
xorl
aam
lock
out
call
je
dec
jle
jne
adc
jb
or
mov
iret
mov
mov
test
cmp
mov
rolb
cmp
jle
mov
fwait
out
sbb
scas
mov
outsb
aas
cmp
add
mov
sahf
lods
lods
pop
xor
mov
or
iret
mov
inc
jbe
or
lret
mov
mov
dec
in
call
xchg
jmp
xor
mov
or
push
xlat
jnp
stos
mov
mov
jnp
add
pusha
or
add
sbb
test
icebp
rcl
sub
aas
call
xchg
mov
and
test
cmp
xchg
scas
inc
xor
mov
test
mov
add
jne
xchg
mov
add
popa
loop
repz
jae
out
loopne
inc
pop
cmp
daa
xor
pop
shlb
shll
cmp
jle
cmp
jo
pop
sbb
xor
add
cltd
xor
pop
push
icebp
add
in
xchg
iret
rcl
gs
sub
xchg
mov
lret
xchg
cwtl
mov
mov
lcall
test
out
dec
xor
outsb
cmp
pop
push
in
jl
nopl
mov
mov
add
pop
add
mov
jnp
scas
cmp
rcr
xor
mov
dec
daa
push
in
xchg
sub
dec
fisubrs
hlt
testb
sarl
sbb
cmp
and
sub
pop
fidivl
add
jmp
sub
pop
fisttpl
jle
imul
inc
mov
ret
ljmp
or
xor
shl
mov
adc
jns
and
or
dec
ss
sarb
jmp
js
ljmp
enter
mov
sbb
push
popa
pop
sub
sarl
xor
loopne
shlb
xchg
repnz
adc
inc
xchg
adc
and
rcll
test
int3
pop
negb
inc
pop
mov
inc
aam
and
adcl
jg
in
ljmp
call
rol
dec
rclb
mov
dec
and
fisttpl
shlb
mov
imul
fdivrl
mov
cli
flds
mov
outsl
mov
popa
xor
xor
loop
xor
popa
or
add
bound
adc
jnp
mov
pcmpgtb
stc
adc
gs
sbbl
jle
cmp
rclb
loopne
xchg
movsb
lds
xchg
pop
inc
and
dec
cmpb
or
pusha
and
or
test
pop
pop
push
cmp
xlat
pushf
ja
cmp
lods
and
xchg
mov
xchg
and
movsl
mov
mov
push
push
lea
push
mov
mov
repz
adc
sbb
lret
cmc
mov
xchg
jecxz
pop
inc
or
add
mov
pop
dec
stos
jns
roll
dec
push
mov
cmp
adc
adc
and
mov
and
mov
ljmp
dec
or
dec
add
mov
sub
pusha
mov
outsl
xlat
cld
cmpxchg
lea
pusha
subl
sbb
fmull
testb
adc
mov
mov
stc
icebp
xor
mov
mov
testb
addb
shrb
outsl
push
test
nop
xchg
enter
sbb
loopne
and
scas
lahf
mov
call
mov
lret
lret
sub
adc
test
cwtl
sbb
cmp
outsb
pop
flds
jmp
xlat
push
sbb
push
adcb
xor
jp
out
jnp
xchg
jecxz
cmp
inc
lock
ret
xchg
loopnew
data16
jmp
lock
gs
mov
out
inc
ret
adc
mov
adc
enter
jb
ret
dec
pop
pop
aam
cli
mov
cmc
push
pop
dec
xchg
xchg
sub
imul
dec
gs
outsb
jl
jne
mov
mov
in
cli
push
in
mov
jg
mov
xor
xlat
add
cmp
sub
or
and
xchg
mov
jbe
fsubrs
cmpb
lcall
pop
gs
ret
jne
loopne
sbb
fadd
imul
jecxz
xchg
mov
push
and
imul
or
cli
cmp
cli
mov
scas
lahf
shrb
in
mov
leave
lahf
pop
xchg
and
jecxz
sar
adc
push
jmp
dec
mov
fimull
xchg
or
sahf
add
xchg
jno
xor
push
lea
mov
iret
inc
outsb
lret
fisttps
sbb
sbbb
pop
pushl
ljmp
cmp
int3
mov
inc
iret
mov
jle
mov
ret
jg
or
leave
fldenv
int3
loopne
inc
imul
enter
shrb
call
stos
sub
push
imul
adc
enter
js
inc
xchg
add
movsl
adc
rcll
out
fistpl
cltd
mov
mov
repnz
add
dec
add
jmp
cld
stc
xor
or
js
pcmpeqb
and
xchg
xchg
add
lea
ret
test
ret
pop
push
scas
leave
test
cwtl
mov
pop
or
inc
test
jnp
cli
push
mov
lock
and
leave
in
out
mov
pop
in
or
cwtl
inc
loop
rol
loope
les
sahf
pop
xchg
dec
xor
lret
aas
mov
ret
movsl
xorb
dec
xchg
pop
jl
adc
jl
fs
push
push
out
lahf
mov
mov
loopne
add
mov
int
pop
in
inc
lock
cmpsb
cld
jge
rcrb
add
mov
insb
sub
or
sub
sub
sbb
insb
mov
es
mov
push
lock
test
pop
push
ljmp
jb
dec
xchg
cs
jl
pop
sbb
xorl
xchg
xchg
mov
mov
cltd
mov
into
xchg
sbb
pusha
fxch
sbb
dec
jb
sub
imul
enter
cld
lcall
jo
enter
movsl
out
xchg
mov
in
push
in
fstpt
fdivrl
movsb
shll
stos
inc
aad
push
leave
xchg
xchg
loopne
mov
mov
dec
xchg
lahf
mov
push
lock
xlat
jge
and
jbe
aas
sub
js
or
es
mov
popa
push
je
xor
insb
mov
test
enter
das
jg
and
inc
jmp
cld
dec
imul
xchg
pop
mov
push
faddl
mov
mov
enter
sub
jb
xor
mov
lahf
shlb
and
mov
clc
sub
aaa
lods
les
in
int3
aam
jmp
cmpsb
pushf
pop
mov
icebp
mov
push
push
jmp
pop
into
xor
pushf
and
test
mov
mov
adcl
push
xor
test
mov
arpl
ljmp
js
les
dec
shlb
es
mov
cltd
and
jmp
push
push
lahf
iret
setle
out
fucomip
xchg
xor
stc
add
push
xor
das
and
mov
movsb
pop
stc
clc
scas
mov
mov
inc
stos
out
loopne
test
imul
or
sti
data16
loopne
cwtl
xchg
push
lock
test
dec
nop
sub
jbe
mov
imul
lret
dec
mov
cli
lcall
pop
dec
imul
mov
mov
mov
mov
adc
leave
cmc
push
lahf
mov
xchg
pop
lock
add
push
lods
mov
push
stos
push
into
sub
xlat
mov
aas
xchg
mov
jmp
enter
cmp
mov
cli
pop
movsl
sub
adc
mov
loopw
das
mov
icebp
xor
push
and
and
mov
adc
mov
cmp
lods
or
decl
out
int
push
adc
jae
and
pusha
out
sub
sbb
fsubrl
les
cwtl
jmp
xchg
jo
jl
push
jmp
inc
xchg
mov
test
pop
mov
shlb
out
xor
jne
cld
pop
in
xor
jg
incb
insb
stos
inc
push
iret
inc
in
adc
add
push
push
adc
pop
stos
loop
jle
pop
js
add
jmp
mov
mov
xchg
arpl
ret
and
push
into
or
pop
aad
inc
mov
or
pop
frstor
inc
pop
xor
pusha
xchg
add
mov
jmp
adc
pop
dec
push
ljmp
pop
aaa
push
notb
xor
add
pop
int
mov
sti
adc
mov
cld
into
xchg
outsb
sbb
xlat
or
flds
jo
jo
mov
rcl
pop
mov
push
inc
cmp
stc
xor
cmp
gs
jl
leave
cmp
cmpsl
sahf
imul
scas
scas
rcr
pop
mov
or
jae
bound
push
cmc
shlb
pop
jl
lock
push
sbb
outsb
mov
test
mov
cmp
mov
lea
sub
xchg
sbb
fidivrl
std
lret
dec
pop
pop
cmp
iret
cs
jg
or
mov
ret
push
mov
push
jbe
push
shll
sbb
mov
jnp
je
and
cmpsl
mov
and
jae
lahf
inc
loope
sub
aaa
lods
cmp
aas
and
clc
adcl
in
mov
cmpsl
fbstp
cmp
xchg
sbb
adc
in
push
dec
mov
and
lods
in
jmp
inc
sbb
add
ret
int
outsl
sub
leave
test
sub
push
jb
mov
gs
xchg
xor
js
and
pop
pop
cmpsb
out
mov
movsb
mov
pop
mov
and
inc
dec
pop
sub
xchg
adc
in
stos
lock
push
push
je
xchg
call
adc
inc
gs
addr16
sub
lods
fcoml
inc
loope
imul
es
clc
mov
mov
adc
jnp
push
jae
jge
fcompl
bound
inc
push
pop
clc
xor
int
pop
mov
cmp
or
shrl
stc
js
fsubr
hlt
inc
pop
sbb
dec
inc
sub
push
xchg
jbe
int
push
adc
push
push
pop
pop
jae
add
pop
in
xchg
dec
gs
cld
fcoml
push
sub
in
sahf
xor
movb
pop
mov
rol
fwait
jle
mov
cld
into
push
jns
jb
cmp
das
mov
iret
sbb
fstl
ret
lret
pop
xor
mov
sub
xchg
stos
aas
das
xchg
xchg
out
stos
pusha
cs
and
cld
ret
push
test
arpl
and
in
mov
xor
fsubrs
scas
aaa
in
int3
inc
dec
jae
xlat
rcr
fstpt
loope
fld
pop
cmpsb
aad
and
pop
push
movsb
pop
repnz
loope
daa
pop
or
test
bound
xor
or
aad
and
or
mov
xor
int3
sbb
add
stos
outsl
in
pusha
push
movsb
loope
divl
or
xchg
and
push
repnz
mov
pop
or
adc
ret
jns
mov
mov
add
imul
fnstcw
repz
outsb
inc
and
gs
roll
mov
add
mov
push
inc
aas
adc
mov
mov
loopne
or
mov
dec
sub
in
xchg
sub
cmp
mov
dec
sub
mov
xor
sbb
or
mov
addr16
cli
inc
jp
xchg
mov
rclb
std
inc
sub
mov
loope
and
mov
les
jbe
jnp
sub
aam
out
in
lahf
inc
lret
imul
cli
lea
adc
jb
test
pop
lahf
test
fbstp
stos
cmp
and
jge
inc
out
sub
movsl
mov
cmpsl
loopne
fcmove
lds
sub
out
or
addl
adc
lahf
pop
shr
xchg
dec
jecxz
mov
mov
repz
andl
dec
xchg
cmp
stc
insb
push
incb
int3
cwtl
sbbb
push
stc
xchg
frstor
push
inc
cmc
test
xor
fildll
pushf
stos
adcb
xchg
cld
stos
ds
xor
mov
enter
dec
mov
cmpsl
cmpsb
cmp
movsb
sbb
jns
cltd
push
mov
daa
mov
xorb
pushl
lcall
popf
sbb
mov
nop
mov
mov
cwtl
pop
lcall
call
cmp
rol
and
jmp
aad
cld
add
movsb
xlat
jo
sbb
lods
lods
jb
sahf
and
mov
loop
sbb
adc
or
dec
les
sub
shl
mov
add
dec
or
dec
out
pop
cmp
insb
add
inc
test
push
insl
loopne
ret
gs
or
dec
insb
sub
cs
dec
and
xor
ja
mov
xorb
nop
or
cmp
mov
lea
adc
lods
adc
orl
push
xchg
mov
sbb
cmp
pushf
mov
mov
int
stc
je
xor
jbe
mov
mov
nop
mov
dec
jbe
outsb
test
inc
insl
and
xor
mov
adc
ljmp
mov
dec
rcr
or
aas
outsl
jb
arpl
jns
jmp
pushl
mov
test
push
mov
inc
push
dec
jb
inc
cwtl
cltd
xchg
mov
test
add
sub
lock
adc
dec
out
vmovsd
decb
mov
lret
push
xchg
into
in
dec
out
mov
and
out
test
popl
loop
into
ror
popf
and
adc
test
adc
xor
jbe
movsl
int
jl
stos
pop
ret
push
push
mov
scas
mov
mov
sbbb
addr16
or
popa
dec
aas
xor
lock
fs
pushf
cmp
xor
xlat
cmp
inc
dec
pop
sbb
and
mov
into
test
sub
fcom
push
mov
cmp
jl
fsts
icebp
lahf
js
add
mov
test
mov
mov
add
repz
fisubs
fcomi
dec
jp
mov
addr16
jae
jp
dec
adc
data16
js
jge
sbb
cmp
push
cmpsl
xor
dec
push
clc
movsl
lock
mov
sub
sbb
int
sbb
mov
or
stos
jno
mov
sahf
mov
push
lds
addr16
flds
sbb
test
xchg
lods
cmpsb
insl
repnz
in
pop
out
cmp
jge
dec
sbb
aas
cld
or
jp
mov
jbe
mov
xchg
xchg
test
pop
in
pop
dec
xor
daa
mov
fistpll
fdivr
mov
fisttpll
mov
mov
in
inc
mov
xchg
push
icebp
jg
add
jecxz
push
mov
mov
pusha
or
in
mov
fcmovnu
ja
std
insb
cwtl
or
xchg
cmpsb
xchg
push
or
xor
adc
mov
imul
bound
mov
dec
stc
adc
jge
ret
popa
sub
adc
inc
jmp
fisubrl
jae
cli
iret
fdiv
adc
pop
pushf
mov
stos
shlb
test
dec
je
xchg
jecxz
scas
mov
je
jg
iret
sbb
xor
sub
xor
out
out
and
adc
andl
push
das
out
xacquire
mov
pop
icebp
pop
mov
scas
inc
mov
mov
clc
stc
ror
andl
test
xchg
mov
mov
cld
and
mov
je
mov
push
mov
aam
ret
mov
xchg
sbb
push
bound
fidivs
mov
or
fwait
dec
out
mov
mov
sub
arpl
xor
push
mov
popa
xor
mov
add
popa
div
in
and
mov
loop
xor
mov
ja
pop
sbb
sub
addr16
testl
sbb
push
hlt
mov
adcb
cmc
mov
or
or
jb
mov
dec
cld
pushw
mov
inc
jmp
cmp
push
jne
fincstp
pop
icebp
push
loop
subl
bound
jp
adc
ret
loopne
mov
xor
push
add
enter
mov
push
icebp
iret
test
fs
insb
or
out
call
sub
cmp
lret
out
stos
mov
int
mov
and
and
fstps
mov
sub
push
xchg
repnz
cwtl
inc
das
cwtl
cmp
xor
sbb
xor
xor
dec
xchg
rcrb
mov
icebp
push
ret
jae,pn
std
mov
add
sbb
pop
fistl
inc
cmp
xchg
inc
cmpl
jb
cmp
jns
xchg
jg
sbb
loopne
mov
les
inc
int
std
jne
inc
sbb
sti
daa
jp
insb
adc
in
sbb
or
mov
sub
mov
lods
rclb
jbe
or
mov
push
je
add
aad
pop
cmp
insb
inc
mov
inc
pop
sub
out
cmp
cmp
xor
pop
lret
fildll
adc
cmp
inc
and
adc
xor
adc
cmp
adc
mov
jb
push
cld
xorb
cwtl
adc
dec
sbbb
add
scas
xchg
lcall
mov
or
and
mov
in
sub
pushf
call
iret
loopne
test
or
add
icebp
aam
lds
sub
mov
pop
xchg
test
dec
mov
inc
mov
add
rcll
jnp
xchg
jl
mov
xchg
loopne
pusha
nop
mov
xchg
pop
cmp
ja
mov
xchg
dec
jb
fucomi
adc
inc
dec
inc
pop
mov
sbb
and
fwait
add
repnz
or
int
pop
iret
mov
mov
data16
sbb
mov
fmulp
dec
fldl
cltd
inc
loope
pop
push
cmc
lahf
xchg
or
dec
jo
cmp
xchg
mov
cmpsl
push
xchg
iret
test
aaa
cmp
cmp
sti
lock
aaa
pop
shll
movsb
inc
std
faddl
fsubp
mov
fisubl
cld
scas
jmp
pop
shlb
pushf
dec
inc
jge
bound
xlat
into
movsl
jb
dec
pop
pop
bts
add
push
cmc
test
jle
and
pop
lea
xchg
mov
jbe
xor
in
mov
push
sbb
dec
aaa
into
imul
or
insl
rolb
ds
jp
scas
mov
cmp
pop
ret
push
leave
das
outsl
jmp
scas
or
jbe
in
lcall
repnz
and
pusha
pop
ret
dec
push
or
in
leave
popf
ss
jae
dec
dec
cmp
push
xor
les
mov
cltd
ret
adc
stos
sbbb
xor
jg
dec
test
sti
aaa
or
int3
mov
outsb
push
mov
fdivp
je
ja
jne
jmp
fcoml
xchg
dec
dec
subb
shl
mov
sbb
inc
in
stos
mov
fidivl
rcrl
adcb
lret
lods
jge
movsb
stos
adc
pop
cmp
mov
fbstp
push
xchg
pop
and
ljmp
aas
addr16
mov
mov
scas
out
dec
mov
ss
push
pop
sbb
xor
pusha
xor
dec
sarl
push
mov
insl
xor
icebp
sub
cltd
rorl
mov
inc
addr16
inc
js
cld
push
cvttps2pi
sahf
stc
sarb
imul
notb
clc
cmpsl
push
mov
mov
sbb
mov
cmp
std
insb
cli
inc
das
add
mov
dec
out
fidivrl
fldcw
push
cmp
insb
in
mov
cmc
out
ret
aad
lret
fstl
mov
sarb
jne
repnz
inc
mov
enter
jne
xchg
cli
mov
xchg
fildll
dec
aas
aas
xor
insl
pop
mov
pushf
dec
sahf
xchg
sub
test
mov
xchg
stos
dec
icebp
adc
ljmp
jmp
pop
add
cmpsb
in
inc
xchg
mov
js
incb
out
fistps
lock
loop
xchg
in
insb
fisttps
testl
jb
testl
ds
sbb
or
dec
adc
xchg
mov
inc
movsl
inc
dec
xor
imulb
loop
hlt
and
mov
push
xchg
xor
jnp
dec
dec
xor
test
shlb
or
out
inc
mov
cmp
jg
addl
cmp
inc
js
rcrl
or
fisttpl
and
mov
pushf
sahf
cltd
cmp
push
cmpsb
test
xor
popa
add
sbb
subl
pop
xchg
imul
call
xchg
xchg
mov
inc
add
xchg
in
das
punpcklbw
jb
sti
xor
mov
and
push
shlb
push
jae
lods
mov
jg
adc
mov
test
es
fldcw
dec
mov
dec
dec
orl
mov
rorl
cmp
outsb
mov
mov
sub
gs
push
adc
push
shrb
fucomp
cmp
rclb
xchg
xchg
pop
xlat
cli
mov
aas
mov
jne
shrb
fxch
mov
cmp
popf
adc
push
sbb
inc
sbb
cmp
lock
pop
lahf
fdivrs
mov
adc
lcall
mov
stc
fcoms
pop
jp
nop
pop
sub
pop
sub
ss
lret
rol
pushf
pushf
xor
cmc
push
inc
or
cmp
shll
mov
cmp
repnz
pusha
add
push
addl
mov
push
shll
mov
addr16
sbb
dec
ljmp
sbb
cwtl
out
outsl
mov
lret
cwtl
ds
xlat
decb
pop
xchg
xor
out
dec
cmp
pusha
sbb
ljmp
rolb
sbb
repnz
aas
mov
in
and
outsb
and
fwait
stos
mov
mov
lcall
scas
adcl
push
jecxz
shrl
push
repnz
pushf
insb
test
test
imul
pop
push
inc
test
leave
mov
pop
repz
mov
daa
dec
add
inc
cmp
dec
popa
scas
mov
jne
cmp
push
insb
sbb
stos
mov
out
or
pop
imull
push
mov
add
push
out
xor
stos
sub
push
xor
push
inc
fsqrt
mov
loope
cwtl
lds
cmp
pop
sub
or
cmp
sub
sub
into
push
inc
icebp
mov
and
sbb
cmp
cmc
add
shlb
mov
jnp
and
ret
or
mov
cmpsl
scas
aas
shrl
mov
outsb
or
dec
ja
out
xor
incl
call
out
jnp
inc
cmpsb
or
rorl
cwtl
mov
rcrb
scas
mov
cmp
adc
stos
addb
inc
jne
repz
adc
mov
int3
out
lahf
push
je
mov
jb
sub
andl
lcall
pop
enter
add
fimull
lods
rorl
andb
dec
es
in
cmp
lea
sbb
cmc
push
daa
inc
add
gs
insl
in
mov
dec
int
cmpsb
and
jnp
loopne
icebp
mov
mov
mov
cmp
inc
xchg
mov
leave
sbb
nop
jae
es
insl
xchg
cmp
add
pop
sub
jns
add
pushf
insb
ds
dec
mov
adc
mov
xor
mov
xor
xchg
ret
fsub
aad
mov
in
test
aas
push
push
ds
clc
rol
and
jmp
mov
jecxz
sbb
push
cmpsl
jnp
xor
or
push
or
pop
jp
and
adcb
and
outsl
and
lock
rcll
or
test
inc
cmpsl
icebp
dec
stc
mov
pop
mov
or
xor
js
cmp
fsubl
fst
jmp
pop
je
idiv
rcl
in
repz
push
test
in
bound
sbb
lret
inc
idivl
mov
out
push
scas
shll
add
pop
leave
mov
push
fldcw
and
dec
and
imul
inc
incl
and
or
inc
cmp
int
or
jae
std
or
popa
and
add
push
pop
jecxz
lahf
mov
bound
cmp
adc
nop
addr16
test
pop
push
cmp
aam
push
ss
lds
push
leave
stos
stc
xor
loopne
fildll
jmp
xor
lea
cltd
lods
insl
pop
rcrb
and
xchg
sub
lcall
dec
pop
add
or
gs
mov
jmp
mov
rclb
mov
enter
xor
cmpsb
je
pop
rorl
add
sahf
mov
fcoml
inc
push
or
xchg
aas
xor
sub
sbb
mov
inc
ss
movsl
push
lcall
pop
and
hlt
and
dec
fs
inc
outsl
popf
pop
out
sub
push
xchg
xor
xor
jno
xorb
stos
mov
pop
mov
mov
testb
push
and
jae
subl
or
aas
and
sub
gs
push
mov
cmp
ds
test
rolb
rclb
fsubrl
je
adc
test
mov
repnz
fistps
ljmp
sub
loop
add
or
cmpsb
rcr
pop
call
jno
mov
xor
xor
mov
out
jecxz
int
xlat
mov
add
mov
cmpsb
sti
xchg
xor
sub
lahf
pop
add
mov
test
lods
inc
pop
lds
ds
sub
jb
imul
sub
fisubl
popa
pusha
inc
mov
inc
repnz
xchg
std
clc
jae
inc
test
add
pop
xchg
lahf
int
dec
mov
in
sub
leave
mov
jb
cmpsb
mov
xchg
adc
mov
mov
gs
xchg
add
push
sbb
pop
pop
push
out
push
xchg
mov
push
ret
out
and
and
les
add
pop
sti
orb
jnp
iret
cwtl
jge
dec
jo
roll
loopne
cmp
mov
imul
mov
sub
xchg
shrl
adc
andl
mov
fld
lea
add
push
lcall
lds
jo
jbe
mov
mov
mov
pop
or
and
and
imul
jmp
xor
sti
loop
lods
jle
rolb
pushf
lahf
push
jle
inc
addr16
ljmp
mov
jg
ret
pop
lods
adc
popa
push
sub
hlt
setge
mov
xlat
adc
mov
add
and
add
clc
mov
insl
testb
adc
rcr
test
push
add
sbb
cs
jle
cltd
or
dec
xchg
sbb
sbb
xor
xlat
stos
push
lret
push
xchg
push
mov
lret
add
or
cmc
dec
mov
test
loop
xlat
cmp
xchg
mov
push
insb
sbbb
iret
ds
ds
jns
cli
vpmacswd
lret
test
cmc
lods
cmpsb
jg
xchg
cs
push
cld
jmp
mov
lret
test
xchg
lcall
ljmp
push
mov
inc
inc
jns
scas
sbb
out
pop
and
pushf
sbb
mov
cmpl
inc
lods
insl
ltr
dec
sarb
rorl
mov
into
adc
mov
imul
ds
mov
movmskps
mov
mov
xchg
aad
or
aam
mov
jne
or
cld
cmpsb
and
inc
cmp
bound
xor
in
xchg
cmp
mov
push
aas
dec
sti
push
xor
rcr
lret
pop
scas
popa
aad
rcrl
jns
insl
mov
loope
mov
fnstenv
aas
loope
or
push
fldl2e
pop
cmpsb
mov
adc
dec
cmpsl
jo
adc
sbb
gs
inc
int3
xor
hlt
insl
or
push
ja
pop
loope
or
push
hlt
push
mov
inc
es
lret
jno
ret
cmp
fs
pop
mov
mov
inc
add
movsb
je
daa
mov
test
arpl
ljmp
cld
shr
mov
int
shlb
imul
cmp
movsb
leave
out
xor
rcr
into
dec
cltd
or
push
xchg
xchg
add
xchg
push
jbe
cmpsb
cwtl
inc
dec
out
cltd
push
icebp
cmp
daa
addr16
push
aad
mov
test
cmp
dec
cs
sahf
movsb
pop
jno
sbb
leave
add
push
jmp
mov
add
jg
mov
or
lret
out
loop
cwtl
mov
xchg
es
pop
fldt
add
push
xchg
xlat
in
mov
addr16
in
sbb
imul
push
push
out
ret
push
xor
pop
aas
jns
test
xchg
fs
xchg
stc
or
ret
aad
stc
lds
icebp
pop
xchg
scas
pop
jmp
stc
repz
sbbl
loop
outsl
in
add
mov
fistl
mov
shl
jge
cli
xchg
mov
adc
repnz
iret
data16
adc
jg
inc
jns
inc
mov
sub
sar
shl
jns
xchg
cmp
sub
cmp
cmpsl
xchg
in
int
aas
push
xchg
into
ljmp
int3
jae
scas
mov
int3
mov
aad
bound
testb
shlb
mov
pop
cmpsl
mov
andl
dec
dec
push
stc
aam
mov
out
lds
cmp
cmp
ds
ret
sbb
inc
inc
jg
sarl
mov
pop
xor
and
push
push
imul
jno
sub
inc
mov
and
push
sub
inc
dec
arpl
inc
or
cmp
inc
mov
cmp
movsb
ljmp
shrl
or
ret
inc
in
mov
xor
jge
inc
jl
mov
jno
lret
push
sub
cs
add
pop
adc
rcr
movsb
cmp
testb
xor
push
je
or
sti
mov
cmpsb
ds
push
mov
loopne
rolb
xlat
adc
lds
push
movb
pushf
cli
sub
test
mov
xor
inc
enter
xchg
fdivrp
imulb
pusha
xchg
sbb
jb
dec
lahf
dec
in
or
sbb
insl
xchg
scas
aad
jae
ret
rcll
inc
dec
xchg
cmp
mov
push
cltd
das
ljmp
mov
xchg
jo
adc
ret
pop
sti
fwait
movsl
out
xchg
out
cmpb
int
pop
jnp
lds
jno
psrlq
aaa
cmp
xchg
enter
popf
into
in
bound
sub
pusha
jg
and
stos
pop
jb
xor
xchg
js
fcompl
mov
in
jl
inc
mov
das
lahf
mov
ja
or
pop
cli
xor
ja
adc
daa
insl
and
mov
sbb
jbe
repnz
fcoms
das
clc
xlat
mov
mov
fcom
xor
shlb
jle
sti
testl
jmp
xchg
sub
jle
in
ljmp
push
loopne,pn
pop
loop
pop
loopne
fs
not
mov
dec
loope
pop
or
nop
sub
ret
or
pop
pop
hlt
mov
stos
push
mov
push
sbb
push
mov
or
dec
cmpsb
insb
add
enter
cmc
push
mul
cmp
mov
rcr
mov
xchg
pop
fwait
outsl
mov
sub
pop
scas
adc
and
or
sbb
js
jne
add
std
mov
fcomp
into
xchg
enter
addr16
icebp
dec
xchg
test
testb
stc
adc
sub
xorl
dec
jmp
fs
add
outsb
daa
xor
inc
insl
aas
mov
rcr
mov
sahf
int
dec
adc
in
lret
fucomp
in
ret
jecxz
lea
idivb
ljmp
mov
insb
into
mov
sti
cli
shr
jns
jecxz
push
mov
outsl
icebp
imul
fimull
cmp
popf
jecxz
lret
xor
mov
lcall
loop
insl
mov
sub
or
xchg
or
push
pop
ret
inc
dec
arpl
cwtl
sbb
fisubs
movsl
test
xchg
sbb
movsl
pop
push
in
cmpsb
jge
adc
scas
mov
in
xor
into
add
push
mov
movsl
or
lds
loope
loop
mov
jg
mov
xor
pop
movsb
mov
adc
movsb
fdivp
mov
add
cmp
jns
inc
push
mov
push
push
pop
lods
xor
stc
lcall
and
mov
sub
imull
mov
outsl
cmp
test
frstor
push
fmuls
xchg
pop
inc
and
into
dec
testb
scas
jnp
int3
cmpsb
dec
xchg
xor
cmp
pop
or
dec
jo
pop
enter
dec
imul
movsb
jle
inc
and
lods
adc
repz
xchg
add
adc
or
cmpb
rol
push
pushl
fcompl
sbb
sub
int
or
loope
addb
jbe
cltd
or
lret
hlt
aaa
cltd
xorl
adc
xchg
add
dec
prefetcht2
idivl
cmp
fiadds
mov
mov
push
and
mov
and
lods
jl
inc
add
and
pop
stos
fstps
fisubs
idivb
gs
bswap
stos
push
shl
fisubl
call
xchg
xor
arpl
mov
sbbl
xchg
and
adc
add
sbb
sub
add
adc
or
sub
mov
outsl
ljmp
ds
or
mov
adc
jne
adc
push
add
out
in
idivl
mov
xor
icebp
sub
popf
cwtl
inc
ss
stc
vmread
stc
fstpl
movsl
dec
incb
jle
xchg
aaa
lock
xchg
dec
bndstx
jo
loope
fidivs
sub
mov
into
adc
shl
sub
or
dec
lahf
and
jecxz
div
xor
int
xor
push
mov
call
int
inc
outsl
sub
je
ret
loope
shlb
pop
inc
dec
push
pop
jmp
cmp
jmp
mov
jp
clc
insl
dec
das
dec
adc
cli
inc
cwtl
icebp
sbb
pmaxsw
xchg
inc
fcoms
lods
and
shl
pop
jne
cwtl
or
jnp
mov
cli
cwtl
ds
leave
fs
std
outsl
enter
sub
ljmp
and
ds
xchg
outsl
and
mov
pop
ret
je
pop
mov
push
outsb
mov
xor
mull
idivb
mov
xchg
xchg
mov
mov
int3
jge
push
loop
clc
xchg
jl
sti
adc
xchg
popf
pop
shl
les
incl
pop
add
sub
repz
cmp
das
clc
sbb
pop
dec
dec
mov
dec
fs
mov
push
cli
inc
xor
clc
dec
loop
aaa
mov
xor
lret
in
fwait
and
subb
and
add
cmpl
dec
and
or
push
sub
popa
cmp
dec
in
or
and
cltd
out
cmc
gs
mov
sbb
ljmp
mov
pushf
cmpsb
lcall
mov
dec
ffreep
mov
pop
repz
and
adc
mov
jo
inc
add
shrb
add
mov
xor
mull
jge
or
inc
xchg
cmp
loopne
stos
fcomip
xor
fmull
les
lret
push
dec
add
adc
icebp
push
mov
lea
pop
jns
fwait
and
and
or
jb
inc
notl
out
xchg
inc
fucomip
bound
movsl
dec
lret
movb
mov
addb
jmp
push
out
mov
loope
add
lahf
dec
push
shrb
into
cmp
icebp
inc
jl
in
inc
loop
scas
add
push
push
xchg
stc
cs
or
mov
adc
fcoml
insb
fidivs
xchg
mov
add
dec
jmp
fwait
int
ljmp
mov
pop
bound
ja
cmc
mov
int
xchg
lds
loop
popf
mov
cwtl
mov
stos
jo
insl
and
cmp
daa
imul
icebp
push
push
and
iret
bound
rolb
cmp
mov
lock
and
insl
inc
xchg
xchg
inc
rcll
mov
jae
hlt
jle
lret
dec
maskmovq
ljmp
loope
adc
pop
js
pop
nop
or
and
das
fldcw
jle
and
push
pop
jp
mov
in
stos
popa
popf
mov
and
pop
pushf
test
fxch
jae
mull
mov
pop
ds
sub
and
and
movsb
or
ljmp
cmpsl
sub
push
cmp
std
pop
lods
into
and
lcall
jle
cltd
mov
pop
adc
aad
stos
xorb
sub
insb
psrad
jge
rsqrtps
jmp
mov
inc
repz
aad
lcall
mov
stos
pop
or
adc
xchg
jp
pop
imul
mov
xchg
jmp
pop
leave
xor
fldenv
sub
jl
popf
arpl
loope
int3
xor
or
xchg
inc
sub
jmp
lods
fisubrl
ret
jl
out
ljmp
andl
outsb
jmp
repz
loope
xor
fsts
nop
frstor
push
dec
push
mov
jne
adc
mov
dec
lea
inc
mov
xorl
jle
push
sub
shr
mov
mov
lods
dec
cmp
or
loop
addl
lret
xor
cmp
fcoml
lret
mov
cmpsl
mov
test
sbb
loope
jns
mov
lds
push
and
sub
shrb
fldcw
inc
fsts
xor
fcompl
xchg
inc
inc
lds
stos
lods
shlb
sti
fwait
clc
mov
inc
dec
imul
out
out
call
test
jle
loop
cld
sbb
movsb
mov
add
enter
in
sub
jmp
add
pop
jnp
pop
dec
jne
mov
xor
ficoms
sbb
jecxz
add
push
adc
mov
ret
adc
cmpb
pop
cmp
mov
xchg
sub
call
push
push
and
jg
fdivr
adc
push
insl
mov
cmp
mov
xor
and
lahf
jbe
orl
in
add
pop
mov
mov
adc
lahf
push
mov
ret
jge
hlt
xchg
lock
pop
daa
fadds
inc
pop
jl
fildll
sub
hlt
rcrl
push
jne
cmpsb
scas
jns
jecxz
lock
loop
mov
andl
fs
push
into
or
jo
cmpl
mov
jl
mov
push
sub
in
or
fimuls
cli
sahf
sbb
mov
out
or
adc
fidivl
mov
adc
or
push
mov
cmp
std
cmp
mov
inc
sbb
xchg
mov
aad
jge
adc
pushl
jle
jl
scas
ja
loope
imul
movzwl
fidivrl
lods
push
jb
adc
mov
sub
repnz
adc
repnz
aas
jne
push
sub
ret
mov
xchg
push
loopne
fmul
fistl
and
nop
sbb
sub
rcll
push
lds
repz
and
sbb
push
nop
push
in
adc
xlat
inc
imul
adc
jl
aaa
fs
cwtl
lret
jae
out
jns
das
inc
push
fwait
inc
dec
cld
sti
loop
push
inc
pop
ljmp
xor
nop
in
cmpl
movsl
add
jl
dec
loopne
fsubs
mov
add
sti
gs
xchg
sbb
in
aam
sbb
mov
pushf
or
mov
jb
xchg
int
lds
push
jno
test
xchg
mov
mov
cld
inc
fsts
mov
push
stos
inc
bound
dec
push
cmpsl
xchg
mov
je
push
mov
out
mov
mov
mov
pop
aad
and
and
xchg
xchg
fstpl
push
sahf
loop
shll
les
ficoms
outsl
idivb
mov
imul
sarl
push
arpl
dec
shlb
jp
inc
outsb
adc
leave
xchg
lcall
cwtl
out
in
jb
sbb
nop
sub
shlb
lods
call
push
test
cmpsl
imul
lret
mov
cmc
int
dec
out
or
fwait
mov
ret
arpl
inc
sub
lret
mov
push
sbbl
data16
mov
mov
shll
pop
arpl
mov
push
sub
xchg
push
jnp
and
mov
inc
sti
clc
frstor
add
iret
mov
cmp
das
push
addb
or
js
sti
insl
ljmp
aaa
in
push
sbb
mov
lock
in
add
std
clc
ss
std
adc
xchg
lea
cmp
sub
repnz
mov
pop
mov
add
into
push
cmc
mov
mov
xchg
dec
xor
cmpsl
xchg
mov
test
cmp
lock
cmc
pop
inc
xor
mov
adc
cmc
stos
mov
and
call
cmp
jns
clc
pop
xor
xchg
jmp
loop
mov
test
pop
mov
pop
jl
cmp
lods
addr16
fsts
add
pop
jno
xchg
cmp
pop
jp
jae
mov
dec
addr16
icebp
inc
sti
mov
clc
xchg
xor
adc
lock
xchg
fldl
jmp
pushl
mov
dec
push
lcall
push
mov
aaa
ret
arpl
test
dec
jg
popa
mov
jmp
pusha
pop
mov
rcll
jg
mov
out
adc
cmp
mov
sub
in
mov
jne
pop
movsb
sub
or
push
or
mov
xchg
pop
test
clc
arpl
add
scas
pop
cmp
inc
xor
std
jno
and
imul
sbb
and
mov
adcb
sbb
inc
std
pushf
in
in
inc
push
fsubrl
push
lea
fsts
mov
les
shlb
sub
xor
or
pop
icebp
cs
test
jle
add
adc
outsl
mov
inc
test
inc
xor
scas
push
cmpsl
sub
push
subl
sub
adc
mov
je
push
mov
push
mov
in
in
or
mov
data16
loopne
or
push
movsl
sub
enter
sti
mov
mov
add
ja
dec
sub
xchg
mov
xchg
fdivr
pop
pop
sbb
mov
inc
xor
cmp
out
fbld
or
jne
mov
pop
pusha
push
ds
pop
and
pop
mov
or
pushf
xchg
inc
loop
xchg
dec
shr
addr16
rcrl
fstpl
lahf
mov
imulb
fldt
cld
dec
adc
inc
cmp
imul
cmp
ficompl
imul
test
sub
ror
stos
mov
mulb
dec
mov
in
gs
xchg
stos
pop
xchg
loopne
or
mov
aaa
pop
cmp
jg
imul
icebp
loopnew
fldt
sub
aas
jae
lea
push
movsb
xchg
pop
cmp
movsb
xchg
adc
sahf
jbe
pop
sbb
jns
ret
les
xchg
incb
gs
or
xchg
je
xchg
jbe
add
out
or
ret
rcr
push
dec
push
dec
fldcw
gs
xchg
insl
gs
cmp
mov
xor
xchg
addl
inc
jecxz
jno
aaa
cmpsl
or
movsb
add
sub
jo
std
xor
cmp
push
mov
lret
push
mov
and
movsl
loope
jae
dec
lcall
cmp
cvtps2pd
xor
push
mov
pop
xchg
pop
scas
mov
cltd
mov
and
jg,pt
out
jo
sub
int3
xchg
fcomp
mov
or
jl
sahf
push
cmp
sub
jne
jg
pop
xchg
aas
sbb
leave
pusha
fdivr
popa
push
ret
shll
dec
testl
outsb
pop
xchg
dec
jecxz
pushf
jno
jo
sub
faddp
mov
add
out
lea
inc
adc
jmp
xor
nop
jle
sbb
adc
pop
sub
movl
mov
and
fisttpl
je
clc
std
mov
and
inc
rol
fisubs
out
dec
cmp
xchg
xchg
scas
scas
int
pop
fdivrl
mov
mov
pop
jb
jnp
nop
inc
cmp
and
pop
mov
in
ds
sbb
cmp
mov
jecxz
jae
xchg
loopne
int
dec
imul
daa
mov
cmp
inc
adc
popf
push
cmp
dec
sub
dec
loope
dec
cltd
imul
ljmp
xchg
call
loope
add
lret
mov
repz
das
pop
or
rolb
stos
mov
in
jecxz
pop
fiadds
pop
adc
dec
divl
jl
mov
int3
mov
dec
cmp
mov
cmp
pushf
sti
outsb
out
ret
mov
inc
xchg
shll
pop
mov
lods
or
inc
sbb
adc
cmc
inc
gs
aad
addr16
inc
movsb
inc
pop
jo
sbb
add
mov
das
jo
push
cmp
mov
mov
sub
jge
dec
gs
cmpl
sub
xchg
shlb
test
mov
out
mov
cs
cmp
jl
jb
insb
mov
push
rolb
call
mov
inc
fstps
pop
ficompl
leave
sub
adc
mov
and
xchg
sub
icebp
dec
xor
dec
outsl
inc
in
push
sbb
dec
pop
cmp
or
outsl
dec
out
test
popa
mov
into
repnz
out
les
enter
fildll
mov
cmp
cltd
arpl
lods
lret
cmp
lock
in
mov
inc
push
fs
fmul
insb
add
imul
dec
jb
jecxz
mov
mov
push
cmp
test
push
lods
inc
push
sub
andb
bound
mov
outsl
ljmp
int3
test
hlt
subb
adc
cs
test
push
daa
ficompl
mov
fcomip
pushf
ljmp
int
in
lahf
nop
sub
jl
movsl
lods
out
sub
aam
sub
sub
enter
in
cmp
and
popf
dec
js
xchg
icebp
jns
fcmovne
sbbb
sbb
jmp
mov
cmp
fbld
sahf
mov
rorl
div
pusha
fldl
sti
inc
inc
sub
das
push
aas
test
daa
cli
sbbl
and
xchg
insb
fisubs
test
inc
repnz
fnstenv
ror
pop
jo
push
xor
jae
es
and
cmp
jp
dec
ds
xor
cmp
dec
adc
add
ljmp
sbb
cmp
sub
inc
clc
mov
lock
jns
mov
clc
out
lea
adc
add
cmc
es
repnz
lock
in
repnz
jo
inc
dec
mov
bnd
ljmp
mov
out
ds
lret
pop
lcall
rorl
cs
push
rcll
push
mov
aas
cltd
push
jmp
fiaddl
fld
push
push
lret
jmp
mov
mov
inc
sub
inc
jmp
inc
dec
and
std
cmp
mov
icebp
mov
clc
mov
cltd
cmp
mov
lea
lret
int3
push
pop
adc
xchg
repz
aad
or
rcll
adcb
int
mov
jno
push
mov
xor
and
xor
and
push
imul
xor
dec
fimuls
mov
fiaddl
xor
adc
mov
sbb
dec
jb
fmul
mov
sbb
lret
mov
jo
clc
add
stos
cld
cld
popf
inc
test
jge,pn
stc
sbb
push
es
adc
xchg
sub
or
dec
in
adc
jmp
icebp
or
in
cs
lods
mov
outsl
cs
add
movsb
lock
xchg
pop
sbb
cli
loop
out
inc
mov
and
arpl
out
popa
and
and
jnp
packsswb
adc
cmp
sub
dec
fidivrs
div
negb
int
clc
lock
int
jbe
sbb
pop
inc
pop
sbb
idivl
repnz
fisubs
rcrb
out
ret
xorb
xor
mov
mov
and
xchg
int
jbe
dec
jecxz
cs
inc
xchg
lods
cmp
pop
aaa
cli
mov
pop
repnz
test
fld
les
rorb
mov
jno
pushl
push
aam
divb
test
xchg
pop
hlt
dec
dec
xchg
xor
push
xchg
ljmp
xchg
adc
aas
pop
sub
mov
jge
or
xor
adc
lods
inc
jo
dec
mov
sub
movzbl
fidivrs
inc
outsl
xor
ret
idivl
std
jecxz
les
add
dec
add
dec
ljmp
negl
mov
and
idivb
leave
mov
push
inc
loopw
or
stos
insb
sub
pop
inc
cltd
fwait
gs
push
lds
mov
movsl
jge
or
clc
pusha
lea
adc
hlt
or
ss
aam
mov
loop
mov
pusha
or
adcb
aad
adc
repz
inc
adcb
pop
jge
sub
cltd
lock
out
mov
add
dec
movsb
rorl
xchg
lahf
push
mov
loopne
xor
inc
shrl
push
outsb
push
add
orb
xchg
adc
sahf
sub
mov
ficoms
push
pop
bound
dec
inc
iret
fcoms
adc
test
sub
mov
stos
jno
lret
arpl
fwait
cs
mov
pop
xlat
jbe
xor
and
push
xorl
cld
rorl
xchg
mov
test
in
xchg
fsubrs
mov
popa
or
ja
test
dec
addl
cmp
xchg
fidivs
cmp
daa
push
repnz
xor
aaa
stos
sbb
sub
loope
jmp
xor
ja
scas
and
mov
leave
jmp
pop
mov
das
cmp
jo
mov
dec
mov
sbb
repnz
mov
fdivp
add
jno
pop
xor
cmp
adc
cld
loop
imul
fnstcw
inc
sti
sub
or
mov
mov
in
out
lret
stos
pop
scas
mov
test
cmp
cmpsl
or
lods
movsb
lea
dec
inc
mov
cmp
das
pop
mov
adc
out
sahf
cld
out
hlt
dec
mov
adc
loopne
add
push
in
mov
rcr
jb
xor
leave
andl
mov
push
push
jae
inc
cmp
fdivrs
cmpsb
or
inc
cmp
push
fs
mov
xchg
xchg
leave
cmp
es
out
sub
pop
mov
adc
mov
ret
in
es
mov
cmpsl
jae
das
fstpl
push
sbb
insb
mov
add
adc
pop
or
popa
sub
dec
jmp
aam
rclb
jae
ret
ret
pop
mov
xchg
jmp
fisubrs
dec
test
push
fs
bound
arpl
pop
icebp
mov
iret
imulb
iret
pop
loop
mov
enter
incb
mov
pusha
xlat
aad
hlt
lahf
test
lods
out
xchg
sbb
mov
je
pop
or
aas
das
fistl
outsl
lcall
push
pop
or
pusha
jae
out
and
pushf
jge
sub
cmc
insl
imul
adc
xchg
scas
mov
rcll
jb
frndint
mov
adc
push
pop
sub
mov
cmp
testb
and
add
jge
in
jg
cwtl
shr
jae
pop
lret
mov
les
pop
mov
sub
js
push
push
jmp
xlat
push
cltd
pop
mov
cmp
test
mov
shll
push
add
test
lahf
cmp
push
dec
sbb
mov
mov
cmc
mov
and
notl
xchg
sbb
out
mov
daa
clc
inc
cmp
es
mov
and
xor
mov
inc
pop
jbe
pop
shr
cld
les
std
mov
ljmp
ja
inc
cmc
arpl
mov
mov
int
out
mov
mov
mov
add
nop
sub
pop
xchg
clc
in
mov
mov
popf
popf
sub
push
mov
scas
std
mov
push
leave
sbb
push
sub
cmp
adc
xor
push
mov
iret
imull
jb
fwait
aas
push
hlt
cwtl
push
sbb
push
in
insb
sbb
shrb
iret
mov
test
dec
das
out
mov
rorl
mov
cmp
sahf
mov
into
stc
pop
sub
jg
and
and
add
mov
sub
xlat
or
insl
cmp
mov
mov
into
pop
add
stc
jg
rcrb
mov
orl
es
fcmovu
jp
mov
lret
or
not
mov
or
daa
mov
stos
mov
or
xor
inc
pop
cmc
repz
jmp
sbb
leave
scas
ljmp
pop
and
imull
push
pop
lock
push
mov
icebp
aas
push
lret
adc
mov
jne
movsl
adc
mov
push
loop
cwtl
subl
dec
jae
pushf
pop
xchg
lock
mov
sbb
ljmp
pop
inc
cmp
mov
int
sbb
push
push
js
mov
inc
mov
aad
inc
ret
aam
cmp
lahf
imul
aam
or
pop
lea
gs
lea
push
jnp
or
sbb
repz
ljmp
iret
mov
andl
fldcw
aaa
mov
mov
push
push
push
testb
cmc
adc
mov
ret
mov
sub
mov
daa
mov
loopne
rcll
stc
rcrb
push
les
push
jp
xor
mov
fld
sub
add
sub
sbbl
push
mov
testb
out
push
iret
dec
inc
jb
in
push
faddl
adc
pop
add
inc
jge
es
subb
push
jo
pop
mov
inc
fimuls
out
xchg
shrb
or
mov
test
shlb
sbb
pop
outsb
and
adcb
mov
push
push
ret
repz
scas
ret
xor
adc
fstpl
dec
mov
mov
cmpsb
jnp
aaa
bound
adc
cmovg
mov
sarl
addr16
push
adc
mov
mov
test
dec
mov
jae
fwait
bound
leave
cmp
shr
icebp
insb
test
and
paddb
pop
je
mov
and
lods
sbb
sub
cmp
lds
and
aam
je
mov
jne
rcr
stc
cmp
iret
push
aad
das
dec
daa
ja
mov
mov
sub
andl
xchg
or
dec
xor
mov
mov
push
push
lahf
lcall
lcall
adc
dec
or
sub
sbb
add
and
fbld
out
jp
jbe
add
mov
gs
jnp
das
xchg
test
js
jns
popf
jb
pop
loop
in
dec
mov
jae
sub
push
ljmp
jno
bound
mov
imul
cmp
dec
out
or
leave
or
aad
xchg
lret
stos
fidivrl
outsb
out
addr16
cmp
add
mov
and
inc
imul
repnz
rolw
adc
dec
inc
sahf
ret
ljmp
push
sbb
ljmp
shr
lahf
add
fsubrl
cld
mov
into
jg
lret
orps
sbb
pushf
call
cmp
xor
fwait
add
jge
lds
ljmp
mov
mov
cmpsl
addr16
mov
inc
arpl
sahf
adc
cmc
lcall
mov
addl
jnp
out
hlt
push
push
ss
or
sub
leave
mov
mov
call
sub
add
push
mov
xchg
pop
sbb
and
test
out
add
lret
out
mov
xchg
sarb
mov
sahf
in
and
and
xchg
xor
lcall
push
pop
outsb
enter
and
clc
insb
cmp
mulb
sbb
dec
xchg
negl
call
pop
arpl
xor
std
pop
movsb
jbe
inc
popf
bound
pusha
sub
lock
jge
xchg
push
aam
pop
mov
ja
and
xchg
daa
pushf
lret
dec
pushf
ss
out
fldt
dec
int
orl
pop
cmc
lcall
push
loop
and
test
mov
js
loope
scas
mov
imul
int
xchg
ret
xchg
dec
inc
and
pop
mov
fcompl
repnz
inc
add
mov
ffree
mull
mov
stos
repnz
cli
in
fsts
je
sbb
mov
push
or
mov
jns
jg
xchg
mov
adc
ds
mov
lods
adc
mov
sbb
shl
and
mov
divl
jne
lods
lock
scas
adc
push
cmpb
scas
aad
xchg
inc
jp
test
dec
daa
in
and
xor
mov
inc
insb
pop
mov
enter
mov
jbe
lods
mov
adcl
stos
cmc
cmpsl
push
divb
xchg
mov
mov
sub
adc
adc
adc
cmp
push
ss
gs
and
push
adc
mov
stos
addr16
pusha
pop
lock
jg
add
popa
jp
repnz
xor
iret
xor
out
cmc
mov
xchg
dec
xchg
adc
shlb
out
mov
push
sbb
call
leave
rcll
adc
add
push
pop
aad
int
mov
dec
bound
jno
sbb
out
mov
mull
mov
pop
inc
nop
enter
fucomip
imul
std
sti
dec
fbld
jno
xchg
xor
and
ljmp
xchg
xor
push
ds
dec
out
push
jp
cmp
add
jb
cmc
bound
int
std
stc
arpl
sbb
jg
mov
scas
fisubrl
push
mov
xchg
sbb
lods
imul
sbb
cld
packsswb
fcmovnb
popf
fs
addr16
imul
xorl
mov
lock
mov
add
sub
popf
jbe
xor
std
outsb
push
call
or
test
mov
or
stos
popf
pop
iret
adc
stos
push
xlat
sbb
aam
fnstsw
dec
sbb
mov
mov
sti
pushf
icebp
loope
xor
and
shrb
jo
pop
sbb
test
outsb
call
test
movsl
imul
jmp
mov
push
pusha
mov
xor
movsb
or
addr16
adc
push
sbbb
jecxz
fildll
insb
imul
and
pop
mov
jno
test
xor
mov
in
out
scas
arpl
fildl
sbb
jne
sahf
lahf
in
mov
xchg
sbb
cmpsl
or
xchg
out
mov
and
fwait
jle
sbb
test
sub
and
cwtl
std
enter
test
out
mov
mov
arpl
xchg
inc
xchg
dec
scas
test
push
jmp
mov
cmc
cmp
sbb
push
push
setb
dec
jb
jo
das
sahf
xor
push
sbb
inc
mov
cmp
xchg
test
xchg
std
sub
or
push
lahf
sbb
stc
mov
pop
add
icebp
in
xor
outsl
jp
xchg
movsb
push
xlat
rclb
pop
stos
lds
hlt
push
or
pop
and
cmpsl
mov
insl
inc
add
sub
pop
test
dec
add
cld
inc
in
enter
shlb
dec
fcmovu
and
cltd
xchg
pushl
xor
mov
test
scas
adc
test
fbld
xchg
jl
mov
adc
int3
adc
inc
or
ja
fucomp
addl
jmp
cmp
sbb
out
fadds
lahf
repnz
les
ja
push
xchg
jnp
outsb
pop
or
cmpsb
xchg
adc
mov
repz
inc
out
cs
mov
sub
cmp
sub
out
mov
dec
add
in
jae
inc
inc
mov
xor
cmp
sbb
outsl
pop
ja
inc
sub
fsubr
jb
and
cmp
inc
in
fmull
xlat
test
ljmp
add
in
enter
xchg
mov
shll
nop
add
aas
dec
add
pop
or
push
lds
add
mov
push
and
movups
sub
jge
or
mov
sub
pop
add
pop
mov
jne
test
sub
cmp
dec
mov
jo
aad
push
jno
jge
cli
jp
repz
sbb
push
xchg
inc
iret
ja
std
loopne
iret
mov
pop
sahf
sub
je
addl
ret
loop
jne,pt
mov
mov
fistl
mov
push
aad
or
mov
fistps
popa
les
or
push
int
jecxz
mov
add
jnp
lods
ret
lds
pop
cwtl
mov
jo
out
sarb
xor
out
mov
iret
loop
sub
or
push
add
incb
ss
inc
push
or
das
sbb
pop
add
ficoms
dec
and
inc
pop
iret
push
ret
repnz
and
adcb
arpl
cmp
or
mov
sub
pop
imul
adc
mov
test
sbb
jmp
jnp
out
and
xchg
pop
aad
cmc
cmc
fists
mov
jle
and
sub
pop
mov
das
int3
pop
xchg
and
int
or
jmp
test
mov
aas
xor
mov
and
and
add
cmp
in
pop
insb
pusha
xchg
sti
cmc
fldenv
mov
sub
add
clc
lods
dec
js
daa
js
lea
aas
ss
mov
fcmovb
rcrb
fwait
ljmp
stos
and
out
cmc
xchg
dec
cli
cwtl
push
and
push
adc
shrl
out
pop
and
mov
sbb
jnp
ror
scas
clc
sub
adc
cwtl
cmp
cmp
dec
pop
adcl
popf
imul
jecxz
pop
fisubl
lret
js
sub
test
scas
cld
in
or
ja
and
fists
sub
out
push
ljmp
xchg
sub
pop
add
fildl
jecxz
push
xor
adc
mov
and
sarl
xchg
xor
pop
cli
rcrb
fwait
jnp
es
repz
ss
or
aam
or
adc
xchg
mov
add
and
int
or
fcmovne
into
loopne
xchg
repnz
aaa
loop
add
mov
in
adc
xor
xchg
jecxz
aam
sbb
gs
mov
sbb
sbb
xchg
lret
dec
xor
inc
sbb
shlb
cmp
push
push
mov
pop
inc
sub
mov
add
push
jnp
sbb
leave
insl
movsl
mov
sbb
push
aaa
scas
sub
xchg
mov
les
inc
test
dec
lcall
fisttps
cmc
add
pop
scas
xlat
call
mov
jl
sbb
pop
daa
pop
lret
cmp
aas
dec
add
xchg
lock
mov
dec
arpl
cmpsl
xchg
jg
adc
mov
jnp
and
fsubr
jecxz
test
sarl
xchg
jecxz
insb
sar
bound
imul
inc
sub
pop
out
jnp
push
fwait
adc
mov
or
mov
cltd
scas
lds
mov
leave
nop
jecxz
dec
rcrb
lock
add
lods
adc
testb
out
stos
inc
cmp
dec
fwait
dec
adc
xor
insl
mov
push
dec
loopne
shrb
loope
into
std
mov
int
adc
sti
push
imul
adc
xor
and
fisubl
cli
ds
xor
test
adc
add
mov
je
mov
pop
pushf
adc
inc
xor
inc
vmwrite
cli
cmpsl
xlat
sbb
jmp
or
lods
cltd
cmp
sub
outsl
lahf
push
fcompl
enter
in
xor
push
cmp
xor
mov
or
mov
fisubs
pop
push
sub
sbb
add
add
loop
stos
dec
add
sub
or
jbe
lret
sbb
into
bound
mov
cs
adc
or
adc
aas
pop
pop
inc
xor
jge
xor
xor
mov
mov
imulb
aad
daa
out
roll
or
test
push
insb
outsb
ds
jns
in
fldt
dec
fdiv
cmp
xor
out
adc
stos
mov
or
pop
xor
stc
jnp
pop
or
js
cmp
xchg
add
enter
outsb
test
or
push
aad
ja
fidivrs
aad
ror
sbb
push
adc
shrb
xchg
lahf
fcomps
lds
out
cltd
clc
xchg
inc
xchg
add
scas
push
dec
cmp
fwait
add
mov
jnp,pn
in
push
ss
popa
inc
arpl
sahf
sbb
mov
pushf
test
sar
mov
xchg
out
imul
aad
dec
sbb
or
nop
in
cwtl
pushf
adc
jno
mov
aam
mov
dec
inc
and
push
inc
mov
mov
in
addb
jb
push
lods
scas
rorb
aad
pop
mov
mov
sarl
rorl
mov
pop
sti
mov
outsl
xor
rcll
mov
int
push
sbb
add
outsw
add
mov
in
xchg
sbb
popf
mov
push
jo
jmp
ret
pop
xchg
hlt
pop
dec
push
adc
and
cmc
jge
aad
dec
ret
pop
sub
cmp
sub
xor
in
fistpl
mov
or
popa
nop
sub
dec
das
pop
xor
shld
rolb
jmp
jnp
in
fsub
mov
popa
shld
imul
test
xorb
cmp
add
addr16
dec
pop
inc
xchg
roll
cmpsb
out
gs
es
movsb
cmp
insl
or
cmc
insb
movswl
jge
ljmp
mov
xchg
out
sub
shlb
movsb
in
int3
mov
push
pop
jne
xchg
lea
and
push
add
gs
xor
mov
jmp
inc
jne
aam
mov
add
pop
dec
jno
test
lret
inc
adc
mov
xor
jb
loope
xchg
cltd
xchg
cmpsb
int3
dec
jecxz
out
inc
xchg
mov
xor
cmpsl
inc
pop
mov
iret
mov
xchg
add
and
nop
and
mov
std
cmp
or
cmp
out
push
dec
in
divb
stos
fs
shll
xchg
std
inc
scas
insb
lods
aas
dec
add
push
or
fbld
repnz
cmc
jo
dec
sub
fidivrs
loop
push
mov
sub
push
sbb
test
pop
xchg
mov
add
xorl
scas
push
sbb
stos
sbb
mov
popf
je
std
xor
cmp
and
mov
fnstcw
pop
ja
adc
dec
ret
in
outsb
mov
scas
sub
jne
movsl
mov
add
jns
mov
xor
mov
gs
push
push
mov
fcoml
jle
mov
or
xchg
or
and
xlat
inc
mov
mov
stos
or
loopne
mov
mov
pop
cs
stos
sbb
lret
jae
or
pop
mov
movaps
ds
sahf
cmpps
adc
pushf
in
mov
mov
cltd
gs
xor
test
ficoms
imul
test
hlt
jp
sub
xchg
xchg
dec
pop
sub
sub
or
incb
jp
sub
dec
cmp
je
xor
push
jo
cmp
daa
xchg
cmp
sub
adc
aas
cld
sbb
push
jb
fwait
test
insl
lret
mov
xchg
lods
push
in
inc
in
loope
add
pusha
sbb
pusha
mov
mov
jle
test
clc
sbb
jns
in
ljmp
sahf
pop
inc
mov
repnz
mov
adc
and
popa
movsb
push
fidivs
inc
and
add
xchg
loope
js
push
mov
push
repnz
imul
jle
in
movsb
dec
pop
cmp
hlt
data16
lods
aam
jge
pop
test
clc
idivb
test
mov
aaa
mov
xchg
dec
ds
js
inc
sti
jl
notl
cmpsb
insl
or
scas
sub
clc
lods
mov
pushf
repz
lods
jae
flds
xchg
pop
cld
lods
adc
int3
mov
aas
cmp
sbb
inc
mov
sarb
int3
adc
outsl
push
fidivl
jbe
jg
sub
and
test
add
push
dec
jmp
iret
daa
in
bswap
cmpsl
inc
adcb
xor
fwait
mov
cs
lea
push
dec
mov
adcl
xor
jo
std
insl
sub
adc
xor
pop
lods
flds
or
mov
hlt
dec
clc
movsb
pop
mov
rcrl
jmp
int3
xor
sub
out
inc
je
dec
mov
or
add
mov
stos
int3
xchg
xchg
or
in
mov
adc
pushf
sub
mov
dec
cmp
ret
dec
sti
lahf
nop
aam
adc
pop
and
pop
sbb
lods
popa
dec
orl
or
mov
or
in
jnp
add
mov
stc
leave
push
mov
add
mov
popf
jg
in
push
je
adc
mov
pop
dec
xchg
pop
xor
lret
jg
hlt
cmp
jle
int3
jmp
enter
pop
hlt
cmp
cmp
fs
call
mov
pop
dec
aam
mov
xor
sbb
data16
repz
lods
jge
inc
mov
pop
mov
adc
xor
lret
loope
jns
das
stc
adc
testb
push
das
in
cmp
lods
sbb
add
push
jle
fbld
insb
cmc
repnz
jbe
out
addr16
hlt
pop
pop
cmpsb
sahf
or
aas
push
fsubrl
repz
in
test
inc
xchg
sub
mov
gs
pop
lret
jns
lock
sub
addr16
mov
mov
cmp
and
gs
mov
out
int
ret
rclb
mov
decb
mov
jl
or
adc
repz
movsb
leave
test
js
mov
pop
jbe
mov
mov
mov
ret
or
sbb
in
mov
ss
jmp
cld
jecxz
movsl
in
push
mul
loope
adc
xor
cmp
frstor
ds
push
xchg
js
pop
fwait
jmp
std
and
mov
sar
xchg
test
mov
inc
xor
add
mov
lcall
std
mov
ja
fsubs
push
lret
sbb
or
xor
lahf
mov
add
inc
ljmp
lods
loope
mov
clc
cmp
js
xchg
in
mov
in
jo
enter
test
pusha
jmp
bound
loopne
push
dec
fcmovne
fldt
shrl
push
es
movsl
add
call
jecxz
cli
jno
cmp
jne
cmc
mov
test
in
inc
addr16
pavgw
enter
lret
flds
sahf
xchg
sub
adcb
jno
into
dec
cmpb
dec
out
in
lods
jecxz
lds
xchg
xchg
xchg
inc
cmp
sti
scas
negl
pop
loopne
sub
in
out
jmp
bound
sarb
add
idivl
pop
inc
jo
cmp
sbb
push
stos
mov
adc
fisubl
orl
insl
fidivl
les
fldt
insl
add
add
add
pusha
pushf
jne
loopne
stos
iret
push
stc
lods
push
mov
std
xchg
cmp
mov
sahf
mov
xor
test
and
mov
loop
jb
mov
int3
fs
mov
arpl
imul
lret
add
and
cmp
lahf
push
mov
mov
sbb
xchg
sarb
ret
inc
add
mov
pop
inc
dec
push
push
pushw
cld
sbb
xor
xor
inc
mov
xchg
ret
into
int
dec
les
or
test
adc
or
andb
mov
enter
popf
into
repz
push
lcall
and
dec
daa
ss
jnp
data16
nop
das
jae
roll
xchg
rolb
lahf
push
cmp
stos
mov
lds
add
push
inc
mov
jns
lods
cmp
daa
inc
mov
cmp
mov
sub
cmpsl
jne
adc
clc
cmc
push
out
insl
sbb
xor
adc
or
fisttps
inc
jp
xchg
mov
xor
call
roll
sbb
or
aam
push
adcl
inc
pop
jecxz
ljmp
and
fistl
mov
push
cmpsl
push
scas
fsubl
cld
inc
or
xchg
stc
lret
mov
cmpsb
dec
cmp
mov
add
xchg
sar
stc
sbb
das
int3
loop
jmp
sbb
jne
and
jge
nop
push
jg
jp
xor
mov
pop
inc
pop
daa
aad
daa
mov
pop
add
push
xchg
iret
call
idivb
jecxz
stos
xchg
imul
daa
jp
jle
xorb
xchg
movsl
pop
ja
test
pop
mov
ss
push
es
ret
cld
es
mov
and
jle
outsl
pop
mov
adc
aam
cld
test
inc
dec
inc
dec
sbb
cmpsb
push
add
and
mov
shrb
sub
in
ret
sub
in
and
daa
frstor
pop
lahf
xor
js
adc
add
cmp
mov
add
stc
add
sub
xchg
jle
dec
pusha
dec
cvtps2pi
lea
push
sahf
pop
push
jle
repz
xchg
jne
cld
xchg
sub
sbb
mov
cwtl
dec
mov
dec
enter
push
negl
in
or
xlat
cltd
xchg
pop
sub
or
inc
mov
inc
push
cld
shlb
push
mov
lea
out
lcall
in
mov
sub
incl
xor
out
idivl
in
jbe
cmp
scas
jg
cmpsb
sub
push
mov
clc
dec
clc
into
mov
popf
std
sub
sub
in
outsb
pop
xor
shl
repnz
push
or
mov
jmp
je
mov
and
xchg
stc
rcrl
jecxz
push
std
cs
loopne
ret
arpl
inc
jp
enter
sub
push
bound
les
pop
pusha
mov
or
push
jl
mov
lret
xlat
xchg
sbb
xor
push
push
xchg
sub
jae
movlps
and
leave
mov
inc
jnp
out
aad
sub
mov
aaa
xor
pop
lea
rorb
inc
leave
outsl
mov
addr16
dec
mov
inc
add
outsb
scas
movsl
pop
icebp
add
lea
pop
fnstenv
jge
cmc
mov
jl
gs
rorl
jbe
das
adc
push
loop
imul
xchg
jb
mov
hlt
sarl
js
and
jae
xlat
pop
ljmp
cmp
xlat
insl
int
and
pop
xor
and
out
push
push
movsb
popf
pop
mov
shll
xor
mov
push
pushf
pop
jo
clc
shrl
cmp
jge
daa
or
mov
add
and
ret
cmp
loop
testl
sub
in
decl
cmp
or
mov
jo
cmc
scas
das
jge
mov
cmpsl
mov
aad
inc
sbb
mov
or
cmpsl
sahf
mov
mov
adc
gs
in
push
dec
or
addr16
jg
ljmp
das
negb
cmp
popf
and
mov
sub
and
jecxz
repnz
mov
xchg
inc
push
mov
daa
or
outsl
outsl
lods
test
push
lods
cmp
dec
hlt
xchg
mov
sahf
jmp
lods
xor
or
fists
sti
or
lods
aas
sub
fnstcw
cmp
and
jmp
jne
pop
mov
ja
sub
mov
shr
mov
jmp
sbbb
jns
enter
pop
inc
inc
xchg
sub
cltd
mov
out
inc
dec
lcall
jb
mov
xchg
sahf
insb
xor
test
popa
jge
subb
pop
jmp
lock
in
insb
in
mov
pop
adcl
loop
push
fcoml
outsl
adc
divb
cli
jo
mov
add
adc
or
rclb
dec
inc
cli
mov
jae
cld
fnsave
xchg
imul
and
xor
imul
cmpsl
add
push
int3
inc
fwait
inc
stos
adc
sbb
mov
mov
pop
adc
sarb
inc
xlat
ljmp
out
adc
sub
imul
inc
ret
movl
and
test
jl
shll
push
lcall
jno
loopne
sbb
int
mov
aaa
mov
faddp
mov
out
mov
and
subb
imul
sub
dec
mov
loop
scas
mov
jbe
ljmp
bound
shrb
scas
ljmp
dec
jl
fisttpll
mov
xchg
scas
xchg
cmpsb
test
dec
xchg
daa
js
pop
cmp
aam
adc
ficoms
xor
adc
push
pop
stos
or
and
cwtl
bound
psrad
aaa
add
hlt
adc
and
cltd
fistps
clc
imul
jbe
cmpsl
sbb
xor
adc
xchg
sub
sbb
sub
jnp
add
bound
xchg
mov
xor
push
dec
mov
pop
shl
call
addr16
aad
daa
jl
push
sub
xchg
sub
mov
jmp
std
inc
xchg
sub
out
cli
inc
lds
xor
loop
call
mov
pop
mov
pop
iret
and
add
ret
cli
push
in
mov
out
or
or
add
dec
iret
pop
mov
ss
mov
jno
push
loop
xchg
pushf
mov
pushf
cli
nop
push
add
icebp
dec
push
test
push
cmpl
pop
ja
sahf
out
pop
ds
sbb
xchg
xchg
repnz
jge
cmp
mov
xchg
popa
flds
pop
xor
lods
xchg
mov
subb
sbb
clc
and
imull
sub
fstpl
lods
mov
xchg
or
mov
cwtl
adc
push
test
fs
jae
call
addr16
pop
mov
mov
jmp
gs
add
cli
loope
push
push
ret
loopne
xchg
jns
stos
mov
dec
cmp
sti
adc
loopne,pn
lret
jmp
adc
call
imul
mov
fcom
xor
push
inc
xchg
inc
inc
ficoml
loop
fprem
mov
xchg
sbb
gs
js
adc
lcall
mov
shrb
stc
pop
xor
fwait
dec
addr16
dec
and
dec
scas
sbb
dec
mov
inc
xchg
add
inc
or
pushl
movsb
xor
shll
and
and
addr16
insb
repz
and
add
cmp
mov
pop
mov
ljmp
int
push
xor
int3
jns
outsb
inc
sub
jo
sarl
cmp
jae
xchg
sub
shlb
push
xlat
inc
rol
movsl
add
xor
pop
and
shlb
and
repnz
int
outsb
xchg
cs
and
xorl
iret
cmp
pop
das
xor
aam
in
sub
and
cmp
cmp
scas
xchg
mov
fistpl
stos
adc
xor
sub
pop
mov
call
sub
stos
mov
push
jmp
cmpsl
push
push
hlt
mov
push
push
pop
cwtl
xchg
mov
mov
scas
and
fs
mov
add
inc
mov
xchg
mov
inc
lcall
add
cmp
sahf
adc
sbb
fwait
sbb
mov
xchg
adc
mov
add
mov
mov
xor
sbb
jbe
inc
hlt
push
mov
xchg
fisubl
mov
pop
mov
inc
or
jne
shl
add
xchg
push
fstpl
or
xor
shrb
aad
je
jp
add
icebp
lods
sub
mov
addl
mov
out
push
aad
movsb
cwtl
push
sbb
sti
bound
mov
out
xor
mov
lea
aam
sbb
sub
adc
dec
sbb
pop
outsl
or
in
mull
in
cmp
and
lock
jmp
dec
cmc
scas
stos
dec
add
rcrb
sbb
outsl
sbb
ret
or
mov
leave
mov
test
and
ss
insl
push
dec
jg
popf
cmp
mov
scas
imul
mov
mov
pop
jge
daa
adcb
dec
mov
or
jno
inc
bound
loope
xchg
push
outsl
test
push
push
jnp
xchg
rclb
icebp
movsl
xor
mov
push
push
orb
clc
sti
imul
lods
sbbb
ror
cmp
jnp
inc
jmp
cmp
shlb
sub
xlat
int
aaa
or
sbb
xchg
push
xor
es
sti
mov
cmp
imul
dec
lret
loop
cmpsl
out
jo
out
adc
repz
fcmovnu
rorb
mov
fsubl
or
jae
or
ror
pop
pop
push
outsl
xchg
sbb
ds
xchg
sub
mov
sub
xchg
popa
out
inc
scas
mov
ret
repnz
add
movsl
lret
adc
add
shrb
cmc
pop
fldcw
or
jge
adcb
pop
push
cmpsb
out
sub
mov
mov
into
lcall
cmc
lret
test
scas
mov
sarb
add
xor
aam
dec
fistps
pusha
or
les
sub
mov
repz
mov
cmp
cld
jle
pusha
inc
dec
add
add
outsb
mov
stos
jo
cmp
scas
jae
sbb
dec
push
add
int3
or
pop
lcall
int3
adc
xor
in
and
pop
out
jnp
xlat
xchg
leave
jl
jecxz
mov
sbb
pop
mov
pop
gs
push
adc
or
dec
dec
fldt
xchg
sahf
lea
push
sub
inc
rorl
add
iretw
jg
bnd
and
lahf
aaa
ret
xor
test
dec
arpl
lret
pushf
es
scas
aaa
mov
dec
adc
and
xor
sbb
out
add
xchg
insl
add
shll
xchg
jge
cmc
pop
enter
or
pop
push
movsl
mov
dec
cmpl
das
imul
iret
mov
mov
pop
movsl
sbb
call
and
lret
jno
inc
add
mov
jge
xchg
ret
sahf
mov
mov
or
loop
ljmp
rcll
and
xchg
daa
lret
jmp
pushf
pop
aad
mov
aaa
xchg
jge
ljmp
cltd
sahf
rcrb
shll
jae
jo
ljmp
jnp
lahf
cltd
mov
xor
xchg
sbb
xor
mov
int3
pop
int3
aad
outsl
adc
jmp
pop
ret
jecxz
jno
out
es
push
xchg
les
inc
dec
inc
push
mov
rorb
or
pop
adc
fmull
push
shlb
adc
outsb
mov
jne
sbb
loope
cmp
test
in
push
jnp
shlb
lea
cmp
xor
and
push
add
in
push
call
sahf
cmpsb
fxch
fwait
inc
pop
sarb
aad
xchg
lds
notl
cmp
std
xchg
popa
in
push
gs
int
outsl
test
cs
insb
loop
repnz
lcall
sbb
movsb
or
or
test
inc
scas
sub
in
push
fld
pop
xchg
xchg
ds
loope
or
xor
adc
lea
ss
cmp
push
repz
inc
xchg
or
test
vrcpss
cwtl
add
cmpsb
xchg
add
push
arpl
xchg
in
or
adc
sub
xchg
loopne
or
jae
or
sub
push
notb
adc
sub
loopne
loope
jb
addl
lea
in
pop
or
cld
ljmp
out
mov
negl
insl
aaa
out
popa
popa
pop
leave
repz
mulb
sub
out
lds
cmpsb
test
test
aaa
pop
inc
xor
sub
ds
shll
or
pop
pop
stc
std
push
lahf
xor
mov
xchg
jl
loope
push
adc
xor
adc
cmp
xchg
jmp
push
test
mov
lods
out
and
test
int3
flds
push
fadds
movb
lods
dec
stc
mov
lods
xchg
nop
fistps
inc
dec
inc
jge
inc
imul
cltd
popf
mov
dec
push
dec
sbb
mov
xor
lret
nop
rorb
shll
mov
mov
or
xchg
mov
jno
cmpsb
cmpsb
sbb
pop
or
sbb
cs
mov
mov
loop
sub
pop
xorb
stos
aad
cli
jne
inc
shr
xchg
pop
adc
sbb
mov
loop
jno
test
and
aas
xor
add
mov
and
inc
xchg
inc
rolb
dec
mov
sub
icebp
out
clc
sub
pop
jns
cmpsl
sahf
ljmp
stc
jl
in
jo
out
les
insl
out
aaa
stc
cmp
add
fstpt
outsb
pop
in
popa
cmc
adc
aad
mov
sub
mov
orb
dec
push
jg
pop
ds
testb
daa
xchg
pop
lds
jns
and
xchg
cs
pop
ret
rcr
cmp
ds
call
orb
lret
sub
xchg
cmp
enter
das
hlt
jle
pop
add
mov
outsl
add
jge
out
daa
and
add
add
mov
or
in
ret
jnp
adc
std
and
mov
push
loop
div
sbbb
xor
neg
mov
scas
adc
ja
loope
jbe
addr16
mov
dec
faddp
add
or
loop
imul
out
xor
sub
aas
or
sbb
cmc
push
push
push
hlt
gs
in
fwait
scas
fimuls
add
inc
iret
bt
cmpsb
xchg
mov
das
fistpll
test
lcall
jns
outsb
jo
push
lcall
lahf
and
xchg
push
pop
ds
pop
or
ljmp
insb
lea
shr
repz
fnstsw
test
sub
xchg
cmp
hlt
sub
xchg
or
add
das
mov
add
sbbb
insl
pop
fmuls
xor
decl
pop
ret
lds
insl
nop
ss
pop
cmp
adc
shll
lahf
sarl
js
push
xor
xor
cmp
mov
dec
inc
cmp
xor
jl
repz
and
sbb
push
cmp
sub
pop
hlt
dec
shl
mov
and
dec
fimuls
je
sbb
xchg
ds
inc
mov
push
mov
rep
pop
jl
mov
cli
pop
addb
pop
mov
add
pop
pushf
mov
icebp
int3
sar
inc
push
push
insb
cmp
add
xor
and
in
mov
push
jecxz
adc
cmp
js
mov
pop
loop
lahf
and
dec
push
dec
adc
xor
sub
ljmp
xchg
push
int
inc
je
outsb
or
int3
and
push
sub
and
and
in
test
xor
push
loope
sbb
xchg
mov
mov
jl
cmp
push
call
inc
push
bnd
dec
mov
mov
clc
stc
adc
xor
daa
cmp
fdivl
inc
shrb
stos
lret
sbb
ds
xchg
inc
enter
pop
push
push
mov
jmp
dec
dec
clc
mov
loopne
aam
push
fistpll
push
stos
nop
jg
cmp
cmp
outsb
and
mov
adc
dec
mov
cmp
outsl
add
loopne
ret
call
lea
adc
cmc
dec
mov
mov
push
push
jne
sbb
push
mov
or
mov
add
jne
mov
into
sub
mov
popa
pop
ret
mov
or
lock
add
fistl
xchg
dec
push
sub
push
xor
add
fwait
pop
ret
ljmp
in
fmuls
xchg
sub
test
pop
push
push
shlb
jo
imul
insb
leave
mov
imul
loopne
xor
xor
clc
and
fmuls
sbb
push
outsl
pop
test
sahf
mov
mov
jmp
push
cmp
lea
cmp
pop
dec
addr16
push
mov
pop
sbb
mov
and
pop
mov
pop
fnstcw
pop
int
and
lret
out
or
mov
and
lahf
and
test
inc
push
sbb
xchg
jnp
push
mulb
jmp
inc
push
sbb
divl
std
repz
imul
xchg
xlat
add
les
lods
pushf
xchg
xlat
rcrl
jno
aaa
popa
jmp
sbb
sbb
or
clc
inc
fnsave
fcmovu
js
push
pop
xchg
mov
ret
mulb
jb
loope
cmp
sub
mov
mov
xchg
add
daa
dec
jmp
adc
cmp
pusha
and
add
mov
mov
stos
mov
shr
leave
mov
insb
addl
jmp
xchg
jbe
xlat
scas
or
mov
dec
adc
adc
push
jle,pt
xor
clc
xchg
fcmovu
fstps
pop
inc
js
sahf
add
sub
add
sub
cmp
jl
and
imul
stc
mov
stc
call
add
mov
shll
cld
cwtl
cld
jne
lds
ja
jg
xor
sbb
cmp
int
mov
stos
out
lods
xchg
dec
inc
sub
vpunpcklqdq
movsb
lahf
sub
push
or
xor
aaa
sbb
cmpsb
pop
in
lods
in
xchg
adc
and
lcall
mov
adc
lock
pop
push
fiaddl
xor
sbb
addl
inc
cmp
sbb
data16
add
sti
adc
sahf
adc
sub
pop
in
xchg
dec
ret
sub
and
scas
gs
lcall
push
and
jge
pop
loope
cs
in
sbb
jle
test
adc
mov
jl
jmp
pop
mov
fwait
add
ljmp
lods
push
sub
mov
pop
out
add
push
gs
mov
inc
lea
mov
daa
icebp
mov
loopne
fwait
xchg
lods
mov
aas
orb
pop
lods
cmp
jge
test
or
movsl
iret
push
add
mov
jb
sub
in
mov
fnstenv
dec
shlb
sbb
pop
js
cmpsl
xchg
dec
into
imul
cmp
lcall
xchg
enter
iret
aam
jecxz
cli
sub
scas
in
adc
inc
ret
mov
cmp
bound
ret
mov
mov
add
fdivs
jl
adc
test
in
push
aad
fists
adc
jle
pop
jb
pop
inc
mov
adcl
mov
data16
jmp
test
add
or
mov
push
mov
cmp
insl
test
cmp
ja
add
hlt
dec
sub
loop
lahf
sub
iret
mov
movsl
mov
mov
aad
jmp
clc
gs
jno
loope
add
or
mov
mov
aas
adc
outsl
mov
mov
add
sub
lds
cmpsl
jae
stos
stos
sti
icebp
fldt
push
dec
sub
cmp
ds
add
xchg
fstpl
mov
mov
call
add
ds
enter
add
scas
xor
imul
das
sbb
or
xor
sub
pop
cmp
nop
mov
in
mov
mov
orb
or
gs
icebp
aaa
orl
imul
pop
push
icebp
test
cmp
adc
hlt
xchg
inc
lahf
dec
jnp
dec
scas
mov
aam
lods
or
xlat
adcl
mov
or
cmp
es
movsl
stos
xlat
in
cmpsb
jp
out
repnz
sub
stos
call
scas
rol
jo
loop
push
pop
jg
sbb
mov
cmpsb
push
adc
xchg
fnstenv
xor
push
repnz
or
sbb
xchg
bound
mov
cmp
data16
xlat
sarb
and
xor
xchg
push
pop
push
mov
sub
adc
std
mov
xchg
dec
or
clc
xchg
mov
inc
sbb
push
xor
jae
cmp
fadds
into
jmp
push
clc
inc
sub
ljmp
sub
stc
sti
xor
cltd
push
add
fisttps
cld
mov
mov
push
or
sti
in
arpl
cmp
add
pushf
test
lods
mov
test
cmp
cmp
lea
push
push
pop
add
incb
jl
adc
inc
xchg
mov
lods
xchg
shl
stos
and
movsb
insl
mov
mov
sahf
fwait
dec
pushf
push
fistps
and
int3
dec
mov
pop
sbb
xchg
and
cs
movl
push
test
inc
pop
push
cmp
lcall
cmp
lahf
adc
cld
inc
xor
xchg
lea
jmp
insb
jno
xor
pop
push
cwtl
lret
out
iret
ficoms
push
inc
pop
jns
clc
ficomps
push
sub
sub
icebp
inc
and
hlt
push
adc
movb
sbb
jecxz
xchg
jle
and
outsb
out
push
adc
pop
sarb
aad
mov
jnp
sub
lahf
xchg
inc
ret
add
cmp
cli
inc
xor
sub
fadds
outsl
es
and
je
out
and
push
or
fidivs
and
sarl
shll
mov
loop
adc
jne
and
ljmp
mov
cmp
test
sub
packssdw
in
scas
inc
and
xlat
outsb
js
in
repz
repz
dec
sbb
and
cmpsb
in
push
xchg
clc
jne
test
sbb
gs
fdivs
out
sbb
data16
popf
mov
xor
insl
jae
xchg
es
fmul
aas
mov
int3
lret
add
mov
cmp
idivl
jo
rep
mov
call
repnz
adc
jno
ljmp
lea
mov
inc
lcall
pop
insb
xchg
mov
cmp
jno
jl
dec
inc
push
dec
ljmp
std
cs
cmpsl
mov
sub
jno
pop
xor
or
fdivl
test
add
lods
jl
repnz
adc
pop
inc
or
push
scas
or
jnp
push
enter
dec
and
mov
xchg
lret
add
mov
lcall
out
xlat
arpl
movsb
int3
repnz
pusha
inc
dec
gs
and
xchg
mov
outsl
into
pop
add
icebp
scas
outsl
or
in
lock
adcl
xor
mov
or
fiaddl
mov
lret
add
inc
add
and
or
add
stc
dec
sbb
mov
adc
and
shlb
jae
loope
adc
and
lock
int
loop
lea
xor
aam
call
jbe
mov
pop
cmpsl
cmp
pop
sti
data16
test
popf
cmp
arpl
fisubl
or
or
jmp
mov
or
jo
push
loope
pop
outsb
mov
cmp
or
jp
stos
ds
sti
cmp
ljmp
fistpl
mov
out
cli
sub
iret
inc
jmp
in
jnp
sti
jg
inc
adc
add
sub
cltd
or
icebp
cmp
dec
jae
mov
xor
and
cmp
cld
cmpsl
mulb
push
shrb
in
cmp
mov
and
std
out
sub
int3
gs
int3
test
cmc
icebp
nop
and
xor
shll
xchg
or
gs
xchg
ret
cmp
lret
mov
and
fcoml
nop
test
nop
xchg
push
test
and
mov
jg
jp
pusha
jge
loopne
or
mov
aas
inc
jl
and
inc
insl
hlt
movsb
xchg
or
mov
pop
cmpsb
test
addr16
aas
jg
pop
mov
popa
aas
add
and
out
movsl
movsb
leave
fadds
or
sbb
fidivrl
jge
cld
icebp
stos
sbb
test
dec
fcoms
pop
and
out
sar
imul
jno
leave
xor
dec
jne
ret
rorl
sahf
xor
push
and
ja
sahf
bound
push
pop
jb
shrl
fnstcw
shrb
data16
mov
movsb
icebp
fwait
add
lods
in
mov
pusha
pop
and
jle
fsubrl
or
lret
sbb
mov
xchg
sahf
or
in
clc
mov
mov
xor
cmpsl
inc
js
outsb
les
or
in
mov
sbbb
int
sub
jl
je
mov
jns
sti
pop
cli
dec
or
test
inc
adc
sarb
testb
daa
es
sub
icebp
pop
jae
pop
dec
hlt
mov
sub
mov
jge
xchg
fimull
push
ficompl
cmp
pop
sbb
fs
mov
cwtl
shlb
mov
lcall
pusha
cwtl
xor
and
lret
cmp
fs
jle
outsl
nop
mov
or
jle
sti
add
push
xor
pop
ret
adc
dec
jo
pop
cmc
pmaxsw
add
mov
rorl
xor
js
ret
xchg
sbb
in
sub
pop
cmpsb
repz
xlat
and
ror
push
cltd
xor
mov
cltd
add
test
stos
je
cmp
sbb
andb
mov
push
xchg
cmpsl
inc
add
cmpsl
cli
int
push
ljmp
fs
pop
cmpsb
xchg
shl
bound
dec
sbb
dec
cmpl
push
fdivs
movsl
adc
arpl
push
hlt
xchg
fdivs
fdivrl
push
push
mov
cmp
and
bnd
ljmp
lret
and
xchg
mov
std
aad
cmp
mov
add
sbb
call
ljmp
lods
mov
jbe
out
push
add
cmp
jns
cmc
fs
popa
lret
fwait
xchg
insl
cmpsb
pop
loop
jmp
lcall
jb
fnstcw
cld
mov
xchg
clc
xlat
sub
rclb
pop
push
dec
add
jne
push
sti
mov
cmp
xchg
and
sub
pop
push
sbb
xor
popf
call
test
xor
and
sbb
icebp
cs
repnz
xor
dec
mov
push
and
and
mov
les
ffreep
int3
aaa
or
fistpl
ja
mov
fistpl
movb
stos
adc
fildll
sahf
out
icebp
mov
dec
out
movsl
cltd
sbb
jg
fdivs
sbb
jg
mov
insb
call
mov
xchg
mov
iret
fidivs
lea
inc
cld
mov
mov
xor
or
or
stos
push
push
loop
fsubl
call
stc
cwtl
cltd
sub
jo
push
shl
push
add
jo
cltd
mov
jmp
arpl
mov
mov
mov
lcall
gs
jns
in
les
jb
xor
icebp
nopl
sub
enter
bound
adc
aam
xlat
repnz
push
mov
gs
add
xor
movsl
mov
add
push
push
push
movsb
and
enter
adc
adc
xlat
add
and
add
pop
fnstenv
sub
sub
jl
sub
and
push
pop
int
outsb
mov
jbe
insb
mov
pushf
and
mov
and
das
cmc
xchg
xor
ss
push
es
arpl
sub
and
movsb
xor
inc
push
fwait
arpl
mov
mov
repnz
push
fidivrl
sub
mov
push
mov
ja
sbb
xchg
push
scas
arpl
ret
cs
sub
flds
cmpsl
ljmp
fldt
add
xchg
in
sbb
mov
sub
pop
push
daa
push
jbe
dec
push
or
push
pushf
inc
in
lods
in
cmp
cltd
shll
pop
ret
lods
out
lds
ret
cmp
or
fs
rcrb
dec
shll
push
sbb
xor
fiaddl
xor
xor
test
mov
mov
lock
mov
in
pop
rolb
and
and
pop
mov
jbe
outsb
ficoml
mov
fldenv
mov
loop
pop
enter
scas
test
fidivrl
icebp
sahf
scas
lock
lret
cmp
cltd
ret
std
dec
pusha
jle
push
fs
and
mov
xor
clc
add
sbb
sbb
mov
in
mov
gs
add
das
ds
imul
insb
push
cmpsb
stos
xchg
mov
loope
leave
mov
movsb
mov
popf
pop
dec
sbb
mov
mov
push
cld
outsl
jmp
lcall
nop
idivl
lea
jl
lcall
xor
mov
inc
xchg
rcrb
xchg
dec
test
jg
jl
sbb
cmp
mov
fdiv
mov
ffreep
int3
lods
arpl
adc
push
inc
jo
or
pop
ss
mov
sbb
adc
add
sarb
ds
or
dec
outsb
jno
arpl
stc
inc
cmp
loopne
pop
cmp
ficomps
xor
xchg
inc
daa
jecxz
xchg
scas
fs
loopne
inc
shrl
int3
jmp
rcl
fwait
mov
pop
insl
jne
lea
out
adc
loopne
xor
xor
in
test
imul
in
cwtl
sbb
xchg
xor
lods
dec
jbe
or
cli
sub
arpl
jo
xor
xor
imulb
xchg
xchg
xor
out
mov
leave
mov
addr16
rep
pop
jl
mov
push
jp
jno
stos
faddl
pop
and
in
mov
int3
push
sub
hlt
stos
sahf
popf
add
ds
push
or
stos
test
movsb
pop
mov
cmc
push
ss
or
mov
pop
nop
pop
mov
pop
ss
inc
or
ljmp
setp
repnz
popa
jne
aas
and
inc
mov
add
lcall
mov
js
orb
jae
adc
adc
pop
dec
xor
lea
out
loopne
movsb
jmp
cltd
push
pop
push
add
out
sahf
cmpsb
push
add
pop
std
push
and
cmpsl
clc
mov
and
mov
or
out
pop
jmp
xchg
cmp
sub
idivl
sbb
jne
jl
mov
xchg
out
mov
xor
popa
jnp
in
pop
mov
paddb
shll
sarb
push
mov
xchg
int3
xor
inc
adc
xorl
sbbb
sbb
aad
lahf
add
jae
add
sti
dec
ret
jge
fcmovne
jnp
es
jle
ljmp
mov
test
or
in
adc
in
mov
es
in
idivb
enter
add
sbb
fisttpll
push
xor
sbb
ja
aad
mov
mov
cmp
test
xor
sbb
push
shll
adc
test
test
divb
es
dec
fs
and
sbb
sub
pushf
jl
mov
sarb
xor
cmp
xchg
jns
ds
movsl
dec
dec
mov
jg
xor
and
dec
ss
xor
cmp
sahf
je
jmp
imul
xchg
repz
mov
movsl
jae
and
push
adc
call
adc
lcall
sub
pop
mov
psraw
loope
push
daa
loop
jmp
sub
sbb
arpl
push
mov
xchg
or
mul
dec
add
sbb
icebp
stos
sti
push
std
mov
dec
add
adc
jp
sub
sbb
into
fstps
jns
jb
std
cmp
cwtl
lods
arpl
dec
add
call
pop
adc
fldcw
xor
push
aas
mov
xor
cmp
jo
nop
sub
data16
fmul
xor
bound
mov
repnz
sbb
pop
mov
fimull
mov
jge
sub
pop
adc
aaa
popa
sub
scas
cmp
push
scas
xchg
sarb
lock
xor
loopne
dec
and
sbb
inc
je
rclw
ficoms
in
div
jbe
mov
in
and
push
mov
in
cmp
sub
or
out
xchg
mov
addr16
enter
jne
mov
xchg
mov
mov
mov
jns
je
cmpsb
iret
gs
stos
leave
push
jae
stc
cmpsb
or
mov
fisttps
cltd
jns
out
scas
inc
fwait
inc
in
push
xor
or
cmpb
push
xchg
pop
xchg
adc
out
mov
lcall
jg
das
pop
in
stc
or
out
shl
add
addb
into
push
mov
or
aam
jp
cmp
pop
jnp
inc
pop
pop
push
outsb
jecxz
aas
int
mov
lods
push
ja
cmp
call
out
nop
push
fsubl
sub
mov
adc
xor
xchg
das
test
std
adc
and
idivl
enter
fldenv
sub
inc
lea
push
jno
pushl
test
sbb
and
pop
pop
xor
test
push
push
mov
insl
mov
adc
cmovg
jl
add
and
scas
addr16
sub
mov
mov
enter
xchg
inc
cmpsb
jp
dec
sub
ja
xchg
clc
fwait
sahf
sbb
in
or
inc
mov
sub
lds
push
sub
dec
pop
adc
push
push
rorb
stos
mov
cmp
add
addr16
dec
lret
sbb
push
pop
repnz
xchg
adc
leave
fbstp
dec
push
popa
jg
dec
pop
mov
jne
mov
out
adc
cli
clc
scas
jne
pusha
add
mov
xor
cmp
push
out
ret
sbb
mov
push
in
movl
imul
push
inc
inc
cltd
cwtl
sahf
push
mov
adc
test
xchg
xchg
fwait
sbb
cmpsl
insl
xlat
add
jnp
sub
fwait
out
in
outsb
test
push
stc
cmpsb
cmp
out
enter
or
hlt
stos
sub
dec
xor
in
cmpsl
aas
into
jle
sti
cmc
out
pop
test
and
div
stos
fdivrl
jecxz
lcall
sti
cmp
vphaddbd
nop
add
ljmp
dec
clc
dec
mov
orb
adc
incl
mov
push
bound
cmp
pop
cwtl
cmovge
and
xor
lret
dec
std
enter
fmull
insb
jmp
arpl
out
fwait
jne
dec
pop
dec
jbe
in
jbe
sub
arpl
and
insl
rclb
jecxz
lock
pop
inc
mov
inc
jo
mov
clc
je
sti
testl
dec
mov
adc
je
pop
push
mov
test
jge
call
fnstcw
gs
mov
xchg
xchg
xchg
and
cmp
mov
and
inc
inc
stc
in
cmp
push
xor
pop
mov
pop
mov
mov
stos
mov
idivl
idiv
lea
out
lock
and
pop
in
push
cmp
jo
mov
pop
adcl
inc
cmp
mov
daa
adc
insl
jbe
lds
loopne
movsb
mov
add
inc
les
sbb
mov
mov
xchg
inc
xchg
lea
gs
push
pop
scas
adc
aas
gs
mov
in
sahf
jne
sbb
roll
xor
and
repz
jne
mov
in
sbb
fwait
jle
mov
ljmp
xchg
insb
inc
stc
subl
arpl
cltd
iret
adc
jns
jecxz
imull
sti
cmp
ds
lock
xorl
popa
outsl
push
sub
xchg
aam
cmp
mov
add
dec
ret
fsubl
and
xchg
out
jne
mov
cmpsb
adc
lcall
jle
lods
ret
negl
add
dec
das
mov
sbb
sub
add
inc
rclb
mov
popa
dec
sbb
cmpb
jbe
popf
and
subb
mov
in
jns
inc
sub
xchg
outsb
iret
cmp
insl
push
addr16
jge
enter
cs
popa
clc
stc
psllw
or
shlb
enter
lcall
stos
gs
xchg
jae
push
aaa
jo
sbb
cmp
sub
idiv
jno,pn
imul
aam
dec
adc
nop
adcb
movsb
cld
inc
fwait
push
jbe
mov
mov
mov
mov
pop
jmp
je
or
loopne
cmc
or
dec
jbe
mov
add
out
cld
int
loop
shlb
xchg
jno
push
add
inc
sub
aam
and
fcom
and
in
test
push
pushf
subl
mov
stos
pop
pop
mov
les
pop
scas
inc
xor
daa
mov
outsl
fimull
ret
cmp
aam
js
mov
in
das
hlt
insl
cs
popa
out
movsl
out
cmp
pop
mov
or
pop
mov
aad
xor
scas
jp
aas
cltd
mov
test
sti
and
mov
icebp
mov
icebp
push
andl
mov
xor
roll
inc
test
mov
cmp
and
xor
insb
cmp
adc
push
mov
xchg
push
mov
jp
lahf
or
mov
jb
cmp
les
js
add
mov
mov
add
stos
ljmp
ljmp
movsb
jmp
lcall
ljmp
mov
icebp
adc
lret
jmp
es
pop
cmp
dec
inc
fstpl
xor
dec
mov
cltd
add
sub
icebp
adc
outsl
xor
sub
es
push
jg
xor
push
psrld
fwait
adc
pop
pop
mov
icebp
arpl
sbb
jg
mov
mov
shl
sarl
in
mov
mov
adc
or
fbstp
popa
addr16
rcl
push
mov
pusha
dec
cmp
cltd
ja
aad
rol
and
jecxz
je
pop
jno
pop
test
mov
mov
insb
scas
das
pushf
scas
mov
fs
mov
xchg
pusha
and
in
add
test
loop
and
lock
mov
out
sahf
andb
or
mov
add
lcall
je
out
arpl
js
sbb
js
dec
pop
lock
icebp
dec
shll
loop
or
inc
imul
aaa
mov
cmp
addr16
leave
xlat
arpl
push
dec
pop
iret
add
or
add
ljmp
push
sub
aas
xor
dec
jecxz
xchg
scas
lds
jb
pop
jmp
subb
out
loope
push
int3
jae
stos
adc
iret
pop
pop
cmpsl
ret
in
jne
rorb
pusha
mov
add
test
mov
cmp
or
popf
mov
mov
mov
push
pop
pop
adc
lcall
lods
bound
mov
negl
lahf
lahf
jno
imul
sub
xchg
notb
mov
testl
sti
sbb
adc
dec
jl
mov
mov
in
lock
jmp
gs
jmp
sbb
js
js
mov
or
cmc
leave
and
dec
adc
into
pop
or
inc
xor
test
or
ret
adc
push
fs
pop
jae
test
or
out
jo
divl
xchg
inc
and
dec
rcll
pop
testl
fnstcw
mov
mov
lret
insl
push
jl
or
shl
mov
pop
and
int3
out
lods
lcall
sbbb
and
fstl
jns
lret
cwtl
mov
push
rcrb
sub
mov
mov
enter
inc
push
jo
loope
jg
insl
and
stc
inc
fs
aam
cmp
xor
cltd
add
imul
cltd
push
push
jbe
inc
test
and
jns
int3
or
lret
mov
fdivrl
ret
sahf
inc
adc
ds
pop
dec
dec
and
or
xchg
add
in
push
add
sub
mov
bound
and
aaa
pop
icebp
fimuls
jns
movsb
lods
adc
jle
mov
pop
lahf
sbb
and
ds
in
xor
pop
lahf
push
xor
loop
pop
inc
repnz
push
cli
repz
mov
push
mov
outsl
xchg
xor
sub
insl
gs
and
push
mov
movsb
bound
mov
arpl
dec
xor
mov
mov
cmp
outsl
xchg
fsts
push
add
es
pop
xor
cli
rol
push
push
cmpsb
ja
into
dec
sbb
aaa
into
adcl
mov
inc
xchg
inc
icebp
push
dec
faddl
test
add
into
push
xchg
xor
cmp
lcall
inc
or
jg
and
inc
mov
sub
or
push
jb
scas
jecxz
xchg
add
pop
fldcw
jp
mov
push
addr16
mov
adc
bound
mov
sub
or
xor
js
push
mov
pop
ffree
jl
ret
fidivl
add
repz
and
push
cmpsb
dec
and
repz
or
push
push
divb
fwait
jnp
or
ja
rcll
les
sti
imul
dec
pop
sub
or
popa
repz
cmp
pop
and
pop
xor
ljmp
stos
push
iret
stc
icebp
int3
pushf
enter
cltd
js
cmpsb
mov
xchg
mov
cltd
cmp
pop
push
cmp
ss
gs
out
mov
scas
jle
out
adc
push
call
rcrl
jno
jg
and
adc
add
pop
jae
inc
les
mov
push
pop
mov
lds
inc
jno
call
repz
or
pop
pop
out
and
jbe
repz
push
mov
nop
push
mov
clc
mov
add
mov
or
jno
jg
sbb
cmpsb
mov
mov
push
cmpsl
mov
push
pop
lret
cmp
sti
pop
sub
sbb
gs
je
adc
adc
jno
mov
leave
int3
push
mov
leave
push
adc
aaa
test
inc
stos
aaa
cmp
repz
mov
hlt
or
xchg
and
lret
enter
fldenv
pop
cld
pop
divl
cld
mov
gs
movsb
jmp
call
int
push
mov
js
push
ss
jnp
int
mov
pop
sbbb
testb
xchg
ds
std
push
sub
dec
stos
ret
sbb
scas
sbb
fildll
xchg
sahf
mov
and
push
js
lock
inc
rcrl
aad
inc
cmp
and
pop
pop
mov
repz
push
mov
fdivs
dec
or
sbb
pop
or
fdivrs
sub
and
pop
scas
inc
out
adc
inc
mov
cld
imul
jp
add
push
sub
xchg
lods
and
pusha
mov
mov
int
insb
sub
lret
pop
std
push
push
icebp
fdivrs
mov
popf
xor
add
push
push
enter
mov
jp
or
ja
mov
jge
shrl
xor
jno
cmp
sti
push
ret
sahf
jns
jmp
int3
jno
in
mov
daa
andl
rcrl
xor
fld
ds
cmpps
lea
in
pop
push
orl
lea
xchg
je
xor
xchg
sbb
sbb
dec
lcall
xchg
ljmp
cs
sub
mov
xor
insb
bound
add
lock
pcmpeqb
xchg
xchg
mov
lods
shll
push
rcll
inc
adc
cmp
dec
dec
stos
roll
loope
rolb
fsts
jg
cmp
int
shll
or
pop
xor
pop
sub
pop
out
jne
jg
cmp
clc
lea
push
ja
jg
or
das
and
test
xchg
jne
xchg
xor
cmp
mov
iret
mov
push
push
mov
aas
scas
inc
jne
cmp
and
cmp
ret
stc
pop
hlt
cmpsb
add
jne
fxch
dec
rcrl
inc
xchg
dec
xor
mulb
and
or
sub
test
ss
fnstenv
jae
xor
stos
scas
cmp
nop
mov
dec
push
pop
or
fistps
sub
mov
daa
je
dec
loope
xchg
and
pop
iret
mov
jae
push
fsubs
mov
shrl
outsl
and
addr16
jmp
popf
leave
lock
dec
and
push
imul
adc
imul
dec
out
popa
inc
push
or
gs
fisubl
lahf
mov
sbb
dec
sub
hlt
vminss
imull
cmc
test
clc
arpl
fildl
pop
mov
xchg
inc
int
jae
jle,pn
in
dec
xchg
jnp
jb
mov
push
outsb
lahf
adc
mov
xchg
mov
imull
mov
mov
jg
inc
push
in
and
and
popa
and
jge
fbstp
sub
clc
mov
enter
xor
adcb
jbe
adc
iret
daa
mov
stos
cs
ja
mov
xchg
or
outsl
mov
mov
outsb
xorl
xchg
cmp
adcl
cmp
sarb
es
imull
push
or
jle
ss
push
loope
mov
mov
inc
jo
test
dec
pop
sbb
dec
bound
cwtl
and
fstpt
adc
jle
js
frstor
pop
inc
aad
inc
jle
jmp
jl
fbld
add
jecxz
clc
in
pushf
cs
sbb
sub
pusha
aam
pop
faddl
out
push
in
xchg
sbb
push
in
icebp
outsl
test
mov
sub
pop
mov
cmp
les
pusha
inc
idiv
insl
pop
adc
xor
dec
fnstsw
std
push
fldcw
je
stos
in
leave
fsubs
xor
and
in
arpl
xchg
out
sbbl
clc
add
gs
out
inc
adc
addl
je
sbb
lods
dec
cmp
dec
mov
and
sub
mov
out
dec
push
inc
ror
xor
mov
roll
push
call
loopne
xor
pop
es
in
cmp
add
rorb
enter
insl
test
pop
mov
cwtl
test
push
shll
cmp
mov
out
ss
out
mov
jl
push
faddl
test
hlt
dec
sub
leave
jb
xchg
pause
push
lea
in
test
sbb
and
clc
int
scas
cmp
inc
std
ss
lret
mov
pop
dec
cmp
jno
addr16
out
stos
and
mov
jmp
loope
lock
jne
sarb
test
imul
cmp
pusha
cmpsb
adc
stos
xor
pop
sti
aam
fld1
xchg
aaa
cmp
adc
xlat
sbb
int3
popa
inc
push
sub
cmp
sub
lret
push
cltd
jae
aad
push
pop
cmp
gs
mov
cmpsb
ss
ret
fdivl
sub
or
or
fistl
xor
dec
es
or
cs
pop
cld
out
sar
loopne
pusha
pop
push
in
dec
or
mov
sahf
add
mov
mov
ret
pop
imul
mov
mov
rolb
inc
lea
movsl
iret
movsb
stc
pusha
hlt
inc
and
fiaddl
popf
imul
loop
movl
sahf
mov
out
pop
push
pop
adc
mov
js
hlt
cmp
clc
mov
jg
push
mov
bound
fdivl
outsl
xor
xchg
pop
mov
popf
inc
pop
adc
loop
mov
xchg
jae
dec
daa
xor
sub
cmpsb
and
cmp
jl
into
add
xchg
xchg
jmp
inc
xchg
mov
pop
aad
xchg
dec
loopne
sahf
jns
jge
mov
mov
dec
xor
mov
loop
xor
and
aaa
out
sti
add
inc
push
aas
and
shrb
enter
xchg
inc
fwait
sub
mov
xor
arpl
lret
xchg
fstpt
mov
sbb
xor
cmc
test
dec
push
mov
lcall
and
fwait
popa
push
fisubl
les
test
and
pop
addr16
mov
pop
cwtl
sbb
outsl
sbb
or
or
jmp
cs
mov
addr16
adc
mov
push
rcrb
call
xchg
adc
cs
pop
jl
push
repnz
xchg
aas
cmp
das
int3
shrd
jecxz
mov
jmp
outsb
or
xchg
xlat
sub
xchg
mov
or
cltd
xor
adc
jo
cmpsl
test
push
dec
push
sbb
inc
inc
popf
mov
sbbl
out
je
jl
xchg
pusha
push
pop
ret
loop
stc
out
into
xchg
mov
sbb
or
xchg
repz
loope
sub
in
popf
xlat
out
sub
into
mov
repnz
sbb
jl
scas
sub
fistl
rol
outsl
sub
cmpsb
adc
cmp
inc
jnp
int
inc
sub
lock
in
dec
add
mov
jbe
pop
test
bound
and
push
in
adc
sub
cmc
push
xor
add
sti
mov
mov
in
sub
addr16
iret
sub
sahf
push
xchg
ljmp
adc
es
jl
das
inc
cltd
adc
call
out
lcall
jle
mov
inc
out
xchg
add
divb
insb
inc
aad
outsb
cwtl
mov
std
cmp
in
jb
add
xchg
pushf
pop
fmuls
and
mov
lock
dec
cmp
adc
adc
lret
or
or
insb
xchg
filds
xchg
test
mov
shrb
cmpsl
inc
pop
push
xor
pop
sarl
and
adc
stc
xchg
mov
aas
ds
dec
cmp
push
loope
jne
jo
in
pop
jbe
ret
pop
out
adc
or
mov
or
stos
cmp
lods
lods
loope
mov
mov
int
mov
cli
call
lret
scas
inc
xor
mov
inc
ss
insb
and
inc
ja
jns
and
push
pop
test
dec
xor
loope
stc
repnz
inc
dec
orl
je
sub
or
addb
cmp
repnz
es
icebp
dec
lods
aas
lcall
test
push
cmp
push
jb
cmc
mov
and
jae
or
test
adc
ja
inc
in
imul
lret
in
push
add
mov
xchg
pop
inc
sub
mov
xor
out
and
test
rolb
shrb
test
mov
std
sti
adc
jge
lods
sub
mov
cltd
mov
mov
out
or
lret
push
pushf
dec
movsb
jl
adc
xchg
fadds
hlt
loopne
cmpsb
iret
sahf
cltd
scas
push
push
lds
pop
inc
in
push
enter
lods
jl
jle
orl
shrb
scas
sub
test
inc
fwait
aas
les
sarl
push
pop
adc
xchg
in
mov
xor
hlt
pop
sub
inc
cmpsl
shlb
outsl
cld
adc
orl
xchg
daa
ss
sub
jmp
push
cltd
and
and
dec
dec
cmp
rolb
pop
incb
mov
and
jg
lods
movsb
hlt
cmp
aas
ja
and
ret
sti
jp
das
push
call
hlt
shll
mov
insb
bound
jl
jbe
fisttps
xor
cmp
mov
call
cs
scas
fimull
jb
out
shrl
outsl
add
xor
push
js
push
xchg
mov
orb
fsub
lret
js
sbb
outsl
mov
test
adc
js
mov
mov
or
ljmp
dec
push
pop
int3
mov
fnsave
fsubrs
pushf
push
mov
hlt
sub
xchg
dec
or
js
mov
xor
stc
repz
mov
push
jmp
cld
icebp
jns
push
stc
mov
das
cmpsb
icebp
xchg
bound
ret
cld
push
stc
in
cmpsl
aaa
push
adc
jne
outsl
shl
loop
movsl
jb
lock
mov
xor
pushf
pusha
stc
fildll
int3
adc
pop
cmp
imul
lcall
sbb
out
pop
addr16
out
or
in
fwait
mov
or
xchg
test
pop
call
sub
fdivp
xor
int
adc
xchg
and
sbb
stos
xchg
out
fcompl
pop
sub
repnz
out
mov
js
dec
pushf
inc
enter
inc
xor
jns
lock
insb
push
data16
mov
cmp
cltd
std
mov
mov
adc
sub
mov
add
add
enter
sbb
ds
mov
jg
loope
jmp
jae
in
pop
inc
mov
lea
pop
shlb
pop
or
mov
out
mov
call
into
adc
into
cmp
fdivrl
push
inc
mov
frstor
and
xor
dec
data16
mov
cmp
adc
mov
fdivrs
mov
adc
in
sub
shr
fsubl
and
dec
into
scas
scas
mov
insb
inc
loopne
outsl
xor
and
pop
stc
xchg
jge
imul
adc
sub
xlat
pop
cmc
pop
or
sub
mov
inc
imul
loop
sbb
push
out
add
xor
cmc
pop
lea
int3
push
jl
insb
push
cmp
mov
sbb
arpl
pop
ret
mov
inc
xor
roll
pop
mov
add
fimuls
pop
pop
mov
stc
fbstp
loopne
xchg
int3
and
in
test
insb
outsb
xor
mov
out
cli
jmp
mov
pushf
cltd
rcl
mov
adc
inc
and
lcall
cmp
fmuls
cmp
lcall
adc
icebp
xor
mov
pop
inc
rorl
shl
mov
loop
cltd
aam
ss
stc
testl
data16
mov
sub
mov
xchg
nop
or
add
dec
xchg
jle
add
inc
ret
dec
sbb
arpl
sarb
ss
xchg
push
mov
std
mov
outsl
push
adc
dec
sbb
inc
sub
push
cmp
cmp
mov
dec
stos
dec
xor
dec
pop
aad
jecxz
push
push
dec
xor
jg
push
cmp
lret
jnp
clc
cmp
das
mov
rcrb
cwtl
es
out
in
mov
sbb
pop
lea
scas
test
cwtl
lods
xor
jo
inc
adc
jle
dec
jge
call
ljmp
mov
dec
std
in
sub
pop
fdivl
adc
xchg
push
shll
lds
adc
jb
or
push
pop
dec
stos
stos
add
sti
sub
pop
adc
push
push
lea
fstpt
mov
sbb
cmpb
jno
fisubs
pop
and
or
les
xchg
ljmp
das
cmpsb
stos
and
into
ret
fs
ficoml
xchg
rorl
mov
arpl
mov
cmp
jno
test
mov
xor
dec
stos
xchg
add
fcoms
xor
mov
stos
popa
repz
es
push
out
add
insb
cmp
add
or
or
pop
xchg
lea
cmp
aas
call
loopne
jno
inc
imul
dec
ja
inc
stos
inc
lds
cmc
push
dec
cmp
push
push
repz
jmp
push
cmpl
icebp
mov
popf
insl
jbe
es
add
adc
aaa
sti
and
add
cmp
ret
jmp
adc
inc
ja
pop
xor
and
push
jb
loope
cmc
cwtl
or
push
cmp
sti
mov
das
loope
xor
add
and
shll
xchg
repnz
aas
fmuls
xor
lcall
pop
mov
dec
or
pop
or
sub
sbb
stos
push
js
adc
mov
loopne
insl
lods
lret
nop
mov
orl
int3
nop
add
sbb
xchg
sahf
sbb
xchg
rol
out
notb
mov
pop
push
or
cmc
loope
clc
push
xor
gs
roll
xchg
test
leave
ja
dec
dec
mov
and
cmp
cli
popa
cmpsl
fsubrl
pop
popa
adc
xor
nop
dec
jo
rorl
call
sbb
mov
cltd
repnz
push
daa
jecxz
lock
sub
lea
adc
aas
jmp
cmc
push
cmp
adcl
jg
inc
pop
jmp
xor
sti
sar
push
xchg
divb
sbb
pop
aam
inc
addr16
aad
jno
or
dec
xchg
pop
into
add
pop
inc
out
mov
jne
xchg
in
arpl
cltd
mov
cmp
lcall
sldt
push
in
test
cmpsl
sbb
stc
lret
mov
dec
sub
dec
addr16
testl
stos
pop
xchg
cmp
iret
movnti
jl
popf
inc
cmpsl
sarb
out
jle
push
cld
inc
fsubr
mov
test
mov
mov
test
mov
cmp
or
jmp
ret
out
cwtl
je
inc
lods
arpl
gs
adc
cs
and
xchg
add
xor
push
int3
shlb
mov
insb
daa
jg
xor
aaa
test
hlt
je
inc
sub
inc
mov
and
and
jge
sbb
in
lret
gs
xor
inc
mov
int3
jbe
xor
jl
xchg
lds
sahf
xor
js
or
and
push
addr16
test
adc
mov
xor
pusha
sbb
mov
cmc
cli
fwait
les
cmp
sahf
xchg
inc
pop
sahf
add
lds
and
mov
das
daa
dec
clc
in
lock
cmpsb
lods
inc
imul
sub
adc
aas
push
push
mov
mov
es
or
out
test
mov
fmull
pop
in
xor
mov
clc
dec
or
or
adc
push
lock
mov
xor
mov
or
clc
fistpll
mov
jg
jns
ja
and
cmpsl
hlt
arpl
movsb
jno
push
daa
aam
xor
sahf
push
push
cwtl
ret
mov
cmp
jg
jp
repnz
mov
xchg
xchg
dec
push
push
rcr
popa
mov
sahf
mov
addr16
add
inc
inc
in
fisubs
scas
and
sub
mov
divb
orl
insl
mov
push
enter
and
jge
sbb
adc
pop
dec
test
insl
pusha
subl
addr16
aaa
sbb
xchg
sbb
xor
push
aam
mov
push
xor
repnz
xor
enter
mov
push
rcrb
orb
push
inc
xor
cld
xchg
adc
ret
ljmp
push
jge
adc
aaa
testl
mov
mov
inc
mov
pop
sbb
outsb
bound
or
lods
cmpsb
lods
fld
push
test
dec
and
push
xchg
imul
les
lods
jp
loope
out
mov
aaa
stos
int
cmp
and
pop
jns
loop
aad
mov
push
and
je
mov
jle
fstpl
xchg
mov
leave
adc
pop
jns
popa
and
mov
int3
mov
ds
in
cmp
sub
fsubl
dec
insl
popl
pop
jae
lcall
in
adc
sbb
push
stos
lahf
sbb
pop
das
push
mov
cmp
fdivs
cwtl
mov
dec
xor
in
lcall
out
sbb
jmp
sbb
push
icebp
dec
add
lock
inc
cmc
pop
mov
pop
push
leave
pop
repnz
sub
jl
out
into
mov
xor
cmp
outsl
movb
add
iret
cs
and
fnstenv
int3
mov
repz
jp
cltd
xor
pusha
cmpsb
pop
adc
movsl
outsb
jle
xchg
addl
pop
fisubrs
pushf
xlat
scas
adc
leave
jb
ds
js
lods
xchg
mov
addr16
inc
sub
std
mov
sbb
lahf
mov
jno
shrb
lea
adc
cld
dec
rcrb
js
aaa
sbb
dec
lcall
push
inc
jno
pop
cmpsl
lret
xor
sub
negl
out
dec
pop
pop
sbb
popa
mov
aam
test
imul
roll
inc
jne
sarl
cmc
cld
stos
xor
xor
mov
adc
aam
sub
mov
add
aaa
cmp
movsl
mov
insb
bound
xchg
push
leave
adc
je
lds
imul
sarl
das
rcrb
fbld
cli
jg
stos
scas
sbbb
loop
inc
sbb
xchg
push
push
test
in
lods
in
leave
fidivrs
fcoms
and
movsb
add
lret
mov
lret
repnz
xchg
sbb
test
call
cld
rcrb
in
mov
pop
jecxz
sbb
xchg
scas
ret
fmuls
mov
cmp
fldenv
cltd
cli
adc
gs
jmp
jle
sbb
and
dec
mov
push
mov
jge
xorl
push
inc
out
adc
jno
xlat
or
xchg
adc
adc
inc
sbb
push
cld
orl
adc
pusha
xchg
inc
mov
inc
lret
loope
cs
mov
push
inc
addr16
xchg
out
testl
xor
push
xchg
xchg
sub
lcall
push
rcll
or
imul
fstpl
jecxz
les
cwtl
xorb
pop
incb
jne
aas
inc
inc
jge
cltd
cmp
or
sbb
xor
test
cmp
lea
out
sub
mov
mov
pop
mov
jnp
sbb
jo
sbb
icebp
mov
mov
inc
test
nop
das
mov
pop
jo
ret
icebp
insb
cli
sub
aam
jo
jns
nop
ja
push
cmp
test
cmpsb
sub
loope
inc
lret
push
mov
loopw
jbe
mov
arpl
out
mov
das
jp
fnstenv
mov
mov
ret
incb
inc
mov
aas
or
xchg
rolb
and
out
inc
xchg
pop
push
dec
ljmp
es
lcall
mov
and
push
or
pop
mov
adc
mov
jne
lahf
test
in
in
sbb
dec
rolb
ja
pop
mov
xchg
mov
test
jle
cmp
fnsave
or
pop
inc
xor
mov
movsl
inc
in
inc
mov
or
aad
or
and
aaa
shll
es
das
push
cmp
aaa
sub
sub
fsts
psrlq
sbb
sub
sbb
add
cmp
movsl
jo
int3
dec
sbb
jno
sub
inc
mov
iret
jo
fildll
icebp
pusha
fbld
bound
hlt
or
ja
mov
subl
jp
and
repnz
dec
jno
mov
pop
add
dec
push
fisttpl
push
lea
mov
insb
mov
and
lcall
xchg
jecxz
add
test
mov
cwtl
xchg
mov
je
divb
lods
ljmp
rcrl
adc
aad
int
decl
bound
dec
jecxz
lret
and
xlat
ds
shll
loope
repz
xchg
push
sbb
cwtl
into
nop
push
sbb
aas
adc
dec
push
repnz
dec
mov
adc
and
pop
shll
in
dec
in
or
sub
jo
mov
adc
cmp
test
negl
jmp
pop
ret
jae
pop
lock
in
push
out
or
cmp
call
pop
in
jge
xchg
dec
and
mov
fistps
sbb
js
lret
bound
push
scas
stos
push
push
pop
mov
mov
xchg
inc
pop
lods
imul
cwtl
push
jp
pop
push
cmp
je
lcall
push
mov
lahf
mov
dec
add
xor
pop
adc
aaa
pop
icebp
adc
mov
mov
jns
jmp
clc
or
xchg
sbb
sbb
xchg
popa
xor
cmp
test
je
xchg
sbb
stc
popf
stc
out
jns
dec
int
repnz
mov
mov
push
lcall
cwtl
imul
mov
ljmp
or
shll
stc
decl
jmp
divb
add
inc
fmull
fs
inc
pop
cmpb
sbb
and
lods
test
popa
nop
clc
push
pop
pop
adc
aam
mov
dec
sub
xor
dec
inc
sbb
out
push
pop
and
loope
mov
outsl
test
push
or
fmuls
mov
add
mov
xorl
cmc
movsl
xor
imul
fwait
int
imul
adcl
push
icebp
test
push
mov
mov
xor
adc
outsb
push
jne
loope
enter
cwtl
cmp
lcall
int3
push
cmp
flds
mov
es
or
xchg
push
out
jno
sbbb
mov
fistl
sbb
sarb
in
lods
inc
call
sub
insl
xor
loopne
push
insl
jge
dec
and
mov
in
subl
add
fs
popa
add
sbb
out
xchg
ljmp
aam
sbb
rclb
jg
shl
mov
pusha
out
sub
cmpsl
in
inc
icebp
xchg
xchg
sbb
push
adc
movsb
aas
fcoml
cmp
push
or
mov
mov
push
arpl
inc
pop
stos
push
jo
xlat
xor
push
cmpsb
out
getsec
mov
sub
inc
ja
movq
imul
pusha
inc
imul
nop
shll
shlb
in
in
push
dec
cmp
pop
push
sbb
lods
lds
or
cmc
cld
xchg
sub
pop
xor
test
aam
xchg
cmpsl
es
ljmp
cltd
or
inc
push
fisubrl
mov
add
push
mov
jg
rcl
int
xchg
and
mov
cli
sahf
dec
out
lcall
pop
mov
lock
xchg
lock
push
xchg
xor
int
outsl
fst
pop
and
vprotd
cmp
pusha
adc
and
xchg
cwtl
jbe
lret
push
loopne
dec
rcr
pusha
sub
cld
pusha
pop
repnz
repz
in
mov
mov
outsb
stos
aad
fucom
loop
and
mov
sbbb
mov
adc
ret
sub
mov
daa
cmpsb
jmp
mov
cld
push
cmc
ljmp
stc
mov
cli
scas
cmp
fidivs
addb
test
sbb
sbb
cld
jno
into
mov
push
jmp
inc
gs
mov
adc
mov
xchg
dec
xor
bndldx
cltd
sahf
push
test
imul
sbb
mov
xlat
jge
test
xchg
lret
orb
outsl
lods
xor
push
repz
cwtl
jp
js
popf
loop
call
movnti
adc
dec
popf
cld
jb
out
stc
adc
sub
lods
add
mov
leave
mov
leave
jno
pop
add
cmp
stc
dec
mov
pusha
sbb
shl
pop
mov
cmpl
cmp
cmpsb
ret
lea
pop
mov
mov
mov
dec
add
mov
stc
pop
insl
fists
cli
xchg
dec
inc
sbb
lcall
pop
mov
loopne
xor
add
ret
cmpsb
icebp
sahf
fists
mov
jmp
cltd
xchg
push
xchg
pop
and
add
loopne
cwtl
gs
or
lret
mov
jno
movsb
sti
cltd
out
lods
mov
lret
popf
pop
jno
inc
sar
adc
cmp
icebp
cmp
xor
aaa
inc
popl
mov
das
or
pop
sbb
xor
js
stos
dec
ds
adc
addl
mov
loopne
mov
mov
imul
inc
cmp
in
dec
xchg
out
mov
lea
fcomps
cmpsb
pop
shrl
sbb
fucomp
es
into
lcall
aam
cmp
push
mov
stos
sub
xchg
into
out
pop
idivl
jg
and
test
cmpb
xchg
fnstsw
push
push
lods
lret
mov
jl
and
in
cli
adc
mov
and
cmpsl
dec
out
fiadds
push
xchg
sbb
inc
fsts
icebp
jg
pusha
je
or
jl
je
pop
add
push
adc
lds
jbe
loopne
dec
inc
aaa
push
mov
shr
pop
adc
test
sub
mov
adc
add
inc
add
adc
mov
jg
dec
loope
ficompl
lds
ficomps
out
jae
pop
or
add
notl
jb
pop
hlt
aad
add
or
xchg
push
addr16
pop
xor
clc
or
mov
sub
fsubrp
pop
leave
aam
sbb
pop
adc
xlat
scas
das
bswap
adc
mov
shr
mov
icebp
inc
arpl
pushf
int
jg
dec
add
fdivl
jbe
and
call
sbb
mov
daa
add
cmc
stos
lods
sub
and
std
imul
or
mov
pushf
loopne
jg
mov
fcmovb
fwait
jmp
jl
mov
in
in
pusha
inc
jbe
push
ss
mov
imul
mov
cmpsl
arpl
lret
mov
push
andb
mov
cs
jae
andl
std
sbbl
add
push
jmp
push
lahf
xlat
sub
jl
lods
adc
mov
and
adc
out
in
inc
xchg
cmp
add
xchg
add
xchg
ja
jo
aam
mov
ja
nop
add
pop
sbb
int
mov
or
arpl
in
mov
jmp
mov
clc
pop
lock
mov
xchg
iret
fisttpl
xor
rorb
inc
or
aas
pop
xor
or
idivl
xchg
je
add
stc
stc
aam
mov
inc
sub
mov
dec
test
mov
ds
adc
sub
insl
mov
ret
out
addb
dec
sti
das
andl
mov
fcomps
jge
mov
push
ret
cmp
pop
idiv
mov
mov
cmp
cmp
jmp
mov
mov
inc
jecxz
inc
jmp
add
fcmovb
nop
addr16
call
xchg
rorl
incl
push
mov
mov
out
cwtl
imul
out
nop
dec
mov
cmp
inc
ret
fistpll
int3
or
inc
mov
insl
jne
call
lods
int
inc
xchg
test
jle
lret
adc
aam
push
ret
in
out
in
pushf
jae
outsl
inc
lahf
cmp
insl
sub
xchg
jmp
into
fcomps
dec
scas
or
push
shlb
call
sub
hlt
insb
adc
hlt
lret
je
xchg
mov
push
and
cmpl
xor
xchg
stos
push
adc
loop
imul
or
rclb
daa
xor
pusha
outsl
sarb
ror
pop
push
jmp
cmp
stos
outsb
add
xor
mov
mov
mov
popf
sbb
std
lods
mov
js
jg
inc
jle
ficoml
mov
push
lahf
jge
repnz
cmpsb
xchg
mov
hlt
pop
inc
xchg
sub
pop
push
cmpsb
bound
in
jae
arpl
add
rcrl
jge
fisttpl
cli
lods
push
fiaddl
push
int3
pop
mov
xor
scas
dec
sbb
pop
sbb
and
or
push
pop
les
or
xor
movd
das
mov
ss
xor
mov
xchg
int
fwait
xor
lahf
jmp
movsb
std
pop
jne
lock
add
lret
xchg
mov
ds
int3
movsb
imul
movsb
jo
movsb
icebp
outsl
js
cmp
dec
inc
lcall
lods
repz
push
cmc
jle
ja
sbb
add
cld
dec
cmp
xchg
out
mov
int3
cld
ds
xlat
xchg
popa
int
scas
inc
inc
popa
pop
xchg
into
leave
mov
add
mov
sub
jo
sub
stos
into
dec
dec
mov
int3
jb
scas
lods
int
cwtl
out
and
mov
mov
clc
xorb
int
adcl
repnz
lret
dec
mov
movsl
push
lahf
jae
sbb
mov
xchg
out
rclb
xchg
test
push
inc
arpl
in
pushf
inc
stc
inc
mov
dec
mov
ficoml
sti
jl
add
fwait
cmpsb
xchg
mov
popa
push
sbb
mov
lods
loope
xchg
sub
push
xchg
add
jl
lret
test
mov
cli
xor
movsl
cvtdq2ps
dec
test
add
pop
int3
insb
xor
pop
cwtl
adc
rol
cmp
daa
sahf
sbb
add
inc
push
sub
xchg
inc
lret
xlat
bsr
adc
mov
or
dec
inc
add
imull
lods
lods
cmpsb
addr16
mov
not
stc
mov
aaa
nop
popa
leave
and
push
pushf
or
cmpsl
pop
pop
call
iret
out
cmc
adc
mov
cld
sbb
movsb
mov
lret
out
adc
jle
out
fldl
mov
int
and
mov
mov
loope
and
in
adc
dec
push
loope
mov
xchg
lret
xor
arpl
inc
mov
bound
dec
loop
sbb
and
pop
rcl
mov
pushf
pop
ss
push
test
mov
sub
in
mov
xchg
fisttpl
lds
pop
pushf
adc
repnz
mov
xlat
decl
pop
out
aad
loopne
mov
insb
shrd
arpl
push
pop
push
pop
ss
or
sub
push
or
fnstenv
fistps
push
into
leave
cmp
mov
bnd
leave
ficompl
popa
jg
mov
sbb
and
icebp
xchg
shl
stos
in
pusha
mov
shlb
ret
fstps
lds
lret
fdivrs
mov
mov
mov
mov
adc
xchg
test
ret
mov
mov
jbe
mov
or
aad
pop
enter
imul
invlpg
lock
cmp
enter
sbb
lret
test
mov
fstps
arpl
icebp
out
int3
cli
inc
push
xor
lret
jns
mov
inc
sub
mov
dec
jl
fst
dec
add
mov
pop
add
dec
jmp
aad
addr16
dec
xchg
mov
sar
test
loope
adc
leave
xchg
outsl
add
dec
fdivs
ljmp
je
jo
cmp
sbb
and
sbb
push
adc
pusha
xchg
or
cmpsl
ds
je
dec
xchg
and
sarl
iret
shl
popa
shr
lods
and
xor
test
jmp
dec
dec
hlt
inc
adc
inc
sarb
scas
es
dec
dec
push
into
mov
cmpsl
repnz
add
sub
sbb
call
jmp
movsl
scas
shr
imul
icebp
leave
push
push
inc
cltd
sbb
xorl
int3
add
sbb
xchg
daa
mov
int3
sbb
mov
stos
mov
gs
data16
fsubr
adc
ret
fstpt
or
and
adc
js
scas
repnz
xor
and
imul
subl
mov
pusha
jne
dec
rorb
push
rcll
mov
cwtl
pop
bnd
inc
dec
inc
pusha
mov
xor
imul
sbb
xor
push
mov
je
jae
addr16
mov
shll
xchg
outsb
xchg
adc
jmp
stos
cli
mov
leave
cmp
movsl
dec
push
movsl
cmpsl
and
or
movsb
jle
dec
lret
in
xor
rorb
das
push
push
rcll
mov
mov
dec
add
imul
in
inc
cmpsb
push
paddb
pop
subb
out
add
jb
cmp
cmp
sbb
sbb
pop
insb
popf
pop
jmp
scas
int
aam
int3
out
subps
sbb
pop
out
xor
rcll
xor
dec
je
add
sub
pop
fsubr
cld
lahf
jne
ja
and
ror
mov
jbe
lret
data16
inc
dec
mov
xor
and
inc
shll
gs
cmp
sbb
adc
jle
adc
lods
in
inc
rcr
aad
and
mov
inc
dec
mov
enter
pop
cwtl
stos
fwait
ret
mov
ret
mov
pushf
gs
mov
imul
je
cmp
in
pushf
out
ds
stc
dec
pop
mov
mov
cmp
mov
aad
rclb
sbb
mov
mov
ds
into
jge
jbe
ficoml
idiv
imul
arpl
int
push
mov
push
lods
xchg
nop
mov
mov
iret
dec
std
sbb
cmp
mov
mov
pop
mov
je
mov
adc
mov
mov
dec
xchg
and
or
popf
xchg
xchg
shlb
sub
int
add
call
push
dec
jg
xchg
mov
insl
lahf
ja
or
clc
add
insl
in
fbld
stc
lock
or
mov
adc
std
mov
xchg
movl
mov
sbb
inc
movb
or
imul
aam
flds
dec
aaa
cwtl
daa
cmpsb
mov
mov
inc
push
andb
mov
adc
fsubr
pop
cmpb
je
aad
punpcklwd
push
sub
sahf
pushf
lahf
cs
repz
cvtps2pi
and
sub
dec
jge
sbb
pushf
dec
pusha
enter
add
popa
adc
incb
push
fcmovnb
mov
adc
push
loopne
or
jge
jmp
add
xchg
sbb
mov
inc
fldl
push
testb
dec
aam
jb
dec
outsb
lahf
inc
mov
sub
int3
aas
sbb
add
mov
push
jb
push
xchg
fisubrl
fs
jo
push
inc
xor
arpl
pop
lods
jge
sub
mov
or
scas
outsb
mov
add
mov
gs
xchg
testl
loop
stos
lods
pop
imul
int
pop
rcll
cmpsb
popa
ss
ret
cmp
hlt
lahf
sbb
out
aam
jne
xor
shlb
jmp
xor
int3
push
dec
cmc
dec
scas
sbb
rcrl
mov
sbb
jae
sbb
popf
jb
repz
int3
cmp
push
jmp
and
cmc
pop
sti
xchg
cs
pusha
and
xchg
mov
ds
sub
into
mov
and
cmc
jg
or
stos
adcl
sbb
into
mov
dec
sbb
push
or
movsl
pop
sub
aam
dec
lretw
in
mov
or
xchg
les
push
cli
cmovge
lret
scas
xor
pop
lds
sub
adc
add
fmuls
sub
cmp
mov
push
mov
int3
pop
jbe
pop
out
inc
ss
adc
mov
loope
lcall
cmpsl
jbe
mov
xchg
lcall
pop
aam
into
icebp
sbb
cld
rcl
mov
dec
sub
mov
mov
fadds
jo
add
imul
xor
movsl
out
sbb
pop
mov
jge
les
gs
mov
in
sbb
cltd
fcomps
inc
cmp
fstp
jle
repz
jecxz
mov
pop
jp
int3
pusha
ds
mov
mov
mov
sbb
xor
js
int3
arpl
mov
int
repnz
ds
nop
rorl
and
and
xchg
push
xor
jl
pop
mov
scas
adc
xchg
jne
pop
in
add
or
jo
push
add
in
aam
push
shlb
shll
les
xchg
sbb
adc
insl
add
xor
inc
fnsave
ret
test
pmuludq
jns
shll
add
jae
popf
xor
pushf
jb
jp
test
shlb
sbb
push
scas
insb
cli
lret
clc
ficoml
mov
dec
mov
mov
xor
lahf
jecxz
cmp
cmp
mov
lds
pop
dec
insl
and
and
cmp
adc
or
inc
scas
mul
push
test
mov
mov
test
sbb
je
fidivrs
pop
xor
and
jnp
pop
ret
or
dec
push
add
xchg
inc
imul
gs
test
dec
pop
in
nop
mov
stc
xor
adc
xchg
pusha
lods
mov
jno
sahf
aam
push
sbb
xlat
pop
pop
mov
and
lret
adc
rorb
jo
push
loop
lret
nop
adc
mov
add
int
adc
in
and
jns
inc
decl
btcl
add
addb
inc
and
incb
fsub
repz
xchg
mov
inc
cwtl
data16
push
fmul
jb
out
repnz
inc
outsb
aam
dec
sub
js
xchg
mov
mov
xchg
fcompl
shlb
fisubl
rolb
cmp
fwait
dec
inc
mov
loope
in
in
push
xor
push
xor
sub
addr16
jns
inc
adc
cmpsl
cmp
call
fucom
aaa
xor
xchg
xchg
shl
xor
push
pop
mov
pop
stos
loopne
xchg
and
push
loope
push
inc
jns
aas
in
subb
mov
insb
js
ja
add
push
mov
out
add
inc
pop
add
rorl
loope
xor
pop
pusha
inc
lahf
push
fdivrp
add
push
jg
adc
adc
sbb
pusha
int3
jns
or
imul
push
jb
lahf
sub
test
lock
mov
push
xor
sbb
movsl
iret
aaa
movsb
dec
mov
dec
loop
jge
lds
jmp
push
out
hlt
push
cwtl
adc
xchg
xchg
jmp
and
data16
aam
sub
mov
cmp
std
cltd
jg
push
call
cmp
fldt
xchg
mov
test
call
sahf
leave
add
mov
arpl
orb
leave
mov
loop
add
cmp
sbb
mov
aad
dec
inc
leave
adc
ret
rol
clc
rorl
subb
aad
mov
std
cmp
int3
sub
daa
mov
insl
xlat
inc
pop
pop
dec
sub
into
fistl
lods
pop
aaa
add
call
les
dec
js
mov
pop
lret
sbb
add
cmpsl
and
outsb
xchg
in
mov
xchg
stos
cld
aaa
bound
mov
dec
push
js
xor
repz
bound
repz
lds
leave
test
dec
dec
shlb
sahf
xchg
outsb
loop
adc
arpl
gs
push
jns
cmp
mov
adc
sbb
xorb
loopew
mov
pushf
aas
sub
mov
int
dec
jbe
cltd
xor
pop
sahf
mov
in
loopne
add
inc
fisubrs
mul
sbb
push
mov
pop
adc
mov
in
cmp
cmpsb
inc
int
dec
dec
fnstenv
rclb
xchg
rclb
or
shl
cwtl
outsb
mov
lds
pushf
mov
mov
popf
fsubrl
shlb
sahf
in
pop
xchg
mov
popl
jle
xlat
add
fsubrl
fmul
cld
xchg
lods
adc
xor
inc
lock
mov
add
push
jo
cwtl
adc
inc
lea
adc
push
push
or
aas
jnp
int
aas
push
sub
ficompl
daa
loop
loope
inc
push
fldl
notl
xor
adc
pop
sar
push
mov
sbb
hlt
push
int3
es
stos
jne
xchg
divl
pop
add
inc
lcall
mov
xchg
sbb
xor
add
mov
sub
nop
in
push
gs
or
xchg
and
add
pop
or
pop
std
loopne
mov
test
xchg
cmp
mov
ds
mov
mov
sbb
test
xor
bnd
cmp
sbb
mov
or
movsb
jns
scas
push
mov
lods
hlt
test
mov
cmc
pop
mov
inc
aas
hlt
fisttps
das
xchg
movsb
and
add
hlt
fnstenv
push
xchg
movsl
call
loope
jmp
rcrl
rorl
jecxz
xlat
xchg
mov
and
sub
sub
dec
jbe
lea
jns
imul
addr16
inc
leave
shrb
jp
cmpsb
les
pcmpgtb
shl
testl
or
push
fldt
aad
dec
adc
mov
jne
pop
xor
mov
lock
faddp
xor
mov
and
push
js
mov
imul
daa
sub
sbbl
out
movsw
xchg
dec
adc
int3
test
xorl
rcrb
inc
shll
mov
dec
sbb
nop
push
xor
add
cmp
testl
orl
test
movsl
ret
insb
outsb
sbb
mov
hlt
jne
clc
or
push
repz
mov
nop
data16
stc
aas
sub
idivl
push
insl
xlat
push
or
mov
jecxz
inc
aas
notb
jno
pop
lret
loop
subl
les
stos
or
jb
or
xchg
fcmove
out
mov
les
out
fsubs
or
test
pop
das
add
adc
lret
push
pusha
pop
dec
dec
mov
add
fbstp
test
outsb
cli
xchg
test
in
fsubl
fdivrl
add
rcr
sub
sub
lret
jle
in
outsl
jle
mov
jle
sbb
push
pop
and
pop
sbb
inc
pusha
in
add
sbb
ja
add
dec
ficomps
shrl
xchg
mov
ja
push
push
xchg
mov
cmp
mov
sbb
gs
out
sub
daa
lea
xlat
push
popf
or
pop
xchg
cmc
mov
pop
sbb
or
test
mov
dec
jb
scas
enter
adc
inc
sbb
xchg
inc
imul
add
add
aaa
ror
fptan
ficoms
stc
dec
jnp
jl
mov
insb
adc
jp
cmp
mov
popf
mov
mov
loopne
and
mov
fisubs
bound
mov
repz
shl
pop
lock
or
into
push
loope
mov
adc
jnp
insl
push
mov
mov
add
cmpl
xchg
sub
jns
sbbb
or
out
jmp
pop
mov
pop
push
pop
je
pop
or
jnp
pusha
outsl
enter
xor
jl
rcrl
mov
pop
icebp
mov
xor
xchg
loope
mov
ret
cmp
fwait
pushf
fistl
scas
mov
xchg
push
sub
inc
mov
cmpl
ljmp
in
add
xchg
add
adc
jno
repz
addr16
int
sub
popf
dec
test
daa
mov
or
fwait
push
cmp
loopne
in
out
push
xchg
and
cs
lock
adcb
mov
dec
push
mov
es
loope
scas
es
xor
popa
aaa
dec
iret
push
adc
daa
adc
pop
push
pop
inc
popa
inc
fstpl
cmpsl
fwait
aad
add
movsb
movsl
xchg
cmp
test
inc
cmp
pushf
aad
push
and
mov
scas
inc
popa
push
cmp
sub
sbb
mov
lret
aam
in
adc
icebp
frstor
jns
xlat
cmp
mov
or
out
mov
sub
jne
in
jo
stos
ret
xchg
xor
push
adc
mov
push
jge
push
sahf
adc
jne
daa
xor
push
mov
jo
into
sbb
cmp
cld
not
pop
or
fists
call
push
sbb
cmp
cs
cmc
lods
idiv
dec
xchg
and
mov
into
mov
stc
ret
icebp
jl
mov
mov
fistpl
mov
sahf
add
inc
mov
xor
xchg
mov
dec
xchg
add
mov
jle
push
int
mov
les
scas
adc
add
std
or
enter
adc
dec
jmp
mov
and
dec
lods
lcall
add
mov
call
shll
dec
in
sub
xchg
aaa
in
lock
addr16
das
ret
pushf
inc
ljmp
test
sub
jo
jne
jg
sbb
jno
cmpsb
enter
test
jmp
cmp
inc
push
mov
decl
fs
loopne
ljmp
mov
ss
testl
pop
lea
aaa
bswap
sub
lea
mov
cwtl
pop
sub
ja
pop
lret
aad
inc
xchg
lock
xchg
jnp
aas
test
xor
xchg
mov
loopne
dec
lods
dec
mov
mov
dec
pop
cmpsb
adc
fsubl
shlb
or
bound
subb
jne
pop
pop
sbb
fs
fidivs
push
ss
mov
icebp
mov
dec
xchg
cmpl
fs
ja
mov
ret
out
pushf
insl
dec
pusha
call
daa
es
mov
lcall
xor
pushf
xchg
sub
push
in
lods
arpl
push
std
and
fisttpll
int
mov
xchg
ds
fisubl
sub
sbb
cmpsb
mov
ficoml
adc
mov
sahf
push
aad
sbb
loop
cmpsl
pop
aaa
xor
xchg
std
mov
jp,pt
push
lock
out
sbb
dec
outsl
popa
pop
mov
mov
test
add
out
sbb
pop
call
scas
subl
xor
loop
xchg
or
in
and
jae
jecxz
xchg
rolb
xor
ss
xchg
bound
js
ss
outsl
inc
lods
adc
xor
mov
mov
adc
outsb
jnp
sub
lret
test
jp
test
mov
add
jg
push
push
in
sbb
jb
cmpsl
pushf
stc
dec
pop
cld
movsl
jle
fsubrp
sbb
aam
mov
sbb
xor
jle
pop
inc
dec
jno
push
push
insl
addl
inc
mov
outsb
inc
pushl
popa
pusha
add
push
lods
jo
xlat
outsb
fucomp
inc
mov
divb
sbb
fistpl
jo
stos
sub
pop
movsb
jl
xor
out
lock
out
pop
cmp
iret
lock
jo
outsb
or
jne
xor
pop
mov
add
scas
and
jbe
mov
cmp
and
and
mov
adc
cmp
mov
mov
lahf
les
jle
ds
jmp
dec
xchg
fwait
sbb
ljmp
xor
fs
fadd
lret
jo
jae
pop
xor
outsb
movsb
dec
ss
or
adcb
add
call
sub
je
xchg
fdivrl
xlat
add
bound
test
mov
out
dec
cmp
test
jecxz
cltd
jae
cmp
xor
fadds
out
scas
roll
ja
mov
sti
in
mov
sbb
pop
aaa
lock
lret
fcoms
add
xchg
aad
pop
mov
and
out
lods
and
push
out
jmp
jmp
iret
pop
popf
test
test
xchg
mov
xchg
mov
jns
push
jg
dec
into
and
insb
mov
lods
shll
sub
pop
pop
out
xchg
mov
lcall
hlt
inc
inc
cmp
cmp
sub
sub
push
test
sub
sub
addr16
mov
hlt
out
sub
out
pop
bound
cli
cld
jge
ljmp
mov
inc
mov
cmp
cmpsb
sar
bound
push
sub
mov
gs
mov
xor
pop
mov
xor
rcll
repz
adc
sar
and
jmp
or
mov
test
pop
push
add
out
xlat
sbb
movsb
cmpsl
aaa
das
add
inc
fistpl
push
cmpps
push
xor
xchg
ja
sbb
jmp
add
in
xor
or
jns
ljmp
adc
jnp
add
sbb
not
out
jl
dec
outsl
fwait
lcall
mov
aam
lea
xchg
insl
shrl
cs
mov
jb
and
movsl
push
push
jno
cltd
lods
test
insb
mov
fcomps
push
daa
and
or
adc
sub
insb
and
or
mov
mov
mov
mov
je
pop
dec
test
outsl
loopne
lods
in
lea
cmp
xlat
mov
dec
add
dec
cmpsl
xchg
push
pop
sub
dec
xchg
adc
dec
mov
cmp
add
cmp
leave
jge
loop
les
xlat
and
inc
js
iret
cmpsl
push
ffreep
in
and
xchg
lret
dec
inc
add
outsw
aas
and
gs
movsl
pop
lea
sti
lcall
insl
push
repnz
outsb
dec
das
cs
or
sahf
xchg
scas
sub
stos
mov
xchg
stos
push
insl
shl
xor
in
rolb
add
cwtl
stos
and
fildll
scas
and
cmpsl
lret
std
or
out
std
dec
ret
push
jl
xlat
and
ror
jbe
in
repz
xchg
enter
pop
cwtl
xchg
adc
mov
jge
fcompl
lods
push
stos
bound
xor
or
popf
push
testb
das
inc
out
jno
mov
pop
cmp
ja
sbb
fisubrs
inc
jmp
icebp
fs
lods
cltd
inc
test
cli
into
xchg
push
pushf
and
mov
xor
jns
pop
sub
add
inc
cltd
cmp
scas
sahf
dec
dec
xchg
sbb
aam
lahf
cmp
mov
mov
adc
or
lods
mov
bound
outsb
cmp
daa
jne
push
or
subl
outsb
pop
lcall
ljmp
pop
mov
xor
ficoml
fs
gs
jo
dec
fld
or
dec
inc
jns
test
sti
out
imul
loop
loopne
sub
or
rcrb
stos
xor
js
loope
scas
dec
mov
rcl
movsl
mov
pop
push
jg
mov
outsl
mov
and
lret
aad
inc
cmpb
aaa
mov
lds
pushl
pop
inc
sub
icebp
rcll
sub
rol
mov
mov
test
sbbb
jbe
sbb
and
movsl
adc
lret
sbb
sbbl
imul
out
shlb
mov
inc
outsb
mov
fcmovbe
push
out
mov
sbb
nop
or
adc
push
inc
fisttps
xchg
js
nop
mul
cmp
bound
and
pop
sbb
cltd
push
xor
arpl
mov
or
aad
cmp
and
daa
inc
sub
shl
xor
add
dec
and
pop
fbld
sbb
stos
clc
pop
push
sub
insb
lods
or
add
or
int3
scas
mov
mov
sbb
adc
cmp
xor
sub
movsb
sub
leave
push
push
test
les
mov
cmp
add
daa
std
out
lds
addl
inc
fbstp
push
loopne
jle
push
imul
pop
or
inc
cmc
adcl
sub
das
mov
dec
sub
mov
sub
insb
mov
pop
aaa
outsl
fistps
push
mov
test
and
jno
hlt
push
les
lahf
xlat
jb
sub
jge
jmp
cmp
xor
mov
pop
in
jae
cs
call
pop
mov
and
adc
fndisi(8087
jnp
cld
int
mov
push
add
jl
adc
scas
scas
push
sahf
sysexit
fsubs
push
and
dec
sub
mov
clc
movsl
jbe
inc
push
xor
pop
iret
sub
insb
sub
lock
std
jl
jl
or
jl
scas
sub
sub
in
jb
aam
push
lock
adc
popf
dec
and
xchg
fwait
xor
pusha
shrl
lahf
loopne
test
nop
loope
or
cld
data16
lret
cmp
sub
pop
lods
mov
imul
popa
cmp
xchg
cmc
movsb
sarb
add
push
std
negb
dec
pushf
adc
xchg
scas
mov
insl
bound
push
cwtl
loop
mov
sbb
jp
fisubs
or
pop
int
inc
pop
cli
mov
mov
jae
les
jp
and
mov
ds
mov
inc
scas
adc
or
cmp
cs
add
cs
dec
pop
sbb
out
lcall
mov
sbb
notb
mov
insl
or
sub
mov
loope
xor
das
insl
push
cwtl
adc
lret
orl
loope
mov
imul
mov
lds
sbb
shll
dec
jb
fwait
stos
sub
mov
adc
ret
cmc
divl
pusha
or
or
mov
mov
mov
mov
jmp
mov
cltd
arpl
das
cmpsb
mov
xlat
cs
cmp
test
dec
mov
dec
in
pop
pop
int
add
sarb
jno
into
adc
xor
xor
jbe
push
add
aad
mov
int3
pusha
mov
push
xchg
mov
pushf
rorl
ffreep
popa
mov
xor
pop
sbb
inc
enter
test
fbstp
jns
sub
fisubrl
sarb
loop
jo
sub
pop
daa
test
add
mov
xor
sbb
cmp
loope
mov
pop
dec
mov
lcall
sbb
data16
inc
push
pop
dec
inc
mov
xor
into
push
out
scas
sbb
daa
cmp
les
inc
dec
add
jns
std
out
pop
gs
cmp
pop
jecxz
sbb
or
inc
mov
les
daa
sarw
popa
enter
ss
rorb
out
sarl
mov
cld
and
out
push
sahf
push
popf
scas
sub
leave
push
pop
jae
in
inc
mov
pop
call
add
and
adc
mov
movsb
pop
xor
jle
add
dec
testb
fdivl
pop
sbb
dec
xor
fidivrl
inc
sub
popl
and
mov
xor
push
loop
nop
cmp
mov
dec
mov
mov
pop
bound
imul
dec
fs
cltd
jmp
daa
int
aad
call
pop
xor
stc
loopne
xchg
ss
roll
push
sub
mov
xchg
test
push
sbb
inc
in
push
adc
repz
sbb
in
cmpsb
mov
popf
push
or
push
mov
cmp
jo
jb
sti
int
ljmp
xchg
push
out
ss
xchg
aas
scas
mov
arpl
push
or
bound
mov
push
sbbb
aaa
push
mov
movsb
and
sar
sbb
popa
xchg
test
jae
testb
cs
shlb
test
pop
daa
loope
add
in
popf
inc
fidivs
jbe
cmpsb
jle
cwtl
or
mov
push
sub
nop
push
pop
dec
push
loope
push
mov
inc
mov
jge
fnstcw
fistpl
jne
xchg
aam
inc
sbb
mov
mov
or
fldcw
loope
pop
std
push
ja
cmpsb
pop
orb
mov
cmp
dec
mov
cmp
cwtl
jbe
mov
xor
jle
shrb
push
aam
cld
sbb
pop
adc
dec
lods
and
mov
add
cmovno
dec
fnstenv
fs
imull
xchg
jp
mov
xor
rorl
add
xchg
idivl
es
std
jne
shrl
add
xchg
lcall
xchg
sub
mov
jae
sub
leave
pop
cmp
aad
or
inc
es
sub
add
lods
popf
mov
outsb
popa
jmp
scas
push
cmp
push
flds
lret
push
jo
pop
pop
movsl
cld
or
or
cmc
sub
xorb
jnp
movb
mov
jle
aaa
sbb
out
cs
or
shrl
repz
enter
pop
or
mov
les
pushf
les
mov
add
mov
push
addr16
test
push
pop
or
jbe
out
insl
jbe
repz
in
dec
sbbl
mov
xor
daa
cmc
lds
add
inc
adc
aaa
mov
adc
xchg
mov
inc
mov
test
xchg
fwait
push
jnp
bound
stos
mov
pop
ret
mov
test
out
nop
lea
not
sbb
push
xchg
mov
out
xor
out
dec
cmpsl
mov
inc
add
sub
jb
rcrl
mov
fstps
outsb
xor
int
fistl
push
dec
cmp
rcrl
cmp
push
push
dec
fwait
cmp
cmpsb
mov
and
movsb
test
inc
mov
sub
and
shl
pop
inc
mov
icebp
xchg
mov
mov
das
dec
loope
jl
xchg
aaa
adc
subl
lods
jnp
push
xorb
rclb
int3
add
fwait
inc
mov
insb
mov
std
xor
adc
insb
lea
jmp
xchg
push
incl
lds
adc
adc
and
fsts
cmp
loop
sbb
outsl
push
sbbl
jns
jne
sbb
adc
jb
sbb
and
adc
cmc
lahf
or
rcl
cli
fcoml
in
xor
mov
rol
push
mov
in
inc
fdivr
fimull
aas
mov
or
data16
push
xor
mov
gs
jmp
dec
icebp
jcxz
in
and
stos
in
adc
adc
dec
and
adc
packuswb
xor
xchg
inc
outsl
ret
mov
push
repnz
mov
dec
dec
inc
loope
inc
sub
stos
mov
cmp
mov
pop
push
cmp
imul
jns
xchg
push
mov
jbe
and
loopne
inc
cmp
dec
lds
cmpsl
sarl
dec
shlb
ds
ljmp
cld
sbb
rolb
add
mov
ljmp
adc
xlat
outsl
cmp
stos
xor
movsb
test
dec
push
adc
dec
popa
jecxz
addr16
push
xchg
pop
test
fldenv
call
pop
insb
jbe
xor
mov
ss
add
sti
loope
js
push
dec
daa
sub
into
jns
shlb
fisubrs
jnp
jp
push
push
mov
mov
das
loopne
adc
xchg
and
lcall
adc
imul
jle
repz
imul
fwait
jge
push
mov
aad
lsl
repnz
or
push
ret
mov
push
outsl
fiadds
adc
out
mov
fiadds
sbbl
xchg
ret
es
lcall
inc
pop
fists
mov
xor
popa
and
test
gs
pop
mov
outsb
jle
cmp
add
roll
pop
lret
jg
loopne
xchg
int
sub
jbe
pushf
sbb
xchg
clts
inc
loope
enter
loope
lcall
adc
rorb
clc
push
scas
xabort
push
fidivs
fisubrs
lahf
adc
push
sbb
in
shr
sbb
xor
jnp
lock
int3
insb
aam
inc
mov
outsl
stos
cmp
out
dec
incb
scas
jae
fwait
and
mov
mov
ds
call
call
outsb
loope
clc
xor
xor
and
push
mov
data16
addr16
xlat
cmp
adc
pushf
cmp
push
adc
pusha
aam
cmpsl
pusha
dec
jge
in
fnstcw
bound
nop
sar
sbb
fld
cmpsl
adc
fnstenv
inc
std
sbb
hlt
je
adc
or
aad
pusha
aaa
xchg
xchg
mov
mov
xchg
xor
dec
out
cld
mov
dec
xor
sbb
movsl
pop
mov
sbb
sbb
outsl
jmp
pop
mov
push
adc
jl
jge
and
jl
mov
pop
addl
pusha
inc
mov
xor
icebp
mov
add
xchg
cwtl
pusha
aaa
rcrl
outsb
xchg
inc
xchg
cwtl
mov
lahf
int
push
mov
pop
gs
paddb
in
cmp
push
cwtl
stos
mov
rolb
scas
js
mov
xchg
push
sub
mov
aam
roll
sbb
cmp
cmc
sub
xchg
clc
pop
or
test
insl
mov
rcl
insl
sbb
lret
out
mov
mov
add
mov
mov
repnz
mov
outsl
inc
imul
aas
popf
mov
out
cli
xor
xor
movsb
sbb
aas
mov
mov
xlat
inc
pop
xchg
cmpsl
mov
mov
cs
xchg
jp
scas
fistpll
in
adc
push
add
and
mov
dec
mov
xchg
dec
repnz
lcall
movsb
xor
out
clc
addb
lret
mov
mov
jle
inc
repnz
aas
sub
xor
xchg
xor
cmc
cmc
int3
aaa
mov
pop
rolb
fidivs
push
inc
dec
xor
adc
loopne
mov
nop
jno
add
mov
push
imul
cmc
dec
and
fcompl
and
fisubrl
iret
stc
bound
movsl
pop
mov
orl
cmc
mov
in
push
sbb
fimull
adc
mov
jmp
orb
mov
std
mov
mov
pop
filds
mov
xchg
adc
and
jge
push
mov
aam
fnsave
pop
aad
or
xor
imul
push
inc
cmp
out
or
sub
dec
js
inc
add
outsl
sbbl
jbe
arpl
fcoms
jmp
push
fisubrl
inc
sbb
loopne
jo
dec
mov
pop
mov
jg
mov
fisubrl
mov
imul
movsb
icebp
mov
fidivrl
sbb
add
insb
out
ret
xchg
icebp
cmc
nop
lds
rolb
pop
and
std
inc
sbb
and
gs
sub
int
dec
mov
lods
pop
adc
sbb
jle
mov
aas
es
lds
add
je
int3
fnstcw
lahf
dec
jbe
mov
and
lods
mov
mov
std
imul
stos
sti
pushf
cli
test
lahf
outsb
cwtl
dec
mov
mov
loope
push
xchg
aaa
and
leave
sbb
popf
fs
iret
sti
out
inc
out
pop
stc
andb
xor
aad
pmaxsw
jbe
mov
and
sub
into
mov
add
ja
rolb
mov
and
cmc
cmpb
or
xchg
stc
loope
cli
mov
fwait
jecxz
test
inc
pop
add
js
and
into
dec
mov
push
cmp
int
aaa
or
popa
dec
sub
out
mov
jb
sbb
jg
aam
sbb
push
stos
sub
cmc
cwtl
jl
shrd
mov
shrb
faddl
cltd
ficomps
sub
xor
lods
xor
mov
xlat
aaa
dec
das
jmp
outsb
dec
testb
rorb
dec
and
adc
popa
or
lock
or
push
pop
sbb
shlb
sub
movsb
daa
sub
insl
jg
sbb
inc
fs
cmpsl
and
inc
shll
dec
jle
add
or
add
sarl
jmp
cs
lahf
cmpsb
xor
leave
add
popf
jl
cwtl
clc
repnz
mov
mov
mov
gs
sub
out
sub
ficompl
mov
mov
and
mov
mov
add
cmp
leave
cmp
xor
pop
add
mov
mov
movsl
pop
int
adc
int3
add
or
xor
lods
stos
int
push
jl
xchg
ljmp
pushf
lds
cs
and
insl
or
pop
punpckhbw
ja
jae
adc
mov
std
scas
lret
aas
xlat
ds
push
push
mov
clc
lcall
fnstenv
bound
mov
jl
cs
pop
fists
xchg
movntps
push
mov
enter
out
repz
lcall
aaa
inc
sbb
xlat
cmc
loopne
jecxz
iret
push
add
jmp
cwtl
wbinvd
std
lods
pop
movsl
sbb
mov
mov
mov
add
push
dec
xor
inc
rcll
ds
push
mov
dec
adc
popf
in
cmp
insl
outsb
mov
cld
xchg
xchg
fstpl
and
pop
xchg
repz
lods
ljmp
jns
mov
sbb
stos
add
aam
jnp
sbb
ss
inc
lret
cmp
mov
xchg
movsb
into
jle
adc
test
shufps
lcall
xchg
xchg
rol
xchg
cmc
arpl
jmp
int
aam
sub
fldenv
mov
int3
adc
aam
mov
mov
in
mov
push
fnsave
dec
loop
xchg
cld
jno
and
cmp
cwtl
ret
mov
sub
push
in
xchg
mov
mov
aad
push
fwait
mov
ljmp
and
loopne
loopne
cwtl
sti
inc
mov
outsl
push
scas
mov
jae
lcall
pop
aas
or
or
sub
mov
inc
mov
les
or
cmp
or
loope
jnp
mov
mov
cli
rcrb
shll
sarl
push
mov
inc
dec
in
mov
dec
test
mov
or
jmp
xlat
push
or
aaa
rcr
jg
mov
jle
in
out
les
xor
or
cwtl
xchg
dec
or
xchg
push
or
popa
sub
cmp
aam
popf
mov
repnz
sub
or
pop
ds
js
jnp
das
outsl
lds
pop
xor
shl
in
shlb
fstpt
xorl
pop
movsl
xlat
mov
ja
call
outsb
pop
sub
loopne
xchg
dec
shr
out
stc
fistl
test
imul
push
repz
popf
sbbl
mov
adc
sub
or
lods
movsl
std
cld
or
insl
enter
cmc
lret
fwait
mov
sbb
adc
mov
fcomp
xor
mov
scas
xor
cmpsl
jne
popf
xchg
sub
cmpsb
addr16
mov
lea
xchg
xor
aad
push
xor
or
lock
fcomps
fcompl
push
inc
and
cmpb
adc
pop
ja
aaa
xor
int3
ljmp
mov
cmp
inc
imul
pop
inc
lret
mov
xchg
fists
jge
pop
test
sbb
popa
mov
push
loop
fcomi
or
add
repz
cld
push
shll
test
and
xor
push
and
jge
das
fs
sub
je
enter
and
shll
add
adc
insb
ss
les
and
jp
fmuls
stc
mov
mov
xor
aas
popl
addr16
xor
lcall
cld
xchg
add
fists
pop
adc
xchg
dec
int3
dec
ret
adc
push
jbe
dec
cld
rcrl
push
mov
sbb
test
lcall
mov
xor
loop
movsl
jne
nop
jo
addr16
cmpsl
shrb
mov
jno
rclb
js
and
push
lahf
fiaddl
insl
add
xor
adcb
repz
adc
jae
inc
stos
js
imul
mov
ret
mov
push
ss
or
ret
mov
mov
cmp
in
or
jb
mov
fbstp
add
loop
loop
xchg
ret
lahf
jmp
scas
pop
mov
fcoms
int3
jmp
out
daa
movsb
mov
inc
mov
mov
push
xchg
sub
push
andl
mov
mov
out
or
and
xor
adc
insb
rcl
aas
fimuls
les
arpl
movl
pop
jbe
jbe
or
mov
cmp
scas
cmp
or
movsl
out
test
in
inc
std
mov
aam
jbe
pushf
add
sub
call
jecxz
insl
inc
int3
cli
pusha
xchg
bound
mov
addb
adc
insb
jp
fisttpl
sub
add
test
cmp
loope
pop
daa
data16
lret
loope
dec
push
daa
push
jb
movsb
or
xchg
mov
xchg
jnp
je
mov
and
jbe
shlb
fnstcw
jns
inc
pusha
rorb
sub
jo
int
jge
mov
xor
add
xor
and
jae
adc
push
and
sub
sub
mov
nop
mov
sahf
mov
lea
xchg
addb
push
jnp
mov
xor
lock
mov
or
fwait
scas
mov
fdivp
rorl
mov
adc
mov
sti
dec
inc
push
mov
jecxz
push
sub
inc
fldcw
push
xchg
mov
mov
arpl
pushf
cltd
and
call
pusha
jns
ja
cli
test
sbb
mov
and
je
push
insl
popa
jne
inc
lea
mov
test
dec
mov
xchg
mov
mov
cli
lret
imul
sti
flds
addb
out
imulb
sbb
inc
out
pop
jl
mov
lret
scas
and
sbb
adc
pop
push
mov
push
adc
in
jl
adc
dec
mov
bound
adc
jns
inc
cmp
es
lret
std
inc
sbb
jae
imul
adc
das
jne
lods
cmpsb
or
out
xlat
jbe
xchg
faddp
xchg
es
xor
sub
push
popa
pop
adc
and
frstor
cmp
jns
sbb
popa
pop
movsl
sahf
adc
mov
imul
pop
mov
dec
adc
mov
fs
and
pop
outsb
aaa
in
xlat
push
mov
xchg
out
and
insl
xlat
mov
jbe
mov
sbb
repnz
stos
aam
gs
adc
imul
lret
das
into
add
jbe
push
sbb
cmp
lods
shl
aaa
cmpsb
cmp
mov
pop
mov
aam
movsb
test
dec
xchg
pop
adc
scas
jmp
aas
lret
cmp
jbe
sbb
aam
xor
mov
adc
ret
lahf
cmp
nop
cwtl
call
or
add
xlat
loop
xchg
xchg
or
add
in
pusha
popf
mov
or
fmuls
pop
jp
push
insl
mov
mov
cmpsl
aas
popf
xchg
imul
pop
out
lods
sub
add
arpl
js
loop
out
out
sbb
mov
and
jnp
ret
ret
stos
pop
sub
aad
inc
movsb
pop
adc
in
inc
pop
pop
push
jb
js
jns
mov
cmp
in
rclb
in
int
rorb
cwtl
jmp
mov
inc
stos
outsl
jecxz
aam
or
jbe
in
adc
rcrb
and
or
xor
fsubs
inc
fs
nop
sbb
add
dec
push
xor
les
aam
dec
test
imul
jg
jno
add
aam
pop
pop
ret
aaa
outsl
fmul
mov
push
cmpl
inc
fmuls
jbe
insl
xchg
shll
ds
out
fcmovnu
dec
cmp
mov
push
imul
add
mov
movsl
loope
mov
mov
and
sbb
and
mov
pop
nop
cmp
adc
xlat
and
and
das
dec
cmp
pushf
xchg
dec
jno
outsl
stc
mov
sub
jo
adc
scas
adc
cmpsb
out
frstor
jecxz
and
add
jle
imul
add
xchg
popa
out
push
ds
mov
es
scas
sbb
es
sti
sbb
inc
fcmovnbe
int
movsl
int3
and
xchg
int3
add
jg
xchg
and
lds
lret
idiv
push
mov
pop
movsl
fs
or
scas
xchg
adc
pop
and
dec
aaa
cwtl
xlat
ss
in
popa
inc
sbb
mov
inc
or
jmp
bound
xor
fidivrl
icebp
jo
push
shrb
lea
ss
mov
xorb
and
adc
dec
loopne
testb
imul
xchg
jmp
dec
out
xor
add
lret
cmpsl
dec
lds
sbb
push
sub
jnp
faddl
jge
cmp
pop
push
dec
rolb
push
in
sub
decl
sbb
jle
jge
idivb
dec
std
scas
mov
pop
jbe
adcb
adc
das
mov
je
test
in
cmp
inc
aaa
out
sub
test
pop
jno
das
adc
dec
imull
pop
pop
jnp
vmovmskps
and
fcomip
inc
fisubl
out
sbb
aas
ljmp
mov
push
pop
sub
jmp
lret
or
mov
movsb
in
ss
in
into
inc
mov
mov
cmpsl
jge
cld
cmc
mov
pop
cmpsb
fmull
imul
jge
xchg
sub
push
ljmp
adc
push
rorb
jle
mulb
mov
sub
dec
loop,pt
ret
loope
push
cli
mov
shlb
adc
xchg
scas
enter
repnz
scas
add
ja
mov
mov
lret
es
sbb
loope
push
adc
notl
pop
les
add
mov
push
pop
notb
pop
enter
or
mov
mov
test
mov
jae
push
jns
lret
mov
fiadds
push
dec
jb
push
arpl
or
pushf
push
jge
adc
or
insb
push
pop
dec
inc
sbb
jnp
jmp
ud1
fcoms
mov
clc
sbb
leave
adc
sbb
jnp
lcall
xlat
xchg
into
mov
jo
bt
push
push
jo
mov
mov
outsb
sbb
sub
or
xlat
jns
call
jns
mov
into
add
ret
dec
cmpsl
lds
mov
adc
pusha
aas
push
shrb
mov
fisttpl
lahf
jne
mov
sbb
cmp
hlt
into
push
xor
cwtl
jecxz
xchg
cmp
movsb
or
fcomp
dec
mov
adc
mov
scas
mov
repz
out
aad
fimuls
out
sbb
mov
mov
lcall
mov
or
ss
inc
adc
push
cmp
fxch
cld
cmpsb
jns
xlat
nop
sbb
xchg
adc
adc
incl
nop
jp
inc
loopne
clc
in
dec
insl
and
cmp
mov
inc
dec
js
and
and
int
mov
cmp
add
inc
xchg
mov
pcmpgtb
ror
roll
test
xlat
out
je
lea
mov
imul
pop
mov
test
testl
or
adc
and
mov
dec
pushf
mov
repz
pop
movsl
inc
testl
loope
xchg
add
jmp
xchg
loopne
xor
pop
mov
xchg
mov
jmp
push
mov
or
and
jecxz
adc
insb
jge
cmp
lcall
subb
in
aad
inc
push
add
fnstenv
cmp
imul
ret
lea
dec
cmp
cmp
mov
mov
outsl
inc
pop
fs
push
stc
cs
mov
jge
outsb
cld
mov
mov
mov
ds
add
mul
xor
or
xchg
xor
and
xchg
add
sbb
lods
dec
pusha
sbb
shll
cmp
jmp
xor
outsl
cltd
mov
mov
sub
cs
sub
xor
aad
shrl
mov
dec
sbbb
push
leave
data16
test
mov
cs
pop
sarb
lock
pushf
mov
jl
or
ret
in
aaa
rcrb
imul
sub
test
dec
pop
out
push
ds
dec
loopne
mov
movsl
loope
xchg
inc
cmp
jnp
cli
outsb
lods
les
popf
fldt
bound
push
xor
jmp
xor
sbb
adc
pusha
push
jmp
or
cmc
cltd
out
mov
or
jb
push
jg
fsubl
loope
test
test
cli
cmp
push
inc
fstpt
push
notb
arpl
cmpsl
lahf
rcl
insb
aam
adc
jno
fadd
sarb
ljmp
pushf
or
addr16
test
mov
mov
sbb
sub
cmp
mov
sbb
mov
aaa
sub
jle
sub
xchg
pop
lahf
shrl
into
fldenv
test
repnz
lds
xor
add
mov
jbe
pop
loopne
cld
sub
icebp
dec
push
leave
rep
or
xchg
adc
inc
js
jb
dec
pop
cmc
insl
std
movb
popa
lret
ret
adc
repnz
fucom
mov
add
inc
int
in
cli
or
pop
sub
ret
xlat
xor
das
jecxz
push
popa
std
test
dec
push
dec
insb
lcall
dec
loop
and
or
test
mov
call
imul
out
insb
xor
fisttpll
repnz
mov
scas
xchg
aad
andl
mov
or
cmp
cmp
repnz
js
call
mov
add
push
cmp
lahf
dec
es
jno
das
fiadds
int
imul
out
cmp
daa
dec
pop
dec
and
sti
arpl
fwait
mov
loope
cs
icebp
scas
sbb
inc
fs
lahf
jb
subb
dec
adc
jmp
fdivl
cltd
mov
in
add
ljmp
sub
fs
push
or
push
lods
daa
fldlg2
jns
mov
jo
mov
jae
ret
jge
das
mov
mov
pop
scas
and
xor
push
dec
inc
sbb
scas
inc
mov
je
xchg
popf
push
dec
repz
fisttps
into
ffree
pop
push
je
dec
cs
push
aaa
xor
outsl
in
addb
or
sti
pop
ret
push
pop
xchg
in
inc
adc
fwait
adcl
add
ss
and
cmp
or
xchg
sbb
pusha
add
xor
xchg
inc
mov
sub
lret
mov
fists
adcb
cmp
das
shr
jb
push
dec
jns
and
push
mov
loop
in
push
aaa
mov
jae
xor
adc
ja
and
in
rorb
xor
dec
and
sub
cld
mov
lret
mov
lret
repnz
cmp
ds
push
arpl
das
dec
cmpsb
adc
dec
xchg
mov
jbe
dec
sbb
xchg
sar
ds
push
jbe
sti
in
mov
xchg
and
loope
add
lods
jl
lahf
xchg
dec
add
cmp
pop
sar
xchg
shrl
mov
test
pop
xchg
hlt
dec
push
mov
cmp
jge
add
sti
xchg
andb
mov
adc
and
or
gs
pop
test
out
or
clc
cwtl
fwait
in
and
sub
adc
mov
cmpsb
adc
pop
fs
je
jns
ds
or
insl
nop
xor
mov
push
lock
aam
inc
fnstcw
movsl
mov
xchg
mov
outsb
and
mov
dec
nop
inc
jg
addr16
cltd
test
push
pop
bound
sub
add
xor
jo
outsb
jae
sbb
add
frstor
jno
dec
jp
out
or
pop
int3
pop
mov
ret
clc
inc
mov
lock
stos
into
dec
out
mov
repnz
inc
pop
push
adc
lahf
sub
mov
add
faddl
sti
fidivrl
es
mov
clc
aaa
data16
or
imul
mov
sarl
push
pop
js
lock
push
adc
fsubs
sub
xchg
adc
mov
stos
add
dec
dec
imul
sbb
ret
xchg
inc
rol
mov
jnp
imul
inc
mov
inc
sub
dec
xchg
mov
sub
push
sbb
cmp
fcoms
jae
jb
test
xchg
mov
mov
mov
adc
add
lods
cld
mov
out
cld
fistl
xor
inc
stos
xor
pop
mov
popa
and
cmp
imul
ret
cmp
stos
imul
jl
pop
outsl
dec
lea
in
rorb
rcll
add
lds
adc
cmpsb
inc
imul
clc
jo
cwtl
jbe
out
cmpsb
push
dec
sub
pop
in
int
add
and
xchg
scas
ds
pop
lods
jbe
mov
icebp
jno
cltd
and
cmp
xchg
ret
roll
icebp
lcall
int3
add
jae
xlat
pusha
lret
pop
ljmp
sub
or
dec
push
test
xchg
mov
adc
dec
mov
bound
add
and
and
lods
pop
repz
mov
jne
gs
mov
xchg
add
mov
iret
mov
iret
cmpb
xor
mov
lea
pop
adc
mov
adc
xchg
sub
pop
pop
or
jnp
mov
pop
and
inc
add
dec
iret
les
fxch
push
fidivl
outsl
adc
push
fcom
aas
xchg
push
mov
mov
les
xor
sbb
out
pop
loop
in
pop
cmpsb
outsb
sub
pop
cltd
stos
mov
mov
add
daa
popf
mov
and
mov
stc
ja
fwait
in
add
ja
lcall
inc
mov
mov
loop
jge
dec
in
into
push
jmp
jb
push
pusha
nop
clc
int
jbe
fwait
mov
int
pusha
push
push
jmp
into
das
mov
in
sbb
call
jbe
inc
push
xor
and
in
mov
lcall
adc
adc
cld
jle
repz
push
cmp
sbb
dec
mov
int
xchg
in
sub
pop
or
add
lcall
sbb
push
adc
shrl
jb
lds
cld
push
subl
mov
jne
mov
outsb
pop
dec
add
push
jg
add
pop
cmp
push
sbb
mov
xchg
cld
adc
ljmp
aad
int3
scas
sbbl
xor
xor
cmp
jo
sbb
inc
jge
pcmpeqw
in
xor
pop
sub
loope
xlat
shll
lds
test
and
out
pop
cmp
das
in
jmp
xor
jmp
mov
les
mov
insl
icebp
mov
je
cmc
cld
jp
or
test
mov
xchg
fsubr
negb
push
shrb
mov
fnstenv
cmpl
push
or
cmpsl
cmp
rorb
icebp
xchg
clc
cmpsl
sbb
adc
mov
pop
adc
leave
aas
divl
push
sub
lcall
rolb
bound
lods
mov
dec
xchg
push
incb
add
push
out
inc
pop
les
dec
les
test
loope
mov
jmp
cmp
or
and
lcall
cmp
pusha
aas
mov
jns
ss
outsb
mov
mov
mov
cs
test
popa
sbb
mov
fildl
mov
call
add
sbb
dec
test
pushf
jg
xchg
popf
in
sub
aad
adc
cwtl
jg
mov
lods
or
jno
inc
lahf
push
bnd
mov
les
or
and
insb
hlt
out
jno
cmp
pop
or
in
sub
adc
cmp
add
insl
or
lret
push
cmpsl
ljmp
inc
adc
movsb
xor
daa
add
sbb
pop
jp
mov
clc
rcrb
nop
ss
je
pusha
arpl
out
scas
ss
clc
call
xorl
call
scas
imul
mov
ds
scas
popa
add
pop
addr16
out
jae
notb
in
sub
insl
stos
repz
inc
mov
jecxz
ret
push
xor
mov
icebp
lds
mov
inc
bound
push
xor
je
inc
push
rcll
repnz
push
ret
and
mov
adc
popf
imul
xor
dec
sti
cmp
inc
repnz
stos
movsl
out
les
xchg
insb
lock
or
dec
cltd
sbb
insb
jge
push
movntq
out
and
add
js
insb
xor
arpl
xlat
test
filds
adc
mov
lcall
lahf
cmc
mov
pop
mov
into
loop
jbe
repnz
fldt
adc
nop
xchg
enter
pop
push
mov
bound
mov
aad
fdivrl
dec
lret
mov
and
jns
add
pop
ret
inc
imul
sbb
jle
cmpsb
frstor
stos
cmp
nop
push
and
mov
andl
mov
repnz
xchg
mov
push
push
repnz
test
and
hlt
lods
in
ss
jmp
popf
cli
lret
sarl
adc
inc
sbb
cwtl
add
call
xchg
fwait
mov
pushf
idivl
pushw
ljmp
jle
cmp
fsubr
imul
pop
dec
sub
push
out
cli
cmp
es
jbe
jb
mov
add
fs
cmp
in
push
cli
xchg
arpl
orb
jl
push
out
dec
jbe
xlat
jmp
mov
ficoms
leave
test
mov
imul
dec
mov
jae
mov
gs
fwait
loopne
rcll
jl
jl
or
cmp
cld
mov
dec
mov
sub
xchg
sbb
jo
dec
dec
jb
fcoml
inc
mov
gs
mov
add
fimuls
hlt
movsb
mov
dec
out
andl
imull
sar
inc
das
jns
pop
hlt
add
cwtl
sbb
loop
mov
ficomps
popa
xchg
mov
inc
adc
dec
int
ja
cmp
push
add
cmpsl
mov
pop
addl
hlt
pop
dec
pop
dec
je
je
or
add
pop
das
add
dec
pop
dec
std
xchg
call
call
call
loopne
dec
sub
loopnew
scas
stos
jle
rorl
out
adc
inc
mov
loopne
push
adc
or
inc
ja
dec
pop
push
jno
push
data16
addr16
xor
repz
sahf
rcll
fidivrs
jl
les
std
jb
and
and
std
movsl
sub
icebp
or
add
jnp
push
or
into
rorl
jb
mov
jbe
pop
jecxz
hlt
test
stc
lock
xorl
mov
in
fdivrs
cmpsb
mov
test
pop
dec
into
ret
jae
ret
cmpsb
mov
inc
add
fdivrl
cmc
aad
cmp
push
mov
imulb
out
or
fwait
sub
cltd
pop
loopne
adc
dec
adcl
fisubl
test
jns
setns
push
ret
mov
jne
add
and
mov
cmp
addr16
inc
inc
jb
jnp
scas
pushf
inc
cmpsl
dec
gs
rolb
daa
std
mov
jge
in
and
nop
rcrb
and
repnz
sub
movsl
xor
xchg
pop
negb
cmpsl
push
jno
icebp
add
or
shlb
fsubrs
sbb
mov
out
pop
rorl
and
jns
mov
imul
jo,pn
inc
jo
das
jno
movsl
bound
mov
and
je
mov
jo
sbb
mov
push
sbb
jmp
cs
jbe
mov
push
icebp
dec
dec
cmc
mov
jmp
stos
clc
sbb
inc
fsubrl
inc
leave
ljmp
scas
and
mov
sti
pop
push
sub
sub
jae
sti
or
decb
jp
inc
in
clc
adc
sbb
ja
xor
ficoms
jnp
push
loop
xor
mov
xchg
shl
pop
addb
cmp
jo
pop
or
mov
les
mov
repz
mov
sti
xchg
adc
sbb
push
mov
and
pop
call
add
inc
cmp
push
xchg
mov
mov
mov
dec
dec
aaa
lds
xor
icebp
std
stos
enter
push
test
inc
mov
sub
push
addb
sbb
cmp
pop
push
push
stc
mov
or
mov
cmpsl
dec
in
mov
xchg
sub
sub
lods
repnz
dec
cltd
pushf
push
in
mov
xchg
xchg
mov
mov
or
scas
loope
mov
std
movsb
cs
stc
xor
sbb
ds
adc
in
pop
es
js
imul
or
pop
mov
mov
jo
clc
xor
cmc
cmpb
and
ficoml
pop
in
sub
scas
out
test
jmp
mov
outsb
and
inc
dec
jo
cmp
push
sub
push
push
dec
cmp
mov
scas
xlat
in
aaa
std
aam
or
call
or
mov
mov
cld
and
push
bound
lea
dec
test
les
sub
out
xlat
or
sbbl
pop
call
xchg
push
popa
mov
test
imul
insl
out
pop
les
jnp
dec
mov
outsl
cmp
fmull
imul
lods
add
push
sbb
inc
cmpsl
imul
fs
xor
iret
cmpsb
adc
pop
xchg
xchg
pop
ss
ss
sub
pusha
dec
dec
xor
cmp
and
mov
test
dec
sti
mov
lret
hlt
push
jl
xchg
add
int
das
stc
popa
js
add
xchg
repnz
movsl
out
mov
pushf
aam
jle
cmpsb
xchg
xlat
mov
add
sub
xchg
inc
mov
addl
and
ss
loop
rcrl
or
rol
pop
mov
jnp
or
inc
push
pop
ds
sarb
ret
inc
test
sbb
xchg
loopne
int
mov
vandnpd
outsl
lret
leave
scas
pushf
push
out
jmp
xor
mov
fwait
inc
mov
jp
push
and
repnz
jmp
cmp
adc
test
or
dec
orb
push
pop
shll
jno
movsb
addl
fwait
add
jne
test
leave
jmp
or
bound
and
bound
ja
inc
mov
pop
pop
jmp
push
and
or
adc
mov
adc
push
mov
sbb
mov
nop
mov
out
repnz
or
adc
sub
or
sub
flds
jo
add
cmp
inc
pop
mov
int3
stos
aas
push
not
cs
mov
subl
pop
or
ret
cld
lea
and
sub
cmp
mov
or
ret
pop
xor
cmpsl
cmp
das
mov
cli
les
pop
xor
cmp
inc
jb
outsl
ret
fisubs
movsb
push
xchg
xor
push
add
mov
push
cmc
jg
in
pop
clc
mov
jge
xchg
lea
inc
cmpb
outsl
cwtl
out
idiv
shl
jo
mov
mov
inc
js
pop
out
push
rcrl
stc
sbb
nop
lret
pop
clc
mov
jnp
repnz
cmp
fs
add
popf
in
add
pop
ds
push
jge
push
inc
jns
sbb
rolb
and
sub
dec
adc
fcmovnb
int3
inc
stos
imul
ja
cmpsl
jl
add
push
sarl
fs
or
inc
add
mov
lods
int3
je
push
shrb
imulb
dec
scas
xchg
fwait
inc
cld
sahf
fcom
repnz
jbe
ds
cltd
fwait
mov
xchg
sti
mov
loope
mov
cmc
xorl
or
sbb
and
aaa
mov
test
ljmp
xor
inc
mov
push
mov
sbb
out
jbe
cmpsb
xchg
xchg
adc
into
xor
sub
mov
inc
mov
and
inc
xor
in
stos
add
dec
inc
fsts
out
mov
mov
mov
or
lret
insb
xchg
daa
lods
call
int3
inc
mov
push
stc
xchg
ret
inc
pusha
mov
out
mov
push
xchg
xor
inc
adcl
repnz
test
ror
push
int3
test
clc
pop
jb
clc
cmpsl
repz
popa
or
jns
ss
fisttps
mov
push
jecxz
adc
stc
inc
push
pop
fildl
bound
leave
fnstenv
fnstenv
mov
rol
mov
sbb
lods
mov
cli
mov
jae
jae
mov
fstpt
adc
or
loope
cmpsb
xchg
pop
push
es
adc
xchg
ja
fadds
sbb
pop
sub
in
sarl
pop
pop
lea
cmpsb
sbb
dec
out
dec
xor
and
aas
cli
insl
fstpt
repnz
aas
sub
mov
push
or
arpl
inc
jecxz
iret
or
xchg
je
mov
pusha
mov
call
rcr
pop
xor
repz
pop
test
pop
mov
adc
xchg
mov
push
in
push
test
cmpsl
cmpl
dec
in
xchg
adc
or
xor
fimuls
cwtl
cmp
jb
inc
inc
push
ds
push
stc
dec
bound
pop
and
dec
ja
jo
and
add
into
pop
ret
pushl
sahf
mov
rol
lcall
in
fsubrl
pop
lds
sub
sub
push
pop
jno
mov
bound
imul
mov
add
push
aam
sub
jnp
mov
pop
jmp
nop
push
xlat
or
jle
add
ret
sub
mov
cmp
cmp
adc
pushf
xchg
xchg
xor
xor
jae
cmp
outsl
jnp
imul
push
cmp
xchg
dec
xchg
ss
dec
shll
test
hlt
or
in
and
div
aad
or
jno
xor
fs
xchg
repnz
and
xor
pop
es
aad
jmp
dec
mov
fsubl
push
xchg
xchg
ss
mov
or
jb
hlt
mov
ror
cld
sarb
xor
push
loope
jmp
sub
ja
lret
sub
dec
fs
cwtl
int3
test
jp
enter
arpl
mov
and
movsb
stos
xchg
loop
cld
adc
jne
cmp
pusha
pushl
shll
jo
mov
mov
mov
inc
lcall
inc
mov
mov
add
dec
out
push
daa
scas
mov
hlt
xchg
movsl
jp
inc
mov
mov
jb
pop
das
push
push
jecxz
push
jbe
mov
out
aas
iret
push
imul
sub
pop
stos
shld
xor
arpl
fstl
lret
add
in
mov
cmp
lds
dec
sbb
out
sub
notl
mov
sbb
stc
add
push
fs
sub
ds
pop
and
in
and
divb
dec
mov
ds
outsl
sbb
sbb
push
aad
arpl
push
adc
aas
repz
sub
outsl
cld
inc
fstpl
aaa
mov
imul
fucom
in
xor
out
sub
xchg
mov
fisttpl
mov
dec
icebp
sbb
int3
mov
rcrb
mov
lods
push
push
pop
or
push
dec
or
pusha
push
test
xchg
shll
pop
cmp
xor
cld
fisubs
add
jb
movsb
cld
pop
jecxz
fstpt
pop
out
add
jp
repz
jae
push
lahf
jecxz
fbld
andb
inc
repnz
push
in
movq
sbb
int
sub
mov
push
mov
outsl
or
add
mov
push
push
and
or
jns
hlt
cmp
add
mov
fnsave
mov
stos
arpl
mov
mov
cmp
push
mov
xchg
sti
or
xor
test
xchg
shrb
test
cmp
int
inc
jle
loopne
sbb
push
pop
insb
and
imul
int3
pop
std
insw
cmc
daa
xorb
inc
jle
add
push
outsl
and
dec
and
fs
jo
add
fstl
inc
sub
js
jecxz
arpl
jg
loopne
call
fstpl
and
sti
mov
mov
sub
mov
and
in
cs
test
mov
jo
popa
and
jp
notl
mov
or
mov
sub
cltd
and
les
and
inc
int
pop
and
adc
scas
cmp
inc
test
loope
les
aam
das
jnp
pop
push
mov
xor
xchg
sub
scas
push
mov
mov
dec
jp
or
outsl
das
xlat
xchg
adc
ss
cmp
add
push
mov
lcall
js
add
std
jbe
imul
cmc
jl
frstor
test
inc
push
test
cmp
pop
push
mov
jns
movsb
out
push
ljmp
stos
mov
lods
sub
mov
mov
or
adc
adc
fldt
sbb
inc
lcall
lret
fistpl
mov
out
loope
insl
fstps
jge
xchg
int3
dec
out
xchg
adc
xor
pop
enter
loope
adc
pop
pop
movsl
dec
inc
icebp
in
decl
repz
mov
adc
cmp
in
push
adc
and
movsl
fimuls
imul
adc
cmp
aam
adcb
scas
pop
inc
sahf
insb
push
jne
jg
les
ud0
xchg
out
push
js
aaa
push
cmp
cmc
and
mov
imul
or
in
jle
movsl
sub
adc
fs
leave
pop
aaa
stc
mov
adc
jp
outsl
pop
pop
mov
sbb
cwtl
movsl
adc
xchg
and
sti
ja
mov
fldt
sbb
inc
test
add
xchg
jns
xchg
not
jb
adc
jne
sbb
or
inc
sbb
test
ss
adc
sub
repnz
mov
inc
and
mov
mov
testl
cmp
adc
shlb
sub
or
mov
roll
aas
or
push
fs
bound
pop
xchg
push
sbb
fs
ljmp
mov
xchg
jae
int3
js
mov
outsl
xchg
jle
fwait
int3
add
lea
pop
mov
pop
inc
movsb
lahf
sahf
sbb
aaa
cwtl
cmpl
adc
clc
adc
fcoml
and
ret
fs
fwait
inc
cmpl
dec
ret
pop
mov
mov
push
add
cmp
sub
imul
gs
je
cld
or
jno
out
insb
rolb
outsl
or
sub
fmuls
sbb
xor
pusha
ficoml
in
pop
fcoml
fcompl
xchg
and
cmpsb
popa
xchg
jns
jnp
or
dec
test
xor
pop
jno
cmp
int
mov
xchg
add
mov
and
mov
cs
dec
cmp
jno
sbb
inc
stc
push
xchg
insb
mov
les
data16
jle
addl
mov
mov
sahf
jnp
outsl
push
popa
insl
ljmp
push
sbb
or
cmp
aam
cwtl
in
sbb
shufps
mov
sub
xor
add
xchg
xor
cmc
scas
push
mov
inc
cli
cmp
dec
xchg
and
xchg
and
ja
mov
out
adc
xchg
pushf
mov
xor
jne
xchg
sbb
mov
data16
mov
sahf
push
cmp
loop
adc
dec
xchg
ljmp
clc
pop
pop
and
es
out
loop
xchg
mov
xchg
mov
int3
loope
jbe
push
out
or
cmc
in
inc
add
out
add
mov
lcall
mov
mov
adc
aam
fs
pop
sub
mov
dec
xor
std
pushl
xchg
test
in
std
inc
dec
sti
lret
repnz
popa
out
cmc
sbb
or
ds
add
insb
aam
ja
fdivr
or
loopne
in
loop
sbb
clc
fdivr
out
xchg
jecxz
call
push
repz
push
or
sbb
loope
lcall
into
cmp
lods
xchg
dec
sub
es
xchg
dec
cmp
loopne
mov
push
stc
repz
cld
iret
pop
stc
inc
daa
fcmovne
sarb
dec
std
and
mov
movb
sub
fcompl
or
push
push
add
adc
call
inc
adc
into
negb
fistpl
fmuls
push
and
mov
mov
xor
jno
dec
cmp
std
mov
mov
cmp
cld
push
and
fs
je
lahf
daa
test
xor
stos
mov
inc
rcll
ret
cmp
fcmovne
push
out
push
jmp
es
aad
push
lods
inc
push
out
or
test
dec
jbe
mov
out
sbb
ljmp
mov
sbb
dec
bound
test
hlt
sbb
loop
lahf
mov
or
neg
dec
push
inc
pop
xchg
and
into
dec
in
jne
cli
and
add
insb
add
push
jns
xchg
mov
push
pop
out
sub
andl
cmp
dec
sbbl
mov
jns
mov
aas
andb
adc
sub
les
fdivrl
in
in
push
lahf
insl
into
and
inc
ljmp
ret
jge
in
pop
nop
pop
push
outsl
adc
sub
push
push
inc
clc
mov
leave
cmp
pop
inc
sub
and
movsl
sub
cmp
mov
sbb
outsl
inc
div
push
ret
sub
mov
and
sub
pop
push
testb
out
test
push
inc
cmpsb
xchg
dec
pop
adc
outsb
fmull
insb
imul
mov
mov
insl
mov
sbb
aam
push
xchg
in
jg
mov
clc
fisubrs
sbbb
pop
push
add
xchg
push
dec
stos
mov
and
mov
xchg
sub
jno
stos
iret
div
push
mov
push
inc
fs
or
push
pop
push
fstpt
lret
es
cmpsb
push
jg
mov
nop
inc
xlat
test
out
cltd
or
test
xlat
popa
sub
or
pusha
or
int3
mov
addr16
sbb
xor
adc
xlat
out
scas
push
rcll
lea
stos
stc
jo
push
pop
adc
clc
ud2
lods
shl
pusha
inc
notb
mov
and
mov
fnstcw
ljmp
sbb
ljmp
loop
fistpll
test
scas
cmp
sub
mov
inc
jno
bound
xor
xchg
sub
push
mov
js
ljmp
insl
jno
je
sub
adc
enter
xor
lea
in
mov
sbb
sti
test
mov
add
jo
pop
lahf
inc
mov
push
xchg
lods
daa
sti
jmp
jno
fisubrl
xchg
mov
cmp
xchg
out
sbb
xchg
adc
ds
mov
movsb
push
arpl
adc
ljmp
nop
xchg
and
mulb
or
xor
pop
pop
xor
xchg
imul
dec
jp
dec
subl
jno
test
mov
cmp
hlt
pop
inc
ljmp
xor
or
stos
out
add
jecxz
sbb
in
rolb
cmp
int
push
pop
mov
xchg
xchg
push
inc
insl
shlb
daa
leave
clc
mov
ljmp
js
shlb
fistps
mov
mov
or
or
outsb
dec
adc
pop
orb
mov
push
or
insl
fwait
ja
jne
dec
fisttpll
or
clc
ss
sbb
adc
mov
inc
xlat
nop
clc
outsb
cs
insb
cli
rcrl
jl
cmp
jbe
aad
mov
xor
mov
js
js
push
pop
xchg
and
popf
imul
sarl
jo
mov
lret
push
loope
outsb
or
mov
out
jne
sbb
push
imul
jno
insb
loope
sti
inc
inc
fstpl
ja
mov
mov
scas
inc
out
daa
mov
call
cwtl
adc
mov
pushf
xor
xchg
daa
xor
dec
jl
imul
sbb
out
cmc
push
fstps
sub
jmp
jle
andb
mov
ljmp
jbe
push
jg
fistl
sbb
sarl
in
clc
ja
mov
data16
aas
and
push
lret
pushf
pop
mov
pop
and
fs
les
xor
imul
add
inc
adc
setge
xchg
imul
fbld
addb
mov
sahf
sub
xlat
std
je
cmpsl
or
jle
mov
insb
mov
inc
dec
fistpll
ss
cmp
mov
fbstp
xor
push
jg
xor
push
movsl
bound
aas
cmp
pop
test
lahf
and
mov
cmc
and
or
test
jge
mov
and
mov
cmc
and
mov
popa
dec
bound
aad
rorl
adc
sqrtps
push
sbb
mov
daa
adc
movsb
call
push
sub
bnd
pusha
stos
jo
repnz
pop
or
mov
fiaddl
mov
pop
in
mov
icebp
sbb
outsb
std
jno
hlt
dec
mov
sub
cli
jnp
lret
movsb
xor
int3
jge
mov
mov
pop
or
fiaddl
cltd
dec
movsb
js
adc
add
or
mov
aaa
add
push
cmp
dec
int
xchg
xor
sbb
out
push
sub
sbb
jne
shrl
and
pop
adc
inc
sbb
inc
inc
mov
dec
or
inc
outsb
jmp
mov
cmpsb
scas
add
repnz
lods
rcr
je
cmp
ljmp
imul
popf
movsl
lcall
sub
js
fsub
push
out
pop
icebp
sub
xchg
roll
inc
andps
pop
mov
cwtl
sarb
out
mov
inc
jmp
push
in
dec
fdivrs
jb
add
fstpl
pop
push
aam
sbb
mov
in
lds
jbe
push
icebp
and
sbb
mov
push
rcl
mov
pop
sahf
ret
pop
pop
test
cmc
scas
cmc
enter
lcall
inc
add
mov
aad
jae
mov
push
mov
hlt
and
ljmp
lahf
dec
mov
das
lahf
int3
xor
xor
cld
mov
xchg
jb
jne
dec
jge
xchg
sarl
cmp
stos
in
addr16
jnp
in
daa
add
dec
xchg
leave
xchg
das
mulb
sub
incb
lret
sbb
dec
cmp
mov
scas
pop
mov
mov
test
aam
xchg
cmp
cmp
sti
sub
test
faddp
insb
lods
cmp
stc
insl
fcom
or
xchg
xchg
add
mov
sub
loope
dec
mov
rorb
dec
fdivl
xor
mov
js
int
ss
xor
mov
sub
push
icebp
push
popf
popf
in
mov
je
push
insb
roll
pop
sub
scas
cmc
push
das
pop
rolb
mov
inc
cmp
test
std
fsubs
jnp
int3
sbb
das
scas
pop
repz
xchg
fldcw
je
pop
push
int
in
imul
lods
add
loop
int3
ret
and
iret
fwait
jne
xchg
sti
xchg
fmull
fnsave
push
push
aam
pop
lods
stc
mov
les
ds
in
jae
dec
je
shll
add
test
mov
fcos
sub
lock
mov
inc
add
mov
mov
shl
add
loop
sbb
pop
xchg
in
sbbb
int3
xchg
out
inc
dec
mov
jns
xor
sbb
push
cmp
xchg
mov
out
mov
es
cmp
sbb
or
xor
dec
fnstcw
sub
outsl
dec
repnz
dec
faddl
fimull
xchg
pusha
std
and
mov
movsl
lret
call
test
inc
add
lods
imul
sti
add
cmc
cmp
cld
push
sbb
fbld
mov
add
jo
sahf
aaa
sbbl
fistpl
ret
dec
out
fisubs
test
mov
adc
pop
lahf
fwait
cltd
mov
jbe
mov
push
stos
flds
sbb
aad
mov
ret
sbb
or
notb
mov
mov
pop
or
dec
les
xor
inc
ljmp
sub
and
jbe
sub
daa
sbb
cwtl
mov
movsb
and
xchg
hlt
and
jl
push
sbb
sbbb
aad
or
in
jl
scas
mov
or
push
add
hlt
mov
repz
dec
mov
dec
lock
push
add
pop
push
cmc
push
dec
push
cmp
dec
mov
loopne
jns
outsl
mov
js
pop
xchg
lds
lock
mov
roll
push
out
adc
adc
pop
movsl
pop
ss
cmp
mov
mov
fdivr
ljmp
sub
aaa
lds
and
lods
outsb
adc
shlb
dec
xchg
roll
pop
jg
jno
cld
addr16
mov
jbe
sub
sub
into
call
ds
push
or
dec
cmp
pop
inc
stos
xchg
inc
lret
xor
sub
add
movsb
xchg
rolb
in
int
in
shll
or
aam
sub
dec
rcrb
xor
inc
jge
insl
icebp
jo
std
shrb
cmpsl
jl
fcmovnbe
push
mov
in
inc
leave
arpl
stc
pop
test
pop
ljmp
sub
in
mov
pop
pop
int
testl
add
rcrl
jns
sarb
sbb
hlt
xchg
adc
mov
aam
ljmp
push
adc
jl
or
jns
mov
movsl
test
test
ss
xchg
pop
sti
mov
jg
jmp
push
pop
test
outsl
insl
cli
popf
mov
outsl
divl
xorl
cld
mov
dec
repz
add
sbb
xor
insl
fs
cmc
inc
incb
add
pop
aaa
mov
sub
das
int3
jge
jno
or
pop
mov
mov
xchg
shlb
test
int
movsl
xchg
andl
cmp
mov
mov
add
jge
test
das
shll
aam
pop
arpl
push
test
dec
pop
sbb
adc
sahf
mov
inc
jmp
dec
push
loope
out
cld
pop
sti
mov
or
mov
xor
lea
fs
mov
inc
and
cmpsb
lods
scas
pop
adc
cmc
lock
xchg
outsl
add
xchg
cmp
dec
inc
dec
jg
std
adc
jge
or
adc
jne
cmp
and
pusha
mov
pop
inc
or
dec
pop
adc
vcvttps2dq
sarl
add
or
push
sbb
mov
sbbl
ljmp
mov
adc
xchg
call
cmpsl
cmp
pushf
dec
xchg
test
xchg
mov
push
mov
andb
push
xchg
mov
push
xor
and
out
and
fnsave
inc
jecxz
rcll
sub
adc
jno
pop
fistpl
sbb
ret
dec
ret
loopne
sbb
pop
mov
xlat
xor
jg
call
inc
sbb
cmp
cltd
ficoml
mov
ds
fstpl
int
lods
push
out
scas
aam
cli
or
clc
fs
jmp
adc
ja
mov
lahf
pop
cmpsb
scas
push
ret
movhps
or
push
pusha
cmc
xchg
dec
dec
inc
and
mov
in
outsl
lock
repz
fs
outsb
mov
add
ret
cmpl
add
add
aaa
aad
in
ficoms
pop
lret
sbb
and
repz
dec
rclb
mov
mov
mov
mov
jmp
add
jl
pop
jno
xor
cmp
pop
pop
fsts
or
int3
mov
cmp
cmpsb
mov
adc
leave
cmpsb
in
xor
dec
pop
int3
mov
xor
aaa
inc
call
sub
ret
sub
and
dec
adc
adc
call
xchg
shll
dec
js
xchg
push
sbb
mov
xchg
pop
and
add
aam
or
and
push
lret
adc
lea
pop
dec
mov
stos
mov
test
jo
dec
and
lret
mov
xor
lds
aas
aam
mov
lret
push
leave
mov
hlt
mov
push
fisttpll
ds
out
movsl
lea
movsb
cmpsb
loopne
icebp
push
mov
lods
fdivr
jp
repnz
cmpsl
sub
fldcw
push
aaa
push
stos
jge
xor
inc
pop
xor
jno
fidivl
into
hlt
and
mov
jae
lea
dec
adcl
inc
insl
dec
inc
sbb
pop
movsl
aas
jno
in
outsb
push
and
lret
pop
stc
add
pop
icebp
loopne
repz
mov
inc
sub
mov
imul
fs
push
ds
loope
pusha
movsb
lock
xchg
pusha
arpl
outsb
mov
mov
xor
jle
idivl
hlt
and
int3
jecxz
shrl
xor
mov
idiv
loop
or
repnz
push
or
mov
jno
and
pop
jge
or
cmp
leave
push
cmp
cmp
mov
add
sar
rorb
shrl
aaa
xchg
jg
or
addr16
jge
push
aaa
cltd
jno
mov
jg
dec
pop
jb
sub
cld
push
lea
shl
xchg
sbb
lahf
adc
enter
push
fadds
fstp
dec
insb
mov
mov
and
sarl
lcall
jo
dec
lds
scas
cwtl
nop
lahf
lds
int3
xlat
adc
jp
xchg
decb
cmc
cltd
cmp
push
mov
inc
and
xchg
stos
mov
or
xchg
scas
cmp
adc
outsb
ljmp
sahf
data16
pusha
sub
addb
lahf
pop
xchg
pop
and
insb
inc
xchg
ret
sahf
ret
pop
out
dec
cmp
xchg
call
xchg
dec
cmp
test
xchg
sbb
or
or
and
cltd
add
push
mov
dec
xor
int3
cmp
ljmp
pop
inc
or
outsb
mov
out
and
aam
fsubrl
cmpsb
jmp
mov
cmc
dec
jne
outsb
mov
pop
jb
inc
mov
dec
inc
aam
test
sbb
sbb
push
xlat
sub
and
mov
pop
add
jae
movsb
xor
jns
ljmp
in
scas
mov
outsb
push
sbb
adc
scas
and
xor
xchg
call
cmp
iret
hlt
out
fsubrp
adcl
jnp
mov
mov
mov
inc
inc
or
scas
popa
flds
repz
insb
or
jmp
xor
fistl
mov
xor
dec
sub
add
movsb
push
mov
xor
sub
adc
jo
push
call
add
dec
in
inc
cs
pushf
mov
pusha
mov
cmc
jno
imul
xchg
lret
jnp
aaa
dec
fmull
ret
dec
push
adc
mov
fs
push
popl
sub
and
or
mov
sub
push
xor
cmp
divps
lods
jns
mov
inc
lea
div
sub
loope
pop
in
out
stos
cmp
cli
negl
int3
cmp
push
xor
fisttps
jge
daa
dec
jb
fstpl
fwait
js
xchg
push
mov
sub
movups
call
outsb
and
daa
inc
mulb
gs
shrb
idivb
push
incb
cltd
push
inc
pop
imul
pop
push
aaa
jne
mov
and
shll
je
stos
push
adc
jbe
push
bswap
lea
icebp
ficoms
sub
jl
xor
mov
in
mov
mov
sub
jnp
push
sbb
cld
push
dec
push
stos
and
sbb
push
dec
add
jbe
ret
cli
fistps
icebp
mov
mov
pop
rolb
inc
loop
addr16
fisubl
lock
scas
jl
and
addr16
ss
pmaxsw
xchg
ret
and
inc
popf
inc
xchg
jp
sbb
sti
inc
add
dec
rcr
fstl
dec
push
js
xchg
jbe
lahf
mov
pushw
or
imul
lea
pop
pop
lock
xor
inc
push
jb
or
or
call
mov
push
test
ja
ret
insl
jne
mov
iret
in
xor
add
lret
dec
daa
int
adc
out
inc
push
cwtl
push
push
outsl
xor
inc
sbb
icebp
jle
and
mov
es
in
xchg
mov
cmp
jg
scas
add
repnz
psubusb
add
inc
sarl
les
mov
cmpsl
push
mov
or
bound
stos
ja
sbb
inc
dec
xchg
jo
movsl
pop
movq
pop
jle
ret
pusha
or
mov
add
lods
mov
bound
lret
aam
inc
nop
push
inc
push
into
mov
pushf
inc
dec
cmp
gs
xchg
mov
ror
repnz
cld
pushf
cmp
and
mov
or
mov
imul
xchg
fdivp
jae
lcall
lock
xor
push
in
fidivrs
jmp
fpatan
shlb
sbb
cwtl
cmp
cli
int
neg
sub
popa
add
or
cmpsl
call
shrb
stos
jecxz
jle
ja
xor
call
call
shlb
fimull
das
add
daa
int
jbe
cld
push
insb
stos
jno
jb
call
dec
testb
xor
mov
sbb
cli
scas
adc
addr16
mov
iret
xchg
ss
scas
in
bound
loope
jnp
xor
fcmove
cmp
testb
cmc
jae
jge
or
into
sub
movsb
js
lds
es
movsb
xchg
flds
xchg
jb
outsl
ja
aam
test
fsubs
mov
xchg
lcall
cwtl
sbb
movsl
mov
fbld
fcmovne
push
movsl
push
push
hlt
addr16
and
push
mov
sbb
or
cmp
das
sahf
std
jg
xor
cmp
in
in
shl
int3
sbb
repz
loopne
test
or
int
xor
scas
inc
inc
cmp
dec
inc
scas
jns
data16
mov
jp
divl
adc
scas
mov
cmp
jne
or
movsl
xchg
pop
sbb
sub
clc
mov
push
mov
sbb
fildll
fisubl
lret
test
icebp
mov
fidivs
xchg
data16
sbb
inc
mov
xor
dec
sub
sbb
xchg
mov
std
push
jl
outsl
xor
shlb
mov
inc
xchg
xchg
in
ljmp
mov
test
leave
shll
imul
pop
cltd
daa
mov
test
jg
sub
or
je
insl
xchg
push
dec
add
sub
arpl
sbb
in
inc
insl
and
sub
hlt
adc
mov
xor
call
cltd
mov
xchg
pusha
cmp
arpl
insl
cwtl
stc
or
sub
ror
repz
fucomip
repz
addr16
nop
inc
int3
test
lock
xchg
sahf
lret
repz
ret
dec
and
ficoml
je
pop
xor
aam
nop
mov
cmp
fidivrs
or
out
xor
jb
das
xor
dec
dec
jns
fstps
mov
or
adc
or
std
testb
cmp
mov
mov
rcrl
add
int3
push
push
cmc
inc
fwait
popf
movsb
stos
xchg
stos
add
pop
repnz
mov
xor
cmpsl
les
sbb
mov
lret
or
cmpsl
push
jne
or
shrb
popa
sti
scas
fimull
inc
imul
aaa
cmp
clc
fcmove
arpl
sub
pop
xchg
addl
mov
jp
imul
pop
aaa
or
mov
mov
ds
mov
xchg
stc
add
mov
xchg
lret
or
cmp
ja
mov
inc
shll
dec
mov
push
outsb
cmp
shrb
push
loope
dec
pushf
dec
ret
pop
mov
test
pop
add
jae
mov
sub
mov
rcl
push
aas
in
in
insl
aas
mov
test
mov
push
cli
cmp
lea
cmpsl
mov
cs
lcall
push
pop
adc
xchg
cs
add
mov
ret
invd
sti
add
out
xor
jmp
push
mov
jg
jns
dec
mov
rcl
sarl
push
cmp
into
pop
xlat
sbb
imul
les
hlt
or
pop
xchg
mov
stc
mov
mov
push
sbb
sbb
mov
ljmp
push
mov
cmp
pop
cwtl
mov
pop
inc
in
imul
adc
mov
aaa
sbb
iret
imul
mov
mov
mov
stos
fwait
negl
dec
sub
jmp
and
and
xchg
mov
test
xor
dec
popa
aad
in
sbb
fcmovb
fcompl
xor
or
std
inc
jne
arpl
arpl
cwtl
cld
lcall
aad
stos
sub
flds
int3
and
jne
cs
cli
mov
lcall
dec
pusha
loop
cwtl
pop
sbbb
xchg
xchg
inc
push
add
cmp
inc
sbb
popf
xchg
test
sub
jp
xchg
jb
lret
pop
and
sarb
int
add
std
mov
fwait
dec
ja
pop
sbb
stos
dec
pop
jns
shrl
inc
leave
inc
sub
mov
addr16
ret
popa
in
cmp
pop
cli
je
cmp
dec
scas
imul
js
imul
or
sbb
or
into
int
sbb
leave
xchg
addr16
pop
insb
stos
outsl
sbb
test
into
xchg
popa
test
sbb
push
stc
loop
in
pop
mov
pop
ret
test
jge
or
lret
mov
stos
stc
xchg
loop
push
ret
test
push
mov
cld
adc
or
das
int
stos
mov
aaa
dec
nop
ret
mov
jmp
fisttpll
stc
push
popa
cld
mov
lods
jns
imul
mov
fwait
cmp
and
cli
jb
xor
bound
adc
fistpll
ret
jge
pop
mov
jp
sbb
loopne
imul
in
inc
cltd
in
sahf
pminsw
xchg
mov
pop
and
out
sbb
stos
cli
push
push
insl
push
in
push
jb
dec
xor
cmp
cmp
cmp
lods
fidivs
adcb
pop
lret
out
fidivl
mov
dec
inc
pop
xlat
mov
mov
imul
or
scas
sbb
and
iret
in
pushf
pusha
shll
pinsrw
jg
in
and
imul
int3
cltd
mov
sahf
mov
xor
mov
in
push
aas
popf
iret
fmuls
stc
adc
arpl
add
xchg
mov
sti
dec
mov
xor
pop
adc
repnz
adc
sbb
imul
out
not
push
push
cmpsl
push
mov
jecxz
push
sub
addr16
stc
sub
jne
aaa
lahf
inc
imul
xor
in
push
pop
jecxz
pushf
inc
jno
sbb
xlat
sub
or
int
call
lret
cmp
push
insb
repz
xor
iret
xchg
cmpsb
ret
push
mov
mov
cmpsb
pop
loope
daa
mov
or
dec
ds
test
ljmp
push
mov
int3
es
add
iret
into
shrb
in
cmc
jge
pop
xor
jns
clc
mov
xor
outsb
ja
sbb
sbb
insl
cmp
sbb
fwait
mov
and
jne
xlat
cmp
enter
xor
in
push
ret
notb
fistpll
sub
test
add
mov
fiadds
out
ret
lea
cmp
push
lds
addr16
rcl
push
dec
inc
dec
push
insb
and
loop
pop
sbb
dec
pop
pop
jo
into
push
out
scas
mov
and
adc
icebp
cmp
in
inc
mov
cmp
mov
inc
pop
in
dec
dec
xchg
sbb
mov
subb
add
je
adc
mov
int3
mov
out
jne
stos
dec
xchg
popf
popf
lea
xchg
es
mov
xor
andb
push
les
hlt
fs
add
cmp
movsl
pop
pushf
lret
std
scas
pop
sub
mov
test
xchg
push
outsb
rorb
push
adc
xchg
insl
sub
pop
setae
in
aam
lahf
or
dec
adc
cmp
cmp
sub
mov
xlat
scas
jb
shlb
andb
add
push
data16
mov
stos
call
sti
frstor
fprem1
cmp
test
adc
loopne
in
sbbb
mov
xor
xchg
loope
or
xor
mov
cld
jge
xor
enter
in
sbb
inc
out
jl
pop
aaa
push
xor
and
call
aaa
xor
cmp
rolb
ds
fs
sub
or
dec
call
cmp
ret
xchg
fadds
xor
push
jmp
inc
mov
sbb
mov
lods
xor
dec
xchg
push
inc
js
int
inc
sbb
sahf
cld
jg
mov
jl
movsb
fs
dec
adc
jmp
and
mov
sbb
stc
push
imul
andl
add
or
inc
mov
sub
repnz
jmp
push
andl
lea
pusha
mov
stos
xlat
ds
sbb
pextrw
mov
adc
cmpl
jns
pop
std
fbstp
or
cs
fstp
and
fdivrs
subl
xchg
add
in
les
lods
in
cli
rorl
push
loopne
sbb
inc
or
push
fisubs
jmp
add
jge
repz
cltd
hlt
push
adc
mov
pop
shll
stc
xor
adc
test
stos
arpl
pop
pop
test
cld
push
or
lret
jns
mov
jns
and
push
xchg
daa
fldenv
pop
sub
mov
sub
icebp
stos
dec
aas
cvttps2pi
inc
addr16
mov
lds
lds
adc
repnz
das
push
in
mov
test
xchg
mov
xchg
ds
arpl
rolb
inc
lods
out
shll
cmp
dec
fcompp
imull
in
jnp
mov
xchg
adc
insb
sub
push
xchg
jne
rorl
adc
xchg
popl
out
fwait
loop
cli
adc
push
xchg
ret
roll
mulb
adc
inc
cltd
push
clc
or
lods
and
call
fs
push
push
insb
pop
jecxz
mov
and
sbb
adc
xchg
push
add
insl
add
ljmp
mov
jge
cmp
je
int3
in
testb
int
ljmp
mov
not
push
shlb
xchg
mov
pop
add
jne
pop
lret
xor
fs
adc
outsb
push
pop
repnz
inc
lods
popa
cltd
mov
jecxz
jo
jecxz
popa
push
mov
jo
rcrb
and
lret
inc
nop
lods
dec
mov
lods
addr16
ljmp
cwtl
popa
test
jl
jne
jo
lahf
test
enter
push
mov
insl
ss
mov
dec
sbb
push
cs
sub
jp
clc
test
xor
pop
sub
cmpl
jge
sbb
mov
fcmove
movsb
pop
push
push
test
sub
popa
rcl
jg
mov
dec
pop
lret
adc
enter
xchg
lds
and
or
push
sub
xchg
xor
dec
scas
movsb
inc
pop
repz
pop
add
pop
push
aaa
sarb
pushw
outsl
dec
xor
adc
xor
pop
and
adc
and
outsb
cld
pushf
call
mov
mov
loope
push
std
fnsave
jg
sub
loope
leave
dec
inc
icebp
aam
stos
lcall
fists
jns
rcr
les
into
lods
lcall
repnz
aad
sub
test
pop
mov
imul
insl
mov
mov
scas
jp
test
mov
insl
and
out
icebp
xor
imul
jmp
mov
shrb
fistl
daa
sub
shll
and
lods
pushw
push
daa
jmp
ficompl
jo
in
mov
mov
mov
mov
sbb
xlat
cmc
aad
inc
cltd
adc
subb
push
xchg
ret
or
lods
iret
push
lcall
incb
mov
sub
mov
mov
test
xchg
add
dec
cld
scas
xlat
dec
jo
out
sbb
jmp
adc
orb
pusha
insl
mov
sbb
js
mov
ss
push
or
add
pop
jb
mov
xlat
cmp
adc
and
in
sub
ret
jne
mov
jle
jecxz
and
es
xchg
mov
add
add
out
or
jp
pop
mov
fwait
or
decl
in
iret
sub
fstps
fisttpl
jg
add
lret
jae
cmpsl
adc
out
add
mov
sbb
mov
in
popf
in
dec
sub
daa
xor
xorl
push
ds
or
pop
mov
dec
lock
fisttps
popf
rorl
mov
lret
sub
sbb
lcall
sahf
jae
push
and
outsl
lret
test
xor
mov
out
inc
rclb
call
out
cmpsl
cltd
ficomps
jb
movsl
pushf
mov
or
sub
lahf
sub
in
shrl
int3
lahf
pop
adc
int3
sar
fsubrl
scas
push
mov
jb,pt
dec
mov
addr16
adc
cmp
fisubrs
adc
or
mov
divl
imul
divl
aam
add
mov
daa
cmp
fidivs
dec
addr16
out
hlt
xor
jnp
pop
jns
ret
sahf
jle
es
aad
aas
pop
dec
aaa
fidivl
mov
fcomps
push
cwtl
shr
inc
and
jo
push
dec
incl
nop
push
xchg
insl
mov
cmpsl
movsl
lcall
jbe
test
or
and
mov
out
cltd
mov
add
xchg
sbb
pop
repz
lods
aam
cmp
mov
stos
scas
mov
pop
imul
ret
sbb
movsb
push
push
push
sub
push
and
rclb
add
lahf
ja
fnstsw
jb
inc
test
jmp
push
sbb
cmp
xor
jae
xchg
shrl
lds
push
stos
in
add
sahf
mov
sbb
jge
xor
out
repz
arpl
add
rcl
loope
mov
mov
fdivr
ret
movsl
decb
iret
js
es
xor
sbb
cld
add
jg
sub
out
gs
mov
insl
mov
mov
pop
mov
mov
lcall
mov
xchg
jne
xor
repz
cs
sub
sbb
mov
mov
repz
leave
push
lods
mov
mov
inc
cli
repnz
mov
push
fisubl
lahf
dec
sub
lret
lea
mov
mov
add
cmpsl
ss
xchg
gs
add
push
cld
arpl
rolb
and
in
cli
or
popf
cmp
pop
imul
mov
xchg
insl
jbe
loope
xchg
inc
sub
sarl
xor
dec
cwtl
jmp
aad
and
jl
mov
mov
inc
popa
ljmp
lods
sbb
or
sub
ja
cltd
jecxz
bnd
or
sub
int3
xlat
fstpl
ficompl
jmp
xor
mov
lds
pop
imul
sbb
xor
mov
mov
mov
inc
add
dec
mov
mov
push
push
adc
xlat
aas
inc
ss
jo
mov
adc
cmp
stc
add
push
sbb
add
ret
push
push
add
mov
pushf
sbb
mov
and
cmp
cwtl
je
xchg
pop
pusha
scas
aad
and
fisubl
sbb
jnp
and
fadd
rcrb
cmp
lods
andl
sbb
scas
jmp
push
nop
push
adc
mov
adc
mov
mov
fcmovbe
insb
push
and
daa
enter
ret
sbb
or
mov
fsts
pop
cmp
cmpsl
gs
call
cmp
int
sahf
mov
adc
aaa
mov
pop
dec
mov
adc
sbb
movsb
jl
push
pop
mov
fwait
xchg
dec
mov
mov
xchg
out
aas
cmp
out
in
insl
cmp
arpl
cmp
and
pop
imul
cmp
mov
ja
dec
or
jmp
lret
jle
rcll
mov
fdivs
jnp
movsl
pop
or
fidivs
sub
int
notb
test
lock
out
negb
aas
in
imul
sub
cmp
pop
add
sahf
jmp
ja
xor
test
loop
sbb
add
jo
mov
inc
sub
xchg
dec
xor
imul
outsb
xchg
stos
xor
dec
sub
dec
dec
mov
add
leave
and
fbld
cld
sti
idiv
stos
sbb
inc
fidivl
or
lock
cmp
sbb
and
inc
inc
test
mov
enter
int3
rcrb
sub
loop
sbb
cmp
fldcw
jg
ret
repnz
jg
jns
jge
in
imul
jno
inc
shlb
cmpsl
stos
adc
lcall
mov
cs
dec
jne
sbb
push
scas
das
leave
and
add
push
xchg
sbb
push
cmpsb
and
and
cmpl
adcl
add
sbb
mov
xchg
jle
adc
push
push
or
xor
push
lldt
mov
mov
lods
adc
or
loop
or
ss
mov
clc
test
popa
lods
xchg
ror
out
push
sbb
rcrb
shlb
inc
mov
ss
gs
adcl
cmc
repnz
hlt
hlt
adc
mov
mov
sbb
cmp
cli
das
adc
add
dec
es
mov
lcall
dec
repnz
rcr
mov
jp
xor
xor
xor
mov
add
fisttpl
push
orl
fcmovnu
pop
cmpsb
and
leave
push
mov
mov
addr16
xor
xlat
int
addb
xor
sbb
mov
loop
insl
stos
and
lcall
clc
jge
dec
vpunpcklbw
gs
es
imul
fwait
loope
push
sahf
insl
mov
dec
mov
insl
mulb
out
xor
aam
inc
pushf
xor
xor
mov
and
mov
roll
mov
clc
xchg
sti
int3
xor
imul
push
gs
cmp
in
mov
push
pop
cmp
jl
xchg
xor
inc
jo
das
or
adc
xor
insb
decl
mov
adc
ljmp
and
push
loope
cmp
outsb
mov
aad
test
xchg
call
stos
dec
jne
es
xchg
dec
mov
rclb
leave
mov
int3
cmp
out
fimuls
xchg
inc
lcall
outsb
aam
dec
mov
cmp
rol
jne
sbb
sbb
loopnew
in
call
lods
push
je
push
je
lcallw
or
inc
in
test
mov
popa
int
lds
adc
inc
xor
vpsllq
pop
sar
clc
andl
cmpsb
mov
lods
xchg
cmpsl
add
cmpsl
lock
xor
jl
loope
and
xor
jno
dec
pop
push
repnz
and
jae
push
sar
mov
jp
jns
jbe
clc
jae
cmp
pop
loope
cmp
iret
sbb
sbb
mov
loope
call
jmp
and
std
cmp
shll
ja
nop
aam
dec
mov
push
mov
inc
mov
inc
sbb
add
inc
mov
pop
imul
cli
and
ja
adc
cmp
sbb
xchg
mov
jo
mov
ss
dec
je
sysenter
adc
ds
or
jl
aas
xchg
loope
add
mov
orb
jg
pop
add
pop
xchg
das
push
add
inc
xchg
std
mov
fs
in
sbb
dec
push
stos
and
mov
flds
push
mov
and
movsb
lea
add
test
mov
mov
adc
pop
xchg
inc
mov
xchg
sar
pop
inc
lret
repnz
in
lods
mov
in
in
lods
or
jmp
jl
jge
hlt
jb
pop
ljmp
daa
aam
cmp
int3
cmpsl
xchg
pop
les
inc
xor
lahf
sbb
popa
arpl
jle
mov
in
lcall
mov
gs
ss
adc
outsb
dec
fabs
mov
mov
stc
mov
xor
dec
and
fstl
mov
fs
cli
flds
ds
es
mov
cmp
daa
jg
jo
mov
outsl
sbb
fisttps
ds
ret
inc
mov
xor
popl
shlb
in
shlb
add
xchg
cmp
jnp
sbb
test
jb
mov
movsb
insl
xor
leave
call
lods
inc
and
lea
or
clc
xlat
xchg
popa
outsl
cmpb
in
cwtl
shl
cmp
scas
std
mov
xchg
loop
push
xor
dec
sub
scas
pop
dec
dec
sbb
sti
mov
movsl
adc
dec
fdivs
mov
sbb
stos
jns
ret
mov
jp
mov
mov
outsl
subb
push
dec
or
fildll
cmc
or
movb
insb
xor
push
inc
aaa
call
jo
push
xor
rolb
push
add
cmpl
movsl
sub
stos
xchg
roll
movsl
out
into
and
mov
jp
fbld
jo
or
cs
push
push
arpl
pop
daa
dec
cmp
cs
fsubl
pop
mov
and
push
das
cmpb
mov
jbe,pt
rcrl
loopne
mov
mov
lret
mov
mov
notb
push
sti
or
and
xorb
sub
mov
jmp
ret
mov
pop
ret
jge
aam
jmp
adc
cmp
in
loope
mov
es
popa
cmp
jle
iret
cmpb
and
sbb
std
push
inc
pop
out
inc
mov
adc
shr
pop
repz
in
jno
jbe
aad
jns
sbb
mov
shl
pop
dec
xchg
ret
dec
dec
or
icebp
lods
push
jae
xchg
xor
inc
mov
cmp
mov
out
jmp
add
xchg
mov
data16
mov
jo
into
negb
scas
cld
es
lcall
xor
mov
mov
jb
mov
push
xor
push
jbe
vunpckhps
xchg
sub
add
jnp
jne
sub
mov
xchg
adc
sub
and
enter
inc
iret
sbb
cmpsb
xchg
lock
xor
mov
test
lea
fcmovnu
mov
sub
cmc
pusha
das
in
int3
push
jg
push
arpl
popa
adc
dec
push
maxps
aaa
cwtl
and
pop
xlat
inc
inc
adc
in
xchg
flds
pop
inc
aad
or
shl
xlat
adc
ret
scas
pop
sbb
testb
pop
cmp
mov
fcomps
jnp
sub
inc
xchg
adc
xor
stos
push
pop
jns
adc
lds
sti
pop
sarl
pop
daa
jmp
scas
xchg
adc
stos
or
push
lock
lret
xchg
outsb
bound
jp
pop
lret
jmp
mov
lods
hlt
and
push
popf
pop
mov
subl
ss
inc
movsl
dec
cmp
add
sub
pop
mov
daa
push
adc
jle
dec
or
xor
les
pop
gs
cmp
test
xor
sti
mov
mov
std
or
ret
cmp
mov
jmp
cs
dec
loopne
adc
mov
lret
or
inc
pusha
xchg
cmovge
lds
js
push
dec
lret
inc
int3
xor
pusha
push
xchg
pop
jle
outsl
cmpsb
popf
jb
pop
sub
cmp
pop
mov
sub
fcmovbe
sub
rcrb
push
popf
out
in
mov
and
add
dec
jno
sub
mov
jl
fists
dec
mov
ss
cmp
rclb
or
sub
xor
jge
aad
mov
lea
lock
fnstenv
add
xor
rcr
jne
into
jnp
ror
xchg
mov
inc
inc
jp
sbb
ljmp
scas
aad
push
test
xor
fisubl
fistps
xchg
mov
pop
inc
cmpsl
out
ret
adc
addr16
iret
xlat
cs
pop
mov
sbb
dec
mov
mov
into
push
das
imul
or
shlb
js
in
mov
mov
pop
imull
xchg
in
outsb
push
test
pushf
push
pop
imul
add
push
les
sti
stos
imul
sub
inc
hlt
pop
dec
mov
mov
sub
rolb
aaa
lret
jge
insb
out
pop
add
xchg
pop
jmp
shlb
cmp
cmp
cmp
mov
jecxz
imul
push
jnp
int
pop
xchg
hlt
pop
xlat
ss
and
dec
jbe
cmp
setge
push
xchg
xchg
jecxz
pushf
nop
inc
sbb
fisubl
mov
sub
lea
adc
xchg
test
pusha
add
pop
bts
adc
mov
and
cmp
add
outsl
jb
stc
fsubrs
push
mov
pop
cmpsl
test
daa
pop
jae
jns
inc
fmull
xor
and
mov
and
mov
int
cmpsb
mov
mov
mov
pop
push
shll
pop
mov
mov
mov
lret
idivl
push
push
mov
movsl
in
xor
cs
push
cmc
ret
cmp
addb
lret
or
xor
pop
push
loope
outsl
pop
mov
cmpsl
push
je
mov
xor
xor
out
inc
outsb
bound
repnz
mov
push
mov
aad
jb
int
test
jbe
in
mov
insb
push
pop
or
pop
mov
mov
sub
test
inc
and
xor
xlat
sub
icebp
xor
xor
popf
mov
fsubl
notb
xchg
jae
adc
leave
into
popa
fstpt
or
mov
or
or
es
sahf
inc
ret
lock
xorl
push
push
jns
iret
incl
loope
lcall
mov
mov
xchg
xchg
pop
int3
stos
jno
mov
int
push
sar
jno
fdiv
sub
out
fbstp
or
pushf
in
jbe
mov
xchg
lea
add
ja
in
into
pushf
jmp
leave
jl
outsb
dec
and
lea
xchg
xor
jo
push
xor
add
mov
mov
xlat
arpl
scas
add
dec
xor
sti
cmp
pop
outsb
pop
mov
mov
sbb
mov
movsl
push
outsb
sub
cwtl
dec
hlt
mov
scas
fistpl
out
mov
outsb
mov
xchg
xchg
hlt
pop
sarl
push
fnstcw
jecxz
add
shll
out
cld
mull
sar
out
xchg
fldl
imul
xor
xor
outsb
ss
push
xor
pop
leave
orb
xor
pushf
mov
push
fildl
sub
lods
fildl
loopne
adc
mov
adc
jle
mov
sub
and
lock
jbe
inc
xor
push
ss
mov
push
or
mov
cmpsb
cs
lock
adc
pop
imul
jnp
flds
lret
test
pop
fistl
pop
out
push
cltd
sbb
cltd
loope
stos
push
add
cmpsb
inc
imul
mov
jl
and
mov
int
push
fisttpll
cmpsl
and
push
push
pusha
imul
adc
jbe
sahf
xor
inc
cwtl
lds
mov
cwtl
aas
pop
push
inc
lcall
loop
xchg
std
xchg
lahf
insb
or
movsb
xchg
andl
ss
jl
adc
cmpsb
sbb
pop
popf
test
add
push
jb
pop
jo
xor
stos
popf
pop
inc
les
xchg
loopne
mov
sahf
loop
cmpsb
imull
inc
je
pop
cmp
test
orb
sbb
lahf
cmc
push
sbb
cltd
push
xchg
pop
loope
jne
cmp
jne
xor
inc
outsl
sbb
sub
sbb
adc
mov
add
fcoms
jnp
shll
xor
mov
ficoms
int
sahf
mov
loopne
mov
and
pusha
cmp
dec
inc
lret
mov
push
aad
sbb
mov
test
dec
or
rcr
fstpl
testb
cltd
xchg
lahf
insb
xorb
xor
cmp
rcrl
jae
push
fistpl
incl
mov
mov
pop
cmp
fstps
outsl
cld
or
test
pusha
aas
loopne
xor
mov
adc
addr16
cli
jecxz
pop
cltd
xchg
and
fnsave
adc
mov
sbb
mov
sub
sbb
push
add
out
ret
inc
shlb
dec
sub
mov
stos
mov
push
ret
mov
adc
popf
xor
fbstp
push
inc
popf
and
xlat
pop
sbb
lret
loop
movsl
mov
xchg
inc
mov
loopne
loop
pop
sub
sar
out
mov
mov
hlt
clc
icebp
jnp
or
cmp
xor
dec
addr16
xchg
movsb
push
aad
je
sub
fimuls
pop
fcompl
arpl
pushf
sub
orl
movsl
idiv
push
into
movsl
adc
sahf
cld
aad
negl
or
sbb
repnz
inc
in
add
mov
pop
in
add
cmp
or
inc
bound
mov
lods
es
or
xchg
test
mov
push
rolb
pop
mov
jno
cmpsl
sbbb
add
ds
test
aam
cmp
jp
testl
popf
lret
and
popa
mov
xor
adc
push
push
xchg
or
xlat
ja
cltd
insl
imul
jecxz
or
cmp
or
cs
cmp
pusha
or
call
jge
xchg
aaa
fwait
bound
sbb
daa
push
mov
ret
dec
xor
xlat
inc
popl
pop
testl
sbb
pop
adc
mov
es
leave
lcall
sti
imul
out
jle
lock
mov
push
jb
xor
jmp
enter
inc
push
push
les
sbb
cmp
aad
or
mov
pop
sbb
and
andl
mov
cltd
stos
cmpsb
xor
push
idivl
cmp
roll
ret
sbb
xchg
mov
xchg
adc
movb
ficoms
scas
mov
or
cltd
inc
fisttps
popa
hlt
inc
push
cmp
icebp
dec
cmp
xor
jmp
push
fwait
dec
add
daa
imulb
cli
adc
test
fdiv
fsubl
mov
and
fs
and
cli
adc
hlt
cld
xor
jae
adc
mov
jne
adc
mov
jge
pop
sbb
cmp
mov
mov
mov
push
cmp
inc
cmpl
js
mov
movsbl
test
divl
push
push
inc
jno
aad
or
bnd
stc
cmpsb
inc
dec
sub
xor
sahf
icebp
in
bound
sbbl
inc
imul
imul
cmp
push
enter
xor
xchg
cwtl
ds
sbb
mov
or
push
mov
dec
std
sbb
xchg
jns
adc
push
into
xor
dec
push
hlt
in
cmp
sbb
jg
aaa
les
fdivs
mov
movsb
fstpt
dec
jmp
jae
cld
dec
sub
pusha
inc
popa
loop
out
jb
ss
mov
push
faddl
dec
sbb
pop
mov
jne
jmp
pop
sbb
in
filds
imul
dec
and
ss
cmp
loopne
lock
mov
repz
ret
add
cs
xor
xchg
imul
int
jnp
xchg
mov
mov
jge
lcall
out
fists
dec
pop
xor
xor
sahf
mov
mov
hlt
rcrl
dec
bound
or
jp
mov
cmp
xchg
ja
push
push
ficompl
lcall
outsb
mov
aaa
adc
mov
mov
rcr
jge
fcomps
addr16
push
hlt
jo
rorb
mov
in
sub
push
inc
scas
mov
pop
push
inc
inc
shll
sahf
mov
mov
popf
out
pusha
jae
cli
int3
sub
push
dec
adcb
mov
xor
dec
inc
xor
xchg
fwait
subl
mov
inc
mov
xchg
pop
push
insl
jno
rcr
rcl
adc
sbb
mov
shrb
fprem
jecxz
jg
fadds
push
mov
lahf
mov
lahf
lods
and
ror
xchg
and
imul
hlt
pop
push
xor
shrb
xchg
ja
pop
movsb
mov
repz
sbb
out
cmp
jecxz
and
xor
jl
fs
in
mov
sahf
sti
push
cmovge
pop
imul
cld
push
addl
test
cmp
or
adc
ffreep
sbb
ss
sbb
inc
push
push
sbb
pop
mov
js
jl
sbb
xor
test
ds
mov
inc
or
loop
pop
cmc
movsb
cmp
aas
lret
sbb
insb
dec
push
or
adc
out
mov
pop
or
scas
clc
mov
sbb
add
push
stc
sti
rcll
sbb
mov
mov
in
je
andl
xor
fidivs
popa
shrb
lock
addr16
stos
daa
outsb
mov
xchg
jnp
jb
in
pop
ds
dec
mov
fwait
cmp
mov
mov
aas
mov
stos
mov
and
push
or
pushf
dec
rorb
push
jle
lret
mov
mov
les
bound
xor
sarb
xor
xchg
add
in
push
sub
or
mov
mov
int3
mov
jns
ljmp
pushf
repnz
sar
jne
cmpsb
out
add
mov
jle
incl
jle
push
mov
std
imul
push
xchg
pop
in
mov
mov
inc
ljmp
fdivs
icebp
repnz
aas
shr
mov
cmp
loope
push
enter
in
popf
dec
xor
testb
mov
adc
addr16
test
shlb
xchg
popf
mov
lock
addr16
in
pusha
xor
mov
add
out
jns
das
fstps
test
sub
fisubrl
imul
mul
mov
and
ja
add
mul
add
mov
pop
fwait
mov
ret
in
movsl
adc
xchg
pop
in
push
sbb
daa
jle
cmc
jb
fs
test
lods
mov
dec
enter
rcrb
leave
push
cs
pushf
stos
fistps
pop
xor
vphaddubw
xchg
push
dec
subl
cmp
xchg
out
ja
in
leave
pop
push
lret
cmpsb
sbb
adc
repz
test
cwtl
iret
clc
insl
mulb
inc
xchg
jns
pop
out
mov
xor
xor
test
cmp
push
std
leave
fs
sub
pushf
mov
ret
repz
push
adc
outsb
imul
sarl
dec
cmp
mov
ds
mov
ds
push
pop
mov
jno
add
xchg
std
add
mov
xchg
mov
add
in
jbe
add
or
xor
inc
mov
jnp
add
mov
adc
dec
in
push
clc
xchg
fsubrs
jno
dec
mov
pop
add
ffreep
pop
jp
je
or
daa
pop
je
mov
xchg
jb
test
push
lahf
loopne
stos
cltd
enter
xchg
add
mov
lret
jnp
gs
lret
inc
pop
add
mov
js
add
xchg
mov
das
xorb
dec
into
sbb
jne
cltd
add
or
dec
rorb
and
mov
or
cmp
jb
enter
xchg
and
shll
rcl
xchg
cmpl
data16
scas
test
popa
insl
jnp
xor
xchg
mov
push
int
nop
enter
js
movsl
into
mov
scas
and
and
outsb
mov
cmc
mov
mov
mov
je
out
push
sbb
call
sahf
push
xchg
cmp
stc
pop
daa
repz
jp
movsl
sti
ss
paddd
add
dec
fcmove
in
test
add
div
loop
mov
xchg
pop
subl
dec
cmc
lea
inc
cmpsl
cmp
jg
inc
lahf
or
add
jecxz
sbb
fiaddl
xorb
dec
dec
ds
jno
xor
in
sbb
dec
inc
inc
mov
inc
push
std
test
xchg
flds
sahf
push
and
into
jne
rcr
dec
into
xor
mov
cmpl
jmp
push
or
dec
inc
xor
jg
sbb
push
mov
dec
cs
icebp
xor
mov
out
pop
pop
push
or
pop
cmp
dec
dec
pop
cmp
hlt
lret
or
repnz
cmpsb
xchg
jg
inc
mov
mov
mov
xor
inc
shll
inc
xchg
iret
mov
in
xchg
inc
add
lret
pusha
fs
mov
and
mov
jno
mov
loopne
hlt
sub
push
mov
mov
je
cmp
jb
shlb
push
inc
push
pop
sbb
arpl
cmpsl
pop
mov
xchg
adc
loope
test
dec
sbb
test
outsl
daa
icebp
loope
movsl
xor
jge
adc
cmpsl
jg
imull
lods
cmp
xor
loope
or
xor
pop
js
test
mov
shll
xchg
xor
loope
mov
jbe
xchg
cmpsb
or
mov
std
subb
bound
std
inc
cmp
aas
cwtl
fdivl
pop
addl
mov
das
cmc
mov
ret
cmp
mov
lahf
sbb
jo
pushf
mov
push
andb
ja
das
cs
adc
inc
pop
daa
in
xchg
jmp
fwait
or
dec
jle
pop
je
add
orl
inc
dec
test
out
daa
push
dec
add
sahf
cmp
adc
lret
out
xchg
jbe
cltd
xlat
pusha
mov
mov
inc
addr16
pop
sub
add
lahf
out
lock
out
or
mov
rorl
pop
sbb
and
insb
sbb
dec
shrb
shll
mov
mov
outsl
mov
mov
in
mov
ret
fsubs
daa
or
pop
int
inc
pusha
add
mov
or
inc
stc
mov
or
mov
dec
xchg
es
mov
jp
icebp
decb
mov
loopne
iret
adcl
push
mov
insl
or
mov
sub
jae
out
xor
data16
test
repz
lcall
js
fs
test
adc
rolb
dec
repz
jnp
push
ljmp
adc
inc
out
ljmp
das
sub
push
test
cmp
bound
imul
push
shlb
xor
xor
pushf
repz
cld
sbb
test
cmp
subb
pushf
aad
lea
ja
inc
push
pop
fs
push
jbe
mov
xchg
insb
mov
push
and
sarl
mov
call
flds
les
jns
int
bound
rcr
sub
fidivs
sbb
mov
outsl
inc
adc
add
pop
jb
sub
out
decb
push
iret
imul
ds
xor
jmp
cmp
in
inc
lahf
nop
clc
xchg
inc
fstl
dec
or
lds
xchg
xor
jl
lret
ds
aam
shl
mov
lret
test
dec
shll
push
sbb
pusha
imul
aam
cmp
jg
xor
sub
test
cmp
les
call
lods
jbe
jne
sbb
fst
ficomps
cmp
lcall
gs
mov
test
xchg
imul
push
add
mov
cmp
mov
push
into
sub
pop
insb
xor
in
les
cmp
inc
fdivs
negb
lds
push
test
or
sbb
cmc
enter
out
jbe
push
lret
mov
mov
aad
xchg
lret
dec
sub
or
adc
not
push
fildll
add
aad
imul
push
fstps
dec
divl
fistl
lcall
dec
cmp
sarl
orl
repnz
andb
and
adc
out
mov
cmp
jmp
out
dec
test
loopne
cmp
imul
mov
mov
lods
ret
xchg
mov
stos
dec
icebp
push
hlt
call
xchg
add
and
sbb
movsl
insb
cmp
pop
das
or
insl
push
mov
mov
or
mov
xor
xchg
shrb
jge
negl
outsb
nop
and
push
push
add
out
mov
mov
out
cmp
or
mov
sub
adc
movsb
lds
insb
xchg
or
lahf
call
out
cld
call
daa
cld
aas
mov
sar
sub
cmp
mov
cmp
out
testb
jge
dec
insl
mov
xchg
lods
add
in
and
fcomip
dec
imul
adc
int3
jle
insl
out
les
mov
jmp
into
sub
scas
rolb
jl
push
notl
pop
cmp
mov
or
lcall
daa
mov
loope
pop
pop
adc
push
insb
cmc
lds
bound
sub
xchg
mov
adc
mov
imul
lods
jl
inc
std
je
xorb
adc
mov
sbb
jbe
jecxz
sub
push
loop
dec
dec
icebp
popa
cmp
fsubr
das
out
rol
decb
mov
popl
decl
imul
adc
xor
out
mov
fnstcw
in
mov
sbb
out
xchg
rcr
jmp
mov
lods
and
ss
out
jne
or
popa
loope
cmpsb
xchg
mov
sub
dec
in
cmpsb
push
add
out
sub
mov
loop
jecxz
adc
stos
or
rclb
mov
and
ret
dec
jle
int
mov
shrl
xchg
pop
xchg
addr16
or
mov
sbb
scas
sarl
cltd
adc
hlt
mov
imul
or
xor
lcall
fidivrs
cld
push
dec
add
jmp
push
or
hlt
mov
mov
and
das
jo
mov
jae
jl
xor
popf
mov
dec
dec
add
jo
ja
dec
loopne
lods
cmp
icebp
daa
sbb
xor
dec
mov
sbb
test
mov
fs
and
xchg
out
push
jns
out
pushf
push
xchg
insb
nop
push
sahf
cmp
pop
gs
testb
or
hlt
aaa
stos
adc
lock
scas
jg
jb
je
sbb
and
movsb
mov
pop
dec
clc
cmp
sub
push
jbe
ja
ss
int
mov
popa
mov
pop
imul
mul
cmc
pushf
or
mov
mov
or
jnp
negb
inc
jp
fstp
fisubrl
enter
rorb
jle
stos
ljmp
insl
sti
xchg
cmp
add
leave
sahf
cmpsb
push
mov
shlb
shrl
aas
stos
repnz
cmpsb
or
in
jb
dec
pop
cmp
cmp
jne
les
outsl
sti
jmp
fisttpll
sti
imulb
cli
pop
es
shr
enter
pusha
int3
push
fstp
sub
jae
rcrb
ja
or
cmp
psubsw
dec
lret
iret
lock
adc
sub
dec
gs
addr16
jne
jo
cld
movsl
fwait
adc
jp
push
popa
and
mov
lods
cwtl
mov
divb
repnz
fdivl
sbb
lret
pop
mov
hlt
xorl
daa
enter
mov
ja
loopne
sub
cld
sbb
mov
cmp
dec
rolb
cmpsl
xchg
scas
aaa
ss
adc
dec
lock
add
jle
mov
jecxz
andl
jge
rclb
jg
jecxz
cli
shl
fwait
xchg
jg
xor
mulb
and
ljmp
sahf
mov
jmp
pop
lret
les
mov
jbe
cmp
cmp
lahf
mov
fwait
adcb
enter
xlat
mov
popw
inc
jae
mov
dec
scas
mov
jb
nop
pusha
jecxz
push
aad
das
mov
mov
js
mov
pop
xchg
test
and
mov
xchg
mov
add
cmp
shlb
xchg
loope
inc
pop
outsb
push
mov
mov
jns
pop
and
xor
add
jno
cmp
jle
into
mov
dec
test
aas
or
popa
test
pop
fnstcw
rolb
test
mov
sub
cwtl
adc
scas
imul
jb
cld
xchg
adc
fdivl
cmp
fcomip
nop
outsb
add
mov
jns
add
cmp
sbb
dec
lock
das
loope
dec
push
cltd
or
sub
xchg
loopne
dec
inc
and
das
lods
and
mov
pop
iret
add
das
jne
inc
push
ss
int
xchg
lret
addl
inc
out
mov
bound
mov
rcrb
or
call
mov
ret
mov
ja
stos
je
mov
mov
xor
insl
aaa
mov
sbb
lock
nop
mov
add
adc
adc
cld
xchg
mov
fs
pop
les
lahf
sarb
jb
cmp
aad
imul
dec
jp
pop
rep
icebp
cmc
dec
loope
aaa
out
jne
inc
sahf
stc
pusha
xchg
push
dec
sbb
adc
and
inc
stc
push
je
lods
adcb
js
ss
cmp
xorb
repz
dec
xor
addr16
arpl
adc
jbe
cs
aad
nop
mov
test
jge
out
leave
gs
addr16
or
xchg
pop
push
inc
xchg
nop
jmp
test
stos
outsl
cwtl
or
testb
sub
mov
dec
sbb
add
mov
jmp
cmp
mov
gs
cmp
or
pop
push
mov
cld
inc
xchg
clc
jb
and
icebp
xchg
adc
repnz
adc
dec
call
repz
lahf
xor
sbb
push
jno
aam
sarl
mov
sub
push
je
loopne
data16
fldt
hlt
jg
imul
insb
pop
dec
dec
dec
ret
sub
cmp
stc
inc
ret
cmp
cmp
mov
into
in
xchg
jne
nop
mov
xlat
xor
fldt
in
push
aaa
push
jbe
xorl
jge
mov
jno
cmpsl
mov
mov
inc
xchg
or
out
out
push
pop
push
fildll
stos
bound
ficoms
push
test
fisttpll
and
ljmp
and
test
xchg
fimull
stos
push
mov
test
rcll
cs
add
insb
jo
add
or
fstl
cmc
add
xor
adc
ljmp
clc
xor
icebp
jle
mov
out
cmp
addl
cmp
push
repz
mov
push
mov
mov
sbb
leave
xchg
in
cs
dec
mov
sub
dec
fisttpll
add
je
add
pop
fwait
testl
roll
jnp
aas
xor
mov
pop
and
stc
dec
jmp
fcmovnu
outsl
add
daa
data16
cmpsl
xchg
sbb
loope
test
xchg
adc
cmp
mov
lret
xchg
sub
sarb
rorl
xchg
or
add
lods
jp
cmpsl
iret
movsb
es
je
push
or
jl
into
lods
enter
out
cmp
out
in
sbb
mov
sarl
mov
pop
out
pop
test
xor
xchg
out
mov
jae
insl
push
jle
lret
add
jns
clc
push
push
imul
mov
inc
repz
andb
mov
out
xor
sahf
subl
cmp
lret
data16
sbb
pop
dec
popf
mov
outsb
aas
sarl
mov
sbb
rcll
jmp
fsubs
mov
loopne
inc
pusha
sbb
xchg
mov
imul
and
pop
dec
jecxz
add
in
mov
cmc
mov
ljmp
inc
cmp
nop
mov
mov
test
fimull
sbb
or
mov
inc
xchg
xor
cs
pop
rcrb
sub
incb
into
jecxz
inc
push
lcall
mov
and
fwait
and
outsb
xor
out
outsl
xor
sub
int
aas
sbb
or
adc
pusha
mov
dec
mov
sub
mov
pop
push
call
and
dec
fs
inc
mov
sub
inc
mov
stos
das
out
stos
cltd
jae
das
lret
ret
mov
add
aaa
pushf
hlt
cmp
mov
push
es
and
dec
cwtl
add
dec
loope
arpl
dec
test
movsl
xchg
cmp
jns
in
push
sbb
mov
aas
rcrl
mov
mov
mov
int
xlat
add
lds
insb
xchg
xchg
clc
adc
sub
jns
jle
sbb
gs
mov
cmp
cmc
mov
push
mov
push
inc
loop
lret
pslld
hlt
mov
add
push
jp
pop
mov
movsl
add
jns
outsb
mov
jmp
mov
and
jle
fstpl
push
stos
cmc
lods
orb
sbb
mov
ds
je
stc
pop
pop
repnz
orl
sub
call
pusha
das
movsb
push
fdivrs
fcompl
leave
lahf
int
jb
flds
jp
ds
add
call
imul
pop
sbb
xor
add
call
xchg
xchg
xor
test
jle
outsl
cld
sub
adc
xchg
lret
lahf
jle
xlat
fildl
stos
mov
sub
mov
pop
and
les
lea
adc
sbb
cwtl
cs
stos
les
fldl
pop
mov
mov
fcomp
repz
xor
popa
mov
popf
push
int
and
loopne
fiaddl
ret
mov
dec
es
movl
cmp
dec
out
pop
xor
xchg
push
cmp
adc
ds
add
out
sub
pusha
dec
into
out
into
inc
std
cmc
les
out
sbb
inc
mov
mov
pop
shll
and
mov
inc
jl
in
mov
mov
scas
sub
lcall
movsb
pop
push
les
and
cld
jo
repz
add
sub
rolb
mov
sbb
cmc
stos
jmp
and
mov
adcb
insl
fcomps
xor
adcb
jmp
mov
jp
or
je
cmc
decl
mov
loop
jb
fldcw
mov
fadd
pusha
test
xchg
mov
fidivrs
insl
jmp
call
mov
jg
sub
test
mov
cmp
or
lods
ret
hlt
enter
in
cmp
xchg
popf
cld
stc
push
addr16
mov
and
mov
fiaddl
push
setle
jno
xor
je
aad
jmp
in
fistpl
cld
sbb
shl
sbb
fcmovu
push
adc
sub
mov
push
mov
orl
and
xchg
xchg
fldenv
fsts
mov
sub
movsl
rolb
iret
add
ds
mov
test
loopne
hlt
test
mov
xchg
fmuls
inc
out
mov
inc
ja
xor
sub
inc
dec
xchg
xor
sahf
jle
add
sub
mov
dec
pushf
fidivl
sbb
xchg
enter
ss
lea
iret
stos
lahf
jmp
inc
into
mov
push
mov
mov
sbb
stc
adc
inc
sbb
sub
and
pop
ret
cltd
scas
and
addb
pushf
pop
push
jo
clc
aad
push
xchg
mulb
out
mov
aad
or
mov
clc
ror
dec
sti
lret
rclb
sub
adc
test
inc
add
sbb
mov
shrb
push
adc
inc
pop
jne
fisttps
add
xchg
in
cltd
mov
aas
inc
sub
iret
xor
dec
dec
lea
xchg
add
ss
into
icebp
fcomps
test
mov
outsb
dec
out
or
sub
mov
ret
sub
addr16
adc
sbb
imul
popf
lret
cmpb
test
sub
sbb
jne
dec
pop
out
jnp
enter
outsl
ja
jl
inc
xlat
dec
jp
add
push
inc
and
xchg
jmp
repnz
loopne
sub
and
pop
inc
int
jecxz
xor
insb
roll
ss
xor
and
test
scas
push
std
adc
mov
lock
dec
dec
or
mov
xchg
or
aam
testb
or
daa
loop
mov
insl
adc
cmpsb
aas
cmp
xchg
notl
dec
pop
outsb
dec
jmp
jle
inc
jnp
jl,pt
hlt
aaa
call
push
es
inc
lds
jo
shrb
loop
outsb
adc
push
push
add
popa
movsb
gs
cmp
dec
adc
cld
add
push
dec
cwtl
mov
add
cmp
push
pop
jnp
dec
add
inc
into
sarl
cmc
jle
popf
add
rcrl
fcoml
stos
call
daa
xor
pop
test
test
jmp
insb
dec
cmp
xor
jecxz,pn
cmp
movsl
enter
mov
mov
popf
aaa
sbbl
in
sbb
mov
or
jle
filds
jmp
pusha
xchg
pop
fs
insl
pushf
dec
push
out
popa
sub
jae
xchg
mov
mov
inc
ficoms
adc
and
dec
xor
sti
mov
push
cmpsl
ficoms
mov
jbe
jmp
xchg
insb
inc
adc
xor
dec
std
dec
test
mov
cmp
fistps
fistps
in
ds
sbbl
out
icebp
inc
dec
out
push
cli
inc
lret
aam
bound
int
les
mov
sti
insl
adc
adc
je
shld
xor
out
mov
xchg
xchg
je
xchg
add
xor
hlt
push
dec
and
mov
xchg
mov
iret
movsl
inc
pop
xchg
mov
fisubrs
jle
fnstsw
fcmovu
outsb
dec
add
dec
mov
xor
cmp
xchg
adc
test
in
out
pop
dec
cmp
adc
jecxz
and
lods
sbb
cmp
lods
nop
push
xor
push
mov
lea
inc
add
dec
add
movsb
insl
dec
ret
mov
scas
packssdw
xor
loop
xchg
jp
add
push
loope
ret
sub
std
and
loopne
mov
or
mov
mov
xor
sub
mov
mov
popa
mov
mov
add
mov
and
jae
loope
xor
mov
popa
in
test
jg
test
pop
daa
fsubs
and
int3
mov
add
add
adc
sub
cmp
or
xor
mov
push
les
and
in
and
out
sarb
in
mov
shll
movsl
jns
sub
and
pop
rcr
movsb
and
std
ret
nop
pinsrw
enter
sbb
and
pop
shl
cld
jle
and
inc
xchg
add
adc
inc
pop
and
add
and
shlb
sbb
loop
cmpsl
pop
jmp
stos
sti
xchg
pop
pop
in
xchg
add
lret
mov
pop
loope
insb
cmc
mov
adc
inc
cmp
mov
cmpsl
aad
and
int
fs
adc
dec
cli
aas
adc
loop
mov
imul
loop
mov
jecxz
imul
push
xchg
cmpsb
jl
test
sub
movsb
pop
shld
xchg
stos
push
xlat
pop
and
fisubrs
jmp
pop
xchg
sub
mov
and
push
cld
mov
mov
jo
mov
add
ficomps
test
or
mov
js
fdivs
in
mov
lret
cmpsl
push
sbb
adc
mov
rcrb
cltd
iret
xor
lods
inc
in
xor
xchg
xchg
in
sbb
adc
or
and
scas
in
sub
jae
xchg
xchg
jmp
inc
jge
loopne
scas
add
in
pop
lods
in
mov
pop
scas
iret
insb
mov
in
dec
and
jbe
cli
push
sub
leave
sub
add
test
add
nop
movsb
ret
dec
lods
jno
in
aad
outsb
mov
add
addr16
test
push
pushf
data16
iret
inc
aaa
rorl
repnz
outsl
jne
cwtl
sti
imul
xrelease
cmc
aas
mov
mov
imul
les
fldcw
clc
add
mov
sbb
movsb
std
cmc
lea
pop
mov
cmp
fiadds
je
mov
leave
jl
shl
push
lods
pop
inc
sub
mov
inc
xor
mov
imul
inc
outsl
xchg
inc
sbb
jne
mov
inc
cli
insl
inc
arpl
mov
mov
dec
leave
cwtl
ja
pop
loope
mov
add
dec
or
sbb
cmpsb
xchg
jmp
jb
xor
jno
insb
jl
adc
jg
stc
jbe
mov
mov
cmp
cmp
xor
inc
xchg
adc
push
shrl
sbb
icebp
in
out
push
jmp
lock
mov
hlt
test
int
dec
sub
test
sysexit
fists
jl
adc
sbb
inc
loope
pop
repnz
out
cmp
arpl
push
hlt
xor
ffreep
adc
jae
sub
pop
je
insb
mov
mov
negl
mov
and
mov
cwtl
in
add
das
orb
or
push
mov
sbbl
jmp
inc
pcmpeqb
pop
pop
mov
mov
xchg
adc
lock
ljmp
pusha
sbb
jnp
dec
mov
fidivrl
jb
mov
ljmp
loope
ret
int
and
mov
and
icebp
pushf
aam
xchg
jo
jbe
das
inc
out
out
xor
daa
in
fsub
xlat
mov
data16
mov
sbb
jl
out
testl
xor
adc
dec
int3
test
sbb
daa
jp
lods
test
cmpsl
inc
je
xchg
arpl
jmp
loop
cwtl
imul
sub
dec
adc
mov
repz
xchg
inc
mov
mov
loopne
testl
lods
in
jno
in
mov
test
dec
js
mov
bswap
sub
mov
arpl
mov
in
mov
out
sbb
dec
sti
pop
movsb
aaa
lods
jne
and
inc
or
lcall
sbbb
arpl
arpl
rorl
cmpsl
pop
stc
inc
aad
popa
mov
data16
push
faddl
sbb
xor
xchg
imul
pop
mov
mov
in
aaa
aam
and
int
cmc
mov
nop
jbe
mov
cmc
cmpsb
push
pop
jle
imul
or
fs
pop
inc
pop
xlat
mov
scas
push
je
mov
or
and
xchg
les
popa
in
xchg
lods
and
sbb
imul
mov
movsb
add
lahf
pop
pop
pop
sar
jae
aas
pop
js
inc
mov
arpl
dec
cli
js
es
inc
adc
cltd
bound
mov
pop
mov
and
jecxz
loope
jecxz
fwait
sahf
rcll
xchg
dec
add
dec
das
pop
in
call
push
xor
inc
nop
fadd
scas
out
iret
sbb
cwtl
xchg
dec
call
push
leave
push
adc
mov
das
push
out
or
cmpsl
sub
xchg
xor
shld
cmpsl
pop
xlat
mov
fdivrl
xchg
mov
mov
dec
cmp
xlat
pusha
lcall
shlb
in
in
jmp
sub
add
pop
add
sarl
pop
dec
es
push
loope
inc
xchg
jne
rorb
or
add
xor
cmp
pop
mov
push
xchg
enter
lods
add
lcall
mov
ret
iret
sub
xor
jp
add
loop
adc
xor
cmc
push
outsl
jp
xor
jl
leave
iret
iret
or
and
int3
out
loop
pop
mov
and
lock
mov
mov
popa
call
push
or
leave
mov
cmp
push
inc
pop
cmpsb
into
add
xchg
pusha
stos
out
mov
ret
gs
xchg
pop
in
movsl
xchg
lcall
outsl
push
loop
pusha
mov
adc
hlt
xor
inc
into
push
pop
inc
cmp
inc
jge
dec
xchg
cmc
aaa
xor
rcl
or
mov
test
call
cli
dec
sbb
rolb
movsl
xchg
mov
enter
scas
sbb
fisubs
mov
mov
mov
call
adc
inc
pop
jl
test
lcall
and
jne
mov
dec
pop
dec
lods
stos
or
sbb
dec
inc
mov
cli
xchg
xchg
stc
adc
ret
insb
mov
sub
fiaddl
movsl
nop
add
test
cltd
in
aas
inc
shlb
pop
lock
pop
mov
dec
fsub
jbe
jle
jg
and
enter
ss
outsl
xlat
and
add
in
in
pusha
shl
cld
sub
repz
subb
cmp
mov
mov
fmul
adc
and
insl
subl
cld
in
dec
addl
mov
imul
je
cld
arpl
mov
xor
mov
jmp
or
jp
or
mov
in
and
int
data16
mov
fs
pop
js
adc
jnp
dec
xchg
pop
add
cmp
push
test
pushf
cltd
bound
sti
pusha
lods
jmp
fistpl
xor
ret
xor
mov
pop
xchg
and
jo
cmp
bound
daa
mov
cmc
adc
push
xor
add
sub
sti
push
clc
cmp
out
cmp
es
mov
cmp
lea
imul
fwait
daa
jp
adc
adc
fwait
mov
sti
lahf
xchg
mov
movsb
mov
sub
outsb
gs
ds
jmp
mov
mov
lcall
xor
cld
and
rcl
cli
or
adc
jle
rcll
add
popf
inc
popf
xchg
jmp
push
push
add
sub
add
pop
jg
arpl
mov
add
or
cmp
mov
dec
jns
cltd
sbb
jns
xchg
imul
fsubrl
es
popa
in
and
into
pushf
fwait
mov
or
and
jl
test
jmp
sbb
push
lret
dec
enter
cmp
dec
aas
mov
dec
cli
mulb
fdivr
mov
out
add
ret
frstpm(287
xchg
neg
pushf
inc
into
iret
loopne
dec
mov
stos
ja
jle
ret
xchg
jp
jecxz
mov
outsb
push
jnp
ds
aad
movsl
addr16
mov
in
in
call
imul
ja
iret
cmp
jns
call
push
int3
lock
mov
dec
jge,pt
add
aas
inc
xor
push
enter
xor
inc
rol
xchg
imul
jnp
and
mov
inc
dec
loope
rcll
clc
mov
mov
movsb
repnz
fwait
hlt
add
push
push
loope
imul
test
pop
lea
pop
add
fcomi
shll
add
dec
repnz
jmp
sbb
stc
inc
stc
mov
or
pop
mov
cli
xchg
insl
adc
pop
sbb
shrl
pop
cltd
into
fimull
cmpsb
xor
xchg
jne
jnp
pop
dec
and
lret
pop
push
push
ds
xacquire
xor
push
add
inc
pusha
push
cmpsl
and
mov
inc
ret
dec
xchg
ljmp
push
mov
sbb
mov
lods
nop
lods
cmp
sti
ljmp
lods
xor
inc
loope
into
mov
dec
xor
sbb
gs
out
or
gs
add
push
rclb
xchg
xchg
cmp
leave
pop
or
jle
xlat
pop
push
test
outsw
outsb
inc
rorb
add
mov
mov
inc
mulb
xlat
je
repnz
mov
icebp
mov
fwait
pop
adc
pop
jne
inc
mov
enter
xchg
sub
or
cmp
mov
test
push
inc
cmpsl
and
push
out
xlat
xchg
cmpsl
and
sub
add
in
imul
mov
xor
push
mov
lock
add
inc
sub
cltd
cmp
jecxz
ja
adc
add
mov
push
mov
in
iret
push
les
scas
movsl
mov
pop
outsb
jmp
cwtl
gs
push
les
mov
jmp
rolb
pop
in
or
fstl
sbb
jle
fscale
add
and
leave
pop
dec
jg
pop
imul
ss
lret
mov
imull
adc
lahf
scas
fcom
jp
fsubrs
loopne
fmull
shl
cmpsb
xor
pop
andb
mov
sbb
pushf
std
mov
addr16
mov
mov
mov
lods
push
ss
pop
scas
sbbb
jmp
mov
dec
test
or
push
aad
dec
mov
fmuls
mov
mov
jp
jecxz
dec
dec
mov
cmp
and
stc
xchg
add
fs
pop
adc
inc
adc
aaa
xchg
pushf
shlb
push
ja
xor
add
mov
lods
pushf
arpl
sub
xchg
push
data16
mov
xchg
push
jbe
out
push
adc
movsl
fisttps
test
dec
xlat
lcall
sbb
xchg
add
sbb
xor
stos
ret
push
ljmp
fld
inc
ficompl
jl
mov
mov
and
jbe
cmp
push
mov
dec
lds
mov
out
jb
pop
sub
or
jbe
ret
xchg
mov
xor
fwait
push
mov
cmc
cmp
cwtl
cld
xor
addb
add
hlt
adc
imul
aaa
fs
xchg
mov
jbe
add
xchg
test
fwait
push
xchg
dec
or
xchg
into
mov
test
andps
xchg
loope
add
mov
sub
mov
and
pop
aad
inc
mov
push
push
das
pop
adc
popf
int3
push
mov
add
insb
cwtl
jge
add
mov
push
jge
sbb
adc
into
fcoml
stos
cmp
shlb
mov
inc
xor
int3
mov
inc
inc
orb
lods
and
pop
pop
lret
inc
inc
mov
sub
test
int
ret
jns
cld
jp
xchg
test
mov
add
xchg
cwtl
aaa
jp
ret
scas
leave
or
jle
mov
decb
imul
mov
xor
inc
pop
js
shrl
xchg
cmp
xchg
xchg
loop
movl
mov
out
testl
daa
lods
or
aam
inc
pop
das
or
mov
fucom
mov
mov
pop
mov
dec
adc
es
ss
and
push
jmp
dec
push
call
sbb
cmc
xor
popa
sbb
adc
je
roll
jae
sub
call
sbb
ror
adc
inc
push
loop
call
pushf
call
pop
mov
shl
in
mov
dec
dec
lcall
loopne
or
xorb
cld
fisttpl
cmp
dec
dec
cld
out
imul
in
mov
cmc
add
pop
nop
jb
mov
mov
jge
aas
rcrb
pop
xchg
and
xchg
mov
jmp
mov
mov
jnp
mov
cmc
dec
sub
lcall
aas
ljmp
jns
cmpl
into
cs
jno
add
ret
mov
push
push
imul
sarl
shll
push
mov
jbe
call
xchg
shlb
pushf
adc
pop
mov
cmp
pop
out
lahf
ljmp
orb
rcrl
mov
pop
xchg
add
push
nop
cmp
insl
sti
out
adc
sub
add
pop
mov
pusha
mov
pop
lds
lret
mov
sarb
pusha
push
andl
jle
call
or
xchg
inc
ja
push
cli
out
pushf
insb
imul
add
sbb
or
ss
add
sbb
aam
cld
call
aad
cmp
loope
orb
ljmp
rcrl
xor
jge
and
aad
jo
jnp
outsl
jg
mov
pop
xchg
xor
xorl
lahf
loope
enter
add
out
aam
push
fwait
loop
mov
cli
clc
dec
mov
or
enter
jmp
loop
or
out
cmp
adc
cmp
push
mov
push
ficompl
in
dec
into
pop
inc
add
in
mov
dec
jb
push
std
or
mov
push
pop
fs
icebp
sbb
inc
xchg
cmp
sub
jge
and
in
cmpsl
push
mov
fsubl
xor
test
call
adc
jae
outsb
pushf
inc
sbb
ret
nop
mov
mov
fadds
das
cli
jg
rclb
outsb
je
inc
outsb
push
xchg
pop
clc
fisubrs
mov
push
mov
mov
pop
lea
scas
cli
and
jne
stc
nop
mov
test
iret
sbb
cli
jg
test
adc
sub
arpl
out
ds
mov
inc
movsl
cwtl
and
sbb
and
or
mov
dec
aas
repz
push
push
in
divl
jns
add
jl
push
in
xor
add
mov
cmp
enter
cmp
lds
xor
cmc
inc
leave
xchg
cwtl
fwait
adc
cmpsl
leave
xor
pop
fneni(8087
out
enter
gs
and
or
stc
scas
jne
sbb
mov
stos
jb
inc
sahf
loop
in
add
sti
lds
and
test
jmp
movsl
das
or
mov
pop
xchg
adc
pushf
imul
sbb
jnp
rorb
das
lea
lods
adcb
mov
dec
rorb
push
mov
data16
xor
sbb
fistpl
mov
jno
test
aam
push
out
inc
add
daa
lods
cli
ret
add
xor
loopne
inc
ficoml
adc
dec
and
push
dec
aam
dec
cmpsb
stos
lds
xchg
lock
or
mov
jle
leave
mov
test
pop
loope
dec
shll
dec
fucomp
inc
inc
orb
notb
pop
daa
or
mov
shll
sbb
pushf
shlb
sub
push
push
fldt
ja
test
aam
loope,pn
push
xchg
out
mov
sbb
outsl
out
xor
add
sbb
lods
push
addr16
sbb
lods
sbb
fstpl
mov
pop
jnp
pop
jmp
jo
lds
dec
ficoms
in
fs
cmp
ds
dec
in
pop
bswap
cltd
sub
ljmp
rcrb
pusha
push
fistps
daa
cmc
or
jo
test
in
xor
sbbl
cmpsl
jmp
push
lcall
cmp
sbb
adc
inc
pushf
roll
sahf
xor
lret
lahf
mov
pop
inc
ds
pop
movsb
iret
pop
jbe
push
cmp
dec
pop
mov
aas
xchg
popa
inc
movsb
adc
scas
ret
add
and
rcrl
jmp
adc
push
jb
repnz
mov
sub
test
sbb
test
movsl
bound
jb
lea
inc
mov
jle
cwtl
in
ss
imul
or
xlat
inc
add
mov
fidivrl
stos
push
xor
ret
aam
sub
add
xor
jno
data16
xor
mov
xor
aaa
mov
jmp
or
int
pusha
mov
sub
sbb
fidivs
pop
dec
pusha
push
insb
mov
mov
push
xchg
xchg
adc
push
jae
fistl
rcrb
movsb
loop
or
mov
rorb
leave
test
or
aas
add
fdecstp
in
adc
clc
cld
nop
jg
cmp
cmp
out
xchg
repz
cwtl
pop
enter
pop
addr16
shl
mov
das
push
sbb
push
mov
das
mov
add
pop
lahf
orb
je
jns
xchg
insb
nop
pop
sub
push
out
lods
mov
mov
ret
and
sub
xlat
cmpsb
pop
pushf
cmp
out
fidivl
popa
inc
xor
fistps
pop
jbe
dec
loop
loop
mov
adc
push
movsl
pusha
fldl
dec
fnstsw
dec
nop
mov
and
mov
scas
dec
ds
addr16
div
in
dec
iret
fwait
xor
fucom
imul
movsl
pop
mov
clc
pop
inc
sbb
jae
sub
jp
inc
aad
mov
jmp
test
outsb
cld
inc
inc
enter
pop
notb
into
push
push
mov
pop
lcall
loopne
jo
and
and
jg
xchg
mov
outsb
push
mov
add
pop
subl
lret
sub
sub
call
mov
mov
adc
mov
insl
test
mov
pop
mul
fucompp
js
scas
xor
loopne
xchg
aad
dec
mov
loope
test
xchg
iret
add
push
jb
pop
xor
push
xchg
scas
add
mov
out
sub
inc
cmp
shlb
mov
add
subb
sub
stc
mov
aas
test
sbb
push
test
arpl
add
aam
add
sbb
jbe
movsl
js
fs
xor
aad
outsb
mov
jle
inc
push
and
sbb
sbb
inc
gs
fs
mov
aaa
lahf
bound
lds
mov
xchg
mov
mov
xor
mov
and
mov
stos
mov
mov
je
sbb
add
pop
inc
into
push
xchg
push
dec
stc
pop
add
inc
or
xchg
iret
and
and
scas
stos
enter
sbb
cmp
cmpsb
pusha
adc
pop
jge
or
fwait
or
cmp
xchg
loop
imulb
insl
inc
imul
push
jge
mov
dec
enter
xor
xchg
divl
pop
movsb
inc
lahf
popf
stc
loopne
mov
loopne
rol
sub
mov
or
mov
sbb
adc
mov
and
pop
lahf
jmp
inc
inc
ss
popf
gs
leave
in
inc
popa
jecxz
lock
push
jae
adc
roll
fiaddl
pop
into
cmc
mov
enter
nop
sti
mov
mov
lods
sub
xchg
scas
xlat
or
inc
rdmsr
jae
ds
mov
std
mull
cmpsl
out
addl
out
adc
test
adc
sub
mov
jno
cmpsb
sbb
cmp
mov
shll
add
js
cmp
sbb
adc
pop
xchg
and
lds
es
lahf
in
push
push
cmpsl
clc
fsts
rolb
mov
fidivl
aad
int3
and
push
and
inc
dec
cmova
test
jae
cmpsb
dec
and
jge
and
xor
pushf
in
jp
jo
test
mov
jb
lcall
popa
add
and
pop
loop
pop
jb
or
jnp
in
repnz
adc
mov
sub
pop
je
call
mov
and
insb
shrl
push
idivb
mov
xor
std
fstpl
xchg
movsl
shll
stc
ss
jbe
mov
mov
or
sub
xor
sahf
pop
sub
pop
push
lock
adc
push
adc
movsl
xor
or
mov
pop
rcr
arpl
jmp
icebp
add
push
mov
cli
sbb
jg
int
rcrl
sbb
inc
jno
cmpsl
js
or
ficoml
mov
xlat
leave
test
xor
or
or
fidivl
or
xor
lcall
in
push
mov
les
js
mov
add
iret
movsb
xor
call
popf
hlt
js
sarb
insb
ret
imul
mov
addr16
add
xchg
mov
dec
or
movsl
call
add
mov
mov
sub
jecxz
lods
lock
cli
testl
imul
out
test
pop
lcall
iret
cmp
sbb
push
aad
pusha
hlt
bound
aaa
movsl
mov
movsb
test
mov
sbb
out
xor
dec
and
lahf
cwtl
insb
pop
subl
stc
shll
cmp
xor
push
mov
scas
jb
imul
sbb
imul
bound
add
cmp
lret
lret
mov
and
test
add
sbb
out
xchg
mov
outsl
cmp
pushf
lods
sbb
xor
sub
jno
push
adc
add
dec
sub
cmc
sahf
clc
ret
add
push
imul
pop
rclb
push
lcall
pop
jb
adc
out
pop
mov
dec
ljmp
data16
and
imulb
pop
fs
leave
jns
sub
out
sahf
imul
xchg
inc
outsl
gs
and
jmp
and
stos
push
xchg
pusha
and
push
into
pop
es
xor
ret
push
xor
jno
aas
movsb
lcall
sub
shrb
jmp
xchg
ss
cmpsb
fsubrl
and
cmp
push
pop
jb
cmp
push
mov
nop
pop
and
loop
xchg
sti
sbb
mov
pop
and
mov
lcall
cmp
xchg
lret
sahf
inc
mov
and
shl
pop
aaa
daa
fwait
adc
jle
das
mov
xchg
in
ret
cmpsb
cmp
lret
jecxz
stc
std
imul
mov
mov
in
in
inc
inc
pop
test
mov
jne
adc
and
cwtl
push
in
ret
xor
out
or
pushf
xor
repz
jno
inc
sarl
add
mov
prefetch
ja
lock
mov
dec
sub
sahf
outsl
mov
dec
sbb
ret
inc
push
pop
clc
icebp
fs
nop
sub
mov
jns
lea
test
scas
cmp
sub
out
add
jnp
aam
mov
jmp
cmp
push
or
pop
iret
test
andb
imul
iret
jo
arpl
mov
lock
mov
xchg
loopne
in
mov
mov
stos
cmpsb
gs
mov
mov
stos
xchg
xchg
mov
sti
cltd
pop
stos
sbb
les
sbb
lret
in
lds
push
ret
jmp
dec
enter
jnp
addb
adc
mov
sub
mov
jbe
push
hlt
imul
pop
clc
pushf
cld
int
lret
sub
out
dec
ss
ljmp
daa
xchg
loopne
in
leave
adc
lahf
jnp
mov
dec
mov
sahf
cmpsb
subl
aad
inc
inc
and
ljmp
loopne
dec
adc
aaa
or
leave
pushf
shl
cwtl
xchg
out
ss
adc
lret
push
ljmp
add
push
cli
sub
jbe
movsl
divl
mov
xor
xchg
pop
movsl
xor
sbb
subb
cmc
sbb
aam
pushf
inc
pop
or
mov
rorb
rcll
or
inc
adc
mov
push
sub
and
mov
jo
adc
in
fwait
jl
shl
fwait
rcr
es
clc
or
fbld
aam
aad
adc
test
fmuls
pop
rolb
outsl
sub
cli
outsb
test
sub
push
out
push
in
cs
mov
cmp
sub
mov
sbb
dec
fcoms
add
in
in
push
push
mov
xchg
dec
es
mov
add
push
out
negl
jno
movsl
inc
sbbl
xchg
out
lea
rclb
mov
push
add
cmp
and
xchg
jmp
cli
bnd
stos
into
mov
cmp
or
mov
sub
cmc
sbb
or
push
pusha
pop
pop
xchg
lea
js
ds
inc
inc
or
lret
push
xchg
stos
push
sub
xor
push
dec
add
ficomps
jmp
fs
fucomi
sbb
jo
and
xor
repz
fdivrs
out
xor
jle
add
popf
insl
fwait
out
xchg
xor
test
pop
push
mov
in
xchg
je
insl
pop
and
xchg
ja
pop
movb
pop
icebp
dec
mov
inc
cmc
mov
pop
mov
add
inc
pop
xchg
xor
lret
mov
mulps
push
jbe
fldenv
out
fdivl
es
adcl
or
add
negl
sbb
fwait
xchg
mov
std
xchg
xor
fdivrs
push
mov
or
push
popf
xor
movsb
mov
mov
sahf
int
mov
clc
sbb
mov
xor
jp
inc
je
inc
outsb
repnz
mov
lret
mov
xor
pop
fisttpl
dec
jecxz
popa
call
bound
push
fsubs
add
es
jp
adc
es
cs
ss
jbe
aaa
xchg
sbb
fwait
stos
and
sbb
add
std
or
and
stc
outsb
add
sub
sub
lahf
xor
ret
into
push
aaa
mov
out
sub
test
add
sbb
mov
testl
sbb
insl
cmp
xor
pop
sub
cltd
push
mov
mov
movsb
adc
dec
inc
adc
pusha
jmp
sarb
ja
pop
loopne
cwtl
pop
aad
sbb
mov
int3
rclb
jno
daa
or
mov
out
incb
jle
or
push
shl
or
mov
out
adc
imul
movsl
jae
lods
sub
pop
das
lret
clc
inc
ss
sub
loop
sub
test
dec
cmpsb
xlat
mov
and
dec
push
xor
pop
xchg
sub
or
inc
hlt
fildll
pop
aaa
push
mov
out
jg
dec
mov
adc
inc
into
cmpsl
sahf
arpl
rorb
lret
sub
shlb
scas
inc
loope
ret
jnp
push
add
das
inc
cld
jle
xchg
jg
jp
xchg
cmp
pop
mov
mov
rorb
mov
jp
sub
push
fistps
sbb
int3
call
inc
movsl
or
pop
fcoml
inc
mov
gs
bound
push
dec
rolb
mov
jno
leave
pop
xchg
rsm
testb
push
add
fstps
mov
push
inc
jne
dec
rcl
test
aam
mov
jmp
nop
mov
jb
cmp
mov
lcall
lcall
xchg
pextrw
mov
cmpsb
movswl
addl
lret
lret
mov
out
mov
aas
scas
lret
mov
inc
popa
scas
xchg
lcall
mov
sahf
fistps
negl
int
cli
fidivl
movsb
jo
shrb
pop
lahf
dec
gs
fldcw
xchg
idivb
add
jb
sub
xchg
pop
arpl
mov
mov
push
push
xchg
jecxz
push
ret
cmpl
or
push
adc
into
outsb
repnz
lret
lods
pop
adc
push
pop
clc
test
mov
inc
push
lret
or
lea
inc
icebp
aam
repnz
call
imul
inc
divb
lcall
popl
inc
das
jge
push
pop
xchg
mov
lcall
mov
fisttps
jnp
jle
in
xchg
popl
movl
or
mov
cmp
inc
push
push
out
inc
mov
mov
sbb
enter
adc
xchg
subb
xchg
mov
dec
bound
inc
pop
jae
cmp
xor
jmp
add
pop
push
pop
mov
scas
jle
push
mov
fcoms
pop
xchg
imul
add
in
mov
dec
mov
cmp
and
mov
or
lea
jp
sub
sti
mov
jbe
add
aad
cltd
jmp
rep
loop
js
stos
jo
adc
ja
je
xor
aaa
out
push
xor
jo
inc
mov
lret
jle
mov
or
or
dec
jbe
fdiv
xor
mov
cwtl
jg
xchg
jbe
xor
roll
mov
in
ss
or
mov
xchg
push
insl
cli
data16
jmp
mov
dec
jo
outsb
int
orl
dec
xchg
mov
mov
divb
cli
jnp
scas
jmp
faddl
push
inc
popa
xchg
inc
out
lods
daa
rolb
push
subb
xchg
aaa
mov
adc
pop
stos
push
push
xor
jb
sub
rcl
pop
add
cmpsl
ret
sbb
xchg
pop
dec
mov
cltd
repz
add
scas
dec
cld
fmuls
fldenv
sbb
testb
add
addl
mov
fsubrl
cmp
mov
inc
adc
loopne
jle
adc
shlb
xor
lock
push
nop
aad
or
repz
xchg
ja
cmpsl
dec
add
add
xor
pop
cmp
fstl
fimuls
std
loop
in
push
test
adc
xor
jbe
pop
jmp
xor
and
push
mov
mov
jno
xchg
mov
mov
jge
in
test
inc
xchg
or
push
outsl
inc
inc
push
addl
lahf
test
mov
mov
scas
cltd
mov
xor
push
add
or
xchg
pop
mov
mov
jmp
pop
mov
push
ret
outsl
das
in
clc
cld
pushf
sbb
adc
mov
xchg
leave
sahf
mov
data16
dec
js
push
jb
or
inc
xchg
ret
add
idivb
push
js
mov
je
outsb
xor
lods
jle
dec
sbb
es
stc
fisubl
push
rorb
call
sbbl
adc
fisttps
adcl
dec
sub
cmp
sbb
push
pop
imul
push
push
xor
mov
pop
pop
inc
sbb
sub
add
es
dec
jg
mov
mov
std
insb
mov
add
scas
out
mov
imul
push
jne
out
mov
cwtl
addl
daa
aas
int
add
inc
fsubrl
xor
lods
clc
orb
fwait
dec
aad
int
lock
mov
insb
int3
adc
cmpsb
xor
mov
inc
jecxz
shlb
lods
push
pusha
ret
fistl
push
sahf
xor
or
int
or
mov
xchg
loopne
jecxz
orb
cld
enter
jle
mov
lock
and
rcll
int
and
jne
sub
les
or
push
inc
roll
inc
or
hlt
add
add
mov
xchg
xchg
mov
lret
mov
je
push
add
mov
mov
cmp
sbb
aam
pop
call
inc
sbb
xor
call
mov
stos
inc
xchg
dec
jg
cmp
or
sub
cmp
mov
add
std
ds
or
hlt
bound
cli
dec
mov
mov
jle
aaa
mov
mull
orb
scas
jg
ds
xchg
js
cli
jp
and
pushf
jle
out
cmp
lret
sub
xor
sbb
movsb
pop
inc
lret
ret
fs
or
cmp
repnz
dec
pop
xlat
jle
jmp
push
adc
bound
and
jmp
gs
xlat
ds
ret
ret
inc
out
es
inc
sub
gs
clc
mov
mov
movsb
dec
xchg
xor
cmpsl
clc
mov
jmp
sbb
sbb
cli
scas
jmp
pop
ret
pushw
in
mov
mov
or
push
pop
jb
xchg
js
loopne
out
and
mov
sbb
iret
rcrl
and
xchg
es
cs
cmpsl
int
add
fadds
xor
vmovlps
mov
sub
mov
or
frstor
inc
push
mov
adc
pop
imul
ja
dec
cltd
sbb
and
ss
out
xchg
mov
dec
cmp
pop
cmpsb
sbb
cli
lret
js
jne
iret
insl
push
cmpsb
std
lds
sahf
mov
stos
inc
scas
inc
xor
mov
jp
cmp
mov
ljmp
bound
and
jle
dec
hlt
sahf
cltd
stos
mov
ret
push
pop
jge
xor
push
add
push
xor
push
call
dec
mov
xchg
dec
mov
bound
mov
jae
xor
out
in
cmpsl
pop
xchg
jbe
jnp
loope
aas
icebp
adc
mov
and
cmpsb
dec
jo
push
cmpsb
into
addr16
cli
pop
jge
mov
and
sarb
jns
sbb
xchg
add
adc
pop
lods
arpl
adc
inc
ja
fisubs
push
sub
push
data16
push
xchg
ja
popa
sub
and
xchg
lret
mov
cmpsb
mov
rcl
in
addr16
test
inc
and
repz
sub
cs
cmp
int
rol
cmp
mov
inc
test
stos
push
adc
push
cwtl
repnz
xchg
adc
xchg
shr
dec
mov
xchg
shll
cmp
andl
xor
push
mov
data16
mov
shl
push
add
lods
sarl
cli
rorl
fdivrs
jno
insb
xchg
jns
out
adc
test
jae
aad
pop
cmp
ficompl
and
mov
sahf
scas
lret
out
shlb
cmp
out
cmpsb
dec
lcall
dec
and
incb
mov
jae
jle
test
xchg
or
pusha
std
dec
mov
jb
das
push
add
sbb
aam
movl
scas
push
lcall
push
scas
dec
je
movsb
mov
sub
adc
shll
sahf
or
aaa
push
adc
cmp
repnz
fwait
mov
inc
xor
clc
inc
mov
sbb
dec
dec
fucomip
shlb
xchg
int3
push
mov
mov
leave
aas
scas
mov
mov
addl
into
mov
shll
or
jb
xor
test
cmp
dec
or
jns
mov
push
push
mov
out
inc
outsb
cwtl
sub
xor
inc
repz
out
out
dec
subl
jne
sub
rclb
stos
leave
stos
negl
jl
pop
xlat
dec
testb
setno
insb
lods
xor
aas
or
les
pop
aaa
push
int
icebp
dec
pop
cmp
jb
adc
xlat
imul
lcall
das
movsb
push
or
sub
adc
jecxz
lods
mov
fisttps
int3
sarl
fidivrs
je
jno
out
lock
test
inc
lcall
mov
dec
mov
mov
cmp
lea
shll
lret
les
rcll
lret
add
imulb
pop
ret
adc
push
add
xchg
xchg
out
push
lahf
das
sub
roll
clc
das
and
fst
xchg
xor
in
cmp
ret
fistps
sub
fstps
add
icebp
insl
icebp
dec
pop
ja
in
fstpl
sbb
xchg
xchg
fwait
or
mov
mov
pop
scas
mov
mov
inc
inc
cmp
mov
mov
mov
test
xchg
mov
xchg
adc
std
push
aaa
sbb
subb
pop
popl
dec
xorl
movsl
das
push
mov
or
mov
rclb
sti
pop
imul
xor
imul
sub
test
push
adc
adc
cmp
cmc
fiaddl
adc
inc
add
lods
and
cmpsl
rcrb
pop
cmp
call
test
arpl
inc
push
jg
pop
testb
inc
mov
push
stc
dec
inc
jg
stos
push
or
rclb
js
dec
jl
adc
clc
dec
icebp
xor
jno
in
out
enter
nop
mov
pop
dec
pusha
subl
add
pop
sub
out
das
bound
lret
out
ja
addr16
cwtl
mov
dec
into
jb
mov
dec
jbe
mov
adc
push
lret
cs
mov
mov
sahf
cwtl
adc
and
pop
jnp
dec
inc
loope
xchg
cmp
pop
xorl
in
jle
js
ret
mov
push
into
inc
test
xor
cmpsl
xchg
out
fsubs
aas
ljmp
sub
pop
insb
jp
in
mov
push
or
cmovg
cmp
and
shr
insb
pop
call
xor
sahf
push
stos
xor
mov
adc
mov
cmp
sub
hlt
sbb
les
xchg
push
add
push
aas
jb
test
leave
jbe
jmp
js
sbb
mov
xlat
bsf
fs
inc
mov
test
and
jge
or
push
mov
or
int
jecxz
mov
int3
enter
sub
dec
dec
aaa
push
jno
inc
jno
test
inc
or
push
cmpsl
lock
orb
adc
xchg
scas
mov
mov
xchg
out
pop
nop
sbbl
pushf
dec
lods
pop
aaa
push
mov
push
jp
out
mov
xor
cmp
mov
pop
enter
mov
dec
add
and
push
cwtl
int
mov
adc
jmp
fisubrs
mov
mov
aad
fnsave
imul
dec
fs
xchg
lahf
nop
pop
mov
jb
enter
shl
mov
mov
fmuls
repz
jns
loopne
ljmp
stos
push
movsb
cmc
or
add
movsl
jbe
aad
sub
incl
loope
xor
popa
inc
ljmp
mov
loopne
inc
mov
xchg
or
in
scas
mov
pushw
push
sbb
xor
cmp
push
insb
mov
xlat
jo
xor
and
or
out
mov
jle
jle
in
out
jbe
mov
cmpsb
push
dec
pop
xor
xor
and
mov
iret
stc
jmp
jmp
lcall
push
push
and
inc
sahf
add
sub
jmp
addr16
cmpsl
mov
cwtl
mov
lret
and
fsubrl
in
fsts
pop
fwait
cli
jge
test
pop
rcl
inc
dec
je
mov
push
insl
mov
shrb
out
pushl
je
xchg
adc
or
aam
out
je
loopne
mulb
aad
das
and
aas
jg
hlt
adc
jns
mov
inc
xchg
loope
xchg
push
sbb
jecxz
lods
adcl
in
push
xchg
lods
cmovne
cmc
mov
fsubrs
gs
dec
xchg
or
ja
mov
sub
add
push
push
mov
mov
mov
in
xchg
push
add
frstor
jge
push
cmp
stos
jo
dec
sub
dec
cmp
mov
dec
mov
sub
push
lock
sub
xchg
or
inc
push
cs
or
pop
jle
xor
shrb
hlt
repz
sbb
and
push
push
mov
mov
sub
incb
rolb
bound
or
mov
and
in
fcmovb
rol
in
daa
jb
stos
xchg
cwtl
push
mov
cmp
sub
test
xor
push
js
cmp
mov
xchg
xor
enter
cmp
or
div
dec
movsl
xor
jl
jbe
push
add
mov
imul
sub
sti
inc
pop
or
inc
clc
or
leave
shrl
clc
jecxz
xor
xor
fcomps
flds
insb
inc
jmp
add
jmp
sbb
js
cs
cmp
mov
pop
insb
xchg
push
push
dec
shlb
lock
pop
xor
into
sahf
add
daa
or
sahf
dec
outsl
xchg
rcrb
cmpsb
add
push
popa
lret
jmp
scas
dec
mov
mov
dec
out
inc
mov
push
out
sub
push
xor
push
sub
inc
ss
dec
fisubrl
dec
jbe
popa
jno
xor
cmp
jmp
cmp
out
fistl
jge
repz
xor
test
cmp
mov
pushf
ljmp
aad
sbb
inc
cli
mov
dec
xchg
arpl
mov
imul
sarl
or
push
out
sub
gs
sbb
xor
cmp
mov
sti
icebp
loopne
push
rol
xchg
out
mov
adc
adc
dec
mov
lret
dec
aam
dec
popf
test
movsb
push
jecxz
imul
mov
sub
aaa
out
in
and
inc
xchg
pushf
mov
jge
icebp
inc
frstpm(287
add
fdivrl
aaa
pop
es
outsb
cltd
nop
inc
popw
mov
addr16
push
gs
push
insb
xchg
mov
subl
xchg
sarl
cmpl
pop
push
jno
movsl
mov
dec
pushf
xor
ja
decl
lods
daa
mov
out
mov
mov
pushf
inc
push
pop
pop
dec
cmp
fdiv
scas
mov
jg
mov
cmp
push
call
mov
mull
lret
fldl
sub
add
push
aaa
jle
lock
mov
popl
inc
fwait
sbb
cltd
nop
stos
xchg
inc
les
push
adc
dec
andl
movl
stc
test
scas
or
repnz
pop
push
push
or
fildll
cltd
fisubrl
arpl
jb
int3
mov
testl
pop
in
sti
mov
dec
sbb
jle
pop
stos
pop
mov
mov
ljmp
mov
mov
mov
ret
outsl
xor
push
out
dec
enter
xor
add
push
in
mov
push
mov
decb
fs
pop
je
or
and
test
push
mov
jbe
scas
xchg
pop
sbb
mov
mov
mov
aad
sti
jg
fnsave
divl
mov
add
jnp
scas
push
fsubr
sub
sbbl
dec
mov
dec
xchg
cmp
repnz
push
add
shrb
std
and
jmp
xor
dec
push
cmpb
clc
push
mov
jbe
leave
aad
push
stc
sbb
push
roll
sub
xor
je
nop
dec
sahf
push
adc
push
lcall
cmp
inc
pop
movsb
orl
inc
and
and
and
js
sub
repnz
pop
out
mul
mov
std
push
jbe
mov
lods
add
int3
lock
xor
push
dec
lahf
adc
and
add
add
dec
scas
outsl
adc
xor
je
mov
dec
lods
cmp
sbb
cmc
pop
inc
pop
test
pop
dec
in
adc
mov
mov
dec
jns
sbb
dec
add
cmp
ret
xor
inc
mov
scas
push
ds
aaa
jle
sbb
mov
leave
cmp
push
inc
jge
inc
and
jp
int3
out
cmp
cmp
mov
inc
loope
xchg
daa
mov
fwait
inc
pop
shlb
adcl
icebp
mov
xor
pushf
fisubrl
adc
int3
sbb
cmc
lcall
into
push
or
inc
push
fcmovnbe
inc
fadds
repz
cmc
jmp
sbb
jns
mov
test
lahf
and
testl
adcb
add
xchg
push
orb
movsl
mov
dec
mov
ljmp
jnp
into
sbb
dec
movsl
lahf
scas
test
lds
stos
and
int3
cmp
nop
push
data16
movsb
pop
sbb
shrl
ror
adc
loop
adc
add
lret
push
mulb
push
in
inc
pop
push
fdivl
sub
pop
mov
mov
lret
scas
in
fwait
push
fstpt
pusha
xchg
bnd
xchg
mov
data16
mov
shrl
push
mov
sbb
add
cmc
xor
mov
cld
dec
test
cmp
add
xchg
fistpl
lret
test
add
sub
pop
andb
jge
and
sub
pop
fnstenv
push
dec
add
lret
mov
pop
ret
andb
xchg
inc
aam
insl
mov
push
xchg
rorl
test
inc
dec
into
inc
loopne
sub
icebp
out
mov
scas
push
cli
negb
cs
mov
push
inc
xor
pop
add
pop
jg
rcrl
arpl
stc
inc
push
add
subb
les
fisubrl
add
dec
leave
dec
sub
js
mov
mov
bound
ret
out
jg
xchg
call
and
daa
or
cmp
adc
sti
das
rol
mov
add
loop
sub
sbb
pop
out
push
dec
fs
fmull
add
jecxz
lret
enter
pop
and
nop
mov
sarl
leave
data16
lock
loopne
sub
jg
xchg
enter
sbb
jo
sti
insb
test
enter
mov
or
fadd
adc
cmpsb
mov
sbb
pop
cmc
es
inc
xchg
push
add
test
jmp
jg
in
clc
xchg
arpl
adc
inc
mov
adcb
out
pop
call
mov
lea
adc
insb
jmp
mov
mov
xchg
mov
lcall
mov
sarl
push
xor
arpl
in
ret
fsub
jmp
enter
push
push
sub
sbb
xor
sbb
or
mov
jnp
pop
pop
mov
cmp
pop
xor
movsb
xor
xor
aam
and
sbb
fadd
jnp
out
ret
sbb
add
movsb
push
fstpt
pop
imul
mov
stos
fistps
or
aaa
negl
sub
cld
insb
addr16
aam
jne
xor
xchg
inc
cmp
mov
xchg
leave
lret
xor
ret
pop
xchg
cmp
cmp
hlt
or
movsl
lret
ljmp
xchg
pop
lret
push
mov
cmc
push
shll
jp
jo
in
mov
leave
cmp
std
cmp
pop
dec
cmp
jp
sub
mov
gs
clc
push
aas
cmp
add
ja
cmpsb
rolb
push
pushf
dec
ds
jne
pop
cmp
repz
adc
push
cmpsb
mov
xor
daa
adc
or
and
and
xlat
pop
jp
xchg
out
push
sbb
xchg
push
cltd
dec
jle
lods
jbe
dec
sub
jg
mov
push
add
xchg
subps
mov
xlat
mov
mov
xchg
mov
or
mov
ja
and
dec
add
fisttpll
inc
mov
pop
cmpsb
jnp
pop
shlb
mov
adc
push
insb
pop
mov
and
xor
sbb
je
sahf
fdiv
int
imul
pop
mov
sub
faddl
repz
xor
jo
dec
push
decl
ss
xor
jle
in
mov
ja
and
out
adc
ret
or
arpl
cmpl
ret
or
inc
outsl
mov
lret
xchg
arpl
loope
xchg
jge
jne
mov
inc
cmc
test
pop
jne
pop
sbbb
dec
pop
sti
push
xchg
add
jecxz
inc
inc
orl
push
aas
jne
pop
imul
es
push
mov
scas
sub
sub
xlat
push
cmp
loope
lret
sbb
addr16
dec
mov
sub
or
cwtl
and
jb
lcall
jbe
es
push
pop
xor
sub
out
rcrb
cs
fsubp
inc
lahf
mov
xor
fucom
xchg
lahf
pop
mov
das
nop
push
je
out
xchg
or
xor
mov
popl
inc
add
xor
hlt
add
xchg
aas
or
ss
and
add
rorb
xlat
push
pop
xor
scas
shll
pop
loopne
xchg
add
cmpsl
inc
cmp
adc
and
dec
sbb
ret
outsb
push
jecxz
mov
add
pop
andl
sbb
mov
inc
lods
in
pop
mov
lret
fistl
das
dec
mov
outsb
out
subb
rcrl
shr
sub
cmp
and
inc
inc
lret
repz
push
push
cmp
lcall
jmp
sbb
out
jbe
imul
aad
and
aam
xchg
jb
lret
and
subl
sbb
push
int3
push
cli
test
push
xor
jp
loop
dec
jae
add
clc
inc
mov
mul
imul
jae
and
lods
cmp
add
in
push
mov
movsb
rcrb
aad
mov
daa
lahf
loopw
pop
mov
ret
ret
inc
cs
jle
mov
sbb
xchg
lcall
idivl
js
dec
pop
xchg
scas
jp
pop
xchg
call
jo
outsl
jno
sbb
sbb
daa
rorl
cltd
bound
mov
mov
cltd
mov
lcall
mov
sahf
jg
mov
push
and
jg
lret
jle
push
add
divl
out
and
aaa
fmul
push
daa
dec
push
xchg
test
es
cmp
add
lods
cwtl
push
pop
hlt
lock
mov
and
popf
mov
loope
cmp
xor
xchg
repnz
inc
xlat
xor
pop
aas
insb
mov
jle
cmp
in
in
adc
mov
mov
adc
mov
jl
xor
ret
cwtl
xor
add
pop
lea
cmp
adc
insl
das
mov
cwtl
jo
pop
stos
pop
cmpsb
adc
add
adc
aad
fimuls
xchg
jp
and
imulb
std
movsl
mov
sub
daa
mov
jg
adc
sahf
iret
pop
in
sbb
das
push
ficoml
push
dec
jnp
sub
xchg
mov
out
push
outsl
cmp
sbb
icebp
stos
js
dec
dec
in
scas
imul
jb,pn
mov
push
push
lds
leave
mov
pusha
dec
lret
dec
pusha
filds
lret
mov
jmp
cmpsb
xchg
out
mov
sbb
sbb
or
testb
icebp
add
loopne
rcrb
xorl
in
daa
push
xchg
pop
pop
bound
shlb
cwtl
int3
or
lods
popa
ds
xchg
fisubrs
lock
in
cmp
jb
xchg
ret
cmp
jb
aad
ficompl
inc
push
inc
sub
dec
es
out
add
pop
sahf
cli
xchg
and
movsl
test
inc
jno
test
jmp
faddl
lods
dec
faddp
xchg
lret
test
sbb
sahf
test
mov
jp
pop
inc
mov
pop
fadd
push
mov
xchg
je
dec
nop
cmp
inc
cld
push
inc
or
sbb
rcrl
mov
xor
fiadds
or
or
ficoms
hlt
cmp
pop
cmp
pop
sub
movsl
psubb
leave
cmp
sub
push
dec
pop
loop
jmp
icebp
movsl
pusha
sub
and
and
xlat
mov
jne
out
lds
in
add
es
inc
mov
xchg
mul
pop
in
mov
stos
jmp
cwtl
add
and
daa
out
push
jl
pop
ss
push
outsb
arpl
and
imul
mov
leave
stc
stc
adc
adcb
fs
rorb
cmpsl
fwait
sbb
mov
jl
insb
jae
popf
fistpll
adc
bound
ja
cmp
push
xchg
ljmp
jno
out
aad
in
lret
mov
add
sbb
icebp
jl
jle
mov
filds
dec
xchg
lods
lds
cs
adc
push
cmp
iret
stos
fwait
mov
int
mov
stos
rorb
add
aad
shr
test
push
and
stc
bnd
mov
leave
movsl
repnz
ror
dec
popa
scas
adc
xchg
mov
xlat
push
into
inc
sarl
push
jne
fisubrs
mov
loopne
adc
mov
mov
or
icebp
jp
clc
pop
xor
pop
sub
sub
stos
inc
shll
fdivrl
push
idivl
js
ljmp
dec
shll
icebp
ja
sub
cltd
pop
ja
cwtl
mov
pop
dec
mov
ja
mov
pop
add
jp
sbb
pop
insb
mov
or
push
aad
sbb
mov
insb
pop
pop
and
popa
mov
imul
xor
into
pop
dec
imul
pop
pop
dec
adc
hlt
icebp
int
push
bound
pop
pop
push
lock
or
jbe
jmp
sub
in
iret
adc
outsb
hlt
push
xor
lds
in
js
mov
xchg
mov
ljmp
outsl
add
filds
pop
fmull
cli
push
out
adc
dec
cwtl
pop
outsb
and
add
idivl
incl
test
xchg
test
jmp
sub
rcpps
xchg
mov
insb
cmpsb
bound
jmp
push
mov
cmp
punpcklbw
div
xchg
iret
fistpll
mov
lret
fistpll
jne
cs
push
loopne
mov
into
jae
jno
cltd
mov
dec
les
in
andb
adc
fldl
scas
push
loope
rol
lret
pop
push
mov
push
js
hlt
inc
imul
or
stos
pop
cwtl
pop
out
xchg
repnz
cmp
sahf
cld
aam
mov
push
test
mov
shl
sbb
pop
inc
inc
jl
lock
aaa
fildl
jno
xor
sub
lahf
jp
repz
add
outsb
push
xorb
xchg
sbb
push
in
push
adc
std
pop
int3
mov
shl
xorl
mov
pop
mov
xchg
cld
cmpl
lock
adc
mov
fidivl
sub
loop
cmp
aas
pushf
pop
or
loopne
pop
int
cmp
jo
push
das
xor
inc
jbe
and
sti
int
add
mov
lahf
sbb
xchg
pop
jg
xor
gs
sub
xor
pop
xchg
and
sbb
xlat
cmp
popf
mov
call
mov
mov
mov
mov
push
mov
sbb
ffree
int
sahf
sahf
imul
out
rcll
push
insb
dec
sti
xor
sbb
mov
xor
pop
aad
scas
mov
pushf
xor
jo
inc
out
jbe
push
jle
dec
sub
sbb
lds
and
mov
jecxz
inc
mov
and
push
fisttpl
fdivp
cmpl
jb
decl
sub
push
adc
jb
cmpsl
mov
mov
test
xchg
sbb
lock
into
pusha
leave
jae,pn
xor
sbbl
and
and
in
xor
or
and
lret
test
outsl
xorl
lods
pop
or
sub
push
mov
jno
jb
add
aas
xor
dec
pop
ffreep
fcomip
xchg
test
xchg
and
pop
jns
mov
sub
cwtl
mov
and
or
cmp
fidivrl
lea
sub
lahf
syscall
pop
jnp
mov
flds
dec
insl
mov
daa
cmp
outsb
lahf
pusha
jo
jmp
ficomps
sub
jb
lcall
sub
add
mov
insl
sbb
shrl
dec
xchg
scas
lods
in
mov
adc
xor
loop
sti
and
xor
mov
or
sbb
or
adcb
mov
stos
roll
jmp
mov
push
out
fs
rcr
repz
push
outsb
mov
fnstsw
mov
adc
push
dec
aad
les
outsb
pop
mov
xchg
push
ljmp
adc
pop
iret
add
push
xor
jns
lods
es
xchg
and
jbe
inc
push
add
dec
and
mov
jns
mov
push
cltd
jne
les
scas
xorw
mov
test
and
sub
out
shr
cmp
mov
sti
jb
pop
enter
sub
pushf
mov
in
mov
pop
orb
cmp
xchg
es
out
mov
mov
sbb
mov
pop
movsb
dec
lock
sub
mov
sbb
inc
mov
inc
insb
inc
imul
and
mov
in
lret
outsb
or
inc
fadd
jbe
add
push
mov
ja
cmpsb
in
std
add
test
sarb
cs
insb
xor
xor
sub
scas
mov
dec
xchg
testb
or
jns
fisttpl
icebp
adc
imul
nop
fmuls
andl
inc
outsl
ss
popa
sub
shr
jge
out
pop
pop
adc
ror
hlt
push
push
or
inc
bound
mov
cmp
test
pop
mov
divb
xchg
mov
mov
cmp
sbb
jno
nop
inc
js
repz
cmc
shrb
mov
call
loop
pop
or
fidivs
cltd
push
test
pop
inc
jle
mov
cmp
cmpsb
jmp
pop
pop
std
push
inc
out
jl
aas
das
popa
push
pop
and
ljmp
sbb
sbb
out
or
in
das
insl
stos
pushf
mov
movb
jo
xor
jns
or
popa
movsb
loopne
aam
pop
mov
or
shlb
add
data16
push
cmp
call
mov
repz
mov
sti
ret
xchg
push
pop
cwtl
push
and
popa
jle
mov
pop
test
jge
std
pop
and
pop
dec
sbb
repnz
les
std
adc
dec
xchg
sbb
sub
repnz
out
jns
mov
pusha
cli
mov
and
ficompl
fdivrl
leave
push
pushf
aam
push
mov
mov
pop
push
xchg
test
shll
dec
mov
cmpsl
in
xchg
pop
dec
aas
pop
add
jae
cmp
out
mov
icebp
inc
insl
fsubrl
or
in
mov
sti
mov
jle
testl
mov
or
test
shll
test
fsubl
dec
mov
jb
xchg
mov
mov
das
adc
push
adc
loopne
and
test
cwtl
xchg
shrb
inc
xchg
lret
lods
inc
adc
inc
push
sub
cmp
xor
enter
push
mov
xor
mov
arpl
push
inc
pop
jge
xchg
out
mov
jo
mov
add
out
rclb
daa
movsw
cmp
jo
pusha
inc
bound
dec
xlat
gs
shlb
pop
inc
mov
stos
rolb
sbb
rcl
cmp
sub
inc
xchg
pop
cmp
or
mov
dec
jno
dec
ret
push
lahf
jo
out
dec
push
jge
mov
into
push
xor
imul
push
pop
pop
sub
mov
mov
movsl
pusha
shlb
ljmp
cmp
xor
in
xor
pop
cli
dec
das
dec
jns
add
push
mov
iret
addb
xor
bts
mov
mov
xchg
xlat
fdivrl
push
aas
xchg
imul
je
mov
mov
inc
in
nop
gs
jb
mov
inc
jo
daa
or
adc
hlt
test
inc
xchg
sbb
push
jmp
add
test
bound
adc
sbb
jle
xchg
cmpl
jecxz
mov
pushf
and
mov
pusha
lret
xchg
jae
jg
mov
inc
mov
jae
int
mov
xchg
dec
ljmp
int3
sti
rcrb
mov
and
jno
mov
mov
mov
cmpb
outsb
mov
cvttps2pi
push
jecxz
cwtl
pop
inc
mov
in
testb
mov
int
movsl
imul
inc
and
pop
pop
pop
test
inc
aam
push
outsb
aad
pop
jb
mov
jl
inc
and
and
mov
sbb
loopne
dec
ffreep
mov
in
cli
adcl
mov
adc
rcrb
lods
xlat
in
adc
push
or
mov
jnp
out
daa
jmp
frstor
add
add
mov
fwait
mov
jle
inc
ja
aaa
dec
push
repz
int
stc
push
dec
pop
mov
lock
inc
mov
imul
fprem1
xor
and
pop
mov
std
icebp
mov
mov
xlat
or
ret
mov
and
push
repz
add
lds
sub
push
sub
jg
mov
push
inc
je
push
cmpsl
push
inc
mov
das
ret
out
loop
hlt
repz
lock
imull
rol
or
mov
lock
sti
fnsave
scas
jno
mov
inc
sub
sar
imul
dec
in
xchg
mov
repnz
enter
or
pop
lods
mov
addr16
lret
popl
je
push
mov
and
or
jae
rcl
dec
push
ss
push
aas
arpl
lock
pop
xchg
xchg
out
testb
out
lret
dec
mov
push
imul
aad
jl
inc
mov
adc
sbb
clc
sub
scas
pop
ds
cmp
sbb
sub
in
push
push
fcomp
test
xchg
vpackuswb
icebp
movsb
push
in
xorb
push
movsl
inc
inc
cmp
fidivrs
mov
arpl
je
pop
mov
sbb
xchg
cmp
inc
and
pop
mov
xchg
pop
xchg
repnz
lock
loop
dec
cld
loope
sarl
cwtl
cmp
xchg
mov
cwtl
hlt
push
dec
push
enter
jno
xchg
mov
cmp
add
pop
sub
xlat
inc
jp
or
icebp
mull
dec
mov
outsb
shll
xchg
std
dec
pop
fwait
testl
cmp
lods
lods
inc
jno
sub
repz
dec
incl
sbbl
mov
and
pop
shl
out
jno
pop
mov
lahf
pop
shll
inc
in
xchg
ljmp
sti
outsl
out
jo
or
dec
popa
fwait
js
xor
cmpsl
adc
pop
popf
addb
push
xorl
mov
add
and
in
push
xchg
ret
lret
add
fnstsw
jae
or
jo
daa
scas
pushf
into
sub
or
xchg
inc
pop
dec
andb
mov
pop
xor
rcrb
stc
inc
pop
xchg
popf
pop
xchg
adc
ja
rorl
xor
or
ret
pop
in
mov
jns
mov
jne
mov
mov
push
lods
jae
cmpb
adc
loop
xor
loope
das
or
loope
cs
xchg
push
push
xor
xchg
clc
std
std
lahf
in
push
cmp
sub
out
lock
or
js
insl
es
test
mov
push
les
repnz
lea
fmull
xchg
imul
ja
ficoml
mov
xor
iret
lret
or
xchg
mov
inc
add
cmp
fcoml
xchg
jmp
dec
push
imul
sub
mov
mov
arpl
enter
lcall
fstpl
rcrb
pop
push
cwtl
sbb
mov
sahf
xor
inc
andl
lds
cmpsb
push
rcrb
adc
lea
and
or
sbb
loop
stos
sub
orl
mov
jg
lock
notb
lahf
mov
inc
xor
outsl
clc
dec
mov
jl
lcall
insb
xchg
mov
ljmp
clc
mov
adc
popf
adc
push
cmp
outsl
es
fimull
push
mov
sar
and
clc
adc
mov
dec
mov
sbbb
push
and
cmp
mov
mov
or
jnp
cmp
xor
or
mov
out
jle
in
dec
xchg
shll
xchg
daa
mov
mov
xchg
lret
outsb
in
repnz
rolb
fs
xor
bound
bound
jecxz
jg
jbe
rep
fiaddl
inc
dec
or
test
in
scas
jmp
fiadds
loop
getsec
sbb
test
out
out
and
mov
sbbl
fsqrt
ds
add
scas
sub
test
mov
out
hlt
aas
add
fcompl
and
xchg
cmpb
fstpl
xor
adc
loop
cs
mov
inc
cmc
and
les
int
pop
inc
insl
lods
sub
cmpl
mov
inc
rolb
inc
mov
adc
in
loop
mov
in
mov
icebp
pop
jbe
mov
inc
lds
push
and
fisttpl
inc
dec
mov
dec
test
shll
and
push
ds
push
ror
out
in
scas
or
inc
fwait
jnp
xchg
jle
clc
jg
out
fcoml
out
aas
add
andl
inc
repz
mov
mov
mov
imul
push
jns
sbb
lret
icebp
mov
or
cmp
add
xorl
sub
push
sub
bound
je
cmp
test
sub
mov
cmp
ret
icebp
mov
lahf
xor
push
imul
flds
pop
add
out
loope
or
sbb
xchg
and
bnd
mov
lods
inc
mov
ds
sbb
out
int3
or
or
xchg
imul
ja
mov
and
cmpsl
jle
in
in
ds
lock
andl
in
loop
jae
mov
push
and
cld
pushf
mov
fnstsw
or
cli
arpl
movsb
fmuls
and
sbb
aad
cmp
and
lock
sub
in
outsb
mov
nop
push
mov
adc
add
and
pop
test
sbb
adc
xchg
dec
out
fmull
int3
stc
imul
add
lcall
inc
int3
repnz
enter
mov
inc
sub
inc
movsl
fs
pushf
and
adc
jge
jecxz
sub
pop
xchg
sub
cmp
sub
adc
and
mov
mov
ret
cmc
popa
adc
cwtl
sti
push
cmc
sbb
cmp
jbe
rorb
sub
or
add
push
push
jg
inc
or
mov
mov
fmul
mov
push
rsqrtss
or
cmpsl
dec
out
out
ss
shl
jmp
subb
pushf
testl
push
out
shrl
sti
xorl
jge
pop
push
push
mov
ficomps
les
xchg
mov
fidivl
nop
test
pop
mov
sbb
movsl
xor
aaa
sub
imulb
push
mov
sahf
pop
ret
shl
inc
mov
mov
fmull
add
in
cltd
stos
addr16
outsl
sbb
add
mov
mov
popf
test
imul
imul
leave
add
inc
rorb
das
or
ljmp
stc
lods
orb
mov
dec
int
test
mov
mov
ss
xor
scas
or
adc
or
sub
iret
fcoms
insl
cs
jne
loop
orb
xchg
xchg
mov
inc
aad
inc
in
mov
push
xchg
lret
movsl
sbb
xchg
repz
test
jle
cmp
sbb
mov
cltd
and
insl
sbbb
push
push
rcr
test
out
sub
sbb
aam
push
adc
jne
sub
adc
daa
dec
test
and
in
clc
ds
pop
pop
clc
and
and
or
out
int
lock
sub
loopne
mov
out
fidivrs
xor
adc
or
xchg
insb
pextrw
adc
add
xchg
test
sbb
fwait
jnp
pusha
loop
cli
mov
push
lahf
mov
dec
and
adc
testl
outsl
clc
jmp
sbb
jnp
loop
ds
outsl
sbb
in
dec
or
daa
pop
pop
dec
and
pop
xor
bnd
cmp
ds
mov
xchg
pusha
jp
lea
cmp
sbb
cmp
dec
fwait
mov
jge
fcmovnu
pop
mov
sbb
cwtl
out
push
add
popa
jmp
adc
xlat
mov
sbb
dec
rorl
adc
insl
rol
jle
pop
repnz
mov
cld
push
lcall
in
mov
mov
int3
push
scas
mov
lods
push
test
pop
dec
pop
fwait
adc
mov
rcr
pop
jp
xchg
js
pop
mov
mov
or
adc
and
sub
sub
and
out
or
stos
mov
pop
sbb
inc
mov
inc
inc
jns
shll
js
clc
in
shlb
pop
or
push
pushf
mov
mov
push
enter
in
add
mov
pop
lock
leave
outsl
das
jmp
xor
add
cmp
cmc
push
insb
sub
or
lock
outsl
inc
stos
sbb
je
mov
scas
rcrb
jno
cmp
lods
xchg
adc
clc
mov
addr16
subl
ss
adcl
or
and
js
and
or
test
loope
int3
sub
sub
sbb
sbb
sbb
in
pop
mov
test
push
js
mov
mov
rol
mov
adc
jle
jecxz
rcrl
insb
xor
and
mov
sub
mov
cmpsb
clc
loopne
js
ja
fistpll
js
xor
loopne
pop
xchg
add
cwtl
in
inc
lock
rorl
insl
sbb
xlat
pop
mov
inc
xchg
adc
jae
mov
rclb
stc
movsb
jns
add
xor
jae
dec
lcall
pop
push
ljmp
jnp
mov
inc
inc
test
stc
cmp
aam
sub
jmp
mov
imul
jle
adc
mov
xchg
xchg
imul
outsb
fstpl
cmp
daa
pop
mov
lea
movsl
repnz
cmpsb
mov
shll
cmp
lea
and
fs
rcrl
mov
aam
pop
or
mov
pusha
cmp
jge
adc
sahf
lcall
xchg
jge
int3
daa
jecxz
scas
mov
push
pop
and
pop
sbb
jmp
movsb
dec
mov
test
enter
and
push
aaa
xchg
mov
mov
push
scas
and
xchg
mov
or
mov
dec
or
es
aam
xor
call
hlt
xchg
mov
adcl
icebp
add
je
movsl
pusha
pop
pop
outsl
sub
cld
cmp
or
lahf
inc
mov
or
inc
xor
scas
mov
enter
push
push
xor
rclb
and
js
aas
dec
mov
cmp
pop
mov
in
ds
lock
lods
mov
in
and
aad
cmp
inc
inc
aam
pop
dec
sub
decl
inc
call
mov
stos
push
fildll
mov
sbb
in
cwtl
dec
dec
mov
mov
pop
mov
shlb
jo
ljmp
jo
into
aad
hlt
jge
orb
pop
test
cmp
arpl
xor
mov
jns
lods
sub
inc
test
mov
nop
out
dec
mov
sbb
or
add
ret
mov
xchg
pop
cld
fdivr
jge
jmp
das
outsl
adc
int
mov
mov
add
lds
pop
mov
dec
pop
xor
scas
and
inc
fnstsw
mov
sub
das
lea
add
mov
add
in
test
sbb
mov
nop
jl
pop
fimuls
add
imulb
xor
mov
inc
mov
adc
mov
and
call
insb
dec
adc
shlb
shr
xchg
arpl
xor
cmp
sbb
loopne
scas
mov
jp
dec
popf
sti
call
inc
into
mov
inc
pusha
mov
cs
push
sub
pop
repz
sub
cmp
lds
fsts
mov
outsb
dec
adc
xchg
fwait
pushf
fbld
and
jns
dec
sbb
cmp
pop
es
call
dec
adc
push
push
iret
xchg
scas
sub
and
ja
fsubrp
cmpsl
mov
xchg
in
leave
dec
xchg
push
lds
int
and
fdiv
sub
clc
sub
cmc
jnp
sbb
adc
sbb
push
mov
enter
jne
cli
jp
cmp
movsl
dec
sbbb
cmp
cmp
and
push
mov
mov
flds
mov
add
iret
cmpb
cmp
shll
daa
pop
and
shll
and
popl
adc
ficoml
dec
add
inc
inc
push
movsl
mov
and
pop
out
into
cmpsb
stos
mov
push
push
sub
mov
into
add
xor
mov
adc
stos
out
xchg
inc
lret
cmpsb
sahf
mov
movsl
pop
mov
icebp
dec
or
aam
std
insb
inc
pop
sub
inc
stos
std
dec
or
push
lds
call
test
inc
jnp
aas
call
lcall
xor
mov
cld
sbb
out
jo
insb
or
ror
cs
and
sbb
das
outsl
adc
ficompl
dec
dec
sub
mov
ja
daa
adc
hlt
stc
leave
mov
inc
pop
mov
mov
aad
push
js
add
movsb
sbb
pop
add
outsb
out
push
shl
pop
call
imul
or
int
pop
xor
aaa
mov
mov
rclb
insb
or
cmp
jbe
rclb
pop
lds
mov
shlb
in
outsl
sbb
sub
xchg
mov
jbe
setbe
add
lds
sub
enter
jecxz
sub
jecxz
mov
fstp
out
daa
lahf
mov
push
mov
xor
pushf
xchg
lret
popa
icebp
dec
daa
fildll
cwtl
adc
xchg
repnz
sahf
push
add
idivb
inc
fidivrl
jno
xor
test
out
pop
xchg
lock
adc
push
push
mov
js
aam
inc
pop
mov
xchg
or
cwtl
cwtl
lock
lea
cmp
jp
pusha
mov
stos
add
dec
jns
int3
lahf
mov
lret
adc
arpl
pop
dec
or
xor
cwtl
pop
out
clc
xor
pop
xor
jns
std
gs
fcompl
fsts
fcompl
mov
mov
xchg
add
xchg
dec
aas
imul
dec
mov
jecxz
rcrl
adc
adc
push
mov
loopne
cmp
adc
subb
add
xchg
cmp
movsl
pop
outsl
insb
mov
add
cli
or
idiv
cmp
stos
frstor
enter
xchg
mov
jge
cmp
cmp
aam
outsl
mov
addr16
rorb
mov
addr16
int
pusha
add
inc
lahf
xlat
dec
rol
out
jns
das
nop
sub
inc
outsb
mov
inc
xlat
xor
outsb
pusha
dec
aas
sub
bound
addr16
mov
orb
add
popl
aam
jge
sbb
jb
ffree
bndstx
pop
je
aas
mov
xchg
ret
mov
jge
fxch
imul
mov
mov
cli
xchg
add
pusha
ret
or
xchg
in
mov
leave
pusha
xor
lret
test
cli
jb
das
push
subl
sbb
into
adc
fmuls
lea
and
inc
mov
adc
sti
adc
pusha
hlt
mov
stc
or
and
loop
cmp
in
aad
movsl
js
jb
gs
and
fstpt
add
adcb
push
mov
xchg
xor
inc
int
dec
pop
or
or
js
inc
dec
sub
enter
cmpsb
add
imulb
fs
sysenter
inc
cmp
andl
int3
mov
in
int
jo
push
add
lea
cmp
das
push
enter
dec
fnstsw
xchg
mov
adc
adc
addr16
mov
ds
jb
sbb
testl
mov
mov
jae
cmpsl
jne
xchg
iret
pop
das
ds
cli
inc
shr
mov
lret
cmp
pop
mov
bound
dec
jmp
and
inc
cmpsl
adc
ficompl
pop
or
cs
in
sbbl
ss
cs
lret
lahf
cmp
cmp
data16
add
lcall
ja
je
pop
sub
push
out
jp
mov
lods
pop
in
sub
adc
sbb
loop
cmp
out
fs
outsl
lods
push
imul
andb
aad
out
adc
mov
or
and
pusha
cmp
mov
popa
pop
or
sahf
xchg
enter
mov
imul
out
loop
out
mov
sbb
shrb
xchg
lret
mov
cmp
lret
push
push
cli
shl
dec
dec
fdivrl
dec
inc
gs
adc
xor
add
xchg
xor
pushf
push
lods
cmp
xchg
mov
repz
je
add
mov
adc
dec
in
sbb
jl
mov
mov
and
mov
xchg
jle
xorb
cld
rcll
repnz
addr16
rolb
lret
add
es
lcall
jo
roll
icebp
pop
stc
add
popf
xchg
jno
scas
loop
imul
cmp
aas
xchg
pop
mov
into
pop
mov
jne
push
xor
jb
xlat
inc
cmp
sbb
mov
test
dec
outsl
lods
mov
movsl
jmp
out
mov
xchg
int3
jp
cltd
jle
mov
out
jmp
pop
insl
mov
push
sbbb
out
inc
mov
nop
mov
and
je
addl
insl
sti
hlt
xor
stc
pop
mov
adc
in
shrb
push
lcall
sar
xchg
in
iret
inc
push
push
pop
lods
sub
and
call
jl
push
mov
loope
movsl
lds
pop
mov
ret
mov
xchg
insb
inc
pop
das
sub
add
mov
addr16
xor
xor
addr16
adc
push
push
cmp
dec
sti
add
data16
and
push
loop
scas
jp
outsl
les
test
je
mov
call
mov
add
lret
mov
into
jp
adc
push
mov
add
fwait
jp
push
cmp
jo
sub
pop
cwtl
shlb
dec
test
mov
in
adc
int
div
add
rorl
mov
loopne
cmp
dec
fsubl
lods
add
out
loope
dec
xor
and
xchg
pop
test
rcrl
imul
nop
ds
mov
out
and
lock
and
xor
and
mov
stos
mov
mov
adc
loope
mov
popf
dec
fwait
jb
movzwl
aaa
push
jl
in
cld
loope
jne
icebp
hlt
outsl
popa
imul
mov
idivb
arpl
inc
outsb
pop
mov
mov
fcomps
xchg
int3
dec
or
sub
or
push
dec
sahf
inc
imul
jb
cmp
dec
sbb
xor
daa
or
insb
or
pop
bound
jp
jle
mov
jl
inc
inc
cmp
push
leave
xchg
push
and
ficoml
fcomps
or
mov
mov
sbb
fs
das
pop
test
jecxz
orl
xor
and
xor
adc
ret
mov
push
es
jnp
call
call
popf
les
rcrb
xchg
lahf
movsb
sbb
and
pusha
clc
shl
cwtl
or
jns
xchg
jbe
nop
stos
xor
lods
lahf
lret
popa
sti
jmp
mov
xlat
mov
cmpsl
mov
arpl
sbb
dec
fdivrp
test
xchg
lcall
dec
ror
clc
out
divl
loop
xor
loope
add
ret
scas
xor
mov
adc
test
test
les
rclb
les
sbb
fs
mov
int3
mov
jb
pusha
inc
nop
loop
iret
loopne
sub
aas
xadd
mov
mov
popa
lret
mov
fwait
enter
push
pop
mov
sbb
jno
iret
lods
or
inc
push
xor
pop
inc
lahf
sbb
ret
inc
cmp
mov
mov
xor
stos
into
cltd
rclb
loop
cmp
orl
cmpsl
push
xor
movsl
fs
sbb
sbb
sbbl
cmpl
sub
lret
pop
cwtl
mov
test
mov
sbb
xchg
and
aam
jge
popf
in
in
add
arpl
std
nop
sbb
popa
cli
dec
out
and
es
outsb
cld
call
dec
dec
inc
dec
sbb
sbb
push
je
popa
in
pop
js
xor
out
fwait
hlt
mov
xchg
cmp
pop
push
test
mov
sbb
jae
imul
push
cmp
fmull
mov
xor
cmpsl
fwait
jg
neg
xor
cmp
jmp
mov
pop
aaa
hlt
cltd
inc
mov
loope
inc
mov
outsb
scas
pushf
add
jmp
aad
rclb
outsb
cs
stos
add
xor
fs
jae
sbb
push
cltd
andb
jne
lcall
mov
inc
xchg
aam
out
adc
lea
in
lods
xor
xchg
lret
test
pop
cltd
call
add
fstpl
dec
cmpsb
mov
cmpsl
or
pop
xchg
pop
jbe
mov
hlt
jno
pop
xchg
into
les
pop
dec
jecxz
dec
pop
or
hlt
cli
cmpsb
outsl
hlt
xchg
pop
xchg
adc
lds
fs
nop
arpl
imul
pop
mov
mov
repz
sbb
fs
jecxz
or
mov
in
mov
loopne
or
sbb
aam
lock
jecxz
fmull
test
inc
mov
and
insb
xchg
loope
mov
test
mov
jp
mov
repz
xor
lret
jge
mov
lock
jmp
mov
fsubrl
push
pop
pop
imul
test
and
sti
xchg
adc
lods
jp
adc
fildll
jl
or
or
or
insb
push
sbb
fdivr
repz
add
pop
push
xchg
js
stos
xchg
mov
out
cmp
xchg
mov
lret
sahf
int
mov
xor
or
pushf
out
inc
mov
jl
sbb
je
pop
xchg
pushf
mov
xchg
sbb
scas
or
idivb
daa
pop
repz
and
adc
cmp
imul
int
cmp
insl
xchg
adc
orl
push
imul
xchg
pop
inc
subps
jle
inc
push
dec
cmc
jge
scas
ds
sub
mov
sub
leave
mov
cmpsl
jl
mov
imul
jo
xor
hlt
mov
fisttpl
push
sahf
xlat
dec
adc
dec
cs
addr16
cmpl
push
dec
push
dec
or
roll
xorl
sbb
imul
sbb
enter
inc
mov
fisttpl
daa
sbb
sbb
jl
cmovo
xchg
data16
testb
jo
xchg
add
mov
incb
leave
nop
repz
movsl
or
rcrl
bound
in
adc
pop
and
sub
pusha
std
mov
pop
cld
push
and
sbb
jmp
mov
pop
and
ficoml
rolb
fisubrl
mov
ja
ss
fwait
lret
ja
jno
fisubl
sub
push
fists
fldl
pop
xor
cmpb
xchg
ljmp
adc
int
sub
mov
xchg
enter
inc
mov
jle
sub
out
push
test
in
test
nop
or
pop
jo
sbb
fdivr
fcmove
les
decl
add
ss
lret
adc
movsb
cmp
inc
mov
outsb
jae
jecxz
pop
xor
and
inc
mov
xchg
cmp
rorb
hlt
sub
or
pop
xchg
shlb
sti
daa
xor
jne
arpl
ficomps
std
mov
add
movsb
aad
xor
cs
and
pop
add
fs
outsb
pushf
pop
leave
repnz
cmp
lahf
hlt
xor
lret
fcom
push
add
cwtl
sub
inc
sahf
xchg
add
cmp
aas
daa
xchg
out
jmp
hlt
test
dec
pop
inc
jge
call
punpckhbw
sbb
je
ja
push
mov
push
add
mov
inc
jg
addb
aad
adc
fdivp
pop
push
push
insl
adc
mov
in
adc
mov
or
test
sahf
mov
and
repnz
jmp
leave
dec
dec
ja
in
dec
fnsave
pop
and
jg
popa
jno
fistpl
fistl
lret
leave
sbbb
jno
sub
shlb
xlat
icebp
fcmove
xchg
mov
dec
add
scas
xchg
mov
jno
mov
dec
mov
xchg
or
es
xchg
push
addr16
idivb
idivb
jge
mov
cmp
xor
mov
shll
add
xchg
adc
insb
arpl
inc
popf
jne
pop
scas
cs
adc
mov
cmovno
mov
outsb
movsl
ljmp
movsb
push
add
fwait
cmp
mov
out
arpl
rorl
mov
or
mov
cmpsl
bound
jg
aad
jmp
ja
in
push
add
adcl
or
cwtl
inc
orl
mov
repz
mov
jae
xor
mov
sub
inc
xchg
in
cmp
les
xor
loopne
lods
mov
adc
xchg
or
outsl
js
push
xchg
testl
jge
data16
insb
sbb
ret
xlat
sbb
push
stos
xor
lds
xchg
mov
mov
push
jge
add
mov
xchg
fwait
outsb
mov
add
adc
sub
scas
adc
test
adc
imull
mov
stos
xchg
mov
in
testb
pop
xchg
and
iret
stc
stos
xchg
nop
fcoms
loop
out
sbb
jle
ret
mov
xchg
mov
mov
dec
push
scas
and
jne
fs
push
xchg
outsl
lcall
hlt
nop
loopne
jns
mov
push
outsl
lds
ss
cmp
pusha
fmuls
dec
loope
adc
pop
jg
imul
xchg
mov
jb
adc
outsb
mov
lcall
mov
xor
lock
mov
fisubrs
imul
add
arpl
lods
jae
mov
stc
mov
push
sbb
repz
jo
in
adc
jle
mov
mov
jecxz
and
push
lret
push
pop
fildl
stc
add
les
xor
xchg
lahf
and
scas
sbb
addr16
lret
outsl
mov
je
xlat
and
repz
jnp
xchg
cmc
mov
inc
inc
inc
inc
arpl
nop
outsb
inc
push
xor
scas
pop
pop
pusha
mov
push
out
ja
rep
cmc
xorb
sbb
test
outsb
xchg
lahf
popf
enter
inc
mov
pop
cmp
pop
inc
sbb
ja
push
jp
and
xchg
lret
mov
or
rol
adc
movsl
mov
in
mov
icebp
xchg
clc
arpl
pop
popf
xchg
mov
add
mov
sub
pushf
sub
adc
xchg
cwtl
mov
xchg
dec
add
test
mov
cmc
outsl
mov
subl
rcl
enter
cwtl
loop
inc
out
pop
pop
cmp
adc
repz
push
or
inc
and
test
inc
jb
nop
sub
cltd
xchg
pop
addr16
inc
adc
js
jne
sub
sbb
sbb
mov
sub
pop
shrb
push
into
push
jne
and
sub
add
out
adc
out
sbb
xor
stc
mov
sbb
lds
roll
jle
lret
fs
loope
mov
stc
test
sub
mov
pop
inc
push
xchg
add
sub
jmp
inc
xor
fbstp
imul
lret
jp
sub
insl
bound
adc
and
in
int3
xor
adc
add
je
cmpsl
movsb
ss
cmp
xor
and
mov
fcmovb
out
mov
lcall
or
xchg
filds
cmp
pushf
outsl
popf
and
add
out
mov
pop
mov
jnp
or
cmp
repz
adc
adcl
jae
nop
adc
adc
js
xchg
push
shl
mov
sub
sti
xchg
dec
leave
sar
aas
repnz
inc
or
cs
jo
fwait
ss
push
jo
xor
stos
outsl
mov
mov
pop
sti
mov
sahf
dec
xchg
pop
pop
dec
adc
push
inc
fcoms
pop
popf
sub
cwtl
cmp
cmp
std
lcall
and
push
leave
and
leave
jl
mov
xor
xchg
sub
scas
in
scas
add
jb
add
stos
inc
popf
mov
cltd
movb
mov
jl
shrb
fcoms
fidivrs
mov
enter
sbb
es
lea
inc
jge
scas
and
pop
movl
or
je
lahf
dec
sub
inc
and
pushf
sarb
inc
and
xchg
or
gs
cmc
lea
push
cmpl
or
xchg
push
frstor
adc
jle
lods
sbb
subl
push
push
out
push
int3
or
add
rorl
push
test
sub
sub
jmp
adc
repnz
mov
das
test
inc
std
scas
add
xchg
ficoms
lods
jle
loop
shlb
ja
je
mov
jb
flds
mov
mov
pop
outsb
push
ret
cld
cmp
lods
jl
lods
bound
add
cmp
clc
pop
and
sbb
jg
mov
out
cmp
pop
adc
rcrb
pusha
filds
movsl
inc
xchg
sti
out
mov
cmp
pop
pop
pop
sahf
mov
sbb
and
insl
mov
out
cwtl
push
fcomps
jg
imul
mov
pop
movsl
cmpsb
jmp
mov
cmc
push
shr
insl
dec
nop
stc
lcall
jae
mov
into
mov
imul
incb
push
jns
xchg
cmpsl
das
sysexit
mov
jp
xlat
add
int3
in
push
and
cwtl
or
add
push
xchg
pop
mov
mov
cwtl
add
test
xchg
sbb
ret
and
jns
lcall
sub
mov
and
fisttpl
fsubrs
lahf
mov
roll
add
dec
fwait
daa
mov
mov
fs
push
pusha
cmp
add
or
or
sahf
movsb
loopne
cwtd
mov
std
shlb
div
dec
outsb
jno
dec
repnz
dec
popa
out
fstpl
movl
popf
lods
les
lret
mov
sbb
mov
mov
cmp
fs
xlat
sar
jge
ret
test
xlat
pop
mov
data16
icebp
mov
push
mov
xchg
repz
sbb
add
push
fcom
jle
test
pusha
dec
test
int
mov
pop
xor
xchg
test
add
aam
adc
sti
test
push
loopne
dec
ret
and
sbb
rdmsr
adc
pop
jmp
lea
test
leave
test
fadds
andl
push
aaa
cmc
pop
xchg
js
mov
xchg
jo
mov
mov
pop
ret
adc
nop
pop
mov
sbbb
in
mov
out
insb
jo
movsb
xorl
pop
ja
andl
fsubrl
and
adc
inc
mov
dec
pop
sub
xor
jle
adc
fdivs
cmc
jo
lret
mov
jns
int
add
lahf
test
adc
cmp
mov
mov
push
xchg
xchg
rorl
sub
cmp
cmp
add
jl
jl
and
lcall
and
cmp
mov
insl
sbb
add
data16
ficoml
pop
push
or
pop
pop
in
mov
xchg
cltd
fnstsw
daa
add
lret
adc
aaa
aas
inc
mov
fsubrs
sti
push
and
sbb
rcll
std
pop
stc
sub
lret
test
mov
imul
inc
fsubrs
xchg
lods
rorl
xor
pop
xor
sub
ss
xor
push
mov
ret
push
arpl
add
adc
push
xchg
cmpsb
dec
test
mov
push
mov
xor
lods
in
inc
add
ret
xor
sbb
push
mov
aas
sub
test
mov
dec
inc
mov
adc
in
xchg
fmul
mov
or
out
push
stos
fadds
pop
xchg
mov
insb
mov
ljmp
jo
jae
jnp
xchg
adc
sub
jmp
xor
dec
addr16
shlb
inc
inc
sarb
aas
push
pop
in
shrl
movsl
add
or
popl
loopne
xor
fdivrs
mov
sbb
stos
fsubrl
sub
pop
cs
or
int3
in
inc
decl
xor
xchg
pop
lahf
lock
jnp
fisubrl
sub
or
adc
iret
jg
mov
pop
dec
outsb
ficomps
daa
std
xor
push
pop
or
hlt
aam
rclb
mov
ja
xchg
mov
lock
nop
ret
dec
enter
sbb
dec
inc
out
into
xchg
outsl
mov
adc
jl
in
mov
addr16
popf
ret
imul
test
inc
cmp
mov
xor
insl
call
xchg
out
sqrtps
lahf
xchg
adc
ljmp
loope
jg
sbb
testl
xchg
mov
push
xchg
fstl
cmp
mov
dec
pop
xchg
mov
mov
inc
adcl
mov
lock
lcall
cltd
scas
cld
jmp
adc
lahf
in
outsb
test
fbld
in
aam
jecxz
icebp
incl
idivl
out
sarb
into
inc
shlb
ffreep
xchg
pushf
fsts
and
js
ljmp
mov
mov
ljmp
out
xlat
popf
int3
mov
es
mov
mov
negl
cld
xchg
ljmp
adc
pop
adc
aas
fdivp
cmc
sub
adc
mov
xor
push
fwait
mov
test
pop
push
jns
clc
add
push
pop
xchg
pop
imul
push
mov
cmpl
in
in
fmull
nop
stos
or
xchg
mov
adc
sbb
jne
cmp
btc
mov
xchg
std
lahf
inc
pop
mov
int3
mov
cltd
or
mov
cmp
fistl
out
imul
push
sub
adc
fstpl
xchg
sub
shl
jb
clc
pushl
pop
sarb
out
aaa
cwtl
sti
fisttps
ret
mov
nop
pushf
leave
test
aam
xchg
cmp
je
jns
push
mov
fsubr
cltd
pusha
scas
sti
xchg
sub
stos
aaa
mov
out
jne
cmp
in
mov
test
imul
jns
push
fcmovne
push
jmp
inc
jecxz
pop
enter
or
inc
mov
lret
loopne
sub
mov
ja
push
lret
aad
ja
out
xchg
sbb
pop
and
sti
out
mov
mov
jae
or
ret
sbb
nop
test
jne
test
ja
mov
outsl
shl
adc
dec
stc
and
pop
xor
xchg
jle
jae
mov
test
scas
inc
and
ds
xchg
jae
inc
ret
pusha
les
xor
jae
shlb
sbb
cwtl
jnp
push
xchg
bnd
mov
inc
loope
dec
jle
add
jl
jae
fstl
lea
sub
iret
xor
cmp
add
push
xchg
call
sbb
cmpsb
out
push
inc
mov
call
mov
mov
mov
inc
jne
test
call
xchg
push
int3
lds
in
rcr
sub
sbb
dec
mov
imull
mov
push
mov
push
push
xor
xor
ret
add
ja
push
mov
scas
mov
rcrl
ss
inc
xchg
imul
sub
pushf
sbb
das
and
aaa
stc
insb
into
mov
push
shrl
cmc
repz
loop
ret
js,pt
push
lods
or
inc
inc
or
incb
roll
js
push
ficoml
push
lds
jo
adc
cmp
mov
pop
aam
mov
add
dec
cmpsb
xchg
or
pop
xorl
mov
fisubrs
mov
mov
ret
shll
cld
mov
je
je
or
jmp
movsb
cmp
aaa
mov
fbstp
mov
push
addb
inc
scas
dec
dec
repz
mov
pop
lea
sub
push
es
call
into
lock
inc
jne
mov
pop
dec
ljmp
jbe
stc
sarl
push
fldt
and
adc
push
jmp
jg
jecxz
pop
fisubrs
pushf
sahf
mov
or
mov
mov
addr16
out
adc
mov
int
cwtl
pop
xchg
cmp
add
jne
dec
movsb
mov
les
in
lods
fidivs
test
mov
or
add
jp
ljmp
push
arpl
push
sub
push
adc
imul
es
xor
loope
cmp
cwtl
fiadds
das
cli
dec
sub
popa
and
sub
loope
fwait
or
jns
aas
mov
jp
pop
sub
stos
push
lahf
fadds
mov
mov
jns
rcrb
rclb
fs
xchg
lock
fnsave
das
push
loope
and
outsl
fcomi
stc
push
adc
cmpb
outsl
add
lods
repnz
mov
push
lahf
push
andb
cmp
lret
out
cmp
sbb
inc
fstpl
inc
xchg
in
loop
cmp
cmp
sti
aad
pop
mov
inc
mov
sub
insl
cmovns
out
mov
jae
add
and
cli
push
mov
dec
add
rclb
stos
pop
or
lret
loope
inc
cmpsb
cmc
int3
insl
shlb
bound
int
enter
xor
mov
push
fwait
add
call
xchg
repnz
stos
push
stc
add
mov
adcl
outsb
xchg
dec
mov
aaa
movsl
pop
mov
je
mov
push
xchg
add
out
cmpsb
repz
fcomi
repz
jae
lods
cmp
sub
push
test
pop
in
imul
es
pusha
es
stos
outsl
sbb
dec
popf
divl
mov
jge
dec
mov
fnstsw
dec
popa
adc
push
jge
out
mov
aaa
inc
ljmp
jo
jno
loopne
pop
shll
push
dec
daa
sti
dec
pop
push
xor
push
mov
or
out
nop
lods
dec
stos
addr16
sub
ds
add
add
out
pop
fsubr
adc
xchg
pop
add
mov
sub
sarb
mov
mov
movsl
fadds
out
lret
add
mov
shl
sub
mov
push
sub
xchg
and
lock
dec
xlat
push
es
pop
and
mov
sub
or
movsl
dec
dec
inc
mov
jno
pop
cmp
sti
inc
push
dec
ja
shll
xchg
test
das
lock
add
vmovss
adc
mov
in
xchg
push
and
ret
rcll
sub
mov
mov
lods
xlat
add
loop
loopne
pop
pop
xchg
ss
sbb
cmpsb
shlb
inc
in
pop
std
inc
inc
mov
inc
stos
mov
or
xchg
es
add
push
outsl
mov
nop
and
cmp
dec
into
and
in
push
lcall
les
jne
mov
sub
ljmp
addr16
cwtl
and
lock
arpl
roll
lods
iret
or
inc
add
xchg
sub
push
and
leave
iret
mov
outsl
int3
sbb
pop
test
push
cmp
repnz
das
and
andl
mov
fistpll
adc
dec
lea
xor
sub
mov
shl
les
sbb
inc
mov
push
pop
xorb
and
xchg
jno
xlat
and
fidivrs
pop
bound
jge
or
stos
imull
push
enter
mov
sub
addl
inc
inc
shr
repz
pushf
imul
xor
mov
clc
inc
add
imul
sbb
les
in
cmc
mov
es
or
mov
add
pop
lcall
rolb
cmpsl
dec
cmp
xor
push
fs
sbb
mov
sub
loope
stos
jns
sarl
push
inc
fidivrl
cmpb
fs
push
jnp
push
jp
dec
and
sbb
hlt
xor
push
mov
and
jp
and
jmp
lahf
cmp
in
adc
sbbl
sbb
hlt
xor
enter
add
sbb
mov
cltd
arpl
cmc
xchg
and
adc
jae
adc
lcall
iret
ja
gs
push
mov
xlat
jae
fildl
test
sub
popa
xchg
loop
pushf
push
insb
pop
rorl
ret
mov
out
js
inc
loopne
push
pop
gs
pop
movsb
rclb
repz
cmpsl
mov
sbb
xor
jne
sub
popa
fdivs
sub
rcrl
sbb
out
pop
jecxz
imul
lods
sbb
pop
call
xor
pop
mov
mov
xchg
sub
and
aas
fidivs
sbb
mov
leave
jno
incl
xor
lret
int
lcall
xchg
mov
xchg
cmp
pminsw
pop
jbe
adc
aaa
test
dec
sbb
es
test
xor
imul
dec
enter
cmp
cmp
cmp
dec
pop
cmp
js
sbb
sub
adc
ja
mov
rcrl
fs
sti
xor
outsl
enter
adc
mov
push
jns
push
inc
call
insl
loop
inc
test
ljmp
sbb
mov
xor
or
test
cmp
or
push
or
cmpsl
add
sbb
mov
pop
stos
mov
inc
loope
dec
and
push
jle
mov
xor
pop
dec
es
cltd
xchg
aad
push
xchg
add
rcrl
pushf
outsl
dec
sbb
ja
add
xor
pop
sbb
lcall
xor
cmp
dec
fildl
movsl
jnp
into
cmp
push
xchg
sbb
xorl
test
repnz
push
mov
ja
pop
or
push
cli
rep
loope
xchg
fbstp
lret
inc
mov
and
pop
fstl
shrb
cmp
and
fstl
xor
hlt
or
arpl
loopne
add
movsl
sbb
pop
scas
aad
add
push
xchg
rcl
mov
cmp
mov
fidivrs
pushf
gs
sbb
sbb
inc
inc
and
sahf
jbe
cmpsl
mov
push
mov
push
iret
movsl
jmp
mov
pop
dec
cli
adc
fbld
inc
push
imul
mov
jge
xchg
xor
xchg
mov
add
test
inc
sbb
scas
cmpb
mov
mov
cld
mov
or
dec
mov
aam
rol
mov
mov
fwait
add
jno,pn
out
jg
or
ret
rol
lods
jo
ror
and
test
or
pop
mov
jae
lods
push
daa
inc
or
arpl
cmp
jp
add
dec
ds
dec
lcall
aaa
sbbb
insl
xchg
sub
cmp
jl
jmp
fcompl
add
aad
sbb
cmp
lods
dec
sub
mov
inc
and
sbb
out
and
data16
sahf
int
inc
out
cmp
cmp
push
or
xchg
imul
xor
aam
fsubs
faddl
std
push
mov
inc
cld
fucomi
adc
and
das
mov
jns
cltd
sub
push
shrl
adc
mov
dec
sbb
xor
shlb
mov
es
into
fldcw
addr16
inc
lret
cltd
je
pop
inc
add
icebp
cmpl
test
fldcw
int
aaa
xchg
sahf
push
and
aaa
mov
push
pop
push
sbb
mov
movzwl
or
mov
fidivs
jbe
pop
push
enter
and
ss
out
and
std
add
test
call
sbb
add
xlat
mov
sub
fisttpl
je
and
xlat
mov
lcall
cmpsb
adc
iret
imul
dec
mov
push
fistpll
push
cmp
mov
adc
stos
adc
push
dec
pusha
iret
loopne
loop
lret
jnp
adc
sub
inc
xor
in
fcoml
push
in
sbb
loopne
imul
es
lret
adc
orl
lret
pop
cwtl
shll
add
imul
dec
lahf
jecxz
adc
xchg
in
mov
lea
mov
jp
add
out
aam
stos
cld
test
cmpsb
jno
in
lret
insl
decb
mov
mov
pop
dec
cli
rolb
imul
aaa
xchg
icebp
cmp
jle
mov
std
adc
sbb
lcall
cmp
insl
inc
scas
lods
aad
mov
sbb
sbb
loope
leave
xchg
inc
in
jns
das
mov
jle
in
sub
daa
cltd
push
ljmp
mov
aad
into
daa
scas
int
test
mov
dec
push
add
int3
inc
mov
mov
imul
and
push
jge,pt
jp
xlat
push
int3
mov
pop
movsb
daa
sbb
inc
dec
in
or
jl
mov
inc
loope
aaa
aam
mov
xchg
ds
jle
pop
xor
dec
loop
inc
xor
xor
mov
les
stos
mov
sahf
push
fisttpll
fst
pop
in
insl
dec
movsb
mov
sbb
add
imul
movsb
or
jno
int3
inc
lds
mov
cltd
jno
add
stc
pop
sbb
jl
sbb
push
mov
movsl
ret
rep
inc
jmp
dec
pop
ret
adc
pop
ret
adc
aad
loope
push
repnz
frndint
movsl
ljmp
popa
movsb
mov
aad
sbb
lret
pop
add
mov
loopne
mov
addr16
test
xor
testl
or
mov
repnz
xor
cltd
xchg
popfw
std
push
aas
cld
iret
cwtl
dec
mov
fistpll
shlb
xor
adc
icebp
sub
mov
and
jp
push
in
repnz
lock
punpcklwd
pushf
fnstcw
shlb
dec
jo
add
sub
inc
sub
mov
fisubrs
scas
mov
mov
or
pop
xchg
add
lods
mov
xchg
das
incb
cmpsb
out
pop
mov
jbe
aas
out
mov
arpl
js
push
inc
outsb
sub
and
mov
in
and
cmp
push
andl
push
cld
lock
adc
inc
cmp
test
jl
repz
inc
les
mov
repz
cwtl
lahf
addl
fadds
sub
push
xor
mov
ficoml
push
adc
xlat
mov
pop
into
jne
jo
int3
pop
jmp
out
sbb
ret
mov
push
dec
mov
mov
and
and
push
inc
push
push
mov
pop
scas
dec
sbb
mov
lret
jne
inc
jae
mov
pop
xor
fistpll
test
or
pusha
jp
mov
push
dec
inc
jbe
lcall
enter
mov
push
xor
lret
call
inc
xchg
push
ljmpw
out
and
test
jmp
jge
clc
xchg
sbbb
rcrl
shr
hlt
add
sbb
cmp
div
pop
pop
scas
add
mov
inc
jne
mov
call
lock
sbb
out
loop
fcoml
sub
pusha
xor
dec
add
pop
mov
in
dec
mov
push
mov
and
cs
pop
psraw
clc
pop
lahf
xor
mov
xchg
mov
lods
push
in
xor
fwait
sub
mov
push
sbb
int
iret
push
aas
pop
xor
inc
loopne
mov
xlat
xor
out
or
out
lret
sub
sbb
mov
mov
das
mov
or
enter
sar
cmp
push
mov
icebp
mov
lods
out
orl
in
jp
das
and
inc
sub
das
pop
xor
mov
sub
shlb
out
rorb
lods
ja
shlb
xchg
jb
push
jns
push
mov
gs
push
jl
inc
lret
cmp
add
lret
sbb
cmp
pop
daa
inc
xor
add
sub
loopne
notl
jecxz
orl
stos
inc
pop
xchg
fnsaves
aam
jg
adc
sbb
add
in
out
jno
mov
push
cmc
add
aaa
push
test
dec
stos
or
xor
add
dec
gs
add
mov
std
andl
movsl
inc
cmpsb
insb
cs
pop
sbb
pop
out
test
sub
or
call
jl
scas
xor
jecxz
imul
aaa
mov
xchg
pusha
in
mov
sub
std
jnp
int3
cmpsl
test
fcomps
jl
xchg
push
adc
clc
jns
mov
mov
mov
loop
cmpsl
dec
in
sub
sub
fidivl
ds
jge
stos
jle
xor
sti
scas
add
adc
and
or
push
jmp
inc
pop
mov
cmp
jb
and
leave
in
mov
ss
or
dec
je
sar
cmpsb
mov
push
icebp
test
leave
xor
mov
in
mov
loopne
inc
xchg
sub
test
mov
sbb
xchg
mov
ret
out
cmc
xchg
xchg
fildl
mov
cs
insl
xchg
fimull
pushf
pusha
adc
dec
sahf
mov
jns
lds
sarb
xchg
mov
xor
aas
jle
frstor
jecxz
lds
pop
xchg
sbb
dec
cs
cmp
lcall
mov
dec
sub
inc
arpl
daa
jo
out
mov
jmp
js
call
loop
mov
jno
push
inc
cmc
inc
mov
adc
popl
clc
rclb
dec
or
fisttps
cltd
add
xchg
mov
mov
movsb
movsl
xor
push
aam
mov
xor
and
pop
jo
mov
add
pop
adc
ficompl
in
cmpsl
cwtl
cmp
push
idivl
or
mov
xchg
xchg
into
pop
sbbl
ljmp
fcmove
add
dec
mov
and
les
andb
inc
dec
or
stos
push
cmpsb
sub
sbb
push
call
mov
pop
inc
or
movsl
addl
fadd
out
out
into
aam
pop
shlb
add
fimull
fildll
pop
cmp
push
push
aaa
cmp
ljmp
in
dec
push
adc
mov
leave
sub
aaa
pop
stos
xor
or
iret
and
sahf
and
xorb
lret
std
insl
dec
imul
xchg
ds
dec
je
out
mov
out
sbb
mov
sub
adc
mov
add
out
popa
mov
mov
lahf
loope
pop
sub
test
lcall
xor
dec
loopne
push
out
xor
pop
push
xor
scas
js
clc
stos
adc
inc
shl
push
push
adc
jne
xchg
mov
mov
add
insb
adc
sarl
outsb
or
sub
int
jge
mov
push
sub
mov
xchg
push
sarb
aad
xor
clc
adc
jns
lods
test
and
xchg
adc
push
push
mov
dec
daa
out
repz
and
popf
je
cmpsl
fdivl
enter
xchg
insl
imul
cltd
mov
test
or
jge
pop
fnstcw
mov
xor
outsl
and
jle
xchg
jb,pn
int3
cs
push
mov
adc
ja
add
push
jne
pop
imul
or
and
sub
xchg
xchg
mov
jbe
mov
and
outsl
fcompl
cmp
mov
adc
push
scas
pop
les
cld
ret
rep
insl
cltd
adc
or
sarl
add
lea
and
insb
xor
jmp
repz
mov
lahf
jae
fs
mov
fisubl
xchg
mov
nop
cli
sbb
sbb
sbb
cwtl
or
sub
fcom
push
mov
icebp
jnp
push
mov
icebp
and
das
mov
aaa
mov
xor
negl
into
jle
test
add
jb
cmp
mov
cmp
fsubs
leave
shlb
xchg
mov
pop
fs
mov
pop
xchg
mov
sti
cltd
sub
sub
pop
xchg
cmp
cltd
jmp
mov
push
rcll
pop
fisttpll
lret
aaa
jle
loopne
test
out
sub
and
pop
ds
jl
pop
outsl
aad
xchg
shll
movsl
xor
insb
nop
sub
decl
pop
sbb
imul
stos
adc
push
add
je
sahf
dec
std
mov
xor
cmpsb
pop
pop
xchg
jb
notl
push
sbb
and
xchg
dec
or
fdivl
or
mov
int3
or
sti
dec
sbb
js
addl
fidivs
sbb
int
inc
lahf
mov
pop
pop
rcl
int3
sub
inc
sbb
ficomps
fs
mov
sbb
pop
jl
fdivr
ret
int
mov
rorl
test
mov
insl
mov
mov
cltd
shrb
sahf
push
add
jmp
sbb
pop
and
jl
imul
push
movsb
mov
xchg
lcall
mov
stos
add
out
dec
dec
or
xorl
mov
divl
add
popa
movd
cmp
repz
cmp
push
adc
enter
hlt
adc
out
xchg
clc
sbb
das
test
jp
inc
shll
xchg
push
push
inc
arpl
subl
stos
mov
sub
scas
cmpsl
push
js
xchg
and
data16
ds
popa
cmc
fcom
xor
cmc
aas
imul
imul
mov
shrl
jnp
pop
movsl
xchg
fldl
mov
jae
movsl
neg
mov
xor
rorb
and
cmp
mov
fwait
push
das
iret
mov
inc
out
shl
inc
push
jbe
sbb
pop
outsl
out
jmp
pop
ret
or
bound
aaa
dec
jbe
inc
rclb
add
mov
sbb
push
arpl
pop
divl
movsb
pop
push
movnti
jl
adc
imul
testl
mov
xor
cmp
aas
mov
loope
xor
cltd
cltd
jnp
inc
mov
cmp
pop
lea
jmp
shr
mov
jo
les
jl
mov
leave
and
and
pushf
scas
loop,pn
xchg
inc
imul
cmc
fs
ret
pop
adc
and
stos
in
cli
mov
add
imul
jl
jle
push
sub
or
rorb
test
cmp
or
push
sub
jne
loopne
in
iret
cmp
pop
xor
das
xchg
jmp
mov
stos
fstpl
cltd
icebp
test
pop
sar
push
inc
xchg
dec
sbb
mov
mov
push
in
mov
xor
xchg
arpl
test
mov
pop
ds
es
push
sbb
cltd
mov
shlb
addr16
pusha
ds
leave
dec
sub
jmp
pop
hlt
in
sti
pop
inc
pushf
lret
out
mov
mov
roll
adc
daa
push
push
mov
aad
push
and
sbb
jnp
mov
fnstcw
push
nop
in
push
enter
xchg
popf
and
clc
mov
xchg
ja
into
pusha
inc
test
fcompl
out
jae
push
mov
lds
lock
inc
xchg
dec
pop
popa
aas
lock
pusha
and
push
pop
push
pop
push
xchg
pop
xor
adcl
cs
jbe
sbb
mov
fsts
push
cltd
mov
cmp
leave
pop
dec
mov
lea
jmp
shl
dec
pop
mov
cld
loop
mov
xchg
outsl
hlt
loopne
jae
and
aaa
jg
sub
int
scas
mov
aam
xor
mov
jmp
pop
and
frstor
xor
das
push
pop
imul
in
mov
lock
mov
movsl
outsb
mov
sbb
fldl
into
mov
cmpsb
mov
xor
fcoml
ss
push
jno
and
test
outsl
add
mov
jo
ficoms
and
xor
mov
aaa
shlb
pop
sar
pusha
xchg
sbb
lret
fstpt
mov
rorl
jp
cmc
lock
mov
sbb
sahf
add
push
fldt
cli
popf
es
andl
pop
or
out
cli
cmp
cmpsl
lods
aam
push
std
mov
mov
push
dec
out
les
hlt
mov
inc
shlb
cmp
lea
test
and
push
mov
mov
aam
fstps
jno
daa
xchg
ficoml
jno
or
or
inc
imul
sti
mov
pop
cld
sbb
fdiv
int
popa
out
leave
sbb
inc
lcall
jno
fwait
andb
test
cli
cmp
insl
jne
xchg
push
cltd
dec
call
stos
inc
outsb
dec
mov
push
add
inc
scas
pop
mov
inc
xchg
cmp
fisttpl
ds
fwait
in
and
or
mov
xorb
mov
lods
xlat
cltd
xchg
aad
js
es
push
lock
mov
sub
and
movsl
scas
adc
sub
add
pop
fisttpll
idiv
jne
flds
test
out
into
xchg
cwtl
andl
outsb
push
mov
bound
in
add
aas
dec
push
cmp
movsl
cmp
mov
lock
push
call
mov
in
mov
mov
cmp
in
and
incb
push
dec
aas
mov
fwait
test
iret
cltd
inc
mull
out
ds
or
les
lds
lcall
test
mov
mov
lea
pop
mov
mov
xor
popl
loope
mov
jo
cs
lds
test
mov
shrb
or
aaa
out
shl
pop
scas
repz
imul
sub
fcoml
je
sbb
outsl
push
out
mov
fiaddl
cmp
in
or
loop
mov
into
inc
adc
jecxz
mov
in
icebp
add
mov
inc
sti
nop
cmp
and
leave
sbb
call
clc
sub
push
pop
and
out
gs
lahf
adc
push
xlat
push
test
cwtl
daa
or
lock
add
out
sarb
or
mov
js
popa
imul
mov
enter
nop
mov
and
pop
xchg
push
and
add
enter
xchg
xchg
or
std
sti
push
jg
inc
inc
or
xchg
call
dec
lock
xchg
aas
aaa
out
push
test
cmp
sbb
add
test
or
fwait
pop
mov
testb
mov
outsl
sub
clc
fsubrl
es
scas
cwtl
add
xchg
mov
jne
in
fcompl
call
xchg
fisttps
xchg
pop
jge
mov
aad
ss
push
or
test
xor
and
mov
leave
mov
js
testb
pop
hlt
sbb
bsr
inc
mov
in
xchg
aas
push
or
loope
xchg
testl
lods
imul
dec
sbb
cmp
jge
stos
adc
test
mov
sahf
insl
stc
sbb
ss
bound
sub
popa
int3
pop
mov
shl
in
int3
inc
mov
dec
fidivl
mov
movsb
sub
mov
icebp
xor
bound
fisubrs
sub
push
push
fcmovnb
and
hlt
pop
and
xchg
mov
jle
lahf
dec
cltd
lret
imull
jo
stc
mov
jp
shlb
mov
ficoml
adc
mov
pop
cwtl
mov
ja
inc
cld
scas
add
xor
and
mov
mov
ret
mov
pop
and
cmpsl
rol
in
pop
mov
xchg
icebp
jbe
cmp
sbb
loop
lods
xlat
pop
popf
push
dec
pop
mov
fadds
cmp
data16
xchg
and
popf
aaa
in
and
adc
xor
inc
idivb
ret
mov
mov
sahf
out
mov
sarb
xchg
es
in
or
mov
mov
test
stos
rclb
lea
movsl
xor
push
stos
push
mov
std
bound
popf
enter
cmp
mov
mov
fsubrs
negl
ss
enter
ficoms
mov
sahf
cmpb
xor
pop
jmp
mov
cld
mov
cmp
mov
mov
fistpl
xor
mov
mov
pop
xor
sub
jl
fisubrs
test
adc
jge
xchg
lret
sbb
sbb
and
push
cld
cmp
hlt
inc
bswap
fnsave
pop
pop
xchg
jmp
dec
clc
loop
mov
mov
sbb
gs
cli
mov
out
mov
mov
and
daa
add
mov
or
jp
rcll
inc
rorl
and
adc
outsb
adc
clc
enter
jbe
xchg
and
movl
ret
jnp
jbe
ret
add
pop
dec
pop
movsl
and
rcll
les
add
movsb
push
fwait
int
jle
cmc
push
mov
ret
dec
xor
insb
shll
sbb
push
daa
push
xchg
jo
lcall
sbb
or
jg
mov
fstpl
xchg
mov
cltd
cmp
mov
pop
push
pop
sub
cmp
sbb
mov
lret
daa
pushf
inc
sub
pop
lcall
xchg
cltd
dec
jnp
inc
mov
cmp
inc
je
enter
stos
loop
mov
popa
dec
cmpsb
call
push
test
adc
inc
xor
loope
xor
pop
out
sbb
mov
mov
jle
xor
pusha
mov
jnp
add
or
in
std
mov
ss
call
out
pop
fcompl
mov
push
pushf
or
aam
cli
mov
shlb
lahf
pop
fdivs
into
dec
aas
fs
sarb
mov
int
test
push
gs
data16
sub
in
push
fsubl
roll
ljmp
mov
pop
cld
sub
adc
mov
lock
fsubrp
ja
pop
sub
test
push
push
hlt
jns
and
sub
pusha
and
jmp
add
repz
aas
lock
xchg
push
loopne
sub
sbb
mov
pop
scas
jle
adc
inc
pop
orl
ja
mov
add
cli
jg
testb
mov
or
cld
or
lret
mov
sub
push
jns
sbb
xchg
add
dec
cli
xchg
lods
xchg
js
cmp
sub
xor
dec
dec
pop
jmp
out
jbe
jl
fcmove
lods
out
push
jecxz
iret
cltd
idivb
or
shl
adcl
mov
cld
adc
sbbl
jne
xchg
mov
sbb
add
xor
mov
pop
divb
fists
lahf
mov
jge
mov
sarl
mov
xor
and
jnp
shl
mov
cmp
outsl
mov
or
and
insl
dec
stc
pop
cmpsl
mov
adc
push
movsb
repz
cld
xchg
mov
adc
lds
adc
or
xor
sarl
jb
les
dec
or
pop
sub
mov
or
movsl
stos
xchg
cmp
cmp
in
push
mov
leave
stc
fdivrs
dec
testl
orl
scas
cmp
jp
insl
addr16
dec
xchg
flds
stos
jg
icebp
rorl
insb
lods
and
sar
xor
inc
jb
mov
add
inc
cltd
insl
jo
xchg
roll
test
add
inc
into
or
jb
adc
movsl
mov
pop
outsb
xchg
ret
cmp
fisubrl
mov
xor
sti
push
xchg
and
fistpl
dec
mov
lock
mov
and
mov
cvtps2pi
ss
aaa
out
push
test
mov
add
lods
jae
addr16
xlat
or
adc
out
sbb
inc
jb
idivb
add
fiadds
rorb
cmp
call
or
mov
mov
outsl
adc
dec
xchg
mov
mov
loopne
cmp
cmc
fs
sub
jne
dec
fistpll
ljmp
xchg
jne
push
outsl
popa
add
jecxz
int3
jo
jmp
xchg
and
repnz
mov
loopne
imul
nop
js
push
dec
jmp
or
lret
pop
call
mov
insb
adc
jnp
loope
push
enter
sbbb
jl
pop
xchg
stos
in
xor
sub
push
mov
dec
add
fwait
iret
inc
sarb
or
and
pusha
pop
fs
jge
mov
dec
xchg
int3
gs
imul
mov
push
rcrl
ss
outsl
int
lea
push
ljmp
sub
pop
fxtract
mov
sub
adc
cmp
pushf
std
sarb
push
frstor
imul
mov
clc
in
popa
repz
xlat
push
lds
xchg
dec
imul
mov
mov
and
mov
dec
pop
pushf
adc
imul
sub
mov
and
enter
jne
hlt
or
shl
orl
ret
cltd
lds
ss
jp
and
out
in
cmpsl
bound
pop
into
ds
jno
ss
mov
mov
lahf
pop
insl
stc
lcall
subl
ret
pushf
movsl
sub
xor
xchg
xor
sbbl
filds
inc
imul
inc
outsb
push
les
adc
test
movsl
mov
pushf
mov
mov
xlat
ja
mov
leave
xchg
mov
or
sbb
xor
adc
jmp
push
js
push
push
mov
imulb
clc
add
cmp
pop
mov
adc
push
sub
sub
sahf
cmpsb
jne
ss
lret
bound
div
inc
in
fcompl
mov
in
movsl
inc
xor
cs
cltd
mov
pcmpeqb
sub
inc
xchg
dec
ss
and
outsl
jmp
repz
sbb
jns
ret
sbb
inc
add
cld
push
int3
pop
clc
xchg
and
lret
pushf
test
orl
and
or
and
inc
dec
inc
add
test
gs
stc
jge
idivb
inc
push
xor
std
sbb
cmpsl
subps
jge
ret
ja
jmp
cmovl
clc
xchg
pop
cwtl
cmp
fwait
pusha
bound
addr16
je
push
xchg
sub
insl
pop
mov
push
sub
add
int3
pop
xchg
jle
sub
add
add
add
and
sahf
adc
mov
jg
repz
out
push
mov
int3
in
mull
lret
out
mov
shrb
out
or
and
cltd
dec
adc
movsb
mov
jo
add
and
inc
sbb
icebp
imul
aas
movb
call
imull
jne
mov
xor
out
loop
out
das
dec
push
sbb
pop
xchg
cld
jge
sbb
sbb
popa
mov
jg
jecxz
jge
adc
mov
pusha
sub
dec
jle
sarb
das
inc
push
clc
lret
mov
dec
iret
repnz
cmpsb
mov
jne
out
pop
jmp
dec
or
mov
mov
cli
and
add
in
jnp
and
outsl
cmp
stc
mov
xchg
repz
int
dec
sub
mov
xor
pop
cmpl
jmp
xchg
ret
add
idivl
std
stos
jp
enter
std
ror
in
leave
lods
test
ss
jae
fdivs
inc
outsl
lret
inc
and
sub
jnp
xor
hlt
inc
xchg
mov
lahf
dec
xchg
out
cmpsl
dec
std
add
cmp
jno
jp
mov
test
xor
jns
jl
int3
shll
xor
jmp
adc
inc
fisttpl
popa
rolb
dec
repnz
lret
sub
mov
sahf
dec
popf
fucomp
fnsave
inc
enter
insl
inc
mov
jmp
adcb
and
push
gs
hlt
adcb
outsb
shrb
or
and
andb
jg
inc
add
inc
jmp
out
push
sub
mov
sub
xor
sub
dec
and
pushf
mov
sub
movsl
fldl
add
pop
in
add
sbb
add
sbb
cmp
loopne
in
adc
outsl
cmp
jg
adc
mov
out
sub
push
jge
jle
pop
iret
loopne
movsl
cmp
insb
aas
mov
sarb
dec
shlb
es
les
mov
sbb
mov
push
xchg
lds
mov
pop
jo
xlat
bound
loop
add
mov
lret
jg
push
imul
sbb
sub
jmp
inc
out
mov
lock
std
xor
push
mov
sub
push
bound
in
xorb
cld
xlat
jge
mov
xlat
pusha
xor
int3
cli
adc
rclb
stos
mov
cs
and
sbb
cmp
jnp
push
hlt
inc
orb
in
adc
cmp
dec
push
lret
jmp
aam
push
xchg
inc
repnz
xchg
add
sub
jecxz
adc
dec
lea
repnz
pop
fcmovnb
loop
sahf
push
xchg
mov
pop
or
out
inc
out
or
sbb
jecxz
stc
das
sbb
shlb
sbb
movsb
jno
mov
sub
xorb
jle
fstps
adc
inc
cmpsb
int
int
es
and
popa
adc
rorb
push
mov
lret
push
call
js
pop
cmp
mov
fldl
pop
mov
jns
mov
mov
dec
push
xchg
fildll
mov
mov
sahf
mov
cmp
pop
mov
jecxz
ss
test
les
insl
mov
inc
js
fstpt
jno
cltd
lahf
adc
mov
xchg
mov
mov
xor
rorb
fs
sub
jno
jnp
jnp
cmpsb
add
movsb
add
rol
in
cmpsb
push
mov
mov
jecxz
out
loopne
lsl
outsl
out
push
mov
cltd
scas
sub
xchg
xchg
les
cmpsl
sbb
mov
push
orl
lahf
shl
sub
iret
stc
mov
sub
cmp
xor
lds
dec
lea
push
fistpl
xchg
jne
andb
mov
pusha
mov
add
mov
push
ljmp
cmp
jmp
adc
shlb
int
cltd
add
pop
mov
xor
movsb
cwtl
addr16
jbe
cmpsb
mov
fs
fnstcw
stos
mov
daa
add
xlat
test
insb
xchg
iret
dec
mov
cld
cmp
cltd
adcl
fwait
pop
dec
or
mov
aas
inc
dec
cli
mov
pop
xchg
pop
pusha
push
inc
out
sub
daa
pop
add
ret
sti
out
and
xchg
ret
jmp
or
dec
inc
insl
cmpsb
mov
push
repz
inc
sbb
ret
test
inc
repnz
push
call
push
cmp
popf
and
push
jl
insl
mov
movsl
inc
fwait
xor
ror
jnp
adc
pop
enter
pop
std
pop
mov
ror
add
add
lds
test
mov
pushf
lds
inc
dec
stos
dec
or
loop
test
cld
test
mov
pop
loop
push
movsl
xor
mov
imul
or
pop
test
xchg
rolb
or
sub
lret
mov
sub
add
push
or
frstor
dec
jmp
lahf
fnsave
dec
mov
add
add
lahf
in
pop
pop
jo
add
adc
test
fwait
sbb
divb
test
mov
or
loop
js
cmp
push
ljmp
into
je
data16
sbb
ss
insl
mov
push
or
sahf
cmp
inc
dec
mov
adc
lret
inc
mov
jle
sub
imulb
lret
icebp
xlat
arpl
push
adc
gs
cmpsl
xor
pop
out
mov
hlt
mov
lods
pop
pushl
or
hlt
insl
sbb
xchg
push
cmp
adc
pop
cmp
cmp
repnz
out
sbb
stos
idiv
out
int3
shufps
dec
lea
jno
inc
mov
dec
test
jle
mov
das
cmc
push
cltd
adc
shll
jae
mov
test
setae
mov
jcxz
push
mov
aam
out
mov
mov
sbb
fwait
iret
mov
popf
cmp
or
pop
das
cmp
mov
mov
int
std
mov
sbb
inc
addr16
scas
out
inc
pop
mov
xchg
dec
das
cmpsl
sbb
das
rcrb
ret
sub
incb
test
pusha
mov
fdivl
fdivl
data16
add
sbb
nop
mov
lea
cmp
vpextrw
lds
mov
push
pop
mov
inc
cmpsl
pusha
inc
jne
jbe
push
mov
jbe
adc
xor
sarb
pop
cld
stos
leave
in
mov
dec
sbb
sub
dec
xchg
popl
inc
xchg
adc
adc
or
in
arpl
jo
push
movsl
and
les
push
fwait
mov
pop
jmp
push
push
test
dec
xchg
push
sub
or
xchg
fistpll
les
hlt
mov
adc
pop
leave
shrl
divb
es
jp
lcall
pushf
test
pop
jmp
aad
mov
cltd
xor
cmp
mov
or
mov
sub
jns
push
lods
jne
push
cli
iret
clc
lret
or
addr16
push
out
sbb
bound
xor
lahf
xchg
jle
inc
cmpsb
sbb
mov
xchg
test
mov
jge
dec
adc
xchg
jns
sarb
pop
std
dec
pop
push
cs
int
ljmp
adc
fwait
push
cmp
test
or
ja
cmp
mov
je
jle
movsb
mov
int3
ds
inc
int
test
jo
cmp
int3
repz
popa
stos
or
adc
cmpsb
sbb
cmp
inc
pop
cli
and
mov
repz
xor
jne
or
out
in
inc
push
dec
out
dec
jae
cmpsw
ret
mov
add
mov
inc
pop
push
sub
stos
jg
xchg
cmp
cmpsl
sub
popf
into
hlt
outsb
mov
jo
push
ds
pop
and
mov
cs
dec
mov
fnstcw
dec
stos
jae
scas
outsl
fistl
jge
mov
aad
js
lret
dec
adc
aam
xor
cld
mov
dec
lods
bnd
bound
sub
repz
aas
mov
stos
testb
data16
lcall
and
push
divl
inc
sbbl
ljmp
mov
sub
sbb
clc
push
sub
jg
ficoms
cmc
clc
test
mov
lock
lret
push
xchg
inc
and
shlb
xchg
mov
pop
imul
xchg
movsb
lea
mov
pop
leave
nop
inc
sub
out
aam
jge
sahf
jmp
sbb
loope
xchg
adc
mov
imul
mov
push
inc
movsb
movsl
into
adcb
push
test
push
pop
cmp
jns
mov
call
push
js
aad
cld
divb
sub
pusha
test
lcall
gs
outsb
inc
jns
mov
mov
in
jg
in
and
into
dec
out
popf
jb
ljmp
dec
fcomp
popa
mov
or
mov
mov
cltd
lret
xchg
stos
fxam
inc
inc
mov
sbb
sbb
fdivs
push
dec
out
cmpsb
int3
sub
or
push
cli
sarb
ljmp
adc
pop
mov
add
imul
lahf
inc
jno
add
sub
leave
mov
mov
push
mov
cmpsl
mov
rcr
repz
xchg
sub
sar
dec
repz
jns
das
inc
fs
jg
pop
lods
cmp
aad
insl
add
rcrb
leave
dec
nop
cmovnp
mov
mov
sbb
sti
mov
or
inc
ds
or
sub
mov
push
cmp
mov
rclb
inc
mov
mov
js
xchg
enter
xchg
xchg
arpl
xchg
xchg
int
jle
cmp
mov
sbb
mov
or
popf
mov
dec
mov
ret
es
fadd
ss
cmpsb
mov
sbb
cmp
imul
mov
shrl
loope
cwtl
sbb
enter
mov
insl
mov
adc
or
and
scas
decl
cld
mov
fistpl
pop
test
bound
sub
movaps
repz
cmpsl
cld
clc
daa
or
shr
rcrl
and
jb
xchg
dec
nop
xorl
or
add
pop
mov
out
xor
jo
dec
add
sbb
dec
mov
stos
nop
cmc
pop
andl
xor
je
xor
ja
test
daa
lahf
out
in
mov
mov
mov
mov
scas
sbb
jbe
das
scas
jne
sub
pushl
sub
xchg
xorb
xor
inc
sbb
fidivrs
insb
fists
mov
psubd
js
scas
adc
cltd
movsb
or
ret
sarb
xchg
sbb
call
hlt
jg
jmp
fs
imul
mov
cmp
push
pop
sahf
inc
push
jo
mov
iret
and
pop
fistpl
dec
mov
push
ret
fdivs
inc
or
repz
inc
cmp
fwait
mov
and
pop
in
add
xor
jmp
lret
cmp
pop
mov
ss
les
pop
es
das
lock
movsb
mov
aaa
shl
sarl
and
inc
call
dec
push
mov
push
inc
cltd
xchg
out
push
jne
lea
sti
outsb
sub
and
arpl
sub
in
ficoms
dec
mov
daa
ja
jmp
jno
add
js
clc
imul
add
sahf
ficoms
lds
mov
adc
cmp
ja
xchg
and
pop
flds
pop
insl
incb
das
mov
iret
mov
add
sbb
adc
sahf
cli
out
sub
rcll
ljmp
test
or
leave
pop
je
or
add
xchg
pop
aas
addr16
sbb
or
pusha
push
call
and
adc
out
sbb
arpl
cld
xchg
sub
mov
push
test
add
adc
repnz
mov
push
in
mov
cmp
dec
or
jne
xor
ss
inc
aam
pop
aaa
sarb
cmc
dec
mov
fisubrl
jge
xchg
jmp
in
in
or
data16
xchg
cmc
fldcw
idivb
cmp
inc
inc
sub
mov
or
stc
jbe
xor
dec
mov
loopne
jne
mov
aad
ds
pop
xchg
dec
insb
cmc
outsl
fs
cltd
mov
dec
mov
push
dec
sarb
xor
inc
pushf
jmp
jp
xor
dec
in
in
aad
dec
sub
fsubrs
in
add
movsl
adc
aam
sbb
sub
xchg
enter
lea
mov
inc
inc
lcall
mov
xchg
mov
repnz
push
fistpl
mov
sbb
xchg
fcoml
adc
cltd
leave
andb
xchg
std
out
inc
and
mov
and
inc
dec
mov
xchg
mov
rorb
and
or
jns
or
sub
xor
mov
ror
call
cmp
mov
aas
imul
popa
in
js
stc
pop
mov
sbbb
xchg
xchg
and
sub
sub
clc
cmpsb
fistpl
mov
das
leave
les
pop
jp
inc
xchg
add
mov
sahf
add
xchg
and
xor
test
mov
bound
add
hlt
mov
add
jns
dec
jge
jne
pop
sbb
inc
mov
cmp
call
mov
sbb
stos
sbb
imul
pop
sarl
ficoml
scas
cmp
fildl
jle
sarb
subb
or
imul
or
fwait
mov
pushf
clc
lcall
std
cwtl
xchg
xchg
add
call
aam
xchg
mov
inc
stc
in
inc
pushf
dec
dec
in
lret
rorl
outsb
ss
xchg
jmp
je
adc
test
cld
outsb
mov
je
cmp
gs
js
add
jp
dec
popa
hlt
repnz
sub
mov
dec
scas
mov
cmpsb
inc
addr16
fisubl
adc
daa
add
iret
inc
xorb
cmp
add
sub
test
lds
hlt
push
pop
pop
out
gs
ss
pop
jb
outsl
mov
mov
fimull
push
mov
lods
push
iret
sub
out
jae
cmp
pop
dec
lret
adc
inc
cmc
jle
or
cmp
cmpsb
aas
dec
scas
cmp
pop
pop
and
mov
sti
std
pop
adc
repnz
test
mov
sbb
aam
add
and
pop
pop
faddp
aad
add
and
sarl
xor
js
push
adc
pop
rcrl
fsubs
adc
xchg
mov
mov
push
mov
bound
insl
inc
xchg
leave
mov
add
cmpsl
lds
mov
xlat
mov
cmp
jecxz
push
loop
mov
in
stc
mov
mov
insb
clc
imul
pop
aam
lock
ret
das
dec
pop
jbe
mov
bound
mov
xor
ret
lret
push
lods
pop
hlt
test
repz
ret
out
and
in
faddl
jnp
mov
and
or
inc
imul
icebp
mov
fs
aad
cmc
inc
push
jmp
mov
clc
push
mov
pop
fadds
pop
mov
xor
enter
xor
dec
cmp
cs
sbb
daa
mov
aas
in
adc
xchg
and
test
and
mov
sub
pop
testl
add
mov
adc
lcall
lods
shll
cmp
inc
push
sub
icebp
push
cmp
mov
fwait
shlb
pop
cmpl
xchg
test
popa
sub
pop
int3
sar
xchg
inc
rorl
mov
shrb
stc
inc
inc
add
lcall
sbb
lcall
in
js
pop
dec
xchg
xorb
dec
mov
cld
sbb
jno
cltd
jmp
add
aad
adc
xchg
mov
test
rcl
inc
jle
int3
cmp
pop
imul
push
mov
outsb
cmp
adc
pop
xchg
loope
mov
pop
sub
xchg
jns
pop
in
call
inc
push
stos
cmpsb
test
negl
add
add
pop
add
mov
andl
xchg
rclb
lahf
adc
lods
js
push
inc
lret
aaa
fs
leave
movsb
mov
lea
sub
lea
movb
mov
inc
arpl
pop
sbb
push
dec
popa
sbb
lods
inc
and
test
dec
outsb
popa
push
fldl
dec
lods
mov
stc
pop
stos
das
pop
jecxz
inc
sbb
mov
loop
sbb
fsubrs
je
aad
and
into
das
rclb
jae
in
clc
push
and
icebp
sub
cli
add
mov
cmpsl
mov
scas
les
mov
xorb
adc
sbb
ljmp
jne
add
cmp
inc
jle
jmp
mov
in
push
fstpt
xchg
inc
inc
xlat
cmp
das
out
pop
mov
repnz
dec
dec
inc
jmp
rcrl
int3
inc
pop
fcoms
or
adc
cmc
testl
push
call
inc
fiadds
push
stos
inc
in
fldt
stc
mov
icebp
mov
shr
push
and
sbb
mov
nop
mov
jmp
outsl
pop
push
jne
adc
mov
xchg
jmp
sbb
push
hlt
mov
ret
lcall
push
mov
out
into
cltd
cmp
sub
out
psrad
mov
test
and
jge
sti
ljmp
pop
int
mov
sbb
popa
out
ja
int
fs
sti
movsb
xchg
push
imul
out
push
xchg
enter
inc
mov
push
mov
or
push
xor
xchg
lea
frstor
cmp
call
or
sub
inc
in
xchg
imul
xchg
jmp
stos
mov
or
or
inc
add
pop
jmp
imul
sti
pushf
mov
rorb
aas
and
scas
and
mov
jg
cmp
out
mov
push
sahf
and
or
lahf
sarl
jg
loopne,pt
ret
sub
mov
popa
stc
cmpsb
std
push
push
orb
lods
pop
sub
mov
rcrb
and
and
or
cwtl
pop
pusha
pop
sub
xchg
mov
out
mov
hlt
ret
mov
cmpsl
cmp
inc
inc
stos
pop
adcb
lcall
insb
sbb
inc
push
and
jle
inc
inc
sahf
stos
mov
cwtl
in
xchg
js
dec
lock
inc
push
push
pop
sub
loope
lcall
inc
mov
cld
cs
out
cli
dec
adc
hlt
cmp
push
hlt
into
adc
mov
int3
add
sbbl
enter
jns
inc
pop
out
into
negl
pop
les
pop
or
pushf
pop
pop
pop
dec
test
push
mov
iret
jae
jne
push
out
cmp
dec
cmp
mov
dec
cmp
imul
fcomps
cmp
inc
dec
popa
mov
scas
sub
fsin
sbb
push
and
and
and
or
sub
addb
sti
add
dec
clc
pop
jmp
pop
mov
fistps
cs
sbb
push
addl
sbb
out
xor
xor
dec
mov
das
sbb
add
lret
ljmp
pop
or
sahf
nop
scas
and
cmp
dec
cwtl
rolb
mov
push
jns
and
jg
jbe
sub
lock
test
cmc
or
lcall
ljmp
leave
pop
mov
shll
mov
pop
adc
int3
inc
mov
mov
fbstp
lcall
test
loopne
fmulp
inc
sbb
cmpsl
sub
addr16
adc
or
add
push
adc
mov
sub
shlb
jns
ss
xor
call
or
jbe
out
mov
sbb
mov
les
sub
mov
sub
cwtl
mov
jbe
sbb
and
out
popf
cli
push
adc
dec
div
insb
inc
in
jnp
aad
dec
int
dec
cmpl
sub
shlb
mov
mov
mov
daa
cmpsl
or
mov
sub
stos
stos
arpl
add
mov
repz
notl
push
out
cmpb
loop
into
jo
xchg
adc
ret
jns
js
mov
sub
sbb
sbb
sbb
in
mov
mov
xchg
nop
inc
jge
sub
inc
jb
mov
dec
shr
xchg
pop
add
adc
imul
mov
clc
js
mov
in
push
pop
mov
xor
sbb
les
clc
inc
rorb
out
sub
frstor
cltd
pop
mov
mov
push
filds
and
xlat
xor
dec
out
xor
jle
in
pusha
adc
sarl
ret
xchg
mov
cld
andl
xchg
scas
in
out
nop
lcall
test
fidivl
jne
mov
aaa
rorb
test
or
cmp
leave
jo
jbe
sbb
inc
inc
mov
fiadds
bound
mov
lds
fbstp
shrl
bound
pop
sbb
jmp
hlt
xor
into
dec
lods
ret
stos
mov
xchg
and
repz
in
jbe
sub
xchg
jp
pop
popa
add
shrb
adc
dec
dec
jg
orb
fcomps
xchg
jno
jne
sahf
cli
insb
pop
push
add
fidivs
iret
pop
xchg
mov
jbe,pn
aas
xlat
fsubr
cmp
xchg
lock
sahf
jnp
jo
jnp
adc
mov
bound
sub
push
scas
dec
cwtl
add
mov
bound
popf
and
cmc
sbb
mov
adc
int3
movsl
pusha
adc
lret
aam
dec
je
xchg
mov
jbe
movsl
aam
sarb
ja
imul
cli
and
rcl
out
lahf
jle
push
popa
mov
cltd
adc
arpl
in
add
cmp
sbb
pop
dec
adc
fcoms
shll
mov
sub
fildll
lods
mov
or
out
sbb
in
inc
mov
pop
sbb
addr16
stos
mov
push
jae
jbe
and
addr16
std
and
mov
lods
inc
xchg
or
jo
loop
addl
add
push
sub
lods
add
inc
fcmove
out
cli
jo
cli
sub
jb
fnstcw
xchg
mov
sub
int3
in
push
sub
daa
cli
imul
fadds
sub
arpl
std
mov
jl
fisttps
mov
cmpsb
aas
loopne
insb
adc
dec
in
mov
insb
cld
inc
into
daa
dec
xchg
out
and
movsb
data16
out
mov
shll
mov
insl
sbb
mov
insb
icebp
imul
pop
jg
xchg
clc
rep
subb
cmp
gs
mov
push
mov
std
cmp
and
mov
repz
shlb
jmp
jecxz
push
fsubl
jp
testl
jge
xchg
or
fnsave
mov
xor
cmp
ror
push
pop
mov
sub
es
js
mov
mov
lret
and
or
sbb
les
push
push
add
out
int
sub
rolb
enter
dec
jo
ret
lcall
mov
adcl
lcall
lock
outsl
and
lret
and
mov
lods
int
dec
jle
push
les
test
lods
xchg
mov
adcb
and
in
repnz
icebp
lahf
loop
mov
push
mov
adc
pop
jns
test
test
dec
les
ja
pop
fistpl
mov
scas
add
dec
ljmp
xchg
daa
fisttpl
lahf
dec
xorb
negl
sub
int3
lret
mov
adc
sbb
mov
push
inc
int3
cltd
hlt
jge
jbe
cmp
adc
pop
popa
mov
in
pop
adc
jbe
pcmpgtb
icebp
in
mov
sub
stc
lcall
notl
mov
adc
aad
pop
sub
icebp
popf
xchg
in
rcl
and
and
mov
cmp
movsb
adc
getsec
int3
jns
mov
mov
and
out
jbe
xchg
push
out
add
jb
stos
cmp
jmp
mov
cmp
popa
out
in
or
adc
adc
arpl
hlt
xor
pushf
push
test
add
flds
test
lret
rorl
data16
lods
fisubl
pop
jns
pop
imul
ds
cmp
mov
jne
and
mov
nop
pop
fidivs
push
in
fwait
rolb
fdivrl
rcrl
mov
lret
push
pop
addl
mov
dec
sub
subb
jg
push
js
cmp
push
dec
sbb
adc
mov
cld
jo
sub
pop
xchg
dec
sbb
cmp
movsb
dec
sbb
add
mov
enter
inc
mov
bound
or
scas
jnp
mov
fdivrl
sub
ss
movsl
rolb
mov
movsb
test
mov
cmpsl
data16
mov
in
add
adc
test
or
std
enter
push
loop
call
mov
pop
aas
test
fstl
movsb
mov
popa
cld
sbb
stc
push
ja
xchg
push
in
or
roll
cmp
and
popa
xchg
aad
pop
nop
lea
mov
xor
jg
and
inc
rcl
sbb
cli
sti
test
movsl
pushf
xchg
add
xchg
mov
imul
nop
xlat
cmp
dec
insl
xor
int
sub
outsl
repz
test
jmp
mov
orb
xchg
mov
scas
fwait
dec
pop
or
in
xor
fbstp
adc
enter
add
xchg
mov
or
loop
popf
cmp
ds
es
pop
mov
in
hlt
pop
icebp
movsb
mov
jmp
mov
pop
jge
lahf
dec
inc
int3
lret
xchg
xchg
xor
dec
test
out
dec
mov
stc
ror
test
cmc
sti
imul
je
cmp
push
or
enter
subl
out
dec
add
pushf
icebp
lods
out
das
aam
test
and
aad
push
aad
fwait
les
jge
lcall
xchg
sti
cmp
mov
or
repnz
lods
add
mov
pop
dec
push
insb
mov
mov
daa
push
rol
outsb
inc
push
xchg
mov
mov
aas
nop
push
mov
mov
add
cmp
nop
mov
gs
loopne
and
aas
pushf
fcompl
or
push
sub
jmp
out
inc
mov
fnstsw
loope
rorl
mov
outsb
mull
lods
and
xor
loopne
jo
or
repnz
stos
jb
sbb
and
cld
bound
jbe
or
clc
lahf
arpl
cmp
inc
outsl
sbb
adc
cmpsl
adc
sub
and
pop
js
mov
dec
pop
mov
or
jne
cmp
push
jnp
jge
adc
mov
mov
sbb
or
adc
dec
sub
js
clc
sbb
clc
sbb
dec
out
imul
into
sbb
cwtl
lret
shl
inc
pop
mov
add
xchg
ds
jp
adc
fadd
icebp
mov
stc
clc
sub
fldl
inc
xchg
cltd
jg
cmp
stos
push
in
add
sbb
das
lcall
stos
or
adc
sub
fnstenv
pop
dec
call
mov
push
pusha
cltd
repz
jmp
ret
out
xchg
leave
and
push
adc
sahf
mov
lret
xchg
mov
adcl
shll
ds
fs
dec
fs
les
fucom
and
sbb
lret
jl
ficoml
jne
popf
and
imul
sahf
jg
scas
add
push
adc
push
push
push
or
test
adc
aam
or
ret
jnp
insl
icebp
addr16
dec
insb
sub
popa
popw
pop
xchg
out
ja
xor
sahf
or
xlat
sub
and
arpl
adc
cmc
xor
push
lret
xchg
packuswb
imul
movups
mov
pop
jl
lret
movl
aas
pusha
xor
ret
inc
iret
std
loop
mov
xor
pusha
push
add
pushf
sub
in
je
mov
push
flds
adc
ficoms
cmp
rcr
fisubl
push
sub
jnp
ret
repz
shlb
insl
and
mov
jnp
dec
xor
call
lahf
fs
lods
test
mov
ljmp
fwait
jle
push
sub
mov
xchg
loope
adc
mov
inc
jl
cmp
jo
mov
adcb
adc
and
mov
std
pusha
mov
outsb
jmp
lahf
in
jbe
out
rorb
cmc
xchg
loopne
flds
mov
js
xchg
sti
jo
adc
adc
fsubl
popa
lock
cmp
fisubs
dec
bound
push
or
mov
and
cmp
adc
aad
ja
adc
subb
or
mov
scas
mov
xchg
pop
push
dec
dec
shl
das
add
adc
dec
mov
mov
cmp
add
cmp
push
gs
mov
sub
jecxz
mov
decb
sbb
push
stos
mov
cmp
jne
mov
or
cs
out
mov
lret
enter
inc
lods
in
sub
push
les
push
iret
jp
xchg
sarl
in
rol
xor
imul
xchg
inc
test
sbb
mov
lret
dec
popf
out
cmp
push
xchg
rorl
mov
dec
adc
jmp
mov
repz
orl
fists
ljmp
int
adc
fsubrs
ljmp
jnp
sar
mov
out
mov
or
imul
xchg
mov
bound
sahf
in
xor
or
xchg
jns
je
arpl
add
xchg
sbb
mov
and
jae,pt
ljmp
fisttps
pop
xor
mov
mov
insl
fnstcw
lods
xlat
sbbl
jmp
mov
into
mov
jge
andl
adc
insl
ss
stos
mov
fnsave
xchg
xchg
cld
push
sub
outsl
mov
mov
cmp
jmp
insl
inc
inc
ret
or
and
jb
push
and
lret
int3
jle
mov
cmpl
aam
into
pop
mov
adc
dec
decl
xchg
inc
cmp
xlat
jl
push
xor
pop
jmp
pop
cmpsb
lret
xchg
dec
or
in
pop
xorl
mov
sub
mov
xor
sub
jnp
aad
adc
push
imul
outsb
mov
pop
sbb
push
aam
push
cmp
add
add
pop
cmp
cmp
out
cmp
gs
adc
lahf
cmpsl
loopne
jg
xchg
jg
sub
shll
jge
fbstp
sub
mov
mov
stos
jle
in
aam
jmp
insl
push
mov
push
cmova
jmp
xor
adc
lahf
ja
popa
jnp
sbb
xor
popf
testl
lea
inc
mov
add
add
repz
shr
mov
in
pop
rol
pop
dec
jp
sub
xchg
fidivl
add
xchg
sbb
daa
ret
aam
scas
test
rolb
rcrb
lock
jns
mov
xor
insl
sbb
push
cwtl
xchg
adc
mov
sbb
mov
scas
and
cmc
jns
popa
sub
jmp
data16
mov
mov
and
outsb
insl
div
fisttpll
test
mov
sbb
jp
shll
cs
ja
mov
dec
pop
jbe
xor
jno
or
scas
leave
pusha
mov
shrb
filds
and
pop
inc
idivb
push
mov
jne
jmp
je
jne
cltd
outsb
push
lret
pop
mov
in
inc
arpl
push
test
aaa
add
dec
inc
lea
dec
pop
ss
lea
imul
jnp
in
mov
push
imul
inc
in
popa
addr16
pop
out
fwait
dec
std
clc
and
fisubs
jge,pt
jge
add
mov
and
lcall
ljmp
hlt
cmp
cmp
sbb
fimull
lods
into
sub
xor
daa
ss
gs
adc
dec
cmp
ss
dec
sbb
sahf
jmp
xor
fs
cld
loop
orl
inc
adc
call
mov
into
cltd
icebp
lahf
mov
fcoms
aad
mov
jb
or
pop
xchg
xor
wbinvd
mov
in
hlt
pop
mov
pop
lea
aaa
les
out
mov
inc
and
mov
push
xlat
icebp
sbb
aad
or
jmp
popa
stos
scas
stos
outsw
int
sbb
pop
push
and
and
add
pop
pop
inc
mov
ja
cmp
gs
mov
das
push
push
sarl
aam
mov
in
sarl
xor
push
jo
mov
cwtl
cmp
mov
ficoml
adc
aas
loop
roll
adc
xchg
mov
fs
dec
sub
adc
loope
into
pop
out
lahf
movsb
mov
pop
pop
call
jno
mov
mov
xchg
pop
push
xchg
sbb
pop
roll
cli
in
or
in
aas
mov
jmp
aas
cmpsb
ret
js
pushf
in
cmc
rorb
jp
ror
loope
aad
push
jbe
sbbl
push
lret
fldenv
mov
and
mov
mov
out
std
add
inc
pop
ja
cmp
leave
js
cmp
repnz
and
mov
inc
inc
ret
inc
xor
scas
sub
fildl
ss
repnz
or
sub
push
inc
das
sub
in
and
lods
jg
in
mov
mov
and
or
inc
jg
xchg
cli
fdivl
pop
cmp
outsb
add
dec
push
lcall
or
test
sbb
xchg
lcall
lods
es
mov
pusha
repnz
js
fidivs
xlat
mov
mov
scas
jae
std
imul
lcall
pushf
rol
aas
fmulp
add
mov
xor
lret
sub
mov
mov
lods
xlat
cli
arpl
loop
dec
push
imul
xor
and
push
sub
sahf
stc
loope
hlt
fwait
shll
push
dec
subl
jecxz
insb
dec
push
bound
or
lcall
mov
arpl
jns
dec
push
jmp
inc
test
inc
add
mov
lret
xchg
jbe
xchg
pop
xor
xchg
call
aam
jp
mov
or
push
in
notb
mov
pop
nop
lret
out
divl
int3
sub
stos
mov
inc
leave
inc
out
push
orl
dec
cwtl
mov
aaa
cwtl
jns
and
int
into
mov
popf
std
les
decl
sbb
loopne
add
movl
into
sti
sarl
pop
jns
imul
loop
jbe
and
pusha
imul
outsb
push
adc
dec
xlat
out
xchg
inc
sti
xchg
add
xchg
and
adc
cmp
jno
fisubs
iret
push
jle
pop
pop
inc
or
fucomip
dec
mov
dec
dec
out
pop
pop
lahf
mov
test
fs
shl
add
nop
mov
push
repnz
push
std
cmp
dec
arpl
dec
jo
jo
mov
inc
and
shll
or
cwtl
pushf
dec
add
mov
add
sbb
adc
ljmp
rcrl
pushf
mov
mov
sbb
or
mov
lds
ffree
add
in
cmp
mov
std
add
dec
hlt
adc
push
hlt
push
xchg
and
andl
or
xchg
shlb
popf
sub
push
dec
lret
loop
rcll
xor
test
push
add
or
loop
push
lods
adc
fiaddl
jnp
neg
mov
sub
int
pushf
out
dec
mov
mov
mov
xchg
sbb
pop
mov
les
loope
fwait
notb
outsl
push
fmull
movsb
lcall
push
mov
mov
inc
jno
jnp
cld
push
push
adc
enter
xor
mov
js
mov
xchg
adc
rolb
std
push
cli
inc
test
dec
adc
jo
icebp
lds
outsl
lds
mov
rcrl
fsubr
jecxz
mov
sbb
pop
xchg
push
fwait
mov
arpl
jle
add
inc
dec
push
inc
stc
xchg
pushf
sbbl
cltd
stos
popf
adc
cmp
aam
out
jns,pt
enter
cs
sarb
sub
shl
and
mov
mov
pop
jmp
rcrl
adc
or
fisttps
or
fnstcw
mov
mov
jae
pop
mov
fcompl
subl
mov
outsb
mov
or
push
mov
xchg
dec
incb
loope
mov
push
sbbb
and
enter
push
outsl
pushf
cmpsl
cmp
cmp
punpckhdq
dec
and
push
push
mov
js
test
int3
mov
xor
mov
sub
add
push
or
push
inc
push
lods
fwait
jno
xor
or
xchg
outsb
xor
jmp
sbb
arpl
popf
mov
insl
xor
xchg
fbld
cmc
gs
jb
fs
ja
cmc
rclb
mov
sahf
lahf
cs
loop
pop
mov
adc
pop
dec
mull
mov
scas
jne
push
mov
dec
data16
and
icebp
jb
popa
or
js
nop
cmpsb
mov
lods
inc
cmpsl
fisttpll
mov
jp
adc
adc
jno
jne
and
cmp
adc
loope
jl
push
stc
cmp
fdivs
push
int3
xchg
lds
ljmp
xlat
mov
and
sbb
push
jno
mov
loope
cwtl
out
jecxz
fs
je
addr16
fucom
inc
add
repnz
jge
lret
ficomps
adc
jno
mov
in
fidivl
or
xor
adc
mov
call
das
pop
test
push
divl
mov
fnstsw
shrb
fstpl
sub
add
int
test
inc
pop
add
push
xorb
nop
shll
pop
jnp
int3
mov
xchg
or
push
sti
and
arpl
repnz
xchg
xor
arpl
daa
testb
je
pop
cld
sbb
inc
xchg
adc
mov
insl
mov
fidivl
xor
mov
les
rcrb
data16
ss
jl
out
je
sub
jne
shll
daa
push
pop
aaa
sbb
jecxz
and
mov
imull
cld
push
push
push
or
jbe
sub
push
dec
notl
stos
fucomip
cmp
cmp
xchg
add
imul
test
xlat
mov
out
jp
jl
scas
rcrl
iret
clc
xchg
jns
stc
cwtl
rcl
das
loope
xchg
fs
push
out
inc
xchg
repz
out
mov
add
fimuls
leave
arpl
rol
sbb
cld
mov
mov
mov
aad
lods
loop
out
sbb
dec
pop
ficoms
clc
loopne
cmp
add
mov
cmp
push
out
jne
xor
dec
pop
dec
insb
xchg
push
daa
enter
fwait
mov
imul
cmp
ficompl
mov
xlat
mov
neg
cmpb
jno
inc
lods
inc
sbb
ficomps
cmp
add
fsubl
stc
scas
repz
arpl
jg
push
call
push
add
and
and
mov
into
popf
test
push
xor
pop
mov
enter
es
jb
sub
jecxz
out
pop
and
xrelease
cli
jle
jmp
pop
test
mov
xchg
loopne
cmpsl
fnstsw
addr16
and
inc
int
insl
fidivrl
arpl
outsl
or
mov
mov
xor
popa
sbb
orl
into
push
pushf
xlat
dec
lret
push
xchg
push
movl
push
loop
test
xchg
lods
pop
mov
lods
lret
add
lret
repz
mov
stos
rorb
push
out
fcompp
gs
cltd
mov
icebp
push
mov
push
ficompl
cmp
or
lret
jb
xor
dec
sbb
pop
push
or
mov
sub
sub
push
loope
pusha
inc
sbb
push
shll
jg
ljmp
pushf
mov
cmp
and
xchg
daa
dec
lods
pop
mov
xchg
xlat
xor
mov
inc
pop
subb
mov
pop
aaa
fstp
int3
in
mov
leave
das
popa
fstl
icebp
bswap
xor
dec
movsl
inc
push
or
sahf
inc
add
cli
sub
or
in
cmp
and
mov
loope
test
jle
push
lods
pop
int
dec
int
cmpsl
in
push
fwait
xchg
inc
clc
addr16
cwtl
and
and
inc
xchg
nop
and
or
fiadds
or
jmp
or
push
cmc
inc
jg
lods
xor
nop
pmaxub
push
je
lds
into
mov
jg
mov
mov
or
daa
jg
fsubl
inc
pushf
adc
jg
cwtl
sub
add
pop
jg
aam
lods
or
mov
arpl
add
test
xchg
lods
fldenv
icebp
rcrl
in
xchg
inc
nop
loopne
add
cld
lahf
ds
adc
fs
cli
sbb
pop
pop
lea
add
add
xlat
fsubrs
dec
push
dec
push
jecxz
dec
scas
and
xor
rol
shll
std
sub
loop
pusha
mov
and
pop
aaa
push
cmpsb
dec
xchg
insb
add
ss
push
sbbb
mov
inc
int
frndint
imul
ficompl
pop
in
andb
call
lcall
pop
repnz
lods
and
fs
add
call
pop
xchg
sbb
inc
daa
and
adc
mov
mov
aad
inc
sti
mov
adc
dec
jmp
fs
xchg
adc
fisttpl
imul
lret
xchg
mov
push
int3
pop
adc
xchg
movb
cli
sbb
ss
lods
aas
add
sbb
pop
test
sbb
sbb
hlt
xor
es
scas
pop
in
or
stos
scas
jmp
cli
mov
push
loope
out
add
xor
lret
xorl
sbb
mov
arpl
int
cmc
jnp
mov
mov
mov
roll
xor
repnz
add
cmpsl
in
push
clc
cmp
xor
int
lock
mov
cmc
test
enter
addr16
cs
in
mov
and
shlb
notl
cli
sahf
cmpsb
cmp
inc
sub
pop
or
bound
sti
rcll
add
mov
xor
jecxz
pop
popf
inc
sub
sub
lret
sub
mov
inc
push
icebp
mov
lea
aam
jmp
inc
hlt
push
push
pop
pop
pop
push
outsl
js
inc
je
enter
cmpps
outsb
inc
xchg
add
push
mov
call
inc
ret
fcomps
mov
adc
fsubp
js
cmp
mov
mov
push
dec
lret
imul
xor
jb
dec
push
xor
mov
xor
xlat
adc
jnp
out
adc
mov
movl
std
jne
pop
std
pop
mov
out
xchg
pop
mov
inc
ja
cmp
repz
shl
xlat
xchg
stos
ja
ja
stos
push
pop
cmp
ret
mov
xchg
inc
mov
xor
adc
adc
mov
inc
arpl
push
or
movsl
mov
cmp
fstps
mov
add
divb
shlb
aam
repnz
dec
sti
adc
icebp
cmp
insb
mov
xor
outsl
stos
mov
cwtl
enter
stc
mov
inc
or
stos
dec
jl
lcall
imul
dec
ljmp
or
mov
push
and
into
add
adc
mov
mov
jl
jmp
push
mov
test
xchg
cmp
and
push
dec
and
hlt
repnz
icebp
xorb
or
cltd
inc
dec
nop
lods
xor
add
out
mov
cmpsb
add
ss
and
mov
test
sbb
sbb
adcl
add
or
xor
jle
cs
jl
imul
xor
sti
add
imul
out
xchg
mov
dec
mov
sub
jmp
rcrb
add
loopne
mov
mov
jge
jmp
cld
fsubrp
sbb
xor
dec
aas
sbb
sub
mov
stos
pop
push
xchg
mov
test
das
adc
cmp
xchg
or
xor
pop
pop
loope
inc
lahf
mov
mov
movsb
outsb
inc
mov
xor
sub
imull
in
inc
mov
and
xchg
sub
jle
pop
bound
call
dec
imul
pop
mov
pop
fcoml
push
xor
and
mov
je
mov
add
jns
shrb
push
xchg
shlb
imul
es
aaa
cmp
sahf
inc
or
shlb
aam
in
xor
and
dec
inc
pop
adc
int3
push
jnp
addr16
inc
orl
repnz
pop
inc
test
adc
push
mov
dec
jl
pop
push
mov
adc
pop
sbb
mov
jmp
lret
sub
and
add
insl
cmc
dec
sahf
int
sub
outsb
insb
add
lahf
pop
lret
in
xchg
xchg
mov
or
out
jns,pt
and
nop
pop
pop
fs
sbb
and
data16
roll
inc
push
int3
pop
mov
shl
movsl
push
aam
and
mov
ja
mov
stos
hlt
mov
je
lret
mov
jo
jp
inc
test
hlt
popa
pop
lcall
xor
mov
mov
sbb
pop
mov
push
loopne
insw
dec
lds
jo
clc
mov
ret
fists
and
push
addr16
insb
dec
dec
adc
jo
mov
out
loopne
cmp
test
jb
mov
imul
testb
pop
shlb
jb
in
pushf
add
out
out
stc
sarb
popa
cli
mov
jns,pt
sti
sbb
test
cs
pop
push
push
movsb
test
inc
ret
test
repz
ljmp
enter
jne
mov
shl
mov
sbb
xchg
jnp
mov
push
cwtl
lods
scas
mov
or
sbb
hlt
mov
sbb
adc
addr16
add
insb
addl
shlb
mov
lods
mov
xor
pop
movsl
test
xchg
pop
repz
lahf
jnp
sub
dec
insb
xchg
in
cwtl
add
mov
subb
filds
icebp
je
push
sahf
stc
gs
out
in
add
les
out
pusha
fldl
cwtl
inc
scas
cli
lds
cmp
lcall
lock
xchg
cs
push
push
mov
shl
fsts
or
push
xchg
fsubs
ja
and
cmp
insb
pop
incl
cld
xchg
aad
dec
xchg
cmc
adc
push
cmp
pop
sti
stos
sub
fldcw
pop
cmc
pushf
in
xchg
arpl
push
or
lods
lahf
pushfw
outsl
cltd
jmp
into
adc
fdivrp
mov
shrl
jecxz
movsb
dec
roll
repnz
divb
mov
lds
movsl
jmp
sahf
loopne
cmp
jmp
loop
out
xchg
cmp
bound
ljmp
xchg
std
jo
iret
mov
and
popa
inc
mov
call
cmc
adc
or
pop
aaa
dec
cmp
aad
sbbb
pop
add
arpl
xor
enter
mov
adc
sti
lods
in
ret
mov
sub
jge
cmc
movsb
out
add
dec
cltd
int3
inc
pushf
popf
push
xor
addr16
jmp
add
mov
mov
xchg
stc
ret
or
mov
sbb
nop
push
incb
cli
adc
mov
ficoms
and
sub
aad
cmc
or
push
jae
and
mov
lods
ljmp
mov
mov
adc
inc
sub
int3
push
or
push
rorl
and
inc
ficomps
ljmpw
add
adc
ja
fwait
xor
fstps
jge
sub
xor
jno
dec
mov
jmp
sbb
cmp
pop
stos
repnz
cltd
test
adc
aas
das
sahf
in
out
lret
in
imul
stos
jge
rol
lea
in
or
and
outsb
jae
loop
jmp
pop
jns
mov
ret
push
sarl
push
ret
xchg
or
dec
jge
and
push
inc
push
mov
in
xchg
dec
iret
push
xor
ss
stc
mov
sub
nop
mov
cmp
daa
out
cmpb
les
sbb
jmp
cmp
sub
jle
in
add
push
pop
push
jbe
mov
pop
mov
jne
xchg
mov
push
loopne
nop
sahf
das
push
pop
dec
jo
mov
or
aaa
push
repnz
test
dec
loope
das
or
call
jl
add
ljmp
dec
aaa
mov
or
and
xor
ror
idiv
iret
insl
sahf
movsb
add
mov
rcrl
xor
int3
jbe
lahf
pushf
loopne
scas
dec
test
push
leave
push
shlb
dec
ficoms
lods
or
out
aaa
jmp
test
ds
aaa
mov
jmp
jmp
stc
imul
sub
popa
mov
xchg
decb
push
xor
or
mov
pop
sbb
int3
sbb
pop
cmp
mul
mov
scas
add
in
add
leave
mov
mov
mov
in
jl
xor
cmp
xorb
call
stos
hlt
xor
sub
nop
pop
dec
movsl
fnsetpm(287
sti
push
push
mov
adc
and
std
or
pop
xchg
and
shlb
outsb
mov
mov
test
pop
jnp
xorl
xchg
push
add
xlat
ud1
leave
adc
mov
jno
lds
popa
fnstenv
js
fwait
sbb
mov
mov
xrelease
lock
push
lcall
pushf
lret
out
addr16
jmp
dec
cmp
repnz
jb
lea
add
cmc
call
adc
cltd
adc
cmpsl
pusha
mov
sbb
sub
inc
xchg
mov
adc
or
shrb
xor
orl
sub
or
jecxz
fmull
push
leave
lods
lock
scas
enter
inc
ret
xchg
push
cmp
push
clc
aaa
mov
mov
ret
lret
or
scas
iret
ss
cltd
stc
push
ret
jle
aam
aas
fidivrl
loopne
push
adc
cwtl
movsb
push
xor
cmc
popa
adc
lret
jno
pop
stos
inc
dec
sbb
or
adc
mov
outsl
push
es
call
call
jbe
cli
fwait
pop
push
mov
mov
sub
adc
lods
lcall
xchg
mov
mulb
push
pushf
and
mov
adc
lods
add
ljmp
sub
cli
pop
inc
mov
dec
fmulp
les
insb
movsl
pop
sbb
adc
and
stos
push
lods
dec
push
xor
push
div
addr16
push
mov
dec
stos
movsl
lods
or
mov
stos
mov
mov
xchg
imul
jmp
adc
daa
iret
shll
or
test
pop
ret
fwait
mov
lea
jne
ja
or
sbb
add
aad
outsb
lock
mov
fidivs
jp
daa
sub
and
in
push
ret
cmp
dec
aas
into
sarl
mov
jle
adc
inc
dec
mov
stos
push
inc
lods
into
and
addr16
cmp
jb
sbb
and
out
sbb
xchg
ljmp
daa
test
mov
aas
divl
frstor
mov
and
clc
fstpt
xchg
sahf
or
add
push
jle
jbe
dec
orb
lret
popa
cmp
fisttpll
jnp
jb
shl
add
adcb
pop
mov
outsl
fmuls
daa
pop
and
fadd
jno
clc
jle
repnz
loope
lock
jbe
repz
arpl
pop
sub
stos
divl
add
xor
loop
xor
aad
xor
ss
iret
ja
dec
xbegin
sub
mov
push
lret
insb
fidivs
and
out
inc
pushf
mov
icebp
dec
or
sbb
or
fwait
add
push
test
mov
adc
push
mov
inc
subb
roll
int3
sbb
jae
xchg
cmp
sar
xchg
or
mov
cmp
xor
dec
sbb
les
hlt
mov
jns
xchg
inc
fdivp
dec
pop
cmp
mov
mov
stos
xchg
fmuls
ss
ret
loope
fidivrs
outsb
int3
or
add
jb
idiv
adc
lret
fidivs
jmp
push
adc
sub
cld
pop
int
lods
hlt
xchg
lcall
sahf
xchg
fnclex
bound
shll
out
jbe
and
jge
movsl
dec
inc
les
nop
out
push
sti
xor
loopne
insb
cmpb
hlt
fbstp
jp
lods
mov
icebp
aas
mov
shrb
pop
jle
popl
cmp
hlt
push
push
dec
bound
testl
mov
aam
adc
adc
ja
sbb
lock
test
lods
test
and
inc
cmp
subl
rolb
stos
sub
dec
pop
les
movsb
adc
lret
out
cmp
push
repz
enter
call
cmpsb
call
fildll
cmpb
dec
cmp
cmc
sbb
mov
inc
ret
adc
je
mov
test
imul
adc
dec
inc
push
push
sub
int
jle
inc
sbb
and
mov
push
insl
mov
mov
cmpsb
push
cmp
cs
mov
pop
in
sub
mov
int
into
insb
or
outsb
es
test
pop
and
mov
loopne
daa
lahf
cmp
dec
and
dec
scas
fldt
mov
mov
and
pushf
test
insl
lea
mov
and
mov
dec
push
test
adc
push
dec
mov
xchg
in
push
inc
push
aam
repz
mov
shrl
push
jb
call
ja
inc
inc
inc
outsb
in
or
xor
push
ljmp
movsb
xor
mov
push
push
rcll
mov
xchg
sub
jne
subl
enter
push
aaa
xor
ret
movsl
pop
inc
int3
add
xchg
dec
mov
push
push
mov
mov
sbb
insb
aas
popa
xchg
fidivrl
xor
mov
add
cmp
sub
repz
ss
in
popf
shrl
rclb
lods
dec
cltd
cltd
scas
jae
enter
inc
rclb
mov
movsl
jne
mov
and
mov
mov
repz
jecxz
iret
cmc
jne
aam
inc
movsb
test
test
mov
popf
pop
xchg
cmp
stos
push
lret
test
push
int
adc
pop
push
sub
mov
pop
out
jno
data16
gs
testl
pop
jmp
in
sub
dec
mov
lock
cltd
jmp
pop
call
clc
xor
or
lcall
dec
test
stos
add
pop
or
test
leave
pop
leave
leave
or
sub
fwait
adc
cmp
jne
lret
imulb
add
pop
nop
jnp
sub
inc
jns
mov
push
push
xlat
xor
or
push
stos
clc
pop
stos
adc
xchg
shlb
aam
add
add
adc
cmp
and
bound
sbb
shlb
insl
fs
inc
cmp
pop
cld
add
xchg
ficomps
pop
sub
inc
xchg
xor
into
xor
dec
mov
jae
adc
push
xchg
cmp
jae
push
in
rolb
xchg
fld
repnz
lret
fcomps
jne
es
stos
ds
mov
test
inc
cmp
das
xchg
ds
aas
sbb
push
jp
mov
mov
mov
stos
mov
push
inc
sahf
orb
sub
mov
or
cli
loope
and
es
scas
shlb
es
cmp
pop
lds
sbb
aad
cwtl
les
pop
xchg
in
mov
jnp
add
mov
in
cli
fs
xor
cmp
aas
push
cmp
orl
mov
or
call
push
lods
rolb
inc
sub
cmp
dec
xchg
xor
outsl
jmp
daa
mov
sbb
movl
es
mov
test
jp
adc
movsb
mov
jecxz
cmp
mov
addr16
push
pop
orb
out
ds
cwtl
inc
mov
icebp
cmpsb
mov
shl
flds
xchg
inc
bnd
jge
push
xchg
roll
add
mov
and
fwait
xchg
orl
sbb
les
xor
push
mov
xor
inc
loope
jns
pop
std
aas
fsts
sbbl
lahf
inc
jmp
or
stos
out
and
mov
or
adc
lods
mov
xor
imul
sub
mov
fildl
jbe
push
jge
pushf
mov
add
dec
xor
fdivrl
dec
test
shll
cwtl
pushf
xbegin
leave
les
adc
sbb
enter
xor
and
cmp
jns
nop
dec
addr16
pop
insl
mov
cmp
pop
test
and
iret
sbb
repz
fstpl
enter
sbb
inc
lahf
adc
jnp
add
dec
sub
mov
lock
mov
ret
je
cmp
xor
push
sub
fstpt
int
push
test
sub
mov
dec
dec
repz
push
fs
arpl
int
loope
ljmp
cmp
and
leave
pushf
push
in
ret
sub
nop
mov
sti
dec
or
mov
sub
cltd
lret
jb
xor
push
inc
inc
sbbb
pop
stc
stc
movsb
ficompl
popa
sbb
les
sti
dec
pop
sub
div
sbb
cmp
gs
sub
mov
xchg
push
sti
mov
or
push
aam
or
push
sti
sub
add
dec
fisubrs
add
sti
cmp
mov
lea
pop
sub
and
int
mov
jnp
arpl
mov
es
imul
or
inc
insl
lods
inc
lock
subl
mov
nop
cmp
pop
pushf
ja
shll
sub
ss
ja
mov
xor
aad
ficoml
icebp
sbb
scas
adc
jns
scas
dec
inc
addl
out
inc
pop
shl
push
pop
ljmp
dec
enter
xchg
xlat
mov
inc
and
mov
test
xchg
push
sbbb
or
std
push
jae
mov
push
push
add
mov
gs
lret
sub
ret
aas
rcr
lods
pop
and
pop
push
test
mov
rcll
shl
xchg
stos
pop
dec
inc
adc
sbb
ficomps
stos
dec
into
xchg
shlb
and
aas
mov
test
mov
xchg
nop
clc
push
in
mov
ljmp
adc
iret
cs
pop
les
inc
xchg
push
orl
outsb
cmp
pusha
mov
xor
leave
aas
fwait
pop
mov
sti
adc
stc
push
pop
xchg
call
add
lods
mov
cmp
stos
mov
mov
jle
mov
jne
cmpsl
in
add
rcll
xor
movsb
les
push
and
jle
add
ffree
or
add
and
in
add
mov
ja
mov
mov
loop
loopne
mov
xor
pop
out
sub
gs
adc
mov
shrl
adc
ja
adc
sbb
sub
cmp
xchg
push
dec
mov
idivb
pop
iret
ljmp
ret
cmpsl
insl
push
push
rolb
lret
xchg
movsl
push
pop
in
enter
mov
and
ret
push
in
aad
push
ljmp
mov
or
cmp
ljmp
lods
leave
xor
mov
add
or
xor
jmp
inc
adc
sub
push
mov
inc
push
or
mov
mov
jo
fcomi
rorb
sbb
lret
push
pop
and
dec
mov
ror
push
ret
bound
into
xchg
cli
pop
outsl
adc
mov
pop
lods
push
inc
movsb
jmp
push
xchg
jnp
ss
dec
fdivrs
add
rclb
sub
fimull
into
icebp
js
arpl
outsb
loopne
jae
iret
mov
popf
hlt
jb
shrb
in
inc
mov
mov
pop
ret
dec
add
into
jns
sub
cmpsl
mov
pop
xor
mov
cmp
adc
cltd
repz
push
cltd
mov
jne
mov
fiadds
out
inc
test
lea
popa
call
jae
jo
imul
sarl
xor
into
js
andl
cli
pop
dec
movsl
adc
and
jp
and
aaa
stos
aad
xchg
frstor
in
add
xor
sub
scas
mov
daa
movsl
popa
subb
mov
mov
xlat
aas
push
sti
xor
jp
fucom
lock
xor
cltd
in
sub
es
xchg
movsb
push
pop
xor
in
push
lret
lds
shlb
cmpsb
jo
imul
push
lcall
shrb
cltd
test
test
rorb
cmc
jno
test
iret
jl
and
int3
icebp
into
inc
lock
cli
popa
leave
push
cwtl
in
enter
sub
push
lret
loop
insb
jnp
cs
inc
xor
jl
mov
or
push
frstor
hlt
push
popa
cltd
es
cmpsl
mov
stos
sub
cmp
inc
fs
inc
dec
xchg
sub
jo
mov
jecxz
mov
and
sub
loope
jg
nop
inc
andl
mov
sub
cmpsl
dec
sbb
add
cmp
ret
test
lcall
fnsave
add
pusha
aas
cmp
popf
movb
enter
inc
adc
icebp
dec
dec
adc
scas
jmp
adc
xorb
popf
and
push
ss
add
mov
adc
add
test
push
into
pop
dec
jmp
jmp
mov
jmp
dec
xlat
imul
les
loope
popa
cmpsb
add
fistpl
roll
mov
mov
popa
pusha
xchg
jne
pop
and
and
jno
dec
add
dec
lcall
mov
or
bound
adc
or
inc
outsb
mov
std
and
scas
ret
cmp
or
dec
push
pop
cmpb
jne
mov
out
test
jae
inc
or
push
or
and
mov
movsb
mov
mov
push
xchg
xchg
in
insb
jmp
frndint
fnsave
cmc
movsb
ret
cmp
jp
cmpsb
lret
arpl
fidivrs
pop
push
loop
xchg
dec
leave
mov
jmp
movsb
pushf
mov
ret
lret
aad
xlat
add
out
out
lcall
pusha
mov
insl
sbb
mov
cmp
mov
pop
idivl
das
ljmp
lahf
mov
sti
rcrb
inc
xor
jnp
pop
mov
insb
cmp
pusha
pushf
insb
inc
pop
rorb
push
fwait
shrl
mov
xlat
dec
pop
or
fbld
aad
xor
je
push
sub
fiaddl
sbb
add
mov
aad
sub
fstps
xchg
jns
fs
adc
jl
out
arpl
dec
pop
call
cmpsl
add
fdivrs
sbb
int3
jecxz
outsl
cmp
sbb
mull
aam
cld
and
push
daa
ss
and
cmp
jae
jae
ljmp
ficomps
and
nop
push
mov
adc
sahf
xchg
jmp
leave
and
lods
dec
out
shll
adc
lret
sbb
dec
cmp
movsl
push
jb
cmpsb
pop
and
in
push
aas
mov
mov
outsb
daa
cld
sarb
fnstsw
cld
mov
into
pop
ffree
pop
iret
push
mov
test
jg
aaa
or
sub
daa
xor
imul
test
in
fidivrl
aad
call
outsb
xor
or
fimuls
movsb
mov
inc
inc
sub
mov
sti
mov
out
ror
repz
iret
adc
fildll
cmp
mov
data16
mov
stc
add
or
push
int
lret
aas
sub
lret
outsl
test
dec
xchg
test
mov
stc
andl
xchg
mov
sbb
rolb
repz
roll
pop
push
aad
mov
and
imul
hlt
pop
mov
xchg
movsb
inc
mov
sub
lods
xor
loop
lods
or
push
add
xchg
push
adc
jl
pushl
insb
lods
cld
adc
pusha
sbb
dec
loope
movsl
subb
dec
cld
cmc
sbb
popa
orl
les
daa
fisubs
xchg
decl
in
pop
pop
push
outsb
inc
aaa
xchg
icebp
ds
lds
pop
hlt
and
push
neg
xor
movsl
pop
bound
idivb
or
in
add
and
push
inc
int
xchg
aad
mul
xchg
xchg
scas
jl
adc
fstp
mov
cmp
popa
jmp
pop
xchg
enter
outsb
inc
pop
scas
inc
push
jl
fsubrs
sahf
aaa
hlt
les
sub
push
outsl
fwait
jg
stc
mov
jl
pop
jb
jl
pushw
leave
xchg
fcoms
push
scas
cmp
pop
sub
cltd
cmp
xchg
pop
sbb
clc
add
and
dec
fidivl
push
xor
lods
xor
int3
loopne
jp
movsl
loopne
mov
cs
ficomps
dec
mov
pop
push
inc
sub
nop
push
mov
std
rcrb
adc
xor
outsb
push
cmp
push
pop
and
mov
and
leave
pushf
push
or
out
mov
lea
sub
push
xor
push
cld
ret
push
fstp
jns
dec
or
lock
sub
testb
in
iret
mov
outsl
movsb
mov
rcrb
hlt
inc
lods
mov
and
shl
in
fs
ret
popa
mov
rcrl
bound
push
mov
and
movsb
rolb
aad
addl
cs
cmp
inc
and
fnstsw
bound
push
lahf
add
ljmp
aas
daa
sbb
and
jp
pusha
fbstp
and
mov
push
mov
in
test
push
mov
mov
cmp
cmp
mov
repz
sub
shl
movsb
mov
xorb
xchg
xchg
adc
ljmp
jmp
jge
mov
movb
and
xlat
add
mov
sbb
jg
in
push
mov
inc
dec
mov
push
and
xchg
mov
and
jo
mov
cmpb
or
lret
jmp
in
xor
xor
xchg
adc
dec
test
addr16
test
inc
clc
or
pop
fidivrl
xchg
cltd
pop
mov
fbstp
add
jmp
shlb
mov
das
sub
bound
int3
sarl
sarl
or
jmp
jae
iret
sarb
fisttps
push
std
adc
xchg
lcall
mov
push
adcb
jns
aad
ret
pop
push
std
dec
pop
push
jns
lret
xchg
dec
test
gs
jmp
addr16
popf
pop
fmulp
pop
sar
leave
jns
mov
push
push
pop
push
mov
jmp
imul
mov
aad
mov
inc
pop
imul
mov
cmp
lods
mov
xchg
sbb
and
sarb
movsb
in
hlt
inc
push
inc
popa
pop
les
cmp
push
hlt
or
je
xor
jge
insb
sub
insl
dec
push
or
stos
mov
popf
idivb
imul
shll
fdivp
mov
fists
xchg
cmp
data16
add
scas
jmp
xchg
es
dec
sbbl
rcrl
pop
fistpll
add
scas
cltd
cmp
pop
insb
adc
mov
and
in
cmp
mov
mov
in
les
pop
push
push
mov
je
cmp
aam
cmp
jnp
adc
or
xchg
xor
pushf
pop
mov
mov
or
jecxz
mov
movsb
adc
push
inc
pushf
lret
sbb
rclb
out
pusha
inc
dec
inc
out
jmp
push
aas
jae
mov
adc
fs
inc
jl,pn
dec
js
adc
pop
jno
cwtl
clc
in
lods
mov
daa
xor
adc
push
pusha
pop
dec
push
cli
daa
jmp
pusha
inc
and
int3
pop
pop
pop
cmc
adc
adc
sbb
out
mov
sbbl
arpl
and
in
inc
sbb
pop
call
movsl
daa
xor
xor
rclb
inc
stos
arpl
scas
jns
pop
add
dec
imul
cmpsb
js
pop
lds
mov
int3
add
sub
rolb
int3
imul
shrl
and
in
sbb
and
and
rorl
push
repz
repz
xlat
jmp
fdivs
xchg
daa
mov
sahf
jae
xchg
cmpb
push
mov
imul
cwtl
sbb
rcll
mov
dec
jl
mov
mov
mov
addl
mov
outsl
cld
and
test
sbb
and
jl
into
cmp
jmp
test
inc
ret
movsb
in
or
js
push
aad
enter
call
je
push
push
scas
dec
outsb
sbbl
pop
jno
fistl
scas
jbe
imul
pop
mov
push
and
out
jl
pop
out
orl
jo
push
loope
out
lods
shrb
and
inc
outsl
sub
rcrb
jl
add
mov
in
mov
decb
pusha
cmpsl
inc
imul
sbb
fmulp
and
in
sbb
pusha
sbb
adc
dec
arpl
loop
fwait
insl
mov
jmp
push
scas
sahf
jge
mov
aaa
aas
mov
insb
jns
add
andl
sub
sti
mov
call
jae
cmp
mov
dec
xchg
rcll
pop
lea
jp
mov
sarb
sbb
mov
std
mov
xor
imul
rorb
cmp
mov
push
sub
jo
dec
add
and
push
sub
orb
xor
mov
sub
lock
and
enter
xor
cmpsb
ds
adc
popf
push
or
push
mov
xor
or
sti
gs
fmulp
sahf
out
mov
sarb
das
pop
popa
or
xchg
test
scas
cs
cwtl
push
scas
movsb
xchg
sub
mov
outsb
lds
scas
fnsave
jne
mov
paddusb
jo
out
add
mov
loop
adc
mov
icebp
fs
and
xchg
mov
cld
in
inc
repz
cs
outsb
in
pop
jecxz
cmp
ret
inc
mov
cltd
adc
fisttpl
lock
mov
cmp
int3
jns
arpl
pushf
cltd
xor
add
ds
mov
cmp
pop
mov
mov
cmpb
rcr
jne
push
out
dec
dec
or
sbb
lea
into
xchg
mov
mov
outsb
stos
flds
xorps
aam
dec
imul
lcall
dec
push
pop
mov
lods
adc
sub
sbb
loop
icebp
popl
jp
cmp
pop
out
daa
pop
popf
add
jmp
pop
fcomps
adc
in
fwait
adc
cmp
sti
jns
rol
fsts
xchg
sub
push
push
cld
out
mov
cmp
ljmp
jmp
test
sti
ficompl
test
ror
lret
mov
adc
adc
outsl
in
xorb
inc
fdivl
push
out
bound
mov
in
mov
into
xchg
cmp
in
int3
mov
mov
imul
int
inc
stc
mov
xor
sbb
mov
cmpl
in
popf
jns
jl
push
inc
sbbl
scas
mov
jge
pop
add
aam
mov
pop
cmp
das
inc
shrb
push
lea
pop
dec
and
test
pop
dec
scas
mov
popa
std
sub
lret
push
sbb
int3
loopne
push
notb
or
xchg
push
testl
sub
ja
insl
mov
fidivrs
loopne
inc
push
inc
push
add
mov
outsb
mov
mov
push
test
test
push
mov
dec
cs
mov
xor
xchg
fisttpl
sub
aas
outsb
fcmovbe
lcall
mov
mov
adc
out
mov
mov
xor
scas
push
fwait
pop
inc
lods
xorl
sahf
je
add
ds
movlhps
mov
icebp
je
outsb
cltd
mov
adc
mov
mov
lods
mov
test
mov
pop
loope
cmpsl
sub
testl
fwait
sub
stos
rcrb
pop
and
dec
repnz
outsb
push
mov
out
pop
bnd
loop
dec
jno
test
sbb
mov
repnz
sbb
or
and
out
mov
mov
insb
idiv
dec
push
out
fld
shrb
pop
ret
arpl
lea
cld
dec
xchg
or
cmpsl
push
push
add
cwtl
in
xor
jmp
shl
shrl
sbb
divl
aam
stos
push
mov
push
lcall
xor
cmpsl
lret
jne
mov
enter
stos
pop
lcall
mov
jl
scas
loopne
pushf
xchg
fsubp
or
pop
or
mov
call
adc
xlat
xchg
idivb
ror
shll
inc
cmpsl
leave
lret
test
jge
mov
mov
jns
cmp
adc
fisubl
inc
in
cmc
inc
xchg
jl
mov
or
dec
xchg
mov
add
push
and
mov
push
mov
outsl
insb
out
aas
in
pop
push
jb
test
imul
ljmp
pop
adc
jo
std
into
mov
int3
jns
rclw
xchg
jns
mov
das
pop
movsb
or
dec
dec
push
or
xchg
fidivl
add
lret
inc
adc
pushf
icebp
or
stc
pop
adc
inc
cwtl
daa
jns
jo
fs
xor
lds
mov
mov
aas
sbb
xchg
inc
cmp
xchg
add
les
sbb
mov
push
nop
rolb
icebp
adc
jp
lds
icebp
xor
shrb
mov
push
fs
rcl
ret
rol
xorl
jbe
shrl
iret
enter
xchg
out
or
sti
jno
ja
push
sti
mov
and
lock
lods
jecxz
idivb
bswap
pop
pop
xchg
xchg
ret
inc
or
inc
dec
push
movsb
int3
cmpsb
and
jecxz
ss
add
dec
lock
push
cmpsl
xchg
push
pop
ljmp
ret
xor
jle
stc
jbe
or
out
mov
add
iret
xchg
mov
cltd
sub
sbb
pop
xor
sahf
imul
push
lahf
outsb
jbe
jnp
pop
mov
sbb
and
xor
imul
add
sbb
sbb
and
push
sarb
dec
enter
and
add
lods
imull
stc
neg
mov
out
and
xchg
lcall
lock
imul
bound
pop
sbb
test
jae
jge
stos
dec
repz
cmp
pop
and
mov
sub
cmpsb
sub
push
dec
lahf
sarl
xchg
pusha
daa
gs
sub
int3
fstpl
mov
inc
inc
pop
movsb
sub
push
adc
sbb
out
fs
leave
aas
fcoml
int
dec
inc
outsb
dec
push
inc
ljmp
int3
sub
imul
dec
insl
fcmovu
sub
adc
pop
ja
or
vandps
mov
mov
clc
aam
ja
lahf
enter
clc
cmpsl
les
lea
mov
stos
fcoml
insb
gs
push
rcrb
push
loopne
adc
cli
and
jle
pop
call
test
xchg
jge
pop
adc
jecxz
jmp
sbbb
popa
out
sbb
push
dec
in
add
dec
jle
and
lahf
je
dec
andb
sub
mov
mov
fcom
test
jae
mov
sub
ret
in
shlb
jno
xchg
inc
testl
add
sbb
std
in
ss
xor
dec
xlat
lock
rorb
subl
mov
fwait
jbe
cmp
mov
add
dec
sbb
adc
outsl
ss
push
pushf
aad
lret
pop
mov
mov
ljmp
or
je
mov
inc
lods
push
jb
fistpll
mov
mov
dec
mov
loope
aaa
inc
dec
mov
dec
test
lahf
inc
xchg
das
sti
arpl
rcrb
lock
push
rcrl
loop
incb
and
mov
add
pop
adc
dec
push
cmp
into
shlb
adc
rcrb
cmp
stos
jge
mov
movsl
jb
insl
pop
mov
fisubrl
xlat
mov
int3
xchg
test
cli
ret
movsb
jb
xchg
daa
not
jg
mov
cmp
fisttpll
mov
int
adc
aaa
sti
jne
ja
ret
xchg
mov
jne
lock
add
fcompl
arpl
insb
xchg
inc
mov
in
fbstp
pop
scas
std
out
insb
insb
xchg
pop
hlt
and
adc
push
sbb
scas
add
cmpsl
notl
dec
js
xchg
int
inc
mov
lret
mov
push
xchg
xor
inc
jmp
jle
sbb
add
sub
xchg
sbb
shl
pop
gs
dec
pushl
sbb
add
adc
pop
hlt
scas
xlat
ret
into
xor
mov
xor
popf
xchg
cmp
add
stc
sub
call
mov
inc
ds
fs
sub
push
and
pop
sbb
popa
adcl
mov
xchg
rep
fwait
or
idiv
lock
loope
xchg
mov
push
in
push
adc
bound
ja
lret
fs
mov
mov
js
mov
mov
dec
lods
aaa
jmp
popf
jae
xor
pop
xor
mov
daa
rclb
jnp
mov
data16
gs
mov
ja
adc
dec
or
mov
inc
pop
fistps
in
es
add
pop
mov
test
or
jge
int3
cmpsl
or
jno
cmpsb
lods
xchg
lods
pop
lock
mov
push
inc
cmp
test
jno
loop
mov
lods
jns
fists
loope
lods
dec
cmp
mov
jbe
repnz
sub
jmp
mov
sbb
jle
push
dec
cwtl
mov
sbb
in
xchg
insl
pushl
popa
popa
mov
shl
pop
test
xchg
fisttpl
pop
out
sbb
das
js
fildll
and
mov
add
push
lods
int3
pop
and
xchg
add
adc
popa
cmc
dec
push
out
dec
xchg
mov
arpl
jge
lds
sbb
fs
mov
mov
iret
jle
popa
mov
push
sbb
add
adc
inc
mov
mov
xor
add
mov
enter
xchg
xchg
adc
xchg
into
cltd
ret
aas
pop
orb
add
int
pop
shrl
cmpsb
lea
dec
jne
mov
inc
push
lds
push
call
popa
addr16
test
outsb
adc
imul
push
sub
inc
or
into
dec
and
stc
subb
outsb
mov
fwait
nop
push
cltd
dec
mov
or
mov
in
jp
fcmovnb
int
out
aad
jle
in
xor
loopne
sbb
ja
pop
mov
pop
hlt
lods
sub
jl
mov
es
insl
int3
inc
imul
jae
add
sti
xor
inc
ja
inc
sti
push
daa
add
lods
fistl
cmp
pop
aaa
xor
add
inc
cmpsb
cmp
mov
inc
movsb
fisubl
jns
push
add
jbe
repnz
clc
xchg
rorl
inc
imul
imul
subb
adcl
pop
popa
cltd
mov
push
les
xchg
repz
jno
inc
pop
and
clc
and
xor
xor
mov
mov
repz
fisubs
inc
inc
movsl
xor
push
inc
jl
bound
dec
lods
movsb
pop
add
xor
popf
cmpb
dec
xchg
xor
add
imul
call
push
cltd
sbb
jmp
test
fwait
mov
sub
sub
in
mov
cmpsb
sbb
aaa
xchg
mov
jns
dec
adc
fisttps
roll
andl
popf
test
into
rolb
fistps
add
jle
test
mov
xchg
mov
and
push
xchg
fcomps
or
mov
mov
xchg
or
xchg
in
aas
in
mov
pop
mov
inc
aad
push
popa
and
mov
out
lcall
in
or
stc
push
shll
sub
gs
ss
adc
pop
je
or
dec
and
jb
xorb
das
jmp
fcmovu
aam
fwait
test
les
pop
push
mov
cld
mov
out
sbb
mov
pop
loop
push
fldt
ficoms
cmp
cmc
call
mov
leave
sbb
fildll
mov
jg
xchg
sub
orb
lret
adc
jae
imul
xchg
test
dec
xor
xchg
dec
cmp
inc
mov
movb
mov
sub
cltd
and
cmpsl
je
jb
hlt
enter
dec
xor
and
testb
xor
jns
xchg
adc
or
lods
loop
leave
ret
sbb
sbbl
inc
dec
mov
fsubrs
mov
cmp
xchg
pop
das
int3
loopne
xor
xchg
and
mov
sub
fadds
orb
outsb
push
addr16
arpl
into
xchg
cmpsl
pop
fwait
inc
fimuls
sub
pop
movsb
pushf
push
int
push
jl
aas
inc
mov
pop
int
fistl
push
xchg
add
test
sub
fdivl
jo
xchg
lahf
mov
push
jo
cld
cwtl
in
sbb
xor
push
rcrb
xchg
sbb
push
sbb
inc
inc
int3
fisttpll
sub
adc
inc
mov
mov
ljmp
mov
pop
sbb
aam
xorb
mov
xor
fists
mov
mov
pop
pop
dec
or
mov
movsb
std
cmp
ss
push
lods
les
clc
or
sbb
dec
lret
pop
jp
out
imul
adc
sti
sub
aam
mov
cltd
fucom
adc
sbb
sbbb
xor
pop
push
adc
pop
mov
cmp
xor
mov
iret
popa
imul
addr16
icebp
xchg
dec
pusha
stos
fsubrp
jmp
fimull
push
pop
mov
mov
roll
mov
cmp
dec
push
mov
push
into
or
bound
hlt
xorb
add
pushl
inc
popf
testb
xchg
rolb
sbb
dec
lcall
insb
roll
cmpsl
xor
outsl
mov
data16
xor
push
jns
xor
jno
jb
add
shll
ljmp
cmp
cltd
and
insb
notb
popa
cmpsb
stc
xchg
test
inc
push
insl
mov
mov
jo
fstps
cmpsl
inc
out
and
and
jecxz
sbb
inc
pop
or
push
xor
enter
repnz
addr16
add
out
dec
cmpsl
push
fs
shrb
jg
cwtl
mov
push
add
add
inc
outsl
notl
dec
jb
ds
lret
pop
dec
popl
mov
decb
pop
xor
out
cmp
shrl
enter
sub
mov
inc
adc
inc
mov
cwtl
insl
fwait
xchg
js
testb
inc
test
leave
adc
outsl
cs
push
push
push
jge
cltd
cmp
les
jne
mov
lods
sbbb
xlat
xchg
clc
mov
jge
punpckhbw
add
sub
mov
xor
pop
xcrypt-ecb
cmpsl
or
jge
cmc
imul
repz
sub
aaa
fsubr
stos
fisubl
xchg
add
or
push
popf
mov
addb
shlb
ss
shl
jne
dec
jnp
inc
lods
jle
rclb
push
mov
mov
loop
inc
js
xchg
push
movsl
fisttpll
push
in
xchg
inc
fstps
cmp
lret
and
add
imul
cltd
fucomip
adc
dec
ds
adc
dec
fsubs
loopne
in
cmpsb
aaa
push
lret
jle
out
dec
popa
scas
push
adc
insl
mov
stos
sbb
popa
pop
incl
aad
pop
push
outsb
mov
stos
lcall
sub
pop
fldenv
cmc
add
pop
fisttps
xlat
mov
pop
mov
inc
adc
and
push
and
inc
lods
xchg
fwait
and
sbb
add
mov
cmp
and
orl
mov
jns
mov
in
lock
inc
dec
sbb
insb
notl
or
test
sbb
mov
fs
jae
xor
test
bound
add
push
ror
adc
cmpsb
push
in
into
gs
lods
mov
push
pop
mov
dec
push
movsl
and
into
cwtl
ret
decl
mov
adc
adc
push
pop
sub
mov
pushf
fldcw
and
je
sub
push
clc
stc
stc
fwait
daa
repz
mov
call
xor
and
xorl
adc
scas
or
or
dec
loop
sahf
xor
push
adc
int
daa
and
sub
cmc
adc
jge
outsl
mov
fwait
dec
inc
iret
imul
aad
mov
inc
xor
mov
incb
mov
jp
xchg
jb
fidivs
dec
ss
and
repnz
cli
icebp
repz
insb
repz
adc
ret
rol
dec
aam
push
out
jb
jo
cmp
sbb
mov
pop
mov
in
jo
clc
mov
inc
push
out
ja
sti
outsl
sub
ds
mov
cmp
add
shll
add
mov
or
and
mov
lret
mov
lret
loop
push
outsl
ds
outsl
lock
mov
mov
vcvttss2si
mov
cmc
ja
daa
xchg
and
stos
push
mov
imul
lods
iret
loopne
pusha
repnz
pop
sti
xchg
push
jmp
out
or
mov
stos
xor
std
sti
push
outsb
sti
mov
jne
lea
loop
jge
mov
cmp
loope
cmp
test
test
das
int
adc
pop
pop
test
inc
mov
mov
fnstenv
dec
loop
jp
sub
sbb
push
fstpt
sub
mov
ja
mov
cli
repz
lods
pushf
arpl
loop
mov
out
add
fsub
shrl
in
xchg
popa
mov
inc
sub
int3
inc
adc
jecxz
xor
arpl
pop
ret
sbb
sub
mov
push
pop
add
stos
xadd
dec
xchg
cmp
out
out
cld
lahf
mov
fwait
add
cltd
push
push
fldcw
ret
dec
dec
shr
ret
std
stos
mov
xchg
xchg
ja
imul
fstpl
xor
jg
fcmovu
sub
jg
ret
sub
loopne
gs
fisttpl
cld
sub
mov
insb
jno
sub
push
mov
dec
test
lock
xor
lea
int
fsubrl
scas
dec
rorl
enter
hlt
mov
das
add
fcoms
psubsb
mov
xchg
std
sbb
jecxz
pop
cmovle
dec
pop
mov
icebp
mov
mov
dec
or
push
cld
test
sbb
pop
lahf
and
pop
inc
adc
jnp
clc
xchg
sub
mov
mov
xchg
push
popa
jns
mov
inc
inc
and
xchg
fs
inc
imul
sti
mov
jecxz
jbe
pop
iret
or
inc
int
sub
fldt
lods
add
cwtl
sbbl
ja
inc
inc
push
mov
add
inc
push
xchg
lret
sub
stos
hlt
out
insl
lock
inc
xchg
shlb
lods
fdivp
sahf
out
sbb
mov
add
lcall
jno
shrl
mov
dec
or
mov
jge
pop
pushf
dec
out
pop
pusha
and
lock
enter
mov
xor
leave
cmpsb
lods
popf
pusha
cltd
add
aam
dec
push
and
fyl2xp1
gs
xchg
inc
js
xchg
out
fidivl
pop
popa
dec
ljmp
bound
cld
fmul
popf
mov
data16
loopne
jp
pop
add
gs
out
mov
mov
mov
push
out
inc
int3
mov
add
popf
lock
aam
inc
loopne
std
lock
sti
xchg
dec
xchg
mov
stos
dec
lods
aam
aam
adc
hlt
fs
push
loopne
scas
or
xrelease
xor
lahf
rolb
aam
adc
je
popf
loopne
lret
insl
shl
push
mov
shll
add
and
or
and
lods
inc
arpl
popa
sbb
and
repnz
mov
and
bound
sub
lcall
push
jp
leave
mov
jbe
out
xchg
mov
lcall
loop
int
xchg
sbb
ljmp
std
dec
add
xchg
icebp
ficompl
adc
out
xchg
movsl
push
dec
jae
icebp
outsl
sbb
dec
or
xor
lods
jno
add
inc
push
addr16
nop
sub
xchg
pop
inc
jmp
daa
out
sti
popa
vpavgb
mov
push
inc
arpl
xchg
outsl
and
xchg
mov
add
sbb
mov
mov
sub
adc
mov
xor
mov
sub
cmp
xchg
dec
jp
sti
jne
mov
xor
cmovp
mov
xchg
subl
icebp
data16
mov
fstpl
mov
xchg
push
push
mov
jge
out
icebp
cltd
and
adc
shl
jno
jns
adc
jge
push
adc
pop
sbb
dec
jo
jl
jo
or
xchg
inc
scas
xchg
imulb
cmp
enter
xchg
sub
adc
and
adcb
nop
rcrb
daa
cmp
pop
mov
pop
cld
std
add
xorb
lock
adc
cmp
pushf
js
mov
sub
add
in
inc
mov
pop
xchg
insl
popa
das
xor
test
das
push
pop
int3
les
popf
jl
gs
popa
adc
dec
ja
adcl
bnd
xchg
mov
clc
xor
lcall
clts
sbb
inc
mov
cmp
xchg
sub
mov
xchg
cli
call
mov
mov
rorb
pop
fst
jle
fisttps
xchg
testb
jge
inc
mov
mov
rclb
push
imulb
pop
insb
xchg
mov
jg
mov
inc
pushf
addl
xchg
xchg
xchg
shlb
faddp
lcall
add
pop
test
insb
addr16
jo
leave
cmp
addb
iret
dec
and
pusha
mov
gs
push
xlat
out
int3
push
bound
cmp
mov
lods
ret
jl
and
dec
loopne
sub
or
pop
xorb
ss
mov
icebp
jb
lds
andl
mov
inc
mov
cli
fsts
ss
adc
fstl
sbb
cmp
pcmpeqb
mov
popa
repnz
or
icebp
inc
loope
cs
jle
push
sub
push
mov
xchg
ja
push
jl
pop
sarb
lcall
lods
dec
cli
adc
popa
test
movsb
jecxz
int
adcl
rol
pushf
xchg
pandn
mov
cmp
push
aaa
cmp
push
daa
ss
cmpsb
add
pop
scas
dec
dec
inc
hlt
imul
shrl
cwtl
shll
lret
and
jae
pop
jg
fucomip
cmp
outsb
subb
rorl
aam
jae
imul
jmp
out
xor
sub
adc
sbb
outsb
shlb
pop
sbb
mov
xchg
or
dec
dec
push
icebp
xor
lods
shlb
mov
jno
dec
xchg
aas
stos
push
test
dec
dec
les
popa
and
push
or
lock
ss
out
jns
add
les
cld
or
adc
lahf
pop
mov
cmpsl
lods
mov
enter
jno
xchg
or
mov
and
pushf
push
das
popf
push
inc
cmp
inc
mov
mov
addr16
xor
ja
hlt
lods
dec
jb
mov
int
add
or
inc
dec
xor
cmovle
sub
pushf
cli
inc
pop
out
sbb
aad
enter
pushf
in
cmpsb
push
pop
sbb
push
iret
cmpsb
pop
arpl
nop
addr16
mov
pushf
mov
mov
ret
add
mov
xchg
push
xchg
ss
stc
or
lods
popf
sbb
call
fwait
sub
add
xchg
pop
or
loop
xchg
inc
add
fdivs
push
dec
daa
cld
arpl
jl
outsl
out
mov
sub
aas
mov
and
cmpsb
or
enter
sbb
lcall
add
xchg
jg
jl
sub
and
push
lcall
adc
dec
cmp
mov
sub
mov
mov
mov
es
inc
add
mov
out
ret
shrl
pop
loope
cs
xchg
sub
enter
psraw
aad
frstor
fildl
in
jmp
aas
pop
dec
aaa
ficoml
repnz
jae
inc
fdiv
out
sahf
mov
adcb
lcall
arpl
jns
je
popf
ror
pop
sub
mov
cld
pop
bound
add
lret
adc
dec
jne
adc
cltd
inc
retw
aad
or
nop
sub
sti
cmpsb
mov
xchg
mov
clc
in
sbb
test
hlt
and
pop
xchg
pop
sub
insb
repnz
cs
enter
mov
xor
lock
mov
push
lret
cmp
sub
dec
xchg
lock
into
xor
cld
jge
int3
leave
fsubs
hlt
cwtl
ljmp
rorl
addr16
adc
inc
sub
mov
cs
addr16
push
jle
or
sbb
mov
das
push
add
push
add
je
in
pop
popa
popf
pop
ret
xchg
pop
pop
ret
pop
jno
and
sbb
mov
icebp
xchg
addr16
movl
enter
xor
test
pusha
pusha
adcl
js
cmpsl
sbb
sbb
xchg
push
cmp
and
inc
pop
pop
xlat
pop
sarb
stos
loope
mov
outsb
lcall
inc
int3
fsubrl
aaa
adc
pop
insb
dec
mov
mov
mov
movsl
idivb
test
icebp
sahf
and
mov
dec
cwtl
pop
jb
xor
shr
inc
sbb
xor
imul
and
jecxz
adc
lods
push
shlb
push
jno
scas
mov
lcall
cli
pusha
movsb
in
pop
inc
rcr
aam
cmp
sbb
dec
add
cltd
out
ror
daa
add
pushw
sbb
adc
int
inc
or
push
mov
dec
jno
mov
push
jmp
jecxz
sbb
out
jp
lcall
push
and
cli
fnstcw
int
loopne
cmp
gs
push
int
push
pop
loope
movsl
inc
jb
dec
aad
sbb
push
add
ljmp
test
imul
sub
pop
mov
addb
push
outsl
aaa
int3
pop
lods
jns
pop
and
movsl
rcl
adcb
xchg
jmp
lea
call
inc
xor
adc
scas
int
in
lret
adc
popf
jl
mov
into
stos
mov
jge
add
in
pushf
mov
or
imul
jg
loop
not
sub
or
lods
cmp
ret
xchg
push
popf
mov
jl
mov
adc
stos
jae
fistps
fwait
push
cs
mov
cmp
dec
sbb
dec
pop
add
std
in
mov
jecxz
xlat
pop
addr16
lds
mov
repnz
jmp
mov
sti
jne
sub
jmp
shl
dec
xor
out
add
dec
xchg
fdivl
mov
dec
ss
push
mov
es
mov
popa
inc
rolb
or
imul
ljmp
cli
lods
xchg
inc
cs
sub
in
fmull
lret
es
cld
sub
std
repz
stos
rorl
sub
sub
inc
cmc
test
ds
inc
push
movsb
inc
into
out
sahf
jae
les
cld
push
cmp
inc
xchg
xchg
sbb
fsubrl
mov
xorl
mov
data16
mov
push
or
mov
bound
mov
adc
test
out
sub
mov
inc
loopne
arpl
mov
pop
xor
push
sbb
lea
sub
movsb
or
jecxz
nop
dec
out
repz
sbb
loop
imull
imull
and
dec
scas
xor
jns
jnp
imul
push
les
andl
jle
aam
popa
push
ss
xlat
inc
ret
mov
test
sbb
cld
xchg
mov
xor
mov
push
iret
int
gs
pusha
push
imul
cmp
push
rclb
js
scas
in
cmp
and
and
mov
mov
sbb
sbb
jbe
mov
and
aas
mov
mov
pop
xor
mov
jne
push
and
xlat
repz
xor
lcall
mov
movsl
into
push
mov
push
xchg
dec
repz
mov
or
xchg
sbb
subb
adc
sti
mov
push
cld
jg
aaa
out
fwait
or
lds
inc
sub
pop
into
rcr
jg
cmp
adc
or
dec
pop
push
scas
pop
cs
pop
test
aaa
roll
push
and
push
dec
lea
mov
out
shrl
adc
jge
push
aam
adc
sbb
xor
and
xchg
negb
iret
popa
push
dec
xlat
add
call
cmp
rolb
scas
cltd
cmpsb
jno
insl
fnstsw
into
rclb
lcall
and
stos
adc
cwtl
cwtl
movsl
fadds
jmp
mov
inc
ja
xchg
dec
pop
push
das
cmp
insb
inc
scas
out
and
pop
xor
nop
push
adc
sbb
cwtl
adc
cmp
pop
iret
mov
loope
inc
cmp
sbb
jb
out
pop
je
push
sbb
das
mov
leave
in
and
mov
scas
mov
add
jb
inc
sbb
popa
and
mov
xchg
sbbl
and
enter
xchg
rcl
out
sbb
bound
inc
mov
and
and
or
xlat
sbb
shlb
add
push
inc
sbb
xor
cmp
xor
dec
fldcw
mov
cltd
mov
or
add
sub
or
inc
mov
fsubrl
push
cmp
js
lods
rolb
cwtl
or
scas
sbb
outsl
cmpsb
xor
push
push
fdivp
imul
xor
push
push
lcall
cmp
adc
pop
cmp
mov
mov
pop
popw
pop
xchg
popf
call
and
cmpb
sbb
not
insb
xchg
and
insb
push
xchg
mov
sub
mov
pusha
cli
xchg
jp
add
in
push
mov
pop
xchg
cld
es
xchg
fbstp
clc
aam
xchg
adc
daa
je
xor
mov
cmpsb
testl
xchg
jl
mov
ret
lret
jge
mov
sbb
cmp
add
or
pop
cltd
dec
ds
negl
in
enter
jge
add
mov
ss
jp
inc
inc
sub
mov
push
cmpsb
mov
sub
sub
es
les
push
mov
add
daa
jbe
cmpsl
lock
dec
lods
mov
dec
xor
fiadds
lahf
xchg
loopne
imul
mov
icebp
inc
mov
lock
daa
stc
and
mov
imul
aaa
sbbb
loope
sub
notb
loop
cmp
add
dec
scas
daa
push
dec
pop
adc
add
pminsw
mov
mov
sub
mov
repz
cmp
push
and
loope
fsts
inc
jns
jbe
jp
jl
mov
and
testl
sbb
cmp
rorb
les
adc
xchg
mov
int
jo
sti
out
jns
inc
xchg
pop
mov
aas
mov
sub
fwait
aad
stc
scas
sahf
dec
dec
lret
cmp
xchg
sub
mov
fwait
bnd
ja
pop
cmp
xchg
bswap
or
sbb
mov
cmp
std
and
lea
mov
aaa
pop
jg
or
xchg
movsl
push
push
lods
insb
fmull
pop
adc
xor
jnp
inc
sbb
mov
mov
mov
xchg
cli
mov
adc
hlt
add
jbe
icebp
mov
xchg
jne
mov
xor
mov
inc
dec
nop
cmpsb
outsb
ljmp
rcl
sub
mov
sarb
ret
rorb
adc
hlt
dec
mov
pop
in
add
jp
into
daa
xchg
mov
dec
dec
cmp
xor
mov
xchg
mov
es
mov
call
insl
shrb
dec
sub
fdivl
lcall
shll
mov
out
and
adc
pop
fstpt
rcrb
dec
imul
mov
xchg
and
jb
call
lock
sbbb
mov
or
push
and
and
and
mov
aad
les
movsl
xchg
push
ss
ret
aas
idivl
sub
xor
out
out
test
sub
ss
lds
imul
push
stc
fwait
and
das
insb
push
jmp
xor
jnp
sub
sbb
aas
cmpsl
pop
xor
add
mov
xchg
lods
pop
lcall
push
les
test
lea
and
inc
and
pop
push
push
xor
mov
or
test
push
xorl
adc
push
mov
cwtl
movsb
fimull
inc
data16
mov
adc
push
jge
xor
cltd
jns
dec
test
popl
pop
xor
stc
sbb
xchg
popf
leave
loope
loopne
imul
out
or
sub
into
pop
or
test
jnp
push
prefetchw
outsb
daa
pop
mov
lret
mov
cmp
adc
fistpll
roll
add
scas
imul
scas
xchg
adc
enter
sbb
enter
pop
out
clc
mul
jmp
jne
cmp
sbb
cmc
xchg
mov
mov
jno
or
pop
aaa
add
int
js
in
mov
dec
sub
outsb
add
mov
pop
pop
lret
jbe
ja
and
push
dec
stos
adcl
sub
int3
fwait
mov
jnp
adc
lcall
mov
xchg
dec
jbe
push
outsl
sub
mov
out
xor
add
stc
shlb
fldl
adc
xchg
push
mov
aam
mov
mov
enter
popa
adc
test
mov
aas
mov
pop
lcall
dec
mov
inc
jbe
in
dec
pop
leave
fcmovb
mov
adc
push
mov
lcall
scas
in
dec
mov
jae
or
gs
and
xor
out
sbb
pop
sti
xchg
fsubrp
or
rcr
adcl
and
cs
inc
les
ficomps
mov
out
mov
xor
jne
jns
orb
imul
lcall
notl
mov
mov
movsb
pop
rorb
pop
xor
punpcklwd
test
fwait
jl
cmpsl
neg
mov
push
cmp
sbb
cmp
cmp
or
and
test
enter
stos
sbb
fadds
mov
dec
adc
mov
jne
les
pop
jne
mov
movsb
lahf
cmpsl
jmp
jno
pop
aaa
jae
cli
lods
nop
mov
adc
pop
mov
mov
stos
rcr
sub
cmp
cli
pop
lea
push
pop
or
movsb
nop
jae
push
or
call
leave
mov
int
in
repnz
lds
arpl
jns
imul
xchg
outsb
sbbb
sub
nop
pop
cmc
lods
dec
dec
xlat
adc
push
out
inc
cmp
adc
sub
push
in
cmp
sbb
mov
or
pop
pop
inc
gs
cmp
add
and
sahf
inc
loop
jne
aad
jbe
cmp
test
clc
stos
jecxz
pop
sahf
cmc
xchg
lahf
rorl
push
mov
nop
in
inc
mov
data16
fnstenv
icebp
add
adc
add
shll
sub
jb,pt
movsl
call
in
ds
sub
in
out
pop
xlat
shll
ret
mov
mov
or
or
jp
or
fnstenv
sub
lods
mov
push
std
xor
sub
mov
or
aam
fwait
push
mov
sub
sub
mov
add
mov
stc
ret
xchg
mov
movsl
cmp
andb
jae
cld
daa
in
mov
outsb
fs
movsl
cwtl
and
xlat
scas
aas
add
bound
pushf
xor
outsb
xchg
fwait
addb
clc
test
or
cli
dec
inc
and
xchg
cmc
cmp
test
hlt
rcrl
fnstsw
scas
les
jb
pop
sahf
enter
jbe
imul
clc
idivl
scas
ret
mov
inc
sbb
xchg
jmp
mov
out
test
arpl
std
cmp
xor
decl
jl
add
popf
cld
inc
sub
mov
pushf
or
adcl
inc
repnz
in
aaa
jo
cmp
jmp
int3
push
pop
aas
sub
mov
pop
popf
lock
mov
pop
jne
jl
mov
lods
popf
inc
dec
push
sahf
test
fiaddl
inc
push
outsb
cld
push
jle
cmp
lret
add
jmp
stos
mov
or
test
push
xor
shrl
xor
sbb
fnstcw
push
jb
sub
fdivs
sub
mov
pusha
pop
or
stos
mov
test
mov
rorl
sbb
lods
xchg
cmp
jge
jecxz
jp
aas
mov
jbe
in
inc
lock
and
movsl
in
push
mov
push
fbld
rorb
push
mov
adc
jae
popa
notl
jnp
xchg
ret
mov
pushf
push
cmp
xor
mov
ret
mov
jp
and
dec
pop
sub
inc
pop
lahf
inc
push
stos
dec
sub
jbe
stc
jg
dec
or
fstpt
aad
int3
mov
or
mov
enter
dec
ljmp
dec
test
aaa
lcall
jo
sub
fcmovbe
or
lods
das
inc
push
arpl
push
iretw
nop
sbb
sub
shlb
out
stos
pop
ja
dec
jmp
lods
faddl
pop
adc
jo
lretw
mov
xor
add
fnsave
inc
lahf
adc
sub
pop
negb
ret
ljmp
bound
test
call
call
mov
addr16
insl
into
mov
daa
xlat
loop
dec
jmp
pusha
fdivrl
mov
cmp
inc
sub
iret
sbb
lods
out
sarl
int3
aad
push
fs
push
inc
out
push
ss
pop
shll
in
test
sub
mov
rcll
pop
test
cli
out
push
fiaddl
jecxz
lahf
jnp
and
hlt
or
adcb
xchg
ret
stos
mov
fnstsw
in
movsl
sahf
sbb
inc
fs
call
jbe
insl
or
je
inc
jne
dec
jne
sbbb
lods
dec
daa
cmp
fidivrs
mov
lahf
mov
push
scas
fidivl
xlat
xchg
xor
leave
xchg
ljmp
cs
mov
jns
mov
dec
outsb
push
lret
pop
dec
push
imul
lea
add
lcall
shrl
push
push
cmc
imul
call
add
andl
mov
movsl
cmpsb
jl
xor
sar
jp
cmp
cmpsl
xchg
jns
loope
cmp
out
or
mov
and
rol
sub
and
cs
pop
lds
aaa
mov
sub
data16
push
mov
pusha
pushf
aaa
fmuls
and
pop
sbb
in
popa
stos
pop
push
sub
mov
dec
pusha
push
xor
ret
lcall
inc
cmp
es
cmpsl
shll
test
mov
out
xchg
mov
jno
jo
sub
mov
mov
shrl
lcall
cmp
dec
outsl
shl
push
stos
pcmpeqd
sbbl
pop
idiv
push
adc
inc
repnz
push
push
or
pop
test
in
jge
mov
testl
cmpl
cmp
add
inc
sub
dec
popf
pushf
outsb
inc
loopne
std
push
jmp
insl
loop
xchg
ss
xchg
sub
jo
cmp
fucomip
add
sbb
lock
mov
movsb
adc
js
mov
cmpl
xchg
xlat
push
xchg
lahf
jno
xchg
nopl
sbb
jl
and
dec
push
sahf
ret
aad
push
or
dec
inc
imulb
call
fidivs
aam
lea
mov
ljmp
mull
add
or
cmp
in
mov
gs
stos
sub
ss
rclb
ja
pop
ljmp
mov
sub
mov
int
push
sbb
cltd
stos
jecxz
js
mov
into
xor
inc
nop
cli
adc
xchg
lahf
inc
add
add
out
test
xlat
enter
mul
push
jae
fldl
data16
push
add
and
xchg
mov
mov
loopne
pop
mov
loope
daa
sub
sbb
jb
xor
call
jge
mov
jnp
mov
xor
les
out
mov
xchg
cmpsb
xchg
cmp
mov
xchg
bound
add
rclb
jp
inc
repnz
xchg
cmc
mov
icebp
cmpl
jne
mov
scas
pushf
xchg
pushf
inc
add
call
sub
dec
lods
push
sbb
fsub
or
adc
mov
cmp
pop
imul
inc
scas
mov
shl
cmp
mov
jne
push
stos
pop
test
pop
cli
mov
rolb
push
jne
das
clc
hlt
cmp
xchg
mov
in
ret
add
jmp
xchg
nop
mov
xor
int3
sahf
loop
mov
inc
sub
mov
mov
adc
push
ljmp
push
xchg
push
iret
push
fidivs
adc
xchg
mov
jbe
jnp
push
cmp
in
jp
arpl
out
ret
jle
leave
ljmp
mov
mov
mov
xchg
fwait
dec
mov
push
cmp
inc
bound
xchg
jmp
rclb
adc
cld
call
je
repnz
push
sbb
pop
stos
fst
arpl
shrl
jns
insb
adc
dec
es
adc
jecxz
or
or
aad
or
pop
jae
pop
incl
loope
xchg
cmp
cmp
and
mov
jbe
movsl
xorb
xchg
lret
or
xchg
das
mov
aam
sti
dec
mov
ss
xchg
fcompl
or
lahf
inc
stc
les
in
and
test
repnz
jecxz
xor
or
gs
popl
mov
cmp
dec
mov
add
andb
out
out
sub
sbb
aaa
subb
pop
les
rcrb
aad
jnp
mov
jo
xlat
and
cmpsl
inc
pushf
sub
add
jmp
pushf
gs
mov
jnp
dec
push
int
in
shlb
lods
adc
imull
cmp
mov
mov
insb
enter
pop
xorb
lds
and
shl
sbb
mov
pop
jge
aam
pop
sub
sbb
dec
adc
fists
cmp
cmc
sub
loop
daa
dec
cs
push
shll
stos
ja
cmp
add
shl
push
and
mov
sbb
rcll
mov
pop
jns
add
out
mov
mov
jnp
xor
or
pop
sti
sbb
popl
xchg
or
jl
repz
and
push
in
pop
push
and
in
outsb
loopne
inc
xchg
sbb
roll
das
out
cmpsb
jo
in
pushl
pop
and
sbb
arpl
repz
int
jecxz
cmpsl
sub
push
cmp
sub
push
mov
lods
jl
or
push
addb
in
lret
mov
and
ret
es
pop
pop
jne
popa
xchg
loopne
cmp
sub
push
cs
shrl
popf
mov
push
add
xchg
sbb
jb
sub
testb
call
or
or
loope
pushf
ja
test
arpl
pop
mov
test
adc
lahf
push
xchg
cmp
mov
push
bswap
or
jo
cmp
jg
pop
push
enter
pop
pop
xchg
jo
xchg
sar
jne
icebp
push
sbb
ds
cmpsl
pop
inc
loop
stos
out
xchg
and
cmp
push
cmp
addl
or
fbstp
mull
push
movsl
pmuludq
ss
push
lahf
and
sub
popl
jns
jg
add
outsb
cs
add
cltd
dec
daa
pop
lods
sarl
out
in
push
mov
sbb
or
in
dec
in
lds
xor
mov
jl
push
pop
popa
into
and
mov
push
test
or
scas
lcall
or
mov
mov
pop
outsb
jno
int
lcall
push
dec
push
lock
jl
sub
std
or
mov
lock
and
loopne
stos
pop
shlb
sarl
and
addl
sub
inc
adc
js
push
jnp
leave
cmc
in
mov
inc
in
lods
cmp
add
mov
sbb
xorl
or
dec
pop
pusha
out
and
jg
imul
arpl
rclb
fmul
imull
mov
hlt
mov
mov
dec
sbb
es
xor
pop
ds
call
xchg
xchg
out
xor
dec
push
push
xchg
insl
xor
cmp
push
push
pop
fwait
add
or
imull
add
mov
xchg
ret
cs
adc
xchg
xchg
push
ja
dec
fdivrp
lahf
mov
mov
nop
mov
fnstsw
sub
loope
cmp
loop
xchg
xchg
mov
iret
and
xchg
sub
xor
mov
sbb
call
bound
aad
dec
dec
loope
sbb
jp
push
pop
cmp
pushf
ss
sbb
data16
mov
stos
popaw
ret
test
icebp
jg
mov
cmc
jae
add
aaa
sub
int3
mov
add
mov
inc
das
scas
pop
inc
add
and
or
and
sahf
test
lds
jp
pop
int3
ret
in
xor
push
mov
fldl
loope
inc
mov
sbb
inc
nop
cwtl
cli
push
xchg
push
adc
out
cltd
out
xor
push
push
pop
mov
orl
sbb
std
les
dec
int3
push
subl
jecxz
out
sub
xor
sub
xchg
push
ss
cmp
aam
mov
call
imul
lcall
stos
dec
mov
orl
pop
ret
inc
inc
in
ja
js
xor
pop
mov
add
jge
push
in
arpl
jb
in
cmc
sarl
leave
sbb
cmp
lcall
sti
mov
rorl
cltd
adc
push
lea
xchg
cmp
sbb
jb
in
aas
sti
adc
mov
mov
mov
mov
xchg
pop
ret
int
adc
imul
int3
xchg
lea
push
cmp
outsb
pop
or
xor
data16
mov
mov
lods
xchg
fwait
in
test
loopne
or
out
pop
push
and
mov
data16
sarl
adc
cmp
scas
cld
pop
and
mov
mov
pop
stos
adcl
push
out
not
scas
divl
sub
mov
ja
cmp
sahf
test
cli
test
and
sbb
adc
ss
mov
mov
enter
test
div
shl
jae
iret
into
mov
stc
movsl
out
xchg
jle
fnstenv
call
cmp
faddl
jb
inc
mov
lods
ror
push
sub
and
push
push
xchg
dec
ror
loop
sub
push
or
aad
mov
lds
imul
add
in
sarb
arpl
stos
lock
cmc
mov
jns
mov
loopne
lret
shrb
mov
lcall
or
inc
ljmp
dec
shlb
inc
ror
pop
repz
mov
inc
out
les
lret
data16
dec
and
hlt
jbe
adc
dec
sti
dec
ss
jmp
xor
loop
popf
lcall
cmpsl
or
into
ljmp
ret
mov
iret
pop
data16
test
jnp
pop
and
pusha
xchg
push
enter
xorl
movsl
mov
adc
dec
mov
xchg
aad
xchg
sbb
ret
repnz
mov
mov
mov
jmp
outsb
clc
jno
adc
cvtps2pd
negl
and
nop
das
or
or
stos
and
xor
dec
sub
push
ret
scas
mov
mov
repz
pop
push
lcall
and
std
das
into
loopne
pop
nop
mov
pop
das
popa
int
or
cmp
dec
pop
cmp
push
rorl
dec
decl
pop
imul
push
packuswb
dec
stos
mov
push
cmpsb
xchg
test
sbb
pop
dec
mov
imul
dec
pop
pop
movsl
nop
add
into
test
jge
sub
in
fstl
iret
mov
mov
adc
mov
lret
int
fiaddl
dec
mov
aam
xchg
repz
mov
nop
leave
mov
pop
dec
sub
insb
mov
cmp
popf
loopne
ljmp
adc
mov
mov
negb
test
or
pop
push
shrl
in
sti
pushf
sbb
ret
dec
outsl
je
lods
and
hlt
jg
jmp
xchg
add
mov
dec
neg
fwait
mov
pop
rcll
jbe
sbb
out
scas
xchg
xor
in
rcrb
out
imul
sub
je
dec
jp
in
xchg
or
xor
and
cmpsb
mov
ds
or
es
fidivrl
xor
fldcw
inc
in
or
xchg
out
xchg
loop
shlb
or
repz
aad
pop
and
or
imul
jg
scas
rcll
cmpl
enter
das
lea
sarb
sbb
out
cld
test
flds
sub
rcl
das
and
cld
xchg
jmp
cmp
arpl
jnp
jp
cmpsb
loopne
dec
ret
fildl
mov
or
xchg
add
pop
cmp
imul
call
sbb
mov
repnz
in
clc
ljmp
sarb
in
sub
adc
test
mov
adc
roll
stc
fistpl
shll
xor
push
pop
mov
sbb
jno
outsb
mov
loop
push
pop
lcall
stos
push
sbb
sub
cmp
lret
enter
cmc
push
push
or
out
jmp
pop
lahf
addr16
icebp
push
test
repnz
add
and
data16
add
mov
sub
in
or
cmc
cmp
mov
jg
lds
cs
cmp
pop
jmp
lock
or
cmpsb
push
cmp
jge
int
jns
inc
cld
in
ret
enter
mov
pop
test
jb
sahf
and
inc
test
xlat
or
push
push
ljmp
lcall
sahf
rcr
test
add
out
pop
xlat
jns
mov
das
imul
jmp
mov
cmpsl
inc
add
sbb
push
mov
inc
push
adc
pop
ret
ret
popa
jmp
int3
in
ja
in
pop
dec
and
mov
lret
push
cmp
sti
pop
inc
sbb
jno
fdivs
lret
enter
punpckhdq
cmpsl
cmpsl
mov
add
and
pop
or
mov
dec
cmp
cmp
pop
stos
nop
pop
mov
lods
iret
and
sbb
xchg
jae,pn
cmp
sub
fistl
dec
lcall
pop
jno
sub
or
leave
xor
cwtl
sub
pop
pop
inc
mov
aas
lock
inc
and
pop
dec
rcrl
add
std
sbb
aaa
jno
jl
mov
repz
mov
mov
dec
xor
xchg
pop
pop
mov
cmp
mov
mov
inc
in
mov
jmp
add
dec
push
xchg
enter
mov
xor
out
or
pushf
mov
xlat
adc
inc
jo
and
dec
mov
imul
setnp
outsl
mov
shll
xchg
in
scas
add
jbe
sbb
aas
stos
push
sahf
lods
add
mov
push
jecxz
sbb
ljmp
mov
test
lret
add
xor
gs
jno
jecxz
cmp
fcmovu
xchg
lret
xor
sub
dec
int
cmp
stc
and
les
or
jnp
data16
push
imul
std
mov
ret
mov
cmp
cld
fstl
lahf
jns
push
mov
aad
sub
bnd
fwait
call
push
inc
jecxz
imul
fsubrp
cmp
cmpsb
mov
je
jp
jns
pop
lea
aam
push
push
pop
sub
mov
add
and
comiss
or
movsl
mov
dec
jbe
push
bound
xchg
cli
xchg
mov
in
repnz
into
fs
data16
push
fimuls
sub
push
push
clc
int3
pop
int
jnp
push
loope
mov
cmp
mov
and
adc
test
pop
or
rcrb
xchg
imul
dec
cs
and
push
popa
dec
lcall
mov
adc
mov
inc
gs
bound
leave
lahf
dec
ss
outsl
inc
xor
adc
dec
sub
mov
or
data16
scas
sbb
xchg
jmp
es
sbb
loop
call
add
adc
mov
fsubs
cmp
or
jecxz
das
xchg
sub
and
das
mov
sub
fnsave
or
rcl
sub
add
sarb
cmpsl
lock
or
test
repz
dec
sub
xor
lret
mov
dec
adc
setle
jns
arpl
cmp
xchg
push
sahf
shl
xor
fwait
shll
out
shrl
and
add
cli
xchg
adc
aaa
mov
fsubrl
inc
inc
pop
inc
ljmp
push
pop
in
lret
aam
push
or
push
mov
inc
cmp
mov
lcall
test
stc
mov
shlb
bound
nop
outsb
out
shlb
aas
fsubs
fxam
mov
adc
das
cld
lock
sub
pushf
mov
mov
call
mov
sbb
roll
adc
das
mov
shl
in
add
cli
minps
sbb
mov
cmp
lods
xor
inc
pushf
mov
stos
loopne
les
gs
or
dec
sub
int3
xor
inc
push
mov
ret
add
lcall
sbb
pop
xor
cmp
insb
sbb
xchg
int3
mov
test
scas
stos
xorb
test
movsb
adc
cli
cmp
mov
dec
push
mov
cli
pop
popf
fwait
jp
xchg
jno
xchg
sti
cmp
popa
cmc
mov
xlat
into
cmc
insb
cmp
jo
push
pop
lahf
pushf
into
ficompl
pusha
or
xor
rcll
ret
cld
inc
std
stos
data16
adc
cmpsb
ljmp
inc
aas
or
sbb
aad
dec
outsl
push
in
jecxz
pop
aad
lods
sbb
push
cld
add
mov
mov
cmc
inc
inc
or
outsl
adcl
inc
repz
aad
adc
pop
push
lds
push
movsl
mov
iret
and
push
jle
jae
jl
or
nop
pop
jecxz
stos
mov
cmp
or
pop
in
nop
aas
leave
outsl
popa
mov
les
stos
jg
leave
daa
mov
sub
cmp
sub
int3
sbb
das
sahf
xchg
out
out
movsl
jns
jbe
or
pop
sbb
mov
inc
adc
xlat
and
add
and
sbb
jle
lahf
fmuls
movsb
add
dec
sub
push
movsb
pushf
jecxz
mov
fld
mov
and
lods
ss
adc
dec
mov
in
mov
and
sbb
jnp
add
mov
lock
cmpsb
mov
pop
or
fwait
pushl
mov
or
jne
lret
stos
scas
ds
mov
in
xchg
pop
enter
lock
je
add
push
pop
rep
adc
pop
fbld
ret
ja
mov
push
stc
js
jp
sub
mov
mov
sahf
clc
cvtps2pi
pushf
add
mov
add
fistpll
dec
cld
xchg
pop
stos
fists
stos
or
jg
xchg
arpl
lods
add
aad
sub
jmp
sbb
dec
js
mov
fnstenv
push
sub
cmpsb
iret
mov
adc
les
pop
les
ss
in
cmp
popa
out
aaa
out
cmpsl
ds
cltd
fisubrl
mov
movsl
decb
and
cmc
or
push
pop
mov
xor
pusha
mov
xor
xor
in
pop
pop
sub
xor
pop
jp
imul
daa
imul
pusha
jmp
test
sub
shll
js
scas
lock
push
movb
insl
xor
xchg
shrb
push
push
mov
idiv
iret
insl
pop
scas
dec
cmc
ret
dec
mov
popa
jecxz
mov
outsl
lock
stos
lret
nop
ss
fstpl
and
jae
popa
lods
jmp
std
scas
pop
repnz
sti
pop
jae
sbb
mov
lods
jg
adc
xor
jg
mov
inc
xor
sbb
push
cmp
rclb
cmp
add
rcll
les
arpl
adc
adcl
hlt
stos
or
adcl
pop
pushf
jp
jbe
pop
dec
ret
jle
fnstenv
lret
adc
daa
sub
mov
mov
cmp
push
or
aam
rorl
imulb
pop
mov
aad
adc
xor
cmpsl
leave
lock
mov
subl
es
pop
jno
pop
icebp
cltd
popa
pop
or
lea
and
add
cmp
or
mov
xchg
dec
ljmp
in
pop
mov
loop
daa
pushf
dec
je
ror
add
push
hlt
cmp
mov
mov
test
cli
std
pop
sub
imulb
pushf
and
xchg
pop
daa
sbb
aaa
std
sub
jecxz
test
push
xor
push
ret
inc
fimull
and
and
shrb
mov
xor
out
pop
dec
sahf
ss
or
repnz
push
cmp
aas
lock
jle,pt
ds
stc
daa
loopne
inc
ret
pushf
sbb
aad
test
xlat
fidivrs
xlat
or
jl
pop
sldt
or
push
jno
adc
mov
dec
mov
xchg
clc
jo
push
sahf
outsb
push
clc
je
js
imul
xchg
and
dec
sbbl
jo
jge
sti
insb
mulb
jnp
std
loop
sub
cwtl
popf
xor
rcr
stc
test
ret
and
xchg
fsubr
or
loope
xor
push
mov
sub
mov
adc
or
xchg
dec
inc
jo
or
and
cmp
inc
test
xchg
outsb
pop
fstpl
dec
or
sbb
shll
test
sbb
xchg
fstps
jmp
js
cltd
in
ret
lods
fcomp
mov
mov
arpl
rcll
mov
scas
addr16
sub
sub
add
lods
mov
aaa
mov
adc
mov
ds
lods
or
xchg
insb
mov
and
sub
mov
mov
push
test
add
and
aam
adc
xchg
jge
ds
call
sub
dec
scas
pop
lods
xor
xchg
movsl
lock
imul
cmpsl
jge
fidivs
add
cmp
xchg
scas
and
nop
push
jl
cmp
ja
iret
int
test
arpl
loope
imul
aam
and
mov
loop
dec
loope
addr16
faddp
arpl
dec
mov
inc
mov
or
push
repnz
imul
sub
pusha
stc
or
push
mov
mov
leave
dec
push
aam
hlt
and
mov
and
or
sub
popa
lahf
fstps
xor
aam
aaa
fstpl
mov
shrb
rclb
sti
loop
sub
sti
lock
mov
sub
aaa
xchg
rorb
lret
or
dec
pop
sbb
sub
push
mov
mov
lea
out
push
or
dec
fistps
mov
mov
mov
rorb
inc
or
dec
mov
addr16
pusha
jns
in
sub
loop
pop
or
aaa
popa
jl
inc
sub
and
push
xor
adc
pusha
xor
inc
or
rcrb
fwait
mov
test
lcall
push
das
shll
and
inc
insl
push
mov
hlt
jns,pt
movsb
int3
fisttpll
iret
mov
mov
adcb
ret
fxam
pop
push
sbb
sbb
outsl
mov
xor
adcl
push
fsubrs
popf
xchg
xlat
pushw
and
stc
lds
rclb
clc
je
fistps
enter
jbe
outsb
inc
sahf
sub
andl
stos
outsb
sub
idivb
push
loope
nop
fwait
sub
cmp
inc
add
dec
pop
je
mov
shr
mov
adc
push
ret
sub
lds
lds
outsl
loope
sub
mov
out
sub
shlb
xor
inc
dec
imul
imul
pushf
enter
jecxz
sbb
jbe
fwait
arpl
sub
mov
jecxz
call
popf
xchg
rcrl
fsubr
cld
jmp
jbe
cld
sahf
jl
icebp
not
cmp
sbb
fadds
jb
fsubr
xchg
mov
mov
in
sbb
out
pop
jl
out
cmp
jnp
xchg
mov
dec
mov
sub
add
dec
xor
call
lret
test
cli
push
jle
jo
shr
jne
push
jno
loope
cld
cs
out
push
jnp
pop
inc
push
lret
push
addr16
sarl
mov
ljmp
repz
fcmove
lds
rol
mov
fistl
mov
mov
dec
es
mov
xchg
addr16
notl
mov
lcall
cmc
push
xlat
movsl
cld
sbb
je
sbb
jmp
ret
movsl
lcall
jno
mov
pop
int3
cmc
sahf
lret
cmp
fsub
inc
mov
pop
sub
lock
and
adc
jmp
es
mov
adc
xchg
testb
call
jo
in
je
movsl
test
dec
cmpl
lret
stos
and
shrb
lcall
popf
out
push
xor
rcr
sbb
or
je
les
out
movsl
xchg
cmp
fwait
dec
insb
out
data16
lock
xlat
sbb
xorl
mov
pop
outsl
into
and
and
jo
jo
jmp
jno
push
pavgw
rcrl
mov
jmp
imul
xchg
add
adc
fdivp
dec
mov
sahf
adc
mov
bound
xchg
mov
pushf
mov
sbb
sbb
outsl
dec
jg
push
imul
iret
jns
adc
xor
inc
pop
mov
jns
sar
add
enter
push
pop
mov
pop
mov
push
sbb
daa
lods
xor
int3
outsl
popa
ss
dec
sub
jle
notrack
pop
add
mov
addr16
das
repnz
add
popf
xchg
aam
jne
cmp
or
in
stos
les
inc
mov
ja
push
inc
je
inc
sub
adc
pop
mov
scas
xor
aad
mov
mov
sbb
nop
jl
adc
rcl
ret
sbb
mov
lock
incb
rorb
xchg
leavew
adc
mov
aam
adc
push
mov
negl
pusha
dec
arpl
mov
ficomps
es
add
orl
and
pop
xchg
sbb
mov
sarb
fsts
add
das
mov
push
jne
add
jp
pop
inc
xor
and
mov
loopne
movsl
fstl
mov
dec
loop
iret
iret
inc
jl
sub
and
adc
jge
inc
out
orb
aad
mov
and
scas
sbbl
insb
call
test
xor
cli
pop
adcb
and
andl
fwait
scas
repz
or
loope
pusha
mov
into
js
push
sbb
data16
vpmacssdql
xchg
ret
sbb
dec
decb
lcall
push
aam
pop
inc
xor
jl
xor
in
repz
icebp
push
repz
xor
xchg
stos
push
gs
xchg
test
mov
push
cmp
sub
adc
imul
call
lea
add
mov
add
jp
sub
out
movsb
int3
inc
xchg
not
imul
jno
ss
push
pop
shll
mov
mov
push
jb
and
xchg
shrb
int3
lcall
ja
sbb
pop
xor
clc
fnstenv
enter
mov
ficomps
cwtl
push
adc
out
xchg
mov
ret
sub
dec
jnp
movsl
cmp
xchg
xchg
gs
fisttpll
in
call
add
pop
or
mov
sbb
sbb
jns
mov
mov
pop
decb
push
sahf
inc
push
in
stc
or
aaa
add
daa
stos
jp
sub
mov
imul
lret
jl
mov
dec
rorb
stos
loope
mov
int
into
jo
dec
testb
sub
stos
les
das
xor
mov
dec
xor
cmp
adc
movsl
push
push
cmp
es
cli
pop
sbb
imul
mov
sbb
clc
stos
add
outsl
addr16
push
mov
popf
loop
xchg
pop
insl
sub
xchg
aaa
mov
adc
push
pop
lock
dec
addr16
jle,pn
stos
pushf
xorb
les
sub
rclb
jne
mov
inc
sub
add
mov
cmp
mov
push
add
lret
mov
mov
outsl
int3
adc
xorb
push
mov
iret
cmpsb
adc
jnp
dec
and
cmpsl
mov
jb
and
jae
dec
mov
popf
enter
mov
mov
into
or
inc
and
leave
dec
shll
popf
clc
les
xlat
lret
sti
sti
xchg
lahf
fiadds
and
xchg
xor
cmpsb
push
addl
xchg
mov
cwtl
mov
mov
jbe
or
inc
add
jp
dec
das
andl
mov
dec
inc
cmpsl
jmp
xchg
lret
jns
mov
or
jl
inc
xor
in
rorb
imul
jl
push
mov
mov
pop
dec
and
loope
scas
andb
xor
add
negb
mov
xor
cmp
mov
fbld
loope
add
fsubrs
sbb
jecxz
xchg
adc
lret
pop
jp
notb
in
adc
rcll
mov
addr16
leave
jns
lcall
add
push
push
ja
mov
lahf
inc
xchg
mov
mov
push
add
test
mov
mov
xchg
pusha
mov
inc
div
or
xchg
dec
scas
popa
jbe
pop
push
scas
and
lds
push
mov
pop
idivl
push
jle
movsl
and
jae
push
call
xchg
adc
daa
or
dec
add
movsl
mov
push
jmp
pushf
int3
call
and
fstl
xor
push
dec
orb
cmp
xchg
cmp
mov
mov
dec
sbb
cmp
sahf
pop
dec
pop
pop
xchg
bound
push
adc
dec
inc
pushf
mov
sbb
ret
bound
mov
sbb
xor
out
and
xor
xchg
xcrypt-cfb
cmpsl
jecxz
call
pusha
in
icebp
shl
sub
les
sub
data16
faddl
lods
stos
jl
xchg
fistl
testb
fldenv
sbb
mov
loope
stos
std
xchg
in
fstpt
jo
pop
icebp
or
cmp
cld
jg
pop
arpl
xchg
push
sub
loopne
mov
push
mov
mov
insb
pop
jnp
js
out
sub
jno
aas
aas
or
xor
fbld
pop
loop
dec
inc
mov
inc
daa
test
xchg
lock
mov
frstor
cmpsb
stc
cs
int3
pop
shr
jbe
sahf
inc
and
mov
pop
dec
test
adc
mov
mov
loope
aaa
shlb
xor
imul
sub
mov
int3
push
adc
sub
les
adc
add
xor
mov
mov
jns
movb
rorb
fwait
lahf
mov
and
fcompl
out
das
cmp
push
stc
lahf
push
out
mov
mov
xchg
mov
mov
and
lret
notb
aad
cmp
mov
sbb
lea
jl
sub
into
or
jp
in
fsubrl
imul
jb
pushf
sbb
ret
or
mov
js
out
jle
inc
stc
fwait
lcall
mov
jge
ficompl
jns
daa
ret
xchg
mov
jl
sbb
pop
push
push
inc
cmc
das
jge
out
add
mov
loopne
adc
js
cmp
xor
add
fnstenv
and
dec
mov
adc
popf
lahf
jle
xchg
shl
cmp
dec
cmpsb
xchg
fsubr
and
inc
pop
out
bound
rcll
lea
enter
xor
or
ret
fs
out
loop
lea
and
inc
or
subb
xchg
aam
and
lahf
xchg
push
add
jp
fstpl
and
mov
scas
mov
sbb
lret
mov
cmpsb
mov
nop
lahf
aam
dec
scas
popf
xor
cmp
jns
sbb
mov
ret
xchg
mov
insl
push
cmpl
push
push
out
mov
push
adc
pop
xchg
dec
push
add
cmp
int3
push
jg
mov
mov
inc
dec
cmpsb
in
xor
popa
xlat
adc
shl
dec
ffreep
adc
pop
mov
add
arpl
jae
sub
pop
sub
repz
test
sar
jg
lock
mov
es
stos
cmp
mov
push
mov
sbb
stos
jle
imul
sbb
lds
or
adc
mov
jecxz
arpl
ss
and
sarb
imul
xor
mov
sbb
xchg
ds
loop
rcrl
mov
push
loopne
push
loop
fisttpll
add
adc
jg
mov
divl
pop
fwait
out
mov
jge
cmp
xor
pop
out
mov
cmpsl
xlat
imul
adc
js
divl
inc
stc
mov
pop
dec
loope
loop
addb
ss
push
and
dec
mov
mov
inc
sbb
mov
jmp
frstor
mov
sbb
daa
fcoml
das
jne
jl
and
loope
push
push
lds
push
sbb
stos
out
xchg
outsl
jg
jge
adc
in
mov
xchg
aam
test
add
data16
lret
fs
sahf
jle
cmpsb
mov
or
push
fisubl
xor
std
cmp
sarl
loopew
xchg
sahf
insl
insb
lret
jns
cmp
icebp
mov
inc
sbb
popf
aad
mov
fs
sbb
add
mov
pop
pusha
push
xor
add
dec
mov
fstl
lcall
out
in
add
pushf
outsb
sub
subb
fldt
push
sub
sub
mov
andl
xor
push
xlat
sub
xchg
imul
pop
mov
ret
in
jae
mov
movsl
in
jae
mov
add
flds
pushf
sub
and
mov
push
or
cltd
andl
fcompl
adc
stos
xor
mov
lcall
and
adc
rcr
pop
cld
mov
xor
mov
cmp
hlt
pop
sbb
nop
adc
packssdw
cltd
adc
jp
sbb
lahf
add
lea
push
inc
movsl
ret
je
mov
insb
cmp
out
jne
nop
mov
and
pusha
add
push
ja
lret
fistpl
and
cwtl
mov
jae
push
xor
in
out
adc
test
test
inc
add
mov
push
dec
dec
sti
dec
push
lock
cmpsb
cmpsl
jecxz
push
aam
sar
rorb
fldt
pusha
add
mov
push
bound
pop
enter
jl
notl
in
sbb
aad
dec
mov
and
bound
mov
int3
pop
ja
sbbb
push
mov
dec
or
mov
push
jge
mov
jg
addr16
es
push
dec
and
mov
inc
das
loope
jecxz
cwtl
pop
lahf
jl
xchg
dec
mov
inc
in
pop
pop
addr16
jle
insb
lahf
xchg
inc
rcr
je
xchg
sub
and
inc
mov
jecxz
dec
cs
jns
mov
sub
in
dec
jecxz
fs
jb
mov
cmp
dec
jmp
mov
mov
or
in
add
lcall
dec
and
mov
pop
repz
xor
mov
insl
or
ja
pop
pop
out
jae
in
clc
mov
fs
ret
pop
and
push
test
stc
rcrl
cmp
sub
mov
shlb
cmpsb
cwtl
imul
subl
movsl
lret
or
push
mov
jle
lahf
xor
sbb
mov
stos
pop
or
or
or
loope
incb
inc
cmp
mov
stos
in
je
in
cmp
fs
add
dec
add
xchg
repnz
sub
sahf
fcomip
push
ja
imul
mov
mov
mov
mov
xor
mov
xchg
mov
pop
pop
stos
bound
jbe
mov
cmpsb
adc
or
ret
cmp
add
and
cmp
adc
jns
mov
daa
sbb
mov
jmp
sub
pop
or
scas
das
inc
mov
insl
fs
aas
sub
push
xor
mov
sub
mov
jae
gs
sahf
loopne
pop
cmp
stc
pop
jo
stos
xchg
adc
in
pusha
adc
pop
sub
xchg
idivb
push
ret
pop
stc
test
xor
int
dec
cmp
bound
loope
iret
test
test
sbb
les
hlt
and
lods
lock
pmuludq
adc
jno
xor
lds
movsb
inc
inc
pop
js
test
pop
inc
dec
movsl
rol
dec
fstpt
xchg
jne
or
cmp
andb
outsb
in
pop
mov
pop
sub
push
ret
movsl
cmp
outsl
xchg
sahf
pushf
push
inc
subl
clc
mov
int3
insb
inc
scas
pop
fwait
loope
cld
pop
push
sahf
sbb
xor
add
inc
pop
aad
aas
jns
test
jg
pop
push
aam
pop
mov
pop
and
cwtl
pop
adc
shrb
add
push
cmpb
mul
xlat
mov
test
xchg
inc
dec
scas
mov
cltd
stos
movsb
sub
mov
cld
and
fdivrs
mov
icebp
jle
aas
mov
add
mov
sbb
filds
loope
fiadds
arpl
test
or
ret
pop
jp
es
shr
aam
fisttps
lock
imul
mov
fidivs
pop
pop
cwtl
mov
les
loope
xor
daa
jmp
arpl
xchg
adc
dec
cmpsb
mov
pop
push
push
rcl
imul
mov
ja
adc
les
int
sbb
stos
mov
mov
push
data16
and
outsl
imul
popa
cmpl
in
adc
or
cmpsb
enter
ljmp
adcl
ret
aaa
sbb
in
add
scas
sub
cmpsb
loop
sub
add
enter
cld
lret
pop
ljmp
inc
fwait
pop
movsl
cltd
fdivs
aad
int
ret
and
sub
leave
loopne
mov
pop
jo
jb
out
fiadds
rol
xchg
cmc
jae
sbb
mov
mov
jle
jbe
mov
cmp
jae
jecxz
std
or
scas
out
imul
out
sbb
add
and
sarl
loopne
lret
rcll
add
inc
sbb
adc
loop
fbstp
les
fwait
lods
jbe
out
inc
loope
ficomps
cs
aam
into
repz
xchg
xor
mov
std
daa
ret
adc
adc
loopne
test
shl
add
das
sbb
add
cli
mov
mov
inc
sub
fistl
rclb
mov
pop
mov
dec
insl
fsubr
xor
xchg
insl
and
xchg
mov
in
xchg
mov
sub
clc
pop
cmpsb
push
xchg
mov
pop
sar
lcall
add
arpl
push
jbe
shl
sbb
push
inc
in
pop
pop
jg
xchg
stos
jmp
bound
xlat
jbe
inc
loop
inc
cmp
pop
les
adc
cmp
scas
jns
popf
add
push
jmp
pop
push
mov
loop
scas
push
bound
int3
ss
mov
faddl
add
insb
xor
xor
adc
fwait
push
jg
mov
mov
push
and
adc
gs
shlb
enter
out
and
cmc
fstp
pop
pop
jle
cld
jae
push
add
or
xchg
add
add
stos
pop
ja
popf
jo
cmpsl
scas
jp
fistps
fwait
aam
test
ret
xchg
test
mov
adc
mov
in
mov
jl
insl
pop
scas
js
push
pop
inc
pop
fstl
mov
dec
stos
cld
mov
shll
adc
and
xchg
int3
fisttpll
jne
pop
jb
ffreep
xchg
mov
sbbb
repz
xor
lock
cltd
mov
out
fidivs
jp
inc
jae
mov
xchg
dec
inc
dec
inc
jno
pop
adc
cmp
into
cmp
iret
xor
sbb
aam
mov
xor
fisttpl
mov
leave
out
pop
into
cmp
xchg
cmpsl
adc
es
fidivl
or
xchg
icebp
ret
test
lds
pop
jecxz
sti
js
rcrb
outsb
sahf
ljmp
test
mov
sub
and
daa
pop
jecxz
mov
sub
jle
pusha
shr
cmp
iret
pop
stc
nop
jg
test
lret
or
scas
gs
sub
les
push
adc
jbe
cli
mov
movsb
lock
decl
fisubrl
push
push
loop
cmpb
sbb
push
xchg
inc
ret
in
dec
std
roll
jp
ds
cmpsl
mov
std
pushf
outsl
fs
pop
mov
push
add
mov
sub
xor
movb
lods
into
insb
ret
cmpsl
sahf
mov
ret
xchg
outsb
cs
jg
aas
dec
rcrl
xchg
ret
jne
shl
push
pop
sub
jp
xchg
cmp
xor
inc
in
icebp
dec
mov
test
jno
iret
pusha
push
sbb
mov
or
and
jnp
push
cmp
icebp
adc
ret
push
int
sub
fdivl
mov
popf
pop
cmpsb
pop
push
pop
mov
ret
push
lcall
cmpsb
sbb
into
or
dec
jb
ret
sbb
adc
push
clc
sbb
cwtl
push
push
cld
inc
mov
addl
xor
imull
aad
mov
pop
in
adc
or
cmpsb
sbb
je
jns
imul
sbb
pop
pop
xor
pop
scas
loope
mov
cmp
xlat
pop
jbe
dec
cld
cmpsl
jnp
sbb
xchg
jmp
and
and
dec
jnp
icebp
sub
test
pop
add
popa
cmp
push
popf
out
lahf
xor
xor
xchg
test
outsb
adc
mov
lock
cltd
pop
sbb
cmpl
lock
shrl
jg
push
orb
dec
and
push
fdivs
sub
out
loopne
test
sbb
insb
mov
mov
lds
sbb
adc
and
enter
and
sahf
clc
jne
jp
pop
in
add
push
sti
or
arpl
or
fcomps
pushf
out
adc
faddl
pop
pop
mov
jmp
fldcw
lock
jne
pop
stos
jns
xlat
push
xchg
or
dec
clc
mov
mov
test
dec
in
cmp
push
and
adc
notl
ja
xor
shrl
jno
pop
push
hlt
sbb
cltd
int
add
movsb
out
push
add
jb
fwait
out
push
fs
pop
mov
js
divb
std
cmpsl
mov
and
callw
mov
adc
adc
pushf
jbe
xchg
sub
ficoml
cltd
std
jne
pop
cmp
xor
fimuls
xchg
or
jp
fadds
divl
shrl
movl
cmp
js
or
ror
repz
outsl
xor
clc
mov
cmp
jp
lds
or
mov
sahf
mov
lods
daa
jp
adc
popa
test
sbb
add
popa
test
or
pop
pushf
aas
xchg
ljmp
ss
and
data16
sub
jbe
ror
test
inc
pop
jp
popa
mov
push
test
sub
cmp
push
sbb
scas
cmp
pop
outsb
or
daa
test
cltd
fmuls
inc
sub
adc
sar
xor
mov
push
notb
and
sbb
mov
pushf
repz
pusha
or
hlt
or
in
scas
inc
sub
subl
adc
add
sbb
dec
xchg
cli
icebp
ficoml
sbb
imul
sbb
call
sub
addl
ljmp
jbe
rorb
jns
fcmove
clc
mov
add
nop
or
jge
rorb
cwtl
stc
iret
pop
jmp
into
add
cmpsl
dec
bound
popa
add
lea
out
loopne
lock
hlt
push
mov
test
fwait
test
and
jle
pop
in
xor
fdivrs
xchg
aas
push
test
sbb
xchg
mov
jb
push
push
push
and
outsb
popa
je
mov
mov
fsts
hlt
cs
add
cmp
pop
pushf
fcomi
mov
or
push
xchg
sub
in
adc
or
hlt
mov
dec
out
dec
mov
cmp
pop
or
sub
shrl
xchg
dec
push
adc
mov
sbb
ljmp
rolb
xor
or
enter
test
and
mov
imul
push
mov
add
mov
mov
jl
xlat
add
xchg
mov
xor
fldl
push
inc
popf
sbb
popa
pusha
cwtl
or
cmp
idivl
dec
js
sub
jp
xor
mov
adc
push
ljmp
jecxz
pop
iret
mov
dec
xor
sti
test
cmp
lock
mov
out
loope
aas
pop
in
push
jne
ja
xchg
aaa
xchg
add
ljmp
sbb
mov
jl
pop
or
adc
movsb
jl
push
sbb
pop
lret
mov
cmp
sbb
sub
movsl
aaa
mov
and
or
inc
adc
addr16
mov
lcall
fstpt
outsb
mov
add
lock
inc
cmp
mov
push
mov
or
mov
xor
ss
sti
or
add
xlat
adc
sub
xchg
adc
mov
pusha
pop
xchg
ret
dec
ret
jmp
dec
lcall
and
daa
cmp
fiadds
lea
or
mov
imul
push
ljmp
orb
stos
add
aaa
fistpll
and
js
or
fcom
jns
xor
repz
aam
and
push
ret
inc
test
cmp
ss
and
sbb
inc
inc
or
inc
pop
mov
mov
xchg
imul
cmpsl
sti
cmpsl
roll
sbb
jl
test
outsb
mov
ljmp
rolb
in
cmpsl
cmpsl
outsb
test
dec
mov
xchg
inc
outsl
imul
dec
hlt
inc
push
sbb
xor
dec
jne
test
mov
xchg
push
lods
nop
push
push
sbb
aam
push
mov
xor
arpl
ljmp
out
jb
xor
repz
insb
shrb
cmp
push
adc
push
int
lds
and
out
sbb
dec
push
add
arpl
dec
leave
imul
sbb
lds
fisttpll
jecxz
push
or
mov
dec
ret
add
push
mov
and
jno
sbb
sub
and
and
add
loopne
lock
scas
add
fiaddl
jp
call
mov
das
add
faddp
fldenv
mov
imul
iret
cmp
xchg
subl
scas
mov
mov
add
xor
and
sarl
imul
inc
pushf
in
push
dec
push
fidivl
outsb
pop
sbb
bnd
sahf
adc
into
sbb
int3
pop
adc
popa
inc
dec
mov
pop
mov
or
dec
push
loop
jecxz
test
adc
les
jecxz
mov
xchg
iret
lcall
js
inc
sub
int
xor
cmp
outsb
roll
mov
pop
in
xchg
popf
pusha
pop
leave
jns
jo
repnz
jmp
mov
cmpsl
cmpsb
repnz
jmp
fidivrs
cltd
popf
push
dec
xchg
imul
adc
lret
shlb
popf
pop
cld
xchg
iret
repnz
dec
jmp
dec
pushf
cmp
test
out
out
xlat
mov
out
mov
jb
sbb
sbb
mov
insl
lea
adc
cltd
pusha
or
inc
xor
push
xchg
jle
jb
add
xorb
aaa
xor
fnsave
inc
adc
pop
push
cmpsl
aam
or
rcrl
add
sahf
pop
mov
and
stos
jno
fldcw
push
leave
dec
jg
sarb
pop
pop
je
mov
cmp
popf
test
cmp
in
adc
lea
push
int
xchg
xor
lods
inc
cltd
sbb
sbb
sbb
das
push
imul
xchg
lcall
cmp
ja
movsb
mov
jle
inc
subb
cli
pop
push
bound
repz
in
ljmp
fidivrs
sub
pop
aas
sbb
mov
jo
xchg
lds
movsl
ret
mov
imul
jae
repnz
xorl
lcall
enter
es
dec
jns
lahf
push
lods
insb
js
push
adc
push
rcll
dec
sahf
inc
dec
lret
fsts
sbb
inc
das
mov
cltd
or
jecxz
repnz
push
movsl
test
xchg
mov
ja
jp
lods
pop
mov
mov
fbstp
push
xchg
mov
movsl
and
int3
dec
inc
cmpsl
or
lods
push
iret
dec
push
stc
jecxz
cmpl
sub
in
cltd
push
pop
loope
gs
hlt
hlt
add
lcall
and
lods
fdivl
jae
pop
xchg
ret
les
dec
jmp
bound
sarb
sbbb
pop
addr16
jecxz
and
outsb
mov
jnp
jg
subps
ja
push
lods
inc
inc
jge
movsl
mov
mov
cmpsb
rcr
mov
sub
push
pop
and
jecxz
push
icebp
scas
push
scas
mov
mov
lahf
push
mov
int3
jbe
andl
dec
lahf
mov
fistps
xchg
inc
pop
ret
and
dec
dec
fisubl
in
in
clc
xchg
mov
push
std
lcall
fimull
sub
jnp
in
or
xor
dec
stos
fstps
mov
lods
imul
sbb
adc
cld
aam
dec
sbb
test
mov
push
adcl
pop
es
inc
add
std
jb
push
mov
stos
mov
das
out
adc
out
xchg
push
in
mull
jne
xchg
add
lods
inc
xchg
mov
xor
lods
les
fidivl
fwait
mov
mov
pop
notl
ret
inc
adc
sub
sbb
mov
sbb
fcoml
and
or
push
scas
and
repnz
mov
cmp
insl
mov
or
fwait
pop
mov
inc
in
mov
mov
inc
push
mov
xchg
jmp
lods
dec
aaa
loopne
pop
int3
adc
cmc
mov
cmp
xor
lea
clc
repz
pop
sub
mov
xchg
lea
or
dec
adc
out
in
sahf
inc
xchg
hlt
dec
sbb
mov
jge
aad
mov
into
sbb
adcb
sub
scas
divl
and
dec
xor
sbb
xor
jmp
stc
imull
xor
lds
push
stos
jns
fldt
cmp
addr16
out
movl
jecxz
or
push
xchg
jge,pt
pop
lea
sub
add
jb
adc
imul
in
cwtl
aam
es
sub
mov
js
scas
mov
adc
test
push
inc
shlb
mov
pop
lea
xchg
mov
mov
jp
pop
mov
imul
lret
and
pop
icebp
jae
xor
xchg
sar
mov
push
scas
xor
test
inc
pop
dec
push
lds
data16
sub
jl
jnp
sbb
int
mov
add
push
cmp
testl
jne
lret
adc
inc
loopne
inc
dec
sbb
inc
inc
mov
pop
push
or
mov
sahf
cmpsb
cmpb
or
pop
adc
ds
insl
je
mov
mov
imul
fnsave
dec
mov
push
loopne
lods
negl
mov
jmp
in
sbbl
cmp
mov
imul
jecxz
xor
xor
lds
loopne
sub
add
push
in
xchg
in
xchg
pushl
lcall
gs
fistpl
sub
pushf
lcall
fisttps
push
pop
mov
fisubrs
out
es
or
mov
ss
xor
sbb
outsl
add
daa
mov
cmp
mov
test
push
jae
cmp
mov
mov
enter
vhaddps
mov
xor
scas
pop
cmp
push
cli
mov
aas
ret
dec
stos
lcall
fistl
sbb
test
mov
push
in
ja
xlat
mov
das
inc
sbb
sub
into
sbb
xchg
fidivrs
push
js
decb
dec
cmp
addb
jno
fdivrs
psubusw
dec
aaa
stc
inc
dec
pop
pop
dec
cld
push
popf
xchg
mov
adc
out
ja
setle
fs
push
push
mov
fucomi
dec
popf
pop
insb
push
test
ret
bound
push
mov
sub
pop
adc
lds
xchg
mov
sbb
aas
imul
stos
popf
mov
mov
idiv
aad
lock
dec
adc
ds
out
sbb
or
popf
scas
fdivs
sub
fidivrl
jbe
jo
push
std
adc
pop
out
inc
in
xor
push
mov
mov
cmpsb
xchg
les
jmp
cmpb
dec
mov
into
je
sub
hlt
bound
mov
mov
insl
inc
lods
push
xor
sub
push
sbb
adc
out
push
mov
dec
adc
loop
int
outsb
jle
and
inc
mov
pop
les
idivb
inc
lock
scas
pop
daa
or
jnp
lods
std
jp
jmp
xor
lret
mov
aas
str
es
mov
sarb
xlat
xlat
pop
fimuls
mov
sarb
pop
ret
cld
fadds
dec
fsubrs
xor
ljmp
imulb
xlat
xchg
cmp
mov
pop
lahf
loop
pop
sub
ds
lods
sub
dec
jl
push
in
dec
mov
stc
dec
call
enter
popf
movsl
sbb
repz
adc
adc
mov
pop
cmc
dec
adc
mov
dec
jne
movsb
jecxz
xor
mov
pop
test
repnz
xchg
ss
and
lods
sub
dec
idiv
pop
mov
aas
cmp
pop
into
dec
cmpsl
and
sbb
bound
sub
loopne
je
cmp
dec
negl
arpl
ds
stc
xchg
xor
mov
sub
mov
insl
popa
sar
mov
fistpl
xor
lret
clc
add
cltd
adc
aam
push
dec
sub
aaa
dec
mov
xor
test
jnp
inc
jne
in
pop
cli
jno
or
pop
push
add
insl
push
dec
jg
lods
and
ss
xchg
mov
aaa
or
push
movsb
addr16
fnstsw
andl
stos
imul
cmp
jb
sbb
mov
sbb
sub
cld
pop
mov
scas
int
ljmp
dec
add
ja
ret
in
mov
sbb
lds
and
hlt
or
push
fwait
dec
popa
shlb
loop
push
cmp
lea
ss
iret
ljmp
outsb
into
stc
insl
rcrl
jg
testb
call
jg
imul
idivb
mov
sub
lcall
js
push
mov
movsb
dec
repnz
rclb
mov
leave
mov
iret
push
and
inc
dec
fists
inc
pop
xchg
jg
stc
icebp
imul
jg
sahf
push
mov
lds
jo
cmp
push
repz
fcoml
pop
addr16
sbb
mov
call
adc
jmp
or
jo
dec
mov
out
test
xor
hlt
jbe
adc
sub
mov
xchg
cli
out
out
lods
xor
cld
repnz
or
jbe
sub
cmpsb
imul
fcoml
int
jg,pt
or
test
cmc
mov
js
adc
data16
aad
loopne
xchg
pop
mov
jmp
adc
xor
push
jmp
out
in
adc
gs
inc
cmp
mov
mov
fistl
testb
sbb
std
jg,pn
jecxz
loop
aas
shll
ljmp
xor
cmpl
dec
inc
cli
lahf
mov
sbb
push
pop
cmpsl
out
popf
dec
and
sbb
pusha
add
shrl
or
hlt
push
inc
jmp
call
mov
sub
movsl
push
int
or
inc
and
mov
push
rcll
cltd
outsb
loop
xor
mov
xchg
xor
jnp
and
mov
jle
jne
cmp
xor
mov
repz
lods
xchg
ffreep
in
mov
jg
popa
xchg
inc
xchg
mov
pusha
inc
hlt
xor
sub
sti
inc
ljmp
lret
loopne
sub
sbb
jne
loope
adc
ljmp
lods
mov
and
mov
daa
ss
adc
addr16
icebp
xchg
fistpll
mov
adc
jp
push
arpl
ficomps
scas
into
mov
adc
sbb
sub
arpl
jg
pushl
movsl
or
sub
inc
mov
dec
mov
popa
jnp
inc
dec
xor
mov
mov
in
cmp
xor
mov
hlt
xor
inc
int3
or
repnz
repnz
mov
lret
nopl
jnp
mov
pop
xor
lcall
cmc
dec
shl
push
das
dec
and
out
inc
repnz
cmp
cmp
add
pop
insb
fs
xchg
mov
and
out
movsb
pop
insb
imul
jmp
adc
sbb
ret
dec
aaa
stc
mov
mov
jne
gs
adc
xor
mov
sbb
adc
push
adc
pusha
xchg
imul
or
imul
mov
adcl
test
mov
cmp
push
movsl
std
mov
cmp
add
push
roll
popf
inc
add
and
int3
repnz
add
xchg
mov
repz
jno
sub
xorb
jge
pop
mov
stos
repnz
out
mov
pop
add
out
shrl
movsb
push
mov
popf
ret
rclb
push
add
mov
inc
sbb
xchg
loope
out
loop
je
push
add
mov
xor
ret
sub
scas
je
mov
loop
ffree
fdivl
mov
hlt
mov
jg
aaa
inc
gs
aas
adc
sub
mov
mov
insb
mov
repnz
adc
mov
andb
push
imul
roll
in
mov
fwait
pop
nop
mov
std
mov
xchg
and
shrb
mov
nop
adc
xor
push
lcall
out
mov
lds
add
mov
insl
adc
push
into
xchg
popa
and
xchg
ss
mov
and
add
adc
push
pop
inc
mov
sbbb
mov
mov
adc
fcmovnu
xchg
xor
xchg
dec
cmp
xchg
into
mov
sub
call
or
cld
movsb
inc
fcompl
cmp
popa
push
fwait
aam
pushf
and
shl
mov
or
dec
push
std
lds
cmp
popa
cmp
jg
xchg
add
mov
jae
dec
icebp
ja
inc
daa
test
cwtl
jle
leave
add
adc
lcall
push
add
icebp
outsb
das
xor
lcall
jno
sub
xor
insl
cltd
stos
dec
clc
lods
adc
gs
stos
out
inc
push
call
outsl
bound
mov
pop
xchg
ss
jmp
xor
lahf
inc
jbe
sub
inc
ret
inc
and
pop
shl
mov
jmp
movb
in
test
int
jno
dec
movsb
xor
or
push
insl
call
cmp
pop
xchg
and
mov
mov
lret
loope
xchg
or
imul
into
xor
mov
cli
jle
ret
cmpsb
and
cli
jne
pusha
test
pop
push
push
out
imul
lds
addb
repnz
dec
sbb
js
pop
mov
bound
aaa
mov
popa
add
insb
mov
cmp
inc
mov
insl
sub
stc
mov
mov
ficompl
mov
iret
xchg
popf
js
add
push
xchg
fcompl
xchg
xor
lret
sbb
cltd
sbb
daa
mov
int
add
clc
dec
call
jbe
jno
lods
cld
dec
call
pop
add
iret
jl
sub
mov
push
and
xchg
mov
mov
int
inc
jl
adc
mov
cmc
lods
icebp
test
mov
adc
leave
dec
pusha
scas
add
jp
cmpsl
cld
stos
or
hlt
lock
mov
and
mov
fs
cmp
rcl
sar
mov
cmp
andb
fwait
cmp
loopne
add
loop
mov
das
adc
imul
push
aad
or
sar
lret
push
inc
cld
sbb
cltd
lret
push
js
push
ja
or
jl
ds
test
dec
push
push
cmp
inc
add
repnz
and
cwtl
lret
mov
shll
cmc
xor
add
loope
pushw
jns
mov
sub
mov
push
mov
xor
repnz
mov
fabs
loopne
out
push
in
xchg
rclb
xchg
imul
xlat
xchg
mov
icebp
dec
repz
jb
rorl
mov
insl
hlt
xor
jb
call
test
fldt
jmp
cmpsl
dec
mov
and
mov
inc
sub
pxor
mov
in
inc
or
mov
or
ds
ljmp
and
js
dec
scas
jl
lret
ret
mov
movsl
xchg
or
adc
jns
enter
pop
shlb
stc
push
push
ljmp
rcrl
xor
jmp
mov
jl
cli
adc
mov
xor
int3
mov
inc
lock
inc
sbbl
scas
and
sbb
mov
sbb
test
aaa
sbb
dec
andb
out
mov
jle
push
stos
sbb
imul
push
cmp
mov
sbb
fsub
mul
pop
push
inc
cmp
inc
pop
xchg
mov
xchg
imull
mov
cltd
or
dec
or
push
mov
test
ljmp
ljmp
xchg
pmullw
divb
dec
dec
pushf
ffreep
mov
test
lahf
sbb
popf
and
dec
fcomps
in
push
lret
jp
stc
mov
movsb
outsl
jne
addr16
push
inc
in
addr16
pop
cmpsl
orl
cmp
ja
out
leave
iret
cmpsb
cmp
push
insl
sub
sub
add
test
jns
addl
loope
or
pop
test
nop
aad
or
fmull
insl
andb
nop
cmp
and
shl
divps
icebp
jecxz
xchg
sahf
cltd
lods
push
out
data16
insb
jae
js
cmpsb
dec
and
mov
mov
and
xor
mov
pop
cmp
sub
sbb
fs
xchg
jge
notl
jp
sbb
and
stos
and
jecxz
fwait
ret
jbe
mov
or
sarb
jle
adcl
xchg
dec
xor
jb
fsubrs
dec
cmpsb
aas
mov
jnp
xor
adc
jae
loopne
cmp
xor
pop
fstl
lret
sbb
sbb
inc
xchg
jmp
mov
push
nop
push
sbb
int3
mov
push
cmp
sub
mov
in
ret
add
roll
xchg
bound
movsb
mov
pop
push
push
outsl
test
jno
mov
sub
xchg
and
imul
jmp
inc
cmp
lods
popfw
fstl
mov
pop
into
adc
mov
adc
enter
xor
adc
add
xor
dec
imul
aas
stc
xchg
xor
pop
rcl
dec
jb
mov
ficoms
pop
dec
xor
das
aad
cmp
sahf
ss
cmpsl
stc
pop
and
fiadds
push
imul
mov
mov
xor
test
sub
and
jnp
mov
sub
adc
push
loop
pusha
jmp
stc
sbbl
cmp
nop
out
mov
mov
pop
in
jno
cmc
jne
push
int3
inc
mov
sub
das
jecxz
lcall
jae
mov
jg
pop
mov
lret
lea
cmp
sub
jl
scas
inc
jb
jge
push
xor
les
or
loope
gs
addr16
mov
inc
arpl
xchg
xchg
shll
sbb
mov
jp
ss
bound
lds
dec
dec
sbb
je
xor
push
shlb
add
das
mov
pushf
loopne
push
xchg
imul
inc
xorb
push
sub
adc
mov
mov
push
sub
sti
test
ret
pushf
pop
and
and
inc
psadbw
test
test
pop
lahf
lret
dec
adc
dec
repnz
push
ret
outsb
push
pushf
outsl
lret
mov
sbb
fmulp
into
cmp
out
rcrb
mov
daa
sub
insb
jp
fs
mov
adc
imul
xor
icebp
dec
ror
xchg
dec
inc
call
push
dec
out
and
adc
pop
loope
pop
insl
and
dec
mov
mov
lods
cmpsl
test
dec
mov
xchg
test
mov
and
fwait
dec
xor
data16
pop
divb
ss
fists
inc
outsl
cwtl
cmp
sbb
push
cltd
jae
mov
mov
jg
sbb
jge
and
or
sub
mov
inc
mov
xchg
pop
xchg
inc
inc
adc
outsb
and
dec
xor
adc
inc
add
ret
sub
js
shr
mov
fimuls
nop
cmp
cmp
inc
adc
repnz
xlat
or
mov
pop
insb
xchg
xor
ss
mov
mov
popa
lds
inc
daa
shr
push
ljmp
data16
roll
pop
mov
mov
push
mov
sub
outsb
loop
cmp
subb
pushl
ret
js
clc
leave
fdivs
sub
gs
imull
loopne
iret
fidivl
aad
es
dec
mov
adc
jb
out
flds
cltd
cs
inc
in
test
sub
jno
sub
rcll
mov
popa
mov
jb
aam
cmp
in
cmp
adc
cwtl
mov
add
dec
mov
mov
mov
adc
mov
cmp
inc
pusha
sbb
fadds
and
xor
adc
enter
or
repnz
shlb
lea
test
mov
repnz
ret
sbb
push
add
or
pop
push
xchg
push
dec
cmp
in
dec
leave
push
sbb
leave
inc
lret
les
iret
pop
inc
cld
push
lods
or
ret
mov
adc
cmpsl
mov
mov
out
cld
arpl
ret
clc
imull
das
push
lods
ret
sbb
lock
test
faddl
loop
lret
fldcw
jno
push
loopne
sbb
cmpsb
adc
cltd
cli
jge
ja
repz
inc
jp
in
xchg
lret
xor
leave
xchg
out
or
out
repnz
xor
push
int3
fildll
int
fs
js
loopne
imul
cmp
sbb
push
xlat
jne
out
lods
dec
clc
or
es
mov
icebp
sarl
pop
xor
ja
jle
call
push
pop
xchg
xor
mov
xchg
shl
addl
pusha
out
push
sbb
dec
cwtl
mov
dec
push
andl
loope
sub
push
jg
ja
cs
les
imul
sub
and
out
das
inc
lds
inc
in
or
sub
nop
cmpb
pop
and
push
xchg
loop
cmp
mov
stos
dec
movsl
test
sub
arpl
leave
mov
xor
adc
fnstenv
jl
int3
or
add
xchg
dec
test
in
or
insl
dec
test
xor
popa
cmpsl
sbb
adc
js
or
sub
test
orb
xor
jbe
cmp
pop
out
xchg
pop
fnstsw
mov
pop
inc
cmp
mov
mov
aas
stc
push
mov
js
das
sbb
xor
mov
fnstsw
addr16
push
shlb
xchg
inc
cmp
fisubl
jle
stc
sbb
pop
nop
loope
popa
loope
pop
add
pop
leave
jmp
outsl
inc
lds
adc
cmc
mov
jo
inc
jne
cwtl
addb
push
cmp
pop
data16
aaa
mov
fdivs
loop
push
bound
inc
rcrl
mov
and
or
push
in
mov
shrl
leave
inc
outsl
jns
repnz
pop
sub
cmp
xchg
or
add
mov
add
andl
xchg
cmc
jp
cld
movb
push
lahf
mov
jge
nop
shl
inc
movsl
rcll
xor
xor
aam
sti
test
xchg
mov
push
pop
ficoms
jmp
je
inc
mov
popa
inc
mov
pop
shr
add
cltd
enter
xchg
mov
and
icebp
jg
lret
ds
xchg
cmp
dec
imul
or
pop
push
mov
dec
mov
inc
and
lret
mov
icebp
xor
daa
xor
popf
imul
mov
add
test
add
push
out
mov
cmp
movsl
push
xchg
addr16
insl
dec
outsb
scas
imul
xlat
fidivs
adc
xchg
cltd
jl
dec
ret
popa
dec
push
ss
dec
lods
int3
pop
das
clc
push
sti
ficompl
mov
xor
xchg
mov
xlat
dec
bound
sbb
cmp
or
sub
lods
bound
jge
sub
lahf
mov
add
push
lret
inc
xchg
pop
sbb
gs
pop
test
xor
in
imul
cmp
imul
or
notl
xchg
add
fsubrl
xlat
cld
ljmp
dec
or
stos
imul
push
loopne
cltd
ret
inc
call
xchg
dec
sarl
cmpsl
jb
aad
sub
outsb
xor
mov
mov
repz
or
daa
xorb
int
cmp
ss
and
mov
arpl
lods
adc
cs
movl
xchg
sbb
xor
cli
sub
ret
addr16
mov
xchg
pop
push
insl
arpl
aam
push
ja
fxam
jl
in
inc
dec
pop
sarl
push
xchg
xchg
dec
cmp
mov
int
sbb
xor
mov
fistpl
jl
mov
pop
sbb
cli
push
jge
aas
je
inc
sbb
ss
add
mov
dec
insb
dec
repz
orb
sar
jge
xchg
mov
nop
jne
orl
pop
jns
jbe
sbb
jecxz
sar
jb
out
mov
popf
xor
add
fcomps
mov
int3
mov
shr
jecxz
pop
mov
gs
adc
push
insl
scas
mul
shrb
lods
and
in
jnp
mov
cli
mov
sub
shll
add
pop
xchg
push
mov
fdivs
ss
mov
mov
rcll
lods
mov
rorb
cmp
inc
and
add
mov
fwait
or
aam
stc
lock
std
test
stc
loopne
sbb
mov
stos
inc
inc
mov
xchg
cld
cli
ret
adc
xchg
nop
jbe
or
pop
outsl
rorl
or
testb
iret
icebp
jae
pusha
dec
jnp
jl
imul
dec
lret
lods
cmp
fstpt
mov
or
add
std
ret
fnsave
sti
out
subb
mov
leave
jecxz
pop
notb
das
pusha
ltr
es
test
lcall
pop
scas
pop
mov
out
loop
mov
imul
cmpsl
loope
push
and
mov
push
decl
push
nop
cltd
add
xor
sbb
pusha
xchg
jns
testb
or
aam
test
arpl
aaa
cmp
pop
lret
jmp
mov
data16
fiadds
xor
jns
jno
jb
push
pop
adc
loop
inc
addr16
sub
xlat
and
mov
shl
mov
fmuls
mov
add
adc
jle
in
das
cld
pop
lea
lea
inc
sub
inc
mov
adc
mov
fwait
sbb
push
xchg
lock
cld
sub
fwait
imul
add
cmp
cmp
add
pop
mov
inc
cmp
outsl
fldl
add
test
jecxz
cmp
jne
outsl
jb
mov
jo
fmull
stos
pop
pop
cld
stos
mov
shrl
repnz
shll
fdiv
in
push
push
mov
das
pop
fldcw
sub
filds
pushf
sub
xor
sub
sahf
in
jl
add
int3
mov
sti
and
out
adc
jbe
sti
fwait
js
out
imul
pop
sub
in
das
or
loopne
lret
and
pop
lahf
aam
xchg
pop
lds
sub
or
imul
xor
in
xchg
xor
cmpsb
cmp
ds
dec
inc
std
aam
imul
xchg
pop
scas
cmp
inc
jmp
cld
pop
add
lret
pop
pop
orl
addr16
pop
inc
lret
leave
fldt
lock
adc
sub
or
pop
cltd
jns
dec
imul
sub
and
sbb
or
jb
inc
pop
dec
dec
mov
lcall
mov
cmp
jnp
loop
and
mov
or
push
cmp
sahf
imul
jne
stc
xor
scas
mov
shlb
jno
aaa
subl
or
push
popa
push
xor
pop
mov
mov
mov
and
sahf
mov
mov
loop
rcrl
inc
out
sbb
cmc
xor
mov
je
or
stos
in
xchg
cwtl
lea
sbb
lea
mov
push
add
ja
jl
dec
sub
or
test
sbb
mov
jp
repz
loopne
clc
lcall
jmp
ljmp
push
mov
jb
add
xchg
decl
xchg
lcall
test
jle
std
movsb
adc
pop
leave
dec
sar
ret
sub
aas
iret
shl
cmpb
stos
xchg
arpl
add
mov
push
xchg
data16
mov
mov
mov
das
and
arpl
xchg
pop
add
sbb
dec
adc
mov
cmp
jbe
lret
cs
or
int3
and
dec
inc
mov
js
jb
or
cmp
aas
cld
in
repz
js
or
andl
dec
add
shll
add
sbb
scas
add
dec
pop
mov
xchg
ljmp
movsb
out
mov
sub
xor
test
cmp
xor
pushf
xchg
dec
adc
sub
lds
dec
xchg
jmp
jmp
arpl
mulb
mov
movsl
js
mov
fsubrl
mov
mov
xor
cltd
ljmp
cwtl
lock
imul
xlat
push
into
push
mov
lahf
out
inc
mov
push
xor
sbbl
fwait
in
mov
xchg
add
mov
jnp
das
lcall
repnz
test
xchg
xor
jnp
mov
sub
int3
cmp
stos
dec
pop
je
js
push
push
outsl
in
xor
aaa
out
sbb
cld
cltd
push
lcall
add
xchg
das
sub
addr16
std
push
and
ss
mov
std
aam
fincstp
push
and
cmc
cmpsl
pop
xchg
mov
dec
xlat
jecxz
add
sbb
sti
aad
mov
leave
and
push
jne
outsb
or
iret
xor
lcall
jae
std
int3
repnz
xlat
ss
jecxz
mov
jle
xor
popf
mov
mov
mov
decl
cmp
xchg
push
cmp
in
mov
mov
aam
fiadds
sbb
aad
cmpsb
data16
jle
es
add
movsl
adc
out
xchg
icebp
stos
cltd
loop
inc
pushf
adc
mov
mov
testl
pop
sub
adc
ret
mov
xor
mov
sbbl
fdivl
xlat
or
enter
xlat
push
shrl
sbb
cmp
jmp
sbb
pop
mov
add
mul
sub
sub
add
xor
pusha
movsl
sbb
iret
daa
lock
or
mov
daa
in
cld
add
sub
cltd
hlt
shrl
call
sbb
jnp
fldt
aas
subl
outsl
outsl
sub
fadds
mov
jne
xor
clc
call
sub
add
inc
call
lods
dec
test
lds
mov
scas
xor
jae
cwtl
mov
mov
lods
add
test
cmpl
push
in
or
sub
cmpsl
xchg
lret
push
inc
in
push
jbe
ljmp
stc
js
fwait
popf
ss
jl
fdivrl
push
shlb
sbb
test
daa
push
pop
cmpsl
je
lcall
mov
popl
or
inc
push
mov
mov
subb
mov
sbb
dec
fidivrs
push
mov
mov
lret
stc
jbe
and
mov
int3
in
lds
ds
and
jae,pt
mov
sbb
cmp
lret
imul
sub
subl
subb
lock
movsl
outsl
pop
shlb
lods
fidivl
mov
cmp
sbb
fstl
jge
cld
jns
adc
push
push
adc
mov
out
sbb
adc
push
jne
jmp
in
xor
jno
orl
add
push
push
into
dec
push
mov
out
xlat
sub
jp
lods
jnp
add
stos
push
pop
insb
jb
and
lea
loopne
cmp
push
fcmovne
and
jbe
cmp
pop
inc
cmpl
enter
sub
jne
push
dec
scas
data16
lods
mov
testb
sbb
or
ret
jbe
jg
dec
imul
int
and
rolb
lahf
mov
lahf
js
stos
mov
xchg
cmpsb
fsub
bound
int3
les
outsl
cmp
pop
cli
cmp
sbbb
insl
fstl
jne
fmuls
test
and
cmp
leave
inc
sub
hlt
aaa
inc
xor
mov
inc
daa
or
js
pop
inc
mov
lret
lock
daa
mov
mov
sti
mov
mov
inc
cmp
call
into
pop
es
mov
ret
daa
mov
xor
add
lods
xchg
adc
sub
cmp
sbb
das
mov
pop
out
sbb
dec
inc
in
jns
xor
mov
lea
lret
xchg
or
push
stc
test
adc
sbb
out
outsl
clc
pusha
sub
dec
not
xchg
daa
jge
add
fdivs
dec
mov
mov
out
mov
cmpsb
add
repz
dec
clc
mov
gs
xchg
mov
lds
jns
dec
mov
push
jne
add
push
sbb
dec
nop
loop
inc
push
mov
repz
sbb
cmpsl
or
scas
ret
push
xchg
fnstcw
mov
dec
add
or
imul
cmpsl
lds
inc
fistpl
mov
jbe
push
roll
lea
pop
adc
sti
or
lock
data16
mov
iret
cmc
int
lock
aad
dec
push
xor
iret
iret
subl
jbe
or
out
mov
jle
ja
or
rcll
enter
aad
mov
jl
les
outsl
test
add
pop
pushf
mov
jmp
divps
es
pop
inc
out
xor
mov
mov
pusha
sbb
test
scas
mov
mov
push
lcall
xchg
repz
dec
add
addb
and
mov
leave
aam
hlt
push
xor
in
and
add
out
mov
in
loopne
shlb
add
xchg
xchg
cmp
lods
jo
outsl
cmpsl
fcomps
lret
push
std
subl
icebp
in
addl
add
lret
inc
jl
cld
jecxz
dec
push
stos
fnstcw
mull
dec
push
add
add
adc
xchg
dec
clc
imul
fwait
jbe
inc
bnd
mov
mov
sbb
sbb
sub
sahf
dec
jp
int
pop
negb
addr16
push
sub
in
push
sub
into
or
pushf
insb
je
jae
push
jns
and
add
sahf
popa
mov
repnz
sbb
and
fisubrs
fldt
cwtl
mov
std
xor
outsl
jb
inc
pop
xchg
xchg
nop
sbb
notl
stos
push
int3
mov
pushf
ficoms
fistpl
dec
sbb
push
adc
push
push
inc
jno
jae
lds
lds
aad
xchg
pop
cmp
mov
in
push
pop
jno
rol
jecxz
pop
pop
cmp
pop
imul
mov
dec
testl
outsl
jl
int3
mov
xor
jg
push
sahf
negl
mov
sahf
and
jnp
pop
test
cwtl
cli
idivl
in
jae
mov
notb
insl
test
cld
pop
and
mov
hlt
mov
mov
dec
aas
popa
int
pop
adc
xor
pop
movsl
mull
and
jg
or
xor
das
fisttpll
jge
jp
shrl
inc
divl
int
outsb
rol
sub
pop
jge
mov
out
imul
add
sahf
hlt
fwait
loope
xchg
jecxz
cmp
push
cltd
outsb
adc
ja
cmc
mov
xchg
dec
sub
adcb
mov
les
test
test
add
pop
add
fnstcw
inc
cmp
call
inc
incl
pop
ret
cld
jp
cs
enter
imul
jns
es
add
lret
lahf
jbe
mov
stc
pop
sbb
lret
fisttpll
lahf
cmpl
push
and
adc
mov
ret
test
or
adc
inc
lds
bound
and
mov
test
xor
out
pop
notb
insl
jmp
repnz
adc
pop
and
jl
mov
icebp
mov
inc
inc
test
mov
inc
xchg
or
and
mov
mov
test
hlt
icebp
rclb
dec
adc
lock
or
pop
xchg
xorb
movaps
sbb
mov
push
or
adc
xchg
xlat
mov
fcoml
hlt
call
lahf
stc
stos
and
ds
into
stos
scas
mov
inc
add
cmp
popa
fildll
js
arpl
xor
jns
mov
inc
cltd
in
cmp
sbb
movsl
sysenter
rorl
push
dec
jo
fisubs
cwtl
nop
sub
rcl
mull
xchg
push
add
or
xor
inc
jle
jl
popa
outsl
xchg
leave
shll
fwait
scas
stc
xor
lahf
sbb
mov
imul
or
cld
mov
or
ret
adc
jecxz
insl
pop
jmp
shll
leave
nop
add
pushf
pop
out
in
sahf
cltd
cltd
adc
pop
je
adc
cltd
jbe
and
into
ljmp
adc
cmp
xlat
das
mov
inc
jge
inc
xchg
inc
daa
dec
imul
negb
mov
popa
push
sti
fmull
pop
dec
add
mov
popf
idiv
pusha
mov
xlat
jo
adc
sbb
xor
rorb
cmp
jbe
in
adc
std
and
not
out
adc
jno
popf
xor
shrb
les
lret
jbe
outsb
testb
jb
mov
mov
xchg
push
add
xchg
jb
push
mov
xlat
dec
mov
aaa
xchg
lret
rolb
adc
adc
fisttpll
dec
pop
cmp
mov
cld
jae
sti
fiadds
mov
dec
pop
leave
or
lret
or
mov
call
inc
adcl
sub
xor
test
popf
loopne
mov
cmpsb
es
sub
xor
xchg
hlt
mov
repz
idivl
jnp
pop
sub
mov
adc
adc
jno
int
sub
xor
mov
daa
jmp
mov
in
push
mov
and
jmp
xchg
lcall
inc
xor
push
xchg
jl
shll
sub
ret
jecxz
insb
xchg
inc
jo
cwtl
xchg
sbb
mov
push
hlt
incb
xor
cmc
or
dec
in
bound
fwait
bound
mov
cmpsl
inc
xorl
cwtl
push
add
adcl
mov
les
int
lods
scas
sarb
pop
shll
ljmp
cli
push
cmp
sbb
dec
add
inc
inc
mov
imul
mov
inc
jmp
jp
cmp
cmpb
jns
daa
mov
ret
mov
pop
and
mov
lret
xchg
fsub
fsubr
jae
imul
mov
cli
mov
clc
xlat
pop
cld
ret
nop
xchg
shlb
or
leave
add
imul
sahf
ljmp
lods
pop
sub
enter
or
push
xchg
int3
mov
or
mov
fidivrl
addb
jbe
mov
xlat
xlat
addr16
mov
stos
into
mov
call
cmp
add
roll
cld
pop
mov
jl
mov
or
js
cmpsl
mov
jns
xor
and
xchg
add
out
cmc
iret
jg
xor
and
out
xchg
cmpsb
mov
xchg
push
push
scas
xchg
adc
nop
movsl
js
lods
mov
test
lock
add
in
rolb
xchg
xchg
xchg
js
std
cmp
or
cwtl
bound
cli
loopne
jno
xchg
cli
sbbl
mov
loop
movsb
aad
ss
test
xor
jbe
fisubrl
popa
icebp
in
incl
insl
cmp
sahf
das
lea
testl
mov
pop
cmp
adc
repnz
ret
jne
jmp
adc
rclb
cmp
bound
push
push
cmc
out
push
mov
push
int3
sbb
jmp
inc
fs
stc
push
test
mov
insb
pop
insb
jecxz
push
fldl
jecxz
jge
aaa
stos
data16
out
jp
pop
mov
xor
movsb
sub
fs
popa
adc
icebp
push
loopne
test
sbb
test
fcomi
aaa
push
insl
jae
lds
bt
mov
adcb
adc
jo
xor
dec
cmp
js
gs
pop
mov
sub
cli
jnp
sub
in
imul
call
ret
xchg
inc
mov
aaa
or
cmp
loope
inc
push
cs
mov
pop
fdivp
repz
sbb
mov
scas
repnz
into
jo
lret
les
retw
inc
inc
mov
shlb
imul
inc
in
cltd
push
sti
inc
lret
out
das
adc
push
mov
ret
out
lcall
pop
dec
jnp
sbb
int
jecxz
push
das
cld
xlat
rcrl
fcoml
xchg
mov
xchg
push
nop
test
or
lcall
xchg
idivl
dec
push
dec
pop
mov
adc
sbb
jnp
outsb
inc
test
inc
pop
mov
addr16
cmp
arpl
int
sbb
scas
add
lcall
fs
xchg
pop
xlat
add
int
inc
std
lcall
add
adc
ss
sbb
rcll
cli
and
push
inc
adc
pop
pushf
sub
cmp
pop
add
xchg
int
sbb
mov
xchg
jbe
jbe
pop
hlt
popf
dec
insb
orb
lahf
std
iret
jge
jl
arpl
or
cmpsb
mov
idiv
rcrb
jb
je
or
xor
cmp
sbb
inc
or
test
cli
add
xchg
and
aam
mov
and
pop
push
or
ficoms
mov
push
lock
fisubl
es
xchg
xchg
mov
dec
test
fnstcw
mov
pop
pop
enter
lret
and
xchg
xchg
dec
push
adc
imul
fists
lock
mov
fdivl
fwait
jge
outsb
cmp
adc
cmpb
mov
xchg
sbb
adc
ja
adc
fs
pop
lods
pop
mov
outsb
jb
aaa
mov
out
cmc
xchg
mov
dec
js
or
and
mov
sbb
insb
ss
dec
hlt
or
es
xchg
loopne
pop
aad
push
push
mov
mov
mov
repz
jnp
lds
into
int3
cs
adc
xchg
inc
movsb
xchg
mov
testl
xor
mov
daa
xor
inc
ds
mov
subl
aas
push
ja
mov
rcr
inc
cmp
pop
ss
adc
cmpsl
daa
mov
outsl
or
sahf
ljmp
cmc
pop
dec
add
mov
cmp
fidivrl
mov
mov
xor
mov
out
insl
xor
push
xor
sbb
lahf
mov
cmpsb
and
push
out
outsl
ds
daa
mov
or
push
mov
outsl
dec
into
add
subb
xor
aam
mov
fidivrs
js
push
js
xchg
lahf
dec
jb
xchg
pop
rorl
jl
mov
jno
movsl
orl
sahf
fmul
in
jns
fisttps
xchg
std
push
inc
pushf
js
push
mov
in
test
xor
xchg
in
add
adc
stc
aas
or
add
xchg
in
xchg
mov
insl
mov
sub
cmpsl
js
iret
jecxz
fwait
pop
rorl
ret
stc
sti
mov
mov
sub
xchg
and
int3
ret
das
mov
mov
add
jmp
mov
enter
incl
imul
cli
add
adc
sub
div
or
mov
outsb
loop
add
cmp
lret
orb
push
inc
adc
xchg
or
jbe
and
fistpl
cmp
push
gs
cmp
inc
ret
dec
mov
je
idivb
push
xchg
shlb
shrd
dec
mov
jbe
shrb
dec
mov
sub
mov
adc
test
js
dec
in
cmp
icebp
cmp
into
or
in
pop
icebp
frstor
bound
push
in
imul
sbb
jb
sub
sub
enter
inc
mov
es
mov
and
test
and
insb
pop
mov
or
mov
cmp
dec
fists
out
lock
push
xor
int3
mov
test
imul
sar
mov
ds
les
popf
cs
lds
loopne
jno
sub
cmp
cmp
hlt
mov
inc
jle
add
pop
pop
xor
jle
or
xor
adc
aam
sbb
lods
mov
mov
test
inc
int3
push
push
das
sbb
mov
pushf
lods
lods
mov
outsl
movsb
sbb
or
xor
stos
dec
fwait
jns
mov
out
or
cmp
jbe
mov
imull
enter
lret
andb
jb
mov
mov
mov
sub
push
sub
sub
aad
mov
inc
xor
mov
adc
aad
js
jmp
mov
fucom
pop
test
xchg
aas
inc
cmpsl
jecxz
divb
push
mov
ds
repnz
sbb
sti
mov
adc
pushf
sti
cmc
ljmp
fdivrs
sbb
sbb
inc
jae
lret
pushf
iret
pushf
cmp
js
xchg
imul
xchg
mov
mov
pop
icebp
sbb
int3
jp
addr16
ret
or
add
rcrl
icebp
dec
fs
adc
mov
mov
jb
pop
sub
pop
or
push
stc
push
bound
sub
adc
and
add
xor
xchg
sbb
cld
lcall
pop
pop
iret
mov
hlt
ss
iret
mov
jg
std
sub
inc
jnp
jecxz
adc
ret
inc
add
fidivrl
mov
notl
pop
stc
and
loop
jae
es
mov
add
testl
pop
out
out
push
push
xchg
loope
fwait
lods
lods
xor
loop
andl
dec
imul
xor
jno
mov
int
jecxz
loope
notl
je
mov
mov
fidivrs
mov
ficoms
ret
inc
mov
enter
jmp
mov
jp
and
inc
loopne
mov
xor
test
outsl
mov
jae
xor
xor
lea
movsl
mov
sbb
ds
in
icebp
xchg
pop
push
jmp
push
sbbl
xchg
sub
push
pop
imul
sti
xchg
js
test
sub
mov
test
mov
ja
jnp
ljmp
sbb
cmp
cld
ficomps
fdivrp
mov
and
pop
dec
imul
loope
pop
jg
or
fsubrs
mov
rorl
or
dec
push
test
cmp
stos
out
mov
lea
insb
jae
sub
outsb
hlt
pushf
xchg
mov
jle
mov
lcall
repz
mov
pusha
outsl
lret
dec
cs
lret
mov
lods
sub
xorb
insl
popa
test
pop
je
frstor
sbb
push
rcrl
pop
jl
fs
sub
and
pop
outsl
add
inc
dec
push
div
adc
push
xchg
jno
jne
mov
xor
mov
and
xor
sbb
pop
jno
in
push
stc
pop
and
shr
out
lock
mov
lods
inc
jb
daa
adc
mov
cs
ret
xchg
cmpb
fidivs
lea
xor
ja
sub
push
inc
mov
mov
fwait
dec
sub
xchg
ret
sub
cmp
sub
mov
push
lods
fsubl
mov
cmp
inc
gs
shlb
lret
repnz
cmp
mov
fildl
xchg
lret
cmc
adc
lods
repz
mov
mov
loope
sub
sub
xchg
in
in
dec
jle
jno
fwait
mov
sbb
xor
and
dec
cld
fnstcw
push
ja
pop
add
inc
push
push
in
dec
sub
cmpsl
in
dec
scas
dec
dec
or
add
push
push
leave
push
pop
mov
xchg
pop
sbb
loope
add
dec
sahf
je
mov
or
and
lods
daa
clc
ljmp
jmp
divl
adc
int3
jo
add
inc
scas
testb
inc
mov
pop
push
sub
push
push
out
pop
int
pop
sbbb
push
dec
dec
inc
imul
jb
scas
xchg
mov
aam
in
in
pop
xchg
popf
lret
add
cmc
mov
push
and
es
scas
push
mov
es
cld
in
fsubs
loopne
jno
fnstcw
jnp
ror
pop
adc
into
icebp
jg
cli
xchg
mov
pop
testl
cltd
stc
aas
decb
add
dec
jnp
cwtl
lods
push
out
rcr
dec
cmpsb
lret
mov
mov
jne
jp
add
dec
sti
lods
in
pushf
sahf
adc
jl
push
mov
jbe
pop
mov
mov
dec
int
sbb
adc
and
rcrl
sub
jb
mov
and
jmp
and
add
jge
cwtl
push
out
cmpsl
int3
or
mov
repnz
sbb
dec
sahf
pop
sub
rolb
clc
fdivrs
inc
xor
and
loope
xor
clc
ljmp
or
ljmp
test
push
pop
push
jnp
sbbb
lds
shl
aas
xor
or
sub
jns
pop
rcrb
push
mov
aas
xor
out
fdivrs
push
popf
jnp
sbb
and
fwait
mov
xor
or
faddl
mov
iret
fists
mov
test
idivl
and
mov
jmp
xor
arpl
or
std
add
xor
pushl
sbb
out
imul
jo
rcrl
xchg
out
cmp
ss
aad
mov
test
bound
aam
pop
push
shrb
push
les
jb
mov
dec
mov
test
dec
mov
jnp
ret
divl
div
push
sbb
mov
loop
sub
cmp
pop
dec
sub
dec
fucomp
push
dec
addb
std
rol
jecxz
add
add
stos
out
jns
lock
or
xchg
dec
movsb
sbb
jnp
sbb
mov
sbb
les
rorb
mov
inc
push
push
sti
push
data16
xor
iret
enter
xchg
dec
jns
xchg
add
popa
sbbl
mov
mov
push
and
add
dec
andb
adc
jge
mov
sub
insb
adc
ljmp
into
sbb
mov
cli
pushf
rcr
adc
out
mov
push
fcoms
pop
subl
addr16
notl
scas
mov
test
push
addr16
inc
int3
xchg
fs
mov
or
and
xbegin
jbe
mov
cmp
add
frstor
clc
push
mov
stos
aam
jno,pt
jno
push
jecxz
cmp
dec
jb
or
test
adc
icebp
xor
mov
mov
jp
stos
stc
roll
shrl
mov
and
fistl
sub
aad
sub
inc
cmc
sub
dec
loope
sbb
cmp
aam
loopne
fisttps
fidivrl
sub
cmpb
pop
loope
leave
movsb
push
and
mov
pop
mov
je
adc
jae
loopne
and
pop
dec
repnz
dec
and
js
fildl
adc
inc
call
test
xchg
pop
add
inc
xchg
fsubrs
jbe
ficoms
lret
jne
pop
mov
xchg
mov
push
push
jns
xchg
and
jb
repz
adc
inc
or
lds
gs
movsb
jo,pt
mov
aaa
xchg
fistpl
xchg
fimuls
imul
cmpsb
push
loope
enter
dec
lahf
stos
aaa
popf
push
inc
or
call
int3
pop
lret
lds
cli
push
mov
outsl
int
loopne
xor
scas
std
dec
popa
xchg
js
xchg
cmp
xchg
nop
je
lahf
movsb
popf
jae
cli
inc
xchg
pop
lahf
outsl
scas
xor
mov
push
cmp
inc
stos
std
mov
test
xchg
call
cmpsl
fisttpll
scas
jnp
cltd
lds
cmp
andb
pusha
sub
mov
push
and
std
dec
scas
mov
adc
stos
idiv
out
xchg
cmovb
cltd
popf
jb
or
out
mov
jae
xchg
jae
movsb
xchg
fadd
ss
push
xor
hlt
aad
pop
adc
push
lcall
repz
ret
jmp
sub
ffreep
stos
lahf
cmpsb
or
push
adc
push
test
xchg
pop
lods
and
xor
roll
and
xchg
dec
ds
not
enter
mov
ficompl
push
jno
hlt
aaa
shlb
repz
sub
int
shl
xchg
sub
pop
ret
mov
fimuls
adc
std
and
cld
je
pop
jge
popa
test
mov
jge
jnp
ja
lods
scas
push
bound
sbbb
mov
out
in
add
mov
add
call
in
mov
pop
push
js
sub
inc
sub
or
cld
into
repz
fsubrl
je
cmp
sti
fnsave
mov
clc
fucomi
adc
add
mov
jne
movsb
fwait
inc
add
mov
or
in
pop
xchg
mov
sub
lods
or
jbe
sbb
fistpll
js
lahf
fs
ja
dec
push
outsl
mov
sub
lods
cmp
addr16
sub
shr
xlat
loope
jno
cmp
stc
sbb
sbb
std
aam
cltd
add
popa
mov
mov
jbe
cwtl
outsl
adc
scas
mov
mov
aaa
push
mov
mov
xlat
rcrl
cmp
mov
roll
xchg
iret
and
push
imul
pop
das
stos
xor
out
jp
dec
sbb
jb
add
sarl
pop
pop
data16
pop
in
repz
push
xor
pusha
sub
or
cmp
sub
stc
aaa
xchg
adc
cmp
pop
cltd
add
pushf
fiaddl
add
inc
sub
outsb
or
rcll
adc
pop
lcall
cwtl
or
mov
leave
cmpsl
dec
pop
cmp
imul
inc
or
dec
add
adc
dec
out
cli
and
psubq
cmp
xor
rorl
out
sub
xor
cmp
imul
xor
mov
xchg
jge
xchg
xchg
pop
push
jge
pushf
lea
dec
in
mov
cmp
push
adc
jb
sub
lods
or
jo
jnp
cmpsb
pushl
ljmp
pop
xchg
adc
or
fs
xadd
mov
and
int3
push
jns
or
push
cwtl
call
mov
insl
jle
and
test
out
in
mov
sub
lea
pusha
fistl
mov
push
sar
push
divb
aad
fnsave
adc
adc
enter
leave
adc
rcrl
fnstenv
push
inc
and
xor
jnp
rolb
scas
hlt
test
sub
clc
or
jno
adc
bound
cld
iret
jg
inc
add
dec
aam
mov
int3
aaa
dec
lcall
sub
popa
cmp
data16
fcmovbe
sbb
mov
bnd
pop
cmpb
std
dec
mov
orl
add
inc
outsl
out
xchg
les
shll
jno
notl
add
dec
or
xor
mov
cld
inc
pop
lea
ret
adc
das
idivl
popf
aam
inc
fldcw
aam
pop
pop
testl
or
mov
sti
ja
add
sahf
mov
loope
xor
data16
arpl
sbb
inc
mov
sbb
add
sub
arpl
lea
dec
mov
test
in
sbbb
inc
lock
test
and
daa
jg
test
test
dec
sub
incl
or
stc
in
cld
push
cmp
xor
scas
loope
xor
jae
popa
loop
mov
sub
jmp
aaa
add
mov
adc
add
pop
inc
idivl
mov
lret
insb
push
test
push
test
jl
inc
scas
es
push
mov
push
pushf
nop
test
pushf
push
cmp
faddp
cltd
mov
test
fwait
insl
mov
leave
lret
pop
cmp
or
fcoml
push
push
cmp
fdivs
pop
aad
cmpsl
ret
push
add
jne
pop
dec
std
dec
scas
jl
jle
pusha
out
sub
sub
filds
fcoms
xor
dec
pop
gs
mov
in
aad
dec
push
xchg
and
cmc
test
xor
cmpsl
pop
lret
pop
ret
pop
push
add
mov
fs
outsl
mov
fldt
adc
in
push
dec
and
lods
pop
adc
fsts
pop
sub
jecxz
aas
push
dec
mov
mov
pusha
fnsave
sbbl
mov
push
push
in
jns
lods
out
in
clc
fmull
lahf
ja
shrl
imul
mov
inc
sbb
fimuls
repz
dec
in
and
rclb
jge
sub
mov
scas
xchg
xchg
jne
nop
cli
inc
xor
gs
mov
aaa
push
mov
push
mov
jl
repnz
inc
add
ja
xor
mov
aaa
add
les
xchg
mov
lea
int3
or
adc
inc
jbe
cmpsl
imul
mov
ret
loop
loope
into
stos
dec
add
stos
out
rolb
jl
js
sti
imul
adc
inc
adc
jbe
daa
xor
push
add
push
lods
pop
call
mov
aad
mov
sti
mov
in
xchg
push
dec
cmp
dec
inc
or
aam
add
test
test
test
mov
xor
lret
fstps
sub
jae
cwtl
adc
enter
jno,pt
adc
sub
loopne
push
fnstsw
jg
xchg
and
fs
mov
mov
mov
push
xchg
cmp
sbb
jg
mov
jae
test
aaa
sbb
dec
sbb
mov
fsts
gs
cli
stos
in
enter
call
repnz
imul
aaa
cwtl
add
popf
stos
pushf
or
scas
loop
or
int
inc
insl
rorb
jmp
sti
xchg
scas
mov
cmp
scas
or
aas
xor
mov
rcrb
push
mov
in
testb
mov
in
imul
pop
lock
mov
lahf
lret
and
pushf
push
std
and
aam
clc
stos
jmp
dec
sub
outsb
pop
imul
adc
sarl
inc
add
test
leave
rol
fidivl
leave
dec
addb
adc
and
shrb
lea
add
inc
imul
and
sbb
arpl
adc
mov
pusha
push
cmpsl
test
daa
xor
adc
aam
inc
and
and
enter
xor
out
jl
and
mov
es
in
fldcw
and
adc
pop
out
pop
cli
inc
xchg
mov
inc
mov
imul
nop
dec
aam
addl
cltd
lea
jbe
add
scas
and
push
lcall
lods
int
pop
mov
push
add
ds
std
mov
test
or
lret
push
sub
jle
push
push
or
inc
push
loop
jle
push
in
jle
insl
shrb
jp
outsl
stos
xorl
mov
mov
lock
adc
fadd
fxch
fisttps
jne
adc
scas
call
and
mov
dec
inc
lods
aaa
pop
fxtract
cmp
lahf
negb
inc
ja
xor
pop
ds
adc
inc
add
sbb
ret
ljmp
out
pop
pop
bound
mov
mov
roll
cs
sub
xor
sti
cmp
xor
ret
adc
repnz
jmp
fcoml
xchg
sub
pop
inc
fcmovbe
fldl
mov
jnp
aad
sbb
push
vphaddwq
mov
or
out
shrl
or
pop
lret
push
popf
or
push
sarl
lock
faddl
xchg
es
push
pop
dec
jae
js
push
sub
aas
mov
adc
cmp
int
mov
loopne
mov
and
scas
into
pushl
push
xorb
push
lret
mov
cmp
mov
popa
nop
out
pop
add
jl
in
jle
icebp
mov
mov
mov
ret
movsb
sar
jp
lods
sti
push
leavew
pop
mov
or
inc
or
scas
xchg
lcall
repnz
test
in
nop
lods
xlat
jno
pop
add
cs
xchg
jge
cmc
jne
inc
or
imul
jle
jne
ret
sbb
lret
cli
xchg
mov
mov
push
mov
or
mov
push
popa
cmp
jl
mov
repz
push
lods
lcall
fcompl
mov
stc
neg
mov
hlt
sub
je
mov
iret
sbb
add
pop
ljmp
sub
mov
jnp
pop
dec
aaa
faddl
sbb
jl
cs
or
sbb
test
mov
add
test
jecxz
imul
sbb
sub
mov
adc
sbb
jmp
lock
jae
rolb
shrl
mov
mov
mov
xlat
or
xchg
popl
lock
adc
popa
fwait
cmpsb
rcrb
xchg
dec
xlat
cmpsl
mov
out
data16
out
or
aaa
jae
insl
lret
out
pop
cmp
sbb
fbstp
dec
out
jecxz
mov
loop
adc
xchg
stos
shl
mov
aam
xor
daa
xor
add
push
out
out
sbb
jge
out
leave
fdiv
mov
lods
add
adcb
push
stc
out
ljmp
fisubrl
fisttpll
or
dec
ret
movsb
arpl
out
sti
cltd
test
data16
xlat
jl
xor
pop
lcall
adc
sub
dec
cmpsl
daa
add
sub
fcomip
add
icebp
jbe
xchg
enter
scas
add
scas
aaa
dec
ja
and
fbstp
xchg
adc
mov
cli
fldl
or
test
xchg
gs
cmpsl
jae
fstl
xchg
aas
jge
in
xor
pop
hlt
stos
idivb
cs
mulb
and
sbb
inc
push
mov
ret
insl
ret
cmpsl
pop
add
pop
push
testb
jge
movsb
jmp
outsb
ljmp
scas
adc
aaa
or
pop
sahf
dec
lahf
xchg
movsl
stos
add
mov
fsubl
mov
push
hlt
xor
popa
scas
push
test
hlt
movsb
lock
jl
or
mov
dec
push
inc
push
fimull
ret
sbb
loopne
mov
xchg
mov
adc
mov
and
mov
push
sti
and
fwait
bound
and
mov
nop
add
movsb
and
scas
daa
icebp
fcompl
mov
clc
mov
xorb
mov
jb
push
movsl
sub
or
jmp
jnp
shrb
fsubrp
cmpsb
ja
dec
sub
pop
aad
jle
std
mov
push
imul
inc
testb
push
adc
jmp
mov
ficompl
loopne
inc
push
outsl
xchg
lods
sub
loopne
ja
sbb
idivb
out
cmp
jge
push
mov
ja
test
and
lret
pop
and
mov
sub
cmpsb
add
push
mov
mov
out
ret
cltd
insl
jno
mov
loope
cmpb
cmpsb
xchg
popa
and
aas
xlat
aam
mov
push
xchg
lahf
cmpsb
lea
sti
ficoml
mov
push
xchg
push
dec
cli
pop
cmp
inc
fstpt
adc
aas
lcall
inc
mov
fsubs
fbld
push
int3
and
and
decb
fcoms
push
sub
jne
mov
pop
lods
mov
icebp
inc
add
xchg
or
stc
jne
scas
mov
cltd
pop
negl
loopne
jno
ret
sbb
or
mov
sbb
cmpsl
lcall
mov
mov
stos
mov
mov
lret
inc
fistl
bound
pop
cli
fcmovnb
sub
jno
sbb
sub
in
xor
mov
jecxz
bound
test
outsb
int3
roll
add
test
mov
ret
insb
shlb
push
mov
sbb
sbb
mov
aaa
testb
push
xor
gs
scas
out
sarb
inc
mov
or
into
cli
jp
test
jns
dec
flds
cmp
mov
or
xchg
shlb
jae
xchg
jp
xchg
addr16
pop
and
adc
pushf
jo
filds
and
xor
xchg
popf
divb
push
mov
orl
adc
cmp
add
sbb
lds
test
pop
in
inc
imulb
jl
pop
and
inc
hlt
aas
cmp
inc
inc
cmpl
lahf
jecxz
mov
loop
loop
jbe
arpl
jno
xchg
sub
fidivs
leave
pop
xor
dec
jl
dec
mov
loop
and
pop
pop
test
jno
add
and
rorb
hlt
int
mov
cmc
and
daa
mov
into
pop
mov
jno
pop
cmc
jle
and
sbb
fisubrl
pop
xchg
pop
mov
adc
bound
push
aaa
xchg
push
adc
jmp
xlat
adc
cmp
lret
xor
and
xor
cmp
jae
and
xchg
jbe
push
sahf
fstp
ja
leave
dec
xor
leave
mov
aaa
cmpsb
sub
in
push
xchg
dec
fistps
sub
cs
aam
pop
leave
jl
iret
aam
inc
add
lock
sub
out
xlat
mov
out
add
jp
ret
dec
loop
subl
outsb
jns
or
cmp
fmull
lret
adc
push
jbe
mov
outsb
aad
dec
movsl
mov
fwait
xchg
jnp
nop
xlat
push
lds
push
mov
xchg
sub
push
je
dec
jg
popa
and
jecxz
push
jb
and
in
inc
sub
lret
pop
or
pop
mov
cmp
xor
clc
in
or
sbb
movsl
das
cmp
fsubrl
in
icebp
fwait
jl
cmp
cmp
pop
mov
push
ljmp
push
movsl
out
cwtl
jg
in
pushf
incb
mov
rorl
mov
sarb
pop
bound
push
fsub
xchg
mov
push
xchg
lahf
add
jo
or
cmp
jns
add
lret
and
sub
push
lret
add
and
inc
shrb
jl
cmp
mov
orl
cwtl
jmp
dec
fstl
loope
pop
push
lods
add
andb
fdiv
inc
popa
xlat
rcrl
or
dec
sbb
stc
xorl
lds
lock
testl
pushf
andb
mov
lods
push
fcoms
mov
mov
sub
dec
and
dec
mov
stos
adc
mov
sbb
iret
add
lock
loopne
cmpsl
xlat
and
xchg
sbb
lock
enter
jno
inc
jno
sbb
pop
repz
out
sub
js
lahf
leave
in
sub
lock
outsl
jne
cmp
rcrb
or
loope
repz
push
xlat
cmp
lock
mov
sti
rclb
icebp
pop
xor
mov
dec
imul
mov
arpl
movsb
aam
scas
or
pop
xor
mov
mov
xor
xchg
sti
into
rorl
mov
cmp
cmp
ret
fs
lahf
bound
push
repz
lahf
jo
inc
sub
cmp
std
sub
cmpsl
and
xor
pop
ja
xor
fisubs
xchg
or
mov
stc
add
shrl
fcompl
adc
sahf
sahf
popf
fsubrl
inc
lods
push
sub
mov
cmp
test
aas
pusha
xor
lds
mul
add
int
sub
out
les
ja
out
ret
rolb
insl
gs
popa
cvtpi2ps
lods
add
lock
ja
aad
addb
jbe
mov
cmp
icebp
and
mov
push
cmp
xor
xchg
xchg
mov
flds
out
mov
lret
icebp
ret
inc
sub
lret
sub
jbe
frstor
scas
adc
push
sbb
cmp
mov
mov
popa
xchg
daa
mov
inc
stos
in
mov
in
add
lret
cmp
cmpsl
repz
popa
data16
xor
mov
mov
adc
repz
ss
jp
mov
sbb
add
and
cmpsb
pushl
fcomps
xor
int
lods
jns
lret
call
enter
cmp
cli
lea
add
push
mov
mov
pop
repz
mov
scas
mov
jnp
imul
shll
out
push
fstl
adc
shr
or
daa
pop
inc
mov
sti
orl
mov
std
sbbl
jl
sti
xchg
inc
xchg
scas
pusha
pop
test
das
push
int
sub
mov
scas
push
add
int
inc
jl
jge
mov
jo
sub
ret
sbb
loope
add
repz
pop
shlb
pushf
pop
dec
andb
out
shll
xor
lret
or
fs
ss
sbb
jae
je
movsb
jl
adc
rcr
jg
ljmp
jp
sbb
lods
mov
rcll
ss
push
jecxz
jl
out
pop
cld
adc
add
pop
test
lds
or
lods
dec
mov
jg
test
push
adc
jns
popa
sub
cmp
mov
rcl
mov
aad
fsubl
jg
dec
popa
rcrb
cmp
adc
fadds
sarb
insb
aad
mov
push
mov
jae
in
pop
std
mov
push
call
mov
lods
out
shrl
out
into
pop
xor
sbb
out
add
dec
out
stc
lcall
push
int
idiv
scas
mov
pop
icebp
les
sub
pop
and
inc
mov
pop
cld
xchg
stos
inc
jae
int
push
xchg
roll
xlat
jle
jno
into
lods
out
xor
mov
aaa
out
jnp
stos
cmp
ss
mov
jb
pop
cmp
cmp
lcall
fcmovb
sbb
dec
addr16
mov
pop
push
pop
and
cmpsl
mov
jns
mov
in
negl
xchg
andb
pushf
cmpl
mov
mov
xchg
dec
and
inc
push
sti
ret
pop
pop
jno
pminsw
xchg
notb
xchg
shll
cltd
dec
popa
adc
xchg
push
jo
js
loopne
xor
ss
in
mov
push
js
loope
and
pop
dec
cltd
testb
add
in
negb
add
lea
popf
movsl
loopne
sti
mov
xchg
lret
xor
sbb
shlb
fistps
stos
cmp
enter
jecxz
push
insb
lcall
xchg
or
push
pop
cmp
push
cmp
repnz
dec
xlat
fistl
push
xor
cli
je
sbb
nop
push
push
mov
roll
inc
lahf
mov
mov
adc
insl
lods
iret
mov
int
aad
addr16
push
fcmovbe
fadds
ss
or
inc
sbb
out
dec
out
repnz
xor
daa
leave
inc
test
cmp
fldcw
mov
adc
pop
mov
rorb
inc
call
daa
xor
add
and
icebp
sbb
test
roll
jle
cmp
dec
xchg
adc
jo
ret
push
cmp
incb
mov
mov
std
es
test
mov
movsl
jno
push
scas
les
lret
stos
cmp
mov
inc
sbb
lahf
add
arpl
inc
jg
mov
dec
jae
xchg
or
xchg
cltd
int
sbb
push
and
icebp
jno
add
xchg
dec
roll
jmp
out
cli
push
pop
outsl
adc
mov
scas
pop
aam
in
add
mov
dec
es
dec
sbb
test
lock
pop
xor
scas
add
les
xchg
les
adc
lahf
and
mov
fbstp
jno
orl
shr
notl
ljmp
js
in
lea
push
stos
mov
lea
cld
insb
test
sub
int
call
and
xor
int3
leave
jne
jge
jno
mov
xor
faddl
lcall
mov
xchg
jg
fst
adc
jl
sbb
add
dec
mulps
subl
clc
jnp
insb
test
adc
push
mov
mov
rorl
fdivrs
adc
jg
ret
or
popa
imul
dec
das
xchg
xor
outsl
mov
push
in
call
mov
cmp
into
push
mov
out
mov
insl
cmpsl
cmpsl
sub
dec
outsl
fisttpl
jg
sub
aam
fcompl
fmull
dec
push
popa
mov
push
je
addr16
push
xchg
fcoml
test
scas
scas
sarb
ljmp
xor
and
mov
or
mov
shl
out
inc
leave
je
hlt
enter
jg
test
pop
inc
xchg
cmp
add
pushf
mov
stos
popa
mov
packuswb
adcb
or
xchg
xchg
push
fs
fnstenv
cld
or
iret
pop
and
mov
lods
sub
mov
fwait
ljmp
data16
std
push
jp
repz
dec
lea
inc
adc
call
jmp
mulb
fistpl
imul
dec
lahf
sub
mov
lods
xchg
fs
adc
popa
ret
lcall
mov
push
jns
cli
andl
sub
and
imul
out
fldcw
int3
das
je
jecxz
mov
jb
cmp
fadds
pop
insb
mov
sub
adc
in
dec
in
repz
mov
push
xchg
dec
stos
jp
xor
push
lods
es
in
sub
and
jbe
sub
pop
ljmp
sbb
xchg
in
aaa
add
jg
sub
pop
test
test
add
repz
testb
insl
xchg
pusha
add
cmp
rolb
mov
xlat
mov
jp
mov
pop
fiaddl
adc
sub
sbb
xlat
cwtl
xor
inc
out
cli
not
test
cmp
and
push
adcb
stos
push
xor
sbb
dec
xchg
and
clc
mov
gs
sub
outsb
js
pop
push
daa
jnp
inc
loopne
pusha
imul
jbe
test
push
and
mov
sahf
sub
adc
add
jno
hlt
adc
addr16
movsb
sbb
enter
into
xlat
das
adcb
jns
mov
repnz
loopne,pt
imul
jmp
mov
push
scas
cmp
cmpsb
jbe
jecxz
cmp
lods
and
mov
data16
es
imul
fs
aas
add
rcrl
inc
add
pop
aad
addw
mov
fs
inc
cltd
pop
lods
cltd
adc
jb
and
or
sub
hlt
cld
and
daa
ja
push
adc
lea
sbb
outsb
cmp
pop
mov
adc
sbbb
and
lahf
hlt
or
in
push
dec
dec
cmpsb
repz
push
ljmp
xor
cwtl
push
ret
jg
xor
fs
pop
in
ss
in
mov
cmpsl
xor
lahf
daa
data16
dec
sbb
scas
lcall
cmp
push
jl
jae
scas
xchg
mov
push
cmpsb
adc
push
inc
mov
iret
push
push
testl
xor
pop
fnstsw
popa
aas
filds
mov
xor
jnp
xchg
jne
data16
cmpsl
jecxz
mov
and
inc
push
aam
push
test
and
insb
aam
clc
jmp
paddw
push
out
dec
mov
jo
inc
ja
lahf
fwait
stc
frstor
sub
or
xchg
sub
call
cltd
mov
gs
out
mov
dec
data16
cli
in
lahf
mov
cmc
mov
repz
jl
xor
les
fcoms
xchg
cmp
jg
cmp
push
dec
mov
jmp
addl
cmpsl
sub
or
cli
push
adc
dec
ljmp
mov
rorb
cmpsb
lret
das
repnz
ljmp
in
test
inc
test
pushf
cmp
cmpsl
movsl
scas
jg
inc
sub
cs
fidivs
xchg
dec
lea
fiaddl
dec
daa
cmp
xor
jbe
ljmp
inc
fisttpll
jg
cmpl
scas
mov
sahf
jo
pop
fsubl
out
lret
dec
fdivrp
sbb
sub
and
lock
cld
or
fxch
jecxz
test
ficoml
lock
iret
xchg
jno
lret
leave
cmpsb
mov
push
cmc
cmpsl
jbe
in
inc
movsb
ljmp
add
ljmp
xor
cmp
add
pop
jbe
fmull
xchg
scas
sbb
xchg
dec
pushf
stc
cmpsb
sbb
mov
mov
cld
bound
std
xor
fs
mov
test
push
xchg
pop
inc
fucomip
lods
jl
mov
jne
leave
add
cltd
lds
pusha
lcall
ja
in
outsb
dec
mov
inc
adc
pop
cmp
jp
rolb
push
cs
pop
push
movsb
ret
cmp
push
pop
xchg
dec
xchg
sbb
push
jle
cmpl
and
outsb
sub
xchg
pop
jbe,pt
das
pop
in
mov
stc
cmp
nop
sub
mov
lret
daa
enter
imul
sub
sbb
jecxz
out
mov
mov
shl
icebp
lahf
repz
and
cmc
cli
test
das
pop
mov
xchg
sub
adc
gs
sub
cltd
mov
imul
inc
sub
inc
mov
push
gs
popf
dec
jg
adc
lcall
cmp
mov
mov
mov
mov
push
add
out
sub
leave
fisubrs
test
sub
xlat
imul
repz
jns
repnz
push
inc
imul
xlat
into
sub
je
popf
mov
push
pushf
push
mov
jo
inc
ds
xchg
addl
rep
ljmp
in
sbb
fsts
sbb
rcl
fadds
push
arpl
in
adcl
adc
pop
jns
mov
xchg
pop
stos
xchg
inc
mov
mov
push
push
outsb
jmp
xor
enter
fwait
mov
mov
in
loope
pop
mov
insb
add
test
mov
inc
push
add
pop
xchg
adc
cmc
adc
les
jno
test
or
stos
test
pop
adc
bnd
fcoms
lcall
lea
fdiv
jge,pn
xlat
jne
pop
inc
jbe
fs
jmp
fdivrs
xor
mov
inc
shl
xchg
cmp
stos
push
jae
xchg
mov
push
in
repnz
mov
data16
fsubr
or
rclb
jecxz
push
js
sbb
or
into
cmc
call
lret
cmpsl
insb
sub
xor
mov
lahf
adc
daa
iret
cwtl
adc
rcll
adc
faddl
jge
pop
lock
adc
push
movswl
int3
dec
test
xor
loop
aas
mov
mov
adc
loope
mov
fnsave
pop
int3
adc
out
movl
fstpt
push
cld
bound
push
cwtl
out
xchg
jbe
mov
jns
out
insb
sub
outsl
add
mov
icebp
xchg
sub
push
cmp
xchg
and
das
fwait
fs
jge
aas
adc
das
repnz
stos
wrmsr
rolb
xchg
push
idiv
fs
xchg
pushf
adcb
xor
lret
mov
mov
adc
mov
xchg
fdiv
out
and
out
cmp
icebp
adc
sbb
lea
mov
adc
lds
xor
mov
insb
mov
jecxz
mov
pop
dec
loop
bswap
outsl
std
out
jle
mov
out
imul
xchg
stos
lcall
leave
or
sub
inc
dec
mov
xchg
sub
fistpll
adc
pushf
mov
shrl
rorb
pop
cmpsb
lahf
movsb
stos
add
ljmp
mov
mov
stc
sbb
jge
push
mov
jo
xor
adc
imul
jecxz
jnp
out
add
xor
nop
movsl
sub
or
cwtl
inc
xchg
jb
pop
notl
or
mov
xchg
cmp
pusha
pushf
insb
ds
lds
jmp
jns
sub
xchg
or
and
cld
mov
repnz
jg
jo
inc
sti
or
jns
andl
sbb
sti
cltd
add
lret
mov
imulb
adc
sub
jns
ret
and
jnp
insb
pop
testb
inc
movb
and
dec
inc
inc
dec
inc
dec
insb
push
dec
mov
fidivs
imul
xchg
jl
xor
mov
fbstp
lret
stos
lret
enter
and
mov
cmp
push
mov
sarl
xor
xor
sub
push
lods
xor
popa
push
add
mov
sti
mov
dec
mov
push
cmpsl
fsts
xor
cmovle
out
push
fadds
outsl
mov
fisubl
jp
inc
jns
dec
push
dec
dec
out
int3
add
loope
in
in
xchg
adc
in
xchg
loopne
popa
daa
xchg
loopne
xchg
xlat
out
jp
sbb
neg
test
lods
xchg
fcompl
add
xchg
mov
rep
lea
and
xlat
fimull
faddl
dec
xor
dec
sbb
or
ret
call
sbb
daa
daa
pop
or
add
shll
push
stc
fnstcw
int
movsb
test
std
jp
test
orb
and
jns
repz
jo
int3
in
je
push
dec
add
dec
or
daa
call
dec
cld
or
mov
xchg
in
xchg
add
incb
addb
stos
dec
cmc
push
xor
bound
ja
mov
cmovs
push
push
cmpsl
or
push
sbb
push
outsb
sbb
mov
loop
mov
movsl
arpl
sub
stos
jge
adc
ds
pop
jmp
or
mov
dec
adc
adcl
mov
jl
aam
add
es
xor
jl
cwtl
cwtl
add
iret
int3
les
mov
add
fmul
sbbl
sbb
sarl
repz
cmp
push
divb
in
mov
xor
lret
xor
add
dec
inc
lds
add
mov
mov
data16
imull
cld
sub
add
gs
mov
pop
xor
movsb
dec
lahf
cs
test
dec
pop
xchg
movsl
mov
inc
push
inc
out
jmp
lds
fiadds
xchg
jmp
cmp
and
scas
or
push
push
mov
mov
and
inc
test
cmp
inc
insl
jg
lret
xorb
cmp
dec
sub
dec
js
jne
imul
es
jecxz
mov
lret
or
dec
leave
xchg
xchg
jl
sarl
ljmp
test
mov
stos
sbbb
inc
jbe
sbb
leave
jp
lods
sbb
push
fmuls
out
add
loope
push
movsb
pop
and
cwtl
aas
lahf
mov
sub
in
xor
sub
mov
rcl
mov
jle
mov
push
mov
xor
add
fldt
out
pop
shr
out
icebp
push
ds
aad
lcall
or
movsb
xor
mov
push
scas
pop
sbb
int3
xor
call
stos
fadds
pop
mov
and
pop
xchg
push
dec
daa
inc
adc
shr
xor
push
leave
ret
adc
mov
sbb
inc
mov
push
xchg
clc
mov
and
movsl
mov
mov
jno
jge
das
push
test
pop
xor
and
or
sbb
or
cmc
mov
push
dec
insb
stos
shll
push
or
lock
ret
cmpsb
cmp
cmp
fadds
inc
stos
add
push
les
inc
mov
jl
adc
cmp
dec
cmpsl
repnz
mov
xchg
dec
adcb
cmp
mov
fadds
dec
pop
aaa
mov
mov
cmc
pop
mov
bound
addr16
data16
divb
sbb
push
xchg
movsb
imul
sbb
sarb
inc
push
xchg
cmpsl
mov
jb
imul
iret
mulb
push
imul
and
lret
into
stos
cmp
sbb
fs
sub
xchg
and
mov
int3
pop
iret
or
cmp
add
popf
xor
jae,pt
gs
inc
xchg
xchg
push
sub
sub
fnstcw
adc
mov
mov
inc
sahf
mov
es
sbb
push
leave
and
pop
loop
rcl
sub
inc
push
cmpsl
stos
imul
sub
mov
test
or
and
pop
mov
decb
add
xchg
sub
repz
pusha
hlt
scas
cmp
inc
inc
or
sahf
jae
xor
adc
pop
leave
imul
cmpb
fcomps
lock
xchg
fnstsw
jl
jp
int
popf
cmp
push
push
mov
repnz
adc
and
outsb
xor
xchg
cmpsb
jae
ficomps
in
add
cmc
aaa
test
jg
push
pushl
or
fistpl
arpl
add
and
or
push
add
and
lds
mov
cmpsb
pop
push
lds
xor
inc
lea
stos
fisubl
jg
add
imul
loop
adc
repnz
or
mov
enter
mov
jg,pn
movsb
int3
jecxz
jg
sbb
scas
pop
lds
hlt
out
mov
add
lods
xchg
fwait
cld
inc
sahf
and
cs
dec
inc
jnp
pop
xchg
pop
cld
clc
ficoml
push
outsb
and
pushf
xchg
adc
push
das
inc
cwtl
mov
pushf
add
push
out
ffree
or
andl
jge
push
imul
mov
cmpsl
movsl
jmp
push
loop
pop
xorb
fadds
popa
dec
or
or
or
jnp
or
and
jns
cmpsb
sub
cmp
lret
sbb
icebp
sbb
mov
fnstcw
or
outsl
ds
mov
mov
or
lds
outsb
xlat
jnp
sahf
out
mov
in
mov
stos
inc
outsl
sub
xchg
or
adc
mov
mov
imul
mov
adc
fwait
cs
mov
mov
jnp
pop
lcall
adc
or
sub
pop
and
out
shll
lds
mov
cmc
jmp
arpl
xlat
push
sub
cmc
fsubrs
cmc
inc
jge
insb
jg
dec
stc
fwait
pop
out
not
xor
and
mov
movsb
lcall
testb
fldenv
lret
shll
mov
insl
mov
mov
push
pusha
aaa
inc
or
adc
cmpsl
xchg
outsb
lcall
cs
lock
inc
dec
pop
dec
repz
ljmp
popa
loopne
cli
andb
je
pop
insb
enter
push
aas
div
insb
movsb
je
cmp
push
sbb
lret
mov
xchg
rcll
out
xor
cmp
push
and
add
ret
inc
mov
xor
into
test
enter
sub
pushf
and
outsl
and
loop
xor
cmpsl
into
mov
xor
adc
fistpl
arpl
sbb
adc
mov
movsl
pop
cmp
addr16
jle
rclb
and
or
sub
scas
push
popa
lods
clc
cld
jp
push
outsb
push
pop
xor
outsb
sbb
sbb
mov
out
pop
jo
scas
jp
fs
sub
icebp
cmp
int3
js
xor
aas
jo
arpl
mov
jb
ret
cmp
repnz
xchg
dec
pop
mov
rorb
mov
sahf
pusha
fnstcw
das
sbb
mov
jle
repz
sub
lea
aad
lds
xchg
imul
cmp
popf
cmp
mov
cmp
sub
mov
mov
fistpl
mov
jns
or
int
and
push
add
xchg
adc
clc
jecxz
fs
ljmp
push
or
subb
roll
pop
pop
push
mov
jmp
rolb
xchg
or
jae
xchg
mov
fldl
imul
cmp
pop
outsl
mov
test
dec
pop
inc
sbb
stos
in
call
jmp
jns
lds
mov
add
call
arpl
mov
subl
lret
outsl
and
test
lea
jo
shll
inc
movsl
add
ja
and
adc
mov
cmc
out
mov
iret
aam
sti
sarb
push
lahf
fsubs
adc
pushf
sub
in
pop
jnp
lods
push
movsb
xlat
cmpb
ja
sbb
adc
and
insl
push
cmp
outsb
je
ds
rclb
enter
pushf
inc
sub
xchg
cmpsl
rcrl
shr
xorl
mov
add
pushf
cmp
rolb
mov
pop
cmp
sbb
hlt
pop
pop
rclb
repnz
pusha
leave
out
imul
pop
mov
add
std
dec
shld
mov
incb
adc
jnp
push
add
and
sbb
out
cmpsl
jne
dec
fcoml
jle
xchg
pop
jne
push
or
mov
xor
adc
movsl
dec
xor
stos
cmpsb
mov
lret
pop
push
inc
mov
inc
xor
add
add
cmpsb
addr16
xchg
leavew
ja
hlt
dec
pop
scas
cmp
les
shll
xlat
adc
imul
fldenv
int3
das
cwtl
rcrb
jnp
pop
or
or
test
mov
push
cmc
lods
push
shrb
xor
pop
jb
lret
pop
mov
push
xchg
mov
pop
jle
inc
xor
and
dec
adc
test
xchg
jnp
stos
inc
and
push
call
ret
dec
mov
jae
aam
out
lods
dec
push
sti
loop
ficomps
pop
insl
adc
idivb
aaa
dec
mov
inc
lret
mov
inc
insb
out
fwait
mov
fsubrl
lods
int
add
shll
cs
dec
jne
adc
outsl
test
or
ja
pop
mov
cmp
mov
in
mov
lock
and
mov
cmp
sub
mov
dec
mov
adc
nop
inc
cmp
faddp
cmp
test
and
pop
push
fildl
and
sbb
ja
mul
ret
mov
popa
subl
and
push
pop
repnz
bound
fdivrp
and
fs
xchg
or
sub
lret
xor
pop
xchg
push
gs
xchg
sub
adc
pop
jge
push
leave
fstl
or
or
xlat
roll
xor
jmp
push
fiaddl
aaa
add
insb
movsl
rclb
xchg
out
js
jbe
in
shl
insl
shll
xor
lock
hlt
jns
lcall
fs
xchg
mov
mov
xorb
adc
loop,pt
mov
cltd
dec
and
pop
dec
xchg
hlt
jae
pop
sbb
push
sub
add
inc
lock
in
out
xor
dec
filds
repz
scas
stos
lret
nop
fwait
out
roll
test
pop
sub
xchg
xchg
es
pop
sbb
jns
lock
movsl
gs
push
mov
jne
jmp
push
fisubrl
xchg
dec
jmp
imul
mov
mov
adc
and
mov
jl
sbbl
jp,pn
xor
xchg
xlat
scas
jb
pushl
push
push
pop
int
loopne
add
push
sub
xor
xchg
adc
fildl
pop
ljmp
lods
xchg
loope
or
das
mov
nop
mov
ljmp
sub
lea
cltd
lret
jns
in
dec
and
js
ljmp
shll
xchg
nop
mov
hlt
dec
sub
lcall
in
or
cwtl
xchg
and
les
mov
hlt
mov
mov
mov
mov
icebp
jno
xchg
js
jg
xchg
and
mov
andl
hlt
mov
jle
dec
ret
add
inc
ret
cmp
xorl
and
ss
insl
xchg
jns
and
or
xchg
cmp
xchg
dec
or
out
dec
je
sub
dec
adc
lock
test
daa
xor
out
sbb
ds
dec
xchg
arpl
sbb
scas
insl
stos
sub
lahf
sub
sub
nop
inc
mov
clc
mov
sub
cmc
xlat
pop
xor
testb
cmp
ja
xchg
mov
mov
stos
insl
xlat
lods
aaa
clc
add
xorl
inc
movsl
dec
xchg
jnp
mov
cmc
cmp
inc
lods
test
cmp
mov
shl
cmp
fisubs
dec
xchg
cmp
dec
loope
dec
ss
repz
cmp
nop
xchg
jmp
or
and
push
sub
outsl
xchg
outsb
leave
sbb
cmpl
pop
cmpb
mov
aad
shlb
or
cmp
shrl
cld
pusha
cmp
push
sahf
mov
jne
test
les
arpl
mov
inc
outsl
fs
in
cs
ret
filds
pop
mov
dec
sarl
xchg
mov
push
dec
mov
mov
dec
xorb
push
xor
jmp
shl
stos
pop
mov
ja
cwtl
add
clc
xchg
stos
or
xor
mov
or
mov
ss
ffreep
daa
push
rolb
loop
xchg
std
leave
decb
sbb
jno
jge
out
sbb
mov
aas
push
add
cmp
and
sub
and
inc
mov
mov
cmpsl
popf
dec
in
pop
sbb
aas
sahf
dec
lret
jp
lret
lcall
repnz
aad
cmpsb
adc
daa
push
mov
xor
xchg
dec
add
scas
shr
dec
push
fisttpl
sbb
inc
push
lret
mov
test
aaa
sahf
pop
mov
dec
out
sub
or
jge
jge
lea
imul
cmp
dec
push
jg
rolb
lea
andb
insl
inc
fsubl
pop
lcall
xchg
xchg
aaa
xor
imul
cmc
sti
cmc
cmp
les
and
adc
lods
xchg
aad
sbb
sbb
push
fisubrs
aas
push
es
int
lds
daa
test
cmpl
add
dec
sbb
adc
and
fcmovnbe
lds
lock
and
mov
std
mov
mov
lods
xchg
cmp
adc
sbb
xchg
mov
call
mov
das
lret
mov
add
or
out
aaa
orb
mov
ljmp
sub
adc
lods
add
jge
bnd
loop
daa
rcl
jg
jno
cmc
cmp
push
push
pop
test
pusha
dec
sbb
dec
push
loope
sbb
push
lock
mov
ret
lahf
jecxz
rcrb
and
jbe
test
das
stc
jae
xor
addb
insb
add
xor
pop
or
repnz
adc
sbbl
js
inc
push
cmp
call
fimuls
cmc
mov
inc
icebp
hlt
mov
xlat
xchg
pushf
inc
sahf
adc
ljmp
insl
xor
mov
pusha
ds
add
clc
test
sub
lods
out
cs
orl
scas
addr16
sub
push
mov
int
cltd
scas
and
std
sbb
cmp
ljmp
sbb
stos
sub
int3
or
sbbb
int
adc
ss
andl
andl
je
dec
cmp
jg
dec
jecxz
mov
jmp
nop
dec
jns
cmc
mov
inc
cmpsb
mov
lods
mov
sbbb
dec
sti
pop
fdivl
movsb
jbe
fadd
sub
xor
mov
mov
data16
inc
movsb
dec
mov
push
mov
mov
cwtl
ds
test
sar
ret
addr16
sub
xchg
add
pusha
stos
push
pop
push
pop
and
cmp
dec
fnstenv
loope
ss
pop
icebp
dec
in
dec
dec
cmp
nop
xlat
enter
call
int3
lods
jp
xchg
pop
out
sbbb
dec
out
jno
rcr
inc
sbb
into
push
enter
mov
sub
adc
pop
repnz
popf
inc
fildl
aas
das
iret
adc
pop
push
push
jae,pt
jnp
stos
repz
ljmp
test
jo
das
gs
or
rol
stc
fmull
add
sbb
jl
push
push
ret
aam
sub
push
or
sbb
jmp
icebp
leave
aas
leave
imul
add
in
shlb
push
rorl
repz
faddl
mov
lea
jne
lcall
push
cli
mov
ja
pop
pop
sbb
dec
lret
and
sbb
xor
xlat
inc
jo
adc
call
lret
pop
dec
insl
push
sbb
cmpl
movsl
gs
mov
jge
xchg
pop
test
pop
arpl
shll
imul
push
mov
mov
xchg
jp
jg
or
and
popl
out
xchg
mov
and
inc
sbb
and
test
out
idivb
aad
std
cmpsl
inc
cmp
jmp
mov
mov
out
test
mov
mov
push
sub
cld
leave
add
mov
aaa
mov
js
in
add
mov
push
mov
and
js
pop
adc
and
outsl
inc
jmp
add
aam
popa
dec
insl
js
fs
jb
xchg
jp
pop
dec
cli
jg
cmp
addr16
mov
cmpsb
das
cmp
adc
push
push
pop
and
aad
jge
add
mov
cmp
mov
xchg
ja
in
aas
dec
ss
daa
push
lret
xchg
xlat
cmp
mov
adc
sbb
push
xacquire
inc
cmpsb
loopne
sub
sarb
and
jl
mov
fs
dec
scas
popa
into
es
int
repz
adc
scas
dec
rcrb
test
fstpl
movsl
loop
mov
jl
filds
push
subl
push
mov
mov
mov
mov
mov
jle
bswap
cmp
cwtl
jg
pop
bound
pusha
pop
fildll
fxch
cld
mov
mov
test
pop
ds
pop
arpl
ror
fs
adc
mov
mov
clc
imul
cltd
jp
mov
data16
cs
sbb
lods
mov
cmp
dec
mov
push
ja
inc
cmp
mov
xor
outsl
stos
xlat
pop
add
add
xchg
cmp
inc
mov
div
jne
push
lea
push
mov
loope
icebp
std
inc
pusha
mov
jns
insl
js
in
xchg
fs
add
inc
loopne
out
jbe
xor
adc
and
and
dec
push
push
out
cld
mov
pop
fists
lahf
fxch
aaa
lock
sahf
push
rcll
and
int
or
in
xchg
imulb
scas
sbb
jne
das
mov
das
scas
divb
mov
inc
sub
lods
aad
xchg
in
fisttpll
xchg
test
andb
ss
dec
adc
jb
out
pushf
dec
ret
push
pop
cwtl
inc
mov
icebp
js
int
jp
lret
ret
in
jnp
les
inc
add
sbb
cs
movsl
aad
data16
icebp
and
fiaddl
lods
dec
iret
lock
mov
or
out
mov
mov
loop
adc
adc
inc
xor
jno
rolb
jp
mov
or
xor
cs
inc
push
pop
jl
fildll
or
push
cs
mov
and
pop
sub
imul
push
test
dec
and
lcall
sbb
aad
dec
mov
and
xor
subl
xchg
add
inc
and
stos
test
les
out
loop
js
push
add
dec
adc
xchg
imul
cs
mov
xor
icebp
xor
in
sbb
add
inc
dec
jbe
dec
jecxz
push
push
pop
popa
mov
in
jg
mov
mov
inc
insb
mov
sub
lock
addr16
pop
inc
pop
lods
aaa
sbb
push
adc
repnz
lds
sbb
pop
test
mov
push
push
lods
movsl
inc
push
inc
stc
adc
inc
jae
or
or
and
loope
mov
lods
adc
push
adc
lcall
dec
mov
jnp
push
jmp
ds
mov
and
das
mov
push
fwait
mov
stos
cmpb
push
cwtl
xchg
mov
iret
and
mov
mov
pop
movb
test
addr16
push
lods
xor
fnsave
mov
iret
jb
js
js
stos
out
sbb
mov
xor
cmp
mov
pop
xchg
insb
fisubl
mov
sub
les
iret
int3
fidivrl
push
pop
xchg
mov
pop
test
pop
fnstenv
mov
daa
rcrl
pusha
xor
cmp
rcll
shll
insl
mov
xchg
scas
adc
mov
fbld
nop
mov
inc
mov
cs
test
in
xor
mov
test
mov
popf
sbb
cmc
jg
and
add
and
jl
cmp
mov
cli
repnz
push
adc
pop
imul
cwtl
and
inc
shrb
add
jb
jae
and
mov
jle
mov
mov
jl
movsl
sbb
sbb
mov
or
aad
mov
xlat
inc
es
inc
pop
jp
xchg
inc
lods
sbb
or
mov
dec
or
cmpsl
push
mov
les
not
xor
add
xor
xchg
sub
xor
pop
cltd
dec
rolb
push
jo
inc
push
shr
fldenv
pop
push
push
push
xor
xor
dec
shrb
out
les
loope
pop
mov
nop
cwtl
data16
push
lret
dec
pusha
ja
xchg
mov
scas
or
adc
sbb
push
shl
test
insl
jno
mov
les
xchg
mov
and
sahf
xlat
pop
xchg
jge
jb
fs
and
repz
add
sbb
add
adc
out
pushl
mov
or
add
jb
push
mov
sahf
mov
nop
adc
bound
les
fisttpl
mov
gs
aaa
das
pusha
rcr
icebp
push
repnz
mov
mov
fs
jge
adc
mov
cmp
jae
jnp
cld
sub
test
rcr
movsl
and
add
pop
push
or
xlat
ror
and
inc
cltd
mov
test
xchg
arpl
lret
xchg
inc
out
sbb
sub
repz
loopne
mov
jne
lods
jnp
leave
mov
loope
push
add
ret
adc
mov
xor
hlt
adc
fbstp
and
adc
loopne
dec
iret
bswap
cmp
sbbb
pop
cmpsl
adc
pop
cli
rcrb
pusha
shr
xchg
mov
add
jnp
or
sub
cmpsl
xchg
in
stos
test
mov
out
sbb
xchg
push
cmpsl
cmp
cmp
out
cmp
jmp
mov
xor
adcb
cmp
repz
sub
pop
add
cwtl
test
pop
imulb
fstps
ljmp
cmpsb
or
inc
int3
xchg
ss
push
scas
and
sub
push
ret
cmp
lock
lret
std
or
loopne
adc
imull
ds
jle
out
and
fdivrl
cwtl
cmpsb
mov
aas
cmpsb
aam
jg
cmp
rcll
sbb
cmp
aad
jl
adc
or
sahf
xchg
xchg
sub
xor
aam
les
lock
cmp
in
mov
dec
cli
cmpsb
mov
fcomps
int
dec
mov
cmpb
mov
sub
outsb
cmpsl
xchg
in
mov
pop
cs
loopne
adc
push
lret
loopne
mov
add
scas
dec
cmp
jo
xor
cmp
fildl
adc
pusha
ret
movsb
aaa
incl
adc
mov
dec
shrl
push
jle
add
xchg
lret
sub
add
fs
xchg
jg
pop
pop
add
pushf
pop
inc
cmp
imul
sub
jmp
out
icebp
out
inc
je
in
adc
aas
mov
dec
pop
push
and
adc
pop
clc
mov
add
in
fistps
and
loope
mov
pop
imul
mov
outsl
mov
xchg
xor
inc
mov
push
xor
pop
out
lods
jmp
jno
dec
imul
stc
movsl
mov
fnsave
je
and
jno,pt
add
pop
mov
adc
mov
flds
out
lock
dec
aam
add
push
inc
out
loope
adc
adc
xchg
mov
std
xchg
jecxz
aam
push
add
inc
push
pop
mov
inc
pop
pop
fdivrs
inc
je
jge
insb
aad
shlb
mov
xchg
mov
jae
lods
popa
int
and
cs
fmull
cmc
je
jmp
stos
je
iret
icebp
out
repz
xchg
mov
mov
es
cs
xchg
mov
loop
subb
addl
insb
xor
subl
xchg
aad
and
jns
xor
dec
xor
addr16
xchg
jecxz
insb
popf
lahf
cmc
out
das
ja
mov
addr16
and
xchg
les
push
adc
push
movsb
cmp
fcomi
inc
pop
mov
mov
xor
scas
imul
daa
xor
fidivl
pop
and
lods
xchg
mov
int
mov
jge
mov
push
push
push
push
push
adc
xor
mull
ret
cmpsl
cltd
lret
mov
sub
xchg
pop
or
mov
outsl
pusha
std
fsubl
hlt
pop
and
cmc
pop
rcrl
ljmp
dec
sarb
lods
mov
ret
and
dec
xor
lret
pcmpgtd
repnz
test
pop
stos
shrb
das
inc
inc
sti
jmp
aad
or
xchg
jg
adc
daa
movsb
cmp
push
xchg
and
lret
jmp
xchg
leave
scas
aas
repnz
dec
jnp
shlb
push
and
mov
hlt
call
pop
ss
ljmp
inc
push
sbb
add
jb
stos
mov
shrb
mov
test
fwait
bound
pop
push
out
dec
filds
in
jg
sbb
adc
mov
out
add
in
mov
jmp
movsl
push
fwait
adc
xorb
inc
xchg
push
das
aas
fwait
das
mov
and
fsts
cmp
or
xchg
lods
lods
stos
cmp
xchg
or
in
notl
cwtl
and
pop
cmp
pop
xchg
ds
sbb
lret
pop
jb
mov
adc
dec
mov
icebp
inc
inc
jecxz
cmp
ds
cmc
sahf
xchg
sarl
jmp
insb
cmp
aas
scas
cmp
fistl
arpl
mov
add
cmpsl
rcrb
es
stc
push
cwtl
mov
mov
push
leave
pop
xchg
inc
sti
mov
ds
pop
and
or
mov
out
imul
pop
xchg
ljmp
push
cld
aad
cmpsb
stos
and
dec
push
adc
movl
mov
push
ret
cld
test
std
jmp
out
lds
pop
push
out
mov
icebp
movsb
rclb
and
or
fwait
pop
outsl
add
push
add
dec
insb
jne
mov
rorb
repnz
and
loopne
cmp
orl
loop
sbbb
inc
pop
jmp
sahf
pop
js
or
mov
or
cmp
cmpsl
sbb
insl
lret
ret
outsb
out
push
pop
or
jg
inc
mov
cmp
dec
mov
jb
in
and
xor
jns
xor
adc
shlb
scas
add
mov
fsubs
shr
fldcw
jmp
push
and
pop
or
aaa
das
jo
add
xor
out
in
mov
add
cmpl
lds
and
fsubs
outsl
xchg
lcall
xchg
sub
mov
popa
xor
fwait
xchg
popf
xchg
mull
jl
pop
cmc
push
fldenvs
enter
sbb
pop
aas
movsl
iret
or
imull
jbe
mov
inc
dec
mov
mov
daa
out
es
repnz
es
loope
lds
lret
inc
cs
cmpsb
mov
pop
ds
dec
adc
pusha
inc
mov
fsubr
fs
pop
sar
sbb
cmpb
pop
inc
adc
push
sti
jp
ss
cmp
scas
aaa
jg
add
fdivrp
jp
xchg
mov
mov
shll
lcall
cmpl
or
jge
jns
push
cmp
imul
out
jne
aad
addr16
out
in
add
sub
jb
adc
xor
jecxz
fimull
push
std
inc
and
insl
push
dec
xchg
xchg
loope
xor
xchg
aaa
sbb
sub
int3
jl
push
jae
loope
xchg
pop
pop
out
sub
ds
mov
cltd
push
jno
outsl
mov
mov
sbb
f2xm1
sub
xor
sub
data16
pop
scas
mov
das
je
inc
clc
sub
mov
out
pop
outsb
cltd
out
jbe
pushf
jg
inc
xor
dec
lcall
dec
adc
mov
add
adc
aas
sbb
stc
jae
mov
cli
add
sbb
nop
sub
or
xor
jmp
or
mov
cmp
xchg
pop
call
fidivs
es
sbb
gs
jno
mov
or
mov
sub
or
jmp
cmp
push
dec
or
mov
mov
jno
cmp
int3
lret
es
mov
scas
cs
and
xchg
cmp
mov
or
ret
sub
xchg
mov
adc
mov
movsb
and
sbb
add
and
xlat
dec
mov
xchg
in
cs
cmpb
rcll
inc
fmull
call
pop
popf
xchg
mov
mulb
jmp
insb
jmp
xchg
cmpsb
outsb
and
pop
adc
mov
and
iret
mov
mov
je
arpl
and
mov
pusha
sbb
dec
das
imul
mov
rclb
sub
mov
rcll
orb
ret
int3
ror
xchg
sub
inc
cmp
push
cmp
lcall
and
cmp
bound
pop
lock
lods
std
fs
mov
cwtl
mov
repz
scas
test
xor
lahf
ja
les
scas
aas
jnp
mov
mov
jbe
mov
jae
sub
outsb
loopne
xor
add
push
add
or
cltd
imul
cmpsl
loop
aas
xchg
pop
sub
mov
lea
cmc
ja
mov
and
push
mov
push
mov
fsubrs
rcl
or
xor
test
adcl
push
and
inc
nop
enter
xor
dec
sub
sub
mov
pop
inc
sti
cmp
adc
mov
sub
xchg
jnp
lcall
cmpsl
daa
test
mov
mov
cwtl
or
loopne
jmp
pop
mov
sub
add
shll
addr16
stos
lret
std
mov
inc
mov
lret
cli
cs
shr
sub
jb
sub
jl
sub
and
rclb
lcall
jmp
mov
pop
cwtl
cli
cmpsl
cld
lds
cmc
gs
inc
jbe
or
outsl
stc
testb
inc
add
or
test
ss
in
fsubrs
ljmp
popf
cmp
sbb
mov
roll
lcall
jnp
ret
mov
push
ficoms
pop
jnp
push
dec
adc
add
leave
cmpsb
lock
cmpsb
shrl
and
dec
lret
adc
jmp
lods
xor
mov
and
and
lret
movsb
mov
add
pusha
inc
and
lret
aad
cltd
imul
scas
pop
test
pusha
test
lods
inc
inc
pop
lahf
xchg
shrl
mov
sahf
jns
inc
cmp
lret
and
sub
mov
sbb
sbb
and
dec
push
in
jns
adc
jge
push
dec
push
push
pusha
xchg
shrb
scas
jg
es
jbe
dec
cmpsl
add
int3
fptan
cltd
inc
or
push
fs
jns
arpl
and
aaa
movsb
jecxz
mov
xor
mov
bound
pop
jo
jne
mov
nop
inc
sarb
andb
stos
xor
lret
lahf
dec
pushf
jge
lcall
je
xchg
fcoms
loop
fisubrl
movsb
dec
rorb
stc
sub
bound
call
xchg
bsf
aas
divl
mov
rcrl
jecxz
dec
pop
push
push
lret
push
daa
leave
in
call
push
xor
inc
roll
insl
lock
adc
xor
fwait
or
and
mov
inc
cli
xor
in
fisubrl
addl
jg
outsl
push
xchg
push
sub
mov
inc
xor
in
adc
pop
test
aaa
jns
lret
dec
je
mov
repz
fnstenv
mov
mov
insl
cs
add
sbb
movsb
lock
shrl
sbb
cs
adc
out
icebp
xlat
arpl
push
movsl
cwtl
add
nop
lea
cmp
loope
cmp
cli
pop
insb
push
and
lret
out
push
inc
cmp
imul
pop
mov
sub
loop
inc
inc
xchg
hlt
movsb
mov
aam
fwait
mov
idivb
mov
push
and
and
int3
inc
sub
out
fidivl
and
cmp
push
cmp
jecxz
cld
repnz
jnp
mov
out
xchg
aaa
outsb
xchg
std
mov
mov
loop
push
inc
jmp
or
enter
jno
cmpsb
xor
cmp
mov
jnp
aam
scas
push
pop
add
cmp
arpl
mov
data16
out
xchg
mov
lcall
and
rorb
or
imul
jg
mov
push
mov
jl
or
imul
call
push
and
lret
addr16
push
xlat
push
add
jp
mov
push
mov
mov
mov
mov
mov
jno
inc
iret
xor
icebp
ret
xchg
xchg
and
sbbb
jae
faddl
dec
xchg
loop
sub
adc
cltd
dec
xchg
sub
es
cmp
adc
mull
and
jo
test
hlt
dec
int3
dec
sub
inc
loopne
dec
dec
js
push
insb
and
mov
imul
pop
fisttps
in
imul
sahf
cmp
and
add
xor
push
icebp
pushaw
out
dec
or
je
in
repz
rcrb
enter
or
gs
pop
mov
cltd
and
dec
outsb
loope
cld
aam
loopne
dec
pusha
and
ret
cmp
add
cli
and
ds
je
insl
out
mov
sti
sub
push
cmpsl
dec
pop
push
test
pop
push
scas
je
or
scas
call
out
xor
jno
or
push
and
cmp
movsb
nop
xor
adc
popf
sbb
clc
dec
push
add
test
test
popa
mov
xor
add
or
xor
mov
push
das
and
in
push
loopne
lahf
sub
xor
adc
ficomps
hlt
push
outsl
les
xchg
int
and
iret
and
in
fld
mov
mov
push
out
loope
in
mov
fsubr
test
or
mov
in
jae
out
push
mov
or
ljmp
sub
loope
mull
sub
sti
imul
insb
mov
mov
mov
add
stos
mov
push
mov
lock
push
cmp
lea
arpl
push
add
xchg
mov
mov
pop
pushf
push
xchg
jle
dec
add
push
sbb
shll
scas
adcl
mov
push
jns
mov
ss
je
jns
inc
test
pop
sbb
and
insb
lods
ljmp
shlb
ljmp
ja
stos
imul
xor
mov
pushf
push
shlb
jb
lahf
mov
mov
ret
xor
push
pop
je
sub
aas
cmc
mov
es
scas
or
cmp
xchg
insl
push
sti
mov
mov
add
inc
push
sbb
jmp
and
out
pop
inc
cmp
call
fisubrl
mov
in
add
fcompl
mov
test
fimuls
adc
sub
add
sar
cmpsb
lret
pop
xchg
cmp
xchg
ljmp
out
fwait
insl
scas
pop
mov
test
shll
push
jne
jecxz
out
repnz
xor
mov
ret
inc
dec
cwtl
pop
mov
lahf
js
mov
mov
scas
mov
pop
fwait
in
popf
mov
mov
repz
add
dec
xor
popa
in
pop
mov
icebp
test
jecxz
adc
je
adcl
jo
loop
cs
scas
mov
loop
filds
iret
popf
jbe
sbb
sbb
jns
mov
mov
lock
call
and
adc
lret
out
mov
lcall
jo
sbb
jbe
rorl
jbe
sub
cmp
lods
dec
inc
leave
sti
popa
mov
inc
mov
outsb
clc
or
clc
mov
xor
push
cltd
xchg
fistl
ja
stos
adc
cmp
cmp
mov
andl
nop
addb
imul
dec
lods
or
dec
xchg
jl
sub
dec
push
dec
popf
jl
jne
out
clc
mov
insb
and
repnz
rorl
xchg
jge
mov
mov
popf
lods
arpl
in
jp
inc
adc
sbb
gs
arpl
push
les
mov
mov
dec
pop
push
mov
inc
xor
adc
add
add
dec
mov
push
loope
mov
add
add
fists
jg
lcall
jmp
pop
addl
sahf
inc
std
and
pop
xorl
cmp
xchg
test
negl
rolb
and
xchg
imul
ja
sub
decb
dec
push
adc
jb
in
lahf
mov
cmp
ds
xor
cmc
or
rcrb
js
cmp
add
jbe
and
push
or
cmp
cmp
jo
nop
dec
sub
cmp
imul
cmc
mov
cmpl
rcll
fstpt
js
mov
lds
cli
xor
mov
out
scas
push
cmp
mov
xchg
xor
add
sbb
sbb
jne
cmp
repnz
pop
push
push
xlat
mov
add
andb
add
add
je
insb
repz
jmp
hlt
adc
xlat
sub
sub
cmp
out
push
test
repz
jne
sbb
or
sbb
jecxz
push
jecxz
daa
cmp
mov
push
mov
jb
test
cmp
into
lods
or
cmp
jno
pop
and
xorb
rol
lds
mov
cmpsl
pop
movsl
jne
js
lods
jno
jns
jbe
scas
lock
fnstenv
mov
cltd
or
icebp
repnz
pop
jecxz
out
cmp
xchg
xor
aas
lcall
push
fists
mov
cmpsb
cltd
jb
sbb
ljmp
jp
loope
cltd
mov
lea
or
cli
fwait
out
gs
cmp
jne,pt
cmp
adc
repnz
pop
dec
and
xchg
repz
mov
insb
movsb
jg
sub
inc
mov
or
sbb
aas
es
seto
xchg
jo
mov
xor
sub
pop
inc
shl
cmpb
lret
xor
cmp
lea
hlt
add
jl
decb
in
pop
adc
lcall
and
adc
push
xlat
or
mov
hlt
cmpb
cmp
hlt
mov
je
mov
test
fcoms
push
bound
cmp
xor
jb
ja
jmp
push
xchg
fldl
push
jmp
push
inc
pop
mov
add
push
roll
jmp
sub
add
sbb
imul
es
lahf
jge
out
adc
adc
inc
cmp
push
xor
aaa
mov
imul
scas
test
loopne
dec
mov
jbe
jge
test
inc
cmp
push
dec
inc
mov
imul
and
sbb
mov
adc
aad
jo
cmpsl
adc
dec
push
sti
aad
sbb
in
sahf
imul
or
popf
xchg
imul
pop
push
mov
out
add
es
inc
lods
lret
push
lahf
and
cld
mov
inc
hlt
into
stos
cmc
jae
in
into
adc
es
cmpsl
ja
repz
dec
xchg
xchg
icebp
xlat
in
xchg
pop
icebp
pop
push
push
data16
rol
arpl
push
sbb
fldt
rorl
mov
das
mov
cmpsb
leave
bnd
das
in
dec
leave
fstpl
or
pop
adc
pop
les
jg
mov
pop
shr
xorl
xchg
fldenv
sub
xchg
das
mov
sub
inc
xchg
cwtl
in
add
or
mov
jb
dec
jb
xchg
mov
loop
fidivrl
out
decb
pushf
mov
cmpsb
cmc
es
cmc
in
xchg
and
sbb
xor
adc
mov
mov
arpl
mov
int
pushf
test
outsb
mov
mov
imul
arpl
sbb
push
pop
mov
xchg
push
push
idivl
sbbb
call
rolb
inc
pop
or
popa
adc
and
mov
xor
mov
sbb
mov
mov
fmull
and
cmp
aas
lret
inc
push
aas
je
lret
or
sbb
adc
test
adc
dec
bnd
stos
lods
jp
sbb
cmp
xor
cmp
or
es
mov
xor
mov
push
sbb
xchg
lret
ds
clc
inc
pushf
push
pop
popa
jns
in
enter
jnp
cmpsb
or
add
jno
loopne
cs
sahf
mov
sub
sahf
inc
sub
dec
shrb
xor
insb
mov
jo
shlb
in
cmp
scas
pop
lds
xchg
mov
pushf
insl
or
loop
push
jb
je
es
insl
loope
lods
push
cmp
shl
not
mov
fiadds
xchg
fcmovb
fwait
rcrb
or
stos
xchg
mov
xchg
daa
inc
adc
dec
sti
dec
adc
addr16
push
fisubrl
pop
fistpl
jge
mov
dec
cmpsb
jo
das
mov
push
push
mov
mov
xor
jecxz
nop
fldl
repnz
pop
aam
lahf
movsl
fimuls
lcall
sbb
xor
push
xor
pop
jle
sub
mov
push
or
testb
xchg
mov
cmc
fs
test
outsw
ret
test
ret
outsb
fs
mov
or
jle
jbe
inc
or
mov
dec
or
mov
inc
xchg
movsl
loopne
imul
movsl
call
pop
jnp
arpl
or
sahf
xchg
mov
and
jno
sub
mov
mov
pop
jmp
push
hlt
mov
cli
outsb
mov
out
push
shlb
and
jecxz
cwtl
xchg
cmp
lea
dec
ret
or
out
or
mov
xor
or
jge
insb
adc
outsb
shlb
mov
insb
mov
push
fsubr
rolb
jns
dec
fsubs
mov
sbb
int
mov
sahf
xchg
in
cltd
leave
pop
aad
mov
enter
sub
and
xor
andl
aam
pop
mov
dec
xor
pop
jno
pop
mov
jb
dec
stc
jne
outsl
mov
scas
push
and
pop
fcomps
mov
or
aad
push
or
ds
or
inc
mov
cmpsl
jg
push
sti
pop
jecxz
xchg
outsl
test
popf
and
cs
and
inc
testb
das
notb
adc
pop
push
xchg
cmp
or
loopne
movsl
jns
xor
inc
filds
cld
mov
daa
mov
and
stos
stos
inc
jnp
cmp
fdivrl
in
mov
jbe
into
stc
inc
cmp
mov
ror
pop
adc
es
push
add
or
arpl
lahf
mov
xor
lods
xchg
addl
aad
sarl
aaa
jle
aam
cmc
pop
out
push
sbbb
sub
xor
loop
test
adcb
fwait
add
outsl
iret
std
xchg
sbb
les
clc
and
fdivrp
add
mov
adc
in
out
dec
shr
push
dec
sbb
jae
push
aad
xchg
pop
xchg
stc
in
xlat
adc
test
cmp
lahf
dec
dec
faddp
pop
mov
movl
mov
into
out
xchg
dec
mov
lret
js
sbb
mov
insl
cli
jno
jge
les
mov
mov
sub
arpl
add
out
jg
gs
sbb
stos
fucomi
xchg
vmovntpd
inc
addr16
jg
test
nop
inc
sub
imul
cmpsb
and
xchg
add
sub
outsb
lods
sbb
pop
cltd
sub
out
jle
fistpl
popa
test
lock
lret
add
push
add
pop
iret
and
movsb
inc
xchg
xchg
out
jmp
pushf
insb
inc
stos
jp
mov
mov
lcall
lcall
repnz
aad
popf
test
inc
push
xchg
lds
adc
movsb
sbb
sbb
jnp
out
lahf
push
inc
scas
test
les
sub
mov
rcll
incb
lods
hlt
adc
cmc
xchg
bound
stc
mov
int3
out
pop
mov
aas
ds
stos
adc
in
mov
mov
jmp
scas
and
mov
int3
std
in
mov
pushf
loope
inc
and
aaa
fstps
aas
stc
inc
push
xor
imul
cld
push
cmp
xor
insl
sbb
adc
adc
push
adc
xchg
or
out
and
in
cmp
push
aad
je
xor
jmp
call
xchg
popf
outsl
int3
add
jns
enter
mov
int3
pusha
xor
out
mov
sti
into
cltd
dec
xor
xchg
xor
lahf
mov
out
sub
lret
shlb
ja,pn
mov
xor
mov
adc
pop
pop
lods
push
xchg
or
mov
shr
aam
insb
mov
add
inc
dec
adc
dec
adc
and
cmp
cmc
int
xchg
inc
cmp
push
orl
pop
inc
jl
pop
pop
stos
xor
sti
pushf
mov
fwait
jnp
dec
sub
and
push
test
dec
pop
hlt
dec
in
jb
popf
mov
hlt
aam
enter
jo
sub
jno
call
push
jle
lea
outsl
insb
mov
and
pop
mov
es
jecxz
inc
mov
repnz
int
and
inc
in
xor
pop
xchg
mov
push
outsl
cli
cli
cmp
xor
adc
ss
cmp
add
in
leave
mov
mov
push
cmpsl
push
pusha
mov
xchg
and
scas
jge
cmp
aad
sar
insb
ds
fdecstp
xchg
fsubs
iret
sub
mov
loop
push
cmpsb
sub
jmp
mov
movsb
lods
addl
test
mov
inc
lret
cmp
add
xchg
je
pushf
mov
test
mov
in
mov
icebp
nop
fisubl
pushf
add
or
lods
mov
adc
mov
lods
subl
inc
pop
and
inc
inc
lcall
and
jl
cwtl
pop
jl
test
mov
test
or
aad
loope
mov
xchg
and
xchg
enter
fcoms
push
and
loopne
and
dec
push
inc
dec
mov
inc
mov
outsb
dec
adc
or
mov
and
int3
pusha
or
adc
pop
icebp
out
in
stos
and
lods
les
mov
scas
push
out
and
cmp
jle
ret
mov
nop
sub
pop
push
and
insl
mov
mov
js
daa
in
xchg
out
mov
inc
lret
ret
ret
xchg
inc
gs
or
add
test
flds
shrl
test
push
inc
push
dec
stc
fidivrs
addb
cmp
adc
add
push
push
lcall
cli
mov
sbb
mov
pop
mov
xor
or
in
test
cld
enter
jg
mov
fisubl
push
call
pop
sub
dec
sub
xor
repnz
loope
movsl
adc
sbb
xor
mov
imul
out
pusha
xor
nop
and
xchg
stos
js
cmpsb
mov
push
fnsave
cli
repz
xchg
ljmp
jbe
fcoms
pop
mov
mov
addr16
ds
adc
inc
cmp
cld
mov
pop
cmpsb
sbb
js
jbe
int3
aad
test
inc
xchg
lahf
mov
out
mov
shlb
js
lods
mov
cmp
fadd
outsb
out
lods
pop
pop
lods
jg
out
jl
sahf
ss
enter
xchg
insl
sbb
push
adc
xchg
push
mov
dec
sbb
jg
stc
and
test
test
mov
bound
sbb
xor
std
pusha
nop
mov
stos
lret
inc
pop
dec
pusha
xor
ret
incl
inc
pop
mov
lret
cmc
pop
notl
mov
push
movsb
jp
and
inc
add
push
add
inc
push
jae
pop
movsl
mov
mov
cmpl
add
push
mov
sub
leave
aaa
lret
xor
dec
xlat
mov
sbb
stc
push
movsb
and
xchg
rclb
cwtl
sti
mov
pop
fsubs
cmc
jg
add
jnp
roll
push
sbb
scas
arpl
mov
lahf
inc
fdivrs
mov
lcall
imull
push
dec
mov
es
push
insl
inc
adc
sbb
mov
mov
dec
dec
cwtl
sub
lcall
and
cmp
pop
jns
imul
adc
pop
pop
jp
js
cmp
adc
mov
mov
cmp
cld
inc
dec
outsb
push
loope
push
cwtl
xor
jbe
or
ret
in
lock
mov
xor
bnd
popa
dec
xlat
xor
mov
cli
adc
jne
ret
pop
bound
addr16
pop
clc
or
movsb
in
mov
or
mov
mov
mov
xchg
lahf
dec
and
xlat
js
loope
mulb
fwait
lahf
in
xor
outsl
movsb
hlt
icebp
cmpsb
jp
int
lea
in
lcall
hlt
adc
push
mov
xchg
mov
ret
ret
cltd
xchg
test
cwtl
test
jl
inc
fmull
sub
sbb
into
loop
lahf
popf
fstpl
add
and
or
inc
pop
push
test
lret
aad
popa
and
hlt
sahf
idiv
or
xor
lcall
mov
jo
outsb
mov
adc
fsts
xor
shll
dec
sarl
adc
mov
cwtl
test
xor
testb
and
bound
mov
sub
clc
icebp
mov
xchg
xchg
xor
sub
daa
in
in
std
xor
fistpl
in
mov
mov
fwait
int3
enterw
imul
lock
cwtl
fldt
jl
pop
pusha
xor
mov
adc
mov
pop
fiaddl
mov
repnz
loope
fcmovne
sub
dec
add
sbb
xchg
sbb
insb
pop
pusha
pop
mov
pminsw
and
jno
in
push
aaa
adc
pop
cltd
pusha
test
sub
and
aad
stos
mov
movsl
cs
sbb
and
leave
cltd
sbb
adc
iret
inc
adc
sti
push
call
and
movsl
es
paddw
cmpsb
inc
fs
and
subb
xchg
push
cmp
pop
add
lea
xor
jne
js
add
pop
xchg
das
mov
mov
inc
push
icebp
push
sbb
add
xor
push
out
in
daa
dec
mov
inc
ficomps
fwait
ds
inc
pop
xor
cli
je
aaa
clc
xor
icebp
repnz
dec
mov
stc
lret
popa
mov
push
add
cmc
int3
insl
adcl
adc
push
lds
int3
fstpt
and
out
ljmp
ja
adc
jle
xor
cmp
and
jns
mov
mov
test
insb
push
fsts
call
outsl
mov
in
jb
jns
sbb
inc
xor
clc
sbb
cld
stos
dec
sarb
fs
insb
sbb
or
in
mov
cmc
mov
popf
or
clc
mov
bound
add
out
mov
pushf
cmc
shl
out
xchg
jg
mov
repz
and
cmp
lret
repnz
orb
add
test
daa
jge
pop
aaa
into
xchg
pushf
dec
lods
and
shll
es
mov
jp
and
xor
fldt
pop
out
clc
pop
outsl
push
scas
sbb
mov
outsl
add
cmpsl
insb
push
mov
dec
insl
cld
push
das
sbb
cld
pusha
pop
popa
loope
sub
sub
sub
sub
mov
scas
shrl
dec
xchg
pop
fildl
mov
xchg
fisttpl
shll
jns
xor
gs
cmc
xchg
jecxz
sbb
xor
lcall
fsubl
arpl
aam
xchg
adc
cmpsb
inc
sti
mov
test
xlat
test
pop
xchg
mov
adc
push
mov
cmp
scas
mov
scas
enter
ss
dec
sub
jo
adc
rclb
mov
decl
dec
rolb
popf
inc
fs
or
mov
mov
push
sub
cli
cwtl
out
enter
dec
dec
lcall
shlb
jge
jl
popa
scas
movsl
loop
add
or
sbb
roll
pop
adc
loop
cmp
fs
or
fcompl
std
loopne
or
mov
xchg
rclb
push
clc
stos
in
xor
adc
lods
dec
mov
leave
jne
push
xchg
ds
pop
lods
sub
out
sbb
or
js
stos
repnz
imul
and
sahf
loopne
lods
add
insl
loopne
not
lcall
or
fwait
subps
cltd
out
jo
mov
mov
jo
scas
push
push
or
popa
or
and
repz
sub
sbb
cli
dec
fistl
push
push
rcrb
push
push
shrb
cld
test
or
add
loop
mov
imul
adc
xor
add
repnz
and
mov
insb
cwtl
pop
lret
jno
xor
js
adc
clc
iret
cmp
lahf
das
or
jne
rolb
sbb
test
dec
dec
cmc
andl
fucomi
inc
dec
inc
add
mov
repz
lcall
push
jge
push
sub
inc
push
lret
or
addl
mov
and
sbb
pop
add
fadds
mov
mov
push
push
pushf
push
xchg
cmc
popf
push
es
mov
adc
fmuls
pop
and
sub
fwait
jp
push
icebp
stos
mov
addl
je
lods
jle
push
xor
pushf
mov
test
fs
or
in
ljmp
rol
mov
cmp
or
js
imul
movsl
mov
cmpsb
nop
sbb
pop
stos
data16
push
dec
mov
fisubrs
mov
sbb
cmp
clc
xchg
xor
pop
inc
mov
iret
adc
jne
jl
xor
gs
fsubp
push
ljmp
add
clc
lods
push
sub
sbb
adc
sbb
in
add
xchg
push
addr16
cs
mov
fldl
and
sahf
subl
movsb
fdivr
test
jmp
inc
out
dec
jnp
mov
arpl
cli
fildl
adc
sbb
inc
mov
add
lods
cmp
xor
in
or
mov
les
inc
test
aas
out
mov
mov
mov
leave
mov
rcl
mov
inc
fldcw
repnz
nop
sbb
orl
fbld
mov
xchg
test
imul
sbb
in
int
xor
lods
cmc
jg
cld
aas
inc
cmp
jg
jae
mov
and
dec
adc
xchg
pop
and
js
in
movsb
mov
sub
lods
jmp
xchg
pop
mov
push
imull
adc
mov
xlat
push
jmp
and
cmp
xor
push
hlt
pop
notb
roll
ret
jmp
js
fsubs
mov
fwait
in
sub
fldcw
popf
scas
xchg
shlb
xchg
je
xor
jnp
lods
sub
imul
idivl
add
or
sbb
mov
jb
adcl
jo
adc
and
cwtl
pop
pop
push
mov
xchg
mov
fcmove
and
add
lahf
int3
je
shll
aaa
bound
lods
int
lock
xchg
adcb
sbb
push
xchg
sbb
mov
nop
mov
push
cmp
push
pop
outsb
mov
jp
in
sti
inc
mov
xchg
mov
fs
aas
adc
mov
repz
cwtl
shl
push
jne
inc
out
ja
add
pushw
scas
fidivs
lret
push
data16
push
lret
ljmp
adc
shlb
adc
push
sub
roll
ljmp
push
pop
push
scas
push
mov
cmp
test
push
sub
adc
and
imulb
ss
shlb
push
fstps
addr16
adc
push
movsl
pop
add
sub
data16
mov
je
cld
mov
into
cwtl
and
sub
lea
inc
mov
dec
jnp
jne
ss
sbb
setno
lods
js
xchg
cld
aaa
push
inc
jno
sbb
lea
rol
adc
inc
loop
mov
adc
scas
adc
mov
ds
stos
xor
push
xchg
and
int
rorb
lods
ds
pop
and
and
insl
cmc
pop
adcb
mov
popa
insb
push
or
addr16
shrb
movsl
push
stos
push
mov
add
sbb
xchg
inc
pop
out
add
mov
or
lahf
mov
in
insb
inc
xchg
mov
das
inc
add
mov
dec
xchg
jns
dec
or
mov
insl
fsub
mov
xchg
xorb
cli
xor
adc
xchg
int
aas
xchg
and
jge
push
leave
insl
lea
xchg
pushf
inc
pop
lret
movl
popf
icebp
sarb
gs
jae
xchg
sub
nop
or
loope
mov
sub
loop
data16
dec
lock
popa
adc
xor
jl
xchg
cmpsl
mov
leave
pop
add
fcompl
cmc
addr16
int
cltd
ret
jmp
rolb
xor
push
in
bound
adc
mov
iret
adc
xor
pop
in
out
or
pop
andl
push
bound
push
xchg
loop
push
push
cmpsl
xor
or
ja
add
fs
add
out
sarl
xchg
repz
shlb
aas
pop
ror
out
popa
sahf
lret
sub
sbb
into
movsb
repnz
mov
clc
sub
cmp
cs
jno
mov
mov
pop
adc
inc
inc
and
fxch
inc
jge
xchg
pop
mov
adc
cli
xchg
mov
adc
inc
mov
pop
push
jmp
cmp
aas
cld
lret
sbb
push
hlt
jne
push
pop
mov
adc
mov
divb
fs
andl
jo
movsl
lods
xchg
clc
aam
insb
xchg
stos
aaa
clc
fcmovnbe
push
ds
bswap
ds
orl
mov
nop
inc
mov
jmp
xor
shrl
cmc
loope
sub
js
aas
mov
sti
mov
inc
jle
xchg
mov
sbb
repnz
push
cli
sub
mov
and
xchg
add
fistps
inc
out
stc
mov
pop
shl
frstor
stc
sub
and
cmp
mov
lahf
ss
or
test
lahf
xchg
out
imul
out
xchg
div
jno
sub
mov
inc
in
inc
mov
cltd
xchg
and
loopne
fists
and
xchg
pushf
cmp
cmp
push
cmp
sbb
arpl
ret
cmp
xor
std
cmp
xor
dec
xor
and
loop
je
and
ficoms
mov
test
inc
fmuls
mov
sahf
mov
ds
out
mov
loop
into
das
mov
jno
adc
push
inc
add
notl
push
jle
aam
outsb
jmp
sub
and
movsb
sbb
sub
adc
mov
test
fdivrp
pop
pop
xor
push
cmpsb
jns
sub
push
inc
adc
mov
fwait
adc
cli
stc
je
adc
loopne
stc
sub
mov
xchg
xor
enter
pop
xchg
andl
bnd
xchg
cmp
xlat
mov
or
lock
gs
sub
mov
lea
flds
push
leave
stc
jns
jns
push
mov
sahf
fs
enter
push
test
dec
lods
push
add
fldt
cmp
lea
out
mov
and
pop
clc
push
pusha
sub
aas
subb
in
push
xor
inc
rcrb
cmp
cmp
test
std
pop
cmp
pop
push
and
xor
push
sbb
mov
jno
lret
ret
fstp
and
scas
mov
scas
bound
push
and
xor
fcmovnu
adc
add
ret
out
dec
dec
adc
mov
cmpsb
jl
adc
rorl
shrb
push
aas
int
cmp
outsb
psraw
rclb
daa
cmp
xchg
cmp
test
ret
sbb
sub
mov
icebp
mov
cltd
mov
adc
pop
orb
cmp
mov
es
mov
rcll
jecxz
adc
push
fildl
rorb
mov
popl
in
rorb
sbb
dec
fidivrs
ljmp
jb
inc
ds
das
aad
test
cltd
add
dec
pop
pop
rcr
or
jl
push
negl
push
mov
nop
adc
out
call
dec
lahf
sti
es
int3
cmpsl
add
lea
and
stos
ret
xor
neg
jge
sbb
or
aam
mov
push
xor
pop
push
fdivrl
push
lea
scas
push
lods
jne
xor
out
or
inc
das
jb
fldcw
popf
stos
sub
mov
adc
pop
stos
mov
out
lea
insb
es
addr16
sbb
dec
mov
jge
setle
repz
dec
push
incl
cmp
stos
pop
xchg
mov
push
and
in
fldl
jmp
and
in
cmp
mov
outsb
lods
nop
pop
icebp
bswap
movsl
inc
sti
mov
sub
mov
ret
mov
dec
or
and
mov
andb
bound
jecxz
addr16
es
movsb
dec
nop
mov
xor
mov
sbb
pop
sub
pop
icebp
xlat
pop
mov
and
mov
and
shr
outsl
pusha
inc
out
hlt
mov
cmpl
fidivrl
je,pn
ficoms
pop
shrl
gs
in
leave
mov
xor
pop
loop
jbe
lret
jge
xchg
mov
jns
cmpsl
push
movsb
inc
arpl
add
emms
dec
js
clc
push
cmp
cmovne
not
inc
jl
adc
xor
push
mov
fucomi
cmp
lock
pop
jnp
mov
stos
pop
push
stos
fimuls
lcall
fadds
mov
imulb
mov
loope
pop
pop
xor
cs
icebp
stos
fmuls
xchg
sbb
xor
pop
stos
sahf
les
inc
lahf
movsb
loope
das
xchg
lcall
cmp
mov
test
pop
adc
ljmp
addl
les
imul
and
dec
lock
mov
jb
cmp
pushf
movsb
inc
cltd
arpl
stos
int
lods
rcll
fs
or
aaa
sub
dec
push
push
push
xchg
mov
pop
ss
jecxz
mov
test
pop
icebp
or
leave
push
mov
and
pop
je
xchg
int3
cmp
lds
mov
add
jno
add
out
cltd
shrl
sub
cmp
jb
test
push
xchg
jl
fcompl
xchg
xchg
push
out
pop
dec
mov
aaa
lcall
cs
pop
xchg
inc
pop
xor
test
pop
or
mov
push
dec
jp
push
mov
dec
aad
daa
mov
aaa
test
push
jg
mov
imulb
jmp
pop
cmp
sub
cmp
mov
lods
pop
hlt
and
leave
mov
xchg
add
add
mov
scas
fdivl
movsl
push
mov
and
sub
rcll
outsb
lods
shlb
cmp
lcall
jnp
sub
aad
sbb
aaa
sbb
sbb
test
push
mov
mov
je
xor
fwait
mov
xchg
and
fcomps
dec
test
stos
cmpsb
xor
bound
jl
pop
repnz
insb
test
mov
dec
inc
mov
jae
mov
mov
xor
andl
cld
call
outsl
push
imul
scas
mov
lcall
fstl
cmpsb
inc
pop
jnp
jno
xchg
mov
out
pop
scas
push
fisubrl
outsl
pusha
jo
cmpsl
inc
add
dec
push
int
lret
leave
ror
or
in
insb
pop
adc
int
out
add
shl
and
add
adc
inc
ja
add
test
mov
test
fbld
sub
dec
jnp
fdivr
repnz
pop
mov
push
sbb
fstl
enter
cmc
or
mov
push
call
cmp
lds
mov
lea
add
aas
in
sub
sbb
test
xchg
ljmp
mov
pop
ja
push
pop
fidivs
sub
lods
adc
mov
arpl
js
lds
movsb
sar
jne
mov
mov
cwtl
nop
xchg
cmp
inc
cmp
sub
daa
mov
dec
or
fwait
mov
adc
popa
popf
and
sub
in
xchg
jecxz
cmpsl
lcall
mov
dec
enter
shlb
mov
popf
push
jmp
lock
inc
int3
sbb
push
pop
sbb
xlat
add
ja
add
mov
push
push
int3
or
mov
cvtps2pi
mov
shl
mov
iret
pusha
mov
sbb
adc
std
pop
mov
lcall
jg
cmp
in
insl
inc
test
xchg
iret
mov
aas
andb
imul
cmpsb
add
or
daa
out
lods
cltd
int3
shr
mov
in
and
pusha
cmc
or
jle
sbb
inc
insb
or
xor
mov
sbbl
frstpm(287
fwait
mov
cltd
cmc
and
inc
xchg
rorb
adc
mov
aas
vsubpd
cmp
inc
mov
jp
enter
les
mov
xchg
sbb
mov
lods
aaa
ss
popa
aam
sti
xlat
mov
movsb
pop
push
pop
dec
dec
orb
aad
call
add
out
cmp
hlt
and
adc
test
ret
xor
mov
push
or
or
cmp
loope
ja
repz
mov
mov
fistl
mov
inc
sub
push
xchg
out
sarl
fcomip
cmp
push
cli
pushf
add
sbb
inc
dec
mov
pop
pmaddwd
js
and
outsl
jno
xorb
xchg
adc
jno
sub
aam
daa
stc
pop
aad
and
dec
repz
in
stc
aas
shll
daa
scas
lock
out
in
dec
in
or
mov
mov
aad
cmp
out
lods
push
sub
clc
inc
sahf
scas
or
std
ret
out
cmp
outsl
sbb
mov
fwait
mov
insb
mov
push
ret
outsb
sar
ljmp
mov
pop
repz
data16
loope
sahf
mov
dec
popa
icebp
repnz
shlb
xchg
cmpb
mov
xor
fidivrl
xor
pop
aam
and
hlt
addb
sub
pop
sub
xchg
lcall
sub
inc
mov
rolb
test
out
testl
dec
sti
dec
cmpsl
xchg
inc
pop
sub
push
lds
xor
jno
and
xchg
aaa
jg
cld
lds
adc
and
loopne
ljmp
out
xchg
sub
cmp
testb
leave
ds
cmp
call
in
xor
push
shrb
jge
divl
cmp
out
xchg
xor
dec
lcall
std
js
pop
sub
or
mov
dec
test
xchg
imul
sahf
push
sbb
mov
sub
lar
adc
popf
cmp
jns
mov
mov
push
loope
dec
mov
orb
add
and
mov
jne
mov
repnz
hlt
js
fs
sahf
ss
out
push
pop
in
out
mov
mov
push
dec
mov
inc
ja
jmp
push
and
inc
fistl
sub
sub
roll
int
sti
mov
jmp
lret
push
fstpt
mov
dec
popa
adc
nop
sti
mov
inc
adc
rclb
stos
cmp
mov
mov
shrl
in
cmc
lret
dec
pop
push
cmp
jne
mov
pop
adc
lahf
jmp
fsubs
push
lods
mov
inc
push
out
push
sarb
cmp
pop
ss
fdivs
or
xor
jae
jg
adc
cmp
jae
or
xor
and
mov
shrl
mov
jb
cmpl
push
enter
enter
dec
pop
mov
inc
mov
cmc
imul
add
inc
outsl
push
or
mov
mov
push
lods
out
sbb
in
subl
sbb
adc
jge
adc
fildll
ret
lret
inc
push
pop
xchg
cmpsb
int3
pop
mov
mov
xchg
fnstcw
xchg
int
cmp
loopne
gs
adc
sbbb
xor
xchg
and
sbb
je
sti
xlat
push
aam
divb
xor
mov
fwait
push
cmpl
outsb
jbe
or
negb
bound
or
aam
push
adc
stos
cmp
inc
or
pop
push
mov
and
fsubr
div
push
mov
mov
mov
adc
jp
jp
pop
or
vmwrite
cmp
das
add
cmp
imul
jnp
rol
push
lret
mov
jl
lea
rclb
stos
push
std
lea
push
rorb
mov
jo
dec
push
fildll
and
neg
adc
pop
xchg
ret
pop
das
nop
push
mov
mov
shr
pop
repz
insb
lret
push
dec
mov
inc
mov
or
lahf
clc
dec
popf
and
xchg
mov
dec
mov
movsl
mov
loopne
xchg
adc
add
imul
xchg
or
dec
pop
inc
call
pop
cmpxchg
push
ret
inc
xchg
aad
or
shl
insl
pusha
cltd
adc
insb
push
lahf
movsb
jbe
in
pop
lock
ja
xor
push
jo
sub
lcall
mov
lea
cmc
sbb
jp
and
sarl
or
mov
shll
cld
or
mov
sub
dec
dec
inc
xlat
insb
mov
push
push
not
stc
pop
fs
clc
call
inc
outsb
repz
mov
hlt
adcb
push
pop
leave
dec
or
ss
sarb
cli
sub
push
insl
or
jl
jge
call
dec
repz
ffree
jae
cmp
push
push
mov
ret
dec
cmpsb
push
dec
push
lret
pop
mov
cltd
cmp
insl
aas
lods
push
jae
arpl
jne
nop
or
cltd
and
mov
mov
or
nop
sbb
clc
lahf
je
test
inc
in
addb
mov
std
mov
out
jbe
incl
nop
cld
mov
int3
int
pop
add
xor
repz
mov
cmpl
inc
dec
or
jno
ret
mov
mov
scas
hlt
or
pushf
lret
add
cmp
std
jp
fstpl
repz
movsb
das
mov
sbb
xchg
sub
adc
cmpsb
and
mov
insl
je
xchg
aam
or
push
lds
scas
adc
or
sbb
leave
jo
jge
cs
xchg
xchg
loop
stc
mov
sarl
mov
out
or
rcl
jae
fcomip
inc
or
mov
std
lahf
push
sahf
shr
pop
loopne
sbb
cmpsb
push
enter
mov
das
mov
movsb
jbe
lahf
mov
inc
mov
stos
fs
sbb
mov
jb
and
repnz
cmp
and
rorl
pop
decb
loop
bound
jecxz
push
scas
ja
xor
or
hlt
cmp
fnstcw
jnp
hlt
enter
jp
aas
mov
jecxz
leave
negl
dec
icebp
jmp
pop
pop
or
add
or
mov
sbb
sub
test
out
jne
mov
jne
es
ret
push
cmp
data16
cmp
loope
pop
mov
sub
cmp
xchg
aaa
rolb
inc
add
daa
mov
aaa
sub
imull
in
outsb
mov
cmp
insl
out
ss
sub
fidivrs
iret
sub
jb
bound
movsl
repnz
jns
pop
shrl
mov
jno
imul
insb
dec
data16
adc
xor
mov
sbb
or
lahf
pop
daa
out
sbb
inc
mov
loop
push
jns
stos
lods
es
popf
pop
je
push
ret
into
ret
cwtl
cmp
negb
cwtl
or
gs
push
fisubs
jo
push
push
and
push
addr16
test
mov
test
dec
sbb
loopne
pushf
pop
shrl
rcrb
paddusb
int
and
push
xor
or
sbb
ja
rcrb
negb
jne
inc
je
jne
mov
cmp
adc
or
in
xor
mov
sub
jmp
into
sub
outsb
xlat
and
mov
fbstp
mov
data16
ss
inc
push
pop
stos
hlt
xchg
add
lods
or
push
mov
fisubrs
and
xor
in
xor
push
jl
insl
adc
shl
push
mov
jno
xchg
sbb
inc
jle
mov
sbb
adc
xchg
inc
cmp
std
mov
cmc
jae
and
mov
js
fcomps
bnd
pop
jbe
cmp
sar
hlt
hlt
adc
repnz
outsb
sub
mov
fs
mov
inc
adc
movsl
xchg
in
aam
test
inc
fprem
fdivl
stos
notrack
sbb
mov
addb
jge
cmp
fildl
arpl
fcomps
pop
stos
add
cmp
loopne
enter
or
jg
lods
xchg
nop
in
jne
mov
pop
and
out
test
outsb
aam
inc
loope
mov
bound
lret
jg
inc
popw
insl
ja
cltd
adc
xchg
das
dec
mov
inc
mov
out
jmp
push
mov
int3
or
arpl
orl
inc
daa
out
arpl
mov
xchg
iret
out
mov
rorb
aad
lds
outsb
out
cmc
mov
test
xchg
add
jne
xor
dec
mov
and
fisttpll
pusha
dec
add
dec
pop
or
and
lcall
dec
jns
push
movsb
lock
out
add
mov
fwait
lahf
cs
cld
dec
imulb
in
int
lahf
in
call
sti
sahf
cmp
aaa
mov
gs
mov
sti
movsb
shll
clc
jmp
pop
push
pop
dec
nop
xchg
cli
and
cmp
jg
inc
xchg
mov
mov
scas
rcrb
mov
sbb
jmp
fildll
mov
lods
es
adc
xchg
mov
ret
outsb
aam
cs
xor
adc
adc
shl
dec
push
dec
and
ret
rcll
inc
xor
ret
and
stos
test
inc
xchg
sbb
je
into
das
fcomps
out
dec
gs
ret
int
in
test
in
push
lcall
and
outsb
arpl
sub
into
sub
fucomp
repz
rcrl
dec
jo
pop
push
fwait
pusha
adc
adc
nop
test
or
das
mov
mov
cmp
out
cmp
jb
mov
insb
stos
push
xchg
daa
push
push
xor
lcall
stos
cmpsl
sub
rorl
mov
cld
rclb
inc
adc
inc
pop
fistpl
lods
mov
rol
shll
inc
or
push
std
imul
sti
add
xor
push
pop
pop
aam
aas
jmp
das
call
cmp
movsb
rcl
mov
ret
int3
shr
push
shrb
fucomip
adc
mov
sub
lahf
scas
pop
enter
bound
addr16
add
sbb
ljmp
lcall
cmp
fwait
jp
jno
test
loope
jmp
gs
sbb
and
mov
jge
inc
dec
adc
sbb
push
stos
add
dec
ss
pop
jae
stc
jle
add
and
imul
dec
scas
push
add
jae
pop
sbb
jns
sarl
dec
fs
enter
mov
test
js
std
sub
cmp
and
adc
push
xor
jnp
lods
popf
xchg
sarb
add
pop
frstor
pop
or
imul
jo
les
in
cmp
pop
and
push
jne
sbb
push
cltd
outsl
cli
arpl
jno
stc
jbe
push
in
sbb
cmc
or
pop
loope
push
sub
mov
xchg
fists
xchg
in
mov
nop
push
stos
or
dec
add
loope
sbb
cmp
shl
jg
pusha
out
scas
cmp
jmp
mov
push
sbb
cmp
sub
idivl
sub
mov
out
xchg
push
xchg
fdivrs
dec
mov
fdiv
inc
lahf
rep
aad
ficomps
mov
inc
scas
pusha
pop
fisubrs
adc
inc
jl
inc
push
int3
es
ja
mov
mov
leave
hlt
js
stos
andl
loopne
or
cli
push
in
fistpl
sbb
jb
decb
push
pop
mov
adc
in
push
dec
mov
les
jle
jae
movsl
pusha
out
xchg
cmp
test
push
sub
pop
jo
aas
dec
dec
ss
sahf
sub
out
sub
fisubrs
ds
xchg
js
and
mov
dec
jne
repnz
inc
outsb
adc
mov
jmp
xchg
repnz
jmp
rclb
add
mov
fnstcw
lea
pop
sbb
sbb
test
mov
addr16
dec
add
stos
mov
push
vshufps
pop
les
orb
arpl
jb
sub
xlat
rolb
insb
in
clc
fs
jb
dec
inc
mov
adcb
push
sbb
sbb
adc
imul
mov
bound
out
push
jns
mov
outsb
popf
lahf
cmpsb
sub
lcall
nop
push
and
lods
jecxz
ret
pop
sarb
fs
push
lret
push
daa
sbb
mov
xchg
hlt
mov
xchg
push
sbb
jmp
mov
adc
jge
and
pop
dec
pop
xchg
xor
aad
leave
jo
xor
and
inc
cmpsl
jge
in
cmp
xchg
scas
sub
pop
inc
inc
jl
pop
xchg
pop
mov
shlb
push
add
orb
jb
cwtl
cmpb
into
imul
push
and
mov
xlat
mov
cmp
inc
mov
rolb
push
adc
fldcw
sbb
xchg
add
cwtl
pusha
lahf
pusha
lahf
cwtl
push
scas
xchg
int
call
sahf
js
pop
and
int
push
cltd
repnz
loop
imul
dec
cs
imul
add
bound
push
in
jecxz
inc
sahf
stc
lret
push
pop
sti
stos
imul
cmpsb
into
sti
loop
add
xor
fisubrl
fisttpll
testl
fs
jnp
mov
out
mov
das
mov
testb
xchg
push
test
test
xchg
loope
repz
repz
inc
insb
xchg
sub
std
fidivs
icebp
cmpsl
cs
in
sbb
cmp
cmp
adc
mov
pop
out
xchg
outsb
aam
lock
xchg
ret
stos
inc
testl
out
and
popa
clc
aam
arpl
ja
js
addb
jle
sbb
or
jecxz
incb
xor
add
ja
mov
imul
aad
lock
or
dec
dec
iret
dec
mov
and
dec
lods
sub
pop
sbb
lcall
push
mov
dec
les
out
jecxz
in
mov
ja
int
stos
mov
add
aas
cmp
cli
out
fiadds
fldcw
xchg
jl
jge
les
inc
insb
adc
lods
jae
push
push
aaa
pop
add
mov
shr
sub
les
pop
push
mov
pop
xor
inc
dec
mov
jl
sarb
pop
add
leave
rcl
insb
xchg
ja
add
mov
loopne
popf
inc
push
inc
std
lret
ret
daa
cmp
fstpl
xchg
shr
sbb
sti
clc
aaa
pop
mov
sub
xchg
cltd
sub
mov
int
push
mov
pushf
cmp
movsb
xchg
xchg
insl
mov
cmp
cs
cwtl
cmc
les
mov
sub
sbb
in
and
imul
or
lret
dec
cmp
adc
and
ret
cmc
push
pop
xchg
repnz
xchg
pop
mov
cmp
xor
scas
dec
xor
test
dec
clc
or
shrl
out
sahf
test
sub
cmp
sbb
jle
push
push
and
arpl
fldln2
imul
add
dec
or
push
pop
ljmp
je
sbb
xor
inc
sbb
sbb
add
mov
js
pop
add
stos
jb
lods
dec
pop
stos
pop
mov
fucom
movsl
jnp
jge
adc
mov
adc
and
xchg
daa
icebp
mov
lods
push
rcrl
daa
or
xchg
loope,pt
lcall
sti
mov
test
inc
push
adc
movb
add
and
pop
bound
movsb
ret
mov
sbb
test
push
or
push
adc
xchg
insl
jp
push
cmpsl
or
adc
rorl
loope
inc
push
lea
es
mov
loope
imul
jno
mov
mov
sar
or
stos
out
arpl
fwait
adc
xor
add
mov
icebp
push
addr16
adc
rolb
inc
jo
dec
lods
test
icebp
movsl
xchg
dec
sub
test
bound
pop
sub
outsb
jno
add
lret
add
mov
pop
inc
pop
cmp
dec
xchg
test
push
xchg
push
stc
pop
mov
cmp
add
sbb
addr16
jae
loopne
imul
arpl
push
adc
test
jmp
adc
lock
pop
out
pop
insb
push
leave
sbb
inc
andb
bound
mov
inc
jb
fs
jg
mul
ljmp
test
icebp
insl
xorb
cltd
cli
arpl
in
sahf
sub
popa
in
dec
xor
sbb
pop
repz
add
dec
mov
add
in
jle
jmp
shrb
nop
pushf
cmpsb
xor
push
inc
mov
push
xor
mov
inc
cmpsl
cmc
daa
adc
cmpsl
mov
pop
lcall
leave
or
rcrb
or
dec
mov
add
pop
loop
jb
cmp
cld
lods
adc
adc
jecxz
xlat
js
dec
fnstcw
xor
sub
or
ljmp
jmp
dec
cmp
lds
mov
mov
mov
lods
jae
sub
jne
es
int3
push
xchg
push
mov
pop
add
repnz
mov
test
add
jns
jge
dec
mov
mov
xor
popa
push
sbb
lods
inc
push
popf
pop
jge
mov
push
bound
pushf
xor
fadds
lret
mov
jb
sbbb
icebp
fnstenv
repz
xor
jmp
pop
jo
mov
arpl
jg
or
mov
xor
lods
push
dec
movsl
xor
xchg
outsl
cs
pop
fisttps
xlat
mov
inc
push
dec
enter
scas
push
cmp
fisubs
adc
push
shll
or
xor
xchg
fsubp
inc
and
sbb
push
out
mov
pop
shll
fisttps
dec
and
jg
mov
es
stc
xchg
dec
xlat
pop
das
into
imul
cld
jo
aas
arpl
jns
adc
pop
jno
or
xchg
add
push
mov
bnd
and
mov
outsl
movsb
es
and
lret
jmp
test
jno
and
das
jae
mov
cmpsl
cmp
jle
jl
lahf
lods
cs
add
scas
sbb
repnz
out
push
pop
test
ficoms
cmpsl
sahf
add
cltd
pop
pop
imul
ljmp
rorl
mov
adcl
cmpsl
orb
lods
mov
dec
popa
addl
aad
decl
and
pusha
divb
xchg
add
je
cwtl
xor
arpl
push
xor
jecxz
cwtl
cmc
ficompl
cmpsb
cmp
xchg
testl
push
xchg
jecxz
jge
sbb
jle
mov
dec
and
test
or
add
sub
and
scas
mov
jb
and
sub
lods
sbb
je
xchg
xchg
adc
and
xchg
and
rol
and
sub
cs
xchg
outsl
adcl
cwtl
xor
mov
push
incb
pop
xor
fstpl
and
dec
push
leave
adc
mov
jecxz
pop
adc
ficoml
or
and
jae
jnp
mov
imul
mov
jns
xor
test
repz
pop
sbb
mov
cld
or
movsl
in
gs
add
imul
mov
ret
ljmp
pushl
push
jnp
inc
std
pop
pop
cmpsb
into
popa
adc
enter
idivb
cmp
mov
dec
mov
int
stos
cmp
push
imul
jae
mov
xchg
dec
inc
inc
push
mov
into
sub
mov
adc
nop
les
sub
ds
enter
iret
mov
adc
daa
repnz
arpl
shll
dec
pop
cmp
jnp
xchg
cwtl
pop
rcrb
adc
mov
sti
sahf
mov
cld
es
jle
addl
or
xchg
push
shll
xchg
xchg
dec
fidivs
mov
push
mov
out
cmc
push
mov
out
int3
roll
inc
push
ss
test
ret
push
dec
out
jg
jnp
jo
scas
ret
addr16
hlt
xor
mov
push
xchg
or
and
or
mov
xchg
cmp
xchg
je
or
scas
repnz
pop
cmp
and
test
testb
stos
cmp
not
dec
imul
es
jmp
push
fwait
aam
rcrb
mov
push
sahf
mov
mov
imul
push
sti
inc
pop
lds
inc
xchg
dec
dec
ret
ljmp
aas
add
and
or
add
mov
cmp
sub
fcompl
scas
lds
cmc
add
cltd
and
dec
stos
roll
lret
int
loope
cmc
ds
and
sub
js
xlat
adcl
outsb
jge
push
sub
cmp
mov
mov
jecxz
cmp
push
ja
and
cmp
mov
lret
xor
pop
mov
imul
cmpsb
push
mov
xchg
cmp
ret
sarl
outsl
les
push
lock
add
adc
adc
add
lods
and
cld
scas
lods
vmulsd
aaa
xor
cmp
imul
mov
shl
outsb
ret
push
addr16
enter
push
xchg
add
mov
repz
mov
fdivrl
fcompp
push
xor
fs
sarl
cmp
xlat
mov
adc
mov
inc
mov
lret
lahf
pushf
xor
pop
into
mov
jno
cli
addr16
mov
hlt
add
push
int3
dec
push
push
test
mov
in
cld
mov
repz
adc
addr16
or
ja
icebp
and
cmp
or
adc
inc
pop
sbb
xorb
sbb
pop
lods
and
push
push
popa
xor
cmp
daa
jle
jnp
dec
scas
stos
dec
mov
fisubs
sub
inc
mov
fdiv
lods
mov
inc
sub
adc
pop
out
ljmp
cmpsl
jg
lods
xchg
filds
leave
jl
inc
pop
aam
inc
pop
jg
jl
cmp
popf
stos
les
sbb
jns
cmp
lcall
add
and
add
mov
mov
addr16
es
sub
pop
imul
out
rcrl
sarl
push
cli
xor
pop
outsb
adc
out
xchg
dec
je
aam
mov
xor
loope
jmp
sbb
dec
std
sub
insw
sti
test
cmp
idiv
pop
xchg
or
jg
test
lahf
in
fnstenv
mov
test
xor
xchg
lret
ret
std
pop
aas
fldenv
jmp
lret
xchg
es
mov
ljmp
xor
xchg
jns
dec
sub
push
stos
dec
mov
sub
das
mov
and
mov
pop
pop
add
dec
sbb
pop
add
and
add
and
daa
jnp
es
push
pop
jbe
sub
lret
sbb
add
aam
arpl
addb
lret
push
cwtl
or
sbb
sti
ljmp
inc
fsubrs
jg
mov
add
inc
push
jmp
int
add
xchg
and
pop
and
es
sbb
push
jno
imul
pop
es
out
ja
pop
fidivs
fwait
dec
sbb
fcompl
roll
sahf
dec
inc
shlb
cmpsl
mov
int
pusha
cmp
int
cld
aas
mov
adc
mov
int3
subb
fcoml
cs
jecxz
sub
test
mov
dec
xor
stos
xor
das
sub
lret
and
xor
sub
and
mov
bound
sub
jl
or
sub
xchg
xchg
fcmovnu
int
mov
and
shlb
cmp
test
cmp
daa
push
sti
shl
scas
das
mov
cmp
jle
xor
ds
cld
inc
shrl
mov
inc
push
pop
dec
int
push
mov
outsb
dec
mov
mov
lret
jg
sahf
addr16
mov
gs
daa
out
push
jecxz
inc
or
lahf
mov
mov
repz
pop
andl
pop
icebp
jecxz
es
mov
and
pop
sub
arpl
push
dec
addr16
xchg
aas
pop
das
stos
stos
cmp
pop
movsl
loopne
es
lahf
mov
adc
daa
mov
dec
xchg
aas
jmp
cmpsb
dec
cmp
add
or
pop
pop
sbb
jg
mov
jmp
insb
add
xor
xor
ljmp
out
sub
sbb
neg
mov
adc
ss
in
push
adc
xchg
mov
jns
fisttps
push
inc
test
fwait
or
mov
push
inc
xchg
sbb
push
sbb
xchg
mov
loopne
cmp
jb
mov
mov
xchg
decb
out
leave
fs
into
add
mov
xchg
sahf
add
xor
imul
test
in
mov
stc
xchg
std
orb
int
xor
sub
inc
cltd
frstor
imulb
stc
jo
jns
mov
sub
cmpsb
arpl
js
dec
jg
mov
not
sub
dec
mov
dec
or
leave
nop
stc
les
pusha
aas
stos
or
lret
insb
jne
inc
cwtl
enter
cmp
fs
imul
cmp
sbb
mov
jmp
std
negl
daa
loope
xchg
stc
jno
xchg
jmp
lcall
mov
les
lret
cmc
dec
jne
or
jbe
lock
insl
mov
nop
xor
or
out
mov
cs
dec
adc
xchg
sub
sbb
aas
adc
dec
push
hlt
mov
push
xlat
cmp
lea
mov
xchg
sbb
lods
scas
in
vmovlps
in
aad
sbb
call
inc
aaa
inc
pop
pop
mov
or
push
inc
adc
or
jle
out
xchg
cltd
pop
push
mov
aas
xchg
sbb
ljmp
lock
sahf
nop
jl
lds
in
shrb
clc
icebp
mov
mov
test
lret
cmp
mov
push
int
adc
loopne
dec
test
rcl
lods
mov
sub
pop
dec
sbb
leave
lahf
mov
cmp
jno
idivb
adc
loop
ja
inc
repz
rcr
dec
aas
push
fcompl
hlt
movsb
sbb
shrl
xchg
dec
xchg
push
jmp
and
jb
xlat
out
aad
in
lea
test
mov
mov
testl
xor
dec
nop
cmp
push
sub
mov
mov
dec
mov
and
xor
pusha
lds
jbe
cld
sub
loop
enter
leave
inc
lret
cmpsb
or
movsl
inc
in
iret
lcallw
cltd
ret
push
jge
pop
lahf
xchg
orl
or
xor
xchg
and
nop
xor
xchg
xor
inc
mov
nop
in
xchg
sbbb
int
pop
cwtl
mov
jmp
les
cs
cli
pop
loop
sbb
outsb
jge
lret
repz
pop
mov
gs
sbb
iret
and
push
mov
jecxz
sub
into
std
mov
ret
jl
xchg
jns
scas
adc
bound
lea
sahf
shl
xchg
je
cmp
pop
or
fiadds
subb
test
cltd
outsb
sbb
push
popf
xchg
iret
les
or
mov
sbb
imul
mov
in
std
mov
xor
sub
loop
mov
loopne
sub
pushf
fbstp
ljmp
in
ret
inc
mov
or
add
std
jl
fstpt
push
xchg
mov
jae
or
outsl
mov
mov
fldenv
xchg
push
cmp
push
dec
out
push
movsb
in
cmpsl
push
pop
jb
xchg
jb
out
xlat
inc
shll
cmp
push
xor
jmp
adc
jmp
inc
or
test
pop
add
arpl
popf
lret
push
lret
fst
mov
add
and
ret
insl
push
out
repz
dec
xor
jns
ljmp
or
lahf
mov
dec
push
xchg
mov
sbb
mov
mov
dec
loop
stos
pop
int
xor
andb
bound
je
adc
xchg
mov
jns
mov
fisubs
int3
mov
daa
mov
add
jne
mov
push
shlb
sbb
test
jbe
sbb
mov
add
insl
xchg
inc
pusha
lods
jmp
and
cmp
cmp
je
mov
or
inc
mov
cmp
jle
xchg
lods
mov
lods
outsl
xchg
mov
add
jo
test
lret
sub
push
xor
sbb
mov
lds
adc
or
test
out
je
dec
sbb
jbe
ret
mov
pop
mov
pop
cmpsl
call
mov
fisubs
sub
jbe
rorb
movsb
add
mov
stos
fldt
repnz
sbb
cmp
jo
arpl
jp
or
xorl
scas
add
xchg
xlat
in
xchg
xor
xchg
xor
jnp
mov
cmp
stos
jmp
pop
test
packssdw
push
les
dec
fisubrl
popf
addl
xchg
inc
or
addr16
mov
add
mov
sub
hlt
fwait
mov
cli
sub
and
adc
cwtl
jecxz
out
pusha
mov
js
in
icebp
imul
xor
adc
xor
in
les
mov
repz
sbb
loopne
mov
cwtl
jmp
out
or
xchg
pop
adc
jbe
mov
xor
jae
stos
scas
dec
xchg
mov
push
das
sub
mov
cmc
dec
inc
push
xchg
fadds
jecxz
cmp
mulb
fwait
sbb
or
scas
mov
sub
rcl
cli
jno
push
xchg
ss
lcall
mov
clc
pop
mov
sub
xor
jb
fs
ret
in
jnp
and
mov
jno
ds
cmp
pop
test
inc
arpl
and
push
jl
inc
aaa
pop
test
cwtl
in
scas
xchg
imull
subb
xor
pop
xchg
subb
mov
leave
ss
dec
fwait
in
inc
jnp
repnz
mov
test
adc
sbb
sbb
xchg
cmp
shrb
adc
dec
gs
int
movsb
and
mov
out
jns
stos
sbb
inc
aam
in
dec
fwait
jmp
outsl
push
mov
adc
repnz
mov
jmp
adc
push
lods
xor
cmpsl
and
sbb
push
mov
sbb
push
inc
cmp
and
dec
filds
ljmp
aaa
rorb
and
xchg
push
icebp
adc
mov
insb
mov
and
dec
lods
ja
bnd
repz
sbb
ja
sub
mov
push
movsb
mov
out
loop
cmp
jmp
inc
pop
lods
cmp
pop
sbbb
lcall
xor
cmc
movsl
xor
mov
rol
scas
cltd
push
outsl
loopne
gs
stos
lcall
and
push
cmp
xchg
jne,pn
addr16
mov
fs
adc
mov
scas
sub
inc
lock
jns
popa
sub
pop
ret
sbb
fs
enter
sub
push
ja
enter
mov
and
and
xor
out
push
add
in
popa
jge
leave
jge
dec
testb
mov
cmpsl
loopne
or
jl
mov
add
addr16
rcr
repz
ja
adc
adc
push
lods
xor
push
sarl
ss
mov
aad
fsubrl
out
dec
xchg
push
mov
loope
lock
jl
in
xor
rcl
out
xchg
sbb
inc
jl
shrb
dec
inc
sub
jo
fbstp
fmull
mov
cmp
add
test
lcall
fcoml
fs
mul
test
nop
lcall
xchg
dec
add
pop
mov
sub
mov
cli
xchg
and
imul
cmpsb
xchg
lcall
int3
out
pushf
xchg
into
and
xchg
fwait
jo
xor
jns
dec
add
push
inc
push
jae
cmpsb
push
mov
mov
xchg
sbb
std
inc
jge
xchg
stc
cmp
mov
xor
loope
mov
xor
cmpsb
pop
cld
dec
mov
mov
add
sub
mov
xor
in
dec
push
and
cmp
adc
mov
stos
notb
mov
add
lret
fcoml
test
test
pop
fisubrl
dec
js
mov
out
add
les
cli
imul
out
inc
shr
out
jecxz
adc
add
negb
and
mov
addr16
cmp
pusha
dec
std
stos
aas
xchg
push
cmp
adc
sbb
xlat
and
out
rcrb
iret
pop
jle
or
pop
and
nop
adc
sti
inc
or
and
add
and
fidivrl
push
gs
mov
mov
mov
orl
jecxz
pop
xchg
push
and
push
xor
or
js
les
xor
add
pop
testb
mov
cmpl
add
daa
daa
mov
shl
icebp
fdivl
xchg
adc
out
incb
pop
mov
sarl
add
retw
sub
sbb
mov
sbb
scas
jmp
dec
shll
repnz
in
mov
lahf
lret
fcoml
push
leave
out
test
push
jge
cmp
arpl
mov
dec
mov
mov
add
inc
pop
xor
jne
enter
xchg
mov
add
loope
faddp
std
divps
inc
push
or
roll
xchg
inc
sub
ja
insb
fs
pop
iret
sbb
stos
idivl
mov
push
ljmp
jecxz
test
cmpsl
aad
pop
js
xchg
mov
sbb
xchg
cmp
push
sbb
mov
int3
cmpsl
lods
cmp
std
lods
sub
or
dec
cwtl
insl
sahf
fistpll
mov
xchg
push
enter
sub
jg
sbb
dec
jae
popf
or
push
sub
and
dec
loopne
mov
gs
aas
clc
push
inc
into
icebp
jge
cmp
inc
lret
dec
xor
or
cmp
mov
dec
or
std
add
pop
pushf
lock
js
push
icebp
fistpll
cmpsb
adc
lock
sti
dec
cwtl
xor
loope
mov
adc
mov
mov
pop
out
cld
inc
add
and
mov
and
jmp
pop
add
stos
in
scas
xor
push
in
dec
mov
cmc
mov
cmp
rorl
and
sub
dec
sahf
sti
mov
or
call
push
xor
lock
and
popa
xchg
jo
xor
lcall
les
jmp
pop
dec
cmp
out
xchg
inc
push
shlb
fistpl
add
jmp
jnp
mov
data16
notl
shll
int
mov
sub
jnp
jmp
stos
jb
push
mov
fs
push
sbb
ljmp
cmpsb
in
out
cld
mov
jno
std
cwtl
rdpmc
xor
mov
test
js
sub
dec
into
mov
fldt
ss
loop
mov
and
lret
outsb
jge
mov
int
or
sbb
addb
testb
iret
movsl
ljmp
mov
fnstsw
xor
xchg
inc
xor
pop
adc
lahf
sub
jg
hlt
mov
dec
dec
cmp
rorb
pop
sahf
adc
into
popa
mov
lcall
loope
inc
sub
call
push
loop
adc
inc
sub
jp
fstps
inc
mov
shrl
cmp
rcrl
fldt
add
hlt
outsb
and
dec
sarl
insb
adc
inc
push
pop
lcall
mov
lds
in
pushf
adc
add
scas
movsb
xchg
aaa
mov
test
hlt
rorl
in
cmp
stos
add
int
and
sub
dec
pop
dec
lcall
sub
mov
pop
lods
jmp
mov
adc
subb
cs
adc
xor
fisubl
jmp
xchg
push
adcb
fnsave
adc
sub
jae
push
add
dec
mov
lock
rcll
dec
dec
mov
mov
cli
lods
fld
xchg
mov
xchg
push
js
or
pop
aas
loop
mov
leave
mov
fsts
lret
push
dec
lret
pop
inc
out
xor
aas
mov
or
insl
fsubrl
lahf
cmpl
lock
lea
and
adc
jnp
add
fdiv
ja
jne
aad
fimull
mov
fs
cltd
inc
jb
mov
fdivs
pop
lods
xchg
cltd
mov
dec
mov
sarl
cmp
ret
sahf
inc
ds
push
lcall
mov
push
cmpsl
push
iret
xor
popa
aam
jg
cmp
add
jbe
lods
sub
pop
dec
shlb
dec
mov
push
mov
insl
sbb
push
pop
movsb
adc
insb
dec
aaa
daa
cwtl
in
repnz
adc
pop
mov
push
aam
inc
dec
push
in
fldenv
sub
xchg
dec
jnp
pushf
push
inc
into
or
fs
inc
mov
divb
data16
jnp
sbb
pusha
cmpsl
adc
rcl
sub
lods
lds
test
insb
pop
shll
mov
and
push
rorb
cmp
cmpsb
pop
xchg
sbb
aas
sbb
out
pop
sub
adc
rcl
fstl
push
xlat
cmp
mov
dec
mov
sbb
add
fwait
cld
mov
push
pop
cmp
xchg
test
add
aaa
push
and
push
cmpsl
cmp
stos
dec
sti
iret
cmp
and
repz
jle
outsl
lds
lret
ss
dec
push
iret
leave
xchg
and
sub
rorb
je
nop
pushf
stos
out
pop
jecxz
popf
push
ret
aaa
jno
jmp
js
lret
outsl
fimuls
mov
jbe
mov
xchg
ret
test
sub
sub
lock
pop
dec
leave
xchg
mov
enter
nop
push
out
mov
out
add
ret
mov
pop
cli
or
sub
pop
hlt
sub
imul
aam
adc
popf
ret
rcll
std
imul
fisttpll
mov
cmpsl
push
xor
bsf
push
jecxz
int3
xchg
daa
sub
insb
mov
or
ficoml
push
sbb
or
xchg
loopne
pop
adc
pop
fwait
xchg
and
aad
aam
std
sbb
push
push
xchg
push
or
inc
lret
ja
mov
xlat
pop
push
in
mov
ds
mov
scas
and
dec
negl
rcrl
icebp
pushf
sbb
rolb
pushf
dec
shr
insb
mov
and
testb
pop
aaa
test
push
jne
imul
incl
push
stos
and
sbb
add
mov
loope
jg
push
adc
inc
mov
inc
popf
call
into
sbb
push
or
repnz
dec
adc
sub
sahf
rcrl
mov
int
adc
repnz
sub
dec
cmpl
repz
adc
sbb
cmp
pushf
data16
popf
push
sub
shrl
dec
std
xor
pop
jnp
jbe
pop
sbb
xchg
test
mov
movswl
push
sbb
push
test
mov
sbb
push
cmp
mov
pop
add
jmp
jmp
decl
jae
call
dec
cs
js
add
and
sub
push
inc
mov
ret
push
mov
ret
in
xchg
arpl
or
andb
roll
insl
iret
jno
aaa
xor
jl
cltd
or
js
lock
mov
dec
lret
fisubl
movsl
insl
fdivrl
adc
add
lock
mov
push
cmc
scas
pushf
sbb
dec
ret
test
mov
lea
jmp
insl
test
dec
loope
in
fcomps
cmpsb
outsl
imul
mov
cmpsl
push
sbb
ljmp
mov
xchg
inc
call
ret
imull
mov
enter
push
fisttpll
in
mov
stos
push
cmpsl
jmp
scas
sbb
jl
gs
lret
jbe
mov
jbe
cltd
jg
mov
xlat
clc
push
test
sub
addb
fsts
mov
mov
dec
lock
mov
xor
mov
cwtl
js
cmc
dec
cld
fisubrs
sahf
xor
ret
pop
adc
cmpsb
fdivs
jns
into
pop
cs
loopne
fstps
xor
adc
int
sbb
iret
mov
enter
lock
sbb
int3
aam
leave
in
in
and
add
rorb
push
leave
sbb
rcrl
inc
xchg
adc
ja
dec
sbb
jb
imul
loopne
movsb
mov
cld
lods
inc
movsb
into
jmp
icebp
xchg
sub
cltd
shrl
push
push
mov
mov
jp
xor
rolb
fisttps
test
cltd
ljmp
cmc
int3
lock
inc
adc
and
fisubrs
aaa
in
in
and
cmp
test
add
lds
cmpsl
mov
mov
add
lret
pop
call
and
inc
mov
cmp
or
cmpsb
cmp
dec
rcl
jp
xor
push
ret
popa
ret
test
repnz
mov
sub
jmp
dec
cwtl
mov
clc
mov
mov
mov
sub
inc
mov
sub
pop
xlat
push
cmp
push
sbb
mov
decl
ljmp
popa
je
lret
outsl
cmc
jo
xchg
loop
mov
aaa
inc
cli
pop
loope
xchg
outsb
push
out
cmp
xorb
mov
stc
xor
add
fisttpl
in
sub
inc
and
and
sbb
sbb
movsb
xchg
push
xor
adc
cmp
movsl
xchg
push
mov
mov
adc
pushf
cmpsl
call
lea
scas
xlat
mov
dec
add
xor
mov
loop
mov
aad
or
addr16
jno
inc
jp
aas
enter
adc
into
sub
mov
cmp
pop
sbb
cmp
adc
ret
stc
sbb
sbb
inc
xchg
out
push
dec
mov
scas
outsl
icebp
data16
sub
inc
xor
addr16
notb
dec
fisubrs
pusha
dec
int3
hlt
xchg
outsl
aas
mov
jge
add
sub
add
push
fldenv
mov
cmp
dec
jnp
sub
jae
jns
push
stos
jb
popa
mov
sub
xchg
int3
jo
xorl
and
xor
jmp
ja
inc
inc
mov
mov
adc
pop
dec
mov
sbb
sub
hlt
inc
dec
sub
fidivrs
fst
loope
inc
mov
xorl
lahf
sub
adc
js
xchg
push
add
loope
mov
orb
and
mov
adc
xchg
and
or
add
xchg
mov
loope
inc
dec
dec
stos
scas
lret
outsl
mov
push
lds
mov
mov
push
cmp
cld
test
xchg
ds
cmp
dec
out
jne
dec
incb
push
add
cmp
enter
fsubrp
jne
pop
jmp
pushf
mov
xadd
int
popf
cmc
pop
mov
xchg
test
jb
clc
jge
shlb
mov
mov
and
ss
stos
sbb
repnz
cld
adc
aas
stos
adc
std
pusha
add
mov
hlt
clc
shll
push
adc
out
pop
lret
pop
lret
sbb
lcall
fldenv
or
fwait
std
shl
and
mov
sbb
dec
notl
lock
dec
cltd
pop
xor
push
aas
adc
xor
cmp
test
adc
jno
mov
dec
pop
out
fbld
ss
int
dec
test
sbb
fs
push
mov
mov
adc
xchg
xor
dec
and
std
stos
aas
and
xchg
mov
movl
repnz
imul
add
xchg
add
dec
es
arpl
out
mov
int
pop
adc
aas
dec
in
xchg
push
add
pop
mov
in
mov
scas
xor
mov
js
inc
in
out
mov
ds
add
int
dec
xlat
push
gs
mov
inc
shll
xor
test
and
inc
mov
pushf
xchg
sub
in
or
fildl
fsubrs
mov
arpl
lret
fistps
mov
adc
xor
jmp
ret
pop
jae
sbbl
and
enter
mov
clc
cmp
or
insb
push
fsubrs
jl
mov
leave
jp
enter
daa
sti
fs
mov
add
test
mov
fwait
dec
inc
fwait
movsl
pop
pop
sahf
xchg
loopne
dec
mov
mov
add
adc
shrb
or
test
rcrb
pop
clc
cmp
repnz
pushf
xor
sti
jmp
mov
fistl
repz
stos
sbb
cld
add
repz
xchg
lods
pusha
fs
dec
fnsave
imul
or
in
jge
gs
lock
xchg
dec
adc
jo
in
setge
iret
lock
mov
jecxz
fcomps
adc
pop
xor
popa
test
aas
xchg
cld
xchg
inc
fmulp
test
faddp
cmp
or
xchg
mov
loope
inc
cltd
adc
fucom
adc
lds
inc
call
xor
js
mov
inc
dec
in
fsubr
lret
mov
faddl
aam
mov
ret
dec
jl
push
jo,pt
sbb
xor
sti
cmp
js
jmp
and
jns
ret
rorl
sub
jae
in
bound
ret
lahf
out
jl
and
hlt
pop
xor
mov
or
rcll
fstps
xor
shlb
xorl
pop
ja
rcll
add
adc
mov
dec
xor
sbb
xor
cmpsb
aad
sub
enter
lods
push
and
inc
pop
or
loop
jne
or
adc
dec
ds
xchg
stos
mov
imull
popf
test
int3
mov
into
lods
inc
mov
mov
add
and
cmpsl
jl
mov
push
xchg
mov
or
daa
cmp
out
pop
jno
daa
xchg
adcb
int
mov
add
dec
or
xor
nop
pop
and
push
dec
stc
mov
and
sbb
xchg
inc
sbb
sbb
lret
add
or
add
aad
mov
sbb
jp
inc
cs
mov
fnstcw
jp
movsl
ret
mov
mov
inc
lahf
dec
das
xor
out
mov
pushf
jns
pop
iret
jb
xchg
enter
xor
ja
jbe
addr16
out
xchg
scas
xor
sti
fiadds
insb
add
mov
je
nop
add
out
add
xor
enter
rcrl
loop
aad
sbb
jecxz
push
daa
lahf
outsb
loopne
std
xlat
nop
dec
sarl
pushf
int
push
adc
aad
push
add
lahf
ja
cmpsl
lds
pavgw
sub
icebp
push
mov
movsl
mov
add
test
ret
outsb
shlb
jns
dec
or
mov
and
xchg
fcmovnbe
lcall
add
lods
mov
sti
or
sbb
lret
xor
push
pop
fcomps
xchg
xlat
push
ret
jecxz
inc
sbb
adcl
leave
data16
and
xchg
fistl
sbb
and
adc
stos
es
xor
push
mov
mov
leave
into
cmp
mov
in
sub
xchg
mov
sub
adc
xchg
pop
push
mov
xchg
js
inc
pop
fldenv
add
mov
or
xchg
fwait
movsl
sbb
jl
int
jmp
and
mov
nop
xlat
dec
ds
sbb
push
or
js
lahf
dec
stc
sub
outsw
push
lcall
sub
scas
daa
or
movsb
dec
xchg
xchg
jae
out
mov
in
add
in
sbb
rol
sbb
lea
jns
mov
je
shl
jno
pop
jnp
xor
mov
mov
dec
mov
mov
add
sub
pop
ror
mov
lret
pop
jmp
mov
mov
jb
clc
sbb
lods
xchg
dec
jl
and
pop
sub
shl
mov
ror
inc
mov
rcl
in
add
cs
cmpsl
sub
cmpsb
push
jp
out
pushf
pop
fs
or
and
filds
push
pop
flds
xorl
lds
nop
xchg
pop
jle
xor
shl
fists
rcrl
repz
dec
xor
cs
mov
pop
sbb
lcall
mov
imul
xlat
hlt
aad
fsubs
lcall
xor
push
adc
and
dec
insl
into
jne
arpl
cmp
cs
test
psubusw
cmp
fisubrl
adc
daa
fiaddl
xchg
xchg
add
pushf
pop
push
scas
sub
pop
cmp
push
sti
cmp
in
mov
std
xchg
pop
xchg
iret
mov
or
and
xchg
int3
push
mov
xlat
push
push
cmp
sub
push
stos
fidivl
sub
push
mov
push
and
cmp
mov
mov
jnp
push
inc
sarl
dec
scas
push
sub
xchg
scas
push
shrb
stos
or
dec
xor
repz
es
mov
sbb
lods
adc
out
xchg
inc
lahf
and
rclb
push
fstpt
mov
adc
push
push
fldl
roll
jns
adc
fwait
loopne
mov
push
xchg
cmp
imul
jg
dec
jb
mov
push
ljmp
mov
mov
mov
loopne
inc
arpl
jb
pop
fnstcw
std
dec
scas
cld
inc
cmp
repz
lods
sub
mov
jg
sbb
adc
adc
insb
stc
les
jbe
push
sub
jmp
addr16
pop
enter
lcall
mov
inc
jnp
jp
xchg
std
test
enter
adc
mov
dec
or
or
mov
lods
add
mov
call
cmp
in
mov
push
mov
inc
je
neg
mov
xor
pushf
jno
stos
ja
add
jmp
dec
stos
push
xchg
int
sti
add
add
and
push
ret
dec
scas
cmp
insl
pop
cmp
sub
cmpsl
push
inc
pop
lea
cmp
shl
push
pop
subl
cmc
mov
pushf
mov
xor
in
pusha
enter
xorl
add
xor
fwait
dec
scas
jae
insb
xor
sub
mov
sub
xor
add
push
out
jle
push
scas
add
mov
inc
mov
jle
iret
dec
popf
xchg
movsb
jb
icebp
inc
mov
leave
xchg
jbe
orl
loop
inc
ja
fwait
insl
sahf
mov
and
dec
adc
popf
clc
sbb
sub
jns
loop
xor
cmpsb
sbb
jo
mul
testl
push
cmc
add
pop
push
sbb
pop
testl
jle
mov
icebp
xor
pop
test
arpl
adc
lods
mov
xchg
push
dec
in
or
stos
loopne
out
xchg
outsb
fcmovnbe
cmp
push
ficoms
push
jno
pop
adc
pusha
mov
repnz
xchg
push
hlt
xchg
mov
xchg
dec
test
mov
sbb
out
jge
lods
mov
xor
in
adc
rcll
lock
insl
loop
mov
sahf
jb
or
mov
fs
in
mov
aad
xchg
insl
cwtl
test
test
cld
pop
adc
and
inc
xor
rorb
mov
flds
mov
shlb
cwtl
mov
dec
sub
gs
stos
lock
jo
cs
sbb
out
or
int3
and
add
pop
cmp
adc
sub
inc
xchg
jnp
cmp
mov
xchg
inc
push
cmc
pop
into
xor
popl
adcb
inc
pop
jl
test
xchg
test
pushf
push
into
mov
push
cmp
in
push
and
inc
adc
aaa
jl
sbb
shr
cmpsb
jne
inc
test
fnstsw
push
stc
sub
xor
movsb
lock
lods
mov
outsl
inc
cmp
test
and
ss
adc
sbb
xchg
into
out
xchg
jns
sbb
or
push
test
adc
loop
outsl
cmp
cmpsl
inc
pop
fdivs
enter
cld
mov
push
imulb
js
ljmp
lods
notl
shlb
ret
xchg
adc
sti
data16
and
mov
push
clc
nop
cwtl
mov
push
shll
call
inc
jl
pop
cmpb
push
mov
mov
push
mov
or
movsl
mov
into
iret
jl
push
in
ficomps
stc
dec
push
outsb
movsb
pop
xor
add
test
jb
ja
jno
adc
or
cli
andb
push
jmp
xor
inc
cld
cmc
pop
mov
test
or
mov
icebp
insb
jno
add
sub
sbb
sbbb
test
aad
push
sbbl
cmpsl
lret
mov
add
into
jns
add
xchg
add
ds
mov
data16
xchg
test
cld
jae
popa
xor
or
sbb
mov
sub
fimull
repz
jo
cltd
call
adc
or
dec
shrl
mov
add
sbb
jns
scas
mull
out
push
mov
rcrl
fdivs
mov
mov
repnz
xor
lods
inc
js
in
sub
ret
dec
mov
dec
mov
sbb
adc
cmp
sbb
popf
or
sti
xlat
sub
mov
lds
in
orb
jbe
sub
or
fst
cmp
mov
xchg
push
aam
add
orl
je
mov
sahf
mov
fisubl
mov
sub
out
xchg
int
jb
jp
inc
les
mov
loope
fs
xor
push
cmp
adc
xchg
mov
cmpps
mov
xor
imul
pop
sbb
insb
das
sarb
test
pop
adc
or
dec
popf
mov
in
sub
mov
xor
sti
inc
scas
jns
mov
mov
dec
stos
cmp
cmp
ja,pt
data16
mov
hlt
call
and
mov
sti
fnsave
cld
push
xor
rcll
adc
sbb
outsb
add
imul
push
or
lcall
rcr
push
cmp
mov
jnp
add
fisttpll
cmpl
push
ds
test
mov
mov
and
mov
sbb
sub
daa
repz
and
incb
mov
push
cmc
fistl
cmp
in
mov
mov
mov
dec
add
push
jmp
adc
pop
jne
jo
push
ret
jo
jns
test
addr16
fiadds
sarl
mov
enter
ds
js
imul
jmp
add
ds
inc
loop
push
scas
add
je
test
mov
mov
dec
sub
ret
push
xor
hlt
add
push
int
push
mov
sbb
add
and
or
add
sahf
push
or
cltd
mov
mov
mov
dec
cmp
jae
push
test
pop
push
and
stos
and
rcrl
popa
ret
test
dec
movsl
inc
daa
mov
es
in
ret
jle
out
push
or
outsl
jb
movsl
jne
movsl
dec
and
push
cmovs
cmp
hlt
mov
out
adc
popf
inc
inc
adc
and
aam
insl
mov
mov
jae
test
sub
repnz
mov
inc
dec
add
inc
xchg
and
imul
add
xor
jl
xor
push
loopne
adcb
frstor
add
push
and
jmp
pop
cwtl
mov
mov
xchg
adc
pop
and
inc
mov
adc
add
stos
imul
clc
or
mov
cmp
fsubl
jae
mov
test
das
lods
add
sar
pandn
sbb
daa
mov
jecxz
push
sub
aad
dec
fbstp
outsl
and
or
pushf
pop
xchg
inc
xchg
pop
and
inc
add
out
cmp
xor
pop
mov
add
xor
fnstenv
cld
xor
adc
test
shrb
fadds
ret
fpatan
mov
xchg
inc
jmp
push
jp
and
or
push
jo
mov
jnp
adc
ficomps
iret
add
fwait
mov
out
daa
sahf
cmp
nop
jae
repz
fnstsw
cltd
jne
hlt
test
xor
mov
mov
out
xor
cltd
push
xor
insl
ret
mov
out
pop
adc
jge
fidivrs
imull
pop
mov
filds
leave
sbb
mov
and
xor
adcb
push
enter
add
sahf
sbb
idivb
rorl
or
push
inc
dec
or
push
push
jl
das
cmp
shlb
js
xchg
pushf
shll
push
into
iret
pop
out
test
mov
popf
clc
push
fdivrl
cwtl
sbb
call
pusha
jnp
repnz
cmpsb
in
lret
mov
cmp
dec
adc
mov
inc
aaa
cli
fs
shl
inc
or
in
in
ret
lds
out
mov
and
dec
mov
scas
vmovdqu
fs
popf
stos
xor
cmc
or
inc
aad
jb
add
jg
xor
pushf
in
arpl
mov
mov
inc
fwait
mov
aad
adc
or
aam
sub
mov
insb
pop
fisttpl
hlt
or
scas
ret
lcall
push
stos
shl
out
push
xchg
pop
scas
loopne
jb
or
jo
pop
jbe
aam
int3
dec
stos
sub
mov
pushf
imulb
mov
mov
pop
icebp
lods
fstpl
outsl
test
adc
xor
mov
movsl
rcl
repnz
jle
mov
mov
jl
pop
lock
add
pop
mov
mov
add
jbe
dec
in
xchg
pop
icebp
xchg
pop
outsl
leave
je
test
loope
adc
mov
jne
sti
push
lds
lahf
mov
dec
cmpsb
data16
test
movsb
push
lea
pop
jg
push
dec
cmc
jnp
xchg
pop
dec
lods
mov
xchg
sbb
mov
fists
in
xchg
out
notb
mov
sub
sub
mov
ljmp
fisubs
sub
cmpsl
inc
shrb
mov
fstpl
mov
movsb
out
scas
xor
inc
sub
fmuls
cmc
mov
and
cmp
jns
sbb
and
lea
test
fwait
dec
cmpsl
push
ja
call
ljmp
push
mov
xchg
sbb
ljmp
mov
sbb
lock
sahf
xchg
ljmp
jnp
xchg
loope
loop
inc
test
mov
shll
mov
dec
pcmpgtb
and
incb
sahf
test
incb
mov
mov
jle
dec
repnz
xor
sub
outsb
loope
sti
mov
pushf
in
or
xor
das
sub
sub
or
pushl
js
add
popf
shl
sub
jle
pop
dec
cmp
frstor
sbb
sub
adc
xorb
xor
mov
clc
mov
test
xlat
clc
push
repz
mov
mov
jns
popf
inc
sub
push
jb
sub
mov
cli
adc
push
hlt
pop
inc
cltd
sti
pop
or
inc
in
out
rorl
leave
mov
xor
sbbl
xor
adc
mov
rclb
ljmpw
test
sub
push
test
fisttpll
adc
sbb
mov
sub
mov
fists
cmp
lea
adc
outsb
scas
lcall
fcmovu
xchg
push
and
adc
insb
sub
push
xchg
push
xchg
inc
xchg
pop
test
and
cmp
daa
sub
stos
push
pop
imul
mov
cmp
mov
inc
mov
lret
jl
xor
stc
cmp
xor
jecxz
mov
cmpsl
or
xchg
lcall
mov
fidivl
pop
dec
stos
loope
ror
adc
jg
lret
jbe
fisubrs
pusha
sub
xchg
pop
xchg
xchg
cmpsl
frstor
mov
rcrl
jne
mov
pop
jle
cltd
inc
pop
mov
xor
sub
aas
sbbl
xchg
mov
sub
hlt
pop
lock
xor
ja
shl
fimuls
sub
in
fmulp
and
xor
jae
cli
push
mov
pop
test
stos
cld
repnz
push
xor
push
inc
shll
sarl
mov
enter
sub
mov
scas
adc
aas
int
or
enter
cmp
cwtl
jns
and
add
std
sbb
cmp
push
and
fidivs
outsb
cmp
xchg
cmp
lods
pop
mov
mov
subl
add
mov
jmp
push
cmp
add
pop
jnp
cmc
movsb
sbb
mov
sub
stc
mov
loop
pushf
sub
in
jae
lods
stc
sbb
lahf
pop
pop
push
mov
and
cmc
outsb
xchg
es
stc
dec
lea
push
rorb
mov
push
jecxz
xchg
inc
jne
fldl
or
out
out
and
rol
push
sbb
mov
fisttpll
adc
jmp
sbb
adc
dec
sub
pop
or
jmp
mov
movsb
xchg
push
rcrb
ficoml
dec
aad
xchg
loopne
add
pop
scas
pop
mov
fwait
pop
mov
aas
stos
dec
push
lahf
out
movsb
push
aas
mov
or
dec
and
jge
mov
add
inc
mov
cmp
mull
lods
into
scas
lret
clc
add
test
inc
sub
cmpsl
mov
fiadds
fists
sbb
adc
sub
pop
js
ds
repnz
es
and
movsb
mov
and
icebp
sarb
cwtl
and
dec
arpl
mov
xor
push
xor
inc
push
stos
inc
xor
and
or
mov
repz
jl
cmpl
jmp
lds
mov
xchg
movsl
int3
lds
out
enter
insl
adc
jmp
sbb
dec
xlat
sbb
les
jb
ret
sub
mov
rorl
mov
hlt
mov
lahf
gs
aaa
int3
in
add
lods
jp
cmc
push
or
adc
dec
dec
je
btc
push
inc
ficomps
rcrl
sbb
call
imul
and
sub
cmp
fs
push
js
scas
and
mov
push
pop
test
dec
test
ljmp
pop
stc
pushf
push
mov
ret
cmp
sub
pushf
cmp
add
jno
cli
mov
jne
fcom
cmpsl
daa
push
sbb
push
mov
or
push
sarl
xor
dec
dec
jbe
mov
sub
test
fnsave
inc
lahf
addb
push
enter
push
add
mov
mov
shll
lret
arpl
int3
xor
frstor
and
and
daa
loopne
push
or
xchg
loop
mov
xor
cmp
pop
cmp
mov
pop
adcb
fiadds
dec
stos
mov
mov
adc
out
mov
xor
outsl
cmp
sub
scas
lret
push
sahf
rolb
cmp
stos
mov
mov
lods
fcomip
js
ret
mov
and
int
loopne
sub
cmpsb
pusha
cmc
dec
aaa
out
fnstsw
mov
pop
loop
jge
orb
pop
inc
iret
cmp
and
es
push
mov
push
das
ret
dec
sbb
xchg
cmp
in
je
push
fldcw
loope
subb
mov
testl
cmpsl
jl
jp
dec
mov
pop
mov
inc
iret
fiadds
inc
dec
fwait
clc
imul
out
jmp
out
in
jle
scas
cs
dec
sub
imul
fmul
dec
push
mov
aaa
outsb
lret
mov
push
xchg
sub
or
dec
mov
pusha
mov
rorb
sbb
fs
mov
inc
es
aas
leave
fnstcw
rolb
mov
fistpl
repz
sbb
test
mov
mov
in
icebp
fstpl
dec
and
inc
mov
sbb
cmp
xorb
inc
addr16
mov
pusha
enter
pop
pushf
orb
fldenv
test
jle
in
loopne
jbe
add
shr
xlat
mov
imul
push
dec
cmp
ret
xchg
test
cs
mov
pop
and
add
int
mov
add
sbb
arpl
movsl
cmc
cmp
mov
and
imul
popa
shrl
icebp
xchg
and
popf
jl
aad
adcb
mov
push
mov
sub
cmpsb
call
call
or
xor
aam
jns
fstl
pop
pop
gs
test
lret
jmp
stos
cmp
mov
xchg
jp
fisttpll
outsl
push
insb
and
stos
jbe
jmp
ja
adc
adc
orb
pop
mov
imul
js
lock
or
xchg
add
push
shl
and
lea
int3
xchg
mov
loop
scas
pop
ljmp
xchg
mov
shrb
lods
imul
xchg
sub
stc
out
lods
cmpsl
pushf
out
sbb
or
mov
mov
pushf
push
jo
mov
std
add
loope
adc
aam
mov
add
enter
jnp
icebp
or
fcompl
cmpsb
or
loopne
mov
cmp
test
jg
sub
ljmp
mov
fnstsw
add
mov
dec
cmp
fisttpll
and
dec
cmp
mov
outsl
sub
fsts
xchg
pop
mov
push
jo
xchg
sbb
dec
ss
mov
mov
xor
pop
iret
lcall
repz
dec
in
sti
mov
addr16
repz
lds
sbb
in
cmp
ds
ret
cmpsb
nop
lcall
push
ss
lds
stos
std
data16
or
pop
push
xchg
arpl
aaa
cld
mov
and
clc
mov
add
and
xor
lahf
aas
out
cli
jns
jmp
xchg
out
inc
adc
mov
cwtl
adc
sahf
xchg
xchg
pop
push
mov
pop
test
xor
mov
xchg
push
scas
mov
inc
scas
loop
rorl
mov
in
jno
xchg
mov
hlt
aad
in
jns
mov
out
loope
jno
xchg
je
test
das
xor
movsl
sbb
mov
xor
dec
pop
popf
xor
add
mov
sahf
fldcw
jb
and
inc
icebp
push
pop
out
fwait
or
les
dec
cmp
push
ds
inc
cmpsl
into
cwtl
outsl
notl
cld
int3
jge
mov
or
mov
mov
lock
in
mov
jecxz
add
sarl
or
stos
and
dec
aaa
lret
jp
cltd
xchg
jmp
in
scas
leave
sbb
test
movsb
push
adc
mov
loopne
fisubs
dec
fwait
mov
aam
push
xchg
push
pop
and
orw
mov
xchg
push
test
sub
inc
stos
add
imul
ds
idivb
mov
lock
dec
cmc
mov
jmp
gs
or
mov
rolb
lcall
jle
imul
out
pop
fwait
repnz
mov
push
out
xchg
xchg
std
mov
mov
in
andl
xchg
enter
outsb
add
mov
add
add
dec
iret
inc
nop
cmp
pop
xor
cmp
enter
adc
mov
enter
pop
mov
mov
arpl
adc
mov
mov
fs
std
jecxz
jne
iret
and
inc
pop
sbb
add
repnz
stos
xlat
push
inc
lea
xor
adc
mov
push
aam
mov
test
mov
pop
imul
lcall
or
outsl
dec
outsb
jmp
jmp
jns
ret
rorl
fsubl
out
and
cmp
mov
js
mov
pop
sub
mov
mov
or
pop
mov
fs
mov
dec
fdivrs
je
xchg
add
cld
and
xor
test
or
jp
push
jne
inc
cmp
movsb
in
dec
sahf
or
push
add
lock
xchg
loope
lods
dec
stos
mov
sbb
lods
jl,pt
adc
and
mov
or
dec
push
xchg
dec
jae
xchg
insl
leave
ret
cmpsl
std
adc
cmp
jne
rcl
sti
test
std
icebp
insl
cmpsb
push
xor
adc
loopne
repz
jp
xchg
push
cmp
aam
jae
mov
xor
jp
xor
dec
imul
xor
add
mulb
sub
ss
push
or
outsl
int
push
xor
out
mov
adc
clc
lret
adc
pop
and
out
insb
fidivrs
or
xor
std
cmp
mov
adc
push
cmp
mov
jns
or
push
xchg
imul
or
inc
mov
mov
add
mov
xor
adc
in
outsb
mov
mov
mov
pop
pop
inc
sbb
out
lods
mov
loope
cmp
jae
lds
mov
clc
ror
mov
out
or
movsl
or
lods
xor
inc
and
dec
in
sbb
inc
addr16
push
repz
adc
mov
ja
sbb
push
vprotb
aam
mov
sti
cmpsb
inc
add
adc
cmp
cld
jmp
and
ret
mov
xchg
mov
movsl
popf
cmpsb
arpl
stos
add
call
mov
loop
out
cwtl
add
mov
dec
loop
pop
fcomp
inc
sbb
orb
lahf
xchg
jecxz
fs
jle
push
shrb
push
pop
cld
mov
lea
insb
adc
jp
pop
insb
cmp
push
or
cld
movsl
add
loope
and
clc
xchg
outsl
std
cltd
outsb
adc
push
hlt
insl
fwait
shrb
sub
mov
adc
sar
loopne
cmpsl
movsl
adc
xchg
and
imul
dec
pop
or
orb
and
add
enter
mov
outsl
pushf
xchg
insb
adc
hlt
xchg
into
mov
mov
mov
jp
aam
dec
push
mov
fcomip
sub
mov
push
add
ljmp
add
xor
xor
movsb
pop
inc
xor
clc
xor
test
push
mov
cld
and
cld
orl
dec
imul
out
adc
scas
test
aaa
cmp
inc
push
out
in
mov
test
mov
lret
or
shlb
ljmp
movsb
or
mov
sub
movsb
dec
fisttps
je
sahf
sub
je
sbb
mov
dec
in
push
subl
mov
lret
es
lods
adc
adc
test
into
rcrl
sub
outsb
loop
sbbl
scas
adc
jmp
lret
push
enter
xor
pusha
mov
lea
inc
lahf
adc
dec
das
pop
cwtl
adc
mov
sub
int
jge
int
or
gs
stos
mov
sti
outsb
mov
loop
mov
insl
ret
xor
xchg
lahf
mov
jmp
mov
xor
sub
ja
and
dec
subb
sub
xor
shll
sti
sti
xchg
movsl
insb
mov
inc
jecxz
cmpsb
cli
xor
and
adc
dec
jnp
jne
cmp
jo
push
cmc
push
stc
std
ljmp
dec
mov
mov
fadd
dec
push
pushf
std
pop
jo
mov
les
fwait
adcb
repnz
fsubl
in
and
jge,pn
ljmp
adc
mov
cmp
or
mov
jb
lods
jno
inc
hlt
dec
mov
rclb
push
push
in
jb
out
aaa
cwtl
push
mov
mov
iret
mov
push
inc
push
imul
dec
mov
out
add
ret
inc
insl
aam
or
inc
inc
in
hlt
or
cmpsl
sbb
mov
mov
loope
or
sbb
jl,pt
ja
xchg
inc
shll
test
mov
mov
adc
push
push
and
rorb
sbb
mov
xor
adc
pop
enter
mov
sub
arpl
jecxz
jb
and
mov
imul
dec
clc
mov
pop
loope
sub
fs
dec
icebp
xor
fst
jb
mov
popf
and
xor
mov
mov
sub
cmp
pop
insl
cltd
pop
icebp
mov
int
shll
jp
mov
mov
jne
outsb
sub
or
adc
pusha
xchg
insl
bound
and
fidivrs
xor
mov
push
adc
push
scas
dec
mov
aaa
out
dec
lcall
or
mov
iret
filds
add
cwtl
xchg
shlb
mov
loopne
repnz
lock
arpl
push
and
xor
rolb
mov
xor
jl
test
mov
jbe
mov
es
add
into
xchg
jbe
mov
sbb
pop
popf
in
inc
jbe
cs
ja
adc
pushf
sub
aas
jle
sti
cmp
mov
shr
enter
es
xchg
push
sbb
ret
icebp
es
pop
movsb
mov
arpl
and
sub
enter
sub
enter
lret
push
jbe
push
idivl
inc
dec
push
das
push
loop
aas
jno
push
add
lods
in
cltd
fs
xchg
lock
push
leave
lock
xor
jecxz
xchg
jle
or
ret
adc
arpl
xor
in
adc
lret
std
sub
lods
je
mov
dec
js
out
data16
ss
push
mov
xor
adc
int
aaa
jge
lcall
rcll
add
shlb
adc
jecxz
push
cmp
roll
lret
dec
lahf
je
inc
loope
dec
xor
cmp
js
cli
or
or
inc
mov
and
xor
pop
in
roll
cmpl
mov
lahf
fcmovbe
test
mov
push
mov
andb
aaa
imul
sub
pop
dec
pop
jne
mov
ss
movsb
fisubl
fiadds
leave
add
jne
ljmp
mov
imul
lcall
jge
cmp
xor
sub
dec
ds
stos
pop
cmp
xor
mov
fcoml
or
push
stc
ss
mov
in
sbb
add
xchg
mov
dec
shll
mov
jb
sbb
xor
jg
bound
xchg
inc
cmc
hlt
bnd
ds
movl
add
es
inc
sbb
mov
pop
xor
dec
shrb
mov
lds
or
sub
out
shr
imul
push
sti
stos
out
and
mov
jne
loop
xchg
jp
js
mov
and
cmp
addb
rcr
iret
sub
adc
aam
test
xor
mov
pop
add
xor
jle
fsub
sub
mov
rclb
adc
or
insb
dec
adc
iret
mov
loopne
cs
xor
insb
sub
aad
stos
aad
ljmp
lea
add
loop
sub
inc
mov
ret
movsb
add
cmpsb
inc
jo
and
out
sub
dec
mov
stc
cwtl
mov
fcomps
sub
xchg
aas
sub
test
gs
cmp
dec
daa
cs
dec
mov
add
mov
sbb
sahf
aas
mov
adc
mov
xor
push
sbb
xchg
sub
test
cwtl
fdivs
daa
dec
dec
lahf
ficoml
xchg
hlt
mov
add
dec
pop
in
mov
std
push
and
xor
stc
mov
in
fistpll
mov
movsl
push
xor
or
add
mov
mov
inc
adc
jb
lcall
lret
mov
jp
jns
mov
mov
lock
pop
int
jb
jno
iret
mov
pop
add
mov
mov
test
mov
inc
movsl
imul
mov
push
sbb
fisttpl
adc
or
pop
leave
test
xor
lret
xor
stc
sahf
mov
cmpsl
push
call
das
jl
das
dec
pop
jae
fmul
jge
mov
add
jge
inc
les
xchg
inc
mov
fisubl
andb
mov
push
inc
in
movsb
pop
add
leave
push
repz
fistpll
lcall
mov
mov
push
loop
iret
and
push
mov
dec
sub
push
pop
ja
out
xchg
cld
fiaddl
inc
popa
jno
pop
add
rcll
mov
lds
leave
xchg
clc
push
lea
adc
mov
insb
jno
stos
mov
xor
fs
jmp
sbbb
sbb
aas
sbb
xchg
ficomps
xor
fdivrl
out
pushf
xchg
dec
cwtl
into
js
sbb
test
int3
cli
sub
push
fstpt
dec
jmp
in
iret
nop
xor
jae
or
or
das
inc
add
test
adc
clc
jae
popa
sbb
sbb
movsb
rcll
jg
xchg
add
inc
shl
jo
stos
push
cld
sbb
push
ret
cmp
lret
insl
clc
push
cmc
js
call
insl
cmp
jmp
pop
pop
mov
or
into
xchg
sub
repnz
sbb
ret
pop
dec
pop
mov
movsl
add
addr16
adc
rcll
mov
adc
jne
mov
add
inc
pop
popf
cmp
sti
idivb
out
adc
in
xor
xor
into
addl
mov
mov
ljmp
xor
into
shll
and
sub
mov
nop
pop
out
cmp
call
iret
xchg
pop
jl
mov
das
mov
jmp
ljmp
pop
adc
leave
xchg
mov
xchg
push
lret
cmp
addr16
repnz
pusha
sbb
bound
into
cld
andb
sti
mov
sbb
jae
fidivl
lahf
and
pop
add
in
mov
pop
dec
cmpsl
pop
lahf
inc
jmp
sbb
sub
cmpxchg
cwtl
inc
and
in
dec
and
cmp
dec
push
mov
jb
idiv
lods
lea
cmp
dec
ja
sbb
aaa
mov
push
mov
inc
fdivl
mov
inc
cmp
lahf
sub
stc
lock
pop
pop
xchg
in
lea
fisttps
icebp
in
jecxz
push
dec
xor
dec
into
push
mov
xor
jl
decb
lahf
inc
nop
mov
jno
xchg
orl
mov
rcrl
push
sbb
mov
sub
pop
stos
shrb
xor
mov
cmc
inc
aam
pop
mov
lods
test
xchg
mov
hlt
pop
movsl
mov
and
aad
sti
ljmp
test
fisubs
cmpsb
out
jl
mov
add
gs
sbb
mov
sbb
jno
or
add
popa
inc
scas
test
mov
test
and
push
mov
lods
cli
cli
fcoml
pop
inc
cmpsl
test
test
mov
xchg
scas
add
add
test
pop
lds
test
lcall
push
loop
push
aad
adc
cli
xor
loope
and
mov
sub
fdivr
jo
push
shlb
cmp
xchg
das
push
mov
xchg
sbb
fwait
scas
mov
cmp
or
lahf
ljmp
xchg
jbe
pop
add
out
addl
jp
outsl
push
sarl
xor
pushf
cvtdq2ps
pop
push
test
push
jge,pt
jno
add
movsb
cld
pop
sub
shll
sbb
lods
test
mov
push
cmpsb
std
mov
mov
xchg
push
fdivs
int3
mov
movsb
push
sub
cltd
out
clc
mov
into
sub
fisubrs
and
fcmove
fsubrl
out
aad
inc
jae
jle
fsubrs
scas
adc
lods
xor
mov
or
daa
sbb
or
sahf
mov
adc
lcall
cmp
dec
aad
sahf
stos
out
sbb
sbb
mov
xchg
fdivrl
bnd
push
and
sti
lcall
push
xor
shlb
pop
lds
xchg
add
aad
hlt
movl
das
mov
das
test
adc
xor
mov
stc
mov
pop
xor
sub
stos
cli
push
scas
or
cs
lock
adc
repnz
adc
push
mov
push
loope
popf
mov
hlt
cmp
sub
adc
mov
jno
jns
mov
pop
fisubs
xchg
adc
push
sbb
enter
in
lock
mov
or
mov
jmp
xchg
leave
nop
imul
shlb
push
imul
sti
aas
pop
jns
xchg
xchg
in
aad
test
jmp
cmp
pop
and
mov
insl
addl
pop
fwait
dec
pop
bound
ds
daa
fwait
nop
cmpsl
aaa
cmp
xchg
in
xor
shl
mov
int3
cmp
mov
sarb
pop
mov
lods
sbb
sbb
dec
xchg
and
dec
ret
cmpl
push
xchg
dec
and
shrb
inc
clc
jns
fprem
mov
lcall
int
sbb
in
loop
mov
mov
std
insb
out
pop
test
or
jecxz
fmuls
repnz
pusha
mov
adc
push
cwtl
loop
jle
xchg
jp
adc
bound
jb
sub
sub
nop
mov
adc
xchg
cmpsb
mov
cwtl
loop
imul
pop
lahf
lods
mov
lock
out
dec
andl
mov
lea
ror
test
mov
fisubs
push
test
enter
fsts
pop
nop
mov
xchg
inc
pop
push
sub
sbb
and
dec
ret
fildl
xorb
jmp
and
and
ja
loope
ja
aaa
test
push
mov
aaa
or
fs
icebp
hlt
into
pop
add
mov
or
or
mov
loope
xchg
add
shlb
jecxz
push
jnp
jl
aam
into
clc
sub
orb
mov
fiaddl
lret
negb
sub
push
push
lods
mov
dec
sub
aad
and
add
sti
mov
xchg
ss
xor
xchg
sub
jo
jg
pop
and
jno
cmpsb
sbb
mov
out
add
pop
inc
cmpsl
inc
xchg
cmp
repz
das
add
xchg
push
leave
mov
cmp
lods
or
sarb
shlb
cmp
imul
add
or
hlt
cwtl
test
mov
push
inc
pop
and
jnp
fcom
es
pop
data16
or
jae
aaa
mov
inc
xchg
ret
xor
lods
mov
shll
out
pop
into
lea
inc
xchg
cmpl
inc
vmwrite
mov
stc
and
out
xchg
ret
andb
mov
dec
das
sub
inc
cmp
jbe
sub
ret
into
sbb
xchg
nop
cmpsl
inc
sbb
clc
lods
cmp
jnp
push
addr16
push
or
das
pop
out
mov
and
sahf
std
adc
xchg
subl
xlat
call
shlb
popa
cltd
mov
jmp
push
inc
mov
dec
xchg
sbb
mov
and
pop
pop
push
sub
xchg
dec
mov
je
fisubl
pop
rorl
jg
js
cmpl
iret
popa
inc
dec
je
fildl
xchg
jp
gs
fadds
cwtl
xchg
leave
test
repnz
insl
adc
div
jp
scas
adc
mov
adc
dec
out
xchg
mov
push
fcoml
aad
inc
or
sub
addb
pop
imul
xor
and
sbb
jg
leave
cmpsb
in
test
push
leave
cmp
xchg
pushf
cmp
js
mov
lahf
ret
lahf
pop
stos
pop
das
fidivrl
cmp
jne
xchg
sub
xchg
lret
imul
cmp
cli
mov
cmpsl
inc
imul
and
repnz
mov
xchg
lods
sub
adc
rolb
fcomip
fistpll
mov
add
cltd
ja
mov
jo
insl
std
mov
sub
iret
pop
je
adc
push
fnsave
fxch
test
jecxz
mov
xlat
fcoms
push
push
sub
and
push
pusha
je
mov
es
icebp
pop
daa
imul
inc
data16
dec
sarl
sar
sbb
ret
aas
mov
jp
push
aaa
dec
xchg
mov
lods
pop
dec
test
adc
movsl
jbe
and
and
push
addb
sbb
lret
leave
pop
sub
push
sar
sahf
pushf
cmp
frstor
or
add
jecxz
movsl
mov
pop
jnp
or
jns
lret
xlat
sub
into
in
sub
xchg
pop
hlt
xlat
dec
xchg
stos
aam
and
xor
addr16
push
fwait
inc
add
js
push
mov
lock
mov
test
pop
fdivrs
add
add
test
xchg
mov
xor
jae
fisubl
mov
out
rorl
repz
cmp
mov
dec
stc
jae
push
jb
xor
pop
xchg
sbb
jl
int
xor
daa
dec
push
lret
lea
js
and
pop
jecxz
dec
insb
dec
cli
lret
jo
inc
adcb
dec
or
dec
test
popf
sub
jnp
rol
insb
and
xor
jb
mov
cmp
outsl
mov
pop
pop
pop
cmp
mov
sbb
scas
out
ja
pop
loope
test
out
lea
pop
lahf
xchg
scas
mov
mov
push
lds
add
push
push
das
scas
sbb
jns
dec
scas
fwait
out
daa
xor
fisubs
pop
lahf
xchg
notb
fmull
sti
lea
mov
out
and
pop
popa
sbb
xor
repnz
outsb
sub
cmp
inc
mov
mov
lret
mov
rolb
xchg
mov
adc
mov
and
inc
shlb
out
in
lret
jne
jo
test
jae
aas
data16
call
pslld
and
movsb
hlt
push
fmul
mov
push
jns
jle
arpl
sbb
fcomps
mov
ja
mov
dec
mov
jg
sub
mov
sub
mov
and
push
rcl
mov
pop
pop
xchg
popf
ljmp
jmp
insl
mul
or
or
stos
ja
adc
iret
sub
stc
and
lret
popa
pop
fwait
test
insb
mov
repnz
inc
fwait
imul
in
mov
into
mov
mov
sub
lods
jne
xor
inc
sbb
addr16
mov
data16
iret
sbb
shlb
sbb
xor
jbe
cmp
fiadds
iret
lahf
mov
test
pusha
sbb
jne
add
jb
fcmovnu
std
imulb
out
fcomp
ret
lret
ret
icebp
addr16
subl
pop
cltd
xchg
adc
test
imul
adc
addr16
popa
adc
fcoml
cmp
or
das
insb
sub
lods
pop
mov
push
mov
sbb
fstps
sbb
add
icebp
cltd
lods
test
sub
mov
inc
dec
xchg
icebp
jb
cmpl
xchg
mov
lock
push
out
mov
xchg
mov
repz
xor
ljmp
in
fsubr
or
into
mov
jge
or
fs
cmp
xchg
ret
add
in
cwtl
xchg
cmpsl
mov
fildll
ss
lret
mov
xor
sub
stos
dec
cwtl
push
sahf
push
xor
push
jp
sub
pop
push
xchg
mov
mov
lods
push
mov
jge
movsb
adc
jnp
or
mov
push
mov
out
ss
pushf
push
fldl
repz
push
cli
jg
lcall
inc
mov
popf
lock
ret
in
push
pop
dec
inc
bound
ljmp
and
shll
imull
stc
jne
add
test
test
sub
jbe
mov
hlt
data16
daa
popa
xchg
cmp
push
and
in
hlt
push
pop
mov
xchg
cld
ljmp
scas
add
add
lret
adc
fdivrs
js
test
jecxz
hlt
test
shll
mov
add
xchg
push
test
es
movsb
out
cmpsl
loopne
stc
and
jo
cmp
ss
rclb
cli
lahf
bound
icebp
adc
imul
add
aad
push
mov
push
inc
pop
bound
mov
pop
outsl
xor
call
xchg
shll
lods
xchg
lds
xchg
test
xchg
or
daa
mov
jecxz
push
sbb
cmp
sub
inc
add
and
gs
push
mov
mov
mov
push
mov
xor
lds
xor
iret
test
outsb
addr16
xchg
mov
mov
cmp
jb
clc
dec
into
sub
adc
add
pop
push
xchg
rep
or
push
jns
leave
mov
int
call
lret
test
test
xor
mov
sbb
add
mov
in
push
imul
jo
loop
dec
sub
outsb
sti
mov
popf
xchg
les
adc
sub
pop
ss
xor
mov
or
ds
idiv
rcrl
mov
shr
xor
or
pop
scas
cmp
and
mov
or
jge
pusha
pop
outsl
into
fs
jo
or
pop
push
cltd
cmp
push
popf
enter
in
cmp
mov
jecxz
dec
or
dec
test
scas
out
test
push
mov
inc
lods
dec
es
repz
push
mov
cmp
pop
das
cltd
jno
cmpsb
lret
std
mov
outsb
and
sahf
test
cmp
mov
aas
xchg
and
sub
sub
ret
rcl
cmp
dec
cmp
testl
sysret
fmull
xor
xchg
cmp
pop
das
jb
cmpsl
mov
nop
arpl
aaa
pop
mov
xor
imul
rorb
int
pop
pop
sbb
inc
xor
lds
test
pop
dec
cmp
mov
jb
inc
in
daa
xor
pop
cmp
push
movl
pop
dec
mov
xor
ret
ret
movsl
rol
sbb
movsb
in
outsb
pop
jle
cli
mov
xchg
xchg
mov
out
inc
aaa
and
gs
pop
stos
shrl
sbb
fs
ja
cwtl
or
movsl
add
push
negl
cmp
mov
pop
nop
fdivs
out
in
dec
mov
mov
mov
decb
aam
incb
mov
sbb
out
adc
dec
or
mov
add
add
jmp
xor
das
jbe
lock
mov
add
add
and
cmpsl
pop
out
jp
sbb
in
out
lods
dec
pop
inc
and
sbb
test
push
push
testb
inc
mov
lods
cli
push
out
leave
adc
jge
sbb
mov
jg
cmovp
lret
pop
push
mov
and
mov
cmp
pusha
out
popf
cmpsl
add
push
xchg
inc
mov
mov
push
jecxz
rorb
pop
lcall
xchg
cmp
aam
out
in
movsb
inc
jge
in
lds
shrl
pushf
insb
mov
das
pop
notb
jns
xchg
frstor
inc
or
out
aaa
xchg
lods
add
sahf
mov
in
mov
aas
outsb
sub
ljmp
lods
fidivrs
rep
jmp
mov
movsb
rol
pop
hlt
jp
sbb
scas
xchg
jmp
ljmp
xchg
or
cli
cmp
repz
mov
nop
aam
imul
ficompl
popa
xor
xchg
out
sarb
call
push
fnsave
jo
insl
pushf
loop
jecxz
mov
push
insb
cli
sub
sbb
mov
add
mov
jg
cli
add
or
cmpsl
clc
mov
cmp
mov
hlt
test
sbb
icebp
lcall
mov
mov
push
popf
and
pop
inc
sub
mov
sub
jnp
sub
imul
xchg
rorb
das
imul
hlt
push
mov
push
inc
repnz
sbb
fbstp
sub
jb
pop
xor
loope
sub
lock
popf
clc
mul
or
nop
out
push
jmp
mov
repnz
data16
push
xchg
xchg
pop
pushf
into
cmc
pop
aad
aas
lcall
adc
mov
test
sbb
add
push
cli
icebp
jne
aaa
xor
dec
jnp
pop
inc
shll
or
add
mov
cmpsb
mov
jecxz
nop
jno
rorl
mov
adc
push
lods
outsb
fdivrs
xchg
mov
xchg
or
pop
enter
mov
pop
pusha
pop
jmp
pop
push
pop
aam
arpl
popf
lcall
push
inc
enter
jmp
lahf
adc
ds
mov
jmp
cmpb
mov
in
jo
mov
pusha
inc
mov
ficomps
outsl
sbb
repz
ficompl
xchg
push
xor
sbb
sbb
sub
stc
in
mov
fucomi
fcmovnu
stos
and
in
lods
lds
inc
dec
out
sub
xchg
sbb
std
mov
mov
sbb
lds
in
or
fistl
mov
adc
in
mov
leave
adc
push
imul
movsl
mov
ficomps
insl
les
pop
xor
mov
in
gs
cmp
out
cmp
hlt
mov
divl
or
cmp
in
popa
aad
imul
sbb
fsub
fstpt
movsb
and
dec
leave
sub
cmp
sbb
or
xchg
cmp
or
or
nop
repz
in
out
mov
stos
mov
mov
pushf
jecxz
mov
xchg
push
popa
fwait
mov
sar
dec
sub
mov
roll
mov
js
les
push
adcl
in
sub
jmp
lods
mov
lds
rcrl
sarb
mov
xchg
xchg
scas
cmpsb
pop
in
push
les
lock
sbb
mov
iret
mov
imulb
iret
push
sbb
and
mov
adc
push
into
outsl
inc
and
movsb
out
sbb
loope
mov
rcrl
or
fwait
clc
sub
insb
xchg
das
addr16
xlat
mov
fnstsw
or
int
movsl
mov
xor
jns
push
add
xor
push
sbb
jno
pop
outsb
shrl
rolb
leave
pop
fdivp
cmp
push
mov
xor
aam
mov
mov
inc
out
mov
insl
repnz
mov
or
adc
test
lcall
repnz
or
dec
lods
jnp
lret
fists
daa
or
mov
jne
clc
ficompl
cmpsb
shll
hlt
adc
sar
data16
mov
in
aaa
rclb
loope
lock
jae
xor
in
jne
and
sbb
into
pop
fnstcw
cli
inc
js
dec
mov
adc
loopne
jmp
fistps
mov
out
push
insl
mov
dec
andl
lods
mov
insl
mov
sub
mov
xor
pop
rolb
int
sbb
push
add
decb
cmp
or
inc
mov
gs
stos
mov
add
mov
pusha
jbe
popa
aas
push
sub
or
cmp
pop
xor
jbe
fdivrl
lret
stos
push
push
inc
inc
sahf
iret
imul
int3
insl
out
in
jmp
xchg
jo
adc
or
fs
mov
xchg
insb
mull
fildll
add
sbb
xchg
imul
xchg
lods
add
jnp
out
xlat
cmp
ds
pop
lret
inc
adc
mov
pop
dec
shl
movsl
gs
bound
lods
push
icebp
dec
shll
cmp
mov
std
pushl
mov
stc
bnd
mov
push
sahf
jl
xor
xor
dec
push
leave
leave
jge
insb
dec
and
subb
xchg
lahf
mov
push
or
and
xlat
sbb
ljmp
adc
les
rsqrtps
cmp
mov
push
repz
sbb
jns
jne
and
add
nop
pop
inc
inc
push
jae
mov
incb
test
mov
outsb
stos
inc
pop
outsb
lods
fldenv
inc
divl
iret
sub
xchg
pop
xchg
push
cld
sub
xchg
ss
sarb
call
push
fdivp
xchg
inc
add
pop
mov
jg
mov
scas
mov
inc
sbb
xor
insl
out
into
mov
sub
push
pop
mov
and
or
cld
test
mov
or
rcll
mov
jnp,pt
add
push
mov
pop
icebp
int3
or
out
shll
and
repnz
add
inc
std
ret
ds
pop
cli
xchg
nop
sub
cmp
inc
sbb
in
lods
xor
pop
adcb
push
jl
mov
add
movsb
push
cmpsl
test
ljmp
push
insl
xchg
jbe
cmpsb
clc
lcall
idivb
stos
lods
mov
fwait
or
bndldx
outsb
inc
mov
out
imul
stc
cmpsb
xchg
dec
jbe
xchg
pop
test
out
sbb
mov
mov
push
pop
lds
cmpsb
shlb
lds
cwtl
pop
mov
lar
mov
insl
or
out
lods
push
loop
and
loopne
jl
jecxz
into
jnp,pt
in
xlat
sub
sbb
or
mov
leave
dec
sub
out
cmc
addr16
cmc
cmp
lods
push
rcrb
stc
iret
fwait
jb
push
mov
mov
sbb
cmpsb
lea
adc
mov
dec
or
push
roll
fcoms
in
fdivl
in
xchg
aas
fildll
aaa
outsl
pop
outsb
push
dec
adc
jmp
add
inc
pop
popf
pusha
addr16
add
fistl
stos
jmp
shlb
sub
or
ja
mov
into
xchg
cmp
cmp
insb
test
mov
mov
mull
dec
shll
stos
in
pop
inc
jo
pusha
push
dec
enter
push
push
mov
xchg
push
dec
cmc
sbb
mov
inc
pop
mov
adc
aaa
sbb
pop
sub
mov
fists
aam
jp
outsb
test
lret
imul
cltd
jbe
in
jp
enter
or
add
test
xor
rcrl
cwtl
popa
push
pop
sub
jae
pop
add
or
es
iret
les
call
adc
inc
xor
cli
rcr
adc
fmuls
es
add
repnz
fwait
sbb
pop
mov
mov
adc
adc
mov
cmc
pop
inc
rolb
mov
pop
lcall
mov
lcall
ljmp
fimuls
stc
mov
push
and
in
sub
ljmp
shr
xor
and
out
fmulp
sub
push
lds
idivl
add
movsb
outsb
insb
or
scas
and
stos
push
inc
mov
xchg
sub
inc
add
mov
int3
adc
mov
std
stos
fsubs
push
in
imull
push
das
xor
jbe
lahf
inc
movsb
daa
andb
loop
cli
cs
pop
scas
in
std
nop
jae
ret
nop
mov
int
lock
inc
mov
adc
dec
sub
in
jb
pusha
adc
enter
sbb
or
je
icebp
mov
sub
jp
mov
clc
icebp
movsb
xlat
mov
mov
fidivrl
dec
push
rolb
dec
adc
ja
into
flds
enter
mov
cld
mov
lret
loopne
loopne
mov
repz
xchg
cmc
sub
je
and
jnp
sti
sbb
xchg
test
add
pusha
leave
jns
add
scas
cmp
dec
add
in
push
daa
fdivl
adc
mov
mov
push
fstpl
sbb
mov
sub
adc
xlat
push
pop
and
dec
sub
out
jns
cmp
mov
and
push
pop
ds
fcomp
imul
sahf
hlt
fucomi
pop
jmp
ja
add
add
pop
jge
mov
stc
aad
popl
mull
adc
int
jne
push
jle
mov
adc
sahf
movsl
gs
repnz
jp
push
sbb
call
or
add
outsb
adc
cli
cmp
cmp
mov
rorl
sbb
jmp
nop
xchg
xchg
xchg
pusha
pushf
jne
push
cmp
sbb
push
xchg
movl
mov
test
jb
sub
shr
or
iret
enter
jae
mov
cli
xor
xor
test
fnsave
cmp
test
repnz
adc
jno
jle
xchg
shlb
movsb
fidivs
xor
lods
mov
inc
repz
jl
sub
fmull
mov
fbld
inc
js
dec
pop
stc
adc
mov
xor
dec
mov
cli
pop
fldl
add
data16
std
and
ret
add
adc
ret
xchg
fwait
inc
jle
pusha
push
inc
cmp
mov
sbbl
mov
arpl
outsb
sub
mov
or
outsl
stos
sub
test
cmpsl
sbb
icebp
mov
sub
popf
stc
jae
sbb
icebp
push
mov
cs
adc
out
lock
inc
xor
inc
cmc
push
and
xor
enter
pop
add
push
pop
fistpl
out
sbb
inc
push
scas
inc
push
cltd
arpl
cwtl
leave
das
jo
or
das
push
push
rcrl
xchg
fsubl
cmpsb
outsl
out
call
subl
fcmovnu
jne
idivl
repz
fiadds
pushf
mov
jbe
jb
lods
cld
out
imul
xor
mov
xlat
jno
xchg
mov
sbb
je
and
out
data16
clc
mov
loope
addr16
ss
imul
and
jmp
aas
aas
fbld
pop
sbb
cmp
test
fbstp
lods
scas
push
fcoml
cmp
lds
lds
add
jmp
or
pop
lods
pop
xlat
aad
sbb
test
movsb
cmpsb
mov
push
xchg
addb
rcrl
mov
mov
cmc
jnp
jmp
in
out
lods
insl
mov
fs
shrl
enter
hlt
bound
pop
mov
in
loope
nop
xchg
ss
push
adc
xchg
cmc
addr16
hlt
ljmp
xor
mov
repnz
adc
std
js
loop
fisttpl
sub
repz
jecxz
adcb
cmp
sti
or
out
sub
in
mov
xchg
mov
push
or
je
insl
sub
xor
jo
jne
aaa
mull
adc
out
and
mov
mov
mov
call
lret
pop
popf
in
cmp
fcoml
ret
ja
out
std
adc
movsl
sbb
inc
mov
mov
in
mov
repnz
add
fisubl
flds
or
sub
jecxz
bound
clc
mov
stos
add
insb
adc
xor
mov
ja
jp
roll
test
inc
aaa
cltd
out
rolb
mov
mull
leave
gs
addr16
lahf
dec
and
cmpsb
leave
adc
scas
loope
mov
push
data16
jle
jo
scas
inc
pop
divl
gs
mov
and
aas
je
js
mov
dec
aam
pop
ss
inc
adcb
pusha
pop
lea
in
into
xchg
inc
pop
jb
or
inc
cmp
mov
insb
pop
dec
sub
lds
jp
jns
mov
icebp
push
xor
pop
mov
lea
pop
adc
idiv
loope
mov
int3
jbe
ds
cmp
insb
cmc
mov
in
mov
inc
lcall
loop
push
pop
push
in
mov
decl
outsb
outsb
lods
shrl
jle
pop
jbe
stos
xchg
sub
mov
mov
outsb
pop
mov
std
mov
pop
bound
lock
shrl
arpl
insl
in
fs
dec
sub
dec
xchg
push
push
sahf
sbb
lahf
gs
add
push
add
jno
sbb
mov
add
jmp
loop
int3
xchg
fwait
lock
addb
lods
lret
inc
cltd
push
test
mov
mov
insb
lahf
cs
cmp
rclb
test
push
mov
add
inc
pushf
cli
push
outsb
movsb
push
inc
mov
adc
rcrl
xchg
mov
aam
push
inc
add
push
mov
lcall
out
adc
or
jle
pushf
push
xorb
lahf
dec
pop
or
test
inc
std
mov
jle
xlat
add
or
pushf
stos
imul
pop
mov
in
stc
jbe
ret
push
jbe
jne
jecxz
mov
adc
sbb
xchg
or
cli
das
xor
pop
test
scas
push
jne
sub
popa
sub
in
inc
dec
fcomp
sub
xor
inc
xchg
push
xchg
ja
lods
hlt
out
xor
push
daa
or
loop
enter
aam
pop
and
push
or
xor
fucom
mov
xor
ljmp
jbe
pop
adc
xor
or
cltd
dec
mov
popf
sahf
add
ret
scas
lock
cmpsb
out
fcmovbe
divl
jb
sub
seto
enter
rorb
ss
aam
push
lret
xchg
pop
lea
mov
sbb
inc
push
push
inc
enter
cmc
aas
sub
pop
lds
mov
cmp
pushf
mov
in
outsb
popa
push
cmp
mov
icebp
mov
xor
or
gs
sbb
and
mov
and
lea
dec
inc
xchg
ljmp
push
nop
jmp
stc
sahf
test
nop
stos
ret
push
mov
lcall
cmp
stos
ret
stos
out
popf
mov
frstor
xor
repnz
mov
stos
and
mov
jae
loop
and
push
cwtl
xchg
sbb
and
nop
and
sub
adc
ljmp
roll
fucomi
xchg
in
lahf
sbb
xor
orl
aad
sub
clc
in
add
movsl
jno
fnstenv
mov
hlt
xchg
movsb
stos
sbb
cmove
and
int
loope
cmp
stos
pushf
leave
add
pop
cmc
das
sti
dec
stc
push
insl
cld
jbe
pop
sub
pop
push
pusha
lds
push
emms
mov
xor
jle
xchg
or
ljmp
inc
jne
dec
jns
clc
dec
cmp
add
jecxz
faddl
movzwl
iret
push
inc
fldt
mov
dec
adc
jnp
push
aam
jbe
movsl
mov
scas
mov
gs
dec
xchg
aaa
or
jbe
pop
fstl
ret
add
insb
sahf
je
xchg
movsl
aad
mov
std
mov
adc
cmpsb
insb
mov
mov
sbb
fstl
data16
or
mov
nop
push
mov
jg
lcall
pushw
shrl
out
repnz
pop
pushf
imul
jno
mov
cmpb
pop
inc
loopne
stc
scas
mov
adcl
or
inc
jb
cmp
add
pop
mov
into
sub
in
add
pop
xchg
sub
push
orl
cmc
and
xor
shll
jne
hlt
mov
lret
sub
dec
adc
nop
jecxz
pop
push
orl
mov
enter
cmp
push
pop
mov
adc
rclb
je
xchg
aaa
xchg
mov
lcall
out
pop
inc
mov
sbb
inc
stos
aad
fsubl
add
xorb
shlb
pop
aas
sub
fwait
adc
or
jg,pn
mov
lret
xchg
in
push
shrl
sarb
imull
mov
or
popa
outsl
mov
mov
pop
cmc
add
lods
push
mov
shll
fildll
jmp
cmp
push
pop
hlt
and
cmp
rclb
mov
dec
arpl
xor
lods
orb
push
and
pop
cmp
enter
sbbb
push
pop
movsl
js
ret
cltd
mov
push
fwait
inc
rcl
push
inc
mulb
out
call
pop
ret
add
sub
ja
cld
push
fistpll
jbe
add
inc
add
adc
mov
and
les
adcb
stos
icebp
daa
add
loop
orl
cmp
ret
jl
xchg
test
adc
cltd
mov
sub
icebp
push
sarb
pushf
ja
pushw
cmp
jnp
jns
sub
mov
adcl
cmp
imul
pop
jne
mov
add
je
jb
inc
test
iret
nop
sub
popf
mov
xchg
aas
popf
rorl
push
in
outsl
cmp
xor
mov
adc
je
aad
lds
inc
xor
inc
sub
rcrb
cmp
xchg
push
popa
jp
jbe
stos
fiadds
sub
sbb
pop
loopne
or
inc
shl
pusha
mov
dec
and
aad
or
call
idivl
pop
cli
movsb
jbe
xor
lret
jmp
mov
cs
pop
inc
sbb
push
insl
cmp
jae
xchg
xor
dec
sbb
enter
outsb
pop
in
out
scas
pop
cmc
sub
ret
dec
cmp
jne
jne
push
pusha
aaa
xchg
mov
repnz
das
sahf
fnstsw
and
and
jmp
and
cltd
pop
nop
or
enter
cmp
rolb
mov
cli
push
out
pop
mov
push
in
cmp
push
mov
inc
lods
loope
scas
ds
add
repz
in
mov
lcall
and
loop
mov
pop
mov
dec
sti
call
mov
jno
mov
sub
push
fsub
pop
movsl
movsl
sbb
add
mov
inc
push
enter
int3
les
push
sbb
push
mov
pop
push
int
xor
rep
outsl
cmp
ss
add
sub
loope
scas
inc
cmp
fsubrs
jl
test
sbb
lods
test
dec
pop
dec
hlt
push
cmp
cmp
outsb
mov
mov
insl
pusha
cld
mov
xor
movsb
inc
leave
dec
icebp
mov
in
push
xchg
data16
and
inc
jno
xor
test
ja
loop
fcomi
adc
clc
pop
aaa
cli
lods
add
adc
into
xchg
push
add
jnp
xchg
jno
add
shlb
lahf
jae
xor
mov
xchg
packssdw
in
lock
stos
cli
jecxz
mov
fdivs
inc
les
adcl
rcl
sbb
repz
xor
pop
cmpb
dec
xor
sarb
outsb
dec
cmpsl
mov
mov
into
mov
scas
fstpl
pop
addr16
xor
mov
fwait
inc
or
push
lock
aad
fcoml
sub
sbbb
jl
xchg
mov
adc
mov
jne
out
xor
ds
adc
mov
loop
repz
inc
icebp
mov
lcall
fisubs
or
jo
inc
test
movhps
pop
inc
mov
xchg
scas
pop
push
mov
push
xchg
gs
jbe
sbb
test
pop
loopne
pop
jno
test
push
pop
data16
inc
or
mov
stos
or
data16
sbbb
jo
mov
adc
mov
ljmp
xor
jne
insb
push
jno
mov
ss
in
adc
pushf
mov
sar
gs
or
cmp
pop
sbb
mov
loopne
jno
jo
mov
lret
pop
pop
lea
mov
out
inc
std
mov
jb
mov
es
dec
mov
jnp
lahf
inc
lds
and
mov
pop
mov
push
mov
and
mov
es
jp
pop
push
mov
ds
das
or
int3
add
shl
scas
cld
addb
mov
pop
mov
mov
jne
ret
pusha
jle
sbb
adc
cmpsl
movsl
pop
jb
ljmp
loop
loopne
or
cld
inc
cpuid
xchg
sub
push
aad
fildl
add
xlat
imul
loope
or
xchg
js
inc
imul
lret
fimuls
out
xchg
das
and
sbb
pop
lds
shlb
push
xchg
adc
jmp
inc
stos
pushf
pop
cmpsl
rcrl
xchg
mov
ja
cld
push
push
xchg
call
xor
cmp
int
hlt
cmp
mov
outsl
mov
call
ds
jne
gs
xchg
jno
in
ret
mov
cld
cmpsl
and
adc
je
pop
push
stos
lahf
inc
outsb
lcall
dec
sbb
fimuls
jae
mov
lock
and
out
aad
test
mov
hlt
test
cld
mov
test
out
fbstp
test
mov
lods
dec
lcall
push
inc
xchg
push
xchg
ret
or
dec
pop
push
lahf
push
hlt
and
movsl
sahf
push
adcb
mov
adc
and
movsb
cmpsb
adc
stc
mov
ret
das
xchg
pop
cmc
sbb
pop
and
lss
js
out
ret
jl
dec
add
mov
sbb
pop
sbb
lret
add
call
dec
mov
notb
fldcw
insl
pop
subb
xor
lahf
imul
cli
push
leave
movsb
test
pusha
orl
lock
in
es
lahf
jbe
and
dec
pop
push
adc
cmp
xchg
sbb
xchg
int
or
push
jne
mov
add
jb
lea
mov
mov
mov
or
sbb
loopne
popa
pusha
and
sub
pop
xchg
xor
xchg
xor
sub
add
sbb
in
push
or
out
adc
mov
sbb
jae
push
repnz
fistpl
inc
call
imul
mov
lock
cmc
mov
cmp
sarl
pushf
pop
mov
popa
fisubl
mov
rcr
add
fst
in
inc
dec
and
sarb
inc
lds
push
in
dec
or
fsts
fs
sahf
stos
ret
adc
xchg
into
movsb
loopne
stos
daa
data16
pop
es
and
icebp
mov
push
leave
push
mov
xchg
mov
add
push
test
or
and
call
xchg
lods
xchg
into
test
fcompl
insb
pop
int
dec
mov
sbb
cmc
ret
arpl
movb
push
adc
mov
out
sbbb
jb
add
xlat
mov
sub
mov
rorb
mov
lret
popa
dec
lcall
icebp
leave
xor
mov
insl
push
incb
mov
jo
ds
add
xchg
mov
nop
loopne
dec
mov
push
outsb
dec
mov
es
cmpsb
cmc
pusha
clc
cmpsl
cmpsl
xor
cwtl
xor
mov
cmp
mov
ret
push
pop
imulb
in
test
cld
imul
cmpsb
cmp
jb
push
adc
ret
or
jb
lds
dec
cmp
ljmp
adc
xor
rcrb
icebp
aam
mov
cli
stos
jecxz
mov
inc
add
and
add
loop
arpl
xor
xchg
cmp
cmp
mov
ds
push
mov
pusha
xor
sub
jp
scas
test
and
inc
ficoml
inc
and
cltd
mov
push
out
add
stc
lret
clc
pop
sahf
or
addr16
push
arpl
pop
mov
xchg
lea
mov
xchg
hlt
popa
call
sarl
xor
mov
push
xchg
dec
test
mov
cltd
jae
rcll
jmp
punpckhwd
lods
sti
xchg
in
jg
sbbb
jmp
ret
cmpsl
lret
add
hlt
hlt
dec
pop
insl
xchg
in
aaa
out
test
jge
push
and
dec
cmpsb
jno
jp
mov
pop
xchg
and
icebp
mov
jo
add
nop
out
sub
stc
iret
scas
in
push
mov
cltd
mov
repz
pop
and
in
dec
test
mov
mov
sbb
adc
push
sbb
mov
xchg
je,pt
sub
lods
lock
popf
cmpsb
jp
outsl
jmp
shlb
pop
enter
je
adc
push
fdivrl
out
pushf
pusha
mov
sahf
pop
movl
pop
ds
inc
pop
jmp
in
fldenv
fs
mov
movsl
xchg
xchg
in
pop
je
addr16
je
dec
cs
call
push
cmc
sti
mov
lret
mov
mov
push
lret
push
pop
jecxz
sbb
xchg
mov
addb
or
cmp
fwait
push
sbb
mov
cmp
mov
pop
xchg
cmp
push
push
inc
and
test
movsb
sbb
pusha
adc
mov
leave
mov
mov
das
daa
cltd
imul
pop
xchg
js
in
push
cli
mov
xor
fldenv
ret
jo
popa
adc
jno
fstps
jno
jae
inc
lds
and
jp
adc
xchg
cmpsl
imul
cs
mov
mov
fcomps
aad
inc
adc
bound
mov
ljmp
lods
sub
repnz
in
sub
or
jle
mov
pop
enter
xor
adc
xchg
aas
cli
ror
and
adc
sbb
aaa
push
lcall
cmc
popf
sub
ret
aaa
or
stos
cmpsl
mov
std
lock
sbb
arpl
mov
rcll
lret
pushf
ja
mov
cltd
sbb
shll
daa
mov
into
dec
fs
dec
inc
and
in
or
clc
call
nop
and
dec
rcll
push
sbb
add
sub
aam
inc
mov
fdivs
pop
leave
shll
xchg
into
jae
cmpl
faddl
pop
test
sbb
jge
out
adc
add
faddl
mov
mov
push
repnz
mov
jmp
andb
inc
ret
xchg
adc
jle
jmp
imul
sbb
subb
leave
or
outsl
mov
pop
pop
daa
gs
cwtl
fistpll
sub
insl
dec
out
pop
shrb
mov
inc
jmp
imul
lods
and
sti
cmp
fidivrs
out
rolb
add
sub
pop
in
mov
call
in
rcl
pop
nop
ds
aam
push
inc
xchg
push
pop
lahf
rcl
jmp
fnstenv
push
repnz
aam
jl
lcall
sub
test
mov
aad
jbe
bnd
mov
lahf
dec
les
jg
ds
icebp
fstl
lret
jg
insl
jnp
jno
leave
lds
movsb
lahf
xchg
and
cmp
clc
ret
mov
or
or
inc
scas
mov
jp
movsb
mov
jno
mov
call
hlt
in
ljmp
push
add
mov
in
lods
jo
xchg
fidivs
test
das
pop
add
icebp
mov
xor
out
sbb
jne
movsb
jl
mov
arpl
and
movsl
add
xor
jae
mov
jns
hlt
mov
cmpsb
jecxz
repnz
sbb
cmp
sub
mov
call
cmc
dec
jb
std
insl
andb
call
popf
xchg
cmp
sub
adc
dec
push
shll
xchg
movsb
mov
outsb
xchg
push
or
arpl
loop
mov
jp
movsb
jg
add
daa
inc
mov
rcrb
cmc
in
stos
outsb
mov
mov
xchg
jo
jecxz
inc
stos
mov
jge
std
jne
xchg
and
xchg
and
dec
inc
inc
je
dec
rolb
rorb
adc
stos
int3
in
out
out
cmpb
fs
repnz
nop
and
xor
push
jge
dec
imul
mov
cmp
sub
adc
jp
inc
out
push
sub
mov
cwtl
xchg
mov
fucomip
inc
xchg
fiadds
add
xchg
push
dec
dec
clc
dec
mov
movsb
lret
push
xor
push
jl
fsubs
aam
xchg
ds
and
adc
cs
int
pop
push
cld
adc
jno
in
push
stos
adc
lmsw
mov
clc
fld
or
cmc
in
mov
and
das
call
and
mov
call
and
jmp
mov
mov
xor
clc
cs
fimull
scas
xor
in
scas
bnd
out
adcb
xor
cld
push
xor
inc
cmpsb
pop
mov
push
inc
push
mov
mov
sub
das
fcoml
pop
daa
add
ret
fildl
cmp
cmpsb
es
or
mov
fdivrs
add
add
call
jp
pop
fnsave
popf
sub
int
mov
mov
les
mov
pop
les
aad
xchg
xchg
aas
mov
add
rcrl
adc
jnp
lahf
mov
imul
dec
adc
push
cs
test
mov
ret
imul
js
test
ret
adc
pop
mov
daa
xor
xchg
jns
jp
xor
pop
ret
mov
rcrl
cmpsb
scas
xor
fidivrs
popf
mov
fdivrs
or
out
xchg
push
dec
std
mov
jns
add
dec
ss
inc
push
popa
mov
scas
int3
dec
sub
and
nop
lahf
mov
and
pop
jno
fxam
jecxz
pop
enter
xchg
cmovo
es
jecxz
inc
and
jle
mov
push
sar
lock
adc
push
test
jo
push
test
add
mov
rcl
cld
xor
insl
inc
out
outsl
test
adc
adc
cmp
and
xor
test
cmp
jecxz
hlt
arpl
push
fsubr
sarl
or
in
aas
roll
jb
rcrl
mov
es
in
orl
scas
jns
pusha
faddl
or
aaa
mov
add
flds
cmpsb
out
roll
dec
leave
mov
pop
loopne
jg,pt
pop
cmp
out
push
sbb
fstps
les
and
pop
fs
mov
stos
or
out
mov
or
out
mov
and
mov
jl
shrl
je
movsl
add
cwtl
xchg
inc
rorl
addr16
mov
push
das
int3
test
lcall
mov
in
push
shl
dec
sbb
cmp
jnp
and
jnp
jns
inc
jl
aaa
jmp
mov
in
std
and
in
lods
xlat
push
fstl
xor
icebp
sbb
out
in
or
adc
lods
xor
push
adc
sbb
inc
mov
je
insl
xchg
inc
xchg
nop
pop
adc
add
lods
fnsave
in
repz
fdiv
and
repnz
pop
mov
push
inc
sbbb
mov
cmp
mov
fidivs
xor
push
mov
call
loope
and
mov
inc
jge
pop
jno
xor
loop
clc
icebp
ja
dec
cmp
stc
mov
rcrl
sbbl
pop
cmp
sti
push
mov
inc
leave
idivb
inc
fsubrl
aad
cmp
pop
or
cli
jno
cmpsl
sbbb
fmull
add
addr16
ret
push
cmpsl
lahf
in
stc
shlb
adc
mov
test
adc
inc
sub
pop
repnz
imul
xchg
pop
cmpsb
out
jg
jo
loopne
jbe
sbb
divb
mov
lahf
sti
pop
gs
mov
cwtl
das
mov
adc
outsw
push
iret
jmp
loopne
push
pop
or
dec
adc
xor
or
cmp
enter
pop
xchg
dec
mov
sbb
push
mov
mov
pop
pushf
std
add
or
jle,pt
xchg
mov
mov
aam
cmpsb
mov
scas
fmuls
nop
clc
jnp
int3
mov
sarb
jo
sbb
mov
out
jl
notb
jp
lcall
pop
fcmovb
in
lods
dec
insl
loop
pop
cmp
pop
xor
cmovne
cmp
inc
cmp
scas
or
or
pop
sbb
mov
rorl
dec
lret
fimull
mov
ljmp
adc
pop
sbb
cmpsl
das
nopl
cmp
and
aad
lods
dec
pusha
dec
test
cmp
ss
pop
cltd
lcall
pop
fcomps
push
adc
jae
imul
add
mov
in
add
and
xchg
fs
lret
sbb
jno
push
ljmp
hlt
jb
sbb
cmpsb
imul
outsl
ret
rclb
mov
and
addr16
mov
inc
movsl
push
mov
ret
dec
sahf
leave
in
cmpsl
lods
jne
bound
dec
in
inc
inc
add
int
xchg
rorl
les
fsub
pop
jl,pt
lret
cmpsl
test
popf
jle
jl
adc
add
imul
pop
push
dec
out
cmp
pop
popf
push
rol
inc
inc
xor
fdivr
adc
push
mov
or
pop
cmp
in
jae
or
inc
mov
pop
repz
push
fdivrs
add
aaa
int
push
mov
imul
hlt
inc
xor
scas
outsb
stos
lock
pop
or
push
test
out
fxch
jle
jp
scas
scas
pushf
adc
cmp
dec
or
mov
xchg
movsl
pop
sub
cmpsb
imul
push
rclb
scas
inc
jnp
out
dec
rep
imul
enter
push
pop
xor
mov
mov
repz
lods
push
cmpsb
mov
stc
xchg
xchg
pop
mov
repnz
xchg
xor
lds
sbb
mov
cmpb
pop
xor
mov
sahf
mov
pop
mov
out
arpl
add
testb
sub
add
popa
jo
pop
int3
push
out
xor
repnz
add
insb
sarl
push
mov
lcall
dec
mov
cmp
push
mov
enter
push
repnz
leave
stc
incb
shlb
mov
mov
fcmovnbe
hlt
into
imul
dec
dec
movsl
lahf
je
push
pop
movsb
sbb
fsubr
mov
push
mov
fldlg2
push
insb
stos
add
pushf
add
xchg
clc
xchg
dec
dec
mulb
mov
mov
xor
and
mov
out
orl
aad
imul
fcompl
into
dec
cmp
int
mov
inc
insb
loope
sbb
cmp
pop
mov
mov
mov
mov
push
jecxz
xchg
aam
lahf
or
inc
popf
push
daa
lods
cmp
test
jae
js
pop
inc
test
out
mov
jo
jne
dec
sub
mov
and
pop
clc
fidivs
push
lds
add
das
mov
sub
outsl
push
push
cmp
imul
cmp
add
mov
or
sub
mov
sbb
sti
or
adc
or
and
mov
mov
xchg
fldcw
test
test
int3
in
mov
or
or
cld
repnz
cmp
fwait
mov
jge
xlat
or
test
push
out
loope
push
insb
test
std
dec
cwtl
sub
lods
sub
repz
shl
pop
daa
pmaxub
test
xchg
int3
test
les
mov
dec
hlt
fwait
out
sarl
sbb
jbe
add
xchg
mov
dec
push
or
pop
es
sub
jno
aaa
cli
test
pop
shll
repz
or
fcmovnu
inc
sbb
adc
xor
xchg
fdivrs
mov
pop
mov
icebp
cmp
lds
aas
or
sbb
lods
mov
xor
cli
lret
scas
rcr
js
push
mov
jecxz
pushf
aad
pop
mov
mov
jns
adc
push
inc
mov
aam
xor
mov
mov
pop
sbb
jmp
cmp
pusha
cltd
inc
dec
adc
call
sbb
mov
cmp
imul
pop
stc
and
ret
lcall
sbb
pop
ret
std
aad
out
adc
lcall
mov
xorb
das
mov
hlt
pop
loop
test
adc
cmpsb
stos
sub
mov
inc
popa
sarb
cmp
cmp
test
rcr
push
repnz
cmc
inc
pusha
movsl
xlat
movsb
inc
outsl
inc
pop
cmp
jecxz
fcmovne
out
sub
iret
mov
and
popa
pop
shrl
add
lret
or
jp
iret
stos
or
mov
jp
test
je
into
cmp
adcb
mov
fidivrs
xor
mov
inc
jge
fwait
add
aad
je
ror
je
jecxz
dec
jno
add
adc
imul
loop
pop
out
mov
fadds
sub
popf
icebp
in
inc
mov
mov
mov
xor
jge
push
inc
jmp
cmp
push
mov
daa
fisttpll
sbb
mov
clc
add
rcrl
sub
push
call
cld
popa
jmp
dec
jne
in
dec
testl
movsl
mov
inc
dec
divb
jecxz
movsl
mov
rcrb
jo
clc
out
xchg
lea
inc
jbe
adc
pop
or
imul
or
cwtl
xchg
lods
jae
call
mov
int
insb
ret
push
mov
jns
sub
das
mov
enter
pop
push
out
or
gs
xorl
sbb
es
xchg
into
push
cmp
pop
adc
inc
or
test
lock
stc
jp
mov
hlt
sti
inc
sbb
fwait
lea
push
and
push
dec
scas
sbb
ficomps
inc
push
rcrl
stos
in
add
cwtl
std
movsl
xchg
ja
and
fcmove
inc
daa
and
rol
stos
mov
add
mov
mov
pop
loope
fstl
dec
test
push
mov
and
xchg
aas
pop
lods
jle
pop
loopne
ficoms
mov
pop
xchg
mov
cmpsl
lcall
addr16
adc
and
mov
and
stos
cltd
loopne
leave
cmpb
pop
call
pop
inc
inc
adc
lret
and
inc
jge
jecxz
mov
xchg
stc
sbb
leave
dec
sub
les
iret
lock
cwtl
adc
insl
int
adc
xchg
adc
lcall
inc
jno
push
inc
inc
cmp
sub
hlt
cmp
ds
in
int
data16
cld
fistps
lret
lret
inc
sti
cmpsb
xor
and
pop
icebp
mov
in
lret
xchg
lods
lret
rol
rcr
test
or
js
mov
sub
ljmp
pop
stc
negb
shrl
into
outsb
mov
pop
pusha
jl
fdivrs
jns
fisttpll
shll
adc
fistl
loop
ja
fisttps
jae
dec
push
mov
adc
pop
lahf
inc
out
and
xor
ret
push
push
rol
fs
xor
into
lcall
push
hlt
mov
loop
sbb
fucomi
sub
jmp
movsl
pop
sub
stos
fdivs
repz
push
and
pop
add
cmpsb
into
pushf
mov
adc
mov
lds
push
adcl
loope
inc
rclb
mov
leave
jge
sub
fwait
push
mov
cltd
lcall
test
lds
adc
movsl
mov
jle
or
jne
insb
fucomip
mov
arpl
add
adc
hlt
mov
test
mov
rolb
addr16
aad
dec
xor
jge
gs
pop
xchg
dec
xor
divb
push
je
setbe
lret
mov
jge
push
outsl
pop
fildll
ret
dec
xor
add
ffree
jg
lea
jl
fdivrs
xsavec
or
mov
adc
fprem
imull
int
mov
fwait
dec
outsb
mov
jo
xchg
pop
insl
or
adcb
push
xchg
dec
dec
xchg
sub
sbb
and
in
leave
cmp
loop
fadd
and
push
ficompl
ret
movsb
gs
push
xchg
leave
sub
dec
stc
mov
loopne
inc
sub
xor
push
roll
cmp
push
or
push
add
fsubrs
mov
mov
jb
mov
xchg
cmc
int
addr16
mov
sub
mov
rolb
jle
mov
mov
xor
lock
leave
mov
filds
fcomi
and
cmp
js
in
sbb
jno
mov
adc
scas
dec
push
mov
xchg
xlat
and
or
xor
ds
pop
push
das
aad
sbb
fldenv
or
rcrb
es
fiadds
jmp
cwtl
mov
sti
call
xchg
dec
psrlw
sarb
jp
mov
pop
mov
push
pusha
fucomi
fmuls
cmp
dec
ret
mov
ja
std
push
scas
push
mov
fisubrs
or
pop
adc
ljmp
shr
movsl
rorb
xor
arpl
xchg
add
mov
ror
lock
test
push
push
cmpsb
sub
xchg
in
cmp
mov
mov
jl
or
std
jl
pop
pusha
gs
roll
mov
daa
data16
das
adc
add
pusha
icebp
les
cmp
push
adc
sub
inc
fstpl
jo
int
xor
or
cltd
mov
pop
das
fwait
out
ret
push
aad
jno
sub
jecxz
aad
cmp
inc
clc
inc
jmp
mov
push
mov
icebp
dec
test
and
add
lea
xchg
je
add
or
jbe
mov
push
cli
mov
push
das
or
ror
jle
xchg
jo
leave
fsubr
cld
stos
or
fistl
call
xor
pop
rcll
inc
mov
lods
outsl
sbb
iret
push
inc
mov
pop
movsb
inc
mov
subb
test
shrl
out
mov
cmpsb
lock
sbb
pop
lret
push
fwait
and
das
jl
enter
and
jb
push
push
fs
xor
xor
into
in
out
cmpsb
push
cwtl
decb
sbb
ret
les
mov
scas
enter
cmp
cmc
mov
sbb
fwait
adcb
leave
fidivs
ret
in
out
cmpb
pop
sarb
test
jb
cmpsb
inc
fsub
dec
inc
jp
dec
push
jbe
into
rorl
les
hlt
out
dec
push
movsb
sbb
rolb
in
jmp
add
mov
lret
xchg
les
cmp
cli
pop
jae
and
fs
mov
xchg
pcmpgtd
pop
jmp
add
or
jle
fldt
cwtl
mov
mov
xchg
or
shrl
cmc
dec
sub
xlat
adc
or
xchg
push
test
inc
lret
popa
inc
dec
xor
mov
pop
mov
popf
out
sub
loope
push
mov
push
in
adc
pop
ficomps
xchg
mov
jbe
mov
iret
pop
stc
sub
icebp
push
sbb
inc
add
and
sbb
sub
sbb
sbb
push
mov
lcall
dec
lods
pop
adc
mov
dec
fstl
adc
in
inc
push
popa
lods
and
sti
cltd
cli
push
cmp
or
scas
adcl
mov
dec
add
and
xlat
or
jnp
mov
sub
pop
subb
ret
cmp
out
jmp
aas
push
scas
jl
and
or
push
lods
or
jae
in
jne
ds
popf
sarb
scas
dec
add
cld
push
inc
cld
ret
loopne
js
fbld
loop
inc
popa
test
sub
lods
mov
inc
cli
fistpl
lea
data16
fdivl
incl
xor
mov
push
test
mov
pop
test
int
xchg
lock
lea
jb
inc
call
inc
fcmovnu
idivl
std
push
orb
dec
inc
std
cs
push
jbe
push
test
mov
xchg
xor
fldenv
xchg
push
jle
pusha
jae
mov
cmc
pop
repnz
cmp
lea
push
ljmp
cwtl
sub
loop
test
cmc
cli
pop
call
out
in
sub
sbb
cwtl
pop
popa
push
inc
mov
add
xchg
int3
pop
add
outsl
xor
xor
or
adc
imul
imul
je
xchg
aas
mov
cld
test
stos
rorl
xchg
sub
dec
cmp
cmp
push
lock
cmpsl
cmpsl
lret
in
js
lret
out
mov
or
inc
lods
dec
pop
out
xchg
mov
jmp
fsts
inc
scas
dec
jg
push
push
int3
popf
push
call
aas
cmp
out
xchg
xor
and
addr16
test
jg
cmp
cmp
add
lds
movsl
ss
mov
pop
jg
hlt
xchg
mov
in
ss
sbb
pop
inc
ljmp
fcom
mov
jmp
and
adc
adc
stc
xor
call
aad
mov
je
push
add
sbb
xor
adc
mov
inc
sub
lcall
mov
push
ret
les
fs
aas
scas
cmpsl
sbb
fists
into
add
sbb
sub
mov
cli
sub
mov
inc
enter
mov
dec
push
dec
lea
adc
jmp
jno
dec
scas
shll
out
pop
test
xchg
sub
popf
out
or
mov
cmc
mov
or
pushf
pop
cli
shl
ja
jne
scas
add
out
jae
xor
jns
push
daa
int
dec
in
xchg
adc
mov
add
test
daa
icebp
mov
add
push
mov
inc
mov
mull
addl
jnp
scas
adc
ret
mov
lock
pop
bound
in
mov
mov
sub
xchg
test
jle
loope
mov
aad
fadds
and
adc
cli
icebp
out
loopne
es
cli
mov
les
fistl
adc
shrl
arpl
mov
cmp
jo
cltd
jp
imul
cmp
mov
loope
cltd
mov
sub
xchg
cs
cmp
sbb
and
movsl
daa
iretw
test
dec
fs
cmpsb
pop
add
int3
mov
sti
xor
ds
jns
gs
pop
cmp
in
inc
dec
les
into
sbb
pop
repnz
fcmovne
popf
xchg
mov
sub
out
sti
mov
arpl
bound
xchg
out
jb
jns
push
sbb
sub
leave
jl
sarb
testb
mov
mov
push
gs
lahf
mov
pop
inc
pop
int
stc
shl
fdivl
cli
cltd
push
push
decb
xor
les
or
lcall
fmul
out
je
mov
cmp
inc
fwait
jecxz
mov
fisubrs
dec
insl
sbb
aaa
inc
popa
jmp
dec
xor
shll
mulb
push
mov
loope
add
outsl
xchg
jno
mov
mov
iret
push
je
sbb
cwtl
adc
test
pop
outsb
inc
cld
shl
or
sbb
mov
pop
cmp
lret
pop
shlb
xor
and
jp
popa
stc
leave
sbb
notb
add
lret
loop
shlb
std
fldcw
aad
lahf
std
cmp
push
fcoml
loop
mov
lods
iret
inc
in
mov
xor
pushf
mov
xlat
shr
pusha
dec
mov
push
sbb
orb
sub
data16
out
pop
ret
shr
mov
push
xchg
bound
push
clc
mov
mov
scas
adc
and
dec
bound
outsb
xor
sbb
fcmovnu
lods
sbb
sub
dec
aad
pop
xor
push
into
arpl
sbb
mov
sub
fidivl
xchg
sub
fmulp
sbb
out
xlat
jg
imull
mov
in
add
cli
pop
test
ret
fldcw
push
mov
push
fsubs
mov
dec
and
xor
mov
xchg
mov
stos
inc
negl
shll
in
mov
in
sub
lock
sbbl
jge
stc
test
pusha
cld
in
xor
dec
popa
and
mov
enter
xchg
lcall
pop
ret
aad
or
int3
gs
scas
ret
pop
gs
mov
mov
sub
xchg
mov
nop
push
dec
and
mov
cwtl
pop
test
sbb
imul
sti
call
xor
inc
pop
les
lods
jg
cmp
pop
cmp
push
pusha
push
mov
mov
sbb
cmp
aaa
les
lret
aas
adc
fidivl
xchg
push
stos
mov
test
ret
push
pusha
push
xor
xchg
cmp
push
sbb
call
int
xchg
xchg
add
mov
enter
fdecstp
or
stos
adc
jecxz
jae
and
inc
jl
pop
les
icebp
dec
xor
popl
lcall
aam
enter
xor
lcall
aas
dec
mov
stos
not
add
mov
xorb
mov
inc
and
daa
enter
jb
cmpsb
cmp
out
js
mov
in
out
stos
mov
lret
in
aas
pop
pushf
fwait
cmp
add
push
bound
aad
push
pop
or
pop
inc
jecxz
lods
mov
cmpsb
hlt
ds
push
jl
out
loop
mov
and
rcrb
and
jbe
cmpsl
mov
inc
ror
push
mov
push
cmp
push
jne
daa
inc
push
iret
pop
out
ds
popf
das
test
inc
xlat
mov
jbe
cmp
jle
dec
test
push
push
loope
push
aas
mov
sti
pop
or
mov
sub
inc
cmp
push
stos
jl
add
outsl
cmp
ja
lds
in
jge
pushf
dec
pop
and
pop
out
stos
pop
push
or
mov
fists
inc
cmp
jns
jne
dec
jecxz
mov
stc
fdivrs
mov
test
daa
mov
stc
mov
add
push
shl
inc
xchg
adcb
add
mov
call
fidivl
and
adcb
jl
inc
add
outsl
xchg
mov
xor
das
and
mov
fisttps
ds
inc
or
addr16
or
push
shlb
add
sub
jae
mov
test
dec
aad
lods
nop
cmp
cwtl
mov
sub
mov
pop
adc
jnp
adc
repnz
mov
jmp
jmp
cltd
adc
mov
aas
xor
sbb
dec
or
jmp
inc
add
movsb
into
test
lret
xor
out
call
aam
sub
scas
cmpsb
mulb
pop
jbe
inc
cltd
add
out
pop
adc
in
gs
aaa
inc
pop
ret
pop
sub
fst
mov
fnstcw
sub
gs
lock
adc
shll
out
xchg
jno
push
imulb
cmp
repnz
test
ja
mov
mov
and
scas
lds
sub
mov
mov
mov
outsb
imul
and
push
sahf
xchg
add
cmp
insl
shll
aaa
loope
add
xchg
or
jmp
push
repnz
das
mov
outsb
add
adc
in
filds
loopne
sbb
mov
ss
push
add
lahf
mov
mov
sahf
add
into
add
push
outsb
pop
imul
xchg
mul
jns
jp
lds
jno
call
xor
dec
dec
mov
inc
stos
sub
mov
or
je
jge
loope
and
and
js
sub
adc
pop
imul
jle
shll
aam
dec
mov
pop
pop
aad
jne
mov
mov
les
mov
dec
pop
push
lds
and
les
mov
mov
pop
xchg
lret
mov
adc
jno
sbb
pop
xchg
std
rcrl
dec
cltd
es
leave
sar
jge
xlat
out
sbb
dec
jle
xchg
gs
ret
pop
sub
repz
sti
sub
and
dec
pop
aad
sti
push
pop
inc
sbb
clc
xor
push
jl
stc
xchg
xor
subb
loop
mov
arpl
and
inc
jecxz
push
push
and
es
or
add
fwait
cmpsl
and
repnz
fs
movsl
out
mov
loopne
dec
inc
pop
inc
in
jg
push
sti
popa
inc
jle
cs
cwtl
mov
sbb
add
pop
filds
cmp
loope
clc
ja
mov
add
pop
push
jmp
lea
int3
mov
cs
mov
pushf
outsb
sti
fbld
imul
mov
add
ljmp
add
stc
scas
xchg
lret
lds
enter
lods
dec
jl
jo
sbb
rorl
inc
shll
mov
jecxz
jnp
aad
ficomps
jl
mov
add
jne
pop
insb
mov
xchg
popf
add
sbb
sar
frstor
jne
scas
insb
jno
or
test
inc
out
je
pop
data16
mov
pop
cmp
sbbl
roll
xchg
add
lods
mov
cmp
mov
xchg
dec
loopne
stc
xchg
pushf
bound
cmp
lea
xchg
xor
cmp
sbb
andl
push
inc
add
enter
andl
xor
andl
stc
fmull
mov
add
cs
in
push
or
add
sub
int3
and
je
mov
inc
mov
inc
call
pop
pop
lea
adc
fsubrs
testl
add
xchg
ja
sub
or
push
mov
aaa
dec
and
fbld
ja
rcl
adc
fincstp
xor
mov
mov
movsl
stos
dec
fs
scas
outsl
mov
and
mov
jecxz
jp
cmpb
cmp
and
sub
fsubs
xor
in
add
fwait
es
imul
add
aam
scas
mov
lods
test
fcompl
js
inc
pop
rol
ljmp
pop
push
test
add
jl
sbb
arpl
ret
jne
mov
ror
add
push
xchg
scas
pop
into
inc
push
shrb
push
jmp
sti
les
mov
popa
imul
mov
and
mov
sbb
jns
mov
mov
nop
pop
mov
je
ja
adc
xor
xchg
into
imul
adc
pop
cmpsl
inc
push
pop
int3
lcall
in
pop
lock
adc
mov
sbb
jb
mov
mov
cmc
add
sub
repz
clc
mov
push
lods
cmp
fisttpll
mov
jbe
iret
inc
stos
js
scas
mov
inc
jo
push
mov
xchg
dec
xchg
pushf
aad
jnp
jbe
xchg
jnp
and
shll
jg
jns
stc
inc
mov
sub
cmp
ds
push
ret
and
ja
cmpl
subl
roll
test
xor
ficompl
mov
pop
inc
sbb
pop
in
push
popa
lock
inc
mov
or
push
jae
mov
push
cld
sti
arpl
pop
or
dec
enter
sar
jge
mov
inc
adc
mov
mov
fnstsw
fcomps
mov
fbstp
jbe
sub
xchg
rcrb
in
frstor
inc
fwait
sub
cmpsl
test
outsl
push
aaa
shl
andl
imul
cmp
cwtl
les
fwait
lahf
and
push
mov
mov
test
add
add
vandps
call
aad
xor
lret
mov
imul
int3
subl
cmp
pop
ret
shlb
jne
test
jne
sbb
add
orb
dec
mov
dec
sti
xor
adc
ljmp
rol
push
dec
jmp
lret
mov
test
ljmp
xor
popf
pop
adc
rolb
test
repz
adc
xchg
je
or
idivb
std
ret
jns
add
xlat
sub
pop
sub
and
imul
shll
inc
sahf
mov
mov
rol
lcall
mov
ret
jl
dec
mov
pop
dec
and
int
sahf
mov
test
mov
call
mov
enter
mov
stc
roll
dec
out
in
rorl
loop
xchg
fldt
mov
xchg
jns
test
mov
loopne
sbbb
push
mov
ret
cli
loopne
ss
divb
insb
imul
aaa
adcl
pop
aad
adc
test
xor
pop
adc
inc
xchg
add
push
dec
or
lods
ljmp
shrb
and
imul
mov
mov
iret
jp
pop
out
sbb
fisubl
clc
and
pop
std
subb
sahf
xor
movntps
shrl
jecxz
fisubrl
mov
cmp
lods
out
push
stos
and
scas
mov
jne
sbb
jb
call
cmp
pop
loope
test
mov
or
popf
mov
insl
dec
sub
push
daa
cs
mov
push
jge
int3
lds
jmp
dec
push
repz
and
fcomip
lods
xchg
jmp
fs
sbb
out
push
fstl
aas
dec
sub
push
icebp
or
les
ret
xchg
or
mov
sbb
adcb
je
rclb
outsb
inc
or
repnz
data16
clc
movsb
and
sbb
sbb
fwait
ret
movsb
ret
push
call
xor
dec
lret
xor
mov
cmp
mov
cmpsb
sbb
leave
sbbb
pop
pop
cmc
jmp
xor
in
xchg
in
mov
dec
jne
inc
xchg
gs
insb
xchg
xlat
push
clc
jle
pusha
dec
inc
jo
or
dec
stc
addr16
xchg
stos
adc
jns
cmpb
mov
aaa
mov
fdivrs
jbe
stc
push
or
dec
push
inc
mov
shlb
or
inc
lcall
fwait
bound
shll
and
mov
rorl
testl
pushf
mov
inc
je
jne
mov
out
roll
repz
cmpsb
clc
call
jne
loope
inc
into
inc
or
and
lock
bound
sbb
ja
xchg
pop
les
xlat
push
in
adc
push
xor
mov
lret
subb
popa
out
imul
push
jns
dec
pop
movsb
sub
mov
push
ljmp
adc
mov
rorl
dec
loope
daa
push
pop
pop
cmpl
mov
and
notb
pop
xchg
xor
or
shll
andb
iret
or
jb
icebp
adc
cmc
push
mov
mov
iret
je
mov
adc
dec
andb
stc
xlat
push
jno
jbe
out
cld
cltd
xor
cmp
adc
mov
xor
ret
sbb
mov
dec
sbb
add
imul
adc
cmpsl
add
sbb
icebp
int3
lock
pop
jge
xor
or
xchg
mov
inc
outsb
xchg
data16
out
xlat
mov
xchg
movsb
lods
push
scas
lock
loope
or
lahf
cmp
insl
out
cli
xchg
out
and
pop
xchg
push
or
or
add
pop
lahf
sahf
jl
mulb
test
movsb
fisubl
xor
cli
push
test
jb
xchg
ror
imul
adc
adc
mov
push
out
mov
jmp
mov
cmp
test
lds
cmp
xchg
les
mull
in
js
mov
into
mov
dec
inc
sahf
lret
adc
xor
jl
aas
xchg
mov
outsl
rorb
insl
bound
cmc
or
dec
add
shlb
xchg
pop
shlb
jns
mov
mov
scas
lcall
sub
adc
sti
push
pop
or
xchg
push
pusha
mov
aad
pop
add
icebp
push
faddl
loope
imul
cwtl
jmp
push
sbb
ss
adc
pop
mov
sub
imul
sub
dec
xchg
pop
cmp
pop
out
clc
orl
xor
add
shll
jns
xor
xchg
xchg
cld
mov
in
sbb
incl
push
xor
pop
in
sub
add
das
test
jb
lret
pop
xchg
xlat
push
stc
inc
iret
or
adc
or
mov
scas
adc
and
clc
push
inc
test
into
outsb
call
pop
rolb
rcrl
xchg
and
insb
sbb
clc
flds
les
out
xor
je
js
ret
mov
das
orb
fdivs
stos
lea
inc
decl
adc
mov
push
pop
cmpsb
enter
sbb
aam
adc
jb
out
mov
in
add
dec
pop
push
sbb
adc
mov
test
in
mov
sbb
or
clc
mov
xchg
cltd
mov
aam
inc
je
dec
push
repz
jo
dec
lahf
cs
pop
out
lods
fisubs
pop
test
pop
mov
inc
xor
push
aam
jmp
dec
mov
or
int
sar
xor
inc
jnp
inc
sub
cmp
into
cmpb
xor
xchg
mov
out
mov
movsl
and
adc
pop
nop
add
and
push
sbb
cs
and
mov
dec
jp
mov
mov
loopne
popf
nop
or
ljmp
or
rorb
fwait
bound
ds
das
call
stos
test
or
pop
sbb
jns
rolb
xchg
adc
push
dec
or
movsl
in
pop
in
in
push
pusha
mov
cmp
into
outsl
inc
push
cltd
loopne
stc
inc
add
in
icebp
adc
add
jle
aad
mov
or
sub
cmc
lret
xor
cmp
jecxz
jne
adc
inc
add
add
push
inc
cwtl
dec
push
sbb
or
fsubs
mov
std
ljmp
iret
and
aas
jne
push
push
imul
outsl
cmpsl
mov
test
push
mov
and
add
nop
jle
mov
shlb
and
sub
mov
outsb
mov
je
mov
lock
fsubp
xchg
adc
cmp
jae
js
es
insb
in
cmc
jo
jp
or
mov
add
adc
outsl
mov
stos
pop
fwait
sub
clc
cmp
ljmp
dec
mov
test
lret
pusha
es
cs
cltd
inc
pop
das
rclb
xor
lods
mov
out
dec
out
xchg
xlat
adc
and
enter
push
inc
fdiv
cwtl
out
and
push
dec
or
xor
orl
dec
loopne
adc
movsb
mov
mov
or
ds
sbb
push
mov
sub
repz
push
xor
js
adc
pop
adc
sub
pop
jg
scas
lea
pop
jg
and
jo
xchg
sarl
sub
xor
mov
inc
pop
jl
insb
in
push
pop
cmpsl
xlat
inc
mov
ficoml
orl
add
push
pop
and
ret
xchg
mov
sub
addl
ja
test
mov
pushf
in
loop
add
imulb
lock
shlb
jno
dec
loope
add
out
sub
mov
jge
mov
cmp
pop
push
xchg
ljmp
scas
add
idivl
mov
jne
mov
inc
cs
push
mov
mov
push
inc
pop
ficoml
xchg
sti
adc
ss
fcmovne
cmpsb
mov
jns
push
mov
imul
into
pushf
sub
ret
or
mov
leave
mov
pop
mov
or
jl
insb
loop
jle
sub
leave
cltd
pop
sub
out
mov
cmp
lods
mov
inc
cs
divb
mov
or
mov
loope
mov
cmp
mov
fmul
fwait
push
subb
pop
test
es
xlat
dec
insl
push
gs
test
mov
movsl
insb
inc
loope
push
fsubl
adc
incl
push
jbe
jg
mov
pusha
inc
adc
jae
rclb
insb
pop
and
pmullw
js
dec
iret
fidivl
mov
mov
loope
mov
adc
sbb
pop
sbb
adc
or
hlt
lea
xor
std
push
xchg
dec
test
or
jb
mov
rclb
std
inc
inc
sahf
sbb
sub
repz
xor
leave
bound
xchg
pusha
adc
popa
cmpsb
jge
fcomi
sbb
pop
dec
pop
and
cmc
negl
jg
in
std
bound
shll
dec
insb
or
ror
xor
cmpsl
pop
mov
inc
sahf
cs
mov
popa
out
js
adc
in
test
mov
xor
jge
cmp
jne
repz
xchg
test
push
add
add
and
cmp
sub
push
jns
cwtl
ss
mov
sub
jns
jb
or
sarl
imul
mov
adc
inc
jo
cmpsl
cmc
inc
test
push
inc
mov
lea
stc
jbe
push
sbb
sbb
xor
jmp
daa
sarl
xor
adc
xchg
push
mov
mov
and
mov
fimuls
sub
pop
in
mov
sbbl
pop
leave
inc
mov
xor
js
xchg
mov
and
push
ljmp
test
shlb
push
aad
pop
pop
out
xchg
arpl
xor
fwait
xlat
pusha
cmp
pop
mov
jmp
mov
cmp
mov
pusha
and
cltd
loopne
mov
sub
adc
popf
cmp
outsl
adc
daa
cmc
arpl
call
add
xchg
xchg
xorb
cmc
mov
push
mov
iret
sbb
mov
pop
es
fs
lock
dec
orl
pop
dec
sub
popa
sahf
jge
dec
iret
lret
jbe
push
jo
es
xchg
fabs
dec
mov
lcall
sub
mov
dec
mov
les
mov
ret
sub
pushl
mov
popf
repz
pop
fisttpl
mov
fcmovnbe
in
mov
rcr
int
loop
das
int
sub
mov
popa
mov
xor
xchg
cwtl
dec
aaa
push
test
stos
jbe
mov
outsb
loopne
add
ss
push
cmc
mov
cmpsb
push
outsl
out
jae
fwait
push
adc
dec
or
add
adc
inc
mov
mov
inc
cmpsl
out
cld
add
popf
mov
jo
inc
bound
mov
test
sbb
das
jmp
leave
dec
sar
xor
mov
lods
ja
sbb
sbb
cmp
leave
sbb
data16
aaa
push
mov
or
shl
add
ss
popf
mov
xchg
push
or
or
jae
clc
repnz
js
popf
daa
imul
filds
mov
mov
out
aam
popa
arpl
stos
icebp
sub
addl
cltd
out
repz
lret
aaa
jb
cmc
aad
ret
loopne
sub
sar
jmp
xor
hlt
outsb
jp
int
mov
cmp
mov
pushf
jae
push
inc
sbb
xor
sub
js
push
stos
sub
add
pusha
lods
scas
ret
shlb
push
pop
aad
lds
jno
iret
mov
xchg
cmp
jns
mov
pop
xchg
adc
sub
cld
cmpsl
dec
sbbb
push
xor
jl
xor
jbe
or
jnp
shll
loope
lret
push
out
cmc
fmuls
lcall
out
or
ljmp
out
or
aas
loope
adc
clc
nop
mov
jae
push
xchg
xchg
movsb
pop
mull
or
out
out
int
add
pop
cs
inc
adc
sub
mov
and
sbbl
fimull
mov
lds
jle
xchg
dec
pop
sbb
fwait
mov
or
enter
sub
and
mov
ja
shrl
rorl
xlat
fbld
subl
les
pushf
mov
cwtl
cmpl
outsb
insl
idivl
mov
xchg
ret
out
fdivrl
push
inc
nop
cmp
mov
int3
mov
mov
mov
dec
sbb
int3
imul
sub
pushf
xor
in
shlb
in
lods
fwait
lock
outsl
xchg
pop
loope
cltd
rcl
add
mulb
jbe
outsl
sub
pushw
inc
pinsrw
sub
sbb
inc
mov
mov
sbb
dec
divl
fidivs
loopne
dec
popa
aad
loop
pop
mov
jp
sbb
or
xor
jbe
jmp
faddl
test
std
iret
mov
in
adc
pop
xor
dec
sub
push
adc
jp
call
ja
xchg
loope
inc
scas
gs
or
out
xor
pop
dec
and
lods
mov
mov
push
mov
add
loope
cmpsb
push
inc
es
mov
xchg
in
loopne
mov
imul
sbb
ficoml
test
scas
or
addr16
clc
pop
out
push
loop
int3
mov
fnstenv
pop
loop
iret
push
push
mov
jo
clc
cmc
cmp
movsl
push
jns
dec
int3
add
add
push
cld
or
lea
inc
mov
out
inc
mov
fisubl
cmc
jb
and
inc
fcomps
insl
fcoms
mov
sub
or
cld
rolb
xor
add
add
jnp
mov
xor
fidivrs
andl
adcl
pop
test
notb
jecxz
push
pop
xor
cli
pop
and
test
hlt
xchg
addr16
gs
cmpb
or
in
jns
adc
vhsubpd
sbb
ss
es
xor
mov
xor
add
pushf
add
xchg
cs
cs
cmp
mov
stos
je
ss
jecxz
push
adc
fwait
inc
sti
push
out
inc
jecxz
jl
cmp
mov
push
sub
jb
inc
out
push
loopne
ret
mov
shll
adc
jns
aad
sub
add
loopne
dec
dec
call
dec
jp
popf
dec
insb
xchg
ret
adc
pop
mov
cmp
pause
orb
pop
lret
push
jge
cmpxchg
ljmp
xor
push
push
jb
sbb
pop
xchg
popa
je
pushf
adc
jo
and
inc
in
sub
repnz
sbb
dec
add
and
lret
jb
mov
sub
sbb
addl
mov
mov
add
jbe
mov
sub
fsubrl
sar
sbb
loope
and
add
cmp
ljmp
dec
shr
adc
in
pop
iret
fisttpll
xor
xchg
int3
lret
in
push
aam
add
fidivrl
lock
mov
ffree
push
push
cmp
push
xchg
cmpsb
dec
jb
inc
fucomp
adc
cwtl
mov
mov
js
sahf
fucomp
fwait
loop
stos
add
inc
lret
jne
push
fs
icebp
cs
xchg
mov
shll
dec
dec
popf
mov
xor
add
daa
aad
inc
xchg
loope
aam
bnd
insb
mov
cmp
pop
mov
or
xor
xor
inc
ss
cwtl
addb
mov
mov
aad
jb
xchg
xorl
test
out
jl
jg
push
mov
jo
pop
cmp
je
push
xchg
mov
adc
sbb
data16
arpl
jle
mov
pop
pushf
jbe
cmp
mov
movsl
add
jnp
push
sbb
dec
xlat
mov
pusha
jns
cmp
fisttpl
or
in
ret
ds
mov
jnp
popa
xchg
scas
loopne
inc
testl
fcomp
dec
and
mov
or
dec
aam
push
imul
mov
jnp
movsl
int3
and
and
push
or
imul
test
cmp
or
and
mov
sbb
inc
sbb
in
out
mov
scas
popa
mov
mov
lds
movsb
jne
imul
lret
popf
and
out
sti
and
inc
dec
mov
repnz
not
jns
mov
and
loop
or
jge
jae
push
pushf
mov
mov
jne
mov
adcl
fdivl
mov
mov
lahf
sbb
jnp
fistpl
aam
mov
ss
das
aaa
jns
add
pop
out
cltd
aaa
pop
lock
xor
or
mov
fadds
call
out
xor
push
lret
add
aad
rcrl
lret
xchg
add
jg
dec
or
sub
int3
and
lcall
sbb
push
ret
scas
inc
sub
push
lret
insl
jp
mov
xor
add
push
pop
outsb
dec
nop
push
push
jbe
push
sub
cmpsb
mov
sub
dec
mov
xorb
pop
inc
mov
xor
jge
or
cmp
dec
outsb
stc
inc
sub
xchg
sti
pusha
push
sbb
xchg
push
pop
mov
out
xchg
xchg
popa
lods
lock
mov
fwait
xchg
fcmovnb
test
pop
cmp
mov
push
in
shll
jno
mov
in
push
xor
or
sbb
lcall
sbb
scas
lcall
pop
sarl
push
dec
mov
inc
pop
test
sahf
wrmsr
push
mov
xor
leave
dec
imul
add
loopne
out
lcall
xchg
mov
scas
scas
inc
incb
mull
testb
xor
adc
sbb
pop
inc
stos
sahf
repz
add
ffree
cmp
into
je
mov
jne
lea
sahf
stos
push
sub
test
and
xor
icebp
sub
fbld
xchg
pop
adc
incb
fwait
mov
and
push
rorl
xchg
push
jmp
insl
dec
jbe
sub
jb
sub
and
adc
adc
icebp
push
sub
sbb
adc
ja
data16
add
xchg
add
nop
fdivs
rolb
jmp
mov
adc
mov
insl
mov
xchg
sbb
aas
fcompl
outsb
test
cmp
lahf
and
inc
sub
cwtl
loopne
sbb
sub
popf
scas
sub
call
jno
mov
enter
xor
pop
jne
add
inc
lea
btc
and
jnp
sbb
mov
xchg
jbe
xchg
aaa
outsb
jb
stos
sub
loope
mov
call
test
out
or
test
or
dec
jg
jb
xchg
or
jbe
mov
aam
pop
jg
sub
insl
jo
cmpsl
xchg
repz
push
add
je
test
cmp
jnp
sub
adc
jmp
xchg
out
mov
popa
stos
push
ret
out
fs
mov
lcall
push
out
xor
lds
lods
cmpl
fimull
arpl
xchg
sub
pminsw
and
mov
out
test
in
mov
and
and
mov
sub
sbb
mov
iret
mov
dec
xor
jbe
mov
imul
cmpsb
push
and
and
adc
ss
sbb
pop
mov
push
in
cmp
lock
int
incl
gs
dec
jne
shll
ret
out
and
sub
jmp
dec
jae
xor
sbb
inc
push
adc
pop
stos
lds
xor
jo
xchg
mov
daa
xor
adc
or
xor
mov
scas
rolb
sub
arpl
or
cmp
cwtl
push
ja
inc
lds
xor
and
cmp
jg
sub
lret
push
pop
insl
xor
andl
fwait
mov
pop
cwtl
into
stos
sbb
cld
xlat
loop
inc
out
jp
cmp
push
lods
sbb
and
sbb
jp
iret
jns
daa
mov
mov
xor
addr16
sbb
les
xchg
sbb
xor
addr16
jb
add
dec
push
mov
fs
inc
cmpsl
cmp
mov
fldt
jle
mov
outsl
sub
into
sub
jns
in
xor
imul
fs
push
xchg
pop
clc
leave
fisubs
in
notb
sub
mov
rolb
push
sbb
mov
loope
mov
fiaddl
sbb
cmc
dec
ss
mov
pushl
sbb
leave
pop
das
push
pop
std
jecxz
data16
xchg
jno
and
pop
pop
or
outsl
inc
pop
test
mov
insl
or
sbb
push
xchg
push
bound
adc
xor
push
xorl
and
iret
mov
rclb
loope
fdivrl
jmp
outsl
mov
js
push
push
jno
cmpsb
ss
call
add
adc
push
push
and
test
sbb
ds
mov
cmp
mov
mov
cmp
or
popa
dec
mov
outsl
es
into
push
mov
gs
sbb
in
addr16
dec
mov
mov
dec
add
repnz
sub
rcr
xor
sbb
sub
xor
lods
mov
mov
ret
test
repz
test
jge
fidivrs
scas
inc
jae
cmp
push
fadds
lods
and
rcrl
ss
fsubs
packsswb
test
in
ss
ss
jnp
xchg
shrl
sbb
notl
push
mov
jo
mov
js
adc
cmp
add
ds
mov
or
fnstsw
jb
jge
mov
mov
mov
push
das
mov
aaa
dec
mov
xchg
mov
mov
sbb
sarl
je
jb
sub
les
inc
notb
fwait
mov
test
xlat
sti
dec
sbb
mov
sbb
dec
mov
aas
cmp
cmp
in
jge
or
add
aam
clc
arpl
clc
cld
hlt
add
lret
hlt
inc
sbb
out
clc
pop
dec
rorb
xlat
mov
je
push
inc
mov
stos
in
mov
mov
hlt
loop
pop
push
mov
fcmovbe
cmc
lcall
pop
jo
shll
dec
mov
fbstp
inc
jmp
cmpsl
outsb
cmpsb
mov
lret
jle
jbe
loopne
es
notb
adc
enter
ret
jmp
jno
hlt
xchg
sbb
loopne
movsb
rcrl
mov
int3
in
loop
stos
in
repnz
in
bound
xchg
or
cmp
inc
cmp
pusha
push
jecxz
mov
enter
dec
push
pusha
pop
lods
add
or
adc
cwtl
add
fisubrl
push
sub
mov
sbb
addl
cmp
loop
out
ja
arpl
out
mov
addr16
jbe
pop
or
shrl
test
jae
push
js
mov
ja
mov
cmp
inc
aad
dec
cltd
jge
outsl
lahf
and
xor
push
dec
or
mov
inc
lods
xchg
sub
add
xchg
flds
sti
pushf
fwait
mov
jae,pn
dec
jo
imul
in
inc
lods
pop
aaa
repnz
dec
sbb
dec
xchg
add
js
adc
leave
xor
lods
push
cltd
add
imulb
movsl
fisttpll
cmc
mov
adc
mov
fwait
xchg
xor
jbe
shr
xor
mov
mov
add
jo
subb
mov
jp
lds
cmp
adcl
int3
inc
imul
or
scas
orb
test
sub
add
and
xor
das
lret
fucom
pusha
mov
inc
adc
fs
mov
mov
lcall
xor
repnz
daa
push
mov
in
mov
lock
test
pop
js
pop
xor
sbb
inc
outsl
loop
pop
ret
jp
pop
fistpll
fstpt
add
mov
adc
push
rorl
fstpl
leave
pop
push
cmp
push
pusha
imul
ljmp
fstpl
mov
nop
stos
gs
pop
sti
xchg
inc
and
out
jecxz
and
enter
pop
jmp
cs
dec
sub
pop
call
fucom
call
adc
and
mov
adc
incb
clc
fsub
pop
push
in
dec
jnp
jbe
insb
outsl
or
or
jb
push
mov
leave
out
cmc
stc
inc
inc
mov
sbb
and
fucom
and
mov
jmp
xlat
mov
jp
enterw
popf
xchg
cli
add
or
inc
xor
ljmp
imul
dec
xor
jp
cli
mov
aad
cmpsl
push
or
mov
add
sbb
mov
ret
add
lret
jmp
imul
add
sub
lret
inc
mov
sahf
sar
adcl
iret
inc
mov
inc
insl
push
test
ja
jl
mov
inc
nop
fnstenv
pop
mov
lock
cmp
aaa
test
lcall
pop
data16
popa
jl
cmp
xchg
repnz
sti
fdivl
xchg
scas
cmp
push
pop
pop
mov
xchg
outsl
mov
scas
dec
dec
sbb
daa
mov
movsl
mov
mov
jle
and
mov
leave
push
xchg
jmp
push
sub
adc
test
jg
jmp
imul
icebp
adc
mov
xorb
and
or
std
mov
lea
cmp
movb
sbb
push
into
mov
xor
ret
mov
mov
mov
or
xor
mov
cs
cmp
or
test
repnz
test
mov
adc
js
dec
mov
mov
pop
and
cmp
std
jb
lock
pop
insb
push
in
clc
inc
cmp
dec
add
cs
aad
in
jo
shrl
sbb
mov
or
xchg
aas
aam
mov
or
daa
mov
mov
int3
fnstsw
jnp
jb
mov
sbbb
mov
cmpsl
cmp
push
jae
jne
inc
inc
fdivrs
push
bound
push
mov
jne
movsl
adc
cmp
rorb
sbb
sbb
rcrb
lods
fistps
leave
fst
mov
lds
stc
idivl
add
fstpl
pop
icebp
lret
sub
insb
sub
movsb
ljmp
push
pop
jp
rol
mov
imul
imul
adc
dec
mov
hlt
hlt
pop
mov
mov
pop
xor
sbb
inc
or
loop
scas
outsl
mov
add
loopne
cmc
out
andl
mov
mov
hlt
sarb
or
insb
stos
pop
notl
aas
sub
jl
aaa
jnp
lea
lods
mov
vmovsd
mov
shr
mov
xor
mov
dec
sub
fdiv
rorl
xchg
mov
or
mov
adc
fsts
mov
jecxz
lds
pusha
xchg
cltd
sub
aas
ror
movsl
xchg
or
xchg
or
xchg
clc
pop
iret
adc
aas
ficompl
hlt
lods
xchg
mov
push
jge
xor
dec
dec
dec
rcrb
ss
fsin
jo
outsb
pusha
sub
jmp
inc
xchg
xchg
incb
xchg
jmp
ss
push
mov
sarl
xor
and
sub
mov
push
in
jb
popf
mov
inc
and
and
lcall
fxch
mov
cmc
and
pop
orb
xor
xchg
aad
dec
inc
lds
mov
dec
xchg
xor
cmc
mov
aaa
out
lahf
sub
pusha
dec
and
ror
iret
dec
data16
or
test
push
push
jl
xchg
sub
xchg
clc
add
cmp
mov
pop
xor
or
js
add
shll
in
outsb
das
popf
ds
ss
outsb
pop
sub
mov
dec
push
xorb
aaa
cmp
loope
add
sbb
xchg
mov
shlb
mov
mulb
inc
in
mull
iret
jns
clc
jae
mov
fld
insl
push
sbbl
scas
data16
xchg
dec
push
bound
pop
fsubs
add
push
nop
cmp
sub
call
add
notl
sbb
popf
mov
xchg
push
aam
lahf
fidivs
jmp
pop
movsl
and
pop
or
pop
rcrl
repnz
test
mov
test
sbb
cmpb
movsl
les
notl
stos
dec
cmp
push
rcll
sub
pop
jge
mov
mov
xchg
xor
scas
jecxz
lret
mov
pop
push
in
add
call
ljmp
jbe
icebp
jns
pop
fcom
and
adc
mov
shlb
cmp
stos
mov
mov
ret
pop
add
ficompl
repz
jae
test
push
pop
mov
cmpsb
lret
mov
sbb
push
subb
arpl
dec
mov
jae
mov
lcall
adc
mov
leave
pop
incl
es
push
sbb
xlat
inc
xorl
xchg
outsb
das
inc
int
dec
outsl
push
pop
mov
sub
xorb
das
rcrl
orb
lcall
push
jecxz
clc
inc
in
insl
xor
cmc
mov
leave
in
outsb
in
fwait
xlat
dec
mov
gs
cmp
jnp
ljmp
shlb
daa
adcl
test
cmpsl
mov
mov
lret
fstpl
arpl
xchg
adc
mov
shll
fdiv
jnp
add
cmp
dec
push
pop
insb
pop
test
dec
push
stc
xchg
test
hlt
lcall
add
lea
jmp
mov
dec
sub
int3
pop
inc
mov
inc
shrl
imul
mov
inc
aaa
cmp
mov
xlat
and
mov
xchg
or
in
jl
fdivl
subl
mov
cmc
jmp
repz
xor
jne
popa
iret
or
andb
jns
jl
mov
jl
ja
pop
mov
add
cmp
push
icebp
adc
adc
lret
lahf
cli
test
and
jae
xor
cld
scas
mov
inc
adc
cmp
aam
repz
jo
in
push
xor
xlat
jle
mov
xchg
add
inc
jl
adcl
dec
xchg
pusha
loop
sub
nop
push
sbb
push
xchg
mov
scas
int
insb
mov
sbb
insl
push
lret
jecxz
or
mov
ret
insl
insl
inc
sbb
xor
int
push
movsl
jne
adc
cmpsb
faddp
fnstenv
fs
test
jbe
mov
mov
mov
jns
data16
jle
shrb
xchg
in
mov
fwait
or
aad
lock
in
fistpll
outsb
pop
mov
xlat
cld
jmp
aas
les
inc
dec
outsl
sti
cmp
push
mov
cmc
mov
xchg
cli
ret
addr16
jmp
mov
rclb
xchg
xor
mov
jns
call
cltd
sub
rol
in
mov
xor
iret
dec
inc
jg
lea
or
add
movsl
jmp
scas
xlat
loop
lret
shl
int
pop
jo
lock
flds
std
cld
outsb
pop
addl
dec
ds
in
xchg
xchg
pushf
jmp
mov
cmp
mov
addr16
or
ja
loopne
pop
shld
int
mov
add
jmp
xchg
mov
or
cli
xchg
add
push
mov
mov
inc
mov
dec
inc
call
jmp
pop
in
or
mov
and
jge
test
cs
dec
fidivrs
mov
in
dec
adc
cwtl
xor
sti
je
sub
ret
out
xor
xchg
imul
fstpt
cli
sub
loopne
inc
push
and
inc
add
loop
add
cs
mov
push
enter
pushf
je
imul
add
fsubr
gs
xor
pop
lcall
pop
sub
push
jg
enter
mov
pushf
and
dec
jbe
in
push
mov
movsl
mov
sub
sbb
mov
aaa
je
fdivr
mov
and
mov
loopne
cmpsl
cli
sti
xlat
jb
or
push
adc
cmp
and
test
imul
jecxz
mov
outsb
xchg
out
push
ret
dec
pop
fisttps
push
adc
and
sub
add
and
ret
mov
cli
sbb
aaa
push
add
or
andl
data16
in
daa
sub
sbb
jl
push
test
inc
shlb
jge
std
and
insl
pop
aas
lahf
push
xchg
adc
cwtl
jg
repnz
lea
push
cmpsb
dec
out
stc
fildl
xchg
xchg
fstpt
mov
mov
decb
outsb
jbe
inc
mov
mov
scas
rorl
cmp
pop
es
xorl
outsb
faddl
mov
stc
dec
sbb
inc
popf
pop
aad
jo
mov
jecxz
jo
mov
sbb
fistps
std
rclb
mov
inc
mov
sub
mov
ja
mov
pop
jl
add
and
stc
jns
xchg
xor
lret
ss
cli
dec
test
cmp
push
test
cmp
dec
add
pop
xchg
int3
sbb
jecxz
mov
loop
mov
jmp
in
fs
out
scas
cltd
adc
push
arpl
sahf
mov
and
out
es
fs
push
addr16
outsb
jae
lcall
iret
pusha
stc
int
int
leave
fiadds
add
movsb
ljmp
cli
fidivrl
mov
or
aas
xor
dec
loope
push
ret
inc
sub
mov
or
imul
mov
imul
pop
add
cmp
iret
movb
jns
shrb
mov
or
cmc
cmp
aaa
and
ja
cmp
loop
scas
mov
inc
add
je
or
inc
mov
fstpl
test
dec
mov
or
out
test
jo
loope
outsl
lret
add
add
push
imul
sub
push
sbb
or
ret
les
adc
jecxz
lret
in
jnp
jl
jp
dec
out
aaa
mov
xor
mov
out
repnz
lahf
inc
adc
fidivrs
subl
inc
aas
jecxz
iret
add
out
cmc
pop
mov
fisttpl
call
out
push
push
mov
lret
xchg
call
lea
push
inc
xor
and
bound
sub
sbb
mov
mov
clc
out
movsl
aam
inc
jne
jg
enter
jnp
lea
push
rsm
or
movsl
inc
push
je
inc
pop
ret
adc
pop
jbe
jmp
xor
test
lahf
mov
sahf
je
bound
pop
inc
pop
mov
jne
dec
lods
xor
jge
xor
xor
mov
cmp
dec
pop
mov
js
xchg
sub
cwtl
cmpb
push
add
push
mov
xchg
ret
cli
inc
int3
push
sbb
and
ds
fists
icebp
mov
cltd
jne
mov
xchg
cmpsl
mov
dec
mov
cmp
fdivp
ja
sbb
cwtl
mov
push
pop
arpl
ja
dec
mov
mov
stos
incb
xor
xchg
xchg
aaa
xchg
inc
mov
pop
fs
mov
andb
push
insb
add
scas
mov
pop
mov
into
sbb
dec
jbe
inc
pop
pushf
rcl
fisubrs
inc
dec
cmpsl
sub
sub
fadd
cmp
shrb
aad
sbb
rolb
and
jp
add
push
popf
sbb
or
xor
imul
inc
addl
dec
mov
mov
add
imul
inc
cmc
sbbl
mov
es
mov
das
iret
and
sahf
adc
pop
jl
jp
pop
shrl
add
cmpsb
mov
xchg
or
cmpb
rolb
addl
fcomi
insl
pop
idivl
cmpsb
mov
or
mov
cmp
sbb
sbb
and
jp
js
shrl
shrw
out
xor
push
ljmp
mov
wrmsr
sti
scas
lods
aam
cwtl
lret
lods
arpl
inc
addb
cmp
sbb
out
lahf
pushf
mov
mov
ss
push
mov
pop
mov
xor
lea
fisubs
push
pushf
jge
sbb
dec
adc
inc
in
inc
ds
and
imul
or
rclb
enter
dec
in
pusha
jl
xor
lds
pop
ljmp
into
lods
sub
or
mov
lret
add
vxorps
ret
jno
adc
jl
movsl
xlat
push
ss
das
cmpsl
cmp
cmpsl
aad
and
pop
loope
test
int3
insl
jle
aas
jae
in
call
adc
sbb
lods
icebp
sbb
push
add
mov
cmp
mov
jl
loopne
xchg
pusha
add
or
or
inc
jg
out
mov
mov
jecxz
mov
and
or
pop
int3
bound
add
mov
sbb
xlat
mov
inc
or
jmp
out
mov
dec
mov
fwait
in
adc
int
xchg
mov
ljmp
mov
insl
mov
in
shl
int
test
fcoml
mov
ret
mov
aas
xchg
push
fcmovne
fiaddl
pop
push
sbb
out
das
and
pop
inc
shr
repnz
fmuls
clc
imul
into
sahf
mov
fwait
gs
dec
pop
xor
pop
fdivr
in
dec
or
jbe
je
sub
cltd
and
ret
sar
ja
inc
xchg
pop
sub
aad
enter
xor
jge
clc
cld
popf
push
nop
inc
pop
cmp
cmpsb
push
xchg
add
ret
aad
xor
jl
rclb
js
test
ret
rcrb
pusha
sbb
rcrb
ja
or
mov
or
lret
inc
ret
mov
rcrl
or
movsl
daa
sahf
fwait
mov
shr
adc
sub
cmp
sub
lock
aad
lret
dec
mov
cmc
mov
jns
js
scas
or
adc
sti
dec
fisttpl
in
mov
fucomip
or
sbb
enter
dec
loop
movsl
adc
mov
js
jne
iret
dec
lret
inc
stos
lahf
and
aaa
nop
test
adcb
mov
icebp
shr
xchg
jne
sub
xchg
lret
out
sub
out
xor
ja
out
or
in
xchg
mov
mov
test
loop
push
lret
xchg
mov
cmp
imul
mov
out
or
mov
iret
lret
inc
popf
shll
lret
jge
or
lea
add
xor
xchg
cwtl
fisubl
xor
lret
outsl
sub
lret
fsubrs
aas
xor
cmp
outsb
jo
jl
out
adc
repnz
shlb
rorl
pop
notb
mov
sbb
notb
aaa
xchg
dec
xor
jb
out
cmp
ret
sahf
aam
dec
lods
jmp
outsb
jo
jg
cld
aad
mov
out
dec
aad
scas
decb
orb
xor
adc
mov
mov
sub
jmp
out
and
std
xor
fs
mov
addr16
sub
jmp
xchg
jge
cmp
pop
hlt
xor
mov
int
jns
icebp
sbb
adc
pop
inc
outsl
std
inc
jae
jmp
dec
rcl
test
fisttpl
leave
lea
mov
mov
fucomi
lahf
rol
sub
xor
js
iret
clc
sub
repnz
movsl
out
jle
cmpsl
adc
fwait
pop
push
or
mov
mov
addr16
js
in
and
cmp
outsl
xchg
push
push
mov
jmp
test
pusha
sub
push
icebp
rolb
inc
out
mov
js
cmp
hlt
cmc
cmp
and
push
pop
mov
sbb
repz
xchg
cld
sbb
mov
jg
dec
mov
mov
loopne
mov
mov
dec
push
lds
inc
mov
sbb
je
jge
or
pop
xchg
pop
inc
add
dec
lock
cmp
pop
loop
xchg
iret
sbb
inc
decb
dec
jmp
dec
xor
dec
jg
mov
and
iret
inc
stos
into
push
xor
sbb
push
jb
dec
dec
mov
cld
outsb
fistps
test
imull
cmp
and
js
repz
mov
or
cltd
inc
mov
shrl
js
dec
ret
dec
call
lcall
adc
or
test
call
mov
add
mov
xchg
jle
pusha
mov
cmp
jns
iret
sbbb
push
sbb
mov
mov
lret
addr16
cli
int3
xchg
sahf
loopne
or
sbb
add
adc
sbb
out
aad
lock
cwtl
sbb
lahf
pop
stos
jb
popf
faddp
or
inc
add
xor
fldenv
push
fadd
loope
adc
or
or
in
xchg
sub
xchg
popf
incb
lret
mov
sub
jbe
jno
sbb
push
pop
aas
mov
jmp
loope
scas
pop
lea
lret
dec
loop
push
inc
sar
mov
pop
pinsrw
jbe
xchg
dec
inc
sbb
mov
inc
sbb
fisttps
leave
jno
gs
cmpsb
mov
and
add
rcrb
jle
test
divb
lcall
or
jg
and
daa
jmp
lods
jmp
rcrb
sarb
addr16
sbb
scas
lods
add
fdivr
stc
and
jl
jo
push
xor
popa
xchg
icebp
pop
sbb
in
jns
idivb
xchg
pop
fwait
enter
xor
xlat
cmp
mov
inc
and
push
fcomip
inc
leave
push
movsl
scas
mov
popf
pop
pop
mov
mov
aaa
xor
or
xor
dec
repnz
dec
add
sti
push
in
ret
xor
pop
in
or
aaa
cs
cmp
inc
test
outsb
inc
shll
in
adc
cmpsb
jnp
sbb
xchg
mov
xor
ja
pop
fbld
push
scas
and
jae
cmpsl
and
loop
leave
jmp
je
add
adc
aaa
pop
jl
movsb
popa
lds
ja
shl
mov
mov
inc
or
inc
stos
loope
xchg
mov
into
and
pause
or
popf
xor
insb
or
sahf
pop
jb
sub
gs
xchg
xlat
lret
icebp
sub
pusha
push
cwtl
call
rolb
pop
mov
inc
mov
leave
sahf
cmp
addw
lods
ljmp
xchg
orl
push
mov
or
push
out
data16
cmp
xchg
je
adc
sub
cmp
push
rclb
and
cmpsb
out
sbb
and
xor
hlt
or
push
jbe
inc
pop
push
xlat
push
add
pusha
pop
push
mov
movsb
cmp
aam
push
adc
insb
sahf
subl
shlb
je
leave
xchg
sub
xor
pop
xor
test
aad
mov
test
icebp
pop
and
enter
pop
aam
popf
dec
adc
push
clc
cmp
mov
jne
lret
sub
iret
insb
fldl
ret
ror
cmp
cmpsl
push
leave
mov
ljmp
cwtl
ret
cmp
nop
mov
or
hlt
jp
push
fs
adc
pop
dec
test
fcomi
mov
in
andl
pop
mov
rclb
dec
xchg
jo
pushf
mov
outsb
lods
pop
movsb
out
and
push
ss
fsubrl
jmp
jae
jbe
cmp
push
scas
bound
mov
adc
mov
aas
int3
insb
jl
and
pop
outsb
and
rcrl
push
rol
and
scas
sbb
jp
jae
lds
in
arpl
lahf
cli
xchg
adc
leave
daa
pop
ds
mov
xlat
dec
jl
ja
jae
out
mov
mov
push
les
cmp
ds
xchg
mov
xchg
pop
or
push
not
add
add
stos
movhps
lret
xlat
xchg
out
cmpsb
adc
les
push
dec
les
push
xor
in
sti
push
sbb
scas
and
test
jnp
push
test
out
jp
xchg
push
iret
loope
lds
jmp
jg
out
or
int
pop
js
or
pop
movsb
pusha
xor
dec
sbb
test
mov
mov
mov
push
call
mov
das
enter
mov
inc
mov
insl
lahf
and
popa
or
push
xchg
sbbl
rcrb
push
inc
fcmovne
out
idiv
adc
jae
jo
imulb
out
ds
add
pop
in
aad
lea
jg
rorb
outsb
arpl
lret
cmp
sahf
cmp
xchg
mov
aaa
jb
inc
add
mov
xor
cmp
push
push
pop
je
aas
loop
fimuls
adc
cmc
addr16
test
xlat
cltd
aaa
jo
sub
mov
mov
pushf
ds
xor
cmpl
mov
cmp
test
sbb
xor
dec
sub
cli
sub
sub
or
lret
mov
or
xor
xchg
adc
movsb
or
inc
mov
clc
pop
repnz
stos
mov
lea
aad
sbb
xchg
aam
loope
iret
notl
out
popa
bnd
adc
xor
cwtl
mov
adc
lock
mov
popa
sbb
in
cmpsl
nop
test
push
rorb
sbb
popf
fsubs
fwait
aaa
push
fiaddl
ds
xor
sbbl
add
mov
subl
sbb
ret
dec
rorl
sbb
mov
pusha
adc
call
stc
and
pop
jg
scas
in
add
scas
jno
ret
lret
xchg
rorl
test
push
dec
jecxz
and
mov
dec
xor
dec
and
and
pushf
sub
ljmp
cmc
rol
fucomi
pop
stc
lods
test
push
push
or
dec
jne
jnp
adc
scas
xchg
and
mov
mov
xor
push
inc
add
adc
int3
aam
stos
pop
in
add
cwtl
call
insb
sbb
inc
xlat
out
xlat
rcll
jno
inc
mov
or
dec
mov
sbb
ret
inc
inc
pop
dec
arpl
lds
or
cli
xchg
mov
or
adc
add
loopne
andb
lods
xor
bound
mov
push
push
jle
js
inc
pop
push
nop
sbb
pop
loopne
adcb
adc
rol
pushf
jae
outsl
adc
mov
and
in
xchg
int
mov
pop
mov
outsb
mov
mov
push
scas
dec
jb
push
call
pop
pushf
in
mov
push
mov
jne
jp
and
pop
jnp
and
lret
mov
and
lds
loopne
add
out
pop
out
mov
loopne
xchg
pop
push
jge
sbb
and
inc
jne
sub
pop
xchg
xor
dec
mov
mov
jl
xchg
pushf
cmc
xor
cmp
imul
nop
jno
imul
lock
xor
mov
push
cwtd
inc
xchg
imul
andb
jmp
and
pop
xor
cltd
ds
cmp
sub
jb
dec
or
stos
mov
aad
and
icebp
std
mov
lds
cmp
test
inc
dec
popf
in
cmp
inc
adc
pop
stos
add
aas
sahf
mov
dec
sahf
dec
lcall
or
inc
jmp
inc
outsb
mov
jp
call
and
imul
cwtl
fmull
or
in
jnp
lret
imul
pop
sti
ja
aaa
mov
sbb
mov
stos
dec
mov
mov
mov
lods
xchg
pop
lcall
jecxz
fcmovu
lods
xorl
mov
inc
cmpsl
pop
and
and
fistps
xlat
pop
push
pop
dec
mov
pop
fst
mov
mov
mov
sub
dec
mov
jecxz,pt
mov
popf
loope
sbb
cwtl
sub
popa
pusha
in
sbb
inc
in
jb
mov
pop
loope
loopne
popf
lock
sar
sub
ffree
and
adc
and
fdivl
subl
sahf
adc
popf
lods
cmpsb
mov
mov
adc
jmp
xchg
sbb
dec
sbb
push
stos
jmp
addr16
mov
mov
push
sbb
outsb
mov
icebp
mov
ret
xchg
mov
push
adc
mov
xlat
push
jae
repz
xor
call
in
adc
jmp
mov
imul
xor
lea
lahf
inc
stos
lods
dec
and
dec
xlat
fists
jmp
inc
inc
mov
inc
pusha
push
leave
mov
cli
cmpsl
fsubl
jns
and
lea
imul
sub
pop
mov
popa
clc
push
sbb
fcomip
sub
dec
pop
in
mov
mov
pop
mov
cmp
inc
xchg
cmovle
cmp
ds
mov
js
jae
mov
push
xchg
sbb
jo
in
fisubs
mov
push
leave
xor
enter
fsubrl
push
xchg
ja
ljmp
das
nop
dec
pop
cmpsb
inc
rorl
pop
adc
mov
lock
jle
inc
insb
ret
data16
test
div
data16
rclb
clc
mov
inc
xlat
mov
repz
adc
mov
fwait
cmpsb
jbe
outsl
test
fcompl
adc
ljmp
adc
addr16
addl
and
orl
lret
mov
xchg
es
xchg
stos
xchg
js
ja
and
pop
in
mov
pushf
and
data16
mov
jl
xor
ss
adc
mov
int3
or
fwait
inc
ds
xchg
xchg
mov
xchg
aas
dec
adc
push
inc
ror
push
sbb
pop
mov
iretw
imul
rcll
pushw
xchg
cmp
mov
cmp
or
fstl
ret
imul
mov
aas
push
mov
push
adc
jl
jne
xchg
adc
pop
pop
outsl
dec
aas
add
in
fdiv
sbb
imul
mov
cmpsl
pop
jmp
fstpt
or
test
je
xor
lret
rep
das
dec
iret
into
cltd
xor
test
mov
xchg
inc
pop
icebp
addr16
or
xchg
and
mov
jle
aam
xor
jns
inc
fimull
pop
rcll
adc
jle
push
mov
dec
fcmovne
add
pop
cmp
or
mov
das
xchg
test
fidivrl
mov
xor
sbb
subb
outsl
in
xchg
sbb
mov
and
lods
push
in
loopne
sub
sub
push
outsb
andb
insb
imul
xor
push
icebp
rorb
jne
insl
xchg
add
icebp
sbb
and
popf
sub
push
or
pop
or
adc
in
hlt
ffree
mov
in
mov
icebp
mov
inc
inc
sbb
push
xchg
lods
sbb
cmc
leave
ja
mov
push
and
xchg
push
cmp
mov
push
cltd
scas
iret
sbb
cmp
or
xor
adc
sbb
or
jns
mov
sbb
dec
inc
push
jnp
xchg
in
jae
es
popa
mov
inc
inc
mov
loopne
leave
mov
fs
adc
test
and
mov
cmpb
or
jbe
pop
ja
andl
push
repnz
push
out
imulb
and
popf
and
inc
test
adc
popa
xchg
int
dec
xchg
call
mov
popf
int
sbb
movsl
and
and
fimuls
lahf
or
into
mov
jae
fwait
stos
pushf
inc
popa
or
cmpsb
insb
adcl
outsl
cli
aam
lods
in
iret
xchg
xlat
xor
cmpsl
mov
xchg
mov
dec
fdivrl
ljmp
fsubrs
and
maskmovq
notl
out
mov
cltd
cld
xchg
ret
cmp
fstpl
sarl
popa
imul
push
cltd
adc
call
or
ja
or
out
sub
jmp
push
sbb
inc
sub
faddl
ljmp
xor
sub
aad
jno
pop
jmp
das
add
inc
sub
sbb
adc
mov
iret
cmc
iret
lds
lcall
xchg
mov
test
xchg
push
scas
sbb
mov
push
xlat
lds
mov
repnz
loop
fdivrs
jne
bound
daa
icebp
ja
or
jge
mov
popf
xor
imul
enter
test
cmpsl
loopne
add
mov
add
dec
mov
mov
movsl
mov
je
rorl
sub
xor
lret
sub
jb
or
add
push
cmpsb
dec
test
out
xchg
es
adc
mov
push
xlat
ret
incl
xchg
lret
xor
hlt
xlat
and
xor
test
push
aaa
int
sarb
inc
jmp
aam
or
loop
add
adc
scas
in
ret
lcall
out
jns
xor
daa
sub
jle
sbb
jg
fmull
mov
movsl
xor
mov
imul
xor
loopne
movsl
fisubs
movsl
push
lret
addr16
jbe
or
int3
xor
pushf
movsl
lock
pop
idivl
jmp
ret
pop
outsl
dec
insl
stos
orl
iret
icebp
adc
jno
cmpsl
mov
pop
in
mov
push
xchg
mov
jecxz
jo
sbb
dec
pop
push
cli
movsl
lock
je
lods
mov
sub
jo
adc
cmpsl
jnp
dec
dec
outsl
add
fcmove
cmp
mov
mov
mov
out
xor
push
push
xchg
cmpsl
int
mov
in
loopne
arpl
pop
sub
cli
mov
fistl
jbe
lds
jg
pop
leave
mov
ds
loop
add
or
movsl
into
out
aas
stc
mov
xchg
aad
jl
mov
mov
daa
pop
jle
es
adcl
fnstcw
fldenv
dec
adc
push
xchg
popa
add
aaa
addb
pop
pop
repz
lods
inc
iret
lcall
inc
fs
insl
and
cmp
aaa
push
dec
cld
sahf
out
ret
push
sub
movsb
add
es
pop
push
daa
stos
jle
test
daa
jnp
mov
add
jbe
fisubrs
call
subb
pop
add
daa
ror
sub
in
pop
pop
or
addr16
mov
fstl
mov
sbb
pop
cmpsl
lret
add
lret
jns
push
mov
neg
js
xchg
scas
ret
jno
jne
sub
movsb
scas
pop
mov
jle
adc
xchg
aas
sbb
mov
pushf
test
sahf
pusha
outsb
jle
push
add
fisttpll
cs
mov
int
movsl
push
cmp
aam
icebp
fdivrp
popl
mov
sub
cmpsb
loop
mov
dec
lea
inc
nop
sbb
mov
pop
mov
std
outsl
pop
xchg
xchg
mov
add
int3
mov
lock
cmovae
rcrl
lahf
popa
mov
stc
cmp
push
inc
cmpsl
jns
in
cmp
mov
lcall
add
fisttpll
adc
movsl
out
or
sahf
into
adc
dec
ss
inc
jbe
lea
pop
cld
lods
outsl
pop
dec
out
das
test
invd
jmp
xor
lea
sbb
jle
sub
xchg
pop
jge
push
aad
xchg
sbb
test
add
xchg
pop
je
roll
push
push
insl
in
hlt
adc
xchg
sub
pushfw
es
pop
mov
scas
in
scas
sahf
test
int
ljmp
sub
loopne
popf
sbb
test
jno
dec
xchg
lcall
mov
dec
xor
sbb
shll
call
dec
sbb
fdivl
xor
mov
iret
cwtl
pop
scas
dec
cmc
push
or
sub
ss
daa
loopne
mov
and
xor
mov
jae
jle
cmpsb
mov
sbb
push
pushl
mov
iret
in
adc
negl
and
arpl
out
test
jle
cwtl
mov
movsl
xor
out
and
adc
iret
cmp
xchg
push
pmaxsw
cs
cmp
cmp
mov
insb
hlt
lds
fdivs
imul
insb
mov
js,pt
icebp
sbb
popf
mov
xchg
mov
ficompl
inc
scas
push
pop
fs
mov
adc
and
dec
shl
outsb
cltd
cwtl
lods
jg
maxps
out
rolb
sbb
sub
and
dec
sub
movsb
loope
into
mov
out
cmp
into
adc
dec
lret
movsl
sub
add
mov
stos
xor
jp
ss
arpl
xchg
adc
sbb
into
lea
js
rorb
adc
testb
loopne
mov
in
ret
add
loope
inc
mov
mov
push
int
daa
add
ret
jnp
dec
lret
jecxz
pusha
mov
aas
cltd
fistl
mov
bound
pop
test
and
pop
push
lock
fidivl
out
imul
dec
lods
out
pop
pop
imul
out
pop
hlt
push
or
sub
in
pop
sbb
jl
lcall
out
dec
inc
cmpsl
stos
fdivs
inc
add
scas
aas
push
cmp
jle
pop
movsb
or
mov
jmp
fdivrs
fwait
mov
xchg
sub
iret
inc
popa
rorb
xor
push
stos
fisubl
out
push
push
loope
sub
jp
or
ficoml
movl
mov
mov
daa
mov
movsb
or
stos
cltd
testl
rcrl
inc
fisubrl
xchg
pop
inc
xor
into
movsl
push
sub
in
enter
and
in
mov
in
out
out
into
das
and
push
xchg
dec
test
mov
lods
add
mov
and
and
test
or
adc
push
or
mov
cs
mov
sub
add
ret
cmpsb
dec
enter
cmp
leave
ss
aas
inc
pop
pop
insl
mov
inc
sbb
push
jge
sahf
cmp
xor
pop
enter
sbb
popa
cmpsb
stos
int3
dec
xchg
scas
dec
sbb
imul
and
sub
jnp
popa
xchg
inc
out
mov
imul
outsb
test
push
out
adcl
in
adc
xchg
inc
rcrb
lahf
ja
xor
icebp
sub
lcall
push
inc
in
adc
insl
sbb
imul
adc
test
jne
add
xchg
mov
aaa
inc
aas
pop
test
data16
push
inc
imul
cmp
mov
das
xlat
xor
sub
sub
fidivrs
mov
imulb
mov
mov
cmp
call
leave
mov
and
mov
jp
xor
movsb
and
js
divl
sub
add
adc
outsb
shlb
cwtl
jmp
stos
pushf
pop
mov
fsubl
inc
add
sbb
sti
jno
cs
out
jne
fadd
fstpl
adc
dec
pop
cltd
dec
inc
ljmp
mov
jl
mov
shrl
repz
mov
out
aaa
fldl
pop
out
stos
sub
sbb
or
aaa
mov
fwait
insb
insb
shr
leave
or
mov
subb
sbb
inc
test
addb
adc
push
and
jmp
mov
inc
mov
cltd
les
push
data16
xor
enter
lods
das
bnd
lods
dec
scas
xor
adc
inc
scas
mov
insb
jnp
pop
imul
stos
ret
xchg
mov
dec
imul
rcr
outsb
dec
in
mov
jnp
aad
dec
scas
testb
faddl
lcall
lock
fdivs
push
in
mov
int
stos
or
and
sar
adc
pop
idivl
test
fs
adc
aad
aam
out
or
lret
rclb
push
push
pop
mov
dec
adc
loopne
outsb
push
add
in
jb
xchg
mov
inc
cwtl
popf
repnz
cmp
aas
sub
or
sahf
shlb
out
sbb
mov
lahf
fcoms
mov
mov
int
push
xchg
push
cmp
inc
sub
xor
leave
ret
push
mov
loope
xchg
out
stos
mov
pop
jp
sbb
js
xlat
call
ret
cmc
sarl
adc
test
and
ret
lahf
cmpsb
test
cmc
fistl
adc
pop
and
ja
dec
lea
fbld
pop
ds
daa
ret
movsb
mov
call
leave
xlat
pop
rorl
push
loope
mov
and
push
inc
jmp
dec
dec
mov
sub
add
call
mov
pop
mov
punpcklbw
push
sub
lcall
mov
cs
rol
das
or
push
add
jns
sub
sbb
push
inc
jmp
lods
push
jns
push
sbb
add
aam
dec
jb
bound
movsl
jp
adc
out
scas
push
push
pop
out
fsubl
ja
js
sub
cwtl
insb
and
cmp
dec
push
jmp
push
inc
push
pop
sub
ret
mov
lods
enter
adc
add
into
jge
cmp
push
sub
sub
insl
repz
pop
xchg
adc
aas
mov
push
enter
cld
repnz
pop
add
in
test
sbb
jns
jg
or
in
call
scas
repz
andb
pusha
imul
and
aad
xor
jo
xor
dec
mov
sbb
fwait
daa
mov
shll
mov
adc
mov
mov
addl
je
mov
mov
inc
in
sahf
pop
jmp
aad
mov
jo
je
out
imul
leave
add
js
xor
sbb
mov
shrb
ret
pop
cltd
fcomps
in
push
xor
outsb
mov
lret
mov
and
mov
sub
sub
popl
stos
jmp
pop
push
mov
ja
in
negl
data16
mov
sbb
jo
ja
push
insb
aaa
pop
in
cmp
mov
mov
pop
pusha
dec
xor
enter
adc
xor
fstpl
cli
xor
mov
lret
sarl
add
push
popf
je
mov
sbb
adc
lods
or
pop
mov
mov
and
add
jno
out
mov
aam
jecxz
pop
test
dec
cli
insl
hlt
sbb
adc
xchg
mov
or
cmp
mov
imul
movsb
xor
repnz
mov
leave
rcrb
push
fldt
push
sti
xor
mov
imul
arpl
mov
lar
or
push
push
xor
fs
mov
popf
mov
cltd
call
flds
inc
lods
mov
cs
sbb
shr
jmpw
nop
sbb
sub
lea
jle
push
int3
cltd
aas
orl
xchg
mov
jae
les
mov
or
in
lret
aaa
incb
lahf
call
adc
mov
add
jp
out
push
sbb
fcoml
iret
mov
push
aam
jne
cmpsl
test
idivb
push
cmc
out
xorl
mov
leave
jge
leave
dec
ss
call
stc
leave
test
push
test
sbb
out
lret
nop
mov
mov
fstps
add
insb
ss
outsb
int
mov
sub
je
filds
pop
aas
or
xchg
and
pop
push
xor
xchg
jb
cwtl
push
lret
or
pop
sub
jo
dec
rcr
fs
xchg
dec
inc
repnz
mov
cmp
fisubrs
loopw
sbb
es
jnp
inc
mov
mov
jo
xchg
fsubl
ss
hlt
addb
or
lret
icebp
jb
xchg
sbb
mov
sarb
mov
jge
mov
lret
push
int3
xchg
and
mov
stc
fs
jae
ss
daa
add
jle
scas
adc
stos
movsl
inc
test
mov
jmp
mov
test
cmp
mov
es
hlt
cmp
dec
ljmp
adc
jno
nop
cmc
shrd
adc
in
inc
push
add
ret
mov
pop
adc
lret
fmull
stos
xor
push
in
fsubrs
in
andb
and
fcoms
push
xor
in
cmpsl
mull
push
cmpl
mov
mov
and
jbe
add
fsubs
mov
pop
cli
push
xchg
out
mov
leave
push
adc
mov
div
daa
insl
leave
rorl
cmpsb
aam
lcall
jmp
and
fucom
fistl
inc
scas
or
das
repnz
mov
aas
repnz
xor
aaa
sbb
cltd
vcvtdq2ps
pop
sub
pop
pushf
sub
pop
shlb
sbb
lret
mov
cld
cmp
xchg
ret
adc
in
stos
mov
test
out
hlt
jne
sahf
xor
loope
mov
bound
add
pop
jl
inc
enter
in
ljmp
lea
sub
jb
xorl
in
aad
shll
mov
ss
call
addb
idivl
jle
decl
cmovne
sbb
cmc
inc
pusha
add
shlb
push
flds
lcall
add
std
sbb
mov
cmp
sub
in
stos
dec
test
cld
ret
mov
inc
or
xchg
jp
mov
inc
mov
fildl
out
inc
int
inc
jg
sti
mov
test
or
daa
or
push
mov
push
jle
mov
cmp
ja,pt
xor
xor
loope
and
cs
mov
pop
sbb
sarb
and
pop
mulb
mov
mul
daa
jl
mov
int
inc
callw
addl
es
mov
mov
enter
shll
repz
xchg
xor
lahf
jbe
mov
add
pop
inc
int
jae
xchg
cmp
mov
ret
pushl
in
mov
mov
xlat
sub
stc
imull
pop
jl
stc
in
pop
cli
sahf
ljmp
sbb
xor
or
inc
pop
fstpl
mov
mov
in
jmp
ss
stos
test
popf
xchg
sahf
push
rorb
std
cmp
cmp
push
push
lds
sahf
add
popa
and
jno
and
mov
inc
mov
je
bound
rep
mov
ss
jns
ds
sti
mov
hlt
div
inc
pop
add
cwtl
mov
call
aad
test
insl
dec
inc
jge
loope
or
ds
jb
push
ss
cmpsl
lock
sub
xchg
sub
sub
jl
cmp
push
into
sarl
dec
icebp
cmp
addb
xchg
mov
push
dec
repnz
nop
jne
imul
std
hlt
and
aas
pop
inc
daa
ljmp
call
sbb
push
add
sub
pop
lods
stos
inc
sbb
inc
add
lods
push
mov
daa
mov
dec
in
jne
std
fs
mov
or
or
fnstcw
in
inc
jmp
pushf
inc
pop
inc
sbb
rcrb
add
aad
cmp
cmpsl
mov
pop
inc
rcl
inc
push
addb
sbb
out
sub
jle
pop
pusha
mov
shrb
nop
out
inc
jo
mov
icebp
inc
test
ret
dec
popa
mov
jno
jge
sbb
dec
insb
adc
mov
data16
mov
jbe
xchg
and
stos
mov
dec
andb
lret
cmp
pop
cmp
mov
xchg
mov
xorb
out
and
out
sbb
cmpb
mov
xor
cwtl
scas
pop
xchg
inc
add
cmp
sahf
mov
pushf
negl
bound
pop
mov
xor
and
mov
or
popf
fildll
inc
adc
in
jnp
jle
push
sub
adc
in
in
ja
mov
andb
mov
sarb
mov
ss
adc
cmp
add
das
dec
push
push
mov
dec
sub
pop
xchg
push
sbb
shrl
movsb
pop
cmp
fidivrl
aaa
mov
add
sub
ss
cmp
sub
fcmovnb
pop
sub
lods
in
call
inc
adc
in
pop
jg
ljmp
fneni(8087
adc
repz
into
jb
push
mov
add
or
arpl
out
call
movsb
and
out
fimuls
xor
mov
pushf
mov
test
cwtl
mov
pop
gs
mov
jmp
int3
in
not
or
sub
fmull
jae
orl
mov
xor
ficoms
fidivl
sti
mov
mov
mov
repz
mov
ja
push
lahf
inc
incl
mov
or
or
leave
pop
call
sbb
cmp
je
mov
movsb
mov
push
add
push
lds
lods
mov
ret
shll
push
out
test
lods
movsb
pop
xor
movsb
popa
gs
daa
test
jbe
rcrb
mov
icebp
fwait
sbb
and
ret
sbb
addr16
fistpl
insb
sub
cmpsb
adc
ljmp
mov
cld
ljmp
mov
jae
negb
stos
or
ljmp
sub
lds
cmp
push
and
imul
and
sub
push
pop
xchg
mov
aam
les
cmp
stos
ret
cmp
and
stos
jns
cwtl
loopne
add
inc
push
and
cmc
sti
jnp
and
pusha
xchg
mov
lahf
jbe
or
das
mov
ds
push
ret
mov
adc
jge
pop
mov
push
push
out
cmp
push
shll
int3
pop
add
out
pop
mov
fdiv
mov
adc
aaa
arpl
fstl
xorl
pop
lock
loop
shll
lahf
xchg
dec
std
cld
or
and
repnz
adc
rcl
std
push
mov
xchg
xlat
xor
fwait
jne
sub
xchg
hlt
lds
mov
mov
adc
pusha
mov
insb
lcall
inc
push
jne
cmc
inc
push
sbb
inc
je
add
jo
cmp
sub
xor
stos
sti
pop
fisttps
or
test
js
mov
and
enter
xchg
addr16
push
cld
pop
adc
xchg
lahf
fdivr
fsubrl
fwait
in
sub
sub
cwtl
mov
loopne
xlat
jno
jne
add
insb
sbb
int3
ds
and
cmp
fisttpll
pop
mov
cmp
mov
mov
pushf
or
cmpsb
les
jg
xchg
loope
and
cmp
pop
dec
or
lahf
inc
push
je
adc
in
inc
xchg
push
cmc
out
push
add
test
adcl
add
cwtl
cmp
mov
inc
inc
popf
std
mov
inc
sbbb
and
jecxz
push
xor
in
and
and
int
push
push
sub
or
hlt
mov
push
js
jnp
add
js
jae
popa
adc
pop
enter
mov
add
mov
pop
mov
test
or
and
push
sbb
pusha
ds
cmp
addr16
adc
test
test
ret
add
fwait
mov
push
std
out
jo
stos
sarb
pop
xor
jl
loop
dec
js
xor
adc
dec
sbb
out
inc
inc
test
jne
lock
jno
or
ljmp
pop
aad
and
enter
adc
cmp
adc
sbb
dec
mov
and
je
mov
ret
mov
mov
imul
and
fldl
lds
lret
fldt
mov
push
out
sub
loopne
push
icebp
out
mov
xor
and
test
les
xlat
sub
clc
jg
pop
hlt
sbb
ja
inc
cmp
lock
sub
ljmp
sbb
mov
pop
jns
pop
or
push
sub
cmpsl
mov
or
pop
orl
mov
push
mov
add
inc
in
adc
xlat
jle
cmp
mov
arpl
adc
stos
jp
stc
mov
pop
movsl
fisubrl
les
data16
adc
shrb
mov
dec
pop
add
sub
ja
fwait
jle
test
jl
push
arpl
mov
shll
inc
add
xchg
inc
jns
jo
les
sar
out
imul
inc
pop
call
leave
sub
icebp
or
pop
rorb
cld
inc
xchg
not
lea
xor
imul
inc
rcrl
sbb
sbb
add
stos
cwtl
enter
aad
mov
ret
out
outsb
dec
mov
dec
test
push
scas
test
adc
movsb
fst
add
incl
clc
xchg
xor
sub
sub
jge
jp
scas
lods
das
inc
cwtl
mov
cmpsb
push
or
out
cmp
cmpsl
add
lea
ss
fsubrp
adc
xchg
and
out
int3
dec
stc
push
fdiv
lcall
lcall
inc
jl
pusha
and
in
roll
lock
mov
out
dec
mov
mov
jmp
movsl
jbe
inc
push
fwait
stc
inc
bound
iret
push
lcall
ja
inc
push
xlat
push
ret
test
mov
test
out
out
test
in
xchg
mov
loope
call
mov
repnz
pop
mov
xchg
mov
das
mov
popa
push
xor
mov
add
std
sub
dec
leave
add
pusha
jge
pop
push
xchg
pop
loopne
movsb
xchg
loopne
mov
adc
lds
in
jbe
movsl
roll
sub
sbb
or
data16
push
cli
inc
or
xor
clc
jmp
push
adc
pusha
dec
js
or
out
mov
pusha
jno
push
jle
and
sbb
cmpsb
popa
add
dec
repz
jo
out
push
add
inc
cmp
xor
jne,pt
push
push
mov
aaa
sbb
mov
xchg
push
add
stos
loop
pop
mov
fwait
out
sbb
or
pop
adc
push
push
mov
cwtl
pop
dec
out
ffreep
and
sub
pop
dec
sbb
xlat
mov
lret
ljmp
sbb
xchg
inc
dec
push
xorb
aad
scas
jge
ljmp
test
out
das
test
cmp
mov
mov
cmp
test
pop
int
imul
push
sbb
ds
frstor
mov
xor
sbb
loope
mov
mov
dec
adc
dec
cmpsb
cmp
and
mov
das
sti
inc
ret
vorps
push
push
aaa
cmpb
loop
sbb
outsl
mov
or
shlb
jg
xchg
mov
and
mov
shrl
ret
mov
rol
shl
pop
mov
inc
fistpll
mov
imul
add
adc
enter
pop
lahf
dec
mov
fistpl
jbe
inc
sub
leave
xor
into
add
mov
stos
aad
arpl
cwtl
pop
insl
je
test
dec
xor
repz
stos
sub
push
jno
call
sub
xchg
xorb
and
mov
pop
das
rcrl
ret
lods
shll
scas
jecxz
cmc
mov
and
cmp
jge
dec
jl
pop
and
lcall
jo
addr16
sbb
scas
add
add
add
sub
and
shlb
ret
pusha
jo
sbb
inc
daa
or
mov
in
pop
xor
jns
cli
repnz
cltd
pop
ret
stos
inc
ret
cwtl
jo
pop
imul
inc
pop
movsb
lods
jne
cltd
lret
xchg
or
mov
mov
sbb
push
in
iret
ds
push
fwait
jnp
adc
out
inc
fimull
sbb
enter
cmp
jecxz
jl
mov
dec
out
xchg
imul
pusha
push
mov
jmp
fidivs
pushf
lret
fistl
add
mov
xchg
add
outsb
or
out
pop
imul
sbb
mov
and
jno
jg
xor
xor
pop
outsl
push
daa
mov
mov
es
mov
iret
pop
shlb
ds
fs
cld
push
sub
dec
mov
adc
sbb
loopne
pop
fistl
and
lret
sbb
fldl
jb
dec
fdivrl
les
cld
daa
outsl
xlat
fiadds
inc
out
scas
adc
or
out
xor
xor
mov
ss
mov
mov
cmp
sub
sub
sbb
shrb
loopne
dec
movsl
push
lds
add
inc
out
or
addr16
push
cs
js
cmp
movsb
movsb
dec
js
jecxz
jle
mov
or
pop
roll
pop
repz
adc
pop
cmpsl
lahf
xor
fnstcw
pop
sahf
outsl
data16
add
dec
xor
movsb
arpl
loopne
sub
cmc
imul
popa
out
cld
jb
sti
mov
sbb
jno
add
fiadds
ret
jl
cmpsb
sub
jae
test
dec
int3
out
outsl
jns
lods
push
or
or
fimull
loopne
mov
xchg
sub
dec
mov
or
nop
js
outsb
ftst
jo
pop
cli
push
icebp
decb
push
pop
subl
push
push
fisubrs
sarb
dec
scas
sbb
pop
and
ss
cmp
in
ljmp
int3
movsb
jle
cmp
jmp
xchg
roll
pop
pop
js
ret
inc
mov
orb
ret
cmp
xor
jg
mov
sbb
dec
jbe
dec
int
mov
mov
xchg
mov
pushf
out
mov
flds
imul
sub
xchg
or
xchg
mov
popf
dec
xchg
das
pop
popf
orb
mov
adc
sub
ljmp
mov
jnp
ret
push
sub
push
mov
jge
xor
imul
clc
sub
cwtl
lea
rcll
push
dec
or
mov
mov
test
sti
idivl
cmp
push
arpl
mov
and
lods
inc
int
add
cli
xor
aad
pop
movsl
aaa
push
mov
std
push
sarl
outsl
xorl
sbb
cmp
fmuls
ss
movsl
std
cmpsb
cld
arpl
in
push
out
mov
adc
xchg
pop
push
faddl
pushf
mov
pop
or
xchg
sub
jle
lods
adc
mov
out
ss
inc
push
push
rcrl
cmp
inc
or
fcmovbe
je
into
cmpsl
or
fdivrs
pop
ljmp
outsb
sbb
test
jle
adc
xchg
cli
imul
xor
test
popa
sbb
lret
icebp
insb
insb
imul
inc
mov
mov
push
js
sbb
mov
mov
dec
cmpsl
popf
dec
adc
pop
mov
add
cmp
rorb
pop
or
inc
lret
pop
cmpsb
jb
ljmpw
mov
pusha
out
lcall
pop
adc
inc
int
call
mov
or
push
sarl
push
in
jb
sahf
xlat
std
push
insb
pop
and
or
jo
inc
ds
mov
in
push
jbe
inc
push
xor
xchg
mov
mov
cmp
adc
push
xchg
js
dec
adc
jg
xor
nop
lret
xchg
add
mov
inc
or
or
inc
jno
xlat
aaa
cmpsl
outsb
dec
push
in
pop
xchg
std
or
push
movsl
pop
xchg
lcall
push
xchg
inc
fdiv
mov
in
or
pop
test
out
rorl
add
pop
inc
jne
test
push
fwait
push
test
fs
inc
push
aas
mov
jmp
mov
and
xlat
adc
inc
dec
dec
arpl
mov
push
pop
add
mov
or
aad
sub
add
mov
mov
fistpll
push
in
and
or
in
mov
cmp
idivl
jb
cmpsl
lret
lret
xchg
or
das
lds
inc
loop
int3
fnstsw
xor
lret
jge
push
jecxz
xchg
dec
sub
arpl
push
jns
je
adcl
cmc
adc
fisubrl
popf
data16
sbb
push
push
adc
mov
mov
sbb
loop
enter
sbb
in
adc
jecxz
xchg
dec
mov
mov
mov
shr
cmpsb
arpl
and
scas
xor
xor
in
inc
dec
pop
lock
test
inc
mov
xchg
pop
cmpl
rcll
adc
sahf
clc
test
icebp
outsl
jnp
movl
fisubs
inc
mov
add
aam
lret
pop
mov
ja
dec
lods
mov
orl
in
pusha
inc
adc
xchg
fnsave
mov
fdivrl
imul
into
pop
daa
adc
xchg
xchg
ja
cmp
push
mov
pop
imul
or
push
aaa
jne
call
mov
sbb
cmp
cli
cmp
loope
or
loop
xchg
lret
mov
test
jmp
cmp
inc
jg
cltd
sbb
sahf
mov
arpl
add
je
inc
mov
mov
push
int3
mov
mov
jne
insb
dec
xor
imul
call
push
push
sarb
imul
dec
mov
xchg
xchg
pop
stos
sbb
ja
shl
adc
pop
shrb
mov
andl
mov
add
das
adc
mov
mov
loopne
lret
pop
cltd
pop
and
shrl
mov
dec
movsb
and
outsl
adc
repz
mov
fisttpl
notb
int
addr16
xchg
pop
sbb
cmp
pop
scas
or
je
dec
dec
push
movsb
ficomps
mov
jns
jmp
ret
enter
fldcw
xor
push
jl
jne
push
mov
xchg
mov
jl
in
xchg
adc
mov
xchg
pop
mov
lock
shlb
mov
cwtl
fwait
xor
movsl
sbb
adc
and
and
push
mov
mov
cmp
nop
clc
or
stos
loope
popa
ss
sub
cmp
jg
mov
aas
and
sbb
push
fsts
mov
and
stos
dec
bound
in
mov
mov
push
imul
and
mov
inc
xchg
mov
jp
repnz
add
pop
movsb
stos
inc
je
dec
pop
cmp
jne
into
sub
out
fcmovb
pop
popf
out
shl
mov
and
and
in
sub
lahf
mov
push
jg
lods
repz
negb
inc
push
jb
movb
insb
inc
out
xor
aas
xchg
stc
sub
ds
int3
sub
shrd
inc
push
js
sub
push
rcr
mov
pop
push
xor
bound
and
out
fisubrl
in
test
xchg
or
xor
cmp
xchg
imul
and
dec
cmp
enter
arpl
adc
inc
push
movsl
mov
add
repz
mov
inc
sub
and
push
mov
inc
clc
inc
xchg
xchg
stos
add
icebp
xchg
jns
loopne
dec
popf
xchg
fisubs
add
xchg
lret
mov
pop
pop
hlt
iret
int
test
ljmp
and
xor
push
dec
movsl
das
pop
leave
and
mov
mov
pop
push
enter
roll
and
mov
adcl
sbb
xor
mov
adc
shlb
jmp
mov
add
or
jne
or
lret
add
adc
popa
xor
sbb
sbb
sarb
lods
cli
add
jbe
cmp
mov
sub
stos
fimull
into
je
sbb
xchg
xor
addl
push
popa
and
inc
jmp
push
lods
mov
dec
pop
dec
cmp
popf
notl
and
es
mov
push
sbb
cli
sbb
pop
xor
jmp
js
adc
in
fwait
loop
roll
mov
jnp
sbb
int
test
mov
ss
pop
jnp
es
push
decl
aaa
decb
lock
dec
call
pop
mov
pop
in
mov
and
filds
dec
ret
xchg
inc
xor
push
jne
into
mov
cwtl
cmp
aam
inc
mov
fcoms
mov
mov
mov
sti
mov
xchg
cltd
push
ljmp
or
and
inc
ret
insl
add
in
jns
jno
xlat
mov
popa
mov
enter
cmp
out
cmp
jmp
cmp
sbb
dec
out
cwtl
sbb
pop
xchg
stos
xchg
rcrb
cmp
sbb
adc
test
fucomip
jnp
dec
jae
fwait
push
mov
sub
pop
test
stc
or
es
lds
xor
mov
leave
movsl
mov
mov
pop
cmpsl
loop
push
push
jl
jbe
sub
cmp
cwtl
jp
and
imul
jo
fsubs
jne
fcomps
cld
inc
enter
add
mov
inc
push
inc
arpl
jae
out
mov
dec
jg
and
sub
hlt
aaa
stos
lcall
and
jns
into
call
insb
jmp
adcl
test
cmp
shl
mov
add
inc
in
fsubrl
jae
mov
jg
push
xchg
mov
add
inc
arpl
insb
adc
outsl
loopne
or
fistpl
jae
dec
or
xchg
push
inc
sub
and
sub
movsl
push
xor
fildll
cmc
pop
mov
loope
ja
addr16
mov
mov
in
pop
sub
in
adc
icebp
nop
xchg
push
cmp
cltd
sub
jnp
jnp
mov
sub
das
mov
int3
inc
dec
aam
push
mov
xor
je
out
push
jns
xchg
cmp
mov
xor
sbb
push
addl
test
subb
lret
jo
push
sar
jge
rorb
aaa
jp
data16
xchg
xor
push
out
pop
lds
incb
shrl
iret
inc
hlt
in
push
shld
test
mov
insb
shll
inc
inc
pop
lret
add
lret
xchg
jnp
or
fsubrs
add
push
add
enter
dec
xor
je
mov
push
scas
cmpsb
repnz
and
scas
cmpsl
test
aam
std
sbb
imul
lcall
push
in
adc
popa
xor
in
inc
jmp
sbb
cmpsl
arpl
sahf
push
cld
xlat
dec
mov
add
repnz
out
mov
out
lret
imul
test
fcmovnu
mov
sbb
aaa
mov
sbb
popa
pop
call
lea
loopne
sbb
xor
ret
cmp
fbld
stos
shlb
loop
je
out
imul
test
push
jp
dec
or
sub
lahf
cmp
push
jb
xor
fmulp
inc
or
jp
fistpl
sbb
test
aaa
sub
mov
push
mov
popa
jecxz
pop
nop
xor
test
sub
out
dec
addl
cld
jg
out
repz
xchg
mov
jo
dec
mov
retw
inc
das
xor
cmpsl
push
int3
pop
xchg
into
clc
jae
inc
ds
arpl
loopne
testb
aas
cmpsl
jecxz
sub
xchg
popf
xchg
cltd
shlb
mov
cmpl
shlb
js
out
pop
jbe
dec
int
sub
mov
push
xor
mov
sbb
cmpsl
jae
movsl
jb
pushf
or
nop
and
cwtl
gs
mov
or
or
jbe
sub
daa
xchg
pop
jne
mov
ja
lret
and
adc
pusha
xchg
sub
icebp
popa
mov
sahf
mov
mov
minps
lea
std
mov
push
fwait
es
insl
cs
or
repz
out
inc
jecxz
rcrb
pop
mov
insb
xchg
int
inc
mov
jge
or
mov
loop
dec
jnp
add
inc
leave
inc
or
ret
iret
fists
push
mov
test
ror
cmp
movsl
add
ja
lods
repnz
xchg
and
add
mov
movlps
jg
mov
jg
in
xor
in
test
outsl
add
pop
inc
lret
addl
out
sbb
leave
xor
scas
aad
inc
lods
sahf
mov
sub
xor
or
cmpsl
xchg
std
addr16
lods
in
pop
pop
jge
je
addr16
dec
dec
mov
cmp
movsb
dec
test
pop
out
insb
dec
test
je
adc
mov
jae
xor
adc
push
in
xor
lds
std
sub
imul
mov
outsl
mov
add
flds
ljmp
icebp
xchg
lret
mov
push
and
mov
iret
ficomps
and
add
jns
and
nop
lds
mov
inc
inc
ret
pusha
pop
jb
out
imul
fs
xchg
dec
sbb
jecxz
mov
loopne
add
push
pop
push
gs
push
fs
adc
pop
sbb
gs
pop
dec
int
dec
inc
js
or
push
jae
fisubrs
fcompl
cltd
cwtl
pusha
addr16
mov
cmp
push
movsb
mov
dec
cs
sarl
adc
pop
jecxz
mov
stos
mov
es
ja,pn
movsb
xor
push
out
ja
jmp
jl
add
cmp
pop
fstp
loope
xchg
aam
mov
mov
mov
pop
push
stos
push
inc
adc
push
out
jae
mov
sub
jb
push
jbe
cld
cmpsb
adcb
sub
pandn
xlat
cld
fstpl
pop
adc
add
aaa
in
and
fdivrs
in
das
xor
inc
jl
mov
sbb
mov
push
jg
xchg
sbb
emms
mov
loop
xchg
andl
das
jecxz
inc
out
pop
out
call
lret
imul
paddusw
int
stc
vdivss
xor
test
int
mov
les
adc
add
and
pop
cmp
sub
push
movsb
test
incb
mov
mov
mov
mov
pop
adc
dec
mov
imull
test
lds
fs
aam
aad
mov
inc
daa
and
mov
jg
cmp
cmpsb
push
jge
popa
movsl
jmp
fdivl
inc
and
inc
mov
jns
xchg
sbb
cmp
cmc
mov
add
scas
add
movsl
adc
jecxz
sub
fnstcw
push
jo
add
stc
popf
mov
mov
mov
cmc
push
aam
xlat
je
adc
ficomps
mov
popa
enter
jb
jne
pop
test
lds
gs
testl
sub
cmpsl
or
das
je
pop
mov
test
lods
sbb
jns
hlt
jp
imul
cmc
mov
jp
inc
testb
xor
jno
add
cmp
pop
push
push
sahf
inc
es
mov
pushf
jb
ds
add
aam
outsb
dec
testb
hlt
cmp
and
lds
rol
push
push
xchg
adc
lret
dec
inc
cmp
aaa
mov
divb
sbb
std
enter
dec
adcl
repnz
in
mov
lods
inc
push
dec
out
lock
scas
loop
or
adc
pop
or
test
hlt
into
int
call
mov
subb
xchg
mov
push
out
dec
test
cmp
into
daa
test
jl
pop
fbstp
movsb
sbb
add
in
inc
or
in
xchg
gs
mov
mov
fisttps
je
out
xor
jnp
and
mov
push
call
adc
cmc
cmp
and
pop
push
ljmp
adc
xor
xchg
mov
xchg
in
stc
inc
mov
inc
je
push
and
nop
pusha
fwait
pop
xor
iret
leave
jns
call
push
push
ds
mov
out
xor
test
out
repnz
inc
sti
jmp
nop
shlb
cld
push
bound
mov
push
shlb
lock
bound
loop
xchg
jp
push
inc
add
ficoml
xchg
mov
dec
gs
test
psrlw
add
testb
cmp
jmp
ds
mov
mov
fcmove
mov
addr16
inc
aam
fbld
enter
sub
mov
inc
fimuls
dec
inc
xchg
jecxz
ret
test
adc
js
push
sahf
shll
aas
sub
or
sub
cmc
jmp
cmpsl
mov
mov
dec
cs
arpl
sbb
loop
xchg
movsb
jns
test
mov
std
pop
ret
icebp
loop
in
push
test
xchg
out
lret
sbb
test
test
out
fdivrp
loop
sbbl
ret
pop
pop
xchg
xchg
or
imul
inc
and
and
repz
push
push
sbb
xor
das
adc
xor
rcl
lret
xor
mov
sbb
push
dec
adc
sub
cmc
repnz
rorl
jnp
sbb
mov
lahf
fcomp
sbb
mov
or
in
lds
cmp
or
aam
push
mov
sbb
ja
lods
insl
enter
sahf
adc
xor
dec
ss
sti
ffree
mov
out
mov
xor
sahf
test
mov
xor
add
jecxz
orps
and
fs
scas
mov
cmpsl
scas
sub
lods
inc
mov
xchg
cmp
pop
popa
jp
mov
std
jge
jae
fs
mov
sti
mov
rol
inc
xchg
jne
sub
cmc
int3
sub
test
mov
aaa
pop
in
ss
push
js
mov
push
hlt
pop
mov
int
sahf
ds
arpl
es
xchg
rcrb
mov
add
repz
les
sbb
into
inc
dec
xlat
ss
lock
and
mov
pop
popa
out
jnp
pop
xor
pushf
dec
adc
imul
or
xor
fs
xchg
aam
and
jp
ljmp
jnp
popf
test
je
lds
add
inc
xor
jmp
rcrb
je
xor
push
mov
cmc
sub
cmpsl
punpckldq
dec
dec
in
test
jns
les
add
xor
pop
daa
decl
lahf
stos
stos
jo
cwtl
test
cmpsl
lahf
cmpsb
fdivs
xor
adc
push
and
or
adc
dec
pop
prefetch
or
lea
movsb
and
mov
jns
sub
hlt
fsubl
add
cmc
xchg
outsb
repnz
push
pop
xor
jo
int
mov
roll
mov
and
sbb
xchg
pushf
and
call
fistl
push
je
xor
ja
pop
call
mov
pop
pushf
push
sub
dec
leave
pusha
mov
push
loop
or
call
out
mov
sub
xchg
cmp
sarb
push
roll
mov
ja
fidivl
xlat
jno
cmpsl
pop
dec
inc
loop
cs
jo
cli
stos
lock
arpl
mov
dec
and
fisttpl
lret
jmp
fdivl
outsb
movsb
loope
push
int3
icebp
lods
les
lret
xchg
jns
inc
ja
jns
inc
das
dec
sub
test
inc
repnz
in
cwtl
mov
sub
jmp
dec
lods
in
fwait
cmpsl
movsb
push
addr16
xchg
inc
pop
subl
and
mov
inc
shlb
inc
frstor
xlat
out
leave
gs
sub
mov
fcoms
jns
es
out
dec
rolb
cmove
outsb
inc
sbb
push
into
adc
mov
adc
xchg
xchg
mov
popf
lahf
cmp
out
jae
push
scas
pushf
rolb
std
ja
ja
insl
shrl
je
pop
xchg
jl
gs
mov
xor
div
jne
jns
pop
lret
jl
mov
int
dec
dec
sub
fwait
scas
inc
jae
mov
xor
mov
add
xchg
mov
outsl
vshufpd
add
xchg
push
in
jo
sbbl
and
std
gs
out
lret
push
adc
jo
xchg
mov
insb
inc
scas
jl
mov
test
hlt
sub
daa
aad
mov
in
jecxz
data16
jae
call
aas
dec
jae
ljmp
call
and
xor
pop
sub
hlt
jo
cmp
push
adc
loope
jecxz
or
pop
movsl
incl
or
pop
leave
xchg
and
cltd
jmp
xorb
adc
xor
or
cli
mov
jne
or
sbb
mov
aaa
lock
cltd
jge
cmpsb
sub
mov
sbb
loopne
outsb
and
fst
push
adc
cmp
dec
xchg
fists
mov
xor
pushf
mov
in
and
pop
test
jb
xor
sub
pop
and
cli
lahf
mov
dec
pop
imul
xor
sub
and
inc
jge
or
sub
sub
cmp
js
cld
add
xor
jg
jge
push
popa
aad
xor
jno
sahf
and
jo
add
add
cli
popa
or
test
das
sbb
testb
into
jp
jmp
int3
or
add
dec
xchg
or
sbb
fiaddl
lret
add
cmp
pop
sbb
lcall
int3
jne
sub
inc
jmp
jae
jno
out
imul
in
or
push
stos
adc
push
stc
test
pop
das
in
cmc
adc
jge
cmp
clc
outsb
aaa
adc
pop
jg
loope
add
sub
cld
in
movsl
aam
je
pop
je
lahf
mov
imul
xor
cmp
mov
test
or
ret
pop
gs
mov
sub
mov
std
imul
rorb
push
or
aaa
xchg
test
inc
xor
fwait
outsl
pop
loope
out
sbb
fcmovnb
add
pop
mov
pop
in
inc
adc
and
test
stc
mov
out
or
dec
insl
dec
aad
xchg
gs
xor
bound
push
and
mov
push
and
mov
push
mov
add
jl
repz
cmp
jle
sbb
mov
mov
mov
cld
jo
add
xor
or
das
out
je
xor
hlt
mov
in
sar
xchg
sbbl
test
pop
mov
mov
jl
mov
ds
loop
cld
or
xor
xlat
pop
add
out
fsubrp
movsl
popf
cmc
pusha
mov
inc
xchg
lods
cld
std
and
sub
inc
cmp
sub
jno
in
cmpsb
xchg
or
fnstenv
sahf
xchg
ror
cmp
je
loop
xor
sub
fnstsw
lods
int3
mov
add
and
bound
int3
xchg
xchg
iret
cmp
orb
jl
lahf
test
xchg
add
jecxz
outsb
add
sahf
mov
inc
lds
invd
fistpll
ds
pop
push
jbe
test
cmpsb
xchg
pop
sbb
mov
loope
daa
lcall
or
jge
sbb
push
test
mov
ljmp
int
das
ja
ljmp
sub
sbb
or
cmp
sub
push
sub
adc
fwait
cmp
test
imul
and
shrb
les
pusha
xor
xchg
inc
dec
ss
ret
jb
aam
pop
mov
and
dec
pusha
push
sti
stc
das
and
es
add
mov
jecxz
cmpsl
out
not
test
mov
out
jle
nop
leave
out
jecxz
fcomp
cmp
pop
out
ret
mov
cmp
les
aas
mov
push
push
ja
std
cwtl
pop
mov
shlb
xchg
jecxz
mov
push
fiadds
orl
repnz
daa
jmp
sbb
imul
push
cli
nop
popf
lcall
adc
xorb
fildll
or
pop
fdiv
add
movsb
and
mov
fimull
cmp
fsubrs
js
daa
pop
adc
popa
mov
stos
pushf
adc
jl
jmp
xchg
scas
hlt
pop
ds
fmul
xor
push
outsl
xchg
xchg
mov
cltd
ds
lds
xor
adc
fsubr
std
daa
cwtl
jp
aad
scas
xchg
cwtl
fiaddl
loop
adc
enter
adc
jmp
push
andl
add
outsb
insb
xchg
mov
nop
imul
push
adc
out
xor
pop
pop
addr16
pushf
icebp
dec
jmp
xor
mov
mov
ror
jnp
jle
inc
stos
pop
xchg
push
cli
xchg
mov
push
add
or
pop
ja
int3
fidivrs
aad
aam
adc
lahf
icebp
cmc
loop
fisubl
test
fsubr
xchg
icebp
sbb
scas
jo
sbb
lods
or
gs
fsubrl
subb
in
cmc
mov
xor
sahf
stos
lds
adcb
mov
lods
mov
lock
push
imul
lds
push
or
ja
xchg
dec
cmp
in
pop
jecxz
das
mov
add
xchg
push
pop
mov
test
sbb
xlat
stos
xchg
jbe
sub
adc
push
out
loop
dec
mov
or
jp
mov
movsb
stos
call
ds
mov
push
scas
push
addl
ficomps
out
and
xchg
rcll
push
xor
lcall
dec
and
pop
std
cwtl
aad
pop
rolb
sbb
rorl
dec
inc
sti
mov
xchg
int
xchg
adc
and
dec
xchg
mov
imul
xchg
fiaddl
out
add
pop
insl
imul
mov
aad
stc
mov
inc
or
xor
add
shl
in
int
push
cltd
fiadds
inc
jne
outsl
or
sbbl
out
ja
in
ja
dec
rolb
adc
roll
pushf
sbb
stos
test
mov
jp
in
addr16
stc
pop
lock
inc
jbe
jl
add
inc
mov
rcll
sub
aas
pop
pop
inc
and
cli
mov
push
enter
shl
and
iret
insl
fwait
bnd
testb
cmp
jge
jns
mov
lds
out
out
mov
mov
ja
imul
shrb
xor
inc
test
imul
gs
gs
loope
xchg
push
mov
adc
xor
in
adc
aaa
and
in
iret
push
nop
and
ds
jns
pop
in
xlat
mov
mov
cmp
pop
lahf
xor
movsl
xchg
fisttpll
jno
mov
xor
cwtl
mov
mov
cli
dec
pop
jnp
arpl
push
cmp
clc
lret
cmp
mov
adc
sbb
mov
aad
mov
aas
dec
pushf
mov
sub
sbbb
sub
les
stc
mov
adc
add
jge
data16
jg
cmp
fbstp
iret
cmp
adc
mov
cld
jg
loopne
jbe
shlb
in
cwtl
mov
add
inc
push
shlb
cmpsb
pop
jbe
mov
and
popa
mov
mov
or
adc
xor
movsb
shlb
std
cs
push
and
hlt
mov
add
lret
mov
mov
cmp
cmpl
rcrl
and
mov
mov
fcmove
pop
cmp
mov
and
xchg
adc
lock
scas
inc
inc
jbe
idiv
inc
mov
push
fnstsw
outsl
xor
xchg
iret
add
insl
jb
into
icebp
mov
ljmp
jbe
fmul
inc
fdiv
lock
adc
sub
dec
push
sti
in
sbb
adc
inc
dec
jns
xchg
fwait
fs
cmc
xor
jp
and
jns
jl
int3
das
xchg
ror
ss
cmc
mov
andb
fimuls
xchg
scas
sti
ds
mov
and
jo
dec
cmpsb
sub
mov
inc
mov
test
or
add
lock
mov
cmp
jbe
fcomps
mov
aas
roll
loop
lock
mov
pop
push
sub
inc
sub
or
loope
cwtl
and
cmp
lret
imul
adc
pop
push
adc
andb
testl
sub
adc
cmp
push
xor
call
push
ja
orb
mov
xchg
inc
adc
shl
outsl
cli
jno
sub
and
lcall
ret
cmpsl
jnp
sbb
outsl
inc
sbb
fstps
loopne
into
je
out
cmpb
inc
cmp
sub
leave
mov
jbe
popa
insb
adc
xchg
pop
mov
jmp
jl
push
xchg
mov
jl
lret
in
cmpsl
es
adc
mov
minps
inc
das
inc
rcll
movsl
inc
stos
and
stc
push
xchg
cmp
xchg
nop
push
mov
shr
ret
int
nop
leave
das
and
mov
add
sbb
cmp
inc
imul
aaa
es
or
sub
mov
pusha
push
ret
dec
sbb
enter
lret
into
and
es
or
repnz
cmp
push
xlat
or
push
or
leave
jnp
adc
lds
jp
jns
inc
dec
repz
inc
cmp
dec
cltd
cmp
and
xchg
sbb
jl
adc
mov
mov
call
sahf
sbb
aas
mov
inc
pmullw
dec
pop
in
bound
xor
imul
fstl
loope
ficomps
fwait
mov
pop
mov
mov
mov
jg
cld
cmc
mov
xor
in
enter
push
sub
xor
movsl
sub
mov
adcl
and
or
xchg
jmp
pop
mov
pop
pop
das
sbb
jecxz
lahf
xor
lea
mov
xor
loop
test
sub
xor
push
ljmp
hlt
xor
loop
sub
out
push
lock
std
cmp
rcrl
inc
sbb
xchg
loop
jmp
popf
mov
xor
repz
dec
test
sbb
push
or
inc
mov
lea
sbb
push
or
xlat
jns
lret
and
or
cmpsb
jge
cwtl
pop
xchg
test
inc
xor
add
adc
xchg
sbb
pop
sub
aad
cwtl
outsl
push
sub
mov
mov
sbb
je
sub
lds
sbbl
aam
pop
mov
in
and
push
fildl
xor
aaa
cmp
cmp
pop
sahf
sbb
rol
leave
lret
imul
xor
rcrl
pop
dec
xchg
inc
shl
dec
sub
aam
lods
xchg
aas
sub
cmc
ss
das
lahf
int3
popf
push
push
mov
cli
adc
xchg
xchg
xchg
and
mov
mov
xchg
xchg
dec
xor
mov
aad
jmp
and
data16
add
popf
jno
out
and
incb
push
dec
dec
repz
scas
cmc
imul
addb
loopne
fmuls
fldt
stos
or
inc
xchg
mov
ret
mov
push
xchg
add
lock
bound
std
cmp
fs
sub
movsl
push
sub
pop
or
aad
test
outsl
fdivrs
lods
pop
pop
lea
bound
xorb
dec
insb
pusha
jns
mov
lcall
test
add
fsts
imul
xorl
scas
push
scas
mov
in
dec
adc
dec
mull
jbe
push
cmpl
insb
repz
data16
in
push
dec
mov
data16
std
jns
pop
push
cltd
inc
dec
adc
mov
mov
jae
mov
sbb
cmp
push
push
sub
fidivs
sbb
fisubs
dec
mov
dec
mov
jo
lret
or
add
mov
fdivrs
decb
jp
add
loop
mov
fcmove
aaa
inc
mov
imul
push
pop
lret
cmp
xchg
sub
mov
cli
ret
mov
int3
cltd
iret
sbb
clc
inc
mov
adc
subl
in
adc
push
pop
addb
sub
xor
or
fisubl
in
shl
mov
cld
add
dec
xor
sbb
sub
pop
imul
push
cs
sahf
jae
xchg
or
lea
sub
dec
push
add
in
ja
sbb
cmp
aaa
add
xchg
les
ret
lret
fisubs
and
cltd
loopne
bound
dec
popf
aaa
and
shlb
ret
xor
mov
rorb
push
in
rorb
jns
xchg
enter
cwtl
les
enter
fstps
mov
out
repnz
arpl
jno
in
xor
mov
adc
movhps
mov
jle
cs
dec
fcompl
cmp
xchg
push
scas
stos
repz
xor
mov
push
or
out
popf
push
pop
lds
pusha
hlt
fsts
gs
inc
adc
cmp
and
inc
out
sbb
adc
sub
shlb
aad
js
adc
and
popa
mov
cmp
sub
dec
cmp
dec
and
ja
add
or
clc
ret
cltd
fs
stc
mov
call
rcll
or
negb
cmc
loope
pushf
stc
push
stos
mov
push
jo
and
xor
fsubl
lahf
fwait
add
adc
orb
int
sbb
jecxz
pop
clc
cwtl
in
lea
dec
out
push
or
push
popf
jmp
jb
jbe
js
imul
scas
jmp
pop
mov
fdivp
push
mov
je
jo
dec
daa
push
test
xor
into
push
add
stos
popa
adc
mov
push
bnd
lds
xchg
cmp
outsb
in
xchg
call
adc
or
jns
lods
test
pop
sbb
hlt
insb
loope
out
pop
iret
xchg
popa
lcall
stos
xchg
dec
push
jnp
dec
and
fs
jmp
mov
je
mov
mov
negl
adc
add
lods
push
lea
xor
push
push
push
mov
cmp
pop
test
sbb
and
lods
adc
xor
addr16
fs
in
inc
jns
add
in
fcompl
fcmovbe
mov
insl
into
mov
inc
jne
jo
jbe
xor
xor
lahf
fisttpll
pushf
out
jg
mov
mov
js
mov
pop
out
scas
adc
minps
cmp
xor
sahf
andl
or
sbb
xor
imull
pop
hlt
test
ljmp
fsubrl
idivl
jmp
nop
sbb
mov
insb
fdivl
gs
and
test
lods
es
inc
outsb
rorl
lahf
cmp
mov
out
jae
aas
aas
loop
cwtl
push
shlb
sahf
and
mov
jns
cmp
cmp
cld
daa
push
and
movsl
mov
cs
adc
mov
adc
mov
dec
rclb
insl
inc
in
xor
jns
or
loopne
mov
push
jne
jle
insb
aaa
insb
in
push
jecxz
mov
cmpb
jge
push
ds
adc
inc
xchg
dec
addl
mov
lahf
xchg
daa
inc
pop
popf
pop
mov
pusha
and
push
jbe
sub
jmp
int3
xlat
sbb
lods
loope
push
mov
dec
dec
icebp
int3
inc
fnsave
imul
inc
test
pop
mov
lds
iret
fnstcw
insb
fistl
incb
mov
ficoml
dec
and
insl
out
cwtl
ret
mov
dec
or
ss
or
addl
pop
lods
and
inc
inc
mov
sub
dec
add
pop
pop
push
ss
popf
mov
push
adc
and
sbb
aad
xor
loopne
icebp
xlat
rorl
outsb
ja
fdivrs
imul
xchg
cmpsb
xor
push
sbb
lods
outsl
clc
imul
pushf
in
push
xor
inc
popa
jle
fstl
push
add
aam
enter
in
test
mov
scas
fs
sub
int3
add
push
dec
sarl
dec
mov
xchg
mulb
std
and
shl
aas
icebp
jb
bound
aad
stos
pop
sub
movsb
sub
enterw
hlt
mov
pop
cwtl
cwtl
mov
fs
fs
shl
test
cmp
mov
sbb
inc
and
popa
stos
jmp
push
sub
push
aam
pop
scas
or
repz
mov
ret
mov
andl
push
jbe
cli
popf
into
mov
mov
loope
leave
ds
and
mov
mov
push
mov
mov
mov
add
mov
jge
addr16
imul
sbb
jmp
cld
or
mov
subl
test
dec
sarl
push
pop
cmp
pop
sub
jns
jg
push
ret
jle
xor
sarb
dec
cmp
shll
inc
pop
mov
xor
mov
aaa
inc
lds
pop
xchg
push
sbbb
bound
push
xchg
lret
icebp
jp
cmp
out
mov
imul
outsl
jae
cli
pop
mov
int
cli
xchg
inc
jbe
xor
or
adc
xchg
loopne
outsb
call
dec
mov
iret
dec
jno
mov
lahf
jno
lcall
sbb
xorb
call
mov
sub
inc
in
std
push
loope
lret
pushf
movsl
push
pop
dec
scas
mov
inc
sti
pop
popf
stos
mov
jb
pushf
jecxz
lods
jnp
inc
loopne
push
fwait
push
xchg
movsb
push
cld
lods
mov
pushf
cmpsl
int
sti
jecxz
adc
sbb
jo
and
clc
adc
mov
xchg
and
icebp
and
cmp
rorb
add
cld
xchg
ss
add
and
add
mov
ret
cmp
pop
shrb
or
mov
ret
sahf
es
mov
mov
cmp
push
test
pop
jle
pop
jbe
sub
and
cmc
dec
add
pop
shlb
xchg
mov
jl
negl
leave
push
or
or
or
xlat
cs
ljmp
daa
adc
dec
jg
or
dec
xchg
shr
adc
std
adc
bound
jbe
xor
or
cld
sarb
pop
cli
mov
sub
outsb
or
inc
push
jg,pt
mov
pop
xor
adc
push
xor
sbb
xor
lret
mov
mov
add
xor
fidivl
dec
in
cmp
nop
test
lret
or
and
xchg
xchg
ds
arpl
nop
jns
jle
stos
pop
leave
pop
in
icebp
imull
push
loop
xchg
add
cmpsl
cmp
xor
or
ret
xchg
inc
xorl
xor
repz
pop
hlt
sbb
or
xchg
sub
out
das
push
outsb
lret
xor
and
out
les
or
mul
inc
test
stos
cli
mov
xchg
lahf
rcr
xchg
call
int
fidivs
inc
fistpl
fcomps
inc
mov
popf
xchg
sbb
call
out
push
add
jnp
sub
fimuls
xchg
push
jbe
insb
xor
jmp
pop
insb
cmp
sub
push
jne
mov
pushf
rorl
enter
cld
sub
addr16
sbb
andl
fs
loope
pop
push
or
fxch
xlat
cmp
cmpsb
jle
and
test
out
call
inc
push
xchg
sub
cmc
and
lcall
xchg
xchg
cmp
inc
xor
outsb
xchg
loope
ret
sbbb
xor
lds
pop
roll
xor
jae
jmp
mov
shr
push
mov
dec
test
mov
sarb
pop
rorb
arpl
repz
sti
mov
out
mov
out
ss
add
and
add
jno
jle
dec
pushf
mov
clc
stos
xchg
pop
pop
mov
in
scas
and
icebp
cmpsb
xor
aas
mov
insb
mov
mov
dec
mov
and
jns
xor
mov
and
bound
rcr
lret
push
or
or
push
int
testl
cld
fsubrl
jno
and
sbb
jg
pop
icebp
adc
out
sbb
rcrl
jno
aas
sbb
rol
mov
into
pusha
pop
int
push
xor
neg
jns
fs
in
andb
pop
xchg
nop
adc
push
imull
mov
pop
push
jb
and
pop
mov
rolb
mov
push
fs
jbe
dec
add
ret
or
inc
scas
xor
call
xor
lock
lret
aas
lcall
mov
in
or
adc
or
sbb
and
rol
stos
and
cltd
jne
mov
xchg
ret
push
xchg
xchg
mov
push
inc
push
inc
pusha
add
jno
mov
ss
movsl
and
xchg
in
push
scas
arpl
sbbb
mov
mov
jns
and
mov
adc
test
cs
lds
xlat
and
pusha
push
lahf
movsb
dec
sub
mov
push
ja
call
mov
jl
mov
cmp
test
mov
xchg
fstpl
lods
cmp
fmul
pslld
scas
pushf
dec
loopne
ljmp
sub
push
fwait
jg
fldl
lods
sbb
mov
imul
shlb
sahf
call
jmp
and
push
ror
aaa
sbb
fucomi
out
or
lret
aas
mov
jecxz
mov
push
push
and
addr16
mov
icebp
sbb
mov
out
adc
stos
shl
sbb
fs
push
dec
iret
popa
mov
push
sub
add
dec
pop
push
push
lods
mov
jno
cs
mov
or
adc
sub
pop
pmulhw
bound
xor
push
pop
pop
mov
sbb
cli
nop
mov
repz
cli
lods
xchg
or
sbb
add
addr16
xchg
lcall
testb
outsl
es
enter
inc
jno
es
jno
pop
xor
hlt
pop
cmpsl
push
xor
gs
pop
xor
lds
cmp
mov
pop
xor
cmp
test
xor
adc
jmp
sti
sbb
punpcklbw
les
imul
and
push
push
mov
bound
sbb
xchg
mov
mov
out
lods
or
mov
push
lods
fnstenv
iret
pop
lds
cmp
cs
cmp
pop
insb
in
popa
mov
outsb
sarb
add
mov
add
loope
stos
pusha
daa
fstl
push
out
clc
stos
mov
cmp
in
add
nop
lds
jnp
add
mov
incb
mov
sub
call
mov
cli
jmp
adc
xchg
insb
ret
add
add
sbb
movsl
cli
cli
push
cmp
je
dec
fidivs
neg
cmp
push
ss
inc
mov
sub
scas
ss
aas
and
lret
xor
pop
push
inc
dec
rcrb
dec
dec
stc
orl
aaa
gs
in
call
lret
in
test
call
sahf
mov
jo
cmp
js
jo
or
pop
xchg
or
shll
inc
mov
ds
cmpsl
sahf
mov
xchg
ret
jns
dec
add
sbb
outsl
dec
cmp
aas
xor
xor
mov
dec
nop
fisubs
in
mov
xchg
std
mov
inc
pop
xchg
in
enter
popf
mov
sbb
andl
cmc
orl
clc
cmpsb
jae
pushf
ret
push
shl
mov
or
sbb
jns
cmp
stos
jno
leave
imul
inc
mov
or
or
cmovae
es
adc
pop
lret
lods
jge
in
pop
in
data16
and
jmp
push
hlt
pop
jle
push
and
fisubrs
and
mov
xor
rcl
pop
mov
nop
lea
mov
repz
push
lock
sbb
mov
or
xor
outsl
in
clc
lahf
fcompl
xchg
dec
pop
ret
je
dec
adc
popa
adc
xchg
sbb
jle
and
cld
adc
js
mov
lds
movsl
dec
lahf
jbe
adc
cmp
jle
stos
push
sub
sahf
sbb
mov
xor
or
mov
jnp
aas
andl
xor
insb
jae
xchg
mov
js
push
mov
mov
add
stos
or
outsl
fstp
add
pop
sbb
mov
cltd
lahf
mov
aaa
cmp
mov
add
xchg
adc
fnstenv
xor
pop
pop
test
add
rcll
adc
mov
xchg
cmp
pop
sbb
aas
pop
jae
js
xlat
icebp
push
jbe
pop
jg
inc
inc
push
jne
stos
add
jns
lret
adc
lods
fstpt
shrb
out
data16
push
gs
and
je
mov
aam
cmpsb
rorl
jae
dec
add
cwtl
sahf
adc
add
movsl
inc
sub
ja
xor
fidivrl
clc
push
adc
and
mov
movsb
inc
jns
cmc
cli
push
jne
test
lds
sub
mov
in
pusha
stos
daa
xchg
and
mov
xor
stos
hlt
pminsw
fcom
pop
mov
jmp
cmp
fadd
lahf
add
lods
popa
dec
lea
es
sub
roll
xor
sub
outsl
pop
pop
xchg
xor
fstpt
fisttps
in
ret
jl
mov
push
mov
sbb
lods
sbb
mov
or
pop
mov
lcall
dec
into
addr16
push
and
mov
adc
incl
daa
sbbl
cld
adc
jne
js
rcll
push
adc
dec
out
jp
and
ja
pop
aam
cmp
addr16
test
gs
stc
jb
repz
mov
push
dec
into
cmp
dec
arpl
cmp
fdivrs
bound
add
xchg
pop
cmpsl
push
popf
out
cs
aad
adc
fwait
push
leave
and
push
push
inc
push
clc
in
fisubrs
in
jmp
lds
out
scas
pop
in
pop
ret
xchg
pop
fiadds
scas
sbb
inc
add
sbb
jns
test
mov
pop
fwait
cltd
ret
sti
aaa
pusha
mov
imul
add
and
out
xchg
jno
or
ret
cmp
and
jl
hlt
xchg
and
jnp
or
ja
andb
or
jne
mov
sbb
push
pop
stos
in
sub
cmpsb
or
aas
pop
xlat
pop
pop
inc
sbb
xchg
mov
insb
decl
imulb
dec
test
sti
inc
cli
shlb
xchg
je
inc
mov
icebp
clc
jg
push
ss
mov
lods
adc
jne
and
insb
mul
subl
dec
aad
mov
cmp
push
cmpsl
movsb
mov
clc
mov
jno
pop
push
in
ljmp
aaa
orl
insl
cmc
mov
pop
lds
or
movsb
add
test
js
inc
cmp
ljmp
add
adcl
clc
sbb
lcall
movsb
std
add
mov
cmpsl
test
shll
add
lods
orl
movzbl
sahf
xor
flds
adc
fldcw
add
jge
cld
hlt
dec
or
imul
jae
out
cwtl
cmp
xlat
loopne
push
push
sub
sub
movsb
and
inc
or
jnp
popa
sub
xchg
mov
and
mov
ss
add
lods
fsubs
lods
or
aad
lods
outsl
inc
xchg
outsb
sbb
cmpsb
adc
mov
push
cmp
mov
xchg
push
lds
ret
push
xchg
xchg
add
fisttpll
xor
leave
inc
push
xlat
aas
andb
inc
push
jmp
add
pop
mov
and
mov
push
cmp
dec
test
cmpsb
fs
jle
xchg
movl
sub
pop
hlt
idivb
jmp
jae
sbb
xor
xchg
mov
inc
loope
sub
jnp
ret
loope
fs
push
loop
lret
lods
push
sub
or
push
cmpsb
enter
sbb
sbb
sbb
clc
sbb
in
cli
mov
adc
mov
mov
test
sub
mov
andps
sbb
dec
mov
orl
mov
sub
pop
loope
aad
add
out
push
mov
dec
xchg
fsts
push
dec
xor
or
adc
lods
mov
fnstenv
popf
cmp
fs
dec
cld
or
into
pop
arpl
rorb
addl
aas
sti
jo
bound
dec
xchg
cli
push
aam
stos
and
cmpsb
in
enter
outsb
push
enter
xchg
mov
add
push
test
inc
lea
andl
xlat
inc
xchg
icebp
cwtl
jns
test
loope
xor
popw
mov
mov
xorb
data16
mov
hlt
adc
adc
repz
xlat
xchg
fisubrs
inc
jne
sub
fisubrl
in
pavgb
mov
inc
fisubrs
sub
mov
dec
adc
pop
dec
sahf
sbb
mov
add
daa
cld
rcrl
fwait
mov
adc
mov
fidivrl
add
outsb
xor
mov
das
ss
or
sbb
in
scas
lods
fwait
inc
outsb
and
icebp
loopne
leave
dec
xlat
push
push
xchg
rcrl
in
out
cli
adc
lret
mov
jl
pop
lret
jp
xchg
or
adc
push
adc
mov
lods
insb
dec
repz
daa
push
or
out
ret
push
pop
pusha
sbb
cld
inc
stc
ret
sbb
sbb
jl
cs
fmul
lods
mov
shrl
in
shlb
divb
sbb
push
lret
cli
lds
push
inc
dec
pop
leave
pusha
ds
enter
push
mov
sbb
mov
inc
aad
mov
imul
frstor
push
sub
cltd
push
cmp
call
sbb
scas
or
xor
fdivl
xchg
je
pop
mov
xchg
sub
or
mov
loopne
enter
push
sbb
sub
and
in
and
mov
push
fbld
sub
push
int3
jnp
add
dec
push
cmp
inc
jmp
or
jg
loop
sub
add
iret
js
sbb
fbld
inc
shl
popf
ja
shrl
mov
data16
lcall
pushf
mov
movsl
and
enter
jecxz
jecxz
adc
xor
sbb
call
add
mov
pop
lret
es
pop
xchg
mov
lods
pusha
push
dec
shll
je
add
lds
mov
pop
loope
dec
or
inc
out
in
lahf
xchg
int3
jp
pop
add
push
mov
pop
imul
sbb
jl
xchg
jecxz
popa
xchg
adc
int3
mov
lea
repz
ret
sbb
push
in
lret
ljmp
loopne
lds
cmp
mov
xchg
cmp
pop
repz
mov
popa
jp
push
mov
and
push
pop
push
lods
int
mov
xchg
mov
mov
adc
dec
enter
push
popa
aas
or
push
push
les
jns
fdivrs
cmp
inc
xor
push
fildll
repz
cwtl
fdiv
bts
jbe
adc
leave
aam
fistpll
push
mov
cmp
add
mov
out
and
cmp
sarb
and
mov
aas
mov
jbe
not
insl
rcrb
pop
data16
mov
je
or
lods
sub
add
rcll
in
jo
sbb
and
fiaddl
mov
pusha
jp
rorl
andl
mov
lcall
scas
nop
mov
pushf
xlat
fs
xchg
dec
mov
jne
cmpsl
movsb
pusha
int
inc
mov
movsb
sbb
mov
data16
sub
xor
or
adcl
jae
jp
sbb
sbb
sbbb
or
arpl
xorb
mov
ss
mov
cmp
int
outsl
addr16
adc
in
nop
xor
push
shl
cmp
jge
aam
in
fsubs
jb
lock
ficoml
push
nop
jp
pop
in
enter
loopne
xchg
pop
mov
inc
clc
js
lret
ljmp
movsb
ret
test
inc
aas
cmp
movsb
xchg
mov
leave
dec
jge
adc
mov
and
out
shrb
sbb
sub
sub
bound
mov
fs
cmp
rolb
or
xchg
cmpsl
stos
and
lret
idivb
cltd
lret
sub
shrb
xor
mov
in
mov
movsb
jno
mov
pop
xchg
cmp
rcll
sbb
and
fwait
jmp
frstor
add
mov
cmp
add
xor
sbb
xchg
dec
sahf
shlb
cli
or
inc
imul
lahf
jno
pmaxub
mov
mov
mov
dec
ror
sarb
jp
ja
sub
adc
stc
arpl
hlt
dec
jg
orl
sub
cmp
test
jne
push
cld
outsl
or
inc
clc
xor
loop
daa
mov
repz
mov
test
mov
or
xor
or
out
mov
cli
mov
arpl
xor
mov
jbe
outsl
pop
addl
cmpsl
mov
inc
sti
xchg
pop
sbbb
lahf
jle
testl
or
cmp
dec
test
sub
push
xor
sbb
stos
cmpsl
loope
aad
adc
scas
outsl
mov
jae
xor
cli
jmp
push
mov
mov
mov
outsl
testb
xor
or
jno
lahf
jns
pop
sbb
or
adc
aaa
or
mov
test
and
dec
fs
mov
mov
xor
and
fcom
sbb
and
and
mov
std
sub
dec
sub
test
xchg
inc
mov
popf
pop
in
mov
pushf
mov
aam
jle
cmp
rcrl
push
push
mov
mov
add
call
test
xchg
sbb
add
cmp
lods
jg
lret
out
cmp
popf
scas
fwait
mov
mov
sbbb
jne
ret
sbb
icebp
mov
mov
fwait
push
add
jmp
sbb
sbb
sti
int
xor
or
outsb
bound
loope
call
pop
cmp
aad
clc
inc
pop
fisttpll
xor
rolb
mov
xor
xor
xchg
or
mov
out
fwait
ret
cmc
push
push
cmp
scas
push
ljmp
mov
adc
inc
orl
sub
and
or
mov
sbb
loope
fsubrl
mov
in
ret
jae
cli
inc
push
or
cmp
pop
daa
sub
mov
pusha
cmp
sbb
sub
lods
jp
inc
call
pop
jae
mov
push
shll
mov
fmulp
push
lea
loop
mov
xor
lods
stc
test
mov
sbb
push
bound
and
cmp
bound
cltd
std
add
popf
sahf
cmp
fnstenv
in
push
pop
sub
icebp
inc
xchg
jo
jae
nop
cmp
jo
xchg
in
faddl
in
leave
pop
pop
jg
sub
inc
jne
imul
divb
cwtl
xlat
jae
pop
xor
out
inc
lcall
jo
mov
sbb
push
jecxz
mov
jl
inc
dec
push
loope
inc
scas
mov
jle
push
incl
sbb
fbld
xchg
push
dec
push
mov
andb
adc
aaa
mov
lds
call
xlat
mov
sbb
aam
xor
aaa
inc
push
cmc
pop
je
stos
xlat
ficomps
mov
fildl
jno
cmp
cmc
mov
sbb
out
inc
loopne
inc
inc
mov
in
cmpsl
push
mov
sti
sbb
mov
data16
mov
mov
sub
xor
and
or
test
inc
sbb
lods
sub
xor
adc
scas
mov
scas
test
iret
mov
in
jecxz
and
jl
sub
shll
cmpsb
inc
and
sbb
iret
xor
jecxz
cltd
adc
sub
adc
jle
loop
and
shlb
imul
fistps
sbb
movsl
pop
or
adc
push
rolb
out
inc
cltd
movl
sbb
popa
cmp
add
xchg
nop
fsubl
jns
ret
sub
rorl
push
filds
fstl
inc
test
xchg
push
out
adcl
pop
std
jbe
test
movsb
std
xchg
mov
xchg
mov
dec
fstpt
push
sub
jbe
cmpb
jb
fistl
xor
fnsave
out
xchg
cltd
mov
mov
mov
add
dec
mov
mov
test
hlt
inc
adc
out
adc
cli
movsl
movups
ret
adc
dec
stc
enter
sub
mov
mov
loop
mov
leave
jp
jl
jecxz
sbb
sub
leave
repnz
stc
out
dec
cmp
cwtl
adc
xlat
inc
sub
das
nopl
movsl
jp
lahf
das
cli
movsl
sbb
dec
int
int3
dec
sbb
sub
aad
xor
lcall
rclb
mov
in
enter
sbb
lds
adc
ficompl
pop
and
sbb
pop
cmp
insl
cmp
fwait
andb
pushf
xor
pop
out
or
inc
add
mov
mov
daa
call
popa
out
and
loop
sahf
add
fdivrs
or
outsl
fidivl
fld
mov
mov
push
inc
jne
es
sub
adc
inc
cmp
and
dec
mov
add
add
int
dec
adc
and
mov
push
rcrl
mov
test
scas
jp
add
int
xor
dec
mov
sbb
cmp
fmuls
cmp
ret
dec
inc
cwtl
int3
notl
xchg
fldcw
rcr
lock
mov
xchg
pop
call
cwtl
mov
ds
in
mov
jb
xlat
bound
mov
push
loope
mov
scas
jge
sub
mov
mov
test
std
xchg
mov
cmp
out
jo
xchg
mov
inc
mov
sti
mov
shll
enter
mov
and
mov
add
jg
pop
inc
mov
aam
rcll
movsb
into
jns
dec
ss
aas
jnp
es
scas
movsl
out
dec
xchg
shll
push
lahf
or
sbb
jmp
stc
es
xchg
fisubl
sub
gs
aad
cbtw
shlb
and
inc
test
call
aaa
mull
sub
lahf
pop
jmp
test
xorb
jb
ret
xchg
xchg
test
jl
or
cld
loopne
mov
lret
std
mov
daa
ljmp
aas
xchg
xchg
mov
icebp
ficompl
push
imul
jne
pop
lret
and
jb
mov
out
subb
arpl
aas
add
or
xor
rolb
es
lods
and
jp
andb
jmp
ret
sti
mov
xchg
dec
and
pop
pushf
stos
mov
out
shlb
inc
call
popf
jmp
or
xchg
push
inc
fildll
mov
cs
je
aas
and
aad
mov
stos
rclb
sbb
outsb
popf
bound
jns
out
push
mov
cmc
inc
ficomps
sbb
sbb
pop
push
push
frstor
aad
movsl
jbe
adc
dec
sub
addb
cmp
push
cmp
bound
leave
xor
ss
jae
js
orb
cmpsl
inc
and
sub
rorl
pop
in
lds
push
and
jne
dec
loopne
mov
inc
dec
xor
mov
sbb
mov
push
and
and
repnz
jle
adcb
fs
leave
sub
aaa
xor
addps
aaa
lahf
loop
jge
fildll
insl
aaa
xor
aaa
je
call
jl
loop
fsubrl
jmp
sub
cmp
xor
and
cmpsl
push
imul
push
jmp
pushf
inc
cmc
dec
sub
jmp
mov
adc
cmp
inc
jmp
and
pop
or
rcll
adc
mov
cmp
jnp
xchg
add
std
mov
movsb
repnz
sbb
mov
lds
xchg
daa
shl
repz
xor
xchg
out
ds
enter
imul
mov
mov
push
push
or
or
push
pop
push
aad
push
jb
jae
xor
out
jle
stos
popf
cmpsl
pop
enter
fwait
in
fcompl
loope
and
jle
js
fstpl
lods
lret
sub
fidivrl
sub
dec
xor
adc
test
inc
jl
int3
cld
lret
xchg
sbb
fdivs
mov
test
out
or
imul
pushf
cvttps2pi
pop
loope
xor
fldl
sub
or
pop
repnz
jge
and
sahf
add
mov
shl
lret
jmp
cmp
shl
mov
dec
mov
mov
test
rcll
loop
push
andl
jecxz
mov
xor
sbb
psadbw
cmpsl
mov
call
and
loope
push
mov
push
jnp
repz
pop
jns
cmpsl
push
lods
fwait
jne
rcrb
sbb
hlt
shl
jg
out
lock
adc
hlt
sub
test
ret
dec
imul
enter
imul
mov
je
in
lods
jns
pop
dec
scas
popa
sti
lcall
andb
loopne
sub
push
and
sti
jne
xorl
and
jb
inc
aas
fisttpl
enter
jns
insb
pop
in
repz
add
sbb
aad
pop
jns
cmp
adc
ret
scas
mov
cmc
aam
insl
or
insl
mov
mov
int
push
iret
or
mov
arpl
je
jl
sbb
repnz
cmp
in
mov
clc
mov
push
lret
cld
mov
fdivr
and
out
cmpsl
les
xor
sub
cli
pop
std
enter
cmp
movsl
sbb
and
jne
icebp
stc
cltd
sarl
pop
lds
loopne
xchg
mov
imull
rorb
iret
out
mov
test
pushf
leave
fwait
test
das
lods
sub
in
cli
pop
add
jecxz
jl
es
push
nop
fisubl
pop
sub
cs
rorb
inc
sbb
jb
subl
movsl
loopne
in
mov
lods
add
mov
fadd
add
test
and
call
lods
xlat
mov
cltd
sbb
in
int3
ds
inc
pop
xchg
aam
pop
pop
or
test
mov
dec
sub
dec
xor
jae
push
leave
icebp
lock
inc
mov
add
rol
stos
inc
jp
adc
andl
jle
enter
ss
jbe
cmp
stos
adc
xlat
cmpsl
fwait
xor
and
test
into
or
lea
sub
cmp
sti
push
pusha
mov
insb
cs
inc
mulb
mov
add
mov
mov
test
sarl
mov
sahf
paddb
add
stos
jg
sbb
call
push
xchg
aam
inc
daa
xchg
push
sti
mov
sbb
xchg
jo
adc
xchg
jg
push
push
mov
mov
mov
repz
sbb
pop
cmp
cltd
mov
rcrl
call
push
inc
ret
sbb
inc
and
mov
gs
add
lret
rclb
hlt
inc
outsb
andl
push
pop
ja
lock
ljmp
sub
xchg
loope,pt
scas
jne
jno
int3
xor
sahf
lods
lahf
shrl
aaa
xor
push
shll
mov
mov
aaa
ret
jb
movsb
in
jo
in
xor
les
jbe
mov
adc
dec
loop
inc
jge
addl
stos
pop
jl
xor
adcb
sbbl
pop
push
sub
fsubp
and
pop
outsl
inc
loop
out
inc
sbb
push
punpcklwd
adcb
fsts
cmp
dec
out
mov
fadd
fmuls
mov
xor
loop
mov
xchg
xchg
xchg
movl
and
ret
cli
lret
imul
test
pop
test
pop
dec
xor
pop
mov
mov
sbb
out
mov
enter
sub
frstor
aas
pop
shll
addb
test
sqrtps
dec
dec
daa
call
in
adc
and
ret
lock
push
js
dec
jmp
jb
arpl
outsl
aas
jb
jecxz
dec
or
add
mov
jbe
ds
jle
fcmovu
pusha
orl
sbb
mov
adc
in
cmp
jb
in
cmpl
test
sub
lret
loope
xchg
sbb
ficomps
xlat
jp
lcall
pop
xchg
inc
inc
fsubrl
imul
adc
inc
jge
cmp
push
pop
insl
xchg
sub
int
cwtl
rcll
dec
xor
mov
xchg
movsb
cld
lahf
std
fisttps
mov
xchg
xlat
arpl
sbb
mov
inc
mov
pop
xor
lods
adc
in
cltd
jo
xchg
movsb
in
pop
stos
xchg
aaa
insl
and
dec
aad
cltd
dec
ret
push
adc
dec
mov
pop
pop
stos
icebp
loopne
iret
pop
xchg
lea
add
stc
push
adc
popa
mov
push
or
daa
xchg
xor
icebp
shl
rorl
fisubrs
in
repnz
ss
mov
fbstp
sub
jnp
out
sub
or
daa
pop
aaa
sbb
pop
clc
fcoms
mov
cli
cwtl
scas
or
jno
sti
lea
push
test
or
push
lea
fnstsw
push
push
push
add
pop
add
fsubrs
clc
mov
scas
aaa
lret
inc
dec
xchg
mov
pop
xor
lcall
loope
push
inc
dec
int3
add
pop
adc
dec
jne
loopne
jmp
adc
lock
dec
aam
cwtl
mov
sub
jo
jp
inc
test
das
or
cmp
or
mov
fnstenv
mov
lods
cmp
or
lods
fistpll
jae
test
inc
sti
xor
aad
xchg
ret
je
inc
mov
push
jne
fcmovbe
sbb
mov
pop
add
fmuls
lods
test
sbbb
fildl
movsb
stc
xor
arpl
adc
and
xchg
clc
fwait
inc
dec
fnstcw
add
inc
pusha
mov
push
lds
mov
aaa
dec
retw
push
gs
movsl
nop
in
pop
iret
jl
push
repz
mov
outsb
shlb
in
and
adc
insl
loop
mov
lahf
or
icebp
test
pop
xor
lret
sbb
adcl
cwtl
repnz
in
lcall
jmp
push
aas
call
and
es
insl
jl
or
in
push
jo
adc
or
mov
loopne
je
mov
jg
cmp
pop
iret
xor
mov
or
pop
dec
sub
iret
and
push
ss
icebp
mov
pop
fimuls
push
ds
pop
xchg
mov
cmpsl
sub
inc
jecxz
repz
inc
in
mov
jmp
and
and
cmp
and
daa
lahf
popa
data16
or
inc
stos
sbb
rcr
add
into
cmpsb
in
or
or
inc
int3
jle
cwtl
cmc
jne
pop
dec
mov
mov
in
or
insl
dec
pop
shll
js
jbe
into
test
repz
cmc
bound
xchg
movsl
ret
test
lret
dec
or
lret
push
rcrl
sbb
inc
ffreep
sar
jmp
mov
mov
orb
lods
pop
cmp
aam
lret
lock
or
shl
cmpsl
hlt
imul
sbb
push
fs
nop
loopne
rcrl
pop
inc
js
ficoml
or
sbb
arpl
and
mov
push
loop
ret
dec
mov
fimull
and
mov
mulb
jae
cltd
mov
test
notb
cmp
pop
iret
xchg
loop
adc
or
push
push
movsb
jmp
or
jg
xchg
stc
jne
mov
and
cmp
popf
pop
stos
icebp
insl
mov
into
sbb
mov
jo
js
push
inc
mov
push
aas
mov
dec
aad
stos
fadds
loop
push
sub
in
mov
aam
jmp
push
lret
stos
push
aas
ret
inc
inc
jae
add
xchg
aam
stos
push
les
adc
popa
movsl
mov
into
pop
xor
cmp
jl
insb
mov
mov
push
ret
mov
push
or
pop
aam
test
loopne
and
cli
ljmp
clc
mov
insl
fs
je
sbbl
xchg
add
clc
cmpsl
subl
sbb
shll
les
adc
scas
daa
mov
push
out
pop
add
rolb
dec
lret
jbe
jl
mov
movsb
pop
fwait
pop
sarb
mov
mov
mov
mov
push
call
cmp
test
pop
xchg
rcll
or
pop
jge
cmp
cmpsl
push
testl
into
mov
sub
pusha
mov
mov
test
xchg
out
xchg
lcall
fisubrs
fstps
push
xchg
adc
out
dec
add
nop
cli
test
ficoms
mov
fcmovb
pop
push
xchg
jno
aas
lds
into
xchg
push
dec
outsb
mov
loop
decl
pop
inc
push
movsl
scas
je
xchg
add
cli
pop
out
std
mov
xchg
and
xchg
mov
inc
or
mov
das
mov
sbb
cmp
inc
sbb
dec
lea
jle
or
fadds
ja
jge
and
fdivrs
push
out
mov
or
mov
in
xor
inc
xchg
add
xchg
cmp
ror
jb
xchg
xchg
rcrb
xchg
mov
and
inc
imulb
cmpsl
inc
jbe
popf
cmp
data16
aaa
push
xchg
clc
fcoms
int
aam
sbb
or
int3
xchg
shlb
sub
stc
lock
mov
xchg
sub
addr16
sub
cmp
xchg
into
inc
mov
mov
push
lds
cmp
and
xlat
pop
jge
lea
ret
gs
and
pop
lret
adc
pop
inc
sbb
imul
mov
test
movl
sti
cmp
lcall
int
adc
xor
jo
pop
into
sarl
cltd
pop
pop
push
inc
imul
cmp
push
enter
xchg
sub
scas
mov
or
cmp
inc
shlb
inc
sbb
jns
sbb
jmp
add
stos
out
xchg
dec
aas
cmp
fdivr
call
out
cmpb
insl
mov
popf
es
js
mov
aas
or
jge
xor
ret
add
sbb
cltd
jns
mov
pop
outsl
mov
lds
icebp
sti
mov
ljmp
call
fs
push
sub
out
cmp
pushl
lea
nop
mov
inc
pop
sub
dec
xor
add
or
push
bound
popa
push
jge
and
pushf
jbe
loope
xchg
mov
cmp
push
mov
mov
jp
and
push
mov
push
icebp
aaa
mov
or
pop
pusha
out
stos
fiaddl
test
mov
add
daa
cltd
stc
or
dec
xchg
mov
sub
xor
xor
les
stc
push
js
bound
imul
popf
ret
and
push
test
daa
mov
push
in
push
rclb
add
iret
dec
das
movsl
add
cs
mov
inc
and
jge
aas
xchg
test
jno
sub
push
dec
dec
into
ret
add
cmp
xor
sbb
dec
scas
cwtl
js
and
jg
roll
negb
clc
cmp
int3
xlat
daa
shl
enter
mov
adc
dec
xchg
and
xchg
ds
les
mov
mov
repnz
test
cmpsb
mov
hlt
dec
notl
or
aaa
fdivrs
inc
dec
cld
ret
dec
xchg
addr16
mov
fcompl
js
xchg
cmc
jae
mov
pop
cmp
pop
scas
mov
mov
push
js
push
dec
jne
dec
adc
dec
mov
xchg
dec
enter
push
ja
ja
cltd
inc
subb
pop
sbb
out
test
mov
test
fidivrl
arpl
xchg
jl
xchg
movsl
xor
ret
pushf
pop
inc
add
ror
ja
movl
aam
outsb
stos
cmc
aam
mov
sbb
loope
jmp
lea
xor
ret
adc
inc
rcr
mov
cmp
push
addb
mov
fmuls
fninit
ret
ficompl
jle
push
mov
aaa
cmp
push
push
leave
and
cmp
xor
rclb
pop
cmp
das
insl
xchg
mov
xor
lea
cmc
inc
push
mov
lods
mov
out
dec
out
mov
inc
lock
cmp
cmp
enter
inc
cmp
lea
inc
push
addr16
ds
imul
outsl
fldt
ficoml
mov
movsl
jne
ds
mov
jb
shlb
cli
inc
or
xchg
sbb
cmp
inc
and
sbb
jbe
sbb
mov
jp
sahf
cmpsl
aaa
orl
pandn
stc
js
and
pop
test
lods
ret
sub
jno
mov
es
mov
xchg
cli
setp
push
sub
iret
inc
jp
fisubrs
movl
xor
out
cwtl
cmp
je
imul
xchg
fcoms
adc
fisubrs
xchg
inc
xchg
sub
mov
mov
xchg
je
outsl
cld
mov
jecxz
loop
divl
out
fisttps
xchg
mov
sti
sub
aad
rolb
insb
sub
or
lock
mov
mov
add
xlat
aaa
sbb
xlat
fcom
les
add
in
pop
ficoms
lcall
loope
movb
jno
fisubrl
sub
mov
fwait
pop
lds
push
add
mov
or
mov
mov
test
pop
sub
jmp
pop
cmpb
aam
sahf
mov
mov
hlt
jmp
pop
notb
push
sarb
repnz
and
out
addr16
cmovo
pop
lods
push
pop
js
cmp
paddsb
mov
adc
jmp
mov
cwtl
mov
push
test
push
and
xor
sub
cmp
dec
out
or
mov
cwtl
mov
mov
in
pop
or
lahf
jne
call
push
lods
cmp
inc
mov
adc
arpl
aas
aad
in
test
cmp
jbe
fidivrl
or
push
push
data16
fidivl
push
xchg
fwait
sub
aam
aaa
pop
out
jg
jl
iret
push
icebp
jnp
jecxz
push
xchg
movsb
fsts
ja
jle
pop
loop
sub
jns
outsl
inc
lock
adc
jbe
inc
cwtl
and
hlt
pavgb
cmp
ffreep
enter
jnp
inc
mov
inc
or
popa
bound
les
mov
dec
or
shlb
pop
push
imul
jne
xlat
adc
dec
outsl
push
cmp
in
inc
fstpl
test
cmp
test
orl
int
jle
mov
std
out
cmpxchg8b
sbb
dec
dec
imulb
bound
das
ficomps
jae
push
fcom
lcall
insb
daa
in
jmp
and
xchg
sbbb
mov
hlt
adc
rcl
cmc
push
push
sbb
lret
ret
jno
or
add
popa
repnz
mov
mov
mov
pop
cmp
xlat
dec
xchg
popf
popf
lret
call
pop
xor
push
movsb
xchg
ss
jno
mov
pop
stos
js
sarl
rorb
sbb
test
lock
lea
aaa
xchg
cwtl
rolb
mov
ret
cmpsb
inc
mov
or
es
jmp
rol
pop
xchg
adc
or
cmp
cmc
adc
mov
mov
inc
mov
int
xchg
faddp
bound
pushf
and
inc
cld
dec
lods
add
and
imul
inc
inc
jle
or
jl
push
bound
adc
and
sbb
jmp
mov
daa
lret
mov
mov
mov
inc
in
xchg
inc
lods
dec
repnz
cmovg
movsl
in
movsb
or
test
fldcw
xchg
and
and
sbb
push
std
test
pop
es
pop
scas
mov
repz
loop
or
sub
sbb
out
inc
popa
mov
test
fildll
pop
fistl
jp
in
fistpl
push
mov
xchg
adc
popa
dec
fbstp
shll
push
popl
movsl
sub
or
sub
imul
push
xchg
and
adc
fnstsw
jmp
shrl
and
testb
cmp
aad
inc
dec
inc
jae
test
mov
or
movsl
inc
or
popa
rclb
mov
xchg
mulb
cmp
mov
cld
out
jecxz
adc
lds
inc
aaa
cmc
mul
xbegin
daa
sbb
in
mov
adc
sbbb
or
outsb
mov
popf
popf
pop
pop
inc
aaa
jno
test
mov
mov
shll
cld
sti
sbb
lea
pop
ss
add
mov
in
fucomi
or
mov
std
or
xor
jae
pop
enter
xor
rcl
dec
bound
scas
ret
add
xchg
cli
xor
das
push
arpl
call
lret
mov
in
push
dec
jle
inc
pop
movsb
pop
shr
enter
xchg
xor
rcll
xor
js
mov
adc
and
dec
inc
lds
inc
add
repz
add
jno
rclb
nop
or
and
and
xor
std
loop
or
scas
sahf
push
inc
sbb
pop
ja
hlt
pop
enter
inc
scas
arpl
adc
cmc
imul
pop
jge
out
dec
outsb
inc
movsb
js
jg
outsl
in
sbb
pop
and
cltd
mov
mov
mov
or
out
inc
cmpl
fistpl
sarl
mov
jo
leave
mov
into
fdivrp
cmp
adc
stos
xchg
dec
jl
push
sub
sub
jl
mov
adc
leave
sub
sub
jl
xchg
fucomp
or
test
jmp
outsl
pop
out
out
repnz
cmp
mov
sahf
or
js
loope
mov
cmp
mov
jnp
stos
adc
push
in
vpmullw
or
cs
loop
dec
cmp
jo
jle
loop
and
sbb
std
dec
ret
mov
jb
add
xchg
cmc
fstl
repz
int3
aad
clc
cld
imul
dec
mov
cmc
xchg
adc
ljmp
hlt
ss
mov
mov
mov
and
int3
pop
pop
mov
mov
xor
cwtl
ja
jp
inc
mov
sbb
repnz
incb
sbb
inc
jne
mov
xlat
fiadds
add
hlt
cs
scas
mov
cmpsl
xchg
or
shlb
inc
push
jmp
sub
mov
add
testb
jp
int3
push
shl
ret
mov
testb
or
push
mov
bsr
inc
mov
inc
and
dec
icebp
pop
adc
stos
jne
dec
repz
inc
in
test
xlat
arpl
and
mov
lods
jmp
push
xlat
cmp
in
xchg
xchg
imul
jecxz
imul
push
mov
mov
adc
mov
pop
scas
out
rorl
or
xlat
adc
xor
test
dec
jl
fisttpl
addb
sbb
and
sbb
in
and
push
inc
bound
lea
sbb
int3
shll
inc
adc
dec
out
mov
pop
xchg
mov
xchg
mov
mov
mov
aas
shll
hlt
pop
repz
nop
cmp
cli
leave
lods
add
mov
leave
lret
idiv
xor
inc
add
es
or
movsl
mov
cmpsb
mov
dec
ds
int
push
sti
xlat
jno
das
mov
pop
push
inc
lret
add
sbb
sub
leave
loope
mov
es
loop
sub
mov
mov
adc
push
or
add
mov
sbb
mov
inc
cli
iret
repnz
shlb
dec
push
call
push
inc
and
and
push
and
xchg
pop
adc
setae
mov
into
addb
add
pop
test
push
push
inc
xchg
cmpl
or
mov
call
stos
xor
jmp
loopne
push
dec
mov
jp
cmp
imul
test
inc
and
out
mov
sbb
call
insb
mulb
imulb
fsubs
dec
mov
jbe
jo
cmp
nop
aas
repz
push
leave
sbb
mov
cmpsl
xchg
lods
ss
pop
pusha
pop
xchg
cmpl
ss
inc
jno
out
out
clc
or
lods
cmp
adc
fbld
jo
xchg
push
inc
in
sbb
xchg
inc
iret
imul
or
mov
addl
xor
push
jno
stos
fnstsw
jnp
mov
mov
jo
jbe
mov
ss
pop
scas
inc
aad
cltd
insb
jl
stos
sub
pushf
mov
pop
sahf
shlb
mov
shl
jmp
mov
xchg
pusha
les
push
jne
imul
pop
rorb
movsb
pop
or
sbb
out
test
ret
adc
xor
jmp
and
roll
pop
es
fdivs
fstpl
cmp
idivl
loope
ljmp
adc
xor
les
or
aaa
sub
cld
ret
movsb
sahf
pop
adc
test
xor
adc
or
sbb
ret
dec
lods
cwtl
movsl
push
sbb
add
push
push
pop
bound
lcall
dec
and
in
adc
std
xchg
adc
lret
rcrl
or
pop
inc
leave
cs
lods
pop
dec
stos
jge
or
add
inc
push
test
dec
cli
das
xor
cmp
mov
int3
xlat
mov
cli
insl
pop
pop
clc
test
inc
cld
imul
aaa
sbb
outsb
pop
xlat
adc
stos
les
sub
inc
push
and
xchg
in
and
or
lret
cld
in
arpl
std
push
cmpsl
mov
adc
stos
mulps
lods
jle
xor
arpl
shr
or
pushf
inc
inc
leave
pusha
mov
jl
into
loopne
or
xchg
or
mov
cmp
xchg
mov
xor
inc
mov
pop
mov
inc
lods
or
insl
push
mov
insb
in
pop
aaa
stos
loopne
bound
enter
cwtl
in
add
rcl
in
pop
sbb
xchg
vmwrite
add
jge
fldl
adc
dec
mov
lcall
jo
out
add
sahf
rolb
push
lret
pop
mov
add
add
sub
inc
sub
add
cmp
lock
push
imul
call
cmc
inc
movsl
test
push
jmp
cltd
aam
jo
jmp
adc
or
mov
pop
ja
sti
adc
lea
das
insl
jb
or
sbb
dec
adc
mov
add
mov
sahf
dec
or
les
xchg
mov
add
aaa
push
inc
jbe
jle
out
cmpsb
loope
pop
outsl
push
xor
ss
mov
ficompl
jge
cmp
aam
cmp
or
xchg
sbbb
xchg
adc
mov
jnp
stos
xchg
xor
adc
cmc
mov
xor
or
cld
inc
sub
xchg
stc
imul
hlt
mov
pop
gs
mov
mov
adc
sbb
das
jl
ljmp
pushf
sub
insb
movsb
test
movsb
pop
aam
das
in
insl
pop
mov
xchg
test
adc
loope
ja
shl
jg
xchg
inc
leave
mov
vmread
xor
inc
shrl
icebp
mov
std
in
mov
rorb
lds
rorb
inc
icebp
and
fsub
and
sbb
fwait
popf
sti
addr16
mov
dec
cltd
add
sbb
rcl
jb
stos
shll
lahf
addl
movb
jmp
jbe
ret
popf
std
sarb
dec
inc
stos
and
or
mov
test
xor
in
xchg
mov
sbb
sub
js
out
arpl
lea
push
mov
ds
ficomps
pop
cli
push
rcr
ret
cmp
adc
js
shr
add
and
in
sti
int
pop
int
add
scas
addr16
sub
incl
mov
adc
inc
push
add
or
pop
adc
mov
ret
jp
decl
js
cs
lods
adc
adc
scas
inc
push
imulb
cmp
adc
sti
mov
arpl
inc
mov
pop
cmp
sbb
call
popf
dec
loop
push
js
dec
push
imul
inc
lcall
mov
stc
sbb
pop
cwtl
inc
in
aad
pop
adc
xor
cs
out
mov
gs
pop
dec
aas
cmp
ljmp
mov
addr16
jl
out
mov
es
sub
jl
jb
add
cmp
and
les
and
cmpsb
cs
jle
xchg
cwtl
pop
stc
lret
mov
inc
mov
pop
shll
cltd
lret
cmpsl
inc
adc
sub
mov
and
lods
push
and
pop
scas
insb
adc
bound
testl
scas
bound
shlb
cmp
pop
mov
hlt
ret
adc
and
mov
fprem1
shlb
cmp
outsb
pop
xchg
mov
test
inc
xor
cmp
xchg
stc
xchg
sbb
xchg
mov
stos
inc
maskmovq
bound
rorb
lret
popa
mov
pop
fmull
leave
jo
ss
in
into
and
fcoms
push
aas
mov
add
mov
dec
xor
imul
cmp
mov
dec
fimull
inc
mov
int
jl
int
mov
sbb
mov
inc
adc
xor
out
sbb
icebp
and
mov
aad
test
jl
sub
in
insl
icebp
aad
mov
outsb
and
jae
ret
outsl
in
sahf
loop
fucomi
das
add
pop
xor
jae
mov
mov
mov
repz
out
shl
add
inc
ja
cmpsb
cmp
popf
out
xor
pushf
inc
pop
lods
hlt
or
and
adc
sub
cli
adc
stos
cmc
pop
push
push
xchg
push
fwait
popf
gs
negb
add
sahf
sub
inc
lods
scas
outsb
add
sub
dec
mov
mov
loope
mov
jmp
jle
jl
daa
xchg
mov
outsb
mov
lock
dec
mov
adcb
pop
fdivrl
outsb
or
fimuls
mulb
mov
sbb
push
mov
xor
lret
add
loop
push
lcall
mov
rorb
adc
lods
and
into
adc
popa
jae
iret
lret
mov
into
test
push
aaa
jbe
insl
mulb
xlat
xchg
fidivl
xlat
sbb
and
jmp
inc
fs
fidivs
mov
jns
js
adc
dec
cmpl
cmpsl
mov
faddl
mov
rcll
xchg
mov
push
out
xor
add
mov
into
jge
xchg
out
xchg
addb
movsl
shrb
add
in
xor
in
xchg
imul
mov
pusha
cmc
xchg
orl
imul
jae
jge
stc
xchg
xchg
icebp
mov
bound
push
mov
arpl
push
mov
mov
cltd
mov
aam
mov
stc
pop
cmp
mov
lahf
fsub
dec
aam
dec
outsb
je
int
sub
push
and
lahf
lods
loop
fdivs
popl
push
pusha
aam
push
aam
fstpl
push
inc
and
sub
aam
arpl
jge
ja
lods
lahf
xchg
mov
mov
xor
xchg
or
in
or
xor
dec
jno
dec
aam
mov
imul
mov
jo
lcall
mov
arpl
sti
inc
jecxz
in
mov
sbb
adc
jle
pop
lock
add
or
movsb
fs
pop
adc
xchg
xchg
push
icebp
sbb
inc
cs
icebp
sub
push
or
jcxz
sub
sub
jo
jo
dec
sbb
ss
jecxz
jmp
lea
lret
mov
enter
sub
cmpl
mov
and
push
or
mov
std
mov
lea
mov
sub
lds
aas
and
cmp
loop
aam
adc
sti
jle
cmp
mov
outsb
lret
jae
int
fistpl
loop
lcall
imul
cmc
cmp
ss
add
cmp
push
std
movsb
test
mov
je
jbe
mov
pop
arpl
push
jnp
and
and
loope
push
out
testb
push
jne
fsubr
js
cs
dec
icebp
sbb
gs
cmpsl
push
mov
xchg
daa
mov
es
sahf
lock
add
pop
add
sti
mov
inc
xchg
sbb
push
adc
xlat
andb
aas
xor
sbb
scas
mov
add
movl
mov
mov
pop
filds
loope
in
into
imul
popf
xchg
sub
pop
popa
aam
hlt
fwait
loop
shr
pop
push
adc
or
mov
js
mov
repnz
fucomp
mov
andl
insb
nop
cmp
mov
push
adc
fiaddl
aas
movsl
ja
loopne
push
inc
push
sbb
mov
inc
lea
notl
pushf
push
push
lcall
sub
lret
sub
add
xchg
jno
xchg
sbb
in
dec
lahf
movsb
add
stos
mov
cld
xor
fisubs
pushf
mov
mov
sbb
stc
imul
lock
push
push
out
fdiv
xorb
or
cli
dec
cli
or
sahf
or
cs
mov
orb
sbb
add
and
int
pop
jno
into
test
clc
insl
xor
mov
mov
sarl
inc
enter
outsb
lods
xchg
jecxz
jne
sarl
clc
negb
stc
and
push
sub
nop
out
inc
xchg
xchg
out
inc
or
es
sub
push
cmp
lods
add
fwait
xor
adcl
enter
pop
sbb
or
xchg
xchg
jg
mov
shrl
loop
xor
fnstenv
mul
jg
in
les
add
leave
cmp
mov
push
sub
icebp
divl
and
cmpsl
bound
pop
fistpl
dec
ss
in
jo
inc
adc
and
outsb
mov
daa
sub
xor
mov
add
iret
scas
shrb
sbb
or
xchg
sti
sub
mov
ss
mov
jmp
fisubrl
and
mov
outsb
mov
mov
cmp
outsl
stos
xchg
incb
fwait
xor
aaa
inc
pop
lahf
and
add
push
test
jb
out
cmovae
mov
jl
ja
rcrb
das
ljmp
adc
movsl
add
jne
inc
lods
mov
int
out
lds
ret
cld
sahf
les
xor
sub
dec
roll
sub
and
ficoml
mov
cmp
jge
daa
iret
loop
aaa
add
jno
inc
sub
dec
sub
and
outsb
xlat
lock
test
dec
cmp
popl
or
movb
dec
data16
mov
push
scas
xor
pop
xchg
jnp
and
fnstcw
imul
and
mov
jne
mov
and
imul
nop
or
mov
sbb
pop
les
insb
fldt
jg
rcrl
mov
cmp
lret
or
mov
sub
xchg
loopne
jl
add
cs
mov
mov
push
cmp
sahf
incl
dec
out
divb
imul
inc
popf
xchg
or
push
pop
mov
or
and
inc
addr16
or
push
bound
cld
mov
pop
xchg
repnz
pop
int
xchg
xor
xchg
loope
pop
mov
mov
xchg
shrl
add
jmp
sbb
jae
push
ds
sub
jmp
xorb
cmc
push
mov
fs
mov
mov
push
orb
adc
lods
jns
dec
repz
inc
xlat
xor
js
pusha
mov
dec
cmpsb
lods
ljmp
imul
xor
dec
sbb
cmpb
pusha
xor
dec
movsl
daa
inc
shlb
mov
lods
arpl
adcl
mov
jns
rcll
inc
mov
stos
insl
mov
cwtd
test
jno
mov
dec
mov
push
scas
mov
loop
add
aaa
jl
out
sbb
cmpsl
jg
jp
shlb
movsb
test
push
and
mov
divb
andl
push
sbb
jmp
pop
sub
push
das
fnclex
add
stos
lret
xchg
sbb
loope
mov
add
mov
ljmp
movsl
sbb
adc
and
dec
adc
sub
inc
push
cmpsb
sarb
xchg
mov
xor
mov
xor
xchg
and
loop
jb
das
ja
inc
sub
repnz
dec
sub
mov
movsl
aas
xchg
js
mov
xor
pop
out
into
inc
ret
mov
fwait
daa
xchg
lds
cmp
dec
sbb
iret
in
inc
add
decb
stc
jg
push
mov
imul
popa
imulb
fimull
push
xor
ss
xchg
jmp
pop
dec
aaa
cmp
pop
mov
leave
add
dec
adc
jno
imul
fstps
imul
adcl
cmpsb
sbb
flds
push
mov
cmp
bound
push
mov
ret
fsubrs
mov
js
add
sahf
push
mov
push
lods
test
mov
imul
addr16
ja
push
dec
pop
sub
outsb
cmp
or
rcrl
jp
loope
inc
lahf
jnp
inc
jns
dec
pop
xor
bound
scas
ret
pop
fdivr
imull
aas
popf
xor
std
int3
lods
out
sbb
lcall
fistps
mov
mov
xchg
dec
aaa
jp
mov
pushf
repnz
inc
inc
mov
stos
arpl
push
pop
test
cmp
sti
and
cmp
mov
pop
aaa
or
add
inc
or
sbb
or
adc
jns
ss
in
sub
repnz
push
inc
adc
jge
jno
jl
xchg
inc
ljmp
cmc
ljmp
lret
test
mov
pop
mov
jbe
sbb
cmp
out
lahf
xor
xchg
jecxz
movb
pop
dec
cmp
xor
outsl
outsl
faddp
mov
sbb
mov
ja
punpckhbw
sbb
push
ds
xchg
inc
inc
mov
xor
sub
dec
imul
repz
xor
add
sub
or
jae
in
fcomps
arpl
jns
jle
scas
pop
in
mov
add
mov
xor
sbb
shrl
stc
push
push
cmp
or
jbe
mov
outsl
xchg
mov
or
ret
orb
sbb
out
mov
mov
insl
pop
fld
mov
sbb
shrb
fdivrl
idivl
filds
adc
xor
xchg
scas
dec
sbb
test
cmp
fs
imul
sub
add
inc
push
imul
daa
or
xor
sbb
cltd
xor
mov
pop
fwait
cld
mov
lea
push
mov
and
lcall
pop
add
mov
inc
shl
xor
fstps
sub
jne
popa
movsb
push
mov
shrl
imul
dec
cmp
les
cmpsb
pop
mov
loope,pn
pop
movsl
out
push
adc
inc
scas
hlt
outsl
mov
xor
jg
xchg
sbb
dec
mov
mov
cmc
fildll
shrb
and
pop
xor
fisubs
dec
shlb
add
push
test
mov
test
or
dec
imul
lds
movsl
pop
fistpll
daa
in
mov
sahf
call
out
mov
sbb
push
jnp
rcll
xchg
inc
push
rolb
xor
cmp
jge
pop
add
in
push
cmpsb
add
daa
jge
dec
dec
pop
xor
jmp
push
imul
xchg
inc
fistpl
push
xchg
jnp
fwait
pusha
push
mov
xorb
sub
mov
mov
andl
cs
dec
ret
jno
jmp
dec
fst
js
loop
sarl
xchg
or
insb
or
test
inc
or
jecxz
in
loope
xor
pop
sbb
cmp
push
fldcw
sub
pop
loope
repnz
into
test
xchg
decl
test
xchg
push
jmp
in
push
mov
mov
mov
mov
test
call
push
js
push
push
xchg
jecxz
dec
out
dec
aam
in
cmp
arpl
lcall
cmp
inc
aam
xchg
adc
lock
pop
add
mov
mov
sub
and
in
mov
push
inc
stos
mov
ds
push
mulb
jno
inc
inc
or
scas
je
lret
mov
jo
pushf
cwtl
leave
dec
adc
jle
xchg
mov
mov
sub
xor
mov
xchg
xchg
dec
mov
jge
ret
sahf
add
xor
and
or
int
cmp
stos
pop
bound
scas
jp
cmc
inc
jne
leave
js
add
fstpl
out
lahf
and
xor
sub
divb
xchg
dec
inc
scas
outsl
scas
pop
fists
cmp
adc
sbb
cmp
lcall
call
clc
mov
gs
fwait
xchg
bound
test
aaa
sub
bound
insl
in
add
push
mov
push
sahf
inc
mov
jnp
pop
adc
inc
mov
dec
push
movsl
jecxz
or
jno
xchg
push
mov
mov
pop
fs
scas
and
xchg
arpl
cmpsb
sub
cwtl
daa
xorb
sub
jle
imul
xor
pop
inc
fbld
and
cmp
push
and
xchg
lret
subl
cmp
into
fwait
jecxz
pop
pop
push
pop
sub
call
ficoms
jae
jo,pn
mov
popf
repz
and
jo
xorb
mov
pop
inc
xor
dec
les
mov
aad
into
fwait
in
jecxz
sti
out
sub
dec
sub
dec
ret
fnstsw
sbb
sbb
pop
fs
insl
fwait
ret
rol
popf
fcoms
fcoml
pop
shr
mov
jo
pop
cmpsb
jbe
mov
lcall
jno
dec
xor
popf
and
ss
sbb
inc
push
test
stos
or
shlb
sub
gs
xchg
sarl
sub
rorb
cwtl
addr16
sbb
mov
fisubrl
cmp
ja
out
aas
mov
pop
xor
mov
lods
divl
movsl
outsb
subl
sbb
pushf
pusha
sahf
add
add
mov
fcoml
add
push
or
sub
add
pop
into
xchg
imul
push
xlat
mov
or
xchg
cli
sbb
adc
jge
and
xchg
inc
stos
cmp
lcall
test
mov
int3
add
adc
nop
and
pop
and
ret
jbe
cmp
push
iret
insb
std
mov
dec
mov
mov
andb
push
adc
mov
daa
outsb
stos
pop
jne
popa
xorl
xchg
inc
and
ss
shrb
xor
mov
lcall
mov
call
cmp
sub
jg
cmp
lock
xor
mov
clc
mov
push
adc
stc
sbb
pop
mov
pop
mov
leave
push
xlat
scas
jecxz
js
or
scas
xchg
and
hlt
xchg
inc
mov
jg
mov
jnp
in
cmp
add
mov
dec
mov
je
push
cmp
pop
xchg
mov
arpl
loope
mov
jne
loop
push
cmp
out
sub
out
inc
add
xor
je
pop
xor
xlat
fsubrp
icebp
sub
or
mov
imul
mov
add
int
sbb
mov
dec
cmp
inc
fwait
add
dec
sbb
jbe
das
pop
jmp
sub
addr16
lods
aad
cmp
stc
mov
lock
js
pop
fs
add
push
adc
pop
mov
vhsubps
xchg
ljmp
push
imul
cmp
fwait
xchg
mov
inc
xchg
jg
rcl
sub
dec
and
adc
f2xm1
fs
out
lods
or
push
gs
dec
mov
nop
inc
inc
adc
fs
imul
or
sbb
jg
sub
fldlg2
jmp
jnp
xchg
xchg
scas
pop
fimuls
inc
cmp
repz
or
sub
es
sub
sub
cld
fisttpll
jmp
pop
add
stc
adc
mov
jae
pop
dec
sahf
out
loopne
pusha
out
fcompl
pop
pop
dec
xlat
fs
rcrb
mov
and
cli
es
cld
leave
mov
mov
enter
push
sub
inc
cwtl
cmp
pop
fs
mov
push
sbb
push
aad
rcr
push
jmp
xchg
sarb
ds
cmp
push
inc
sar
adc
call
jne
insb
sub
test
popa
and
inc
in
lahf
loop
push
fwait
mov
and
movsb
or
cwtl
cmp
cs
popf
popa
mov
aas
pop
jb
test
sbb
cltd
mov
cwtl
jo
xor
push
pusha
aas
in
adc
pushf
sub
and
test
push
sub
or
test
lret
mov
insb
and
fldenv
ss
or
ja
fidivrs
es
mov
xor
movsb
in
xlat
jae
mov
clc
fdivl
sti
movmskps
in
sahf
push
js
or
call
mov
push
ret
mov
push
push
in
mov
mov
js
repz
dec
or
sbbl
repnz
add
pop
out
bound
repnz
incb
cmp
movsb
mov
sub
clc
rcll
and
in
lods
lahf
inc
iret
cmp
in
std
mov
test
add
iret
mov
pop
cmc
xchg
mov
xchg
or
jo
add
pop
and
es
mov
jl
adc
pushf
add
cs
jno
cmpsb
iret
lahf
jecxz
subl
cmp
data16
movsb
adc
pushf
push
mov
mov
sbb
and
dec
scas
jno
inc
lods
mov
es
les
int
adc
pop
mov
cmp
inc
ficomps
dec
xchg
push
loop
movsl
adc
pop
mov
lds
jmp
aad
xchg
out
push
shll
cs
aam
adc
mov
mov
ljmp
mov
lods
mov
ljmp
neg
and
mov
cmp
in
add
sub
icebp
pushf
cmp
rclb
xor
mov
pop
adcb
push
sub
xchg
ja
sub
fsubrs
fwait
sbb
movb
and
pop
gs
cltd
iret
dec
gs
sarb
inc
clc
test
or
imul
adc
testl
mov
mov
mov
insl
jno
pop
mov
fidivrl
outsl
jno
jle
push
rorl
les
movsl
mov
mov
xchg
or
cmp
lret
mov
or
adc
inc
fistpl
cmp
pop
push
nop
mov
mov
mov
pop
fldenv
xchg
lods
imul
lret
mov
sub
hlt
xor
imul
popa
push
les
cwtl
push
rcrb
jnp
leave
out
mov
adc
stos
cmpsb
mov
jno
cwtl
adc
std
add
fistpll
lods
xor
push
div
xchg
jmp
and
and
stc
sbb
jo
rclb
cmpsl
rolb
mov
xchg
das
mov
mov
inc
aad
mov
jp
pusha
push
jle
mov
jmp
sub
or
dec
in
mov
xchg
cli
hlt
js
shll
and
jo
js
movsb
addb
outsl
mov
addr16
mov
mov
mov
push
jecxz
in
pop
out
cmp
mov
icebp
pop
xchg
jae
insb
testl
jge
rclb
loop
idivb
and
jle
and
push
loop
push
insl
mov
int3
or
iret
jb
sub
ss
jae
adcb
and
xchg
sbb
data16
mov
repnz
mov
mov
scas
shl
ret
popf
mov
in
cwtl
pop
dec
aaa
mov
or
ja
in
push
mulb
fistl
outsl
mov
cmp
int
je
and
jno
jo
jecxz
outsb
push
fisttpl
inc
jbe
push
inc
mov
inc
push
je
repz
ja
jmp
fwait
jecxz
mov
loopne
leave
jb
popa
repz
and
insl
ret
lret
push
cmp
imul
jecxz
repz
dec
out
xchg
sti
subb
sub
bswap
and
out
fstpt
dec
or
cmp
rorl
inc
push
pop
ss
dec
pop
icebp
jg
clc
int
jg
push
xchg
push
mov
pop
mov
push
loopne
lahf
xor
gs
out
sarl
cld
sub
cmc
mov
gs
xor
push
movsl
mov
or
movsb
or
dec
mov
mov
aaa
push
sbb
inc
out
bnd
addb
lret
xchg
adc
icebp
js
adc
mov
adc
cmc
repz
cmp
lcall
jp
jmp
lcall
inc
push
mov
mov
push
adc
rorb
cmpsl
xchg
les
jg
or
out
kmovw
mov
aas
ss
xchg
popa
inc
loopne
mov
dec
loopne
stos
in
mov
in
bound
mov
jecxz
mov
xor
mov
sbb
or
jnp
stos
test
push
dec
adc
xchg
out
icebp
cmp
pop
mov
roll
orl
sti
dec
and
xchg
dec
or
and
dec
xchg
dec
jns
xchg
cmp
insl
int
jo
jp
or
dec
xlat
test
fisubrs
mov
adc
adc
cli
subb
data16
mov
dec
mov
fcoms
fcomp
fstl
mov
mov
dec
xchg
cmpsl
push
cmc
imul
fistpl
pop
dec
ljmp
and
jecxz
jp
inc
push
cld
cmp
fadds
shrb
jle
pop
mov
dec
sub
cltd
test
cmp
jns
sub
dec
inc
adcl
leave
bnd
ja
jno
or
add
insb
adc
xchg
mov
bound
in
mov
mov
xchg
xor
and
push
push
imulb
sub
or
pop
and
jmp
push
adc
fsubs
mov
pushf
push
pushf
jmp
mov
mov
mov
fiaddl
xchg
push
mov
bswap
aaa
orl
and
push
je
daa
or
push
outsb
sti
es
rcrb
ret
push
mov
jae
cmc
orl
push
lods
idivb
rol
cli
mov
xchg
sbb
fwait
pop
mov
mov
jp
leavew
repz
fwait
xlat
mov
and
sub
cmp
outsb
fistl
xlat
addb
or
sub
movb
shufps
adc
mov
cmpsl
xchg
jo
mov
out
int3
pop
hlt
pop
andb
mov
sbb
cltd
jne
mov
or
pop
insb
lods
mov
jne
or
and
sub
pop
pop
ljmp
pop
jns
imul
mov
pop
in
inc
test
shll
xor
pop
mov
push
jns
pop
xor
mov
ljmp
clc
pop
stc
mov
cmpsb
cmp
xor
popa
push
inc
or
rclb
out
lret
cmp
mov
push
aam
cltd
push
add
rcr
mov
and
and
out
stc
cmp
rclb
cltd
push
call
lods
data16
divl
pusha
dec
cld
xor
cltd
addb
xor
or
add
lods
add
aaa
in
xchg
jne
int3
sbb
mov
xchg
ljmp
push
fidivrl
mov
adc
inc
adc
or
int
push
and
fmull
sbb
sub
stos
mov
cmp
loope
aad
fdiv
sub
inc
jb
ljmp
push
or
shrl
stc
xchg
sub
mov
movsb
mov
inc
lcall
lret
xchg
fadds
lret
out
js
andb
adc
push
push
and
pop
mov
cmp
and
stos
inc
imul
mov
push
adc
jp
mov
and
mov
xchg
ret
cmp
outsb
out
sbb
pop
call
inc
cmp
lock
insl
xor
stos
cmpsl
test
dec
mov
inc
scas
addr16
jle
sbb
mov
jae
xor
jo
mov
in
fstps
and
xlat
and
std
jb
sti
dec
movsb
xchg
mov
mov
pop
push
inc
in
jg
mov
inc
andl
sbb
mov
add
dec
movb
push
pop
sub
xchg
push
xlat
jecxz
mov
icebp
inc
inc
pop
push
pop
jns
movsb
ja
aaa
daa
jnp
enter
cmp
fistps
fiadds
pop
inc
sti
popf
adc
mov
push
jno
mov
inc
adc
jmp
and
pop
andl
xchg
inc
scas
ja
add
rcrl
fwait
mov
out
lods
subb
mov
add
gs
dec
xchg
imul
mov
dec
inc
sbb
lods
push
or
out
into
pop
into
loope
adcb
xor
adc
or
cmp
subl
lock
andl
adc
mov
and
in
xlat
cmp
fsub
xchg
pop
xchg
dec
mov
outsb
js
xor
popa
push
stos
adc
in
stos
mov
mov
in
imul
push
jl
aas
sub
push
loop
mov
or
xorb
mov
jmp
rol
pushf
divl
or
sub
cwtl
int
jl
repnz
clc
xor
xchg
xchg
dec
lcall
mov
scas
or
cmpsb
iret
into
jp
nop
stc
mov
cmp
int
push
loopew
shl
pop
and
push
leave
cli
in
lret
pusha
mov
dec
rcrl
les
push
adc
out
sbb
add
add
lods
mov
xor
sub
add
test
loope
jge
push
mov
mov
inc
jmp
shll
outsb
xchg
jo
cmpsb
xlat
dec
arpl
push
cmc
scas
lret
xchg
adc
jg
rcl
daa
fdivrs
push
push
sbb
cltd
mov
inc
lock
int3
jmp
or
dec
stos
add
xchg
scas
mov
sahf
repnz
mov
sahf
jecxz
ss
dec
xchg
sbb
sbb
cmp
jne
insl
adc
pusha
hlt
jbe
in
mov
xchg
xchg
mov
or
cmp
cmp
or
je
jns
adc
loope
data16
jno
xchg
push
repz
mov
fists
in
jecxz
fcmovnb
pop
movsb
popa
dec
add
jae
ss
xor
sub
mov
xor
mov
popf
mov
enter
pcmpgtd
div
ficoml
lcall
jmp
cwtl
jecxz
or
outsl
sub
xchg
mov
shll
xchg
cmp
push
adc
or
les
sbb
add
fidivl
ds
push
stos
jae
std
pop
sub
inc
hlt
jmp
mov
add
paddusw
mov
inc
hlt
testl
push
xchg
int
sbb
sub
xchg
lock
adc
je
sbb
add
mov
dec
orb
mov
push
sbb
pushf
test
and
dec
hlt
sbb
jb
stc
dec
inc
mov
fists
sbb
or
add
adc
or
xchg
xor
jmp
sub
pop
pop
loope
int3
adc
pop
leave
adc
sbb
imul
mov
or
shll
mov
jno
ljmp
mov
mov
fsubrs
fs
dec
je
clc
mov
cmpsl
gs
push
fwait
pop
ret
leave
mov
insb
pusha
pop
std
inc
mov
movsl
xchg
iret
call
sub
lods
mov
xor
lcall
andl
lret
out
js
inc
jle
adc
lcall
pusha
inc
mov
sub
add
shr
push
mov
or
inc
fists
xchg
and
out
enter
shlb
pushw
les
rcrb
push
push
jbe
adc
mov
jge
aam
ds
sub
xchg
aad
pushf
mov
dec
pop
push
nop
cs
mov
call
leave
or
mov
jl
test
inc
cmp
adc
push
lcall
movsb
aas
movsl
mov
int3
and
es
inc
inc
mov
push
mov
arpl
loope
adc
aad
lahf
ljmp
sahf
cli
jecxz
repnz
out
cmp
sub
scas
jmp
xorb
test
lock
aam
fmull
adc
pop
nopl
repnz
add
push
sub
adc
icebp
hlt
in
ja
adc
rcr
or
icebp
mov
adc
out
es
sbb
push
xchg
enter
push
inc
pop
cmp
mov
and
dec
sub
aam
in
icebp
jle
bnd
jae
add
pusha
inc
push
rcrl
insb
dec
into
or
les
push
xor
add
inc
in
push
push
pop
jp
pop
or
jge
in
lock
movsl
xor
pop
stos
dec
mov
and
push
repz
cmp
mov
out
inc
pop
sub
or
sahf
inc
sub
dec
aad
and
pusha
in
lea
ficompl
js
adc
loop
lea
jo
mov
aas
pop
mov
xor
test
lods
popf
lods
nop
push
pop
insb
rolb
push
or
popa
fdivs
xor
sub
xlat
int3
ret
rcrb
addr16
shlb
faddp
notl
sub
push
cmpb
sbb
lret
cmc
dec
mov
xchg
mov
push
mov
jno
or
mov
and
inc
xchg
sub
cmpb
dec
inc
js
xchg
pop
ret
xor
adc
test
cmp
push
cltd
movsb
push
roll
gs
pop
dec
cmp
cs
lods
jns
and
test
enter
xor
sti
lods
push
add
outsl
daa
mov
inc
rol
xchg
data16
dec
cmp
cmp
into
add
leave
fdivl
je
neg
add
xchg
enter
mov
inc
pop
sahf
ljmp
inc
ret
dec
push
out
and
mov
sbb
or
ljmp
call
inc
cmpsl
cwtl
jecxz
lea
dec
xchg
test
mov
ret
cli
popa
shl
into
leave
insb
jb
dec
and
sub
fs
je
cmp
in
push
addr16
lds
arpl
mov
pusha
js
mov
push
cli
xorl
das
hlt
lahf
sub
jmp
xchg
sbb
popa
sub
and
jle
mov
push
ret
in
add
ret
pop
repz
scas
dec
jne
cmp
sbb
pushf
mov
inc
pusha
xchg
pop
xchg
test
orb
popf
ja
test
push
pop
xor
subb
pop
je
int
adc
outsl
sbb
in
std
jb
sbb
adc
test
jb
xor
xor
insl
push
fiaddl
jmp
xor
push
mov
arpl
lret
popa
addl
xchg
and
cld
mov
mov
add
mov
pop
fisttpll
and
jl
popa
pop
cmp
jae
dec
mov
dec
add
cli
add
sbb
mov
ret
outsl
rcrb
fxch
aaa
dec
lahf
pop
push
sahf
loopne
mov
push
ss
or
adc
sbb
or
sbb
sub
and
imul
xlat
push
aas
mov
pop
leave
adc
dec
das
jmp
int
xchg
push
mov
ja
or
jge
dec
and
mov
sub
dec
fcoml
aas
mov
mov
pop
adc
adc
xor
test
in
xchg
jo
pop
mov
xor
or
jb
or
mov
in
add
xchg
and
inc
xor
repz
insb
pop
jno
inc
test
mov
xor
or
int
das
sbb
push
add
or
or
or
or
iret
mov
push
cmp
dec
sub
xchg
sti
ds
push
adc
aas
les
aaa
or
in
hlt
mov
out
xor
inc
rorb
repnz
or
scas
xor
inc
lds
imull
cmc
mov
fistps
mov
jno
les
popf
repz
fstps
popf
fs
cs
cmpl
pop
ja
femms
daa
enter
fdivrl
or
std
stos
mov
popf
pop
push
in
mov
inc
pop
sub
sbb
dec
insb
jl
push
test
enter
out
jbe
or
inc
xchg
dec
rclb
pusha
pushf
daa
cld
ds
ret
sbbb
lods
inc
pop
in
outsb
mov
ds
leave
add
ficoms
int3
pop
jo
xor
sbb
popl
cmp
dec
jge
fs
in
enter
ss
pop
dec
mov
pop
insl
sub
adc
fs
dec
or
pop
add
or
cmp
popa
or
jp
sti
cmp
push
adc
xchg
hlt
jp
mov
lret
push
sti
enter
sti
push
loopne
fwait
sbb
jmp
clc
pop
jge
mov
andb
lcall
call
or
mov
pop
sahf
in
jge
or
inc
lods
pop
cmp
mov
dec
sbb
xor
xchg
mov
push
push
cmp
pop
xor
mov
sbb
cmp
xor
sbb
orb
sbb
cmp
mov
divb
aam
int3
loop
or
jb
inc
lret
mov
xor
pushfw
xlat
add
outsb
mov
gs
in
push
bound
inc
mov
mov
mov
mov
loopne
inc
out
sub
jns
in
sti
mov
pop
sub
sub
out
mov
push
movsb
fs
stos
lcall
mov
lods
test
fs
cld
ljmp
adc
insl
pop
xor
movsb
insl
push
and
je
movsl
or
dec
dec
insl
aam
cmp
xor
xlat
add
add
jge
es
test
cwtl
push
or
aaa
fdivrs
xchg
inc
add
mov
jle
jecxz
push
inc
and
popf
das
clc
out
cld
insb
test
movsb
loopne
fistpl
scas
loope
rclb
pop
out
and
sti
ret
add
stc
lds
push
add
icebp
mov
leave
movsb
je
push
popa
inc
hlt
cmpsl
mov
out
mov
aaa
ja
sbb
outsl
push
cmp
icebp
in
adc
or
add
fldl
sbb
or
mov
test
dec
cli
and
jmp
loop
sti
dec
sub
ds
cmpsb
repnz
and
dec
pusha
cmp
aaa
or
mov
mov
mov
and
movsl
test
or
or
mov
mov
xchg
mov
adc
lds
data16
or
cmc
xchg
cmp
cmp
cmp
or
popf
inc
xchg
push
pop
sarb
cs
mov
xor
mov
repz
rcll
sbb
sbb
ja
inc
das
scas
inc
cli
rclb
and
xchg
rcr
popa
jge
xlat
sub
mov
xor
rcr
lret
int3
push
lock
ljmp
mov
push
mov
jns
pop
jge
stos
bound
mov
xor
enter
sub
cmpsl
mov
cmpsb
dec
sbb
jae
in
fdivl
push
sub
adcl
adc
lods
negl
ljmp
insl
pop
xchg
and
scas
aam
and
or
push
mov
or
pusha
cld
xor
std
lcall
adc
jae
push
sbbb
mov
jecxz
xchg
hlt
ljmp
into
or
mov
mov
daa
roll
sub
je
push
sub
nop
pop
sub
pop
fidivl
popl
insb
and
movsb
nop
jg
lods
subl
adc
mov
outsl
jge
jns
jno
fwait
lret
and
out
sbb
add
sti
inc
jno
gs
xchg
dec
pusha
iret
mov
mov
stos
je
dec
sbb
dec
mov
adc
ds
mov
stos
cmpsb
dec
sahf
mov
or
jne
in
les
andl
iret
adc
std
push
jl
popf
mov
push
insl
fs
loop
ret
loopne
std
out
cmp
out
in
inc
push
cmp
and
in
jge
lahf
or
jg
sbb
jbe
mov
sub
push
adc
push
jo
arpl
lahf
jp
in
inc
arpl
dec
push
pop
pop
sarb
push
sbb
into
ret
jne
push
mov
cli
cmpsl
rcl
xor
or
dec
sbb
cmp
mov
test
push
jl
das
fdivrp
pusha
pop
cmp
sahf
pop
push
xor
out
jne
jmp
lret
ret
lock
shrl
mov
and
dec
inc
push
gs
rclb
push
std
add
in
rorl
int
mov
mov
mov
repnz
popf
rsm
popf
pushf
xor
lret
jae
jecxz
fs
mov
out
leave
fadds
xor
adc
popa
lcall
int3
adc
jnp
cmp
xchg
in
sub
pop
lods
addr16
or
cwtl
out
stos
jno
xchg
cmc
pop
cli
test
not
int
mov
cmp
fdivs
imul
mov
inc
xchg
mov
lahf
fsubrl
leave
add
fbld
neg
or
ljmp
movsl
incl
push
add
fmuls
das
fiaddl
outsl
push
es
movb
jb
mull
out
and
aaa
outsl
clc
call
test
push
inc
ds
jle
adc
in
bound
out
sbb
mov
fcoml
cmpsl
sub
ss
mov
fcompl
stos
xor
popa
and
daa
add
ret
jmp
pushf
sbb
xor
dec
pushl
xchg
jbe
jecxz
cmp
xor
arpl
shlb
add
mov
adc
in
adc
in
notl
repnz
es
or
mov
in
in
mov
loope
mov
mov
mov
dec
popf
ja
jnp
repz
pop
dec
lods
les
sarb
dec
mov
addb
inc
xor
jg
stos
aaa
mov
pop
jo
sub
in
movsl
and
sbb
ret
dec
xor
sbb
or
repnz
dec
loop
scas
pusha
and
pop
leave
popf
mov
sbb
inc
cmp
cmp
adc
push
jae
mov
mov
addr16
gs
add
pusha
push
mov
hlt
ss
mov
lret
jno
inc
xlat
dec
dec
out
mov
aaa
inc
jbe
or
sub
int3
inc
iret
bound
jbe
dec
add
mov
into
push
dec
movsb
ljmp
fdivrl
fisubrl
imul
sub
in
in
adc
cwtl
sbb
inc
shll
test
pop
jp
das
dec
iret
sub
call
jle
repz
lods
sub
cmpsl
pop
pop
popf
test
movsb
xor
shl
push
bound
arpl
mov
push
gs
xchg
xor
xchg
in
mulb
mov
or
int
mov
mov
int3
and
shlb
cmp
and
push
jbe
mov
push
les
test
daa
sti
ficoms
std
aam
inc
mov
loope
mov
add
int3
mov
sub
inc
scas
adc
inc
mov
jmp
fdivr
imul
insl
mov
xchg
xlat
xlat
push
hlt
cwtl
loopne
xlat
or
loope
popa
shll
insb
test
pop
les
mov
mov
fnstenv
cmpsb
xor
popf
in
mov
mov
aas
cld
cmp
out
adc
into
lea
leave
mov
mov
mov
fsubrl
mov
shlb
pop
mov
aaa
imul
push
sub
in
ficomps
call
pushw
clc
mov
negl
lahf
sahf
xchg
lahf
adc
outsl
xchg
mov
inc
loop
ss
add
mov
jmp
rcrb
fadds
fildl
jne
clc
pop
aad
adc
inc
das
jnp
jmp
cmpsb
jne
ljmp
dec
stos
jnp
les
fucom
jnp
clc
test
dec
cmp
or
out
mov
xor
test
mov
cwtl
jns
scas
icebp
pop
mov
out
bnd
xor
jns
xor
es
xor
outsb
addb
push
inc
out
cmpsb
fdivr
enter
fwait
cwtl
jb
adc
das
xor
shrb
and
int
dec
inc
shlb
ficoms
jg
fldenv
fwait
mov
inc
inc
lods
popf
sarb
adc
stc
aas
jecxz
or
and
loopne
xchg
jb
and
nop
xchg
ljmp
add
daa
scas
sbb
fwait
jp
outsb
and
stos
movsb
mov
jo
hlt
ds
mov
int
ret
testl
addr16
lock
and
cmp
inc
jge,pt
mov
icebp
ds
pusha
xchg
pop
cmp
xchg
dec
and
sub
pop
mov
mov
daa
xchg
inc
push
jmp
icebp
cmp
bound
xor
jo
sahf
pushf
ljmp
call
pop
mov
xchg
lahf
popf
cld
je
push
lods
ret
jno
sub
loopne
xchg
mov
jp
imul
cltd
sbb
mov
dec
sti
popa
and
fsub
enter
repnz
inc
insl
xchg
test
ret
fstl
les
outsl
mov
cs
xchg
push
sti
xchg
pop
in
push
mov
data16
mov
push
jne
je
sbb
movsb
mov
loop
push
and
xchg
dec
mov
inc
in
lods
cld
inc
cmp
inc
adc
jp
jae
idivb
xor
lcall
pop
jecxz
stos
inc
aas
mov
ja
cmpsl
notl
test
push
mov
jnp
es
jecxz
jp
mov
sub
dec
pop
adc
sarb
loopne
mov
lret
lods
or
adc
movsl
or
or
mov
dec
jno
xchg
in
dec
cltd
cmpsl
push
sbbb
outsb
jnp
jp
or
mov
leave
js
call
inc
cltd
dec
add
mov
lods
mov
dec
mov
xchg
adc
inc
push
fsubr
jge
push
push
xor
add
xor
jl
in
inc
arpl
popf
insb
fnsave
fbld
cli
out
shrl
pop
pop
and
in
mov
es
test
inc
aad
pop
sahf
pop
dec
adc
in
xorl
cs
mov
bound
cli
out
mov
ss
adc
sub
jp
add
in
and
jg
sub
jmp
movsb
fldenv
sahf
lock
xlat
stos
outsb
inc
repnz
notb
scas
and
add
lods
mov
les
ss
scas
xor
jb
jae
dec
mov
jo
or
nop
cmp
jns
push
outsl
int
loop
mov
add
clc
cmp
fldenv
mov
data16
pop
ss
mov
mov
push
lret
xchg
int3
aas
out
loop
cli
push
lret
xchg
in
adc
or
imul
add
dec
out
mov
arpl
mov
pop
loopne
xor
adc
dec
fidivs
jb
ret
xchg
mov
jge
jmp
pop
jl
shlb
push
nop
push
or
lock
push
lahf
pop
cmp
dec
mov
leave
jns
jle
stos
leave
dec
shl
mov
or
xchg
add
daa
inc
iret
or
cmp
loop
push
out
imul
sbb
lods
outsl
cmc
insl
test
mov
xor
out
fsts
ljmp
or
pop
loopne
add
jb
enter
or
stos
pop
sbb
leave
ja
arpl
or
xor
es
outsl
shl
dec
mov
adc
sti
ret
sub
sahf
xchg
xchg
rorl
cmc
sbb
xchg
jmp
add
dec
fdivp
insl
xchg
je
rcrl
movsb
pop
stc
lods
pop
jg
scas
jb
in
pop
mov
into
aad
movsl
inc
pop
cs
or
repnz
clc
mov
and
xlat
sbb
cmpsb
sub
int
clc
mov
push
jp
xchg
push
xchg
inc
orb
add
lcall
lock
inc
add
mov
bound
test
insl
add
lods
fistpll
sub
loope
lcall
mov
cmpsl
inc
jmp
inc
bound
cld
pop
inc
add
call
sti
mov
dec
jno
arpl
xchg
shrb
stos
sbb
fldcw
mov
lret
in
dec
popa
adc
cwtl
mov
bound
jns
inc
push
lods
push
mov
or
cmpsb
dec
lods
aaa
bound
pop
sub
add
outsb
cltd
jge
in
mov
icebp
loope
int
push
leave
loope
arpl
dec
std
pop
negb
ficoms
xchg
icebp
inc
popa
fisttps
fwait
jmp
inc
mov
xor
mov
repz
les
lret
jl
add
fidivrs
aas
sar
cmp
add
lret
adc
adc
mov
mov
cld
lcall
pop
xchg
movsb
xor
addr16
std
mov
mov
loope
cmpsb
add
js
mov
insb
int
sub
mov
add
popf
sbb
jg
stos
cmpsl
xor
jbe
push
inc
adc
test
loop
adc
add
xchg
pushf
mov
dec
cmp
adc
icebp
ss
aaa
mov
in
pop
out
scas
sbb
add
insb
test
lret
aaa
jb
pop
mov
test
cli
cld
dec
cmp
cmp
inc
pop
lcall
inc
push
inc
fsts
cwtl
jae
or
arpl
jns
jg
xchg
out
outsl
jecxz
sbb
sbb
cltd
or
aaa
dec
lcall
mov
daa
and
jne
dec
rolb
addr16
jmp
outsl
jg
incb
loope
sub
inc
mov
lds
mov
pop
inc
lock
xorb
mov
ljmp
sarl
arpl
imul
or
sbb
inc
imul
mov
pop
xchg
and
cmc
ja
fsubl
icebp
sbb
clc
mov
pop
mov
aam
sarb
popf
cmp
cltd
push
push
aad
pushf
jg
out
inc
push
push
shll
cli
push
push
mov
outsl
cmp
pop
lock
lods
lret
mov
xchg
push
and
lahf
add
xchg
adc
jl
pop
dec
inc
xor
fcoml
or
mov
pop
scas
test
test
mov
clc
neg
xchg
popf
call
scas
push
jmp
jmp
repnz
lock
nop
adc
lret
mov
inc
jbe
out
pop
push
adc
sti
ret
enter
mov
rorb
test
fldl
into
adc
stos
int3
xchg
inc
pushf
int
or
inc
into
gs
in
fimull
loop
popa
jl
or
mov
dec
jg
inc
pop
push
fistl
push
pushf
movsb
jnp
xchg
ljmp
movsb
sbb
fdivrs
stos
xor
insb
lods
sti
in
mov
scas
sub
jo
sub
pop
cmp
jo
xor
xor
test
xorb
inc
and
push
test
lds
bound
cmp
jg
movsl
hlt
xor
and
sbb
out
insl
pusha
fidivrl
inc
sahf
es
fdivrs
jge
xchg
jmp
jne
fwait
inc
adc
cli
negl
ret
add
mov
nop
or
push
aam
adc
dec
ljmp
cmp
test
mov
mov
arpl
cwtl
cmp
stc
dec
pusha
jno
data16
push
sti
cmp
stos
xchg
loop
inc
xor
fldcw
push
aam
lcall
cmpsl
aas
icebp
mov
inc
cmpb
lds
stc
popa
ficompl
or
jo
cli
mov
xchg
fists
ds
loope
pop
pop
or
and
aam
inc
inc
cltd
jae
or
adc
dec
call
movsb
popa
dec
divb
xchg
ds
or
push
clc
or
hlt
and
cmp
jl
cmpl
fwait
xor
mov
sub
bound
outsb
clc
mov
gs
inc
inc
insl
imul
push
sbb
into
mov
fcmovb
mov
cli
mov
out
cld
movsb
push
and
sub
aas
add
aas
in
popf
cmpsl
rol
ficompl
int
and
orb
adc
mov
test
enter
and
or
je
xchg
inc
in
and
mov
mov
fisubrs
in
pusha
ret
aam
xlat
rcl
sub
imul
add
outsb
pop
outsl
dec
ffreep
mov
and
rclb
inc
fwait
jb
xchg
lahf
sub
xor
ret
aaa
xor
rcrb
cwtl
shll
inc
xor
in
jb
jae
sahf
cltd
and
repz
sub
mov
mov
or
add
cmpsb
rorl
push
dec
xchg
jmp
mov
or
push
ja
fmulp
push
aaa
xor
inc
stos
xchg
cmp
fwait
and
dec
push
mov
call
lcall
xor
lahf
pop
test
movsb
jo
subl
add
in
rolb
push
cmp
push
mov
jmp
shlb
js
dec
cwtl
mov
jbe
xlat
sbb
daa
dec
inc
ss
adc
stos
ficomps
xchg
jl
hlt
mov
mov
insl
xchg
pop
pop
andb
xchg
jbe
adc
pop
loopne
inc
mov
fs
jne
nop
cmc
pop
push
dec
mov
iret
aad
xchg
push
std
push
je
sbb
add
jbe
es
pop
jo
add
dec
in
cli
ret
and
dec
stos
cmc
test
sub
mov
jge
push
jbe
inc
fwait
mov
mov
in
idivb
inc
bound
jae
inc
lret
clc
cltd
sar
lahf
or
inc
repnz
push
aas
pop
ficoms
and
pusha
sbb
push
pushf
aad
pop
cmp
push
sbb
adc
push
push
filds
push
add
lahf
loopne
push
jge
test
mov
add
xor
or
push
pusha
inc
cmp
and
mov
xlat
mul
push
mov
inc
into
outsb
dec
loopne
pop
fucomip
div
fdivr
jmp
mov
rorb
add
cmp
popf
add
aas
test
or
mov
mov
pop
in
lock
jnp
or
stos
cmc
mov
xor
cmp
sub
push
mov
mov
inc
iret
nop
gs
ja
and
clc
aad
adc
movsl
adc
stos
in
xchg
shll
jbe
and
xor
jmp
xor
incb
fbld
arpl
cmp
arpl
sub
rcrl
jp
push
daa
mov
enter
cmpsb
enter
xchg
in
mov
dec
inc
rol
and
into
inc
push
stc
mov
pop
mov
out
loope
add
stos
imul
cmc
fcoml
rcrl
std
adc
ja
or
xchg
lds
jle
mov
xchg
xor
loope
stos
daa
push
pop
mov
or
mov
mov
add
add
fwait
pop
pop
sti
rclb
jmp
imul
inc
mov
enter
and
int3
mov
cmpsb
pop
mov
lock
inc
push
loope
cmp
roll
inc
mov
jae
cli
inc
inc
xor
ljmp
or
sub
cmpsl
data16
mov
in
sub
sti
je
sub
in
mov
cmp
or
js
in
mov
push
ret
aad
fcmovnbe
fadd
inc
stc
cmp
and
fidivrl
mov
cltd
sub
fst
push
popf
xlat
repnz
popl
cmpsl
dec
cmp
movb
call
xor
or
dec
cmp
lcall
xor
mov
sub
jecxz
in
xchg
cmp
cmpsl
enter
ds
xor
jp
mov
jo
xchg
pusha
xchg
sahf
mov
repnz
xchg
insl
cmp
push
inc
call
sbb
into
mov
sub
insl
lahf
ret
iret
rcl
mov
aaa
jecxz
xchg
insb
sti
int
or
and
mov
pop
add
and
jle
pop
aam
cltd
xchg
ficomps
daa
cs
and
or
lcall
add
ret
in
into
js
and
lods
mov
jp
sub
or
xor
or
dec
push
stos
cmp
jge
cmc
cmp
pop
inc
xchg
mov
cmp
mov
inc
push
pop
sti
dec
mull
cmp
rorl
mov
cmp
outsl
jge
xor
subl
dec
mov
pop
imul
test
xchg
cmp
pop
inc
inc
sbb
cmpsb
mov
jns
mov
cwtl
push
cld
stos
imul
pusha
clc
test
lcall
shr
xchg
or
cmp
call
fdivrl
push
enter
outsb
mov
mov
mov
mov
xchg
push
sub
and
mov
sub
dec
push
jmp
shll
lods
xor
adc
mov
fistpl
pop
add
pop
out
fbstp
outsl
mov
lret
clc
fwait
cmpsl
aam
jns
inc
aaa
mov
push
jns
fs
rclb
es
cmpsl
aas
cmp
jns
jnp
pop
mov
sub
sbb
out
cmp
xchg
jle
add
repnz
mov
pop
xchg
addb
cmpsl
cmp
pop
ret
pmulhw
push
test
dec
cmp
test
flds
mov
pop
xor
hlt
scas
imull
cmp
pop
orb
add
gs
or
ljmp
or
out
loopne
in
pop
loope
adc
jp
stos
adc
sub
dec
push
mov
aam
fwait
add
push
pusha
add
pop
in
in
sub
xor
cmc
fs
shlb
add
andl
xchg
andb
sub
into
push
out
mov
es
xor
int3
lret
imul
and
xchg
in
popa
jne
mov
push
lret
cld
sub
rcl
push
and
loop
mov
fcoml
jp
jnp
mov
mov
jge
lods
pop
rdpmc
xor
cmp
mov
into
arpl
sub
ja
cs
fdivrs
mov
daa
enter
inc
outsl
repz
test
push
push
add
adc
sti
fcomps
push
les
jbe
add
xorb
jecxz
xchg
xorl
cmc
into
das
cltd
outsb
fildll
imul
xchg
lahf
fildl
mov
xor
or
inc
pushf
cmp
test
xchg
cltd
dec
and
test
push
xchg
cmpsb
xor
or
lahf
pop
jb
and
or
and
add
xchg
call
dec
popf
mov
loope
loopne
out
mov
inc
enter
nop
clc
or
inc
flds
addr16
stos
repnz
mov
mov
or
repnz
daa
xchg
in
dec
into
outsb
mov
js
xchg
lcall
xor
or
push
mov
pop
cli
mov
lods
xchg
sbb
mov
icebp
xchg
sub
imul
add
push
rcr
and
adc
jg
and
push
out
dec
mov
adcb
test
fs
insl
sub
jl
addb
shll
mov
dec
or
add
fwait
xor
xor
inc
mov
mov
sub
xor
jo
fidivs
pop
lods
lods
sub
xor
sahf
ss
in
scas
push
cmp
xchg
das
add
adc
xor
jo
xor
daa
sub
add
jl
xchg
or
add
cltd
or
lret
add
rcr
or
sub
loopne
es
cmp
dec
cli
jge
popf
xchg
mov
mov
xchg
push
shlb
test
push
xor
cld
out
dec
dec
inc
jecxz
inc
xor
and
aaa
sub
jb
mov
mov
in
mov
fcoml
scas
rolb
add
jmp
push
sbb
stc
rcr
add
sub
hlt
xor
fstpt
lret
cwtl
rcr
inc
arpl
add
cmp
xlat
push
xchg
jle
push
inc
jp
mov
les
jg
ss
mov
add
adc
rclb
jmp
xor
int3
adc
xchg
and
insb
or
jmp
je
jae
imul
push
push
mov
sbb
mov
outsl
test
lds
dec
xchg
leave
shll
or
lea
mov
cmp
pop
cmp
sbb
idivb
mov
ds
scas
pop
cmp
jl
lret
dec
cmp
call
lea
rorb
push
iret
int3
jle
sub
adc
cld
mov
inc
or
clc
xchg
arpl
mov
mov
es
mov
push
xchg
lock
mov
push
inc
dec
xchg
js
mov
pmulhw
pop
mov
pusha
jns
mov
mov
mov
push
xor
pop
sbb
adc
aad
cmp
js
movsl
inc
cmp
or
add
mov
pop
mov
push
and
pop
andl
or
sub
stc
jns
imulb
enter
ljmp
stc
into
cmpsl
dec
out
rorb
stos
dec
mov
xchg
repz
jb
inc
clc
sbb
mov
fldl
test
pop
sbb
rcrl
fstps
push
mov
mov
call
push
or
stc
xchg
das
pop
sbb
mov
mov
inc
iret
or
inc
shr
and
sub
dec
pop
pop
sar
fidivrs
sub
imul
lahf
fwait
arpl
ljmp
sbb
in
cwtl
dec
adc
cmp
repnz
xchg
int3
mov
out
inc
cwtl
lds
enter
adc
and
or
pop
push
insl
lods
imul
cld
dec
xchg
cli
cld
aaa
mov
inc
mov
mov
mov
pop
pop
dec
fstpl
negb
scas
push
and
pop
xor
push
pop
cmp
lods
out
jl
mov
pop
inc
xorb
push
lret
jg
cwtl
jg
lcall
push
mov
and
sahf
add
std
cs
cmpsl
push
enter
xchg
icebp
mov
shl
pushf
xor
mov
xor
sahf
pop
or
xor
jl
ljmp
sti
dec
sub
cmpl
add
pop
inc
lret
into
jge
xchg
ret
jge
test
jns
sub
inc
sahf
ljmp
cli
push
or
and
jne
popf
pop
mov
dec
call
hlt
cwtl
dec
inc
pop
fstpt
jl
loopne
xchg
sbb
cmc
xchg
movsb
gs
std
sbb
xor
inc
das
pop
scas
cmp
and
cmc
out
lods
adc
sub
mov
jmp
jp
push
ja
xchg
mov
gs
pop
popa
adc
pop
ret
sahf
lods
cmp
test
ret
inc
push
mov
mov
sbb
and
mov
mov
xchg
in
cmpb
xor
sub
mov
push
popf
pop
rcll
insl
sub
mov
sbbl
shrl
fisubrl
push
push
pop
jnp
xchg
push
dec
fimull
test
scas
cmp
jnp
push
std
jae
insb
test
adc
cld
jb
std
stos
mov
cmp
pop
cld
adc
scas
xor
ss
sub
andl
cmp
xor
cmpsb
std
aad
fidivrs
js
lahf
pop
jg
repz
sub
ljmp
loope
push
mov
xchg
lods
hlt
ret
add
mov
xor
ret
pop
mov
xor
imul
xor
lods
adc
xor
mov
js
or
es
cmp
daa
sub
int
jg
xchg
test
add
sbb
and
jo
sti
xchg
sbb
aaa
inc
lods
loop
arpl
lds
sbb
sbb
mov
enter
outsl
cmpsl
and
iret
into
ja
dec
dec
int
nop
mov
or
sbb
icebp
mov
dec
and
pop
or
in
cwtl
cmp
adc
insb
xchg
rcrb
test
lahf
hlt
xor
in
mov
mov
orb
rcrb
pop
mov
adc
je
add
adc
adc
xor
sbb
lahf
jae
jo
test
ret
dec
xor
sbb
fsts
mov
inc
dec
xchg
mov
insb
jp
popa
fstpl
out
loop
test
cmp
jg
adc
stos
push
shll
or
xor
shrl
pop
std
mov
or
push
repz
ret
xor
mov
addr16
aad
stos
fnsave
ss
push
pop
inc
sbbb
mov
xlat
test
add
loopne
arpl
dec
and
ljmp
mov
and
cmp
fldenv
pop
popa
mov
filds
xor
xor
test
int
das
pop
xchg
push
add
mov
icebp
jecxz
mov
jo
xchg
sbb
stos
push
sub
enter
roll
sbb
xor
dec
push
xchg
add
ret
imul
call
les
inc
and
out
pop
loope
rorb
lds
push
dec
dec
jno
popa
dec
jmp
pusha
lock
mov
lods
insl
jecxz
fs
loopne
xchg
fildll
sub
ss
inc
adc
push
mov
out
mov
ss
dec
test
js
xchg
stc
jno
xor
les
insl
cmpsb
inc
mov
xchg
test
imul
cmp
outsb
mov
mov
movsl
and
mov
mov
rcrb
jnp
pop
scas
sub
popa
pop
cltd
dec
mov
push
pop
test
movsl
or
out
icebp
cmpsl
idivb
inc
fcompl
dec
cmc
pop
jo
cs
push
dec
scas
push
add
adc
mov
enter
xchg
je
js
xchg
lret
cmp
pop
sbb
test
ljmp
mov
mov
or
mov
fcmovnb
xor
jne
and
nop
cmpsl
xor
adc
scas
adc
mov
mov
in
jbe
rcrl
aad
or
popa
push
xor
jns
mov
sbb
jl
mov
jbe
xchg
jo
sub
pop
mov
loope
inc
cmp
mov
mov
pop
add
into
jne
mov
call
faddl
jmp
rcrb
xchg
loopne
push
mov
mov
and
pop
mov
jno
mov
dec
mov
int
mov
push
jecxz
mov
xor
xchg
sarl
mov
lahf
xor
cmp
jo
lds
in
sbb
or
xor
mov
lret
mov
cmp
jg
xor
jge
xchg
das
push
adc
push
dec
push
push
bound
sub
aaa
repnz
adc
cwtl
ret
rcrl
in
int3
xor
sbb
fs
bound
jge
cmp
fadds
fisubl
repz
push
mov
shll
mov
inc
sbb
mov
in
add
cmc
push
gs
pop
pop
in
and
mov
or
dec
pop
xor
daa
and
push
lret
push
pop
lods
sbb
inc
jg
movsl
push
xlat
loopne
lahf
loope
push
addr16
ret
sbb
das
insb
shll
pop
jmp
lcall
jbe
data16
xchg
dec
or
adc
inc
inc
add
xor
mov
mov
stos
and
inc
das
cmp
subb
add
lods
popa
adc
ret
roll
leave
sub
ss
or
xchg
and
push
scas
int
loope
in
pop
xor
jb
jl
pusha
mov
pop
fsubrp
arpl
test
scas
sub
into
jbe
cli
mov
popa
cmp
push
and
add
or
rorb
push
inc
outsl
jnp
inc
pop
jg
pop
sar
sub
jo
push
loop
mov
repnz
repz
xchg
push
lods
mov
xchg
aas
sbb
aas
popa
test
mov
sbb
stc
lcall
out
int
xor
cld
or
add
test
xchg
fwait
sarl
pop
jge
inc
pop
add
mov
loopne
les
pushf
add
xchg
push
and
pop
aas
lret
outsb
lret
aas
call
es
adc
fsts
jmp
or
pop
insb
jne
in
mov
sbb
xchg
or
pop
adc
xor
dec
cmpsb
mov
loope
jge
dec
adc
lock
pop
pop
mov
jmp
pop
add
mov
mov
subb
arpl
ficompl
xchg
jo
in
push
push
aam
outsb
and
jmp
push
lcall
sbb
movsb
pop
cmp
fsubp
lret
lret
aad
mov
cmp
mov
pop
jmp
insb
and
fs
ss
ret
push
movsb
orb
xchg
adc
leave
or
add
push
dec
lock
inc
xchg
inc
orb
mov
dec
xor
inc
enter
sub
jnp
sahf
pop
xlat
jnp
dec
dec
push
arpl
dec
add
dec
rcrb
cmpsl
lock
mov
rcl
mov
data16
xlat
push
nop
push
mov
mov
je
or
rcrl
fsubrl
fcmove
mul
outsb
lock
jno
shl
iret
xchg
dec
insl
pop
lcall
mov
adc
cltd
ret
das
repz
adc
sub
push
cmp
cmovs
stos
stos
iret
mov
sub
or
adc
test
mov
push
sbb
repnz
sbb
ret
ret
fcompl
ss
jbe
jle
popf
inc
jge
push
popf
xchg
aam
and
cmpsl
out
out
inc
push
inc
dec
imul
add
shll
mov
ja
add
imul
cli
pop
adc
popa
icebp
pop
in
loop
mov
push
test
mov
outsl
mov
cmp
pop
es
shlb
pushf
push
insl
adc
mov
jo
adcl
scas
mov
cmpsb
cmp
mov
mov
sbb
js
fimull
pop
or
sbb
fwait
clc
jge
pop
arpl
xchg
cs
neg
ljmp
adcb
sbb
jnp
mov
jno
cmp
fwait
xor
shl
dec
and
push
cmp
adc
xlat
or
sbb
jns
ss
push
enter
xchg
mov
popf
clc
pop
das
push
and
mov
lds
jp
jbe
or
mov
xchg
out
sahf
sub
xchg
mov
mulb
lret
insb
inc
js
add
addr16
out
pusha
orb
sbb
ret
imul
les
dec
scas
and
xor
xchg
call
test
push
lds
mov
pusha
mov
scas
xor
fs
cwtl
cmp
outsb
cmp
push
iret
add
enter
xchg
dec
xor
fnstenv
xchg
je
das
push
xor
hlt
mov
insb
fs
sbb
fwait
adc
shlb
lcall
cmpsl
jbe
sahf
adc
insb
addb
lret
and
xlat
iret
inc
adc
mov
repnz
arpl
cmc
sarb
cmp
mov
ficomps
pop
scas
adc
inc
push
xlat
add
xor
lahf
subb
scas
nop
rcrl
sbbb
xchg
in
jp
cld
lock
sbb
jmp
pop
dec
xchg
cmc
outsb
jae
pop
sarb
aaa
pop
bound
fwait
out
fsubrl
dec
and
and
pop
lods
pusha
sub
out
jecxz
adc
xorl
daa
insb
push
push
mov
push
and
fwait
mov
popf
add
jmp
dec
in
add
inc
lret
or
inc
jns
xchg
jle
sbbl
sub
xlat
test
xor
inc
sbb
dec
mov
fs
bound
dec
sbb
stc
mov
mov
inc
leave
jp
dec
sub
cwtl
jns
pop
js
mov
ja
cmp
inc
or
sbbl
pop
mull
loope
cli
adc
mov
imul
push
fdivs
out
pop
out
cmc
sbb
daa
cmp
cmpsl
pop
inc
mov
or
mov
sbbl
stos
scas
sub
mov
cltd
out
or
andl
movsb
push
pop
xor
mov
and
push
in
xchg
jl
xor
idivb
mov
cmp
test
and
add
cmp
mov
push
mov
mov
negl
mov
les
lods
mov
sbbb
cmpsb
sub
xchg
lods
or
inc
aaa
cs
fldenv
xlat
sub
lods
mov
js
shl
fidivl
lahf
ret
into
jns
aad
aad
and
sub
js
xchg
stos
add
cmp
jmp
mov
pop
push
xchg
mov
dec
mov
test
mov
inc
sub
xchg
xor
cs
mov
add
xor
jmp
insl
or
subl
cmp
push
sub
push
cwtl
mov
addb
xor
sub
sub
xchg
dec
adc
xchg
and
pusha
imul
in
out
call
xchg
scas
out
mov
jb
xor
lods
mov
pop
sub
xchg
cld
jecxz
pop
jge
sbb
jae
out
mov
outsb
movsl
jno
add
das
cmp
out
add
jb
push
clc
test
addr16
mov
stos
adc
in
rorb
lock
es
sub
sub
dec
sbb
add
testb
mov
cli
add
adc
iret
cmp
push
mov
test
adc
mov
push
jb
dec
fistl
push
out
dec
sarb
xor
push
jno
or
adc
scas
and
mov
inc
cmc
or
add
cmp
es
cld
loop
add
stos
and
inc
loopne
xchg
push
pop
mov
add
icebp
leave
negl
xchg
lock
sbbb
jae
lret
push
inc
test
adc
push
xchg
xor
mov
outsb
and
shlb
cmp
ljmp
outsl
cli
fists
cmp
mov
sub
or
lret
push
icebp
or
xlat
and
lret
jno
addl
pop
outsb
and
fisttpl
pop
xor
shl
xchg
stc
mov
and
sub
jmp
or
xor
stc
pop
faddp
imul
and
jnp
cli
mov
cs
ljmp
popf
or
icebp
iret
aam
sbb
sahf
lcall
mov
dec
sbb
dec
push
inc
loope
mov
push
cld
sbb
testb
mov
pop
fwait
dec
fisubrs
daa
aas
mov
ljmp
in
pop
cltd
cmpsl
mov
fnstenv
lcallw
cmp
add
sbb
or
push
cmp
orb
or
jno
lret
mov
adc
lahf
sub
pop
add
fldl
test
insb
cmp
add
mov
xor
es
pop
enter
lret
mov
imulb
sbb
out
add
cmp
or
add
inc
dec
lods
mov
outsl
pop
jno
and
insb
fistps
lea
aam
ljmp
jno
into
pop
jp
shll
mov
repz
inc
pop
dec
push
xchg
mov
je
inc
test
dec
lcall
aad
fwait
sarl
test
je
add
add
mov
data16
cwtl
aad
sub
dec
xorb
das
pop
fwait
sub
fs
outsl
dec
xor
clc
adc
cs
movsl
insb
loop
std
jb
popa
pop
mov
cmp
arpl
shlb
lods
lea
aaa
sbb
pop
shrl
jle
les
jb
dec
sbb
les
and
or
xchg
movsb
ljmp
mov
mov
bound
mov
fs
push
dec
xlat
dec
push
sub
mov
das
adc
insl
cmp
sbb
add
sbb
push
gs
shll
repz
cli
xchg
sbb
sbb
insb
es
push
mov
jp
je
jo
push
inc
sbb
jns
sub
push
loopne,pn
xor
and
fcomps
mov
shrb
xchg
outsl
mov
out
push
or
adc
rclb
push
loopne
fsts
and
pop
test
outsl
sbb
sub
std
adc
mov
ficoms
mov
sbb
nop
sub
lea
dec
test
cld
pop
adc
and
jno
xorb
jns
aas
insb
add
aaa
out
hlt
mov
xor
cli
loop
and
jp
mov
cmp
pop
clts
loopne
and
fistps
add
cmp
leave
out
sbb
shr
or
sahf
add
sarl
pop
pop
jge
xchg
inc
mov
in
jb
add
xchg
add
insb
push
out
leave
lahf
add
inc
out
ret
sub
mov
mov
or
add
je
cmc
mul
ja
das
fs
inc
call
test
in
mov
out
out
xchg
je
or
pop
aaa
mov
mov
rorb
inc
xor
mov
aas
test
outsb
ds
int3
jmp
inc
pop
add
mov
xchg
sub
pop
leave
sub
popf
into
add
arpl
pop
jns
sub
inc
in
ret
xor
outsl
mov
push
xchg
mov
andl
jmp
inc
pop
ljmp
mov
fmul
pop
fildll
data16
jbe
ret
jne
push
lea
dec
adc
cmpsl
and
lret
and
or
subb
push
sub
cmp
jl
add
cld
fildl
mov
insl
mov
adc
dec
arpl
push
mov
or
insl
ja
lods
push
cmpsl
xor
test
pop
mov
in
lods
pop
inc
bound
inc
call
mull
push
mov
push
add
push
addl
mov
ret
xchg
mov
push
xor
popf
stos
push
push
xchg
dec
inc
flds
es
add
cmpsl
daa
sbb
pop
flds
push
imul
out
lods
pushl
xor
lods
pop
shrl
fwait
adc
or
fldl
or
int3
clc
js
adc
xor
fucom
es
stos
stos
jne
sahf
sbb
mov
sub
cmp
jae
movsl
stos
imul
imul
movsb
sbb
call
fistpll
dec
mov
push
dec
hlt
mov
sub
fisttpll
test
inc
xor
xchg
lcall
insl
icebp
ds
jns
lods
xchg
fs
and
or
lret
mov
pop
rorb
dec
sarb
and
sti
xor
xor
mov
xor
mov
ficoml
add
cmpsb
addr16
repnz
lcall
mov
xor
lret
ja
in
jl
fcomps
mov
mov
xchg
sbb
jnp
sub
mov
or
push
ret
imul
out
mov
lds
addr16
out
xchg
mov
adc
inc
lock
mov
sbb
sub
cld
dec
bound
data16
lret
imul
scas
xor
add
data16
insb
mov
push
insb
test
sub
sbb
in
rcrl
mov
and
mov
pushf
add
outsl
clc
pop
sub
movsb
xchg
daa
and
bound
inc
adc
mov
mov
sub
cld
xchg
je
xchg
fnstenv
and
out
es
and
jge
inc
loop
cli
push
ret
and
and
ficoml
lock
mov
inc
pop
pop
ljmp
lods
out
jnp
pop
outsb
sti
cwtl
sub
and
adc
push
xchg
push
xor
loopne
stc
iret
cmp
cmp
jbe
push
jg
mov
cmpsl
pusha
cmp
xor
add
pop
xor
cltd
xor
ljmp
sub
call
popf
ja
int3
push
outsb
pushf
adc
inc
mov
or
push
pop
frstor
dec
xor
push
push
add
mov
and
das
fwait
in
arpl
sbb
jae
fsubl
repz
adc
inc
lahf
fildl
loop
fidivs
jge
jns
aam
outsl
add
xor
adc
dec
insl
xor
cmpsl
cmpsb
jo
into
cs
ljmp
jb
push
pop
mov
shrb
fs
jge
mov
mov
and
push
loope
rclb
cmp
rcl
xchg
inc
jle
mov
insb
push
ficoms
add
push
adc
or
std
mov
jle
push
icebp
js
out
ffree
pop
jmp
lods
std
cmp
and
mov
ret
and
cmp
or
test
sub
add
jg
xchg
xchg
movsl
dec
xor
lods
loop
hlt
fmul
lods
gs
sbb
mov
add
out
sar
enter
or
xchg
dec
mov
fsubp
rorb
xchg
popf
fsubs
inc
xchg
pop
pop
push
dec
jae
cmp
dec
stc
lret
sub
dec
imull
cmp
adcb
movsl
jnp
bound
imul
aad
scas
jae
mov
out
inc
cpuid
mov
push
mov
iret
test
shlb
jbe
push
xor
into
jo
clc
mov
aam
adc
lahf
xchg
xor
and
std
cmp
mov
push
add
xlat
out
jge
jp
add
xchg
jb
xor
imul
loope
out
adc
dec
loope
les
leave
pop
xchg
push
outsl
ja
push
mov
idivl
adc
push
jle
add
std
fisttpl
xor
xor
add
mov
fwait
in
stos
adc
out
adc
sbb
or
xor
xchg
mov
mov
xchg
pop
cs
mov
scas
cs
sub
jmp
shll
aas
sub
xchg
add
dec
mov
das
testl
xchg
inc
fidivrl
insb
mov
add
and
add
mov
mov
or
mov
fldt
push
stos
je
jb
ss
hlt
mov
xlat
and
fidivs
mov
push
sti
mov
fisubrl
shld
and
fldt
outsb
push
mov
dec
stc
aaa
aaa
cwtl
add
add
mov
mov
sub
loop
cmpsl
push
enter
stos
jne
or
aad
jl
lock
inc
jecxz
or
pop
pushf
imulb
cltd
add
sub
sbb
repz
out
or
jno
movsl
jle
std
and
ds
and
cmp
mov
xchg
pop
mov
sbb
test
pop
pop
or
sbb
jb
pop
imul
lods
sbb
and
test
je
andl
addr16
cmpsb
mov
cli
mov
cmp
add
pushl
aas
mov
dec
hlt
adc
out
jns
push
nop
loopne
cmp
jmp
dec
add
mov
fnstcw
or
imul
inc
cld
and
shr
je
sbb
insl
iret
rcll
jmp
adc
cmp
mov
and
jns
mov
fcompl
pop
outsl
subb
aad
jg
xchg
fwait
arpl
mov
mov
push
jnp
pop
outsl
push
dec
mov
das
lea
xchg
sub
jo
jo
mov
test
jbe
aam
sbb
aam
jae
and
sbb
rcrb
push
rcrb
jo
setg
scas
sbb
xor
adc
and
cmpsl
jne
enter
scas
lock
pop
dec
not
and
test
loop
mov
cmp
add
imul
ret
test
int
cmpb
adc
push
and
fildll
mov
repnz
sbb
outsl
fsubrs
jg
jae
stos
or
test
jno
int3
stos
push
add
fiaddl
and
dec
ja
test
lds
cmp
imul
mov
repz
push
arpl
ror
dec
in
in
loop
rcrl
inc
pop
dec
mov
mov
mov
jp
pusha
sub
cmp
push
jno
mov
ror
xchg
and
movsb
push
pop
mov
stos
add
inc
pop
mov
sub
test
loop
sbb
dec
test
jp
loope
aas
addr16
inc
sub
push
push
repnz
jnp
xor
pop
jnp
pusha
cmp
mov
loope
xor
inc
cmc
pop
add
sbb
dec
sub
out
xchg
movsb
mov
aad
insb
pushf
repnz
lock
jo
shlb
daa
cmpsl
imul
inc
cltd
adc
stc
mov
sbb
les
jmp
sbb
sub
dec
data16
shrl
cmp
mov
mov
arpl
inc
mov
mov
mov
ficoml
cld
add
es
sbb
aam
cmp
inc
ds
es
mov
outsl
aam
pop
call
or
pop
mov
cs
jle
add
cmp
push
pop
inc
repz
xor
lods
xchg
gs
dec
aas
xor
mov
add
mov
pop
sti
jae
nop
repnz
mov
jae
add
or
icebp
and
insb
jg
daa
jns
ret
out
pop
and
mov
push
sbb
mov
in
xchg
gs
xor
lea
sub
es
je
andl
add
cmpsl
mov
push
fcmovnu
stos
sub
mov
daa
add
ss
sbb
jbe
loope
std
adc
test
mov
pusha
hlt
mov
stc
sti
shrl
push
jecxz
mov
ljmp
adc
or
inc
cmp
mov
clc
into
xchg
dec
ret
mulps
jo
aad
pop
inc
test
xchg
cmc
xor
adc
inc
push
jne
fs
jge
jnp
ljmp
jge
cli
in
add
rorb
xlat
pop
mov
mov
dec
sbb
outsl
mov
pop
sahf
dec
adc
mov
fcoms
iret
mov
das
aam
inc
mov
lods
enter
out
jo
mov
xchg
or
mov
ljmp
jp
pop
inc
mov
sbb
out
imul
cmp
repnz
mov
aas
cmpsl
xor
xlat
mov
stc
mov
xchg
test
dec
or
inc
mov
pop
and
test
jg
mov
mov
sbb
out
mov
add
test
mov
and
ss
test
jle
xchg
inc
mov
jmp
arpl
mov
push
push
cmp
sub
pop
stc
lods
pop
cmp
jle
xor
dec
add
dec
mov
or
jg
pusha
xchg
test
cmpsb
dec
fistpl
sar
inc
data16
adc
adc
in
sbb
pop
pop
sub
iret
cld
xor
jb
dec
xchg
loop
cmp
aas
lcall
mov
jno
adc
jecxz
lcall
int3
or
xchg
pop
sub
jns
and
mov
sub
mov
cmpsb
sub
mov
stc
mov
xor
jmp
dec
out
jno
call
mov
enter
jnp
lods
xchg
cld
scas
shrb
int3
stos
out
adc
lret
mov
pushf
cmp
rcl
push
cltd
fcomps
out
mov
fsubrp
mov
and
and
mov
xchg
nop
movsb
xchg
outsb
and
cmp
decb
push
lds
fimull
mov
ja
icebp
orb
xchg
mov
ret
adc
cmpb
out
jns
pop
or
mov
ja
adc
out
aad
call
cmp
mov
push
mov
fldcw
mov
pop
xchg
fsub
cmpsl
rorb
nop
aaa
lds
inc
ljmp
int3
or
clc
dec
xchg
mov
shrl
pop
lock
aam
loop
mov
pop
push
jecxz,pn
push
xor
sbb
clc
pop
pop
sbb
mov
push
push
in
mov
sar
stos
aad
xchg
arpl
scas
push
sub
xor
test
out
add
dec
js
ljmp
mov
mov
ds
outsl
mov
sub
jns
add
push
sbb
or
aas
mov
mov
mov
lods
cmpsb
lea
push
mov
jnp
add
dec
mov
leave
in
test
test
xchg
ljmp
addr16
sahf
jecxz
outsl
jge
es
loope
lods
fwait
sahf
jne
das
push
imul
sub
mov
aas
std
das
aam
mov
fs
mov
outsl
stos
lret
inc
jecxz
adc
imulb
repz
mov
cmpsb
adc
xchg
jmp
xor
in
mov
lret
xor
fsubr
adc
push
mull
arpl
or
pop
sub
rorb
lret
stos
xchg
ds
insl
aam
outsb
cmp
cltd
push
gs
xlat
cmp
andl
iret
add
lds
lock
xchg
mov
js
les
mov
xor
addl
andl
repnz
dec
push
mov
insb
call
inc
enter
mov
xchg
mov
pop
ret
mov
xchg
aam
out
cmc
stc
mov
addr16
xor
stc
ret
jle
mov
das
xchg
xchg
inc
jne
add
pop
mov
lret
pminsw
int
pop
pop
test
mov
lret
dec
sub
mov
insb
cmc
testl
rorb
and
popa
gs
in
fwait
lods
mov
ss
xlat
ja
mov
pop
mov
mov
mov
cmp
ds
insb
push
pop
mov
stos
or
xor
xor
pop
iret
mov
ds
or
or
fisubrl
fwait
jb
jbe
and
jo
xchg
mov
cltd
sbb
dec
test
dec
into
cli
xchg
jmp
or
fsubrl
lcall
mov
divb
stc
in
adc
sub
xor
and
pop
dec
sub
push
outsb
pop
icebp
fimuls
mov
jo
dec
push
ret
xor
repnz
inc
xchg
adcb
push
or
lea
mov
xchg
inc
rcll
xor
ficoms
ljmp
mov
test
fidivs
ret
sbbl
pushf
cmp
or
push
jne
mov
mov
mov
iret
push
cmp
pop
xor
int3
push
aad
push
dec
or
dec
sub
fwait
mov
fwait
pop
jne
dec
add
cmpsl
adc
outsl
int
dec
mov
push
and
push
bound
sbb
call
jmp
popa
test
add
mov
or
ret
adc
and
ljmp
pop
push
stos
mov
mov
cmp
push
outsb
mov
dec
test
push
mov
enter
sbb
xchg
cmp
in
adc
dec
inc
lods
mov
add
inc
inc
mov
shl
and
shl
out
inc
jg
scas
daa
icebp
mov
mov
imul
iret
jmp
add
stos
sub
inc
mov
decl
add
mov
inc
mov
mov
lea
mov
cmpl
adc
lahf
sub
xchg
xor
mov
and
dec
xchg
pop
js
and
adc
xor
xchg
test
add
mov
xlat
arpl
divb
repz
subl
bound
fstp
dec
repnz
jmp
add
add
or
or
fisubs
lods
mov
nop/reserved
aas
lcall
and
ret
sbb
lret
out
arpl
mov
cwtl
inc
sub
out
lods
sub
dec
adc
xor
dec
jmp
xchg
add
fistpll
xchg
add
adc
pop
arpl
icebp
mov
add
add
and
mov
dec
mov
nop
xchg
xor
mov
or
jp
xchg
ja
test
push
shl
lock
or
ja
mov
mov
pop
sbb
pop
fistpl
sub
mov
jne
adc
lahf
and
cld
je
hlt
lahf
test
les
insl
loop
jecxz
mov
fcoms
mov
cmp
loopne
data16
insl
pop
mov
jno
mov
addr16
and
lea
cmp
adc
test
insb
shll
imull
mov
inc
push
cmp
mov
aas
push
sub
daa
or
shrb
jns
fldt
dec
or
ss
lea
cmp
outsb
push
loop
cwtl
sub
jg
pop
imul
pusha
and
adc
pop
mov
adc
xchg
mov
testl
add
lea
pop
pop
xchg
dec
sub
mov
in
or
sub
mov
pop
mov
and
and
sub
clts
ja
xor
xchg
insb
inc
and
mov
out
xchg
xchg
rorl
jmp
xchg
xor
call
std
sub
jl
pushf
mov
iret
xchg
pop
repnz
scas
dec
fisubrs
or
sbbb
lahf
mov
push
xor
inc
mov
cmp
pop
mov
clc
mov
adc
out
sbb
stc
ret
filds
sub
xchg
cld
jne
and
pop
mov
aam
lret
jg
jmp
dec
pop
mov
loop
adc
push
hlt
enter
pop
lea
cmp
adc
mov
mov
push
iret
push
fcmovnb
xchg
pop
cmp
xchg
fidivrs
inc
push
imul
mov
leave
imul
push
es
dec
push
add
fmul
adc
push
imul
jmp
in
cmp
xchg
cmpsl
es
dec
test
in
xchg
mov
fst
fs
mov
inc
inc
dec
loop
mov
mov
fiaddl
pop
js
shlb
and
sbb
jb
sub
icebp
int
lods
or
popf
pop
jbe
js
xchg
pushf
incb
iret
mov
xchg
test
jg
pcmpeqw
adc
mov
sbb
mov
test
int3
scas
push
sub
movsl
adc
das
pop
sub
into
jae
fisttpl
dec
mov
jg
dec
inc
xchg
jg
or
rolb
sbb
xchg
pop
mov
sbb
loopne
or
mov
clc
ret
roll
in
outsl
std
fcmovnb
mov
mov
add
cmp
dec
jmp
add
int3
pop
sub
xchg
or
scas
push
out
jecxz
aas
adc
rclb
adc
push
push
nop
lahf
sub
movsl
sahf
inc
nop
out
loopne
je
movsb
aaa
cli
lods
or
pop
pop
sbb
js
jbe
dec
xchg
rcll
mov
or
sbb
stc
dec
push
std
jl
mov
mov
and
and
lcall
lahf
xor
out
mov
cmc
adc
das
fldl
inc
add
dec
mov
inc
sub
inc
lods
push
inc
movsl
ds
rorl
ljmp
and
out
aam
jmp
test
icebp
xor
addr16
repnz
fldenv
and
cmpb
std
xor
mov
int
push
scas
stos
sub
test
inc
inc
jae
fdivrs
aad
call
shrb
in
push
bound
add
pop
fbstp
int3
rcr
sbb
aad
aaa
loop
sbb
sbb
dec
fsts
ds
rorb
fisubrl
add
in
test
rcl
jb
jb
stos
inc
and
out
int3
insl
or
cmpsl
out
and
pop
sub
xchg
jg
decl
sbb
fsubrl
scas
cmp
mov
icebp
lcall
popf
lods
loopne
out
push
cmp
cmpsb
pop
es
push
cmpsb
cld
out
fisubrl
or
mov
hlt
test
inc
jno
dec
rorl
pop
jge
mov
subb
mov
icebp
insl
test
jmp
push
push
push
stos
test
ja
mov
imul
dec
fs
jb
mov
aaa
aas
fs
mov
mov
add
sbb
add
rol
nop
xorl
incb
jno
cmc
bound
push
in
push
outsl
sahf
js
xor
test
jmp
adc
push
sub
cmp
in
pushf
jmp
je
jge
mov
mov
mov
and
sti
adc
xchg
int3
popa
push
push
aad
movsb
cwtl
movsb
in
jnp
inc
cmp
sbb
push
or
mov
mov
mov
cmc
popa
mov
dec
push
mov
lds
bound
imul
idivb
notl
or
pop
in
fwait
repnz
mov
mov
xchg
mov
lock
int
dec
cmp
test
cmp
xor
rcl
movsl
cli
int
out
shll
test
icebp
in
orw
call
rcrl
cmpsb
in
push
adc
addr16
add
nop
or
xor
stc
push
sarl
movsl
shl
arpl
mov
mov
shll
mov
cmp
orl
dec
daa
inc
je
jge
dec
ds
sbb
aaa
fwait
movsl
dec
xchg
sbb
addr16
iret
mov
addr16
sbb
jb
adc
test
jno
icebp
loop
bound
mov
out
es
cltd
dec
add
les
dec
cmp
push
sub
imul
call
pop
sub
cmpsb
cmpsl
add
cmp
mov
mov
popf
orb
filds
popf
pop
hlt
into
rcl
cmc
push
insb
xor
int3
and
in
xchg
into
or
lret
scas
adc
xor
sbb
shr
movsl
xor
cmp
cmp
xor
fnstenv
out
jecxz
cmp
pop
out
cs
into
xchg
xorl
je
sbb
into
xchg
adc
flds
mov
lds
push
lcall
sar
clc
adc
sub
inc
push
jle
push
dec
clc
and
sbb
add
in
ss
cmp
push
into
pop
cmp
or
or
iret
cmpl
les
ffree
push
xor
out
xchg
cld
lret
mov
adc
xorb
mov
in
jg
fsts
and
push
xchg
jo
mov
push
sahf
ret
sbb
arpl
mov
or
push
xchg
lret
ljmp
aas
add
xchg
aas
cmp
test
aas
or
jmp
imul
adc
clc
fwait
das
push
call
ds
push
mov
test
movsbl
fcom
lahf
sub
cmpsl
mov
jne
hlt
call
out
add
mov
scas
jecxz
and
out
xchg
sub
push
mov
dec
loop
pop
shrl
mov
lea
clc
mov
mov
insl
jecxz
fsts
loop
std
push
loopne
sbb
pusha
pusha
daa
inc
mov
xorb
and
fstpt
shrb
mov
lcall
loop
add
in
jle
aas
data16
stc
push
cmp
xor
dec
imul
cwtl
jne
mov
sub
push
and
lret
dec
addb
and
and
pop
daa
mov
add
xchg
mov
imul
cmp
out
je
cltd
cmp
xchg
lahf
repz
movsl
pop
scas
fistps
cwtl
and
push
xor
push
xchg
outsb
sub
in
cmp
adc
mov
mov
jo
add
adc
sub
outsl
xchg
mov
xlat
shl
lea
dec
testl
das
iret
jnp
xchg
xor
adc
inc
int
dec
out
sbb
in
mov
icebp
test
adc
es
call
mov
shll
pop
gs
jns
push
mov
xchg
mov
cmp
xor
sbb
bound
xor
cld
jae
push
xchg
push
fstl
inc
loopne
dec
cli
dec
sub
cmp
popa
in
aaa
fwait
or
jle
pop
sub
outsl
push
fisttps
dec
fwait
lea
roll
sub
jmp
cmp
insl
and
out
or
pop
add
test
inc
int3
sti
pop
lock
mov
arpl
aad
scas
xor
push
in
imul
fiadds
stos
loopne
jecxz
fistl
sub
test
in
cmp
mov
ss
sub
aas
sbb
pop
lds
in
lfs
in
arpl
nop
cmc
xchg
pushl
dec
filds
or
add
xchg
pop
aas
out
sbb
mov
pusha
mov
stos
andb
sbb
test
out
or
cltd
incb
inc
std
xchg
loopne
push
or
fsubs
int
movsb
xchg
out
jecxz
cli
mov
stc
push
add
pop
push
stos
inc
sub
clc
xchg
fxch
sbb
leave
in
aam
stos
mov
pop
jno
cmc
ljmp
jg
roll
test
mov
push
mov
xor
fistl
into
add
dec
into
add
les
stc
stos
push
adc
shll
add
sbb
xchg
insb
outsb
jp
xor
loopne
adc
fcmovnbe
jge
lret
add
adc
push
push
cmp
jbe
mov
mov
ljmp
adc
int3
or
je
cmp
cmc
lret
jmp
das
xlat
or
add
aam
and
jmp
xor
cmp
push
xor
push
mov
dec
xor
enter
pop
xchg
mov
lods
or
fldcw
inc
mov
out
test
pop
call
clc
fwait
pop
add
xor
jno
jno
mov
fcompl
mov
jmp
adc
arpl
sub
stc
xorl
mov
insb
loope
cmp
ret
xchg
dec
jo
sub
shrb
pop
insl
divl
dec
cmpsb
lds
loopne
shrl
in
pushf
outsl
fsubrl
sub
sahf
jmp
jle
jno
pop
fmulp
jle
dec
jmp
or
inc
fdiv
add
jecxz
add
test
pushf
sbb
nop
pop
cmp
sub
mov
test
ret
in
cs
sub
jae
or
popf
pushl
xchg
inc
popf
fdivs
push
jl
mov
or
pusha
sbb
sub
popf
jno
sub
mov
out
mov
jge
mov
and
add
xor
mov
arpl
mov
addr16
leave
scas
out
mov
jmp
mov
mov
daa
mov
push
push
lea
push
call
or
xchg
shlb
push
jmp
push
pop
xor
lcall
or
cmpsb
adc
adc
adc
or
aad
repnz
lret
iret
je
cmc
arpl
push
jae
lahf
enter
arpl
jp
mov
jbe
jae
lea
push
rorl
pop
aas
jp
jge
xchg
es
add
stos
push
out
pop
aaa
pop
mov
xlat
jb
adc
xor
cmpl
or
adc
ss
and
inc
sub
sub
icebp
inc
xchg
mov
cld
mov
fs
xchg
jl
int
in
mov
inc
das
and
loop
adc
inc
lret
arpl
movsl
push
rcl
je
mov
cmp
add
jecxz
out
inc
out
push
push
mov
mov
cmpsl
lock
adcl
inc
dec
sub
cwtl
imul
push
jge
iret
scas
adc
lret
cmpsb
call
in
lahf
pop
mov
mov
and
push
divl
imul
ljmp
adc
add
lret
mov
int3
bound
xchg
pop
jge
rcl
std
mov
clc
mov
cli
bound
and
xchg
lret
inc
mov
je
loope
ljmp
push
sbb
cmp
bound
psubsw
es
sarb
das
rclb
xor
inc
bound
aam
mov
pop
movsb
test
mov
inc
push
mov
add
mov
xchg
push
inc
lahf
xchg
inc
decb
adc
fwait
ja
cli
adc
jp
cmp
dec
cmc
into
xor
mov
icebp
lcall
add
int3
loope
or
cmc
cmp
lods
int
fisttpl
xor
inc
cwtl
ljmp
xchg
xor
push
cmpsb
subb
out
pop
popf
sbb
inc
ss
add
aas
xchg
jnp
mov
inc
inc
addr16
ret
xchg
inc
push
out
ret
inc
mov
repz
fidivrl
out
push
fsubs
jecxz
push
cld
orl
mov
cld
stc
adc
das
es
stos
add
rclb
pop
dec
push
pop
test
inc
add
pop
pop
adc
jle
sbb
cld
dec
mov
push
and
stos
mov
dec
pop
addr16
rolb
inc
js
adc
mov
jns
mov
cld
cmp
push
mov
insl
cmc
fistpl
or
lods
lock
jb
push
jne
into
aas
jp
mov
jge
in
pop
stc
adc
push
repz
xchg
jbe,pt
dec
pop
pop
ljmp
mov
in
orl
in
sahf
repz
push
mov
pop
mov
push
es
adc
lret
aad
rolb
adc
dec
adc
ss
movsl
inc
lods
and
add
mov
mov
sub
insb
xchg
jnp
test
pop
add
adc
mov
scas
push
scas
hlt
cmp
rcl
cmp
loopne
xchg
arpl
popa
insl
dec
add
into
rol
out
xor
or
sub
xor
push
pop
testl
bts
fnsave
dec
push
clc
cmc
or
jbe
movsb
lret
arpl
mov
or
pop
cmp
mov
insb
push
mov
sbb
inc
mov
dec
fstl
hlt
inc
mov
add
xchg
imul
pop
es
je
mov
adc
pusha
mov
push
ds
add
out
cmp
pop
mov
ds
add
mov
mulb
lahf
shll
fucom
je
cmpsl
lods
das
mov
leave
inc
add
fs
in
gs
dec
or
inc
pop
pop
bound
dec
cmp
add
stc
fcoms
pop
cmpsb
out
mov
mov
dec
jns
sar
or
pop
arpl
pop
insb
push
pop
scas
into
imul
sti
or
mov
repnz
cltd
sbb
mov
push
dec
sahf
pop
stos
or
adc
arpl
cmpsl
and
push
adc
pop
add
mov
jnp
push
push
inc
inc
inc
push
loopne
bound
mov
jne
add
or
idiv
mov
nop
icebp
adc
jnp
pop
sti
shlb
loope
dec
hlt
repz
stos
push
lret
stos
clc
cmpsb
pop
mov
cs
fs
adc
inc
push
add
int
sub
add
paddq
sarb
test
sub
add
out
ljmp
je,pt
imulb
mov
xchg
cmp
mov
and
pop
jae
xchg
insl
push
push
in
out
clc
data16
mov
cmpsb
mov
jmp
fisttpl
movsbl
push
lock
lahf
arpl
sti
lret
jg
cld
leave
push
insl
sbb
out
stc
mov
mov
inc
les
mov
adc
dec
xchg
xchg
enter
mov
mov
xor
shl
add
add
or
fs
je
sub
nop
into
mov
popl
ljmp
into
jnp
and
push
loop
sub
shr
mov
fisubrs
jb
xchg
ret
mov
sti
fiaddl
ss
cmpsb
imul
insl
inc
ljmp
xchg
mov
mov
cmp
daa
mov
adc
add
lahf
cltd
arpl
mov
roll
gs
movsl
in
pop
dec
cs
adc
xchg
dec
mov
test
mov
movsl
hlt
jbe
les
inc
push
xor
flds
add
ss
setle
data16
mul
rcrl
sarb
out
push
mov
push
int
pop
cmp
daa
jno
and
test
loop
bound
fildll
in
out
ljmp
lret
jb
ljmp
mov
sbb
psubd
movswl
sbb
ja
dec
push
rcrb
jb
xchg
cmc
adc
std
stc
sbb
jbe
test
jmp
inc
leave
mov
fmull
insb
dec
cwtl
cmc
mov
mov
mov
cmpsb
jnp
inc
add
lahf
xchg
jle
test
nop
jecxz
out
sbb
arpl
dec
testb
jg
pop
scas
jmp
and
out
and
jne
adc
push
add
mov
fdiv
lea
shufps
add
scas
cwtl
int3
outsl
mov
inc
jns
adcb
inc
mov
ret
jle
bound
mov
mov
jl
mov
push
or
xchg
push
mov
adc
mov
and
jp
jne
cmpsb
in
out
xchg
hlt
loope
movsb
adc
jo
sbbl
xor
add
add
pop
scas
nop
mov
push
pop
mov
andb
and
lret
lret
and
jb
out
pop
lods
cmp
lcall
fidivrl
mov
divb
int
sbb
in
aaa
mov
stos
sub
cmp
imul
mov
push
scas
ljmp
inc
jo
jg
das
and
cmp
scas
loope
sbb
xor
inc
pop
jl
imul
out
mov
pop
lods
ret
repz
orb
popf
adcb
test
out
jle
sub
clc
or
ja
dec
cmp
imul
fs
sbb
call
divl
pop
sbb
loope
adc
shrb
pop
push
repz
cs
mov
bound
out
sbb
push
iret
xor
ficoms
jbe
or
stos
ljmp
jle
pop
pop
adc
mov
add
sbb
xchg
out
jp
fwait
imul
je
rolb
jns
int3
cli
add
add
das
mov
fstl
test
xchg
in
loop
xchg
adc
movsb
cli
clc
jle
insl
lock
insl
mov
bound
xchg
push
sbb
xor
push
cltd
add
sbb
ficompl
out
cmp
mov
jecxz
jle
dec
adc
mulb
insl
and
mov
adc
dec
icebp
inc
lds
js
xorb
fwait
xor
dec
jmp
xchg
fdivs
xchg
push
fldl
stos
cmc
icebp
xor
push
pop
or
add
mov
pop
dec
js,pt
in
push
xor
aaa
shll
repz
out
shl
mov
pushf
fsubl
sub
cmp
jg
sub
pusha
mov
ret
fidivrs
ret
in
jne
mov
sub
shll
jbe
cmp
mov
ljmp
aad
sahf
jl
fs
push
shll
xchg
shrb
xchg
mov
push
pop
mov
movsl
dec
mov
cwtl
push
sbb
mov
dec
rorl
faddp
ret
cmp
cmc
adc
xchg
or
test
loop
xchg
out
lods
lea
mov
dec
idivb
mov
repnz
push
sub
mov
jp
xor
les
mov
iret
adc
insl
or
mov
adc
loopne
cmp
mov
jmp
daa
sub
mov
fs
push
sbb
and
ret
out
gs
je
pop
lods
inc
lret
sbb
aaa
dec
mov
push
xchg
repz
das
sahf
push
in
mov
loopne
and
imul
repnz
mov
mov
mov
push
pop
push
push
jae
sub
pop
push
mov
outsb
out
cmp
mov
push
testl
ss
push
aaa
sub
mov
fistpl
std
mov
stos
mov
scas
push
test
aad
xchg
mov
dec
insl
fadd
lods
orl
test
imul
movsl
mov
or
insl
test
stos
mov
mov
lahf
sbbb
bswap
push
std
jns
lds
add
fiadds
xchg
pop
jmp
add
and
and
inc
sbb
sub
add
or
std
mov
aas
clc
jp
js
xor
pop
incb
jg
dec
pop
sarl
mov
int3
mov
push
push
out
out
out
loopne
ja
push
sbb
cmp
fstpl
push
push
repnz
push
jb
leave
push
sub
push
pop
js
cmpsl
fcmovbe
push
sub
movsb
xor
and
lock
mov
ret
adc
cmp
movsb
mov
inc
arpl
clc
push
adc
stc
aas
pop
mov
sub
fbld
push
leave
mov
cmp
and
lcall
jbe
std
xchg
dec
mov
cmc
fwait
sub
mov
pop
mov
shl
ja
sub
mov
sarl
cmp
fnstsw
jl
push
jae
mov
xchg
stos
jge
lcall
out
pop
or
add
outsb
inc
xchg
lret
push
sub
in
jae
sub
jne
mov
push
out
lret
rclb
int
dec
enter
dec
pop
mov
dec
adcb
jns
mov
fcmovnb
out
movsb
mov
sbb
lea
mov
vunpckhps
fcomp
shrb
push
mov
mov
and
pop
xlat
inc
sahf
sbb
fcoms
ds
ret
aas
outsl
imul
push
lock
stos
dec
or
mov
aam
xlat
clc
in
filds
cmpsb
shl
enter
push
dec
aaa
adc
stos
insb
dec
xchg
lret
jge
sti
and
inc
dec
pusha
pop
cwtl
ds
in
mov
cmpb
stc
push
and
adc
push
test
ficoml
int
and
int3
push
in
arpl
clc
jnp
adc
dec
nop
leave
xchg
xchg
or
out
dec
xor
popa
mov
mov
fs
scas
inc
pop
aaa
sar
jbe
clc
and
stc
xor
sub
sbb
dec
mov
mov
cmp
sti
mov
enter
jmp
dec
inc
mov
enter
push
in
js
xor
or
int3
mov
cmp
fbld
pop
push
adc
int
add
cmp
mov
insb
xchg
cmp
jl
pop
aaa
jbe
outsl
arpl
cld
adc
dec
jbe
imul
mov
jmp
sbb
mov
cmp
jbe
dec
cmp
sahf
cli
or
and
cs
cmpsl
sbb
in
sub
aam
sbb
bound
mov
xorl
inc
or
sbb
leave
fisubs
add
cmp
jno,pn
jge
add
stos
push
sbb
mov
inc
shr
lea
cmpsb
jmp
aaa
in
iret
adcl
jno
cs
mov
mov
or
or
sbb
dec
cwtl
xchg
cmp
daa
outsb
fwait
fwait
add
mov
jns
fwait
mov
mov
pop
jae
lods
pop
out
loopne
push
mov
inc
adc
std
mov
sub
xlat
pop
mov
adc
loope
loope
aas
les
icebp
pop
cmpsb
daa
in
shlb
daa
repnz
fistps
ja
mov
lcall
clc
pop
and
pop
aam
hlt
stos
lret
in
jp
mov
lea
mov
pop
ds
cvtps2pd
testl
push
sti
or
imul
mov
aaa
pop
imul
cmpb
jno
mov
xchg
insb
xor
clc
notb
mov
dec
adc
aam
testl
add
xchg
cmp
xchg
inc
sub
pop
cmp
push
int3
divl
xchg
sahf
inc
roll
pop
push
jbe
sub
mov
mov
int3
sbb
xor
das
push
pop
icebp
dec
mov
aad
xchg
and
adc
jp
outsb
push
repz
mov
dec
popa
std
js
stc
rorl
cmp
xor
call
inc
cmpsb
outsb
in
pop
mov
aaa
test
sub
jecxz
aaa
dec
or
or
add
pusha
inc
outsb
xchg
add
jb
pop
out
or
lods
xchg
fldt
movsl
cs
test
rcrl
sbb
sbb
imul
dec
ja
and
cmp
xchg
xchg
mov
mov
cwtl
inc
jo
pop
mov
and
ret
push
xor
pextrw
das
insl
out
sahf
add
cmp
push
loope
in
xor
xor
pop
dec
cld
inc
push
icebp
xor
sbb
cmpsb
mov
popf
movsb
xchg
mov
xchg
cmc
sub
mov
mov
dec
push
ds
sbb
mov
fwait
cpuid
addr16
adc
mov
lret
out
jbe
xchg
push
dec
sbb
imul
pop
push
jl
adc
pop
bound
inc
lock
inc
subl
cmpsl
ja
std
call
sub
mov
push
xor
adcl
mov
in
cmp
mov
jb
sete
push
jecxz
imul
sbb
adc
testb
push
inc
aad
dec
xor
and
sub
imul
cmc
popf
int
mov
add
shlb
icebp
sub
xlat
mov
mov
mov
adc
lea
pxor
and
stc
in
sub
call
test
popf
fisttpl
sub
popf
scas
imul
jg
aam
jmp
pop
mov
dec
add
jns
gs
testb
psraw
jbe
pop
outsb
inc
fisttpl
jge
mov
pop
dec
jg
dec
lcall
repz
sbb
arpl
addl
subb
and
repz
adc
cld
jns
push
cmpl
mov
push
pop
in
fcmove
test
pop
and
clc
iret
xchg
jne
add
out
jb
add
loop
es
call
cmc
je
push
pop
jl
mov
push
xchg
cmp
mov
or
lcall
in
fcmove
add
push
and
and
jl
ss
mov
mov
popf
inc
adcl
adc
enter
push
cld
inc
push
repnz
loop
jmp
test
jbe
aaa
pop
push
jl
dec
lret
hlt
fwait
push
sbb
sub
xchg
fistpl
sbb
sub
jmp
mov
scas
out
ret
scas
xchg
mov
mov
push
ret
cltd
popf
sbb
xor
inc
push
or
jg
loope
ljmp
sub
aas
jne
ljmp
lods
ror
push
lds
shlb
fstpt
and
clc
push
add
mov
and
ja
dec
push
outsl
test
lods
je
loop
sbb
sub
cmp
sbb
rclb
cwtl
mov
popf
xchg
jmp
testb
cmp
std
mov
pop
push
cmp
es
inc
cmp
fwait
mov
jbe
pop
sub
cmp
lahf
pop
sbb
dec
xchg
imul
jl
xchg
inc
cvtps2pi
call
pushf
cmp
jl
mov
fsubrs
or
inc
cld
mov
or
lret
jge
lods
repnz
sbb
sub
mov
cmp
scas
scas
inc
inc
mov
cmp
push
notl
xchg
fimuls
push
mov
dec
jno
jno
rcll
and
leave
dec
xor
std
subb
jo
icebp
test
jae
mov
incb
or
cmp
hlt
push
sub
call
mov
int3
push
data16
cmpsb
iretw
std
push
xor
lcall
les
dec
movsl
push
ret
xchg
jle
pusha
add
add
push
sub
mov
int
mov
popf
or
mov
cld
mov
pop
imul
push
lock
idiv
mov
inc
add
cmp
xor
or
rorl
lods
mov
lret
or
push
ljmp
ret
adcl
shlb
pushf
ret
ret
push
mov
enter
xor
loope
sub
mov
jle
insl
movsl
pop
pop
pusha
stos
add
popa
notb
cs
cmpsb
inc
stos
mov
rorl
enter
inc
dec
dec
pop
pop
sbb
pop
xchg
sub
lock
cmp
xor
shl
inc
loope
dec
ret
push
push
xchg
xchg
push
sbb
mov
jge
pop
dec
mov
popa
xchg
fstps
xchg
pushf
mov
lods
nop
add
xchg
idivl
sub
lret
xorl
mov
mov
sbbb
pushf
insb
stos
std
divl
cmpsl
or
ja
fistpl
add
divb
add
shll
mov
mov
imul
pop
mov
in
test
outsl
sub
ss
inc
push
adc
rorb
jecxz
push
scas
mov
add
fisttpl
adc
adc
adc
mov
sbb
push
pusha
jne
jae
push
fisubrs
push
jmp
cltd
adc
pop
jae
push
mov
jl
jg
lods
repz
dec
jl
add
lea
mov
or
add
lods
adc
add
popf
in
sub
sti
mov
das
and
pop
popw
jne
push
jb
add
test
pop
adc
cltd
push
add
mov
mov
or
jnp
mov
cs
ret
adc
outsl
pop
pop
movsl
test
aas
cmp
adc
stc
cltd
cmp
and
scas
xor
and
jae
ja
js
lock
addb
pop
movsb
in
ret
clc
insl
pop
pop
push
loopne
xor
inc
movsb
jb
dec
mov
fsubrl
or
pop
jmp
mov
sbb
sbb
jmp
mov
scas
sub
mov
xchg
adc
fs
pop
cmpsb
out
int3
jbe
jp
and
and
jo
fcmovnu
call
sahf
data16
mov
cld
xchg
nop
push
cltd
iret
push
sub
cmp
fsubrs
cmp
pop
pop
sub
or
je
xor
nop
push
xchg
in
outsl
faddp
add
gs
push
icebp
xor
in
paddw
insb
and
pop
sbb
repnz
mov
loop
xchg
dec
xchg
loopne
popf
call
out
inc
jg
xor
stos
sub
aaa
sub
aas
cmc
inc
sbb
inc
ds
push
aas
pop
outsb
lea
pop
mov
cs
cmpb
nop
push
lea
pop
adc
inc
lahf
aaa
aas
push
xor
lret
repnz
jb
jae
shlb
adc
ret
lret
jg
or
add
mov
cli
je
xor
xor
aaa
insl
push
jmp
inc
lea
xchg
mov
push
pop
mov
add
int
adc
ss
out
push
push
push
mov
insb
addb
popa
int3
mov
lcall
in
mov
pop
into
movsl
fdivrl
mov
sbb
scas
or
imul
sub
mov
fmuls
adc
mov
sub
in
test
jae
adcb
pop
jle
gs
dec
adc
sarl
adc
sub
insl
mov
inc
pop
xchg
cmpsb
mov
dec
and
cmp
enter
mov
pop
in
stos
jmp
in
push
mov
pop
fwait
sub
xchg
sub
inc
dec
shlb
mov
sbb
dec
cwtl
xchg
repz
and
aam
jmp
fstpt
es
dec
rclb
xor
fidivs
lds
push
sbb
fdivr
sbb
rolb
jle
dec
daa
push
pop
rorl
pop
aam
sbb
push
mov
cli
dec
xchg
add
pop
sub
or
xchg
adc
mov
adc
pop
lahf
jecxz
sbb
jnp
jle
xchg
and
lcall
inc
popf
aas
inc
daa
push
xchg
jmp
ret
pop
rol
nop
pop
cld
aas
cwtl
outsb
aad
int
fsubr
xor
in
loope
jb
mov
add
cmpsb
xchg
add
sbb
adcl
pusha
pop
jnp
ret
into
xor
ret
testb
mov
jae
sbb
ror
add
scas
push
cmp
ds
xchg
sub
lahf
inc
mov
rcrb
cltd
icebp
xor
pushf
loop
fildll
jle
pop
addb
push
cli
lret
shll
and
sbb
push
xchg
fs
lret
pop
es
lods
pusha
xor
pop
lcall
cmp
ret
mov
std
stos
sbb
xor
mov
inc
and
inc
or
aam
xor
adc
jno
pop
imul
and
sbb
jmp
cli
lahf
xchg
movsl
xchg
popf
add
xchg
xor
jmp
negb
pop
sbb
aaa
adc
pop
mov
cmp
sub
aad
lods
lcall
out
push
addl
pop
mov
aaa
enter
and
or
incl
mov
inc
icebp
mov
or
ret
mov
pop
popa
rorb
icebp
outsl
std
pop
xchg
test
xor
adc
lds
lds
push
mov
icebp
stos
sub
dec
pushf
push
add
dec
cmc
mov
lret
sub
pop
mov
stos
xor
or
arpl
test
pop
push
mov
out
mov
ja
xchg
jo
orb
mov
leave
outsl
ss
int
mov
inc
cmp
enter
fidivl
arpl
ds
outsb
xor
pop
pop
stos
jle
aam
aam
in
clc
imul
stos
fmuls
pop
outsb
inc
mov
lahf
cltd
xor
mov
out
into
add
mov
xchg
push
push
shlb
cmp
sbb
add
cmp
dec
jae
xchg
inc
xlat
fldenv
roll
and
daa
mov
bnd
mov
ficompl
inc
loop
data16
movsl
add
jbe
add
add
movsb
push
out
xchg
loop
or
cmpsb
ljmp
lret
lods
aam
clc
inc
sbb
mov
jbe
aas
add
xor
add
orl
pop
mov
clc
clc
jge
loop
cltd
sub
int
insb
cmpsl
xchg
push
or
jle
imul
xchg
aam
outsl
stos
hlt
adc
xchg
incl
mov
les
jne
fsub
in
rcl
arpl
sub
imul
dec
push
jo
sbb
mov
dec
mov
popf
xchg
jo
test
fs
push
leave
lret
arpl
lods
adc
imulb
jne
shl
pusha
xor
xlat
decl
pop
loopne
cli
adc
sahf
mov
mov
push
idivb
orl
imul
stos
or
sbb
aam
cmp
pusha
movsl
movl
in
xchg
mov
mov
xor
sbb
push
jne
shlb
mov
add
push
xor
mov
mov
or
repz
jecxz
jb
jno,pn
sub
sbb
adc
ds
imul
pop
jbe
dec
cmp
or
xchg
mov
pop
rcrl
mov
pop
outsl
pop
sahf
and
mov
pop
mov
or
mov
movsb
leave
cmpsl
mov
insl
mov
mov
xchg
ret
scas
test
filds
sti
sbb
mov
inc
js
lret
loopne
mov
scas
dec
push
inc
pop
jns
cwtl
sbb
test
cmp
lahf
mov
lods
dec
in
jo
loope
fdivl
mov
pop
data16
xor
dec
roll
push
leave
jb
mov
dec
jns
adc
out
add
mov
dec
pushf
ret
and
inc
sub
dec
loopne
lods
adc
mov
jge
roll
mov
xor
jae
push
cs
lds
bound
ljmp
mov
add
pop
xor
lods
jae
add
lods
dec
mov
int
idiv
push
mov
test
or
sbb
pop
mov
lcall
pop
jne
or
cltd
jecxz
mov
rclb
cmp
lods
daa
mov
pop
sub
xchg
hlt
rep
jl
inc
lahf
lcall
sbb
sub
shl
test
das
loop
mov
xchg
dec
mov
jne
jnp
pusha
lahf
insl
mov
ss
jecxz
pushf
push
mov
out
mov
jo
xlat
repnz
adc
ja
jp
ss
xor
ja
and
fs
loop
sbb
lahf
shll
add
ffree
dec
jle
jns
sbb
pusha
inc
hlt
div
test
push
mov
stos
adc
test
js
adc
jae
iret
je
xor
mov
cltd
mov
xor
cmpb
in
aaa
adc
adc
inc
lock
mov
sbb
shlb
xchg
es
cltd
rcrl
jmp
add
sbbb
inc
les
mov
add
outsl
add
or
in
and
mov
push
adc
jae
and
icebp
mov
jge
pusha
cld
mov
dec
call
add
test
cltd
xlat
pop
rolb
popf
in
movsb
jae
shll
out
fstpt
lahf
sub
rorl
sbb
stos
sub
js
mov
or
stos
js
sbb
xor
ds
fdivs
adc
xchg
insb
nop
imul
cwtl
ficoms
add
addl
sub
xchg
xchg
aas
jbe
leave
je
sub
test
out
jns
xor
mov
inc
sbb
pop
hlt
fst
cmp
sub
pushf
pop
sbb
jecxz
in
push
push
into
lret
and
mov
xchg
pop
adc
sbb
shl
sub
loope
and
cs
mov
mov
insl
adc
sar
add
xlat
jb
xchg
mov
inc
sbb
sbbb
xor
repz
enter
int
fwait
out
sbb
mov
mov
sbb
insb
xchg
xlat
enter
les
push
test
adc
mov
add
in
jns
jno
dec
xchg
das
mov
lock
cli
sub
dec
jmp
jbe
dec
into
loope
sbb
ljmp
pop
int3
sbb
adcb
sub
cmpsl
pop
arpl
dec
pop
call
fwait
jb
mov
sbb
sub
hlt
jne
dec
sbb
mov
inc
mov
std
iret
test
sub
push
ss
mov
hlt
push
adc
loop
dec
jge
mov
rol
pop
cmp
jge
mov
jb
inc
aaa
push
loopne
inc
fldenv
sbb
mov
scas
das
jp
out
adc
std
imull
bound
movsl
imul
lret
dec
aam
mov
push
inc
mov
pop
int
addr16
or
cmp
cmp
lods
adc
daa
pusha
mov
xchg
daa
mov
jne
xor
fisttps
push
hlt
sub
fnstenv
mulb
cmpsb
testb
mov
scas
cmpsb
dec
idivl
dec
loop
dec
fs
dec
jae
test
push
mov
outsb
sub
xor
adc
fbstp
fwait
xlat
outsb
mov
pop
mov
or
cmp
mov
inc
lret
or
sbb
jge
les
stos
testb
dec
pushl
sbb
add
sub
test
shlb
cwtl
loop
fnstcw
mov
les
clc
js
lods
mov
in
or
mov
add
iret
test
cld
mov
inc
xchg
fcmovb
ror
cwtl
addr16
inc
mov
add
arpl
lahf
pop
lds
inc
mov
sahf
push
add
iret
test
push
jmp
push
inc
lret
aam
ss
fmulp
jecxz
addb
lret
test
xor
out
cwtl
cli
push
fwait
mov
divl
lahf
push
dec
loope
dec
in
dec
jl
xchg
dec
rolb
rol
mov
cld
jns
mov
sub
iret
lret
cmp
inc
add
out
nop
inc
xchg
add
in
push
lret
dec
insl
mov
dec
movsb
push
mov
inc
into
cmc
clc
pop
mov
jge
leave
sub
addr16
pop
arpl
push
xchg
and
jg
insb
enter
sbb
mov
jnp
data16
adc
mov
ljmp
inc
push
ljmp
ret
push
stc
int3
fyl2xp1
dec
outsb
leave
aas
js
jbe
rcr
out
sahf
push
call
lret
stos
xlat
add
in
push
stos
sub
adc
lods
jns
mov
adc
lret
push
cmp
mov
xor
shrl
pushf
cmpsl
nop
and
pop
decl
mov
or
mov
mov
or
pop
sarl
lcall
cmpsl
push
idivb
push
test
pop
mov
lcall
mov
insb
cmc
cmpsl
negb
or
mov
cmpsl
ljmp
inc
outsl
push
mulb
adc
jp
mov
imul
pop
dec
int3
outsb
ror
sbb
orb
and
aaa
rcrb
xor
scas
pop
mov
pushf
movsb
xor
push
dec
popf
incb
and
jp
pop
xchg
cmp
mov
popf
les
fmull
xlat
popa
xor
and
and
jmp
adc
mov
insl
jl
sarb
hlt
enter
or
sub
rcrb
jmp
shrb
enter
popa
mov
sub
adc
sbb
inc
xchg
adc
movsb
push
mov
add
sub
push
push
cmp
or
and
orl
insb
lds
mov
test
insb
out
pop
arpl
inc
push
stc
pop
push
daa
add
push
adc
scas
fimull
movsl
aaa
in
lea
shrb
repnz
or
lods
stos
push
and
or
out
imul
mov
mov
into
shlb
in
rorb
pusha
rcrb
mov
in
out
jne
pop
es
jl
xchg
mov
mov
stc
int3
call
inc
test
inc
adc
xor
sbb
pop
jecxz
dec
adc
sub
mulb
adc
cmpsl
xchg
nop
stos
pop
fs
lret
cltd
mov
ja
inc
std
icebp
dec
loope
add
jno
outsl
subb
push
jle
or
push
roll
hlt
push
roll
jo
push
loop
dec
jecxz
imul
fdivrs
in
mov
lcall
dec
jge
add
push
fbstp
cmp
cltd
insb
and
dec
sbb
add
jmp
repz
pop
push
xlat
sbb
mov
inc
repz
pop
mov
mov
jno
xchg
cs
mov
clc
in
cltd
mov
ljmp
jge
je
adc
mov
ss
scas
and
adc
repz
out
adc
add
aas
ret
lret
pop
inc
jl
hlt
push
and
js
cltd
out
movsl
call
mov
mov
xor
mov
mov
addb
inc
inc
in
lods
inc
xchg
adc
inc
adc
cmc
pushw
mov
or
clc
sti
pushf
cli
xchg
mov
les
int
pop
adc
scas
out
shll
hlt
scas
hlt
xor
adc
fsubl
xor
arpl
stos
lahf
cmp
jp
je
js
cmp
lahf
cmpsb
xchg
mov
divl
xchg
inc
xchg
xchg
or
dec
movsb
xlat
int3
xchg
dec
xorl
pop
addr16
sub
loope
leave
push
test
sbb
lods
jecxz
pop
test
push
std
cltd
pop
aas
cmpsb
jle
ja
cmp
icebp
cmp
notl
pop
ja
dec
mov
add
jl
aaa
add
and
cs
add
lods
xchg
cli
jge
pop
adc
push
adc
lods
inc
ljmp
sub
add
ds
dec
cmp
pop
jecxz
call
mov
and
mov
or
sub
test
iret
inc
mov
sti
dec
nop
mov
or
cs
mov
push
pop
pop
sbb
and
cs
fcoml
dec
and
xchg
or
dec
sbb
dec
mov
cmp
les
outsl
jmp
fcoms
lock
stc
xchg
int
or
in
movsl
test
mov
xor
fiadds
insb
jmp
mov
out
dec
jb
sbb
stc
sbb
pop
lods
out
in
hlt
adc
mov
shlb
push
xchg
sbb
jecxz
pop
ss
ja
mov
sub
pop
push
rcll
scas
test
roll
xor
push
fimuls
mov
jle
pop
cld
lods
mov
mov
jns
daa
mov
shll
and
divb
xchg
popf
mov
pop
pop
pop
lret
cs
mov
mov
pusha
je
or
dec
mov
add
rolb
cmp
shlb
pushf
and
push
daa
call
arpl
mov
out
push
mov
lock
push
out
lret
xchg
out
or
sbb
inc
jns
shll
inc
inc
notb
cmp
jl
mov
pop
daa
cmp
test
add
insb
and
push
push
popa
scas
xor
mov
movsl
lock
sbb
inc
xor
jnp
cwtl
mov
sbb
into
dec
loopne
fdivrl
push
in
push
mov
cmc
mov
push
fcmovnbe
js
jae
cwtl
push
das
ret
xchg
inc
enter
push
lret
ja
adc
jbe
sbb
jl
mov
pop
push
stos
inc
or
lret
std
test
xchg
xchg
sti
mov
jno
sbb
call
imul
fiadds
add
popa
sti
popa
pop
stos
mov
add
sbb
xchg
call
and
pop
sbb
out
lock
inc
sub
push
mov
mov
cmp
fcomps
outsl
pop
pop
call
mov
mov
test
mov
ds
xor
lcall
xor
xor
sbb
out
or
cmp
jns
or
in
dec
movsl
pop
push
fistpl
or
inc
in
sbbb
lea
inc
push
sub
ds
xlat
mov
je
es
xchg
lods
push
push
sbb
adc
mov
in
sahf
and
outsl
rolb
pop
lods
mov
xchg
dec
and
mov
cmpsl
sbb
jnp
pusha
push
xor
stos
jae
or
inc
stc
mov
push
lea
es
inc
mov
mov
sub
and
mov
jg
shrb
mov
andl
lahf
mov
ds
ficoml
aad
xchg
lret
testb
sbb
pop
push
jp
ljmp
testl
mov
icebp
push
jg
mov
push
jg
rcrl
sub
push
or
cmp
mov
fcoml
dec
js
lds
pop
and
scas
stc
aad
push
sub
imul
mov
repz
aaa
test
mov
sub
jp
inc
fmulp
movsl
std
mov
push
add
sbb
push
ljmp
outsb
sbb
adc
add
cmp
jbe
dec
dec
decl
xor
lahf
stos
jo
mov
push
jle
sbb
xchg
test
jg
adc
push
add
bound
stc
cmp
dec
js
mov
pop
sbb
orb
scas
inc
das
xor
je
cmp
inc
xor
and
call
cli
lahf
out
daa
pop
dec
std
andb
repnz
lods
fucom
lcall
jmp
adc
dec
jg
and
leave
or
sub
aas
adcb
inc
pop
or
mov
outsl
sbbb
je
pop
int3
inc
mov
test
pop
jl
jb
fdivrl
inc
or
shlb
inc
mov
shrl
imul
jns
pushl
scas
mov
mov
pop
push
push
mov
lds
ja
cwtl
push
lret
mov
sar
push
lods
mov
hlt
mov
int
inc
cmp
or
or
loop
fisttpl
adc
out
push
pop
adc
sub
fadd
out
cmp
aam
push
dec
or
sbb
shlb
idivl
ljmp
pop
xchg
push
ds
pop
xor
push
jb
push
cmp
or
sarb
sbb
into
cmp
ja
or
repz
mov
sbb
cmp
sbb
fcmovnbe
test
jns
les
inc
adc
fcmove
sub
addr16
sar
adc
das
lcall
and
imulb
add
arpl
pusha
imul
dec
repz
mov
pop
js
adc
sbb
adc
loope
xor
rcrl
inc
xrelease
mov
add
jp
inc
add
inc
push
pop
pop
and
clc
push
out
scas
add
mov
mov
mov
fisubl
leave
or
inc
dec
sub
in
sbb
cmpsl
inc
mov
dec
sbb
mov
inc
pop
mov
testb
lret
sub
adcb
dec
test
movsl
sbb
andb
pop
ljmp
imul
add
jno
mov
inc
mov
sbb
mov
push
push
add
je
fbld
sbb
repnz
or
and
xor
jo
add
int
adc
loop
pop
push
ret
lods
push
or
or
movsl
stos
mov
outsb
add
xchg
outsl
cmpsb
mov
repnz
xchg
xchg
jmp
cmp
test
mov
addl
dec
aaa
xor
aad
or
sbb
in
scas
inc
sbb
loopne
xor
cmp
adc
test
test
mov
les
stos
les
mov
push
out
leave
mov
out
lcall
jl
int
sti
jmp
cli
mov
iret
jge
inc
in
mov
out
leave
inc
shl
sub
andb
xchg
xchg
fbstp
pop
pushl
jne
mov
sub
lret
mov
shlb
and
lahf
push
adc
aad
pusha
ja
xchg
and
loop
push
push
mov
adc
mov
or
sbb
cmc
mov
popa
pop
mov
aas
add
sub
fisttps
push
int3
jo
jg
sti
push
or
daa
filds
in
push
aad
test
mov
stc
mov
and
cmp
andl
in
addr16
xchg
mov
cmc
xchg
adc
ret
orb
fucomi
jnp
lret
adc
push
adc
fldl
inc
adc
call
sub
cmp
and
adc
leave
stos
bound
push
dec
bound
mov
fwait
inc
pop
dec
ret
cmp
sbb
adc
inc
mov
sub
add
imul
add
cs
jle
adc
cmp
ds
xchg
lret
cs
cltd
add
cmp
imul
insl
push
jne
lcall
repz
jae
movsl
xor
rcr
push
push
in
mov
sub
lock
pop
xchg
mov
dec
dec
cs
les
lret
xchg
stos
jge
adc
call
add
mov
add
icebp
mov
fcompl
fsubrl
movsl
rcrl
je
rclb
and
inc
and
xor
les
xor
lret
adc
adc
sahf
popf
popa
test
addr16
rorb
call
mov
lret
xchg
sub
jns
inc
mov
fmull
clc
int3
push
jae
mov
fwait
mov
dec
mov
js
out
mov
push
imul
test
xchg
nop
mov
ljmp
dec
add
and
gs
pop
and
imul
xchg
jne
sbb
lcall
andl
and
xor
cmpb
out
daa
fiaddl
hlt
or
sti
dec
sub
insb
iret
pop
cli
incl
daa
js
imul
dec
mov
daa
cs
ffree
sbb
mov
push
inc
dec
out
mov
sub
shlb
pop
lcall
sbb
fsubrl
adc
repnz
mov
out
mov
mov
mov
dec
inc
sbb
or
js
mov
lret
icebp
xor
aas
arpl
out
cmp
fs
or
push
insl
in
leave
cmp
int3
hlt
adc
enter
out
add
shlb
nop
adc
push
mov
imul
jecxz
enter
push
mov
js
and
cwtl
fmuls
lock
sbb
andb
xor
mov
add
mov
je
mov
or
push
sub
cmp
incb
dec
jmp
or
das
dec
mov
cs
cwtl
xchg
popf
pop
push
inc
mov
cmp
xchg
cld
inc
sub
inc
mov
xorl
jle
dec
xor
mov
movsl
pop
fwait
leave
stos
adc
or
pop
jae
cltd
idiv
xor
mov
jmp
not
mov
rcrl
arpl
cwtl
ja
jo
cmpsl
add
sub
xor
add
mov
xchg
enter
mov
insb
into
ss
adc
das
xor
jmp
mov
mov
inc
lock
lea
movl
jbe
dec
addr16
cs
lods
inc
lds
xchg
xor
jns
daa
pop
inc
addr16
add
and
inc
push
out
into
xor
xorl
add
xor
inc
jb
iret
fimuls
dec
mov
fisttpl
jo
ret
rorl
xchg
jbe
xor
stos
xor
frstor
xchg
into
ljmp
repnz
test
fwait
inc
xor
in
mov
and
insb
movsl
in
pop
and
lret
mov
shr
out
out
dec
out
sti
adc
push
bound
xor
test
int3
pop
movsb
jge
jmp
imul
xchg
ret
addr16
push
inc
enter
out
adc
movsl
mov
or
jg
popf
mov
pop
lock
out
push
aas
idivl
mov
pop
ja
cmp
popf
xchg
cmpsl
jecxz
in
ss
popa
ja
and
sbb
pushf
mov
les
pop
js
add
xlat
out
jecxz
add
ret
or
out
clc
js
mov
stos
aas
xor
adc
inc
pop
repz
hlt
push
scas
pop
cmpsl
shll
movsl
push
push
add
es
adc
push
sti
sbb
subl
and
stc
xchg
mov
xchg
ss
and
not
daa
popf
jnp
jg
mov
mov
aaa
cltd
les
test
aas
add
fwait
push
mov
mov
inc
cmp
mov
jge
out
mov
iret
or
fimuls
aaa
or
sbb
dec
outsb
and
cmpsb
aaa
xchg
pop
mov
lods
mov
pop
add
sbb
or
sbb
pop
sub
inc
lods
hlt
xchg
fwait
movsl
insl
jnp
test
bound
jle
cli
fistps
leave
cmpsl
lock
fisttpll
enter
ljmp
mov
sti
xor
dec
pop
gs
out
sbb
mov
bt
or
mov
test
or
or
mov
pop
pop
xor
mov
add
stc
lock
insl
mov
movsb
xlat
inc
std
sub
cmpsb
es
mov
das
inc
sub
dec
xor
mov
movsb
repnz
mov
mov
sbbl
cmp
inc
cwtl
mov
cltd
mov
fwait
xchg
sahf
cmc
addr16
add
insb
aam
je
cmpsb
pop
scas
adc
loopne
negl
fcom
loop
jo
cs
pop
mov
jle
push
xchg
out
push
push
in
push
pop
es
push
jae
rcrb
fxch
pop
cmpsl
xorl
insb
cmc
rcr
push
inc
int3
jl
and
inc
fcoml
fistps
lcall
add
mov
lret
sub
xchg
enter
cmp
fwait
sbb
mov
lods
mov
popa
and
fwait
insl
inc
dec
jns
mov
and
push
scas
data16
outsb
lods
cmpsl
xchg
xchg
xlat
sbb
ret
out
je
andl
pop
pop
cld
cmp
mov
out
push
mov
inc
orb
fidivrs
adc
mov
movsb
ret
xchg
jae
hlt
push
in
pop
in
pop
and
lret
cmovns
ja
lock
mov
add
lret
or
xchg
sti
xchg
nop
cmp
fimull
jg
inc
and
bound
jb
mov
pop
mov
jbe
xor
cs
movsb
out
clc
sub
dec
mov
jno
lret
outsl
mov
xchg
aam
popa
add
pushl
xor
and
les
outsb
jae
pop
popa
addr16
popa
les
mov
adc
movsb
cmp
leave
pop
jne
imul
ss
or
cmpsl
andl
pop
das
jecxz
movsb
xchg
testl
daa
xor
xchg
shl
lods
popf
jp
js
fisttpll
mov
inc
nop
sbb
test
adc
or
inc
push
sbb
ficoml
cmpsb
stos
addr16
xor
xchg
sahf
sti
sub
test
add
xor
or
mov
adc
xchg
inc
inc
sbb
rcrb
mov
pop
mov
repnz
mov
fildll
in
push
sbb
or
sub
test
jl
addr16
les
scas
mov
push
iret
add
dec
fisubl
fcmovnbe
cmp
loope
dec
sahf
xchg
push
jnp
add
mov
xor
lods
dec
xchg
mov
fildl
cmc
jbe
jne
mov
inc
imul
push
or
xchg
xchg
lds
mov
sub
sbb
pop
orb
in
loopne
add
push
jp
lods
xor
and
lret
push
pushf
enter
xor
cltd
dec
push
outsb
pushl
and
sahf
mov
pop
add
jl
ljmp
nop
enter
xchg
or
pop
pop
cmpsb
loopne
sbbl
roll
adc
popf
fdivrl
cmp
sbb
jle
testl
xchg
sub
mov
pcmpeqw
testb
jle
or
outsl
stos
add
or
cmp
mov
mov
push
xchg
mov
les
cld
push
sub
nop
les
xchg
xor
mov
and
mov
add
mov
in
adc
mov
and
or
aad
stos
mov
jecxz
subl
stos
adc
inc
inc
jns
shl
in
jne
aas
pop
scas
imul
in
and
inc
mov
pop
rcrl
cmp
pop
lcall
mov
add
clc
test
mov
lock
in
idivl
shl
pop
push
gs
mov
int3
pop
es
push
inc
into
xor
pop
dec
mov
mov
dec
mov
xor
fdivrl
dec
jge
test
fnstenv
sub
test
out
pop
mov
inc
cmp
or
gs
dec
dec
cmc
icebp
jp
jb
xchg
mov
mov
dec
std
mov
imul
mov
nop
jle
dec
daa
mov
jbe
and
in
and
push
movsl
pop
adc
jle
imull
sbb
dec
adc
mov
cmp
add
arpl
scas
fldcw
test
pushl
out
out
int
data16
lcall
mov
gs
adc
ds
push
jmp
je
mov
push
dec
sub
cltd
pop
mov
push
sub
xor
inc
lea
shr
or
pusha
or
push
xor
loop
stos
sbb
jp
cmc
mov
sbb
add
outsb
aaa
jo
les
das
enter
sub
jle
shl
fcmovnb
loop
mov
sar
mov
pop
pusha
dec
lcall
lcall
bound
mov
or
xchg
pop
popa
jl
fisttpll
xchg
mov
lods
mov
fsubs
fimuls
xchg
negl
adc
pushf
mov
dec
call
mov
mov
lret
add
loopne
dec
lods
adc
fildll
fwait
mov
repz
cwtl
jae
ret
pop
xor
or
dec
push
jne
push
lods
xlat
fildl
sub
jne
push
inc
push
mov
imul
mov
dec
cmp
outsl
xor
xor
cmp
mov
pushf
push
sub
sub
lods
xor
mov
stos
push
out
addb
inc
notb
hlt
stos
sahf
test
add
push
lret
cli
loop
and
lods
test
pop
cld
jno
jne
and
xchg
sub
testl
cmp
aad
fiadds
cs
in
inc
outsl
std
aad
enter
or
lods
cmp
cmpsl
and
add
mov
dec
dec
aam
cmc
jno
mov
aas
inc
cmp
stos
or
sbb
push
lea
lock
movsb
jmp
push
push
aam
mov
insl
adc
add
sti
out
pop
in
xor
or
sbb
xor
push
pop
imul
inc
pop
push
cmpsl
pop
std
push
push
mov
push
mov
hlt
dec
mov
pop
lret
or
inc
jmp
or
xor
inc
mov
mov
push
xchg
in
cld
aam
mov
mov
jl
cmp
mov
movsl
xchg
jecxz
test
data16
test
clc
sti
les
in
xor
pop
cmpsb
cmp
pop
jo
xchg
dec
jg
enter
sub
lret
icebp
sub
into
in
fistps
out
push
sbb
mov
jae
push
icebp
push
mov
mov
dec
xchg
inc
dec
xchg
push
outsl
out
jo
mov
in
xchg
add
outsl
rol
or
lock
push
es
xchg
test
and
arpl
inc
dec
cmp
and
out
add
inc
js
in
mov
fisttpll
jae
cmp
subl
out
adc
popa
cmpsb
mov
sbb
xchg
movsl
jecxz
cmpsb
sti
ror
movsb
push
scas
add
rcrb
jge
pop
mov
out
jne
jmp
or
aas
and
int
cltd
roll
xchg
adc
or
mov
outsb
xchg
cmpsb
sub
pop
fldt
roll
sub
shll
and
mov
imul
shl
imul
pop
xchg
std
out
cltd
es
leave
adc
mov
add
mov
or
jbe
push
rcr
mov
xor
cli
add
scas
or
cltd
jo
sub
sbb
idivb
addr16
test
sahf
movsb
int
jp
out
push
lds
sub
mov
sti
jp
or
cmpsl
cmp
ja
jo
gs
dec
jge
addl
scas
xchg
cmp
mov
mov
gs
inc
mov
imulb
shrl
sbb
fstps
icebp
mov
mov
pop
jns
subl
aas
fstps
jg
push
test
testl
xchg
or
imul
pop
in
pop
and
adc
ret
mov
add
aas
add
dec
adc
mov
pop
into
xor
dec
ds
dec
or
and
xchg
int
inc
test
pop
in
mov
hlt
ljmp
filds
mov
add
das
nop
xchg
into
rolb
pop
movb
sbb
enter
sub
push
sarl
jmp
or
jl
mov
pusha
cmp
inc
loopne
mov
nop
inc
pushl
js
ja
pop
outsb
addb
or
repnz
mov
jae
lods
jae
fistpll
inc
xchg
cmpsl
push
xor
jo
pop
and
movl
pop
sti
jmp
and
sub
xchg
ffree
js
add
inc
lcall
push
mov
lea
es
imul
pop
icebp
jno
cmpsl
ja
outsb
lahf
outsl
inc
jle
inc
mov
aas
test
xchg
hlt
clc
lahf
adcb
sub
sbb
mov
jmp
or
cltd
sbb
pop
aad
movb
xor
bound
dec
jns
jp
imul
inc
outsb
fs
push
mov
mov
push
push
mov
and
mov
pop
std
into
out
in
test
push
inc
mov
pop
ja
dec
add
and
xor
mov
movsl
inc
jecxz
nop
idivb
and
enter
sbb
nop
cs
test
cmpsl
std
dec
mov
cs
xorl
sbb
add
dec
mull
imul
insl
data16
or
jae
adc
rclb
inc
in
xor
xor
xor
xchg
test
frstor
mov
cltd
jge
ds
and
mov
cmpsb
cs
movsl
cmp
jecxz
push
cmp
enter
mov
std
fs
icebp
or
popa
mov
mov
repz
sar
scas
gs
stos
fiaddl
adc
lods
dec
xor
jb
aas
push
cld
xchg
jno
adc
push
sub
inc
mov
ljmp
fiadds
mov
pusha
pop
imul
inc
addr16
out
fsubrl
mov
out
in
int
jne,pt
scas
dec
xchg
jns
mov
jno
imul
test
leave
jle
pop
out
jns
outsb
jbe
or
cmp
stos
enter
stos
fiaddl
lds
jno
push
pop
sbb
xor
add
dec
sahf
pop
pop
xchg
pop
cmpsl
inc
movsb
in
mov
outsb
jmp
cmpl
lods
ja
adc
or
pop
int3
imul
pop
stos
adc
flds
popf
push
mov
sub
leave
sub
push
call
pop
psubusw
mov
gs
dec
mov
andb
or
fmull
jo
mov
or
dec
add
mov
gs
or
stos
push
dec
std
jns
pusha
dec
jmp
pinsrw
test
lods
xchg
and
inc
gs
or
into
insb
leave
loopne
mov
lds
sub
adc
nop
js
cld
push
loopne,pn
sub
xor
cmp
mov
leave
dec
movsl
xor
mov
adc
nop
sbb
xchg
dec
mov
fdivrs
stos
ljmp
jae
mov
btc
mov
push
lods
call
test
insb
mov
xor
outsl
ret
aaa
jmp
mov
std
adc
fistpll
mov
push
add
fsub
pop
lahf
test
cmc
mov
call
movsl
sti
in
sbb
sub
xor
push
enter
push
cmpsl
test
adc
xchg
mov
add
mov
pushf
shll
xor
or
mov
jnp
push
mov
leave
and
add
cmp
pop
jb
mov
jbe
add
or
js
sub
gs
sahf
pop
ja
mov
in
mov
pop
loopne
and
push
mov
sub
ret
push
xlat
and
ss
jno
loope
je
insb
pop
data16
out
fldcw
pop
stos
adc
push
lahf
xchg
out
stos
hlt
add
add
mov
lcall
jo
sbb
sti
and
loopne
xchg
in
fidivrs
pop
or
jbe
insl
movsb
pop
outsl
inc
out
cld
gs
shrb
push
dec
out
jne
es
mov
pop
sbb
outsb
icebp
pusha
push
hlt
dec
inc
shlb
out
clc
mov
add
mov
popf
jecxz
nop
incl
xlat
sti
mov
adc
lret
push
push
clc
jecxz
adc
inc
cmp
pop
fisubl
push
adc
xchg
pop
xchg
inc
jb,pt
pop
xchg
rcl
sub
sbb
pop
and
int3
push
pop
test
mov
push
ret
adc
lds
push
xor
jb
cs
ss
sahf
lds
mov
mov
jo
cli
dec
mov
push
in
pop
jmp
mov
out
jmp
test
mov
add
or
sub
and
rclb
inc
cmp
sub
andb
cmpsb
movl
pop
scas
push
ret
xor
pop
sub
pop
mov
sbb
push
mov
and
or
lea
in
imul
jp
jmp
js
add
jmp
xchg
push
std
or
sub
sub
inc
ret
cmpsl
mov
js
out
and
dec
ucomiss
jmp
dec
xchg
ljmp
mov
jp
daa
fisttps
add
stos
inc
in
shll
bnd
ret
pinsrw
fisubrl
aaa
push
cmp
jmp
scas
cmc
sbb
pop
shll
in
and
scas
dec
xchg
and
leave
fldt
testb
fcmovb
and
test
cmp
out
in
decl
cmp
jg
or
rcrb
xchg
mov
pop
mov
in
and
jne
out
mov
pop
sub
aas
or
bound
xlat
stos
jge
inc
dec
lods
push
outsb
or
in
mov
mov
jno
stos
adcb
ret
and
mov
das
clc
out
sbb
loopne
mov
and
mov
bound
and
adc
loope
hlt
jae
lock
jecxz
jo
push
mov
xor
scas
ret
outsl
xchg
xchg
clc
lret
hlt
aam
out
rorb
iret
mov
sbb
inc
leave
mov
push
adc
push
test
dec
adcl
dec
cwtl
push
aas
xchg
in
pop
in
mov
dec
rcrl
dec
mov
inc
roll
sub
mov
mov
and
out
dec
stc
add
and
mov
push
push
ljmp
cli
sahf
mov
stos
imul
je
xchg
in
pushf
add
jnp
add
push
insb
mov
xchg
mov
cli
or
insb
test
sub
fwait
adc
into
mov
insb
inc
movsl
add
fisttps
fistps
repnz
ficomps
cmp
jg
xor
adc
pop
inc
int
shl
aad
push
add
leave
in
dec
xchg
pop
add
popa
out
sbb
loope
out
mov
fbstp
jbe
lock
or
loope
push
mov
mov
repnz
jbe
xor
cmc
imul
test
es
sbb
out
sub
insb
clc
sbb
sub
mov
jp
lds
cs
out
out
ds
imul
lea
xchg
pop
outsb
divl
jne
shrl
aas
push
mov
ffreep
fstpl
stc
add
pop
and
xchg
dec
dec
cwtl
inc
mull
insb
test
shrb
mov
dec
mov
rcll
mov
adc
ds
bound
inc
idivb
mov
jl
nop
jl
out
lret
mov
ss
movsl
aam
cli
push
pop
movsb
adc
jae
lock
ret
mov
insl
mov
test
nop
xchg
std
xor
and
mov
sub
int3
in
mov
adc
add
and
or
mov
test
pop
call
inc
lea
mov
mull
mov
cmp
je
pop
cmp
icebp
xchg
pop
lods
fcoms
scas
or
test
scas
int
mov
inc
dec
movsb
ret
xchg
ret
cltd
aaa
ficomps
push
push
jbe
inc
mov
shlb
push
pop
sbb
test
aaa
or
lods
repnz
hlt
into
pop
clc
push
je
xor
call
xor
int
jge
and
lret
xor
fcmovnbe
cmpsl
mov
rcrb
adc
sub
pusha
push
fisubl
inc
mov
sbb
adc
jae
cmp
mov
mov
mov
fildl
jnp
popa
loope
leave
std
jle
cli
cmp
jns
lret
and
mov
pushf
mov
lods
aaa
aaa
mov
dec
ror
jl
and
iret
mov
or
decl
lcall
test
dec
rcrl
sbb
les
insb
insl
test
cmp
mov
jg
or
stos
cmp
in
or
js
rol
pushl
jle
sti
and
loopne
and
mov
inc
out
in
inc
jne
movsl
movsb
mov
outsb
and
mov
into
popf
mov
fsts
push
or
shll
mov
fdivrp
cmp
sub
push
adc
and
and
es
lret
mov
xchg
lret
into
fsubrs
iret
dec
xor
js
loop
jnp
cmp
fistpll
ljmp
mov
xor
mov
ret
ror
adc
rol
sti
mov
or
add
out
sub
shlb
cwtl
dec
stc
movsl
out
mov
in
lds
and
lahf
std
shrb
fistpl
dec
hlt
cmp
and
push
out
shlb
mov
in
idiv
mov
xchg
or
or
sub
sub
cmp
xchg
cwtl
sub
scas
in
outsb
and
cmpsb
jbe
inc
xchg
repnz
dec
fiaddl
mov
loop
mov
and
fsubrl
loopne
add
inc
sbb
scas
pop
xor
push
adc
fcoms
stos
mov
lret
dec
xchg
in
or
sub
in
iret
cmpsl
cld
scas
cltd
xchg
mov
aam
push
or
dec
jle
cmpsl
into
pop
dec
mov
jbe
lods
fisttps
push
and
jecxz
add
scas
sbb
fwait
sub
xchg
bound
pop
jecxz
mov
cmp
in
pop
cld
sub
fisubs
cwtl
mov
int3
sbb
add
loopne
js
sbb
mov
ret
xchg
mov
test
mov
xchg
xor
jl
xlat
xchg
pop
mov
sahf
dec
sbb
xchg
push
les
lods
cmpsl
filds
pop
loope
ss
negb
call
pop
cmp
jp
adc
push
sbb
sahf
cmc
notb
fildl
mov
cmpsl
cmc
repnz
fnstenv
les
jns
or
inc
call
dec
sbb
sbb
inc
xchg
cs
pop
hlt
jno
mov
cmp
add
mov
cmpsb
stc
subb
data16
fstpt
fisttpll
pop
or
mov
sbb
fisttpll
or
hlt
mov
gs
jbe
and
movsb
mov
lods
mov
testb
mov
shll
fmull
and
pop
jbe
pmaxsw
enter
clc
pushw
add
subl
jno
iret
xor
aas
movsl
aaa
adc
mov
pop
mov
mov
cmp
jnp
adc
mov
out
xchg
lock
lods
fs
inc
mov
inc
push
dec
repz
dec
dec
mov
test
pop
mov
iret
cmp
pop
mov
cmpb
inc
pop
xlat
cld
mov
pop
lods
rcr
mov
push
xor
mov
jg
push
testl
std
mov
xchg
inc
mov
mov
mov
ret
adc
mov
repnz
iret
nop
out
jecxz
jmp
jp
jle
pop
pop
push
mov
sbb
mov
add
roll
outsl
xchg
js
mov
xchg
and
in
inc
or
outsb
xchg
adc
xchg
aam
movsl
mov
fmull
pop
outsb
movsb
push
dec
mov
and
lods
pop
nop
cwtl
sti
sub
fisttps
addl
dec
sbb
das
inc
jbe
adc
lret
pop
shrb
cmp
push
mov
nopl
push
and
pop
std
inc
add
repnz
imul
lock
cld
adc
xor
jbe
je
sub
push
icebp
aas
fisubrl
add
aam
loop
adc
xor
mov
enter
and
cmpsl
icebp
push
not
push
cmp
gs
lock
sub
jno
lds
jg
mov
enter
cli
xor
or
jge
and
popf
xchg
mov
shll
jl
jg
push
inc
pop
and
cli
add
loopne
in
scas
xor
push
shlb
cmp
test
sub
push
adc
cmp
sub
out
mov
in
sub
cli
cmp
push
inc
das
popf
lds
repnz
xchg
decb
sub
sub
popa
test
sub
or
xor
xchg
pushf
push
ror
push
push
dec
fnstcw
jns
das
mov
jno
fldcw
jg
clc
xchg
pop
and
stos
adc
dec
sti
fnstenv
iret
xlat
rolb
ds
lods
mov
lea
add
andb
xchg
dec
out
mov
jle
mov
insb
dec
nop
rolb
or
les
addr16
mov
add
sub
cmp
lds
jmp
std
mov
adc
push
pushf
repz
jp
in
sub
push
and
xlat
faddl
cmp
xlat
clc
sub
fisttps
jmp
int3
in
dec
pop
test
and
sarb
xchg
adc
add
xchg
subb
mov
xchg
xor
cmp
lret
xchg
mov
mov
pushfw
pop
fadds
in
mov
shrl
fldenv
jne
outsb
mov
dec
loope
jle
jge
push
das
fiadds
cmovl
push
jmp
mov
in
stc
loope
test
test
sahf
inc
or
lcall
xchg
add
inc
fs
lds
ds
xor
cld
nop
cmp
fs
push
push
sub
pop
stos
mov
add
mov
ss
ret
xlat
cld
mov
xchg
test
mov
jae
mov
xor
pop
in
mov
inc
xchg
sbb
mov
rorb
push
cmp
cwtl
leave
mov
push
mov
daa
jge
cmpsb
pop
sti
sub
aaa
into
mov
insl
push
sbb
popf
mov
mov
mov
pop
rolb
push
dec
mov
mov
fsts
dec
add
adc
pop
int
pop
mov
jb
adc
scas
add
push
mov
jne
sahf
push
cltd
push
xor
scas
or
cltd
jno,pn
andb
pop
cmp
outsb
std
lahf
arpl
in
inc
mov
xor
popfw
push
cli
or
cmp
xor
and
not
mov
scas
adc
cli
jb
add
jmp
sub
pop
inc
inc
mov
jl
pop
cmp
lods
cmp
mov
rcr
mov
pop
push
mov
ss
out
flds
push
or
jo
ret
xor
lea
xchg
std
lahf
ret
add
add
mov
pop
scas
inc
jnp
jmp
mov
iret
out
ds
loopne,pt
push
lret
negl
pushf
xchg
outsb
mov
insb
pop
lret
cmp
mov
outsb
mov
loope
fwait
adc
jl
push
das
imul
mov
test
jg
add
jp
arpl
sbb
mull
sbb
dec
xor
stc
mov
inc
popf
add
fstl
mov
fsubr
xchg
inc
adc
test
aad
or
leave
xchg
mov
xchg
jl
pop
dec
test
shrb
jno
pop
mov
cld
rcrb
lods
inc
push
sbb
stc
aas
cli
popf
add
inc
adc
jo
loope
fldenv
repnz
stos
push
les
fiadds
pop
iret
popa
mov
jge
jns
and
aaa
aaa
cs
add
jp
mov
in
lret
pop
inc
iret
dec
mov
insb
mov
mov
ret
int3
xor
sub
fistpl
sahf
out
sbb
xor
mov
ret
inc
xchg
jge
shll
out
mov
jo
lds
xchg
sbb
inc
ss
cmpsb
xlat
sarl
fldl
mov
test
nop
inc
pop
push
lret
sbb
ljmp
in
dec
cmp
or
call
jge
jmp
jne
test
outsl
cmpsl
mov
ret
stc
ror
pop
or
repnz
adc
loop
rorb
inc
jae
adc
xor
lock
jbe
cmp
xlat
ss
outsb
pop
jmp
pop
xor
mov
imul
or
add
rolb
dec
jge
aad
mov
iret
cmp
adc
movsb
sbb
push
mov
repz
cs
inc
dec
push
cmc
movsb
or
pop
into
mov
jno
loop
sti
decb
sbb
jo
movsl
jl
incb
add
jnp
jmp
push
je
mov
add
and
insl
cmp
addl
leave
shlb
mov
addr16
incb
adc
in
je
ljmp
pop
pop
mov
xor
enter
les
push
xchg
mov
cmpsb
lret
pusha
inc
je
push
pop
fcomps
or
test
iret
ss
fsin
cli
loope
adc
mov
fiaddl
out
pop
jg
daa
sbb
cmc
xorb
xchg
inc
addr16
insb
js
fdivrl
loop
fstpt
fisttps
mov
dec
jle
push
cmpsl
inc
add
lock
add
push
mov
mov
sbb
popf
mov
dec
cmp
push
outsl
jg
jp
movsb
and
outsl
xlat
leave
jmp
fisttpl
pop
cmp
inc
ficoms
and
lahf
inc
insb
das
cmp
sbb
pop
roll
push
push
push
cmp
or
cmp
add
lea
mov
inc
sahf
lcall
or
shll
jnp
xor
xor
into
xchg
pop
repz
shlb
push
jle
push
add
clc
dec
jbe
cmp
fldt
das
ja
aaa
hlt
sbb
and
push
mov
adc
int
xor
in
sub
sub
and
int
or
ja
xchg
push
inc
rcr
jns
enter
pop
push
dec
jb
pop
cmpsl
xor
addr16
push
mov
ffree
insl
add
mov
mov
addr16
pop
push
mov
cmp
jg
add
insl
test
int
or
push
mov
out
or
add
in
xor
pop
xor
xlat
fucomp
pop
mov
adc
adc
addr16
inc
das
or
out
scas
ds
adc
xchg
cmpsb
mov
cli
dec
jno
test
insb
sub
push
jl
call
push
xor
cmpsl
je
sub
lcall
test
andnps
and
adc
fs
icebp
outsb
shrl
and
fdivrl
inc
fstl
sbb
nop
add
mov
push
dec
add
sbb
shll
loopne
mov
lock
sbb
and
out
cld
loop
jmp
sahf
jno
out
dec
out
dec
divl
shrb
gs
pop
daa
adc
loopne
xchg
cmp
stos
pop
or
sbb
aad
test
inc
adc
push
xchg
mov
les
cmp
into
jmp
adc
adc
xor
in
sarl
xchg
or
sub
push
mov
loope
clc
ljmp
sbb
repz
push
stos
and
repnz
pop
sub
push
sub
pop
mov
fpatan
mov
orb
mov
mov
decl
jmp
icebp
inc
adc
into
mov
stc
and
push
add
aaa
sbb
fstl
jecxz
mov
xorb
sarl
xchg
pop
inc
adc
push
arpl
call
pop
pop
inc
leave
or
mov
loope
lahf
pop
xchg
ficomps
sahf
ljmp
sub
scas
in
xchg
sub
push
rcrl
cmpsl
pop
jecxz
lret
jae
sbb
shlb
shlb
popa
nop
fwait
adc
fs
cmc
insl
lods
push
es
repnz
shr
jge
xchg
rolb
lret
lock
in
jbe
mov
out
test
jno
push
stc
or
dec
xchg
adc
mov
adc
push
mov
push
loope
inc
jl
mov
sbb
loope
out
mov
adc
loope
cmpsl
mov
jg
jae
jnp
inc
mov
dec
cmpsl
or
pop
pop
icebp
rcl
cltd
add
push
clc
xor
add
jns
mov
rcr
push
ja
mov
adc
bound
and
lahf
rcrl
mov
pop
testb
imul
dec
push
call
incl
pop
iret
jno
adc
mov
je
mov
mov
xor
pop
daa
xlat
adc
sub
cmp
repz
push
xor
mov
icebp
xchg
addr16
xchg
sbb
adc
dec
mov
jge
popa
mov
push
jg
mul
lds
dec
cmc
dec
test
cmp
insb
movb
pop
ja
push
lcall
sub
sbb
test
je
and
fs
subb
and
jmp
or
mov
jmp
fwait
sti
mov
mov
ds
pop
stos
mov
fisttps
xchg
push
movsl
inc
nop
flds
pop
mov
in
jns
and
popf
inc
insl
xor
sub
cwtl
int
movsl
fisttpll
add
imul
cmpsb
lahf
pop
cwtl
daa
push
push
push
fldl2e
jae
test
jo
mov
inc
jmp
jg
clc
lahf
pop
or
xchg
cmp
xor
rorl
scas
xor
mov
dec
ror
test
xchg
jmp
mov
popa
push
push
mov
mov
xchg
xor
push
pop
imul
xchg
lds
mov
sbb
sti
mov
lahf
divl
lods
mov
fwait
pop
int3
add
iret
push
incl
xchg
addr16
cltd
into
lret
xchg
pusha
arpl
das
mov
call
mov
cmp
hlt
add
daa
lcall
mov
cmc
adc
adc
push
sbb
push
sub
sbb
or
push
out
lret
add
jae
call
cmp
aas
shlb
lret
mov
add
pusha
movsb
out
dec
packsswb
add
rorb
sti
loop
sub
pop
sbb
sub
sbb
push
imul
mov
or
push
out
in
dec
mov
iret
dec
std
jne
mov
xchg
mov
or
lret
aam
cwtl
imul
and
push
ror
mov
enter
aas
dec
out
and
add
push
mov
hlt
pop
shlb
mov
push
in
jnp
inc
pop
inc
fcomip
incl
jp
jae
and
cmp
aam
ss
shrb
push
push
adc
cwtl
dec
sahf
dec
insb
mov
inc
mov
lds
aaa
cmp
nop
stc
xor
arpl
test
sub
in
or
mov
pop
jo
insb
stc
sbb
and
cmp
lock
mov
call
add
dec
popf
nop
pop
add
ljmp
inc
or
jl
sub
xchg
mov
jae
jnp
fs
mov
fidivrs
hlt
cmpsl
xor
fdivrl
aaa
and
mov
retw
test
rcl
pop
sub
xlat
add
and
jmp
sbbb
cwtl
sti
sub
in
fisttpl
push
out
or
fdivs
mov
pop
dec
rorl
dec
loopne
push
push
mov
clc
fidivl
xchg
inc
outsb
popa
sbb
mov
xor
aad
aas
jo
jo
daa
fiadds
lods
addr16
repnz
xchg
nop
add
test
lods
sahf
ljmp
cmpsl
clc
pop
sbb
mov
rorl
jae
jo
mov
outsb
shll
fdivl
or
incl
mov
in
xchg
fs
in
lahf
inc
adc
ja
sub
fdivrl
push
rcrl
imul
push
daa
push
loop
mov
in
dec
mov
loope
add
jp
jnp
cmp
out
in
leave
mov
mov
push
dec
es
std
cmp
in
lods
cmp
arpl
jmp
outsb
dec
adc
push
or
or
stos
cld
inc
dec
js
sti
push
pop
fcoml
mov
into
jp
add
jns
push
scas
xchg
push
pusha
cmp
xor
in
sub
arpl
ljmp
cld
cmp
push
rcll
fsubl
jl
fisttpl
inc
lods
pop
inc
fcmovb
lahf
sub
inc
ret
and
lods
cmp
jb
xchg
test
jo
ljmp
jmp
add
ret
fldenv
lds
adc
lods
adcl
lock
flds
jle
sub
enter
out
std
sbb
movsl
or
add
xchg
sbbb
fdivrs
sub
divb
lds
stc
inc
cmpsb
mov
rorb
stos
imul
clc
and
rcll
dec
js
mov
clc
das
test
xlat
ljmp
xchg
or
cmp
insb
mov
push
mov
in
add
mov
pushf
das
pop
dec
test
dec
out
test
outsl
in
out
mov
js
dec
cmpb
inc
mov
dec
cltd
xchg
jae
jo
adc
ret
sub
jbe
clc
add
cmp
mov
rcll
inc
das
call
or
and
pop
out
jmp
cmpsl
loopne
into
inc
mov
pop
movsl
ja
sub
xchg
ja
xor
lods
inc
xor
cmc
sbb
jge
ficoms
sbb
std
lcall
xor
lock
mov
adc
cmc
dec
fmull
int3
movsb
mov
inc
lret
scas
out
imul
xchg
add
es
enter
mov
cmpb
mov
shr
es
and
sbb
dec
out
fnstsw
xchg
jmp
mov
lahf
repz
aas
jle
lds
outsb
jo
je
cmp
adc
bound
jo
repnz
sbb
pusha
mov
test
shrb
xor
sarb
shl
push
movl
pop
hlt
ret
jl
adc
add
scas
dec
sub
out
pop
adc
pop
je
xor
filds
push
ret
cmc
xor
and
dec
pop
cmc
xlat
shll
out
cmp
lcall
cmp
ljmp
jmp
and
or
sbb
divl
xchg
lods
ffreep
leave
sbb
mov
jnp
lret
divl
pop
mov
mov
cmpsl
es
sub
mov
cmp
mov
lahf
or
xor
sarb
push
xchg
rcrl
in
loope
xchg
push
in
add
add
int3
add
jns
sub
push
xor
push
ds
loope
cmp
cmc
pop
in
lret
mov
leave
cmp
outsw
push
inc
in
or
fwait
call
jg
mov
stos
js
rcl
pop
cltd
lock
idivl
push
loopne
mov
add
out
je
cld
or
enter
ret
mov
fld
inc
mov
jecxz
out
jo
inc
rolb
xchg
fadds
lcall
aad
fs
jmp
aas
pusha
test
jno
cmp
jbe
dec
or
stos
dec
aam
add
ret
into
test
cmp
xchg
stos
jno
loop
clc
mov
rcll
insb
int
scas
jmp
mov
pop
movsb
dec
xchg
mov
jo
movsl
arpl
sub
and
adc
fsubrl
outsb
js
dec
sub
test
push
add
mov
jecxz
notl
add
aad
xchg
jmp
or
dec
popl
add
inc
xchg
ja
jp
test
inc
out
push
leave
int3
push
jne
addr16
adc
test
push
rcrb
jl
mov
xor
test
fisubl
jecxz
inc
mov
int
pop
orl
sahf
ss
pop
push
std
push
mov
push
mov
sarl
and
sti
rorb
stos
je
adc
ret
push
int3
dec
adc
imulb
mov
mov
push
push
or
xor
dec
out
das
shll
xchg
scas
mov
inc
jb
push
mov
subl
ds
inc
daa
clc
xchg
mov
loop
addr16
push
outsb
stos
int3
xchg
das
aam
dec
push
jb
xchg
push
inc
or
xlat
mov
out
push
and
sub
cmp
xorb
jecxz
push
shll
sub
imul
fisubrs
negb
adc
stos
pop
push
fldt
add
std
ds
jne
je
push
mov
dec
lcall
aam
add
xchg
dec
aad
cld
sbb
cmpsl
js
vpaddw
insb
add
andl
dec
aaa
in
cvtps2pd
daa
push
aam
mov
loope
inc
arpl
fsubl
call
leave
inc
xchg
push
roll
lods
mov
push
rcl
add
mov
test
xchg
in
arpl
sub
and
inc
push
cmp
fnstenv
push
data16
pusha
push
arpl
cmpb
rcll
xor
ds
mov
or
subl
pusha
daa
xchg
xchg
or
enter
fbld
xchg
push
mov
or
mov
daa
out
popf
aad
push
fsub
aas
clc
xor
es
or
in
mov
cli
adc
add
les
mov
inc
mov
push
insb
lret
push
bound
stos
sbb
les
enter
je
test
pop
pop
xchg
lcall
and
arpl
std
mov
mov
sbb
jnp
icebp
sahf
sti
dec
push
mov
out
loope
insb
out
cmpsb
dec
cmpsb
loop
popf
js
mov
xor
push
dec
es
sbb
jg
and
sub
out
testl
stos
sahf
sub
pushf
jg
jp
int3
into
push
mov
shrl
jp
sub
pop
dec
jo
pop
outsb
mov
xor
xlat
clc
mov
loopne
shll
loopne
in
cmpb
outsb
not
jbe
jp
sbb
rol
into
push
xor
int3
xchg
in
pop
test
jl
pop
outsb
or
xchg
push
xor
addr16
and
imul
cmp
push
lret
cltd
stc
or
xchg
scas
lcall
mov
sub
push
jge
pusha
out
into
insb
mov
pop
lahf
fwait
cmp
pop
mov
xchg
inc
cmp
cmc
mov
aas
sub
jne
cmp
mov
dec
jg
cmpsl
fwait
cmp
dec
pop
or
pop
loopne
inc
mov
insl
enter
pop
xchg
pop
data16
push
inc
cli
push
mov
mov
or
iret
inc
mov
out
and
add
sub
in
mov
mov
mov
and
sbb
lods
aaa
mov
out
rcl
inc
lods
adc
jbe
sti
push
mov
popf
fcmove
jns
add
out
int
push
int
sbb
subl
into
mov
test
lods
loope
lret
jle
iret
cmp
int3
loope
es
imul
std
outsl
lods
inc
pop
divl
add
call
es
add
xchg
xor
push
in
lea
je
shrb
xchg
mov
push
jno
and
int3
ja
jns
imulb
mov
mov
and
mov
mov
jp
xor
in
mov
int3
hlt
jnp
sbb
inc
addl
pop
fsubl
lahf
das
sub
fidivl
das
adc
sub
inc
adc
mov
xchg
leave
lea
xchg
fcmovne
jns
mov
jno
jae
fdivl
xlat
push
push
mov
fists
mov
ja
inc
gs
and
fildl
daa
push
clc
inc
jnp
fisubl
hlt
cltd
aaa
popa
mov
xchg
pusha
or
push
arpl
lret
test
inc
fisttpll
test
jnp
pop
fists
in
xchg
lods
sbb
sti
jmp
xor
lahf
xchg
mov
dec
arpl
fwait
je
fdivrs
sub
cmc
cmp
nop
fstl
jle
sub
test
lea
pop
inc
or
mov
fidivs
jmp
mov
jp
js
cld
jne
xchg
mov
or
insb
loopne
add
cmp
into
adc
adc
dec
xchg
push
xchg
xchg
add
sarb
jae
add
ja
pushf
lcall
or
dec
cmp
sub
push
movb
and
inc
dec
negb
aas
push
jno
inc
ja
inc
fs
jle
icebp
ret
inc
mov
mov
icebp
rclb
xor
pop
dec
cmp
mov
mov
push
stos
push
push
push
sbb
fdivs
pusha
cwtl
lods
scas
pop
add
lds
adc
ss
repnz
sbb
and
ds
xchg
rolb
mov
jp
xorl
or
cmp
adc
mov
out
mov
lcall
std
out
or
pop
adc
jbe
bound
jp
jno
clc
sub
sub
fwait
mov
int
stos
js
je
pushf
mov
movl
inc
out
add
pop
mov
or
mov
push
push
out
dec
adc
sti
mov
sub
or
or
ret
lret
push
pop
dec
push
xchg
jp
or
mov
inc
push
lea
leave
inc
js
xchg
testb
jecxz
test
pop
rcr
scas
sbbl
mov
mov
and
shlb
sub
jno
test
inc
cmc
pop
cmp
imul
add
and
inc
xor
cmp
push
dec
add
rcr
xchg
push
sbb
push
and
lock
lds
inc
rcrb
loopne
cmp
popf
inc
dec
and
bound
push
mov
jl
and
xor
push
idivl
xchg
and
fmuls
fistps
je
adc
fs
aam
sarb
imul
test
icebp
out
out
out
add
mov
jmp
and
gs
cmp
and
inc
mov
out
cmc
xchg
jge
jae
sbb
imul
aam
stos
xor
out
dec
inc
dec
mov
mov
shl
out
jp
clc
mov
scas
cmpsl
sbb
mov
sahf
decl
sbb
ds
add
sqrtps
push
dec
and
dec
jmp
jmp
cmp
jecxz
and
icebp
fcompl
pop
mov
push
cs
stos
fmul
push
jl
cmp
stc
icebp
mov
mov
iret
jns
or
jne
xchg
jns
push
mov
stos
lods
adc
pop
dec
aad
cld
loop
push
adc
pop
jnp
nop
imul
out
adc
shrb
mov
pop
push
xorl
or
lahf
ret
jg
and
xor
jle
xlat
jne
mov
jno
mov
loopne
es
ret
mov
xchg
std
dec
xchg
or
xchg
dec
adc
mov
cmp
je
adc
mov
bound
mov
push
cmp
mov
xchg
cld
inc
cmc
mov
dec
lret
leave
push
mov
xchg
int3
lea
sti
je
sahf
js
out
fsts
jae
es
in
jl
popa
and
sub
aad
fnstcw
nop
cltd
sti
xor
push
nop
out
xlat
cmp
rep
jmp
inc
dec
out
out
fisubl
mov
add
ret
jns
loope
popa
repz
adc
or
lods
out
add
sbb
xchg
adc
gs
xchg
sahf
xchg
cltd
xchg
lahf
loope
repnz
pop
sub
mov
out
mov
pop
scas
sub
in
inc
and
cwtl
clc
mov
imul
in
bnd
cli
mov
js
lahf
fiadds
dec
int3
cmpsb
cld
pop
inc
in
adc
xchg
pop
orb
sbb
and
or
and
fistpl
push
pop
ja
sub
sub
sub
add
lret
sbb
setae
clc
jae
pushf
hlt
jne
inc
pop
rcr
add
repnz
jge
jp
jecxz
add
outsb
out
loopne
fwait
not
mov
imul
pop
shl
sub
mov
jno
int
jne
shl
push
scas
movsl
mov
fld
inc
stos
dec
push
jo
clc
inc
xchg
mov
leave
lods
test
mov
aam
dec
rorb
dec
sub
ss
mov
xor
adc
jns
mov
shr
test
xor
daa
enter
jmp
cmp
ficompl
push
xor
daa
dec
pop
sub
lret
add
mov
bound
cmp
adc
into
xor
mov
or
clc
gs
dec
adc
shl
dec
loopne
cmc
in
test
jns
and
fwait
xor
aas
cmpsl
cmp
or
cmp
push
mov
push
lods
sbb
xor
add
push
push
mov
inc
out
inc
rcr
aam
pop
lahf
adc
sub
iret
adc
xchg
daa
and
jnp
pop
shlb
xchg
mov
push
cmp
or
mov
mov
and
fucom
push
mov
xor
gs
inc
mov
push
shrb
xlat
mov
mov
cmp
xor
das
mov
fstl
scas
sub
cmpsl
lods
cmp
cltd
in
out
pop
outsl
iret
xchg
sub
sub
mov
xor
ds
iret
data16
dec
fisubs
and
or
xchg
dec
cmp
lret
push
jecxz
lea
cmp
xchg
test
jnp
mov
rorb
test
loop
adc
test
cmp
out
imul
aam
movb
dec
or
out
sbb
inc
pop
xor
jge
mov
rolb
lods
or
pop
jmp
int3
aas
inc
cmp
imul
push
fstps
jno
inc
or
idivl
pop
arpl
jns
or
jle
pusha
imul
sbb
jecxz
adc
mov
mov
outsb
fcoms
add
add
iret
mov
sbb
lret
jbe
lar
movsl
pop
fisubrl
arpl
xchg
dec
push
ss
xchg
mov
scas
xor
dec
pop
daa
dec
sbbb
fistl
jp
push
and
mov
ja
adc
xorl
sbb
fidivrl
test
jb
mov
sbb
adc
xor
xor
mov
pop
inc
pop
cmp
cltd
adcb
stc
scas
lods
movsl
mov
push
in
test
aaa
xor
cmp
push
dec
mov
daa
sub
xchg
call
sbb
lret
mov
mov
adc
lret
vandnps
dec
cld
popf
and
ds
push
call
pop
ljmp
test
shlb
xchg
cli
adc
inc
xor
cmpsl
dec
jne
subl
out
shl
addr16
cmp
subl
sub
push
popa
adc
test
decb
or
pop
test
pop
sub
popa
push
nopl
push
aad
cs
shrb
mov
inc
int3
aas
inc
je
mov
movsl
scas
mov
inc
jno
cmp
sub
gs
sbb
xchg
inc
push
les
dec
add
insb
sbb
pop
in
mov
xor
mov
scas
inc
icebp
mov
out
aas
jmp
add
testl
int3
out
or
push
sbb
insb
int3
jbe
pop
fistl
test
pusha
lcall
pop
add
lret
stc
jnp
pop
das
jge
xchg
jp
insl
dec
sahf
fstp
mov
jb
movsb
scas
movsb
pop
xor
insb
icebp
mov
ror
push
movb
xor
lret
fsubrs
aaa
pop
inc
repnz
fcomps
xor
pop
repz
mov
inc
push
cld
jno
sbb
mov
mov
imul
cltd
cmp
mov
or
loope
test
or
push
stos
loopne
cmpsl
outsb
lahf
jge
gs
push
mov
into
insl
iret
cmp
insl
out
pop
xor
hlt
test
xor
mov
ret
cs
cmp
push
in
cwtl
hlt
popf
movsb
int
mov
cmc
push
inc
gs
fstl
psadbw
movsb
sub
jge
cwtl
push
movsb
dec
lods
inc
push
fcomps
xlat
or
or
sbb
lret
gs
cmp
inc
ja
ljmp
nop
mov
repz
jmp
mov
aaa
xor
aaa
cmpsb
jae
ret
in
cmp
push
pop
push
shll
ret
pop
sbb
ficompl
xchg
push
dec
shll
in
imul
push
sub
and
test
xchg
cmp
push
mulb
push
adcb
pop
outsb
pop
ja
push
add
in
sar
mov
or
sbb
loope
cmp
inc
sub
test
hlt
in
xor
xchg
mov
into
cld
test
arpl
loopne
js
xor
adcl
jg
jp
mov
xchg
jmp
popa
push
mov
jge
lcall
iret
add
fisttpl
mov
push
ss
add
mov
mov
lahf
or
test
sub
leave
mov
repz
xchg
mov
int
jmp
out
movsl
std
addr16
pop
sbb
rcr
ds
mov
mov
mov
jb
pusha
cli
sub
aaa
xor
push
pop
jb
sahf
sti
dec
idivl
outsl
shll
int3
cmpsl
cmpsl
mov
call
jp
fnstsw
adc
ficomps
sbb
inc
pop
addr16
pop
xchg
xchg
sbb
dec
idivb
jbe
sub
sbb
fsubl
xor
inc
jmp
or
test
sbb
mov
mov
push
outsb
inc
lea
or
dec
dec
inc
mov
push
jl
jmp
ds
cmpb
imul
es
loopne
cmp
fldcw
fwait
imul
test
pop
cmpsl
xchg
in
mov
mov
cmp
sub
cli
jle
jne
lds
sbb
popa
clc
andb
enter
adc
dec
dec
sub
out
add
xchg
mov
aaa
inc
mov
mov
sbb
cmp
imul
fbstp
imul
dec
call
cmp
out
inc
and
pop
mov
lcall
test
test
adc
sub
hlt
pop
and
fiadds
mov
iret
xor
fmuls
popa
sahf
fstl
jle
or
xchg
push
cmp
stos
mov
leave
pop
fwait
mov
int3
cli
mov
stos
jle
jge
xchg
fistl
arpl
jo
lahf
popf
not
dec
and
insb
sbb
mov
jg
xchg
adc
dec
cmpsl
dec
pop
les
sub
jne
aaa
ds
mov
mov
aaa
scas
push
outsl
jne
fstl
sub
lret
push
cld
xchg
outsl
ret
push
add
sbb
leave
lret
jo
rcl
nop
lods
test
pushf
xchg
push
xchg
adc
add
or
pushf
jecxz
adcb
dec
pop
mov
xor
setge
cmpsb
cmpsl
hlt
mov
jbe
test
jne
popf
or
or
repnz
dec
nop
pusha
ljmp
fdivr
push
jbe
or
lods
gs
in
fs
and
jae
icebp
dec
push
lret
addr16
loope
ja
add
dec
int
mov
pop
scas
add
pushf
sub
js
mov
pop
insb
sbb
adc
mov
mov
adc
ljmp
mov
lcall
fstps
xchg
mov
mov
jle
and
ds
outsb
aaa
push
pop
gs
and
orl
adc
or
aam
cli
pop
iret
mov
sbb
adc
mov
ljmp
jecxz
out
sbb
mov
jge
and
pop
pop
push
xor
imul
scas
push
sub
subb
pop
out
fucom
jae
jmp
cmpsl
adc
mov
cli
xchg
fldln2
adc
into
jle
mov
loop
movsb
es
popf
jae
sbb
xor
cmc
or
scas
pop
push
daa
ljmp
fwait
imul
ret
lcall
loop
repz
insb
or
lea
mov
pop
mov
out
shl
mov
jp
lret
leave
nop
jne
push
push
cmp
daa
cmp
xchg
xchg
out
adc
loop
add
mov
std
dec
mov
mov
push
pop
push
movsl
jl
jnp
push
or
aad
insb
stc
lock
cli
rorb
clc
pushf
mov
push
cmp
shll
dec
inc
test
xchg
cmp
cmpsl
and
mov
jne
mov
add
xor
mov
mov
ljmp
cwtl
bound
jecxz
push
aad
sti
fcomi
and
stc
xchg
lret
push
shrb
daa
jne
pop
insb
jg
and
cltd
jp
int3
in
lea
je
sbb
adc
int3
insl
mov
sub
test
leave
adc
mov
mov
ljmp
inc
xor
mov
xchg
pop
lds
mov
sbb
in
dec
repz
pushw
and
dec
rorl
inc
lods
mov
scas
sbb
mov
inc
je
dec
lcall
pop
xor
xchg
test
inc
jecxz
xor
pop
xchg
clc
xchg
cmp
push
popa
mov
adc
xor
xor
test
mov
mov
bound
pop
sbb
into
ret
jmp
stc
cmp
sub
push
push
push
jns
jp
rol
arpl
mov
out
mov
jbe
adc
in
mov
dec
outsl
mov
mov
and
mov
ds
and
imul
lds
bound
insb
enter
sub
sbb
jno
xor
lcall
fnsave
repz
mov
mov
fsubrl
nop
loopne
scas
add
jecxz
lret
add
jns
cmp
xlat
mov
iret
pop
movsb
mov
xor
adc
dec
mov
mov
add
mov
sbb
sbb
movsb
and
aam
dec
shlb
pop
shll
lahf
lret
daa
cmp
pop
repz
xor
cmpsb
mov
or
data16
sbb
shlb
or
inc
xlat
iret
ss
les
lods
loop
imul
je
xor
push
cmp
jmp
ja
dec
scas
pushf
popf
xchg
shlb
cltd
pop
pop
imul
pusha
push
out
jecxz
bound
movsb
adc
outsl
mov
shll
negl
xchg
cld
or
or
pop
inc
mov
jle
pop
adcl
clc
or
xchg
scas
in
stos
jo
xchg
bound
mov
dec
lahf
push
push
aas
jg
jmp
jo
add
fnstenv
push
inc
ds
aad
fnstsw
notb
mov
mov
adc
ds
mov
icebp
adc
nop
mov
hlt
mov
fwait
mov
push
fcmovne
sahf
xchg
xor
pop
scas
adc
and
sub
out
jg
test
pop
push
cmp
stc
xor
cs
jg
lcall
xchg
rclb
movsl
xor
loopne
sub
pushf
mov
lea
shlb
mov
sbbl
fnstenv
adc
inc
dec
test
decl
test
cmp
movsl
xor
insl
mov
in
mov
cld
mov
and
nop
test
xor
cld
fwait
addr16
and
fsub
push
push
cmpsb
xlat
push
imul
or
movsb
lahf
popf
add
jnp
xchg
or
ret
jne
hlt
push
and
cltd
sbb
xor
aad
jle
jae
dec
mov
inc
jns
jb
dec
inc
adc
loopne
lahf
dec
pop
adc
popf
xchg
js
dec
ret
cmp
nop
cmc
adc
jo
add
cltd
insb
dec
dec
pop
add
out
and
pop
sub
inc
jmp
push
dec
or
mov
repz
bound
jb
add
shl
frstor
fstpt
jno
xor
sub
jae
nop
je
dec
das
mov
jp
dec
fisttps
sbb
imul
ret
rcrl
xor
pop
or
mov
loopne
in
cltd
pop
xchg
or
loopne
aam
call
arpl
sub
inc
test
imul
and
sbb
data16
mov
test
mov
xchg
repz
or
inc
fs
in
jbe
std
sub
xchg
lret
xor
int
aad
inc
pop
data16
mov
mov
push
add
push
negl
imulb
out
pop
je
inc
xchg
lods
adc
cmpsb
cmpsl
sbb
pop
bound
fbld
ret
cmp
mov
sqrtps
xchg
pop
mov
std
sbb
aas
dec
cmpsb
add
pop
mov
sub
cmpsb
insl
mov
jmp
in
imull
scas
sub
or
jecxz
cs
stos
add
xchg
insl
fs
mov
add
jno
scas
adc
push
push
clc
stc
das
push
inc
mov
dec
shl
mov
lds
sbb
inc
mov
sbb
xchg
outsb
lea
jg
push
insl
arpl
and
jns
idivb
dec
popa
xor
jns
pop
and
sbb
movsl
adc
shrd
push
ret
pop
adc
adc
inc
sbb
push
jbe
or
fistps
mov
lahf
les
mov
sbb
jl
icebp
mov
je
lahf
inc
sbb
ljmp
sub
outsb
lcall
pop
jge
sbb
xchg
sub
xchg
or
jp
jnp
hlt
cmc
sahf
or
xrstor
mov
pop
cwtl
in
ficoml
in
lret
adc
cmp
inc
jmp
sub
dec
jge
mov
fisubrl
insb
inc
pop
dec
pop
in
lahf
and
mov
fdivrs
sbb
pop
loop
adc
bound
test
xchg
scas
in
xchg
jb
pop
scas
das
mov
out
pop
iret
test
add
adc
xchg
ror
loop
pop
sahf
jp
xlat
push
bound
iret
xlat
inc
mov
incb
sub
mov
fildl
mov
xor
mov
scas
aas
dec
inc
cmp
aaa
cmpsl
scas
aaa
jno
inc
xor
sub
pop
data16
adc
gs
xchg
mov
pop
mov
pop
test
pusha
stos
adc
les
or
xchg
stc
sub
shr
and
jl
inc
jns
push
and
cld
inc
sti
outsb
lock
enter
add
ss
and
sbb
and
push
xlat
loopne
frstor
mov
das
xchg
inc
hlt
lcall
sarl
in
arpl
hlt
fnstsw
adc
cmp
loope
xchg
or
adc
adc
imul
xchg
xchg
sbb
jne
inc
aaa
inc
outsb
scas
outsl
sub
xchg
xor
jns
jbe
inc
in
pushf
push
fisttpl
in
sbb
cmc
xchg
or
mov
and
mov
xor
jle
lods
xchg
push
stos
sbb
mov
nop
adc
flds
stos
rorb
cld
ss
or
adcl
adc
sarb
outsb
mov
punpckhbw
cltd
ss
mov
cmpsl
jp
lret
adc
cmp
push
and
dec
ja
mov
stc
aam
out
sub
mov
xchg
pop
dec
popa
mov
divb
pop
push
insl
mov
or
and
icebp
enter
xor
xchg
mov
or
jno
mov
pop
mov
rcr
mov
nop
out
ljmp
js
dec
lcall
clc
clc
jge
pop
movsl
lcall
repnz
dec
adc
stc
adc
fdivl
enter
or
mov
gs
dec
dec
and
mov
lret
loopne
xor
or
cmp
out
jmp
xorl
aaa
xor
sarb
mov
js
cmp
push
movsb
push
or
shlb
movsb
xor
arpl
dec
outsb
incl
inc
ds
sub
fstp
subb
shl
sbb
cmp
mov
sbb
cwtl
mov
jle
and
fsubl
push
adc
xor
loop
push
cmp
mov
das
mov
leave
push
test
inc
jno
add
xchg
in
in
add
push
jle
je
cmp
mov
push
lock
lea
sub
cmpsl
dec
notb
in
loopne
scas
jne
jns
ffreep
cld
inc
mov
dec
and
pushf
cld
pop
int3
test
push
rcl
loope
fdivl
popf
ds
push
popf
sub
test
or
rcrb
fiaddl
mov
loop
dec
repz
ljmp
insl
mov
mov
lods
push
stos
fdiv
cmp
cmp
mov
test
push
xchg
fwait
stos
inc
lret
add
lret
sbb
les
cmp
out
jae
insl
ljmp
test
xor
add
arpl
or
movsl
movsb
dec
and
xchg
or
popa
mov
jo
sbb
sbb
test
xchg
xchg
rorb
mov
rorb
insb
lods
mov
negl
movsb
fxch
xchg
loop
add
mov
addl
hlt
rcl
mov
push
out
dec
cmp
mul
lahf
fiaddl
ljmp
mov
pop
sbb
mov
adc
and
pminub
test
leave
testl
fwait
jno
loopne
test
icebp
xor
mov
out
fmull
jne
and
pop
outsb
js
repz
std
mov
sub
filds
popf
sbb
lret
mov
js
shrb
ja
sub
aas
or
sbb
pop
aad
cld
push
dec
inc
push
mov
dec
fbld
daa
adc
fwait
pop
or
rcrb
daa
push
jmp
movsl
scas
ror
cmp
ss
xchg
gs
call
mov
bound
push
push
outsl
adc
jno
out
sbb
inc
sub
jbe
stc
fwait
bound
xchg
fdivrl
and
adc
lahf
nop
outsl
xlat
jne
fisttps
test
ret
pop
dec
or
insb
add
imul
inc
and
jl
jp
addl
ja
cwtl
test
or
jle
lock
adcb
xchg
jae
adc
sub
lahf
cmp
sbb
xchg
adc
je
mov
int
cmp
xchg
dec
sbb
ficoml
mov
imul
xchg
pop
dec
jnp
into
es
stos
cmp
mull
repnz
cmp
fs
aaa
cld
faddl
ret
cld
scas
jbe
and
jge
push
push
and
push
jl
adc
mov
jecxz
enter
add
sub
dec
inc
xorb
sbb
cld
or
ja
enter
adc
scas
mov
and
mov
push
scas
pusha
ja
int3
lods
mov
imul
cli
and
mov
jno
rep
adc
inc
lods
push
xchg
mov
sbbb
mov
xchg
and
jg
int3
popl
subl
addr16
sub
mov
jp
out
ja
jb
ss
stos
icebp
in
in
cwtl
and
loop
stc
lds
or
cltd
mov
mov
shll
sarb
push
dec
adc
ljmp
mov
push
aad
mov
mov
cmpl
cmovns
xchg
stc
in
cmc
mov
xor
stos
fs
sub
ret
in
pop
add
mov
dec
dec
mov
gs
nop
cmp
ret
ret
sub
mov
shlb
xchg
jg
mov
jp
int
inc
in
fildl
add
shl
pop
xchg
incl
dec
mov
jo
xor
sbb
cmpb
in
insb
cmpsl
in
scas
cmp
xor
lahf
out
mov
and
sub
into
add
inc
adc
imulb
pop
in
mov
mov
dec
nop
inc
fsubp
je,pn
or
rcll
mov
cwtl
adc
lea
xor
and
sub
xchg
sub
stos
aas
sub
imul
repz
jecxz
int3
pop
gs
sbb
mov
fisubrs
es
bound
lahf
mov
in
mov
pusha
jbe
mov
mov
sbb
or
repz
in
loope
pop
xor
cmp
jb
mov
scas
aaa
fs
cmp
into
imul
fs
js
or
pusha
je
sbb
push
stos
das
mov
jno
insb
jg
pop
jbe
and
int3
insl
jbe
and
or
cmp
jmp
jnp
mov
dec
out
cmp
fs
and
jge
xchg
mov
stos
cmp
mov
push
mov
stos
dec
mov
sub
sub
lret
xchg
mov
mov
mov
mov
push
lock
pop
xchg
sub
jg
jno
orl
mov
inc
mov
fisubs
sbb
cwtl
add
loop
loop
enter
test
scas
and
cmc
mov
ret
dec
insb
lods
test
cs
in
test
xchg
cmp
xchg
cmpsl
or
push
stc
aaa
jge
cmp
lock
mov
fs
add
mov
jae
cmpsb
xor
push
push
or
mov
and
xchg
fs
fidivrl
jne
lods
jo
arpl
mov
add
outsl
out
jle
jecxz
rcrl
inc
and
mov
cmp
xlat
push
dec
mov
shlb
in
xor
jg
and
fst
mov
fistpll
loopne
pop
int3
dec
rclb
mov
mov
sbb
adcb
jp
outsl
or
std
and
iret
movsb
data16
xrelease
push
imul
loopne
push
enter
jge
xchg
mov
rcr
jns
enter
cmpsb
adc
call
sbb
mov
hlt
fwait
sti
data16
sbb
or
mov
rcll
mov
mov
lcall
ljmp
lds
add
out
insl
int3
std
sub
mov
nop
enter
pop
or
stos
popf
inc
dec
sub
mov
push
les
push
in
dec
or
cld
shrb
mov
js
push
stos
das
insb
xchg
push
lret
cmp
icebp
mov
push
sub
out
and
xchg
inc
mov
popa
and
sbb
add
sbb
pusha
dec
cld
jne
btc
dec
dec
mov
iret
icebp
dec
in
mov
repnz
cmp
mov
push
inc
inc
mov
test
mov
or
fbld
aas
cmp
and
loopne
inc
sahf
out
xor
outsl
ret
popa
xorb
pop
xor
sbb
gs
and
fucomi
adc
pop
push
jne
lret
mov
sub
jecxz
xchg
push
jne
rcrb
add
daa
sbb
lods
test
das
mov
dec
mov
in
cwtl
out
push
es
sbb
aas
scas
lcall
cltd
es
push
xlat
mov
lds
dec
sub
repnz
cwtl
or
mov
jle
dec
cmp
test
mov
inc
test
cmp
add
cmp
mov
jge
adc
or
and
das
pusha
sub
xor
sub
gs
fmuls
pop
decl
js
nop
aas
pop
pop
cli
mov
pop
stc
insb
ret
int3
add
xchg
outsl
mov
inc
push
xor
cmpsl
sahf
insb
and
adc
insb
pop
stc
xchg
bound
fsubl
pop
add
ret
jae
enter
inc
adc
fadd
test
ss
adc
hlt
int3
int3
test
mov
adcl
pop
adc
and
out
icebp
inc
mov
aas
xchg
pushf
inc
aad
imul
xchg
pop
out
fdivrl
shrb
lret
or
push
push
mov
sub
xchg
mov
ja
inc
dec
scas
jns
fbld
adc
movsb
out
aas
divl
sub
aaa
movsl
inc
ret
xor
adc
loopne
pop
mov
xchg
test
pushaw
in
mov
lods
sbb
or
mov
rep
pop
adc
mov
ljmp
rcrb
in
jg
imul
lahf
pop
lahf
insl
push
adc
das
aas
addr16
mov
mov
dec
add
outsb
xor
or
mov
negb
testl
call
jb
inc
dec
jnp
mov
mov
xlat
xor
into
push
mull
push
ljmp
mov
fildll
stos
out
cmpsl
clc
lods
push
outsl
sub
notl
lret
jnp
lcall
ss
mov
fstps
xchg
into
xor
add
enter
sbb
icebp
jmp
das
loope
and
push
jg
mov
inc
ljmp
pop
xchg
and
mov
mov
dec
daa
lds
and
int
add
xlat
jbe
mov
fiaddl
jb
jo
lods
test
nop
cmp
jno
mov
jb
push
movsb
gs
int
inc
xchg
sub
xor
std
inc
fidivl
in
aaa
dec
dec
inc
add
dec
xchg
imul
gs
xor
mov
dec
sbb
pop
in
push
and
cmpsl
call
js
mov
jbe
jle
icebp
add
stos
lahf
mov
scas
mov
rorl
loope
std
in
insb
xchg
pusha
cmpl
js
inc
lret
clc
mov
push
xor
cmp
inc
pop
lds
sbbl
dec
cmp
loop
aam
or
xchg
jge
pusha
inc
loopne
mov
cld
jnp
es
cmpsb
mov
jp
dec
aas
lods
adc
hlt
sbbb
pop
push
pop
cs
mov
jg
sbb
dec
sti
xchg
sbb
enter
cmp
fwait
and
decb
pop
scas
cmp
test
sub
push
and
daa
sub
loope
imul
cmp
sbb
test
cmc
es
lret
xor
cmpsb
push
pop
mov
mov
icebp
repz
lret
sub
test
xor
dec
shll
lret
test
push
jmp
adc
cli
rorl
adc
cld
add
lahf
or
aam
xchg
cmpsl
lods
xor
mov
and
xlat
adc
xor
addl
sub
jge
sti
jae
mov
sbb
mov
movsl
aam
push
cmp
rcl
lds
jb
fdivrs
js
jns
in
sbb
pop
mov
inc
imul
fnstenv
int
xor
insb
hlt
cmp
jbe
imul
fwait
popl
ret
mov
lock
jg
mov
cs
pop
mov
jge
mov
repnz
sbb
or
imul
test
or
xor
push
pop
nop
fildl
push
sbb
pop
xor
mov
test
and
mov
ja
data16
das
das
lret
dec
divl
mov
aad
cwtl
call
sub
inc
fistpll
imul
mov
pop
call
les
inc
jnp
fidivrl
fwait
mov
mulb
insb
pop
fisubs
aaa
int
sti
dec
data16
mov
or
fwait
in
repz
arpl
fwait
icebp
push
jbe
push
dec
mov
jl
mov
dec
mov
roll
mov
sbb
adc
outsb
and
xchg
mov
ret
xchg
push
sbb
and
jl
daa
dec
call
mov
filds
nop
jg
sub
fsts
in
push
pop
or
pop
test
sub
pop
leave
loop
xchg
loopne
mov
pop
notb
clc
fdivrl
push
jl
test
mov
js
xchg
push
add
mov
and
dec
in
mov
sub
das
cwtl
loop
push
xor
std
mov
incb
in
out
imul
sbb
sbb
adc
shlb
xchg
cmp
mov
mov
hlt
popf
pop
nop
inc
jmp
stos
fdivrl
and
jecxz
xchg
sbb
xchg
dec
cmpsl
stos
xor
fsubs
in
sbb
fnstcw
mov
xchg
test
push
xor
inc
stc
pop
stos
cmp
xchg
and
es
inc
call
popa
sbb
pushf
aaa
dec
push
stos
inc
pop
jne
loop
jnp
add
mov
fiaddl
sbb
push
imul
mov
stc
in
adc
and
lret
sbb
fists
stos
fnstcw
mov
mov
pop
xchg
shll
test
cmpsl
push
push
stos
sarb
and
sub
repnz
jecxz
dec
or
xor
xor
mov
lret
stos
in
push
sbb
mov
xchg
pusha
xchg
dec
xchg
xchg
fisttpl
in
lods
ds
fld
inc
shll
add
insb
jmp
push
mov
mov
push
xchg
and
daa
fisubrl
je
jmp
sub
lahf
xor
pusha
lfs
insb
fimull
sbb
cmp
fdivr
test
xchg
sbb
lods
int
xchg
hlt
pop
adc
add
mov
push
xchg
inc
inc
sub
hlt
and
test
jne
cld
test
lock
cli
mov
stos
iret
addr16
inc
fisttpll
nop
insb
mov
out
and
js
push
inc
push
push
mov
mov
inc
dec
xlat
pop
adc
cmpsl
nop
cmp
outsl
push
movsl
inc
rcll
pop
clc
push
pop
roll
sub
mov
push
shl
mov
hlt
out
lods
inc
and
mov
je
insb
outsl
and
and
jns
cltd
rcl
inc
das
aam
pop
sbb
xchg
mov
push
jb
adc
test
inc
imull
xor
ds
sub
ljmp
jp
ret
rorb
sbb
lcall
xchg
mov
inc
push
jno
popf
fidivrl
rorw
imul
loope
push
push
movsb
pop
popa
pop
jle
pop
es
cmp
push
mov
int3
mov
lcall
mov
lods
inc
insb
stos
pop
and
jle
cs
and
pop
push
pop
lods
add
adc
adc
xor
jle
pop
insb
jle
jl
insb
lock
movsb
pop
ret
adc
push
jb
jle
push
cmp
lret
testb
outsb
sbb
xlat
imul
std
lcall
sahf
push
xchg
out
pop
test
cmp
inc
add
ror
inc
stos
sbb
mov
mov
jg
adc
lea
hlt
addr16
lods
loopne
jo
adc
inc
push
push
mov
pop
fnstcw
sub
lock
mov
xchg
cmp
lods
mov
aad
test
ret
shrl
mov
adc
sub
out
cmp
and
insl
cmp
mov
jle
sub
sti
popf
into
mov
sbb
add
sbb
push
push
adc
pop
inc
rolb
jbe
jb
dec
jnp
sub
jo
iret
mov
pop
leave
xor
into
subl
pop
sarb
sbb
das
cwtl
clc
sub
leave
test
sbb
ljmp
sahf
fimull
xor
pop
fldl
rclb
cwtl
mov
js
clc
sbb
xor
jge
mov
jne
mov
and
lahf
and
test
inc
and
or
mov
inc
dec
shll
fstpl
and
mov
cmpsb
xchg
mov
pop
int3
pop
mov
xchg
dec
jbe
int
adc
xor
ret
sbb
pop
mov
outsl
xchg
daa
pop
adc
mov
push
cmp
dec
sbb
flds
mov
cwtl
ds
stos
dec
dec
repnz
xor
iret
cmp
movsl
int
adc
outsb
xchg
sub
jbe
push
sub
xor
or
ret
or
pop
inc
nop
jmp
mov
jmp
test
in
dec
fldt
das
dec
jge
test
mov
stos
sub
shrl
inc
negb
inc
sbb
scas
push
mov
ja
inc
mov
ret
shrd
test
addr16
pop
xchg
mov
add
popa
jmp
cmp
or
scas
scas
call
test
mov
xor
mov
mov
sbb
popf
shll
adc
pop
loopne
scas
faddp
mov
adc
aas
scas
push
mov
sahf
xlat
loopne
or
gs
mov
and
or
or
sbb
cmp
pop
iret
lcall
push
sub
or
popf
mov
cli
shll
dec
dec
adc
jns
mov
les
jmp
jecxz
sub
inc
pop
jbe
and
je
scas
push
test
adcl
ja
xor
mov
imul
sub
stos
popa
scas
pop
sub
out
popf
xchg
cmpsl
pop
push
mov
xlat
shll
or
out
fistl
loop
lahf
fwait
mov
cmpl
ja
mov
or
mov
in
mov
div
out
adc
int3
loopne
adc
add
mov
mov
fsubp
pop
mov
mov
fnclex
xchg
bsr
and
push
cltd
pusha
lret
adc
test
pop
mov
mov
fcompl
jmp
inc
and
sbb
in
inc
loop
jbe
js
jne
mov
jo
pop
loopne
pop
mov
jbe
add
sbb
adc
or
pusha
test
inc
je
rorb
mov
imul
jle,pn
in
daa
gs
movsl
lcall
dec
and
ret
or
out
or
adc
xchg
pushf
jne
mov
test
ret
rorb
xchg
sub
sub
out
cmc
or
popa
xor
popa
jmp
xchg
cmp
push
jp
divl
mov
xor
inc
sub
lods
or
fisttpll
add
fs
cs
imul
push
bound
inc
pinsrw
sbb
mov
xlat
lock
mov
icebp
clc
sbbl
xchg
or
shrb
rcrb
insb
fiaddl
aam
sub
mov
bound
fisubrs
lods
scas
scas
orb
sub
push
xlat
pop
adc
pusha
repnz
in
inc
aaa
cmp
mov
fmul
mov
in
lods
cmp
add
push
les
xlat
outsb
ss
add
dec
cwtl
and
je
flds
subl
fisubl
jmp
call
pusha
mov
xlat
icebp
sbb
cmp
fistpll
inc
lods
sbb
cmp
push
lret
test
dec
in
or
cmpsb
imul
xchg
sub
imul
movsb
in
xchg
add
push
fildl
dec
sub
pop
jp
les
push
and
aaa
cld
dec
mov
adc
nop
sbb
adc
sbb
jo
sbb
pop
push
insl
push
fdivs
xchg
pop
push
sbb
pop
xchg
mov
adc
or
jno
and
cltd
sub
xchg
adc
mov
push
out
dec
mov
insl
lret
lock
ret
sahf
add
mov
jo
iret
leave
cs
adc
and
cmp
sbb
sub
das
jb
pop
adc
gs
inc
repnz
xchg
insb
xchg
sub
xor
cmp
cmpl
inc
movsl
rcr
jp
push
inc
adc
add
fldl
jge
lods
adc
adc
inc
outsl
cmp
movsl
sub
cmp
xchg
cltd
sbb
dec
repnz
movzbl
push
push
out
into
xchg
xor
hlt
fiaddl
and
data16
jmp
xlat
add
jmp
inc
and
add
repz
mov
adc
push
dec
hlt
imul
andl
mov
xor
adc
xchg
xchg
shrl
outsb
mov
in
pop
mov
aaa
outsb
adc
mov
xchg
and
aas
mov
sub
xchg
stc
cmc
enter
mov
xchg
xchg
cmc
stc
cltd
mov
sub
mov
fxch
sti
sub
pop
pop
das
add
insb
inc
cs
adc
aaa
arpl
sarb
pop
cmp
aas
daa
mov
aaa
out
cmc
xchg
push
push
cld
loopne
in
jb
pop
dec
cmp
and
pop
sbb
repnz
ds
insb
inc
dec
cmp
int3
sbb
stos
fsubs
pop
jle
insl
clc
dec
inc
sbb
jno
and
jge
repz
mov
outsl
or
mov
jne
data16
push
inc
repz
sub
fisubs
mov
dec
ss
mov
sbb
js
dec
and
xchg
mov
loopne
jb
ficoms
lods
and
ret
das
sub
call
mov
addr16
es
andl
lcall
dec
rolb
sub
popf
mov
fwait
pop
push
sti
fisttpll
adc
or
es
sahf
outsl
addr16
pop
in
das
fcompl
sub
popf
sbb
loopne
loope
cltd
clc
std
inc
add
or
jb
sarb
mov
xchg
dec
mov
cmp
push
sti
lahf
inc
pop
or
or
pop
or
add
pop
rcl
mov
in
sub
in
hlt
fcmovbe
add
dec
inc
aas
and
shrb
jb
sbb
hlt
hlt
adc
mull
inc
mov
dec
fs
xor
scas
jnp
aaa
sarl
mov
dec
xor
insl
xor
hlt
loope
ljmp
loope
mov
insb
mov
sub
out
cmp
add
add
or
lods
inc
mov
or
lods
jecxz
sahf
inc
mov
addb
and
sub
xor
lods
jmp
xchg
sub
lods
lret
dec
pushf
mov
dec
pop
in
fbstp
adc
dec
cmp
and
inc
leave
rcl
pop
xlat
ss
inc
leave
cmp
ljmp
popa
lods
ficoms
sub
mov
adc
fnstcw
shrl
dec
lock
mov
or
mov
repnz
stos
sub
jns
adc
push
pop
ret
sub
popa
das
mov
sti
arpl
in
sahf
dec
loop
insl
xlat
jo
jle
repnz
sbb
mov
clc
ds
and
sub
dec
pop
fildll
inc
scas
sbb
scas
out
xchg
ja
outsb
shlb
mov
out
jmp
imul
xchg
mov
mov
mov
jo
jge
fldcw
les
sti
add
cmp
js
in
test
inc
lahf
mov
pop
dec
or
pop
jle
fdiv
inc
or
push
mov
pop
and
call
sub
aaa
pusha
imul
enter
mov
out
stc
pop
fcmovb
fsubr
out
mov
sahf
push
sbb
out
sbb
popf
add
into
xor
cmp
jge
sbb
cmpsl
lret
and
outsl
mov
jae
in
sahf
sub
mov
adc
pop
movsl
xlat
inc
or
mov
fwait
push
stc
fisubrs
out
repnz
adc
xor
cmp
adc
js
mov
outsl
js
ffree
add
cmp
mov
leave
movntps
cmp
pop
js
pop
mov
dec
jmp
das
sub
xchg
lds
jle
mov
lret
mov
xchg
popf
mov
sub
inc
add
cmp
inc
mov
imul
jmp
xor
pop
icebp
xchg
pop
xchg
in
pusha
jmp
aad
jae
enter
jle,pn
xor
jbe
popa
sbb
lret
sub
rdpmc
nop
sti
sbb
das
dec
in
sbb
popa
mov
scas
mov
cmp
push
adc
mov
mov
cmpsb
or
push
sarb
jnp
push
push
sbb
push
mov
sub
ss
lret
repnz
add
negl
pop
ret
iret
add
inc
imul
and
xlat
push
jl
jg
test
stc
xchg
loope
or
pop
adc
cmp
cmp
rcrb
call
out
xor
adc
cwtl
sub
out
and
stos
push
clc
rorb
dec
fwait
and
jle
je
mov
push
pop
adc
sub
xor
push
and
xorl
pop
xlat
loope
data16
mov
push
movsl
or
mov
mov
add
push
lret
and
insl
add
pushf
ret
sub
inc
push
sbb
cmp
xchg
fidivl
ss
addr16
pop
push
repnz
or
pop
fisubrs
roll
add
xor
sub
push
adc
loope
bound
pop
cmp
sub
xchg
mov
push
sarw
jecxz
out
push
xor
ret
push
jecxz
inc
add
pop
xchg
jbe
cltd
mov
subl
adc
fsubrl
sar
sbb
je
or
dec
cmp
js
pop
iret
dec
mov
das
adc
insb
jmp
fwait
mov
sbb
pop
adc
push
dec
out
mov
insb
movsl
js
lahf
jns
xchg
fcomps
pop
fistl
pop
sarl
mov
mov
shrl
jb
jae
jb
fadds
mov
xor
out
inc
cmovbe
mulb
sub
cmp
sbbl
sbb
xor
loop
push
fbstp
out
scas
dec
add
test
inc
or
inc
cmpsl
das
xor
push
dec
cmp
clc
push
packssdw
and
int
mov
add
inc
jmp
inc
scas
ret
popf
into
sbb
shll
mov
je
add
cld
push
stos
sbb
call
cmp
jmp
into
dec
mov
and
div
outsl
sbb
cmp
inc
in
arpl
or
cli
icebp
push
scas
imul
iret
mov
push
jo
pop
into
outsb
inc
add
mov
in
cmp
push
or
gs
movb
xchg
movsb
leave
in
ss
xchg
xchg
dec
les
pop
les
orb
push
in
out
push
pop
std
imul
lcall
aas
aam
lods
xchg
movsl
int3
cs
mov
sub
or
imul
clc
ljmp
outsb
pushf
adc
xchg
jae
leave
push
adcb
add
cltd
or
sbb
aam
jbe
mov
cltd
stos
pop
sub
arpl
push
ja
lods
ficompl
icebp
jecxz
cmp
push
inc
cmc
or
adc
sti
jge
mov
add
mov
or
cmpsb
fsts
stos
jecxz
adc
fstpt
repz
inc
out
mov
xor
sbb
movd
jns
push
xchg
xor
test
popa
jno
insb
xchg
cmpsl
popl
loop
pop
out
push
imul
jle
push
mov
imul
mov
cmp
xor
push
lcall
ficoms
stos
pop
dec
into
test
xchg
pop
das
jmp
icebp
or
sbb
xor
movsb
sti
jo
xchg
lods
push
mov
add
push
test
mov
outsl
mov
imul
imul
mov
insb
nop
or
scas
push
adc
adc
nop
xchg
or
push
push
movsb
and
rclb
imul
fisubs
pop
cmpsl
hlt
adc
xchg
roll
scas
mov
mov
nop
pop
dec
aam
out
pushl
test
les
dec
or
arpl
jb
mov
jno
jle
push
sbb
sub
cmc
cmp
fwait
pop
mov
cli
cmpsl
leave
pop
or
push
test
lods
dec
loop
cmpsb
fisttps
dec
out
or
jb
xor
scas
out
mov
mov
pop
pop
fs
push
into
mov
adc
clc
cmpb
movsb
dec
les
mov
mov
mov
cmp
rorl
jae
adc
jae
add
shl
and
mov
rcrl
mov
xchg
pushf
pop
cmp
xor
or
loope
or
mov
stos
shlb
mov
and
cmp
lret
fdivs
std
sbb
pop
pop
pop
inc
sub
mov
fs
decb
or
push
clc
fidivs
mov
push
fwait
jne
push
ret
out
lcall
push
loop
fmuls
push
mov
mov
into
in
jbe
gs
xorb
fiadds
rorl
ja,pt
arpl
je
mov
fcom
cld
enter
fidivrl
rclb
bound
stos
xor
es
mov
mov
dec
fcompl
inc
pop
int
icebp
les
mov
push
cld
dec
and
sbb
lea
or
movsb
in
sbb
jle
fwait
mov
shll
mov
movsb
mov
pushf
xchg
popf
call
and
jbe
jmp
mov
lcall
dec
mov
mov
mov
dec
rcl
jp
dec
cmp
jmp
loop
inc
imul
loope
and
jmp
ljmp
mov
clc
push
xchg
into
push
fsubrs
inc
faddp
push
insl
jb
test
mov
jge
rcr
rcrb
mov
enter
ljmp
mov
adc
mov
aad
addr16
aas
mov
xchg
jge
bound
jmp
and
xchg
pushf
sbb
push
jp
lret
mov
sahf
cmpsb
xor
push
pop
jmp
or
mov
inc
add
cmpsb
bound
mov
icebp
adc
sbb
fisubs
jl
jns
andl
jp
push
cmp
push
jmp
push
mov
mov
mov
sbb
inc
jns
cmp
jbe
add
jno
xchg
jmp
stos
or
call
ja
ret
lahf
jle
mov
aam
adc
and
jg
repnz
aam
cmpsl
jg
jp
scas
mov
sbb
mov
cmc
xor
test
sub
jne
hlt
in
fst
sar
cld
loop
jp
push
cltd
xchg
dec
mov
test
xor
outsl
fs
je
jge
cli
testb
inc
loopne
imull
sub
mov
arpl
push
sbb
fwait
bound
push
cli
lods
sbb
loop
xor
movsl
xor
stos
mov
add
sbb
rcll
xor
xorl
movsl
inc
adc
cmc
mov
stc
mov
shl
pop
lock
mov
jns
add
inc
or
mov
out
mov
divb
xchg
cmp
adc
into
cli
mov
andl
or
mov
in
ss
lea
bound
jmp
dec
inc
push
mov
jb
sub
adc
fs
or
jg
addr16
mov
and
daa
aad
sarb
mov
sbb
fwait
aaa
pop
std
inc
aad
sbb
add
add
xchg
pop
and
mov
cmp
insb
jge
sbb
xchg
data16
pop
inc
mov
cmp
jg
xor
ds
lods
sbb
add
ret
cld
aad
rcl
cmp
int
add
aam
mov
popf
sbb
cld
push
mov
xchg
lea
sti
pop
cwtl
xor
add
cmpsb
jecxz
imul
aaa
cmpsl
sbb
sti
std
add
icebp
xor
jge
or
mov
pop
push
cmp
and
mov
xchg
adc
push
imul
jge
xor
and
cmpsl
iret
fiadds
mov
or
add
add
pop
sbb
cld
rorb
hlt
xor
imul
xchg
pop
cmc
aam
xlat
int
mov
xchg
jno
sahf
stc
mov
loopne
jecxz
dec
xor
jbe
xor
in
out
push
push
stos
cmp
dec
add
dec
xchg
pop
enter
jo
xchg
mov
lods
cli
cmp
jp
out
push
fidivrs
add
xchg
int3
out
in
lcall
pop
mov
jns
add
out
imul
stc
mov
fs
inc
mov
daa
ffree
add
jns
pop
cmp
and
pop
xchg
shrb
or
xchg
cmpb
ds
jae
push
imul
fsubl
adc
mov
outsl
out
icebp
iret
mov
or
leave
inc
xchg
ja
jle
shlb
push
test
sahf
mov
test
xchg
mov
sahf
cld
fs
cmp
inc
jae
lcall
shrb
pop
test
divl
lret
xchg
push
mov
mov
pop
push
mov
rcl
and
mov
sbbl
mov
iret
cld
insb
lea
mov
popf
jne
enter
mov
lahf
rcrl
scas
std
cmc
xchg
jno
insb
xlat
jae
loop
mov
pushf
pusha
push
xorb
dec
mov
inc
cmp
and
ljmp
mov
jg
outsb
xor
adc
andl
int3
outsl
xor
hlt
nop
cmp
cltd
mov
mov
or
or
mov
es
add
push
fdivrs
jg
stc
call
outsb
mov
or
add
loop
pop
in
lods
roll
loope
cs
xchg
ss
cmp
dec
repz
inc
inc
inc
or
adc
adc
jae
sti
dec
into
or
lret
xchg
les
sub
test
xchg
fs
inc
fildll
cmpsl
add
xor
add
cmc
in
test
loopne
jl
sahf
cmpsb
stos
dec
int3
sbb
jl
ss
xchg
cmp
call
add
stc
shll
xchg
jmp
test
mov
inc
push
shl
mov
ja
mov
mul
push
jnp
add
adc
adcl
inc
fnstsw
scas
in
mov
xor
hlt
movsb
test
je
leave
outsb
ficoml
cli
loope
lods
sub
pop
imul
jns
dec
push
loope
scas
repnz
movsb
fsubp
repnz
xor
mov
pop
dec
add
leave
cmpsb
mov
xorb
negl
xor
pushf
rcrl
mov
push
jno
mov
or
loope
incb
cli
enter
mov
push
add
popa
sbb
push
lret
cmp
mov
in
xor
and
cltd
stos
adc
mov
lock
adc
nop
mov
adc
mov
orl
fistl
popa
or
cmc
dec
jl
jno
xor
faddl
mov
cmp
test
dec
push
ret
mov
xchg
lret
jle
inc
or
jnp
push
mov
pusha
inc
out
cltd
ja
movsb
lret
jb
and
sub
leavew
out
mov
jecxz
xor
xor
inc
arpl
jno
or
scas
test
loop
push
out
add
pop
data16
add
pop
adc
add
das
leave
push
cmp
jp
mov
adc
inc
sbb
and
xor
or
in
mulb
sbbb
xor
push
mov
cmp
jmp
xlat
enter
dec
aad
adc
jl
mov
pop
sbb
shld
mov
rcll
dec
int3
sub
inc
or
xor
lret
shr
push
pop
bnd
xchg
adc
ret
add
pop
jle
pop
xlat
fnstcw
dec
jb
sbb
movsl
movsl
adc
addr16
xchg
and
jecxz
cmpl
out
addb
sub
and
pop
inc
mov
mov
jle
movsl
loope
cmpl
jge
scas
fbld
scas
sbb
sub
pop
mov
scas
xchg
lock
out
mov
dec
cld
pop
xchg
inc
push
and
clc
in
xor
xor
and
push
faddl
jno
cmpps
sbb
setns
aam
gs
addr16
inc
fisttps
jae,pn
mov
mov
lods
or
inc
addr16
fcmovnbe
repnz
imul
mov
xchg
dec
mov
pop
mov
push
dec
movsb
jle
mov
pop
ljmp
stos
mov
fs
sahf
inc
jp
jl
dec
divl
sub
fwait
jecxz
mov
dec
js
add
stos
xchg
jno
outsl
or
mov
cmp
push
call
or
xlat
lret
mov
xor
pop
jnp
push
pop
daa
cli
clc
subb
dec
mov
in
fisubs
fiaddl
daa
jo
push
ja
pop
jnp
cmp
dec
cli
pop
sub
push
jo
pop
ss
mov
ret
imul
mov
push
fistps
pop
sub
xchg
pop
std
push
cmp
xor
scas
xchg
int3
mov
ficoml
loopne
cmp
mov
xor
mov
shll
hlt
mov
jmp
scas
sti
aaa
xchg
xchg
lcall
adc
add
pop
clc
cmp
xchg
sub
inc
mov
hlt
pop
call
mov
inc
push
call
fadd
inc
call
dec
dec
mov
fisttpll
orb
lret
sbbb
sbb
fldenv
xor
sbb
add
or
or
fdivs
xorl
sub
es
test
jmp
pusha
movb
in
mov
dec
repnz
das
fprem
mov
sbb
sbb
add
shll
repnz
loope
leave
dec
pop
push
mov
pop
add
fnstsw
mov
je
jmp
pop
ret
lds
pop
sti
cld
fcomip
call
and
adc
ret
mov
nop
push
pop
fldl
pop
inc
dec
jne
mov
push
hlt
or
push
bsr
mov
int3
das
pop
xchg
inc
dec
mov
nop
imul
jp
jo
or
outsb
push
pop
jnp
cmp
dec
xor
fnstenv
addr16
adc
in
xchg
inc
push
seta
mov
or
cmc
inc
push
mov
push
lods
ret
or
repz
jae
cmpsb
shrb
and
xchg
popa
mov
cmp
call
stos
xlat
inc
and
cmp
fwait
ljmp
pop
cmpl
stos
or
sub
outsl
into
or
je
pop
lods
in
push
das
push
leave
mov
scas
pop
fistpll
sbb
in
stc
xchg
roll
xchg
sub
jecxz
cmp
sarb
enter
leave
in
addl
pop
pop
in
jnp
dec
outsl
inc
jb
leave
bound
clc
out
cli
test
jge
add
outsb
loopne
or
adc
mov
inc
loop
xchg
mov
or
roll
stos
clc
enter
icebp
inc
scas
adc
int3
sahf
inc
and
lret
cmpsl
sub
xchg
call
dec
jl
jmp
cs
pop
cs
in
ja
out
and
call
xor
mov
xchg
or
push
sahf
inc
jl
adc
ja
cmp
sahf
ret
std
daa
int3
xor
jo
mov
ja
adc
push
mov
jp
cmp
les
inc
jp
std
lods
cmp
xchg
and
jb
dec
imul
sub
pop
cmp
jp
add
outsb
lcall
push
xor
aad
xor
sub
fsubr
xchg
icebp
or
shlb
pop
int3
mov
dec
inc
or
insl
mov
nop
xchg
or
in
and
movsb
jl
mov
and
mov
xor
sahf
xor
sbb
and
or
cmc
cmp
scas
push
sbb
loope
seta
js
jg
popf
cmpsl
mov
and
inc
push
lea
and
faddl
lods
test
pop
mov
stc
andl
cld
sbb
outsb
add
or
jg
push
call
cltd
add
sub
xchg
xchg
or
and
lret
rclb
or
add
push
inc
std
mov
aas
jae
or
inc
push
jle
or
xchg
std
inc
jmp
data16
mov
das
xchg
mov
mov
dec
ficomps
push
mov
test
push
dec
loopne
xor
rolb
mov
fstl
push
ret
rol
mov
bound
jnp
jp
lea
xor
faddl
cld
out
mov
mov
mov
add
cmp
int
clc
mov
xchg
sbb
mov
jnp
pop
hlt
add
lcall
add
movsb
cs
leave
add
sub
mov
inc
fdivrs
mov
shrb
jmp
sar
lcall
aaa
cli
dec
jns
mov
lds
xchg
in
lahf
jb
pop
jae
cmp
add
movsl
jns
call
inc
aam
jo
int
cmc
inc
xor
popa
adc
std
mov
mov
addb
mov
aaa
nop
lods
or
mov
xchg
adc
sbbl
jp
sbb
jb
scas
inc
inc
push
les
or
xlat
xor
or
pop
mov
mov
movsb
xlat
add
add
imul
in
imul
xchg
out
push
inc
xchg
mov
in
xchg
push
cltd
jbe
pop
int3
mov
lret
sbb
push
ss
mov
ret
fld
xchg
call
shl
mov
adc
xchg
xchg
js
loope
mov
cmp
push
pop
pushw
bound
popa
mov
outsb
out
icebp
int
pop
inc
nop
imul
mov
pop
or
xchg
fistpll
outsl
test
lret
lahf
pop
cmpsl
adc
mov
cli
jmp
scas
jmp
mov
adc
rorb
or
rorb
inc
fcoml
mov
das
out
cmp
cmc
jge
in
gs
ret
or
fxch
push
adc
jne
add
mov
push
popf
cli
mov
xor
push
add
imul
in
inc
test
mov
je
cmp
xchg
jg
jbe
shrl
cmp
mov
popa
mov
xor
push
jecxz
add
out
loop
fidivrl
jecxz
pop
mov
mov
outsl
mov
dec
cwtl
inc
out
movsl
cmc
dec
imul
movsl
data16
mov
dec
test
mov
in
ds
je
lds
dec
lods
cmp
jae
flds
adc
mov
stc
push
addl
outsb
cli
mov
add
jecxz
push
jmp
adc
scas
pop
fnstsw
icebp
lret
lods
rclb
or
mov
push
jbe
repnz
roll
mov
jmp
movhlps
sbb
loop
or
iret
lcall
repz
push
jg
das
pop
into
cmpsl
push
test
jmp
scas
pop
lret
and
test
outsb
pop
mov
push
pop
xchg
out
loope
or
rclb
mov
insl
mov
or
pop
inc
bound
xor
daa
and
and
xchg
sub
inc
cmp
cld
insl
mov
xor
mov
and
outsb
jo
sub
sub
addr16
add
and
jecxz
cltd
sub
cmp
mov
scas
pop
loop
sub
stos
mov
push
in
cwtl
and
xlat
push
loope
hlt
mov
add
call
mov
mov
xor
or
xor
cmp
ja
cmpsb
stos
stc
ja
scas
out
ds
push
mov
lods
or
inc
les
mov
rcr
movsl
mov
push
out
scas
loop
mov
andb
in
push
or
xchg
adc
push
push
adc
mov
cmp
add
movb
int3
bound
mov
mov
jne
mov
xor
xchg
pop
fwait
cmc
sub
jae
aad
fldl
jnp
fsubrs
xchg
inc
lahf
adc
in
daa
in
jge
bnd
cltd
hlt
mov
sub
pop
insl
fwait
mov
push
mov
mov
xlat
arpl
imul
add
popf
mov
mov
xchg
xor
movsl
pop
insl
mov
mov
out
out
jg
dec
ficoms
cli
ss
fwait
add
imul
jns
mov
xor
adc
xchg
mov
mov
bnd
test
push
inc
lahf
add
cmp
mov
dec
addb
sbb
lret
jp
fstpt
dec
xor
cli
inc
int
out
xor
mov
cs
inc
outsl
sbb
jmp
or
jge
and
add
lcall
outsb
xor
ja
scas
fldl
fsubrs
mov
or
fmul
or
push
adc
mov
shlb
fcompl
inc
dec
data16
outsb
jb
hlt
mov
inc
sbb
sete
lods
dec
jo
xor
sub
and
inc
jle
movsb
or
stos
lahf
shll
fs
jnp
jnp
fwait
lds
add
xchg
pop
sbb
pop
ds
movsb
into
dec
adc
sub
sti
or
loopne
xorl
aas
add
cmpb
mov
or
fidivs
sbb
mov
mov
jbe
clc
sub
xchg
in
shlb
cli
or
cwtl
fidivl
cmpsl
sbb
sbb
xchg
xchg
push
pop
adc
lea
sub
fldcw
and
test
mov
dec
sub
pop
mov
xor
mov
mov
mov
bound
sbb
repnz
psubw
lock
xchg
shll
aad
daa
enter
or
push
dec
xchg
in
adc
repnz
lret
jnp
nop
xchg
xchg
add
xchg
int
ficoml
dec
xchg
test
pusha
cwtl
ss
cmp
mov
call
ret
fcomps
scas
sti
push
aas
test
xor
cltd
repnz
rolb
test
fildl
sub
and
ret
jl
test
gs
sbb
jae
mov
shrb
jb
add
icebp
sub
inc
dec
jnp
jns
lret
std
fmull
sbb
mov
pop
or
nop
adcl
pop
pop
mov
sahf
mov
mov
loop
sarl
mov
cltd
aam
mov
jns
jp
bound
fists
mov
cmp
jbe
add
add
inc
shr
fcoms
in
pop
adc
or
xlat
jnp
out
outsb
or
stos
sbbb
or
inc
sbb
dec
jbe
mov
stc
adc
sarl
mov
push
or
lods
mov
adcb
or
clc
or
gs
in
and
in
in
jp
ljmp
and
arpl
jmp
fst
mov
jge
movzwl
ds
pop
jg
xorb
fldl
test
ljmp
cmpsb
clc
ljmp
hlt
mov
dec
lcall
movsl
xor
lea
xchg
or
cld
aad
loop
adc
jmp
xchg
out
inc
les
cli
call
fdivrl
divl
mov
cmp
cmpsl
test
and
adc
adc
jl
cli
xchg
in
mov
adc
test
adc
jnp
call
jecxz
push
sbb
lds
test
adc
xchg
adc
dec
cmpsb
out
xchg
add
call
and
pop
data16
jbe
int
into
mov
fwait
andb
in
cmp
sbb
popf
pop
cmc
push
and
cmp
xchg
adc
sbb
popa
in
jp
scas
lods
or
xchg
lods
fucomi
inc
sbb
les
jl
shlb
jg
rcll
adc
notb
in
je
inc
pop
pop
adc
dec
and
loop
imul
mov
push
lock
mov
lret
lcall
push
mov
mov
push
arpl
stc
cmp
movlps
fiaddl
push
ss
add
bsr
lea
lcall
inc
sbb
hlt
mov
iret
jp
add
movsl
jp
mov
int3
mov
jne
out
push
insl
test
bound
xlat
mov
test
das
mov
xor
dec
mov
sub
cmp
out
sti
xchg
pop
int
sbb
add
add
xchg
inc
test
std
xor
inc
jno
bnd
mov
mov
jg
inc
mov
aad
pop
mov
mov
iretw
shlb
mov
xchg
iret
out
inc
int
clc
mov
loopne
mov
xchg
adc
es
loopne
inc
insb
lds
sub
push
insb
lret
push
add
pop
inc
out
addr16
sub
je
adc
mov
lret
lea
test
in
mov
pop
int
pop
scas
inc
inc
pop
cmc
and
and
rolb
in
ret
popa
push
mov
sub
inc
push
and
dec
jnp
mov
adc
push
mov
sbb
cmp
mov
mov
icebp
movsb
xchg
mov
mov
add
cmp
ss
jbe
mov
popa
jle
out
js
cmp
addr16
stc
and
cmp
push
add
popa
in
xchg
scas
dec
mov
and
xor
fs
xchg
xchg
ficoms
inc
adc
das
sbb
dec
inc
jle
bsf
xor
cwtl
sbb
and
int
ret
shll
repz
inc
inc
dec
rcrb
sub
jb
pop
scas
jb
cmp
xchg
daa
sub
pop
lock
data16
mov
pop
cld
mov
aas
out
inc
or
pop
pop
push
jae
addl
pushf
orb
xor
xchg
xor
xor
xchg
inc
mov
ljmp
xchg
dec
push
sbb
ds
sub
ljmp
les
daa
adc
fwait
jmp
roll
sbb
cltd
das
iret
dec
nop
xchg
mov
call
fnsave
pop
xchg
mov
rcll
push
mov
xor
sbb
jo
lcall
xchg
pop
dec
repnz
jnp
sbb
jl
jl
add
pop
add
repnz
mov
pop
aam
cwtl
inc
ficoms
addr16
jg
repz
das
xchg
int
mov
jl
push
cmp
push
out
test
shlb
mov
dec
push
xchg
movsl
and
or
inc
scas
xchg
test
sub
adc
cmp
loopne
dec
ss
ret
out
mov
push
aam
jnp
push
addb
test
pop
lahf
in
jnp
cmpsb
stos
cmc
rcrb
cli
testb
mov
lods
test
in
jmp
loopne
mov
push
ljmp
xchg
jns
pop
inc
dec
pop
xchg
push
mov
arpl
stc
cmp
setp
test
pavgw
inc
jbe
inc
aaa
mov
loopne
add
int3
dec
test
pop
loope
xchg
cs
pop
and
imul
mov
fmul
mov
sti
jbe
ja
das
lea
mov
lods
das
and
sahf
stos
movsb
inc
jg
xor
add
xchg
and
cmp
fs
shlb
cmp
jmp
test
insb
or
cwtl
scas
inc
fisubrl
cltd
jb
fsubrp
int3
fdivrs
xchg
mov
ljmp
out
adc
scas
cmpsb
aas
jge
jne
mov
lcall
nop
cmp
jne
add
pslld
add
inc
inc
dec
arpl
fucom
cmp
sarl
adcl
cmp
fdivrs
sti
cmpsb
fbstp
imul
loop
mov
and
dec
mov
daa
lds
mov
adc
lods
mov
ljmp
leave
pusha
inc
push
add
push
inc
jbe
imul
mov
cld
ficoml
adc
dec
cs
xchg
cld
dec
mov
mov
cmp
push
rolb
fwait
jae
or
jbe
and
arpl
mov
jmp
repz
sbb
adc
sub
inc
mov
xchg
cli
mov
int
pop
cmpsb
inc
and
testb
adcl
lods
sar
fdiv
enter
pop
pop
mov
and
jmp
xchg
xchg
in
mov
sub
mov
inc
mov
sbb
mov
pop
cltd
je
add
rcll
sub
jle
ja
pop
rcrb
shrb
sub
xor
mov
inc
or
mov
mov
repnz
add
push
xchg
loopne
fsubrp
mov
mov
jp
mov
sbb
aaa
sub
dec
je
test
vhaddpd
mov
rcll
ficoms
gs
int3
push
icebp
add
outsl
dec
inc
and
sbb
pop
adc
push
mov
xor
inc
fisubl
add
jne
and
mov
mov
das
out
arpl
mov
test
add
cmp
and
mov
inc
arpl
and
inc
rcll
mov
push
std
in
xchg
mov
or
fidivrs
ja
sub
adc
mov
mov
cmpsb
mov
push
lods
dec
mov
ret
cmpsb
jp
and
dec
xor
aaa
clc
jbe
jmp
cmpsb
aad
mov
adc
shl
adc
icebp
outsb
test
daa
scas
call
xchg
movsb
adc
jne
sbb
js
icebp
mov
mov
in
cmp
xchg
sarl
mov
dec
or
sbb
jge
sub
sub
bswap
inc
in
mov
cmp
cmpsb
cmp
sub
aam
mov
dec
cmpsb
adc
movsb
xor
pop
in
push
sbb
cmpsl
jmp
dec
mov
sbb
mov
ret
mov
sahf
and
xchg
add
cmp
faddl
add
and
lock
in
xchg
mov
sti
mull
cmp
lahf
and
sar
es
imul
pop
fldl
rorl
xchg
pop
adc
push
popa
mov
push
pop
add
sub
mov
sbb
int
cmpb
mov
jbe
dec
repnz
fbld
jecxz
ljmp
stc
mov
lret
jo
pop
stc
ret
lret
pusha
pop
dec
dec
imul
cmp
clc
sub
cmpsb
xor
mov
int3
insb
pop
jg
dec
mov
inc
inc
cmp
mov
outsb
push
aas
loopne
daa
ret
mov
mov
ucomiss
pop
cwtl
dec
mov
pop
mov
scas
repz
fistpll
and
inc
out
scas
jle
xor
daa
xor
push
pop
sbb
push
fistpl
lret
in
movlps
xor
xlat
leave
inc
sub
call
add
or
mov
mov
or
dec
pop
mov
leave
or
cwtl
ret
orb
jmp
push
addr16
fsubrl
pop
out
xor
mov
cmpsb
je
push
mov
pop
lds
sahf
xor
pop
mov
and
mov
outsl
aas
into
inc
aas
mov
shll
bnd
ljmp
data16
xor
push
pop
mov
pop
mov
fld
into
arpl
push
inc
adc
dec
icebp
and
pushf
add
ds
imul
out
pop
in
mov
data16
cvtpi2ps
mov
jbe
push
std
cmp
mov
mov
in
mov
in
or
loope
sar
add
jg
outsl
and
and
cmp
je
ja
aad
push
or
lcall
fnstenv
sbb
jbe
sub
push
lock
ja
aam
adcb
jno
sbb
enter
cmp
or
add
cmovbe
sahf
fs
push
lea
sbb
pop
push
xchg
and
fldl
cmp
jae
xlat
insl
pusha
daa
mov
sbb
in
mov
mov
pop
leave
xchg
cmpl
jle
arpl
rclb
jbe
pop
sub
cs
ror
inc
scas
xor
inc
cmpl
lods
xchg
xchg
mov
or
sarb
cs
sbb
jmp
inc
add
aad
mov
cmp
or
das
mov
sub
mov
pop
movb
ja,pt
lahf
je
ret
cmp
sbb
cmp
cli
ret
das
in
and
xchg
inc
fs
leave
lods
adc
rorb
mov
mov
mov
push
mov
mov
rcll
mov
gs
clc
cli
imul
adc
cld
push
negl
push
push
stos
mov
adc
les
popf
mov
test
cmpb
cmp
lret
aas
mov
pop
mov
mov
aad
outsb
cmp
jmp
in
out
bound
call
int3
push
cmpl
sbb
jp
and
fistpl
idivl
es
dec
cmc
xor
pop
leave
fld
clc
sbb
add
in
add
xor
cmp
push
scas
jo
sbb
test
mov
xchg
je
jecxz
jns
push
loop
xchg
xor
lds
outsl
mov
sub
sti
daa
test
aaa
lods
adc
jns
pusha
cmp
jnp
cmpsl
das
andl
jns
rclb
push
lret
jns
pop
jle
lret
mov
sti
adc
cltd
shll
lahf
jns
sub
test
jne
bound
out
mov
mov
xchg
out
ds
test
js
push
mov
pop
adcb
pop
das
xchg
add
testl
sbb
sub
cmp
fmull
fdivr
inc
cmp
xor
sbb
cmp
mov
cmp
out
out
out
mov
mov
xchg
sbb
and
insb
fs
xor
popf
mov
repz
jp
iret
bound
adc
mov
or
xchg
aas
gs
and
adc
stc
sub
push
js
add
sbb
dec
inc
sbb
cmp
fldcw
push
dec
pop
mov
out
bound
out
test
imul
std
jns
loop
xchg
aaa
dec
cmc
jo
jno
jle
in
lock
in
add
fimull
lahf
mov
ja
loop
mov
iret
out
in
pop
stc
sbb
cmpsb
jbe
das
addb
in
mov
test
sub
push
mov
cmc
and
xor
fldt
es
sub
xchg
mov
dec
stos
pshufw
cld
out
pop
cmc
fcompl
push
hlt
loopne
shrb
cmp
cmp
sub
sub
fisttps
and
cld
and
ja
adc
add
mov
inc
popa
repz
mov
rolb
addr16
mov
mov
and
sbb
mov
xor
inc
mov
xchg
mov
outsb
or
insl
cmp
scas
xor
imul
fs
cld
das
cmc
cs
bound
adc
push
cmp
fmull
push
pop
sbb
or
lahf
leave
stos
repnz
cs
pop
jb
pusha
pop
xor
mov
repnz
xchg
sub
dec
add
sbb
jo
bound
xlat
xchg
insb
jl
mov
sarl
out
ror
cmp
inc
movsb
ret
pop
imulb
cmp
mov
ja
cmp
cltd
push
pop
dec
lods
lock
test
push
repz
daa
popa
lea
pusha
push
xor
lret
push
sahf
dec
mov
lea
and
dec
loope
fstps
mov
add
xor
inc
mov
sti
push
or
adc
xor
stc
and
aam
pusha
push
mov
sub
or
int3
leave
add
leave
pusha
mov
scas
push
std
insb
and
mov
jnp
pop
jnp
xor
and
pop
pop
and
pusha
push
adc
out
ja
fisubs
fs
push
mov
fidivrs
fnstsw
or
outsb
daa
sbb
addr16
lret
xchg
jne
jp
gs
inc
jp
jb
xchg
pop
dec
and
repz
sbb
cltd
dec
mov
add
inc
mov
cs
mov
icebp
adc
in
in
sub
mov
mov
sti
inc
push
mov
shlb
sbbb
push
scas
mov
jne
mov
loopne
xor
stc
cwtl
mov
xchg
clc
push
enter
lcall
push
lahf
je
lret
imul
mov
push
xor
test
loopne
roll
adc
cmc
inc
subb
pop
flds
test
sahf
add
mov
mov
push
xchg
sbb
scas
popa
or
and
pop
mov
stc
pop
mov
daa
ret
jge
cld
fwait
add
cmp
sarl
repz
popa
xor
addr16
cmpsl
xor
and
insb
dec
mov
mov
xchg
lods
daa
lret
scas
orb
mov
adc
pop
rorl
push
add
lahf
sub
mov
lock
test
int3
or
push
xor
imul
and
sti
sbb
shlb
adc
imul
lds
ja
add
pop
and
imul
jle
sub
movsb
jb
mov
inc
scas
xorl
out
jbe
call
add
mov
jo
xor
daa
push
add
mov
adc
cmp
inc
xchg
mov
lods
jecxz
out
bound
cmp
les
js
push
inc
adc
stos
imull
ss
mov
add
andl
dec
rorl
repnz
jno
call
shll
in
daa
clc
xchg
out
cld
loop
and
pop
pop
ja
pop
mov
or
jp
insl
jp
movsl
xlat
jle
mov
push
push
xchg
push
jmp
inc
adc
inc
add
dec
dec
scas
mov
inc
and
or
cmp
mov
movsl
cmp
push
test
mov
mov
inc
fwait
or
sub
out
psubd
stos
sub
xor
imul
das
icebp
and
orl
nop
popf
cmc
xchg
add
jb
mov
ljmp
mov
inc
pop
sbb
fldcw
inc
and
repnz
shrl
xchg
mov
and
jne
pop
and
cmp
icebp
sbb
mov
push
cmp
pop
test
sub
roll
scas
rorb
mov
xor
jecxz
dec
pushf
mov
and
mov
jns
add
mov
std
cmp
notl
mov
xor
mov
push
arpl
xor
test
hlt
cmp
dec
imul
push
arpl
adc
dec
lcall
test
mov
add
pusha
ret
xchg
ljmp
jae
movsl
dec
jb
xor
add
mov
das
ret
or
jae
mov
xor
insb
jae
cld
adc
pop
cmp
pop
push
je
xlat
or
push
push
jae
inc
inc
xor
enter
inc
roll
pusha
shl
push
mov
stc
pop
fidivrl
inc
pop
cmp
ja
jne
mov
imul
jmp
or
lods
testb
mov
sub
aaa
cli
out
mov
jns
daa
pop
cwtl
and
inc
rclb
xchg
mov
leave
inc
jo
xor
out
pop
mov
fidivl
push
pop
cli
out
cmp
aad
shrb
or
sbb
jns
in
xor
jmp
lret
cmpps
leave
shll
sub
enter
icebp
jns
pop
mov
mov
or
xchg
cmp
push
cmpsl
adc
dec
mov
or
mov
cltd
inc
loop
nop
and
pop
add
sub
mov
xchg
cli
pop
nop
shrl
fidivl
fs
cltd
stos
push
aaa
fistps
fdivp
inc
xchg
xchg
ret
push
pop
xor
popa
or
xchg
push
pop
aas
repz
xchg
popf
mov
test
sub
xor
sbb
mov
sbb
xor
inc
repnz
out
pop
adc
or
jl
popf
sub
fstps
out
sub
sbb
sub
push
cmpsl
xchg
adc
mov
mov
xchg
leave
xchg
bound
mov
adc
pushf
add
test
icebp
xor
add
into
sub
das
cmp
or
mov
daa
and
jne
mov
fisttpl
dec
test
enter
sbb
pop
or
pop
ljmp
bound
fdivrl
jne
sub
pop
jp
lcall
and
add
add
and
lock
pop
pop
cmp
ja
daa
xchg
mov
imul
jb
jae
pop
sbb
testb
pop
sbb
jl
icebp
mov
push
es
stos
dec
adc
cmovae
or
pushf
rclb
xor
sbbl
lods
fcomps
setle
xchg
rolb
push
insl
pop
mov
jecxz
lret
jl
aaa
adc
lret
iret
jo
mov
addr16
nop
jo
lock
cmp
pop
jecxz
add
or
mov
icebp
sbb
mov
mov
loop
popf
dec
xchg
iret
push
push
insb
xchg
daa
imul
aaa
jp
sub
inc
into
mov
loopne
mov
cmp
adc
test
or
cmp
add
sbb
out
rorl
push
pop
sub
sahf
pop
or
stos
jge
aam
or
popl
loop
sub
jns
xchg
mov
push
rcll
xor
jecxz
gs
jecxz
add
xlat
xor
stos
cmp
xchg
and
stc
outsb
xor
dec
sbb
jo
push
sbb
loopne
push
ljmp
sbb
xchg
fistl
mov
jo
jle
lret
cmc
sbb
daa
xchg
and
xchg
adc
mov
xlat
aam
sbb
dec
icebp
jecxz
out
shll
int3
pop
out
inc
mov
in
pop
push
stos
fldt
popf
movsb
pop
test
sub
mov
lcall
enter
int
test
xor
test
out
mov
enter
mov
pusha
repnz
stc
cmpsl
sbb
dec
loope
jge
aad
sbb
arpl
fyl2x
and
dec
and
das
and
je
pop
pushf
mov
in
xor
stos
mov
fs
mov
mov
adc
cmpsb
sub
push
test
sahf
and
and
leave
xchg
adc
loope
jbe
cwtl
icebp
and
xor
fmuls
insb
test
repnz
push
sbb
adc
cld
mov
iret
sub
mov
lea
cwtl
mov
pushf
lcall
add
loop
repnz
outsl
int3
or
mov
jb
icebp
pop
les
negl
popl
scas
pushf
aam
xor
mov
lods
cmp
push
lods
pop
push
cmc
fildll
imul
fldt
test
jo
lock
sub
aam
sbb
dec
pusha
pop
mov
or
imul
dec
repz
mov
xlat
stos
sub
test
out
mov
test
fs
pop
pop
insl
xor
mov
push
mov
ret
cmp
fucomi
or
stos
stos
xor
pop
ret
and
mov
lods
orps
xor
and
cmpsb
add
add
ror
xchg
sbb
std
pop
xchg
orb
mov
mov
mov
pop
test
push
xorl
sbb
int3
stc
cmp
inc
cltd
nop
or
stos
mov
add
std
stos
push
xor
cmp
out
push
dec
ja
xchg
xchg
popa
negb
movsl
and
mov
mov
cmpsl
xchg
inc
gs
aam
inc
add
xchg
cli
cltd
adc
dec
dec
fsubrl
loopne
fimull
pop
sub
nop
pop
aam
mov
je
xor
ffreep
popa
fidivl
inc
lds
out
add
xchg
popf
aad
int
iret
nop
cltd
xlat
mov
adc
pop
mov
decl
or
push
or
les
pop
aam
add
xor
fsubs
pop
ret
jbe
add
jmp
mov
push
pusha
jbe
mov
lds
dec
cmp
pop
fucomi
add
enter
cltd
xchg
sbb
mov
lods
insb
or
lds
inc
xor
add
fstl
push
pop
jle
or
sti
addl
je
fsts
lock
push
pop
jp
xor
mov
gs
inc
repz
imul
push
mov
jnp
popl
dec
js
lret
test
cmp
mov
push
sbb
push
pop
leave
loope
aam
in
mov
cmp
mov
mov
lret
andl
xchg
xchg
gs
jl
fldcw
cwtl
sub
cmp
pop
cmc
cmpxchg
out
xor
fildll
mov
dec
rcrl
sahf
stos
jns
mov
js
jns
subl
xchg
jmp
xor
bound
pop
mov
pop
jge
push
inc
call
sbb
jg
popf
repz
push
into
movsl
fldenv
jnp
adc
arpl
jae
rcll
adc
ja
scas
mov
add
adc
insb
mov
shrb
ja
out
ret
lods
ljmp
test
in
mov
pop
int3
subl
cli
mov
pop
movsb
iret
mov
mov
shl
sub
inc
fxch
sbb
mov
loopne
pop
fstpt
enter
pushf
adc
sahf
xor
sbb
decb
push
push
lea
and
add
shr
adc
pop
shll
fs
enter
push
lret
lahf
pop
xchg
mov
xor
cmc
cmp
cmpsl
movd
test
out
jbe
xor
into
ljmp
lock
call
jnp
sbb
fcoml
cmpsl
and
or
sub
outsl
sarl
pusha
scas
xor
pop
imul
in
mov
add
andl
shlb
cmp
pop
rcrl
call
xor
or
jne
sti
sbb
jae
mov
mov
jbe
sti
ret
or
xchg
int
mov
ja
add
push
pop
inc
outsb
pushf
pop
scas
fnstenv
jge
pop
ss
pop
add
xchg
pop
sub
jns
push
loopne
fildl
mov
lods
or
aam
addr16
dec
out
mov
add
dec
add
test
mov
scas
arpl
jmp
xchg
enter
or
syscall
pop
pop
out
inc
jp
inc
xor
mov
xchg
push
xor
or
sub
rorl
out
jns,pt
cmp
xchg
xor
mov
imul
fimuls
mov
repz
addb
mov
sar
outsb
xchg
xchg
mov
je
push
push
mov
dec
int
cmp
fildl
imul
xchg
jno
jo
dec
or
pop
std
mov
add
jl
sarl
out
adc
addr16
mov
add
sbb
dec
adc
push
fisttps
xchg
xlat
popf
sub
pop
mov
add
pushl
sbb
mulb
shrb
push
cli
iret
loope
and
stos
cmpsl
jg
in
jo
shll
sub
shll
sti
sbb
mov
xchg
push
adc
push
push
rcrb
jg
in
cwtl
sbb
dec
lcall
pop
adc
mov
mov
add
or
ss
hlt
leave
fidivrs
lods
adcb
lahf
xchg
xor
std
jno
inc
movq
daa
lock
fwait
insb
cs
mov
frstor
icebp
shrb
and
ficoms
stc
xchg
out
jnp
pop
pop
popf
out
fnstsw
fs
xlat
push
jg
out
ret
jle
xchg
sub
jmp
push
xchg
arpl
xchg
fsubl
mov
fldt
orl
jmp
out
outsl
push
mov
adc
int
cmc
imul
or
jg
ret
xchg
sub
cltd
movsb
int3
pushl
ffreep
data16
adc
fwait
inc
add
js
xor
cwtl
scas
push
in
inc
sub
insl
sahf
repz
js
adc
aad
push
xor
jbe
jo
push
inc
int
mov
dec
jo
mov
cmp
pop
ss
mov
jae
mov
adc
sbb
xor
and
incb
dec
xchg
in
imul
cmpsb
repz
or
or
pusha
mov
mov
mov
outsb
out
jnp
or
inc
push
add
clc
std
ficoml
push
orb
inc
clc
pop
clc
sbb
dec
mov
push
cmpsl
idiv
repz
jno
mov
mov
fprem
mov
mov
push
andl
sbb
dec
xchg
adcb
iret
insl
and
out
in
push
and
push
and
jnp
xchg
mov
jle
cli
loop
hlt
imull
and
pop
dec
data16
push
fs
fwait
mov
pop
xchg
ret
dec
mov
push
das
adc
mov
in
xchg
out
pop
push
decl
mov
mov
sbb
dec
cmp
xor
imul
fisubrs
add
pop
xchg
hlt
dec
mov
pushl
mov
das
inc
push
push
jg
and
xor
adc
je
mov
mov
mov
stos
sub
je
fcomps
jg
fildll
sahf
inc
or
negb
subw
cmp
hlt
mov
push
ljmp
jp
sub
inc
scas
inc
jnp
sbb
mov
cmp
pop
push
mov
adc
sub
sub
stos
xchg
add
jbe
cmp
call
xor
movsb
jbe
cmpsl
out
mov
mov
scas
mov
xchg
add
add
sbb
xchg
enter
xor
add
cmp
fdivr
mov
js
mov
jnp
inc
xlat
in
int
shll
dec
lods
and
mov
repnz
inc
mov
les
arpl
xor
test
jl
scas
mov
inc
pushf
mov
cmp
pop
sarb
outsl
addr16
fimuls
packssdw
xchg
mov
add
push
mov
in
pop
cmc
scas
cmp
daa
cmp
or
pusha
mov
sbb
gs
ds
cmp
stc
das
pop
cli
jae
shlb
xchg
call
aad
nop
pop
pop
out
xchg
ret
dec
mov
subb
dec
push
cmp
mov
sub
inc
mov
mov
fcmove
popa
push
lret
push
dec
int3
enter
xchg
xchg
push
pushf
add
xor
notl
inc
cwtl
out
push
inc
xchg
popf
fwait
cmp
jno
add
xchg
fimuls
mov
xor
adc
sub
cmc
popa
loop
and
gs
rcl
and
fwait
repz
out
mov
roll
loope
gs
sbbl
subb
xor
in
inc
jl
jg
push
repz
fbstp
out
adc
out
scas
mov
loope
lret
push
aam
rcrl
dec
outsl
dec
xor
pop
lea
xchg
sub
lock
jmp
mov
lods
cmp
jno
lret
and
daa
xchg
pop
sub
mov
fldcw
mov
lods
cs
pop
adc
xchg
cmp
pop
cmpl
test
test
jae
jle
push
setle
jl
mov
out
shll
mov
mov
in
adc
mov
imul
ret
movsl
lret
jle
pop
dec
shrl
arpl
je
pop
iret
pop
mov
cs
push
rcrb
or
sub
xor
pop
in
inc
orb
jno
adc
lea
adc
fwait
mov
pop
inc
mov
pop
loopne,pn
cld
gs
aas
or
mov
sbb
shl
inc
mov
sub
xor
iret
cmpsb
xchg
icebp
xchg
pop
jae
inc
xor
rol
mov
xchg
lods
sarb
push
out
sti
imul
test
ret
add
mov
imul
mov
or
ds
jnp
loope
leave
ljmp
push
loopne
pusha
shlb
push
cmp
jle
test
mov
inc
sub
pop
ret
ficoml
xor
in
mov
cld
push
mov
sub
out
ljmp
ficomps
mov
popf
xchg
jb
lods
mov
mov
and
mov
mov
hlt
aad
push
loop
cmp
hlt
or
sbb
push
jmp
jp
cwtl
in
notb
xor
sub
sti
bound
push
jmp
and
inc
out
inc
scas
out
fwait
jg
xor
stos
andps
lods
sub
ret
scas
pop
dec
lock
popa
inc
stos
insb
sbb
in
shlb
push
outsl
push
scas
arpl
jmp
cmpsb
aaa
or
repnz
outsb
out
stos
fidivl
dec
icebp
icebp
loopne
pusha
mov
in
ja
gs
arpl
addb
scas
in
mov
lret
bound
sbb
shll
jae
add
push
pop
mov
or
xchg
stos
add
outsb
xor
inc
cmp
clc
adc
dec
out
scas
scas
cli
and
clc
xor
push
xchg
lahf
sahf
sub
stos
mov
add
or
mov
scas
mov
test
repnz
push
clc
movsl
call
push
or
and
add
inc
sbb
ss
call
jge
sbb
cmp
mov
fcoml
ds
in
jp
push
jge
mov
outsl
jbe
mov
and
inc
sbb
sub
xorb
rclb
jp
sbb
mov
mov
out
cmp
add
push
das
call
fists
fcoml
loop
lahf
ret
inc
dec
lock
sbb
popf
inc
or
push
or
add
mov
xchg
pop
jl
pop
out
xor
or
jecxz
fcoms
lods
adc
mov
fdivr
icebp
outsb
lea
inc
in
push
add
pop
mov
dec
aaa
jle
rolb
jb
or
bound
rcrb
pop
test
add
imul
clc
loope
movb
xor
adc
mov
jecxz
xchg
ds
xchg
movsl
imul
outsb
aam
add
push
shl
sub
pop
test
fcoms
xchg
or
add
in
jns
rcrl
pop
mov
int3
push
aas
mov
lds
into
jo
fcoml
sbb
cmpsl
pop
inc
xlat
sahf
sarw
lret
jle
sbb
jp
inc
out
xchg
sbb
sbb
call
les
incl
int3
loope
mov
mov
sarl
sub
adc
mov
mov
jge
pop
add
inc
push
sbb
out
mov
ret
aaa
mov
int
jge
andl
jmp
mov
std
mov
aaa
cmp
ss
dec
xchg
fadds
loop
enter
js
popa
mov
cmp
mov
adc
xor
mov
cmpl
xlat
dec
test
mov
popf
mov
jbe
xor
xchg
icebp
movsl
lret
pop
shrb
push
sarl
jnp
xor
cmc
add
mov
pop
cltd
data16
rorl
push
cmp
cmp
scas
pop
push
inc
aad
mov
push
xchg
or
push
pop
nop
imull
xchg
popa
adc
rcrl
shl
cmc
mov
loop
mov
test
rcl
aam
cmp
adc
xchg
pushf
fnstenv
dec
and
sub
and
lret
js
cmpsl
xor
shr
faddp
push
pop
negb
arpl
dec
jno
jb
outsb
pop
jbe
jbe
fldt
mov
jo
cmp
aaa
scas
outsl
dec
cmpsl
out
cmp
mov
out
mov
adc
or
movl
cmpsl
xor
sub
mov
jge
fcmovnb
faddl
dec
dec
add
idivl
fists
add
ss
push
or
inc
into
adcb
add
adc
inc
inc
scas
mov
sub
cmp
sbbl
popa
dec
xchg
pushf
lods
and
pop
into
xchg
push
cmp
sub
loop
imul
pop
pop
out
movsb
cmp
mov
xchg
into
test
mov
notb
pop
test
mov
jbe
movsl
in
lcall
sbb
test
sti
mov
in
lret
sahf
fistpl
dec
shl
add
imul
xchg
mov
adc
adc
lret
in
cmc
je
mov
sub
jmp
xlat
sub
jecxz
scas
gs
adc
lcall
jbe
popf
stc
xchg
or
aam
scas
jmp
cltd
daa
mov
sarb
stos
ja
dec
cmp
aaa
repz
test
ljmp
add
ljmp
push
sub
inc
ss
je
mov
push
mov
fists
scas
xchg
dec
stc
push
lret
jb
iret
int
or
ds
mov
arpl
jno
xchg
adc
xchg
jmp
dec
aam
test
xchg
ljmp
fst
mov
xor
xchg
sub
stos
js
jl
inc
xor
add
pop
and
xor
sbb
repnz
das
test
push
jmp
cmp
mov
in
icebp
test
nop
mov
fwait
or
inc
mov
dec
pushf
sbb
clc
mov
ljmp
push
jnp
dec
idivl
dec
xor
sbb
xor
je
ds
lods
arpl
test
in
xor
jbe
stc
add
in
fcmovnb
lahf
cmp
das
rcl
ret
xchg
cs
pop
push
leave
mov
fs
push
popf
pusha
xor
ret
icebp
int
stos
cmp
xor
repnz
xor
gs
test
pop
cmp
xor
popa
push
es
aas
xchg
pop
sbb
rolb
cld
out
adc
dec
sub
lock
pop
jecxz
jle
inc
inc
xchg
mov
ret
dec
loopne
mov
lods
fwait
ret
mov
jl
dec
mov
repz
pop
sarl
int3
inc
mov
cmp
rol
cmpsl
push
enterw
cmp
pop
mov
xchg
pop
sub
and
mov
and
mov
mov
xchg
scas
xchg
lcall
mov
push
stos
dec
pop
int3
pop
lods
adc
and
cld
test
ret
mov
lret
jno
nop
sahf
imul
pushf
movsb
dec
xchg
lea
inc
outsl
je
aaa
mov
out
xor
fadd
adc
flds
test
push
shll
sbb
lret
insl
add
sbb
jb
cmp
fimull
pop
add
mov
or
cwtl
int
dec
hlt
mov
mov
cmpsb
mov
xchg
mov
push
pop
enter
into
sbb
xor
jno
mov
xchg
jle
aad
pop
sbb
push
push
ss
add
repz
lods
xchg
rcrl
lret
call
xchg
mov
iret
mov
sbb
jecxz
dec
or
fcmovbe
pop
adc
and
mov
sbb
sub
lods
jge
push
add
xchg
sbb
lds
cmpb
negb
nop
dec
pop
int3
sbb
mov
outsl
rcll
cmpsb
leave
pop
jmp
movsb
lea
push
mov
cld
js
dec
xchg
in
mov
mov
push
pusha
xchg
add
ret
mov
fidivl
cmpsl
jns
scas
add
sbb
in
xchg
adc
getsec
push
call
pop
and
mov
dec
sbb
clc
or
and
pop
mov
jle
dec
and
jmp
sbb
mov
loop
xchg
mov
dec
loopne
imul
rcll
out
mov
hlt
xor
and
cmp
pop
inc
aad
adc
push
shl
add
mov
add
arpl
add
ss
xor
std
add
bound
pop
inc
jne
mov
jmp
jge
jno
inc
movsb
dec
and
notb
mulb
xor
mov
clc
test
outsb
adc
rorl
leave
push
inc
mov
lods
adc
adc
enter
bound
inc
push
in
xchg
sbb
jmp
outsb
lret
popa
insl
sub
rol
jecxz
mov
in
adc
jne
bound
inc
cli
xchg
movsl
roll
ja
add
inc
xchg
pop
pusha
lods
and
mov
fstps
and
scas
ror
rorb
mov
test
push
int3
cmp
les
pop
shlb
and
sbb
jnp
adc
popf
ret
out
lods
jp
rorb
xor
pop
lret
je
push
or
loope
sbb
xchg
mov
cmp
notl
dec
sahf
jo
lods
pop
test
out
or
repnz
andb
sub
pop
jo
outsb
inc
cmp
cmp
cmpsl
push
mov
cltd
iret
xor
jg
cmp
cwtl
scas
leave
push
arpl
push
adc
insb
pop
mov
scas
std
mov
sub
jge
lea
xor
xchg
insb
jno
int
test
push
inc
mov
pop
lcall
jo,pn
mov
fcmovbe
popa
jno
jl
roll
pop
rcl
inc
test
mov
addr16
repz
xor
in
xor
or
jg
lahf
fnstenv
lock
fisubl
dec
jae
xchg
test
test
pop
cwtl
push
testb
mov
xlat
rorl
cmp
insl
xor
dec
mov
icebp
mov
cwtl
inc
jg
xchg
movsb
mov
cs
jnp
nop
adc
dec
adc
xor
lahf
pusha
lret
jp
ds
call
push
popf
mov
push
test
push
inc
lds
mov
adc
test
and
adc
and
xchg
pop
push
fidivrl
push
lret
cmpsb
adc
xor
clc
lret
clc
movsl
lcall
adc
sahf
pop
inc
lret
mov
shlb
lcall
cmp
loop
scas
sarl
mov
or
sub
arpl
jo
fucomip
xchg
inc
jnp
mov
out
hlt
scas
cmp
test
dec
sbb
pop
imul
sub
xchg
lcall
das
mov
mov
xchg
test
inc
loop
mov
cwtl
mov
in
std
ljmp
ds
adc
jae
sarb
mov
mov
in
insb
cmpsl
out
xor
ror
and
sbb
cmp
add
clc
fsubs
insb
sub
shlb
dec
jmp
ret
or
jo
stos
mov
jb
int
push
repnz
idivb
pop
xchg
cmp
sub
jnp,pt
xchg
adc
pop
xlat
mov
dec
adc
pushf
loopne
cld
dec
sbb
or
sahf
icebp
sti
add
addb
jne
mov
and
push
xor
cmp
fidivs
cwtl
cmp
nop
inc
add
sub
sbb
faddl
xor
sub
cwtl
push
push
ficoms
jp
xchg
ror
ss
xchg
xor
xchg
addr16
sub
mov
jbe
jno
pop
das
les
dec
addr16
lret
inc
push
jne
push
rclb
jp
loopne
and
adc
int
jl
xlat
fstpl
sbb
xchg
fstps
pop
pushf
mov
aas
or
mov
xor
push
stc
mov
inc
into
negl
lods
les
jb
and
push
jmp
stos
xchg
mov
inc
cmp
neg
pop
xlat
inc
mov
scas
pop
inc
sbb
push
push
adc
cmp
xchg
mov
jle
incl
pop
das
adc
mov
inc
xchg
sbb
mov
mov
jnp
xorb
idiv
lret
mov
sub
js
xor
xchg
add
push
or
pop
inc
leave
decb
or
in
add
repz
jne
xor
cmpl
jle
push
push
cmpsb
xchg
jle
popl
jbe
sub
pop
mov
xor
jge
pop
fcompl
pop
inc
add
into
push
rcrl
cmp
outsb
push
cmp
dec
into
aam
sub
push
movsb
mov
cmp
insb
mov
fcoml
inc
icebp
and
lds
cmp
mov
daa
jb
jge
out
push
pop
push
or
or
cld
in
int
mov
insl
aas
popf
scas
popf
jnp
sub
cmc
pop
jbe
pop
pop
lock
mov
sahf
fcomi
adc
ljmp
dec
call
xchg
jge
dec
and
outsb
adc
sarl
mov
jge
mov
xchg
push
adc
loopne
and
fcmovb
sub
mov
mov
movsb
pop
dec
fisubrs
stos
push
sub
jo
push
mov
cmc
les
xor
mov
sar
inc
or
vsubps
clc
inc
push
mov
pushf
jnp
mov
icebp
lods
sbb
cmp
or
push
jg
in
cmpsl
inc
adcb
mov
cmp
push
or
dec
les
adc
mov
lcall
push
iret
sahf
into
clc
mov
lods
sub
pop
xor
mov
or
andb
fs
loope
xchg
jnp
mov
insb
cs
xor
inc
cmp
fildll
pop
cmp
mov
cld
dec
rolb
jp
shl
repz
mov
jmp
in
dec
inc
nop
jns
sbb
pop
mov
push
fcompl
aaa
and
xchg
rcrl
mov
ss
or
test
mov
dec
ss
cmpsb
sbb
lret
in
fucomp
ficompl
sub
imul
sub
loopne
pop
movsl
pop
push
icebp
xchg
iret
xchg
or
mov
lods
xchg
mov
xchg
push
mov
cmp
jb
add
cmp
mov
jo
ljmp
shrb
negb
dec
dec
dec
xor
scas
xchg
and
mov
xchg
dec
pop
dec
xchg
in
sub
gs
pop
cmc
aas
fistpll
mov
ds
cmpsl
mov
xor
fs
and
je
mov
jnp
gs
test
aas
call
adc
std
sbb
cmp
xchg
divb
loopw
fs
aaa
in
pop
fldl
test
roll
mov
push
pop
cs
xor
mov
push
xchg
mov
mov
inc
xchg
jp
jnp
sub
stos
mov
test
fimuls
push
mov
nop
push
inc
loop
jae
cli
outsb
test
scas
push
cli
out
add
lods
std
sbb
pop
int3
add
sub
sbb
adc
dec
jae
not
jle
mov
mov
inc
shll
pop
or
dec
inc
mov
in
jno
lahf
sub
push
pop
jno
mov
outsl
jmp
sub
fiaddl
fs
cs
xor
idivb
adc
push
int3
dec
ret
je
inc
xor
hlt
leave
ret
mov
dec
aas
mov
imul
or
inc
or
inc
into
and
fdivrl
clc
sbb
leave
imul
cmc
fsubrl
mov
adc
outsb
int
lret
divb
insb
es
sbb
push
mov
pusha
and
test
add
and
push
loopne
xchg
inc
or
xor
xchg
daa
mov
pop
shlb
inc
lret
inc
je
lods
int3
mov
movsb
int
mov
stc
dec
xchg
jo
sbb
aad
out
xlat
lret
out
pop
stc
rcr
pop
sub
dec
decl
pop
into
lret
adc
mov
ja
xchg
movl
ds
dec
inc
lods
std
aam
sahf
into
pop
xchg
je
pushf
push
aad
nop
cmp
cld
pop
test
cmp
dec
mov
push
pop
add
inc
movb
adc
or
xor
pop
pop
int
daa
cmp
inc
lods
popf
pop
adc
outsl
cmpsl
adc
aad
movsl
jle
xchg
mov
stc
adc
rolb
call
fiadds
xchg
xchg
mov
popa
fidivrl
push
test
inc
imull
out
dec
mov
sbb
xlat
notb
stc
jle
ds
adc
mov
push
xchg
mov
into
inc
data16
hlt
inc
cmpsb
movsl
sbb
sbb
xlat
mov
xor
jb
sti
jns
add
mov
rcll
out
or
lods
scas
data16
xchg
out
adc
mov
stos
pop
ss
addr16
mov
inc
pushl
ja
repz
fiadds
push
mov
fisubrs
adc
or
shll
adcb
lcall
mov
fdivrl
cmp
stos
jl
mov
push
mov
push
and
mov
mov
into
imul
pop
push
jno
js
ds
shll
fiadds
or
mov
sub
jecxz
jge
jne
mov
ret
icebp
cmp
mov
data16
cmp
sbbb
inc
mov
ja
dec
nop
into
pop
add
rorb
ret
sbb
adc
lea
mov
addr16
push
mov
adc
int
pop
aas
out
xorl
pushf
push
mov
inc
adc
mov
push
adc
mov
or
mov
sahf
repz
sub
jecxz
call
leave
fisubs
mov
inc
fcmovu
mov
and
cmp
mov
mov
add
stc
imul
orl
imul
dec
test
addb
lock
out
into
lret
dec
sbb
out
pop
das
push
jg
inc
and
add
out
stos
mov
mov
inc
or
mov
pop
or
nop
pushw
mov
cmp
cmp
sbb
adc
xor
rcr
push
push
movsl
pusha
clc
pop
mov
mov
incl
jbe
repz
daa
into
lret
in
addb
mov
aam
pop
and
mov
imul
jno
dec
imul
mov
ds
cs
pop
push
aaa
out
dec
mov
gs
cs
cmp
pop
inc
mov
xchg
test
aas
pop
cmpsl
scas
nop
adc
in
std
aas
ljmp
xchg
test
add
ret
xlat
aam
mov
loopne
enter
ss
inc
lock
dec
shufps
jne
jg
mov
sub
outsl
push
or
loop
scas
mov
inc
fmuls
push
daa
sub
out
xchg
in
test
mov
push
dec
test
push
and
les
push
jnp
sub
jno
dec
sub
roll
push
leave
loop
dec
inc
inc
jbe
sbb
fcmove
add
inc
mov
mov
push
popa
stos
jp
idivl
pop
jb
xor
inc
loope
popf
aad
xchg
aam
jle,pn
xchg
mov
sbb
in
add
inc
cs
popa
outsl
loop
inc
or
cmp
sub
jl
dec
mov
push
shrl
xor
cltd
and
lock
shrl
dec
shr
jns
in
xor
hlt
dec
popf
pusha
bound
dec
mov
sub
pop
ljmp
pop
xchg
add
inc
js
arpl
out
and
xor
sahf
xchg
sub
jb
add
roll
cmpsl
or
stc
inc
lods
and
pop
push
iret
nop
add
fcmovnbe
lock
sub
out
mov
repz
fsubrs
addr16
jge
movsb
imul
push
xor
pop
ja
inc
out
pop
add
fs
xchg
inc
push
sub
std
test
lahf
push
xchg
sahf
outsl
sbb
push
in
sub
rcll
call
mov
ds
dec
jae
inc
push
adc
mov
sub
inc
inc
cwtl
xor
fisttps
dec
lds
roll
sub
sbb
jp
into
sbb
jmp
loopne
or
adc
mov
or
daa
push
insl
lcall
loope
mov
or
mov
jnp
mov
sbb
mov
mov
push
addr16
pop
cltd
loop
fsubs
push
lods
pop
int3
dec
shll
sbb
pop
push
mov
dec
jnp
cmpsb
xchg
jp
jl
int
mov
decb
hlt
cld
pop
lea
aam
mov
std
jnp
or
inc
lahf
mov
dec
fsubrs
and
or
lock
mov
adc
lcall
test
cmc
sbb
sti
jmp
int
lahf
cld
ret
shlb
or
icebp
mov
push
f2xm1
cmp
push
loop
mov
add
fs
xorb
les
xchg
xor
jbe
lods
loopne
or
adc
aaa
fsubs
nop
and
pop
in
jge
mov
dec
cmp
adc
xchg
push
into
mov
cli
clc
call
inc
decb
inc
test
fists
fstps
loopne
out
cmp
dec
or
jle
and
fs
xchg
popa
xchg
xor
es
fimuls
jo
fldl
outsl
dec
sbb
xchg
xlat
pusha
fbstp
fisubs
hlt
loop
testl
jno
xchg
dec
mov
xor
in
cmp
orl
aaa
push
jbe
push
jge
adc
out
cmp
cli
sbb
cmpsl
ljmp
loopne
into
or
mov
pop
loopne
push
mov
mov
pushf
ret
add
add
xorl
cmp
pop
rolb
jl
test
shrb
loop
pop
pushf
pop
inc
cli
lret
ret
and
mov
int
jmp
lods
push
in
ret
cmp
xchg
dec
roll
pop
add
lret
pop
enter
mov
mov
pop
pop
jle
push
mov
xlat
fidivrl
daa
or
ds
decb
add
push
in
pop
ja
pop
cmpsb
sub
pop
pop
or
subb
movsl
testl
sbb
adc
sbb
pop
bound
nopl
lahf
xchg
cwtl
out
imul
rcr
mull
mov
out
push
and
outsl
pop
aam
add
fildll
cmp
icebp
lea
pop
mov
sub
rcl
sahf
dec
and
out
inc
addr16
lret
arpl
in
movsb
xchg
clc
cld
push
test
mov
cmc
addr16
aam
push
mov
jp
scas
add
cmp
adc
inc
ret
mov
xchg
mov
sub
cmpsb
repz
std
int3
mov
sub
pop
jne
sub
and
dec
dec
mov
cmpsb
add
mov
adc
adc
pusha
lcall
and
and
mov
sub
in
push
out
push
sbb
mov
stc
ja
mov
fadds
scas
inc
cmp
adc
xor
push
mov
mov
ret
mov
addr16
mov
jnp
jns
pop
call
add
jno
dec
xor
xlat
arpl
out
or
mov
mov
add
adc
mov
mov
add
inc
rcr
push
mov
xor
lea
ret
or
add
data16
ljmp
xor
out
xor
ja
lret
popa
mov
xor
push
xchg
sub
add
sbb
sub
inc
mov
ja
cmp
push
loopne
cmp
xlat
sub
test
pop
rorl
add
imul
fs
imul
cmp
cmpl
dec
cmp
inc
adc
int3
js
test
push
mov
shl
ss
fcoms
nop
cmp
ja
mov
add
add
cmp
scas
jbe
lret
mov
jnp
pop
push
xchg
mov
inc
aaa
mov
mov
mov
fs
jmp
cld
xor
xchg
push
aam
cmp
or
test
out
lods
rolb
pop
mov
cmp
sahf
subl
cmpsl
icebp
ficomps
pop
in
pop
pop
inc
dec
lret
imul
or
inc
jl
and
arpl
repnz
aas
cmc
mov
dec
mov
lret
xchg
popf
mov
je
cmp
fcomip
jg
loopne
out
push
bound
inc
clc
ljmp
ss
pop
inc
inc
stos
or
add
enter
lcall
cmp
data16
jns
pop
popa
aas
test
and
jnp
dec
pop
dec
stos
jno
or
pop
jnp
in
jmp
lods
test
fldt
aaa
shlb
ljmp
rorl
aas
add
inc
outsl
dec
jnp
ret
pop
aas
test
clc
test
mov
and
push
sub
lahf
rorb
aam
add
adc
mov
roll
inc
in
mov
mov
lds
adc
or
lret
xchg
push
and
pop
jno
ret
out
pop
int
inc
mov
fs
fisubs
out
sbb
ret
mov
test
outsb
mov
test
clc
movsb
xchg
sub
jae
add
sub
fistps
aam
or
jb
imul
lea
cmp
xor
nop
lret
pop
decb
fldcw
test
mov
insl
sub
and
frstor
aas
ja
fwait
jbe
and
addb
push
ss
rcrb
mov
jl
xchg
cmc
mov
mov
add
xchg
cmp
lcall
pop
xchg
xchg
pop
rclb
inc
repnz
lfs
rcrb
dec
cmp
sub
add
mov
pop
leave
add
in
in
addl
call
inc
xchg
pop
cltd
jl
adc
cmp
xchg
adc
jbe
stos
bound
push
sbb
mov
std
ds
xchg
loope
inc
jecxz
push
pop
jmp
fldl
stc
sahf
cmp
js
dec
xor
das
scas
add
aad
add
nop
cs
dec
jnp
and
and
loope
push
cmp
pusha
push
inc
sbb
cwtl
shll
clc
fstl
xchg
incb
mov
pop
add
sbb
fstpt
pusha
daa
loope
add
pop
loope
and
xor
xchg
into
jno
out
int3
mov
das
push
adc
stc
sub
fadds
lret
outsl
clc
or
xor
mov
jnp
cld
sbb
nop
jp
cmc
popf
pop
stos
dec
dec
jo
test
aam
mov
jbe
jle
out
pop
mov
int3
cli
jae
sbb
mov
push
sbb
push
cmp
jo
dec
daa
fmull
inc
mov
xchg
shll
pop
ret
push
lahf
inc
mov
dec
std
pushf
xlat
ret
ret
sub
imul
rorl
mov
out
sahf
mov
bound
movsl
xor
out
pop
insl
sbb
rolb
dec
leave
mov
sbb
repz
cmpsl
inc
or
mov
inc
sub
add
or
mov
stos
sub
sbb
lds
xor
out
push
mov
mov
sbb
mov
dec
in
imul
xor
sub
ss
lods
ret
mov
out
into
shrb
ss
xchg
mov
xchg
idivb
push
cmp
pop
jne
repnz
sub
push
push
sub
xor
add
xor
es
cmpsb
shrb
mov
sub
ljmp
sbb
cli
xlat
icebp
call
xchg
addr16
adc
test
movsb
divl
dec
fsts
xchg
or
pop
gs
fistpl
inc
addl
and
movsl
aaa
stos
fsubrl
add
rol
dec
adc
popf
fisttps
cmp
shl
in
dec
mov
xchg
pushf
jmp
test
shll
mov
enter
sbbb
pop
or
jp
loopne
idivb
pop
or
repz
leave
dec
mov
pusha
mov
sub
mov
jle
cmp
rorb
das
fisubl
test
push
xchg
nop
or
loopne
mov
in
dec
inc
xor
cmpsl
test
cmp
loope,pt
ds
mov
nop
sub
xchg
aas
rolb
loop
mov
cs
imul
mov
sbb
in
push
or
test
mov
andb
sub
mov
xor
rorl
in
mov
adc
cmp
jmp
jno
out
dec
cs
cmpb
daa
fisubs
sbb
aas
xchg
mov
loopne
shrl
inc
arpl
das
rcpps
push
or
test
mov
or
jmp
sbb
dec
mov
or
imul
sbb
pop
add
push
inc
mov
sub
js
add
loopne
or
icebp
lahf
fcmovnu
or
cmpsl
lods
adc
sbb
push
in
je
inc
addl
aad
sbb
lret
dec
inc
xchg
xchg
inc
in
push
jo
mov
pop
lret
scas
out
lds
xor
cltd
push
sahf
mov
jl
jno
or
and
fdivs
jecxz
scas
lods
jne
cmp
fbstp
pop
lods
scas
std
insl
and
mov
dec
xchg
jecxz
dec
adc
xchg
pop
and
inc
shlb
in
stc
xor
mov
mov
jmp
sub
rol
inc
pop
shlb
mov
jge
stc
sub
ret
rcrl
push
jno
inc
sub
insl
fsubrl
xor
std
sbb
movsl
and
cmpsl
xor
outsl
push
aad
xor
and
ret
insl
lea
jmp
sahf
test
loopne
dec
and
mov
int3
sbb
xchg
lahf
xor
mov
sbb
rol
push
sub
lods
in
pop
fldt
push
mov
stos
pusha
ljmp
insl
and
fnsetpm(287
sub
insl
out
divb
in
fwait
and
int
hlt
das
dec
cwtl
cmc
adc
gs
cmp
icebp
mov
add
add
sbbb
push
mov
cli
incb
cmp
sub
and
ficomps
int3
insl
push
inc
jnp
stos
sub
movsb
frstor
fdiv
xor
push
push
and
leave
ljmp
bound
shr
push
fidivl
jns
inc
clc
push
jge
mov
or
daa
add
adcl
bswap
lea
xchg
dec
in
cmpsb
aam
pop
imul
into
jno
dec
sbbb
pop
pop
inc
and
ss
fisttpll
push
into
sar
fiaddl
dec
and
pop
insb
aas
hlt
push
fstpl
outsl
jmp
push
cmp
push
popa
rorb
decl
cmp
mov
mov
outsl
and
sbb
imul
fcoml
adc
inc
adc
dec
mov
mov
jecxz
mov
mov
pop
inc
in
adc
and
test
bound
jecxz
lcall
or
mov
mov
jb
sub
jl
call
jmp
int
icebp
orb
aam
xor
mov
out
mov
pusha
mov
popf
pusha
cmp
dec
sub
cli
out
cld
out
sub
pop
sahf
in
sti
dec
cmpl
mov
ljmp
pop
nop
sub
aam
rorb
pop
jp
mov
roll
test
clc
inc
dec
fwait
jbe
fcoml
or
fcmovnu
cmc
xchg
test
fsubr
call
inc
or
cli
int3
inc
or
pop
sbb
mov
sbb
ljmp
xor
clc
mov
insb
jb
add
xchg
lods
dec
bound
push
push
aad
mov
xor
push
loopne
pop
cs
mov
inc
stc
inc
pop
and
pop
dec
movsb
loop
in
mulb
outsl
lcall
test
mov
test
dec
loope
mov
mov
notb
lock
das
lahf
cmc
cmp
push
jo
mov
out
inc
lock
add
pop
inc
lock
dec
jl
mov
xchg
test
push
push
xchg
sub
fdivrs
push
les
mov
push
dec
cmp
mov
movsl
ret
imul
push
inc
call
mov
loopne
lret
push
fsubrl
jno
es
rolb
mov
lea
dec
ud0
in
cltd
jp
push
dec
push
test
xchg
and
push
rclb
cmp
mov
push
lods
mov
dec
push
push
xchg
xor
xchg
clc
xchg
ficompl
imul
inc
mov
jle
inc
pushf
sbb
movsl
mov
cmc
das
and
mov
mov
push
mov
lock
and
adc
out
or
dec
iret
mov
cmp
cmc
aam
lret
inc
test
repz
in
push
push
scas
aas
mov
jle
ficompl
xor
imulb
std
mov
sahf
xor
adc
repnz
pavgw
xchg
mov
fisubs
mov
pop
mov
add
scas
insb
mov
add
fisttps
mov
jo
mov
dec
lahf
inc
add
dec
jge
mov
into
clc
pushf
out
addl
push
pop
xchg
loopne
or
jne
out
cld
cmpb
mov
push
imul
mov
mov
jge
fiaddl
xlat
inc
inc
loope
pop
int
jmp
sbb
std
fnstenv
loopne
in
mov
ret
out
jecxz
js
std
fmuls
xchg
jns
cs
mov
lds
pop
dec
push
ljmp
iret
repnz
jecxz
popf
mov
fcomp
sbb
test
imul
ret
enter
aad
and
or
in
test
inc
add
xchg
into
pushf
addr16
xor
pop
mov
dec
scas
push
or
add
sahf
outsl
pop
lahf
test
clc
aam
pushf
xor
mov
cmp
iret
das
mov
inc
lds
js
and
fs
aas
jne
mov
mov
mov
sub
orl
pushf
aad
arpl
pop
fisubs
outsl
mov
insl
and
xor
test
jmp
sbb
out
cli
insb
sbb
sbb
push
push
sub
inc
mov
mov
and
jl
mov
or
cmp
xchg
loopne
out
and
mov
or
xlat
sbb
daa
jnp
add
daa
out
add
daa
pop
mov
push
push
pop
sub
adc
call
repz
push
sbb
xlat
lret
xor
push
mov
pop
movsb
adc
lahf
hlt
push
mov
pusha
and
add
sbbl
orb
popf
gs
or
js
xchg
pushl
cwtl
jbe
mov
lahf
cld
out
cld
xor
shll
shll
lret
xchg
sub
js
fwait
and
sbb
sub
mov
fbstp
pop
fstpt
cmp
cltd
or
in
stos
inc
jns
mov
jno
aas
outsl
add
mov
daa
divl
mov
sub
mov
pop
push
leave
mov
fld
lahf
xor
filds
negb
inc
adc
jae
dec
inc
ljmp
jnp
mov
sbb
mov
mov
mov
dec
addr16
test
inc
dec
push
dec
push
jge
mov
lods
inc
mov
push
popf
vpslld
inc
scas
cmp
jb
push
daa
adc
scas
jnp
add
test
push
jnp
mov
jo
dec
and
mov
iret
rcll
jp
inc
nop
mov
jle
jmp
es
sub
jecxz
xchg
mov
sbb
mov
push
cwtl
push
jecxz
mov
sahf
rorl
mov
jmp
shll
test
cltd
xor
or
sub
mov
imul
mov
dec
int3
mov
pushf
and
push
mov
jp
sti
cmpsb
imul
jmp
dec
gs
cld
push
test
int3
sbb
pushf
sub
out
dec
xlat
mov
dec
push
mov
cmpsl
test
mov
sahf
out
inc
jbe
loopne
add
cs
xchg
and
sbb
mov
add
and
dec
lea
jns
fucomip
cld
js
xchg
mov
int
leave
dec
cmp
inc
ljmp
loope
or
sbb
xchg
in
mov
mov
pop
pop
pop
mov
popf
test
pop
add
jb
iret
mov
jnp
add
fstpt
mov
fcmovbe
or
adc
movsb
mov
mov
sahf
xor
nop
mov
cmp
xchg
and
or
cld
or
pop
adc
inc
lret
cltd
mov
fldenv
lcall
nop
fldt
ja
push
in
and
adc
cmp
push
lds
fiadds
loop
adc
test
jo
mov
mov
sbb
lds
mov
js
test
in
cmp
fisubs
cmp
stos
cmp
loopne
arpl
scas
mov
test
test
pop
ljmp
shr
repz
sub
inc
xchg
in
mov
in
test
insb
lds
sarl
call
sahf
jns
test
arpl
sbb
shrb
aaa
dec
pop
fsubl
aaa
sub
sbb
pop
imul
dec
cmp
jns
sahf
pop
fnsave
add
ret
mov
add
mov
mov
inc
jb
ror
imul
fisubrl
aas
and
cwtl
rorb
cmp
out
push
jnp
call
push
xchg
dec
mov
adc
xor
push
or
outsl
xchg
inc
ja
pop
addr16
outsl
mov
mov
es
mov
and
inc
popa
ljmp
sahf
mov
push
adc
int3
fstpt
arpl
lret
cmpsl
jnp
stos
jecxz
imul
lds
push
xchg
ljmp
add
stos
adc
sti
scas
mov
pop
out
jmp
mov
xchg
jmp
fcoml
pop
cmp
lds
adc
jecxz
shlb
push
cmc
jo
adc
mov
xchg
loop
jg
inc
inc
push
mov
add
ljmp
movl
imul
aad
xor
and
movsl
mov
gs
or
aam
xor
push
loope
pop
inc
js
push
push
es
cs
cmp
mov
fs
mov
or
add
sbb
jne
outsl
jp
xchg
pusha
out
scas
add
pop
addr16
mov
inc
in
pushf
sbb
lods
andl
jnp
jne
sub
sbb
inc
fdivrl
pop
mov
leave
push
mov
or
fcmovnu
rcrb
push
push
mov
imul
les
pop
push
mov
and
inc
scas
mov
enter
imul
and
xchg
add
push
mov
cld
mov
push
decb
pop
sub
inc
pop
arpl
jle
fidivrl
add
stos
pop
adc
sbb
cltd
xor
lods
test
sbb
std
int
push
pop
xchg
sbb
rcll
mov
and
ficoml
cmp
ljmp
push
push
cmpsb
movsl
test
jbe
sub
xchg
iret
fdivrl
mov
jae
adc
ds
jb
call
push
mov
xchg
lahf
add
icebp
sbb
notb
add
test
ljmp
inc
imul
mov
or
xor
aaa
arpl
aad
insl
add
xchg
out
adc
lock
xchg
roll
mull
jae
testb
sbb
int3
loope
ficomps
sub
add
insb
and
dec
nop
js
sbb
adc
out
into
cmp
loopne
es
and
xchg
lock
cmpsl
adc
sbb
push
cmp
pop
ljmp
repz
xchg
xor
mov
shr
test
dec
push
xchg
call
fmul
sub
jmp
cmp
lcall
or
leave
test
pop
cld
pop
adc
jns
pop
fmuls
pop
mov
mov
jmp
sub
loop
inc
mov
push
push
lret
addr16
outsl
xchg
cwtl
pusha
dec
ja
xchg
ljmp
into
push
xor
fmuls
pmaddwd
pop
mov
cmc
test
cmc
outsb
push
icebp
push
sub
sarl
jp
arpl
or
scas
mov
hlt
push
fs
movsl
or
xlat
lret
in
test
sti
mov
xor
xchg
xchg
jns
push
int3
inc
pop
sbb
sbb
fwait
mov
xor
dec
add
adc
mov
push
mov
loopne
mov
popa
and
cmp
mov
or
mov
xor
jbe
ja
out
iret
xor
xor
mov
lret
shrb
mov
cmp
sbb
mov
or
movsl
cld
lahf
inc
in
loop
sbb
push
mov
fisttpl
or
fisubrs
in
cmpsl
xor
fldl
inc
or
mov
fildl
lea
js
mov
dec
ret
jnp
fisttps
aaa
inc
cmp
cltd
xchg
scas
in
fwait
mov
cmp
xor
cmp
xchg
jae
incl
or
jne
popa
pop
idivb
shlb
push
push
inc
enter
out
shlb
loop
mov
popf
dec
fcmovb
aaa
adc
adc
push
ret
gs
stc
notb
or
add
sbbb
das
cs
mov
jns
fcmovb
xor
ret
out
mov
pop
in
and
pop
es
loope
ljmp
std
inc
sbb
dec
popa
es
cld
jns
mov
add
push
loop
pop
xlat
hlt
movsb
dec
fnsave
sub
xchg
mov
add
rol
xchg
pop
pop
xchg
rcll
xor
push
sbb
adc
dec
dec
iret
inc
cs
aam
mov
jle
arpl
xor
test
mov
ja
sbb
in
ss
and
movsl
imul
push
mov
pop
call
push
push
pop
adc
or
lods
mov
ja
cmc
lds
dec
mov
jge
dec
dec
mov
imul
mov
fldt
daa
shrl
pop
test
or
sbb
cmovl
imul
mov
mov
xchg
push
jge
shrl
mov
mov
hlt
cmp
shll
xor
arpl
gs
shlb
mov
add
jmp
aam
bound
push
movsl
dec
les
dec
xor
cmp
mov
aas
push
cmp
jae
jno
std
jmp
sti
inc
mov
and
fstpt
pop
ret
xor
stos
mov
fnstsw
push
pusha
mov
push
xor
out
loop
fsub
jge
or
mov
daa
jae
mov
lods
out
pushf
dec
adc
popf
sub
pop
xor
jae
jns
push
mov
mov
push
nop
sbb
cmp
mov
fs
repnz
mov
pop
rcrl
in
test
pop
punpckldq
pop
mov
bnd
push
and
or
aam
dec
xchg
stos
fldenv
ret
mov
dec
dec
sbb
movsb
aad
sub
sbb
ds
and
scas
sbb
and
and
stos
push
sub
cmp
ja
or
out
ss
sub
sub
push
ds
mov
adc
push
mov
popf
iret
xor
dec
lods
or
mov
outsl
out
cmp
push
pop
jae
push
cwtl
xchg
inc
out
push
popf
sbb
outsb
ljmp
dec
dec
mov
xor
imul
push
subl
dec
adc
pop
pushf
shl
jae
xchg
test
pop
pop
movsl
ret
dec
push
jns
dec
mov
pop
push
sbbb
mov
jo
js
lods
cmp
cmpsl
stc
cld
xchg
psrlw
nop
lods
cmc
sahf
movsl
jb
lds
fistl
push
cmp
mov
ret
aas
out
cwtl
jecxz
pop
das
ffreep
xchg
out
aad
aad
ljmpw
inc
aad
xor
test
inc
add
scas
test
mov
pushf
dec
fadd
in
popa
mov
sbb
mov
pop
pop
sbb
pop
dec
and
sub
pusha
mov
mov
mov
js
outsb
imul
mov
and
xchg
aam
mov
sbb
mov
sub
mov
sbb
gs
dec
add
mov
jno
dec
movl
and
imul
mov
jl
sbb
es
adc
cmc
xchg
andl
repnz
xchg
add
add
repz
mov
dec
mov
das
push
and
mov
jo
fwait
testb
fimull
jge
pop
sbb
ss
jo
pop
xchg
das
sbb
out
movsl
mov
sbb
int
dec
insb
mov
les
pop
daa
add
mov
or
jo
mov
ja
out
adc
shlb
cwtl
mov
mov
push
mov
and
sbb
sbb
sbb
test
ret
ljmp
jl
xchg
sbb
leave
jg
fidivrs
mov
adc
push
popf
jg
ss
push
dec
shrb
insb
aam
nop
jge
int3
jl
test
push
out
xacquire
sbb
fwait
mov
out
pop
imull
arpl
imul
mov
jae
push
std
shlb
mov
fucomp
xchg
sbb
cmpsl
pop
push
insl
shl
and
pop
cmp
inc
and
aam
push
mov
test
xchg
and
je
cs
and
pop
pop
inc
iret
lea
popf
js
add
aad
popf
fcmovne
push
or
std
movsl
mov
xor
loopne
out
lods
sbb
shrl
stos
clc
push
lret
xor
cmpsl
jmp
ficoml
data16
lea
cli
and
cwtl
jp
dec
jnp
pop
jmp
mov
loop
lret
add
xor
and
xor
and
lahf
dec
clc
add
lods
adc
sub
jno
add
jp
in
mov
icebp
stos
aas
insb
jno
repnz
js
xor
and
jne
cs
mov
in
mov
je
jnp
jmp
arpl
pusha
dec
lods
cltd
mov
sub
jnp
xchg
scas
mov
mov
dec
dec
cmp
xchg
fisubl
add
ficoml
scas
add
mov
sub
sti
add
and
lock
sbb
ss
lret
adc
dec
in
adc
nop
pop
movsl
mov
jo
cmpsl
out
out
mov
sbb
sbb
push
push
pop
xor
lods
push
push
mov
mov
xor
mov
out
xchg
pop
subb
call
push
cmpsb
repz
sti
xor
les
gs
popf
leave
imul
xchg
add
call
ficoms
fnstenv
sub
cmovo
cli
outsl
mov
mov
out
or
outsl
imul
push
push
rcr
dec
js
insb
pushf
sub
jle
lods
sbb
xor
push
mov
mov
sarl
xchg
cmpsl
addb
jae
lcall
pop
sbb
mov
mov
insl
xchg
sub
mov
inc
pop
mov
sub
cmp
ret
lods
imul
es
ds
xchg
sub
mov
dec
adc
int3
imul
adcb
into
int
pop
cltd
jnp
test
sbb
xor
dec
or
sub
mov
dec
xor
push
mov
imul
imul
clc
jns
sbb
sub
cmp
imul
cmc
add
pop
mov
data16
add
rorb
clc
push
pusha
inc
mov
cmp
out
jge
and
jne
and
jbe
xchg
cmpl
mov
jbe
les
and
out
cmp
fdivs
inc
rorl
cmpsl
rclb
ja
daa
ret
push
dec
hlt
fcompl
mov
push
push
cmpsl
hlt
rcll
or
cmp
pushf
test
add
dec
jne
mov
add
dec
add
test
dec
mov
insb
push
adc
cmpsl
lock
dec
xor
jle
sub
repz
jge
adc
cmp
mov
mov
ja
or
sbb
sub
mov
shll
adc
pop
lods
leave
xchg
adc
loopne
fsts
sti
rol
es
pop
hlt
fxch
mov
push
lods
test
out
shrb
js
lret
lahf
and
repnz
dec
lock
je
mov
jge
cmp
repnz
pop
adc
roll
pop
pop
jb
test
cli
pop
mov
jae
xchg
mov
into
cmp
sbb
and
es
jp
jg
xlat
mov
popa
aaa
popa
or
mov
add
and
imul
jecxz
mov
inc
pushf
sbb
dec
pop
insb
cmc
pusha
mov
es
jb
and
cmp
dec
fwait
pop
inc
dec
inc
pop
cld
mov
xor
push
jmp
jb
or
cmp
arpl
cmpsb
mov
push
jle
test
cmc
pop
xchg
jp
pusha
jge
mov
and
mov
je
cmp
stos
mov
adc
xchg
pop
fiadds
movsb
mov
mov
iret
call
ds
push
add
inc
pop
xor
movsb
add
xchg
subl
arpl
xchg
lods
mov
dec
cmp
dec
lret
fdivrl
xlat
xor
stos
out
inc
shlb
mov
mov
adc
lcall
out
jge
mov
js
inc
pop
dec
outsb
iret
jo
fdivp
out
cltd
lret
enter
ret
mov
cmp
lret
or
aas
ret
dec
dec
fstpl
cmp
outsl
mov
jl
or
mov
gs
mov
rcrl
inc
fdivrp
adc
sar
popa
lcall
cmpsl
sbb
loope
dec
call
loope
dec
adc
aas
xor
fs
or
in
pop
pop
shrl
push
iret
std
adcl
aaa
popa
push
xor
inc
hlt
loop
rclb
jo
xor
jne
popf
dec
jbe
mov
mov
xor
scas
cld
pop
stc
popf
inc
sbb
mov
outsb
xchg
movsb
dec
pop
adc
call
in
fildll
das
ja
xchg
into
xchg
mov
add
push
mov
sub
loop
or
scas
repnz
cmpsb
popa
loope
or
mov
insl
daa
test
jl
ljmp
push
pop
shl
push
xor
jmp
sub
scas
arpl
mov
inc
adc
das
inc
cld
dec
int3
test
int
pop
mov
divb
stos
dec
cmp
sub
es
adc
jno
dec
pop
sub
jno
mov
push
jle
aam
rorb
es
jle
dec
cltd
xor
lock
or
inc
shrl
mov
sub
xor
pop
lods
scas
jbe
dec
jp
xchg
sub
sub
paddsb
out
int
fistpll
test
daa
les
dec
and
jne
xchg
add
mov
inc
pop
xchg
add
movsl
adc
mov
rorl
ffreep
add
fs
negb
inc
jmp
fcmovne
push
push
mov
sbb
and
lea
fisubrl
add
inc
jno
addb
nop
sbb
inc
sar
imul
or
or
sub
call
iret
lods
mov
orl
xchg
ret
jmp
shll
out
adc
sbb
sub
out
lahf
popf
push
mov
cmc
loop
imulb
mov
jmp
sub
xchg
xor
idivb
sub
test
and
leave
cmc
shlb
ljmp
pop
pop
lds
movsl
push
xchg
scas
aad
sbb
lahf
stc
popa
data16
test
enter
mov
ret
lret
mov
adc
inc
repnz
push
push
aas
xorb
out
sarb
jg
rcll
jns
mov
aam
test
fidivrs
aas
icebp
icebp
jo
sti
xchg
xchg
call
sub
and
and
lahf
push
jge
pop
xor
repnz
add
cmp
mov
leave
xchg
inc
insl
or
daa
out
lcall
mov
and
enter
lods
cmpsl
cmp
jmp
jle
mov
fdivrl
jg
dec
mov
sahf
lahf
js
inc
cli
push
push
les
dec
push
inc
inc
outsb
mov
mov
mov
inc
out
xchg
jmp
idivl
pop
negl
lock
pushl
shrl
or
xor
push
mov
sti
xor
mov
jg
ret
icebp
aad
add
cmp
sub
mov
mov
pop
push
cmpl
loop
xchg
mov
jo
in
and
jmp
mov
dec
and
ret
out
or
lret
inc
out
push
repnz
mov
pop
in
push
sbb
ret
imul
xchg
sbb
push
push
outsb
daa
imul
movsb
ds
inc
push
into
adc
push
lcall
and
sub
push
add
mov
sbb
push
mov
out
mov
inc
xchg
sub
jnp
ret
mov
jmp
stc
in
imul
xchg
jecxz
pop
flds
and
adc
dec
ljmp
jb
and
js
cmp
dec
arpl
es
xlat
adc
std
jo
inc
cwtl
daa
and
adc
and
sub
fxch
lret
cs
sahf
jg
add
fcomi
stos
and
dec
scas
sub
or
mov
dec
hlt
out
sub
mov
aas
lds
das
push
fimuls
cmp
and
mov
mov
or
jno
aad
aaa
daa
mov
arpl
xchg
ljmp
les
movsl
mov
popa
inc
xlat
movsb
jecxz
popa
xchg
shrl
jmp
dec
test
or
mov
mov
xor
mov
pop
add
mov
ss
ret
sub
cld
mov
out
fldl
sarl
test
dec
clc
mov
dec
jp
jl
jnp
mov
pop
enter
and
insb
inc
out
jge
fistpll
in
dec
pop
push
aam
pop
xor
xchg
imull
test
xor
xlat
add
test
enter
mov
scas
js
sub
or
int3
jl
push
mov
imul
fs
xchg
mov
sbb
aam
loopne
lods
mov
pusha
ds
leave
movsb
loope
cmp
shll
pop
fwait
xor
sbb
stc
jle
testw
loop
adc
negb
ss
cmpsl
out
int3
cmpsb
rcll
cltd
dec
aam
mov
divl
arpl
in
pusha
inc
xor
mov
push
int
out
fwait
movsl
sahf
xchg
pop
arpl
push
mov
mov
or
test
inc
mov
pop
or
addb
dec
sbb
rorb
fwait
jle
sub
sub
addb
outsl
iret
jg
in
popf
mov
xor
sbb
jae
fsubrl
pop
cmpsb
and
and
rcrb
inc
jge
push
sbb
loope
inc
js
dec
into
sub
or
sub
enter
xchg
adc
xor
lods
incl
inc
fwait
into
repnz
outsb
stos
arpl
inc
push
nop
or
sub
mov
imul
popf
sub
inc
mov
out
popf
mov
pop
cltd
fcoms
leave
sub
jb
xor
div
push
and
push
inc
cmpsl
into
idivl
mov
int
jmp
sbb
jb
jle
in
add
pop
pop
mov
js
adc
jecxz
sarb
je
mov
stos
mov
cmp
bound
xchg
pop
repnz
and
aam
or
sbb
mov
cmp
lods
dec
leave
jmp
sar
mov
add
inc
rorb
mov
shl
outsb
cs
fistps
aad
and
fwait
es
cli
dec
repz
jne
xchg
cs
mov
pop
fcoms
cmp
sar
js
or
dec
lcall
pop
test
inc
ret
xchg
jmp
ret
enter
mov
shlb
add
out
xchg
mov
hlt
mov
shll
jbe
xchg
xor
mov
iret
sahf
add
jecxz
cmp
mov
push
popa
cmpb
arpl
jmp
imul
xchg
neg
inc
pop
xor
sbb
and
arpl
ja
pop
fsubrs
lods
les
push
add
add
or
cmp
inc
in
decb
jbe
cs
lcall
dec
in
mov
cld
and
out
mov
pusha
nop
repnz
cmp
sub
jnp
sub
subl
aaa
nop
sub
addr16
gs
sub
repz
xor
in
daa
adc
dec
sbb
cld
add
dec
scas
cwtl
loopne
iret
sbb
inc
sub
shll
repz
cmp
lahf
cli
jg
inc
stc
inc
icebp
clc
cmp
sbb
adc
jge
push
cmp
outsl
fnstenv
jge
out
shl
inc
cld
ljmp
roll
add
xchg
jl
in
xchg
and
or
cmpsl
sahf
mov
inc
xchg
inc
std
and
popf
ret
in
repnz
sbb
xchg
push
stos
inc
rcrb
bound
inc
es
sub
insl
xor
jecxz
sbb
shrb
pop
adc
mov
fucomp
xchg
ret
in
jb
in
sub
jmp
push
push
fs
les
sbb
lcall
pop
out
xor
push
push
pop
dec
or
sbb
lea
cmp
test
sub
dec
out
test
lahf
pop
sbb
je
mov
popa
lods
dec
jecxz
pop
ret
and
ljmp
xchg
pop
sbb
mov
inc
jmp
and
jbe
jmp
iret
mov
xchg
fnstcw
sbb
push
add
lods
js
xor
mov
gs
cmpsl
push
jo
jp
jecxz
adc
fcoms
cmp
jl
mov
or
sarb
jo
or
sbbl
and
pop
ret
imul
test
and
mov
xor
push
cmc
push
ja
xorl
aad
sahf
in
ret
push
lahf
fcmovnbe
insl
outsb
adc
or
xchg
jnp
lret
mov
adc
notb
cltd
mov
xlat
lods
xor
fidivl
push
mov
sbb
add
aas
popa
dec
lods
mov
xchg
repnz
cli
cli
call
jle
or
inc
sbb
lcall
test
icebp
push
popf
and
adc
shll
mov
mov
andl
sub
ja
mov
ffreep
xchg
ja
aas
repnz
sub
mov
adc
sbb
loopne
fcmovne
stc
nop
clc
cld
aam
adc
scas
inc
push
insl
jge
ja
aas
sbb
mov
push
or
add
add
and
or
mov
jle
aam
cmc
push
mov
and
mov
iret
mov
pop
xchg
fincstp
dec
push
adc
xlat
or
jne,pt
ret
cwtl
and
sbb
ss
movsb
je
add
jg
pop
psrad
arpl
cmp
stos
jb
subl
add
ret
stc
mov
cmp
inc
dec
push
call
in
push
je
imul
sub
test
xchg
sbb
ficomps
insl
rclb
push
jbe
loopne
jns
sbb
leave
mov
iret
shll
imul
cmp
push
xor
xor
int
adc
fstl
xor
enter
dec
jmp
